
293058e701935421c88a0a743b3c63b16910ac0f64f7ad6cd79fe13e2a698ca8.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	push   DWORD PTR [eax]
10001002:	call   DWORD PTR ds:0x100672b4
10001008:	ret    
10001009:	push   DWORD PTR [ecx]
1000100b:	call   DWORD PTR ds:0x100672b4
10001011:	ret    
10001012:	mov    DWORD PTR [ecx],0x100675a0
10001018:	jmp    0x10043390
1000101d:	push   esi
1000101e:	mov    esi,ecx
10001020:	mov    DWORD PTR [esi],0x100675a0
10001026:	call   0x10043390
1000102b:	test   BYTE PTR [esp+0x8],0x1
10001030:	je     0x10001039
10001032:	push   esi
10001033:	call   0x10042fe2
10001038:	pop    ecx
10001039:	mov    eax,esi
1000103b:	pop    esi
1000103c:	ret    0x4
1000103f:	push   ebp
10001040:	mov    ebp,esp
10001042:	push   DWORD PTR [ebp+0x14]
10001045:	push   DWORD PTR [ebp+0x10]
10001048:	push   DWORD PTR [ebp+0xc]
1000104b:	push   DWORD PTR [ebp+0x8]
1000104e:	call   0x100433cf
10001053:	mov    eax,DWORD PTR [ebp+0x8]
10001056:	add    esp,0x10
10001059:	pop    ebp
1000105a:	ret    
1000105b:	push   ebp
1000105c:	mov    ebp,esp
1000105e:	push   DWORD PTR [ebp+0x14]
10001061:	push   DWORD PTR [ebp+0x10]
10001064:	push   DWORD PTR [ebp+0xc]
10001067:	push   DWORD PTR [ebp+0x8]
1000106a:	call   0x10042fe7
1000106f:	mov    eax,DWORD PTR [ebp+0x8]
10001072:	add    esp,0x10
10001075:	pop    ebp
10001076:	ret    
10001077:	push   0x4
10001079:	mov    eax,0x1005fe01
1000107e:	call   0x10059df5
10001083:	mov    esi,ecx
10001085:	mov    DWORD PTR [ebp-0x10],esi
10001088:	call   0x100432c1
1000108d:	and    DWORD PTR [ebp-0x4],0x0
10001091:	push   DWORD PTR [ebp+0x8]
10001094:	lea    ecx,[esi+0xc]
10001097:	mov    DWORD PTR [esi],0x1006c970
1000109d:	call   0x100011c9
100010a2:	mov    eax,esi
100010a4:	call   0x10059ecd
100010a9:	ret    0x4
100010ac:	push   esi
100010ad:	mov    esi,ecx
100010af:	push   0x0
100010b1:	push   0x1
100010b3:	lea    ecx,[esi+0xc]
100010b6:	mov    DWORD PTR [esi],0x1006c970
100010bc:	call   0x100012f0
100010c1:	mov    ecx,esi
100010c3:	pop    esi
100010c4:	jmp    0x10043390
100010c9:	push   esi
100010ca:	mov    esi,ecx
100010cc:	call   0x100010ac
100010d1:	test   BYTE PTR [esp+0x8],0x1
100010d6:	je     0x100010df
100010d8:	push   esi
100010d9:	call   0x10042fe2
100010de:	pop    ecx
100010df:	mov    eax,esi
100010e1:	pop    esi
100010e2:	ret    0x4
100010e5:	mov    DWORD PTR [ecx],0x1006c988
100010eb:	jmp    0x100010ac
100010f0:	push   esi
100010f1:	mov    esi,ecx
100010f3:	mov    DWORD PTR [esi],0x1006c988
100010f9:	call   0x100010ac
100010fe:	test   BYTE PTR [esp+0x8],0x1
10001103:	je     0x1000110c
10001105:	push   esi
10001106:	call   0x10042fe2
1000110b:	pop    ecx
1000110c:	mov    eax,esi
1000110e:	pop    esi
1000110f:	ret    0x4
10001112:	push   esi
10001113:	push   DWORD PTR [esp+0x8]
10001117:	mov    esi,ecx
10001119:	call   0x1000112a
1000111e:	mov    DWORD PTR [esi],0x1006c988
10001124:	mov    eax,esi
10001126:	pop    esi
10001127:	ret    0x4
1000112a:	push   0x4
1000112c:	mov    eax,0x1005fe01
10001131:	call   0x10059df5
10001136:	mov    esi,ecx
10001138:	mov    DWORD PTR [ebp-0x10],esi
1000113b:	mov    edi,DWORD PTR [ebp+0x8]
1000113e:	push   edi
1000113f:	call   0x10043338
10001144:	and    DWORD PTR [ebp-0x4],0x0
10001148:	add    edi,0xc
1000114b:	push   edi
1000114c:	lea    ecx,[esi+0xc]
1000114f:	mov    DWORD PTR [esi],0x1006c970
10001155:	call   0x100011c9
1000115a:	mov    eax,esi
1000115c:	call   0x10059ecd
10001161:	ret    0x4
10001164:	push   0x28
10001166:	mov    eax,0x1006376a
1000116b:	call   0x10059e5e
10001170:	mov    eax,DWORD PTR [ebp+0x8]
10001173:	lea    edx,[ebp-0x34]
10001176:	push   edx
10001177:	push   eax
10001178:	call   0x10019c6d
1000117d:	and    DWORD PTR [ebp-0x4],0x0
10001181:	lea    edi,[ebp-0x34]
10001184:	call   0x10019b2d
10001189:	mov    bl,al
1000118b:	neg    bl
1000118d:	push   0x0
1000118f:	sbb    bl,bl
10001191:	push   0x1
10001193:	lea    ecx,[ebp-0x30]
10001196:	inc    bl
10001198:	call   0x100012f0
1000119d:	mov    al,bl
1000119f:	call   0x10059ee1
100011a4:	ret    0x4
100011a7:	push   esi
100011a8:	mov    esi,ecx
100011aa:	push   0x0
100011ac:	mov    DWORD PTR [esi+0x18],0xf
100011b3:	call   0x1000141c
100011b8:	push   DWORD PTR [esp+0x8]
100011bc:	mov    ecx,esi
100011be:	call   0x100012d3
100011c3:	mov    eax,esi
100011c5:	pop    esi
100011c6:	ret    0x4
100011c9:	push   esi
100011ca:	mov    esi,ecx
100011cc:	push   0x0
100011ce:	mov    DWORD PTR [esi+0x18],0xf
100011d5:	call   0x1000141c
100011da:	push   0xffffffff
100011dc:	push   0x0
100011de:	push   DWORD PTR [esp+0x10]
100011e2:	mov    ecx,esi
100011e4:	call   0x10001241
100011e9:	mov    eax,esi
100011eb:	pop    esi
100011ec:	ret    0x4
100011ef:	cmp    DWORD PTR [ecx+0x18],0x10
100011f3:	jb     0x100011f9
100011f5:	mov    eax,DWORD PTR [ecx+0x4]
100011f8:	ret    
100011f9:	lea    eax,[ecx+0x4]
100011fc:	ret    
100011fd:	push   0x0
100011ff:	mov    eax,0x100622e3
10001204:	call   0x10059df5
10001209:	mov    esi,DWORD PTR [ebp+0x8]
1000120c:	and    DWORD PTR [ebp-0x4],0x0
10001210:	push   DWORD PTR [esi+0x18]
10001213:	call   DWORD PTR ds:0x10067078
10001219:	lea    eax,[esi+0xc]
1000121c:	call   0x10001496
10001221:	or     DWORD PTR [ebp-0x4],0xffffffff
10001225:	mov    eax,esi
10001227:	call   0x100014cb
1000122c:	call   0x10059ecd
10001231:	ret    0x4
10001234:	jmp    0x100014cb
10001239:	push   ecx
1000123a:	call   0x10001496
1000123f:	pop    ecx
10001240:	ret    
10001241:	push   ebp
10001242:	mov    ebp,esp
10001244:	mov    eax,DWORD PTR [ebp+0xc]
10001247:	push   ebx
10001248:	push   esi
10001249:	push   edi
1000124a:	mov    edi,DWORD PTR [ebp+0x8]
1000124d:	cmp    DWORD PTR [edi+0x14],eax
10001250:	mov    ebx,ecx
10001252:	jae    0x10001259
10001254:	call   0x100574ef
10001259:	mov    esi,DWORD PTR [edi+0x14]
1000125c:	mov    eax,DWORD PTR [ebp+0xc]
1000125f:	sub    esi,eax
10001261:	cmp    DWORD PTR [ebp+0x10],esi
10001264:	jae    0x10001269
10001266:	mov    esi,DWORD PTR [ebp+0x10]
10001269:	cmp    ebx,edi
1000126b:	mov    ecx,ebx
1000126d:	jne    0x10001287
1000126f:	push   0xffffffff
10001271:	add    esi,eax
10001273:	push   esi
10001274:	call   0x100013ad
10001279:	push   DWORD PTR [ebp+0xc]
1000127c:	mov    ecx,ebx
1000127e:	push   0x0
10001280:	call   0x100013ad
10001285:	jmp    0x100012ca
10001287:	push   0x0
10001289:	push   esi
1000128a:	call   0x10001438
1000128f:	test   al,al
10001291:	je     0x100012ca
10001293:	cmp    DWORD PTR [edi+0x18],0x10
10001297:	jb     0x1000129e
10001299:	mov    edi,DWORD PTR [edi+0x4]
1000129c:	jmp    0x100012a1
1000129e:	add    edi,0x4
100012a1:	mov    ecx,DWORD PTR [ebx+0x18]
100012a4:	cmp    ecx,0x10
100012a7:	jb     0x100012ae
100012a9:	mov    eax,DWORD PTR [ebx+0x4]
100012ac:	jmp    0x100012b1
100012ae:	lea    eax,[ebx+0x4]
100012b1:	mov    edx,DWORD PTR [ebp+0xc]
100012b4:	push   esi
100012b5:	add    edi,edx
100012b7:	push   edi
100012b8:	push   ecx
100012b9:	push   eax
100012ba:	call   0x1000103f
100012bf:	add    esp,0x10
100012c2:	push   esi
100012c3:	mov    ecx,ebx
100012c5:	call   0x1000141c
100012ca:	pop    edi
100012cb:	pop    esi
100012cc:	mov    eax,ebx
100012ce:	pop    ebx
100012cf:	pop    ebp
100012d0:	ret    0xc
100012d3:	push   esi
100012d4:	push   DWORD PTR [esp+0x8]
100012d8:	mov    esi,ecx
100012da:	call   0x10043450
100012df:	pop    ecx
100012e0:	push   eax
100012e1:	push   DWORD PTR [esp+0xc]
100012e5:	mov    ecx,esi
100012e7:	call   0x1000133b
100012ec:	pop    esi
100012ed:	ret    0x4
100012f0:	cmp    BYTE PTR [esp+0x4],0x0
100012f5:	push   esi
100012f6:	mov    esi,ecx
100012f8:	je     0x10001325
100012fa:	cmp    DWORD PTR [esi+0x18],0x10
100012fe:	jb     0x10001325
10001300:	cmp    DWORD PTR [esp+0xc],0x0
10001305:	lea    eax,[esi+0x4]
10001308:	push   edi
10001309:	mov    edi,DWORD PTR [eax]
1000130b:	jbe    0x1000131d
1000130d:	push   DWORD PTR [esp+0x10]
10001311:	push   edi
10001312:	push   0x10
10001314:	push   eax
10001315:	call   0x1000103f
1000131a:	add    esp,0x10
1000131d:	push   edi
1000131e:	call   0x10042fe2
10001323:	pop    ecx
10001324:	pop    edi
10001325:	push   DWORD PTR [esp+0xc]
10001329:	mov    ecx,esi
1000132b:	mov    DWORD PTR [esi+0x18],0xf
10001332:	call   0x1000141c
10001337:	pop    esi
10001338:	ret    0x8
1000133b:	push   ebp
1000133c:	mov    ebp,esp
1000133e:	push   esi
1000133f:	push   edi
10001340:	mov    edi,DWORD PTR [ebp+0x8]
10001343:	push   edi
10001344:	mov    esi,ecx
10001346:	call   0x100015e2
1000134b:	test   al,al
1000134d:	je     0x1000136d
1000134f:	cmp    DWORD PTR [esi+0x18],0x10
10001353:	jb     0x1000135a
10001355:	mov    eax,DWORD PTR [esi+0x4]
10001358:	jmp    0x1000135d
1000135a:	lea    eax,[esi+0x4]
1000135d:	push   DWORD PTR [ebp+0xc]
10001360:	sub    edi,eax
10001362:	push   edi
10001363:	push   esi
10001364:	mov    ecx,esi
10001366:	call   0x10001241
1000136b:	jmp    0x100013a7
1000136d:	push   0x0
1000136f:	push   DWORD PTR [ebp+0xc]
10001372:	mov    ecx,esi
10001374:	call   0x10001438
10001379:	test   al,al
1000137b:	je     0x100013a5
1000137d:	mov    ecx,DWORD PTR [esi+0x18]
10001380:	cmp    ecx,0x10
10001383:	jb     0x1000138a
10001385:	mov    eax,DWORD PTR [esi+0x4]
10001388:	jmp    0x1000138d
1000138a:	lea    eax,[esi+0x4]
1000138d:	push   DWORD PTR [ebp+0xc]
10001390:	push   edi
10001391:	push   ecx
10001392:	push   eax
10001393:	call   0x1000103f
10001398:	add    esp,0x10
1000139b:	push   DWORD PTR [ebp+0xc]
1000139e:	mov    ecx,esi
100013a0:	call   0x1000141c
100013a5:	mov    eax,esi
100013a7:	pop    edi
100013a8:	pop    esi
100013a9:	pop    ebp
100013aa:	ret    0x8
100013ad:	push   ebp
100013ae:	mov    ebp,esp
100013b0:	push   esi
100013b1:	push   edi
100013b2:	mov    edi,DWORD PTR [ebp+0x8]
100013b5:	mov    esi,ecx
100013b7:	cmp    DWORD PTR [esi+0x14],edi
100013ba:	jae    0x100013c1
100013bc:	call   0x100574ef
100013c1:	mov    eax,DWORD PTR [esi+0x14]
100013c4:	sub    eax,edi
100013c6:	cmp    eax,DWORD PTR [ebp+0xc]
100013c9:	jae    0x100013ce
100013cb:	mov    DWORD PTR [ebp+0xc],eax
100013ce:	cmp    DWORD PTR [ebp+0xc],0x0
100013d2:	jbe    0x10001414
100013d4:	mov    ecx,DWORD PTR [esi+0x18]
100013d7:	cmp    ecx,0x10
100013da:	push   ebx
100013db:	lea    edx,[esi+0x4]
100013de:	jb     0x100013e4
100013e0:	mov    ebx,DWORD PTR [edx]
100013e2:	jmp    0x100013e6
100013e4:	mov    ebx,edx
100013e6:	cmp    ecx,0x10
100013e9:	jb     0x100013ed
100013eb:	mov    edx,DWORD PTR [edx]
100013ed:	sub    eax,DWORD PTR [ebp+0xc]
100013f0:	add    ebx,edi
100013f2:	add    ebx,DWORD PTR [ebp+0xc]
100013f5:	push   eax
100013f6:	push   ebx
100013f7:	sub    ecx,edi
100013f9:	push   ecx
100013fa:	add    edx,edi
100013fc:	push   edx
100013fd:	call   0x1000105b
10001402:	mov    eax,DWORD PTR [esi+0x14]
10001405:	sub    eax,DWORD PTR [ebp+0xc]
10001408:	add    esp,0x10
1000140b:	push   eax
1000140c:	mov    ecx,esi
1000140e:	call   0x1000141c
10001413:	pop    ebx
10001414:	pop    edi
10001415:	mov    eax,esi
10001417:	pop    esi
10001418:	pop    ebp
10001419:	ret    0x8
1000141c:	cmp    DWORD PTR [ecx+0x18],0x10
10001420:	mov    eax,DWORD PTR [esp+0x4]
10001424:	mov    DWORD PTR [ecx+0x14],eax
10001427:	jb     0x1000142e
10001429:	mov    ecx,DWORD PTR [ecx+0x4]
1000142c:	jmp    0x10001431
1000142e:	add    ecx,0x4
10001431:	mov    BYTE PTR [ecx+eax*1],0x0
10001435:	ret    0x4
10001438:	push   esi
10001439:	push   edi
1000143a:	mov    edi,DWORD PTR [esp+0xc]
1000143e:	cmp    edi,0xfffffffe
10001441:	mov    esi,ecx
10001443:	jbe    0x1000144a
10001445:	call   0x100574b0
1000144a:	cmp    DWORD PTR [esi+0x18],edi
1000144d:	jae    0x1000145c
1000144f:	push   DWORD PTR [esi+0x14]
10001452:	mov    ecx,esi
10001454:	push   edi
10001455:	call   0x10001500
1000145a:	jmp    0x10001489
1000145c:	cmp    BYTE PTR [esp+0x10],0x0
10001461:	je     0x1000147d
10001463:	cmp    edi,0x10
10001466:	jae    0x1000147d
10001468:	mov    eax,DWORD PTR [esi+0x14]
1000146b:	cmp    edi,eax
1000146d:	jae    0x10001471
1000146f:	mov    eax,edi
10001471:	push   eax
10001472:	push   0x1
10001474:	mov    ecx,esi
10001476:	call   0x100012f0
1000147b:	jmp    0x10001489
1000147d:	test   edi,edi
1000147f:	jne    0x10001489
10001481:	push   edi
10001482:	mov    ecx,esi
10001484:	call   0x1000141c
10001489:	xor    eax,eax
1000148b:	cmp    eax,edi
1000148d:	sbb    eax,eax
1000148f:	pop    edi
10001490:	neg    eax
10001492:	pop    esi
10001493:	ret    0x8
10001496:	push   ebp
10001497:	mov    ebp,esp
10001499:	and    esp,0xfffffff8
1000149c:	push   ecx
1000149d:	push   ecx
1000149e:	push   ebx
1000149f:	push   edi
100014a0:	mov    edi,eax
100014a2:	mov    eax,DWORD PTR [edi+0x4]
100014a5:	mov    ecx,DWORD PTR [eax]
100014a7:	push   eax
100014a8:	push   edi
100014a9:	push   ecx
100014aa:	push   edi
100014ab:	lea    ebx,[esp+0x18]
100014af:	call   0x10001616
100014b4:	push   DWORD PTR [edi+0x4]
100014b7:	call   0x10042fe2
100014bc:	and    DWORD PTR [edi+0x4],0x0
100014c0:	and    DWORD PTR [edi+0x8],0x0
100014c4:	pop    ecx
100014c5:	pop    edi
100014c6:	pop    ebx
100014c7:	mov    esp,ebp
100014c9:	pop    ebp
100014ca:	ret    
100014cb:	push   ebp
100014cc:	mov    ebp,esp
100014ce:	and    esp,0xfffffff8
100014d1:	push   ecx
100014d2:	push   ecx
100014d3:	push   ebx
100014d4:	push   edi
100014d5:	mov    edi,eax
100014d7:	mov    eax,DWORD PTR [edi+0x4]
100014da:	mov    ecx,DWORD PTR [eax]
100014dc:	push   eax
100014dd:	push   edi
100014de:	push   ecx
100014df:	push   edi
100014e0:	lea    ebx,[esp+0x18]
100014e4:	call   0x100016c2
100014e9:	push   DWORD PTR [edi+0x4]
100014ec:	call   0x10042fe2
100014f1:	and    DWORD PTR [edi+0x4],0x0
100014f5:	and    DWORD PTR [edi+0x8],0x0
100014f9:	pop    ecx
100014fa:	pop    edi
100014fb:	pop    ebx
100014fc:	mov    esp,ebp
100014fe:	pop    ebp
100014ff:	ret    
10001500:	push   0xc
10001502:	mov    eax,0x1005fdde
10001507:	call   0x10059e28
1000150c:	mov    edi,ecx
1000150e:	mov    DWORD PTR [ebp-0x18],edi
10001511:	mov    esi,DWORD PTR [ebp+0x8]
10001514:	or     esi,0xf
10001517:	cmp    esi,0xfffffffe
1000151a:	jbe    0x10001521
1000151c:	mov    esi,DWORD PTR [ebp+0x8]
1000151f:	jmp    0x10001546
10001521:	xor    edx,edx
10001523:	push   0x3
10001525:	mov    eax,esi
10001527:	pop    ebx
10001528:	div    ebx
1000152a:	mov    ecx,DWORD PTR [edi+0x18]
1000152d:	mov    DWORD PTR [ebp-0x14],ecx
10001530:	shr    DWORD PTR [ebp-0x14],1
10001533:	mov    edx,DWORD PTR [ebp-0x14]
10001536:	cmp    eax,edx
10001538:	jae    0x10001546
1000153a:	push   0xfffffffe
1000153c:	pop    eax
1000153d:	sub    eax,edx
1000153f:	cmp    ecx,eax
10001541:	ja     0x10001546
10001543:	lea    esi,[edx+ecx*1]
10001546:	and    DWORD PTR [ebp-0x4],0x0
1000154a:	lea    eax,[esi+0x1]
1000154d:	push   0x0
1000154f:	push   eax
10001550:	call   0x10001ebe
10001555:	pop    ecx
10001556:	pop    ecx
10001557:	mov    ebx,eax
10001559:	jmp    0x10001585
1000155b:	mov    eax,DWORD PTR [ebp+0x8]
1000155e:	mov    DWORD PTR [ebp-0x10],esp
10001561:	mov    DWORD PTR [ebp+0x8],eax
10001564:	inc    eax
10001565:	push   0x0
10001567:	push   eax
10001568:	mov    BYTE PTR [ebp-0x4],0x2
1000156c:	call   0x10001ebe
10001571:	pop    ecx
10001572:	mov    DWORD PTR [ebp-0x14],eax
10001575:	pop    ecx
10001576:	mov    eax,0x1000157c
1000157b:	ret    
1000157c:	mov    edi,DWORD PTR [ebp-0x18]
1000157f:	mov    esi,DWORD PTR [ebp+0x8]
10001582:	mov    ebx,DWORD PTR [ebp-0x14]
10001585:	cmp    DWORD PTR [ebp+0xc],0x0
10001589:	jbe    0x100015aa
1000158b:	cmp    DWORD PTR [edi+0x18],0x10
1000158f:	jb     0x10001596
10001591:	mov    eax,DWORD PTR [edi+0x4]
10001594:	jmp    0x10001599
10001596:	lea    eax,[edi+0x4]
10001599:	push   DWORD PTR [ebp+0xc]
1000159c:	push   eax
1000159d:	lea    eax,[esi+0x1]
100015a0:	push   eax
100015a1:	push   ebx
100015a2:	call   0x1000103f
100015a7:	add    esp,0x10
100015aa:	push   0x0
100015ac:	push   0x1
100015ae:	mov    ecx,edi
100015b0:	call   0x100012f0
100015b5:	push   DWORD PTR [ebp+0xc]
100015b8:	mov    ecx,edi
100015ba:	mov    DWORD PTR [edi+0x4],ebx
100015bd:	mov    DWORD PTR [edi+0x18],esi
100015c0:	call   0x1000141c
100015c5:	call   0x10059ecd
100015ca:	ret    0x8
100015cd:	mov    ecx,DWORD PTR [ebp-0x18]
100015d0:	xor    esi,esi
100015d2:	push   esi
100015d3:	push   0x1
100015d5:	call   0x100012f0
100015da:	push   esi
100015db:	push   esi
100015dc:	call   0x10047942
100015e1:	int3   
100015e2:	push   esi
100015e3:	mov    esi,DWORD PTR [ecx+0x18]
100015e6:	cmp    esi,0x10
100015e9:	lea    eax,[ecx+0x4]
100015ec:	jb     0x100015f2
100015ee:	mov    edx,DWORD PTR [eax]
100015f0:	jmp    0x100015f4
100015f2:	mov    edx,eax
100015f4:	cmp    DWORD PTR [esp+0x8],edx
100015f8:	jb     0x10001610
100015fa:	cmp    esi,0x10
100015fd:	jb     0x10001601
100015ff:	mov    eax,DWORD PTR [eax]
10001601:	mov    ecx,DWORD PTR [ecx+0x14]
10001604:	add    ecx,eax
10001606:	cmp    ecx,DWORD PTR [esp+0x8]
1000160a:	jbe    0x10001610
1000160c:	mov    al,0x1
1000160e:	jmp    0x10001612
10001610:	xor    al,al
10001612:	pop    esi
10001613:	ret    0x4
10001616:	push   ebp
10001617:	mov    ebp,esp
10001619:	mov    eax,DWORD PTR [edi+0x4]
1000161c:	sub    esp,0x14
1000161f:	cmp    DWORD PTR [ebp+0x8],0x0
10001623:	push   esi
10001624:	mov    esi,DWORD PTR [eax]
10001626:	je     0x1000162d
10001628:	cmp    DWORD PTR [ebp+0x8],edi
1000162b:	je     0x10001632
1000162d:	call   0x10043605
10001632:	cmp    DWORD PTR [ebp+0xc],esi
10001635:	jne    0x1000167a
10001637:	cmp    DWORD PTR [ebp+0x10],0x0
1000163b:	mov    esi,DWORD PTR [edi+0x4]
1000163e:	je     0x10001645
10001640:	cmp    DWORD PTR [ebp+0x10],edi
10001643:	je     0x1000164a
10001645:	call   0x10043605
1000164a:	cmp    DWORD PTR [ebp+0x14],esi
1000164d:	jne    0x1000167a
1000164f:	mov    eax,DWORD PTR [edi+0x4]
10001652:	push   DWORD PTR [eax+0x4]
10001655:	mov    ecx,edi
10001657:	call   0x10001c9c
1000165c:	mov    eax,DWORD PTR [edi+0x4]
1000165f:	mov    DWORD PTR [eax+0x4],eax
10001662:	mov    eax,DWORD PTR [edi+0x4]
10001665:	and    DWORD PTR [edi+0x8],0x0
10001669:	mov    DWORD PTR [eax],eax
1000166b:	mov    eax,DWORD PTR [edi+0x4]
1000166e:	mov    DWORD PTR [eax+0x8],eax
10001671:	mov    eax,DWORD PTR [edi+0x4]
10001674:	mov    eax,DWORD PTR [eax]
10001676:	mov    DWORD PTR [ebx],edi
10001678:	jmp    0x100016b8
1000167a:	mov    eax,DWORD PTR [ebp+0x8]
1000167d:	test   eax,eax
1000167f:	je     0x10001686
10001681:	cmp    eax,DWORD PTR [ebp+0x10]
10001684:	je     0x1000168b
10001686:	call   0x10043605
1000168b:	mov    eax,DWORD PTR [ebp+0xc]
1000168e:	cmp    eax,DWORD PTR [ebp+0x14]
10001691:	mov    ecx,DWORD PTR [ebp+0x8]
10001694:	je     0x100016b6
10001696:	lea    esi,[ebp+0x8]
10001699:	mov    DWORD PTR [ebp-0x8],ecx
1000169c:	mov    DWORD PTR [ebp-0x4],eax
1000169f:	call   0x10001e71
100016a4:	push   DWORD PTR [ebp-0x4]
100016a7:	lea    eax,[ebp-0x10]
100016aa:	push   DWORD PTR [ebp-0x8]
100016ad:	push   eax
100016ae:	push   edi
100016af:	call   0x1000176e
100016b4:	jmp    0x1000167a
100016b6:	mov    DWORD PTR [ebx],ecx
100016b8:	mov    DWORD PTR [ebx+0x4],eax
100016bb:	mov    eax,ebx
100016bd:	pop    esi
100016be:	leave  
100016bf:	ret    0x10
100016c2:	push   ebp
100016c3:	mov    ebp,esp
100016c5:	mov    eax,DWORD PTR [edi+0x4]
100016c8:	sub    esp,0x14
100016cb:	cmp    DWORD PTR [ebp+0x8],0x0
100016cf:	push   esi
100016d0:	mov    esi,DWORD PTR [eax]
100016d2:	je     0x100016d9
100016d4:	cmp    DWORD PTR [ebp+0x8],edi
100016d7:	je     0x100016de
100016d9:	call   0x10043605
100016de:	cmp    DWORD PTR [ebp+0xc],esi
100016e1:	jne    0x10001726
100016e3:	cmp    DWORD PTR [ebp+0x10],0x0
100016e7:	mov    esi,DWORD PTR [edi+0x4]
100016ea:	je     0x100016f1
100016ec:	cmp    DWORD PTR [ebp+0x10],edi
100016ef:	je     0x100016f6
100016f1:	call   0x10043605
100016f6:	cmp    DWORD PTR [ebp+0x14],esi
100016f9:	jne    0x10001726
100016fb:	mov    eax,DWORD PTR [edi+0x4]
100016fe:	push   DWORD PTR [eax+0x4]
10001701:	mov    ecx,edi
10001703:	call   0x10001d50
10001708:	mov    eax,DWORD PTR [edi+0x4]
1000170b:	mov    DWORD PTR [eax+0x4],eax
1000170e:	mov    eax,DWORD PTR [edi+0x4]
10001711:	and    DWORD PTR [edi+0x8],0x0
10001715:	mov    DWORD PTR [eax],eax
10001717:	mov    eax,DWORD PTR [edi+0x4]
1000171a:	mov    DWORD PTR [eax+0x8],eax
1000171d:	mov    eax,DWORD PTR [edi+0x4]
10001720:	mov    eax,DWORD PTR [eax]
10001722:	mov    DWORD PTR [ebx],edi
10001724:	jmp    0x10001764
10001726:	mov    eax,DWORD PTR [ebp+0x8]
10001729:	test   eax,eax
1000172b:	je     0x10001732
1000172d:	cmp    eax,DWORD PTR [ebp+0x10]
10001730:	je     0x10001737
10001732:	call   0x10043605
10001737:	mov    eax,DWORD PTR [ebp+0xc]
1000173a:	cmp    eax,DWORD PTR [ebp+0x14]
1000173d:	mov    ecx,DWORD PTR [ebp+0x8]
10001740:	je     0x10001762
10001742:	lea    esi,[ebp+0x8]
10001745:	mov    DWORD PTR [ebp-0x8],ecx
10001748:	mov    DWORD PTR [ebp-0x4],eax
1000174b:	call   0x10001e24
10001750:	push   DWORD PTR [ebp-0x4]
10001753:	lea    eax,[ebp-0x10]
10001756:	push   DWORD PTR [ebp-0x8]
10001759:	push   eax
1000175a:	push   edi
1000175b:	call   0x100019f8
10001760:	jmp    0x10001726
10001762:	mov    DWORD PTR [ebx],ecx
10001764:	mov    DWORD PTR [ebx+0x4],eax
10001767:	mov    eax,ebx
10001769:	pop    esi
1000176a:	leave  
1000176b:	ret    0x10
1000176e:	push   0x44
10001770:	mov    eax,0x10060b46
10001775:	call   0x10059df5
1000177a:	mov    ebx,DWORD PTR [ebp+0x14]
1000177d:	cmp    BYTE PTR [ebx+0x11],0x0
10001781:	je     0x100017b5
10001783:	push   0x1006dcfc
10001788:	lea    ecx,[ebp-0x28]
1000178b:	call   0x100011a7
10001790:	and    DWORD PTR [ebp-0x4],0x0
10001794:	lea    eax,[ebp-0x28]
10001797:	push   eax
10001798:	lea    ecx,[ebp-0x50]
1000179b:	call   0x10001077
100017a0:	push   0x10076428
100017a5:	lea    eax,[ebp-0x50]
100017a8:	push   eax
100017a9:	mov    DWORD PTR [ebp-0x50],0x1006c988
100017b0:	call   0x10047942
100017b5:	lea    esi,[ebp+0x10]
100017b8:	call   0x10001e71
100017bd:	mov    ecx,DWORD PTR [ebx]
100017bf:	cmp    BYTE PTR [ecx+0x11],0x0
100017c3:	je     0x100017ca
100017c5:	mov    edi,DWORD PTR [ebx+0x8]
100017c8:	jmp    0x100017e1
100017ca:	mov    eax,DWORD PTR [ebx+0x8]
100017cd:	cmp    BYTE PTR [eax+0x11],0x0
100017d1:	je     0x100017d7
100017d3:	mov    edi,ecx
100017d5:	jmp    0x100017e1
100017d7:	mov    eax,DWORD PTR [ebp+0x14]
100017da:	cmp    eax,ebx
100017dc:	mov    edi,DWORD PTR [eax+0x8]
100017df:	jne    0x10001857
100017e1:	cmp    BYTE PTR [edi+0x11],0x0
100017e5:	mov    esi,DWORD PTR [ebx+0x4]
100017e8:	jne    0x100017ed
100017ea:	mov    DWORD PTR [edi+0x4],esi
100017ed:	mov    ecx,DWORD PTR [ebp+0x8]
100017f0:	mov    eax,DWORD PTR [ecx+0x4]
100017f3:	cmp    DWORD PTR [eax+0x4],ebx
100017f6:	jne    0x100017fd
100017f8:	mov    DWORD PTR [eax+0x4],edi
100017fb:	jmp    0x10001808
100017fd:	cmp    DWORD PTR [esi],ebx
100017ff:	jne    0x10001805
10001801:	mov    DWORD PTR [esi],edi
10001803:	jmp    0x10001808
10001805:	mov    DWORD PTR [esi+0x8],edi
10001808:	mov    edx,DWORD PTR [ecx+0x4]
1000180b:	cmp    DWORD PTR [edx],ebx
1000180d:	jne    0x1000182b
1000180f:	cmp    BYTE PTR [edi+0x11],0x0
10001813:	je     0x10001819
10001815:	mov    ecx,esi
10001817:	jmp    0x10001829
10001819:	mov    eax,DWORD PTR [edi]
1000181b:	mov    ecx,edi
1000181d:	jmp    0x10001823
1000181f:	mov    ecx,eax
10001821:	mov    eax,DWORD PTR [ecx]
10001823:	cmp    BYTE PTR [eax+0x11],0x0
10001827:	je     0x1000181f
10001829:	mov    DWORD PTR [edx],ecx
1000182b:	mov    eax,DWORD PTR [ebp+0x8]
1000182e:	mov    edx,DWORD PTR [eax+0x4]
10001831:	cmp    DWORD PTR [edx+0x8],ebx
10001834:	jne    0x100018b1
10001836:	cmp    BYTE PTR [edi+0x11],0x0
1000183a:	je     0x10001840
1000183c:	mov    ecx,esi
1000183e:	jmp    0x10001852
10001840:	mov    eax,DWORD PTR [edi+0x8]
10001843:	mov    ecx,edi
10001845:	jmp    0x1000184c
10001847:	mov    ecx,eax
10001849:	mov    eax,DWORD PTR [ecx+0x8]
1000184c:	cmp    BYTE PTR [eax+0x11],0x0
10001850:	je     0x10001847
10001852:	mov    DWORD PTR [edx+0x8],ecx
10001855:	jmp    0x100018b1
10001857:	mov    DWORD PTR [ecx+0x4],eax
1000185a:	mov    ecx,DWORD PTR [ebx]
1000185c:	mov    DWORD PTR [eax],ecx
1000185e:	cmp    eax,DWORD PTR [ebx+0x8]
10001861:	jne    0x10001867
10001863:	mov    esi,eax
10001865:	jmp    0x10001881
10001867:	cmp    BYTE PTR [edi+0x11],0x0
1000186b:	mov    esi,DWORD PTR [eax+0x4]
1000186e:	jne    0x10001873
10001870:	mov    DWORD PTR [edi+0x4],esi
10001873:	mov    DWORD PTR [esi],edi
10001875:	mov    ecx,DWORD PTR [ebx+0x8]
10001878:	mov    DWORD PTR [eax+0x8],ecx
1000187b:	mov    ecx,DWORD PTR [ebx+0x8]
1000187e:	mov    DWORD PTR [ecx+0x4],eax
10001881:	mov    ecx,DWORD PTR [ebp+0x8]
10001884:	mov    ecx,DWORD PTR [ecx+0x4]
10001887:	cmp    DWORD PTR [ecx+0x4],ebx
1000188a:	jne    0x10001891
1000188c:	mov    DWORD PTR [ecx+0x4],eax
1000188f:	jmp    0x1000189f
10001891:	mov    ecx,DWORD PTR [ebx+0x4]
10001894:	cmp    DWORD PTR [ecx],ebx
10001896:	jne    0x1000189c
10001898:	mov    DWORD PTR [ecx],eax
1000189a:	jmp    0x1000189f
1000189c:	mov    DWORD PTR [ecx+0x8],eax
1000189f:	mov    ecx,DWORD PTR [ebx+0x4]
100018a2:	mov    DWORD PTR [eax+0x4],ecx
100018a5:	mov    dl,BYTE PTR [ebx+0x10]
100018a8:	mov    cl,BYTE PTR [eax+0x10]
100018ab:	mov    BYTE PTR [eax+0x10],dl
100018ae:	mov    BYTE PTR [ebx+0x10],cl
100018b1:	cmp    BYTE PTR [ebx+0x10],0x1
100018b5:	jne    0x100019cd
100018bb:	jmp    0x10001981
100018c0:	cmp    BYTE PTR [edi+0x10],0x1
100018c4:	jne    0x100019c9
100018ca:	mov    ecx,DWORD PTR [esi]
100018cc:	cmp    edi,ecx
100018ce:	jne    0x10001947
100018d0:	mov    ecx,DWORD PTR [esi+0x8]
100018d3:	cmp    BYTE PTR [ecx+0x10],0x0
100018d7:	jne    0x100018ee
100018d9:	push   DWORD PTR [ebp+0x8]
100018dc:	mov    BYTE PTR [ecx+0x10],0x1
100018e0:	mov    ecx,esi
100018e2:	mov    BYTE PTR [esi+0x10],0x0
100018e6:	call   0x10001cce
100018eb:	mov    ecx,DWORD PTR [esi+0x8]
100018ee:	cmp    BYTE PTR [ecx+0x11],0x0
100018f2:	jne    0x1000197c
100018f8:	mov    eax,DWORD PTR [ecx]
100018fa:	cmp    BYTE PTR [eax+0x10],0x1
100018fe:	jne    0x10001909
10001900:	mov    eax,DWORD PTR [ecx+0x8]
10001903:	cmp    BYTE PTR [eax+0x10],0x1
10001907:	je     0x10001978
10001909:	mov    eax,DWORD PTR [ecx+0x8]
1000190c:	cmp    BYTE PTR [eax+0x10],0x1
10001910:	jne    0x10001927
10001912:	mov    eax,DWORD PTR [ecx]
10001914:	push   DWORD PTR [ebp+0x8]
10001917:	mov    BYTE PTR [eax+0x10],0x1
1000191b:	mov    BYTE PTR [ecx+0x10],0x0
1000191f:	call   0x10001d0e
10001924:	mov    ecx,DWORD PTR [esi+0x8]
10001927:	mov    al,BYTE PTR [esi+0x10]
1000192a:	push   DWORD PTR [ebp+0x8]
1000192d:	mov    BYTE PTR [ecx+0x10],al
10001930:	mov    BYTE PTR [esi+0x10],0x1
10001934:	mov    eax,DWORD PTR [ecx+0x8]
10001937:	mov    ecx,esi
10001939:	mov    BYTE PTR [eax+0x10],0x1
1000193d:	call   0x10001cce
10001942:	jmp    0x100019c9
10001947:	cmp    BYTE PTR [ecx+0x10],0x0
1000194b:	jne    0x10001961
1000194d:	push   DWORD PTR [ebp+0x8]
10001950:	mov    BYTE PTR [ecx+0x10],0x1
10001954:	mov    ecx,esi
10001956:	mov    BYTE PTR [esi+0x10],0x0
1000195a:	call   0x10001d0e
1000195f:	mov    ecx,DWORD PTR [esi]
10001961:	cmp    BYTE PTR [ecx+0x11],0x0
10001965:	jne    0x1000197c
10001967:	mov    eax,DWORD PTR [ecx+0x8]
1000196a:	cmp    BYTE PTR [eax+0x10],0x1
1000196e:	jne    0x10001992
10001970:	mov    eax,DWORD PTR [ecx]
10001972:	cmp    BYTE PTR [eax+0x10],0x1
10001976:	jne    0x10001992
10001978:	mov    BYTE PTR [ecx+0x10],0x0
1000197c:	mov    edi,esi
1000197e:	mov    esi,DWORD PTR [esi+0x4]
10001981:	mov    eax,DWORD PTR [ebp+0x8]
10001984:	mov    eax,DWORD PTR [eax+0x4]
10001987:	cmp    edi,DWORD PTR [eax+0x4]
1000198a:	jne    0x100018c0
10001990:	jmp    0x100019c9
10001992:	mov    eax,DWORD PTR [ecx]
10001994:	cmp    BYTE PTR [eax+0x10],0x1
10001998:	jne    0x100019af
1000199a:	mov    eax,DWORD PTR [ecx+0x8]
1000199d:	push   DWORD PTR [ebp+0x8]
100019a0:	mov    BYTE PTR [eax+0x10],0x1
100019a4:	mov    BYTE PTR [ecx+0x10],0x0
100019a8:	call   0x10001cce
100019ad:	mov    ecx,DWORD PTR [esi]
100019af:	mov    al,BYTE PTR [esi+0x10]
100019b2:	push   DWORD PTR [ebp+0x8]
100019b5:	mov    BYTE PTR [ecx+0x10],al
100019b8:	mov    BYTE PTR [esi+0x10],0x1
100019bc:	mov    eax,DWORD PTR [ecx]
100019be:	mov    ecx,esi
100019c0:	mov    BYTE PTR [eax+0x10],0x1
100019c4:	call   0x10001d0e
100019c9:	mov    BYTE PTR [edi+0x10],0x1
100019cd:	push   ebx
100019ce:	call   0x10042fe2
100019d3:	pop    ecx
100019d4:	mov    ecx,DWORD PTR [ebp+0x8]
100019d7:	mov    eax,DWORD PTR [ecx+0x8]
100019da:	test   eax,eax
100019dc:	jbe    0x100019e2
100019de:	dec    eax
100019df:	mov    DWORD PTR [ecx+0x8],eax
100019e2:	mov    ecx,DWORD PTR [ebp+0x10]
100019e5:	mov    eax,DWORD PTR [ebp+0xc]
100019e8:	mov    DWORD PTR [eax],ecx
100019ea:	mov    ecx,DWORD PTR [ebp+0x14]
100019ed:	mov    DWORD PTR [eax+0x4],ecx
100019f0:	call   0x10059ecd
100019f5:	ret    0x10
100019f8:	push   0x44
100019fa:	mov    eax,0x10060b46
100019ff:	call   0x10059df5
10001a04:	mov    edi,DWORD PTR [ebp+0x14]
10001a07:	cmp    BYTE PTR [edi+0x4d],0x0
10001a0b:	je     0x10001a3f
10001a0d:	push   0x1006dcfc
10001a12:	lea    ecx,[ebp-0x28]
10001a15:	call   0x100011a7
10001a1a:	and    DWORD PTR [ebp-0x4],0x0
10001a1e:	lea    eax,[ebp-0x28]
10001a21:	push   eax
10001a22:	lea    ecx,[ebp-0x50]
10001a25:	call   0x10001077
10001a2a:	push   0x10076428
10001a2f:	lea    eax,[ebp-0x50]
10001a32:	push   eax
10001a33:	mov    DWORD PTR [ebp-0x50],0x1006c988
10001a3a:	call   0x10047942
10001a3f:	lea    esi,[ebp+0x10]
10001a42:	call   0x10001e24
10001a47:	mov    ecx,DWORD PTR [edi]
10001a49:	cmp    BYTE PTR [ecx+0x4d],0x0
10001a4d:	je     0x10001a54
10001a4f:	mov    ebx,DWORD PTR [edi+0x8]
10001a52:	jmp    0x10001a6b
10001a54:	mov    eax,DWORD PTR [edi+0x8]
10001a57:	cmp    BYTE PTR [eax+0x4d],0x0
10001a5b:	je     0x10001a61
10001a5d:	mov    ebx,ecx
10001a5f:	jmp    0x10001a6b
10001a61:	mov    eax,DWORD PTR [ebp+0x14]
10001a64:	cmp    eax,edi
10001a66:	mov    ebx,DWORD PTR [eax+0x8]
10001a69:	jne    0x10001ae1
10001a6b:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a6f:	mov    esi,DWORD PTR [edi+0x4]
10001a72:	jne    0x10001a77
10001a74:	mov    DWORD PTR [ebx+0x4],esi
10001a77:	mov    ecx,DWORD PTR [ebp+0x8]
10001a7a:	mov    eax,DWORD PTR [ecx+0x4]
10001a7d:	cmp    DWORD PTR [eax+0x4],edi
10001a80:	jne    0x10001a87
10001a82:	mov    DWORD PTR [eax+0x4],ebx
10001a85:	jmp    0x10001a92
10001a87:	cmp    DWORD PTR [esi],edi
10001a89:	jne    0x10001a8f
10001a8b:	mov    DWORD PTR [esi],ebx
10001a8d:	jmp    0x10001a92
10001a8f:	mov    DWORD PTR [esi+0x8],ebx
10001a92:	mov    edx,DWORD PTR [ecx+0x4]
10001a95:	cmp    DWORD PTR [edx],edi
10001a97:	jne    0x10001ab5
10001a99:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a9d:	je     0x10001aa3
10001a9f:	mov    ecx,esi
10001aa1:	jmp    0x10001ab3
10001aa3:	mov    eax,DWORD PTR [ebx]
10001aa5:	mov    ecx,ebx
10001aa7:	jmp    0x10001aad
10001aa9:	mov    ecx,eax
10001aab:	mov    eax,DWORD PTR [ecx]
10001aad:	cmp    BYTE PTR [eax+0x4d],0x0
10001ab1:	je     0x10001aa9
10001ab3:	mov    DWORD PTR [edx],ecx
10001ab5:	mov    eax,DWORD PTR [ebp+0x8]
10001ab8:	mov    edx,DWORD PTR [eax+0x4]
10001abb:	cmp    DWORD PTR [edx+0x8],edi
10001abe:	jne    0x10001b3b
10001ac0:	cmp    BYTE PTR [ebx+0x4d],0x0
10001ac4:	je     0x10001aca
10001ac6:	mov    ecx,esi
10001ac8:	jmp    0x10001adc
10001aca:	mov    eax,DWORD PTR [ebx+0x8]
10001acd:	mov    ecx,ebx
10001acf:	jmp    0x10001ad6
10001ad1:	mov    ecx,eax
10001ad3:	mov    eax,DWORD PTR [ecx+0x8]
10001ad6:	cmp    BYTE PTR [eax+0x4d],0x0
10001ada:	je     0x10001ad1
10001adc:	mov    DWORD PTR [edx+0x8],ecx
10001adf:	jmp    0x10001b3b
10001ae1:	mov    DWORD PTR [ecx+0x4],eax
10001ae4:	mov    ecx,DWORD PTR [edi]
10001ae6:	mov    DWORD PTR [eax],ecx
10001ae8:	cmp    eax,DWORD PTR [edi+0x8]
10001aeb:	jne    0x10001af1
10001aed:	mov    esi,eax
10001aef:	jmp    0x10001b0b
10001af1:	cmp    BYTE PTR [ebx+0x4d],0x0
10001af5:	mov    esi,DWORD PTR [eax+0x4]
10001af8:	jne    0x10001afd
10001afa:	mov    DWORD PTR [ebx+0x4],esi
10001afd:	mov    DWORD PTR [esi],ebx
10001aff:	mov    ecx,DWORD PTR [edi+0x8]
10001b02:	mov    DWORD PTR [eax+0x8],ecx
10001b05:	mov    ecx,DWORD PTR [edi+0x8]
10001b08:	mov    DWORD PTR [ecx+0x4],eax
10001b0b:	mov    ecx,DWORD PTR [ebp+0x8]
10001b0e:	mov    ecx,DWORD PTR [ecx+0x4]
10001b11:	cmp    DWORD PTR [ecx+0x4],edi
10001b14:	jne    0x10001b1b
10001b16:	mov    DWORD PTR [ecx+0x4],eax
10001b19:	jmp    0x10001b29
10001b1b:	mov    ecx,DWORD PTR [edi+0x4]
10001b1e:	cmp    DWORD PTR [ecx],edi
10001b20:	jne    0x10001b26
10001b22:	mov    DWORD PTR [ecx],eax
10001b24:	jmp    0x10001b29
10001b26:	mov    DWORD PTR [ecx+0x8],eax
10001b29:	mov    ecx,DWORD PTR [edi+0x4]
10001b2c:	mov    DWORD PTR [eax+0x4],ecx
10001b2f:	mov    dl,BYTE PTR [edi+0x4c]
10001b32:	mov    cl,BYTE PTR [eax+0x4c]
10001b35:	mov    BYTE PTR [eax+0x4c],dl
10001b38:	mov    BYTE PTR [edi+0x4c],cl
10001b3b:	cmp    BYTE PTR [edi+0x4c],0x1
10001b3f:	jne    0x10001c57
10001b45:	jmp    0x10001c0b
10001b4a:	cmp    BYTE PTR [ebx+0x4c],0x1
10001b4e:	jne    0x10001c53
10001b54:	mov    ecx,DWORD PTR [esi]
10001b56:	cmp    ebx,ecx
10001b58:	jne    0x10001bd1
10001b5a:	mov    ecx,DWORD PTR [esi+0x8]
10001b5d:	cmp    BYTE PTR [ecx+0x4c],0x0
10001b61:	jne    0x10001b78
10001b63:	push   DWORD PTR [ebp+0x8]
10001b66:	mov    BYTE PTR [ecx+0x4c],0x1
10001b6a:	mov    ecx,esi
10001b6c:	mov    BYTE PTR [esi+0x4c],0x0
10001b70:	call   0x10001da2
10001b75:	mov    ecx,DWORD PTR [esi+0x8]
10001b78:	cmp    BYTE PTR [ecx+0x4d],0x0
10001b7c:	jne    0x10001c06
10001b82:	mov    eax,DWORD PTR [ecx]
10001b84:	cmp    BYTE PTR [eax+0x4c],0x1
10001b88:	jne    0x10001b93
10001b8a:	mov    eax,DWORD PTR [ecx+0x8]
10001b8d:	cmp    BYTE PTR [eax+0x4c],0x1
10001b91:	je     0x10001c02
10001b93:	mov    eax,DWORD PTR [ecx+0x8]
10001b96:	cmp    BYTE PTR [eax+0x4c],0x1
10001b9a:	jne    0x10001bb1
10001b9c:	mov    eax,DWORD PTR [ecx]
10001b9e:	push   DWORD PTR [ebp+0x8]
10001ba1:	mov    BYTE PTR [eax+0x4c],0x1
10001ba5:	mov    BYTE PTR [ecx+0x4c],0x0
10001ba9:	call   0x10001de2
10001bae:	mov    ecx,DWORD PTR [esi+0x8]
10001bb1:	mov    al,BYTE PTR [esi+0x4c]
10001bb4:	push   DWORD PTR [ebp+0x8]
10001bb7:	mov    BYTE PTR [ecx+0x4c],al
10001bba:	mov    BYTE PTR [esi+0x4c],0x1
10001bbe:	mov    eax,DWORD PTR [ecx+0x8]
10001bc1:	mov    ecx,esi
10001bc3:	mov    BYTE PTR [eax+0x4c],0x1
10001bc7:	call   0x10001da2
10001bcc:	jmp    0x10001c53
10001bd1:	cmp    BYTE PTR [ecx+0x4c],0x0
10001bd5:	jne    0x10001beb
10001bd7:	push   DWORD PTR [ebp+0x8]
10001bda:	mov    BYTE PTR [ecx+0x4c],0x1
10001bde:	mov    ecx,esi
10001be0:	mov    BYTE PTR [esi+0x4c],0x0
10001be4:	call   0x10001de2
10001be9:	mov    ecx,DWORD PTR [esi]
10001beb:	cmp    BYTE PTR [ecx+0x4d],0x0
10001bef:	jne    0x10001c06
10001bf1:	mov    eax,DWORD PTR [ecx+0x8]
10001bf4:	cmp    BYTE PTR [eax+0x4c],0x1
10001bf8:	jne    0x10001c1c
10001bfa:	mov    eax,DWORD PTR [ecx]
10001bfc:	cmp    BYTE PTR [eax+0x4c],0x1
10001c00:	jne    0x10001c1c
10001c02:	mov    BYTE PTR [ecx+0x4c],0x0
10001c06:	mov    ebx,esi
10001c08:	mov    esi,DWORD PTR [esi+0x4]
10001c0b:	mov    eax,DWORD PTR [ebp+0x8]
10001c0e:	mov    eax,DWORD PTR [eax+0x4]
10001c11:	cmp    ebx,DWORD PTR [eax+0x4]
10001c14:	jne    0x10001b4a
10001c1a:	jmp    0x10001c53
10001c1c:	mov    eax,DWORD PTR [ecx]
10001c1e:	cmp    BYTE PTR [eax+0x4c],0x1
10001c22:	jne    0x10001c39
10001c24:	mov    eax,DWORD PTR [ecx+0x8]
10001c27:	push   DWORD PTR [ebp+0x8]
10001c2a:	mov    BYTE PTR [eax+0x4c],0x1
10001c2e:	mov    BYTE PTR [ecx+0x4c],0x0
10001c32:	call   0x10001da2
10001c37:	mov    ecx,DWORD PTR [esi]
10001c39:	mov    al,BYTE PTR [esi+0x4c]
10001c3c:	push   DWORD PTR [ebp+0x8]
10001c3f:	mov    BYTE PTR [ecx+0x4c],al
10001c42:	mov    BYTE PTR [esi+0x4c],0x1
10001c46:	mov    eax,DWORD PTR [ecx]
10001c48:	mov    ecx,esi
10001c4a:	mov    BYTE PTR [eax+0x4c],0x1
10001c4e:	call   0x10001de2
10001c53:	mov    BYTE PTR [ebx+0x4c],0x1
10001c57:	push   0x0
10001c59:	lea    esi,[edi+0xc]
10001c5c:	push   0x1
10001c5e:	lea    ecx,[esi+0x20]
10001c61:	call   0x100012f0
10001c66:	push   0x0
10001c68:	push   0x1
10001c6a:	mov    ecx,esi
10001c6c:	call   0x100012f0
10001c71:	push   edi
10001c72:	call   0x10042fe2
10001c77:	pop    ecx
10001c78:	mov    ecx,DWORD PTR [ebp+0x8]
10001c7b:	mov    eax,DWORD PTR [ecx+0x8]
10001c7e:	test   eax,eax
10001c80:	jbe    0x10001c86
10001c82:	dec    eax
10001c83:	mov    DWORD PTR [ecx+0x8],eax
10001c86:	mov    ecx,DWORD PTR [ebp+0x10]
10001c89:	mov    eax,DWORD PTR [ebp+0xc]
10001c8c:	mov    DWORD PTR [eax],ecx
10001c8e:	mov    ecx,DWORD PTR [ebp+0x14]
10001c91:	mov    DWORD PTR [eax+0x4],ecx
10001c94:	call   0x10059ecd
10001c99:	ret    0x10
10001c9c:	push   ebx
10001c9d:	push   esi
10001c9e:	push   edi
10001c9f:	mov    edi,DWORD PTR [esp+0x10]
10001ca3:	cmp    BYTE PTR [edi+0x11],0x0
10001ca7:	mov    ebx,ecx
10001ca9:	mov    esi,edi
10001cab:	jne    0x10001cc8
10001cad:	push   DWORD PTR [esi+0x8]
10001cb0:	mov    ecx,ebx
10001cb2:	call   0x10001c9c
10001cb7:	mov    esi,DWORD PTR [esi]
10001cb9:	push   edi
10001cba:	call   0x10042fe2
10001cbf:	cmp    BYTE PTR [esi+0x11],0x0
10001cc3:	pop    ecx
10001cc4:	mov    edi,esi
10001cc6:	je     0x10001cad
10001cc8:	pop    edi
10001cc9:	pop    esi
10001cca:	pop    ebx
10001ccb:	ret    0x4
10001cce:	mov    eax,DWORD PTR [ecx+0x8]
10001cd1:	mov    edx,DWORD PTR [eax]
10001cd3:	mov    DWORD PTR [ecx+0x8],edx
10001cd6:	mov    edx,DWORD PTR [eax]
10001cd8:	cmp    BYTE PTR [edx+0x11],0x0
10001cdc:	jne    0x10001ce1
10001cde:	mov    DWORD PTR [edx+0x4],ecx
10001ce1:	mov    edx,DWORD PTR [ecx+0x4]
10001ce4:	mov    DWORD PTR [eax+0x4],edx
10001ce7:	mov    edx,DWORD PTR [esp+0x4]
10001ceb:	mov    edx,DWORD PTR [edx+0x4]
10001cee:	cmp    ecx,DWORD PTR [edx+0x4]
10001cf1:	jne    0x10001cf8
10001cf3:	mov    DWORD PTR [edx+0x4],eax
10001cf6:	jmp    0x10001d06
10001cf8:	mov    edx,DWORD PTR [ecx+0x4]
10001cfb:	cmp    ecx,DWORD PTR [edx]
10001cfd:	jne    0x10001d03
10001cff:	mov    DWORD PTR [edx],eax
10001d01:	jmp    0x10001d06
10001d03:	mov    DWORD PTR [edx+0x8],eax
10001d06:	mov    DWORD PTR [eax],ecx
10001d08:	mov    DWORD PTR [ecx+0x4],eax
10001d0b:	ret    0x4
10001d0e:	mov    eax,DWORD PTR [ecx]
10001d10:	mov    edx,DWORD PTR [eax+0x8]
10001d13:	mov    DWORD PTR [ecx],edx
10001d15:	mov    edx,DWORD PTR [eax+0x8]
10001d18:	cmp    BYTE PTR [edx+0x11],0x0
10001d1c:	jne    0x10001d21
10001d1e:	mov    DWORD PTR [edx+0x4],ecx
10001d21:	mov    edx,DWORD PTR [ecx+0x4]
10001d24:	mov    DWORD PTR [eax+0x4],edx
10001d27:	mov    edx,DWORD PTR [esp+0x4]
10001d2b:	mov    edx,DWORD PTR [edx+0x4]
10001d2e:	cmp    ecx,DWORD PTR [edx+0x4]
10001d31:	jne    0x10001d38
10001d33:	mov    DWORD PTR [edx+0x4],eax
10001d36:	jmp    0x10001d47
10001d38:	mov    edx,DWORD PTR [ecx+0x4]
10001d3b:	cmp    ecx,DWORD PTR [edx+0x8]
10001d3e:	jne    0x10001d45
10001d40:	mov    DWORD PTR [edx+0x8],eax
10001d43:	jmp    0x10001d47
10001d45:	mov    DWORD PTR [edx],eax
10001d47:	mov    DWORD PTR [eax+0x8],ecx
10001d4a:	mov    DWORD PTR [ecx+0x4],eax
10001d4d:	ret    0x4
10001d50:	push   ebp
10001d51:	mov    ebp,esp
10001d53:	push   ecx
10001d54:	push   esi
10001d55:	push   edi
10001d56:	mov    edi,DWORD PTR [ebp+0x8]
10001d59:	cmp    BYTE PTR [edi+0x4d],0x0
10001d5d:	mov    DWORD PTR [ebp-0x4],ecx
10001d60:	mov    esi,edi
10001d62:	jne    0x10001d9c
10001d64:	push   ebx
10001d65:	push   DWORD PTR [esi+0x8]
10001d68:	mov    ecx,DWORD PTR [ebp-0x4]
10001d6b:	call   0x10001d50
10001d70:	mov    esi,DWORD PTR [esi]
10001d72:	push   0x0
10001d74:	lea    ebx,[edi+0xc]
10001d77:	push   0x1
10001d79:	lea    ecx,[ebx+0x20]
10001d7c:	call   0x100012f0
10001d81:	push   0x0
10001d83:	push   0x1
10001d85:	mov    ecx,ebx
10001d87:	call   0x100012f0
10001d8c:	push   edi
10001d8d:	call   0x10042fe2
10001d92:	cmp    BYTE PTR [esi+0x4d],0x0
10001d96:	pop    ecx
10001d97:	mov    edi,esi
10001d99:	je     0x10001d65
10001d9b:	pop    ebx
10001d9c:	pop    edi
10001d9d:	pop    esi
10001d9e:	leave  
10001d9f:	ret    0x4
10001da2:	mov    eax,DWORD PTR [ecx+0x8]
10001da5:	mov    edx,DWORD PTR [eax]
10001da7:	mov    DWORD PTR [ecx+0x8],edx
10001daa:	mov    edx,DWORD PTR [eax]
10001dac:	cmp    BYTE PTR [edx+0x4d],0x0
10001db0:	jne    0x10001db5
10001db2:	mov    DWORD PTR [edx+0x4],ecx
10001db5:	mov    edx,DWORD PTR [ecx+0x4]
10001db8:	mov    DWORD PTR [eax+0x4],edx
10001dbb:	mov    edx,DWORD PTR [esp+0x4]
10001dbf:	mov    edx,DWORD PTR [edx+0x4]
10001dc2:	cmp    ecx,DWORD PTR [edx+0x4]
10001dc5:	jne    0x10001dcc
10001dc7:	mov    DWORD PTR [edx+0x4],eax
10001dca:	jmp    0x10001dda
10001dcc:	mov    edx,DWORD PTR [ecx+0x4]
10001dcf:	cmp    ecx,DWORD PTR [edx]
10001dd1:	jne    0x10001dd7
10001dd3:	mov    DWORD PTR [edx],eax
10001dd5:	jmp    0x10001dda
10001dd7:	mov    DWORD PTR [edx+0x8],eax
10001dda:	mov    DWORD PTR [eax],ecx
10001ddc:	mov    DWORD PTR [ecx+0x4],eax
10001ddf:	ret    0x4
10001de2:	mov    eax,DWORD PTR [ecx]
10001de4:	mov    edx,DWORD PTR [eax+0x8]
10001de7:	mov    DWORD PTR [ecx],edx
10001de9:	mov    edx,DWORD PTR [eax+0x8]
10001dec:	cmp    BYTE PTR [edx+0x4d],0x0
10001df0:	jne    0x10001df5
10001df2:	mov    DWORD PTR [edx+0x4],ecx
10001df5:	mov    edx,DWORD PTR [ecx+0x4]
10001df8:	mov    DWORD PTR [eax+0x4],edx
10001dfb:	mov    edx,DWORD PTR [esp+0x4]
10001dff:	mov    edx,DWORD PTR [edx+0x4]
10001e02:	cmp    ecx,DWORD PTR [edx+0x4]
10001e05:	jne    0x10001e0c
10001e07:	mov    DWORD PTR [edx+0x4],eax
10001e0a:	jmp    0x10001e1b
10001e0c:	mov    edx,DWORD PTR [ecx+0x4]
10001e0f:	cmp    ecx,DWORD PTR [edx+0x8]
10001e12:	jne    0x10001e19
10001e14:	mov    DWORD PTR [edx+0x8],eax
10001e17:	jmp    0x10001e1b
10001e19:	mov    DWORD PTR [edx],eax
10001e1b:	mov    DWORD PTR [eax+0x8],ecx
10001e1e:	mov    DWORD PTR [ecx+0x4],eax
10001e21:	ret    0x4
10001e24:	push   ebx
10001e25:	xor    ebx,ebx
10001e27:	cmp    DWORD PTR [esi],ebx
10001e29:	jne    0x10001e30
10001e2b:	call   0x10043605
10001e30:	mov    eax,DWORD PTR [esi+0x4]
10001e33:	cmp    BYTE PTR [eax+0x4d],bl
10001e36:	je     0x10001e3f
10001e38:	call   0x10043605
10001e3d:	jmp    0x10001e6d
10001e3f:	mov    ecx,DWORD PTR [eax+0x8]
10001e42:	cmp    BYTE PTR [ecx+0x4d],bl
10001e45:	jne    0x10001e62
10001e47:	jmp    0x10001e4b
10001e49:	mov    ecx,eax
10001e4b:	mov    eax,DWORD PTR [ecx]
10001e4d:	cmp    BYTE PTR [eax+0x4d],bl
10001e50:	je     0x10001e49
10001e52:	mov    DWORD PTR [esi+0x4],ecx
10001e55:	jmp    0x10001e6d
10001e57:	mov    ecx,DWORD PTR [esi+0x4]
10001e5a:	cmp    ecx,DWORD PTR [eax+0x8]
10001e5d:	jne    0x10001e6a
10001e5f:	mov    DWORD PTR [esi+0x4],eax
10001e62:	mov    eax,DWORD PTR [eax+0x4]
10001e65:	cmp    BYTE PTR [eax+0x4d],bl
10001e68:	je     0x10001e57
10001e6a:	mov    DWORD PTR [esi+0x4],eax
10001e6d:	mov    eax,esi
10001e6f:	pop    ebx
10001e70:	ret    
10001e71:	push   ebx
10001e72:	xor    ebx,ebx
10001e74:	cmp    DWORD PTR [esi],ebx
10001e76:	jne    0x10001e7d
10001e78:	call   0x10043605
10001e7d:	mov    eax,DWORD PTR [esi+0x4]
10001e80:	cmp    BYTE PTR [eax+0x11],bl
10001e83:	je     0x10001e8c
10001e85:	call   0x10043605
10001e8a:	jmp    0x10001eba
10001e8c:	mov    ecx,DWORD PTR [eax+0x8]
10001e8f:	cmp    BYTE PTR [ecx+0x11],bl
10001e92:	jne    0x10001eaf
10001e94:	jmp    0x10001e98
10001e96:	mov    ecx,eax
10001e98:	mov    eax,DWORD PTR [ecx]
10001e9a:	cmp    BYTE PTR [eax+0x11],bl
10001e9d:	je     0x10001e96
10001e9f:	mov    DWORD PTR [esi+0x4],ecx
10001ea2:	jmp    0x10001eba
10001ea4:	mov    ecx,DWORD PTR [esi+0x4]
10001ea7:	cmp    ecx,DWORD PTR [eax+0x8]
10001eaa:	jne    0x10001eb7
10001eac:	mov    DWORD PTR [esi+0x4],eax
10001eaf:	mov    eax,DWORD PTR [eax+0x4]
10001eb2:	cmp    BYTE PTR [eax+0x11],bl
10001eb5:	je     0x10001ea4
10001eb7:	mov    DWORD PTR [esi+0x4],eax
10001eba:	mov    eax,esi
10001ebc:	pop    ebx
10001ebd:	ret    
10001ebe:	push   ebp
10001ebf:	mov    ebp,esp
10001ec1:	mov    ecx,DWORD PTR [ebp+0x8]
10001ec4:	sub    esp,0xc
10001ec7:	test   ecx,ecx
10001ec9:	ja     0x10001ed6
10001ecb:	xor    ecx,ecx
10001ecd:	push   ecx
10001ece:	call   0x10043196
10001ed3:	pop    ecx
10001ed4:	leave  
10001ed5:	ret    
10001ed6:	or     eax,0xffffffff
10001ed9:	xor    edx,edx
10001edb:	div    ecx
10001edd:	cmp    eax,0x1
10001ee0:	jae    0x10001ecd
10001ee2:	and    DWORD PTR [ebp+0x8],0x0
10001ee6:	lea    eax,[ebp+0x8]
10001ee9:	push   eax
10001eea:	lea    ecx,[ebp-0xc]
10001eed:	call   0x100432d2
10001ef2:	push   0x10076460
10001ef7:	lea    eax,[ebp-0xc]
10001efa:	push   eax
10001efb:	mov    DWORD PTR [ebp-0xc],0x100675a0
10001f02:	call   0x10047942
10001f07:	int3   
10001f08:	push   esi
10001f09:	push   DWORD PTR [esp+0x8]
10001f0d:	mov    esi,ecx
10001f0f:	call   0x10043338
10001f14:	mov    DWORD PTR [esi],0x100675a0
10001f1a:	mov    eax,esi
10001f1c:	pop    esi
10001f1d:	ret    0x4
10001f20:	push   0x0
10001f22:	push   0x1
10001f24:	add    ecx,0x4
10001f27:	call   0x100012f0
10001f2c:	ret    
10001f2d:	push   ebp
10001f2e:	mov    ebp,esp
10001f30:	mov    eax,DWORD PTR [ebp+0x8]
10001f33:	mov    DWORD PTR [ebp+0x8],eax
10001f36:	push   0x10076494
10001f3b:	lea    eax,[ebp+0x8]
10001f3e:	push   eax
10001f3f:	call   0x10047942
10001f44:	int3   
10001f45:	mov    eax,DWORD PTR [esp+0x4]
10001f49:	test   eax,eax
10001f4b:	je     0x10001f79
10001f4d:	cmp    eax,0xc
10001f50:	je     0x10001f72
10001f52:	cmp    eax,0x16
10001f55:	je     0x10001f6b
10001f57:	cmp    eax,0x22
10001f5a:	je     0x10001f6b
10001f5c:	cmp    eax,0x50
10001f5f:	je     0x10001f79
10001f61:	push   0x80004005
10001f66:	call   0x10001f2d
10001f6b:	push   0x80070057
10001f70:	jmp    0x10001f66
10001f72:	push   0x8007000e
10001f77:	jmp    0x10001f66
10001f79:	ret    
10001f7a:	push   esi
10001f7b:	push   DWORD PTR [esp+0xc]
10001f7f:	mov    esi,eax
10001f81:	push   DWORD PTR [esp+0xc]
10001f85:	call   DWORD PTR ds:0x10067084
10001f8b:	test   eax,eax
10001f8d:	jne    0x10001f91
10001f8f:	pop    esi
10001f90:	ret    
10001f91:	push   edi
10001f92:	push   eax
10001f93:	call   DWORD PTR ds:0x10067098
10001f99:	mov    edi,eax
10001f9b:	test   edi,edi
10001f9d:	je     0x10001fc6
10001f9f:	push   DWORD PTR [esp+0x10]
10001fa3:	push   DWORD PTR [esp+0x10]
10001fa7:	call   DWORD PTR ds:0x10067094
10001fad:	add    eax,edi
10001faf:	and    esi,0xf
10001fb2:	jbe    0x10001fc2
10001fb4:	cmp    edi,eax
10001fb6:	jae    0x10001fc6
10001fb8:	dec    esi
10001fb9:	movzx  ecx,WORD PTR [edi]
10001fbc:	lea    edi,[edi+ecx*2+0x2]
10001fc0:	jne    0x10001fb4
10001fc2:	cmp    edi,eax
10001fc4:	jb     0x10001fca
10001fc6:	xor    eax,eax
10001fc8:	jmp    0x10001fd4
10001fca:	mov    ax,WORD PTR [edi]
10001fcd:	neg    ax
10001fd0:	sbb    eax,eax
10001fd2:	and    eax,edi
10001fd4:	pop    edi
10001fd5:	pop    esi
10001fd6:	ret    
10001fd7:	mov    eax,DWORD PTR [esp+0x8]
10001fdb:	shr    eax,0x4
10001fde:	inc    eax
10001fdf:	movzx  eax,ax
10001fe2:	push   0x6
10001fe4:	push   eax
10001fe5:	push   DWORD PTR [esp+0xc]
10001fe9:	call   DWORD PTR ds:0x100670a0
10001fef:	test   eax,eax
10001ff1:	jne    0x10001ff4
10001ff3:	ret    
10001ff4:	push   eax
10001ff5:	push   DWORD PTR [esp+0x8]
10001ff9:	mov    eax,DWORD PTR [esp+0x10]
10001ffd:	call   0x10001f7a
10002002:	pop    ecx
10002003:	pop    ecx
10002004:	ret    
10002005:	push   ebx
10002006:	push   ebp
10002007:	push   esi
10002008:	push   edi
10002009:	xor    edi,edi
1000200b:	mov    ebx,0x10082a88
10002010:	push   edi
10002011:	mov    ecx,ebx
10002013:	call   0x100571e0
10002018:	xor    ebp,ebp
1000201a:	inc    ebp
1000201b:	jmp    0x10002057
1000201d:	test   edi,edi
1000201f:	jne    0x1000205d
10002021:	mov    eax,DWORD PTR [esp+0x14]
10002025:	shr    eax,0x4
10002028:	inc    eax
10002029:	push   edi
1000202a:	movzx  eax,ax
1000202d:	push   eax
1000202e:	push   0x6
10002030:	push   esi
10002031:	call   DWORD PTR ds:0x1006709c
10002037:	test   eax,eax
10002039:	je     0x1000204e
1000203b:	push   eax
1000203c:	mov    eax,DWORD PTR [esp+0x18]
10002040:	push   esi
10002041:	call   0x10001f7a
10002046:	mov    edi,eax
10002048:	test   edi,edi
1000204a:	pop    ecx
1000204b:	pop    ecx
1000204c:	jne    0x10002064
1000204e:	push   ebp
1000204f:	mov    ecx,ebx
10002051:	call   0x100571e0
10002056:	inc    ebp
10002057:	mov    esi,eax
10002059:	test   esi,esi
1000205b:	jne    0x1000201d
1000205d:	xor    eax,eax
1000205f:	pop    edi
10002060:	pop    esi
10002061:	pop    ebp
10002062:	pop    ebx
10002063:	ret    
10002064:	mov    eax,esi
10002066:	jmp    0x1000205f
10002068:	ret    
10002069:	lea    ecx,[eax+0xc]
1000206c:	or     edx,0xffffffff
1000206f:	lock xadd DWORD PTR [ecx],edx
10002073:	dec    edx
10002074:	test   edx,edx
10002076:	jg     0x10002080
10002078:	mov    ecx,DWORD PTR [eax]
1000207a:	mov    edx,DWORD PTR [ecx]
1000207c:	push   eax
1000207d:	call   DWORD PTR [edx+0x4]
10002080:	ret    
10002081:	mov    eax,DWORD PTR [eax]
10002083:	sub    eax,0x10
10002086:	jmp    0x10002069
1000208b:	mov    eax,DWORD PTR [esp+0x4]
1000208f:	push   esi
10002090:	mov    esi,DWORD PTR [eax]
10002092:	and    DWORD PTR [eax],0x0
10002095:	mov    eax,DWORD PTR [edi]
10002097:	cmp    esi,eax
10002099:	je     0x100020a2
1000209b:	push   eax
1000209c:	call   0x10042fe2
100020a1:	pop    ecx
100020a2:	mov    DWORD PTR [edi],esi
100020a4:	mov    eax,edi
100020a6:	pop    esi
100020a7:	ret    0x4
100020aa:	push   DWORD PTR [eax]
100020ac:	call   0x10042fe2
100020b1:	pop    ecx
100020b2:	ret    
100020b3:	push   ebp
100020b4:	mov    ebp,esp
100020b6:	push   ebx
100020b7:	mov    ebx,DWORD PTR ds:0x1006708c
100020bd:	push   esi
100020be:	xor    esi,esi
100020c0:	cmp    DWORD PTR [ebp+0xc],esi
100020c3:	push   edi
100020c4:	je     0x100020dc
100020c6:	call   DWORD PTR ds:0x10080ffc
100020cc:	push   esi
100020cd:	push   esi
100020ce:	push   0xffffffff
100020d0:	push   DWORD PTR [ebp+0xc]
100020d3:	push   esi
100020d4:	push   eax
100020d5:	call   ebx
100020d7:	mov    edi,eax
100020d9:	dec    edi
100020da:	jmp    0x100020de
100020dc:	xor    edi,edi
100020de:	cmp    edi,esi
100020e0:	mov    esi,DWORD PTR [ebp+0x8]
100020e3:	jle    0x10002108
100020e5:	push   edi
100020e6:	call   0x100021a7
100020eb:	push   edi
100020ec:	push   eax
100020ed:	push   0xffffffff
100020ef:	push   DWORD PTR [ebp+0xc]
100020f2:	push   0x0
100020f4:	call   DWORD PTR ds:0x10080ffc
100020fa:	push   eax
100020fb:	call   ebx
100020fd:	mov    eax,edi
100020ff:	mov    edx,esi
10002101:	call   0x10002232
10002106:	jmp    0x1000210d
10002108:	call   0x10002167
1000210d:	mov    eax,DWORD PTR [ebp+0x8]
10002110:	pop    edi
10002111:	pop    esi
10002112:	pop    ebx
10002113:	pop    ebp
10002114:	ret    0x8
10002117:	xor    al,al
10002119:	cmp    DWORD PTR [esp+0x8],0x0
1000211e:	je     0x10002149
10002120:	test   DWORD PTR [esp+0x8],0xffff0000
10002128:	jne    0x10002149
1000212a:	push   esi
1000212b:	movzx  esi,WORD PTR [esp+0xc]
10002130:	push   esi
10002131:	call   0x10002005
10002136:	test   eax,eax
10002138:	pop    ecx
10002139:	je     0x10002146
1000213b:	push   esi
1000213c:	push   eax
1000213d:	push   DWORD PTR [esp+0x10]
10002141:	call   0x100021cd
10002146:	mov    al,0x1
10002148:	pop    esi
10002149:	ret    0x8
1000214c:	test   ecx,ecx
1000214e:	jne    0x1000215a
10002150:	push   0x80004005
10002155:	call   0x10001f2d
1000215a:	mov    eax,DWORD PTR [ecx]
1000215c:	call   DWORD PTR [eax+0xc]
1000215f:	add    eax,0x10
10002162:	mov    DWORD PTR [esi],eax
10002164:	mov    eax,esi
10002166:	ret    
10002167:	mov    ecx,DWORD PTR [esi]
10002169:	lea    eax,[ecx-0x10]
1000216c:	xor    edx,edx
1000216e:	cmp    DWORD PTR [eax+0x4],edx
10002171:	push   edi
10002172:	mov    edi,DWORD PTR [eax]
10002174:	je     0x100021a5
10002176:	cmp    DWORD PTR [eax+0xc],edx
10002179:	jge    0x10002194
1000217b:	cmp    DWORD PTR [ecx-0x8],edx
1000217e:	jge    0x1000218a
10002180:	push   0x80070057
10002185:	call   0x10001f2d
1000218a:	mov    DWORD PTR [ecx-0xc],edx
1000218d:	mov    eax,DWORD PTR [esi]
1000218f:	mov    WORD PTR [eax],dx
10002192:	pop    edi
10002193:	ret    
10002194:	call   0x10002069
10002199:	mov    eax,DWORD PTR [edi]
1000219b:	mov    ecx,edi
1000219d:	call   DWORD PTR [eax+0xc]
100021a0:	add    eax,0x10
100021a3:	mov    DWORD PTR [esi],eax
100021a5:	pop    edi
100021a6:	ret    
100021a7:	mov    eax,DWORD PTR [esi]
100021a9:	xor    ecx,ecx
100021ab:	sub    eax,0x10
100021ae:	inc    ecx
100021af:	sub    ecx,DWORD PTR [eax+0xc]
100021b2:	mov    eax,DWORD PTR [eax+0x8]
100021b5:	sub    eax,DWORD PTR [esp+0x4]
100021b9:	or     ecx,eax
100021bb:	jge    0x100021c8
100021bd:	mov    eax,DWORD PTR [esp+0x4]
100021c1:	mov    ecx,esi
100021c3:	call   0x10002253
100021c8:	mov    eax,DWORD PTR [esi]
100021ca:	ret    0x4
100021cd:	push   edi
100021ce:	push   DWORD PTR [esp+0x10]
100021d2:	push   DWORD PTR [esp+0x10]
100021d6:	call   0x10001fd7
100021db:	mov    edi,eax
100021dd:	test   edi,edi
100021df:	pop    ecx
100021e0:	pop    ecx
100021e1:	je     0x1000222e
100021e3:	push   ebx
100021e4:	movzx  ebx,WORD PTR [edi]
100021e7:	push   esi
100021e8:	mov    esi,DWORD PTR [esp+0x10]
100021ec:	push   ebx
100021ed:	call   0x100021a7
100021f2:	mov    esi,eax
100021f4:	movzx  eax,WORD PTR [edi]
100021f7:	add    edi,0x2
100021fa:	cmp    eax,0xffffffff
100021fd:	jne    0x10002207
100021ff:	push   edi
10002200:	call   0x100437c6
10002205:	pop    ecx
10002206:	inc    eax
10002207:	add    eax,eax
10002209:	push   eax
1000220a:	push   edi
1000220b:	lea    eax,[ebx+ebx*1]
1000220e:	push   eax
1000220f:	push   esi
10002210:	call   0x100433cf
10002215:	push   eax
10002216:	call   0x10001f45
1000221b:	mov    edx,DWORD PTR [esp+0x24]
1000221f:	add    esp,0x14
10002222:	mov    eax,ebx
10002224:	call   0x10002232
10002229:	xor    eax,eax
1000222b:	pop    esi
1000222c:	inc    eax
1000222d:	pop    ebx
1000222e:	pop    edi
1000222f:	ret    0xc
10002232:	test   eax,eax
10002234:	jl     0x10002248
10002236:	mov    ecx,DWORD PTR [edx]
10002238:	cmp    eax,DWORD PTR [ecx-0x8]
1000223b:	jg     0x10002248
1000223d:	mov    DWORD PTR [ecx-0xc],eax
10002240:	mov    ecx,DWORD PTR [edx]
10002242:	and    WORD PTR [ecx+eax*2],0x0
10002247:	ret    
10002248:	push   0x80070057
1000224d:	call   0x10001f2d
10002252:	int3   
10002253:	push   esi
10002254:	mov    esi,ecx
10002256:	push   edi
10002257:	mov    edi,eax
10002259:	mov    eax,DWORD PTR [esi]
1000225b:	mov    ecx,DWORD PTR [eax-0xc]
1000225e:	sub    eax,0x10
10002261:	cmp    ecx,edi
10002263:	jle    0x10002267
10002265:	mov    edi,ecx
10002267:	cmp    DWORD PTR [eax+0xc],0x1
1000226b:	jle    0x10002276
1000226d:	push   edi
1000226e:	push   esi
1000226f:	call   0x1000229c
10002274:	jmp    0x10002299
10002276:	mov    eax,DWORD PTR [eax+0x8]
10002279:	cmp    eax,edi
1000227b:	jge    0x10002299
1000227d:	mov    edx,eax
1000227f:	mov    eax,0x400
10002284:	cmp    edx,eax
10002286:	jle    0x1000228c
10002288:	add    edx,eax
1000228a:	jmp    0x1000228e
1000228c:	add    edx,edx
1000228e:	cmp    edx,edi
10002290:	jge    0x10002294
10002292:	mov    edx,edi
10002294:	call   0x10002302
10002299:	pop    edi
1000229a:	pop    esi
1000229b:	ret    
1000229c:	push   ebp
1000229d:	mov    ebp,esp
1000229f:	push   ecx
100022a0:	mov    eax,DWORD PTR [ebp+0x8]
100022a3:	push   ebx
100022a4:	push   esi
100022a5:	mov    esi,DWORD PTR [eax]
100022a7:	mov    ebx,DWORD PTR [esi-0xc]
100022aa:	sub    esi,0x10
100022ad:	mov    ecx,DWORD PTR [esi]
100022af:	mov    eax,DWORD PTR [ecx]
100022b1:	push   edi
100022b2:	mov    DWORD PTR [ebp-0x4],ebx
100022b5:	call   DWORD PTR [eax+0x10]
100022b8:	mov    edx,DWORD PTR [eax]
100022ba:	push   0x2
100022bc:	push   DWORD PTR [ebp+0xc]
100022bf:	mov    ecx,eax
100022c1:	call   DWORD PTR [edx]
100022c3:	mov    edi,eax
100022c5:	test   edi,edi
100022c7:	jne    0x100022ce
100022c9:	call   0x10002347
100022ce:	mov    eax,DWORD PTR [ebp+0xc]
100022d1:	cmp    ebx,eax
100022d3:	jge    0x100022d7
100022d5:	mov    eax,ebx
100022d7:	lea    ecx,[esi+0x10]
100022da:	push   ecx
100022db:	inc    eax
100022dc:	push   eax
100022dd:	lea    ebx,[edi+0x10]
100022e0:	push   ebx
100022e1:	call   0x1000232c
100022e6:	mov    eax,DWORD PTR [ebp-0x4]
100022e9:	mov    DWORD PTR [edi+0x4],eax
100022ec:	add    esp,0xc
100022ef:	mov    eax,esi
100022f1:	call   0x10002069
100022f6:	mov    eax,DWORD PTR [ebp+0x8]
100022f9:	pop    edi
100022fa:	pop    esi
100022fb:	mov    DWORD PTR [eax],ebx
100022fd:	pop    ebx
100022fe:	leave  
100022ff:	ret    0x8
10002302:	mov    eax,DWORD PTR [esi]
10002304:	sub    eax,0x10
10002307:	cmp    DWORD PTR [eax+0x8],edx
1000230a:	mov    ecx,DWORD PTR [eax]
1000230c:	jge    0x10002321
1000230e:	test   edx,edx
10002310:	jle    0x10002321
10002312:	push   edi
10002313:	mov    edi,DWORD PTR [ecx]
10002315:	push   0x2
10002317:	push   edx
10002318:	push   eax
10002319:	call   DWORD PTR [edi+0x8]
1000231c:	test   eax,eax
1000231e:	pop    edi
1000231f:	jne    0x10002326
10002321:	jmp    0x10002347
10002326:	add    eax,0x10
10002329:	mov    DWORD PTR [esi],eax
1000232b:	ret    
1000232c:	add    eax,eax
1000232e:	push   eax
1000232f:	push   DWORD PTR [esp+0x10]
10002333:	mov    eax,DWORD PTR [esp+0x10]
10002337:	add    eax,eax
10002339:	push   eax
1000233a:	push   DWORD PTR [esp+0x10]
1000233e:	call   0x100433cf
10002343:	add    esp,0x10
10002346:	ret    
10002347:	push   0x8007000e
1000234c:	call   0x10001f2d
10002351:	int3   
10002352:	push   0x0
10002354:	mov    eax,0x10062a19
10002359:	call   0x10059df5
1000235e:	mov    esi,DWORD PTR [ebp+0x8]
10002361:	mov    ecx,0x10082a6c
10002366:	call   0x1000214c
1000236b:	push   DWORD PTR [ebp+0xc]
1000236e:	and    DWORD PTR [ebp-0x4],0x0
10002372:	push   esi
10002373:	call   0x10002117
10002378:	test   al,al
1000237a:	jne    0x10002385
1000237c:	push   DWORD PTR [ebp+0xc]
1000237f:	push   esi
10002380:	call   0x1000238f
10002385:	mov    eax,esi
10002387:	call   0x10059ecd
1000238c:	ret    0x8
1000238f:	push   ebp
10002390:	mov    ebp,esp
10002392:	xor    eax,eax
10002394:	cmp    DWORD PTR [ebp+0xc],eax
10002397:	je     0x100023a2
10002399:	push   DWORD PTR [ebp+0xc]
1000239c:	call   0x100437c6
100023a1:	pop    ecx
100023a2:	push   ebx
100023a3:	push   DWORD PTR [ebp+0xc]
100023a6:	mov    ebx,eax
100023a8:	mov    eax,DWORD PTR [ebp+0x8]
100023ab:	call   0x100023b8
100023b0:	mov    eax,DWORD PTR [ebp+0x8]
100023b3:	pop    ebx
100023b4:	pop    ebp
100023b5:	ret    0x8
100023b8:	push   ebp
100023b9:	mov    ebp,esp
100023bb:	push   ecx
100023bc:	test   ebx,ebx
100023be:	push   esi
100023bf:	mov    esi,eax
100023c1:	jne    0x100023ca
100023c3:	call   0x10002167
100023c8:	jmp    0x10002420
100023ca:	push   edi
100023cb:	mov    edi,DWORD PTR [ebp+0x8]
100023ce:	test   edi,edi
100023d0:	jne    0x100023dc
100023d2:	push   0x80070057
100023d7:	call   0x10001f2d
100023dc:	mov    eax,DWORD PTR [esi]
100023de:	mov    ecx,DWORD PTR [eax-0xc]
100023e1:	sub    edi,eax
100023e3:	push   ebx
100023e4:	mov    DWORD PTR [ebp-0x4],ecx
100023e7:	sar    edi,1
100023e9:	call   0x100021a7
100023ee:	cmp    edi,DWORD PTR [ebp-0x4]
100023f1:	ja     0x10002407
100023f3:	lea    ecx,[ebx+ebx*1]
100023f6:	push   ecx
100023f7:	lea    edx,[eax+edi*2]
100023fa:	push   edx
100023fb:	push   ecx
100023fc:	push   eax
100023fd:	call   0x10042fe7
10002402:	add    esp,0x10
10002405:	jmp    0x10002416
10002407:	push   DWORD PTR [ebp+0x8]
1000240a:	push   ebx
1000240b:	push   eax
1000240c:	mov    eax,ebx
1000240e:	call   0x1000232c
10002413:	add    esp,0xc
10002416:	mov    eax,ebx
10002418:	mov    edx,esi
1000241a:	call   0x10002232
1000241f:	pop    edi
10002420:	pop    esi
10002421:	leave  
10002422:	ret    0x4
10002425:	xor    eax,eax
10002427:	cmp    esi,eax
10002429:	je     0x10002453
1000242b:	cmp    DWORD PTR [esp+0x4],eax
1000242f:	je     0x10002453
10002431:	push   eax
10002432:	push   eax
10002433:	push   DWORD PTR [esp+0x10]
10002437:	mov    BYTE PTR [esi],al
10002439:	push   esi
1000243a:	push   0xffffffff
1000243c:	push   DWORD PTR [esp+0x18]
10002440:	push   eax
10002441:	push   DWORD PTR [esp+0x28]
10002445:	call   DWORD PTR ds:0x100670c4
1000244b:	neg    eax
1000244d:	sbb    eax,eax
1000244f:	and    eax,esi
10002451:	jmp    0x10002455
10002453:	xor    eax,eax
10002455:	ret    0xc
10002458:	push   0x4
1000245a:	mov    eax,0x10060ac8
1000245f:	call   0x10059df5
10002464:	push   0xc
10002466:	call   0x10043196
1000246b:	mov    esi,eax
1000246d:	pop    ecx
1000246e:	mov    DWORD PTR [ebp-0x10],esi
10002471:	and    DWORD PTR [ebp-0x4],0x0
10002475:	test   esi,esi
10002477:	je     0x10002490
10002479:	push   DWORD PTR [ebp+0x8]
1000247c:	and    DWORD PTR [esi+0x4],0x0
10002480:	mov    DWORD PTR [esi+0x8],0x1
10002487:	call   0x10050ba0
1000248c:	mov    DWORD PTR [esi],eax
1000248e:	jmp    0x10002492
10002490:	xor    esi,esi
10002492:	or     DWORD PTR [ebp-0x4],0xffffffff
10002496:	test   esi,esi
10002498:	mov    DWORD PTR [edi],esi
1000249a:	jne    0x100024a6
1000249c:	push   0x8007000e
100024a1:	call   0x10050e90
100024a6:	mov    eax,edi
100024a8:	call   0x10059ecd
100024ad:	ret    0x4
100024b0:	push   0x4
100024b2:	mov    eax,0x10060ac8
100024b7:	call   0x10059df5
100024bc:	push   0xc
100024be:	call   0x10043196
100024c3:	mov    esi,eax
100024c5:	pop    ecx
100024c6:	mov    DWORD PTR [ebp-0x10],esi
100024c9:	and    DWORD PTR [ebp-0x4],0x0
100024cd:	test   esi,esi
100024cf:	je     0x100024db
100024d1:	push   DWORD PTR [ebp+0x8]
100024d4:	call   0x100025f3
100024d9:	jmp    0x100024dd
100024db:	xor    eax,eax
100024dd:	or     DWORD PTR [ebp-0x4],0xffffffff
100024e1:	test   eax,eax
100024e3:	mov    DWORD PTR [edi],eax
100024e5:	jne    0x100024f1
100024e7:	push   0x8007000e
100024ec:	call   0x10050e90
100024f1:	mov    eax,edi
100024f3:	call   0x10059ecd
100024f8:	ret    0x4
100024fb:	jmp    0x100025b3
10002500:	push   0x4
10002502:	mov    eax,0x10060ac8
10002507:	call   0x10059df5
1000250c:	push   0xc
1000250e:	call   0x10043196
10002513:	mov    edi,eax
10002515:	pop    ecx
10002516:	mov    DWORD PTR [ebp-0x10],edi
10002519:	xor    esi,esi
1000251b:	cmp    edi,esi
1000251d:	mov    DWORD PTR [ebp-0x4],esi
10002520:	je     0x1000252d
10002522:	push   DWORD PTR [ebp+0x8]
10002525:	push   ebx
10002526:	call   0x10002623
1000252b:	mov    esi,eax
1000252d:	or     DWORD PTR [ebp-0x4],0xffffffff
10002531:	test   esi,esi
10002533:	jne    0x10002541
10002535:	push   0x8007000e
1000253a:	call   0x10050e90
1000253f:	jmp    0x1000254a
10002541:	mov    edi,ebx
10002543:	call   0x100025b3
10002548:	mov    DWORD PTR [ebx],esi
1000254a:	mov    eax,ebx
1000254c:	call   0x10059ecd
10002551:	ret    0x4
10002554:	push   0x4
10002556:	mov    eax,0x1005fdc3
1000255b:	call   0x10059df5
10002560:	mov    ebx,DWORD PTR [ebp+0x8]
10002563:	and    DWORD PTR [ebp-0x4],0x0
10002567:	push   DWORD PTR [ebp+0xc]
1000256a:	and    DWORD PTR [ebp-0x10],0x0
1000256e:	mov    edi,ebx
10002570:	call   0x100024b0
10002575:	and    DWORD PTR [ebp-0x4],0x0
10002579:	push   DWORD PTR [ebp+0x10]
1000257c:	mov    DWORD PTR [ebp-0x10],0x1
10002583:	call   0x10002500
10002588:	mov    eax,ebx
1000258a:	call   0x10059ecd
1000258f:	ret    
10002590:	mov    eax,DWORD PTR [eax]
10002592:	test   eax,eax
10002594:	je     0x10002599
10002596:	mov    eax,DWORD PTR [eax]
10002598:	ret    
10002599:	xor    eax,eax
1000259b:	ret    
1000259c:	mov    eax,DWORD PTR [eax]
1000259e:	test   eax,eax
100025a0:	je     0x100025b0
100025a2:	mov    eax,DWORD PTR [eax]
100025a4:	test   eax,eax
100025a6:	je     0x100025b0
100025a8:	push   eax
100025a9:	call   DWORD PTR ds:0x100672a8
100025af:	ret    
100025b0:	xor    eax,eax
100025b2:	ret    
100025b3:	push   esi
100025b4:	mov    esi,DWORD PTR [edi]
100025b6:	test   esi,esi
100025b8:	je     0x100025f1
100025ba:	lea    eax,[esi+0x8]
100025bd:	push   eax
100025be:	call   DWORD PTR ds:0x100670bc
100025c4:	test   eax,eax
100025c6:	jne    0x100025ee
100025c8:	test   esi,esi
100025ca:	je     0x100025ee
100025cc:	mov    eax,DWORD PTR [esi]
100025ce:	test   eax,eax
100025d0:	je     0x100025d9
100025d2:	push   eax
100025d3:	call   DWORD PTR ds:0x100672b4
100025d9:	mov    eax,DWORD PTR [esi+0x4]
100025dc:	test   eax,eax
100025de:	je     0x100025e7
100025e0:	push   eax
100025e1:	call   0x10043178
100025e6:	pop    ecx
100025e7:	push   esi
100025e8:	call   0x10042fe2
100025ed:	pop    ecx
100025ee:	and    DWORD PTR [edi],0x0
100025f1:	pop    esi
100025f2:	ret    
100025f3:	push   DWORD PTR [esp+0x4]
100025f7:	and    DWORD PTR [esi+0x4],0x0
100025fb:	mov    DWORD PTR [esi+0x8],0x1
10002602:	call   DWORD PTR ds:0x100672ac
10002608:	test   eax,eax
1000260a:	mov    DWORD PTR [esi],eax
1000260c:	jne    0x1000261e
1000260e:	cmp    DWORD PTR [esp+0x4],eax
10002612:	je     0x1000261e
10002614:	push   0x8007000e
10002619:	call   0x10050e90
1000261e:	mov    eax,esi
10002620:	ret    0x4
10002623:	push   ebp
10002624:	mov    ebp,esp
10002626:	push   ecx
10002627:	mov    eax,DWORD PTR [ebp+0x8]
1000262a:	and    DWORD PTR [edi+0x4],0x0
1000262e:	push   ebx
1000262f:	push   esi
10002630:	mov    DWORD PTR [edi+0x8],0x1
10002637:	call   0x1000259c
1000263c:	mov    ebx,eax
1000263e:	mov    eax,DWORD PTR [ebp+0xc]
10002641:	call   0x1000259c
10002646:	lea    esi,[eax+ebx*1]
10002649:	add    esi,esi
1000264b:	push   esi
1000264c:	push   0x0
1000264e:	mov    DWORD PTR [ebp-0x4],eax
10002651:	call   DWORD PTR ds:0x100672b0
10002657:	test   eax,eax
10002659:	mov    DWORD PTR [edi],eax
1000265b:	jne    0x10002669
1000265d:	push   0x8007000e
10002662:	call   0x10050e90
10002667:	jmp    0x100026ba
10002669:	mov    ecx,DWORD PTR [ebp+0x8]
1000266c:	mov    ecx,DWORD PTR [ecx]
1000266e:	test   ecx,ecx
10002670:	je     0x10002676
10002672:	mov    ecx,DWORD PTR [ecx]
10002674:	jmp    0x10002678
10002676:	xor    ecx,ecx
10002678:	test   ecx,ecx
1000267a:	je     0x1000268f
1000267c:	lea    edx,[ebx+ebx*1+0x2]
10002680:	push   edx
10002681:	push   ecx
10002682:	add    esi,0x2
10002685:	push   esi
10002686:	push   eax
10002687:	call   0x100433cf
1000268c:	add    esp,0x10
1000268f:	mov    eax,DWORD PTR [ebp+0xc]
10002692:	mov    eax,DWORD PTR [eax]
10002694:	test   eax,eax
10002696:	je     0x1000269c
10002698:	mov    ecx,DWORD PTR [eax]
1000269a:	jmp    0x1000269e
1000269c:	xor    ecx,ecx
1000269e:	test   ecx,ecx
100026a0:	je     0x100026ba
100026a2:	mov    eax,DWORD PTR [ebp-0x4]
100026a5:	lea    eax,[eax+eax*1+0x2]
100026a9:	push   eax
100026aa:	push   ecx
100026ab:	push   eax
100026ac:	mov    eax,DWORD PTR [edi]
100026ae:	lea    eax,[eax+ebx*2]
100026b1:	push   eax
100026b2:	call   0x100433cf
100026b7:	add    esp,0x10
100026ba:	pop    esi
100026bb:	mov    eax,edi
100026bd:	pop    ebx
100026be:	leave  
100026bf:	ret    0x8
100026c2:	mov    DWORD PTR [ecx],0x1006c97c
100026c8:	jmp    0x100010ac
100026cd:	push   esi
100026ce:	mov    esi,ecx
100026d0:	mov    DWORD PTR [esi],0x1006c97c
100026d6:	call   0x100010ac
100026db:	test   BYTE PTR [esp+0x8],0x1
100026e0:	je     0x100026e9
100026e2:	push   esi
100026e3:	call   0x10042fe2
100026e8:	pop    ecx
100026e9:	mov    eax,esi
100026eb:	pop    esi
100026ec:	ret    0x4
100026ef:	push   0x10
100026f1:	mov    eax,0x100602fc
100026f6:	call   0x10059df5
100026fb:	mov    eax,DWORD PTR [ebp+0x8]
100026fe:	mov    DWORD PTR [ebp-0x18],ecx
10002701:	mov    ecx,DWORD PTR [ebp+0xc]
10002704:	mov    DWORD PTR [ebp-0x10],ecx
10002707:	mov    ecx,DWORD PTR [ebp+0x10]
1000270a:	mov    DWORD PTR [ebp-0x1c],esi
1000270d:	mov    DWORD PTR [ebp-0x14],ecx
10002710:	and    DWORD PTR [ebp-0x4],0x0
10002714:	push   eax
10002715:	mov    ecx,esi
10002717:	call   0x100011c9
1000271c:	push   DWORD PTR [ebp-0x18]
1000271f:	lea    ecx,[esi+0x1c]
10002722:	mov    BYTE PTR [ebp-0x4],0x1
10002726:	call   0x100011c9
1000272b:	push   DWORD PTR [ebp-0x10]
1000272e:	lea    ecx,[esi+0x38]
10002731:	mov    BYTE PTR [ebp-0x4],0x2
10002735:	call   0x100011c9
1000273a:	push   DWORD PTR [ebp-0x14]
1000273d:	lea    ecx,[esi+0x54]
10002740:	mov    BYTE PTR [ebp-0x4],0x3
10002744:	call   0x100011c9
10002749:	mov    BYTE PTR [ebp-0x4],0x4
1000274d:	mov    eax,DWORD PTR [ebp+0x14]
10002750:	mov    DWORD PTR [esi+0x70],eax
10002753:	lea    eax,[ebp+0x18]
10002756:	push   eax
10002757:	lea    ecx,[esi+0x88]
1000275d:	call   0x100011c9
10002762:	mov    eax,DWORD PTR [edi]
10002764:	mov    DWORD PTR [esi+0x80],eax
1000276a:	mov    eax,DWORD PTR [edi+0x4]
1000276d:	mov    DWORD PTR [esi+0x84],eax
10002773:	mov    eax,DWORD PTR [ebx]
10002775:	mov    DWORD PTR [esi+0x78],eax
10002778:	mov    eax,DWORD PTR [ebx+0x4]
1000277b:	push   0x0
1000277d:	push   0x1
1000277f:	lea    ecx,[ebp+0x18]
10002782:	mov    DWORD PTR [esi+0x7c],eax
10002785:	call   0x100012f0
1000278a:	mov    eax,esi
1000278c:	call   0x10059ecd
10002791:	ret    0x2c
10002794:	push   0x4
10002796:	mov    eax,0x100602b0
1000279b:	call   0x10059df5
100027a0:	mov    esi,ecx
100027a2:	mov    DWORD PTR [ebp-0x10],esi
100027a5:	and    DWORD PTR [ebp-0x4],0x0
100027a9:	call   0x100040ef
100027ae:	push   0xffffffff
100027b0:	push   0x0
100027b2:	lea    eax,[ebp+0x8]
100027b5:	push   eax
100027b6:	mov    ecx,esi
100027b8:	mov    BYTE PTR [ebp-0x4],0x1
100027bc:	call   0x10001241
100027c1:	mov    eax,DWORD PTR [ebp+0x24]
100027c4:	push   0x0
100027c6:	push   0x1
100027c8:	lea    ecx,[ebp+0x8]
100027cb:	mov    DWORD PTR [esi+0x1c],eax
100027ce:	call   0x100012f0
100027d3:	mov    eax,esi
100027d5:	call   0x10059ecd
100027da:	ret    0x20
100027dd:	push   0x0
100027df:	mov    eax,0x100617bb
100027e4:	call   0x10059df5
100027e9:	mov    edi,DWORD PTR [ebp+0x8]
100027ec:	mov    esi,edi
100027ee:	call   0x100040ef
100027f3:	mov    esi,DWORD PTR [ebp+0x10]
100027f6:	xor    eax,eax
100027f8:	mov    DWORD PTR [ebp-0x4],eax
100027fb:	mov    DWORD PTR [edi+0x1c],eax
100027fe:	mov    DWORD PTR [edi+0x20],eax
10002801:	mov    DWORD PTR [edi+0x24],eax
10002804:	mov    eax,DWORD PTR [ebp+0xc]
10002807:	mov    ecx,edi
10002809:	call   0x10039ff0
1000280e:	mov    eax,edi
10002810:	call   0x10059ecd
10002815:	ret    0xc
10002818:	push   0x8
1000281a:	mov    eax,0x100629f6
1000281f:	call   0x10059df5
10002824:	and    DWORD PTR [ebp-0x14],0x0
10002828:	push   0x4
1000282a:	call   0x10043196
1000282f:	pop    ecx
10002830:	mov    DWORD PTR [ebp-0x14],eax
10002833:	and    DWORD PTR [ebp-0x4],0x0
10002837:	test   eax,eax
10002839:	je     0x10002848
1000283b:	push   DWORD PTR [ebp+0xc]
1000283e:	push   eax
1000283f:	call   0x10034910
10002844:	mov    esi,eax
10002846:	jmp    0x1000284a
10002848:	xor    esi,esi
1000284a:	mov    edi,esi
1000284c:	mov    DWORD PTR [ebp-0x14],edi
1000284f:	push   0x4
10002851:	mov    DWORD PTR [ebp-0x4],0x1
10002858:	call   0x10043196
1000285d:	test   eax,eax
1000285f:	pop    ecx
10002860:	je     0x10002868
10002862:	xor    edi,edi
10002864:	mov    DWORD PTR [eax],esi
10002866:	jmp    0x1000286a
10002868:	xor    eax,eax
1000286a:	mov    esi,DWORD PTR [ebp+0x8]
1000286d:	and    DWORD PTR [ebp-0x10],0x0
10002871:	mov    DWORD PTR [esi],eax
10002873:	lea    eax,[ebp-0x10]
10002876:	call   0x1000428d
1000287b:	test   edi,edi
1000287d:	je     0x1000288e
1000287f:	push   DWORD PTR [edi]
10002881:	call   DWORD PTR ds:0x10067078
10002887:	push   edi
10002888:	call   0x10042fe2
1000288d:	pop    ecx
1000288e:	mov    eax,esi
10002890:	call   0x10059ecd
10002895:	ret    
10002896:	push   ebp
10002897:	mov    ebp,esp
10002899:	and    esp,0xfffffff8
1000289c:	push   ecx
1000289d:	push   ecx
1000289e:	push   esi
1000289f:	push   edi
100028a0:	call   0x1002f6a0
100028a5:	mov    edi,eax
100028a7:	mov    eax,DWORD PTR [ebp+0x8]
100028aa:	mov    eax,DWORD PTR [eax]
100028ac:	push   0x1
100028ae:	push   eax
100028af:	lea    ecx,[esp+0x10]
100028b3:	mov    esi,edx
100028b5:	call   0x100358a0
100028ba:	mov    ecx,DWORD PTR [eax]
100028bc:	mov    eax,DWORD PTR [eax+0x4]
100028bf:	add    ecx,0x9534e000
100028c5:	adc    eax,0x64
100028c8:	cmp    esi,eax
100028ca:	ja     0x100028d7
100028cc:	jb     0x100028d2
100028ce:	cmp    edi,ecx
100028d0:	jae    0x100028d7
100028d2:	xor    eax,eax
100028d4:	inc    eax
100028d5:	jmp    0x100028d9
100028d7:	xor    eax,eax
100028d9:	pop    edi
100028da:	pop    esi
100028db:	mov    esp,ebp
100028dd:	pop    ebp
100028de:	ret    0x4
100028e1:	push   0x4
100028e3:	mov    eax,0x100650e4
100028e8:	call   0x10059e28
100028ed:	xor    eax,eax
100028ef:	push   eax
100028f0:	push   eax
100028f1:	push   eax
100028f2:	push   0x1000290e
100028f7:	push   eax
100028f8:	push   eax
100028f9:	mov    DWORD PTR [ebp-0x4],eax
100028fc:	call   DWORD PTR ds:0x10082cac
10002902:	call   0x10059ecd
10002907:	ret    
10002908:	mov    eax,0x10002902
1000290d:	ret    
1000290e:	push   ebp
1000290f:	sub    esp,0x8c
10002915:	lea    ebp,[esp-0x4]
10002919:	mov    eax,ds:0x100801ac
1000291e:	xor    eax,ebp
10002920:	mov    DWORD PTR [ebp+0x8c],eax
10002926:	push   0xb8
1000292b:	mov    eax,0x100650b9
10002930:	call   0x10059e28
10002935:	lea    eax,[ebp-0x19]
10002938:	push   eax
10002939:	call   0x10036f20
1000293e:	push   0x1
10002940:	lea    eax,[ebp-0x14]
10002943:	xor    ebx,ebx
10002945:	mov    DWORD PTR [ebp-0x4],ebx
10002948:	push   eax
10002949:	mov    BYTE PTR [ebp-0x4],0x1
1000294d:	call   0x10034910
10002952:	mov    BYTE PTR [ebp-0x4],0x2
10002956:	call   0x1002f6a0
1000295b:	mov    edi,eax
1000295d:	push   0x4
1000295f:	lea    eax,[ebp-0x14]
10002962:	push   eax
10002963:	lea    ecx,[ebp-0x24]
10002966:	mov    esi,edx
10002968:	call   0x100358a0
1000296d:	mov    ecx,DWORD PTR [eax]
1000296f:	mov    eax,DWORD PTR [eax+0x4]
10002972:	add    ecx,0x65a0bc00
10002978:	adc    eax,0x1
1000297b:	cmp    esi,eax
1000297d:	ja     0x100029c0
1000297f:	jb     0x10002985
10002981:	cmp    edi,ecx
10002983:	jae    0x100029c0
10002985:	push   DWORD PTR [ebp-0x14]
10002988:	call   DWORD PTR ds:0x10067078
1000298e:	call   0x10036f40
10002993:	xor    eax,eax
10002995:	lea    esp,[ebp-0xd4]
1000299b:	mov    ecx,DWORD PTR [ebp-0xc]
1000299e:	mov    DWORD PTR fs:0x0,ecx
100029a5:	pop    ecx
100029a6:	pop    edi
100029a7:	pop    esi
100029a8:	pop    ebx
100029a9:	mov    ecx,DWORD PTR [ebp+0x8c]
100029af:	xor    ecx,ebp
100029b1:	call   0x10043615
100029b6:	add    ebp,0x90
100029bc:	leave  
100029bd:	ret    0x4
100029c0:	call   0x1002f6a0
100029c5:	mov    DWORD PTR [ebp-0x24],eax
100029c8:	lea    eax,[ebp-0x24]
100029cb:	push   eax
100029cc:	lea    eax,[ebp-0x14]
100029cf:	push   eax
100029d0:	push   0x4
100029d2:	pop    ecx
100029d3:	mov    DWORD PTR [ebp-0x20],edx
100029d6:	call   0x100359b0
100029db:	push   DWORD PTR [ebp-0x14]
100029de:	call   DWORD PTR ds:0x10067078
100029e4:	push   0xf
100029e6:	pop    esi
100029e7:	push   ebx
100029e8:	lea    ecx,[ebp+0x70]
100029eb:	mov    DWORD PTR [ebp+0x88],esi
100029f1:	call   0x1000141c
100029f6:	mov    BYTE PTR [ebp-0x4],0x3
100029fa:	cmp    BYTE PTR ds:0x10082c9c,bl
10002a00:	jne    0x10002a2b
10002a02:	lea    eax,[ebp-0x18]
10002a05:	push   eax
10002a06:	call   0x10037670
10002a0b:	mov    eax,DWORD PTR [eax]
10002a0d:	cmp    DWORD PTR [eax-0xc],ebx
10002a10:	pop    ecx
10002a11:	setne  al
10002a14:	mov    ds:0x10082c9d,al
10002a19:	mov    eax,DWORD PTR [ebp-0x18]
10002a1c:	add    eax,0xfffffff0
10002a1f:	call   0x10002069
10002a24:	mov    BYTE PTR ds:0x10082c9c,0x1
10002a2b:	cmp    BYTE PTR ds:0x10082c9d,bl
10002a31:	mov    edi,0x1006dcf8
10002a36:	jne    0x10002a3d
10002a38:	mov    edi,0x1006dd1c
10002a3d:	push   0x1006dd20
10002a42:	push   0x3
10002a44:	mov    ecx,0x1006dd58
10002a49:	call   0x100042b4
10002a4e:	pop    ecx
10002a4f:	pop    ecx
10002a50:	push   eax
10002a51:	lea    ecx,[ebp-0x38]
10002a54:	call   0x100011a7
10002a59:	push   edi
10002a5a:	push   eax
10002a5b:	lea    eax,[ebp-0xa8]
10002a61:	push   eax
10002a62:	mov    BYTE PTR [ebp-0x4],0x4
10002a66:	call   0x10006727
10002a6b:	add    esp,0xc
10002a6e:	push   0xffffffff
10002a70:	push   ebx
10002a71:	push   eax
10002a72:	lea    ecx,[ebp+0x70]
10002a75:	mov    BYTE PTR [ebp-0x4],0x5
10002a79:	call   0x10001241
10002a7e:	push   ebx
10002a7f:	push   0x1
10002a81:	lea    ecx,[ebp-0xa8]
10002a87:	call   0x100012f0
10002a8c:	push   ebx
10002a8d:	push   0x1
10002a8f:	lea    ecx,[ebp-0x38]
10002a92:	call   0x100012f0
10002a97:	push   ebx
10002a98:	lea    ecx,[ebp+0x38]
10002a9b:	mov    DWORD PTR [ebp+0x50],esi
10002a9e:	call   0x1000141c
10002aa3:	push   ebx
10002aa4:	lea    ecx,[ebp+0x0]
10002aa7:	mov    DWORD PTR [ebp+0x18],esi
10002aaa:	call   0x1000141c
10002aaf:	push   ebx
10002ab0:	lea    ecx,[ebp+0x1c]
10002ab3:	mov    DWORD PTR [ebp+0x34],esi
10002ab6:	call   0x1000141c
10002abb:	mov    BYTE PTR [ebp-0x4],0x8
10002abf:	lea    eax,[ebp+0x38]
10002ac2:	mov    DWORD PTR [ebp-0x24],ebx
10002ac5:	mov    DWORD PTR [ebp-0x20],ebx
10002ac8:	push   eax
10002ac9:	lea    ebx,[ebp-0x24]
10002acc:	lea    ecx,[ebp+0x1c]
10002acf:	call   0x10037f40
10002ad4:	xor    ebx,ebx
10002ad6:	cmp    al,bl
10002ad8:	pop    ecx
10002ad9:	je     0x10002c68
10002adf:	lea    eax,[ebp+0x1c]
10002ae2:	push   eax
10002ae3:	lea    ecx,[ebp-0x7c]
10002ae6:	call   0x10030ca0
10002aeb:	pop    ecx
10002aec:	mov    esi,eax
10002aee:	push   0x1006dd5c
10002af3:	push   0x5
10002af5:	mov    ecx,0x1006dd94
10002afa:	mov    BYTE PTR [ebp-0x4],0x9
10002afe:	call   0x100042b4
10002b03:	pop    ecx
10002b04:	pop    ecx
10002b05:	push   eax
10002b06:	lea    ecx,[ebp-0x60]
10002b09:	call   0x100011a7
10002b0e:	push   esi
10002b0f:	push   eax
10002b10:	lea    eax,[ebp-0xa8]
10002b16:	push   eax
10002b17:	mov    BYTE PTR [ebp-0x4],0xa
10002b1b:	call   0x1000676d
10002b20:	add    esp,0xc
10002b23:	push   0xffffffff
10002b25:	push   ebx
10002b26:	lea    esi,[ebp+0x70]
10002b29:	mov    BYTE PTR [ebp-0x4],0xb
10002b2d:	call   0x10004cbe
10002b32:	xor    edi,edi
10002b34:	push   ebx
10002b35:	inc    edi
10002b36:	push   edi
10002b37:	lea    ecx,[ebp-0xa8]
10002b3d:	call   0x100012f0
10002b42:	push   ebx
10002b43:	push   edi
10002b44:	lea    ecx,[ebp-0x60]
10002b47:	call   0x100012f0
10002b4c:	push   ebx
10002b4d:	push   edi
10002b4e:	lea    ecx,[ebp-0x7c]
10002b51:	mov    BYTE PTR [ebp-0x4],0x8
10002b55:	call   0x100012f0
10002b5a:	lea    eax,[ebp+0x38]
10002b5d:	push   eax
10002b5e:	lea    ecx,[ebp-0xa8]
10002b64:	call   0x10030ca0
10002b69:	pop    ecx
10002b6a:	mov    esi,eax
10002b6c:	push   0x1006dd9c
10002b71:	push   0x7
10002b73:	mov    ecx,0x1006ddcc
10002b78:	mov    BYTE PTR [ebp-0x4],0xc
10002b7c:	call   0x100042b4
10002b81:	pop    ecx
10002b82:	pop    ecx
10002b83:	push   eax
10002b84:	lea    ecx,[ebp-0x60]
10002b87:	call   0x100011a7
10002b8c:	push   esi
10002b8d:	push   eax
10002b8e:	lea    eax,[ebp-0x7c]
10002b91:	push   eax
10002b92:	mov    BYTE PTR [ebp-0x4],0xd
10002b96:	call   0x1000676d
10002b9b:	add    esp,0xc
10002b9e:	push   0xffffffff
10002ba0:	push   ebx
10002ba1:	lea    esi,[ebp+0x70]
10002ba4:	mov    BYTE PTR [ebp-0x4],0xe
10002ba8:	call   0x10004cbe
10002bad:	push   ebx
10002bae:	push   edi
10002baf:	lea    ecx,[ebp-0x7c]
10002bb2:	call   0x100012f0
10002bb7:	push   ebx
10002bb8:	push   edi
10002bb9:	lea    ecx,[ebp-0x60]
10002bbc:	call   0x100012f0
10002bc1:	push   ebx
10002bc2:	push   edi
10002bc3:	lea    ecx,[ebp-0xa8]
10002bc9:	mov    BYTE PTR [ebp-0x4],0x8
10002bcd:	call   0x100012f0
10002bd2:	mov    eax,ds:0x10082a6c
10002bd7:	mov    ecx,0x10082a6c
10002bdc:	call   DWORD PTR [eax+0xc]
10002bdf:	add    eax,0x10
10002be2:	mov    DWORD PTR [ebp-0x14],eax
10002be5:	push   0x1006ddd4
10002bea:	push   0xc
10002bec:	mov    ecx,0x1006de04
10002bf1:	mov    BYTE PTR [ebp-0x4],0xf
10002bf5:	call   0x1000444a
10002bfa:	pop    ecx
10002bfb:	pop    ecx
10002bfc:	push   DWORD PTR [ebp-0x20]
10002bff:	push   DWORD PTR [ebp-0x24]
10002c02:	push   eax
10002c03:	lea    eax,[ebp-0x14]
10002c06:	call   0x100066dc
10002c0b:	add    esp,0xc
10002c0e:	call   DWORD PTR ds:0x10080ffc
10002c14:	lea    esi,[ebp-0x14]
10002c17:	mov    DWORD PTR [ebp-0x18],eax
10002c1a:	call   0x100041e6
10002c1f:	mov    edi,eax
10002c21:	cmp    edi,ebx
10002c23:	je     0x10002c34
10002c25:	push   edi
10002c26:	call   DWORD PTR ds:0x100670ac
10002c2c:	inc    eax
10002c2d:	cmp    eax,0x3fffffff
10002c32:	jle    0x10002c38
10002c34:	xor    eax,eax
10002c36:	jmp    0x10002c53
10002c38:	lea    esi,[eax+eax*1]
10002c3b:	mov    eax,esi
10002c3d:	call   0x1004b9b0
10002c42:	mov    eax,esp
10002c44:	mov    DWORD PTR [ebp-0x10],esp
10002c47:	push   DWORD PTR [ebp-0x18]
10002c4a:	push   esi
10002c4b:	push   edi
10002c4c:	mov    esi,eax
10002c4e:	call   0x10002425
10002c53:	push   eax
10002c54:	lea    eax,[ebp+0x70]
10002c57:	push   eax
10002c58:	call   0x10004126
10002c5d:	mov    eax,DWORD PTR [ebp-0x14]
10002c60:	add    eax,0xfffffff0
10002c63:	call   0x10002069
10002c68:	mov    DWORD PTR [ebp-0x88],ebx
10002c6e:	mov    DWORD PTR [ebp-0x84],ebx
10002c74:	mov    DWORD PTR [ebp-0x80],ebx
10002c77:	lea    eax,[ebp-0x8c]
10002c7d:	push   eax
10002c7e:	mov    BYTE PTR [ebp-0x4],0x10
10002c82:	call   0x10038100
10002c87:	pop    ecx
10002c88:	mov    DWORD PTR [ebp-0x14],ebx
10002c8b:	lea    eax,[ebp-0x8c]
10002c91:	call   0x100045f3
10002c96:	cmp    DWORD PTR [ebp-0x14],eax
10002c99:	je     0x10002d07
10002c9b:	push   0x1006de20
10002ca0:	push   0x5
10002ca2:	mov    ecx,0x1006de60
10002ca7:	call   0x100042b4
10002cac:	pop    ecx
10002cad:	pop    ecx
10002cae:	push   eax
10002caf:	lea    ecx,[ebp-0x60]
10002cb2:	call   0x100011a7
10002cb7:	mov    edi,eax
10002cb9:	mov    BYTE PTR [ebp-0x4],0x11
10002cbd:	push   DWORD PTR [ebp-0x14]
10002cc0:	lea    esi,[ebp-0x8c]
10002cc6:	call   0x10004609
10002ccb:	push   eax
10002ccc:	lea    eax,[ebp-0x7c]
10002ccf:	push   edi
10002cd0:	push   eax
10002cd1:	call   0x1000676d
10002cd6:	add    esp,0xc
10002cd9:	push   0xffffffff
10002cdb:	push   ebx
10002cdc:	lea    esi,[ebp+0x70]
10002cdf:	mov    BYTE PTR [ebp-0x4],0x12
10002ce3:	call   0x10004cbe
10002ce8:	push   ebx
10002ce9:	push   0x1
10002ceb:	lea    ecx,[ebp-0x7c]
10002cee:	call   0x100012f0
10002cf3:	push   ebx
10002cf4:	push   0x1
10002cf6:	lea    ecx,[ebp-0x60]
10002cf9:	mov    BYTE PTR [ebp-0x4],0x10
10002cfd:	call   0x100012f0
10002d02:	inc    DWORD PTR [ebp-0x14]
10002d05:	jmp    0x10002c8b
10002d07:	lea    eax,[ebp-0x38]
10002d0a:	push   eax
10002d0b:	call   0x100388f0
10002d10:	pop    ecx
10002d11:	push   eax
10002d12:	lea    ecx,[ebp-0xa8]
10002d18:	mov    BYTE PTR [ebp-0x4],0x13
10002d1c:	call   0x10030ca0
10002d21:	pop    ecx
10002d22:	mov    esi,eax
10002d24:	push   0x1006de68
10002d29:	push   0x7
10002d2b:	mov    ecx,0x1006dea4
10002d30:	mov    BYTE PTR [ebp-0x4],0x14
10002d34:	call   0x100042b4
10002d39:	pop    ecx
10002d3a:	pop    ecx
10002d3b:	push   eax
10002d3c:	lea    ecx,[ebp-0x60]
10002d3f:	call   0x100011a7
10002d44:	push   esi
10002d45:	push   eax
10002d46:	lea    eax,[ebp-0x7c]
10002d49:	push   eax
10002d4a:	mov    BYTE PTR [ebp-0x4],0x15
10002d4e:	call   0x1000676d
10002d53:	add    esp,0xc
10002d56:	push   0xffffffff
10002d58:	push   ebx
10002d59:	lea    esi,[ebp+0x70]
10002d5c:	mov    BYTE PTR [ebp-0x4],0x16
10002d60:	call   0x10004cbe
10002d65:	xor    esi,esi
10002d67:	push   ebx
10002d68:	inc    esi
10002d69:	push   esi
10002d6a:	lea    ecx,[ebp-0x7c]
10002d6d:	call   0x100012f0
10002d72:	push   ebx
10002d73:	push   esi
10002d74:	lea    ecx,[ebp-0x60]
10002d77:	call   0x100012f0
10002d7c:	push   ebx
10002d7d:	push   esi
10002d7e:	lea    ecx,[ebp-0xa8]
10002d84:	call   0x100012f0
10002d89:	push   ebx
10002d8a:	push   esi
10002d8b:	lea    ecx,[ebp-0x38]
10002d8e:	mov    BYTE PTR [ebp-0x4],0x10
10002d92:	call   0x100012f0
10002d97:	call   DWORD PTR ds:0x10080ffc
10002d9d:	mov    DWORD PTR [ebp-0x18],eax
10002da0:	mov    eax,ds:0x10082a6c
10002da5:	mov    ecx,0x10082a6c
10002daa:	call   DWORD PTR [eax+0xc]
10002dad:	add    eax,0x10
10002db0:	mov    DWORD PTR [ebp-0x14],eax
10002db3:	mov    BYTE PTR [ebp-0x4],0x17
10002db7:	call   0x10032fb0
10002dbc:	push   0x1006deac
10002dc1:	push   0x4
10002dc3:	mov    ecx,0x1006dee0
10002dc8:	mov    esi,eax
10002dca:	call   0x1000444a
10002dcf:	pop    ecx
10002dd0:	pop    ecx
10002dd1:	push   esi
10002dd2:	push   eax
10002dd3:	lea    eax,[ebp-0x14]
10002dd6:	call   0x100066dc
10002ddb:	pop    ecx
10002ddc:	pop    ecx
10002ddd:	push   0xffffffff
10002ddf:	lea    esi,[ebp-0x14]
10002de2:	call   0x100021a7
10002de7:	mov    edi,eax
10002de9:	cmp    edi,ebx
10002deb:	je     0x10002dfc
10002ded:	push   edi
10002dee:	call   DWORD PTR ds:0x100670ac
10002df4:	inc    eax
10002df5:	cmp    eax,0x3fffffff
10002dfa:	jle    0x10002e00
10002dfc:	xor    eax,eax
10002dfe:	jmp    0x10002e1b
10002e00:	lea    esi,[eax+eax*1]
10002e03:	mov    eax,esi
10002e05:	call   0x1004b9b0
10002e0a:	mov    eax,esp
10002e0c:	mov    DWORD PTR [ebp-0x10],esp
10002e0f:	push   DWORD PTR [ebp-0x18]
10002e12:	push   esi
10002e13:	push   edi
10002e14:	mov    esi,eax
10002e16:	call   0x10002425
10002e1b:	push   eax
10002e1c:	lea    ecx,[ebp-0x60]
10002e1f:	call   0x100011a7
10002e24:	mov    esi,eax
10002e26:	push   0x1006deec
10002e2b:	push   0x5
10002e2d:	mov    ecx,0x1006df10
10002e32:	mov    BYTE PTR [ebp-0x4],0x18
10002e36:	call   0x100042b4
10002e3b:	pop    ecx
10002e3c:	pop    ecx
10002e3d:	push   esi
10002e3e:	push   eax
10002e3f:	lea    eax,[ebp-0x7c]
10002e42:	push   eax
10002e43:	call   0x100067b8
10002e48:	add    esp,0xc
10002e4b:	push   0xffffffff
10002e4d:	push   ebx
10002e4e:	lea    esi,[ebp+0x70]
10002e51:	mov    BYTE PTR [ebp-0x4],0x19
10002e55:	call   0x10004cbe
10002e5a:	push   ebx
10002e5b:	push   0x1
10002e5d:	lea    ecx,[ebp-0x7c]
10002e60:	call   0x100012f0
10002e65:	push   ebx
10002e66:	push   0x1
10002e68:	lea    ecx,[ebp-0x60]
10002e6b:	call   0x100012f0
10002e70:	mov    BYTE PTR [ebp-0x4],0x10
10002e74:	mov    eax,DWORD PTR [ebp-0x14]
10002e77:	add    eax,0xfffffff0
10002e7a:	call   0x10002069
10002e7f:	lea    eax,[ebp-0x9c]
10002e85:	push   eax
10002e86:	call   0x10033df0
10002e8b:	mov    esi,eax
10002e8d:	lea    edi,[ebp-0x2c]
10002e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002e93:	pop    ecx
10002e94:	lea    eax,[ebp-0x2c]
10002e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002e98:	push   eax
10002e99:	lea    esi,[ebp-0x60]
10002e9c:	call   0x100309c0
10002ea1:	pop    ecx
10002ea2:	mov    esi,eax
10002ea4:	push   0x1006df18
10002ea9:	push   0x5
10002eab:	mov    ecx,0x1006df48
10002eb0:	mov    BYTE PTR [ebp-0x4],0x1a
10002eb4:	call   0x100042b4
10002eb9:	pop    ecx
10002eba:	pop    ecx
10002ebb:	push   esi
10002ebc:	push   eax
10002ebd:	lea    eax,[ebp-0x7c]
10002ec0:	push   eax
10002ec1:	call   0x100067b8
10002ec6:	add    esp,0xc
10002ec9:	push   0xffffffff
10002ecb:	push   ebx
10002ecc:	lea    esi,[ebp+0x70]
10002ecf:	mov    BYTE PTR [ebp-0x4],0x1b
10002ed3:	call   0x10004cbe
10002ed8:	xor    edi,edi
10002eda:	push   ebx
10002edb:	inc    edi
10002edc:	push   edi
10002edd:	lea    ecx,[ebp-0x7c]
10002ee0:	call   0x100012f0
10002ee5:	push   ebx
10002ee6:	mov    BYTE PTR [ebp-0x4],0x10
10002eea:	push   edi
10002eeb:	lea    ecx,[ebp-0x60]
10002eee:	call   0x100012f0
10002ef3:	call   DWORD PTR ds:0x10080ffc
10002ef9:	mov    DWORD PTR [ebp-0x20],eax
10002efc:	lea    eax,[ebp-0x14]
10002eff:	push   eax
10002f00:	mov    DWORD PTR [ebp-0x14],ebx
10002f03:	call   0x10038fc0
10002f08:	cmp    al,bl
10002f0a:	pop    ecx
10002f0b:	je     0x10002f15
10002f0d:	cmp    DWORD PTR [ebp-0x14],ebx
10002f10:	jne    0x10002f15
10002f12:	mov    DWORD PTR [ebp-0x14],edi
10002f15:	mov    eax,ds:0x10082a6c
10002f1a:	mov    ecx,0x10082a6c
10002f1f:	call   DWORD PTR [eax+0xc]
10002f22:	add    eax,0x10
10002f25:	mov    DWORD PTR [ebp-0x18],eax
10002f28:	push   0x1006df50
10002f2d:	push   0x4
10002f2f:	mov    ecx,0x1006dee0
10002f34:	mov    BYTE PTR [ebp-0x4],0x1c
10002f38:	call   0x1000444a
10002f3d:	pop    ecx
10002f3e:	pop    ecx
10002f3f:	push   DWORD PTR [ebp-0x14]
10002f42:	push   eax
10002f43:	lea    eax,[ebp-0x18]
10002f46:	call   0x100066dc
10002f4b:	pop    ecx
10002f4c:	pop    ecx
10002f4d:	push   0xffffffff
10002f4f:	lea    esi,[ebp-0x18]
10002f52:	call   0x100021a7
10002f57:	mov    esi,eax
10002f59:	cmp    esi,ebx
10002f5b:	je     0x10002f6c
10002f5d:	push   esi
10002f5e:	call   DWORD PTR ds:0x100670ac
10002f64:	inc    eax
10002f65:	cmp    eax,0x3fffffff
10002f6a:	jle    0x10002f70
10002f6c:	xor    eax,eax
10002f6e:	jmp    0x10002f8e
10002f70:	lea    edi,[eax+eax*1]
10002f73:	mov    eax,edi
10002f75:	call   0x1004b9b0
10002f7a:	mov    eax,esp
10002f7c:	mov    DWORD PTR [ebp-0x10],esp
10002f7f:	push   DWORD PTR [ebp-0x20]
10002f82:	push   edi
10002f83:	push   esi
10002f84:	mov    esi,eax
10002f86:	call   0x10002425
10002f8b:	xor    edi,edi
10002f8d:	inc    edi
10002f8e:	push   eax
10002f8f:	lea    ecx,[ebp-0x60]
10002f92:	call   0x100011a7
10002f97:	mov    esi,eax
10002f99:	push   0x1006df78
10002f9e:	push   0x6
10002fa0:	mov    ecx,0x1006dfa0
10002fa5:	mov    BYTE PTR [ebp-0x4],0x1d
10002fa9:	call   0x100042b4
10002fae:	pop    ecx
10002faf:	pop    ecx
10002fb0:	push   esi
10002fb1:	push   eax
10002fb2:	lea    eax,[ebp-0x7c]
10002fb5:	push   eax
10002fb6:	call   0x100067b8
10002fbb:	add    esp,0xc
10002fbe:	push   0xffffffff
10002fc0:	push   ebx
10002fc1:	lea    esi,[ebp+0x70]
10002fc4:	mov    BYTE PTR [ebp-0x4],0x1e
10002fc8:	call   0x10004cbe
10002fcd:	push   ebx
10002fce:	push   edi
10002fcf:	lea    ecx,[ebp-0x7c]
10002fd2:	call   0x100012f0
10002fd7:	push   ebx
10002fd8:	push   edi
10002fd9:	lea    ecx,[ebp-0x60]
10002fdc:	call   0x100012f0
10002fe1:	mov    BYTE PTR [ebp-0x4],0x10
10002fe5:	mov    eax,DWORD PTR [ebp-0x18]
10002fe8:	add    eax,0xfffffff0
10002feb:	call   0x10002069
10002ff0:	lea    ecx,[ebp+0x54]
10002ff3:	call   0x100186d5
10002ff8:	mov    BYTE PTR [ebp-0x4],0x1f
10002ffc:	cmp    DWORD PTR [ebp+0x6c],0x10
10003000:	mov    eax,DWORD PTR [ebp+0x58]
10003003:	jae    0x10003008
10003005:	lea    eax,[ebp+0x58]
10003008:	push   eax
10003009:	call   0x10002068
1000300e:	pop    ecx
1000300f:	push   DWORD PTR ds:0x10082e00
10003015:	lea    ecx,[ebp-0xa8]
1000301b:	mov    DWORD PTR [ebp-0x18],ebx
1000301e:	call   0x100011a7
10003023:	push   0xffffffff
10003025:	lea    eax,[ebp-0x18]
10003028:	push   eax
10003029:	lea    eax,[ebp+0x70]
1000302c:	push   eax
1000302d:	lea    eax,[ebp+0x54]
10003030:	push   eax
10003031:	lea    eax,[ebp-0x20]
10003034:	push   eax
10003035:	lea    edx,[ebp-0xa8]
1000303b:	mov    BYTE PTR [ebp-0x4],0x20
1000303f:	call   0x10030b80
10003044:	mov    ecx,DWORD PTR [eax]
10003046:	mov    edi,ecx
10003048:	add    esp,0x14
1000304b:	mov    DWORD PTR [eax],ebx
1000304d:	mov    DWORD PTR [ebp-0x14],edi
10003050:	push   DWORD PTR [ebp-0x20]
10003053:	call   0x10042fe2
10003058:	pop    ecx
10003059:	push   ebx
1000305a:	push   0x1
1000305c:	lea    ecx,[ebp-0xa8]
10003062:	mov    BYTE PTR [ebp-0x4],0x22
10003066:	call   0x100012f0
1000306b:	cmp    edi,ebx
1000306d:	jne    0x1000307a
1000306f:	call   0x10018654
10003074:	push   ebx
10003075:	jmp    0x10003138
1000307a:	mov    eax,DWORD PTR [ebp-0x18]
1000307d:	mov    DWORD PTR [ebp-0x40],eax
10003080:	lea    eax,[ebp-0x44]
10003083:	push   eax
10003084:	mov    DWORD PTR [ebp-0x44],ebx
10003087:	mov    DWORD PTR [ebp-0x3c],edi
1000308a:	call   0x100374b0
1000308f:	sub    eax,ebx
10003091:	je     0x1000310a
10003093:	dec    eax
10003094:	je     0x100030e4
10003096:	dec    eax
10003097:	je     0x100030c9
10003099:	dec    eax
1000309a:	je     0x100030ae
1000309c:	call   0x10002068
100030a1:	push   0x5
100030a3:	call   0x10038b80
100030a8:	pop    ecx
100030a9:	jmp    0x10003137
100030ae:	lea    eax,[ebp-0x44]
100030b1:	push   eax
100030b2:	lea    esi,[ebp-0x7c]
100030b5:	call   0x10037170
100030ba:	push   eax
100030bb:	mov    BYTE PTR [ebp-0x4],0x26
100030bf:	call   0x10003e4f
100030c4:	pop    ecx
100030c5:	mov    ecx,esi
100030c7:	jmp    0x10003100
100030c9:	lea    eax,[ebp-0x44]
100030cc:	push   eax
100030cd:	lea    esi,[ebp-0x60]
100030d0:	call   0x10037170
100030d5:	push   eax
100030d6:	mov    BYTE PTR [ebp-0x4],0x25
100030da:	call   0x10003bff
100030df:	pop    ecx
100030e0:	mov    ecx,esi
100030e2:	jmp    0x10003100
100030e4:	lea    eax,[ebp-0x44]
100030e7:	push   eax
100030e8:	lea    esi,[ebp-0xc4]
100030ee:	call   0x10037170
100030f3:	push   eax
100030f4:	mov    BYTE PTR [ebp-0x4],0x24
100030f8:	call   0x10003a7f
100030fd:	pop    ecx
100030fe:	mov    ecx,esi
10003100:	push   ebx
10003101:	push   0x1
10003103:	call   0x100012f0
10003108:	jmp    0x10003137
1000310a:	call   0x10002068
1000310f:	lea    eax,[ebp-0x18]
10003112:	push   0x1
10003114:	push   eax
10003115:	call   0x10002818
1000311a:	pop    ecx
1000311b:	pop    ecx
1000311c:	mov    BYTE PTR [ebp-0x4],0x23
10003120:	mov    esi,DWORD PTR [eax]
10003122:	lea    eax,[ebp-0x44]
10003125:	call   0x100031a7
1000312a:	lea    eax,[ebp-0x18]
1000312d:	call   0x1000428d
10003132:	call   0x10002068
10003137:	push   edi
10003138:	call   0x10042fe2
1000313d:	pop    ecx
1000313e:	push   ebx
1000313f:	push   0x1
10003141:	lea    ecx,[ebp+0x54]
10003144:	call   0x100012f0
10003149:	lea    esi,[ebp-0x8c]
1000314f:	call   0x10004996
10003154:	xor    esi,esi
10003156:	push   ebx
10003157:	inc    esi
10003158:	push   esi
10003159:	lea    ecx,[ebp+0x1c]
1000315c:	call   0x100012f0
10003161:	push   ebx
10003162:	push   esi
10003163:	lea    ecx,[ebp+0x0]
10003166:	call   0x100012f0
1000316b:	push   ebx
1000316c:	push   esi
1000316d:	lea    ecx,[ebp+0x38]
10003170:	call   0x100012f0
10003175:	push   ebx
10003176:	push   esi
10003177:	lea    ecx,[ebp+0x70]
1000317a:	call   0x100012f0
1000317f:	jmp    0x1000298e
10003184:	call   0x10018654
10003189:	mov    eax,0x1000318f
1000318e:	ret    
1000318f:	jmp    0x1000298e
10003194:	push   0x4
10003196:	call   0x10038b80
1000319b:	pop    ecx
1000319c:	call   0x10018654
100031a1:	mov    eax,0x1000298e
100031a6:	ret    
100031a7:	push   ebp
100031a8:	mov    ebp,esp
100031aa:	and    esp,0xfffffff8
100031ad:	push   ecx
100031ae:	push   ecx
100031af:	mov    ecx,DWORD PTR [esi]
100031b1:	push   ebx
100031b2:	push   edi
100031b3:	mov    ebx,eax
100031b5:	call   0x10034bf0
100031ba:	and    DWORD PTR [esp+0x8],0x0
100031bf:	xor    eax,eax
100031c1:	lea    edi,[esp+0xc]
100031c5:	stos   DWORD PTR es:[edi],eax
100031c6:	lea    eax,[esp+0x8]
100031ca:	push   eax
100031cb:	push   DWORD PTR [esi]
100031cd:	xor    ecx,ecx
100031cf:	inc    ecx
100031d0:	call   0x100359b0
100031d5:	push   esi
100031d6:	mov    ecx,ebx
100031d8:	call   0x1000324f
100031dd:	push   esi
100031de:	mov    ecx,ebx
100031e0:	call   0x10003731
100031e5:	push   esi
100031e6:	call   0x10003470
100031eb:	call   0x1000356f
100031f0:	push   esi
100031f1:	call   0x1000369f
100031f6:	push   ebx
100031f7:	call   0x100374b0
100031fc:	push   ebx
100031fd:	mov    edi,eax
100031ff:	call   0x100374b0
10003204:	push   edi
10003205:	push   DWORD PTR [esi]
10003207:	mov    ecx,eax
10003209:	call   0x10035ac0
1000320e:	push   ebx
1000320f:	call   0x100374b0
10003214:	push   ebx
10003215:	mov    edi,eax
10003217:	call   0x100374b0
1000321c:	push   edi
1000321d:	push   DWORD PTR [esi]
1000321f:	mov    ecx,eax
10003221:	call   0x10035cc0
10003226:	call   0x1002f6a0
1000322b:	mov    DWORD PTR [esp+0x8],eax
1000322f:	lea    eax,[esp+0x8]
10003233:	push   eax
10003234:	push   DWORD PTR [esi]
10003236:	xor    ecx,ecx
10003238:	inc    ecx
10003239:	mov    DWORD PTR [esp+0x14],edx
1000323d:	call   0x100359b0
10003242:	mov    ecx,ebx
10003244:	call   0x100039f1
10003249:	pop    edi
1000324a:	pop    ebx
1000324b:	mov    esp,ebp
1000324d:	pop    ebp
1000324e:	ret    
1000324f:	push   0x160
10003254:	mov    eax,0x1006373a
10003259:	call   0x10059e5e
1000325e:	mov    eax,DWORD PTR [ebp+0x8]
10003261:	mov    edi,ecx
10003263:	push   edi
10003264:	mov    DWORD PTR [ebp-0x9c],eax
1000326a:	mov    DWORD PTR [ebp-0x98],edi
10003270:	call   0x100374b0
10003275:	xor    ebx,ebx
10003277:	cmp    eax,ebx
10003279:	je     0x1000342a
1000327f:	mov    DWORD PTR [ebp-0x90],eax
10003285:	jmp    0x1000328f
10003287:	mov    edi,DWORD PTR [ebp-0x98]
1000328d:	xor    ebx,ebx
1000328f:	push   edi
10003290:	lea    esi,[ebp-0xc4]
10003296:	call   0x10037170
1000329b:	push   eax
1000329c:	lea    esi,[ebp-0x30]
1000329f:	mov    DWORD PTR [ebp-0x4],ebx
100032a2:	call   0x1002f6d0
100032a7:	pop    ecx
100032a8:	push   ebx
100032a9:	push   0x1
100032ab:	lea    ecx,[ebp-0xc4]
100032b1:	mov    BYTE PTR [ebp-0x4],0x2
100032b5:	call   0x100012f0
100032ba:	push   edi
100032bb:	lea    esi,[ebp-0x4c]
100032be:	call   0x10037170
100032c3:	push   edi
100032c4:	lea    esi,[ebp-0x68]
100032c7:	mov    BYTE PTR [ebp-0x4],0x3
100032cb:	call   0x10037170
100032d0:	push   edi
100032d1:	lea    esi,[ebp-0x84]
100032d7:	mov    BYTE PTR [ebp-0x4],0x4
100032db:	call   0x10037170
100032e0:	push   edi
100032e1:	mov    BYTE PTR [ebp-0x4],0x5
100032e5:	call   0x100374b0
100032ea:	push   edi
100032eb:	mov    DWORD PTR [ebp-0x94],eax
100032f1:	call   0x100374b0
100032f6:	push   ebx
100032f7:	cdq    
100032f8:	mov    esi,0x2710
100032fd:	push   esi
100032fe:	push   edx
100032ff:	push   eax
10003300:	call   0x1004f990
10003305:	push   edi
10003306:	mov    DWORD PTR [ebp-0xa4],eax
1000330c:	mov    DWORD PTR [ebp-0xa0],edx
10003312:	call   0x100374b0
10003317:	push   ebx
10003318:	cdq    
10003319:	push   esi
1000331a:	push   edx
1000331b:	push   eax
1000331c:	call   0x1004f990
10003321:	mov    DWORD PTR [ebp-0x8c],eax
10003327:	mov    DWORD PTR [ebp-0x88],edx
1000332d:	call   0x1002f6a0
10003332:	add    DWORD PTR [ebp-0x8c],eax
10003338:	mov    eax,DWORD PTR [ebp-0x94]
1000333e:	lea    ecx,[ebp-0x30]
10003341:	adc    DWORD PTR [ebp-0x88],edx
10003347:	shr    eax,0x2
1000334a:	test   al,0x1
1000334c:	lea    eax,[ebp-0xc4]
10003352:	push   eax
10003353:	je     0x10003361
10003355:	call   0x100307c0
1000335a:	pop    ecx
1000335b:	mov    BYTE PTR [ebp-0x4],0x6
1000335f:	jmp    0x1000336b
10003361:	call   0x1002f810
10003366:	pop    ecx
10003367:	mov    BYTE PTR [ebp-0x4],0x7
1000336b:	push   0xffffffff
1000336d:	push   ebx
1000336e:	push   eax
1000336f:	lea    ecx,[ebp-0x30]
10003372:	call   0x10001241
10003377:	push   ebx
10003378:	push   0x1
1000337a:	lea    ecx,[ebp-0xc4]
10003380:	mov    BYTE PTR [ebp-0x4],0x5
10003384:	call   0x100012f0
10003389:	sub    esp,0x1c
1000338c:	mov    ecx,esp
1000338e:	mov    DWORD PTR [ebp-0xa8],esp
10003394:	push   0x1006dd18
10003399:	lea    edi,[ebp-0x8c]
1000339f:	lea    ebx,[ebp-0xa4]
100033a5:	call   0x100011a7
100033aa:	push   DWORD PTR [ebp-0x94]
100033b0:	lea    eax,[ebp-0x84]
100033b6:	push   eax
100033b7:	lea    eax,[ebp-0x68]
100033ba:	push   eax
100033bb:	lea    eax,[ebp-0x30]
100033be:	push   eax
100033bf:	lea    ecx,[ebp-0x4c]
100033c2:	lea    esi,[ebp-0x16c]
100033c8:	call   0x100026ef
100033cd:	mov    ecx,DWORD PTR [ebp-0x9c]
100033d3:	mov    BYTE PTR [ebp-0x4],0x8
100033d7:	mov    edx,DWORD PTR [ecx]
100033d9:	lea    ecx,[ebp-0x30]
100033dc:	push   ecx
100033dd:	push   edx
100033de:	mov    ecx,eax
100033e0:	call   0x10034cd0
100033e5:	call   0x10003432
100033ea:	xor    edi,edi
100033ec:	xor    esi,esi
100033ee:	push   edi
100033ef:	inc    esi
100033f0:	push   esi
100033f1:	lea    ecx,[ebp-0x84]
100033f7:	call   0x100012f0
100033fc:	push   edi
100033fd:	push   esi
100033fe:	lea    ecx,[ebp-0x68]
10003401:	call   0x100012f0
10003406:	push   edi
10003407:	push   esi
10003408:	lea    ecx,[ebp-0x4c]
1000340b:	call   0x100012f0
10003410:	or     DWORD PTR [ebp-0x4],0xffffffff
10003414:	push   edi
10003415:	push   esi
10003416:	lea    ecx,[ebp-0x30]
10003419:	call   0x100012f0
1000341e:	dec    DWORD PTR [ebp-0x90]
10003424:	jne    0x10003287
1000342a:	call   0x10059ee1
1000342f:	ret    0x4
10003432:	push   ebx
10003433:	xor    ebx,ebx
10003435:	push   ebx
10003436:	push   0x1
10003438:	lea    ecx,[esi+0x88]
1000343e:	call   0x100012f0
10003443:	push   ebx
10003444:	push   0x1
10003446:	lea    ecx,[esi+0x54]
10003449:	call   0x100012f0
1000344e:	push   ebx
1000344f:	push   0x1
10003451:	lea    ecx,[esi+0x38]
10003454:	call   0x100012f0
10003459:	push   ebx
1000345a:	push   0x1
1000345c:	lea    ecx,[esi+0x1c]
1000345f:	call   0x100012f0
10003464:	push   ebx
10003465:	push   0x1
10003467:	mov    ecx,esi
10003469:	call   0x100012f0
1000346e:	pop    ebx
1000346f:	ret    
10003470:	push   0x50
10003472:	mov    eax,0x100636c6
10003477:	call   0x10059e5e
1000347c:	mov    eax,DWORD PTR [ebp+0x8]
1000347f:	mov    DWORD PTR [ebp-0x34],eax
10003482:	mov    eax,DWORD PTR [ebx]
10003484:	push   0x4
10003486:	pop    edi
10003487:	mov    DWORD PTR [ebp-0x3c],ebx
1000348a:	mov    DWORD PTR [ebp-0x38],eax
1000348d:	and    DWORD PTR [ebp-0x4],0x0
10003491:	push   ebx
10003492:	call   0x100374b0
10003497:	test   eax,eax
10003499:	je     0x1000352b
1000349f:	mov    DWORD PTR [ebp-0x30],eax
100034a2:	push   ebx
100034a3:	lea    esi,[ebp-0x2c]
100034a6:	call   0x10037170
100034ab:	mov    BYTE PTR [ebp-0x4],0x1
100034af:	mov    eax,DWORD PTR [ebp-0x18]
100034b2:	push   ebx
100034b3:	lea    esi,[ebp-0x58]
100034b6:	lea    edi,[edi+eax*1+0x1]
100034ba:	call   0x10037170
100034bf:	push   0xffffffff
100034c1:	push   0x0
100034c3:	push   eax
100034c4:	lea    ecx,[ebp-0x2c]
100034c7:	mov    BYTE PTR [ebp-0x4],0x2
100034cb:	call   0x10001241
100034d0:	push   0x0
100034d2:	push   0x1
100034d4:	mov    ecx,esi
100034d6:	mov    BYTE PTR [ebp-0x4],0x1
100034da:	call   0x100012f0
100034df:	mov    eax,DWORD PTR [ebp-0x18]
100034e2:	push   ebx
100034e3:	lea    esi,[ebp-0x58]
100034e6:	lea    edi,[edi+eax*1+0x1]
100034ea:	call   0x10037170
100034ef:	push   0xffffffff
100034f1:	push   0x0
100034f3:	push   eax
100034f4:	lea    ecx,[ebp-0x2c]
100034f7:	mov    BYTE PTR [ebp-0x4],0x3
100034fb:	call   0x10001241
10003500:	push   0x0
10003502:	push   0x1
10003504:	mov    ecx,esi
10003506:	call   0x100012f0
1000350b:	mov    eax,DWORD PTR [ebp-0x18]
1000350e:	push   0x0
10003510:	push   0x1
10003512:	lea    ecx,[ebp-0x2c]
10003515:	lea    edi,[edi+eax*1+0x1]
10003519:	mov    BYTE PTR [ebp-0x4],0x0
1000351d:	call   0x100012f0
10003522:	dec    DWORD PTR [ebp-0x30]
10003525:	jne    0x100034a2
1000352b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000352f:	mov    eax,DWORD PTR [ebp-0x38]
10003532:	push   edi
10003533:	mov    DWORD PTR [ebx],eax
10003535:	call   0x100438d7
1000353a:	pop    ecx
1000353b:	mov    DWORD PTR [ebp-0x30],eax
1000353e:	push   eax
1000353f:	mov    esi,ebx
10003541:	mov    DWORD PTR [ebp-0x4],0x4
10003548:	call   0x100375c0
1000354d:	push   DWORD PTR [ebp-0x30]
10003550:	mov    eax,DWORD PTR [ebp-0x34]
10003553:	push   0x1
10003555:	push   DWORD PTR [eax]
10003557:	mov    ecx,edi
10003559:	call   0x10036700
1000355e:	push   DWORD PTR [ebp-0x30]
10003561:	call   0x10042fe2
10003566:	pop    ecx
10003567:	call   0x10059ee1
1000356c:	ret    0x4
1000356f:	push   0x7c
10003571:	mov    eax,0x1006441d
10003576:	call   0x10059e5e
1000357b:	push   ebx
1000357c:	call   0x100374b0
10003581:	xor    edi,edi
10003583:	mov    esi,eax
10003585:	mov    DWORD PTR [ebp-0x54],esi
10003588:	mov    DWORD PTR [ebp-0x60],edi
1000358b:	mov    DWORD PTR [ebp-0x5c],edi
1000358e:	mov    DWORD PTR [ebp-0x58],edi
10003591:	lea    ecx,[ebp-0x30]
10003594:	mov    DWORD PTR [ebp-0x4],edi
10003597:	call   0x100186d5
1000359c:	cmp    esi,edi
1000359e:	mov    BYTE PTR [ebp-0x4],0x1
100035a2:	jle    0x10003629
100035a8:	mov    DWORD PTR [ebp-0x50],esi
100035ab:	push   ebx
100035ac:	lea    esi,[ebp-0x4c]
100035af:	call   0x10037170
100035b4:	push   ebx
100035b5:	mov    BYTE PTR [ebp-0x4],0x2
100035b9:	call   0x100374b0
100035be:	push   eax
100035bf:	sub    esp,0x1c
100035c2:	mov    eax,esi
100035c4:	mov    ecx,esp
100035c6:	mov    DWORD PTR [ebp-0x68],esp
100035c9:	push   eax
100035ca:	call   0x100011c9
100035cf:	lea    ecx,[ebp-0x88]
100035d5:	call   0x10002794
100035da:	push   eax
100035db:	lea    esi,[ebp-0x64]
100035de:	mov    BYTE PTR [ebp-0x4],0x3
100035e2:	call   0x1000422e
100035e7:	push   edi
100035e8:	push   0x1
100035ea:	lea    ecx,[ebp-0x88]
100035f0:	mov    BYTE PTR [ebp-0x4],0x2
100035f4:	call   0x100012f0
100035f9:	lea    ecx,[ebp-0x30]
100035fc:	lea    eax,[ebp-0x4c]
100035ff:	call   0x10006803
10003604:	test   al,al
10003606:	je     0x10003615
10003608:	push   0x1006dd18
1000360d:	lea    ecx,[ebp-0x30]
10003610:	call   0x100012d3
10003615:	push   edi
10003616:	push   0x1
10003618:	lea    ecx,[ebp-0x4c]
1000361b:	mov    BYTE PTR [ebp-0x4],0x1
1000361f:	call   0x100012f0
10003624:	dec    DWORD PTR [ebp-0x50]
10003627:	jne    0x100035ab
10003629:	cmp    DWORD PTR [ebp-0x54],edi
1000362c:	je     0x1000366f
1000362e:	push   0x3e8
10003633:	push   DWORD PTR ds:0x10082f38
10003639:	call   DWORD PTR ds:0x1006707c
1000363f:	test   eax,eax
10003641:	jne    0x1000366f
10003643:	call   0x10018928
10003648:	lea    eax,[ebp-0x64]
1000364b:	mov    ecx,0x10082f28
10003650:	call   0x10018eae
10003655:	movzx  eax,BYTE PTR ds:0x100816d0
1000365c:	push   eax
1000365d:	call   0x10018c24
10003662:	pop    ecx
10003663:	push   DWORD PTR ds:0x10082f38
10003669:	call   DWORD PTR ds:0x10067090
1000366f:	push   0x1006dd18
10003674:	lea    esi,[ebp-0x30]
10003677:	call   0x10006825
1000367c:	test   al,al
1000367e:	pop    ecx
1000367f:	jne    0x10003686
10003681:	call   0x10018654
10003686:	push   edi
10003687:	push   0x1
10003689:	lea    ecx,[ebp-0x30]
1000368c:	call   0x100012f0
10003691:	lea    esi,[ebp-0x64]
10003694:	call   0x100047a5
10003699:	call   0x10059ee1
1000369e:	ret    
1000369f:	push   0x30
100036a1:	mov    eax,0x10063679
100036a6:	call   0x10059e5e
100036ab:	mov    eax,DWORD PTR [ebp+0x8]
100036ae:	mov    DWORD PTR [ebp-0x34],eax
100036b1:	mov    eax,DWORD PTR [ebx]
100036b3:	push   0x4
100036b5:	pop    edi
100036b6:	mov    DWORD PTR [ebp-0x3c],ebx
100036b9:	mov    DWORD PTR [ebp-0x38],eax
100036bc:	and    DWORD PTR [ebp-0x4],0x0
100036c0:	push   ebx
100036c1:	call   0x100374b0
100036c6:	test   eax,eax
100036c8:	je     0x100036ed
100036ca:	mov    DWORD PTR [ebp-0x30],eax
100036cd:	push   ebx
100036ce:	lea    esi,[ebp-0x2c]
100036d1:	call   0x10037170
100036d6:	mov    eax,DWORD PTR [ebp-0x18]
100036d9:	push   0x0
100036db:	push   0x1
100036dd:	mov    ecx,esi
100036df:	lea    edi,[edi+eax*1+0x1]
100036e3:	call   0x100012f0
100036e8:	dec    DWORD PTR [ebp-0x30]
100036eb:	jne    0x100036cd
100036ed:	or     DWORD PTR [ebp-0x4],0xffffffff
100036f1:	mov    eax,DWORD PTR [ebp-0x38]
100036f4:	push   edi
100036f5:	mov    DWORD PTR [ebx],eax
100036f7:	call   0x100438d7
100036fc:	pop    ecx
100036fd:	mov    DWORD PTR [ebp-0x30],eax
10003700:	push   eax
10003701:	mov    esi,ebx
10003703:	mov    DWORD PTR [ebp-0x4],0x1
1000370a:	call   0x100375c0
1000370f:	push   DWORD PTR [ebp-0x30]
10003712:	mov    eax,DWORD PTR [ebp-0x34]
10003715:	push   0x3
10003717:	push   DWORD PTR [eax]
10003719:	mov    ecx,edi
1000371b:	call   0x10036700
10003720:	push   DWORD PTR [ebp-0x30]
10003723:	call   0x10042fe2
10003728:	pop    ecx
10003729:	call   0x10059ee1
1000372e:	ret    0x4
10003731:	push   0x58
10003733:	mov    eax,0x10063644
10003738:	call   0x10059e5e
1000373d:	mov    eax,DWORD PTR [ebp+0x8]
10003740:	mov    edi,ecx
10003742:	push   edi
10003743:	lea    esi,[ebp-0x2c]
10003746:	mov    DWORD PTR [ebp-0x34],eax
10003749:	call   0x10037170
1000374e:	xor    ebx,ebx
10003750:	push   edi
10003751:	mov    DWORD PTR [ebp-0x4],ebx
10003754:	call   0x100374b0
10003759:	mov    esi,eax
1000375b:	push   0x34
1000375d:	mov    DWORD PTR [ebp-0x38],esi
10003760:	call   0x10043196
10003765:	pop    ecx
10003766:	mov    DWORD PTR [ebp-0x30],eax
10003769:	cmp    eax,ebx
1000376b:	mov    BYTE PTR [ebp-0x4],0x1
1000376f:	je     0x1000378d
10003771:	lea    ecx,[ebp-0x44]
10003774:	push   ecx
10003775:	lea    ecx,[ebp-0x2c]
10003778:	push   ecx
10003779:	push   eax
1000377a:	mov    DWORD PTR [ebp-0x44],ebx
1000377d:	mov    DWORD PTR [ebp-0x40],ebx
10003780:	mov    DWORD PTR [ebp-0x3c],esi
10003783:	call   0x100027dd
10003788:	mov    DWORD PTR [ebp-0x30],eax
1000378b:	jmp    0x10003792
1000378d:	mov    DWORD PTR [ebp-0x30],ebx
10003790:	mov    eax,ebx
10003792:	mov    DWORD PTR [ebp-0x48],eax
10003795:	mov    BYTE PTR [ebp-0x4],0x2
10003799:	mov    eax,DWORD PTR [eax+0x30]
1000379c:	mov    edi,0x1006dd18
100037a1:	push   edi
100037a2:	mov    esi,eax
100037a4:	call   0x10006825
100037a9:	test   al,al
100037ab:	pop    ecx
100037ac:	je     0x100037c1
100037ae:	mov    eax,DWORD PTR [ebp-0x34]
100037b1:	push   DWORD PTR [ebp-0x38]
100037b4:	mov    eax,DWORD PTR [eax]
100037b6:	push   eax
100037b7:	lea    ecx,[ebp-0x2c]
100037ba:	call   0x10035fd0
100037bf:	jmp    0x100037e8
100037c1:	push   edi
100037c2:	lea    ecx,[ebp-0x64]
100037c5:	call   0x100011a7
100037ca:	mov    eax,DWORD PTR [ebp-0x34]
100037cd:	mov    BYTE PTR [ebp-0x4],0x3
100037d1:	mov    eax,DWORD PTR [eax]
100037d3:	push   ebx
100037d4:	push   eax
100037d5:	lea    ecx,[ebp-0x64]
100037d8:	call   0x10035fd0
100037dd:	push   ebx
100037de:	push   0x1
100037e0:	lea    ecx,[ebp-0x64]
100037e3:	call   0x100012f0
100037e8:	mov    BYTE PTR [ebp-0x4],bl
100037eb:	push   DWORD PTR [ebp-0x30]
100037ee:	call   0x1003a0d0
100037f3:	push   DWORD PTR [ebp-0x30]
100037f6:	call   0x10042fe2
100037fb:	pop    ecx
100037fc:	push   ebx
100037fd:	push   0x1
100037ff:	lea    ecx,[ebp-0x2c]
10003802:	call   0x100012f0
10003807:	call   0x10059ee1
1000380c:	ret    0x4
1000380f:	push   0x18
10003811:	mov    eax,0x10060d02
10003816:	call   0x10059df5
1000381b:	mov    eax,ds:0x10082a6c
10003820:	mov    ebx,0x10082a6c
10003825:	mov    ecx,ebx
10003827:	call   DWORD PTR [eax+0xc]
1000382a:	add    eax,0x10
1000382d:	mov    DWORD PTR [ebp-0x10],eax
10003830:	and    DWORD PTR [ebp-0x4],0x0
10003834:	mov    edi,0x104
10003839:	push   edi
1000383a:	lea    esi,[ebp-0x10]
1000383d:	call   0x100021a7
10003842:	push   eax
10003843:	push   edi
10003844:	call   DWORD PTR ds:0x100670c0
1000384a:	test   eax,eax
1000384c:	je     0x1000397b
10003852:	cmp    eax,edi
10003854:	ja     0x1000397b
1000385a:	cmp    DWORD PTR [ebp-0x10],0x0
1000385e:	jne    0x10003864
10003860:	xor    eax,eax
10003862:	jmp    0x1000386d
10003864:	push   DWORD PTR [ebp-0x10]
10003867:	call   0x100437c6
1000386c:	pop    ecx
1000386d:	lea    edx,[ebp-0x10]
10003870:	call   0x10002232
10003875:	mov    eax,ds:0x10082a6c
1000387a:	mov    ecx,ebx
1000387c:	call   DWORD PTR [eax+0xc]
1000387f:	add    eax,0x10
10003882:	mov    DWORD PTR [ebp-0x14],eax
10003885:	push   edi
10003886:	lea    esi,[ebp-0x14]
10003889:	mov    BYTE PTR [ebp-0x4],0x1
1000388d:	call   0x100021a7
10003892:	mov    esi,DWORD PTR [ebp-0x10]
10003895:	push   eax
10003896:	xor    ebx,ebx
10003898:	push   ebx
10003899:	push   0x1006dfa8
1000389e:	push   esi
1000389f:	call   DWORD PTR ds:0x100670b4
100038a5:	test   eax,eax
100038a7:	jne    0x100038bc
100038a9:	mov    eax,DWORD PTR [ebp-0x14]
100038ac:	add    eax,0xfffffff0
100038af:	call   0x10002069
100038b4:	lea    eax,[esi-0x10]
100038b7:	jmp    0x10003981
100038bc:	mov    esi,DWORD PTR [ebp-0x14]
100038bf:	cmp    esi,ebx
100038c1:	jne    0x100038c7
100038c3:	xor    eax,eax
100038c5:	jmp    0x100038ce
100038c7:	push   esi
100038c8:	call   0x100437c6
100038cd:	pop    ecx
100038ce:	lea    edx,[ebp-0x14]
100038d1:	call   0x10002232
100038d6:	push   esi
100038d7:	call   DWORD PTR ds:0x100670a8
100038dd:	push   ebx
100038de:	push   esi
100038df:	call   DWORD PTR ds:0x100670d0
100038e5:	push   0x1006dfac
100038ea:	lea    edi,[ebp-0x1c]
100038ed:	call   0x10002458
100038f2:	mov    eax,edi
100038f4:	push   eax
100038f5:	lea    eax,[ebp-0x20]
100038f8:	push   esi
100038f9:	push   eax
100038fa:	mov    BYTE PTR [ebp-0x4],0x2
100038fe:	call   0x10002554
10003903:	add    esp,0xc
10003906:	mov    BYTE PTR [ebp-0x4],0x3
1000390a:	mov    eax,DWORD PTR [eax]
1000390c:	cmp    eax,ebx
1000390e:	je     0x10003914
10003910:	mov    eax,DWORD PTR [eax]
10003912:	jmp    0x10003916
10003914:	xor    eax,eax
10003916:	mov    ecx,DWORD PTR [ebp+0x10]
10003919:	push   eax
1000391a:	lea    eax,[ebp-0x18]
1000391d:	push   eax
1000391e:	call   0x10004182
10003923:	pop    ecx
10003924:	pop    ecx
10003925:	lea    edi,[ebp-0x20]
10003928:	call   0x100025b3
1000392d:	lea    edi,[ebp-0x1c]
10003930:	call   0x100025b3
10003935:	push   ebx
10003936:	push   0x80
1000393b:	push   0x2
1000393d:	push   ebx
1000393e:	push   ebx
1000393f:	push   0x40000000
10003944:	push   DWORD PTR [ebp-0x18]
10003947:	call   DWORD PTR ds:0x100670c8
1000394d:	mov    edi,eax
1000394f:	mov    DWORD PTR [ebp-0x1c],edi
10003952:	cmp    edi,0xffffffff
10003955:	mov    BYTE PTR [ebp-0x4],0x7
10003959:	jne    0x1000398e
1000395b:	call   DWORD PTR ds:0x100670cc
10003961:	push   edi
10003962:	call   DWORD PTR ds:0x10067078
10003968:	mov    eax,DWORD PTR [ebp-0x18]
1000396b:	add    eax,0xfffffff0
1000396e:	call   0x10002069
10003973:	lea    eax,[esi-0x10]
10003976:	call   0x10002069
1000397b:	mov    eax,DWORD PTR [ebp-0x10]
1000397e:	add    eax,0xfffffff0
10003981:	call   0x10002069
10003986:	xor    al,al
10003988:	call   0x10059ecd
1000398d:	ret    
1000398e:	push   ebx
1000398f:	lea    eax,[ebp-0x24]
10003992:	push   eax
10003993:	push   DWORD PTR [ebp+0xc]
10003996:	push   DWORD PTR [ebp+0x8]
10003999:	push   edi
1000399a:	call   DWORD PTR ds:0x100670a4
100039a0:	test   eax,eax
100039a2:	jne    0x100039ab
100039a4:	cmp    edi,ebx
100039a6:	je     0x10003968
100039a8:	push   edi
100039a9:	jmp    0x10003962
100039ab:	mov    edi,DWORD PTR [ebp+0x18]
100039ae:	lea    eax,[ebp-0x18]
100039b1:	call   0x10004141
100039b6:	mov    edi,DWORD PTR [ebp+0x14]
100039b9:	lea    eax,[ebp-0x14]
100039bc:	call   0x10004141
100039c1:	cmp    DWORD PTR [ebp-0x1c],ebx
100039c4:	je     0x100039cf
100039c6:	push   DWORD PTR [ebp-0x1c]
100039c9:	call   DWORD PTR ds:0x10067078
100039cf:	mov    eax,DWORD PTR [ebp-0x18]
100039d2:	add    eax,0xfffffff0
100039d5:	call   0x10002069
100039da:	lea    eax,[esi-0x10]
100039dd:	call   0x10002069
100039e2:	mov    eax,DWORD PTR [ebp-0x10]
100039e5:	add    eax,0xfffffff0
100039e8:	call   0x10002069
100039ed:	mov    al,0x1
100039ef:	jmp    0x10003988
100039f1:	push   0x24
100039f3:	mov    eax,0x10063d6b
100039f8:	call   0x10059e94
100039fd:	and    DWORD PTR [ebp-0x4],0x0
10003a01:	mov    esi,ecx
10003a03:	push   esi
10003a04:	call   0x100374b0
10003a09:	lea    edi,[ebp-0x30]
10003a0c:	mov    ebx,eax
10003a0e:	call   0x100372a0
10003a13:	mov    eax,ebx
10003a15:	dec    eax
10003a16:	mov    BYTE PTR [ebp-0x4],0x1
10003a1a:	je     0x10003a50
10003a1c:	dec    eax
10003a1d:	je     0x10003a39
10003a1f:	dec    eax
10003a20:	jne    0x10003a67
10003a22:	cmp    DWORD PTR [ebp-0x18],0x10
10003a26:	mov    eax,DWORD PTR [ebp-0x2c]
10003a29:	jae    0x10003a2e
10003a2b:	lea    eax,[ebp-0x2c]
10003a2e:	push   DWORD PTR [ebp-0x1c]
10003a31:	push   eax
10003a32:	call   0x10003edb
10003a37:	jmp    0x10003a65
10003a39:	cmp    DWORD PTR [ebp-0x18],0x10
10003a3d:	mov    eax,DWORD PTR [ebp-0x2c]
10003a40:	jae    0x10003a45
10003a42:	lea    eax,[ebp-0x2c]
10003a45:	push   DWORD PTR [ebp-0x1c]
10003a48:	push   eax
10003a49:	call   0x10003c8b
10003a4e:	jmp    0x10003a65
10003a50:	cmp    DWORD PTR [ebp-0x18],0x10
10003a54:	mov    eax,DWORD PTR [ebp-0x2c]
10003a57:	jae    0x10003a5c
10003a59:	lea    eax,[ebp-0x2c]
10003a5c:	push   DWORD PTR [ebp-0x1c]
10003a5f:	push   eax
10003a60:	call   0x10003b0b
10003a65:	pop    ecx
10003a66:	pop    ecx
10003a67:	push   0x0
10003a69:	push   0x1
10003a6b:	lea    ecx,[ebp-0x30]
10003a6e:	call   0x100012f0
10003a73:	call   0x10059ef0
10003a78:	ret    
10003a79:	mov    eax,0x10003a73
10003a7e:	ret    
10003a7f:	push   0x2c
10003a81:	mov    eax,0x10064f64
10003a86:	call   0x10059df5
10003a8b:	call   0x10002068
10003a90:	xor    ebx,ebx
10003a92:	mov    DWORD PTR [ebp-0x14],ebx
10003a95:	mov    DWORD PTR [ebp-0x10],ebx
10003a98:	lea    ecx,[ebp-0x38]
10003a9b:	mov    DWORD PTR [ebp-0x4],ebx
10003a9e:	call   0x100186d5
10003aa3:	push   0xffffffff
10003aa5:	lea    ecx,[ebp-0x14]
10003aa8:	push   ecx
10003aa9:	push   DWORD PTR [ebp+0x8]
10003aac:	lea    esi,[ebp-0x18]
10003aaf:	push   eax
10003ab0:	mov    BYTE PTR [ebp-0x4],0x1
10003ab4:	call   0x10030ac0
10003ab9:	add    esp,0x10
10003abc:	push   eax
10003abd:	lea    edi,[ebp-0x10]
10003ac0:	call   0x1000208b
10003ac5:	push   DWORD PTR [ebp-0x18]
10003ac8:	call   0x10042fe2
10003acd:	pop    ecx
10003ace:	push   ebx
10003acf:	push   0x1
10003ad1:	lea    ecx,[ebp-0x38]
10003ad4:	mov    BYTE PTR [ebp-0x4],bl
10003ad7:	call   0x100012f0
10003adc:	cmp    DWORD PTR [ebp-0x10],ebx
10003adf:	jne    0x10003aef
10003ae1:	call   0x10018654
10003ae6:	push   ebx
10003ae7:	call   0x10042fe2
10003aec:	pop    ecx
10003aed:	jmp    0x10003b05
10003aef:	push   DWORD PTR [ebp-0x14]
10003af2:	push   DWORD PTR [ebp-0x10]
10003af5:	call   0x10003b0b
10003afa:	push   DWORD PTR [ebp-0x10]
10003afd:	call   0x10042fe2
10003b02:	add    esp,0xc
10003b05:	call   0x10059ecd
10003b0a:	ret    
10003b0b:	push   0xc
10003b0d:	mov    eax,0x10063607
10003b12:	call   0x10059df5
10003b17:	mov    eax,ds:0x10082a6c
10003b1c:	mov    edi,0x10082a6c
10003b21:	mov    ecx,edi
10003b23:	call   DWORD PTR [eax+0xc]
10003b26:	add    eax,0x10
10003b29:	mov    DWORD PTR [ebp-0x18],eax
10003b2c:	xor    esi,esi
10003b2e:	mov    DWORD PTR [ebp-0x4],esi
10003b31:	mov    eax,ds:0x10082a6c
10003b36:	mov    ecx,edi
10003b38:	call   DWORD PTR [eax+0xc]
10003b3b:	add    eax,0x10
10003b3e:	mov    DWORD PTR [ebp-0x14],eax
10003b41:	push   0x1006dfb0
10003b46:	push   0x9
10003b48:	mov    ecx,0x1006dfec
10003b4d:	mov    BYTE PTR [ebp-0x4],0x1
10003b51:	call   0x1000444a
10003b56:	pop    ecx
10003b57:	pop    ecx
10003b58:	push   eax
10003b59:	lea    eax,[ebp-0x10]
10003b5c:	push   eax
10003b5d:	call   0x10002352
10003b62:	lea    eax,[ebp-0x14]
10003b65:	push   eax
10003b66:	lea    eax,[ebp-0x18]
10003b69:	push   eax
10003b6a:	lea    eax,[ebp-0x10]
10003b6d:	push   eax
10003b6e:	push   DWORD PTR [ebp+0xc]
10003b71:	mov    BYTE PTR [ebp-0x4],0x2
10003b75:	push   DWORD PTR [ebp+0x8]
10003b78:	call   0x1000380f
10003b7d:	mov    bl,al
10003b7f:	add    esp,0x14
10003b82:	neg    bl
10003b84:	mov    BYTE PTR [ebp-0x4],0x1
10003b88:	mov    eax,DWORD PTR [ebp-0x10]
10003b8b:	sbb    bl,bl
10003b8d:	add    eax,0xfffffff0
10003b90:	inc    bl
10003b92:	call   0x10002069
10003b97:	test   bl,bl
10003b99:	je     0x10003ba0
10003b9b:	call   0x10002068
10003ba0:	call   0x1000401c
10003ba5:	call   0x10002068
10003baa:	push   0x1
10003bac:	lea    eax,[ebp-0x10]
10003baf:	push   eax
10003bb0:	call   0x10034910
10003bb5:	mov    BYTE PTR [ebp-0x4],0x3
10003bb9:	call   DWORD PTR ds:0x10080ffc
10003bbf:	mov    edi,DWORD PTR [ebp-0x14]
10003bc2:	lea    eax,[ebp-0x10]
10003bc5:	push   eax
10003bc6:	call   0x10036d40
10003bcb:	push   DWORD PTR [ebp-0x10]
10003bce:	call   DWORD PTR ds:0x10067078
10003bd4:	mov    ebx,DWORD PTR ds:0x100670b8
10003bda:	push   0x4
10003bdc:	push   esi
10003bdd:	push   edi
10003bde:	call   ebx
10003be0:	push   0x4
10003be2:	push   esi
10003be3:	mov    esi,DWORD PTR [ebp-0x18]
10003be6:	push   esi
10003be7:	call   ebx
10003be9:	lea    eax,[edi-0x10]
10003bec:	call   0x10002069
10003bf1:	lea    eax,[esi-0x10]
10003bf4:	call   0x10002069
10003bf9:	call   0x10059ecd
10003bfe:	ret    
10003bff:	push   0x2c
10003c01:	mov    eax,0x10064f64
10003c06:	call   0x10059df5
10003c0b:	call   0x10002068
10003c10:	xor    ebx,ebx
10003c12:	mov    DWORD PTR [ebp-0x14],ebx
10003c15:	mov    DWORD PTR [ebp-0x10],ebx
10003c18:	lea    ecx,[ebp-0x38]
10003c1b:	mov    DWORD PTR [ebp-0x4],ebx
10003c1e:	call   0x100186d5
10003c23:	push   0xffffffff
10003c25:	lea    ecx,[ebp-0x14]
10003c28:	push   ecx
10003c29:	push   DWORD PTR [ebp+0x8]
10003c2c:	lea    esi,[ebp-0x18]
10003c2f:	push   eax
10003c30:	mov    BYTE PTR [ebp-0x4],0x1
10003c34:	call   0x10030ac0
10003c39:	add    esp,0x10
10003c3c:	push   eax
10003c3d:	lea    edi,[ebp-0x10]
10003c40:	call   0x1000208b
10003c45:	push   DWORD PTR [ebp-0x18]
10003c48:	call   0x10042fe2
10003c4d:	pop    ecx
10003c4e:	push   ebx
10003c4f:	push   0x1
10003c51:	lea    ecx,[ebp-0x38]
10003c54:	mov    BYTE PTR [ebp-0x4],bl
10003c57:	call   0x100012f0
10003c5c:	cmp    DWORD PTR [ebp-0x10],ebx
10003c5f:	jne    0x10003c6f
10003c61:	call   0x10018654
10003c66:	push   ebx
10003c67:	call   0x10042fe2
10003c6c:	pop    ecx
10003c6d:	jmp    0x10003c85
10003c6f:	push   DWORD PTR [ebp-0x14]
10003c72:	push   DWORD PTR [ebp-0x10]
10003c75:	call   0x10003c8b
10003c7a:	push   DWORD PTR [ebp-0x10]
10003c7d:	call   0x10042fe2
10003c82:	add    esp,0xc
10003c85:	call   0x10059ecd
10003c8a:	ret    
10003c8b:	push   ebp
10003c8c:	mov    ebp,esp
10003c8e:	and    esp,0xfffffff8
10003c91:	push   0xffffffff
10003c93:	push   0x100635cc
10003c98:	mov    eax,fs:0x0
10003c9e:	push   eax
10003c9f:	sub    esp,0x70
10003ca2:	push   ebx
10003ca3:	push   esi
10003ca4:	push   edi
10003ca5:	mov    eax,ds:0x100801ac
10003caa:	xor    eax,esp
10003cac:	push   eax
10003cad:	lea    eax,[esp+0x80]
10003cb4:	mov    fs:0x0,eax
10003cba:	push   0x1006e000
10003cbf:	push   0xc
10003cc1:	mov    ecx,0x1006e040
10003cc6:	call   0x1000444a
10003ccb:	pop    ecx
10003ccc:	pop    ecx
10003ccd:	push   eax
10003cce:	lea    eax,[esp+0x20]
10003cd2:	push   eax
10003cd3:	call   0x10002352
10003cd8:	xor    ebx,ebx
10003cda:	mov    DWORD PTR [esp+0x88],ebx
10003ce1:	mov    eax,ds:0x10082a6c
10003ce6:	mov    esi,0x10082a6c
10003ceb:	mov    ecx,esi
10003ced:	call   DWORD PTR [eax+0xc]
10003cf0:	add    eax,0x10
10003cf3:	mov    DWORD PTR [esp+0x18],eax
10003cf7:	mov    BYTE PTR [esp+0x88],0x1
10003cff:	mov    eax,ds:0x10082a6c
10003d04:	mov    ecx,esi
10003d06:	call   DWORD PTR [eax+0xc]
10003d09:	add    eax,0x10
10003d0c:	mov    DWORD PTR [esp+0x14],eax
10003d10:	lea    eax,[esp+0x14]
10003d14:	push   eax
10003d15:	lea    eax,[esp+0x1c]
10003d19:	push   eax
10003d1a:	lea    eax,[esp+0x24]
10003d1e:	push   eax
10003d1f:	push   DWORD PTR [ebp+0xc]
10003d22:	mov    BYTE PTR [esp+0x98],0x2
10003d2a:	push   DWORD PTR [ebp+0x8]
10003d2d:	call   0x1000380f
10003d32:	add    esp,0x14
10003d35:	test   al,al
10003d37:	jne    0x10003d3e
10003d39:	call   0x10002068
10003d3e:	call   0x1000401c
10003d43:	call   0x10002068
10003d48:	push   0x1
10003d4a:	lea    eax,[esp+0x24]
10003d4e:	push   eax
10003d4f:	call   0x10034910
10003d54:	mov    BYTE PTR [esp+0x88],0x3
10003d5c:	mov    ecx,DWORD PTR [esp+0x1c]
10003d60:	lea    edx,[esp+0x20]
10003d64:	call   0x10036b10
10003d69:	push   DWORD PTR [esp+0x20]
10003d6d:	mov    esi,DWORD PTR ds:0x10067078
10003d73:	call   esi
10003d75:	push   0x40
10003d77:	lea    eax,[esp+0x3c]
10003d7b:	push   ebx
10003d7c:	push   eax
10003d7d:	call   0x10045dc0
10003d82:	xor    eax,eax
10003d84:	mov    DWORD PTR [esp+0x30],ebx
10003d88:	lea    edi,[esp+0x34]
10003d8c:	stos   DWORD PTR es:[edi],eax
10003d8d:	add    esp,0xc
10003d90:	stos   DWORD PTR es:[edi],eax
10003d91:	stos   DWORD PTR es:[edi],eax
10003d92:	lea    eax,[esp+0x24]
10003d96:	push   eax
10003d97:	lea    eax,[esp+0x38]
10003d9b:	push   eax
10003d9c:	push   ebx
10003d9d:	push   ebx
10003d9e:	push   ebx
10003d9f:	push   ebx
10003da0:	push   ebx
10003da1:	push   ebx
10003da2:	push   ebx
10003da3:	push   DWORD PTR [esp+0x38]
10003da7:	mov    DWORD PTR [esp+0x5c],0x44
10003daf:	call   DWORD PTR ds:0x100670d4
10003db5:	test   eax,eax
10003db7:	je     0x10003dd6
10003db9:	push   0x4e20
10003dbe:	push   DWORD PTR [esp+0x28]
10003dc2:	call   DWORD PTR ds:0x1006707c
10003dc8:	push   DWORD PTR [esp+0x28]
10003dcc:	call   esi
10003dce:	push   DWORD PTR [esp+0x24]
10003dd2:	call   esi
10003dd4:	jmp    0x10003de3
10003dd6:	call   DWORD PTR ds:0x100670cc
10003ddc:	push   eax
10003ddd:	call   0x10002068
10003de2:	pop    ecx
10003de3:	push   DWORD PTR [esp+0x14]
10003de7:	mov    edi,DWORD PTR ds:0x100670a8
10003ded:	call   edi
10003def:	test   eax,eax
10003df1:	mov    esi,DWORD PTR ds:0x100670b8
10003df7:	jne    0x10003e02
10003df9:	push   0x4
10003dfb:	push   ebx
10003dfc:	push   DWORD PTR [esp+0x1c]
10003e00:	call   esi
10003e02:	push   DWORD PTR [esp+0x18]
10003e06:	call   edi
10003e08:	test   eax,eax
10003e0a:	jne    0x10003e15
10003e0c:	push   0x4
10003e0e:	push   ebx
10003e0f:	push   DWORD PTR [esp+0x20]
10003e13:	call   esi
10003e15:	mov    eax,DWORD PTR [esp+0x14]
10003e19:	add    eax,0xfffffff0
10003e1c:	call   0x10002069
10003e21:	mov    eax,DWORD PTR [esp+0x18]
10003e25:	add    eax,0xfffffff0
10003e28:	call   0x10002069
10003e2d:	mov    eax,DWORD PTR [esp+0x1c]
10003e31:	add    eax,0xfffffff0
10003e34:	call   0x10002069
10003e39:	mov    ecx,DWORD PTR [esp+0x80]
10003e40:	mov    DWORD PTR fs:0x0,ecx
10003e47:	pop    ecx
10003e48:	pop    edi
10003e49:	pop    esi
10003e4a:	pop    ebx
10003e4b:	mov    esp,ebp
10003e4d:	pop    ebp
10003e4e:	ret    
10003e4f:	push   0x2c
10003e51:	mov    eax,0x10064f64
10003e56:	call   0x10059df5
10003e5b:	call   0x10002068
10003e60:	xor    ebx,ebx
10003e62:	mov    DWORD PTR [ebp-0x14],ebx
10003e65:	mov    DWORD PTR [ebp-0x10],ebx
10003e68:	lea    ecx,[ebp-0x38]
10003e6b:	mov    DWORD PTR [ebp-0x4],ebx
10003e6e:	call   0x100186d5
10003e73:	push   0xffffffff
10003e75:	lea    ecx,[ebp-0x14]
10003e78:	push   ecx
10003e79:	push   DWORD PTR [ebp+0x8]
10003e7c:	lea    esi,[ebp-0x18]
10003e7f:	push   eax
10003e80:	mov    BYTE PTR [ebp-0x4],0x1
10003e84:	call   0x10030ac0
10003e89:	add    esp,0x10
10003e8c:	push   eax
10003e8d:	lea    edi,[ebp-0x10]
10003e90:	call   0x1000208b
10003e95:	push   DWORD PTR [ebp-0x18]
10003e98:	call   0x10042fe2
10003e9d:	pop    ecx
10003e9e:	push   ebx
10003e9f:	push   0x1
10003ea1:	lea    ecx,[ebp-0x38]
10003ea4:	mov    BYTE PTR [ebp-0x4],bl
10003ea7:	call   0x100012f0
10003eac:	cmp    DWORD PTR [ebp-0x10],ebx
10003eaf:	jne    0x10003ebf
10003eb1:	call   0x10018654
10003eb6:	push   ebx
10003eb7:	call   0x10042fe2
10003ebc:	pop    ecx
10003ebd:	jmp    0x10003ed5
10003ebf:	push   DWORD PTR [ebp-0x14]
10003ec2:	push   DWORD PTR [ebp-0x10]
10003ec5:	call   0x10003edb
10003eca:	push   DWORD PTR [ebp-0x10]
10003ecd:	call   0x10042fe2
10003ed2:	add    esp,0xc
10003ed5:	call   0x10059ecd
10003eda:	ret    
10003edb:	push   ebp
10003edc:	mov    ebp,esp
10003ede:	and    esp,0xfffffff8
10003ee1:	push   0xffffffff
10003ee3:	push   0x10063591
10003ee8:	mov    eax,fs:0x0
10003eee:	push   eax
10003eef:	sub    esp,0x10
10003ef2:	push   ebx
10003ef3:	push   esi
10003ef4:	push   edi
10003ef5:	mov    eax,ds:0x100801ac
10003efa:	xor    eax,esp
10003efc:	push   eax
10003efd:	lea    eax,[esp+0x20]
10003f01:	mov    fs:0x0,eax
10003f07:	mov    eax,ds:0x10082a6c
10003f0c:	mov    esi,0x10082a6c
10003f11:	mov    ecx,esi
10003f13:	call   DWORD PTR [eax+0xc]
10003f16:	add    eax,0x10
10003f19:	mov    DWORD PTR [esp+0x18],eax
10003f1d:	xor    edi,edi
10003f1f:	mov    DWORD PTR [esp+0x28],edi
10003f23:	mov    eax,ds:0x10082a6c
10003f28:	mov    ecx,esi
10003f2a:	call   DWORD PTR [eax+0xc]
10003f2d:	add    eax,0x10
10003f30:	mov    DWORD PTR [esp+0x14],eax
10003f34:	push   0x1006e05c
10003f39:	push   0x8
10003f3b:	mov    ecx,0x1006e080
10003f40:	mov    BYTE PTR [esp+0x30],0x1
10003f45:	call   0x1000444a
10003f4a:	pop    ecx
10003f4b:	pop    ecx
10003f4c:	push   eax
10003f4d:	lea    eax,[esp+0x14]
10003f51:	push   eax
10003f52:	call   0x10002352
10003f57:	lea    eax,[esp+0x14]
10003f5b:	push   eax
10003f5c:	lea    eax,[esp+0x1c]
10003f60:	push   eax
10003f61:	lea    eax,[esp+0x18]
10003f65:	push   eax
10003f66:	push   DWORD PTR [ebp+0xc]
10003f69:	mov    BYTE PTR [esp+0x38],0x2
10003f6e:	push   DWORD PTR [ebp+0x8]
10003f71:	call   0x1000380f
10003f76:	mov    bl,al
10003f78:	add    esp,0x14
10003f7b:	neg    bl
10003f7d:	mov    BYTE PTR [esp+0x28],0x1
10003f82:	mov    eax,DWORD PTR [esp+0x10]
10003f86:	sbb    bl,bl
10003f88:	add    eax,0xfffffff0
10003f8b:	inc    bl
10003f8d:	call   0x10002069
10003f92:	test   bl,bl
10003f94:	je     0x10003f9b
10003f96:	call   0x10002068
10003f9b:	call   0x1000401c
10003fa0:	call   0x10002068
10003fa5:	push   0x1
10003fa7:	lea    eax,[esp+0x14]
10003fab:	push   eax
10003fac:	call   0x10034910
10003fb1:	push   0x1006e094
10003fb6:	push   0xb
10003fb8:	mov    ecx,0x1006e0cc
10003fbd:	mov    BYTE PTR [esp+0x30],0x3
10003fc2:	call   0x1000444a
10003fc7:	mov    ebx,DWORD PTR [esp+0x1c]
10003fcb:	pop    ecx
10003fcc:	pop    ecx
10003fcd:	push   eax
10003fce:	push   ebx
10003fcf:	lea    eax,[esp+0x18]
10003fd3:	push   eax
10003fd4:	call   0x10036dc0
10003fd9:	push   DWORD PTR [esp+0x10]
10003fdd:	call   DWORD PTR ds:0x10067078
10003fe3:	mov    esi,DWORD PTR ds:0x100670b8
10003fe9:	push   0x4
10003feb:	push   edi
10003fec:	push   ebx
10003fed:	call   esi
10003fef:	push   0x4
10003ff1:	push   edi
10003ff2:	mov    edi,DWORD PTR [esp+0x20]
10003ff6:	push   edi
10003ff7:	call   esi
10003ff9:	lea    eax,[ebx-0x10]
10003ffc:	call   0x10002069
10004001:	lea    eax,[edi-0x10]
10004004:	call   0x10002069
10004009:	mov    ecx,DWORD PTR [esp+0x20]
1000400d:	mov    DWORD PTR fs:0x0,ecx
10004014:	pop    ecx
10004015:	pop    edi
10004016:	pop    esi
10004017:	pop    ebx
10004018:	mov    esp,ebp
1000401a:	pop    ebp
1000401b:	ret    
1000401c:	push   ebp
1000401d:	mov    ebp,esp
1000401f:	and    esp,0xfffffff8
10004022:	push   0xffffffff
10004024:	push   0x100629c9
10004029:	mov    eax,fs:0x0
1000402f:	push   eax
10004030:	sub    esp,0x14
10004033:	mov    eax,ds:0x100801ac
10004038:	xor    eax,esp
1000403a:	push   eax
1000403b:	lea    eax,[esp+0x18]
1000403f:	mov    fs:0x0,eax
10004045:	push   0x1
10004047:	lea    eax,[esp+0xc]
1000404b:	push   eax
1000404c:	call   0x10034910
10004051:	and    DWORD PTR [esp+0x20],0x0
10004056:	call   0x1002f6a0
1000405b:	add    eax,0x78c6c000
10004060:	mov    DWORD PTR [esp+0xc],eax
10004064:	lea    eax,[esp+0xc]
10004068:	push   eax
10004069:	lea    eax,[esp+0xc]
1000406d:	push   eax
1000406e:	push   0x4
10004070:	adc    edx,0x11ed1
10004076:	pop    ecx
10004077:	mov    DWORD PTR [esp+0x18],edx
1000407b:	call   0x100359b0
10004080:	push   DWORD PTR [esp+0x8]
10004084:	call   DWORD PTR ds:0x10067078
1000408a:	mov    ecx,DWORD PTR [esp+0x18]
1000408e:	mov    DWORD PTR fs:0x0,ecx
10004095:	pop    ecx
10004096:	mov    esp,ebp
10004098:	pop    ebp
10004099:	ret    
1000409a:	push   0xc
1000409c:	mov    eax,0x10065452
100040a1:	call   0x10059e28
100040a6:	xor    ebx,ebx
100040a8:	lea    eax,[ebp-0x14]
100040ab:	push   ebx
100040ac:	push   eax
100040ad:	mov    DWORD PTR [ebp-0x4],ebx
100040b0:	call   0x10002818
100040b5:	pop    ecx
100040b6:	pop    ecx
100040b7:	mov    ecx,DWORD PTR [eax]
100040b9:	mov    esi,ecx
100040bb:	mov    DWORD PTR [eax],ebx
100040bd:	mov    DWORD PTR [ebp-0x18],esi
100040c0:	lea    eax,[ebp-0x14]
100040c3:	mov    BYTE PTR [ebp-0x4],0x1
100040c7:	call   0x1000428d
100040cc:	push   esi
100040cd:	call   0x10002896
100040d2:	cmp    al,bl
100040d4:	jne    0x100040db
100040d6:	call   0x100028e1
100040db:	lea    eax,[ebp-0x18]
100040de:	call   0x1000428d
100040e3:	call   0x10059ecd
100040e8:	ret    
100040e9:	mov    eax,0x100040e3
100040ee:	ret    
100040ef:	push   0x0
100040f1:	mov    ecx,esi
100040f3:	mov    DWORD PTR [esi+0x18],0xf
100040fa:	call   0x1000141c
100040ff:	mov    eax,esi
10004101:	ret    
10004102:	push   0x0
10004104:	mov    ecx,esi
10004106:	mov    DWORD PTR [esi+0x18],0xf
1000410d:	call   0x1000141c
10004112:	push   DWORD PTR [esp+0x8]
10004116:	mov    ecx,esi
10004118:	push   DWORD PTR [esp+0x8]
1000411c:	call   0x1000133b
10004121:	mov    eax,esi
10004123:	ret    0x8
10004126:	push   DWORD PTR [esp+0x8]
1000412a:	call   0x10043450
1000412f:	pop    ecx
10004130:	push   eax
10004131:	push   DWORD PTR [esp+0xc]
10004135:	mov    eax,DWORD PTR [esp+0xc]
10004139:	call   0x10004d62
1000413e:	ret    0x8
10004141:	mov    ecx,DWORD PTR [eax]
10004143:	push   esi
10004144:	mov    esi,DWORD PTR [edi]
10004146:	lea    eax,[ecx-0x10]
10004149:	sub    esi,0x10
1000414c:	cmp    eax,esi
1000414e:	je     0x1000417e
10004150:	cmp    DWORD PTR [esi+0xc],0x0
10004154:	push   ebx
10004155:	jl     0x10004172
10004157:	mov    edx,DWORD PTR [eax]
10004159:	cmp    edx,DWORD PTR [esi]
1000415b:	jne    0x10004172
1000415d:	call   0x10004dfc
10004162:	mov    ebx,eax
10004164:	mov    eax,esi
10004166:	call   0x10002069
1000416b:	add    ebx,0x10
1000416e:	mov    DWORD PTR [edi],ebx
10004170:	jmp    0x1000417d
10004172:	mov    ebx,DWORD PTR [ecx-0xc]
10004175:	push   ecx
10004176:	mov    eax,edi
10004178:	call   0x100023b8
1000417d:	pop    ebx
1000417e:	mov    eax,edi
10004180:	pop    esi
10004181:	ret    
10004182:	push   0x4
10004184:	mov    eax,0x10060285
10004189:	call   0x10059df5
1000418e:	mov    edi,ecx
10004190:	xor    ebx,ebx
10004192:	mov    DWORD PTR [ebp-0x4],ebx
10004195:	mov    eax,edi
10004197:	mov    DWORD PTR [ebp-0x10],ebx
1000419a:	call   0x10004697
1000419f:	mov    esi,DWORD PTR [ebp+0x8]
100041a2:	mov    ecx,eax
100041a4:	call   0x1000214c
100041a9:	cmp    DWORD PTR [ebp+0xc],ebx
100041ac:	mov    DWORD PTR [ebp-0x4],ebx
100041af:	mov    esi,DWORD PTR [edi]
100041b1:	mov    edi,DWORD PTR [esi-0xc]
100041b4:	mov    DWORD PTR [ebp-0x10],0x1
100041bb:	jne    0x100041c1
100041bd:	xor    eax,eax
100041bf:	jmp    0x100041ca
100041c1:	push   DWORD PTR [ebp+0xc]
100041c4:	call   0x100437c6
100041c9:	pop    ecx
100041ca:	push   esi
100041cb:	push   DWORD PTR [ebp+0xc]
100041ce:	mov    ebx,edi
100041d0:	push   DWORD PTR [ebp+0x8]
100041d3:	mov    edi,eax
100041d5:	call   0x100046bb
100041da:	mov    eax,DWORD PTR [ebp+0x8]
100041dd:	add    esp,0xc
100041e0:	call   0x10059ecd
100041e5:	ret    
100041e6:	mov    eax,DWORD PTR [esi]
100041e8:	sub    eax,0x10
100041eb:	cmp    DWORD PTR [eax+0xc],0x1
100041ef:	jle    0x100041fa
100041f1:	push   DWORD PTR [eax+0x4]
100041f4:	push   esi
100041f5:	call   0x1000229c
100041fa:	mov    eax,DWORD PTR [esi]
100041fc:	ret    
100041fd:	mov    eax,DWORD PTR [esi]
100041ff:	test   eax,eax
10004201:	je     0x1000420a
10004203:	push   eax
10004204:	call   0x100437c6
10004209:	pop    ecx
1000420a:	mov    edx,esi
1000420c:	jmp    0x10002232
10004211:	push   esi
10004212:	mov    esi,DWORD PTR [eax]
10004214:	test   esi,esi
10004216:	je     0x10004227
10004218:	push   DWORD PTR [esi]
1000421a:	call   DWORD PTR ds:0x10067078
10004220:	push   esi
10004221:	call   0x10042fe2
10004226:	pop    ecx
10004227:	pop    esi
10004228:	ret    
10004229:	jmp    0x100047a5
1000422e:	push   ebp
1000422f:	mov    ebp,esp
10004231:	and    esp,0xfffffff8
10004234:	push   ecx
10004235:	push   ecx
10004236:	push   ebx
10004237:	mov    ebx,DWORD PTR [esi+0x4]
1000423a:	test   ebx,ebx
1000423c:	push   edi
1000423d:	jne    0x10004243
1000423f:	xor    edi,edi
10004241:	jmp    0x1000424b
10004243:	mov    edi,DWORD PTR [esi+0xc]
10004246:	sub    edi,ebx
10004248:	sar    edi,0x5
1000424b:	mov    eax,esi
1000424d:	call   0x1000a1e7
10004252:	cmp    eax,edi
10004254:	jae    0x10004268
10004256:	push   DWORD PTR [ebp+0x8]
10004259:	push   0x1
1000425b:	push   DWORD PTR [esi+0x8]
1000425e:	call   0x1000a6ea
10004263:	mov    DWORD PTR [esi+0x8],eax
10004266:	jmp    0x10004285
10004268:	mov    edi,DWORD PTR [esi+0x8]
1000426b:	cmp    ebx,edi
1000426d:	jbe    0x10004274
1000426f:	call   0x10043605
10004274:	push   edi
10004275:	push   esi
10004276:	push   DWORD PTR [ebp+0x8]
10004279:	lea    eax,[esp+0x14]
1000427d:	push   eax
1000427e:	mov    eax,esi
10004280:	call   0x100046fd
10004285:	pop    edi
10004286:	pop    ebx
10004287:	mov    esp,ebp
10004289:	pop    ebp
1000428a:	ret    0x4
1000428d:	push   esi
1000428e:	mov    esi,DWORD PTR [eax]
10004290:	test   esi,esi
10004292:	je     0x100042b2
10004294:	push   edi
10004295:	mov    edi,DWORD PTR [esi]
10004297:	test   edi,edi
10004299:	je     0x100042aa
1000429b:	push   DWORD PTR [edi]
1000429d:	call   DWORD PTR ds:0x10067078
100042a3:	push   edi
100042a4:	call   0x10042fe2
100042a9:	pop    ecx
100042aa:	push   esi
100042ab:	call   0x10042fe2
100042b0:	pop    ecx
100042b1:	pop    edi
100042b2:	pop    esi
100042b3:	ret    
100042b4:	push   ebp
100042b5:	mov    ebp,esp
100042b7:	and    esp,0xfffffff8
100042ba:	push   0xffffffff
100042bc:	push   0x1006178b
100042c1:	mov    eax,fs:0x0
100042c7:	push   eax
100042c8:	sub    esp,0x58
100042cb:	mov    eax,ds:0x100801ac
100042d0:	xor    eax,esp
100042d2:	mov    DWORD PTR [esp+0x50],eax
100042d6:	push   ebx
100042d7:	push   esi
100042d8:	push   edi
100042d9:	mov    eax,ds:0x100801ac
100042de:	xor    eax,esp
100042e0:	push   eax
100042e1:	lea    eax,[esp+0x68]
100042e5:	mov    fs:0x0,eax
100042eb:	mov    esi,ecx
100042ed:	mov    DWORD PTR [esp+0x24],esi
100042f1:	call   0x10037620
100042f6:	test   al,al
100042f8:	jne    0x10004301
100042fa:	mov    eax,esi
100042fc:	jmp    0x1000442c
10004301:	push   DWORD PTR [ebp+0x8]
10004304:	push   esi
10004305:	lea    esi,[esp+0x30]
10004309:	call   0x10004102
1000430e:	mov    eax,esi
10004310:	push   eax
10004311:	lea    eax,[esp+0x20]
10004315:	xor    ebx,ebx
10004317:	push   eax
10004318:	mov    DWORD PTR [esp+0x78],ebx
1000431c:	call   0x100047ca
10004321:	push   eax
10004322:	call   0x10004aa5
10004327:	call   0x100047ca
1000432c:	mov    ecx,DWORD PTR [eax+0x4]
1000432f:	lea    edi,[esp+0x14]
10004333:	lea    esi,[esp+0x1c]
10004337:	mov    DWORD PTR [esp+0x18],ecx
1000433b:	mov    DWORD PTR [esp+0x14],eax
1000433f:	call   0x10004b0c
10004344:	test   al,al
10004346:	je     0x10004397
10004348:	sub    esp,0x1c
1000434b:	lea    eax,[esp+0x44]
1000434f:	mov    ecx,esp
10004351:	mov    DWORD PTR [esp+0x30],esp
10004355:	push   eax
10004356:	call   0x100011c9
1000435b:	lea    esi,[esp+0x60]
1000435f:	call   0x1000482d
10004364:	add    esp,0x1c
10004367:	lea    eax,[esp+0x28]
1000436b:	push   eax
1000436c:	mov    BYTE PTR [esp+0x74],0x1
10004371:	call   0x100047ca
10004376:	push   eax
10004377:	call   0x100049d1
1000437c:	push   0xffffffff
1000437e:	push   ebx
1000437f:	mov    ecx,esi
10004381:	push   ecx
10004382:	mov    ecx,eax
10004384:	call   0x10001241
10004389:	push   ebx
1000438a:	push   0x1
1000438c:	mov    ecx,esi
1000438e:	mov    BYTE PTR [esp+0x78],bl
10004392:	call   0x100012f0
10004397:	mov    eax,DWORD PTR [ebp+0xc]
1000439a:	movzx  eax,BYTE PTR [eax]
1000439d:	cmp    eax,0x100
100043a2:	jge    0x100043c8
100043a4:	lea    eax,[esp+0x28]
100043a8:	push   eax
100043a9:	lea    eax,[esp+0x18]
100043ad:	push   eax
100043ae:	call   0x100047ca
100043b3:	push   eax
100043b4:	call   0x10004aa5
100043b9:	mov    ecx,DWORD PTR [eax]
100043bb:	mov    ebx,DWORD PTR [eax+0x4]
100043be:	mov    DWORD PTR [esp+0x1c],ecx
100043c2:	mov    DWORD PTR [esp+0x20],ebx
100043c6:	jmp    0x100043cc
100043c8:	mov    ebx,DWORD PTR [esp+0x20]
100043cc:	call   0x100047ca
100043d1:	mov    ecx,DWORD PTR [eax+0x4]
100043d4:	lea    edi,[esp+0x14]
100043d8:	lea    esi,[esp+0x1c]
100043dc:	mov    DWORD PTR [esp+0x18],ecx
100043e0:	mov    DWORD PTR [esp+0x14],eax
100043e4:	call   0x10004b0c
100043e9:	test   al,al
100043eb:	jne    0x10004414
100043ed:	mov    esi,DWORD PTR [esp+0x1c]
100043f1:	test   esi,esi
100043f3:	jne    0x100043fa
100043f5:	call   0x10043605
100043fa:	cmp    ebx,DWORD PTR [esi+0x4]
100043fd:	jne    0x10004404
100043ff:	call   0x10043605
10004404:	cmp    DWORD PTR [ebx+0x40],0x10
10004408:	jb     0x1000440f
1000440a:	mov    ebx,DWORD PTR [ebx+0x2c]
1000440d:	jmp    0x10004418
1000440f:	add    ebx,0x2c
10004412:	jmp    0x10004418
10004414:	mov    ebx,DWORD PTR [esp+0x24]
10004418:	call   0x10037650
1000441d:	push   0x0
1000441f:	push   0x1
10004421:	lea    ecx,[esp+0x30]
10004425:	call   0x100012f0
1000442a:	mov    eax,ebx
1000442c:	mov    ecx,DWORD PTR [esp+0x68]
10004430:	mov    DWORD PTR fs:0x0,ecx
10004437:	pop    ecx
10004438:	pop    edi
10004439:	pop    esi
1000443a:	pop    ebx
1000443b:	mov    ecx,DWORD PTR [esp+0x50]
1000443f:	xor    ecx,esp
10004441:	call   0x10043615
10004446:	mov    esp,ebp
10004448:	pop    ebp
10004449:	ret    
1000444a:	push   ebp
1000444b:	mov    ebp,esp
1000444d:	and    esp,0xfffffff8
10004450:	push   0xffffffff
10004452:	push   0x10060caa
10004457:	mov    eax,fs:0x0
1000445d:	push   eax
1000445e:	sub    esp,0x58
10004461:	mov    eax,ds:0x100801ac
10004466:	xor    eax,esp
10004468:	mov    DWORD PTR [esp+0x50],eax
1000446c:	push   ebx
1000446d:	push   esi
1000446e:	push   edi
1000446f:	mov    eax,ds:0x100801ac
10004474:	xor    eax,esp
10004476:	push   eax
10004477:	lea    eax,[esp+0x68]
1000447b:	mov    fs:0x0,eax
10004481:	mov    esi,ecx
10004483:	mov    DWORD PTR [esp+0x24],esi
10004487:	call   0x10037620
1000448c:	test   al,al
1000448e:	jne    0x10004497
10004490:	mov    eax,esi
10004492:	jmp    0x100045d0
10004497:	mov    eax,DWORD PTR [ebp+0x8]
1000449a:	xor    edi,edi
1000449c:	push   esi
1000449d:	lea    esi,[esp+0x2c]
100044a1:	mov    DWORD PTR [esp+0x44],0x7
100044a9:	mov    DWORD PTR [esp+0x40],edi
100044ad:	mov    WORD PTR [esp+0x30],di
100044b2:	call   0x100053e0
100044b7:	mov    eax,esi
100044b9:	push   eax
100044ba:	lea    eax,[esp+0x20]
100044be:	push   eax
100044bf:	mov    DWORD PTR [esp+0x78],edi
100044c3:	call   0x1000488b
100044c8:	push   eax
100044c9:	call   0x10004c25
100044ce:	call   0x1000488b
100044d3:	mov    ecx,DWORD PTR [eax+0x4]
100044d6:	lea    edi,[esp+0x14]
100044da:	lea    esi,[esp+0x1c]
100044de:	mov    DWORD PTR [esp+0x18],ecx
100044e2:	mov    DWORD PTR [esp+0x14],eax
100044e6:	call   0x10004b0c
100044eb:	test   al,al
100044ed:	je     0x1000453b
100044ef:	sub    esp,0x1c
100044f2:	lea    eax,[esp+0x44]
100044f6:	mov    esi,esp
100044f8:	mov    DWORD PTR [esp+0x30],esp
100044fc:	call   0x10004b27
10004501:	lea    edi,[esp+0x60]
10004505:	call   0x100048ee
1000450a:	add    esp,0x1c
1000450d:	lea    eax,[esp+0x28]
10004511:	push   eax
10004512:	mov    BYTE PTR [esp+0x74],0x1
10004517:	call   0x1000488b
1000451c:	push   eax
1000451d:	call   0x10004b52
10004522:	push   0xffffffff
10004524:	push   eax
10004525:	xor    ebx,ebx
10004527:	mov    eax,edi
10004529:	call   0x1000535a
1000452e:	push   0x1
10004530:	mov    esi,edi
10004532:	mov    BYTE PTR [esp+0x74],bl
10004536:	call   0x10005465
1000453b:	mov    eax,DWORD PTR [ebp+0xc]
1000453e:	movzx  eax,BYTE PTR [eax]
10004541:	cmp    eax,0x100
10004546:	jge    0x1000456c
10004548:	lea    eax,[esp+0x28]
1000454c:	push   eax
1000454d:	lea    eax,[esp+0x18]
10004551:	push   eax
10004552:	call   0x1000488b
10004557:	push   eax
10004558:	call   0x10004c25
1000455d:	mov    ecx,DWORD PTR [eax]
1000455f:	mov    ebx,DWORD PTR [eax+0x4]
10004562:	mov    DWORD PTR [esp+0x1c],ecx
10004566:	mov    DWORD PTR [esp+0x20],ebx
1000456a:	jmp    0x10004570
1000456c:	mov    ebx,DWORD PTR [esp+0x20]
10004570:	call   0x1000488b
10004575:	mov    ecx,DWORD PTR [eax+0x4]
10004578:	lea    edi,[esp+0x14]
1000457c:	lea    esi,[esp+0x1c]
10004580:	mov    DWORD PTR [esp+0x18],ecx
10004584:	mov    DWORD PTR [esp+0x14],eax
10004588:	call   0x10004b0c
1000458d:	test   al,al
1000458f:	jne    0x100045b8
10004591:	mov    esi,DWORD PTR [esp+0x1c]
10004595:	test   esi,esi
10004597:	jne    0x1000459e
10004599:	call   0x10043605
1000459e:	cmp    ebx,DWORD PTR [esi+0x4]
100045a1:	jne    0x100045a8
100045a3:	call   0x10043605
100045a8:	cmp    DWORD PTR [ebx+0x40],0x8
100045ac:	jb     0x100045b3
100045ae:	mov    edi,DWORD PTR [ebx+0x2c]
100045b1:	jmp    0x100045bc
100045b3:	lea    edi,[ebx+0x2c]
100045b6:	jmp    0x100045bc
100045b8:	mov    edi,DWORD PTR [esp+0x24]
100045bc:	call   0x10037650
100045c1:	push   0x1
100045c3:	xor    ebx,ebx
100045c5:	lea    esi,[esp+0x2c]
100045c9:	call   0x10005465
100045ce:	mov    eax,edi
100045d0:	mov    ecx,DWORD PTR [esp+0x68]
100045d4:	mov    DWORD PTR fs:0x0,ecx
100045db:	pop    ecx
100045dc:	pop    edi
100045dd:	pop    esi
100045de:	pop    ebx
100045df:	mov    ecx,DWORD PTR [esp+0x50]
100045e3:	xor    ecx,esp
100045e5:	call   0x10043615
100045ea:	mov    esp,ebp
100045ec:	pop    ebp
100045ed:	ret    
100045ee:	jmp    0x10004996
100045f3:	mov    ecx,DWORD PTR [eax+0x4]
100045f6:	test   ecx,ecx
100045f8:	jne    0x100045fd
100045fa:	xor    eax,eax
100045fc:	ret    
100045fd:	mov    eax,DWORD PTR [eax+0x8]
10004600:	sub    eax,ecx
10004602:	push   0x1c
10004604:	cdq    
10004605:	pop    ecx
10004606:	idiv   ecx
10004608:	ret    
10004609:	mov    eax,esi
1000460b:	call   0x100045f3
10004610:	cmp    DWORD PTR [esp+0x4],eax
10004614:	jb     0x1000461b
10004616:	call   0x10043605
1000461b:	mov    eax,DWORD PTR [esp+0x4]
1000461f:	imul   eax,eax,0x1c
10004622:	add    eax,DWORD PTR [esi+0x4]
10004625:	ret    0x4
10004628:	push   esi
10004629:	mov    esi,DWORD PTR [eax]
1000462b:	test   esi,esi
1000462d:	je     0x1000463c
1000462f:	push   esi
10004630:	call   0x1003a0d0
10004635:	push   esi
10004636:	call   0x10042fe2
1000463b:	pop    ecx
1000463c:	pop    esi
1000463d:	ret    
1000463e:	mov    eax,DWORD PTR [esi]
10004640:	test   eax,eax
10004642:	je     0x1000464b
10004644:	push   eax
10004645:	call   DWORD PTR ds:0x10067078
1000464b:	and    DWORD PTR [esi],0x0
1000464e:	ret    
1000464f:	push   esi
10004650:	mov    esi,ecx
10004652:	mov    ecx,DWORD PTR [eax+0x14]
10004655:	cmp    ecx,esi
10004657:	jae    0x1000465b
10004659:	mov    esi,ecx
1000465b:	cmp    esi,edi
1000465d:	mov    ecx,esi
1000465f:	jb     0x10004663
10004661:	mov    ecx,edi
10004663:	cmp    DWORD PTR [eax+0x18],0x10
10004667:	jb     0x1000466e
10004669:	mov    eax,DWORD PTR [eax+0x4]
1000466c:	jmp    0x10004671
1000466e:	add    eax,0x4
10004671:	push   ecx
10004672:	push   DWORD PTR [esp+0xc]
10004676:	push   eax
10004677:	call   0x10043a74
1000467c:	add    esp,0xc
1000467f:	test   eax,eax
10004681:	jne    0x10004693
10004683:	cmp    esi,edi
10004685:	jae    0x1000468c
10004687:	or     eax,0xffffffff
1000468a:	jmp    0x10004693
1000468c:	xor    eax,eax
1000468e:	cmp    esi,edi
10004690:	setne  al
10004693:	pop    esi
10004694:	ret    0x4
10004697:	mov    eax,DWORD PTR [eax]
10004699:	mov    ecx,DWORD PTR [eax-0x10]
1000469c:	test   ecx,ecx
1000469e:	je     0x100046a7
100046a0:	mov    eax,DWORD PTR [ecx]
100046a2:	call   DWORD PTR [eax+0x10]
100046a5:	jmp    0x100046a9
100046a7:	xor    eax,eax
100046a9:	test   eax,eax
100046ab:	jne    0x100046ba
100046ad:	mov    ecx,0x10082a6c
100046b2:	mov    eax,ds:0x10082a6c
100046b7:	jmp    DWORD PTR [eax+0x10]
100046ba:	ret    
100046bb:	push   ebp
100046bc:	mov    ebp,esp
100046be:	push   ecx
100046bf:	push   esi
100046c0:	mov    esi,DWORD PTR [ebp+0x8]
100046c3:	lea    eax,[edi+ebx*1]
100046c6:	push   eax
100046c7:	mov    DWORD PTR [ebp-0x4],eax
100046ca:	call   0x100021a7
100046cf:	push   DWORD PTR [ebp+0xc]
100046d2:	mov    esi,eax
100046d4:	push   edi
100046d5:	push   esi
100046d6:	mov    eax,edi
100046d8:	call   0x1000232c
100046dd:	push   DWORD PTR [ebp+0x10]
100046e0:	lea    eax,[esi+edi*2]
100046e3:	push   ebx
100046e4:	push   eax
100046e5:	mov    eax,ebx
100046e7:	call   0x1000232c
100046ec:	mov    eax,DWORD PTR [ebp-0x4]
100046ef:	mov    edx,DWORD PTR [ebp+0x8]
100046f2:	add    esp,0x18
100046f5:	call   0x10002232
100046fa:	pop    esi
100046fb:	leave  
100046fc:	ret    
100046fd:	push   ebp
100046fe:	mov    ebp,esp
10004700:	push   ecx
10004701:	push   ebx
10004702:	push   esi
10004703:	push   edi
10004704:	mov    esi,eax
10004706:	call   0x1000a1e7
1000470b:	test   eax,eax
1000470d:	jne    0x10004713
1000470f:	xor    edi,edi
10004711:	jmp    0x10004738
10004713:	mov    ebx,DWORD PTR [esi+0x4]
10004716:	cmp    ebx,DWORD PTR [esi+0x8]
10004719:	jbe    0x10004720
1000471b:	call   0x10043605
10004720:	cmp    DWORD PTR [ebp+0x10],0x0
10004724:	je     0x1000472b
10004726:	cmp    DWORD PTR [ebp+0x10],esi
10004729:	je     0x10004730
1000472b:	call   0x10043605
10004730:	mov    edi,DWORD PTR [ebp+0x14]
10004733:	sub    edi,ebx
10004735:	sar    edi,0x5
10004738:	push   DWORD PTR [ebp+0x14]
1000473b:	mov    edx,DWORD PTR [ebp+0xc]
1000473e:	push   DWORD PTR [ebp+0x10]
10004741:	mov    ecx,esi
10004743:	call   0x10004e71
10004748:	mov    ebx,DWORD PTR [esi+0x4]
1000474b:	cmp    ebx,DWORD PTR [esi+0x8]
1000474e:	jbe    0x10004755
10004750:	call   0x10043605
10004755:	shl    edi,0x5
10004758:	add    edi,ebx
1000475a:	cmp    edi,DWORD PTR [esi+0x8]
1000475d:	mov    DWORD PTR [ebp+0x14],ebx
10004760:	ja     0x10004767
10004762:	cmp    edi,DWORD PTR [esi+0x4]
10004765:	jae    0x1000476c
10004767:	call   0x10043605
1000476c:	mov    eax,DWORD PTR [ebp+0x8]
1000476f:	mov    DWORD PTR [eax+0x4],edi
10004772:	pop    edi
10004773:	mov    DWORD PTR [eax],esi
10004775:	pop    esi
10004776:	pop    ebx
10004777:	pop    ecx
10004778:	pop    ebp
10004779:	ret    0x10
1000477c:	push   esi
1000477d:	mov    esi,eax
1000477f:	cmp    esi,0x7ffffff
10004785:	jbe    0x1000478c
10004787:	jmp    0x1000dbd4
1000478c:	mov    ecx,esi
1000478e:	call   0x10005080
10004793:	shl    esi,0x5
10004796:	add    esi,eax
10004798:	mov    DWORD PTR [edi+0x4],eax
1000479b:	mov    DWORD PTR [edi+0x8],eax
1000479e:	mov    DWORD PTR [edi+0xc],esi
100047a1:	mov    al,0x1
100047a3:	pop    esi
100047a4:	ret    
100047a5:	mov    eax,DWORD PTR [esi+0x4]
100047a8:	test   eax,eax
100047aa:	je     0x100047bd
100047ac:	push   DWORD PTR [esi+0x8]
100047af:	call   0x10004e54
100047b4:	push   DWORD PTR [esi+0x4]
100047b7:	call   0x10042fe2
100047bc:	pop    ecx
100047bd:	and    DWORD PTR [esi+0x4],0x0
100047c1:	and    DWORD PTR [esi+0x8],0x0
100047c5:	and    DWORD PTR [esi+0xc],0x0
100047c9:	ret    
100047ca:	push   0x0
100047cc:	mov    eax,0x10060c7f
100047d1:	call   0x10059df5
100047d6:	test   BYTE PTR ds:0x10082c98,0x1
100047dd:	jne    0x10004822
100047df:	or     DWORD PTR ds:0x10082c98,0x1
100047e6:	and    DWORD PTR [esp+0x18],0x0
100047eb:	call   0x1000658a
100047f0:	mov    ds:0x10082c90,eax
100047f5:	mov    BYTE PTR [eax+0x45],0x1
100047f9:	mov    eax,ds:0x10082c90
100047fe:	mov    DWORD PTR [eax+0x4],eax
10004801:	mov    eax,ds:0x10082c90
10004806:	mov    DWORD PTR [eax],eax
10004808:	mov    eax,ds:0x10082c90
1000480d:	mov    DWORD PTR [eax+0x8],eax
10004810:	and    DWORD PTR ds:0x10082c94,0x0
10004817:	push   0x10065ee1
1000481c:	call   0x10043166
10004821:	pop    ecx
10004822:	mov    eax,0x10082c8c
10004827:	call   0x10059ecd
1000482c:	ret    
1000482d:	push   0x4
1000482f:	mov    eax,0x10060251
10004834:	call   0x10059df5
10004839:	and    DWORD PTR [ebp-0x10],0x0
1000483d:	and    DWORD PTR [ebp-0x4],0x0
10004841:	lea    eax,[ebp+0x8]
10004844:	push   eax
10004845:	mov    ecx,esi
10004847:	call   0x100011c9
1000484c:	xor    ebx,ebx
1000484e:	inc    ebx
1000484f:	cmp    DWORD PTR [esi+0x14],ebx
10004852:	jbe    0x10004877
10004854:	mov    edi,ebx
10004856:	mov    eax,esi
10004858:	call   0x10012206
1000485d:	mov    DWORD PTR [ebp-0x10],eax
10004860:	lea    edi,[ebx-0x1]
10004863:	mov    eax,esi
10004865:	call   0x10012206
1000486a:	mov    cl,BYTE PTR [eax]
1000486c:	mov    eax,DWORD PTR [ebp-0x10]
1000486f:	xor    BYTE PTR [eax],cl
10004871:	inc    ebx
10004872:	cmp    ebx,DWORD PTR [esi+0x14]
10004875:	jb     0x10004854
10004877:	push   0x0
10004879:	push   0x1
1000487b:	lea    ecx,[ebp+0x8]
1000487e:	call   0x100012f0
10004883:	mov    eax,esi
10004885:	call   0x10059ecd
1000488a:	ret    
1000488b:	push   0x0
1000488d:	mov    eax,0x10060c56
10004892:	call   0x10059df5
10004897:	test   BYTE PTR ds:0x10082c88,0x1
1000489e:	jne    0x100048e3
100048a0:	or     DWORD PTR ds:0x10082c88,0x1
100048a7:	and    DWORD PTR [esp+0x18],0x0
100048ac:	call   0x1000658a
100048b1:	mov    ds:0x10082c80,eax
100048b6:	mov    BYTE PTR [eax+0x45],0x1
100048ba:	mov    eax,ds:0x10082c80
100048bf:	mov    DWORD PTR [eax+0x4],eax
100048c2:	mov    eax,ds:0x10082c80
100048c7:	mov    DWORD PTR [eax],eax
100048c9:	mov    eax,ds:0x10082c80
100048ce:	mov    DWORD PTR [eax+0x8],eax
100048d1:	and    DWORD PTR ds:0x10082c84,0x0
100048d8:	push   0x10065edc
100048dd:	call   0x10043166
100048e2:	pop    ecx
100048e3:	mov    eax,0x10082c7c
100048e8:	call   0x10059ecd
100048ed:	ret    
100048ee:	push   0x4
100048f0:	mov    eax,0x1006022e
100048f5:	call   0x10059df5
100048fa:	and    DWORD PTR [ebp-0x10],0x0
100048fe:	and    DWORD PTR [ebp-0x4],0x0
10004902:	lea    eax,[ebp+0x8]
10004905:	mov    esi,edi
10004907:	call   0x10004b27
1000490c:	mov    eax,DWORD PTR [edi+0x14]
1000490f:	xor    ebx,ebx
10004911:	inc    ebx
10004912:	cmp    ebx,eax
10004914:	jae    0x10004959
10004916:	jbe    0x1000491d
10004918:	call   0x10043605
1000491d:	cmp    DWORD PTR [edi+0x18],0x8
10004921:	jb     0x10004928
10004923:	mov    esi,DWORD PTR [edi+0x4]
10004926:	jmp    0x1000492b
10004928:	lea    esi,[edi+0x4]
1000492b:	lea    eax,[ebx-0x1]
1000492e:	cmp    eax,DWORD PTR [edi+0x14]
10004931:	lea    esi,[esi+ebx*2]
10004934:	jbe    0x1000493b
10004936:	call   0x10043605
1000493b:	cmp    DWORD PTR [edi+0x18],0x8
1000493f:	jb     0x10004946
10004941:	mov    eax,DWORD PTR [edi+0x4]
10004944:	jmp    0x10004949
10004946:	lea    eax,[edi+0x4]
10004949:	mov    ax,WORD PTR [eax+ebx*2-0x2]
1000494e:	xor    WORD PTR [esi],ax
10004951:	mov    eax,DWORD PTR [edi+0x14]
10004954:	inc    ebx
10004955:	cmp    ebx,eax
10004957:	jb     0x1000491d
10004959:	push   0x1
1000495b:	xor    ebx,ebx
1000495d:	lea    esi,[ebp+0x8]
10004960:	call   0x10005465
10004965:	mov    eax,edi
10004967:	call   0x10059ecd
1000496c:	ret    
1000496d:	push   esi
1000496e:	mov    esi,eax
10004970:	cmp    esi,0x9249249
10004976:	jbe    0x1000497d
10004978:	jmp    0x1000dbd4
1000497d:	mov    ecx,esi
1000497f:	call   0x100050ca
10004984:	imul   esi,esi,0x1c
10004987:	add    esi,eax
10004989:	mov    DWORD PTR [edi+0x4],eax
1000498c:	mov    DWORD PTR [edi+0x8],eax
1000498f:	mov    DWORD PTR [edi+0xc],esi
10004992:	mov    al,0x1
10004994:	pop    esi
10004995:	ret    
10004996:	mov    eax,DWORD PTR [esi+0x4]
10004999:	test   eax,eax
1000499b:	je     0x100049ae
1000499d:	push   DWORD PTR [esi+0x8]
100049a0:	call   0x1000513a
100049a5:	push   DWORD PTR [esi+0x4]
100049a8:	call   0x10042fe2
100049ad:	pop    ecx
100049ae:	and    DWORD PTR [esi+0x4],0x0
100049b2:	and    DWORD PTR [esi+0x8],0x0
100049b6:	and    DWORD PTR [esi+0xc],0x0
100049ba:	ret    
100049bb:	mov    eax,DWORD PTR [esi]
100049bd:	test   eax,eax
100049bf:	je     0x100049c8
100049c1:	push   eax
100049c2:	call   DWORD PTR ds:0x10067078
100049c8:	mov    eax,DWORD PTR [esp+0x4]
100049cc:	mov    DWORD PTR [esi],eax
100049ce:	ret    0x4
100049d1:	push   0x64
100049d3:	mov    eax,0x10060c2d
100049d8:	call   0x10059df5
100049dd:	push   DWORD PTR [ebp+0xc]
100049e0:	mov    edi,DWORD PTR [ebp+0x8]
100049e3:	lea    ebx,[ebp-0x14]
100049e6:	call   0x1000531c
100049eb:	mov    eax,DWORD PTR [edi+0x4]
100049ee:	mov    DWORD PTR [ebp-0x1c],edi
100049f1:	lea    edi,[ebp-0x1c]
100049f4:	mov    esi,ebx
100049f6:	mov    DWORD PTR [ebp-0x18],eax
100049f9:	call   0x10004b0c
100049fe:	mov    ebx,DWORD PTR [ebp-0x10]
10004a01:	xor    esi,esi
10004a03:	test   al,al
10004a05:	jne    0x10004a16
10004a07:	mov    eax,DWORD PTR [ebp+0xc]
10004a0a:	lea    ecx,[ebx+0xc]
10004a0d:	call   0x10005114
10004a12:	test   al,al
10004a14:	je     0x10004a84
10004a16:	push   esi
10004a17:	lea    ecx,[ebp-0x38]
10004a1a:	mov    DWORD PTR [ebp-0x20],0xf
10004a21:	call   0x1000141c
10004a26:	push   DWORD PTR [ebp+0xc]
10004a29:	lea    ecx,[ebp-0x70]
10004a2c:	mov    DWORD PTR [ebp-0x4],esi
10004a2f:	call   0x100011c9
10004a34:	lea    eax,[ebp-0x38]
10004a37:	push   eax
10004a38:	lea    ecx,[ebp-0x54]
10004a3b:	mov    BYTE PTR [ebp-0x4],0x1
10004a3f:	call   0x100011c9
10004a44:	push   ebx
10004a45:	mov    BYTE PTR [ebp-0x4],0x2
10004a49:	push   DWORD PTR [ebp-0x14]
10004a4c:	lea    eax,[ebp-0x70]
10004a4f:	push   eax
10004a50:	lea    eax,[ebp-0x1c]
10004a53:	push   eax
10004a54:	mov    eax,DWORD PTR [ebp+0x8]
10004a57:	call   0x10005199
10004a5c:	mov    edi,DWORD PTR [eax]
10004a5e:	mov    ebx,DWORD PTR [eax+0x4]
10004a61:	push   esi
10004a62:	push   0x1
10004a64:	lea    ecx,[ebp-0x54]
10004a67:	call   0x100012f0
10004a6c:	push   esi
10004a6d:	push   0x1
10004a6f:	lea    ecx,[ebp-0x70]
10004a72:	call   0x100012f0
10004a77:	push   esi
10004a78:	push   0x1
10004a7a:	lea    ecx,[ebp-0x38]
10004a7d:	call   0x100012f0
10004a82:	jmp    0x10004a87
10004a84:	mov    edi,DWORD PTR [ebp-0x14]
10004a87:	cmp    edi,esi
10004a89:	jne    0x10004a90
10004a8b:	call   0x10043605
10004a90:	cmp    ebx,DWORD PTR [edi+0x4]
10004a93:	jne    0x10004a9a
10004a95:	call   0x10043605
10004a9a:	lea    eax,[ebx+0x28]
10004a9d:	call   0x10059ecd
10004aa2:	ret    0x8
10004aa5:	push   ebp
10004aa6:	mov    ebp,esp
10004aa8:	sub    esp,0x18
10004aab:	push   ebx
10004aac:	push   esi
10004aad:	push   edi
10004aae:	push   DWORD PTR [ebp+0x10]
10004ab1:	mov    edi,DWORD PTR [ebp+0x8]
10004ab4:	lea    ebx,[ebp-0xc]
10004ab7:	call   0x1000531c
10004abc:	mov    eax,DWORD PTR [edi+0x4]
10004abf:	mov    DWORD PTR [ebp-0x14],edi
10004ac2:	lea    edi,[ebp-0x14]
10004ac5:	mov    esi,ebx
10004ac7:	mov    DWORD PTR [ebp-0x10],eax
10004aca:	call   0x10004b0c
10004acf:	test   al,al
10004ad1:	jne    0x10004ae9
10004ad3:	mov    ecx,DWORD PTR [ebp-0x8]
10004ad6:	mov    eax,DWORD PTR [ebp+0x10]
10004ad9:	add    ecx,0xc
10004adc:	call   0x10005114
10004ae1:	test   al,al
10004ae3:	jne    0x10004ae9
10004ae5:	mov    ecx,ebx
10004ae7:	jmp    0x10004af8
10004ae9:	mov    eax,DWORD PTR [ebp+0x8]
10004aec:	mov    ecx,DWORD PTR [eax+0x4]
10004aef:	mov    DWORD PTR [ebp-0x10],ecx
10004af2:	mov    DWORD PTR [ebp-0x14],eax
10004af5:	lea    ecx,[ebp-0x14]
10004af8:	mov    edx,DWORD PTR [ecx]
10004afa:	mov    eax,DWORD PTR [ebp+0xc]
10004afd:	mov    ecx,DWORD PTR [ecx+0x4]
10004b00:	pop    edi
10004b01:	pop    esi
10004b02:	mov    DWORD PTR [eax],edx
10004b04:	mov    DWORD PTR [eax+0x4],ecx
10004b07:	pop    ebx
10004b08:	leave  
10004b09:	ret    0xc
10004b0c:	mov    eax,DWORD PTR [esi]
10004b0e:	test   eax,eax
10004b10:	je     0x10004b16
10004b12:	cmp    eax,DWORD PTR [edi]
10004b14:	je     0x10004b1b
10004b16:	call   0x10043605
10004b1b:	mov    eax,DWORD PTR [esi+0x4]
10004b1e:	sub    eax,DWORD PTR [edi+0x4]
10004b21:	neg    eax
10004b23:	sbb    eax,eax
10004b25:	inc    eax
10004b26:	ret    
10004b27:	and    DWORD PTR [esi+0x14],0x0
10004b2b:	push   ebx
10004b2c:	push   0xffffffff
10004b2e:	mov    DWORD PTR [esi+0x18],0x7
10004b35:	and    WORD PTR [esi+0x4],0x0
10004b3a:	push   esi
10004b3b:	xor    ebx,ebx
10004b3d:	call   0x1000535a
10004b42:	mov    eax,esi
10004b44:	pop    ebx
10004b45:	ret    
10004b46:	push   ebx
10004b47:	push   0x1
10004b49:	xor    ebx,ebx
10004b4b:	call   0x10005465
10004b50:	pop    ebx
10004b51:	ret    
10004b52:	push   0x64
10004b54:	mov    eax,0x10060bfa
10004b59:	call   0x10059df5
10004b5e:	push   DWORD PTR [ebp+0xc]
10004b61:	mov    edi,DWORD PTR [ebp+0x8]
10004b64:	lea    ebx,[ebp-0x14]
10004b67:	call   0x1000566f
10004b6c:	mov    eax,DWORD PTR [edi+0x4]
10004b6f:	mov    DWORD PTR [ebp-0x1c],edi
10004b72:	lea    edi,[ebp-0x1c]
10004b75:	mov    esi,ebx
10004b77:	mov    DWORD PTR [ebp-0x18],eax
10004b7a:	call   0x10004b0c
10004b7f:	test   al,al
10004b81:	mov    ebx,DWORD PTR [ebp-0x10]
10004b84:	jne    0x10004b95
10004b86:	mov    eax,DWORD PTR [ebp+0xc]
10004b89:	lea    ecx,[ebx+0xc]
10004b8c:	call   0x100056ad
10004b91:	test   al,al
10004b93:	je     0x10004c04
10004b95:	xor    eax,eax
10004b97:	mov    DWORD PTR [ebp-0x20],0x7
10004b9e:	mov    DWORD PTR [ebp-0x24],eax
10004ba1:	mov    WORD PTR [ebp-0x34],ax
10004ba5:	mov    DWORD PTR [ebp-0x4],eax
10004ba8:	mov    eax,DWORD PTR [ebp+0xc]
10004bab:	lea    esi,[ebp-0x70]
10004bae:	call   0x10004b27
10004bb3:	lea    eax,[ebp-0x38]
10004bb6:	lea    esi,[ebp-0x54]
10004bb9:	mov    BYTE PTR [ebp-0x4],0x1
10004bbd:	call   0x10004b27
10004bc2:	push   ebx
10004bc3:	mov    BYTE PTR [ebp-0x4],0x2
10004bc7:	push   DWORD PTR [ebp-0x14]
10004bca:	lea    eax,[ebp-0x70]
10004bcd:	push   eax
10004bce:	lea    eax,[ebp-0x1c]
10004bd1:	push   eax
10004bd2:	mov    eax,DWORD PTR [ebp+0x8]
10004bd5:	call   0x100054ec
10004bda:	mov    edi,DWORD PTR [eax]
10004bdc:	mov    eax,DWORD PTR [eax+0x4]
10004bdf:	push   0x1
10004be1:	xor    ebx,ebx
10004be3:	mov    DWORD PTR [ebp-0x10],eax
10004be6:	call   0x10005465
10004beb:	push   0x1
10004bed:	lea    esi,[ebp-0x70]
10004bf0:	call   0x10005465
10004bf5:	push   0x1
10004bf7:	lea    esi,[ebp-0x38]
10004bfa:	call   0x10005465
10004bff:	mov    ebx,DWORD PTR [ebp-0x10]
10004c02:	jmp    0x10004c07
10004c04:	mov    edi,DWORD PTR [ebp-0x14]
10004c07:	test   edi,edi
10004c09:	jne    0x10004c10
10004c0b:	call   0x10043605
10004c10:	cmp    ebx,DWORD PTR [edi+0x4]
10004c13:	jne    0x10004c1a
10004c15:	call   0x10043605
10004c1a:	lea    eax,[ebx+0x28]
10004c1d:	call   0x10059ecd
10004c22:	ret    0x8
10004c25:	push   ebp
10004c26:	mov    ebp,esp
10004c28:	sub    esp,0x18
10004c2b:	push   ebx
10004c2c:	push   esi
10004c2d:	push   edi
10004c2e:	push   DWORD PTR [ebp+0x10]
10004c31:	mov    edi,DWORD PTR [ebp+0x8]
10004c34:	lea    ebx,[ebp-0xc]
10004c37:	call   0x1000566f
10004c3c:	mov    eax,DWORD PTR [edi+0x4]
10004c3f:	mov    DWORD PTR [ebp-0x14],edi
10004c42:	lea    edi,[ebp-0x14]
10004c45:	mov    esi,ebx
10004c47:	mov    DWORD PTR [ebp-0x10],eax
10004c4a:	call   0x10004b0c
10004c4f:	test   al,al
10004c51:	jne    0x10004c69
10004c53:	mov    ecx,DWORD PTR [ebp-0x8]
10004c56:	mov    eax,DWORD PTR [ebp+0x10]
10004c59:	add    ecx,0xc
10004c5c:	call   0x100056ad
10004c61:	test   al,al
10004c63:	jne    0x10004c69
10004c65:	mov    ecx,ebx
10004c67:	jmp    0x10004c78
10004c69:	mov    eax,DWORD PTR [ebp+0x8]
10004c6c:	mov    ecx,DWORD PTR [eax+0x4]
10004c6f:	mov    DWORD PTR [ebp-0x10],ecx
10004c72:	mov    DWORD PTR [ebp-0x14],eax
10004c75:	lea    ecx,[ebp-0x14]
10004c78:	mov    edx,DWORD PTR [ecx]
10004c7a:	mov    eax,DWORD PTR [ebp+0xc]
10004c7d:	mov    ecx,DWORD PTR [ecx+0x4]
10004c80:	pop    edi
10004c81:	pop    esi
10004c82:	mov    DWORD PTR [eax],edx
10004c84:	mov    DWORD PTR [eax+0x4],ecx
10004c87:	pop    ebx
10004c88:	leave  
10004c89:	ret    0xc
10004c8c:	push   0x0
10004c8e:	push   0x1
10004c90:	lea    ecx,[esi+0x1c]
10004c93:	call   0x100012f0
10004c98:	push   0x0
10004c9a:	push   0x1
10004c9c:	mov    ecx,esi
10004c9e:	call   0x100012f0
10004ca3:	ret    
10004ca4:	push   ebx
10004ca5:	push   esi
10004ca6:	push   0x1
10004ca8:	lea    esi,[edi+0x1c]
10004cab:	xor    ebx,ebx
10004cad:	call   0x10005465
10004cb2:	push   0x1
10004cb4:	mov    esi,edi
10004cb6:	call   0x10005465
10004cbb:	pop    esi
10004cbc:	pop    ebx
10004cbd:	ret    
10004cbe:	push   ebp
10004cbf:	mov    ebp,esp
10004cc1:	push   ecx
10004cc2:	push   ebx
10004cc3:	mov    ebx,DWORD PTR [ebp+0xc]
10004cc6:	push   edi
10004cc7:	mov    edi,eax
10004cc9:	mov    eax,DWORD PTR [edi+0x14]
10004ccc:	cmp    eax,DWORD PTR [ebp+0x8]
10004ccf:	jae    0x10004cd6
10004cd1:	call   0x100574ef
10004cd6:	mov    eax,DWORD PTR [edi+0x14]
10004cd9:	sub    eax,DWORD PTR [ebp+0x8]
10004cdc:	cmp    eax,ebx
10004cde:	jae    0x10004ce5
10004ce0:	mov    ebx,eax
10004ce2:	mov    DWORD PTR [ebp+0xc],ebx
10004ce5:	or     eax,0xffffffff
10004ce8:	sub    eax,DWORD PTR [esi+0x14]
10004ceb:	cmp    eax,ebx
10004ced:	jbe    0x10004cf9
10004cef:	mov    eax,DWORD PTR [esi+0x14]
10004cf2:	lea    ecx,[eax+ebx*1]
10004cf5:	cmp    ecx,eax
10004cf7:	jae    0x10004cfe
10004cf9:	call   0x100574b0
10004cfe:	test   ebx,ebx
10004d00:	jbe    0x10004d5a
10004d02:	mov    eax,DWORD PTR [esi+0x14]
10004d05:	add    eax,ebx
10004d07:	push   0x0
10004d09:	push   eax
10004d0a:	mov    ecx,esi
10004d0c:	mov    DWORD PTR [ebp-0x4],eax
10004d0f:	call   0x10001438
10004d14:	test   al,al
10004d16:	je     0x10004d5a
10004d18:	cmp    DWORD PTR [edi+0x18],0x10
10004d1c:	jb     0x10004d23
10004d1e:	mov    edi,DWORD PTR [edi+0x4]
10004d21:	jmp    0x10004d26
10004d23:	add    edi,0x4
10004d26:	mov    eax,DWORD PTR [esi+0x18]
10004d29:	cmp    eax,0x10
10004d2c:	jb     0x10004d33
10004d2e:	mov    edx,DWORD PTR [esi+0x4]
10004d31:	jmp    0x10004d36
10004d33:	lea    edx,[esi+0x4]
10004d36:	push   DWORD PTR [ebp+0xc]
10004d39:	mov    ecx,DWORD PTR [esi+0x14]
10004d3c:	mov    ebx,DWORD PTR [ebp+0x8]
10004d3f:	add    edi,ebx
10004d41:	sub    eax,ecx
10004d43:	push   edi
10004d44:	push   eax
10004d45:	add    ecx,edx
10004d47:	push   ecx
10004d48:	call   0x1000103f
10004d4d:	add    esp,0x10
10004d50:	push   DWORD PTR [ebp-0x4]
10004d53:	mov    ecx,esi
10004d55:	call   0x1000141c
10004d5a:	pop    edi
10004d5b:	mov    eax,esi
10004d5d:	pop    ebx
10004d5e:	leave  
10004d5f:	ret    0x8
10004d62:	push   ebx
10004d63:	mov    ebx,DWORD PTR [esp+0xc]
10004d67:	push   esi
10004d68:	push   edi
10004d69:	mov    edi,DWORD PTR [esp+0x10]
10004d6d:	mov    esi,eax
10004d6f:	push   edi
10004d70:	mov    ecx,esi
10004d72:	call   0x100015e2
10004d77:	test   al,al
10004d79:	je     0x10004d96
10004d7b:	cmp    DWORD PTR [esi+0x18],0x10
10004d7f:	jb     0x10004d86
10004d81:	mov    eax,DWORD PTR [esi+0x4]
10004d84:	jmp    0x10004d89
10004d86:	lea    eax,[esi+0x4]
10004d89:	sub    edi,eax
10004d8b:	push   ebx
10004d8c:	push   edi
10004d8d:	mov    eax,esi
10004d8f:	call   0x10004cbe
10004d94:	jmp    0x10004df6
10004d96:	or     eax,0xffffffff
10004d99:	sub    eax,DWORD PTR [esi+0x14]
10004d9c:	cmp    eax,ebx
10004d9e:	jbe    0x10004daa
10004da0:	mov    eax,DWORD PTR [esi+0x14]
10004da3:	lea    ecx,[eax+ebx*1]
10004da6:	cmp    ecx,eax
10004da8:	jae    0x10004daf
10004daa:	call   0x100574b0
10004daf:	test   ebx,ebx
10004db1:	jbe    0x10004df4
10004db3:	mov    edi,DWORD PTR [esi+0x14]
10004db6:	push   0x0
10004db8:	add    edi,ebx
10004dba:	push   edi
10004dbb:	mov    ecx,esi
10004dbd:	call   0x10001438
10004dc2:	test   al,al
10004dc4:	je     0x10004df4
10004dc6:	mov    eax,DWORD PTR [esi+0x18]
10004dc9:	cmp    eax,0x10
10004dcc:	jb     0x10004dd3
10004dce:	mov    edx,DWORD PTR [esi+0x4]
10004dd1:	jmp    0x10004dd6
10004dd3:	lea    edx,[esi+0x4]
10004dd6:	mov    ecx,DWORD PTR [esi+0x14]
10004dd9:	push   ebx
10004dda:	push   DWORD PTR [esp+0x14]
10004dde:	sub    eax,ecx
10004de0:	push   eax
10004de1:	add    ecx,edx
10004de3:	push   ecx
10004de4:	call   0x1000103f
10004de9:	add    esp,0x10
10004dec:	push   edi
10004ded:	mov    ecx,esi
10004def:	call   0x1000141c
10004df4:	mov    eax,esi
10004df6:	pop    edi
10004df7:	pop    esi
10004df8:	pop    ebx
10004df9:	ret    0x8
10004dfc:	push   esi
10004dfd:	mov    esi,eax
10004dff:	mov    ecx,DWORD PTR [esi]
10004e01:	mov    eax,DWORD PTR [ecx]
10004e03:	push   edi
10004e04:	call   DWORD PTR [eax+0x10]
10004e07:	lea    edx,[esi+0xc]
10004e0a:	cmp    DWORD PTR [edx],0x0
10004e0d:	jl     0x10004e1e
10004e0f:	cmp    eax,DWORD PTR [esi]
10004e11:	jne    0x10004e1e
10004e13:	xor    eax,eax
10004e15:	mov    edi,esi
10004e17:	inc    eax
10004e18:	lock xadd DWORD PTR [edx],eax
10004e1c:	jmp    0x10004e4f
10004e1e:	mov    edx,DWORD PTR [eax]
10004e20:	push   0x2
10004e22:	push   DWORD PTR [esi+0x4]
10004e25:	mov    ecx,eax
10004e27:	call   DWORD PTR [edx]
10004e29:	mov    edi,eax
10004e2b:	test   edi,edi
10004e2d:	jne    0x10004e34
10004e2f:	jmp    0x10002347
10004e34:	mov    eax,DWORD PTR [esi+0x4]
10004e37:	mov    DWORD PTR [edi+0x4],eax
10004e3a:	mov    eax,DWORD PTR [esi+0x4]
10004e3d:	add    esi,0x10
10004e40:	inc    eax
10004e41:	push   esi
10004e42:	push   eax
10004e43:	lea    ecx,[edi+0x10]
10004e46:	push   ecx
10004e47:	call   0x1000232c
10004e4c:	add    esp,0xc
10004e4f:	mov    eax,edi
10004e51:	pop    edi
10004e52:	pop    esi
10004e53:	ret    
10004e54:	push   esi
10004e55:	mov    esi,eax
10004e57:	jmp    0x10004e67
10004e59:	push   0x0
10004e5b:	push   0x1
10004e5d:	mov    ecx,esi
10004e5f:	call   0x100012f0
10004e64:	add    esi,0x20
10004e67:	cmp    esi,DWORD PTR [esp+0x8]
10004e6b:	jne    0x10004e59
10004e6d:	pop    esi
10004e6e:	ret    0x4
10004e71:	push   0x34
10004e73:	mov    eax,0x10061756
10004e78:	call   0x10059e94
10004e7d:	mov    esi,ecx
10004e7f:	mov    edi,edx
10004e81:	push   edi
10004e82:	lea    ecx,[ebp-0x38]
10004e85:	mov    DWORD PTR [ebp-0x3c],esi
10004e88:	call   0x100011c9
10004e8d:	mov    eax,DWORD PTR [edi+0x1c]
10004e90:	mov    DWORD PTR [ebp-0x1c],eax
10004e93:	xor    edi,edi
10004e95:	mov    DWORD PTR [ebp-0x4],edi
10004e98:	mov    eax,DWORD PTR [esi+0x4]
10004e9b:	cmp    eax,edi
10004e9d:	je     0x10004ea7
10004e9f:	mov    edi,DWORD PTR [esi+0xc]
10004ea2:	sub    edi,eax
10004ea4:	sar    edi,0x5
10004ea7:	mov    eax,esi
10004ea9:	call   0x1000a1e7
10004eae:	mov    ebx,0x7ffffff
10004eb3:	mov    ecx,ebx
10004eb5:	sub    ecx,eax
10004eb7:	cmp    ecx,0x1
10004eba:	jae    0x10004ec1
10004ebc:	call   0x1000dbd4
10004ec1:	mov    eax,esi
10004ec3:	call   0x1000a1e7
10004ec8:	inc    eax
10004ec9:	cmp    edi,eax
10004ecb:	jae    0x10004f8c
10004ed1:	mov    eax,edi
10004ed3:	shr    eax,1
10004ed5:	sub    ebx,eax
10004ed7:	cmp    ebx,edi
10004ed9:	jae    0x10004edf
10004edb:	xor    edi,edi
10004edd:	jmp    0x10004ee1
10004edf:	add    edi,eax
10004ee1:	mov    eax,esi
10004ee3:	call   0x1000a1e7
10004ee8:	inc    eax
10004ee9:	cmp    edi,eax
10004eeb:	jae    0x10004ef7
10004eed:	mov    eax,esi
10004eef:	call   0x1000a1e7
10004ef4:	mov    edi,eax
10004ef6:	inc    edi
10004ef7:	mov    ecx,edi
10004ef9:	call   0x10005080
10004efe:	push   eax
10004eff:	push   DWORD PTR [ebp+0xc]
10004f02:	mov    BYTE PTR [ebp-0x4],0x1
10004f06:	mov    ecx,DWORD PTR [esi+0x4]
10004f09:	mov    DWORD PTR [ebp-0x3c],eax
10004f0c:	mov    DWORD PTR [ebp-0x40],eax
10004f0f:	call   0x10006866
10004f14:	lea    ecx,[ebp-0x38]
10004f17:	push   ecx
10004f18:	push   0x1
10004f1a:	push   eax
10004f1b:	mov    DWORD PTR [ebp-0x40],eax
10004f1e:	call   0x1000a6ea
10004f23:	mov    ecx,DWORD PTR [ebp+0xc]
10004f26:	push   eax
10004f27:	push   DWORD PTR [esi+0x8]
10004f2a:	mov    DWORD PTR [ebp-0x40],eax
10004f2d:	call   0x10006866
10004f32:	mov    eax,esi
10004f34:	call   0x1000a1e7
10004f39:	mov    ebx,eax
10004f3b:	mov    eax,DWORD PTR [esi+0x4]
10004f3e:	inc    ebx
10004f3f:	test   eax,eax
10004f41:	je     0x10004f54
10004f43:	push   DWORD PTR [esi+0x8]
10004f46:	call   0x10004e54
10004f4b:	push   DWORD PTR [esi+0x4]
10004f4e:	call   0x10042fe2
10004f53:	pop    ecx
10004f54:	mov    eax,DWORD PTR [ebp-0x3c]
10004f57:	shl    edi,0x5
10004f5a:	add    edi,eax
10004f5c:	shl    ebx,0x5
10004f5f:	add    ebx,eax
10004f61:	mov    DWORD PTR [esi+0xc],edi
10004f64:	mov    DWORD PTR [esi+0x8],ebx
10004f67:	mov    DWORD PTR [esi+0x4],eax
10004f6a:	jmp    0x1000506c
10004f6f:	push   DWORD PTR [ebp-0x40]
10004f72:	mov    eax,DWORD PTR [ebp-0x3c]
10004f75:	call   0x10004e54
10004f7a:	push   DWORD PTR [ebp-0x3c]
10004f7d:	call   0x10042fe2
10004f82:	pop    ecx
10004f83:	push   0x0
10004f85:	push   0x0
10004f87:	call   0x10047942
10004f8c:	mov    eax,DWORD PTR [esi+0x8]
10004f8f:	mov    edi,DWORD PTR [ebp+0xc]
10004f92:	mov    ecx,eax
10004f94:	sub    ecx,edi
10004f96:	sar    ecx,0x5
10004f99:	cmp    ecx,0x1
10004f9c:	jae    0x10005018
10004f9e:	lea    ecx,[edi+0x20]
10004fa1:	push   ecx
10004fa2:	push   eax
10004fa3:	mov    ecx,edi
10004fa5:	call   0x10006866
10004faa:	mov    BYTE PTR [ebp-0x4],0x3
10004fae:	mov    eax,DWORD PTR [esi+0x8]
10004fb1:	lea    ecx,[ebp-0x38]
10004fb4:	push   ecx
10004fb5:	mov    ecx,eax
10004fb7:	xor    edx,edx
10004fb9:	sub    ecx,edi
10004fbb:	sar    ecx,0x5
10004fbe:	inc    edx
10004fbf:	sub    edx,ecx
10004fc1:	push   edx
10004fc2:	push   eax
10004fc3:	call   0x1000a6ea
10004fc8:	and    DWORD PTR [ebp-0x4],0x0
10004fcc:	add    DWORD PTR [esi+0x8],0x20
10004fd0:	mov    esi,DWORD PTR [esi+0x8]
10004fd3:	lea    ebx,[esi-0x20]
10004fd6:	cmp    edi,ebx
10004fd8:	mov    esi,edi
10004fda:	je     0x1000506c
10004fe0:	push   0xffffffff
10004fe2:	push   0x0
10004fe4:	lea    eax,[ebp-0x38]
10004fe7:	push   eax
10004fe8:	mov    ecx,esi
10004fea:	call   0x10001241
10004fef:	mov    eax,DWORD PTR [ebp-0x1c]
10004ff2:	mov    DWORD PTR [esi+0x1c],eax
10004ff5:	add    esi,0x20
10004ff8:	cmp    esi,ebx
10004ffa:	jne    0x10004fe0
10004ffc:	jmp    0x1000506c
10004ffe:	mov    eax,DWORD PTR [ebp-0x3c]
10005001:	mov    eax,DWORD PTR [eax+0x8]
10005004:	add    eax,0x20
10005007:	push   eax
10005008:	mov    eax,DWORD PTR [ebp+0xc]
1000500b:	add    eax,0x20
1000500e:	call   0x10004e54
10005013:	jmp    0x10004f83
10005018:	lea    ebx,[eax-0x20]
1000501b:	push   eax
1000501c:	push   eax
1000501d:	mov    ecx,ebx
1000501f:	call   0x10006866
10005024:	mov    DWORD PTR [esi+0x8],eax
10005027:	mov    esi,ebx
10005029:	cmp    edi,esi
1000502b:	je     0x10005047
1000502d:	push   0xffffffff
1000502f:	sub    esi,0x20
10005032:	push   0x0
10005034:	push   esi
10005035:	lea    ecx,[esi+0x20]
10005038:	call   0x10001241
1000503d:	cmp    esi,edi
1000503f:	mov    eax,DWORD PTR [esi+0x1c]
10005042:	mov    DWORD PTR [esi+0x3c],eax
10005045:	jne    0x1000502d
10005047:	lea    ebx,[edi+0x20]
1000504a:	cmp    edi,ebx
1000504c:	mov    esi,edi
1000504e:	je     0x1000506c
10005050:	push   0xffffffff
10005052:	push   0x0
10005054:	lea    eax,[ebp-0x38]
10005057:	push   eax
10005058:	mov    ecx,esi
1000505a:	call   0x10001241
1000505f:	mov    eax,DWORD PTR [ebp-0x1c]
10005062:	mov    DWORD PTR [esi+0x1c],eax
10005065:	add    esi,0x20
10005068:	cmp    esi,ebx
1000506a:	jne    0x10005050
1000506c:	push   0x0
1000506e:	push   0x1
10005070:	lea    ecx,[ebp-0x38]
10005073:	call   0x100012f0
10005078:	call   0x10059ef0
1000507d:	ret    0x8
10005080:	push   ebp
10005081:	mov    ebp,esp
10005083:	sub    esp,0x10
10005086:	test   ecx,ecx
10005088:	ja     0x10005098
1000508a:	xor    ecx,ecx
1000508c:	shl    ecx,0x5
1000508f:	push   ecx
10005090:	call   0x10043196
10005095:	pop    ecx
10005096:	leave  
10005097:	ret    
10005098:	or     eax,0xffffffff
1000509b:	xor    edx,edx
1000509d:	div    ecx
1000509f:	cmp    eax,0x20
100050a2:	jae    0x1000508c
100050a4:	and    DWORD PTR [ebp-0x4],0x0
100050a8:	lea    eax,[ebp-0x4]
100050ab:	push   eax
100050ac:	lea    ecx,[ebp-0x10]
100050af:	call   0x100432d2
100050b4:	push   0x10076460
100050b9:	lea    eax,[ebp-0x10]
100050bc:	push   eax
100050bd:	mov    DWORD PTR [ebp-0x10],0x100675a0
100050c4:	call   0x10047942
100050c9:	int3   
100050ca:	push   ebp
100050cb:	mov    ebp,esp
100050cd:	sub    esp,0x10
100050d0:	test   ecx,ecx
100050d2:	ja     0x100050e2
100050d4:	xor    ecx,ecx
100050d6:	imul   ecx,ecx,0x1c
100050d9:	push   ecx
100050da:	call   0x10043196
100050df:	pop    ecx
100050e0:	leave  
100050e1:	ret    
100050e2:	or     eax,0xffffffff
100050e5:	xor    edx,edx
100050e7:	div    ecx
100050e9:	cmp    eax,0x1c
100050ec:	jae    0x100050d6
100050ee:	and    DWORD PTR [ebp-0x4],0x0
100050f2:	lea    eax,[ebp-0x4]
100050f5:	push   eax
100050f6:	lea    ecx,[ebp-0x10]
100050f9:	call   0x100432d2
100050fe:	push   0x10076460
10005103:	lea    eax,[ebp-0x10]
10005106:	push   eax
10005107:	mov    DWORD PTR [ebp-0x10],0x100675a0
1000510e:	call   0x10047942
10005113:	int3   
10005114:	cmp    DWORD PTR [ecx+0x18],0x10
10005118:	push   edi
10005119:	mov    edi,DWORD PTR [ecx+0x14]
1000511c:	jb     0x10005123
1000511e:	mov    ecx,DWORD PTR [ecx+0x4]
10005121:	jmp    0x10005126
10005123:	add    ecx,0x4
10005126:	push   ecx
10005127:	mov    ecx,DWORD PTR [eax+0x14]
1000512a:	call   0x1000464f
1000512f:	xor    ecx,ecx
10005131:	test   eax,eax
10005133:	setl   cl
10005136:	mov    al,cl
10005138:	pop    edi
10005139:	ret    
1000513a:	push   esi
1000513b:	mov    esi,eax
1000513d:	jmp    0x1000514a
1000513f:	push   0x0
10005141:	push   esi
10005142:	call   0x10006916
10005147:	add    esi,0x1c
1000514a:	cmp    esi,DWORD PTR [esp+0x8]
1000514e:	jne    0x1000513f
10005150:	pop    esi
10005151:	ret    0x4
10005154:	push   ebp
10005155:	mov    ebp,esp
10005157:	and    esp,0xfffffff8
1000515a:	mov    eax,ds:0x10082c90
1000515f:	mov    edx,DWORD PTR [eax]
10005161:	sub    esp,0xc
10005164:	push   esi
10005165:	push   eax
10005166:	mov    ecx,0x10082c8c
1000516b:	mov    esi,ecx
1000516d:	push   esi
1000516e:	push   edx
1000516f:	push   ecx
10005170:	lea    eax,[esp+0x18]
10005174:	push   eax
10005175:	call   0x10005c88
1000517a:	push   DWORD PTR ds:0x10082c90
10005180:	call   0x10042fe2
10005185:	and    DWORD PTR ds:0x10082c90,0x0
1000518c:	and    DWORD PTR ds:0x10082c94,0x0
10005193:	pop    ecx
10005194:	pop    esi
10005195:	mov    esp,ebp
10005197:	pop    ebp
10005198:	ret    
10005199:	push   ebp
1000519a:	mov    ebp,esp
1000519c:	sub    esp,0x14
1000519f:	push   ebx
100051a0:	mov    ebx,eax
100051a2:	xor    eax,eax
100051a4:	cmp    DWORD PTR [ebx+0x8],eax
100051a7:	push   esi
100051a8:	push   edi
100051a9:	mov    DWORD PTR [ebp-0x8],eax
100051ac:	mov    DWORD PTR [ebp-0x4],eax
100051af:	jne    0x100051cb
100051b1:	mov    ecx,DWORD PTR [ebx+0x4]
100051b4:	push   DWORD PTR [ebp+0xc]
100051b7:	push   0x1
100051b9:	mov    esi,ebx
100051bb:	push   DWORD PTR [ebp+0x8]
100051be:	call   0x100057ac
100051c3:	mov    eax,DWORD PTR [ebp+0x8]
100051c6:	jmp    0x10005315
100051cb:	mov    eax,DWORD PTR [ebx+0x4]
100051ce:	mov    eax,DWORD PTR [eax]
100051d0:	lea    edi,[ebp-0x10]
100051d3:	lea    esi,[ebp+0x10]
100051d6:	mov    DWORD PTR [ebp-0xc],eax
100051d9:	mov    DWORD PTR [ebp-0x10],ebx
100051dc:	call   0x10004b0c
100051e1:	test   al,al
100051e3:	je     0x100051ff
100051e5:	mov    esi,DWORD PTR [ebp+0x14]
100051e8:	mov    eax,DWORD PTR [ebp+0xc]
100051eb:	lea    ecx,[esi+0xc]
100051ee:	call   0x10005114
100051f3:	test   al,al
100051f5:	je     0x100052fa
100051fb:	mov    ecx,esi
100051fd:	jmp    0x100051b4
100051ff:	mov    eax,DWORD PTR [ebx+0x4]
10005202:	lea    edi,[ebp-0x10]
10005205:	lea    esi,[ebp+0x10]
10005208:	mov    DWORD PTR [ebp-0xc],eax
1000520b:	mov    DWORD PTR [ebp-0x10],ebx
1000520e:	call   0x10004b0c
10005213:	test   al,al
10005215:	je     0x10005240
10005217:	mov    eax,DWORD PTR [ebx+0x4]
1000521a:	mov    eax,DWORD PTR [eax+0x8]
1000521d:	mov    ecx,DWORD PTR [ebp+0xc]
10005220:	add    eax,0xc
10005223:	call   0x10005114
10005228:	test   al,al
1000522a:	je     0x100052fa
10005230:	push   DWORD PTR [ebp+0xc]
10005233:	mov    eax,DWORD PTR [ebx+0x4]
10005236:	mov    ecx,DWORD PTR [eax+0x8]
10005239:	push   0x0
1000523b:	jmp    0x100051b9
10005240:	mov    edi,DWORD PTR [ebp+0x14]
10005243:	mov    eax,DWORD PTR [ebp+0xc]
10005246:	lea    ecx,[edi+0xc]
10005249:	call   0x10005114
1000524e:	test   al,al
10005250:	je     0x10005296
10005252:	mov    eax,DWORD PTR [ebp+0x10]
10005255:	lea    esi,[ebp-0x8]
10005258:	mov    DWORD PTR [ebp-0x8],eax
1000525b:	mov    DWORD PTR [ebp-0x4],edi
1000525e:	call   0x10005c27
10005263:	mov    eax,DWORD PTR [eax+0x4]
10005266:	mov    ecx,DWORD PTR [ebp+0xc]
10005269:	add    eax,0xc
1000526c:	call   0x10005114
10005271:	test   al,al
10005273:	je     0x10005296
10005275:	mov    ecx,DWORD PTR [ebp-0x4]
10005278:	mov    eax,DWORD PTR [ecx+0x8]
1000527b:	cmp    BYTE PTR [eax+0x45],0x0
1000527f:	push   DWORD PTR [ebp+0xc]
10005282:	mov    esi,ebx
10005284:	je     0x1000528d
10005286:	push   0x0
10005288:	jmp    0x100051bb
1000528d:	push   0x1
1000528f:	mov    ecx,edi
10005291:	jmp    0x100051bb
10005296:	mov    ecx,DWORD PTR [ebp+0xc]
10005299:	lea    eax,[edi+0xc]
1000529c:	call   0x10005114
100052a1:	test   al,al
100052a3:	je     0x100052fa
100052a5:	mov    eax,DWORD PTR [ebp+0x10]
100052a8:	mov    DWORD PTR [ebp-0x8],eax
100052ab:	mov    eax,DWORD PTR [ebx+0x4]
100052ae:	lea    esi,[ebp-0x8]
100052b1:	mov    DWORD PTR [ebp-0x4],edi
100052b4:	mov    DWORD PTR [ebp-0xc],eax
100052b7:	mov    DWORD PTR [ebp-0x10],ebx
100052ba:	call   0x100058f7
100052bf:	lea    edi,[ebp-0x10]
100052c2:	mov    esi,eax
100052c4:	call   0x10004b0c
100052c9:	test   al,al
100052cb:	jne    0x100052df
100052cd:	mov    ecx,DWORD PTR [ebp-0x4]
100052d0:	mov    eax,DWORD PTR [ebp+0xc]
100052d3:	add    ecx,0xc
100052d6:	call   0x10005114
100052db:	test   al,al
100052dd:	je     0x100052fa
100052df:	mov    ecx,DWORD PTR [ebp+0x14]
100052e2:	mov    eax,DWORD PTR [ecx+0x8]
100052e5:	cmp    BYTE PTR [eax+0x45],0x0
100052e9:	push   DWORD PTR [ebp+0xc]
100052ec:	mov    esi,ebx
100052ee:	jne    0x10005286
100052f0:	mov    ecx,DWORD PTR [ebp-0x4]
100052f3:	push   0x1
100052f5:	jmp    0x100051bb
100052fa:	push   DWORD PTR [ebp+0xc]
100052fd:	push   ebx
100052fe:	lea    ebx,[ebp-0x14]
10005301:	call   0x100056eb
10005306:	mov    edx,DWORD PTR [eax]
10005308:	mov    ecx,DWORD PTR [ebp+0x8]
1000530b:	mov    DWORD PTR [ecx],edx
1000530d:	mov    eax,DWORD PTR [eax+0x4]
10005310:	mov    DWORD PTR [ecx+0x4],eax
10005313:	mov    eax,ecx
10005315:	pop    edi
10005316:	pop    esi
10005317:	pop    ebx
10005318:	leave  
10005319:	ret    0x10
1000531c:	push   ebp
1000531d:	mov    ebp,esp
1000531f:	push   ecx
10005320:	mov    eax,DWORD PTR [edi+0x4]
10005323:	push   esi
10005324:	mov    esi,DWORD PTR [eax+0x4]
10005327:	mov    DWORD PTR [ebp-0x4],eax
1000532a:	jmp    0x10005345
1000532c:	mov    ecx,DWORD PTR [ebp+0x8]
1000532f:	lea    eax,[esi+0xc]
10005332:	call   0x10005114
10005337:	test   al,al
10005339:	je     0x10005340
1000533b:	mov    esi,DWORD PTR [esi+0x8]
1000533e:	jmp    0x10005345
10005340:	mov    DWORD PTR [ebp-0x4],esi
10005343:	mov    esi,DWORD PTR [esi]
10005345:	cmp    BYTE PTR [esi+0x45],0x0
10005349:	je     0x1000532c
1000534b:	mov    eax,DWORD PTR [ebp-0x4]
1000534e:	mov    DWORD PTR [ebx+0x4],eax
10005351:	mov    DWORD PTR [ebx],edi
10005353:	mov    eax,ebx
10005355:	pop    esi
10005356:	leave  
10005357:	ret    0x4
1000535a:	push   ebp
1000535b:	mov    ebp,esp
1000535d:	push   esi
1000535e:	mov    esi,eax
10005360:	cmp    DWORD PTR [esi+0x14],ebx
10005363:	push   edi
10005364:	jae    0x1000536b
10005366:	call   0x100574ef
1000536b:	mov    edi,DWORD PTR [esi+0x14]
1000536e:	sub    edi,ebx
10005370:	cmp    DWORD PTR [ebp+0xc],edi
10005373:	jae    0x10005378
10005375:	mov    edi,DWORD PTR [ebp+0xc]
10005378:	mov    eax,DWORD PTR [ebp+0x8]
1000537b:	cmp    eax,esi
1000537d:	jne    0x10005394
1000537f:	push   0xffffffff
10005381:	add    edi,ebx
10005383:	mov    esi,eax
10005385:	call   0x10005944
1000538a:	push   ebx
1000538b:	xor    edi,edi
1000538d:	call   0x10005944
10005392:	jmp    0x100053d7
10005394:	call   0x100059d6
10005399:	test   al,al
1000539b:	je     0x100053d7
1000539d:	cmp    DWORD PTR [esi+0x18],0x8
100053a1:	jb     0x100053a8
100053a3:	mov    eax,DWORD PTR [esi+0x4]
100053a6:	jmp    0x100053ab
100053a8:	lea    eax,[esi+0x4]
100053ab:	mov    esi,DWORD PTR [ebp+0x8]
100053ae:	mov    edx,DWORD PTR [esi+0x18]
100053b1:	cmp    edx,0x8
100053b4:	jb     0x100053bb
100053b6:	mov    ecx,DWORD PTR [esi+0x4]
100053b9:	jmp    0x100053be
100053bb:	lea    ecx,[esi+0x4]
100053be:	lea    eax,[eax+ebx*2]
100053c1:	push   eax
100053c2:	push   edx
100053c3:	push   ecx
100053c4:	mov    eax,edi
100053c6:	call   0x10006847
100053cb:	add    esp,0xc
100053ce:	mov    ecx,edi
100053d0:	mov    eax,esi
100053d2:	call   0x100059bf
100053d7:	mov    eax,DWORD PTR [ebp+0x8]
100053da:	pop    edi
100053db:	pop    esi
100053dc:	pop    ebp
100053dd:	ret    0x8
100053e0:	mov    ecx,DWORD PTR [esi+0x18]
100053e3:	cmp    ecx,0x8
100053e6:	push   ebx
100053e7:	push   edi
100053e8:	mov    edi,eax
100053ea:	lea    ebx,[esi+0x4]
100053ed:	jb     0x100053f3
100053ef:	mov    eax,DWORD PTR [ebx]
100053f1:	jmp    0x100053f5
100053f3:	mov    eax,ebx
100053f5:	cmp    DWORD PTR [esp+0xc],eax
100053f9:	jb     0x10005430
100053fb:	cmp    ecx,0x8
100053fe:	jb     0x10005404
10005400:	mov    eax,DWORD PTR [ebx]
10005402:	jmp    0x10005406
10005404:	mov    eax,ebx
10005406:	mov    edx,DWORD PTR [esi+0x14]
10005409:	lea    eax,[eax+edx*2]
1000540c:	cmp    eax,DWORD PTR [esp+0xc]
10005410:	jbe    0x10005430
10005412:	cmp    ecx,0x8
10005415:	jb     0x1000541b
10005417:	mov    eax,DWORD PTR [ebx]
10005419:	jmp    0x1000541d
1000541b:	mov    eax,ebx
1000541d:	mov    ebx,DWORD PTR [esp+0xc]
10005421:	sub    ebx,eax
10005423:	push   edi
10005424:	sar    ebx,1
10005426:	push   esi
10005427:	mov    eax,esi
10005429:	call   0x1000535a
1000542e:	jmp    0x10005460
10005430:	mov    eax,esi
10005432:	call   0x100059d6
10005437:	test   al,al
10005439:	je     0x1000545e
1000543b:	mov    eax,DWORD PTR [esi+0x18]
1000543e:	cmp    eax,0x8
10005441:	jb     0x10005445
10005443:	mov    ebx,DWORD PTR [ebx]
10005445:	push   DWORD PTR [esp+0xc]
10005449:	push   eax
1000544a:	push   ebx
1000544b:	mov    eax,edi
1000544d:	call   0x10006847
10005452:	add    esp,0xc
10005455:	mov    ecx,edi
10005457:	mov    eax,esi
10005459:	call   0x100059bf
1000545e:	mov    eax,esi
10005460:	pop    edi
10005461:	pop    ebx
10005462:	ret    0x4
10005465:	cmp    BYTE PTR [esp+0x4],0x0
1000546a:	je     0x10005494
1000546c:	cmp    DWORD PTR [esi+0x18],0x8
10005470:	jb     0x10005494
10005472:	test   ebx,ebx
10005474:	lea    eax,[esi+0x4]
10005477:	push   edi
10005478:	mov    edi,DWORD PTR [eax]
1000547a:	jbe    0x1000548c
1000547c:	lea    ecx,[ebx+ebx*1]
1000547f:	push   ecx
10005480:	push   edi
10005481:	push   0x10
10005483:	push   eax
10005484:	call   0x100433cf
10005489:	add    esp,0x10
1000548c:	push   edi
1000548d:	call   0x10042fe2
10005492:	pop    ecx
10005493:	pop    edi
10005494:	mov    ecx,ebx
10005496:	mov    eax,esi
10005498:	mov    DWORD PTR [esi+0x18],0x7
1000549f:	call   0x100059bf
100054a4:	ret    0x4
100054a7:	push   ebp
100054a8:	mov    ebp,esp
100054aa:	and    esp,0xfffffff8
100054ad:	mov    eax,ds:0x10082c80
100054b2:	mov    edx,DWORD PTR [eax]
100054b4:	sub    esp,0xc
100054b7:	push   esi
100054b8:	push   eax
100054b9:	mov    ecx,0x10082c7c
100054be:	mov    esi,ecx
100054c0:	push   esi
100054c1:	push   edx
100054c2:	push   ecx
100054c3:	lea    eax,[esp+0x18]
100054c7:	push   eax
100054c8:	call   0x10005eb5
100054cd:	push   DWORD PTR ds:0x10082c80
100054d3:	call   0x10042fe2
100054d8:	and    DWORD PTR ds:0x10082c80,0x0
100054df:	and    DWORD PTR ds:0x10082c84,0x0
100054e6:	pop    ecx
100054e7:	pop    esi
100054e8:	mov    esp,ebp
100054ea:	pop    ebp
100054eb:	ret    
100054ec:	push   ebp
100054ed:	mov    ebp,esp
100054ef:	sub    esp,0x14
100054f2:	push   ebx
100054f3:	mov    ebx,eax
100054f5:	xor    eax,eax
100054f7:	cmp    DWORD PTR [ebx+0x8],eax
100054fa:	push   esi
100054fb:	push   edi
100054fc:	mov    DWORD PTR [ebp-0x8],eax
100054ff:	mov    DWORD PTR [ebp-0x4],eax
10005502:	jne    0x1000551e
10005504:	mov    ecx,DWORD PTR [ebx+0x4]
10005507:	push   DWORD PTR [ebp+0xc]
1000550a:	push   0x1
1000550c:	mov    esi,ebx
1000550e:	push   DWORD PTR [ebp+0x8]
10005511:	call   0x10005adc
10005516:	mov    eax,DWORD PTR [ebp+0x8]
10005519:	jmp    0x10005668
1000551e:	mov    eax,DWORD PTR [ebx+0x4]
10005521:	mov    eax,DWORD PTR [eax]
10005523:	lea    edi,[ebp-0x10]
10005526:	lea    esi,[ebp+0x10]
10005529:	mov    DWORD PTR [ebp-0xc],eax
1000552c:	mov    DWORD PTR [ebp-0x10],ebx
1000552f:	call   0x10004b0c
10005534:	test   al,al
10005536:	je     0x10005552
10005538:	mov    esi,DWORD PTR [ebp+0x14]
1000553b:	mov    eax,DWORD PTR [ebp+0xc]
1000553e:	lea    ecx,[esi+0xc]
10005541:	call   0x100056ad
10005546:	test   al,al
10005548:	je     0x1000564d
1000554e:	mov    ecx,esi
10005550:	jmp    0x10005507
10005552:	mov    eax,DWORD PTR [ebx+0x4]
10005555:	lea    edi,[ebp-0x10]
10005558:	lea    esi,[ebp+0x10]
1000555b:	mov    DWORD PTR [ebp-0xc],eax
1000555e:	mov    DWORD PTR [ebp-0x10],ebx
10005561:	call   0x10004b0c
10005566:	test   al,al
10005568:	je     0x10005593
1000556a:	mov    eax,DWORD PTR [ebx+0x4]
1000556d:	mov    eax,DWORD PTR [eax+0x8]
10005570:	mov    ecx,DWORD PTR [ebp+0xc]
10005573:	add    eax,0xc
10005576:	call   0x100056ad
1000557b:	test   al,al
1000557d:	je     0x1000564d
10005583:	push   DWORD PTR [ebp+0xc]
10005586:	mov    eax,DWORD PTR [ebx+0x4]
10005589:	mov    ecx,DWORD PTR [eax+0x8]
1000558c:	push   0x0
1000558e:	jmp    0x1000550c
10005593:	mov    edi,DWORD PTR [ebp+0x14]
10005596:	mov    eax,DWORD PTR [ebp+0xc]
10005599:	lea    ecx,[edi+0xc]
1000559c:	call   0x100056ad
100055a1:	test   al,al
100055a3:	je     0x100055e9
100055a5:	mov    eax,DWORD PTR [ebp+0x10]
100055a8:	lea    esi,[ebp-0x8]
100055ab:	mov    DWORD PTR [ebp-0x8],eax
100055ae:	mov    DWORD PTR [ebp-0x4],edi
100055b1:	call   0x10005c27
100055b6:	mov    eax,DWORD PTR [eax+0x4]
100055b9:	mov    ecx,DWORD PTR [ebp+0xc]
100055bc:	add    eax,0xc
100055bf:	call   0x100056ad
100055c4:	test   al,al
100055c6:	je     0x100055e9
100055c8:	mov    ecx,DWORD PTR [ebp-0x4]
100055cb:	mov    eax,DWORD PTR [ecx+0x8]
100055ce:	cmp    BYTE PTR [eax+0x45],0x0
100055d2:	push   DWORD PTR [ebp+0xc]
100055d5:	mov    esi,ebx
100055d7:	je     0x100055e0
100055d9:	push   0x0
100055db:	jmp    0x1000550e
100055e0:	push   0x1
100055e2:	mov    ecx,edi
100055e4:	jmp    0x1000550e
100055e9:	mov    ecx,DWORD PTR [ebp+0xc]
100055ec:	lea    eax,[edi+0xc]
100055ef:	call   0x100056ad
100055f4:	test   al,al
100055f6:	je     0x1000564d
100055f8:	mov    eax,DWORD PTR [ebp+0x10]
100055fb:	mov    DWORD PTR [ebp-0x8],eax
100055fe:	mov    eax,DWORD PTR [ebx+0x4]
10005601:	lea    esi,[ebp-0x8]
10005604:	mov    DWORD PTR [ebp-0x4],edi
10005607:	mov    DWORD PTR [ebp-0xc],eax
1000560a:	mov    DWORD PTR [ebp-0x10],ebx
1000560d:	call   0x100058f7
10005612:	lea    edi,[ebp-0x10]
10005615:	mov    esi,eax
10005617:	call   0x10004b0c
1000561c:	test   al,al
1000561e:	jne    0x10005632
10005620:	mov    ecx,DWORD PTR [ebp-0x4]
10005623:	mov    eax,DWORD PTR [ebp+0xc]
10005626:	add    ecx,0xc
10005629:	call   0x100056ad
1000562e:	test   al,al
10005630:	je     0x1000564d
10005632:	mov    ecx,DWORD PTR [ebp+0x14]
10005635:	mov    eax,DWORD PTR [ecx+0x8]
10005638:	cmp    BYTE PTR [eax+0x45],0x0
1000563c:	push   DWORD PTR [ebp+0xc]
1000563f:	mov    esi,ebx
10005641:	jne    0x100055d9
10005643:	mov    ecx,DWORD PTR [ebp-0x4]
10005646:	push   0x1
10005648:	jmp    0x1000550e
1000564d:	push   DWORD PTR [ebp+0xc]
10005650:	push   ebx
10005651:	lea    ebx,[ebp-0x14]
10005654:	call   0x10005a1b
10005659:	mov    edx,DWORD PTR [eax]
1000565b:	mov    ecx,DWORD PTR [ebp+0x8]
1000565e:	mov    DWORD PTR [ecx],edx
10005660:	mov    eax,DWORD PTR [eax+0x4]
10005663:	mov    DWORD PTR [ecx+0x4],eax
10005666:	mov    eax,ecx
10005668:	pop    edi
10005669:	pop    esi
1000566a:	pop    ebx
1000566b:	leave  
1000566c:	ret    0x10
1000566f:	push   ebp
10005670:	mov    ebp,esp
10005672:	push   ecx
10005673:	mov    eax,DWORD PTR [edi+0x4]
10005676:	push   esi
10005677:	mov    esi,DWORD PTR [eax+0x4]
1000567a:	mov    DWORD PTR [ebp-0x4],eax
1000567d:	jmp    0x10005698
1000567f:	mov    ecx,DWORD PTR [ebp+0x8]
10005682:	lea    eax,[esi+0xc]
10005685:	call   0x100056ad
1000568a:	test   al,al
1000568c:	je     0x10005693
1000568e:	mov    esi,DWORD PTR [esi+0x8]
10005691:	jmp    0x10005698
10005693:	mov    DWORD PTR [ebp-0x4],esi
10005696:	mov    esi,DWORD PTR [esi]
10005698:	cmp    BYTE PTR [esi+0x45],0x0
1000569c:	je     0x1000567f
1000569e:	mov    eax,DWORD PTR [ebp-0x4]
100056a1:	mov    DWORD PTR [ebx+0x4],eax
100056a4:	mov    DWORD PTR [ebx],edi
100056a6:	mov    eax,ebx
100056a8:	pop    esi
100056a9:	leave  
100056aa:	ret    0x4
100056ad:	cmp    DWORD PTR [ecx+0x18],0x8
100056b1:	push   edi
100056b2:	mov    edi,DWORD PTR [ecx+0x14]
100056b5:	jb     0x100056bc
100056b7:	mov    ecx,DWORD PTR [ecx+0x4]
100056ba:	jmp    0x100056bf
100056bc:	add    ecx,0x4
100056bf:	push   ecx
100056c0:	mov    ecx,DWORD PTR [eax+0x14]
100056c3:	call   0x1000688a
100056c8:	xor    ecx,ecx
100056ca:	test   eax,eax
100056cc:	setl   cl
100056cf:	mov    al,cl
100056d1:	pop    edi
100056d2:	ret    
100056d3:	push   esi
100056d4:	push   DWORD PTR [esp+0x8]
100056d8:	mov    esi,ecx
100056da:	call   0x1000112a
100056df:	mov    DWORD PTR [esi],0x1006c97c
100056e5:	mov    eax,esi
100056e7:	pop    esi
100056e8:	ret    0x4
100056eb:	push   ebp
100056ec:	mov    ebp,esp
100056ee:	sub    esp,0x18
100056f1:	push   esi
100056f2:	mov    esi,DWORD PTR [ebp+0x8]
100056f5:	mov    eax,DWORD PTR [esi+0x4]
100056f8:	push   edi
100056f9:	mov    edi,DWORD PTR [eax+0x4]
100056fc:	mov    DWORD PTR [ebp-0x4],eax
100056ff:	mov    al,0x1
10005701:	mov    BYTE PTR [ebp-0x8],al
10005704:	jmp    0x10005722
10005706:	mov    eax,DWORD PTR [ebp+0xc]
10005709:	lea    ecx,[edi+0xc]
1000570c:	mov    DWORD PTR [ebp-0x4],edi
1000570f:	call   0x10005114
10005714:	test   al,al
10005716:	mov    BYTE PTR [ebp-0x8],al
10005719:	je     0x1000571f
1000571b:	mov    edi,DWORD PTR [edi]
1000571d:	jmp    0x10005722
1000571f:	mov    edi,DWORD PTR [edi+0x8]
10005722:	cmp    BYTE PTR [edi+0x45],0x0
10005726:	je     0x10005706
10005728:	test   al,al
1000572a:	mov    edi,DWORD PTR [ebp-0x4]
1000572d:	mov    DWORD PTR [ebp-0xc],edi
10005730:	mov    DWORD PTR [ebp-0x10],esi
10005733:	je     0x10005781
10005735:	mov    eax,DWORD PTR [esi+0x4]
10005738:	mov    eax,DWORD PTR [eax]
1000573a:	mov    DWORD PTR [ebp-0x18],esi
1000573d:	lea    edi,[ebp-0x18]
10005740:	lea    esi,[ebp-0x10]
10005743:	mov    DWORD PTR [ebp-0x14],eax
10005746:	call   0x10004b0c
1000574b:	test   al,al
1000574d:	je     0x10005773
1000574f:	push   DWORD PTR [ebp+0xc]
10005752:	mov    esi,DWORD PTR [ebp+0x8]
10005755:	push   0x1
10005757:	mov    ecx,DWORD PTR [ebp-0x4]
1000575a:	lea    eax,[ebp-0x18]
1000575d:	push   eax
1000575e:	call   0x100057ac
10005763:	mov    ecx,DWORD PTR [eax]
10005765:	mov    eax,DWORD PTR [eax+0x4]
10005768:	mov    DWORD PTR [ebx],ecx
1000576a:	mov    DWORD PTR [ebx+0x4],eax
1000576d:	mov    BYTE PTR [ebx+0x8],0x1
10005771:	jmp    0x100057a4
10005773:	lea    esi,[ebp-0x10]
10005776:	call   0x10005c27
1000577b:	mov    edi,DWORD PTR [ebp-0xc]
1000577e:	mov    esi,DWORD PTR [ebp+0x8]
10005781:	mov    ecx,DWORD PTR [ebp+0xc]
10005784:	lea    eax,[edi+0xc]
10005787:	call   0x10005114
1000578c:	test   al,al
1000578e:	je     0x10005798
10005790:	push   DWORD PTR [ebp+0xc]
10005793:	push   DWORD PTR [ebp-0x8]
10005796:	jmp    0x10005757
10005798:	mov    eax,DWORD PTR [ebp-0x10]
1000579b:	mov    DWORD PTR [ebx],eax
1000579d:	mov    DWORD PTR [ebx+0x4],edi
100057a0:	mov    BYTE PTR [ebx+0x8],0x0
100057a4:	pop    edi
100057a5:	mov    eax,ebx
100057a7:	pop    esi
100057a8:	leave  
100057a9:	ret    0x8
100057ac:	push   0x48
100057ae:	mov    eax,0x100607fe
100057b3:	call   0x10059df5
100057b8:	mov    edi,ecx
100057ba:	cmp    DWORD PTR [esi+0x8],0x4924923
100057c1:	jb     0x100057f5
100057c3:	push   0x1006e0f8
100057c8:	lea    ecx,[ebp-0x2c]
100057cb:	call   0x100011a7
100057d0:	and    DWORD PTR [ebp-0x4],0x0
100057d4:	lea    eax,[ebp-0x2c]
100057d7:	push   eax
100057d8:	lea    ecx,[ebp-0x54]
100057db:	call   0x10001077
100057e0:	push   0x100764d0
100057e5:	lea    eax,[ebp-0x54]
100057e8:	push   eax
100057e9:	mov    DWORD PTR [ebp-0x54],0x1006c97c
100057f0:	call   0x10047942
100057f5:	push   DWORD PTR [ebp+0x10]
100057f8:	mov    eax,DWORD PTR [esi+0x4]
100057fb:	push   eax
100057fc:	push   edi
100057fd:	push   eax
100057fe:	call   0x10005d86
10005803:	inc    DWORD PTR [esi+0x8]
10005806:	mov    ebx,eax
10005808:	mov    eax,DWORD PTR [esi+0x4]
1000580b:	cmp    edi,eax
1000580d:	jne    0x1000581c
1000580f:	mov    DWORD PTR [eax+0x4],ebx
10005812:	mov    eax,DWORD PTR [esi+0x4]
10005815:	mov    DWORD PTR [eax],ebx
10005817:	mov    eax,DWORD PTR [esi+0x4]
1000581a:	jmp    0x1000583a
1000581c:	cmp    BYTE PTR [ebp+0xc],0x0
10005820:	je     0x1000582f
10005822:	mov    DWORD PTR [edi],ebx
10005824:	mov    eax,DWORD PTR [esi+0x4]
10005827:	cmp    edi,DWORD PTR [eax]
10005829:	jne    0x1000583d
1000582b:	mov    DWORD PTR [eax],ebx
1000582d:	jmp    0x1000583d
1000582f:	mov    DWORD PTR [edi+0x8],ebx
10005832:	mov    eax,DWORD PTR [esi+0x4]
10005835:	cmp    edi,DWORD PTR [eax+0x8]
10005838:	jne    0x1000583d
1000583a:	mov    DWORD PTR [eax+0x8],ebx
1000583d:	mov    edi,ebx
1000583f:	lea    eax,[ebx+0x4]
10005842:	jmp    0x100058d1
10005847:	mov    ecx,DWORD PTR [eax]
10005849:	mov    edx,DWORD PTR [ecx+0x4]
1000584c:	cmp    ecx,DWORD PTR [edx]
1000584e:	jne    0x10005885
10005850:	mov    edx,DWORD PTR [edx+0x8]
10005853:	cmp    BYTE PTR [edx+0x44],0x0
10005857:	je     0x1000588d
10005859:	cmp    edi,DWORD PTR [ecx+0x8]
1000585c:	jne    0x10005866
1000585e:	push   esi
1000585f:	mov    edi,ecx
10005861:	call   0x10005f71
10005866:	mov    eax,DWORD PTR [edi+0x4]
10005869:	mov    BYTE PTR [eax+0x44],0x1
1000586d:	mov    eax,DWORD PTR [edi+0x4]
10005870:	mov    eax,DWORD PTR [eax+0x4]
10005873:	mov    BYTE PTR [eax+0x44],0x0
10005877:	mov    eax,DWORD PTR [edi+0x4]
1000587a:	mov    ecx,DWORD PTR [eax+0x4]
1000587d:	push   esi
1000587e:	call   0x10005d44
10005883:	jmp    0x100058ce
10005885:	mov    edx,DWORD PTR [edx]
10005887:	cmp    BYTE PTR [edx+0x44],0x0
1000588b:	jne    0x100058a5
1000588d:	mov    BYTE PTR [ecx+0x44],0x1
10005891:	mov    BYTE PTR [edx+0x44],0x1
10005895:	mov    ecx,DWORD PTR [eax]
10005897:	mov    ecx,DWORD PTR [ecx+0x4]
1000589a:	mov    BYTE PTR [ecx+0x44],0x0
1000589e:	mov    eax,DWORD PTR [eax]
100058a0:	mov    edi,DWORD PTR [eax+0x4]
100058a3:	jmp    0x100058ce
100058a5:	cmp    edi,DWORD PTR [ecx]
100058a7:	jne    0x100058b1
100058a9:	push   esi
100058aa:	mov    edi,ecx
100058ac:	call   0x10005d44
100058b1:	mov    eax,DWORD PTR [edi+0x4]
100058b4:	mov    BYTE PTR [eax+0x44],0x1
100058b8:	mov    eax,DWORD PTR [edi+0x4]
100058bb:	mov    eax,DWORD PTR [eax+0x4]
100058be:	mov    BYTE PTR [eax+0x44],0x0
100058c2:	mov    eax,DWORD PTR [edi+0x4]
100058c5:	mov    ecx,DWORD PTR [eax+0x4]
100058c8:	push   esi
100058c9:	call   0x10005f71
100058ce:	lea    eax,[edi+0x4]
100058d1:	mov    ecx,DWORD PTR [eax]
100058d3:	cmp    BYTE PTR [ecx+0x44],0x0
100058d7:	je     0x10005847
100058dd:	mov    eax,DWORD PTR [esi+0x4]
100058e0:	mov    eax,DWORD PTR [eax+0x4]
100058e3:	mov    BYTE PTR [eax+0x44],0x1
100058e7:	mov    eax,DWORD PTR [ebp+0x8]
100058ea:	mov    DWORD PTR [eax+0x4],ebx
100058ed:	mov    DWORD PTR [eax],esi
100058ef:	call   0x10059ecd
100058f4:	ret    0xc
100058f7:	push   ebx
100058f8:	xor    ebx,ebx
100058fa:	cmp    DWORD PTR [esi],ebx
100058fc:	jne    0x10005903
100058fe:	call   0x10043605
10005903:	mov    eax,DWORD PTR [esi+0x4]
10005906:	cmp    BYTE PTR [eax+0x45],bl
10005909:	je     0x10005912
1000590b:	call   0x10043605
10005910:	jmp    0x10005940
10005912:	mov    ecx,DWORD PTR [eax+0x8]
10005915:	cmp    BYTE PTR [ecx+0x45],bl
10005918:	jne    0x10005935
1000591a:	jmp    0x1000591e
1000591c:	mov    ecx,eax
1000591e:	mov    eax,DWORD PTR [ecx]
10005920:	cmp    BYTE PTR [eax+0x45],bl
10005923:	je     0x1000591c
10005925:	mov    DWORD PTR [esi+0x4],ecx
10005928:	jmp    0x10005940
1000592a:	mov    ecx,DWORD PTR [esi+0x4]
1000592d:	cmp    ecx,DWORD PTR [eax+0x8]
10005930:	jne    0x1000593d
10005932:	mov    DWORD PTR [esi+0x4],eax
10005935:	mov    eax,DWORD PTR [eax+0x4]
10005938:	cmp    BYTE PTR [eax+0x45],bl
1000593b:	je     0x1000592a
1000593d:	mov    DWORD PTR [esi+0x4],eax
10005940:	mov    eax,esi
10005942:	pop    ebx
10005943:	ret    
10005944:	push   ebp
10005945:	mov    ebp,esp
10005947:	push   ecx
10005948:	push   ecx
10005949:	cmp    DWORD PTR [esi+0x14],edi
1000594c:	jae    0x10005953
1000594e:	call   0x100574ef
10005953:	mov    eax,DWORD PTR [esi+0x14]
10005956:	sub    eax,edi
10005958:	cmp    eax,DWORD PTR [ebp+0x8]
1000595b:	jae    0x10005960
1000595d:	mov    DWORD PTR [ebp+0x8],eax
10005960:	cmp    DWORD PTR [ebp+0x8],0x0
10005964:	jbe    0x100059b9
10005966:	mov    ecx,DWORD PTR [esi+0x18]
10005969:	cmp    ecx,0x8
1000596c:	push   ebx
1000596d:	lea    edx,[esi+0x4]
10005970:	jb     0x10005979
10005972:	mov    ebx,DWORD PTR [edx]
10005974:	mov    DWORD PTR [ebp-0x4],ebx
10005977:	jmp    0x1000597c
10005979:	mov    DWORD PTR [ebp-0x4],edx
1000597c:	cmp    ecx,0x8
1000597f:	jb     0x10005983
10005981:	mov    edx,DWORD PTR [edx]
10005983:	mov    ebx,DWORD PTR [ebp+0x8]
10005986:	sub    eax,ebx
10005988:	add    eax,eax
1000598a:	push   eax
1000598b:	mov    DWORD PTR [ebp-0x8],edx
1000598e:	mov    edx,DWORD PTR [ebp-0x4]
10005991:	lea    eax,[edi+ebx*1]
10005994:	lea    eax,[edx+eax*2]
10005997:	push   eax
10005998:	mov    eax,DWORD PTR [ebp-0x8]
1000599b:	sub    ecx,edi
1000599d:	add    ecx,ecx
1000599f:	push   ecx
100059a0:	lea    eax,[eax+edi*2]
100059a3:	push   eax
100059a4:	call   0x10042fe7
100059a9:	mov    ecx,DWORD PTR [esi+0x14]
100059ac:	add    esp,0x10
100059af:	sub    ecx,ebx
100059b1:	mov    eax,esi
100059b3:	call   0x100059bf
100059b8:	pop    ebx
100059b9:	mov    eax,esi
100059bb:	leave  
100059bc:	ret    0x4
100059bf:	cmp    DWORD PTR [eax+0x18],0x8
100059c3:	mov    DWORD PTR [eax+0x14],ecx
100059c6:	jb     0x100059cd
100059c8:	mov    eax,DWORD PTR [eax+0x4]
100059cb:	jmp    0x100059d0
100059cd:	add    eax,0x4
100059d0:	and    WORD PTR [eax+ecx*2],0x0
100059d5:	ret    
100059d6:	cmp    edi,0x7ffffffe
100059dc:	push   esi
100059dd:	mov    esi,eax
100059df:	jbe    0x100059e6
100059e1:	call   0x100574b0
100059e6:	mov    eax,DWORD PTR [esi+0x18]
100059e9:	cmp    eax,edi
100059eb:	jae    0x100059f9
100059ed:	push   DWORD PTR [esi+0x14]
100059f0:	push   edi
100059f1:	push   esi
100059f2:	call   0x10005dd8
100059f7:	jmp    0x10005a11
100059f9:	test   edi,edi
100059fb:	jne    0x10005a11
100059fd:	and    DWORD PTR [esi+0x14],edi
10005a00:	cmp    eax,0x8
10005a03:	jb     0x10005a0a
10005a05:	mov    esi,DWORD PTR [esi+0x4]
10005a08:	jmp    0x10005a0d
10005a0a:	add    esi,0x4
10005a0d:	and    WORD PTR [esi],0x0
10005a11:	xor    eax,eax
10005a13:	cmp    eax,edi
10005a15:	sbb    eax,eax
10005a17:	neg    eax
10005a19:	pop    esi
10005a1a:	ret    
10005a1b:	push   ebp
10005a1c:	mov    ebp,esp
10005a1e:	sub    esp,0x18
10005a21:	push   esi
10005a22:	mov    esi,DWORD PTR [ebp+0x8]
10005a25:	mov    eax,DWORD PTR [esi+0x4]
10005a28:	push   edi
10005a29:	mov    edi,DWORD PTR [eax+0x4]
10005a2c:	mov    DWORD PTR [ebp-0x4],eax
10005a2f:	mov    al,0x1
10005a31:	mov    BYTE PTR [ebp-0x8],al
10005a34:	jmp    0x10005a52
10005a36:	mov    eax,DWORD PTR [ebp+0xc]
10005a39:	lea    ecx,[edi+0xc]
10005a3c:	mov    DWORD PTR [ebp-0x4],edi
10005a3f:	call   0x100056ad
10005a44:	test   al,al
10005a46:	mov    BYTE PTR [ebp-0x8],al
10005a49:	je     0x10005a4f
10005a4b:	mov    edi,DWORD PTR [edi]
10005a4d:	jmp    0x10005a52
10005a4f:	mov    edi,DWORD PTR [edi+0x8]
10005a52:	cmp    BYTE PTR [edi+0x45],0x0
10005a56:	je     0x10005a36
10005a58:	test   al,al
10005a5a:	mov    edi,DWORD PTR [ebp-0x4]
10005a5d:	mov    DWORD PTR [ebp-0xc],edi
10005a60:	mov    DWORD PTR [ebp-0x10],esi
10005a63:	je     0x10005ab1
10005a65:	mov    eax,DWORD PTR [esi+0x4]
10005a68:	mov    eax,DWORD PTR [eax]
10005a6a:	mov    DWORD PTR [ebp-0x18],esi
10005a6d:	lea    edi,[ebp-0x18]
10005a70:	lea    esi,[ebp-0x10]
10005a73:	mov    DWORD PTR [ebp-0x14],eax
10005a76:	call   0x10004b0c
10005a7b:	test   al,al
10005a7d:	je     0x10005aa3
10005a7f:	push   DWORD PTR [ebp+0xc]
10005a82:	mov    esi,DWORD PTR [ebp+0x8]
10005a85:	push   0x1
10005a87:	mov    ecx,DWORD PTR [ebp-0x4]
10005a8a:	lea    eax,[ebp-0x18]
10005a8d:	push   eax
10005a8e:	call   0x10005adc
10005a93:	mov    ecx,DWORD PTR [eax]
10005a95:	mov    eax,DWORD PTR [eax+0x4]
10005a98:	mov    DWORD PTR [ebx],ecx
10005a9a:	mov    DWORD PTR [ebx+0x4],eax
10005a9d:	mov    BYTE PTR [ebx+0x8],0x1
10005aa1:	jmp    0x10005ad4
10005aa3:	lea    esi,[ebp-0x10]
10005aa6:	call   0x10005c27
10005aab:	mov    edi,DWORD PTR [ebp-0xc]
10005aae:	mov    esi,DWORD PTR [ebp+0x8]
10005ab1:	mov    ecx,DWORD PTR [ebp+0xc]
10005ab4:	lea    eax,[edi+0xc]
10005ab7:	call   0x100056ad
10005abc:	test   al,al
10005abe:	je     0x10005ac8
10005ac0:	push   DWORD PTR [ebp+0xc]
10005ac3:	push   DWORD PTR [ebp-0x8]
10005ac6:	jmp    0x10005a87
10005ac8:	mov    eax,DWORD PTR [ebp-0x10]
10005acb:	mov    DWORD PTR [ebx],eax
10005acd:	mov    DWORD PTR [ebx+0x4],edi
10005ad0:	mov    BYTE PTR [ebx+0x8],0x0
10005ad4:	pop    edi
10005ad5:	mov    eax,ebx
10005ad7:	pop    esi
10005ad8:	leave  
10005ad9:	ret    0x8
10005adc:	push   0x48
10005ade:	mov    eax,0x100607fe
10005ae3:	call   0x10059df5
10005ae8:	mov    edi,ecx
10005aea:	cmp    DWORD PTR [esi+0x8],0x4924923
10005af1:	jb     0x10005b25
10005af3:	push   0x1006e0f8
10005af8:	lea    ecx,[ebp-0x2c]
10005afb:	call   0x100011a7
10005b00:	and    DWORD PTR [ebp-0x4],0x0
10005b04:	lea    eax,[ebp-0x2c]
10005b07:	push   eax
10005b08:	lea    ecx,[ebp-0x54]
10005b0b:	call   0x10001077
10005b10:	push   0x100764d0
10005b15:	lea    eax,[ebp-0x54]
10005b18:	push   eax
10005b19:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10005b20:	call   0x10047942
10005b25:	push   DWORD PTR [ebp+0x10]
10005b28:	mov    eax,DWORD PTR [esi+0x4]
10005b2b:	push   eax
10005b2c:	push   edi
10005b2d:	push   eax
10005b2e:	call   0x10005fb1
10005b33:	inc    DWORD PTR [esi+0x8]
10005b36:	mov    ebx,eax
10005b38:	mov    eax,DWORD PTR [esi+0x4]
10005b3b:	cmp    edi,eax
10005b3d:	jne    0x10005b4c
10005b3f:	mov    DWORD PTR [eax+0x4],ebx
10005b42:	mov    eax,DWORD PTR [esi+0x4]
10005b45:	mov    DWORD PTR [eax],ebx
10005b47:	mov    eax,DWORD PTR [esi+0x4]
10005b4a:	jmp    0x10005b6a
10005b4c:	cmp    BYTE PTR [ebp+0xc],0x0
10005b50:	je     0x10005b5f
10005b52:	mov    DWORD PTR [edi],ebx
10005b54:	mov    eax,DWORD PTR [esi+0x4]
10005b57:	cmp    edi,DWORD PTR [eax]
10005b59:	jne    0x10005b6d
10005b5b:	mov    DWORD PTR [eax],ebx
10005b5d:	jmp    0x10005b6d
10005b5f:	mov    DWORD PTR [edi+0x8],ebx
10005b62:	mov    eax,DWORD PTR [esi+0x4]
10005b65:	cmp    edi,DWORD PTR [eax+0x8]
10005b68:	jne    0x10005b6d
10005b6a:	mov    DWORD PTR [eax+0x8],ebx
10005b6d:	mov    edi,ebx
10005b6f:	lea    eax,[ebx+0x4]
10005b72:	jmp    0x10005c01
10005b77:	mov    ecx,DWORD PTR [eax]
10005b79:	mov    edx,DWORD PTR [ecx+0x4]
10005b7c:	cmp    ecx,DWORD PTR [edx]
10005b7e:	jne    0x10005bb5
10005b80:	mov    edx,DWORD PTR [edx+0x8]
10005b83:	cmp    BYTE PTR [edx+0x44],0x0
10005b87:	je     0x10005bbd
10005b89:	cmp    edi,DWORD PTR [ecx+0x8]
10005b8c:	jne    0x10005b96
10005b8e:	push   esi
10005b8f:	mov    edi,ecx
10005b91:	call   0x10005f71
10005b96:	mov    eax,DWORD PTR [edi+0x4]
10005b99:	mov    BYTE PTR [eax+0x44],0x1
10005b9d:	mov    eax,DWORD PTR [edi+0x4]
10005ba0:	mov    eax,DWORD PTR [eax+0x4]
10005ba3:	mov    BYTE PTR [eax+0x44],0x0
10005ba7:	mov    eax,DWORD PTR [edi+0x4]
10005baa:	mov    ecx,DWORD PTR [eax+0x4]
10005bad:	push   esi
10005bae:	call   0x10005d44
10005bb3:	jmp    0x10005bfe
10005bb5:	mov    edx,DWORD PTR [edx]
10005bb7:	cmp    BYTE PTR [edx+0x44],0x0
10005bbb:	jne    0x10005bd5
10005bbd:	mov    BYTE PTR [ecx+0x44],0x1
10005bc1:	mov    BYTE PTR [edx+0x44],0x1
10005bc5:	mov    ecx,DWORD PTR [eax]
10005bc7:	mov    ecx,DWORD PTR [ecx+0x4]
10005bca:	mov    BYTE PTR [ecx+0x44],0x0
10005bce:	mov    eax,DWORD PTR [eax]
10005bd0:	mov    edi,DWORD PTR [eax+0x4]
10005bd3:	jmp    0x10005bfe
10005bd5:	cmp    edi,DWORD PTR [ecx]
10005bd7:	jne    0x10005be1
10005bd9:	push   esi
10005bda:	mov    edi,ecx
10005bdc:	call   0x10005d44
10005be1:	mov    eax,DWORD PTR [edi+0x4]
10005be4:	mov    BYTE PTR [eax+0x44],0x1
10005be8:	mov    eax,DWORD PTR [edi+0x4]
10005beb:	mov    eax,DWORD PTR [eax+0x4]
10005bee:	mov    BYTE PTR [eax+0x44],0x0
10005bf2:	mov    eax,DWORD PTR [edi+0x4]
10005bf5:	mov    ecx,DWORD PTR [eax+0x4]
10005bf8:	push   esi
10005bf9:	call   0x10005f71
10005bfe:	lea    eax,[edi+0x4]
10005c01:	mov    ecx,DWORD PTR [eax]
10005c03:	cmp    BYTE PTR [ecx+0x44],0x0
10005c07:	je     0x10005b77
10005c0d:	mov    eax,DWORD PTR [esi+0x4]
10005c10:	mov    eax,DWORD PTR [eax+0x4]
10005c13:	mov    BYTE PTR [eax+0x44],0x1
10005c17:	mov    eax,DWORD PTR [ebp+0x8]
10005c1a:	mov    DWORD PTR [eax+0x4],ebx
10005c1d:	mov    DWORD PTR [eax],esi
10005c1f:	call   0x10059ecd
10005c24:	ret    0xc
10005c27:	push   ebx
10005c28:	xor    ebx,ebx
10005c2a:	cmp    DWORD PTR [esi],ebx
10005c2c:	jne    0x10005c33
10005c2e:	call   0x10043605
10005c33:	mov    eax,DWORD PTR [esi+0x4]
10005c36:	cmp    BYTE PTR [eax+0x45],bl
10005c39:	je     0x10005c48
10005c3b:	mov    eax,DWORD PTR [eax+0x8]
10005c3e:	mov    DWORD PTR [esi+0x4],eax
10005c41:	cmp    BYTE PTR [eax+0x45],bl
10005c44:	je     0x10005c84
10005c46:	jmp    0x10005c7a
10005c48:	mov    ecx,DWORD PTR [eax]
10005c4a:	cmp    BYTE PTR [ecx+0x45],bl
10005c4d:	jne    0x10005c6a
10005c4f:	jmp    0x10005c53
10005c51:	mov    ecx,eax
10005c53:	mov    eax,DWORD PTR [ecx+0x8]
10005c56:	cmp    BYTE PTR [eax+0x45],bl
10005c59:	je     0x10005c51
10005c5b:	mov    DWORD PTR [esi+0x4],ecx
10005c5e:	jmp    0x10005c84
10005c60:	mov    ecx,DWORD PTR [esi+0x4]
10005c63:	cmp    ecx,DWORD PTR [eax]
10005c65:	jne    0x10005c72
10005c67:	mov    DWORD PTR [esi+0x4],eax
10005c6a:	mov    eax,DWORD PTR [eax+0x4]
10005c6d:	cmp    BYTE PTR [eax+0x45],bl
10005c70:	je     0x10005c60
10005c72:	mov    ecx,DWORD PTR [esi+0x4]
10005c75:	cmp    BYTE PTR [ecx+0x45],bl
10005c78:	je     0x10005c81
10005c7a:	call   0x10043605
10005c7f:	jmp    0x10005c84
10005c81:	mov    DWORD PTR [esi+0x4],eax
10005c84:	mov    eax,esi
10005c86:	pop    ebx
10005c87:	ret    
10005c88:	push   ebp
10005c89:	mov    ebp,esp
10005c8b:	sub    esp,0x10
10005c8e:	mov    eax,ds:0x10082c90
10005c93:	mov    eax,DWORD PTR [eax]
10005c95:	push   ebx
10005c96:	push   esi
10005c97:	push   edi
10005c98:	mov    ebx,0x10082c8c
10005c9d:	lea    edi,[ebp-0xc]
10005ca0:	lea    esi,[ebp+0xc]
10005ca3:	mov    DWORD PTR [ebp-0x8],eax
10005ca6:	mov    DWORD PTR [ebp-0xc],ebx
10005ca9:	call   0x10004b0c
10005cae:	test   al,al
10005cb0:	je     0x10005d20
10005cb2:	mov    eax,ds:0x10082c90
10005cb7:	lea    edi,[ebp-0xc]
10005cba:	lea    esi,[ebp+0x14]
10005cbd:	mov    DWORD PTR [ebp-0x8],eax
10005cc0:	mov    DWORD PTR [ebp-0xc],ebx
10005cc3:	call   0x10004b0c
10005cc8:	test   al,al
10005cca:	je     0x10005d20
10005ccc:	mov    eax,ds:0x10082c90
10005cd1:	push   DWORD PTR [eax+0x4]
10005cd4:	mov    ecx,ebx
10005cd6:	call   0x1000664e
10005cdb:	mov    eax,ds:0x10082c90
10005ce0:	mov    DWORD PTR [eax+0x4],eax
10005ce3:	mov    eax,ds:0x10082c90
10005ce8:	and    DWORD PTR ds:0x10082c94,0x0
10005cef:	mov    DWORD PTR [eax],eax
10005cf1:	mov    eax,ds:0x10082c90
10005cf6:	mov    DWORD PTR [eax+0x8],eax
10005cf9:	mov    eax,ds:0x10082c90
10005cfe:	mov    ecx,DWORD PTR [eax]
10005d00:	mov    eax,DWORD PTR [ebp+0x8]
10005d03:	mov    DWORD PTR [eax],ebx
10005d05:	jmp    0x10005d3a
10005d07:	mov    edi,DWORD PTR [ebp+0xc]
10005d0a:	mov    ebx,DWORD PTR [ebp+0x10]
10005d0d:	lea    esi,[ebp+0xc]
10005d10:	call   0x100058f7
10005d15:	push   ebx
10005d16:	push   edi
10005d17:	lea    eax,[ebp-0xc]
10005d1a:	push   eax
10005d1b:	call   0x10006003
10005d20:	lea    edi,[ebp+0x14]
10005d23:	lea    esi,[ebp+0xc]
10005d26:	call   0x10004b0c
10005d2b:	test   al,al
10005d2d:	je     0x10005d07
10005d2f:	mov    ecx,DWORD PTR [ebp+0xc]
10005d32:	mov    eax,DWORD PTR [ebp+0x8]
10005d35:	mov    DWORD PTR [eax],ecx
10005d37:	mov    ecx,DWORD PTR [ebp+0x10]
10005d3a:	pop    edi
10005d3b:	pop    esi
10005d3c:	mov    DWORD PTR [eax+0x4],ecx
10005d3f:	pop    ebx
10005d40:	leave  
10005d41:	ret    0x14
10005d44:	mov    eax,DWORD PTR [ecx]
10005d46:	mov    edx,DWORD PTR [eax+0x8]
10005d49:	mov    DWORD PTR [ecx],edx
10005d4b:	mov    edx,DWORD PTR [eax+0x8]
10005d4e:	cmp    BYTE PTR [edx+0x45],0x0
10005d52:	jne    0x10005d57
10005d54:	mov    DWORD PTR [edx+0x4],ecx
10005d57:	mov    edx,DWORD PTR [ecx+0x4]
10005d5a:	mov    DWORD PTR [eax+0x4],edx
10005d5d:	mov    edx,DWORD PTR [esp+0x4]
10005d61:	mov    edx,DWORD PTR [edx+0x4]
10005d64:	cmp    ecx,DWORD PTR [edx+0x4]
10005d67:	jne    0x10005d6e
10005d69:	mov    DWORD PTR [edx+0x4],eax
10005d6c:	jmp    0x10005d7d
10005d6e:	mov    edx,DWORD PTR [ecx+0x4]
10005d71:	cmp    ecx,DWORD PTR [edx+0x8]
10005d74:	jne    0x10005d7b
10005d76:	mov    DWORD PTR [edx+0x8],eax
10005d79:	jmp    0x10005d7d
10005d7b:	mov    DWORD PTR [edx],eax
10005d7d:	mov    DWORD PTR [eax+0x8],ecx
10005d80:	mov    DWORD PTR [ecx+0x4],eax
10005d83:	ret    0x4
10005d86:	push   0x8
10005d88:	mov    eax,0x1006020b
10005d8d:	call   0x10059e28
10005d92:	push   0x48
10005d94:	call   0x10043196
10005d99:	mov    esi,eax
10005d9b:	pop    ecx
10005d9c:	mov    DWORD PTR [ebp-0x14],esi
10005d9f:	test   esi,esi
10005da1:	mov    DWORD PTR [ebp-0x4],0x1
10005da8:	je     0x10005dbb
10005daa:	push   DWORD PTR [ebp+0x10]
10005dad:	mov    ecx,DWORD PTR [ebp+0x14]
10005db0:	push   DWORD PTR [ebp+0xc]
10005db3:	push   DWORD PTR [ebp+0x8]
10005db6:	call   0x100065b4
10005dbb:	mov    eax,esi
10005dbd:	call   0x10059ecd
10005dc2:	ret    0x10
10005dc5:	push   DWORD PTR [ebp-0x14]
10005dc8:	call   0x10042fe2
10005dcd:	pop    ecx
10005dce:	push   0x0
10005dd0:	push   0x0
10005dd2:	call   0x10047942
10005dd7:	int3   
10005dd8:	push   0x8
10005dda:	mov    eax,0x100601eb
10005ddf:	call   0x10059e28
10005de4:	mov    esi,DWORD PTR [ebp+0x8]
10005de7:	mov    edi,DWORD PTR [ebp+0xc]
10005dea:	or     edi,0x7
10005ded:	cmp    edi,0x7ffffffe
10005df3:	jbe    0x10005dfa
10005df5:	mov    edi,DWORD PTR [ebp+0xc]
10005df8:	jmp    0x10005e21
10005dfa:	xor    edx,edx
10005dfc:	push   0x3
10005dfe:	mov    eax,edi
10005e00:	pop    ebx
10005e01:	div    ebx
10005e03:	mov    ecx,DWORD PTR [esi+0x18]
10005e06:	mov    DWORD PTR [ebp-0x14],ecx
10005e09:	shr    DWORD PTR [ebp-0x14],1
10005e0c:	mov    edx,DWORD PTR [ebp-0x14]
10005e0f:	cmp    eax,edx
10005e11:	jae    0x10005e21
10005e13:	mov    eax,0x7ffffffe
10005e18:	sub    eax,edx
10005e1a:	cmp    ecx,eax
10005e1c:	ja     0x10005e21
10005e1e:	lea    edi,[edx+ecx*1]
10005e21:	and    DWORD PTR [ebp-0x4],0x0
10005e25:	lea    ecx,[edi+0x1]
10005e28:	call   0x100062a9
10005e2d:	mov    DWORD PTR [ebp+0xc],eax
10005e30:	jmp    0x10005e56
10005e32:	mov    eax,DWORD PTR [ebp+0xc]
10005e35:	lea    ecx,[eax+0x1]
10005e38:	mov    DWORD PTR [ebp-0x10],esp
10005e3b:	mov    DWORD PTR [ebp-0x14],eax
10005e3e:	mov    BYTE PTR [ebp-0x4],0x2
10005e42:	call   0x100062a9
10005e47:	mov    DWORD PTR [ebp+0xc],eax
10005e4a:	mov    eax,0x10005e50
10005e4f:	ret    
10005e50:	mov    esi,DWORD PTR [ebp+0x8]
10005e53:	mov    edi,DWORD PTR [ebp-0x14]
10005e56:	cmp    DWORD PTR [ebp+0x10],0x0
10005e5a:	jbe    0x10005e7d
10005e5c:	cmp    DWORD PTR [esi+0x18],0x8
10005e60:	jb     0x10005e67
10005e62:	mov    eax,DWORD PTR [esi+0x4]
10005e65:	jmp    0x10005e6a
10005e67:	lea    eax,[esi+0x4]
10005e6a:	push   eax
10005e6b:	lea    eax,[edi+0x1]
10005e6e:	push   eax
10005e6f:	push   DWORD PTR [ebp+0xc]
10005e72:	mov    eax,DWORD PTR [ebp+0x10]
10005e75:	call   0x10006847
10005e7a:	add    esp,0xc
10005e7d:	push   0x1
10005e7f:	xor    ebx,ebx
10005e81:	call   0x10005465
10005e86:	mov    eax,DWORD PTR [ebp+0xc]
10005e89:	mov    ecx,DWORD PTR [ebp+0x10]
10005e8c:	mov    DWORD PTR [esi+0x4],eax
10005e8f:	mov    eax,esi
10005e91:	mov    DWORD PTR [esi+0x18],edi
10005e94:	call   0x100059bf
10005e99:	call   0x10059ecd
10005e9e:	ret    0xc
10005ea1:	mov    esi,DWORD PTR [ebp+0x8]
10005ea4:	push   0x1
10005ea6:	xor    ebx,ebx
10005ea8:	call   0x10005465
10005ead:	push   ebx
10005eae:	push   ebx
10005eaf:	call   0x10047942
10005eb4:	int3   
10005eb5:	push   ebp
10005eb6:	mov    ebp,esp
10005eb8:	sub    esp,0x10
10005ebb:	mov    eax,ds:0x10082c80
10005ec0:	mov    eax,DWORD PTR [eax]
10005ec2:	push   ebx
10005ec3:	push   esi
10005ec4:	push   edi
10005ec5:	mov    ebx,0x10082c7c
10005eca:	lea    edi,[ebp-0xc]
10005ecd:	lea    esi,[ebp+0xc]
10005ed0:	mov    DWORD PTR [ebp-0x8],eax
10005ed3:	mov    DWORD PTR [ebp-0xc],ebx
10005ed6:	call   0x10004b0c
10005edb:	test   al,al
10005edd:	je     0x10005f4d
10005edf:	mov    eax,ds:0x10082c80
10005ee4:	lea    edi,[ebp-0xc]
10005ee7:	lea    esi,[ebp+0x14]
10005eea:	mov    DWORD PTR [ebp-0x8],eax
10005eed:	mov    DWORD PTR [ebp-0xc],ebx
10005ef0:	call   0x10004b0c
10005ef5:	test   al,al
10005ef7:	je     0x10005f4d
10005ef9:	mov    eax,ds:0x10082c80
10005efe:	push   DWORD PTR [eax+0x4]
10005f01:	mov    ecx,ebx
10005f03:	call   0x100066a0
10005f08:	mov    eax,ds:0x10082c80
10005f0d:	mov    DWORD PTR [eax+0x4],eax
10005f10:	mov    eax,ds:0x10082c80
10005f15:	and    DWORD PTR ds:0x10082c84,0x0
10005f1c:	mov    DWORD PTR [eax],eax
10005f1e:	mov    eax,ds:0x10082c80
10005f23:	mov    DWORD PTR [eax+0x8],eax
10005f26:	mov    eax,ds:0x10082c80
10005f2b:	mov    ecx,DWORD PTR [eax]
10005f2d:	mov    eax,DWORD PTR [ebp+0x8]
10005f30:	mov    DWORD PTR [eax],ebx
10005f32:	jmp    0x10005f67
10005f34:	mov    edi,DWORD PTR [ebp+0xc]
10005f37:	mov    ebx,DWORD PTR [ebp+0x10]
10005f3a:	lea    esi,[ebp+0xc]
10005f3d:	call   0x100058f7
10005f42:	push   ebx
10005f43:	push   edi
10005f44:	lea    eax,[ebp-0xc]
10005f47:	push   eax
10005f48:	call   0x100062f3
10005f4d:	lea    edi,[ebp+0x14]
10005f50:	lea    esi,[ebp+0xc]
10005f53:	call   0x10004b0c
10005f58:	test   al,al
10005f5a:	je     0x10005f34
10005f5c:	mov    ecx,DWORD PTR [ebp+0xc]
10005f5f:	mov    eax,DWORD PTR [ebp+0x8]
10005f62:	mov    DWORD PTR [eax],ecx
10005f64:	mov    ecx,DWORD PTR [ebp+0x10]
10005f67:	pop    edi
10005f68:	pop    esi
10005f69:	mov    DWORD PTR [eax+0x4],ecx
10005f6c:	pop    ebx
10005f6d:	leave  
10005f6e:	ret    0x14
10005f71:	mov    eax,DWORD PTR [ecx+0x8]
10005f74:	mov    edx,DWORD PTR [eax]
10005f76:	mov    DWORD PTR [ecx+0x8],edx
10005f79:	mov    edx,DWORD PTR [eax]
10005f7b:	cmp    BYTE PTR [edx+0x45],0x0
10005f7f:	jne    0x10005f84
10005f81:	mov    DWORD PTR [edx+0x4],ecx
10005f84:	mov    edx,DWORD PTR [ecx+0x4]
10005f87:	mov    DWORD PTR [eax+0x4],edx
10005f8a:	mov    edx,DWORD PTR [esp+0x4]
10005f8e:	mov    edx,DWORD PTR [edx+0x4]
10005f91:	cmp    ecx,DWORD PTR [edx+0x4]
10005f94:	jne    0x10005f9b
10005f96:	mov    DWORD PTR [edx+0x4],eax
10005f99:	jmp    0x10005fa9
10005f9b:	mov    edx,DWORD PTR [ecx+0x4]
10005f9e:	cmp    ecx,DWORD PTR [edx]
10005fa0:	jne    0x10005fa6
10005fa2:	mov    DWORD PTR [edx],eax
10005fa4:	jmp    0x10005fa9
10005fa6:	mov    DWORD PTR [edx+0x8],eax
10005fa9:	mov    DWORD PTR [eax],ecx
10005fab:	mov    DWORD PTR [ecx+0x4],eax
10005fae:	ret    0x4
10005fb1:	push   0x8
10005fb3:	mov    eax,0x10060bc7
10005fb8:	call   0x10059e28
10005fbd:	push   0x48
10005fbf:	call   0x10043196
10005fc4:	mov    edi,eax
10005fc6:	pop    ecx
10005fc7:	mov    DWORD PTR [ebp-0x14],edi
10005fca:	test   edi,edi
10005fcc:	mov    DWORD PTR [ebp-0x4],0x1
10005fd3:	je     0x10005fe6
10005fd5:	push   DWORD PTR [ebp+0x10]
10005fd8:	mov    ebx,DWORD PTR [ebp+0x14]
10005fdb:	push   DWORD PTR [ebp+0xc]
10005fde:	push   DWORD PTR [ebp+0x8]
10005fe1:	call   0x10006603
10005fe6:	mov    eax,edi
10005fe8:	call   0x10059ecd
10005fed:	ret    0x10
10005ff0:	push   DWORD PTR [ebp-0x14]
10005ff3:	call   0x10042fe2
10005ff8:	pop    ecx
10005ff9:	push   0x0
10005ffb:	push   0x0
10005ffd:	call   0x10047942
10006002:	int3   
10006003:	push   0x48
10006005:	mov    eax,0x100607fe
1000600a:	call   0x10059df5
1000600f:	mov    edi,DWORD PTR [ebp+0x10]
10006012:	cmp    BYTE PTR [edi+0x45],0x0
10006016:	je     0x1000604a
10006018:	push   0x1006dcfc
1000601d:	lea    ecx,[ebp-0x2c]
10006020:	call   0x100011a7
10006025:	and    DWORD PTR [ebp-0x4],0x0
10006029:	lea    eax,[ebp-0x2c]
1000602c:	push   eax
1000602d:	lea    ecx,[ebp-0x54]
10006030:	call   0x10001077
10006035:	push   0x10076428
1000603a:	lea    eax,[ebp-0x54]
1000603d:	push   eax
1000603e:	mov    DWORD PTR [ebp-0x54],0x1006c988
10006045:	call   0x10047942
1000604a:	lea    esi,[ebp+0xc]
1000604d:	mov    DWORD PTR [ebp-0x10],edi
10006050:	call   0x100058f7
10006055:	mov    ecx,DWORD PTR [edi]
10006057:	cmp    BYTE PTR [ecx+0x45],0x0
1000605b:	je     0x10006062
1000605d:	mov    ebx,DWORD PTR [edi+0x8]
10006060:	jmp    0x10006079
10006062:	mov    eax,DWORD PTR [edi+0x8]
10006065:	cmp    BYTE PTR [eax+0x45],0x0
10006069:	je     0x1000606f
1000606b:	mov    ebx,ecx
1000606d:	jmp    0x10006079
1000606f:	mov    eax,DWORD PTR [ebp+0x10]
10006072:	cmp    eax,edi
10006074:	mov    ebx,DWORD PTR [eax+0x8]
10006077:	jne    0x100060f1
10006079:	cmp    BYTE PTR [ebx+0x45],0x0
1000607d:	mov    esi,DWORD PTR [edi+0x4]
10006080:	jne    0x10006085
10006082:	mov    DWORD PTR [ebx+0x4],esi
10006085:	mov    eax,ds:0x10082c90
1000608a:	cmp    DWORD PTR [eax+0x4],edi
1000608d:	jne    0x10006094
1000608f:	mov    DWORD PTR [eax+0x4],ebx
10006092:	jmp    0x1000609f
10006094:	cmp    DWORD PTR [esi],edi
10006096:	jne    0x1000609c
10006098:	mov    DWORD PTR [esi],ebx
1000609a:	jmp    0x1000609f
1000609c:	mov    DWORD PTR [esi+0x8],ebx
1000609f:	mov    edx,DWORD PTR ds:0x10082c90
100060a5:	cmp    DWORD PTR [edx],edi
100060a7:	jne    0x100060c5
100060a9:	cmp    BYTE PTR [ebx+0x45],0x0
100060ad:	je     0x100060b3
100060af:	mov    ecx,esi
100060b1:	jmp    0x100060c3
100060b3:	mov    eax,DWORD PTR [ebx]
100060b5:	mov    ecx,ebx
100060b7:	jmp    0x100060bd
100060b9:	mov    ecx,eax
100060bb:	mov    eax,DWORD PTR [ecx]
100060bd:	cmp    BYTE PTR [eax+0x45],0x0
100060c1:	je     0x100060b9
100060c3:	mov    DWORD PTR [edx],ecx
100060c5:	mov    edx,DWORD PTR ds:0x10082c90
100060cb:	cmp    DWORD PTR [edx+0x8],edi
100060ce:	jne    0x1000614b
100060d0:	cmp    BYTE PTR [ebx+0x45],0x0
100060d4:	je     0x100060da
100060d6:	mov    ecx,esi
100060d8:	jmp    0x100060ec
100060da:	mov    eax,DWORD PTR [ebx+0x8]
100060dd:	mov    ecx,ebx
100060df:	jmp    0x100060e6
100060e1:	mov    ecx,eax
100060e3:	mov    eax,DWORD PTR [ecx+0x8]
100060e6:	cmp    BYTE PTR [eax+0x45],0x0
100060ea:	je     0x100060e1
100060ec:	mov    DWORD PTR [edx+0x8],ecx
100060ef:	jmp    0x1000614b
100060f1:	mov    DWORD PTR [ecx+0x4],eax
100060f4:	mov    ecx,DWORD PTR [edi]
100060f6:	mov    DWORD PTR [eax],ecx
100060f8:	cmp    eax,DWORD PTR [edi+0x8]
100060fb:	jne    0x10006101
100060fd:	mov    esi,eax
100060ff:	jmp    0x1000611b
10006101:	cmp    BYTE PTR [ebx+0x45],0x0
10006105:	mov    esi,DWORD PTR [eax+0x4]
10006108:	jne    0x1000610d
1000610a:	mov    DWORD PTR [ebx+0x4],esi
1000610d:	mov    DWORD PTR [esi],ebx
1000610f:	mov    ecx,DWORD PTR [edi+0x8]
10006112:	mov    DWORD PTR [eax+0x8],ecx
10006115:	mov    ecx,DWORD PTR [edi+0x8]
10006118:	mov    DWORD PTR [ecx+0x4],eax
1000611b:	mov    ecx,DWORD PTR ds:0x10082c90
10006121:	cmp    DWORD PTR [ecx+0x4],edi
10006124:	jne    0x1000612b
10006126:	mov    DWORD PTR [ecx+0x4],eax
10006129:	jmp    0x10006139
1000612b:	mov    ecx,DWORD PTR [edi+0x4]
1000612e:	cmp    DWORD PTR [ecx],edi
10006130:	jne    0x10006136
10006132:	mov    DWORD PTR [ecx],eax
10006134:	jmp    0x10006139
10006136:	mov    DWORD PTR [ecx+0x8],eax
10006139:	mov    ecx,DWORD PTR [edi+0x4]
1000613c:	mov    DWORD PTR [eax+0x4],ecx
1000613f:	mov    dl,BYTE PTR [edi+0x44]
10006142:	mov    cl,BYTE PTR [eax+0x44]
10006145:	mov    BYTE PTR [eax+0x44],dl
10006148:	mov    BYTE PTR [edi+0x44],cl
1000614b:	cmp    BYTE PTR [edi+0x44],0x1
1000614f:	jne    0x10006264
10006155:	mov    eax,ds:0x10082c90
1000615a:	cmp    ebx,DWORD PTR [eax+0x4]
1000615d:	je     0x10006260
10006163:	mov    edi,0x10082c8c
10006168:	cmp    BYTE PTR [ebx+0x44],0x1
1000616c:	jne    0x1000625d
10006172:	mov    ecx,DWORD PTR [esi]
10006174:	cmp    ebx,ecx
10006176:	jne    0x100061e2
10006178:	mov    ecx,DWORD PTR [esi+0x8]
1000617b:	cmp    BYTE PTR [ecx+0x44],0x0
1000617f:	jne    0x10006194
10006181:	mov    BYTE PTR [ecx+0x44],0x1
10006185:	push   edi
10006186:	mov    ecx,esi
10006188:	mov    BYTE PTR [esi+0x44],0x0
1000618c:	call   0x10005f71
10006191:	mov    ecx,DWORD PTR [esi+0x8]
10006194:	cmp    BYTE PTR [ecx+0x45],0x0
10006198:	jne    0x10006215
1000619a:	mov    eax,DWORD PTR [ecx]
1000619c:	cmp    BYTE PTR [eax+0x44],0x1
100061a0:	jne    0x100061ab
100061a2:	mov    eax,DWORD PTR [ecx+0x8]
100061a5:	cmp    BYTE PTR [eax+0x44],0x1
100061a9:	je     0x10006211
100061ab:	mov    eax,DWORD PTR [ecx+0x8]
100061ae:	cmp    BYTE PTR [eax+0x44],0x1
100061b2:	jne    0x100061c7
100061b4:	mov    eax,DWORD PTR [ecx]
100061b6:	mov    BYTE PTR [eax+0x44],0x1
100061ba:	push   edi
100061bb:	mov    BYTE PTR [ecx+0x44],0x0
100061bf:	call   0x10005d44
100061c4:	mov    ecx,DWORD PTR [esi+0x8]
100061c7:	mov    al,BYTE PTR [esi+0x44]
100061ca:	mov    BYTE PTR [ecx+0x44],al
100061cd:	mov    BYTE PTR [esi+0x44],0x1
100061d1:	mov    eax,DWORD PTR [ecx+0x8]
100061d4:	push   edi
100061d5:	mov    ecx,esi
100061d7:	mov    BYTE PTR [eax+0x44],0x1
100061db:	call   0x10005f71
100061e0:	jmp    0x1000625d
100061e2:	cmp    BYTE PTR [ecx+0x44],0x0
100061e6:	jne    0x100061fa
100061e8:	mov    BYTE PTR [ecx+0x44],0x1
100061ec:	push   edi
100061ed:	mov    ecx,esi
100061ef:	mov    BYTE PTR [esi+0x44],0x0
100061f3:	call   0x10005d44
100061f8:	mov    ecx,DWORD PTR [esi]
100061fa:	cmp    BYTE PTR [ecx+0x45],0x0
100061fe:	jne    0x10006215
10006200:	mov    eax,DWORD PTR [ecx+0x8]
10006203:	cmp    BYTE PTR [eax+0x44],0x1
10006207:	jne    0x1000622a
10006209:	mov    eax,DWORD PTR [ecx]
1000620b:	cmp    BYTE PTR [eax+0x44],0x1
1000620f:	jne    0x1000622a
10006211:	mov    BYTE PTR [ecx+0x44],0x0
10006215:	mov    eax,ds:0x10082c90
1000621a:	mov    ebx,esi
1000621c:	cmp    ebx,DWORD PTR [eax+0x4]
1000621f:	mov    esi,DWORD PTR [esi+0x4]
10006222:	jne    0x10006168
10006228:	jmp    0x1000625d
1000622a:	mov    eax,DWORD PTR [ecx]
1000622c:	cmp    BYTE PTR [eax+0x44],0x1
10006230:	jne    0x10006245
10006232:	mov    eax,DWORD PTR [ecx+0x8]
10006235:	mov    BYTE PTR [eax+0x44],0x1
10006239:	push   edi
1000623a:	mov    BYTE PTR [ecx+0x44],0x0
1000623e:	call   0x10005f71
10006243:	mov    ecx,DWORD PTR [esi]
10006245:	mov    al,BYTE PTR [esi+0x44]
10006248:	mov    BYTE PTR [ecx+0x44],al
1000624b:	mov    BYTE PTR [esi+0x44],0x1
1000624f:	mov    eax,DWORD PTR [ecx]
10006251:	push   edi
10006252:	mov    ecx,esi
10006254:	mov    BYTE PTR [eax+0x44],0x1
10006258:	call   0x10005d44
1000625d:	mov    edi,DWORD PTR [ebp-0x10]
10006260:	mov    BYTE PTR [ebx+0x44],0x1
10006264:	xor    ebx,ebx
10006266:	push   ebx
10006267:	lea    esi,[edi+0xc]
1000626a:	push   0x1
1000626c:	lea    ecx,[esi+0x1c]
1000626f:	call   0x100012f0
10006274:	push   ebx
10006275:	push   0x1
10006277:	mov    ecx,esi
10006279:	call   0x100012f0
1000627e:	push   edi
1000627f:	call   0x10042fe2
10006284:	cmp    DWORD PTR ds:0x10082c94,ebx
1000628a:	pop    ecx
1000628b:	jbe    0x10006293
1000628d:	dec    DWORD PTR ds:0x10082c94
10006293:	mov    ecx,DWORD PTR [ebp+0xc]
10006296:	mov    eax,DWORD PTR [ebp+0x8]
10006299:	mov    DWORD PTR [eax],ecx
1000629b:	mov    ecx,DWORD PTR [ebp+0x10]
1000629e:	mov    DWORD PTR [eax+0x4],ecx
100062a1:	call   0x10059ecd
100062a6:	ret    0xc
100062a9:	push   ebp
100062aa:	mov    ebp,esp
100062ac:	sub    esp,0x10
100062af:	test   ecx,ecx
100062b1:	ja     0x100062c1
100062b3:	xor    ecx,ecx
100062b5:	lea    eax,[ecx+ecx*1]
100062b8:	push   eax
100062b9:	call   0x10043196
100062be:	pop    ecx
100062bf:	leave  
100062c0:	ret    
100062c1:	or     eax,0xffffffff
100062c4:	xor    edx,edx
100062c6:	div    ecx
100062c8:	cmp    eax,0x2
100062cb:	jae    0x100062b5
100062cd:	and    DWORD PTR [ebp-0x4],0x0
100062d1:	lea    eax,[ebp-0x4]
100062d4:	push   eax
100062d5:	lea    ecx,[ebp-0x10]
100062d8:	call   0x100432d2
100062dd:	push   0x10076460
100062e2:	lea    eax,[ebp-0x10]
100062e5:	push   eax
100062e6:	mov    DWORD PTR [ebp-0x10],0x100675a0
100062ed:	call   0x10047942
100062f2:	int3   
100062f3:	push   0x48
100062f5:	mov    eax,0x100607fe
100062fa:	call   0x10059df5
100062ff:	mov    edi,DWORD PTR [ebp+0x10]
10006302:	cmp    BYTE PTR [edi+0x45],0x0
10006306:	je     0x1000633a
10006308:	push   0x1006dcfc
1000630d:	lea    ecx,[ebp-0x2c]
10006310:	call   0x100011a7
10006315:	and    DWORD PTR [ebp-0x4],0x0
10006319:	lea    eax,[ebp-0x2c]
1000631c:	push   eax
1000631d:	lea    ecx,[ebp-0x54]
10006320:	call   0x10001077
10006325:	push   0x10076428
1000632a:	lea    eax,[ebp-0x54]
1000632d:	push   eax
1000632e:	mov    DWORD PTR [ebp-0x54],0x1006c988
10006335:	call   0x10047942
1000633a:	lea    esi,[ebp+0xc]
1000633d:	mov    DWORD PTR [ebp-0x10],edi
10006340:	call   0x100058f7
10006345:	mov    ecx,DWORD PTR [edi]
10006347:	cmp    BYTE PTR [ecx+0x45],0x0
1000634b:	je     0x10006352
1000634d:	mov    ebx,DWORD PTR [edi+0x8]
10006350:	jmp    0x10006369
10006352:	mov    eax,DWORD PTR [edi+0x8]
10006355:	cmp    BYTE PTR [eax+0x45],0x0
10006359:	je     0x1000635f
1000635b:	mov    ebx,ecx
1000635d:	jmp    0x10006369
1000635f:	mov    eax,DWORD PTR [ebp+0x10]
10006362:	cmp    eax,edi
10006364:	mov    ebx,DWORD PTR [eax+0x8]
10006367:	jne    0x100063e1
10006369:	cmp    BYTE PTR [ebx+0x45],0x0
1000636d:	mov    esi,DWORD PTR [edi+0x4]
10006370:	jne    0x10006375
10006372:	mov    DWORD PTR [ebx+0x4],esi
10006375:	mov    eax,ds:0x10082c80
1000637a:	cmp    DWORD PTR [eax+0x4],edi
1000637d:	jne    0x10006384
1000637f:	mov    DWORD PTR [eax+0x4],ebx
10006382:	jmp    0x1000638f
10006384:	cmp    DWORD PTR [esi],edi
10006386:	jne    0x1000638c
10006388:	mov    DWORD PTR [esi],ebx
1000638a:	jmp    0x1000638f
1000638c:	mov    DWORD PTR [esi+0x8],ebx
1000638f:	mov    edx,DWORD PTR ds:0x10082c80
10006395:	cmp    DWORD PTR [edx],edi
10006397:	jne    0x100063b5
10006399:	cmp    BYTE PTR [ebx+0x45],0x0
1000639d:	je     0x100063a3
1000639f:	mov    ecx,esi
100063a1:	jmp    0x100063b3
100063a3:	mov    eax,DWORD PTR [ebx]
100063a5:	mov    ecx,ebx
100063a7:	jmp    0x100063ad
100063a9:	mov    ecx,eax
100063ab:	mov    eax,DWORD PTR [ecx]
100063ad:	cmp    BYTE PTR [eax+0x45],0x0
100063b1:	je     0x100063a9
100063b3:	mov    DWORD PTR [edx],ecx
100063b5:	mov    edx,DWORD PTR ds:0x10082c80
100063bb:	cmp    DWORD PTR [edx+0x8],edi
100063be:	jne    0x1000643b
100063c0:	cmp    BYTE PTR [ebx+0x45],0x0
100063c4:	je     0x100063ca
100063c6:	mov    ecx,esi
100063c8:	jmp    0x100063dc
100063ca:	mov    eax,DWORD PTR [ebx+0x8]
100063cd:	mov    ecx,ebx
100063cf:	jmp    0x100063d6
100063d1:	mov    ecx,eax
100063d3:	mov    eax,DWORD PTR [ecx+0x8]
100063d6:	cmp    BYTE PTR [eax+0x45],0x0
100063da:	je     0x100063d1
100063dc:	mov    DWORD PTR [edx+0x8],ecx
100063df:	jmp    0x1000643b
100063e1:	mov    DWORD PTR [ecx+0x4],eax
100063e4:	mov    ecx,DWORD PTR [edi]
100063e6:	mov    DWORD PTR [eax],ecx
100063e8:	cmp    eax,DWORD PTR [edi+0x8]
100063eb:	jne    0x100063f1
100063ed:	mov    esi,eax
100063ef:	jmp    0x1000640b
100063f1:	cmp    BYTE PTR [ebx+0x45],0x0
100063f5:	mov    esi,DWORD PTR [eax+0x4]
100063f8:	jne    0x100063fd
100063fa:	mov    DWORD PTR [ebx+0x4],esi
100063fd:	mov    DWORD PTR [esi],ebx
100063ff:	mov    ecx,DWORD PTR [edi+0x8]
10006402:	mov    DWORD PTR [eax+0x8],ecx
10006405:	mov    ecx,DWORD PTR [edi+0x8]
10006408:	mov    DWORD PTR [ecx+0x4],eax
1000640b:	mov    ecx,DWORD PTR ds:0x10082c80
10006411:	cmp    DWORD PTR [ecx+0x4],edi
10006414:	jne    0x1000641b
10006416:	mov    DWORD PTR [ecx+0x4],eax
10006419:	jmp    0x10006429
1000641b:	mov    ecx,DWORD PTR [edi+0x4]
1000641e:	cmp    DWORD PTR [ecx],edi
10006420:	jne    0x10006426
10006422:	mov    DWORD PTR [ecx],eax
10006424:	jmp    0x10006429
10006426:	mov    DWORD PTR [ecx+0x8],eax
10006429:	mov    ecx,DWORD PTR [edi+0x4]
1000642c:	mov    DWORD PTR [eax+0x4],ecx
1000642f:	mov    dl,BYTE PTR [edi+0x44]
10006432:	mov    cl,BYTE PTR [eax+0x44]
10006435:	mov    BYTE PTR [eax+0x44],dl
10006438:	mov    BYTE PTR [edi+0x44],cl
1000643b:	cmp    BYTE PTR [edi+0x44],0x1
1000643f:	jne    0x10006554
10006445:	mov    eax,ds:0x10082c80
1000644a:	cmp    ebx,DWORD PTR [eax+0x4]
1000644d:	je     0x10006550
10006453:	mov    edi,0x10082c7c
10006458:	cmp    BYTE PTR [ebx+0x44],0x1
1000645c:	jne    0x1000654d
10006462:	mov    ecx,DWORD PTR [esi]
10006464:	cmp    ebx,ecx
10006466:	jne    0x100064d2
10006468:	mov    ecx,DWORD PTR [esi+0x8]
1000646b:	cmp    BYTE PTR [ecx+0x44],0x0
1000646f:	jne    0x10006484
10006471:	mov    BYTE PTR [ecx+0x44],0x1
10006475:	push   edi
10006476:	mov    ecx,esi
10006478:	mov    BYTE PTR [esi+0x44],0x0
1000647c:	call   0x10005f71
10006481:	mov    ecx,DWORD PTR [esi+0x8]
10006484:	cmp    BYTE PTR [ecx+0x45],0x0
10006488:	jne    0x10006505
1000648a:	mov    eax,DWORD PTR [ecx]
1000648c:	cmp    BYTE PTR [eax+0x44],0x1
10006490:	jne    0x1000649b
10006492:	mov    eax,DWORD PTR [ecx+0x8]
10006495:	cmp    BYTE PTR [eax+0x44],0x1
10006499:	je     0x10006501
1000649b:	mov    eax,DWORD PTR [ecx+0x8]
1000649e:	cmp    BYTE PTR [eax+0x44],0x1
100064a2:	jne    0x100064b7
100064a4:	mov    eax,DWORD PTR [ecx]
100064a6:	mov    BYTE PTR [eax+0x44],0x1
100064aa:	push   edi
100064ab:	mov    BYTE PTR [ecx+0x44],0x0
100064af:	call   0x10005d44
100064b4:	mov    ecx,DWORD PTR [esi+0x8]
100064b7:	mov    al,BYTE PTR [esi+0x44]
100064ba:	mov    BYTE PTR [ecx+0x44],al
100064bd:	mov    BYTE PTR [esi+0x44],0x1
100064c1:	mov    eax,DWORD PTR [ecx+0x8]
100064c4:	push   edi
100064c5:	mov    ecx,esi
100064c7:	mov    BYTE PTR [eax+0x44],0x1
100064cb:	call   0x10005f71
100064d0:	jmp    0x1000654d
100064d2:	cmp    BYTE PTR [ecx+0x44],0x0
100064d6:	jne    0x100064ea
100064d8:	mov    BYTE PTR [ecx+0x44],0x1
100064dc:	push   edi
100064dd:	mov    ecx,esi
100064df:	mov    BYTE PTR [esi+0x44],0x0
100064e3:	call   0x10005d44
100064e8:	mov    ecx,DWORD PTR [esi]
100064ea:	cmp    BYTE PTR [ecx+0x45],0x0
100064ee:	jne    0x10006505
100064f0:	mov    eax,DWORD PTR [ecx+0x8]
100064f3:	cmp    BYTE PTR [eax+0x44],0x1
100064f7:	jne    0x1000651a
100064f9:	mov    eax,DWORD PTR [ecx]
100064fb:	cmp    BYTE PTR [eax+0x44],0x1
100064ff:	jne    0x1000651a
10006501:	mov    BYTE PTR [ecx+0x44],0x0
10006505:	mov    eax,ds:0x10082c80
1000650a:	mov    ebx,esi
1000650c:	cmp    ebx,DWORD PTR [eax+0x4]
1000650f:	mov    esi,DWORD PTR [esi+0x4]
10006512:	jne    0x10006458
10006518:	jmp    0x1000654d
1000651a:	mov    eax,DWORD PTR [ecx]
1000651c:	cmp    BYTE PTR [eax+0x44],0x1
10006520:	jne    0x10006535
10006522:	mov    eax,DWORD PTR [ecx+0x8]
10006525:	mov    BYTE PTR [eax+0x44],0x1
10006529:	push   edi
1000652a:	mov    BYTE PTR [ecx+0x44],0x0
1000652e:	call   0x10005f71
10006533:	mov    ecx,DWORD PTR [esi]
10006535:	mov    al,BYTE PTR [esi+0x44]
10006538:	mov    BYTE PTR [ecx+0x44],al
1000653b:	mov    BYTE PTR [esi+0x44],0x1
1000653f:	mov    eax,DWORD PTR [ecx]
10006541:	push   edi
10006542:	mov    ecx,esi
10006544:	mov    BYTE PTR [eax+0x44],0x1
10006548:	call   0x10005d44
1000654d:	mov    edi,DWORD PTR [ebp-0x10]
10006550:	mov    BYTE PTR [ebx+0x44],0x1
10006554:	add    edi,0xc
10006557:	call   0x10004ca4
1000655c:	push   DWORD PTR [ebp-0x10]
1000655f:	call   0x10042fe2
10006564:	cmp    DWORD PTR ds:0x10082c84,0x0
1000656b:	pop    ecx
1000656c:	jbe    0x10006574
1000656e:	dec    DWORD PTR ds:0x10082c84
10006574:	mov    ecx,DWORD PTR [ebp+0xc]
10006577:	mov    eax,DWORD PTR [ebp+0x8]
1000657a:	mov    DWORD PTR [eax],ecx
1000657c:	mov    ecx,DWORD PTR [ebp+0x10]
1000657f:	mov    DWORD PTR [eax+0x4],ecx
10006582:	call   0x10059ecd
10006587:	ret    0xc
1000658a:	push   0x48
1000658c:	call   0x10043196
10006591:	xor    edx,edx
10006593:	cmp    eax,edx
10006595:	pop    ecx
10006596:	je     0x1000659a
10006598:	mov    DWORD PTR [eax],edx
1000659a:	lea    ecx,[eax+0x4]
1000659d:	cmp    ecx,edx
1000659f:	je     0x100065a3
100065a1:	mov    DWORD PTR [ecx],edx
100065a3:	lea    ecx,[eax+0x8]
100065a6:	cmp    ecx,edx
100065a8:	je     0x100065ac
100065aa:	mov    DWORD PTR [ecx],edx
100065ac:	mov    BYTE PTR [eax+0x44],0x1
100065b0:	mov    BYTE PTR [eax+0x45],dl
100065b3:	ret    
100065b4:	push   0x0
100065b6:	mov    eax,0x100617bb
100065bb:	call   0x10059df5
100065c0:	mov    ebx,ecx
100065c2:	mov    eax,DWORD PTR [ebp+0x8]
100065c5:	mov    DWORD PTR [esi],eax
100065c7:	mov    eax,DWORD PTR [ebp+0xc]
100065ca:	mov    DWORD PTR [esi+0x4],eax
100065cd:	mov    eax,DWORD PTR [ebp+0x10]
100065d0:	lea    edi,[esi+0xc]
100065d3:	push   ebx
100065d4:	mov    ecx,edi
100065d6:	mov    DWORD PTR [esi+0x8],eax
100065d9:	mov    DWORD PTR [ebp+0x8],edi
100065dc:	call   0x100011c9
100065e1:	and    DWORD PTR [ebp-0x4],0x0
100065e5:	add    ebx,0x1c
100065e8:	push   ebx
100065e9:	lea    ecx,[edi+0x1c]
100065ec:	call   0x100011c9
100065f1:	mov    BYTE PTR [esi+0x44],0x0
100065f5:	mov    BYTE PTR [esi+0x45],0x0
100065f9:	mov    eax,esi
100065fb:	call   0x10059ecd
10006600:	ret    0xc
10006603:	push   0x0
10006605:	mov    eax,0x10060ba7
1000660a:	call   0x10059df5
1000660f:	mov    eax,DWORD PTR [ebp+0x8]
10006612:	mov    DWORD PTR [edi],eax
10006614:	mov    eax,DWORD PTR [ebp+0xc]
10006617:	mov    DWORD PTR [edi+0x4],eax
1000661a:	mov    eax,DWORD PTR [ebp+0x10]
1000661d:	mov    DWORD PTR [edi+0x8],eax
10006620:	lea    esi,[edi+0xc]
10006623:	mov    eax,ebx
10006625:	mov    DWORD PTR [ebp+0x8],esi
10006628:	call   0x10004b27
1000662d:	and    DWORD PTR [ebp-0x4],0x0
10006631:	lea    eax,[ebx+0x1c]
10006634:	add    esi,0x1c
10006637:	call   0x10004b27
1000663c:	mov    BYTE PTR [edi+0x44],0x0
10006640:	mov    BYTE PTR [edi+0x45],0x0
10006644:	mov    eax,edi
10006646:	call   0x10059ecd
1000664b:	ret    0xc
1000664e:	push   ebp
1000664f:	mov    ebp,esp
10006651:	push   ecx
10006652:	push   esi
10006653:	push   edi
10006654:	mov    edi,DWORD PTR [ebp+0x8]
10006657:	cmp    BYTE PTR [edi+0x45],0x0
1000665b:	mov    DWORD PTR [ebp-0x4],ecx
1000665e:	mov    esi,edi
10006660:	jne    0x1000669a
10006662:	push   ebx
10006663:	push   DWORD PTR [esi+0x8]
10006666:	mov    ecx,DWORD PTR [ebp-0x4]
10006669:	call   0x1000664e
1000666e:	mov    esi,DWORD PTR [esi]
10006670:	push   0x0
10006672:	lea    ebx,[edi+0xc]
10006675:	push   0x1
10006677:	lea    ecx,[ebx+0x1c]
1000667a:	call   0x100012f0
1000667f:	push   0x0
10006681:	push   0x1
10006683:	mov    ecx,ebx
10006685:	call   0x100012f0
1000668a:	push   edi
1000668b:	call   0x10042fe2
10006690:	cmp    BYTE PTR [esi+0x45],0x0
10006694:	pop    ecx
10006695:	mov    edi,esi
10006697:	je     0x10006663
10006699:	pop    ebx
1000669a:	pop    edi
1000669b:	pop    esi
1000669c:	leave  
1000669d:	ret    0x4
100066a0:	push   ebx
100066a1:	mov    ebx,DWORD PTR [esp+0x8]
100066a5:	cmp    BYTE PTR [ebx+0x45],0x0
100066a9:	push   ebp
100066aa:	push   esi
100066ab:	mov    ebp,ecx
100066ad:	mov    esi,ebx
100066af:	jne    0x100066d6
100066b1:	push   edi
100066b2:	push   DWORD PTR [esi+0x8]
100066b5:	mov    ecx,ebp
100066b7:	call   0x100066a0
100066bc:	mov    esi,DWORD PTR [esi]
100066be:	lea    edi,[ebx+0xc]
100066c1:	call   0x10004ca4
100066c6:	push   ebx
100066c7:	call   0x10042fe2
100066cc:	cmp    BYTE PTR [esi+0x45],0x0
100066d0:	pop    ecx
100066d1:	mov    ebx,esi
100066d3:	je     0x100066b2
100066d5:	pop    edi
100066d6:	pop    esi
100066d7:	pop    ebp
100066d8:	pop    ebx
100066d9:	ret    0x4
100066dc:	push   ebx
100066dd:	mov    ebx,DWORD PTR [esp+0x8]
100066e1:	test   ebx,ebx
100066e3:	push   esi
100066e4:	mov    esi,eax
100066e6:	jne    0x100066f2
100066e8:	push   0x80070057
100066ed:	call   0x10001f2d
100066f2:	push   edi
100066f3:	lea    eax,[esp+0x14]
100066f7:	push   eax
100066f8:	push   ebx
100066f9:	call   0x100438bf
100066fe:	pop    ecx
100066ff:	pop    ecx
10006700:	mov    edi,eax
10006702:	push   edi
10006703:	call   0x100021a7
10006708:	lea    ecx,[esp+0x14]
1000670c:	push   ecx
1000670d:	push   ebx
1000670e:	lea    ecx,[edi+0x1]
10006711:	push   ecx
10006712:	push   eax
10006713:	call   0x10043a59
10006718:	add    esp,0x10
1000671b:	mov    eax,edi
1000671d:	pop    edi
1000671e:	mov    edx,esi
10006720:	pop    esi
10006721:	pop    ebx
10006722:	jmp    0x10002232
10006727:	push   0x20
10006729:	mov    eax,0x10060b84
1000672e:	call   0x10059df5
10006733:	push   DWORD PTR [ebp+0xc]
10006736:	and    DWORD PTR [ebp-0x10],0x0
1000673a:	lea    ecx,[ebp-0x2c]
1000673d:	call   0x100011c9
10006742:	push   DWORD PTR [ebp+0x10]
10006745:	and    DWORD PTR [ebp-0x4],0x0
10006749:	push   eax
1000674a:	call   0x10004126
1000674f:	mov    ecx,DWORD PTR [ebp+0x8]
10006752:	push   eax
10006753:	call   0x100011c9
10006758:	push   0x0
1000675a:	push   0x1
1000675c:	lea    ecx,[ebp-0x2c]
1000675f:	call   0x100012f0
10006764:	mov    eax,DWORD PTR [ebp+0x8]
10006767:	call   0x10059ecd
1000676c:	ret    
1000676d:	push   0x20
1000676f:	mov    eax,0x10060b84
10006774:	call   0x10059df5
10006779:	push   DWORD PTR [ebp+0xc]
1000677c:	and    DWORD PTR [ebp-0x10],0x0
10006780:	lea    ecx,[ebp-0x2c]
10006783:	call   0x100011c9
10006788:	mov    esi,eax
1000678a:	mov    eax,DWORD PTR [ebp+0x10]
1000678d:	and    DWORD PTR [ebp-0x4],0x0
10006791:	push   0xffffffff
10006793:	push   0x0
10006795:	call   0x10004cbe
1000679a:	mov    ecx,DWORD PTR [ebp+0x8]
1000679d:	push   eax
1000679e:	call   0x100011c9
100067a3:	push   0x0
100067a5:	push   0x1
100067a7:	lea    ecx,[ebp-0x2c]
100067aa:	call   0x100012f0
100067af:	mov    eax,DWORD PTR [ebp+0x8]
100067b2:	call   0x10059ecd
100067b7:	ret    
100067b8:	push   0x20
100067ba:	mov    eax,0x10060b84
100067bf:	call   0x10059df5
100067c4:	push   DWORD PTR [ebp+0xc]
100067c7:	and    DWORD PTR [ebp-0x10],0x0
100067cb:	lea    ecx,[ebp-0x2c]
100067ce:	call   0x100011a7
100067d3:	mov    esi,eax
100067d5:	mov    eax,DWORD PTR [ebp+0x10]
100067d8:	and    DWORD PTR [ebp-0x4],0x0
100067dc:	push   0xffffffff
100067de:	push   0x0
100067e0:	call   0x10004cbe
100067e5:	mov    ecx,DWORD PTR [ebp+0x8]
100067e8:	push   eax
100067e9:	call   0x100011c9
100067ee:	push   0x0
100067f0:	push   0x1
100067f2:	lea    ecx,[ebp-0x2c]
100067f5:	call   0x100012f0
100067fa:	mov    eax,DWORD PTR [ebp+0x8]
100067fd:	call   0x10059ecd
10006802:	ret    
10006803:	cmp    DWORD PTR [ecx+0x18],0x10
10006807:	push   edi
10006808:	mov    edi,DWORD PTR [ecx+0x14]
1000680b:	jb     0x10006812
1000680d:	mov    ecx,DWORD PTR [ecx+0x4]
10006810:	jmp    0x10006815
10006812:	add    ecx,0x4
10006815:	push   ecx
10006816:	mov    ecx,DWORD PTR [eax+0x14]
10006819:	call   0x1000464f
1000681e:	neg    eax
10006820:	sbb    eax,eax
10006822:	inc    eax
10006823:	pop    edi
10006824:	ret    
10006825:	push   edi
10006826:	push   DWORD PTR [esp+0x8]
1000682a:	call   0x10043450
1000682f:	pop    ecx
10006830:	push   DWORD PTR [esp+0x8]
10006834:	mov    ecx,DWORD PTR [esi+0x14]
10006837:	mov    edi,eax
10006839:	mov    eax,esi
1000683b:	call   0x1000464f
10006840:	neg    eax
10006842:	sbb    eax,eax
10006844:	inc    eax
10006845:	pop    edi
10006846:	ret    
10006847:	add    eax,eax
10006849:	push   eax
1000684a:	push   DWORD PTR [esp+0x10]
1000684e:	mov    eax,DWORD PTR [esp+0x10]
10006852:	add    eax,eax
10006854:	push   eax
10006855:	push   DWORD PTR [esp+0x10]
10006859:	call   0x100433cf
1000685e:	mov    eax,DWORD PTR [esp+0x14]
10006862:	add    esp,0x10
10006865:	ret    
10006866:	push   ebp
10006867:	mov    ebp,esp
10006869:	push   ecx
1000686a:	push   edi
1000686b:	xor    eax,eax
1000686d:	lea    edi,[ebp-0x4]
10006870:	stos   BYTE PTR es:[edi],al
10006871:	push   DWORD PTR [ebp-0x4]
10006874:	push   DWORD PTR [ebp+0xc]
10006877:	push   DWORD PTR [ebp+0xc]
1000687a:	push   DWORD PTR [ebp+0x8]
1000687d:	call   0x1000abd4
10006882:	add    esp,0x10
10006885:	pop    edi
10006886:	leave  
10006887:	ret    0x8
1000688a:	push   esi
1000688b:	mov    esi,ecx
1000688d:	mov    ecx,DWORD PTR [eax+0x14]
10006890:	cmp    ecx,esi
10006892:	jae    0x10006896
10006894:	mov    esi,ecx
10006896:	cmp    esi,edi
10006898:	mov    edx,esi
1000689a:	jb     0x1000689e
1000689c:	mov    edx,edi
1000689e:	cmp    DWORD PTR [eax+0x18],0x8
100068a2:	jb     0x100068a9
100068a4:	mov    eax,DWORD PTR [eax+0x4]
100068a7:	jmp    0x100068ac
100068a9:	add    eax,0x4
100068ac:	test   edx,edx
100068ae:	mov    ecx,DWORD PTR [esp+0x8]
100068b2:	push   ebx
100068b3:	jbe    0x100068c4
100068b5:	mov    bx,WORD PTR [eax]
100068b8:	cmp    bx,WORD PTR [ecx]
100068bb:	jne    0x100068d4
100068bd:	inc    eax
100068be:	inc    eax
100068bf:	inc    ecx
100068c0:	inc    ecx
100068c1:	dec    edx
100068c2:	jne    0x100068b5
100068c4:	xor    eax,eax
100068c6:	test   eax,eax
100068c8:	pop    ebx
100068c9:	jne    0x100068e9
100068cb:	cmp    esi,edi
100068cd:	jae    0x100068e2
100068cf:	or     eax,0xffffffff
100068d2:	jmp    0x100068e9
100068d4:	movzx  eax,WORD PTR [eax]
100068d7:	cmp    ax,WORD PTR [ecx]
100068da:	sbb    eax,eax
100068dc:	and    eax,0xfffffffe
100068df:	inc    eax
100068e0:	jmp    0x100068c6
100068e2:	xor    eax,eax
100068e4:	cmp    esi,edi
100068e6:	setne  al
100068e9:	pop    esi
100068ea:	ret    0x4
100068ed:	push   0x0
100068ef:	mov    eax,0x1005fe21
100068f4:	call   0x10059df5
100068f9:	and    DWORD PTR [esp+0x18],0x0
100068fe:	test   esi,esi
10006900:	je     0x10006910
10006902:	push   edi
10006903:	mov    ecx,esi
10006905:	call   0x100011c9
1000690a:	mov    eax,DWORD PTR [edi+0x1c]
1000690d:	mov    DWORD PTR [esi+0x1c],eax
10006910:	call   0x10059ecd
10006915:	ret    
10006916:	mov    ecx,DWORD PTR [esp+0x4]
1000691a:	push   0x0
1000691c:	push   0x1
1000691e:	call   0x100012f0
10006923:	test   BYTE PTR [esp+0x8],0x1
10006928:	je     0x10006934
1000692a:	push   DWORD PTR [esp+0x4]
1000692e:	call   0x10042fe2
10006933:	pop    ecx
10006934:	mov    eax,DWORD PTR [esp+0x4]
10006938:	ret    0x8
1000693b:	call   DWORD PTR ds:0x100670cc
10006941:	test   eax,eax
10006943:	jle    0x1000694f
10006945:	and    eax,0xffff
1000694a:	or     eax,0x80070000
1000694f:	ret    
10006950:	push   ebp
10006951:	mov    ebp,esp
10006953:	push   0x0
10006955:	push   DWORD PTR [ebp+0x1c]
10006958:	push   DWORD PTR [ebp+0x18]
1000695b:	push   0x0
1000695d:	push   DWORD PTR [ebp+0x14]
10006960:	push   DWORD PTR [ebp+0x10]
10006963:	push   DWORD PTR [ebp+0xc]
10006966:	call   DWORD PTR ds:0x100670c8
1000696c:	cmp    eax,0xffffffff
1000696f:	jne    0x10006978
10006971:	call   0x1000693b
10006976:	jmp    0x1000697f
10006978:	mov    ecx,DWORD PTR [ebp+0x8]
1000697b:	mov    DWORD PTR [ecx],eax
1000697d:	xor    eax,eax
1000697f:	pop    ebp
10006980:	ret    0x18
10006983:	mov    eax,DWORD PTR [esi]
10006985:	test   eax,eax
10006987:	je     0x10006993
10006989:	push   eax
1000698a:	call   DWORD PTR ds:0x10067078
10006990:	and    DWORD PTR [esi],0x0
10006993:	ret    
10006994:	push   0x254
10006999:	mov    eax,0x100643d2
1000699e:	call   0x10059e5e
100069a3:	test   BYTE PTR ds:0x100834a4,0x1
100069aa:	jne    0x10006d05
100069b0:	or     DWORD PTR ds:0x100834a4,0x1
100069b7:	and    DWORD PTR ds:0x10083498,0x0
100069be:	push   0x10065ee6
100069c3:	call   0x10043166
100069c8:	pop    ecx
100069c9:	jmp    0x10006d05
100069ce:	lea    eax,[ebp-0x218]
100069d4:	push   eax
100069d5:	mov    esi,0x100
100069da:	push   esi
100069db:	mov    BYTE PTR ds:0x10082c9e,0x1
100069e2:	call   DWORD PTR ds:0x100670c0
100069e8:	cmp    eax,esi
100069ea:	ja     0x10006da8
100069f0:	lea    eax,[ebp-0x218]
100069f6:	push   eax
100069f7:	lea    eax,[ebp-0x21c]
100069fd:	push   eax
100069fe:	call   0x10002352
10006a03:	xor    ebx,ebx
10006a05:	lea    eax,[ebp-0x21c]
10006a0b:	mov    DWORD PTR [ebp-0x4],ebx
10006a0e:	call   0x10006e44
10006a13:	lea    edi,[ebp-0x260]
10006a19:	call   0x100331e0
10006a1e:	mov    BYTE PTR [ebp-0x4],0x1
10006a22:	cmp    DWORD PTR [eax+0x18],0x10
10006a26:	jb     0x10006a2d
10006a28:	mov    eax,DWORD PTR [eax+0x4]
10006a2b:	jmp    0x10006a30
10006a2d:	add    eax,0x4
10006a30:	push   eax
10006a31:	lea    eax,[ebp-0x21c]
10006a37:	push   eax
10006a38:	call   0x10006dc1
10006a3d:	push   ebx
10006a3e:	push   0x1
10006a40:	lea    ecx,[ebp-0x260]
10006a46:	mov    BYTE PTR [ebp-0x4],0x0
10006a4a:	call   0x100012f0
10006a4f:	push   0x1006e238
10006a54:	push   0x4
10006a56:	mov    ecx,0x1006e268
10006a5b:	call   0x100042b4
10006a60:	pop    ecx
10006a61:	pop    ecx
10006a62:	push   eax
10006a63:	lea    eax,[ebp-0x21c]
10006a69:	push   eax
10006a6a:	call   0x10006dc1
10006a6f:	mov    DWORD PTR [ebp-0x220],ebx
10006a75:	push   ebx
10006a76:	push   0x4
10006a78:	push   0x7
10006a7a:	push   0xc0000000
10006a7f:	lea    esi,[ebp-0x21c]
10006a85:	mov    BYTE PTR [ebp-0x4],0x2
10006a89:	call   0x100041e6
10006a8e:	push   eax
10006a8f:	lea    eax,[ebp-0x220]
10006a95:	push   eax
10006a96:	call   0x10006950
10006a9b:	test   eax,eax
10006a9d:	je     0x10006bda
10006aa3:	call   DWORD PTR ds:0x100670cc
10006aa9:	cmp    eax,0x20
10006aac:	jne    0x10006d82
10006ab2:	push   ebx
10006ab3:	push   0x4
10006ab5:	push   0x7
10006ab7:	push   0x80000000
10006abc:	call   0x100041e6
10006ac1:	push   eax
10006ac2:	lea    eax,[ebp-0x220]
10006ac8:	push   eax
10006ac9:	call   0x10006950
10006ace:	test   eax,eax
10006ad0:	jne    0x10006d82
10006ad6:	mov    eax,ds:0x10082da4
10006adb:	push   0xa
10006add:	push   0x12c
10006ae2:	push   eax
10006ae3:	mov    ebx,eax
10006ae5:	call   DWORD PTR ds:0x100670a0
10006aeb:	test   eax,eax
10006aed:	je     0x10006d17
10006af3:	lea    ecx,[ebp-0x234]
10006af9:	push   ecx
10006afa:	mov    edi,eax
10006afc:	call   0x100332a0
10006b01:	test   eax,eax
10006b03:	pop    ecx
10006b04:	je     0x10006d17
10006b0a:	xor    edi,edi
10006b0c:	push   edi
10006b0d:	push   DWORD PTR ds:0x10082e28
10006b13:	lea    edx,[ebp-0x225]
10006b19:	push   DWORD PTR [ebp-0x234]
10006b1f:	lea    ecx,[ebp-0x224]
10006b25:	push   eax
10006b26:	lea    eax,[ebp-0x238]
10006b2c:	push   eax
10006b2d:	mov    DWORD PTR [ebp-0x224],edi
10006b33:	call   0x10039900
10006b38:	mov    ecx,DWORD PTR [eax]
10006b3a:	mov    esi,ecx
10006b3c:	add    esp,0x14
10006b3f:	mov    DWORD PTR [eax],edi
10006b41:	mov    DWORD PTR [ebp-0x230],esi
10006b47:	mov    BYTE PTR [ebp-0x4],0x3
10006b4b:	push   DWORD PTR [ebp-0x238]
10006b51:	call   0x10042fe2
10006b56:	mov    ebx,DWORD PTR [ebp-0x224]
10006b5c:	cmp    ebx,edi
10006b5e:	pop    ecx
10006b5f:	je     0x10006d44
10006b65:	cmp    esi,edi
10006b67:	je     0x10006d44
10006b6d:	lea    edi,[ebx+0x1]
10006b70:	push   edi
10006b71:	call   0x100438d7
10006b76:	and    DWORD PTR [ebp-0x22c],0x0
10006b7d:	pop    ecx
10006b7e:	push   0x0
10006b80:	lea    ecx,[ebp-0x22c]
10006b86:	push   ecx
10006b87:	push   edi
10006b88:	mov    edi,DWORD PTR [ebp-0x220]
10006b8e:	push   eax
10006b8f:	push   edi
10006b90:	mov    DWORD PTR [ebp-0x224],eax
10006b96:	call   DWORD PTR ds:0x100670dc
10006b9c:	test   eax,eax
10006b9e:	jne    0x10006ba5
10006ba0:	call   0x1000693b
10006ba5:	cmp    DWORD PTR [ebp-0x22c],ebx
10006bab:	jne    0x10006d25
10006bb1:	push   ebx
10006bb2:	push   esi
10006bb3:	push   DWORD PTR [ebp-0x224]
10006bb9:	call   0x10043a74
10006bbe:	add    esp,0xc
10006bc1:	test   eax,eax
10006bc3:	jne    0x10006d25
10006bc9:	push   DWORD PTR [ebp-0x224]
10006bcf:	call   0x10042fe2
10006bd4:	pop    ecx
10006bd5:	jmp    0x10006cc4
10006bda:	mov    eax,ds:0x10082da4
10006bdf:	push   0xa
10006be1:	push   0x12c
10006be6:	push   eax
10006be7:	mov    ebx,eax
10006be9:	call   DWORD PTR ds:0x100670a0
10006bef:	test   eax,eax
10006bf1:	je     0x10006d17
10006bf7:	lea    ecx,[ebp-0x240]
10006bfd:	push   ecx
10006bfe:	mov    edi,eax
10006c00:	call   0x100332a0
10006c05:	test   eax,eax
10006c07:	pop    ecx
10006c08:	je     0x10006d17
10006c0e:	xor    ebx,ebx
10006c10:	push   ebx
10006c11:	push   DWORD PTR ds:0x10082e28
10006c17:	lea    edx,[ebp-0x226]
10006c1d:	push   DWORD PTR [ebp-0x240]
10006c23:	lea    ecx,[ebp-0x224]
10006c29:	push   eax
10006c2a:	lea    eax,[ebp-0x23c]
10006c30:	push   eax
10006c31:	mov    DWORD PTR [ebp-0x224],ebx
10006c37:	call   0x10039900
10006c3c:	mov    ecx,DWORD PTR [eax]
10006c3e:	add    esp,0x14
10006c41:	mov    DWORD PTR [eax],ebx
10006c43:	push   DWORD PTR [ebp-0x23c]
10006c49:	mov    esi,ecx
10006c4b:	call   0x10042fe2
10006c50:	cmp    DWORD PTR [ebp-0x224],ebx
10006c56:	pop    ecx
10006c57:	je     0x10006d76
10006c5d:	cmp    esi,ebx
10006c5f:	je     0x10006d76
10006c65:	mov    edi,DWORD PTR [ebp-0x220]
10006c6b:	push   ebx
10006c6c:	lea    eax,[ebp-0x244]
10006c72:	push   eax
10006c73:	push   DWORD PTR [ebp-0x224]
10006c79:	push   esi
10006c7a:	push   edi
10006c7b:	call   DWORD PTR ds:0x100670a4
10006c81:	cmp    eax,ebx
10006c83:	jne    0x10006c8c
10006c85:	call   0x1000693b
10006c8a:	jmp    0x10006c8e
10006c8c:	xor    eax,eax
10006c8e:	cmp    eax,ebx
10006c90:	jl     0x10006d58
10006c96:	mov    eax,DWORD PTR [ebp-0x224]
10006c9c:	cmp    DWORD PTR [ebp-0x244],eax
10006ca2:	jne    0x10006d6f
10006ca8:	push   edi
10006ca9:	call   DWORD PTR ds:0x100670d8
10006caf:	test   eax,eax
10006cb1:	jne    0x10006cba
10006cb3:	call   0x1000693b
10006cb8:	jmp    0x10006cbc
10006cba:	xor    eax,eax
10006cbc:	cmp    eax,ebx
10006cbe:	jl     0x10006d65
10006cc4:	push   esi
10006cc5:	call   0x10042fe2
10006cca:	test   edi,edi
10006ccc:	pop    ecx
10006ccd:	mov    BYTE PTR [ebp-0x4],0x0
10006cd1:	je     0x10006cda
10006cd3:	push   edi
10006cd4:	call   DWORD PTR ds:0x10067078
10006cda:	push   0x10083498
10006cdf:	push   0x2
10006ce1:	lea    esi,[ebp-0x21c]
10006ce7:	call   0x100041e6
10006cec:	push   eax
10006ced:	call   DWORD PTR ds:0x100672a4
10006cf3:	or     DWORD PTR [ebp-0x4],0xffffffff
10006cf7:	mov    eax,DWORD PTR [ebp-0x21c]
10006cfd:	add    eax,0xfffffff0
10006d00:	call   0x10002069
10006d05:	cmp    BYTE PTR ds:0x10082c9e,0x0
10006d0c:	je     0x100069ce
10006d12:	jmp    0x10006da8
10006d17:	call   0x10002068
10006d1c:	cmp    DWORD PTR [ebp-0x220],0x0
10006d23:	jmp    0x10006d88
10006d25:	call   0x10002068
10006d2a:	push   DWORD PTR [ebp-0x224]
10006d30:	call   0x10042fe2
10006d35:	pop    ecx
10006d36:	push   esi
10006d37:	call   0x10042fe2
10006d3c:	test   edi,edi
10006d3e:	pop    ecx
10006d3f:	je     0x10006d96
10006d41:	push   edi
10006d42:	jmp    0x10006d90
10006d44:	call   0x10002068
10006d49:	push   esi
10006d4a:	call   0x10042fe2
10006d4f:	cmp    DWORD PTR [ebp-0x220],edi
10006d55:	pop    ecx
10006d56:	jmp    0x10006d88
10006d58:	call   DWORD PTR ds:0x100670cc
10006d5e:	push   eax
10006d5f:	call   0x10002068
10006d64:	pop    ecx
10006d65:	push   esi
10006d66:	call   0x10042fe2
10006d6b:	cmp    edi,ebx
10006d6d:	jmp    0x10006d3e
10006d6f:	call   0x10002068
10006d74:	jmp    0x10006d65
10006d76:	call   0x10002068
10006d7b:	push   esi
10006d7c:	call   0x10042fe2
10006d81:	pop    ecx
10006d82:	cmp    DWORD PTR [ebp-0x220],ebx
10006d88:	je     0x10006d96
10006d8a:	push   DWORD PTR [ebp-0x220]
10006d90:	call   DWORD PTR ds:0x10067078
10006d96:	or     DWORD PTR [ebp-0x4],0xffffffff
10006d9a:	mov    eax,DWORD PTR [ebp-0x21c]
10006da0:	add    eax,0xfffffff0
10006da3:	call   0x10002069
10006da8:	mov    eax,ds:0x10083498
10006dad:	test   eax,eax
10006daf:	mov    esi,eax
10006db1:	je     0x10006db9
10006db3:	mov    ecx,DWORD PTR [eax]
10006db5:	push   eax
10006db6:	call   DWORD PTR [ecx+0x4]
10006db9:	mov    eax,esi
10006dbb:	call   0x10059ee1
10006dc0:	ret    
10006dc1:	push   0x4
10006dc3:	mov    eax,0x100629a6
10006dc8:	call   0x10059df5
10006dcd:	mov    eax,DWORD PTR [ebp+0x8]
10006dd0:	call   0x10004697
10006dd5:	push   DWORD PTR [ebp+0xc]
10006dd8:	lea    ecx,[ebp-0x10]
10006ddb:	push   ecx
10006ddc:	mov    ecx,eax
10006dde:	call   0x10006e0c
10006de3:	and    DWORD PTR [ebp-0x4],0x0
10006de7:	mov    eax,DWORD PTR [ebp-0x10]
10006dea:	push   DWORD PTR [eax-0xc]
10006ded:	push   eax
10006dee:	mov    eax,DWORD PTR [ebp+0x8]
10006df1:	call   0x10006e69
10006df6:	mov    eax,DWORD PTR [ebp-0x10]
10006df9:	add    eax,0xfffffff0
10006dfc:	call   0x10002069
10006e01:	mov    eax,DWORD PTR [ebp+0x8]
10006e04:	call   0x10059ecd
10006e09:	ret    0x8
10006e0c:	push   0x0
10006e0e:	mov    eax,0x10062a19
10006e13:	call   0x10059df5
10006e18:	mov    esi,DWORD PTR [ebp+0x8]
10006e1b:	call   0x1000214c
10006e20:	push   DWORD PTR [ebp+0xc]
10006e23:	and    DWORD PTR [ebp-0x4],0x0
10006e27:	push   esi
10006e28:	call   0x10002117
10006e2d:	test   al,al
10006e2f:	jne    0x10006e3a
10006e31:	push   DWORD PTR [ebp+0xc]
10006e34:	push   esi
10006e35:	call   0x100020b3
10006e3a:	mov    eax,esi
10006e3c:	call   0x10059ecd
10006e41:	ret    0x8
10006e44:	push   ebx
10006e45:	push   esi
10006e46:	mov    esi,eax
10006e48:	mov    eax,DWORD PTR [esi]
10006e4a:	push   edi
10006e4b:	mov    edi,DWORD PTR [eax-0xc]
10006e4e:	lea    ebx,[edi+0x1]
10006e51:	push   ebx
10006e52:	call   0x100021a7
10006e57:	mov    WORD PTR [eax+edi*2],0x5c
10006e5d:	pop    edi
10006e5e:	mov    edx,esi
10006e60:	pop    esi
10006e61:	mov    eax,ebx
10006e63:	pop    ebx
10006e64:	jmp    0x10002232
10006e69:	push   ebp
10006e6a:	mov    ebp,esp
10006e6c:	push   ecx
10006e6d:	push   ebx
10006e6e:	push   esi
10006e6f:	push   edi
10006e70:	mov    edi,DWORD PTR [ebp+0x8]
10006e73:	mov    esi,eax
10006e75:	mov    eax,DWORD PTR [esi]
10006e77:	mov    ebx,DWORD PTR [eax-0xc]
10006e7a:	sub    edi,eax
10006e7c:	mov    eax,DWORD PTR [ebp+0xc]
10006e7f:	add    eax,ebx
10006e81:	push   eax
10006e82:	sar    edi,1
10006e84:	mov    DWORD PTR [ebp-0x4],eax
10006e87:	call   0x100021a7
10006e8c:	cmp    edi,ebx
10006e8e:	lea    edi,[eax+edi*2]
10006e91:	jbe    0x10006e96
10006e93:	mov    edi,DWORD PTR [ebp+0x8]
10006e96:	push   edi
10006e97:	push   DWORD PTR [ebp+0xc]
10006e9a:	lea    eax,[eax+ebx*2]
10006e9d:	push   eax
10006e9e:	mov    eax,DWORD PTR [ebp+0xc]
10006ea1:	call   0x1000232c
10006ea6:	mov    eax,DWORD PTR [ebp-0x4]
10006ea9:	add    esp,0xc
10006eac:	mov    edx,esi
10006eae:	call   0x10002232
10006eb3:	pop    edi
10006eb4:	pop    esi
10006eb5:	pop    ebx
10006eb6:	leave  
10006eb7:	ret    0x8
10006eba:	push   0x0
10006ebc:	mov    eax,0x100601d0
10006ec1:	call   0x10059df5
10006ec6:	mov    esi,DWORD PTR [ebp+0x8]
10006ec9:	mov    ecx,esi
10006ecb:	call   0x100432c1
10006ed0:	and    DWORD PTR [ebp-0x4],0x0
10006ed4:	push   DWORD PTR [ebp+0xc]
10006ed7:	lea    ecx,[esi+0xc]
10006eda:	mov    DWORD PTR [esi],0x10074a3c
10006ee0:	call   0x100011c9
10006ee5:	mov    eax,esi
10006ee7:	call   0x10059ecd
10006eec:	ret    0x8
10006eef:	push   esi
10006ef0:	mov    esi,ecx
10006ef2:	push   0x0
10006ef4:	push   0x1
10006ef6:	lea    ecx,[esi+0xc]
10006ef9:	mov    DWORD PTR [esi],0x10074a3c
10006eff:	call   0x100012f0
10006f04:	mov    ecx,esi
10006f06:	pop    esi
10006f07:	jmp    0x10043390
10006f0c:	cmp    DWORD PTR [ecx+0x24],0x10
10006f10:	jb     0x10006f16
10006f12:	mov    eax,DWORD PTR [ecx+0x10]
10006f15:	ret    
10006f16:	lea    eax,[ecx+0x10]
10006f19:	ret    
10006f1a:	push   esi
10006f1b:	mov    esi,ecx
10006f1d:	call   0x10006eef
10006f22:	test   BYTE PTR [esp+0x8],0x1
10006f27:	je     0x10006f30
10006f29:	push   esi
10006f2a:	call   0x10042fe2
10006f2f:	pop    ecx
10006f30:	mov    eax,esi
10006f32:	pop    esi
10006f33:	ret    0x4
10006f36:	push   0x4
10006f38:	mov    eax,0x1005fe01
10006f3d:	call   0x10059df5
10006f42:	mov    esi,ecx
10006f44:	mov    DWORD PTR [ebp-0x10],esi
10006f47:	mov    edi,DWORD PTR [ebp+0x8]
10006f4a:	push   edi
10006f4b:	call   0x10043338
10006f50:	and    DWORD PTR [ebp-0x4],0x0
10006f54:	add    edi,0xc
10006f57:	push   edi
10006f58:	lea    ecx,[esi+0xc]
10006f5b:	mov    DWORD PTR [esi],0x10074a3c
10006f61:	call   0x100011c9
10006f66:	mov    eax,esi
10006f68:	call   0x10059ecd
10006f6d:	ret    0x4
10006f70:	push   0x4
10006f72:	mov    eax,0x10060b61
10006f77:	call   0x10059e28
10006f7c:	and    DWORD PTR [ebp-0x4],0x0
10006f80:	mov    ebx,DWORD PTR ds:0x100670e0
10006f86:	push   0x1006e270
10006f8b:	call   ebx
10006f8d:	mov    edi,eax
10006f8f:	test   edi,edi
10006f91:	je     0x10007006
10006f93:	mov    esi,DWORD PTR ds:0x100670e4
10006f99:	push   0x1006e28c
10006f9e:	push   edi
10006f9f:	call   esi
10006fa1:	test   eax,eax
10006fa3:	jne    0x10006faa
10006fa5:	call   0x1000700e
10006faa:	push   0x1006e298
10006faf:	push   edi
10006fb0:	mov    ds:0x10082ca8,eax
10006fb5:	call   esi
10006fb7:	test   eax,eax
10006fb9:	jne    0x10006fc0
10006fbb:	call   0x1000700e
10006fc0:	push   0x1006e2a4
10006fc5:	push   edi
10006fc6:	mov    ds:0x10082ca4,eax
10006fcb:	call   esi
10006fcd:	test   eax,eax
10006fcf:	jne    0x10006fd6
10006fd1:	call   0x1000700e
10006fd6:	push   0x1006e2b4
10006fdb:	mov    ds:0x10082cac,eax
10006fe0:	call   ebx
10006fe2:	test   eax,eax
10006fe4:	je     0x10007006
10006fe6:	push   0x1006e2cc
10006feb:	push   eax
10006fec:	call   esi
10006fee:	test   eax,eax
10006ff0:	jne    0x10006ff7
10006ff2:	call   0x1000700e
10006ff7:	mov    ds:0x10082ca0,eax
10006ffc:	mov    al,0x1
10006ffe:	jmp    0x10007008
10007000:	mov    eax,0x10007006
10007005:	ret    
10007006:	xor    al,al
10007008:	call   0x10059ecd
1000700d:	ret    
1000700e:	push   0x44
10007010:	mov    eax,0x10060b46
10007015:	call   0x10059df5
1000701a:	push   0x1006dd18
1000701f:	lea    ecx,[ebp-0x28]
10007022:	call   0x100011a7
10007027:	and    DWORD PTR [ebp-0x4],0x0
1000702b:	lea    eax,[ebp-0x28]
1000702e:	push   eax
1000702f:	lea    eax,[ebp-0x50]
10007032:	push   eax
10007033:	call   0x10006eba
10007038:	push   0x10076508
1000703d:	lea    eax,[ebp-0x50]
10007040:	push   eax
10007041:	call   0x10047942
10007046:	int3   
10007047:	push   0x14
10007049:	push   0x10076588
1000704e:	call   0x1005f8ec
10007053:	mov    BYTE PTR [ebp-0x1d],0x1
10007057:	xor    ebx,ebx
10007059:	mov    DWORD PTR [ebp-0x4],ebx
1000705c:	mov    DWORD PTR [ebp-0x24],ebx
1000705f:	push   0x2000
10007064:	push   DWORD PTR [ebp+0x8]
10007067:	lea    eax,[ebp-0x24]
1000706a:	push   eax
1000706b:	call   0x1000793f
10007070:	add    esp,0xc
10007073:	cmp    eax,ebx
10007075:	jge    0x1000707c
10007077:	mov    BYTE PTR [ebp-0x1d],bl
1000707a:	jmp    0x100070a9
1000707c:	mov    eax,DWORD PTR [ebp-0x24]
1000707f:	call   0x1004b9b0
10007084:	mov    DWORD PTR [ebp-0x18],esp
10007087:	jmp    0x100070a9
10007089:	mov    eax,DWORD PTR [ebp-0x14]
1000708c:	mov    eax,DWORD PTR [eax]
1000708e:	mov    eax,DWORD PTR [eax]
10007090:	xor    ecx,ecx
10007092:	cmp    eax,0xc00000fd
10007097:	sete   cl
1000709a:	mov    eax,ecx
1000709c:	ret    
1000709d:	mov    esp,DWORD PTR [ebp-0x18]
100070a0:	mov    BYTE PTR [ebp-0x1d],0x0
100070a4:	call   0x10045206
100070a9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100070b0:	mov    al,BYTE PTR [ebp-0x1d]
100070b3:	lea    esp,[ebp-0x34]
100070b6:	call   0x1005f934
100070bb:	ret    
100070bc:	xor    eax,eax
100070be:	cmp    esi,eax
100070c0:	je     0x100070e9
100070c2:	cmp    DWORD PTR [esp+0x4],eax
100070c6:	je     0x100070e9
100070c8:	push   DWORD PTR [esp+0x8]
100070cc:	mov    WORD PTR [esi],ax
100070cf:	push   esi
100070d0:	push   0xffffffff
100070d2:	push   DWORD PTR [esp+0x10]
100070d6:	push   eax
100070d7:	push   DWORD PTR [esp+0x20]
100070db:	call   DWORD PTR ds:0x1006708c
100070e1:	neg    eax
100070e3:	sbb    eax,eax
100070e5:	and    eax,esi
100070e7:	jmp    0x100070eb
100070e9:	xor    eax,eax
100070eb:	ret    0xc
100070ee:	push   DWORD PTR [esp+0x4]
100070f2:	call   0x1005110f
100070f7:	pop    ecx
100070f8:	ret    0x4
100070fb:	push   ecx
100070fc:	call   0x10051152
10007101:	pop    ecx
10007102:	ret    
10007103:	push   0x20
10007105:	mov    eax,0x10060b19
1000710a:	call   0x10059e5e
1000710f:	mov    eax,DWORD PTR [ebp+0x8]
10007112:	xor    edi,edi
10007114:	mov    DWORD PTR [ebp-0x18],eax
10007117:	mov    esi,ecx
10007119:	mov    DWORD PTR [ebp-0x1c],edi
1000711c:	call   DWORD PTR ds:0x10080ffc
10007122:	mov    DWORD PTR [ebp-0x24],eax
10007125:	mov    DWORD PTR [ebp-0x14],edi
10007128:	push   edi
10007129:	lea    eax,[ebp-0x20]
1000712c:	push   eax
1000712d:	push   esi
1000712e:	mov    DWORD PTR [ebp-0x4],edi
10007131:	call   0x1005111b
10007136:	push   edi
10007137:	lea    eax,[ebp-0x28]
1000713a:	push   eax
1000713b:	push   esi
1000713c:	call   0x1005111b
10007141:	mov    eax,DWORD PTR [ebp-0x20]
10007144:	add    esp,0x18
10007147:	cmp    eax,edi
10007149:	mov    DWORD PTR [ebp-0x1c],eax
1000714c:	je     0x10007174
1000714e:	push   eax
1000714f:	call   DWORD PTR ds:0x100670ac
10007155:	push   edi
10007156:	inc    eax
10007157:	cdq    
10007158:	push   0x2
1000715a:	push   edx
1000715b:	push   eax
1000715c:	call   0x1004f990
10007161:	mov    ebx,eax
10007163:	add    eax,0x80000000
10007168:	adc    edx,edi
1000716a:	mov    DWORD PTR [ebp-0x28],edx
1000716d:	jne    0x10007174
1000716f:	cmp    eax,0xffffffff
10007172:	jbe    0x10007178
10007174:	xor    eax,eax
10007176:	jmp    0x100071ad
10007178:	cmp    ebx,0x400
1000717e:	jg     0x10007196
10007180:	push   ebx
10007181:	call   0x10007047
10007186:	test   al,al
10007188:	pop    ecx
10007189:	je     0x10007196
1000718b:	mov    eax,ebx
1000718d:	call   0x1004b9b0
10007192:	mov    eax,esp
10007194:	jmp    0x1000719f
10007196:	push   ebx
10007197:	lea    esi,[ebp-0x14]
1000719a:	call   0x100078dc
1000719f:	push   DWORD PTR [ebp-0x24]
100071a2:	mov    esi,eax
100071a4:	push   ebx
100071a5:	push   DWORD PTR [ebp-0x1c]
100071a8:	call   0x10002425
100071ad:	mov    ecx,DWORD PTR [ebp-0x18]
100071b0:	push   eax
100071b1:	call   0x100011a7
100071b6:	cmp    DWORD PTR [ebp-0x14],edi
100071b9:	je     0x100071ce
100071bb:	mov    eax,DWORD PTR [ebp-0x14]
100071be:	mov    esi,DWORD PTR [eax]
100071c0:	push   eax
100071c1:	mov    DWORD PTR [ebp-0x14],esi
100071c4:	call   0x100437dc
100071c9:	cmp    esi,edi
100071cb:	pop    ecx
100071cc:	jne    0x100071bb
100071ce:	mov    eax,DWORD PTR [ebp-0x18]
100071d1:	lea    esp,[ebp-0x3c]
100071d4:	call   0x10059ee1
100071d9:	ret    
100071da:	push   0xc
100071dc:	mov    eax,0x10061733
100071e1:	call   0x10059df5
100071e6:	xor    edi,edi
100071e8:	mov    esi,ecx
100071ea:	mov    DWORD PTR [ebp-0x10],edi
100071ed:	call   DWORD PTR ds:0x10080ffc
100071f3:	mov    DWORD PTR [ebp-0x18],edi
100071f6:	push   edi
100071f7:	lea    eax,[ebp-0x10]
100071fa:	push   eax
100071fb:	push   ebx
100071fc:	mov    DWORD PTR [ebp-0x4],edi
100071ff:	call   0x1005115e
10007204:	push   edi
10007205:	lea    eax,[ebp-0x14]
10007208:	push   eax
10007209:	push   ebx
1000720a:	call   0x1005115e
1000720f:	mov    ecx,DWORD PTR [ebp-0x14]
10007212:	add    eax,ecx
10007214:	sub    eax,DWORD PTR [ebp-0x10]
10007217:	add    esp,0x18
1000721a:	push   eax
1000721b:	push   DWORD PTR [ebp-0x10]
1000721e:	call   0x10004102
10007223:	mov    eax,esi
10007225:	call   0x10059ecd
1000722a:	ret    
1000722b:	push   0x74
1000722d:	mov    eax,0x10063549
10007232:	call   0x10059e5e
10007237:	mov    eax,DWORD PTR [ebp+0xc]
1000723a:	mov    esi,DWORD PTR [ebp+0x8]
1000723d:	push   eax
1000723e:	push   esi
1000723f:	mov    DWORD PTR [ebp-0x50],eax
10007242:	call   DWORD PTR ds:0x10082cb8
10007248:	mov    ebx,eax
1000724a:	mov    edi,0x80000000
1000724f:	test   edi,ebx
10007251:	mov    DWORD PTR [ebp-0x54],ebx
10007254:	jne    0x1000728a
10007256:	mov    eax,ds:0x10082ce0
1000725b:	test   eax,eax
1000725d:	je     0x1000728a
1000725f:	add    esi,eax
10007261:	lea    eax,[ebp-0x64]
10007264:	push   eax
10007265:	call   0x100510fe
1000726a:	pop    ecx
1000726b:	and    DWORD PTR [ebp-0x4],0x0
1000726f:	mov    eax,DWORD PTR [esi]
10007271:	lea    ecx,[ebp-0x64]
10007274:	push   ecx
10007275:	push   esi
10007276:	call   DWORD PTR [eax+0xc4]
1000727c:	test   edi,eax
1000727e:	je     0x1000729a
10007280:	lea    eax,[ebp-0x64]
10007283:	push   eax
10007284:	call   0x1005110f
10007289:	pop    ecx
1000728a:	mov    eax,ebx
1000728c:	lea    esp,[ebp-0x90]
10007292:	call   0x10059ee1
10007297:	ret    0x8
1000729a:	lea    eax,[ebp-0x4c]
1000729d:	push   eax
1000729e:	lea    ecx,[ebp-0x64]
100072a1:	call   0x10007103
100072a6:	pop    ecx
100072a7:	lea    eax,[ebp-0x4c]
100072aa:	mov    BYTE PTR [ebp-0x4],0x1
100072ae:	call   0x1001979a
100072b3:	lea    eax,[ebp-0x30]
100072b6:	push   eax
100072b7:	push   0x10082f58
100072bc:	lea    ecx,[ebp-0x4c]
100072bf:	call   0x10019c6d
100072c4:	lea    edi,[ebp-0x30]
100072c7:	mov    BYTE PTR [ebp-0x4],0x2
100072cb:	call   0x10019b2d
100072d0:	test   al,al
100072d2:	jne    0x1000735f
100072d8:	call   DWORD PTR ds:0x10080ffc
100072de:	mov    ebx,eax
100072e0:	mov    eax,DWORD PTR [ebp-0x30]
100072e3:	dec    eax
100072e4:	je     0x100072fd
100072e6:	dec    eax
100072e7:	jne    0x1000735f
100072e9:	push   0xffffffff
100072eb:	push   0x1006e2d8
100072f0:	push   DWORD PTR [ebp-0x50]
100072f3:	call   0x10051130
100072f8:	add    esp,0xc
100072fb:	jmp    0x1000735f
100072fd:	lea    eax,[ebp-0x80]
10007300:	push   eax
10007301:	lea    eax,[ebp-0x30]
10007304:	call   0x10007ca8
10007309:	cmp    DWORD PTR [eax+0x18],0x10
1000730d:	jb     0x10007314
1000730f:	mov    esi,DWORD PTR [eax+0x4]
10007312:	jmp    0x10007317
10007314:	lea    esi,[eax+0x4]
10007317:	test   esi,esi
10007319:	je     0x1000732d
1000731b:	push   esi
1000731c:	call   DWORD PTR ds:0x100670e8
10007322:	mov    edi,eax
10007324:	inc    edi
10007325:	cmp    edi,0x3fffffff
1000732b:	jle    0x10007331
1000732d:	xor    eax,eax
1000732f:	jmp    0x10007345
10007331:	lea    eax,[edi+edi*1]
10007334:	call   0x1004b9b0
10007339:	mov    eax,esp
1000733b:	push   ebx
1000733c:	push   edi
1000733d:	push   esi
1000733e:	mov    esi,eax
10007340:	call   0x100070bc
10007345:	push   0xffffffff
10007347:	push   eax
10007348:	push   DWORD PTR [ebp-0x50]
1000734b:	call   0x10051130
10007350:	add    esp,0xc
10007353:	push   0x0
10007355:	push   0x1
10007357:	lea    ecx,[ebp-0x80]
1000735a:	call   0x100012f0
1000735f:	push   0x0
10007361:	push   0x1
10007363:	lea    ecx,[ebp-0x2c]
10007366:	call   0x100012f0
1000736b:	push   0x0
1000736d:	push   0x1
1000736f:	lea    ecx,[ebp-0x4c]
10007372:	call   0x100012f0
10007377:	lea    eax,[ebp-0x64]
1000737a:	push   eax
1000737b:	call   0x1005110f
10007380:	mov    eax,DWORD PTR [ebp-0x54]
10007383:	pop    ecx
10007384:	jmp    0x1000728c
10007389:	push   0x34
1000738b:	mov    eax,0x10063d3e
10007390:	call   0x10059e5e
10007395:	xor    ebx,ebx
10007397:	push   ebx
10007398:	mov    esi,0x10082e0c
1000739d:	push   esi
1000739e:	call   DWORD PTR ds:0x100670f0
100073a4:	test   eax,eax
100073a6:	jne    0x100074d0
100073ac:	mov    edi,DWORD PTR ds:0x100670ec
100073b2:	push   ebx
100073b3:	push   0x1
100073b5:	push   esi
100073b6:	call   edi
100073b8:	mov    DWORD PTR [ebp-0x38],ebx
100073bb:	lea    ecx,[ebp-0x38]
100073be:	mov    DWORD PTR [ebp-0x4],ebx
100073c1:	call   0x10007929
100073c6:	push   eax
100073c7:	call   0x100510dc
100073cc:	mov    esi,0x80000000
100073d1:	test   esi,eax
100073d3:	pop    ecx
100073d4:	jne    0x100074c4
100073da:	mov    eax,DWORD PTR [ebp-0x38]
100073dd:	lea    edx,[ebp-0x40]
100073e0:	push   edx
100073e1:	lea    edx,[ebp-0x24]
100073e4:	push   edx
100073e5:	push   ebx
100073e6:	lea    edx,[ebp-0x34]
100073e9:	push   edx
100073ea:	mov    DWORD PTR [ebp-0x34],0x5d0fcdd0
100073f1:	mov    WORD PTR [ebp-0x30],0x4daa
100073f7:	mov    WORD PTR [ebp-0x2e],0x11d2
100073fd:	mov    BYTE PTR [ebp-0x2c],0xb3
10007401:	mov    BYTE PTR [ebp-0x2b],0x28
10007405:	mov    BYTE PTR [ebp-0x2a],bl
10007408:	mov    BYTE PTR [ebp-0x29],0x80
1000740c:	mov    BYTE PTR [ebp-0x28],0x5f
10007410:	mov    BYTE PTR [ebp-0x27],0x8a
10007414:	mov    BYTE PTR [ebp-0x26],0x38
10007418:	mov    BYTE PTR [ebp-0x25],0x59
1000741c:	mov    DWORD PTR [ebp-0x24],0xa6cf9084
10007423:	mov    WORD PTR [ebp-0x20],0x15b3
10007429:	mov    WORD PTR [ebp-0x1e],0x11d2
1000742f:	mov    BYTE PTR [ebp-0x1c],0x93
10007433:	mov    BYTE PTR [ebp-0x1b],0x2e
10007437:	mov    BYTE PTR [ebp-0x1a],bl
1000743a:	mov    BYTE PTR [ebp-0x19],0x80
1000743e:	mov    BYTE PTR [ebp-0x18],0x5f
10007442:	mov    BYTE PTR [ebp-0x17],0x8a
10007446:	mov    BYTE PTR [ebp-0x16],0xdd
1000744a:	mov    BYTE PTR [ebp-0x15],0x32
1000744e:	mov    DWORD PTR [ebp-0x40],ebx
10007451:	mov    ecx,DWORD PTR [eax]
10007453:	push   eax
10007454:	call   DWORD PTR [ecx+0x14]
10007457:	test   esi,eax
10007459:	jne    0x100074c4
1000745b:	lea    edx,[ebp-0x3c]
1000745e:	push   edx
1000745f:	mov    BYTE PTR [ebp-0x4],0x1
10007463:	mov    eax,DWORD PTR [ebp-0x40]
10007466:	lea    edx,[ebp-0x24]
10007469:	push   edx
1000746a:	mov    DWORD PTR [ebp-0x3c],ebx
1000746d:	mov    ecx,DWORD PTR [eax]
1000746f:	push   eax
10007470:	call   DWORD PTR [ecx]
10007472:	test   esi,eax
10007474:	jne    0x100074b9
10007476:	mov    eax,DWORD PTR [ebp-0x3c]
10007479:	mov    eax,DWORD PTR [eax]
1000747b:	mov    ecx,DWORD PTR [eax+0xbc]
10007481:	cmp    DWORD PTR [ecx],0x4246c81
10007487:	jne    0x100074b9
10007489:	cmp    BYTE PTR [ecx+0x8],0xe9
1000748d:	jne    0x100074b9
1000748f:	mov    eax,DWORD PTR [ecx+0x4]
10007492:	mov    ds:0x10082ce0,eax
10007497:	mov    eax,DWORD PTR [ecx+0x9]
1000749a:	add    eax,0xd
1000749d:	push   0x1000722b
100074a2:	add    eax,ecx
100074a4:	push   eax
100074a5:	call   0x10057780
100074aa:	push   ebx
100074ab:	push   0x1
100074ad:	push   0x10082e10
100074b2:	mov    ds:0x10082cb8,eax
100074b7:	call   edi
100074b9:	lea    ecx,[ebp-0x3c]
100074bc:	mov    BYTE PTR [ebp-0x4],bl
100074bf:	call   0x10051184
100074c4:	or     DWORD PTR [ebp-0x4],0xffffffff
100074c8:	lea    ecx,[ebp-0x38]
100074cb:	call   0x10051184
100074d0:	call   0x10059ee1
100074d5:	ret    
100074d6:	jmp    0x10051184
100074db:	push   ecx
100074dc:	push   esi
100074dd:	push   DWORD PTR [esp+0x14]
100074e1:	push   DWORD PTR [esp+0x14]
100074e5:	push   DWORD PTR [esp+0x14]
100074e9:	call   DWORD PTR ds:0x10082cbc
100074ef:	mov    esi,eax
100074f1:	add    esp,0xc
100074f4:	test   esi,esi
100074f6:	js     0x100074ff
100074f8:	call   0x10007389
100074fd:	mov    eax,esi
100074ff:	pop    esi
10007500:	pop    ecx
10007501:	ret    
10007502:	push   0x78
10007504:	mov    eax,0x10062976
10007509:	call   0x10059e5e
1000750e:	mov    eax,DWORD PTR [ebp+0x8]
10007511:	mov    DWORD PTR [ebp-0x44],eax
10007514:	lea    eax,[ebp-0x68]
10007517:	xor    esi,esi
10007519:	push   eax
1000751a:	mov    DWORD PTR [edi],esi
1000751c:	call   0x10051141
10007521:	push   0xffffffff
10007523:	lea    eax,[ebp-0x68]
10007526:	push   0x1006e2dc
1000752b:	push   eax
1000752c:	mov    DWORD PTR [ebp-0x4],esi
1000752f:	call   0x10051173
10007534:	mov    eax,ds:0x10082ce8
10007539:	add    esp,0x10
1000753c:	cmp    eax,esi
1000753e:	jne    0x10007552
10007540:	lea    eax,[ebp-0x68]
10007543:	push   eax
10007544:	call   0x10051152
10007549:	pop    ecx
1000754a:	xor    al,al
1000754c:	call   0x10059ee1
10007551:	ret    
10007552:	mov    ecx,DWORD PTR [eax]
10007554:	lea    edx,[ebp-0x48]
10007557:	push   edx
10007558:	push   esi
10007559:	push   esi
1000755a:	lea    edx,[ebp-0x68]
1000755d:	push   edx
1000755e:	push   eax
1000755f:	call   DWORD PTR [ecx+0x14]
10007562:	cmp    eax,esi
10007564:	jne    0x10007540
10007566:	lea    edx,[ebp-0x30]
10007569:	push   edx
1000756a:	xor    ebx,ebx
1000756c:	push   esi
1000756d:	inc    ebx
1000756e:	mov    BYTE PTR [ebp-0x4],bl
10007571:	mov    eax,ds:0x10082ce4
10007576:	push   DWORD PTR [ebp-0x48]
10007579:	mov    DWORD PTR [ebp-0x30],esi
1000757c:	mov    ecx,DWORD PTR [eax]
1000757e:	push   eax
1000757f:	call   DWORD PTR [ecx+0xc]
10007582:	cmp    eax,esi
10007584:	je     0x100075a2
10007586:	xor    bl,bl
10007588:	lea    ecx,[ebp-0x30]
1000758b:	mov    BYTE PTR [ebp-0x4],0x0
1000758f:	call   0x10051184
10007594:	lea    eax,[ebp-0x68]
10007597:	push   eax
10007598:	call   0x10051152
1000759d:	pop    ecx
1000759e:	mov    al,bl
100075a0:	jmp    0x1000754c
100075a2:	cmp    DWORD PTR [ebp-0x30],esi
100075a5:	je     0x10007588
100075a7:	lea    eax,[ebp-0x40]
100075aa:	push   eax
100075ab:	call   0x10051141
100075b0:	pop    ecx
100075b1:	push   esi
100075b2:	lea    ecx,[ebp-0x2c]
100075b5:	mov    DWORD PTR [ebp-0x14],0xf
100075bc:	call   0x1000141c
100075c1:	mov    BYTE PTR [ebp-0x4],0x3
100075c5:	mov    eax,DWORD PTR [ebp-0x30]
100075c8:	mov    ecx,DWORD PTR [eax]
100075ca:	lea    edx,[ebp-0x40]
100075cd:	push   edx
100075ce:	push   eax
100075cf:	call   DWORD PTR [ecx+0x14]
100075d2:	cmp    eax,esi
100075d4:	je     0x100075ec
100075d6:	push   esi
100075d7:	push   ebx
100075d8:	lea    ecx,[ebp-0x2c]
100075db:	call   0x100012f0
100075e0:	lea    eax,[ebp-0x40]
100075e3:	push   eax
100075e4:	call   0x10051152
100075e9:	pop    ecx
100075ea:	jmp    0x10007586
100075ec:	lea    ebx,[ebp-0x40]
100075ef:	lea    ecx,[ebp-0x84]
100075f5:	call   0x100071da
100075fa:	push   0x1006e2f4
100075ff:	mov    esi,eax
10007601:	mov    BYTE PTR [ebp-0x4],0x4
10007605:	call   0x10006825
1000760a:	mov    bl,al
1000760c:	neg    bl
1000760e:	pop    ecx
1000760f:	sbb    bl,bl
10007611:	xor    esi,esi
10007613:	push   esi
10007614:	push   0x1
10007616:	lea    ecx,[ebp-0x84]
1000761c:	inc    bl
1000761e:	call   0x100012f0
10007623:	test   bl,bl
10007625:	je     0x10007643
10007627:	push   esi
10007628:	push   0x1
1000762a:	lea    ecx,[ebp-0x2c]
1000762d:	call   0x100012f0
10007632:	lea    eax,[ebp-0x40]
10007635:	push   eax
10007636:	call   0x10051152
1000763b:	pop    ecx
1000763c:	mov    bl,0x1
1000763e:	jmp    0x10007588
10007643:	lea    eax,[ebp-0x58]
10007646:	push   eax
10007647:	call   0x10051141
1000764c:	pop    ecx
1000764d:	mov    BYTE PTR [ebp-0x4],0x5
10007651:	mov    eax,DWORD PTR [ebp-0x30]
10007654:	mov    ecx,DWORD PTR [eax]
10007656:	lea    edx,[ebp-0x58]
10007659:	push   edx
1000765a:	push   eax
1000765b:	call   DWORD PTR [ecx+0xc]
1000765e:	cmp    eax,esi
10007660:	je     0x10007674
10007662:	lea    eax,[ebp-0x58]
10007665:	push   eax
10007666:	call   0x10051152
1000766b:	pop    ecx
1000766c:	push   esi
1000766d:	push   0x1
1000766f:	jmp    0x100075d8
10007674:	lea    ebx,[ebp-0x58]
10007677:	lea    ecx,[ebp-0x84]
1000767d:	call   0x100071da
10007682:	mov    ecx,DWORD PTR [ebp-0x44]
10007685:	push   0xffffffff
10007687:	xor    ebx,ebx
10007689:	push   ebx
1000768a:	push   eax
1000768b:	mov    BYTE PTR [ebp-0x4],0x6
1000768f:	call   0x10001241
10007694:	push   ebx
10007695:	push   0x1
10007697:	lea    ecx,[ebp-0x84]
1000769d:	mov    BYTE PTR [ebp-0x4],0x5
100076a1:	call   0x100012f0
100076a6:	mov    eax,DWORD PTR [ebp-0x30]
100076a9:	mov    ecx,DWORD PTR [eax]
100076ab:	push   edi
100076ac:	push   eax
100076ad:	call   DWORD PTR [ecx+0x10]
100076b0:	cmp    eax,ebx
100076b2:	lea    eax,[ebp-0x58]
100076b5:	push   eax
100076b6:	je     0x100076d8
100076b8:	call   0x10051152
100076bd:	pop    ecx
100076be:	push   ebx
100076bf:	push   0x1
100076c1:	lea    ecx,[ebp-0x2c]
100076c4:	call   0x100012f0
100076c9:	lea    eax,[ebp-0x40]
100076cc:	push   eax
100076cd:	call   0x10051152
100076d2:	pop    ecx
100076d3:	jmp    0x10007588
100076d8:	call   0x10051152
100076dd:	pop    ecx
100076de:	push   ebx
100076df:	jmp    0x10007628
100076e4:	push   ebp
100076e5:	mov    ebp,esp
100076e7:	sub    esp,0x1c
100076ea:	mov    eax,ds:0x100801ac
100076ef:	xor    eax,ebp
100076f1:	mov    DWORD PTR [ebp-0x8],eax
100076f4:	mov    edx,DWORD PTR [ebp+0x14]
100076f7:	mov    ecx,DWORD PTR [ebp+0x10]
100076fa:	mov    eax,DWORD PTR [ebp+0xc]
100076fd:	push   esi
100076fe:	mov    esi,DWORD PTR [ebp+0x8]
10007701:	push   edi
10007702:	push   DWORD PTR [ebp+0x18]
10007705:	push   edx
10007706:	push   ecx
10007707:	push   eax
10007708:	push   esi
10007709:	call   DWORD PTR ds:0x10082cb0
1000770f:	mov    edi,eax
10007711:	add    esp,0x14
10007714:	test   edi,edi
10007716:	js     0x100077b9
1000771c:	mov    esi,DWORD PTR [esi]
1000771e:	mov    eax,DWORD PTR [esi]
10007720:	push   esi
10007721:	call   DWORD PTR [eax+0x4]
10007724:	mov    eax,DWORD PTR [esi]
10007726:	push   0x10082ce4
1000772b:	lea    ecx,[ebp-0x18]
1000772e:	push   ecx
1000772f:	push   0x1006e2fc
10007734:	push   esi
10007735:	mov    DWORD PTR [ebp-0x18],0xe38ab577
1000773c:	mov    WORD PTR [ebp-0x14],0x786e
10007742:	mov    WORD PTR [ebp-0x12],0x4a7f
10007748:	mov    BYTE PTR [ebp-0x10],0x93
1000774c:	mov    BYTE PTR [ebp-0xf],0x6b
10007750:	mov    BYTE PTR [ebp-0xe],0x7a
10007754:	mov    BYTE PTR [ebp-0xd],0xe4
10007758:	mov    BYTE PTR [ebp-0xc],0xc7
1000775c:	mov    BYTE PTR [ebp-0xb],0xd8
10007760:	mov    BYTE PTR [ebp-0xa],0x77
10007764:	mov    BYTE PTR [ebp-0x9],0xb2
10007768:	call   DWORD PTR [eax+0x10]
1000776b:	mov    eax,DWORD PTR [esi]
1000776d:	push   0x10082ce8
10007772:	lea    ecx,[ebp-0x18]
10007775:	push   ecx
10007776:	push   0x1006e32c
1000777b:	push   esi
1000777c:	mov    DWORD PTR [ebp-0x18],0xbddeda3f
10007783:	mov    WORD PTR [ebp-0x14],0x9020
10007789:	mov    WORD PTR [ebp-0x12],0x4d12
1000778f:	mov    BYTE PTR [ebp-0x10],0x8c
10007793:	mov    BYTE PTR [ebp-0xf],0x70
10007797:	mov    BYTE PTR [ebp-0xe],0x98
1000779b:	mov    BYTE PTR [ebp-0xd],0x4e
1000779f:	mov    BYTE PTR [ebp-0xc],0xe9
100077a3:	mov    BYTE PTR [ebp-0xb],0xf7
100077a7:	mov    BYTE PTR [ebp-0xa],0x93
100077ab:	mov    BYTE PTR [ebp-0x9],0x5e
100077af:	call   DWORD PTR [eax+0x10]
100077b2:	call   0x10007389
100077b7:	mov    eax,edi
100077b9:	mov    ecx,DWORD PTR [ebp-0x8]
100077bc:	pop    edi
100077bd:	xor    ecx,ebp
100077bf:	pop    esi
100077c0:	call   0x10043615
100077c5:	leave  
100077c6:	ret    
100077c7:	push   ecx
100077c8:	push   esi
100077c9:	push   DWORD PTR [esp+0xc]
100077cd:	call   DWORD PTR ds:0x10082cb4
100077d3:	pop    ecx
100077d4:	mov    esi,eax
100077d6:	call   0x10007389
100077db:	mov    eax,esi
100077dd:	pop    esi
100077de:	pop    ecx
100077df:	ret    
100077e0:	push   ebp
100077e1:	mov    ebp,esp
100077e3:	and    esp,0xfffffff8
100077e6:	push   ecx
100077e7:	push   esi
100077e8:	push   0x0
100077ea:	mov    esi,0x10082e08
100077ef:	push   esi
100077f0:	call   DWORD PTR ds:0x100670f0
100077f6:	test   eax,eax
100077f8:	jne    0x100078d7
100077fe:	push   eax
100077ff:	push   0x1
10007801:	push   esi
10007802:	call   DWORD PTR ds:0x100670ec
10007808:	push   0x0
1000780a:	call   0x10050fb2
1000780f:	test   eax,eax
10007811:	pop    ecx
10007812:	js     0x100078d7
10007818:	push   0x1006e350
1000781d:	push   0xd
1000781f:	mov    ecx,0x1006e384
10007824:	call   0x100042b4
10007829:	pop    ecx
1000782a:	pop    ecx
1000782b:	push   eax
1000782c:	push   0x1006e398
10007831:	mov    esi,0x1006e3d8
10007836:	push   0x9
10007838:	mov    ecx,esi
1000783a:	call   0x100042b4
1000783f:	pop    ecx
10007840:	pop    ecx
10007841:	push   eax
10007842:	call   0x10057de0
10007847:	test   eax,eax
10007849:	je     0x1000785b
1000784b:	push   0x100074db
10007850:	push   eax
10007851:	call   0x10057780
10007856:	mov    ds:0x10082cbc,eax
1000785b:	push   0x1006e3e4
10007860:	push   0xd
10007862:	mov    ecx,0x1006e414
10007867:	call   0x100042b4
1000786c:	pop    ecx
1000786d:	pop    ecx
1000786e:	push   eax
1000786f:	push   0x1006e424
10007874:	push   0x9
10007876:	mov    ecx,esi
10007878:	call   0x100042b4
1000787d:	pop    ecx
1000787e:	pop    ecx
1000787f:	push   eax
10007880:	call   0x10057de0
10007885:	test   eax,eax
10007887:	je     0x10007899
10007889:	push   0x100076e4
1000788e:	push   eax
1000788f:	call   0x10057780
10007894:	mov    ds:0x10082cb0,eax
10007899:	push   0x1006e448
1000789e:	push   0x16
100078a0:	mov    ecx,0x1006e474
100078a5:	call   0x100042b4
100078aa:	pop    ecx
100078ab:	pop    ecx
100078ac:	push   eax
100078ad:	push   0x1006e48c
100078b2:	push   0x9
100078b4:	mov    ecx,esi
100078b6:	call   0x100042b4
100078bb:	pop    ecx
100078bc:	pop    ecx
100078bd:	push   eax
100078be:	call   0x10057de0
100078c3:	test   eax,eax
100078c5:	je     0x100078d7
100078c7:	push   0x100077c7
100078cc:	push   eax
100078cd:	call   0x10057780
100078d2:	mov    ds:0x10082cb4,eax
100078d7:	pop    esi
100078d8:	mov    esp,ebp
100078da:	pop    ebp
100078db:	ret    
100078dc:	push   ebp
100078dd:	mov    ebp,esp
100078df:	push   0x8
100078e1:	push   DWORD PTR [ebp+0x8]
100078e4:	lea    eax,[ebp+0x8]
100078e7:	push   eax
100078e8:	call   0x1000793f
100078ed:	add    esp,0xc
100078f0:	test   eax,eax
100078f2:	jge    0x100078fa
100078f4:	push   eax
100078f5:	call   0x10001f2d
100078fa:	push   DWORD PTR [ebp+0x8]
100078fd:	call   0x10045143
10007902:	test   eax,eax
10007904:	pop    ecx
10007905:	je     0x10007910
10007907:	mov    ecx,DWORD PTR [esi]
10007909:	mov    DWORD PTR [eax],ecx
1000790b:	mov    DWORD PTR [esi],eax
1000790d:	add    eax,0x8
10007910:	pop    ebp
10007911:	ret    0x4
10007914:	jmp    0x10007923
10007916:	mov    eax,DWORD PTR [esi]
10007918:	mov    ecx,DWORD PTR [eax]
1000791a:	push   eax
1000791b:	mov    DWORD PTR [esi],ecx
1000791d:	call   0x100437dc
10007922:	pop    ecx
10007923:	cmp    DWORD PTR [esi],0x0
10007926:	jne    0x10007916
10007928:	ret    
10007929:	push   esi
1000792a:	mov    esi,ecx
1000792c:	mov    eax,DWORD PTR [esi]
1000792e:	and    DWORD PTR [esi],0x0
10007931:	test   eax,eax
10007933:	je     0x1000793b
10007935:	mov    ecx,DWORD PTR [eax]
10007937:	push   eax
10007938:	call   DWORD PTR [ecx+0x8]
1000793b:	mov    eax,esi
1000793d:	pop    esi
1000793e:	ret    
1000793f:	mov    eax,DWORD PTR [esp+0x8]
10007943:	mov    ecx,DWORD PTR [esp+0xc]
10007947:	or     edx,0xffffffff
1000794a:	sub    edx,eax
1000794c:	cmp    edx,ecx
1000794e:	jae    0x10007956
10007950:	mov    eax,0x80070057
10007955:	ret    
10007956:	add    eax,ecx
10007958:	mov    ecx,DWORD PTR [esp+0x4]
1000795c:	mov    DWORD PTR [ecx],eax
1000795e:	xor    eax,eax
10007960:	ret    
10007961:	test   esi,esi
10007963:	jne    0x10007968
10007965:	xor    eax,eax
10007967:	ret    
10007968:	test   edi,edi
1000796a:	je     0x10007972
1000796c:	mov    eax,DWORD PTR [edi]
1000796e:	push   edi
1000796f:	call   DWORD PTR [eax+0x4]
10007972:	mov    eax,DWORD PTR [esi]
10007974:	test   eax,eax
10007976:	je     0x1000797e
10007978:	mov    ecx,DWORD PTR [eax]
1000797a:	push   eax
1000797b:	call   DWORD PTR [ecx+0x8]
1000797e:	mov    DWORD PTR [esi],edi
10007980:	mov    eax,edi
10007982:	ret    
10007983:	cmp    DWORD PTR [eax+0x18],0x10
10007987:	jb     0x1000798e
10007989:	mov    eax,DWORD PTR [eax+0x4]
1000798c:	jmp    0x10007991
1000798e:	add    eax,0x4
10007991:	cmp    DWORD PTR [ecx+0x18],0x10
10007995:	jb     0x1000799c
10007997:	mov    ecx,DWORD PTR [ecx+0x4]
1000799a:	jmp    0x1000799f
1000799c:	add    ecx,0x4
1000799f:	push   eax
100079a0:	push   ecx
100079a1:	call   0x1004582f
100079a6:	pop    ecx
100079a7:	pop    ecx
100079a8:	xor    ecx,ecx
100079aa:	test   eax,eax
100079ac:	setl   cl
100079af:	mov    al,cl
100079b1:	ret    
100079b2:	push   0x0
100079b4:	mov    eax,0x10060af6
100079b9:	call   0x10059df5
100079be:	mov    esi,DWORD PTR [ebp+0x8]
100079c1:	xor    ebx,ebx
100079c3:	mov    DWORD PTR [esi],ebx
100079c5:	mov    DWORD PTR [ebp-0x4],ebx
100079c8:	mov    DWORD PTR [esi+0x8],ebx
100079cb:	mov    DWORD PTR [esi+0xc],ebx
100079ce:	mov    DWORD PTR [esi+0x10],ebx
100079d1:	push   0x400
100079d6:	mov    BYTE PTR [ebp-0x4],0x1
100079da:	call   0x100438d7
100079df:	mov    DWORD PTR [esi+0x14],eax
100079e2:	pop    ecx
100079e3:	mov    DWORD PTR [esi+0x18],ebx
100079e6:	mov    DWORD PTR [esi+0x1c],0x400
100079ed:	mov    DWORD PTR [esi+0x20],ebx
100079f0:	mov    eax,esi
100079f2:	call   0x10059ecd
100079f7:	ret    0x4
100079fa:	push   esi
100079fb:	mov    esi,eax
100079fd:	mov    eax,DWORD PTR [esi+0x18]
10007a00:	add    eax,edi
10007a02:	call   0x10007bd7
10007a07:	mov    eax,DWORD PTR [esi+0x14]
10007a0a:	add    eax,DWORD PTR [esi+0x18]
10007a0d:	push   edi
10007a0e:	push   DWORD PTR [esp+0xc]
10007a12:	push   eax
10007a13:	call   0x10045340
10007a18:	add    DWORD PTR [esi+0x18],edi
10007a1b:	add    esp,0xc
10007a1e:	pop    esi
10007a1f:	ret    0x4
10007a22:	push   ebp
10007a23:	mov    ebp,esp
10007a25:	push   ecx
10007a26:	mov    ecx,DWORD PTR [edi+0x4]
10007a29:	push   ebx
10007a2a:	mov    ebx,DWORD PTR [ebp+0xc]
10007a2d:	cmp    ebx,ecx
10007a2f:	push   esi
10007a30:	mov    esi,eax
10007a32:	jbe    0x10007a40
10007a34:	mov    eax,DWORD PTR [esi+0x18]
10007a37:	sub    eax,ecx
10007a39:	add    eax,ebx
10007a3b:	call   0x10007bd7
10007a40:	mov    ecx,DWORD PTR [edi+0x4]
10007a43:	mov    eax,DWORD PTR [edi]
10007a45:	mov    edx,DWORD PTR [esi+0x18]
10007a48:	sub    ebx,ecx
10007a4a:	add    ecx,eax
10007a4c:	mov    DWORD PTR [ebp-0x4],ecx
10007a4f:	sub    edx,DWORD PTR [ebp-0x4]
10007a52:	mov    ecx,DWORD PTR [esi+0x14]
10007a55:	push   edx
10007a56:	mov    edx,DWORD PTR [ebp-0x4]
10007a59:	add    edx,ecx
10007a5b:	add    ecx,eax
10007a5d:	add    ecx,DWORD PTR [ebp+0xc]
10007a60:	push   edx
10007a61:	push   ecx
10007a62:	call   0x10045880
10007a67:	push   DWORD PTR [ebp+0xc]
10007a6a:	mov    eax,DWORD PTR [esi+0x14]
10007a6d:	add    eax,DWORD PTR [edi]
10007a6f:	push   DWORD PTR [ebp+0x8]
10007a72:	push   eax
10007a73:	call   0x10045880
10007a78:	add    esp,0x18
10007a7b:	push   ebx
10007a7c:	push   DWORD PTR [edi]
10007a7e:	mov    eax,esi
10007a80:	call   0x10007b6f
10007a85:	mov    eax,DWORD PTR [ebp+0xc]
10007a88:	mov    DWORD PTR [edi+0x4],eax
10007a8b:	add    DWORD PTR [esi+0x18],ebx
10007a8e:	pop    esi
10007a8f:	pop    ebx
10007a90:	leave  
10007a91:	ret    0x8
10007a94:	push   ebp
10007a95:	mov    ebp,esp
10007a97:	sub    esp,0xc
10007a9a:	push   esi
10007a9b:	mov    esi,eax
10007a9d:	mov    edx,DWORD PTR [esi+0x8]
10007aa0:	add    esi,0x4
10007aa3:	test   edx,edx
10007aa5:	push   edi
10007aa6:	jne    0x10007aac
10007aa8:	xor    ecx,ecx
10007aaa:	jmp    0x10007ab4
10007aac:	mov    ecx,DWORD PTR [esi+0x8]
10007aaf:	sub    ecx,edx
10007ab1:	sar    ecx,0x2
10007ab4:	test   edx,edx
10007ab6:	je     0x10007ad4
10007ab8:	mov    eax,DWORD PTR [esi+0xc]
10007abb:	sub    eax,edx
10007abd:	sar    eax,0x2
10007ac0:	cmp    ecx,eax
10007ac2:	jae    0x10007ad4
10007ac4:	mov    eax,DWORD PTR [esi+0x8]
10007ac7:	mov    ecx,DWORD PTR [ebp+0x8]
10007aca:	mov    DWORD PTR [eax],ecx
10007acc:	add    eax,0x4
10007acf:	mov    DWORD PTR [esi+0x8],eax
10007ad2:	jmp    0x10007af1
10007ad4:	mov    edi,DWORD PTR [esi+0x8]
10007ad7:	cmp    edx,edi
10007ad9:	jbe    0x10007ae0
10007adb:	call   0x10043605
10007ae0:	push   edi
10007ae1:	push   esi
10007ae2:	lea    eax,[ebp+0x8]
10007ae5:	push   eax
10007ae6:	lea    eax,[ebp-0xc]
10007ae9:	push   eax
10007aea:	mov    eax,esi
10007aec:	call   0x1000a419
10007af1:	pop    edi
10007af2:	pop    esi
10007af3:	leave  
10007af4:	ret    0x4
10007af7:	push   ebx
10007af8:	push   esi
10007af9:	mov    esi,eax
10007afb:	add    esi,0x4
10007afe:	push   edi
10007aff:	mov    edi,DWORD PTR [esi+0x4]
10007b02:	cmp    edi,DWORD PTR [esi+0x8]
10007b05:	jbe    0x10007b0c
10007b07:	call   0x10043605
10007b0c:	mov    ebx,DWORD PTR [esi+0x8]
10007b0f:	cmp    DWORD PTR [esi+0x4],ebx
10007b12:	jbe    0x10007b19
10007b14:	call   0x10043605
10007b19:	cmp    esi,esi
10007b1b:	je     0x10007b22
10007b1d:	call   0x10043605
10007b22:	cmp    edi,ebx
10007b24:	je     0x10007b69
10007b26:	cmp    edi,DWORD PTR [esi+0x8]
10007b29:	jb     0x10007b30
10007b2b:	call   0x10043605
10007b30:	mov    eax,DWORD PTR [edi]
10007b32:	cmp    eax,DWORD PTR [esp+0x10]
10007b36:	je     0x10007b47
10007b38:	cmp    edi,DWORD PTR [esi+0x8]
10007b3b:	jb     0x10007b42
10007b3d:	call   0x10043605
10007b42:	add    edi,0x4
10007b45:	jmp    0x10007b0c
10007b47:	mov    eax,DWORD PTR [esi+0x8]
10007b4a:	lea    ecx,[edi+0x4]
10007b4d:	sub    eax,ecx
10007b4f:	sar    eax,0x2
10007b52:	test   eax,eax
10007b54:	jle    0x10007b65
10007b56:	shl    eax,0x2
10007b59:	push   eax
10007b5a:	push   ecx
10007b5b:	push   eax
10007b5c:	push   edi
10007b5d:	call   0x10042fe7
10007b62:	add    esp,0x10
10007b65:	add    DWORD PTR [esi+0x8],0xfffffffc
10007b69:	pop    edi
10007b6a:	pop    esi
10007b6b:	pop    ebx
10007b6c:	ret    0x4
10007b6f:	push   ebp
10007b70:	mov    ebp,esp
10007b72:	and    esp,0xfffffff8
10007b75:	push   ecx
10007b76:	push   ebx
10007b77:	push   esi
10007b78:	mov    esi,eax
10007b7a:	add    esi,0x4
10007b7d:	push   edi
10007b7e:	mov    edi,DWORD PTR [esi+0x4]
10007b81:	cmp    edi,DWORD PTR [esi+0x8]
10007b84:	jbe    0x10007b8b
10007b86:	call   0x10043605
10007b8b:	mov    ebx,DWORD PTR [esi+0x8]
10007b8e:	cmp    DWORD PTR [esi+0x4],ebx
10007b91:	jbe    0x10007b98
10007b93:	call   0x10043605
10007b98:	cmp    esi,esi
10007b9a:	je     0x10007ba1
10007b9c:	call   0x10043605
10007ba1:	cmp    edi,ebx
10007ba3:	je     0x10007bce
10007ba5:	cmp    edi,DWORD PTR [esi+0x8]
10007ba8:	jb     0x10007baf
10007baa:	call   0x10043605
10007baf:	mov    eax,DWORD PTR [edi]
10007bb1:	mov    ecx,DWORD PTR [eax]
10007bb3:	cmp    ecx,DWORD PTR [ebp+0x8]
10007bb6:	jbe    0x10007bbf
10007bb8:	mov    edx,DWORD PTR [ebp+0xc]
10007bbb:	add    ecx,edx
10007bbd:	mov    DWORD PTR [eax],ecx
10007bbf:	cmp    edi,DWORD PTR [esi+0x8]
10007bc2:	jb     0x10007bc9
10007bc4:	call   0x10043605
10007bc9:	add    edi,0x4
10007bcc:	jmp    0x10007b8b
10007bce:	pop    edi
10007bcf:	pop    esi
10007bd0:	pop    ebx
10007bd1:	mov    esp,ebp
10007bd3:	pop    ebp
10007bd4:	ret    0x8
10007bd7:	mov    ecx,DWORD PTR [esi+0x1c]
10007bda:	cmp    eax,ecx
10007bdc:	jbe    0x10007c22
10007bde:	shr    eax,0xa
10007be1:	inc    eax
10007be2:	shl    eax,0xa
10007be5:	push   ebx
10007be6:	mov    ebx,eax
10007be8:	cmp    ebx,ecx
10007bea:	je     0x10007c21
10007bec:	push   edi
10007bed:	push   ebx
10007bee:	call   0x100438d7
10007bf3:	push   DWORD PTR [esi+0x18]
10007bf6:	mov    edi,eax
10007bf8:	push   DWORD PTR [esi+0x14]
10007bfb:	push   edi
10007bfc:	call   0x10045340
10007c01:	mov    eax,DWORD PTR [esi+0x14]
10007c04:	add    esp,0x10
10007c07:	cmp    edi,eax
10007c09:	je     0x10007c12
10007c0b:	push   eax
10007c0c:	call   0x10042fe2
10007c11:	pop    ecx
10007c12:	mov    DWORD PTR [esi+0x14],edi
10007c15:	push   0x0
10007c17:	mov    DWORD PTR [esi+0x1c],ebx
10007c1a:	call   0x10042fe2
10007c1f:	pop    ecx
10007c20:	pop    edi
10007c21:	pop    ebx
10007c22:	ret    
10007c23:	push   0x0
10007c25:	mov    eax,0x100601ad
10007c2a:	call   0x10059df5
10007c2f:	mov    esi,DWORD PTR [ebp+0x8]
10007c32:	push   0x8
10007c34:	call   0x10043196
10007c39:	test   eax,eax
10007c3b:	pop    ecx
10007c3c:	je     0x10007c4b
10007c3e:	mov    ecx,DWORD PTR [ebp+0x10]
10007c41:	mov    DWORD PTR [eax],ecx
10007c43:	mov    ecx,DWORD PTR [ebp+0x14]
10007c46:	mov    DWORD PTR [eax+0x4],ecx
10007c49:	jmp    0x10007c4d
10007c4b:	xor    eax,eax
10007c4d:	mov    DWORD PTR [esi],eax
10007c4f:	push   DWORD PTR [ebp+0xc]
10007c52:	and    DWORD PTR [ebp-0x4],0x0
10007c56:	lea    ecx,[esi+0x4]
10007c59:	call   0x100011c9
10007c5e:	and    DWORD PTR [esi+0x20],0x0
10007c62:	mov    eax,esi
10007c64:	call   0x10059ecd
10007c69:	ret    0x10
10007c6c:	push   0x4
10007c6e:	mov    eax,0x10060ac8
10007c73:	call   0x10059df5
10007c78:	mov    esi,ecx
10007c7a:	push   0x24
10007c7c:	call   0x10043196
10007c81:	pop    ecx
10007c82:	mov    DWORD PTR [ebp-0x10],eax
10007c85:	xor    eax,eax
10007c87:	mov    DWORD PTR [ebp-0x4],eax
10007c8a:	cmp    DWORD PTR [ebp-0x10],eax
10007c8d:	je     0x10007ca2
10007c8f:	mov    eax,DWORD PTR [esi]
10007c91:	push   DWORD PTR [eax+0x4]
10007c94:	add    esi,0x4
10007c97:	push   DWORD PTR [eax]
10007c99:	push   esi
10007c9a:	push   DWORD PTR [ebp-0x10]
10007c9d:	call   0x10007c23
10007ca2:	call   0x10059ecd
10007ca7:	ret    
10007ca8:	push   ebp
10007ca9:	mov    ebp,esp
10007cab:	push   ecx
10007cac:	mov    ecx,DWORD PTR [ebp+0x8]
10007caf:	and    DWORD PTR [ebp-0x4],0x0
10007cb3:	add    eax,0x4
10007cb6:	push   eax
10007cb7:	call   0x100011c9
10007cbc:	mov    eax,DWORD PTR [ebp+0x8]
10007cbf:	leave  
10007cc0:	ret    0x4
10007cc3:	push   ecx
10007cc4:	mov    ecx,DWORD PTR [esp+0x8]
10007cc8:	push   edi
10007cc9:	lea    edi,[esi+0x4]
10007ccc:	mov    eax,edi
10007cce:	call   0x10006803
10007cd3:	test   al,al
10007cd5:	je     0x10007cdb
10007cd7:	xor    al,al
10007cd9:	jmp    0x10007d0d
10007cdb:	push   0xffffffff
10007cdd:	push   0x0
10007cdf:	push   DWORD PTR [esp+0x14]
10007ce3:	mov    ecx,edi
10007ce5:	call   0x10001241
10007cea:	mov    eax,DWORD PTR [esi+0x20]
10007ced:	test   eax,eax
10007cef:	je     0x10007d0b
10007cf1:	cmp    DWORD PTR [edi+0x18],0x10
10007cf5:	mov    ecx,DWORD PTR [esi+0x18]
10007cf8:	jb     0x10007cff
10007cfa:	mov    edi,DWORD PTR [edi+0x4]
10007cfd:	jmp    0x10007d02
10007cff:	add    edi,0x4
10007d02:	push   ecx
10007d03:	push   edi
10007d04:	mov    edi,DWORD PTR [esi]
10007d06:	call   0x10007a22
10007d0b:	mov    al,0x1
10007d0d:	pop    edi
10007d0e:	pop    ecx
10007d0f:	ret    0x4
10007d12:	push   ecx
10007d13:	mov    eax,DWORD PTR [esi]
10007d15:	add    DWORD PTR [eax],ecx
10007d17:	push   DWORD PTR [esi]
10007d19:	mov    eax,edi
10007d1b:	call   0x10007a94
10007d20:	mov    DWORD PTR [esi+0x20],edi
10007d23:	pop    ecx
10007d24:	ret    
10007d25:	call   0x1000dc5d
10007d2a:	lea    ecx,[esi+0x4]
10007d2d:	mov    DWORD PTR [ecx],eax
10007d2f:	mov    BYTE PTR [eax+0x39],0x1
10007d33:	mov    eax,DWORD PTR [ecx]
10007d35:	mov    DWORD PTR [eax+0x4],eax
10007d38:	mov    eax,DWORD PTR [ecx]
10007d3a:	mov    DWORD PTR [eax],eax
10007d3c:	mov    ecx,DWORD PTR [ecx]
10007d3e:	xor    eax,eax
10007d40:	mov    DWORD PTR [ecx+0x8],ecx
10007d43:	mov    DWORD PTR [esi+0x8],eax
10007d46:	mov    DWORD PTR [esi+0xc],eax
10007d49:	mov    DWORD PTR [esi+0x10],eax
10007d4c:	mov    eax,esi
10007d4e:	ret    
10007d4f:	push   esi
10007d50:	push   0x8
10007d52:	call   0x10043196
10007d57:	xor    esi,esi
10007d59:	cmp    eax,esi
10007d5b:	pop    ecx
10007d5c:	je     0x10007d69
10007d5e:	mov    ecx,DWORD PTR [esp+0x8]
10007d62:	mov    DWORD PTR [eax+0x4],esi
10007d65:	mov    DWORD PTR [eax],ecx
10007d67:	mov    esi,eax
10007d69:	mov    eax,DWORD PTR [edi+0x10]
10007d6c:	cmp    esi,eax
10007d6e:	je     0x10007d77
10007d70:	push   eax
10007d71:	call   0x10042fe2
10007d76:	pop    ecx
10007d77:	mov    DWORD PTR [edi+0x10],esi
10007d7a:	pop    esi
10007d7b:	ret    0x4
10007d7e:	push   ebp
10007d7f:	mov    ebp,esp
10007d81:	and    esp,0xfffffff8
10007d84:	sub    esp,0x10
10007d87:	mov    eax,DWORD PTR [ebx+0x4]
10007d8a:	mov    eax,DWORD PTR [eax]
10007d8c:	push   esi
10007d8d:	push   edi
10007d8e:	mov    DWORD PTR [esp+0xc],eax
10007d92:	mov    DWORD PTR [esp+0x8],ebx
10007d96:	mov    DWORD PTR [esp+0x10],ebx
10007d9a:	mov    eax,DWORD PTR [ebx+0x4]
10007d9d:	lea    edi,[esp+0x10]
10007da1:	lea    esi,[esp+0x8]
10007da5:	mov    DWORD PTR [esp+0x14],eax
10007da9:	call   0x10004b0c
10007dae:	test   al,al
10007db0:	jne    0x10007e01
10007db2:	xor    edi,edi
10007db4:	call   0x1001426e
10007db9:	add    eax,0x1c
10007dbc:	call   0x1000a1e7
10007dc1:	test   eax,eax
10007dc3:	je     0x10007df6
10007dc5:	lea    esi,[esp+0x8]
10007dc9:	call   0x1001426e
10007dce:	push   edi
10007dcf:	lea    esi,[eax+0x1c]
10007dd2:	call   0x10018ff4
10007dd7:	push   DWORD PTR [eax+0x1c]
10007dda:	call   0x10042fe2
10007ddf:	pop    ecx
10007de0:	lea    esi,[esp+0x8]
10007de4:	inc    edi
10007de5:	call   0x1001426e
10007dea:	add    eax,0x1c
10007ded:	call   0x1000a1e7
10007df2:	cmp    edi,eax
10007df4:	jne    0x10007dc5
10007df6:	lea    esi,[esp+0x8]
10007dfa:	call   0x1000a19a
10007dff:	jmp    0x10007d9a
10007e01:	push   DWORD PTR [ebx+0x10]
10007e04:	call   0x10042fe2
10007e09:	pop    ecx
10007e0a:	mov    eax,ebx
10007e0c:	call   0x1000a643
10007e11:	pop    edi
10007e12:	pop    esi
10007e13:	mov    esp,ebp
10007e15:	pop    ebp
10007e16:	ret    
10007e17:	push   0x1c
10007e19:	mov    eax,0x1006291d
10007e1e:	call   0x10059df5
10007e23:	mov    eax,DWORD PTR [ebp+0x8]
10007e26:	mov    ecx,DWORD PTR [ebp+0xc]
10007e29:	xor    ebx,ebx
10007e2b:	mov    DWORD PTR [eax+0xc],ebx
10007e2e:	mov    eax,DWORD PTR [ecx+0x4]
10007e31:	mov    eax,DWORD PTR [eax]
10007e33:	mov    DWORD PTR [ebp-0x1c],eax
10007e36:	mov    DWORD PTR [ebp-0x20],ecx
10007e39:	mov    DWORD PTR [ebp-0x28],ecx
10007e3c:	mov    eax,DWORD PTR [ecx+0x4]
10007e3f:	lea    edi,[ebp-0x28]
10007e42:	lea    esi,[ebp-0x20]
10007e45:	mov    DWORD PTR [ebp-0x24],eax
10007e48:	call   0x10004b0c
10007e4d:	test   al,al
10007e4f:	jne    0x10007f53
10007e55:	mov    DWORD PTR [ebp-0x10],ebx
10007e58:	call   0x1001426e
10007e5d:	add    eax,0x1c
10007e60:	call   0x1000a1e7
10007e65:	test   eax,eax
10007e67:	je     0x10007f43
10007e6d:	mov    DWORD PTR [ebp-0x14],ebx
10007e70:	push   DWORD PTR [ebp-0x10]
10007e73:	lea    esi,[ebp-0x20]
10007e76:	mov    DWORD PTR [ebp-0x4],ebx
10007e79:	call   0x1001426e
10007e7e:	mov    esi,eax
10007e80:	add    esi,0x1c
10007e83:	call   0x10018ff4
10007e88:	cmp    DWORD PTR [eax+0x1c],ebx
10007e8b:	je     0x10007ee9
10007e8d:	push   0x8
10007e8f:	call   0x10043196
10007e94:	mov    edi,eax
10007e96:	cmp    edi,ebx
10007e98:	pop    ecx
10007e99:	je     0x10007ed9
10007e9b:	push   DWORD PTR [ebp-0x10]
10007e9e:	lea    esi,[ebp-0x20]
10007ea1:	call   0x1001426e
10007ea6:	mov    esi,eax
10007ea8:	add    esi,0x1c
10007eab:	call   0x10018ff4
10007eb0:	mov    eax,DWORD PTR [eax+0x1c]
10007eb3:	push   DWORD PTR [ebp-0x10]
10007eb6:	mov    ebx,DWORD PTR [eax+0x4]
10007eb9:	lea    esi,[ebp-0x20]
10007ebc:	call   0x1001426e
10007ec1:	mov    esi,eax
10007ec3:	add    esi,0x1c
10007ec6:	call   0x10018ff4
10007ecb:	mov    eax,DWORD PTR [eax+0x1c]
10007ece:	mov    eax,DWORD PTR [eax]
10007ed0:	mov    DWORD PTR [edi+0x4],ebx
10007ed3:	mov    DWORD PTR [edi],eax
10007ed5:	xor    ebx,ebx
10007ed7:	jmp    0x10007edb
10007ed9:	xor    edi,edi
10007edb:	cmp    edi,ebx
10007edd:	je     0x10007ee6
10007edf:	push   ebx
10007ee0:	call   0x10042fe2
10007ee5:	pop    ecx
10007ee6:	mov    DWORD PTR [ebp-0x14],edi
10007ee9:	push   ecx
10007eea:	mov    ecx,DWORD PTR [ebp-0x14]
10007eed:	mov    eax,esp
10007eef:	mov    DWORD PTR [ebp-0x18],esp
10007ef2:	push   DWORD PTR [ebp-0x10]
10007ef5:	lea    esi,[ebp-0x20]
10007ef8:	mov    DWORD PTR [ebp-0x14],ebx
10007efb:	mov    DWORD PTR [eax],ecx
10007efd:	call   0x1001426e
10007f02:	mov    esi,eax
10007f04:	add    esi,0x1c
10007f07:	call   0x10018ff4
10007f0c:	push   eax
10007f0d:	lea    esi,[ebp-0x20]
10007f10:	call   0x1001426e
10007f15:	mov    ecx,DWORD PTR [ebp+0x8]
10007f18:	mov    edx,eax
10007f1a:	call   0x1000813f
10007f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
10007f23:	push   ebx
10007f24:	call   0x10042fe2
10007f29:	inc    DWORD PTR [ebp-0x10]
10007f2c:	pop    ecx
10007f2d:	call   0x1001426e
10007f32:	add    eax,0x1c
10007f35:	call   0x1000a1e7
10007f3a:	cmp    DWORD PTR [ebp-0x10],eax
10007f3d:	jne    0x10007e6d
10007f43:	lea    esi,[ebp-0x20]
10007f46:	call   0x1000a19a
10007f4b:	mov    ecx,DWORD PTR [ebp+0xc]
10007f4e:	jmp    0x10007e3c
10007f53:	call   0x10059ecd
10007f58:	ret    0x8
10007f5b:	push   ebp
10007f5c:	mov    ebp,esp
10007f5e:	mov    eax,DWORD PTR [ebp+0x8]
10007f61:	mov    ecx,DWORD PTR [eax+0x8]
10007f64:	mov    edx,DWORD PTR [ebp+0xc]
10007f67:	sub    esp,0x2c
10007f6a:	cmp    ecx,DWORD PTR [edx+0x8]
10007f6d:	push   ebx
10007f6e:	push   esi
10007f6f:	push   edi
10007f70:	je     0x10007f79
10007f72:	xor    al,al
10007f74:	jmp    0x10008055
10007f79:	mov    ecx,DWORD PTR [eax+0x4]
10007f7c:	mov    ecx,DWORD PTR [ecx]
10007f7e:	mov    DWORD PTR [ebp-0xc],ecx
10007f81:	mov    DWORD PTR [ebp-0x10],eax
10007f84:	mov    DWORD PTR [ebp-0x18],eax
10007f87:	mov    eax,DWORD PTR [eax+0x4]
10007f8a:	lea    edi,[ebp-0x18]
10007f8d:	lea    esi,[ebp-0x10]
10007f90:	mov    DWORD PTR [ebp-0x14],eax
10007f93:	call   0x10004b0c
10007f98:	test   al,al
10007f9a:	jne    0x10008053
10007fa0:	call   0x1001426e
10007fa5:	mov    ebx,DWORD PTR [ebp+0xc]
10007fa8:	push   eax
10007fa9:	lea    eax,[ebp-0x28]
10007fac:	push   eax
10007fad:	call   0x1000a0ba
10007fb2:	mov    eax,ebx
10007fb4:	mov    ecx,DWORD PTR [eax+0x4]
10007fb7:	lea    edi,[ebp-0x20]
10007fba:	lea    esi,[ebp-0x28]
10007fbd:	mov    DWORD PTR [ebp-0x1c],ecx
10007fc0:	mov    DWORD PTR [ebp-0x20],eax
10007fc3:	call   0x10004b0c
10007fc8:	test   al,al
10007fca:	jne    0x10007f72
10007fcc:	lea    esi,[ebp-0x10]
10007fcf:	call   0x1001426e
10007fd4:	mov    edi,eax
10007fd6:	lea    esi,[ebp-0x28]
10007fd9:	add    edi,0x1c
10007fdc:	call   0x1001426e
10007fe1:	mov    ebx,eax
10007fe3:	add    ebx,0x1c
10007fe6:	mov    eax,ebx
10007fe8:	call   0x1000a1e7
10007fed:	mov    esi,eax
10007fef:	mov    eax,edi
10007ff1:	call   0x1000a1e7
10007ff6:	cmp    eax,esi
10007ff8:	jne    0x10007f72
10007ffe:	and    DWORD PTR [ebp-0x4],0x0
10008002:	mov    eax,edi
10008004:	call   0x1000a1e7
10008009:	test   eax,eax
1000800b:	je     0x10008043
1000800d:	push   DWORD PTR [ebp-0x4]
10008010:	mov    esi,ebx
10008012:	call   0x10018ff4
10008017:	push   DWORD PTR [ebp-0x4]
1000801a:	mov    esi,edi
1000801c:	mov    DWORD PTR [ebp-0x8],eax
1000801f:	call   0x10018ff4
10008024:	mov    ecx,DWORD PTR [ebp-0x8]
10008027:	call   0x10006803
1000802c:	test   al,al
1000802e:	je     0x10007f72
10008034:	inc    DWORD PTR [ebp-0x4]
10008037:	mov    eax,edi
10008039:	call   0x1000a1e7
1000803e:	cmp    DWORD PTR [ebp-0x4],eax
10008041:	jne    0x1000800d
10008043:	lea    esi,[ebp-0x10]
10008046:	call   0x1000a19a
1000804b:	mov    eax,DWORD PTR [ebp+0x8]
1000804e:	jmp    0x10007f87
10008053:	mov    al,0x1
10008055:	pop    edi
10008056:	pop    esi
10008057:	pop    ebx
10008058:	leave  
10008059:	ret    0x8
1000805c:	push   0x3c
1000805e:	mov    eax,0x100628f0
10008063:	call   0x10059e5e
10008068:	mov    edi,ecx
1000806a:	push   ebx
1000806b:	push   edi
1000806c:	mov    DWORD PTR [ebp-0x40],edi
1000806f:	call   0x10007f5b
10008074:	test   al,al
10008076:	je     0x1000807f
10008078:	xor    al,al
1000807a:	jmp    0x10008139
1000807f:	call   0x100086b4
10008084:	mov    eax,DWORD PTR [ebx+0x4]
10008087:	mov    eax,DWORD PTR [eax]
10008089:	mov    DWORD PTR [ebp-0x38],eax
1000808c:	mov    DWORD PTR [ebp-0x3c],ebx
1000808f:	mov    DWORD PTR [ebp-0x48],ebx
10008092:	mov    eax,DWORD PTR [ebx+0x4]
10008095:	lea    edi,[ebp-0x48]
10008098:	lea    esi,[ebp-0x3c]
1000809b:	mov    DWORD PTR [ebp-0x44],eax
1000809e:	call   0x10004b0c
100080a3:	test   al,al
100080a5:	jne    0x10008137
100080ab:	xor    edi,edi
100080ad:	push   edi
100080ae:	mov    DWORD PTR [ebp-0x34],edi
100080b1:	call   0x1001426e
100080b6:	push   eax
100080b7:	lea    eax,[ebp-0x30]
100080ba:	push   eax
100080bb:	mov    eax,ebx
100080bd:	call   0x10008803
100080c2:	mov    DWORD PTR [ebp-0x4],edi
100080c5:	mov    edi,0x1006dd18
100080ca:	jmp    0x1000810d
100080cc:	push   0x1
100080ce:	lea    esi,[ebp-0x3c]
100080d1:	call   0x1001426e
100080d6:	mov    edx,DWORD PTR [ebp-0x40]
100080d9:	push   eax
100080da:	lea    ecx,[ebp-0x30]
100080dd:	call   0x10008298
100080e2:	inc    DWORD PTR [ebp-0x34]
100080e5:	or     DWORD PTR [ebp-0x4],0xffffffff
100080e9:	push   0x0
100080eb:	push   0x1
100080ed:	lea    ecx,[ebp-0x30]
100080f0:	call   0x100012f0
100080f5:	push   DWORD PTR [ebp-0x34]
100080f8:	call   0x1001426e
100080fd:	push   eax
100080fe:	lea    eax,[ebp-0x30]
10008101:	push   eax
10008102:	mov    eax,ebx
10008104:	call   0x10008803
10008109:	and    DWORD PTR [ebp-0x4],0x0
1000810d:	push   edi
1000810e:	lea    esi,[ebp-0x30]
10008111:	call   0x10006825
10008116:	test   al,al
10008118:	pop    ecx
10008119:	je     0x100080cc
1000811b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000811f:	push   0x0
10008121:	push   0x1
10008123:	mov    ecx,esi
10008125:	call   0x100012f0
1000812a:	lea    esi,[ebp-0x3c]
1000812d:	call   0x1000a19a
10008132:	jmp    0x10008092
10008137:	mov    al,0x1
10008139:	call   0x10059ee1
1000813e:	ret    
1000813f:	push   0x9c
10008144:	mov    eax,0x100628c0
10008149:	call   0x10059e5e
1000814e:	mov    edi,DWORD PTR [ebp+0x8]
10008151:	mov    ebx,ecx
10008153:	mov    esi,edx
10008155:	mov    DWORD PTR [ebp-0x34],ebx
10008158:	mov    DWORD PTR [ebp-0x38],esi
1000815b:	and    DWORD PTR [ebp-0x4],0x0
1000815f:	push   0x0
10008161:	lea    ecx,[ebp-0x30]
10008164:	mov    DWORD PTR [ebp-0x18],0xf
1000816b:	call   0x1000141c
10008170:	push   0xffffffff
10008172:	push   0x0
10008174:	push   edi
10008175:	lea    ecx,[ebp-0x30]
10008178:	mov    BYTE PTR [ebp-0x4],0x1
1000817c:	call   0x10001241
10008181:	mov    eax,DWORD PTR [ebp+0xc]
10008184:	mov    DWORD PTR [ebp-0x14],eax
10008187:	push   esi
10008188:	lea    eax,[ebp-0x40]
1000818b:	push   eax
1000818c:	call   0x1000a0ba
10008191:	mov    eax,DWORD PTR [ebx+0x4]
10008194:	lea    edi,[ebp-0x48]
10008197:	lea    esi,[ebp-0x40]
1000819a:	mov    DWORD PTR [ebp-0x44],eax
1000819d:	mov    DWORD PTR [ebp-0x48],ebx
100081a0:	call   0x10004b0c
100081a5:	test   al,al
100081a7:	je     0x10008252
100081ad:	sub    esp,0x10
100081b0:	mov    eax,esp
100081b2:	xor    ecx,ecx
100081b4:	mov    DWORD PTR [ebp-0x50],esp
100081b7:	mov    DWORD PTR [eax+0x4],ecx
100081ba:	mov    DWORD PTR [eax+0x8],ecx
100081bd:	mov    DWORD PTR [eax+0xc],ecx
100081c0:	sub    esp,0x1c
100081c3:	mov    BYTE PTR [ebp-0x4],0x2
100081c7:	mov    ecx,esp
100081c9:	mov    DWORD PTR [ebp-0x44],esp
100081cc:	push   DWORD PTR [ebp-0x38]
100081cf:	call   0x100011c9
100081d4:	lea    edi,[ebp-0xa8]
100081da:	mov    BYTE PTR [ebp-0x4],0x1
100081de:	call   0x1000aad7
100081e3:	add    esp,0x2c
100081e6:	lea    ecx,[ebp-0x7c]
100081e9:	push   ecx
100081ea:	mov    edi,eax
100081ec:	mov    BYTE PTR [ebp-0x4],0x3
100081f0:	call   0x1000ab26
100081f5:	lea    eax,[ebp-0x7c]
100081f8:	push   eax
100081f9:	push   ebx
100081fa:	lea    ebx,[ebp-0x4c]
100081fd:	mov    BYTE PTR [ebp-0x4],0x4
10008201:	call   0x10009d59
10008206:	lea    esi,[ebp-0x60]
10008209:	call   0x100047a5
1000820e:	push   0x0
10008210:	push   0x1
10008212:	lea    ecx,[ebp-0x7c]
10008215:	call   0x100012f0
1000821a:	lea    esi,[ebp-0x8c]
10008220:	mov    BYTE PTR [ebp-0x4],0x1
10008224:	call   0x100047a5
10008229:	push   0x0
1000822b:	push   0x1
1000822d:	lea    ecx,[ebp-0xa8]
10008233:	call   0x100012f0
10008238:	push   DWORD PTR [ebp-0x38]
1000823b:	mov    ebx,DWORD PTR [ebp-0x34]
1000823e:	lea    eax,[ebp-0x48]
10008241:	push   eax
10008242:	call   0x1000a0ba
10008247:	mov    ecx,DWORD PTR [eax]
10008249:	mov    eax,DWORD PTR [eax+0x4]
1000824c:	mov    DWORD PTR [ebp-0x40],ecx
1000824f:	mov    DWORD PTR [ebp-0x3c],eax
10008252:	lea    eax,[ebp-0x30]
10008255:	push   eax
10008256:	lea    esi,[ebp-0x40]
10008259:	call   0x1001426e
1000825e:	add    eax,0x1c
10008261:	call   0x1000a1fa
10008266:	push   0x0
10008268:	push   0x1
1000826a:	lea    ecx,[ebp-0x30]
1000826d:	call   0x100012f0
10008272:	push   0x0
10008274:	call   0x10042fe2
10008279:	pop    ecx
1000827a:	call   0x10059ee1
1000827f:	ret    0x8
10008282:	push   esi
10008283:	lea    esi,[edi+0x1c]
10008286:	call   0x100047a5
1000828b:	push   0x0
1000828d:	push   0x1
1000828f:	mov    ecx,edi
10008291:	call   0x100012f0
10008296:	pop    esi
10008297:	ret    
10008298:	push   ebp
10008299:	mov    ebp,esp
1000829b:	and    esp,0xfffffff8
1000829e:	push   0xffffffff
100082a0:	push   0x10062867
100082a5:	mov    eax,fs:0x0
100082ab:	push   eax
100082ac:	sub    esp,0xd0
100082b2:	mov    eax,ds:0x100801ac
100082b7:	xor    eax,esp
100082b9:	mov    DWORD PTR [esp+0xc8],eax
100082c0:	push   ebx
100082c1:	push   esi
100082c2:	push   edi
100082c3:	mov    eax,ds:0x100801ac
100082c8:	xor    eax,esp
100082ca:	push   eax
100082cb:	lea    eax,[esp+0xe0]
100082d2:	mov    fs:0x0,eax
100082d8:	mov    eax,DWORD PTR [ebp+0x8]
100082db:	push   eax
100082dc:	mov    DWORD PTR [esp+0x14],eax
100082e0:	lea    eax,[esp+0x2c]
100082e4:	mov    ebx,edx
100082e6:	push   eax
100082e7:	mov    DWORD PTR [esp+0x28],ebx
100082eb:	mov    DWORD PTR [esp+0x2c],ecx
100082ef:	call   0x1000a0ba
100082f4:	mov    eax,DWORD PTR [ebx+0x4]
100082f7:	lea    edi,[esp+0x18]
100082fb:	lea    esi,[esp+0x28]
100082ff:	mov    DWORD PTR [esp+0x1c],eax
10008303:	mov    DWORD PTR [esp+0x18],ebx
10008307:	call   0x10004b0c
1000830c:	xor    ebx,ebx
1000830e:	test   al,al
10008310:	jne    0x1000831b
10008312:	cmp    BYTE PTR [ebp+0xc],bl
10008315:	je     0x1000857b
1000831b:	push   DWORD PTR [esp+0x24]
1000831f:	lea    eax,[esp+0xa0]
10008326:	push   DWORD PTR [esp+0x14]
1000832a:	push   eax
1000832b:	call   0x100088ca
10008330:	add    esp,0xc
10008333:	mov    esi,DWORD PTR [esp+0x20]
10008337:	mov    DWORD PTR [esp+0xe8],ebx
1000833e:	mov    eax,DWORD PTR [esi+0xc]
10008341:	cmp    eax,ebx
10008343:	je     0x1000836d
10008345:	cmp    DWORD PTR [esp+0xb4],0x10
1000834d:	mov    ecx,DWORD PTR [esp+0xa0]
10008354:	jae    0x1000835d
10008356:	lea    ecx,[esp+0xa0]
1000835d:	push   DWORD PTR [esp+0xb0]
10008364:	mov    edi,DWORD PTR [esi+0x10]
10008367:	push   ecx
10008368:	call   0x10007a22
1000836d:	mov    DWORD PTR [esp+0x14],ebx
10008371:	mov    BYTE PTR [esp+0xe8],0x1
10008379:	cmp    DWORD PTR [esi+0xc],ebx
1000837c:	je     0x100083ac
1000837e:	push   0x8
10008380:	call   0x10043196
10008385:	cmp    eax,ebx
10008387:	pop    ecx
10008388:	je     0x1000839b
1000838a:	mov    ecx,DWORD PTR [esi+0x10]
1000838d:	mov    edx,DWORD PTR [ecx+0x4]
10008390:	add    edx,DWORD PTR [ecx]
10008392:	mov    DWORD PTR [eax+0x4],ebx
10008395:	mov    DWORD PTR [eax],edx
10008397:	mov    edi,eax
10008399:	jmp    0x1000839d
1000839b:	xor    edi,edi
1000839d:	cmp    edi,ebx
1000839f:	je     0x100083a8
100083a1:	push   ebx
100083a2:	call   0x10042fe2
100083a7:	pop    ecx
100083a8:	mov    DWORD PTR [esp+0x14],edi
100083ac:	push   ebx
100083ad:	lea    ecx,[esp+0xbc]
100083b4:	mov    DWORD PTR [esp+0xd4],0xf
100083bf:	call   0x1000141c
100083c4:	push   0xffffffff
100083c6:	push   ebx
100083c7:	mov    BYTE PTR [esp+0xf0],0x2
100083cf:	push   DWORD PTR [esp+0x2c]
100083d3:	lea    ecx,[esp+0xc4]
100083da:	call   0x10001241
100083df:	mov    eax,DWORD PTR [esi+0x10]
100083e2:	mov    DWORD PTR [esp+0xd4],eax
100083e9:	mov    DWORD PTR [esp+0x38],ebx
100083ed:	mov    DWORD PTR [esp+0x3c],ebx
100083f1:	mov    DWORD PTR [esp+0x40],ebx
100083f5:	push   DWORD PTR [esp+0x10]
100083f9:	lea    eax,[esp+0x1c]
100083fd:	push   eax
100083fe:	mov    ebx,esi
10008400:	mov    BYTE PTR [esp+0xf0],0x3
10008408:	call   0x1000a0ba
1000840d:	mov    eax,DWORD PTR [esi+0x4]
10008410:	mov    DWORD PTR [esp+0x28],esi
10008414:	lea    edi,[esp+0x28]
10008418:	lea    esi,[esp+0x18]
1000841c:	mov    DWORD PTR [esp+0x2c],eax
10008420:	call   0x10004b0c
10008425:	test   al,al
10008427:	je     0x100084f6
1000842d:	sub    esp,0x10
10008430:	mov    eax,esp
10008432:	mov    DWORD PTR [esp+0x34],esp
10008436:	push   eax
10008437:	lea    ecx,[esp+0x48]
1000843b:	call   0x10018e1b
10008440:	sub    esp,0x1c
10008443:	mov    BYTE PTR [esp+0x114],0x4
1000844b:	mov    ecx,esp
1000844d:	mov    DWORD PTR [esp+0x54],esp
10008451:	push   DWORD PTR [esp+0x3c]
10008455:	call   0x100011c9
1000845a:	lea    edi,[esp+0x9c]
10008461:	mov    BYTE PTR [esp+0x114],0x3
10008469:	call   0x1000aad7
1000846e:	add    esp,0x2c
10008471:	lea    ecx,[esp+0x44]
10008475:	push   ecx
10008476:	mov    edi,eax
10008478:	mov    BYTE PTR [esp+0xec],0x5
10008480:	call   0x1000ab26
10008485:	mov    edi,DWORD PTR [esp+0x20]
10008489:	lea    eax,[esp+0x44]
1000848d:	push   eax
1000848e:	push   edi
1000848f:	lea    ebx,[esp+0x30]
10008493:	mov    BYTE PTR [esp+0xf0],0x6
1000849b:	call   0x10009d59
100084a0:	lea    esi,[esp+0x60]
100084a4:	call   0x100047a5
100084a9:	push   0x0
100084ab:	push   0x1
100084ad:	lea    ecx,[esp+0x4c]
100084b1:	call   0x100012f0
100084b6:	lea    esi,[esp+0x8c]
100084bd:	mov    BYTE PTR [esp+0xe8],0x3
100084c5:	call   0x100047a5
100084ca:	push   0x0
100084cc:	push   0x1
100084ce:	lea    ecx,[esp+0x78]
100084d2:	call   0x100012f0
100084d7:	push   DWORD PTR [esp+0x10]
100084db:	lea    eax,[esp+0x2c]
100084df:	push   eax
100084e0:	mov    ebx,edi
100084e2:	call   0x1000a0ba
100084e7:	mov    ecx,DWORD PTR [eax]
100084e9:	mov    eax,DWORD PTR [eax+0x4]
100084ec:	mov    DWORD PTR [esp+0x18],ecx
100084f0:	mov    DWORD PTR [esp+0x1c],eax
100084f4:	jmp    0x100084f8
100084f6:	mov    edi,ebx
100084f8:	lea    eax,[esp+0xb8]
100084ff:	push   eax
10008500:	lea    esi,[esp+0x1c]
10008504:	call   0x1001426e
10008509:	add    eax,0x1c
1000850c:	call   0x1000a1fa
10008511:	lea    esi,[esp+0x34]
10008515:	mov    BYTE PTR [esp+0xe8],0x2
1000851d:	call   0x100047a5
10008522:	xor    ebx,ebx
10008524:	cmp    DWORD PTR [edi+0xc],ebx
10008527:	je     0x10008551
10008529:	mov    esi,DWORD PTR [esp+0x14]
1000852d:	mov    eax,ebx
1000852f:	cmp    esi,eax
10008531:	mov    DWORD PTR [edi+0x10],ebx
10008534:	mov    DWORD PTR [esp+0x14],ebx
10008538:	je     0x10008541
1000853a:	push   eax
1000853b:	call   0x10042fe2
10008540:	pop    ecx
10008541:	mov    DWORD PTR [edi+0x10],esi
10008544:	mov    eax,DWORD PTR [edi+0xc]
10008547:	cmp    eax,ebx
10008549:	je     0x10008551
1000854b:	push   esi
1000854c:	call   0x10007a94
10008551:	push   ebx
10008552:	push   0x1
10008554:	lea    ecx,[esp+0xc0]
1000855b:	call   0x100012f0
10008560:	push   DWORD PTR [esp+0x14]
10008564:	call   0x10042fe2
10008569:	pop    ecx
1000856a:	push   ebx
1000856b:	push   0x1
1000856d:	lea    ecx,[esp+0xa4]
10008574:	call   0x100012f0
10008579:	mov    al,0x1
1000857b:	mov    ecx,DWORD PTR [esp+0xe0]
10008582:	mov    DWORD PTR fs:0x0,ecx
10008589:	pop    ecx
1000858a:	pop    edi
1000858b:	pop    esi
1000858c:	pop    ebx
1000858d:	mov    ecx,DWORD PTR [esp+0xc8]
10008594:	xor    ecx,esp
10008596:	call   0x10043615
1000859b:	mov    esp,ebp
1000859d:	pop    ebp
1000859e:	ret    0x8
100085a1:	push   ebp
100085a2:	mov    ebp,esp
100085a4:	and    esp,0xfffffff8
100085a7:	sub    esp,0x1c
100085aa:	push   ebx
100085ab:	mov    ebx,DWORD PTR [ebp+0x8]
100085ae:	push   esi
100085af:	push   edi
100085b0:	push   DWORD PTR [ebp+0xc]
100085b3:	lea    eax,[esp+0x14]
100085b7:	push   eax
100085b8:	call   0x1000a0ba
100085bd:	mov    eax,DWORD PTR [ebx+0x4]
100085c0:	lea    edi,[esp+0x18]
100085c4:	lea    esi,[esp+0x10]
100085c8:	mov    DWORD PTR [esp+0x1c],eax
100085cc:	mov    DWORD PTR [esp+0x18],ebx
100085d0:	call   0x10004b0c
100085d5:	test   al,al
100085d7:	je     0x100085e0
100085d9:	xor    al,al
100085db:	jmp    0x100086ab
100085e0:	lea    esi,[esp+0x10]
100085e4:	call   0x1001426e
100085e9:	add    eax,0x1c
100085ec:	call   0x1000a1e7
100085f1:	test   eax,eax
100085f3:	jbe    0x100085d9
100085f5:	call   0x1001426e
100085fa:	push   0x0
100085fc:	lea    esi,[eax+0x1c]
100085ff:	call   0x10018ff4
10008604:	mov    esi,eax
10008606:	mov    eax,DWORD PTR [ebx+0xc]
10008609:	test   eax,eax
1000860b:	je     0x10008627
1000860d:	push   DWORD PTR [esi+0x1c]
10008610:	call   0x10007af7
10008615:	mov    edi,DWORD PTR [esi+0x1c]
10008618:	mov    eax,DWORD PTR [ebx+0xc]
1000861b:	push   0x0
1000861d:	push   0x1006dd18
10008622:	call   0x10007a22
10008627:	push   DWORD PTR [esi+0x1c]
1000862a:	call   0x10042fe2
1000862f:	pop    ecx
10008630:	lea    esi,[esp+0x10]
10008634:	call   0x1001426e
10008639:	mov    esi,eax
1000863b:	mov    edi,DWORD PTR [esi+0x20]
1000863e:	add    esi,0x1c
10008641:	cmp    edi,DWORD PTR [esi+0x8]
10008644:	jbe    0x1000864b
10008646:	call   0x10043605
1000864b:	mov    DWORD PTR [esp+0x18],esi
1000864f:	lea    esi,[esp+0x10]
10008653:	mov    DWORD PTR [esp+0x1c],edi
10008657:	call   0x1001426e
1000865c:	mov    esi,eax
1000865e:	lea    eax,[esp+0x20]
10008662:	push   eax
10008663:	xor    ecx,ecx
10008665:	lea    eax,[esp+0x1c]
10008669:	call   0x1000a2a6
1000866e:	push   DWORD PTR [eax+0x4]
10008671:	add    esi,0x1c
10008674:	push   DWORD PTR [eax]
10008676:	lea    ebx,[esp+0x20]
1000867a:	call   0x1000a254
1000867f:	lea    esi,[esp+0x10]
10008683:	call   0x1001426e
10008688:	add    eax,0x1c
1000868b:	call   0x1000a1e7
10008690:	test   eax,eax
10008692:	jne    0x100086a9
10008694:	push   DWORD PTR [esp+0x14]
10008698:	lea    eax,[esp+0x24]
1000869c:	push   DWORD PTR [esp+0x14]
100086a0:	push   eax
100086a1:	push   DWORD PTR [ebp+0x8]
100086a4:	call   0x10009e1a
100086a9:	mov    al,0x1
100086ab:	pop    edi
100086ac:	pop    esi
100086ad:	pop    ebx
100086ae:	mov    esp,ebp
100086b0:	pop    ebp
100086b1:	ret    0x8
100086b4:	push   ebp
100086b5:	mov    ebp,esp
100086b7:	and    esp,0xfffffff8
100086ba:	sub    esp,0xc
100086bd:	cmp    DWORD PTR [edi+0x8],0x0
100086c1:	push   esi
100086c2:	je     0x100086e7
100086c4:	mov    DWORD PTR [esp+0x8],edi
100086c8:	mov    eax,DWORD PTR [edi+0x4]
100086cb:	mov    eax,DWORD PTR [eax]
100086cd:	lea    esi,[esp+0x8]
100086d1:	mov    DWORD PTR [esp+0xc],eax
100086d5:	call   0x1001426e
100086da:	push   eax
100086db:	push   edi
100086dc:	call   0x100085a1
100086e1:	cmp    DWORD PTR [edi+0x8],0x0
100086e5:	jne    0x100086c8
100086e7:	pop    esi
100086e8:	mov    esp,ebp
100086ea:	pop    ebp
100086eb:	ret    
100086ec:	push   ebp
100086ed:	mov    ebp,esp
100086ef:	and    esp,0xfffffff8
100086f2:	push   0xffffffff
100086f4:	push   0x100627fb
100086f9:	mov    eax,fs:0x0
100086ff:	push   eax
10008700:	sub    esp,0x38
10008703:	mov    eax,ds:0x100801ac
10008708:	xor    eax,esp
1000870a:	mov    DWORD PTR [esp+0x30],eax
1000870e:	push   ebx
1000870f:	push   esi
10008710:	push   edi
10008711:	mov    eax,ds:0x100801ac
10008716:	xor    eax,esp
10008718:	push   eax
10008719:	lea    eax,[esp+0x48]
1000871d:	mov    fs:0x0,eax
10008723:	mov    eax,DWORD PTR [ebp+0x8]
10008726:	push   eax
10008727:	lea    eax,[esp+0x18]
1000872b:	mov    ebx,edx
1000872d:	push   eax
1000872e:	mov    DWORD PTR [esp+0x18],ecx
10008732:	call   0x1000a0ba
10008737:	mov    eax,DWORD PTR [ebx+0x4]
1000873a:	lea    edi,[esp+0x1c]
1000873e:	lea    esi,[esp+0x14]
10008742:	mov    DWORD PTR [esp+0x20],eax
10008746:	mov    DWORD PTR [esp+0x1c],ebx
1000874a:	call   0x10004b0c
1000874f:	test   al,al
10008751:	je     0x1000875a
10008753:	xor    al,al
10008755:	jmp    0x100087e3
1000875a:	lea    esi,[esp+0x14]
1000875e:	call   0x1001426e
10008763:	add    eax,0x1c
10008766:	call   0x1000a1e7
1000876b:	test   eax,eax
1000876d:	jbe    0x10008753
1000876f:	call   0x1001426e
10008774:	push   0x0
10008776:	lea    esi,[eax+0x1c]
10008779:	call   0x10018ff4
1000877e:	push   0xffffffff
10008780:	push   0x0
10008782:	push   DWORD PTR [esp+0x18]
10008786:	mov    edi,eax
10008788:	mov    ecx,edi
1000878a:	call   0x10001241
1000878f:	lea    esi,[esp+0x14]
10008793:	call   0x1001426e
10008798:	push   DWORD PTR [esp+0x10]
1000879c:	push   eax
1000879d:	lea    eax,[esp+0x2c]
100087a1:	push   eax
100087a2:	call   0x100088ca
100087a7:	add    esp,0xc
100087aa:	and    DWORD PTR [esp+0x50],0x0
100087af:	mov    ebx,DWORD PTR [ebx+0xc]
100087b2:	test   ebx,ebx
100087b4:	je     0x100087d4
100087b6:	cmp    DWORD PTR [esp+0x3c],0x10
100087bb:	mov    eax,DWORD PTR [esp+0x28]
100087bf:	jae    0x100087c5
100087c1:	lea    eax,[esp+0x28]
100087c5:	push   DWORD PTR [esp+0x38]
100087c9:	mov    edi,DWORD PTR [edi+0x1c]
100087cc:	push   eax
100087cd:	mov    eax,ebx
100087cf:	call   0x10007a22
100087d4:	push   0x0
100087d6:	push   0x1
100087d8:	lea    ecx,[esp+0x2c]
100087dc:	call   0x100012f0
100087e1:	mov    al,0x1
100087e3:	mov    ecx,DWORD PTR [esp+0x48]
100087e7:	mov    DWORD PTR fs:0x0,ecx
100087ee:	pop    ecx
100087ef:	pop    edi
100087f0:	pop    esi
100087f1:	pop    ebx
100087f2:	mov    ecx,DWORD PTR [esp+0x30]
100087f6:	xor    ecx,esp
100087f8:	call   0x10043615
100087fd:	mov    esp,ebp
100087ff:	pop    ebp
10008800:	ret    0x4
10008803:	push   ebp
10008804:	mov    ebp,esp
10008806:	sub    esp,0x18
10008809:	and    DWORD PTR [ebp-0x8],0x0
1000880d:	push   ebx
1000880e:	push   esi
1000880f:	push   edi
10008810:	push   DWORD PTR [ebp+0xc]
10008813:	mov    ebx,eax
10008815:	lea    eax,[ebp-0xc]
10008818:	push   eax
10008819:	call   0x1000a0ba
1000881e:	mov    eax,DWORD PTR [ebx+0x4]
10008821:	lea    edi,[ebp-0x14]
10008824:	lea    esi,[ebp-0xc]
10008827:	mov    DWORD PTR [ebp-0x10],eax
1000882a:	mov    DWORD PTR [ebp-0x14],ebx
1000882d:	call   0x10004b0c
10008832:	test   al,al
10008834:	jne    0x10008865
10008836:	call   0x1001426e
1000883b:	add    eax,0x1c
1000883e:	call   0x1000a1e7
10008843:	cmp    DWORD PTR [ebp+0x10],eax
10008846:	jae    0x10008865
10008848:	push   DWORD PTR [ebp+0x10]
1000884b:	call   0x1001426e
10008850:	mov    esi,eax
10008852:	add    esi,0x1c
10008855:	call   0x10018ff4
1000885a:	mov    ecx,DWORD PTR [ebp+0x8]
1000885d:	push   eax
1000885e:	call   0x100011c9
10008863:	jmp    0x10008872
10008865:	mov    ecx,DWORD PTR [ebp+0x8]
10008868:	push   0x1006dd18
1000886d:	call   0x100011a7
10008872:	mov    eax,DWORD PTR [ebp+0x8]
10008875:	pop    edi
10008876:	pop    esi
10008877:	pop    ebx
10008878:	leave  
10008879:	ret    0xc
1000887c:	push   ebp
1000887d:	mov    ebp,esp
1000887f:	sub    esp,0x18
10008882:	push   ebx
10008883:	push   esi
10008884:	push   edi
10008885:	push   DWORD PTR [ebp+0x8]
10008888:	mov    ebx,eax
1000888a:	lea    eax,[ebp-0x14]
1000888d:	push   eax
1000888e:	call   0x1000a0ba
10008893:	mov    eax,DWORD PTR [ebx+0x4]
10008896:	lea    edi,[ebp-0xc]
10008899:	lea    esi,[ebp-0x14]
1000889c:	mov    DWORD PTR [ebp-0x8],eax
1000889f:	mov    DWORD PTR [ebp-0xc],ebx
100088a2:	call   0x10004b0c
100088a7:	test   al,al
100088a9:	jne    0x100088c1
100088ab:	call   0x1001426e
100088b0:	add    eax,0x1c
100088b3:	call   0x1000a1e7
100088b8:	test   eax,eax
100088ba:	jbe    0x100088c1
100088bc:	xor    eax,eax
100088be:	inc    eax
100088bf:	jmp    0x100088c3
100088c1:	xor    eax,eax
100088c3:	pop    edi
100088c4:	pop    esi
100088c5:	pop    ebx
100088c6:	leave  
100088c7:	ret    0x4
100088ca:	push   0x3c
100088cc:	mov    eax,0x100627d8
100088d1:	call   0x10059df5
100088d6:	and    DWORD PTR [ebp-0x10],0x0
100088da:	push   0x1006e4b4
100088df:	push   DWORD PTR [ebp+0xc]
100088e2:	lea    eax,[ebp-0x48]
100088e5:	push   eax
100088e6:	call   0x10006727
100088eb:	push   DWORD PTR [ebp+0x10]
100088ee:	and    DWORD PTR [ebp-0x4],0x0
100088f2:	push   eax
100088f3:	lea    eax,[ebp-0x2c]
100088f6:	push   eax
100088f7:	call   0x1000676d
100088fc:	push   0x1006e4b0
10008901:	push   eax
10008902:	push   DWORD PTR [ebp+0x8]
10008905:	mov    BYTE PTR [ebp-0x4],0x1
10008909:	call   0x10006727
1000890e:	add    esp,0x24
10008911:	push   0x0
10008913:	push   0x1
10008915:	lea    ecx,[ebp-0x2c]
10008918:	call   0x100012f0
1000891d:	push   0x0
1000891f:	push   0x1
10008921:	lea    ecx,[ebp-0x48]
10008924:	call   0x100012f0
10008929:	mov    eax,DWORD PTR [ebp+0x8]
1000892c:	call   0x10059ecd
10008931:	ret    
10008932:	push   ebp
10008933:	mov    ebp,esp
10008935:	sub    esp,0x10
10008938:	mov    eax,DWORD PTR [ebx+0x4]
1000893b:	mov    eax,DWORD PTR [eax]
1000893d:	push   esi
1000893e:	push   edi
1000893f:	mov    DWORD PTR [ebp-0x4],eax
10008942:	mov    DWORD PTR [ebp-0x8],ebx
10008945:	mov    DWORD PTR [ebp-0x10],ebx
10008948:	mov    eax,DWORD PTR [ebx+0x4]
1000894b:	lea    edi,[ebp-0x10]
1000894e:	lea    esi,[ebp-0x8]
10008951:	mov    DWORD PTR [ebp-0xc],eax
10008954:	call   0x10004b0c
10008959:	test   al,al
1000895b:	jne    0x100089ab
1000895d:	xor    edi,edi
1000895f:	call   0x1001426e
10008964:	add    eax,0x1c
10008967:	call   0x1000a1e7
1000896c:	test   eax,eax
1000896e:	je     0x100089a1
10008970:	lea    esi,[ebp-0x8]
10008973:	call   0x1001426e
10008978:	push   edi
10008979:	lea    esi,[eax+0x1c]
1000897c:	call   0x10018ff4
10008981:	push   DWORD PTR [eax+0x1c]
10008984:	mov    eax,DWORD PTR [ebx+0xc]
10008987:	call   0x10007a94
1000898c:	lea    esi,[ebp-0x8]
1000898f:	inc    edi
10008990:	call   0x1001426e
10008995:	add    eax,0x1c
10008998:	call   0x1000a1e7
1000899d:	cmp    edi,eax
1000899f:	jne    0x10008970
100089a1:	lea    esi,[ebp-0x8]
100089a4:	call   0x1000a19a
100089a9:	jmp    0x10008948
100089ab:	push   DWORD PTR [ebx+0x10]
100089ae:	mov    eax,DWORD PTR [ebx+0xc]
100089b1:	call   0x10007a94
100089b6:	pop    edi
100089b7:	pop    esi
100089b8:	leave  
100089b9:	ret    
100089ba:	push   0x0
100089bc:	mov    eax,0x10063d13
100089c1:	call   0x10059df5
100089c6:	mov    edi,DWORD PTR [ebp+0x8]
100089c9:	xor    ebx,ebx
100089cb:	mov    DWORD PTR [edi],ebx
100089cd:	mov    DWORD PTR [ebp-0x4],ebx
100089d0:	mov    DWORD PTR [edi+0x4],ebx
100089d3:	mov    DWORD PTR [edi+0x8],ebx
100089d6:	mov    BYTE PTR [ebp-0x4],0x2
100089da:	lea    esi,[edi+0x18]
100089dd:	mov    DWORD PTR [edi+0x10],ebx
100089e0:	mov    DWORD PTR [edi+0x14],ebx
100089e3:	call   0x10007d25
100089e8:	mov    BYTE PTR [edi+0x2c],bl
100089eb:	mov    BYTE PTR [edi+0x2d],bl
100089ee:	mov    DWORD PTR [edi+0x30],ebx
100089f1:	mov    DWORD PTR [edi+0x34],ebx
100089f4:	mov    DWORD PTR [edi+0x38],ebx
100089f7:	mov    DWORD PTR [edi+0x3c],ebx
100089fa:	mov    eax,edi
100089fc:	call   0x10059ecd
10008a01:	ret    0x4
10008a04:	push   ebx
10008a05:	push   esi
10008a06:	mov    esi,ecx
10008a08:	push   edi
10008a09:	mov    edi,DWORD PTR [esi+0x34]
10008a0c:	mov    ebx,eax
10008a0e:	cmp    ebx,edi
10008a10:	je     0x10008a1b
10008a12:	test   edi,edi
10008a14:	je     0x10008a1b
10008a16:	call   0x1000a38e
10008a1b:	mov    DWORD PTR [esi+0x34],ebx
10008a1e:	mov    edi,DWORD PTR [esi]
10008a20:	test   edi,edi
10008a22:	je     0x10008a30
10008a24:	push   DWORD PTR [edi]
10008a26:	mov    eax,ebx
10008a28:	call   0x10007a94
10008a2d:	mov    DWORD PTR [edi+0x20],ebx
10008a30:	mov    edi,DWORD PTR [esi+0x4]
10008a33:	test   edi,edi
10008a35:	je     0x10008a46
10008a37:	mov    ebx,DWORD PTR [esi+0x34]
10008a3a:	push   DWORD PTR [edi]
10008a3c:	mov    eax,ebx
10008a3e:	call   0x10007a94
10008a43:	mov    DWORD PTR [edi+0x20],ebx
10008a46:	mov    edi,DWORD PTR [esi+0x8]
10008a49:	test   edi,edi
10008a4b:	je     0x10008a5c
10008a4d:	mov    ebx,DWORD PTR [esi+0x34]
10008a50:	push   DWORD PTR [edi]
10008a52:	mov    eax,ebx
10008a54:	call   0x10007a94
10008a59:	mov    DWORD PTR [edi+0x20],ebx
10008a5c:	lea    ebx,[esi+0x18]
10008a5f:	mov    esi,DWORD PTR [esi+0x34]
10008a62:	test   esi,esi
10008a64:	mov    DWORD PTR [ebx+0xc],esi
10008a67:	je     0x10008a6e
10008a69:	call   0x10008932
10008a6e:	pop    edi
10008a6f:	pop    esi
10008a70:	pop    ebx
10008a71:	ret    
10008a72:	push   ebp
10008a73:	mov    ebp,esp
10008a75:	sub    esp,0x18
10008a78:	mov    eax,ds:0x100801ac
10008a7d:	xor    eax,ebp
10008a7f:	mov    DWORD PTR [ebp-0x4],eax
10008a82:	mov    eax,DWORD PTR [ebp+0x8]
10008a85:	mov    eax,DWORD PTR [eax+0x3c]
10008a88:	test   eax,eax
10008a8a:	push   esi
10008a8b:	push   edi
10008a8c:	lea    esi,[ebp+0xc]
10008a8f:	lea    edi,[ebp-0x14]
10008a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008a96:	pop    edi
10008a97:	pop    esi
10008a98:	jne    0x10008a9e
10008a9a:	xor    eax,eax
10008a9c:	jmp    0x10008ab6
10008a9e:	and    DWORD PTR [ebp-0x18],0x0
10008aa2:	mov    ecx,DWORD PTR [eax]
10008aa4:	lea    edx,[ebp-0x18]
10008aa7:	push   edx
10008aa8:	lea    edx,[ebp-0x14]
10008aab:	push   edx
10008aac:	push   eax
10008aad:	call   DWORD PTR [ecx]
10008aaf:	test   eax,eax
10008ab1:	jl     0x10008a9a
10008ab3:	mov    eax,DWORD PTR [ebp-0x18]
10008ab6:	mov    ecx,DWORD PTR [ebp-0x4]
10008ab9:	xor    ecx,ebp
10008abb:	call   0x10043615
10008ac0:	leave  
10008ac1:	ret    0x14
10008ac4:	push   ebp
10008ac5:	mov    ebp,esp
10008ac7:	sub    esp,0x14
10008aca:	mov    eax,ds:0x100801ac
10008acf:	xor    eax,ebp
10008ad1:	mov    DWORD PTR [ebp-0x4],eax
10008ad4:	push   esi
10008ad5:	push   edi
10008ad6:	mov    eax,DWORD PTR [ebp+0x8]
10008ad9:	lea    esi,[ebp+0xc]
10008adc:	lea    edi,[ebp-0x14]
10008adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008ae3:	sub    esp,0x10
10008ae6:	mov    edi,esp
10008ae8:	lea    esi,[ebp-0x14]
10008aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008aee:	push   eax
10008aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008af0:	call   0x10008a72
10008af5:	mov    ecx,DWORD PTR [ebp-0x4]
10008af8:	pop    edi
10008af9:	xor    ecx,ebp
10008afb:	pop    esi
10008afc:	call   0x10043615
10008b01:	leave  
10008b02:	ret    0x14
10008b05:	push   ebp
10008b06:	mov    ebp,esp
10008b08:	and    esp,0xfffffff8
10008b0b:	push   0xffffffff
10008b0d:	push   0x1006438b
10008b12:	mov    eax,fs:0x0
10008b18:	push   eax
10008b19:	sub    esp,0x10
10008b1c:	push   ebx
10008b1d:	push   esi
10008b1e:	push   edi
10008b1f:	mov    eax,ds:0x100801ac
10008b24:	xor    eax,esp
10008b26:	push   eax
10008b27:	lea    eax,[esp+0x20]
10008b2b:	mov    fs:0x0,eax
10008b31:	mov    edi,ecx
10008b33:	mov    DWORD PTR [esp+0x10],edi
10008b37:	push   0x40
10008b39:	call   0x10043196
10008b3e:	pop    ecx
10008b3f:	mov    DWORD PTR [esp+0x18],eax
10008b43:	and    DWORD PTR [esp+0x28],0x0
10008b48:	test   eax,eax
10008b4a:	je     0x10008b5a
10008b4c:	push   eax
10008b4d:	call   0x100089ba
10008b52:	mov    esi,eax
10008b54:	mov    DWORD PTR [esp+0x14],esi
10008b58:	jmp    0x10008b63
10008b5a:	and    DWORD PTR [esp+0x14],0x0
10008b5f:	mov    esi,DWORD PTR [esp+0x14]
10008b63:	mov    DWORD PTR [esp+0x18],esi
10008b67:	mov    DWORD PTR [esp+0x28],0x1
10008b6f:	mov    ecx,DWORD PTR [edi]
10008b71:	call   0x10007c6c
10008b76:	mov    ebx,eax
10008b78:	mov    edi,esi
10008b7a:	call   0x1000a14c
10008b7f:	mov    eax,DWORD PTR [esp+0x10]
10008b83:	mov    ecx,DWORD PTR [eax+0x4]
10008b86:	call   0x10007c6c
10008b8b:	lea    edi,[esi+0x4]
10008b8e:	mov    ebx,eax
10008b90:	call   0x1000a14c
10008b95:	mov    eax,DWORD PTR [esp+0x10]
10008b99:	mov    ecx,DWORD PTR [eax+0x8]
10008b9c:	call   0x10007c6c
10008ba1:	lea    edi,[esi+0x8]
10008ba4:	mov    ebx,eax
10008ba6:	call   0x1000a14c
10008bab:	mov    ebx,DWORD PTR [esp+0x10]
10008baf:	lea    eax,[ebx+0x18]
10008bb2:	push   eax
10008bb3:	lea    eax,[esi+0x18]
10008bb6:	push   eax
10008bb7:	call   0x10007e17
10008bbc:	mov    al,BYTE PTR [ebx+0x2c]
10008bbf:	mov    BYTE PTR [esi+0x2c],al
10008bc2:	mov    eax,DWORD PTR [ebx+0x10]
10008bc5:	mov    DWORD PTR [esi+0x10],eax
10008bc8:	mov    eax,DWORD PTR [ebx+0x14]
10008bcb:	mov    DWORD PTR [esi+0x14],eax
10008bce:	mov    edi,DWORD PTR [ebx+0x3c]
10008bd1:	lea    eax,[esi+0x3c]
10008bd4:	cmp    DWORD PTR [eax],edi
10008bd6:	je     0x10008be3
10008bd8:	mov    esi,eax
10008bda:	call   0x10007961
10008bdf:	mov    esi,DWORD PTR [esp+0x14]
10008be3:	mov    ecx,ebx
10008be5:	call   0x1000948c
10008bea:	mov    DWORD PTR [esi+0x38],eax
10008bed:	mov    al,BYTE PTR [ebx+0x2d]
10008bf0:	mov    BYTE PTR [esi+0x2d],al
10008bf3:	mov    ecx,DWORD PTR [ebx+0x30]
10008bf6:	test   ecx,ecx
10008bf8:	je     0x10008c15
10008bfa:	call   0x10008b05
10008bff:	mov    edi,eax
10008c01:	mov    eax,DWORD PTR [esi+0x30]
10008c04:	cmp    edi,eax
10008c06:	je     0x10008c12
10008c08:	test   eax,eax
10008c0a:	je     0x10008c12
10008c0c:	push   eax
10008c0d:	call   0x1000a31f
10008c12:	mov    DWORD PTR [esi+0x30],edi
10008c15:	and    DWORD PTR [esp+0x18],0x0
10008c1a:	or     DWORD PTR [esp+0x28],0xffffffff
10008c1f:	lea    ecx,[esp+0x18]
10008c23:	call   0x1000a176
10008c28:	mov    eax,esi
10008c2a:	mov    ecx,DWORD PTR [esp+0x20]
10008c2e:	mov    DWORD PTR fs:0x0,ecx
10008c35:	pop    ecx
10008c36:	pop    edi
10008c37:	pop    esi
10008c38:	pop    ebx
10008c39:	mov    esp,ebp
10008c3b:	pop    ebp
10008c3c:	ret    
10008c3d:	push   0x48
10008c3f:	mov    eax,0x10064de0
10008c44:	call   0x10059df5
10008c49:	mov    edi,ecx
10008c4b:	mov    DWORD PTR [ebp-0x18],edi
10008c4e:	and    DWORD PTR [ebp-0x14],0x0
10008c52:	mov    ebx,DWORD PTR [ebp+0x8]
10008c55:	mov    eax,DWORD PTR [ebx]
10008c57:	lea    ecx,[ebp-0x34]
10008c5a:	push   ecx
10008c5b:	call   0x10007ca8
10008c60:	and    DWORD PTR [ebp-0x4],0x0
10008c64:	mov    esi,DWORD PTR [edi]
10008c66:	push   eax
10008c67:	mov    DWORD PTR [ebp-0x14],0x1
10008c6e:	call   0x10007cc3
10008c73:	test   al,al
10008c75:	setne  BYTE PTR [ebp-0xd]
10008c79:	or     DWORD PTR [ebp-0x4],0xffffffff
10008c7d:	xor    esi,esi
10008c7f:	push   0x0
10008c81:	inc    esi
10008c82:	push   esi
10008c83:	lea    ecx,[ebp-0x34]
10008c86:	call   0x100012f0
10008c8b:	mov    eax,DWORD PTR [ebx+0x4]
10008c8e:	lea    ecx,[ebp-0x34]
10008c91:	push   ecx
10008c92:	call   0x10007ca8
10008c97:	mov    DWORD PTR [ebp-0x4],esi
10008c9a:	mov    esi,DWORD PTR [edi+0x4]
10008c9d:	push   eax
10008c9e:	mov    DWORD PTR [ebp-0x14],0x2
10008ca5:	call   0x10007cc3
10008caa:	test   al,al
10008cac:	jne    0x10008cb6
10008cae:	cmp    BYTE PTR [ebp-0xd],al
10008cb1:	mov    BYTE PTR [ebp-0xd],al
10008cb4:	je     0x10008cba
10008cb6:	mov    BYTE PTR [ebp-0xd],0x1
10008cba:	or     DWORD PTR [ebp-0x4],0xffffffff
10008cbe:	push   0x0
10008cc0:	push   0x1
10008cc2:	lea    ecx,[ebp-0x34]
10008cc5:	call   0x100012f0
10008cca:	mov    eax,DWORD PTR [ebx+0x8]
10008ccd:	lea    ecx,[ebp-0x50]
10008cd0:	push   ecx
10008cd1:	call   0x10007ca8
10008cd6:	mov    DWORD PTR [ebp-0x4],0x2
10008cdd:	mov    esi,DWORD PTR [edi+0x8]
10008ce0:	push   eax
10008ce1:	mov    DWORD PTR [ebp-0x14],0x4
10008ce8:	call   0x10007cc3
10008ced:	test   al,al
10008cef:	jne    0x10008cf9
10008cf1:	cmp    BYTE PTR [ebp-0xd],al
10008cf4:	mov    BYTE PTR [ebp-0xd],al
10008cf7:	je     0x10008cfd
10008cf9:	mov    BYTE PTR [ebp-0xd],0x1
10008cfd:	or     DWORD PTR [ebp-0x4],0xffffffff
10008d01:	push   0x0
10008d03:	push   0x1
10008d05:	lea    ecx,[ebp-0x50]
10008d08:	call   0x100012f0
10008d0d:	add    ebx,0x18
10008d10:	lea    ecx,[edi+0x18]
10008d13:	call   0x1000805c
10008d18:	test   al,al
10008d1a:	jne    0x10008d24
10008d1c:	cmp    BYTE PTR [ebp-0xd],al
10008d1f:	mov    BYTE PTR [ebp-0xd],al
10008d22:	je     0x10008d28
10008d24:	mov    BYTE PTR [ebp-0xd],0x1
10008d28:	mov    esi,DWORD PTR [ebp+0x8]
10008d2b:	mov    al,BYTE PTR [esi+0x2c]
10008d2e:	cmp    BYTE PTR [edi+0x2c],al
10008d31:	je     0x10008d3a
10008d33:	mov    BYTE PTR [ebp-0xd],0x1
10008d37:	mov    BYTE PTR [edi+0x2c],al
10008d3a:	mov    eax,DWORD PTR [esi+0x10]
10008d3d:	mov    edx,DWORD PTR [edi+0x10]
10008d40:	cmp    edx,eax
10008d42:	mov    ecx,DWORD PTR [esi+0x14]
10008d45:	jne    0x10008d4e
10008d47:	mov    edx,DWORD PTR [edi+0x14]
10008d4a:	cmp    edx,ecx
10008d4c:	je     0x10008d58
10008d4e:	mov    BYTE PTR [ebp-0xd],0x1
10008d52:	mov    DWORD PTR [edi+0x10],eax
10008d55:	mov    DWORD PTR [edi+0x14],ecx
10008d58:	mov    ecx,DWORD PTR [esi+0x3c]
10008d5b:	lea    eax,[edi+0x3c]
10008d5e:	cmp    DWORD PTR [eax],ecx
10008d60:	je     0x10008d75
10008d62:	mov    edi,ecx
10008d64:	mov    esi,eax
10008d66:	mov    BYTE PTR [ebp-0xd],0x1
10008d6a:	call   0x10007961
10008d6f:	mov    edi,DWORD PTR [ebp-0x18]
10008d72:	mov    esi,DWORD PTR [ebp+0x8]
10008d75:	mov    al,BYTE PTR [esi+0x2d]
10008d78:	cmp    al,BYTE PTR [edi+0x2d]
10008d7b:	je     0x10008d84
10008d7d:	mov    BYTE PTR [ebp-0xd],0x1
10008d81:	mov    BYTE PTR [edi+0x2d],al
10008d84:	mov    ecx,DWORD PTR [esi+0x30]
10008d87:	xor    ebx,ebx
10008d89:	cmp    ecx,ebx
10008d8b:	jne    0x10008d96
10008d8d:	cmp    DWORD PTR [edi+0x30],ebx
10008d90:	je     0x10008e01
10008d92:	cmp    ecx,ebx
10008d94:	je     0x10008de8
10008d96:	mov    eax,DWORD PTR [edi+0x30]
10008d99:	cmp    eax,ebx
10008d9b:	je     0x10008db8
10008d9d:	push   eax
10008d9e:	call   0x10008e33
10008da3:	test   al,al
10008da5:	jne    0x10008e01
10008da7:	push   DWORD PTR [esi+0x30]
10008daa:	mov    ecx,DWORD PTR [edi+0x30]
10008dad:	mov    BYTE PTR [ebp-0xd],0x1
10008db1:	call   0x10008c3d
10008db6:	jmp    0x10008e01
10008db8:	cmp    ecx,ebx
10008dba:	je     0x10008de8
10008dbc:	cmp    DWORD PTR [edi+0x30],ebx
10008dbf:	jne    0x10008de4
10008dc1:	mov    BYTE PTR [ebp-0xd],0x1
10008dc5:	call   0x10008b05
10008dca:	mov    ebx,eax
10008dcc:	mov    eax,DWORD PTR [edi+0x30]
10008dcf:	cmp    ebx,eax
10008dd1:	je     0x10008ddd
10008dd3:	test   eax,eax
10008dd5:	je     0x10008ddd
10008dd7:	push   eax
10008dd8:	call   0x1000a31f
10008ddd:	mov    DWORD PTR [edi+0x30],ebx
10008de0:	xor    ebx,ebx
10008de2:	jmp    0x10008e01
10008de4:	cmp    ecx,ebx
10008de6:	jne    0x10008e01
10008de8:	cmp    DWORD PTR [edi+0x30],ebx
10008deb:	je     0x10008e01
10008ded:	mov    eax,DWORD PTR [edi+0x30]
10008df0:	cmp    eax,ebx
10008df2:	mov    BYTE PTR [ebp-0xd],0x1
10008df6:	je     0x10008dfe
10008df8:	push   eax
10008df9:	call   0x1000a31f
10008dfe:	mov    DWORD PTR [edi+0x30],ebx
10008e01:	cmp    DWORD PTR [edi+0x34],ebx
10008e04:	jne    0x10008e28
10008e06:	mov    ecx,esi
10008e08:	call   0x1000948c
10008e0d:	mov    ecx,edi
10008e0f:	mov    edx,eax
10008e11:	call   0x1000948c
10008e16:	cmp    edx,eax
10008e18:	je     0x10008e28
10008e1a:	mov    ecx,esi
10008e1c:	mov    BYTE PTR [ebp-0xd],0x1
10008e20:	call   0x1000948c
10008e25:	mov    DWORD PTR [edi+0x38],eax
10008e28:	mov    al,BYTE PTR [ebp-0xd]
10008e2b:	call   0x10059ecd
10008e30:	ret    0x4
10008e33:	push   ebp
10008e34:	mov    ebp,esp
10008e36:	and    esp,0xfffffff8
10008e39:	push   0xffffffff
10008e3b:	push   0x10060a9d
10008e40:	mov    eax,fs:0x0
10008e46:	push   eax
10008e47:	sub    esp,0x78
10008e4a:	push   ebx
10008e4b:	push   esi
10008e4c:	push   edi
10008e4d:	mov    eax,ds:0x100801ac
10008e52:	xor    eax,esp
10008e54:	push   eax
10008e55:	lea    eax,[esp+0x88]
10008e5c:	mov    fs:0x0,eax
10008e62:	mov    esi,ecx
10008e64:	mov    edi,DWORD PTR [ebp+0x8]
10008e67:	mov    eax,DWORD PTR [edi]
10008e69:	lea    ecx,[esp+0x30]
10008e6d:	push   ecx
10008e6e:	call   0x10007ca8
10008e73:	mov    ebx,eax
10008e75:	and    DWORD PTR [esp+0x90],0x0
10008e7d:	mov    eax,DWORD PTR [esi]
10008e7f:	lea    ecx,[esp+0x14]
10008e83:	push   ecx
10008e84:	call   0x10007ca8
10008e89:	mov    ecx,ebx
10008e8b:	mov    BYTE PTR [esp+0x90],0x1
10008e93:	call   0x10006803
10008e98:	mov    bl,al
10008e9a:	neg    bl
10008e9c:	push   0x0
10008e9e:	sbb    bl,bl
10008ea0:	push   0x1
10008ea2:	lea    ecx,[esp+0x1c]
10008ea6:	inc    bl
10008ea8:	call   0x100012f0
10008ead:	or     DWORD PTR [esp+0x90],0xffffffff
10008eb5:	push   0x0
10008eb7:	push   0x1
10008eb9:	lea    ecx,[esp+0x38]
10008ebd:	call   0x100012f0
10008ec2:	test   bl,bl
10008ec4:	je     0x10008ecd
10008ec6:	xor    al,al
10008ec8:	jmp    0x1000901d
10008ecd:	mov    eax,DWORD PTR [edi+0x4]
10008ed0:	lea    ecx,[esp+0x14]
10008ed4:	push   ecx
10008ed5:	call   0x10007ca8
10008eda:	mov    ebx,eax
10008edc:	lea    ecx,[esp+0x30]
10008ee0:	mov    DWORD PTR [esp+0x90],0x2
10008eeb:	mov    eax,DWORD PTR [esi+0x4]
10008eee:	push   ecx
10008eef:	call   0x10007ca8
10008ef4:	mov    ecx,ebx
10008ef6:	mov    BYTE PTR [esp+0x90],0x3
10008efe:	call   0x10006803
10008f03:	mov    bl,al
10008f05:	neg    bl
10008f07:	push   0x0
10008f09:	sbb    bl,bl
10008f0b:	push   0x1
10008f0d:	lea    ecx,[esp+0x38]
10008f11:	inc    bl
10008f13:	call   0x100012f0
10008f18:	or     DWORD PTR [esp+0x90],0xffffffff
10008f20:	push   0x0
10008f22:	push   0x1
10008f24:	lea    ecx,[esp+0x1c]
10008f28:	call   0x100012f0
10008f2d:	test   bl,bl
10008f2f:	jne    0x10008ec6
10008f31:	mov    eax,DWORD PTR [edi+0x8]
10008f34:	lea    ecx,[esp+0x68]
10008f38:	push   ecx
10008f39:	call   0x10007ca8
10008f3e:	mov    ebx,eax
10008f40:	lea    ecx,[esp+0x4c]
10008f44:	mov    DWORD PTR [esp+0x90],0x4
10008f4f:	mov    eax,DWORD PTR [esi+0x8]
10008f52:	push   ecx
10008f53:	call   0x10007ca8
10008f58:	mov    ecx,ebx
10008f5a:	mov    BYTE PTR [esp+0x90],0x5
10008f62:	call   0x10006803
10008f67:	mov    bl,al
10008f69:	neg    bl
10008f6b:	push   0x0
10008f6d:	sbb    bl,bl
10008f6f:	push   0x1
10008f71:	lea    ecx,[esp+0x54]
10008f75:	inc    bl
10008f77:	call   0x100012f0
10008f7c:	or     DWORD PTR [esp+0x90],0xffffffff
10008f84:	push   0x0
10008f86:	push   0x1
10008f88:	lea    ecx,[esp+0x70]
10008f8c:	call   0x100012f0
10008f91:	test   bl,bl
10008f93:	jne    0x10008ec6
10008f99:	lea    eax,[edi+0x18]
10008f9c:	push   eax
10008f9d:	lea    eax,[esi+0x18]
10008fa0:	push   eax
10008fa1:	call   0x10007f5b
10008fa6:	test   al,al
10008fa8:	je     0x10008ec6
10008fae:	mov    al,BYTE PTR [esi+0x2c]
10008fb1:	cmp    al,BYTE PTR [edi+0x2c]
10008fb4:	jne    0x10008ec6
10008fba:	mov    eax,DWORD PTR [esi+0x10]
10008fbd:	cmp    eax,DWORD PTR [edi+0x10]
10008fc0:	jne    0x10008ec6
10008fc6:	mov    eax,DWORD PTR [esi+0x14]
10008fc9:	cmp    eax,DWORD PTR [edi+0x14]
10008fcc:	jne    0x10008ec6
10008fd2:	mov    al,BYTE PTR [esi+0x2d]
10008fd5:	cmp    al,BYTE PTR [edi+0x2d]
10008fd8:	jne    0x10008ec6
10008fde:	mov    edi,DWORD PTR [edi+0x30]
10008fe1:	xor    ecx,ecx
10008fe3:	cmp    edi,ecx
10008fe5:	jne    0x10008ff0
10008fe7:	cmp    DWORD PTR [esi+0x30],ecx
10008fea:	je     0x1000901b
10008fec:	cmp    edi,ecx
10008fee:	je     0x10009012
10008ff0:	mov    eax,DWORD PTR [esi+0x30]
10008ff3:	cmp    eax,ecx
10008ff5:	je     0x10009001
10008ff7:	push   eax
10008ff8:	mov    ecx,edi
10008ffa:	call   0x10008e33
10008fff:	jmp    0x1000901d
10009001:	cmp    edi,ecx
10009003:	je     0x10009012
10009005:	cmp    DWORD PTR [esi+0x30],ecx
10009008:	je     0x10008ec6
1000900e:	cmp    edi,ecx
10009010:	jne    0x1000901b
10009012:	cmp    DWORD PTR [esi+0x30],ecx
10009015:	jne    0x10008ec6
1000901b:	mov    al,0x1
1000901d:	mov    ecx,DWORD PTR [esp+0x88]
10009024:	mov    DWORD PTR fs:0x0,ecx
1000902b:	pop    ecx
1000902c:	pop    edi
1000902d:	pop    esi
1000902e:	pop    ebx
1000902f:	mov    esp,ebp
10009031:	pop    ebp
10009032:	ret    0x4
10009035:	push   ebp
10009036:	mov    ebp,esp
10009038:	and    esp,0xfffffff8
1000903b:	push   0xffffffff
1000903d:	push   0x1006279a
10009042:	mov    eax,fs:0x0
10009048:	push   eax
10009049:	sub    esp,0xc0
1000904f:	mov    eax,ds:0x100801ac
10009054:	xor    eax,esp
10009056:	mov    DWORD PTR [esp+0xb8],eax
1000905d:	push   ebx
1000905e:	push   esi
1000905f:	push   edi
10009060:	mov    eax,ds:0x100801ac
10009065:	xor    eax,esp
10009067:	push   eax
10009068:	lea    eax,[esp+0xd0]
1000906f:	mov    fs:0x0,eax
10009075:	mov    eax,DWORD PTR [ebp+0x8]
10009078:	xor    edi,edi
1000907a:	mov    DWORD PTR [esp+0x1c],eax
1000907e:	mov    DWORD PTR [esp+0x10],edi
10009082:	mov    eax,DWORD PTR [eax+0x4]
10009085:	cmp    eax,edi
10009087:	mov    DWORD PTR [esp+0x18],ecx
1000908b:	je     0x100090a7
1000908d:	lea    ecx,[esp+0x3c]
10009091:	push   ecx
10009092:	call   0x10007ca8
10009097:	xor    ebx,ebx
10009099:	inc    ebx
1000909a:	mov    DWORD PTR [esp+0xd8],edi
100090a1:	mov    DWORD PTR [esp+0x10],ebx
100090a5:	jmp    0x100090c7
100090a7:	push   0x1006dd18
100090ac:	lea    ecx,[esp+0x24]
100090b0:	call   0x100011a7
100090b5:	xor    ebx,ebx
100090b7:	inc    ebx
100090b8:	mov    DWORD PTR [esp+0xd8],ebx
100090bf:	mov    DWORD PTR [esp+0x10],0x2
100090c7:	push   eax
100090c8:	lea    ecx,[esp+0xb0]
100090cf:	call   0x100011c9
100090d4:	mov    DWORD PTR [esp+0xd8],0x2
100090df:	test   BYTE PTR [esp+0x10],0x2
100090e4:	je     0x100090f6
100090e6:	and    DWORD PTR [esp+0x10],0xfffffffd
100090eb:	push   edi
100090ec:	push   ebx
100090ed:	lea    ecx,[esp+0x28]
100090f1:	call   0x100012f0
100090f6:	mov    BYTE PTR [esp+0xd8],0x4
100090fe:	test   BYTE PTR [esp+0x10],bl
10009102:	je     0x1000910f
10009104:	push   edi
10009105:	push   ebx
10009106:	lea    ecx,[esp+0x44]
1000910a:	call   0x100012f0
1000910f:	push   0x1006dd18
10009114:	lea    esi,[esp+0xb0]
1000911b:	call   0x10006825
10009120:	test   al,al
10009122:	pop    ecx
10009123:	je     0x10009138
10009125:	mov    ecx,DWORD PTR [esp+0x18]
10009129:	push   0x1006dd18
1000912e:	call   0x100011a7
10009133:	jmp    0x10009351
10009138:	push   edi
10009139:	lea    ecx,[esp+0x94]
10009140:	mov    DWORD PTR [esp+0xac],0xf
1000914b:	call   0x1000141c
10009150:	mov    BYTE PTR [esp+0xd8],0x5
10009158:	cmp    DWORD PTR [esp+0xc4],0x10
10009160:	mov    eax,DWORD PTR [esp+0xb0]
10009167:	jb     0x1000916f
10009169:	mov    DWORD PTR [esp+0x10],eax
1000916d:	jmp    0x1000917a
1000916f:	lea    ecx,[esp+0xb0]
10009176:	mov    DWORD PTR [esp+0x10],ecx
1000917a:	cmp    DWORD PTR [esp+0xc4],0x10
10009182:	jae    0x1000918b
10009184:	lea    eax,[esp+0xb0]
1000918b:	push   0x1006e4b8
10009190:	mov    esi,0x1006e4dc
10009195:	push   0x7
10009197:	mov    ecx,esi
10009199:	mov    DWORD PTR [esp+0x1c],eax
1000919d:	call   0x100042b4
100091a2:	push   eax
100091a3:	push   DWORD PTR [esp+0x1c]
100091a7:	call   0x10045bf0
100091ac:	add    esp,0x10
100091af:	cmp    eax,DWORD PTR [esp+0x14]
100091b3:	jne    0x100091d1
100091b5:	push   0xffffffff
100091b7:	push   edi
100091b8:	lea    eax,[esp+0xb4]
100091bf:	push   eax
100091c0:	lea    ecx,[esp+0x9c]
100091c7:	call   0x10001241
100091cc:	jmp    0x10009332
100091d1:	push   0x1006e4e4
100091d6:	push   0x4
100091d8:	mov    ecx,0x1006e51c
100091dd:	call   0x100042b4
100091e2:	pop    ecx
100091e3:	pop    ecx
100091e4:	push   eax
100091e5:	lea    ecx,[esp+0x24]
100091e9:	call   0x100011a7
100091ee:	push   edi
100091ef:	lea    eax,[esp+0x24]
100091f3:	push   eax
100091f4:	lea    eax,[esp+0x60]
100091f8:	push   eax
100091f9:	mov    eax,DWORD PTR [esp+0x28]
100091fd:	add    eax,0x18
10009200:	mov    BYTE PTR [esp+0xe4],0x6
10009208:	call   0x10008803
1000920d:	lea    ecx,[esp+0xac]
10009214:	push   ecx
10009215:	push   eax
10009216:	lea    eax,[esp+0x44]
1000921a:	push   eax
1000921b:	mov    BYTE PTR [esp+0xe4],0x7
10009223:	call   0x1000676d
10009228:	add    esp,0xc
1000922b:	push   0xffffffff
1000922d:	push   edi
1000922e:	push   eax
1000922f:	lea    ecx,[esp+0x9c]
10009236:	mov    BYTE PTR [esp+0xe4],0x8
1000923e:	call   0x10001241
10009243:	push   edi
10009244:	push   ebx
10009245:	lea    ecx,[esp+0x44]
10009249:	call   0x100012f0
1000924e:	push   edi
1000924f:	push   ebx
10009250:	lea    ecx,[esp+0x60]
10009254:	call   0x100012f0
10009259:	push   edi
1000925a:	push   ebx
1000925b:	lea    ecx,[esp+0x28]
1000925f:	mov    BYTE PTR [esp+0xe0],0x5
10009267:	call   0x100012f0
1000926c:	cmp    DWORD PTR [esp+0xa8],0x10
10009274:	mov    eax,DWORD PTR [esp+0x94]
1000927b:	jb     0x10009283
1000927d:	mov    DWORD PTR [esp+0x14],eax
10009281:	jmp    0x1000928e
10009283:	lea    ecx,[esp+0x94]
1000928a:	mov    DWORD PTR [esp+0x14],ecx
1000928e:	cmp    DWORD PTR [esp+0xa8],0x10
10009296:	jae    0x1000929f
10009298:	lea    eax,[esp+0x94]
1000929f:	push   0x1006e524
100092a4:	push   0x7
100092a6:	mov    ecx,esi
100092a8:	mov    DWORD PTR [esp+0x18],eax
100092ac:	call   0x100042b4
100092b1:	push   eax
100092b2:	push   DWORD PTR [esp+0x20]
100092b6:	call   0x10045bf0
100092bb:	add    esp,0x10
100092be:	cmp    eax,DWORD PTR [esp+0x10]
100092c2:	je     0x10009332
100092c4:	push   0x1006e554
100092c9:	push   0x7
100092cb:	mov    ecx,esi
100092cd:	call   0x100042b4
100092d2:	pop    ecx
100092d3:	pop    ecx
100092d4:	push   eax
100092d5:	lea    ecx,[esp+0x78]
100092d9:	call   0x100011a7
100092de:	lea    ecx,[esp+0x90]
100092e5:	push   ecx
100092e6:	push   eax
100092e7:	lea    eax,[esp+0x60]
100092eb:	push   eax
100092ec:	mov    BYTE PTR [esp+0xe4],0x9
100092f4:	call   0x1000676d
100092f9:	add    esp,0xc
100092fc:	push   0xffffffff
100092fe:	push   edi
100092ff:	push   eax
10009300:	lea    ecx,[esp+0x9c]
10009307:	mov    BYTE PTR [esp+0xe4],0xa
1000930f:	call   0x10001241
10009314:	push   edi
10009315:	push   ebx
10009316:	lea    ecx,[esp+0x60]
1000931a:	call   0x100012f0
1000931f:	push   edi
10009320:	push   ebx
10009321:	lea    ecx,[esp+0x7c]
10009325:	mov    BYTE PTR [esp+0xe0],0x5
1000932d:	call   0x100012f0
10009332:	mov    ecx,DWORD PTR [esp+0x18]
10009336:	lea    eax,[esp+0x90]
1000933d:	push   eax
1000933e:	call   0x100011c9
10009343:	push   edi
10009344:	push   ebx
10009345:	lea    ecx,[esp+0x98]
1000934c:	call   0x100012f0
10009351:	push   edi
10009352:	push   ebx
10009353:	lea    ecx,[esp+0xb4]
1000935a:	call   0x100012f0
1000935f:	mov    eax,DWORD PTR [esp+0x18]
10009363:	mov    ecx,DWORD PTR [esp+0xd0]
1000936a:	mov    DWORD PTR fs:0x0,ecx
10009371:	pop    ecx
10009372:	pop    edi
10009373:	pop    esi
10009374:	pop    ebx
10009375:	mov    ecx,DWORD PTR [esp+0xb8]
1000937c:	xor    ecx,esp
1000937e:	call   0x10043615
10009383:	mov    esp,ebp
10009385:	pop    ebp
10009386:	ret    0x4
10009389:	push   0x0
1000938b:	mov    eax,0x10063cda
10009390:	call   0x10059df5
10009395:	mov    edi,DWORD PTR [ebp+0x8]
10009398:	xor    ebx,ebx
1000939a:	mov    DWORD PTR [edi],ebx
1000939c:	mov    DWORD PTR [ebp-0x4],ebx
1000939f:	mov    DWORD PTR [edi+0x4],ebx
100093a2:	mov    DWORD PTR [edi+0x8],ebx
100093a5:	mov    DWORD PTR [edi+0xc],ebx
100093a8:	mov    BYTE PTR [ebp-0x4],0x3
100093ac:	lea    esi,[edi+0x20]
100093af:	mov    DWORD PTR [edi+0x10],ebx
100093b2:	mov    DWORD PTR [edi+0x14],ebx
100093b5:	mov    DWORD PTR [edi+0x18],ebx
100093b8:	mov    DWORD PTR [edi+0x1c],ebx
100093bb:	call   0x10007d25
100093c0:	mov    DWORD PTR [edi+0x34],ebx
100093c3:	mov    DWORD PTR [edi+0x38],ebx
100093c6:	mov    eax,edi
100093c8:	call   0x10059ecd
100093cd:	ret    0x4
100093d0:	push   ebx
100093d1:	push   esi
100093d2:	mov    esi,ecx
100093d4:	push   edi
100093d5:	mov    edi,DWORD PTR [esi+0x34]
100093d8:	mov    ebx,eax
100093da:	cmp    ebx,edi
100093dc:	je     0x100093e7
100093de:	test   edi,edi
100093e0:	je     0x100093e7
100093e2:	call   0x1000a38e
100093e7:	mov    DWORD PTR [esi+0x34],ebx
100093ea:	mov    edi,DWORD PTR [esi]
100093ec:	test   edi,edi
100093ee:	je     0x100093fc
100093f0:	push   DWORD PTR [edi]
100093f2:	mov    eax,ebx
100093f4:	call   0x10007a94
100093f9:	mov    DWORD PTR [edi+0x20],ebx
100093fc:	mov    edi,DWORD PTR [esi+0x4]
100093ff:	test   edi,edi
10009401:	je     0x10009412
10009403:	mov    ebx,DWORD PTR [esi+0x34]
10009406:	push   DWORD PTR [edi]
10009408:	mov    eax,ebx
1000940a:	call   0x10007a94
1000940f:	mov    DWORD PTR [edi+0x20],ebx
10009412:	mov    edi,DWORD PTR [esi+0x8]
10009415:	test   edi,edi
10009417:	je     0x10009428
10009419:	mov    ebx,DWORD PTR [esi+0x34]
1000941c:	push   DWORD PTR [edi]
1000941e:	mov    eax,ebx
10009420:	call   0x10007a94
10009425:	mov    DWORD PTR [edi+0x20],ebx
10009428:	lea    ebx,[esi+0x20]
1000942b:	mov    esi,DWORD PTR [esi+0x34]
1000942e:	test   esi,esi
10009430:	mov    DWORD PTR [ebx+0xc],esi
10009433:	je     0x1000943a
10009435:	call   0x10008932
1000943a:	pop    edi
1000943b:	pop    esi
1000943c:	pop    ebx
1000943d:	ret    
1000943e:	push   0xc
10009440:	mov    eax,0x100626f7
10009445:	call   0x10059df5
1000944a:	mov    esi,ecx
1000944c:	mov    DWORD PTR [ebp-0x14],ebx
1000944f:	and    DWORD PTR [ebp-0x4],0x0
10009453:	mov    eax,DWORD PTR [esi+0x34]
10009456:	mov    edi,DWORD PTR [ebx+0x18]
10009459:	test   edi,edi
1000945b:	mov    ecx,DWORD PTR [eax+0x18]
1000945e:	mov    DWORD PTR [ebp-0x10],ecx
10009461:	je     0x1000946b
10009463:	push   DWORD PTR [ebx+0x14]
10009466:	call   0x100079fa
1000946b:	mov    eax,DWORD PTR [esi+0xc]
1000946e:	test   eax,eax
10009470:	je     0x1000947f
10009472:	mov    edi,DWORD PTR [esi+0x34]
10009475:	mov    ecx,DWORD PTR [ebp-0x10]
10009478:	mov    esi,eax
1000947a:	call   0x10007d12
1000947f:	mov    edi,ebx
10009481:	call   0x1000a38e
10009486:	call   0x10059ecd
1000948b:	ret    
1000948c:	mov    eax,DWORD PTR [ecx+0x34]
1000948f:	test   eax,eax
10009491:	je     0x10009497
10009493:	mov    eax,DWORD PTR [eax+0x18]
10009496:	ret    
10009497:	mov    eax,DWORD PTR [ecx+0x38]
1000949a:	ret    
1000949b:	push   0x8
1000949d:	mov    eax,0x1006435e
100094a2:	call   0x10059df5
100094a7:	push   0x40
100094a9:	call   0x10043196
100094ae:	pop    ecx
100094af:	mov    DWORD PTR [ebp-0x10],eax
100094b2:	xor    esi,esi
100094b4:	cmp    eax,esi
100094b6:	mov    DWORD PTR [ebp-0x4],esi
100094b9:	je     0x100094c3
100094bb:	push   eax
100094bc:	call   0x10009389
100094c1:	mov    esi,eax
100094c3:	mov    DWORD PTR [ebp-0x10],esi
100094c6:	mov    eax,DWORD PTR [ebp+0x8]
100094c9:	mov    DWORD PTR [ebp-0x4],0x1
100094d0:	mov    ecx,DWORD PTR [eax]
100094d2:	call   0x10007c6c
100094d7:	mov    ebx,eax
100094d9:	mov    edi,esi
100094db:	call   0x1000a14c
100094e0:	mov    eax,DWORD PTR [ebp+0x8]
100094e3:	mov    ecx,DWORD PTR [eax+0x4]
100094e6:	call   0x10007c6c
100094eb:	lea    edi,[esi+0x4]
100094ee:	mov    ebx,eax
100094f0:	call   0x1000a14c
100094f5:	mov    eax,DWORD PTR [ebp+0x8]
100094f8:	mov    ecx,DWORD PTR [eax+0x8]
100094fb:	call   0x10007c6c
10009500:	lea    edi,[esi+0x8]
10009503:	mov    ebx,eax
10009505:	call   0x1000a14c
1000950a:	mov    edi,DWORD PTR [ebp+0x8]
1000950d:	mov    ecx,DWORD PTR [edi+0xc]
10009510:	test   ecx,ecx
10009512:	je     0x10009526
10009514:	call   0x10007c6c
10009519:	lea    edi,[esi+0xc]
1000951c:	mov    ebx,eax
1000951e:	call   0x1000a14c
10009523:	mov    edi,DWORD PTR [ebp+0x8]
10009526:	lea    eax,[edi+0x20]
10009529:	push   eax
1000952a:	lea    eax,[esi+0x20]
1000952d:	push   eax
1000952e:	call   0x10007e17
10009533:	mov    eax,DWORD PTR [edi+0x10]
10009536:	mov    DWORD PTR [esi+0x10],eax
10009539:	mov    eax,DWORD PTR [edi+0x14]
1000953c:	mov    DWORD PTR [esi+0x14],eax
1000953f:	mov    eax,DWORD PTR [edi+0x18]
10009542:	mov    DWORD PTR [esi+0x18],eax
10009545:	mov    eax,DWORD PTR [edi+0x1c]
10009548:	mov    ecx,edi
1000954a:	mov    DWORD PTR [esi+0x1c],eax
1000954d:	call   0x1000948c
10009552:	and    DWORD PTR [ebp-0x10],0x0
10009556:	or     DWORD PTR [ebp-0x4],0xffffffff
1000955a:	mov    DWORD PTR [esi+0x38],eax
1000955d:	lea    eax,[ebp-0x10]
10009560:	call   0x1000a2dc
10009565:	mov    eax,esi
10009567:	call   0x10059ecd
1000956c:	ret    0x4
1000956f:	push   0x40
10009571:	mov    eax,0x10063514
10009576:	call   0x10059df5
1000957b:	and    DWORD PTR [ebp-0x14],0x0
1000957f:	mov    ebx,DWORD PTR [ebp+0x8]
10009582:	mov    eax,DWORD PTR [ebx]
10009584:	lea    ecx,[ebp-0x30]
10009587:	push   ecx
10009588:	call   0x10007ca8
1000958d:	and    DWORD PTR [ebp-0x4],0x0
10009591:	mov    esi,DWORD PTR [edi]
10009593:	push   eax
10009594:	mov    DWORD PTR [ebp-0x14],0x1
1000959b:	call   0x10007cc3
100095a0:	test   al,al
100095a2:	setne  BYTE PTR [ebp-0xd]
100095a6:	or     DWORD PTR [ebp-0x4],0xffffffff
100095aa:	xor    esi,esi
100095ac:	push   0x0
100095ae:	inc    esi
100095af:	push   esi
100095b0:	lea    ecx,[ebp-0x30]
100095b3:	call   0x100012f0
100095b8:	mov    eax,DWORD PTR [ebx+0x4]
100095bb:	lea    ecx,[ebp-0x30]
100095be:	push   ecx
100095bf:	call   0x10007ca8
100095c4:	mov    DWORD PTR [ebp-0x4],esi
100095c7:	mov    esi,DWORD PTR [edi+0x4]
100095ca:	push   eax
100095cb:	mov    DWORD PTR [ebp-0x14],0x2
100095d2:	call   0x10007cc3
100095d7:	test   al,al
100095d9:	jne    0x100095e3
100095db:	cmp    BYTE PTR [ebp-0xd],al
100095de:	mov    BYTE PTR [ebp-0xd],al
100095e1:	je     0x100095e7
100095e3:	mov    BYTE PTR [ebp-0xd],0x1
100095e7:	or     DWORD PTR [ebp-0x4],0xffffffff
100095eb:	push   0x0
100095ed:	push   0x1
100095ef:	lea    ecx,[ebp-0x30]
100095f2:	call   0x100012f0
100095f7:	mov    eax,DWORD PTR [ebx+0x8]
100095fa:	lea    ecx,[ebp-0x30]
100095fd:	push   ecx
100095fe:	call   0x10007ca8
10009603:	mov    DWORD PTR [ebp-0x4],0x2
1000960a:	mov    esi,DWORD PTR [edi+0x8]
1000960d:	push   eax
1000960e:	mov    DWORD PTR [ebp-0x14],0x4
10009615:	call   0x10007cc3
1000961a:	test   al,al
1000961c:	jne    0x10009626
1000961e:	cmp    BYTE PTR [ebp-0xd],al
10009621:	mov    BYTE PTR [ebp-0xd],al
10009624:	je     0x1000962a
10009626:	mov    BYTE PTR [ebp-0xd],0x1
1000962a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000962e:	push   0x0
10009630:	push   0x1
10009632:	lea    ecx,[ebp-0x30]
10009635:	call   0x100012f0
1000963a:	mov    eax,DWORD PTR [ebx+0xc]
1000963d:	test   eax,eax
1000963f:	je     0x10009687
10009641:	cmp    DWORD PTR [edi+0xc],0x0
10009645:	je     0x10009687
10009647:	lea    ecx,[ebp-0x4c]
1000964a:	push   ecx
1000964b:	call   0x10007ca8
10009650:	mov    DWORD PTR [ebp-0x4],0x3
10009657:	mov    esi,DWORD PTR [edi+0xc]
1000965a:	push   eax
1000965b:	mov    DWORD PTR [ebp-0x14],0x8
10009662:	call   0x10007cc3
10009667:	test   al,al
10009669:	jne    0x10009673
1000966b:	cmp    BYTE PTR [ebp-0xd],al
1000966e:	mov    BYTE PTR [ebp-0xd],al
10009671:	je     0x10009677
10009673:	mov    BYTE PTR [ebp-0xd],0x1
10009677:	or     DWORD PTR [ebp-0x4],0xffffffff
1000967b:	push   0x0
1000967d:	push   0x1
1000967f:	lea    ecx,[ebp-0x4c]
10009682:	call   0x100012f0
10009687:	add    ebx,0x20
1000968a:	lea    ecx,[edi+0x20]
1000968d:	call   0x1000805c
10009692:	test   al,al
10009694:	jne    0x1000969d
10009696:	xor    bl,bl
10009698:	cmp    BYTE PTR [ebp-0xd],bl
1000969b:	je     0x1000969f
1000969d:	mov    bl,0x1
1000969f:	mov    edx,DWORD PTR [ebp+0x8]
100096a2:	mov    eax,DWORD PTR [edx+0x10]
100096a5:	cmp    eax,DWORD PTR [edi+0x10]
100096a8:	mov    esi,DWORD PTR [edx+0x14]
100096ab:	jne    0x100096b2
100096ad:	cmp    esi,DWORD PTR [edi+0x14]
100096b0:	je     0x100096ba
100096b2:	mov    bl,0x1
100096b4:	mov    DWORD PTR [edi+0x10],eax
100096b7:	mov    DWORD PTR [edi+0x14],esi
100096ba:	mov    eax,DWORD PTR [edx+0x18]
100096bd:	cmp    eax,DWORD PTR [edi+0x18]
100096c0:	mov    esi,DWORD PTR [edx+0x1c]
100096c3:	jne    0x100096ca
100096c5:	cmp    esi,DWORD PTR [edi+0x1c]
100096c8:	je     0x100096d2
100096ca:	mov    bl,0x1
100096cc:	mov    DWORD PTR [edi+0x18],eax
100096cf:	mov    DWORD PTR [edi+0x1c],esi
100096d2:	cmp    DWORD PTR [edi+0x34],0x0
100096d6:	jne    0x100096f8
100096d8:	mov    ecx,edx
100096da:	call   0x1000948c
100096df:	mov    ecx,edi
100096e1:	mov    esi,eax
100096e3:	call   0x1000948c
100096e8:	cmp    esi,eax
100096ea:	je     0x100096f8
100096ec:	mov    ecx,edx
100096ee:	mov    bl,0x1
100096f0:	call   0x1000948c
100096f5:	mov    DWORD PTR [edi+0x38],eax
100096f8:	mov    al,bl
100096fa:	call   0x10059ecd
100096ff:	ret    0x4
10009702:	push   0x74
10009704:	mov    eax,0x10060a4f
10009709:	call   0x10059df5
1000970e:	mov    eax,DWORD PTR [esi]
10009710:	lea    ecx,[ebp-0x44]
10009713:	push   ecx
10009714:	call   0x10007ca8
10009719:	mov    ebx,eax
1000971b:	and    DWORD PTR [ebp-0x4],0x0
1000971f:	mov    eax,DWORD PTR [edi]
10009721:	lea    ecx,[ebp-0x28]
10009724:	push   ecx
10009725:	call   0x10007ca8
1000972a:	mov    ecx,ebx
1000972c:	mov    BYTE PTR [ebp-0x4],0x1
10009730:	call   0x10006803
10009735:	mov    bl,al
10009737:	neg    bl
10009739:	push   0x0
1000973b:	sbb    bl,bl
1000973d:	push   0x1
1000973f:	lea    ecx,[ebp-0x28]
10009742:	inc    bl
10009744:	call   0x100012f0
10009749:	or     DWORD PTR [ebp-0x4],0xffffffff
1000974d:	push   0x0
1000974f:	push   0x1
10009751:	lea    ecx,[ebp-0x44]
10009754:	call   0x100012f0
10009759:	test   bl,bl
1000975b:	je     0x10009764
1000975d:	xor    al,al
1000975f:	jmp    0x1000986a
10009764:	mov    eax,DWORD PTR [esi+0x4]
10009767:	lea    ecx,[ebp-0x28]
1000976a:	push   ecx
1000976b:	call   0x10007ca8
10009770:	mov    ebx,eax
10009772:	lea    ecx,[ebp-0x44]
10009775:	mov    DWORD PTR [ebp-0x4],0x2
1000977c:	mov    eax,DWORD PTR [edi+0x4]
1000977f:	push   ecx
10009780:	call   0x10007ca8
10009785:	mov    ecx,ebx
10009787:	mov    BYTE PTR [ebp-0x4],0x3
1000978b:	call   0x10006803
10009790:	mov    bl,al
10009792:	neg    bl
10009794:	push   0x0
10009796:	sbb    bl,bl
10009798:	push   0x1
1000979a:	lea    ecx,[ebp-0x44]
1000979d:	inc    bl
1000979f:	call   0x100012f0
100097a4:	or     DWORD PTR [ebp-0x4],0xffffffff
100097a8:	push   0x0
100097aa:	push   0x1
100097ac:	lea    ecx,[ebp-0x28]
100097af:	call   0x100012f0
100097b4:	test   bl,bl
100097b6:	jne    0x1000975d
100097b8:	mov    eax,DWORD PTR [esi+0x8]
100097bb:	lea    ecx,[ebp-0x7c]
100097be:	push   ecx
100097bf:	call   0x10007ca8
100097c4:	mov    ebx,eax
100097c6:	lea    ecx,[ebp-0x60]
100097c9:	mov    DWORD PTR [ebp-0x4],0x4
100097d0:	mov    eax,DWORD PTR [edi+0x8]
100097d3:	push   ecx
100097d4:	call   0x10007ca8
100097d9:	mov    ecx,ebx
100097db:	mov    BYTE PTR [ebp-0x4],0x5
100097df:	call   0x10006803
100097e4:	mov    bl,al
100097e6:	neg    bl
100097e8:	push   0x0
100097ea:	sbb    bl,bl
100097ec:	push   0x1
100097ee:	lea    ecx,[ebp-0x60]
100097f1:	inc    bl
100097f3:	call   0x100012f0
100097f8:	or     DWORD PTR [ebp-0x4],0xffffffff
100097fc:	push   0x0
100097fe:	push   0x1
10009800:	lea    ecx,[ebp-0x7c]
10009803:	call   0x100012f0
10009808:	test   bl,bl
1000980a:	jne    0x1000975d
10009810:	lea    eax,[esi+0x20]
10009813:	push   eax
10009814:	lea    eax,[edi+0x20]
10009817:	push   eax
10009818:	call   0x10007f5b
1000981d:	test   al,al
1000981f:	je     0x1000975d
10009825:	mov    eax,DWORD PTR [esi+0x10]
10009828:	cmp    eax,DWORD PTR [edi+0x10]
1000982b:	jne    0x1000975d
10009831:	mov    eax,DWORD PTR [esi+0x14]
10009834:	cmp    eax,DWORD PTR [edi+0x14]
10009837:	jne    0x1000975d
1000983d:	mov    eax,DWORD PTR [esi+0x18]
10009840:	cmp    eax,DWORD PTR [edi+0x18]
10009843:	jne    0x1000975d
10009849:	mov    eax,DWORD PTR [esi+0x1c]
1000984c:	cmp    eax,DWORD PTR [edi+0x1c]
1000984f:	jne    0x1000975d
10009855:	mov    ecx,esi
10009857:	call   0x1000948c
1000985c:	mov    ecx,edi
1000985e:	mov    edx,eax
10009860:	call   0x1000948c
10009865:	cmp    edx,eax
10009867:	sete   al
1000986a:	call   0x10059ecd
1000986f:	ret    
10009870:	push   0x34
10009872:	mov    eax,0x10064327
10009877:	call   0x10059e5e
1000987c:	mov    eax,DWORD PTR [ebp+0x8]
1000987f:	mov    DWORD PTR [ebp-0x38],eax
10009882:	mov    eax,DWORD PTR [ebp+0xc]
10009885:	push   0x40
10009887:	mov    ebx,ecx
10009889:	mov    DWORD PTR [ebp-0x34],eax
1000988c:	call   0x10043196
10009891:	pop    ecx
10009892:	mov    DWORD PTR [ebp-0x40],eax
10009895:	xor    esi,esi
10009897:	cmp    eax,esi
10009899:	mov    DWORD PTR [ebp-0x4],esi
1000989c:	je     0x100098a9
1000989e:	push   eax
1000989f:	call   0x100089ba
100098a4:	mov    DWORD PTR [ebp-0x30],eax
100098a7:	jmp    0x100098ac
100098a9:	mov    DWORD PTR [ebp-0x30],esi
100098ac:	mov    eax,DWORD PTR [ebp-0x30]
100098af:	mov    DWORD PTR [ebp-0x40],eax
100098b2:	mov    DWORD PTR [ebp-0x4],0x1
100098b9:	push   esi
100098ba:	lea    ecx,[ebp-0x2c]
100098bd:	mov    DWORD PTR [ebp-0x14],0xf
100098c4:	call   0x1000141c
100098c9:	push   0xffffffff
100098cb:	push   esi
100098cc:	mov    BYTE PTR [ebp-0x4],0x2
100098d0:	mov    edi,DWORD PTR [ebp-0x18]
100098d3:	mov    eax,ebx
100098d5:	lea    esi,[ebp-0x2c]
100098d8:	call   0x10004cbe
100098dd:	mov    esi,DWORD PTR [ebp-0x18]
100098e0:	push   0x24
100098e2:	call   0x10043196
100098e7:	pop    ecx
100098e8:	mov    DWORD PTR [ebp-0x3c],eax
100098eb:	test   eax,eax
100098ed:	mov    BYTE PTR [ebp-0x4],0x3
100098f1:	je     0x10009900
100098f3:	sub    esi,edi
100098f5:	push   esi
100098f6:	push   edi
100098f7:	push   ebx
100098f8:	push   eax
100098f9:	call   0x10007c23
100098fe:	jmp    0x10009902
10009900:	xor    eax,eax
10009902:	mov    edi,DWORD PTR [ebp-0x30]
10009905:	mov    ebx,eax
10009907:	mov    BYTE PTR [ebp-0x4],0x2
1000990b:	call   0x1000a14c
10009910:	push   0x1006e584
10009915:	lea    eax,[ebp-0x2c]
10009918:	push   eax
10009919:	call   0x10004126
1000991e:	mov    eax,DWORD PTR [ebp-0x38]
10009921:	mov    edi,DWORD PTR [ebp-0x18]
10009924:	push   0xffffffff
10009926:	push   0x0
10009928:	lea    esi,[ebp-0x2c]
1000992b:	call   0x10004cbe
10009930:	mov    esi,DWORD PTR [ebp-0x18]
10009933:	push   0x24
10009935:	call   0x10043196
1000993a:	pop    ecx
1000993b:	mov    DWORD PTR [ebp-0x3c],eax
1000993e:	test   eax,eax
10009940:	mov    BYTE PTR [ebp-0x4],0x4
10009944:	je     0x10009955
10009946:	sub    esi,edi
10009948:	push   esi
10009949:	push   edi
1000994a:	push   DWORD PTR [ebp-0x38]
1000994d:	push   eax
1000994e:	call   0x10007c23
10009953:	jmp    0x10009957
10009955:	xor    eax,eax
10009957:	mov    edi,DWORD PTR [ebp-0x30]
1000995a:	add    edi,0x4
1000995d:	mov    ebx,eax
1000995f:	mov    BYTE PTR [ebp-0x4],0x2
10009963:	call   0x1000a14c
10009968:	push   0x1006e584
1000996d:	lea    eax,[ebp-0x2c]
10009970:	push   eax
10009971:	call   0x10004126
10009976:	push   0x1006e588
1000997b:	push   0x5
1000997d:	mov    ecx,0x1006e5c0
10009982:	call   0x100042b4
10009987:	pop    ecx
10009988:	pop    ecx
10009989:	push   eax
1000998a:	lea    eax,[ebp-0x2c]
1000998d:	push   eax
1000998e:	call   0x10004126
10009993:	mov    eax,DWORD PTR [ebp-0x34]
10009996:	mov    edi,DWORD PTR [ebp-0x18]
10009999:	push   0xffffffff
1000999b:	push   0x0
1000999d:	lea    esi,[ebp-0x2c]
100099a0:	call   0x10004cbe
100099a5:	mov    esi,DWORD PTR [ebp-0x18]
100099a8:	push   0x24
100099aa:	mov    DWORD PTR [ebp-0x38],esi
100099ad:	call   0x10043196
100099b2:	pop    ecx
100099b3:	mov    DWORD PTR [ebp-0x3c],eax
100099b6:	test   eax,eax
100099b8:	mov    BYTE PTR [ebp-0x4],0x5
100099bc:	je     0x100099cd
100099be:	sub    esi,edi
100099c0:	push   esi
100099c1:	push   edi
100099c2:	push   DWORD PTR [ebp-0x34]
100099c5:	push   eax
100099c6:	call   0x10007c23
100099cb:	jmp    0x100099cf
100099cd:	xor    eax,eax
100099cf:	mov    esi,DWORD PTR [ebp-0x30]
100099d2:	lea    edi,[esi+0x8]
100099d5:	mov    ebx,eax
100099d7:	mov    BYTE PTR [ebp-0x4],0x2
100099db:	call   0x1000a14c
100099e0:	mov    ebx,0x1006e4b0
100099e5:	push   ebx
100099e6:	lea    eax,[ebp-0x2c]
100099e9:	push   eax
100099ea:	call   0x10004126
100099ef:	push   DWORD PTR [ebp-0x18]
100099f2:	lea    edi,[esi+0x18]
100099f5:	call   0x10007d4f
100099fa:	push   ebx
100099fb:	lea    eax,[ebp-0x2c]
100099fe:	push   eax
100099ff:	call   0x10004126
10009a04:	push   0x24
10009a06:	call   0x10043196
10009a0b:	pop    ecx
10009a0c:	mov    DWORD PTR [ebp-0x3c],eax
10009a0f:	xor    ebx,ebx
10009a11:	cmp    eax,ebx
10009a13:	mov    BYTE PTR [ebp-0x4],0x6
10009a17:	je     0x10009a23
10009a19:	push   eax
10009a1a:	call   0x100079b2
10009a1f:	mov    esi,eax
10009a21:	jmp    0x10009a25
10009a23:	xor    esi,esi
10009a25:	mov    DWORD PTR [ebp-0x34],esi
10009a28:	mov    eax,DWORD PTR [ebp-0x38]
10009a2b:	mov    BYTE PTR [ebp-0x4],0x7
10009a2f:	call   0x10007bd7
10009a34:	cmp    DWORD PTR [ebp-0x14],0x10
10009a38:	mov    eax,DWORD PTR [ebp-0x28]
10009a3b:	jae    0x10009a40
10009a3d:	lea    eax,[ebp-0x28]
10009a40:	mov    edi,DWORD PTR [ebp-0x18]
10009a43:	push   eax
10009a44:	mov    eax,esi
10009a46:	call   0x100079fa
10009a4b:	mov    ecx,DWORD PTR [ebp-0x30]
10009a4e:	mov    eax,esi
10009a50:	mov    DWORD PTR [ebp-0x34],ebx
10009a53:	call   0x10008a04
10009a58:	push   ebx
10009a59:	push   0x1
10009a5b:	lea    ecx,[ebp-0x2c]
10009a5e:	mov    DWORD PTR [ebp-0x40],ebx
10009a61:	call   0x100012f0
10009a66:	or     DWORD PTR [ebp-0x4],0xffffffff
10009a6a:	lea    ecx,[ebp-0x40]
10009a6d:	call   0x1000a176
10009a72:	mov    eax,DWORD PTR [ebp-0x30]
10009a75:	call   0x10059ee1
10009a7a:	ret    
10009a7b:	push   0x70
10009a7d:	mov    eax,0x100642b8
10009a82:	call   0x10059e5e
10009a87:	mov    eax,DWORD PTR [ebp+0x8]
10009a8a:	mov    DWORD PTR [ebp-0x4c],eax
10009a8d:	mov    eax,DWORD PTR [ebp+0xc]
10009a90:	xor    esi,esi
10009a92:	push   0x40
10009a94:	mov    ebx,ecx
10009a96:	mov    DWORD PTR [ebp-0x5c],eax
10009a99:	mov    DWORD PTR [ebp-0x54],esi
10009a9c:	call   0x10043196
10009aa1:	pop    ecx
10009aa2:	mov    DWORD PTR [ebp-0x60],eax
10009aa5:	cmp    eax,esi
10009aa7:	mov    DWORD PTR [ebp-0x4],esi
10009aaa:	je     0x10009ab7
10009aac:	push   eax
10009aad:	call   0x10009389
10009ab2:	mov    DWORD PTR [ebp-0x50],eax
10009ab5:	jmp    0x10009aba
10009ab7:	mov    DWORD PTR [ebp-0x50],esi
10009aba:	mov    eax,DWORD PTR [ebp-0x50]
10009abd:	mov    DWORD PTR [ebp-0x60],eax
10009ac0:	mov    DWORD PTR [ebp-0x4],0x1
10009ac7:	push   esi
10009ac8:	lea    ecx,[ebp-0x2c]
10009acb:	mov    DWORD PTR [ebp-0x14],0xf
10009ad2:	call   0x1000141c
10009ad7:	push   0x1006e5c8
10009adc:	lea    eax,[ebp-0x2c]
10009adf:	push   eax
10009ae0:	mov    BYTE PTR [ebp-0x4],0x2
10009ae4:	call   0x10004126
10009ae9:	mov    edi,DWORD PTR [ebp-0x18]
10009aec:	push   0xffffffff
10009aee:	push   esi
10009aef:	mov    eax,ebx
10009af1:	lea    esi,[ebp-0x2c]
10009af4:	call   0x10004cbe
10009af9:	mov    esi,DWORD PTR [ebp-0x18]
10009afc:	push   0x24
10009afe:	call   0x10043196
10009b03:	pop    ecx
10009b04:	mov    DWORD PTR [ebp-0x58],eax
10009b07:	test   eax,eax
10009b09:	mov    BYTE PTR [ebp-0x4],0x3
10009b0d:	je     0x10009b1c
10009b0f:	sub    esi,edi
10009b11:	push   esi
10009b12:	push   edi
10009b13:	push   ebx
10009b14:	push   eax
10009b15:	call   0x10007c23
10009b1a:	jmp    0x10009b1e
10009b1c:	xor    eax,eax
10009b1e:	mov    edi,DWORD PTR [ebp-0x50]
10009b21:	mov    ebx,eax
10009b23:	mov    BYTE PTR [ebp-0x4],0x2
10009b27:	call   0x1000a14c
10009b2c:	push   0x1006e584
10009b31:	lea    eax,[ebp-0x2c]
10009b34:	push   eax
10009b35:	call   0x10004126
10009b3a:	mov    eax,DWORD PTR [ebp-0x4c]
10009b3d:	mov    edi,DWORD PTR [ebp-0x18]
10009b40:	push   0xffffffff
10009b42:	push   0x0
10009b44:	lea    esi,[ebp-0x2c]
10009b47:	call   0x10004cbe
10009b4c:	mov    esi,DWORD PTR [ebp-0x18]
10009b4f:	push   0x24
10009b51:	call   0x10043196
10009b56:	pop    ecx
10009b57:	mov    DWORD PTR [ebp-0x58],eax
10009b5a:	test   eax,eax
10009b5c:	mov    BYTE PTR [ebp-0x4],0x4
10009b60:	je     0x10009b71
10009b62:	sub    esi,edi
10009b64:	push   esi
10009b65:	push   edi
10009b66:	push   DWORD PTR [ebp-0x4c]
10009b69:	push   eax
10009b6a:	call   0x10007c23
10009b6f:	jmp    0x10009b73
10009b71:	xor    eax,eax
10009b73:	mov    edi,DWORD PTR [ebp-0x50]
10009b76:	add    edi,0x4
10009b79:	mov    ebx,eax
10009b7b:	mov    BYTE PTR [ebp-0x4],0x2
10009b7f:	call   0x1000a14c
10009b84:	push   0x1006e584
10009b89:	lea    eax,[ebp-0x2c]
10009b8c:	push   eax
10009b8d:	call   0x10004126
10009b92:	mov    eax,DWORD PTR [ebp-0x5c]
10009b95:	mov    edi,DWORD PTR [ebp-0x18]
10009b98:	push   0xffffffff
10009b9a:	push   0x0
10009b9c:	lea    esi,[ebp-0x2c]
10009b9f:	call   0x10004cbe
10009ba4:	mov    esi,DWORD PTR [ebp-0x18]
10009ba7:	push   0x24
10009ba9:	mov    DWORD PTR [ebp-0x4c],esi
10009bac:	call   0x10043196
10009bb1:	pop    ecx
10009bb2:	mov    DWORD PTR [ebp-0x58],eax
10009bb5:	test   eax,eax
10009bb7:	mov    BYTE PTR [ebp-0x4],0x5
10009bbb:	je     0x10009bcc
10009bbd:	sub    esi,edi
10009bbf:	push   esi
10009bc0:	push   edi
10009bc1:	push   DWORD PTR [ebp-0x5c]
10009bc4:	push   eax
10009bc5:	call   0x10007c23
10009bca:	jmp    0x10009bce
10009bcc:	xor    eax,eax
10009bce:	mov    esi,DWORD PTR [ebp-0x50]
10009bd1:	lea    edi,[esi+0x8]
10009bd4:	mov    ebx,eax
10009bd6:	mov    BYTE PTR [ebp-0x4],0x2
10009bda:	call   0x1000a14c
10009bdf:	mov    ebx,0x1006e4b0
10009be4:	push   ebx
10009be5:	lea    eax,[ebp-0x2c]
10009be8:	push   eax
10009be9:	call   0x10004126
10009bee:	push   DWORD PTR [ebp-0x18]
10009bf1:	lea    edi,[esi+0x20]
10009bf4:	call   0x10007d4f
10009bf9:	push   ebx
10009bfa:	lea    eax,[ebp-0x2c]
10009bfd:	push   eax
10009bfe:	call   0x10004126
10009c03:	push   0x24
10009c05:	call   0x10043196
10009c0a:	pop    ecx
10009c0b:	mov    DWORD PTR [ebp-0x58],eax
10009c0e:	xor    ebx,ebx
10009c10:	cmp    eax,ebx
10009c12:	mov    BYTE PTR [ebp-0x4],0x6
10009c16:	je     0x10009c22
10009c18:	push   eax
10009c19:	call   0x100079b2
10009c1e:	mov    esi,eax
10009c20:	jmp    0x10009c24
10009c22:	xor    esi,esi
10009c24:	mov    DWORD PTR [ebp-0x5c],esi
10009c27:	mov    BYTE PTR [ebp-0x4],0x7
10009c2b:	mov    eax,DWORD PTR [ebp-0x4c]
10009c2e:	call   0x10007bd7
10009c33:	cmp    DWORD PTR [ebp-0x14],0x10
10009c37:	mov    eax,DWORD PTR [ebp-0x28]
10009c3a:	jae    0x10009c3f
10009c3c:	lea    eax,[ebp-0x28]
10009c3f:	mov    edi,DWORD PTR [ebp-0x18]
10009c42:	push   eax
10009c43:	mov    eax,esi
10009c45:	call   0x100079fa
10009c4a:	mov    eax,esi
10009c4c:	mov    esi,DWORD PTR [ebp-0x50]
10009c4f:	mov    ecx,esi
10009c51:	mov    DWORD PTR [ebp-0x5c],ebx
10009c54:	call   0x100093d0
10009c59:	cmp    BYTE PTR [ebp+0x10],bl
10009c5c:	je     0x10009d29
10009c62:	push   0x24
10009c64:	call   0x10043196
10009c69:	pop    ecx
10009c6a:	mov    DWORD PTR [ebp-0x4c],eax
10009c6d:	cmp    eax,ebx
10009c6f:	mov    BYTE PTR [ebp-0x4],0x8
10009c73:	je     0x10009c9d
10009c75:	push   0x1006dd18
10009c7a:	lea    ecx,[ebp-0x7c]
10009c7d:	call   0x100011a7
10009c82:	push   ebx
10009c83:	push   ebx
10009c84:	lea    eax,[ebp-0x7c]
10009c87:	mov    BYTE PTR [ebp-0x4],0x9
10009c8b:	push   eax
10009c8c:	push   DWORD PTR [ebp-0x4c]
10009c8f:	mov    DWORD PTR [ebp-0x54],0x1
10009c96:	call   0x10007c23
10009c9b:	jmp    0x10009c9f
10009c9d:	xor    eax,eax
10009c9f:	lea    edi,[esi+0xc]
10009ca2:	mov    ebx,eax
10009ca4:	call   0x1000a14c
10009ca9:	mov    DWORD PTR [ebp-0x4],0x7
10009cb0:	test   BYTE PTR [ebp-0x54],0x1
10009cb4:	je     0x10009cc2
10009cb6:	push   0x0
10009cb8:	push   0x1
10009cba:	lea    ecx,[ebp-0x7c]
10009cbd:	call   0x100012f0
10009cc2:	push   0x24
10009cc4:	call   0x10043196
10009cc9:	pop    ecx
10009cca:	mov    DWORD PTR [ebp-0x58],eax
10009ccd:	test   eax,eax
10009ccf:	mov    BYTE PTR [ebp-0x4],0xb
10009cd3:	je     0x10009cdf
10009cd5:	push   eax
10009cd6:	call   0x100079b2
10009cdb:	mov    ebx,eax
10009cdd:	jmp    0x10009ce1
10009cdf:	xor    ebx,ebx
10009ce1:	mov    DWORD PTR [ebp-0x54],ebx
10009ce4:	push   0x1006e4b0
10009ce9:	lea    ecx,[ebp-0x48]
10009cec:	mov    BYTE PTR [ebp-0x4],0xc
10009cf0:	call   0x100011a7
10009cf5:	mov    BYTE PTR [ebp-0x4],0xd
10009cf9:	cmp    DWORD PTR [ebp-0x30],0x10
10009cfd:	mov    eax,DWORD PTR [ebp-0x44]
10009d00:	jae    0x10009d05
10009d02:	lea    eax,[ebp-0x44]
10009d05:	mov    edi,DWORD PTR [ebp-0x34]
10009d08:	push   eax
10009d09:	mov    eax,ebx
10009d0b:	call   0x100079fa
10009d10:	and    DWORD PTR [ebp-0x54],0x0
10009d14:	mov    ecx,esi
10009d16:	call   0x1000943e
10009d1b:	push   0x0
10009d1d:	push   0x1
10009d1f:	lea    ecx,[ebp-0x48]
10009d22:	call   0x100012f0
10009d27:	xor    ebx,ebx
10009d29:	push   ebx
10009d2a:	push   0x1
10009d2c:	lea    ecx,[ebp-0x2c]
10009d2f:	mov    DWORD PTR [ebp-0x60],ebx
10009d32:	call   0x100012f0
10009d37:	or     DWORD PTR [ebp-0x4],0xffffffff
10009d3b:	lea    eax,[ebp-0x60]
10009d3e:	call   0x1000a2dc
10009d43:	mov    eax,esi
10009d45:	call   0x10059ee1
10009d4a:	ret    
10009d4b:	push   esi
10009d4c:	mov    esi,DWORD PTR [eax]
10009d4e:	test   esi,esi
10009d50:	je     0x10009d57
10009d52:	call   0x1000a2f2
10009d57:	pop    esi
10009d58:	ret    
10009d59:	push   ebp
10009d5a:	mov    ebp,esp
10009d5c:	sub    esp,0x18
10009d5f:	push   esi
10009d60:	mov    esi,DWORD PTR [ebp+0x8]
10009d63:	mov    eax,DWORD PTR [esi+0x4]
10009d66:	push   edi
10009d67:	mov    edi,DWORD PTR [eax+0x4]
10009d6a:	mov    DWORD PTR [ebp-0x4],eax
10009d6d:	mov    al,0x1
10009d6f:	mov    BYTE PTR [ebp-0x8],al
10009d72:	jmp    0x10009d90
10009d74:	mov    ecx,DWORD PTR [ebp+0xc]
10009d77:	lea    eax,[edi+0xc]
10009d7a:	mov    DWORD PTR [ebp-0x4],edi
10009d7d:	call   0x10007983
10009d82:	test   al,al
10009d84:	mov    BYTE PTR [ebp-0x8],al
10009d87:	je     0x10009d8d
10009d89:	mov    edi,DWORD PTR [edi]
10009d8b:	jmp    0x10009d90
10009d8d:	mov    edi,DWORD PTR [edi+0x8]
10009d90:	cmp    BYTE PTR [edi+0x39],0x0
10009d94:	je     0x10009d74
10009d96:	test   al,al
10009d98:	mov    edi,DWORD PTR [ebp-0x4]
10009d9b:	mov    DWORD PTR [ebp-0xc],edi
10009d9e:	mov    DWORD PTR [ebp-0x10],esi
10009da1:	je     0x10009def
10009da3:	mov    eax,DWORD PTR [esi+0x4]
10009da6:	mov    eax,DWORD PTR [eax]
10009da8:	mov    DWORD PTR [ebp-0x18],esi
10009dab:	lea    edi,[ebp-0x18]
10009dae:	lea    esi,[ebp-0x10]
10009db1:	mov    DWORD PTR [ebp-0x14],eax
10009db4:	call   0x10004b0c
10009db9:	test   al,al
10009dbb:	je     0x10009de1
10009dbd:	push   DWORD PTR [ebp+0xc]
10009dc0:	mov    esi,DWORD PTR [ebp+0x8]
10009dc3:	push   0x1
10009dc5:	mov    ecx,DWORD PTR [ebp-0x4]
10009dc8:	lea    eax,[ebp-0x18]
10009dcb:	push   eax
10009dcc:	call   0x1000a4b8
10009dd1:	mov    ecx,DWORD PTR [eax]
10009dd3:	mov    eax,DWORD PTR [eax+0x4]
10009dd6:	mov    DWORD PTR [ebx],ecx
10009dd8:	mov    DWORD PTR [ebx+0x4],eax
10009ddb:	mov    BYTE PTR [ebx+0x8],0x1
10009ddf:	jmp    0x10009e12
10009de1:	lea    esi,[ebp-0x10]
10009de4:	call   0x1000d7d4
10009de9:	mov    edi,DWORD PTR [ebp-0xc]
10009dec:	mov    esi,DWORD PTR [ebp+0x8]
10009def:	mov    eax,DWORD PTR [ebp+0xc]
10009df2:	lea    ecx,[edi+0xc]
10009df5:	call   0x10007983
10009dfa:	test   al,al
10009dfc:	je     0x10009e06
10009dfe:	push   DWORD PTR [ebp+0xc]
10009e01:	push   DWORD PTR [ebp-0x8]
10009e04:	jmp    0x10009dc5
10009e06:	mov    eax,DWORD PTR [ebp-0x10]
10009e09:	mov    DWORD PTR [ebx],eax
10009e0b:	mov    DWORD PTR [ebx+0x4],edi
10009e0e:	mov    BYTE PTR [ebx+0x8],0x0
10009e12:	pop    edi
10009e13:	mov    eax,ebx
10009e15:	pop    esi
10009e16:	leave  
10009e17:	ret    0x8
10009e1a:	push   0x44
10009e1c:	mov    eax,0x10060b46
10009e21:	call   0x10059df5
10009e26:	mov    edi,DWORD PTR [ebp+0x14]
10009e29:	cmp    BYTE PTR [edi+0x39],0x0
10009e2d:	je     0x10009e61
10009e2f:	push   0x1006dcfc
10009e34:	lea    ecx,[ebp-0x28]
10009e37:	call   0x100011a7
10009e3c:	and    DWORD PTR [ebp-0x4],0x0
10009e40:	lea    eax,[ebp-0x28]
10009e43:	push   eax
10009e44:	lea    ecx,[ebp-0x50]
10009e47:	call   0x10001077
10009e4c:	push   0x10076428
10009e51:	lea    eax,[ebp-0x50]
10009e54:	push   eax
10009e55:	mov    DWORD PTR [ebp-0x50],0x1006c988
10009e5c:	call   0x10047942
10009e61:	lea    esi,[ebp+0x10]
10009e64:	call   0x1000a19a
10009e69:	mov    ecx,DWORD PTR [edi]
10009e6b:	cmp    BYTE PTR [ecx+0x39],0x0
10009e6f:	je     0x10009e76
10009e71:	mov    ebx,DWORD PTR [edi+0x8]
10009e74:	jmp    0x10009e8d
10009e76:	mov    eax,DWORD PTR [edi+0x8]
10009e79:	cmp    BYTE PTR [eax+0x39],0x0
10009e7d:	je     0x10009e83
10009e7f:	mov    ebx,ecx
10009e81:	jmp    0x10009e8d
10009e83:	mov    eax,DWORD PTR [ebp+0x14]
10009e86:	cmp    eax,edi
10009e88:	mov    ebx,DWORD PTR [eax+0x8]
10009e8b:	jne    0x10009f03
10009e8d:	cmp    BYTE PTR [ebx+0x39],0x0
10009e91:	mov    esi,DWORD PTR [edi+0x4]
10009e94:	jne    0x10009e99
10009e96:	mov    DWORD PTR [ebx+0x4],esi
10009e99:	mov    ecx,DWORD PTR [ebp+0x8]
10009e9c:	mov    eax,DWORD PTR [ecx+0x4]
10009e9f:	cmp    DWORD PTR [eax+0x4],edi
10009ea2:	jne    0x10009ea9
10009ea4:	mov    DWORD PTR [eax+0x4],ebx
10009ea7:	jmp    0x10009eb4
10009ea9:	cmp    DWORD PTR [esi],edi
10009eab:	jne    0x10009eb1
10009ead:	mov    DWORD PTR [esi],ebx
10009eaf:	jmp    0x10009eb4
10009eb1:	mov    DWORD PTR [esi+0x8],ebx
10009eb4:	mov    edx,DWORD PTR [ecx+0x4]
10009eb7:	cmp    DWORD PTR [edx],edi
10009eb9:	jne    0x10009ed7
10009ebb:	cmp    BYTE PTR [ebx+0x39],0x0
10009ebf:	je     0x10009ec5
10009ec1:	mov    ecx,esi
10009ec3:	jmp    0x10009ed5
10009ec5:	mov    eax,DWORD PTR [ebx]
10009ec7:	mov    ecx,ebx
10009ec9:	jmp    0x10009ecf
10009ecb:	mov    ecx,eax
10009ecd:	mov    eax,DWORD PTR [ecx]
10009ecf:	cmp    BYTE PTR [eax+0x39],0x0
10009ed3:	je     0x10009ecb
10009ed5:	mov    DWORD PTR [edx],ecx
10009ed7:	mov    eax,DWORD PTR [ebp+0x8]
10009eda:	mov    edx,DWORD PTR [eax+0x4]
10009edd:	cmp    DWORD PTR [edx+0x8],edi
10009ee0:	jne    0x10009f5d
10009ee2:	cmp    BYTE PTR [ebx+0x39],0x0
10009ee6:	je     0x10009eec
10009ee8:	mov    ecx,esi
10009eea:	jmp    0x10009efe
10009eec:	mov    eax,DWORD PTR [ebx+0x8]
10009eef:	mov    ecx,ebx
10009ef1:	jmp    0x10009ef8
10009ef3:	mov    ecx,eax
10009ef5:	mov    eax,DWORD PTR [ecx+0x8]
10009ef8:	cmp    BYTE PTR [eax+0x39],0x0
10009efc:	je     0x10009ef3
10009efe:	mov    DWORD PTR [edx+0x8],ecx
10009f01:	jmp    0x10009f5d
10009f03:	mov    DWORD PTR [ecx+0x4],eax
10009f06:	mov    ecx,DWORD PTR [edi]
10009f08:	mov    DWORD PTR [eax],ecx
10009f0a:	cmp    eax,DWORD PTR [edi+0x8]
10009f0d:	jne    0x10009f13
10009f0f:	mov    esi,eax
10009f11:	jmp    0x10009f2d
10009f13:	cmp    BYTE PTR [ebx+0x39],0x0
10009f17:	mov    esi,DWORD PTR [eax+0x4]
10009f1a:	jne    0x10009f1f
10009f1c:	mov    DWORD PTR [ebx+0x4],esi
10009f1f:	mov    DWORD PTR [esi],ebx
10009f21:	mov    ecx,DWORD PTR [edi+0x8]
10009f24:	mov    DWORD PTR [eax+0x8],ecx
10009f27:	mov    ecx,DWORD PTR [edi+0x8]
10009f2a:	mov    DWORD PTR [ecx+0x4],eax
10009f2d:	mov    ecx,DWORD PTR [ebp+0x8]
10009f30:	mov    ecx,DWORD PTR [ecx+0x4]
10009f33:	cmp    DWORD PTR [ecx+0x4],edi
10009f36:	jne    0x10009f3d
10009f38:	mov    DWORD PTR [ecx+0x4],eax
10009f3b:	jmp    0x10009f4b
10009f3d:	mov    ecx,DWORD PTR [edi+0x4]
10009f40:	cmp    DWORD PTR [ecx],edi
10009f42:	jne    0x10009f48
10009f44:	mov    DWORD PTR [ecx],eax
10009f46:	jmp    0x10009f4b
10009f48:	mov    DWORD PTR [ecx+0x8],eax
10009f4b:	mov    ecx,DWORD PTR [edi+0x4]
10009f4e:	mov    DWORD PTR [eax+0x4],ecx
10009f51:	mov    dl,BYTE PTR [edi+0x38]
10009f54:	mov    cl,BYTE PTR [eax+0x38]
10009f57:	mov    BYTE PTR [eax+0x38],dl
10009f5a:	mov    BYTE PTR [edi+0x38],cl
10009f5d:	cmp    BYTE PTR [edi+0x38],0x1
10009f61:	jne    0x1000a079
10009f67:	jmp    0x1000a02d
10009f6c:	cmp    BYTE PTR [ebx+0x38],0x1
10009f70:	jne    0x1000a075
10009f76:	mov    ecx,DWORD PTR [esi]
10009f78:	cmp    ebx,ecx
10009f7a:	jne    0x10009ff3
10009f7c:	mov    ecx,DWORD PTR [esi+0x8]
10009f7f:	cmp    BYTE PTR [ecx+0x38],0x0
10009f83:	jne    0x10009f9a
10009f85:	push   DWORD PTR [ebp+0x8]
10009f88:	mov    BYTE PTR [ecx+0x38],0x1
10009f8c:	mov    ecx,esi
10009f8e:	mov    BYTE PTR [esi+0x38],0x0
10009f92:	call   0x1000a603
10009f97:	mov    ecx,DWORD PTR [esi+0x8]
10009f9a:	cmp    BYTE PTR [ecx+0x39],0x0
10009f9e:	jne    0x1000a028
10009fa4:	mov    eax,DWORD PTR [ecx]
10009fa6:	cmp    BYTE PTR [eax+0x38],0x1
10009faa:	jne    0x10009fb5
10009fac:	mov    eax,DWORD PTR [ecx+0x8]
10009faf:	cmp    BYTE PTR [eax+0x38],0x1
10009fb3:	je     0x1000a024
10009fb5:	mov    eax,DWORD PTR [ecx+0x8]
10009fb8:	cmp    BYTE PTR [eax+0x38],0x1
10009fbc:	jne    0x10009fd3
10009fbe:	mov    eax,DWORD PTR [ecx]
10009fc0:	push   DWORD PTR [ebp+0x8]
10009fc3:	mov    BYTE PTR [eax+0x38],0x1
10009fc7:	mov    BYTE PTR [ecx+0x38],0x0
10009fcb:	call   0x1000d75d
10009fd0:	mov    ecx,DWORD PTR [esi+0x8]
10009fd3:	mov    al,BYTE PTR [esi+0x38]
10009fd6:	push   DWORD PTR [ebp+0x8]
10009fd9:	mov    BYTE PTR [ecx+0x38],al
10009fdc:	mov    BYTE PTR [esi+0x38],0x1
10009fe0:	mov    eax,DWORD PTR [ecx+0x8]
10009fe3:	mov    ecx,esi
10009fe5:	mov    BYTE PTR [eax+0x38],0x1
10009fe9:	call   0x1000a603
10009fee:	jmp    0x1000a075
10009ff3:	cmp    BYTE PTR [ecx+0x38],0x0
10009ff7:	jne    0x1000a00d
10009ff9:	push   DWORD PTR [ebp+0x8]
10009ffc:	mov    BYTE PTR [ecx+0x38],0x1
1000a000:	mov    ecx,esi
1000a002:	mov    BYTE PTR [esi+0x38],0x0
1000a006:	call   0x1000d75d
1000a00b:	mov    ecx,DWORD PTR [esi]
1000a00d:	cmp    BYTE PTR [ecx+0x39],0x0
1000a011:	jne    0x1000a028
1000a013:	mov    eax,DWORD PTR [ecx+0x8]
1000a016:	cmp    BYTE PTR [eax+0x38],0x1
1000a01a:	jne    0x1000a03e
1000a01c:	mov    eax,DWORD PTR [ecx]
1000a01e:	cmp    BYTE PTR [eax+0x38],0x1
1000a022:	jne    0x1000a03e
1000a024:	mov    BYTE PTR [ecx+0x38],0x0
1000a028:	mov    ebx,esi
1000a02a:	mov    esi,DWORD PTR [esi+0x4]
1000a02d:	mov    eax,DWORD PTR [ebp+0x8]
1000a030:	mov    eax,DWORD PTR [eax+0x4]
1000a033:	cmp    ebx,DWORD PTR [eax+0x4]
1000a036:	jne    0x10009f6c
1000a03c:	jmp    0x1000a075
1000a03e:	mov    eax,DWORD PTR [ecx]
1000a040:	cmp    BYTE PTR [eax+0x38],0x1
1000a044:	jne    0x1000a05b
1000a046:	mov    eax,DWORD PTR [ecx+0x8]
1000a049:	push   DWORD PTR [ebp+0x8]
1000a04c:	mov    BYTE PTR [eax+0x38],0x1
1000a050:	mov    BYTE PTR [ecx+0x38],0x0
1000a054:	call   0x1000a603
1000a059:	mov    ecx,DWORD PTR [esi]
1000a05b:	mov    al,BYTE PTR [esi+0x38]
1000a05e:	push   DWORD PTR [ebp+0x8]
1000a061:	mov    BYTE PTR [ecx+0x38],al
1000a064:	mov    BYTE PTR [esi+0x38],0x1
1000a068:	mov    eax,DWORD PTR [ecx]
1000a06a:	mov    ecx,esi
1000a06c:	mov    BYTE PTR [eax+0x38],0x1
1000a070:	call   0x1000d75d
1000a075:	mov    BYTE PTR [ebx+0x38],0x1
1000a079:	lea    ebx,[edi+0xc]
1000a07c:	lea    esi,[ebx+0x1c]
1000a07f:	call   0x100047a5
1000a084:	push   0x0
1000a086:	push   0x1
1000a088:	mov    ecx,ebx
1000a08a:	call   0x100012f0
1000a08f:	push   edi
1000a090:	call   0x10042fe2
1000a095:	pop    ecx
1000a096:	mov    ecx,DWORD PTR [ebp+0x8]
1000a099:	mov    eax,DWORD PTR [ecx+0x8]
1000a09c:	test   eax,eax
1000a09e:	jbe    0x1000a0a4
1000a0a0:	dec    eax
1000a0a1:	mov    DWORD PTR [ecx+0x8],eax
1000a0a4:	mov    ecx,DWORD PTR [ebp+0x10]
1000a0a7:	mov    eax,DWORD PTR [ebp+0xc]
1000a0aa:	mov    DWORD PTR [eax],ecx
1000a0ac:	mov    ecx,DWORD PTR [ebp+0x14]
1000a0af:	mov    DWORD PTR [eax+0x4],ecx
1000a0b2:	call   0x10059ecd
1000a0b7:	ret    0x10
1000a0ba:	push   ebp
1000a0bb:	mov    ebp,esp
1000a0bd:	sub    esp,0x10
1000a0c0:	push   esi
1000a0c1:	push   edi
1000a0c2:	push   DWORD PTR [ebp+0xc]
1000a0c5:	mov    eax,ebx
1000a0c7:	call   0x1000a9b6
1000a0cc:	test   ebx,ebx
1000a0ce:	mov    DWORD PTR [ebp-0x4],eax
1000a0d1:	jne    0x1000a0d8
1000a0d3:	call   0x10043605
1000a0d8:	mov    eax,DWORD PTR [ebx+0x4]
1000a0db:	lea    edi,[ebp-0x10]
1000a0de:	lea    esi,[ebp-0x8]
1000a0e1:	mov    DWORD PTR [ebp-0x8],ebx
1000a0e4:	mov    DWORD PTR [ebp-0xc],eax
1000a0e7:	mov    DWORD PTR [ebp-0x10],ebx
1000a0ea:	call   0x10004b0c
1000a0ef:	test   al,al
1000a0f1:	jne    0x1000a109
1000a0f3:	mov    eax,DWORD PTR [ebp-0x4]
1000a0f6:	mov    ecx,DWORD PTR [ebp+0xc]
1000a0f9:	add    eax,0xc
1000a0fc:	call   0x10007983
1000a101:	test   al,al
1000a103:	jne    0x1000a109
1000a105:	mov    ecx,esi
1000a107:	jmp    0x1000a115
1000a109:	mov    eax,DWORD PTR [ebx+0x4]
1000a10c:	mov    DWORD PTR [ebp-0xc],eax
1000a10f:	mov    DWORD PTR [ebp-0x10],ebx
1000a112:	lea    ecx,[ebp-0x10]
1000a115:	mov    edx,DWORD PTR [ecx]
1000a117:	mov    eax,DWORD PTR [ebp+0x8]
1000a11a:	mov    ecx,DWORD PTR [ecx+0x4]
1000a11d:	pop    edi
1000a11e:	mov    DWORD PTR [eax],edx
1000a120:	mov    DWORD PTR [eax+0x4],ecx
1000a123:	pop    esi
1000a124:	leave  
1000a125:	ret    0x8
1000a128:	push   esi
1000a129:	mov    esi,DWORD PTR [eax]
1000a12b:	test   esi,esi
1000a12d:	je     0x1000a14a
1000a12f:	push   0x0
1000a131:	push   0x1
1000a133:	lea    ecx,[esi+0x4]
1000a136:	call   0x100012f0
1000a13b:	push   DWORD PTR [esi]
1000a13d:	call   0x10042fe2
1000a142:	push   esi
1000a143:	call   0x10042fe2
1000a148:	pop    ecx
1000a149:	pop    ecx
1000a14a:	pop    esi
1000a14b:	ret    
1000a14c:	push   esi
1000a14d:	mov    esi,DWORD PTR [edi]
1000a14f:	cmp    ebx,esi
1000a151:	je     0x1000a172
1000a153:	test   esi,esi
1000a155:	je     0x1000a172
1000a157:	push   0x0
1000a159:	push   0x1
1000a15b:	lea    ecx,[esi+0x4]
1000a15e:	call   0x100012f0
1000a163:	push   DWORD PTR [esi]
1000a165:	call   0x10042fe2
1000a16a:	push   esi
1000a16b:	call   0x10042fe2
1000a170:	pop    ecx
1000a171:	pop    ecx
1000a172:	mov    DWORD PTR [edi],ebx
1000a174:	pop    esi
1000a175:	ret    
1000a176:	push   ebp
1000a177:	mov    ebp,esp
1000a179:	and    esp,0xfffffff8
1000a17c:	mov    eax,DWORD PTR [ecx]
1000a17e:	test   eax,eax
1000a180:	je     0x1000a188
1000a182:	push   eax
1000a183:	call   0x1000a31f
1000a188:	mov    esp,ebp
1000a18a:	pop    ebp
1000a18b:	ret    
1000a18c:	push   edi
1000a18d:	mov    edi,DWORD PTR [eax]
1000a18f:	test   edi,edi
1000a191:	je     0x1000a198
1000a193:	call   0x1000a38e
1000a198:	pop    edi
1000a199:	ret    
1000a19a:	push   ebx
1000a19b:	xor    ebx,ebx
1000a19d:	cmp    DWORD PTR [esi],ebx
1000a19f:	jne    0x1000a1a6
1000a1a1:	call   0x10043605
1000a1a6:	mov    eax,DWORD PTR [esi+0x4]
1000a1a9:	cmp    BYTE PTR [eax+0x39],bl
1000a1ac:	je     0x1000a1b5
1000a1ae:	call   0x10043605
1000a1b3:	jmp    0x1000a1e3
1000a1b5:	mov    ecx,DWORD PTR [eax+0x8]
1000a1b8:	cmp    BYTE PTR [ecx+0x39],bl
1000a1bb:	jne    0x1000a1d8
1000a1bd:	jmp    0x1000a1c1
1000a1bf:	mov    ecx,eax
1000a1c1:	mov    eax,DWORD PTR [ecx]
1000a1c3:	cmp    BYTE PTR [eax+0x39],bl
1000a1c6:	je     0x1000a1bf
1000a1c8:	mov    DWORD PTR [esi+0x4],ecx
1000a1cb:	jmp    0x1000a1e3
1000a1cd:	mov    ecx,DWORD PTR [esi+0x4]
1000a1d0:	cmp    ecx,DWORD PTR [eax+0x8]
1000a1d3:	jne    0x1000a1e0
1000a1d5:	mov    DWORD PTR [esi+0x4],eax
1000a1d8:	mov    eax,DWORD PTR [eax+0x4]
1000a1db:	cmp    BYTE PTR [eax+0x39],bl
1000a1de:	je     0x1000a1cd
1000a1e0:	mov    DWORD PTR [esi+0x4],eax
1000a1e3:	mov    eax,esi
1000a1e5:	pop    ebx
1000a1e6:	ret    
1000a1e7:	mov    ecx,DWORD PTR [eax+0x4]
1000a1ea:	test   ecx,ecx
1000a1ec:	jne    0x1000a1f1
1000a1ee:	xor    eax,eax
1000a1f0:	ret    
1000a1f1:	mov    eax,DWORD PTR [eax+0x8]
1000a1f4:	sub    eax,ecx
1000a1f6:	sar    eax,0x5
1000a1f9:	ret    
1000a1fa:	push   ebp
1000a1fb:	mov    ebp,esp
1000a1fd:	sub    esp,0x10
1000a200:	push   ebx
1000a201:	push   esi
1000a202:	mov    esi,eax
1000a204:	mov    ebx,DWORD PTR [esi+0x4]
1000a207:	test   ebx,ebx
1000a209:	push   edi
1000a20a:	jne    0x1000a210
1000a20c:	xor    edi,edi
1000a20e:	jmp    0x1000a218
1000a210:	mov    edi,DWORD PTR [esi+0xc]
1000a213:	sub    edi,ebx
1000a215:	sar    edi,0x5
1000a218:	call   0x1000a1e7
1000a21d:	cmp    eax,edi
1000a21f:	jae    0x1000a233
1000a221:	push   DWORD PTR [ebp+0x8]
1000a224:	push   0x1
1000a226:	push   DWORD PTR [esi+0x8]
1000a229:	call   0x1000a6ea
1000a22e:	mov    DWORD PTR [esi+0x8],eax
1000a231:	jmp    0x1000a24d
1000a233:	mov    edi,DWORD PTR [esi+0x8]
1000a236:	cmp    ebx,edi
1000a238:	jbe    0x1000a23f
1000a23a:	call   0x10043605
1000a23f:	push   edi
1000a240:	push   esi
1000a241:	push   DWORD PTR [ebp+0x8]
1000a244:	lea    eax,[ebp-0xc]
1000a247:	push   eax
1000a248:	call   0x1000a678
1000a24d:	pop    edi
1000a24e:	pop    esi
1000a24f:	pop    ebx
1000a250:	leave  
1000a251:	ret    0x4
1000a254:	push   ebp
1000a255:	mov    ebp,esp
1000a257:	push   ecx
1000a258:	mov    eax,DWORD PTR [esi+0x8]
1000a25b:	push   edi
1000a25c:	mov    edi,DWORD PTR [ebp+0xc]
1000a25f:	add    edi,0x20
1000a262:	cmp    edi,eax
1000a264:	mov    DWORD PTR [ebp-0x4],eax
1000a267:	je     0x1000a284
1000a269:	push   0xffffffff
1000a26b:	push   0x0
1000a26d:	push   edi
1000a26e:	lea    ecx,[edi-0x20]
1000a271:	call   0x10001241
1000a276:	mov    eax,DWORD PTR [edi+0x1c]
1000a279:	mov    DWORD PTR [edi-0x4],eax
1000a27c:	add    edi,0x20
1000a27f:	cmp    edi,DWORD PTR [ebp-0x4]
1000a282:	jne    0x1000a269
1000a284:	mov    eax,DWORD PTR [esi+0x8]
1000a287:	push   eax
1000a288:	add    eax,0xffffffe0
1000a28b:	call   0x10004e54
1000a290:	mov    eax,DWORD PTR [ebp+0x8]
1000a293:	add    DWORD PTR [esi+0x8],0xffffffe0
1000a297:	mov    DWORD PTR [ebx],eax
1000a299:	mov    eax,DWORD PTR [ebp+0xc]
1000a29c:	mov    DWORD PTR [ebx+0x4],eax
1000a29f:	mov    eax,ebx
1000a2a1:	pop    edi
1000a2a2:	leave  
1000a2a3:	ret    0x8
1000a2a6:	push   ebx
1000a2a7:	mov    ebx,DWORD PTR [eax+0x4]
1000a2aa:	push   esi
1000a2ab:	mov    esi,DWORD PTR [eax]
1000a2ad:	test   esi,esi
1000a2af:	push   edi
1000a2b0:	mov    edi,ecx
1000a2b2:	jne    0x1000a2b9
1000a2b4:	call   0x10043605
1000a2b9:	shl    edi,0x5
1000a2bc:	add    edi,ebx
1000a2be:	cmp    edi,DWORD PTR [esi+0x8]
1000a2c1:	ja     0x1000a2c8
1000a2c3:	cmp    edi,DWORD PTR [esi+0x4]
1000a2c6:	jae    0x1000a2cd
1000a2c8:	call   0x10043605
1000a2cd:	mov    eax,DWORD PTR [esp+0x10]
1000a2d1:	mov    DWORD PTR [eax+0x4],edi
1000a2d4:	pop    edi
1000a2d5:	mov    DWORD PTR [eax],esi
1000a2d7:	pop    esi
1000a2d8:	pop    ebx
1000a2d9:	ret    0x4
1000a2dc:	push   esi
1000a2dd:	mov    esi,DWORD PTR [eax]
1000a2df:	test   esi,esi
1000a2e1:	je     0x1000a2f0
1000a2e3:	push   esi
1000a2e4:	call   0x1000a3c8
1000a2e9:	push   esi
1000a2ea:	call   0x10042fe2
1000a2ef:	pop    ecx
1000a2f0:	pop    esi
1000a2f1:	ret    
1000a2f2:	push   0x0
1000a2f4:	push   0x1
1000a2f6:	lea    ecx,[esi+0x38]
1000a2f9:	call   0x100012f0
1000a2fe:	push   0x0
1000a300:	push   0x1
1000a302:	lea    ecx,[esi+0x1c]
1000a305:	call   0x100012f0
1000a30a:	push   0x0
1000a30c:	push   0x1
1000a30e:	mov    ecx,esi
1000a310:	call   0x100012f0
1000a315:	push   esi
1000a316:	call   0x10042fe2
1000a31b:	pop    ecx
1000a31c:	mov    eax,esi
1000a31e:	ret    
1000a31f:	push   0x0
1000a321:	mov    eax,0x10063c96
1000a326:	call   0x10059df5
1000a32b:	mov    esi,DWORD PTR [ebp+0x8]
1000a32e:	mov    DWORD PTR [ebp-0x4],0x5
1000a335:	mov    eax,DWORD PTR [esi+0x3c]
1000a338:	test   eax,eax
1000a33a:	je     0x1000a342
1000a33c:	mov    ecx,DWORD PTR [eax]
1000a33e:	push   eax
1000a33f:	call   DWORD PTR [ecx+0x8]
1000a342:	mov    edi,DWORD PTR [esi+0x34]
1000a345:	test   edi,edi
1000a347:	je     0x1000a34e
1000a349:	call   0x1000a38e
1000a34e:	lea    ecx,[esi+0x30]
1000a351:	mov    BYTE PTR [ebp-0x4],0x3
1000a355:	call   0x1000a176
1000a35a:	lea    ebx,[esi+0x18]
1000a35d:	mov    BYTE PTR [ebp-0x4],0x2
1000a361:	call   0x10007d7e
1000a366:	lea    eax,[esi+0x8]
1000a369:	call   0x1000a128
1000a36e:	lea    eax,[esi+0x4]
1000a371:	call   0x1000a128
1000a376:	mov    eax,esi
1000a378:	call   0x1000a128
1000a37d:	push   esi
1000a37e:	call   0x10042fe2
1000a383:	pop    ecx
1000a384:	mov    eax,esi
1000a386:	call   0x10059ecd
1000a38b:	ret    0x4
1000a38e:	push   DWORD PTR [edi+0x14]
1000a391:	call   0x10042fe2
1000a396:	mov    eax,DWORD PTR [edi+0x8]
1000a399:	test   eax,eax
1000a39b:	pop    ecx
1000a39c:	je     0x1000a3a5
1000a39e:	push   eax
1000a39f:	call   0x10042fe2
1000a3a4:	pop    ecx
1000a3a5:	and    DWORD PTR [edi+0x8],0x0
1000a3a9:	and    DWORD PTR [edi+0xc],0x0
1000a3ad:	and    DWORD PTR [edi+0x10],0x0
1000a3b1:	push   esi
1000a3b2:	mov    esi,DWORD PTR [edi]
1000a3b4:	test   esi,esi
1000a3b6:	je     0x1000a3bd
1000a3b8:	call   0x1000a2f2
1000a3bd:	push   edi
1000a3be:	call   0x10042fe2
1000a3c3:	pop    ecx
1000a3c4:	mov    eax,edi
1000a3c6:	pop    esi
1000a3c7:	ret    
1000a3c8:	push   0x0
1000a3ca:	mov    eax,0x10063cda
1000a3cf:	call   0x10059df5
1000a3d4:	mov    esi,DWORD PTR [ebp+0x8]
1000a3d7:	mov    DWORD PTR [ebp-0x4],0x3
1000a3de:	mov    edi,DWORD PTR [esi+0x34]
1000a3e1:	test   edi,edi
1000a3e3:	je     0x1000a3ea
1000a3e5:	call   0x1000a38e
1000a3ea:	lea    ebx,[esi+0x20]
1000a3ed:	call   0x10007d7e
1000a3f2:	lea    eax,[esi+0xc]
1000a3f5:	call   0x1000a128
1000a3fa:	lea    eax,[esi+0x8]
1000a3fd:	call   0x1000a128
1000a402:	lea    eax,[esi+0x4]
1000a405:	call   0x1000a128
1000a40a:	mov    eax,esi
1000a40c:	call   0x1000a128
1000a411:	call   0x10059ecd
1000a416:	ret    0x4
1000a419:	push   ebp
1000a41a:	mov    ebp,esp
1000a41c:	push   ecx
1000a41d:	push   ebx
1000a41e:	push   esi
1000a41f:	mov    esi,eax
1000a421:	push   edi
1000a422:	mov    edi,DWORD PTR [esi+0x4]
1000a425:	xor    ebx,ebx
1000a427:	cmp    edi,ebx
1000a429:	je     0x1000a457
1000a42b:	mov    eax,DWORD PTR [esi+0x8]
1000a42e:	mov    ecx,eax
1000a430:	sub    ecx,edi
1000a432:	sar    ecx,0x2
1000a435:	je     0x1000a457
1000a437:	cmp    edi,eax
1000a439:	jbe    0x1000a440
1000a43b:	call   0x10043605
1000a440:	cmp    DWORD PTR [ebp+0x10],ebx
1000a443:	je     0x1000a44a
1000a445:	cmp    DWORD PTR [ebp+0x10],esi
1000a448:	je     0x1000a44f
1000a44a:	call   0x10043605
1000a44f:	mov    ebx,DWORD PTR [ebp+0x14]
1000a452:	sub    ebx,edi
1000a454:	sar    ebx,0x2
1000a457:	push   DWORD PTR [ebp+0x14]
1000a45a:	mov    eax,DWORD PTR [ebp+0xc]
1000a45d:	push   DWORD PTR [ebp+0x10]
1000a460:	mov    ecx,esi
1000a462:	call   0x1000a71a
1000a467:	mov    edi,DWORD PTR [esi+0x4]
1000a46a:	cmp    edi,DWORD PTR [esi+0x8]
1000a46d:	jbe    0x1000a474
1000a46f:	call   0x10043605
1000a474:	mov    DWORD PTR [ebp+0x14],edi
1000a477:	lea    edi,[edi+ebx*4]
1000a47a:	cmp    edi,DWORD PTR [esi+0x8]
1000a47d:	ja     0x1000a484
1000a47f:	cmp    edi,DWORD PTR [esi+0x4]
1000a482:	jae    0x1000a489
1000a484:	call   0x10043605
1000a489:	mov    eax,DWORD PTR [ebp+0x8]
1000a48c:	mov    DWORD PTR [eax+0x4],edi
1000a48f:	pop    edi
1000a490:	mov    DWORD PTR [eax],esi
1000a492:	pop    esi
1000a493:	pop    ebx
1000a494:	leave  
1000a495:	ret    0x10
1000a498:	test   edx,edx
1000a49a:	mov    ecx,edx
1000a49c:	mov    eax,esi
1000a49e:	jbe    0x1000a4b2
1000a4a0:	push   edi
1000a4a1:	mov    edi,DWORD PTR [esp+0x8]
1000a4a5:	mov    edi,DWORD PTR [edi]
1000a4a7:	mov    DWORD PTR [eax],edi
1000a4a9:	dec    ecx
1000a4aa:	add    eax,0x4
1000a4ad:	test   ecx,ecx
1000a4af:	ja     0x1000a4a1
1000a4b1:	pop    edi
1000a4b2:	lea    eax,[esi+edx*4]
1000a4b5:	ret    0x4
1000a4b8:	push   0x48
1000a4ba:	mov    eax,0x100607fe
1000a4bf:	call   0x10059df5
1000a4c4:	mov    edi,ecx
1000a4c6:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000a4cd:	jb     0x1000a501
1000a4cf:	push   0x1006e0f8
1000a4d4:	lea    ecx,[ebp-0x2c]
1000a4d7:	call   0x100011a7
1000a4dc:	and    DWORD PTR [ebp-0x4],0x0
1000a4e0:	lea    eax,[ebp-0x2c]
1000a4e3:	push   eax
1000a4e4:	lea    ecx,[ebp-0x54]
1000a4e7:	call   0x10001077
1000a4ec:	push   0x100764d0
1000a4f1:	lea    eax,[ebp-0x54]
1000a4f4:	push   eax
1000a4f5:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1000a4fc:	call   0x10047942
1000a501:	push   DWORD PTR [ebp+0x10]
1000a504:	mov    eax,DWORD PTR [esi+0x4]
1000a507:	push   eax
1000a508:	push   edi
1000a509:	push   eax
1000a50a:	call   0x1000a9e8
1000a50f:	inc    DWORD PTR [esi+0x8]
1000a512:	mov    ebx,eax
1000a514:	mov    eax,DWORD PTR [esi+0x4]
1000a517:	cmp    edi,eax
1000a519:	jne    0x1000a528
1000a51b:	mov    DWORD PTR [eax+0x4],ebx
1000a51e:	mov    eax,DWORD PTR [esi+0x4]
1000a521:	mov    DWORD PTR [eax],ebx
1000a523:	mov    eax,DWORD PTR [esi+0x4]
1000a526:	jmp    0x1000a546
1000a528:	cmp    BYTE PTR [ebp+0xc],0x0
1000a52c:	je     0x1000a53b
1000a52e:	mov    DWORD PTR [edi],ebx
1000a530:	mov    eax,DWORD PTR [esi+0x4]
1000a533:	cmp    edi,DWORD PTR [eax]
1000a535:	jne    0x1000a549
1000a537:	mov    DWORD PTR [eax],ebx
1000a539:	jmp    0x1000a549
1000a53b:	mov    DWORD PTR [edi+0x8],ebx
1000a53e:	mov    eax,DWORD PTR [esi+0x4]
1000a541:	cmp    edi,DWORD PTR [eax+0x8]
1000a544:	jne    0x1000a549
1000a546:	mov    DWORD PTR [eax+0x8],ebx
1000a549:	mov    edi,ebx
1000a54b:	lea    eax,[ebx+0x4]
1000a54e:	jmp    0x1000a5dd
1000a553:	mov    ecx,DWORD PTR [eax]
1000a555:	mov    edx,DWORD PTR [ecx+0x4]
1000a558:	cmp    ecx,DWORD PTR [edx]
1000a55a:	jne    0x1000a591
1000a55c:	mov    edx,DWORD PTR [edx+0x8]
1000a55f:	cmp    BYTE PTR [edx+0x38],0x0
1000a563:	je     0x1000a599
1000a565:	cmp    edi,DWORD PTR [ecx+0x8]
1000a568:	jne    0x1000a572
1000a56a:	push   esi
1000a56b:	mov    edi,ecx
1000a56d:	call   0x1000a603
1000a572:	mov    eax,DWORD PTR [edi+0x4]
1000a575:	mov    BYTE PTR [eax+0x38],0x1
1000a579:	mov    eax,DWORD PTR [edi+0x4]
1000a57c:	mov    eax,DWORD PTR [eax+0x4]
1000a57f:	mov    BYTE PTR [eax+0x38],0x0
1000a583:	mov    eax,DWORD PTR [edi+0x4]
1000a586:	mov    ecx,DWORD PTR [eax+0x4]
1000a589:	push   esi
1000a58a:	call   0x1000d75d
1000a58f:	jmp    0x1000a5da
1000a591:	mov    edx,DWORD PTR [edx]
1000a593:	cmp    BYTE PTR [edx+0x38],0x0
1000a597:	jne    0x1000a5b1
1000a599:	mov    BYTE PTR [ecx+0x38],0x1
1000a59d:	mov    BYTE PTR [edx+0x38],0x1
1000a5a1:	mov    ecx,DWORD PTR [eax]
1000a5a3:	mov    ecx,DWORD PTR [ecx+0x4]
1000a5a6:	mov    BYTE PTR [ecx+0x38],0x0
1000a5aa:	mov    eax,DWORD PTR [eax]
1000a5ac:	mov    edi,DWORD PTR [eax+0x4]
1000a5af:	jmp    0x1000a5da
1000a5b1:	cmp    edi,DWORD PTR [ecx]
1000a5b3:	jne    0x1000a5bd
1000a5b5:	push   esi
1000a5b6:	mov    edi,ecx
1000a5b8:	call   0x1000d75d
1000a5bd:	mov    eax,DWORD PTR [edi+0x4]
1000a5c0:	mov    BYTE PTR [eax+0x38],0x1
1000a5c4:	mov    eax,DWORD PTR [edi+0x4]
1000a5c7:	mov    eax,DWORD PTR [eax+0x4]
1000a5ca:	mov    BYTE PTR [eax+0x38],0x0
1000a5ce:	mov    eax,DWORD PTR [edi+0x4]
1000a5d1:	mov    ecx,DWORD PTR [eax+0x4]
1000a5d4:	push   esi
1000a5d5:	call   0x1000a603
1000a5da:	lea    eax,[edi+0x4]
1000a5dd:	mov    ecx,DWORD PTR [eax]
1000a5df:	cmp    BYTE PTR [ecx+0x38],0x0
1000a5e3:	je     0x1000a553
1000a5e9:	mov    eax,DWORD PTR [esi+0x4]
1000a5ec:	mov    eax,DWORD PTR [eax+0x4]
1000a5ef:	mov    BYTE PTR [eax+0x38],0x1
1000a5f3:	mov    eax,DWORD PTR [ebp+0x8]
1000a5f6:	mov    DWORD PTR [eax+0x4],ebx
1000a5f9:	mov    DWORD PTR [eax],esi
1000a5fb:	call   0x10059ecd
1000a600:	ret    0xc
1000a603:	mov    eax,DWORD PTR [ecx+0x8]
1000a606:	mov    edx,DWORD PTR [eax]
1000a608:	mov    DWORD PTR [ecx+0x8],edx
1000a60b:	mov    edx,DWORD PTR [eax]
1000a60d:	cmp    BYTE PTR [edx+0x39],0x0
1000a611:	jne    0x1000a616
1000a613:	mov    DWORD PTR [edx+0x4],ecx
1000a616:	mov    edx,DWORD PTR [ecx+0x4]
1000a619:	mov    DWORD PTR [eax+0x4],edx
1000a61c:	mov    edx,DWORD PTR [esp+0x4]
1000a620:	mov    edx,DWORD PTR [edx+0x4]
1000a623:	cmp    ecx,DWORD PTR [edx+0x4]
1000a626:	jne    0x1000a62d
1000a628:	mov    DWORD PTR [edx+0x4],eax
1000a62b:	jmp    0x1000a63b
1000a62d:	mov    edx,DWORD PTR [ecx+0x4]
1000a630:	cmp    ecx,DWORD PTR [edx]
1000a632:	jne    0x1000a638
1000a634:	mov    DWORD PTR [edx],eax
1000a636:	jmp    0x1000a63b
1000a638:	mov    DWORD PTR [edx+0x8],eax
1000a63b:	mov    DWORD PTR [eax],ecx
1000a63d:	mov    DWORD PTR [ecx+0x4],eax
1000a640:	ret    0x4
1000a643:	push   ebp
1000a644:	mov    ebp,esp
1000a646:	and    esp,0xfffffff8
1000a649:	sub    esp,0xc
1000a64c:	push   ebx
1000a64d:	mov    ebx,eax
1000a64f:	mov    eax,DWORD PTR [ebx+0x4]
1000a652:	mov    ecx,DWORD PTR [eax]
1000a654:	push   eax
1000a655:	push   ebx
1000a656:	push   ecx
1000a657:	push   ebx
1000a658:	lea    eax,[esp+0x18]
1000a65c:	push   eax
1000a65d:	call   0x1000a90c
1000a662:	push   DWORD PTR [ebx+0x4]
1000a665:	call   0x10042fe2
1000a66a:	and    DWORD PTR [ebx+0x4],0x0
1000a66e:	and    DWORD PTR [ebx+0x8],0x0
1000a672:	pop    ecx
1000a673:	pop    ebx
1000a674:	mov    esp,ebp
1000a676:	pop    ebp
1000a677:	ret    
1000a678:	push   ebp
1000a679:	mov    ebp,esp
1000a67b:	push   ebx
1000a67c:	push   edi
1000a67d:	mov    eax,esi
1000a67f:	call   0x1000a1e7
1000a684:	test   eax,eax
1000a686:	jne    0x1000a68c
1000a688:	xor    ebx,ebx
1000a68a:	jmp    0x1000a6b1
1000a68c:	mov    edi,DWORD PTR [esi+0x4]
1000a68f:	cmp    edi,DWORD PTR [esi+0x8]
1000a692:	jbe    0x1000a699
1000a694:	call   0x10043605
1000a699:	cmp    DWORD PTR [ebp+0x10],0x0
1000a69d:	je     0x1000a6a4
1000a69f:	cmp    DWORD PTR [ebp+0x10],esi
1000a6a2:	je     0x1000a6a9
1000a6a4:	call   0x10043605
1000a6a9:	mov    ebx,DWORD PTR [ebp+0x14]
1000a6ac:	sub    ebx,edi
1000a6ae:	sar    ebx,0x5
1000a6b1:	push   DWORD PTR [ebp+0x14]
1000a6b4:	mov    edx,DWORD PTR [ebp+0xc]
1000a6b7:	push   DWORD PTR [ebp+0x10]
1000a6ba:	mov    ecx,esi
1000a6bc:	call   0x10004e71
1000a6c1:	mov    edi,DWORD PTR [esi+0x4]
1000a6c4:	cmp    edi,DWORD PTR [esi+0x8]
1000a6c7:	jbe    0x1000a6ce
1000a6c9:	call   0x10043605
1000a6ce:	push   DWORD PTR [ebp+0x8]
1000a6d1:	mov    ecx,ebx
1000a6d3:	lea    eax,[ebp+0x10]
1000a6d6:	mov    DWORD PTR [ebp+0x10],esi
1000a6d9:	mov    DWORD PTR [ebp+0x14],edi
1000a6dc:	call   0x1000a2a6
1000a6e1:	mov    eax,DWORD PTR [ebp+0x8]
1000a6e4:	pop    edi
1000a6e5:	pop    ebx
1000a6e6:	pop    ebp
1000a6e7:	ret    0x10
1000a6ea:	push   ebp
1000a6eb:	mov    ebp,esp
1000a6ed:	push   ecx
1000a6ee:	push   edi
1000a6ef:	xor    eax,eax
1000a6f1:	lea    edi,[ebp-0x4]
1000a6f4:	stos   BYTE PTR es:[edi],al
1000a6f5:	push   DWORD PTR [ebp-0x4]
1000a6f8:	push   DWORD PTR [ebp+0xc]
1000a6fb:	push   DWORD PTR [ebp+0x10]
1000a6fe:	push   DWORD PTR [ebp+0xc]
1000a701:	push   DWORD PTR [ebp+0x8]
1000a704:	call   0x1000ab80
1000a709:	mov    eax,DWORD PTR [ebp+0xc]
1000a70c:	add    esp,0x14
1000a70f:	shl    eax,0x5
1000a712:	add    eax,DWORD PTR [ebp+0x8]
1000a715:	pop    edi
1000a716:	leave  
1000a717:	ret    0xc
1000a71a:	push   ebp
1000a71b:	mov    ebp,esp
1000a71d:	sub    esp,0xc
1000a720:	mov    eax,DWORD PTR [eax]
1000a722:	push   ebx
1000a723:	push   esi
1000a724:	push   edi
1000a725:	mov    edi,ecx
1000a727:	mov    ecx,DWORD PTR [edi+0x4]
1000a72a:	test   ecx,ecx
1000a72c:	mov    DWORD PTR [ebp-0x8],eax
1000a72f:	jne    0x1000a736
1000a731:	and    DWORD PTR [ebp-0x4],ecx
1000a734:	jmp    0x1000a741
1000a736:	mov    eax,DWORD PTR [edi+0xc]
1000a739:	sub    eax,ecx
1000a73b:	sar    eax,0x2
1000a73e:	mov    DWORD PTR [ebp-0x4],eax
1000a741:	test   ecx,ecx
1000a743:	jne    0x1000a749
1000a745:	xor    eax,eax
1000a747:	jmp    0x1000a751
1000a749:	mov    eax,DWORD PTR [edi+0x8]
1000a74c:	sub    eax,ecx
1000a74e:	sar    eax,0x2
1000a751:	mov    edx,0x3fffffff
1000a756:	mov    esi,edx
1000a758:	sub    esi,eax
1000a75a:	cmp    esi,0x1
1000a75d:	jae    0x1000a764
1000a75f:	call   0x1000dbd4
1000a764:	test   ecx,ecx
1000a766:	jne    0x1000a76c
1000a768:	xor    eax,eax
1000a76a:	jmp    0x1000a774
1000a76c:	mov    eax,DWORD PTR [edi+0x8]
1000a76f:	sub    eax,ecx
1000a771:	sar    eax,0x2
1000a774:	inc    eax
1000a775:	cmp    DWORD PTR [ebp-0x4],eax
1000a778:	jae    0x1000a825
1000a77e:	mov    eax,DWORD PTR [ebp-0x4]
1000a781:	shr    eax,1
1000a783:	sub    edx,eax
1000a785:	cmp    edx,DWORD PTR [ebp-0x4]
1000a788:	jae    0x1000a790
1000a78a:	and    DWORD PTR [ebp-0x4],0x0
1000a78e:	jmp    0x1000a793
1000a790:	add    DWORD PTR [ebp-0x4],eax
1000a793:	test   ecx,ecx
1000a795:	jne    0x1000a79b
1000a797:	xor    eax,eax
1000a799:	jmp    0x1000a7a3
1000a79b:	mov    eax,DWORD PTR [edi+0x8]
1000a79e:	sub    eax,ecx
1000a7a0:	sar    eax,0x2
1000a7a3:	inc    eax
1000a7a4:	cmp    DWORD PTR [ebp-0x4],eax
1000a7a7:	jae    0x1000a7bd
1000a7a9:	test   ecx,ecx
1000a7ab:	jne    0x1000a7b1
1000a7ad:	xor    eax,eax
1000a7af:	jmp    0x1000a7b9
1000a7b1:	mov    eax,DWORD PTR [edi+0x8]
1000a7b4:	sub    eax,ecx
1000a7b6:	sar    eax,0x2
1000a7b9:	inc    eax
1000a7ba:	mov    DWORD PTR [ebp-0x4],eax
1000a7bd:	mov    ecx,DWORD PTR [ebp-0x4]
1000a7c0:	call   0x1000a8c0
1000a7c5:	push   DWORD PTR [edi+0x4]
1000a7c8:	mov    ebx,eax
1000a7ca:	mov    eax,DWORD PTR [ebp+0xc]
1000a7cd:	mov    ecx,ebx
1000a7cf:	call   0x1000ab57
1000a7d4:	lea    ecx,[ebp-0x8]
1000a7d7:	xor    edx,edx
1000a7d9:	push   ecx
1000a7da:	inc    edx
1000a7db:	mov    esi,eax
1000a7dd:	call   0x1000a498
1000a7e2:	push   DWORD PTR [ebp+0xc]
1000a7e5:	mov    ecx,eax
1000a7e7:	mov    eax,DWORD PTR [edi+0x8]
1000a7ea:	call   0x1000ab57
1000a7ef:	mov    eax,DWORD PTR [edi+0x4]
1000a7f2:	test   eax,eax
1000a7f4:	jne    0x1000a7fa
1000a7f6:	xor    esi,esi
1000a7f8:	jmp    0x1000a802
1000a7fa:	mov    esi,DWORD PTR [edi+0x8]
1000a7fd:	sub    esi,eax
1000a7ff:	sar    esi,0x2
1000a802:	test   eax,eax
1000a804:	je     0x1000a80d
1000a806:	push   eax
1000a807:	call   0x10042fe2
1000a80c:	pop    ecx
1000a80d:	mov    eax,DWORD PTR [ebp-0x4]
1000a810:	lea    eax,[ebx+eax*4]
1000a813:	mov    DWORD PTR [edi+0xc],eax
1000a816:	lea    eax,[ebx+esi*4+0x4]
1000a81a:	mov    DWORD PTR [edi+0x8],eax
1000a81d:	mov    DWORD PTR [edi+0x4],ebx
1000a820:	jmp    0x1000a8b9
1000a825:	mov    esi,DWORD PTR [edi+0x8]
1000a828:	mov    ebx,DWORD PTR [ebp+0xc]
1000a82b:	mov    eax,esi
1000a82d:	sub    eax,ebx
1000a82f:	sar    eax,0x2
1000a832:	cmp    eax,0x1
1000a835:	jae    0x1000a878
1000a837:	lea    ecx,[ebx+0x4]
1000a83a:	push   ebx
1000a83b:	mov    eax,esi
1000a83d:	call   0x1000ab57
1000a842:	mov    esi,DWORD PTR [edi+0x8]
1000a845:	lea    eax,[ebp-0x8]
1000a848:	push   eax
1000a849:	mov    eax,esi
1000a84b:	xor    edx,edx
1000a84d:	sub    eax,ebx
1000a84f:	sar    eax,0x2
1000a852:	inc    edx
1000a853:	sub    edx,eax
1000a855:	call   0x1000a498
1000a85a:	add    DWORD PTR [edi+0x8],0x4
1000a85e:	mov    edi,DWORD PTR [edi+0x8]
1000a861:	lea    eax,[edi-0x4]
1000a864:	cmp    ebx,eax
1000a866:	mov    ecx,ebx
1000a868:	je     0x1000a8b9
1000a86a:	mov    edx,DWORD PTR [ebp-0x8]
1000a86d:	mov    DWORD PTR [ecx],edx
1000a86f:	add    ecx,0x4
1000a872:	cmp    ecx,eax
1000a874:	jne    0x1000a86a
1000a876:	jmp    0x1000a8b9
1000a878:	lea    eax,[esi-0x4]
1000a87b:	mov    DWORD PTR [ebp+0xc],eax
1000a87e:	push   eax
1000a87f:	mov    ecx,esi
1000a881:	mov    eax,esi
1000a883:	call   0x1000ab57
1000a888:	mov    DWORD PTR [edi+0x8],eax
1000a88b:	mov    eax,DWORD PTR [ebp+0xc]
1000a88e:	sub    eax,ebx
1000a890:	sar    eax,0x2
1000a893:	test   eax,eax
1000a895:	jle    0x1000a8a8
1000a897:	shl    eax,0x2
1000a89a:	push   eax
1000a89b:	push   ebx
1000a89c:	push   eax
1000a89d:	sub    esi,eax
1000a89f:	push   esi
1000a8a0:	call   0x10042fe7
1000a8a5:	add    esp,0x10
1000a8a8:	lea    eax,[ebx+0x4]
1000a8ab:	jmp    0x1000a8b5
1000a8ad:	mov    ecx,DWORD PTR [ebp-0x8]
1000a8b0:	mov    DWORD PTR [ebx],ecx
1000a8b2:	add    ebx,0x4
1000a8b5:	cmp    ebx,eax
1000a8b7:	jne    0x1000a8ad
1000a8b9:	pop    edi
1000a8ba:	pop    esi
1000a8bb:	pop    ebx
1000a8bc:	leave  
1000a8bd:	ret    0x8
1000a8c0:	push   ebp
1000a8c1:	mov    ebp,esp
1000a8c3:	sub    esp,0x10
1000a8c6:	test   ecx,ecx
1000a8c8:	ja     0x1000a8da
1000a8ca:	xor    ecx,ecx
1000a8cc:	mov    eax,ecx
1000a8ce:	shl    eax,0x2
1000a8d1:	push   eax
1000a8d2:	call   0x10043196
1000a8d7:	pop    ecx
1000a8d8:	leave  
1000a8d9:	ret    
1000a8da:	or     eax,0xffffffff
1000a8dd:	xor    edx,edx
1000a8df:	div    ecx
1000a8e1:	cmp    eax,0x4
1000a8e4:	jae    0x1000a8cc
1000a8e6:	and    DWORD PTR [ebp-0x4],0x0
1000a8ea:	lea    eax,[ebp-0x4]
1000a8ed:	push   eax
1000a8ee:	lea    ecx,[ebp-0x10]
1000a8f1:	call   0x100432d2
1000a8f6:	push   0x10076460
1000a8fb:	lea    eax,[ebp-0x10]
1000a8fe:	push   eax
1000a8ff:	mov    DWORD PTR [ebp-0x10],0x100675a0
1000a906:	call   0x10047942
1000a90b:	int3   
1000a90c:	push   ebp
1000a90d:	mov    ebp,esp
1000a90f:	sub    esp,0x14
1000a912:	mov    eax,DWORD PTR [ebx+0x4]
1000a915:	mov    eax,DWORD PTR [eax]
1000a917:	push   esi
1000a918:	push   edi
1000a919:	lea    edi,[ebp-0xc]
1000a91c:	lea    esi,[ebp+0xc]
1000a91f:	mov    DWORD PTR [ebp-0x8],eax
1000a922:	mov    DWORD PTR [ebp-0xc],ebx
1000a925:	call   0x10004b0c
1000a92a:	test   al,al
1000a92c:	je     0x1000a993
1000a92e:	mov    eax,DWORD PTR [ebx+0x4]
1000a931:	lea    edi,[ebp-0xc]
1000a934:	lea    esi,[ebp+0x14]
1000a937:	mov    DWORD PTR [ebp-0x8],eax
1000a93a:	mov    DWORD PTR [ebp-0xc],ebx
1000a93d:	call   0x10004b0c
1000a942:	test   al,al
1000a944:	je     0x1000a993
1000a946:	mov    eax,DWORD PTR [ebx+0x4]
1000a949:	push   DWORD PTR [eax+0x4]
1000a94c:	mov    ecx,ebx
1000a94e:	call   0x1000aa87
1000a953:	mov    eax,DWORD PTR [ebx+0x4]
1000a956:	mov    DWORD PTR [eax+0x4],eax
1000a959:	mov    eax,DWORD PTR [ebx+0x4]
1000a95c:	and    DWORD PTR [ebx+0x8],0x0
1000a960:	mov    DWORD PTR [eax],eax
1000a962:	mov    eax,DWORD PTR [ebx+0x4]
1000a965:	mov    DWORD PTR [eax+0x8],eax
1000a968:	mov    eax,DWORD PTR [ebx+0x4]
1000a96b:	mov    ecx,DWORD PTR [eax]
1000a96d:	mov    eax,DWORD PTR [ebp+0x8]
1000a970:	mov    DWORD PTR [eax],ebx
1000a972:	jmp    0x1000a9ad
1000a974:	mov    eax,DWORD PTR [ebp+0x10]
1000a977:	mov    edi,DWORD PTR [ebp+0xc]
1000a97a:	lea    esi,[ebp+0xc]
1000a97d:	mov    DWORD PTR [ebp-0x8],eax
1000a980:	call   0x1000a19a
1000a985:	push   DWORD PTR [ebp-0x8]
1000a988:	lea    eax,[ebp-0x14]
1000a98b:	push   edi
1000a98c:	push   eax
1000a98d:	push   ebx
1000a98e:	call   0x10009e1a
1000a993:	lea    edi,[ebp+0x14]
1000a996:	lea    esi,[ebp+0xc]
1000a999:	call   0x10004b0c
1000a99e:	test   al,al
1000a9a0:	je     0x1000a974
1000a9a2:	mov    ecx,DWORD PTR [ebp+0xc]
1000a9a5:	mov    eax,DWORD PTR [ebp+0x8]
1000a9a8:	mov    DWORD PTR [eax],ecx
1000a9aa:	mov    ecx,DWORD PTR [ebp+0x10]
1000a9ad:	pop    edi
1000a9ae:	mov    DWORD PTR [eax+0x4],ecx
1000a9b1:	pop    esi
1000a9b2:	leave  
1000a9b3:	ret    0x14
1000a9b6:	mov    eax,DWORD PTR [eax+0x4]
1000a9b9:	push   esi
1000a9ba:	mov    esi,DWORD PTR [eax+0x4]
1000a9bd:	push   edi
1000a9be:	mov    edi,eax
1000a9c0:	jmp    0x1000a9db
1000a9c2:	mov    eax,DWORD PTR [esp+0xc]
1000a9c6:	lea    ecx,[esi+0xc]
1000a9c9:	call   0x10007983
1000a9ce:	test   al,al
1000a9d0:	je     0x1000a9d7
1000a9d2:	mov    esi,DWORD PTR [esi+0x8]
1000a9d5:	jmp    0x1000a9db
1000a9d7:	mov    edi,esi
1000a9d9:	mov    esi,DWORD PTR [esi]
1000a9db:	cmp    BYTE PTR [esi+0x39],0x0
1000a9df:	je     0x1000a9c2
1000a9e1:	mov    eax,edi
1000a9e3:	pop    edi
1000a9e4:	pop    esi
1000a9e5:	ret    0x4
1000a9e8:	push   0xc
1000a9ea:	mov    eax,0x100626d4
1000a9ef:	call   0x10059e28
1000a9f4:	push   0x3c
1000a9f6:	call   0x10043196
1000a9fb:	mov    esi,eax
1000a9fd:	pop    ecx
1000a9fe:	mov    DWORD PTR [ebp-0x14],esi
1000aa01:	test   esi,esi
1000aa03:	mov    DWORD PTR [ebp-0x4],0x1
1000aa0a:	je     0x1000aa1d
1000aa0c:	push   DWORD PTR [ebp+0x10]
1000aa0f:	mov    ebx,DWORD PTR [ebp+0x14]
1000aa12:	push   DWORD PTR [ebp+0xc]
1000aa15:	push   DWORD PTR [ebp+0x8]
1000aa18:	call   0x1000aa3a
1000aa1d:	mov    eax,esi
1000aa1f:	call   0x10059ecd
1000aa24:	ret    0x10
1000aa27:	push   DWORD PTR [ebp-0x14]
1000aa2a:	call   0x10042fe2
1000aa2f:	pop    ecx
1000aa30:	push   0x0
1000aa32:	push   0x0
1000aa34:	call   0x10047942
1000aa39:	int3   
1000aa3a:	push   0x0
1000aa3c:	mov    eax,0x100617bb
1000aa41:	call   0x10059df5
1000aa46:	mov    eax,DWORD PTR [ebp+0x8]
1000aa49:	mov    DWORD PTR [esi],eax
1000aa4b:	mov    eax,DWORD PTR [ebp+0xc]
1000aa4e:	mov    DWORD PTR [esi+0x4],eax
1000aa51:	mov    eax,DWORD PTR [ebp+0x10]
1000aa54:	lea    edi,[esi+0xc]
1000aa57:	push   ebx
1000aa58:	mov    ecx,edi
1000aa5a:	mov    DWORD PTR [esi+0x8],eax
1000aa5d:	mov    DWORD PTR [ebp+0x8],edi
1000aa60:	call   0x100011c9
1000aa65:	and    DWORD PTR [ebp-0x4],0x0
1000aa69:	add    edi,0x1c
1000aa6c:	lea    ecx,[ebx+0x1c]
1000aa6f:	push   edi
1000aa70:	call   0x10018e1b
1000aa75:	mov    BYTE PTR [esi+0x38],0x0
1000aa79:	mov    BYTE PTR [esi+0x39],0x0
1000aa7d:	mov    eax,esi
1000aa7f:	call   0x10059ecd
1000aa84:	ret    0xc
1000aa87:	push   ecx
1000aa88:	push   ebp
1000aa89:	mov    ebp,DWORD PTR [esp+0xc]
1000aa8d:	cmp    BYTE PTR [ebp+0x39],0x0
1000aa91:	push   edi
1000aa92:	mov    DWORD PTR [esp+0x8],ecx
1000aa96:	mov    edi,ebp
1000aa98:	jne    0x1000aad1
1000aa9a:	push   ebx
1000aa9b:	push   esi
1000aa9c:	push   DWORD PTR [edi+0x8]
1000aa9f:	mov    ecx,DWORD PTR [esp+0x14]
1000aaa3:	call   0x1000aa87
1000aaa8:	mov    edi,DWORD PTR [edi]
1000aaaa:	lea    ebx,[ebp+0xc]
1000aaad:	lea    esi,[ebx+0x1c]
1000aab0:	call   0x100047a5
1000aab5:	push   0x0
1000aab7:	push   0x1
1000aab9:	mov    ecx,ebx
1000aabb:	call   0x100012f0
1000aac0:	push   ebp
1000aac1:	call   0x10042fe2
1000aac6:	cmp    BYTE PTR [edi+0x39],0x0
1000aaca:	pop    ecx
1000aacb:	mov    ebp,edi
1000aacd:	je     0x1000aa9c
1000aacf:	pop    esi
1000aad0:	pop    ebx
1000aad1:	pop    edi
1000aad2:	pop    ebp
1000aad3:	pop    ecx
1000aad4:	ret    0x4
1000aad7:	push   0x8
1000aad9:	mov    eax,0x100626b4
1000aade:	call   0x10059df5
1000aae3:	and    DWORD PTR [ebp-0x14],0x0
1000aae7:	mov    DWORD PTR [ebp-0x10],edi
1000aaea:	xor    esi,esi
1000aaec:	lea    eax,[ebp+0x8]
1000aaef:	inc    esi
1000aaf0:	push   eax
1000aaf1:	mov    ecx,edi
1000aaf3:	mov    DWORD PTR [ebp-0x4],esi
1000aaf6:	call   0x100011c9
1000aafb:	lea    eax,[edi+0x1c]
1000aafe:	push   eax
1000aaff:	lea    ecx,[ebp+0x24]
1000ab02:	mov    BYTE PTR [ebp-0x4],0x2
1000ab06:	call   0x10018e1b
1000ab0b:	push   0x0
1000ab0d:	push   esi
1000ab0e:	lea    ecx,[ebp+0x8]
1000ab11:	call   0x100012f0
1000ab16:	lea    esi,[ebp+0x24]
1000ab19:	call   0x100047a5
1000ab1e:	mov    eax,edi
1000ab20:	call   0x10059ecd
1000ab25:	ret    
1000ab26:	push   0x0
1000ab28:	mov    eax,0x100617bb
1000ab2d:	call   0x10059df5
1000ab32:	mov    esi,DWORD PTR [ebp+0x8]
1000ab35:	push   edi
1000ab36:	mov    ecx,esi
1000ab38:	call   0x100011c9
1000ab3d:	and    DWORD PTR [ebp-0x4],0x0
1000ab41:	lea    eax,[esi+0x1c]
1000ab44:	lea    ecx,[edi+0x1c]
1000ab47:	push   eax
1000ab48:	call   0x10018e1b
1000ab4d:	mov    eax,esi
1000ab4f:	call   0x10059ecd
1000ab54:	ret    0x4
1000ab57:	sub    eax,DWORD PTR [esp+0x4]
1000ab5b:	push   esi
1000ab5c:	sar    eax,0x2
1000ab5f:	lea    eax,[eax*4+0x0]
1000ab66:	lea    esi,[eax+ecx*1]
1000ab69:	je     0x1000ab7a
1000ab6b:	push   eax
1000ab6c:	push   DWORD PTR [esp+0xc]
1000ab70:	push   eax
1000ab71:	push   ecx
1000ab72:	call   0x10042fe7
1000ab77:	add    esp,0x10
1000ab7a:	mov    eax,esi
1000ab7c:	pop    esi
1000ab7d:	ret    0x4
1000ab80:	push   0x8
1000ab82:	mov    eax,0x10060a04
1000ab87:	call   0x10059e28
1000ab8c:	mov    esi,DWORD PTR [ebp+0x8]
1000ab8f:	and    DWORD PTR [ebp-0x4],0x0
1000ab93:	mov    DWORD PTR [ebp-0x14],esi
1000ab96:	cmp    DWORD PTR [ebp+0xc],0x0
1000ab9a:	jbe    0x1000abce
1000ab9c:	mov    edi,DWORD PTR [ebp+0x10]
1000ab9f:	call   0x100068ed
1000aba4:	dec    DWORD PTR [ebp+0xc]
1000aba7:	add    esi,0x20
1000abaa:	mov    DWORD PTR [ebp+0x8],esi
1000abad:	jmp    0x1000ab96
1000abaf:	mov    esi,DWORD PTR [ebp-0x14]
1000abb2:	jmp    0x1000abc0
1000abb4:	push   0x1
1000abb6:	mov    ecx,esi
1000abb8:	call   0x100012f0
1000abbd:	add    esi,0x20
1000abc0:	cmp    esi,DWORD PTR [ebp+0x8]
1000abc3:	push   0x0
1000abc5:	jne    0x1000abb4
1000abc7:	push   0x0
1000abc9:	call   0x10047942
1000abce:	call   0x10059ecd
1000abd3:	ret    
1000abd4:	push   0x8
1000abd6:	mov    eax,0x10061710
1000abdb:	call   0x10059e28
1000abe0:	mov    esi,DWORD PTR [ebp+0xc]
1000abe3:	mov    edi,ecx
1000abe5:	and    DWORD PTR [ebp-0x4],0x0
1000abe9:	mov    DWORD PTR [ebp-0x14],esi
1000abec:	cmp    edi,DWORD PTR [ebp+0x8]
1000abef:	je     0x1000ac20
1000abf1:	call   0x100068ed
1000abf6:	add    esi,0x20
1000abf9:	mov    DWORD PTR [ebp+0xc],esi
1000abfc:	add    edi,0x20
1000abff:	jmp    0x1000abec
1000ac01:	mov    esi,DWORD PTR [ebp-0x14]
1000ac04:	jmp    0x1000ac12
1000ac06:	push   0x1
1000ac08:	mov    ecx,esi
1000ac0a:	call   0x100012f0
1000ac0f:	add    esi,0x20
1000ac12:	cmp    esi,DWORD PTR [ebp+0xc]
1000ac15:	push   0x0
1000ac17:	jne    0x1000ac06
1000ac19:	push   0x0
1000ac1b:	call   0x10047942
1000ac20:	mov    eax,esi
1000ac22:	call   0x10059ecd
1000ac27:	ret    
1000ac28:	test   BYTE PTR [esp+0x4],0x1
1000ac2d:	push   esi
1000ac2e:	mov    esi,ecx
1000ac30:	mov    DWORD PTR [esi],0x1006ea24
1000ac36:	je     0x1000ac3f
1000ac38:	push   esi
1000ac39:	call   0x10042fe2
1000ac3e:	pop    ecx
1000ac3f:	mov    eax,esi
1000ac41:	pop    esi
1000ac42:	ret    0x4
1000ac45:	mov    eax,DWORD PTR [esi]
1000ac47:	test   eax,eax
1000ac49:	je     0x1000ac55
1000ac4b:	push   eax
1000ac4c:	call   DWORD PTR ds:0x10067090
1000ac52:	and    DWORD PTR [esi],0x0
1000ac55:	ret    
1000ac56:	push   ebp
1000ac57:	mov    ebp,esp
1000ac59:	push   ecx
1000ac5a:	push   ecx
1000ac5b:	mov    eax,ds:0x10083010
1000ac60:	push   0x0
1000ac62:	mov    DWORD PTR [ebp-0x4],eax
1000ac65:	push   0x0
1000ac67:	lea    eax,[ebp-0x8]
1000ac6a:	push   eax
1000ac6b:	push   0x2
1000ac6d:	mov    DWORD PTR [ebp-0x8],esi
1000ac70:	call   DWORD PTR ds:0x100670f4
1000ac76:	sub    eax,0x0
1000ac79:	je     0x1000ac93
1000ac7b:	dec    eax
1000ac7c:	je     0x1000ac8e
1000ac7e:	sub    eax,0x101
1000ac83:	je     0x1000ac89
1000ac85:	push   0x3
1000ac87:	jmp    0x1000ac8b
1000ac89:	push   0x2
1000ac8b:	pop    eax
1000ac8c:	jmp    0x1000ac9a
1000ac8e:	xor    eax,eax
1000ac90:	inc    eax
1000ac91:	jmp    0x1000ac9a
1000ac93:	mov    eax,DWORD PTR [ebp+0x8]
1000ac96:	mov    DWORD PTR [eax],esi
1000ac98:	xor    eax,eax
1000ac9a:	leave  
1000ac9b:	ret    0x4
1000ac9e:	push   ebp
1000ac9f:	mov    ebp,esp
1000aca1:	and    esp,0xfffffff8
1000aca4:	push   ecx
1000aca5:	push   edi
1000aca6:	mov    edi,eax
1000aca8:	mov    eax,ds:0x10082cec
1000acad:	and    DWORD PTR [edi],0x0
1000acb0:	cmp    eax,0x2
1000acb3:	jne    0x1000acc0
1000acb5:	push   DWORD PTR [ebp+0x8]
1000acb8:	call   0x10007502
1000acbd:	pop    ecx
1000acbe:	jmp    0x1000acd3
1000acc0:	cmp    eax,0x1
1000acc3:	jne    0x1000acd1
1000acc5:	push   edi
1000acc6:	push   DWORD PTR [ebp+0x8]
1000acc9:	call   0x1001287a
1000acce:	pop    ecx
1000accf:	jmp    0x1000acbd
1000acd1:	xor    al,al
1000acd3:	pop    edi
1000acd4:	mov    esp,ebp
1000acd6:	pop    ebp
1000acd7:	ret    
1000acd8:	push   ebp
1000acd9:	mov    ebp,esp
1000acdb:	sub    esp,0x10
1000acde:	mov    eax,DWORD PTR [ebp+0xc]
1000ace1:	and    DWORD PTR [ebp+0xc],0x0
1000ace5:	push   esi
1000ace6:	push   edi
1000ace7:	mov    DWORD PTR [ebp-0x8],eax
1000acea:	mov    eax,DWORD PTR [ebp+0x8]
1000aced:	push   0x0
1000acef:	mov    esi,ecx
1000acf1:	mov    DWORD PTR [ebp-0x4],eax
1000acf4:	lea    edi,[esi+0x8]
1000acf7:	push   edi
1000acf8:	lea    eax,[ebp+0xc]
1000acfb:	push   eax
1000acfc:	lea    eax,[ebp+0x8]
1000acff:	push   eax
1000ad00:	push   0x1
1000ad02:	lea    eax,[ebp-0x8]
1000ad05:	push   eax
1000ad06:	push   DWORD PTR [esi+0x4]
1000ad09:	call   DWORD PTR ds:0x100673c0
1000ad0f:	cmp    eax,0xffffffff
1000ad12:	jne    0x1000ad25
1000ad14:	call   DWORD PTR ds:0x100673d0
1000ad1a:	cmp    eax,0x3e5
1000ad1f:	je     0x1000ad25
1000ad21:	xor    al,al
1000ad23:	jmp    0x1000ad72
1000ad25:	mov    eax,DWORD PTR [esi+0x18]
1000ad28:	push   0x1
1000ad2a:	mov    DWORD PTR [ebp-0x10],eax
1000ad2d:	mov    eax,DWORD PTR [esi+0x1c]
1000ad30:	push   0xffffffff
1000ad32:	mov    DWORD PTR [ebp-0xc],eax
1000ad35:	push   0x0
1000ad37:	lea    eax,[ebp-0x10]
1000ad3a:	push   eax
1000ad3b:	push   0x2
1000ad3d:	call   DWORD PTR ds:0x100673c4
1000ad43:	test   eax,eax
1000ad45:	jne    0x1000ad21
1000ad47:	lea    eax,[ebp+0xc]
1000ad4a:	push   eax
1000ad4b:	push   0x0
1000ad4d:	lea    eax,[ebp+0x8]
1000ad50:	push   eax
1000ad51:	push   edi
1000ad52:	push   DWORD PTR [esi+0x4]
1000ad55:	call   DWORD PTR ds:0x100673bc
1000ad5b:	test   eax,eax
1000ad5d:	je     0x1000ad21
1000ad5f:	mov    eax,DWORD PTR [ebp+0x10]
1000ad62:	mov    ecx,DWORD PTR [ebp+0x8]
1000ad65:	mov    DWORD PTR [eax],ecx
1000ad67:	push   DWORD PTR [esi+0x18]
1000ad6a:	call   DWORD PTR ds:0x100673d4
1000ad70:	mov    al,0x1
1000ad72:	pop    edi
1000ad73:	pop    esi
1000ad74:	leave  
1000ad75:	ret    0xc
1000ad78:	push   esi
1000ad79:	mov    esi,ecx
1000ad7b:	push   DWORD PTR [esi+0x18]
1000ad7e:	mov    DWORD PTR [esi],0x1006ea2c
1000ad84:	call   DWORD PTR ds:0x100673dc
1000ad8a:	test   BYTE PTR [esp+0x8],0x1
1000ad8f:	mov    DWORD PTR [esi],0x1006ea24
1000ad95:	je     0x1000ad9e
1000ad97:	push   esi
1000ad98:	call   0x10042fe2
1000ad9d:	pop    ecx
1000ad9e:	mov    eax,esi
1000ada0:	pop    esi
1000ada1:	ret    0x4
1000ada4:	push   ebx
1000ada5:	xor    ebx,ebx
1000ada7:	mov    DWORD PTR [edi],ebx
1000ada9:	mov    DWORD PTR [edi+0x4],ebx
1000adac:	mov    DWORD PTR [edi+0x8],ebx
1000adaf:	mov    DWORD PTR [edi+0xc],ebx
1000adb2:	push   esi
1000adb3:	mov    DWORD PTR [edi+0x10],ebx
1000adb6:	lea    esi,[edi+0x18]
1000adb9:	mov    DWORD PTR [edi+0x14],ebx
1000adbc:	call   0x100040ef
1000adc1:	lea    esi,[edi+0x38]
1000adc4:	mov    WORD PTR [edi+0x34],bx
1000adc8:	call   0x100040ef
1000adcd:	mov    BYTE PTR [edi+0x58],bl
1000add0:	call   DWORD PTR ds:0x100673e0
1000add6:	mov    esi,eax
1000add8:	mov    eax,DWORD PTR [edi+0x4]
1000addb:	cmp    eax,ebx
1000addd:	je     0x1000ade6
1000addf:	push   eax
1000ade0:	call   DWORD PTR ds:0x100673dc
1000ade6:	mov    DWORD PTR [edi+0x4],esi
1000ade9:	pop    esi
1000adea:	mov    eax,edi
1000adec:	pop    ebx
1000aded:	ret    
1000adee:	push   ebx
1000adef:	push   esi
1000adf0:	push   edi
1000adf1:	mov    esi,ecx
1000adf3:	push   DWORD PTR [esi+0x4]
1000adf6:	mov    edi,eax
1000adf8:	call   DWORD PTR ds:0x100673d4
1000adfe:	cmp    edi,0xffffffff
1000ae01:	je     0x1000ae4b
1000ae03:	push   0x8
1000ae05:	call   0x10043196
1000ae0a:	xor    ebx,ebx
1000ae0c:	cmp    eax,ebx
1000ae0e:	pop    ecx
1000ae0f:	je     0x1000ae1d
1000ae11:	mov    ecx,DWORD PTR [esi+0x4]
1000ae14:	mov    DWORD PTR [eax+0x4],edi
1000ae17:	mov    DWORD PTR [eax],ecx
1000ae19:	mov    edi,eax
1000ae1b:	jmp    0x1000ae1f
1000ae1d:	xor    edi,edi
1000ae1f:	push   ebx
1000ae20:	push   ebx
1000ae21:	push   edi
1000ae22:	push   0x1000b261
1000ae27:	push   ebx
1000ae28:	push   ebx
1000ae29:	call   DWORD PTR ds:0x10067088
1000ae2f:	push   eax
1000ae30:	call   0x100049bb
1000ae35:	cmp    DWORD PTR [esi],ebx
1000ae37:	jne    0x1000ae44
1000ae39:	push   edi
1000ae3a:	call   0x10042fe2
1000ae3f:	pop    ecx
1000ae40:	xor    al,al
1000ae42:	jmp    0x1000ae4d
1000ae44:	push   ebx
1000ae45:	call   0x10042fe2
1000ae4a:	pop    ecx
1000ae4b:	mov    al,0x1
1000ae4d:	pop    edi
1000ae4e:	pop    esi
1000ae4f:	pop    ebx
1000ae50:	ret    
1000ae51:	cmp    DWORD PTR [esi],0x0
1000ae54:	je     0x1000ae76
1000ae56:	push   DWORD PTR [esi+0x4]
1000ae59:	call   DWORD PTR ds:0x100673e4
1000ae5f:	push   0xffffffff
1000ae61:	push   DWORD PTR [esi]
1000ae63:	call   DWORD PTR ds:0x1006707c
1000ae69:	mov    eax,DWORD PTR [esi]
1000ae6b:	test   eax,eax
1000ae6d:	je     0x1000ae76
1000ae6f:	push   eax
1000ae70:	call   DWORD PTR ds:0x10067078
1000ae76:	and    DWORD PTR [esi],0x0
1000ae79:	ret    
1000ae7a:	push   ebp
1000ae7b:	mov    ebp,esp
1000ae7d:	sub    esp,0x1c
1000ae80:	mov    eax,ds:0x100801ac
1000ae85:	xor    eax,ebp
1000ae87:	mov    DWORD PTR [ebp-0x4],eax
1000ae8a:	push   edi
1000ae8b:	push   0x0
1000ae8d:	push   0x1
1000ae8f:	push   0x2
1000ae91:	call   DWORD PTR ds:0x100673fc
1000ae97:	mov    edi,eax
1000ae99:	mov    eax,DWORD PTR [esi+0x8]
1000ae9c:	test   eax,eax
1000ae9e:	je     0x1000aea7
1000aea0:	push   eax
1000aea1:	call   DWORD PTR ds:0x100673c8
1000aea7:	test   edi,edi
1000aea9:	mov    DWORD PTR [esi+0x8],edi
1000aeac:	jne    0x1000aeb5
1000aeae:	xor    al,al
1000aeb0:	jmp    0x1000afa3
1000aeb5:	xor    eax,eax
1000aeb7:	cmp    DWORD PTR [esi+0x54],0x0
1000aebb:	lea    edi,[ebp-0x12]
1000aebe:	stos   DWORD PTR es:[edi],eax
1000aebf:	stos   DWORD PTR es:[edi],eax
1000aec0:	stos   DWORD PTR es:[edi],eax
1000aec1:	stos   WORD PTR es:[edi],ax
1000aec3:	mov    WORD PTR [ebp-0x14],0x2
1000aec9:	jne    0x1000aefc
1000aecb:	cmp    DWORD PTR [esi+0x30],0x10
1000aecf:	jb     0x1000aed6
1000aed1:	mov    eax,DWORD PTR [esi+0x1c]
1000aed4:	jmp    0x1000aed9
1000aed6:	lea    eax,[esi+0x1c]
1000aed9:	push   eax
1000aeda:	call   DWORD PTR ds:0x100673cc
1000aee0:	movsx  ecx,WORD PTR [eax+0xa]
1000aee4:	mov    eax,DWORD PTR [eax+0xc]
1000aee7:	push   ecx
1000aee8:	push   DWORD PTR [eax]
1000aeea:	lea    eax,[ebp-0x10]
1000aeed:	push   eax
1000aeee:	call   0x10045340
1000aef3:	movzx  eax,WORD PTR [esi+0x34]
1000aef7:	add    esp,0xc
1000aefa:	jmp    0x1000af18
1000aefc:	cmp    DWORD PTR [esi+0x50],0x10
1000af00:	jb     0x1000af07
1000af02:	mov    eax,DWORD PTR [esi+0x3c]
1000af05:	jmp    0x1000af0a
1000af07:	lea    eax,[esi+0x3c]
1000af0a:	push   eax
1000af0b:	call   DWORD PTR ds:0x100673f8
1000af11:	mov    DWORD PTR [ebp-0x10],eax
1000af14:	movzx  eax,WORD PTR [esi+0x54]
1000af18:	push   eax
1000af19:	call   DWORD PTR ds:0x100673b4
1000af1f:	mov    WORD PTR [ebp-0x12],ax
1000af23:	call   DWORD PTR ds:0x100673e0
1000af29:	mov    edi,eax
1000af2b:	call   0x10002068
1000af30:	mov    eax,DWORD PTR [esi+0x8]
1000af33:	push   0x10
1000af35:	push   edi
1000af36:	push   eax
1000af37:	call   DWORD PTR ds:0x100673e8
1000af3d:	test   eax,eax
1000af3f:	je     0x1000af55
1000af41:	test   edi,edi
1000af43:	je     0x1000aeae
1000af49:	push   edi
1000af4a:	call   DWORD PTR ds:0x100673dc
1000af50:	jmp    0x1000aeae
1000af55:	mov    eax,DWORD PTR [esi+0x8]
1000af58:	push   0x10
1000af5a:	lea    ecx,[ebp-0x14]
1000af5d:	push   ecx
1000af5e:	push   eax
1000af5f:	call   DWORD PTR ds:0x100673ec
1000af65:	cmp    eax,0xffffffff
1000af68:	jne    0x1000af96
1000af6a:	call   DWORD PTR ds:0x100673d0
1000af70:	cmp    eax,0x2733
1000af75:	jne    0x1000af41
1000af77:	mov    eax,DWORD PTR [esi+0x4]
1000af7a:	push   0x1
1000af7c:	push   0xffffffff
1000af7e:	mov    DWORD PTR [ebp-0x18],eax
1000af81:	push   0x0
1000af83:	lea    eax,[ebp-0x1c]
1000af86:	push   eax
1000af87:	push   0x2
1000af89:	mov    DWORD PTR [ebp-0x1c],edi
1000af8c:	call   DWORD PTR ds:0x100673c4
1000af92:	test   eax,eax
1000af94:	jne    0x1000af41
1000af96:	test   edi,edi
1000af98:	je     0x1000afa1
1000af9a:	push   edi
1000af9b:	call   DWORD PTR ds:0x100673dc
1000afa1:	mov    al,0x1
1000afa3:	mov    ecx,DWORD PTR [ebp-0x4]
1000afa6:	xor    ecx,ebp
1000afa8:	pop    edi
1000afa9:	call   0x10043615
1000afae:	leave  
1000afaf:	ret    
1000afb0:	mov    eax,DWORD PTR [esi+0x14]
1000afb3:	push   ebx
1000afb4:	xor    ebx,ebx
1000afb6:	cmp    eax,ebx
1000afb8:	je     0x1000afc1
1000afba:	push   eax
1000afbb:	call   0x10042fe2
1000afc0:	pop    ecx
1000afc1:	push   ebp
1000afc2:	push   edi
1000afc3:	mov    DWORD PTR [esi+0x14],ebx
1000afc6:	mov    edi,DWORD PTR [esi+0x10]
1000afc9:	cmp    edi,ebx
1000afcb:	je     0x1000afdb
1000afcd:	mov    eax,edi
1000afcf:	call   0x1000e163
1000afd4:	push   edi
1000afd5:	call   0x10042fe2
1000afda:	pop    ecx
1000afdb:	push   0x20
1000afdd:	mov    DWORD PTR [esi+0x10],ebx
1000afe0:	call   0x10043196
1000afe5:	mov    edi,eax
1000afe7:	cmp    edi,ebx
1000afe9:	pop    ecx
1000afea:	je     0x1000b018
1000afec:	mov    eax,DWORD PTR [esi+0x4]
1000afef:	mov    ecx,DWORD PTR [esi+0x8]
1000aff2:	push   0x14
1000aff4:	mov    DWORD PTR [edi+0x1c],eax
1000aff7:	lea    eax,[edi+0x8]
1000affa:	push   ebx
1000affb:	push   eax
1000affc:	mov    DWORD PTR [edi],0x1006ea2c
1000b002:	mov    DWORD PTR [edi+0x4],ecx
1000b005:	call   0x10045dc0
1000b00a:	add    esp,0xc
1000b00d:	call   DWORD PTR ds:0x100673e0
1000b013:	mov    DWORD PTR [edi+0x18],eax
1000b016:	jmp    0x1000b01a
1000b018:	xor    edi,edi
1000b01a:	mov    ecx,DWORD PTR [esi+0xc]
1000b01d:	cmp    edi,ecx
1000b01f:	je     0x1000b02b
1000b021:	cmp    ecx,ebx
1000b023:	je     0x1000b02b
1000b025:	mov    eax,DWORD PTR [ecx]
1000b027:	push   0x1
1000b029:	call   DWORD PTR [eax]
1000b02b:	push   0x1c
1000b02d:	mov    DWORD PTR [esi+0xc],edi
1000b030:	call   0x10043196
1000b035:	cmp    eax,ebx
1000b037:	pop    ecx
1000b038:	je     0x1000b055
1000b03a:	mov    ecx,DWORD PTR [esi+0xc]
1000b03d:	mov    DWORD PTR [eax],ebx
1000b03f:	mov    DWORD PTR [eax+0x4],ebx
1000b042:	mov    DWORD PTR [eax+0x8],ebx
1000b045:	mov    DWORD PTR [eax+0xc],ebx
1000b048:	mov    BYTE PTR [eax+0x10],bl
1000b04b:	mov    DWORD PTR [eax+0x14],ebx
1000b04e:	mov    DWORD PTR [eax+0x18],ecx
1000b051:	mov    edi,eax
1000b053:	jmp    0x1000b057
1000b055:	xor    edi,edi
1000b057:	mov    ebp,DWORD PTR [esi+0x10]
1000b05a:	cmp    edi,ebp
1000b05c:	je     0x1000b070
1000b05e:	cmp    ebp,ebx
1000b060:	je     0x1000b070
1000b062:	mov    eax,ebp
1000b064:	call   0x1000e163
1000b069:	push   ebp
1000b06a:	call   0x10042fe2
1000b06f:	pop    ecx
1000b070:	push   0x4
1000b072:	mov    DWORD PTR [esi+0x10],edi
1000b075:	call   0x10043196
1000b07a:	cmp    eax,ebx
1000b07c:	pop    ecx
1000b07d:	pop    edi
1000b07e:	pop    ebp
1000b07f:	je     0x1000b088
1000b081:	mov    ecx,DWORD PTR [esi+0x10]
1000b084:	mov    DWORD PTR [eax],ecx
1000b086:	mov    ebx,eax
1000b088:	mov    eax,DWORD PTR [esi+0x14]
1000b08b:	cmp    ebx,eax
1000b08d:	je     0x1000b096
1000b08f:	push   eax
1000b090:	call   0x10042fe2
1000b095:	pop    ecx
1000b096:	mov    DWORD PTR [esi+0x14],ebx
1000b099:	pop    ebx
1000b09a:	ret    
1000b09b:	push   0x4
1000b09d:	mov    eax,0x10064d7a
1000b0a2:	call   0x10059df5
1000b0a7:	mov    edi,ecx
1000b0a9:	mov    esi,edx
1000b0ab:	push   0xffffffff
1000b0ad:	xor    ebx,ebx
1000b0af:	push   ebx
1000b0b0:	mov    DWORD PTR [ebp-0x10],ebx
1000b0b3:	push   DWORD PTR [ebp+0xc]
1000b0b6:	lea    ecx,[esi+0x18]
1000b0b9:	call   0x10001241
1000b0be:	mov    ax,WORD PTR [ebp+0x10]
1000b0c2:	lea    ecx,[esi+0x38]
1000b0c5:	mov    WORD PTR [esi+0x34],ax
1000b0c9:	lea    eax,[esi+0x54]
1000b0cc:	push   ecx
1000b0cd:	call   0x1000ac9e
1000b0d2:	pop    ecx
1000b0d3:	mov    DWORD PTR [ebp+0x10],ebx
1000b0d6:	mov    DWORD PTR [ebp-0x4],0x1
1000b0dd:	mov    eax,DWORD PTR [ebp+0x1c]
1000b0e0:	mov    ecx,esi
1000b0e2:	mov    DWORD PTR [edi],ebx
1000b0e4:	call   0x1000adee
1000b0e9:	test   al,al
1000b0eb:	jne    0x1000b0f4
1000b0ed:	mov    esi,DWORD PTR [ebp+0x8]
1000b0f0:	mov    DWORD PTR [esi],ebx
1000b0f2:	jmp    0x1000b173
1000b0f4:	cmp    DWORD PTR [esi+0x8],ebx
1000b0f7:	jne    0x1000b109
1000b0f9:	call   0x1000ae7a
1000b0fe:	test   al,al
1000b100:	jne    0x1000b109
1000b102:	mov    esi,DWORD PTR [ebp+0x8]
1000b105:	mov    DWORD PTR [esi],ebx
1000b107:	jmp    0x1000b173
1000b109:	call   0x1000afb0
1000b10e:	mov    DWORD PTR [ebp+0xc],ebx
1000b111:	push   DWORD PTR [ebp+0x18]
1000b114:	mov    edx,DWORD PTR [ebp+0x14]
1000b117:	push   esi
1000b118:	lea    ecx,[ebp+0xc]
1000b11b:	mov    BYTE PTR [ebp-0x4],0x2
1000b11f:	call   0x1000b3a2
1000b124:	test   al,al
1000b126:	jne    0x1000b12f
1000b128:	mov    esi,DWORD PTR [ebp+0x8]
1000b12b:	mov    DWORD PTR [esi],ebx
1000b12d:	jmp    0x1000b15d
1000b12f:	push   DWORD PTR [ebp+0xc]
1000b132:	lea    eax,[ebp+0x1c]
1000b135:	push   eax
1000b136:	push   esi
1000b137:	mov    ecx,edi
1000b139:	call   0x1000b62e
1000b13e:	push   eax
1000b13f:	lea    edi,[ebp+0x10]
1000b142:	call   0x1000208b
1000b147:	push   DWORD PTR [ebp+0x1c]
1000b14a:	call   0x10042fe2
1000b14f:	pop    ecx
1000b150:	call   0x1000ae51
1000b155:	mov    eax,DWORD PTR [ebp+0x10]
1000b158:	mov    esi,DWORD PTR [ebp+0x8]
1000b15b:	mov    DWORD PTR [esi],eax
1000b15d:	lea    ecx,[ebp+0xc]
1000b160:	mov    DWORD PTR [ebp+0x10],ebx
1000b163:	mov    DWORD PTR [ebp-0x10],0x1
1000b16a:	mov    BYTE PTR [ebp-0x4],0x1
1000b16e:	call   0x1000a176
1000b173:	push   ebx
1000b174:	call   0x10042fe2
1000b179:	mov    eax,esi
1000b17b:	pop    ecx
1000b17c:	call   0x10059ecd
1000b181:	ret    0x18
1000b184:	push   0x8
1000b186:	mov    eax,0x10064d36
1000b18b:	call   0x10059df5
1000b190:	mov    esi,ecx
1000b192:	push   0xffffffff
1000b194:	xor    ebx,ebx
1000b196:	push   ebx
1000b197:	push   DWORD PTR [ebp+0xc]
1000b19a:	lea    ecx,[esi+0x18]
1000b19d:	mov    DWORD PTR [ebp-0x10],ebx
1000b1a0:	call   0x10001241
1000b1a5:	mov    ax,WORD PTR [ebp+0x10]
1000b1a9:	mov    WORD PTR [esi+0x34],ax
1000b1ad:	mov    DWORD PTR [esi+0x54],ebx
1000b1b0:	mov    DWORD PTR [ebp+0x10],ebx
1000b1b3:	mov    eax,DWORD PTR [ebp+0x18]
1000b1b6:	xor    edi,edi
1000b1b8:	inc    edi
1000b1b9:	mov    ecx,esi
1000b1bb:	mov    DWORD PTR [ebp-0x4],edi
1000b1be:	call   0x1000adee
1000b1c3:	test   al,al
1000b1c5:	jne    0x1000b1d7
1000b1c7:	mov    esi,DWORD PTR [ebp+0x8]
1000b1ca:	mov    DWORD PTR [ebp+0x10],ebx
1000b1cd:	mov    DWORD PTR [esi],ebx
1000b1cf:	mov    DWORD PTR [ebp-0x10],edi
1000b1d2:	mov    BYTE PTR [ebp-0x4],bl
1000b1d5:	jmp    0x1000b24f
1000b1d7:	cmp    DWORD PTR [esi+0x8],ebx
1000b1da:	jne    0x1000b1ef
1000b1dc:	call   0x1000ae7a
1000b1e1:	test   al,al
1000b1e3:	jne    0x1000b1ef
1000b1e5:	mov    esi,DWORD PTR [ebp+0x8]
1000b1e8:	mov    DWORD PTR [ebp+0x10],ebx
1000b1eb:	mov    DWORD PTR [esi],ebx
1000b1ed:	jmp    0x1000b1cf
1000b1ef:	call   0x1000afb0
1000b1f4:	push   DWORD PTR [ebp+0x14]
1000b1f7:	mov    edi,esi
1000b1f9:	call   0x1000b5cb
1000b1fe:	test   al,al
1000b200:	jne    0x1000b20f
1000b202:	mov    esi,DWORD PTR [ebp+0x8]
1000b205:	mov    DWORD PTR [ebp+0x10],ebx
1000b208:	mov    DWORD PTR [esi],ebx
1000b20a:	mov    BYTE PTR [ebp-0x4],bl
1000b20d:	jmp    0x1000b248
1000b20f:	push   DWORD PTR [ebp+0x14]
1000b212:	lea    eax,[ebp+0x14]
1000b215:	push   eax
1000b216:	mov    ecx,esi
1000b218:	call   0x1000b705
1000b21d:	mov    ecx,DWORD PTR [eax]
1000b21f:	mov    DWORD PTR [eax],ebx
1000b221:	mov    ebx,ecx
1000b223:	lea    edi,[ebp+0x10]
1000b226:	call   0x1000cea7
1000b22b:	lea    eax,[ebp+0x14]
1000b22e:	call   0x1000a2dc
1000b233:	call   0x1000ae51
1000b238:	mov    eax,DWORD PTR [ebp+0x10]
1000b23b:	mov    esi,DWORD PTR [ebp+0x8]
1000b23e:	and    DWORD PTR [ebp+0x10],0x0
1000b242:	mov    DWORD PTR [esi],eax
1000b244:	mov    BYTE PTR [ebp-0x4],0x0
1000b248:	mov    DWORD PTR [ebp-0x10],0x1
1000b24f:	lea    eax,[ebp+0x10]
1000b252:	call   0x1000a2dc
1000b257:	mov    eax,esi
1000b259:	call   0x10059ecd
1000b25e:	ret    0x14
1000b261:	push   ebp
1000b262:	mov    ebp,esp
1000b264:	push   ecx
1000b265:	push   ecx
1000b266:	push   esi
1000b267:	push   edi
1000b268:	lea    eax,[ebp+0xb]
1000b26b:	push   eax
1000b26c:	call   0x10036f20
1000b271:	mov    eax,DWORD PTR [ebp+0x8]
1000b274:	mov    esi,DWORD PTR [eax]
1000b276:	mov    edi,DWORD PTR [eax+0x4]
1000b279:	push   eax
1000b27a:	call   0x10042fe2
1000b27f:	mov    eax,ds:0x10083010
1000b284:	pop    ecx
1000b285:	push   edi
1000b286:	mov    DWORD PTR [ebp-0x4],eax
1000b289:	push   0x0
1000b28b:	lea    eax,[ebp-0x8]
1000b28e:	push   eax
1000b28f:	push   0x2
1000b291:	mov    DWORD PTR [ebp-0x8],esi
1000b294:	call   DWORD PTR ds:0x100670f4
1000b29a:	cmp    eax,0x102
1000b29f:	jne    0x1000b2a8
1000b2a1:	push   esi
1000b2a2:	call   DWORD PTR ds:0x100673e4
1000b2a8:	call   0x10036f40
1000b2ad:	pop    edi
1000b2ae:	xor    eax,eax
1000b2b0:	pop    esi
1000b2b1:	leave  
1000b2b2:	ret    0x4
1000b2b5:	push   ebp
1000b2b6:	mov    ebp,esp
1000b2b8:	push   ecx
1000b2b9:	mov    ecx,DWORD PTR [ebp+0x8]
1000b2bc:	and    DWORD PTR [ebp-0x4],0x0
1000b2c0:	add    eax,0x18
1000b2c3:	push   eax
1000b2c4:	call   0x100011c9
1000b2c9:	mov    eax,DWORD PTR [ebp+0x8]
1000b2cc:	leave  
1000b2cd:	ret    0x4
1000b2d0:	push   ebp
1000b2d1:	mov    ebp,esp
1000b2d3:	sub    esp,0x2c
1000b2d6:	push   ebx
1000b2d7:	push   esi
1000b2d8:	mov    esi,eax
1000b2da:	push   edi
1000b2db:	xor    eax,eax
1000b2dd:	xor    ebx,ebx
1000b2df:	mov    DWORD PTR [ebp-0x2c],ebx
1000b2e2:	lea    edi,[ebp-0x28]
1000b2e5:	stos   DWORD PTR es:[edi],eax
1000b2e6:	stos   DWORD PTR es:[edi],eax
1000b2e7:	stos   DWORD PTR es:[edi],eax
1000b2e8:	stos   DWORD PTR es:[edi],eax
1000b2e9:	mov    eax,DWORD PTR [ebp+0x8]
1000b2ec:	mov    eax,DWORD PTR [eax+0x34]
1000b2ef:	mov    ecx,DWORD PTR [eax+0x18]
1000b2f2:	mov    DWORD PTR [ebp-0x10],ecx
1000b2f5:	mov    eax,DWORD PTR [eax+0x14]
1000b2f8:	mov    DWORD PTR [ebp-0xc],eax
1000b2fb:	call   DWORD PTR ds:0x100673e0
1000b301:	push   ebx
1000b302:	lea    ecx,[ebp-0x2c]
1000b305:	push   ecx
1000b306:	push   ebx
1000b307:	lea    ecx,[ebp-0x4]
1000b30a:	push   ecx
1000b30b:	push   0x1
1000b30d:	mov    edi,eax
1000b30f:	mov    eax,DWORD PTR [esi+0x8]
1000b312:	lea    ecx,[ebp-0x10]
1000b315:	push   ecx
1000b316:	push   eax
1000b317:	mov    DWORD PTR [ebp-0x1c],edi
1000b31a:	mov    DWORD PTR [ebp-0x8],ebx
1000b31d:	call   DWORD PTR ds:0x100673f0
1000b323:	cmp    eax,0xffffffff
1000b326:	jne    0x1000b344
1000b328:	call   DWORD PTR ds:0x100673d0
1000b32e:	cmp    eax,0x3e5
1000b333:	je     0x1000b344
1000b335:	cmp    edi,ebx
1000b337:	je     0x1000b340
1000b339:	push   edi
1000b33a:	call   DWORD PTR ds:0x100673dc
1000b340:	xor    al,al
1000b342:	jmp    0x1000b39b
1000b344:	mov    eax,DWORD PTR [ebp-0x1c]
1000b347:	push   0x1
1000b349:	mov    DWORD PTR [ebp-0x18],eax
1000b34c:	mov    eax,DWORD PTR [esi+0x4]
1000b34f:	push   0xffffffff
1000b351:	mov    DWORD PTR [ebp-0x14],eax
1000b354:	push   ebx
1000b355:	lea    eax,[ebp-0x18]
1000b358:	push   eax
1000b359:	push   0x2
1000b35b:	call   DWORD PTR ds:0x100673c4
1000b361:	test   eax,eax
1000b363:	jne    0x1000b335
1000b365:	mov    esi,DWORD PTR [esi+0x8]
1000b368:	lea    eax,[ebp-0x8]
1000b36b:	push   eax
1000b36c:	push   ebx
1000b36d:	lea    eax,[ebp-0x4]
1000b370:	push   eax
1000b371:	lea    eax,[ebp-0x2c]
1000b374:	push   eax
1000b375:	push   esi
1000b376:	call   DWORD PTR ds:0x100673bc
1000b37c:	test   eax,eax
1000b37e:	je     0x1000b335
1000b380:	mov    eax,DWORD PTR [ebp+0x8]
1000b383:	mov    eax,DWORD PTR [eax+0x34]
1000b386:	mov    ecx,DWORD PTR [ebp-0x4]
1000b389:	cmp    ecx,DWORD PTR [eax+0x18]
1000b38c:	jne    0x1000b335
1000b38e:	cmp    edi,ebx
1000b390:	je     0x1000b399
1000b392:	push   edi
1000b393:	call   DWORD PTR ds:0x100673dc
1000b399:	mov    al,0x1
1000b39b:	pop    edi
1000b39c:	pop    esi
1000b39d:	pop    ebx
1000b39e:	leave  
1000b39f:	ret    0x4
1000b3a2:	push   ebp
1000b3a3:	mov    ebp,esp
1000b3a5:	and    esp,0xfffffff8
1000b3a8:	push   0xffffffff
1000b3aa:	push   0x10064cf4
1000b3af:	mov    eax,fs:0x0
1000b3b5:	push   eax
1000b3b6:	sub    esp,0x90
1000b3bc:	push   ebx
1000b3bd:	push   esi
1000b3be:	push   edi
1000b3bf:	mov    eax,ds:0x100801ac
1000b3c4:	xor    eax,esp
1000b3c6:	push   eax
1000b3c7:	lea    eax,[esp+0xa0]
1000b3ce:	mov    fs:0x0,eax
1000b3d4:	mov    edi,ecx
1000b3d6:	mov    esi,edx
1000b3d8:	push   0x1006e5d0
1000b3dd:	push   0x3
1000b3df:	mov    ecx,0x1006e610
1000b3e4:	call   0x100042b4
1000b3e9:	pop    ecx
1000b3ea:	pop    ecx
1000b3eb:	push   eax
1000b3ec:	lea    ecx,[esp+0x4c]
1000b3f0:	call   0x100011a7
1000b3f5:	xor    ebx,ebx
1000b3f7:	mov    DWORD PTR [esp+0xa8],ebx
1000b3fe:	cmp    DWORD PTR [esi+0x18],0x10
1000b402:	jb     0x1000b409
1000b404:	mov    esi,DWORD PTR [esi+0x4]
1000b407:	jmp    0x1000b40c
1000b409:	add    esi,0x4
1000b40c:	push   esi
1000b40d:	lea    ecx,[esp+0x68]
1000b411:	call   0x100011a7
1000b416:	push   0x1006e614
1000b41b:	push   0x3
1000b41d:	mov    ecx,0x1006e644
1000b422:	mov    BYTE PTR [esp+0xb0],0x1
1000b42a:	call   0x100042b4
1000b42f:	pop    ecx
1000b430:	pop    ecx
1000b431:	push   eax
1000b432:	lea    ecx,[esp+0x30]
1000b436:	call   0x100011a7
1000b43b:	lea    eax,[esp+0x48]
1000b43f:	push   eax
1000b440:	lea    eax,[esp+0x68]
1000b444:	push   eax
1000b445:	lea    ecx,[esp+0x34]
1000b449:	mov    BYTE PTR [esp+0xb0],0x2
1000b451:	call   0x10009870
1000b456:	mov    esi,eax
1000b458:	mov    eax,DWORD PTR [edi]
1000b45a:	cmp    esi,eax
1000b45c:	pop    ecx
1000b45d:	pop    ecx
1000b45e:	je     0x1000b46a
1000b460:	cmp    eax,ebx
1000b462:	je     0x1000b46a
1000b464:	push   eax
1000b465:	call   0x1000a31f
1000b46a:	push   ebx
1000b46b:	push   0x1
1000b46d:	lea    ecx,[esp+0x34]
1000b471:	mov    DWORD PTR [edi],esi
1000b473:	call   0x100012f0
1000b478:	push   ebx
1000b479:	push   0x1
1000b47b:	lea    ecx,[esp+0x6c]
1000b47f:	call   0x100012f0
1000b484:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b48c:	push   ebx
1000b48d:	push   0x1
1000b48f:	lea    ecx,[esp+0x50]
1000b493:	call   0x100012f0
1000b498:	push   0x1006e648
1000b49d:	push   0x4
1000b49f:	pop    esi
1000b4a0:	push   esi
1000b4a1:	mov    ecx,0x1006e51c
1000b4a6:	call   0x100042b4
1000b4ab:	pop    ecx
1000b4ac:	pop    ecx
1000b4ad:	push   eax
1000b4ae:	lea    ecx,[esp+0x84]
1000b4b5:	call   0x100011a7
1000b4ba:	mov    ecx,DWORD PTR [ebp+0x8]
1000b4bd:	mov    DWORD PTR [esp+0xa8],0x3
1000b4c8:	mov    eax,DWORD PTR [edi]
1000b4ca:	push   ebx
1000b4cb:	lea    edx,[esp+0x84]
1000b4d2:	push   edx
1000b4d3:	add    ecx,0x18
1000b4d6:	lea    edx,[eax+0x18]
1000b4d9:	call   0x10008298
1000b4de:	or     DWORD PTR [esp+0xa8],0xffffffff
1000b4e6:	push   ebx
1000b4e7:	push   0x1
1000b4e9:	lea    ecx,[esp+0x88]
1000b4f0:	call   0x100012f0
1000b4f5:	push   DWORD PTR [ebp+0xc]
1000b4f8:	lea    eax,[esp+0x18]
1000b4fc:	push   eax
1000b4fd:	call   0x1000f977
1000b502:	pop    ecx
1000b503:	pop    ecx
1000b504:	mov    DWORD PTR [esp+0xa8],esi
1000b50b:	mov    DWORD PTR [esp+0x10],ebx
1000b50f:	cmp    DWORD PTR [esp+0x18],ebx
1000b513:	jne    0x1000b519
1000b515:	xor    eax,eax
1000b517:	jmp    0x1000b524
1000b519:	mov    eax,DWORD PTR [esp+0x1c]
1000b51d:	sub    eax,DWORD PTR [esp+0x18]
1000b521:	sar    eax,0x4
1000b524:	cmp    DWORD PTR [esp+0x10],eax
1000b528:	je     0x1000b58c
1000b52a:	push   DWORD PTR [esp+0x10]
1000b52e:	lea    esi,[esp+0x18]
1000b532:	call   0x1000cedb
1000b537:	call   0x100045f3
1000b53c:	cmp    eax,0x2
1000b53f:	jne    0x1000b586
1000b541:	mov    eax,DWORD PTR [edi]
1000b543:	push   ebx
1000b544:	push   0x1
1000b546:	push   DWORD PTR [esp+0x18]
1000b54a:	mov    DWORD PTR [esp+0x34],eax
1000b54e:	call   0x1000cedb
1000b553:	mov    esi,eax
1000b555:	call   0x10004609
1000b55a:	push   ebx
1000b55b:	push   DWORD PTR [esp+0x18]
1000b55f:	lea    esi,[esp+0x20]
1000b563:	mov    DWORD PTR [esp+0x30],eax
1000b567:	call   0x1000cedb
1000b56c:	mov    esi,eax
1000b56e:	call   0x10004609
1000b573:	mov    edx,DWORD PTR [esp+0x2c]
1000b577:	push   eax
1000b578:	mov    eax,DWORD PTR [esp+0x2c]
1000b57c:	add    edx,0x18
1000b57f:	mov    ecx,eax
1000b581:	call   0x10008298
1000b586:	inc    DWORD PTR [esp+0x10]
1000b58a:	jmp    0x1000b50f
1000b58c:	mov    esi,DWORD PTR [ebp+0x8]
1000b58f:	cmp    DWORD PTR [esi+0x54],ebx
1000b592:	mov    ecx,DWORD PTR [edi]
1000b594:	setne  al
1000b597:	push   eax
1000b598:	call   0x1000b9ef
1000b59d:	push   DWORD PTR [edi]
1000b59f:	mov    edi,esi
1000b5a1:	call   0x1000b5cb
1000b5a6:	lea    esi,[esp+0x14]
1000b5aa:	mov    bl,al
1000b5ac:	call   0x1000d5ed
1000b5b1:	mov    al,bl
1000b5b3:	mov    ecx,DWORD PTR [esp+0xa0]
1000b5ba:	mov    DWORD PTR fs:0x0,ecx
1000b5c1:	pop    ecx
1000b5c2:	pop    edi
1000b5c3:	pop    esi
1000b5c4:	pop    ebx
1000b5c5:	mov    esp,ebp
1000b5c7:	pop    ebp
1000b5c8:	ret    0x8
1000b5cb:	push   ecx
1000b5cc:	push   esi
1000b5cd:	call   0x10002068
1000b5d2:	push   DWORD PTR [esp+0xc]
1000b5d6:	mov    eax,edi
1000b5d8:	call   0x1000b2d0
1000b5dd:	test   al,al
1000b5df:	je     0x1000b5ed
1000b5e1:	mov    esi,DWORD PTR [edi+0x10]
1000b5e4:	call   0x1000e2e6
1000b5e9:	test   al,al
1000b5eb:	je     0x1000b627
1000b5ed:	call   0x10002068
1000b5f2:	mov    eax,DWORD PTR [edi+0x8]
1000b5f5:	test   eax,eax
1000b5f7:	je     0x1000b600
1000b5f9:	push   eax
1000b5fa:	call   DWORD PTR ds:0x100673c8
1000b600:	and    DWORD PTR [edi+0x8],0x0
1000b604:	mov    esi,edi
1000b606:	call   0x1000ae7a
1000b60b:	test   al,al
1000b60d:	jne    0x1000b613
1000b60f:	xor    al,al
1000b611:	jmp    0x1000b629
1000b613:	call   0x1000afb0
1000b618:	push   DWORD PTR [esp+0xc]
1000b61c:	mov    eax,edi
1000b61e:	call   0x1000b2d0
1000b623:	test   al,al
1000b625:	je     0x1000b60f
1000b627:	mov    al,0x1
1000b629:	pop    esi
1000b62a:	pop    ecx
1000b62b:	ret    0x4
1000b62e:	push   0x50
1000b630:	mov    eax,0x10064cae
1000b635:	call   0x10059df5
1000b63a:	mov    esi,ecx
1000b63c:	xor    edi,edi
1000b63e:	mov    DWORD PTR [ebp-0x18],edi
1000b641:	mov    DWORD PTR [ebp-0x14],edi
1000b644:	xor    ebx,ebx
1000b646:	lea    eax,[ebp-0x5c]
1000b649:	inc    ebx
1000b64a:	mov    DWORD PTR [ebp-0x4],ebx
1000b64d:	push   eax
1000b64e:	mov    DWORD PTR [esi],edi
1000b650:	call   0x10009389
1000b655:	mov    eax,DWORD PTR [ebp+0x8]
1000b658:	lea    ecx,[ebp-0x5c]
1000b65b:	mov    BYTE PTR [ebp-0x4],0x2
1000b65f:	mov    eax,DWORD PTR [eax+0x14]
1000b662:	push   ecx
1000b663:	push   eax
1000b664:	call   0x1000e981
1000b669:	test   eax,eax
1000b66b:	je     0x1000b677
1000b66d:	mov    esi,DWORD PTR [ebp+0xc]
1000b670:	mov    DWORD PTR [ebp-0x14],edi
1000b673:	mov    DWORD PTR [esi],edi
1000b675:	jmp    0x1000b6e5
1000b677:	mov    eax,DWORD PTR [ebp+0x8]
1000b67a:	push   DWORD PTR [ebp+0x10]
1000b67d:	mov    ecx,DWORD PTR [eax+0x14]
1000b680:	lea    edx,[ebp-0x5c]
1000b683:	call   0x1000ea5f
1000b688:	test   eax,eax
1000b68a:	je     0x1000b693
1000b68c:	mov    esi,DWORD PTR [ebp+0xc]
1000b68f:	mov    DWORD PTR [esi],edi
1000b691:	jmp    0x1000b6e2
1000b693:	push   DWORD PTR [ebp+0x8]
1000b696:	lea    ecx,[ebp-0x5c]
1000b699:	call   0x1000b830
1000b69e:	mov    eax,DWORD PTR [ebp-0x50]
1000b6a1:	mov    eax,DWORD PTR [eax+0x18]
1000b6a4:	push   eax
1000b6a5:	mov    DWORD PTR [esi],eax
1000b6a7:	call   0x100438d7
1000b6ac:	cmp    eax,edi
1000b6ae:	pop    ecx
1000b6af:	mov    DWORD PTR [ebp+0x8],eax
1000b6b2:	je     0x1000b6bb
1000b6b4:	push   edi
1000b6b5:	call   0x10042fe2
1000b6ba:	pop    ecx
1000b6bb:	mov    eax,DWORD PTR [ebp-0x50]
1000b6be:	cmp    DWORD PTR [eax+0x1c],0x10
1000b6c2:	jb     0x1000b6c9
1000b6c4:	mov    eax,DWORD PTR [eax+0x8]
1000b6c7:	jmp    0x1000b6cc
1000b6c9:	add    eax,0x8
1000b6cc:	push   DWORD PTR [esi]
1000b6ce:	push   eax
1000b6cf:	push   DWORD PTR [ebp+0x8]
1000b6d2:	call   0x10045340
1000b6d7:	mov    eax,DWORD PTR [ebp+0x8]
1000b6da:	mov    esi,DWORD PTR [ebp+0xc]
1000b6dd:	add    esp,0xc
1000b6e0:	mov    DWORD PTR [esi],eax
1000b6e2:	mov    DWORD PTR [ebp-0x14],edi
1000b6e5:	lea    eax,[ebp-0x5c]
1000b6e8:	push   eax
1000b6e9:	mov    DWORD PTR [ebp-0x18],ebx
1000b6ec:	mov    BYTE PTR [ebp-0x4],bl
1000b6ef:	call   0x1000a3c8
1000b6f4:	push   edi
1000b6f5:	call   0x10042fe2
1000b6fa:	pop    ecx
1000b6fb:	mov    eax,esi
1000b6fd:	call   0x10059ecd
1000b702:	ret    0xc
1000b705:	push   0xa4
1000b70a:	mov    eax,0x10064c65
1000b70f:	call   0x10059df5
1000b714:	mov    esi,DWORD PTR [ebp+0x8]
1000b717:	mov    edi,ecx
1000b719:	and    DWORD PTR [ebp-0x18],0x0
1000b71d:	and    DWORD PTR [ebp-0x14],0x0
1000b721:	xor    ebx,ebx
1000b723:	lea    eax,[ebp-0x5c]
1000b726:	inc    ebx
1000b727:	push   eax
1000b728:	mov    DWORD PTR [ebp-0x4],ebx
1000b72b:	call   0x10009389
1000b730:	lea    ecx,[ebp-0x5c]
1000b733:	mov    BYTE PTR [ebp-0x4],0x2
1000b737:	mov    eax,DWORD PTR [edi+0x14]
1000b73a:	push   ecx
1000b73b:	push   eax
1000b73c:	call   0x1000e981
1000b741:	test   eax,eax
1000b743:	je     0x1000b751
1000b745:	and    DWORD PTR [ebp-0x14],0x0
1000b749:	and    DWORD PTR [esi],0x0
1000b74c:	jmp    0x1000b80b
1000b751:	push   DWORD PTR [ebp+0xc]
1000b754:	mov    ecx,DWORD PTR [edi+0x14]
1000b757:	lea    edx,[ebp-0x5c]
1000b75a:	call   0x1000ea5f
1000b75f:	test   eax,eax
1000b761:	je     0x1000b76b
1000b763:	and    DWORD PTR [esi],0x0
1000b766:	jmp    0x1000b807
1000b76b:	push   edi
1000b76c:	lea    ecx,[ebp-0x5c]
1000b76f:	call   0x1000b830
1000b774:	mov    edi,0x1006dcf8
1000b779:	push   edi
1000b77a:	lea    ecx,[ebp-0x94]
1000b780:	call   0x100011a7
1000b785:	push   edi
1000b786:	lea    ecx,[ebp-0xb0]
1000b78c:	mov    BYTE PTR [ebp-0x4],0x3
1000b790:	call   0x100011a7
1000b795:	push   edi
1000b796:	lea    ecx,[ebp-0x78]
1000b799:	mov    BYTE PTR [ebp-0x4],0x4
1000b79d:	call   0x100011a7
1000b7a2:	push   ebx
1000b7a3:	lea    eax,[ebp-0x94]
1000b7a9:	push   eax
1000b7aa:	lea    eax,[ebp-0xb0]
1000b7b0:	push   eax
1000b7b1:	lea    ecx,[ebp-0x78]
1000b7b4:	mov    BYTE PTR [ebp-0x4],0x5
1000b7b8:	call   0x10009a7b
1000b7bd:	add    esp,0xc
1000b7c0:	mov    ebx,eax
1000b7c2:	lea    edi,[ebp-0x14]
1000b7c5:	call   0x1000cea7
1000b7ca:	xor    edi,edi
1000b7cc:	xor    ebx,ebx
1000b7ce:	push   edi
1000b7cf:	inc    ebx
1000b7d0:	push   ebx
1000b7d1:	lea    ecx,[ebp-0x78]
1000b7d4:	call   0x100012f0
1000b7d9:	push   edi
1000b7da:	push   ebx
1000b7db:	lea    ecx,[ebp-0xb0]
1000b7e1:	call   0x100012f0
1000b7e6:	push   edi
1000b7e7:	push   ebx
1000b7e8:	lea    ecx,[ebp-0x94]
1000b7ee:	mov    BYTE PTR [ebp-0x4],0x2
1000b7f2:	call   0x100012f0
1000b7f7:	mov    edi,DWORD PTR [ebp-0x14]
1000b7fa:	lea    eax,[ebp-0x5c]
1000b7fd:	push   eax
1000b7fe:	call   0x1000956f
1000b803:	mov    eax,edi
1000b805:	mov    DWORD PTR [esi],eax
1000b807:	and    DWORD PTR [ebp-0x14],0x0
1000b80b:	lea    eax,[ebp-0x5c]
1000b80e:	push   eax
1000b80f:	mov    DWORD PTR [ebp-0x18],ebx
1000b812:	mov    BYTE PTR [ebp-0x4],bl
1000b815:	call   0x1000a3c8
1000b81a:	lea    eax,[ebp-0x14]
1000b81d:	mov    BYTE PTR [ebp-0x4],0x0
1000b821:	call   0x1000a2dc
1000b826:	mov    eax,esi
1000b828:	call   0x10059ecd
1000b82d:	ret    0x8
1000b830:	push   ebp
1000b831:	mov    ebp,esp
1000b833:	and    esp,0xfffffff8
1000b836:	push   0xffffffff
1000b838:	push   0x1006267b
1000b83d:	mov    eax,fs:0x0
1000b843:	push   eax
1000b844:	sub    esp,0x78
1000b847:	push   ebx
1000b848:	push   esi
1000b849:	push   edi
1000b84a:	mov    eax,ds:0x100801ac
1000b84f:	xor    eax,esp
1000b851:	push   eax
1000b852:	lea    eax,[esp+0x88]
1000b859:	mov    fs:0x0,eax
1000b85f:	mov    ebx,ecx
1000b861:	mov    eax,DWORD PTR [ebx]
1000b863:	lea    ecx,[esp+0x14]
1000b867:	push   ecx
1000b868:	call   0x10007ca8
1000b86d:	mov    esi,eax
1000b86f:	push   0x1006e674
1000b874:	xor    edi,edi
1000b876:	push   0x3
1000b878:	mov    ecx,0x1006e610
1000b87d:	mov    DWORD PTR [esp+0x98],edi
1000b884:	call   0x100042b4
1000b889:	push   eax
1000b88a:	call   0x10006825
1000b88f:	or     DWORD PTR [esp+0x9c],0xffffffff
1000b897:	add    esp,0xc
1000b89a:	xor    esi,esi
1000b89c:	push   edi
1000b89d:	inc    esi
1000b89e:	push   esi
1000b89f:	lea    ecx,[esp+0x1c]
1000b8a3:	mov    BYTE PTR [esp+0x1b],al
1000b8a7:	call   0x100012f0
1000b8ac:	cmp    BYTE PTR [esp+0x13],0x0
1000b8b1:	mov    ecx,0x1006e708
1000b8b6:	je     0x1000b947
1000b8bc:	push   0x1006e6d8
1000b8c1:	push   0xa
1000b8c3:	call   0x100042b4
1000b8c8:	pop    ecx
1000b8c9:	pop    ecx
1000b8ca:	push   eax
1000b8cb:	lea    ecx,[esp+0x18]
1000b8cf:	call   0x100011a7
1000b8d4:	push   edi
1000b8d5:	lea    eax,[esp+0x18]
1000b8d9:	push   eax
1000b8da:	lea    eax,[esp+0x54]
1000b8de:	push   eax
1000b8df:	lea    eax,[ebx+0x20]
1000b8e2:	mov    DWORD PTR [esp+0x9c],esi
1000b8e9:	call   0x10008803
1000b8ee:	mov    BYTE PTR [esp+0x90],0x2
1000b8f6:	cmp    DWORD PTR [eax+0x18],0x10
1000b8fa:	jb     0x1000b901
1000b8fc:	mov    ebx,DWORD PTR [eax+0x4]
1000b8ff:	jmp    0x1000b904
1000b901:	lea    ebx,[eax+0x4]
1000b904:	push   0x1006e6a4
1000b909:	push   0xa
1000b90b:	mov    ecx,0x1006e6cc
1000b910:	call   0x100042b4
1000b915:	push   eax
1000b916:	push   ebx
1000b917:	call   0x1004582f
1000b91c:	add    esp,0x10
1000b91f:	mov    ebx,eax
1000b921:	neg    ebx
1000b923:	push   edi
1000b924:	sbb    bl,bl
1000b926:	push   esi
1000b927:	lea    ecx,[esp+0x54]
1000b92b:	inc    bl
1000b92d:	call   0x100012f0
1000b932:	push   edi
1000b933:	push   esi
1000b934:	lea    ecx,[esp+0x1c]
1000b938:	call   0x100012f0
1000b93d:	test   bl,bl
1000b93f:	setne  al
1000b942:	jmp    0x1000b9d1
1000b947:	push   0x1006e750
1000b94c:	push   0xa
1000b94e:	call   0x100042b4
1000b953:	pop    ecx
1000b954:	pop    ecx
1000b955:	push   eax
1000b956:	lea    ecx,[esp+0x34]
1000b95a:	call   0x100011a7
1000b95f:	push   edi
1000b960:	lea    eax,[esp+0x34]
1000b964:	push   eax
1000b965:	lea    eax,[esp+0x70]
1000b969:	push   eax
1000b96a:	lea    eax,[ebx+0x20]
1000b96d:	mov    DWORD PTR [esp+0x9c],0x3
1000b978:	call   0x10008803
1000b97d:	mov    BYTE PTR [esp+0x90],0x4
1000b985:	cmp    DWORD PTR [eax+0x18],0x10
1000b989:	jb     0x1000b990
1000b98b:	mov    ebx,DWORD PTR [eax+0x4]
1000b98e:	jmp    0x1000b993
1000b990:	lea    ebx,[eax+0x4]
1000b993:	push   0x1006e714
1000b998:	push   0x5
1000b99a:	mov    ecx,0x1006e748
1000b99f:	call   0x100042b4
1000b9a4:	push   eax
1000b9a5:	push   ebx
1000b9a6:	call   0x1004582f
1000b9ab:	add    esp,0x10
1000b9ae:	mov    ebx,eax
1000b9b0:	neg    ebx
1000b9b2:	push   edi
1000b9b3:	sbb    bl,bl
1000b9b5:	push   esi
1000b9b6:	lea    ecx,[esp+0x70]
1000b9ba:	inc    bl
1000b9bc:	call   0x100012f0
1000b9c1:	push   edi
1000b9c2:	push   esi
1000b9c3:	lea    ecx,[esp+0x38]
1000b9c7:	call   0x100012f0
1000b9cc:	test   bl,bl
1000b9ce:	sete   al
1000b9d1:	mov    ecx,DWORD PTR [ebp+0x8]
1000b9d4:	mov    BYTE PTR [ecx+0x58],al
1000b9d7:	mov    ecx,DWORD PTR [esp+0x88]
1000b9de:	mov    DWORD PTR fs:0x0,ecx
1000b9e5:	pop    ecx
1000b9e6:	pop    edi
1000b9e7:	pop    esi
1000b9e8:	pop    ebx
1000b9e9:	mov    esp,ebp
1000b9eb:	pop    ebp
1000b9ec:	ret    0x4
1000b9ef:	push   0x200
1000b9f4:	mov    eax,0x10063488
1000b9f9:	call   0x10059e5e
1000b9fe:	mov    esi,ecx
1000ba00:	push   0x1006e784
1000ba05:	push   0x7
1000ba07:	mov    ecx,0x1006e7c4
1000ba0c:	mov    DWORD PTR [ebp-0x160],esi
1000ba12:	call   0x100042b4
1000ba17:	pop    ecx
1000ba18:	pop    ecx
1000ba19:	push   eax
1000ba1a:	lea    ecx,[ebp-0x180]
1000ba20:	call   0x100011a7
1000ba25:	lea    ecx,[ebp-0x180]
1000ba2b:	lea    eax,[esi+0x18]
1000ba2e:	push   ecx
1000ba2f:	xor    ebx,ebx
1000ba31:	push   eax
1000ba32:	mov    DWORD PTR [ebp-0x4],ebx
1000ba35:	mov    DWORD PTR [ebp-0x15c],eax
1000ba3b:	call   0x100085a1
1000ba40:	or     DWORD PTR [ebp-0x4],0xffffffff
1000ba44:	xor    edi,edi
1000ba46:	push   ebx
1000ba47:	inc    edi
1000ba48:	push   edi
1000ba49:	lea    ecx,[ebp-0x180]
1000ba4f:	call   0x100012f0
1000ba54:	lea    ecx,[ebp-0xc0]
1000ba5a:	call   0x10012eb8
1000ba5f:	push   0x1006dd18
1000ba64:	lea    esi,[ebp-0xc0]
1000ba6a:	mov    DWORD PTR [ebp-0x4],edi
1000ba6d:	call   0x10006825
1000ba72:	test   al,al
1000ba74:	pop    ecx
1000ba75:	jne    0x1000bb0d
1000ba7b:	push   0x1006e7cc
1000ba80:	mov    esi,0x1006e7f0
1000ba85:	push   0xa
1000ba87:	mov    ecx,esi
1000ba89:	call   0x100042b4
1000ba8e:	pop    ecx
1000ba8f:	pop    ecx
1000ba90:	push   eax
1000ba91:	lea    ecx,[ebp-0x180]
1000ba97:	call   0x100011a7
1000ba9c:	lea    eax,[ebp-0x180]
1000baa2:	push   eax
1000baa3:	push   DWORD PTR [ebp-0x15c]
1000baa9:	mov    BYTE PTR [ebp-0x4],0x2
1000baad:	call   0x100085a1
1000bab2:	push   ebx
1000bab3:	push   edi
1000bab4:	lea    ecx,[ebp-0x180]
1000baba:	mov    BYTE PTR [ebp-0x4],0x1
1000babe:	call   0x100012f0
1000bac3:	push   0x1006e800
1000bac8:	push   0xa
1000baca:	mov    ecx,esi
1000bacc:	call   0x100042b4
1000bad1:	pop    ecx
1000bad2:	pop    ecx
1000bad3:	push   eax
1000bad4:	lea    ecx,[ebp-0x180]
1000bada:	call   0x100011a7
1000badf:	mov    edx,DWORD PTR [ebp-0x15c]
1000bae5:	push   ebx
1000bae6:	lea    eax,[ebp-0x180]
1000baec:	push   eax
1000baed:	lea    ecx,[ebp-0xc0]
1000baf3:	mov    BYTE PTR [ebp-0x4],0x3
1000baf7:	call   0x10008298
1000bafc:	push   ebx
1000bafd:	push   edi
1000bafe:	lea    ecx,[ebp-0x180]
1000bb04:	mov    BYTE PTR [ebp-0x4],0x1
1000bb08:	call   0x100012f0
1000bb0d:	push   0x1006dd18
1000bb12:	lea    esi,[ebp-0x6c]
1000bb15:	call   0x10006825
1000bb1a:	test   al,al
1000bb1c:	pop    ecx
1000bb1d:	jne    0x1000bbb2
1000bb23:	push   0x1006e840
1000bb28:	mov    esi,0x1006e868
1000bb2d:	push   0xf
1000bb2f:	mov    ecx,esi
1000bb31:	call   0x100042b4
1000bb36:	pop    ecx
1000bb37:	pop    ecx
1000bb38:	push   eax
1000bb39:	lea    ecx,[ebp-0x180]
1000bb3f:	call   0x100011a7
1000bb44:	lea    eax,[ebp-0x180]
1000bb4a:	push   eax
1000bb4b:	push   DWORD PTR [ebp-0x15c]
1000bb51:	mov    BYTE PTR [ebp-0x4],0x4
1000bb55:	call   0x100085a1
1000bb5a:	push   ebx
1000bb5b:	push   edi
1000bb5c:	lea    ecx,[ebp-0x180]
1000bb62:	mov    BYTE PTR [ebp-0x4],0x1
1000bb66:	call   0x100012f0
1000bb6b:	push   0x1006e878
1000bb70:	push   0xf
1000bb72:	mov    ecx,esi
1000bb74:	call   0x100042b4
1000bb79:	pop    ecx
1000bb7a:	pop    ecx
1000bb7b:	push   eax
1000bb7c:	lea    ecx,[ebp-0x180]
1000bb82:	call   0x100011a7
1000bb87:	mov    edx,DWORD PTR [ebp-0x15c]
1000bb8d:	push   ebx
1000bb8e:	lea    eax,[ebp-0x180]
1000bb94:	push   eax
1000bb95:	lea    ecx,[ebp-0x6c]
1000bb98:	mov    BYTE PTR [ebp-0x4],0x5
1000bb9c:	call   0x10008298
1000bba1:	push   ebx
1000bba2:	push   edi
1000bba3:	lea    ecx,[ebp-0x180]
1000bba9:	mov    BYTE PTR [ebp-0x4],0x1
1000bbad:	call   0x100012f0
1000bbb2:	push   0x1006dd18
1000bbb7:	lea    esi,[ebp-0x88]
1000bbbd:	call   0x10006825
1000bbc2:	test   al,al
1000bbc4:	pop    ecx
1000bbc5:	jne    0x1000bd4b
1000bbcb:	lea    edi,[ebp-0x158]
1000bbd1:	call   0x1000bfdb
1000bbd6:	mov    eax,esi
1000bbd8:	push   eax
1000bbd9:	lea    ecx,[ebp-0x2c]
1000bbdc:	mov    BYTE PTR [ebp-0x4],0x6
1000bbe0:	call   0x100011c9
1000bbe5:	cmp    BYTE PTR [ebp+0x8],bl
1000bbe8:	mov    BYTE PTR [ebp-0x4],0x7
1000bbec:	je     0x1000bd1a
1000bbf2:	mov    eax,edi
1000bbf4:	push   eax
1000bbf5:	lea    ecx,[ebp-0x2c]
1000bbf8:	call   0x10032750
1000bbfd:	test   al,al
1000bbff:	pop    ecx
1000bc00:	je     0x1000bd1a
1000bc06:	push   0x1006e8b8
1000bc0b:	push   0x4
1000bc0d:	mov    ecx,0x1006e51c
1000bc12:	call   0x100042b4
1000bc17:	pop    ecx
1000bc18:	pop    ecx
1000bc19:	push   eax
1000bc1a:	lea    ecx,[ebp-0x180]
1000bc20:	call   0x100011a7
1000bc25:	push   ebx
1000bc26:	lea    eax,[ebp-0x180]
1000bc2c:	push   eax
1000bc2d:	lea    eax,[ebp-0x1b8]
1000bc33:	push   eax
1000bc34:	mov    eax,DWORD PTR [ebp-0x15c]
1000bc3a:	mov    BYTE PTR [ebp-0x4],0x8
1000bc3e:	call   0x10008803
1000bc43:	mov    esi,eax
1000bc45:	push   0x1006e8e8
1000bc4a:	push   0x7
1000bc4c:	mov    ecx,0x1006e4dc
1000bc51:	mov    BYTE PTR [ebp-0x4],0x9
1000bc55:	call   0x100042b4
1000bc5a:	pop    ecx
1000bc5b:	pop    ecx
1000bc5c:	push   eax
1000bc5d:	lea    ecx,[ebp-0x1f0]
1000bc63:	call   0x100011a7
1000bc68:	push   esi
1000bc69:	push   eax
1000bc6a:	lea    eax,[ebp-0x20c]
1000bc70:	push   eax
1000bc71:	mov    BYTE PTR [ebp-0x4],0xa
1000bc75:	call   0x1000676d
1000bc7a:	add    esp,0xc
1000bc7d:	lea    ecx,[ebp-0xfc]
1000bc83:	push   ecx
1000bc84:	push   eax
1000bc85:	lea    eax,[ebp-0x1d4]
1000bc8b:	push   eax
1000bc8c:	mov    BYTE PTR [ebp-0x4],0xb
1000bc90:	call   0x1000676d
1000bc95:	add    esp,0xc
1000bc98:	lea    ecx,[ebp-0xe0]
1000bc9e:	push   ecx
1000bc9f:	push   eax
1000bca0:	lea    eax,[ebp-0x19c]
1000bca6:	push   eax
1000bca7:	mov    BYTE PTR [ebp-0x4],0xc
1000bcab:	call   0x1000676d
1000bcb0:	add    esp,0xc
1000bcb3:	push   0xffffffff
1000bcb5:	push   ebx
1000bcb6:	push   eax
1000bcb7:	lea    ecx,[ebp-0x2c]
1000bcba:	mov    BYTE PTR [ebp-0x4],0xd
1000bcbe:	call   0x10001241
1000bcc3:	xor    edi,edi
1000bcc5:	push   ebx
1000bcc6:	inc    edi
1000bcc7:	push   edi
1000bcc8:	lea    ecx,[ebp-0x19c]
1000bcce:	call   0x100012f0
1000bcd3:	push   ebx
1000bcd4:	push   edi
1000bcd5:	lea    ecx,[ebp-0x1d4]
1000bcdb:	call   0x100012f0
1000bce0:	push   ebx
1000bce1:	push   edi
1000bce2:	lea    ecx,[ebp-0x20c]
1000bce8:	call   0x100012f0
1000bced:	push   ebx
1000bcee:	push   edi
1000bcef:	lea    ecx,[ebp-0x1f0]
1000bcf5:	call   0x100012f0
1000bcfa:	push   ebx
1000bcfb:	push   edi
1000bcfc:	lea    ecx,[ebp-0x1b8]
1000bd02:	call   0x100012f0
1000bd07:	push   ebx
1000bd08:	push   edi
1000bd09:	lea    ecx,[ebp-0x180]
1000bd0f:	mov    BYTE PTR [ebp-0x4],0x7
1000bd13:	call   0x100012f0
1000bd18:	jmp    0x1000bd1d
1000bd1a:	xor    edi,edi
1000bd1c:	inc    edi
1000bd1d:	mov    eax,DWORD PTR [ebp-0x160]
1000bd23:	mov    esi,DWORD PTR [eax+0x4]
1000bd26:	lea    eax,[ebp-0x2c]
1000bd29:	push   eax
1000bd2a:	call   0x10007cc3
1000bd2f:	push   ebx
1000bd30:	push   edi
1000bd31:	lea    ecx,[ebp-0x2c]
1000bd34:	call   0x100012f0
1000bd39:	lea    esi,[ebp-0x158]
1000bd3f:	mov    BYTE PTR [ebp-0x4],0x1
1000bd43:	call   0x1000c008
1000bd48:	xor    edi,edi
1000bd4a:	inc    edi
1000bd4b:	cmp    BYTE PTR [ebp+0x8],bl
1000bd4e:	jne    0x1000bdff
1000bd54:	push   0x1006dd18
1000bd59:	lea    esi,[ebp-0xa4]
1000bd5f:	call   0x10006825
1000bd64:	test   al,al
1000bd66:	pop    ecx
1000bd67:	jne    0x1000bdff
1000bd6d:	push   0x1006e90c
1000bd72:	mov    esi,0x1006e51c
1000bd77:	push   0x4
1000bd79:	mov    ecx,esi
1000bd7b:	call   0x100042b4
1000bd80:	pop    ecx
1000bd81:	pop    ecx
1000bd82:	push   eax
1000bd83:	lea    ecx,[ebp-0x180]
1000bd89:	call   0x100011a7
1000bd8e:	lea    eax,[ebp-0x180]
1000bd94:	push   eax
1000bd95:	push   DWORD PTR [ebp-0x15c]
1000bd9b:	mov    BYTE PTR [ebp-0x4],0xe
1000bd9f:	call   0x100085a1
1000bda4:	push   ebx
1000bda5:	push   edi
1000bda6:	lea    ecx,[ebp-0x180]
1000bdac:	mov    BYTE PTR [ebp-0x4],0x1
1000bdb0:	call   0x100012f0
1000bdb5:	push   0x1006e940
1000bdba:	push   0x4
1000bdbc:	mov    ecx,esi
1000bdbe:	call   0x100042b4
1000bdc3:	pop    ecx
1000bdc4:	pop    ecx
1000bdc5:	push   eax
1000bdc6:	lea    ecx,[ebp-0x180]
1000bdcc:	call   0x100011a7
1000bdd1:	mov    edx,DWORD PTR [ebp-0x15c]
1000bdd7:	push   ebx
1000bdd8:	lea    eax,[ebp-0x180]
1000bdde:	push   eax
1000bddf:	lea    ecx,[ebp-0xa4]
1000bde5:	mov    BYTE PTR [ebp-0x4],0xf
1000bde9:	call   0x10008298
1000bdee:	push   ebx
1000bdef:	push   edi
1000bdf0:	lea    ecx,[ebp-0x180]
1000bdf6:	mov    BYTE PTR [ebp-0x4],0x1
1000bdfa:	call   0x100012f0
1000bdff:	push   0x1006dd18
1000be04:	lea    esi,[ebp-0x50]
1000be07:	call   0x10006825
1000be0c:	test   al,al
1000be0e:	pop    ecx
1000be0f:	jne    0x1000be23
1000be11:	mov    eax,DWORD PTR [ebp-0x160]
1000be17:	mov    esi,DWORD PTR [eax+0x8]
1000be1a:	lea    eax,[ebp-0x50]
1000be1d:	push   eax
1000be1e:	call   0x10007cc3
1000be23:	push   0x1006e980
1000be28:	mov    esi,0x1006e9bc
1000be2d:	push   0x6
1000be2f:	mov    ecx,esi
1000be31:	call   0x100042b4
1000be36:	pop    ecx
1000be37:	pop    ecx
1000be38:	push   eax
1000be39:	lea    ecx,[ebp-0x180]
1000be3f:	call   0x100011a7
1000be44:	push   ebx
1000be45:	lea    eax,[ebp-0x180]
1000be4b:	push   eax
1000be4c:	lea    eax,[ebp-0x2c]
1000be4f:	push   eax
1000be50:	mov    eax,DWORD PTR [ebp-0x15c]
1000be56:	mov    BYTE PTR [ebp-0x4],0x10
1000be5a:	call   0x10008803
1000be5f:	push   ebx
1000be60:	push   edi
1000be61:	lea    ecx,[ebp-0x180]
1000be67:	mov    BYTE PTR [ebp-0x4],0x12
1000be6b:	call   0x100012f0
1000be70:	push   0x1006e9c4
1000be75:	push   0x6
1000be77:	mov    ecx,esi
1000be79:	call   0x100042b4
1000be7e:	pop    ecx
1000be7f:	pop    ecx
1000be80:	push   eax
1000be81:	lea    ecx,[ebp-0x19c]
1000be87:	call   0x100011a7
1000be8c:	lea    eax,[ebp-0x19c]
1000be92:	push   eax
1000be93:	push   DWORD PTR [ebp-0x15c]
1000be99:	mov    BYTE PTR [ebp-0x4],0x13
1000be9d:	call   0x100085a1
1000bea2:	push   ebx
1000bea3:	push   edi
1000bea4:	lea    ecx,[ebp-0x19c]
1000beaa:	mov    BYTE PTR [ebp-0x4],0x12
1000beae:	call   0x100012f0
1000beb3:	cmp    DWORD PTR [ebp-0x18],ebx
1000beb6:	mov    DWORD PTR [ebp-0x164],ebx
1000bebc:	jbe    0x1000bf83
1000bec2:	push   DWORD PTR [ebp-0x164]
1000bec8:	lea    eax,[ebp-0x2c]
1000becb:	push   0x1006e9fc
1000bed0:	push   eax
1000bed1:	call   0x1000ce2f
1000bed6:	cmp    eax,0xffffffff
1000bed9:	mov    DWORD PTR [ebp-0x160],eax
1000bedf:	jne    0x1000beea
1000bee1:	mov    eax,DWORD PTR [ebp-0x18]
1000bee4:	mov    DWORD PTR [ebp-0x160],eax
1000beea:	cmp    eax,DWORD PTR [ebp-0x164]
1000bef0:	jbe    0x1000bf71
1000bef2:	push   0x1006ea00
1000bef7:	push   0x6
1000bef9:	mov    ecx,esi
1000befb:	call   0x100042b4
1000bf00:	pop    ecx
1000bf01:	pop    ecx
1000bf02:	push   eax
1000bf03:	lea    ecx,[ebp-0x19c]
1000bf09:	call   0x100011a7
1000bf0e:	mov    eax,DWORD PTR [ebp-0x160]
1000bf14:	sub    eax,DWORD PTR [ebp-0x164]
1000bf1a:	mov    BYTE PTR [ebp-0x4],0x14
1000bf1e:	push   eax
1000bf1f:	push   DWORD PTR [ebp-0x164]
1000bf25:	lea    eax,[ebp-0x2c]
1000bf28:	push   eax
1000bf29:	lea    eax,[ebp-0x1b8]
1000bf2f:	call   0x1000ce4e
1000bf34:	mov    edx,DWORD PTR [ebp-0x15c]
1000bf3a:	push   edi
1000bf3b:	lea    ecx,[ebp-0x19c]
1000bf41:	push   ecx
1000bf42:	mov    ecx,eax
1000bf44:	mov    BYTE PTR [ebp-0x4],0x15
1000bf48:	call   0x10008298
1000bf4d:	push   ebx
1000bf4e:	push   edi
1000bf4f:	lea    ecx,[ebp-0x1b8]
1000bf55:	call   0x100012f0
1000bf5a:	push   ebx
1000bf5b:	push   edi
1000bf5c:	lea    ecx,[ebp-0x19c]
1000bf62:	mov    BYTE PTR [ebp-0x4],0x12
1000bf66:	call   0x100012f0
1000bf6b:	mov    eax,DWORD PTR [ebp-0x160]
1000bf71:	cmp    eax,DWORD PTR [ebp-0x18]
1000bf74:	lea    ecx,[eax+0x1]
1000bf77:	mov    DWORD PTR [ebp-0x164],ecx
1000bf7d:	jb     0x1000bec2
1000bf83:	push   ebx
1000bf84:	push   edi
1000bf85:	lea    ecx,[ebp-0x2c]
1000bf88:	call   0x100012f0
1000bf8d:	lea    esi,[ebp-0xc0]
1000bf93:	call   0x1000bfa0
1000bf98:	call   0x10059ee1
1000bf9d:	ret    0x4
1000bfa0:	push   ebx
1000bfa1:	xor    ebx,ebx
1000bfa3:	push   ebx
1000bfa4:	push   0x1
1000bfa6:	lea    ecx,[esi+0x70]
1000bfa9:	call   0x100012f0
1000bfae:	push   ebx
1000bfaf:	push   0x1
1000bfb1:	lea    ecx,[esi+0x54]
1000bfb4:	call   0x100012f0
1000bfb9:	push   ebx
1000bfba:	push   0x1
1000bfbc:	lea    ecx,[esi+0x38]
1000bfbf:	call   0x100012f0
1000bfc4:	push   ebx
1000bfc5:	push   0x1
1000bfc7:	lea    ecx,[esi+0x1c]
1000bfca:	call   0x100012f0
1000bfcf:	push   ebx
1000bfd0:	push   0x1
1000bfd2:	mov    ecx,esi
1000bfd4:	call   0x100012f0
1000bfd9:	pop    ebx
1000bfda:	ret    
1000bfdb:	push   esi
1000bfdc:	lea    esi,[edi+0x4]
1000bfdf:	call   0x100040ef
1000bfe4:	lea    esi,[edi+0x24]
1000bfe7:	call   0x100040ef
1000bfec:	lea    esi,[edi+0x40]
1000bfef:	call   0x100040ef
1000bff4:	lea    esi,[edi+0x5c]
1000bff7:	call   0x100040ef
1000bffc:	lea    esi,[edi+0x78]
1000bfff:	call   0x100040ef
1000c004:	mov    eax,edi
1000c006:	pop    esi
1000c007:	ret    
1000c008:	push   ebx
1000c009:	xor    ebx,ebx
1000c00b:	push   ebx
1000c00c:	push   0x1
1000c00e:	lea    ecx,[esi+0x78]
1000c011:	call   0x100012f0
1000c016:	push   ebx
1000c017:	push   0x1
1000c019:	lea    ecx,[esi+0x5c]
1000c01c:	call   0x100012f0
1000c021:	push   ebx
1000c022:	push   0x1
1000c024:	lea    ecx,[esi+0x40]
1000c027:	call   0x100012f0
1000c02c:	push   ebx
1000c02d:	push   0x1
1000c02f:	lea    ecx,[esi+0x24]
1000c032:	call   0x100012f0
1000c037:	push   ebx
1000c038:	push   0x1
1000c03a:	lea    ecx,[esi+0x4]
1000c03d:	call   0x100012f0
1000c042:	pop    ebx
1000c043:	ret    
1000c044:	push   0x4
1000c046:	mov    eax,0x100616f5
1000c04b:	call   0x10059df5
1000c050:	mov    edi,0x10082e14
1000c055:	xor    ebx,ebx
1000c057:	mov    DWORD PTR [ebp-0x10],edi
1000c05a:	mov    DWORD PTR ds:0x10082e14,ebx
1000c060:	mov    DWORD PTR [ebp-0x4],ebx
1000c063:	mov    DWORD PTR ds:0x10082e18,ebx
1000c069:	mov    BYTE PTR [ebp-0x4],0x1
1000c06d:	call   0x1000dc5d
1000c072:	mov    ds:0x10082e20,eax
1000c077:	mov    BYTE PTR [eax+0x39],0x1
1000c07b:	mov    eax,ds:0x10082e20
1000c080:	mov    DWORD PTR [eax+0x4],eax
1000c083:	mov    eax,ds:0x10082e20
1000c088:	mov    DWORD PTR [eax],eax
1000c08a:	mov    eax,ds:0x10082e20
1000c08f:	push   ebx
1000c090:	push   ebx
1000c091:	mov    DWORD PTR [eax+0x8],eax
1000c094:	push   ebx
1000c095:	mov    DWORD PTR ds:0x10082e24,ebx
1000c09b:	call   DWORD PTR ds:0x10067080
1000c0a1:	push   eax
1000c0a2:	mov    esi,edi
1000c0a4:	call   0x100049bb
1000c0a9:	push   ebx
1000c0aa:	push   ebx
1000c0ab:	push   edi
1000c0ac:	push   0x1000c714
1000c0b1:	push   ebx
1000c0b2:	push   ebx
1000c0b3:	call   DWORD PTR ds:0x10067088
1000c0b9:	push   eax
1000c0ba:	mov    esi,0x10082e18
1000c0bf:	call   0x100049bb
1000c0c4:	mov    eax,edi
1000c0c6:	call   0x10059ecd
1000c0cb:	ret    
1000c0cc:	push   0x4
1000c0ce:	mov    eax,0x10062638
1000c0d3:	call   0x10059df5
1000c0d8:	xor    edi,edi
1000c0da:	mov    DWORD PTR [ebp-0x10],edi
1000c0dd:	lea    eax,[ebp-0x10]
1000c0e0:	mov    DWORD PTR [ebp-0x4],edi
1000c0e3:	mov    esi,DWORD PTR ds:0x10082e14
1000c0e9:	push   eax
1000c0ea:	call   0x1000ac56
1000c0ef:	test   eax,eax
1000c0f1:	je     0x1000c105
1000c0f3:	cmp    DWORD PTR [ebp-0x10],edi
1000c0f6:	je     0x1000c101
1000c0f8:	push   DWORD PTR [ebp-0x10]
1000c0fb:	call   DWORD PTR ds:0x10067090
1000c101:	xor    eax,eax
1000c103:	jmp    0x1000c132
1000c105:	push   edi
1000c106:	push   DWORD PTR [ebp+0xc]
1000c109:	push   DWORD PTR [ebp+0x8]
1000c10c:	call   0x1000ca2e
1000c111:	mov    esi,eax
1000c113:	cmp    esi,edi
1000c115:	je     0x1000c0f3
1000c117:	mov    BYTE PTR [esi],0x1
1000c11a:	call   0x10002068
1000c11f:	cmp    DWORD PTR [ebp-0x10],edi
1000c122:	mov    esi,DWORD PTR [esi+0x10]
1000c125:	je     0x1000c130
1000c127:	push   DWORD PTR [ebp-0x10]
1000c12a:	call   DWORD PTR ds:0x10067090
1000c130:	mov    eax,esi
1000c132:	call   0x10059ecd
1000c137:	ret    0x8
1000c13a:	push   0x40
1000c13c:	mov    eax,0x10062615
1000c141:	call   0x10059df5
1000c146:	mov    edi,ecx
1000c148:	lea    eax,[ebp-0x30]
1000c14b:	push   eax
1000c14c:	xor    ebx,ebx
1000c14e:	mov    eax,edi
1000c150:	mov    DWORD PTR [ebp-0x14],ebx
1000c153:	call   0x1000b2b5
1000c158:	mov    DWORD PTR [ebp-0x4],ebx
1000c15b:	push   0x1006dd18
1000c160:	mov    esi,eax
1000c162:	mov    DWORD PTR [ebp-0x14],0x1
1000c169:	call   0x10006825
1000c16e:	test   al,al
1000c170:	pop    ecx
1000c171:	jne    0x1000c17f
1000c173:	movzx  eax,WORD PTR [edi+0x34]
1000c177:	cmp    ax,bx
1000c17a:	mov    BYTE PTR [ebp-0xd],bl
1000c17d:	jne    0x1000c183
1000c17f:	mov    BYTE PTR [ebp-0xd],0x1
1000c183:	or     DWORD PTR [ebp-0x4],0xffffffff
1000c187:	xor    esi,esi
1000c189:	push   ebx
1000c18a:	inc    esi
1000c18b:	push   esi
1000c18c:	lea    ecx,[ebp-0x30]
1000c18f:	call   0x100012f0
1000c194:	cmp    BYTE PTR [ebp-0xd],bl
1000c197:	je     0x1000c1a0
1000c199:	xor    al,al
1000c19b:	jmp    0x1000c225
1000c1a0:	mov    DWORD PTR [ebp-0x14],ebx
1000c1a3:	lea    eax,[ebp-0x14]
1000c1a6:	mov    DWORD PTR [ebp-0x4],esi
1000c1a9:	mov    esi,DWORD PTR ds:0x10082e14
1000c1af:	push   eax
1000c1b0:	call   0x1000ac56
1000c1b5:	test   eax,eax
1000c1b7:	je     0x1000c1c9
1000c1b9:	cmp    DWORD PTR [ebp-0x14],ebx
1000c1bc:	je     0x1000c199
1000c1be:	push   DWORD PTR [ebp-0x14]
1000c1c1:	call   DWORD PTR ds:0x10067090
1000c1c7:	jmp    0x1000c199
1000c1c9:	lea    eax,[ebp-0x4c]
1000c1cc:	push   eax
1000c1cd:	mov    eax,edi
1000c1cf:	call   0x1000b2b5
1000c1d4:	mov    BYTE PTR [ebp-0x4],0x2
1000c1d8:	movzx  ecx,WORD PTR [edi+0x34]
1000c1dc:	push   0x1
1000c1de:	push   ecx
1000c1df:	push   eax
1000c1e0:	call   0x1000ca2e
1000c1e5:	push   ebx
1000c1e6:	push   0x1
1000c1e8:	lea    ecx,[ebp-0x4c]
1000c1eb:	mov    esi,eax
1000c1ed:	call   0x100012f0
1000c1f2:	cmp    esi,ebx
1000c1f4:	je     0x1000c1b9
1000c1f6:	mov    BYTE PTR [esi],bl
1000c1f8:	call   0x1002f6a0
1000c1fd:	mov    ecx,eax
1000c1ff:	mov    eax,DWORD PTR [ebp+0x8]
1000c202:	mov    edi,edx
1000c204:	mov    edx,0x2710
1000c209:	mul    edx
1000c20b:	add    eax,ecx
1000c20d:	adc    edx,edi
1000c20f:	cmp    DWORD PTR [ebp-0x14],ebx
1000c212:	mov    DWORD PTR [esi+0x8],eax
1000c215:	mov    DWORD PTR [esi+0xc],edx
1000c218:	je     0x1000c223
1000c21a:	push   DWORD PTR [ebp-0x14]
1000c21d:	call   DWORD PTR ds:0x10067090
1000c223:	mov    al,0x1
1000c225:	call   0x10059ecd
1000c22a:	ret    0x4
1000c22d:	push   ebp
1000c22e:	mov    ebp,esp
1000c230:	and    esp,0xfffffff8
1000c233:	push   0xffffffff
1000c235:	push   0x100616b4
1000c23a:	mov    eax,fs:0x0
1000c240:	push   eax
1000c241:	sub    esp,0xc0
1000c247:	mov    eax,ds:0x100801ac
1000c24c:	xor    eax,esp
1000c24e:	mov    DWORD PTR [esp+0xb8],eax
1000c255:	push   ebx
1000c256:	push   esi
1000c257:	push   edi
1000c258:	mov    eax,ds:0x100801ac
1000c25d:	xor    eax,esp
1000c25f:	push   eax
1000c260:	lea    eax,[esp+0xd0]
1000c267:	mov    fs:0x0,eax
1000c26d:	and    DWORD PTR [esp+0x14],0x0
1000c272:	mov    edi,ecx
1000c274:	lea    eax,[esp+0x1c]
1000c278:	push   eax
1000c279:	mov    eax,edi
1000c27b:	mov    DWORD PTR [esp+0x1c],edi
1000c27f:	call   0x1000b2b5
1000c284:	and    DWORD PTR [esp+0xd8],0x0
1000c28c:	xor    ebx,ebx
1000c28e:	inc    ebx
1000c28f:	push   0x1006dd18
1000c294:	mov    esi,eax
1000c296:	mov    DWORD PTR [esp+0x18],ebx
1000c29a:	call   0x10006825
1000c29f:	test   al,al
1000c2a1:	pop    ecx
1000c2a2:	jne    0x1000c2b2
1000c2a4:	movzx  eax,WORD PTR [edi+0x34]
1000c2a8:	test   ax,ax
1000c2ab:	mov    BYTE PTR [esp+0x13],0x0
1000c2b0:	jne    0x1000c2b7
1000c2b2:	mov    BYTE PTR [esp+0x13],0x1
1000c2b7:	or     DWORD PTR [esp+0xd8],0xffffffff
1000c2bf:	push   0x0
1000c2c1:	push   ebx
1000c2c2:	lea    ecx,[esp+0x24]
1000c2c6:	call   0x100012f0
1000c2cb:	cmp    BYTE PTR [esp+0x13],0x0
1000c2d0:	je     0x1000c2d9
1000c2d2:	xor    al,al
1000c2d4:	jmp    0x1000c4c0
1000c2d9:	and    DWORD PTR [esp+0x14],0x0
1000c2de:	lea    eax,[esp+0x14]
1000c2e2:	mov    DWORD PTR [esp+0xd8],ebx
1000c2e9:	mov    esi,DWORD PTR ds:0x10082e14
1000c2ef:	push   eax
1000c2f0:	call   0x1000ac56
1000c2f5:	test   eax,eax
1000c2f7:	je     0x1000c30c
1000c2f9:	cmp    DWORD PTR [esp+0x14],0x0
1000c2fe:	je     0x1000c2d2
1000c300:	push   DWORD PTR [esp+0x14]
1000c304:	call   DWORD PTR ds:0x10067090
1000c30a:	jmp    0x1000c2d2
1000c30c:	lea    eax,[esp+0x54]
1000c310:	push   eax
1000c311:	mov    eax,edi
1000c313:	call   0x1000b2b5
1000c318:	mov    BYTE PTR [esp+0xd8],0x2
1000c320:	movzx  ecx,WORD PTR [edi+0x34]
1000c324:	push   ecx
1000c325:	push   eax
1000c326:	lea    ecx,[esp+0xb4]
1000c32d:	call   0x1000c9d7
1000c332:	push   0x0
1000c334:	push   ebx
1000c335:	lea    ecx,[esp+0x5c]
1000c339:	mov    BYTE PTR [esp+0xe0],0x4
1000c341:	call   0x100012f0
1000c346:	lea    eax,[esp+0xac]
1000c34d:	push   eax
1000c34e:	lea    eax,[esp+0x20]
1000c352:	mov    ebx,0x10082e1c
1000c357:	push   eax
1000c358:	mov    edi,ebx
1000c35a:	call   0x1000d241
1000c35f:	mov    esi,DWORD PTR ds:0x10082e20
1000c365:	xor    edi,edi
1000c367:	cmp    DWORD PTR [esp+0x1c],edi
1000c36b:	je     0x1000c373
1000c36d:	cmp    DWORD PTR [esp+0x1c],ebx
1000c371:	je     0x1000c378
1000c373:	call   0x10043605
1000c378:	cmp    DWORD PTR [esp+0x20],esi
1000c37c:	jne    0x1000c477
1000c382:	mov    DWORD PTR [esp+0x40],edi
1000c386:	mov    DWORD PTR [esp+0x44],edi
1000c38a:	mov    DWORD PTR [esp+0x48],edi
1000c38e:	push   edi
1000c38f:	push   DWORD PTR [ebp+0x8]
1000c392:	mov    BYTE PTR [esp+0xe0],0x5
1000c39a:	push   DWORD PTR [esp+0x20]
1000c39e:	lea    esi,[esp+0x28]
1000c3a2:	call   0x1000c982
1000c3a7:	push   eax
1000c3a8:	lea    eax,[esp+0x40]
1000c3ac:	call   0x1000d3a5
1000c3b1:	sub    esp,0x10
1000c3b4:	mov    eax,esp
1000c3b6:	mov    DWORD PTR [esp+0x28],esp
1000c3ba:	push   eax
1000c3bb:	lea    ecx,[esp+0x50]
1000c3bf:	call   0x1000d2af
1000c3c4:	sub    esp,0x1c
1000c3c7:	mov    BYTE PTR [esp+0x104],0x6
1000c3cf:	lea    eax,[esp+0xd8]
1000c3d6:	mov    ecx,esp
1000c3d8:	mov    DWORD PTR [esp+0x48],esp
1000c3dc:	push   eax
1000c3dd:	call   0x100011c9
1000c3e2:	lea    edi,[esp+0xac]
1000c3e9:	mov    BYTE PTR [esp+0x104],0x5
1000c3f1:	call   0x1000dd24
1000c3f6:	add    esp,0x2c
1000c3f9:	mov    esi,eax
1000c3fb:	push   esi
1000c3fc:	lea    ecx,[esp+0x58]
1000c400:	mov    BYTE PTR [esp+0xdc],0x7
1000c408:	call   0x100011c9
1000c40d:	lea    eax,[esp+0x70]
1000c411:	lea    ecx,[esi+0x1c]
1000c414:	push   eax
1000c415:	mov    BYTE PTR [esp+0xdc],0x8
1000c41d:	call   0x1000d2af
1000c422:	lea    eax,[esp+0x54]
1000c426:	push   eax
1000c427:	lea    edi,[esp+0x20]
1000c42b:	mov    BYTE PTR [esp+0xdc],0x9
1000c433:	call   0x1000cefa
1000c438:	lea    esi,[esp+0x70]
1000c43c:	call   0x1000d355
1000c441:	push   0x0
1000c443:	push   0x1
1000c445:	lea    ecx,[esp+0x5c]
1000c449:	call   0x100012f0
1000c44e:	lea    esi,[esp+0x9c]
1000c455:	call   0x1000d355
1000c45a:	push   0x0
1000c45c:	push   0x1
1000c45e:	lea    ecx,[esp+0x88]
1000c465:	call   0x100012f0
1000c46a:	lea    esi,[esp+0x3c]
1000c46e:	call   0x1000d355
1000c473:	xor    edi,edi
1000c475:	jmp    0x1000c49a
1000c477:	push   edi
1000c478:	push   DWORD PTR [ebp+0x8]
1000c47b:	lea    esi,[esp+0x44]
1000c47f:	push   DWORD PTR [esp+0x20]
1000c483:	call   0x1000c982
1000c488:	push   eax
1000c489:	lea    esi,[esp+0x20]
1000c48d:	call   0x1001426e
1000c492:	add    eax,0x1c
1000c495:	call   0x1000d3a5
1000c49a:	call   0x10002068
1000c49f:	push   edi
1000c4a0:	push   0x1
1000c4a2:	lea    ecx,[esp+0xb4]
1000c4a9:	call   0x100012f0
1000c4ae:	cmp    DWORD PTR [esp+0x14],edi
1000c4b2:	je     0x1000c4be
1000c4b4:	push   DWORD PTR [esp+0x14]
1000c4b8:	call   DWORD PTR ds:0x10067090
1000c4be:	mov    al,0x1
1000c4c0:	mov    ecx,DWORD PTR [esp+0xd0]
1000c4c7:	mov    DWORD PTR fs:0x0,ecx
1000c4ce:	pop    ecx
1000c4cf:	pop    edi
1000c4d0:	pop    esi
1000c4d1:	pop    ebx
1000c4d2:	mov    ecx,DWORD PTR [esp+0xb8]
1000c4d9:	xor    ecx,esp
1000c4db:	call   0x10043615
1000c4e0:	mov    esp,ebp
1000c4e2:	pop    ebp
1000c4e3:	ret    0x4
1000c4e6:	push   ebp
1000c4e7:	mov    ebp,esp
1000c4e9:	and    esp,0xfffffff8
1000c4ec:	push   0xffffffff
1000c4ee:	push   0x10061618
1000c4f3:	mov    eax,fs:0x0
1000c4f9:	push   eax
1000c4fa:	sub    esp,0x60
1000c4fd:	mov    eax,ds:0x100801ac
1000c502:	xor    eax,esp
1000c504:	mov    DWORD PTR [esp+0x58],eax
1000c508:	push   ebx
1000c509:	push   esi
1000c50a:	push   edi
1000c50b:	mov    eax,ds:0x100801ac
1000c510:	xor    eax,esp
1000c512:	push   eax
1000c513:	lea    eax,[esp+0x70]
1000c517:	mov    fs:0x0,eax
1000c51d:	and    DWORD PTR [esp+0x14],0x0
1000c522:	mov    edi,ecx
1000c524:	lea    eax,[esp+0x30]
1000c528:	push   eax
1000c529:	mov    eax,edi
1000c52b:	mov    DWORD PTR [esp+0x24],edi
1000c52f:	call   0x1000b2b5
1000c534:	and    DWORD PTR [esp+0x78],0x0
1000c539:	xor    ebx,ebx
1000c53b:	inc    ebx
1000c53c:	push   0x1006dd18
1000c541:	mov    esi,eax
1000c543:	mov    DWORD PTR [esp+0x18],ebx
1000c547:	call   0x10006825
1000c54c:	test   al,al
1000c54e:	pop    ecx
1000c54f:	jne    0x1000c55f
1000c551:	movzx  eax,WORD PTR [edi+0x34]
1000c555:	test   ax,ax
1000c558:	mov    BYTE PTR [esp+0x13],0x0
1000c55d:	jne    0x1000c564
1000c55f:	mov    BYTE PTR [esp+0x13],0x1
1000c564:	or     DWORD PTR [esp+0x78],0xffffffff
1000c569:	push   0x0
1000c56b:	push   ebx
1000c56c:	lea    ecx,[esp+0x38]
1000c570:	call   0x100012f0
1000c575:	cmp    BYTE PTR [esp+0x13],0x0
1000c57a:	je     0x1000c583
1000c57c:	xor    al,al
1000c57e:	jmp    0x1000c6f6
1000c583:	and    DWORD PTR [esp+0x14],0x0
1000c588:	lea    eax,[esp+0x14]
1000c58c:	mov    DWORD PTR [esp+0x78],ebx
1000c590:	mov    esi,DWORD PTR ds:0x10082e14
1000c596:	push   eax
1000c597:	call   0x1000ac56
1000c59c:	test   eax,eax
1000c59e:	je     0x1000c5b3
1000c5a0:	cmp    DWORD PTR [esp+0x14],0x0
1000c5a5:	je     0x1000c57c
1000c5a7:	push   DWORD PTR [esp+0x14]
1000c5ab:	call   DWORD PTR ds:0x10067090
1000c5b1:	jmp    0x1000c57c
1000c5b3:	lea    eax,[esp+0x30]
1000c5b7:	push   eax
1000c5b8:	mov    eax,edi
1000c5ba:	call   0x1000b2b5
1000c5bf:	mov    BYTE PTR [esp+0x78],0x2
1000c5c4:	movzx  ecx,WORD PTR [edi+0x34]
1000c5c8:	push   ecx
1000c5c9:	push   eax
1000c5ca:	lea    ecx,[esp+0x54]
1000c5ce:	call   0x1000c9d7
1000c5d3:	push   0x0
1000c5d5:	push   ebx
1000c5d6:	lea    ecx,[esp+0x38]
1000c5da:	mov    BYTE PTR [esp+0x80],0x4
1000c5e2:	call   0x100012f0
1000c5e7:	lea    eax,[esp+0x4c]
1000c5eb:	push   eax
1000c5ec:	lea    eax,[esp+0x1c]
1000c5f0:	push   eax
1000c5f1:	mov    edi,0x10082e1c
1000c5f6:	call   0x1000d241
1000c5fb:	cmp    DWORD PTR [esp+0x18],0x0
1000c600:	mov    esi,DWORD PTR ds:0x10082e20
1000c606:	je     0x1000c60e
1000c608:	cmp    DWORD PTR [esp+0x18],edi
1000c60c:	je     0x1000c613
1000c60e:	call   0x10043605
1000c613:	cmp    DWORD PTR [esp+0x1c],esi
1000c617:	jne    0x1000c62a
1000c619:	push   0x0
1000c61b:	push   ebx
1000c61c:	lea    ecx,[esp+0x54]
1000c620:	call   0x100012f0
1000c625:	jmp    0x1000c5a0
1000c62a:	lea    esi,[esp+0x18]
1000c62e:	call   0x1001426e
1000c633:	mov    ebx,eax
1000c635:	add    ebx,0x1c
1000c638:	mov    eax,ebx
1000c63a:	xor    edi,edi
1000c63c:	call   0x1000d370
1000c641:	test   eax,eax
1000c643:	je     0x1000c662
1000c645:	push   edi
1000c646:	mov    esi,ebx
1000c648:	call   0x1000d386
1000c64d:	mov    ecx,DWORD PTR [esp+0x20]
1000c651:	cmp    DWORD PTR [eax+0x10],ecx
1000c654:	je     0x1000c668
1000c656:	mov    eax,ebx
1000c658:	inc    edi
1000c659:	call   0x1000d370
1000c65e:	cmp    edi,eax
1000c660:	jne    0x1000c645
1000c662:	push   0x0
1000c664:	push   0x1
1000c666:	jmp    0x1000c61c
1000c668:	mov    esi,DWORD PTR [ebx+0x4]
1000c66b:	cmp    esi,DWORD PTR [ebx+0x8]
1000c66e:	jbe    0x1000c675
1000c670:	call   0x10043605
1000c675:	lea    eax,[esp+0x20]
1000c679:	push   eax
1000c67a:	mov    ecx,edi
1000c67c:	lea    eax,[esp+0x2c]
1000c680:	mov    DWORD PTR [esp+0x2c],ebx
1000c684:	mov    DWORD PTR [esp+0x30],esi
1000c688:	call   0x1000d469
1000c68d:	lea    esi,[esp+0x20]
1000c691:	call   0x1000d44c
1000c696:	mov    edi,eax
1000c698:	call   0x1000c9bc
1000c69d:	push   DWORD PTR [esp+0x24]
1000c6a1:	lea    eax,[esp+0x2c]
1000c6a5:	push   DWORD PTR [esp+0x24]
1000c6a9:	push   eax
1000c6aa:	call   0x1000d406
1000c6af:	mov    eax,ebx
1000c6b1:	call   0x1000d370
1000c6b6:	test   eax,eax
1000c6b8:	jne    0x1000c6d1
1000c6ba:	push   DWORD PTR [esp+0x1c]
1000c6be:	lea    eax,[esp+0x2c]
1000c6c2:	push   DWORD PTR [esp+0x1c]
1000c6c6:	push   eax
1000c6c7:	push   0x10082e1c
1000c6cc:	call   0x1000cfa1
1000c6d1:	call   0x10002068
1000c6d6:	push   0x0
1000c6d8:	push   0x1
1000c6da:	lea    ecx,[esp+0x54]
1000c6de:	call   0x100012f0
1000c6e3:	cmp    DWORD PTR [esp+0x14],0x0
1000c6e8:	je     0x1000c6f4
1000c6ea:	push   DWORD PTR [esp+0x14]
1000c6ee:	call   DWORD PTR ds:0x10067090
1000c6f4:	mov    al,0x1
1000c6f6:	mov    ecx,DWORD PTR [esp+0x70]
1000c6fa:	mov    DWORD PTR fs:0x0,ecx
1000c701:	pop    ecx
1000c702:	pop    edi
1000c703:	pop    esi
1000c704:	pop    ebx
1000c705:	mov    ecx,DWORD PTR [esp+0x58]
1000c709:	xor    ecx,esp
1000c70b:	call   0x10043615
1000c710:	mov    esp,ebp
1000c712:	pop    ebp
1000c713:	ret    
1000c714:	push   ebp
1000c715:	mov    ebp,esp
1000c717:	and    esp,0xfffffff8
1000c71a:	push   0xffffffff
1000c71c:	push   0x100615cc
1000c721:	mov    eax,fs:0x0
1000c727:	push   eax
1000c728:	sub    esp,0xc
1000c72b:	push   esi
1000c72c:	push   edi
1000c72d:	mov    eax,ds:0x100801ac
1000c732:	xor    eax,esp
1000c734:	push   eax
1000c735:	lea    eax,[esp+0x18]
1000c739:	mov    fs:0x0,eax
1000c73f:	lea    eax,[esp+0x13]
1000c743:	push   eax
1000c744:	call   0x10036f20
1000c749:	and    DWORD PTR [esp+0x20],0x0
1000c74e:	mov    esi,DWORD PTR ds:0x1006707c
1000c754:	mov    edi,0x7d0
1000c759:	jmp    0x1000c763
1000c75b:	mov    ecx,DWORD PTR [ebp+0x8]
1000c75e:	call   0x1000c78b
1000c763:	push   edi
1000c764:	push   DWORD PTR ds:0x10083010
1000c76a:	call   esi
1000c76c:	test   eax,eax
1000c76e:	jne    0x1000c75b
1000c770:	call   0x10036f40
1000c775:	xor    eax,eax
1000c777:	mov    ecx,DWORD PTR [esp+0x18]
1000c77b:	mov    DWORD PTR fs:0x0,ecx
1000c782:	pop    ecx
1000c783:	pop    edi
1000c784:	pop    esi
1000c785:	mov    esp,ebp
1000c787:	pop    ebp
1000c788:	ret    0x4
1000c78b:	push   0x14c
1000c790:	mov    eax,0x100615a9
1000c795:	call   0x10059df5
1000c79a:	mov    edi,ecx
1000c79c:	call   0x1002f6a0
1000c7a1:	xor    ebx,ebx
1000c7a3:	mov    DWORD PTR [ebp-0x30],eax
1000c7a6:	mov    DWORD PTR [ebp-0x2c],edx
1000c7a9:	mov    DWORD PTR [ebp-0x18],ebx
1000c7ac:	lea    eax,[ebp-0x18]
1000c7af:	mov    DWORD PTR [ebp-0x4],ebx
1000c7b2:	mov    esi,DWORD PTR [edi]
1000c7b4:	push   eax
1000c7b5:	call   0x1000ac56
1000c7ba:	test   eax,eax
1000c7bc:	je     0x1000c7c6
1000c7be:	cmp    DWORD PTR [ebp-0x18],ebx
1000c7c1:	jmp    0x1000c971
1000c7c6:	mov    eax,DWORD PTR [edi+0xc]
1000c7c9:	mov    eax,DWORD PTR [eax]
1000c7cb:	add    edi,0x8
1000c7ce:	mov    DWORD PTR [ebp-0x28],edi
1000c7d1:	mov    DWORD PTR [ebp-0x20],edi
1000c7d4:	mov    DWORD PTR [ebp-0x1c],eax
1000c7d7:	cmp    DWORD PTR [ebp-0x20],0x0
1000c7db:	mov    esi,DWORD PTR [edi+0x4]
1000c7de:	je     0x1000c7e5
1000c7e0:	cmp    DWORD PTR [ebp-0x20],edi
1000c7e3:	je     0x1000c7ea
1000c7e5:	call   0x10043605
1000c7ea:	cmp    DWORD PTR [ebp-0x1c],esi
1000c7ed:	je     0x1000c96d
1000c7f3:	lea    esi,[ebp-0x20]
1000c7f6:	call   0x1001426e
1000c7fb:	mov    ebx,eax
1000c7fd:	mov    esi,DWORD PTR [ebx+0x20]
1000c800:	add    ebx,0x1c
1000c803:	cmp    esi,DWORD PTR [ebx+0x8]
1000c806:	jbe    0x1000c80d
1000c808:	call   0x10043605
1000c80d:	mov    DWORD PTR [ebp-0x14],ebx
1000c810:	mov    DWORD PTR [ebp-0x10],esi
1000c813:	mov    esi,DWORD PTR [ebx+0x8]
1000c816:	cmp    DWORD PTR [ebx+0x4],esi
1000c819:	jbe    0x1000c820
1000c81b:	call   0x10043605
1000c820:	cmp    DWORD PTR [ebp-0x14],0x0
1000c824:	je     0x1000c82b
1000c826:	cmp    DWORD PTR [ebp-0x14],ebx
1000c829:	je     0x1000c830
1000c82b:	call   0x10043605
1000c830:	cmp    DWORD PTR [ebp-0x10],esi
1000c833:	je     0x1000c932
1000c839:	lea    esi,[ebp-0x14]
1000c83c:	call   0x1000d44c
1000c841:	cmp    BYTE PTR [eax],0x0
1000c844:	jne    0x1000c88d
1000c846:	call   0x1000d44c
1000c84b:	mov    ecx,DWORD PTR [eax+0xc]
1000c84e:	cmp    ecx,DWORD PTR [ebp-0x2c]
1000c851:	ja     0x1000c88d
1000c853:	jb     0x1000c85d
1000c855:	mov    eax,DWORD PTR [eax+0x8]
1000c858:	cmp    eax,DWORD PTR [ebp-0x30]
1000c85b:	jae    0x1000c88d
1000c85d:	call   0x10002068
1000c862:	lea    esi,[ebp-0x14]
1000c865:	call   0x1000d44c
1000c86a:	mov    edi,eax
1000c86c:	call   0x1000c9bc
1000c871:	lea    eax,[ebp-0x50]
1000c874:	push   DWORD PTR [ebp-0x10]
1000c877:	push   DWORD PTR [ebp-0x14]
1000c87a:	push   eax
1000c87b:	call   0x1000d406
1000c880:	mov    ecx,DWORD PTR [eax]
1000c882:	mov    eax,DWORD PTR [eax+0x4]
1000c885:	mov    DWORD PTR [ebp-0x14],ecx
1000c888:	mov    DWORD PTR [ebp-0x10],eax
1000c88b:	jmp    0x1000c813
1000c88d:	lea    esi,[ebp-0x14]
1000c890:	call   0x1000d44c
1000c895:	cmp    BYTE PTR [eax],0x0
1000c898:	jne    0x1000c910
1000c89a:	call   0x1000d44c
1000c89f:	mov    esi,DWORD PTR [eax+0x10]
1000c8a2:	mov    eax,DWORD PTR [esi+0x8]
1000c8a5:	and    DWORD PTR [ebp-0x38],0x0
1000c8a9:	mov    DWORD PTR [ebp-0x154],eax
1000c8af:	xor    eax,eax
1000c8b1:	lea    edi,[ebp-0x34]
1000c8b4:	stos   DWORD PTR es:[edi],eax
1000c8b5:	lea    eax,[ebp-0x38]
1000c8b8:	push   eax
1000c8b9:	xor    eax,eax
1000c8bb:	push   eax
1000c8bc:	push   eax
1000c8bd:	lea    ecx,[ebp-0x158]
1000c8c3:	push   ecx
1000c8c4:	push   eax
1000c8c5:	mov    DWORD PTR [ebp-0x158],0x1
1000c8cf:	call   DWORD PTR ds:0x100673f4
1000c8d5:	cmp    eax,0x1
1000c8d8:	jne    0x1000c910
1000c8da:	mov    esi,DWORD PTR [esi+0x8]
1000c8dd:	push   0x2
1000c8df:	push   eax
1000c8e0:	lea    eax,[ebp-0x21]
1000c8e3:	push   eax
1000c8e4:	push   esi
1000c8e5:	call   DWORD PTR ds:0x100673b8
1000c8eb:	test   eax,eax
1000c8ed:	setne  al
1000c8f0:	test   al,al
1000c8f2:	jne    0x1000c910
1000c8f4:	call   0x10002068
1000c8f9:	lea    esi,[ebp-0x14]
1000c8fc:	call   0x1000d44c
1000c901:	mov    edi,eax
1000c903:	call   0x1000c9bc
1000c908:	lea    eax,[ebp-0x40]
1000c90b:	jmp    0x1000c874
1000c910:	mov    esi,DWORD PTR [ebp-0x14]
1000c913:	test   esi,esi
1000c915:	jne    0x1000c91c
1000c917:	call   0x10043605
1000c91c:	mov    eax,DWORD PTR [ebp-0x10]
1000c91f:	cmp    eax,DWORD PTR [esi+0x8]
1000c922:	jb     0x1000c929
1000c924:	call   0x10043605
1000c929:	add    DWORD PTR [ebp-0x10],0x18
1000c92d:	jmp    0x1000c813
1000c932:	mov    eax,ebx
1000c934:	call   0x1000d370
1000c939:	test   eax,eax
1000c93b:	jne    0x1000c95d
1000c93d:	push   DWORD PTR [ebp-0x1c]
1000c940:	mov    edi,DWORD PTR [ebp-0x28]
1000c943:	push   DWORD PTR [ebp-0x20]
1000c946:	lea    eax,[ebp-0x48]
1000c949:	push   eax
1000c94a:	push   edi
1000c94b:	call   0x1000cfa1
1000c950:	mov    ecx,DWORD PTR [eax]
1000c952:	mov    eax,DWORD PTR [eax+0x4]
1000c955:	mov    DWORD PTR [ebp-0x20],ecx
1000c958:	jmp    0x1000c7d4
1000c95d:	lea    esi,[ebp-0x20]
1000c960:	call   0x1000a19a
1000c965:	mov    edi,DWORD PTR [ebp-0x28]
1000c968:	jmp    0x1000c7d7
1000c96d:	cmp    DWORD PTR [ebp-0x18],0x0
1000c971:	je     0x1000c97c
1000c973:	push   DWORD PTR [ebp-0x18]
1000c976:	call   DWORD PTR ds:0x10067090
1000c97c:	call   0x10059ecd
1000c981:	ret    
1000c982:	push   ebx
1000c983:	push   edi
1000c984:	mov    BYTE PTR [esi],0x0
1000c987:	call   0x1002f6a0
1000c98c:	push   0x0
1000c98e:	push   0x2710
1000c993:	push   DWORD PTR [esp+0x1c]
1000c997:	mov    edi,eax
1000c999:	push   DWORD PTR [esp+0x1c]
1000c99d:	mov    ebx,edx
1000c99f:	call   0x1004f990
1000c9a4:	add    eax,edi
1000c9a6:	mov    DWORD PTR [esi+0x8],eax
1000c9a9:	mov    eax,DWORD PTR [esp+0xc]
1000c9ad:	adc    edx,ebx
1000c9af:	pop    edi
1000c9b0:	mov    DWORD PTR [esi+0x10],eax
1000c9b3:	mov    DWORD PTR [esi+0xc],edx
1000c9b6:	mov    eax,esi
1000c9b8:	pop    ebx
1000c9b9:	ret    0xc
1000c9bc:	push   esi
1000c9bd:	mov    esi,DWORD PTR [edi+0x10]
1000c9c0:	test   esi,esi
1000c9c2:	je     0x1000c9d5
1000c9c4:	push   esi
1000c9c5:	call   0x1000cae6
1000c9ca:	push   esi
1000c9cb:	call   0x10042fe2
1000c9d0:	and    DWORD PTR [edi+0x10],0x0
1000c9d4:	pop    ecx
1000c9d5:	pop    esi
1000c9d6:	ret    
1000c9d7:	push   0x50
1000c9d9:	mov    eax,0x1006157c
1000c9de:	call   0x10059e5e
1000c9e3:	mov    eax,DWORD PTR [ebp+0x8]
1000c9e6:	and    DWORD PTR [ebp-0x4],0x0
1000c9ea:	and    DWORD PTR [ebp-0x58],0x0
1000c9ee:	mov    esi,ecx
1000c9f0:	push   eax
1000c9f1:	mov    DWORD PTR [ebp-0x5c],esi
1000c9f4:	call   0x100011c9
1000c9f9:	and    DWORD PTR [ebp-0x4],0x0
1000c9fd:	xor    ebx,ebx
1000c9ff:	inc    ebx
1000ca00:	push   0x3a
1000ca02:	mov    DWORD PTR [ebp-0x58],ebx
1000ca05:	call   0x1000d4dd
1000ca0a:	push   0xa
1000ca0c:	lea    eax,[ebp-0x54]
1000ca0f:	push   eax
1000ca10:	movzx  eax,WORD PTR [ebp+0xc]
1000ca14:	push   eax
1000ca15:	call   0x10045cb6
1000ca1a:	add    esp,0xc
1000ca1d:	push   eax
1000ca1e:	push   esi
1000ca1f:	call   0x10004126
1000ca24:	mov    eax,esi
1000ca26:	call   0x10059ee1
1000ca2b:	ret    0x8
1000ca2e:	push   0x28
1000ca30:	mov    eax,0x100625c7
1000ca35:	call   0x10059e5e
1000ca3a:	push   DWORD PTR [ebp+0xc]
1000ca3d:	lea    ecx,[ebp-0x2c]
1000ca40:	push   DWORD PTR [ebp+0x8]
1000ca43:	call   0x1000c9d7
1000ca48:	and    DWORD PTR [ebp-0x4],0x0
1000ca4c:	lea    eax,[ebp-0x2c]
1000ca4f:	push   eax
1000ca50:	lea    eax,[ebp-0x34]
1000ca53:	push   eax
1000ca54:	mov    edi,0x10082e1c
1000ca59:	call   0x1000d241
1000ca5e:	cmp    DWORD PTR [ebp-0x34],0x0
1000ca62:	mov    esi,DWORD PTR ds:0x10082e20
1000ca68:	je     0x1000ca6f
1000ca6a:	cmp    DWORD PTR [ebp-0x34],edi
1000ca6d:	je     0x1000ca74
1000ca6f:	call   0x10043605
1000ca74:	cmp    DWORD PTR [ebp-0x30],esi
1000ca77:	jne    0x1000ca91
1000ca79:	xor    esi,esi
1000ca7b:	push   0x0
1000ca7d:	push   0x1
1000ca7f:	lea    ecx,[ebp-0x2c]
1000ca82:	call   0x100012f0
1000ca87:	mov    eax,esi
1000ca89:	call   0x10059ee1
1000ca8e:	ret    0xc
1000ca91:	lea    esi,[ebp-0x34]
1000ca94:	call   0x1001426e
1000ca99:	mov    esi,eax
1000ca9b:	add    esi,0x1c
1000ca9e:	mov    eax,esi
1000caa0:	xor    edi,edi
1000caa2:	call   0x1000d370
1000caa7:	test   eax,eax
1000caa9:	je     0x1000ca79
1000caab:	push   edi
1000caac:	call   0x1000d386
1000cab1:	mov    al,BYTE PTR [eax]
1000cab3:	cmp    al,BYTE PTR [ebp+0x10]
1000cab6:	je     0x1000cac6
1000cab8:	mov    eax,esi
1000caba:	inc    edi
1000cabb:	call   0x1000d370
1000cac0:	cmp    edi,eax
1000cac2:	jne    0x1000caab
1000cac4:	jmp    0x1000ca79
1000cac6:	push   edi
1000cac7:	call   0x1000d386
1000cacc:	mov    esi,eax
1000cace:	jmp    0x1000ca7b
1000cad0:	push   esi
1000cad1:	lea    esi,[edi+0x1c]
1000cad4:	call   0x1000d355
1000cad9:	push   0x0
1000cadb:	push   0x1
1000cadd:	mov    ecx,edi
1000cadf:	call   0x100012f0
1000cae4:	pop    esi
1000cae5:	ret    
1000cae6:	push   0x0
1000cae8:	mov    eax,0x10061548
1000caed:	call   0x10059df5
1000caf2:	mov    esi,DWORD PTR [ebp+0x8]
1000caf5:	xor    edi,edi
1000caf7:	push   edi
1000caf8:	push   0x1
1000cafa:	lea    ecx,[esi+0x38]
1000cafd:	mov    DWORD PTR [ebp-0x4],0x3
1000cb04:	call   0x100012f0
1000cb09:	push   edi
1000cb0a:	push   0x1
1000cb0c:	lea    ecx,[esi+0x18]
1000cb0f:	call   0x100012f0
1000cb14:	push   DWORD PTR [esi+0x14]
1000cb17:	call   0x10042fe2
1000cb1c:	pop    ecx
1000cb1d:	lea    eax,[esi+0x10]
1000cb20:	call   0x1000ce90
1000cb25:	mov    BYTE PTR [ebp-0x4],0x2
1000cb29:	mov    ecx,DWORD PTR [esi+0xc]
1000cb2c:	cmp    ecx,edi
1000cb2e:	je     0x1000cb36
1000cb30:	mov    eax,DWORD PTR [ecx]
1000cb32:	push   0x1
1000cb34:	call   DWORD PTR [eax]
1000cb36:	mov    eax,DWORD PTR [esi+0x8]
1000cb39:	cmp    eax,edi
1000cb3b:	je     0x1000cb44
1000cb3d:	push   eax
1000cb3e:	call   DWORD PTR ds:0x100673c8
1000cb44:	mov    DWORD PTR [esi+0x8],edi
1000cb47:	mov    eax,DWORD PTR [esi+0x4]
1000cb4a:	cmp    eax,edi
1000cb4c:	je     0x1000cb55
1000cb4e:	push   eax
1000cb4f:	call   DWORD PTR ds:0x100673dc
1000cb55:	mov    DWORD PTR [esi+0x4],edi
1000cb58:	mov    eax,DWORD PTR [esi]
1000cb5a:	cmp    eax,edi
1000cb5c:	je     0x1000cb65
1000cb5e:	push   eax
1000cb5f:	call   DWORD PTR ds:0x10067078
1000cb65:	mov    DWORD PTR [esi],edi
1000cb67:	call   0x10059ecd
1000cb6c:	ret    0x4
1000cb6f:	push   0x10
1000cb71:	mov    eax,0x10064f39
1000cb76:	call   0x10059df5
1000cb7b:	xor    ebx,ebx
1000cb7d:	mov    DWORD PTR [ebp-0x14],ebx
1000cb80:	mov    DWORD PTR [ebp-0x10],ebx
1000cb83:	push   DWORD PTR [ebp+0x10]
1000cb86:	mov    DWORD PTR [ebp-0x4],0x1
1000cb8d:	push   DWORD PTR [ebp+0xc]
1000cb90:	call   0x1000c0cc
1000cb95:	mov    edi,eax
1000cb97:	cmp    edi,ebx
1000cb99:	jne    0x1000cbb7
1000cb9b:	push   0x5c
1000cb9d:	call   0x10043196
1000cba2:	cmp    eax,ebx
1000cba4:	pop    ecx
1000cba5:	je     0x1000cbb0
1000cba7:	mov    edi,eax
1000cba9:	call   0x1000ada4
1000cbae:	jmp    0x1000cbb2
1000cbb0:	xor    eax,eax
1000cbb2:	mov    DWORD PTR [ebp-0x10],eax
1000cbb5:	mov    edi,eax
1000cbb7:	push   DWORD PTR [ebp+0x28]
1000cbba:	mov    ecx,DWORD PTR [ebp+0x24]
1000cbbd:	push   DWORD PTR [ebp+0x18]
1000cbc0:	lea    eax,[ebp-0x18]
1000cbc3:	push   DWORD PTR [ebp+0x14]
1000cbc6:	mov    edx,edi
1000cbc8:	push   DWORD PTR [ebp+0x10]
1000cbcb:	push   DWORD PTR [ebp+0xc]
1000cbce:	push   eax
1000cbcf:	call   0x1000b09b
1000cbd4:	mov    ecx,DWORD PTR [eax]
1000cbd6:	mov    esi,ecx
1000cbd8:	mov    DWORD PTR [eax],ebx
1000cbda:	mov    DWORD PTR [ebp-0x1c],esi
1000cbdd:	mov    BYTE PTR [ebp-0x4],0x2
1000cbe1:	push   DWORD PTR [ebp-0x18]
1000cbe4:	call   0x10042fe2
1000cbe9:	cmp    esi,ebx
1000cbeb:	pop    ecx
1000cbec:	jne    0x1000cc1f
1000cbee:	mov    esi,DWORD PTR [ebp-0x10]
1000cbf1:	cmp    esi,ebx
1000cbf3:	jne    0x1000cbfc
1000cbf5:	mov    ecx,edi
1000cbf7:	call   0x1000c4e6
1000cbfc:	mov    edi,DWORD PTR [ebp+0x8]
1000cbff:	mov    DWORD PTR [edi],ebx
1000cc01:	push   ebx
1000cc02:	mov    DWORD PTR [ebp-0x14],0x1
1000cc09:	call   0x10042fe2
1000cc0e:	cmp    esi,ebx
1000cc10:	pop    ecx
1000cc11:	mov    BYTE PTR [ebp-0x4],bl
1000cc14:	je     0x1000cc77
1000cc16:	push   esi
1000cc17:	call   0x1000cae6
1000cc1c:	push   esi
1000cc1d:	jmp    0x1000cc71
1000cc1f:	mov    al,BYTE PTR [edi+0x58]
1000cc22:	neg    al
1000cc24:	mov    ecx,edi
1000cc26:	sbb    eax,eax
1000cc28:	and    eax,0x3a98
1000cc2d:	add    eax,0x1388
1000cc32:	cmp    DWORD PTR [ebp-0x10],ebx
1000cc35:	push   eax
1000cc36:	je     0x1000cc46
1000cc38:	call   0x1000c22d
1000cc3d:	test   al,al
1000cc3f:	je     0x1000cc4b
1000cc41:	mov    DWORD PTR [ebp-0x10],ebx
1000cc44:	jmp    0x1000cc4b
1000cc46:	call   0x1000c13a
1000cc4b:	mov    edi,DWORD PTR [ebp+0x8]
1000cc4e:	push   ebx
1000cc4f:	mov    DWORD PTR [edi],esi
1000cc51:	mov    DWORD PTR [ebp-0x14],0x1
1000cc58:	call   0x10042fe2
1000cc5d:	mov    BYTE PTR [ebp-0x4],bl
1000cc60:	cmp    DWORD PTR [ebp-0x10],ebx
1000cc63:	pop    ecx
1000cc64:	je     0x1000cc77
1000cc66:	push   DWORD PTR [ebp-0x10]
1000cc69:	call   0x1000cae6
1000cc6e:	push   DWORD PTR [ebp-0x10]
1000cc71:	call   0x10042fe2
1000cc76:	pop    ecx
1000cc77:	mov    eax,edi
1000cc79:	call   0x10059ecd
1000cc7e:	ret    
1000cc7f:	push   0x68
1000cc81:	mov    eax,0x10064ef5
1000cc86:	call   0x10059df5
1000cc8b:	xor    ebx,ebx
1000cc8d:	mov    DWORD PTR [ebp-0x18],ebx
1000cc90:	mov    DWORD PTR [ebp-0x10],ebx
1000cc93:	push   DWORD PTR [ebp+0x10]
1000cc96:	mov    DWORD PTR [ebp-0x4],0x1
1000cc9d:	push   DWORD PTR [ebp+0xc]
1000cca0:	call   0x1000c0cc
1000cca5:	mov    edi,eax
1000cca7:	cmp    edi,ebx
1000cca9:	jne    0x1000ccc7
1000ccab:	push   0x5c
1000ccad:	call   0x10043196
1000ccb2:	cmp    eax,ebx
1000ccb4:	pop    ecx
1000ccb5:	je     0x1000ccc0
1000ccb7:	mov    edi,eax
1000ccb9:	call   0x1000ada4
1000ccbe:	jmp    0x1000ccc2
1000ccc0:	xor    eax,eax
1000ccc2:	mov    DWORD PTR [ebp-0x10],eax
1000ccc5:	mov    edi,eax
1000ccc7:	mov    DWORD PTR [ebp-0x14],ebx
1000ccca:	mov    BYTE PTR [ebp-0x4],0x2
1000ccce:	mov    esi,DWORD PTR [ebp+0x14]
1000ccd1:	cmp    DWORD PTR [esi+0x34],ebx
1000ccd4:	jne    0x1000cd48
1000ccd6:	mov    esi,0x1006dd18
1000ccdb:	push   esi
1000ccdc:	lea    ecx,[ebp-0x70]
1000ccdf:	call   0x100011a7
1000cce4:	push   esi
1000cce5:	lea    ecx,[ebp-0x54]
1000cce8:	mov    BYTE PTR [ebp-0x4],0x3
1000ccec:	call   0x100011a7
1000ccf1:	push   esi
1000ccf2:	lea    ecx,[ebp-0x38]
1000ccf5:	mov    BYTE PTR [ebp-0x4],0x4
1000ccf9:	call   0x100011a7
1000ccfe:	lea    eax,[ebp-0x70]
1000cd01:	push   eax
1000cd02:	lea    eax,[ebp-0x54]
1000cd05:	push   eax
1000cd06:	lea    ecx,[ebp-0x38]
1000cd09:	mov    BYTE PTR [ebp-0x4],0x5
1000cd0d:	call   0x10009870
1000cd12:	pop    ecx
1000cd13:	pop    ecx
1000cd14:	push   ebx
1000cd15:	mov    esi,eax
1000cd17:	push   0x1
1000cd19:	lea    ecx,[ebp-0x38]
1000cd1c:	mov    DWORD PTR [ebp-0x14],esi
1000cd1f:	call   0x100012f0
1000cd24:	push   ebx
1000cd25:	push   0x1
1000cd27:	lea    ecx,[ebp-0x54]
1000cd2a:	call   0x100012f0
1000cd2f:	push   ebx
1000cd30:	push   0x1
1000cd32:	lea    ecx,[ebp-0x70]
1000cd35:	mov    BYTE PTR [ebp-0x4],0x2
1000cd39:	call   0x100012f0
1000cd3e:	push   DWORD PTR [ebp+0x14]
1000cd41:	mov    ecx,esi
1000cd43:	call   0x10008c3d
1000cd48:	push   DWORD PTR [ebp+0x18]
1000cd4b:	lea    eax,[ebp-0x1c]
1000cd4e:	push   esi
1000cd4f:	push   DWORD PTR [ebp+0x10]
1000cd52:	mov    ecx,edi
1000cd54:	push   DWORD PTR [ebp+0xc]
1000cd57:	push   eax
1000cd58:	call   0x1000b184
1000cd5d:	mov    ecx,DWORD PTR [eax]
1000cd5f:	mov    esi,ecx
1000cd61:	mov    DWORD PTR [eax],ebx
1000cd63:	mov    DWORD PTR [ebp+0x14],esi
1000cd66:	lea    eax,[ebp-0x1c]
1000cd69:	mov    BYTE PTR [ebp-0x4],0x6
1000cd6d:	call   0x1000a2dc
1000cd72:	cmp    esi,ebx
1000cd74:	jne    0x1000cdbb
1000cd76:	mov    esi,DWORD PTR [ebp-0x10]
1000cd79:	cmp    esi,ebx
1000cd7b:	jne    0x1000cd84
1000cd7d:	mov    ecx,edi
1000cd7f:	call   0x1000c4e6
1000cd84:	mov    edi,DWORD PTR [ebp+0x8]
1000cd87:	mov    DWORD PTR [ebp+0x14],ebx
1000cd8a:	mov    DWORD PTR [edi],ebx
1000cd8c:	lea    eax,[ebp+0x14]
1000cd8f:	mov    DWORD PTR [ebp-0x18],0x1
1000cd96:	mov    BYTE PTR [ebp-0x4],0x2
1000cd9a:	call   0x1000a2dc
1000cd9f:	lea    ecx,[ebp-0x14]
1000cda2:	mov    BYTE PTR [ebp-0x4],0x1
1000cda6:	call   0x1000a176
1000cdab:	cmp    esi,ebx
1000cdad:	mov    BYTE PTR [ebp-0x4],bl
1000cdb0:	je     0x1000ce27
1000cdb2:	push   esi
1000cdb3:	call   0x1000cae6
1000cdb8:	push   esi
1000cdb9:	jmp    0x1000ce21
1000cdbb:	mov    al,BYTE PTR [edi+0x58]
1000cdbe:	neg    al
1000cdc0:	mov    ecx,edi
1000cdc2:	sbb    eax,eax
1000cdc4:	and    eax,0x3a98
1000cdc9:	add    eax,0x1388
1000cdce:	cmp    DWORD PTR [ebp-0x10],ebx
1000cdd1:	push   eax
1000cdd2:	je     0x1000cde2
1000cdd4:	call   0x1000c22d
1000cdd9:	test   al,al
1000cddb:	je     0x1000cde7
1000cddd:	mov    DWORD PTR [ebp-0x10],ebx
1000cde0:	jmp    0x1000cde7
1000cde2:	call   0x1000c13a
1000cde7:	mov    edi,DWORD PTR [ebp+0x8]
1000cdea:	lea    eax,[ebp+0x14]
1000cded:	mov    DWORD PTR [ebp+0x14],ebx
1000cdf0:	mov    DWORD PTR [edi],esi
1000cdf2:	mov    DWORD PTR [ebp-0x18],0x1
1000cdf9:	mov    BYTE PTR [ebp-0x4],0x2
1000cdfd:	call   0x1000a2dc
1000ce02:	lea    ecx,[ebp-0x14]
1000ce05:	mov    BYTE PTR [ebp-0x4],0x1
1000ce09:	call   0x1000a176
1000ce0e:	mov    BYTE PTR [ebp-0x4],bl
1000ce11:	cmp    DWORD PTR [ebp-0x10],ebx
1000ce14:	je     0x1000ce27
1000ce16:	push   DWORD PTR [ebp-0x10]
1000ce19:	call   0x1000cae6
1000ce1e:	push   DWORD PTR [ebp-0x10]
1000ce21:	call   0x10042fe2
1000ce26:	pop    ecx
1000ce27:	mov    eax,edi
1000ce29:	call   0x10059ecd
1000ce2e:	ret    
1000ce2f:	push   DWORD PTR [esp+0x8]
1000ce33:	call   0x10043450
1000ce38:	pop    ecx
1000ce39:	push   eax
1000ce3a:	push   DWORD PTR [esp+0xc]
1000ce3e:	mov    eax,DWORD PTR [esp+0x14]
1000ce42:	push   DWORD PTR [esp+0xc]
1000ce46:	call   0x1000d551
1000ce4b:	ret    0xc
1000ce4e:	push   ebp
1000ce4f:	mov    ebp,esp
1000ce51:	push   ecx
1000ce52:	and    DWORD PTR [ebp-0x4],0x0
1000ce56:	push   esi
1000ce57:	push   DWORD PTR [ebp+0x10]
1000ce5a:	mov    esi,eax
1000ce5c:	push   DWORD PTR [ebp+0xc]
1000ce5f:	push   DWORD PTR [ebp+0x8]
1000ce62:	call   0x1000d4b5
1000ce67:	mov    eax,esi
1000ce69:	pop    esi
1000ce6a:	leave  
1000ce6b:	ret    0xc
1000ce6e:	mov    eax,DWORD PTR [esi]
1000ce70:	test   eax,eax
1000ce72:	je     0x1000ce7b
1000ce74:	push   eax
1000ce75:	call   DWORD PTR ds:0x100673dc
1000ce7b:	and    DWORD PTR [esi],0x0
1000ce7e:	ret    
1000ce7f:	mov    eax,DWORD PTR [esi]
1000ce81:	test   eax,eax
1000ce83:	je     0x1000ce8c
1000ce85:	push   eax
1000ce86:	call   DWORD PTR ds:0x100673c8
1000ce8c:	and    DWORD PTR [esi],0x0
1000ce8f:	ret    
1000ce90:	push   esi
1000ce91:	mov    esi,DWORD PTR [eax]
1000ce93:	test   esi,esi
1000ce95:	je     0x1000cea5
1000ce97:	mov    eax,esi
1000ce99:	call   0x1000e163
1000ce9e:	push   esi
1000ce9f:	call   0x10042fe2
1000cea4:	pop    ecx
1000cea5:	pop    esi
1000cea6:	ret    
1000cea7:	push   esi
1000cea8:	mov    esi,DWORD PTR [edi]
1000ceaa:	cmp    ebx,esi
1000ceac:	je     0x1000cebf
1000ceae:	test   esi,esi
1000ceb0:	je     0x1000cebf
1000ceb2:	push   esi
1000ceb3:	call   0x1000a3c8
1000ceb8:	push   esi
1000ceb9:	call   0x10042fe2
1000cebe:	pop    ecx
1000cebf:	mov    DWORD PTR [edi],ebx
1000cec1:	pop    esi
1000cec2:	ret    
1000cec3:	jmp    0x1000d5ed
1000cec8:	mov    ecx,DWORD PTR [eax+0x4]
1000cecb:	test   ecx,ecx
1000cecd:	jne    0x1000ced2
1000cecf:	xor    eax,eax
1000ced1:	ret    
1000ced2:	mov    eax,DWORD PTR [eax+0x8]
1000ced5:	sub    eax,ecx
1000ced7:	sar    eax,0x4
1000ceda:	ret    
1000cedb:	mov    eax,esi
1000cedd:	call   0x1000cec8
1000cee2:	cmp    DWORD PTR [esp+0x4],eax
1000cee6:	jb     0x1000ceed
1000cee8:	call   0x10043605
1000ceed:	mov    eax,DWORD PTR [esp+0x4]
1000cef1:	shl    eax,0x4
1000cef4:	add    eax,DWORD PTR [esi+0x4]
1000cef7:	ret    0x4
1000cefa:	push   ebp
1000cefb:	mov    ebp,esp
1000cefd:	sub    esp,0x18
1000cf00:	mov    eax,DWORD PTR [ebx+0x4]
1000cf03:	push   esi
1000cf04:	mov    esi,DWORD PTR [eax+0x4]
1000cf07:	mov    DWORD PTR [ebp-0x8],eax
1000cf0a:	mov    al,0x1
1000cf0c:	mov    BYTE PTR [ebp-0xc],al
1000cf0f:	jmp    0x1000cf2d
1000cf11:	mov    eax,DWORD PTR [ebp+0x8]
1000cf14:	lea    ecx,[esi+0xc]
1000cf17:	mov    DWORD PTR [ebp-0x8],esi
1000cf1a:	call   0x10005114
1000cf1f:	test   al,al
1000cf21:	mov    BYTE PTR [ebp-0xc],al
1000cf24:	je     0x1000cf2a
1000cf26:	mov    esi,DWORD PTR [esi]
1000cf28:	jmp    0x1000cf2d
1000cf2a:	mov    esi,DWORD PTR [esi+0x8]
1000cf2d:	cmp    BYTE PTR [esi+0x39],0x0
1000cf31:	je     0x1000cf11
1000cf33:	test   al,al
1000cf35:	mov    ecx,DWORD PTR [ebp-0x8]
1000cf38:	mov    esi,ecx
1000cf3a:	mov    DWORD PTR [ebp-0x10],esi
1000cf3d:	mov    DWORD PTR [ebp-0x14],ebx
1000cf40:	je     0x1000cf74
1000cf42:	mov    eax,DWORD PTR [ebx+0x4]
1000cf45:	cmp    ecx,DWORD PTR [eax]
1000cf47:	jne    0x1000cf69
1000cf49:	push   DWORD PTR [ebp+0x8]
1000cf4c:	push   0x1
1000cf4e:	lea    eax,[ebp-0x14]
1000cf51:	push   eax
1000cf52:	mov    esi,ebx
1000cf54:	call   0x1000d612
1000cf59:	mov    ecx,DWORD PTR [eax]
1000cf5b:	mov    eax,DWORD PTR [eax+0x4]
1000cf5e:	mov    DWORD PTR [edi],ecx
1000cf60:	mov    DWORD PTR [edi+0x4],eax
1000cf63:	mov    BYTE PTR [edi+0x8],0x1
1000cf67:	jmp    0x1000cf9a
1000cf69:	lea    esi,[ebp-0x14]
1000cf6c:	call   0x1000d7d4
1000cf71:	mov    esi,DWORD PTR [ebp-0x10]
1000cf74:	mov    ecx,DWORD PTR [ebp+0x8]
1000cf77:	lea    eax,[esi+0xc]
1000cf7a:	call   0x10005114
1000cf7f:	test   al,al
1000cf81:	je     0x1000cf8e
1000cf83:	push   DWORD PTR [ebp+0x8]
1000cf86:	mov    ecx,DWORD PTR [ebp-0x8]
1000cf89:	push   DWORD PTR [ebp-0xc]
1000cf8c:	jmp    0x1000cf4e
1000cf8e:	mov    eax,DWORD PTR [ebp-0x14]
1000cf91:	mov    DWORD PTR [edi],eax
1000cf93:	mov    DWORD PTR [edi+0x4],esi
1000cf96:	mov    BYTE PTR [edi+0x8],0x0
1000cf9a:	mov    eax,edi
1000cf9c:	pop    esi
1000cf9d:	leave  
1000cf9e:	ret    0x4
1000cfa1:	push   0x44
1000cfa3:	mov    eax,0x10060b46
1000cfa8:	call   0x10059df5
1000cfad:	mov    edi,DWORD PTR [ebp+0x14]
1000cfb0:	cmp    BYTE PTR [edi+0x39],0x0
1000cfb4:	je     0x1000cfe8
1000cfb6:	push   0x1006dcfc
1000cfbb:	lea    ecx,[ebp-0x28]
1000cfbe:	call   0x100011a7
1000cfc3:	and    DWORD PTR [ebp-0x4],0x0
1000cfc7:	lea    eax,[ebp-0x28]
1000cfca:	push   eax
1000cfcb:	lea    ecx,[ebp-0x50]
1000cfce:	call   0x10001077
1000cfd3:	push   0x10076428
1000cfd8:	lea    eax,[ebp-0x50]
1000cfdb:	push   eax
1000cfdc:	mov    DWORD PTR [ebp-0x50],0x1006c988
1000cfe3:	call   0x10047942
1000cfe8:	lea    esi,[ebp+0x10]
1000cfeb:	call   0x1000a19a
1000cff0:	mov    ecx,DWORD PTR [edi]
1000cff2:	cmp    BYTE PTR [ecx+0x39],0x0
1000cff6:	je     0x1000cffd
1000cff8:	mov    ebx,DWORD PTR [edi+0x8]
1000cffb:	jmp    0x1000d014
1000cffd:	mov    eax,DWORD PTR [edi+0x8]
1000d000:	cmp    BYTE PTR [eax+0x39],0x0
1000d004:	je     0x1000d00a
1000d006:	mov    ebx,ecx
1000d008:	jmp    0x1000d014
1000d00a:	mov    eax,DWORD PTR [ebp+0x14]
1000d00d:	cmp    eax,edi
1000d00f:	mov    ebx,DWORD PTR [eax+0x8]
1000d012:	jne    0x1000d08a
1000d014:	cmp    BYTE PTR [ebx+0x39],0x0
1000d018:	mov    esi,DWORD PTR [edi+0x4]
1000d01b:	jne    0x1000d020
1000d01d:	mov    DWORD PTR [ebx+0x4],esi
1000d020:	mov    ecx,DWORD PTR [ebp+0x8]
1000d023:	mov    eax,DWORD PTR [ecx+0x4]
1000d026:	cmp    DWORD PTR [eax+0x4],edi
1000d029:	jne    0x1000d030
1000d02b:	mov    DWORD PTR [eax+0x4],ebx
1000d02e:	jmp    0x1000d03b
1000d030:	cmp    DWORD PTR [esi],edi
1000d032:	jne    0x1000d038
1000d034:	mov    DWORD PTR [esi],ebx
1000d036:	jmp    0x1000d03b
1000d038:	mov    DWORD PTR [esi+0x8],ebx
1000d03b:	mov    edx,DWORD PTR [ecx+0x4]
1000d03e:	cmp    DWORD PTR [edx],edi
1000d040:	jne    0x1000d05e
1000d042:	cmp    BYTE PTR [ebx+0x39],0x0
1000d046:	je     0x1000d04c
1000d048:	mov    ecx,esi
1000d04a:	jmp    0x1000d05c
1000d04c:	mov    eax,DWORD PTR [ebx]
1000d04e:	mov    ecx,ebx
1000d050:	jmp    0x1000d056
1000d052:	mov    ecx,eax
1000d054:	mov    eax,DWORD PTR [ecx]
1000d056:	cmp    BYTE PTR [eax+0x39],0x0
1000d05a:	je     0x1000d052
1000d05c:	mov    DWORD PTR [edx],ecx
1000d05e:	mov    eax,DWORD PTR [ebp+0x8]
1000d061:	mov    edx,DWORD PTR [eax+0x4]
1000d064:	cmp    DWORD PTR [edx+0x8],edi
1000d067:	jne    0x1000d0e4
1000d069:	cmp    BYTE PTR [ebx+0x39],0x0
1000d06d:	je     0x1000d073
1000d06f:	mov    ecx,esi
1000d071:	jmp    0x1000d085
1000d073:	mov    eax,DWORD PTR [ebx+0x8]
1000d076:	mov    ecx,ebx
1000d078:	jmp    0x1000d07f
1000d07a:	mov    ecx,eax
1000d07c:	mov    eax,DWORD PTR [ecx+0x8]
1000d07f:	cmp    BYTE PTR [eax+0x39],0x0
1000d083:	je     0x1000d07a
1000d085:	mov    DWORD PTR [edx+0x8],ecx
1000d088:	jmp    0x1000d0e4
1000d08a:	mov    DWORD PTR [ecx+0x4],eax
1000d08d:	mov    ecx,DWORD PTR [edi]
1000d08f:	mov    DWORD PTR [eax],ecx
1000d091:	cmp    eax,DWORD PTR [edi+0x8]
1000d094:	jne    0x1000d09a
1000d096:	mov    esi,eax
1000d098:	jmp    0x1000d0b4
1000d09a:	cmp    BYTE PTR [ebx+0x39],0x0
1000d09e:	mov    esi,DWORD PTR [eax+0x4]
1000d0a1:	jne    0x1000d0a6
1000d0a3:	mov    DWORD PTR [ebx+0x4],esi
1000d0a6:	mov    DWORD PTR [esi],ebx
1000d0a8:	mov    ecx,DWORD PTR [edi+0x8]
1000d0ab:	mov    DWORD PTR [eax+0x8],ecx
1000d0ae:	mov    ecx,DWORD PTR [edi+0x8]
1000d0b1:	mov    DWORD PTR [ecx+0x4],eax
1000d0b4:	mov    ecx,DWORD PTR [ebp+0x8]
1000d0b7:	mov    ecx,DWORD PTR [ecx+0x4]
1000d0ba:	cmp    DWORD PTR [ecx+0x4],edi
1000d0bd:	jne    0x1000d0c4
1000d0bf:	mov    DWORD PTR [ecx+0x4],eax
1000d0c2:	jmp    0x1000d0d2
1000d0c4:	mov    ecx,DWORD PTR [edi+0x4]
1000d0c7:	cmp    DWORD PTR [ecx],edi
1000d0c9:	jne    0x1000d0cf
1000d0cb:	mov    DWORD PTR [ecx],eax
1000d0cd:	jmp    0x1000d0d2
1000d0cf:	mov    DWORD PTR [ecx+0x8],eax
1000d0d2:	mov    ecx,DWORD PTR [edi+0x4]
1000d0d5:	mov    DWORD PTR [eax+0x4],ecx
1000d0d8:	mov    dl,BYTE PTR [edi+0x38]
1000d0db:	mov    cl,BYTE PTR [eax+0x38]
1000d0de:	mov    BYTE PTR [eax+0x38],dl
1000d0e1:	mov    BYTE PTR [edi+0x38],cl
1000d0e4:	cmp    BYTE PTR [edi+0x38],0x1
1000d0e8:	jne    0x1000d200
1000d0ee:	jmp    0x1000d1b4
1000d0f3:	cmp    BYTE PTR [ebx+0x38],0x1
1000d0f7:	jne    0x1000d1fc
1000d0fd:	mov    ecx,DWORD PTR [esi]
1000d0ff:	cmp    ebx,ecx
1000d101:	jne    0x1000d17a
1000d103:	mov    ecx,DWORD PTR [esi+0x8]
1000d106:	cmp    BYTE PTR [ecx+0x38],0x0
1000d10a:	jne    0x1000d121
1000d10c:	push   DWORD PTR [ebp+0x8]
1000d10f:	mov    BYTE PTR [ecx+0x38],0x1
1000d113:	mov    ecx,esi
1000d115:	mov    BYTE PTR [esi+0x38],0x0
1000d119:	call   0x1000a603
1000d11e:	mov    ecx,DWORD PTR [esi+0x8]
1000d121:	cmp    BYTE PTR [ecx+0x39],0x0
1000d125:	jne    0x1000d1af
1000d12b:	mov    eax,DWORD PTR [ecx]
1000d12d:	cmp    BYTE PTR [eax+0x38],0x1
1000d131:	jne    0x1000d13c
1000d133:	mov    eax,DWORD PTR [ecx+0x8]
1000d136:	cmp    BYTE PTR [eax+0x38],0x1
1000d13a:	je     0x1000d1ab
1000d13c:	mov    eax,DWORD PTR [ecx+0x8]
1000d13f:	cmp    BYTE PTR [eax+0x38],0x1
1000d143:	jne    0x1000d15a
1000d145:	mov    eax,DWORD PTR [ecx]
1000d147:	push   DWORD PTR [ebp+0x8]
1000d14a:	mov    BYTE PTR [eax+0x38],0x1
1000d14e:	mov    BYTE PTR [ecx+0x38],0x0
1000d152:	call   0x1000d75d
1000d157:	mov    ecx,DWORD PTR [esi+0x8]
1000d15a:	mov    al,BYTE PTR [esi+0x38]
1000d15d:	push   DWORD PTR [ebp+0x8]
1000d160:	mov    BYTE PTR [ecx+0x38],al
1000d163:	mov    BYTE PTR [esi+0x38],0x1
1000d167:	mov    eax,DWORD PTR [ecx+0x8]
1000d16a:	mov    ecx,esi
1000d16c:	mov    BYTE PTR [eax+0x38],0x1
1000d170:	call   0x1000a603
1000d175:	jmp    0x1000d1fc
1000d17a:	cmp    BYTE PTR [ecx+0x38],0x0
1000d17e:	jne    0x1000d194
1000d180:	push   DWORD PTR [ebp+0x8]
1000d183:	mov    BYTE PTR [ecx+0x38],0x1
1000d187:	mov    ecx,esi
1000d189:	mov    BYTE PTR [esi+0x38],0x0
1000d18d:	call   0x1000d75d
1000d192:	mov    ecx,DWORD PTR [esi]
1000d194:	cmp    BYTE PTR [ecx+0x39],0x0
1000d198:	jne    0x1000d1af
1000d19a:	mov    eax,DWORD PTR [ecx+0x8]
1000d19d:	cmp    BYTE PTR [eax+0x38],0x1
1000d1a1:	jne    0x1000d1c5
1000d1a3:	mov    eax,DWORD PTR [ecx]
1000d1a5:	cmp    BYTE PTR [eax+0x38],0x1
1000d1a9:	jne    0x1000d1c5
1000d1ab:	mov    BYTE PTR [ecx+0x38],0x0
1000d1af:	mov    ebx,esi
1000d1b1:	mov    esi,DWORD PTR [esi+0x4]
1000d1b4:	mov    eax,DWORD PTR [ebp+0x8]
1000d1b7:	mov    eax,DWORD PTR [eax+0x4]
1000d1ba:	cmp    ebx,DWORD PTR [eax+0x4]
1000d1bd:	jne    0x1000d0f3
1000d1c3:	jmp    0x1000d1fc
1000d1c5:	mov    eax,DWORD PTR [ecx]
1000d1c7:	cmp    BYTE PTR [eax+0x38],0x1
1000d1cb:	jne    0x1000d1e2
1000d1cd:	mov    eax,DWORD PTR [ecx+0x8]
1000d1d0:	push   DWORD PTR [ebp+0x8]
1000d1d3:	mov    BYTE PTR [eax+0x38],0x1
1000d1d7:	mov    BYTE PTR [ecx+0x38],0x0
1000d1db:	call   0x1000a603
1000d1e0:	mov    ecx,DWORD PTR [esi]
1000d1e2:	mov    al,BYTE PTR [esi+0x38]
1000d1e5:	push   DWORD PTR [ebp+0x8]
1000d1e8:	mov    BYTE PTR [ecx+0x38],al
1000d1eb:	mov    BYTE PTR [esi+0x38],0x1
1000d1ef:	mov    eax,DWORD PTR [ecx]
1000d1f1:	mov    ecx,esi
1000d1f3:	mov    BYTE PTR [eax+0x38],0x1
1000d1f7:	call   0x1000d75d
1000d1fc:	mov    BYTE PTR [ebx+0x38],0x1
1000d200:	lea    ebx,[edi+0xc]
1000d203:	lea    esi,[ebx+0x1c]
1000d206:	call   0x1000d355
1000d20b:	push   0x0
1000d20d:	push   0x1
1000d20f:	mov    ecx,ebx
1000d211:	call   0x100012f0
1000d216:	push   edi
1000d217:	call   0x10042fe2
1000d21c:	pop    ecx
1000d21d:	mov    ecx,DWORD PTR [ebp+0x8]
1000d220:	mov    eax,DWORD PTR [ecx+0x8]
1000d223:	test   eax,eax
1000d225:	jbe    0x1000d22b
1000d227:	dec    eax
1000d228:	mov    DWORD PTR [ecx+0x8],eax
1000d22b:	mov    ecx,DWORD PTR [ebp+0x10]
1000d22e:	mov    eax,DWORD PTR [ebp+0xc]
1000d231:	mov    DWORD PTR [eax],ecx
1000d233:	mov    ecx,DWORD PTR [ebp+0x14]
1000d236:	mov    DWORD PTR [eax+0x4],ecx
1000d239:	call   0x10059ecd
1000d23e:	ret    0x10
1000d241:	push   ebp
1000d242:	mov    ebp,esp
1000d244:	mov    eax,DWORD PTR [edi+0x4]
1000d247:	sub    esp,0x10
1000d24a:	push   ebx
1000d24b:	push   esi
1000d24c:	mov    esi,DWORD PTR [eax+0x4]
1000d24f:	mov    ebx,eax
1000d251:	jmp    0x1000d26b
1000d253:	mov    ecx,DWORD PTR [ebp+0xc]
1000d256:	lea    eax,[esi+0xc]
1000d259:	call   0x10005114
1000d25e:	test   al,al
1000d260:	je     0x1000d267
1000d262:	mov    esi,DWORD PTR [esi+0x8]
1000d265:	jmp    0x1000d26b
1000d267:	mov    ebx,esi
1000d269:	mov    esi,DWORD PTR [esi]
1000d26b:	cmp    BYTE PTR [esi+0x39],0x0
1000d26f:	je     0x1000d253
1000d271:	cmp    ebx,DWORD PTR [edi+0x4]
1000d274:	mov    DWORD PTR [ebp-0x4],ebx
1000d277:	mov    DWORD PTR [ebp-0x8],edi
1000d27a:	je     0x1000d290
1000d27c:	mov    eax,DWORD PTR [ebp+0xc]
1000d27f:	lea    ecx,[ebx+0xc]
1000d282:	call   0x10005114
1000d287:	test   al,al
1000d289:	jne    0x1000d290
1000d28b:	lea    ecx,[ebp-0x8]
1000d28e:	jmp    0x1000d29c
1000d290:	mov    eax,DWORD PTR [edi+0x4]
1000d293:	mov    DWORD PTR [ebp-0xc],eax
1000d296:	mov    DWORD PTR [ebp-0x10],edi
1000d299:	lea    ecx,[ebp-0x10]
1000d29c:	mov    edx,DWORD PTR [ecx]
1000d29e:	mov    eax,DWORD PTR [ebp+0x8]
1000d2a1:	mov    ecx,DWORD PTR [ecx+0x4]
1000d2a4:	pop    esi
1000d2a5:	mov    DWORD PTR [eax],edx
1000d2a7:	mov    DWORD PTR [eax+0x4],ecx
1000d2aa:	pop    ebx
1000d2ab:	leave  
1000d2ac:	ret    0x8
1000d2af:	push   0x10
1000d2b1:	mov    eax,0x100609e9
1000d2b6:	call   0x10059e28
1000d2bb:	mov    ebx,ecx
1000d2bd:	mov    esi,DWORD PTR [ebp+0x8]
1000d2c0:	mov    eax,ebx
1000d2c2:	call   0x1000d370
1000d2c7:	xor    ecx,ecx
1000d2c9:	cmp    eax,ecx
1000d2cb:	mov    DWORD PTR [esi+0x4],ecx
1000d2ce:	mov    DWORD PTR [esi+0x8],ecx
1000d2d1:	mov    DWORD PTR [esi+0xc],ecx
1000d2d4:	je     0x1000d327
1000d2d6:	mov    edi,esi
1000d2d8:	call   0x1000d8ac
1000d2dd:	test   al,al
1000d2df:	je     0x1000d327
1000d2e1:	and    DWORD PTR [ebp-0x4],0x0
1000d2e5:	mov    eax,DWORD PTR [ebx+0x8]
1000d2e8:	cmp    DWORD PTR [ebx+0x4],eax
1000d2eb:	mov    DWORD PTR [ebp-0x18],eax
1000d2ee:	jbe    0x1000d2f5
1000d2f0:	call   0x10043605
1000d2f5:	mov    eax,DWORD PTR [ebx+0x4]
1000d2f8:	cmp    eax,DWORD PTR [ebx+0x8]
1000d2fb:	mov    DWORD PTR [ebp-0x1c],eax
1000d2fe:	jbe    0x1000d305
1000d300:	call   0x10043605
1000d305:	mov    ecx,DWORD PTR [esi+0x4]
1000d308:	mov    edx,DWORD PTR [ebp-0x1c]
1000d30b:	xor    eax,eax
1000d30d:	lea    edi,[ebp-0x14]
1000d310:	stos   BYTE PTR es:[edi],al
1000d311:	push   DWORD PTR [ebp-0x14]
1000d314:	mov    eax,ecx
1000d316:	push   DWORD PTR [ebp+0x8]
1000d319:	push   DWORD PTR [ebp-0x18]
1000d31c:	call   0x1000ddc3
1000d321:	add    esp,0xc
1000d324:	mov    DWORD PTR [esi+0x8],eax
1000d327:	mov    eax,esi
1000d329:	call   0x10059ecd
1000d32e:	ret    0x4
1000d331:	mov    esi,DWORD PTR [ebp+0x8]
1000d334:	mov    eax,DWORD PTR [esi+0x4]
1000d337:	xor    edi,edi
1000d339:	cmp    eax,edi
1000d33b:	je     0x1000d344
1000d33d:	push   eax
1000d33e:	call   0x10042fe2
1000d343:	pop    ecx
1000d344:	push   edi
1000d345:	push   edi
1000d346:	mov    DWORD PTR [esi+0x4],edi
1000d349:	mov    DWORD PTR [esi+0x8],edi
1000d34c:	mov    DWORD PTR [esi+0xc],edi
1000d34f:	call   0x10047942
1000d354:	int3   
1000d355:	mov    eax,DWORD PTR [esi+0x4]
1000d358:	test   eax,eax
1000d35a:	je     0x1000d363
1000d35c:	push   eax
1000d35d:	call   0x10042fe2
1000d362:	pop    ecx
1000d363:	and    DWORD PTR [esi+0x4],0x0
1000d367:	and    DWORD PTR [esi+0x8],0x0
1000d36b:	and    DWORD PTR [esi+0xc],0x0
1000d36f:	ret    
1000d370:	mov    ecx,DWORD PTR [eax+0x4]
1000d373:	test   ecx,ecx
1000d375:	jne    0x1000d37a
1000d377:	xor    eax,eax
1000d379:	ret    
1000d37a:	mov    eax,DWORD PTR [eax+0x8]
1000d37d:	sub    eax,ecx
1000d37f:	push   0x18
1000d381:	cdq    
1000d382:	pop    ecx
1000d383:	idiv   ecx
1000d385:	ret    
1000d386:	mov    eax,esi
1000d388:	call   0x1000d370
1000d38d:	cmp    DWORD PTR [esp+0x4],eax
1000d391:	jb     0x1000d398
1000d393:	call   0x10043605
1000d398:	mov    eax,DWORD PTR [esp+0x4]
1000d39c:	imul   eax,eax,0x18
1000d39f:	add    eax,DWORD PTR [esi+0x4]
1000d3a2:	ret    0x4
1000d3a5:	push   ebp
1000d3a6:	mov    ebp,esp
1000d3a8:	sub    esp,0x10
1000d3ab:	push   ebx
1000d3ac:	push   esi
1000d3ad:	mov    esi,eax
1000d3af:	push   edi
1000d3b0:	mov    edi,DWORD PTR [esi+0x4]
1000d3b3:	test   edi,edi
1000d3b5:	jne    0x1000d3bb
1000d3b7:	xor    ebx,ebx
1000d3b9:	jmp    0x1000d3c8
1000d3bb:	mov    eax,DWORD PTR [esi+0xc]
1000d3be:	sub    eax,edi
1000d3c0:	push   0x18
1000d3c2:	cdq    
1000d3c3:	pop    ecx
1000d3c4:	idiv   ecx
1000d3c6:	mov    ebx,eax
1000d3c8:	mov    eax,esi
1000d3ca:	call   0x1000d370
1000d3cf:	cmp    eax,ebx
1000d3d1:	jae    0x1000d3e5
1000d3d3:	push   DWORD PTR [ebp+0x8]
1000d3d6:	push   0x1
1000d3d8:	push   DWORD PTR [esi+0x8]
1000d3db:	call   0x1000d8d5
1000d3e0:	mov    DWORD PTR [esi+0x8],eax
1000d3e3:	jmp    0x1000d3ff
1000d3e5:	mov    ebx,DWORD PTR [esi+0x8]
1000d3e8:	cmp    edi,ebx
1000d3ea:	jbe    0x1000d3f1
1000d3ec:	call   0x10043605
1000d3f1:	push   ebx
1000d3f2:	push   esi
1000d3f3:	push   DWORD PTR [ebp+0x8]
1000d3f6:	lea    eax,[ebp-0xc]
1000d3f9:	push   eax
1000d3fa:	call   0x1000d835
1000d3ff:	pop    edi
1000d400:	pop    esi
1000d401:	pop    ebx
1000d402:	leave  
1000d403:	ret    0x4
1000d406:	push   ebp
1000d407:	mov    ebp,esp
1000d409:	push   ecx
1000d40a:	mov    edx,DWORD PTR [ebp+0x10]
1000d40d:	mov    eax,DWORD PTR [ebx+0x8]
1000d410:	add    edx,0x18
1000d413:	cmp    edx,eax
1000d415:	je     0x1000d436
1000d417:	lea    ecx,[edx-0x18]
1000d41a:	push   esi
1000d41b:	mov    DWORD PTR [ebp-0x4],ecx
1000d41e:	push   edi
1000d41f:	mov    edi,DWORD PTR [ebp-0x4]
1000d422:	add    DWORD PTR [ebp-0x4],0x18
1000d426:	mov    esi,edx
1000d428:	push   0x6
1000d42a:	add    edx,0x18
1000d42d:	cmp    edx,eax
1000d42f:	pop    ecx
1000d430:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d432:	jne    0x1000d41f
1000d434:	pop    edi
1000d435:	pop    esi
1000d436:	mov    ecx,DWORD PTR [ebp+0xc]
1000d439:	mov    eax,DWORD PTR [ebp+0x8]
1000d43c:	add    DWORD PTR [ebx+0x8],0xffffffe8
1000d440:	mov    DWORD PTR [eax],ecx
1000d442:	mov    ecx,DWORD PTR [ebp+0x10]
1000d445:	mov    DWORD PTR [eax+0x4],ecx
1000d448:	leave  
1000d449:	ret    0xc
1000d44c:	cmp    DWORD PTR [esi],0x0
1000d44f:	jne    0x1000d456
1000d451:	call   0x10043605
1000d456:	mov    eax,DWORD PTR [esi]
1000d458:	mov    ecx,DWORD PTR [esi+0x4]
1000d45b:	cmp    ecx,DWORD PTR [eax+0x8]
1000d45e:	jb     0x1000d465
1000d460:	call   0x10043605
1000d465:	mov    eax,DWORD PTR [esi+0x4]
1000d468:	ret    
1000d469:	push   ebx
1000d46a:	mov    ebx,DWORD PTR [eax+0x4]
1000d46d:	push   esi
1000d46e:	mov    esi,DWORD PTR [eax]
1000d470:	test   esi,esi
1000d472:	push   edi
1000d473:	mov    edi,ecx
1000d475:	jne    0x1000d47c
1000d477:	call   0x10043605
1000d47c:	imul   edi,edi,0x18
1000d47f:	add    edi,ebx
1000d481:	cmp    edi,DWORD PTR [esi+0x8]
1000d484:	ja     0x1000d48b
1000d486:	cmp    edi,DWORD PTR [esi+0x4]
1000d489:	jae    0x1000d490
1000d48b:	call   0x10043605
1000d490:	mov    eax,DWORD PTR [esp+0x10]
1000d494:	mov    DWORD PTR [eax+0x4],edi
1000d497:	pop    edi
1000d498:	mov    DWORD PTR [eax],esi
1000d49a:	pop    esi
1000d49b:	pop    ebx
1000d49c:	ret    0x4
1000d49f:	push   esi
1000d4a0:	mov    esi,DWORD PTR [eax]
1000d4a2:	test   esi,esi
1000d4a4:	je     0x1000d4b3
1000d4a6:	push   esi
1000d4a7:	call   0x1000cae6
1000d4ac:	push   esi
1000d4ad:	call   0x10042fe2
1000d4b2:	pop    ecx
1000d4b3:	pop    esi
1000d4b4:	ret    
1000d4b5:	push   0x0
1000d4b7:	mov    ecx,esi
1000d4b9:	mov    DWORD PTR [esi+0x18],0xf
1000d4c0:	call   0x1000141c
1000d4c5:	push   DWORD PTR [esp+0xc]
1000d4c9:	mov    ecx,esi
1000d4cb:	push   DWORD PTR [esp+0xc]
1000d4cf:	push   DWORD PTR [esp+0xc]
1000d4d3:	call   0x10001241
1000d4d8:	mov    eax,esi
1000d4da:	ret    0xc
1000d4dd:	or     eax,0xffffffff
1000d4e0:	sub    eax,DWORD PTR [esi+0x14]
1000d4e3:	cmp    eax,ebx
1000d4e5:	ja     0x1000d4ec
1000d4e7:	call   0x100574b0
1000d4ec:	test   ebx,ebx
1000d4ee:	jbe    0x1000d54c
1000d4f0:	push   edi
1000d4f1:	mov    edi,DWORD PTR [esi+0x14]
1000d4f4:	push   0x0
1000d4f6:	add    edi,ebx
1000d4f8:	push   edi
1000d4f9:	mov    ecx,esi
1000d4fb:	call   0x10001438
1000d500:	test   al,al
1000d502:	je     0x1000d54b
1000d504:	cmp    ebx,0x1
1000d507:	mov    ecx,DWORD PTR [esi+0x14]
1000d50a:	jne    0x1000d523
1000d50c:	cmp    DWORD PTR [esi+0x18],0x10
1000d510:	jb     0x1000d517
1000d512:	mov    eax,DWORD PTR [esi+0x4]
1000d515:	jmp    0x1000d51a
1000d517:	lea    eax,[esi+0x4]
1000d51a:	mov    dl,BYTE PTR [esp+0x8]
1000d51e:	mov    BYTE PTR [eax+ecx*1],dl
1000d521:	jmp    0x1000d543
1000d523:	cmp    DWORD PTR [esi+0x18],0x10
1000d527:	jb     0x1000d52e
1000d529:	mov    eax,DWORD PTR [esi+0x4]
1000d52c:	jmp    0x1000d531
1000d52e:	lea    eax,[esi+0x4]
1000d531:	movsx  edx,BYTE PTR [esp+0x8]
1000d536:	push   ebx
1000d537:	push   edx
1000d538:	add    eax,ecx
1000d53a:	push   eax
1000d53b:	call   0x10045dc0
1000d540:	add    esp,0xc
1000d543:	push   edi
1000d544:	mov    ecx,esi
1000d546:	call   0x1000141c
1000d54b:	pop    edi
1000d54c:	mov    eax,esi
1000d54e:	ret    0x4
1000d551:	push   ebp
1000d552:	mov    ebp,esp
1000d554:	push   ecx
1000d555:	cmp    DWORD PTR [ebp+0x10],0x0
1000d559:	mov    ecx,DWORD PTR [ebp+0x8]
1000d55c:	jne    0x1000d563
1000d55e:	cmp    eax,DWORD PTR [ecx+0x14]
1000d561:	jbe    0x1000d5d0
1000d563:	push   ebx
1000d564:	push   esi
1000d565:	mov    esi,DWORD PTR [ecx+0x14]
1000d568:	cmp    eax,esi
1000d56a:	push   edi
1000d56b:	jae    0x1000d5ca
1000d56d:	sub    esi,eax
1000d56f:	cmp    DWORD PTR [ebp+0x10],esi
1000d572:	ja     0x1000d5ca
1000d574:	xor    edx,edx
1000d576:	inc    edx
1000d577:	sub    edx,DWORD PTR [ebp+0x10]
1000d57a:	add    esi,edx
1000d57c:	cmp    DWORD PTR [ecx+0x18],0x10
1000d580:	jb     0x1000d58c
1000d582:	add    ecx,0x4
1000d585:	mov    DWORD PTR [ebp-0x4],ecx
1000d588:	mov    ecx,DWORD PTR [ecx]
1000d58a:	jmp    0x1000d592
1000d58c:	add    ecx,0x4
1000d58f:	mov    DWORD PTR [ebp-0x4],ecx
1000d592:	lea    ebx,[ecx+eax*1]
1000d595:	jmp    0x1000d5b3
1000d597:	push   DWORD PTR [ebp+0x10]
1000d59a:	push   DWORD PTR [ebp+0xc]
1000d59d:	push   edi
1000d59e:	call   0x10043a74
1000d5a3:	add    esp,0xc
1000d5a6:	test   eax,eax
1000d5a8:	je     0x1000d5d4
1000d5aa:	sub    ebx,edi
1000d5ac:	lea    esi,[esi+ebx*1-0x1]
1000d5b0:	lea    ebx,[edi+0x1]
1000d5b3:	mov    eax,DWORD PTR [ebp+0xc]
1000d5b6:	movsx  eax,BYTE PTR [eax]
1000d5b9:	push   esi
1000d5ba:	push   eax
1000d5bb:	push   ebx
1000d5bc:	call   0x10045d10
1000d5c1:	mov    edi,eax
1000d5c3:	add    esp,0xc
1000d5c6:	test   edi,edi
1000d5c8:	jne    0x1000d597
1000d5ca:	or     eax,0xffffffff
1000d5cd:	pop    edi
1000d5ce:	pop    esi
1000d5cf:	pop    ebx
1000d5d0:	leave  
1000d5d1:	ret    0xc
1000d5d4:	mov    eax,DWORD PTR [ebp+0x8]
1000d5d7:	cmp    DWORD PTR [eax+0x18],0x10
1000d5db:	jb     0x1000d5e4
1000d5dd:	mov    eax,DWORD PTR [ebp-0x4]
1000d5e0:	mov    ecx,DWORD PTR [eax]
1000d5e2:	jmp    0x1000d5e7
1000d5e4:	mov    ecx,DWORD PTR [ebp-0x4]
1000d5e7:	mov    eax,edi
1000d5e9:	sub    eax,ecx
1000d5eb:	jmp    0x1000d5cd
1000d5ed:	mov    eax,DWORD PTR [esi+0x4]
1000d5f0:	test   eax,eax
1000d5f2:	je     0x1000d605
1000d5f4:	push   DWORD PTR [esi+0x8]
1000d5f7:	call   0x1000d905
1000d5fc:	push   DWORD PTR [esi+0x4]
1000d5ff:	call   0x10042fe2
1000d604:	pop    ecx
1000d605:	and    DWORD PTR [esi+0x4],0x0
1000d609:	and    DWORD PTR [esi+0x8],0x0
1000d60d:	and    DWORD PTR [esi+0xc],0x0
1000d611:	ret    
1000d612:	push   0x48
1000d614:	mov    eax,0x100607fe
1000d619:	call   0x10059df5
1000d61e:	mov    edi,ecx
1000d620:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000d627:	jb     0x1000d65b
1000d629:	push   0x1006e0f8
1000d62e:	lea    ecx,[ebp-0x2c]
1000d631:	call   0x100011a7
1000d636:	and    DWORD PTR [ebp-0x4],0x0
1000d63a:	lea    eax,[ebp-0x2c]
1000d63d:	push   eax
1000d63e:	lea    ecx,[ebp-0x54]
1000d641:	call   0x10001077
1000d646:	push   0x100764d0
1000d64b:	lea    eax,[ebp-0x54]
1000d64e:	push   eax
1000d64f:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1000d656:	call   0x10047942
1000d65b:	push   DWORD PTR [ebp+0x10]
1000d65e:	mov    eax,DWORD PTR [esi+0x4]
1000d661:	push   eax
1000d662:	push   edi
1000d663:	push   eax
1000d664:	call   0x1000d9c8
1000d669:	inc    DWORD PTR [esi+0x8]
1000d66c:	mov    ebx,eax
1000d66e:	mov    eax,DWORD PTR [esi+0x4]
1000d671:	cmp    edi,eax
1000d673:	jne    0x1000d682
1000d675:	mov    DWORD PTR [eax+0x4],ebx
1000d678:	mov    eax,DWORD PTR [esi+0x4]
1000d67b:	mov    DWORD PTR [eax],ebx
1000d67d:	mov    eax,DWORD PTR [esi+0x4]
1000d680:	jmp    0x1000d6a0
1000d682:	cmp    BYTE PTR [ebp+0xc],0x0
1000d686:	je     0x1000d695
1000d688:	mov    DWORD PTR [edi],ebx
1000d68a:	mov    eax,DWORD PTR [esi+0x4]
1000d68d:	cmp    edi,DWORD PTR [eax]
1000d68f:	jne    0x1000d6a3
1000d691:	mov    DWORD PTR [eax],ebx
1000d693:	jmp    0x1000d6a3
1000d695:	mov    DWORD PTR [edi+0x8],ebx
1000d698:	mov    eax,DWORD PTR [esi+0x4]
1000d69b:	cmp    edi,DWORD PTR [eax+0x8]
1000d69e:	jne    0x1000d6a3
1000d6a0:	mov    DWORD PTR [eax+0x8],ebx
1000d6a3:	mov    edi,ebx
1000d6a5:	lea    eax,[ebx+0x4]
1000d6a8:	jmp    0x1000d737
1000d6ad:	mov    ecx,DWORD PTR [eax]
1000d6af:	mov    edx,DWORD PTR [ecx+0x4]
1000d6b2:	cmp    ecx,DWORD PTR [edx]
1000d6b4:	jne    0x1000d6eb
1000d6b6:	mov    edx,DWORD PTR [edx+0x8]
1000d6b9:	cmp    BYTE PTR [edx+0x38],0x0
1000d6bd:	je     0x1000d6f3
1000d6bf:	cmp    edi,DWORD PTR [ecx+0x8]
1000d6c2:	jne    0x1000d6cc
1000d6c4:	push   esi
1000d6c5:	mov    edi,ecx
1000d6c7:	call   0x1000a603
1000d6cc:	mov    eax,DWORD PTR [edi+0x4]
1000d6cf:	mov    BYTE PTR [eax+0x38],0x1
1000d6d3:	mov    eax,DWORD PTR [edi+0x4]
1000d6d6:	mov    eax,DWORD PTR [eax+0x4]
1000d6d9:	mov    BYTE PTR [eax+0x38],0x0
1000d6dd:	mov    eax,DWORD PTR [edi+0x4]
1000d6e0:	mov    ecx,DWORD PTR [eax+0x4]
1000d6e3:	push   esi
1000d6e4:	call   0x1000d75d
1000d6e9:	jmp    0x1000d734
1000d6eb:	mov    edx,DWORD PTR [edx]
1000d6ed:	cmp    BYTE PTR [edx+0x38],0x0
1000d6f1:	jne    0x1000d70b
1000d6f3:	mov    BYTE PTR [ecx+0x38],0x1
1000d6f7:	mov    BYTE PTR [edx+0x38],0x1
1000d6fb:	mov    ecx,DWORD PTR [eax]
1000d6fd:	mov    ecx,DWORD PTR [ecx+0x4]
1000d700:	mov    BYTE PTR [ecx+0x38],0x0
1000d704:	mov    eax,DWORD PTR [eax]
1000d706:	mov    edi,DWORD PTR [eax+0x4]
1000d709:	jmp    0x1000d734
1000d70b:	cmp    edi,DWORD PTR [ecx]
1000d70d:	jne    0x1000d717
1000d70f:	push   esi
1000d710:	mov    edi,ecx
1000d712:	call   0x1000d75d
1000d717:	mov    eax,DWORD PTR [edi+0x4]
1000d71a:	mov    BYTE PTR [eax+0x38],0x1
1000d71e:	mov    eax,DWORD PTR [edi+0x4]
1000d721:	mov    eax,DWORD PTR [eax+0x4]
1000d724:	mov    BYTE PTR [eax+0x38],0x0
1000d728:	mov    eax,DWORD PTR [edi+0x4]
1000d72b:	mov    ecx,DWORD PTR [eax+0x4]
1000d72e:	push   esi
1000d72f:	call   0x1000a603
1000d734:	lea    eax,[edi+0x4]
1000d737:	mov    ecx,DWORD PTR [eax]
1000d739:	cmp    BYTE PTR [ecx+0x38],0x0
1000d73d:	je     0x1000d6ad
1000d743:	mov    eax,DWORD PTR [esi+0x4]
1000d746:	mov    eax,DWORD PTR [eax+0x4]
1000d749:	mov    BYTE PTR [eax+0x38],0x1
1000d74d:	mov    eax,DWORD PTR [ebp+0x8]
1000d750:	mov    DWORD PTR [eax+0x4],ebx
1000d753:	mov    DWORD PTR [eax],esi
1000d755:	call   0x10059ecd
1000d75a:	ret    0xc
1000d75d:	mov    eax,DWORD PTR [ecx]
1000d75f:	mov    edx,DWORD PTR [eax+0x8]
1000d762:	mov    DWORD PTR [ecx],edx
1000d764:	mov    edx,DWORD PTR [eax+0x8]
1000d767:	cmp    BYTE PTR [edx+0x39],0x0
1000d76b:	jne    0x1000d770
1000d76d:	mov    DWORD PTR [edx+0x4],ecx
1000d770:	mov    edx,DWORD PTR [ecx+0x4]
1000d773:	mov    DWORD PTR [eax+0x4],edx
1000d776:	mov    edx,DWORD PTR [esp+0x4]
1000d77a:	mov    edx,DWORD PTR [edx+0x4]
1000d77d:	cmp    ecx,DWORD PTR [edx+0x4]
1000d780:	jne    0x1000d787
1000d782:	mov    DWORD PTR [edx+0x4],eax
1000d785:	jmp    0x1000d796
1000d787:	mov    edx,DWORD PTR [ecx+0x4]
1000d78a:	cmp    ecx,DWORD PTR [edx+0x8]
1000d78d:	jne    0x1000d794
1000d78f:	mov    DWORD PTR [edx+0x8],eax
1000d792:	jmp    0x1000d796
1000d794:	mov    DWORD PTR [edx],eax
1000d796:	mov    DWORD PTR [eax+0x8],ecx
1000d799:	mov    DWORD PTR [ecx+0x4],eax
1000d79c:	ret    0x4
1000d79f:	push   ebp
1000d7a0:	mov    ebp,esp
1000d7a2:	and    esp,0xfffffff8
1000d7a5:	push   ecx
1000d7a6:	push   ecx
1000d7a7:	push   ebx
1000d7a8:	push   edi
1000d7a9:	mov    edi,eax
1000d7ab:	mov    eax,DWORD PTR [edi+0x4]
1000d7ae:	mov    ecx,DWORD PTR [eax]
1000d7b0:	push   eax
1000d7b1:	push   edi
1000d7b2:	push   ecx
1000d7b3:	push   edi
1000d7b4:	lea    ebx,[esp+0x18]
1000d7b8:	call   0x1000d91c
1000d7bd:	push   DWORD PTR [edi+0x4]
1000d7c0:	call   0x10042fe2
1000d7c5:	and    DWORD PTR [edi+0x4],0x0
1000d7c9:	and    DWORD PTR [edi+0x8],0x0
1000d7cd:	pop    ecx
1000d7ce:	pop    edi
1000d7cf:	pop    ebx
1000d7d0:	mov    esp,ebp
1000d7d2:	pop    ebp
1000d7d3:	ret    
1000d7d4:	push   ebx
1000d7d5:	xor    ebx,ebx
1000d7d7:	cmp    DWORD PTR [esi],ebx
1000d7d9:	jne    0x1000d7e0
1000d7db:	call   0x10043605
1000d7e0:	mov    eax,DWORD PTR [esi+0x4]
1000d7e3:	cmp    BYTE PTR [eax+0x39],bl
1000d7e6:	je     0x1000d7f5
1000d7e8:	mov    eax,DWORD PTR [eax+0x8]
1000d7eb:	mov    DWORD PTR [esi+0x4],eax
1000d7ee:	cmp    BYTE PTR [eax+0x39],bl
1000d7f1:	je     0x1000d831
1000d7f3:	jmp    0x1000d827
1000d7f5:	mov    ecx,DWORD PTR [eax]
1000d7f7:	cmp    BYTE PTR [ecx+0x39],bl
1000d7fa:	jne    0x1000d817
1000d7fc:	jmp    0x1000d800
1000d7fe:	mov    ecx,eax
1000d800:	mov    eax,DWORD PTR [ecx+0x8]
1000d803:	cmp    BYTE PTR [eax+0x39],bl
1000d806:	je     0x1000d7fe
1000d808:	mov    DWORD PTR [esi+0x4],ecx
1000d80b:	jmp    0x1000d831
1000d80d:	mov    ecx,DWORD PTR [esi+0x4]
1000d810:	cmp    ecx,DWORD PTR [eax]
1000d812:	jne    0x1000d81f
1000d814:	mov    DWORD PTR [esi+0x4],eax
1000d817:	mov    eax,DWORD PTR [eax+0x4]
1000d81a:	cmp    BYTE PTR [eax+0x39],bl
1000d81d:	je     0x1000d80d
1000d81f:	mov    ecx,DWORD PTR [esi+0x4]
1000d822:	cmp    BYTE PTR [ecx+0x39],bl
1000d825:	je     0x1000d82e
1000d827:	call   0x10043605
1000d82c:	jmp    0x1000d831
1000d82e:	mov    DWORD PTR [esi+0x4],eax
1000d831:	mov    eax,esi
1000d833:	pop    ebx
1000d834:	ret    
1000d835:	push   ebp
1000d836:	mov    ebp,esp
1000d838:	push   ebx
1000d839:	push   edi
1000d83a:	mov    eax,esi
1000d83c:	call   0x1000d370
1000d841:	test   eax,eax
1000d843:	jne    0x1000d849
1000d845:	xor    ebx,ebx
1000d847:	jmp    0x1000d873
1000d849:	mov    edi,DWORD PTR [esi+0x4]
1000d84c:	cmp    edi,DWORD PTR [esi+0x8]
1000d84f:	jbe    0x1000d856
1000d851:	call   0x10043605
1000d856:	cmp    DWORD PTR [ebp+0x10],0x0
1000d85a:	je     0x1000d861
1000d85c:	cmp    DWORD PTR [ebp+0x10],esi
1000d85f:	je     0x1000d866
1000d861:	call   0x10043605
1000d866:	mov    eax,DWORD PTR [ebp+0x14]
1000d869:	sub    eax,edi
1000d86b:	push   0x18
1000d86d:	cdq    
1000d86e:	pop    ecx
1000d86f:	idiv   ecx
1000d871:	mov    ebx,eax
1000d873:	push   DWORD PTR [ebp+0x14]
1000d876:	mov    edx,DWORD PTR [ebp+0xc]
1000d879:	push   DWORD PTR [ebp+0x10]
1000d87c:	mov    ecx,esi
1000d87e:	call   0x1000da1a
1000d883:	mov    edi,DWORD PTR [esi+0x4]
1000d886:	cmp    edi,DWORD PTR [esi+0x8]
1000d889:	jbe    0x1000d890
1000d88b:	call   0x10043605
1000d890:	push   DWORD PTR [ebp+0x8]
1000d893:	mov    ecx,ebx
1000d895:	lea    eax,[ebp+0x10]
1000d898:	mov    DWORD PTR [ebp+0x10],esi
1000d89b:	mov    DWORD PTR [ebp+0x14],edi
1000d89e:	call   0x1000d469
1000d8a3:	mov    eax,DWORD PTR [ebp+0x8]
1000d8a6:	pop    edi
1000d8a7:	pop    ebx
1000d8a8:	pop    ebp
1000d8a9:	ret    0x10
1000d8ac:	push   esi
1000d8ad:	mov    esi,eax
1000d8af:	cmp    esi,0xaaaaaaa
1000d8b5:	jbe    0x1000d8bc
1000d8b7:	jmp    0x1000dbd4
1000d8bc:	mov    ecx,esi
1000d8be:	call   0x1000dc13
1000d8c3:	imul   esi,esi,0x18
1000d8c6:	add    esi,eax
1000d8c8:	mov    DWORD PTR [edi+0x4],eax
1000d8cb:	mov    DWORD PTR [edi+0x8],eax
1000d8ce:	mov    DWORD PTR [edi+0xc],esi
1000d8d1:	mov    al,0x1
1000d8d3:	pop    esi
1000d8d4:	ret    
1000d8d5:	push   ebp
1000d8d6:	mov    ebp,esp
1000d8d8:	push   ecx
1000d8d9:	push   edi
1000d8da:	xor    eax,eax
1000d8dc:	lea    edi,[ebp-0x4]
1000d8df:	stos   BYTE PTR es:[edi],al
1000d8e0:	push   DWORD PTR [ebp-0x4]
1000d8e3:	push   DWORD PTR [ebp+0xc]
1000d8e6:	push   DWORD PTR [ebp+0x10]
1000d8e9:	push   DWORD PTR [ebp+0xc]
1000d8ec:	push   DWORD PTR [ebp+0x8]
1000d8ef:	call   0x1000dd97
1000d8f4:	mov    eax,DWORD PTR [ebp+0xc]
1000d8f7:	imul   eax,eax,0x18
1000d8fa:	add    esp,0x14
1000d8fd:	add    eax,DWORD PTR [ebp+0x8]
1000d900:	pop    edi
1000d901:	leave  
1000d902:	ret    0xc
1000d905:	push   esi
1000d906:	mov    esi,eax
1000d908:	jmp    0x1000d912
1000d90a:	call   0x10004996
1000d90f:	add    esi,0x10
1000d912:	cmp    esi,DWORD PTR [esp+0x8]
1000d916:	jne    0x1000d90a
1000d918:	pop    esi
1000d919:	ret    0x4
1000d91c:	push   ebp
1000d91d:	mov    ebp,esp
1000d91f:	mov    eax,DWORD PTR [edi+0x4]
1000d922:	sub    esp,0x14
1000d925:	cmp    DWORD PTR [ebp+0x8],0x0
1000d929:	push   esi
1000d92a:	mov    esi,DWORD PTR [eax]
1000d92c:	je     0x1000d933
1000d92e:	cmp    DWORD PTR [ebp+0x8],edi
1000d931:	je     0x1000d938
1000d933:	call   0x10043605
1000d938:	cmp    DWORD PTR [ebp+0xc],esi
1000d93b:	jne    0x1000d980
1000d93d:	cmp    DWORD PTR [ebp+0x10],0x0
1000d941:	mov    esi,DWORD PTR [edi+0x4]
1000d944:	je     0x1000d94b
1000d946:	cmp    DWORD PTR [ebp+0x10],edi
1000d949:	je     0x1000d950
1000d94b:	call   0x10043605
1000d950:	cmp    DWORD PTR [ebp+0x14],esi
1000d953:	jne    0x1000d980
1000d955:	mov    eax,DWORD PTR [edi+0x4]
1000d958:	push   DWORD PTR [eax+0x4]
1000d95b:	mov    ecx,edi
1000d95d:	call   0x1000dcd4
1000d962:	mov    eax,DWORD PTR [edi+0x4]
1000d965:	mov    DWORD PTR [eax+0x4],eax
1000d968:	mov    eax,DWORD PTR [edi+0x4]
1000d96b:	and    DWORD PTR [edi+0x8],0x0
1000d96f:	mov    DWORD PTR [eax],eax
1000d971:	mov    eax,DWORD PTR [edi+0x4]
1000d974:	mov    DWORD PTR [eax+0x8],eax
1000d977:	mov    eax,DWORD PTR [edi+0x4]
1000d97a:	mov    eax,DWORD PTR [eax]
1000d97c:	mov    DWORD PTR [ebx],edi
1000d97e:	jmp    0x1000d9be
1000d980:	mov    eax,DWORD PTR [ebp+0x8]
1000d983:	test   eax,eax
1000d985:	je     0x1000d98c
1000d987:	cmp    eax,DWORD PTR [ebp+0x10]
1000d98a:	je     0x1000d991
1000d98c:	call   0x10043605
1000d991:	mov    eax,DWORD PTR [ebp+0xc]
1000d994:	cmp    eax,DWORD PTR [ebp+0x14]
1000d997:	mov    ecx,DWORD PTR [ebp+0x8]
1000d99a:	je     0x1000d9bc
1000d99c:	lea    esi,[ebp+0x8]
1000d99f:	mov    DWORD PTR [ebp-0x8],ecx
1000d9a2:	mov    DWORD PTR [ebp-0x4],eax
1000d9a5:	call   0x1000a19a
1000d9aa:	push   DWORD PTR [ebp-0x4]
1000d9ad:	lea    eax,[ebp-0x10]
1000d9b0:	push   DWORD PTR [ebp-0x8]
1000d9b3:	push   eax
1000d9b4:	push   edi
1000d9b5:	call   0x1000cfa1
1000d9ba:	jmp    0x1000d980
1000d9bc:	mov    DWORD PTR [ebx],ecx
1000d9be:	mov    DWORD PTR [ebx+0x4],eax
1000d9c1:	mov    eax,ebx
1000d9c3:	pop    esi
1000d9c4:	leave  
1000d9c5:	ret    0x10
1000d9c8:	push   0xc
1000d9ca:	mov    eax,0x10061504
1000d9cf:	call   0x10059e28
1000d9d4:	push   0x3c
1000d9d6:	call   0x10043196
1000d9db:	mov    esi,eax
1000d9dd:	pop    ecx
1000d9de:	mov    DWORD PTR [ebp-0x14],esi
1000d9e1:	test   esi,esi
1000d9e3:	mov    DWORD PTR [ebp-0x4],0x1
1000d9ea:	je     0x1000d9fd
1000d9ec:	push   DWORD PTR [ebp+0x10]
1000d9ef:	mov    ebx,DWORD PTR [ebp+0x14]
1000d9f2:	push   DWORD PTR [ebp+0xc]
1000d9f5:	push   DWORD PTR [ebp+0x8]
1000d9f8:	call   0x1000dc87
1000d9fd:	mov    eax,esi
1000d9ff:	call   0x10059ecd
1000da04:	ret    0x10
1000da07:	push   DWORD PTR [ebp-0x14]
1000da0a:	call   0x10042fe2
1000da0f:	pop    ecx
1000da10:	push   0x0
1000da12:	push   0x0
1000da14:	call   0x10047942
1000da19:	int3   
1000da1a:	push   0x24
1000da1c:	mov    eax,0x100609ce
1000da21:	call   0x10059e28
1000da26:	mov    ebx,ecx
1000da28:	push   0x6
1000da2a:	pop    ecx
1000da2b:	mov    esi,edx
1000da2d:	lea    edi,[ebp-0x30]
1000da30:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000da32:	mov    ecx,DWORD PTR [ebx+0x4]
1000da35:	test   ecx,ecx
1000da37:	jne    0x1000da3d
1000da39:	xor    edi,edi
1000da3b:	jmp    0x1000da4a
1000da3d:	mov    eax,DWORD PTR [ebx+0xc]
1000da40:	sub    eax,ecx
1000da42:	push   0x18
1000da44:	cdq    
1000da45:	pop    ecx
1000da46:	idiv   ecx
1000da48:	mov    edi,eax
1000da4a:	mov    eax,ebx
1000da4c:	call   0x1000d370
1000da51:	mov    esi,0xaaaaaaa
1000da56:	mov    ecx,esi
1000da58:	sub    ecx,eax
1000da5a:	cmp    ecx,0x1
1000da5d:	jae    0x1000da64
1000da5f:	call   0x1000dbd4
1000da64:	mov    eax,ebx
1000da66:	call   0x1000d370
1000da6b:	inc    eax
1000da6c:	cmp    edi,eax
1000da6e:	jae    0x1000db1f
1000da74:	mov    eax,edi
1000da76:	shr    eax,1
1000da78:	sub    esi,eax
1000da7a:	cmp    esi,edi
1000da7c:	jae    0x1000da82
1000da7e:	xor    edi,edi
1000da80:	jmp    0x1000da84
1000da82:	add    edi,eax
1000da84:	mov    eax,ebx
1000da86:	call   0x1000d370
1000da8b:	inc    eax
1000da8c:	cmp    edi,eax
1000da8e:	jae    0x1000da9a
1000da90:	mov    eax,ebx
1000da92:	call   0x1000d370
1000da97:	mov    edi,eax
1000da99:	inc    edi
1000da9a:	mov    ecx,edi
1000da9c:	call   0x1000dc13
1000daa1:	and    DWORD PTR [ebp-0x4],0x0
1000daa5:	mov    edx,DWORD PTR [ebx+0x4]
1000daa8:	push   eax
1000daa9:	push   DWORD PTR [ebp+0xc]
1000daac:	mov    DWORD PTR [ebp-0x14],eax
1000daaf:	call   0x1000dd73
1000dab4:	lea    ecx,[ebp-0x30]
1000dab7:	push   ecx
1000dab8:	push   0x1
1000daba:	push   eax
1000dabb:	call   0x1000d8d5
1000dac0:	mov    edx,DWORD PTR [ebp+0xc]
1000dac3:	push   eax
1000dac4:	push   DWORD PTR [ebx+0x8]
1000dac7:	call   0x1000dd73
1000dacc:	mov    eax,ebx
1000dace:	call   0x1000d370
1000dad3:	mov    esi,eax
1000dad5:	mov    eax,DWORD PTR [ebx+0x4]
1000dad8:	inc    esi
1000dad9:	test   eax,eax
1000dadb:	je     0x1000daf2
1000dadd:	mov    ecx,DWORD PTR [ebx+0x8]
1000dae0:	jmp    0x1000dae5
1000dae2:	add    eax,0x18
1000dae5:	cmp    eax,ecx
1000dae7:	jne    0x1000dae2
1000dae9:	push   DWORD PTR [ebx+0x4]
1000daec:	call   0x10042fe2
1000daf1:	pop    ecx
1000daf2:	mov    eax,DWORD PTR [ebp-0x14]
1000daf5:	imul   edi,edi,0x18
1000daf8:	imul   esi,esi,0x18
1000dafb:	add    edi,eax
1000dafd:	add    esi,eax
1000daff:	mov    DWORD PTR [ebx+0xc],edi
1000db02:	mov    DWORD PTR [ebx+0x8],esi
1000db05:	mov    DWORD PTR [ebx+0x4],eax
1000db08:	jmp    0x1000dbcc
1000db0d:	push   DWORD PTR [ebp-0x14]
1000db10:	call   0x10042fe2
1000db15:	pop    ecx
1000db16:	push   0x0
1000db18:	push   0x0
1000db1a:	call   0x10047942
1000db1f:	mov    ecx,DWORD PTR [ebx+0x8]
1000db22:	mov    edi,DWORD PTR [ebp+0xc]
1000db25:	mov    eax,ecx
1000db27:	sub    eax,edi
1000db29:	push   0x18
1000db2b:	cdq    
1000db2c:	pop    esi
1000db2d:	idiv   esi
1000db2f:	cmp    eax,0x1
1000db32:	jae    0x1000db83
1000db34:	lea    eax,[edi+0x18]
1000db37:	push   eax
1000db38:	push   ecx
1000db39:	mov    edx,edi
1000db3b:	call   0x1000dd73
1000db40:	mov    DWORD PTR [ebp-0x4],0x2
1000db47:	mov    ecx,DWORD PTR [ebx+0x8]
1000db4a:	lea    eax,[ebp-0x30]
1000db4d:	push   eax
1000db4e:	mov    eax,ecx
1000db50:	sub    eax,edi
1000db52:	cdq    
1000db53:	idiv   esi
1000db55:	xor    edx,edx
1000db57:	inc    edx
1000db58:	sub    edx,eax
1000db5a:	push   edx
1000db5b:	push   ecx
1000db5c:	call   0x1000d8d5
1000db61:	add    DWORD PTR [ebx+0x8],esi
1000db64:	mov    ebx,DWORD PTR [ebx+0x8]
1000db67:	lea    eax,[ebx-0x18]
1000db6a:	cmp    edi,eax
1000db6c:	mov    edx,edi
1000db6e:	je     0x1000dbcc
1000db70:	mov    edi,edx
1000db72:	push   0x6
1000db74:	add    edx,0x18
1000db77:	cmp    edx,eax
1000db79:	pop    ecx
1000db7a:	lea    esi,[ebp-0x30]
1000db7d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000db7f:	jne    0x1000db70
1000db81:	jmp    0x1000dbcc
1000db83:	lea    esi,[ecx-0x18]
1000db86:	push   ecx
1000db87:	push   ecx
1000db88:	mov    edx,esi
1000db8a:	call   0x1000dd73
1000db8f:	mov    DWORD PTR [ebx+0x8],eax
1000db92:	mov    eax,esi
1000db94:	cmp    edi,eax
1000db96:	je     0x1000dbb2
1000db98:	lea    edx,[eax+0x18]
1000db9b:	sub    eax,0x18
1000db9e:	sub    edx,0x18
1000dba1:	cmp    eax,DWORD PTR [ebp+0xc]
1000dba4:	push   0x6
1000dba6:	pop    ecx
1000dba7:	mov    esi,eax
1000dba9:	mov    edi,edx
1000dbab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000dbad:	jne    0x1000db9b
1000dbaf:	mov    edi,DWORD PTR [ebp+0xc]
1000dbb2:	lea    eax,[edi+0x18]
1000dbb5:	cmp    edi,eax
1000dbb7:	mov    edx,edi
1000dbb9:	je     0x1000dbcc
1000dbbb:	mov    edi,edx
1000dbbd:	push   0x6
1000dbbf:	add    edx,0x18
1000dbc2:	cmp    edx,eax
1000dbc4:	pop    ecx
1000dbc5:	lea    esi,[ebp-0x30]
1000dbc8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000dbca:	jne    0x1000dbbb
1000dbcc:	call   0x10059ecd
1000dbd1:	ret    0x8
1000dbd4:	push   0x44
1000dbd6:	mov    eax,0x10060b46
1000dbdb:	call   0x10059df5
1000dbe0:	push   0x1006e0e4
1000dbe5:	lea    ecx,[ebp-0x28]
1000dbe8:	call   0x100011a7
1000dbed:	and    DWORD PTR [ebp-0x4],0x0
1000dbf1:	lea    eax,[ebp-0x28]
1000dbf4:	push   eax
1000dbf5:	lea    ecx,[ebp-0x50]
1000dbf8:	call   0x10001077
1000dbfd:	push   0x100764d0
1000dc02:	lea    eax,[ebp-0x50]
1000dc05:	push   eax
1000dc06:	mov    DWORD PTR [ebp-0x50],0x1006c97c
1000dc0d:	call   0x10047942
1000dc12:	int3   
1000dc13:	push   ebp
1000dc14:	mov    ebp,esp
1000dc16:	sub    esp,0x10
1000dc19:	test   ecx,ecx
1000dc1b:	ja     0x1000dc2b
1000dc1d:	xor    ecx,ecx
1000dc1f:	imul   ecx,ecx,0x18
1000dc22:	push   ecx
1000dc23:	call   0x10043196
1000dc28:	pop    ecx
1000dc29:	leave  
1000dc2a:	ret    
1000dc2b:	or     eax,0xffffffff
1000dc2e:	xor    edx,edx
1000dc30:	div    ecx
1000dc32:	cmp    eax,0x18
1000dc35:	jae    0x1000dc1f
1000dc37:	and    DWORD PTR [ebp-0x4],0x0
1000dc3b:	lea    eax,[ebp-0x4]
1000dc3e:	push   eax
1000dc3f:	lea    ecx,[ebp-0x10]
1000dc42:	call   0x100432d2
1000dc47:	push   0x10076460
1000dc4c:	lea    eax,[ebp-0x10]
1000dc4f:	push   eax
1000dc50:	mov    DWORD PTR [ebp-0x10],0x100675a0
1000dc57:	call   0x10047942
1000dc5c:	int3   
1000dc5d:	push   0x3c
1000dc5f:	call   0x10043196
1000dc64:	xor    edx,edx
1000dc66:	cmp    eax,edx
1000dc68:	pop    ecx
1000dc69:	je     0x1000dc6d
1000dc6b:	mov    DWORD PTR [eax],edx
1000dc6d:	lea    ecx,[eax+0x4]
1000dc70:	cmp    ecx,edx
1000dc72:	je     0x1000dc76
1000dc74:	mov    DWORD PTR [ecx],edx
1000dc76:	lea    ecx,[eax+0x8]
1000dc79:	cmp    ecx,edx
1000dc7b:	je     0x1000dc7f
1000dc7d:	mov    DWORD PTR [ecx],edx
1000dc7f:	mov    BYTE PTR [eax+0x38],0x1
1000dc83:	mov    BYTE PTR [eax+0x39],dl
1000dc86:	ret    
1000dc87:	push   0x0
1000dc89:	mov    eax,0x100617bb
1000dc8e:	call   0x10059df5
1000dc93:	mov    eax,DWORD PTR [ebp+0x8]
1000dc96:	mov    DWORD PTR [esi],eax
1000dc98:	mov    eax,DWORD PTR [ebp+0xc]
1000dc9b:	mov    DWORD PTR [esi+0x4],eax
1000dc9e:	mov    eax,DWORD PTR [ebp+0x10]
1000dca1:	lea    edi,[esi+0xc]
1000dca4:	push   ebx
1000dca5:	mov    ecx,edi
1000dca7:	mov    DWORD PTR [esi+0x8],eax
1000dcaa:	mov    DWORD PTR [ebp+0x8],edi
1000dcad:	call   0x100011c9
1000dcb2:	and    DWORD PTR [ebp-0x4],0x0
1000dcb6:	add    edi,0x1c
1000dcb9:	lea    ecx,[ebx+0x1c]
1000dcbc:	push   edi
1000dcbd:	call   0x1000d2af
1000dcc2:	mov    BYTE PTR [esi+0x38],0x0
1000dcc6:	mov    BYTE PTR [esi+0x39],0x0
1000dcca:	mov    eax,esi
1000dccc:	call   0x10059ecd
1000dcd1:	ret    0xc
1000dcd4:	push   ecx
1000dcd5:	push   ebp
1000dcd6:	mov    ebp,DWORD PTR [esp+0xc]
1000dcda:	cmp    BYTE PTR [ebp+0x39],0x0
1000dcde:	push   edi
1000dcdf:	mov    DWORD PTR [esp+0x8],ecx
1000dce3:	mov    edi,ebp
1000dce5:	jne    0x1000dd1e
1000dce7:	push   ebx
1000dce8:	push   esi
1000dce9:	push   DWORD PTR [edi+0x8]
1000dcec:	mov    ecx,DWORD PTR [esp+0x14]
1000dcf0:	call   0x1000dcd4
1000dcf5:	mov    edi,DWORD PTR [edi]
1000dcf7:	lea    ebx,[ebp+0xc]
1000dcfa:	lea    esi,[ebx+0x1c]
1000dcfd:	call   0x1000d355
1000dd02:	push   0x0
1000dd04:	push   0x1
1000dd06:	mov    ecx,ebx
1000dd08:	call   0x100012f0
1000dd0d:	push   ebp
1000dd0e:	call   0x10042fe2
1000dd13:	cmp    BYTE PTR [edi+0x39],0x0
1000dd17:	pop    ecx
1000dd18:	mov    ebp,edi
1000dd1a:	je     0x1000dce9
1000dd1c:	pop    esi
1000dd1d:	pop    ebx
1000dd1e:	pop    edi
1000dd1f:	pop    ebp
1000dd20:	pop    ecx
1000dd21:	ret    0x4
1000dd24:	push   0x8
1000dd26:	mov    eax,0x100614e4
1000dd2b:	call   0x10059df5
1000dd30:	and    DWORD PTR [ebp-0x14],0x0
1000dd34:	mov    DWORD PTR [ebp-0x10],edi
1000dd37:	xor    esi,esi
1000dd39:	lea    eax,[ebp+0x8]
1000dd3c:	inc    esi
1000dd3d:	push   eax
1000dd3e:	mov    ecx,edi
1000dd40:	mov    DWORD PTR [ebp-0x4],esi
1000dd43:	call   0x100011c9
1000dd48:	lea    eax,[edi+0x1c]
1000dd4b:	push   eax
1000dd4c:	lea    ecx,[ebp+0x24]
1000dd4f:	mov    BYTE PTR [ebp-0x4],0x2
1000dd53:	call   0x1000d2af
1000dd58:	push   0x0
1000dd5a:	push   esi
1000dd5b:	lea    ecx,[ebp+0x8]
1000dd5e:	call   0x100012f0
1000dd63:	lea    esi,[ebp+0x24]
1000dd66:	call   0x1000d355
1000dd6b:	mov    eax,edi
1000dd6d:	call   0x10059ecd
1000dd72:	ret    
1000dd73:	push   ebp
1000dd74:	mov    ebp,esp
1000dd76:	push   ecx
1000dd77:	push   edi
1000dd78:	xor    eax,eax
1000dd7a:	lea    edi,[ebp-0x4]
1000dd7d:	stos   BYTE PTR es:[edi],al
1000dd7e:	push   DWORD PTR [ebp-0x4]
1000dd81:	mov    eax,DWORD PTR [ebp+0xc]
1000dd84:	push   DWORD PTR [ebp+0x8]
1000dd87:	push   DWORD PTR [ebp+0x8]
1000dd8a:	call   0x1000ddc3
1000dd8f:	add    esp,0xc
1000dd92:	pop    edi
1000dd93:	leave  
1000dd94:	ret    0x8
1000dd97:	push   ebp
1000dd98:	mov    ebp,esp
1000dd9a:	xor    eax,eax
1000dd9c:	cmp    DWORD PTR [ebp+0xc],eax
1000dd9f:	jbe    0x1000ddc1
1000dda1:	push   esi
1000dda2:	push   edi
1000dda3:	cmp    DWORD PTR [ebp+0x8],eax
1000dda6:	je     0x1000ddb3
1000dda8:	mov    esi,DWORD PTR [ebp+0x10]
1000ddab:	mov    edi,DWORD PTR [ebp+0x8]
1000ddae:	push   0x6
1000ddb0:	pop    ecx
1000ddb1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ddb3:	dec    DWORD PTR [ebp+0xc]
1000ddb6:	add    DWORD PTR [ebp+0x8],0x18
1000ddba:	cmp    DWORD PTR [ebp+0xc],eax
1000ddbd:	ja     0x1000dda3
1000ddbf:	pop    edi
1000ddc0:	pop    esi
1000ddc1:	pop    ebp
1000ddc2:	ret    
1000ddc3:	cmp    edx,DWORD PTR [esp+0x4]
1000ddc7:	je     0x1000dde6
1000ddc9:	push   esi
1000ddca:	push   edi
1000ddcb:	test   eax,eax
1000ddcd:	je     0x1000ddd8
1000ddcf:	push   0x6
1000ddd1:	pop    ecx
1000ddd2:	mov    esi,edx
1000ddd4:	mov    edi,eax
1000ddd6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ddd8:	add    edx,0x18
1000dddb:	add    eax,0x18
1000ddde:	cmp    edx,DWORD PTR [esp+0xc]
1000dde2:	jne    0x1000ddcb
1000dde4:	pop    edi
1000dde5:	pop    esi
1000dde6:	ret    
1000dde7:	push   0x4
1000dde9:	mov    eax,0x10060ac8
1000ddee:	call   0x10059df5
1000ddf3:	mov    esi,ecx
1000ddf5:	push   0xc
1000ddf7:	call   0x10043196
1000ddfc:	pop    ecx
1000ddfd:	mov    DWORD PTR [ebp-0x10],eax
1000de00:	and    DWORD PTR [ebp-0x4],0x0
1000de04:	test   eax,eax
1000de06:	je     0x1000de27
1000de08:	and    DWORD PTR [eax+0x4],0x0
1000de0c:	cmp    BYTE PTR [ebp+0x8],0x0
1000de10:	mov    DWORD PTR [eax+0x8],0x1
1000de17:	je     0x1000de23
1000de19:	push   esi
1000de1a:	mov    esi,eax
1000de1c:	call   0x1000de91
1000de21:	jmp    0x1000de29
1000de23:	mov    DWORD PTR [eax],esi
1000de25:	jmp    0x1000de29
1000de27:	xor    eax,eax
1000de29:	or     DWORD PTR [ebp-0x4],0xffffffff
1000de2d:	test   eax,eax
1000de2f:	mov    DWORD PTR [edi],eax
1000de31:	jne    0x1000de3d
1000de33:	push   0x8007000e
1000de38:	call   0x10050e90
1000de3d:	mov    eax,edi
1000de3f:	call   0x10059ecd
1000de44:	ret    0x4
1000de47:	push   esi
1000de48:	mov    esi,DWORD PTR [eax]
1000de4a:	xor    eax,eax
1000de4c:	cmp    esi,eax
1000de4e:	je     0x1000de62
1000de50:	cmp    DWORD PTR [esi+0x4],eax
1000de53:	jne    0x1000de5f
1000de55:	push   DWORD PTR [esi]
1000de57:	call   0x10050d30
1000de5c:	mov    DWORD PTR [esi+0x4],eax
1000de5f:	mov    eax,DWORD PTR [esi+0x4]
1000de62:	pop    esi
1000de63:	ret    
1000de64:	push   edi
1000de65:	mov    edi,eax
1000de67:	mov    eax,DWORD PTR [edi]
1000de69:	test   eax,eax
1000de6b:	je     0x1000de83
1000de6d:	cmp    DWORD PTR [eax+0x8],0x1
1000de71:	jne    0x1000de83
1000de73:	push   esi
1000de74:	mov    esi,DWORD PTR [eax]
1000de76:	and    DWORD PTR [eax],0x0
1000de79:	call   0x100025b3
1000de7e:	mov    eax,esi
1000de80:	pop    esi
1000de81:	pop    edi
1000de82:	ret    
1000de83:	push   0x80004003
1000de88:	call   0x10050e90
1000de8d:	xor    eax,eax
1000de8f:	pop    edi
1000de90:	ret    
1000de91:	cmp    DWORD PTR [esp+0x4],0x0
1000de96:	je     0x1000debf
1000de98:	push   DWORD PTR [esp+0x4]
1000de9c:	call   DWORD PTR ds:0x100672a0
1000dea2:	push   eax
1000dea3:	push   DWORD PTR [esp+0x8]
1000dea7:	call   DWORD PTR ds:0x100672b0
1000dead:	test   eax,eax
1000deaf:	mov    DWORD PTR [esi],eax
1000deb1:	jne    0x1000dec2
1000deb3:	push   0x8007000e
1000deb8:	call   0x10050e90
1000debd:	jmp    0x1000dec2
1000debf:	and    DWORD PTR [esi],0x0
1000dec2:	mov    eax,esi
1000dec4:	ret    0x4
1000dec7:	push   0x38
1000dec9:	mov    eax,0x1006338c
1000dece:	call   0x10059df5
1000ded3:	mov    esi,DWORD PTR [ebp+0x8]
1000ded6:	xor    ebx,ebx
1000ded8:	cmp    DWORD PTR [esi+0x8],ebx
1000dedb:	jne    0x1000dee7
1000dedd:	mov    eax,0x80004005
1000dee2:	jmp    0x1000df70
1000dee7:	mov    ecx,DWORD PTR [ebp+0xc]
1000deea:	push   0x1
1000deec:	lea    edi,[ebp+0xc]
1000deef:	call   0x1000dde7
1000def4:	mov    ecx,DWORD PTR [ebp+0x10]
1000def7:	push   0x1
1000def9:	lea    edi,[ebp+0x8]
1000defc:	mov    DWORD PTR [ebp-0x4],ebx
1000deff:	call   0x1000dde7
1000df04:	mov    eax,edi
1000df06:	mov    BYTE PTR [ebp-0x4],0x1
1000df0a:	call   0x1000de47
1000df0f:	push   eax
1000df10:	lea    ecx,[ebp-0x44]
1000df13:	call   0x100011a7
1000df18:	lea    eax,[ebp+0xc]
1000df1b:	mov    BYTE PTR [ebp-0x4],0x2
1000df1f:	call   0x1000de47
1000df24:	push   eax
1000df25:	lea    ecx,[ebp-0x28]
1000df28:	call   0x100011a7
1000df2d:	push   ebx
1000df2e:	lea    eax,[ebp-0x28]
1000df31:	mov    BYTE PTR [ebp-0x4],0x3
1000df35:	mov    edx,DWORD PTR [esi+0x8]
1000df38:	push   eax
1000df39:	lea    ecx,[ebp-0x44]
1000df3c:	call   0x10008298
1000df41:	mov    ecx,DWORD PTR [ebp+0x14]
1000df44:	neg    al
1000df46:	push   ebx
1000df47:	push   0x1
1000df49:	sbb    eax,eax
1000df4b:	mov    WORD PTR [ecx],ax
1000df4e:	lea    ecx,[ebp-0x28]
1000df51:	call   0x100012f0
1000df56:	push   ebx
1000df57:	push   0x1
1000df59:	lea    ecx,[ebp-0x44]
1000df5c:	call   0x100012f0
1000df61:	call   0x100025b3
1000df66:	lea    edi,[ebp+0xc]
1000df69:	call   0x100025b3
1000df6e:	xor    eax,eax
1000df70:	call   0x10059ecd
1000df75:	ret    0x10
1000df78:	push   0x1c
1000df7a:	mov    eax,0x100613cb
1000df7f:	call   0x10059df5
1000df84:	mov    esi,DWORD PTR [ebp+0x8]
1000df87:	cmp    DWORD PTR [esi+0x8],0x0
1000df8b:	jne    0x1000df94
1000df8d:	mov    eax,0x80004005
1000df92:	jmp    0x1000dfe2
1000df94:	mov    ecx,DWORD PTR [ebp+0xc]
1000df97:	push   0x1
1000df99:	lea    edi,[ebp+0x8]
1000df9c:	call   0x1000dde7
1000dfa1:	and    DWORD PTR [ebp-0x4],0x0
1000dfa5:	mov    eax,edi
1000dfa7:	call   0x1000de47
1000dfac:	push   eax
1000dfad:	lea    ecx,[ebp-0x28]
1000dfb0:	call   0x100011a7
1000dfb5:	lea    eax,[ebp-0x28]
1000dfb8:	push   eax
1000dfb9:	mov    BYTE PTR [ebp-0x4],0x1
1000dfbd:	push   DWORD PTR [esi+0x8]
1000dfc0:	call   0x100085a1
1000dfc5:	mov    ecx,DWORD PTR [ebp+0x10]
1000dfc8:	neg    al
1000dfca:	push   0x0
1000dfcc:	push   0x1
1000dfce:	sbb    eax,eax
1000dfd0:	mov    WORD PTR [ecx],ax
1000dfd3:	lea    ecx,[ebp-0x28]
1000dfd6:	call   0x100012f0
1000dfdb:	call   0x100025b3
1000dfe0:	xor    eax,eax
1000dfe2:	call   0x10059ecd
1000dfe7:	ret    0xc
1000dfea:	mov    eax,DWORD PTR [esp+0x4]
1000dfee:	push   edi
1000dfef:	mov    edi,DWORD PTR [eax+0x8]
1000dff2:	test   edi,edi
1000dff4:	jne    0x1000dffd
1000dff6:	mov    eax,0x80004005
1000dffb:	jmp    0x1000e004
1000dffd:	call   0x100086b4
1000e002:	xor    eax,eax
1000e004:	pop    edi
1000e005:	ret    0x4
1000e008:	push   0x38
1000e00a:	mov    eax,0x1006338c
1000e00f:	call   0x10059df5
1000e014:	mov    esi,DWORD PTR [ebp+0x8]
1000e017:	cmp    DWORD PTR [esi+0x8],0x0
1000e01b:	jne    0x1000e027
1000e01d:	mov    eax,0x80004005
1000e022:	jmp    0x1000e0b2
1000e027:	mov    ecx,DWORD PTR [ebp+0xc]
1000e02a:	push   0x1
1000e02c:	lea    edi,[ebp+0xc]
1000e02f:	call   0x1000dde7
1000e034:	mov    ecx,DWORD PTR [ebp+0x10]
1000e037:	and    DWORD PTR [ebp-0x4],0x0
1000e03b:	push   0x1
1000e03d:	lea    edi,[ebp+0x8]
1000e040:	call   0x1000dde7
1000e045:	mov    eax,edi
1000e047:	mov    BYTE PTR [ebp-0x4],0x1
1000e04b:	call   0x1000de47
1000e050:	push   eax
1000e051:	lea    ecx,[ebp-0x44]
1000e054:	call   0x100011a7
1000e059:	lea    eax,[ebp+0xc]
1000e05c:	mov    BYTE PTR [ebp-0x4],0x2
1000e060:	call   0x1000de47
1000e065:	push   eax
1000e066:	lea    ecx,[ebp-0x28]
1000e069:	call   0x100011a7
1000e06e:	lea    eax,[ebp-0x28]
1000e071:	mov    BYTE PTR [ebp-0x4],0x3
1000e075:	mov    edx,DWORD PTR [esi+0x8]
1000e078:	push   eax
1000e079:	lea    ecx,[ebp-0x44]
1000e07c:	call   0x100086ec
1000e081:	mov    ecx,DWORD PTR [ebp+0x14]
1000e084:	neg    al
1000e086:	push   0x0
1000e088:	push   0x1
1000e08a:	sbb    eax,eax
1000e08c:	mov    WORD PTR [ecx],ax
1000e08f:	lea    ecx,[ebp-0x28]
1000e092:	call   0x100012f0
1000e097:	push   0x0
1000e099:	push   0x1
1000e09b:	lea    ecx,[ebp-0x44]
1000e09e:	call   0x100012f0
1000e0a3:	call   0x100025b3
1000e0a8:	lea    edi,[ebp+0xc]
1000e0ab:	call   0x100025b3
1000e0b0:	xor    eax,eax
1000e0b2:	call   0x10059ecd
1000e0b7:	ret    0x10
1000e0ba:	push   0x38
1000e0bc:	mov    eax,0x100614b1
1000e0c1:	call   0x10059df5
1000e0c6:	mov    esi,DWORD PTR [ebp+0x8]
1000e0c9:	xor    ebx,ebx
1000e0cb:	cmp    DWORD PTR [esi+0x8],ebx
1000e0ce:	jne    0x1000e0da
1000e0d0:	mov    eax,0x80004005
1000e0d5:	jmp    0x1000e15b
1000e0da:	mov    ecx,DWORD PTR [ebp+0xc]
1000e0dd:	push   0x1
1000e0df:	lea    edi,[ebp+0xc]
1000e0e2:	call   0x1000dde7
1000e0e7:	mov    eax,edi
1000e0e9:	mov    DWORD PTR [ebp-0x4],ebx
1000e0ec:	call   0x1000de47
1000e0f1:	push   eax
1000e0f2:	lea    ecx,[ebp-0x28]
1000e0f5:	call   0x100011a7
1000e0fa:	push   ebx
1000e0fb:	lea    eax,[ebp-0x28]
1000e0fe:	push   eax
1000e0ff:	lea    eax,[ebp-0x44]
1000e102:	mov    BYTE PTR [ebp-0x4],0x1
1000e106:	push   eax
1000e107:	mov    eax,DWORD PTR [esi+0x8]
1000e10a:	call   0x10008803
1000e10f:	mov    BYTE PTR [ebp-0x4],0x2
1000e113:	cmp    DWORD PTR [eax+0x18],0x10
1000e117:	jb     0x1000e11e
1000e119:	mov    eax,DWORD PTR [eax+0x4]
1000e11c:	jmp    0x1000e121
1000e11e:	add    eax,0x4
1000e121:	push   eax
1000e122:	lea    edi,[ebp+0x8]
1000e125:	call   0x10002458
1000e12a:	push   ebx
1000e12b:	push   0x1
1000e12d:	lea    ecx,[ebp-0x44]
1000e130:	call   0x100012f0
1000e135:	push   ebx
1000e136:	push   0x1
1000e138:	lea    ecx,[ebp-0x28]
1000e13b:	call   0x100012f0
1000e140:	mov    eax,edi
1000e142:	call   0x1000de64
1000e147:	mov    ecx,DWORD PTR [ebp+0x10]
1000e14a:	mov    DWORD PTR [ecx],eax
1000e14c:	call   0x100025b3
1000e151:	lea    edi,[ebp+0xc]
1000e154:	call   0x100025b3
1000e159:	xor    eax,eax
1000e15b:	call   0x10059ecd
1000e160:	ret    0xc
1000e163:	push   esi
1000e164:	mov    esi,eax
1000e166:	call   0x1000e194
1000e16b:	cmp    DWORD PTR [esi],0x0
1000e16e:	je     0x1000e192
1000e170:	push   edi
1000e171:	mov    edi,DWORD PTR [esi]
1000e173:	test   edi,edi
1000e175:	mov    eax,DWORD PTR [edi+0x4]
1000e178:	mov    DWORD PTR [esi],eax
1000e17a:	je     0x1000e18c
1000e17c:	push   DWORD PTR [edi+0x8]
1000e17f:	call   0x10042fe2
1000e184:	push   edi
1000e185:	call   0x10042fe2
1000e18a:	pop    ecx
1000e18b:	pop    ecx
1000e18c:	cmp    DWORD PTR [esi],0x0
1000e18f:	jne    0x1000e171
1000e191:	pop    edi
1000e192:	pop    esi
1000e193:	ret    
1000e194:	push   0x8
1000e196:	mov    eax,0x1006147e
1000e19b:	call   0x10059df5
1000e1a0:	xor    edi,edi
1000e1a2:	cmp    DWORD PTR [esi+0x14],edi
1000e1a5:	je     0x1000e1eb
1000e1a7:	lea    eax,[ebp-0x14]
1000e1aa:	push   eax
1000e1ab:	mov    ebx,esi
1000e1ad:	call   0x1000e30b
1000e1b2:	mov    ecx,DWORD PTR [eax]
1000e1b4:	mov    ebx,ecx
1000e1b6:	mov    DWORD PTR [eax],edi
1000e1b8:	mov    DWORD PTR [ebp-0x10],ebx
1000e1bb:	mov    DWORD PTR [ebp-0x4],edi
1000e1be:	cmp    DWORD PTR [ebp-0x14],edi
1000e1c1:	je     0x1000e1cd
1000e1c3:	mov    edi,DWORD PTR [ebp-0x14]
1000e1c6:	call   0x1000a38e
1000e1cb:	xor    edi,edi
1000e1cd:	cmp    DWORD PTR [ebx+0x18],edi
1000e1d0:	jbe    0x1000e1de
1000e1d2:	mov    ecx,DWORD PTR [esi+0x14]
1000e1d5:	mov    eax,DWORD PTR [ecx]
1000e1d7:	push   ebx
1000e1d8:	mov    DWORD PTR [ebp-0x10],edi
1000e1db:	call   DWORD PTR [eax+0x4]
1000e1de:	cmp    DWORD PTR [ebp-0x10],edi
1000e1e1:	je     0x1000e1eb
1000e1e3:	mov    edi,DWORD PTR [ebp-0x10]
1000e1e6:	call   0x1000a38e
1000e1eb:	call   0x10059ecd
1000e1f0:	ret    
1000e1f1:	push   ebp
1000e1f2:	lea    ebp,[esp-0x10004]
1000e1f9:	mov    eax,0x10004
1000e1fe:	call   0x1004a070
1000e203:	push   0xffffffff
1000e205:	push   0x10062597
1000e20a:	mov    eax,fs:0x0
1000e210:	push   eax
1000e211:	push   ecx
1000e212:	push   ecx
1000e213:	mov    eax,ds:0x100801ac
1000e218:	xor    eax,ebp
1000e21a:	mov    DWORD PTR [ebp+0x10000],eax
1000e220:	push   ebx
1000e221:	push   esi
1000e222:	push   edi
1000e223:	push   eax
1000e224:	lea    eax,[ebp-0xc]
1000e227:	mov    fs:0x0,eax
1000e22d:	mov    esi,ecx
1000e22f:	call   0x1000e194
1000e234:	mov    ecx,DWORD PTR [esi+0x18]
1000e237:	lea    edx,[ebp-0x10]
1000e23a:	push   edx
1000e23b:	xor    ebx,ebx
1000e23d:	push   0x10000
1000e242:	lea    edx,[ebp+0x0]
1000e245:	mov    DWORD PTR [ebp-0x10],ebx
1000e248:	mov    eax,DWORD PTR [ecx]
1000e24a:	push   edx
1000e24b:	call   DWORD PTR [eax+0x4]
1000e24e:	test   al,al
1000e250:	jne    0x1000e255
1000e252:	mov    DWORD PTR [ebp-0x10],ebx
1000e255:	cmp    DWORD PTR [ebp-0x10],ebx
1000e258:	jne    0x1000e260
1000e25a:	mov    BYTE PTR [esi+0x10],0x1
1000e25e:	jmp    0x1000e2c3
1000e260:	push   0xc
1000e262:	call   0x10043196
1000e267:	mov    edi,eax
1000e269:	pop    ecx
1000e26a:	mov    DWORD PTR [ebp-0x14],edi
1000e26d:	cmp    edi,ebx
1000e26f:	mov    DWORD PTR [ebp-0x4],ebx
1000e272:	je     0x1000e296
1000e274:	mov    eax,DWORD PTR [ebp-0x10]
1000e277:	push   eax
1000e278:	mov    DWORD PTR [edi],eax
1000e27a:	mov    DWORD PTR [edi+0x4],ebx
1000e27d:	call   0x100438d7
1000e282:	push   DWORD PTR [edi]
1000e284:	lea    ecx,[ebp+0x0]
1000e287:	push   ecx
1000e288:	push   eax
1000e289:	mov    DWORD PTR [edi+0x8],eax
1000e28c:	call   0x10045340
1000e291:	add    esp,0x10
1000e294:	jmp    0x1000e298
1000e296:	xor    edi,edi
1000e298:	mov    eax,DWORD PTR [esi]
1000e29a:	cmp    eax,ebx
1000e29c:	jne    0x1000e2a8
1000e29e:	mov    DWORD PTR [esi],edi
1000e2a0:	mov    DWORD PTR [esi+0x4],edi
1000e2a3:	jmp    0x1000e2b0
1000e2a5:	mov    eax,DWORD PTR [eax+0x4]
1000e2a8:	cmp    DWORD PTR [eax+0x4],ebx
1000e2ab:	jne    0x1000e2a5
1000e2ad:	mov    DWORD PTR [eax+0x4],edi
1000e2b0:	mov    eax,DWORD PTR [esi+0x4]
1000e2b3:	mov    ecx,DWORD PTR [esi+0x8]
1000e2b6:	cmp    ecx,DWORD PTR [eax]
1000e2b8:	jne    0x1000e2c3
1000e2ba:	mov    eax,DWORD PTR [eax+0x4]
1000e2bd:	mov    DWORD PTR [esi+0x4],eax
1000e2c0:	mov    DWORD PTR [esi+0x8],ebx
1000e2c3:	mov    ecx,DWORD PTR [ebp-0xc]
1000e2c6:	mov    DWORD PTR fs:0x0,ecx
1000e2cd:	pop    ecx
1000e2ce:	pop    edi
1000e2cf:	pop    esi
1000e2d0:	pop    ebx
1000e2d1:	mov    ecx,DWORD PTR [ebp+0x10000]
1000e2d7:	xor    ecx,ebp
1000e2d9:	call   0x10043615
1000e2de:	add    ebp,0x10004
1000e2e4:	leave  
1000e2e5:	ret    
1000e2e6:	cmp    BYTE PTR [esi+0x10],0x0
1000e2ea:	je     0x1000e2ef
1000e2ec:	mov    al,0x1
1000e2ee:	ret    
1000e2ef:	mov    eax,DWORD PTR [esi+0x4]
1000e2f2:	test   eax,eax
1000e2f4:	je     0x1000e300
1000e2f6:	mov    ecx,DWORD PTR [esi+0x8]
1000e2f9:	cmp    ecx,DWORD PTR [eax]
1000e2fb:	jae    0x1000e300
1000e2fd:	xor    al,al
1000e2ff:	ret    
1000e300:	mov    ecx,esi
1000e302:	call   0x1000e1f1
1000e307:	mov    al,BYTE PTR [esi+0x10]
1000e30a:	ret    
1000e30b:	push   0x8
1000e30d:	mov    eax,0x1006145b
1000e312:	call   0x10059df5
1000e317:	xor    esi,esi
1000e319:	mov    DWORD PTR [ebp-0x4],esi
1000e31c:	push   0x24
1000e31e:	mov    DWORD PTR [ebp-0x10],esi
1000e321:	call   0x10043196
1000e326:	pop    ecx
1000e327:	mov    DWORD PTR [ebp-0x14],eax
1000e32a:	xor    edi,edi
1000e32c:	inc    edi
1000e32d:	cmp    eax,esi
1000e32f:	mov    DWORD PTR [ebp-0x4],edi
1000e332:	je     0x1000e33e
1000e334:	push   eax
1000e335:	call   0x100079b2
1000e33a:	mov    ecx,eax
1000e33c:	jmp    0x1000e340
1000e33e:	xor    ecx,ecx
1000e340:	mov    eax,DWORD PTR [ebp+0x8]
1000e343:	mov    DWORD PTR [eax],ecx
1000e345:	mov    DWORD PTR [ebp-0x4],esi
1000e348:	mov    eax,DWORD PTR [ebx+0xc]
1000e34b:	mov    esi,ecx
1000e34d:	mov    DWORD PTR [ebp-0x10],edi
1000e350:	call   0x10007bd7
1000e355:	jmp    0x1000e384
1000e357:	mov    ecx,DWORD PTR [ebx]
1000e359:	mov    edx,DWORD PTR [ecx+0x8]
1000e35c:	mov    eax,DWORD PTR [ebp+0x8]
1000e35f:	mov    eax,DWORD PTR [eax]
1000e361:	mov    edi,DWORD PTR [ecx]
1000e363:	push   edx
1000e364:	call   0x100079fa
1000e369:	mov    esi,DWORD PTR [ebx]
1000e36b:	test   esi,esi
1000e36d:	mov    eax,DWORD PTR [esi+0x4]
1000e370:	mov    DWORD PTR [ebx],eax
1000e372:	je     0x1000e384
1000e374:	push   DWORD PTR [esi+0x8]
1000e377:	call   0x10042fe2
1000e37c:	push   esi
1000e37d:	call   0x10042fe2
1000e382:	pop    ecx
1000e383:	pop    ecx
1000e384:	mov    eax,DWORD PTR [ebx]
1000e386:	cmp    eax,DWORD PTR [ebx+0x4]
1000e389:	jne    0x1000e357
1000e38b:	test   eax,eax
1000e38d:	je     0x1000e41f
1000e393:	mov    edi,DWORD PTR [ebx+0x8]
1000e396:	test   edi,edi
1000e398:	je     0x1000e41f
1000e39e:	mov    eax,DWORD PTR [eax+0x8]
1000e3a1:	mov    ecx,DWORD PTR [ebp+0x8]
1000e3a4:	mov    ecx,DWORD PTR [ecx]
1000e3a6:	push   eax
1000e3a7:	mov    eax,ecx
1000e3a9:	xor    esi,esi
1000e3ab:	call   0x100079fa
1000e3b0:	mov    eax,DWORD PTR [ebx]
1000e3b2:	mov    ecx,DWORD PTR [ebx+0x8]
1000e3b5:	cmp    ecx,DWORD PTR [eax]
1000e3b7:	jae    0x1000e407
1000e3b9:	push   0xc
1000e3bb:	call   0x10043196
1000e3c0:	mov    esi,eax
1000e3c2:	pop    ecx
1000e3c3:	mov    DWORD PTR [ebp-0x14],esi
1000e3c6:	test   esi,esi
1000e3c8:	mov    DWORD PTR [ebp-0x4],0x2
1000e3cf:	je     0x1000e3fd
1000e3d1:	mov    eax,DWORD PTR [ebx]
1000e3d3:	mov    edx,DWORD PTR [eax+0x8]
1000e3d6:	mov    ecx,DWORD PTR [ebx+0x8]
1000e3d9:	mov    eax,DWORD PTR [eax]
1000e3db:	and    DWORD PTR [esi+0x4],0x0
1000e3df:	sub    eax,ecx
1000e3e1:	push   eax
1000e3e2:	lea    edi,[ecx+edx*1]
1000e3e5:	mov    DWORD PTR [esi],eax
1000e3e7:	call   0x100438d7
1000e3ec:	push   DWORD PTR [esi]
1000e3ee:	mov    DWORD PTR [esi+0x8],eax
1000e3f1:	push   edi
1000e3f2:	push   eax
1000e3f3:	call   0x10045340
1000e3f8:	add    esp,0x10
1000e3fb:	jmp    0x1000e3ff
1000e3fd:	xor    esi,esi
1000e3ff:	mov    eax,DWORD PTR [ebx]
1000e401:	mov    eax,DWORD PTR [eax+0x4]
1000e404:	mov    DWORD PTR [esi+0x4],eax
1000e407:	mov    edi,DWORD PTR [ebx]
1000e409:	test   edi,edi
1000e40b:	mov    DWORD PTR [ebx],esi
1000e40d:	je     0x1000e41f
1000e40f:	push   DWORD PTR [edi+0x8]
1000e412:	call   0x10042fe2
1000e417:	push   edi
1000e418:	call   0x10042fe2
1000e41d:	pop    ecx
1000e41e:	pop    ecx
1000e41f:	mov    eax,DWORD PTR [ebx]
1000e421:	and    DWORD PTR [ebx+0x8],0x0
1000e425:	and    DWORD PTR [ebx+0xc],0x0
1000e429:	mov    DWORD PTR [ebx+0x4],eax
1000e42c:	mov    eax,DWORD PTR [ebp+0x8]
1000e42f:	call   0x10059ecd
1000e434:	ret    0x4
1000e437:	push   esi
1000e438:	mov    esi,eax
1000e43a:	call   0x1000e2e6
1000e43f:	test   al,al
1000e441:	jne    0x1000e451
1000e443:	mov    eax,DWORD PTR [esi+0x4]
1000e446:	mov    ecx,DWORD PTR [esi+0x8]
1000e449:	mov    eax,DWORD PTR [eax+0x8]
1000e44c:	mov    al,BYTE PTR [eax+ecx*1]
1000e44f:	pop    esi
1000e450:	ret    
1000e451:	xor    al,al
1000e453:	pop    esi
1000e454:	ret    
1000e455:	push   esi
1000e456:	mov    esi,eax
1000e458:	call   0x1000e2e6
1000e45d:	test   al,al
1000e45f:	je     0x1000e465
1000e461:	xor    al,al
1000e463:	pop    esi
1000e464:	ret    
1000e465:	mov    eax,DWORD PTR [esi+0x4]
1000e468:	test   eax,eax
1000e46a:	je     0x1000e48a
1000e46c:	mov    ecx,DWORD PTR [esi+0x8]
1000e46f:	inc    ecx
1000e470:	cmp    ecx,DWORD PTR [eax]
1000e472:	jb     0x1000e484
1000e474:	mov    eax,DWORD PTR [eax+0x4]
1000e477:	test   eax,eax
1000e479:	je     0x1000e484
1000e47b:	and    DWORD PTR [esi+0x8],0x0
1000e47f:	mov    DWORD PTR [esi+0x4],eax
1000e482:	jmp    0x1000e487
1000e484:	mov    DWORD PTR [esi+0x8],ecx
1000e487:	inc    DWORD PTR [esi+0xc]
1000e48a:	mov    al,0x1
1000e48c:	pop    esi
1000e48d:	ret    
1000e48e:	push   esi
1000e48f:	mov    esi,eax
1000e491:	call   0x1000e2e6
1000e496:	test   al,al
1000e498:	je     0x1000e49e
1000e49a:	xor    eax,eax
1000e49c:	jmp    0x1000e4ec
1000e49e:	mov    eax,DWORD PTR [esi+0x4]
1000e4a1:	mov    ecx,DWORD PTR [esi+0x8]
1000e4a4:	push   edi
1000e4a5:	mov    edi,DWORD PTR [eax]
1000e4a7:	sub    edi,ecx
1000e4a9:	cmp    edi,DWORD PTR [esp+0x10]
1000e4ad:	jbe    0x1000e4b3
1000e4af:	mov    edi,DWORD PTR [esp+0x10]
1000e4b3:	mov    eax,DWORD PTR [eax+0x8]
1000e4b6:	push   edi
1000e4b7:	add    eax,ecx
1000e4b9:	push   eax
1000e4ba:	push   DWORD PTR [esp+0x14]
1000e4be:	call   0x10045340
1000e4c3:	mov    eax,DWORD PTR [esi+0x8]
1000e4c6:	lea    ecx,[edi+eax*1]
1000e4c9:	mov    eax,DWORD PTR [esi+0x4]
1000e4cc:	add    esp,0xc
1000e4cf:	cmp    ecx,DWORD PTR [eax]
1000e4d1:	jb     0x1000e4e3
1000e4d3:	mov    eax,DWORD PTR [eax+0x4]
1000e4d6:	test   eax,eax
1000e4d8:	je     0x1000e4e3
1000e4da:	and    DWORD PTR [esi+0x8],0x0
1000e4de:	mov    DWORD PTR [esi+0x4],eax
1000e4e1:	jmp    0x1000e4e6
1000e4e3:	mov    DWORD PTR [esi+0x8],ecx
1000e4e6:	add    DWORD PTR [esi+0xc],edi
1000e4e9:	mov    eax,edi
1000e4eb:	pop    edi
1000e4ec:	pop    esi
1000e4ed:	ret    0x8
1000e4f0:	push   esi
1000e4f1:	mov    esi,eax
1000e4f3:	call   0x1000e2e6
1000e4f8:	test   al,al
1000e4fa:	je     0x1000e500
1000e4fc:	xor    al,al
1000e4fe:	pop    esi
1000e4ff:	ret    
1000e500:	mov    eax,DWORD PTR [esi+0x4]
1000e503:	xor    ecx,ecx
1000e505:	jmp    0x1000e518
1000e507:	mov    edx,DWORD PTR [eax]
1000e509:	sub    edx,DWORD PTR [esi+0x8]
1000e50c:	add    DWORD PTR [esi+0xc],edx
1000e50f:	mov    eax,DWORD PTR [eax+0x4]
1000e512:	mov    DWORD PTR [esi+0x4],eax
1000e515:	mov    DWORD PTR [esi+0x8],ecx
1000e518:	cmp    DWORD PTR [eax+0x4],ecx
1000e51b:	mov    eax,DWORD PTR [esi+0x4]
1000e51e:	jne    0x1000e507
1000e520:	mov    ecx,DWORD PTR [eax]
1000e522:	sub    ecx,DWORD PTR [esi+0x8]
1000e525:	add    DWORD PTR [esi+0xc],ecx
1000e528:	mov    eax,DWORD PTR [eax]
1000e52a:	mov    DWORD PTR [esi+0x8],eax
1000e52d:	mov    al,0x1
1000e52f:	pop    esi
1000e530:	ret    
1000e531:	push   0x10
1000e533:	mov    eax,0x10064c01
1000e538:	call   0x10059df5
1000e53d:	mov    ebx,ecx
1000e53f:	xor    edi,edi
1000e541:	mov    DWORD PTR [ebp-0x10],edi
1000e544:	mov    DWORD PTR [ebp-0x4],edi
1000e547:	mov    DWORD PTR [ebp-0x14],edi
1000e54a:	mov    DWORD PTR [ebp-0x18],edi
1000e54d:	lea    eax,[ebp-0x18]
1000e550:	push   eax
1000e551:	lea    eax,[ebp-0x14]
1000e554:	push   eax
1000e555:	lea    eax,[ebp-0x10]
1000e558:	push   eax
1000e559:	mov    BYTE PTR [ebp-0x4],0x2
1000e55d:	call   0x1000e5fa
1000e562:	cmp    eax,edi
1000e564:	je     0x1000e58a
1000e566:	mov    esi,eax
1000e568:	lea    eax,[ebp-0x18]
1000e56b:	call   0x1000a128
1000e570:	lea    eax,[ebp-0x14]
1000e573:	call   0x1000a128
1000e578:	lea    eax,[ebp-0x10]
1000e57b:	call   0x1000a128
1000e580:	mov    eax,esi
1000e582:	call   0x10059ecd
1000e587:	ret    0x4
1000e58a:	mov    esi,DWORD PTR [ebx]
1000e58c:	call   0x1000e2e6
1000e591:	test   al,al
1000e593:	je     0x1000e59a
1000e595:	xor    esi,esi
1000e597:	inc    esi
1000e598:	jmp    0x1000e568
1000e59a:	mov    esi,DWORD PTR [ebp+0x8]
1000e59d:	lea    eax,[esi+0x18]
1000e5a0:	push   eax
1000e5a1:	mov    ecx,ebx
1000e5a3:	call   0x1000f0a1
1000e5a8:	cmp    eax,edi
1000e5aa:	jne    0x1000e566
1000e5ac:	push   edi
1000e5ad:	sub    esp,0x1c
1000e5b0:	mov    ecx,esp
1000e5b2:	mov    DWORD PTR [ebp+0x8],esp
1000e5b5:	push   0x1006e4b0
1000e5ba:	call   0x100011a7
1000e5bf:	call   0x1000f250
1000e5c4:	cmp    eax,edi
1000e5c6:	jne    0x1000e566
1000e5c8:	mov    ebx,DWORD PTR [ebp-0x10]
1000e5cb:	mov    DWORD PTR [ebp-0x10],edi
1000e5ce:	mov    edi,esi
1000e5d0:	call   0x1000a14c
1000e5d5:	mov    ebx,DWORD PTR [ebp-0x14]
1000e5d8:	and    DWORD PTR [ebp-0x14],0x0
1000e5dc:	lea    edi,[esi+0x4]
1000e5df:	call   0x1000a14c
1000e5e4:	mov    ebx,DWORD PTR [ebp-0x18]
1000e5e7:	and    DWORD PTR [ebp-0x18],0x0
1000e5eb:	lea    edi,[esi+0x8]
1000e5ee:	call   0x1000a14c
1000e5f3:	xor    esi,esi
1000e5f5:	jmp    0x1000e568
1000e5fa:	push   0x50
1000e5fc:	mov    eax,0x10064bc4
1000e601:	call   0x10059e5e
1000e606:	mov    eax,DWORD PTR [ebp+0x8]
1000e609:	mov    DWORD PTR [ebp-0x58],eax
1000e60c:	mov    eax,DWORD PTR [ebp+0xc]
1000e60f:	mov    edi,ecx
1000e611:	mov    DWORD PTR [ebp-0x5c],eax
1000e614:	mov    eax,DWORD PTR [ebp+0x10]
1000e617:	push   0x0
1000e619:	lea    ecx,[ebp-0x2c]
1000e61c:	mov    DWORD PTR [ebp-0x4c],edi
1000e61f:	mov    DWORD PTR [ebp-0x54],eax
1000e622:	mov    DWORD PTR [ebp-0x14],0xf
1000e629:	call   0x1000141c
1000e62e:	and    DWORD PTR [ebp-0x4],0x0
1000e632:	mov    eax,DWORD PTR [edi]
1000e634:	mov    ebx,DWORD PTR [eax+0xc]
1000e637:	push   0x1
1000e639:	lea    eax,[ebp-0x2c]
1000e63c:	push   eax
1000e63d:	call   0x1000f561
1000e642:	test   eax,eax
1000e644:	mov    ecx,DWORD PTR [edi]
1000e646:	mov    edi,DWORD PTR [ecx+0xc]
1000e649:	je     0x1000e660
1000e64b:	mov    esi,eax
1000e64d:	push   0x0
1000e64f:	push   0x1
1000e651:	lea    ecx,[ebp-0x2c]
1000e654:	call   0x100012f0
1000e659:	mov    eax,esi
1000e65b:	jmp    0x1000e7a9
1000e660:	push   0x1006ea34
1000e665:	push   0x3
1000e667:	mov    ecx,0x1006e644
1000e66c:	call   0x100042b4
1000e671:	push   eax
1000e672:	lea    esi,[ebp-0x2c]
1000e675:	call   0x10006825
1000e67a:	add    esp,0xc
1000e67d:	test   al,al
1000e67f:	jne    0x1000e6a4
1000e681:	push   0x1006ea70
1000e686:	push   0x4
1000e688:	mov    ecx,0x1006eaa4
1000e68d:	call   0x100042b4
1000e692:	push   eax
1000e693:	call   0x10006825
1000e698:	add    esp,0xc
1000e69b:	test   al,al
1000e69d:	jne    0x1000e6a4
1000e69f:	xor    esi,esi
1000e6a1:	inc    esi
1000e6a2:	jmp    0x1000e64d
1000e6a4:	push   0x24
1000e6a6:	call   0x10043196
1000e6ab:	pop    ecx
1000e6ac:	mov    DWORD PTR [ebp-0x50],eax
1000e6af:	test   eax,eax
1000e6b1:	mov    BYTE PTR [ebp-0x4],0x1
1000e6b5:	je     0x1000e6c7
1000e6b7:	sub    edi,ebx
1000e6b9:	push   edi
1000e6ba:	push   ebx
1000e6bb:	lea    ecx,[ebp-0x2c]
1000e6be:	push   ecx
1000e6bf:	push   eax
1000e6c0:	call   0x10007c23
1000e6c5:	jmp    0x1000e6c9
1000e6c7:	xor    eax,eax
1000e6c9:	mov    edi,DWORD PTR [ebp-0x58]
1000e6cc:	mov    ebx,eax
1000e6ce:	call   0x1000a14c
1000e6d3:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e6d7:	push   0x0
1000e6d9:	push   0x1
1000e6db:	lea    ecx,[ebp-0x2c]
1000e6de:	call   0x100012f0
1000e6e3:	mov    esi,DWORD PTR [ebp-0x4c]
1000e6e6:	mov    edi,esi
1000e6e8:	call   0x1000f2df
1000e6ed:	test   eax,eax
1000e6ef:	jne    0x1000e7a9
1000e6f5:	push   eax
1000e6f6:	lea    ecx,[ebp-0x48]
1000e6f9:	mov    DWORD PTR [ebp-0x30],0xf
1000e700:	call   0x1000141c
1000e705:	mov    DWORD PTR [ebp-0x4],0x2
1000e70c:	mov    eax,DWORD PTR [esi]
1000e70e:	mov    ebx,DWORD PTR [eax+0xc]
1000e711:	lea    eax,[ebp-0x48]
1000e714:	push   eax
1000e715:	call   0x1000f62c
1000e71a:	test   eax,eax
1000e71c:	mov    ecx,DWORD PTR [esi]
1000e71e:	mov    edi,DWORD PTR [ecx+0xc]
1000e721:	mov    DWORD PTR [ebp-0x4c],eax
1000e724:	je     0x1000e737
1000e726:	push   0x0
1000e728:	push   0x1
1000e72a:	lea    ecx,[ebp-0x48]
1000e72d:	call   0x100012f0
1000e732:	mov    eax,DWORD PTR [ebp-0x4c]
1000e735:	jmp    0x1000e7a9
1000e737:	push   0x24
1000e739:	call   0x10043196
1000e73e:	pop    ecx
1000e73f:	mov    DWORD PTR [ebp-0x50],eax
1000e742:	test   eax,eax
1000e744:	mov    BYTE PTR [ebp-0x4],0x3
1000e748:	je     0x1000e75a
1000e74a:	sub    edi,ebx
1000e74c:	push   edi
1000e74d:	push   ebx
1000e74e:	lea    ecx,[ebp-0x48]
1000e751:	push   ecx
1000e752:	push   eax
1000e753:	call   0x10007c23
1000e758:	jmp    0x1000e75c
1000e75a:	xor    eax,eax
1000e75c:	mov    edi,DWORD PTR [ebp-0x5c]
1000e75f:	mov    ebx,eax
1000e761:	call   0x1000a14c
1000e766:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e76a:	push   0x0
1000e76c:	push   0x1
1000e76e:	lea    ecx,[ebp-0x48]
1000e771:	call   0x100012f0
1000e776:	mov    edi,esi
1000e778:	call   0x1000f2df
1000e77d:	test   eax,eax
1000e77f:	jne    0x1000e7a9
1000e781:	push   DWORD PTR [ebp-0x54]
1000e784:	mov    ecx,esi
1000e786:	call   0x1000f30d
1000e78b:	test   eax,eax
1000e78d:	jne    0x1000e7a9
1000e78f:	push   eax
1000e790:	sub    esp,0x1c
1000e793:	mov    ecx,esp
1000e795:	mov    DWORD PTR [ebp-0x50],esp
1000e798:	push   0x1006e4b0
1000e79d:	call   0x100011a7
1000e7a2:	mov    ebx,esi
1000e7a4:	call   0x1000f250
1000e7a9:	call   0x10059ee1
1000e7ae:	ret    0xc
1000e7b1:	push   0x80
1000e7b6:	mov    eax,0x10064209
1000e7bb:	call   0x10059e5e
1000e7c0:	mov    eax,DWORD PTR [ebp+0x8]
1000e7c3:	mov    edi,ecx
1000e7c5:	push   0x1006eaac
1000e7ca:	mov    esi,0x1006eae4
1000e7cf:	xor    ebx,ebx
1000e7d1:	push   0xe
1000e7d3:	mov    ecx,esi
1000e7d5:	mov    DWORD PTR [ebp-0x38],eax
1000e7d8:	mov    DWORD PTR [ebp-0x34],ebx
1000e7db:	call   0x100042b4
1000e7e0:	pop    ecx
1000e7e1:	pop    ecx
1000e7e2:	push   eax
1000e7e3:	lea    ecx,[ebp-0x54]
1000e7e6:	call   0x100011a7
1000e7eb:	lea    eax,[ebp-0x54]
1000e7ee:	add    edi,0x18
1000e7f1:	push   eax
1000e7f2:	mov    eax,edi
1000e7f4:	call   0x1000887c
1000e7f9:	push   ebx
1000e7fa:	push   0x1
1000e7fc:	lea    ecx,[ebp-0x54]
1000e7ff:	mov    BYTE PTR [ebp-0x2d],al
1000e802:	call   0x100012f0
1000e807:	cmp    BYTE PTR [ebp-0x2d],bl
1000e80a:	je     0x1000e8a1
1000e810:	push   ebx
1000e811:	lea    ecx,[ebp-0x2c]
1000e814:	mov    DWORD PTR [ebp-0x14],0xf
1000e81b:	call   0x1000141c
1000e820:	push   0x1006eaf8
1000e825:	push   0xe
1000e827:	mov    ecx,esi
1000e829:	mov    DWORD PTR [ebp-0x4],ebx
1000e82c:	call   0x100042b4
1000e831:	pop    ecx
1000e832:	pop    ecx
1000e833:	push   eax
1000e834:	lea    ecx,[ebp-0x70]
1000e837:	call   0x100011a7
1000e83c:	push   ebx
1000e83d:	lea    eax,[ebp-0x70]
1000e840:	push   eax
1000e841:	lea    eax,[ebp-0x8c]
1000e847:	push   eax
1000e848:	mov    eax,edi
1000e84a:	mov    BYTE PTR [ebp-0x4],0x1
1000e84e:	call   0x10008803
1000e853:	cmp    DWORD PTR [eax+0x18],0x10
1000e857:	jb     0x1000e85e
1000e859:	mov    eax,DWORD PTR [eax+0x4]
1000e85c:	jmp    0x1000e861
1000e85e:	add    eax,0x4
1000e861:	push   eax
1000e862:	call   0x10045fb3
1000e867:	pop    ecx
1000e868:	push   ebx
1000e869:	push   0x1
1000e86b:	lea    ecx,[ebp-0x8c]
1000e871:	mov    esi,eax
1000e873:	call   0x100012f0
1000e878:	push   ebx
1000e879:	push   0x1
1000e87b:	lea    ecx,[ebp-0x70]
1000e87e:	mov    BYTE PTR [ebp-0x4],bl
1000e881:	call   0x100012f0
1000e886:	push   esi
1000e887:	lea    eax,[ebp-0x2c]
1000e88a:	push   eax
1000e88b:	push   DWORD PTR [ebp-0x38]
1000e88e:	call   0x1000f6ba
1000e893:	push   ebx
1000e894:	push   0x1
1000e896:	lea    ecx,[ebp-0x2c]
1000e899:	mov    DWORD PTR [ebp-0x34],eax
1000e89c:	call   0x100012f0
1000e8a1:	mov    eax,DWORD PTR [ebp-0x34]
1000e8a4:	call   0x10059ee1
1000e8a9:	ret    0x4
1000e8ac:	push   0x40
1000e8ae:	mov    eax,0x10062568
1000e8b3:	call   0x10059e5e
1000e8b8:	mov    eax,DWORD PTR [ebp+0x8]
1000e8bb:	mov    eax,DWORD PTR [eax]
1000e8bd:	mov    edi,ecx
1000e8bf:	lea    ecx,[ebp-0x4c]
1000e8c2:	push   ecx
1000e8c3:	call   0x10007ca8
1000e8c8:	mov    esi,eax
1000e8ca:	and    DWORD PTR [ebp-0x4],0x0
1000e8ce:	push   0x1006eb38
1000e8d3:	push   0x4
1000e8d5:	mov    ecx,0x1006eb74
1000e8da:	call   0x100042b4
1000e8df:	push   eax
1000e8e0:	call   0x10006825
1000e8e5:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e8e9:	add    esp,0xc
1000e8ec:	xor    ebx,ebx
1000e8ee:	push   0x0
1000e8f0:	inc    ebx
1000e8f1:	push   ebx
1000e8f2:	lea    ecx,[ebp-0x4c]
1000e8f5:	mov    BYTE PTR [ebp-0x2d],al
1000e8f8:	call   0x100012f0
1000e8fd:	cmp    BYTE PTR [ebp-0x2d],0x0
1000e901:	jne    0x1000e979
1000e903:	mov    eax,DWORD PTR [edi+0x4]
1000e906:	lea    ecx,[ebp-0x2c]
1000e909:	push   ecx
1000e90a:	call   0x10007ca8
1000e90f:	xor    edi,edi
1000e911:	lea    eax,[ebp-0x2c]
1000e914:	mov    DWORD PTR [ebp-0x4],ebx
1000e917:	call   0x10012206
1000e91c:	cmp    BYTE PTR [eax],0x31
1000e91f:	je     0x1000e96e
1000e921:	push   0x1006eb7c
1000e926:	push   0x3
1000e928:	mov    ecx,0x1006ebbc
1000e92d:	call   0x100042b4
1000e932:	push   eax
1000e933:	lea    esi,[ebp-0x2c]
1000e936:	call   0x10006825
1000e93b:	add    esp,0xc
1000e93e:	test   al,al
1000e940:	jne    0x1000e96e
1000e942:	push   0x1006ebc0
1000e947:	push   0x3
1000e949:	mov    ecx,0x1006ebec
1000e94e:	call   0x100042b4
1000e953:	push   eax
1000e954:	call   0x10006825
1000e959:	add    esp,0xc
1000e95c:	test   al,al
1000e95e:	jne    0x1000e96e
1000e960:	push   0x0
1000e962:	push   ebx
1000e963:	mov    ecx,esi
1000e965:	call   0x100012f0
1000e96a:	mov    al,bl
1000e96c:	jmp    0x1000e97b
1000e96e:	push   0x0
1000e970:	push   ebx
1000e971:	lea    ecx,[ebp-0x2c]
1000e974:	call   0x100012f0
1000e979:	xor    al,al
1000e97b:	call   0x10059ee1
1000e980:	ret    
1000e981:	push   0xc
1000e983:	mov    eax,0x10064b85
1000e988:	call   0x10059df5
1000e98d:	xor    edi,edi
1000e98f:	mov    DWORD PTR [ebp-0x18],edi
1000e992:	mov    DWORD PTR [ebp-0x4],edi
1000e995:	mov    DWORD PTR [ebp-0x14],edi
1000e998:	mov    DWORD PTR [ebp-0x10],edi
1000e99b:	mov    esi,DWORD PTR [ebp+0x8]
1000e99e:	lea    eax,[ebp-0x10]
1000e9a1:	push   eax
1000e9a2:	lea    eax,[ebp-0x18]
1000e9a5:	push   eax
1000e9a6:	lea    ecx,[ebp-0x14]
1000e9a9:	mov    BYTE PTR [ebp-0x4],0x2
1000e9ad:	call   0x1000eeef
1000e9b2:	mov    esi,eax
1000e9b4:	cmp    esi,edi
1000e9b6:	jne    0x1000ea3d
1000e9bc:	mov    esi,DWORD PTR [ebp+0xc]
1000e9bf:	mov    ecx,DWORD PTR [ebp+0x8]
1000e9c2:	lea    eax,[esi+0x20]
1000e9c5:	push   eax
1000e9c6:	call   0x1000f0a1
1000e9cb:	mov    ebx,eax
1000e9cd:	cmp    ebx,edi
1000e9cf:	je     0x1000e9ed
1000e9d1:	lea    eax,[ebp-0x10]
1000e9d4:	call   0x1000a128
1000e9d9:	lea    eax,[ebp-0x14]
1000e9dc:	call   0x1000a128
1000e9e1:	lea    eax,[ebp-0x18]
1000e9e4:	call   0x1000a128
1000e9e9:	mov    eax,ebx
1000e9eb:	jmp    0x1000ea57
1000e9ed:	mov    ebx,DWORD PTR [ebp-0x18]
1000e9f0:	mov    DWORD PTR [ebp-0x18],edi
1000e9f3:	mov    edi,esi
1000e9f5:	call   0x1000a14c
1000e9fa:	mov    ebx,DWORD PTR [ebp-0x14]
1000e9fd:	and    DWORD PTR [ebp-0x14],0x0
1000ea01:	lea    edi,[esi+0x4]
1000ea04:	call   0x1000a14c
1000ea09:	mov    ebx,DWORD PTR [ebp-0x10]
1000ea0c:	and    DWORD PTR [ebp-0x10],0x0
1000ea10:	add    esi,0x8
1000ea13:	mov    edi,esi
1000ea15:	call   0x1000a14c
1000ea1a:	xor    esi,esi
1000ea1c:	push   esi
1000ea1d:	sub    esp,0x1c
1000ea20:	mov    ecx,esp
1000ea22:	mov    DWORD PTR [ebp+0xc],esp
1000ea25:	push   0x1006e4b0
1000ea2a:	call   0x100011a7
1000ea2f:	mov    ebx,DWORD PTR [ebp+0x8]
1000ea32:	call   0x1000f250
1000ea37:	cmp    eax,esi
1000ea39:	je     0x1000ea3d
1000ea3b:	mov    esi,eax
1000ea3d:	lea    eax,[ebp-0x10]
1000ea40:	call   0x1000a128
1000ea45:	lea    eax,[ebp-0x14]
1000ea48:	call   0x1000a128
1000ea4d:	lea    eax,[ebp-0x18]
1000ea50:	call   0x1000a128
1000ea55:	mov    eax,esi
1000ea57:	call   0x10059ecd
1000ea5c:	ret    0x8
1000ea5f:	push   ebp
1000ea60:	mov    ebp,esp
1000ea62:	and    esp,0xfffffff8
1000ea65:	push   0xffffffff
1000ea67:	push   0x10064b3f
1000ea6c:	mov    eax,fs:0x0
1000ea72:	push   eax
1000ea73:	sub    esp,0xc8
1000ea79:	mov    eax,ds:0x100801ac
1000ea7e:	xor    eax,esp
1000ea80:	mov    DWORD PTR [esp+0xc0],eax
1000ea87:	push   ebx
1000ea88:	push   esi
1000ea89:	push   edi
1000ea8a:	mov    eax,ds:0x100801ac
1000ea8f:	xor    eax,esp
1000ea91:	push   eax
1000ea92:	lea    eax,[esp+0xd8]
1000ea99:	mov    fs:0x0,eax
1000ea9f:	mov    eax,DWORD PTR [ebp+0x8]
1000eaa2:	mov    esi,edx
1000eaa4:	mov    edi,ecx
1000eaa6:	xor    ebx,ebx
1000eaa8:	push   eax
1000eaa9:	mov    ecx,esi
1000eaab:	mov    DWORD PTR [esp+0x24],edi
1000eaaf:	mov    DWORD PTR [esp+0x20],esi
1000eab3:	mov    DWORD PTR [esp+0x1c],ebx
1000eab7:	call   0x1000e8ac
1000eabc:	test   al,al
1000eabe:	pop    ecx
1000eabf:	je     0x1000eec7
1000eac5:	push   ebx
1000eac6:	lea    ecx,[esp+0xb8]
1000eacd:	mov    DWORD PTR [esp+0xd0],0xf
1000ead8:	call   0x1000141c
1000eadd:	mov    DWORD PTR [esp+0xe0],ebx
1000eae4:	mov    eax,DWORD PTR [edi]
1000eae6:	mov    eax,DWORD PTR [eax+0xc]
1000eae9:	lea    ecx,[esp+0x44]
1000eaed:	mov    DWORD PTR [esp+0x24],eax
1000eaf1:	mov    eax,DWORD PTR [esi]
1000eaf3:	push   ecx
1000eaf4:	call   0x10007ca8
1000eaf9:	mov    esi,eax
1000eafb:	push   0x1006ebf0
1000eb00:	push   0x3
1000eb02:	mov    ecx,0x1006e610
1000eb07:	mov    BYTE PTR [esp+0xe8],0x1
1000eb0f:	call   0x100042b4
1000eb14:	push   eax
1000eb15:	call   0x10006825
1000eb1a:	add    esp,0xc
1000eb1d:	xor    edi,edi
1000eb1f:	push   ebx
1000eb20:	inc    edi
1000eb21:	push   edi
1000eb22:	lea    ecx,[esp+0x4c]
1000eb26:	mov    BYTE PTR [esp+0x1f],al
1000eb2a:	mov    BYTE PTR [esp+0xe8],bl
1000eb31:	call   0x100012f0
1000eb36:	cmp    BYTE PTR [esp+0x17],bl
1000eb3a:	mov    esi,0x1006eae4
1000eb3f:	mov    ecx,esi
1000eb41:	je     0x1000ec27
1000eb47:	push   0x1006ec1c
1000eb4c:	push   0xe
1000eb4e:	call   0x100042b4
1000eb53:	pop    ecx
1000eb54:	pop    ecx
1000eb55:	push   eax
1000eb56:	lea    ecx,[esp+0x2c]
1000eb5a:	call   0x100011a7
1000eb5f:	mov    eax,DWORD PTR [esp+0x1c]
1000eb63:	lea    ecx,[esp+0x28]
1000eb67:	add    eax,0x20
1000eb6a:	push   ecx
1000eb6b:	call   0x1000887c
1000eb70:	push   ebx
1000eb71:	push   edi
1000eb72:	lea    ecx,[esp+0x30]
1000eb76:	mov    BYTE PTR [esp+0x1f],al
1000eb7a:	call   0x100012f0
1000eb7f:	cmp    BYTE PTR [esp+0x17],bl
1000eb83:	je     0x1000ec0d
1000eb89:	push   0x1006ec48
1000eb8e:	push   0xe
1000eb90:	mov    ecx,esi
1000eb92:	call   0x100042b4
1000eb97:	pop    ecx
1000eb98:	pop    ecx
1000eb99:	push   eax
1000eb9a:	lea    ecx,[esp+0x2c]
1000eb9e:	call   0x100011a7
1000eba3:	mov    BYTE PTR [esp+0xe0],0x2
1000ebab:	push   ebx
1000ebac:	lea    eax,[esp+0x2c]
1000ebb0:	push   eax
1000ebb1:	lea    eax,[esp+0x4c]
1000ebb5:	push   eax
1000ebb6:	mov    eax,DWORD PTR [esp+0x28]
1000ebba:	add    eax,0x20
1000ebbd:	call   0x10008803
1000ebc2:	cmp    DWORD PTR [eax+0x18],0x10
1000ebc6:	jb     0x1000ebcd
1000ebc8:	mov    eax,DWORD PTR [eax+0x4]
1000ebcb:	jmp    0x1000ebd0
1000ebcd:	add    eax,0x4
1000ebd0:	push   eax
1000ebd1:	call   0x10045fb3
1000ebd6:	pop    ecx
1000ebd7:	push   ebx
1000ebd8:	push   edi
1000ebd9:	lea    ecx,[esp+0x4c]
1000ebdd:	mov    esi,eax
1000ebdf:	call   0x100012f0
1000ebe4:	push   ebx
1000ebe5:	push   edi
1000ebe6:	lea    ecx,[esp+0x30]
1000ebea:	mov    BYTE PTR [esp+0xe8],bl
1000ebf1:	call   0x100012f0
1000ebf6:	push   esi
1000ebf7:	lea    eax,[esp+0xb8]
1000ebfe:	push   eax
1000ebff:	push   DWORD PTR [esp+0x28]
1000ec03:	call   0x1000f6ba
1000ec08:	jmp    0x1000ee55
1000ec0d:	mov    edi,DWORD PTR [esp+0x20]
1000ec11:	lea    ebx,[esp+0xb4]
1000ec18:	call   0x1000f767
1000ec1d:	xor    edi,edi
1000ec1f:	xor    ebx,ebx
1000ec21:	inc    edi
1000ec22:	jmp    0x1000ee55
1000ec27:	push   0x1006ec78
1000ec2c:	push   0xe
1000ec2e:	call   0x100042b4
1000ec33:	pop    ecx
1000ec34:	pop    ecx
1000ec35:	push   eax
1000ec36:	lea    ecx,[esp+0x2c]
1000ec3a:	call   0x100011a7
1000ec3f:	mov    eax,DWORD PTR [esp+0x1c]
1000ec43:	lea    ecx,[esp+0x28]
1000ec47:	add    eax,0x20
1000ec4a:	push   ecx
1000ec4b:	call   0x1000887c
1000ec50:	push   ebx
1000ec51:	push   edi
1000ec52:	lea    ecx,[esp+0x30]
1000ec56:	mov    BYTE PTR [esp+0x1f],al
1000ec5a:	call   0x100012f0
1000ec5f:	cmp    BYTE PTR [esp+0x17],bl
1000ec63:	je     0x1000ec8c
1000ec65:	push   0x1006ecb8
1000ec6a:	push   0xe
1000ec6c:	mov    ecx,esi
1000ec6e:	call   0x100042b4
1000ec73:	pop    ecx
1000ec74:	pop    ecx
1000ec75:	push   eax
1000ec76:	lea    ecx,[esp+0x2c]
1000ec7a:	call   0x100011a7
1000ec7f:	mov    BYTE PTR [esp+0xe0],0x3
1000ec87:	jmp    0x1000ebab
1000ec8c:	push   0x1006ed18
1000ec91:	push   0xa
1000ec93:	mov    ecx,0x1006e708
1000ec98:	call   0x100042b4
1000ec9d:	pop    ecx
1000ec9e:	pop    ecx
1000ec9f:	push   eax
1000eca0:	lea    ecx,[esp+0x48]
1000eca4:	call   0x100011a7
1000eca9:	push   ebx
1000ecaa:	lea    eax,[esp+0x48]
1000ecae:	push   eax
1000ecaf:	lea    eax,[esp+0x84]
1000ecb6:	push   eax
1000ecb7:	mov    eax,DWORD PTR [esp+0x28]
1000ecbb:	mov    BYTE PTR [esp+0xec],0x4
1000ecc3:	add    eax,0x20
1000ecc6:	mov    DWORD PTR [esp+0x24],edi
1000ecca:	call   0x10008803
1000eccf:	push   0x5
1000ecd1:	pop    ecx
1000ecd2:	mov    DWORD PTR [esp+0xe0],ecx
1000ecd9:	cmp    DWORD PTR [eax+0x18],0x10
1000ecdd:	mov    DWORD PTR [esp+0x18],0x3
1000ece5:	jb     0x1000ecec
1000ece7:	mov    esi,DWORD PTR [eax+0x4]
1000ecea:	jmp    0x1000ecef
1000ecec:	lea    esi,[eax+0x4]
1000ecef:	push   0x1006ecec
1000ecf4:	push   ecx
1000ecf5:	mov    ecx,0x1006ed10
1000ecfa:	call   0x100042b4
1000ecff:	push   eax
1000ed00:	push   esi
1000ed01:	call   0x1004582f
1000ed06:	add    esp,0x10
1000ed09:	test   eax,eax
1000ed0b:	jne    0x1000edbb
1000ed11:	push   0x1006ed8c
1000ed16:	push   0x11
1000ed18:	mov    ecx,0x1006edc4
1000ed1d:	call   0x100042b4
1000ed22:	pop    ecx
1000ed23:	pop    ecx
1000ed24:	push   eax
1000ed25:	lea    ecx,[esp+0x2c]
1000ed29:	call   0x100011a7
1000ed2e:	push   0x7
1000ed30:	pop    edi
1000ed31:	push   ebx
1000ed32:	lea    eax,[esp+0x2c]
1000ed36:	push   eax
1000ed37:	lea    eax,[esp+0xa0]
1000ed3e:	push   eax
1000ed3f:	mov    eax,DWORD PTR [esp+0x28]
1000ed43:	mov    DWORD PTR [esp+0xec],0x6
1000ed4e:	add    eax,0x20
1000ed51:	mov    DWORD PTR [esp+0x24],edi
1000ed55:	call   0x10008803
1000ed5a:	mov    DWORD PTR [esp+0xe0],edi
1000ed61:	push   eax
1000ed62:	lea    esi,[esp+0x64]
1000ed66:	mov    DWORD PTR [esp+0x1c],0xf
1000ed6e:	call   0x1002f6d0
1000ed73:	pop    ecx
1000ed74:	mov    DWORD PTR [esp+0xe0],0x8
1000ed7f:	cmp    DWORD PTR [eax+0x18],0x10
1000ed83:	mov    DWORD PTR [esp+0x18],0x1f
1000ed8b:	jb     0x1000ed92
1000ed8d:	mov    esi,DWORD PTR [eax+0x4]
1000ed90:	jmp    0x1000ed95
1000ed92:	lea    esi,[eax+0x4]
1000ed95:	push   0x1006ed4c
1000ed9a:	push   edi
1000ed9b:	mov    ecx,0x1006ed84
1000eda0:	call   0x100042b4
1000eda5:	push   eax
1000eda6:	push   esi
1000eda7:	call   0x10045bf0
1000edac:	xor    edi,edi
1000edae:	add    esp,0x10
1000edb1:	inc    edi
1000edb2:	test   eax,eax
1000edb4:	mov    BYTE PTR [esp+0x17],0x1
1000edb9:	je     0x1000edbf
1000edbb:	mov    BYTE PTR [esp+0x17],bl
1000edbf:	test   BYTE PTR [esp+0x18],0x10
1000edc4:	je     0x1000edd6
1000edc6:	and    DWORD PTR [esp+0x18],0xffffffef
1000edcb:	push   ebx
1000edcc:	push   edi
1000edcd:	lea    ecx,[esp+0x68]
1000edd1:	call   0x100012f0
1000edd6:	test   BYTE PTR [esp+0x18],0x8
1000eddb:	je     0x1000edf0
1000eddd:	and    DWORD PTR [esp+0x18],0xfffffff7
1000ede2:	push   ebx
1000ede3:	push   edi
1000ede4:	lea    ecx,[esp+0xa0]
1000edeb:	call   0x100012f0
1000edf0:	test   BYTE PTR [esp+0x18],0x4
1000edf5:	je     0x1000ee07
1000edf7:	and    DWORD PTR [esp+0x18],0xfffffffb
1000edfc:	push   ebx
1000edfd:	push   edi
1000edfe:	lea    ecx,[esp+0x30]
1000ee02:	call   0x100012f0
1000ee07:	test   BYTE PTR [esp+0x18],0x2
1000ee0c:	je     0x1000ee21
1000ee0e:	and    DWORD PTR [esp+0x18],0xfffffffd
1000ee13:	push   ebx
1000ee14:	push   edi
1000ee15:	lea    ecx,[esp+0x84]
1000ee1c:	call   0x100012f0
1000ee21:	mov    DWORD PTR [esp+0xe0],ebx
1000ee28:	test   BYTE PTR [esp+0x18],0x1
1000ee2d:	je     0x1000ee3a
1000ee2f:	push   ebx
1000ee30:	push   edi
1000ee31:	lea    ecx,[esp+0x4c]
1000ee35:	call   0x100012f0
1000ee3a:	cmp    BYTE PTR [esp+0x17],bl
1000ee3e:	jne    0x1000ec0d
1000ee44:	mov    ecx,DWORD PTR [esp+0x20]
1000ee48:	lea    eax,[esp+0xb4]
1000ee4f:	push   eax
1000ee50:	call   0x1000f7cb
1000ee55:	mov    esi,eax
1000ee57:	cmp    esi,ebx
1000ee59:	je     0x1000ee6d
1000ee5b:	push   ebx
1000ee5c:	push   edi
1000ee5d:	lea    ecx,[esp+0xbc]
1000ee64:	call   0x100012f0
1000ee69:	mov    eax,esi
1000ee6b:	jmp    0x1000eec9
1000ee6d:	mov    eax,DWORD PTR [esp+0x20]
1000ee71:	mov    eax,DWORD PTR [eax]
1000ee73:	mov    esi,DWORD PTR [eax+0xc]
1000ee76:	push   0x24
1000ee78:	call   0x10043196
1000ee7d:	pop    ecx
1000ee7e:	mov    DWORD PTR [esp+0x20],eax
1000ee82:	cmp    eax,ebx
1000ee84:	mov    BYTE PTR [esp+0xe0],0x9
1000ee8c:	je     0x1000eea7
1000ee8e:	sub    esi,DWORD PTR [esp+0x24]
1000ee92:	lea    ecx,[esp+0xb4]
1000ee99:	push   esi
1000ee9a:	push   DWORD PTR [esp+0x28]
1000ee9e:	push   ecx
1000ee9f:	push   eax
1000eea0:	call   0x10007c23
1000eea5:	jmp    0x1000eea9
1000eea7:	xor    eax,eax
1000eea9:	mov    edi,DWORD PTR [esp+0x1c]
1000eead:	add    edi,0xc
1000eeb0:	mov    ebx,eax
1000eeb2:	call   0x1000a14c
1000eeb7:	push   0x0
1000eeb9:	push   0x1
1000eebb:	lea    ecx,[esp+0xbc]
1000eec2:	call   0x100012f0
1000eec7:	xor    eax,eax
1000eec9:	mov    ecx,DWORD PTR [esp+0xd8]
1000eed0:	mov    DWORD PTR fs:0x0,ecx
1000eed7:	pop    ecx
1000eed8:	pop    edi
1000eed9:	pop    esi
1000eeda:	pop    ebx
1000eedb:	mov    ecx,DWORD PTR [esp+0xc0]
1000eee2:	xor    ecx,esp
1000eee4:	call   0x10043615
1000eee9:	mov    esp,ebp
1000eeeb:	pop    ebp
1000eeec:	ret    0x4
1000eeef:	push   0x4c
1000eef1:	mov    eax,0x10064a40
1000eef6:	call   0x10059e5e
1000eefb:	mov    eax,DWORD PTR [ebp+0x8]
1000eefe:	mov    DWORD PTR [ebp-0x54],ecx
1000ef01:	mov    ecx,DWORD PTR [ebp+0xc]
1000ef04:	mov    DWORD PTR [ebp-0x50],ecx
1000ef07:	push   eax
1000ef08:	mov    ecx,esi
1000ef0a:	call   0x1000f30d
1000ef0f:	test   eax,eax
1000ef11:	jne    0x1000f049
1000ef17:	mov    edi,esi
1000ef19:	call   0x1000f2df
1000ef1e:	test   eax,eax
1000ef20:	jne    0x1000f049
1000ef26:	push   eax
1000ef27:	lea    ecx,[ebp-0x2c]
1000ef2a:	mov    DWORD PTR [ebp-0x14],0xf
1000ef31:	call   0x1000141c
1000ef36:	and    DWORD PTR [ebp-0x4],0x0
1000ef3a:	mov    eax,DWORD PTR [esi]
1000ef3c:	mov    ebx,DWORD PTR [eax+0xc]
1000ef3f:	lea    eax,[ebp-0x2c]
1000ef42:	push   eax
1000ef43:	call   0x1000f051
1000ef48:	test   eax,eax
1000ef4a:	mov    ecx,DWORD PTR [esi]
1000ef4c:	mov    edi,DWORD PTR [ecx+0xc]
1000ef4f:	mov    DWORD PTR [ebp-0x4c],eax
1000ef52:	je     0x1000ef68
1000ef54:	lea    ecx,[ebp-0x2c]
1000ef57:	push   0x0
1000ef59:	push   0x1
1000ef5b:	call   0x100012f0
1000ef60:	mov    eax,DWORD PTR [ebp-0x4c]
1000ef63:	jmp    0x1000f049
1000ef68:	push   0x24
1000ef6a:	call   0x10043196
1000ef6f:	pop    ecx
1000ef70:	mov    DWORD PTR [ebp-0x4c],eax
1000ef73:	test   eax,eax
1000ef75:	mov    BYTE PTR [ebp-0x4],0x1
1000ef79:	je     0x1000ef8b
1000ef7b:	sub    edi,ebx
1000ef7d:	push   edi
1000ef7e:	push   ebx
1000ef7f:	lea    ecx,[ebp-0x2c]
1000ef82:	push   ecx
1000ef83:	push   eax
1000ef84:	call   0x10007c23
1000ef89:	jmp    0x1000ef8d
1000ef8b:	xor    eax,eax
1000ef8d:	mov    edi,DWORD PTR [ebp-0x54]
1000ef90:	mov    ebx,eax
1000ef92:	call   0x1000a14c
1000ef97:	or     DWORD PTR [ebp-0x4],0xffffffff
1000ef9b:	push   0x0
1000ef9d:	push   0x1
1000ef9f:	lea    ecx,[ebp-0x2c]
1000efa2:	call   0x100012f0
1000efa7:	mov    edi,esi
1000efa9:	call   0x1000f2df
1000efae:	test   eax,eax
1000efb0:	jne    0x1000f049
1000efb6:	push   eax
1000efb7:	lea    ecx,[ebp-0x48]
1000efba:	mov    DWORD PTR [ebp-0x30],0xf
1000efc1:	call   0x1000141c
1000efc6:	mov    DWORD PTR [ebp-0x4],0x2
1000efcd:	mov    eax,DWORD PTR [esi]
1000efcf:	mov    ebx,DWORD PTR [eax+0xc]
1000efd2:	lea    eax,[ebp-0x48]
1000efd5:	push   eax
1000efd6:	call   0x1000f678
1000efdb:	test   eax,eax
1000efdd:	mov    ecx,DWORD PTR [esi]
1000efdf:	mov    edi,DWORD PTR [ecx+0xc]
1000efe2:	mov    DWORD PTR [ebp-0x4c],eax
1000efe5:	je     0x1000efef
1000efe7:	lea    ecx,[ebp-0x48]
1000efea:	jmp    0x1000ef57
1000efef:	push   0x24
1000eff1:	call   0x10043196
1000eff6:	pop    ecx
1000eff7:	mov    DWORD PTR [ebp-0x54],eax
1000effa:	test   eax,eax
1000effc:	mov    BYTE PTR [ebp-0x4],0x3
1000f000:	je     0x1000f012
1000f002:	sub    edi,ebx
1000f004:	push   edi
1000f005:	push   ebx
1000f006:	lea    ecx,[ebp-0x48]
1000f009:	push   ecx
1000f00a:	push   eax
1000f00b:	call   0x10007c23
1000f010:	jmp    0x1000f014
1000f012:	xor    eax,eax
1000f014:	mov    edi,DWORD PTR [ebp-0x50]
1000f017:	mov    ebx,eax
1000f019:	call   0x1000a14c
1000f01e:	or     DWORD PTR [ebp-0x4],0xffffffff
1000f022:	push   0x0
1000f024:	push   0x1
1000f026:	lea    ecx,[ebp-0x48]
1000f029:	call   0x100012f0
1000f02e:	push   0x0
1000f030:	sub    esp,0x1c
1000f033:	mov    ecx,esp
1000f035:	mov    DWORD PTR [ebp-0x50],esp
1000f038:	push   0x1006e4b0
1000f03d:	call   0x100011a7
1000f042:	mov    ebx,esi
1000f044:	call   0x1000f250
1000f049:	call   0x10059ee1
1000f04e:	ret    0x8
1000f051:	push   ebp
1000f052:	mov    ebp,esp
1000f054:	push   ecx
1000f055:	push   ecx
1000f056:	and    DWORD PTR [ebp-0x4],0x0
1000f05a:	push   ebx
1000f05b:	xor    ebx,ebx
1000f05d:	push   esi
1000f05e:	inc    ebx
1000f05f:	mov    esi,DWORD PTR [edi]
1000f061:	call   0x1000e2e6
1000f066:	test   al,al
1000f068:	jne    0x1000f09d
1000f06a:	mov    eax,DWORD PTR [edi]
1000f06c:	call   0x1000e437
1000f071:	mov    BYTE PTR [ebp-0x8],al
1000f074:	sub    al,0x30
1000f076:	cmp    al,0x9
1000f078:	ja     0x1000f09d
1000f07a:	push   DWORD PTR [ebp-0x8]
1000f07d:	mov    esi,DWORD PTR [ebp+0x8]
1000f080:	call   0x1000d4dd
1000f085:	mov    eax,DWORD PTR [edi]
1000f087:	call   0x1000e455
1000f08c:	inc    DWORD PTR [ebp-0x4]
1000f08f:	cmp    DWORD PTR [ebp-0x4],0x3
1000f093:	jne    0x1000f05f
1000f095:	xor    eax,eax
1000f097:	pop    esi
1000f098:	pop    ebx
1000f099:	leave  
1000f09a:	ret    0x4
1000f09d:	mov    eax,ebx
1000f09f:	jmp    0x1000f097
1000f0a1:	push   ebp
1000f0a2:	mov    ebp,esp
1000f0a4:	and    esp,0xfffffff8
1000f0a7:	push   0xffffffff
1000f0a9:	push   0x100649f4
1000f0ae:	mov    eax,fs:0x0
1000f0b4:	push   eax
1000f0b5:	sub    esp,0x58
1000f0b8:	mov    eax,ds:0x100801ac
1000f0bd:	xor    eax,esp
1000f0bf:	mov    DWORD PTR [esp+0x50],eax
1000f0c3:	push   ebx
1000f0c4:	push   esi
1000f0c5:	push   edi
1000f0c6:	mov    eax,ds:0x100801ac
1000f0cb:	xor    eax,esp
1000f0cd:	push   eax
1000f0ce:	lea    eax,[esp+0x68]
1000f0d2:	mov    fs:0x0,eax
1000f0d8:	mov    eax,DWORD PTR [ebp+0x8]
1000f0db:	mov    edi,ecx
1000f0dd:	mov    esi,DWORD PTR [edi]
1000f0df:	mov    DWORD PTR [esp+0x14],eax
1000f0e3:	call   0x1000e2e6
1000f0e8:	test   al,al
1000f0ea:	je     0x1000f0f4
1000f0ec:	xor    eax,eax
1000f0ee:	inc    eax
1000f0ef:	jmp    0x1000f214
1000f0f4:	mov    eax,DWORD PTR [edi]
1000f0f6:	call   0x1000e437
1000f0fb:	cmp    al,0xd
1000f0fd:	je     0x1000f204
1000f103:	xor    esi,esi
1000f105:	push   0xf
1000f107:	pop    ebx
1000f108:	push   esi
1000f109:	lea    ecx,[esp+0x48]
1000f10d:	mov    DWORD PTR [esp+0x60],ebx
1000f111:	call   0x1000141c
1000f116:	mov    DWORD PTR [esp+0x70],esi
1000f11a:	push   esi
1000f11b:	lea    ecx,[esp+0x2c]
1000f11f:	mov    DWORD PTR [esp+0x44],ebx
1000f123:	call   0x1000141c
1000f128:	mov    BYTE PTR [esp+0x70],0x1
1000f12d:	mov    eax,DWORD PTR [edi]
1000f12f:	mov    eax,DWORD PTR [eax+0xc]
1000f132:	mov    DWORD PTR [esp+0x20],eax
1000f136:	push   esi
1000f137:	lea    eax,[esp+0x48]
1000f13b:	push   eax
1000f13c:	call   0x1000f561
1000f141:	cmp    eax,esi
1000f143:	je     0x1000f149
1000f145:	mov    ebx,eax
1000f147:	jmp    0x1000f183
1000f149:	push   esi
1000f14a:	sub    esp,0x1c
1000f14d:	mov    ecx,esp
1000f14f:	mov    DWORD PTR [esp+0x3c],esp
1000f153:	push   0x1006ee0c
1000f158:	call   0x100011a7
1000f15d:	mov    ebx,edi
1000f15f:	call   0x1000f250
1000f164:	cmp    eax,esi
1000f166:	jne    0x1000f145
1000f168:	lea    eax,[esp+0x28]
1000f16c:	push   eax
1000f16d:	mov    ecx,edi
1000f16f:	call   0x1000f48b
1000f174:	cmp    eax,esi
1000f176:	jne    0x1000f145
1000f178:	mov    eax,DWORD PTR [edi]
1000f17a:	mov    eax,DWORD PTR [eax+0xc]
1000f17d:	mov    DWORD PTR [esp+0x24],eax
1000f181:	xor    ebx,ebx
1000f183:	cmp    ebx,esi
1000f185:	jne    0x1000f234
1000f18b:	push   0x8
1000f18d:	call   0x10043196
1000f192:	cmp    eax,esi
1000f194:	pop    ecx
1000f195:	je     0x1000f1a8
1000f197:	mov    edx,DWORD PTR [esp+0x20]
1000f19b:	mov    ecx,DWORD PTR [esp+0x24]
1000f19f:	sub    ecx,edx
1000f1a1:	mov    DWORD PTR [eax],edx
1000f1a3:	mov    DWORD PTR [eax+0x4],ecx
1000f1a6:	jmp    0x1000f1aa
1000f1a8:	xor    eax,eax
1000f1aa:	push   ecx
1000f1ab:	mov    ecx,esp
1000f1ad:	mov    BYTE PTR [esp+0x74],0x2
1000f1b2:	mov    DWORD PTR [esp+0x1c],esi
1000f1b6:	mov    DWORD PTR [ecx],eax
1000f1b8:	mov    ecx,DWORD PTR [esp+0x18]
1000f1bc:	lea    eax,[esp+0x2c]
1000f1c0:	mov    DWORD PTR [esp+0x20],esp
1000f1c4:	push   eax
1000f1c5:	lea    edx,[esp+0x4c]
1000f1c9:	call   0x1000813f
1000f1ce:	push   DWORD PTR [esp+0x18]
1000f1d2:	call   0x10042fe2
1000f1d7:	pop    ecx
1000f1d8:	push   esi
1000f1d9:	push   0x1
1000f1db:	lea    ecx,[esp+0x30]
1000f1df:	call   0x100012f0
1000f1e4:	or     DWORD PTR [esp+0x70],0xffffffff
1000f1e9:	push   esi
1000f1ea:	push   0x1
1000f1ec:	lea    ecx,[esp+0x4c]
1000f1f0:	call   0x100012f0
1000f1f5:	mov    eax,DWORD PTR [edi]
1000f1f7:	call   0x1000e437
1000f1fc:	cmp    al,0xd
1000f1fe:	jne    0x1000f105
1000f204:	mov    eax,DWORD PTR [edi]
1000f206:	push   DWORD PTR [eax+0xc]
1000f209:	mov    edi,DWORD PTR [esp+0x18]
1000f20d:	call   0x10007d4f
1000f212:	xor    eax,eax
1000f214:	mov    ecx,DWORD PTR [esp+0x68]
1000f218:	mov    DWORD PTR fs:0x0,ecx
1000f21f:	pop    ecx
1000f220:	pop    edi
1000f221:	pop    esi
1000f222:	pop    ebx
1000f223:	mov    ecx,DWORD PTR [esp+0x50]
1000f227:	xor    ecx,esp
1000f229:	call   0x10043615
1000f22e:	mov    esp,ebp
1000f230:	pop    ebp
1000f231:	ret    0x4
1000f234:	push   esi
1000f235:	push   0x1
1000f237:	lea    ecx,[esp+0x30]
1000f23b:	call   0x100012f0
1000f240:	push   esi
1000f241:	push   0x1
1000f243:	lea    ecx,[esp+0x4c]
1000f247:	call   0x100012f0
1000f24c:	mov    eax,ebx
1000f24e:	jmp    0x1000f214
1000f250:	push   0x4
1000f252:	mov    eax,0x10060251
1000f257:	call   0x10059df5
1000f25c:	xor    edi,edi
1000f25e:	mov    DWORD PTR [ebp-0x4],edi
1000f261:	cmp    DWORD PTR [ebp+0x1c],edi
1000f264:	je     0x1000f2c8
1000f266:	cmp    BYTE PTR [ebp+0x24],0x0
1000f26a:	je     0x1000f297
1000f26c:	test   edi,edi
1000f26e:	jle    0x1000f297
1000f270:	mov    eax,DWORD PTR [ebx]
1000f272:	mov    ecx,DWORD PTR [eax+0x4]
1000f275:	test   ecx,ecx
1000f277:	je     0x1000f280
1000f279:	mov    eax,DWORD PTR [eax+0x8]
1000f27c:	cmp    eax,DWORD PTR [ecx]
1000f27e:	jb     0x1000f2a2
1000f280:	push   0x0
1000f282:	push   0x1
1000f284:	lea    ecx,[ebp+0x8]
1000f287:	call   0x100012f0
1000f28c:	xor    eax,eax
1000f28e:	inc    eax
1000f28f:	call   0x10059ecd
1000f294:	ret    0x20
1000f297:	mov    esi,DWORD PTR [ebx]
1000f299:	call   0x1000e2e6
1000f29e:	test   al,al
1000f2a0:	jne    0x1000f280
1000f2a2:	mov    eax,DWORD PTR [ebx]
1000f2a4:	call   0x1000e437
1000f2a9:	mov    BYTE PTR [ebp-0xd],al
1000f2ac:	lea    eax,[ebp+0x8]
1000f2af:	call   0x10012206
1000f2b4:	mov    cl,BYTE PTR [ebp-0xd]
1000f2b7:	cmp    BYTE PTR [eax],cl
1000f2b9:	jne    0x1000f2cc
1000f2bb:	mov    eax,DWORD PTR [ebx]
1000f2bd:	call   0x1000e455
1000f2c2:	inc    edi
1000f2c3:	cmp    edi,DWORD PTR [ebp+0x1c]
1000f2c6:	jne    0x1000f266
1000f2c8:	xor    esi,esi
1000f2ca:	jmp    0x1000f2cf
1000f2cc:	xor    esi,esi
1000f2ce:	inc    esi
1000f2cf:	push   0x0
1000f2d1:	push   0x1
1000f2d3:	lea    ecx,[ebp+0x8]
1000f2d6:	call   0x100012f0
1000f2db:	mov    eax,esi
1000f2dd:	jmp    0x1000f28f
1000f2df:	push   ebx
1000f2e0:	push   esi
1000f2e1:	xor    ebx,ebx
1000f2e3:	jmp    0x1000f2f8
1000f2e5:	mov    eax,DWORD PTR [edi]
1000f2e7:	call   0x1000e437
1000f2ec:	cmp    al,0x20
1000f2ee:	jne    0x1000f303
1000f2f0:	mov    eax,DWORD PTR [edi]
1000f2f2:	inc    ebx
1000f2f3:	call   0x1000e455
1000f2f8:	mov    esi,DWORD PTR [edi]
1000f2fa:	call   0x1000e2e6
1000f2ff:	test   al,al
1000f301:	je     0x1000f2e5
1000f303:	xor    eax,eax
1000f305:	test   ebx,ebx
1000f307:	pop    esi
1000f308:	setle  al
1000f30b:	pop    ebx
1000f30c:	ret    
1000f30d:	push   0x30
1000f30f:	mov    eax,0x100649b7
1000f314:	call   0x10059e5e
1000f319:	mov    eax,DWORD PTR [ebp+0x8]
1000f31c:	push   0x1
1000f31e:	mov    edi,ecx
1000f320:	push   0x1006edd8
1000f325:	push   0x5
1000f327:	mov    ecx,0x1006e5c0
1000f32c:	mov    DWORD PTR [ebp-0x3c],eax
1000f32f:	call   0x100042b4
1000f334:	sub    esp,0x14
1000f337:	mov    ecx,esp
1000f339:	mov    DWORD PTR [ebp-0x34],esp
1000f33c:	push   eax
1000f33d:	call   0x100011a7
1000f342:	mov    ebx,edi
1000f344:	call   0x1000f250
1000f349:	xor    ebx,ebx
1000f34b:	cmp    eax,ebx
1000f34d:	jne    0x1000f3b6
1000f34f:	push   ebx
1000f350:	lea    ecx,[ebp-0x2c]
1000f353:	mov    DWORD PTR [ebp-0x14],0xf
1000f35a:	call   0x1000141c
1000f35f:	mov    DWORD PTR [ebp-0x4],ebx
1000f362:	mov    esi,DWORD PTR [edi]
1000f364:	mov    eax,DWORD PTR [esi+0xc]
1000f367:	mov    DWORD PTR [ebp-0x38],eax
1000f36a:	mov    DWORD PTR [ebp-0x30],ebx
1000f36d:	jmp    0x1000f399
1000f36f:	mov    eax,DWORD PTR [edi]
1000f371:	call   0x1000e437
1000f376:	mov    BYTE PTR [ebp-0x34],al
1000f379:	sub    al,0x30
1000f37b:	cmp    al,0x9
1000f37d:	ja     0x1000f3be
1000f37f:	push   DWORD PTR [ebp-0x34]
1000f382:	xor    ebx,ebx
1000f384:	inc    ebx
1000f385:	lea    esi,[ebp-0x2c]
1000f388:	call   0x1000d4dd
1000f38d:	mov    eax,DWORD PTR [edi]
1000f38f:	inc    DWORD PTR [ebp-0x30]
1000f392:	call   0x1000e455
1000f397:	mov    esi,DWORD PTR [edi]
1000f399:	call   0x1000e2e6
1000f39e:	test   al,al
1000f3a0:	je     0x1000f36f
1000f3a2:	push   0x0
1000f3a4:	push   0x1
1000f3a6:	lea    ecx,[ebp-0x2c]
1000f3a9:	call   0x100012f0
1000f3ae:	xor    eax,eax
1000f3b0:	cmp    DWORD PTR [ebp-0x30],eax
1000f3b3:	setle  al
1000f3b6:	call   0x10059ee1
1000f3bb:	ret    0x4
1000f3be:	cmp    DWORD PTR [ebp-0x30],0x0
1000f3c2:	jne    0x1000f3d7
1000f3c4:	xor    esi,esi
1000f3c6:	inc    esi
1000f3c7:	push   0x0
1000f3c9:	push   0x1
1000f3cb:	lea    ecx,[ebp-0x2c]
1000f3ce:	call   0x100012f0
1000f3d3:	mov    eax,esi
1000f3d5:	jmp    0x1000f3b6
1000f3d7:	push   0x0
1000f3d9:	sub    esp,0x1c
1000f3dc:	mov    ecx,esp
1000f3de:	mov    DWORD PTR [ebp-0x34],esp
1000f3e1:	mov    esi,0x1006ee08
1000f3e6:	push   esi
1000f3e7:	call   0x100011a7
1000f3ec:	mov    ebx,edi
1000f3ee:	call   0x1000f250
1000f3f3:	test   eax,eax
1000f3f5:	je     0x1000f3fb
1000f3f7:	mov    esi,eax
1000f3f9:	jmp    0x1000f3c7
1000f3fb:	push   esi
1000f3fc:	lea    eax,[ebp-0x2c]
1000f3ff:	push   eax
1000f400:	call   0x10004126
1000f405:	and    DWORD PTR [ebp-0x30],0x0
1000f409:	jmp    0x1000f433
1000f40b:	mov    eax,DWORD PTR [edi]
1000f40d:	call   0x1000e437
1000f412:	mov    BYTE PTR [ebp-0x34],al
1000f415:	sub    al,0x30
1000f417:	cmp    al,0x9
1000f419:	ja     0x1000f443
1000f41b:	push   DWORD PTR [ebp-0x34]
1000f41e:	xor    ebx,ebx
1000f420:	inc    ebx
1000f421:	lea    esi,[ebp-0x2c]
1000f424:	call   0x1000d4dd
1000f429:	mov    eax,DWORD PTR [edi]
1000f42b:	inc    DWORD PTR [ebp-0x30]
1000f42e:	call   0x1000e455
1000f433:	mov    esi,DWORD PTR [edi]
1000f435:	call   0x1000e2e6
1000f43a:	test   al,al
1000f43c:	je     0x1000f40b
1000f43e:	jmp    0x1000f3a2
1000f443:	cmp    DWORD PTR [ebp-0x30],0x0
1000f447:	je     0x1000f3c4
1000f44d:	mov    eax,DWORD PTR [edi]
1000f44f:	mov    esi,DWORD PTR [eax+0xc]
1000f452:	push   0x24
1000f454:	call   0x10043196
1000f459:	pop    ecx
1000f45a:	mov    DWORD PTR [ebp-0x34],eax
1000f45d:	test   eax,eax
1000f45f:	mov    BYTE PTR [ebp-0x4],0x1
1000f463:	je     0x1000f478
1000f465:	sub    esi,DWORD PTR [ebp-0x38]
1000f468:	lea    ecx,[ebp-0x2c]
1000f46b:	push   esi
1000f46c:	push   DWORD PTR [ebp-0x38]
1000f46f:	push   ecx
1000f470:	push   eax
1000f471:	call   0x10007c23
1000f476:	jmp    0x1000f47a
1000f478:	xor    eax,eax
1000f47a:	mov    edi,DWORD PTR [ebp-0x3c]
1000f47d:	mov    ebx,eax
1000f47f:	call   0x1000a14c
1000f484:	xor    esi,esi
1000f486:	jmp    0x1000f3c7
1000f48b:	push   0x24
1000f48d:	mov    eax,0x1006498a
1000f492:	call   0x10059df5
1000f497:	mov    edi,ecx
1000f499:	and    DWORD PTR [ebp-0x10],0x0
1000f49d:	jmp    0x1000f4c5
1000f49f:	mov    eax,DWORD PTR [edi]
1000f4a1:	call   0x1000e437
1000f4a6:	cmp    al,0xd
1000f4a8:	mov    BYTE PTR [ebp-0x14],al
1000f4ab:	je     0x1000f4da
1000f4ad:	push   DWORD PTR [ebp-0x14]
1000f4b0:	mov    esi,DWORD PTR [ebp+0x8]
1000f4b3:	inc    DWORD PTR [ebp-0x10]
1000f4b6:	xor    ebx,ebx
1000f4b8:	inc    ebx
1000f4b9:	call   0x1000d4dd
1000f4be:	mov    eax,DWORD PTR [edi]
1000f4c0:	call   0x1000e455
1000f4c5:	mov    esi,DWORD PTR [edi]
1000f4c7:	call   0x1000e2e6
1000f4cc:	test   al,al
1000f4ce:	je     0x1000f49f
1000f4d0:	xor    eax,eax
1000f4d2:	cmp    DWORD PTR [ebp-0x10],eax
1000f4d5:	setle  al
1000f4d8:	jmp    0x1000f559
1000f4da:	push   0x0
1000f4dc:	sub    esp,0x1c
1000f4df:	mov    ecx,esp
1000f4e1:	mov    DWORD PTR [ebp-0x14],esp
1000f4e4:	push   0x1006e4b0
1000f4e9:	call   0x100011a7
1000f4ee:	mov    ebx,edi
1000f4f0:	call   0x1000f250
1000f4f5:	test   eax,eax
1000f4f7:	jne    0x1000f559
1000f4f9:	mov    ebx,DWORD PTR [ebp+0x8]
1000f4fc:	mov    eax,DWORD PTR [ebx+0x14]
1000f4ff:	xor    edi,edi
1000f501:	test   eax,eax
1000f503:	je     0x1000f517
1000f505:	mov    eax,ebx
1000f507:	call   0x10012206
1000f50c:	cmp    BYTE PTR [eax],0x20
1000f50f:	jne    0x1000f517
1000f511:	inc    edi
1000f512:	cmp    edi,DWORD PTR [ebx+0x14]
1000f515:	jne    0x1000f505
1000f517:	mov    esi,DWORD PTR [ebx+0x14]
1000f51a:	dec    esi
1000f51b:	test   edi,edi
1000f51d:	jl     0x1000f52e
1000f51f:	mov    eax,ebx
1000f521:	call   0x10012206
1000f526:	cmp    BYTE PTR [eax],0x20
1000f529:	jne    0x1000f52e
1000f52b:	dec    edi
1000f52c:	jns    0x1000f51f
1000f52e:	sub    esi,edi
1000f530:	inc    esi
1000f531:	push   esi
1000f532:	push   edi
1000f533:	push   ebx
1000f534:	lea    eax,[ebp-0x30]
1000f537:	call   0x1000ce4e
1000f53c:	push   0xffffffff
1000f53e:	xor    esi,esi
1000f540:	push   esi
1000f541:	push   eax
1000f542:	mov    ecx,ebx
1000f544:	mov    DWORD PTR [ebp-0x4],esi
1000f547:	call   0x10001241
1000f54c:	push   esi
1000f54d:	push   0x1
1000f54f:	lea    ecx,[ebp-0x30]
1000f552:	call   0x100012f0
1000f557:	xor    eax,eax
1000f559:	call   0x10059ecd
1000f55e:	ret    0x4
1000f561:	push   ebp
1000f562:	mov    ebp,esp
1000f564:	push   ecx
1000f565:	push   ecx
1000f566:	push   ebx
1000f567:	xor    ebx,ebx
1000f569:	push   esi
1000f56a:	mov    DWORD PTR [ebp-0x4],ebx
1000f56d:	cmp    DWORD PTR [ebp-0x4],ebx
1000f570:	jle    0x1000f58e
1000f572:	cmp    BYTE PTR [ebp+0xc],bl
1000f575:	je     0x1000f58e
1000f577:	mov    eax,DWORD PTR [edi]
1000f579:	mov    ecx,DWORD PTR [eax+0x4]
1000f57c:	cmp    ecx,ebx
1000f57e:	je     0x1000f587
1000f580:	mov    eax,DWORD PTR [eax+0x8]
1000f583:	cmp    eax,DWORD PTR [ecx]
1000f585:	jb     0x1000f59d
1000f587:	xor    eax,eax
1000f589:	jmp    0x1000f626
1000f58e:	mov    esi,DWORD PTR [edi]
1000f590:	call   0x1000e2e6
1000f595:	test   al,al
1000f597:	jne    0x1000f61e
1000f59d:	mov    eax,DWORD PTR [edi]
1000f59f:	call   0x1000e437
1000f5a4:	cmp    al,0x28
1000f5a6:	mov    BYTE PTR [ebp-0x8],al
1000f5a9:	je     0x1000f61e
1000f5ab:	cmp    al,0x29
1000f5ad:	je     0x1000f61e
1000f5af:	cmp    al,0x3c
1000f5b1:	je     0x1000f61e
1000f5b3:	cmp    al,0x3e
1000f5b5:	je     0x1000f61e
1000f5b7:	cmp    al,0x40
1000f5b9:	je     0x1000f61e
1000f5bb:	cmp    al,0x2c
1000f5bd:	je     0x1000f61e
1000f5bf:	cmp    al,0x3b
1000f5c1:	je     0x1000f61e
1000f5c3:	cmp    al,0x3a
1000f5c5:	je     0x1000f61e
1000f5c7:	cmp    al,0x5c
1000f5c9:	je     0x1000f61e
1000f5cb:	cmp    al,0x22
1000f5cd:	je     0x1000f61e
1000f5cf:	cmp    al,0x2f
1000f5d1:	je     0x1000f61e
1000f5d3:	cmp    al,0x5b
1000f5d5:	je     0x1000f61e
1000f5d7:	cmp    al,0x5d
1000f5d9:	je     0x1000f61e
1000f5db:	cmp    al,0x3f
1000f5dd:	je     0x1000f61e
1000f5df:	cmp    al,0x3d
1000f5e1:	je     0x1000f61e
1000f5e3:	cmp    al,0x7b
1000f5e5:	je     0x1000f61e
1000f5e7:	cmp    al,0x7d
1000f5e9:	je     0x1000f61e
1000f5eb:	cmp    al,0x20
1000f5ed:	je     0x1000f61e
1000f5ef:	cmp    al,0x9
1000f5f1:	je     0x1000f61e
1000f5f3:	cmp    al,bl
1000f5f5:	jl     0x1000f5fb
1000f5f7:	cmp    al,0x1f
1000f5f9:	jle    0x1000f61e
1000f5fb:	cmp    al,0x7f
1000f5fd:	je     0x1000f61e
1000f5ff:	push   DWORD PTR [ebp-0x8]
1000f602:	mov    esi,DWORD PTR [ebp+0x8]
1000f605:	inc    DWORD PTR [ebp-0x4]
1000f608:	xor    ebx,ebx
1000f60a:	inc    ebx
1000f60b:	call   0x1000d4dd
1000f610:	mov    eax,DWORD PTR [edi]
1000f612:	call   0x1000e455
1000f617:	xor    ebx,ebx
1000f619:	jmp    0x1000f56d
1000f61e:	xor    eax,eax
1000f620:	cmp    DWORD PTR [ebp-0x4],ebx
1000f623:	setle  al
1000f626:	pop    esi
1000f627:	pop    ebx
1000f628:	leave  
1000f629:	ret    0x8
1000f62c:	push   ebp
1000f62d:	mov    ebp,esp
1000f62f:	push   ecx
1000f630:	push   ecx
1000f631:	and    DWORD PTR [ebp-0x4],0x0
1000f635:	push   ebx
1000f636:	push   esi
1000f637:	jmp    0x1000f65f
1000f639:	mov    eax,DWORD PTR [edi]
1000f63b:	call   0x1000e437
1000f640:	cmp    al,0x20
1000f642:	mov    BYTE PTR [ebp-0x8],al
1000f645:	je     0x1000f66a
1000f647:	push   DWORD PTR [ebp-0x8]
1000f64a:	mov    esi,DWORD PTR [ebp+0x8]
1000f64d:	inc    DWORD PTR [ebp-0x4]
1000f650:	xor    ebx,ebx
1000f652:	inc    ebx
1000f653:	call   0x1000d4dd
1000f658:	mov    eax,DWORD PTR [edi]
1000f65a:	call   0x1000e455
1000f65f:	mov    esi,DWORD PTR [edi]
1000f661:	call   0x1000e2e6
1000f666:	test   al,al
1000f668:	je     0x1000f639
1000f66a:	xor    eax,eax
1000f66c:	cmp    DWORD PTR [ebp-0x4],eax
1000f66f:	pop    esi
1000f670:	setle  al
1000f673:	pop    ebx
1000f674:	leave  
1000f675:	ret    0x4
1000f678:	push   ebp
1000f679:	mov    ebp,esp
1000f67b:	push   ecx
1000f67c:	push   ebx
1000f67d:	push   esi
1000f67e:	jmp    0x1000f6a7
1000f680:	mov    eax,DWORD PTR [edi]
1000f682:	call   0x1000e437
1000f687:	cmp    al,0xd
1000f689:	mov    BYTE PTR [ebp-0x4],al
1000f68c:	je     0x1000f6b2
1000f68e:	cmp    al,0xa
1000f690:	je     0x1000f6b2
1000f692:	push   DWORD PTR [ebp-0x4]
1000f695:	mov    esi,DWORD PTR [ebp+0x8]
1000f698:	xor    ebx,ebx
1000f69a:	inc    ebx
1000f69b:	call   0x1000d4dd
1000f6a0:	mov    eax,DWORD PTR [edi]
1000f6a2:	call   0x1000e455
1000f6a7:	mov    esi,DWORD PTR [edi]
1000f6a9:	call   0x1000e2e6
1000f6ae:	test   al,al
1000f6b0:	je     0x1000f680
1000f6b2:	pop    esi
1000f6b3:	xor    eax,eax
1000f6b5:	pop    ebx
1000f6b6:	leave  
1000f6b7:	ret    0x4
1000f6ba:	push   0xc
1000f6bc:	mov    eax,0x100641de
1000f6c1:	call   0x10059df5
1000f6c6:	xor    eax,eax
1000f6c8:	mov    DWORD PTR [ebp-0x10],eax
1000f6cb:	mov    DWORD PTR [ebp-0x18],eax
1000f6ce:	mov    ebx,0xf4240
1000f6d3:	cmp    DWORD PTR [ebp+0x10],ebx
1000f6d6:	mov    DWORD PTR [ebp-0x4],eax
1000f6d9:	mov    edi,0x10000
1000f6de:	jbe    0x1000f6e5
1000f6e0:	mov    edi,0x100000
1000f6e5:	push   edi
1000f6e6:	call   0x100438d7
1000f6eb:	mov    esi,eax
1000f6ed:	test   esi,esi
1000f6ef:	pop    ecx
1000f6f0:	mov    DWORD PTR [ebp-0x14],esi
1000f6f3:	je     0x1000f6fd
1000f6f5:	push   0x0
1000f6f7:	call   0x10042fe2
1000f6fc:	pop    ecx
1000f6fd:	cmp    DWORD PTR [ebp+0x10],0x0
1000f701:	mov    DWORD PTR [ebp-0x18],esi
1000f704:	je     0x1000f74d
1000f706:	mov    eax,DWORD PTR [ebp+0x8]
1000f709:	mov    esi,DWORD PTR [eax]
1000f70b:	call   0x1000e2e6
1000f710:	test   al,al
1000f712:	jne    0x1000f751
1000f714:	mov    eax,DWORD PTR [ebp-0x10]
1000f717:	mov    esi,DWORD PTR [ebp+0x10]
1000f71a:	lea    ecx,[edi+eax*1]
1000f71d:	cmp    ecx,esi
1000f71f:	jbe    0x1000f725
1000f721:	mov    edi,esi
1000f723:	sub    edi,eax
1000f725:	mov    eax,DWORD PTR [ebp+0x8]
1000f728:	mov    eax,DWORD PTR [eax]
1000f72a:	push   edi
1000f72b:	push   DWORD PTR [ebp-0x14]
1000f72e:	call   0x1000e48e
1000f733:	mov    edi,eax
1000f735:	add    DWORD PTR [ebp-0x10],edi
1000f738:	cmp    esi,ebx
1000f73a:	ja     0x1000f748
1000f73c:	mov    eax,DWORD PTR [ebp+0xc]
1000f73f:	push   edi
1000f740:	push   DWORD PTR [ebp-0x14]
1000f743:	call   0x10004d62
1000f748:	cmp    DWORD PTR [ebp-0x10],esi
1000f74b:	jne    0x1000f706
1000f74d:	xor    esi,esi
1000f74f:	jmp    0x1000f754
1000f751:	xor    esi,esi
1000f753:	inc    esi
1000f754:	push   DWORD PTR [ebp-0x14]
1000f757:	call   0x10042fe2
1000f75c:	pop    ecx
1000f75d:	mov    eax,esi
1000f75f:	call   0x10059ecd
1000f764:	ret    0xc
1000f767:	push   ebp
1000f768:	mov    ebp,esp
1000f76a:	mov    eax,0x10004
1000f76f:	call   0x1004a070
1000f774:	mov    eax,ds:0x100801ac
1000f779:	xor    eax,ebp
1000f77b:	mov    DWORD PTR [ebp-0x4],eax
1000f77e:	push   esi
1000f77f:	jmp    0x1000f7ac
1000f781:	push   0x10000
1000f786:	lea    eax,[ebp-0x10004]
1000f78c:	push   eax
1000f78d:	mov    eax,DWORD PTR [edi]
1000f78f:	call   0x1000e48e
1000f794:	push   eax
1000f795:	lea    eax,[ebp-0x10004]
1000f79b:	push   eax
1000f79c:	mov    eax,ebx
1000f79e:	call   0x10004d62
1000f7a3:	cmp    DWORD PTR [ebx+0x14],0xf4240
1000f7aa:	jae    0x1000f7bb
1000f7ac:	mov    esi,DWORD PTR [edi]
1000f7ae:	call   0x1000e2e6
1000f7b3:	test   al,al
1000f7b5:	je     0x1000f781
1000f7b7:	xor    eax,eax
1000f7b9:	jmp    0x1000f7be
1000f7bb:	xor    eax,eax
1000f7bd:	inc    eax
1000f7be:	mov    ecx,DWORD PTR [ebp-0x4]
1000f7c1:	xor    ecx,ebp
1000f7c3:	pop    esi
1000f7c4:	call   0x10043615
1000f7c9:	leave  
1000f7ca:	ret    
1000f7cb:	push   0x2c
1000f7cd:	mov    eax,0x1006495d
1000f7d2:	call   0x10059e5e
1000f7d7:	mov    eax,DWORD PTR [ebp+0x8]
1000f7da:	mov    ebx,ecx
1000f7dc:	mov    DWORD PTR [ebp-0x34],eax
1000f7df:	lea    eax,[ebp-0x30]
1000f7e2:	mov    edi,ebx
1000f7e4:	call   0x1000f8b4
1000f7e9:	xor    edi,edi
1000f7eb:	cmp    eax,edi
1000f7ed:	jne    0x1000f8ac
1000f7f3:	jmp    0x1000f7f7
1000f7f5:	xor    edi,edi
1000f7f7:	cmp    DWORD PTR [ebp-0x30],edi
1000f7fa:	push   edi
1000f7fb:	je     0x1000f87c
1000f7fd:	lea    ecx,[ebp-0x2c]
1000f800:	mov    DWORD PTR [ebp-0x14],0xf
1000f807:	call   0x1000141c
1000f80c:	mov    DWORD PTR [ebp-0x4],edi
1000f80f:	push   DWORD PTR [ebp-0x30]
1000f812:	lea    eax,[ebp-0x2c]
1000f815:	push   eax
1000f816:	push   ebx
1000f817:	call   0x1000f6ba
1000f81c:	mov    esi,eax
1000f81e:	cmp    esi,edi
1000f820:	push   edi
1000f821:	jne    0x1000f896
1000f823:	sub    esp,0x1c
1000f826:	mov    ecx,esp
1000f828:	mov    DWORD PTR [ebp-0x38],esp
1000f82b:	push   0x1006e4b0
1000f830:	call   0x100011a7
1000f835:	call   0x1000f250
1000f83a:	mov    esi,eax
1000f83c:	cmp    esi,edi
1000f83e:	jne    0x1000f895
1000f840:	mov    esi,DWORD PTR [ebp-0x34]
1000f843:	push   0xffffffff
1000f845:	push   edi
1000f846:	lea    eax,[ebp-0x2c]
1000f849:	call   0x10004cbe
1000f84e:	mov    eax,esi
1000f850:	cmp    DWORD PTR [eax+0x14],0xf4240
1000f857:	push   edi
1000f858:	lea    ecx,[ebp-0x2c]
1000f85b:	push   0x1
1000f85d:	jae    0x1000f8a4
1000f85f:	or     DWORD PTR [ebp-0x4],0xffffffff
1000f863:	call   0x100012f0
1000f868:	lea    eax,[ebp-0x30]
1000f86b:	mov    edi,ebx
1000f86d:	call   0x1000f8b4
1000f872:	test   eax,eax
1000f874:	je     0x1000f7f5
1000f87a:	jmp    0x1000f8ac
1000f87c:	sub    esp,0x1c
1000f87f:	mov    ecx,esp
1000f881:	mov    DWORD PTR [ebp-0x38],esp
1000f884:	push   0x1006e4b0
1000f889:	call   0x100011a7
1000f88e:	call   0x1000f250
1000f893:	jmp    0x1000f8ac
1000f895:	push   edi
1000f896:	push   0x1
1000f898:	lea    ecx,[ebp-0x2c]
1000f89b:	call   0x100012f0
1000f8a0:	mov    eax,esi
1000f8a2:	jmp    0x1000f8ac
1000f8a4:	call   0x100012f0
1000f8a9:	xor    eax,eax
1000f8ab:	inc    eax
1000f8ac:	call   0x10059ee1
1000f8b1:	ret    0x4
1000f8b4:	push   ebp
1000f8b5:	mov    ebp,esp
1000f8b7:	push   ecx
1000f8b8:	push   ecx
1000f8b9:	and    DWORD PTR [ebp-0x8],0x0
1000f8bd:	push   ebx
1000f8be:	mov    ebx,eax
1000f8c0:	and    DWORD PTR [ebx],0x0
1000f8c3:	push   esi
1000f8c4:	jmp    0x1000f923
1000f8c6:	mov    eax,DWORD PTR [edi]
1000f8c8:	call   0x1000e437
1000f8cd:	movsx  esi,al
1000f8d0:	push   esi
1000f8d1:	mov    BYTE PTR [ebp-0x1],al
1000f8d4:	call   0x10045f7b
1000f8d9:	pop    ecx
1000f8da:	mov    cl,BYTE PTR [ebp-0x1]
1000f8dd:	sub    cl,0x30
1000f8e0:	cmp    cl,0x9
1000f8e3:	jbe    0x1000f8ed
1000f8e5:	cmp    al,0x61
1000f8e7:	jl     0x1000f933
1000f8e9:	cmp    al,0x66
1000f8eb:	jg     0x1000f933
1000f8ed:	push   esi
1000f8ee:	call   0x10045f7b
1000f8f3:	mov    BYTE PTR [ebp-0x1],al
1000f8f6:	mov    eax,DWORD PTR [edi]
1000f8f8:	pop    ecx
1000f8f9:	call   0x1000e455
1000f8fe:	mov    cl,BYTE PTR [ebp-0x1]
1000f901:	mov    eax,DWORD PTR [ebx]
1000f903:	sub    cl,0x30
1000f906:	shl    eax,0x4
1000f909:	cmp    cl,0x9
1000f90c:	movsx  ecx,BYTE PTR [ebp-0x1]
1000f910:	mov    DWORD PTR [ebx],eax
1000f912:	ja     0x1000f91a
1000f914:	lea    eax,[ecx+eax*1-0x30]
1000f918:	jmp    0x1000f91e
1000f91a:	lea    eax,[ecx+eax*1-0x57]
1000f91e:	inc    DWORD PTR [ebp-0x8]
1000f921:	mov    DWORD PTR [ebx],eax
1000f923:	mov    esi,DWORD PTR [edi]
1000f925:	call   0x1000e2e6
1000f92a:	test   al,al
1000f92c:	je     0x1000f8c6
1000f92e:	xor    eax,eax
1000f930:	inc    eax
1000f931:	jmp    0x1000f973
1000f933:	cmp    DWORD PTR [ebp-0x8],0x0
1000f937:	jne    0x1000f94d
1000f939:	jmp    0x1000f92e
1000f93b:	mov    eax,DWORD PTR [edi]
1000f93d:	call   0x1000e437
1000f942:	cmp    al,0xd
1000f944:	je     0x1000f958
1000f946:	mov    eax,DWORD PTR [edi]
1000f948:	call   0x1000e455
1000f94d:	mov    esi,DWORD PTR [edi]
1000f94f:	call   0x1000e2e6
1000f954:	test   al,al
1000f956:	je     0x1000f93b
1000f958:	push   0x0
1000f95a:	sub    esp,0x1c
1000f95d:	mov    ecx,esp
1000f95f:	mov    DWORD PTR [ebp-0x8],esp
1000f962:	push   0x1006e4b0
1000f967:	call   0x100011a7
1000f96c:	mov    ebx,edi
1000f96e:	call   0x1000f250
1000f973:	pop    esi
1000f974:	pop    ebx
1000f975:	leave  
1000f976:	ret    
1000f977:	push   ebp
1000f978:	mov    ebp,esp
1000f97a:	push   ecx
1000f97b:	push   ecx
1000f97c:	push   DWORD PTR [ebp+0xc]
1000f97f:	and    DWORD PTR [ebp-0x4],0x0
1000f983:	push   DWORD PTR [ebp+0x8]
1000f986:	call   0x1000f992
1000f98b:	mov    eax,DWORD PTR [ebp+0x8]
1000f98e:	pop    ecx
1000f98f:	pop    ecx
1000f990:	leave  
1000f991:	ret    
1000f992:	push   0x34
1000f994:	mov    eax,0x10063351
1000f999:	call   0x10059df5
1000f99e:	mov    edi,DWORD PTR [ebp+0x8]
1000f9a1:	xor    esi,esi
1000f9a3:	mov    DWORD PTR [ebp-0x10],esi
1000f9a6:	mov    DWORD PTR [edi+0x4],esi
1000f9a9:	mov    DWORD PTR [edi+0x8],esi
1000f9ac:	mov    DWORD PTR [edi+0xc],esi
1000f9af:	mov    DWORD PTR [ebp-0x4],esi
1000f9b2:	push   DWORD PTR ds:0x100834a8
1000f9b8:	mov    DWORD PTR [ebp-0x10],0x1
1000f9bf:	call   0x10043450
1000f9c4:	pop    ecx
1000f9c5:	mov    DWORD PTR [ebp-0x14],eax
1000f9c8:	push   esi
1000f9c9:	push   DWORD PTR ds:0x100834a8
1000f9cf:	push   DWORD PTR [ebp+0xc]
1000f9d2:	call   0x1000ce2f
1000f9d7:	mov    ebx,eax
1000f9d9:	cmp    ebx,0xffffffff
1000f9dc:	jne    0x1000f9e4
1000f9de:	mov    eax,DWORD PTR [ebp+0xc]
1000f9e1:	mov    ebx,DWORD PTR [eax+0x14]
1000f9e4:	cmp    ebx,esi
1000f9e6:	jb     0x1000fa36
1000f9e8:	mov    eax,ebx
1000f9ea:	sub    eax,esi
1000f9ec:	push   eax
1000f9ed:	push   esi
1000f9ee:	push   DWORD PTR [ebp+0xc]
1000f9f1:	lea    eax,[ebp-0x40]
1000f9f4:	call   0x1000ce4e
1000f9f9:	push   eax
1000f9fa:	lea    eax,[ebp-0x24]
1000f9fd:	push   eax
1000f9fe:	mov    DWORD PTR [ebp-0x4],0x1
1000fa05:	call   0x1000fa46
1000fa0a:	pop    ecx
1000fa0b:	pop    ecx
1000fa0c:	push   eax
1000fa0d:	mov    esi,edi
1000fa0f:	mov    BYTE PTR [ebp-0x4],0x2
1000fa13:	call   0x1000fb01
1000fa18:	lea    esi,[ebp-0x24]
1000fa1b:	call   0x10004996
1000fa20:	push   0x0
1000fa22:	push   0x1
1000fa24:	lea    ecx,[ebp-0x40]
1000fa27:	mov    BYTE PTR [ebp-0x4],0x0
1000fa2b:	call   0x100012f0
1000fa30:	mov    eax,DWORD PTR [ebp-0x14]
1000fa33:	lea    esi,[ebx+eax*1]
1000fa36:	mov    eax,DWORD PTR [ebp+0xc]
1000fa39:	cmp    esi,DWORD PTR [eax+0x14]
1000fa3c:	jb     0x1000f9c8
1000fa3e:	mov    eax,edi
1000fa40:	call   0x10059ecd
1000fa45:	ret    
1000fa46:	push   0x44
1000fa48:	mov    eax,0x10061f28
1000fa4d:	call   0x10059df5
1000fa52:	mov    esi,DWORD PTR [ebp+0x8]
1000fa55:	xor    ebx,ebx
1000fa57:	mov    DWORD PTR [ebp-0x14],ebx
1000fa5a:	mov    DWORD PTR [esi+0x4],ebx
1000fa5d:	mov    DWORD PTR [esi+0x8],ebx
1000fa60:	mov    DWORD PTR [esi+0xc],ebx
1000fa63:	xor    edi,edi
1000fa65:	inc    edi
1000fa66:	mov    DWORD PTR [ebp-0x4],ebx
1000fa69:	push   0x1006ee0c
1000fa6e:	mov    DWORD PTR [ebp-0x14],edi
1000fa71:	call   0x10043450
1000fa76:	pop    ecx
1000fa77:	mov    DWORD PTR [ebp-0x18],eax
1000fa7a:	mov    DWORD PTR [ebp-0x10],ebx
1000fa7d:	push   DWORD PTR [ebp-0x10]
1000fa80:	push   0x1006ee0c
1000fa85:	push   DWORD PTR [ebp+0xc]
1000fa88:	call   0x1000ce2f
1000fa8d:	mov    ebx,eax
1000fa8f:	cmp    ebx,0xffffffff
1000fa92:	jne    0x1000fa9a
1000fa94:	mov    eax,DWORD PTR [ebp+0xc]
1000fa97:	mov    ebx,DWORD PTR [eax+0x14]
1000fa9a:	cmp    ebx,DWORD PTR [ebp-0x10]
1000fa9d:	jb     0x1000faee
1000fa9f:	mov    eax,ebx
1000faa1:	sub    eax,DWORD PTR [ebp-0x10]
1000faa4:	push   eax
1000faa5:	push   DWORD PTR [ebp-0x10]
1000faa8:	lea    eax,[ebp-0x50]
1000faab:	push   DWORD PTR [ebp+0xc]
1000faae:	call   0x1000ce4e
1000fab3:	lea    ecx,[ebp-0x34]
1000fab6:	push   ecx
1000fab7:	mov    ecx,eax
1000fab9:	mov    DWORD PTR [ebp-0x4],edi
1000fabc:	call   0x1000fb5b
1000fac1:	pop    ecx
1000fac2:	push   eax
1000fac3:	mov    BYTE PTR [ebp-0x4],0x2
1000fac7:	call   0x1000fd2a
1000facc:	push   0x0
1000face:	push   edi
1000facf:	lea    ecx,[ebp-0x34]
1000fad2:	call   0x100012f0
1000fad7:	push   0x0
1000fad9:	push   edi
1000fada:	lea    ecx,[ebp-0x50]
1000fadd:	mov    BYTE PTR [ebp-0x4],0x0
1000fae1:	call   0x100012f0
1000fae6:	mov    eax,DWORD PTR [ebp-0x18]
1000fae9:	add    ebx,eax
1000faeb:	mov    DWORD PTR [ebp-0x10],ebx
1000faee:	mov    eax,DWORD PTR [ebp-0x10]
1000faf1:	mov    ecx,DWORD PTR [ebp+0xc]
1000faf4:	cmp    eax,DWORD PTR [ecx+0x14]
1000faf7:	jb     0x1000fa7d
1000faf9:	mov    eax,esi
1000fafb:	call   0x10059ecd
1000fb00:	ret    
1000fb01:	push   ebp
1000fb02:	mov    ebp,esp
1000fb04:	sub    esp,0xc
1000fb07:	push   ebx
1000fb08:	mov    ebx,DWORD PTR [esi+0x4]
1000fb0b:	test   ebx,ebx
1000fb0d:	push   edi
1000fb0e:	jne    0x1000fb14
1000fb10:	xor    edi,edi
1000fb12:	jmp    0x1000fb1c
1000fb14:	mov    edi,DWORD PTR [esi+0xc]
1000fb17:	sub    edi,ebx
1000fb19:	sar    edi,0x4
1000fb1c:	mov    eax,esi
1000fb1e:	call   0x1000cec8
1000fb23:	cmp    eax,edi
1000fb25:	jae    0x1000fb39
1000fb27:	push   DWORD PTR [ebp+0x8]
1000fb2a:	push   0x1
1000fb2c:	push   DWORD PTR [esi+0x8]
1000fb2f:	call   0x1000fc66
1000fb34:	mov    DWORD PTR [esi+0x8],eax
1000fb37:	jmp    0x1000fb55
1000fb39:	mov    edi,DWORD PTR [esi+0x8]
1000fb3c:	cmp    ebx,edi
1000fb3e:	jbe    0x1000fb45
1000fb40:	call   0x10043605
1000fb45:	push   edi
1000fb46:	push   esi
1000fb47:	push   DWORD PTR [ebp+0x8]
1000fb4a:	lea    eax,[ebp-0xc]
1000fb4d:	push   eax
1000fb4e:	mov    eax,esi
1000fb50:	call   0x1000fbbf
1000fb55:	pop    edi
1000fb56:	pop    ebx
1000fb57:	leave  
1000fb58:	ret    0x4
1000fb5b:	push   0x20
1000fb5d:	mov    eax,0x10060b84
1000fb62:	call   0x10059df5
1000fb67:	mov    ebx,ecx
1000fb69:	and    DWORD PTR [ebp-0x10],0x0
1000fb6d:	call   0x1000fd89
1000fb72:	mov    esi,eax
1000fb74:	call   0x1000fdf1
1000fb79:	cmp    eax,0xffffffff
1000fb7c:	jne    0x1000fb84
1000fb7e:	mov    eax,DWORD PTR [ebx+0x14]
1000fb81:	dec    eax
1000fb82:	jmp    0x1000fb87
1000fb84:	sub    eax,esi
1000fb86:	inc    eax
1000fb87:	push   eax
1000fb88:	mov    eax,esi
1000fb8a:	inc    eax
1000fb8b:	neg    eax
1000fb8d:	sbb    eax,eax
1000fb8f:	and    eax,esi
1000fb91:	push   eax
1000fb92:	push   ebx
1000fb93:	lea    eax,[ebp-0x2c]
1000fb96:	call   0x1000ce4e
1000fb9b:	and    DWORD PTR [ebp-0x4],0x0
1000fb9f:	push   eax
1000fba0:	push   DWORD PTR [ebp+0x8]
1000fba3:	call   0x1002e1b3
1000fba8:	pop    ecx
1000fba9:	pop    ecx
1000fbaa:	push   0x0
1000fbac:	push   0x1
1000fbae:	lea    ecx,[ebp-0x2c]
1000fbb1:	call   0x100012f0
1000fbb6:	mov    eax,DWORD PTR [ebp+0x8]
1000fbb9:	call   0x10059ecd
1000fbbe:	ret    
1000fbbf:	push   ebp
1000fbc0:	mov    ebp,esp
1000fbc2:	push   ecx
1000fbc3:	push   ebx
1000fbc4:	push   esi
1000fbc5:	push   edi
1000fbc6:	mov    esi,eax
1000fbc8:	call   0x1000cec8
1000fbcd:	test   eax,eax
1000fbcf:	jne    0x1000fbd5
1000fbd1:	xor    edi,edi
1000fbd3:	jmp    0x1000fbfa
1000fbd5:	mov    ebx,DWORD PTR [esi+0x4]
1000fbd8:	cmp    ebx,DWORD PTR [esi+0x8]
1000fbdb:	jbe    0x1000fbe2
1000fbdd:	call   0x10043605
1000fbe2:	cmp    DWORD PTR [ebp+0x10],0x0
1000fbe6:	je     0x1000fbed
1000fbe8:	cmp    DWORD PTR [ebp+0x10],esi
1000fbeb:	je     0x1000fbf2
1000fbed:	call   0x10043605
1000fbf2:	mov    edi,DWORD PTR [ebp+0x14]
1000fbf5:	sub    edi,ebx
1000fbf7:	sar    edi,0x4
1000fbfa:	push   DWORD PTR [ebp+0x14]
1000fbfd:	mov    ecx,DWORD PTR [ebp+0xc]
1000fc00:	push   DWORD PTR [ebp+0x10]
1000fc03:	push   esi
1000fc04:	call   0x1000fe5c
1000fc09:	mov    ebx,DWORD PTR [esi+0x4]
1000fc0c:	cmp    ebx,DWORD PTR [esi+0x8]
1000fc0f:	jbe    0x1000fc16
1000fc11:	call   0x10043605
1000fc16:	shl    edi,0x4
1000fc19:	add    edi,ebx
1000fc1b:	cmp    edi,DWORD PTR [esi+0x8]
1000fc1e:	mov    DWORD PTR [ebp+0x14],ebx
1000fc21:	ja     0x1000fc28
1000fc23:	cmp    edi,DWORD PTR [esi+0x4]
1000fc26:	jae    0x1000fc2d
1000fc28:	call   0x10043605
1000fc2d:	mov    eax,DWORD PTR [ebp+0x8]
1000fc30:	mov    DWORD PTR [eax+0x4],edi
1000fc33:	pop    edi
1000fc34:	mov    DWORD PTR [eax],esi
1000fc36:	pop    esi
1000fc37:	pop    ebx
1000fc38:	pop    ecx
1000fc39:	pop    ebp
1000fc3a:	ret    0x10
1000fc3d:	push   esi
1000fc3e:	mov    esi,eax
1000fc40:	cmp    esi,0xfffffff
1000fc46:	jbe    0x1000fc4d
1000fc48:	jmp    0x1000dbd4
1000fc4d:	mov    ecx,esi
1000fc4f:	call   0x1002de4f
1000fc54:	shl    esi,0x4
1000fc57:	add    esi,eax
1000fc59:	mov    DWORD PTR [edi+0x4],eax
1000fc5c:	mov    DWORD PTR [edi+0x8],eax
1000fc5f:	mov    DWORD PTR [edi+0xc],esi
1000fc62:	mov    al,0x1
1000fc64:	pop    esi
1000fc65:	ret    
1000fc66:	push   ebp
1000fc67:	mov    ebp,esp
1000fc69:	push   ecx
1000fc6a:	push   ecx
1000fc6b:	push   edi
1000fc6c:	xor    eax,eax
1000fc6e:	lea    edi,[ebp-0x4]
1000fc71:	stos   BYTE PTR es:[edi],al
1000fc72:	push   DWORD PTR [ebp-0x4]
1000fc75:	push   DWORD PTR [ebp+0xc]
1000fc78:	push   DWORD PTR [ebp+0x10]
1000fc7b:	push   DWORD PTR [ebp+0xc]
1000fc7e:	push   DWORD PTR [ebp+0x8]
1000fc81:	call   0x1001036f
1000fc86:	mov    eax,DWORD PTR [ebp+0xc]
1000fc89:	add    esp,0x14
1000fc8c:	shl    eax,0x4
1000fc8f:	add    eax,DWORD PTR [ebp+0x8]
1000fc92:	pop    edi
1000fc93:	leave  
1000fc94:	ret    0xc
1000fc97:	push   0x10
1000fc99:	mov    eax,0x10061413
1000fc9e:	call   0x10059e28
1000fca3:	mov    ebx,ecx
1000fca5:	mov    esi,DWORD PTR [ebp+0x8]
1000fca8:	mov    eax,ebx
1000fcaa:	call   0x100045f3
1000fcaf:	xor    ecx,ecx
1000fcb1:	cmp    eax,ecx
1000fcb3:	mov    DWORD PTR [esi+0x4],ecx
1000fcb6:	mov    DWORD PTR [esi+0x8],ecx
1000fcb9:	mov    DWORD PTR [esi+0xc],ecx
1000fcbc:	je     0x1000fd0e
1000fcbe:	mov    edi,esi
1000fcc0:	call   0x1000496d
1000fcc5:	test   al,al
1000fcc7:	je     0x1000fd0e
1000fcc9:	and    DWORD PTR [ebp-0x4],0x0
1000fccd:	mov    eax,DWORD PTR [ebx+0x8]
1000fcd0:	cmp    DWORD PTR [ebx+0x4],eax
1000fcd3:	mov    DWORD PTR [ebp-0x18],eax
1000fcd6:	jbe    0x1000fcdd
1000fcd8:	call   0x10043605
1000fcdd:	mov    eax,DWORD PTR [ebx+0x4]
1000fce0:	cmp    eax,DWORD PTR [ebx+0x8]
1000fce3:	mov    DWORD PTR [ebp-0x1c],eax
1000fce6:	jbe    0x1000fced
1000fce8:	call   0x10043605
1000fced:	mov    ecx,DWORD PTR [esi+0x4]
1000fcf0:	xor    eax,eax
1000fcf2:	lea    edi,[ebp-0x14]
1000fcf5:	stos   BYTE PTR es:[edi],al
1000fcf6:	push   DWORD PTR [ebp-0x14]
1000fcf9:	push   DWORD PTR [ebp+0x8]
1000fcfc:	push   ecx
1000fcfd:	push   DWORD PTR [ebp-0x18]
1000fd00:	mov    ecx,DWORD PTR [ebp-0x1c]
1000fd03:	call   0x1001075b
1000fd08:	add    esp,0x10
1000fd0b:	mov    DWORD PTR [esi+0x8],eax
1000fd0e:	mov    eax,esi
1000fd10:	call   0x10059ecd
1000fd15:	ret    0x4
1000fd18:	mov    esi,DWORD PTR [ebp+0x8]
1000fd1b:	call   0x10004996
1000fd20:	push   0x0
1000fd22:	push   0x0
1000fd24:	call   0x10047942
1000fd29:	int3   
1000fd2a:	push   ebp
1000fd2b:	mov    ebp,esp
1000fd2d:	sub    esp,0xc
1000fd30:	push   ebx
1000fd31:	push   edi
1000fd32:	mov    edi,DWORD PTR [esi+0x4]
1000fd35:	test   edi,edi
1000fd37:	jne    0x1000fd3d
1000fd39:	xor    ebx,ebx
1000fd3b:	jmp    0x1000fd4a
1000fd3d:	mov    eax,DWORD PTR [esi+0xc]
1000fd40:	sub    eax,edi
1000fd42:	push   0x1c
1000fd44:	cdq    
1000fd45:	pop    ecx
1000fd46:	idiv   ecx
1000fd48:	mov    ebx,eax
1000fd4a:	mov    eax,esi
1000fd4c:	call   0x100045f3
1000fd51:	cmp    eax,ebx
1000fd53:	jae    0x1000fd67
1000fd55:	push   DWORD PTR [ebp+0x8]
1000fd58:	push   0x1
1000fd5a:	push   DWORD PTR [esi+0x8]
1000fd5d:	call   0x100100a9
1000fd62:	mov    DWORD PTR [esi+0x8],eax
1000fd65:	jmp    0x1000fd83
1000fd67:	mov    ebx,DWORD PTR [esi+0x8]
1000fd6a:	cmp    edi,ebx
1000fd6c:	jbe    0x1000fd73
1000fd6e:	call   0x10043605
1000fd73:	push   ebx
1000fd74:	push   esi
1000fd75:	push   DWORD PTR [ebp+0x8]
1000fd78:	lea    eax,[ebp-0xc]
1000fd7b:	push   eax
1000fd7c:	mov    eax,esi
1000fd7e:	call   0x10010025
1000fd83:	pop    edi
1000fd84:	pop    ebx
1000fd85:	leave  
1000fd86:	ret    0x4
1000fd89:	push   ebp
1000fd8a:	mov    ebp,esp
1000fd8c:	push   ecx
1000fd8d:	push   ecx
1000fd8e:	mov    ecx,DWORD PTR [ebx+0x14]
1000fd91:	test   ecx,ecx
1000fd93:	push   esi
1000fd94:	push   edi
1000fd95:	mov    BYTE PTR [ebp-0x4],0x20
1000fd99:	jbe    0x1000fddc
1000fd9b:	mov    edx,DWORD PTR [ebx+0x18]
1000fd9e:	cmp    edx,0x10
1000fda1:	lea    esi,[ebx+0x4]
1000fda4:	jb     0x1000fdaa
1000fda6:	mov    eax,DWORD PTR [esi]
1000fda8:	jmp    0x1000fdac
1000fdaa:	mov    eax,esi
1000fdac:	add    eax,ecx
1000fdae:	cmp    edx,0x10
1000fdb1:	mov    DWORD PTR [ebp-0x8],eax
1000fdb4:	jb     0x1000fdba
1000fdb6:	mov    edi,DWORD PTR [esi]
1000fdb8:	jmp    0x1000fdbc
1000fdba:	mov    edi,esi
1000fdbc:	cmp    edi,eax
1000fdbe:	jae    0x1000fddc
1000fdc0:	movsx  eax,BYTE PTR [edi]
1000fdc3:	push   0x1
1000fdc5:	push   eax
1000fdc6:	lea    eax,[ebp-0x4]
1000fdc9:	push   eax
1000fdca:	call   0x10045d10
1000fdcf:	add    esp,0xc
1000fdd2:	test   eax,eax
1000fdd4:	je     0x1000fde3
1000fdd6:	inc    edi
1000fdd7:	cmp    edi,DWORD PTR [ebp-0x8]
1000fdda:	jb     0x1000fdc0
1000fddc:	or     eax,0xffffffff
1000fddf:	pop    edi
1000fde0:	pop    esi
1000fde1:	leave  
1000fde2:	ret    
1000fde3:	cmp    DWORD PTR [ebx+0x18],0x10
1000fde7:	jb     0x1000fdeb
1000fde9:	mov    esi,DWORD PTR [esi]
1000fdeb:	sub    edi,esi
1000fded:	mov    eax,edi
1000fdef:	jmp    0x1000fddf
1000fdf1:	push   ebp
1000fdf2:	mov    ebp,esp
1000fdf4:	push   ecx
1000fdf5:	mov    eax,DWORD PTR [ebx+0x14]
1000fdf8:	test   eax,eax
1000fdfa:	push   esi
1000fdfb:	push   edi
1000fdfc:	mov    BYTE PTR [ebp-0x4],0x20
1000fe00:	jbe    0x1000fe55
1000fe02:	or     ecx,0xffffffff
1000fe05:	cmp    eax,ecx
1000fe07:	ja     0x1000fe0c
1000fe09:	lea    ecx,[eax-0x1]
1000fe0c:	cmp    DWORD PTR [ebx+0x18],0x10
1000fe10:	lea    edi,[ebx+0x4]
1000fe13:	jb     0x1000fe19
1000fe15:	mov    eax,DWORD PTR [edi]
1000fe17:	jmp    0x1000fe1b
1000fe19:	mov    eax,edi
1000fe1b:	lea    esi,[eax+ecx*1]
1000fe1e:	jmp    0x1000fe31
1000fe20:	cmp    DWORD PTR [ebx+0x18],0x10
1000fe24:	jb     0x1000fe2a
1000fe26:	mov    eax,DWORD PTR [edi]
1000fe28:	jmp    0x1000fe2c
1000fe2a:	mov    eax,edi
1000fe2c:	cmp    esi,eax
1000fe2e:	je     0x1000fe55
1000fe30:	dec    esi
1000fe31:	movsx  eax,BYTE PTR [esi]
1000fe34:	push   0x1
1000fe36:	push   eax
1000fe37:	lea    eax,[ebp-0x4]
1000fe3a:	push   eax
1000fe3b:	call   0x10045d10
1000fe40:	add    esp,0xc
1000fe43:	test   eax,eax
1000fe45:	jne    0x1000fe20
1000fe47:	cmp    DWORD PTR [ebx+0x18],0x10
1000fe4b:	jb     0x1000fe4f
1000fe4d:	mov    edi,DWORD PTR [edi]
1000fe4f:	sub    esi,edi
1000fe51:	mov    eax,esi
1000fe53:	jmp    0x1000fe58
1000fe55:	or     eax,0xffffffff
1000fe58:	pop    edi
1000fe59:	pop    esi
1000fe5a:	leave  
1000fe5b:	ret    
1000fe5c:	push   0x18
1000fe5e:	mov    eax,0x1006330d
1000fe63:	call   0x10059e28
1000fe68:	mov    esi,DWORD PTR [ebp+0x8]
1000fe6b:	lea    eax,[ebp-0x24]
1000fe6e:	push   eax
1000fe6f:	call   0x1000fc97
1000fe74:	xor    edi,edi
1000fe76:	mov    DWORD PTR [ebp-0x4],edi
1000fe79:	mov    eax,DWORD PTR [esi+0x4]
1000fe7c:	cmp    eax,edi
1000fe7e:	je     0x1000fe88
1000fe80:	mov    edi,DWORD PTR [esi+0xc]
1000fe83:	sub    edi,eax
1000fe85:	sar    edi,0x4
1000fe88:	mov    eax,esi
1000fe8a:	call   0x1000cec8
1000fe8f:	mov    ebx,0xfffffff
1000fe94:	mov    ecx,ebx
1000fe96:	sub    ecx,eax
1000fe98:	cmp    ecx,0x1
1000fe9b:	jae    0x1000fea2
1000fe9d:	call   0x1000dbd4
1000fea2:	mov    eax,esi
1000fea4:	call   0x1000cec8
1000fea9:	inc    eax
1000feaa:	cmp    edi,eax
1000feac:	jae    0x1000ff6d
1000feb2:	mov    eax,edi
1000feb4:	shr    eax,1
1000feb6:	sub    ebx,eax
1000feb8:	cmp    ebx,edi
1000feba:	jae    0x1000fec0
1000febc:	xor    edi,edi
1000febe:	jmp    0x1000fec2
1000fec0:	add    edi,eax
1000fec2:	mov    eax,esi
1000fec4:	call   0x1000cec8
1000fec9:	inc    eax
1000feca:	cmp    edi,eax
1000fecc:	jae    0x1000fed8
1000fece:	mov    eax,esi
1000fed0:	call   0x1000cec8
1000fed5:	mov    edi,eax
1000fed7:	inc    edi
1000fed8:	mov    ecx,edi
1000feda:	call   0x1002de4f
1000fedf:	push   eax
1000fee0:	push   DWORD PTR [ebp+0x10]
1000fee3:	mov    BYTE PTR [ebp-0x4],0x1
1000fee7:	mov    ecx,DWORD PTR [esi+0x4]
1000feea:	mov    DWORD PTR [ebp-0x14],eax
1000feed:	mov    DWORD PTR [ebp+0x8],eax
1000fef0:	call   0x100102d4
1000fef5:	lea    ecx,[ebp-0x24]
1000fef8:	push   ecx
1000fef9:	push   0x1
1000fefb:	push   eax
1000fefc:	mov    DWORD PTR [ebp+0x8],eax
1000feff:	call   0x1000fc66
1000ff04:	mov    ecx,DWORD PTR [ebp+0x10]
1000ff07:	push   eax
1000ff08:	push   DWORD PTR [esi+0x8]
1000ff0b:	mov    DWORD PTR [ebp+0x8],eax
1000ff0e:	call   0x100102d4
1000ff13:	mov    eax,esi
1000ff15:	call   0x1000cec8
1000ff1a:	mov    ebx,eax
1000ff1c:	mov    eax,DWORD PTR [esi+0x4]
1000ff1f:	inc    ebx
1000ff20:	test   eax,eax
1000ff22:	je     0x1000ff35
1000ff24:	push   DWORD PTR [esi+0x8]
1000ff27:	call   0x1000d905
1000ff2c:	push   DWORD PTR [esi+0x4]
1000ff2f:	call   0x10042fe2
1000ff34:	pop    ecx
1000ff35:	mov    eax,DWORD PTR [ebp-0x14]
1000ff38:	shl    edi,0x4
1000ff3b:	add    edi,eax
1000ff3d:	shl    ebx,0x4
1000ff40:	add    ebx,eax
1000ff42:	mov    DWORD PTR [esi+0xc],edi
1000ff45:	mov    DWORD PTR [esi+0x8],ebx
1000ff48:	mov    DWORD PTR [esi+0x4],eax
1000ff4b:	jmp    0x10010015
1000ff50:	push   DWORD PTR [ebp+0x8]
1000ff53:	mov    eax,DWORD PTR [ebp-0x14]
1000ff56:	call   0x1000d905
1000ff5b:	push   DWORD PTR [ebp-0x14]
1000ff5e:	call   0x10042fe2
1000ff63:	pop    ecx
1000ff64:	push   0x0
1000ff66:	push   0x0
1000ff68:	call   0x10047942
1000ff6d:	mov    ebx,DWORD PTR [esi+0x8]
1000ff70:	mov    edi,DWORD PTR [ebp+0x10]
1000ff73:	mov    eax,ebx
1000ff75:	sub    eax,edi
1000ff77:	sar    eax,0x4
1000ff7a:	cmp    eax,0x1
1000ff7d:	jae    0x1000ffe3
1000ff7f:	lea    eax,[edi+0x10]
1000ff82:	push   eax
1000ff83:	push   ebx
1000ff84:	mov    ecx,edi
1000ff86:	call   0x100102d4
1000ff8b:	mov    BYTE PTR [ebp-0x4],0x3
1000ff8f:	mov    eax,DWORD PTR [esi+0x8]
1000ff92:	lea    ecx,[ebp-0x24]
1000ff95:	push   ecx
1000ff96:	mov    ecx,eax
1000ff98:	xor    edx,edx
1000ff9a:	sub    ecx,edi
1000ff9c:	sar    ecx,0x4
1000ff9f:	inc    edx
1000ffa0:	sub    edx,ecx
1000ffa2:	push   edx
1000ffa3:	push   eax
1000ffa4:	call   0x1000fc66
1000ffa9:	and    DWORD PTR [ebp-0x4],0x0
1000ffad:	add    DWORD PTR [esi+0x8],0x10
1000ffb1:	mov    esi,DWORD PTR [esi+0x8]
1000ffb4:	add    esi,0xfffffff0
1000ffb7:	jmp    0x1000ffc6
1000ffb9:	lea    eax,[ebp-0x24]
1000ffbc:	mov    ecx,edi
1000ffbe:	call   0x1001045c
1000ffc3:	add    edi,0x10
1000ffc6:	cmp    edi,esi
1000ffc8:	jne    0x1000ffb9
1000ffca:	jmp    0x10010015
1000ffcc:	mov    eax,DWORD PTR [ebp+0x8]
1000ffcf:	mov    eax,DWORD PTR [eax+0x8]
1000ffd2:	add    eax,0x10
1000ffd5:	push   eax
1000ffd6:	mov    eax,DWORD PTR [ebp+0x10]
1000ffd9:	add    eax,0x10
1000ffdc:	call   0x1000d905
1000ffe1:	jmp    0x1000ff64
1000ffe3:	push   ebx
1000ffe4:	lea    ecx,[ebx-0x10]
1000ffe7:	push   ebx
1000ffe8:	mov    DWORD PTR [ebp+0x8],ecx
1000ffeb:	call   0x100102d4
1000fff0:	mov    ecx,DWORD PTR [ebp+0x8]
1000fff3:	mov    DWORD PTR [esi+0x8],eax
1000fff6:	push   edi
1000fff7:	mov    eax,ebx
1000fff9:	call   0x100102f8
1000fffe:	pop    ecx
1000ffff:	lea    esi,[edi+0x10]
10010002:	jmp    0x10010011
10010004:	lea    eax,[ebp-0x24]
10010007:	mov    ecx,edi
10010009:	call   0x1001045c
1001000e:	add    edi,0x10
10010011:	cmp    edi,esi
10010013:	jne    0x10010004
10010015:	lea    esi,[ebp-0x24]
10010018:	call   0x10004996
1001001d:	call   0x10059ecd
10010022:	ret    0xc
10010025:	push   ebp
10010026:	mov    ebp,esp
10010028:	push   ecx
10010029:	push   ebx
1001002a:	push   esi
1001002b:	push   edi
1001002c:	mov    esi,eax
1001002e:	call   0x100045f3
10010033:	test   eax,eax
10010035:	jne    0x1001003b
10010037:	xor    ebx,ebx
10010039:	jmp    0x10010065
1001003b:	mov    edi,DWORD PTR [esi+0x4]
1001003e:	cmp    edi,DWORD PTR [esi+0x8]
10010041:	jbe    0x10010048
10010043:	call   0x10043605
10010048:	cmp    DWORD PTR [ebp+0x10],0x0
1001004c:	je     0x10010053
1001004e:	cmp    DWORD PTR [ebp+0x10],esi
10010051:	je     0x10010058
10010053:	call   0x10043605
10010058:	mov    eax,DWORD PTR [ebp+0x14]
1001005b:	sub    eax,edi
1001005d:	push   0x1c
1001005f:	cdq    
10010060:	pop    ecx
10010061:	idiv   ecx
10010063:	mov    ebx,eax
10010065:	push   DWORD PTR [ebp+0x14]
10010068:	mov    ecx,esi
1001006a:	push   DWORD PTR [ebp+0x10]
1001006d:	push   DWORD PTR [ebp+0xc]
10010070:	call   0x100100d9
10010075:	mov    edi,DWORD PTR [esi+0x4]
10010078:	cmp    edi,DWORD PTR [esi+0x8]
1001007b:	jbe    0x10010082
1001007d:	call   0x10043605
10010082:	imul   ebx,ebx,0x1c
10010085:	mov    DWORD PTR [ebp+0x14],edi
10010088:	add    edi,ebx
1001008a:	cmp    edi,DWORD PTR [esi+0x8]
1001008d:	ja     0x10010094
1001008f:	cmp    edi,DWORD PTR [esi+0x4]
10010092:	jae    0x10010099
10010094:	call   0x10043605
10010099:	mov    eax,DWORD PTR [ebp+0x8]
1001009c:	mov    DWORD PTR [eax+0x4],edi
1001009f:	pop    edi
100100a0:	mov    DWORD PTR [eax],esi
100100a2:	pop    esi
100100a3:	pop    ebx
100100a4:	pop    ecx
100100a5:	pop    ebp
100100a6:	ret    0x10
100100a9:	push   ebp
100100aa:	mov    ebp,esp
100100ac:	push   ecx
100100ad:	push   edi
100100ae:	xor    eax,eax
100100b0:	lea    edi,[ebp-0x4]
100100b3:	stos   BYTE PTR es:[edi],al
100100b4:	push   DWORD PTR [ebp-0x4]
100100b7:	push   DWORD PTR [ebp+0xc]
100100ba:	push   DWORD PTR [ebp+0x10]
100100bd:	push   DWORD PTR [ebp+0xc]
100100c0:	push   DWORD PTR [ebp+0x8]
100100c3:	call   0x100103c0
100100c8:	mov    eax,DWORD PTR [ebp+0xc]
100100cb:	imul   eax,eax,0x1c
100100ce:	add    esp,0x14
100100d1:	add    eax,DWORD PTR [ebp+0x8]
100100d4:	pop    edi
100100d5:	leave  
100100d6:	ret    0xc
100100d9:	push   0x30
100100db:	mov    eax,0x100613ee
100100e0:	call   0x10059e94
100100e5:	mov    eax,DWORD PTR [ebp+0x8]
100100e8:	mov    esi,ecx
100100ea:	push   eax
100100eb:	lea    ecx,[ebp-0x30]
100100ee:	mov    DWORD PTR [ebp-0x34],esi
100100f1:	call   0x100011c9
100100f6:	xor    ebx,ebx
100100f8:	mov    DWORD PTR [ebp-0x4],ebx
100100fb:	mov    ecx,DWORD PTR [esi+0x4]
100100fe:	cmp    ecx,ebx
10010100:	je     0x1001010f
10010102:	mov    eax,DWORD PTR [esi+0xc]
10010105:	sub    eax,ecx
10010107:	push   0x1c
10010109:	cdq    
1001010a:	pop    ecx
1001010b:	idiv   ecx
1001010d:	mov    ebx,eax
1001010f:	mov    eax,esi
10010111:	call   0x100045f3
10010116:	mov    edi,0x9249249
1001011b:	mov    ecx,edi
1001011d:	sub    ecx,eax
1001011f:	cmp    ecx,0x1
10010122:	jae    0x10010129
10010124:	call   0x1000dbd4
10010129:	mov    eax,esi
1001012b:	call   0x100045f3
10010130:	inc    eax
10010131:	cmp    ebx,eax
10010133:	jae    0x100101f6
10010139:	mov    eax,ebx
1001013b:	shr    eax,1
1001013d:	sub    edi,eax
1001013f:	cmp    edi,ebx
10010141:	jae    0x10010147
10010143:	xor    ebx,ebx
10010145:	jmp    0x10010149
10010147:	add    ebx,eax
10010149:	mov    eax,esi
1001014b:	call   0x100045f3
10010150:	inc    eax
10010151:	cmp    ebx,eax
10010153:	jae    0x1001015f
10010155:	mov    eax,esi
10010157:	call   0x100045f3
1001015c:	mov    ebx,eax
1001015e:	inc    ebx
1001015f:	mov    ecx,ebx
10010161:	call   0x100050ca
10010166:	push   DWORD PTR [ebp+0x10]
10010169:	mov    BYTE PTR [ebp-0x4],0x1
1001016d:	mov    ecx,DWORD PTR [esi+0x4]
10010170:	mov    edx,eax
10010172:	mov    DWORD PTR [ebp-0x34],eax
10010175:	mov    DWORD PTR [ebp-0x38],eax
10010178:	call   0x1001034e
1001017d:	lea    ecx,[ebp-0x30]
10010180:	push   ecx
10010181:	push   0x1
10010183:	push   eax
10010184:	mov    DWORD PTR [ebp-0x38],eax
10010187:	call   0x100100a9
1001018c:	push   DWORD PTR [esi+0x8]
1001018f:	mov    ecx,DWORD PTR [ebp+0x10]
10010192:	mov    edx,eax
10010194:	mov    DWORD PTR [ebp-0x38],edx
10010197:	call   0x1001034e
1001019c:	mov    eax,esi
1001019e:	call   0x100045f3
100101a3:	mov    edi,eax
100101a5:	mov    eax,DWORD PTR [esi+0x4]
100101a8:	inc    edi
100101a9:	test   eax,eax
100101ab:	je     0x100101be
100101ad:	push   DWORD PTR [esi+0x8]
100101b0:	call   0x1000513a
100101b5:	push   DWORD PTR [esi+0x4]
100101b8:	call   0x10042fe2
100101bd:	pop    ecx
100101be:	mov    eax,DWORD PTR [ebp-0x34]
100101c1:	imul   ebx,ebx,0x1c
100101c4:	imul   edi,edi,0x1c
100101c7:	add    ebx,eax
100101c9:	add    edi,eax
100101cb:	mov    DWORD PTR [esi+0xc],ebx
100101ce:	mov    DWORD PTR [esi+0x8],edi
100101d1:	mov    DWORD PTR [esi+0x4],eax
100101d4:	jmp    0x100102c0
100101d9:	push   DWORD PTR [ebp-0x38]
100101dc:	mov    eax,DWORD PTR [ebp-0x34]
100101df:	call   0x1000513a
100101e4:	push   DWORD PTR [ebp-0x34]
100101e7:	call   0x10042fe2
100101ec:	pop    ecx
100101ed:	push   0x0
100101ef:	push   0x0
100101f1:	call   0x10047942
100101f6:	mov    edi,DWORD PTR [esi+0x8]
100101f9:	mov    ebx,DWORD PTR [ebp+0x10]
100101fc:	mov    eax,edi
100101fe:	sub    eax,ebx
10010200:	push   0x1c
10010202:	cdq    
10010203:	pop    ecx
10010204:	idiv   ecx
10010206:	push   edi
10010207:	cmp    eax,0x1
1001020a:	jae    0x10010278
1001020c:	lea    edx,[ebx+0x1c]
1001020f:	mov    ecx,ebx
10010211:	call   0x1001034e
10010216:	mov    BYTE PTR [ebp-0x4],0x3
1001021a:	mov    ecx,DWORD PTR [esi+0x8]
1001021d:	lea    eax,[ebp-0x30]
10010220:	push   eax
10010221:	mov    eax,ecx
10010223:	sub    eax,ebx
10010225:	push   0x1c
10010227:	pop    edi
10010228:	cdq    
10010229:	idiv   edi
1001022b:	xor    edx,edx
1001022d:	inc    edx
1001022e:	sub    edx,eax
10010230:	push   edx
10010231:	push   ecx
10010232:	call   0x100100a9
10010237:	and    DWORD PTR [ebp-0x4],0x0
1001023b:	add    DWORD PTR [esi+0x8],edi
1001023e:	mov    esi,DWORD PTR [esi+0x8]
10010241:	add    esi,0xffffffe4
10010244:	jmp    0x10010258
10010246:	push   0xffffffff
10010248:	push   0x0
1001024a:	lea    eax,[ebp-0x30]
1001024d:	push   eax
1001024e:	mov    ecx,ebx
10010250:	call   0x10001241
10010255:	add    ebx,0x1c
10010258:	cmp    ebx,esi
1001025a:	jne    0x10010246
1001025c:	jmp    0x100102c0
1001025e:	mov    eax,DWORD PTR [ebp-0x34]
10010261:	mov    eax,DWORD PTR [eax+0x8]
10010264:	add    eax,0x1c
10010267:	push   eax
10010268:	mov    eax,DWORD PTR [ebp+0x10]
1001026b:	add    eax,0x1c
1001026e:	call   0x1000513a
10010273:	jmp    0x100101ed
10010278:	lea    ecx,[edi-0x1c]
1001027b:	mov    edx,edi
1001027d:	call   0x1001034e
10010282:	mov    DWORD PTR [esi+0x8],eax
10010285:	lea    esi,[edi-0x1c]
10010288:	cmp    ebx,esi
1001028a:	je     0x100102a1
1001028c:	sub    edi,esi
1001028e:	sub    esi,0x1c
10010291:	lea    eax,[edi+esi*1]
10010294:	push   eax
10010295:	mov    ecx,esi
10010297:	call   0x100106fe
1001029c:	cmp    esi,ebx
1001029e:	pop    ecx
1001029f:	jne    0x1001028e
100102a1:	lea    edi,[ebx+0x1c]
100102a4:	cmp    ebx,edi
100102a6:	mov    esi,ebx
100102a8:	je     0x100102c0
100102aa:	push   0xffffffff
100102ac:	push   0x0
100102ae:	lea    eax,[ebp-0x30]
100102b1:	push   eax
100102b2:	mov    ecx,esi
100102b4:	call   0x10001241
100102b9:	add    esi,0x1c
100102bc:	cmp    esi,edi
100102be:	jne    0x100102aa
100102c0:	push   0x0
100102c2:	push   0x1
100102c4:	lea    ecx,[ebp-0x30]
100102c7:	call   0x100012f0
100102cc:	call   0x10059ef0
100102d1:	ret    0xc
100102d4:	push   ebp
100102d5:	mov    ebp,esp
100102d7:	push   ecx
100102d8:	push   edi
100102d9:	xor    eax,eax
100102db:	lea    edi,[ebp-0x4]
100102de:	stos   BYTE PTR es:[edi],al
100102df:	push   DWORD PTR [ebp-0x4]
100102e2:	push   DWORD PTR [ebp+0xc]
100102e5:	push   DWORD PTR [ebp+0xc]
100102e8:	push   DWORD PTR [ebp+0x8]
100102eb:	call   0x1001058c
100102f0:	add    esp,0x10
100102f3:	pop    edi
100102f4:	leave  
100102f5:	ret    0x8
100102f8:	push   ecx
100102f9:	push   ebx
100102fa:	push   esi
100102fb:	push   edi
100102fc:	mov    edi,ecx
100102fe:	sub    ecx,DWORD PTR [esp+0x14]
10010302:	mov    esi,eax
10010304:	sar    ecx,0x4
10010307:	shl    ecx,0x4
1001030a:	sub    eax,ecx
1001030c:	cmp    DWORD PTR [esp+0x14],edi
10010310:	je     0x10010349
10010312:	lea    edx,[edi+0xc]
10010315:	lea    ecx,[esi+0x8]
10010318:	sub    edi,esi
1001031a:	mov    ebx,DWORD PTR [edx-0x18]
1001031d:	mov    esi,DWORD PTR [ecx-0x14]
10010320:	sub    ecx,0x10
10010323:	sub    edx,0x10
10010326:	mov    DWORD PTR [ecx-0x4],ebx
10010329:	mov    DWORD PTR [edx-0x8],esi
1001032c:	mov    ebx,DWORD PTR [edi+ecx*1]
1001032f:	mov    esi,DWORD PTR [ecx]
10010331:	mov    DWORD PTR [ecx],ebx
10010333:	mov    DWORD PTR [edi+ecx*1],esi
10010336:	mov    esi,DWORD PTR [ecx+0x4]
10010339:	mov    ebx,DWORD PTR [edx]
1001033b:	mov    DWORD PTR [ecx+0x4],ebx
1001033e:	mov    DWORD PTR [edx],esi
10010340:	lea    esi,[edx-0xc]
10010343:	cmp    esi,DWORD PTR [esp+0x14]
10010347:	jne    0x1001031a
10010349:	pop    edi
1001034a:	pop    esi
1001034b:	pop    ebx
1001034c:	pop    ecx
1001034d:	ret    
1001034e:	push   ebp
1001034f:	mov    ebp,esp
10010351:	push   ecx
10010352:	push   edi
10010353:	xor    eax,eax
10010355:	lea    edi,[ebp-0x4]
10010358:	stos   BYTE PTR es:[edi],al
10010359:	push   DWORD PTR [ebp-0x4]
1001035c:	push   DWORD PTR [ebp+0x8]
1001035f:	push   DWORD PTR [ebp+0x8]
10010362:	call   0x1001061a
10010367:	add    esp,0xc
1001036a:	pop    edi
1001036b:	leave  
1001036c:	ret    0x4
1001036f:	push   0x8
10010371:	mov    eax,0x1006253d
10010376:	call   0x10059e28
1001037b:	mov    eax,DWORD PTR [ebp+0x8]
1001037e:	and    DWORD PTR [ebp-0x4],0x0
10010382:	mov    DWORD PTR [ebp-0x14],eax
10010385:	cmp    DWORD PTR [ebp+0xc],0x0
10010389:	jbe    0x100103ba
1001038b:	push   DWORD PTR [ebp+0x8]
1001038e:	mov    ecx,DWORD PTR [ebp+0x10]
10010391:	call   0x10010436
10010396:	dec    DWORD PTR [ebp+0xc]
10010399:	add    DWORD PTR [ebp+0x8],0x10
1001039d:	jmp    0x10010385
1001039f:	mov    esi,DWORD PTR [ebp-0x14]
100103a2:	jmp    0x100103ac
100103a4:	call   0x10004996
100103a9:	add    esi,0x10
100103ac:	cmp    esi,DWORD PTR [ebp+0x8]
100103af:	jne    0x100103a4
100103b1:	push   0x0
100103b3:	push   0x0
100103b5:	call   0x10047942
100103ba:	call   0x10059ecd
100103bf:	ret    
100103c0:	push   0x8
100103c2:	mov    eax,0x1006018a
100103c7:	call   0x10059e28
100103cc:	mov    eax,DWORD PTR [ebp+0x8]
100103cf:	and    DWORD PTR [ebp-0x4],0x0
100103d3:	mov    DWORD PTR [ebp-0x14],eax
100103d6:	cmp    DWORD PTR [ebp+0xc],0x0
100103da:	jbe    0x1001040c
100103dc:	push   DWORD PTR [ebp+0x10]
100103df:	mov    ecx,DWORD PTR [ebp+0x8]
100103e2:	call   0x10010412
100103e7:	dec    DWORD PTR [ebp+0xc]
100103ea:	add    DWORD PTR [ebp+0x8],0x1c
100103ee:	jmp    0x100103d6
100103f0:	mov    esi,DWORD PTR [ebp-0x14]
100103f3:	jmp    0x100103fe
100103f5:	push   esi
100103f6:	call   0x10006916
100103fb:	add    esi,0x1c
100103fe:	cmp    esi,DWORD PTR [ebp+0x8]
10010401:	push   0x0
10010403:	jne    0x100103f5
10010405:	push   0x0
10010407:	call   0x10047942
1001040c:	call   0x10059ecd
10010411:	ret    
10010412:	push   0x0
10010414:	mov    eax,0x1005fe21
10010419:	call   0x10059df5
1001041e:	and    DWORD PTR [ebp-0x4],0x0
10010422:	test   ecx,ecx
10010424:	je     0x1001042e
10010426:	push   DWORD PTR [ebp+0x8]
10010429:	call   0x100011c9
1001042e:	call   0x10059ecd
10010433:	ret    0x4
10010436:	push   0x0
10010438:	mov    eax,0x1005fe21
1001043d:	call   0x10059df5
10010442:	and    DWORD PTR [ebp-0x4],0x0
10010446:	cmp    DWORD PTR [ebp+0x8],0x0
1001044a:	je     0x10010454
1001044c:	push   DWORD PTR [ebp+0x8]
1001044f:	call   0x1000fc97
10010454:	call   0x10059ecd
10010459:	ret    0x4
1001045c:	push   ebp
1001045d:	mov    ebp,esp
1001045f:	push   ecx
10010460:	push   ebx
10010461:	push   esi
10010462:	push   edi
10010463:	mov    ebx,eax
10010465:	mov    edi,ecx
10010467:	cmp    edi,ebx
10010469:	je     0x10010585
1001046f:	call   0x100045f3
10010474:	test   eax,eax
10010476:	jne    0x100104b9
10010478:	mov    ebx,DWORD PTR [edi+0x8]
1001047b:	cmp    DWORD PTR [edi+0x4],ebx
1001047e:	jbe    0x10010485
10010480:	call   0x10043605
10010485:	mov    esi,DWORD PTR [edi+0x4]
10010488:	cmp    esi,DWORD PTR [edi+0x8]
1001048b:	jbe    0x10010492
1001048d:	call   0x10043605
10010492:	cmp    esi,ebx
10010494:	je     0x10010585
1001049a:	push   DWORD PTR [edi+0x8]
1001049d:	mov    eax,esi
1001049f:	mov    ecx,ebx
100104a1:	call   0x1001069c
100104a6:	pop    ecx
100104a7:	push   DWORD PTR [edi+0x8]
100104aa:	mov    esi,eax
100104ac:	call   0x1000513a
100104b1:	mov    DWORD PTR [edi+0x8],esi
100104b4:	jmp    0x10010585
100104b9:	mov    eax,ebx
100104bb:	call   0x100045f3
100104c0:	mov    esi,eax
100104c2:	mov    eax,edi
100104c4:	call   0x100045f3
100104c9:	cmp    esi,eax
100104cb:	ja     0x100104f6
100104cd:	push   DWORD PTR [ebx+0x8]
100104d0:	mov    eax,DWORD PTR [edi+0x4]
100104d3:	mov    ecx,DWORD PTR [ebx+0x4]
100104d6:	call   0x1001069c
100104db:	pop    ecx
100104dc:	push   DWORD PTR [edi+0x8]
100104df:	call   0x1000513a
100104e4:	mov    eax,ebx
100104e6:	call   0x100045f3
100104eb:	imul   eax,eax,0x1c
100104ee:	add    eax,DWORD PTR [edi+0x4]
100104f1:	jmp    0x10010582
100104f6:	mov    esi,DWORD PTR [edi+0x4]
100104f9:	test   esi,esi
100104fb:	jne    0x10010502
100104fd:	and    DWORD PTR [ebp-0x4],esi
10010500:	jmp    0x10010510
10010502:	mov    eax,DWORD PTR [edi+0xc]
10010505:	sub    eax,esi
10010507:	push   0x1c
10010509:	cdq    
1001050a:	pop    ecx
1001050b:	idiv   ecx
1001050d:	mov    DWORD PTR [ebp-0x4],eax
10010510:	mov    eax,ebx
10010512:	call   0x100045f3
10010517:	cmp    eax,DWORD PTR [ebp-0x4]
1001051a:	ja     0x1001053e
1001051c:	mov    eax,edi
1001051e:	call   0x100045f3
10010523:	mov    ecx,DWORD PTR [ebx+0x4]
10010526:	mov    esi,eax
10010528:	mov    eax,DWORD PTR [edi+0x4]
1001052b:	imul   esi,esi,0x1c
1001052e:	add    esi,ecx
10010530:	push   esi
10010531:	call   0x1001069c
10010536:	pop    ecx
10010537:	push   DWORD PTR [edi+0x8]
1001053a:	mov    ecx,esi
1001053c:	jmp    0x1001057a
1001053e:	test   esi,esi
10010540:	je     0x10010555
10010542:	push   DWORD PTR [edi+0x8]
10010545:	mov    eax,esi
10010547:	call   0x1000513a
1001054c:	push   DWORD PTR [edi+0x4]
1001054f:	call   0x10042fe2
10010554:	pop    ecx
10010555:	mov    eax,ebx
10010557:	call   0x100045f3
1001055c:	xor    ecx,ecx
1001055e:	cmp    eax,ecx
10010560:	mov    DWORD PTR [edi+0x4],ecx
10010563:	mov    DWORD PTR [edi+0x8],ecx
10010566:	mov    DWORD PTR [edi+0xc],ecx
10010569:	je     0x10010585
1001056b:	call   0x1000496d
10010570:	test   al,al
10010572:	je     0x10010585
10010574:	push   DWORD PTR [edi+0x4]
10010577:	mov    ecx,DWORD PTR [ebx+0x4]
1001057a:	push   DWORD PTR [ebx+0x8]
1001057d:	call   0x100106da
10010582:	mov    DWORD PTR [edi+0x8],eax
10010585:	mov    eax,edi
10010587:	pop    edi
10010588:	pop    esi
10010589:	pop    ebx
1001058a:	leave  
1001058b:	ret    
1001058c:	push   0x1c
1001058e:	mov    eax,0x100632ea
10010593:	call   0x10059e28
10010598:	mov    edi,DWORD PTR [ebp+0xc]
1001059b:	mov    esi,ecx
1001059d:	xor    eax,eax
1001059f:	mov    DWORD PTR [ebp-0x18],edi
100105a2:	mov    DWORD PTR [ebp-0x24],eax
100105a5:	mov    DWORD PTR [ebp-0x20],eax
100105a8:	mov    DWORD PTR [ebp-0x1c],eax
100105ab:	mov    DWORD PTR [ebp-0x4],eax
100105ae:	mov    BYTE PTR [ebp-0x4],0x1
100105b2:	cmp    esi,DWORD PTR [ebp+0x8]
100105b5:	je     0x1001060a
100105b7:	push   edi
100105b8:	lea    ecx,[ebp-0x28]
100105bb:	call   0x10010436
100105c0:	mov    ecx,DWORD PTR [esi+0x4]
100105c3:	mov    eax,DWORD PTR [edi+0x4]
100105c6:	mov    DWORD PTR [edi+0x4],ecx
100105c9:	mov    DWORD PTR [esi+0x4],eax
100105cc:	mov    ecx,DWORD PTR [esi+0x8]
100105cf:	mov    eax,DWORD PTR [edi+0x8]
100105d2:	mov    DWORD PTR [edi+0x8],ecx
100105d5:	mov    DWORD PTR [esi+0x8],eax
100105d8:	mov    ecx,DWORD PTR [esi+0xc]
100105db:	mov    eax,DWORD PTR [edi+0xc]
100105de:	mov    DWORD PTR [edi+0xc],ecx
100105e1:	add    edi,0x10
100105e4:	mov    DWORD PTR [esi+0xc],eax
100105e7:	mov    DWORD PTR [ebp+0xc],edi
100105ea:	add    esi,0x10
100105ed:	jmp    0x100105b2
100105ef:	mov    esi,DWORD PTR [ebp-0x18]
100105f2:	jmp    0x100105fc
100105f4:	call   0x10004996
100105f9:	add    esi,0x10
100105fc:	cmp    esi,DWORD PTR [ebp+0xc]
100105ff:	jne    0x100105f4
10010601:	xor    eax,eax
10010603:	push   eax
10010604:	push   eax
10010605:	call   0x10047942
1001060a:	lea    esi,[ebp-0x28]
1001060d:	call   0x10004996
10010612:	mov    eax,edi
10010614:	call   0x10059ecd
10010619:	ret    
1001061a:	push   0x2c
1001061c:	mov    eax,0x100609a9
10010621:	call   0x10059e94
10010626:	mov    esi,edx
10010628:	xor    ebx,ebx
1001062a:	mov    edi,ecx
1001062c:	push   ebx
1001062d:	lea    ecx,[ebp-0x30]
10010630:	mov    DWORD PTR [ebp-0x34],esi
10010633:	mov    DWORD PTR [ebp-0x38],esi
10010636:	mov    DWORD PTR [ebp-0x18],0xf
1001063d:	call   0x1000141c
10010642:	mov    DWORD PTR [ebp-0x4],ebx
10010645:	mov    BYTE PTR [ebp-0x4],0x1
10010649:	cmp    edi,DWORD PTR [ebp+0x8]
1001064c:	je     0x10010689
1001064e:	lea    eax,[ebp-0x30]
10010651:	push   eax
10010652:	mov    ecx,esi
10010654:	call   0x10010412
10010659:	push   esi
1001065a:	mov    ecx,edi
1001065c:	call   0x100106fe
10010661:	add    esi,0x1c
10010664:	pop    ecx
10010665:	mov    DWORD PTR [ebp-0x34],esi
10010668:	add    edi,0x1c
1001066b:	jmp    0x10010649
1001066d:	mov    esi,DWORD PTR [ebp-0x38]
10010670:	jmp    0x1001067b
10010672:	push   esi
10010673:	call   0x10006916
10010678:	add    esi,0x1c
1001067b:	cmp    esi,DWORD PTR [ebp-0x34]
1001067e:	push   0x0
10010680:	jne    0x10010672
10010682:	push   0x0
10010684:	call   0x10047942
10010689:	push   ebx
1001068a:	push   0x1
1001068c:	lea    ecx,[ebp-0x30]
1001068f:	call   0x100012f0
10010694:	mov    eax,esi
10010696:	call   0x10059ef0
1001069b:	ret    
1001069c:	push   ebx
1001069d:	push   esi
1001069e:	mov    ebx,eax
100106a0:	mov    eax,DWORD PTR [esp+0xc]
100106a4:	push   edi
100106a5:	mov    edi,ecx
100106a7:	sub    eax,edi
100106a9:	push   0x1c
100106ab:	cdq    
100106ac:	pop    ecx
100106ad:	idiv   ecx
100106af:	mov    esi,eax
100106b1:	imul   esi,esi,0x1c
100106b4:	add    esi,ebx
100106b6:	cmp    edi,DWORD PTR [esp+0x10]
100106ba:	je     0x100106d4
100106bc:	sub    ebx,edi
100106be:	push   0xffffffff
100106c0:	push   0x0
100106c2:	push   edi
100106c3:	lea    ecx,[ebx+edi*1]
100106c6:	call   0x10001241
100106cb:	add    edi,0x1c
100106ce:	cmp    edi,DWORD PTR [esp+0x10]
100106d2:	jne    0x100106be
100106d4:	pop    edi
100106d5:	mov    eax,esi
100106d7:	pop    esi
100106d8:	pop    ebx
100106d9:	ret    
100106da:	push   ebp
100106db:	mov    ebp,esp
100106dd:	push   ecx
100106de:	push   edi
100106df:	xor    eax,eax
100106e1:	lea    edi,[ebp-0x4]
100106e4:	stos   BYTE PTR es:[edi],al
100106e5:	push   DWORD PTR [ebp-0x4]
100106e8:	push   DWORD PTR [ebp+0xc]
100106eb:	push   DWORD PTR [ebp+0xc]
100106ee:	push   DWORD PTR [ebp+0x8]
100106f1:	call   0x1001075b
100106f6:	add    esp,0x10
100106f9:	pop    edi
100106fa:	leave  
100106fb:	ret    0x8
100106fe:	push   ebp
100106ff:	mov    ebp,esp
10010701:	sub    esp,0x14
10010704:	mov    eax,ds:0x100801ac
10010709:	xor    eax,ebp
1001070b:	mov    DWORD PTR [ebp-0x4],eax
1001070e:	mov    eax,DWORD PTR [ebp+0x8]
10010711:	push   ebx
10010712:	push   esi
10010713:	push   edi
10010714:	lea    edx,[eax+0x4]
10010717:	mov    esi,edx
10010719:	lea    edi,[ebp-0x14]
1001071c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001071d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001071e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001071f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010720:	lea    ebx,[ecx+0x4]
10010723:	mov    edi,edx
10010725:	mov    esi,ebx
10010727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001072a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001072b:	mov    edi,ebx
1001072d:	lea    esi,[ebp-0x14]
10010730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10010734:	mov    esi,DWORD PTR [ecx+0x14]
10010737:	mov    edx,DWORD PTR [eax+0x14]
1001073a:	mov    DWORD PTR [eax+0x14],esi
1001073d:	mov    esi,DWORD PTR [ecx+0x18]
10010740:	mov    DWORD PTR [ecx+0x14],edx
10010743:	mov    edx,DWORD PTR [eax+0x18]
10010746:	mov    DWORD PTR [eax+0x18],esi
10010749:	mov    DWORD PTR [ecx+0x18],edx
1001074c:	mov    ecx,DWORD PTR [ebp-0x4]
1001074f:	pop    edi
10010750:	pop    esi
10010751:	xor    ecx,ebp
10010753:	pop    ebx
10010754:	call   0x10043615
10010759:	leave  
1001075a:	ret    
1001075b:	push   0x8
1001075d:	mov    eax,0x10060986
10010762:	call   0x10059e28
10010767:	mov    esi,ecx
10010769:	mov    eax,DWORD PTR [ebp+0xc]
1001076c:	and    DWORD PTR [ebp-0x4],0x0
10010770:	mov    DWORD PTR [ebp-0x14],eax
10010773:	cmp    esi,DWORD PTR [ebp+0x8]
10010776:	je     0x100107a6
10010778:	mov    ecx,DWORD PTR [ebp+0xc]
1001077b:	push   esi
1001077c:	call   0x10010412
10010781:	add    DWORD PTR [ebp+0xc],0x1c
10010785:	add    esi,0x1c
10010788:	jmp    0x10010773
1001078a:	mov    esi,DWORD PTR [ebp-0x14]
1001078d:	jmp    0x10010798
1001078f:	push   esi
10010790:	call   0x10006916
10010795:	add    esi,0x1c
10010798:	cmp    esi,DWORD PTR [ebp+0xc]
1001079b:	push   0x0
1001079d:	jne    0x1001078f
1001079f:	push   0x0
100107a1:	call   0x10047942
100107a6:	mov    eax,DWORD PTR [ebp+0xc]
100107a9:	call   0x10059ecd
100107ae:	ret    
100107af:	mov    edx,DWORD PTR [ecx]
100107b1:	cmp    edx,DWORD PTR [eax]
100107b3:	jne    0x100107d1
100107b5:	mov    edx,DWORD PTR [ecx+0x4]
100107b8:	cmp    edx,DWORD PTR [eax+0x4]
100107bb:	jne    0x100107d1
100107bd:	mov    edx,DWORD PTR [ecx+0x8]
100107c0:	cmp    edx,DWORD PTR [eax+0x8]
100107c3:	jne    0x100107d1
100107c5:	mov    ecx,DWORD PTR [ecx+0xc]
100107c8:	cmp    ecx,DWORD PTR [eax+0xc]
100107cb:	jne    0x100107d1
100107cd:	xor    eax,eax
100107cf:	inc    eax
100107d0:	ret    
100107d1:	xor    eax,eax
100107d3:	ret    
100107d4:	test   esi,esi
100107d6:	jne    0x100107dc
100107d8:	xor    eax,eax
100107da:	jmp    0x100107fd
100107dc:	push   edi
100107dd:	mov    edi,DWORD PTR [esi]
100107df:	and    DWORD PTR [esi],0x0
100107e2:	test   eax,eax
100107e4:	je     0x100107f0
100107e6:	mov    ecx,DWORD PTR [eax]
100107e8:	push   esi
100107e9:	push   DWORD PTR [esp+0xc]
100107ed:	push   eax
100107ee:	call   DWORD PTR [ecx]
100107f0:	test   edi,edi
100107f2:	je     0x100107fa
100107f4:	mov    eax,DWORD PTR [edi]
100107f6:	push   edi
100107f7:	call   DWORD PTR [eax+0x8]
100107fa:	mov    eax,DWORD PTR [esi]
100107fc:	pop    edi
100107fd:	ret    0x4
10010800:	cmp    DWORD PTR [eax],0x0
10010803:	jne    0x10010821
10010805:	cmp    DWORD PTR [eax+0x4],0x0
10010809:	jne    0x10010821
1001080b:	cmp    DWORD PTR [eax+0x8],0xc0
10010812:	jne    0x10010821
10010814:	cmp    DWORD PTR [eax+0xc],0x46000000
1001081b:	jne    0x10010821
1001081d:	xor    eax,eax
1001081f:	inc    eax
10010820:	ret    
10010821:	xor    eax,eax
10010823:	ret    
10010824:	push   ebp
10010825:	mov    ebp,esp
10010827:	push   ecx
10010828:	cmp    DWORD PTR [ebp+0x8],0x0
1001082c:	push   esi
1001082d:	push   edi
1001082e:	mov    esi,eax
10010830:	je     0x100108ae
10010832:	test   esi,esi
10010834:	je     0x100108ae
10010836:	test   ebx,ebx
10010838:	jne    0x10010841
1001083a:	mov    eax,0x80004003
1001083f:	jmp    0x100108b3
10010841:	mov    eax,DWORD PTR [ebp+0xc]
10010844:	and    DWORD PTR [ebx],0x0
10010847:	call   0x10010800
1001084c:	test   eax,eax
1001084e:	je     0x100108a0
10010850:	mov    esi,DWORD PTR [esi+0x4]
10010853:	add    esi,DWORD PTR [ebp+0x8]
10010856:	mov    eax,DWORD PTR [esi]
10010858:	push   esi
10010859:	call   DWORD PTR [eax+0x4]
1001085c:	mov    DWORD PTR [ebx],esi
1001085e:	xor    eax,eax
10010860:	jmp    0x100108b3
10010862:	mov    ecx,DWORD PTR [esi]
10010864:	xor    eax,eax
10010866:	test   ecx,ecx
10010868:	sete   al
1001086b:	test   eax,eax
1001086d:	mov    DWORD PTR [ebp-0x4],eax
10010870:	jne    0x1001087e
10010872:	mov    eax,DWORD PTR [ebp+0xc]
10010875:	call   0x100107af
1001087a:	test   eax,eax
1001087c:	je     0x1001089d
1001087e:	cmp    edi,0x1
10010881:	je     0x10010850
10010883:	push   DWORD PTR [esi+0x4]
10010886:	push   ebx
10010887:	push   DWORD PTR [ebp+0xc]
1001088a:	push   DWORD PTR [ebp+0x8]
1001088d:	call   edi
1001088f:	test   eax,eax
10010891:	je     0x100108b3
10010893:	cmp    DWORD PTR [ebp-0x4],0x0
10010897:	jne    0x1001089d
10010899:	test   eax,eax
1001089b:	jl     0x100108b3
1001089d:	add    esi,0xc
100108a0:	mov    edi,DWORD PTR [esi+0x8]
100108a3:	test   edi,edi
100108a5:	jne    0x10010862
100108a7:	mov    eax,0x80004002
100108ac:	jmp    0x100108b3
100108ae:	mov    eax,0x80070057
100108b3:	pop    edi
100108b4:	pop    esi
100108b5:	leave  
100108b6:	ret    0x8
100108b9:	push   0xc
100108bb:	mov    eax,0x1005fd8f
100108c0:	call   0x10059e28
100108c5:	mov    edi,DWORD PTR [ebp+0x8]
100108c8:	test   edi,edi
100108ca:	jne    0x100108d3
100108cc:	mov    eax,0x80070057
100108d1:	jmp    0x1001092f
100108d3:	and    DWORD PTR [ebp-0x14],0x0
100108d7:	and    DWORD PTR [ebp-0x4],0x0
100108db:	push   0xc
100108dd:	call   0x10043196
100108e2:	pop    ecx
100108e3:	mov    esi,eax
100108e5:	jmp    0x100108f3
100108e7:	mov    eax,0x100108ed
100108ec:	ret    
100108ed:	mov    edi,DWORD PTR [ebp+0x8]
100108f0:	mov    esi,DWORD PTR [ebp-0x14]
100108f3:	test   esi,esi
100108f5:	jne    0x100108fe
100108f7:	mov    ebx,0x8007000e
100108fc:	jmp    0x1001092d
100108fe:	mov    eax,DWORD PTR [ebp+0xc]
10010901:	mov    DWORD PTR [esi],eax
10010903:	mov    eax,DWORD PTR [ebp+0x10]
10010906:	mov    DWORD PTR [esi+0x4],eax
10010909:	lea    eax,[edi+0xc]
1001090c:	push   eax
1001090d:	mov    DWORD PTR [ebp-0x18],eax
10010910:	call   DWORD PTR ds:0x100670f8
10010916:	mov    eax,DWORD PTR [edi+0x8]
10010919:	mov    DWORD PTR [esi+0x8],eax
1001091c:	lea    ecx,[ebp-0x18]
1001091f:	mov    BYTE PTR [ebp-0x14],0x1
10010923:	xor    ebx,ebx
10010925:	mov    DWORD PTR [edi+0x8],esi
10010928:	call   0x100111c4
1001092d:	mov    eax,ebx
1001092f:	call   0x10059ecd
10010934:	ret    0xc
10010937:	mov    eax,ecx
10010939:	and    DWORD PTR [eax],0x0
1001093c:	and    DWORD PTR [eax+0x4],0x0
10010940:	or     DWORD PTR [eax+0x8],0xffffffff
10010944:	ret    
10010945:	test   edi,edi
10010947:	jne    0x1001094f
10010949:	mov    eax,0x80004003
1001094e:	ret    
1001094f:	push   esi
10010950:	xor    eax,eax
10010952:	lea    esi,[ecx+0xc]
10010955:	cmp    DWORD PTR [esi],eax
10010957:	jne    0x1001095e
10010959:	call   0x10010c0e
1001095e:	mov    ecx,DWORD PTR [esi]
10010960:	mov    DWORD PTR [edi],ecx
10010962:	cmp    DWORD PTR [esi],0x0
10010965:	je     0x10010971
10010967:	mov    esi,DWORD PTR [esi]
10010969:	mov    eax,DWORD PTR [esi]
1001096b:	push   esi
1001096c:	call   DWORD PTR [eax+0x4]
1001096f:	xor    eax,eax
10010971:	pop    esi
10010972:	ret    
10010973:	push   ebp
10010974:	mov    ebp,esp
10010976:	push   ecx
10010977:	push   esi
10010978:	push   edi
10010979:	mov    esi,eax
1001097b:	xor    edi,edi
1001097d:	xor    eax,eax
1001097f:	cmp    DWORD PTR [esi+0xc],edi
10010982:	je     0x10010989
10010984:	cmp    DWORD PTR [esi+0x14],edi
10010987:	jne    0x10010990
10010989:	mov    ecx,esi
1001098b:	call   0x10010c0e
10010990:	cmp    DWORD PTR [esi+0xc],edi
10010993:	je     0x100109fd
10010995:	cmp    DWORD PTR [esi+0x14],edi
10010998:	push   ebx
10010999:	je     0x100109ea
1001099b:	cmp    DWORD PTR [ebp+0xc],0x1
1001099f:	jne    0x100109ea
100109a1:	mov    eax,DWORD PTR [ebp+0x8]
100109a4:	push   DWORD PTR [eax]
100109a6:	call   DWORD PTR ds:0x100670ac
100109ac:	mov    edi,DWORD PTR [esi+0x18]
100109af:	dec    edi
100109b0:	mov    DWORD PTR [ebp-0x4],eax
100109b3:	js     0x100109ea
100109b5:	mov    ebx,edi
100109b7:	imul   ebx,ebx,0xc
100109ba:	mov    eax,DWORD PTR [esi+0x14]
100109bd:	mov    ecx,DWORD PTR [ebp-0x4]
100109c0:	cmp    ecx,DWORD PTR [ebx+eax*1+0x4]
100109c4:	jne    0x100109e2
100109c6:	add    eax,ebx
100109c8:	mov    ecx,DWORD PTR [eax]
100109ca:	mov    eax,DWORD PTR [eax+0x4]
100109cd:	add    eax,eax
100109cf:	push   eax
100109d0:	mov    eax,DWORD PTR [ebp+0x8]
100109d3:	push   DWORD PTR [eax]
100109d5:	push   ecx
100109d6:	call   0x10043a74
100109db:	add    esp,0xc
100109de:	test   eax,eax
100109e0:	je     0x10010a03
100109e2:	dec    edi
100109e3:	sub    ebx,0xc
100109e6:	test   edi,edi
100109e8:	jge    0x100109ba
100109ea:	push   DWORD PTR [ebp+0x10]
100109ed:	mov    esi,DWORD PTR [esi+0xc]
100109f0:	push   DWORD PTR [ebp+0xc]
100109f3:	mov    eax,DWORD PTR [esi]
100109f5:	push   DWORD PTR [ebp+0x8]
100109f8:	push   esi
100109f9:	call   DWORD PTR [eax+0x28]
100109fc:	pop    ebx
100109fd:	pop    edi
100109fe:	pop    esi
100109ff:	leave  
10010a00:	ret    0xc
10010a03:	mov    eax,DWORD PTR [esi+0x14]
10010a06:	imul   edi,edi,0xc
10010a09:	mov    eax,DWORD PTR [edi+eax*1+0x8]
10010a0d:	mov    ecx,DWORD PTR [ebp+0x10]
10010a10:	mov    DWORD PTR [ecx],eax
10010a12:	xor    eax,eax
10010a14:	jmp    0x100109fc
10010a16:	push   ebp
10010a17:	mov    ebp,esp
10010a19:	push   esi
10010a1a:	mov    esi,eax
10010a1c:	xor    eax,eax
10010a1e:	cmp    DWORD PTR [esi+0xc],eax
10010a21:	je     0x10010a28
10010a23:	cmp    DWORD PTR [esi+0x14],eax
10010a26:	jne    0x10010a2f
10010a28:	mov    ecx,esi
10010a2a:	call   0x10010c0e
10010a2f:	cmp    DWORD PTR [esi+0xc],0x0
10010a33:	je     0x10010a53
10010a35:	push   DWORD PTR [ebp+0x20]
10010a38:	mov    esi,DWORD PTR [esi+0xc]
10010a3b:	push   DWORD PTR [ebp+0x1c]
10010a3e:	mov    eax,DWORD PTR [esi]
10010a40:	push   DWORD PTR [ebp+0x18]
10010a43:	push   DWORD PTR [ebp+0x14]
10010a46:	push   DWORD PTR [ebp+0x10]
10010a49:	push   DWORD PTR [ebp+0xc]
10010a4c:	push   DWORD PTR [ebp+0x8]
10010a4f:	push   esi
10010a50:	call   DWORD PTR [eax+0x2c]
10010a53:	pop    esi
10010a54:	pop    ebp
10010a55:	ret    0x1c
10010a58:	push   0x14
10010a5a:	mov    eax,0x1005fd74
10010a5f:	call   0x10059e28
10010a64:	mov    edi,DWORD PTR [ebp+0x8]
10010a67:	mov    ebx,DWORD PTR [ebp+0xc]
10010a6a:	mov    eax,DWORD PTR [ebx]
10010a6c:	lea    ecx,[ebp-0x20]
10010a6f:	push   ecx
10010a70:	push   ebx
10010a71:	call   DWORD PTR [eax+0xc]
10010a74:	xor    ecx,ecx
10010a76:	cmp    eax,ecx
10010a78:	jl     0x10010bc0
10010a7e:	mov    eax,DWORD PTR [ebp-0x20]
10010a81:	movzx  eax,WORD PTR [eax+0x2c]
10010a85:	mov    esi,eax
10010a87:	cmp    esi,ecx
10010a89:	mov    DWORD PTR [ebp-0x18],ecx
10010a8c:	mov    DWORD PTR [edi+0x18],eax
10010a8f:	mov    DWORD PTR [edi+0x14],ecx
10010a92:	je     0x10010b1b
10010a98:	push   0xc
10010a9a:	pop    edx
10010a9b:	mul    edx
10010a9d:	mov    DWORD PTR [ebp-0x4],ecx
10010aa0:	seto   cl
10010aa3:	neg    ecx
10010aa5:	or     ecx,eax
10010aa7:	xor    eax,eax
10010aa9:	add    ecx,0x4
10010aac:	setb   al
10010aaf:	neg    eax
10010ab1:	or     eax,ecx
10010ab3:	push   eax
10010ab4:	call   0x100438d7
10010ab9:	pop    ecx
10010aba:	mov    DWORD PTR [ebp-0x14],eax
10010abd:	test   eax,eax
10010abf:	mov    BYTE PTR [ebp-0x4],0x1
10010ac3:	je     0x10010ae5
10010ac5:	push   0x10001009
10010aca:	push   0x10010937
10010acf:	push   esi
10010ad0:	mov    DWORD PTR [eax],esi
10010ad2:	add    eax,0x4
10010ad5:	push   0xc
10010ad7:	push   eax
10010ad8:	mov    DWORD PTR [ebp-0x1c],eax
10010adb:	call   0x10045fb8
10010ae0:	mov    eax,DWORD PTR [ebp-0x1c]
10010ae3:	jmp    0x10010ae7
10010ae5:	xor    eax,eax
10010ae7:	or     DWORD PTR [ebp-0x4],0xffffffff
10010aeb:	mov    DWORD PTR [ebp-0x18],eax
10010aee:	jmp    0x10010b00
10010af0:	or     DWORD PTR [ebp-0x4],0xffffffff
10010af4:	mov    eax,0x10010afa
10010af9:	ret    
10010afa:	mov    edi,DWORD PTR [ebp+0x8]
10010afd:	mov    ebx,DWORD PTR [ebp+0xc]
10010b00:	cmp    DWORD PTR [ebp-0x18],0x0
10010b04:	jne    0x10010b19
10010b06:	push   DWORD PTR [ebp-0x20]
10010b09:	mov    eax,DWORD PTR [ebx]
10010b0b:	push   ebx
10010b0c:	call   DWORD PTR [eax+0x4c]
10010b0f:	mov    eax,0x8007000e
10010b14:	jmp    0x10010bc2
10010b19:	xor    ecx,ecx
10010b1b:	cmp    DWORD PTR [edi+0x18],ecx
10010b1e:	mov    DWORD PTR [ebp-0x14],ecx
10010b21:	jle    0x10010bb1
10010b27:	mov    esi,DWORD PTR [ebp-0x18]
10010b2a:	mov    eax,DWORD PTR [ebx]
10010b2c:	lea    ecx,[ebp-0x1c]
10010b2f:	push   ecx
10010b30:	push   DWORD PTR [ebp-0x14]
10010b33:	push   ebx
10010b34:	call   DWORD PTR [eax+0x14]
10010b37:	test   eax,eax
10010b39:	jl     0x10010b9f
10010b3b:	xor    eax,eax
10010b3d:	mov    DWORD PTR [ebp+0x8],eax
10010b40:	push   eax
10010b41:	push   eax
10010b42:	push   eax
10010b43:	mov    DWORD PTR [ebp-0x4],0x3
10010b4a:	mov    ecx,DWORD PTR [ebx]
10010b4c:	lea    eax,[ebp+0x8]
10010b4f:	push   eax
10010b50:	mov    eax,DWORD PTR [ebp-0x1c]
10010b53:	push   DWORD PTR [eax]
10010b55:	push   ebx
10010b56:	call   DWORD PTR [ecx+0x30]
10010b59:	test   eax,eax
10010b5b:	jl     0x10010b89
10010b5d:	mov    ebx,DWORD PTR [ebp+0x8]
10010b60:	mov    eax,DWORD PTR [esi]
10010b62:	and    DWORD PTR [ebp+0x8],0x0
10010b66:	cmp    eax,ebx
10010b68:	je     0x10010b73
10010b6a:	push   eax
10010b6b:	call   DWORD PTR ds:0x100672b4
10010b71:	mov    DWORD PTR [esi],ebx
10010b73:	push   DWORD PTR [esi]
10010b75:	call   DWORD PTR ds:0x100672a8
10010b7b:	mov    ebx,DWORD PTR [ebp+0xc]
10010b7e:	mov    DWORD PTR [esi+0x4],eax
10010b81:	mov    eax,DWORD PTR [ebp-0x1c]
10010b84:	mov    eax,DWORD PTR [eax]
10010b86:	mov    DWORD PTR [esi+0x8],eax
10010b89:	push   DWORD PTR [ebp-0x1c]
10010b8c:	mov    eax,DWORD PTR [ebx]
10010b8e:	push   ebx
10010b8f:	call   DWORD PTR [eax+0x50]
10010b92:	or     DWORD PTR [ebp-0x4],0xffffffff
10010b96:	push   DWORD PTR [ebp+0x8]
10010b99:	call   DWORD PTR ds:0x100672b4
10010b9f:	inc    DWORD PTR [ebp-0x14]
10010ba2:	mov    eax,DWORD PTR [ebp-0x14]
10010ba5:	add    esi,0xc
10010ba8:	cmp    eax,DWORD PTR [edi+0x18]
10010bab:	jl     0x10010b2a
10010bb1:	mov    eax,DWORD PTR [ebp-0x18]
10010bb4:	push   DWORD PTR [ebp-0x20]
10010bb7:	mov    DWORD PTR [edi+0x14],eax
10010bba:	mov    eax,DWORD PTR [ebx]
10010bbc:	push   ebx
10010bbd:	call   DWORD PTR [eax+0x4c]
10010bc0:	xor    eax,eax
10010bc2:	call   0x10059ecd
10010bc7:	ret    0x8
10010bca:	push   esi
10010bcb:	mov    esi,DWORD PTR [esp+0x8]
10010bcf:	test   esi,esi
10010bd1:	je     0x10010c0a
10010bd3:	mov    eax,DWORD PTR [esi+0xc]
10010bd6:	test   eax,eax
10010bd8:	je     0x10010be0
10010bda:	mov    ecx,DWORD PTR [eax]
10010bdc:	push   eax
10010bdd:	call   DWORD PTR [ecx+0x8]
10010be0:	mov    eax,DWORD PTR [esi+0x14]
10010be3:	and    DWORD PTR [esi+0xc],0x0
10010be7:	test   eax,eax
10010be9:	je     0x10010c06
10010beb:	push   edi
10010bec:	push   0x10001009
10010bf1:	lea    edi,[eax-0x4]
10010bf4:	push   DWORD PTR [edi]
10010bf6:	push   0xc
10010bf8:	push   eax
10010bf9:	call   0x1004325e
10010bfe:	push   edi
10010bff:	call   0x10043178
10010c04:	pop    ecx
10010c05:	pop    edi
10010c06:	and    DWORD PTR [esi+0x14],0x0
10010c0a:	pop    esi
10010c0b:	ret    0x4
10010c0e:	push   ebp
10010c0f:	mov    ebp,esp
10010c11:	and    esp,0xfffffff8
10010c14:	push   0xffffffff
10010c16:	push   0x1006493a
10010c1b:	mov    eax,fs:0x0
10010c21:	push   eax
10010c22:	sub    esp,0x20
10010c25:	push   ebx
10010c26:	push   esi
10010c27:	push   edi
10010c28:	mov    eax,ds:0x100801ac
10010c2d:	xor    eax,esp
10010c2f:	push   eax
10010c30:	lea    eax,[esp+0x30]
10010c34:	mov    fs:0x0,eax
10010c3a:	mov    esi,ecx
10010c3c:	xor    ebx,ebx
10010c3e:	cmp    DWORD PTR [esi+0xc],ebx
10010c41:	je     0x10010c5d
10010c43:	cmp    DWORD PTR [esi+0x14],ebx
10010c46:	je     0x10010c5d
10010c48:	xor    eax,eax
10010c4a:	mov    ecx,DWORD PTR [esp+0x30]
10010c4e:	mov    DWORD PTR fs:0x0,ecx
10010c55:	pop    ecx
10010c56:	pop    edi
10010c57:	pop    esi
10010c58:	pop    ebx
10010c59:	mov    esp,ebp
10010c5b:	pop    ebp
10010c5c:	ret    
10010c5d:	mov    eax,ds:0x10082c64
10010c62:	add    eax,0x10
10010c65:	mov    DWORD PTR [esp+0x24],eax
10010c69:	push   eax
10010c6a:	mov    DWORD PTR [esp+0x3c],ebx
10010c6e:	call   DWORD PTR ds:0x100670f8
10010c74:	cmp    DWORD PTR [esi+0xc],ebx
10010c77:	mov    BYTE PTR [esp+0x28],0x1
10010c7c:	jne    0x10010d68
10010c82:	call   0x10006994
10010c87:	mov    edi,eax
10010c89:	cmp    edi,ebx
10010c8b:	jne    0x10010c9f
10010c8d:	mov    esi,0x80004005
10010c92:	lea    ecx,[esp+0x24]
10010c96:	call   0x100111c4
10010c9b:	mov    eax,esi
10010c9d:	jmp    0x10010c4a
10010c9f:	mov    DWORD PTR [esp+0x18],ebx
10010ca3:	lea    ecx,[esp+0x18]
10010ca7:	push   ecx
10010ca8:	mov    BYTE PTR [esp+0x3c],0x1
10010cad:	push   DWORD PTR [esi]
10010caf:	mov    eax,DWORD PTR [edi]
10010cb1:	push   edi
10010cb2:	call   DWORD PTR [eax+0x18]
10010cb5:	cmp    eax,ebx
10010cb7:	mov    DWORD PTR [esp+0x20],eax
10010cbb:	jl     0x10010d4e
10010cc1:	mov    eax,DWORD PTR [esp+0x18]
10010cc5:	cmp    eax,ebx
10010cc7:	mov    DWORD PTR [esp+0x14],eax
10010ccb:	je     0x10010cd7
10010ccd:	mov    ecx,DWORD PTR [eax]
10010ccf:	push   eax
10010cd0:	call   DWORD PTR [ecx+0x4]
10010cd3:	mov    eax,DWORD PTR [esp+0x18]
10010cd7:	mov    DWORD PTR [esp+0x1c],ebx
10010cdb:	lea    edx,[esp+0x1c]
10010cdf:	push   edx
10010ce0:	push   0x1006eedc
10010ce5:	mov    BYTE PTR [esp+0x40],0x3
10010cea:	mov    ecx,DWORD PTR [eax]
10010cec:	push   eax
10010ced:	call   DWORD PTR [ecx]
10010cef:	test   eax,eax
10010cf1:	jl     0x10010d01
10010cf3:	lea    eax,[esp+0x14]
10010cf7:	push   eax
10010cf8:	lea    eax,[esp+0x20]
10010cfc:	call   0x100111db
10010d01:	mov    eax,DWORD PTR [esp+0x14]
10010d05:	mov    DWORD PTR [esi+0xc],eax
10010d08:	mov    eax,ds:0x10082c64
10010d0d:	mov    ecx,eax
10010d0f:	add    eax,0x4
10010d12:	neg    ecx
10010d14:	push   esi
10010d15:	sbb    ecx,ecx
10010d17:	push   0x10010bca
10010d1c:	and    ecx,eax
10010d1e:	push   ecx
10010d1f:	mov    DWORD PTR [esp+0x20],ebx
10010d23:	call   0x100108b9
10010d28:	mov    BYTE PTR [esp+0x38],0x2
10010d2d:	mov    eax,DWORD PTR [esp+0x1c]
10010d31:	cmp    eax,ebx
10010d33:	je     0x10010d3b
10010d35:	mov    ecx,DWORD PTR [eax]
10010d37:	push   eax
10010d38:	call   DWORD PTR [ecx+0x8]
10010d3b:	mov    BYTE PTR [esp+0x38],0x1
10010d40:	mov    eax,DWORD PTR [esp+0x14]
10010d44:	cmp    eax,ebx
10010d46:	je     0x10010d4e
10010d48:	mov    ecx,DWORD PTR [eax]
10010d4a:	push   eax
10010d4b:	call   DWORD PTR [ecx+0x8]
10010d4e:	mov    eax,DWORD PTR [edi]
10010d50:	push   edi
10010d51:	call   DWORD PTR [eax+0x8]
10010d54:	mov    BYTE PTR [esp+0x38],bl
10010d58:	mov    eax,DWORD PTR [esp+0x18]
10010d5c:	cmp    eax,ebx
10010d5e:	je     0x10010d6c
10010d60:	mov    ecx,DWORD PTR [eax]
10010d62:	push   eax
10010d63:	call   DWORD PTR [ecx+0x8]
10010d66:	jmp    0x10010d6c
10010d68:	mov    DWORD PTR [esp+0x20],ebx
10010d6c:	mov    eax,DWORD PTR [esi+0xc]
10010d6f:	cmp    eax,ebx
10010d71:	je     0x10010d83
10010d73:	cmp    DWORD PTR [esi+0x14],ebx
10010d76:	jne    0x10010d83
10010d78:	push   eax
10010d79:	push   esi
10010d7a:	call   0x10010a58
10010d7f:	mov    DWORD PTR [esp+0x20],eax
10010d83:	mov    esi,DWORD PTR [esp+0x20]
10010d87:	jmp    0x10010c92
10010d8c:	push   ebp
10010d8d:	mov    ebp,esp
10010d8f:	push   ecx
10010d90:	push   ebx
10010d91:	mov    ebx,eax
10010d93:	push   edi
10010d94:	lea    eax,[ebp-0x4]
10010d97:	mov    edi,ecx
10010d99:	push   eax
10010d9a:	mov    DWORD PTR [edi+0x8],ebx
10010d9d:	call   0x1001125f
10010da2:	test   eax,eax
10010da4:	jl     0x10010dd4
10010da6:	push   esi
10010da7:	mov    esi,DWORD PTR [ebp-0x4]
10010daa:	test   esi,esi
10010dac:	mov    DWORD PTR [ebp-0x4],esi
10010daf:	je     0x10010db7
10010db1:	mov    eax,DWORD PTR [esi]
10010db3:	push   esi
10010db4:	call   DWORD PTR [eax+0x4]
10010db7:	add    edi,0xc
10010dba:	push   edi
10010dbb:	lea    eax,[ebp-0x4]
10010dbe:	call   0x100112db
10010dc3:	test   esi,esi
10010dc5:	je     0x10010dcd
10010dc7:	mov    eax,DWORD PTR [esi]
10010dc9:	push   esi
10010dca:	call   DWORD PTR [eax+0x8]
10010dcd:	add    ebx,0x18
10010dd0:	mov    DWORD PTR [esi+0x8],ebx
10010dd3:	pop    esi
10010dd4:	pop    edi
10010dd5:	pop    ebx
10010dd6:	leave  
10010dd7:	ret    
10010dd8:	push   0x1c
10010dda:	mov    eax,0x1006096b
10010ddf:	call   0x10059df5
10010de4:	mov    eax,DWORD PTR [ebp+0x8]
10010de7:	mov    eax,DWORD PTR [eax+0x8]
10010dea:	test   eax,eax
10010dec:	jne    0x10010df5
10010dee:	mov    eax,0x80004005
10010df3:	jmp    0x10010e3f
10010df5:	cmp    DWORD PTR [eax],0x0
10010df8:	je     0x10010dee
10010dfa:	mov    eax,DWORD PTR [eax]
10010dfc:	lea    ecx,[ebp-0x28]
10010dff:	push   ecx
10010e00:	call   0x10007ca8
10010e05:	and    DWORD PTR [ebp-0x4],0x0
10010e09:	cmp    DWORD PTR [eax+0x18],0x10
10010e0d:	jb     0x10010e14
10010e0f:	mov    eax,DWORD PTR [eax+0x4]
10010e12:	jmp    0x10010e17
10010e14:	add    eax,0x4
10010e17:	push   eax
10010e18:	lea    edi,[ebp+0x8]
10010e1b:	call   0x10002458
10010e20:	push   0x0
10010e22:	push   0x1
10010e24:	lea    ecx,[ebp-0x28]
10010e27:	call   0x100012f0
10010e2c:	mov    eax,edi
10010e2e:	call   0x1000de64
10010e33:	mov    ecx,DWORD PTR [ebp+0xc]
10010e36:	mov    DWORD PTR [ecx],eax
10010e38:	call   0x100025b3
10010e3d:	xor    eax,eax
10010e3f:	call   0x10059ecd
10010e44:	ret    0x8
10010e47:	push   0x1c
10010e49:	mov    eax,0x100613cb
10010e4e:	call   0x10059df5
10010e53:	mov    esi,DWORD PTR [ebp+0x8]
10010e56:	mov    eax,DWORD PTR [esi+0x8]
10010e59:	test   eax,eax
10010e5b:	jne    0x10010e64
10010e5d:	mov    eax,0x80004005
10010e62:	jmp    0x10010eaf
10010e64:	cmp    DWORD PTR [eax],0x0
10010e67:	je     0x10010e5d
10010e69:	mov    ecx,DWORD PTR [ebp+0xc]
10010e6c:	push   0x1
10010e6e:	lea    edi,[ebp+0x8]
10010e71:	call   0x1000dde7
10010e76:	and    DWORD PTR [ebp-0x4],0x0
10010e7a:	mov    eax,edi
10010e7c:	call   0x1000de47
10010e81:	push   eax
10010e82:	lea    ecx,[ebp-0x28]
10010e85:	call   0x100011a7
10010e8a:	lea    eax,[ebp-0x28]
10010e8d:	mov    BYTE PTR [ebp-0x4],0x1
10010e91:	push   eax
10010e92:	mov    eax,DWORD PTR [esi+0x8]
10010e95:	mov    esi,DWORD PTR [eax]
10010e97:	call   0x10007cc3
10010e9c:	push   0x0
10010e9e:	push   0x1
10010ea0:	lea    ecx,[ebp-0x28]
10010ea3:	call   0x100012f0
10010ea8:	call   0x100025b3
10010ead:	xor    eax,eax
10010eaf:	call   0x10059ecd
10010eb4:	ret    0x8
10010eb7:	push   0x1c
10010eb9:	mov    eax,0x1006096b
10010ebe:	call   0x10059df5
10010ec3:	mov    eax,DWORD PTR [ebp+0x8]
10010ec6:	mov    eax,DWORD PTR [eax+0x8]
10010ec9:	test   eax,eax
10010ecb:	jne    0x10010ed4
10010ecd:	mov    eax,0x80004005
10010ed2:	jmp    0x10010f20
10010ed4:	cmp    DWORD PTR [eax+0x4],0x0
10010ed8:	je     0x10010ecd
10010eda:	mov    eax,DWORD PTR [eax+0x4]
10010edd:	lea    ecx,[ebp-0x28]
10010ee0:	push   ecx
10010ee1:	call   0x10007ca8
10010ee6:	and    DWORD PTR [ebp-0x4],0x0
10010eea:	cmp    DWORD PTR [eax+0x18],0x10
10010eee:	jb     0x10010ef5
10010ef0:	mov    eax,DWORD PTR [eax+0x4]
10010ef3:	jmp    0x10010ef8
10010ef5:	add    eax,0x4
10010ef8:	push   eax
10010ef9:	lea    edi,[ebp+0x8]
10010efc:	call   0x10002458
10010f01:	push   0x0
10010f03:	push   0x1
10010f05:	lea    ecx,[ebp-0x28]
10010f08:	call   0x100012f0
10010f0d:	mov    eax,edi
10010f0f:	call   0x1000de64
10010f14:	mov    ecx,DWORD PTR [ebp+0xc]
10010f17:	mov    DWORD PTR [ecx],eax
10010f19:	call   0x100025b3
10010f1e:	xor    eax,eax
10010f20:	call   0x10059ecd
10010f25:	ret    0x8
10010f28:	push   0x1c
10010f2a:	mov    eax,0x100613cb
10010f2f:	call   0x10059df5
10010f34:	mov    esi,DWORD PTR [ebp+0x8]
10010f37:	mov    eax,DWORD PTR [esi+0x8]
10010f3a:	test   eax,eax
10010f3c:	jne    0x10010f45
10010f3e:	mov    eax,0x80004005
10010f43:	jmp    0x10010f92
10010f45:	cmp    DWORD PTR [eax+0x4],0x0
10010f49:	je     0x10010f3e
10010f4b:	mov    ecx,DWORD PTR [ebp+0xc]
10010f4e:	push   0x1
10010f50:	lea    edi,[ebp+0x8]
10010f53:	call   0x1000dde7
10010f58:	and    DWORD PTR [ebp-0x4],0x0
10010f5c:	mov    eax,edi
10010f5e:	call   0x1000de47
10010f63:	push   eax
10010f64:	lea    ecx,[ebp-0x28]
10010f67:	call   0x100011a7
10010f6c:	lea    eax,[ebp-0x28]
10010f6f:	mov    BYTE PTR [ebp-0x4],0x1
10010f73:	push   eax
10010f74:	mov    eax,DWORD PTR [esi+0x8]
10010f77:	mov    esi,DWORD PTR [eax+0x4]
10010f7a:	call   0x10007cc3
10010f7f:	push   0x0
10010f81:	push   0x1
10010f83:	lea    ecx,[ebp-0x28]
10010f86:	call   0x100012f0
10010f8b:	call   0x100025b3
10010f90:	xor    eax,eax
10010f92:	call   0x10059ecd
10010f97:	ret    0x8
10010f9a:	push   0x1c
10010f9c:	mov    eax,0x1006096b
10010fa1:	call   0x10059df5
10010fa6:	mov    eax,DWORD PTR [ebp+0x8]
10010fa9:	mov    eax,DWORD PTR [eax+0x8]
10010fac:	test   eax,eax
10010fae:	jne    0x10010fb7
10010fb0:	mov    eax,0x80004005
10010fb5:	jmp    0x10011003
10010fb7:	cmp    DWORD PTR [eax+0x8],0x0
10010fbb:	je     0x10010fb0
10010fbd:	mov    eax,DWORD PTR [eax+0x8]
10010fc0:	lea    ecx,[ebp-0x28]
10010fc3:	push   ecx
10010fc4:	call   0x10007ca8
10010fc9:	and    DWORD PTR [ebp-0x4],0x0
10010fcd:	cmp    DWORD PTR [eax+0x18],0x10
10010fd1:	jb     0x10010fd8
10010fd3:	mov    eax,DWORD PTR [eax+0x4]
10010fd6:	jmp    0x10010fdb
10010fd8:	add    eax,0x4
10010fdb:	push   eax
10010fdc:	lea    edi,[ebp+0x8]
10010fdf:	call   0x10002458
10010fe4:	push   0x0
10010fe6:	push   0x1
10010fe8:	lea    ecx,[ebp-0x28]
10010feb:	call   0x100012f0
10010ff0:	mov    eax,edi
10010ff2:	call   0x1000de64
10010ff7:	mov    ecx,DWORD PTR [ebp+0xc]
10010ffa:	mov    DWORD PTR [ecx],eax
10010ffc:	call   0x100025b3
10011001:	xor    eax,eax
10011003:	call   0x10059ecd
10011008:	ret    0x8
1001100b:	push   0x1c
1001100d:	mov    eax,0x100613cb
10011012:	call   0x10059df5
10011017:	mov    esi,DWORD PTR [ebp+0x8]
1001101a:	mov    eax,DWORD PTR [esi+0x8]
1001101d:	test   eax,eax
1001101f:	jne    0x10011028
10011021:	mov    eax,0x80004005
10011026:	jmp    0x10011075
10011028:	cmp    DWORD PTR [eax+0x8],0x0
1001102c:	je     0x10011021
1001102e:	mov    ecx,DWORD PTR [ebp+0xc]
10011031:	push   0x1
10011033:	lea    edi,[ebp+0x8]
10011036:	call   0x1000dde7
1001103b:	and    DWORD PTR [ebp-0x4],0x0
1001103f:	mov    eax,edi
10011041:	call   0x1000de47
10011046:	push   eax
10011047:	lea    ecx,[ebp-0x28]
1001104a:	call   0x100011a7
1001104f:	lea    eax,[ebp-0x28]
10011052:	mov    BYTE PTR [ebp-0x4],0x1
10011056:	push   eax
10011057:	mov    eax,DWORD PTR [esi+0x8]
1001105a:	mov    esi,DWORD PTR [eax+0x8]
1001105d:	call   0x10007cc3
10011062:	push   0x0
10011064:	push   0x1
10011066:	lea    ecx,[ebp-0x28]
10011069:	call   0x100012f0
1001106e:	call   0x100025b3
10011073:	xor    eax,eax
10011075:	call   0x10059ecd
1001107a:	ret    0x8
1001107d:	mov    eax,DWORD PTR [esp+0x4]
10011081:	push   esi
10011082:	mov    esi,DWORD PTR [eax+0xc]
10011085:	test   esi,esi
10011087:	push   edi
10011088:	je     0x10011090
1001108a:	mov    eax,DWORD PTR [esi]
1001108c:	push   esi
1001108d:	call   DWORD PTR [eax+0x4]
10011090:	mov    eax,DWORD PTR [esp+0x10]
10011094:	test   eax,eax
10011096:	jne    0x1001109f
10011098:	mov    edi,0x80004003
1001109d:	jmp    0x100110ad
1001109f:	test   esi,esi
100110a1:	mov    DWORD PTR [eax],esi
100110a3:	je     0x100110ab
100110a5:	mov    eax,DWORD PTR [esi]
100110a7:	push   esi
100110a8:	call   DWORD PTR [eax+0x4]
100110ab:	xor    edi,edi
100110ad:	test   esi,esi
100110af:	je     0x100110b7
100110b1:	mov    eax,DWORD PTR [esi]
100110b3:	push   esi
100110b4:	call   DWORD PTR [eax+0x8]
100110b7:	mov    eax,edi
100110b9:	pop    edi
100110ba:	pop    esi
100110bb:	ret    0x8
100110be:	mov    eax,DWORD PTR [esp+0x4]
100110c2:	mov    eax,DWORD PTR [eax+0x8]
100110c5:	movzx  eax,BYTE PTR [eax+0x2d]
100110c9:	mov    ecx,DWORD PTR [esp+0x8]
100110cd:	mov    DWORD PTR [ecx],eax
100110cf:	xor    eax,eax
100110d1:	ret    0x8
100110d4:	cmp    DWORD PTR [esp+0x8],0x0
100110d9:	mov    ecx,DWORD PTR [esp+0x4]
100110dd:	mov    ecx,DWORD PTR [ecx+0x8]
100110e0:	setne  al
100110e3:	mov    BYTE PTR [ecx+0x2d],al
100110e6:	xor    eax,eax
100110e8:	ret    0x8
100110eb:	mov    eax,DWORD PTR [esp+0x8]
100110ef:	test   eax,eax
100110f1:	jne    0x100110fa
100110f3:	mov    eax,0x80004003
100110f8:	jmp    0x10011102
100110fa:	mov    DWORD PTR [eax],0x1
10011100:	xor    eax,eax
10011102:	ret    0x8
10011105:	push   edi
10011106:	mov    edi,DWORD PTR [esp+0x14]
1001110a:	mov    ecx,0x10081820
1001110f:	call   0x10010945
10011114:	pop    edi
10011115:	ret    0x10
10011118:	push   DWORD PTR [esp+0x18]
1001111c:	mov    eax,0x10081820
10011121:	push   DWORD PTR [esp+0x14]
10011125:	push   DWORD PTR [esp+0x14]
10011129:	call   0x10010973
1001112e:	ret    0x18
10011131:	push   ebp
10011132:	mov    ebp,esp
10011134:	push   DWORD PTR [ebp+0x28]
10011137:	mov    eax,0x10081820
1001113c:	push   DWORD PTR [ebp+0x24]
1001113f:	push   DWORD PTR [ebp+0x20]
10011142:	push   DWORD PTR [ebp+0x1c]
10011145:	push   DWORD PTR [ebp+0x18]
10011148:	push   DWORD PTR [ebp+0xc]
1001114b:	push   DWORD PTR [ebp+0x8]
1001114e:	call   0x10010a16
10011153:	pop    ebp
10011154:	ret    0x24
10011157:	mov    DWORD PTR [ecx],0x1006ee98
1001115d:	mov    DWORD PTR [ecx+0x4],0xc0000001
10011164:	mov    ecx,DWORD PTR ds:0x10082c64
1001116a:	mov    eax,DWORD PTR [ecx]
1001116c:	jmp    DWORD PTR [eax+0x8]
1001116f:	mov    ecx,DWORD PTR [esp+0x4]
10011173:	dec    DWORD PTR [ecx+0x4]
10011176:	push   esi
10011177:	mov    esi,DWORD PTR [ecx+0x4]
1001117a:	jne    0x10011187
1001117c:	test   ecx,ecx
1001117e:	je     0x10011187
10011180:	mov    eax,DWORD PTR [ecx]
10011182:	push   0x1
10011184:	call   DWORD PTR [eax+0x30]
10011187:	mov    eax,esi
10011189:	pop    esi
1001118a:	ret    0x4
1001118d:	push   ebx
1001118e:	push   DWORD PTR [esp+0xc]
10011192:	mov    ebx,DWORD PTR [esp+0x14]
10011196:	push   DWORD PTR [esp+0xc]
1001119a:	mov    eax,0x1006ee74
1001119f:	call   0x10010824
100111a4:	pop    ebx
100111a5:	ret    0xc
100111a8:	push   esi
100111a9:	mov    esi,ecx
100111ab:	call   0x10011157
100111b0:	test   BYTE PTR [esp+0x8],0x1
100111b5:	je     0x100111be
100111b7:	push   esi
100111b8:	call   0x10042fe2
100111bd:	pop    ecx
100111be:	mov    eax,esi
100111c0:	pop    esi
100111c1:	ret    0x4
100111c4:	push   esi
100111c5:	mov    esi,ecx
100111c7:	cmp    BYTE PTR [esi+0x4],0x0
100111cb:	je     0x100111d9
100111cd:	push   DWORD PTR [esi]
100111cf:	call   DWORD PTR ds:0x100670fc
100111d5:	mov    BYTE PTR [esi+0x4],0x0
100111d9:	pop    esi
100111da:	ret    
100111db:	push   ebp
100111dc:	mov    ebp,esp
100111de:	push   ecx
100111df:	push   ecx
100111e0:	mov    ecx,DWORD PTR [ebp+0x8]
100111e3:	push   ebx
100111e4:	push   esi
100111e5:	mov    esi,eax
100111e7:	mov    eax,DWORD PTR [ecx]
100111e9:	test   eax,eax
100111eb:	mov    ebx,DWORD PTR [esi]
100111ed:	jne    0x10011209
100111ef:	test   ebx,ebx
100111f1:	je     0x10011257
100111f3:	xor    al,al
100111f5:	test   al,al
100111f7:	jne    0x10011257
100111f9:	mov    eax,DWORD PTR [esi]
100111fb:	push   0x1006eeec
10011200:	mov    esi,ecx
10011202:	call   0x100107d4
10011207:	jmp    0x10011259
10011209:	test   ebx,ebx
1001120b:	je     0x100111f3
1001120d:	and    DWORD PTR [ebp-0x4],0x0
10011211:	and    DWORD PTR [ebp-0x8],0x0
10011215:	mov    ecx,DWORD PTR [eax]
10011217:	push   edi
10011218:	lea    edx,[ebp-0x4]
1001121b:	push   edx
1001121c:	mov    edi,0x1006eecc
10011221:	push   edi
10011222:	push   eax
10011223:	call   DWORD PTR [ecx]
10011225:	mov    eax,DWORD PTR [ebx]
10011227:	lea    ecx,[ebp-0x8]
1001122a:	push   ecx
1001122b:	push   edi
1001122c:	push   ebx
1001122d:	call   DWORD PTR [eax]
1001122f:	mov    eax,DWORD PTR [ebp-0x8]
10011232:	cmp    DWORD PTR [ebp-0x4],eax
10011235:	pop    edi
10011236:	sete   bl
10011239:	test   eax,eax
1001123b:	je     0x10011243
1001123d:	mov    ecx,DWORD PTR [eax]
1001123f:	push   eax
10011240:	call   DWORD PTR [ecx+0x8]
10011243:	mov    eax,DWORD PTR [ebp-0x4]
10011246:	test   eax,eax
10011248:	je     0x10011250
1001124a:	mov    ecx,DWORD PTR [eax]
1001124c:	push   eax
1001124d:	call   DWORD PTR [ecx+0x8]
10011250:	mov    ecx,DWORD PTR [ebp+0x8]
10011253:	mov    al,bl
10011255:	jmp    0x100111f5
10011257:	mov    eax,DWORD PTR [ecx]
10011259:	pop    esi
1001125a:	pop    ebx
1001125b:	leave  
1001125c:	ret    0x4
1001125f:	push   0xc
10011261:	mov    eax,0x1006016f
10011266:	call   0x10059e28
1001126b:	mov    ebx,DWORD PTR [ebp+0x8]
1001126e:	xor    edi,edi
10011270:	cmp    ebx,edi
10011272:	jne    0x1001127b
10011274:	mov    eax,0x80004003
10011279:	jmp    0x100112d3
1001127b:	push   0xc
1001127d:	mov    DWORD PTR [ebx],edi
1001127f:	mov    DWORD PTR [ebp-0x14],0x8007000e
10011286:	mov    DWORD PTR [ebp-0x4],edi
10011289:	call   0x10043196
1001128e:	mov    esi,eax
10011290:	cmp    esi,edi
10011292:	pop    ecx
10011293:	je     0x100112b0
10011295:	mov    DWORD PTR [esi+0x4],edi
10011298:	mov    DWORD PTR [esi+0x8],edi
1001129b:	mov    DWORD PTR [esi],0x1006ee98
100112a1:	mov    ecx,DWORD PTR ds:0x10082c64
100112a7:	mov    eax,DWORD PTR [ecx]
100112a9:	call   DWORD PTR [eax+0x4]
100112ac:	mov    eax,esi
100112ae:	jmp    0x100112c1
100112b0:	xor    eax,eax
100112b2:	jmp    0x100112c1
100112b4:	mov    eax,0x100112ba
100112b9:	ret    
100112ba:	mov    ebx,DWORD PTR [ebp+0x8]
100112bd:	xor    edi,edi
100112bf:	mov    eax,edi
100112c1:	cmp    eax,edi
100112c3:	je     0x100112ce
100112c5:	inc    DWORD PTR [eax+0x4]
100112c8:	dec    DWORD PTR [eax+0x4]
100112cb:	mov    DWORD PTR [ebp-0x14],edi
100112ce:	mov    DWORD PTR [ebx],eax
100112d0:	mov    eax,DWORD PTR [ebp-0x14]
100112d3:	call   0x10059ecd
100112d8:	ret    0x4
100112db:	push   ebp
100112dc:	mov    ebp,esp
100112de:	push   ecx
100112df:	push   ecx
100112e0:	mov    ecx,DWORD PTR [ebp+0x8]
100112e3:	push   ebx
100112e4:	push   esi
100112e5:	mov    esi,eax
100112e7:	mov    eax,DWORD PTR [ecx]
100112e9:	test   eax,eax
100112eb:	mov    ebx,DWORD PTR [esi]
100112ed:	jne    0x10011309
100112ef:	test   ebx,ebx
100112f1:	je     0x10011357
100112f3:	xor    al,al
100112f5:	test   al,al
100112f7:	jne    0x10011357
100112f9:	mov    eax,DWORD PTR [esi]
100112fb:	push   0x1006ee64
10011300:	mov    esi,ecx
10011302:	call   0x100107d4
10011307:	jmp    0x10011359
10011309:	test   ebx,ebx
1001130b:	je     0x100112f3
1001130d:	and    DWORD PTR [ebp-0x4],0x0
10011311:	and    DWORD PTR [ebp-0x8],0x0
10011315:	mov    ecx,DWORD PTR [eax]
10011317:	push   edi
10011318:	lea    edx,[ebp-0x4]
1001131b:	push   edx
1001131c:	mov    edi,0x1006eecc
10011321:	push   edi
10011322:	push   eax
10011323:	call   DWORD PTR [ecx]
10011325:	mov    eax,DWORD PTR [ebx]
10011327:	lea    ecx,[ebp-0x8]
1001132a:	push   ecx
1001132b:	push   edi
1001132c:	push   ebx
1001132d:	call   DWORD PTR [eax]
1001132f:	mov    eax,DWORD PTR [ebp-0x8]
10011332:	cmp    DWORD PTR [ebp-0x4],eax
10011335:	pop    edi
10011336:	sete   bl
10011339:	test   eax,eax
1001133b:	je     0x10011343
1001133d:	mov    ecx,DWORD PTR [eax]
1001133f:	push   eax
10011340:	call   DWORD PTR [ecx+0x8]
10011343:	mov    eax,DWORD PTR [ebp-0x4]
10011346:	test   eax,eax
10011348:	je     0x10011350
1001134a:	mov    ecx,DWORD PTR [eax]
1001134c:	push   eax
1001134d:	call   DWORD PTR [ecx+0x8]
10011350:	mov    ecx,DWORD PTR [ebp+0x8]
10011353:	mov    al,bl
10011355:	jmp    0x100112f5
10011357:	mov    eax,DWORD PTR [ecx]
10011359:	pop    esi
1001135a:	pop    ebx
1001135b:	leave  
1001135c:	ret    0x4
1001135f:	push   edi
10011360:	mov    edi,eax
10011362:	cmp    edi,esi
10011364:	je     0x1001137d
10011366:	call   0x100025b3
1001136b:	mov    eax,DWORD PTR [esi]
1001136d:	test   eax,eax
1001136f:	mov    DWORD PTR [edi],eax
10011371:	je     0x1001137d
10011373:	add    eax,0x8
10011376:	push   eax
10011377:	call   DWORD PTR ds:0x100670b0
1001137d:	mov    eax,edi
1001137f:	pop    edi
10011380:	ret    
10011381:	push   0x4
10011383:	mov    eax,0x10060ac8
10011388:	call   0x10059df5
1001138d:	mov    edi,ecx
1001138f:	cmp    DWORD PTR [ebp+0x8],0x0
10011393:	je     0x100113a6
10011395:	mov    eax,DWORD PTR [edi]
10011397:	test   eax,eax
10011399:	je     0x1001139f
1001139b:	mov    eax,DWORD PTR [eax]
1001139d:	jmp    0x100113a1
1001139f:	xor    eax,eax
100113a1:	cmp    eax,DWORD PTR [ebp+0x8]
100113a4:	je     0x100113e0
100113a6:	call   0x100025b3
100113ab:	push   0xc
100113ad:	call   0x10043196
100113b2:	mov    esi,eax
100113b4:	pop    ecx
100113b5:	mov    DWORD PTR [ebp-0x10],esi
100113b8:	and    DWORD PTR [ebp-0x4],0x0
100113bc:	test   esi,esi
100113be:	je     0x100113ca
100113c0:	push   DWORD PTR [ebp+0x8]
100113c3:	call   0x100025f3
100113c8:	jmp    0x100113cc
100113ca:	xor    eax,eax
100113cc:	or     DWORD PTR [ebp-0x4],0xffffffff
100113d0:	test   eax,eax
100113d2:	mov    DWORD PTR [edi],eax
100113d4:	jne    0x100113e0
100113d6:	push   0x8007000e
100113db:	call   0x10050e90
100113e0:	mov    eax,edi
100113e2:	call   0x10059ecd
100113e7:	ret    0x4
100113ea:	push   0x4
100113ec:	mov    eax,0x10060ac8
100113f1:	call   0x10059df5
100113f6:	cmp    DWORD PTR [esi],0x0
100113f9:	jne    0x1001142e
100113fb:	push   0xc
100113fd:	call   0x10043196
10011402:	pop    ecx
10011403:	test   eax,eax
10011405:	je     0x10011417
10011407:	and    DWORD PTR [eax+0x4],0x0
1001140b:	and    DWORD PTR [eax],0x0
1001140e:	mov    DWORD PTR [eax+0x8],0x1
10011415:	jmp    0x10011419
10011417:	xor    eax,eax
10011419:	or     DWORD PTR [esp+0x1c],0xffffffff
1001141e:	test   eax,eax
10011420:	mov    DWORD PTR [esi],eax
10011422:	jne    0x1001142e
10011424:	push   0x8007000e
10011429:	call   0x10050e90
1001142e:	mov    eax,DWORD PTR [esi]
10011430:	call   0x10059ecd
10011435:	ret    
10011436:	push   0x34
10011438:	mov    eax,0x10062518
1001143d:	call   0x10059e5e
10011442:	mov    eax,DWORD PTR [ebp+0x8]
10011445:	xor    ebx,ebx
10011447:	mov    esi,ecx
10011449:	mov    DWORD PTR [ebp-0x34],eax
1001144c:	mov    DWORD PTR [ebp-0x40],esi
1001144f:	mov    DWORD PTR [ebp-0x3c],ebx
10011452:	xor    edi,edi
10011454:	push   0x1
10011456:	lea    eax,[ebp-0x30]
10011459:	push   eax
1001145a:	push   esi
1001145b:	mov    eax,edi
1001145d:	mov    BYTE PTR [ebp-0x30],0x3b
10011461:	call   0x1000d551
10011466:	cmp    eax,0xffffffff
10011469:	mov    DWORD PTR [ebp-0x38],eax
1001146c:	jne    0x10011474
1001146e:	mov    eax,DWORD PTR [esi+0x14]
10011471:	mov    DWORD PTR [ebp-0x38],eax
10011474:	cmp    DWORD PTR [ebp-0x38],edi
10011477:	jbe    0x100114fd
1001147d:	push   ebx
1001147e:	lea    ecx,[ebp-0x2c]
10011481:	mov    DWORD PTR [ebp-0x14],0xf
10011488:	call   0x1000141c
1001148d:	mov    DWORD PTR [ebp-0x4],ebx
10011490:	jmp    0x100114c6
10011492:	mov    eax,esi
10011494:	call   0x10012206
10011499:	cmp    BYTE PTR [eax],0x20
1001149c:	je     0x100114c5
1001149e:	mov    eax,esi
100114a0:	call   0x10012206
100114a5:	movsx  eax,BYTE PTR [eax]
100114a8:	push   eax
100114a9:	call   0x10045f7b
100114ae:	pop    ecx
100114af:	mov    BYTE PTR [ebp-0x3c],al
100114b2:	push   DWORD PTR [ebp-0x3c]
100114b5:	xor    ebx,ebx
100114b7:	inc    ebx
100114b8:	lea    esi,[ebp-0x2c]
100114bb:	call   0x1000d4dd
100114c0:	mov    esi,DWORD PTR [ebp-0x40]
100114c3:	xor    ebx,ebx
100114c5:	inc    edi
100114c6:	cmp    edi,DWORD PTR [ebp-0x38]
100114c9:	jb     0x10011492
100114cb:	push   ebx
100114cc:	push   0x1006eefc
100114d1:	push   0x8
100114d3:	mov    ecx,0x1006ef28
100114d8:	inc    edi
100114d9:	call   0x100042b4
100114de:	pop    ecx
100114df:	pop    ecx
100114e0:	push   eax
100114e1:	lea    eax,[ebp-0x2c]
100114e4:	push   eax
100114e5:	call   0x1000ce2f
100114ea:	test   eax,eax
100114ec:	lea    ecx,[ebp-0x2c]
100114ef:	je     0x1001151c
100114f1:	or     DWORD PTR [ebp-0x4],0xffffffff
100114f5:	push   ebx
100114f6:	push   0x1
100114f8:	call   0x100012f0
100114fd:	cmp    edi,DWORD PTR [esi+0x14]
10011500:	jb     0x10011454
10011506:	mov    ecx,DWORD PTR [ebp-0x34]
10011509:	push   0x1006dd18
1001150e:	call   0x100011a7
10011513:	mov    eax,DWORD PTR [ebp-0x34]
10011516:	call   0x10059ee1
1001151b:	ret    
1001151c:	push   0x8
1001151e:	push   ebx
1001151f:	call   0x100013ad
10011524:	mov    ecx,DWORD PTR [ebp-0x34]
10011527:	lea    eax,[ebp-0x2c]
1001152a:	push   eax
1001152b:	call   0x100011c9
10011530:	push   ebx
10011531:	push   0x1
10011533:	lea    ecx,[ebp-0x2c]
10011536:	call   0x100012f0
1001153b:	jmp    0x10011513
1001153d:	push   0x3c
1001153f:	mov    eax,0x100624f5
10011544:	call   0x10059df5
10011549:	mov    edi,ecx
1001154b:	push   0x1006ef3c
10011550:	push   0x10
10011552:	mov    ecx,0x1006ef74
10011557:	call   0x100042b4
1001155c:	pop    ecx
1001155d:	pop    ecx
1001155e:	push   eax
1001155f:	lea    ecx,[ebp-0x28]
10011562:	call   0x100011a7
10011567:	xor    ebx,ebx
10011569:	push   ebx
1001156a:	lea    eax,[ebp-0x28]
1001156d:	push   eax
1001156e:	lea    eax,[ebp-0x44]
10011571:	push   eax
10011572:	mov    eax,DWORD PTR [ebp+0x8]
10011575:	mov    DWORD PTR [ebp-0x4],ebx
10011578:	mov    eax,DWORD PTR [eax+0x34]
1001157b:	add    eax,0x20
1001157e:	call   0x10008803
10011583:	push   0x1006ef34
10011588:	mov    esi,eax
1001158a:	mov    BYTE PTR [ebp-0x4],0x1
1001158e:	call   0x10006825
10011593:	pop    ecx
10011594:	push   ebx
10011595:	push   0x1
10011597:	lea    ecx,[ebp-0x44]
1001159a:	mov    BYTE PTR [ebp+0xb],al
1001159d:	call   0x100012f0
100115a2:	or     DWORD PTR [ebp-0x4],0xffffffff
100115a6:	push   ebx
100115a7:	push   0x1
100115a9:	lea    ecx,[ebp-0x28]
100115ac:	call   0x100012f0
100115b1:	cmp    BYTE PTR [ebp+0xb],bl
100115b4:	je     0x100115de
100115b6:	push   DWORD PTR [ebp+0x14]
100115b9:	lea    eax,[ebp+0x10]
100115bc:	push   DWORD PTR [ebp+0x10]
100115bf:	push   DWORD PTR [ebp+0xc]
100115c2:	push   eax
100115c3:	call   0x1002f1a0
100115c8:	add    esp,0x10
100115cb:	push   eax
100115cc:	call   0x1000208b
100115d1:	push   DWORD PTR [ebp+0x10]
100115d4:	call   0x10042fe2
100115d9:	mov    eax,DWORD PTR [edi]
100115db:	pop    ecx
100115dc:	jmp    0x100115e9
100115de:	mov    eax,DWORD PTR [ebp+0x10]
100115e1:	mov    ecx,DWORD PTR [ebp+0x14]
100115e4:	mov    DWORD PTR [ecx],eax
100115e6:	mov    eax,DWORD PTR [ebp+0xc]
100115e9:	call   0x10059ecd
100115ee:	ret    0x10
100115f1:	xor    ecx,ecx
100115f3:	cmp    DWORD PTR [esp+0x8],ecx
100115f7:	je     0x1001160b
100115f9:	mov    eax,DWORD PTR [esp+0x4]
100115fd:	lea    eax,[eax+ecx*2]
10011600:	rol    WORD PTR [eax],0x8
10011604:	inc    ecx
10011605:	cmp    ecx,DWORD PTR [esp+0x8]
10011609:	jne    0x100115f9
1001160b:	ret    
1001160c:	push   0x14
1001160e:	mov    eax,0x10060948
10011613:	call   0x10059df5
10011618:	mov    edi,DWORD PTR ds:0x1006708c
1001161e:	xor    esi,esi
10011620:	push   esi
10011621:	push   esi
10011622:	push   DWORD PTR [ebp+0x14]
10011625:	push   DWORD PTR [ebp+0x10]
10011628:	push   0x8
1001162a:	push   DWORD PTR [ebp+0xc]
1001162d:	call   edi
1001162f:	mov    ebx,eax
10011631:	cmp    ebx,esi
10011633:	je     0x100116d2
10011639:	lea    eax,[ebp-0x10]
1001163c:	mov    DWORD PTR [ebp-0x10],esi
1001163f:	push   eax
10011640:	mov    eax,ebx
10011642:	lea    esi,[ebp-0x20]
10011645:	call   0x10012247
1001164a:	and    DWORD PTR [ebp-0x4],0x0
1001164e:	mov    esi,DWORD PTR [ebp-0x1c]
10011651:	test   esi,esi
10011653:	je     0x1001165e
10011655:	mov    eax,DWORD PTR [ebp-0x18]
10011658:	sub    eax,esi
1001165a:	sar    eax,1
1001165c:	jne    0x10011663
1001165e:	call   0x10043605
10011663:	push   ebx
10011664:	push   esi
10011665:	push   DWORD PTR [ebp+0x14]
10011668:	push   DWORD PTR [ebp+0x10]
1001166b:	push   0x8
1001166d:	push   DWORD PTR [ebp+0xc]
10011670:	call   edi
10011672:	cmp    eax,ebx
10011674:	jne    0x100116c7
10011676:	test   esi,esi
10011678:	je     0x10011683
1001167a:	mov    eax,DWORD PTR [ebp-0x18]
1001167d:	sub    eax,esi
1001167f:	sar    eax,1
10011681:	jne    0x10011688
10011683:	call   0x10043605
10011688:	push   0x0
1001168a:	push   ebx
1001168b:	push   esi
1001168c:	call   DWORD PTR ds:0x1006729c
10011692:	mov    ecx,eax
10011694:	lea    edi,[ebp+0x14]
10011697:	call   0x1000dde7
1001169c:	mov    ebx,DWORD PTR [ebp+0x8]
1001169f:	mov    esi,eax
100116a1:	lea    eax,[ebx+0x30]
100116a4:	call   0x1001135f
100116a9:	call   0x100025b3
100116ae:	cmp    DWORD PTR [ebp-0x1c],0x0
100116b2:	mov    eax,DWORD PTR [ebp+0xc]
100116b5:	mov    DWORD PTR [ebx+0x24],eax
100116b8:	je     0x100116c3
100116ba:	push   DWORD PTR [ebp-0x1c]
100116bd:	call   0x10042fe2
100116c2:	pop    ecx
100116c3:	mov    al,0x1
100116c5:	jmp    0x100116d4
100116c7:	test   esi,esi
100116c9:	je     0x100116d2
100116cb:	push   esi
100116cc:	call   0x10042fe2
100116d1:	pop    ecx
100116d2:	xor    al,al
100116d4:	call   0x10059ecd
100116d9:	ret    0x10
100116dc:	push   0x8
100116de:	mov    eax,0x1005fd47
100116e3:	call   0x10059df5
100116e8:	mov    ebx,ecx
100116ea:	test   bl,0x1
100116ed:	je     0x100116f6
100116ef:	xor    al,al
100116f1:	jmp    0x10011785
100116f6:	xor    edi,edi
100116f8:	mov    DWORD PTR [ebp-0x10],edi
100116fb:	cmp    DWORD PTR [ebp+0xc],0x4b1
10011702:	mov    DWORD PTR [ebp-0x4],edi
10011705:	mov    esi,DWORD PTR [ebp+0x10]
10011708:	jne    0x1001174c
1001170a:	mov    eax,ebx
1001170c:	shr    eax,1
1001170e:	xor    ecx,ecx
10011710:	push   0x2
10011712:	pop    edx
10011713:	mov    DWORD PTR [ebp-0x14],eax
10011716:	mul    edx
10011718:	seto   cl
1001171b:	neg    ecx
1001171d:	or     ecx,eax
1001171f:	push   ecx
10011720:	call   0x100438d7
10011725:	mov    esi,eax
10011727:	cmp    esi,edi
10011729:	pop    ecx
1001172a:	je     0x10011733
1001172c:	push   edi
1001172d:	call   0x10042fe2
10011732:	pop    ecx
10011733:	push   ebx
10011734:	push   DWORD PTR [ebp+0x10]
10011737:	mov    DWORD PTR [ebp-0x10],esi
1001173a:	push   esi
1001173b:	call   0x10045340
10011740:	push   DWORD PTR [ebp-0x14]
10011743:	push   esi
10011744:	call   0x100115f1
10011749:	add    esp,0x14
1001174c:	push   0x0
1001174e:	shr    ebx,1
10011750:	push   ebx
10011751:	push   esi
10011752:	call   DWORD PTR ds:0x1006729c
10011758:	mov    ecx,eax
1001175a:	lea    edi,[ebp+0x10]
1001175d:	call   0x1000dde7
10011762:	mov    ebx,DWORD PTR [ebp+0x8]
10011765:	mov    esi,eax
10011767:	lea    eax,[ebx+0x30]
1001176a:	call   0x1001135f
1001176f:	call   0x100025b3
10011774:	mov    eax,DWORD PTR [ebp+0xc]
10011777:	push   DWORD PTR [ebp-0x10]
1001177a:	mov    DWORD PTR [ebx+0x24],eax
1001177d:	call   0x10042fe2
10011782:	pop    ecx
10011783:	mov    al,0x1
10011785:	call   0x10059ecd
1001178a:	ret    0xc
1001178d:	mov    cl,BYTE PTR [eax]
1001178f:	cmp    cl,0xff
10011792:	jne    0x100117a6
10011794:	cmp    BYTE PTR [eax+0x1],0xfe
10011798:	jne    0x100117a6
1001179a:	mov    eax,0x4b0
1001179f:	mov    DWORD PTR [edx],0x2
100117a5:	ret    
100117a6:	cmp    cl,0xfe
100117a9:	jne    0x100117b8
100117ab:	cmp    BYTE PTR [eax+0x1],0xff
100117af:	jne    0x100117b8
100117b1:	mov    eax,0x4b1
100117b6:	jmp    0x1001179f
100117b8:	and    DWORD PTR [edx],0x0
100117bb:	xor    eax,eax
100117bd:	ret    
100117be:	push   0xc
100117c0:	mov    eax,0x100632c7
100117c5:	call   0x10059df5
100117ca:	xor    esi,esi
100117cc:	mov    DWORD PTR [ebp-0x14],esi
100117cf:	mov    DWORD PTR [ebp-0x4],esi
100117d2:	mov    eax,DWORD PTR [edi+0x34]
100117d5:	mov    eax,DWORD PTR [eax+0xc]
100117d8:	cmp    DWORD PTR [eax+0x1c],0x10
100117dc:	mov    ecx,DWORD PTR [eax+0x18]
100117df:	mov    DWORD PTR [ebp-0x10],esi
100117e2:	jb     0x100117e9
100117e4:	mov    eax,DWORD PTR [eax+0x8]
100117e7:	jmp    0x100117ec
100117e9:	add    eax,0x8
100117ec:	lea    edx,[ebp-0x10]
100117ef:	push   edx
100117f0:	push   ecx
100117f1:	push   eax
100117f2:	push   edi
100117f3:	lea    ecx,[ebp-0x14]
100117f6:	call   0x1001153d
100117fb:	mov    ebx,eax
100117fd:	cmp    ebx,esi
100117ff:	je     0x100119a0
10011805:	or     DWORD PTR [edi+0x28],0xffffffff
10011809:	mov    eax,DWORD PTR [edi+0x34]
1001180c:	mov    eax,DWORD PTR [eax+0xc]
1001180f:	cmp    DWORD PTR [eax+0x18],esi
10011812:	je     0x100119a0
10011818:	push   0x1006ef88
1001181d:	push   0x5
1001181f:	mov    ecx,0x1006efbc
10011824:	lea    esi,[edi+0x8]
10011827:	call   0x100042b4
1001182c:	push   eax
1001182d:	call   0x10006825
10011832:	add    esp,0xc
10011835:	test   al,al
10011837:	je     0x1001184d
10011839:	push   DWORD PTR [ebp-0x10]
1001183c:	push   ebx
1001183d:	push   0xfde9
10011842:	push   edi
10011843:	call   0x1001160c
10011848:	jmp    0x10011995
1001184d:	push   0x1006efc4
10011852:	push   0x6
10011854:	mov    ecx,0x1006eff8
10011859:	call   0x100042b4
1001185e:	push   eax
1001185f:	call   0x10006825
10011864:	add    esp,0xc
10011867:	test   al,al
10011869:	jne    0x1001191c
1001186f:	push   0x1006f000
10011874:	push   0x8
10011876:	mov    ecx,0x1006f024
1001187b:	call   0x100042b4
10011880:	push   eax
10011881:	call   0x10006825
10011886:	add    esp,0xc
10011889:	test   al,al
1001188b:	jne    0x1001191c
10011891:	push   0x1006f030
10011896:	push   0x8
10011898:	mov    ecx,0x1006f070
1001189d:	call   0x100042b4
100118a2:	push   eax
100118a3:	call   0x10006825
100118a8:	add    esp,0xc
100118ab:	test   al,al
100118ad:	jne    0x1001191c
100118af:	push   0x1006dd18
100118b4:	call   0x10006825
100118b9:	test   al,al
100118bb:	pop    ecx
100118bc:	push   DWORD PTR [ebp-0x10]
100118bf:	push   ebx
100118c0:	je     0x10011900
100118c2:	push   0xfde9
100118c7:	push   edi
100118c8:	call   0x1001160c
100118cd:	test   al,al
100118cf:	je     0x100118dd
100118d1:	mov    DWORD PTR [edi+0x28],0x2
100118d8:	jmp    0x100119a0
100118dd:	push   DWORD PTR [ebp-0x10]
100118e0:	push   ebx
100118e1:	push   0x6faf
100118e6:	push   edi
100118e7:	call   0x1001160c
100118ec:	test   al,al
100118ee:	je     0x100119a0
100118f4:	mov    DWORD PTR [edi+0x28],0x1
100118fb:	jmp    0x100119a0
10011900:	push   0x6faf
10011905:	push   edi
10011906:	call   0x1001160c
1001190b:	test   al,al
1001190d:	je     0x100119a0
10011913:	and    DWORD PTR [edi+0x28],0x0
10011917:	jmp    0x100119a0
1001191c:	and    DWORD PTR [ebp-0x18],0x0
10011920:	cmp    DWORD PTR [ebp-0x10],0x2
10011924:	jb     0x10011942
10011926:	lea    edx,[ebp-0x18]
10011929:	mov    eax,ebx
1001192b:	call   0x1001178d
10011930:	test   eax,eax
10011932:	je     0x10011942
10011934:	mov    edx,DWORD PTR [ebp-0x18]
10011937:	mov    ecx,DWORD PTR [ebp-0x10]
1001193a:	sub    ecx,edx
1001193c:	add    edx,ebx
1001193e:	push   edx
1001193f:	push   eax
10011940:	jmp    0x1001198f
10011942:	push   0x1006f07c
10011947:	push   0x8
10011949:	mov    ecx,0x1006f070
1001194e:	call   0x100042b4
10011953:	push   eax
10011954:	call   0x10006825
10011959:	add    esp,0xc
1001195c:	test   al,al
1001195e:	je     0x10011968
10011960:	push   ebx
10011961:	push   0x4b0
10011966:	jmp    0x1001198c
10011968:	push   0x1006f0bc
1001196d:	push   0x8
1001196f:	mov    ecx,0x1006f024
10011974:	call   0x100042b4
10011979:	push   eax
1001197a:	call   0x10006825
1001197f:	add    esp,0xc
10011982:	test   al,al
10011984:	je     0x100119a0
10011986:	push   ebx
10011987:	push   0x4b1
1001198c:	mov    ecx,DWORD PTR [ebp-0x10]
1001198f:	push   edi
10011990:	call   0x100116dc
10011995:	test   al,al
10011997:	je     0x100119a0
10011999:	mov    DWORD PTR [edi+0x28],0x3
100119a0:	push   DWORD PTR [ebp-0x14]
100119a3:	call   0x10042fe2
100119a8:	pop    ecx
100119a9:	call   0x10059ecd
100119ae:	ret    
100119af:	push   0x0
100119b1:	push   0x1006f0ec
100119b6:	push   0x5
100119b8:	mov    ecx,0x1006f114
100119bd:	call   0x100042b4
100119c2:	pop    ecx
100119c3:	pop    ecx
100119c4:	push   eax
100119c5:	push   esi
100119c6:	call   0x1000ce2f
100119cb:	cmp    eax,0xffffffff
100119ce:	jne    0x10011a36
100119d0:	push   0x0
100119d2:	push   0x1006f11c
100119d7:	push   0x16
100119d9:	mov    ecx,0x1006f144
100119de:	call   0x100042b4
100119e3:	pop    ecx
100119e4:	pop    ecx
100119e5:	push   eax
100119e6:	push   esi
100119e7:	call   0x1000ce2f
100119ec:	cmp    eax,0xffffffff
100119ef:	jne    0x10011a36
100119f1:	push   0x0
100119f3:	push   0x1006f15c
100119f8:	push   0x18
100119fa:	mov    ecx,0x1006f194
100119ff:	call   0x100042b4
10011a04:	pop    ecx
10011a05:	pop    ecx
10011a06:	push   eax
10011a07:	push   esi
10011a08:	call   0x1000ce2f
10011a0d:	cmp    eax,0xffffffff
10011a10:	jne    0x10011a36
10011a12:	push   0x0
10011a14:	push   0x1006f1b0
10011a19:	push   0x16
10011a1b:	mov    ecx,0x1006f1d4
10011a20:	call   0x100042b4
10011a25:	pop    ecx
10011a26:	pop    ecx
10011a27:	push   eax
10011a28:	push   esi
10011a29:	call   0x1000ce2f
10011a2e:	cmp    eax,0xffffffff
10011a31:	jne    0x10011a36
10011a33:	xor    al,al
10011a35:	ret    
10011a36:	mov    al,0x1
10011a38:	ret    
10011a39:	push   ebp
10011a3a:	mov    ebp,esp
10011a3c:	and    esp,0xfffffff8
10011a3f:	push   0xffffffff
10011a41:	push   0x10063c29
10011a46:	mov    eax,fs:0x0
10011a4c:	push   eax
10011a4d:	sub    esp,0x84
10011a53:	mov    eax,ds:0x100801ac
10011a58:	xor    eax,esp
10011a5a:	mov    DWORD PTR [esp+0x7c],eax
10011a5e:	push   esi
10011a5f:	push   edi
10011a60:	mov    eax,ds:0x100801ac
10011a65:	xor    eax,esp
10011a67:	push   eax
10011a68:	lea    eax,[esp+0x90]
10011a6f:	mov    fs:0x0,eax
10011a75:	lea    eax,[esp+0x10]
10011a79:	mov    edi,ecx
10011a7b:	push   eax
10011a7c:	mov    DWORD PTR [ebx+0x34],edi
10011a7f:	call   0x1001125f
10011a84:	test   eax,eax
10011a86:	jl     0x10011bb8
10011a8c:	mov    esi,DWORD PTR [esp+0x10]
10011a90:	test   esi,esi
10011a92:	mov    DWORD PTR [esp+0x10],esi
10011a96:	je     0x10011a9e
10011a98:	mov    eax,DWORD PTR [esi]
10011a9a:	push   esi
10011a9b:	call   DWORD PTR [eax+0x4]
10011a9e:	lea    eax,[ebx+0x38]
10011aa1:	push   eax
10011aa2:	lea    eax,[esp+0x14]
10011aa6:	call   0x100112db
10011aab:	test   esi,esi
10011aad:	je     0x10011ab5
10011aaf:	mov    eax,DWORD PTR [esi]
10011ab1:	push   esi
10011ab2:	call   DWORD PTR [eax+0x8]
10011ab5:	lea    eax,[edi+0x20]
10011ab8:	push   0x1006dd18
10011abd:	lea    edi,[esp+0x14]
10011ac1:	mov    DWORD PTR [esp+0x18],eax
10011ac5:	mov    DWORD PTR [esi+0x8],eax
10011ac8:	call   0x10002458
10011acd:	mov    esi,eax
10011acf:	lea    eax,[ebx+0x30]
10011ad2:	call   0x1001135f
10011ad7:	call   0x100025b3
10011adc:	push   0x1006f1ec
10011ae1:	push   0xc
10011ae3:	mov    ecx,0x1006f224
10011ae8:	call   0x100042b4
10011aed:	pop    ecx
10011aee:	pop    ecx
10011aef:	push   eax
10011af0:	lea    ecx,[esp+0x1c]
10011af4:	call   0x100011a7
10011af9:	xor    edi,edi
10011afb:	push   edi
10011afc:	lea    eax,[esp+0x1c]
10011b00:	push   eax
10011b01:	lea    eax,[esp+0x74]
10011b05:	push   eax
10011b06:	mov    DWORD PTR [esp+0xa4],edi
10011b0d:	mov    eax,DWORD PTR [ebx+0x34]
10011b10:	add    eax,0x20
10011b13:	call   0x10008803
10011b18:	push   edi
10011b19:	push   0x1
10011b1b:	lea    ecx,[esp+0x20]
10011b1f:	mov    BYTE PTR [esp+0xa0],0x2
10011b27:	call   0x100012f0
10011b2c:	push   0x1006dd18
10011b31:	lea    esi,[esp+0x70]
10011b35:	call   0x10006825
10011b3a:	test   al,al
10011b3c:	pop    ecx
10011b3d:	jne    0x10011bac
10011b3f:	call   0x100119af
10011b44:	test   al,al
10011b46:	je     0x10011bac
10011b48:	push   edi
10011b49:	mov    eax,esi
10011b4b:	push   eax
10011b4c:	lea    eax,[esp+0x3c]
10011b50:	push   eax
10011b51:	mov    eax,DWORD PTR [esp+0x20]
10011b55:	call   0x10008803
10011b5a:	lea    ecx,[esp+0x50]
10011b5e:	push   ecx
10011b5f:	mov    ecx,eax
10011b61:	mov    BYTE PTR [esp+0x9c],0x3
10011b69:	call   0x10011436
10011b6e:	pop    ecx
10011b6f:	push   0xffffffff
10011b71:	push   edi
10011b72:	push   eax
10011b73:	lea    ecx,[ebx+0x8]
10011b76:	mov    BYTE PTR [esp+0xa4],0x4
10011b7e:	call   0x10001241
10011b83:	push   edi
10011b84:	push   0x1
10011b86:	lea    ecx,[esp+0x58]
10011b8a:	call   0x100012f0
10011b8f:	push   edi
10011b90:	push   0x1
10011b92:	lea    ecx,[esp+0x3c]
10011b96:	mov    BYTE PTR [esp+0xa0],0x2
10011b9e:	call   0x100012f0
10011ba3:	mov    edi,ebx
10011ba5:	call   0x100117be
10011baa:	xor    edi,edi
10011bac:	push   edi
10011bad:	push   0x1
10011baf:	lea    ecx,[esp+0x74]
10011bb3:	call   0x100012f0
10011bb8:	mov    ecx,DWORD PTR [esp+0x90]
10011bbf:	mov    DWORD PTR fs:0x0,ecx
10011bc6:	pop    ecx
10011bc7:	pop    edi
10011bc8:	pop    esi
10011bc9:	mov    ecx,DWORD PTR [esp+0x7c]
10011bcd:	xor    ecx,esp
10011bcf:	call   0x10043615
10011bd4:	mov    esp,ebp
10011bd6:	pop    ebp
10011bd7:	ret    
10011bd8:	push   0x3c
10011bda:	mov    eax,0x100624ca
10011bdf:	call   0x10059df5
10011be4:	push   0x1006f268
10011be9:	xor    ebx,ebx
10011beb:	push   0x10
10011bed:	mov    ecx,0x1006ef74
10011bf2:	mov    DWORD PTR [ebp-0x10],ebx
10011bf5:	call   0x100042b4
10011bfa:	pop    ecx
10011bfb:	pop    ecx
10011bfc:	push   eax
10011bfd:	lea    ecx,[ebp-0x2c]
10011c00:	call   0x100011a7
10011c05:	push   ebx
10011c06:	lea    eax,[ebp-0x2c]
10011c09:	push   eax
10011c0a:	lea    eax,[ebp-0x48]
10011c0d:	push   eax
10011c0e:	mov    DWORD PTR [ebp-0x4],ebx
10011c11:	mov    eax,DWORD PTR [ebp+0x8]
10011c14:	mov    eax,DWORD PTR [eax+0x34]
10011c17:	add    eax,0x20
10011c1a:	call   0x10008803
10011c1f:	mov    esi,eax
10011c21:	push   0x1006f234
10011c26:	push   0x4
10011c28:	mov    ecx,0x1006f260
10011c2d:	mov    BYTE PTR [ebp-0x4],0x1
10011c31:	call   0x100042b4
10011c36:	push   eax
10011c37:	call   0x10006825
10011c3c:	add    esp,0xc
10011c3f:	push   ebx
10011c40:	push   0x1
10011c42:	lea    ecx,[ebp-0x48]
10011c45:	mov    BYTE PTR [ebp+0xb],al
10011c48:	call   0x100012f0
10011c4d:	or     DWORD PTR [ebp-0x4],0xffffffff
10011c51:	push   ebx
10011c52:	push   0x1
10011c54:	lea    ecx,[ebp-0x2c]
10011c57:	call   0x100012f0
10011c5c:	cmp    BYTE PTR [ebp+0xb],bl
10011c5f:	je     0x10011ca3
10011c61:	mov    ecx,DWORD PTR [ebp+0x14]
10011c64:	mov    edx,DWORD PTR [ebp+0x10]
10011c67:	lea    eax,[ebp+0x8]
10011c6a:	lea    esi,[ebp+0x14]
10011c6d:	mov    DWORD PTR [ebp+0x8],ebx
10011c70:	call   0x1002f5b0
10011c75:	mov    ecx,DWORD PTR [eax]
10011c77:	mov    edi,ecx
10011c79:	mov    DWORD PTR [eax],ebx
10011c7b:	mov    DWORD PTR [ebp+0x10],edi
10011c7e:	mov    DWORD PTR [ebp-0x4],0x2
10011c85:	push   DWORD PTR [ebp+0x14]
10011c88:	call   0x10042fe2
10011c8d:	mov    esi,DWORD PTR [ebp+0xc]
10011c90:	pop    ecx
10011c91:	push   DWORD PTR [ebp+0x8]
10011c94:	push   edi
10011c95:	call   0x10004102
10011c9a:	push   edi
10011c9b:	call   0x10042fe2
10011ca0:	pop    ecx
10011ca1:	jmp    0x10011cb1
10011ca3:	push   DWORD PTR [ebp+0x14]
10011ca6:	mov    esi,DWORD PTR [ebp+0xc]
10011ca9:	push   DWORD PTR [ebp+0x10]
10011cac:	call   0x10004102
10011cb1:	mov    eax,esi
10011cb3:	call   0x10059ecd
10011cb8:	ret    0x10
10011cbb:	push   0x34
10011cbd:	mov    eax,0x100632a4
10011cc2:	call   0x10059df5
10011cc7:	lea    edi,[ebx+0x30]
10011cca:	mov    esi,edi
10011ccc:	call   0x100113ea
10011cd1:	xor    esi,esi
10011cd3:	push   esi
10011cd4:	push   esi
10011cd5:	push   esi
10011cd6:	mov    DWORD PTR [ebp-0x14],eax
10011cd9:	push   esi
10011cda:	mov    eax,edi
10011cdc:	call   0x1000259c
10011ce1:	push   eax
10011ce2:	mov    eax,DWORD PTR [ebp-0x14]
10011ce5:	push   DWORD PTR [eax]
10011ce7:	push   esi
10011ce8:	push   DWORD PTR [ebx+0x24]
10011ceb:	call   DWORD PTR ds:0x100670c4
10011cf1:	mov    edi,eax
10011cf3:	cmp    edi,esi
10011cf5:	je     0x10011d8c
10011cfb:	lea    eax,[ebp-0xd]
10011cfe:	push   eax
10011cff:	lea    esi,[ebp-0x24]
10011d02:	mov    BYTE PTR [ebp-0xd],0x0
10011d06:	call   0x1001229e
10011d0b:	and    DWORD PTR [ebp-0x4],0x0
10011d0f:	lea    esi,[ebx+0x30]
10011d12:	call   0x100113ea
10011d17:	mov    DWORD PTR [ebp-0x14],eax
10011d1a:	xor    eax,eax
10011d1c:	push   eax
10011d1d:	push   eax
10011d1e:	push   edi
10011d1f:	push   eax
10011d20:	lea    esi,[ebp-0x24]
10011d23:	call   0x10012226
10011d28:	push   eax
10011d29:	lea    eax,[ebx+0x30]
10011d2c:	call   0x1000259c
10011d31:	push   eax
10011d32:	mov    eax,DWORD PTR [ebp-0x14]
10011d35:	push   DWORD PTR [eax]
10011d37:	xor    esi,esi
10011d39:	push   esi
10011d3a:	push   DWORD PTR [ebx+0x24]
10011d3d:	call   DWORD PTR ds:0x100670c4
10011d43:	cmp    eax,edi
10011d45:	je     0x10011d4c
10011d47:	cmp    DWORD PTR [ebp-0x20],esi
10011d4a:	jmp    0x10011d81
10011d4c:	push   edi
10011d4d:	push   esi
10011d4e:	lea    esi,[ebp-0x24]
10011d51:	call   0x10012226
10011d56:	push   eax
10011d57:	lea    eax,[ebp-0x40]
10011d5a:	push   eax
10011d5b:	push   ebx
10011d5c:	call   0x10011bd8
10011d61:	mov    BYTE PTR [ebp-0x4],0x1
10011d65:	push   eax
10011d66:	mov    eax,DWORD PTR [ebx+0x34]
10011d69:	mov    esi,DWORD PTR [eax+0xc]
10011d6c:	call   0x10007cc3
10011d71:	push   0x0
10011d73:	push   0x1
10011d75:	lea    ecx,[ebp-0x40]
10011d78:	call   0x100012f0
10011d7d:	cmp    DWORD PTR [ebp-0x20],0x0
10011d81:	je     0x10011d8c
10011d83:	push   DWORD PTR [ebp-0x20]
10011d86:	call   0x10042fe2
10011d8b:	pop    ecx
10011d8c:	call   0x10059ecd
10011d91:	ret    
10011d92:	push   0x44
10011d94:	mov    eax,0x100613a0
10011d99:	call   0x10059df5
10011d9e:	mov    eax,DWORD PTR [ebx+0x34]
10011da1:	mov    eax,DWORD PTR [eax+0xc]
10011da4:	and    DWORD PTR [ebp-0x18],0x0
10011da8:	cmp    DWORD PTR [eax+0x1c],0x10
10011dac:	mov    ecx,DWORD PTR [eax+0x18]
10011daf:	jb     0x10011db6
10011db1:	mov    eax,DWORD PTR [eax+0x8]
10011db4:	jmp    0x10011db9
10011db6:	add    eax,0x8
10011db9:	cmp    ecx,0x2
10011dbc:	jb     0x10011dc6
10011dbe:	lea    edx,[ebp-0x18]
10011dc1:	call   0x1001178d
10011dc6:	cmp    DWORD PTR [ebx+0x24],0x4b0
10011dcd:	jne    0x10011e14
10011dcf:	cmp    DWORD PTR [ebp-0x18],0x0
10011dd3:	jne    0x10011e14
10011dd5:	lea    esi,[ebx+0x30]
10011dd8:	call   0x100113ea
10011ddd:	mov    edi,eax
10011ddf:	mov    eax,esi
10011de1:	call   0x1000259c
10011de6:	add    eax,eax
10011de8:	push   eax
10011de9:	push   DWORD PTR [edi]
10011deb:	lea    esi,[ebp-0x34]
10011dee:	call   0x10004102
10011df3:	and    DWORD PTR [ebp-0x4],0x0
10011df7:	push   eax
10011df8:	mov    eax,DWORD PTR [ebx+0x34]
10011dfb:	mov    esi,DWORD PTR [eax+0xc]
10011dfe:	call   0x10007cc3
10011e03:	push   0x0
10011e05:	push   0x1
10011e07:	lea    ecx,[ebp-0x34]
10011e0a:	call   0x100012f0
10011e0f:	jmp    0x10011efb
10011e14:	lea    eax,[ebx+0x30]
10011e17:	call   0x1000259c
10011e1c:	mov    ecx,DWORD PTR [ebp-0x18]
10011e1f:	lea    edi,[ecx+eax*2]
10011e22:	lea    eax,[ebp-0x11]
10011e25:	push   eax
10011e26:	lea    esi,[ebp-0x28]
10011e29:	mov    BYTE PTR [ebp-0x11],0x0
10011e2d:	call   0x1001229e
10011e32:	mov    DWORD PTR [ebp-0x4],0x1
10011e39:	mov    edi,DWORD PTR [ebp-0x18]
10011e3c:	test   edi,edi
10011e3e:	je     0x10011e69
10011e40:	mov    eax,DWORD PTR [ebx+0x34]
10011e43:	mov    eax,DWORD PTR [eax+0xc]
10011e46:	cmp    DWORD PTR [eax+0x1c],0x10
10011e4a:	jb     0x10011e51
10011e4c:	mov    eax,DWORD PTR [eax+0x8]
10011e4f:	jmp    0x10011e54
10011e51:	add    eax,0x8
10011e54:	push   edi
10011e55:	push   eax
10011e56:	push   0x0
10011e58:	lea    esi,[ebp-0x28]
10011e5b:	call   0x10012226
10011e60:	push   eax
10011e61:	call   0x10045340
10011e66:	add    esp,0xc
10011e69:	lea    esi,[ebx+0x30]
10011e6c:	call   0x100113ea
10011e71:	mov    esi,eax
10011e73:	lea    eax,[ebx+0x30]
10011e76:	call   0x1000259c
10011e7b:	add    eax,eax
10011e7d:	push   eax
10011e7e:	push   DWORD PTR [esi]
10011e80:	lea    esi,[ebp-0x28]
10011e83:	push   edi
10011e84:	call   0x10012226
10011e89:	push   eax
10011e8a:	call   0x10045340
10011e8f:	add    esp,0xc
10011e92:	cmp    DWORD PTR [ebx+0x24],0x4b1
10011e99:	jne    0x10011eb2
10011e9b:	lea    eax,[ebx+0x30]
10011e9e:	call   0x1000259c
10011ea3:	push   eax
10011ea4:	push   edi
10011ea5:	call   0x10012226
10011eaa:	push   eax
10011eab:	call   0x100115f1
10011eb0:	pop    ecx
10011eb1:	pop    ecx
10011eb2:	lea    eax,[ebx+0x30]
10011eb5:	call   0x1000259c
10011eba:	lea    eax,[edi+eax*2]
10011ebd:	push   eax
10011ebe:	xor    edi,edi
10011ec0:	push   edi
10011ec1:	lea    esi,[ebp-0x28]
10011ec4:	call   0x10012226
10011ec9:	push   eax
10011eca:	lea    esi,[ebp-0x50]
10011ecd:	call   0x10004102
10011ed2:	mov    BYTE PTR [ebp-0x4],0x2
10011ed6:	push   eax
10011ed7:	mov    eax,DWORD PTR [ebx+0x34]
10011eda:	mov    esi,DWORD PTR [eax+0xc]
10011edd:	call   0x10007cc3
10011ee2:	push   edi
10011ee3:	push   0x1
10011ee5:	lea    ecx,[ebp-0x50]
10011ee8:	call   0x100012f0
10011eed:	cmp    DWORD PTR [ebp-0x24],edi
10011ef0:	je     0x10011efb
10011ef2:	push   DWORD PTR [ebp-0x24]
10011ef5:	call   0x10042fe2
10011efa:	pop    ecx
10011efb:	call   0x10059ecd
10011f00:	ret    
10011f01:	push   ebp
10011f02:	mov    ebp,esp
10011f04:	and    esp,0xfffffff8
10011f07:	push   ecx
10011f08:	push   ebx
10011f09:	mov    ebx,eax
10011f0b:	cmp    BYTE PTR [ebx+0x2c],0x0
10011f0f:	je     0x10011f2e
10011f11:	mov    eax,DWORD PTR [ebx+0x24]
10011f14:	cmp    eax,0x4b1
10011f19:	je     0x10011f29
10011f1b:	cmp    eax,0x4b0
10011f20:	je     0x10011f29
10011f22:	call   0x10011cbb
10011f27:	jmp    0x10011f2e
10011f29:	call   0x10011d92
10011f2e:	pop    ebx
10011f2f:	mov    esp,ebp
10011f31:	pop    ebp
10011f32:	ret    
10011f33:	push   ebp
10011f34:	mov    ebp,esp
10011f36:	mov    eax,DWORD PTR [ebp+0x8]
10011f39:	mov    eax,DWORD PTR [eax+0x34]
10011f3c:	test   eax,eax
10011f3e:	jne    0x10011f47
10011f40:	mov    eax,0x80004005
10011f45:	jmp    0x10011f79
10011f47:	mov    eax,DWORD PTR [eax]
10011f49:	test   eax,eax
10011f4b:	je     0x10011f40
10011f4d:	cmp    DWORD PTR [eax+0x1c],0x10
10011f51:	jb     0x10011f58
10011f53:	mov    eax,DWORD PTR [eax+0x8]
10011f56:	jmp    0x10011f5b
10011f58:	add    eax,0x8
10011f5b:	push   edi
10011f5c:	push   eax
10011f5d:	lea    edi,[ebp+0x8]
10011f60:	call   0x10002458
10011f65:	mov    eax,edi
10011f67:	call   0x1000de64
10011f6c:	mov    ecx,DWORD PTR [ebp+0xc]
10011f6f:	mov    DWORD PTR [ecx],eax
10011f71:	call   0x100025b3
10011f76:	xor    eax,eax
10011f78:	pop    edi
10011f79:	pop    ebp
10011f7a:	ret    0x8
10011f7d:	push   0x1c
10011f7f:	mov    eax,0x100613cb
10011f84:	call   0x10059df5
10011f89:	mov    esi,DWORD PTR [ebp+0x8]
10011f8c:	mov    eax,DWORD PTR [esi+0x34]
10011f8f:	test   eax,eax
10011f91:	jne    0x10011f9a
10011f93:	mov    eax,0x80004005
10011f98:	jmp    0x10011fe5
10011f9a:	cmp    DWORD PTR [eax],0x0
10011f9d:	je     0x10011f93
10011f9f:	mov    ecx,DWORD PTR [ebp+0xc]
10011fa2:	push   0x1
10011fa4:	lea    edi,[ebp+0x8]
10011fa7:	call   0x1000dde7
10011fac:	and    DWORD PTR [ebp-0x4],0x0
10011fb0:	mov    eax,edi
10011fb2:	call   0x1000de47
10011fb7:	push   eax
10011fb8:	lea    ecx,[ebp-0x28]
10011fbb:	call   0x100011a7
10011fc0:	lea    eax,[ebp-0x28]
10011fc3:	mov    BYTE PTR [ebp-0x4],0x1
10011fc7:	push   eax
10011fc8:	mov    eax,DWORD PTR [esi+0x34]
10011fcb:	mov    esi,DWORD PTR [eax]
10011fcd:	call   0x10007cc3
10011fd2:	push   0x0
10011fd4:	push   0x1
10011fd6:	lea    ecx,[ebp-0x28]
10011fd9:	call   0x100012f0
10011fde:	call   0x100025b3
10011fe3:	xor    eax,eax
10011fe5:	call   0x10059ecd
10011fea:	ret    0x8
10011fed:	push   ebp
10011fee:	mov    ebp,esp
10011ff0:	mov    eax,DWORD PTR [ebp+0x8]
10011ff3:	mov    eax,DWORD PTR [eax+0x34]
10011ff6:	test   eax,eax
10011ff8:	jne    0x10012001
10011ffa:	mov    eax,0x80004005
10011fff:	jmp    0x10012034
10012001:	mov    eax,DWORD PTR [eax+0x4]
10012004:	test   eax,eax
10012006:	je     0x10011ffa
10012008:	cmp    DWORD PTR [eax+0x1c],0x10
1001200c:	jb     0x10012013
1001200e:	mov    eax,DWORD PTR [eax+0x8]
10012011:	jmp    0x10012016
10012013:	add    eax,0x8
10012016:	push   edi
10012017:	push   eax
10012018:	lea    edi,[ebp+0x8]
1001201b:	call   0x10002458
10012020:	mov    eax,edi
10012022:	call   0x1000de64
10012027:	mov    ecx,DWORD PTR [ebp+0xc]
1001202a:	mov    DWORD PTR [ecx],eax
1001202c:	call   0x100025b3
10012031:	xor    eax,eax
10012033:	pop    edi
10012034:	pop    ebp
10012035:	ret    0x8
10012038:	push   0x1c
1001203a:	mov    eax,0x100613cb
1001203f:	call   0x10059df5
10012044:	mov    esi,DWORD PTR [ebp+0x8]
10012047:	mov    eax,DWORD PTR [esi+0x34]
1001204a:	test   eax,eax
1001204c:	jne    0x10012055
1001204e:	mov    eax,0x80004005
10012053:	jmp    0x100120a2
10012055:	cmp    DWORD PTR [eax+0x4],0x0
10012059:	je     0x1001204e
1001205b:	mov    ecx,DWORD PTR [ebp+0xc]
1001205e:	push   0x1
10012060:	lea    edi,[ebp+0x8]
10012063:	call   0x1000dde7
10012068:	and    DWORD PTR [ebp-0x4],0x0
1001206c:	mov    eax,edi
1001206e:	call   0x1000de47
10012073:	push   eax
10012074:	lea    ecx,[ebp-0x28]
10012077:	call   0x100011a7
1001207c:	lea    eax,[ebp-0x28]
1001207f:	mov    BYTE PTR [ebp-0x4],0x1
10012083:	push   eax
10012084:	mov    eax,DWORD PTR [esi+0x34]
10012087:	mov    esi,DWORD PTR [eax+0x4]
1001208a:	call   0x10007cc3
1001208f:	push   0x0
10012091:	push   0x1
10012093:	lea    ecx,[ebp-0x28]
10012096:	call   0x100012f0
1001209b:	call   0x100025b3
100120a0:	xor    eax,eax
100120a2:	call   0x10059ecd
100120a7:	ret    0x8
100120aa:	push   ebp
100120ab:	mov    ebp,esp
100120ad:	mov    eax,DWORD PTR [ebp+0x8]
100120b0:	mov    eax,DWORD PTR [eax+0x34]
100120b3:	test   eax,eax
100120b5:	jne    0x100120be
100120b7:	mov    eax,0x80004005
100120bc:	jmp    0x100120f1
100120be:	mov    eax,DWORD PTR [eax+0x8]
100120c1:	test   eax,eax
100120c3:	je     0x100120b7
100120c5:	cmp    DWORD PTR [eax+0x1c],0x10
100120c9:	jb     0x100120d0
100120cb:	mov    eax,DWORD PTR [eax+0x8]
100120ce:	jmp    0x100120d3
100120d0:	add    eax,0x8
100120d3:	push   edi
100120d4:	push   eax
100120d5:	lea    edi,[ebp+0x8]
100120d8:	call   0x10002458
100120dd:	mov    eax,edi
100120df:	call   0x1000de64
100120e4:	mov    ecx,DWORD PTR [ebp+0xc]
100120e7:	mov    DWORD PTR [ecx],eax
100120e9:	call   0x100025b3
100120ee:	xor    eax,eax
100120f0:	pop    edi
100120f1:	pop    ebp
100120f2:	ret    0x8
100120f5:	push   0x1c
100120f7:	mov    eax,0x100613cb
100120fc:	call   0x10059df5
10012101:	mov    esi,DWORD PTR [ebp+0x8]
10012104:	mov    eax,DWORD PTR [esi+0x34]
10012107:	test   eax,eax
10012109:	jne    0x10012112
1001210b:	mov    eax,0x80004005
10012110:	jmp    0x1001215f
10012112:	cmp    DWORD PTR [eax+0x8],0x0
10012116:	je     0x1001210b
10012118:	mov    ecx,DWORD PTR [ebp+0xc]
1001211b:	push   0x1
1001211d:	lea    edi,[ebp+0x8]
10012120:	call   0x1000dde7
10012125:	and    DWORD PTR [ebp-0x4],0x0
10012129:	mov    eax,edi
1001212b:	call   0x1000de47
10012130:	push   eax
10012131:	lea    ecx,[ebp-0x28]
10012134:	call   0x100011a7
10012139:	lea    eax,[ebp-0x28]
1001213c:	mov    BYTE PTR [ebp-0x4],0x1
10012140:	push   eax
10012141:	mov    eax,DWORD PTR [esi+0x34]
10012144:	mov    esi,DWORD PTR [eax+0x8]
10012147:	call   0x10007cc3
1001214c:	push   0x0
1001214e:	push   0x1
10012150:	lea    ecx,[ebp-0x28]
10012153:	call   0x100012f0
10012158:	call   0x100025b3
1001215d:	xor    eax,eax
1001215f:	call   0x10059ecd
10012164:	ret    0x8
10012167:	push   ebp
10012168:	mov    ebp,esp
1001216a:	mov    eax,DWORD PTR [ebp+0x8]
1001216d:	mov    eax,DWORD PTR [eax+0x30]
10012170:	test   eax,eax
10012172:	je     0x10012178
10012174:	mov    eax,DWORD PTR [eax]
10012176:	jmp    0x1001217a
10012178:	xor    eax,eax
1001217a:	push   edi
1001217b:	push   0x1
1001217d:	mov    ecx,eax
1001217f:	lea    edi,[ebp+0x8]
10012182:	call   0x1000dde7
10012187:	mov    eax,edi
10012189:	call   0x1000de64
1001218e:	mov    ecx,DWORD PTR [ebp+0xc]
10012191:	mov    DWORD PTR [ecx],eax
10012193:	call   0x100025b3
10012198:	xor    eax,eax
1001219a:	pop    edi
1001219b:	pop    ebp
1001219c:	ret    0x8
1001219f:	mov    eax,DWORD PTR [esp+0x4]
100121a3:	push   DWORD PTR [esp+0x8]
100121a7:	lea    ecx,[eax+0x30]
100121aa:	mov    BYTE PTR [eax+0x2c],0x1
100121ae:	call   0x10011381
100121b3:	xor    eax,eax
100121b5:	ret    0x8
100121b8:	mov    ecx,DWORD PTR [esp+0x8]
100121bc:	test   ecx,ecx
100121be:	mov    eax,DWORD PTR [esp+0x4]
100121c2:	jne    0x100121cb
100121c4:	mov    eax,0x80004003
100121c9:	jmp    0x100121df
100121cb:	mov    edx,DWORD PTR [eax+0x38]
100121ce:	mov    DWORD PTR [ecx],edx
100121d0:	mov    eax,DWORD PTR [eax+0x38]
100121d3:	test   eax,eax
100121d5:	je     0x100121dd
100121d7:	mov    ecx,DWORD PTR [eax]
100121d9:	push   eax
100121da:	call   DWORD PTR [ecx+0x4]
100121dd:	xor    eax,eax
100121df:	ret    0x8
100121e2:	mov    eax,DWORD PTR [esp+0x4]
100121e6:	mov    eax,DWORD PTR [eax+0x24]
100121e9:	mov    ecx,DWORD PTR [esp+0x8]
100121ed:	mov    DWORD PTR [ecx],eax
100121ef:	xor    eax,eax
100121f1:	ret    0x8
100121f4:	mov    eax,DWORD PTR [esp+0x4]
100121f8:	mov    eax,DWORD PTR [eax+0x28]
100121fb:	mov    ecx,DWORD PTR [esp+0x8]
100121ff:	mov    DWORD PTR [ecx],eax
10012201:	xor    eax,eax
10012203:	ret    0x8
10012206:	push   esi
10012207:	mov    esi,eax
10012209:	cmp    edi,DWORD PTR [esi+0x14]
1001220c:	jbe    0x10012213
1001220e:	call   0x10043605
10012213:	cmp    DWORD PTR [esi+0x18],0x10
10012217:	jb     0x1001221e
10012219:	mov    esi,DWORD PTR [esi+0x4]
1001221c:	jmp    0x10012221
1001221e:	add    esi,0x4
10012221:	lea    eax,[esi+edi*1]
10012224:	pop    esi
10012225:	ret    
10012226:	mov    ecx,DWORD PTR [esi+0x4]
10012229:	test   ecx,ecx
1001222b:	je     0x10012238
1001222d:	mov    eax,DWORD PTR [esi+0x8]
10012230:	sub    eax,ecx
10012232:	cmp    DWORD PTR [esp+0x4],eax
10012236:	jb     0x1001223d
10012238:	call   0x10043605
1001223d:	mov    eax,DWORD PTR [esi+0x4]
10012240:	add    eax,DWORD PTR [esp+0x4]
10012244:	ret    0x4
10012247:	push   edi
10012248:	mov    edi,eax
1001224a:	xor    eax,eax
1001224c:	cmp    edi,eax
1001224e:	mov    DWORD PTR [esi+0x4],eax
10012251:	mov    DWORD PTR [esi+0x8],eax
10012254:	mov    DWORD PTR [esi+0xc],eax
10012257:	je     0x1001229a
10012259:	cmp    edi,0x7fffffff
1001225f:	jbe    0x10012266
10012261:	call   0x1000dbd4
10012266:	mov    ecx,edi
10012268:	call   0x100062a9
1001226d:	test   edi,edi
1001226f:	lea    ecx,[edi+edi*1]
10012272:	lea    edx,[ecx+eax*1]
10012275:	mov    DWORD PTR [esi+0xc],edx
10012278:	mov    DWORD PTR [esi+0x4],eax
1001227b:	mov    DWORD PTR [esi+0x8],eax
1001227e:	mov    edx,eax
10012280:	jbe    0x10012295
10012282:	push   ebx
10012283:	mov    ebx,DWORD PTR [esp+0xc]
10012287:	mov    bx,WORD PTR [ebx]
1001228a:	mov    WORD PTR [edx],bx
1001228d:	dec    edi
1001228e:	inc    edx
1001228f:	inc    edx
10012290:	test   edi,edi
10012292:	ja     0x10012283
10012294:	pop    ebx
10012295:	add    ecx,eax
10012297:	mov    DWORD PTR [esi+0x8],ecx
1001229a:	pop    edi
1001229b:	ret    0x4
1001229e:	push   ebp
1001229f:	mov    ebp,esp
100122a1:	push   ecx
100122a2:	push   ebx
100122a3:	xor    ebx,ebx
100122a5:	cmp    edi,ebx
100122a7:	mov    DWORD PTR [esi+0x4],ebx
100122aa:	mov    DWORD PTR [esi+0x8],ebx
100122ad:	mov    DWORD PTR [esi+0xc],ebx
100122b0:	je     0x100122ef
100122b2:	cmp    edi,0xffffffff
100122b5:	jbe    0x100122bc
100122b7:	call   0x1000dbd4
100122bc:	push   ebx
100122bd:	push   edi
100122be:	call   0x10001ebe
100122c3:	cmp    edi,ebx
100122c5:	pop    ecx
100122c6:	pop    ecx
100122c7:	lea    ecx,[eax+edi*1]
100122ca:	mov    DWORD PTR [esi+0xc],ecx
100122cd:	mov    DWORD PTR [esi+0x4],eax
100122d0:	mov    DWORD PTR [esi+0x8],eax
100122d3:	mov    DWORD PTR [ebp-0x4],edi
100122d6:	mov    ecx,eax
100122d8:	jbe    0x100122ea
100122da:	mov    edx,DWORD PTR [ebp+0x8]
100122dd:	mov    dl,BYTE PTR [edx]
100122df:	dec    DWORD PTR [ebp-0x4]
100122e2:	mov    BYTE PTR [ecx],dl
100122e4:	inc    ecx
100122e5:	cmp    DWORD PTR [ebp-0x4],ebx
100122e8:	ja     0x100122da
100122ea:	add    eax,edi
100122ec:	mov    DWORD PTR [esi+0x8],eax
100122ef:	pop    ebx
100122f0:	leave  
100122f1:	ret    0x4
100122f4:	push   esi
100122f5:	mov    esi,DWORD PTR [eax]
100122f7:	test   esi,esi
100122f9:	je     0x10012329
100122fb:	mov    eax,DWORD PTR [esi]
100122fd:	test   eax,eax
100122ff:	je     0x10012323
10012301:	push   eax
10012302:	call   DWORD PTR ds:0x100672a0
10012308:	push   eax
10012309:	push   DWORD PTR [esi]
1001230b:	call   DWORD PTR ds:0x100672b0
10012311:	mov    esi,eax
10012313:	test   esi,esi
10012315:	jne    0x10012325
10012317:	push   0x8007000e
1001231c:	call   0x10050e90
10012321:	jmp    0x10012325
10012323:	xor    esi,esi
10012325:	mov    eax,esi
10012327:	pop    esi
10012328:	ret    
10012329:	xor    eax,eax
1001232b:	pop    esi
1001232c:	ret    
1001232d:	push   0x4
1001232f:	mov    eax,0x10060ac8
10012334:	call   0x10059df5
10012339:	mov    edi,ecx
1001233b:	call   0x100025b3
10012340:	push   0xc
10012342:	call   0x10043196
10012347:	pop    ecx
10012348:	test   eax,eax
1001234a:	je     0x1001235c
1001234c:	and    DWORD PTR [eax+0x4],0x0
10012350:	and    DWORD PTR [eax],0x0
10012353:	mov    DWORD PTR [eax+0x8],0x1
1001235a:	jmp    0x1001235e
1001235c:	xor    eax,eax
1001235e:	or     DWORD PTR [esp+0x1c],0xffffffff
10012363:	test   eax,eax
10012365:	mov    DWORD PTR [edi],eax
10012367:	jne    0x10012373
10012369:	push   0x8007000e
1001236e:	call   0x10050e90
10012373:	mov    eax,DWORD PTR [edi]
10012375:	call   0x10059ecd
1001237a:	ret    
1001237b:	push   0x8c
10012380:	mov    eax,0x1006326c
10012385:	call   0x10059e94
1001238a:	mov    esi,DWORD PTR [ebp+0x8]
1001238d:	mov    ebx,DWORD PTR [ebp+0xc]
10012390:	mov    eax,DWORD PTR [esi+0xc]
10012393:	push   ebx
10012394:	push   eax
10012395:	call   DWORD PTR ds:0x10082cc0
1001239b:	xor    edi,edi
1001239d:	cmp    eax,edi
1001239f:	mov    DWORD PTR [ebp-0x60],eax
100123a2:	jl     0x1001254e
100123a8:	mov    DWORD PTR [ebp-0x4],edi
100123ab:	mov    DWORD PTR [ebp-0x58],edi
100123ae:	lea    ecx,[ebp-0x58]
100123b1:	push   ecx
100123b2:	mov    BYTE PTR [ebp-0x4],0x1
100123b6:	mov    eax,DWORD PTR [esi]
100123b8:	push   esi
100123b9:	call   DWORD PTR [eax+0x94]
100123bf:	cmp    eax,edi
100123c1:	jge    0x100123d1
100123c3:	mov    BYTE PTR [ebp-0x4],0x0
100123c7:	mov    eax,DWORD PTR [ebp-0x58]
100123ca:	cmp    eax,edi
100123cc:	jmp    0x10012543
100123d1:	mov    esi,DWORD PTR [ebp-0x58]
100123d4:	cmp    esi,edi
100123d6:	je     0x1001254b
100123dc:	mov    DWORD PTR [ebp-0x5c],edi
100123df:	lea    ecx,[ebp-0x5c]
100123e2:	mov    BYTE PTR [ebp-0x4],0x2
100123e6:	call   0x1001232d
100123eb:	mov    ecx,DWORD PTR [esi]
100123ed:	push   eax
100123ee:	push   esi
100123ef:	call   DWORD PTR [ecx+0x20]
100123f2:	cmp    eax,edi
100123f4:	jl     0x10012532
100123fa:	lea    eax,[ebp-0x5c]
100123fd:	call   0x1000de47
10012402:	push   eax
10012403:	lea    ecx,[ebp-0x30]
10012406:	call   0x100011a7
1001240b:	lea    eax,[ebp-0x30]
1001240e:	mov    BYTE PTR [ebp-0x4],0x3
10012412:	call   0x1001979a
10012417:	mov    eax,DWORD PTR [ebp-0x2c]
1001241a:	push   0x10
1001241c:	pop    esi
1001241d:	cmp    DWORD PTR [ebp-0x18],esi
10012420:	jae    0x10012425
10012422:	lea    eax,[ebp-0x2c]
10012425:	push   eax
10012426:	call   0x10002068
1001242b:	pop    ecx
1001242c:	lea    eax,[ebp-0x50]
1001242f:	push   eax
10012430:	push   0x10082f58
10012435:	lea    ecx,[ebp-0x30]
10012438:	call   0x10019c6d
1001243d:	lea    edi,[ebp-0x50]
10012440:	mov    BYTE PTR [ebp-0x4],0x4
10012444:	call   0x10019b2d
10012449:	test   al,al
1001244b:	jne    0x1001251a
10012451:	mov    eax,DWORD PTR [ebp-0x50]
10012454:	dec    eax
10012455:	je     0x1001248b
10012457:	dec    eax
10012458:	jne    0x1001251a
1001245e:	cmp    DWORD PTR [ebp-0x18],esi
10012461:	mov    eax,DWORD PTR [ebp-0x2c]
10012464:	jae    0x10012469
10012466:	lea    eax,[ebp-0x2c]
10012469:	push   eax
1001246a:	call   0x10002068
1001246f:	pop    ecx
10012470:	push   DWORD PTR [ebx]
10012472:	call   DWORD PTR ds:0x100672b4
10012478:	push   0x1006dd18
1001247d:	lea    edi,[ebp-0x54]
10012480:	call   0x10002458
10012485:	mov    BYTE PTR [ebp-0x4],0x8
10012489:	jmp    0x10012508
1001248b:	lea    eax,[ebp-0x7c]
1001248e:	push   eax
1001248f:	lea    eax,[ebp-0x50]
10012492:	call   0x10007ca8
10012497:	cmp    DWORD PTR [ebp-0x18],esi
1001249a:	mov    ecx,DWORD PTR [ebp-0x2c]
1001249d:	jae    0x100124a2
1001249f:	lea    ecx,[ebp-0x2c]
100124a2:	cmp    DWORD PTR [eax+0x18],esi
100124a5:	jb     0x100124ac
100124a7:	mov    eax,DWORD PTR [eax+0x4]
100124aa:	jmp    0x100124af
100124ac:	add    eax,0x4
100124af:	push   ecx
100124b0:	push   eax
100124b1:	call   0x10002068
100124b6:	pop    ecx
100124b7:	pop    ecx
100124b8:	push   0x0
100124ba:	push   0x1
100124bc:	lea    ecx,[ebp-0x7c]
100124bf:	call   0x100012f0
100124c4:	push   DWORD PTR [ebx]
100124c6:	call   DWORD PTR ds:0x100672b4
100124cc:	lea    eax,[ebp-0x98]
100124d2:	push   eax
100124d3:	lea    eax,[ebp-0x50]
100124d6:	call   0x10007ca8
100124db:	mov    BYTE PTR [ebp-0x4],0x5
100124df:	cmp    DWORD PTR [eax+0x18],esi
100124e2:	jb     0x100124e9
100124e4:	mov    eax,DWORD PTR [eax+0x4]
100124e7:	jmp    0x100124ec
100124e9:	add    eax,0x4
100124ec:	push   eax
100124ed:	lea    edi,[ebp-0x54]
100124f0:	call   0x10002458
100124f5:	push   0x0
100124f7:	push   0x1
100124f9:	lea    ecx,[ebp-0x98]
100124ff:	mov    BYTE PTR [ebp-0x4],0x7
10012503:	call   0x100012f0
10012508:	lea    eax,[ebp-0x54]
1001250b:	call   0x100122f4
10012510:	lea    edi,[ebp-0x54]
10012513:	mov    DWORD PTR [ebx],eax
10012515:	call   0x100025b3
1001251a:	push   0x0
1001251c:	push   0x1
1001251e:	lea    ecx,[ebp-0x4c]
10012521:	call   0x100012f0
10012526:	push   0x0
10012528:	push   0x1
1001252a:	lea    ecx,[ebp-0x30]
1001252d:	call   0x100012f0
10012532:	lea    edi,[ebp-0x5c]
10012535:	call   0x100025b3
1001253a:	mov    BYTE PTR [ebp-0x4],0x0
1001253e:	mov    eax,DWORD PTR [ebp-0x58]
10012541:	test   eax,eax
10012543:	je     0x1001254b
10012545:	mov    ecx,DWORD PTR [eax]
10012547:	push   eax
10012548:	call   DWORD PTR [ecx+0x8]
1001254b:	mov    eax,DWORD PTR [ebp-0x60]
1001254e:	call   0x10059ef0
10012553:	ret    0x8
10012556:	push   0x8
10012558:	call   0x10038b80
1001255d:	pop    ecx
1001255e:	mov    eax,0x1001254b
10012563:	ret    
10012564:	mov    DWORD PTR [esp+0x4],eax
10012568:	jmp    0x1001237b
1001256d:	push   ebp
1001256e:	mov    ebp,esp
10012570:	sub    esp,0x1c
10012573:	and    DWORD PTR [ebp-0x1c],0x0
10012577:	push   edi
10012578:	push   0x6
1001257a:	pop    ecx
1001257b:	xor    eax,eax
1001257d:	lea    edi,[ebp-0x18]
10012580:	rep stos DWORD PTR es:[edi],eax
10012582:	push   esi
10012583:	lea    eax,[ebp-0x1c]
10012586:	push   eax
10012587:	push   ebx
10012588:	call   DWORD PTR ds:0x10067100
1001258e:	test   eax,eax
10012590:	pop    edi
10012591:	jne    0x10012597
10012593:	xor    al,al
10012595:	leave  
10012596:	ret    
10012597:	cmp    DWORD PTR [ebp-0xc],0x10000
1001259e:	je     0x10012593
100125a0:	mov    eax,DWORD PTR [ebp-0x1c]
100125a3:	mov    ecx,DWORD PTR [ebp-0x10]
100125a6:	add    ecx,eax
100125a8:	lea    eax,[ebx+esi*1]
100125ab:	cmp    ecx,eax
100125ad:	jb     0x10012593
100125af:	push   esi
100125b0:	push   DWORD PTR [ebp+0x8]
100125b3:	push   ebx
100125b4:	call   0x10043a74
100125b9:	add    esp,0xc
100125bc:	neg    eax
100125be:	sbb    al,al
100125c0:	inc    al
100125c2:	leave  
100125c3:	ret    
100125c4:	push   ebp
100125c5:	mov    ebp,esp
100125c7:	sub    esp,0x40
100125ca:	mov    eax,ds:0x100801ac
100125cf:	xor    eax,ebp
100125d1:	mov    DWORD PTR [ebp-0x4],eax
100125d4:	xor    al,al
100125d6:	push   ebx
100125d7:	push   esi
100125d8:	mov    BYTE PTR [ebp-0x38],al
100125db:	mov    BYTE PTR [ebp-0x37],al
100125de:	mov    BYTE PTR [ebp-0x36],al
100125e1:	mov    BYTE PTR [ebp-0x28],al
100125e4:	mov    BYTE PTR [ebp-0x27],al
100125e7:	mov    BYTE PTR [ebp-0x26],al
100125ea:	mov    BYTE PTR [ebp-0x17],al
100125ed:	mov    BYTE PTR [ebp-0x9],al
100125f0:	mov    BYTE PTR [ebp-0x8],al
100125f3:	mov    BYTE PTR [ebp-0x7],al
100125f6:	lea    eax,[ebp-0x40]
100125f9:	push   eax
100125fa:	push   0x1d
100125fc:	mov    ebx,ecx
100125fe:	pop    esi
100125ff:	mov    BYTE PTR [ebp-0x40],0x8b
10012603:	mov    BYTE PTR [ebp-0x3f],0x44
10012607:	mov    BYTE PTR [ebp-0x3e],0x24
1001260b:	mov    BYTE PTR [ebp-0x3d],0x4
1001260f:	mov    BYTE PTR [ebp-0x3c],0xc7
10012613:	mov    BYTE PTR [ebp-0x3b],0x40
10012617:	mov    BYTE PTR [ebp-0x3a],0x20
1001261b:	mov    BYTE PTR [ebp-0x39],0x24
1001261f:	mov    BYTE PTR [ebp-0x35],0x8b
10012623:	mov    BYTE PTR [ebp-0x34],0x48
10012627:	mov    BYTE PTR [ebp-0x33],0xc
1001262b:	mov    BYTE PTR [ebp-0x32],0x89
1001262f:	mov    BYTE PTR [ebp-0x31],0x4c
10012633:	mov    BYTE PTR [ebp-0x30],0x24
10012637:	mov    BYTE PTR [ebp-0x2f],0x4
1001263b:	mov    BYTE PTR [ebp-0x2e],0x8b
1001263f:	mov    BYTE PTR [ebp-0x2d],0x48
10012643:	mov    BYTE PTR [ebp-0x2c],0x10
10012647:	mov    BYTE PTR [ebp-0x2b],0x8b
1001264b:	mov    BYTE PTR [ebp-0x2a],0x89
1001264f:	mov    BYTE PTR [ebp-0x29],0x90
10012653:	mov    BYTE PTR [ebp-0x25],0xff
10012657:	mov    BYTE PTR [ebp-0x24],0xe1
1001265b:	mov    BYTE PTR [ebp-0x20],0x8b
1001265f:	mov    BYTE PTR [ebp-0x1f],0x44
10012663:	mov    BYTE PTR [ebp-0x1e],0x24
10012667:	mov    BYTE PTR [ebp-0x1d],0x4
1001266b:	mov    BYTE PTR [ebp-0x1c],0x66
1001266f:	mov    BYTE PTR [ebp-0x1b],0xc7
10012673:	mov    BYTE PTR [ebp-0x1a],0x40
10012677:	mov    BYTE PTR [ebp-0x19],0x20
1001267b:	mov    BYTE PTR [ebp-0x18],0x24
1001267f:	mov    BYTE PTR [ebp-0x16],0x8b
10012683:	mov    BYTE PTR [ebp-0x15],0x48
10012687:	mov    BYTE PTR [ebp-0x14],0xc
1001268b:	mov    BYTE PTR [ebp-0x13],0x89
1001268f:	mov    BYTE PTR [ebp-0x12],0x4c
10012693:	mov    BYTE PTR [ebp-0x11],0x24
10012697:	mov    BYTE PTR [ebp-0x10],0x4
1001269b:	mov    BYTE PTR [ebp-0xf],0x8b
1001269f:	mov    BYTE PTR [ebp-0xe],0x48
100126a3:	mov    BYTE PTR [ebp-0xd],0x10
100126a7:	mov    BYTE PTR [ebp-0xc],0x8b
100126ab:	mov    BYTE PTR [ebp-0xb],0x89
100126af:	mov    BYTE PTR [ebp-0xa],0x90
100126b3:	mov    BYTE PTR [ebp-0x6],0xff
100126b7:	mov    BYTE PTR [ebp-0x5],0xe1
100126bb:	call   0x1001256d
100126c0:	test   al,al
100126c2:	pop    ecx
100126c3:	jne    0x100126da
100126c5:	lea    eax,[ebp-0x20]
100126c8:	push   eax
100126c9:	push   0x1c
100126cb:	pop    esi
100126cc:	call   0x1001256d
100126d1:	test   al,al
100126d3:	pop    ecx
100126d4:	jne    0x100126da
100126d6:	xor    eax,eax
100126d8:	jmp    0x100126dd
100126da:	xor    eax,eax
100126dc:	inc    eax
100126dd:	mov    ecx,DWORD PTR [ebp-0x4]
100126e0:	pop    esi
100126e1:	xor    ecx,ebp
100126e3:	pop    ebx
100126e4:	call   0x10043615
100126e9:	leave  
100126ea:	ret    
100126eb:	push   ebp
100126ec:	mov    ebp,esp
100126ee:	and    esp,0xfffffff8
100126f1:	push   0xffffffff
100126f3:	push   0x100641ae
100126f8:	mov    eax,fs:0x0
100126fe:	push   eax
100126ff:	sub    esp,0x20
10012702:	mov    eax,ds:0x100801ac
10012707:	xor    eax,esp
10012709:	mov    DWORD PTR [esp+0x18],eax
1001270d:	push   esi
1001270e:	mov    eax,ds:0x100801ac
10012713:	xor    eax,esp
10012715:	push   eax
10012716:	lea    eax,[esp+0x28]
1001271a:	mov    fs:0x0,eax
10012720:	push   0x1006f298
10012725:	push   0xa
10012727:	mov    ecx,0x1006f2d8
1001272c:	call   0x1000444a
10012731:	pop    ecx
10012732:	pop    ecx
10012733:	push   eax
10012734:	call   DWORD PTR ds:0x100670e0
1001273a:	xor    esi,esi
1001273c:	push   esi
1001273d:	call   DWORD PTR ds:0x1006743c
10012743:	mov    DWORD PTR [esp+0xc],esi
10012747:	push   0x1006f2f0
1001274c:	push   0x8
1001274e:	mov    ecx,0x1006f324
10012753:	mov    DWORD PTR [esp+0x38],esi
10012757:	call   0x1000444a
1001275c:	pop    ecx
1001275d:	pop    ecx
1001275e:	lea    ecx,[esp+0x10]
10012762:	push   ecx
10012763:	push   eax
10012764:	call   DWORD PTR ds:0x10067444
1001276a:	cmp    eax,esi
1001276c:	jl     0x100127d9
1001276e:	lea    eax,[esp+0xc]
10012772:	push   eax
10012773:	push   0x1006f394
10012778:	push   0x17
1001277a:	push   esi
1001277b:	lea    eax,[esp+0x20]
1001277f:	push   eax
10012780:	call   DWORD PTR ds:0x10067440
10012786:	cmp    eax,esi
10012788:	jl     0x100127d9
1001278a:	mov    eax,DWORD PTR [esp+0xc]
1001278e:	mov    eax,DWORD PTR [eax]
10012790:	mov    ecx,DWORD PTR [eax+0x90]
10012796:	call   0x100125c4
1001279b:	test   al,al
1001279d:	jne    0x100127ae
1001279f:	call   0x10002068
100127a4:	push   0x8
100127a6:	call   0x10038b80
100127ab:	pop    ecx
100127ac:	jmp    0x100127d9
100127ae:	mov    eax,DWORD PTR [esp+0xc]
100127b2:	mov    eax,DWORD PTR [eax+0x10]
100127b5:	mov    eax,DWORD PTR [eax+0x90]
100127bb:	push   0x10012564
100127c0:	push   eax
100127c1:	call   0x10057780
100127c6:	push   esi
100127c7:	push   0x1
100127c9:	push   0x10082e10
100127ce:	mov    ds:0x10082cc0,eax
100127d3:	call   DWORD PTR ds:0x100670ec
100127d9:	or     DWORD PTR [esp+0x30],0xffffffff
100127de:	mov    eax,DWORD PTR [esp+0xc]
100127e2:	cmp    eax,esi
100127e4:	je     0x100127ec
100127e6:	mov    ecx,DWORD PTR [eax]
100127e8:	push   eax
100127e9:	call   DWORD PTR [ecx+0x8]
100127ec:	mov    ecx,DWORD PTR [esp+0x28]
100127f0:	mov    DWORD PTR fs:0x0,ecx
100127f7:	pop    ecx
100127f8:	pop    esi
100127f9:	mov    ecx,DWORD PTR [esp+0x18]
100127fd:	xor    ecx,esp
100127ff:	call   0x10043615
10012804:	mov    esp,ebp
10012806:	pop    ebp
10012807:	ret    
10012808:	push   0x10
1001280a:	mov    eax,0x10062497
1001280f:	call   0x10059df5
10012814:	push   DWORD PTR [ebp+0x8]
10012817:	lea    eax,[ebp-0x1c]
1001281a:	push   eax
1001281b:	call   0x1000fa46
10012820:	pop    ecx
10012821:	pop    ecx
10012822:	xor    ebx,ebx
10012824:	lea    eax,[ebp-0x1c]
10012827:	mov    DWORD PTR [ebp-0x4],ebx
1001282a:	call   0x100045f3
1001282f:	cmp    eax,0x2
10012832:	jne    0x1001286a
10012834:	push   ebx
10012835:	lea    esi,[ebp-0x1c]
10012838:	call   0x10004609
1001283d:	mov    ecx,DWORD PTR [ebp+0xc]
10012840:	push   0xffffffff
10012842:	push   ebx
10012843:	push   eax
10012844:	call   0x10001241
10012849:	inc    ebx
1001284a:	push   ebx
1001284b:	call   0x10004609
10012850:	cmp    DWORD PTR [eax+0x18],0x10
10012854:	jb     0x1001285b
10012856:	mov    eax,DWORD PTR [eax+0x4]
10012859:	jmp    0x1001285e
1001285b:	add    eax,0x4
1001285e:	push   eax
1001285f:	call   0x10045fb3
10012864:	pop    ecx
10012865:	mov    ecx,DWORD PTR [ebp+0x10]
10012868:	mov    DWORD PTR [ecx],eax
1001286a:	lea    esi,[ebp-0x1c]
1001286d:	call   0x10004996
10012872:	mov    al,bl
10012874:	call   0x10059ecd
10012879:	ret    
1001287a:	push   ebp
1001287b:	mov    ebp,esp
1001287d:	push   0xffffffff
1001287f:	push   0x10063bde
10012884:	mov    eax,fs:0x0
1001288a:	push   eax
1001288b:	push   ecx
1001288c:	mov    eax,0x1058
10012891:	call   0x1004a070
10012896:	mov    eax,ds:0x100801ac
1001289b:	xor    eax,ebp
1001289d:	mov    DWORD PTR [ebp-0x14],eax
100128a0:	push   ebx
100128a1:	push   esi
100128a2:	push   edi
100128a3:	push   eax
100128a4:	lea    eax,[ebp-0xc]
100128a7:	mov    fs:0x0,eax
100128ad:	mov    DWORD PTR [ebp-0x10],esp
100128b0:	mov    eax,DWORD PTR [ebp+0x8]
100128b3:	mov    DWORD PTR [ebp-0x103c],eax
100128b9:	mov    eax,DWORD PTR [ebp+0xc]
100128bc:	xor    edi,edi
100128be:	push   0xfff
100128c3:	mov    DWORD PTR [ebp-0x1040],eax
100128c9:	mov    DWORD PTR [eax],edi
100128cb:	lea    eax,[ebp-0x1017]
100128d1:	push   edi
100128d2:	push   eax
100128d3:	mov    DWORD PTR [ebp-0x1054],0x1000
100128dd:	mov    BYTE PTR [ebp-0x1018],0x0
100128e4:	call   0x10045dc0
100128e9:	add    esp,0xc
100128ec:	lea    eax,[ebp-0x1054]
100128f2:	push   eax
100128f3:	lea    eax,[ebp-0x1018]
100128f9:	push   eax
100128fa:	push   0x26
100128fc:	push   edi
100128fd:	call   DWORD PTR ds:0x10067370
10012903:	test   eax,eax
10012905:	jne    0x10012923
10012907:	xor    al,al
10012909:	mov    ecx,DWORD PTR [ebp-0xc]
1001290c:	mov    DWORD PTR fs:0x0,ecx
10012913:	pop    ecx
10012914:	pop    edi
10012915:	pop    esi
10012916:	pop    ebx
10012917:	mov    ecx,DWORD PTR [ebp-0x14]
1001291a:	xor    ecx,ebp
1001291c:	call   0x10043615
10012921:	leave  
10012922:	ret    
10012923:	cmp    DWORD PTR [ebp-0x1018],0x3
1001292a:	jne    0x10012907
1001292c:	cmp    DWORD PTR [ebp-0x1014],edi
10012932:	je     0x10012907
10012934:	push   DWORD PTR [ebp-0x1014]
1001293a:	lea    ecx,[ebp-0x1034]
10012940:	call   0x100011a7
10012945:	mov    DWORD PTR [ebp-0x4],edi
10012948:	mov    DWORD PTR [ebp-0x104c],edi
1001294e:	mov    DWORD PTR [ebp-0x1048],edi
10012954:	mov    DWORD PTR [ebp-0x1044],edi
1001295a:	lea    eax,[ebp-0x1034]
10012960:	push   eax
10012961:	lea    eax,[ebp-0x1064]
10012967:	push   eax
10012968:	mov    BYTE PTR [ebp-0x1035],0x0
1001296f:	mov    BYTE PTR [ebp-0x4],0x2
10012973:	call   0x10012abf
10012978:	pop    ecx
10012979:	pop    ecx
1001297a:	lea    ecx,[ebp-0x1050]
10012980:	mov    BYTE PTR [ebp-0x4],0x3
10012984:	call   0x10012b73
10012989:	lea    esi,[ebp-0x1064]
1001298f:	mov    BYTE PTR [ebp-0x4],0x2
10012993:	call   0x1000d5ed
10012998:	xor    ebx,ebx
1001299a:	cmp    DWORD PTR [ebp-0x104c],edi
100129a0:	jne    0x100129a6
100129a2:	xor    eax,eax
100129a4:	jmp    0x100129b5
100129a6:	mov    eax,DWORD PTR [ebp-0x1048]
100129ac:	sub    eax,DWORD PTR [ebp-0x104c]
100129b2:	sar    eax,0x4
100129b5:	cmp    ebx,eax
100129b7:	je     0x10012a45
100129bd:	push   ebx
100129be:	lea    esi,[ebp-0x1050]
100129c4:	call   0x1000cedb
100129c9:	call   0x100045f3
100129ce:	cmp    eax,0x2
100129d1:	jne    0x10012a3f
100129d3:	push   edi
100129d4:	push   ebx
100129d5:	call   0x1000cedb
100129da:	mov    esi,eax
100129dc:	call   0x10004609
100129e1:	cmp    DWORD PTR [eax+0x18],0x10
100129e5:	jb     0x100129ec
100129e7:	mov    esi,DWORD PTR [eax+0x4]
100129ea:	jmp    0x100129ef
100129ec:	lea    esi,[eax+0x4]
100129ef:	push   0x1006f360
100129f4:	push   0x4
100129f6:	mov    ecx,0x1006f38c
100129fb:	call   0x100042b4
10012a00:	pop    ecx
10012a01:	pop    ecx
10012a02:	push   eax
10012a03:	push   esi
10012a04:	call   0x1004582f
10012a09:	test   eax,eax
10012a0b:	pop    ecx
10012a0c:	pop    ecx
10012a0d:	jne    0x10012a3f
10012a0f:	push   DWORD PTR [ebp-0x1040]
10012a15:	lea    esi,[ebp-0x1050]
10012a1b:	push   DWORD PTR [ebp-0x103c]
10012a21:	push   0x1
10012a23:	push   ebx
10012a24:	call   0x1000cedb
10012a29:	mov    esi,eax
10012a2b:	call   0x10004609
10012a30:	push   eax
10012a31:	call   0x10012808
10012a36:	add    esp,0xc
10012a39:	mov    BYTE PTR [ebp-0x1035],al
10012a3f:	inc    ebx
10012a40:	jmp    0x1001299a
10012a45:	mov    DWORD PTR [ebp-0x4],0x1
10012a4c:	jmp    0x10012a5d
10012a4e:	mov    DWORD PTR [ebp-0x4],0x1
10012a55:	mov    eax,0x10012a5b
10012a5a:	ret    
10012a5b:	xor    edi,edi
10012a5d:	cmp    BYTE PTR [ebp-0x1035],0x0
10012a64:	je     0x10012a88
10012a66:	mov    bl,0x1
10012a68:	lea    esi,[ebp-0x1050]
10012a6e:	call   0x1000d5ed
10012a73:	push   edi
10012a74:	push   0x1
10012a76:	lea    ecx,[ebp-0x1034]
10012a7c:	call   0x100012f0
10012a81:	mov    al,bl
10012a83:	jmp    0x10012909
10012a88:	push   DWORD PTR [ebp-0x1040]
10012a8e:	lea    eax,[ebp-0x1034]
10012a94:	push   DWORD PTR [ebp-0x103c]
10012a9a:	mov    BYTE PTR [ebp-0x4],0x5
10012a9e:	push   eax
10012a9f:	call   0x10012808
10012aa4:	add    esp,0xc
10012aa7:	mov    BYTE PTR [ebp-0x1035],al
10012aad:	jmp    0x10012ab7
10012aaf:	mov    eax,0x10012ab5
10012ab4:	ret    
10012ab5:	xor    edi,edi
10012ab7:	mov    bl,BYTE PTR [ebp-0x1035]
10012abd:	jmp    0x10012a68
10012abf:	push   0x34
10012ac1:	mov    eax,0x10063351
10012ac6:	call   0x10059df5
10012acb:	mov    edi,DWORD PTR [ebp+0x8]
10012ace:	xor    esi,esi
10012ad0:	mov    DWORD PTR [ebp-0x10],esi
10012ad3:	mov    DWORD PTR [edi+0x4],esi
10012ad6:	mov    DWORD PTR [edi+0x8],esi
10012ad9:	mov    DWORD PTR [edi+0xc],esi
10012adc:	mov    DWORD PTR [ebp-0x4],esi
10012adf:	push   DWORD PTR ds:0x100834ac
10012ae5:	mov    DWORD PTR [ebp-0x10],0x1
10012aec:	call   0x10043450
10012af1:	pop    ecx
10012af2:	mov    DWORD PTR [ebp-0x14],eax
10012af5:	push   esi
10012af6:	push   DWORD PTR ds:0x100834ac
10012afc:	push   DWORD PTR [ebp+0xc]
10012aff:	call   0x1000ce2f
10012b04:	mov    ebx,eax
10012b06:	cmp    ebx,0xffffffff
10012b09:	jne    0x10012b11
10012b0b:	mov    eax,DWORD PTR [ebp+0xc]
10012b0e:	mov    ebx,DWORD PTR [eax+0x14]
10012b11:	cmp    ebx,esi
10012b13:	jb     0x10012b63
10012b15:	mov    eax,ebx
10012b17:	sub    eax,esi
10012b19:	push   eax
10012b1a:	push   esi
10012b1b:	push   DWORD PTR [ebp+0xc]
10012b1e:	lea    eax,[ebp-0x40]
10012b21:	call   0x1000ce4e
10012b26:	push   eax
10012b27:	lea    eax,[ebp-0x24]
10012b2a:	push   eax
10012b2b:	mov    DWORD PTR [ebp-0x4],0x1
10012b32:	call   0x10012c94
10012b37:	pop    ecx
10012b38:	pop    ecx
10012b39:	push   eax
10012b3a:	mov    esi,edi
10012b3c:	mov    BYTE PTR [ebp-0x4],0x2
10012b40:	call   0x1000fb01
10012b45:	lea    esi,[ebp-0x24]
10012b48:	call   0x10004996
10012b4d:	push   0x0
10012b4f:	push   0x1
10012b51:	lea    ecx,[ebp-0x40]
10012b54:	mov    BYTE PTR [ebp-0x4],0x0
10012b58:	call   0x100012f0
10012b5d:	mov    eax,DWORD PTR [ebp-0x14]
10012b60:	lea    esi,[ebx+eax*1]
10012b63:	mov    eax,DWORD PTR [ebp+0xc]
10012b66:	cmp    esi,DWORD PTR [eax+0x14]
10012b69:	jb     0x10012af5
10012b6b:	mov    eax,edi
10012b6d:	call   0x10059ecd
10012b72:	ret    
10012b73:	push   ebx
10012b74:	push   esi
10012b75:	push   edi
10012b76:	mov    esi,eax
10012b78:	mov    edi,ecx
10012b7a:	cmp    edi,esi
10012b7c:	je     0x10012c8e
10012b82:	call   0x1000cec8
10012b87:	test   eax,eax
10012b89:	jne    0x10012bcc
10012b8b:	mov    ebx,DWORD PTR [edi+0x8]
10012b8e:	cmp    DWORD PTR [edi+0x4],ebx
10012b91:	jbe    0x10012b98
10012b93:	call   0x10043605
10012b98:	mov    esi,DWORD PTR [edi+0x4]
10012b9b:	cmp    esi,DWORD PTR [edi+0x8]
10012b9e:	jbe    0x10012ba5
10012ba0:	call   0x10043605
10012ba5:	cmp    esi,ebx
10012ba7:	je     0x10012c8e
10012bad:	push   DWORD PTR [edi+0x8]
10012bb0:	mov    eax,esi
10012bb2:	mov    ecx,ebx
10012bb4:	call   0x10012d4f
10012bb9:	pop    ecx
10012bba:	push   DWORD PTR [edi+0x8]
10012bbd:	mov    esi,eax
10012bbf:	call   0x1000d905
10012bc4:	mov    DWORD PTR [edi+0x8],esi
10012bc7:	jmp    0x10012c8e
10012bcc:	mov    eax,esi
10012bce:	call   0x1000cec8
10012bd3:	mov    ebx,eax
10012bd5:	mov    eax,edi
10012bd7:	call   0x1000cec8
10012bdc:	cmp    ebx,eax
10012bde:	mov    eax,DWORD PTR [edi+0x4]
10012be1:	ja     0x10012c09
10012be3:	push   DWORD PTR [esi+0x8]
10012be6:	mov    ecx,DWORD PTR [esi+0x4]
10012be9:	call   0x10012d4f
10012bee:	pop    ecx
10012bef:	push   DWORD PTR [edi+0x8]
10012bf2:	call   0x1000d905
10012bf7:	mov    eax,esi
10012bf9:	call   0x1000cec8
10012bfe:	shl    eax,0x4
10012c01:	add    eax,DWORD PTR [edi+0x4]
10012c04:	jmp    0x10012c8b
10012c09:	test   eax,eax
10012c0b:	jne    0x10012c11
10012c0d:	xor    ebx,ebx
10012c0f:	jmp    0x10012c19
10012c11:	mov    ebx,DWORD PTR [edi+0xc]
10012c14:	sub    ebx,eax
10012c16:	sar    ebx,0x4
10012c19:	mov    eax,esi
10012c1b:	call   0x1000cec8
10012c20:	cmp    eax,ebx
10012c22:	ja     0x10012c46
10012c24:	mov    eax,edi
10012c26:	call   0x1000cec8
10012c2b:	mov    ecx,DWORD PTR [esi+0x4]
10012c2e:	mov    ebx,eax
10012c30:	mov    eax,DWORD PTR [edi+0x4]
10012c33:	shl    ebx,0x4
10012c36:	add    ebx,ecx
10012c38:	push   ebx
10012c39:	call   0x10012d4f
10012c3e:	pop    ecx
10012c3f:	push   DWORD PTR [edi+0x8]
10012c42:	mov    ecx,ebx
10012c44:	jmp    0x10012c83
10012c46:	mov    eax,DWORD PTR [edi+0x4]
10012c49:	xor    ebx,ebx
10012c4b:	cmp    eax,ebx
10012c4d:	je     0x10012c60
10012c4f:	push   DWORD PTR [edi+0x8]
10012c52:	call   0x1000d905
10012c57:	push   DWORD PTR [edi+0x4]
10012c5a:	call   0x10042fe2
10012c5f:	pop    ecx
10012c60:	mov    eax,esi
10012c62:	call   0x1000cec8
10012c67:	cmp    eax,ebx
10012c69:	mov    DWORD PTR [edi+0x4],ebx
10012c6c:	mov    DWORD PTR [edi+0x8],ebx
10012c6f:	mov    DWORD PTR [edi+0xc],ebx
10012c72:	je     0x10012c8e
10012c74:	call   0x1000fc3d
10012c79:	test   al,al
10012c7b:	je     0x10012c8e
10012c7d:	push   DWORD PTR [edi+0x4]
10012c80:	mov    ecx,DWORD PTR [esi+0x4]
10012c83:	push   DWORD PTR [esi+0x8]
10012c86:	call   0x10012d87
10012c8b:	mov    DWORD PTR [edi+0x8],eax
10012c8e:	mov    eax,edi
10012c90:	pop    edi
10012c91:	pop    esi
10012c92:	pop    ebx
10012c93:	ret    
10012c94:	push   0x44
10012c96:	mov    eax,0x10061f28
10012c9b:	call   0x10059df5
10012ca0:	mov    esi,DWORD PTR [ebp+0x8]
10012ca3:	xor    ebx,ebx
10012ca5:	mov    DWORD PTR [ebp-0x14],ebx
10012ca8:	mov    DWORD PTR [esi+0x4],ebx
10012cab:	mov    DWORD PTR [esi+0x8],ebx
10012cae:	mov    DWORD PTR [esi+0xc],ebx
10012cb1:	xor    edi,edi
10012cb3:	inc    edi
10012cb4:	mov    DWORD PTR [ebp-0x4],ebx
10012cb7:	push   0x1006f294
10012cbc:	mov    DWORD PTR [ebp-0x14],edi
10012cbf:	call   0x10043450
10012cc4:	pop    ecx
10012cc5:	mov    DWORD PTR [ebp-0x18],eax
10012cc8:	mov    DWORD PTR [ebp-0x10],ebx
10012ccb:	push   DWORD PTR [ebp-0x10]
10012cce:	push   0x1006f294
10012cd3:	push   DWORD PTR [ebp+0xc]
10012cd6:	call   0x1000ce2f
10012cdb:	mov    ebx,eax
10012cdd:	cmp    ebx,0xffffffff
10012ce0:	jne    0x10012ce8
10012ce2:	mov    eax,DWORD PTR [ebp+0xc]
10012ce5:	mov    ebx,DWORD PTR [eax+0x14]
10012ce8:	cmp    ebx,DWORD PTR [ebp-0x10]
10012ceb:	jb     0x10012d3c
10012ced:	mov    eax,ebx
10012cef:	sub    eax,DWORD PTR [ebp-0x10]
10012cf2:	push   eax
10012cf3:	push   DWORD PTR [ebp-0x10]
10012cf6:	lea    eax,[ebp-0x50]
10012cf9:	push   DWORD PTR [ebp+0xc]
10012cfc:	call   0x1000ce4e
10012d01:	push   eax
10012d02:	lea    eax,[ebp-0x34]
10012d05:	push   eax
10012d06:	mov    DWORD PTR [ebp-0x4],edi
10012d09:	call   0x1002e1b3
10012d0e:	pop    ecx
10012d0f:	pop    ecx
10012d10:	push   eax
10012d11:	mov    BYTE PTR [ebp-0x4],0x2
10012d15:	call   0x1000fd2a
10012d1a:	push   0x0
10012d1c:	push   edi
10012d1d:	lea    ecx,[ebp-0x34]
10012d20:	call   0x100012f0
10012d25:	push   0x0
10012d27:	push   edi
10012d28:	lea    ecx,[ebp-0x50]
10012d2b:	mov    BYTE PTR [ebp-0x4],0x0
10012d2f:	call   0x100012f0
10012d34:	mov    eax,DWORD PTR [ebp-0x18]
10012d37:	add    ebx,eax
10012d39:	mov    DWORD PTR [ebp-0x10],ebx
10012d3c:	mov    eax,DWORD PTR [ebp-0x10]
10012d3f:	mov    ecx,DWORD PTR [ebp+0xc]
10012d42:	cmp    eax,DWORD PTR [ecx+0x14]
10012d45:	jb     0x10012ccb
10012d47:	mov    eax,esi
10012d49:	call   0x10059ecd
10012d4e:	ret    
10012d4f:	push   ecx
10012d50:	push   ebx
10012d51:	push   esi
10012d52:	mov    esi,DWORD PTR [esp+0x10]
10012d56:	push   edi
10012d57:	mov    edi,ecx
10012d59:	sub    esi,edi
10012d5b:	sar    esi,0x4
10012d5e:	shl    esi,0x4
10012d61:	mov    ebx,eax
10012d63:	add    esi,ebx
10012d65:	cmp    edi,DWORD PTR [esp+0x14]
10012d69:	je     0x10012d80
10012d6b:	sub    ebx,edi
10012d6d:	lea    ecx,[ebx+edi*1]
10012d70:	mov    eax,edi
10012d72:	call   0x1001045c
10012d77:	add    edi,0x10
10012d7a:	cmp    edi,DWORD PTR [esp+0x14]
10012d7e:	jne    0x10012d6d
10012d80:	pop    edi
10012d81:	mov    eax,esi
10012d83:	pop    esi
10012d84:	pop    ebx
10012d85:	pop    ecx
10012d86:	ret    
10012d87:	push   ebp
10012d88:	mov    ebp,esp
10012d8a:	push   ecx
10012d8b:	push   edi
10012d8c:	xor    eax,eax
10012d8e:	lea    edi,[ebp-0x4]
10012d91:	stos   BYTE PTR es:[edi],al
10012d92:	push   DWORD PTR [ebp-0x4]
10012d95:	push   DWORD PTR [ebp+0xc]
10012d98:	push   DWORD PTR [ebp+0xc]
10012d9b:	push   DWORD PTR [ebp+0x8]
10012d9e:	call   0x10012dab
10012da3:	add    esp,0x10
10012da6:	pop    edi
10012da7:	leave  
10012da8:	ret    0x8
10012dab:	push   0xc
10012dad:	mov    eax,0x10063216
10012db2:	call   0x10059e28
10012db7:	mov    esi,ecx
10012db9:	mov    eax,DWORD PTR [ebp+0xc]
10012dbc:	and    DWORD PTR [ebp-0x4],0x0
10012dc0:	mov    DWORD PTR [ebp-0x14],eax
10012dc3:	cmp    esi,DWORD PTR [ebp+0x8]
10012dc6:	je     0x10012df6
10012dc8:	push   DWORD PTR [ebp+0xc]
10012dcb:	mov    ecx,esi
10012dcd:	call   0x10010436
10012dd2:	add    DWORD PTR [ebp+0xc],0x10
10012dd6:	add    esi,0x10
10012dd9:	jmp    0x10012dc3
10012ddb:	mov    esi,DWORD PTR [ebp-0x14]
10012dde:	jmp    0x10012de8
10012de0:	call   0x10004996
10012de5:	add    esi,0x10
10012de8:	cmp    esi,DWORD PTR [ebp+0xc]
10012deb:	jne    0x10012de0
10012ded:	push   0x0
10012def:	push   0x0
10012df1:	call   0x10047942
10012df6:	mov    eax,DWORD PTR [ebp+0xc]
10012df9:	call   0x10059ecd
10012dfe:	ret    
10012dff:	push   esi
10012e00:	mov    esi,edi
10012e02:	call   0x100040ef
10012e07:	lea    esi,[edi+0x1c]
10012e0a:	call   0x100040ef
10012e0f:	lea    esi,[edi+0x38]
10012e12:	call   0x100040ef
10012e17:	lea    esi,[edi+0x54]
10012e1a:	call   0x100040ef
10012e1f:	lea    esi,[edi+0x70]
10012e22:	call   0x100040ef
10012e27:	mov    eax,edi
10012e29:	pop    esi
10012e2a:	ret    
10012e2b:	push   0x0
10012e2d:	mov    eax,0x10060925
10012e32:	call   0x10059df5
10012e37:	mov    edi,DWORD PTR [ebp+0x8]
10012e3a:	mov    esi,edi
10012e3c:	call   0x100040ef
10012e41:	xor    ebx,ebx
10012e43:	lea    esi,[edi+0x1c]
10012e46:	mov    DWORD PTR [ebp-0x4],ebx
10012e49:	call   0x100040ef
10012e4e:	lea    esi,[edi+0x38]
10012e51:	call   0x100040ef
10012e56:	lea    esi,[edi+0x54]
10012e59:	call   0x100040ef
10012e5e:	lea    esi,[edi+0x70]
10012e61:	call   0x100040ef
10012e66:	push   0xffffffff
10012e68:	push   ebx
10012e69:	push   DWORD PTR [ebp+0xc]
10012e6c:	mov    ecx,edi
10012e6e:	mov    BYTE PTR [ebp-0x4],0x4
10012e72:	call   0x10001241
10012e77:	push   0xffffffff
10012e79:	push   ebx
10012e7a:	push   DWORD PTR [ebp+0x10]
10012e7d:	lea    ecx,[edi+0x1c]
10012e80:	call   0x10001241
10012e85:	push   0xffffffff
10012e87:	push   ebx
10012e88:	push   DWORD PTR [ebp+0x14]
10012e8b:	lea    ecx,[edi+0x38]
10012e8e:	call   0x10001241
10012e93:	push   0xffffffff
10012e95:	push   ebx
10012e96:	push   DWORD PTR [ebp+0x18]
10012e99:	lea    ecx,[edi+0x54]
10012e9c:	call   0x10001241
10012ea1:	push   0xffffffff
10012ea3:	push   ebx
10012ea4:	push   DWORD PTR [ebp+0x1c]
10012ea7:	mov    ecx,esi
10012ea9:	call   0x10001241
10012eae:	mov    eax,edi
10012eb0:	call   0x10059ecd
10012eb5:	ret    0x18
10012eb8:	push   0x94
10012ebd:	mov    eax,0x100608c9
10012ec2:	call   0x10059e5e
10012ec7:	and    DWORD PTR [ebp-0xa0],0x0
10012ece:	push   0xffffffff
10012ed0:	push   DWORD PTR ds:0x10082e34
10012ed6:	mov    edi,ecx
10012ed8:	call   DWORD PTR ds:0x1006707c
10012ede:	test   eax,eax
10012ee0:	jne    0x10012f1c
10012ee2:	lea    eax,[ebp-0x9c]
10012ee8:	push   eax
10012ee9:	mov    ecx,0x10082e38
10012eee:	call   0x10012f29
10012ef3:	and    DWORD PTR [ebp-0x4],0x0
10012ef7:	push   DWORD PTR ds:0x10082e34
10012efd:	call   DWORD PTR ds:0x10067090
10012f03:	push   edi
10012f04:	lea    ecx,[ebp-0x9c]
10012f0a:	call   0x10012f29
10012f0f:	lea    esi,[ebp-0x9c]
10012f15:	call   0x1000bfa0
10012f1a:	jmp    0x10012f21
10012f1c:	call   0x10012dff
10012f21:	mov    eax,edi
10012f23:	call   0x10059ee1
10012f28:	ret    
10012f29:	push   0x0
10012f2b:	mov    eax,0x10060154
10012f30:	call   0x10059df5
10012f35:	mov    edi,ecx
10012f37:	mov    esi,DWORD PTR [ebp+0x8]
10012f3a:	push   edi
10012f3b:	mov    ecx,esi
10012f3d:	call   0x100011c9
10012f42:	and    DWORD PTR [ebp-0x4],0x0
10012f46:	lea    eax,[edi+0x1c]
10012f49:	push   eax
10012f4a:	lea    ecx,[esi+0x1c]
10012f4d:	call   0x100011c9
10012f52:	lea    eax,[edi+0x38]
10012f55:	push   eax
10012f56:	lea    ecx,[esi+0x38]
10012f59:	mov    BYTE PTR [ebp-0x4],0x1
10012f5d:	call   0x100011c9
10012f62:	lea    eax,[edi+0x54]
10012f65:	push   eax
10012f66:	lea    ecx,[esi+0x54]
10012f69:	mov    BYTE PTR [ebp-0x4],0x2
10012f6d:	call   0x100011c9
10012f72:	add    edi,0x70
10012f75:	push   edi
10012f76:	lea    ecx,[esi+0x70]
10012f79:	mov    BYTE PTR [ebp-0x4],0x3
10012f7d:	call   0x100011c9
10012f82:	mov    eax,esi
10012f84:	call   0x10059ecd
10012f89:	ret    0x4
10012f8c:	push   ebx
10012f8d:	push   esi
10012f8e:	push   edi
10012f8f:	push   0xffffffff
10012f91:	xor    ebx,ebx
10012f93:	mov    esi,eax
10012f95:	push   ebx
10012f96:	mov    edi,0x10082e38
10012f9b:	push   esi
10012f9c:	mov    ecx,edi
10012f9e:	call   0x10001241
10012fa3:	push   0xffffffff
10012fa5:	push   ebx
10012fa6:	lea    eax,[esi+0x1c]
10012fa9:	push   eax
10012faa:	mov    ecx,0x10082e54
10012faf:	call   0x10001241
10012fb4:	push   0xffffffff
10012fb6:	push   ebx
10012fb7:	lea    eax,[esi+0x38]
10012fba:	push   eax
10012fbb:	mov    ecx,0x10082e70
10012fc0:	call   0x10001241
10012fc5:	push   0xffffffff
10012fc7:	push   ebx
10012fc8:	lea    eax,[esi+0x54]
10012fcb:	push   eax
10012fcc:	mov    ecx,0x10082e8c
10012fd1:	call   0x10001241
10012fd6:	push   0xffffffff
10012fd8:	push   ebx
10012fd9:	add    esi,0x70
10012fdc:	push   esi
10012fdd:	mov    ecx,0x10082ea8
10012fe2:	call   0x10001241
10012fe7:	mov    eax,edi
10012fe9:	pop    edi
10012fea:	pop    esi
10012feb:	pop    ebx
10012fec:	ret    
10012fed:	push   esi
10012fee:	mov    esi,edi
10012ff0:	call   0x100040ef
10012ff5:	lea    esi,[edi+0x1c]
10012ff8:	call   0x100040ef
10012ffd:	lea    esi,[edi+0x38]
10013000:	call   0x100040ef
10013005:	lea    esi,[edi+0x54]
10013008:	call   0x100040ef
1001300d:	and    DWORD PTR [edi+0x70],0x0
10013011:	lea    esi,[edi+0x88]
10013017:	call   0x100040ef
1001301c:	and    DWORD PTR [edi+0x70],0x0
10013020:	and    DWORD PTR [edi+0x80],0x0
10013027:	and    DWORD PTR [edi+0x84],0x0
1001302e:	mov    eax,edi
10013030:	pop    esi
10013031:	ret    
10013032:	push   0x38
10013034:	mov    eax,0x100631fb
10013039:	call   0x10059df5
1001303e:	push   DWORD PTR [ebp+0xc]
10013041:	lea    esi,[ebp-0x44]
10013044:	call   0x100300d0
10013049:	pop    ecx
1001304a:	lea    ecx,[ebp-0x28]
1001304d:	push   ecx
1001304e:	xor    esi,esi
10013050:	mov    ecx,eax
10013052:	mov    DWORD PTR [ebp-0x4],esi
10013055:	call   0x1002f810
1001305a:	pop    ecx
1001305b:	push   DWORD PTR [ebp+0x10]
1001305e:	mov    BYTE PTR [ebp-0x4],0x1
10013062:	push   eax
10013063:	push   DWORD PTR [ebp+0x8]
10013066:	call   0x10013537
1001306b:	push   esi
1001306c:	push   0x1
1001306e:	lea    ecx,[ebp-0x28]
10013071:	mov    bl,al
10013073:	call   0x100012f0
10013078:	push   esi
10013079:	push   0x1
1001307b:	lea    ecx,[ebp-0x44]
1001307e:	call   0x100012f0
10013083:	mov    al,bl
10013085:	call   0x10059ecd
1001308a:	ret    0xc
1001308d:	push   0x124
10013092:	mov    eax,0x100631c3
10013097:	call   0x10059e5e
1001309c:	mov    eax,DWORD PTR [ebp+0x8]
1001309f:	mov    DWORD PTR [ebp-0x110],eax
100130a5:	mov    eax,DWORD PTR [ebp+0xc]
100130a8:	push   eax
100130a9:	lea    esi,[ebp-0x130]
100130af:	mov    DWORD PTR [ebp-0x114],ecx
100130b5:	call   0x100300d0
100130ba:	pop    ecx
100130bb:	and    DWORD PTR [ebp-0x4],0x0
100130bf:	lea    ecx,[ebp-0x60]
100130c2:	push   ecx
100130c3:	mov    ecx,eax
100130c5:	call   0x1002f810
100130ca:	pop    ecx
100130cb:	push   0x0
100130cd:	push   0x1
100130cf:	mov    ecx,esi
100130d1:	call   0x100012f0
100130d6:	lea    edi,[ebp-0x10c]
100130dc:	call   0x10012fed
100130e1:	mov    eax,edi
100130e3:	push   eax
100130e4:	lea    eax,[ebp-0x60]
100130e7:	push   eax
100130e8:	push   DWORD PTR [ebp-0x110]
100130ee:	mov    BYTE PTR [ebp-0x4],0x3
100130f2:	call   0x10013537
100130f7:	test   al,al
100130f9:	je     0x100131c3
100130ff:	push   0x1006dd18
10013104:	lea    esi,[ebp-0xf0]
1001310a:	call   0x10006825
1001310f:	test   al,al
10013111:	pop    ecx
10013112:	jne    0x10013186
10013114:	mov    eax,esi
10013116:	push   eax
10013117:	lea    ecx,[ebp-0x44]
1001311a:	call   0x100011c9
1001311f:	mov    eax,DWORD PTR [ebx]
10013121:	mov    DWORD PTR [ebp-0x24],eax
10013124:	mov    eax,DWORD PTR [ebx+0x4]
10013127:	mov    DWORD PTR [ebp-0x20],eax
1001312a:	mov    eax,DWORD PTR [ebp-0x114]
10013130:	mov    ecx,DWORD PTR [eax]
10013132:	mov    eax,DWORD PTR [eax+0x4]
10013135:	mov    DWORD PTR [ebp-0x1c],ecx
10013138:	mov    DWORD PTR [ebp-0x18],eax
1001313b:	sub    esp,0x30
1001313e:	mov    esi,esp
10013140:	lea    eax,[ebp-0x44]
10013143:	mov    DWORD PTR [ebp-0x114],esp
10013149:	push   eax
1001314a:	mov    ecx,esi
1001314c:	mov    BYTE PTR [ebp-0x4],0x4
10013150:	call   0x100011c9
10013155:	mov    eax,DWORD PTR [ebp-0x24]
10013158:	mov    ecx,DWORD PTR [ebp-0x110]
1001315e:	mov    DWORD PTR [esi+0x20],eax
10013161:	mov    eax,DWORD PTR [ebp-0x20]
10013164:	mov    DWORD PTR [esi+0x24],eax
10013167:	mov    eax,DWORD PTR [ebp-0x1c]
1001316a:	mov    DWORD PTR [esi+0x28],eax
1001316d:	mov    eax,DWORD PTR [ebp-0x18]
10013170:	mov    DWORD PTR [esi+0x2c],eax
10013173:	call   0x100145d2
10013178:	push   0x0
1001317a:	push   0x1
1001317c:	lea    ecx,[ebp-0x44]
1001317f:	call   0x100012f0
10013184:	jmp    0x100131c3
10013186:	mov    eax,DWORD PTR [ebx]
10013188:	mov    DWORD PTR [ebp-0x94],eax
1001318e:	mov    eax,DWORD PTR [ebx+0x4]
10013191:	mov    DWORD PTR [ebp-0x90],eax
10013197:	mov    eax,DWORD PTR [ebp-0x114]
1001319d:	mov    ecx,DWORD PTR [eax]
1001319f:	mov    eax,DWORD PTR [eax+0x4]
100131a2:	mov    DWORD PTR [ebp-0x88],eax
100131a8:	lea    eax,[ebp-0x10c]
100131ae:	mov    DWORD PTR [ebp-0x8c],ecx
100131b4:	mov    ecx,DWORD PTR [ebp-0x110]
100131ba:	push   eax
100131bb:	lea    edx,[ebp-0x60]
100131be:	call   0x10013298
100131c3:	lea    esi,[ebp-0x10c]
100131c9:	call   0x10003432
100131ce:	push   0x0
100131d0:	push   0x1
100131d2:	lea    ecx,[ebp-0x60]
100131d5:	call   0x100012f0
100131da:	call   0x10059ee1
100131df:	ret    0x8
100131e2:	push   0x0
100131e4:	push   0x1
100131e6:	call   0x100012f0
100131eb:	ret    
100131ec:	push   0x0
100131ee:	mov    eax,0x10062474
100131f3:	call   0x10059df5
100131f8:	call   0x100144e6
100131fd:	mov    ds:0x10082ec8,eax
10013202:	mov    BYTE PTR [eax+0xe1],0x1
10013209:	mov    eax,ds:0x10082ec8
1001320e:	mov    DWORD PTR [eax+0x4],eax
10013211:	mov    eax,ds:0x10082ec8
10013216:	mov    DWORD PTR [eax],eax
10013218:	mov    eax,ds:0x10082ec8
1001321d:	xor    edi,edi
1001321f:	mov    DWORD PTR [eax+0x8],eax
10013222:	mov    DWORD PTR ds:0x10082ecc,edi
10013228:	mov    esi,0x10082ed0
1001322d:	mov    DWORD PTR [esp+0x18],edi
10013231:	call   0x1001428e
10013236:	push   edi
10013237:	push   edi
10013238:	push   edi
10013239:	mov    DWORD PTR ds:0x10082ee0,0x14
10013243:	mov    DWORD PTR ds:0x10082ee4,0x96
1001324d:	call   DWORD PTR ds:0x10067080
10013253:	mov    ds:0x10082edc,eax
10013258:	mov    eax,0x10082ec4
1001325d:	call   0x10059ecd
10013262:	ret    
10013263:	push   0x0
10013265:	mov    eax,0x10062474
1001326a:	call   0x10059df5
1001326f:	and    DWORD PTR [ebp-0x4],0x0
10013273:	push   DWORD PTR ds:0x10082edc
10013279:	call   DWORD PTR ds:0x10067078
1001327f:	mov    eax,0x10082ed0
10013284:	call   0x10001496
10013289:	or     DWORD PTR [ebp-0x4],0xffffffff
1001328d:	call   0x1001416f
10013292:	call   0x10059ecd
10013297:	ret    
10013298:	push   0x288
1001329d:	mov    eax,0x10062447
100132a2:	call   0x10059e94
100132a7:	mov    eax,DWORD PTR [ebp+0x8]
100132aa:	mov    edi,ecx
100132ac:	push   0x1f4
100132b1:	push   DWORD PTR [edi+0x18]
100132b4:	mov    esi,edx
100132b6:	mov    DWORD PTR [ebp-0xf0],edi
100132bc:	mov    DWORD PTR [ebp-0xdc],esi
100132c2:	mov    DWORD PTR [ebp-0xe0],eax
100132c8:	call   DWORD PTR ds:0x1006707c
100132ce:	test   eax,eax
100132d0:	jne    0x100133d0
100132d6:	and    DWORD PTR [ebp-0x4],eax
100132d9:	push   edi
100132da:	call   0x10013870
100132df:	push   esi
100132e0:	lea    ebx,[ebp-0xd8]
100132e6:	mov    esi,edi
100132e8:	call   0x10013b0c
100132ed:	cmp    DWORD PTR [ebp-0xd8],0x0
100132f4:	mov    ebx,DWORD PTR [edi+0x4]
100132f7:	je     0x10013301
100132f9:	cmp    DWORD PTR [ebp-0xd8],edi
100132ff:	je     0x10013306
10013301:	call   0x10043605
10013306:	mov    esi,DWORD PTR [ebp-0xd4]
1001330c:	cmp    esi,ebx
1001330e:	je     0x100133d8
10013314:	and    DWORD PTR [ebp-0xec],0x0
1001331b:	lea    ebx,[edi+0xc]
1001331e:	mov    eax,DWORD PTR [ebx+0x4]
10013321:	mov    DWORD PTR [ebp-0xe4],eax
10013327:	lea    eax,[ebp-0xec]
1001332d:	mov    DWORD PTR [ebp-0xe8],ebx
10013333:	call   0x10013b64
10013338:	mov    eax,DWORD PTR [eax]
1001333a:	mov    edi,DWORD PTR [ebp-0xd8]
10013340:	inc    eax
10013341:	test   edi,edi
10013343:	mov    DWORD PTR [ebp-0xd0],eax
10013349:	jne    0x10013350
1001334b:	call   0x10043605
10013350:	cmp    esi,DWORD PTR [edi+0x4]
10013353:	jne    0x1001335a
10013355:	call   0x10043605
1001335a:	lea    edx,[esi+0xd8]
10013360:	mov    eax,ebx
10013362:	mov    DWORD PTR [ebp-0xdc],edx
10013368:	call   0x100137c6
1001336d:	lea    eax,[ebp-0xd0]
10013373:	push   eax
10013374:	lea    edi,[ebp-0xec]
1001337a:	call   0x1001370d
1001337f:	mov    eax,DWORD PTR [ebp-0xd8]
10013385:	cmp    esi,DWORD PTR [eax+0x4]
10013388:	jne    0x1001338f
1001338a:	call   0x10043605
1001338f:	mov    eax,DWORD PTR [ebp-0xe0]
10013395:	add    esi,0x30
10013398:	call   0x100135e2
1001339d:	mov    eax,DWORD PTR [ebp-0xd4]
100133a3:	mov    ecx,DWORD PTR [ebp-0xd8]
100133a9:	cmp    eax,DWORD PTR [ecx+0x4]
100133ac:	jne    0x100133b3
100133ae:	call   0x10043605
100133b3:	mov    eax,DWORD PTR [ebp-0xd0]
100133b9:	mov    ecx,DWORD PTR [ebp-0xdc]
100133bf:	mov    DWORD PTR [ecx],eax
100133c1:	mov    eax,DWORD PTR [ebp-0xf0]
100133c7:	push   DWORD PTR [eax+0x18]
100133ca:	call   DWORD PTR ds:0x10067090
100133d0:	call   0x10059ef0
100133d5:	ret    0x4
100133d8:	lea    edi,[ebp-0xcc]
100133de:	call   0x10012fed
100133e3:	mov    ebx,DWORD PTR [ebp-0xf0]
100133e9:	mov    BYTE PTR [ebp-0x4],0x1
100133ed:	cmp    DWORD PTR [ebx+0x14],0x0
100133f1:	je     0x1001341c
100133f3:	and    DWORD PTR [ebp-0xec],0x0
100133fa:	lea    eax,[ebx+0xc]
100133fd:	mov    ecx,DWORD PTR [eax+0x4]
10013400:	mov    DWORD PTR [ebp-0xe8],eax
10013406:	lea    eax,[ebp-0xec]
1001340c:	mov    DWORD PTR [ebp-0xe4],ecx
10013412:	call   0x10013b64
10013417:	mov    eax,DWORD PTR [eax]
10013419:	inc    eax
1001341a:	jmp    0x1001341e
1001341c:	xor    eax,eax
1001341e:	mov    DWORD PTR [ebp-0xd0],eax
10013424:	mov    DWORD PTR [ebp-0x24],eax
10013427:	mov    eax,DWORD PTR [ebp-0xe0]
1001342d:	lea    esi,[ebp-0xcc]
10013433:	call   0x100135e2
10013438:	sub    esp,0xb0
1001343e:	mov    esi,esp
10013440:	mov    DWORD PTR [ebp-0xe0],esp
10013446:	push   esi
10013447:	lea    ecx,[ebp-0xcc]
1001344d:	call   0x1001367a
10013452:	mov    eax,DWORD PTR [ebp-0x24]
10013455:	mov    DWORD PTR [esi+0xa8],eax
1001345b:	sub    esp,0x1c
1001345e:	mov    BYTE PTR [ebp-0x4],0x2
10013462:	mov    ecx,esp
10013464:	mov    DWORD PTR [ebp-0xd4],esp
1001346a:	push   DWORD PTR [ebp-0xdc]
10013470:	call   0x100011c9
10013475:	lea    edi,[ebp-0x294]
1001347b:	mov    BYTE PTR [ebp-0x4],0x1
1001347f:	call   0x100146dd
10013484:	add    esp,0xcc
1001348a:	mov    esi,eax
1001348c:	push   esi
1001348d:	lea    ecx,[ebp-0x1c4]
10013493:	mov    BYTE PTR [ebp-0x4],0x3
10013497:	call   0x100011c9
1001349c:	lea    eax,[ebp-0x1a4]
100134a2:	add    esi,0x20
100134a5:	push   eax
100134a6:	mov    ecx,esi
100134a8:	mov    BYTE PTR [ebp-0x4],0x4
100134ac:	call   0x1001367a
100134b1:	mov    eax,DWORD PTR [esi+0xa8]
100134b7:	mov    DWORD PTR [ebp-0xfc],eax
100134bd:	lea    eax,[ebp-0x1c4]
100134c3:	push   eax
100134c4:	push   ebx
100134c5:	lea    edi,[ebp-0xec]
100134cb:	mov    BYTE PTR [ebp-0x4],0x5
100134cf:	call   0x100139fa
100134d4:	lea    esi,[ebp-0x1a4]
100134da:	call   0x10003432
100134df:	push   0x0
100134e1:	push   0x1
100134e3:	lea    ecx,[ebp-0x1c4]
100134e9:	call   0x100012f0
100134ee:	lea    esi,[ebp-0x274]
100134f4:	mov    BYTE PTR [ebp-0x4],0x1
100134f8:	call   0x10003432
100134fd:	push   0x0
100134ff:	push   0x1
10013501:	lea    ecx,[ebp-0x294]
10013507:	call   0x100012f0
1001350c:	lea    eax,[ebp-0xd0]
10013512:	push   eax
10013513:	add    ebx,0xc
10013516:	lea    edi,[ebp-0xec]
1001351c:	call   0x1001370d
10013521:	lea    esi,[ebp-0xcc]
10013527:	call   0x10003432
1001352c:	jmp    0x100133c1
10013531:	mov    eax,0x100133c1
10013536:	ret    
10013537:	push   0x10
10013539:	mov    eax,0x10063182
1001353e:	call   0x10059e28
10013543:	mov    edi,DWORD PTR [ebp+0x8]
10013546:	push   0x1f4
1001354b:	push   DWORD PTR [edi+0x18]
1001354e:	mov    BYTE PTR [ebp-0x11],0x0
10013552:	call   DWORD PTR ds:0x1006707c
10013558:	test   eax,eax
1001355a:	je     0x10013560
1001355c:	xor    al,al
1001355e:	jmp    0x100135d0
10013560:	push   DWORD PTR [ebp+0xc]
10013563:	and    DWORD PTR [ebp-0x4],0x0
10013567:	lea    ebx,[ebp-0x1c]
1001356a:	mov    esi,edi
1001356c:	call   0x10013b0c
10013571:	mov    ebx,DWORD PTR [ebp-0x1c]
10013574:	test   ebx,ebx
10013576:	mov    esi,DWORD PTR [edi+0x4]
10013579:	je     0x1001357f
1001357b:	cmp    ebx,edi
1001357d:	je     0x10013584
1001357f:	call   0x10043605
10013584:	cmp    DWORD PTR [ebp-0x18],esi
10013587:	je     0x100135c4
10013589:	test   ebx,ebx
1001358b:	jne    0x10013592
1001358d:	call   0x10043605
10013592:	mov    eax,DWORD PTR [ebp-0x18]
10013595:	cmp    eax,DWORD PTR [ebx+0x4]
10013598:	jne    0x1001359f
1001359a:	call   0x10043605
1001359f:	mov    eax,DWORD PTR [ebp-0x18]
100135a2:	mov    esi,DWORD PTR [ebp+0x10]
100135a5:	add    eax,0x30
100135a8:	call   0x100135e2
100135ad:	mov    BYTE PTR [ebp-0x11],0x1
100135b1:	jmp    0x100135c4
100135b3:	push   0x4
100135b5:	call   0x10038b80
100135ba:	pop    ecx
100135bb:	mov    eax,0x100135c1
100135c0:	ret    
100135c1:	mov    edi,DWORD PTR [ebp+0x8]
100135c4:	push   DWORD PTR [edi+0x18]
100135c7:	call   DWORD PTR ds:0x10067090
100135cd:	mov    al,BYTE PTR [ebp-0x11]
100135d0:	call   0x10059ecd
100135d5:	ret    0xc
100135d8:	jmp    0x1001416f
100135dd:	jmp    0x10003432
100135e2:	push   ebx
100135e3:	push   edi
100135e4:	push   0xffffffff
100135e6:	xor    ebx,ebx
100135e8:	mov    edi,eax
100135ea:	push   ebx
100135eb:	push   edi
100135ec:	mov    ecx,esi
100135ee:	call   0x10001241
100135f3:	push   0xffffffff
100135f5:	push   ebx
100135f6:	lea    eax,[edi+0x1c]
100135f9:	push   eax
100135fa:	lea    ecx,[esi+0x1c]
100135fd:	call   0x10001241
10013602:	push   0xffffffff
10013604:	push   ebx
10013605:	lea    eax,[edi+0x38]
10013608:	push   eax
10013609:	lea    ecx,[esi+0x38]
1001360c:	call   0x10001241
10013611:	push   0xffffffff
10013613:	push   ebx
10013614:	lea    eax,[edi+0x54]
10013617:	push   eax
10013618:	lea    ecx,[esi+0x54]
1001361b:	call   0x10001241
10013620:	mov    eax,DWORD PTR [edi+0x70]
10013623:	mov    DWORD PTR [esi+0x70],eax
10013626:	mov    eax,DWORD PTR [edi+0x78]
10013629:	mov    DWORD PTR [esi+0x78],eax
1001362c:	mov    eax,DWORD PTR [edi+0x7c]
1001362f:	mov    DWORD PTR [esi+0x7c],eax
10013632:	mov    eax,DWORD PTR [edi+0x80]
10013638:	push   0xffffffff
1001363a:	mov    DWORD PTR [esi+0x80],eax
10013640:	mov    eax,DWORD PTR [edi+0x84]
10013646:	push   ebx
10013647:	add    edi,0x88
1001364d:	push   edi
1001364e:	lea    ecx,[esi+0x88]
10013654:	mov    DWORD PTR [esi+0x84],eax
1001365a:	call   0x10001241
1001365f:	pop    edi
10013660:	mov    eax,esi
10013662:	pop    ebx
10013663:	ret    
10013664:	push   esi
10013665:	lea    esi,[edi+0x20]
10013668:	call   0x10003432
1001366d:	push   0x0
1001366f:	push   0x1
10013671:	mov    ecx,edi
10013673:	call   0x100012f0
10013678:	pop    esi
10013679:	ret    
1001367a:	push   0x0
1001367c:	mov    eax,0x10060154
10013681:	call   0x10059df5
10013686:	mov    edi,ecx
10013688:	mov    esi,DWORD PTR [ebp+0x8]
1001368b:	push   edi
1001368c:	mov    ecx,esi
1001368e:	call   0x100011c9
10013693:	and    DWORD PTR [ebp-0x4],0x0
10013697:	lea    eax,[edi+0x1c]
1001369a:	push   eax
1001369b:	lea    ecx,[esi+0x1c]
1001369e:	call   0x100011c9
100136a3:	lea    eax,[edi+0x38]
100136a6:	push   eax
100136a7:	lea    ecx,[esi+0x38]
100136aa:	mov    BYTE PTR [ebp-0x4],0x1
100136ae:	call   0x100011c9
100136b3:	lea    eax,[edi+0x54]
100136b6:	push   eax
100136b7:	lea    ecx,[esi+0x54]
100136ba:	mov    BYTE PTR [ebp-0x4],0x2
100136be:	call   0x100011c9
100136c3:	mov    BYTE PTR [ebp-0x4],0x3
100136c7:	mov    eax,DWORD PTR [edi+0x70]
100136ca:	mov    DWORD PTR [esi+0x70],eax
100136cd:	mov    eax,DWORD PTR [edi+0x78]
100136d0:	mov    DWORD PTR [esi+0x78],eax
100136d3:	mov    eax,DWORD PTR [edi+0x7c]
100136d6:	mov    DWORD PTR [esi+0x7c],eax
100136d9:	mov    eax,DWORD PTR [edi+0x80]
100136df:	mov    DWORD PTR [esi+0x80],eax
100136e5:	mov    eax,DWORD PTR [edi+0x84]
100136eb:	add    edi,0x88
100136f1:	push   edi
100136f2:	lea    ecx,[esi+0x88]
100136f8:	mov    DWORD PTR [esi+0x84],eax
100136fe:	call   0x100011c9
10013703:	mov    eax,esi
10013705:	call   0x10059ecd
1001370a:	ret    0x4
1001370d:	push   ebp
1001370e:	mov    ebp,esp
10013710:	and    esp,0xfffffff8
10013713:	sub    esp,0x14
10013716:	mov    ecx,DWORD PTR [ebx+0x4]
10013719:	mov    eax,DWORD PTR [ecx+0x4]
1001371c:	cmp    BYTE PTR [eax+0x11],0x0
10013720:	push   esi
10013721:	mov    DWORD PTR [esp+0xc],ecx
10013725:	mov    BYTE PTR [esp+0x8],0x1
1001372a:	jne    0x10013751
1001372c:	mov    ecx,DWORD PTR [ebp+0x8]
1001372f:	mov    esi,DWORD PTR [ecx]
10013731:	cmp    esi,DWORD PTR [eax+0xc]
10013734:	mov    DWORD PTR [esp+0xc],eax
10013738:	setb   BYTE PTR [esp+0x8]
1001373d:	cmp    BYTE PTR [esp+0x8],0x0
10013742:	je     0x10013748
10013744:	mov    eax,DWORD PTR [eax]
10013746:	jmp    0x1001374b
10013748:	mov    eax,DWORD PTR [eax+0x8]
1001374b:	cmp    BYTE PTR [eax+0x11],0x0
1001374f:	je     0x10013731
10013751:	cmp    BYTE PTR [esp+0x8],0x0
10013756:	mov    eax,DWORD PTR [esp+0xc]
1001375a:	mov    DWORD PTR [esp+0x14],eax
1001375e:	mov    DWORD PTR [esp+0x10],ebx
10013762:	je     0x10013796
10013764:	mov    ecx,DWORD PTR [ebx+0x4]
10013767:	cmp    eax,DWORD PTR [ecx]
10013769:	jne    0x10013789
1001376b:	push   DWORD PTR [ebp+0x8]
1001376e:	lea    ecx,[esp+0x14]
10013772:	push   0x1
10013774:	push   ecx
10013775:	mov    ecx,eax
10013777:	mov    esi,ebx
10013779:	call   0x10013b88
1001377e:	mov    ecx,DWORD PTR [eax]
10013780:	mov    eax,DWORD PTR [eax+0x4]
10013783:	mov    BYTE PTR [edi+0x8],0x1
10013787:	jmp    0x100137b8
10013789:	lea    esi,[esp+0x10]
1001378d:	call   0x1001420d
10013792:	mov    eax,DWORD PTR [esp+0x14]
10013796:	mov    edx,DWORD PTR [eax+0xc]
10013799:	mov    ecx,DWORD PTR [ebp+0x8]
1001379c:	cmp    edx,DWORD PTR [ecx]
1001379e:	jae    0x100137b0
100137a0:	push   ecx
100137a1:	push   DWORD PTR [esp+0xc]
100137a5:	mov    ecx,DWORD PTR [esp+0x14]
100137a9:	lea    eax,[esp+0x18]
100137ad:	push   eax
100137ae:	jmp    0x10013777
100137b0:	mov    ecx,DWORD PTR [esp+0x10]
100137b4:	mov    BYTE PTR [edi+0x8],0x0
100137b8:	mov    DWORD PTR [edi+0x4],eax
100137bb:	mov    DWORD PTR [edi],ecx
100137bd:	mov    eax,edi
100137bf:	pop    esi
100137c0:	mov    esp,ebp
100137c2:	pop    ebp
100137c3:	ret    0x4
100137c6:	push   ebp
100137c7:	mov    ebp,esp
100137c9:	and    esp,0xfffffff8
100137cc:	sub    esp,0x14
100137cf:	push   ebx
100137d0:	push   esi
100137d1:	push   edi
100137d2:	mov    edi,eax
100137d4:	mov    ecx,DWORD PTR [edi+0x4]
100137d7:	mov    eax,DWORD PTR [ecx+0x4]
100137da:	cmp    BYTE PTR [eax+0x11],0x0
100137de:	mov    DWORD PTR [esp+0x14],ecx
100137e2:	jne    0x100137fc
100137e4:	mov    ecx,DWORD PTR [edx]
100137e6:	cmp    ecx,DWORD PTR [eax+0xc]
100137e9:	jae    0x100137f3
100137eb:	mov    DWORD PTR [esp+0x14],eax
100137ef:	mov    eax,DWORD PTR [eax]
100137f1:	jmp    0x100137f6
100137f3:	mov    eax,DWORD PTR [eax+0x8]
100137f6:	cmp    BYTE PTR [eax+0x11],0x0
100137fa:	je     0x100137e6
100137fc:	mov    ecx,DWORD PTR [edi+0x4]
100137ff:	mov    eax,DWORD PTR [ecx+0x4]
10013802:	cmp    BYTE PTR [eax+0x11],0x0
10013806:	mov    ebx,ecx
10013808:	jne    0x10013820
1001380a:	mov    ecx,DWORD PTR [edx]
1001380c:	cmp    DWORD PTR [eax+0xc],ecx
1001380f:	jae    0x10013816
10013811:	mov    eax,DWORD PTR [eax+0x8]
10013814:	jmp    0x1001381a
10013816:	mov    ebx,eax
10013818:	mov    eax,DWORD PTR [eax]
1001381a:	cmp    BYTE PTR [eax+0x11],0x0
1001381e:	je     0x1001380c
10013820:	and    DWORD PTR [esp+0x10],0x0
10013825:	mov    DWORD PTR [esp+0x18],edi
10013829:	mov    DWORD PTR [esp+0x1c],ebx
1001382d:	cmp    DWORD PTR [esp+0x18],0x0
10013832:	je     0x1001383a
10013834:	cmp    DWORD PTR [esp+0x18],edi
10013838:	je     0x1001383f
1001383a:	call   0x10043605
1001383f:	mov    eax,DWORD PTR [esp+0x14]
10013843:	cmp    DWORD PTR [esp+0x1c],eax
10013847:	je     0x10013858
10013849:	inc    DWORD PTR [esp+0x10]
1001384d:	lea    esi,[esp+0x18]
10013851:	call   0x10001e71
10013856:	jmp    0x1001382d
10013858:	push   eax
10013859:	push   edi
1001385a:	push   ebx
1001385b:	push   edi
1001385c:	lea    ebx,[esp+0x28]
10013860:	call   0x10001616
10013865:	mov    eax,DWORD PTR [esp+0x10]
10013869:	pop    edi
1001386a:	pop    esi
1001386b:	pop    ebx
1001386c:	mov    esp,ebp
1001386e:	pop    ebp
1001386f:	ret    
10013870:	push   ebp
10013871:	mov    ebp,esp
10013873:	and    esp,0xfffffff8
10013876:	push   0xffffffff
10013878:	push   0x100623f5
1001387d:	mov    eax,fs:0x0
10013883:	push   eax
10013884:	sub    esp,0x40
10013887:	push   ebx
10013888:	push   esi
10013889:	push   edi
1001388a:	mov    eax,ds:0x100801ac
1001388f:	xor    eax,esp
10013891:	push   eax
10013892:	lea    eax,[esp+0x50]
10013896:	mov    fs:0x0,eax
1001389c:	mov    edi,DWORD PTR [ebp+0x8]
1001389f:	mov    ecx,DWORD PTR [edi+0x1c]
100138a2:	mov    edx,DWORD PTR [edi+0x20]
100138a5:	mov    eax,DWORD PTR [edi+0x8]
100138a8:	add    edx,ecx
100138aa:	cmp    eax,edx
100138ac:	jbe    0x100139e5
100138b2:	and    DWORD PTR [esp+0x14],0x0
100138b7:	test   ecx,ecx
100138b9:	lea    ebx,[edi+0xc]
100138bc:	mov    eax,DWORD PTR [ebx+0x4]
100138bf:	mov    eax,DWORD PTR [eax]
100138c1:	mov    DWORD PTR [esp+0x18],ebx
100138c5:	mov    DWORD PTR [esp+0x1c],ebx
100138c9:	mov    DWORD PTR [esp+0x20],eax
100138cd:	je     0x100138e5
100138cf:	lea    esi,[esp+0x1c]
100138d3:	call   0x10001e71
100138d8:	inc    DWORD PTR [esp+0x14]
100138dc:	mov    eax,DWORD PTR [esp+0x14]
100138e0:	cmp    eax,DWORD PTR [edi+0x1c]
100138e3:	jne    0x100138cf
100138e5:	lea    esi,[esp+0x1c]
100138e9:	call   0x1001426e
100138ee:	mov    eax,DWORD PTR [eax]
100138f0:	mov    DWORD PTR [esp+0x14],eax
100138f4:	call   0x100144bc
100138f9:	mov    DWORD PTR [esp+0x38],eax
100138fd:	mov    BYTE PTR [eax+0x11],0x1
10013901:	mov    eax,DWORD PTR [esp+0x38]
10013905:	mov    DWORD PTR [eax+0x4],eax
10013908:	mov    eax,DWORD PTR [esp+0x38]
1001390c:	mov    DWORD PTR [eax],eax
1001390e:	mov    eax,DWORD PTR [esp+0x38]
10013912:	mov    DWORD PTR [eax+0x8],eax
10013915:	and    DWORD PTR [esp+0x3c],0x0
1001391a:	and    DWORD PTR [esp+0x58],0x0
1001391f:	mov    eax,DWORD PTR [edi+0x4]
10013922:	mov    esi,DWORD PTR [eax]
10013924:	mov    DWORD PTR [esp+0x1c],edi
10013928:	mov    DWORD PTR [esp+0x20],esi
1001392c:	cmp    DWORD PTR [esp+0x1c],0x0
10013931:	mov    eax,DWORD PTR [edi+0x4]
10013934:	mov    DWORD PTR [esp+0x28],eax
10013938:	je     0x10013940
1001393a:	cmp    DWORD PTR [esp+0x1c],edi
1001393e:	je     0x10013945
10013940:	call   0x10043605
10013945:	cmp    esi,DWORD PTR [esp+0x28]
10013949:	je     0x100139bb
1001394b:	cmp    DWORD PTR [esp+0x1c],0x0
10013950:	jne    0x10013957
10013952:	call   0x10043605
10013957:	mov    eax,DWORD PTR [esp+0x1c]
1001395b:	cmp    esi,DWORD PTR [eax+0x4]
1001395e:	jne    0x10013965
10013960:	call   0x10043605
10013965:	lea    ecx,[esi+0xd8]
1001396b:	mov    eax,DWORD PTR [ecx]
1001396d:	cmp    eax,DWORD PTR [esp+0x14]
10013971:	jae    0x1001398e
10013973:	push   esi
10013974:	push   DWORD PTR [esp+0x20]
10013978:	lea    eax,[esp+0x34]
1001397c:	push   eax
1001397d:	push   edi
1001397e:	call   0x10013cd5
10013983:	mov    ecx,DWORD PTR [eax]
10013985:	mov    esi,DWORD PTR [eax+0x4]
10013988:	mov    DWORD PTR [esp+0x1c],ecx
1001398c:	jmp    0x10013928
1001398e:	sub    eax,DWORD PTR [esp+0x14]
10013992:	push   ecx
10013993:	lea    edi,[esp+0x44]
10013997:	lea    ebx,[esp+0x38]
1001399b:	mov    DWORD PTR [ecx],eax
1001399d:	call   0x1001370d
100139a2:	lea    esi,[esp+0x1c]
100139a6:	call   0x100141b4
100139ab:	mov    esi,DWORD PTR [esp+0x20]
100139af:	mov    ebx,DWORD PTR [esp+0x18]
100139b3:	mov    edi,DWORD PTR [ebp+0x8]
100139b6:	jmp    0x1001392c
100139bb:	mov    eax,DWORD PTR [ebx+0x4]
100139be:	mov    ecx,DWORD PTR [esp+0x38]
100139c2:	mov    DWORD PTR [ebx+0x4],ecx
100139c5:	mov    ecx,DWORD PTR [esp+0x3c]
100139c9:	mov    DWORD PTR [esp+0x38],eax
100139cd:	mov    eax,DWORD PTR [ebx+0x8]
100139d0:	or     DWORD PTR [esp+0x58],0xffffffff
100139d5:	mov    DWORD PTR [esp+0x3c],eax
100139d9:	lea    eax,[esp+0x34]
100139dd:	mov    DWORD PTR [ebx+0x8],ecx
100139e0:	call   0x10001496
100139e5:	mov    ecx,DWORD PTR [esp+0x50]
100139e9:	mov    DWORD PTR fs:0x0,ecx
100139f0:	pop    ecx
100139f1:	pop    edi
100139f2:	pop    esi
100139f3:	pop    ebx
100139f4:	mov    esp,ebp
100139f6:	pop    ebp
100139f7:	ret    0x4
100139fa:	push   ebp
100139fb:	mov    ebp,esp
100139fd:	and    esp,0xfffffff8
10013a00:	push   ecx
10013a01:	push   ecx
10013a02:	mov    edx,DWORD PTR [ebp+0x8]
10013a05:	mov    eax,DWORD PTR [edx+0x4]
10013a08:	push   ebx
10013a09:	push   esi
10013a0a:	mov    esi,DWORD PTR [eax+0x4]
10013a0d:	cmp    BYTE PTR [esi+0xe1],0x0
10013a14:	mov    ebx,eax
10013a16:	mov    al,0x1
10013a18:	mov    BYTE PTR [esp+0x8],al
10013a1c:	jne    0x10013a46
10013a1e:	mov    ecx,DWORD PTR [ebp+0xc]
10013a21:	lea    eax,[esi+0x10]
10013a24:	mov    ebx,esi
10013a26:	call   0x10007983
10013a2b:	test   al,al
10013a2d:	mov    BYTE PTR [esp+0x8],al
10013a31:	je     0x10013a37
10013a33:	mov    esi,DWORD PTR [esi]
10013a35:	jmp    0x10013a3a
10013a37:	mov    esi,DWORD PTR [esi+0x8]
10013a3a:	cmp    BYTE PTR [esi+0xe1],0x0
10013a41:	je     0x10013a1e
10013a43:	mov    edx,DWORD PTR [ebp+0x8]
10013a46:	test   al,al
10013a48:	mov    esi,ebx
10013a4a:	je     0x10013ad8
10013a50:	mov    eax,DWORD PTR [edx+0x4]
10013a53:	cmp    ebx,DWORD PTR [eax]
10013a55:	jne    0x10013a7d
10013a57:	push   DWORD PTR [ebp+0xc]
10013a5a:	mov    esi,edx
10013a5c:	push   0x1
10013a5e:	lea    eax,[esp+0x10]
10013a62:	mov    ecx,ebx
10013a64:	push   eax
10013a65:	call   0x10013fff
10013a6a:	mov    ecx,DWORD PTR [eax]
10013a6c:	mov    eax,DWORD PTR [eax+0x4]
10013a6f:	mov    DWORD PTR [edi],ecx
10013a71:	mov    DWORD PTR [edi+0x4],eax
10013a74:	mov    BYTE PTR [edi+0x8],0x1
10013a78:	jmp    0x10013b02
10013a7d:	cmp    BYTE PTR [ebx+0xe1],0x0
10013a84:	je     0x10013a94
10013a86:	mov    esi,DWORD PTR [ebx+0x8]
10013a89:	cmp    BYTE PTR [esi+0xe1],0x0
10013a90:	je     0x10013ad8
10013a92:	jmp    0x10013acf
10013a94:	mov    eax,DWORD PTR [ebx]
10013a96:	cmp    BYTE PTR [eax+0xe1],0x0
10013a9d:	jne    0x10013aaf
10013a9f:	mov    esi,eax
10013aa1:	mov    eax,DWORD PTR [esi+0x8]
10013aa4:	cmp    BYTE PTR [eax+0xe1],0x0
10013aab:	je     0x10013a9f
10013aad:	jmp    0x10013ad8
10013aaf:	mov    eax,DWORD PTR [ebx+0x4]
10013ab2:	jmp    0x10013abd
10013ab4:	cmp    esi,DWORD PTR [eax]
10013ab6:	jne    0x10013ac6
10013ab8:	mov    esi,eax
10013aba:	mov    eax,DWORD PTR [eax+0x4]
10013abd:	cmp    BYTE PTR [eax+0xe1],0x0
10013ac4:	je     0x10013ab4
10013ac6:	cmp    BYTE PTR [esi+0xe1],0x0
10013acd:	je     0x10013ad6
10013acf:	call   0x10043605
10013ad4:	jmp    0x10013ad8
10013ad6:	mov    esi,eax
10013ad8:	mov    eax,DWORD PTR [ebp+0xc]
10013adb:	lea    ecx,[esi+0x10]
10013ade:	call   0x10007983
10013ae3:	test   al,al
10013ae5:	je     0x10013af6
10013ae7:	push   DWORD PTR [ebp+0xc]
10013aea:	mov    esi,DWORD PTR [ebp+0x8]
10013aed:	push   DWORD PTR [esp+0xc]
10013af1:	jmp    0x10013a5e
10013af6:	mov    eax,DWORD PTR [ebp+0x8]
10013af9:	mov    DWORD PTR [edi],eax
10013afb:	mov    DWORD PTR [edi+0x4],esi
10013afe:	mov    BYTE PTR [edi+0x8],0x0
10013b02:	pop    esi
10013b03:	mov    eax,edi
10013b05:	pop    ebx
10013b06:	mov    esp,ebp
10013b08:	pop    ebp
10013b09:	ret    0x8
10013b0c:	push   ebp
10013b0d:	mov    ebp,esp
10013b0f:	sub    esp,0x18
10013b12:	push   edi
10013b13:	push   DWORD PTR [ebp+0x8]
10013b16:	mov    eax,esi
10013b18:	call   0x100143aa
10013b1d:	test   esi,esi
10013b1f:	mov    edi,eax
10013b21:	mov    DWORD PTR [ebp-0x8],edi
10013b24:	jne    0x10013b2b
10013b26:	call   0x10043605
10013b2b:	cmp    edi,DWORD PTR [esi+0x4]
10013b2e:	mov    DWORD PTR [ebp-0xc],esi
10013b31:	je     0x10013b47
10013b33:	mov    ecx,DWORD PTR [ebp+0x8]
10013b36:	lea    eax,[edi+0x10]
10013b39:	call   0x10007983
10013b3e:	test   al,al
10013b40:	jne    0x10013b47
10013b42:	lea    eax,[ebp-0xc]
10013b45:	jmp    0x10013b53
10013b47:	mov    eax,DWORD PTR [esi+0x4]
10013b4a:	mov    DWORD PTR [ebp-0x10],eax
10013b4d:	mov    DWORD PTR [ebp-0x14],esi
10013b50:	lea    eax,[ebp-0x14]
10013b53:	mov    ecx,DWORD PTR [eax]
10013b55:	mov    eax,DWORD PTR [eax+0x4]
10013b58:	mov    DWORD PTR [ebx+0x4],eax
10013b5b:	mov    DWORD PTR [ebx],ecx
10013b5d:	mov    eax,ebx
10013b5f:	pop    edi
10013b60:	leave  
10013b61:	ret    0x4
10013b64:	push   ebp
10013b65:	mov    ebp,esp
10013b67:	push   ecx
10013b68:	push   ecx
10013b69:	mov    ecx,DWORD PTR [eax+0x4]
10013b6c:	mov    eax,DWORD PTR [eax+0x8]
10013b6f:	push   esi
10013b70:	lea    esi,[ebp-0x8]
10013b73:	mov    DWORD PTR [ebp-0x8],ecx
10013b76:	mov    DWORD PTR [ebp-0x4],eax
10013b79:	call   0x1001420d
10013b7e:	mov    esi,eax
10013b80:	call   0x1001426e
10013b85:	pop    esi
10013b86:	leave  
10013b87:	ret    
10013b88:	push   0x48
10013b8a:	mov    eax,0x100607fe
10013b8f:	call   0x10059df5
10013b94:	mov    edi,ecx
10013b96:	cmp    DWORD PTR [esi+0x8],0x3ffffffe
10013b9d:	jb     0x10013bd1
10013b9f:	push   0x1006e0f8
10013ba4:	lea    ecx,[ebp-0x2c]
10013ba7:	call   0x100011a7
10013bac:	and    DWORD PTR [ebp-0x4],0x0
10013bb0:	lea    eax,[ebp-0x2c]
10013bb3:	push   eax
10013bb4:	lea    ecx,[ebp-0x54]
10013bb7:	call   0x10001077
10013bbc:	push   0x100764d0
10013bc1:	lea    eax,[ebp-0x54]
10013bc4:	push   eax
10013bc5:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10013bcc:	call   0x10047942
10013bd1:	mov    eax,DWORD PTR [esi+0x4]
10013bd4:	push   0x0
10013bd6:	push   DWORD PTR [ebp+0x10]
10013bd9:	push   eax
10013bda:	push   edi
10013bdb:	push   eax
10013bdc:	call   0x100142af
10013be1:	inc    DWORD PTR [esi+0x8]
10013be4:	mov    ebx,eax
10013be6:	mov    eax,DWORD PTR [esi+0x4]
10013be9:	cmp    edi,eax
10013beb:	jne    0x10013bfa
10013bed:	mov    DWORD PTR [eax+0x4],ebx
10013bf0:	mov    eax,DWORD PTR [esi+0x4]
10013bf3:	mov    DWORD PTR [eax],ebx
10013bf5:	mov    eax,DWORD PTR [esi+0x4]
10013bf8:	jmp    0x10013c18
10013bfa:	cmp    BYTE PTR [ebp+0xc],0x0
10013bfe:	je     0x10013c0d
10013c00:	mov    DWORD PTR [edi],ebx
10013c02:	mov    eax,DWORD PTR [esi+0x4]
10013c05:	cmp    edi,DWORD PTR [eax]
10013c07:	jne    0x10013c1b
10013c09:	mov    DWORD PTR [eax],ebx
10013c0b:	jmp    0x10013c1b
10013c0d:	mov    DWORD PTR [edi+0x8],ebx
10013c10:	mov    eax,DWORD PTR [esi+0x4]
10013c13:	cmp    edi,DWORD PTR [eax+0x8]
10013c16:	jne    0x10013c1b
10013c18:	mov    DWORD PTR [eax+0x8],ebx
10013c1b:	mov    edi,ebx
10013c1d:	lea    eax,[ebx+0x4]
10013c20:	jmp    0x10013caf
10013c25:	mov    ecx,DWORD PTR [eax]
10013c27:	mov    edx,DWORD PTR [ecx+0x4]
10013c2a:	cmp    ecx,DWORD PTR [edx]
10013c2c:	jne    0x10013c63
10013c2e:	mov    edx,DWORD PTR [edx+0x8]
10013c31:	cmp    BYTE PTR [edx+0x10],0x0
10013c35:	je     0x10013c6b
10013c37:	cmp    edi,DWORD PTR [ecx+0x8]
10013c3a:	jne    0x10013c44
10013c3c:	push   esi
10013c3d:	mov    edi,ecx
10013c3f:	call   0x10001cce
10013c44:	mov    eax,DWORD PTR [edi+0x4]
10013c47:	mov    BYTE PTR [eax+0x10],0x1
10013c4b:	mov    eax,DWORD PTR [edi+0x4]
10013c4e:	mov    eax,DWORD PTR [eax+0x4]
10013c51:	mov    BYTE PTR [eax+0x10],0x0
10013c55:	mov    eax,DWORD PTR [edi+0x4]
10013c58:	mov    ecx,DWORD PTR [eax+0x4]
10013c5b:	push   esi
10013c5c:	call   0x10001d0e
10013c61:	jmp    0x10013cac
10013c63:	mov    edx,DWORD PTR [edx]
10013c65:	cmp    BYTE PTR [edx+0x10],0x0
10013c69:	jne    0x10013c83
10013c6b:	mov    BYTE PTR [ecx+0x10],0x1
10013c6f:	mov    BYTE PTR [edx+0x10],0x1
10013c73:	mov    ecx,DWORD PTR [eax]
10013c75:	mov    ecx,DWORD PTR [ecx+0x4]
10013c78:	mov    BYTE PTR [ecx+0x10],0x0
10013c7c:	mov    eax,DWORD PTR [eax]
10013c7e:	mov    edi,DWORD PTR [eax+0x4]
10013c81:	jmp    0x10013cac
10013c83:	cmp    edi,DWORD PTR [ecx]
10013c85:	jne    0x10013c8f
10013c87:	push   esi
10013c88:	mov    edi,ecx
10013c8a:	call   0x10001d0e
10013c8f:	mov    eax,DWORD PTR [edi+0x4]
10013c92:	mov    BYTE PTR [eax+0x10],0x1
10013c96:	mov    eax,DWORD PTR [edi+0x4]
10013c99:	mov    eax,DWORD PTR [eax+0x4]
10013c9c:	mov    BYTE PTR [eax+0x10],0x0
10013ca0:	mov    eax,DWORD PTR [edi+0x4]
10013ca3:	mov    ecx,DWORD PTR [eax+0x4]
10013ca6:	push   esi
10013ca7:	call   0x10001cce
10013cac:	lea    eax,[edi+0x4]
10013caf:	mov    ecx,DWORD PTR [eax]
10013cb1:	cmp    BYTE PTR [ecx+0x10],0x0
10013cb5:	je     0x10013c25
10013cbb:	mov    eax,DWORD PTR [esi+0x4]
10013cbe:	mov    eax,DWORD PTR [eax+0x4]
10013cc1:	mov    BYTE PTR [eax+0x10],0x1
10013cc5:	mov    eax,DWORD PTR [ebp+0x8]
10013cc8:	mov    DWORD PTR [eax+0x4],ebx
10013ccb:	mov    DWORD PTR [eax],esi
10013ccd:	call   0x10059ecd
10013cd2:	ret    0xc
10013cd5:	push   0x4c
10013cd7:	mov    eax,0x1006136d
10013cdc:	call   0x10059df5
10013ce1:	mov    edi,DWORD PTR [ebp+0x14]
10013ce4:	cmp    BYTE PTR [edi+0xe1],0x0
10013ceb:	je     0x10013d1f
10013ced:	push   0x1006dcfc
10013cf2:	lea    ecx,[ebp-0x30]
10013cf5:	call   0x100011a7
10013cfa:	and    DWORD PTR [ebp-0x4],0x0
10013cfe:	lea    eax,[ebp-0x30]
10013d01:	push   eax
10013d02:	lea    ecx,[ebp-0x58]
10013d05:	call   0x10001077
10013d0a:	push   0x10076428
10013d0f:	lea    eax,[ebp-0x58]
10013d12:	push   eax
10013d13:	mov    DWORD PTR [ebp-0x58],0x1006c988
10013d1a:	call   0x10047942
10013d1f:	lea    esi,[ebp+0x10]
10013d22:	call   0x100141b4
10013d27:	mov    ecx,DWORD PTR [edi]
10013d29:	cmp    BYTE PTR [ecx+0xe1],0x0
10013d30:	je     0x10013d37
10013d32:	mov    ebx,DWORD PTR [edi+0x8]
10013d35:	jmp    0x10013d55
10013d37:	mov    eax,DWORD PTR [edi+0x8]
10013d3a:	cmp    BYTE PTR [eax+0xe1],0x0
10013d41:	je     0x10013d47
10013d43:	mov    ebx,ecx
10013d45:	jmp    0x10013d55
10013d47:	mov    eax,DWORD PTR [ebp+0x14]
10013d4a:	cmp    eax,edi
10013d4c:	mov    ebx,DWORD PTR [eax+0x8]
10013d4f:	jne    0x10013dde
10013d55:	cmp    BYTE PTR [ebx+0xe1],0x0
10013d5c:	mov    esi,DWORD PTR [edi+0x4]
10013d5f:	jne    0x10013d64
10013d61:	mov    DWORD PTR [ebx+0x4],esi
10013d64:	mov    ecx,DWORD PTR [ebp+0x8]
10013d67:	mov    eax,DWORD PTR [ecx+0x4]
10013d6a:	cmp    DWORD PTR [eax+0x4],edi
10013d6d:	jne    0x10013d74
10013d6f:	mov    DWORD PTR [eax+0x4],ebx
10013d72:	jmp    0x10013d7f
10013d74:	cmp    DWORD PTR [esi],edi
10013d76:	jne    0x10013d7c
10013d78:	mov    DWORD PTR [esi],ebx
10013d7a:	jmp    0x10013d7f
10013d7c:	mov    DWORD PTR [esi+0x8],ebx
10013d7f:	mov    edx,DWORD PTR [ecx+0x4]
10013d82:	cmp    DWORD PTR [edx],edi
10013d84:	jne    0x10013da8
10013d86:	cmp    BYTE PTR [ebx+0xe1],0x0
10013d8d:	je     0x10013d93
10013d8f:	mov    ecx,esi
10013d91:	jmp    0x10013da6
10013d93:	mov    eax,DWORD PTR [ebx]
10013d95:	mov    ecx,ebx
10013d97:	jmp    0x10013d9d
10013d99:	mov    ecx,eax
10013d9b:	mov    eax,DWORD PTR [ecx]
10013d9d:	cmp    BYTE PTR [eax+0xe1],0x0
10013da4:	je     0x10013d99
10013da6:	mov    DWORD PTR [edx],ecx
10013da8:	mov    eax,DWORD PTR [ebp+0x8]
10013dab:	mov    edx,DWORD PTR [eax+0x4]
10013dae:	cmp    DWORD PTR [edx+0x8],edi
10013db1:	jne    0x10013e48
10013db7:	cmp    BYTE PTR [ebx+0xe1],0x0
10013dbe:	je     0x10013dc4
10013dc0:	mov    ecx,esi
10013dc2:	jmp    0x10013dd9
10013dc4:	mov    eax,DWORD PTR [ebx+0x8]
10013dc7:	mov    ecx,ebx
10013dc9:	jmp    0x10013dd0
10013dcb:	mov    ecx,eax
10013dcd:	mov    eax,DWORD PTR [ecx+0x8]
10013dd0:	cmp    BYTE PTR [eax+0xe1],0x0
10013dd7:	je     0x10013dcb
10013dd9:	mov    DWORD PTR [edx+0x8],ecx
10013ddc:	jmp    0x10013e48
10013dde:	mov    DWORD PTR [ecx+0x4],eax
10013de1:	mov    ecx,DWORD PTR [edi]
10013de3:	mov    DWORD PTR [eax],ecx
10013de5:	cmp    eax,DWORD PTR [edi+0x8]
10013de8:	jne    0x10013dee
10013dea:	mov    esi,eax
10013dec:	jmp    0x10013e0b
10013dee:	cmp    BYTE PTR [ebx+0xe1],0x0
10013df5:	mov    esi,DWORD PTR [eax+0x4]
10013df8:	jne    0x10013dfd
10013dfa:	mov    DWORD PTR [ebx+0x4],esi
10013dfd:	mov    DWORD PTR [esi],ebx
10013dff:	mov    ecx,DWORD PTR [edi+0x8]
10013e02:	mov    DWORD PTR [eax+0x8],ecx
10013e05:	mov    ecx,DWORD PTR [edi+0x8]
10013e08:	mov    DWORD PTR [ecx+0x4],eax
10013e0b:	mov    ecx,DWORD PTR [ebp+0x8]
10013e0e:	mov    ecx,DWORD PTR [ecx+0x4]
10013e11:	cmp    DWORD PTR [ecx+0x4],edi
10013e14:	jne    0x10013e1b
10013e16:	mov    DWORD PTR [ecx+0x4],eax
10013e19:	jmp    0x10013e29
10013e1b:	mov    ecx,DWORD PTR [edi+0x4]
10013e1e:	cmp    DWORD PTR [ecx],edi
10013e20:	jne    0x10013e26
10013e22:	mov    DWORD PTR [ecx],eax
10013e24:	jmp    0x10013e29
10013e26:	mov    DWORD PTR [ecx+0x8],eax
10013e29:	mov    ecx,DWORD PTR [edi+0x4]
10013e2c:	mov    DWORD PTR [eax+0x4],ecx
10013e2f:	add    eax,0xe0
10013e34:	mov    dl,BYTE PTR [eax]
10013e36:	lea    ecx,[edi+0xe0]
10013e3c:	mov    BYTE PTR [ebp-0x11],dl
10013e3f:	mov    dl,BYTE PTR [ecx]
10013e41:	mov    BYTE PTR [eax],dl
10013e43:	mov    al,BYTE PTR [ebp-0x11]
10013e46:	mov    BYTE PTR [ecx],al
10013e48:	cmp    BYTE PTR [edi+0xe0],0x1
10013e4f:	jne    0x10013fbe
10013e55:	jmp    0x10013f5c
10013e5a:	cmp    BYTE PTR [ebx+0xe0],0x1
10013e61:	jne    0x10013fb7
10013e67:	mov    ecx,DWORD PTR [esi]
10013e69:	cmp    ebx,ecx
10013e6b:	jne    0x10013f0f
10013e71:	mov    ecx,DWORD PTR [esi+0x8]
10013e74:	lea    eax,[ecx+0xe0]
10013e7a:	cmp    BYTE PTR [eax],0x0
10013e7d:	jne    0x10013e96
10013e7f:	push   DWORD PTR [ebp+0x8]
10013e82:	mov    BYTE PTR [eax],0x1
10013e85:	mov    ecx,esi
10013e87:	mov    BYTE PTR [esi+0xe0],0x0
10013e8e:	call   0x100143df
10013e93:	mov    ecx,DWORD PTR [esi+0x8]
10013e96:	cmp    BYTE PTR [ecx+0xe1],0x0
10013e9d:	jne    0x10013f57
10013ea3:	mov    eax,DWORD PTR [ecx]
10013ea5:	cmp    BYTE PTR [eax+0xe0],0x1
10013eac:	jne    0x10013ebe
10013eae:	mov    eax,DWORD PTR [ecx+0x8]
10013eb1:	cmp    BYTE PTR [eax+0xe0],0x1
10013eb8:	je     0x10013f50
10013ebe:	mov    eax,DWORD PTR [ecx+0x8]
10013ec1:	cmp    BYTE PTR [eax+0xe0],0x1
10013ec8:	jne    0x10013ee5
10013eca:	mov    eax,DWORD PTR [ecx]
10013ecc:	push   DWORD PTR [ebp+0x8]
10013ecf:	mov    BYTE PTR [eax+0xe0],0x1
10013ed6:	mov    BYTE PTR [ecx+0xe0],0x0
10013edd:	call   0x10014422
10013ee2:	mov    ecx,DWORD PTR [esi+0x8]
10013ee5:	push   DWORD PTR [ebp+0x8]
10013ee8:	lea    eax,[esi+0xe0]
10013eee:	mov    dl,BYTE PTR [eax]
10013ef0:	mov    BYTE PTR [ecx+0xe0],dl
10013ef6:	mov    BYTE PTR [eax],0x1
10013ef9:	mov    eax,DWORD PTR [ecx+0x8]
10013efc:	mov    ecx,esi
10013efe:	mov    BYTE PTR [eax+0xe0],0x1
10013f05:	call   0x100143df
10013f0a:	jmp    0x10013fb7
10013f0f:	lea    eax,[ecx+0xe0]
10013f15:	cmp    BYTE PTR [eax],0x0
10013f18:	jne    0x10013f30
10013f1a:	push   DWORD PTR [ebp+0x8]
10013f1d:	mov    BYTE PTR [eax],0x1
10013f20:	mov    ecx,esi
10013f22:	mov    BYTE PTR [esi+0xe0],0x0
10013f29:	call   0x10014422
10013f2e:	mov    ecx,DWORD PTR [esi]
10013f30:	cmp    BYTE PTR [ecx+0xe1],0x0
10013f37:	jne    0x10013f57
10013f39:	mov    eax,DWORD PTR [ecx+0x8]
10013f3c:	cmp    BYTE PTR [eax+0xe0],0x1
10013f43:	jne    0x10013f6d
10013f45:	mov    eax,DWORD PTR [ecx]
10013f47:	cmp    BYTE PTR [eax+0xe0],0x1
10013f4e:	jne    0x10013f6d
10013f50:	mov    BYTE PTR [ecx+0xe0],0x0
10013f57:	mov    ebx,esi
10013f59:	mov    esi,DWORD PTR [esi+0x4]
10013f5c:	mov    eax,DWORD PTR [ebp+0x8]
10013f5f:	mov    eax,DWORD PTR [eax+0x4]
10013f62:	cmp    ebx,DWORD PTR [eax+0x4]
10013f65:	jne    0x10013e5a
10013f6b:	jmp    0x10013fb7
10013f6d:	mov    eax,DWORD PTR [ecx]
10013f6f:	cmp    BYTE PTR [eax+0xe0],0x1
10013f76:	jne    0x10013f93
10013f78:	mov    eax,DWORD PTR [ecx+0x8]
10013f7b:	push   DWORD PTR [ebp+0x8]
10013f7e:	mov    BYTE PTR [eax+0xe0],0x1
10013f85:	mov    BYTE PTR [ecx+0xe0],0x0
10013f8c:	call   0x100143df
10013f91:	mov    ecx,DWORD PTR [esi]
10013f93:	push   DWORD PTR [ebp+0x8]
10013f96:	lea    eax,[esi+0xe0]
10013f9c:	mov    dl,BYTE PTR [eax]
10013f9e:	mov    BYTE PTR [ecx+0xe0],dl
10013fa4:	mov    BYTE PTR [eax],0x1
10013fa7:	mov    eax,DWORD PTR [ecx]
10013fa9:	mov    ecx,esi
10013fab:	mov    BYTE PTR [eax+0xe0],0x1
10013fb2:	call   0x10014422
10013fb7:	mov    BYTE PTR [ebx+0xe0],0x1
10013fbe:	lea    ebx,[edi+0x10]
10013fc1:	lea    esi,[ebx+0x20]
10013fc4:	call   0x10003432
10013fc9:	push   0x0
10013fcb:	push   0x1
10013fcd:	mov    ecx,ebx
10013fcf:	call   0x100012f0
10013fd4:	push   edi
10013fd5:	call   0x10042fe2
10013fda:	pop    ecx
10013fdb:	mov    ecx,DWORD PTR [ebp+0x8]
10013fde:	mov    eax,DWORD PTR [ecx+0x8]
10013fe1:	test   eax,eax
10013fe3:	jbe    0x10013fe9
10013fe5:	dec    eax
10013fe6:	mov    DWORD PTR [ecx+0x8],eax
10013fe9:	mov    ecx,DWORD PTR [ebp+0x10]
10013fec:	mov    eax,DWORD PTR [ebp+0xc]
10013fef:	mov    DWORD PTR [eax],ecx
10013ff1:	mov    ecx,DWORD PTR [ebp+0x14]
10013ff4:	mov    DWORD PTR [eax+0x4],ecx
10013ff7:	call   0x10059ecd
10013ffc:	ret    0x10
10013fff:	push   0x48
10014001:	mov    eax,0x100607fe
10014006:	call   0x10059df5
1001400b:	mov    edi,ecx
1001400d:	cmp    DWORD PTR [esi+0x8],0x13b13b0
10014014:	jb     0x10014048
10014016:	push   0x1006e0f8
1001401b:	lea    ecx,[ebp-0x2c]
1001401e:	call   0x100011a7
10014023:	and    DWORD PTR [ebp-0x4],0x0
10014027:	lea    eax,[ebp-0x2c]
1001402a:	push   eax
1001402b:	lea    ecx,[ebp-0x54]
1001402e:	call   0x10001077
10014033:	push   0x100764d0
10014038:	lea    eax,[ebp-0x54]
1001403b:	push   eax
1001403c:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10014043:	call   0x10047942
10014048:	push   DWORD PTR [ebp+0x10]
1001404b:	mov    eax,DWORD PTR [esi+0x4]
1001404e:	push   eax
1001404f:	push   edi
10014050:	push   eax
10014051:	call   0x10014467
10014056:	inc    DWORD PTR [esi+0x8]
10014059:	mov    ebx,eax
1001405b:	mov    eax,DWORD PTR [esi+0x4]
1001405e:	cmp    edi,eax
10014060:	jne    0x1001406f
10014062:	mov    DWORD PTR [eax+0x4],ebx
10014065:	mov    eax,DWORD PTR [esi+0x4]
10014068:	mov    DWORD PTR [eax],ebx
1001406a:	mov    eax,DWORD PTR [esi+0x4]
1001406d:	jmp    0x1001408d
1001406f:	cmp    BYTE PTR [ebp+0xc],0x0
10014073:	je     0x10014082
10014075:	mov    DWORD PTR [edi],ebx
10014077:	mov    eax,DWORD PTR [esi+0x4]
1001407a:	cmp    edi,DWORD PTR [eax]
1001407c:	jne    0x10014090
1001407e:	mov    DWORD PTR [eax],ebx
10014080:	jmp    0x10014090
10014082:	mov    DWORD PTR [edi+0x8],ebx
10014085:	mov    eax,DWORD PTR [esi+0x4]
10014088:	cmp    edi,DWORD PTR [eax+0x8]
1001408b:	jne    0x10014090
1001408d:	mov    DWORD PTR [eax+0x8],ebx
10014090:	mov    edi,ebx
10014092:	lea    eax,[ebx+0x4]
10014095:	jmp    0x10014143
1001409a:	mov    edx,DWORD PTR [eax]
1001409c:	mov    ecx,DWORD PTR [edx+0x4]
1001409f:	cmp    edx,DWORD PTR [ecx]
100140a1:	jne    0x100140e5
100140a3:	mov    ecx,DWORD PTR [ecx+0x8]
100140a6:	add    ecx,0xe0
100140ac:	cmp    BYTE PTR [ecx],0x0
100140af:	je     0x100140f2
100140b1:	cmp    edi,DWORD PTR [edx+0x8]
100140b4:	jne    0x100140c0
100140b6:	mov    edi,edx
100140b8:	push   esi
100140b9:	mov    ecx,edi
100140bb:	call   0x100143df
100140c0:	mov    eax,DWORD PTR [edi+0x4]
100140c3:	mov    BYTE PTR [eax+0xe0],0x1
100140ca:	mov    eax,DWORD PTR [edi+0x4]
100140cd:	mov    eax,DWORD PTR [eax+0x4]
100140d0:	mov    BYTE PTR [eax+0xe0],0x0
100140d7:	mov    eax,DWORD PTR [edi+0x4]
100140da:	mov    ecx,DWORD PTR [eax+0x4]
100140dd:	push   esi
100140de:	call   0x10014422
100140e3:	jmp    0x10014140
100140e5:	mov    ecx,DWORD PTR [ecx]
100140e7:	add    ecx,0xe0
100140ed:	cmp    BYTE PTR [ecx],0x0
100140f0:	jne    0x1001410f
100140f2:	mov    BYTE PTR [edx+0xe0],0x1
100140f9:	mov    BYTE PTR [ecx],0x1
100140fc:	mov    ecx,DWORD PTR [eax]
100140fe:	mov    ecx,DWORD PTR [ecx+0x4]
10014101:	mov    BYTE PTR [ecx+0xe0],0x0
10014108:	mov    eax,DWORD PTR [eax]
1001410a:	mov    edi,DWORD PTR [eax+0x4]
1001410d:	jmp    0x10014140
1001410f:	cmp    edi,DWORD PTR [edx]
10014111:	jne    0x1001411d
10014113:	mov    edi,edx
10014115:	push   esi
10014116:	mov    ecx,edi
10014118:	call   0x10014422
1001411d:	mov    eax,DWORD PTR [edi+0x4]
10014120:	mov    BYTE PTR [eax+0xe0],0x1
10014127:	mov    eax,DWORD PTR [edi+0x4]
1001412a:	mov    eax,DWORD PTR [eax+0x4]
1001412d:	mov    BYTE PTR [eax+0xe0],0x0
10014134:	mov    eax,DWORD PTR [edi+0x4]
10014137:	mov    ecx,DWORD PTR [eax+0x4]
1001413a:	push   esi
1001413b:	call   0x100143df
10014140:	lea    eax,[edi+0x4]
10014143:	mov    ecx,DWORD PTR [eax]
10014145:	cmp    BYTE PTR [ecx+0xe0],0x0
1001414c:	je     0x1001409a
10014152:	mov    eax,DWORD PTR [esi+0x4]
10014155:	mov    eax,DWORD PTR [eax+0x4]
10014158:	mov    BYTE PTR [eax+0xe0],0x1
1001415f:	mov    eax,DWORD PTR [ebp+0x8]
10014162:	mov    DWORD PTR [eax+0x4],ebx
10014165:	mov    DWORD PTR [eax],esi
10014167:	call   0x10059ecd
1001416c:	ret    0xc
1001416f:	push   ebp
10014170:	mov    ebp,esp
10014172:	and    esp,0xfffffff8
10014175:	push   ecx
10014176:	push   ecx
10014177:	mov    eax,ds:0x10082ec8
1001417c:	mov    edx,DWORD PTR [eax]
1001417e:	push   ebx
1001417f:	push   esi
10014180:	mov    ecx,0x10082ec4
10014185:	push   eax
10014186:	mov    esi,ecx
10014188:	push   esi
10014189:	push   edx
1001418a:	push   ecx
1001418b:	lea    ebx,[esp+0x18]
1001418f:	call   0x100142e5
10014194:	push   DWORD PTR ds:0x10082ec8
1001419a:	call   0x10042fe2
1001419f:	and    DWORD PTR ds:0x10082ec8,0x0
100141a6:	and    DWORD PTR ds:0x10082ecc,0x0
100141ad:	pop    ecx
100141ae:	pop    esi
100141af:	pop    ebx
100141b0:	mov    esp,ebp
100141b2:	pop    ebp
100141b3:	ret    
100141b4:	push   ebx
100141b5:	xor    ebx,ebx
100141b7:	cmp    DWORD PTR [esi],ebx
100141b9:	jne    0x100141c0
100141bb:	call   0x10043605
100141c0:	mov    eax,DWORD PTR [esi+0x4]
100141c3:	cmp    BYTE PTR [eax+0xe1],bl
100141c9:	je     0x100141d2
100141cb:	call   0x10043605
100141d0:	jmp    0x10014209
100141d2:	mov    ecx,DWORD PTR [eax+0x8]
100141d5:	cmp    BYTE PTR [ecx+0xe1],bl
100141db:	jne    0x100141fb
100141dd:	jmp    0x100141e1
100141df:	mov    ecx,eax
100141e1:	mov    eax,DWORD PTR [ecx]
100141e3:	cmp    BYTE PTR [eax+0xe1],bl
100141e9:	je     0x100141df
100141eb:	mov    DWORD PTR [esi+0x4],ecx
100141ee:	jmp    0x10014209
100141f0:	mov    ecx,DWORD PTR [esi+0x4]
100141f3:	cmp    ecx,DWORD PTR [eax+0x8]
100141f6:	jne    0x10014206
100141f8:	mov    DWORD PTR [esi+0x4],eax
100141fb:	mov    eax,DWORD PTR [eax+0x4]
100141fe:	cmp    BYTE PTR [eax+0xe1],bl
10014204:	je     0x100141f0
10014206:	mov    DWORD PTR [esi+0x4],eax
10014209:	mov    eax,esi
1001420b:	pop    ebx
1001420c:	ret    
1001420d:	push   ebx
1001420e:	xor    ebx,ebx
10014210:	cmp    DWORD PTR [esi],ebx
10014212:	jne    0x10014219
10014214:	call   0x10043605
10014219:	mov    eax,DWORD PTR [esi+0x4]
1001421c:	cmp    BYTE PTR [eax+0x11],bl
1001421f:	je     0x1001422e
10014221:	mov    eax,DWORD PTR [eax+0x8]
10014224:	mov    DWORD PTR [esi+0x4],eax
10014227:	cmp    BYTE PTR [eax+0x11],bl
1001422a:	je     0x1001426a
1001422c:	jmp    0x10014260
1001422e:	mov    ecx,DWORD PTR [eax]
10014230:	cmp    BYTE PTR [ecx+0x11],bl
10014233:	jne    0x10014250
10014235:	jmp    0x10014239
10014237:	mov    ecx,eax
10014239:	mov    eax,DWORD PTR [ecx+0x8]
1001423c:	cmp    BYTE PTR [eax+0x11],bl
1001423f:	je     0x10014237
10014241:	mov    DWORD PTR [esi+0x4],ecx
10014244:	jmp    0x1001426a
10014246:	mov    ecx,DWORD PTR [esi+0x4]
10014249:	cmp    ecx,DWORD PTR [eax]
1001424b:	jne    0x10014258
1001424d:	mov    DWORD PTR [esi+0x4],eax
10014250:	mov    eax,DWORD PTR [eax+0x4]
10014253:	cmp    BYTE PTR [eax+0x11],bl
10014256:	je     0x10014246
10014258:	mov    ecx,DWORD PTR [esi+0x4]
1001425b:	cmp    BYTE PTR [ecx+0x11],bl
1001425e:	je     0x10014267
10014260:	call   0x10043605
10014265:	jmp    0x1001426a
10014267:	mov    DWORD PTR [esi+0x4],eax
1001426a:	mov    eax,esi
1001426c:	pop    ebx
1001426d:	ret    
1001426e:	cmp    DWORD PTR [esi],0x0
10014271:	jne    0x10014278
10014273:	call   0x10043605
10014278:	mov    eax,DWORD PTR [esi]
1001427a:	mov    ecx,DWORD PTR [esi+0x4]
1001427d:	cmp    ecx,DWORD PTR [eax+0x4]
10014280:	jne    0x10014287
10014282:	call   0x10043605
10014287:	mov    eax,DWORD PTR [esi+0x4]
1001428a:	add    eax,0xc
1001428d:	ret    
1001428e:	call   0x100144bc
10014293:	lea    ecx,[esi+0x4]
10014296:	mov    DWORD PTR [ecx],eax
10014298:	mov    BYTE PTR [eax+0x11],0x1
1001429c:	mov    eax,DWORD PTR [ecx]
1001429e:	mov    DWORD PTR [eax+0x4],eax
100142a1:	mov    eax,DWORD PTR [ecx]
100142a3:	mov    DWORD PTR [eax],eax
100142a5:	mov    ecx,DWORD PTR [ecx]
100142a7:	mov    DWORD PTR [ecx+0x8],ecx
100142aa:	and    DWORD PTR [esi+0x8],0x0
100142ae:	ret    
100142af:	push   ebp
100142b0:	mov    ebp,esp
100142b2:	push   0x14
100142b4:	call   0x10043196
100142b9:	test   eax,eax
100142bb:	pop    ecx
100142bc:	je     0x100142e1
100142be:	mov    ecx,DWORD PTR [ebp+0x8]
100142c1:	mov    DWORD PTR [eax],ecx
100142c3:	mov    ecx,DWORD PTR [ebp+0xc]
100142c6:	mov    DWORD PTR [eax+0x4],ecx
100142c9:	mov    ecx,DWORD PTR [ebp+0x10]
100142cc:	mov    DWORD PTR [eax+0x8],ecx
100142cf:	mov    ecx,DWORD PTR [ebp+0x14]
100142d2:	mov    ecx,DWORD PTR [ecx]
100142d4:	mov    DWORD PTR [eax+0xc],ecx
100142d7:	mov    cl,BYTE PTR [ebp+0x18]
100142da:	mov    BYTE PTR [eax+0x10],cl
100142dd:	mov    BYTE PTR [eax+0x11],0x0
100142e1:	pop    ebp
100142e2:	ret    0x14
100142e5:	push   ebp
100142e6:	mov    ebp,esp
100142e8:	mov    eax,ds:0x10082ec8
100142ed:	sub    esp,0x10
100142f0:	cmp    DWORD PTR [ebp+0x8],0x0
100142f4:	push   esi
100142f5:	mov    esi,DWORD PTR [eax]
100142f7:	push   edi
100142f8:	mov    edi,0x10082ec4
100142fd:	je     0x10014304
100142ff:	cmp    DWORD PTR [ebp+0x8],edi
10014302:	je     0x10014309
10014304:	call   0x10043605
10014309:	cmp    DWORD PTR [ebp+0xc],esi
1001430c:	jne    0x10014361
1001430e:	cmp    DWORD PTR [ebp+0x10],0x0
10014312:	mov    esi,DWORD PTR ds:0x10082ec8
10014318:	je     0x1001431f
1001431a:	cmp    DWORD PTR [ebp+0x10],edi
1001431d:	je     0x10014324
1001431f:	call   0x10043605
10014324:	cmp    DWORD PTR [ebp+0x14],esi
10014327:	jne    0x10014361
10014329:	mov    eax,ds:0x10082ec8
1001432e:	push   DWORD PTR [eax+0x4]
10014331:	mov    ecx,edi
10014333:	call   0x1001457c
10014338:	mov    eax,ds:0x10082ec8
1001433d:	mov    DWORD PTR [eax+0x4],eax
10014340:	mov    eax,ds:0x10082ec8
10014345:	and    DWORD PTR ds:0x10082ecc,0x0
1001434c:	mov    DWORD PTR [eax],eax
1001434e:	mov    eax,ds:0x10082ec8
10014353:	mov    DWORD PTR [eax+0x8],eax
10014356:	mov    eax,ds:0x10082ec8
1001435b:	mov    eax,DWORD PTR [eax]
1001435d:	mov    DWORD PTR [ebx],edi
1001435f:	jmp    0x1001439f
10014361:	mov    eax,DWORD PTR [ebp+0x8]
10014364:	test   eax,eax
10014366:	je     0x1001436d
10014368:	cmp    eax,DWORD PTR [ebp+0x10]
1001436b:	je     0x10014372
1001436d:	call   0x10043605
10014372:	mov    eax,DWORD PTR [ebp+0xc]
10014375:	cmp    eax,DWORD PTR [ebp+0x14]
10014378:	mov    ecx,DWORD PTR [ebp+0x8]
1001437b:	je     0x1001439d
1001437d:	lea    esi,[ebp+0x8]
10014380:	mov    DWORD PTR [ebp-0x8],ecx
10014383:	mov    DWORD PTR [ebp-0x4],eax
10014386:	call   0x100141b4
1001438b:	push   DWORD PTR [ebp-0x4]
1001438e:	lea    eax,[ebp-0x10]
10014391:	push   DWORD PTR [ebp-0x8]
10014394:	push   eax
10014395:	push   edi
10014396:	call   0x10013cd5
1001439b:	jmp    0x10014361
1001439d:	mov    DWORD PTR [ebx],ecx
1001439f:	pop    edi
100143a0:	mov    DWORD PTR [ebx+0x4],eax
100143a3:	mov    eax,ebx
100143a5:	pop    esi
100143a6:	leave  
100143a7:	ret    0x10
100143aa:	mov    eax,DWORD PTR [eax+0x4]
100143ad:	push   esi
100143ae:	mov    esi,DWORD PTR [eax+0x4]
100143b1:	push   edi
100143b2:	mov    edi,eax
100143b4:	jmp    0x100143cf
100143b6:	mov    eax,DWORD PTR [esp+0xc]
100143ba:	lea    ecx,[esi+0x10]
100143bd:	call   0x10007983
100143c2:	test   al,al
100143c4:	je     0x100143cb
100143c6:	mov    esi,DWORD PTR [esi+0x8]
100143c9:	jmp    0x100143cf
100143cb:	mov    edi,esi
100143cd:	mov    esi,DWORD PTR [esi]
100143cf:	cmp    BYTE PTR [esi+0xe1],0x0
100143d6:	je     0x100143b6
100143d8:	mov    eax,edi
100143da:	pop    edi
100143db:	pop    esi
100143dc:	ret    0x4
100143df:	mov    eax,DWORD PTR [ecx+0x8]
100143e2:	mov    edx,DWORD PTR [eax]
100143e4:	mov    DWORD PTR [ecx+0x8],edx
100143e7:	mov    edx,DWORD PTR [eax]
100143e9:	cmp    BYTE PTR [edx+0xe1],0x0
100143f0:	jne    0x100143f5
100143f2:	mov    DWORD PTR [edx+0x4],ecx
100143f5:	mov    edx,DWORD PTR [ecx+0x4]
100143f8:	mov    DWORD PTR [eax+0x4],edx
100143fb:	mov    edx,DWORD PTR [esp+0x4]
100143ff:	mov    edx,DWORD PTR [edx+0x4]
10014402:	cmp    ecx,DWORD PTR [edx+0x4]
10014405:	jne    0x1001440c
10014407:	mov    DWORD PTR [edx+0x4],eax
1001440a:	jmp    0x1001441a
1001440c:	mov    edx,DWORD PTR [ecx+0x4]
1001440f:	cmp    ecx,DWORD PTR [edx]
10014411:	jne    0x10014417
10014413:	mov    DWORD PTR [edx],eax
10014415:	jmp    0x1001441a
10014417:	mov    DWORD PTR [edx+0x8],eax
1001441a:	mov    DWORD PTR [eax],ecx
1001441c:	mov    DWORD PTR [ecx+0x4],eax
1001441f:	ret    0x4
10014422:	mov    eax,DWORD PTR [ecx]
10014424:	mov    edx,DWORD PTR [eax+0x8]
10014427:	mov    DWORD PTR [ecx],edx
10014429:	mov    edx,DWORD PTR [eax+0x8]
1001442c:	cmp    BYTE PTR [edx+0xe1],0x0
10014433:	jne    0x10014438
10014435:	mov    DWORD PTR [edx+0x4],ecx
10014438:	mov    edx,DWORD PTR [ecx+0x4]
1001443b:	mov    DWORD PTR [eax+0x4],edx
1001443e:	mov    edx,DWORD PTR [esp+0x4]
10014442:	mov    edx,DWORD PTR [edx+0x4]
10014445:	cmp    ecx,DWORD PTR [edx+0x4]
10014448:	jne    0x1001444f
1001444a:	mov    DWORD PTR [edx+0x4],eax
1001444d:	jmp    0x1001445e
1001444f:	mov    edx,DWORD PTR [ecx+0x4]
10014452:	cmp    ecx,DWORD PTR [edx+0x8]
10014455:	jne    0x1001445c
10014457:	mov    DWORD PTR [edx+0x8],eax
1001445a:	jmp    0x1001445e
1001445c:	mov    DWORD PTR [edx],eax
1001445e:	mov    DWORD PTR [eax+0x8],ecx
10014461:	mov    DWORD PTR [ecx+0x4],eax
10014464:	ret    0x4
10014467:	push   0x8
10014469:	mov    eax,0x1006134a
1001446e:	call   0x10059e28
10014473:	push   0xe8
10014478:	call   0x10043196
1001447d:	mov    esi,eax
1001447f:	pop    ecx
10014480:	mov    DWORD PTR [ebp-0x14],esi
10014483:	test   esi,esi
10014485:	mov    DWORD PTR [ebp-0x4],0x1
1001448c:	je     0x1001449f
1001448e:	push   DWORD PTR [ebp+0x10]
10014491:	mov    ecx,DWORD PTR [ebp+0x14]
10014494:	push   DWORD PTR [ebp+0xc]
10014497:	push   DWORD PTR [ebp+0x8]
1001449a:	call   0x10014519
1001449f:	mov    eax,esi
100144a1:	call   0x10059ecd
100144a6:	ret    0x10
100144a9:	push   DWORD PTR [ebp-0x14]
100144ac:	call   0x10042fe2
100144b1:	pop    ecx
100144b2:	push   0x0
100144b4:	push   0x0
100144b6:	call   0x10047942
100144bb:	int3   
100144bc:	push   0x14
100144be:	call   0x10043196
100144c3:	xor    edx,edx
100144c5:	cmp    eax,edx
100144c7:	pop    ecx
100144c8:	je     0x100144cc
100144ca:	mov    DWORD PTR [eax],edx
100144cc:	lea    ecx,[eax+0x4]
100144cf:	cmp    ecx,edx
100144d1:	je     0x100144d5
100144d3:	mov    DWORD PTR [ecx],edx
100144d5:	lea    ecx,[eax+0x8]
100144d8:	cmp    ecx,edx
100144da:	je     0x100144de
100144dc:	mov    DWORD PTR [ecx],edx
100144de:	mov    BYTE PTR [eax+0x10],0x1
100144e2:	mov    BYTE PTR [eax+0x11],dl
100144e5:	ret    
100144e6:	push   0xe8
100144eb:	call   0x10043196
100144f0:	xor    edx,edx
100144f2:	cmp    eax,edx
100144f4:	pop    ecx
100144f5:	je     0x100144f9
100144f7:	mov    DWORD PTR [eax],edx
100144f9:	lea    ecx,[eax+0x4]
100144fc:	cmp    ecx,edx
100144fe:	je     0x10014502
10014500:	mov    DWORD PTR [ecx],edx
10014502:	lea    ecx,[eax+0x8]
10014505:	cmp    ecx,edx
10014507:	je     0x1001450b
10014509:	mov    DWORD PTR [ecx],edx
1001450b:	mov    BYTE PTR [eax+0xe0],0x1
10014512:	mov    BYTE PTR [eax+0xe1],dl
10014518:	ret    
10014519:	push   0x0
1001451b:	mov    eax,0x100617bb
10014520:	call   0x10059df5
10014525:	mov    ebx,ecx
10014527:	mov    eax,DWORD PTR [ebp+0x8]
1001452a:	mov    DWORD PTR [esi],eax
1001452c:	mov    eax,DWORD PTR [ebp+0xc]
1001452f:	mov    DWORD PTR [esi+0x4],eax
10014532:	mov    eax,DWORD PTR [ebp+0x10]
10014535:	lea    edi,[esi+0x10]
10014538:	push   ebx
10014539:	mov    ecx,edi
1001453b:	mov    DWORD PTR [esi+0x8],eax
1001453e:	mov    DWORD PTR [ebp+0x8],edi
10014541:	call   0x100011c9
10014546:	and    DWORD PTR [ebp-0x4],0x0
1001454a:	add    ebx,0x20
1001454d:	add    edi,0x20
10014550:	push   edi
10014551:	mov    ecx,ebx
10014553:	call   0x1001367a
10014558:	mov    eax,DWORD PTR [ebx+0xa8]
1001455e:	mov    DWORD PTR [edi+0xa8],eax
10014564:	mov    BYTE PTR [esi+0xe0],0x0
1001456b:	mov    BYTE PTR [esi+0xe1],0x0
10014572:	mov    eax,esi
10014574:	call   0x10059ecd
10014579:	ret    0xc
1001457c:	push   ecx
1001457d:	push   ebp
1001457e:	mov    ebp,DWORD PTR [esp+0xc]
10014582:	cmp    BYTE PTR [ebp+0xe1],0x0
10014589:	push   edi
1001458a:	mov    DWORD PTR [esp+0x8],ecx
1001458e:	mov    edi,ebp
10014590:	jne    0x100145cc
10014592:	push   ebx
10014593:	push   esi
10014594:	push   DWORD PTR [edi+0x8]
10014597:	mov    ecx,DWORD PTR [esp+0x14]
1001459b:	call   0x1001457c
100145a0:	mov    edi,DWORD PTR [edi]
100145a2:	lea    ebx,[ebp+0x10]
100145a5:	lea    esi,[ebx+0x20]
100145a8:	call   0x10003432
100145ad:	push   0x0
100145af:	push   0x1
100145b1:	mov    ecx,ebx
100145b3:	call   0x100012f0
100145b8:	push   ebp
100145b9:	call   0x10042fe2
100145be:	cmp    BYTE PTR [edi+0xe1],0x0
100145c5:	pop    ecx
100145c6:	mov    ebp,edi
100145c8:	je     0x10014594
100145ca:	pop    esi
100145cb:	pop    ebx
100145cc:	pop    edi
100145cd:	pop    ebp
100145ce:	pop    ecx
100145cf:	ret    0x4
100145d2:	push   0x34
100145d4:	mov    eax,0x100623d2
100145d9:	call   0x10059df5
100145de:	mov    ebx,ecx
100145e0:	mov    DWORD PTR [ebp-0x20],ebx
100145e3:	and    DWORD PTR [ebp-0x4],0x0
100145e7:	mov    eax,DWORD PTR [ebx+0x4]
100145ea:	mov    esi,DWORD PTR [eax]
100145ec:	mov    edi,ebx
100145ee:	mov    DWORD PTR [ebp-0x10],esi
100145f1:	mov    DWORD PTR [ebp-0x14],edi
100145f4:	test   edi,edi
100145f6:	mov    eax,DWORD PTR [ebx+0x4]
100145f9:	mov    DWORD PTR [ebp-0x30],eax
100145fc:	je     0x10014602
100145fe:	cmp    edi,ebx
10014600:	je     0x10014607
10014602:	call   0x10043605
10014607:	cmp    esi,DWORD PTR [ebp-0x30]
1001460a:	je     0x100146c9
10014610:	test   edi,edi
10014612:	jne    0x10014619
10014614:	call   0x10043605
10014619:	cmp    esi,DWORD PTR [edi+0x4]
1001461c:	jne    0x10014623
1001461e:	call   0x10043605
10014623:	lea    ecx,[esi+0x4c]
10014626:	lea    eax,[ebp+0x8]
10014629:	call   0x10006803
1001462e:	test   al,al
10014630:	je     0x100146b6
10014636:	mov    eax,DWORD PTR [ebp+0x28]
10014639:	and    DWORD PTR [ebp-0x2c],0x0
1001463d:	mov    DWORD PTR [esi+0xa8],eax
10014643:	mov    eax,DWORD PTR [ebp+0x2c]
10014646:	mov    DWORD PTR [esi+0xac],eax
1001464c:	mov    eax,DWORD PTR [ebp+0x30]
1001464f:	mov    DWORD PTR [esi+0xb0],eax
10014655:	mov    eax,DWORD PTR [ebp+0x34]
10014658:	mov    DWORD PTR [esi+0xb4],eax
1001465e:	mov    eax,DWORD PTR [ebx+0x10]
10014661:	add    ebx,0xc
10014664:	mov    DWORD PTR [ebp-0x24],eax
10014667:	lea    eax,[ebp-0x2c]
1001466a:	mov    DWORD PTR [ebp-0x28],ebx
1001466d:	call   0x10013b64
10014672:	mov    eax,DWORD PTR [eax]
10014674:	inc    eax
10014675:	cmp    esi,DWORD PTR [edi+0x4]
10014678:	mov    DWORD PTR [ebp-0x18],eax
1001467b:	jne    0x10014682
1001467d:	call   0x10043605
10014682:	lea    edx,[esi+0xd8]
10014688:	mov    eax,ebx
1001468a:	mov    DWORD PTR [ebp-0x1c],edx
1001468d:	call   0x100137c6
10014692:	lea    eax,[ebp-0x18]
10014695:	push   eax
10014696:	lea    edi,[ebp-0x40]
10014699:	call   0x1001370d
1001469e:	mov    eax,DWORD PTR [ebp-0x14]
100146a1:	cmp    esi,DWORD PTR [eax+0x4]
100146a4:	jne    0x100146ab
100146a6:	call   0x10043605
100146ab:	mov    eax,DWORD PTR [ebp-0x18]
100146ae:	mov    ecx,DWORD PTR [ebp-0x1c]
100146b1:	mov    ebx,DWORD PTR [ebp-0x20]
100146b4:	mov    DWORD PTR [ecx],eax
100146b6:	lea    esi,[ebp-0x14]
100146b9:	call   0x100141b4
100146be:	mov    esi,DWORD PTR [ebp-0x10]
100146c1:	mov    edi,DWORD PTR [ebp-0x14]
100146c4:	jmp    0x100145f4
100146c9:	push   0x0
100146cb:	push   0x1
100146cd:	lea    ecx,[ebp+0x8]
100146d0:	call   0x100012f0
100146d5:	call   0x10059ecd
100146da:	ret    0x30
100146dd:	push   0x8
100146df:	mov    eax,0x1006132a
100146e4:	call   0x10059df5
100146e9:	and    DWORD PTR [ebp-0x14],0x0
100146ed:	mov    DWORD PTR [ebp-0x10],edi
100146f0:	lea    eax,[ebp+0x8]
100146f3:	push   eax
100146f4:	mov    ecx,edi
100146f6:	mov    DWORD PTR [ebp-0x4],0x1
100146fd:	call   0x100011c9
10014702:	lea    esi,[edi+0x20]
10014705:	push   esi
10014706:	lea    ecx,[ebp+0x24]
10014709:	mov    BYTE PTR [ebp-0x4],0x2
1001470d:	call   0x1001367a
10014712:	mov    eax,DWORD PTR [ebp+0xcc]
10014718:	push   0x0
1001471a:	push   0x1
1001471c:	lea    ecx,[ebp+0x8]
1001471f:	mov    DWORD PTR [esi+0xa8],eax
10014725:	call   0x100012f0
1001472a:	lea    esi,[ebp+0x24]
1001472d:	call   0x10003432
10014732:	mov    eax,edi
10014734:	call   0x10059ecd
10014739:	ret    
1001473a:	mov    eax,DWORD PTR [esp+0x8]
1001473e:	mul    DWORD PTR [esp+0xc]
10014742:	test   edx,edx
10014744:	ja     0x1001474b
10014746:	cmp    eax,0xffffffff
10014749:	jbe    0x10014751
1001474b:	mov    eax,0x80070057
10014750:	ret    
10014751:	mov    ecx,DWORD PTR [esp+0x4]
10014755:	mov    DWORD PTR [ecx],eax
10014757:	xor    eax,eax
10014759:	ret    
1001475a:	push   DWORD PTR [esp+0xc]
1001475e:	call   DWORD PTR ds:0x100670ac
10014764:	lea    eax,[eax+eax*1+0x2]
10014768:	push   eax
10014769:	push   DWORD PTR [esp+0x10]
1001476d:	mov    eax,DWORD PTR [esp+0x10]
10014771:	add    eax,eax
10014773:	push   eax
10014774:	push   DWORD PTR [esp+0x10]
10014778:	call   0x100433cf
1001477d:	add    esp,0x10
10014780:	neg    eax
10014782:	sbb    eax,eax
10014784:	inc    eax
10014785:	ret    
10014786:	push   DWORD PTR [esp+0x10]
1001478a:	push   DWORD PTR [esp+0x10]
1001478e:	push   DWORD PTR [esp+0x10]
10014792:	push   DWORD PTR [esp+0x10]
10014796:	call   0x100433cf
1001479b:	push   eax
1001479c:	call   0x10001f45
100147a1:	add    esp,0x14
100147a4:	ret    
100147a5:	push   esi
100147a6:	push   0x18
100147a8:	mov    esi,ecx
100147aa:	push   0x0
100147ac:	push   esi
100147ad:	call   0x10045dc0
100147b2:	add    esp,0xc
100147b5:	mov    eax,esi
100147b7:	pop    esi
100147b8:	ret    
100147b9:	push   0xc
100147bb:	push   0x10076568
100147c0:	call   0x1004771c
100147c5:	and    DWORD PTR [ebp-0x4],0x0
100147c9:	push   ecx
100147ca:	call   DWORD PTR ds:0x10067118
100147d0:	and    DWORD PTR [ebp-0x1c],0x0
100147d4:	jmp    0x100147f4
100147d6:	mov    eax,DWORD PTR [ebp-0x14]
100147d9:	mov    eax,DWORD PTR [eax]
100147db:	mov    eax,DWORD PTR [eax]
100147dd:	xor    ecx,ecx
100147df:	cmp    eax,0xc0000017
100147e4:	sete   cl
100147e7:	mov    eax,ecx
100147e9:	ret    
100147ea:	mov    esp,DWORD PTR [ebp-0x18]
100147ed:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100147f4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100147fb:	mov    eax,DWORD PTR [ebp-0x1c]
100147fe:	call   0x10047761
10014803:	ret    
10014804:	test   eax,eax
10014806:	jle    0x10014812
10014808:	and    eax,0xffff
1001480d:	or     eax,0x80070000
10014812:	ret    
10014813:	push   ebx
10014814:	push   ebp
10014815:	mov    ebx,ecx
10014817:	push   edi
10014818:	lea    edi,[ebx+0x4]
1001481b:	xor    ebp,ebp
1001481d:	cmp    DWORD PTR [edi],ebp
1001481f:	je     0x10014876
10014821:	cmp    DWORD PTR [ebx+0xc],ebp
10014824:	je     0x1001485d
10014826:	cmp    edi,ebp
10014828:	jne    0x10014839
1001482a:	push   ebp
1001482b:	push   ebp
1001482c:	push   0x1
1001482e:	push   0xc0000005
10014833:	call   DWORD PTR ds:0x10067110
10014839:	push   esi
1001483a:	mov    esi,DWORD PTR [edi+0x8]
1001483d:	cmp    esi,ebp
1001483f:	je     0x10014856
10014841:	push   DWORD PTR [esi+0x4]
10014844:	call   DWORD PTR [esi]
10014846:	mov    ebp,DWORD PTR [esi+0x8]
10014849:	push   esi
1001484a:	call   0x10042fe2
1001484f:	test   ebp,ebp
10014851:	pop    ecx
10014852:	mov    esi,ebp
10014854:	jne    0x10014841
10014856:	mov    DWORD PTR [edi+0x8],ebp
10014859:	mov    DWORD PTR [ebx+0xc],ebp
1001485c:	pop    esi
1001485d:	mov    eax,DWORD PTR [ebx+0x28]
10014860:	cmp    eax,ebp
10014862:	je     0x1001486a
10014864:	mov    ecx,DWORD PTR [eax]
10014866:	push   eax
10014867:	call   DWORD PTR [ecx+0x8]
1001486a:	add    ebx,0x10
1001486d:	push   ebx
1001486e:	call   DWORD PTR ds:0x10067120
10014874:	mov    DWORD PTR [edi],ebp
10014876:	pop    edi
10014877:	pop    ebp
10014878:	pop    ebx
10014879:	ret    
1001487a:	add    ecx,0x8
1001487d:	push   ecx
1001487e:	call   DWORD PTR ds:0x100670b0
10014884:	ret    
10014885:	add    ecx,0x8
10014888:	push   ecx
10014889:	call   DWORD PTR ds:0x100670bc
1001488f:	ret    
10014890:	mov    eax,DWORD PTR [ecx+0x8]
10014893:	ret    
10014894:	push   ebx
10014895:	mov    ebx,DWORD PTR [esp+0x8]
10014899:	test   ebx,ebx
1001489b:	jne    0x100148a4
1001489d:	mov    eax,0x80004003
100148a2:	jmp    0x100148d9
100148a4:	push   esi
100148a5:	push   edi
100148a6:	xor    edi,edi
100148a8:	lea    esi,[ecx+0x28]
100148ab:	cmp    DWORD PTR [esi],edi
100148ad:	jne    0x100148c9
100148af:	push   esi
100148b0:	push   0x10070e3c
100148b5:	push   0x1
100148b7:	push   edi
100148b8:	push   0x1006c858
100148bd:	call   DWORD PTR ds:0x10067440
100148c3:	mov    edi,eax
100148c5:	test   edi,edi
100148c7:	jl     0x100148d5
100148c9:	mov    eax,DWORD PTR [esi]
100148cb:	mov    DWORD PTR [ebx],eax
100148cd:	mov    esi,DWORD PTR [esi]
100148cf:	mov    eax,DWORD PTR [esi]
100148d1:	push   esi
100148d2:	call   DWORD PTR [eax+0x4]
100148d5:	mov    eax,edi
100148d7:	pop    edi
100148d8:	pop    esi
100148d9:	pop    ebx
100148da:	ret    0x4
100148dd:	push   esi
100148de:	push   edi
100148df:	mov    esi,ecx
100148e1:	xor    edi,edi
100148e3:	dec    esi
100148e4:	je     0x1001490c
100148e6:	movzx  ecx,WORD PTR [edx]
100148e9:	test   cx,cx
100148ec:	je     0x1001490c
100148ee:	mov    WORD PTR [eax],cx
100148f1:	inc    eax
100148f2:	inc    eax
100148f3:	cmp    WORD PTR [edx],0x27
100148f7:	jne    0x10014905
100148f9:	inc    edi
100148fa:	cmp    edi,esi
100148fc:	jae    0x10014905
100148fe:	mov    WORD PTR [eax],0x27
10014903:	inc    eax
10014904:	inc    eax
10014905:	inc    edx
10014906:	inc    edx
10014907:	inc    edi
10014908:	cmp    edi,esi
1001490a:	jb     0x100148e6
1001490c:	and    WORD PTR [eax],0x0
10014910:	pop    edi
10014911:	pop    esi
10014912:	ret    
10014913:	mov    eax,0x80004005
10014918:	ret    0x10
1001491b:	push   DWORD PTR [esp+0xc]
1001491f:	mov    edx,DWORD PTR [esp+0x14]
10014923:	push   DWORD PTR [esp+0xc]
10014927:	mov    ecx,DWORD PTR [esp+0xc]
1001492b:	call   0x10015eaf
10014930:	ret    0x10
10014933:	push   DWORD PTR [esp+0xc]
10014937:	mov    edx,DWORD PTR [esp+0x14]
1001493b:	push   DWORD PTR [esp+0xc]
1001493f:	mov    ecx,DWORD PTR [esp+0xc]
10014943:	call   0x10016062
10014948:	ret    0x10
1001494b:	push   esi
1001494c:	mov    esi,ecx
1001494e:	mov    DWORD PTR [esi],0x10070dfc
10014954:	call   0x10014813
10014959:	test   BYTE PTR [esp+0x8],0x1
1001495e:	je     0x10014967
10014960:	push   esi
10014961:	call   0x10042fe2
10014966:	pop    ecx
10014967:	mov    eax,esi
10014969:	pop    esi
1001496a:	ret    0x4
1001496d:	mov    eax,DWORD PTR [esi]
1001496f:	test   eax,eax
10014971:	je     0x1001497d
10014973:	push   eax
10014974:	call   DWORD PTR ds:0x10067014
1001497a:	and    DWORD PTR [esi],0x0
1001497d:	ret    
1001497e:	push   ebp
1001497f:	mov    ebp,esp
10014981:	cmp    DWORD PTR [ebp+0x10],0x0
10014985:	jne    0x10014991
10014987:	push   0x80004005
1001498c:	call   0x10001f2d
10014991:	push   esi
10014992:	mov    esi,DWORD PTR [ebp+0x10]
10014995:	push   edi
10014996:	xor    edi,edi
10014998:	push   esi
10014999:	call   DWORD PTR ds:0x100670ac
1001499f:	inc    eax
100149a0:	lea    ecx,[eax+eax*1]
100149a3:	add    esi,ecx
100149a5:	add    edi,ecx
100149a7:	cmp    eax,0x1
100149aa:	jne    0x10014998
100149ac:	mov    eax,DWORD PTR [ebp+0x8]
100149af:	push   edi
100149b0:	push   DWORD PTR [ebp+0x10]
100149b3:	push   0x7
100149b5:	push   0x0
100149b7:	push   DWORD PTR [ebp+0xc]
100149ba:	push   DWORD PTR [eax]
100149bc:	call   DWORD PTR ds:0x1006700c
100149c2:	pop    edi
100149c3:	pop    esi
100149c4:	pop    ebp
100149c5:	ret    0xc
100149c8:	push   ebp
100149c9:	mov    ebp,esp
100149cb:	sub    esp,0x228
100149d1:	mov    eax,ds:0x100801ac
100149d6:	xor    eax,ebp
100149d8:	mov    DWORD PTR [ebp-0x8],eax
100149db:	push   ebx
100149dc:	push   esi
100149dd:	push   edi
100149de:	lea    edx,[ebp-0x214]
100149e4:	push   edx
100149e5:	push   0x2001f
100149ea:	mov    eax,ecx
100149ec:	mov    ecx,DWORD PTR [ebp+0x8]
100149ef:	xor    esi,esi
100149f1:	push   esi
100149f2:	mov    DWORD PTR [ebp-0x220],eax
100149f8:	mov    eax,DWORD PTR [eax]
100149fa:	push   ecx
100149fb:	push   eax
100149fc:	mov    DWORD PTR [ebp-0x21c],ecx
10014a02:	mov    DWORD PTR [ebp-0x210],esi
10014a08:	mov    DWORD PTR [ebp-0x214],esi
10014a0e:	call   DWORD PTR ds:0x10067020
10014a14:	mov    ebx,DWORD PTR ds:0x10067014
10014a1a:	mov    edi,eax
10014a1c:	cmp    edi,esi
10014a1e:	jne    0x10014ae5
10014a24:	xor    eax,eax
10014a26:	cmp    DWORD PTR [ebp-0x210],esi
10014a2c:	je     0x10014a36
10014a2e:	push   DWORD PTR [ebp-0x210]
10014a34:	call   ebx
10014a36:	cmp    eax,esi
10014a38:	mov    ecx,DWORD PTR [ebp-0x214]
10014a3e:	mov    edi,eax
10014a40:	mov    DWORD PTR [ebp-0x210],ecx
10014a46:	jne    0x10014ae5
10014a4c:	mov    edi,DWORD PTR ds:0x10067004
10014a52:	lea    eax,[ebp-0x228]
10014a58:	push   eax
10014a59:	push   esi
10014a5a:	push   esi
10014a5b:	push   esi
10014a5c:	lea    eax,[ebp-0x218]
10014a62:	push   eax
10014a63:	lea    eax,[ebp-0x20c]
10014a69:	push   eax
10014a6a:	push   esi
10014a6b:	push   ecx
10014a6c:	jmp    0x10014aa9
10014a6e:	lea    eax,[ebp-0x20c]
10014a74:	push   eax
10014a75:	lea    ecx,[ebp-0x210]
10014a7b:	call   0x100149c8
10014a80:	cmp    eax,esi
10014a82:	mov    DWORD PTR [ebp-0x214],eax
10014a88:	jne    0x10014b08
10014a8a:	lea    eax,[ebp-0x228]
10014a90:	push   eax
10014a91:	push   esi
10014a92:	push   esi
10014a93:	push   esi
10014a94:	lea    eax,[ebp-0x218]
10014a9a:	push   eax
10014a9b:	lea    eax,[ebp-0x20c]
10014aa1:	push   eax
10014aa2:	push   esi
10014aa3:	push   DWORD PTR [ebp-0x210]
10014aa9:	mov    DWORD PTR [ebp-0x218],0x100
10014ab3:	call   edi
10014ab5:	test   eax,eax
10014ab7:	je     0x10014a6e
10014ab9:	cmp    DWORD PTR [ebp-0x210],esi
10014abf:	je     0x10014acf
10014ac1:	push   DWORD PTR [ebp-0x210]
10014ac7:	call   ebx
10014ac9:	mov    DWORD PTR [ebp-0x210],esi
10014acf:	push   DWORD PTR [ebp-0x21c]
10014ad5:	mov    eax,DWORD PTR [ebp-0x220]
10014adb:	push   DWORD PTR [eax]
10014add:	call   DWORD PTR ds:0x10067008
10014ae3:	mov    edi,eax
10014ae5:	cmp    DWORD PTR [ebp-0x210],esi
10014aeb:	je     0x10014af5
10014aed:	push   DWORD PTR [ebp-0x210]
10014af3:	call   ebx
10014af5:	mov    eax,edi
10014af7:	mov    ecx,DWORD PTR [ebp-0x8]
10014afa:	pop    edi
10014afb:	pop    esi
10014afc:	xor    ecx,ebp
10014afe:	pop    ebx
10014aff:	call   0x10043615
10014b04:	leave  
10014b05:	ret    0x4
10014b08:	cmp    DWORD PTR [ebp-0x210],esi
10014b0e:	je     0x10014b18
10014b10:	push   DWORD PTR [ebp-0x210]
10014b16:	call   ebx
10014b18:	mov    eax,DWORD PTR [ebp-0x214]
10014b1e:	jmp    0x10014af7
10014b20:	push   0x20
10014b22:	mov    eax,0x100608a3
10014b27:	call   0x10059e28
10014b2c:	xor    edi,edi
10014b2e:	cmp    DWORD PTR [ebp+0xc],edi
10014b31:	je     0x10014c40
10014b37:	cmp    DWORD PTR [ebp+0x10],edi
10014b3a:	je     0x10014c40
10014b40:	push   DWORD PTR [ebp+0xc]
10014b43:	mov    DWORD PTR [ebp-0x1c],edi
10014b46:	call   DWORD PTR ds:0x100670ac
10014b4c:	push   0x2
10014b4e:	lea    eax,[eax+eax*1+0x2]
10014b52:	xor    ecx,ecx
10014b54:	pop    esi
10014b55:	mov    DWORD PTR [ebp-0x20],eax
10014b58:	mov    edx,esi
10014b5a:	mul    edx
10014b5c:	seto   cl
10014b5f:	mov    DWORD PTR [ebp-0x14],edi
10014b62:	mov    DWORD PTR [ebp-0x4],edi
10014b65:	neg    ecx
10014b67:	or     ecx,eax
10014b69:	push   ecx
10014b6a:	call   0x100438d7
10014b6f:	pop    ecx
10014b70:	mov    DWORD PTR [ebp-0x14],eax
10014b73:	jmp    0x10014b80
10014b75:	mov    eax,0x10014b7b
10014b7a:	ret    
10014b7b:	push   0x2
10014b7d:	xor    edi,edi
10014b7f:	pop    esi
10014b80:	push   DWORD PTR [ebp+0x10]
10014b83:	mov    DWORD PTR [ebp-0x4],esi
10014b86:	mov    eax,DWORD PTR [ebp-0x14]
10014b89:	mov    DWORD PTR [ebp-0x2c],eax
10014b8c:	call   DWORD PTR ds:0x100670ac
10014b92:	lea    eax,[eax+eax*1+0x2]
10014b96:	xor    ecx,ecx
10014b98:	mov    DWORD PTR [ebp-0x24],eax
10014b9b:	mov    edx,esi
10014b9d:	mul    edx
10014b9f:	seto   cl
10014ba2:	mov    DWORD PTR [ebp-0x18],edi
10014ba5:	mov    BYTE PTR [ebp-0x4],0x3
10014ba9:	neg    ecx
10014bab:	or     ecx,eax
10014bad:	push   ecx
10014bae:	call   0x100438d7
10014bb3:	pop    ecx
10014bb4:	mov    DWORD PTR [ebp-0x18],eax
10014bb7:	mov    DWORD PTR [ebp-0x4],esi
10014bba:	jmp    0x10014bcb
10014bbc:	mov    DWORD PTR [ebp-0x4],0x2
10014bc3:	mov    eax,0x10014bc9
10014bc8:	ret    
10014bc9:	xor    edi,edi
10014bcb:	mov    BYTE PTR [ebp-0x4],0x5
10014bcf:	cmp    DWORD PTR [ebp-0x14],edi
10014bd2:	mov    esi,DWORD PTR [ebp-0x18]
10014bd5:	mov    DWORD PTR [ebp-0x28],esi
10014bd8:	je     0x10014c15
10014bda:	cmp    esi,edi
10014bdc:	je     0x10014c15
10014bde:	push   DWORD PTR [ebp-0x20]
10014be1:	push   DWORD PTR [ebp+0xc]
10014be4:	push   DWORD PTR [ebp-0x20]
10014be7:	push   DWORD PTR [ebp-0x14]
10014bea:	call   0x10014786
10014bef:	push   DWORD PTR [ebp-0x24]
10014bf2:	push   DWORD PTR [ebp+0x10]
10014bf5:	push   DWORD PTR [ebp-0x24]
10014bf8:	push   esi
10014bf9:	call   0x10014786
10014bfe:	mov    esi,DWORD PTR [ebp+0x8]
10014c01:	add    esp,0x20
10014c04:	lea    eax,[ebp-0x18]
10014c07:	push   eax
10014c08:	lea    eax,[ebp-0x14]
10014c0b:	push   eax
10014c0c:	call   0x10017af3
10014c11:	test   eax,eax
10014c13:	jne    0x10014c1e
10014c15:	mov    DWORD PTR [ebp-0x1c],0x8007000e
10014c1c:	jmp    0x10014c24
10014c1e:	mov    DWORD PTR [ebp-0x2c],edi
10014c21:	mov    DWORD PTR [ebp-0x28],edi
10014c24:	push   DWORD PTR [ebp-0x28]
10014c27:	call   0x10043178
10014c2c:	push   DWORD PTR [ebp-0x2c]
10014c2f:	call   0x10043178
10014c34:	xor    eax,eax
10014c36:	cmp    DWORD PTR [ebp-0x1c],edi
10014c39:	pop    ecx
10014c3a:	pop    ecx
10014c3b:	setge  al
10014c3e:	jmp    0x10014c42
10014c40:	xor    eax,eax
10014c42:	call   0x10059ecd
10014c47:	ret    0xc
10014c4a:	push   esi
10014c4b:	mov    esi,eax
10014c4d:	mov    eax,DWORD PTR [esi+0x8]
10014c50:	push   edi
10014c51:	xor    edi,edi
10014c53:	test   eax,eax
10014c55:	jle    0x10014c83
10014c57:	test   edi,edi
10014c59:	jl     0x10014c8d
10014c5b:	cmp    edi,eax
10014c5d:	jge    0x10014c8d
10014c5f:	mov    eax,DWORD PTR [esi]
10014c61:	push   DWORD PTR [eax+edi*4]
10014c64:	call   0x10043178
10014c69:	pop    ecx
10014c6a:	mov    eax,edi
10014c6c:	mov    ecx,esi
10014c6e:	call   0x10017b7c
10014c73:	push   DWORD PTR [eax]
10014c75:	call   0x10043178
10014c7a:	mov    eax,DWORD PTR [esi+0x8]
10014c7d:	inc    edi
10014c7e:	cmp    edi,eax
10014c80:	pop    ecx
10014c81:	jl     0x10014c57
10014c83:	call   0x10017b55
10014c88:	pop    edi
10014c89:	xor    eax,eax
10014c8b:	pop    esi
10014c8c:	ret    
10014c8d:	push   0x0
10014c8f:	push   0x0
10014c91:	push   0x1
10014c93:	push   0xc000008c
10014c98:	call   DWORD PTR ds:0x10067110
10014c9e:	int3   
10014c9f:	push   ebp
10014ca0:	mov    ebp,esp
10014ca2:	push   ecx
10014ca3:	cmp    eax,0x64
10014ca6:	jge    0x10014cad
10014ca8:	mov    eax,0x3e8
10014cad:	and    DWORD PTR [esi],0x0
10014cb0:	and    DWORD PTR [ebp-0x4],0x0
10014cb4:	push   0x2
10014cb6:	push   eax
10014cb7:	mov    DWORD PTR [esi+0x4],eax
10014cba:	lea    eax,[ebp-0x4]
10014cbd:	push   eax
10014cbe:	call   0x1001473a
10014cc3:	add    esp,0xc
10014cc6:	test   eax,eax
10014cc8:	jge    0x10014cce
10014cca:	xor    eax,eax
10014ccc:	jmp    0x10014cd7
10014cce:	push   DWORD PTR [ebp-0x4]
10014cd1:	call   DWORD PTR ds:0x10067430
10014cd7:	test   eax,eax
10014cd9:	mov    DWORD PTR [esi+0x8],eax
10014cdc:	je     0x10014ce2
10014cde:	and    WORD PTR [eax],0x0
10014ce2:	mov    eax,esi
10014ce4:	leave  
10014ce5:	ret    
10014ce6:	push   DWORD PTR [eax+0x8]
10014ce9:	call   DWORD PTR ds:0x10067434
10014cef:	ret    
10014cf0:	push   ebp
10014cf1:	mov    ebp,esp
10014cf3:	push   ecx
10014cf4:	mov    ecx,DWORD PTR [esi]
10014cf6:	lea    eax,[ecx+edi*1+0x1]
10014cfa:	cmp    eax,ecx
10014cfc:	push   ebx
10014cfd:	jle    0x10014d8e
10014d03:	cmp    eax,edi
10014d05:	jle    0x10014d8e
10014d0b:	cmp    eax,DWORD PTR [esi+0x4]
10014d0e:	jl     0x10014d4f
10014d10:	mov    ecx,DWORD PTR [esi+0x4]
10014d13:	cmp    ecx,0x3fffffff
10014d19:	jg     0x10014d8e
10014d1b:	add    ecx,ecx
10014d1d:	cmp    eax,ecx
10014d1f:	mov    DWORD PTR [esi+0x4],ecx
10014d22:	jge    0x10014d10
10014d24:	mov    ebx,DWORD PTR [esi+0x8]
10014d27:	and    DWORD PTR [ebp-0x4],0x0
10014d2b:	push   0x2
10014d2d:	push   ecx
10014d2e:	lea    eax,[ebp-0x4]
10014d31:	push   eax
10014d32:	call   0x1001473a
10014d37:	add    esp,0xc
10014d3a:	test   eax,eax
10014d3c:	jl     0x10014d8e
10014d3e:	push   DWORD PTR [ebp-0x4]
10014d41:	push   ebx
10014d42:	call   DWORD PTR ds:0x10067438
10014d48:	test   eax,eax
10014d4a:	je     0x10014d8e
10014d4c:	mov    DWORD PTR [esi+0x8],eax
10014d4f:	mov    eax,DWORD PTR [esi]
10014d51:	test   eax,eax
10014d53:	jl     0x10014d8e
10014d55:	mov    edx,DWORD PTR [esi+0x4]
10014d58:	cmp    eax,edx
10014d5a:	jge    0x10014d8e
10014d5c:	mov    ecx,edx
10014d5e:	sub    ecx,eax
10014d60:	cmp    ecx,edx
10014d62:	jg     0x10014d8e
10014d64:	lea    edx,[edi+edi*1]
10014d67:	push   edx
10014d68:	push   DWORD PTR [ebp+0x8]
10014d6b:	add    ecx,ecx
10014d6d:	push   ecx
10014d6e:	mov    ecx,DWORD PTR [esi+0x8]
10014d71:	lea    eax,[ecx+eax*2]
10014d74:	push   eax
10014d75:	call   0x10014786
10014d7a:	add    DWORD PTR [esi],edi
10014d7c:	mov    eax,DWORD PTR [esi]
10014d7e:	mov    ecx,DWORD PTR [esi+0x8]
10014d81:	and    WORD PTR [ecx+eax*2],0x0
10014d86:	xor    eax,eax
10014d88:	add    esp,0x10
10014d8b:	inc    eax
10014d8c:	jmp    0x10014d90
10014d8e:	xor    eax,eax
10014d90:	pop    ebx
10014d91:	leave  
10014d92:	ret    0x4
10014d95:	xor    eax,eax
10014d97:	inc    eax
10014d98:	ret    0x4
10014d9b:	push   esi
10014d9c:	lea    esi,[ecx+0x4]
10014d9f:	mov    eax,esi
10014da1:	mov    DWORD PTR [ecx],0x10070e24
10014da7:	call   0x10014c4a
10014dac:	mov    eax,esi
10014dae:	call   0x10014c4a
10014db3:	call   0x10017b55
10014db8:	pop    esi
10014db9:	ret    
10014dba:	push   esi
10014dbb:	mov    esi,ecx
10014dbd:	call   0x10014d9b
10014dc2:	test   BYTE PTR [esp+0x8],0x1
10014dc7:	je     0x10014dd0
10014dc9:	push   esi
10014dca:	call   0x10042fe2
10014dcf:	pop    ecx
10014dd0:	mov    eax,esi
10014dd2:	pop    esi
10014dd3:	ret    0x4
10014dd6:	push   0x4
10014dd8:	mov    eax,0x100612f7
10014ddd:	call   0x10059df5
10014de2:	cmp    DWORD PTR [ebp+0xc],0x0
10014de6:	je     0x10014e1e
10014de8:	cmp    DWORD PTR [ebp+0x10],0x0
10014dec:	je     0x10014e1e
10014dee:	call   DWORD PTR ds:0x10080ffc
10014df4:	and    DWORD PTR [ebp-0x10],0x0
10014df8:	push   DWORD PTR [ebp+0x10]
10014dfb:	mov    eax,DWORD PTR [ebp+0x8]
10014dfe:	push   DWORD PTR [ebp+0xc]
10014e01:	and    DWORD PTR [ebp-0x4],0x0
10014e05:	add    eax,0x4
10014e08:	push   eax
10014e09:	call   0x10014b20
10014e0e:	neg    eax
10014e10:	sbb    eax,eax
10014e12:	and    eax,0x7ff8fff2
10014e17:	add    eax,0x8007000e
10014e1c:	jmp    0x10014e23
10014e1e:	mov    eax,0x80070057
10014e23:	call   0x10059ecd
10014e28:	ret    0xc
10014e2b:	push   ebp
10014e2c:	sub    esp,0x404
10014e32:	lea    ebp,[esp-0x4]
10014e36:	mov    eax,ds:0x100801ac
10014e3b:	xor    eax,ebp
10014e3d:	mov    DWORD PTR [ebp+0x404],eax
10014e43:	push   0x1c
10014e45:	mov    eax,0x1006315a
10014e4a:	call   0x10059e28
10014e4f:	mov    eax,DWORD PTR [ebp+0x414]
10014e55:	mov    edi,ecx
10014e57:	mov    ebx,edx
10014e59:	mov    DWORD PTR [ebp-0x14],eax
10014e5c:	call   DWORD PTR ds:0x10080ffc
10014e62:	xor    esi,esi
10014e64:	mov    DWORD PTR [ebp-0x28],esi
10014e67:	mov    eax,DWORD PTR [ebp+0x410]
10014e6d:	mov    DWORD PTR [ebp-0x4],esi
10014e70:	mov    DWORD PTR [ebp-0x20],eax
10014e73:	mov    DWORD PTR [ebp-0x24],esi
10014e76:	mov    DWORD PTR [ebp+0x0],esi
10014e79:	push   0x2
10014e7b:	push   esi
10014e7c:	push   edi
10014e7d:	mov    BYTE PTR [ebp-0x4],0x1
10014e81:	call   DWORD PTR ds:0x10067104
10014e87:	cmp    eax,esi
10014e89:	mov    DWORD PTR [ebp-0x18],eax
10014e8c:	jne    0x10014e9a
10014e8e:	call   0x1000693b
10014e93:	mov    esi,eax
10014e95:	jmp    0x10014f85
10014e9a:	push   DWORD PTR [ebp-0x14]
10014e9d:	push   ebx
10014e9e:	push   eax
10014e9f:	call   DWORD PTR ds:0x100670a0
10014ea5:	mov    edi,eax
10014ea7:	cmp    edi,esi
10014ea9:	jne    0x10014eb5
10014eab:	call   0x1000693b
10014eb0:	jmp    0x10014f7a
10014eb5:	push   edi
10014eb6:	push   DWORD PTR [ebp-0x18]
10014eb9:	call   DWORD PTR ds:0x10067084
10014ebf:	cmp    eax,esi
10014ec1:	mov    DWORD PTR [ebp-0x1c],eax
10014ec4:	je     0x10014eab
10014ec6:	push   edi
10014ec7:	push   DWORD PTR [ebp-0x18]
10014eca:	call   DWORD PTR ds:0x10067094
10014ed0:	mov    edi,eax
10014ed2:	lea    eax,[edi+0x1]
10014ed5:	cmp    eax,edi
10014ed7:	mov    DWORD PTR [ebp-0x14],edi
10014eda:	jae    0x10014ef6
10014edc:	lea    eax,[ebp+0x4]
10014edf:	cmp    DWORD PTR [ebp+0x0],eax
10014ee2:	je     0x10014eec
10014ee4:	lea    eax,[ebp+0x0]
10014ee7:	call   0x10017d3f
10014eec:	mov    eax,0x8007000e
10014ef1:	jmp    0x10014f97
10014ef6:	push   0x2
10014ef8:	push   eax
10014ef9:	mov    BYTE PTR [ebp-0x4],0x2
10014efd:	call   0x100183ee
10014f02:	cmp    eax,0x400
10014f07:	pop    ecx
10014f08:	pop    ecx
10014f09:	jbe    0x10014f17
10014f0b:	push   eax
10014f0c:	lea    eax,[ebp+0x0]
10014f0f:	push   eax
10014f10:	call   0x10017fff
10014f15:	jmp    0x10014f1d
10014f17:	lea    eax,[ebp+0x4]
10014f1a:	mov    DWORD PTR [ebp+0x0],eax
10014f1d:	mov    DWORD PTR [ebp-0x4],0x1
10014f24:	jmp    0x10014f38
10014f26:	mov    DWORD PTR [ebp-0x4],0x1
10014f2d:	mov    eax,0x10014f33
10014f32:	ret    
10014f33:	mov    edi,DWORD PTR [ebp-0x14]
10014f36:	xor    esi,esi
10014f38:	mov    ebx,DWORD PTR [ebp+0x0]
10014f3b:	cmp    ebx,esi
10014f3d:	jne    0x10014f46
10014f3f:	mov    esi,0x8007000e
10014f44:	jmp    0x10014f7c
10014f46:	call   DWORD PTR ds:0x10080ffc
10014f4c:	push   edi
10014f4d:	push   ebx
10014f4e:	push   edi
10014f4f:	push   DWORD PTR [ebp-0x1c]
10014f52:	push   esi
10014f53:	push   eax
10014f54:	call   DWORD PTR ds:0x1006708c
10014f5a:	cmp    eax,esi
10014f5c:	je     0x10014eab
10014f62:	mov    ecx,DWORD PTR [ebp+0x0]
10014f65:	push   DWORD PTR [ebp+0x418]
10014f6b:	mov    WORD PTR [ecx+eax*2],si
10014f6f:	push   DWORD PTR [ebp+0x0]
10014f72:	lea    ecx,[ebp-0x24]
10014f75:	call   0x10015788
10014f7a:	mov    esi,eax
10014f7c:	push   DWORD PTR [ebp-0x18]
10014f7f:	call   DWORD PTR ds:0x10067140
10014f85:	lea    eax,[ebp+0x4]
10014f88:	cmp    DWORD PTR [ebp+0x0],eax
10014f8b:	je     0x10014f95
10014f8d:	lea    eax,[ebp+0x0]
10014f90:	call   0x10017d3f
10014f95:	mov    eax,esi
10014f97:	mov    ecx,DWORD PTR [ebp-0xc]
10014f9a:	mov    DWORD PTR fs:0x0,ecx
10014fa1:	pop    ecx
10014fa2:	pop    edi
10014fa3:	pop    esi
10014fa4:	pop    ebx
10014fa5:	mov    ecx,DWORD PTR [ebp+0x404]
10014fab:	xor    ecx,ebp
10014fad:	call   0x10043615
10014fb2:	add    ebp,0x408
10014fb8:	leave  
10014fb9:	ret    0xc
10014fbc:	mov    eax,DWORD PTR [esp+0x4]
10014fc0:	add    eax,0x4
10014fc3:	call   0x10014c4a
10014fc8:	ret    0x4
10014fcb:	push   esi
10014fcc:	mov    esi,eax
10014fce:	push   edi
10014fcf:	add    esi,0x4
10014fd2:	xor    edi,edi
10014fd4:	cmp    DWORD PTR [esi+0x8],edi
10014fd7:	jle    0x10014ff3
10014fd9:	mov    eax,DWORD PTR [esi]
10014fdb:	push   DWORD PTR [esp+0xc]
10014fdf:	mov    eax,DWORD PTR [eax+edi*4]
10014fe2:	push   eax
10014fe3:	call   DWORD PTR ds:0x10067130
10014fe9:	test   eax,eax
10014feb:	je     0x10014fff
10014fed:	inc    edi
10014fee:	cmp    edi,DWORD PTR [esi+0x8]
10014ff1:	jl     0x10014fd9
10014ff3:	or     eax,0xffffffff
10014ff6:	cmp    eax,0xffffffff
10014ff9:	jne    0x10015003
10014ffb:	xor    eax,eax
10014ffd:	jmp    0x1001500c
10014fff:	mov    eax,edi
10015001:	jmp    0x10014ff6
10015003:	mov    ecx,esi
10015005:	call   0x10017b7c
1001500a:	mov    eax,DWORD PTR [eax]
1001500c:	pop    edi
1001500d:	pop    esi
1001500e:	ret    0x4
10015011:	test   BYTE PTR ds:0x10083020,0x1
10015018:	jne    0x1001506d
1001501a:	or     DWORD PTR ds:0x10083020,0x1
10015021:	mov    DWORD PTR ds:0x10083024,0x1006dc9c
1001502b:	mov    WORD PTR ds:0x10083028,0x8
10015034:	mov    DWORD PTR ds:0x1008302c,0x1006dc98
1001503e:	mov    WORD PTR ds:0x10083030,0x4008
10015047:	mov    DWORD PTR ds:0x10083034,0x1006dc94
10015051:	mov    WORD PTR ds:0x10083038,0x13
1001505a:	mov    DWORD PTR ds:0x1008303c,0x1006dc90
10015064:	mov    WORD PTR ds:0x10083040,0x11
1001506d:	push   esi
1001506e:	xor    esi,esi
10015070:	push   DWORD PTR [esi*8+0x10083024]
10015077:	push   DWORD PTR [esp+0xc]
1001507b:	call   DWORD PTR ds:0x10067130
10015081:	test   eax,eax
10015083:	je     0x1001508f
10015085:	inc    esi
10015086:	cmp    esi,0x4
10015089:	jb     0x10015070
1001508b:	xor    eax,eax
1001508d:	pop    esi
1001508e:	ret    
1001508f:	mov    ax,WORD PTR [esi*8+0x10083028]
10015097:	mov    ecx,DWORD PTR [esp+0xc]
1001509b:	mov    WORD PTR [ecx],ax
1001509e:	xor    eax,eax
100150a0:	inc    eax
100150a1:	pop    esi
100150a2:	ret    
100150a3:	push   esi
100150a4:	xor    esi,esi
100150a6:	test   eax,eax
100150a8:	jne    0x100150ba
100150aa:	pop    esi
100150ab:	ret    
100150ac:	cmp    cx,WORD PTR [esp+0x8]
100150b1:	je     0x100150c4
100150b3:	push   eax
100150b4:	call   DWORD PTR ds:0x10067340
100150ba:	movzx  ecx,WORD PTR [eax]
100150bd:	test   cx,cx
100150c0:	jne    0x100150ac
100150c2:	jmp    0x100150c6
100150c4:	mov    esi,eax
100150c6:	mov    eax,esi
100150c8:	pop    esi
100150c9:	ret    
100150ca:	mov    eax,DWORD PTR [esi]
100150cc:	movzx  ecx,WORD PTR [eax]
100150cf:	cmp    ecx,0x9
100150d2:	jl     0x100150ee
100150d4:	cmp    ecx,0xa
100150d7:	jle    0x100150e3
100150d9:	cmp    ecx,0xd
100150dc:	je     0x100150e3
100150de:	cmp    ecx,0x20
100150e1:	jne    0x100150ee
100150e3:	push   eax
100150e4:	call   DWORD PTR ds:0x10067340
100150ea:	mov    DWORD PTR [esi],eax
100150ec:	jmp    0x100150ca
100150ee:	ret    
100150ef:	push   ebp
100150f0:	mov    ebp,esp
100150f2:	push   ecx
100150f3:	push   ecx
100150f4:	push   ebx
100150f5:	push   esi
100150f6:	mov    esi,ecx
100150f8:	mov    ebx,eax
100150fa:	call   0x100150ca
100150ff:	mov    eax,DWORD PTR [esi]
10015101:	movzx  ecx,WORD PTR [eax]
10015104:	test   cx,cx
10015107:	jne    0x10015113
10015109:	mov    eax,0x80020009
1001510e:	jmp    0x100151f5
10015113:	cmp    cx,0x27
10015117:	push   edi
10015118:	mov    DWORD PTR [ebp-0x8],ebx
1001511b:	jne    0x1001519c
1001511d:	mov    edi,DWORD PTR ds:0x10067340
10015123:	push   eax
10015124:	call   edi
10015126:	mov    DWORD PTR [esi],eax
10015128:	jmp    0x10015182
1001512a:	mov    eax,DWORD PTR [esi]
1001512c:	cmp    WORD PTR [eax],0x27
10015130:	jne    0x1001513b
10015132:	push   eax
10015133:	call   edi
10015135:	cmp    WORD PTR [eax],0x27
10015139:	jne    0x10015188
1001513b:	mov    eax,DWORD PTR [esi]
1001513d:	cmp    WORD PTR [eax],0x27
10015141:	jne    0x10015148
10015143:	push   eax
10015144:	call   edi
10015146:	mov    DWORD PTR [esi],eax
10015148:	mov    eax,DWORD PTR [esi]
1001514a:	push   eax
1001514b:	mov    DWORD PTR [ebp-0x4],eax
1001514e:	call   edi
10015150:	mov    edx,DWORD PTR [ebp-0x8]
10015153:	mov    DWORD PTR [esi],eax
10015155:	sub    eax,DWORD PTR [ebp-0x4]
10015158:	add    edx,0x2000
1001515e:	sar    eax,1
10015160:	lea    ecx,[ebx+eax*2+0x2]
10015164:	cmp    ecx,edx
10015166:	jae    0x100151f9
1001516c:	test   eax,eax
1001516e:	jle    0x10015180
10015170:	mov    ecx,DWORD PTR [ebp-0x4]
10015173:	mov    dx,WORD PTR [ecx]
10015176:	mov    WORD PTR [ebx],dx
10015179:	inc    ebx
1001517a:	inc    ebx
1001517b:	inc    ecx
1001517c:	inc    ecx
1001517d:	dec    eax
1001517e:	jne    0x10015173
10015180:	mov    eax,DWORD PTR [esi]
10015182:	cmp    WORD PTR [eax],0x0
10015186:	jne    0x1001512a
10015188:	mov    eax,DWORD PTR [esi]
1001518a:	cmp    WORD PTR [eax],0x0
1001518e:	je     0x100151f9
10015190:	and    WORD PTR [ebx],0x0
10015194:	push   DWORD PTR [esi]
10015196:	call   edi
10015198:	mov    DWORD PTR [esi],eax
1001519a:	jmp    0x100151f2
1001519c:	mov    eax,DWORD PTR [esi]
1001519e:	movzx  ecx,WORD PTR [eax]
100151a1:	cmp    ecx,0x9
100151a4:	jl     0x100151b5
100151a6:	cmp    ecx,0xa
100151a9:	jle    0x100151ee
100151ab:	cmp    ecx,0xd
100151ae:	je     0x100151ee
100151b0:	cmp    ecx,0x20
100151b3:	je     0x100151ee
100151b5:	push   eax
100151b6:	mov    edi,eax
100151b8:	call   DWORD PTR ds:0x10067340
100151be:	mov    edx,DWORD PTR [ebp-0x8]
100151c1:	mov    DWORD PTR [esi],eax
100151c3:	sub    eax,edi
100151c5:	sar    eax,1
100151c7:	lea    ecx,[ebx+eax*2+0x2]
100151cb:	add    edx,0x2000
100151d1:	cmp    ecx,edx
100151d3:	jae    0x100151f9
100151d5:	test   eax,eax
100151d7:	jle    0x100151e6
100151d9:	mov    cx,WORD PTR [edi]
100151dc:	mov    WORD PTR [ebx],cx
100151df:	inc    ebx
100151e0:	inc    ebx
100151e1:	inc    edi
100151e2:	inc    edi
100151e3:	dec    eax
100151e4:	jne    0x100151d9
100151e6:	mov    eax,DWORD PTR [esi]
100151e8:	cmp    WORD PTR [eax],0x0
100151ec:	jne    0x1001519c
100151ee:	and    WORD PTR [ebx],0x0
100151f2:	xor    eax,eax
100151f4:	pop    edi
100151f5:	pop    esi
100151f6:	pop    ebx
100151f7:	leave  
100151f8:	ret    
100151f9:	mov    eax,0x80020009
100151fe:	jmp    0x100151f4
10015200:	push   ebp
10015201:	lea    ebp,[esp-0x2108]
10015208:	mov    eax,0x2108
1001520d:	call   0x1004a070
10015212:	push   0xffffffff
10015214:	push   0x10060103
10015219:	mov    eax,fs:0x0
1001521f:	push   eax
10015220:	sub    esp,0x1c
10015223:	mov    eax,ds:0x100801ac
10015228:	xor    eax,ebp
1001522a:	mov    DWORD PTR [ebp+0x2104],eax
10015230:	push   ebx
10015231:	push   esi
10015232:	push   edi
10015233:	push   eax
10015234:	lea    eax,[ebp-0xc]
10015237:	mov    fs:0x0,eax
1001523d:	mov    DWORD PTR [ebp-0x10],esp
10015240:	mov    eax,DWORD PTR [ebp+0x2110]
10015246:	mov    DWORD PTR [ebp-0x1c],eax
10015249:	mov    eax,DWORD PTR [ebp+0x2114]
1001524f:	mov    esi,ecx
10015251:	mov    edi,edx
10015253:	mov    DWORD PTR [ebp-0x28],eax
10015256:	xor    ebx,ebx
10015258:	lea    eax,[ebp+0x104]
1001525e:	mov    DWORD PTR [ebp-0x24],esi
10015261:	mov    DWORD PTR [ebp-0x20],edi
10015264:	mov    DWORD PTR [ebp-0x14],ebx
10015267:	call   0x100150ef
1001526c:	cmp    eax,ebx
1001526e:	jl     0x10015529
10015274:	lea    eax,[ebp-0x14]
10015277:	push   eax
10015278:	lea    eax,[ebp+0x104]
1001527e:	push   eax
1001527f:	call   0x10015011
10015284:	test   eax,eax
10015286:	pop    ecx
10015287:	pop    ecx
10015288:	jne    0x10015294
1001528a:	mov    eax,0x80020009
1001528f:	jmp    0x10015529
10015294:	call   0x100150ca
10015299:	lea    eax,[ebp+0x104]
1001529f:	mov    ecx,esi
100152a1:	call   0x100150ef
100152a6:	cmp    eax,ebx
100152a8:	jl     0x10015529
100152ae:	movzx  eax,WORD PTR [ebp-0x14]
100152b2:	sub    eax,0x8
100152b5:	je     0x100154e2
100152bb:	sub    eax,0x9
100152be:	je     0x100153c8
100152c4:	dec    eax
100152c5:	dec    eax
100152c6:	je     0x1001539c
100152cc:	sub    eax,0x3ff5
100152d1:	jne    0x10015518
100152d7:	lea    eax,[ebp+0x104]
100152dd:	push   eax
100152de:	call   DWORD PTR ds:0x100670ac
100152e4:	inc    eax
100152e5:	inc    eax
100152e6:	mov    DWORD PTR [ebp+0x0],ebx
100152e9:	push   0x2
100152eb:	mov    DWORD PTR [ebp-0x4],ebx
100152ee:	push   eax
100152ef:	mov    BYTE PTR [ebp-0x4],0x1
100152f3:	call   0x100183ee
100152f8:	cmp    eax,0x100
100152fd:	pop    ecx
100152fe:	pop    ecx
100152ff:	jbe    0x1001530d
10015301:	push   eax
10015302:	lea    eax,[ebp+0x0]
10015305:	push   eax
10015306:	call   0x10017fff
1001530b:	jmp    0x1001531d
1001530d:	lea    eax,[ebp+0x4]
10015310:	mov    DWORD PTR [ebp+0x0],eax
10015313:	jmp    0x1001531d
10015315:	mov    eax,0x1001531b
1001531a:	ret    
1001531b:	xor    ebx,ebx
1001531d:	mov    esi,DWORD PTR [ebp+0x0]
10015320:	cmp    esi,ebx
10015322:	je     0x10015380
10015324:	cmp    WORD PTR [ebp+0x104],bx
1001532b:	lea    edi,[ebp+0x104]
10015331:	je     0x10015367
10015333:	mov    ebx,DWORD PTR ds:0x10067340
10015339:	push   edi
1001533a:	call   ebx
1001533c:	movzx  ecx,WORD PTR [edi]
1001533f:	cmp    cx,0x5c
10015343:	jne    0x10015358
10015345:	cmp    WORD PTR [eax],0x30
10015349:	jne    0x10015358
1001534b:	and    WORD PTR [esi],0x0
1001534f:	inc    esi
10015350:	push   eax
10015351:	inc    esi
10015352:	call   ebx
10015354:	mov    edi,eax
10015356:	jmp    0x1001535f
10015358:	mov    WORD PTR [esi],cx
1001535b:	inc    esi
1001535c:	inc    esi
1001535d:	inc    edi
1001535e:	inc    edi
1001535f:	cmp    WORD PTR [edi],0x0
10015363:	jne    0x10015339
10015365:	xor    ebx,ebx
10015367:	mov    WORD PTR [esi],bx
1001536a:	mov    WORD PTR [esi+0x2],bx
1001536e:	push   DWORD PTR [ebp+0x0]
10015371:	push   DWORD PTR [ebp-0x1c]
10015374:	push   DWORD PTR [ebp-0x20]
10015377:	call   0x1001497e
1001537c:	mov    esi,eax
1001537e:	jmp    0x10015383
10015380:	push   0xe
10015382:	pop    esi
10015383:	lea    eax,[ebp+0x4]
10015386:	cmp    DWORD PTR [ebp+0x0],eax
10015389:	je     0x1001550b
1001538f:	lea    eax,[ebp+0x0]
10015392:	call   0x10017d3f
10015397:	jmp    0x1001550b
1001539c:	call   DWORD PTR ds:0x10080ffc
100153a2:	lea    eax,[ebp-0x18]
100153a5:	push   eax
100153a6:	push   ebx
100153a7:	push   ebx
100153a8:	lea    eax,[ebp+0x104]
100153ae:	push   eax
100153af:	call   DWORD PTR ds:0x10067298
100153b5:	mov    eax,DWORD PTR [ebp-0x18]
100153b8:	mov    DWORD PTR [ebp-0x14],eax
100153bb:	push   0x4
100153bd:	lea    eax,[ebp-0x14]
100153c0:	push   eax
100153c1:	push   0x4
100153c3:	jmp    0x100154fd
100153c8:	lea    eax,[ebp+0x104]
100153ce:	push   eax
100153cf:	call   DWORD PTR ds:0x100670ac
100153d5:	test   al,0x1
100153d7:	mov    DWORD PTR [ebp-0x14],eax
100153da:	je     0x100153e6
100153dc:	mov    eax,0x80004005
100153e1:	jmp    0x10015529
100153e6:	cdq    
100153e7:	sub    eax,edx
100153e9:	mov    esi,eax
100153eb:	sar    esi,1
100153ed:	mov    DWORD PTR [ebp-0x18],esi
100153f0:	mov    DWORD PTR [ebp+0x0],ebx
100153f3:	push   0x1
100153f5:	mov    DWORD PTR [ebp-0x4],0x3
100153fc:	push   esi
100153fd:	mov    BYTE PTR [ebp-0x4],0x4
10015401:	call   0x100183ee
10015406:	cmp    eax,0x100
1001540b:	pop    ecx
1001540c:	pop    ecx
1001540d:	jbe    0x1001541b
1001540f:	push   eax
10015410:	lea    eax,[ebp+0x0]
10015413:	push   eax
10015414:	call   0x10017fff
10015419:	jmp    0x10015431
1001541b:	lea    eax,[ebp+0x4]
1001541e:	mov    DWORD PTR [ebp+0x0],eax
10015421:	jmp    0x10015431
10015423:	mov    eax,0x10015429
10015428:	ret    
10015429:	mov    edi,DWORD PTR [ebp-0x20]
1001542c:	mov    esi,DWORD PTR [ebp-0x18]
1001542f:	xor    ebx,ebx
10015431:	cmp    DWORD PTR [ebp+0x0],ebx
10015434:	jne    0x10015447
10015436:	lea    eax,[ebp+0x4]
10015439:	test   eax,eax
1001543b:	je     0x100153dc
1001543d:	lea    eax,[ebp+0x0]
10015440:	call   0x10017d3f
10015445:	jmp    0x100153dc
10015447:	push   esi
10015448:	push   ebx
10015449:	push   DWORD PTR [ebp+0x0]
1001544c:	call   0x10045dc0
10015451:	add    esp,0xc
10015454:	xor    esi,esi
10015456:	cmp    DWORD PTR [ebp-0x14],ebx
10015459:	jle    0x100154b9
1001545b:	movzx  ecx,WORD PTR [ebp+esi*2+0x104]
10015463:	mov    eax,esi
10015465:	cdq    
10015466:	sub    eax,edx
10015468:	sar    eax,1
1001546a:	add    eax,DWORD PTR [ebp+0x0]
1001546d:	movzx  edx,cx
10015470:	cmp    edx,0x30
10015473:	jl     0x1001549d
10015475:	cmp    edx,0x39
10015478:	jle    0x10015496
1001547a:	cmp    edx,0x40
1001547d:	jle    0x1001549d
1001547f:	cmp    edx,0x46
10015482:	jle    0x10015491
10015484:	add    edx,0xffffff9f
10015487:	cmp    edx,0x5
1001548a:	ja     0x1001549d
1001548c:	sub    cl,0x57
1001548f:	jmp    0x10015499
10015491:	sub    cl,0x37
10015494:	jmp    0x10015499
10015496:	sub    cl,0x30
10015499:	mov    dl,cl
1001549b:	jmp    0x1001549f
1001549d:	xor    dl,dl
1001549f:	mov    edi,esi
100154a1:	and    edi,0x1
100154a4:	shl    edi,0x2
100154a7:	push   0x4
100154a9:	pop    ecx
100154aa:	sub    ecx,edi
100154ac:	shl    dl,cl
100154ae:	or     BYTE PTR [eax],dl
100154b0:	inc    esi
100154b1:	cmp    esi,DWORD PTR [ebp-0x14]
100154b4:	jl     0x1001545b
100154b6:	mov    edi,DWORD PTR [ebp-0x20]
100154b9:	push   DWORD PTR [ebp-0x18]
100154bc:	mov    eax,DWORD PTR [edi]
100154be:	push   DWORD PTR [ebp+0x0]
100154c1:	push   0x3
100154c3:	push   ebx
100154c4:	push   DWORD PTR [ebp-0x1c]
100154c7:	push   eax
100154c8:	call   DWORD PTR ds:0x1006700c
100154ce:	mov    esi,eax
100154d0:	lea    eax,[ebp+0x4]
100154d3:	cmp    DWORD PTR [ebp+0x0],eax
100154d6:	je     0x1001550b
100154d8:	lea    eax,[ebp+0x0]
100154db:	call   0x10017d3f
100154e0:	jmp    0x1001550b
100154e2:	lea    eax,[ebp+0x104]
100154e8:	push   eax
100154e9:	call   DWORD PTR ds:0x100670ac
100154ef:	lea    eax,[eax+eax*1+0x2]
100154f3:	push   eax
100154f4:	lea    eax,[ebp+0x104]
100154fa:	push   eax
100154fb:	push   0x1
100154fd:	push   ebx
100154fe:	push   DWORD PTR [ebp-0x1c]
10015501:	push   DWORD PTR [edi]
10015503:	call   DWORD PTR ds:0x1006700c
10015509:	mov    esi,eax
1001550b:	cmp    esi,ebx
1001550d:	je     0x10015518
1001550f:	mov    eax,esi
10015511:	call   0x10014804
10015516:	jmp    0x10015529
10015518:	mov    eax,DWORD PTR [ebp-0x28]
1001551b:	mov    ecx,DWORD PTR [ebp-0x24]
1001551e:	call   0x100150ef
10015523:	cmp    eax,ebx
10015525:	jl     0x10015529
10015527:	xor    eax,eax
10015529:	mov    ecx,DWORD PTR [ebp-0xc]
1001552c:	mov    DWORD PTR fs:0x0,ecx
10015533:	pop    ecx
10015534:	pop    edi
10015535:	pop    esi
10015536:	pop    ebx
10015537:	mov    ecx,DWORD PTR [ebp+0x2104]
1001553d:	xor    ecx,ebp
1001553f:	call   0x10043615
10015544:	add    ebp,0x2108
1001554a:	leave  
1001554b:	ret    0x8
1001554e:	push   esi
1001554f:	mov    esi,0x1006dcc8
10015554:	push   DWORD PTR [esi]
10015556:	push   DWORD PTR [esp+0xc]
1001555a:	call   DWORD PTR ds:0x10067130
10015560:	test   eax,eax
10015562:	je     0x10015576
10015564:	add    esi,0x4
10015567:	cmp    esi,0x1006dcf8
1001556d:	jl     0x10015554
1001556f:	xor    eax,eax
10015571:	inc    eax
10015572:	pop    esi
10015573:	ret    0x4
10015576:	xor    eax,eax
10015578:	jmp    0x10015572
1001557a:	push   ebp
1001557b:	mov    ebp,esp
1001557d:	push   ecx
1001557e:	xor    eax,eax
10015580:	push   eax
10015581:	push   eax
10015582:	push   eax
10015583:	push   eax
10015584:	push   eax
10015585:	push   eax
10015586:	push   eax
10015587:	lea    ecx,[ebp-0x4]
1001558a:	push   ecx
1001558b:	push   eax
1001558c:	push   eax
1001558d:	push   eax
1001558e:	push   DWORD PTR [ebp+0x8]
10015591:	mov    DWORD PTR [ebp-0x4],eax
10015594:	call   DWORD PTR ds:0x10067018
1001559a:	test   eax,eax
1001559c:	je     0x100155a2
1001559e:	xor    eax,eax
100155a0:	jmp    0x100155ab
100155a2:	xor    eax,eax
100155a4:	cmp    eax,DWORD PTR [ebp-0x4]
100155a7:	sbb    eax,eax
100155a9:	neg    eax
100155ab:	leave  
100155ac:	ret    0x4
100155af:	mov    eax,0x2004
100155b4:	call   0x1004a070
100155b9:	mov    eax,ds:0x100801ac
100155be:	xor    eax,esp
100155c0:	mov    DWORD PTR [esp+0x2000],eax
100155c7:	cmp    WORD PTR [edi],0x3d
100155cb:	push   esi
100155cc:	mov    esi,ecx
100155ce:	jne    0x100155fc
100155d0:	mov    eax,edi
100155d2:	call   0x100150ef
100155d7:	test   eax,eax
100155d9:	jl     0x100155fe
100155db:	call   0x100150ca
100155e0:	lea    eax,[esp+0x4]
100155e4:	mov    ecx,esi
100155e6:	call   0x100150ef
100155eb:	test   eax,eax
100155ed:	jl     0x100155fe
100155ef:	mov    eax,edi
100155f1:	mov    ecx,esi
100155f3:	call   0x100150ef
100155f8:	test   eax,eax
100155fa:	jl     0x100155fe
100155fc:	xor    eax,eax
100155fe:	mov    ecx,DWORD PTR [esp+0x2004]
10015605:	pop    esi
10015606:	xor    ecx,esp
10015608:	call   0x10043615
1001560d:	add    esp,0x2004
10015613:	ret    
10015614:	push   0x60
10015616:	mov    eax,0x100623a5
1001561b:	call   0x10059e5e
10015620:	mov    eax,DWORD PTR [ebp+0x8]
10015623:	test   eax,eax
10015625:	mov    edi,ecx
10015627:	mov    DWORD PTR [ebp-0x54],eax
1001562a:	mov    DWORD PTR [ebp-0x64],edi
1001562d:	je     0x1001577b
10015633:	test   edi,edi
10015635:	je     0x1001577b
1001563b:	and    DWORD PTR [edi],0x0
1001563e:	push   eax
1001563f:	call   DWORD PTR ds:0x100670ac
10015645:	add    eax,eax
10015647:	lea    esi,[ebp-0x60]
1001564a:	call   0x10014c9f
1001564f:	xor    ecx,ecx
10015651:	mov    DWORD PTR [ebp-0x4],ecx
10015654:	cmp    DWORD PTR [ebp-0x58],ecx
10015657:	jne    0x1001566a
10015659:	push   ecx
1001565a:	call   DWORD PTR ds:0x10067434
10015660:	mov    eax,0x8007000e
10015665:	jmp    0x10015780
1001566a:	mov    eax,DWORD PTR [ebp-0x54]
1001566d:	mov    DWORD PTR [ebx],eax
1001566f:	cmp    WORD PTR [eax],cx
10015672:	mov    DWORD PTR [ebp-0x54],ecx
10015675:	je     0x100156b5
10015677:	mov    eax,DWORD PTR [ebx]
10015679:	cmp    WORD PTR [eax],0x25
1001567d:	push   eax
1001567e:	jne    0x1001568f
10015680:	call   DWORD PTR ds:0x10067340
10015686:	mov    DWORD PTR [ebx],eax
10015688:	cmp    WORD PTR [eax],0x25
1001568c:	jne    0x100156cf
1001568e:	push   eax
1001568f:	xor    edi,edi
10015691:	inc    edi
10015692:	lea    esi,[ebp-0x60]
10015695:	call   0x10014cf0
1001569a:	test   eax,eax
1001569c:	je     0x1001576f
100156a2:	push   DWORD PTR [ebx]
100156a4:	call   DWORD PTR ds:0x10067340
100156aa:	mov    DWORD PTR [ebx],eax
100156ac:	cmp    WORD PTR [eax],0x0
100156b0:	jne    0x10015677
100156b2:	mov    edi,DWORD PTR [ebp-0x64]
100156b5:	mov    eax,DWORD PTR [ebp-0x58]
100156b8:	and    DWORD PTR [ebp-0x58],0x0
100156bc:	mov    DWORD PTR [edi],eax
100156be:	push   DWORD PTR [ebp-0x58]
100156c1:	call   DWORD PTR ds:0x10067434
100156c7:	mov    eax,DWORD PTR [ebp-0x54]
100156ca:	jmp    0x10015780
100156cf:	push   0x25
100156d1:	call   0x100150a3
100156d6:	test   eax,eax
100156d8:	pop    ecx
100156d9:	mov    DWORD PTR [ebp-0x68],eax
100156dc:	je     0x10015757
100156de:	mov    ecx,DWORD PTR [ebx]
100156e0:	sub    eax,ecx
100156e2:	sar    eax,1
100156e4:	cmp    eax,0x1f
100156e7:	jg     0x10015763
100156e9:	push   eax
100156ea:	push   ecx
100156eb:	lea    eax,[ebp-0x50]
100156ee:	push   0x20
100156f0:	push   eax
100156f1:	call   0x10046561
100156f6:	push   eax
100156f7:	call   0x10001f45
100156fc:	add    esp,0x14
100156ff:	lea    eax,[ebp-0x50]
10015702:	push   eax
10015703:	mov    eax,DWORD PTR [ebx+0x4]
10015706:	call   0x10014fcb
1001570b:	mov    esi,eax
1001570d:	test   esi,esi
1001570f:	je     0x10015757
10015711:	call   DWORD PTR ds:0x10080ffc
10015717:	and    DWORD PTR [ebp-0x6c],0x0
1001571b:	push   esi
1001571c:	mov    BYTE PTR [ebp-0x4],0x1
10015720:	call   DWORD PTR ds:0x100670ac
10015726:	push   esi
10015727:	mov    edi,eax
10015729:	lea    esi,[ebp-0x60]
1001572c:	call   0x10014cf0
10015731:	test   eax,eax
10015733:	mov    BYTE PTR [ebp-0x4],0x0
10015737:	je     0x1001576f
10015739:	mov    esi,DWORD PTR [ebp-0x68]
1001573c:	cmp    DWORD PTR [ebx],esi
1001573e:	je     0x100156a2
10015744:	push   DWORD PTR [ebx]
10015746:	call   DWORD PTR ds:0x10067340
1001574c:	cmp    eax,esi
1001574e:	mov    DWORD PTR [ebx],eax
10015750:	jne    0x10015744
10015752:	jmp    0x100156a2
10015757:	mov    DWORD PTR [ebp-0x54],0x80020009
1001575e:	jmp    0x100156be
10015763:	mov    DWORD PTR [ebp-0x54],0x80004005
1001576a:	jmp    0x100156be
1001576f:	mov    DWORD PTR [ebp-0x54],0x8007000e
10015776:	jmp    0x100156be
1001577b:	mov    eax,0x80004003
10015780:	call   0x10059ee1
10015785:	ret    0x4
10015788:	push   ebp
10015789:	lea    ebp,[esp-0x1f8c]
10015790:	mov    eax,0x200c
10015795:	call   0x1004a070
1001579a:	mov    eax,ds:0x100801ac
1001579f:	xor    eax,ebp
100157a1:	mov    DWORD PTR [ebp+0x1f88],eax
100157a7:	mov    eax,DWORD PTR [ebp+0x1f94]
100157ad:	push   ebx
100157ae:	push   esi
100157af:	push   edi
100157b0:	mov    esi,ecx
100157b2:	xor    edi,edi
100157b4:	push   eax
100157b5:	lea    ecx,[ebp-0x80]
100157b8:	mov    ebx,esi
100157ba:	mov    DWORD PTR [ebp-0x80],edi
100157bd:	call   0x10015614
100157c2:	mov    ebx,eax
100157c4:	cmp    ebx,edi
100157c6:	jl     0x100158a5
100157cc:	mov    eax,DWORD PTR [ebp-0x80]
100157cf:	mov    DWORD PTR [esi],eax
100157d1:	jmp    0x10015874
100157d6:	lea    eax,[ebp-0x78]
100157d9:	mov    ecx,esi
100157db:	call   0x100150ef
100157e0:	mov    ebx,eax
100157e2:	cmp    ebx,edi
100157e4:	jl     0x1001589a
100157ea:	xor    ebx,ebx
100157ec:	push   DWORD PTR [ebx*8+0x10070788]
100157f3:	lea    eax,[ebp-0x78]
100157f6:	push   eax
100157f7:	call   DWORD PTR ds:0x10067130
100157fd:	test   eax,eax
100157ff:	je     0x10015850
10015801:	inc    ebx
10015802:	cmp    ebx,0xe
10015805:	jb     0x100157ec
10015807:	mov    DWORD PTR [ebp-0x7c],edi
1001580a:	cmp    DWORD PTR [ebp-0x7c],edi
1001580d:	je     0x1001587f
1001580f:	lea    eax,[ebp-0x78]
10015812:	mov    ecx,esi
10015814:	call   0x100150ef
10015819:	mov    ebx,eax
1001581b:	cmp    ebx,edi
1001581d:	jl     0x1001589a
1001581f:	cmp    WORD PTR [ebp-0x78],0x7b
10015824:	jne    0x1001587f
10015826:	cmp    DWORD PTR [ebp+0x1f98],edi
1001582c:	lea    eax,[ebp-0x78]
1001582f:	mov    ecx,esi
10015831:	je     0x1001585c
10015833:	mov    edi,DWORD PTR [esi]
10015835:	push   0x0
10015837:	push   DWORD PTR [ebp+0x1f98]
1001583d:	push   DWORD PTR [ebp-0x7c]
10015840:	push   eax
10015841:	call   0x100158bf
10015846:	mov    ebx,eax
10015848:	test   ebx,ebx
1001584a:	jl     0x10015886
1001584c:	xor    edi,edi
1001584e:	jmp    0x1001586d
10015850:	mov    eax,DWORD PTR [ebx*8+0x1007078c]
10015857:	mov    DWORD PTR [ebp-0x7c],eax
1001585a:	jmp    0x1001580a
1001585c:	push   edi
1001585d:	push   edi
1001585e:	push   DWORD PTR [ebp-0x7c]
10015861:	push   eax
10015862:	call   0x100158bf
10015867:	mov    ebx,eax
10015869:	cmp    ebx,edi
1001586b:	jl     0x1001589a
1001586d:	call   0x100150ca
10015872:	mov    eax,DWORD PTR [esi]
10015874:	cmp    WORD PTR [eax],di
10015877:	jne    0x100157d6
1001587d:	jmp    0x1001589a
1001587f:	mov    ebx,0x80020009
10015884:	jmp    0x1001589a
10015886:	push   0x0
10015888:	push   0x0
1001588a:	push   DWORD PTR [ebp-0x7c]
1001588d:	lea    eax,[ebp-0x78]
10015890:	push   eax
10015891:	mov    ecx,esi
10015893:	mov    DWORD PTR [esi],edi
10015895:	call   0x100158bf
1001589a:	push   DWORD PTR [ebp-0x80]
1001589d:	call   DWORD PTR ds:0x10067434
100158a3:	mov    eax,ebx
100158a5:	mov    ecx,DWORD PTR [ebp+0x1f88]
100158ab:	pop    edi
100158ac:	pop    esi
100158ad:	xor    ecx,ebp
100158af:	pop    ebx
100158b0:	call   0x10043615
100158b5:	add    ebp,0x1f8c
100158bb:	leave  
100158bc:	ret    0x8
100158bf:	push   ebp
100158c0:	mov    ebp,esp
100158c2:	and    esp,0xfffffff8
100158c5:	push   0xffffffff
100158c7:	push   0x10060865
100158cc:	mov    eax,fs:0x0
100158d2:	push   eax
100158d3:	sub    esp,0x438
100158d9:	mov    eax,ds:0x100801ac
100158de:	xor    eax,esp
100158e0:	mov    DWORD PTR [esp+0x430],eax
100158e7:	push   ebx
100158e8:	push   esi
100158e9:	push   edi
100158ea:	mov    eax,ds:0x100801ac
100158ef:	xor    eax,esp
100158f1:	push   eax
100158f2:	lea    eax,[esp+0x448]
100158f9:	mov    fs:0x0,eax
100158ff:	mov    eax,DWORD PTR [ebp+0xc]
10015902:	mov    edi,DWORD PTR [ebp+0x8]
10015905:	and    DWORD PTR [esp+0x10],0x0
1001590a:	mov    DWORD PTR [esp+0x18],ecx
1001590e:	mov    DWORD PTR [esp+0x1c],eax
10015912:	mov    eax,DWORD PTR [ebp+0x14]
10015915:	and    DWORD PTR [esp+0x450],0x0
1001591d:	mov    DWORD PTR [esp+0x24],eax
10015921:	mov    eax,edi
10015923:	call   0x100150ef
10015928:	mov    esi,eax
1001592a:	test   esi,esi
1001592c:	jl     0x10015d84
10015932:	cmp    WORD PTR [edi],0x7d
10015936:	je     0x10015d82
1001593c:	mov    esi,DWORD PTR ds:0x10067130
10015942:	push   0x1006dc4c
10015947:	push   edi
10015948:	mov    DWORD PTR [esp+0x28],0x1
10015950:	call   esi
10015952:	mov    ebx,eax
10015954:	neg    ebx
10015956:	push   0x1006dc70
1001595b:	sbb    ebx,ebx
1001595d:	push   edi
1001595e:	inc    ebx
1001595f:	call   esi
10015961:	test   eax,eax
10015963:	je     0x1001596d
10015965:	test   ebx,ebx
10015967:	je     0x10015a39
1001596d:	mov    ecx,DWORD PTR [esp+0x18]
10015971:	mov    eax,edi
10015973:	call   0x100150ef
10015978:	mov    esi,eax
1001597a:	test   esi,esi
1001597c:	jl     0x10015d71
10015982:	cmp    DWORD PTR [ebp+0x10],0x0
10015986:	je     0x10015a39
1001598c:	push   0x5c
1001598e:	mov    eax,edi
10015990:	call   0x100150a3
10015995:	test   eax,eax
10015997:	pop    ecx
10015998:	jne    0x10015e47
1001599e:	push   edi
1001599f:	call   0x1001554e
100159a4:	test   eax,eax
100159a6:	je     0x100159ba
100159a8:	mov    eax,DWORD PTR [esp+0x1c]
100159ac:	push   edi
100159ad:	lea    ecx,[esp+0x18]
100159b1:	mov    DWORD PTR [esp+0x18],eax
100159b5:	call   0x100149c8
100159ba:	test   ebx,ebx
100159bc:	je     0x10015a39
100159be:	mov    ecx,DWORD PTR [esp+0x18]
100159c2:	mov    eax,edi
100159c4:	call   0x100150ef
100159c9:	mov    esi,eax
100159cb:	test   esi,esi
100159cd:	jl     0x10015d71
100159d3:	mov    ecx,DWORD PTR [esp+0x18]
100159d7:	call   0x100155af
100159dc:	mov    esi,eax
100159de:	test   esi,esi
100159e0:	jl     0x10015d71
100159e6:	cmp    WORD PTR [edi],0x7b
100159ea:	jne    0x10015a2a
100159ec:	push   edi
100159ed:	call   DWORD PTR ds:0x100670ac
100159f3:	cmp    eax,0x1
100159f6:	jne    0x10015a2a
100159f8:	mov    ecx,DWORD PTR [esp+0x18]
100159fc:	push   0x0
100159fe:	push   DWORD PTR [ebp+0x10]
10015a01:	push   DWORD PTR [esp+0x18]
10015a05:	push   edi
10015a06:	call   0x100158bf
10015a0b:	mov    esi,eax
10015a0d:	test   esi,esi
10015a0f:	jl     0x10015d71
10015a15:	mov    ecx,DWORD PTR [esp+0x18]
10015a19:	mov    eax,edi
10015a1b:	call   0x100150ef
10015a20:	mov    esi,eax
10015a22:	test   esi,esi
10015a24:	jl     0x10015d71
10015a2a:	cmp    WORD PTR [edi],0x7d
10015a2e:	jne    0x1001593c
10015a34:	jmp    0x10015d71
10015a39:	push   0x1006dc5c
10015a3e:	push   edi
10015a3f:	call   DWORD PTR ds:0x10067130
10015a45:	test   eax,eax
10015a47:	jne    0x10015a62
10015a49:	and    DWORD PTR [esp+0x20],eax
10015a4d:	mov    ecx,DWORD PTR [esp+0x18]
10015a51:	mov    eax,edi
10015a53:	call   0x100150ef
10015a58:	mov    esi,eax
10015a5a:	test   esi,esi
10015a5c:	jl     0x10015d71
10015a62:	push   0x1006dc88
10015a67:	push   edi
10015a68:	xor    ebx,ebx
10015a6a:	call   DWORD PTR ds:0x10067130
10015a70:	test   eax,eax
10015a72:	jne    0x10015b5e
10015a78:	mov    ecx,DWORD PTR [esp+0x18]
10015a7c:	lea    eax,[esp+0x234]
10015a83:	call   0x100150ef
10015a88:	mov    esi,eax
10015a8a:	test   esi,esi
10015a8c:	jl     0x10015d71
10015a92:	mov    ecx,DWORD PTR [esp+0x18]
10015a96:	mov    eax,edi
10015a98:	call   0x100150ef
10015a9d:	mov    esi,eax
10015a9f:	test   esi,esi
10015aa1:	jl     0x10015d71
10015aa7:	cmp    WORD PTR [edi],0x3d
10015aab:	jne    0x10015e47
10015ab1:	cmp    DWORD PTR [ebp+0x10],ebx
10015ab4:	je     0x10015af2
10015ab6:	mov    eax,DWORD PTR [esp+0x1c]
10015aba:	mov    ecx,DWORD PTR [esp+0x18]
10015abe:	mov    BYTE PTR [esp+0x450],0x1
10015ac6:	mov    DWORD PTR [esp+0x14],eax
10015aca:	push   edi
10015acb:	lea    eax,[esp+0x238]
10015ad2:	push   eax
10015ad3:	lea    edx,[esp+0x1c]
10015ad7:	call   0x10015200
10015adc:	mov    esi,eax
10015ade:	cmp    esi,ebx
10015ae0:	jl     0x10015e62
10015ae6:	mov    BYTE PTR [esp+0x450],bl
10015aed:	jmp    0x100159e6
10015af2:	cmp    DWORD PTR [ebp+0x14],ebx
10015af5:	jne    0x10015b4c
10015af7:	cmp    DWORD PTR [esp+0x20],ebx
10015afb:	je     0x10015b4c
10015afd:	lea    eax,[esp+0x14]
10015b01:	push   eax
10015b02:	push   0x20006
10015b07:	push   ebx
10015b08:	push   ebx
10015b09:	push   DWORD PTR [esp+0x2c]
10015b0d:	mov    DWORD PTR [esp+0x28],ebx
10015b11:	call   DWORD PTR ds:0x10067020
10015b17:	cmp    eax,ebx
10015b19:	jne    0x10015d6a
10015b1f:	mov    ebx,DWORD PTR [esp+0x14]
10015b23:	lea    eax,[esp+0x234]
10015b2a:	push   eax
10015b2b:	push   ebx
10015b2c:	call   DWORD PTR ds:0x1006701c
10015b32:	test   eax,eax
10015b34:	je     0x10015b3f
10015b36:	cmp    eax,0x2
10015b39:	jne    0x10015e6b
10015b3f:	test   ebx,ebx
10015b41:	je     0x10015b4a
10015b43:	push   ebx
10015b44:	call   DWORD PTR ds:0x10067014
10015b4a:	xor    ebx,ebx
10015b4c:	mov    ecx,DWORD PTR [esp+0x18]
10015b50:	call   0x100155af
10015b55:	mov    esi,eax
10015b57:	cmp    esi,ebx
10015b59:	jmp    0x10015a24
10015b5e:	push   0x5c
10015b60:	mov    eax,edi
10015b62:	call   0x100150a3
10015b67:	test   eax,eax
10015b69:	pop    ecx
10015b6a:	jne    0x10015e86
10015b70:	cmp    DWORD PTR [ebp+0x10],ebx
10015b73:	je     0x10015c71
10015b79:	mov    esi,DWORD PTR ds:0x10067020
10015b7f:	lea    eax,[esp+0x14]
10015b83:	push   eax
10015b84:	push   0x2001f
10015b89:	push   ebx
10015b8a:	push   edi
10015b8b:	push   DWORD PTR [esp+0x2c]
10015b8f:	mov    DWORD PTR [esp+0x28],ebx
10015b93:	call   esi
10015b95:	cmp    eax,ebx
10015b97:	jne    0x10015bbd
10015b99:	xor    eax,eax
10015b9b:	cmp    DWORD PTR [esp+0x10],ebx
10015b9f:	je     0x10015bab
10015ba1:	push   DWORD PTR [esp+0x10]
10015ba5:	call   DWORD PTR ds:0x10067014
10015bab:	test   eax,eax
10015bad:	mov    ebx,DWORD PTR [esp+0x14]
10015bb1:	mov    DWORD PTR [esp+0x10],ebx
10015bb5:	je     0x10015c3d
10015bbb:	jmp    0x10015bc1
10015bbd:	mov    ebx,DWORD PTR [esp+0x10]
10015bc1:	and    DWORD PTR [esp+0x14],0x0
10015bc6:	lea    eax,[esp+0x14]
10015bca:	push   eax
10015bcb:	push   0x20019
10015bd0:	push   0x0
10015bd2:	push   edi
10015bd3:	push   DWORD PTR [esp+0x2c]
10015bd7:	call   esi
10015bd9:	xor    esi,esi
10015bdb:	test   eax,eax
10015bdd:	jne    0x10015bf6
10015bdf:	cmp    ebx,esi
10015be1:	je     0x10015bea
10015be3:	push   ebx
10015be4:	call   DWORD PTR ds:0x10067014
10015bea:	cmp    eax,esi
10015bec:	mov    ebx,DWORD PTR [esp+0x14]
10015bf0:	mov    DWORD PTR [esp+0x10],ebx
10015bf4:	je     0x10015c3d
10015bf6:	lea    eax,[esp+0x28]
10015bfa:	push   eax
10015bfb:	lea    eax,[esp+0x18]
10015bff:	push   eax
10015c00:	push   esi
10015c01:	push   0x2001f
10015c06:	push   esi
10015c07:	push   esi
10015c08:	push   esi
10015c09:	push   edi
10015c0a:	push   DWORD PTR [esp+0x3c]
10015c0e:	mov    DWORD PTR [esp+0x38],esi
10015c12:	call   DWORD PTR ds:0x10067010
10015c18:	cmp    eax,esi
10015c1a:	jne    0x10015e8c
10015c20:	xor    eax,eax
10015c22:	cmp    ebx,esi
10015c24:	je     0x10015c2d
10015c26:	push   ebx
10015c27:	call   DWORD PTR ds:0x10067014
10015c2d:	cmp    eax,esi
10015c2f:	mov    ebx,DWORD PTR [esp+0x14]
10015c33:	mov    DWORD PTR [esp+0x10],ebx
10015c37:	jne    0x10015e8c
10015c3d:	mov    ecx,DWORD PTR [esp+0x18]
10015c41:	mov    eax,edi
10015c43:	call   0x100150ef
10015c48:	mov    esi,eax
10015c4a:	test   esi,esi
10015c4c:	jl     0x10015d71
10015c52:	cmp    WORD PTR [edi],0x3d
10015c56:	jne    0x100159e6
10015c5c:	mov    ecx,DWORD PTR [esp+0x18]
10015c60:	push   edi
10015c61:	push   0x0
10015c63:	lea    edx,[esp+0x18]
10015c67:	call   0x10015200
10015c6c:	jmp    0x100159dc
10015c71:	cmp    DWORD PTR [ebp+0x14],ebx
10015c74:	jne    0x10015cb4
10015c76:	lea    eax,[esp+0x14]
10015c7a:	push   eax
10015c7b:	push   0x20019
10015c80:	push   ebx
10015c81:	push   edi
10015c82:	push   DWORD PTR [esp+0x2c]
10015c86:	mov    DWORD PTR [esp+0x28],ebx
10015c8a:	call   DWORD PTR ds:0x10067020
10015c90:	cmp    eax,ebx
10015c92:	jne    0x10015cae
10015c94:	xor    eax,eax
10015c96:	cmp    DWORD PTR [esp+0x10],ebx
10015c9a:	je     0x10015ca6
10015c9c:	push   DWORD PTR [esp+0x10]
10015ca0:	call   DWORD PTR ds:0x10067014
10015ca6:	mov    ecx,DWORD PTR [esp+0x14]
10015caa:	mov    DWORD PTR [esp+0x10],ecx
10015cae:	mov    DWORD PTR [esp+0x14],eax
10015cb2:	jmp    0x10015cbc
10015cb4:	mov    DWORD PTR [esp+0x14],0x2
10015cbc:	cmp    DWORD PTR [esp+0x14],ebx
10015cc0:	je     0x10015cc9
10015cc2:	mov    DWORD PTR [ebp+0x14],0x1
10015cc9:	push   0xffffffff
10015ccb:	push   edi
10015ccc:	lea    eax,[esp+0x34]
10015cd0:	push   0x104
10015cd5:	push   eax
10015cd6:	call   0x10046561
10015cdb:	push   eax
10015cdc:	call   0x10001f45
10015ce1:	mov    ecx,DWORD PTR [esp+0x2c]
10015ce5:	add    esp,0x14
10015ce8:	mov    eax,edi
10015cea:	call   0x100150ef
10015cef:	mov    esi,eax
10015cf1:	test   esi,esi
10015cf3:	jl     0x10015d71
10015cf5:	mov    ecx,DWORD PTR [esp+0x18]
10015cf9:	call   0x100155af
10015cfe:	mov    esi,eax
10015d00:	test   esi,esi
10015d02:	jl     0x10015d71
10015d04:	cmp    WORD PTR [edi],0x7b
10015d08:	jne    0x10015d46
10015d0a:	push   edi
10015d0b:	call   DWORD PTR ds:0x100670ac
10015d11:	cmp    eax,0x1
10015d14:	jne    0x10015d46
10015d16:	push   DWORD PTR [ebp+0x14]
10015d19:	mov    ecx,DWORD PTR [esp+0x1c]
10015d1d:	push   0x0
10015d1f:	push   DWORD PTR [esp+0x18]
10015d23:	push   edi
10015d24:	call   0x100158bf
10015d29:	mov    esi,eax
10015d2b:	test   esi,esi
10015d2d:	jge    0x10015d35
10015d2f:	cmp    DWORD PTR [ebp+0x14],0x0
10015d33:	je     0x10015d71
10015d35:	mov    ecx,DWORD PTR [esp+0x18]
10015d39:	mov    eax,edi
10015d3b:	call   0x100150ef
10015d40:	mov    esi,eax
10015d42:	test   esi,esi
10015d44:	jl     0x10015d71
10015d46:	mov    eax,DWORD PTR [esp+0x24]
10015d4a:	mov    DWORD PTR [ebp+0x14],eax
10015d4d:	mov    eax,DWORD PTR [esp+0x14]
10015d51:	cmp    eax,0x2
10015d54:	je     0x10015a2a
10015d5a:	xor    ebx,ebx
10015d5c:	cmp    eax,ebx
10015d5e:	je     0x10015daa
10015d60:	cmp    DWORD PTR [esp+0x24],ebx
10015d64:	jne    0x10015a2a
10015d6a:	call   0x10014804
10015d6f:	mov    esi,eax
10015d71:	cmp    DWORD PTR [esp+0x10],0x0
10015d76:	je     0x10015d82
10015d78:	push   DWORD PTR [esp+0x10]
10015d7c:	call   DWORD PTR ds:0x10067014
10015d82:	mov    eax,esi
10015d84:	mov    ecx,DWORD PTR [esp+0x448]
10015d8b:	mov    DWORD PTR fs:0x0,ecx
10015d92:	pop    ecx
10015d93:	pop    edi
10015d94:	pop    esi
10015d95:	pop    ebx
10015d96:	mov    ecx,DWORD PTR [esp+0x430]
10015d9d:	xor    ecx,esp
10015d9f:	call   0x10043615
10015da4:	mov    esp,ebp
10015da6:	pop    ebp
10015da7:	ret    0x10
10015daa:	cmp    DWORD PTR [esp+0x24],ebx
10015dae:	je     0x10015ded
10015db0:	push   DWORD PTR [esp+0x10]
10015db4:	call   0x1001557a
10015db9:	test   eax,eax
10015dbb:	je     0x10015ded
10015dbd:	lea    eax,[esp+0x2c]
10015dc1:	push   eax
10015dc2:	call   0x1001554e
10015dc7:	test   eax,eax
10015dc9:	je     0x10015a2a
10015dcf:	cmp    DWORD PTR [esp+0x20],0x0
10015dd4:	je     0x10015a2a
10015dda:	lea    eax,[esp+0x2c]
10015dde:	push   eax
10015ddf:	lea    ecx,[esp+0x14]
10015de3:	call   0x100149c8
10015de8:	jmp    0x10015a2a
10015ded:	push   DWORD PTR [esp+0x10]
10015df1:	call   0x1001557a
10015df6:	cmp    DWORD PTR [esp+0x10],ebx
10015dfa:	mov    DWORD PTR [esp+0x14],eax
10015dfe:	je     0x10015e16
10015e00:	push   DWORD PTR [esp+0x10]
10015e04:	call   DWORD PTR ds:0x10067014
10015e0a:	cmp    eax,ebx
10015e0c:	mov    DWORD PTR [esp+0x10],ebx
10015e10:	jne    0x10015ea5
10015e16:	cmp    DWORD PTR [esp+0x20],ebx
10015e1a:	je     0x10015a2a
10015e20:	cmp    DWORD PTR [esp+0x14],0x0
10015e25:	jne    0x10015a2a
10015e2b:	lea    eax,[esp+0x2c]
10015e2f:	push   eax
10015e30:	push   DWORD PTR [esp+0x20]
10015e34:	call   DWORD PTR ds:0x10067008
10015e3a:	test   eax,eax
10015e3c:	jne    0x10015d6a
10015e42:	jmp    0x10015a2a
10015e47:	cmp    DWORD PTR [esp+0x10],0x0
10015e4c:	je     0x10015e58
10015e4e:	push   DWORD PTR [esp+0x10]
10015e52:	call   DWORD PTR ds:0x10067014
10015e58:	mov    eax,0x80020009
10015e5d:	jmp    0x10015d84
10015e62:	cmp    DWORD PTR [esp+0x10],ebx
10015e66:	jmp    0x10015d76
10015e6b:	call   0x10014804
10015e70:	test   ebx,ebx
10015e72:	mov    esi,eax
10015e74:	je     0x10015d71
10015e7a:	push   ebx
10015e7b:	call   DWORD PTR ds:0x10067014
10015e81:	jmp    0x10015d71
10015e86:	cmp    DWORD PTR [esp+0x10],ebx
10015e8a:	jmp    0x10015e4c
10015e8c:	call   0x10014804
10015e91:	cmp    ebx,esi
10015e93:	mov    edi,eax
10015e95:	je     0x10015e9e
10015e97:	push   ebx
10015e98:	call   DWORD PTR ds:0x10067014
10015e9e:	mov    eax,edi
10015ea0:	jmp    0x10015d84
10015ea5:	call   0x10014804
10015eaa:	jmp    0x10015d84
10015eaf:	push   ebp
10015eb0:	lea    ebp,[esp-0x9cc]
10015eb7:	sub    esp,0xa4c
10015ebd:	mov    eax,ds:0x100801ac
10015ec2:	xor    eax,ebp
10015ec4:	mov    DWORD PTR [ebp+0x9c8],eax
10015eca:	mov    eax,DWORD PTR [ebp+0x9d4]
10015ed0:	push   ebx
10015ed1:	push   esi
10015ed2:	push   edi
10015ed3:	xor    edi,edi
10015ed5:	mov    esi,edx
10015ed7:	cmp    esi,edi
10015ed9:	mov    ebx,ecx
10015edb:	mov    DWORD PTR [ebp-0x6c],eax
10015ede:	mov    DWORD PTR [ebp-0x80],0x10070e24
10015ee5:	mov    DWORD PTR [ebp-0x7c],edi
10015ee8:	mov    DWORD PTR [ebp-0x78],edi
10015eeb:	mov    DWORD PTR [ebp-0x74],edi
10015eee:	je     0x10015f08
10015ef0:	jmp    0x10015f02
10015ef2:	push   DWORD PTR [esi+0x4]
10015ef5:	push   eax
10015ef6:	lea    eax,[ebp-0x80]
10015ef9:	push   eax
10015efa:	call   0x10014dd6
10015eff:	add    esi,0x8
10015f02:	mov    eax,DWORD PTR [esi]
10015f04:	cmp    eax,edi
10015f06:	jne    0x10015ef2
10015f08:	mov    eax,DWORD PTR [ebx]
10015f0a:	lea    ecx,[ebp-0x80]
10015f0d:	push   ecx
10015f0e:	mov    ecx,ebx
10015f10:	call   DWORD PTR [eax+0x14]
10015f13:	cmp    eax,edi
10015f15:	jge    0x10015f3d
10015f17:	mov    esi,eax
10015f19:	lea    ecx,[ebp-0x80]
10015f1c:	call   0x10014d9b
10015f21:	mov    ecx,DWORD PTR [ebp+0x9c8]
10015f27:	pop    edi
10015f28:	mov    eax,esi
10015f2a:	pop    esi
10015f2b:	xor    ecx,ebp
10015f2d:	pop    ebx
10015f2e:	call   0x10043615
10015f33:	add    ebp,0x9cc
10015f39:	leave  
10015f3a:	ret    0x8
10015f3d:	call   DWORD PTR ds:0x10080ffc
10015f43:	mov    ebx,DWORD PTR ds:0x10082a8c
10015f49:	mov    esi,0x104
10015f4e:	push   esi
10015f4f:	lea    eax,[ebp+0x7c0]
10015f55:	push   eax
10015f56:	push   ebx
10015f57:	call   DWORD PTR ds:0x1006711c
10015f5d:	cmp    eax,edi
10015f5f:	jne    0x10015f68
10015f61:	call   0x1000693b
10015f66:	jmp    0x10015f17
10015f68:	cmp    eax,esi
10015f6a:	jne    0x10015f73
10015f6c:	mov    esi,0x8007007a
10015f71:	jmp    0x10015f19
10015f73:	lea    edx,[ebp+0x7c0]
10015f79:	mov    ecx,0x208
10015f7e:	lea    eax,[ebp-0x68]
10015f81:	call   0x100148dd
10015f86:	cmp    ebx,edi
10015f88:	je     0x10015f9a
10015f8a:	push   edi
10015f8b:	call   DWORD PTR ds:0x10067134
10015f91:	cmp    ebx,eax
10015f93:	je     0x10015f9a
10015f95:	lea    eax,[ebp-0x68]
10015f98:	jmp    0x10015ff0
10015f9a:	lea    eax,[ebp-0x68]
10015f9d:	push   eax
10015f9e:	lea    eax,[ebp+0x3aa]
10015fa4:	push   0x20b
10015fa9:	push   eax
10015faa:	mov    WORD PTR [ebp+0x3a8],0x22
10015fb3:	call   0x1001475a
10015fb8:	add    esp,0xc
10015fbb:	test   al,al
10015fbd:	jne    0x10015fc9
10015fbf:	mov    esi,0x80004005
10015fc4:	jmp    0x10015f19
10015fc9:	lea    eax,[ebp+0x3a8]
10015fcf:	push   eax
10015fd0:	call   DWORD PTR ds:0x100670ac
10015fd6:	add    eax,eax
10015fd8:	mov    WORD PTR [ebp+eax*1+0x3a8],0x22
10015fe2:	mov    WORD PTR [ebp+eax*1+0x3aa],di
10015fea:	lea    eax,[ebp+0x3a8]
10015ff0:	push   eax
10015ff1:	push   0x100707f8
10015ff6:	lea    eax,[ebp-0x80]
10015ff9:	push   eax
10015ffa:	call   0x10014dd6
10015fff:	cmp    eax,edi
10016001:	jl     0x10015f17
10016007:	lea    eax,[ebp-0x68]
1001600a:	push   eax
1001600b:	push   0x10070808
10016010:	lea    eax,[ebp-0x80]
10016013:	push   eax
10016014:	call   0x10014dd6
10016019:	cmp    eax,edi
1001601b:	jl     0x10015f17
10016021:	call   DWORD PTR ds:0x10080ffc
10016027:	cmp    DWORD PTR [ebp+0x9d8],edi
1001602d:	mov    edx,DWORD PTR [ebp-0x6c]
10016030:	je     0x10016044
10016032:	cmp    edx,edi
10016034:	je     0x1001603a
10016036:	push   0x1
10016038:	jmp    0x10016049
1001603a:	mov    eax,0x80070057
1001603f:	jmp    0x10015f17
10016044:	cmp    edx,edi
10016046:	je     0x1001603a
10016048:	push   edi
10016049:	push   0x10070820
1001604e:	lea    eax,[ebp-0x80]
10016051:	push   eax
10016052:	lea    ecx,[ebp+0x7c0]
10016058:	call   0x10014e2b
1001605d:	jmp    0x10015f17
10016062:	push   ebp
10016063:	lea    ebp,[esp-0x9c8]
1001606a:	sub    esp,0xa48
10016070:	mov    eax,ds:0x100801ac
10016075:	xor    eax,ebp
10016077:	mov    DWORD PTR [ebp+0x9c4],eax
1001607d:	push   ebx
1001607e:	push   esi
1001607f:	push   edi
10016080:	xor    edi,edi
10016082:	mov    esi,edx
10016084:	cmp    esi,edi
10016086:	mov    ebx,ecx
10016088:	mov    DWORD PTR [ebp-0x80],0x10070e24
1001608f:	mov    DWORD PTR [ebp-0x7c],edi
10016092:	mov    DWORD PTR [ebp-0x78],edi
10016095:	mov    DWORD PTR [ebp-0x74],edi
10016098:	je     0x100160b2
1001609a:	jmp    0x100160ac
1001609c:	push   DWORD PTR [esi+0x4]
1001609f:	push   eax
100160a0:	lea    eax,[ebp-0x80]
100160a3:	push   eax
100160a4:	call   0x10014dd6
100160a9:	add    esi,0x8
100160ac:	mov    eax,DWORD PTR [esi]
100160ae:	cmp    eax,edi
100160b0:	jne    0x1001609c
100160b2:	mov    eax,DWORD PTR [ebx]
100160b4:	lea    ecx,[ebp-0x80]
100160b7:	push   ecx
100160b8:	mov    ecx,ebx
100160ba:	call   DWORD PTR [eax+0x14]
100160bd:	cmp    eax,edi
100160bf:	jge    0x100160e7
100160c1:	mov    esi,eax
100160c3:	lea    ecx,[ebp-0x80]
100160c6:	call   0x10014d9b
100160cb:	mov    ecx,DWORD PTR [ebp+0x9c4]
100160d1:	pop    edi
100160d2:	mov    eax,esi
100160d4:	pop    esi
100160d5:	xor    ecx,ebp
100160d7:	pop    ebx
100160d8:	call   0x10043615
100160dd:	add    ebp,0x9c8
100160e3:	leave  
100160e4:	ret    0x8
100160e7:	call   DWORD PTR ds:0x10080ffc
100160ed:	mov    ebx,DWORD PTR ds:0x10082a8c
100160f3:	mov    esi,0x104
100160f8:	push   esi
100160f9:	lea    eax,[ebp+0x7bc]
100160ff:	push   eax
10016100:	push   ebx
10016101:	call   DWORD PTR ds:0x1006711c
10016107:	cmp    eax,edi
10016109:	jne    0x10016112
1001610b:	call   0x1000693b
10016110:	jmp    0x100160c1
10016112:	cmp    eax,esi
10016114:	jne    0x1001611d
10016116:	mov    esi,0x8007007a
1001611b:	jmp    0x100160c3
1001611d:	lea    edx,[ebp+0x7bc]
10016123:	mov    ecx,0x208
10016128:	lea    eax,[ebp-0x6c]
1001612b:	call   0x100148dd
10016130:	cmp    ebx,edi
10016132:	je     0x10016144
10016134:	push   edi
10016135:	call   DWORD PTR ds:0x10067134
1001613b:	cmp    ebx,eax
1001613d:	je     0x10016144
1001613f:	lea    eax,[ebp-0x6c]
10016142:	jmp    0x1001619a
10016144:	lea    eax,[ebp-0x6c]
10016147:	push   eax
10016148:	lea    eax,[ebp+0x3a6]
1001614e:	push   0x20b
10016153:	push   eax
10016154:	mov    WORD PTR [ebp+0x3a4],0x22
1001615d:	call   0x1001475a
10016162:	add    esp,0xc
10016165:	test   al,al
10016167:	jne    0x10016173
10016169:	mov    esi,0x80004005
1001616e:	jmp    0x100160c3
10016173:	lea    eax,[ebp+0x3a4]
10016179:	push   eax
1001617a:	call   DWORD PTR ds:0x100670ac
10016180:	add    eax,eax
10016182:	mov    WORD PTR [ebp+eax*1+0x3a4],0x22
1001618c:	mov    WORD PTR [ebp+eax*1+0x3a6],di
10016194:	lea    eax,[ebp+0x3a4]
1001619a:	push   eax
1001619b:	push   0x100707f8
100161a0:	lea    eax,[ebp-0x80]
100161a3:	push   eax
100161a4:	call   0x10014dd6
100161a9:	cmp    eax,edi
100161ab:	jl     0x100160c1
100161b1:	lea    eax,[ebp-0x6c]
100161b4:	push   eax
100161b5:	push   0x10070808
100161ba:	lea    eax,[ebp-0x80]
100161bd:	push   eax
100161be:	call   0x10014dd6
100161c3:	cmp    eax,edi
100161c5:	jl     0x100160c1
100161cb:	call   DWORD PTR ds:0x10080ffc
100161d1:	cmp    DWORD PTR [ebp+0x9d4],edi
100161d7:	je     0x100161fb
100161d9:	push   0x1
100161db:	movzx  edx,WORD PTR [ebp+0x9d0]
100161e2:	push   0x10070820
100161e7:	lea    eax,[ebp-0x80]
100161ea:	push   eax
100161eb:	lea    ecx,[ebp+0x7bc]
100161f1:	call   0x10014e2b
100161f6:	jmp    0x100160c1
100161fb:	push   edi
100161fc:	jmp    0x100161db
100161fe:	mov    edx,DWORD PTR [esp+0x8]
10016202:	mov    eax,DWORD PTR [esp+0x4]
10016206:	push   esi
10016207:	xor    esi,esi
10016209:	mov    ecx,eax
1001620b:	and    ecx,0x1
1001620e:	or     ecx,esi
10016210:	push   esi
10016211:	jne    0x1001621e
10016213:	push   0x2
10016215:	push   edx
10016216:	push   eax
10016217:	call   0x1005f840
1001621c:	jmp    0x1001622c
1001621e:	push   0x3
10016220:	push   edx
10016221:	push   eax
10016222:	call   0x1004f990
10016227:	add    eax,0x1
1001622a:	adc    edx,esi
1001622c:	cmp    eax,0x4
1001622f:	jne    0x10016209
10016231:	cmp    edx,esi
10016233:	jne    0x10016209
10016235:	xor    edx,edx
10016237:	pop    esi
10016238:	ret    
10016239:	push   esi
1001623a:	mov    esi,ecx
1001623c:	mov    eax,DWORD PTR [esi]
1001623e:	test   eax,eax
10016240:	je     0x10016247
10016242:	call   0x10016487
10016247:	and    DWORD PTR [esi],0x0
1001624a:	pop    esi
1001624b:	ret    
1001624c:	push   edi
1001624d:	mov    edi,eax
1001624f:	mov    eax,DWORD PTR [esi]
10016251:	test   eax,eax
10016253:	je     0x1001625a
10016255:	call   0x10016487
1001625a:	cmp    BYTE PTR [esp+0x8],0x0
1001625f:	mov    DWORD PTR [esi],edi
10016261:	je     0x10016271
10016263:	test   edi,edi
10016265:	je     0x10016271
10016267:	add    edi,0x20
1001626a:	push   edi
1001626b:	call   DWORD PTR ds:0x100670b0
10016271:	pop    edi
10016272:	ret    0x4
10016275:	push   ebp
10016276:	mov    ebp,esp
10016278:	and    esp,0xfffffff8
1001627b:	sub    esp,0x14
1001627e:	push   ebx
1001627f:	push   esi
10016280:	push   edi
10016281:	mov    esi,0xf8
10016286:	push   esi
10016287:	call   0x10043196
1001628c:	xor    edi,edi
1001628e:	cmp    eax,edi
10016290:	pop    ecx
10016291:	je     0x1001629d
10016293:	mov    DWORD PTR [eax+0xf0],edi
10016299:	mov    ebx,eax
1001629b:	jmp    0x1001629f
1001629d:	xor    ebx,ebx
1001629f:	push   esi
100162a0:	push   edi
100162a1:	push   ebx
100162a2:	call   0x10045dc0
100162a7:	mov    eax,DWORD PTR [ebp+0x8]
100162aa:	add    esp,0xc
100162ad:	push   0x1e
100162af:	pop    ecx
100162b0:	mov    DWORD PTR [ebx+0x20],edi
100162b3:	mov    DWORD PTR [ebx+0x1c],edi
100162b6:	push   0xf
100162b8:	mov    DWORD PTR [ebx],eax
100162ba:	mov    BYTE PTR [ebx+0x25],0x0
100162be:	mov    BYTE PTR [ebx+0x24],0x0
100162c2:	mov    BYTE PTR [ebx+0x26],0x1
100162c6:	mov    BYTE PTR [ebx+0x27],0x0
100162ca:	lea    edi,[ebx+0x3c]
100162cd:	mov    esi,0x10082cf0
100162d2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100162d4:	pop    ecx
100162d5:	lea    edi,[ebx+0xb4]
100162db:	mov    esi,0x10082d68
100162e0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100162e2:	mov    esi,DWORD PTR ds:0x10067114
100162e8:	xor    edi,edi
100162ea:	push   edi
100162eb:	push   edi
100162ec:	push   0x1
100162ee:	push   edi
100162ef:	call   esi
100162f1:	push   edi
100162f2:	push   0x1
100162f4:	push   0x1
100162f6:	push   edi
100162f7:	mov    DWORD PTR [ebx+0x28],eax
100162fa:	call   esi
100162fc:	push   edi
100162fd:	push   edi
100162fe:	push   0x1
10016300:	push   edi
10016301:	mov    DWORD PTR [ebx+0x2c],eax
10016304:	call   esi
10016306:	push   edi
10016307:	push   edi
10016308:	push   0x1
1001630a:	push   edi
1001630b:	mov    DWORD PTR [ebx+0x30],eax
1001630e:	call   esi
10016310:	mov    DWORD PTR [ebx+0x34],eax
10016313:	lea    eax,[ebx+0x4]
10016316:	push   eax
10016317:	mov    DWORD PTR [ebx+0x38],edi
1001631a:	call   DWORD PTR ds:0x10067118
10016320:	mov    esi,0x10082cc4
10016325:	push   esi
10016326:	call   DWORD PTR ds:0x100670f8
1001632c:	mov    eax,DWORD PTR [ebp+0x8]
1001632f:	mov    DWORD PTR [esp+0xc],eax
10016333:	lea    eax,[esp+0xc]
10016337:	push   eax
10016338:	lea    edi,[esp+0x18]
1001633c:	mov    DWORD PTR [esp+0x14],ebx
10016340:	call   0x10017bfc
10016345:	cmp    BYTE PTR [eax+0x8],0x0
10016349:	jne    0x10016350
1001634b:	call   0x10002068
10016350:	push   esi
10016351:	call   DWORD PTR ds:0x100670fc
10016357:	pop    edi
10016358:	pop    esi
10016359:	mov    eax,ebx
1001635b:	pop    ebx
1001635c:	mov    esp,ebp
1001635e:	pop    ebp
1001635f:	ret    
10016360:	push   edi
10016361:	push   DWORD PTR [esi+0x28]
10016364:	mov    edi,DWORD PTR ds:0x10067078
1001636a:	call   edi
1001636c:	push   DWORD PTR [esi+0x2c]
1001636f:	call   edi
10016371:	push   DWORD PTR [esi+0x30]
10016374:	call   edi
10016376:	push   DWORD PTR [esi+0x34]
10016379:	call   edi
1001637b:	lea    eax,[esi+0x4]
1001637e:	push   eax
1001637f:	call   DWORD PTR ds:0x10067120
10016385:	mov    edi,DWORD PTR [esi+0x1c]
10016388:	test   edi,edi
1001638a:	je     0x10016399
1001638c:	push   edi
1001638d:	call   0x10024de9
10016392:	push   edi
10016393:	call   0x10042fe2
10016398:	pop    ecx
10016399:	and    DWORD PTR [esi+0x1c],0x0
1001639d:	push   DWORD PTR [esi+0xf0]
100163a3:	call   0x10042fe2
100163a8:	push   esi
100163a9:	call   0x10042fe2
100163ae:	pop    ecx
100163af:	pop    ecx
100163b0:	pop    edi
100163b1:	ret    
100163b2:	push   ebp
100163b3:	mov    ebp,esp
100163b5:	sub    esp,0x18
100163b8:	push   ebx
100163b9:	mov    ebx,DWORD PTR ds:0x100670f8
100163bf:	push   esi
100163c0:	push   edi
100163c1:	push   0x10082cc4
100163c6:	call   ebx
100163c8:	lea    eax,[ebp+0x8]
100163cb:	push   eax
100163cc:	lea    eax,[ebp-0xc]
100163cf:	call   0x10017e0a
100163d4:	cmp    DWORD PTR [ebp-0xc],0x0
100163d8:	mov    eax,ds:0x10082eec
100163dd:	mov    esi,eax
100163df:	je     0x100163ea
100163e1:	cmp    DWORD PTR [ebp-0xc],0x10082ee8
100163e8:	je     0x100163f4
100163ea:	call   0x10043605
100163ef:	mov    eax,ds:0x10082eec
100163f4:	mov    ecx,DWORD PTR [ebp-0x8]
100163f7:	cmp    ecx,esi
100163f9:	je     0x10016408
100163fb:	mov    edx,DWORD PTR [ebp+0x8]
100163fe:	cmp    edx,DWORD PTR [ecx+0xc]
10016401:	jb     0x10016408
10016403:	lea    ecx,[ebp-0xc]
10016406:	jmp    0x10016415
10016408:	mov    DWORD PTR [ebp-0x10],eax
1001640b:	mov    DWORD PTR [ebp-0x14],0x10082ee8
10016412:	lea    ecx,[ebp-0x14]
10016415:	mov    esi,DWORD PTR [ecx]
10016417:	test   esi,esi
10016419:	mov    edi,DWORD PTR [ecx+0x4]
1001641c:	mov    DWORD PTR [ebp-0x10],eax
1001641f:	je     0x10016429
10016421:	cmp    esi,0x10082ee8
10016427:	je     0x1001642e
10016429:	call   0x10043605
1001642e:	cmp    edi,DWORD PTR [ebp-0x10]
10016431:	je     0x1001644b
10016433:	test   esi,esi
10016435:	jne    0x1001643c
10016437:	call   0x10043605
1001643c:	cmp    edi,DWORD PTR [esi+0x4]
1001643f:	jne    0x10016446
10016441:	call   0x10043605
10016446:	mov    esi,DWORD PTR [edi+0x10]
10016449:	jmp    0x1001644d
1001644b:	xor    esi,esi
1001644d:	test   esi,esi
1001644f:	je     0x10016475
10016451:	lea    edi,[esi+0x4]
10016454:	push   edi
10016455:	call   ebx
10016457:	mov    bl,BYTE PTR [esi+0x27]
1001645a:	test   bl,bl
1001645c:	jne    0x10016468
1001645e:	lea    eax,[esi+0x20]
10016461:	push   eax
10016462:	call   DWORD PTR ds:0x100670b0
10016468:	push   edi
10016469:	call   DWORD PTR ds:0x100670fc
1001646f:	test   bl,bl
10016471:	je     0x10016475
10016473:	xor    esi,esi
10016475:	push   0x10082cc4
1001647a:	call   DWORD PTR ds:0x100670fc
10016480:	pop    edi
10016481:	mov    eax,esi
10016483:	pop    esi
10016484:	pop    ebx
10016485:	leave  
10016486:	ret    
10016487:	push   esi
10016488:	mov    esi,eax
1001648a:	test   esi,esi
1001648c:	je     0x100164be
1001648e:	push   ebx
1001648f:	push   ebp
10016490:	push   edi
10016491:	mov    edi,DWORD PTR ds:0x100670f8
10016497:	mov    ebp,0x10082cc4
1001649c:	push   ebp
1001649d:	call   edi
1001649f:	lea    ebx,[esi+0x4]
100164a2:	push   ebx
100164a3:	call   edi
100164a5:	add    esi,0x20
100164a8:	push   esi
100164a9:	call   DWORD PTR ds:0x100670bc
100164af:	mov    esi,DWORD PTR ds:0x100670fc
100164b5:	push   ebx
100164b6:	call   esi
100164b8:	push   ebp
100164b9:	call   esi
100164bb:	pop    edi
100164bc:	pop    ebp
100164bd:	pop    ebx
100164be:	pop    esi
100164bf:	ret    
100164c0:	add    eax,0x4
100164c3:	push   eax
100164c4:	call   DWORD PTR ds:0x100670f8
100164ca:	ret    
100164cb:	push   0x8
100164cd:	mov    eax,0x1006312f
100164d2:	call   0x10059e28
100164d7:	mov    esi,DWORD PTR [ebp+0x8]
100164da:	and    DWORD PTR [ebp-0x4],0x0
100164de:	push   0x54
100164e0:	call   0x10043196
100164e5:	pop    ecx
100164e6:	mov    DWORD PTR [ebp-0x14],eax
100164e9:	test   eax,eax
100164eb:	mov    BYTE PTR [ebp-0x4],0x1
100164ef:	je     0x100164fa
100164f1:	push   esi
100164f2:	push   eax
100164f3:	call   0x10024d5c
100164f8:	jmp    0x100164fc
100164fa:	xor    eax,eax
100164fc:	mov    DWORD PTR [esi+0x1c],eax
100164ff:	call   0x10059ecd
10016504:	ret    
10016505:	push   0x4
10016507:	call   0x10038b80
1001650c:	mov    eax,DWORD PTR [ebp+0x8]
1001650f:	and    DWORD PTR [eax+0x1c],0x0
10016513:	pop    ecx
10016514:	mov    eax,0x100164ff
10016519:	ret    
1001651a:	push   ebp
1001651b:	mov    ebp,esp
1001651d:	and    esp,0xfffffff8
10016520:	push   ecx
10016521:	push   esi
10016522:	mov    esi,eax
10016524:	and    DWORD PTR [esi],0x0
10016527:	jmp    0x10016557
10016529:	mov    eax,DWORD PTR [esi]
1001652b:	push   DWORD PTR [ebp+0x10]
1001652e:	mov    ecx,DWORD PTR [ebp+0xc]
10016531:	sub    ecx,eax
10016533:	push   ecx
10016534:	mov    ecx,DWORD PTR [ebp+0x8]
10016537:	add    eax,ecx
10016539:	push   eax
1001653a:	push   edi
1001653b:	lea    eax,[esp+0x14]
1001653f:	call   0x10025974
10016544:	mov    eax,DWORD PTR [esp+0x4]
10016548:	add    DWORD PTR [esi],eax
1001654a:	mov    eax,DWORD PTR [esi]
1001654c:	cmp    eax,DWORD PTR [ebp+0xc]
1001654f:	je     0x10016562
10016551:	cmp    BYTE PTR [ebp+0x10],0x0
10016555:	jne    0x10016562
10016557:	mov    eax,edi
10016559:	call   0x10025a32
1001655e:	test   eax,eax
10016560:	jne    0x10016529
10016562:	lea    esi,[edi+0x38]
10016565:	push   esi
10016566:	call   DWORD PTR ds:0x100670f8
1001656c:	cmp    DWORD PTR [edi+0x28],0x0
10016570:	jne    0x1001657e
10016572:	mov    eax,DWORD PTR [edi+0x50]
10016575:	push   DWORD PTR [eax+0x28]
10016578:	call   DWORD PTR ds:0x10067174
1001657e:	push   esi
1001657f:	call   DWORD PTR ds:0x100670fc
10016585:	pop    esi
10016586:	mov    esp,ebp
10016588:	pop    ebp
10016589:	ret    
1001658a:	push   ebp
1001658b:	mov    ebp,esp
1001658d:	sub    esp,0x10
10016590:	push   ebx
10016591:	xor    ebx,ebx
10016593:	cmp    BYTE PTR [esi+0x27],bl
10016596:	push   edi
10016597:	jne    0x10016614
10016599:	lea    eax,[ebp-0x4]
1001659c:	push   eax
1001659d:	push   ebx
1001659e:	push   ebx
1001659f:	push   ebx
100165a0:	lea    eax,[ebp-0x8]
100165a3:	push   eax
100165a4:	push   ebx
100165a5:	push   ebx
100165a6:	push   0x4
100165a8:	lea    eax,[ebp-0xc]
100165ab:	push   eax
100165ac:	push   0x8004667e
100165b1:	push   DWORD PTR [esi]
100165b3:	mov    DWORD PTR [ebp-0xc],0x1
100165ba:	mov    DWORD PTR [ebp-0x8],ebx
100165bd:	mov    DWORD PTR [ebp-0x4],ebx
100165c0:	call   DWORD PTR [esi+0x7c]
100165c3:	push   esi
100165c4:	call   0x100164cb
100165c9:	lea    eax,[esi+0x4]
100165cc:	pop    ecx
100165cd:	push   eax
100165ce:	mov    DWORD PTR [ebp-0x10],eax
100165d1:	call   DWORD PTR ds:0x100670f8
100165d7:	mov    edi,DWORD PTR ds:0x100670b0
100165dd:	lea    eax,[esi+0x20]
100165e0:	push   eax
100165e1:	call   edi
100165e3:	lea    eax,[esi+0x20]
100165e6:	push   eax
100165e7:	call   edi
100165e9:	mov    edi,DWORD PTR ds:0x10067088
100165ef:	push   ebx
100165f0:	push   ebx
100165f1:	push   esi
100165f2:	push   0x1002536e
100165f7:	push   ebx
100165f8:	push   ebx
100165f9:	call   edi
100165fb:	push   ebx
100165fc:	push   ebx
100165fd:	push   esi
100165fe:	push   0x10025918
10016603:	push   ebx
10016604:	push   ebx
10016605:	call   edi
10016607:	push   DWORD PTR [ebp-0x10]
1001660a:	mov    BYTE PTR [esi+0x25],0x1
1001660e:	call   DWORD PTR ds:0x100670fc
10016614:	pop    edi
10016615:	pop    ebx
10016616:	leave  
10016617:	ret    
10016618:	push   ebp
10016619:	mov    ebp,esp
1001661b:	push   ebx
1001661c:	mov    ebx,DWORD PTR [ebp+0x50]
1001661f:	push   esi
10016620:	push   edi
10016621:	push   0xf
10016623:	pop    ecx
10016624:	push   ebx
10016625:	sub    esp,0x3c
10016628:	push   0xf
1001662a:	lea    esi,[ebp+0x14]
1001662d:	mov    edi,0x10082d68
10016632:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016634:	pop    ecx
10016635:	mov    edi,esp
10016637:	push   DWORD PTR [ebp+0x10]
1001663a:	lea    esi,[ebp+0x14]
1001663d:	push   DWORD PTR [ebp+0xc]
10016640:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016642:	push   DWORD PTR [ebp+0x8]
10016645:	call   DWORD PTR ds:0x10082cdc
1001664b:	push   0x78
1001664d:	push   ebx
1001664e:	push   0x10082cf0
10016653:	mov    esi,eax
10016655:	call   0x10045340
1001665a:	add    esp,0xc
1001665d:	pop    edi
1001665e:	mov    eax,esi
10016660:	pop    esi
10016661:	mov    DWORD PTR [ebx+0x18],0x1001698a
10016668:	mov    DWORD PTR [ebx+0x1c],0x10016ae8
1001666f:	mov    DWORD PTR [ebx+0x40],0x10016c31
10016676:	mov    DWORD PTR [ebx+0x4c],0x10016df6
1001667d:	mov    DWORD PTR [ebx+0x58],0x10016ec6
10016684:	mov    DWORD PTR [ebx+0x5c],0x10017760
1001668b:	mov    DWORD PTR [ebx+0x68],0x100178cd
10016692:	mov    DWORD PTR [ebx+0x70],0x100177d7
10016699:	pop    ebx
1001669a:	pop    ebp
1001669b:	ret    0x4c
1001669e:	push   ebp
1001669f:	mov    ebp,esp
100166a1:	and    esp,0xfffffff8
100166a4:	sub    esp,0x210
100166aa:	mov    eax,ds:0x100801ac
100166af:	xor    eax,esp
100166b1:	mov    DWORD PTR [esp+0x20c],eax
100166b8:	cmp    BYTE PTR ds:0x10083044,0x0
100166bf:	jne    0x100167ae
100166c5:	push   0x208
100166ca:	lea    eax,[esp+0x4]
100166ce:	push   eax
100166cf:	push   0x0
100166d1:	call   DWORD PTR ds:0x1006711c
100166d7:	test   eax,eax
100166d9:	je     0x100167ae
100166df:	lea    eax,[esp]
100166e2:	push   eax
100166e3:	call   0x100461d7
100166e8:	mov    DWORD PTR [esp],0x10070834
100166ef:	push   0xc
100166f1:	mov    ecx,0x10070868
100166f6:	call   0x1000444a
100166fb:	push   eax
100166fc:	lea    eax,[esp+0xc]
10016700:	push   eax
10016701:	call   0x10046240
10016706:	add    esp,0x10
10016709:	test   eax,eax
1001670b:	je     0x1001671c
1001670d:	mov    DWORD PTR ds:0x10082cec,0x1
10016717:	jmp    0x100167a7
1001671c:	push   0x10070884
10016721:	push   0xb
10016723:	mov    ecx,0x100708b0
10016728:	call   0x1000444a
1001672d:	push   eax
1001672e:	lea    eax,[esp+0xc]
10016732:	push   eax
10016733:	call   0x10046240
10016738:	add    esp,0x10
1001673b:	test   eax,eax
1001673d:	je     0x1001674b
1001673f:	mov    DWORD PTR ds:0x10082cec,0x2
10016749:	jmp    0x100167a7
1001674b:	push   0x100708c8
10016750:	push   0x9
10016752:	mov    ecx,0x10070900
10016757:	call   0x1000444a
1001675c:	push   eax
1001675d:	lea    eax,[esp+0xc]
10016761:	push   eax
10016762:	call   0x10046240
10016767:	add    esp,0x10
1001676a:	test   eax,eax
1001676c:	je     0x1001677a
1001676e:	mov    DWORD PTR ds:0x10082cec,0x4
10016778:	jmp    0x100167a7
1001677a:	push   0x10070914
1001677f:	push   0xa
10016781:	mov    ecx,0x10070940
10016786:	call   0x1000444a
1001678b:	push   eax
1001678c:	lea    eax,[esp+0xc]
10016790:	push   eax
10016791:	call   0x10046240
10016796:	add    esp,0x10
10016799:	test   eax,eax
1001679b:	je     0x100167a7
1001679d:	mov    DWORD PTR ds:0x10082cec,0x3
100167a7:	mov    BYTE PTR ds:0x10083044,0x1
100167ae:	mov    ecx,DWORD PTR [esp+0x20c]
100167b5:	xor    ecx,esp
100167b7:	call   0x10043615
100167bc:	mov    esp,ebp
100167be:	pop    ebp
100167bf:	ret    
100167c0:	push   ebp
100167c1:	mov    ebp,esp
100167c3:	and    esp,0xfffffff8
100167c6:	call   DWORD PTR ds:0x10080ffc
100167cc:	push   0x10082cc4
100167d1:	call   DWORD PTR ds:0x10067118
100167d7:	mov    eax,ds:0x10082cec
100167dc:	test   eax,eax
100167de:	je     0x10016840
100167e0:	push   eax
100167e1:	call   0x10002068
100167e6:	pop    ecx
100167e7:	push   0x10070958
100167ec:	push   0xb
100167ee:	mov    ecx,0x1007097c
100167f3:	call   0x1000444a
100167f8:	pop    ecx
100167f9:	pop    ecx
100167fa:	push   eax
100167fb:	call   DWORD PTR ds:0x100670e0
10016801:	test   eax,eax
10016803:	mov    ds:0x10082da8,eax
10016808:	je     0x10016840
1001680a:	push   0x10070994
1001680f:	push   0xa
10016811:	mov    ecx,0x100709c8
10016816:	call   0x100042b4
1001681b:	pop    ecx
1001681c:	pop    ecx
1001681d:	push   eax
1001681e:	push   DWORD PTR ds:0x10082da8
10016824:	call   DWORD PTR ds:0x100670e4
1001682a:	push   0x10016618
1001682f:	push   eax
10016830:	call   0x10057780
10016835:	mov    ds:0x10082cdc,eax
1001683a:	mov    al,0x1
1001683c:	mov    esp,ebp
1001683e:	pop    ebp
1001683f:	ret    
10016840:	xor    al,al
10016842:	jmp    0x1001683c
10016844:	push   0x10
10016846:	push   0x1007dca8
1001684b:	call   0x1004771c
10016850:	xor    ebx,ebx
10016852:	push   ebx
10016853:	push   0x12
10016855:	call   0x100161fe
1001685a:	pop    ecx
1001685b:	pop    ecx
1001685c:	mov    DWORD PTR [ebp-0x20],eax
1001685f:	mov    DWORD PTR [ebp-0x1c],edx
10016862:	mov    eax,DWORD PTR [ebp+0xc]
10016865:	sub    eax,ebx
10016867:	je     0x10016921
1001686d:	dec    eax
1001686e:	jne    0x1001697f
10016874:	cmp    DWORD PTR ds:0x10082dac,ebx
1001687a:	jne    0x10016889
1001687c:	call   0x10006f70
10016881:	test   al,al
10016883:	je     0x1001697f
10016889:	call   0x1001669e
1001688e:	cmp    DWORD PTR ds:0x10082dac,ebx
10016894:	jne    0x100168c4
10016896:	mov    eax,DWORD PTR [ebp+0x8]
10016899:	mov    ds:0x10082da4,eax
1001689e:	call   0x1002690f
100168a3:	call   0x1001885c
100168a8:	test   al,al
100168aa:	je     0x100168b6
100168ac:	call   0x100167c0
100168b1:	mov    ds:0x10083045,al
100168b6:	cmp    DWORD PTR ds:0x10082cec,0x2
100168bd:	jne    0x100168c4
100168bf:	call   0x100077e0
100168c4:	inc    DWORD PTR ds:0x10082dac
100168ca:	mov    DWORD PTR [ebp-0x4],ebx
100168cd:	mov    DWORD PTR ds:0x10082c64,0x10082ef8
100168d7:	mov    esi,0x100706f8
100168dc:	mov    edi,0x10082c68
100168e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168e5:	push   ebx
100168e6:	push   0xe6
100168eb:	call   0x100161fe
100168f0:	pop    ecx
100168f1:	pop    ecx
100168f2:	mov    esi,eax
100168f4:	call   DWORD PTR ds:0x1006713c
100168fa:	add    esi,DWORD PTR [ebp-0x20]
100168fd:	add    eax,esi
100168ff:	push   eax
10016900:	call   0x10046532
10016905:	pop    ecx
10016906:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001690d:	jmp    0x1001697f
1001690f:	xor    eax,eax
10016911:	inc    eax
10016912:	ret    
10016913:	mov    esp,DWORD PTR [ebp-0x18]
10016916:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001691d:	xor    eax,eax
1001691f:	jmp    0x10016982
10016921:	dec    DWORD PTR ds:0x10082dac
10016927:	jne    0x1001697f
10016929:	cmp    BYTE PTR ds:0x10083045,bl
1001692f:	je     0x1001697f
10016931:	xor    eax,eax
10016933:	cmp    DWORD PTR ds:0x10082cec,ebx
10016939:	je     0x1001693c
1001693b:	inc    eax
1001693c:	cmp    eax,ebx
1001693e:	je     0x1001695b
10016940:	push   0x10016618
10016945:	push   DWORD PTR ds:0x10082cdc
1001694b:	call   0x10057530
10016950:	push   0x10082cc4
10016955:	call   DWORD PTR ds:0x10067120
1001695b:	mov    BYTE PTR ds:0x10083045,bl
10016961:	mov    eax,ds:0x10082cec
10016966:	dec    eax
10016967:	je     0x10016977
10016969:	dec    eax
1001696a:	je     0x10016973
1001696c:	dec    eax
1001696d:	jne    0x1001697f
1001696f:	push   0xb
10016971:	jmp    0x10016979
10016973:	push   0x3
10016975:	jmp    0x10016979
10016977:	push   0x1
10016979:	call   0x10038b80
1001697e:	pop    ecx
1001697f:	xor    eax,eax
10016981:	inc    eax
10016982:	call   0x10047761
10016987:	ret    0xc
1001698a:	push   0x14
1001698c:	mov    eax,0x100648ff
10016991:	call   0x10059df5
10016996:	push   DWORD PTR [ebp+0x8]
10016999:	call   0x100163b2
1001699e:	pop    ecx
1001699f:	mov    DWORD PTR [ebp-0x10],eax
100169a2:	xor    ebx,ebx
100169a4:	cmp    eax,ebx
100169a6:	mov    DWORD PTR [ebp-0x4],ebx
100169a9:	jne    0x100169cb
100169ab:	push   DWORD PTR [ebp+0xc]
100169ae:	push   DWORD PTR [ebp+0x8]
100169b1:	call   DWORD PTR ds:0x10082d08
100169b7:	lea    ecx,[ebp-0x10]
100169ba:	mov    esi,eax
100169bc:	call   0x10016239
100169c1:	mov    eax,esi
100169c3:	call   0x10059ecd
100169c8:	ret    0x8
100169cb:	mov    esi,DWORD PTR ds:0x100670f8
100169d1:	add    eax,0x4
100169d4:	push   eax
100169d5:	call   esi
100169d7:	mov    eax,DWORD PTR [ebp-0x10]
100169da:	cmp    BYTE PTR [eax+0x27],bl
100169dd:	jne    0x10016a93
100169e3:	push   DWORD PTR [eax+0x30]
100169e6:	call   DWORD PTR ds:0x10067148
100169ec:	mov    eax,DWORD PTR [ebp-0x10]
100169ef:	mov    edi,DWORD PTR ds:0x100670fc
100169f5:	mov    BYTE PTR [eax+0x27],0x1
100169f9:	jmp    0x10016a12
100169fb:	add    eax,0x4
100169fe:	push   eax
100169ff:	call   edi
10016a01:	push   0x64
10016a03:	call   DWORD PTR ds:0x10067144
10016a09:	mov    eax,DWORD PTR [ebp-0x10]
10016a0c:	add    eax,0x4
10016a0f:	push   eax
10016a10:	call   esi
10016a12:	mov    eax,DWORD PTR [ebp-0x10]
10016a15:	mov    eax,DWORD PTR [eax+0x20]
10016a18:	cmp    eax,0x1
10016a1b:	mov    eax,DWORD PTR [ebp-0x10]
10016a1e:	jg     0x100169fb
10016a20:	push   DWORD PTR [eax+0x34]
10016a23:	call   DWORD PTR ds:0x10067148
10016a29:	mov    eax,DWORD PTR [ebp-0x10]
10016a2c:	xor    ecx,ecx
10016a2e:	cmp    BYTE PTR [eax+0x26],bl
10016a31:	sete   cl
10016a34:	add    eax,0x4
10016a37:	push   eax
10016a38:	mov    DWORD PTR [ebp-0x20],ecx
10016a3b:	call   edi
10016a3d:	push   0x10082cc4
10016a42:	call   esi
10016a44:	lea    edx,[ebp+0x8]
10016a47:	call   0x10017c98
10016a4c:	push   0x10082cc4
10016a51:	call   edi
10016a53:	mov    eax,DWORD PTR [ebp-0x10]
10016a56:	add    eax,0x4
10016a59:	push   eax
10016a5a:	call   esi
10016a5c:	mov    esi,DWORD PTR [ebp-0x10]
10016a5f:	call   0x10016360
10016a64:	lea    eax,[ebp-0x18]
10016a67:	push   eax
10016a68:	push   ebx
10016a69:	push   ebx
10016a6a:	push   ebx
10016a6b:	lea    eax,[ebp-0x1c]
10016a6e:	push   eax
10016a6f:	push   ebx
10016a70:	push   ebx
10016a71:	push   0x4
10016a73:	lea    eax,[ebp-0x20]
10016a76:	push   eax
10016a77:	push   0x8004667e
10016a7c:	push   DWORD PTR [ebp+0x8]
10016a7f:	mov    DWORD PTR [ebp-0x10],ebx
10016a82:	mov    DWORD PTR [ebp-0x1c],ebx
10016a85:	mov    DWORD PTR [ebp-0x18],ebx
10016a88:	call   DWORD PTR ds:0x10082d30
10016a8e:	jmp    0x100169ab
10016a93:	mov    ecx,DWORD PTR [eax+0x34]
10016a96:	mov    esi,DWORD PTR ds:0x1006712c
10016a9c:	push   0x2
10016a9e:	push   0x1
10016aa0:	mov    edi,eax
10016aa2:	push   ebx
10016aa3:	lea    eax,[ebp-0x14]
10016aa6:	push   eax
10016aa7:	mov    DWORD PTR [ebp-0x14],ecx
10016aaa:	call   esi
10016aac:	push   eax
10016aad:	push   DWORD PTR [edi+0x34]
10016ab0:	call   esi
10016ab2:	push   eax
10016ab3:	call   DWORD PTR ds:0x10067128
10016ab9:	mov    esi,eax
10016abb:	mov    eax,DWORD PTR [ebp-0x10]
10016abe:	add    eax,0x4
10016ac1:	push   eax
10016ac2:	call   DWORD PTR ds:0x100670fc
10016ac8:	cmp    esi,ebx
10016aca:	je     0x10016ad7
10016acc:	push   0xffffffff
10016ace:	push   DWORD PTR [ebp-0x14]
10016ad1:	call   DWORD PTR ds:0x1006707c
10016ad7:	mov    ecx,DWORD PTR [ebp+0xc]
10016ada:	or     eax,0xffffffff
10016add:	mov    DWORD PTR [ecx],0x2736
10016ae3:	jmp    0x100169b7
10016ae8:	push   0x8
10016aea:	mov    eax,0x10065989
10016aef:	call   0x10059df5
10016af4:	mov    esi,DWORD PTR [ebp+0xc]
10016af7:	cmp    WORD PTR [esi],0x2
10016afb:	jne    0x10016b3e
10016afd:	mov    eax,DWORD PTR [esi+0x4]
10016b00:	push   eax
10016b01:	mov    DWORD PTR [ebp-0x14],eax
10016b04:	call   DWORD PTR ds:0x100673ac
10016b0a:	mov    ebx,eax
10016b0c:	call   0x100178d7
10016b11:	test   al,al
10016b13:	je     0x10016b3e
10016b15:	movzx  eax,BYTE PTR [ebp-0x11]
10016b19:	push   eax
10016b1a:	movzx  eax,BYTE PTR [ebp-0x12]
10016b1e:	push   eax
10016b1f:	movzx  eax,BYTE PTR [ebp-0x13]
10016b23:	push   eax
10016b24:	movzx  eax,BYTE PTR [ebp-0x14]
10016b28:	push   eax
10016b29:	call   0x10002068
10016b2e:	add    esp,0x10
10016b31:	mov    eax,0x274d
10016b36:	call   0x10059ecd
10016b3b:	ret    0x20
10016b3e:	push   DWORD PTR [ebp+0x8]
10016b41:	call   0x100163b2
10016b46:	pop    ecx
10016b47:	mov    DWORD PTR [ebp-0x10],eax
10016b4a:	and    DWORD PTR [ebp-0x4],0x0
10016b4e:	test   eax,eax
10016b50:	jne    0x10016b7c
10016b52:	push   DWORD PTR [ebp+0x24]
10016b55:	push   DWORD PTR [ebp+0x20]
10016b58:	push   DWORD PTR [ebp+0x1c]
10016b5b:	push   DWORD PTR [ebp+0x18]
10016b5e:	push   DWORD PTR [ebp+0x14]
10016b61:	push   DWORD PTR [ebp+0x10]
10016b64:	push   esi
10016b65:	push   DWORD PTR [ebp+0x8]
10016b68:	call   DWORD PTR ds:0x10082d0c
10016b6e:	mov    esi,eax
10016b70:	lea    ecx,[ebp-0x10]
10016b73:	call   0x10016239
10016b78:	mov    eax,esi
10016b7a:	jmp    0x10016b36
10016b7c:	mov    ebx,DWORD PTR [ebp+0x24]
10016b7f:	mov    edi,DWORD PTR [ebp+0x10]
10016b82:	push   ebx
10016b83:	push   DWORD PTR [ebp+0x20]
10016b86:	push   DWORD PTR [ebp+0x1c]
10016b89:	push   DWORD PTR [ebp+0x18]
10016b8c:	push   DWORD PTR [ebp+0x14]
10016b8f:	push   edi
10016b90:	push   esi
10016b91:	push   DWORD PTR [ebp+0x8]
10016b94:	call   DWORD PTR [eax+0x58]
10016b97:	cmp    eax,0xffffffff
10016b9a:	mov    DWORD PTR [ebp+0x24],eax
10016b9d:	jne    0x10016bcc
10016b9f:	mov    ebx,DWORD PTR [ebx]
10016ba1:	cmp    ebx,0x2733
10016ba7:	jne    0x10016bbf
10016ba9:	mov    eax,DWORD PTR [ebp-0x10]
10016bac:	add    eax,0x4
10016baf:	push   eax
10016bb0:	call   DWORD PTR ds:0x100670f8
10016bb6:	mov    eax,DWORD PTR [ebp-0x10]
10016bb9:	mov    BYTE PTR [eax+0x24],0x1
10016bbd:	jmp    0x10016be1
10016bbf:	push   ebx
10016bc0:	push   DWORD PTR [ebp+0x8]
10016bc3:	call   0x10002068
10016bc8:	pop    ecx
10016bc9:	pop    ecx
10016bca:	jmp    0x10016bee
10016bcc:	mov    eax,DWORD PTR [ebp-0x10]
10016bcf:	add    eax,0x4
10016bd2:	push   eax
10016bd3:	call   DWORD PTR ds:0x100670f8
10016bd9:	mov    esi,DWORD PTR [ebp-0x10]
10016bdc:	call   0x1001658a
10016be1:	mov    eax,DWORD PTR [ebp-0x10]
10016be4:	add    eax,0x4
10016be7:	push   eax
10016be8:	call   DWORD PTR ds:0x100670fc
10016bee:	mov    esi,DWORD PTR [ebp-0x10]
10016bf1:	push   edi
10016bf2:	call   0x100438d7
10016bf7:	mov    ebx,eax
10016bf9:	mov    eax,DWORD PTR [esi+0xf0]
10016bff:	cmp    ebx,eax
10016c01:	pop    ecx
10016c02:	je     0x10016c0b
10016c04:	push   eax
10016c05:	call   0x10042fe2
10016c0a:	pop    ecx
10016c0b:	push   edi
10016c0c:	push   DWORD PTR [ebp+0xc]
10016c0f:	mov    DWORD PTR [esi+0xf0],ebx
10016c15:	push   DWORD PTR [esi+0xf0]
10016c1b:	mov    DWORD PTR [esi+0xf4],edi
10016c21:	call   0x10045340
10016c26:	mov    esi,DWORD PTR [ebp+0x24]
10016c29:	add    esp,0xc
10016c2c:	jmp    0x10016b70
10016c31:	push   0x4
10016c33:	mov    eax,0x100600d8
10016c38:	call   0x10059df5
10016c3d:	push   DWORD PTR [ebp+0x8]
10016c40:	or     edi,0xffffffff
10016c43:	call   0x100163b2
10016c48:	pop    ecx
10016c49:	mov    DWORD PTR [ebp-0x10],eax
10016c4c:	mov    esi,DWORD PTR [ebp+0x10]
10016c4f:	xor    ebx,ebx
10016c51:	cmp    eax,ebx
10016c53:	mov    DWORD PTR [ebp-0x4],ebx
10016c56:	je     0x10016cc5
10016c58:	cmp    DWORD PTR [ebp+0xc],0x4004667f
10016c5f:	je     0x10016c89
10016c61:	cmp    DWORD PTR [ebp+0xc],0x8004667e
10016c68:	jne    0x10016cc5
10016c6a:	add    eax,0x4
10016c6d:	push   eax
10016c6e:	call   DWORD PTR ds:0x100670f8
10016c74:	cmp    DWORD PTR [esi],ebx
10016c76:	mov    ecx,DWORD PTR [ebp-0x10]
10016c79:	sete   al
10016c7c:	mov    BYTE PTR [ecx+0x26],al
10016c7f:	mov    eax,DWORD PTR [ebp-0x10]
10016c82:	cmp    BYTE PTR [eax+0x25],bl
10016c85:	je     0x10016cb6
10016c87:	jmp    0x10016cb4
10016c89:	add    eax,0x4
10016c8c:	push   eax
10016c8d:	call   DWORD PTR ds:0x100670f8
10016c93:	mov    eax,DWORD PTR [ebp-0x10]
10016c96:	cmp    BYTE PTR [eax+0x25],bl
10016c99:	je     0x10016cb6
10016c9b:	mov    eax,DWORD PTR [eax+0x1c]
10016c9e:	call   0x10025a32
10016ca3:	cmp    eax,ebx
10016ca5:	mov    DWORD PTR [esi],ebx
10016ca7:	je     0x10016cb1
10016ca9:	mov    ecx,DWORD PTR [eax+0x18]
10016cac:	sub    ecx,DWORD PTR [eax+0x20]
10016caf:	mov    DWORD PTR [esi],ecx
10016cb1:	mov    eax,DWORD PTR [ebp-0x10]
10016cb4:	xor    edi,edi
10016cb6:	add    eax,0x4
10016cb9:	push   eax
10016cba:	call   DWORD PTR ds:0x100670fc
10016cc0:	cmp    edi,0xffffffff
10016cc3:	jne    0x10016cec
10016cc5:	push   DWORD PTR [ebp+0x30]
10016cc8:	push   DWORD PTR [ebp+0x2c]
10016ccb:	push   DWORD PTR [ebp+0x28]
10016cce:	push   DWORD PTR [ebp+0x24]
10016cd1:	push   DWORD PTR [ebp+0x20]
10016cd4:	push   DWORD PTR [ebp+0x1c]
10016cd7:	push   DWORD PTR [ebp+0x18]
10016cda:	push   DWORD PTR [ebp+0x14]
10016cdd:	push   esi
10016cde:	push   DWORD PTR [ebp+0xc]
10016ce1:	push   DWORD PTR [ebp+0x8]
10016ce4:	call   DWORD PTR ds:0x10082d30
10016cea:	mov    edi,eax
10016cec:	lea    ecx,[ebp-0x10]
10016cef:	call   0x10016239
10016cf4:	mov    eax,edi
10016cf6:	call   0x10059ecd
10016cfb:	ret    0x2c
10016cfe:	push   ebp
10016cff:	mov    ebp,esp
10016d01:	sub    esp,0x10
10016d04:	or     DWORD PTR [ebp-0x4],0xffffffff
10016d08:	push   ebx
10016d09:	push   edi
10016d0a:	mov    edi,DWORD PTR ds:0x100670f8
10016d10:	lea    eax,[esi+0x4]
10016d13:	push   eax
10016d14:	mov    DWORD PTR [ebp-0x8],eax
10016d17:	call   edi
10016d19:	xor    ebx,ebx
10016d1b:	cmp    DWORD PTR [esi+0x38],ebx
10016d1e:	je     0x10016d36
10016d20:	mov    eax,DWORD PTR [ebp+0xc]
10016d23:	mov    ecx,DWORD PTR [ebp+0x14]
10016d26:	or     DWORD PTR [ebp-0x4],0xffffffff
10016d2a:	mov    DWORD PTR [eax],ebx
10016d2c:	mov    eax,DWORD PTR [esi+0x38]
10016d2f:	mov    DWORD PTR [ecx],eax
10016d31:	jmp    0x10016de4
10016d36:	cmp    BYTE PTR [esi+0x26],bl
10016d39:	je     0x10016d64
10016d3b:	push   DWORD PTR [ebp-0x8]
10016d3e:	call   DWORD PTR ds:0x100670fc
10016d44:	mov    eax,DWORD PTR [esi+0x28]
10016d47:	mov    DWORD PTR [ebp-0x10],eax
10016d4a:	mov    eax,DWORD PTR [esi+0x30]
10016d4d:	push   0xffffffff
10016d4f:	mov    DWORD PTR [ebp-0xc],eax
10016d52:	push   ebx
10016d53:	lea    eax,[ebp-0x10]
10016d56:	push   eax
10016d57:	push   0x2
10016d59:	call   DWORD PTR ds:0x100670f4
10016d5f:	push   DWORD PTR [ebp-0x8]
10016d62:	call   edi
10016d64:	mov    ebx,DWORD PTR [esi+0x1c]
10016d67:	cmp    BYTE PTR [ebx+0x1],0x0
10016d6b:	je     0x10016d95
10016d6d:	lea    eax,[ebx+0x38]
10016d70:	push   eax
10016d71:	mov    DWORD PTR [ebp-0xc],eax
10016d74:	call   edi
10016d76:	push   DWORD PTR [ebp-0xc]
10016d79:	xor    edi,edi
10016d7b:	cmp    DWORD PTR [ebx+0x28],edi
10016d7e:	setne  bl
10016d81:	call   DWORD PTR ds:0x100670fc
10016d87:	test   bl,bl
10016d89:	jne    0x10016d95
10016d8b:	mov    eax,DWORD PTR [ebp+0xc]
10016d8e:	mov    DWORD PTR [eax],edi
10016d90:	mov    DWORD PTR [ebp-0x4],edi
10016d93:	jmp    0x10016de4
10016d95:	mov    eax,DWORD PTR [ebp+0x10]
10016d98:	mov    eax,DWORD PTR [eax]
10016d9a:	mov    ebx,DWORD PTR [ebp+0x8]
10016d9d:	mov    edi,DWORD PTR [esi+0x1c]
10016da0:	shr    eax,1
10016da2:	and    eax,0xffffff01
10016da7:	push   eax
10016da8:	push   DWORD PTR [ebx]
10016daa:	mov    eax,DWORD PTR [ebp+0xc]
10016dad:	push   DWORD PTR [ebx+0x4]
10016db0:	call   0x1001651a
10016db5:	mov    ecx,DWORD PTR [ebp+0x10]
10016db8:	xor    eax,eax
10016dba:	mov    DWORD PTR [ecx],eax
10016dbc:	mov    ecx,DWORD PTR [ebp+0xc]
10016dbf:	add    esp,0xc
10016dc2:	cmp    DWORD PTR [ecx],eax
10016dc4:	jne    0x10016de1
10016dc6:	cmp    DWORD PTR [ebx+0x4],eax
10016dc9:	je     0x10016de1
10016dcb:	mov    al,BYTE PTR [esi+0x26]
10016dce:	mov    ecx,DWORD PTR [ebp+0x14]
10016dd1:	neg    al
10016dd3:	sbb    eax,eax
10016dd5:	and    eax,0x13
10016dd8:	add    eax,0x2733
10016ddd:	mov    DWORD PTR [ecx],eax
10016ddf:	jmp    0x10016de4
10016de1:	mov    DWORD PTR [ebp-0x4],eax
10016de4:	push   DWORD PTR [ebp-0x8]
10016de7:	call   DWORD PTR ds:0x100670fc
10016ded:	mov    eax,DWORD PTR [ebp-0x4]
10016df0:	pop    edi
10016df1:	pop    ebx
10016df2:	leave  
10016df3:	ret    0x10
10016df6:	push   0x4
10016df8:	mov    eax,0x100600d8
10016dfd:	call   0x10059df5
10016e02:	push   DWORD PTR [ebp+0x8]
10016e05:	call   0x100163b2
10016e0a:	pop    ecx
10016e0b:	mov    DWORD PTR [ebp-0x10],eax
10016e0e:	mov    ecx,DWORD PTR [ebp+0x18]
10016e11:	xor    edx,edx
10016e13:	cmp    DWORD PTR [ebp+0x1c],edx
10016e16:	mov    DWORD PTR [ebp-0x4],edx
10016e19:	jne    0x10016e3c
10016e1b:	cmp    eax,edx
10016e1d:	je     0x10016e3c
10016e1f:	cmp    BYTE PTR [eax+0x25],dl
10016e22:	je     0x10016e3c
10016e24:	test   BYTE PTR [ecx],0x1
10016e27:	jne    0x10016e3c
10016e29:	push   DWORD PTR [ebp+0x28]
10016e2c:	mov    esi,eax
10016e2e:	push   ecx
10016e2f:	push   DWORD PTR [ebp+0x14]
10016e32:	push   DWORD PTR [ebp+0xc]
10016e35:	call   0x10016cfe
10016e3a:	jmp    0x10016e5b
10016e3c:	push   DWORD PTR [ebp+0x28]
10016e3f:	push   DWORD PTR [ebp+0x24]
10016e42:	push   DWORD PTR [ebp+0x20]
10016e45:	push   DWORD PTR [ebp+0x1c]
10016e48:	push   ecx
10016e49:	push   DWORD PTR [ebp+0x14]
10016e4c:	push   DWORD PTR [ebp+0x10]
10016e4f:	push   DWORD PTR [ebp+0xc]
10016e52:	push   DWORD PTR [ebp+0x8]
10016e55:	call   DWORD PTR ds:0x10082d3c
10016e5b:	lea    ecx,[ebp-0x10]
10016e5e:	mov    esi,eax
10016e60:	call   0x10016239
10016e65:	mov    eax,esi
10016e67:	call   0x10059ecd
10016e6c:	ret    0x24
10016e6f:	push   ebp
10016e70:	mov    ebp,esp
10016e72:	push   ecx
10016e73:	mov    edx,DWORD PTR [ebp+0x8]
10016e76:	xor    ecx,ecx
10016e78:	mov    DWORD PTR [eax],ecx
10016e7a:	cmp    DWORD PTR [edx],ecx
10016e7c:	mov    DWORD PTR [ebp-0x4],ecx
10016e7f:	jbe    0x10016ec4
10016e81:	push   ebx
10016e82:	push   esi
10016e83:	push   edi
10016e84:	lea    esi,[edx+0x4]
10016e87:	mov    ebx,DWORD PTR [eax]
10016e89:	xor    ecx,ecx
10016e8b:	test   ebx,ebx
10016e8d:	jbe    0x10016ea3
10016e8f:	mov    edi,DWORD PTR [esi]
10016e91:	lea    edx,[eax+0x4]
10016e94:	cmp    DWORD PTR [edx],edi
10016e96:	je     0x10016ea0
10016e98:	inc    ecx
10016e99:	add    edx,0x4
10016e9c:	cmp    ecx,ebx
10016e9e:	jb     0x10016e94
10016ea0:	mov    edx,DWORD PTR [ebp+0x8]
10016ea3:	cmp    ecx,ebx
10016ea5:	jne    0x10016eb4
10016ea7:	cmp    ebx,0x40
10016eaa:	jae    0x10016eb4
10016eac:	mov    edi,DWORD PTR [esi]
10016eae:	mov    DWORD PTR [eax+ecx*4+0x4],edi
10016eb2:	inc    DWORD PTR [eax]
10016eb4:	inc    DWORD PTR [ebp-0x4]
10016eb7:	mov    ecx,DWORD PTR [ebp-0x4]
10016eba:	add    esi,0x4
10016ebd:	cmp    ecx,DWORD PTR [edx]
10016ebf:	jb     0x10016e87
10016ec1:	pop    edi
10016ec2:	pop    esi
10016ec3:	pop    ebx
10016ec4:	leave  
10016ec5:	ret    
10016ec6:	push   ebp
10016ec7:	mov    ebp,esp
10016ec9:	and    esp,0xfffffff8
10016ecc:	push   0xffffffff
10016ece:	push   0x10065960
10016ed3:	mov    eax,fs:0x0
10016ed9:	push   eax
10016eda:	sub    esp,0xa88
10016ee0:	push   ebx
10016ee1:	push   esi
10016ee2:	push   edi
10016ee3:	mov    eax,ds:0x100801ac
10016ee8:	xor    eax,esp
10016eea:	push   eax
10016eeb:	lea    eax,[esp+0xa98]
10016ef2:	mov    fs:0x0,eax
10016ef8:	xor    ebx,ebx
10016efa:	mov    DWORD PTR [esp+0x1c],ebx
10016efe:	or     DWORD PTR [esp+0x2c],0xffffffff
10016f03:	mov    edi,0x10016239
10016f08:	push   edi
10016f09:	mov    esi,0x10017672
10016f0e:	push   esi
10016f0f:	push   0x40
10016f11:	push   0x4
10016f13:	lea    eax,[esp+0x8a4]
10016f1a:	push   eax
10016f1b:	mov    DWORD PTR [esp+0xab4],ebx
10016f22:	call   0x10045fb8
10016f27:	push   edi
10016f28:	push   esi
10016f29:	push   0x40
10016f2b:	push   0x4
10016f2d:	lea    eax,[esp+0x7a4]
10016f34:	push   eax
10016f35:	mov    BYTE PTR [esp+0xab4],0x1
10016f3d:	call   0x10045fb8
10016f42:	push   edi
10016f43:	push   esi
10016f44:	push   0x40
10016f46:	push   0x4
10016f48:	lea    eax,[esp+0x9a4]
10016f4f:	push   eax
10016f50:	mov    BYTE PTR [esp+0xab4],0x2
10016f58:	call   0x10045fb8
10016f5d:	cmp    DWORD PTR [ebp+0xc],ebx
10016f60:	mov    BYTE PTR [esp+0xaa0],0x3
10016f68:	mov    DWORD PTR [esp+0x28],ebx
10016f6c:	mov    DWORD PTR [esp+0x18],ebx
10016f70:	mov    DWORD PTR [esp+0x584],ebx
10016f77:	je     0x1001705d
10016f7d:	mov    eax,DWORD PTR [ebp+0xc]
10016f80:	mov    eax,DWORD PTR [eax]
10016f82:	cmp    eax,0x40
10016f85:	jbe    0x10016f95
10016f87:	mov    eax,DWORD PTR [ebp+0x1c]
10016f8a:	mov    DWORD PTR [eax],0x2747
10016f90:	jmp    0x100175fa
10016f95:	and    DWORD PTR [esp+0x14],0x0
10016f9a:	test   eax,eax
10016f9c:	jbe    0x1001705d
10016fa2:	mov    edi,DWORD PTR [ebp+0xc]
10016fa5:	lea    ebx,[esp+0x894]
10016fac:	add    edi,0x4
10016faf:	push   DWORD PTR [edi]
10016fb1:	call   0x100163b2
10016fb6:	test   eax,eax
10016fb8:	pop    ecx
10016fb9:	mov    DWORD PTR [esp+0x20],eax
10016fbd:	je     0x10017008
10016fbf:	cmp    BYTE PTR [eax+0x25],0x0
10016fc3:	je     0x10017008
10016fc5:	cmp    DWORD PTR [esp+0x1c],0x0
10016fca:	jne    0x10016fdb
10016fcc:	push   0x1
10016fce:	lea    esi,[esp+0x20]
10016fd2:	call   0x1001624c
10016fd7:	mov    eax,DWORD PTR [esp+0x20]
10016fdb:	push   0x1
10016fdd:	mov    esi,ebx
10016fdf:	call   0x1001624c
10016fe4:	inc    DWORD PTR [esp+0x28]
10016fe8:	and    DWORD PTR [esp+0x30],0x0
10016fed:	push   0x1
10016fef:	xor    eax,eax
10016ff1:	lea    esi,[esp+0x24]
10016ff5:	add    ebx,0x4
10016ff8:	call   0x1001624c
10016ffd:	lea    ecx,[esp+0x30]
10017001:	call   0x10016239
10017006:	jmp    0x1001703e
10017008:	mov    edx,DWORD PTR [esp+0x584]
1001700f:	xor    eax,eax
10017011:	test   edx,edx
10017013:	jbe    0x10017025
10017015:	mov    ecx,DWORD PTR [edi]
10017017:	cmp    DWORD PTR [esp+eax*4+0x588],ecx
1001701e:	je     0x10017025
10017020:	inc    eax
10017021:	cmp    eax,edx
10017023:	jb     0x10017017
10017025:	cmp    eax,edx
10017027:	jne    0x1001703e
10017029:	cmp    edx,0x40
1001702c:	jae    0x1001703e
1001702e:	mov    ecx,DWORD PTR [edi]
10017030:	mov    DWORD PTR [esp+eax*4+0x588],ecx
10017037:	inc    DWORD PTR [esp+0x584]
1001703e:	lea    ecx,[esp+0x20]
10017042:	call   0x10016239
10017047:	inc    DWORD PTR [esp+0x14]
1001704b:	mov    eax,DWORD PTR [ebp+0xc]
1001704e:	mov    ecx,DWORD PTR [esp+0x14]
10017052:	add    edi,0x4
10017055:	cmp    ecx,DWORD PTR [eax]
10017057:	jb     0x10016faf
1001705d:	mov    esi,DWORD PTR [ebp+0x10]
10017060:	and    DWORD PTR [esp+0x5c],0x0
10017065:	and    DWORD PTR [esp+0x47c],0x0
1001706d:	test   esi,esi
1001706f:	je     0x10017183
10017075:	mov    eax,DWORD PTR [esi]
10017077:	cmp    eax,0x40
1001707a:	ja     0x10016f87
10017080:	and    DWORD PTR [esp+0x14],0x0
10017085:	test   eax,eax
10017087:	jbe    0x10017183
1001708d:	lea    ebx,[esp+0x794]
10017094:	lea    edi,[esi+0x4]
10017097:	push   DWORD PTR [edi]
10017099:	call   0x100163b2
1001709e:	test   eax,eax
100170a0:	pop    ecx
100170a1:	mov    DWORD PTR [esp+0x20],eax
100170a5:	jne    0x100170cc
100170a7:	mov    edx,DWORD PTR [esp+0x5c]
100170ab:	test   edx,edx
100170ad:	jbe    0x100170bc
100170af:	mov    ecx,DWORD PTR [edi]
100170b1:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
100170b5:	je     0x100170bc
100170b7:	inc    eax
100170b8:	cmp    eax,edx
100170ba:	jb     0x100170b1
100170bc:	cmp    eax,edx
100170be:	jne    0x10017167
100170c4:	cmp    edx,0x40
100170c7:	jmp    0x1001715b
100170cc:	cmp    BYTE PTR [eax+0x25],0x0
100170d0:	je     0x100170fd
100170d2:	cmp    DWORD PTR [esp+0x1c],0x0
100170d7:	jne    0x100170e8
100170d9:	push   0x1
100170db:	lea    esi,[esp+0x20]
100170df:	call   0x1001624c
100170e4:	mov    eax,DWORD PTR [esp+0x20]
100170e8:	push   0x1
100170ea:	mov    esi,ebx
100170ec:	call   0x1001624c
100170f1:	inc    DWORD PTR [esp+0x18]
100170f5:	mov    esi,DWORD PTR [ebp+0x10]
100170f8:	add    ebx,0x4
100170fb:	jmp    0x10017167
100170fd:	cmp    BYTE PTR [eax+0x24],0x0
10017101:	je     0x10017139
10017103:	mov    edx,DWORD PTR [esp+0x47c]
1001710a:	xor    eax,eax
1001710c:	test   edx,edx
1001710e:	jbe    0x10017120
10017110:	mov    ecx,DWORD PTR [edi]
10017112:	cmp    DWORD PTR [esp+eax*4+0x480],ecx
10017119:	je     0x10017120
1001711b:	inc    eax
1001711c:	cmp    eax,edx
1001711e:	jb     0x10017112
10017120:	cmp    eax,edx
10017122:	jne    0x10017139
10017124:	cmp    edx,0x40
10017127:	jae    0x10017139
10017129:	mov    ecx,DWORD PTR [edi]
1001712b:	mov    DWORD PTR [esp+eax*4+0x480],ecx
10017132:	inc    DWORD PTR [esp+0x47c]
10017139:	xor    eax,eax
1001713b:	cmp    eax,DWORD PTR [esp+0x5c]
1001713f:	jae    0x10017154
10017141:	mov    ecx,DWORD PTR [edi]
10017143:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10017147:	je     0x10017150
10017149:	inc    eax
1001714a:	cmp    eax,DWORD PTR [esp+0x5c]
1001714e:	jb     0x10017143
10017150:	cmp    eax,DWORD PTR [esp+0x5c]
10017154:	jne    0x10017167
10017156:	cmp    DWORD PTR [esp+0x5c],0x40
1001715b:	jae    0x10017167
1001715d:	mov    ecx,DWORD PTR [edi]
1001715f:	mov    DWORD PTR [esp+eax*4+0x60],ecx
10017163:	inc    DWORD PTR [esp+0x5c]
10017167:	lea    ecx,[esp+0x20]
1001716b:	call   0x10016239
10017170:	inc    DWORD PTR [esp+0x14]
10017174:	mov    eax,DWORD PTR [esp+0x14]
10017178:	add    edi,0x4
1001717b:	cmp    eax,DWORD PTR [esi]
1001717d:	jb     0x10017097
10017183:	mov    edi,DWORD PTR [ebp+0x14]
10017186:	xor    ebx,ebx
10017188:	cmp    edi,ebx
1001718a:	mov    DWORD PTR [esp+0x164],ebx
10017191:	je     0x100171f3
10017193:	mov    eax,DWORD PTR [edi]
10017195:	cmp    eax,0x40
10017198:	ja     0x10016f87
1001719e:	cmp    eax,ebx
100171a0:	jbe    0x100171f3
100171a2:	lea    ecx,[edi+0x4]
100171a5:	mov    esi,eax
100171a7:	xor    eax,eax
100171a9:	cmp    DWORD PTR [esp+0x164],ebx
100171b0:	jbe    0x100171c7
100171b2:	mov    edx,DWORD PTR [ecx]
100171b4:	cmp    DWORD PTR [esp+eax*4+0x168],edx
100171bb:	je     0x100171c7
100171bd:	inc    eax
100171be:	cmp    eax,DWORD PTR [esp+0x164]
100171c5:	jb     0x100171b4
100171c7:	cmp    eax,DWORD PTR [esp+0x164]
100171ce:	jne    0x100171ea
100171d0:	cmp    DWORD PTR [esp+0x164],0x40
100171d8:	jae    0x100171ea
100171da:	mov    edx,DWORD PTR [ecx]
100171dc:	mov    DWORD PTR [esp+eax*4+0x168],edx
100171e3:	inc    DWORD PTR [esp+0x164]
100171ea:	add    ecx,0x4
100171ed:	dec    esi
100171ee:	jne    0x100171a7
100171f0:	mov    esi,DWORD PTR [ebp+0x10]
100171f3:	mov    eax,DWORD PTR [esp+0x1c]
100171f7:	cmp    eax,ebx
100171f9:	je     0x1001753e
100171ff:	cmp    BYTE PTR [eax+0x25],0x0
10017203:	je     0x1001753e
10017209:	xor    eax,eax
1001720b:	mov    WORD PTR [esp+0x3c],bx
10017210:	lea    edi,[esp+0x3e]
10017214:	stos   DWORD PTR es:[edi],eax
10017215:	stos   DWORD PTR es:[edi],eax
10017216:	stos   DWORD PTR es:[edi],eax
10017217:	stos   WORD PTR es:[edi],ax
10017219:	xor    eax,eax
1001721b:	mov    DWORD PTR [esp+0x20],ebx
1001721f:	lea    edi,[esp+0x24]
10017223:	stos   DWORD PTR es:[edi],eax
10017224:	lea    eax,[esp+0x3c]
10017228:	push   eax
10017229:	call   DWORD PTR ds:0x10067124
1001722f:	lea    eax,[esp+0x20]
10017233:	push   eax
10017234:	lea    eax,[esp+0x40]
10017238:	push   eax
10017239:	call   DWORD PTR ds:0x1006710c
1001723f:	mov    ecx,DWORD PTR [ebp+0x18]
10017242:	xor    eax,eax
10017244:	cmp    ecx,ebx
10017246:	lea    edi,[esp+0x58]
1001724a:	mov    DWORD PTR [esp+0x54],ebx
1001724e:	stos   DWORD PTR es:[edi],eax
1001724f:	je     0x1001727b
10017251:	mov    eax,DWORD PTR [ecx]
10017253:	imul   eax,eax,0x3e8
10017259:	add    eax,DWORD PTR [ecx+0x4]
1001725c:	imul   eax,eax,0x2710
10017262:	cdq    
10017263:	add    DWORD PTR [esp+0x20],eax
10017267:	lea    eax,[esp+0x3c]
1001726b:	push   eax
1001726c:	adc    DWORD PTR [esp+0x28],edx
10017270:	lea    eax,[esp+0x24]
10017274:	push   eax
10017275:	call   DWORD PTR ds:0x10067108
1001727b:	mov    eax,DWORD PTR [esp+0x18]
1001727f:	mov    ecx,DWORD PTR [esp+0x28]
10017283:	add    eax,ecx
10017285:	mov    DWORD PTR [esp+0x14],ebx
10017289:	mov    DWORD PTR [esp+0x30],eax
1001728d:	push   0x1
1001728f:	call   DWORD PTR ds:0x10067144
10017295:	cmp    DWORD PTR [esp+0x584],ebx
1001729c:	mov    DWORD PTR [esp+0x26c],ebx
100172a3:	mov    DWORD PTR [esp+0x374],ebx
100172aa:	mov    DWORD PTR [esp+0x68c],ebx
100172b1:	ja     0x100172c2
100172b3:	cmp    DWORD PTR [esp+0x5c],ebx
100172b7:	ja     0x100172c2
100172b9:	cmp    DWORD PTR [esp+0x164],ebx
100172c0:	jbe    0x1001732b
100172c2:	lea    eax,[esp+0x584]
100172c9:	push   eax
100172ca:	lea    eax,[esp+0x270]
100172d1:	call   0x10016e6f
100172d6:	pop    ecx
100172d7:	lea    eax,[esp+0x5c]
100172db:	push   eax
100172dc:	lea    eax,[esp+0x378]
100172e3:	call   0x10016e6f
100172e8:	pop    ecx
100172e9:	lea    eax,[esp+0x164]
100172f0:	push   eax
100172f1:	lea    eax,[esp+0x690]
100172f8:	call   0x10016e6f
100172fd:	pop    ecx
100172fe:	push   DWORD PTR [ebp+0x1c]
10017301:	lea    eax,[esp+0x58]
10017305:	push   eax
10017306:	lea    eax,[esp+0x694]
1001730d:	push   eax
1001730e:	lea    eax,[esp+0x380]
10017315:	push   eax
10017316:	lea    eax,[esp+0x27c]
1001731d:	push   eax
1001731e:	push   DWORD PTR [ebp+0x8]
10017321:	mov    eax,DWORD PTR [esp+0x34]
10017325:	call   DWORD PTR [eax+0x94]
1001732b:	cmp    DWORD PTR [esp+0x30],ebx
1001732f:	jbe    0x1001746b
10017335:	xor    edi,edi
10017337:	cmp    DWORD PTR [esp+0x28],ebx
1001733b:	je     0x100173d0
10017341:	lea    esi,[esp+edi*4+0x894]
10017348:	mov    eax,DWORD PTR [esi]
1001734a:	add    eax,0x4
1001734d:	push   eax
1001734e:	call   DWORD PTR ds:0x100670f8
10017354:	mov    eax,DWORD PTR [esi]
10017356:	mov    ecx,DWORD PTR [eax+0x28]
10017359:	mov    DWORD PTR [esp+0x34],ecx
1001735d:	mov    ecx,DWORD PTR [eax+0x30]
10017360:	mov    DWORD PTR [esp+0x38],ecx
10017364:	cmp    DWORD PTR [eax+0x38],ebx
10017367:	jne    0x1001737f
10017369:	push   ebx
1001736a:	push   ebx
1001736b:	lea    eax,[esp+0x3c]
1001736f:	push   eax
10017370:	push   0x2
10017372:	call   DWORD PTR ds:0x100670f4
10017378:	cmp    eax,0x102
1001737d:	je     0x100173b9
1001737f:	mov    edx,DWORD PTR [esp+0x26c]
10017386:	xor    ecx,ecx
10017388:	cmp    edx,ebx
1001738a:	jbe    0x1001739e
1001738c:	mov    eax,DWORD PTR [esi]
1001738e:	mov    eax,DWORD PTR [eax]
10017390:	cmp    DWORD PTR [esp+ecx*4+0x270],eax
10017397:	je     0x1001739e
10017399:	inc    ecx
1001739a:	cmp    ecx,edx
1001739c:	jb     0x10017390
1001739e:	cmp    ecx,edx
100173a0:	jne    0x100173b9
100173a2:	cmp    edx,0x40
100173a5:	jae    0x100173b9
100173a7:	mov    eax,DWORD PTR [esi]
100173a9:	mov    eax,DWORD PTR [eax]
100173ab:	mov    DWORD PTR [esp+ecx*4+0x270],eax
100173b2:	inc    DWORD PTR [esp+0x26c]
100173b9:	mov    esi,DWORD PTR [esi]
100173bb:	add    esi,0x4
100173be:	push   esi
100173bf:	call   DWORD PTR ds:0x100670fc
100173c5:	inc    edi
100173c6:	cmp    edi,DWORD PTR [esp+0x28]
100173ca:	jne    0x10017341
100173d0:	xor    edi,edi
100173d2:	cmp    DWORD PTR [esp+0x18],ebx
100173d6:	je     0x1001746b
100173dc:	lea    esi,[esp+edi*4+0x794]
100173e3:	mov    eax,DWORD PTR [esi]
100173e5:	add    eax,0x4
100173e8:	push   eax
100173e9:	call   DWORD PTR ds:0x100670f8
100173ef:	mov    eax,DWORD PTR [esi]
100173f1:	mov    ecx,DWORD PTR [eax+0x2c]
100173f4:	mov    DWORD PTR [esp+0x34],ecx
100173f8:	mov    ecx,DWORD PTR [eax+0x30]
100173fb:	mov    DWORD PTR [esp+0x38],ecx
100173ff:	cmp    DWORD PTR [eax+0x38],ebx
10017402:	jne    0x1001741a
10017404:	push   ebx
10017405:	push   ebx
10017406:	lea    eax,[esp+0x3c]
1001740a:	push   eax
1001740b:	push   0x2
1001740d:	call   DWORD PTR ds:0x100670f4
10017413:	cmp    eax,0x102
10017418:	je     0x10017454
1001741a:	mov    edx,DWORD PTR [esp+0x374]
10017421:	xor    ecx,ecx
10017423:	cmp    edx,ebx
10017425:	jbe    0x10017439
10017427:	mov    eax,DWORD PTR [esi]
10017429:	mov    eax,DWORD PTR [eax]
1001742b:	cmp    DWORD PTR [esp+ecx*4+0x378],eax
10017432:	je     0x10017439
10017434:	inc    ecx
10017435:	cmp    ecx,edx
10017437:	jb     0x1001742b
10017439:	cmp    ecx,edx
1001743b:	jne    0x10017454
1001743d:	cmp    edx,0x40
10017440:	jae    0x10017454
10017442:	mov    eax,DWORD PTR [esi]
10017444:	mov    eax,DWORD PTR [eax]
10017446:	mov    DWORD PTR [esp+ecx*4+0x378],eax
1001744d:	inc    DWORD PTR [esp+0x374]
10017454:	mov    esi,DWORD PTR [esi]
10017456:	add    esi,0x4
10017459:	push   esi
1001745a:	call   DWORD PTR ds:0x100670fc
10017460:	inc    edi
10017461:	cmp    edi,DWORD PTR [esp+0x18]
10017465:	jne    0x100173dc
1001746b:	mov    eax,DWORD PTR [esp+0x68c]
10017472:	mov    ecx,DWORD PTR [esp+0x374]
10017479:	lea    esi,[eax+ecx*1]
1001747c:	add    esi,DWORD PTR [esp+0x26c]
10017483:	cmp    esi,ebx
10017485:	mov    DWORD PTR [esp+0x2c],esi
10017489:	jg     0x100174f4
1001748b:	cmp    DWORD PTR [ebp+0x18],ebx
1001748e:	je     0x100174d5
10017490:	lea    eax,[esp+0x3c]
10017494:	push   eax
10017495:	call   DWORD PTR ds:0x10067124
1001749b:	xor    eax,eax
1001749d:	mov    DWORD PTR [esp+0x4c],ebx
100174a1:	lea    edi,[esp+0x50]
100174a5:	stos   DWORD PTR es:[edi],eax
100174a6:	lea    eax,[esp+0x3c]
100174aa:	push   eax
100174ab:	call   DWORD PTR ds:0x10067124
100174b1:	lea    eax,[esp+0x4c]
100174b5:	push   eax
100174b6:	lea    eax,[esp+0x40]
100174ba:	push   eax
100174bb:	call   DWORD PTR ds:0x1006710c
100174c1:	lea    eax,[esp+0x20]
100174c5:	push   eax
100174c6:	lea    eax,[esp+0x50]
100174ca:	push   eax
100174cb:	call   DWORD PTR ds:0x10067138
100174d1:	test   eax,eax
100174d3:	jge    0x100174f4
100174d5:	push   DWORD PTR [esp+0x14]
100174d9:	call   DWORD PTR ds:0x10067144
100174df:	cmp    DWORD PTR [esp+0x14],0x64
100174e4:	jae    0x1001728d
100174ea:	add    DWORD PTR [esp+0x14],0x2
100174ef:	jmp    0x1001728d
100174f4:	cmp    esi,0xffffffff
100174f7:	je     0x100175fa
100174fd:	mov    eax,DWORD PTR [ebp+0xc]
10017500:	test   eax,eax
10017502:	je     0x10017512
10017504:	lea    ecx,[esp+0x26c]
1001750b:	push   ecx
1001750c:	call   0x10016e6f
10017511:	pop    ecx
10017512:	mov    eax,DWORD PTR [ebp+0x10]
10017515:	test   eax,eax
10017517:	je     0x10017527
10017519:	lea    ecx,[esp+0x374]
10017520:	push   ecx
10017521:	call   0x10016e6f
10017526:	pop    ecx
10017527:	mov    eax,DWORD PTR [ebp+0x14]
1001752a:	test   eax,eax
1001752c:	je     0x10017556
1001752e:	lea    ecx,[esp+0x68c]
10017535:	push   ecx
10017536:	call   0x10016e6f
1001753b:	pop    ecx
1001753c:	jmp    0x10017556
1001753e:	push   DWORD PTR [ebp+0x1c]
10017541:	push   DWORD PTR [ebp+0x18]
10017544:	push   edi
10017545:	push   esi
10017546:	push   DWORD PTR [ebp+0xc]
10017549:	push   DWORD PTR [ebp+0x8]
1001754c:	call   DWORD PTR ds:0x10082d48
10017552:	mov    DWORD PTR [esp+0x2c],eax
10017556:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1001755b:	je     0x100175fa
10017561:	cmp    DWORD PTR [ebp+0x10],0x0
10017565:	je     0x100175fa
1001756b:	cmp    DWORD PTR [esp+0x47c],0x0
10017573:	jbe    0x100175fa
10017579:	xor    ebx,ebx
1001757b:	cmp    DWORD PTR [esp+0x47c],ebx
10017582:	je     0x100175fa
10017584:	mov    edi,DWORD PTR [ebp+0x10]
10017587:	add    edi,0x4
1001758a:	mov    esi,DWORD PTR [edi]
1001758c:	lea    eax,[esp+0x47c]
10017593:	push   eax
10017594:	push   esi
10017595:	call   0x10050fac
1001759a:	test   eax,eax
1001759c:	je     0x100175ed
1001759e:	push   esi
1001759f:	call   0x100163b2
100175a4:	pop    ecx
100175a5:	mov    DWORD PTR [esp+0x18],eax
100175a9:	test   eax,eax
100175ab:	mov    BYTE PTR [esp+0xaa0],0x4
100175b3:	je     0x100175e4
100175b5:	add    eax,0x4
100175b8:	push   eax
100175b9:	call   DWORD PTR ds:0x100670f8
100175bf:	mov    eax,DWORD PTR [esp+0x18]
100175c3:	cmp    BYTE PTR [eax+0x25],0x0
100175c7:	jne    0x100175da
100175c9:	mov    BYTE PTR [eax+0x24],0x0
100175cd:	mov    esi,DWORD PTR [esp+0x18]
100175d1:	call   0x1001658a
100175d6:	mov    eax,DWORD PTR [esp+0x18]
100175da:	add    eax,0x4
100175dd:	push   eax
100175de:	call   DWORD PTR ds:0x100670fc
100175e4:	lea    ecx,[esp+0x18]
100175e8:	call   0x10016239
100175ed:	inc    ebx
100175ee:	add    edi,0x4
100175f1:	cmp    ebx,DWORD PTR [esp+0x47c]
100175f8:	jne    0x1001758a
100175fa:	mov    esi,0x10016239
100175ff:	push   esi
10017600:	push   0x40
10017602:	push   0x4
10017604:	lea    eax,[esp+0x9a0]
1001760b:	push   eax
1001760c:	mov    BYTE PTR [esp+0xab0],0x2
10017614:	call   0x1004325e
10017619:	push   esi
1001761a:	push   0x40
1001761c:	push   0x4
1001761e:	lea    eax,[esp+0x7a0]
10017625:	push   eax
10017626:	mov    BYTE PTR [esp+0xab0],0x1
1001762e:	call   0x1004325e
10017633:	push   esi
10017634:	push   0x40
10017636:	push   0x4
10017638:	lea    eax,[esp+0x8a0]
1001763f:	push   eax
10017640:	mov    BYTE PTR [esp+0xab0],0x0
10017648:	call   0x1004325e
1001764d:	lea    ecx,[esp+0x1c]
10017651:	call   0x10016239
10017656:	mov    eax,DWORD PTR [esp+0x2c]
1001765a:	mov    ecx,DWORD PTR [esp+0xa98]
10017661:	mov    DWORD PTR fs:0x0,ecx
10017668:	pop    ecx
10017669:	pop    edi
1001766a:	pop    esi
1001766b:	pop    ebx
1001766c:	mov    esp,ebp
1001766e:	pop    ebp
1001766f:	ret    0x18
10017672:	and    DWORD PTR [ecx],0x0
10017675:	ret    
10017676:	push   0x14
10017678:	push   0x10076910
1001767d:	call   0x1004771c
10017682:	mov    ebx,DWORD PTR [ebp+0x8]
10017685:	or     DWORD PTR [ebp-0x20],0xffffffff
10017689:	xor    esi,esi
1001768b:	cmp    DWORD PTR [ebx+0x1c],esi
1001768e:	je     0x10017749
10017694:	cmp    DWORD PTR [ebx+0x38],esi
10017697:	je     0x100176ac
10017699:	mov    eax,DWORD PTR [ebp+0x14]
1001769c:	mov    DWORD PTR [eax],esi
1001769e:	mov    eax,DWORD PTR [ebx+0x38]
100176a1:	mov    DWORD PTR [ecx],eax
100176a3:	or     DWORD PTR [ebp-0x20],0xffffffff
100176a7:	jmp    0x10017749
100176ac:	mov    DWORD PTR [ebp-0x1c],esi
100176af:	mov    DWORD PTR [ebp-0x4],esi
100176b2:	mov    eax,ebx
100176b4:	call   0x100164c0
100176b9:	xor    eax,eax
100176bb:	mov    DWORD PTR [ebp-0x24],eax
100176be:	cmp    eax,DWORD PTR [ebp+0x10]
100176c1:	je     0x1001771e
100176c3:	mov    ecx,DWORD PTR [ebp+0xc]
100176c6:	lea    edi,[ecx+eax*8]
100176c9:	mov    eax,DWORD PTR [edi]
100176cb:	mov    ecx,DWORD PTR [edi+0x4]
100176ce:	mov    edx,DWORD PTR [ebx+0x1c]
100176d1:	mov    esi,DWORD PTR [edx+0x30]
100176d4:	mov    DWORD PTR [esi+0xc],ecx
100176d7:	mov    DWORD PTR [esi+0x10],eax
100176da:	mov    BYTE PTR [esi+0x18],0x0
100176de:	and    DWORD PTR [esi+0x14],0x0
100176e2:	push   DWORD PTR [esi+0x4]
100176e5:	call   DWORD PTR ds:0x10067148
100176eb:	mov    eax,DWORD PTR [esi+0x8]
100176ee:	push   0xffffffff
100176f0:	push   eax
100176f1:	call   DWORD PTR ds:0x1006707c
100176f7:	mov    esi,DWORD PTR [esi+0x14]
100176fa:	add    DWORD PTR [ebp-0x1c],esi
100176fd:	cmp    esi,DWORD PTR [edi]
100176ff:	jae    0x10017712
10017701:	cmp    BYTE PTR [ebx+0x26],0x0
10017705:	je     0x1001771c
10017707:	push   0xc8
1001770c:	call   DWORD PTR ds:0x10067144
10017712:	inc    DWORD PTR [ebp-0x24]
10017715:	mov    eax,DWORD PTR [ebp-0x24]
10017718:	xor    esi,esi
1001771a:	jmp    0x100176be
1001771c:	xor    esi,esi
1001771e:	cmp    DWORD PTR [ebp-0x1c],esi
10017721:	jne    0x10017732
10017723:	mov    eax,DWORD PTR [ebx+0x20]
10017726:	cmp    eax,0x1
10017729:	mov    DWORD PTR [ebp-0x20],0x2746
10017730:	je     0x10017735
10017732:	mov    DWORD PTR [ebp-0x20],esi
10017735:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001773c:	call   0x10017755
10017741:	mov    eax,DWORD PTR [ebp+0x14]
10017744:	mov    ecx,DWORD PTR [ebp-0x1c]
10017747:	mov    DWORD PTR [eax],ecx
10017749:	mov    eax,DWORD PTR [ebp-0x20]
1001774c:	call   0x10047761
10017751:	ret    
10017752:	mov    ebx,DWORD PTR [ebp+0x8]
10017755:	add    ebx,0x4
10017758:	push   ebx
10017759:	call   DWORD PTR ds:0x100670fc
1001775f:	ret    
10017760:	push   0x4
10017762:	mov    eax,0x100600d8
10017767:	call   0x10059df5
1001776c:	push   DWORD PTR [ebp+0x8]
1001776f:	call   0x100163b2
10017774:	pop    ecx
10017775:	mov    DWORD PTR [ebp-0x10],eax
10017778:	xor    ecx,ecx
1001777a:	cmp    DWORD PTR [ebp+0x1c],ecx
1001777d:	mov    DWORD PTR [ebp-0x4],ecx
10017780:	jne    0x100177a2
10017782:	cmp    eax,ecx
10017784:	je     0x100177a2
10017786:	cmp    BYTE PTR [eax+0x25],cl
10017789:	je     0x100177a2
1001778b:	push   DWORD PTR [ebp+0x14]
1001778e:	mov    ecx,DWORD PTR [ebp+0x28]
10017791:	push   DWORD PTR [ebp+0x10]
10017794:	push   DWORD PTR [ebp+0xc]
10017797:	push   eax
10017798:	call   0x10017676
1001779d:	add    esp,0x10
100177a0:	jmp    0x100177c3
100177a2:	push   DWORD PTR [ebp+0x28]
100177a5:	push   DWORD PTR [ebp+0x24]
100177a8:	push   DWORD PTR [ebp+0x20]
100177ab:	push   DWORD PTR [ebp+0x1c]
100177ae:	push   DWORD PTR [ebp+0x18]
100177b1:	push   DWORD PTR [ebp+0x14]
100177b4:	push   DWORD PTR [ebp+0x10]
100177b7:	push   DWORD PTR [ebp+0xc]
100177ba:	push   DWORD PTR [ebp+0x8]
100177bd:	call   DWORD PTR ds:0x10082d4c
100177c3:	lea    ecx,[ebp-0x10]
100177c6:	mov    esi,eax
100177c8:	call   0x10016239
100177cd:	mov    eax,esi
100177cf:	call   0x10059ecd
100177d4:	ret    0x24
100177d7:	push   0x10
100177d9:	mov    eax,0x100648dc
100177de:	call   0x10059e28
100177e3:	push   DWORD PTR [ebp+0x20]
100177e6:	mov    edi,DWORD PTR [ebp+0x14]
100177e9:	push   DWORD PTR [ebp+0x1c]
100177ec:	xor    esi,esi
100177ee:	mov    DWORD PTR [ebp-0x14],esi
100177f1:	push   DWORD PTR [ebp+0x18]
100177f4:	push   edi
100177f5:	push   DWORD PTR [ebp+0x10]
100177f8:	push   DWORD PTR [ebp+0xc]
100177fb:	push   DWORD PTR [ebp+0x8]
100177fe:	call   DWORD PTR ds:0x10082d60
10017804:	xor    ebx,ebx
10017806:	mov    DWORD PTR [ebp+0x1c],eax
10017809:	mov    eax,ds:0x10082cec
1001780e:	inc    ebx
1001780f:	cmp    eax,ebx
10017811:	je     0x10017818
10017813:	cmp    eax,0x4
10017816:	jne    0x1001782e
10017818:	push   esi
10017819:	push   ebx
1001781a:	push   0x10082ef4
1001781f:	call   DWORD PTR ds:0x100670ec
10017825:	cmp    eax,esi
10017827:	jne    0x1001782e
10017829:	call   0x100126eb
1001782e:	mov    DWORD PTR [ebp-0x4],esi
10017831:	call   0x1001885c
10017836:	test   al,al
10017838:	je     0x10017871
1001783a:	push   esi
1001783b:	push   0x10082e10
10017840:	call   DWORD PTR ds:0x100670f0
10017846:	test   eax,eax
10017848:	jne    0x1001786b
1001784a:	push   ebx
1001784b:	lea    eax,[ebp+0x18]
1001784e:	push   eax
1001784f:	call   0x10034910
10017854:	push   ebx
10017855:	mov    BYTE PTR [ebp-0x4],bl
10017858:	push   eax
10017859:	lea    ecx,[ebp-0x1c]
1001785c:	mov    DWORD PTR [ebp-0x14],ebx
1001785f:	call   0x100358a0
10017864:	mov    ecx,DWORD PTR [eax]
10017866:	or     ecx,DWORD PTR [eax+0x4]
10017869:	jne    0x10017871
1001786b:	mov    BYTE PTR [ebp+0x23],0x0
1001786f:	jmp    0x10017874
10017871:	mov    BYTE PTR [ebp+0x23],bl
10017874:	mov    DWORD PTR [ebp-0x4],esi
10017877:	test   BYTE PTR [ebp-0x14],bl
1001787a:	je     0x10017885
1001787c:	push   DWORD PTR [ebp+0x18]
1001787f:	call   DWORD PTR ds:0x10067078
10017885:	cmp    BYTE PTR [ebp+0x23],0x0
10017889:	jne    0x100178c2
1001788b:	mov    esi,DWORD PTR [ebp+0x1c]
1001788e:	or     DWORD PTR [ebp-0x4],0xffffffff
10017892:	cmp    esi,0xffffffff
10017895:	je     0x100178aa
10017897:	cmp    DWORD PTR [ebp+0xc],0x2
1001789b:	je     0x100178aa
1001789d:	cmp    DWORD PTR [edi+0x58],0x2
100178a1:	je     0x100178aa
100178a3:	push   esi
100178a4:	call   0x10016275
100178a9:	pop    ecx
100178aa:	mov    eax,esi
100178ac:	jmp    0x100178c5
100178ae:	mov    eax,0x100178c2
100178b3:	ret    
100178b4:	push   0x4
100178b6:	call   0x10038b80
100178bb:	pop    ecx
100178bc:	mov    eax,0x100178c2
100178c1:	ret    
100178c2:	mov    eax,DWORD PTR [ebp+0x1c]
100178c5:	call   0x10059ecd
100178ca:	ret    0x1c
100178cd:	push   ebp
100178ce:	mov    ebp,esp
100178d0:	pop    ebp
100178d1:	jmp    DWORD PTR ds:0x10082d58
100178d7:	push   ebp
100178d8:	mov    ebp,esp
100178da:	and    esp,0xfffffff8
100178dd:	push   esi
100178de:	push   edi
100178df:	push   0x100709e4
100178e4:	push   0xc
100178e6:	mov    ecx,0x10070a1c
100178eb:	call   0x100042b4
100178f0:	mov    esi,DWORD PTR ds:0x100673f8
100178f6:	pop    ecx
100178f7:	pop    ecx
100178f8:	push   eax
100178f9:	call   esi
100178fb:	mov    edi,DWORD PTR ds:0x100673ac
10017901:	push   eax
10017902:	call   edi
10017904:	cmp    ebx,eax
10017906:	jb     0x10017929
10017908:	push   0x10070a2c
1001790d:	push   0xc
1001790f:	mov    ecx,0x10070a5c
10017914:	call   0x100042b4
10017919:	pop    ecx
1001791a:	pop    ecx
1001791b:	push   eax
1001791c:	call   esi
1001791e:	push   eax
1001791f:	call   edi
10017921:	cmp    ebx,eax
10017923:	jbe    0x10017acf
10017929:	push   0x10070a6c
1001792e:	push   0xc
10017930:	mov    ecx,0x10070aa0
10017935:	call   0x100042b4
1001793a:	pop    ecx
1001793b:	pop    ecx
1001793c:	push   eax
1001793d:	call   esi
1001793f:	push   eax
10017940:	call   edi
10017942:	cmp    ebx,eax
10017944:	jb     0x10017967
10017946:	push   0x10070ab0
1001794b:	push   0xc
1001794d:	mov    ecx,0x10070ae8
10017952:	call   0x100042b4
10017957:	pop    ecx
10017958:	pop    ecx
10017959:	push   eax
1001795a:	call   esi
1001795c:	push   eax
1001795d:	call   edi
1001795f:	cmp    ebx,eax
10017961:	jbe    0x10017acf
10017967:	push   0x10070af8
1001796c:	push   0xd
1001796e:	mov    ecx,0x10070b30
10017973:	call   0x100042b4
10017978:	pop    ecx
10017979:	pop    ecx
1001797a:	push   eax
1001797b:	call   esi
1001797d:	push   eax
1001797e:	call   edi
10017980:	cmp    ebx,eax
10017982:	jb     0x100179a5
10017984:	push   0x10070b40
10017989:	push   0xd
1001798b:	mov    ecx,0x10070b70
10017990:	call   0x100042b4
10017995:	pop    ecx
10017996:	pop    ecx
10017997:	push   eax
10017998:	call   esi
1001799a:	push   eax
1001799b:	call   edi
1001799d:	cmp    ebx,eax
1001799f:	jbe    0x10017acf
100179a5:	push   0x10070b80
100179aa:	push   0xc
100179ac:	mov    ecx,0x10070bac
100179b1:	call   0x100042b4
100179b6:	pop    ecx
100179b7:	pop    ecx
100179b8:	push   eax
100179b9:	call   esi
100179bb:	push   eax
100179bc:	call   edi
100179be:	cmp    ebx,eax
100179c0:	jb     0x100179e3
100179c2:	push   0x10070bbc
100179c7:	push   0xc
100179c9:	mov    ecx,0x10070bf0
100179ce:	call   0x100042b4
100179d3:	pop    ecx
100179d4:	pop    ecx
100179d5:	push   eax
100179d6:	call   esi
100179d8:	push   eax
100179d9:	call   edi
100179db:	cmp    ebx,eax
100179dd:	jbe    0x10017acf
100179e3:	push   0x10070c00
100179e8:	push   0xe
100179ea:	mov    ecx,0x10070c24
100179ef:	call   0x100042b4
100179f4:	pop    ecx
100179f5:	pop    ecx
100179f6:	push   eax
100179f7:	call   esi
100179f9:	push   eax
100179fa:	call   edi
100179fc:	cmp    ebx,eax
100179fe:	jb     0x10017a21
10017a00:	push   0x10070c34
10017a05:	push   0xe
10017a07:	mov    ecx,0x10070c68
10017a0c:	call   0x100042b4
10017a11:	pop    ecx
10017a12:	pop    ecx
10017a13:	push   eax
10017a14:	call   esi
10017a16:	push   eax
10017a17:	call   edi
10017a19:	cmp    ebx,eax
10017a1b:	jbe    0x10017acf
10017a21:	push   0x10070c78
10017a26:	push   0xc
10017a28:	mov    ecx,0x10070cb0
10017a2d:	call   0x100042b4
10017a32:	pop    ecx
10017a33:	pop    ecx
10017a34:	push   eax
10017a35:	call   esi
10017a37:	push   eax
10017a38:	call   edi
10017a3a:	cmp    ebx,eax
10017a3c:	jb     0x10017a5b
10017a3e:	push   0x10070cc0
10017a43:	push   0xc
10017a45:	mov    ecx,0x10070cf8
10017a4a:	call   0x100042b4
10017a4f:	pop    ecx
10017a50:	pop    ecx
10017a51:	push   eax
10017a52:	call   esi
10017a54:	push   eax
10017a55:	call   edi
10017a57:	cmp    ebx,eax
10017a59:	jbe    0x10017acf
10017a5b:	push   0x10070d08
10017a60:	push   0xc
10017a62:	mov    ecx,0x10070d2c
10017a67:	call   0x100042b4
10017a6c:	pop    ecx
10017a6d:	pop    ecx
10017a6e:	push   eax
10017a6f:	call   esi
10017a71:	push   eax
10017a72:	call   edi
10017a74:	cmp    ebx,eax
10017a76:	jb     0x10017a95
10017a78:	push   0x10070d3c
10017a7d:	push   0xc
10017a7f:	mov    ecx,0x10070d68
10017a84:	call   0x100042b4
10017a89:	pop    ecx
10017a8a:	pop    ecx
10017a8b:	push   eax
10017a8c:	call   esi
10017a8e:	push   eax
10017a8f:	call   edi
10017a91:	cmp    ebx,eax
10017a93:	jbe    0x10017acf
10017a95:	push   0x10070d78
10017a9a:	push   0xc
10017a9c:	mov    ecx,0x10070da4
10017aa1:	call   0x100042b4
10017aa6:	pop    ecx
10017aa7:	pop    ecx
10017aa8:	push   eax
10017aa9:	call   esi
10017aab:	push   eax
10017aac:	call   edi
10017aae:	cmp    ebx,eax
10017ab0:	jb     0x10017ad4
10017ab2:	push   0x10070db4
10017ab7:	push   0xc
10017ab9:	mov    ecx,0x10070de0
10017abe:	call   0x100042b4
10017ac3:	pop    ecx
10017ac4:	pop    ecx
10017ac5:	push   eax
10017ac6:	call   esi
10017ac8:	push   eax
10017ac9:	call   edi
10017acb:	cmp    ebx,eax
10017acd:	ja     0x10017ad4
10017acf:	xor    eax,eax
10017ad1:	inc    eax
10017ad2:	jmp    0x10017ad6
10017ad4:	xor    eax,eax
10017ad6:	pop    edi
10017ad7:	pop    esi
10017ad8:	mov    esp,ebp
10017ada:	pop    ebp
10017adb:	ret    
10017adc:	mov    eax,DWORD PTR [esp+0x4]
10017ae0:	mov    ecx,DWORD PTR [eax]
10017ae2:	push   0x1006e2d8
10017ae7:	push   0x10070df0
10017aec:	push   eax
10017aed:	call   DWORD PTR [ecx+0xc]
10017af0:	ret    0x4
10017af3:	mov    eax,DWORD PTR [esi+0x8]
10017af6:	push   0x4
10017af8:	inc    eax
10017af9:	push   eax
10017afa:	push   DWORD PTR [esi]
10017afc:	call   0x100464b9
10017b01:	add    esp,0xc
10017b04:	test   eax,eax
10017b06:	jne    0x10017b0c
10017b08:	xor    eax,eax
10017b0a:	jmp    0x10017b52
10017b0c:	mov    DWORD PTR [esi],eax
10017b0e:	mov    eax,DWORD PTR [esi+0x8]
10017b11:	push   0x4
10017b13:	inc    eax
10017b14:	push   eax
10017b15:	push   DWORD PTR [esi+0x4]
10017b18:	call   0x100464b9
10017b1d:	add    esp,0xc
10017b20:	test   eax,eax
10017b22:	je     0x10017b08
10017b24:	mov    DWORD PTR [esi+0x4],eax
10017b27:	mov    eax,DWORD PTR [esi+0x8]
10017b2a:	mov    ecx,eax
10017b2c:	mov    eax,DWORD PTR [esi]
10017b2e:	shl    ecx,0x2
10017b31:	add    eax,ecx
10017b33:	je     0x10017b3d
10017b35:	mov    edx,DWORD PTR [esp+0x4]
10017b39:	mov    edx,DWORD PTR [edx]
10017b3b:	mov    DWORD PTR [eax],edx
10017b3d:	mov    eax,DWORD PTR [esi+0x4]
10017b40:	add    eax,ecx
10017b42:	je     0x10017b4c
10017b44:	mov    ecx,DWORD PTR [esp+0x8]
10017b48:	mov    ecx,DWORD PTR [ecx]
10017b4a:	mov    DWORD PTR [eax],ecx
10017b4c:	inc    DWORD PTR [esi+0x8]
10017b4f:	xor    eax,eax
10017b51:	inc    eax
10017b52:	ret    0x8
10017b55:	mov    eax,DWORD PTR [esi]
10017b57:	test   eax,eax
10017b59:	je     0x10017b65
10017b5b:	push   eax
10017b5c:	call   0x100437dc
10017b61:	and    DWORD PTR [esi],0x0
10017b64:	pop    ecx
10017b65:	mov    eax,DWORD PTR [esi+0x4]
10017b68:	test   eax,eax
10017b6a:	je     0x10017b77
10017b6c:	push   eax
10017b6d:	call   0x100437dc
10017b72:	and    DWORD PTR [esi+0x4],0x0
10017b76:	pop    ecx
10017b77:	and    DWORD PTR [esi+0x8],0x0
10017b7b:	ret    
10017b7c:	test   eax,eax
10017b7e:	jl     0x10017b8c
10017b80:	cmp    eax,DWORD PTR [ecx+0x8]
10017b83:	jge    0x10017b8c
10017b85:	mov    ecx,DWORD PTR [ecx+0x4]
10017b88:	lea    eax,[ecx+eax*4]
10017b8b:	ret    
10017b8c:	push   0x0
10017b8e:	push   0x0
10017b90:	push   0x1
10017b92:	push   0xc000008c
10017b97:	call   DWORD PTR ds:0x10067110
10017b9d:	int3   
10017b9e:	push   DWORD PTR [esi]
10017ba0:	call   0x10043178
10017ba5:	and    DWORD PTR [esi],0x0
10017ba8:	pop    ecx
10017ba9:	ret    
10017baa:	lea    ecx,[eax+0x4]
10017bad:	cmp    DWORD PTR [eax],ecx
10017baf:	je     0x10017bb6
10017bb1:	jmp    0x10017d3f
10017bb6:	ret    
10017bb7:	push   ebp
10017bb8:	mov    ebp,esp
10017bba:	and    esp,0xfffffff8
10017bbd:	push   ecx
10017bbe:	push   ecx
10017bbf:	mov    eax,ds:0x10082eec
10017bc4:	mov    edx,DWORD PTR [eax]
10017bc6:	push   esi
10017bc7:	push   edi
10017bc8:	mov    ecx,0x10082ee8
10017bcd:	push   eax
10017bce:	mov    esi,ecx
10017bd0:	push   esi
10017bd1:	push   edx
10017bd2:	push   ecx
10017bd3:	lea    edi,[esp+0x18]
10017bd7:	call   0x10017d48
10017bdc:	push   DWORD PTR ds:0x10082eec
10017be2:	call   0x10042fe2
10017be7:	and    DWORD PTR ds:0x10082eec,0x0
10017bee:	and    DWORD PTR ds:0x10082ef0,0x0
10017bf5:	pop    ecx
10017bf6:	pop    edi
10017bf7:	pop    esi
10017bf8:	mov    esp,ebp
10017bfa:	pop    ebp
10017bfb:	ret    
10017bfc:	push   ebp
10017bfd:	mov    ebp,esp
10017bff:	sub    esp,0x14
10017c02:	mov    ecx,DWORD PTR ds:0x10082eec
10017c08:	mov    eax,DWORD PTR [ecx+0x4]
10017c0b:	cmp    BYTE PTR [eax+0x15],0x0
10017c0f:	push   ebx
10017c10:	push   esi
10017c11:	mov    ebx,ecx
10017c13:	mov    BYTE PTR [ebp-0x8],0x1
10017c17:	jne    0x10017c3a
10017c19:	mov    edx,DWORD PTR [ebp+0x8]
10017c1c:	mov    esi,DWORD PTR [edx]
10017c1e:	cmp    esi,DWORD PTR [eax+0xc]
10017c21:	mov    ebx,eax
10017c23:	setb   BYTE PTR [ebp-0x8]
10017c27:	cmp    BYTE PTR [ebp-0x8],0x0
10017c2b:	je     0x10017c31
10017c2d:	mov    eax,DWORD PTR [eax]
10017c2f:	jmp    0x10017c34
10017c31:	mov    eax,DWORD PTR [eax+0x8]
10017c34:	cmp    BYTE PTR [eax+0x15],0x0
10017c38:	je     0x10017c1e
10017c3a:	cmp    BYTE PTR [ebp-0x8],0x0
10017c3e:	mov    eax,ebx
10017c40:	mov    DWORD PTR [ebp-0xc],eax
10017c43:	mov    DWORD PTR [ebp-0x10],0x10082ee8
10017c4a:	je     0x10017c74
10017c4c:	cmp    ebx,DWORD PTR [ecx]
10017c4e:	jne    0x10017c69
10017c50:	push   DWORD PTR [ebp+0x8]
10017c53:	push   0x1
10017c55:	lea    eax,[ebp-0x10]
10017c58:	push   eax
10017c59:	call   0x10017e41
10017c5e:	mov    ecx,DWORD PTR [eax]
10017c60:	mov    eax,DWORD PTR [eax+0x4]
10017c63:	mov    BYTE PTR [edi+0x8],0x1
10017c67:	jmp    0x10017c8b
10017c69:	lea    esi,[ebp-0x10]
10017c6c:	call   0x10017f9e
10017c71:	mov    eax,DWORD PTR [ebp-0xc]
10017c74:	mov    edx,DWORD PTR [eax+0xc]
10017c77:	mov    ecx,DWORD PTR [ebp+0x8]
10017c7a:	cmp    edx,DWORD PTR [ecx]
10017c7c:	jae    0x10017c84
10017c7e:	push   ecx
10017c7f:	push   DWORD PTR [ebp-0x8]
10017c82:	jmp    0x10017c55
10017c84:	mov    ecx,DWORD PTR [ebp-0x10]
10017c87:	mov    BYTE PTR [edi+0x8],0x0
10017c8b:	pop    esi
10017c8c:	mov    DWORD PTR [edi+0x4],eax
10017c8f:	mov    DWORD PTR [edi],ecx
10017c91:	mov    eax,edi
10017c93:	pop    ebx
10017c94:	leave  
10017c95:	ret    0x4
10017c98:	push   ebp
10017c99:	mov    ebp,esp
10017c9b:	and    esp,0xfffffff8
10017c9e:	sub    esp,0x2c
10017ca1:	mov    ecx,DWORD PTR ds:0x10082eec
10017ca7:	mov    eax,DWORD PTR [ecx+0x4]
10017caa:	cmp    BYTE PTR [eax+0x15],0x0
10017cae:	push   ebx
10017caf:	push   esi
10017cb0:	push   edi
10017cb1:	mov    DWORD PTR [esp+0x14],ecx
10017cb5:	jne    0x10017ccf
10017cb7:	mov    ecx,DWORD PTR [edx]
10017cb9:	cmp    ecx,DWORD PTR [eax+0xc]
10017cbc:	jae    0x10017cc6
10017cbe:	mov    DWORD PTR [esp+0x14],eax
10017cc2:	mov    eax,DWORD PTR [eax]
10017cc4:	jmp    0x10017cc9
10017cc6:	mov    eax,DWORD PTR [eax+0x8]
10017cc9:	cmp    BYTE PTR [eax+0x15],0x0
10017ccd:	je     0x10017cb9
10017ccf:	push   edx
10017cd0:	lea    eax,[esp+0x24]
10017cd4:	mov    edi,0x10082ee8
10017cd9:	call   0x10017e0a
10017cde:	mov    ecx,DWORD PTR [eax+0x4]
10017ce1:	mov    ebx,DWORD PTR [eax]
10017ce3:	mov    eax,DWORD PTR [eax+0x4]
10017ce6:	and    DWORD PTR [esp+0x10],0x0
10017ceb:	mov    DWORD PTR [esp+0x2c],ecx
10017cef:	mov    ecx,ebx
10017cf1:	mov    DWORD PTR [esp+0x18],ecx
10017cf5:	mov    DWORD PTR [esp+0x1c],eax
10017cf9:	cmp    DWORD PTR [esp+0x18],0x0
10017cfe:	je     0x10017d06
10017d00:	cmp    DWORD PTR [esp+0x18],edi
10017d04:	je     0x10017d0b
10017d06:	call   0x10043605
10017d0b:	mov    eax,DWORD PTR [esp+0x14]
10017d0f:	cmp    DWORD PTR [esp+0x1c],eax
10017d13:	je     0x10017d24
10017d15:	inc    DWORD PTR [esp+0x10]
10017d19:	lea    esi,[esp+0x18]
10017d1d:	call   0x100183a1
10017d22:	jmp    0x10017cf9
10017d24:	push   eax
10017d25:	push   edi
10017d26:	push   DWORD PTR [esp+0x34]
10017d2a:	lea    edi,[esp+0x2c]
10017d2e:	push   ebx
10017d2f:	call   0x10017d48
10017d34:	mov    eax,DWORD PTR [esp+0x10]
10017d38:	pop    edi
10017d39:	pop    esi
10017d3a:	pop    ebx
10017d3b:	mov    esp,ebp
10017d3d:	pop    ebp
10017d3e:	ret    
10017d3f:	push   DWORD PTR [eax]
10017d41:	call   0x100437dc
10017d46:	pop    ecx
10017d47:	ret    
10017d48:	push   ebp
10017d49:	mov    ebp,esp
10017d4b:	mov    eax,ds:0x10082eec
10017d50:	sub    esp,0x10
10017d53:	cmp    DWORD PTR [ebp+0x8],0x0
10017d57:	push   ebx
10017d58:	mov    ebx,DWORD PTR [eax]
10017d5a:	push   esi
10017d5b:	mov    esi,0x10082ee8
10017d60:	je     0x10017d67
10017d62:	cmp    DWORD PTR [ebp+0x8],esi
10017d65:	je     0x10017d6c
10017d67:	call   0x10043605
10017d6c:	cmp    DWORD PTR [ebp+0xc],ebx
10017d6f:	jne    0x10017dc4
10017d71:	cmp    DWORD PTR [ebp+0x10],0x0
10017d75:	mov    ebx,DWORD PTR ds:0x10082eec
10017d7b:	je     0x10017d82
10017d7d:	cmp    DWORD PTR [ebp+0x10],esi
10017d80:	je     0x10017d87
10017d82:	call   0x10043605
10017d87:	cmp    DWORD PTR [ebp+0x14],ebx
10017d8a:	jne    0x10017dc4
10017d8c:	mov    eax,ds:0x10082eec
10017d91:	push   DWORD PTR [eax+0x4]
10017d94:	mov    ecx,esi
10017d96:	call   0x10018345
10017d9b:	mov    eax,ds:0x10082eec
10017da0:	mov    DWORD PTR [eax+0x4],eax
10017da3:	mov    eax,ds:0x10082eec
10017da8:	and    DWORD PTR ds:0x10082ef0,0x0
10017daf:	mov    DWORD PTR [eax],eax
10017db1:	mov    eax,ds:0x10082eec
10017db6:	mov    DWORD PTR [eax+0x8],eax
10017db9:	mov    eax,ds:0x10082eec
10017dbe:	mov    eax,DWORD PTR [eax]
10017dc0:	mov    DWORD PTR [edi],esi
10017dc2:	jmp    0x10017dff
10017dc4:	mov    eax,DWORD PTR [ebp+0x8]
10017dc7:	test   eax,eax
10017dc9:	je     0x10017dd0
10017dcb:	cmp    eax,DWORD PTR [ebp+0x10]
10017dce:	je     0x10017dd5
10017dd0:	call   0x10043605
10017dd5:	mov    eax,DWORD PTR [ebp+0xc]
10017dd8:	cmp    eax,DWORD PTR [ebp+0x14]
10017ddb:	je     0x10017dfa
10017ddd:	mov    ebx,DWORD PTR [ebp+0x8]
10017de0:	lea    esi,[ebp+0x8]
10017de3:	mov    DWORD PTR [ebp-0x4],eax
10017de6:	call   0x100183a1
10017deb:	push   DWORD PTR [ebp-0x4]
10017dee:	lea    eax,[ebp-0x10]
10017df1:	push   ebx
10017df2:	push   eax
10017df3:	call   0x10018020
10017df8:	jmp    0x10017dc4
10017dfa:	mov    ecx,DWORD PTR [ebp+0x8]
10017dfd:	mov    DWORD PTR [edi],ecx
10017dff:	pop    esi
10017e00:	mov    DWORD PTR [edi+0x4],eax
10017e03:	mov    eax,edi
10017e05:	pop    ebx
10017e06:	leave  
10017e07:	ret    0x10
10017e0a:	mov    edx,DWORD PTR ds:0x10082eec
10017e10:	mov    ecx,DWORD PTR [edx+0x4]
10017e13:	cmp    BYTE PTR [ecx+0x15],0x0
10017e17:	jne    0x10017e35
10017e19:	push   esi
10017e1a:	mov    esi,DWORD PTR [esp+0x8]
10017e1e:	mov    esi,DWORD PTR [esi]
10017e20:	cmp    DWORD PTR [ecx+0xc],esi
10017e23:	jae    0x10017e2a
10017e25:	mov    ecx,DWORD PTR [ecx+0x8]
10017e28:	jmp    0x10017e2e
10017e2a:	mov    edx,ecx
10017e2c:	mov    ecx,DWORD PTR [ecx]
10017e2e:	cmp    BYTE PTR [ecx+0x15],0x0
10017e32:	je     0x10017e20
10017e34:	pop    esi
10017e35:	mov    DWORD PTR [eax+0x4],edx
10017e38:	mov    DWORD PTR [eax],0x10082ee8
10017e3e:	ret    0x4
10017e41:	push   0x48
10017e43:	mov    eax,0x100607fe
10017e48:	call   0x10059df5
10017e4d:	cmp    DWORD PTR ds:0x10082ef0,0x1ffffffe
10017e57:	jb     0x10017e8b
10017e59:	push   0x1006e0f8
10017e5e:	lea    ecx,[ebp-0x2c]
10017e61:	call   0x100011a7
10017e66:	and    DWORD PTR [ebp-0x4],0x0
10017e6a:	lea    eax,[ebp-0x2c]
10017e6d:	push   eax
10017e6e:	lea    ecx,[ebp-0x54]
10017e71:	call   0x10001077
10017e76:	push   0x100764d0
10017e7b:	lea    eax,[ebp-0x54]
10017e7e:	push   eax
10017e7f:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10017e86:	call   0x10047942
10017e8b:	mov    eax,ds:0x10082eec
10017e90:	mov    esi,DWORD PTR [ebp+0x10]
10017e93:	push   eax
10017e94:	push   ebx
10017e95:	push   eax
10017e96:	call   0x1001830f
10017e9b:	inc    DWORD PTR ds:0x10082ef0
10017ea1:	mov    edi,eax
10017ea3:	mov    eax,ds:0x10082eec
10017ea8:	cmp    ebx,eax
10017eaa:	jne    0x10017ebd
10017eac:	mov    DWORD PTR [eax+0x4],edi
10017eaf:	mov    eax,ds:0x10082eec
10017eb4:	mov    DWORD PTR [eax],edi
10017eb6:	mov    eax,ds:0x10082eec
10017ebb:	jmp    0x10017edf
10017ebd:	cmp    BYTE PTR [ebp+0xc],0x0
10017ec1:	je     0x10017ed2
10017ec3:	mov    DWORD PTR [ebx],edi
10017ec5:	mov    eax,ds:0x10082eec
10017eca:	cmp    ebx,DWORD PTR [eax]
10017ecc:	jne    0x10017ee2
10017ece:	mov    DWORD PTR [eax],edi
10017ed0:	jmp    0x10017ee2
10017ed2:	mov    DWORD PTR [ebx+0x8],edi
10017ed5:	mov    eax,ds:0x10082eec
10017eda:	cmp    ebx,DWORD PTR [eax+0x8]
10017edd:	jne    0x10017ee2
10017edf:	mov    DWORD PTR [eax+0x8],edi
10017ee2:	mov    esi,edi
10017ee4:	lea    eax,[edi+0x4]
10017ee7:	jmp    0x10017f72
10017eec:	mov    ecx,DWORD PTR [eax]
10017eee:	mov    edx,DWORD PTR [ecx+0x4]
10017ef1:	cmp    ecx,DWORD PTR [edx]
10017ef3:	jne    0x10017f28
10017ef5:	mov    edx,DWORD PTR [edx+0x8]
10017ef8:	cmp    BYTE PTR [edx+0x14],0x0
10017efc:	je     0x10017f30
10017efe:	cmp    esi,DWORD PTR [ecx+0x8]
10017f01:	jne    0x10017f0a
10017f03:	mov    esi,ecx
10017f05:	call   0x10018293
10017f0a:	mov    eax,DWORD PTR [esi+0x4]
10017f0d:	mov    BYTE PTR [eax+0x14],0x1
10017f11:	mov    eax,DWORD PTR [esi+0x4]
10017f14:	mov    eax,DWORD PTR [eax+0x4]
10017f17:	mov    BYTE PTR [eax+0x14],0x0
10017f1b:	mov    eax,DWORD PTR [esi+0x4]
10017f1e:	mov    ecx,DWORD PTR [eax+0x4]
10017f21:	call   0x100182d0
10017f26:	jmp    0x10017f6f
10017f28:	mov    edx,DWORD PTR [edx]
10017f2a:	cmp    BYTE PTR [edx+0x14],0x0
10017f2e:	jne    0x10017f48
10017f30:	mov    BYTE PTR [ecx+0x14],0x1
10017f34:	mov    BYTE PTR [edx+0x14],0x1
10017f38:	mov    ecx,DWORD PTR [eax]
10017f3a:	mov    ecx,DWORD PTR [ecx+0x4]
10017f3d:	mov    BYTE PTR [ecx+0x14],0x0
10017f41:	mov    eax,DWORD PTR [eax]
10017f43:	mov    esi,DWORD PTR [eax+0x4]
10017f46:	jmp    0x10017f6f
10017f48:	cmp    esi,DWORD PTR [ecx]
10017f4a:	jne    0x10017f53
10017f4c:	mov    esi,ecx
10017f4e:	call   0x100182d0
10017f53:	mov    eax,DWORD PTR [esi+0x4]
10017f56:	mov    BYTE PTR [eax+0x14],0x1
10017f5a:	mov    eax,DWORD PTR [esi+0x4]
10017f5d:	mov    eax,DWORD PTR [eax+0x4]
10017f60:	mov    BYTE PTR [eax+0x14],0x0
10017f64:	mov    eax,DWORD PTR [esi+0x4]
10017f67:	mov    ecx,DWORD PTR [eax+0x4]
10017f6a:	call   0x10018293
10017f6f:	lea    eax,[esi+0x4]
10017f72:	mov    ecx,DWORD PTR [eax]
10017f74:	cmp    BYTE PTR [ecx+0x14],0x0
10017f78:	je     0x10017eec
10017f7e:	mov    eax,ds:0x10082eec
10017f83:	mov    eax,DWORD PTR [eax+0x4]
10017f86:	mov    BYTE PTR [eax+0x14],0x1
10017f8a:	mov    eax,DWORD PTR [ebp+0x8]
10017f8d:	mov    DWORD PTR [eax+0x4],edi
10017f90:	mov    DWORD PTR [eax],0x10082ee8
10017f96:	call   0x10059ecd
10017f9b:	ret    0xc
10017f9e:	push   ebx
10017f9f:	xor    ebx,ebx
10017fa1:	cmp    DWORD PTR [esi],ebx
10017fa3:	jne    0x10017faa
10017fa5:	call   0x10043605
10017faa:	mov    eax,DWORD PTR [esi+0x4]
10017fad:	cmp    BYTE PTR [eax+0x15],bl
10017fb0:	je     0x10017fbf
10017fb2:	mov    eax,DWORD PTR [eax+0x8]
10017fb5:	mov    DWORD PTR [esi+0x4],eax
10017fb8:	cmp    BYTE PTR [eax+0x15],bl
10017fbb:	je     0x10017ffb
10017fbd:	jmp    0x10017ff1
10017fbf:	mov    ecx,DWORD PTR [eax]
10017fc1:	cmp    BYTE PTR [ecx+0x15],bl
10017fc4:	jne    0x10017fe1
10017fc6:	jmp    0x10017fca
10017fc8:	mov    ecx,eax
10017fca:	mov    eax,DWORD PTR [ecx+0x8]
10017fcd:	cmp    BYTE PTR [eax+0x15],bl
10017fd0:	je     0x10017fc8
10017fd2:	mov    DWORD PTR [esi+0x4],ecx
10017fd5:	jmp    0x10017ffb
10017fd7:	mov    ecx,DWORD PTR [esi+0x4]
10017fda:	cmp    ecx,DWORD PTR [eax]
10017fdc:	jne    0x10017fe9
10017fde:	mov    DWORD PTR [esi+0x4],eax
10017fe1:	mov    eax,DWORD PTR [eax+0x4]
10017fe4:	cmp    BYTE PTR [eax+0x15],bl
10017fe7:	je     0x10017fd7
10017fe9:	mov    ecx,DWORD PTR [esi+0x4]
10017fec:	cmp    BYTE PTR [ecx+0x15],bl
10017fef:	je     0x10017ff8
10017ff1:	call   0x10043605
10017ff6:	jmp    0x10017ffb
10017ff8:	mov    DWORD PTR [esi+0x4],eax
10017ffb:	mov    eax,esi
10017ffd:	pop    ebx
10017ffe:	ret    
10017fff:	push   DWORD PTR [esp+0x8]
10018003:	call   0x10045143
10018008:	test   eax,eax
1001800a:	pop    ecx
1001800b:	jne    0x10018017
1001800d:	push   0x8007000e
10018012:	call   0x10001f2d
10018017:	mov    ecx,DWORD PTR [esp+0x4]
1001801b:	mov    DWORD PTR [ecx],eax
1001801d:	ret    0x8
10018020:	push   0x48
10018022:	mov    eax,0x100607fe
10018027:	call   0x10059df5
1001802c:	mov    ebx,DWORD PTR [ebp+0x10]
1001802f:	cmp    BYTE PTR [ebx+0x15],0x0
10018033:	je     0x10018067
10018035:	push   0x1006dcfc
1001803a:	lea    ecx,[ebp-0x2c]
1001803d:	call   0x100011a7
10018042:	and    DWORD PTR [ebp-0x4],0x0
10018046:	lea    eax,[ebp-0x2c]
10018049:	push   eax
1001804a:	lea    ecx,[ebp-0x54]
1001804d:	call   0x10001077
10018052:	push   0x10076428
10018057:	lea    eax,[ebp-0x54]
1001805a:	push   eax
1001805b:	mov    DWORD PTR [ebp-0x54],0x1006c988
10018062:	call   0x10047942
10018067:	lea    esi,[ebp+0xc]
1001806a:	call   0x100183a1
1001806f:	mov    ecx,DWORD PTR [ebx]
10018071:	cmp    BYTE PTR [ecx+0x15],0x0
10018075:	je     0x1001807c
10018077:	mov    edi,DWORD PTR [ebx+0x8]
1001807a:	jmp    0x10018093
1001807c:	mov    eax,DWORD PTR [ebx+0x8]
1001807f:	cmp    BYTE PTR [eax+0x15],0x0
10018083:	je     0x10018089
10018085:	mov    edi,ecx
10018087:	jmp    0x10018093
10018089:	mov    eax,DWORD PTR [ebp+0x10]
1001808c:	cmp    eax,ebx
1001808e:	mov    edi,DWORD PTR [eax+0x8]
10018091:	jne    0x1001810b
10018093:	cmp    BYTE PTR [edi+0x15],0x0
10018097:	mov    esi,DWORD PTR [ebx+0x4]
1001809a:	jne    0x1001809f
1001809c:	mov    DWORD PTR [edi+0x4],esi
1001809f:	mov    eax,ds:0x10082eec
100180a4:	cmp    DWORD PTR [eax+0x4],ebx
100180a7:	jne    0x100180ae
100180a9:	mov    DWORD PTR [eax+0x4],edi
100180ac:	jmp    0x100180b9
100180ae:	cmp    DWORD PTR [esi],ebx
100180b0:	jne    0x100180b6
100180b2:	mov    DWORD PTR [esi],edi
100180b4:	jmp    0x100180b9
100180b6:	mov    DWORD PTR [esi+0x8],edi
100180b9:	mov    edx,DWORD PTR ds:0x10082eec
100180bf:	cmp    DWORD PTR [edx],ebx
100180c1:	jne    0x100180df
100180c3:	cmp    BYTE PTR [edi+0x15],0x0
100180c7:	je     0x100180cd
100180c9:	mov    ecx,esi
100180cb:	jmp    0x100180dd
100180cd:	mov    eax,DWORD PTR [edi]
100180cf:	mov    ecx,edi
100180d1:	jmp    0x100180d7
100180d3:	mov    ecx,eax
100180d5:	mov    eax,DWORD PTR [ecx]
100180d7:	cmp    BYTE PTR [eax+0x15],0x0
100180db:	je     0x100180d3
100180dd:	mov    DWORD PTR [edx],ecx
100180df:	mov    edx,DWORD PTR ds:0x10082eec
100180e5:	cmp    DWORD PTR [edx+0x8],ebx
100180e8:	jne    0x10018165
100180ea:	cmp    BYTE PTR [edi+0x15],0x0
100180ee:	je     0x100180f4
100180f0:	mov    ecx,esi
100180f2:	jmp    0x10018106
100180f4:	mov    eax,DWORD PTR [edi+0x8]
100180f7:	mov    ecx,edi
100180f9:	jmp    0x10018100
100180fb:	mov    ecx,eax
100180fd:	mov    eax,DWORD PTR [ecx+0x8]
10018100:	cmp    BYTE PTR [eax+0x15],0x0
10018104:	je     0x100180fb
10018106:	mov    DWORD PTR [edx+0x8],ecx
10018109:	jmp    0x10018165
1001810b:	mov    DWORD PTR [ecx+0x4],eax
1001810e:	mov    ecx,DWORD PTR [ebx]
10018110:	mov    DWORD PTR [eax],ecx
10018112:	cmp    eax,DWORD PTR [ebx+0x8]
10018115:	jne    0x1001811b
10018117:	mov    esi,eax
10018119:	jmp    0x10018135
1001811b:	cmp    BYTE PTR [edi+0x15],0x0
1001811f:	mov    esi,DWORD PTR [eax+0x4]
10018122:	jne    0x10018127
10018124:	mov    DWORD PTR [edi+0x4],esi
10018127:	mov    DWORD PTR [esi],edi
10018129:	mov    ecx,DWORD PTR [ebx+0x8]
1001812c:	mov    DWORD PTR [eax+0x8],ecx
1001812f:	mov    ecx,DWORD PTR [ebx+0x8]
10018132:	mov    DWORD PTR [ecx+0x4],eax
10018135:	mov    ecx,DWORD PTR ds:0x10082eec
1001813b:	cmp    DWORD PTR [ecx+0x4],ebx
1001813e:	jne    0x10018145
10018140:	mov    DWORD PTR [ecx+0x4],eax
10018143:	jmp    0x10018153
10018145:	mov    ecx,DWORD PTR [ebx+0x4]
10018148:	cmp    DWORD PTR [ecx],ebx
1001814a:	jne    0x10018150
1001814c:	mov    DWORD PTR [ecx],eax
1001814e:	jmp    0x10018153
10018150:	mov    DWORD PTR [ecx+0x8],eax
10018153:	mov    ecx,DWORD PTR [ebx+0x4]
10018156:	mov    DWORD PTR [eax+0x4],ecx
10018159:	mov    dl,BYTE PTR [ebx+0x14]
1001815c:	mov    cl,BYTE PTR [eax+0x14]
1001815f:	mov    BYTE PTR [eax+0x14],dl
10018162:	mov    BYTE PTR [ebx+0x14],cl
10018165:	cmp    BYTE PTR [ebx+0x14],0x1
10018169:	jne    0x10018267
1001816f:	jmp    0x10018222
10018174:	cmp    BYTE PTR [edi+0x14],0x1
10018178:	jne    0x10018263
1001817e:	mov    ecx,DWORD PTR [esi]
10018180:	cmp    edi,ecx
10018182:	jne    0x100181eb
10018184:	mov    ecx,DWORD PTR [esi+0x8]
10018187:	cmp    BYTE PTR [ecx+0x14],0x0
1001818b:	jne    0x1001819f
1001818d:	mov    BYTE PTR [ecx+0x14],0x1
10018191:	mov    ecx,esi
10018193:	mov    BYTE PTR [esi+0x14],0x0
10018197:	call   0x10018293
1001819c:	mov    ecx,DWORD PTR [esi+0x8]
1001819f:	cmp    BYTE PTR [ecx+0x15],0x0
100181a3:	jne    0x1001821d
100181a5:	mov    eax,DWORD PTR [ecx]
100181a7:	cmp    BYTE PTR [eax+0x14],0x1
100181ab:	jne    0x100181b6
100181ad:	mov    eax,DWORD PTR [ecx+0x8]
100181b0:	cmp    BYTE PTR [eax+0x14],0x1
100181b4:	je     0x10018219
100181b6:	mov    eax,DWORD PTR [ecx+0x8]
100181b9:	cmp    BYTE PTR [eax+0x14],0x1
100181bd:	jne    0x100181d1
100181bf:	mov    eax,DWORD PTR [ecx]
100181c1:	mov    BYTE PTR [eax+0x14],0x1
100181c5:	mov    BYTE PTR [ecx+0x14],0x0
100181c9:	call   0x100182d0
100181ce:	mov    ecx,DWORD PTR [esi+0x8]
100181d1:	mov    al,BYTE PTR [esi+0x14]
100181d4:	mov    BYTE PTR [ecx+0x14],al
100181d7:	mov    BYTE PTR [esi+0x14],0x1
100181db:	mov    eax,DWORD PTR [ecx+0x8]
100181de:	mov    ecx,esi
100181e0:	mov    BYTE PTR [eax+0x14],0x1
100181e4:	call   0x10018293
100181e9:	jmp    0x10018263
100181eb:	cmp    BYTE PTR [ecx+0x14],0x0
100181ef:	jne    0x10018202
100181f1:	mov    BYTE PTR [ecx+0x14],0x1
100181f5:	mov    ecx,esi
100181f7:	mov    BYTE PTR [esi+0x14],0x0
100181fb:	call   0x100182d0
10018200:	mov    ecx,DWORD PTR [esi]
10018202:	cmp    BYTE PTR [ecx+0x15],0x0
10018206:	jne    0x1001821d
10018208:	mov    eax,DWORD PTR [ecx+0x8]
1001820b:	cmp    BYTE PTR [eax+0x14],0x1
1001820f:	jne    0x10018232
10018211:	mov    eax,DWORD PTR [ecx]
10018213:	cmp    BYTE PTR [eax+0x14],0x1
10018217:	jne    0x10018232
10018219:	mov    BYTE PTR [ecx+0x14],0x0
1001821d:	mov    edi,esi
1001821f:	mov    esi,DWORD PTR [esi+0x4]
10018222:	mov    eax,ds:0x10082eec
10018227:	cmp    edi,DWORD PTR [eax+0x4]
1001822a:	jne    0x10018174
10018230:	jmp    0x10018263
10018232:	mov    eax,DWORD PTR [ecx]
10018234:	cmp    BYTE PTR [eax+0x14],0x1
10018238:	jne    0x1001824c
1001823a:	mov    eax,DWORD PTR [ecx+0x8]
1001823d:	mov    BYTE PTR [eax+0x14],0x1
10018241:	mov    BYTE PTR [ecx+0x14],0x0
10018245:	call   0x10018293
1001824a:	mov    ecx,DWORD PTR [esi]
1001824c:	mov    al,BYTE PTR [esi+0x14]
1001824f:	mov    BYTE PTR [ecx+0x14],al
10018252:	mov    BYTE PTR [esi+0x14],0x1
10018256:	mov    eax,DWORD PTR [ecx]
10018258:	mov    ecx,esi
1001825a:	mov    BYTE PTR [eax+0x14],0x1
1001825e:	call   0x100182d0
10018263:	mov    BYTE PTR [edi+0x14],0x1
10018267:	push   ebx
10018268:	call   0x10042fe2
1001826d:	cmp    DWORD PTR ds:0x10082ef0,0x0
10018274:	pop    ecx
10018275:	jbe    0x1001827d
10018277:	dec    DWORD PTR ds:0x10082ef0
1001827d:	mov    ecx,DWORD PTR [ebp+0xc]
10018280:	mov    eax,DWORD PTR [ebp+0x8]
10018283:	mov    DWORD PTR [eax],ecx
10018285:	mov    ecx,DWORD PTR [ebp+0x10]
10018288:	mov    DWORD PTR [eax+0x4],ecx
1001828b:	call   0x10059ecd
10018290:	ret    0xc
10018293:	mov    eax,DWORD PTR [ecx+0x8]
10018296:	mov    edx,DWORD PTR [eax]
10018298:	mov    DWORD PTR [ecx+0x8],edx
1001829b:	mov    edx,DWORD PTR [eax]
1001829d:	cmp    BYTE PTR [edx+0x15],0x0
100182a1:	jne    0x100182a6
100182a3:	mov    DWORD PTR [edx+0x4],ecx
100182a6:	mov    edx,DWORD PTR [ecx+0x4]
100182a9:	mov    DWORD PTR [eax+0x4],edx
100182ac:	mov    edx,DWORD PTR ds:0x10082eec
100182b2:	cmp    ecx,DWORD PTR [edx+0x4]
100182b5:	jne    0x100182bc
100182b7:	mov    DWORD PTR [edx+0x4],eax
100182ba:	jmp    0x100182ca
100182bc:	mov    edx,DWORD PTR [ecx+0x4]
100182bf:	cmp    ecx,DWORD PTR [edx]
100182c1:	jne    0x100182c7
100182c3:	mov    DWORD PTR [edx],eax
100182c5:	jmp    0x100182ca
100182c7:	mov    DWORD PTR [edx+0x8],eax
100182ca:	mov    DWORD PTR [eax],ecx
100182cc:	mov    DWORD PTR [ecx+0x4],eax
100182cf:	ret    
100182d0:	mov    eax,DWORD PTR [ecx]
100182d2:	mov    edx,DWORD PTR [eax+0x8]
100182d5:	mov    DWORD PTR [ecx],edx
100182d7:	mov    edx,DWORD PTR [eax+0x8]
100182da:	cmp    BYTE PTR [edx+0x15],0x0
100182de:	jne    0x100182e3
100182e0:	mov    DWORD PTR [edx+0x4],ecx
100182e3:	mov    edx,DWORD PTR [ecx+0x4]
100182e6:	mov    DWORD PTR [eax+0x4],edx
100182e9:	mov    edx,DWORD PTR ds:0x10082eec
100182ef:	cmp    ecx,DWORD PTR [edx+0x4]
100182f2:	jne    0x100182f9
100182f4:	mov    DWORD PTR [edx+0x4],eax
100182f7:	jmp    0x10018308
100182f9:	mov    edx,DWORD PTR [ecx+0x4]
100182fc:	cmp    ecx,DWORD PTR [edx+0x8]
100182ff:	jne    0x10018306
10018301:	mov    DWORD PTR [edx+0x8],eax
10018304:	jmp    0x10018308
10018306:	mov    DWORD PTR [edx],eax
10018308:	mov    DWORD PTR [eax+0x8],ecx
1001830b:	mov    DWORD PTR [ecx+0x4],eax
1001830e:	ret    
1001830f:	push   0x18
10018311:	call   0x10043196
10018316:	test   eax,eax
10018318:	pop    ecx
10018319:	je     0x10018342
1001831b:	mov    ecx,DWORD PTR [esp+0x4]
1001831f:	mov    DWORD PTR [eax],ecx
10018321:	mov    ecx,DWORD PTR [esp+0x8]
10018325:	mov    DWORD PTR [eax+0x4],ecx
10018328:	mov    ecx,DWORD PTR [esp+0xc]
1001832c:	mov    DWORD PTR [eax+0x8],ecx
1001832f:	mov    ecx,DWORD PTR [esi]
10018331:	mov    DWORD PTR [eax+0xc],ecx
10018334:	mov    ecx,DWORD PTR [esi+0x4]
10018337:	mov    DWORD PTR [eax+0x10],ecx
1001833a:	mov    BYTE PTR [eax+0x14],0x0
1001833e:	mov    BYTE PTR [eax+0x15],0x0
10018342:	ret    0xc
10018345:	push   ebx
10018346:	push   esi
10018347:	push   edi
10018348:	mov    edi,DWORD PTR [esp+0x10]
1001834c:	cmp    BYTE PTR [edi+0x15],0x0
10018350:	mov    ebx,ecx
10018352:	mov    esi,edi
10018354:	jne    0x10018371
10018356:	push   DWORD PTR [esi+0x8]
10018359:	mov    ecx,ebx
1001835b:	call   0x10018345
10018360:	mov    esi,DWORD PTR [esi]
10018362:	push   edi
10018363:	call   0x10042fe2
10018368:	cmp    BYTE PTR [esi+0x15],0x0
1001836c:	pop    ecx
1001836d:	mov    edi,esi
1001836f:	je     0x10018356
10018371:	pop    edi
10018372:	pop    esi
10018373:	pop    ebx
10018374:	ret    0x4
10018377:	push   0x18
10018379:	call   0x10043196
1001837e:	xor    edx,edx
10018380:	cmp    eax,edx
10018382:	pop    ecx
10018383:	je     0x10018387
10018385:	mov    DWORD PTR [eax],edx
10018387:	lea    ecx,[eax+0x4]
1001838a:	cmp    ecx,edx
1001838c:	je     0x10018390
1001838e:	mov    DWORD PTR [ecx],edx
10018390:	lea    ecx,[eax+0x8]
10018393:	cmp    ecx,edx
10018395:	je     0x10018399
10018397:	mov    DWORD PTR [ecx],edx
10018399:	mov    BYTE PTR [eax+0x14],0x1
1001839d:	mov    BYTE PTR [eax+0x15],dl
100183a0:	ret    
100183a1:	push   ebx
100183a2:	xor    ebx,ebx
100183a4:	cmp    DWORD PTR [esi],ebx
100183a6:	jne    0x100183ad
100183a8:	call   0x10043605
100183ad:	mov    eax,DWORD PTR [esi+0x4]
100183b0:	cmp    BYTE PTR [eax+0x15],bl
100183b3:	je     0x100183bc
100183b5:	call   0x10043605
100183ba:	jmp    0x100183ea
100183bc:	mov    ecx,DWORD PTR [eax+0x8]
100183bf:	cmp    BYTE PTR [ecx+0x15],bl
100183c2:	jne    0x100183df
100183c4:	jmp    0x100183c8
100183c6:	mov    ecx,eax
100183c8:	mov    eax,DWORD PTR [ecx]
100183ca:	cmp    BYTE PTR [eax+0x15],bl
100183cd:	je     0x100183c6
100183cf:	mov    DWORD PTR [esi+0x4],ecx
100183d2:	jmp    0x100183ea
100183d4:	mov    ecx,DWORD PTR [esi+0x4]
100183d7:	cmp    ecx,DWORD PTR [eax+0x8]
100183da:	jne    0x100183e7
100183dc:	mov    DWORD PTR [esi+0x4],eax
100183df:	mov    eax,DWORD PTR [eax+0x4]
100183e2:	cmp    BYTE PTR [eax+0x15],bl
100183e5:	je     0x100183d4
100183e7:	mov    DWORD PTR [esi+0x4],eax
100183ea:	mov    eax,esi
100183ec:	pop    ebx
100183ed:	ret    
100183ee:	push   ebp
100183ef:	mov    ebp,esp
100183f1:	push   ecx
100183f2:	push   DWORD PTR [ebp+0xc]
100183f5:	lea    eax,[ebp-0x4]
100183f8:	push   DWORD PTR [ebp+0x8]
100183fb:	push   eax
100183fc:	call   0x1001473a
10018401:	add    esp,0xc
10018404:	test   eax,eax
10018406:	jge    0x1001840e
10018408:	push   eax
10018409:	call   0x10001f2d
1001840e:	mov    eax,DWORD PTR [ebp-0x4]
10018411:	leave  
10018412:	ret    
10018413:	push   ecx
10018414:	call   0x10019287
10018419:	pop    ecx
1001841a:	ret    
1001841b:	push   0x28
1001841d:	mov    eax,0x1006237a
10018422:	call   0x10059df5
10018427:	mov    esi,DWORD PTR [ebp+0x8]
1001842a:	xor    ebx,ebx
1001842c:	mov    DWORD PTR [ebp-0x10],ebx
1001842f:	mov    DWORD PTR [esi+0x4],ebx
10018432:	mov    DWORD PTR [esi+0x8],ebx
10018435:	mov    DWORD PTR [esi+0xc],ebx
10018438:	xor    edi,edi
1001843a:	inc    edi
1001843b:	push   edi
1001843c:	push   0x10070e4c
10018441:	mov    DWORD PTR [ebp-0x4],ebx
10018444:	push   0x13
10018446:	mov    ecx,0x10070e70
1001844b:	mov    DWORD PTR [ebp-0x10],edi
1001844e:	call   0x100042b4
10018453:	sub    esp,0x14
10018456:	mov    ecx,esp
10018458:	mov    DWORD PTR [ebp-0x14],esp
1001845b:	push   eax
1001845c:	call   0x100011a7
10018461:	lea    ecx,[ebp-0x34]
10018464:	call   0x10002794
10018469:	push   eax
1001846a:	mov    DWORD PTR [ebp-0x4],edi
1001846d:	call   0x1000422e
10018472:	push   ebx
10018473:	push   edi
10018474:	lea    ecx,[ebp-0x34]
10018477:	mov    BYTE PTR [ebp-0x4],bl
1001847a:	call   0x100012f0
1001847f:	push   edi
10018480:	push   0x10070e84
10018485:	push   0x12
10018487:	mov    ecx,0x10070ec0
1001848c:	call   0x100042b4
10018491:	sub    esp,0x14
10018494:	mov    ecx,esp
10018496:	mov    DWORD PTR [ebp-0x14],esp
10018499:	push   eax
1001849a:	call   0x100011a7
1001849f:	lea    ecx,[ebp-0x34]
100184a2:	call   0x10002794
100184a7:	push   eax
100184a8:	mov    DWORD PTR [ebp-0x4],0x2
100184af:	call   0x1000422e
100184b4:	push   ebx
100184b5:	push   edi
100184b6:	lea    ecx,[ebp-0x34]
100184b9:	mov    BYTE PTR [ebp-0x4],bl
100184bc:	call   0x100012f0
100184c1:	push   edi
100184c2:	push   0x10070ed4
100184c7:	push   0x14
100184c9:	mov    ecx,0x10070efc
100184ce:	call   0x100042b4
100184d3:	sub    esp,0x14
100184d6:	mov    ecx,esp
100184d8:	mov    DWORD PTR [ebp-0x14],esp
100184db:	push   eax
100184dc:	call   0x100011a7
100184e1:	lea    ecx,[ebp-0x34]
100184e4:	call   0x10002794
100184e9:	push   eax
100184ea:	mov    DWORD PTR [ebp-0x4],0x3
100184f1:	call   0x1000422e
100184f6:	push   ebx
100184f7:	push   edi
100184f8:	lea    ecx,[ebp-0x34]
100184fb:	mov    BYTE PTR [ebp-0x4],bl
100184fe:	call   0x100012f0
10018503:	push   edi
10018504:	push   0x10070f14
10018509:	push   0x15
1001850b:	mov    ecx,0x10070f44
10018510:	call   0x100042b4
10018515:	sub    esp,0x14
10018518:	mov    ecx,esp
1001851a:	mov    DWORD PTR [ebp-0x14],esp
1001851d:	push   eax
1001851e:	call   0x100011a7
10018523:	lea    ecx,[ebp-0x34]
10018526:	call   0x10002794
1001852b:	push   eax
1001852c:	mov    DWORD PTR [ebp-0x4],0x4
10018533:	call   0x1000422e
10018538:	push   ebx
10018539:	push   edi
1001853a:	lea    ecx,[ebp-0x34]
1001853d:	mov    BYTE PTR [ebp-0x4],bl
10018540:	call   0x100012f0
10018545:	push   edi
10018546:	push   0x10070f5c
1001854b:	push   0x15
1001854d:	mov    ecx,0x10070f94
10018552:	call   0x100042b4
10018557:	sub    esp,0x14
1001855a:	mov    ecx,esp
1001855c:	mov    DWORD PTR [ebp-0x14],esp
1001855f:	push   eax
10018560:	call   0x100011a7
10018565:	lea    ecx,[ebp-0x34]
10018568:	call   0x10002794
1001856d:	push   eax
1001856e:	mov    DWORD PTR [ebp-0x4],0x5
10018575:	call   0x1000422e
1001857a:	push   ebx
1001857b:	push   edi
1001857c:	lea    ecx,[ebp-0x34]
1001857f:	mov    BYTE PTR [ebp-0x4],bl
10018582:	call   0x100012f0
10018587:	push   edi
10018588:	push   0x10070fac
1001858d:	push   0x13
1001858f:	mov    ecx,0x10070fe0
10018594:	call   0x100042b4
10018599:	sub    esp,0x14
1001859c:	mov    ecx,esp
1001859e:	mov    DWORD PTR [ebp-0x14],esp
100185a1:	push   eax
100185a2:	call   0x100011a7
100185a7:	lea    ecx,[ebp-0x34]
100185aa:	call   0x10002794
100185af:	push   eax
100185b0:	mov    DWORD PTR [ebp-0x4],0x6
100185b7:	call   0x1000422e
100185bc:	push   ebx
100185bd:	push   edi
100185be:	lea    ecx,[ebp-0x34]
100185c1:	mov    BYTE PTR [ebp-0x4],bl
100185c4:	call   0x100012f0
100185c9:	push   edi
100185ca:	push   0x10070ff4
100185cf:	push   0x12
100185d1:	mov    ecx,0x10071028
100185d6:	call   0x100042b4
100185db:	sub    esp,0x14
100185de:	mov    ecx,esp
100185e0:	mov    DWORD PTR [ebp-0x14],esp
100185e3:	push   eax
100185e4:	call   0x100011a7
100185e9:	lea    ecx,[ebp-0x34]
100185ec:	call   0x10002794
100185f1:	push   eax
100185f2:	mov    DWORD PTR [ebp-0x4],0x7
100185f9:	call   0x1000422e
100185fe:	push   ebx
100185ff:	push   edi
10018600:	lea    ecx,[ebp-0x34]
10018603:	call   0x100012f0
10018608:	mov    eax,esi
1001860a:	call   0x10059ecd
1001860f:	ret    
10018610:	push   ebp
10018611:	mov    ebp,esp
10018613:	push   ecx
10018614:	push   ecx
10018615:	call   0x10032fb0
1001861a:	push   0x10
1001861c:	push   edi
1001861d:	push   esi
1001861e:	mov    DWORD PTR [ebp-0x4],eax
10018621:	call   0x10045340
10018626:	add    esp,0xc
10018629:	xor    ecx,ecx
1001862b:	xor    eax,eax
1001862d:	mov    dl,BYTE PTR [eax+edi*1]
10018630:	xor    BYTE PTR [ecx+esi*1],dl
10018633:	inc    ecx
10018634:	inc    eax
10018635:	and    eax,0xf
10018638:	cmp    ecx,0x10
1001863b:	jne    0x1001862d
1001863d:	xor    ecx,ecx
1001863f:	xor    eax,eax
10018641:	mov    dl,BYTE PTR [ebp+eax*1-0x4]
10018645:	xor    BYTE PTR [ecx+esi*1],dl
10018648:	inc    ecx
10018649:	inc    eax
1001864a:	and    eax,0x3
1001864d:	cmp    ecx,0x4
10018650:	jne    0x10018641
10018652:	leave  
10018653:	ret    
10018654:	push   ebp
10018655:	mov    ebp,esp
10018657:	and    esp,0xfffffff8
1001865a:	push   0xffffffff
1001865c:	push   0x1006230e
10018661:	mov    eax,fs:0x0
10018667:	push   eax
10018668:	sub    esp,0xc
1001866b:	mov    eax,ds:0x100801ac
10018670:	xor    eax,esp
10018672:	push   eax
10018673:	lea    eax,[esp+0x10]
10018677:	mov    fs:0x0,eax
1001867d:	push   0x1
1001867f:	call   0x100438d7
10018684:	pop    ecx
10018685:	mov    DWORD PTR [esp+0x8],eax
10018689:	and    DWORD PTR [esp+0x18],0x0
1001868e:	push   0x1
10018690:	lea    eax,[esp+0x8]
10018694:	push   eax
10018695:	call   0x10034910
1001869a:	mov    BYTE PTR [esp+0x18],0x1
1001869f:	push   DWORD PTR [esp+0x8]
100186a3:	lea    eax,[esp+0x8]
100186a7:	push   0x4
100186a9:	push   eax
100186aa:	xor    ecx,ecx
100186ac:	call   0x10036700
100186b1:	push   DWORD PTR [esp+0x4]
100186b5:	call   DWORD PTR ds:0x10067078
100186bb:	push   DWORD PTR [esp+0x8]
100186bf:	call   0x10042fe2
100186c4:	pop    ecx
100186c5:	mov    ecx,DWORD PTR [esp+0x10]
100186c9:	mov    DWORD PTR fs:0x0,ecx
100186d0:	pop    ecx
100186d1:	mov    esp,ebp
100186d3:	pop    ebp
100186d4:	ret    
100186d5:	push   0x3c
100186d7:	mov    eax,0x1006418b
100186dc:	call   0x10059df5
100186e1:	xor    eax,eax
100186e3:	mov    esi,ecx
100186e5:	mov    DWORD PTR [ebp-0x48],eax
100186e8:	mov    DWORD PTR [ebp-0x18],esi
100186eb:	mov    DWORD PTR [ebp-0x24],eax
100186ee:	mov    DWORD PTR [ebp-0x14],eax
100186f1:	xor    ebx,ebx
100186f3:	inc    ebx
100186f4:	mov    DWORD PTR [ebp-0x4],ebx
100186f7:	call   0x100040ef
100186fc:	push   ebx
100186fd:	lea    eax,[ebp-0x1c]
10018700:	push   eax
10018701:	mov    DWORD PTR [ebp-0x48],ebx
10018704:	call   0x10034910
10018709:	lea    eax,[ebp-0x24]
1001870c:	push   eax
1001870d:	push   0x4
1001870f:	lea    eax,[ebp-0x20]
10018712:	push   eax
10018713:	lea    eax,[ebp-0x1c]
10018716:	push   eax
10018717:	mov    BYTE PTR [ebp-0x4],0x2
1001871b:	call   0x10036840
10018720:	push   eax
10018721:	lea    edi,[ebp-0x14]
10018724:	call   0x1000208b
10018729:	push   DWORD PTR [ebp-0x20]
1001872c:	call   0x10042fe2
10018731:	xor    esi,esi
10018733:	cmp    DWORD PTR [ebp-0x14],esi
10018736:	pop    ecx
10018737:	je     0x1001876c
10018739:	cmp    DWORD PTR [ebp-0x24],esi
1001873c:	je     0x1001876c
1001873e:	push   DWORD PTR [ebp-0x24]
10018741:	lea    esi,[ebp-0x40]
10018744:	push   DWORD PTR [ebp-0x14]
10018747:	call   0x10004102
1001874c:	push   0xffffffff
1001874e:	push   0x0
10018750:	mov    BYTE PTR [ebp-0x4],0x6
10018754:	mov    ecx,DWORD PTR [ebp-0x18]
10018757:	push   eax
10018758:	call   0x10001241
1001875d:	push   0x0
1001875f:	push   ebx
10018760:	mov    ecx,esi
10018762:	call   0x100012f0
10018767:	jmp    0x10018841
1001876c:	lea    edi,[ebp-0x34]
1001876f:	call   0x10018890
10018774:	mov    BYTE PTR [ebp-0x4],0x3
10018778:	cmp    DWORD PTR [ebp-0x30],esi
1001877b:	je     0x10018839
10018781:	mov    eax,DWORD PTR [ebp-0x2c]
10018784:	sub    eax,DWORD PTR [ebp-0x30]
10018787:	sar    eax,0x5
1001878a:	je     0x10018839
10018790:	call   DWORD PTR ds:0x1006713c
10018796:	push   eax
10018797:	call   0x10046532
1001879c:	xor    edi,edi
1001879e:	pop    ecx
1001879f:	xor    ebx,ebx
100187a1:	cmp    DWORD PTR [ebp-0x30],0x0
100187a5:	jne    0x100187ab
100187a7:	xor    eax,eax
100187a9:	jmp    0x100187b4
100187ab:	mov    eax,DWORD PTR [ebp-0x2c]
100187ae:	sub    eax,DWORD PTR [ebp-0x30]
100187b1:	sar    eax,0x5
100187b4:	cmp    ebx,eax
100187b6:	je     0x100187c7
100187b8:	push   ebx
100187b9:	lea    esi,[ebp-0x34]
100187bc:	call   0x10018ff4
100187c1:	add    edi,DWORD PTR [eax+0x1c]
100187c4:	inc    ebx
100187c5:	jmp    0x100187a1
100187c7:	call   0x1004653f
100187cc:	xor    edx,edx
100187ce:	div    edi
100187d0:	xor    edi,edi
100187d2:	xor    ebx,ebx
100187d4:	mov    DWORD PTR [ebp-0x20],edx
100187d7:	xor    eax,eax
100187d9:	cmp    DWORD PTR [ebp-0x30],eax
100187dc:	je     0x100187e7
100187de:	mov    eax,DWORD PTR [ebp-0x2c]
100187e1:	sub    eax,DWORD PTR [ebp-0x30]
100187e4:	sar    eax,0x5
100187e7:	cmp    ebx,eax
100187e9:	je     0x10018819
100187eb:	push   ebx
100187ec:	lea    esi,[ebp-0x34]
100187ef:	call   0x10018ff4
100187f4:	add    edi,DWORD PTR [eax+0x1c]
100187f7:	cmp    DWORD PTR [ebp-0x20],edi
100187fa:	jb     0x100187ff
100187fc:	inc    ebx
100187fd:	jmp    0x100187d7
100187ff:	push   ebx
10018800:	lea    esi,[ebp-0x34]
10018803:	call   0x10018ff4
10018808:	mov    esi,DWORD PTR [ebp-0x18]
1001880b:	push   0xffffffff
1001880d:	push   0x0
1001880f:	push   eax
10018810:	mov    ecx,esi
10018812:	call   0x10001241
10018817:	jmp    0x1001881c
10018819:	mov    esi,DWORD PTR [ebp-0x18]
1001881c:	cmp    DWORD PTR [esi+0x18],0x10
10018820:	mov    ecx,DWORD PTR [esi+0x14]
10018823:	jb     0x1001882a
10018825:	mov    esi,DWORD PTR [esi+0x4]
10018828:	jmp    0x1001882d
1001882a:	add    esi,0x4
1001882d:	push   esi
1001882e:	push   0x4
10018830:	lea    eax,[ebp-0x1c]
10018833:	push   eax
10018834:	call   0x10036700
10018839:	lea    esi,[ebp-0x34]
1001883c:	call   0x100047a5
10018841:	push   DWORD PTR [ebp-0x1c]
10018844:	call   DWORD PTR ds:0x10067078
1001884a:	push   DWORD PTR [ebp-0x14]
1001884d:	call   0x10042fe2
10018852:	mov    eax,DWORD PTR [ebp-0x18]
10018855:	pop    ecx
10018856:	call   0x10059ecd
1001885b:	ret    
1001885c:	push   0x3e8
10018861:	push   DWORD PTR ds:0x10082f38
10018867:	call   DWORD PTR ds:0x1006707c
1001886d:	test   eax,eax
1001886f:	je     0x10018874
10018871:	mov    al,0x1
10018873:	ret    
10018874:	push   ebx
10018875:	call   0x10018928
1001887a:	push   DWORD PTR ds:0x10082f38
10018880:	mov    bl,BYTE PTR ds:0x100816d0
10018886:	call   DWORD PTR ds:0x10067090
1001888c:	mov    al,bl
1001888e:	pop    ebx
1001888f:	ret    
10018890:	push   ebp
10018891:	mov    ebp,esp
10018893:	and    esp,0xfffffff8
10018896:	push   0xffffffff
10018898:	push   0x10064137
1001889d:	mov    eax,fs:0x0
100188a3:	push   eax
100188a4:	sub    esp,0x18
100188a7:	push   esi
100188a8:	mov    eax,ds:0x100801ac
100188ad:	xor    eax,esp
100188af:	push   eax
100188b0:	lea    eax,[esp+0x20]
100188b4:	mov    fs:0x0,eax
100188ba:	and    DWORD PTR [esp+0x8],0x0
100188bf:	push   0x3e8
100188c4:	push   DWORD PTR ds:0x10082f38
100188ca:	call   DWORD PTR ds:0x1006707c
100188d0:	test   eax,eax
100188d2:	je     0x100188dd
100188d4:	push   edi
100188d5:	call   0x1001841b
100188da:	pop    ecx
100188db:	jmp    0x10018915
100188dd:	call   0x10018928
100188e2:	lea    eax,[esp+0xc]
100188e6:	push   eax
100188e7:	mov    ecx,0x10082f28
100188ec:	call   0x10018e1b
100188f1:	and    DWORD PTR [esp+0x28],0x0
100188f6:	push   DWORD PTR ds:0x10082f38
100188fc:	call   DWORD PTR ds:0x10067090
10018902:	push   edi
10018903:	lea    ecx,[esp+0x10]
10018907:	call   0x10018e1b
1001890c:	lea    esi,[esp+0xc]
10018910:	call   0x100047a5
10018915:	mov    eax,edi
10018917:	mov    ecx,DWORD PTR [esp+0x20]
1001891b:	mov    DWORD PTR fs:0x0,ecx
10018922:	pop    ecx
10018923:	pop    esi
10018924:	mov    esp,ebp
10018926:	pop    ebp
10018927:	ret    
10018928:	push   0xac
1001892d:	mov    eax,0x10064107
10018932:	call   0x10059e94
10018937:	xor    ebx,ebx
10018939:	mov    DWORD PTR [ebp-0x4],ebx
1001893c:	mov    DWORD PTR [ebp-0x34],ebx
1001893f:	xor    eax,eax
10018941:	lea    edi,[ebp-0x30]
10018944:	stos   DWORD PTR es:[edi],eax
10018945:	stos   DWORD PTR es:[edi],eax
10018946:	stos   DWORD PTR es:[edi],eax
10018947:	mov    DWORD PTR [ebp-0x54],ebx
1001894a:	mov    DWORD PTR [ebp-0x60],ebx
1001894d:	push   0x1
1001894f:	lea    eax,[ebp-0x58]
10018952:	push   eax
10018953:	mov    BYTE PTR [ebp-0x4],0x2
10018957:	call   0x10034910
1001895c:	lea    eax,[ebp-0x58]
1001895f:	push   eax
10018960:	lea    ecx,[ebp-0x34]
10018963:	mov    BYTE PTR [ebp-0x4],0x3
10018967:	call   0x100361d0
1001896c:	push   0x2
1001896e:	lea    eax,[ebp-0x58]
10018971:	push   eax
10018972:	lea    ecx,[ebp-0x88]
10018978:	call   0x100358a0
1001897d:	mov    ecx,DWORD PTR [eax+0x4]
10018980:	cmp    ecx,DWORD PTR ds:0x10082db4
10018986:	ja     0x100189ad
10018988:	jb     0x10018994
1001898a:	mov    eax,DWORD PTR [eax]
1001898c:	cmp    eax,DWORD PTR ds:0x10082db0
10018992:	ja     0x100189ad
10018994:	push   DWORD PTR [ebp-0x58]
10018997:	call   DWORD PTR ds:0x10067078
1001899d:	push   ebx
1001899e:	call   0x10042fe2
100189a3:	pop    ecx
100189a4:	mov    BYTE PTR [ebp-0x4],bl
100189a7:	push   ebx
100189a8:	jmp    0x10018b3e
100189ad:	lea    eax,[ebp-0x5c]
100189b0:	push   eax
100189b1:	push   0x2
100189b3:	lea    eax,[ebp-0x64]
100189b6:	push   eax
100189b7:	lea    eax,[ebp-0x58]
100189ba:	push   eax
100189bb:	call   0x10036840
100189c0:	push   eax
100189c1:	lea    edi,[ebp-0x54]
100189c4:	call   0x1000208b
100189c9:	push   DWORD PTR [ebp-0x64]
100189cc:	call   0x10042fe2
100189d1:	cmp    DWORD PTR [ebp-0x54],ebx
100189d4:	pop    ecx
100189d5:	je     0x10018994
100189d7:	call   0x1002f6a0
100189dc:	lea    esi,[ebp-0x24]
100189df:	lea    edi,[ebp-0x34]
100189e2:	mov    ds:0x10082db0,eax
100189e7:	mov    DWORD PTR ds:0x10082db4,edx
100189ed:	call   0x10018610
100189f2:	push   0x1
100189f4:	mov    eax,esi
100189f6:	mov    esi,DWORD PTR [ebp-0x54]
100189f9:	push   eax
100189fa:	push   DWORD PTR [ebp-0x5c]
100189fd:	lea    eax,[ebp-0x5c]
10018a00:	push   esi
10018a01:	push   eax
10018a02:	lea    edx,[ebp-0x65]
10018a05:	lea    ecx,[ebp-0x64]
10018a08:	call   0x10039900
10018a0d:	add    esp,0x14
10018a10:	push   eax
10018a11:	lea    edi,[ebp-0x60]
10018a14:	call   0x1000208b
10018a19:	push   DWORD PTR [ebp-0x5c]
10018a1c:	call   0x10042fe2
10018a21:	mov    edi,DWORD PTR [ebp-0x60]
10018a24:	cmp    edi,ebx
10018a26:	pop    ecx
10018a27:	jne    0x10018a42
10018a29:	push   DWORD PTR [ebp-0x58]
10018a2c:	call   DWORD PTR ds:0x10067078
10018a32:	push   ebx
10018a33:	call   0x10042fe2
10018a38:	pop    ecx
10018a39:	mov    BYTE PTR [ebp-0x4],bl
10018a3c:	push   esi
10018a3d:	jmp    0x10018b3e
10018a42:	mov    eax,DWORD PTR [ebp-0x64]
10018a45:	mov    DWORD PTR [ebp-0x70],eax
10018a48:	lea    eax,[ebp-0x74]
10018a4b:	push   eax
10018a4c:	mov    DWORD PTR [ebp-0x74],ebx
10018a4f:	mov    DWORD PTR [ebp-0x6c],edi
10018a52:	call   0x100374b0
10018a57:	cmp    eax,0x1
10018a5a:	je     0x10018a68
10018a5c:	push   DWORD PTR [ebp-0x58]
10018a5f:	call   DWORD PTR ds:0x10067078
10018a65:	push   edi
10018a66:	jmp    0x10018a33
10018a68:	lea    eax,[ebp-0x74]
10018a6b:	push   eax
10018a6c:	call   0x100374b0
10018a71:	cmp    eax,ebx
10018a73:	setne  al
10018a76:	mov    ds:0x100816d0,al
10018a7b:	lea    eax,[ebp-0x74]
10018a7e:	push   eax
10018a7f:	call   0x100374b0
10018a84:	cmp    eax,ebx
10018a86:	mov    DWORD PTR [ebp-0x5c],eax
10018a89:	je     0x10018a5c
10018a8b:	mov    DWORD PTR [ebp-0x94],ebx
10018a91:	mov    DWORD PTR [ebp-0x90],ebx
10018a97:	mov    DWORD PTR [ebp-0x8c],ebx
10018a9d:	mov    BYTE PTR [ebp-0x4],0x4
10018aa1:	xor    edi,edi
10018aa3:	cmp    edi,DWORD PTR [ebp-0x5c]
10018aa6:	jge    0x10018b10
10018aa8:	lea    eax,[ebp-0x74]
10018aab:	push   eax
10018aac:	lea    esi,[ebp-0x50]
10018aaf:	call   0x10037170
10018ab4:	lea    eax,[ebp-0x74]
10018ab7:	push   eax
10018ab8:	mov    BYTE PTR [ebp-0x4],0x5
10018abc:	call   0x100374b0
10018ac1:	push   eax
10018ac2:	sub    esp,0x1c
10018ac5:	mov    eax,esi
10018ac7:	mov    ecx,esp
10018ac9:	mov    DWORD PTR [ebp-0x84],esp
10018acf:	push   eax
10018ad0:	call   0x100011c9
10018ad5:	lea    ecx,[ebp-0xb8]
10018adb:	call   0x10002794
10018ae0:	push   eax
10018ae1:	lea    esi,[ebp-0x98]
10018ae7:	mov    BYTE PTR [ebp-0x4],0x6
10018aeb:	call   0x1000422e
10018af0:	push   ebx
10018af1:	push   0x1
10018af3:	lea    ecx,[ebp-0xb8]
10018af9:	call   0x100012f0
10018afe:	push   ebx
10018aff:	push   0x1
10018b01:	lea    ecx,[ebp-0x50]
10018b04:	mov    BYTE PTR [ebp-0x4],0x4
10018b08:	call   0x100012f0
10018b0d:	inc    edi
10018b0e:	jmp    0x10018aa3
10018b10:	lea    eax,[ebp-0x98]
10018b16:	call   0x10019013
10018b1b:	lea    esi,[ebp-0x98]
10018b21:	call   0x100047a5
10018b26:	push   DWORD PTR [ebp-0x58]
10018b29:	call   DWORD PTR ds:0x10067078
10018b2f:	push   DWORD PTR [ebp-0x60]
10018b32:	call   0x10042fe2
10018b37:	pop    ecx
10018b38:	mov    BYTE PTR [ebp-0x4],bl
10018b3b:	push   DWORD PTR [ebp-0x54]
10018b3e:	call   0x10042fe2
10018b43:	mov    eax,ds:0x10082f2c
10018b48:	cmp    eax,ebx
10018b4a:	pop    ecx
10018b4b:	je     0x10018b5a
10018b4d:	mov    ecx,DWORD PTR ds:0x10082f30
10018b53:	sub    ecx,eax
10018b55:	sar    ecx,0x5
10018b58:	jne    0x10018b7d
10018b5a:	lea    eax,[ebp-0x24]
10018b5d:	push   eax
10018b5e:	call   0x1001841b
10018b63:	pop    ecx
10018b64:	mov    ecx,0x10082f28
10018b69:	mov    BYTE PTR [ebp-0x4],0x7
10018b6d:	call   0x10018eae
10018b72:	lea    esi,[ebp-0x24]
10018b75:	mov    BYTE PTR [ebp-0x4],bl
10018b78:	call   0x100047a5
10018b7d:	call   0x100196a5
10018b82:	mov    DWORD PTR [ebp-0x7c],eax
10018b85:	mov    BYTE PTR [eax+0x29],0x1
10018b89:	mov    eax,DWORD PTR [ebp-0x7c]
10018b8c:	mov    DWORD PTR [eax+0x4],eax
10018b8f:	mov    eax,DWORD PTR [ebp-0x7c]
10018b92:	mov    DWORD PTR [eax],eax
10018b94:	mov    eax,DWORD PTR [ebp-0x7c]
10018b97:	mov    DWORD PTR [eax+0x8],eax
10018b9a:	mov    DWORD PTR [ebp-0x78],ebx
10018b9d:	mov    BYTE PTR [ebp-0x4],0x8
10018ba1:	mov    DWORD PTR [ebp-0x54],ebx
10018ba4:	mov    ecx,DWORD PTR ds:0x10082f2c
10018baa:	cmp    ecx,ebx
10018bac:	je     0x10018bfd
10018bae:	mov    eax,ds:0x10082f30
10018bb3:	sub    eax,ecx
10018bb5:	sar    eax,0x5
10018bb8:	cmp    DWORD PTR [ebp-0x54],eax
10018bbb:	jae    0x10018bfd
10018bbd:	push   DWORD PTR [ebp-0x54]
10018bc0:	mov    esi,0x10082f28
10018bc5:	call   0x10018ff4
10018bca:	lea    ecx,[ebp-0x50]
10018bcd:	push   ecx
10018bce:	mov    ecx,eax
10018bd0:	call   0x100307c0
10018bd5:	pop    ecx
10018bd6:	push   eax
10018bd7:	lea    edi,[ebp-0x74]
10018bda:	lea    ebx,[ebp-0x80]
10018bdd:	mov    BYTE PTR [ebp-0x4],0x9
10018be1:	call   0x10019053
10018be6:	push   0x0
10018be8:	push   0x1
10018bea:	lea    ecx,[ebp-0x50]
10018bed:	mov    BYTE PTR [ebp-0x4],0x8
10018bf1:	call   0x100012f0
10018bf6:	inc    DWORD PTR [ebp-0x54]
10018bf9:	xor    ebx,ebx
10018bfb:	jmp    0x10018ba4
10018bfd:	lea    eax,[ebp-0x80]
10018c00:	call   0x1001910c
10018c05:	lea    eax,[ebp-0x80]
10018c08:	mov    BYTE PTR [ebp-0x4],bl
10018c0b:	call   0x10019287
10018c10:	call   0x10059ef0
10018c15:	ret    
10018c16:	push   0x4
10018c18:	call   0x10038b80
10018c1d:	pop    ecx
10018c1e:	mov    eax,0x10018c10
10018c23:	ret    
10018c24:	push   0x58
10018c26:	mov    eax,0x10064094
10018c2b:	call   0x10059e94
10018c30:	xor    edi,edi
10018c32:	inc    edi
10018c33:	push   edi
10018c34:	lea    eax,[ebp-0x40]
10018c37:	xor    esi,esi
10018c39:	push   eax
10018c3a:	mov    DWORD PTR [ebp-0x4],esi
10018c3d:	call   0x10034910
10018c42:	lea    eax,[ebp-0x40]
10018c45:	push   eax
10018c46:	lea    ecx,[ebp-0x38]
10018c49:	mov    BYTE PTR [ebp-0x4],0x1
10018c4d:	call   0x100361d0
10018c52:	mov    eax,0x10082f28
10018c57:	call   0x1000a1e7
10018c5c:	mov    DWORD PTR [ebp-0x58],eax
10018c5f:	mov    DWORD PTR [ebp-0x3c],0xc
10018c66:	cmp    esi,DWORD PTR [ebp-0x58]
10018c69:	jge    0x10018c81
10018c6b:	push   esi
10018c6c:	call   0x10018fcf
10018c71:	mov    ecx,DWORD PTR [ebp-0x3c]
10018c74:	mov    eax,DWORD PTR [eax+0x14]
10018c77:	lea    eax,[ecx+eax*1+0x5]
10018c7b:	mov    DWORD PTR [ebp-0x3c],eax
10018c7e:	inc    esi
10018c7f:	jmp    0x10018c66
10018c81:	push   DWORD PTR [ebp-0x3c]
10018c84:	call   0x100438d7
10018c89:	mov    ebx,eax
10018c8b:	pop    ecx
10018c8c:	mov    DWORD PTR [ebp-0x64],ebx
10018c8f:	push   0x4
10018c91:	mov    BYTE PTR [ebp-0x4],0x2
10018c95:	mov    DWORD PTR [ebp-0x60],edi
10018c98:	pop    edi
10018c99:	push   edi
10018c9a:	lea    eax,[ebp-0x60]
10018c9d:	push   eax
10018c9e:	push   ebx
10018c9f:	call   0x10045340
10018ca4:	add    esp,0xc
10018ca7:	push   edi
10018ca8:	lea    eax,[ebp+0x8]
10018cab:	push   eax
10018cac:	lea    eax,[ebx+0x4]
10018caf:	push   eax
10018cb0:	call   0x10045340
10018cb5:	add    esp,0xc
10018cb8:	push   edi
10018cb9:	lea    eax,[ebp-0x58]
10018cbc:	push   eax
10018cbd:	lea    eax,[ebx+0x8]
10018cc0:	push   eax
10018cc1:	call   0x10045340
10018cc6:	add    esp,0xc
10018cc9:	and    DWORD PTR [ebp-0x48],0x0
10018ccd:	push   0xc
10018ccf:	pop    esi
10018cd0:	mov    eax,DWORD PTR [ebp-0x48]
10018cd3:	cmp    eax,DWORD PTR [ebp-0x58]
10018cd6:	jge    0x10018d27
10018cd8:	push   eax
10018cd9:	call   0x10018fcf
10018cde:	cmp    DWORD PTR [eax+0x18],0x10
10018ce2:	jb     0x10018ce9
10018ce4:	mov    eax,DWORD PTR [eax+0x4]
10018ce7:	jmp    0x10018cec
10018ce9:	add    eax,0x4
10018cec:	push   eax
10018ced:	lea    eax,[esi+ebx*1]
10018cf0:	push   eax
10018cf1:	call   0x10046630
10018cf6:	pop    ecx
10018cf7:	pop    ecx
10018cf8:	push   DWORD PTR [ebp-0x48]
10018cfb:	call   0x10018fcf
10018d00:	mov    eax,DWORD PTR [eax+0x14]
10018d03:	push   edi
10018d04:	push   DWORD PTR [ebp-0x48]
10018d07:	lea    esi,[esi+eax*1+0x1]
10018d0b:	call   0x10018fcf
10018d10:	add    eax,0x1c
10018d13:	push   eax
10018d14:	lea    eax,[esi+ebx*1]
10018d17:	push   eax
10018d18:	call   0x10045340
10018d1d:	add    esp,0xc
10018d20:	add    esi,edi
10018d22:	inc    DWORD PTR [ebp-0x48]
10018d25:	jmp    0x10018cd0
10018d27:	lea    esi,[ebp-0x28]
10018d2a:	lea    edi,[ebp-0x38]
10018d2d:	call   0x10018610
10018d32:	and    DWORD PTR [ebp-0x48],0x0
10018d36:	lea    eax,[ebp-0x48]
10018d39:	push   eax
10018d3a:	mov    eax,esi
10018d3c:	push   eax
10018d3d:	push   DWORD PTR [ebp-0x3c]
10018d40:	xor    cl,cl
10018d42:	mov    edx,ebx
10018d44:	lea    edi,[ebp-0x3c]
10018d47:	call   0x10039750
10018d4c:	mov    ecx,DWORD PTR [eax]
10018d4e:	mov    esi,ecx
10018d50:	xor    edi,edi
10018d52:	add    esp,0xc
10018d55:	mov    DWORD PTR [eax],edi
10018d57:	mov    DWORD PTR [ebp-0x5c],esi
10018d5a:	mov    BYTE PTR [ebp-0x4],0x3
10018d5e:	push   DWORD PTR [ebp-0x3c]
10018d61:	call   0x10042fe2
10018d66:	pop    ecx
10018d67:	mov    ecx,DWORD PTR [ebp-0x48]
10018d6a:	push   esi
10018d6b:	push   0x2
10018d6d:	lea    eax,[ebp-0x40]
10018d70:	push   eax
10018d71:	call   0x10036700
10018d76:	call   0x1002f6a0
10018d7b:	mov    DWORD PTR [ebp-0x4c],eax
10018d7e:	lea    eax,[ebp-0x4c]
10018d81:	push   eax
10018d82:	lea    eax,[ebp-0x40]
10018d85:	push   eax
10018d86:	push   0x2
10018d88:	pop    ecx
10018d89:	mov    DWORD PTR [ebp-0x48],edx
10018d8c:	call   0x100359b0
10018d91:	cmp    DWORD PTR [ebp+0x8],edi
10018d94:	jne    0x10018daf
10018d96:	mov    DWORD PTR [ebp-0x4c],edi
10018d99:	xor    eax,eax
10018d9b:	lea    edi,[ebp-0x48]
10018d9e:	stos   DWORD PTR es:[edi],eax
10018d9f:	lea    eax,[ebp-0x4c]
10018da2:	push   eax
10018da3:	lea    eax,[ebp-0x40]
10018da6:	push   eax
10018da7:	push   0x2
10018da9:	pop    ecx
10018daa:	call   0x100359b0
10018daf:	push   esi
10018db0:	call   0x10042fe2
10018db5:	pop    ecx
10018db6:	push   ebx
10018db7:	call   0x10042fe2
10018dbc:	pop    ecx
10018dbd:	push   DWORD PTR [ebp-0x40]
10018dc0:	call   DWORD PTR ds:0x10067078
10018dc6:	or     DWORD PTR [ebp-0x4],0xffffffff
10018dca:	mov    eax,ds:0x10082f2c
10018dcf:	test   eax,eax
10018dd1:	je     0x10018de0
10018dd3:	mov    ecx,DWORD PTR ds:0x10082f30
10018dd9:	sub    ecx,eax
10018ddb:	sar    ecx,0x5
10018dde:	jne    0x10018e03
10018de0:	lea    eax,[ebp-0x54]
10018de3:	push   eax
10018de4:	call   0x1001841b
10018de9:	pop    ecx
10018dea:	mov    ecx,0x10082f28
10018def:	mov    DWORD PTR [ebp-0x4],0x5
10018df6:	call   0x10018eae
10018dfb:	lea    esi,[ebp-0x54]
10018dfe:	call   0x100047a5
10018e03:	call   0x10059ef0
10018e08:	ret    
10018e09:	push   0x4
10018e0b:	call   0x10038b80
10018e10:	or     DWORD PTR [ebp-0x4],0xffffffff
10018e14:	pop    ecx
10018e15:	mov    eax,0x10018dca
10018e1a:	ret    
10018e1b:	push   0x10
10018e1d:	mov    eax,0x100612d4
10018e22:	call   0x10059e28
10018e27:	mov    ebx,ecx
10018e29:	mov    esi,DWORD PTR [ebp+0x8]
10018e2c:	mov    eax,ebx
10018e2e:	call   0x1000a1e7
10018e33:	xor    ecx,ecx
10018e35:	cmp    eax,ecx
10018e37:	mov    DWORD PTR [esi+0x4],ecx
10018e3a:	mov    DWORD PTR [esi+0x8],ecx
10018e3d:	mov    DWORD PTR [esi+0xc],ecx
10018e40:	je     0x10018e92
10018e42:	mov    edi,esi
10018e44:	call   0x1000477c
10018e49:	test   al,al
10018e4b:	je     0x10018e92
10018e4d:	and    DWORD PTR [ebp-0x4],0x0
10018e51:	mov    eax,DWORD PTR [ebx+0x8]
10018e54:	cmp    DWORD PTR [ebx+0x4],eax
10018e57:	mov    DWORD PTR [ebp-0x18],eax
10018e5a:	jbe    0x10018e61
10018e5c:	call   0x10043605
10018e61:	mov    eax,DWORD PTR [ebx+0x4]
10018e64:	cmp    eax,DWORD PTR [ebx+0x8]
10018e67:	mov    DWORD PTR [ebp-0x1c],eax
10018e6a:	jbe    0x10018e71
10018e6c:	call   0x10043605
10018e71:	mov    ecx,DWORD PTR [esi+0x4]
10018e74:	xor    eax,eax
10018e76:	lea    edi,[ebp-0x14]
10018e79:	stos   BYTE PTR es:[edi],al
10018e7a:	push   DWORD PTR [ebp-0x14]
10018e7d:	push   DWORD PTR [ebp+0x8]
10018e80:	push   ecx
10018e81:	push   DWORD PTR [ebp-0x18]
10018e84:	mov    ecx,DWORD PTR [ebp-0x1c]
10018e87:	call   0x1000abd4
10018e8c:	add    esp,0x10
10018e8f:	mov    DWORD PTR [esi+0x8],eax
10018e92:	mov    eax,esi
10018e94:	call   0x10059ecd
10018e99:	ret    0x4
10018e9c:	mov    esi,DWORD PTR [ebp+0x8]
10018e9f:	call   0x100047a5
10018ea4:	push   0x0
10018ea6:	push   0x0
10018ea8:	call   0x10047942
10018ead:	int3   
10018eae:	push   ebx
10018eaf:	push   esi
10018eb0:	push   edi
10018eb1:	mov    esi,eax
10018eb3:	mov    edi,ecx
10018eb5:	cmp    edi,esi
10018eb7:	je     0x10018fc9
10018ebd:	call   0x1000a1e7
10018ec2:	test   eax,eax
10018ec4:	jne    0x10018f07
10018ec6:	mov    ebx,DWORD PTR [edi+0x8]
10018ec9:	cmp    DWORD PTR [edi+0x4],ebx
10018ecc:	jbe    0x10018ed3
10018ece:	call   0x10043605
10018ed3:	mov    esi,DWORD PTR [edi+0x4]
10018ed6:	cmp    esi,DWORD PTR [edi+0x8]
10018ed9:	jbe    0x10018ee0
10018edb:	call   0x10043605
10018ee0:	cmp    esi,ebx
10018ee2:	je     0x10018fc9
10018ee8:	push   DWORD PTR [edi+0x8]
10018eeb:	mov    eax,esi
10018eed:	mov    ecx,ebx
10018eef:	call   0x1001975a
10018ef4:	pop    ecx
10018ef5:	push   DWORD PTR [edi+0x8]
10018ef8:	mov    esi,eax
10018efa:	call   0x10004e54
10018eff:	mov    DWORD PTR [edi+0x8],esi
10018f02:	jmp    0x10018fc9
10018f07:	mov    eax,esi
10018f09:	call   0x1000a1e7
10018f0e:	mov    ebx,eax
10018f10:	mov    eax,edi
10018f12:	call   0x1000a1e7
10018f17:	cmp    ebx,eax
10018f19:	mov    eax,DWORD PTR [edi+0x4]
10018f1c:	ja     0x10018f44
10018f1e:	push   DWORD PTR [esi+0x8]
10018f21:	mov    ecx,DWORD PTR [esi+0x4]
10018f24:	call   0x1001975a
10018f29:	pop    ecx
10018f2a:	push   DWORD PTR [edi+0x8]
10018f2d:	call   0x10004e54
10018f32:	mov    eax,esi
10018f34:	call   0x1000a1e7
10018f39:	shl    eax,0x5
10018f3c:	add    eax,DWORD PTR [edi+0x4]
10018f3f:	jmp    0x10018fc6
10018f44:	test   eax,eax
10018f46:	jne    0x10018f4c
10018f48:	xor    ebx,ebx
10018f4a:	jmp    0x10018f54
10018f4c:	mov    ebx,DWORD PTR [edi+0xc]
10018f4f:	sub    ebx,eax
10018f51:	sar    ebx,0x5
10018f54:	mov    eax,esi
10018f56:	call   0x1000a1e7
10018f5b:	cmp    eax,ebx
10018f5d:	ja     0x10018f81
10018f5f:	mov    eax,edi
10018f61:	call   0x1000a1e7
10018f66:	mov    ecx,DWORD PTR [esi+0x4]
10018f69:	mov    ebx,eax
10018f6b:	mov    eax,DWORD PTR [edi+0x4]
10018f6e:	shl    ebx,0x5
10018f71:	add    ebx,ecx
10018f73:	push   ebx
10018f74:	call   0x1001975a
10018f79:	pop    ecx
10018f7a:	push   DWORD PTR [edi+0x8]
10018f7d:	mov    ecx,ebx
10018f7f:	jmp    0x10018fbe
10018f81:	mov    eax,DWORD PTR [edi+0x4]
10018f84:	xor    ebx,ebx
10018f86:	cmp    eax,ebx
10018f88:	je     0x10018f9b
10018f8a:	push   DWORD PTR [edi+0x8]
10018f8d:	call   0x10004e54
10018f92:	push   DWORD PTR [edi+0x4]
10018f95:	call   0x10042fe2
10018f9a:	pop    ecx
10018f9b:	mov    eax,esi
10018f9d:	call   0x1000a1e7
10018fa2:	cmp    eax,ebx
10018fa4:	mov    DWORD PTR [edi+0x4],ebx
10018fa7:	mov    DWORD PTR [edi+0x8],ebx
10018faa:	mov    DWORD PTR [edi+0xc],ebx
10018fad:	je     0x10018fc9
10018faf:	call   0x1000477c
10018fb4:	test   al,al
10018fb6:	je     0x10018fc9
10018fb8:	push   DWORD PTR [edi+0x4]
10018fbb:	mov    ecx,DWORD PTR [esi+0x4]
10018fbe:	push   DWORD PTR [esi+0x8]
10018fc1:	call   0x10006866
10018fc6:	mov    DWORD PTR [edi+0x8],eax
10018fc9:	mov    eax,edi
10018fcb:	pop    edi
10018fcc:	pop    esi
10018fcd:	pop    ebx
10018fce:	ret    
10018fcf:	mov    eax,0x10082f28
10018fd4:	call   0x1000a1e7
10018fd9:	cmp    DWORD PTR [esp+0x4],eax
10018fdd:	jb     0x10018fe4
10018fdf:	call   0x10043605
10018fe4:	mov    eax,DWORD PTR [esp+0x4]
10018fe8:	shl    eax,0x5
10018feb:	add    eax,DWORD PTR ds:0x10082f2c
10018ff1:	ret    0x4
10018ff4:	mov    eax,esi
10018ff6:	call   0x1000a1e7
10018ffb:	cmp    DWORD PTR [esp+0x4],eax
10018fff:	jb     0x10019006
10019001:	call   0x10043605
10019006:	mov    eax,DWORD PTR [esp+0x4]
1001900a:	shl    eax,0x5
1001900d:	add    eax,DWORD PTR [esi+0x4]
10019010:	ret    0x4
10019013:	push   ebp
10019014:	mov    ebp,esp
10019016:	and    esp,0xfffffff8
10019019:	mov    edx,DWORD PTR [eax+0x4]
1001901c:	mov    ecx,DWORD PTR ds:0x10082f2c
10019022:	mov    DWORD PTR ds:0x10082f2c,edx
10019028:	mov    DWORD PTR [eax+0x4],ecx
1001902b:	mov    edx,DWORD PTR [eax+0x8]
1001902e:	mov    ecx,DWORD PTR ds:0x10082f30
10019034:	mov    DWORD PTR ds:0x10082f30,edx
1001903a:	mov    DWORD PTR [eax+0x8],ecx
1001903d:	mov    edx,DWORD PTR [eax+0xc]
10019040:	mov    ecx,DWORD PTR ds:0x10082f34
10019046:	mov    DWORD PTR ds:0x10082f34,edx
1001904c:	mov    DWORD PTR [eax+0xc],ecx
1001904f:	mov    esp,ebp
10019051:	pop    ebp
10019052:	ret    
10019053:	push   ebp
10019054:	mov    ebp,esp
10019056:	and    esp,0xfffffff8
10019059:	sub    esp,0x14
1001905c:	mov    eax,DWORD PTR [ebx+0x4]
1001905f:	push   esi
10019060:	mov    esi,DWORD PTR [eax+0x4]
10019063:	mov    DWORD PTR [esp+0x8],eax
10019067:	mov    al,0x1
10019069:	mov    BYTE PTR [esp+0xc],al
1001906d:	jmp    0x1001908d
1001906f:	mov    eax,DWORD PTR [ebp+0x8]
10019072:	lea    ecx,[esi+0xc]
10019075:	mov    DWORD PTR [esp+0x8],esi
10019079:	call   0x10005114
1001907e:	test   al,al
10019080:	mov    BYTE PTR [esp+0xc],al
10019084:	je     0x1001908a
10019086:	mov    esi,DWORD PTR [esi]
10019088:	jmp    0x1001908d
1001908a:	mov    esi,DWORD PTR [esi+0x8]
1001908d:	cmp    BYTE PTR [esi+0x29],0x0
10019091:	je     0x1001906f
10019093:	test   al,al
10019095:	mov    ecx,DWORD PTR [esp+0x8]
10019099:	mov    esi,ecx
1001909b:	mov    DWORD PTR [esp+0x14],esi
1001909f:	mov    DWORD PTR [esp+0x10],ebx
100190a3:	je     0x100190da
100190a5:	mov    eax,DWORD PTR [ebx+0x4]
100190a8:	cmp    ecx,DWORD PTR [eax]
100190aa:	jne    0x100190cd
100190ac:	push   DWORD PTR [ebp+0x8]
100190af:	push   0x1
100190b1:	lea    eax,[esp+0x18]
100190b5:	push   eax
100190b6:	mov    esi,ebx
100190b8:	call   0x1001913a
100190bd:	mov    ecx,DWORD PTR [eax]
100190bf:	mov    eax,DWORD PTR [eax+0x4]
100190c2:	mov    DWORD PTR [edi],ecx
100190c4:	mov    DWORD PTR [edi+0x4],eax
100190c7:	mov    BYTE PTR [edi+0x8],0x1
100190cb:	jmp    0x10019103
100190cd:	lea    esi,[esp+0x10]
100190d1:	call   0x1002e152
100190d6:	mov    esi,DWORD PTR [esp+0x14]
100190da:	mov    ecx,DWORD PTR [ebp+0x8]
100190dd:	lea    eax,[esi+0xc]
100190e0:	call   0x10005114
100190e5:	test   al,al
100190e7:	je     0x100190f6
100190e9:	push   DWORD PTR [ebp+0x8]
100190ec:	mov    ecx,DWORD PTR [esp+0xc]
100190f0:	push   DWORD PTR [esp+0x10]
100190f4:	jmp    0x100190b1
100190f6:	mov    eax,DWORD PTR [esp+0x10]
100190fa:	mov    DWORD PTR [edi],eax
100190fc:	mov    DWORD PTR [edi+0x4],esi
100190ff:	mov    BYTE PTR [edi+0x8],0x0
10019103:	mov    eax,edi
10019105:	pop    esi
10019106:	mov    esp,ebp
10019108:	pop    ebp
10019109:	ret    0x4
1001910c:	push   ebp
1001910d:	mov    ebp,esp
1001910f:	and    esp,0xfffffff8
10019112:	mov    edx,DWORD PTR [eax+0x4]
10019115:	mov    ecx,DWORD PTR ds:0x10082f40
1001911b:	mov    DWORD PTR ds:0x10082f40,edx
10019121:	mov    DWORD PTR [eax+0x4],ecx
10019124:	mov    edx,DWORD PTR [eax+0x8]
10019127:	mov    ecx,DWORD PTR ds:0x10082f44
1001912d:	mov    DWORD PTR ds:0x10082f44,edx
10019133:	mov    DWORD PTR [eax+0x8],ecx
10019136:	mov    esp,ebp
10019138:	pop    ebp
10019139:	ret    
1001913a:	push   0x48
1001913c:	mov    eax,0x100607fe
10019141:	call   0x10059df5
10019146:	mov    edi,ecx
10019148:	cmp    DWORD PTR [esi+0x8],0x9249248
1001914f:	jb     0x10019183
10019151:	push   0x1006e0f8
10019156:	lea    ecx,[ebp-0x2c]
10019159:	call   0x100011a7
1001915e:	and    DWORD PTR [ebp-0x4],0x0
10019162:	lea    eax,[ebp-0x2c]
10019165:	push   eax
10019166:	lea    ecx,[ebp-0x54]
10019169:	call   0x10001077
1001916e:	push   0x100764d0
10019173:	lea    eax,[ebp-0x54]
10019176:	push   eax
10019177:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1001917e:	call   0x10047942
10019183:	mov    eax,DWORD PTR [esi+0x4]
10019186:	push   0x0
10019188:	push   DWORD PTR [ebp+0x10]
1001918b:	push   eax
1001918c:	push   edi
1001918d:	push   eax
1001918e:	call   0x100193a8
10019193:	inc    DWORD PTR [esi+0x8]
10019196:	mov    ebx,eax
10019198:	mov    eax,DWORD PTR [esi+0x4]
1001919b:	cmp    edi,eax
1001919d:	jne    0x100191ac
1001919f:	mov    DWORD PTR [eax+0x4],ebx
100191a2:	mov    eax,DWORD PTR [esi+0x4]
100191a5:	mov    DWORD PTR [eax],ebx
100191a7:	mov    eax,DWORD PTR [esi+0x4]
100191aa:	jmp    0x100191ca
100191ac:	cmp    BYTE PTR [ebp+0xc],0x0
100191b0:	je     0x100191bf
100191b2:	mov    DWORD PTR [edi],ebx
100191b4:	mov    eax,DWORD PTR [esi+0x4]
100191b7:	cmp    edi,DWORD PTR [eax]
100191b9:	jne    0x100191cd
100191bb:	mov    DWORD PTR [eax],ebx
100191bd:	jmp    0x100191cd
100191bf:	mov    DWORD PTR [edi+0x8],ebx
100191c2:	mov    eax,DWORD PTR [esi+0x4]
100191c5:	cmp    edi,DWORD PTR [eax+0x8]
100191c8:	jne    0x100191cd
100191ca:	mov    DWORD PTR [eax+0x8],ebx
100191cd:	mov    edi,ebx
100191cf:	lea    eax,[ebx+0x4]
100191d2:	jmp    0x10019261
100191d7:	mov    ecx,DWORD PTR [eax]
100191d9:	mov    edx,DWORD PTR [ecx+0x4]
100191dc:	cmp    ecx,DWORD PTR [edx]
100191de:	jne    0x10019215
100191e0:	mov    edx,DWORD PTR [edx+0x8]
100191e3:	cmp    BYTE PTR [edx+0x28],0x0
100191e7:	je     0x1001921d
100191e9:	cmp    edi,DWORD PTR [ecx+0x8]
100191ec:	jne    0x100191f6
100191ee:	push   esi
100191ef:	mov    edi,ecx
100191f1:	call   0x10019368
100191f6:	mov    eax,DWORD PTR [edi+0x4]
100191f9:	mov    BYTE PTR [eax+0x28],0x1
100191fd:	mov    eax,DWORD PTR [edi+0x4]
10019200:	mov    eax,DWORD PTR [eax+0x4]
10019203:	mov    BYTE PTR [eax+0x28],0x0
10019207:	mov    eax,DWORD PTR [edi+0x4]
1001920a:	mov    ecx,DWORD PTR [eax+0x4]
1001920d:	push   esi
1001920e:	call   0x1002e468
10019213:	jmp    0x1001925e
10019215:	mov    edx,DWORD PTR [edx]
10019217:	cmp    BYTE PTR [edx+0x28],0x0
1001921b:	jne    0x10019235
1001921d:	mov    BYTE PTR [ecx+0x28],0x1
10019221:	mov    BYTE PTR [edx+0x28],0x1
10019225:	mov    ecx,DWORD PTR [eax]
10019227:	mov    ecx,DWORD PTR [ecx+0x4]
1001922a:	mov    BYTE PTR [ecx+0x28],0x0
1001922e:	mov    eax,DWORD PTR [eax]
10019230:	mov    edi,DWORD PTR [eax+0x4]
10019233:	jmp    0x1001925e
10019235:	cmp    edi,DWORD PTR [ecx]
10019237:	jne    0x10019241
10019239:	push   esi
1001923a:	mov    edi,ecx
1001923c:	call   0x1002e468
10019241:	mov    eax,DWORD PTR [edi+0x4]
10019244:	mov    BYTE PTR [eax+0x28],0x1
10019248:	mov    eax,DWORD PTR [edi+0x4]
1001924b:	mov    eax,DWORD PTR [eax+0x4]
1001924e:	mov    BYTE PTR [eax+0x28],0x0
10019252:	mov    eax,DWORD PTR [edi+0x4]
10019255:	mov    ecx,DWORD PTR [eax+0x4]
10019258:	push   esi
10019259:	call   0x10019368
1001925e:	lea    eax,[edi+0x4]
10019261:	mov    ecx,DWORD PTR [eax]
10019263:	cmp    BYTE PTR [ecx+0x28],0x0
10019267:	je     0x100191d7
1001926d:	mov    eax,DWORD PTR [esi+0x4]
10019270:	mov    eax,DWORD PTR [eax+0x4]
10019273:	mov    BYTE PTR [eax+0x28],0x1
10019277:	mov    eax,DWORD PTR [ebp+0x8]
1001927a:	mov    DWORD PTR [eax+0x4],ebx
1001927d:	mov    DWORD PTR [eax],esi
1001927f:	call   0x10059ecd
10019284:	ret    0xc
10019287:	push   ebp
10019288:	mov    ebp,esp
1001928a:	and    esp,0xfffffff8
1001928d:	push   ecx
1001928e:	push   ecx
1001928f:	push   ebx
10019290:	push   edi
10019291:	mov    edi,eax
10019293:	mov    eax,DWORD PTR [edi+0x4]
10019296:	mov    ecx,DWORD PTR [eax]
10019298:	push   eax
10019299:	push   edi
1001929a:	push   ecx
1001929b:	push   edi
1001929c:	lea    ebx,[esp+0x18]
100192a0:	call   0x100192bc
100192a5:	push   DWORD PTR [edi+0x4]
100192a8:	call   0x10042fe2
100192ad:	and    DWORD PTR [edi+0x4],0x0
100192b1:	and    DWORD PTR [edi+0x8],0x0
100192b5:	pop    ecx
100192b6:	pop    edi
100192b7:	pop    ebx
100192b8:	mov    esp,ebp
100192ba:	pop    ebp
100192bb:	ret    
100192bc:	push   ebp
100192bd:	mov    ebp,esp
100192bf:	mov    eax,DWORD PTR [edi+0x4]
100192c2:	sub    esp,0x14
100192c5:	cmp    DWORD PTR [ebp+0x8],0x0
100192c9:	push   esi
100192ca:	mov    esi,DWORD PTR [eax]
100192cc:	je     0x100192d3
100192ce:	cmp    DWORD PTR [ebp+0x8],edi
100192d1:	je     0x100192d8
100192d3:	call   0x10043605
100192d8:	cmp    DWORD PTR [ebp+0xc],esi
100192db:	jne    0x10019320
100192dd:	cmp    DWORD PTR [ebp+0x10],0x0
100192e1:	mov    esi,DWORD PTR [edi+0x4]
100192e4:	je     0x100192eb
100192e6:	cmp    DWORD PTR [ebp+0x10],edi
100192e9:	je     0x100192f0
100192eb:	call   0x10043605
100192f0:	cmp    DWORD PTR [ebp+0x14],esi
100192f3:	jne    0x10019320
100192f5:	mov    eax,DWORD PTR [edi+0x4]
100192f8:	push   DWORD PTR [eax+0x4]
100192fb:	mov    ecx,edi
100192fd:	call   0x100196cf
10019302:	mov    eax,DWORD PTR [edi+0x4]
10019305:	mov    DWORD PTR [eax+0x4],eax
10019308:	mov    eax,DWORD PTR [edi+0x4]
1001930b:	and    DWORD PTR [edi+0x8],0x0
1001930f:	mov    DWORD PTR [eax],eax
10019311:	mov    eax,DWORD PTR [edi+0x4]
10019314:	mov    DWORD PTR [eax+0x8],eax
10019317:	mov    eax,DWORD PTR [edi+0x4]
1001931a:	mov    eax,DWORD PTR [eax]
1001931c:	mov    DWORD PTR [ebx],edi
1001931e:	jmp    0x1001935e
10019320:	mov    eax,DWORD PTR [ebp+0x8]
10019323:	test   eax,eax
10019325:	je     0x1001932c
10019327:	cmp    eax,DWORD PTR [ebp+0x10]
1001932a:	je     0x10019331
1001932c:	call   0x10043605
10019331:	mov    eax,DWORD PTR [ebp+0xc]
10019334:	cmp    eax,DWORD PTR [ebp+0x14]
10019337:	mov    ecx,DWORD PTR [ebp+0x8]
1001933a:	je     0x1001935c
1001933c:	lea    esi,[ebp+0x8]
1001933f:	mov    DWORD PTR [ebp-0x8],ecx
10019342:	mov    DWORD PTR [ebp-0x4],eax
10019345:	call   0x1001970d
1001934a:	push   DWORD PTR [ebp-0x4]
1001934d:	lea    eax,[ebp-0x10]
10019350:	push   DWORD PTR [ebp-0x8]
10019353:	push   eax
10019354:	push   edi
10019355:	call   0x1001940f
1001935a:	jmp    0x10019320
1001935c:	mov    DWORD PTR [ebx],ecx
1001935e:	mov    DWORD PTR [ebx+0x4],eax
10019361:	mov    eax,ebx
10019363:	pop    esi
10019364:	leave  
10019365:	ret    0x10
10019368:	mov    eax,DWORD PTR [ecx+0x8]
1001936b:	mov    edx,DWORD PTR [eax]
1001936d:	mov    DWORD PTR [ecx+0x8],edx
10019370:	mov    edx,DWORD PTR [eax]
10019372:	cmp    BYTE PTR [edx+0x29],0x0
10019376:	jne    0x1001937b
10019378:	mov    DWORD PTR [edx+0x4],ecx
1001937b:	mov    edx,DWORD PTR [ecx+0x4]
1001937e:	mov    DWORD PTR [eax+0x4],edx
10019381:	mov    edx,DWORD PTR [esp+0x4]
10019385:	mov    edx,DWORD PTR [edx+0x4]
10019388:	cmp    ecx,DWORD PTR [edx+0x4]
1001938b:	jne    0x10019392
1001938d:	mov    DWORD PTR [edx+0x4],eax
10019390:	jmp    0x100193a0
10019392:	mov    edx,DWORD PTR [ecx+0x4]
10019395:	cmp    ecx,DWORD PTR [edx]
10019397:	jne    0x1001939d
10019399:	mov    DWORD PTR [edx],eax
1001939b:	jmp    0x100193a0
1001939d:	mov    DWORD PTR [edx+0x8],eax
100193a0:	mov    DWORD PTR [eax],ecx
100193a2:	mov    DWORD PTR [ecx+0x4],eax
100193a5:	ret    0x4
100193a8:	push   0x8
100193aa:	mov    eax,0x100600b5
100193af:	call   0x10059e28
100193b4:	push   0x2c
100193b6:	call   0x10043196
100193bb:	mov    esi,eax
100193bd:	pop    ecx
100193be:	mov    DWORD PTR [ebp-0x14],esi
100193c1:	test   esi,esi
100193c3:	mov    DWORD PTR [ebp-0x4],0x1
100193ca:	je     0x100193f2
100193cc:	mov    eax,DWORD PTR [ebp+0x8]
100193cf:	push   DWORD PTR [ebp+0x14]
100193d2:	mov    DWORD PTR [esi],eax
100193d4:	mov    eax,DWORD PTR [ebp+0xc]
100193d7:	mov    DWORD PTR [esi+0x4],eax
100193da:	mov    eax,DWORD PTR [ebp+0x10]
100193dd:	lea    ecx,[esi+0xc]
100193e0:	mov    DWORD PTR [esi+0x8],eax
100193e3:	call   0x100011c9
100193e8:	mov    al,BYTE PTR [ebp+0x18]
100193eb:	mov    BYTE PTR [esi+0x28],al
100193ee:	mov    BYTE PTR [esi+0x29],0x0
100193f2:	mov    eax,esi
100193f4:	call   0x10059ecd
100193f9:	ret    0x14
100193fc:	push   DWORD PTR [ebp-0x14]
100193ff:	call   0x10042fe2
10019404:	pop    ecx
10019405:	push   0x0
10019407:	push   0x0
10019409:	call   0x10047942
1001940e:	int3   
1001940f:	push   0x44
10019411:	mov    eax,0x10060b46
10019416:	call   0x10059df5
1001941b:	mov    ebx,DWORD PTR [ebp+0x14]
1001941e:	cmp    BYTE PTR [ebx+0x29],0x0
10019422:	je     0x10019456
10019424:	push   0x1006dcfc
10019429:	lea    ecx,[ebp-0x28]
1001942c:	call   0x100011a7
10019431:	and    DWORD PTR [ebp-0x4],0x0
10019435:	lea    eax,[ebp-0x28]
10019438:	push   eax
10019439:	lea    ecx,[ebp-0x50]
1001943c:	call   0x10001077
10019441:	push   0x10076428
10019446:	lea    eax,[ebp-0x50]
10019449:	push   eax
1001944a:	mov    DWORD PTR [ebp-0x50],0x1006c988
10019451:	call   0x10047942
10019456:	lea    esi,[ebp+0x10]
10019459:	call   0x1001970d
1001945e:	mov    ecx,DWORD PTR [ebx]
10019460:	cmp    BYTE PTR [ecx+0x29],0x0
10019464:	je     0x1001946b
10019466:	mov    edi,DWORD PTR [ebx+0x8]
10019469:	jmp    0x10019482
1001946b:	mov    eax,DWORD PTR [ebx+0x8]
1001946e:	cmp    BYTE PTR [eax+0x29],0x0
10019472:	je     0x10019478
10019474:	mov    edi,ecx
10019476:	jmp    0x10019482
10019478:	mov    eax,DWORD PTR [ebp+0x14]
1001947b:	cmp    eax,ebx
1001947d:	mov    edi,DWORD PTR [eax+0x8]
10019480:	jne    0x100194f8
10019482:	cmp    BYTE PTR [edi+0x29],0x0
10019486:	mov    esi,DWORD PTR [ebx+0x4]
10019489:	jne    0x1001948e
1001948b:	mov    DWORD PTR [edi+0x4],esi
1001948e:	mov    ecx,DWORD PTR [ebp+0x8]
10019491:	mov    eax,DWORD PTR [ecx+0x4]
10019494:	cmp    DWORD PTR [eax+0x4],ebx
10019497:	jne    0x1001949e
10019499:	mov    DWORD PTR [eax+0x4],edi
1001949c:	jmp    0x100194a9
1001949e:	cmp    DWORD PTR [esi],ebx
100194a0:	jne    0x100194a6
100194a2:	mov    DWORD PTR [esi],edi
100194a4:	jmp    0x100194a9
100194a6:	mov    DWORD PTR [esi+0x8],edi
100194a9:	mov    edx,DWORD PTR [ecx+0x4]
100194ac:	cmp    DWORD PTR [edx],ebx
100194ae:	jne    0x100194cc
100194b0:	cmp    BYTE PTR [edi+0x29],0x0
100194b4:	je     0x100194ba
100194b6:	mov    ecx,esi
100194b8:	jmp    0x100194ca
100194ba:	mov    eax,DWORD PTR [edi]
100194bc:	mov    ecx,edi
100194be:	jmp    0x100194c4
100194c0:	mov    ecx,eax
100194c2:	mov    eax,DWORD PTR [ecx]
100194c4:	cmp    BYTE PTR [eax+0x29],0x0
100194c8:	je     0x100194c0
100194ca:	mov    DWORD PTR [edx],ecx
100194cc:	mov    eax,DWORD PTR [ebp+0x8]
100194cf:	mov    edx,DWORD PTR [eax+0x4]
100194d2:	cmp    DWORD PTR [edx+0x8],ebx
100194d5:	jne    0x10019552
100194d7:	cmp    BYTE PTR [edi+0x29],0x0
100194db:	je     0x100194e1
100194dd:	mov    ecx,esi
100194df:	jmp    0x100194f3
100194e1:	mov    eax,DWORD PTR [edi+0x8]
100194e4:	mov    ecx,edi
100194e6:	jmp    0x100194ed
100194e8:	mov    ecx,eax
100194ea:	mov    eax,DWORD PTR [ecx+0x8]
100194ed:	cmp    BYTE PTR [eax+0x29],0x0
100194f1:	je     0x100194e8
100194f3:	mov    DWORD PTR [edx+0x8],ecx
100194f6:	jmp    0x10019552
100194f8:	mov    DWORD PTR [ecx+0x4],eax
100194fb:	mov    ecx,DWORD PTR [ebx]
100194fd:	mov    DWORD PTR [eax],ecx
100194ff:	cmp    eax,DWORD PTR [ebx+0x8]
10019502:	jne    0x10019508
10019504:	mov    esi,eax
10019506:	jmp    0x10019522
10019508:	cmp    BYTE PTR [edi+0x29],0x0
1001950c:	mov    esi,DWORD PTR [eax+0x4]
1001950f:	jne    0x10019514
10019511:	mov    DWORD PTR [edi+0x4],esi
10019514:	mov    DWORD PTR [esi],edi
10019516:	mov    ecx,DWORD PTR [ebx+0x8]
10019519:	mov    DWORD PTR [eax+0x8],ecx
1001951c:	mov    ecx,DWORD PTR [ebx+0x8]
1001951f:	mov    DWORD PTR [ecx+0x4],eax
10019522:	mov    ecx,DWORD PTR [ebp+0x8]
10019525:	mov    ecx,DWORD PTR [ecx+0x4]
10019528:	cmp    DWORD PTR [ecx+0x4],ebx
1001952b:	jne    0x10019532
1001952d:	mov    DWORD PTR [ecx+0x4],eax
10019530:	jmp    0x10019540
10019532:	mov    ecx,DWORD PTR [ebx+0x4]
10019535:	cmp    DWORD PTR [ecx],ebx
10019537:	jne    0x1001953d
10019539:	mov    DWORD PTR [ecx],eax
1001953b:	jmp    0x10019540
1001953d:	mov    DWORD PTR [ecx+0x8],eax
10019540:	mov    ecx,DWORD PTR [ebx+0x4]
10019543:	mov    DWORD PTR [eax+0x4],ecx
10019546:	mov    dl,BYTE PTR [ebx+0x28]
10019549:	mov    cl,BYTE PTR [eax+0x28]
1001954c:	mov    BYTE PTR [eax+0x28],dl
1001954f:	mov    BYTE PTR [ebx+0x28],cl
10019552:	cmp    BYTE PTR [ebx+0x28],0x1
10019556:	jne    0x1001966e
1001955c:	jmp    0x10019622
10019561:	cmp    BYTE PTR [edi+0x28],0x1
10019565:	jne    0x1001966a
1001956b:	mov    ecx,DWORD PTR [esi]
1001956d:	cmp    edi,ecx
1001956f:	jne    0x100195e8
10019571:	mov    ecx,DWORD PTR [esi+0x8]
10019574:	cmp    BYTE PTR [ecx+0x28],0x0
10019578:	jne    0x1001958f
1001957a:	push   DWORD PTR [ebp+0x8]
1001957d:	mov    BYTE PTR [ecx+0x28],0x1
10019581:	mov    ecx,esi
10019583:	mov    BYTE PTR [esi+0x28],0x0
10019587:	call   0x10019368
1001958c:	mov    ecx,DWORD PTR [esi+0x8]
1001958f:	cmp    BYTE PTR [ecx+0x29],0x0
10019593:	jne    0x1001961d
10019599:	mov    eax,DWORD PTR [ecx]
1001959b:	cmp    BYTE PTR [eax+0x28],0x1
1001959f:	jne    0x100195aa
100195a1:	mov    eax,DWORD PTR [ecx+0x8]
100195a4:	cmp    BYTE PTR [eax+0x28],0x1
100195a8:	je     0x10019619
100195aa:	mov    eax,DWORD PTR [ecx+0x8]
100195ad:	cmp    BYTE PTR [eax+0x28],0x1
100195b1:	jne    0x100195c8
100195b3:	mov    eax,DWORD PTR [ecx]
100195b5:	push   DWORD PTR [ebp+0x8]
100195b8:	mov    BYTE PTR [eax+0x28],0x1
100195bc:	mov    BYTE PTR [ecx+0x28],0x0
100195c0:	call   0x1002e468
100195c5:	mov    ecx,DWORD PTR [esi+0x8]
100195c8:	mov    al,BYTE PTR [esi+0x28]
100195cb:	push   DWORD PTR [ebp+0x8]
100195ce:	mov    BYTE PTR [ecx+0x28],al
100195d1:	mov    BYTE PTR [esi+0x28],0x1
100195d5:	mov    eax,DWORD PTR [ecx+0x8]
100195d8:	mov    ecx,esi
100195da:	mov    BYTE PTR [eax+0x28],0x1
100195de:	call   0x10019368
100195e3:	jmp    0x1001966a
100195e8:	cmp    BYTE PTR [ecx+0x28],0x0
100195ec:	jne    0x10019602
100195ee:	push   DWORD PTR [ebp+0x8]
100195f1:	mov    BYTE PTR [ecx+0x28],0x1
100195f5:	mov    ecx,esi
100195f7:	mov    BYTE PTR [esi+0x28],0x0
100195fb:	call   0x1002e468
10019600:	mov    ecx,DWORD PTR [esi]
10019602:	cmp    BYTE PTR [ecx+0x29],0x0
10019606:	jne    0x1001961d
10019608:	mov    eax,DWORD PTR [ecx+0x8]
1001960b:	cmp    BYTE PTR [eax+0x28],0x1
1001960f:	jne    0x10019633
10019611:	mov    eax,DWORD PTR [ecx]
10019613:	cmp    BYTE PTR [eax+0x28],0x1
10019617:	jne    0x10019633
10019619:	mov    BYTE PTR [ecx+0x28],0x0
1001961d:	mov    edi,esi
1001961f:	mov    esi,DWORD PTR [esi+0x4]
10019622:	mov    eax,DWORD PTR [ebp+0x8]
10019625:	mov    eax,DWORD PTR [eax+0x4]
10019628:	cmp    edi,DWORD PTR [eax+0x4]
1001962b:	jne    0x10019561
10019631:	jmp    0x1001966a
10019633:	mov    eax,DWORD PTR [ecx]
10019635:	cmp    BYTE PTR [eax+0x28],0x1
10019639:	jne    0x10019650
1001963b:	mov    eax,DWORD PTR [ecx+0x8]
1001963e:	push   DWORD PTR [ebp+0x8]
10019641:	mov    BYTE PTR [eax+0x28],0x1
10019645:	mov    BYTE PTR [ecx+0x28],0x0
10019649:	call   0x10019368
1001964e:	mov    ecx,DWORD PTR [esi]
10019650:	mov    al,BYTE PTR [esi+0x28]
10019653:	push   DWORD PTR [ebp+0x8]
10019656:	mov    BYTE PTR [ecx+0x28],al
10019659:	mov    BYTE PTR [esi+0x28],0x1
1001965d:	mov    eax,DWORD PTR [ecx]
1001965f:	mov    ecx,esi
10019661:	mov    BYTE PTR [eax+0x28],0x1
10019665:	call   0x1002e468
1001966a:	mov    BYTE PTR [edi+0x28],0x1
1001966e:	push   0x0
10019670:	push   0x1
10019672:	lea    ecx,[ebx+0xc]
10019675:	call   0x100012f0
1001967a:	push   ebx
1001967b:	call   0x10042fe2
10019680:	pop    ecx
10019681:	mov    ecx,DWORD PTR [ebp+0x8]
10019684:	mov    eax,DWORD PTR [ecx+0x8]
10019687:	test   eax,eax
10019689:	jbe    0x1001968f
1001968b:	dec    eax
1001968c:	mov    DWORD PTR [ecx+0x8],eax
1001968f:	mov    ecx,DWORD PTR [ebp+0x10]
10019692:	mov    eax,DWORD PTR [ebp+0xc]
10019695:	mov    DWORD PTR [eax],ecx
10019697:	mov    ecx,DWORD PTR [ebp+0x14]
1001969a:	mov    DWORD PTR [eax+0x4],ecx
1001969d:	call   0x10059ecd
100196a2:	ret    0x10
100196a5:	push   0x2c
100196a7:	call   0x10043196
100196ac:	xor    edx,edx
100196ae:	cmp    eax,edx
100196b0:	pop    ecx
100196b1:	je     0x100196b5
100196b3:	mov    DWORD PTR [eax],edx
100196b5:	lea    ecx,[eax+0x4]
100196b8:	cmp    ecx,edx
100196ba:	je     0x100196be
100196bc:	mov    DWORD PTR [ecx],edx
100196be:	lea    ecx,[eax+0x8]
100196c1:	cmp    ecx,edx
100196c3:	je     0x100196c7
100196c5:	mov    DWORD PTR [ecx],edx
100196c7:	mov    BYTE PTR [eax+0x28],0x1
100196cb:	mov    BYTE PTR [eax+0x29],dl
100196ce:	ret    
100196cf:	push   ebx
100196d0:	push   esi
100196d1:	push   edi
100196d2:	mov    edi,DWORD PTR [esp+0x10]
100196d6:	cmp    BYTE PTR [edi+0x29],0x0
100196da:	mov    ebx,ecx
100196dc:	mov    esi,edi
100196de:	jne    0x10019707
100196e0:	push   DWORD PTR [esi+0x8]
100196e3:	mov    ecx,ebx
100196e5:	call   0x100196cf
100196ea:	mov    esi,DWORD PTR [esi]
100196ec:	push   0x0
100196ee:	push   0x1
100196f0:	lea    ecx,[edi+0xc]
100196f3:	call   0x100012f0
100196f8:	push   edi
100196f9:	call   0x10042fe2
100196fe:	cmp    BYTE PTR [esi+0x29],0x0
10019702:	pop    ecx
10019703:	mov    edi,esi
10019705:	je     0x100196e0
10019707:	pop    edi
10019708:	pop    esi
10019709:	pop    ebx
1001970a:	ret    0x4
1001970d:	push   ebx
1001970e:	xor    ebx,ebx
10019710:	cmp    DWORD PTR [esi],ebx
10019712:	jne    0x10019719
10019714:	call   0x10043605
10019719:	mov    eax,DWORD PTR [esi+0x4]
1001971c:	cmp    BYTE PTR [eax+0x29],bl
1001971f:	je     0x10019728
10019721:	call   0x10043605
10019726:	jmp    0x10019756
10019728:	mov    ecx,DWORD PTR [eax+0x8]
1001972b:	cmp    BYTE PTR [ecx+0x29],bl
1001972e:	jne    0x1001974b
10019730:	jmp    0x10019734
10019732:	mov    ecx,eax
10019734:	mov    eax,DWORD PTR [ecx]
10019736:	cmp    BYTE PTR [eax+0x29],bl
10019739:	je     0x10019732
1001973b:	mov    DWORD PTR [esi+0x4],ecx
1001973e:	jmp    0x10019756
10019740:	mov    ecx,DWORD PTR [esi+0x4]
10019743:	cmp    ecx,DWORD PTR [eax+0x8]
10019746:	jne    0x10019753
10019748:	mov    DWORD PTR [esi+0x4],eax
1001974b:	mov    eax,DWORD PTR [eax+0x4]
1001974e:	cmp    BYTE PTR [eax+0x29],bl
10019751:	je     0x10019740
10019753:	mov    DWORD PTR [esi+0x4],eax
10019756:	mov    eax,esi
10019758:	pop    ebx
10019759:	ret    
1001975a:	push   ebx
1001975b:	push   esi
1001975c:	mov    esi,DWORD PTR [esp+0xc]
10019760:	push   edi
10019761:	mov    edi,ecx
10019763:	sub    esi,edi
10019765:	sar    esi,0x5
10019768:	shl    esi,0x5
1001976b:	mov    ebx,eax
1001976d:	add    esi,ebx
1001976f:	cmp    edi,DWORD PTR [esp+0x10]
10019773:	je     0x10019794
10019775:	sub    ebx,edi
10019777:	push   0xffffffff
10019779:	push   0x0
1001977b:	push   edi
1001977c:	lea    ecx,[ebx+edi*1]
1001977f:	call   0x10001241
10019784:	mov    eax,DWORD PTR [edi+0x1c]
10019787:	mov    DWORD PTR [ebx+edi*1+0x1c],eax
1001978b:	add    edi,0x20
1001978e:	cmp    edi,DWORD PTR [esp+0x10]
10019792:	jne    0x10019777
10019794:	pop    edi
10019795:	mov    eax,esi
10019797:	pop    esi
10019798:	pop    ebx
10019799:	ret    
1001979a:	push   ecx
1001979b:	mov    ecx,DWORD PTR [eax+0x18]
1001979e:	push   esi
1001979f:	add    eax,0x4
100197a2:	cmp    ecx,0x10
100197a5:	push   edi
100197a6:	jb     0x100197ac
100197a8:	mov    edi,DWORD PTR [eax]
100197aa:	jmp    0x100197ae
100197ac:	mov    edi,eax
100197ae:	cmp    ecx,0x10
100197b1:	jb     0x100197b7
100197b3:	mov    esi,DWORD PTR [eax]
100197b5:	jmp    0x100197b9
100197b7:	mov    esi,eax
100197b9:	push   0x1007103c
100197be:	push   0x17
100197c0:	mov    ecx,0x10071068
100197c5:	call   0x100042b4
100197ca:	push   eax
100197cb:	push   edi
100197cc:	call   0x10045bf0
100197d1:	add    esp,0x10
100197d4:	cmp    eax,esi
100197d6:	jne    0x100197e0
100197d8:	push   0x15
100197da:	call   0x10038b80
100197df:	pop    ecx
100197e0:	pop    edi
100197e1:	pop    esi
100197e2:	pop    ecx
100197e3:	ret    
100197e4:	push   ebp
100197e5:	mov    ebp,esp
100197e7:	and    esp,0xfffffff8
100197ea:	push   0xffffffff
100197ec:	push   0x100612b9
100197f1:	mov    eax,fs:0x0
100197f7:	push   eax
100197f8:	sub    esp,0x18
100197fb:	push   esi
100197fc:	mov    eax,ds:0x100801ac
10019801:	xor    eax,esp
10019803:	push   eax
10019804:	lea    eax,[esp+0x20]
10019808:	mov    fs:0x0,eax
1001980e:	mov    esi,ecx
10019810:	and    DWORD PTR [esp+0xc],0x0
10019815:	push   0x1f4
1001981a:	push   DWORD PTR [esi+0xc]
1001981d:	call   DWORD PTR ds:0x1006707c
10019823:	test   eax,eax
10019825:	je     0x10019835
10019827:	call   0x1001999c
1001982c:	and    DWORD PTR [edi+0x8],0x0
10019830:	mov    DWORD PTR [edi+0x4],eax
10019833:	jmp    0x1001986c
10019835:	lea    eax,[esp+0x10]
10019839:	push   eax
1001983a:	mov    ecx,esi
1001983c:	call   0x1001987f
10019841:	and    DWORD PTR [esp+0x28],0x0
10019846:	push   DWORD PTR [esi+0xc]
10019849:	call   DWORD PTR ds:0x10067090
1001984f:	push   edi
10019850:	lea    ecx,[esp+0x14]
10019854:	call   0x1001987f
10019859:	lea    esi,[esp+0x10]
1001985d:	call   0x100198f5
10019862:	push   DWORD PTR [esp+0x14]
10019866:	call   0x10042fe2
1001986b:	pop    ecx
1001986c:	mov    eax,edi
1001986e:	mov    ecx,DWORD PTR [esp+0x20]
10019872:	mov    DWORD PTR fs:0x0,ecx
10019879:	pop    ecx
1001987a:	pop    esi
1001987b:	mov    esp,ebp
1001987d:	pop    ebp
1001987e:	ret    
1001987f:	push   0x8
10019881:	mov    eax,0x10061296
10019886:	call   0x10059e28
1001988b:	mov    edi,ecx
1001988d:	mov    esi,DWORD PTR [ebp+0x8]
10019890:	call   0x1001999c
10019895:	xor    ecx,ecx
10019897:	mov    DWORD PTR [ebp-0x4],ecx
1001989a:	mov    DWORD PTR [esi+0x4],eax
1001989d:	mov    DWORD PTR [esi+0x8],ecx
100198a0:	mov    ecx,DWORD PTR [edi+0x4]
100198a3:	mov    edx,DWORD PTR [ecx]
100198a5:	mov    eax,DWORD PTR [eax]
100198a7:	push   ecx
100198a8:	push   edi
100198a9:	push   edx
100198aa:	push   edi
100198ab:	push   eax
100198ac:	push   esi
100198ad:	push   DWORD PTR [ebp+0x8]
100198b0:	push   esi
100198b1:	call   0x10019a0e
100198b6:	mov    eax,esi
100198b8:	call   0x10059ecd
100198bd:	ret    0x4
100198c0:	mov    esi,DWORD PTR [ebp+0x8]
100198c3:	call   0x100198f5
100198c8:	push   DWORD PTR [esi+0x4]
100198cb:	call   0x10042fe2
100198d0:	pop    ecx
100198d1:	xor    ecx,ecx
100198d3:	push   ecx
100198d4:	push   ecx
100198d5:	mov    DWORD PTR [esi+0x4],ecx
100198d8:	call   0x10047942
100198dd:	int3   
100198de:	push   esi
100198df:	mov    esi,eax
100198e1:	call   0x100198f5
100198e6:	push   DWORD PTR [esi+0x4]
100198e9:	call   0x10042fe2
100198ee:	and    DWORD PTR [esi+0x4],0x0
100198f2:	pop    ecx
100198f3:	pop    esi
100198f4:	ret    
100198f5:	mov    eax,DWORD PTR [esi+0x4]
100198f8:	push   edi
100198f9:	mov    edi,DWORD PTR [eax]
100198fb:	mov    DWORD PTR [eax],eax
100198fd:	mov    eax,DWORD PTR [esi+0x4]
10019900:	mov    DWORD PTR [eax+0x4],eax
10019903:	and    DWORD PTR [esi+0x8],0x0
10019907:	cmp    edi,DWORD PTR [esi+0x4]
1001990a:	je     0x1001992a
1001990c:	push   ebx
1001990d:	mov    ebx,DWORD PTR [edi]
1001990f:	push   0x0
10019911:	push   0x1
10019913:	lea    ecx,[edi+0x8]
10019916:	call   0x100012f0
1001991b:	push   edi
1001991c:	call   0x10042fe2
10019921:	cmp    ebx,DWORD PTR [esi+0x4]
10019924:	pop    ecx
10019925:	mov    edi,ebx
10019927:	jne    0x1001990d
10019929:	pop    ebx
1001992a:	pop    edi
1001992b:	ret    
1001992c:	push   0x48
1001992e:	mov    eax,0x100607fe
10019933:	call   0x10059df5
10019938:	push   DWORD PTR [ebp+0x8]
1001993b:	mov    esi,DWORD PTR [ebp+0x10]
1001993e:	push   DWORD PTR [esi+0x4]
10019941:	push   esi
10019942:	call   0x100199b4
10019947:	mov    ecx,DWORD PTR [edi+0x8]
1001994a:	mov    edx,0x9249249
1001994f:	sub    edx,ecx
10019951:	cmp    edx,0x1
10019954:	jae    0x10019988
10019956:	push   0x10071080
1001995b:	lea    ecx,[ebp-0x2c]
1001995e:	call   0x100011a7
10019963:	and    DWORD PTR [ebp-0x4],0x0
10019967:	lea    eax,[ebp-0x2c]
1001996a:	push   eax
1001996b:	lea    ecx,[ebp-0x54]
1001996e:	call   0x10001077
10019973:	push   0x100764d0
10019978:	lea    eax,[ebp-0x54]
1001997b:	push   eax
1001997c:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10019983:	call   0x10047942
10019988:	inc    ecx
10019989:	mov    DWORD PTR [edi+0x8],ecx
1001998c:	mov    DWORD PTR [esi+0x4],eax
1001998f:	mov    ecx,DWORD PTR [eax+0x4]
10019992:	mov    DWORD PTR [ecx],eax
10019994:	call   0x10059ecd
10019999:	ret    0xc
1001999c:	push   0x24
1001999e:	call   0x10043196
100199a3:	test   eax,eax
100199a5:	pop    ecx
100199a6:	je     0x100199aa
100199a8:	mov    DWORD PTR [eax],eax
100199aa:	lea    ecx,[eax+0x4]
100199ad:	test   ecx,ecx
100199af:	je     0x100199b3
100199b1:	mov    DWORD PTR [ecx],eax
100199b3:	ret    
100199b4:	push   0x8
100199b6:	mov    eax,0x10060834
100199bb:	call   0x10059e28
100199c0:	push   0x24
100199c2:	call   0x10043196
100199c7:	and    DWORD PTR [ebp-0x4],0x0
100199cb:	mov    esi,eax
100199cd:	test   esi,esi
100199cf:	pop    ecx
100199d0:	mov    DWORD PTR [ebp-0x14],esi
100199d3:	je     0x100199da
100199d5:	mov    eax,DWORD PTR [ebp+0x8]
100199d8:	mov    DWORD PTR [esi],eax
100199da:	lea    eax,[esi+0x4]
100199dd:	test   eax,eax
100199df:	je     0x100199e6
100199e1:	mov    ecx,DWORD PTR [ebp+0xc]
100199e4:	mov    DWORD PTR [eax],ecx
100199e6:	push   DWORD PTR [ebp+0x10]
100199e9:	lea    ecx,[esi+0x8]
100199ec:	call   0x10010412
100199f1:	mov    eax,esi
100199f3:	call   0x10059ecd
100199f8:	ret    0xc
100199fb:	push   DWORD PTR [ebp-0x14]
100199fe:	call   0x10042fe2
10019a03:	pop    ecx
10019a04:	push   0x0
10019a06:	push   0x0
10019a08:	call   0x10047942
10019a0d:	int3   
10019a0e:	push   0x14
10019a10:	mov    eax,0x1006127b
10019a15:	call   0x10059e28
10019a1a:	mov    edi,DWORD PTR [ebp+0x18]
10019a1d:	mov    esi,DWORD PTR [ebp+0x1c]
10019a20:	and    DWORD PTR [ebp-0x4],0x0
10019a24:	mov    DWORD PTR [ebp-0x18],edi
10019a27:	mov    DWORD PTR [ebp-0x14],esi
10019a2a:	test   edi,edi
10019a2c:	je     0x10019a33
10019a2e:	cmp    edi,DWORD PTR [ebp+0x20]
10019a31:	je     0x10019a38
10019a33:	call   0x10043605
10019a38:	cmp    esi,DWORD PTR [ebp+0x24]
10019a3b:	je     0x10019acf
10019a41:	test   edi,edi
10019a43:	jne    0x10019a4a
10019a45:	call   0x10043605
10019a4a:	cmp    esi,DWORD PTR [edi+0x4]
10019a4d:	jne    0x10019a54
10019a4f:	call   0x10043605
10019a54:	push   DWORD PTR [ebp+0x14]
10019a57:	mov    edi,DWORD PTR [ebp+0x8]
10019a5a:	push   DWORD PTR [ebp+0x10]
10019a5d:	add    esi,0x8
10019a60:	push   esi
10019a61:	call   0x1001992c
10019a66:	lea    esi,[ebp+0x18]
10019a69:	call   0x100268eb
10019a6e:	mov    esi,DWORD PTR [ebp+0x1c]
10019a71:	mov    edi,DWORD PTR [ebp+0x18]
10019a74:	jmp    0x10019a2a
10019a76:	mov    edi,DWORD PTR [ebp+0x14]
10019a79:	mov    eax,DWORD PTR [ebp-0x18]
10019a7c:	test   eax,eax
10019a7e:	je     0x10019a85
10019a80:	cmp    eax,DWORD PTR [ebp+0x18]
10019a83:	je     0x10019a8a
10019a85:	call   0x10043605
10019a8a:	mov    eax,DWORD PTR [ebp-0x14]
10019a8d:	cmp    eax,DWORD PTR [ebp+0x1c]
10019a90:	je     0x10019ac6
10019a92:	mov    ebx,DWORD PTR [ebp+0x10]
10019a95:	test   ebx,ebx
10019a97:	mov    DWORD PTR [ebp+0x24],edi
10019a9a:	jne    0x10019aa1
10019a9c:	call   0x10043605
10019aa1:	mov    esi,DWORD PTR [edi+0x4]
10019aa4:	cmp    esi,DWORD PTR [ebx+0x4]
10019aa7:	jne    0x10019aae
10019aa9:	call   0x10043605
10019aae:	push   esi
10019aaf:	push   ebx
10019ab0:	mov    ebx,DWORD PTR [ebp+0x8]
10019ab3:	lea    eax,[ebp-0x20]
10019ab6:	push   eax
10019ab7:	call   0x10019ad7
10019abc:	lea    esi,[ebp-0x18]
10019abf:	call   0x100268eb
10019ac4:	jmp    0x10019a79
10019ac6:	push   0x0
10019ac8:	push   0x0
10019aca:	call   0x10047942
10019acf:	call   0x10059ecd
10019ad4:	ret    0x20
10019ad7:	push   ebp
10019ad8:	mov    ebp,esp
10019ada:	push   ecx
10019adb:	push   ecx
10019adc:	mov    eax,DWORD PTR [ebp+0xc]
10019adf:	push   esi
10019ae0:	push   edi
10019ae1:	mov    edi,DWORD PTR [ebp+0x10]
10019ae4:	lea    esi,[ebp+0xc]
10019ae7:	mov    DWORD PTR [ebp-0x8],eax
10019aea:	call   0x100268eb
10019aef:	cmp    edi,DWORD PTR [ebx+0x4]
10019af2:	je     0x10019b19
10019af4:	mov    eax,DWORD PTR [edi+0x4]
10019af7:	mov    ecx,DWORD PTR [edi]
10019af9:	mov    DWORD PTR [eax],ecx
10019afb:	mov    ecx,DWORD PTR [edi+0x4]
10019afe:	mov    eax,DWORD PTR [edi]
10019b00:	push   0x0
10019b02:	mov    DWORD PTR [eax+0x4],ecx
10019b05:	push   0x1
10019b07:	lea    ecx,[edi+0x8]
10019b0a:	call   0x100012f0
10019b0f:	push   edi
10019b10:	call   0x10042fe2
10019b15:	dec    DWORD PTR [ebx+0x8]
10019b18:	pop    ecx
10019b19:	mov    ecx,DWORD PTR [ebp+0xc]
10019b1c:	mov    eax,DWORD PTR [ebp+0x8]
10019b1f:	mov    DWORD PTR [eax],ecx
10019b21:	mov    ecx,DWORD PTR [ebp+0x10]
10019b24:	pop    edi
10019b25:	mov    DWORD PTR [eax+0x4],ecx
10019b28:	pop    esi
10019b29:	leave  
10019b2a:	ret    0xc
10019b2d:	push   esi
10019b2e:	push   0x1006dd18
10019b33:	lea    esi,[edi+0x4]
10019b36:	call   0x10006825
10019b3b:	test   al,al
10019b3d:	pop    ecx
10019b3e:	pop    esi
10019b3f:	je     0x10019b4a
10019b41:	cmp    DWORD PTR [edi],0x0
10019b44:	jne    0x10019b4a
10019b46:	xor    eax,eax
10019b48:	inc    eax
10019b49:	ret    
10019b4a:	xor    eax,eax
10019b4c:	ret    
10019b4d:	push   0x0
10019b4f:	mov    eax,0x100622e3
10019b54:	call   0x10059df5
10019b59:	mov    edi,DWORD PTR [ebp+0x8]
10019b5c:	call   0x1001a570
10019b61:	lea    ecx,[edi+0x4]
10019b64:	mov    DWORD PTR [ecx],eax
10019b66:	mov    BYTE PTR [eax+0x4d],0x1
10019b6a:	mov    eax,DWORD PTR [ecx]
10019b6c:	mov    DWORD PTR [eax+0x4],eax
10019b6f:	mov    eax,DWORD PTR [ecx]
10019b71:	mov    DWORD PTR [eax],eax
10019b73:	mov    ecx,DWORD PTR [ecx]
10019b75:	xor    ebx,ebx
10019b77:	mov    DWORD PTR [ecx+0x8],ecx
10019b7a:	mov    DWORD PTR [edi+0x8],ebx
10019b7d:	lea    esi,[edi+0xc]
10019b80:	mov    DWORD PTR [ebp-0x4],ebx
10019b83:	call   0x1001428e
10019b88:	mov    eax,DWORD PTR [ebp+0xc]
10019b8b:	push   ebx
10019b8c:	mov    DWORD PTR [edi+0x1c],eax
10019b8f:	mov    eax,DWORD PTR [ebp+0x10]
10019b92:	push   ebx
10019b93:	push   ebx
10019b94:	mov    DWORD PTR [edi+0x20],eax
10019b97:	call   DWORD PTR ds:0x10067080
10019b9d:	mov    DWORD PTR [edi+0x18],eax
10019ba0:	mov    eax,edi
10019ba2:	call   0x10059ecd
10019ba7:	ret    0xc
10019baa:	push   ebp
10019bab:	mov    ebp,esp
10019bad:	and    esp,0xfffffff8
10019bb0:	push   0xffffffff
10019bb2:	push   0x100622b3
10019bb7:	mov    eax,fs:0x0
10019bbd:	push   eax
10019bbe:	sub    esp,0x60
10019bc1:	mov    eax,ds:0x100801ac
10019bc6:	xor    eax,esp
10019bc8:	mov    DWORD PTR [esp+0x58],eax
10019bcc:	push   esi
10019bcd:	mov    eax,ds:0x100801ac
10019bd2:	xor    eax,esp
10019bd4:	push   eax
10019bd5:	lea    eax,[esp+0x68]
10019bd9:	mov    fs:0x0,eax
10019bdf:	mov    eax,DWORD PTR [ebp+0x8]
10019be2:	push   eax
10019be3:	lea    esi,[esp+0x2c]
10019be7:	call   0x100300d0
10019bec:	pop    ecx
10019bed:	lea    ecx,[esp+0x44]
10019bf1:	push   ecx
10019bf2:	xor    esi,esi
10019bf4:	mov    ecx,eax
10019bf6:	mov    DWORD PTR [esp+0x74],esi
10019bfa:	call   0x1002f810
10019bff:	pop    ecx
10019c00:	push   esi
10019c01:	push   0x1
10019c03:	lea    ecx,[esp+0x30]
10019c07:	mov    BYTE PTR [esp+0x78],0x2
10019c0c:	call   0x100012f0
10019c11:	mov    eax,DWORD PTR [ebp+0xc]
10019c14:	push   ebx
10019c15:	lea    ecx,[esp+0x10]
10019c19:	mov    DWORD PTR [esp+0xc],eax
10019c1d:	call   0x100011c9
10019c22:	lea    eax,[esp+0x8]
10019c26:	push   eax
10019c27:	lea    edx,[esp+0x48]
10019c2b:	mov    ecx,edi
10019c2d:	mov    BYTE PTR [esp+0x74],0x3
10019c32:	call   0x10019de3
10019c37:	push   esi
10019c38:	push   0x1
10019c3a:	lea    ecx,[esp+0x14]
10019c3e:	call   0x100012f0
10019c43:	push   esi
10019c44:	push   0x1
10019c46:	lea    ecx,[esp+0x4c]
10019c4a:	call   0x100012f0
10019c4f:	mov    ecx,DWORD PTR [esp+0x68]
10019c53:	mov    DWORD PTR fs:0x0,ecx
10019c5a:	pop    ecx
10019c5b:	pop    esi
10019c5c:	mov    ecx,DWORD PTR [esp+0x58]
10019c60:	xor    ecx,esp
10019c62:	call   0x10043615
10019c67:	mov    esp,ebp
10019c69:	pop    ebp
10019c6a:	ret    0x8
10019c6d:	push   ebp
10019c6e:	mov    ebp,esp
10019c70:	and    esp,0xfffffff8
10019c73:	push   0xffffffff
10019c75:	push   0x100630f7
10019c7a:	mov    eax,fs:0x0
10019c80:	push   eax
10019c81:	sub    esp,0x90
10019c87:	mov    eax,ds:0x100801ac
10019c8c:	xor    eax,esp
10019c8e:	mov    DWORD PTR [esp+0x88],eax
10019c95:	push   ebx
10019c96:	push   esi
10019c97:	push   edi
10019c98:	mov    eax,ds:0x100801ac
10019c9d:	xor    eax,esp
10019c9f:	push   eax
10019ca0:	lea    eax,[esp+0xa0]
10019ca7:	mov    fs:0x0,eax
10019cad:	mov    eax,DWORD PTR [ebp+0x8]
10019cb0:	mov    DWORD PTR [esp+0x1c],eax
10019cb4:	mov    eax,DWORD PTR [ebp+0xc]
10019cb7:	mov    esi,ecx
10019cb9:	mov    edi,0x1006dd18
10019cbe:	xor    ebx,ebx
10019cc0:	push   edi
10019cc1:	lea    ecx,[esp+0x44]
10019cc5:	mov    DWORD PTR [esp+0x1c],eax
10019cc9:	mov    DWORD PTR [esp+0x24],ebx
10019ccd:	call   0x100011a7
10019cd2:	lea    eax,[esp+0x40]
10019cd6:	mov    DWORD PTR [esp+0xa8],ebx
10019cdd:	push   eax
10019cde:	lea    ecx,[esp+0x80]
10019ce5:	mov    DWORD PTR [esp+0x7c],ebx
10019ce9:	call   0x100011c9
10019cee:	push   ebx
10019cef:	push   0x1
10019cf1:	lea    ecx,[esp+0x48]
10019cf5:	mov    BYTE PTR [esp+0xb0],0x2
10019cfd:	call   0x100012f0
10019d02:	push   esi
10019d03:	lea    esi,[esp+0x60]
10019d07:	call   0x100300d0
10019d0c:	pop    ecx
10019d0d:	lea    ecx,[esp+0x24]
10019d11:	push   ecx
10019d12:	mov    ecx,eax
10019d14:	mov    BYTE PTR [esp+0xac],0x3
10019d1c:	call   0x1002f810
10019d21:	pop    ecx
10019d22:	lea    ecx,[esp+0x78]
10019d26:	push   ecx
10019d27:	push   eax
10019d28:	push   DWORD PTR [esp+0x24]
10019d2c:	mov    BYTE PTR [esp+0xb4],0x4
10019d34:	call   0x1001a035
10019d39:	xor    esi,esi
10019d3b:	push   ebx
10019d3c:	inc    esi
10019d3d:	push   esi
10019d3e:	lea    ecx,[esp+0x2c]
10019d42:	mov    BYTE PTR [esp+0x1f],al
10019d46:	call   0x100012f0
10019d4b:	push   ebx
10019d4c:	push   esi
10019d4d:	lea    ecx,[esp+0x64]
10019d51:	mov    BYTE PTR [esp+0xb0],0x2
10019d59:	call   0x100012f0
10019d5e:	cmp    BYTE PTR [esp+0x17],bl
10019d62:	je     0x10019d7d
10019d64:	mov    eax,DWORD PTR [esp+0x78]
10019d68:	mov    edi,DWORD PTR [esp+0x18]
10019d6c:	mov    DWORD PTR [edi],eax
10019d6e:	lea    eax,[esp+0x7c]
10019d72:	push   eax
10019d73:	lea    ecx,[edi+0x4]
10019d76:	call   0x100011c9
10019d7b:	jmp    0x10019dad
10019d7d:	push   edi
10019d7e:	lea    ecx,[esp+0x28]
10019d82:	call   0x100011a7
10019d87:	mov    edi,DWORD PTR [esp+0x18]
10019d8b:	lea    eax,[esp+0x24]
10019d8f:	mov    BYTE PTR [esp+0xa8],0x5
10019d97:	push   eax
10019d98:	lea    ecx,[edi+0x4]
10019d9b:	mov    DWORD PTR [edi],ebx
10019d9d:	call   0x100011c9
10019da2:	push   ebx
10019da3:	push   esi
10019da4:	lea    ecx,[esp+0x2c]
10019da8:	call   0x100012f0
10019dad:	push   ebx
10019dae:	push   esi
10019daf:	lea    ecx,[esp+0x84]
10019db6:	call   0x100012f0
10019dbb:	mov    eax,edi
10019dbd:	mov    ecx,DWORD PTR [esp+0xa0]
10019dc4:	mov    DWORD PTR fs:0x0,ecx
10019dcb:	pop    ecx
10019dcc:	pop    edi
10019dcd:	pop    esi
10019dce:	pop    ebx
10019dcf:	mov    ecx,DWORD PTR [esp+0x88]
10019dd6:	xor    ecx,esp
10019dd8:	call   0x10043615
10019ddd:	mov    esp,ebp
10019ddf:	pop    ebp
10019de0:	ret    0x8
10019de3:	push   0xf0
10019de8:	mov    eax,0x10062273
10019ded:	call   0x10059e94
10019df2:	mov    eax,DWORD PTR [ebp+0x8]
10019df5:	mov    edi,ecx
10019df7:	push   0x1f4
10019dfc:	push   DWORD PTR [edi+0x18]
10019dff:	mov    esi,edx
10019e01:	mov    DWORD PTR [ebp-0x50],edi
10019e04:	mov    DWORD PTR [ebp-0x4c],esi
10019e07:	mov    DWORD PTR [ebp-0x54],eax
10019e0a:	call   DWORD PTR ds:0x1006707c
10019e10:	test   eax,eax
10019e12:	jne    0x10019edd
10019e18:	and    DWORD PTR [ebp-0x4],eax
10019e1b:	push   edi
10019e1c:	call   0x1001a111
10019e21:	push   esi
10019e22:	lea    ebx,[ebp-0x44]
10019e25:	mov    esi,edi
10019e27:	call   0x1001a2e8
10019e2c:	mov    ebx,DWORD PTR [edi+0x4]
10019e2f:	xor    esi,esi
10019e31:	cmp    DWORD PTR [ebp-0x44],esi
10019e34:	je     0x10019e3b
10019e36:	cmp    DWORD PTR [ebp-0x44],edi
10019e39:	je     0x10019e40
10019e3b:	call   0x10043605
10019e40:	cmp    DWORD PTR [ebp-0x40],ebx
10019e43:	je     0x10019ee5
10019e49:	lea    ebx,[edi+0xc]
10019e4c:	mov    eax,DWORD PTR [ebx+0x4]
10019e4f:	mov    DWORD PTR [ebp-0x58],eax
10019e52:	lea    eax,[ebp-0x60]
10019e55:	mov    DWORD PTR [ebp-0x60],esi
10019e58:	mov    DWORD PTR [ebp-0x5c],ebx
10019e5b:	call   0x10013b64
10019e60:	mov    esi,DWORD PTR [eax]
10019e62:	inc    esi
10019e63:	cmp    DWORD PTR [ebp-0x44],0x0
10019e67:	mov    DWORD PTR [ebp-0x48],esi
10019e6a:	jne    0x10019e71
10019e6c:	call   0x10043605
10019e71:	mov    edi,DWORD PTR [ebp-0x40]
10019e74:	mov    eax,DWORD PTR [ebp-0x44]
10019e77:	cmp    edi,DWORD PTR [eax+0x4]
10019e7a:	jne    0x10019e81
10019e7c:	call   0x10043605
10019e81:	lea    edx,[edi+0x48]
10019e84:	mov    eax,ebx
10019e86:	mov    DWORD PTR [ebp-0x4c],edx
10019e89:	call   0x100137c6
10019e8e:	lea    eax,[ebp-0x48]
10019e91:	push   eax
10019e92:	lea    edi,[ebp-0x60]
10019e95:	call   0x1001370d
10019e9a:	mov    edi,DWORD PTR [ebp-0x40]
10019e9d:	mov    ebx,DWORD PTR [ebp-0x44]
10019ea0:	cmp    edi,DWORD PTR [ebx+0x4]
10019ea3:	jne    0x10019eaa
10019ea5:	call   0x10043605
10019eaa:	mov    eax,DWORD PTR [ebp-0x54]
10019ead:	mov    ecx,DWORD PTR [eax]
10019eaf:	push   0xffffffff
10019eb1:	push   0x0
10019eb3:	add    eax,0x4
10019eb6:	mov    DWORD PTR [edi+0x28],ecx
10019eb9:	push   eax
10019eba:	lea    ecx,[edi+0x2c]
10019ebd:	call   0x10001241
10019ec2:	cmp    edi,DWORD PTR [ebx+0x4]
10019ec5:	jne    0x10019ecc
10019ec7:	call   0x10043605
10019ecc:	mov    eax,DWORD PTR [ebp-0x4c]
10019ecf:	mov    DWORD PTR [eax],esi
10019ed1:	mov    eax,DWORD PTR [ebp-0x50]
10019ed4:	push   DWORD PTR [eax+0x18]
10019ed7:	call   DWORD PTR ds:0x10067090
10019edd:	call   0x10059ef0
10019ee2:	ret    0x4
10019ee5:	push   0x1006dd18
10019eea:	lea    ecx,[ebp-0x7c]
10019eed:	call   0x100011a7
10019ef2:	lea    eax,[ebp-0x7c]
10019ef5:	mov    BYTE PTR [ebp-0x4],0x1
10019ef9:	push   eax
10019efa:	lea    ecx,[ebp-0x38]
10019efd:	mov    DWORD PTR [ebp-0x3c],esi
10019f00:	call   0x100011c9
10019f05:	push   esi
10019f06:	push   0x1
10019f08:	lea    ecx,[ebp-0x7c]
10019f0b:	call   0x100012f0
10019f10:	mov    BYTE PTR [ebp-0x4],0x2
10019f14:	cmp    DWORD PTR [edi+0x14],esi
10019f17:	je     0x10019f35
10019f19:	mov    eax,DWORD PTR [edi+0x10]
10019f1c:	add    edi,0xc
10019f1f:	mov    DWORD PTR [ebp-0x58],eax
10019f22:	lea    eax,[ebp-0x60]
10019f25:	mov    DWORD PTR [ebp-0x60],esi
10019f28:	mov    DWORD PTR [ebp-0x5c],edi
10019f2b:	call   0x10013b64
10019f30:	mov    eax,DWORD PTR [eax]
10019f32:	inc    eax
10019f33:	jmp    0x10019f37
10019f35:	xor    eax,eax
10019f37:	mov    DWORD PTR [ebp-0x48],eax
10019f3a:	mov    DWORD PTR [ebp-0x1c],eax
10019f3d:	mov    eax,DWORD PTR [ebp-0x54]
10019f40:	mov    ecx,DWORD PTR [eax]
10019f42:	push   0xffffffff
10019f44:	push   esi
10019f45:	add    eax,0x4
10019f48:	mov    DWORD PTR [ebp-0x3c],ecx
10019f4b:	push   eax
10019f4c:	lea    ecx,[ebp-0x38]
10019f4f:	call   0x10001241
10019f54:	mov    eax,DWORD PTR [ebp-0x3c]
10019f57:	sub    esp,0x24
10019f5a:	mov    esi,esp
10019f5c:	mov    DWORD PTR [esi],eax
10019f5e:	lea    eax,[ebp-0x38]
10019f61:	mov    DWORD PTR [ebp-0x54],esp
10019f64:	push   eax
10019f65:	lea    ecx,[esi+0x4]
10019f68:	call   0x100011c9
10019f6d:	mov    eax,DWORD PTR [ebp-0x1c]
10019f70:	mov    DWORD PTR [esi+0x20],eax
10019f73:	sub    esp,0x1c
10019f76:	mov    BYTE PTR [ebp-0x4],0x3
10019f7a:	mov    ecx,esp
10019f7c:	mov    DWORD PTR [ebp-0x40],esp
10019f7f:	push   DWORD PTR [ebp-0x4c]
10019f82:	call   0x100011c9
10019f87:	lea    esi,[ebp-0xfc]
10019f8d:	mov    BYTE PTR [ebp-0x4],0x2
10019f91:	call   0x1001a5e8
10019f96:	add    esp,0x40
10019f99:	mov    esi,eax
10019f9b:	push   esi
10019f9c:	lea    ecx,[ebp-0xbc]
10019fa2:	mov    BYTE PTR [ebp-0x4],0x4
10019fa6:	call   0x100011c9
10019fab:	lea    edi,[esi+0x1c]
10019fae:	lea    esi,[ebp-0xa0]
10019fb4:	mov    BYTE PTR [ebp-0x4],0x5
10019fb8:	call   0x1001a0e0
10019fbd:	mov    ebx,DWORD PTR [ebp-0x50]
10019fc0:	lea    eax,[ebp-0xbc]
10019fc6:	push   eax
10019fc7:	lea    edi,[ebp-0x60]
10019fca:	mov    BYTE PTR [ebp-0x4],0x6
10019fce:	call   0x1001a241
10019fd3:	xor    esi,esi
10019fd5:	xor    edi,edi
10019fd7:	push   esi
10019fd8:	inc    edi
10019fd9:	push   edi
10019fda:	lea    ecx,[ebp-0x9c]
10019fe0:	call   0x100012f0
10019fe5:	push   esi
10019fe6:	push   edi
10019fe7:	lea    ecx,[ebp-0xbc]
10019fed:	call   0x100012f0
10019ff2:	push   esi
10019ff3:	push   edi
10019ff4:	lea    ecx,[ebp-0xdc]
10019ffa:	mov    BYTE PTR [ebp-0x4],0x2
10019ffe:	call   0x100012f0
1001a003:	push   esi
1001a004:	push   edi
1001a005:	lea    ecx,[ebp-0xfc]
1001a00b:	call   0x100012f0
1001a010:	lea    eax,[ebp-0x48]
1001a013:	push   eax
1001a014:	add    ebx,0xc
1001a017:	lea    edi,[ebp-0x60]
1001a01a:	call   0x1001370d
1001a01f:	push   esi
1001a020:	push   0x1
1001a022:	lea    ecx,[ebp-0x38]
1001a025:	call   0x100012f0
1001a02a:	jmp    0x10019ed1
1001a02f:	mov    eax,0x10019ed1
1001a034:	ret    
1001a035:	push   0x10
1001a037:	mov    eax,0x100630ae
1001a03c:	call   0x10059e28
1001a041:	mov    esi,DWORD PTR [ebp+0x8]
1001a044:	push   0x1f4
1001a049:	push   DWORD PTR [esi+0x18]
1001a04c:	mov    BYTE PTR [ebp-0x11],0x0
1001a050:	call   DWORD PTR ds:0x1006707c
1001a056:	test   eax,eax
1001a058:	je     0x1001a05e
1001a05a:	xor    al,al
1001a05c:	jmp    0x1001a0d8
1001a05e:	push   DWORD PTR [ebp+0xc]
1001a061:	and    DWORD PTR [ebp-0x4],0x0
1001a065:	lea    ebx,[ebp-0x1c]
1001a068:	call   0x1001a2e8
1001a06d:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a071:	mov    edi,DWORD PTR [esi+0x4]
1001a074:	je     0x1001a07b
1001a076:	cmp    DWORD PTR [ebp-0x1c],esi
1001a079:	je     0x1001a080
1001a07b:	call   0x10043605
1001a080:	mov    ebx,DWORD PTR [ebp-0x18]
1001a083:	cmp    ebx,edi
1001a085:	je     0x1001a0cc
1001a087:	mov    edi,DWORD PTR [ebp-0x1c]
1001a08a:	test   edi,edi
1001a08c:	jne    0x1001a093
1001a08e:	call   0x10043605
1001a093:	cmp    ebx,DWORD PTR [edi+0x4]
1001a096:	jne    0x1001a09d
1001a098:	call   0x10043605
1001a09d:	mov    ecx,DWORD PTR [ebx+0x28]
1001a0a0:	mov    eax,DWORD PTR [ebp+0x10]
1001a0a3:	push   0xffffffff
1001a0a5:	push   0x0
1001a0a7:	add    ebx,0x2c
1001a0aa:	mov    DWORD PTR [eax],ecx
1001a0ac:	push   ebx
1001a0ad:	lea    ecx,[eax+0x4]
1001a0b0:	call   0x10001241
1001a0b5:	mov    BYTE PTR [ebp-0x11],0x1
1001a0b9:	jmp    0x1001a0cc
1001a0bb:	push   0x4
1001a0bd:	call   0x10038b80
1001a0c2:	pop    ecx
1001a0c3:	mov    eax,0x1001a0c9
1001a0c8:	ret    
1001a0c9:	mov    esi,DWORD PTR [ebp+0x8]
1001a0cc:	push   DWORD PTR [esi+0x18]
1001a0cf:	call   DWORD PTR ds:0x10067090
1001a0d5:	mov    al,BYTE PTR [ebp-0x11]
1001a0d8:	call   0x10059ecd
1001a0dd:	ret    0xc
1001a0e0:	mov    eax,DWORD PTR [edi]
1001a0e2:	mov    DWORD PTR [esi],eax
1001a0e4:	lea    eax,[edi+0x4]
1001a0e7:	push   eax
1001a0e8:	lea    ecx,[esi+0x4]
1001a0eb:	call   0x100011c9
1001a0f0:	mov    eax,DWORD PTR [edi+0x20]
1001a0f3:	mov    DWORD PTR [esi+0x20],eax
1001a0f6:	mov    eax,esi
1001a0f8:	ret    
1001a0f9:	push   0x0
1001a0fb:	push   0x1
1001a0fd:	lea    ecx,[esi+0x20]
1001a100:	call   0x100012f0
1001a105:	push   0x0
1001a107:	push   0x1
1001a109:	mov    ecx,esi
1001a10b:	call   0x100012f0
1001a110:	ret    
1001a111:	push   0x38
1001a113:	mov    eax,0x1006221f
1001a118:	call   0x10059df5
1001a11d:	mov    edi,DWORD PTR [ebp+0x8]
1001a120:	mov    ecx,DWORD PTR [edi+0x1c]
1001a123:	mov    edx,DWORD PTR [edi+0x20]
1001a126:	mov    eax,DWORD PTR [edi+0x8]
1001a129:	add    edx,ecx
1001a12b:	cmp    eax,edx
1001a12d:	jbe    0x1001a239
1001a133:	and    DWORD PTR [ebp-0x10],0x0
1001a137:	test   ecx,ecx
1001a139:	lea    ebx,[edi+0xc]
1001a13c:	mov    eax,DWORD PTR [ebx+0x4]
1001a13f:	mov    eax,DWORD PTR [eax]
1001a141:	mov    DWORD PTR [ebp-0x14],ebx
1001a144:	mov    DWORD PTR [ebp-0x1c],ebx
1001a147:	mov    DWORD PTR [ebp-0x18],eax
1001a14a:	je     0x1001a15f
1001a14c:	lea    esi,[ebp-0x1c]
1001a14f:	call   0x10001e71
1001a154:	inc    DWORD PTR [ebp-0x10]
1001a157:	mov    eax,DWORD PTR [ebp-0x10]
1001a15a:	cmp    eax,DWORD PTR [edi+0x1c]
1001a15d:	jne    0x1001a14c
1001a15f:	lea    esi,[ebp-0x1c]
1001a162:	call   0x1001426e
1001a167:	mov    eax,DWORD PTR [eax]
1001a169:	mov    DWORD PTR [ebp-0x10],eax
1001a16c:	call   0x100144bc
1001a171:	mov    DWORD PTR [ebp-0x34],eax
1001a174:	mov    BYTE PTR [eax+0x11],0x1
1001a178:	mov    eax,DWORD PTR [ebp-0x34]
1001a17b:	mov    DWORD PTR [eax+0x4],eax
1001a17e:	mov    eax,DWORD PTR [ebp-0x34]
1001a181:	mov    DWORD PTR [eax],eax
1001a183:	mov    eax,DWORD PTR [ebp-0x34]
1001a186:	mov    DWORD PTR [eax+0x8],eax
1001a189:	and    DWORD PTR [ebp-0x30],0x0
1001a18d:	and    DWORD PTR [ebp-0x4],0x0
1001a191:	mov    eax,DWORD PTR [edi+0x4]
1001a194:	mov    esi,DWORD PTR [eax]
1001a196:	mov    DWORD PTR [ebp-0x1c],edi
1001a199:	mov    DWORD PTR [ebp-0x18],esi
1001a19c:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a1a0:	mov    eax,DWORD PTR [edi+0x4]
1001a1a3:	mov    DWORD PTR [ebp-0x20],eax
1001a1a6:	je     0x1001a1ad
1001a1a8:	cmp    DWORD PTR [ebp-0x1c],edi
1001a1ab:	je     0x1001a1b2
1001a1ad:	call   0x10043605
1001a1b2:	cmp    esi,DWORD PTR [ebp-0x20]
1001a1b5:	je     0x1001a215
1001a1b7:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a1bb:	jne    0x1001a1c2
1001a1bd:	call   0x10043605
1001a1c2:	mov    eax,DWORD PTR [ebp-0x1c]
1001a1c5:	cmp    esi,DWORD PTR [eax+0x4]
1001a1c8:	jne    0x1001a1cf
1001a1ca:	call   0x10043605
1001a1cf:	lea    ecx,[esi+0x48]
1001a1d2:	mov    eax,DWORD PTR [ecx]
1001a1d4:	cmp    eax,DWORD PTR [ebp-0x10]
1001a1d7:	jae    0x1001a1f1
1001a1d9:	push   esi
1001a1da:	push   DWORD PTR [ebp-0x1c]
1001a1dd:	lea    eax,[ebp-0x2c]
1001a1e0:	push   eax
1001a1e1:	push   edi
1001a1e2:	call   0x100019f8
1001a1e7:	mov    ecx,DWORD PTR [eax]
1001a1e9:	mov    esi,DWORD PTR [eax+0x4]
1001a1ec:	mov    DWORD PTR [ebp-0x1c],ecx
1001a1ef:	jmp    0x1001a199
1001a1f1:	sub    eax,DWORD PTR [ebp-0x10]
1001a1f4:	push   ecx
1001a1f5:	lea    edi,[ebp-0x44]
1001a1f8:	lea    ebx,[ebp-0x38]
1001a1fb:	mov    DWORD PTR [ecx],eax
1001a1fd:	call   0x1001370d
1001a202:	lea    esi,[ebp-0x1c]
1001a205:	call   0x10001e24
1001a20a:	mov    esi,DWORD PTR [ebp-0x18]
1001a20d:	mov    ebx,DWORD PTR [ebp-0x14]
1001a210:	mov    edi,DWORD PTR [ebp+0x8]
1001a213:	jmp    0x1001a19c
1001a215:	mov    eax,DWORD PTR [ebx+0x4]
1001a218:	mov    ecx,DWORD PTR [ebp-0x34]
1001a21b:	mov    DWORD PTR [ebx+0x4],ecx
1001a21e:	mov    ecx,DWORD PTR [ebp-0x30]
1001a221:	mov    DWORD PTR [ebp-0x34],eax
1001a224:	mov    eax,DWORD PTR [ebx+0x8]
1001a227:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a22b:	mov    DWORD PTR [ebp-0x30],eax
1001a22e:	lea    eax,[ebp-0x38]
1001a231:	mov    DWORD PTR [ebx+0x8],ecx
1001a234:	call   0x10001496
1001a239:	call   0x10059ecd
1001a23e:	ret    0x4
1001a241:	push   ebp
1001a242:	mov    ebp,esp
1001a244:	sub    esp,0x18
1001a247:	mov    eax,DWORD PTR [ebx+0x4]
1001a24a:	push   esi
1001a24b:	mov    esi,DWORD PTR [eax+0x4]
1001a24e:	mov    DWORD PTR [ebp-0x8],eax
1001a251:	mov    al,0x1
1001a253:	mov    BYTE PTR [ebp-0xc],al
1001a256:	jmp    0x1001a274
1001a258:	mov    ecx,DWORD PTR [ebp+0x8]
1001a25b:	lea    eax,[esi+0xc]
1001a25e:	mov    DWORD PTR [ebp-0x8],esi
1001a261:	call   0x10007983
1001a266:	test   al,al
1001a268:	mov    BYTE PTR [ebp-0xc],al
1001a26b:	je     0x1001a271
1001a26d:	mov    esi,DWORD PTR [esi]
1001a26f:	jmp    0x1001a274
1001a271:	mov    esi,DWORD PTR [esi+0x8]
1001a274:	cmp    BYTE PTR [esi+0x4d],0x0
1001a278:	je     0x1001a258
1001a27a:	test   al,al
1001a27c:	mov    ecx,DWORD PTR [ebp-0x8]
1001a27f:	mov    esi,ecx
1001a281:	mov    DWORD PTR [ebp-0x10],esi
1001a284:	mov    DWORD PTR [ebp-0x14],ebx
1001a287:	je     0x1001a2bb
1001a289:	mov    eax,DWORD PTR [ebx+0x4]
1001a28c:	cmp    ecx,DWORD PTR [eax]
1001a28e:	jne    0x1001a2b0
1001a290:	push   DWORD PTR [ebp+0x8]
1001a293:	push   0x1
1001a295:	lea    eax,[ebp-0x14]
1001a298:	push   eax
1001a299:	mov    esi,ebx
1001a29b:	call   0x1001a340
1001a2a0:	mov    ecx,DWORD PTR [eax]
1001a2a2:	mov    eax,DWORD PTR [eax+0x4]
1001a2a5:	mov    DWORD PTR [edi],ecx
1001a2a7:	mov    DWORD PTR [edi+0x4],eax
1001a2aa:	mov    BYTE PTR [edi+0x8],0x1
1001a2ae:	jmp    0x1001a2e1
1001a2b0:	lea    esi,[ebp-0x14]
1001a2b3:	call   0x1001a48b
1001a2b8:	mov    esi,DWORD PTR [ebp-0x10]
1001a2bb:	mov    eax,DWORD PTR [ebp+0x8]
1001a2be:	lea    ecx,[esi+0xc]
1001a2c1:	call   0x10007983
1001a2c6:	test   al,al
1001a2c8:	je     0x1001a2d5
1001a2ca:	push   DWORD PTR [ebp+0x8]
1001a2cd:	mov    ecx,DWORD PTR [ebp-0x8]
1001a2d0:	push   DWORD PTR [ebp-0xc]
1001a2d3:	jmp    0x1001a295
1001a2d5:	mov    eax,DWORD PTR [ebp-0x14]
1001a2d8:	mov    DWORD PTR [edi],eax
1001a2da:	mov    DWORD PTR [edi+0x4],esi
1001a2dd:	mov    BYTE PTR [edi+0x8],0x0
1001a2e1:	mov    eax,edi
1001a2e3:	pop    esi
1001a2e4:	leave  
1001a2e5:	ret    0x4
1001a2e8:	push   ebp
1001a2e9:	mov    ebp,esp
1001a2eb:	sub    esp,0x18
1001a2ee:	push   edi
1001a2ef:	push   DWORD PTR [ebp+0x8]
1001a2f2:	mov    eax,esi
1001a2f4:	call   0x1001a4ec
1001a2f9:	test   esi,esi
1001a2fb:	mov    edi,eax
1001a2fd:	mov    DWORD PTR [ebp-0x8],edi
1001a300:	jne    0x1001a307
1001a302:	call   0x10043605
1001a307:	cmp    edi,DWORD PTR [esi+0x4]
1001a30a:	mov    DWORD PTR [ebp-0xc],esi
1001a30d:	je     0x1001a323
1001a30f:	mov    ecx,DWORD PTR [ebp+0x8]
1001a312:	lea    eax,[edi+0xc]
1001a315:	call   0x10007983
1001a31a:	test   al,al
1001a31c:	jne    0x1001a323
1001a31e:	lea    eax,[ebp-0xc]
1001a321:	jmp    0x1001a32f
1001a323:	mov    eax,DWORD PTR [esi+0x4]
1001a326:	mov    DWORD PTR [ebp-0x10],eax
1001a329:	mov    DWORD PTR [ebp-0x14],esi
1001a32c:	lea    eax,[ebp-0x14]
1001a32f:	mov    ecx,DWORD PTR [eax]
1001a331:	mov    eax,DWORD PTR [eax+0x4]
1001a334:	mov    DWORD PTR [ebx+0x4],eax
1001a337:	mov    DWORD PTR [ebx],ecx
1001a339:	mov    eax,ebx
1001a33b:	pop    edi
1001a33c:	leave  
1001a33d:	ret    0x4
1001a340:	push   0x48
1001a342:	mov    eax,0x100607fe
1001a347:	call   0x10059df5
1001a34c:	mov    edi,ecx
1001a34e:	cmp    DWORD PTR [esi+0x8],0x3fffffe
1001a355:	jb     0x1001a389
1001a357:	push   0x1006e0f8
1001a35c:	lea    ecx,[ebp-0x2c]
1001a35f:	call   0x100011a7
1001a364:	and    DWORD PTR [ebp-0x4],0x0
1001a368:	lea    eax,[ebp-0x2c]
1001a36b:	push   eax
1001a36c:	lea    ecx,[ebp-0x54]
1001a36f:	call   0x10001077
1001a374:	push   0x100764d0
1001a379:	lea    eax,[ebp-0x54]
1001a37c:	push   eax
1001a37d:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1001a384:	call   0x10047942
1001a389:	push   DWORD PTR [ebp+0x10]
1001a38c:	mov    eax,DWORD PTR [esi+0x4]
1001a38f:	push   eax
1001a390:	push   edi
1001a391:	push   eax
1001a392:	call   0x1001a51e
1001a397:	inc    DWORD PTR [esi+0x8]
1001a39a:	mov    ebx,eax
1001a39c:	mov    eax,DWORD PTR [esi+0x4]
1001a39f:	cmp    edi,eax
1001a3a1:	jne    0x1001a3b0
1001a3a3:	mov    DWORD PTR [eax+0x4],ebx
1001a3a6:	mov    eax,DWORD PTR [esi+0x4]
1001a3a9:	mov    DWORD PTR [eax],ebx
1001a3ab:	mov    eax,DWORD PTR [esi+0x4]
1001a3ae:	jmp    0x1001a3ce
1001a3b0:	cmp    BYTE PTR [ebp+0xc],0x0
1001a3b4:	je     0x1001a3c3
1001a3b6:	mov    DWORD PTR [edi],ebx
1001a3b8:	mov    eax,DWORD PTR [esi+0x4]
1001a3bb:	cmp    edi,DWORD PTR [eax]
1001a3bd:	jne    0x1001a3d1
1001a3bf:	mov    DWORD PTR [eax],ebx
1001a3c1:	jmp    0x1001a3d1
1001a3c3:	mov    DWORD PTR [edi+0x8],ebx
1001a3c6:	mov    eax,DWORD PTR [esi+0x4]
1001a3c9:	cmp    edi,DWORD PTR [eax+0x8]
1001a3cc:	jne    0x1001a3d1
1001a3ce:	mov    DWORD PTR [eax+0x8],ebx
1001a3d1:	mov    edi,ebx
1001a3d3:	lea    eax,[ebx+0x4]
1001a3d6:	jmp    0x1001a465
1001a3db:	mov    ecx,DWORD PTR [eax]
1001a3dd:	mov    edx,DWORD PTR [ecx+0x4]
1001a3e0:	cmp    ecx,DWORD PTR [edx]
1001a3e2:	jne    0x1001a419
1001a3e4:	mov    edx,DWORD PTR [edx+0x8]
1001a3e7:	cmp    BYTE PTR [edx+0x4c],0x0
1001a3eb:	je     0x1001a421
1001a3ed:	cmp    edi,DWORD PTR [ecx+0x8]
1001a3f0:	jne    0x1001a3fa
1001a3f2:	push   esi
1001a3f3:	mov    edi,ecx
1001a3f5:	call   0x10001da2
1001a3fa:	mov    eax,DWORD PTR [edi+0x4]
1001a3fd:	mov    BYTE PTR [eax+0x4c],0x1
1001a401:	mov    eax,DWORD PTR [edi+0x4]
1001a404:	mov    eax,DWORD PTR [eax+0x4]
1001a407:	mov    BYTE PTR [eax+0x4c],0x0
1001a40b:	mov    eax,DWORD PTR [edi+0x4]
1001a40e:	mov    ecx,DWORD PTR [eax+0x4]
1001a411:	push   esi
1001a412:	call   0x10001de2
1001a417:	jmp    0x1001a462
1001a419:	mov    edx,DWORD PTR [edx]
1001a41b:	cmp    BYTE PTR [edx+0x4c],0x0
1001a41f:	jne    0x1001a439
1001a421:	mov    BYTE PTR [ecx+0x4c],0x1
1001a425:	mov    BYTE PTR [edx+0x4c],0x1
1001a429:	mov    ecx,DWORD PTR [eax]
1001a42b:	mov    ecx,DWORD PTR [ecx+0x4]
1001a42e:	mov    BYTE PTR [ecx+0x4c],0x0
1001a432:	mov    eax,DWORD PTR [eax]
1001a434:	mov    edi,DWORD PTR [eax+0x4]
1001a437:	jmp    0x1001a462
1001a439:	cmp    edi,DWORD PTR [ecx]
1001a43b:	jne    0x1001a445
1001a43d:	push   esi
1001a43e:	mov    edi,ecx
1001a440:	call   0x10001de2
1001a445:	mov    eax,DWORD PTR [edi+0x4]
1001a448:	mov    BYTE PTR [eax+0x4c],0x1
1001a44c:	mov    eax,DWORD PTR [edi+0x4]
1001a44f:	mov    eax,DWORD PTR [eax+0x4]
1001a452:	mov    BYTE PTR [eax+0x4c],0x0
1001a456:	mov    eax,DWORD PTR [edi+0x4]
1001a459:	mov    ecx,DWORD PTR [eax+0x4]
1001a45c:	push   esi
1001a45d:	call   0x10001da2
1001a462:	lea    eax,[edi+0x4]
1001a465:	mov    ecx,DWORD PTR [eax]
1001a467:	cmp    BYTE PTR [ecx+0x4c],0x0
1001a46b:	je     0x1001a3db
1001a471:	mov    eax,DWORD PTR [esi+0x4]
1001a474:	mov    eax,DWORD PTR [eax+0x4]
1001a477:	mov    BYTE PTR [eax+0x4c],0x1
1001a47b:	mov    eax,DWORD PTR [ebp+0x8]
1001a47e:	mov    DWORD PTR [eax+0x4],ebx
1001a481:	mov    DWORD PTR [eax],esi
1001a483:	call   0x10059ecd
1001a488:	ret    0xc
1001a48b:	push   ebx
1001a48c:	xor    ebx,ebx
1001a48e:	cmp    DWORD PTR [esi],ebx
1001a490:	jne    0x1001a497
1001a492:	call   0x10043605
1001a497:	mov    eax,DWORD PTR [esi+0x4]
1001a49a:	cmp    BYTE PTR [eax+0x4d],bl
1001a49d:	je     0x1001a4ac
1001a49f:	mov    eax,DWORD PTR [eax+0x8]
1001a4a2:	mov    DWORD PTR [esi+0x4],eax
1001a4a5:	cmp    BYTE PTR [eax+0x4d],bl
1001a4a8:	je     0x1001a4e8
1001a4aa:	jmp    0x1001a4de
1001a4ac:	mov    ecx,DWORD PTR [eax]
1001a4ae:	cmp    BYTE PTR [ecx+0x4d],bl
1001a4b1:	jne    0x1001a4ce
1001a4b3:	jmp    0x1001a4b7
1001a4b5:	mov    ecx,eax
1001a4b7:	mov    eax,DWORD PTR [ecx+0x8]
1001a4ba:	cmp    BYTE PTR [eax+0x4d],bl
1001a4bd:	je     0x1001a4b5
1001a4bf:	mov    DWORD PTR [esi+0x4],ecx
1001a4c2:	jmp    0x1001a4e8
1001a4c4:	mov    ecx,DWORD PTR [esi+0x4]
1001a4c7:	cmp    ecx,DWORD PTR [eax]
1001a4c9:	jne    0x1001a4d6
1001a4cb:	mov    DWORD PTR [esi+0x4],eax
1001a4ce:	mov    eax,DWORD PTR [eax+0x4]
1001a4d1:	cmp    BYTE PTR [eax+0x4d],bl
1001a4d4:	je     0x1001a4c4
1001a4d6:	mov    ecx,DWORD PTR [esi+0x4]
1001a4d9:	cmp    BYTE PTR [ecx+0x4d],bl
1001a4dc:	je     0x1001a4e5
1001a4de:	call   0x10043605
1001a4e3:	jmp    0x1001a4e8
1001a4e5:	mov    DWORD PTR [esi+0x4],eax
1001a4e8:	mov    eax,esi
1001a4ea:	pop    ebx
1001a4eb:	ret    
1001a4ec:	mov    eax,DWORD PTR [eax+0x4]
1001a4ef:	push   esi
1001a4f0:	mov    esi,DWORD PTR [eax+0x4]
1001a4f3:	push   edi
1001a4f4:	mov    edi,eax
1001a4f6:	jmp    0x1001a511
1001a4f8:	mov    eax,DWORD PTR [esp+0xc]
1001a4fc:	lea    ecx,[esi+0xc]
1001a4ff:	call   0x10007983
1001a504:	test   al,al
1001a506:	je     0x1001a50d
1001a508:	mov    esi,DWORD PTR [esi+0x8]
1001a50b:	jmp    0x1001a511
1001a50d:	mov    edi,esi
1001a50f:	mov    esi,DWORD PTR [esi]
1001a511:	cmp    BYTE PTR [esi+0x4d],0x0
1001a515:	je     0x1001a4f8
1001a517:	mov    eax,edi
1001a519:	pop    edi
1001a51a:	pop    esi
1001a51b:	ret    0x4
1001a51e:	push   0x8
1001a520:	mov    eax,0x10061260
1001a525:	call   0x10059e28
1001a52a:	push   0x50
1001a52c:	call   0x10043196
1001a531:	mov    ebx,eax
1001a533:	pop    ecx
1001a534:	mov    DWORD PTR [ebp-0x14],ebx
1001a537:	test   ebx,ebx
1001a539:	mov    DWORD PTR [ebp-0x4],0x1
1001a540:	je     0x1001a553
1001a542:	push   DWORD PTR [ebp+0x10]
1001a545:	mov    ecx,DWORD PTR [ebp+0x14]
1001a548:	push   DWORD PTR [ebp+0xc]
1001a54b:	push   DWORD PTR [ebp+0x8]
1001a54e:	call   0x1001a59a
1001a553:	mov    eax,ebx
1001a555:	call   0x10059ecd
1001a55a:	ret    0x10
1001a55d:	push   DWORD PTR [ebp-0x14]
1001a560:	call   0x10042fe2
1001a565:	pop    ecx
1001a566:	push   0x0
1001a568:	push   0x0
1001a56a:	call   0x10047942
1001a56f:	int3   
1001a570:	push   0x50
1001a572:	call   0x10043196
1001a577:	xor    edx,edx
1001a579:	cmp    eax,edx
1001a57b:	pop    ecx
1001a57c:	je     0x1001a580
1001a57e:	mov    DWORD PTR [eax],edx
1001a580:	lea    ecx,[eax+0x4]
1001a583:	cmp    ecx,edx
1001a585:	je     0x1001a589
1001a587:	mov    DWORD PTR [ecx],edx
1001a589:	lea    ecx,[eax+0x8]
1001a58c:	cmp    ecx,edx
1001a58e:	je     0x1001a592
1001a590:	mov    DWORD PTR [ecx],edx
1001a592:	mov    BYTE PTR [eax+0x4c],0x1
1001a596:	mov    BYTE PTR [eax+0x4d],dl
1001a599:	ret    
1001a59a:	push   0x0
1001a59c:	mov    eax,0x100617bb
1001a5a1:	call   0x10059df5
1001a5a6:	mov    edi,ecx
1001a5a8:	mov    eax,DWORD PTR [ebp+0x8]
1001a5ab:	mov    DWORD PTR [ebx],eax
1001a5ad:	mov    eax,DWORD PTR [ebp+0xc]
1001a5b0:	mov    DWORD PTR [ebx+0x4],eax
1001a5b3:	mov    eax,DWORD PTR [ebp+0x10]
1001a5b6:	lea    esi,[ebx+0xc]
1001a5b9:	push   edi
1001a5ba:	mov    ecx,esi
1001a5bc:	mov    DWORD PTR [ebx+0x8],eax
1001a5bf:	mov    DWORD PTR [ebp+0x8],esi
1001a5c2:	call   0x100011c9
1001a5c7:	and    DWORD PTR [ebp-0x4],0x0
1001a5cb:	add    edi,0x1c
1001a5ce:	add    esi,0x1c
1001a5d1:	call   0x1001a0e0
1001a5d6:	mov    BYTE PTR [ebx+0x4c],0x0
1001a5da:	mov    BYTE PTR [ebx+0x4d],0x0
1001a5de:	mov    eax,ebx
1001a5e0:	call   0x10059ecd
1001a5e5:	ret    0xc
1001a5e8:	push   0x8
1001a5ea:	mov    eax,0x10061240
1001a5ef:	call   0x10059df5
1001a5f4:	and    DWORD PTR [ebp-0x14],0x0
1001a5f8:	mov    DWORD PTR [ebp-0x10],esi
1001a5fb:	lea    eax,[ebp+0x8]
1001a5fe:	push   eax
1001a5ff:	mov    ecx,esi
1001a601:	mov    DWORD PTR [ebp-0x4],0x1
1001a608:	call   0x100011c9
1001a60d:	mov    BYTE PTR [ebp-0x4],0x2
1001a611:	mov    eax,DWORD PTR [ebp+0x24]
1001a614:	mov    DWORD PTR [esi+0x1c],eax
1001a617:	lea    eax,[ebp+0x28]
1001a61a:	push   eax
1001a61b:	lea    ecx,[esi+0x20]
1001a61e:	call   0x100011c9
1001a623:	mov    eax,DWORD PTR [ebp+0x44]
1001a626:	push   0x0
1001a628:	push   0x1
1001a62a:	lea    ecx,[ebp+0x8]
1001a62d:	mov    DWORD PTR [esi+0x3c],eax
1001a630:	call   0x100012f0
1001a635:	push   0x0
1001a637:	push   0x1
1001a639:	lea    ecx,[ebp+0x28]
1001a63c:	call   0x100012f0
1001a641:	mov    eax,esi
1001a643:	call   0x10059ecd
1001a648:	ret    
1001a649:	push   0xd4
1001a64e:	mov    eax,0x100621f9
1001a653:	call   0x10059e28
1001a658:	mov    ebx,DWORD PTR [ebp+0x8]
1001a65b:	push   0x1f4
1001a660:	push   DWORD PTR [ebx+0x18]
1001a663:	call   DWORD PTR ds:0x1006707c
1001a669:	test   eax,eax
1001a66b:	jne    0x1001a92a
1001a671:	and    DWORD PTR [ebp-0x4],eax
1001a674:	cmp    DWORD PTR [ebx+0x8],eax
1001a677:	jbe    0x1001a6bc
1001a679:	push   0x1
1001a67b:	lea    eax,[ebp-0x2c]
1001a67e:	push   eax
1001a67f:	call   0x10034910
1001a684:	lea    eax,[ebp-0x2c]
1001a687:	push   eax
1001a688:	mov    BYTE PTR [ebp-0x4],0x1
1001a68c:	call   0x10035dc0
1001a691:	mov    esi,eax
1001a693:	test   esi,esi
1001a695:	ja     0x1001a69a
1001a697:	xor    esi,esi
1001a699:	inc    esi
1001a69a:	cmp    DWORD PTR [ebx+0x8],esi
1001a69d:	jb     0x1001a6b3
1001a69f:	mov    eax,DWORD PTR [ebx+0x4]
1001a6a2:	push   DWORD PTR [eax]
1001a6a4:	lea    eax,[ebp-0x38]
1001a6a7:	push   ebx
1001a6a8:	push   eax
1001a6a9:	call   0x1001b1d6
1001a6ae:	mov    ebx,DWORD PTR [ebp+0x8]
1001a6b1:	jmp    0x1001a69a
1001a6b3:	push   DWORD PTR [ebp-0x2c]
1001a6b6:	call   DWORD PTR ds:0x10067078
1001a6bc:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a6c0:	push   DWORD PTR [ebp+0xc]
1001a6c3:	lea    ecx,[ebp-0x9c]
1001a6c9:	call   0x100011c9
1001a6ce:	push   DWORD PTR [ebp+0x10]
1001a6d1:	lea    ecx,[ebp-0x80]
1001a6d4:	mov    DWORD PTR [ebp-0x4],0x3
1001a6db:	call   0x100011c9
1001a6e0:	push   DWORD PTR [ebp+0x14]
1001a6e3:	lea    ecx,[ebp-0x64]
1001a6e6:	mov    BYTE PTR [ebp-0x4],0x4
1001a6ea:	call   0x100011c9
1001a6ef:	mov    eax,DWORD PTR [ebp+0x18]
1001a6f2:	mov    DWORD PTR [ebp-0x48],eax
1001a6f5:	mov    eax,DWORD PTR [ebp+0x1c]
1001a6f8:	mov    DWORD PTR [ebp-0x44],eax
1001a6fb:	mov    eax,DWORD PTR [ebp+0x20]
1001a6fe:	mov    DWORD PTR [ebp-0x40],eax
1001a701:	mov    eax,DWORD PTR [ebp+0x24]
1001a704:	mov    DWORD PTR [ebp-0x3c],eax
1001a707:	mov    DWORD PTR [ebp-0x4],0x5
1001a70e:	push   DWORD PTR [ebx+0x4]
1001a711:	lea    eax,[ebp-0x9c]
1001a717:	push   ebx
1001a718:	push   eax
1001a719:	mov    edi,ebx
1001a71b:	call   0x1001b2d8
1001a720:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a724:	lea    esi,[ebp-0x9c]
1001a72a:	call   0x1001a932
1001a72f:	inc    DWORD PTR [ebx+0x1c]
1001a732:	call   0x1001b348
1001a737:	xor    esi,esi
1001a739:	mov    DWORD PTR [ebp-0x24],eax
1001a73c:	mov    DWORD PTR [ebp-0x20],esi
1001a73f:	mov    DWORD PTR [ebp-0x4],0x6
1001a746:	call   0x10026e6c
1001a74b:	mov    DWORD PTR [ebp-0x18],eax
1001a74e:	mov    DWORD PTR [ebp-0x14],esi
1001a751:	mov    BYTE PTR [ebp-0x4],0x7
1001a755:	cmp    DWORD PTR [ebx+0x14],esi
1001a758:	je     0x1001a83d
1001a75e:	mov    eax,DWORD PTR [ebx+0x10]
1001a761:	mov    esi,DWORD PTR [eax]
1001a763:	cmp    esi,eax
1001a765:	jne    0x1001a76c
1001a767:	call   0x10043605
1001a76c:	mov    eax,DWORD PTR [esi+0x8]
1001a76f:	cmp    eax,DWORD PTR [ebx+0x1c]
1001a772:	jg     0x1001a7e5
1001a774:	mov    eax,DWORD PTR [ebx+0x10]
1001a777:	mov    edi,DWORD PTR [eax]
1001a779:	cmp    edi,eax
1001a77b:	jne    0x1001a782
1001a77d:	call   0x10043605
1001a782:	mov    ecx,DWORD PTR [ebp-0x18]
1001a785:	lea    eax,[edi+0xc]
1001a788:	push   eax
1001a789:	lea    edi,[ecx+0x4]
1001a78c:	push   DWORD PTR [edi]
1001a78e:	push   ecx
1001a78f:	call   0x10026f1d
1001a794:	mov    ecx,0x3fffffff
1001a799:	sub    ecx,DWORD PTR [ebp-0x14]
1001a79c:	cmp    ecx,0x1
1001a79f:	jb     0x1001a8b1
1001a7a5:	inc    DWORD PTR [ebp-0x14]
1001a7a8:	mov    DWORD PTR [edi],eax
1001a7aa:	mov    ecx,DWORD PTR [eax+0x4]
1001a7ad:	mov    DWORD PTR [ecx],eax
1001a7af:	mov    eax,DWORD PTR [ebx+0x10]
1001a7b2:	mov    edi,DWORD PTR [eax]
1001a7b4:	cmp    edi,eax
1001a7b6:	jne    0x1001a7bd
1001a7b8:	call   0x10043605
1001a7bd:	cmp    edi,DWORD PTR [ebx+0x10]
1001a7c0:	je     0x1001a7db
1001a7c2:	mov    eax,DWORD PTR [edi+0x4]
1001a7c5:	mov    ecx,DWORD PTR [edi]
1001a7c7:	mov    DWORD PTR [eax],ecx
1001a7c9:	mov    eax,DWORD PTR [edi]
1001a7cb:	mov    ecx,DWORD PTR [edi+0x4]
1001a7ce:	push   edi
1001a7cf:	mov    DWORD PTR [eax+0x4],ecx
1001a7d2:	call   0x10042fe2
1001a7d7:	dec    DWORD PTR [ebx+0x14]
1001a7da:	pop    ecx
1001a7db:	cmp    DWORD PTR [ebx+0x14],0x0
1001a7df:	jne    0x1001a75e
1001a7e5:	cmp    DWORD PTR [ebp-0x14],0x0
1001a7e9:	je     0x1001a83d
1001a7eb:	lea    eax,[ebp-0x28]
1001a7ee:	cmp    eax,ebx
1001a7f0:	je     0x1001a819
1001a7f2:	mov    esi,DWORD PTR [ebx+0x4]
1001a7f5:	mov    eax,DWORD PTR [esi]
1001a7f7:	lea    edi,[ebp-0x28]
1001a7fa:	mov    DWORD PTR [ebp-0x2c],eax
1001a7fd:	call   0x1001b378
1001a802:	mov    eax,DWORD PTR [ebp-0x24]
1001a805:	mov    eax,DWORD PTR [eax]
1001a807:	push   esi
1001a808:	push   ebx
1001a809:	push   DWORD PTR [ebp-0x2c]
1001a80c:	mov    ecx,edi
1001a80e:	push   ebx
1001a80f:	push   eax
1001a810:	push   ecx
1001a811:	mov    eax,edi
1001a813:	push   eax
1001a814:	call   0x1001b4b5
1001a819:	cmp    DWORD PTR [ebp-0x20],0x9
1001a81d:	jbe    0x1001a83d
1001a81f:	lea    esi,[ebp-0x28]
1001a822:	mov    eax,DWORD PTR [ebp-0x24]
1001a825:	push   DWORD PTR [eax]
1001a827:	lea    eax,[ebp-0x38]
1001a82a:	push   esi
1001a82b:	push   eax
1001a82c:	lea    ebx,[ebp-0x28]
1001a82f:	call   0x1001b1d6
1001a834:	cmp    DWORD PTR [ebp-0x20],0x9
1001a838:	ja     0x1001a822
1001a83a:	mov    ebx,DWORD PTR [ebp+0x8]
1001a83d:	push   DWORD PTR [ebx+0x18]
1001a840:	call   DWORD PTR ds:0x10067090
1001a846:	mov    eax,DWORD PTR [ebp-0x18]
1001a849:	mov    esi,DWORD PTR [eax]
1001a84b:	cmp    esi,eax
1001a84d:	je     0x1001a8f2
1001a853:	sub    esp,0xc
1001a856:	mov    eax,esp
1001a858:	mov    DWORD PTR [ebp+0x8],esp
1001a85b:	push   eax
1001a85c:	lea    ecx,[ebp-0x28]
1001a85f:	call   0x1001b163
1001a864:	cmp    esi,DWORD PTR [ebp-0x18]
1001a867:	jne    0x1001a86e
1001a869:	call   0x10043605
1001a86e:	call   DWORD PTR [esi+0x8]
1001a871:	mov    eax,DWORD PTR [ebp-0x18]
1001a874:	add    esp,0xc
1001a877:	cmp    esi,eax
1001a879:	jne    0x1001a883
1001a87b:	call   0x10043605
1001a880:	mov    eax,DWORD PTR [ebp-0x18]
1001a883:	mov    esi,DWORD PTR [esi]
1001a885:	jmp    0x1001a84b
1001a887:	mov    ebx,DWORD PTR [ebp+0x8]
1001a88a:	cmp    DWORD PTR [ebx+0x8],0x0
1001a88e:	jbe    0x1001a89f
1001a890:	mov    eax,DWORD PTR [ebx+0x4]
1001a893:	push   DWORD PTR [eax]
1001a895:	lea    eax,[ebp-0x38]
1001a898:	push   ebx
1001a899:	push   eax
1001a89a:	call   0x1001b1d6
1001a89f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a8a3:	mov    eax,0x1001a8a9
1001a8a8:	ret    
1001a8a9:	mov    ebx,DWORD PTR [ebp+0x8]
1001a8ac:	jmp    0x1001a6c0
1001a8b1:	push   0x10071080
1001a8b6:	lea    ecx,[ebp-0xe0]
1001a8bc:	call   0x100011a7
1001a8c1:	lea    eax,[ebp-0xe0]
1001a8c7:	push   eax
1001a8c8:	lea    ecx,[ebp-0xc4]
1001a8ce:	mov    BYTE PTR [ebp-0x4],0x8
1001a8d2:	call   0x10001077
1001a8d7:	push   0x100764d0
1001a8dc:	lea    eax,[ebp-0xc4]
1001a8e2:	push   eax
1001a8e3:	mov    DWORD PTR [ebp-0xc4],0x1006c97c
1001a8ed:	call   0x10047942
1001a8f2:	mov    ecx,DWORD PTR [eax]
1001a8f4:	mov    DWORD PTR [eax],eax
1001a8f6:	mov    eax,DWORD PTR [ebp-0x18]
1001a8f9:	mov    DWORD PTR [eax+0x4],eax
1001a8fc:	and    DWORD PTR [ebp-0x14],0x0
1001a900:	cmp    ecx,DWORD PTR [ebp-0x18]
1001a903:	je     0x1001a915
1001a905:	mov    esi,DWORD PTR [ecx]
1001a907:	push   ecx
1001a908:	call   0x10042fe2
1001a90d:	cmp    esi,DWORD PTR [ebp-0x18]
1001a910:	pop    ecx
1001a911:	mov    ecx,esi
1001a913:	jne    0x1001a905
1001a915:	push   DWORD PTR [ebp-0x18]
1001a918:	call   0x10042fe2
1001a91d:	and    DWORD PTR [ebp-0x18],0x0
1001a921:	pop    ecx
1001a922:	lea    eax,[ebp-0x28]
1001a925:	call   0x1001b1bf
1001a92a:	call   0x10059ecd
1001a92f:	ret    0x20
1001a932:	push   0x0
1001a934:	push   0x1
1001a936:	lea    ecx,[esi+0x38]
1001a939:	call   0x100012f0
1001a93e:	push   0x0
1001a940:	push   0x1
1001a942:	lea    ecx,[esi+0x1c]
1001a945:	call   0x100012f0
1001a94a:	push   0x0
1001a94c:	push   0x1
1001a94e:	mov    ecx,esi
1001a950:	call   0x100012f0
1001a955:	ret    
1001a956:	push   0x10
1001a958:	mov    eax,0x10060819
1001a95d:	call   0x10059e28
1001a962:	mov    edi,DWORD PTR [ebp+0x8]
1001a965:	push   0x1f4
1001a96a:	push   DWORD PTR [edi+0x18]
1001a96d:	call   DWORD PTR ds:0x1006707c
1001a973:	test   eax,eax
1001a975:	jne    0x1001a9a9
1001a977:	and    DWORD PTR [ebp-0x4],eax
1001a97a:	mov    eax,DWORD PTR [edi+0x1c]
1001a97d:	add    eax,0x9
1001a980:	lea    ebx,[edi+0xc]
1001a983:	lea    esi,[ebp-0x1c]
1001a986:	mov    DWORD PTR [ebp-0x1c],eax
1001a989:	mov    DWORD PTR [ebp-0x18],0x1001b0a8
1001a990:	call   0x1001b228
1001a995:	jmp    0x1001a9a0
1001a997:	mov    eax,0x1001a99d
1001a99c:	ret    
1001a99d:	mov    edi,DWORD PTR [ebp+0x8]
1001a9a0:	push   DWORD PTR [edi+0x18]
1001a9a3:	call   DWORD PTR ds:0x10067090
1001a9a9:	call   0x10059ecd
1001a9ae:	ret    0x4
1001a9b1:	push   0x14
1001a9b3:	mov    eax,0x1006120d
1001a9b8:	call   0x10059df5
1001a9bd:	push   0x1f4
1001a9c2:	push   DWORD PTR [esi+0x18]
1001a9c5:	xor    edi,edi
1001a9c7:	mov    DWORD PTR [ebp-0x10],edi
1001a9ca:	call   DWORD PTR ds:0x1006707c
1001a9d0:	test   eax,eax
1001a9d2:	je     0x1001a9e1
1001a9d4:	call   0x1001b348
1001a9d9:	mov    DWORD PTR [ebx+0x4],eax
1001a9dc:	mov    DWORD PTR [ebx+0x8],edi
1001a9df:	jmp    0x1001aa1d
1001a9e1:	lea    eax,[ebp-0x1c]
1001a9e4:	push   eax
1001a9e5:	mov    ecx,esi
1001a9e7:	call   0x1001b163
1001a9ec:	mov    DWORD PTR [ebp-0x4],edi
1001a9ef:	mov    eax,DWORD PTR [ebp-0x18]
1001a9f2:	mov    edx,DWORD PTR [eax]
1001a9f4:	push   eax
1001a9f5:	lea    ecx,[ebp-0x1c]
1001a9f8:	push   ecx
1001a9f9:	mov    edi,ecx
1001a9fb:	push   edx
1001a9fc:	push   edi
1001a9fd:	call   0x1001b443
1001aa02:	add    esp,0x10
1001aa05:	push   DWORD PTR [esi+0x18]
1001aa08:	call   DWORD PTR ds:0x10067090
1001aa0e:	push   ebx
1001aa0f:	mov    ecx,edi
1001aa11:	call   0x1001b163
1001aa16:	mov    eax,edi
1001aa18:	call   0x1001b1bf
1001aa1d:	mov    eax,ebx
1001aa1f:	call   0x10059ecd
1001aa24:	ret    
1001aa25:	push   0xc4
1001aa2a:	mov    eax,0x10063b95
1001aa2f:	call   0x10059e5e
1001aa34:	mov    esi,ecx
1001aa36:	xor    ebx,ebx
1001aa38:	mov    DWORD PTR [ebp-0xa0],esi
1001aa3e:	mov    DWORD PTR [ebp-0xb4],ebx
1001aa44:	xor    edi,edi
1001aa46:	inc    edi
1001aa47:	mov    DWORD PTR [ebp-0x4],edi
1001aa4a:	call   0x100040ef
1001aa4f:	push   0x10071094
1001aa54:	push   0x7
1001aa56:	mov    ecx,0x100710c4
1001aa5b:	mov    DWORD PTR [ebp-0xb4],edi
1001aa61:	mov    DWORD PTR [ebp-0x9c],ebx
1001aa67:	call   0x100042b4
1001aa6c:	pop    ecx
1001aa6d:	pop    ecx
1001aa6e:	push   eax
1001aa6f:	push   esi
1001aa70:	call   0x10004126
1001aa75:	push   0xa
1001aa77:	lea    eax,[ebp-0x7c]
1001aa7a:	push   eax
1001aa7b:	call   DWORD PTR ds:0x1006713c
1001aa81:	push   eax
1001aa82:	call   0x10045cb6
1001aa87:	add    esp,0xc
1001aa8a:	push   eax
1001aa8b:	push   esi
1001aa8c:	call   0x10004126
1001aa91:	mov    eax,DWORD PTR [ebp+0xc]
1001aa94:	mov    edi,DWORD PTR [eax]
1001aa96:	mov    DWORD PTR [ebp-0xa8],ebx
1001aa9c:	lea    ebx,[ebp+0x8]
1001aa9f:	mov    DWORD PTR [ebp-0xac],edi
1001aaa5:	mov    DWORD PTR [ebp-0xb0],ebx
1001aaab:	test   ebx,ebx
1001aaad:	mov    esi,DWORD PTR [ebp+0xc]
1001aab0:	je     0x1001aab9
1001aab2:	lea    eax,[ebp+0x8]
1001aab5:	cmp    ebx,eax
1001aab7:	je     0x1001aabe
1001aab9:	call   0x10043605
1001aabe:	cmp    edi,esi
1001aac0:	je     0x1001af7f
1001aac6:	push   0x0
1001aac8:	lea    ecx,[ebp-0x98]
1001aace:	mov    DWORD PTR [ebp-0x80],0xf
1001aad5:	call   0x1000141c
1001aada:	push   0x100710d0
1001aadf:	mov    esi,0x10071110
1001aae4:	push   0x4
1001aae6:	mov    ecx,esi
1001aae8:	mov    BYTE PTR [ebp-0x4],0x2
1001aaec:	call   0x100042b4
1001aaf1:	pop    ecx
1001aaf2:	pop    ecx
1001aaf3:	push   eax
1001aaf4:	lea    eax,[ebp-0x98]
1001aafa:	push   eax
1001aafb:	call   0x10004126
1001ab00:	push   0xa
1001ab02:	lea    eax,[ebp-0x7c]
1001ab05:	push   eax
1001ab06:	push   DWORD PTR [ebp-0x9c]
1001ab0c:	call   0x10045cb6
1001ab11:	add    esp,0xc
1001ab14:	push   eax
1001ab15:	lea    eax,[ebp-0x98]
1001ab1b:	push   eax
1001ab1c:	call   0x10004126
1001ab21:	push   0x10071118
1001ab26:	push   0x8
1001ab28:	mov    ecx,0x10071144
1001ab2d:	call   0x100042b4
1001ab32:	pop    ecx
1001ab33:	pop    ecx
1001ab34:	push   eax
1001ab35:	lea    eax,[ebp-0x98]
1001ab3b:	push   eax
1001ab3c:	call   0x10004126
1001ab41:	test   ebx,ebx
1001ab43:	jne    0x1001ab4a
1001ab45:	call   0x10043605
1001ab4a:	cmp    edi,DWORD PTR [ebx+0x4]
1001ab4d:	jne    0x1001ab54
1001ab4f:	call   0x10043605
1001ab54:	push   0xa
1001ab56:	lea    eax,[ebp-0x7c]
1001ab59:	push   eax
1001ab5a:	push   DWORD PTR [edi+0x5c]
1001ab5d:	call   0x10045cb6
1001ab62:	add    esp,0xc
1001ab65:	push   eax
1001ab66:	lea    eax,[ebp-0x98]
1001ab6c:	push   eax
1001ab6d:	call   0x10004126
1001ab72:	push   0x10071150
1001ab77:	push   0x4
1001ab79:	mov    ecx,esi
1001ab7b:	call   0x100042b4
1001ab80:	pop    ecx
1001ab81:	pop    ecx
1001ab82:	push   eax
1001ab83:	lea    eax,[ebp-0x98]
1001ab89:	push   eax
1001ab8a:	call   0x10004126
1001ab8f:	push   0xa
1001ab91:	lea    eax,[ebp-0x7c]
1001ab94:	push   eax
1001ab95:	push   DWORD PTR [ebp-0x9c]
1001ab9b:	call   0x10045cb6
1001aba0:	add    esp,0xc
1001aba3:	push   eax
1001aba4:	lea    eax,[ebp-0x98]
1001abaa:	push   eax
1001abab:	call   0x10004126
1001abb0:	push   0x10071184
1001abb5:	push   0x8
1001abb7:	mov    ecx,0x100711c4
1001abbc:	call   0x100042b4
1001abc1:	pop    ecx
1001abc2:	pop    ecx
1001abc3:	push   eax
1001abc4:	lea    eax,[ebp-0x98]
1001abca:	push   eax
1001abcb:	call   0x10004126
1001abd0:	cmp    edi,DWORD PTR [ebx+0x4]
1001abd3:	jne    0x1001abda
1001abd5:	call   0x10043605
1001abda:	lea    eax,[edi+0x8]
1001abdd:	push   eax
1001abde:	lea    ecx,[ebp-0xd0]
1001abe4:	call   0x10030ca0
1001abe9:	pop    ecx
1001abea:	push   0xffffffff
1001abec:	push   0x0
1001abee:	lea    esi,[ebp-0x98]
1001abf4:	mov    BYTE PTR [ebp-0x4],0x3
1001abf8:	call   0x10004cbe
1001abfd:	push   0x0
1001abff:	push   0x1
1001ac01:	lea    ecx,[ebp-0xd0]
1001ac07:	mov    BYTE PTR [ebp-0x4],0x2
1001ac0b:	call   0x100012f0
1001ac10:	push   0x100711d0
1001ac15:	push   0x4
1001ac17:	mov    ecx,0x10071110
1001ac1c:	call   0x100042b4
1001ac21:	pop    ecx
1001ac22:	pop    ecx
1001ac23:	push   eax
1001ac24:	mov    eax,esi
1001ac26:	push   eax
1001ac27:	call   0x10004126
1001ac2c:	push   0xa
1001ac2e:	lea    eax,[ebp-0x7c]
1001ac31:	push   eax
1001ac32:	push   DWORD PTR [ebp-0x9c]
1001ac38:	call   0x10045cb6
1001ac3d:	add    esp,0xc
1001ac40:	push   eax
1001ac41:	mov    eax,esi
1001ac43:	push   eax
1001ac44:	call   0x10004126
1001ac49:	push   0x1007120c
1001ac4e:	push   0xa
1001ac50:	mov    ecx,0x10071244
1001ac55:	call   0x100042b4
1001ac5a:	pop    ecx
1001ac5b:	pop    ecx
1001ac5c:	push   eax
1001ac5d:	mov    eax,esi
1001ac5f:	push   eax
1001ac60:	call   0x10004126
1001ac65:	cmp    edi,DWORD PTR [ebx+0x4]
1001ac68:	jne    0x1001ac6f
1001ac6a:	call   0x10043605
1001ac6f:	lea    eax,[edi+0x40]
1001ac72:	push   eax
1001ac73:	lea    ecx,[ebp-0xd0]
1001ac79:	call   0x10030ca0
1001ac7e:	pop    ecx
1001ac7f:	push   0xffffffff
1001ac81:	push   0x0
1001ac83:	lea    esi,[ebp-0x98]
1001ac89:	mov    BYTE PTR [ebp-0x4],0x4
1001ac8d:	call   0x10004cbe
1001ac92:	push   0x0
1001ac94:	push   0x1
1001ac96:	lea    ecx,[ebp-0xd0]
1001ac9c:	mov    BYTE PTR [ebp-0x4],0x2
1001aca0:	call   0x100012f0
1001aca5:	cmp    edi,DWORD PTR [ebx+0x4]
1001aca8:	jne    0x1001acaf
1001acaa:	call   0x10043605
1001acaf:	push   0x1006dd18
1001acb4:	lea    esi,[edi+0x24]
1001acb7:	call   0x10006825
1001acbc:	test   al,al
1001acbe:	pop    ecx
1001acbf:	jne    0x1001ad66
1001acc5:	push   0x10071250
1001acca:	push   0x4
1001accc:	mov    ecx,0x10071110
1001acd1:	call   0x100042b4
1001acd6:	pop    ecx
1001acd7:	pop    ecx
1001acd8:	push   eax
1001acd9:	lea    eax,[ebp-0x98]
1001acdf:	push   eax
1001ace0:	call   0x10004126
1001ace5:	push   0xa
1001ace7:	lea    eax,[ebp-0x7c]
1001acea:	push   eax
1001aceb:	push   DWORD PTR [ebp-0x9c]
1001acf1:	call   0x10045cb6
1001acf6:	add    esp,0xc
1001acf9:	push   eax
1001acfa:	lea    eax,[ebp-0x98]
1001ad00:	push   eax
1001ad01:	call   0x10004126
1001ad06:	push   0x1007127c
1001ad0b:	push   0x7
1001ad0d:	mov    ecx,0x100712b4
1001ad12:	call   0x100042b4
1001ad17:	pop    ecx
1001ad18:	pop    ecx
1001ad19:	push   eax
1001ad1a:	lea    eax,[ebp-0x98]
1001ad20:	push   eax
1001ad21:	call   0x10004126
1001ad26:	cmp    edi,DWORD PTR [ebx+0x4]
1001ad29:	jne    0x1001ad30
1001ad2b:	call   0x10043605
1001ad30:	lea    eax,[edi+0x24]
1001ad33:	push   eax
1001ad34:	lea    ecx,[ebp-0xd0]
1001ad3a:	call   0x10030ca0
1001ad3f:	pop    ecx
1001ad40:	push   0xffffffff
1001ad42:	push   0x0
1001ad44:	lea    esi,[ebp-0x98]
1001ad4a:	mov    BYTE PTR [ebp-0x4],0x5
1001ad4e:	call   0x10004cbe
1001ad53:	push   0x0
1001ad55:	push   0x1
1001ad57:	lea    ecx,[ebp-0xd0]
1001ad5d:	mov    BYTE PTR [ebp-0x4],0x2
1001ad61:	call   0x100012f0
1001ad66:	push   0x100712bc
1001ad6b:	mov    esi,0x10071110
1001ad70:	push   0x4
1001ad72:	mov    ecx,esi
1001ad74:	call   0x100042b4
1001ad79:	pop    ecx
1001ad7a:	pop    ecx
1001ad7b:	push   eax
1001ad7c:	lea    eax,[ebp-0x98]
1001ad82:	push   eax
1001ad83:	call   0x10004126
1001ad88:	push   0xa
1001ad8a:	lea    eax,[ebp-0x7c]
1001ad8d:	push   eax
1001ad8e:	push   DWORD PTR [ebp-0x9c]
1001ad94:	call   0x10045cb6
1001ad99:	add    esp,0xc
1001ad9c:	push   eax
1001ad9d:	lea    eax,[ebp-0x98]
1001ada3:	push   eax
1001ada4:	call   0x10004126
1001ada9:	push   0x100712f4
1001adae:	push   0xf
1001adb0:	mov    ecx,0x1007131c
1001adb5:	call   0x100042b4
1001adba:	pop    ecx
1001adbb:	pop    ecx
1001adbc:	push   eax
1001adbd:	lea    eax,[ebp-0x98]
1001adc3:	push   eax
1001adc4:	call   0x10004126
1001adc9:	cmp    edi,DWORD PTR [ebx+0x4]
1001adcc:	jne    0x1001add3
1001adce:	call   0x10043605
1001add3:	push   0xa
1001add5:	lea    eax,[ebp-0x7c]
1001add8:	push   eax
1001add9:	lea    eax,[edi+0x8]
1001addc:	push   DWORD PTR [eax+0x58]
1001addf:	mov    DWORD PTR [ebp-0xa4],eax
1001ade5:	call   0x10045cb6
1001adea:	add    esp,0xc
1001aded:	push   eax
1001adee:	lea    eax,[ebp-0x98]
1001adf4:	push   eax
1001adf5:	call   0x10004126
1001adfa:	push   0x1007132c
1001adff:	push   0x4
1001ae01:	mov    ecx,esi
1001ae03:	call   0x100042b4
1001ae08:	pop    ecx
1001ae09:	pop    ecx
1001ae0a:	push   eax
1001ae0b:	lea    eax,[ebp-0x98]
1001ae11:	push   eax
1001ae12:	call   0x10004126
1001ae17:	push   0xa
1001ae19:	lea    eax,[ebp-0x7c]
1001ae1c:	push   eax
1001ae1d:	push   DWORD PTR [ebp-0x9c]
1001ae23:	call   0x10045cb6
1001ae28:	add    esp,0xc
1001ae2b:	push   eax
1001ae2c:	lea    eax,[ebp-0x98]
1001ae32:	push   eax
1001ae33:	call   0x10004126
1001ae38:	push   0x10071360
1001ae3d:	push   0xa
1001ae3f:	mov    ecx,0x100713a0
1001ae44:	call   0x100042b4
1001ae49:	pop    ecx
1001ae4a:	pop    ecx
1001ae4b:	push   eax
1001ae4c:	lea    eax,[ebp-0x98]
1001ae52:	push   eax
1001ae53:	call   0x10004126
1001ae58:	cmp    edi,DWORD PTR [ebx+0x4]
1001ae5b:	jne    0x1001ae62
1001ae5d:	call   0x10043605
1001ae62:	push   0xa
1001ae64:	lea    eax,[ebp-0x7c]
1001ae67:	push   eax
1001ae68:	mov    eax,DWORD PTR [ebp-0xa4]
1001ae6e:	push   DWORD PTR [eax+0x5c]
1001ae71:	call   0x10045cb6
1001ae76:	add    esp,0xc
1001ae79:	push   eax
1001ae7a:	lea    eax,[ebp-0x98]
1001ae80:	push   eax
1001ae81:	call   0x10004126
1001ae86:	push   0x100713ac
1001ae8b:	push   0x4
1001ae8d:	mov    ecx,esi
1001ae8f:	call   0x100042b4
1001ae94:	pop    ecx
1001ae95:	pop    ecx
1001ae96:	push   eax
1001ae97:	lea    eax,[ebp-0x98]
1001ae9d:	push   eax
1001ae9e:	call   0x10004126
1001aea3:	push   0xa
1001aea5:	lea    eax,[ebp-0x7c]
1001aea8:	push   eax
1001aea9:	push   DWORD PTR [ebp-0x9c]
1001aeaf:	call   0x10045cb6
1001aeb4:	add    esp,0xc
1001aeb7:	push   eax
1001aeb8:	lea    eax,[ebp-0x98]
1001aebe:	push   eax
1001aebf:	call   0x10004126
1001aec4:	push   0x100713dc
1001aec9:	push   0xa
1001aecb:	mov    ecx,0x10071400
1001aed0:	call   0x100042b4
1001aed5:	pop    ecx
1001aed6:	pop    ecx
1001aed7:	push   eax
1001aed8:	lea    eax,[ebp-0x98]
1001aede:	push   eax
1001aedf:	call   0x10004126
1001aee4:	cmp    edi,DWORD PTR [ebx+0x4]
1001aee7:	jne    0x1001aeee
1001aee9:	call   0x10043605
1001aeee:	push   0xa
1001aef0:	lea    eax,[ebp-0x7c]
1001aef3:	push   eax
1001aef4:	mov    eax,DWORD PTR [ebp-0xa4]
1001aefa:	push   DWORD PTR [eax+0x60]
1001aefd:	call   0x10045cb6
1001af02:	add    esp,0xc
1001af05:	push   eax
1001af06:	lea    eax,[ebp-0x98]
1001af0c:	push   eax
1001af0d:	call   0x10004126
1001af12:	mov    eax,DWORD PTR [ebp-0xa8]
1001af18:	mov    esi,DWORD PTR [ebp-0xa0]
1001af1e:	add    eax,DWORD PTR [esi+0x14]
1001af21:	cmp    eax,DWORD PTR [ebp+0x14]
1001af24:	mov    DWORD PTR [ebp-0xa8],eax
1001af2a:	jg     0x1001af70
1001af2c:	push   0xffffffff
1001af2e:	push   0x0
1001af30:	lea    eax,[ebp-0x98]
1001af36:	call   0x10004cbe
1001af3b:	inc    DWORD PTR [ebp-0x9c]
1001af41:	push   0x0
1001af43:	push   0x1
1001af45:	lea    ecx,[ebp-0x98]
1001af4b:	mov    BYTE PTR [ebp-0x4],0x1
1001af4f:	call   0x100012f0
1001af54:	lea    esi,[ebp-0xb0]
1001af5a:	call   0x100268eb
1001af5f:	mov    edi,DWORD PTR [ebp-0xac]
1001af65:	mov    ebx,DWORD PTR [ebp-0xb0]
1001af6b:	jmp    0x1001aaab
1001af70:	push   0x0
1001af72:	push   0x1
1001af74:	lea    ecx,[ebp-0x98]
1001af7a:	call   0x100012f0
1001af7f:	lea    eax,[ebp+0x8]
1001af82:	call   0x1001b1bf
1001af87:	mov    eax,DWORD PTR [ebp-0xa0]
1001af8d:	call   0x10059ee1
1001af92:	ret    
1001af93:	push   0x70
1001af95:	mov    eax,0x10065425
1001af9a:	call   0x10059e94
1001af9f:	mov    edi,DWORD PTR [ebp+0x8]
1001afa2:	mov    DWORD PTR [ebp-0x38],edi
1001afa5:	mov    DWORD PTR [ebp-0x40],edi
1001afa8:	xor    ebx,ebx
1001afaa:	mov    DWORD PTR [ebp-0x4],ebx
1001afad:	lea    ecx,[ebp-0x30]
1001afb0:	mov    BYTE PTR [ebp-0x4],0x1
1001afb4:	call   0x100186d5
1001afb9:	mov    BYTE PTR [ebp-0x4],0x2
1001afbd:	call   0x10002068
1001afc2:	cmp    DWORD PTR [edi+0x18],0x10
1001afc6:	jb     0x1001afcd
1001afc8:	mov    eax,DWORD PTR [edi+0x4]
1001afcb:	jmp    0x1001afd0
1001afcd:	lea    eax,[edi+0x4]
1001afd0:	push   eax
1001afd1:	lea    ecx,[ebp-0x78]
1001afd4:	call   0x100011a7
1001afd9:	mov    BYTE PTR [ebp-0x4],0x3
1001afdd:	push   DWORD PTR ds:0x10082df8
1001afe3:	lea    ecx,[ebp-0x5c]
1001afe6:	call   0x100011a7
1001afeb:	push   0x4e20
1001aff0:	lea    eax,[ebp-0x34]
1001aff3:	push   eax
1001aff4:	lea    eax,[ebp-0x78]
1001aff7:	push   eax
1001aff8:	lea    eax,[ebp-0x30]
1001affb:	push   eax
1001affc:	lea    eax,[ebp-0x3c]
1001afff:	push   eax
1001b000:	lea    edx,[ebp-0x5c]
1001b003:	mov    BYTE PTR [ebp-0x4],0x4
1001b007:	call   0x10030b80
1001b00c:	mov    ecx,DWORD PTR [eax]
1001b00e:	mov    esi,ecx
1001b010:	add    esp,0x14
1001b013:	mov    DWORD PTR [eax],ebx
1001b015:	mov    DWORD PTR [ebp-0x34],esi
1001b018:	push   DWORD PTR [ebp-0x3c]
1001b01b:	call   0x10042fe2
1001b020:	pop    ecx
1001b021:	push   ebx
1001b022:	push   0x1
1001b024:	lea    ecx,[ebp-0x5c]
1001b027:	call   0x100012f0
1001b02c:	push   ebx
1001b02d:	push   0x1
1001b02f:	lea    ecx,[ebp-0x78]
1001b032:	mov    BYTE PTR [ebp-0x4],0x7
1001b036:	call   0x100012f0
1001b03b:	cmp    esi,ebx
1001b03d:	jne    0x1001b073
1001b03f:	call   0x10018654
1001b044:	cmp    DWORD PTR [ebp-0x18],0x10
1001b048:	mov    eax,DWORD PTR [ebp-0x2c]
1001b04b:	jae    0x1001b050
1001b04d:	lea    eax,[ebp-0x2c]
1001b050:	push   eax
1001b051:	call   0x10002068
1001b056:	pop    ecx
1001b057:	push   0x5
1001b059:	call   0x10038b80
1001b05e:	pop    ecx
1001b05f:	push   ebx
1001b060:	call   0x10042fe2
1001b065:	pop    ecx
1001b066:	push   ebx
1001b067:	push   0x1
1001b069:	lea    ecx,[ebp-0x30]
1001b06c:	call   0x100012f0
1001b071:	jmp    0x1001b096
1001b073:	push   esi
1001b074:	call   0x10042fe2
1001b079:	pop    ecx
1001b07a:	push   ebx
1001b07b:	push   0x1
1001b07d:	lea    ecx,[ebp-0x30]
1001b080:	call   0x100012f0
1001b085:	jmp    0x1001b092
1001b087:	mov    eax,0x1001b08d
1001b08c:	ret    
1001b08d:	mov    edi,DWORD PTR [ebp-0x38]
1001b090:	xor    ebx,ebx
1001b092:	cmp    edi,ebx
1001b094:	je     0x1001b09e
1001b096:	push   0x1
1001b098:	push   edi
1001b099:	call   0x10006916
1001b09e:	xor    eax,eax
1001b0a0:	call   0x10059ef0
1001b0a5:	ret    0x4
1001b0a8:	push   0x28
1001b0aa:	mov    eax,0x1006563f
1001b0af:	call   0x10059df5
1001b0b4:	xor    edi,edi
1001b0b6:	push   0x1c
1001b0b8:	mov    DWORD PTR [ebp-0x4],edi
1001b0bb:	call   0x10043196
1001b0c0:	cmp    eax,edi
1001b0c2:	pop    ecx
1001b0c3:	je     0x1001b0d0
1001b0c5:	mov    esi,eax
1001b0c7:	call   0x100040ef
1001b0cc:	mov    ebx,eax
1001b0ce:	jmp    0x1001b0d2
1001b0d0:	xor    ebx,ebx
1001b0d2:	push   0x1
1001b0d4:	lea    eax,[ebp-0x10]
1001b0d7:	push   eax
1001b0d8:	call   0x10034910
1001b0dd:	push   eax
1001b0de:	mov    BYTE PTR [ebp-0x4],0x1
1001b0e2:	call   0x10035ed0
1001b0e7:	lea    eax,[eax*4+0x800]
1001b0ee:	push   eax
1001b0ef:	sub    esp,0xc
1001b0f2:	mov    eax,esp
1001b0f4:	mov    DWORD PTR [ebp-0x14],esp
1001b0f7:	push   eax
1001b0f8:	lea    ecx,[ebp+0x8]
1001b0fb:	call   0x1001b163
1001b100:	lea    ecx,[ebp-0x30]
1001b103:	call   0x1001aa25
1001b108:	add    esp,0x10
1001b10b:	push   0xffffffff
1001b10d:	push   edi
1001b10e:	push   eax
1001b10f:	mov    ecx,ebx
1001b111:	mov    BYTE PTR [ebp-0x4],0x2
1001b115:	call   0x10001241
1001b11a:	push   edi
1001b11b:	push   0x1
1001b11d:	lea    ecx,[ebp-0x30]
1001b120:	call   0x100012f0
1001b125:	push   DWORD PTR [ebp-0x10]
1001b128:	mov    esi,DWORD PTR ds:0x10067078
1001b12e:	call   esi
1001b130:	push   edi
1001b131:	push   edi
1001b132:	push   ebx
1001b133:	push   0x1001af93
1001b138:	push   edi
1001b139:	push   edi
1001b13a:	call   DWORD PTR ds:0x10067088
1001b140:	cmp    eax,edi
1001b142:	je     0x1001b149
1001b144:	push   eax
1001b145:	call   esi
1001b147:	jmp    0x1001b155
1001b149:	cmp    ebx,edi
1001b14b:	je     0x1001b155
1001b14d:	push   0x1
1001b14f:	push   ebx
1001b150:	call   0x10006916
1001b155:	lea    eax,[ebp+0x8]
1001b158:	call   0x1001b1bf
1001b15d:	call   0x10059ecd
1001b162:	ret    
1001b163:	push   0x4
1001b165:	mov    eax,0x100611ea
1001b16a:	call   0x10059e28
1001b16f:	mov    edi,ecx
1001b171:	mov    esi,DWORD PTR [ebp+0x8]
1001b174:	call   0x1001b348
1001b179:	xor    ecx,ecx
1001b17b:	mov    DWORD PTR [esi+0x4],eax
1001b17e:	mov    DWORD PTR [esi+0x8],ecx
1001b181:	mov    DWORD PTR [ebp-0x4],ecx
1001b184:	mov    ecx,DWORD PTR [edi+0x4]
1001b187:	mov    edx,DWORD PTR [ecx]
1001b189:	mov    eax,DWORD PTR [eax]
1001b18b:	push   ecx
1001b18c:	push   edi
1001b18d:	push   edx
1001b18e:	push   edi
1001b18f:	push   eax
1001b190:	push   esi
1001b191:	push   esi
1001b192:	call   0x1001b4b5
1001b197:	mov    eax,esi
1001b199:	call   0x10059ecd
1001b19e:	ret    0x4
1001b1a1:	mov    edi,DWORD PTR [ebp+0x8]
1001b1a4:	call   0x1001b378
1001b1a9:	push   DWORD PTR [edi+0x4]
1001b1ac:	call   0x10042fe2
1001b1b1:	pop    ecx
1001b1b2:	xor    ecx,ecx
1001b1b4:	push   ecx
1001b1b5:	push   ecx
1001b1b6:	mov    DWORD PTR [edi+0x4],ecx
1001b1b9:	call   0x10047942
1001b1be:	int3   
1001b1bf:	push   edi
1001b1c0:	mov    edi,eax
1001b1c2:	call   0x1001b378
1001b1c7:	push   DWORD PTR [edi+0x4]
1001b1ca:	call   0x10042fe2
1001b1cf:	and    DWORD PTR [edi+0x4],0x0
1001b1d3:	pop    ecx
1001b1d4:	pop    edi
1001b1d5:	ret    
1001b1d6:	push   ebp
1001b1d7:	mov    ebp,esp
1001b1d9:	push   ecx
1001b1da:	push   ecx
1001b1db:	mov    eax,DWORD PTR [ebp+0xc]
1001b1de:	push   esi
1001b1df:	push   edi
1001b1e0:	mov    edi,DWORD PTR [ebp+0x10]
1001b1e3:	lea    esi,[ebp+0xc]
1001b1e6:	mov    DWORD PTR [ebp-0x8],eax
1001b1e9:	call   0x100268eb
1001b1ee:	cmp    edi,DWORD PTR [ebx+0x4]
1001b1f1:	je     0x1001b214
1001b1f3:	mov    eax,DWORD PTR [edi+0x4]
1001b1f6:	mov    ecx,DWORD PTR [edi]
1001b1f8:	mov    DWORD PTR [eax],ecx
1001b1fa:	mov    eax,DWORD PTR [edi]
1001b1fc:	mov    ecx,DWORD PTR [edi+0x4]
1001b1ff:	lea    esi,[edi+0x8]
1001b202:	mov    DWORD PTR [eax+0x4],ecx
1001b205:	call   0x1001a932
1001b20a:	push   edi
1001b20b:	call   0x10042fe2
1001b210:	dec    DWORD PTR [ebx+0x8]
1001b213:	pop    ecx
1001b214:	mov    ecx,DWORD PTR [ebp+0xc]
1001b217:	mov    eax,DWORD PTR [ebp+0x8]
1001b21a:	mov    DWORD PTR [eax],ecx
1001b21c:	mov    ecx,DWORD PTR [ebp+0x10]
1001b21f:	pop    edi
1001b220:	mov    DWORD PTR [eax+0x4],ecx
1001b223:	pop    esi
1001b224:	leave  
1001b225:	ret    0xc
1001b228:	push   0x44
1001b22a:	mov    eax,0x10060b46
1001b22f:	call   0x10059df5
1001b234:	mov    edi,DWORD PTR [ebx+0x4]
1001b237:	push   DWORD PTR [edi+0x4]
1001b23a:	push   edi
1001b23b:	call   0x1001b410
1001b240:	mov    ecx,DWORD PTR [ebx+0x8]
1001b243:	mov    edx,0x1fffffff
1001b248:	sub    edx,ecx
1001b24a:	cmp    edx,0x1
1001b24d:	jae    0x1001b281
1001b24f:	push   0x10071080
1001b254:	lea    ecx,[ebp-0x28]
1001b257:	call   0x100011a7
1001b25c:	and    DWORD PTR [ebp-0x4],0x0
1001b260:	lea    eax,[ebp-0x28]
1001b263:	push   eax
1001b264:	lea    ecx,[ebp-0x50]
1001b267:	call   0x10001077
1001b26c:	push   0x100764d0
1001b271:	lea    eax,[ebp-0x50]
1001b274:	push   eax
1001b275:	mov    DWORD PTR [ebp-0x50],0x1006c97c
1001b27c:	call   0x10047942
1001b281:	inc    ecx
1001b282:	mov    DWORD PTR [ebx+0x8],ecx
1001b285:	mov    DWORD PTR [edi+0x4],eax
1001b288:	mov    ecx,DWORD PTR [eax+0x4]
1001b28b:	mov    DWORD PTR [ecx],eax
1001b28d:	call   0x10059ecd
1001b292:	ret    
1001b293:	mov    eax,DWORD PTR [esi+0x4]
1001b296:	mov    ecx,DWORD PTR [eax]
1001b298:	mov    DWORD PTR [eax],eax
1001b29a:	mov    eax,DWORD PTR [esi+0x4]
1001b29d:	mov    DWORD PTR [eax+0x4],eax
1001b2a0:	and    DWORD PTR [esi+0x8],0x0
1001b2a4:	cmp    ecx,DWORD PTR [esi+0x4]
1001b2a7:	je     0x1001b2bb
1001b2a9:	push   edi
1001b2aa:	mov    edi,DWORD PTR [ecx]
1001b2ac:	push   ecx
1001b2ad:	call   0x10042fe2
1001b2b2:	cmp    edi,DWORD PTR [esi+0x4]
1001b2b5:	pop    ecx
1001b2b6:	mov    ecx,edi
1001b2b8:	jne    0x1001b2aa
1001b2ba:	pop    edi
1001b2bb:	push   DWORD PTR [esi+0x4]
1001b2be:	call   0x10042fe2
1001b2c3:	and    DWORD PTR [esi+0x4],0x0
1001b2c7:	pop    ecx
1001b2c8:	ret    
1001b2c9:	mov    eax,DWORD PTR [eax]
1001b2cb:	test   eax,eax
1001b2cd:	je     0x1001b2d7
1001b2cf:	push   0x1
1001b2d1:	push   eax
1001b2d2:	call   0x10006916
1001b2d7:	ret    
1001b2d8:	push   0x48
1001b2da:	mov    eax,0x100607fe
1001b2df:	call   0x10059df5
1001b2e4:	push   DWORD PTR [ebp+0x8]
1001b2e7:	mov    esi,DWORD PTR [ebp+0x10]
1001b2ea:	push   DWORD PTR [esi+0x4]
1001b2ed:	push   esi
1001b2ee:	call   0x1001b3ad
1001b2f3:	mov    ecx,DWORD PTR [edi+0x8]
1001b2f6:	mov    edx,0x28f5c28
1001b2fb:	sub    edx,ecx
1001b2fd:	cmp    edx,0x1
1001b300:	jae    0x1001b334
1001b302:	push   0x10071080
1001b307:	lea    ecx,[ebp-0x2c]
1001b30a:	call   0x100011a7
1001b30f:	and    DWORD PTR [ebp-0x4],0x0
1001b313:	lea    eax,[ebp-0x2c]
1001b316:	push   eax
1001b317:	lea    ecx,[ebp-0x54]
1001b31a:	call   0x10001077
1001b31f:	push   0x100764d0
1001b324:	lea    eax,[ebp-0x54]
1001b327:	push   eax
1001b328:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1001b32f:	call   0x10047942
1001b334:	inc    ecx
1001b335:	mov    DWORD PTR [edi+0x8],ecx
1001b338:	mov    DWORD PTR [esi+0x4],eax
1001b33b:	mov    ecx,DWORD PTR [eax+0x4]
1001b33e:	mov    DWORD PTR [ecx],eax
1001b340:	call   0x10059ecd
1001b345:	ret    0xc
1001b348:	push   0x6c
1001b34a:	call   0x10043196
1001b34f:	test   eax,eax
1001b351:	pop    ecx
1001b352:	je     0x1001b356
1001b354:	mov    DWORD PTR [eax],eax
1001b356:	lea    ecx,[eax+0x4]
1001b359:	test   ecx,ecx
1001b35b:	je     0x1001b35f
1001b35d:	mov    DWORD PTR [ecx],eax
1001b35f:	ret    
1001b360:	push   0x10
1001b362:	call   0x10043196
1001b367:	test   eax,eax
1001b369:	pop    ecx
1001b36a:	je     0x1001b36e
1001b36c:	mov    DWORD PTR [eax],eax
1001b36e:	lea    ecx,[eax+0x4]
1001b371:	test   ecx,ecx
1001b373:	je     0x1001b377
1001b375:	mov    DWORD PTR [ecx],eax
1001b377:	ret    
1001b378:	mov    eax,DWORD PTR [edi+0x4]
1001b37b:	push   ebx
1001b37c:	mov    ebx,DWORD PTR [eax]
1001b37e:	mov    DWORD PTR [eax],eax
1001b380:	mov    eax,DWORD PTR [edi+0x4]
1001b383:	mov    DWORD PTR [eax+0x4],eax
1001b386:	and    DWORD PTR [edi+0x8],0x0
1001b38a:	cmp    ebx,DWORD PTR [edi+0x4]
1001b38d:	je     0x1001b3ab
1001b38f:	push   ebp
1001b390:	push   esi
1001b391:	mov    ebp,DWORD PTR [ebx]
1001b393:	lea    esi,[ebx+0x8]
1001b396:	call   0x1001a932
1001b39b:	push   ebx
1001b39c:	call   0x10042fe2
1001b3a1:	cmp    ebp,DWORD PTR [edi+0x4]
1001b3a4:	pop    ecx
1001b3a5:	mov    ebx,ebp
1001b3a7:	jne    0x1001b391
1001b3a9:	pop    esi
1001b3aa:	pop    ebp
1001b3ab:	pop    ebx
1001b3ac:	ret    
1001b3ad:	push   0x8
1001b3af:	mov    eax,0x10060095
1001b3b4:	call   0x10059e28
1001b3b9:	push   0x6c
1001b3bb:	call   0x10043196
1001b3c0:	and    DWORD PTR [ebp-0x4],0x0
1001b3c4:	mov    esi,eax
1001b3c6:	test   esi,esi
1001b3c8:	pop    ecx
1001b3c9:	mov    DWORD PTR [ebp-0x14],esi
1001b3cc:	je     0x1001b3d3
1001b3ce:	mov    eax,DWORD PTR [ebp+0x8]
1001b3d1:	mov    DWORD PTR [esi],eax
1001b3d3:	lea    eax,[esi+0x4]
1001b3d6:	test   eax,eax
1001b3d8:	je     0x1001b3df
1001b3da:	mov    ecx,DWORD PTR [ebp+0xc]
1001b3dd:	mov    DWORD PTR [eax],ecx
1001b3df:	lea    eax,[esi+0x8]
1001b3e2:	test   eax,eax
1001b3e4:	mov    BYTE PTR [ebp-0x4],0x1
1001b3e8:	je     0x1001b3f3
1001b3ea:	mov    edi,DWORD PTR [ebp+0x10]
1001b3ed:	push   eax
1001b3ee:	call   0x1001b4e1
1001b3f3:	mov    eax,esi
1001b3f5:	call   0x10059ecd
1001b3fa:	ret    0xc
1001b3fd:	push   DWORD PTR [ebp-0x14]
1001b400:	call   0x10042fe2
1001b405:	pop    ecx
1001b406:	push   0x0
1001b408:	push   0x0
1001b40a:	call   0x10047942
1001b40f:	int3   
1001b410:	push   0x10
1001b412:	call   0x10043196
1001b417:	test   eax,eax
1001b419:	pop    ecx
1001b41a:	je     0x1001b422
1001b41c:	mov    ecx,DWORD PTR [esp+0x4]
1001b420:	mov    DWORD PTR [eax],ecx
1001b422:	lea    ecx,[eax+0x4]
1001b425:	test   ecx,ecx
1001b427:	je     0x1001b42f
1001b429:	mov    edx,DWORD PTR [esp+0x8]
1001b42d:	mov    DWORD PTR [ecx],edx
1001b42f:	lea    ecx,[eax+0x8]
1001b432:	test   ecx,ecx
1001b434:	je     0x1001b440
1001b436:	mov    edx,DWORD PTR [esi]
1001b438:	mov    DWORD PTR [ecx],edx
1001b43a:	mov    edx,DWORD PTR [esi+0x4]
1001b43d:	mov    DWORD PTR [ecx+0x4],edx
1001b440:	ret    0x8
1001b443:	push   0x7c
1001b445:	mov    eax,0x100607ce
1001b44a:	call   0x10059e5e
1001b44f:	mov    eax,DWORD PTR [ebp+0x10]
1001b452:	mov    ecx,DWORD PTR [ebp+0x8]
1001b455:	mov    edx,DWORD PTR [ebp+0x14]
1001b458:	mov    ebx,DWORD PTR [ebp+0xc]
1001b45b:	mov    DWORD PTR [ebp-0x80],eax
1001b45e:	mov    DWORD PTR [ebp-0x88],ecx
1001b464:	cmp    ebx,edx
1001b466:	je     0x1001b4af
1001b468:	mov    eax,DWORD PTR [edx+0x4]
1001b46b:	cmp    ebx,eax
1001b46d:	mov    DWORD PTR [ebp-0x7c],eax
1001b470:	je     0x1001b4af
1001b472:	lea    esi,[eax+0x8]
1001b475:	lea    eax,[ebp-0x78]
1001b478:	lea    edi,[ebx+0x8]
1001b47b:	push   eax
1001b47c:	call   0x1001b4e1
1001b481:	and    DWORD PTR [ebp-0x4],0x0
1001b485:	mov    edi,esi
1001b487:	lea    esi,[ebx+0x8]
1001b48a:	call   0x1001b603
1001b48f:	mov    esi,DWORD PTR [ebp-0x7c]
1001b492:	lea    edi,[ebp-0x78]
1001b495:	add    esi,0x8
1001b498:	call   0x1001b603
1001b49d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b4a1:	mov    esi,edi
1001b4a3:	call   0x1001a932
1001b4a8:	mov    ebx,DWORD PTR [ebx]
1001b4aa:	mov    edx,DWORD PTR [ebp-0x7c]
1001b4ad:	jmp    0x1001b464
1001b4af:	call   0x10059ee1
1001b4b4:	ret    
1001b4b5:	push   ebp
1001b4b6:	mov    ebp,esp
1001b4b8:	and    esp,0xfffffff8
1001b4bb:	push   ecx
1001b4bc:	push   ecx
1001b4bd:	push   DWORD PTR [ebp+0x20]
1001b4c0:	push   DWORD PTR [ebp+0x1c]
1001b4c3:	push   DWORD PTR [ebp+0x18]
1001b4c6:	push   DWORD PTR [ebp+0x14]
1001b4c9:	push   DWORD PTR [ebp+0x10]
1001b4cc:	push   DWORD PTR [ebp+0xc]
1001b4cf:	push   DWORD PTR [esp+0x1c]
1001b4d3:	push   DWORD PTR [ebp+0x8]
1001b4d6:	call   0x1001b53a
1001b4db:	mov    esp,ebp
1001b4dd:	pop    ebp
1001b4de:	ret    0x1c
1001b4e1:	push   0x0
1001b4e3:	mov    eax,0x1005febb
1001b4e8:	call   0x10059df5
1001b4ed:	mov    esi,DWORD PTR [ebp+0x8]
1001b4f0:	push   edi
1001b4f1:	mov    ecx,esi
1001b4f3:	call   0x100011c9
1001b4f8:	and    DWORD PTR [ebp-0x4],0x0
1001b4fc:	lea    eax,[edi+0x1c]
1001b4ff:	push   eax
1001b500:	lea    ecx,[esi+0x1c]
1001b503:	call   0x100011c9
1001b508:	lea    eax,[edi+0x38]
1001b50b:	push   eax
1001b50c:	lea    ecx,[esi+0x38]
1001b50f:	mov    BYTE PTR [ebp-0x4],0x1
1001b513:	call   0x100011c9
1001b518:	mov    eax,DWORD PTR [edi+0x54]
1001b51b:	mov    DWORD PTR [esi+0x54],eax
1001b51e:	mov    eax,DWORD PTR [edi+0x58]
1001b521:	mov    DWORD PTR [esi+0x58],eax
1001b524:	mov    eax,DWORD PTR [edi+0x5c]
1001b527:	mov    DWORD PTR [esi+0x5c],eax
1001b52a:	mov    eax,DWORD PTR [edi+0x60]
1001b52d:	mov    DWORD PTR [esi+0x60],eax
1001b530:	mov    eax,esi
1001b532:	call   0x10059ecd
1001b537:	ret    0x4
1001b53a:	push   0x14
1001b53c:	mov    eax,0x100611cf
1001b541:	call   0x10059e28
1001b546:	mov    edi,DWORD PTR [ebp+0x18]
1001b549:	mov    esi,DWORD PTR [ebp+0x1c]
1001b54c:	and    DWORD PTR [ebp-0x4],0x0
1001b550:	mov    DWORD PTR [ebp-0x18],edi
1001b553:	mov    DWORD PTR [ebp-0x14],esi
1001b556:	test   edi,edi
1001b558:	je     0x1001b55f
1001b55a:	cmp    edi,DWORD PTR [ebp+0x20]
1001b55d:	je     0x1001b564
1001b55f:	call   0x10043605
1001b564:	cmp    esi,DWORD PTR [ebp+0x24]
1001b567:	je     0x1001b5fb
1001b56d:	test   edi,edi
1001b56f:	jne    0x1001b576
1001b571:	call   0x10043605
1001b576:	cmp    esi,DWORD PTR [edi+0x4]
1001b579:	jne    0x1001b580
1001b57b:	call   0x10043605
1001b580:	push   DWORD PTR [ebp+0x14]
1001b583:	mov    edi,DWORD PTR [ebp+0x8]
1001b586:	push   DWORD PTR [ebp+0x10]
1001b589:	add    esi,0x8
1001b58c:	push   esi
1001b58d:	call   0x1001b2d8
1001b592:	lea    esi,[ebp+0x18]
1001b595:	call   0x100268eb
1001b59a:	mov    esi,DWORD PTR [ebp+0x1c]
1001b59d:	mov    edi,DWORD PTR [ebp+0x18]
1001b5a0:	jmp    0x1001b556
1001b5a2:	mov    edi,DWORD PTR [ebp+0x14]
1001b5a5:	mov    eax,DWORD PTR [ebp-0x18]
1001b5a8:	test   eax,eax
1001b5aa:	je     0x1001b5b1
1001b5ac:	cmp    eax,DWORD PTR [ebp+0x18]
1001b5af:	je     0x1001b5b6
1001b5b1:	call   0x10043605
1001b5b6:	mov    eax,DWORD PTR [ebp-0x14]
1001b5b9:	cmp    eax,DWORD PTR [ebp+0x1c]
1001b5bc:	je     0x1001b5f2
1001b5be:	mov    ebx,DWORD PTR [ebp+0x10]
1001b5c1:	test   ebx,ebx
1001b5c3:	mov    DWORD PTR [ebp+0x24],edi
1001b5c6:	jne    0x1001b5cd
1001b5c8:	call   0x10043605
1001b5cd:	mov    esi,DWORD PTR [edi+0x4]
1001b5d0:	cmp    esi,DWORD PTR [ebx+0x4]
1001b5d3:	jne    0x1001b5da
1001b5d5:	call   0x10043605
1001b5da:	push   esi
1001b5db:	push   ebx
1001b5dc:	mov    ebx,DWORD PTR [ebp+0x8]
1001b5df:	lea    eax,[ebp-0x20]
1001b5e2:	push   eax
1001b5e3:	call   0x1001b1d6
1001b5e8:	lea    esi,[ebp-0x18]
1001b5eb:	call   0x100268eb
1001b5f0:	jmp    0x1001b5a5
1001b5f2:	push   0x0
1001b5f4:	push   0x0
1001b5f6:	call   0x10047942
1001b5fb:	call   0x10059ecd
1001b600:	ret    0x20
1001b603:	push   0xffffffff
1001b605:	push   0x0
1001b607:	push   edi
1001b608:	mov    ecx,esi
1001b60a:	call   0x10001241
1001b60f:	push   0xffffffff
1001b611:	push   0x0
1001b613:	lea    eax,[edi+0x1c]
1001b616:	push   eax
1001b617:	lea    ecx,[esi+0x1c]
1001b61a:	call   0x10001241
1001b61f:	push   0xffffffff
1001b621:	push   0x0
1001b623:	lea    eax,[edi+0x38]
1001b626:	push   eax
1001b627:	lea    ecx,[esi+0x38]
1001b62a:	call   0x10001241
1001b62f:	mov    eax,DWORD PTR [edi+0x54]
1001b632:	mov    DWORD PTR [esi+0x54],eax
1001b635:	mov    eax,DWORD PTR [edi+0x58]
1001b638:	mov    DWORD PTR [esi+0x58],eax
1001b63b:	mov    eax,DWORD PTR [edi+0x5c]
1001b63e:	mov    DWORD PTR [esi+0x5c],eax
1001b641:	mov    eax,DWORD PTR [edi+0x60]
1001b644:	mov    DWORD PTR [esi+0x60],eax
1001b647:	mov    eax,esi
1001b649:	ret    
1001b64a:	mov    eax,DWORD PTR [esp+0x4]
1001b64e:	test   eax,eax
1001b650:	je     0x1001b664
1001b652:	sub    eax,0x8
1001b655:	cmp    DWORD PTR [eax],0xdddd
1001b65b:	jne    0x1001b664
1001b65d:	push   eax
1001b65e:	call   0x100437dc
1001b663:	pop    ecx
1001b664:	ret    
1001b665:	cmp    DWORD PTR [esp+0x4],0x0
1001b66a:	jne    0x1001b674
1001b66c:	and    DWORD PTR [esi],0x0
1001b66f:	mov    eax,esi
1001b671:	ret    0x4
1001b674:	push   DWORD PTR [esp+0x4]
1001b678:	call   DWORD PTR ds:0x100672ac
1001b67e:	test   eax,eax
1001b680:	mov    DWORD PTR [esi],eax
1001b682:	jne    0x1001b66f
1001b684:	push   0x8007000e
1001b689:	call   0x10001f2d
1001b68e:	int3   
1001b68f:	push   ebp
1001b690:	mov    ebp,esp
1001b692:	sub    esp,0x84
1001b698:	mov    eax,ds:0x100801ac
1001b69d:	xor    eax,ebp
1001b69f:	mov    DWORD PTR [ebp-0x4],eax
1001b6a2:	mov    eax,DWORD PTR [ebp+0x8]
1001b6a5:	push   0x40
1001b6a7:	lea    ecx,[ebp-0x84]
1001b6ad:	push   ecx
1001b6ae:	push   eax
1001b6af:	call   DWORD PTR ds:0x10067428
1001b6b5:	lea    eax,[ebp-0x84]
1001b6bb:	push   eax
1001b6bc:	call   DWORD PTR ds:0x100672ac
1001b6c2:	test   eax,eax
1001b6c4:	mov    DWORD PTR [esi],eax
1001b6c6:	jne    0x1001b6d2
1001b6c8:	push   0x8007000e
1001b6cd:	call   0x10001f2d
1001b6d2:	mov    ecx,DWORD PTR [ebp-0x4]
1001b6d5:	xor    ecx,ebp
1001b6d7:	mov    eax,esi
1001b6d9:	call   0x10043615
1001b6de:	leave  
1001b6df:	ret    0x4
1001b6e2:	push   ecx
1001b6e3:	call   DWORD PTR ds:0x10067284
1001b6e9:	ret    
1001b6ea:	push   ebp
1001b6eb:	mov    ebp,esp
1001b6ed:	push   ecx
1001b6ee:	push   ecx
1001b6ef:	test   esi,esi
1001b6f1:	je     0x1001b72d
1001b6f3:	test   eax,eax
1001b6f5:	je     0x1001b72d
1001b6f7:	mov    DWORD PTR [esi],eax
1001b6f9:	call   DWORD PTR ds:0x1006715c
1001b6ff:	mov    DWORD PTR [esi+0x4],eax
1001b702:	mov    eax,0x10082ac8
1001b707:	push   eax
1001b708:	mov    DWORD PTR [ebp-0x8],eax
1001b70b:	call   DWORD PTR ds:0x100670f8
1001b711:	mov    eax,ds:0x10082ae0
1001b716:	mov    DWORD PTR [esi+0x8],eax
1001b719:	lea    ecx,[ebp-0x8]
1001b71c:	mov    BYTE PTR [ebp-0x4],0x1
1001b720:	mov    DWORD PTR ds:0x10082ae0,esi
1001b726:	call   0x100111c4
1001b72b:	leave  
1001b72c:	ret    
1001b72d:	push   0x0
1001b72f:	push   0x0
1001b731:	push   0x1
1001b733:	push   0xc0000005
1001b738:	call   DWORD PTR ds:0x10067110
1001b73e:	int3   
1001b73f:	push   esi
1001b740:	mov    esi,eax
1001b742:	test   esi,esi
1001b744:	push   edi
1001b745:	je     0x1001b775
1001b747:	mov    edi,DWORD PTR ds:0x10067340
1001b74d:	cmp    WORD PTR [esi],0x0
1001b751:	je     0x1001b775
1001b753:	mov    eax,0x1007159c
1001b758:	movzx  ecx,WORD PTR [eax]
1001b75b:	test   cx,cx
1001b75e:	je     0x1001b76c
1001b760:	cmp    WORD PTR [esi],cx
1001b763:	je     0x1001b77a
1001b765:	push   eax
1001b766:	call   edi
1001b768:	test   eax,eax
1001b76a:	jne    0x1001b758
1001b76c:	push   esi
1001b76d:	call   edi
1001b76f:	mov    esi,eax
1001b771:	test   esi,esi
1001b773:	jne    0x1001b74d
1001b775:	xor    eax,eax
1001b777:	pop    edi
1001b778:	pop    esi
1001b779:	ret    
1001b77a:	push   esi
1001b77b:	call   edi
1001b77d:	jmp    0x1001b777
1001b77f:	push   ebp
1001b780:	mov    ebp,esp
1001b782:	push   ecx
1001b783:	push   ecx
1001b784:	test   eax,eax
1001b786:	jne    0x1001b78f
1001b788:	mov    eax,0x80070057
1001b78d:	jmp    0x1001b7f0
1001b78f:	mov    ecx,DWORD PTR [eax]
1001b791:	and    DWORD PTR [ebp-0x8],0x0
1001b795:	and    DWORD PTR [ebp-0x4],0x0
1001b799:	push   esi
1001b79a:	lea    edx,[ebp-0x8]
1001b79d:	push   edx
1001b79e:	push   0x1007141c
1001b7a3:	push   eax
1001b7a4:	call   DWORD PTR [ecx]
1001b7a6:	mov    esi,eax
1001b7a8:	test   esi,esi
1001b7aa:	jl     0x1001b7d3
1001b7ac:	mov    eax,DWORD PTR [ebp-0x8]
1001b7af:	mov    ecx,DWORD PTR [eax]
1001b7b1:	lea    edx,[ebp-0x4]
1001b7b4:	push   edx
1001b7b5:	push   DWORD PTR [ebp+0xc]
1001b7b8:	push   eax
1001b7b9:	call   DWORD PTR [ecx+0x10]
1001b7bc:	mov    esi,eax
1001b7be:	test   esi,esi
1001b7c0:	jl     0x1001b7d3
1001b7c2:	push   DWORD PTR [ebp+0x10]
1001b7c5:	mov    eax,DWORD PTR [ebp-0x4]
1001b7c8:	push   DWORD PTR [ebp+0x8]
1001b7cb:	mov    ecx,DWORD PTR [eax]
1001b7cd:	push   eax
1001b7ce:	call   DWORD PTR [ecx+0x14]
1001b7d1:	mov    esi,eax
1001b7d3:	mov    eax,DWORD PTR [ebp-0x4]
1001b7d6:	test   eax,eax
1001b7d8:	je     0x1001b7e0
1001b7da:	mov    ecx,DWORD PTR [eax]
1001b7dc:	push   eax
1001b7dd:	call   DWORD PTR [ecx+0x8]
1001b7e0:	mov    eax,DWORD PTR [ebp-0x8]
1001b7e3:	test   eax,eax
1001b7e5:	je     0x1001b7ed
1001b7e7:	mov    ecx,DWORD PTR [eax]
1001b7e9:	push   eax
1001b7ea:	call   DWORD PTR [ecx+0x8]
1001b7ed:	mov    eax,esi
1001b7ef:	pop    esi
1001b7f0:	leave  
1001b7f1:	ret    0xc
1001b7f4:	push   ebp
1001b7f5:	mov    ebp,esp
1001b7f7:	push   ecx
1001b7f8:	push   ecx
1001b7f9:	test   eax,eax
1001b7fb:	jne    0x1001b804
1001b7fd:	mov    eax,0x80070057
1001b802:	jmp    0x1001b862
1001b804:	mov    ecx,DWORD PTR [eax]
1001b806:	and    DWORD PTR [ebp-0x8],0x0
1001b80a:	and    DWORD PTR [ebp-0x4],0x0
1001b80e:	push   esi
1001b80f:	lea    edx,[ebp-0x8]
1001b812:	push   edx
1001b813:	push   0x1007141c
1001b818:	push   eax
1001b819:	call   DWORD PTR [ecx]
1001b81b:	mov    esi,eax
1001b81d:	test   esi,esi
1001b81f:	jl     0x1001b845
1001b821:	mov    eax,DWORD PTR [ebp-0x8]
1001b824:	mov    ecx,DWORD PTR [eax]
1001b826:	lea    edx,[ebp-0x4]
1001b829:	push   edx
1001b82a:	push   DWORD PTR [ebp+0x8]
1001b82d:	push   eax
1001b82e:	call   DWORD PTR [ecx+0x10]
1001b831:	mov    esi,eax
1001b833:	test   esi,esi
1001b835:	jl     0x1001b845
1001b837:	mov    eax,DWORD PTR [ebp-0x4]
1001b83a:	push   DWORD PTR [ebp+0xc]
1001b83d:	mov    ecx,DWORD PTR [eax]
1001b83f:	push   eax
1001b840:	call   DWORD PTR [ecx+0x18]
1001b843:	mov    esi,eax
1001b845:	mov    eax,DWORD PTR [ebp-0x4]
1001b848:	test   eax,eax
1001b84a:	je     0x1001b852
1001b84c:	mov    ecx,DWORD PTR [eax]
1001b84e:	push   eax
1001b84f:	call   DWORD PTR [ecx+0x8]
1001b852:	mov    eax,DWORD PTR [ebp-0x8]
1001b855:	test   eax,eax
1001b857:	je     0x1001b85f
1001b859:	mov    ecx,DWORD PTR [eax]
1001b85b:	push   eax
1001b85c:	call   DWORD PTR [ecx+0x8]
1001b85f:	mov    eax,esi
1001b861:	pop    esi
1001b862:	leave  
1001b863:	ret    0x8
1001b866:	push   ebp
1001b867:	mov    ebp,esp
1001b869:	push   edi
1001b86a:	xor    edi,edi
1001b86c:	xor    eax,eax
1001b86e:	cmp    DWORD PTR ds:0x10081994,edi
1001b874:	je     0x1001b87e
1001b876:	cmp    DWORD PTR ds:0x1008199c,edi
1001b87c:	jne    0x1001b886
1001b87e:	push   DWORD PTR [ebp+0xc]
1001b881:	call   0x1001ba83
1001b886:	cmp    DWORD PTR ds:0x10081994,edi
1001b88c:	je     0x1001b8f6
1001b88e:	cmp    DWORD PTR ds:0x1008199c,edi
1001b894:	push   esi
1001b895:	je     0x1001b8e3
1001b897:	cmp    DWORD PTR [ebp+0x8],0x1
1001b89b:	jne    0x1001b8e3
1001b89d:	push   DWORD PTR [ebx]
1001b89f:	call   DWORD PTR ds:0x100670ac
1001b8a5:	mov    esi,DWORD PTR ds:0x100819a0
1001b8ab:	dec    esi
1001b8ac:	cmp    esi,edi
1001b8ae:	mov    DWORD PTR [ebp+0xc],eax
1001b8b1:	jl     0x1001b8e3
1001b8b3:	mov    edi,esi
1001b8b5:	imul   edi,edi,0xc
1001b8b8:	mov    eax,ds:0x1008199c
1001b8bd:	add    eax,edi
1001b8bf:	mov    ecx,DWORD PTR [eax+0x4]
1001b8c2:	cmp    DWORD PTR [ebp+0xc],ecx
1001b8c5:	jne    0x1001b8db
1001b8c7:	mov    eax,DWORD PTR [eax]
1001b8c9:	add    ecx,ecx
1001b8cb:	push   ecx
1001b8cc:	push   DWORD PTR [ebx]
1001b8ce:	push   eax
1001b8cf:	call   0x10043a74
1001b8d4:	add    esp,0xc
1001b8d7:	test   eax,eax
1001b8d9:	je     0x1001b8fb
1001b8db:	dec    esi
1001b8dc:	sub    edi,0xc
1001b8df:	test   esi,esi
1001b8e1:	jge    0x1001b8b8
1001b8e3:	push   DWORD PTR [ebp+0x10]
1001b8e6:	mov    eax,ds:0x10081994
1001b8eb:	push   DWORD PTR [ebp+0x8]
1001b8ee:	mov    ecx,DWORD PTR [eax]
1001b8f0:	push   ebx
1001b8f1:	push   eax
1001b8f2:	call   DWORD PTR [ecx+0x28]
1001b8f5:	pop    esi
1001b8f6:	pop    edi
1001b8f7:	pop    ebp
1001b8f8:	ret    0xc
1001b8fb:	mov    eax,ds:0x1008199c
1001b900:	imul   esi,esi,0xc
1001b903:	mov    eax,DWORD PTR [esi+eax*1+0x8]
1001b907:	mov    ecx,DWORD PTR [ebp+0x10]
1001b90a:	mov    DWORD PTR [ecx],eax
1001b90c:	xor    eax,eax
1001b90e:	jmp    0x1001b8f5
1001b910:	push   0x18
1001b912:	mov    eax,0x1005fd24
1001b917:	call   0x10059e28
1001b91c:	mov    ebx,DWORD PTR [ebp+0x8]
1001b91f:	mov    eax,DWORD PTR [ebx]
1001b921:	lea    ecx,[ebp-0x24]
1001b924:	push   ecx
1001b925:	push   ebx
1001b926:	call   DWORD PTR [eax+0xc]
1001b929:	xor    ecx,ecx
1001b92b:	cmp    eax,ecx
1001b92d:	jl     0x1001ba79
1001b933:	mov    eax,DWORD PTR [ebp-0x24]
1001b936:	movzx  eax,WORD PTR [eax+0x2c]
1001b93a:	cmp    eax,ecx
1001b93c:	mov    DWORD PTR [ebp-0x1c],ecx
1001b93f:	mov    ds:0x100819a0,eax
1001b944:	mov    DWORD PTR ds:0x1008199c,ecx
1001b94a:	je     0x1001b9cb
1001b94c:	mov    edi,eax
1001b94e:	push   0xc
1001b950:	pop    edx
1001b951:	mul    edx
1001b953:	mov    DWORD PTR [ebp-0x4],ecx
1001b956:	seto   cl
1001b959:	neg    ecx
1001b95b:	or     ecx,eax
1001b95d:	xor    eax,eax
1001b95f:	add    ecx,0x4
1001b962:	setb   al
1001b965:	neg    eax
1001b967:	or     eax,ecx
1001b969:	push   eax
1001b96a:	call   0x100438d7
1001b96f:	pop    ecx
1001b970:	mov    DWORD PTR [ebp-0x20],eax
1001b973:	test   eax,eax
1001b975:	mov    BYTE PTR [ebp-0x4],0x1
1001b979:	je     0x1001b995
1001b97b:	push   0x10001009
1001b980:	push   0x10010937
1001b985:	push   edi
1001b986:	lea    esi,[eax+0x4]
1001b989:	push   0xc
1001b98b:	push   esi
1001b98c:	mov    DWORD PTR [eax],edi
1001b98e:	call   0x10045fb8
1001b993:	jmp    0x1001b997
1001b995:	xor    esi,esi
1001b997:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b99b:	mov    DWORD PTR [ebp-0x1c],esi
1001b99e:	jmp    0x1001b9ad
1001b9a0:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b9a4:	mov    eax,0x1001b9aa
1001b9a9:	ret    
1001b9aa:	mov    ebx,DWORD PTR [ebp+0x8]
1001b9ad:	cmp    DWORD PTR [ebp-0x1c],0x0
1001b9b1:	jne    0x1001b9c6
1001b9b3:	push   DWORD PTR [ebp-0x24]
1001b9b6:	mov    eax,DWORD PTR [ebx]
1001b9b8:	push   ebx
1001b9b9:	call   DWORD PTR [eax+0x4c]
1001b9bc:	mov    eax,0x8007000e
1001b9c1:	jmp    0x1001ba7b
1001b9c6:	mov    eax,ds:0x100819a0
1001b9cb:	and    DWORD PTR [ebp-0x18],0x0
1001b9cf:	test   eax,eax
1001b9d1:	jle    0x1001ba68
1001b9d7:	mov    esi,DWORD PTR [ebp-0x1c]
1001b9da:	mov    ebx,DWORD PTR ds:0x100672b4
1001b9e0:	mov    edi,DWORD PTR [ebp+0x8]
1001b9e3:	mov    eax,DWORD PTR [edi]
1001b9e5:	lea    ecx,[ebp-0x20]
1001b9e8:	push   ecx
1001b9e9:	push   DWORD PTR [ebp-0x18]
1001b9ec:	push   edi
1001b9ed:	call   DWORD PTR [eax+0x14]
1001b9f0:	test   eax,eax
1001b9f2:	jl     0x1001ba50
1001b9f4:	xor    eax,eax
1001b9f6:	mov    DWORD PTR [ebp-0x14],eax
1001b9f9:	push   eax
1001b9fa:	push   eax
1001b9fb:	push   eax
1001b9fc:	mov    DWORD PTR [ebp-0x4],0x3
1001ba03:	mov    ecx,DWORD PTR [edi]
1001ba05:	lea    eax,[ebp-0x14]
1001ba08:	push   eax
1001ba09:	mov    eax,DWORD PTR [ebp-0x20]
1001ba0c:	push   DWORD PTR [eax]
1001ba0e:	push   edi
1001ba0f:	call   DWORD PTR [ecx+0x30]
1001ba12:	test   eax,eax
1001ba14:	jl     0x1001ba3e
1001ba16:	mov    edi,DWORD PTR [ebp-0x14]
1001ba19:	mov    eax,DWORD PTR [esi]
1001ba1b:	and    DWORD PTR [ebp-0x14],0x0
1001ba1f:	cmp    eax,edi
1001ba21:	je     0x1001ba28
1001ba23:	push   eax
1001ba24:	call   ebx
1001ba26:	mov    DWORD PTR [esi],edi
1001ba28:	push   DWORD PTR [esi]
1001ba2a:	call   DWORD PTR ds:0x100672a8
1001ba30:	mov    edi,DWORD PTR [ebp+0x8]
1001ba33:	mov    DWORD PTR [esi+0x4],eax
1001ba36:	mov    eax,DWORD PTR [ebp-0x20]
1001ba39:	mov    eax,DWORD PTR [eax]
1001ba3b:	mov    DWORD PTR [esi+0x8],eax
1001ba3e:	push   DWORD PTR [ebp-0x20]
1001ba41:	mov    eax,DWORD PTR [edi]
1001ba43:	push   edi
1001ba44:	call   DWORD PTR [eax+0x50]
1001ba47:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ba4b:	push   DWORD PTR [ebp-0x14]
1001ba4e:	call   ebx
1001ba50:	inc    DWORD PTR [ebp-0x18]
1001ba53:	mov    eax,DWORD PTR [ebp-0x18]
1001ba56:	add    esi,0xc
1001ba59:	cmp    eax,DWORD PTR ds:0x100819a0
1001ba5f:	jl     0x1001b9e0
1001ba65:	mov    ebx,DWORD PTR [ebp+0x8]
1001ba68:	mov    eax,DWORD PTR [ebp-0x1c]
1001ba6b:	push   DWORD PTR [ebp-0x24]
1001ba6e:	mov    ds:0x1008199c,eax
1001ba73:	mov    eax,DWORD PTR [ebx]
1001ba75:	push   ebx
1001ba76:	call   DWORD PTR [eax+0x4c]
1001ba79:	xor    eax,eax
1001ba7b:	call   0x10059ecd
1001ba80:	ret    0x4
1001ba83:	push   ebp
1001ba84:	sub    esp,0x208
1001ba8a:	lea    ebp,[esp-0x4]
1001ba8e:	mov    eax,ds:0x100801ac
1001ba93:	xor    eax,ebp
1001ba95:	mov    DWORD PTR [ebp+0x208],eax
1001ba9b:	push   0x18
1001ba9d:	mov    eax,0x10060068
1001baa2:	call   0x10059df5
1001baa7:	xor    ebx,ebx
1001baa9:	cmp    DWORD PTR ds:0x10081994,ebx
1001baaf:	je     0x1001bac0
1001bab1:	cmp    DWORD PTR ds:0x1008199c,ebx
1001bab7:	je     0x1001bac0
1001bab9:	xor    eax,eax
1001babb:	jmp    0x1001bc5e
1001bac0:	mov    eax,ds:0x10082c64
1001bac5:	add    eax,0x10
1001bac8:	mov    DWORD PTR [ebp-0x24],eax
1001bacb:	push   eax
1001bacc:	mov    DWORD PTR [ebp-0x4],ebx
1001bacf:	call   DWORD PTR ds:0x100670f8
1001bad5:	cmp    DWORD PTR ds:0x10081994,ebx
1001badb:	mov    BYTE PTR [ebp-0x20],0x1
1001badf:	mov    edi,0x80004005
1001bae4:	jne    0x1001bc39
1001baea:	mov    esi,DWORD PTR ds:0x1008198c
1001baf0:	mov    eax,esi
1001baf2:	mov    ecx,0x10082c68
1001baf7:	mov    DWORD PTR [ebp-0x14],ebx
1001bafa:	call   0x100107af
1001baff:	mov    cx,WORD PTR ds:0x10081990
1001bb06:	test   eax,eax
1001bb08:	mov    ax,ds:0x10081992
1001bb0e:	je     0x1001bb58
1001bb10:	cmp    cx,0xffff
1001bb15:	jne    0x1001bb58
1001bb17:	cmp    ax,cx
1001bb1a:	jne    0x1001bb58
1001bb1c:	mov    esi,0x104
1001bb21:	push   esi
1001bb22:	lea    eax,[ebp+0x0]
1001bb25:	push   eax
1001bb26:	push   DWORD PTR ds:0x10082a8c
1001bb2c:	call   DWORD PTR ds:0x1006711c
1001bb32:	cmp    eax,ebx
1001bb34:	je     0x1001bc3b
1001bb3a:	cmp    eax,esi
1001bb3c:	je     0x1001bc3b
1001bb42:	call   DWORD PTR ds:0x10080ffc
1001bb48:	lea    eax,[ebp-0x14]
1001bb4b:	push   eax
1001bb4c:	lea    eax,[ebp+0x0]
1001bb4f:	push   eax
1001bb50:	call   DWORD PTR ds:0x1006728c
1001bb56:	jmp    0x1001bb6b
1001bb58:	lea    edx,[ebp-0x14]
1001bb5b:	push   edx
1001bb5c:	push   DWORD PTR [ebp+0x214]
1001bb62:	push   eax
1001bb63:	push   ecx
1001bb64:	push   esi
1001bb65:	call   DWORD PTR ds:0x10067288
1001bb6b:	mov    edi,eax
1001bb6d:	cmp    edi,ebx
1001bb6f:	jl     0x1001bc3b
1001bb75:	mov    DWORD PTR [ebp-0x10],ebx
1001bb78:	lea    edx,[ebp-0x10]
1001bb7b:	mov    BYTE PTR [ebp-0x4],0x1
1001bb7f:	mov    eax,DWORD PTR [ebp-0x14]
1001bb82:	mov    ecx,DWORD PTR [eax]
1001bb84:	push   edx
1001bb85:	push   DWORD PTR ds:0x10081988
1001bb8b:	push   eax
1001bb8c:	call   DWORD PTR [ecx+0x18]
1001bb8f:	mov    edi,eax
1001bb91:	cmp    edi,ebx
1001bb93:	jl     0x1001bc1e
1001bb99:	mov    eax,DWORD PTR [ebp-0x10]
1001bb9c:	cmp    eax,ebx
1001bb9e:	mov    DWORD PTR [ebp-0x18],eax
1001bba1:	je     0x1001bbac
1001bba3:	mov    ecx,DWORD PTR [eax]
1001bba5:	push   eax
1001bba6:	call   DWORD PTR [ecx+0x4]
1001bba9:	mov    eax,DWORD PTR [ebp-0x10]
1001bbac:	mov    DWORD PTR [ebp-0x1c],ebx
1001bbaf:	lea    edx,[ebp-0x1c]
1001bbb2:	push   edx
1001bbb3:	push   0x1006eedc
1001bbb8:	mov    BYTE PTR [ebp-0x4],0x3
1001bbbc:	mov    ecx,DWORD PTR [eax]
1001bbbe:	push   eax
1001bbbf:	call   DWORD PTR [ecx]
1001bbc1:	test   eax,eax
1001bbc3:	jl     0x1001bbd1
1001bbc5:	lea    eax,[ebp-0x18]
1001bbc8:	push   eax
1001bbc9:	lea    eax,[ebp-0x1c]
1001bbcc:	call   0x100111db
1001bbd1:	mov    eax,DWORD PTR [ebp-0x18]
1001bbd4:	mov    ds:0x10081994,eax
1001bbd9:	mov    eax,ds:0x10082c64
1001bbde:	mov    ecx,eax
1001bbe0:	add    eax,0x4
1001bbe3:	neg    ecx
1001bbe5:	push   0x10081988
1001bbea:	sbb    ecx,ecx
1001bbec:	push   0x10010bca
1001bbf1:	and    ecx,eax
1001bbf3:	push   ecx
1001bbf4:	mov    DWORD PTR [ebp-0x18],ebx
1001bbf7:	call   0x100108b9
1001bbfc:	mov    BYTE PTR [ebp-0x4],0x2
1001bc00:	mov    eax,DWORD PTR [ebp-0x1c]
1001bc03:	cmp    eax,ebx
1001bc05:	je     0x1001bc0d
1001bc07:	mov    ecx,DWORD PTR [eax]
1001bc09:	push   eax
1001bc0a:	call   DWORD PTR [ecx+0x8]
1001bc0d:	mov    BYTE PTR [ebp-0x4],0x1
1001bc11:	mov    eax,DWORD PTR [ebp-0x18]
1001bc14:	cmp    eax,ebx
1001bc16:	je     0x1001bc1e
1001bc18:	mov    ecx,DWORD PTR [eax]
1001bc1a:	push   eax
1001bc1b:	call   DWORD PTR [ecx+0x8]
1001bc1e:	mov    eax,DWORD PTR [ebp-0x14]
1001bc21:	mov    ecx,DWORD PTR [eax]
1001bc23:	push   eax
1001bc24:	call   DWORD PTR [ecx+0x8]
1001bc27:	mov    BYTE PTR [ebp-0x4],bl
1001bc2a:	mov    eax,DWORD PTR [ebp-0x10]
1001bc2d:	cmp    eax,ebx
1001bc2f:	je     0x1001bc3b
1001bc31:	mov    ecx,DWORD PTR [eax]
1001bc33:	push   eax
1001bc34:	call   DWORD PTR [ecx+0x8]
1001bc37:	jmp    0x1001bc3b
1001bc39:	xor    edi,edi
1001bc3b:	mov    eax,ds:0x10081994
1001bc40:	cmp    eax,ebx
1001bc42:	je     0x1001bc54
1001bc44:	cmp    DWORD PTR ds:0x1008199c,ebx
1001bc4a:	jne    0x1001bc54
1001bc4c:	push   eax
1001bc4d:	call   0x1001b910
1001bc52:	mov    edi,eax
1001bc54:	lea    ecx,[ebp-0x24]
1001bc57:	call   0x100111c4
1001bc5c:	mov    eax,edi
1001bc5e:	mov    ecx,DWORD PTR [ebp-0xc]
1001bc61:	mov    DWORD PTR fs:0x0,ecx
1001bc68:	pop    ecx
1001bc69:	pop    edi
1001bc6a:	pop    esi
1001bc6b:	pop    ebx
1001bc6c:	mov    ecx,DWORD PTR [ebp+0x208]
1001bc72:	xor    ecx,ebp
1001bc74:	call   0x10043615
1001bc79:	add    ebp,0x20c
1001bc7f:	leave  
1001bc80:	ret    0x4
1001bc83:	push   ebp
1001bc84:	sub    esp,0x3e8
1001bc8a:	lea    ebp,[esp-0x4]
1001bc8e:	mov    eax,ds:0x100801ac
1001bc93:	xor    eax,ebp
1001bc95:	mov    DWORD PTR [ebp+0x3e8],eax
1001bc9b:	push   0x18
1001bc9d:	mov    eax,0x10060020
1001bca2:	call   0x10059df5
1001bca7:	mov    eax,DWORD PTR [ebp+0x3f4]
1001bcad:	xor    ebx,ebx
1001bcaf:	mov    esi,ecx
1001bcb1:	cmp    esi,ebx
1001bcb3:	mov    DWORD PTR [ebp-0x20],eax
1001bcb6:	mov    DWORD PTR [eax],ebx
1001bcb8:	je     0x1001bdef
1001bcbe:	mov    eax,DWORD PTR [esi]
1001bcc0:	lea    ecx,[ebp-0x14]
1001bcc3:	push   ecx
1001bcc4:	push   0x2
1001bcc6:	lea    ecx,[ebp-0x1c]
1001bcc9:	push   ecx
1001bcca:	push   esi
1001bccb:	call   DWORD PTR [eax+0xc]
1001bcce:	cmp    eax,ebx
1001bcd0:	jl     0x1001bdf1
1001bcd6:	mov    eax,DWORD PTR [esi]
1001bcd8:	lea    ecx,[ebp-0x14]
1001bcdb:	push   ecx
1001bcdc:	push   0x4
1001bcde:	lea    ecx,[ebp-0x24]
1001bce1:	push   ecx
1001bce2:	push   esi
1001bce3:	call   DWORD PTR [eax+0xc]
1001bce6:	cmp    eax,ebx
1001bce8:	jl     0x1001bdf1
1001bcee:	mov    eax,DWORD PTR [esi]
1001bcf0:	lea    ecx,[ebp-0x14]
1001bcf3:	push   ecx
1001bcf4:	push   0x4
1001bcf6:	lea    ecx,[ebp-0x18]
1001bcf9:	push   ecx
1001bcfa:	push   esi
1001bcfb:	call   DWORD PTR [eax+0xc]
1001bcfe:	cmp    eax,ebx
1001bd00:	jl     0x1001bdf1
1001bd06:	cmp    DWORD PTR [ebp-0x18],ebx
1001bd09:	jbe    0x1001bd8f
1001bd0f:	jne    0x1001bd37
1001bd11:	xor    edi,edi
1001bd13:	mov    DWORD PTR [ebp-0x10],edi
1001bd16:	push   edi
1001bd17:	mov    DWORD PTR [ebp-0x4],ebx
1001bd1a:	call   DWORD PTR ds:0x100672a8
1001bd20:	test   eax,eax
1001bd22:	jne    0x1001bd54
1001bd24:	mov    esi,0x8007000e
1001bd29:	push   edi
1001bd2a:	call   DWORD PTR ds:0x100672b4
1001bd30:	mov    eax,esi
1001bd32:	jmp    0x1001bdf1
1001bd37:	push   DWORD PTR [ebp-0x18]
1001bd3a:	push   ebx
1001bd3b:	call   DWORD PTR ds:0x1006729c
1001bd41:	mov    edi,eax
1001bd43:	cmp    edi,ebx
1001bd45:	mov    DWORD PTR [ebp-0x10],edi
1001bd48:	jne    0x1001bd16
1001bd4a:	push   0x8007000e
1001bd4f:	call   0x10001f2d
1001bd54:	mov    eax,DWORD PTR [ebp-0x18]
1001bd57:	lea    eax,[eax+eax*1+0x2]
1001bd5b:	push   eax
1001bd5c:	push   ebx
1001bd5d:	push   edi
1001bd5e:	call   0x10045dc0
1001bd63:	mov    eax,DWORD PTR [esi]
1001bd65:	add    esp,0xc
1001bd68:	lea    ecx,[ebp-0x14]
1001bd6b:	push   ecx
1001bd6c:	mov    ecx,DWORD PTR [ebp-0x18]
1001bd6f:	add    ecx,ecx
1001bd71:	push   ecx
1001bd72:	push   edi
1001bd73:	push   esi
1001bd74:	call   DWORD PTR [eax+0xc]
1001bd77:	cmp    eax,ebx
1001bd79:	jge    0x1001bd7f
1001bd7b:	mov    esi,eax
1001bd7d:	jmp    0x1001bd29
1001bd7f:	mov    eax,DWORD PTR [ebp-0x20]
1001bd82:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bd86:	push   ebx
1001bd87:	mov    DWORD PTR [eax],edi
1001bd89:	call   DWORD PTR ds:0x100672b4
1001bd8f:	mov    ax,WORD PTR [ebp-0x1c]
1001bd93:	cmp    ax,0x37a
1001bd97:	je     0x1001bdaf
1001bd99:	cmp    ax,0x37b
1001bd9d:	je     0x1001bdaf
1001bd9f:	sub    ax,0x376
1001bda3:	neg    ax
1001bda6:	sbb    eax,eax
1001bda8:	and    eax,0x80004005
1001bdad:	jmp    0x1001bdf1
1001bdaf:	mov    eax,DWORD PTR [esi]
1001bdb1:	lea    ecx,[ebp-0x14]
1001bdb4:	push   ecx
1001bdb5:	push   0x4
1001bdb7:	lea    ecx,[ebp-0x10]
1001bdba:	push   ecx
1001bdbb:	push   esi
1001bdbc:	call   DWORD PTR [eax+0xc]
1001bdbf:	cmp    eax,ebx
1001bdc1:	jl     0x1001bdf1
1001bdc3:	sub    DWORD PTR [ebp-0x10],0x4
1001bdc7:	je     0x1001bdef
1001bdc9:	mov    edi,0x3e8
1001bdce:	cmp    DWORD PTR [ebp-0x10],edi
1001bdd1:	mov    eax,DWORD PTR [ebp-0x10]
1001bdd4:	jb     0x1001bdd8
1001bdd6:	mov    eax,edi
1001bdd8:	mov    ecx,DWORD PTR [esi]
1001bdda:	lea    edx,[ebp-0x14]
1001bddd:	push   edx
1001bdde:	push   eax
1001bddf:	lea    eax,[ebp+0x0]
1001bde2:	push   eax
1001bde3:	push   esi
1001bde4:	call   DWORD PTR [ecx+0xc]
1001bde7:	mov    eax,DWORD PTR [ebp-0x14]
1001bdea:	sub    DWORD PTR [ebp-0x10],eax
1001bded:	jne    0x1001bdce
1001bdef:	xor    eax,eax
1001bdf1:	mov    ecx,DWORD PTR [ebp-0xc]
1001bdf4:	mov    DWORD PTR fs:0x0,ecx
1001bdfb:	pop    ecx
1001bdfc:	pop    edi
1001bdfd:	pop    esi
1001bdfe:	pop    ebx
1001bdff:	mov    ecx,DWORD PTR [ebp+0x3e8]
1001be05:	xor    ecx,ebp
1001be07:	call   0x10043615
1001be0c:	add    ebp,0x3ec
1001be12:	leave  
1001be13:	ret    
1001be14:	push   ebp
1001be15:	mov    ebp,esp
1001be17:	sub    esp,0x14
1001be1a:	mov    eax,ds:0x100801ac
1001be1f:	xor    eax,ebp
1001be21:	mov    DWORD PTR [ebp-0x4],eax
1001be24:	mov    eax,DWORD PTR [ebp+0x8]
1001be27:	push   DWORD PTR [eax]
1001be29:	call   DWORD PTR ds:0x100672d8
1001be2f:	push   0x8
1001be31:	lea    ecx,[ebp-0x14]
1001be34:	push   ecx
1001be35:	push   eax
1001be36:	call   DWORD PTR ds:0x100672cc
1001be3c:	test   eax,eax
1001be3e:	je     0x1001be54
1001be40:	push   0x1007157c
1001be45:	lea    eax,[ebp-0x14]
1001be48:	push   eax
1001be49:	call   DWORD PTR ds:0x10067168
1001be4f:	neg    eax
1001be51:	sbb    eax,eax
1001be53:	inc    eax
1001be54:	mov    ecx,DWORD PTR [ebp-0x4]
1001be57:	xor    ecx,ebp
1001be59:	call   0x10043615
1001be5e:	leave  
1001be5f:	ret    0x4
1001be62:	cmp    DWORD PTR [edi+0xc],0x0
1001be66:	push   esi
1001be67:	mov    esi,eax
1001be69:	jne    0x1001be77
1001be6b:	call   0x100574ab
1001be70:	test   eax,eax
1001be72:	mov    DWORD PTR [edi+0xc],eax
1001be75:	je     0x1001bea6
1001be77:	mov    eax,DWORD PTR [edi+0xc]
1001be7a:	mov    ecx,DWORD PTR [esp+0x8]
1001be7e:	sub    esi,eax
1001be80:	push   0xd
1001be82:	sub    esi,0xd
1001be85:	push   eax
1001be86:	mov    DWORD PTR [eax],0x42444c7
1001be8c:	mov    DWORD PTR [eax+0x4],ecx
1001be8f:	mov    BYTE PTR [eax+0x8],0xe9
1001be93:	mov    DWORD PTR [eax+0x9],esi
1001be96:	call   DWORD PTR ds:0x1006712c
1001be9c:	push   eax
1001be9d:	call   DWORD PTR ds:0x10067158
1001bea3:	xor    eax,eax
1001bea5:	inc    eax
1001bea6:	pop    esi
1001bea7:	ret    0x4
1001beaa:	push   ecx
1001beab:	push   ecx
1001beac:	test   edi,edi
1001beae:	jne    0x1001beba
1001beb0:	push   0x80004003
1001beb5:	call   0x10001f2d
1001beba:	test   esi,esi
1001bebc:	je     0x1001beb0
1001bebe:	push   ebx
1001bebf:	push   ebp
1001bec0:	push   0x0
1001bec2:	call   DWORD PTR ds:0x10067330
1001bec8:	mov    ebp,DWORD PTR ds:0x10067028
1001bece:	mov    ebx,eax
1001bed0:	push   0x58
1001bed2:	push   ebx
1001bed3:	call   ebp
1001bed5:	push   0x5a
1001bed7:	push   ebx
1001bed8:	mov    DWORD PTR [esp+0x10],eax
1001bedc:	call   ebp
1001bede:	push   ebx
1001bedf:	push   0x0
1001bee1:	mov    DWORD PTR [esp+0x14],eax
1001bee5:	call   DWORD PTR ds:0x10067300
1001beeb:	mov    ebx,DWORD PTR ds:0x10067160
1001bef1:	mov    ebp,0x9ec
1001bef6:	push   ebp
1001bef7:	push   DWORD PTR [edi]
1001bef9:	push   DWORD PTR [esp+0x10]
1001befd:	call   ebx
1001beff:	push   ebp
1001bf00:	mov    DWORD PTR [esi],eax
1001bf02:	push   DWORD PTR [edi+0x4]
1001bf05:	push   DWORD PTR [esp+0x14]
1001bf09:	call   ebx
1001bf0b:	pop    ebp
1001bf0c:	mov    DWORD PTR [esi+0x4],eax
1001bf0f:	pop    ebx
1001bf10:	pop    ecx
1001bf11:	pop    ecx
1001bf12:	ret    
1001bf13:	push   ecx
1001bf14:	push   ecx
1001bf15:	test   edi,edi
1001bf17:	jne    0x1001bf23
1001bf19:	push   0x80004003
1001bf1e:	call   0x10001f2d
1001bf23:	test   esi,esi
1001bf25:	je     0x1001bf19
1001bf27:	push   ebx
1001bf28:	push   ebp
1001bf29:	push   0x0
1001bf2b:	call   DWORD PTR ds:0x10067330
1001bf31:	mov    ebp,DWORD PTR ds:0x10067028
1001bf37:	mov    ebx,eax
1001bf39:	push   0x58
1001bf3b:	push   ebx
1001bf3c:	call   ebp
1001bf3e:	push   0x5a
1001bf40:	push   ebx
1001bf41:	mov    DWORD PTR [esp+0x10],eax
1001bf45:	call   ebp
1001bf47:	push   ebx
1001bf48:	push   0x0
1001bf4a:	mov    DWORD PTR [esp+0x14],eax
1001bf4e:	call   DWORD PTR ds:0x10067300
1001bf54:	push   DWORD PTR [esp+0x8]
1001bf58:	mov    ebx,DWORD PTR ds:0x10067160
1001bf5e:	push   DWORD PTR [edi]
1001bf60:	mov    ebp,0x9ec
1001bf65:	push   ebp
1001bf66:	call   ebx
1001bf68:	push   DWORD PTR [esp+0xc]
1001bf6c:	mov    DWORD PTR [esi],eax
1001bf6e:	push   DWORD PTR [edi+0x4]
1001bf71:	push   ebp
1001bf72:	call   ebx
1001bf74:	pop    ebp
1001bf75:	mov    DWORD PTR [esi+0x4],eax
1001bf78:	pop    ebx
1001bf79:	pop    ecx
1001bf7a:	pop    ecx
1001bf7b:	ret    
1001bf7c:	push   0x20
1001bf7e:	mov    eax,0x1005fb60
1001bf83:	call   0x10059e5e
1001bf88:	test   ebx,ebx
1001bf8a:	mov    eax,DWORD PTR [ebp+0x8]
1001bf8d:	mov    esi,ecx
1001bf8f:	mov    DWORD PTR [ebp-0x2c],eax
1001bf92:	jne    0x1001bf9e
1001bf94:	mov    eax,0x80004003
1001bf99:	jmp    0x1001c106
1001bf9e:	and    DWORD PTR [ebx],0x0
1001bfa1:	test   esi,esi
1001bfa3:	mov    DWORD PTR [ebp-0x24],0x80004005
1001bfaa:	mov    BYTE PTR [edi],0x0
1001bfad:	je     0x1001c104
1001bfb3:	movzx  eax,WORD PTR [esi]
1001bfb6:	test   ax,ax
1001bfb9:	je     0x1001c104
1001bfbf:	cmp    ax,0x4d
1001bfc3:	je     0x1001bfcb
1001bfc5:	cmp    ax,0x6d
1001bfc9:	jne    0x1001c03f
1001bfcb:	movzx  eax,WORD PTR [esi+0x2]
1001bfcf:	cmp    ax,0x53
1001bfd3:	je     0x1001bfdb
1001bfd5:	cmp    ax,0x73
1001bfd9:	jne    0x1001c03f
1001bfdb:	movzx  eax,WORD PTR [esi+0x4]
1001bfdf:	cmp    ax,0x48
1001bfe3:	je     0x1001bfeb
1001bfe5:	cmp    ax,0x68
1001bfe9:	jne    0x1001c03f
1001bfeb:	movzx  eax,WORD PTR [esi+0x6]
1001bfef:	cmp    ax,0x54
1001bff3:	je     0x1001bffb
1001bff5:	cmp    ax,0x74
1001bff9:	jne    0x1001c03f
1001bffb:	movzx  eax,WORD PTR [esi+0x8]
1001bfff:	cmp    ax,0x4d
1001c003:	je     0x1001c00b
1001c005:	cmp    ax,0x6d
1001c009:	jne    0x1001c03f
1001c00b:	movzx  eax,WORD PTR [esi+0xa]
1001c00f:	cmp    ax,0x4c
1001c013:	je     0x1001c01b
1001c015:	cmp    ax,0x6c
1001c019:	jne    0x1001c03f
1001c01b:	cmp    WORD PTR [esi+0xc],0x3a
1001c020:	jne    0x1001c03f
1001c022:	push   ebx
1001c023:	push   0x1006eecc
1001c028:	push   0x1
1001c02a:	push   0x0
1001c02c:	push   0x10071b98
1001c031:	call   DWORD PTR ds:0x10067440
1001c037:	mov    BYTE PTR [edi],0x1
1001c03a:	jmp    0x1001c0fc
1001c03f:	mov    eax,esi
1001c041:	call   0x1001b73f
1001c046:	test   eax,eax
1001c048:	je     0x1001c05b
1001c04a:	push   ebx
1001c04b:	push   0x1006eecc
1001c050:	push   0x1
1001c052:	push   0x0
1001c054:	push   0x10071ba8
1001c059:	jmp    0x1001c031
1001c05b:	push   esi
1001c05c:	call   DWORD PTR ds:0x100670ac
1001c062:	cmp    eax,0xff
1001c067:	jge    0x1001c0ff
1001c06d:	cmp    WORD PTR [esi],0x7b
1001c071:	lea    eax,[ebp-0x20]
1001c074:	push   eax
1001c075:	push   esi
1001c076:	jne    0x1001c080
1001c078:	call   DWORD PTR ds:0x10067450
1001c07e:	jmp    0x1001c086
1001c080:	call   DWORD PTR ds:0x10067444
1001c086:	xor    esi,esi
1001c088:	cmp    eax,esi
1001c08a:	mov    DWORD PTR [ebp-0x24],eax
1001c08d:	jl     0x1001c0ff
1001c08f:	push   DWORD PTR [ebp-0x2c]
1001c092:	call   DWORD PTR ds:0x100672a8
1001c098:	test   eax,eax
1001c09a:	je     0x1001c0e9
1001c09c:	mov    DWORD PTR [ebp-0x28],esi
1001c09f:	lea    eax,[ebp-0x28]
1001c0a2:	push   eax
1001c0a3:	push   0x10071bb8
1001c0a8:	push   esi
1001c0a9:	push   0x1
1001c0ab:	lea    eax,[ebp-0x20]
1001c0ae:	push   eax
1001c0af:	mov    DWORD PTR [ebp-0x4],esi
1001c0b2:	call   DWORD PTR ds:0x10067418
1001c0b8:	cmp    eax,esi
1001c0ba:	mov    DWORD PTR [ebp-0x24],eax
1001c0bd:	jl     0x1001c0d6
1001c0bf:	mov    eax,DWORD PTR [ebp-0x28]
1001c0c2:	mov    ecx,DWORD PTR [eax]
1001c0c4:	push   ebx
1001c0c5:	push   DWORD PTR [ebp-0x2c]
1001c0c8:	push   0x1006eecc
1001c0cd:	push   esi
1001c0ce:	push   esi
1001c0cf:	push   eax
1001c0d0:	call   DWORD PTR [ecx+0x1c]
1001c0d3:	mov    DWORD PTR [ebp-0x24],eax
1001c0d6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c0da:	mov    eax,DWORD PTR [ebp-0x28]
1001c0dd:	cmp    eax,esi
1001c0df:	je     0x1001c0ff
1001c0e1:	mov    ecx,DWORD PTR [eax]
1001c0e3:	push   eax
1001c0e4:	call   DWORD PTR [ecx+0x8]
1001c0e7:	jmp    0x1001c0ff
1001c0e9:	push   ebx
1001c0ea:	push   0x1006eecc
1001c0ef:	push   0x1
1001c0f1:	push   esi
1001c0f2:	lea    eax,[ebp-0x20]
1001c0f5:	push   eax
1001c0f6:	call   DWORD PTR ds:0x10067440
1001c0fc:	mov    DWORD PTR [ebp-0x24],eax
1001c0ff:	mov    eax,DWORD PTR [ebp-0x24]
1001c102:	jmp    0x1001c106
1001c104:	xor    eax,eax
1001c106:	call   0x10059ee1
1001c10b:	ret    
1001c10c:	push   esi
1001c10d:	push   edi
1001c10e:	mov    edi,DWORD PTR [esp+0x10]
1001c112:	xor    ecx,ecx
1001c114:	cmp    edi,ecx
1001c116:	jne    0x1001c11f
1001c118:	mov    eax,0x80004003
1001c11d:	jmp    0x1001c141
1001c11f:	mov    esi,DWORD PTR [esp+0xc]
1001c123:	cmp    DWORD PTR [esi-0x20],ecx
1001c126:	jne    0x1001c13a
1001c128:	push   ecx
1001c129:	mov    eax,esp
1001c12b:	mov    DWORD PTR [eax],ecx
1001c12d:	push   ecx
1001c12e:	mov    eax,esp
1001c130:	mov    DWORD PTR [eax],ecx
1001c132:	lea    eax,[esi-0x24]
1001c135:	call   0x10020294
1001c13a:	mov    eax,DWORD PTR [esi-0x20]
1001c13d:	mov    DWORD PTR [edi],eax
1001c13f:	xor    eax,eax
1001c141:	pop    edi
1001c142:	pop    esi
1001c143:	ret    0x8
1001c146:	mov    eax,0x800401a1
1001c14b:	ret    0x8
1001c14e:	push   esi
1001c14f:	mov    esi,DWORD PTR [esp+0x8]
1001c153:	push   edi
1001c154:	mov    edi,DWORD PTR [esp+0x10]
1001c158:	add    esi,0x8
1001c15b:	cmp    DWORD PTR [esi],edi
1001c15d:	je     0x1001c164
1001c15f:	call   0x10007961
1001c164:	pop    edi
1001c165:	xor    eax,eax
1001c167:	pop    esi
1001c168:	ret    0xc
1001c16b:	xor    eax,eax
1001c16d:	ret    0x10
1001c170:	xor    eax,eax
1001c172:	ret    0x8
1001c175:	xor    eax,eax
1001c177:	ret    0x18
1001c17a:	push   esi
1001c17b:	mov    esi,DWORD PTR [esp+0x8]
1001c17f:	xor    ecx,ecx
1001c181:	cmp    DWORD PTR [esi-0x20],ecx
1001c184:	jne    0x1001c198
1001c186:	push   ecx
1001c187:	mov    eax,esp
1001c189:	mov    DWORD PTR [eax],ecx
1001c18b:	push   ecx
1001c18c:	mov    eax,esp
1001c18e:	mov    DWORD PTR [eax],ecx
1001c190:	lea    eax,[esi-0x24]
1001c193:	call   0x100202e4
1001c198:	mov    eax,DWORD PTR [esi-0x20]
1001c19b:	mov    ecx,DWORD PTR [esp+0xc]
1001c19f:	mov    DWORD PTR [ecx],eax
1001c1a1:	xor    eax,eax
1001c1a3:	pop    esi
1001c1a4:	ret    0x8
1001c1a7:	mov    eax,ds:0x10067334
1001c1ac:	push   edi
1001c1ad:	xor    edi,edi
1001c1af:	mov    DWORD PTR [esi+0x50],edi
1001c1b2:	mov    DWORD PTR [esi+0x4],edi
1001c1b5:	mov    DWORD PTR [esi+0x14],edi
1001c1b8:	mov    DWORD PTR [esi+0x20],eax
1001c1bb:	mov    DWORD PTR [esi+0x18],edi
1001c1be:	mov    DWORD PTR [esi+0x1c],edi
1001c1c1:	mov    DWORD PTR [esi+0x3c],edi
1001c1c4:	mov    DWORD PTR [esi+0x54],edi
1001c1c7:	mov    DWORD PTR [esi+0x60],edi
1001c1ca:	mov    DWORD PTR [esi+0x64],edi
1001c1cd:	mov    DWORD PTR [esi+0x68],edi
1001c1d0:	mov    DWORD PTR [esi+0x6c],edi
1001c1d3:	mov    DWORD PTR [esi+0x70],edi
1001c1d6:	mov    DWORD PTR [esi+0x74],edi
1001c1d9:	mov    DWORD PTR [esi+0x78],edi
1001c1dc:	mov    DWORD PTR [esi+0x7c],edi
1001c1df:	mov    DWORD PTR [esi+0xd8],edi
1001c1e5:	mov    DWORD PTR [esi+0xdc],edi
1001c1eb:	mov    DWORD PTR [esi+0xe8],edi
1001c1f1:	mov    eax,DWORD PTR [esi+0xc8]
1001c1f7:	and    DWORD PTR [esi+0x98],0xffffffc0
1001c1fe:	and    eax,0xfffffffb
1001c201:	or     eax,0x3
1001c204:	push   0x8
1001c206:	mov    DWORD PTR [esi+0xc8],eax
1001c20c:	mov    DWORD PTR [esi+0xcc],edi
1001c212:	call   DWORD PTR ds:0x1006731c
1001c218:	and    DWORD PTR [esi+0x98],0xffffffbf
1001c21f:	mov    DWORD PTR [esi+0xd0],eax
1001c225:	mov    eax,DWORD PTR [esi+0xc8]
1001c22b:	and    eax,0xffffffaf
1001c22e:	or     eax,0x28
1001c231:	mov    DWORD PTR [esi+0xe4],edi
1001c237:	mov    DWORD PTR [esi+0xc8],eax
1001c23d:	mov    DWORD PTR [esi+0x58],edi
1001c240:	mov    DWORD PTR [esi+0xc4],edi
1001c246:	mov    DWORD PTR [esi+0xd4],0x400
1001c250:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c25a:	mov    DWORD PTR [esi+0xe0],0x4
1001c264:	mov    BYTE PTR [esi+0x5c],0x1
1001c268:	mov    eax,esi
1001c26a:	pop    edi
1001c26b:	ret    
1001c26c:	push   esi
1001c26d:	mov    esi,eax
1001c26f:	push   DWORD PTR [esi+0xe8]
1001c275:	call   DWORD PTR ds:0x100672b4
1001c27b:	mov    eax,DWORD PTR [esi+0xdc]
1001c281:	test   eax,eax
1001c283:	je     0x1001c28b
1001c285:	mov    ecx,DWORD PTR [eax]
1001c287:	push   eax
1001c288:	call   DWORD PTR [ecx+0x8]
1001c28b:	mov    eax,DWORD PTR [esi+0xd8]
1001c291:	test   eax,eax
1001c293:	je     0x1001c29b
1001c295:	mov    ecx,DWORD PTR [eax]
1001c297:	push   eax
1001c298:	call   DWORD PTR [ecx+0x8]
1001c29b:	mov    eax,DWORD PTR [esi+0x7c]
1001c29e:	test   eax,eax
1001c2a0:	je     0x1001c2a8
1001c2a2:	mov    ecx,DWORD PTR [eax]
1001c2a4:	push   eax
1001c2a5:	call   DWORD PTR [ecx+0x8]
1001c2a8:	mov    eax,DWORD PTR [esi+0x78]
1001c2ab:	test   eax,eax
1001c2ad:	je     0x1001c2b5
1001c2af:	mov    ecx,DWORD PTR [eax]
1001c2b1:	push   eax
1001c2b2:	call   DWORD PTR [ecx+0x8]
1001c2b5:	mov    eax,DWORD PTR [esi+0x74]
1001c2b8:	test   eax,eax
1001c2ba:	je     0x1001c2c2
1001c2bc:	mov    ecx,DWORD PTR [eax]
1001c2be:	push   eax
1001c2bf:	call   DWORD PTR [ecx+0x8]
1001c2c2:	mov    eax,DWORD PTR [esi+0x70]
1001c2c5:	test   eax,eax
1001c2c7:	je     0x1001c2cf
1001c2c9:	mov    ecx,DWORD PTR [eax]
1001c2cb:	push   eax
1001c2cc:	call   DWORD PTR [ecx+0x8]
1001c2cf:	mov    eax,DWORD PTR [esi+0x6c]
1001c2d2:	test   eax,eax
1001c2d4:	je     0x1001c2dc
1001c2d6:	mov    ecx,DWORD PTR [eax]
1001c2d8:	push   eax
1001c2d9:	call   DWORD PTR [ecx+0x8]
1001c2dc:	mov    eax,DWORD PTR [esi+0x68]
1001c2df:	test   eax,eax
1001c2e1:	je     0x1001c2e9
1001c2e3:	mov    ecx,DWORD PTR [eax]
1001c2e5:	push   eax
1001c2e6:	call   DWORD PTR [ecx+0x8]
1001c2e9:	mov    eax,DWORD PTR [esi+0x64]
1001c2ec:	test   eax,eax
1001c2ee:	je     0x1001c2f6
1001c2f0:	mov    ecx,DWORD PTR [eax]
1001c2f2:	push   eax
1001c2f3:	call   DWORD PTR [ecx+0x8]
1001c2f6:	mov    eax,DWORD PTR [esi+0x60]
1001c2f9:	test   eax,eax
1001c2fb:	je     0x1001c303
1001c2fd:	mov    ecx,DWORD PTR [eax]
1001c2ff:	push   eax
1001c300:	call   DWORD PTR [ecx+0x8]
1001c303:	mov    eax,DWORD PTR [esi+0x54]
1001c306:	test   eax,eax
1001c308:	je     0x1001c310
1001c30a:	mov    ecx,DWORD PTR [eax]
1001c30c:	push   eax
1001c30d:	call   DWORD PTR [ecx+0x8]
1001c310:	mov    eax,DWORD PTR [esi+0x3c]
1001c313:	test   eax,eax
1001c315:	je     0x1001c31d
1001c317:	mov    ecx,DWORD PTR [eax]
1001c319:	push   eax
1001c31a:	call   DWORD PTR [ecx+0x8]
1001c31d:	mov    esi,DWORD PTR [esi+0x14]
1001c320:	test   esi,esi
1001c322:	je     0x1001c32a
1001c324:	push   esi
1001c325:	call   0x100573fe
1001c32a:	pop    esi
1001c32b:	ret    
1001c32c:	mov    eax,DWORD PTR [ecx]
1001c32e:	call   DWORD PTR [eax+0x10]
1001c331:	mov    ecx,DWORD PTR [eax]
1001c333:	push   eax
1001c334:	call   DWORD PTR [ecx+0x8]
1001c337:	ret    0x4
1001c33a:	push   ebp
1001c33b:	mov    ebp,esp
1001c33d:	and    esp,0xfffffff8
1001c340:	sub    esp,0xc
1001c343:	push   ebx
1001c344:	push   esi
1001c345:	push   edi
1001c346:	mov    edi,ecx
1001c348:	xor    ecx,ecx
1001c34a:	cmp    DWORD PTR [ebp+0x1c],ecx
1001c34d:	jne    0x1001c75f
1001c353:	mov    eax,DWORD PTR [ebp+0xc]
1001c356:	cmp    eax,0x14
1001c359:	jne    0x1001c37b
1001c35b:	xor    esi,esi
1001c35d:	inc    esi
1001c35e:	cmp    DWORD PTR [edi+0x70],ecx
1001c361:	mov    eax,esi
1001c363:	jne    0x1001c367
1001c365:	xor    eax,eax
1001c367:	cmp    eax,ecx
1001c369:	mov    ebx,DWORD PTR [ebp+0x18]
1001c36c:	mov    DWORD PTR [ebx],esi
1001c36e:	je     0x1001c3f9
1001c374:	mov    eax,esi
1001c376:	jmp    0x1001c761
1001c37b:	cmp    eax,0xf
1001c37e:	jne    0x1001c3ac
1001c380:	lea    eax,[esp+0xc]
1001c384:	push   eax
1001c385:	mov    esi,edi
1001c387:	mov    DWORD PTR [esp+0x10],0x1
1001c38f:	call   0x1001cb76
1001c394:	cmp    DWORD PTR [esp+0xc],0x0
1001c399:	mov    ecx,DWORD PTR [ebp+0x18]
1001c39c:	mov    DWORD PTR [ecx],eax
1001c39e:	je     0x1001c540
1001c3a4:	xor    eax,eax
1001c3a6:	inc    eax
1001c3a7:	jmp    0x1001c761
1001c3ac:	cmp    eax,0x5
1001c3af:	jne    0x1001c3ca
1001c3b1:	mov    ecx,DWORD PTR [ebp+0x14]
1001c3b4:	lea    eax,[esp+0xc]
1001c3b8:	push   eax
1001c3b9:	mov    ebx,edi
1001c3bb:	mov    DWORD PTR [esp+0x10],0x1
1001c3c3:	call   0x1001ca6a
1001c3c8:	jmp    0x1001c394
1001c3ca:	cmp    eax,0x21
1001c3cd:	jne    0x1001c4eb
1001c3d3:	lea    eax,[esp+0xc]
1001c3d7:	push   eax
1001c3d8:	mov    ecx,edi
1001c3da:	mov    DWORD PTR [esp+0x10],0x1
1001c3e2:	call   0x1001c926
1001c3e7:	cmp    DWORD PTR [esp+0xc],0x0
1001c3ec:	mov    ecx,DWORD PTR [ebp+0x18]
1001c3ef:	mov    DWORD PTR [ecx],eax
1001c3f1:	jne    0x1001c3a4
1001c3f3:	xor    esi,esi
1001c3f5:	mov    ebx,DWORD PTR [ebp+0x18]
1001c3f8:	inc    esi
1001c3f9:	mov    eax,DWORD PTR [edi+0x98]
1001c3ff:	test   al,0x8
1001c401:	mov    ecx,DWORD PTR [ebp+0xc]
1001c404:	je     0x1001c49f
1001c40a:	lea    edx,[ecx-0x200]
1001c410:	cmp    edx,0xd
1001c413:	ja     0x1001c49f
1001c419:	and    al,0x10
1001c41b:	neg    al
1001c41d:	sbb    eax,eax
1001c41f:	and    eax,0x3
1001c422:	mov    DWORD PTR [esp+0x14],eax
1001c426:	jne    0x1001c464
1001c428:	mov    eax,DWORD PTR [edi+0x70]
1001c42b:	test   eax,eax
1001c42d:	je     0x1001c49f
1001c42f:	movsx  ecx,WORD PTR [ebp+0x14]
1001c433:	mov    DWORD PTR [esp+0xc],ecx
1001c437:	mov    ecx,DWORD PTR [ebp+0x14]
1001c43a:	shr    ecx,0x10
1001c43d:	movsx  ecx,cx
1001c440:	lea    edx,[esp+0x14]
1001c444:	push   edx
1001c445:	push   0x0
1001c447:	mov    DWORD PTR [esp+0x18],ecx
1001c44b:	push   DWORD PTR [esp+0x18]
1001c44f:	mov    ecx,DWORD PTR [eax]
1001c451:	push   DWORD PTR [esp+0x18]
1001c455:	lea    edx,[edi+0xb4]
1001c45b:	push   edx
1001c45c:	push   esi
1001c45d:	push   eax
1001c45e:	call   DWORD PTR [ecx+0x30]
1001c461:	mov    ecx,DWORD PTR [ebp+0xc]
1001c464:	cmp    DWORD PTR [esp+0x14],0x3
1001c469:	jne    0x1001c49f
1001c46b:	mov    eax,0x200
1001c470:	cmp    ecx,eax
1001c472:	jne    0x1001c549
1001c478:	lea    ecx,[esp+0xc]
1001c47c:	push   ecx
1001c47d:	push   DWORD PTR [ebp+0x14]
1001c480:	push   DWORD PTR [ebp+0x10]
1001c483:	push   eax
1001c484:	mov    ecx,edi
1001c486:	mov    DWORD PTR [esp+0x1c],esi
1001c48a:	call   0x1001cb39
1001c48f:	cmp    DWORD PTR [esp+0xc],0x0
1001c494:	mov    DWORD PTR [ebx],eax
1001c496:	jne    0x1001c374
1001c49c:	mov    ecx,DWORD PTR [ebp+0xc]
1001c49f:	mov    eax,DWORD PTR [edi+0x98]
1001c4a5:	mov    edx,eax
1001c4a7:	shr    edx,0x2
1001c4aa:	and    edx,eax
1001c4ac:	test   dl,0x8
1001c4af:	je     0x1001c6b6
1001c4b5:	mov    eax,0x100
1001c4ba:	cmp    ecx,eax
1001c4bc:	jne    0x1001c5c6
1001c4c2:	lea    ecx,[esp+0xc]
1001c4c6:	push   ecx
1001c4c7:	push   DWORD PTR [ebp+0x14]
1001c4ca:	push   DWORD PTR [ebp+0x10]
1001c4cd:	push   eax
1001c4ce:	mov    ecx,edi
1001c4d0:	mov    DWORD PTR [esp+0x1c],esi
1001c4d4:	call   0x1001caf7
1001c4d9:	cmp    DWORD PTR [esp+0xc],0x0
1001c4de:	mov    DWORD PTR [ebx],eax
1001c4e0:	je     0x1001c6e6
1001c4e6:	jmp    0x1001c374
1001c4eb:	cmp    eax,0x7
1001c4ee:	jne    0x1001c522
1001c4f0:	lea    eax,[edi+0x98]
1001c4f6:	or     DWORD PTR [eax],0x20
1001c4f9:	test   BYTE PTR [eax],0x40
1001c4fc:	mov    DWORD PTR [esp+0xc],0x1
1001c504:	jne    0x1001c517
1001c506:	lea    eax,[esp+0xc]
1001c50a:	push   eax
1001c50b:	mov    esi,edi
1001c50d:	call   0x1001c9c0
1001c512:	jmp    0x1001c3e7
1001c517:	mov    DWORD PTR [esp+0xc],ecx
1001c51b:	xor    eax,eax
1001c51d:	jmp    0x1001c3e7
1001c522:	xor    esi,esi
1001c524:	cmp    eax,0x8
1001c527:	jne    0x1001c3f5
1001c52d:	mov    eax,DWORD PTR [ebp+0x18]
1001c530:	and    DWORD PTR [edi+0x98],0xffffffdf
1001c537:	mov    DWORD PTR [eax],ecx
1001c539:	mov    ebx,eax
1001c53b:	jmp    0x1001c3f8
1001c540:	mov    ebx,ecx
1001c542:	xor    esi,esi
1001c544:	jmp    0x1001c3f8
1001c549:	mov    eax,0x202
1001c54e:	cmp    ecx,eax
1001c550:	je     0x1001c478
1001c556:	add    eax,0x3
1001c559:	cmp    ecx,eax
1001c55b:	je     0x1001c478
1001c561:	mov    eax,0x208
1001c566:	cmp    ecx,eax
1001c568:	je     0x1001c478
1001c56e:	add    eax,0xfffffff9
1001c571:	cmp    ecx,eax
1001c573:	je     0x1001c478
1001c579:	mov    eax,0x204
1001c57e:	cmp    ecx,eax
1001c580:	je     0x1001c478
1001c586:	add    eax,0x3
1001c589:	cmp    ecx,eax
1001c58b:	je     0x1001c478
1001c591:	mov    eax,0x203
1001c596:	cmp    ecx,eax
1001c598:	je     0x1001c478
1001c59e:	add    eax,0x3
1001c5a1:	cmp    ecx,eax
1001c5a3:	je     0x1001c478
1001c5a9:	cmp    ecx,0x209
1001c5af:	jne    0x1001c49f
1001c5b5:	lea    eax,[esp+0xc]
1001c5b9:	push   eax
1001c5ba:	push   DWORD PTR [ebp+0x14]
1001c5bd:	push   DWORD PTR [ebp+0x10]
1001c5c0:	push   ecx
1001c5c1:	jmp    0x1001c484
1001c5c6:	mov    eax,0x101
1001c5cb:	cmp    ecx,eax
1001c5cd:	je     0x1001c4c2
1001c5d3:	inc    eax
1001c5d4:	cmp    ecx,eax
1001c5d6:	je     0x1001c4c2
1001c5dc:	mov    eax,0x103
1001c5e1:	cmp    ecx,eax
1001c5e3:	je     0x1001c4c2
1001c5e9:	inc    eax
1001c5ea:	cmp    ecx,eax
1001c5ec:	je     0x1001c4c2
1001c5f2:	mov    eax,0x105
1001c5f7:	cmp    ecx,eax
1001c5f9:	je     0x1001c4c2
1001c5ff:	add    eax,0x2
1001c602:	cmp    ecx,eax
1001c604:	je     0x1001c4c2
1001c60a:	cmp    ecx,0x53
1001c60d:	jne    0x1001c620
1001c60f:	lea    eax,[esp+0xc]
1001c613:	push   eax
1001c614:	push   DWORD PTR [ebp+0x14]
1001c617:	push   DWORD PTR [ebp+0x10]
1001c61a:	push   ecx
1001c61b:	jmp    0x1001c4ce
1001c620:	cmp    ecx,0x1f
1001c623:	jne    0x1001c636
1001c625:	lea    eax,[esp+0xc]
1001c629:	push   eax
1001c62a:	push   DWORD PTR [ebp+0x14]
1001c62d:	push   DWORD PTR [ebp+0x10]
1001c630:	push   ecx
1001c631:	jmp    0x1001c4ce
1001c636:	mov    eax,0x286
1001c63b:	cmp    ecx,eax
1001c63d:	jne    0x1001c664
1001c63f:	lea    ecx,[esp+0xc]
1001c643:	push   ecx
1001c644:	push   DWORD PTR [ebp+0x14]
1001c647:	mov    ecx,edi
1001c649:	push   DWORD PTR [ebp+0x10]
1001c64c:	mov    DWORD PTR [esp+0x18],esi
1001c650:	push   eax
1001c651:	call   0x1001caf7
1001c656:	cmp    DWORD PTR [esp+0xc],0x0
1001c65b:	mov    DWORD PTR [ebx],eax
1001c65d:	je     0x1001c68d
1001c65f:	jmp    0x1001c374
1001c664:	cmp    ecx,0x209
1001c66a:	jne    0x1001c67d
1001c66c:	lea    eax,[esp+0xc]
1001c670:	push   eax
1001c671:	push   DWORD PTR [ebp+0x14]
1001c674:	push   DWORD PTR [ebp+0x10]
1001c677:	push   ecx
1001c678:	jmp    0x1001c4ce
1001c67d:	cmp    ecx,0x281
1001c683:	jb     0x1001c6b6
1001c685:	cmp    ecx,0x291
1001c68b:	ja     0x1001c6b6
1001c68d:	lea    eax,[esp+0xc]
1001c691:	push   eax
1001c692:	push   DWORD PTR [ebp+0x14]
1001c695:	mov    ecx,edi
1001c697:	push   DWORD PTR [ebp+0x10]
1001c69a:	mov    DWORD PTR [esp+0x18],esi
1001c69e:	push   DWORD PTR [ebp+0xc]
1001c6a1:	call   0x1001caf7
1001c6a6:	cmp    DWORD PTR [esp+0xc],0x0
1001c6ab:	mov    DWORD PTR [ebx],eax
1001c6ad:	jne    0x1001c374
1001c6b3:	mov    ecx,DWORD PTR [ebp+0xc]
1001c6b6:	cmp    ecx,0x2
1001c6b9:	jne    0x1001c6e6
1001c6bb:	mov    eax,DWORD PTR [edi]
1001c6bd:	mov    ecx,edi
1001c6bf:	call   DWORD PTR [eax+0x10]
1001c6c2:	mov    ecx,DWORD PTR [eax]
1001c6c4:	push   eax
1001c6c5:	call   DWORD PTR [ecx+0x4]
1001c6c8:	push   DWORD PTR [ebp+0x14]
1001c6cb:	push   DWORD PTR [ebp+0x10]
1001c6ce:	push   0x2
1001c6d0:	push   DWORD PTR [edi+0x4]
1001c6d3:	push   DWORD PTR [edi+0x20]
1001c6d6:	call   DWORD PTR ds:0x10067320
1001c6dc:	mov    ecx,edi
1001c6de:	call   0x1001c7dc
1001c6e3:	and    DWORD PTR [ebx],0x0
1001c6e6:	test   BYTE PTR [edi+0xc8],0x8
1001c6ed:	je     0x1001c716
1001c6ef:	lea    eax,[esp+0xc]
1001c6f3:	push   eax
1001c6f4:	push   DWORD PTR [ebp+0x10]
1001c6f7:	mov    eax,DWORD PTR [ebp+0xc]
1001c6fa:	mov    DWORD PTR [esp+0x14],esi
1001c6fe:	mov    esi,DWORD PTR [ebp+0x14]
1001c701:	call   0x1001e8d2
1001c706:	cmp    DWORD PTR [esp+0xc],0x0
1001c70b:	mov    DWORD PTR [ebx],eax
1001c70d:	jne    0x1001c3a4
1001c713:	xor    esi,esi
1001c715:	inc    esi
1001c716:	mov    eax,DWORD PTR [ebp+0xc]
1001c719:	cmp    eax,DWORD PTR ds:0x10083048
1001c71f:	jne    0x1001c737
1001c721:	mov    eax,DWORD PTR [edi]
1001c723:	mov    ecx,edi
1001c725:	call   DWORD PTR [eax+0x10]
1001c728:	mov    edi,eax
1001c72a:	mov    eax,DWORD PTR [edi]
1001c72c:	push   edi
1001c72d:	call   DWORD PTR [eax+0x4]
1001c730:	mov    DWORD PTR [ebx],edi
1001c732:	jmp    0x1001c374
1001c737:	cmp    eax,DWORD PTR ds:0x1008304c
1001c73d:	jne    0x1001c748
1001c73f:	mov    edi,DWORD PTR [edi+0x60]
1001c742:	test   edi,edi
1001c744:	je     0x1001c730
1001c746:	jmp    0x1001c72a
1001c748:	cmp    eax,0x37f
1001c74d:	jne    0x1001c75f
1001c74f:	push   DWORD PTR [ebp+0x14]
1001c752:	push   edi
1001c753:	call   0x1001c76a
1001c758:	mov    DWORD PTR [ebx],eax
1001c75a:	jmp    0x1001c374
1001c75f:	xor    eax,eax
1001c761:	pop    edi
1001c762:	pop    esi
1001c763:	pop    ebx
1001c764:	mov    esp,ebp
1001c766:	pop    ebp
1001c767:	ret    0x18
1001c76a:	push   0x0
1001c76c:	mov    eax,0x1005fb3d
1001c771:	call   0x10059df5
1001c776:	mov    eax,DWORD PTR [ebp+0x8]
1001c779:	mov    eax,DWORD PTR [eax+0x60]
1001c77c:	xor    ecx,ecx
1001c77e:	test   eax,eax
1001c780:	mov    DWORD PTR [ebp+0x8],ecx
1001c783:	je     0x1001c796
1001c785:	mov    ecx,DWORD PTR [eax]
1001c787:	lea    edx,[ebp+0x8]
1001c78a:	push   edx
1001c78b:	push   0x10071bc8
1001c790:	push   eax
1001c791:	call   DWORD PTR [ecx]
1001c793:	mov    ecx,DWORD PTR [ebp+0x8]
1001c796:	and    DWORD PTR [ebp-0x4],0x0
1001c79a:	test   ecx,ecx
1001c79c:	je     0x1001c7c4
1001c79e:	push   DWORD PTR [ebp+0xc]
1001c7a1:	mov    eax,DWORD PTR [ecx]
1001c7a3:	push   ecx
1001c7a4:	call   DWORD PTR [eax+0x14]
1001c7a7:	test   eax,eax
1001c7a9:	jne    0x1001c7c1
1001c7ab:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c7af:	mov    eax,DWORD PTR [ebp+0x8]
1001c7b2:	test   eax,eax
1001c7b4:	je     0x1001c7bc
1001c7b6:	mov    ecx,DWORD PTR [eax]
1001c7b8:	push   eax
1001c7b9:	call   DWORD PTR [ecx+0x8]
1001c7bc:	xor    eax,eax
1001c7be:	inc    eax
1001c7bf:	jmp    0x1001c7d4
1001c7c1:	mov    ecx,DWORD PTR [ebp+0x8]
1001c7c4:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c7c8:	test   ecx,ecx
1001c7ca:	je     0x1001c7d2
1001c7cc:	mov    eax,DWORD PTR [ecx]
1001c7ce:	push   ecx
1001c7cf:	call   DWORD PTR [eax+0x8]
1001c7d2:	xor    eax,eax
1001c7d4:	call   0x10059ecd
1001c7d9:	ret    0x8
1001c7dc:	push   0x4
1001c7de:	mov    eax,0x1005fb1a
1001c7e3:	call   0x10059df5
1001c7e8:	mov    esi,ecx
1001c7ea:	mov    eax,DWORD PTR [esi+0x98]
1001c7f0:	test   al,0x40
1001c7f2:	jne    0x1001c920
1001c7f8:	or     eax,0x40
1001c7fb:	mov    DWORD PTR [esi+0x98],eax
1001c801:	mov    eax,DWORD PTR [esi+0x70]
1001c804:	xor    edi,edi
1001c806:	cmp    eax,edi
1001c808:	je     0x1001c814
1001c80a:	mov    ecx,DWORD PTR [eax]
1001c80c:	push   edi
1001c80d:	push   edi
1001c80e:	push   0x1
1001c810:	push   eax
1001c811:	call   DWORD PTR [ecx+0x1c]
1001c814:	mov    ecx,DWORD PTR [esi+0x94]
1001c81a:	cmp    ecx,0xcdcdcdcd
1001c820:	je     0x1001c83c
1001c822:	mov    eax,DWORD PTR [esi+0x60]
1001c825:	push   ecx
1001c826:	lea    ecx,[esi+0x80]
1001c82c:	push   ecx
1001c82d:	call   0x1001b7f4
1001c832:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c83c:	mov    eax,DWORD PTR [esi+0x64]
1001c83f:	cmp    eax,edi
1001c841:	je     0x1001c864
1001c843:	push   DWORD PTR [esi+0x9c]
1001c849:	mov    ecx,DWORD PTR [eax]
1001c84b:	push   eax
1001c84c:	call   DWORD PTR [ecx+0x50]
1001c84f:	mov    eax,DWORD PTR [esi+0x64]
1001c852:	mov    ecx,DWORD PTR [eax]
1001c854:	push   0x1
1001c856:	push   eax
1001c857:	call   DWORD PTR [ecx+0x18]
1001c85a:	mov    eax,DWORD PTR [esi+0x64]
1001c85d:	mov    ecx,DWORD PTR [eax]
1001c85f:	push   edi
1001c860:	push   eax
1001c861:	call   DWORD PTR [ecx+0xc]
1001c864:	mov    eax,DWORD PTR [esi+0x60]
1001c867:	cmp    eax,edi
1001c869:	je     0x1001c89e
1001c86b:	mov    DWORD PTR [ebp-0x10],edi
1001c86e:	lea    edx,[ebp-0x10]
1001c871:	push   edx
1001c872:	push   0x100714bc
1001c877:	mov    DWORD PTR [ebp-0x4],edi
1001c87a:	mov    ecx,DWORD PTR [eax]
1001c87c:	push   eax
1001c87d:	call   DWORD PTR [ecx]
1001c87f:	mov    eax,DWORD PTR [ebp-0x10]
1001c882:	cmp    eax,edi
1001c884:	je     0x1001c890
1001c886:	mov    ecx,DWORD PTR [eax]
1001c888:	push   edi
1001c889:	push   eax
1001c88a:	call   DWORD PTR [ecx+0xc]
1001c88d:	mov    eax,DWORD PTR [ebp-0x10]
1001c890:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c894:	cmp    eax,edi
1001c896:	je     0x1001c89e
1001c898:	mov    ecx,DWORD PTR [eax]
1001c89a:	push   eax
1001c89b:	call   DWORD PTR [ecx+0x8]
1001c89e:	mov    eax,DWORD PTR [esi+0x70]
1001c8a1:	cmp    eax,edi
1001c8a3:	je     0x1001c8ae
1001c8a5:	mov    DWORD PTR [esi+0x70],edi
1001c8a8:	mov    ecx,DWORD PTR [eax]
1001c8aa:	push   eax
1001c8ab:	call   DWORD PTR [ecx+0x8]
1001c8ae:	mov    DWORD PTR [esi+0x90],edi
1001c8b4:	mov    eax,DWORD PTR [esi+0x74]
1001c8b7:	cmp    eax,edi
1001c8b9:	je     0x1001c8c4
1001c8bb:	mov    DWORD PTR [esi+0x74],edi
1001c8be:	mov    ecx,DWORD PTR [eax]
1001c8c0:	push   eax
1001c8c1:	call   DWORD PTR [ecx+0x8]
1001c8c4:	mov    eax,DWORD PTR [esi+0x64]
1001c8c7:	cmp    eax,edi
1001c8c9:	je     0x1001c8d4
1001c8cb:	mov    DWORD PTR [esi+0x64],edi
1001c8ce:	mov    ecx,DWORD PTR [eax]
1001c8d0:	push   eax
1001c8d1:	call   DWORD PTR [ecx+0x8]
1001c8d4:	mov    eax,DWORD PTR [esi+0x60]
1001c8d7:	cmp    eax,edi
1001c8d9:	je     0x1001c8e4
1001c8db:	mov    DWORD PTR [esi+0x60],edi
1001c8de:	mov    ecx,DWORD PTR [eax]
1001c8e0:	push   eax
1001c8e1:	call   DWORD PTR [ecx+0x8]
1001c8e4:	mov    eax,DWORD PTR [esi+0x6c]
1001c8e7:	cmp    eax,edi
1001c8e9:	je     0x1001c8f4
1001c8eb:	mov    DWORD PTR [esi+0x6c],edi
1001c8ee:	mov    ecx,DWORD PTR [eax]
1001c8f0:	push   eax
1001c8f1:	call   DWORD PTR [ecx+0x8]
1001c8f4:	mov    eax,DWORD PTR [esi+0x68]
1001c8f7:	cmp    eax,edi
1001c8f9:	je     0x1001c904
1001c8fb:	mov    DWORD PTR [esi+0x68],edi
1001c8fe:	mov    ecx,DWORD PTR [eax]
1001c900:	push   eax
1001c901:	call   DWORD PTR [ecx+0x8]
1001c904:	and    DWORD PTR [esi+0x98],0xffffffa4
1001c90b:	add    esi,0xc4
1001c911:	mov    eax,DWORD PTR [esi]
1001c913:	cmp    eax,edi
1001c915:	je     0x1001c920
1001c917:	push   eax
1001c918:	call   DWORD PTR ds:0x10067338
1001c91e:	mov    DWORD PTR [esi],edi
1001c920:	call   0x10059ecd
1001c925:	ret    
1001c926:	push   0x0
1001c928:	mov    eax,0x1005fb3d
1001c92d:	call   0x10059df5
1001c932:	mov    esi,ecx
1001c934:	mov    eax,DWORD PTR [ebp+0x8]
1001c937:	xor    edi,edi
1001c939:	test   WORD PTR [esi+0xa0],0x4000
1001c942:	mov    DWORD PTR [eax],edi
1001c944:	je     0x1001c99f
1001c946:	cmp    DWORD PTR [esi+0x64],edi
1001c949:	je     0x1001c9b6
1001c94b:	test   BYTE PTR [esi+0x98],0x1
1001c952:	jne    0x1001c9b6
1001c954:	mov    DWORD PTR [ebp+0x8],edi
1001c957:	mov    DWORD PTR [ebp-0x4],edi
1001c95a:	mov    eax,DWORD PTR [esi]
1001c95c:	call   DWORD PTR [eax+0x10]
1001c95f:	mov    ecx,DWORD PTR [eax]
1001c961:	lea    edx,[ebp+0x8]
1001c964:	push   edx
1001c965:	push   0x1007151c
1001c96a:	push   eax
1001c96b:	call   DWORD PTR [ecx]
1001c96d:	mov    ecx,DWORD PTR [ebp+0x8]
1001c970:	cmp    ecx,edi
1001c972:	je     0x1001c98f
1001c974:	mov    eax,DWORD PTR [esi+0x64]
1001c977:	mov    edx,DWORD PTR [eax]
1001c979:	lea    ebx,[esi+0xb4]
1001c97f:	push   ebx
1001c980:	push   DWORD PTR [esi+0x4]
1001c983:	push   edi
1001c984:	push   ecx
1001c985:	push   edi
1001c986:	push   0xfffffffb
1001c988:	push   eax
1001c989:	call   DWORD PTR [edx+0x2c]
1001c98c:	mov    ecx,DWORD PTR [ebp+0x8]
1001c98f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c993:	cmp    ecx,edi
1001c995:	je     0x1001c9b6
1001c997:	mov    eax,DWORD PTR [ecx]
1001c999:	push   ecx
1001c99a:	call   DWORD PTR [eax+0x8]
1001c99d:	jmp    0x1001c9b6
1001c99f:	lea    eax,[esi+0x98]
1001c9a5:	or     DWORD PTR [eax],0x20
1001c9a8:	test   BYTE PTR [eax],0x40
1001c9ab:	jne    0x1001c9b6
1001c9ad:	lea    eax,[ebp+0x8]
1001c9b0:	push   eax
1001c9b1:	call   0x1001c9c0
1001c9b6:	xor    eax,eax
1001c9b8:	call   0x10059ecd
1001c9bd:	ret    0x4
1001c9c0:	push   0x4
1001c9c2:	mov    eax,0x1005fb1a
1001c9c7:	call   0x10059df5
1001c9cc:	xor    edi,edi
1001c9ce:	cmp    DWORD PTR [esi+0x64],edi
1001c9d1:	je     0x1001ca27
1001c9d3:	test   BYTE PTR [esi+0x98],0x2
1001c9da:	jne    0x1001ca27
1001c9dc:	mov    DWORD PTR [ebp-0x10],edi
1001c9df:	mov    DWORD PTR [ebp-0x4],edi
1001c9e2:	mov    eax,DWORD PTR [esi]
1001c9e4:	mov    ecx,esi
1001c9e6:	call   DWORD PTR [eax+0x10]
1001c9e9:	mov    ecx,DWORD PTR [eax]
1001c9eb:	lea    edx,[ebp-0x10]
1001c9ee:	push   edx
1001c9ef:	push   0x1007151c
1001c9f4:	push   eax
1001c9f5:	call   DWORD PTR [ecx]
1001c9f7:	mov    ecx,DWORD PTR [ebp-0x10]
1001c9fa:	cmp    ecx,edi
1001c9fc:	je     0x1001ca19
1001c9fe:	mov    eax,DWORD PTR [esi+0x64]
1001ca01:	mov    edx,DWORD PTR [eax]
1001ca03:	lea    ebx,[esi+0xb4]
1001ca09:	push   ebx
1001ca0a:	push   DWORD PTR [esi+0x4]
1001ca0d:	push   edi
1001ca0e:	push   ecx
1001ca0f:	push   edi
1001ca10:	push   0xfffffffc
1001ca12:	push   eax
1001ca13:	call   DWORD PTR [edx+0x2c]
1001ca16:	mov    ecx,DWORD PTR [ebp-0x10]
1001ca19:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ca1d:	cmp    ecx,edi
1001ca1f:	je     0x1001ca27
1001ca21:	mov    eax,DWORD PTR [ecx]
1001ca23:	push   ecx
1001ca24:	call   DWORD PTR [eax+0x8]
1001ca27:	test   BYTE PTR [esi+0x98],0x8
1001ca2e:	je     0x1001ca35
1001ca30:	push   DWORD PTR [esi+0x4]
1001ca33:	jmp    0x1001ca55
1001ca35:	call   DWORD PTR ds:0x10067350
1001ca3b:	push   eax
1001ca3c:	push   DWORD PTR [esi+0x4]
1001ca3f:	call   DWORD PTR ds:0x10067358
1001ca45:	test   eax,eax
1001ca47:	jne    0x1001ca5b
1001ca49:	push   0x5
1001ca4b:	push   DWORD PTR [esi+0x4]
1001ca4e:	call   DWORD PTR ds:0x100672c8
1001ca54:	push   eax
1001ca55:	call   DWORD PTR ds:0x10067348
1001ca5b:	mov    eax,DWORD PTR [ebp+0x8]
1001ca5e:	mov    DWORD PTR [eax],edi
1001ca60:	xor    eax,eax
1001ca62:	call   0x10059ecd
1001ca67:	ret    0x4
1001ca6a:	mov    edx,DWORD PTR [ebx+0xb4]
1001ca70:	movsx  eax,cx
1001ca73:	shr    ecx,0x10
1001ca76:	push   esi
1001ca77:	mov    esi,DWORD PTR [ebx+0xb8]
1001ca7d:	movsx  ecx,cx
1001ca80:	add    ecx,esi
1001ca82:	add    eax,edx
1001ca84:	push   edi
1001ca85:	mov    DWORD PTR [ebx+0xbc],eax
1001ca8b:	mov    DWORD PTR [ebx+0xc0],ecx
1001ca91:	sub    ecx,esi
1001ca93:	lea    edi,[ebx+0xac]
1001ca99:	sub    eax,edx
1001ca9b:	lea    esi,[ebx+0xa4]
1001caa1:	mov    DWORD PTR [edi],eax
1001caa3:	mov    DWORD PTR [ebx+0xb0],ecx
1001caa9:	call   0x1001bf13
1001caae:	mov    eax,DWORD PTR [ebx+0x64]
1001cab1:	test   eax,eax
1001cab3:	je     0x1001cabe
1001cab5:	mov    ecx,DWORD PTR [eax]
1001cab7:	push   esi
1001cab8:	push   0x1
1001caba:	push   eax
1001cabb:	call   DWORD PTR [ecx+0x44]
1001cabe:	mov    eax,DWORD PTR [ebx+0x74]
1001cac1:	test   eax,eax
1001cac3:	pop    edi
1001cac4:	pop    esi
1001cac5:	je     0x1001cad5
1001cac7:	mov    edx,DWORD PTR [eax]
1001cac9:	lea    ecx,[ebx+0xb4]
1001cacf:	push   ecx
1001cad0:	push   ecx
1001cad1:	push   eax
1001cad2:	call   DWORD PTR [edx+0x1c]
1001cad5:	test   BYTE PTR [ebx+0x98],0x8
1001cadc:	je     0x1001caeb
1001cade:	push   0x1
1001cae0:	lea    eax,[ebx+0x2c]
1001cae3:	mov    ecx,DWORD PTR [eax]
1001cae5:	push   0x0
1001cae7:	push   eax
1001cae8:	call   DWORD PTR [ecx+0x64]
1001caeb:	mov    eax,DWORD PTR [esp+0x4]
1001caef:	and    DWORD PTR [eax],0x0
1001caf2:	xor    eax,eax
1001caf4:	ret    0x4
1001caf7:	push   ebp
1001caf8:	mov    ebp,esp
1001cafa:	push   ecx
1001cafb:	mov    eax,DWORD PTR [ecx+0x98]
1001cb01:	and    DWORD PTR [ebp-0x4],0x0
1001cb05:	test   al,0x1
1001cb07:	je     0x1001cb2c
1001cb09:	test   al,0x8
1001cb0b:	je     0x1001cb2c
1001cb0d:	mov    eax,DWORD PTR [ecx+0x74]
1001cb10:	test   eax,eax
1001cb12:	je     0x1001cb2c
1001cb14:	mov    ecx,DWORD PTR [eax]
1001cb16:	lea    edx,[ebp-0x4]
1001cb19:	push   edx
1001cb1a:	push   DWORD PTR [ebp+0x10]
1001cb1d:	push   DWORD PTR [ebp+0xc]
1001cb20:	push   DWORD PTR [ebp+0x8]
1001cb23:	push   eax
1001cb24:	call   DWORD PTR [ecx+0x24]
1001cb27:	cmp    eax,0x1
1001cb2a:	jne    0x1001cb32
1001cb2c:	mov    eax,DWORD PTR [ebp+0x14]
1001cb2f:	and    DWORD PTR [eax],0x0
1001cb32:	mov    eax,DWORD PTR [ebp-0x4]
1001cb35:	leave  
1001cb36:	ret    0x10
1001cb39:	push   ebp
1001cb3a:	mov    ebp,esp
1001cb3c:	push   ecx
1001cb3d:	mov    eax,DWORD PTR [ecx+0x98]
1001cb43:	and    DWORD PTR [ebp-0x4],0x0
1001cb47:	test   al,0x1
1001cb49:	je     0x1001cb69
1001cb4b:	test   al,0x8
1001cb4d:	je     0x1001cb69
1001cb4f:	mov    eax,DWORD PTR [ecx+0x74]
1001cb52:	test   eax,eax
1001cb54:	je     0x1001cb69
1001cb56:	mov    ecx,DWORD PTR [eax]
1001cb58:	lea    edx,[ebp-0x4]
1001cb5b:	push   edx
1001cb5c:	push   DWORD PTR [ebp+0x10]
1001cb5f:	push   DWORD PTR [ebp+0xc]
1001cb62:	push   DWORD PTR [ebp+0x8]
1001cb65:	push   eax
1001cb66:	call   DWORD PTR [ecx+0x24]
1001cb69:	mov    eax,DWORD PTR [ebp+0x14]
1001cb6c:	and    DWORD PTR [eax],0x0
1001cb6f:	mov    eax,DWORD PTR [ebp-0x4]
1001cb72:	leave  
1001cb73:	ret    0x10
1001cb76:	push   ebp
1001cb77:	mov    ebp,esp
1001cb79:	sub    esp,0x6c
1001cb7c:	mov    eax,ds:0x100801ac
1001cb81:	xor    eax,ebp
1001cb83:	mov    DWORD PTR [ebp-0x8],eax
1001cb86:	mov    eax,DWORD PTR [ebp+0x8]
1001cb89:	push   ebx
1001cb8a:	push   edi
1001cb8b:	xor    edi,edi
1001cb8d:	cmp    DWORD PTR [esi+0x70],edi
1001cb90:	jne    0x1001cbf3
1001cb92:	lea    eax,[ebp-0x4c]
1001cb95:	push   eax
1001cb96:	push   DWORD PTR [esi+0x4]
1001cb99:	call   DWORD PTR ds:0x1006733c
1001cb9f:	cmp    eax,edi
1001cba1:	mov    DWORD PTR [ebp-0x50],eax
1001cba4:	je     0x1001ccd8
1001cbaa:	lea    eax,[ebp-0x60]
1001cbad:	push   eax
1001cbae:	push   DWORD PTR [esi+0x4]
1001cbb1:	call   DWORD PTR ds:0x100672c0
1001cbb7:	push   DWORD PTR [esi+0xcc]
1001cbbd:	call   DWORD PTR ds:0x10067038
1001cbc3:	mov    ebx,eax
1001cbc5:	cmp    ebx,edi
1001cbc7:	je     0x1001cbde
1001cbc9:	push   ebx
1001cbca:	lea    eax,[ebp-0x60]
1001cbcd:	push   eax
1001cbce:	push   DWORD PTR [ebp-0x50]
1001cbd1:	call   DWORD PTR ds:0x1006734c
1001cbd7:	push   ebx
1001cbd8:	call   DWORD PTR ds:0x10067044
1001cbde:	lea    eax,[ebp-0x4c]
1001cbe1:	push   eax
1001cbe2:	push   DWORD PTR [esi+0x4]
1001cbe5:	call   DWORD PTR ds:0x100672dc
1001cbeb:	xor    eax,eax
1001cbed:	inc    eax
1001cbee:	jmp    0x1001ccda
1001cbf3:	test   BYTE PTR [esi+0x98],0x8
1001cbfa:	je     0x1001ccd6
1001cc00:	lea    eax,[ebp-0x4c]
1001cc03:	push   eax
1001cc04:	push   DWORD PTR [esi+0x4]
1001cc07:	call   DWORD PTR ds:0x1006733c
1001cc0d:	mov    ebx,eax
1001cc0f:	cmp    ebx,edi
1001cc11:	mov    DWORD PTR [ebp-0x64],ebx
1001cc14:	je     0x1001ccd8
1001cc1a:	lea    eax,[ebp-0x60]
1001cc1d:	push   eax
1001cc1e:	push   DWORD PTR [esi+0x4]
1001cc21:	call   DWORD PTR ds:0x100672c0
1001cc27:	mov    eax,DWORD PTR [ebp-0x54]
1001cc2a:	sub    eax,DWORD PTR [ebp-0x5c]
1001cc2d:	push   eax
1001cc2e:	mov    eax,DWORD PTR [ebp-0x58]
1001cc31:	sub    eax,DWORD PTR [ebp-0x60]
1001cc34:	push   eax
1001cc35:	push   ebx
1001cc36:	call   DWORD PTR ds:0x10067040
1001cc3c:	cmp    eax,edi
1001cc3e:	mov    DWORD PTR [ebp-0x50],eax
1001cc41:	je     0x1001cbde
1001cc43:	push   ebx
1001cc44:	call   DWORD PTR ds:0x1006704c
1001cc4a:	mov    ebx,eax
1001cc4c:	cmp    ebx,edi
1001cc4e:	je     0x1001ccce
1001cc50:	push   DWORD PTR [ebp-0x50]
1001cc53:	push   ebx
1001cc54:	call   DWORD PTR ds:0x10067048
1001cc5a:	cmp    eax,edi
1001cc5c:	mov    DWORD PTR [ebp-0x6c],eax
1001cc5f:	je     0x1001ccc7
1001cc61:	push   DWORD PTR [esi+0xcc]
1001cc67:	call   DWORD PTR ds:0x10067038
1001cc6d:	cmp    eax,edi
1001cc6f:	mov    DWORD PTR [ebp-0x68],eax
1001cc72:	je     0x1001ccbd
1001cc74:	push   eax
1001cc75:	lea    eax,[ebp-0x60]
1001cc78:	push   eax
1001cc79:	push   ebx
1001cc7a:	call   DWORD PTR ds:0x1006734c
1001cc80:	push   DWORD PTR [ebp-0x68]
1001cc83:	call   DWORD PTR ds:0x10067044
1001cc89:	mov    eax,DWORD PTR [esi+0x70]
1001cc8c:	mov    edx,DWORD PTR [eax]
1001cc8e:	push   edi
1001cc8f:	push   edi
1001cc90:	lea    ecx,[esi+0xb4]
1001cc96:	push   ecx
1001cc97:	push   ecx
1001cc98:	push   ebx
1001cc99:	push   edi
1001cc9a:	push   edi
1001cc9b:	push   edi
1001cc9c:	push   0xffffffff
1001cc9e:	push   0x1
1001cca0:	push   eax
1001cca1:	call   DWORD PTR [edx+0xc]
1001cca4:	push   0xcc0020
1001cca9:	push   edi
1001ccaa:	push   edi
1001ccab:	push   ebx
1001ccac:	push   DWORD PTR [ebp-0x54]
1001ccaf:	push   DWORD PTR [ebp-0x58]
1001ccb2:	push   edi
1001ccb3:	push   edi
1001ccb4:	push   DWORD PTR [ebp-0x64]
1001ccb7:	call   DWORD PTR ds:0x1006702c
1001ccbd:	push   DWORD PTR [ebp-0x6c]
1001ccc0:	push   ebx
1001ccc1:	call   DWORD PTR ds:0x10067048
1001ccc7:	push   ebx
1001ccc8:	call   DWORD PTR ds:0x10067030
1001ccce:	push   DWORD PTR [ebp-0x50]
1001ccd1:	jmp    0x1001cbd8
1001ccd6:	mov    DWORD PTR [eax],edi
1001ccd8:	xor    eax,eax
1001ccda:	mov    ecx,DWORD PTR [ebp-0x8]
1001ccdd:	pop    edi
1001ccde:	xor    ecx,ebp
1001cce0:	pop    ebx
1001cce1:	call   0x10043615
1001cce6:	leave  
1001cce7:	ret    0x4
1001ccea:	push   0x4
1001ccec:	mov    eax,0x1005fb1a
1001ccf1:	call   0x10059df5
1001ccf6:	and    DWORD PTR [ebp-0x10],0x0
1001ccfa:	mov    eax,DWORD PTR [ebp+0x8]
1001ccfd:	and    DWORD PTR [ebp-0x4],0x0
1001cd01:	mov    ecx,DWORD PTR [eax]
1001cd03:	push   0x0
1001cd05:	push   0x0
1001cd07:	push   0x1006c868
1001cd0c:	lea    edx,[ebp-0x10]
1001cd0f:	push   edx
1001cd10:	push   DWORD PTR [ebp+0x14]
1001cd13:	push   DWORD PTR [ebp+0x10]
1001cd16:	push   DWORD PTR [ebp+0xc]
1001cd19:	push   eax
1001cd1a:	call   DWORD PTR [ecx+0x28]
1001cd1d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001cd21:	mov    edi,eax
1001cd23:	mov    eax,DWORD PTR [ebp-0x10]
1001cd26:	test   eax,eax
1001cd28:	je     0x1001cd30
1001cd2a:	mov    ecx,DWORD PTR [eax]
1001cd2c:	push   eax
1001cd2d:	call   DWORD PTR [ecx+0x8]
1001cd30:	mov    eax,edi
1001cd32:	call   0x10059ecd
1001cd37:	ret    0x10
1001cd3a:	push   ebp
1001cd3b:	mov    ebp,esp
1001cd3d:	mov    eax,DWORD PTR [ebp+0x8]
1001cd40:	mov    ecx,DWORD PTR [eax]
1001cd42:	push   0x0
1001cd44:	push   DWORD PTR [ebp+0x20]
1001cd47:	push   DWORD PTR [ebp+0x1c]
1001cd4a:	push   DWORD PTR [ebp+0x18]
1001cd4d:	push   DWORD PTR [ebp+0x14]
1001cd50:	push   DWORD PTR [ebp+0x10]
1001cd53:	push   DWORD PTR [ebp+0xc]
1001cd56:	push   eax
1001cd57:	call   DWORD PTR [ecx+0x28]
1001cd5a:	pop    ebp
1001cd5b:	ret    0x1c
1001cd5e:	push   ebx
1001cd5f:	push   ebp
1001cd60:	push   esi
1001cd61:	push   edi
1001cd62:	mov    edi,DWORD PTR [esp+0x14]
1001cd66:	lea    esi,[edi-0x24]
1001cd69:	xor    ebx,ebx
1001cd6b:	mov    ecx,esi
1001cd6d:	inc    ebx
1001cd6e:	call   0x1001c7dc
1001cd73:	mov    eax,DWORD PTR [edi-0x20]
1001cd76:	test   eax,eax
1001cd78:	mov    ebp,DWORD PTR ds:0x100672d0
1001cd7e:	mov    BYTE PTR [esp+0x14],0x0
1001cd83:	je     0x1001cd9c
1001cd85:	cmp    eax,DWORD PTR [esp+0x1c]
1001cd89:	je     0x1001cd9c
1001cd8b:	push   0x507
1001cd90:	push   0x0
1001cd92:	push   0x0
1001cd94:	push   eax
1001cd95:	call   ebp
1001cd97:	call   0x1001e885
1001cd9c:	push   DWORD PTR [esp+0x1c]
1001cda0:	call   DWORD PTR ds:0x1006730c
1001cda6:	test   eax,eax
1001cda8:	je     0x1001cdf8
1001cdaa:	mov    ebx,DWORD PTR [esp+0x1c]
1001cdae:	cmp    DWORD PTR [edi-0x20],ebx
1001cdb1:	je     0x1001cdbd
1001cdb3:	call   0x1001e841
1001cdb8:	mov    BYTE PTR [esp+0x14],0x1
1001cdbd:	push   0x0
1001cdbf:	push   0x1
1001cdc1:	push   DWORD PTR [esp+0x20]
1001cdc5:	mov    ecx,esi
1001cdc7:	call   0x1001e44e
1001cdcc:	mov    ebx,eax
1001cdce:	test   ebx,ebx
1001cdd0:	jge    0x1001cdf8
1001cdd2:	mov    ecx,esi
1001cdd4:	call   0x1001c7dc
1001cdd9:	mov    edi,DWORD PTR [edi-0x20]
1001cddc:	test   edi,edi
1001cdde:	je     0x1001cdf8
1001cde0:	push   0x507
1001cde5:	push   0x0
1001cde7:	push   0x0
1001cde9:	push   edi
1001cdea:	call   ebp
1001cdec:	cmp    BYTE PTR [esp+0x14],0x0
1001cdf1:	je     0x1001cdf8
1001cdf3:	call   0x1001e885
1001cdf8:	pop    edi
1001cdf9:	pop    esi
1001cdfa:	pop    ebp
1001cdfb:	mov    eax,ebx
1001cdfd:	pop    ebx
1001cdfe:	ret    0xc
1001ce01:	mov    ecx,DWORD PTR [esp+0xc]
1001ce05:	test   ecx,ecx
1001ce07:	mov    eax,0x80004003
1001ce0c:	je     0x1001ce2d
1001ce0e:	mov    eax,DWORD PTR [esp+0x4]
1001ce12:	mov    eax,DWORD PTR [eax+0x3c]
1001ce15:	test   eax,eax
1001ce17:	je     0x1001ce25
1001ce19:	mov    edx,DWORD PTR [eax]
1001ce1b:	push   ecx
1001ce1c:	push   DWORD PTR [esp+0xc]
1001ce20:	push   eax
1001ce21:	call   DWORD PTR [edx]
1001ce23:	jmp    0x1001ce2d
1001ce25:	and    DWORD PTR [ecx],0x0
1001ce28:	mov    eax,0x80040004
1001ce2d:	ret    0xc
1001ce30:	push   esi
1001ce31:	mov    esi,DWORD PTR [esp+0x8]
1001ce35:	push   edi
1001ce36:	mov    edi,DWORD PTR [esp+0x10]
1001ce3a:	add    esi,0x54
1001ce3d:	cmp    DWORD PTR [esi],edi
1001ce3f:	je     0x1001ce46
1001ce41:	call   0x10007961
1001ce46:	pop    edi
1001ce47:	xor    eax,eax
1001ce49:	pop    esi
1001ce4a:	ret    0x8
1001ce4d:	push   esi
1001ce4e:	mov    esi,DWORD PTR [esp+0x8]
1001ce52:	push   edi
1001ce53:	mov    edi,DWORD PTR [esp+0x10]
1001ce57:	add    esi,0x58
1001ce5a:	cmp    DWORD PTR [esi],edi
1001ce5c:	je     0x1001ce63
1001ce5e:	call   0x10007961
1001ce63:	pop    edi
1001ce64:	xor    eax,eax
1001ce66:	pop    esi
1001ce67:	ret    0x8
1001ce6a:	push   0x4
1001ce6c:	mov    eax,0x1005fb1a
1001ce71:	call   0x10059df5
1001ce76:	and    DWORD PTR [ebp-0x10],0x0
1001ce7a:	push   DWORD PTR [ebp+0x18]
1001ce7d:	mov    eax,DWORD PTR [ebp+0x8]
1001ce80:	and    DWORD PTR [ebp-0x4],0x0
1001ce84:	mov    ecx,DWORD PTR [eax]
1001ce86:	push   0x0
1001ce88:	push   0x1006c868
1001ce8d:	lea    edx,[ebp-0x10]
1001ce90:	push   edx
1001ce91:	push   DWORD PTR [ebp+0x14]
1001ce94:	push   DWORD PTR [ebp+0x10]
1001ce97:	push   DWORD PTR [ebp+0xc]
1001ce9a:	push   eax
1001ce9b:	call   DWORD PTR [ecx+0x28]
1001ce9e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001cea2:	mov    edi,eax
1001cea4:	mov    eax,DWORD PTR [ebp-0x10]
1001cea7:	test   eax,eax
1001cea9:	je     0x1001ceb1
1001ceab:	mov    ecx,DWORD PTR [eax]
1001cead:	push   eax
1001ceae:	call   DWORD PTR [ecx+0x8]
1001ceb1:	mov    eax,edi
1001ceb3:	call   0x10059ecd
1001ceb8:	ret    0x14
1001cebb:	push   ebp
1001cebc:	mov    ebp,esp
1001cebe:	and    esp,0xfffffff8
1001cec1:	push   0xffffffff
1001cec3:	push   0x100607ab
1001cec8:	mov    eax,fs:0x0
1001cece:	push   eax
1001cecf:	sub    esp,0x40
1001ced2:	push   ebx
1001ced3:	push   esi
1001ced4:	push   edi
1001ced5:	mov    eax,ds:0x100801ac
1001ceda:	xor    eax,esp
1001cedc:	push   eax
1001cedd:	lea    eax,[esp+0x50]
1001cee1:	mov    fs:0x0,eax
1001cee7:	mov    eax,DWORD PTR [ebp+0x18]
1001ceea:	test   eax,eax
1001ceec:	jne    0x1001cef8
1001ceee:	mov    eax,0x80004003
1001cef3:	jmp    0x1001d202
1001cef8:	mov    edi,DWORD PTR [ebp+0x8]
1001cefb:	and    DWORD PTR [eax],0x0
1001cefe:	lea    esi,[edi-0x24]
1001cf01:	mov    ecx,esi
1001cf03:	mov    DWORD PTR [esp+0x14],0x1
1001cf0b:	mov    BYTE PTR [esp+0x13],0x0
1001cf10:	mov    DWORD PTR [esp+0x28],esi
1001cf14:	call   0x1001c7dc
1001cf19:	lea    ebx,[edi-0x20]
1001cf1c:	mov    eax,DWORD PTR [ebx]
1001cf1e:	test   eax,eax
1001cf20:	mov    DWORD PTR [esp+0x24],ebx
1001cf24:	je     0x1001cf40
1001cf26:	cmp    eax,DWORD PTR [ebp+0x10]
1001cf29:	je     0x1001cf40
1001cf2b:	push   0x507
1001cf30:	push   0x0
1001cf32:	push   0x0
1001cf34:	push   eax
1001cf35:	call   DWORD PTR ds:0x100672d0
1001cf3b:	call   0x1001e885
1001cf40:	push   DWORD PTR [ebp+0x10]
1001cf43:	call   DWORD PTR ds:0x1006730c
1001cf49:	test   eax,eax
1001cf4b:	je     0x1001d1fe
1001cf51:	mov    eax,DWORD PTR [ebp+0x10]
1001cf54:	cmp    DWORD PTR [ebx],eax
1001cf56:	je     0x1001cf68
1001cf58:	mov    ebx,eax
1001cf5a:	call   0x1001e841
1001cf5f:	mov    ebx,DWORD PTR [esp+0x24]
1001cf63:	mov    BYTE PTR [esp+0x13],0x1
1001cf68:	cmp    DWORD PTR [edi+0xa8],0x0
1001cf6f:	jne    0x1001cf8d
1001cf71:	push   ebx
1001cf72:	call   0x1001be14
1001cf77:	test   eax,eax
1001cf79:	je     0x1001cf7f
1001cf7b:	push   0xf
1001cf7d:	jmp    0x1001cf81
1001cf7f:	push   0x5
1001cf81:	call   DWORD PTR ds:0x1006731c
1001cf87:	mov    DWORD PTR [edi+0xa8],eax
1001cf8d:	mov    esi,DWORD PTR [ebp+0x18]
1001cf90:	push   DWORD PTR [ebp+0x24]
1001cf93:	mov    ecx,DWORD PTR [ebp+0xc]
1001cf96:	lea    edi,[esp+0x16]
1001cf9a:	mov    ebx,esi
1001cf9c:	mov    BYTE PTR [esp+0x16],0x0
1001cfa1:	call   0x1001bf7c
1001cfa6:	xor    ebx,ebx
1001cfa8:	cmp    eax,ebx
1001cfaa:	pop    ecx
1001cfab:	mov    DWORD PTR [esp+0x14],eax
1001cfaf:	jl     0x1001cfc4
1001cfb1:	push   DWORD PTR [ebp+0x14]
1001cfb4:	mov    ecx,DWORD PTR [esp+0x2c]
1001cfb8:	push   ebx
1001cfb9:	push   DWORD PTR [esi]
1001cfbb:	call   0x1001e44e
1001cfc0:	mov    DWORD PTR [esp+0x14],eax
1001cfc4:	cmp    DWORD PTR [esp+0x14],ebx
1001cfc8:	mov    edx,DWORD PTR [ebp+0x8]
1001cfcb:	mov    esi,DWORD PTR [ebp+0x1c]
1001cfce:	lea    ecx,[edx+0x5c]
1001cfd1:	mov    edi,ecx
1001cfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfd7:	jl     0x1001d1c9
1001cfdd:	mov    esi,DWORD PTR [ebp+0x18]
1001cfe0:	mov    eax,DWORD PTR [esi]
1001cfe2:	cmp    eax,ebx
1001cfe4:	je     0x1001cff8
1001cfe6:	cmp    DWORD PTR [ebp+0x20],ebx
1001cfe9:	je     0x1001cff8
1001cfeb:	add    edx,0x70
1001cfee:	push   edx
1001cfef:	push   ecx
1001cff0:	push   DWORD PTR [ebp+0x20]
1001cff3:	call   0x1001b77f
1001cff8:	cmp    BYTE PTR [esp+0x12],bl
1001cffc:	je     0x1001d1bb
1001d002:	cmp    DWORD PTR [esi],ebx
1001d004:	je     0x1001d1bb
1001d00a:	mov    edi,DWORD PTR [esp+0x24]
1001d00e:	mov    esi,DWORD PTR ds:0x100672f0
1001d014:	push   0xfffffff0
1001d016:	push   DWORD PTR [edi]
1001d018:	call   esi
1001d01a:	test   eax,0x300000
1001d01f:	jne    0x1001d02d
1001d021:	mov    eax,DWORD PTR [ebp+0x8]
1001d024:	or     DWORD PTR [eax+0xbc],0x8
1001d02b:	jmp    0x1001d052
1001d02d:	push   0xfffffff0
1001d02f:	push   DWORD PTR [edi]
1001d031:	call   esi
1001d033:	and    eax,0xffcfffff
1001d038:	push   eax
1001d039:	push   0xfffffff0
1001d03b:	push   DWORD PTR [edi]
1001d03d:	call   DWORD PTR ds:0x100672f4
1001d043:	push   0x37
1001d045:	push   ebx
1001d046:	push   ebx
1001d047:	push   ebx
1001d048:	push   ebx
1001d049:	push   ebx
1001d04a:	push   DWORD PTR [edi]
1001d04c:	call   DWORD PTR ds:0x1006732c
1001d052:	mov    eax,DWORD PTR [ebp+0x18]
1001d055:	mov    edi,DWORD PTR [eax]
1001d057:	cmp    edi,ebx
1001d059:	mov    DWORD PTR [esp+0x1c],edi
1001d05d:	je     0x1001d065
1001d05f:	mov    eax,DWORD PTR [edi]
1001d061:	push   edi
1001d062:	call   DWORD PTR [eax+0x4]
1001d065:	mov    esi,DWORD PTR [ebp+0xc]
1001d068:	mov    DWORD PTR [esp+0x58],ebx
1001d06c:	movzx  eax,WORD PTR [esi]
1001d06f:	cmp    ax,0x4d
1001d073:	je     0x1001d07f
1001d075:	cmp    ax,0x6d
1001d079:	jne    0x1001d221
1001d07f:	movzx  eax,WORD PTR [esi+0x2]
1001d083:	cmp    ax,0x53
1001d087:	je     0x1001d093
1001d089:	cmp    ax,0x73
1001d08d:	jne    0x1001d221
1001d093:	movzx  eax,WORD PTR [esi+0x4]
1001d097:	cmp    ax,0x48
1001d09b:	je     0x1001d0a7
1001d09d:	cmp    ax,0x68
1001d0a1:	jne    0x1001d221
1001d0a7:	movzx  eax,WORD PTR [esi+0x6]
1001d0ab:	cmp    ax,0x54
1001d0af:	je     0x1001d0bb
1001d0b1:	cmp    ax,0x74
1001d0b5:	jne    0x1001d221
1001d0bb:	movzx  eax,WORD PTR [esi+0x8]
1001d0bf:	cmp    ax,0x4d
1001d0c3:	je     0x1001d0cf
1001d0c5:	cmp    ax,0x6d
1001d0c9:	jne    0x1001d221
1001d0cf:	movzx  eax,WORD PTR [esi+0xa]
1001d0d3:	cmp    ax,0x4c
1001d0d7:	je     0x1001d0e3
1001d0d9:	cmp    ax,0x6c
1001d0dd:	jne    0x1001d221
1001d0e3:	cmp    WORD PTR [esi+0xc],0x3a
1001d0e8:	jne    0x1001d221
1001d0ee:	push   esi
1001d0ef:	call   DWORD PTR ds:0x100670ac
1001d0f5:	lea    edi,[eax+eax*1-0xe]
1001d0f9:	push   edi
1001d0fa:	push   0x42
1001d0fc:	call   DWORD PTR ds:0x1006714c
1001d102:	mov    ebx,eax
1001d104:	test   ebx,ebx
1001d106:	je     0x1001d217
1001d10c:	and    DWORD PTR [esp+0x20],0x0
1001d111:	push   ebx
1001d112:	mov    BYTE PTR [esp+0x5c],0x1
1001d117:	call   DWORD PTR ds:0x10067164
1001d11d:	push   edi
1001d11e:	add    esi,0xe
1001d121:	push   esi
1001d122:	push   edi
1001d123:	push   eax
1001d124:	call   0x10014786
1001d129:	add    esp,0x10
1001d12c:	push   ebx
1001d12d:	call   DWORD PTR ds:0x10067154
1001d133:	lea    eax,[esp+0x20]
1001d137:	push   eax
1001d138:	push   0x1
1001d13a:	push   ebx
1001d13b:	call   DWORD PTR ds:0x10067420
1001d141:	test   eax,eax
1001d143:	mov    DWORD PTR [esp+0x14],eax
1001d147:	jl     0x1001d193
1001d149:	and    DWORD PTR [esp+0x18],0x0
1001d14e:	lea    edx,[esp+0x18]
1001d152:	push   edx
1001d153:	mov    BYTE PTR [esp+0x5c],0x2
1001d158:	mov    eax,DWORD PTR [esp+0x20]
1001d15c:	mov    ecx,DWORD PTR [eax]
1001d15e:	push   0x10071b88
1001d163:	push   eax
1001d164:	call   DWORD PTR [ecx]
1001d166:	test   eax,eax
1001d168:	mov    DWORD PTR [esp+0x14],eax
1001d16c:	jl     0x1001d180
1001d16e:	mov    eax,DWORD PTR [esp+0x18]
1001d172:	push   DWORD PTR [esp+0x20]
1001d176:	mov    ecx,DWORD PTR [eax]
1001d178:	push   eax
1001d179:	call   DWORD PTR [ecx+0x14]
1001d17c:	mov    DWORD PTR [esp+0x14],eax
1001d180:	mov    BYTE PTR [esp+0x58],0x1
1001d185:	mov    eax,DWORD PTR [esp+0x18]
1001d189:	test   eax,eax
1001d18b:	je     0x1001d193
1001d18d:	mov    ecx,DWORD PTR [eax]
1001d18f:	push   eax
1001d190:	call   DWORD PTR [ecx+0x8]
1001d193:	mov    BYTE PTR [esp+0x58],0x0
1001d198:	mov    eax,DWORD PTR [esp+0x20]
1001d19c:	test   eax,eax
1001d19e:	je     0x1001d1a6
1001d1a0:	mov    ecx,DWORD PTR [eax]
1001d1a2:	push   eax
1001d1a3:	call   DWORD PTR [ecx+0x8]
1001d1a6:	mov    edi,DWORD PTR [esp+0x1c]
1001d1aa:	xor    ebx,ebx
1001d1ac:	or     DWORD PTR [esp+0x58],0xffffffff
1001d1b1:	cmp    edi,ebx
1001d1b3:	je     0x1001d1bb
1001d1b5:	mov    eax,DWORD PTR [edi]
1001d1b7:	push   edi
1001d1b8:	call   DWORD PTR [eax+0x8]
1001d1bb:	cmp    DWORD PTR [esp+0x14],ebx
1001d1bf:	jl     0x1001d1c9
1001d1c1:	mov    eax,DWORD PTR [ebp+0x8]
1001d1c4:	cmp    DWORD PTR [eax+0x3c],ebx
1001d1c7:	jne    0x1001d1fe
1001d1c9:	mov    esi,DWORD PTR [esp+0x28]
1001d1cd:	mov    ecx,esi
1001d1cf:	call   0x1001c7dc
1001d1d4:	mov    eax,DWORD PTR [esp+0x24]
1001d1d8:	mov    eax,DWORD PTR [eax]
1001d1da:	cmp    eax,ebx
1001d1dc:	je     0x1001d1fe
1001d1de:	push   0x507
1001d1e3:	push   ebx
1001d1e4:	push   ebx
1001d1e5:	push   eax
1001d1e6:	call   DWORD PTR ds:0x100672d0
1001d1ec:	cmp    DWORD PTR [esp+0x14],ebx
1001d1f0:	jge    0x1001d1fe
1001d1f2:	cmp    BYTE PTR [esp+0x13],0x0
1001d1f7:	je     0x1001d1fe
1001d1f9:	call   0x1001e885
1001d1fe:	mov    eax,DWORD PTR [esp+0x14]
1001d202:	mov    ecx,DWORD PTR [esp+0x50]
1001d206:	mov    DWORD PTR fs:0x0,ecx
1001d20d:	pop    ecx
1001d20e:	pop    edi
1001d20f:	pop    esi
1001d210:	pop    ebx
1001d211:	mov    esp,ebp
1001d213:	pop    ebp
1001d214:	ret    0x20
1001d217:	mov    DWORD PTR [esp+0x14],0x8007000e
1001d21f:	jmp    0x1001d1a6
1001d221:	mov    DWORD PTR [esp+0x18],ebx
1001d225:	lea    ecx,[esp+0x18]
1001d229:	push   ecx
1001d22a:	push   0x10071bd8
1001d22f:	mov    BYTE PTR [esp+0x60],0x3
1001d234:	mov    eax,DWORD PTR [edi]
1001d236:	push   edi
1001d237:	call   DWORD PTR [eax]
1001d239:	cmp    DWORD PTR [esp+0x18],ebx
1001d23d:	je     0x1001d2d1
1001d243:	lea    eax,[esp+0x3c]
1001d247:	push   eax
1001d248:	call   DWORD PTR ds:0x10067294
1001d24e:	mov    BYTE PTR [esp+0x58],0x4
1001d253:	mov    edi,DWORD PTR ds:0x10067284
1001d259:	lea    eax,[esp+0x2c]
1001d25d:	push   eax
1001d25e:	mov    WORD PTR [esp+0x30],bx
1001d263:	call   edi
1001d265:	push   esi
1001d266:	mov    WORD PTR [esp+0x30],0x8
1001d26d:	call   DWORD PTR ds:0x100672ac
1001d273:	cmp    eax,ebx
1001d275:	mov    DWORD PTR [esp+0x34],eax
1001d279:	jne    0x1001d291
1001d27b:	mov    eax,0x8007000e
1001d280:	push   eax
1001d281:	mov    WORD PTR [esp+0x30],0xa
1001d288:	mov    DWORD PTR [esp+0x38],eax
1001d28c:	call   0x10001f2d
1001d291:	mov    BYTE PTR [esp+0x58],0x5
1001d296:	mov    eax,DWORD PTR [esp+0x18]
1001d29a:	mov    ecx,DWORD PTR [eax]
1001d29c:	push   0xffffffff
1001d29e:	push   eax
1001d29f:	call   DWORD PTR [ecx+0xa4]
1001d2a5:	mov    eax,DWORD PTR [esp+0x18]
1001d2a9:	mov    ecx,DWORD PTR [eax]
1001d2ab:	lea    edx,[esp+0x3c]
1001d2af:	push   edx
1001d2b0:	push   edx
1001d2b1:	push   edx
1001d2b2:	push   edx
1001d2b3:	lea    edx,[esp+0x3c]
1001d2b7:	push   edx
1001d2b8:	push   eax
1001d2b9:	call   DWORD PTR [ecx+0xd0]
1001d2bf:	lea    eax,[esp+0x2c]
1001d2c3:	push   eax
1001d2c4:	call   edi
1001d2c6:	lea    eax,[esp+0x3c]
1001d2ca:	push   eax
1001d2cb:	call   edi
1001d2cd:	mov    edi,DWORD PTR [esp+0x1c]
1001d2d1:	mov    BYTE PTR [esp+0x58],0x0
1001d2d6:	mov    eax,DWORD PTR [esp+0x18]
1001d2da:	cmp    eax,ebx
1001d2dc:	je     0x1001d1ac
1001d2e2:	mov    ecx,DWORD PTR [eax]
1001d2e4:	push   eax
1001d2e5:	call   DWORD PTR [ecx+0x8]
1001d2e8:	jmp    0x1001d1ac
1001d2ed:	push   ebp
1001d2ee:	mov    ebp,esp
1001d2f0:	mov    ecx,DWORD PTR [ebp+0x8]
1001d2f3:	mov    eax,DWORD PTR [ecx+0x80]
1001d2f9:	mov    ecx,DWORD PTR [ecx+0x34]
1001d2fc:	shr    eax,0x5
1001d2ff:	and    eax,0x1
1001d302:	test   ecx,ecx
1001d304:	mov    DWORD PTR [ebp+0x8],eax
1001d307:	je     0x1001d327
1001d309:	mov    edx,DWORD PTR [ecx]
1001d30b:	lea    eax,[ebp+0x8]
1001d30e:	push   eax
1001d30f:	push   DWORD PTR [ebp+0x18]
1001d312:	mov    eax,DWORD PTR [ebp+0x10]
1001d315:	push   DWORD PTR [ebp+0x14]
1001d318:	push   DWORD PTR [eax+0x4]
1001d31b:	push   DWORD PTR [eax]
1001d31d:	push   DWORD PTR [ebp+0xc]
1001d320:	push   ecx
1001d321:	call   DWORD PTR [edx+0x1c]
1001d324:	mov    eax,DWORD PTR [ebp+0x8]
1001d327:	pop    ebp
1001d328:	ret    0x14
1001d32b:	mov    eax,DWORD PTR [esp+0x8]
1001d32f:	test   eax,eax
1001d331:	jne    0x1001d33a
1001d333:	mov    eax,0x80004003
1001d338:	jmp    0x1001d36b
1001d33a:	mov    ecx,DWORD PTR [esp+0x4]
1001d33e:	mov    edx,DWORD PTR [ecx+0x34]
1001d341:	test   edx,edx
1001d343:	je     0x1001d357
1001d345:	mov    ecx,DWORD PTR [edx]
1001d347:	push   esi
1001d348:	lea    esi,[eax+0x8]
1001d34b:	push   esi
1001d34c:	add    eax,0x4
1001d34f:	push   eax
1001d350:	push   edx
1001d351:	call   DWORD PTR [ecx+0x20]
1001d354:	pop    esi
1001d355:	jmp    0x1001d36b
1001d357:	mov    edx,DWORD PTR [ecx+0x98]
1001d35d:	mov    DWORD PTR [eax+0x4],edx
1001d360:	mov    ecx,DWORD PTR [ecx+0x9c]
1001d366:	mov    DWORD PTR [eax+0x8],ecx
1001d369:	xor    eax,eax
1001d36b:	ret    0x8
1001d36e:	push   ebp
1001d36f:	mov    ebp,esp
1001d371:	mov    ecx,DWORD PTR [ebp+0x8]
1001d374:	mov    eax,DWORD PTR [ecx+0x80]
1001d37a:	mov    ecx,DWORD PTR [ecx+0x34]
1001d37d:	shr    eax,0x6
1001d380:	and    eax,0x1
1001d383:	test   ecx,ecx
1001d385:	mov    DWORD PTR [ebp+0x8],eax
1001d388:	je     0x1001d3a6
1001d38a:	mov    eax,DWORD PTR [ecx]
1001d38c:	lea    edx,[ebp+0x8]
1001d38f:	push   edx
1001d390:	push   DWORD PTR [ebp+0x1c]
1001d393:	push   DWORD PTR [ebp+0x18]
1001d396:	push   DWORD PTR [ebp+0x14]
1001d399:	push   DWORD PTR [ebp+0x10]
1001d39c:	push   DWORD PTR [ebp+0xc]
1001d39f:	push   ecx
1001d3a0:	call   DWORD PTR [eax+0x24]
1001d3a3:	mov    eax,DWORD PTR [ebp+0x8]
1001d3a6:	pop    ebp
1001d3a7:	ret    0x18
1001d3aa:	mov    ecx,DWORD PTR [esp+0x4]
1001d3ae:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3b1:	xor    eax,eax
1001d3b3:	test   ecx,ecx
1001d3b5:	je     0x1001d3bd
1001d3b7:	mov    eax,DWORD PTR [ecx]
1001d3b9:	push   ecx
1001d3ba:	call   DWORD PTR [eax+0x28]
1001d3bd:	ret    0x4
1001d3c0:	mov    ecx,DWORD PTR [esp+0x4]
1001d3c4:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3c7:	xor    eax,eax
1001d3c9:	test   ecx,ecx
1001d3cb:	je     0x1001d3d3
1001d3cd:	mov    eax,DWORD PTR [ecx]
1001d3cf:	push   ecx
1001d3d0:	call   DWORD PTR [eax+0x2c]
1001d3d3:	ret    0x4
1001d3d6:	mov    ecx,DWORD PTR [esp+0x4]
1001d3da:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3dd:	xor    eax,eax
1001d3df:	test   ecx,ecx
1001d3e1:	je     0x1001d3f2
1001d3e3:	mov    edx,DWORD PTR [esp+0x8]
1001d3e7:	mov    eax,DWORD PTR [ecx]
1001d3e9:	neg    edx
1001d3eb:	sbb    edx,edx
1001d3ed:	push   edx
1001d3ee:	push   ecx
1001d3ef:	call   DWORD PTR [eax+0x30]
1001d3f2:	ret    0x8
1001d3f5:	mov    ecx,DWORD PTR [esp+0x4]
1001d3f9:	mov    ecx,DWORD PTR [ecx+0x34]
1001d3fc:	xor    eax,eax
1001d3fe:	test   ecx,ecx
1001d400:	je     0x1001d411
1001d402:	mov    edx,DWORD PTR [esp+0x8]
1001d406:	mov    eax,DWORD PTR [ecx]
1001d408:	neg    edx
1001d40a:	sbb    edx,edx
1001d40c:	push   edx
1001d40d:	push   ecx
1001d40e:	call   DWORD PTR [eax+0x34]
1001d411:	ret    0x8
1001d414:	mov    ecx,DWORD PTR [esp+0x4]
1001d418:	mov    ecx,DWORD PTR [ecx+0x34]
1001d41b:	xor    eax,eax
1001d41d:	test   ecx,ecx
1001d41f:	je     0x1001d430
1001d421:	mov    edx,DWORD PTR [esp+0x8]
1001d425:	mov    eax,DWORD PTR [ecx]
1001d427:	neg    edx
1001d429:	sbb    edx,edx
1001d42b:	push   edx
1001d42c:	push   ecx
1001d42d:	call   DWORD PTR [eax+0x38]
1001d430:	ret    0x8
1001d433:	mov    ecx,DWORD PTR [esp+0x4]
1001d437:	mov    ecx,DWORD PTR [ecx+0x34]
1001d43a:	xor    eax,eax
1001d43c:	test   ecx,ecx
1001d43e:	je     0x1001d462
1001d440:	mov    eax,DWORD PTR [esp+0x10]
1001d444:	mov    edx,DWORD PTR [ecx]
1001d446:	neg    eax
1001d448:	sbb    eax,eax
1001d44a:	push   eax
1001d44b:	push   DWORD PTR [esp+0x10]
1001d44f:	mov    eax,DWORD PTR [esp+0x10]
1001d453:	push   DWORD PTR [eax+0xc]
1001d456:	push   DWORD PTR [eax+0x8]
1001d459:	push   DWORD PTR [eax+0x4]
1001d45c:	push   DWORD PTR [eax]
1001d45e:	push   ecx
1001d45f:	call   DWORD PTR [edx+0x3c]
1001d462:	ret    0x10
1001d465:	push   0x4
1001d467:	mov    eax,0x1005fffd
1001d46c:	call   0x10059df5
1001d471:	mov    eax,DWORD PTR [ebp+0x8]
1001d474:	mov    edi,DWORD PTR [eax+0x34]
1001d477:	test   edi,edi
1001d479:	mov    DWORD PTR [ebp-0x10],0x1
1001d480:	je     0x1001d4b7
1001d482:	push   DWORD PTR [ebp+0x10]
1001d485:	lea    esi,[ebp+0x8]
1001d488:	call   0x1001b68f
1001d48d:	and    DWORD PTR [ebp-0x4],0x0
1001d491:	mov    ecx,DWORD PTR [edi]
1001d493:	lea    edx,[ebp-0x10]
1001d496:	push   edx
1001d497:	push   DWORD PTR [ebp+0x14]
1001d49a:	push   DWORD PTR [eax]
1001d49c:	mov    eax,DWORD PTR [ebp+0xc]
1001d49f:	push   DWORD PTR [eax+0xc]
1001d4a2:	push   DWORD PTR [eax+0x8]
1001d4a5:	push   DWORD PTR [eax+0x4]
1001d4a8:	push   DWORD PTR [eax]
1001d4aa:	push   edi
1001d4ab:	call   DWORD PTR [ecx+0x40]
1001d4ae:	push   DWORD PTR [ebp+0x8]
1001d4b1:	call   DWORD PTR ds:0x100672b4
1001d4b7:	mov    eax,DWORD PTR [ebp-0x10]
1001d4ba:	call   0x10059ecd
1001d4bf:	ret    0x10
1001d4c2:	push   ebp
1001d4c3:	mov    ebp,esp
1001d4c5:	push   ebx
1001d4c6:	xor    ebx,ebx
1001d4c8:	push   edi
1001d4c9:	mov    edi,DWORD PTR [ebp+0xc]
1001d4cc:	inc    ebx
1001d4cd:	test   edi,edi
1001d4cf:	jne    0x1001d4db
1001d4d1:	mov    eax,0x80004003
1001d4d6:	jmp    0x1001d55d
1001d4db:	and    DWORD PTR [edi],0x0
1001d4de:	push   esi
1001d4df:	mov    esi,DWORD PTR [ebp+0x8]
1001d4e2:	mov    eax,DWORD PTR [esi+0x34]
1001d4e5:	test   eax,eax
1001d4e7:	je     0x1001d503
1001d4e9:	push   DWORD PTR [ebp+0x10]
1001d4ec:	mov    ecx,DWORD PTR [eax]
1001d4ee:	push   edi
1001d4ef:	push   eax
1001d4f0:	call   DWORD PTR [ecx+0x44]
1001d4f3:	mov    ebx,eax
1001d4f5:	test   ebx,ebx
1001d4f7:	jl     0x1001d4fe
1001d4f9:	cmp    DWORD PTR [edi],0x0
1001d4fc:	jne    0x1001d55a
1001d4fe:	xor    ebx,ebx
1001d500:	inc    ebx
1001d501:	jmp    0x1001d55a
1001d503:	push   DWORD PTR [esi+0xa0]
1001d509:	call   DWORD PTR ds:0x100672a8
1001d50f:	test   eax,eax
1001d511:	je     0x1001d55a
1001d513:	push   DWORD PTR [esi+0xa0]
1001d519:	call   DWORD PTR ds:0x100672a0
1001d51f:	add    eax,0x2
1001d522:	push   eax
1001d523:	mov    DWORD PTR [ebp+0xc],eax
1001d526:	call   DWORD PTR ds:0x10067430
1001d52c:	mov    ebx,eax
1001d52e:	test   ebx,ebx
1001d530:	jne    0x1001d539
1001d532:	mov    eax,0x8007000e
1001d537:	jmp    0x1001d55c
1001d539:	push   DWORD PTR [esi+0xa0]
1001d53f:	push   DWORD PTR [ebp+0xc]
1001d542:	push   ebx
1001d543:	call   0x1001475a
1001d548:	add    esp,0xc
1001d54b:	test   al,al
1001d54d:	jne    0x1001d556
1001d54f:	mov    eax,0x80004005
1001d554:	jmp    0x1001d55c
1001d556:	mov    DWORD PTR [edi],ebx
1001d558:	xor    ebx,ebx
1001d55a:	mov    eax,ebx
1001d55c:	pop    esi
1001d55d:	pop    edi
1001d55e:	pop    ebx
1001d55f:	pop    ebp
1001d560:	ret    0xc
1001d563:	push   0x0
1001d565:	mov    eax,0x1005faf7
1001d56a:	call   0x10059df5
1001d56f:	mov    esi,DWORD PTR [ebp+0x10]
1001d572:	test   esi,esi
1001d574:	jne    0x1001d57d
1001d576:	mov    eax,0x80004003
1001d57b:	jmp    0x1001d5d9
1001d57d:	and    DWORD PTR [esi],0x0
1001d580:	mov    eax,DWORD PTR [ebp+0x8]
1001d583:	mov    eax,DWORD PTR [eax+0x34]
1001d586:	test   eax,eax
1001d588:	mov    edi,0x80004001
1001d58d:	je     0x1001d5d7
1001d58f:	and    DWORD PTR [ebp+0x10],0x0
1001d593:	and    DWORD PTR [ebp-0x4],0x0
1001d597:	mov    ecx,DWORD PTR [eax]
1001d599:	lea    edx,[ebp+0x10]
1001d59c:	push   edx
1001d59d:	push   DWORD PTR [ebp+0xc]
1001d5a0:	push   eax
1001d5a1:	call   DWORD PTR [ecx+0x48]
1001d5a4:	mov    edi,eax
1001d5a6:	mov    eax,DWORD PTR [ebp+0x10]
1001d5a9:	test   eax,eax
1001d5ab:	je     0x1001d5bd
1001d5ad:	mov    ecx,DWORD PTR [eax]
1001d5af:	push   esi
1001d5b0:	push   0x10071be8
1001d5b5:	push   eax
1001d5b6:	call   DWORD PTR [ecx]
1001d5b8:	mov    edi,eax
1001d5ba:	mov    eax,DWORD PTR [ebp+0x10]
1001d5bd:	test   edi,edi
1001d5bf:	jl     0x1001d5c6
1001d5c1:	cmp    DWORD PTR [esi],0x0
1001d5c4:	jne    0x1001d5c9
1001d5c6:	xor    edi,edi
1001d5c8:	inc    edi
1001d5c9:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d5cd:	test   eax,eax
1001d5cf:	je     0x1001d5d7
1001d5d1:	mov    ecx,DWORD PTR [eax]
1001d5d3:	push   eax
1001d5d4:	call   DWORD PTR [ecx+0x8]
1001d5d7:	mov    eax,edi
1001d5d9:	call   0x10059ecd
1001d5de:	ret    0xc
1001d5e1:	push   esi
1001d5e2:	mov    esi,DWORD PTR [esp+0xc]
1001d5e6:	test   esi,esi
1001d5e8:	jne    0x1001d5f1
1001d5ea:	mov    eax,0x80004003
1001d5ef:	jmp    0x1001d62a
1001d5f1:	and    DWORD PTR [esi],0x0
1001d5f4:	mov    eax,DWORD PTR [esp+0x8]
1001d5f8:	mov    ecx,DWORD PTR [eax+0x34]
1001d5fb:	test   ecx,ecx
1001d5fd:	je     0x1001d616
1001d5ff:	mov    eax,DWORD PTR [ecx]
1001d601:	push   esi
1001d602:	push   ecx
1001d603:	call   DWORD PTR [eax+0x4c]
1001d606:	test   eax,eax
1001d608:	jl     0x1001d60f
1001d60a:	cmp    DWORD PTR [esi],0x0
1001d60d:	jne    0x1001d62a
1001d60f:	mov    eax,0x80004002
1001d614:	jmp    0x1001d62a
1001d616:	mov    ecx,DWORD PTR [eax+0x30]
1001d619:	mov    DWORD PTR [esi],ecx
1001d61b:	mov    eax,DWORD PTR [eax+0x30]
1001d61e:	test   eax,eax
1001d620:	je     0x1001d628
1001d622:	mov    ecx,DWORD PTR [eax]
1001d624:	push   eax
1001d625:	call   DWORD PTR [ecx+0x4]
1001d628:	xor    eax,eax
1001d62a:	pop    esi
1001d62b:	ret    0x8
1001d62e:	push   0x4
1001d630:	mov    eax,0x10060760
1001d635:	call   0x10059df5
1001d63a:	mov    eax,DWORD PTR [ebp+0x14]
1001d63d:	xor    ebx,ebx
1001d63f:	cmp    eax,ebx
1001d641:	jne    0x1001d64d
1001d643:	mov    eax,0x80004003
1001d648:	jmp    0x1001d6f2
1001d64d:	mov    DWORD PTR [eax],ebx
1001d64f:	mov    eax,DWORD PTR [ebp+0x8]
1001d652:	mov    edi,DWORD PTR [eax+0x34]
1001d655:	cmp    edi,ebx
1001d657:	mov    DWORD PTR [ebp-0x10],0x1
1001d65e:	je     0x1001d6ef
1001d664:	mov    DWORD PTR [ebp+0x8],ebx
1001d667:	mov    DWORD PTR [ebp-0x4],ebx
1001d66a:	push   DWORD PTR [ebp+0x10]
1001d66d:	lea    esi,[ebp+0x10]
1001d670:	call   0x1001b665
1001d675:	mov    BYTE PTR [ebp-0x4],0x1
1001d679:	mov    eax,DWORD PTR [eax]
1001d67b:	mov    ecx,DWORD PTR [edi]
1001d67d:	lea    edx,[ebp+0x8]
1001d680:	push   edx
1001d681:	push   eax
1001d682:	push   DWORD PTR [ebp+0xc]
1001d685:	push   edi
1001d686:	call   DWORD PTR [ecx+0x50]
1001d689:	mov    BYTE PTR [ebp-0x4],bl
1001d68c:	push   DWORD PTR [ebp+0x10]
1001d68f:	mov    esi,DWORD PTR ds:0x100672b4
1001d695:	mov    DWORD PTR [ebp-0x10],eax
1001d698:	call   esi
1001d69a:	cmp    DWORD PTR [ebp-0x10],ebx
1001d69d:	jl     0x1001d6e3
1001d69f:	push   DWORD PTR [ebp+0x8]
1001d6a2:	mov    edi,DWORD PTR ds:0x100672a8
1001d6a8:	call   edi
1001d6aa:	test   eax,eax
1001d6ac:	je     0x1001d6e3
1001d6ae:	push   DWORD PTR [ebp+0x8]
1001d6b1:	call   edi
1001d6b3:	lea    edi,[eax+eax*1+0x2]
1001d6b7:	push   edi
1001d6b8:	call   DWORD PTR ds:0x10067430
1001d6be:	cmp    eax,ebx
1001d6c0:	mov    ecx,DWORD PTR [ebp+0x14]
1001d6c3:	mov    DWORD PTR [ecx],eax
1001d6c5:	jne    0x1001d6d3
1001d6c7:	push   DWORD PTR [ebp+0x8]
1001d6ca:	call   esi
1001d6cc:	mov    eax,0x8007000e
1001d6d1:	jmp    0x1001d6f2
1001d6d3:	push   edi
1001d6d4:	push   DWORD PTR [ebp+0x8]
1001d6d7:	push   edi
1001d6d8:	push   eax
1001d6d9:	call   0x10014786
1001d6de:	add    esp,0x10
1001d6e1:	jmp    0x1001d6ea
1001d6e3:	mov    DWORD PTR [ebp-0x10],0x1
1001d6ea:	push   DWORD PTR [ebp+0x8]
1001d6ed:	call   esi
1001d6ef:	mov    eax,DWORD PTR [ebp-0x10]
1001d6f2:	call   0x10059ecd
1001d6f7:	ret    0x10
1001d6fa:	push   0x0
1001d6fc:	mov    eax,0x1005faf7
1001d701:	call   0x10059df5
1001d706:	mov    edi,DWORD PTR [ebp+0x10]
1001d709:	xor    ecx,ecx
1001d70b:	cmp    edi,ecx
1001d70d:	jne    0x1001d716
1001d70f:	mov    eax,0x80004003
1001d714:	jmp    0x1001d76f
1001d716:	mov    esi,DWORD PTR [ebp+0x8]
1001d719:	xor    ebx,ebx
1001d71b:	mov    DWORD PTR [edi],ecx
1001d71d:	mov    eax,DWORD PTR [esi+0x34]
1001d720:	inc    ebx
1001d721:	cmp    eax,ecx
1001d723:	je     0x1001d76d
1001d725:	mov    DWORD PTR [ebp+0x10],ecx
1001d728:	lea    edx,[ebp+0x10]
1001d72b:	push   edx
1001d72c:	push   DWORD PTR [ebp+0xc]
1001d72f:	mov    DWORD PTR [ebp-0x4],ecx
1001d732:	mov    ecx,DWORD PTR [eax]
1001d734:	push   eax
1001d735:	call   DWORD PTR [ecx+0x54]
1001d738:	cmp    DWORD PTR [ebp+0x10],0x0
1001d73c:	mov    ebx,eax
1001d73e:	je     0x1001d750
1001d740:	push   edi
1001d741:	lea    eax,[esi-0x24]
1001d744:	mov    ecx,DWORD PTR [eax]
1001d746:	push   0x10071bf8
1001d74b:	push   eax
1001d74c:	call   DWORD PTR [ecx]
1001d74e:	mov    ebx,eax
1001d750:	test   ebx,ebx
1001d752:	jl     0x1001d759
1001d754:	cmp    DWORD PTR [edi],0x0
1001d757:	jne    0x1001d75c
1001d759:	xor    ebx,ebx
1001d75b:	inc    ebx
1001d75c:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d760:	mov    eax,DWORD PTR [ebp+0x10]
1001d763:	test   eax,eax
1001d765:	je     0x1001d76d
1001d767:	mov    ecx,DWORD PTR [eax]
1001d769:	push   eax
1001d76a:	call   DWORD PTR [ecx+0x8]
1001d76d:	mov    eax,ebx
1001d76f:	call   0x10059ecd
1001d774:	ret    0xc
1001d777:	push   0x0
1001d779:	mov    eax,0x1005fb3d
1001d77e:	call   0x10059df5
1001d783:	mov    eax,DWORD PTR [ebp+0x8]
1001d786:	mov    eax,DWORD PTR [eax+0x60]
1001d789:	xor    ecx,ecx
1001d78b:	xor    esi,esi
1001d78d:	test   eax,eax
1001d78f:	mov    DWORD PTR [ebp+0x8],ecx
1001d792:	je     0x1001d7a5
1001d794:	mov    ecx,DWORD PTR [eax]
1001d796:	lea    edx,[ebp+0x8]
1001d799:	push   edx
1001d79a:	push   0x10071c08
1001d79f:	push   eax
1001d7a0:	call   DWORD PTR [ecx]
1001d7a2:	mov    ecx,DWORD PTR [ebp+0x8]
1001d7a5:	and    DWORD PTR [ebp-0x4],0x0
1001d7a9:	test   ecx,ecx
1001d7ab:	je     0x1001d7bb
1001d7ad:	push   DWORD PTR [ebp+0xc]
1001d7b0:	mov    eax,DWORD PTR [ecx]
1001d7b2:	push   ecx
1001d7b3:	call   DWORD PTR [eax+0x14]
1001d7b6:	mov    ecx,DWORD PTR [ebp+0x8]
1001d7b9:	mov    esi,eax
1001d7bb:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d7bf:	test   ecx,ecx
1001d7c1:	je     0x1001d7c9
1001d7c3:	mov    eax,DWORD PTR [ecx]
1001d7c5:	push   ecx
1001d7c6:	call   DWORD PTR [eax+0x8]
1001d7c9:	mov    eax,esi
1001d7cb:	call   0x10059ecd
1001d7d0:	ret    0x8
1001d7d3:	push   ebp
1001d7d4:	mov    ebp,esp
1001d7d6:	push   esi
1001d7d7:	push   DWORD PTR [ebp+0x28]
1001d7da:	mov    esi,DWORD PTR [ebp+0x8]
1001d7dd:	push   DWORD PTR [ebp+0x24]
1001d7e0:	push   DWORD PTR [ebp+0x20]
1001d7e3:	push   DWORD PTR [ebp+0x1c]
1001d7e6:	push   DWORD PTR [ebp+0x18]
1001d7e9:	push   DWORD PTR [ebp+0x14]
1001d7ec:	push   DWORD PTR [ebp+0x10]
1001d7ef:	push   DWORD PTR [ebp+0xc]
1001d7f2:	push   esi
1001d7f3:	call   0x100203b8
1001d7f8:	cmp    eax,0x80020003
1001d7fd:	je     0x1001d806
1001d7ff:	cmp    eax,0x8002802b
1001d804:	jne    0x1001d841
1001d806:	mov    ecx,DWORD PTR [esi+0x8]
1001d809:	test   ecx,ecx
1001d80b:	je     0x1001d841
1001d80d:	push   DWORD PTR [ebp+0x28]
1001d810:	mov    eax,DWORD PTR [ecx]
1001d812:	push   DWORD PTR [ebp+0x24]
1001d815:	push   DWORD PTR [ebp+0x20]
1001d818:	push   DWORD PTR [ebp+0x1c]
1001d81b:	push   DWORD PTR [ebp+0x18]
1001d81e:	push   DWORD PTR [ebp+0x14]
1001d821:	push   DWORD PTR [ebp+0x10]
1001d824:	push   DWORD PTR [ebp+0xc]
1001d827:	push   ecx
1001d828:	call   DWORD PTR [eax+0x18]
1001d82b:	test   eax,eax
1001d82d:	jl     0x1001d841
1001d82f:	test   BYTE PTR [ebp+0x18],0x4
1001d833:	je     0x1001d841
1001d835:	push   DWORD PTR [ebp+0xc]
1001d838:	add    esi,0xffffffb4
1001d83b:	push   esi
1001d83c:	call   0x1001d777
1001d841:	pop    esi
1001d842:	pop    ebp
1001d843:	ret    0x24
1001d846:	mov    eax,DWORD PTR [esp+0x4]
1001d84a:	mov    ecx,DWORD PTR [esp+0x8]
1001d84e:	xor    ecx,DWORD PTR [eax+0x7c]
1001d851:	and    ecx,0x1
1001d854:	xor    DWORD PTR [eax+0x7c],ecx
1001d857:	xor    eax,eax
1001d859:	ret    0x8
1001d85c:	mov    eax,DWORD PTR [esp+0x8]
1001d860:	test   eax,eax
1001d862:	jne    0x1001d86b
1001d864:	mov    eax,0x80004003
1001d869:	jmp    0x1001d87e
1001d86b:	mov    ecx,DWORD PTR [esp+0x4]
1001d86f:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d872:	and    cl,0x1
1001d875:	neg    cl
1001d877:	sbb    ecx,ecx
1001d879:	mov    WORD PTR [eax],cx
1001d87c:	xor    eax,eax
1001d87e:	ret    0x8
1001d881:	mov    eax,DWORD PTR [esp+0x8]
1001d885:	push   esi
1001d886:	mov    esi,DWORD PTR [esp+0x8]
1001d88a:	mov    DWORD PTR [esi+0x80],eax
1001d890:	push   0xfffffd43
1001d895:	lea    eax,[esi-0x4c]
1001d898:	push   eax
1001d899:	call   0x1001d777
1001d89e:	push   0x0
1001d8a0:	lea    eax,[esi-0x20]
1001d8a3:	mov    ecx,DWORD PTR [eax]
1001d8a5:	push   0x0
1001d8a7:	push   eax
1001d8a8:	call   DWORD PTR [ecx+0x64]
1001d8ab:	xor    eax,eax
1001d8ad:	pop    esi
1001d8ae:	ret    0x8
1001d8b1:	mov    eax,DWORD PTR [esp+0x8]
1001d8b5:	test   eax,eax
1001d8b7:	jne    0x1001d8c0
1001d8b9:	mov    eax,0x80004003
1001d8be:	jmp    0x1001d8ce
1001d8c0:	mov    ecx,DWORD PTR [esp+0x4]
1001d8c4:	mov    ecx,DWORD PTR [ecx+0x80]
1001d8ca:	mov    DWORD PTR [eax],ecx
1001d8cc:	xor    eax,eax
1001d8ce:	ret    0x8
1001d8d1:	mov    eax,DWORD PTR [esp+0x4]
1001d8d5:	mov    ecx,DWORD PTR [esp+0x8]
1001d8d9:	mov    DWORD PTR [eax+0x84],ecx
1001d8df:	push   0xfffffd40
1001d8e4:	add    eax,0xffffffb4
1001d8e7:	push   eax
1001d8e8:	call   0x1001d777
1001d8ed:	xor    eax,eax
1001d8ef:	ret    0x8
1001d8f2:	mov    eax,DWORD PTR [esp+0x8]
1001d8f6:	test   eax,eax
1001d8f8:	jne    0x1001d901
1001d8fa:	mov    eax,0x80004003
1001d8ff:	jmp    0x1001d90f
1001d901:	mov    ecx,DWORD PTR [esp+0x4]
1001d905:	mov    ecx,DWORD PTR [ecx+0x84]
1001d90b:	mov    DWORD PTR [eax],ecx
1001d90d:	xor    eax,eax
1001d90f:	ret    0x8
1001d912:	mov    eax,DWORD PTR [esp+0x4]
1001d916:	mov    ecx,DWORD PTR [esp+0x8]
1001d91a:	mov    DWORD PTR [eax+0x88],ecx
1001d920:	push   0xfffffd3f
1001d925:	add    eax,0xffffffb4
1001d928:	push   eax
1001d929:	call   0x1001d777
1001d92e:	xor    eax,eax
1001d930:	ret    0x8
1001d933:	mov    eax,DWORD PTR [esp+0x8]
1001d937:	test   eax,eax
1001d939:	jne    0x1001d942
1001d93b:	mov    eax,0x80004003
1001d940:	jmp    0x1001d950
1001d942:	mov    ecx,DWORD PTR [esp+0x4]
1001d946:	mov    ecx,DWORD PTR [ecx+0x88]
1001d94c:	mov    DWORD PTR [eax],ecx
1001d94e:	xor    eax,eax
1001d950:	ret    0x8
1001d953:	movsx  ecx,WORD PTR [esp+0x8]
1001d958:	mov    eax,DWORD PTR [esp+0x4]
1001d95c:	add    ecx,ecx
1001d95e:	xor    ecx,DWORD PTR [eax+0x7c]
1001d961:	push   0xfffffd3b
1001d966:	and    ecx,0x2
1001d969:	xor    DWORD PTR [eax+0x7c],ecx
1001d96c:	add    eax,0xffffffb4
1001d96f:	push   eax
1001d970:	call   0x1001d777
1001d975:	xor    eax,eax
1001d977:	ret    0x8
1001d97a:	mov    eax,DWORD PTR [esp+0x8]
1001d97e:	test   eax,eax
1001d980:	jne    0x1001d989
1001d982:	mov    eax,0x80004003
1001d987:	jmp    0x1001d99c
1001d989:	mov    ecx,DWORD PTR [esp+0x4]
1001d98d:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d990:	and    cl,0x2
1001d993:	neg    cl
1001d995:	sbb    ecx,ecx
1001d997:	mov    WORD PTR [eax],cx
1001d99a:	xor    eax,eax
1001d99c:	ret    0x8
1001d99f:	movsx  ecx,WORD PTR [esp+0x8]
1001d9a4:	mov    eax,DWORD PTR [esp+0x4]
1001d9a8:	shl    ecx,0x2
1001d9ab:	xor    ecx,DWORD PTR [eax+0x7c]
1001d9ae:	push   0xfffffd37
1001d9b3:	and    ecx,0x4
1001d9b6:	xor    DWORD PTR [eax+0x7c],ecx
1001d9b9:	add    eax,0xffffffb4
1001d9bc:	push   eax
1001d9bd:	call   0x1001d777
1001d9c2:	xor    eax,eax
1001d9c4:	ret    0x8
1001d9c7:	mov    eax,DWORD PTR [esp+0x8]
1001d9cb:	test   eax,eax
1001d9cd:	jne    0x1001d9d6
1001d9cf:	mov    eax,0x80004003
1001d9d4:	jmp    0x1001d9e9
1001d9d6:	mov    ecx,DWORD PTR [esp+0x4]
1001d9da:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d9dd:	and    cl,0x4
1001d9e0:	neg    cl
1001d9e2:	sbb    ecx,ecx
1001d9e4:	mov    WORD PTR [eax],cx
1001d9e7:	xor    eax,eax
1001d9e9:	ret    0x8
1001d9ec:	push   ebx
1001d9ed:	mov    ebx,DWORD PTR [esp+0x8]
1001d9f1:	push   esi
1001d9f2:	push   edi
1001d9f3:	mov    edi,DWORD PTR [esp+0x14]
1001d9f7:	lea    esi,[ebx+0x8c]
1001d9fd:	cmp    DWORD PTR [esi],edi
1001d9ff:	je     0x1001da06
1001da01:	call   0x10007961
1001da06:	push   0xfffffd41
1001da0b:	add    ebx,0xffffffb4
1001da0e:	push   ebx
1001da0f:	call   0x1001d777
1001da14:	pop    edi
1001da15:	pop    esi
1001da16:	xor    eax,eax
1001da18:	pop    ebx
1001da19:	ret    0x8
1001da1c:	push   ebp
1001da1d:	lea    ebp,[esp-0x70]
1001da21:	sub    esp,0x8c
1001da27:	mov    eax,ds:0x100801ac
1001da2c:	xor    eax,ebp
1001da2e:	mov    DWORD PTR [ebp+0x6c],eax
1001da31:	mov    eax,DWORD PTR [ebp+0x7c]
1001da34:	test   eax,eax
1001da36:	push   ebx
1001da37:	mov    ebx,DWORD PTR [ebp+0x78]
1001da3a:	mov    DWORD PTR [ebp+0x4],eax
1001da3d:	jne    0x1001da49
1001da3f:	mov    eax,0x80004003
1001da44:	jmp    0x1001db5f
1001da49:	and    DWORD PTR [eax],0x0
1001da4c:	push   esi
1001da4d:	lea    esi,[ebx+0x8c]
1001da53:	cmp    DWORD PTR [esi],0x0
1001da56:	push   edi
1001da57:	jne    0x1001db4b
1001da5d:	call   DWORD PTR ds:0x10080ffc
1001da63:	mov    edi,DWORD PTR ds:0x10067034
1001da69:	push   0x11
1001da6b:	call   edi
1001da6d:	test   eax,eax
1001da6f:	jne    0x1001da7d
1001da71:	push   0xd
1001da73:	call   edi
1001da75:	test   eax,eax
1001da77:	je     0x1001db07
1001da7d:	lea    ecx,[ebp+0x10]
1001da80:	push   ecx
1001da81:	push   0x5c
1001da83:	push   eax
1001da84:	call   DWORD PTR ds:0x1006703c
1001da8a:	lea    eax,[ebp+0x2c]
1001da8d:	mov    DWORD PTR [ebp-0x18],eax
1001da90:	mov    ax,WORD PTR [ebp+0x20]
1001da94:	mov    WORD PTR [ebp-0xc],ax
1001da98:	movzx  ax,BYTE PTR [ebp+0x27]
1001da9d:	mov    WORD PTR [ebp-0xa],ax
1001daa1:	movzx  eax,BYTE PTR [ebp+0x24]
1001daa5:	mov    DWORD PTR [ebp-0x8],eax
1001daa8:	movzx  eax,BYTE PTR [ebp+0x25]
1001daac:	mov    DWORD PTR [ebp-0x4],eax
1001daaf:	movzx  eax,BYTE PTR [ebp+0x26]
1001dab3:	mov    DWORD PTR [ebp+0x0],eax
1001dab6:	mov    eax,DWORD PTR [ebp+0x10]
1001dab9:	test   eax,eax
1001dabb:	mov    DWORD PTR [ebp-0x1c],0x20
1001dac2:	mov    DWORD PTR [ebp+0x8],eax
1001dac5:	jge    0x1001dacc
1001dac7:	neg    eax
1001dac9:	mov    DWORD PTR [ebp+0x8],eax
1001dacc:	mov    eax,DWORD PTR [ebx-0x48]
1001dacf:	test   eax,eax
1001dad1:	je     0x1001daf2
1001dad3:	push   eax
1001dad4:	call   DWORD PTR ds:0x10067330
1001dada:	mov    edi,eax
1001dadc:	test   edi,edi
1001dade:	je     0x1001db07
1001dae0:	push   0x5a
1001dae2:	push   edi
1001dae3:	call   DWORD PTR ds:0x10067028
1001dae9:	push   edi
1001daea:	push   DWORD PTR [ebx-0x48]
1001daed:	mov    DWORD PTR [ebp+0xc],eax
1001daf0:	jmp    0x1001db1e
1001daf2:	mov    edi,DWORD PTR ds:0x10067360
1001daf8:	call   edi
1001dafa:	push   eax
1001dafb:	call   DWORD PTR ds:0x10067330
1001db01:	mov    ebx,eax
1001db03:	test   ebx,ebx
1001db05:	jne    0x1001db0e
1001db07:	call   0x1000693b
1001db0c:	jmp    0x1001db5d
1001db0e:	push   0x5a
1001db10:	push   ebx
1001db11:	call   DWORD PTR ds:0x10067028
1001db17:	push   ebx
1001db18:	mov    DWORD PTR [ebp+0xc],eax
1001db1b:	call   edi
1001db1d:	push   eax
1001db1e:	call   DWORD PTR ds:0x10067300
1001db24:	mov    eax,DWORD PTR [ebp+0x8]
1001db27:	imul   eax,eax,0xafc80
1001db2d:	cdq    
1001db2e:	idiv   DWORD PTR [ebp+0xc]
1001db31:	and    DWORD PTR [ebp-0x10],0x0
1001db35:	push   esi
1001db36:	push   0x10071c18
1001db3b:	mov    DWORD PTR [ebp-0x14],eax
1001db3e:	lea    eax,[ebp-0x1c]
1001db41:	push   eax
1001db42:	call   DWORD PTR ds:0x10067290
1001db48:	mov    eax,DWORD PTR [ebp+0x4]
1001db4b:	mov    ecx,DWORD PTR [esi]
1001db4d:	mov    DWORD PTR [eax],ecx
1001db4f:	mov    esi,DWORD PTR [esi]
1001db51:	test   esi,esi
1001db53:	je     0x1001db5b
1001db55:	mov    eax,DWORD PTR [esi]
1001db57:	push   esi
1001db58:	call   DWORD PTR [eax+0x4]
1001db5b:	xor    eax,eax
1001db5d:	pop    edi
1001db5e:	pop    esi
1001db5f:	mov    ecx,DWORD PTR [ebp+0x6c]
1001db62:	xor    ecx,ebp
1001db64:	pop    ebx
1001db65:	call   0x10043615
1001db6a:	add    ebp,0x70
1001db6d:	leave  
1001db6e:	ret    0x8
1001db71:	movsx  ecx,WORD PTR [esp+0x8]
1001db76:	mov    eax,DWORD PTR [esp+0x4]
1001db7a:	shl    ecx,0x3
1001db7d:	xor    ecx,DWORD PTR [eax+0x7c]
1001db80:	push   0xfffffd3e
1001db85:	and    ecx,0x8
1001db88:	xor    DWORD PTR [eax+0x7c],ecx
1001db8b:	add    eax,0xffffffb4
1001db8e:	push   eax
1001db8f:	call   0x1001d777
1001db94:	xor    eax,eax
1001db96:	ret    0x8
1001db99:	mov    eax,DWORD PTR [esp+0x8]
1001db9d:	test   eax,eax
1001db9f:	jne    0x1001dba8
1001dba1:	mov    eax,0x80004003
1001dba6:	jmp    0x1001dbbb
1001dba8:	mov    ecx,DWORD PTR [esp+0x4]
1001dbac:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dbaf:	and    cl,0x8
1001dbb2:	neg    cl
1001dbb4:	sbb    ecx,ecx
1001dbb6:	mov    WORD PTR [eax],cx
1001dbb9:	xor    eax,eax
1001dbbb:	ret    0x8
1001dbbe:	mov    eax,DWORD PTR [esp+0x8]
1001dbc2:	and    WORD PTR [eax],0x0
1001dbc6:	xor    eax,eax
1001dbc8:	ret    0x8
1001dbcb:	mov    eax,DWORD PTR [esp+0x8]
1001dbcf:	test   eax,eax
1001dbd1:	jne    0x1001dbda
1001dbd3:	mov    eax,0x80004003
1001dbd8:	jmp    0x1001dbe0
1001dbda:	and    WORD PTR [eax],0x0
1001dbde:	xor    eax,eax
1001dbe0:	ret    0x8
1001dbe3:	mov    eax,DWORD PTR [esp+0x4]
1001dbe7:	mov    ecx,DWORD PTR [esp+0x8]
1001dbeb:	mov    DWORD PTR [eax+0x94],ecx
1001dbf1:	push   0xffffffff
1001dbf3:	add    eax,0xffffffb4
1001dbf6:	push   eax
1001dbf7:	call   0x1001d777
1001dbfc:	xor    eax,eax
1001dbfe:	ret    0x8
1001dc01:	mov    eax,DWORD PTR [esp+0x8]
1001dc05:	test   eax,eax
1001dc07:	jne    0x1001dc10
1001dc09:	mov    eax,0x80004003
1001dc0e:	jmp    0x1001dc1e
1001dc10:	mov    ecx,DWORD PTR [esp+0x4]
1001dc14:	mov    ecx,DWORD PTR [ecx+0x94]
1001dc1a:	mov    DWORD PTR [eax],ecx
1001dc1c:	xor    eax,eax
1001dc1e:	ret    0x8
1001dc21:	mov    eax,DWORD PTR [esp+0x4]
1001dc25:	mov    ecx,DWORD PTR [esp+0x8]
1001dc29:	mov    DWORD PTR [eax+0x98],ecx
1001dc2f:	xor    eax,eax
1001dc31:	ret    0x8
1001dc34:	mov    eax,DWORD PTR [esp+0x8]
1001dc38:	test   eax,eax
1001dc3a:	jne    0x1001dc43
1001dc3c:	mov    eax,0x80004003
1001dc41:	jmp    0x1001dc51
1001dc43:	mov    ecx,DWORD PTR [esp+0x4]
1001dc47:	mov    ecx,DWORD PTR [ecx+0x98]
1001dc4d:	mov    DWORD PTR [eax],ecx
1001dc4f:	xor    eax,eax
1001dc51:	ret    0x8
1001dc54:	movsx  ecx,WORD PTR [esp+0x8]
1001dc59:	mov    eax,DWORD PTR [esp+0x4]
1001dc5d:	shl    ecx,0x5
1001dc60:	xor    ecx,DWORD PTR [eax+0x7c]
1001dc63:	and    ecx,0x20
1001dc66:	xor    DWORD PTR [eax+0x7c],ecx
1001dc69:	xor    eax,eax
1001dc6b:	ret    0x8
1001dc6e:	mov    eax,DWORD PTR [esp+0x8]
1001dc72:	test   eax,eax
1001dc74:	jne    0x1001dc7d
1001dc76:	mov    eax,0x80004003
1001dc7b:	jmp    0x1001dc90
1001dc7d:	mov    ecx,DWORD PTR [esp+0x4]
1001dc81:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dc84:	and    cl,0x20
1001dc87:	neg    cl
1001dc89:	sbb    ecx,ecx
1001dc8b:	mov    WORD PTR [eax],cx
1001dc8e:	xor    eax,eax
1001dc90:	ret    0x8
1001dc93:	movsx  ecx,WORD PTR [esp+0x8]
1001dc98:	mov    eax,DWORD PTR [esp+0x4]
1001dc9c:	shl    ecx,0x6
1001dc9f:	xor    ecx,DWORD PTR [eax+0x7c]
1001dca2:	and    ecx,0x40
1001dca5:	xor    DWORD PTR [eax+0x7c],ecx
1001dca8:	xor    eax,eax
1001dcaa:	ret    0x8
1001dcad:	mov    eax,DWORD PTR [esp+0x8]
1001dcb1:	test   eax,eax
1001dcb3:	jne    0x1001dcbc
1001dcb5:	mov    eax,0x80004003
1001dcba:	jmp    0x1001dccf
1001dcbc:	mov    ecx,DWORD PTR [esp+0x4]
1001dcc0:	mov    ecx,DWORD PTR [ecx+0x7c]
1001dcc3:	and    cl,0x40
1001dcc6:	neg    cl
1001dcc8:	sbb    ecx,ecx
1001dcca:	mov    WORD PTR [eax],cx
1001dccd:	xor    eax,eax
1001dccf:	ret    0x8
1001dcd2:	push   esi
1001dcd3:	mov    esi,DWORD PTR [esp+0x8]
1001dcd7:	mov    eax,DWORD PTR [esi+0x9c]
1001dcdd:	cmp    DWORD PTR [esp+0xc],eax
1001dce1:	je     0x1001dd16
1001dce3:	push   eax
1001dce4:	call   DWORD PTR ds:0x100672b4
1001dcea:	cmp    DWORD PTR [esp+0xc],0x0
1001dcef:	je     0x1001dd0f
1001dcf1:	push   DWORD PTR [esp+0xc]
1001dcf5:	call   DWORD PTR ds:0x100672ac
1001dcfb:	test   eax,eax
1001dcfd:	mov    DWORD PTR [esi+0x9c],eax
1001dd03:	jne    0x1001dd16
1001dd05:	push   0x8007000e
1001dd0a:	call   0x10001f2d
1001dd0f:	and    DWORD PTR [esi+0x9c],0x0
1001dd16:	xor    eax,eax
1001dd18:	pop    esi
1001dd19:	ret    0x8
1001dd1c:	mov    eax,DWORD PTR [esp+0x8]
1001dd20:	test   eax,eax
1001dd22:	jne    0x1001dd2b
1001dd24:	mov    eax,0x80004003
1001dd29:	jmp    0x1001dd39
1001dd2b:	mov    ecx,DWORD PTR [esp+0x4]
1001dd2f:	mov    ecx,DWORD PTR [ecx+0x9c]
1001dd35:	mov    DWORD PTR [eax],ecx
1001dd37:	xor    eax,eax
1001dd39:	ret    0x8
1001dd3c:	push   esi
1001dd3d:	mov    esi,DWORD PTR [esp+0x8]
1001dd41:	push   edi
1001dd42:	mov    edi,DWORD PTR [esp+0x10]
1001dd46:	add    esi,0x8
1001dd49:	cmp    DWORD PTR [esi],edi
1001dd4b:	je     0x1001dd52
1001dd4d:	call   0x10007961
1001dd52:	pop    edi
1001dd53:	xor    eax,eax
1001dd55:	pop    esi
1001dd56:	ret    0x8
1001dd59:	push   esi
1001dd5a:	mov    esi,DWORD PTR [esp+0x8]
1001dd5e:	push   edi
1001dd5f:	push   DWORD PTR [esp+0x10]
1001dd63:	push   esi
1001dd64:	call   0x1002032e
1001dd69:	mov    edi,eax
1001dd6b:	test   edi,edi
1001dd6d:	jl     0x1001dd89
1001dd6f:	mov    eax,DWORD PTR [esi+0x4]
1001dd72:	test   eax,eax
1001dd74:	je     0x1001dd89
1001dd76:	mov    ecx,DWORD PTR [eax]
1001dd78:	lea    edx,[esi+0xa4]
1001dd7e:	push   edx
1001dd7f:	push   0x100714ac
1001dd84:	push   eax
1001dd85:	call   DWORD PTR [ecx]
1001dd87:	mov    edi,eax
1001dd89:	cmp    DWORD PTR [esp+0x10],0x0
1001dd8e:	jne    0x1001dda5
1001dd90:	lea    eax,[esi+0xa4]
1001dd96:	mov    ecx,DWORD PTR [eax]
1001dd98:	test   ecx,ecx
1001dd9a:	je     0x1001dda5
1001dd9c:	and    DWORD PTR [eax],0x0
1001dd9f:	mov    eax,DWORD PTR [ecx]
1001dda1:	push   ecx
1001dda2:	call   DWORD PTR [eax+0x8]
1001dda5:	mov    eax,edi
1001dda7:	pop    edi
1001dda8:	pop    esi
1001dda9:	ret    0x8
1001ddac:	push   edi
1001ddad:	mov    edi,DWORD PTR [esp+0xc]
1001ddb1:	test   edi,edi
1001ddb3:	mov    eax,0x80004003
1001ddb8:	je     0x1001dde6
1001ddba:	and    DWORD PTR [edi],0x0
1001ddbd:	push   ebx
1001ddbe:	mov    ebx,DWORD PTR [esp+0xc]
1001ddc2:	mov    eax,DWORD PTR [ebx+0x14]
1001ddc5:	test   eax,eax
1001ddc7:	push   esi
1001ddc8:	mov    esi,0x100714cc
1001ddcd:	je     0x1001ddda
1001ddcf:	mov    ecx,DWORD PTR [eax]
1001ddd1:	push   edi
1001ddd2:	push   esi
1001ddd3:	push   eax
1001ddd4:	call   DWORD PTR [ecx]
1001ddd6:	test   eax,eax
1001ddd8:	jge    0x1001dde4
1001ddda:	push   edi
1001dddb:	lea    eax,[ebx-0x4]
1001ddde:	mov    ecx,DWORD PTR [eax]
1001dde0:	push   esi
1001dde1:	push   eax
1001dde2:	call   DWORD PTR [ecx]
1001dde4:	pop    esi
1001dde5:	pop    ebx
1001dde6:	pop    edi
1001dde7:	ret    0x8
1001ddea:	push   esi
1001ddeb:	mov    esi,DWORD PTR [esp+0x8]
1001ddef:	push   edi
1001ddf0:	push   DWORD PTR [esi-0x24]
1001ddf3:	call   DWORD PTR ds:0x10067330
1001ddf9:	mov    edi,eax
1001ddfb:	xor    edx,edx
1001ddfd:	cmp    edi,edx
1001ddff:	jne    0x1001de08
1001de01:	mov    eax,0x80004005
1001de06:	jmp    0x1001de35
1001de08:	mov    eax,DWORD PTR [esi+0x48]
1001de0b:	cmp    eax,edx
1001de0d:	je     0x1001de29
1001de0f:	push   ebx
1001de10:	mov    ebx,DWORD PTR [eax]
1001de12:	push   edx
1001de13:	push   edx
1001de14:	lea    ecx,[esi+0x8c]
1001de1a:	push   ecx
1001de1b:	push   ecx
1001de1c:	push   edi
1001de1d:	push   edx
1001de1e:	push   edx
1001de1f:	push   edx
1001de20:	push   0xffffffff
1001de22:	push   0x1
1001de24:	push   eax
1001de25:	call   DWORD PTR [ebx+0xc]
1001de28:	pop    ebx
1001de29:	push   edi
1001de2a:	push   DWORD PTR [esi-0x24]
1001de2d:	call   DWORD PTR ds:0x10067300
1001de33:	xor    eax,eax
1001de35:	pop    edi
1001de36:	pop    esi
1001de37:	ret    0x4
1001de3a:	mov    eax,0x80004001
1001de3f:	ret    0x8
1001de42:	mov    eax,DWORD PTR [esp+0x4]
1001de46:	mov    eax,DWORD PTR [eax-0x28]
1001de49:	mov    ecx,DWORD PTR [esp+0x8]
1001de4d:	mov    DWORD PTR [ecx],eax
1001de4f:	xor    eax,eax
1001de51:	ret    0x8
1001de54:	xor    eax,eax
1001de56:	ret    0x4
1001de59:	push   esi
1001de5a:	mov    esi,DWORD PTR [esp+0x8]
1001de5e:	or     DWORD PTR [esi+0x6c],0x1
1001de62:	push   0x0
1001de64:	push   0x1
1001de66:	push   DWORD PTR [esi+0x38]
1001de69:	call   DWORD PTR ds:0x10067424
1001de6f:	mov    eax,DWORD PTR [esi+0x38]
1001de72:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001de76:	mov    ecx,DWORD PTR [eax]
1001de78:	add    esi,0x48
1001de7b:	push   esi
1001de7c:	push   0x10071c28
1001de81:	push   eax
1001de82:	call   DWORD PTR [ecx]
1001de84:	xor    eax,eax
1001de86:	pop    esi
1001de87:	ret    0x4
1001de8a:	mov    eax,DWORD PTR [esp+0x4]
1001de8e:	or     DWORD PTR [eax+0x6c],0x2
1001de92:	xor    eax,eax
1001de94:	ret    0x4
1001de97:	push   ebp
1001de98:	mov    ebp,esp
1001de9a:	push   ecx
1001de9b:	push   ecx
1001de9c:	mov    edx,DWORD PTR [ebp+0xc]
1001de9f:	xor    eax,eax
1001dea1:	cmp    edx,eax
1001dea3:	je     0x1001dea7
1001dea5:	mov    DWORD PTR [edx],eax
1001dea7:	mov    ecx,DWORD PTR [ebp+0x10]
1001deaa:	cmp    ecx,eax
1001deac:	je     0x1001deb0
1001deae:	mov    DWORD PTR [ecx],eax
1001deb0:	cmp    edx,eax
1001deb2:	je     0x1001dfbd
1001deb8:	cmp    ecx,eax
1001deba:	je     0x1001dfbd
1001dec0:	cmp    DWORD PTR [ebp+0x14],eax
1001dec3:	je     0x1001dfbd
1001dec9:	cmp    DWORD PTR [ebp+0x18],eax
1001decc:	je     0x1001dfbd
1001ded2:	push   ebx
1001ded3:	push   esi
1001ded4:	mov    esi,DWORD PTR [ebp+0x8]
1001ded7:	lea    ebx,[esi+0x3c]
1001deda:	cmp    DWORD PTR [ebx],eax
1001dedc:	push   edi
1001dedd:	jne    0x1001def9
1001dedf:	lea    eax,[ebp+0x8]
1001dee2:	push   eax
1001dee3:	call   0x1002220c
1001dee8:	mov    eax,DWORD PTR [ebp+0x8]
1001deeb:	push   ebx
1001deec:	add    eax,0x24
1001deef:	mov    ecx,DWORD PTR [eax]
1001def1:	push   0x1007156c
1001def6:	push   eax
1001def7:	call   DWORD PTR [ecx]
1001def9:	lea    edi,[esi+0x40]
1001defc:	cmp    DWORD PTR [edi],0x0
1001deff:	jne    0x1001df1b
1001df01:	lea    eax,[ebp+0x8]
1001df04:	push   eax
1001df05:	call   0x1002229b
1001df0a:	mov    eax,DWORD PTR [ebp+0x8]
1001df0d:	push   edi
1001df0e:	add    eax,0x24
1001df11:	mov    ecx,DWORD PTR [eax]
1001df13:	push   0x1007155c
1001df18:	push   eax
1001df19:	call   DWORD PTR [ecx]
1001df1b:	mov    eax,DWORD PTR [ebx]
1001df1d:	mov    ecx,DWORD PTR [ebp+0xc]
1001df20:	mov    DWORD PTR [ecx],eax
1001df22:	mov    ebx,DWORD PTR [ebx]
1001df24:	test   ebx,ebx
1001df26:	je     0x1001df2e
1001df28:	mov    eax,DWORD PTR [ebx]
1001df2a:	push   ebx
1001df2b:	call   DWORD PTR [eax+0x4]
1001df2e:	mov    eax,DWORD PTR [edi]
1001df30:	mov    ecx,DWORD PTR [ebp+0x10]
1001df33:	mov    DWORD PTR [ecx],eax
1001df35:	mov    edi,DWORD PTR [edi]
1001df37:	test   edi,edi
1001df39:	je     0x1001df41
1001df3b:	mov    eax,DWORD PTR [edi]
1001df3d:	push   edi
1001df3e:	call   DWORD PTR [eax+0x4]
1001df41:	push   DWORD PTR [ebp+0x14]
1001df44:	mov    edi,DWORD PTR ds:0x100672c0
1001df4a:	push   DWORD PTR [esi-0x28]
1001df4d:	call   edi
1001df4f:	push   DWORD PTR [ebp+0x18]
1001df52:	push   DWORD PTR [esi-0x28]
1001df55:	call   edi
1001df57:	xor    ebx,ebx
1001df59:	cmp    DWORD PTR [esi+0x98],ebx
1001df5f:	jne    0x1001df7e
1001df61:	push   0x1
1001df63:	lea    eax,[ebp-0x8]
1001df66:	push   eax
1001df67:	mov    BYTE PTR [ebp-0x8],bl
1001df6a:	mov    WORD PTR [ebp-0x6],bx
1001df6e:	mov    WORD PTR [ebp-0x4],bx
1001df72:	call   DWORD PTR ds:0x10067344
1001df78:	mov    DWORD PTR [esi+0x98],eax
1001df7e:	mov    edi,DWORD PTR [ebp+0x1c]
1001df81:	mov    DWORD PTR [edi],0x14
1001df87:	mov    eax,DWORD PTR [esi+0x6c]
1001df8a:	shr    eax,0x2
1001df8d:	and    eax,0x1
1001df90:	mov    DWORD PTR [edi+0x4],eax
1001df93:	push   DWORD PTR [esi-0x28]
1001df96:	call   DWORD PTR ds:0x100672d8
1001df9c:	mov    DWORD PTR [edi+0x8],eax
1001df9f:	mov    eax,DWORD PTR [esi+0x98]
1001dfa5:	mov    DWORD PTR [edi+0xc],eax
1001dfa8:	xor    eax,eax
1001dfaa:	cmp    DWORD PTR [esi+0x98],ebx
1001dfb0:	setne  al
1001dfb3:	mov    DWORD PTR [edi+0x10],eax
1001dfb6:	pop    edi
1001dfb7:	pop    esi
1001dfb8:	xor    eax,eax
1001dfba:	pop    ebx
1001dfbb:	jmp    0x1001dfc2
1001dfbd:	mov    eax,0x80004003
1001dfc2:	leave  
1001dfc3:	ret    0x18
1001dfc6:	mov    eax,0x80004001
1001dfcb:	ret    0xc
1001dfce:	mov    eax,DWORD PTR [esp+0x4]
1001dfd2:	and    DWORD PTR [eax+0x6c],0xfffffffd
1001dfd6:	xor    eax,eax
1001dfd8:	ret    0x8
1001dfdb:	mov    eax,DWORD PTR [esp+0x4]
1001dfdf:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001dfe3:	mov    ecx,DWORD PTR [eax+0x48]
1001dfe6:	test   ecx,ecx
1001dfe8:	je     0x1001dff4
1001dfea:	and    DWORD PTR [eax+0x48],0x0
1001dfee:	mov    eax,DWORD PTR [ecx]
1001dff0:	push   ecx
1001dff1:	call   DWORD PTR [eax+0x8]
1001dff4:	xor    eax,eax
1001dff6:	ret    0x4
1001dff9:	push   ebp
1001dffa:	mov    ebp,esp
1001dffc:	sub    esp,0x10
1001dfff:	push   esi
1001e000:	mov    esi,DWORD PTR [ebp+0xc]
1001e003:	test   esi,esi
1001e005:	jne    0x1001e00e
1001e007:	mov    eax,0x80004003
1001e00c:	jmp    0x1001e080
1001e00e:	push   ebx
1001e00f:	push   edi
1001e010:	lea    edi,[ebp-0x10]
1001e013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e017:	mov    esi,DWORD PTR [ebp+0x8]
1001e01a:	mov    edi,DWORD PTR ds:0x100672bc
1001e020:	lea    eax,[ebp-0x10]
1001e023:	push   eax
1001e024:	push   DWORD PTR [esi-0x28]
1001e027:	call   edi
1001e029:	test   eax,eax
1001e02b:	je     0x1001e036
1001e02d:	lea    eax,[ebp-0x8]
1001e030:	push   eax
1001e031:	push   DWORD PTR [esi-0x28]
1001e034:	call   edi
1001e036:	push   DWORD PTR [esi-0x28]
1001e039:	call   DWORD PTR ds:0x100672d8
1001e03f:	mov    ebx,eax
1001e041:	test   ebx,ebx
1001e043:	je     0x1001e05d
1001e045:	mov    edi,DWORD PTR ds:0x100672c4
1001e04b:	lea    eax,[ebp-0x10]
1001e04e:	push   eax
1001e04f:	push   ebx
1001e050:	call   edi
1001e052:	test   eax,eax
1001e054:	je     0x1001e05d
1001e056:	lea    eax,[ebp-0x8]
1001e059:	push   eax
1001e05a:	push   ebx
1001e05b:	call   edi
1001e05d:	mov    eax,DWORD PTR [ebp-0x4]
1001e060:	sub    eax,DWORD PTR [ebp-0xc]
1001e063:	push   0x1
1001e065:	push   eax
1001e066:	mov    eax,DWORD PTR [ebp-0x8]
1001e069:	sub    eax,DWORD PTR [ebp-0x10]
1001e06c:	push   eax
1001e06d:	push   DWORD PTR [ebp-0xc]
1001e070:	push   DWORD PTR [ebp-0x10]
1001e073:	push   DWORD PTR [esi-0x28]
1001e076:	call   DWORD PTR ds:0x10067324
1001e07c:	pop    edi
1001e07d:	xor    eax,eax
1001e07f:	pop    ebx
1001e080:	pop    esi
1001e081:	leave  
1001e082:	ret    0x8
1001e085:	push   esi
1001e086:	mov    esi,DWORD PTR [esp+0x8]
1001e08a:	or     DWORD PTR [esi+0x6c],0x1
1001e08e:	push   edi
1001e08f:	push   0x0
1001e091:	push   0x1
1001e093:	push   DWORD PTR [esi+0x38]
1001e096:	call   DWORD PTR ds:0x10067424
1001e09c:	test   BYTE PTR [esp+0x14],0x1
1001e0a1:	je     0x1001e0bc
1001e0a3:	mov    eax,DWORD PTR [esi+0x38]
1001e0a6:	or     DWORD PTR [esi+0x6c],0x8
1001e0aa:	mov    ecx,DWORD PTR [eax]
1001e0ac:	lea    edi,[esi+0x48]
1001e0af:	push   edi
1001e0b0:	push   0x10071c38
1001e0b5:	push   eax
1001e0b6:	call   DWORD PTR [ecx]
1001e0b8:	test   eax,eax
1001e0ba:	jge    0x1001e0d1
1001e0bc:	mov    eax,DWORD PTR [esi+0x38]
1001e0bf:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001e0c3:	mov    ecx,DWORD PTR [eax]
1001e0c5:	lea    edi,[esi+0x48]
1001e0c8:	push   edi
1001e0c9:	push   0x10071c28
1001e0ce:	push   eax
1001e0cf:	call   DWORD PTR [ecx]
1001e0d1:	mov    edi,DWORD PTR [edi]
1001e0d3:	test   edi,edi
1001e0d5:	je     0x1001e0e5
1001e0d7:	mov    ecx,DWORD PTR [edi]
1001e0d9:	lea    eax,[esi+0x88]
1001e0df:	push   eax
1001e0e0:	push   eax
1001e0e1:	push   edi
1001e0e2:	call   DWORD PTR [ecx+0x1c]
1001e0e5:	pop    edi
1001e0e6:	xor    eax,eax
1001e0e8:	pop    esi
1001e0e9:	ret    0xc
1001e0ec:	mov    eax,DWORD PTR [esp+0x4]
1001e0f0:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001e0f4:	mov    ecx,DWORD PTR [eax+0x48]
1001e0f7:	test   ecx,ecx
1001e0f9:	je     0x1001e105
1001e0fb:	and    DWORD PTR [eax+0x48],0x0
1001e0ff:	mov    eax,DWORD PTR [ecx]
1001e101:	push   ecx
1001e102:	call   DWORD PTR [eax+0x8]
1001e105:	xor    eax,eax
1001e107:	ret    0x8
1001e10a:	mov    eax,DWORD PTR [esp+0x4]
1001e10e:	mov    eax,DWORD PTR [eax+0x9c]
1001e114:	not    eax
1001e116:	and    eax,0x1
1001e119:	ret    0x4
1001e11c:	mov    eax,DWORD PTR [esp+0x4]
1001e120:	mov    eax,DWORD PTR [eax+0x6c]
1001e123:	shr    eax,0x4
1001e126:	not    eax
1001e128:	and    eax,0x1
1001e12b:	ret    0x4
1001e12e:	cmp    DWORD PTR [esp+0x8],0x0
1001e133:	je     0x1001e14a
1001e135:	push   esi
1001e136:	mov    esi,DWORD PTR [esp+0x8]
1001e13a:	push   DWORD PTR [esi-0x28]
1001e13d:	call   DWORD PTR ds:0x100672e4
1001e143:	or     DWORD PTR [esi+0x6c],0x10
1001e147:	pop    esi
1001e148:	jmp    0x1001e158
1001e14a:	call   DWORD PTR ds:0x100672e0
1001e150:	mov    eax,DWORD PTR [esp+0x4]
1001e154:	and    DWORD PTR [eax+0x6c],0xffffffef
1001e158:	xor    eax,eax
1001e15a:	ret    0x8
1001e15d:	mov    eax,DWORD PTR [esp+0x4]
1001e161:	mov    eax,DWORD PTR [eax+0x6c]
1001e164:	shr    eax,0x5
1001e167:	not    eax
1001e169:	and    eax,0x1
1001e16c:	ret    0x4
1001e16f:	mov    eax,DWORD PTR [esp+0x4]
1001e173:	mov    ecx,DWORD PTR [esp+0x8]
1001e177:	shl    ecx,0x5
1001e17a:	xor    ecx,DWORD PTR [eax+0x6c]
1001e17d:	and    ecx,0x20
1001e180:	xor    DWORD PTR [eax+0x6c],ecx
1001e183:	xor    eax,eax
1001e185:	ret    0x8
1001e188:	push   ebp
1001e189:	mov    ebp,esp
1001e18b:	sub    esp,0x10
1001e18e:	push   esi
1001e18f:	mov    esi,DWORD PTR [ebp+0x14]
1001e192:	test   esi,esi
1001e194:	jne    0x1001e1a0
1001e196:	mov    eax,0x80004003
1001e19b:	jmp    0x1001e254
1001e1a0:	push   edi
1001e1a1:	mov    edi,DWORD PTR [ebp+0x8]
1001e1a4:	cmp    BYTE PTR [edi+0x30],0x0
1001e1a8:	je     0x1001e1b9
1001e1aa:	push   DWORD PTR [edi-0x28]
1001e1ad:	call   DWORD PTR ds:0x10067330
1001e1b3:	test   eax,eax
1001e1b5:	mov    DWORD PTR [esi],eax
1001e1b7:	jne    0x1001e1c3
1001e1b9:	mov    eax,0x80004005
1001e1be:	jmp    0x1001e253
1001e1c3:	test   BYTE PTR [ebp+0x10],0x1
1001e1c7:	mov    BYTE PTR [edi+0x30],0x0
1001e1cb:	jne    0x1001e251
1001e1d1:	lea    eax,[ebp-0x10]
1001e1d4:	push   eax
1001e1d5:	push   DWORD PTR [edi-0x28]
1001e1d8:	call   DWORD PTR ds:0x100672c0
1001e1de:	test   BYTE PTR [ebp+0x10],0x4
1001e1e2:	je     0x1001e23d
1001e1e4:	push   ebx
1001e1e5:	push   DWORD PTR [esi]
1001e1e7:	call   DWORD PTR ds:0x1006704c
1001e1ed:	mov    ebx,eax
1001e1ef:	test   ebx,ebx
1001e1f1:	je     0x1001e23c
1001e1f3:	mov    eax,DWORD PTR [ebp-0x4]
1001e1f6:	sub    eax,DWORD PTR [ebp-0xc]
1001e1f9:	push   eax
1001e1fa:	mov    eax,DWORD PTR [ebp-0x8]
1001e1fd:	sub    eax,DWORD PTR [ebp-0x10]
1001e200:	push   eax
1001e201:	push   DWORD PTR [esi]
1001e203:	call   DWORD PTR ds:0x10067040
1001e209:	test   eax,eax
1001e20b:	mov    DWORD PTR [ebp+0x14],eax
1001e20e:	je     0x1001e225
1001e210:	push   eax
1001e211:	push   ebx
1001e212:	call   DWORD PTR ds:0x10067048
1001e218:	test   eax,eax
1001e21a:	jne    0x1001e22e
1001e21c:	push   DWORD PTR [ebp+0x14]
1001e21f:	call   DWORD PTR ds:0x10067044
1001e225:	push   ebx
1001e226:	call   DWORD PTR ds:0x10067030
1001e22c:	jmp    0x1001e23c
1001e22e:	push   eax
1001e22f:	call   DWORD PTR ds:0x10067044
1001e235:	mov    eax,DWORD PTR [esi]
1001e237:	mov    DWORD PTR [edi+0x2c],eax
1001e23a:	mov    DWORD PTR [esi],ebx
1001e23c:	pop    ebx
1001e23d:	test   BYTE PTR [ebp+0x10],0x2
1001e241:	je     0x1001e251
1001e243:	push   0x6
1001e245:	lea    eax,[ebp-0x10]
1001e248:	push   eax
1001e249:	push   DWORD PTR [esi]
1001e24b:	call   DWORD PTR ds:0x1006734c
1001e251:	xor    eax,eax
1001e253:	pop    edi
1001e254:	pop    esi
1001e255:	leave  
1001e256:	ret    0x10
1001e259:	push   ebp
1001e25a:	mov    ebp,esp
1001e25c:	sub    esp,0x10
1001e25f:	push   esi
1001e260:	mov    esi,DWORD PTR [ebp+0x8]
1001e263:	cmp    DWORD PTR [esi+0x2c],0x0
1001e267:	mov    BYTE PTR [esi+0x30],0x1
1001e26b:	je     0x1001e2b1
1001e26d:	lea    eax,[ebp-0x10]
1001e270:	push   eax
1001e271:	push   DWORD PTR [esi-0x28]
1001e274:	call   DWORD PTR ds:0x100672c0
1001e27a:	mov    eax,DWORD PTR [ebp-0x4]
1001e27d:	sub    eax,DWORD PTR [ebp-0xc]
1001e280:	push   0xcc0020
1001e285:	push   0x0
1001e287:	push   0x0
1001e289:	push   DWORD PTR [ebp+0xc]
1001e28c:	push   eax
1001e28d:	mov    eax,DWORD PTR [ebp-0x8]
1001e290:	sub    eax,DWORD PTR [ebp-0x10]
1001e293:	push   eax
1001e294:	push   DWORD PTR [ebp-0xc]
1001e297:	push   DWORD PTR [ebp-0x10]
1001e29a:	push   DWORD PTR [esi+0x2c]
1001e29d:	call   DWORD PTR ds:0x1006702c
1001e2a3:	push   DWORD PTR [ebp+0xc]
1001e2a6:	call   DWORD PTR ds:0x10067030
1001e2ac:	mov    eax,DWORD PTR [esi+0x2c]
1001e2af:	jmp    0x1001e2b4
1001e2b1:	mov    eax,DWORD PTR [ebp+0xc]
1001e2b4:	push   eax
1001e2b5:	push   DWORD PTR [esi-0x28]
1001e2b8:	call   DWORD PTR ds:0x10067300
1001e2be:	xor    eax,eax
1001e2c0:	pop    esi
1001e2c1:	leave  
1001e2c2:	ret    0x8
1001e2c5:	push   DWORD PTR [esp+0xc]
1001e2c9:	mov    eax,DWORD PTR [esp+0x8]
1001e2cd:	push   DWORD PTR [esp+0xc]
1001e2d1:	push   DWORD PTR [eax-0x28]
1001e2d4:	call   DWORD PTR ds:0x10067354
1001e2da:	xor    eax,eax
1001e2dc:	ret    0xc
1001e2df:	push   DWORD PTR [esp+0xc]
1001e2e3:	mov    eax,DWORD PTR [esp+0x8]
1001e2e7:	push   DWORD PTR [esp+0xc]
1001e2eb:	push   DWORD PTR [eax-0x28]
1001e2ee:	call   DWORD PTR ds:0x100672fc
1001e2f4:	xor    eax,eax
1001e2f6:	ret    0xc
1001e2f9:	xor    eax,eax
1001e2fb:	ret    0x14
1001e2fe:	push   ebp
1001e2ff:	mov    ebp,esp
1001e301:	push   DWORD PTR [ebp+0x14]
1001e304:	mov    eax,DWORD PTR [ebp+0x8]
1001e307:	push   DWORD PTR [ebp+0x10]
1001e30a:	push   DWORD PTR [ebp+0xc]
1001e30d:	push   DWORD PTR [eax-0x28]
1001e310:	push   DWORD PTR [eax-0xc]
1001e313:	call   DWORD PTR ds:0x10067320
1001e319:	mov    ecx,DWORD PTR [ebp+0x18]
1001e31c:	mov    DWORD PTR [ecx],eax
1001e31e:	xor    eax,eax
1001e320:	pop    ebp
1001e321:	ret    0x14
1001e324:	cmp    DWORD PTR [esp+0x8],0x0
1001e329:	jne    0x1001e332
1001e32b:	mov    eax,0x80004003
1001e330:	jmp    0x1001e347
1001e332:	push   DWORD PTR [esp+0x8]
1001e336:	mov    eax,DWORD PTR [esp+0x8]
1001e33a:	mov    eax,DWORD PTR [eax+0x34]
1001e33d:	mov    ecx,DWORD PTR [eax]
1001e33f:	push   0x1006ee54
1001e344:	push   eax
1001e345:	call   DWORD PTR [ecx]
1001e347:	ret    0x8
1001e34a:	mov    eax,0x80004001
1001e34f:	ret    0x10
1001e352:	xor    eax,eax
1001e354:	inc    eax
1001e355:	ret    0xc
1001e358:	mov    eax,DWORD PTR [esp+0x4]
1001e35c:	mov    ecx,DWORD PTR [esp+0x8]
1001e360:	shl    ecx,0x5
1001e363:	xor    ecx,DWORD PTR [eax+0x68]
1001e366:	and    ecx,0x20
1001e369:	xor    DWORD PTR [eax+0x68],ecx
1001e36c:	xor    eax,eax
1001e36e:	ret    0x8
1001e371:	mov    eax,0x80004001
1001e376:	ret    0x4
1001e379:	ret    0xc
1001e37c:	ret    0x8
1001e37f:	ret    0x4
1001e382:	mov    eax,0x80004001
1001e387:	ret    0x14
1001e38a:	push   0xc
1001e38c:	mov    eax,0x1005fcf7
1001e391:	call   0x10059e28
1001e396:	mov    eax,DWORD PTR [ebp+0x10]
1001e399:	xor    esi,esi
1001e39b:	cmp    eax,esi
1001e39d:	jne    0x1001e3a9
1001e39f:	mov    eax,0x80004003
1001e3a4:	jmp    0x1001e42a
1001e3a9:	push   0x1c
1001e3ab:	mov    DWORD PTR [eax],esi
1001e3ad:	mov    DWORD PTR [ebp-0x18],esi
1001e3b0:	mov    DWORD PTR [ebp-0x4],esi
1001e3b3:	call   0x10043196
1001e3b8:	cmp    eax,esi
1001e3ba:	pop    ecx
1001e3bb:	je     0x1001e3c6
1001e3bd:	mov    esi,eax
1001e3bf:	call   0x10020504
1001e3c4:	mov    esi,eax
1001e3c6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e3ca:	jmp    0x1001e3d9
1001e3cc:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e3d0:	mov    eax,0x1001e3d6
1001e3d5:	ret    
1001e3d6:	mov    esi,DWORD PTR [ebp-0x18]
1001e3d9:	test   esi,esi
1001e3db:	jne    0x1001e3e4
1001e3dd:	mov    eax,0x8007000e
1001e3e2:	jmp    0x1001e42a
1001e3e4:	mov    eax,DWORD PTR [ebp+0x8]
1001e3e7:	mov    ecx,DWORD PTR [eax+0x2c]
1001e3ea:	mov    DWORD PTR [ebp-0x14],ecx
1001e3ed:	lea    ecx,[eax-0x34]
1001e3f0:	mov    eax,DWORD PTR [ecx]
1001e3f2:	push   0x3
1001e3f4:	call   DWORD PTR [eax+0x10]
1001e3f7:	push   eax
1001e3f8:	lea    eax,[ebp-0x10]
1001e3fb:	push   eax
1001e3fc:	lea    eax,[ebp-0x14]
1001e3ff:	push   eax
1001e400:	push   esi
1001e401:	call   0x10022541
1001e406:	mov    edi,eax
1001e408:	test   edi,edi
1001e40a:	jl     0x1001e41f
1001e40c:	push   DWORD PTR [ebp+0x10]
1001e40f:	mov    eax,DWORD PTR [esi]
1001e411:	push   0x1007140c
1001e416:	push   esi
1001e417:	call   DWORD PTR [eax]
1001e419:	mov    edi,eax
1001e41b:	test   edi,edi
1001e41d:	jge    0x1001e428
1001e41f:	mov    eax,DWORD PTR [esi]
1001e421:	push   0x1
1001e423:	mov    ecx,esi
1001e425:	call   DWORD PTR [eax+0x1c]
1001e428:	mov    eax,edi
1001e42a:	call   0x10059ecd
1001e42f:	ret    0xc
1001e432:	mov    eax,DWORD PTR [esp+0x4]
1001e436:	mov    ecx,DWORD PTR [esp+0x8]
1001e43a:	shl    ecx,0x7
1001e43d:	xor    ecx,DWORD PTR [eax+0x64]
1001e440:	and    ecx,0x80
1001e446:	xor    DWORD PTR [eax+0x64],ecx
1001e449:	xor    eax,eax
1001e44b:	ret    0x8
1001e44e:	push   0x18
1001e450:	mov    eax,0x1005ffda
1001e455:	call   0x10059df5
1001e45a:	mov    ebx,ecx
1001e45c:	mov    esi,DWORD PTR [ebp+0x8]
1001e45f:	test   esi,esi
1001e461:	jne    0x1001e46a
1001e463:	xor    eax,eax
1001e465:	jmp    0x1001e839
1001e46a:	lea    eax,[ebx+0x60]
1001e46d:	cmp    DWORD PTR [eax],esi
1001e46f:	mov    DWORD PTR [ebp-0x24],eax
1001e472:	je     0x1001e47f
1001e474:	mov    edi,esi
1001e476:	mov    esi,eax
1001e478:	call   0x10007961
1001e47d:	mov    esi,edi
1001e47f:	mov    eax,DWORD PTR [esi]
1001e481:	and    DWORD PTR [ebp-0x10],0x0
1001e485:	lea    edi,[ebx+0x64]
1001e488:	push   edi
1001e489:	push   0x10071c48
1001e48e:	push   esi
1001e48f:	call   DWORD PTR [eax]
1001e491:	mov    eax,DWORD PTR [edi]
1001e493:	test   eax,eax
1001e495:	je     0x1001e7f3
1001e49b:	mov    ecx,DWORD PTR [eax]
1001e49d:	lea    esi,[ebx+0xa0]
1001e4a3:	push   esi
1001e4a4:	push   0x1
1001e4a6:	push   eax
1001e4a7:	mov    DWORD PTR [ebp-0x20],esi
1001e4aa:	call   DWORD PTR [ecx+0x58]
1001e4ad:	test   DWORD PTR [esi],0x20000
1001e4b3:	je     0x1001e4f4
1001e4b5:	mov    eax,DWORD PTR [ebx]
1001e4b7:	mov    ecx,ebx
1001e4b9:	call   DWORD PTR [eax+0x10]
1001e4bc:	xor    esi,esi
1001e4be:	cmp    eax,esi
1001e4c0:	mov    DWORD PTR [ebp-0x18],esi
1001e4c3:	je     0x1001e4d3
1001e4c5:	mov    ecx,DWORD PTR [eax]
1001e4c7:	lea    edx,[ebp-0x18]
1001e4ca:	push   edx
1001e4cb:	push   0x1007151c
1001e4d0:	push   eax
1001e4d1:	call   DWORD PTR [ecx]
1001e4d3:	mov    DWORD PTR [ebp-0x4],esi
1001e4d6:	mov    eax,DWORD PTR [edi]
1001e4d8:	push   DWORD PTR [ebp-0x18]
1001e4db:	mov    ecx,DWORD PTR [eax]
1001e4dd:	push   eax
1001e4de:	call   DWORD PTR [ecx+0xc]
1001e4e1:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e4e5:	mov    eax,DWORD PTR [ebp-0x18]
1001e4e8:	cmp    eax,esi
1001e4ea:	je     0x1001e4f6
1001e4ec:	mov    ecx,DWORD PTR [eax]
1001e4ee:	push   eax
1001e4ef:	call   DWORD PTR [ecx+0x8]
1001e4f2:	jmp    0x1001e4f6
1001e4f4:	xor    esi,esi
1001e4f6:	cmp    BYTE PTR [ebp+0xc],0x0
1001e4fa:	jne    0x1001e5e1
1001e500:	mov    eax,DWORD PTR [edi]
1001e502:	cmp    eax,esi
1001e504:	mov    DWORD PTR [ebp+0xc],esi
1001e507:	je     0x1001e517
1001e509:	mov    ecx,DWORD PTR [eax]
1001e50b:	lea    edx,[ebp+0xc]
1001e50e:	push   edx
1001e50f:	push   0x10071b88
1001e514:	push   eax
1001e515:	call   DWORD PTR [ecx]
1001e517:	mov    DWORD PTR [ebp-0x4],0x1
1001e51e:	mov    eax,DWORD PTR [ebp+0xc]
1001e521:	cmp    eax,esi
1001e523:	je     0x1001e53e
1001e525:	cmp    DWORD PTR [ebp+0x10],esi
1001e528:	mov    ecx,DWORD PTR [eax]
1001e52a:	je     0x1001e535
1001e52c:	push   DWORD PTR [ebp+0x10]
1001e52f:	push   eax
1001e530:	call   DWORD PTR [ecx+0x14]
1001e533:	jmp    0x1001e539
1001e535:	push   eax
1001e536:	call   DWORD PTR [ecx+0x20]
1001e539:	mov    DWORD PTR [ebp-0x10],eax
1001e53c:	jmp    0x1001e588
1001e53e:	cmp    DWORD PTR [ebp+0x10],esi
1001e541:	je     0x1001e5d3
1001e547:	mov    ecx,DWORD PTR [edi]
1001e549:	xor    eax,eax
1001e54b:	cmp    ecx,esi
1001e54d:	mov    DWORD PTR [ebp-0x18],eax
1001e550:	je     0x1001e563
1001e552:	mov    eax,DWORD PTR [ecx]
1001e554:	lea    edx,[ebp-0x18]
1001e557:	push   edx
1001e558:	push   0x10071b78
1001e55d:	push   ecx
1001e55e:	call   DWORD PTR [eax]
1001e560:	mov    eax,DWORD PTR [ebp-0x18]
1001e563:	cmp    eax,esi
1001e565:	mov    BYTE PTR [ebp-0x4],0x2
1001e569:	je     0x1001e57a
1001e56b:	push   DWORD PTR [ebp+0x10]
1001e56e:	mov    ecx,DWORD PTR [eax]
1001e570:	push   eax
1001e571:	call   DWORD PTR [ecx+0x14]
1001e574:	mov    DWORD PTR [ebp-0x10],eax
1001e577:	mov    eax,DWORD PTR [ebp-0x18]
1001e57a:	cmp    eax,esi
1001e57c:	mov    BYTE PTR [ebp-0x4],0x1
1001e580:	je     0x1001e588
1001e582:	mov    ecx,DWORD PTR [eax]
1001e584:	push   eax
1001e585:	call   DWORD PTR [ecx+0x8]
1001e588:	cmp    DWORD PTR [ebp-0x10],esi
1001e58b:	jge    0x1001e5d0
1001e58d:	mov    ebx,DWORD PTR [ebp-0x20]
1001e590:	test   DWORD PTR [ebx],0x20000
1001e596:	je     0x1001e5a1
1001e598:	mov    eax,DWORD PTR [edi]
1001e59a:	mov    ecx,DWORD PTR [eax]
1001e59c:	push   esi
1001e59d:	push   eax
1001e59e:	call   DWORD PTR [ecx+0xc]
1001e5a1:	mov    DWORD PTR [ebx],esi
1001e5a3:	mov    eax,DWORD PTR [edi]
1001e5a5:	cmp    eax,esi
1001e5a7:	je     0x1001e5b1
1001e5a9:	mov    DWORD PTR [edi],esi
1001e5ab:	mov    ecx,DWORD PTR [eax]
1001e5ad:	push   eax
1001e5ae:	call   DWORD PTR [ecx+0x8]
1001e5b1:	mov    ecx,DWORD PTR [ebp-0x24]
1001e5b4:	mov    eax,DWORD PTR [ecx]
1001e5b6:	cmp    eax,esi
1001e5b8:	je     0x1001e5c2
1001e5ba:	mov    DWORD PTR [ecx],esi
1001e5bc:	mov    ecx,DWORD PTR [eax]
1001e5be:	push   eax
1001e5bf:	call   DWORD PTR [ecx+0x8]
1001e5c2:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e5c6:	mov    eax,DWORD PTR [ebp+0xc]
1001e5c9:	cmp    eax,esi
1001e5cb:	jmp    0x1001e82e
1001e5d0:	mov    eax,DWORD PTR [ebp+0xc]
1001e5d3:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e5d7:	cmp    eax,esi
1001e5d9:	je     0x1001e5e1
1001e5db:	mov    ecx,DWORD PTR [eax]
1001e5dd:	push   eax
1001e5de:	call   DWORD PTR [ecx+0x8]
1001e5e1:	mov    eax,DWORD PTR [ebp-0x20]
1001e5e4:	test   DWORD PTR [eax],0x20000
1001e5ea:	jne    0x1001e62b
1001e5ec:	mov    eax,DWORD PTR [ebx]
1001e5ee:	mov    ecx,ebx
1001e5f0:	call   DWORD PTR [eax+0x10]
1001e5f3:	cmp    eax,esi
1001e5f5:	mov    DWORD PTR [ebp+0xc],esi
1001e5f8:	je     0x1001e608
1001e5fa:	mov    ecx,DWORD PTR [eax]
1001e5fc:	lea    edx,[ebp+0xc]
1001e5ff:	push   edx
1001e600:	push   0x1007151c
1001e605:	push   eax
1001e606:	call   DWORD PTR [ecx]
1001e608:	mov    DWORD PTR [ebp-0x4],0x3
1001e60f:	mov    eax,DWORD PTR [edi]
1001e611:	push   DWORD PTR [ebp+0xc]
1001e614:	mov    ecx,DWORD PTR [eax]
1001e616:	push   eax
1001e617:	call   DWORD PTR [ecx+0xc]
1001e61a:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e61e:	mov    eax,DWORD PTR [ebp+0xc]
1001e621:	cmp    eax,esi
1001e623:	je     0x1001e62b
1001e625:	mov    ecx,DWORD PTR [eax]
1001e627:	push   eax
1001e628:	call   DWORD PTR [ecx+0x8]
1001e62b:	mov    eax,DWORD PTR [edi]
1001e62d:	mov    DWORD PTR [ebx+0x90],esi
1001e633:	mov    ecx,DWORD PTR [eax]
1001e635:	lea    esi,[ebx+0x70]
1001e638:	push   esi
1001e639:	push   0x10071c58
1001e63e:	push   eax
1001e63f:	call   DWORD PTR [ecx]
1001e641:	test   eax,eax
1001e643:	mov    DWORD PTR [ebp-0x10],eax
1001e646:	jge    0x1001e668
1001e648:	mov    eax,DWORD PTR [edi]
1001e64a:	mov    ecx,DWORD PTR [eax]
1001e64c:	push   esi
1001e64d:	push   0x10071c68
1001e652:	push   eax
1001e653:	call   DWORD PTR [ecx]
1001e655:	test   eax,eax
1001e657:	mov    DWORD PTR [ebp-0x10],eax
1001e65a:	jl     0x1001e674
1001e65c:	mov    DWORD PTR [ebx+0x90],0x3
1001e666:	jmp    0x1001e692
1001e668:	mov    DWORD PTR [ebx+0x90],0x7
1001e672:	jmp    0x1001e692
1001e674:	mov    eax,DWORD PTR [edi]
1001e676:	mov    ecx,DWORD PTR [eax]
1001e678:	push   esi
1001e679:	push   0x10071c78
1001e67e:	push   eax
1001e67f:	call   DWORD PTR [ecx]
1001e681:	test   eax,eax
1001e683:	mov    DWORD PTR [ebp-0x10],eax
1001e686:	jl     0x1001e692
1001e688:	mov    DWORD PTR [ebx+0x90],0x1
1001e692:	mov    eax,DWORD PTR [ebx]
1001e694:	mov    ecx,ebx
1001e696:	call   DWORD PTR [eax+0x10]
1001e699:	and    DWORD PTR [ebp-0x14],0x0
1001e69d:	test   eax,eax
1001e69f:	je     0x1001e6af
1001e6a1:	mov    ecx,DWORD PTR [eax]
1001e6a3:	lea    edx,[ebp-0x14]
1001e6a6:	push   edx
1001e6a7:	push   0x1007146c
1001e6ac:	push   eax
1001e6ad:	call   DWORD PTR [ecx]
1001e6af:	lea    edx,[ebx+0x9c]
1001e6b5:	mov    DWORD PTR [ebp-0x4],0x4
1001e6bc:	mov    eax,DWORD PTR [edi]
1001e6be:	mov    ecx,DWORD PTR [eax]
1001e6c0:	push   edx
1001e6c1:	push   DWORD PTR [ebp-0x14]
1001e6c4:	push   eax
1001e6c5:	call   DWORD PTR [ecx+0x4c]
1001e6c8:	mov    esi,DWORD PTR [esi]
1001e6ca:	test   esi,esi
1001e6cc:	je     0x1001e6db
1001e6ce:	push   DWORD PTR [ebp-0x14]
1001e6d1:	mov    eax,DWORD PTR [esi]
1001e6d3:	push   0x0
1001e6d5:	push   0x1
1001e6d7:	push   esi
1001e6d8:	call   DWORD PTR [eax+0x1c]
1001e6db:	mov    edi,DWORD PTR [edi]
1001e6dd:	mov    eax,DWORD PTR [edi]
1001e6df:	push   0x0
1001e6e1:	push   0x10071724
1001e6e6:	push   edi
1001e6e7:	call   DWORD PTR [eax+0x14]
1001e6ea:	test   WORD PTR [ebx+0xa0],0x400
1001e6f3:	jne    0x1001e7df
1001e6f9:	lea    esi,[ebx+0xb4]
1001e6ff:	push   esi
1001e700:	push   DWORD PTR [ebx+0x4]
1001e703:	call   DWORD PTR ds:0x100672c0
1001e709:	mov    eax,DWORD PTR [ebx+0xbc]
1001e70f:	sub    eax,DWORD PTR [esi]
1001e711:	lea    edi,[ebx+0xac]
1001e717:	mov    DWORD PTR [edi],eax
1001e719:	mov    eax,DWORD PTR [ebx+0xc0]
1001e71f:	sub    eax,DWORD PTR [ebx+0xb8]
1001e725:	lea    esi,[ebx+0xa4]
1001e72b:	mov    DWORD PTR [ebx+0xb0],eax
1001e731:	call   0x1001bf13
1001e736:	mov    eax,DWORD PTR [ebx+0x64]
1001e739:	mov    ecx,DWORD PTR [eax]
1001e73b:	lea    edi,[ebx+0xa4]
1001e741:	push   edi
1001e742:	push   0x1
1001e744:	push   eax
1001e745:	call   DWORD PTR [ecx+0x44]
1001e748:	mov    eax,DWORD PTR [ebx+0x64]
1001e74b:	mov    ecx,DWORD PTR [eax]
1001e74d:	push   edi
1001e74e:	push   0x1
1001e750:	push   eax
1001e751:	call   DWORD PTR [ecx+0x48]
1001e754:	lea    esi,[ebx+0xac]
1001e75a:	call   0x1001beaa
1001e75f:	mov    eax,DWORD PTR [ebx+0xac]
1001e765:	lea    esi,[ebx+0xb4]
1001e76b:	add    eax,DWORD PTR [esi]
1001e76d:	mov    ecx,ebx
1001e76f:	mov    DWORD PTR [ebx+0xbc],eax
1001e775:	mov    eax,DWORD PTR [ebx+0xb0]
1001e77b:	add    eax,DWORD PTR [ebx+0xb8]
1001e781:	mov    DWORD PTR [ebx+0xc0],eax
1001e787:	mov    eax,DWORD PTR [ebx]
1001e789:	call   DWORD PTR [eax+0x10]
1001e78c:	xor    edi,edi
1001e78e:	cmp    eax,edi
1001e790:	mov    DWORD PTR [ebp+0x10],edi
1001e793:	je     0x1001e7a3
1001e795:	mov    ecx,DWORD PTR [eax]
1001e797:	lea    edx,[ebp+0x10]
1001e79a:	push   edx
1001e79b:	push   0x1007151c
1001e7a0:	push   eax
1001e7a1:	call   DWORD PTR [ecx]
1001e7a3:	push   esi
1001e7a4:	mov    BYTE PTR [ebp-0x4],0x5
1001e7a8:	push   DWORD PTR [ebx+0x4]
1001e7ab:	mov    eax,DWORD PTR [ebx+0x64]
1001e7ae:	mov    ecx,DWORD PTR [eax]
1001e7b0:	push   edi
1001e7b1:	push   DWORD PTR [ebp+0x10]
1001e7b4:	push   edi
1001e7b5:	push   0xfffffffb
1001e7b7:	push   eax
1001e7b8:	call   DWORD PTR [ecx+0x2c]
1001e7bb:	push   0x507
1001e7c0:	push   edi
1001e7c1:	push   edi
1001e7c2:	push   DWORD PTR [ebx+0x4]
1001e7c5:	mov    DWORD PTR [ebp-0x10],eax
1001e7c8:	call   DWORD PTR ds:0x100672d0
1001e7ce:	mov    BYTE PTR [ebp-0x4],0x4
1001e7d2:	mov    eax,DWORD PTR [ebp+0x10]
1001e7d5:	cmp    eax,edi
1001e7d7:	je     0x1001e7df
1001e7d9:	mov    ecx,DWORD PTR [eax]
1001e7db:	push   eax
1001e7dc:	call   DWORD PTR [ecx+0x8]
1001e7df:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e7e3:	mov    eax,DWORD PTR [ebp-0x14]
1001e7e6:	test   eax,eax
1001e7e8:	je     0x1001e7f0
1001e7ea:	mov    ecx,DWORD PTR [eax]
1001e7ec:	push   eax
1001e7ed:	call   DWORD PTR [ecx+0x8]
1001e7f0:	mov    esi,DWORD PTR [ebp+0x8]
1001e7f3:	and    DWORD PTR [ebp-0x1c],0x0
1001e7f7:	lea    ecx,[ebp-0x1c]
1001e7fa:	push   ecx
1001e7fb:	push   0x100714bc
1001e800:	mov    DWORD PTR [ebp-0x4],0x6
1001e807:	mov    eax,DWORD PTR [esi]
1001e809:	push   esi
1001e80a:	call   DWORD PTR [eax]
1001e80c:	mov    eax,DWORD PTR [ebp-0x1c]
1001e80f:	test   eax,eax
1001e811:	je     0x1001e828
1001e813:	mov    edi,DWORD PTR [eax]
1001e815:	mov    esi,eax
1001e817:	mov    eax,DWORD PTR [ebx]
1001e819:	mov    ecx,ebx
1001e81b:	add    edi,0xc
1001e81e:	call   DWORD PTR [eax+0x10]
1001e821:	push   eax
1001e822:	push   esi
1001e823:	call   DWORD PTR [edi]
1001e825:	mov    eax,DWORD PTR [ebp-0x1c]
1001e828:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e82c:	test   eax,eax
1001e82e:	je     0x1001e836
1001e830:	mov    ecx,DWORD PTR [eax]
1001e832:	push   eax
1001e833:	call   DWORD PTR [ecx+0x8]
1001e836:	mov    eax,DWORD PTR [ebp-0x10]
1001e839:	call   0x10059ecd
1001e83e:	ret    0xc
1001e841:	mov    eax,DWORD PTR [esi]
1001e843:	push   edi
1001e844:	push   esi
1001e845:	mov    ecx,esi
1001e847:	call   DWORD PTR [eax+0x8]
1001e84a:	lea    edi,[esi+0x8]
1001e84d:	call   0x1001be62
1001e852:	test   eax,eax
1001e854:	pop    edi
1001e855:	jne    0x1001e85b
1001e857:	xor    eax,eax
1001e859:	jmp    0x1001e874
1001e85b:	push   DWORD PTR [esi+0x14]
1001e85e:	push   0xfffffffc
1001e860:	push   ebx
1001e861:	call   DWORD PTR ds:0x100672f4
1001e867:	test   eax,eax
1001e869:	je     0x1001e857
1001e86b:	mov    DWORD PTR [esi+0x20],eax
1001e86e:	xor    eax,eax
1001e870:	mov    DWORD PTR [esi+0x4],ebx
1001e873:	inc    eax
1001e874:	lea    ecx,[esi+0xc8]
1001e87a:	shl    eax,0x4
1001e87d:	xor    eax,DWORD PTR [ecx]
1001e87f:	and    eax,0x10
1001e882:	xor    DWORD PTR [ecx],eax
1001e884:	ret    
1001e885:	test   BYTE PTR [esi+0xc8],0x10
1001e88c:	je     0x1001e8c8
1001e88e:	push   0xfffffffc
1001e890:	push   DWORD PTR [esi+0x4]
1001e893:	call   DWORD PTR ds:0x100672f0
1001e899:	mov    eax,DWORD PTR [esi+0x20]
1001e89c:	mov    ecx,DWORD PTR [esi+0x4]
1001e89f:	push   eax
1001e8a0:	push   0xfffffffc
1001e8a2:	push   ecx
1001e8a3:	call   DWORD PTR ds:0x100672f4
1001e8a9:	test   eax,eax
1001e8ab:	je     0x1001e8d1
1001e8ad:	mov    eax,ds:0x10067334
1001e8b2:	mov    DWORD PTR [esi+0x20],eax
1001e8b5:	mov    eax,DWORD PTR [esi+0x4]
1001e8b8:	and    DWORD PTR [esi+0x4],0x0
1001e8bc:	test   eax,eax
1001e8be:	je     0x1001e8d1
1001e8c0:	and    DWORD PTR [esi+0xc8],0xffffffef
1001e8c7:	ret    
1001e8c8:	push   DWORD PTR [esi+0x4]
1001e8cb:	call   DWORD PTR ds:0x10067318
1001e8d1:	ret    
1001e8d2:	push   ebp
1001e8d3:	mov    ebp,esp
1001e8d5:	push   ebx
1001e8d6:	mov    ebx,eax
1001e8d8:	cmp    ebx,0x4e
1001e8db:	ja     0x1001e93f
1001e8dd:	je     0x1001e93b
1001e8df:	cmp    ebx,0x2b
1001e8e2:	je     0x1001e924
1001e8e4:	cmp    ebx,0x2c
1001e8e7:	je     0x1001e916
1001e8e9:	cmp    ebx,0x2d
1001e8ec:	je     0x1001e90e
1001e8ee:	jbe    0x1001e9b1
1001e8f4:	cmp    ebx,0x2f
1001e8f7:	jbe    0x1001e9ab
1001e8fd:	cmp    ebx,0x39
1001e900:	jne    0x1001e9b1
1001e906:	mov    eax,DWORD PTR [esi+0x8]
1001e909:	jmp    0x1001e9ad
1001e90e:	mov    eax,DWORD PTR [esi+0xc]
1001e911:	jmp    0x1001e9ad
1001e916:	cmp    DWORD PTR [esi],0x1
1001e919:	je     0x1001e9b1
1001e91f:	push   DWORD PTR [esi+0x4]
1001e922:	jmp    0x1001e99c
1001e924:	cmp    DWORD PTR [esi],0x1
1001e927:	jne    0x1001e936
1001e929:	push   DWORD PTR [esi+0x14]
1001e92c:	call   DWORD PTR ds:0x1006730c
1001e932:	test   eax,eax
1001e934:	je     0x1001e9b1
1001e936:	mov    eax,DWORD PTR [esi+0x14]
1001e939:	jmp    0x1001e9ad
1001e93b:	mov    eax,DWORD PTR [esi]
1001e93d:	jmp    0x1001e9ad
1001e93f:	cmp    ebx,0x111
1001e945:	je     0x1001e9a7
1001e947:	cmp    ebx,0x113
1001e94d:	jbe    0x1001e9b1
1001e94f:	cmp    ebx,0x115
1001e955:	jbe    0x1001e9ab
1001e957:	cmp    ebx,0x131
1001e95d:	jbe    0x1001e9b1
1001e95f:	cmp    ebx,0x138
1001e965:	jbe    0x1001e9ab
1001e967:	cmp    ebx,0x210
1001e96d:	jne    0x1001e9b1
1001e96f:	mov    eax,DWORD PTR [edi+0x18]
1001e972:	test   eax,eax
1001e974:	je     0x1001e98b
1001e976:	push   DWORD PTR [eax+0xc]
1001e979:	push   DWORD PTR [eax+0x8]
1001e97c:	push   DWORD PTR [eax+0x4]
1001e97f:	push   DWORD PTR [edi+0x4]
1001e982:	push   DWORD PTR [edi+0x20]
1001e985:	call   DWORD PTR ds:0x10067320
1001e98b:	movzx  eax,WORD PTR [ebp+0x8]
1001e98f:	dec    eax
1001e990:	cmp    eax,0x1
1001e993:	jbe    0x1001e9ab
1001e995:	mov    eax,DWORD PTR [ebp+0x8]
1001e998:	shr    eax,0x10
1001e99b:	push   eax
1001e99c:	push   DWORD PTR [edi+0x4]
1001e99f:	call   DWORD PTR ds:0x10067304
1001e9a5:	jmp    0x1001e9ad
1001e9a7:	test   esi,esi
1001e9a9:	je     0x1001e9b1
1001e9ab:	mov    eax,esi
1001e9ad:	test   eax,eax
1001e9af:	jne    0x1001e9bc
1001e9b1:	mov    eax,DWORD PTR [ebp+0xc]
1001e9b4:	and    DWORD PTR [eax],0x0
1001e9b7:	xor    eax,eax
1001e9b9:	inc    eax
1001e9ba:	jmp    0x1001ea03
1001e9bc:	mov    ecx,DWORD PTR [edi+0x98]
1001e9c2:	test   cl,0x8
1001e9c5:	je     0x1001e9f1
1001e9c7:	and    DWORD PTR [ebp+0xc],0x0
1001e9cb:	test   cl,0x1
1001e9ce:	je     0x1001e9ec
1001e9d0:	mov    eax,DWORD PTR [edi+0x74]
1001e9d3:	test   eax,eax
1001e9d5:	je     0x1001e9ec
1001e9d7:	mov    ecx,DWORD PTR [eax]
1001e9d9:	lea    edx,[ebp+0xc]
1001e9dc:	push   edx
1001e9dd:	push   esi
1001e9de:	push   DWORD PTR [ebp+0x8]
1001e9e1:	add    ebx,0x2000
1001e9e7:	push   ebx
1001e9e8:	push   eax
1001e9e9:	call   DWORD PTR [ecx+0x24]
1001e9ec:	mov    eax,DWORD PTR [ebp+0xc]
1001e9ef:	jmp    0x1001ea03
1001e9f1:	push   esi
1001e9f2:	push   DWORD PTR [ebp+0x8]
1001e9f5:	add    ebx,0x2000
1001e9fb:	push   ebx
1001e9fc:	push   eax
1001e9fd:	call   DWORD PTR ds:0x100672f8
1001ea03:	pop    ebx
1001ea04:	pop    ebp
1001ea05:	ret    0x8
1001ea08:	mov    edx,DWORD PTR [esp+0x10]
1001ea0c:	test   edx,edx
1001ea0e:	jne    0x1001ea17
1001ea10:	mov    eax,0x80004003
1001ea15:	jmp    0x1001ea3c
1001ea17:	and    DWORD PTR [edx],0x0
1001ea1a:	mov    ecx,DWORD PTR [esp+0x4]
1001ea1e:	mov    ecx,DWORD PTR [ecx+0x9c]
1001ea24:	test   ecx,ecx
1001ea26:	mov    eax,0x80004002
1001ea2b:	je     0x1001ea3c
1001ea2d:	mov    eax,DWORD PTR [ecx]
1001ea2f:	push   edx
1001ea30:	push   DWORD PTR [esp+0x10]
1001ea34:	push   DWORD PTR [esp+0x10]
1001ea38:	push   ecx
1001ea39:	call   DWORD PTR [eax+0xc]
1001ea3c:	ret    0x10
1001ea3f:	push   0x1c
1001ea41:	mov    eax,0x1006072b
1001ea46:	call   0x10059e5e
1001ea4b:	mov    eax,DWORD PTR [ebp+0xc]
1001ea4e:	dec    eax
1001ea4f:	je     0x1001eac1
1001ea51:	sub    eax,0x81
1001ea56:	je     0x1001eaa1
1001ea58:	sub    eax,0x18e
1001ea5d:	jne    0x1001ec3d
1001ea63:	cmp    DWORD PTR [ebp+0x10],0x1
1001ea67:	jne    0x1001ec3d
1001ea6d:	mov    esi,DWORD PTR ds:0x100672f0
1001ea73:	push   0xffffffec
1001ea75:	push   DWORD PTR [ebp+0x14]
1001ea78:	call   esi
1001ea7a:	mov    ebx,0x10000
1001ea7f:	test   ebx,eax
1001ea81:	je     0x1001ec3d
1001ea87:	push   0xffffffec
1001ea89:	push   DWORD PTR [ebp+0x8]
1001ea8c:	call   esi
1001ea8e:	or     eax,ebx
1001ea90:	push   eax
1001ea91:	push   0xffffffec
1001ea93:	push   DWORD PTR [ebp+0x8]
1001ea96:	call   DWORD PTR ds:0x100672f4
1001ea9c:	jmp    0x1001ec3d
1001eaa1:	push   0xffffffeb
1001eaa3:	push   DWORD PTR [ebp+0x8]
1001eaa6:	call   DWORD PTR ds:0x100672f0
1001eaac:	test   eax,eax
1001eaae:	je     0x1001eab6
1001eab0:	mov    ecx,DWORD PTR [eax]
1001eab2:	push   eax
1001eab3:	call   DWORD PTR [ecx+0x8]
1001eab6:	call   DWORD PTR ds:0x10067414
1001eabc:	jmp    0x1001ec3d
1001eac1:	xor    edi,edi
1001eac3:	push   edi
1001eac4:	call   DWORD PTR ds:0x1006741c
1001eaca:	push   DWORD PTR [ebp+0x8]
1001eacd:	call   DWORD PTR ds:0x1006735c
1001ead3:	mov    esi,eax
1001ead5:	lea    eax,[esi+esi*1+0xa]
1001ead9:	cmp    eax,0x400
1001eade:	ja     0x1001eaf3
1001eae0:	call   0x1004b9b0
1001eae5:	mov    eax,esp
1001eae7:	cmp    eax,edi
1001eae9:	je     0x1001eb07
1001eaeb:	mov    DWORD PTR [eax],0xcccc
1001eaf1:	jmp    0x1001eb04
1001eaf3:	push   eax
1001eaf4:	call   0x10045143
1001eaf9:	cmp    eax,edi
1001eafb:	pop    ecx
1001eafc:	je     0x1001eb07
1001eafe:	mov    DWORD PTR [eax],0xdddd
1001eb04:	add    eax,0x8
1001eb07:	mov    DWORD PTR [ebp-0x1c],eax
1001eb0a:	mov    DWORD PTR [ebp-0x24],eax
1001eb0d:	cmp    eax,edi
1001eb0f:	mov    DWORD PTR [ebp-0x4],edi
1001eb12:	jne    0x1001eb23
1001eb14:	push   edi
1001eb15:	call   0x1001b64a
1001eb1a:	pop    ecx
1001eb1b:	or     eax,0xffffffff
1001eb1e:	jmp    0x1001ec4f
1001eb23:	inc    esi
1001eb24:	push   esi
1001eb25:	push   eax
1001eb26:	push   DWORD PTR [ebp+0x8]
1001eb29:	call   DWORD PTR ds:0x10067310
1001eb2f:	push   0x1006e2d8
1001eb34:	push   DWORD PTR [ebp+0x8]
1001eb37:	call   DWORD PTR ds:0x10067308
1001eb3d:	mov    eax,DWORD PTR [ebp+0x14]
1001eb40:	xor    esi,esi
1001eb42:	cmp    eax,edi
1001eb44:	mov    DWORD PTR [ebp-0x20],edi
1001eb47:	je     0x1001eb52
1001eb49:	mov    eax,DWORD PTR [eax]
1001eb4b:	cmp    eax,edi
1001eb4d:	je     0x1001eb52
1001eb4f:	movzx  esi,WORD PTR [eax]
1001eb52:	push   esi
1001eb53:	push   0x42
1001eb55:	call   DWORD PTR ds:0x1006714c
1001eb5b:	mov    ebx,eax
1001eb5d:	mov    DWORD PTR [ebp-0x14],edi
1001eb60:	cmp    ebx,edi
1001eb62:	mov    BYTE PTR [ebp-0x4],0x1
1001eb66:	je     0x1001eb9a
1001eb68:	cmp    esi,edi
1001eb6a:	je     0x1001eb9a
1001eb6c:	push   ebx
1001eb6d:	call   DWORD PTR ds:0x10067164
1001eb73:	mov    ecx,DWORD PTR [ebp+0x14]
1001eb76:	mov    ecx,DWORD PTR [ecx]
1001eb78:	inc    ecx
1001eb79:	push   esi
1001eb7a:	inc    ecx
1001eb7b:	push   ecx
1001eb7c:	push   esi
1001eb7d:	push   eax
1001eb7e:	call   0x10014786
1001eb83:	add    esp,0x10
1001eb86:	push   ebx
1001eb87:	call   DWORD PTR ds:0x10067154
1001eb8d:	lea    eax,[ebp-0x14]
1001eb90:	push   eax
1001eb91:	push   0x1
1001eb93:	push   ebx
1001eb94:	call   DWORD PTR ds:0x10067420
1001eb9a:	call   DWORD PTR ds:0x10080ffc
1001eba0:	mov    DWORD PTR [ebp-0x28],edi
1001eba3:	mov    DWORD PTR [ebp-0x18],edi
1001eba6:	push   edi
1001eba7:	mov    edi,DWORD PTR [ebp-0x1c]
1001ebaa:	mov    BYTE PTR [ebp-0x4],0x3
1001ebae:	push   DWORD PTR [ebp-0x14]
1001ebb1:	lea    ebx,[ebp-0x18]
1001ebb4:	push   DWORD PTR [ebp+0x8]
1001ebb7:	push   edi
1001ebb8:	call   0x1001eeb2
1001ebbd:	xor    ebx,ebx
1001ebbf:	cmp    eax,ebx
1001ebc1:	jge    0x1001ebed
1001ebc3:	mov    BYTE PTR [ebp-0x4],0x2
1001ebc7:	mov    eax,DWORD PTR [ebp-0x18]
1001ebca:	cmp    eax,ebx
1001ebcc:	je     0x1001ebd4
1001ebce:	mov    ecx,DWORD PTR [eax]
1001ebd0:	push   eax
1001ebd1:	call   DWORD PTR [ecx+0x8]
1001ebd4:	mov    BYTE PTR [ebp-0x4],bl
1001ebd7:	mov    eax,DWORD PTR [ebp-0x14]
1001ebda:	cmp    eax,ebx
1001ebdc:	je     0x1001eb14
1001ebe2:	mov    ecx,DWORD PTR [eax]
1001ebe4:	push   eax
1001ebe5:	call   DWORD PTR [ecx+0x8]
1001ebe8:	jmp    0x1001eb14
1001ebed:	mov    esi,DWORD PTR [ebp-0x18]
1001ebf0:	mov    eax,DWORD PTR [esi]
1001ebf2:	lea    ecx,[ebp-0x20]
1001ebf5:	push   ecx
1001ebf6:	push   0x1007153c
1001ebfb:	push   esi
1001ebfc:	call   DWORD PTR [eax]
1001ebfe:	cmp    eax,ebx
1001ec00:	jge    0x1001ec0e
1001ec02:	mov    BYTE PTR [ebp-0x4],0x2
1001ec06:	mov    eax,DWORD PTR [esi]
1001ec08:	push   esi
1001ec09:	call   DWORD PTR [eax+0x8]
1001ec0c:	jmp    0x1001ebd4
1001ec0e:	push   DWORD PTR [ebp-0x20]
1001ec11:	push   0xffffffeb
1001ec13:	push   DWORD PTR [ebp+0x8]
1001ec16:	call   DWORD PTR ds:0x100672f4
1001ec1c:	mov    BYTE PTR [ebp-0x4],0x2
1001ec20:	mov    eax,DWORD PTR [esi]
1001ec22:	push   esi
1001ec23:	call   DWORD PTR [eax+0x8]
1001ec26:	mov    BYTE PTR [ebp-0x4],bl
1001ec29:	mov    eax,DWORD PTR [ebp-0x14]
1001ec2c:	cmp    eax,ebx
1001ec2e:	je     0x1001ec36
1001ec30:	mov    ecx,DWORD PTR [eax]
1001ec32:	push   eax
1001ec33:	call   DWORD PTR [ecx+0x8]
1001ec36:	push   edi
1001ec37:	call   0x1001b64a
1001ec3c:	pop    ecx
1001ec3d:	push   DWORD PTR [ebp+0x14]
1001ec40:	push   DWORD PTR [ebp+0x10]
1001ec43:	push   DWORD PTR [ebp+0xc]
1001ec46:	push   DWORD PTR [ebp+0x8]
1001ec49:	call   DWORD PTR ds:0x10067334
1001ec4f:	lea    esp,[ebp-0x38]
1001ec52:	call   0x10059ee1
1001ec57:	ret    0x10
1001ec5a:	push   0x20
1001ec5c:	mov    eax,0x100606e6
1001ec61:	call   0x10059e5e
1001ec66:	mov    eax,DWORD PTR [ebp+0xc]
1001ec69:	dec    eax
1001ec6a:	je     0x1001ecdc
1001ec6c:	sub    eax,0x81
1001ec71:	je     0x1001ecbc
1001ec73:	sub    eax,0x18e
1001ec78:	jne    0x1001ee95
1001ec7e:	cmp    DWORD PTR [ebp+0x10],0x1
1001ec82:	jne    0x1001ee95
1001ec88:	mov    esi,DWORD PTR ds:0x100672f0
1001ec8e:	push   0xffffffec
1001ec90:	push   DWORD PTR [ebp+0x14]
1001ec93:	call   esi
1001ec95:	mov    ebx,0x10000
1001ec9a:	test   ebx,eax
1001ec9c:	je     0x1001ee95
1001eca2:	push   0xffffffec
1001eca4:	push   DWORD PTR [ebp+0x8]
1001eca7:	call   esi
1001eca9:	or     eax,ebx
1001ecab:	push   eax
1001ecac:	push   0xffffffec
1001ecae:	push   DWORD PTR [ebp+0x8]
1001ecb1:	call   DWORD PTR ds:0x100672f4
1001ecb7:	jmp    0x1001ee95
1001ecbc:	push   0xffffffeb
1001ecbe:	push   DWORD PTR [ebp+0x8]
1001ecc1:	call   DWORD PTR ds:0x100672f0
1001ecc7:	test   eax,eax
1001ecc9:	je     0x1001ecd1
1001eccb:	mov    ecx,DWORD PTR [eax]
1001eccd:	push   eax
1001ecce:	call   DWORD PTR [ecx+0x8]
1001ecd1:	call   DWORD PTR ds:0x10067414
1001ecd7:	jmp    0x1001ee95
1001ecdc:	xor    edi,edi
1001ecde:	push   edi
1001ecdf:	call   DWORD PTR ds:0x1006741c
1001ece5:	push   DWORD PTR [ebp+0x8]
1001ece8:	call   DWORD PTR ds:0x1006735c
1001ecee:	mov    esi,eax
1001ecf0:	lea    eax,[esi+esi*1+0xa]
1001ecf4:	cmp    eax,0x400
1001ecf9:	ja     0x1001ed0e
1001ecfb:	call   0x1004b9b0
1001ed00:	mov    eax,esp
1001ed02:	cmp    eax,edi
1001ed04:	je     0x1001ed22
1001ed06:	mov    DWORD PTR [eax],0xcccc
1001ed0c:	jmp    0x1001ed1f
1001ed0e:	push   eax
1001ed0f:	call   0x10045143
1001ed14:	cmp    eax,edi
1001ed16:	pop    ecx
1001ed17:	je     0x1001ed22
1001ed19:	mov    DWORD PTR [eax],0xdddd
1001ed1f:	add    eax,0x8
1001ed22:	mov    DWORD PTR [ebp-0x18],eax
1001ed25:	mov    DWORD PTR [ebp-0x28],eax
1001ed28:	cmp    eax,edi
1001ed2a:	mov    DWORD PTR [ebp-0x4],edi
1001ed2d:	jne    0x1001ed3e
1001ed2f:	push   edi
1001ed30:	call   0x1001b64a
1001ed35:	pop    ecx
1001ed36:	or     eax,0xffffffff
1001ed39:	jmp    0x1001eea7
1001ed3e:	inc    esi
1001ed3f:	push   esi
1001ed40:	push   eax
1001ed41:	push   DWORD PTR [ebp+0x8]
1001ed44:	call   DWORD PTR ds:0x10067310
1001ed4a:	push   0x1006e2d8
1001ed4f:	push   DWORD PTR [ebp+0x8]
1001ed52:	call   DWORD PTR ds:0x10067308
1001ed58:	mov    eax,DWORD PTR [ebp+0x14]
1001ed5b:	xor    ebx,ebx
1001ed5d:	cmp    eax,edi
1001ed5f:	mov    DWORD PTR [ebp-0x24],edi
1001ed62:	je     0x1001ed6d
1001ed64:	mov    eax,DWORD PTR [eax]
1001ed66:	cmp    eax,edi
1001ed68:	je     0x1001ed6d
1001ed6a:	movzx  ebx,WORD PTR [eax]
1001ed6d:	push   ebx
1001ed6e:	push   0x42
1001ed70:	call   DWORD PTR ds:0x1006714c
1001ed76:	mov    esi,eax
1001ed78:	mov    DWORD PTR [ebp-0x14],edi
1001ed7b:	cmp    esi,edi
1001ed7d:	mov    BYTE PTR [ebp-0x4],0x1
1001ed81:	je     0x1001edb5
1001ed83:	cmp    ebx,edi
1001ed85:	je     0x1001edb5
1001ed87:	push   esi
1001ed88:	call   DWORD PTR ds:0x10067164
1001ed8e:	mov    ecx,DWORD PTR [ebp+0x14]
1001ed91:	mov    ecx,DWORD PTR [ecx]
1001ed93:	inc    ecx
1001ed94:	push   ebx
1001ed95:	inc    ecx
1001ed96:	push   ecx
1001ed97:	push   ebx
1001ed98:	push   eax
1001ed99:	call   0x10014786
1001ed9e:	add    esp,0x10
1001eda1:	push   esi
1001eda2:	call   DWORD PTR ds:0x10067154
1001eda8:	lea    eax,[ebp-0x14]
1001edab:	push   eax
1001edac:	push   0x1
1001edae:	push   esi
1001edaf:	call   DWORD PTR ds:0x10067420
1001edb5:	mov    DWORD PTR [ebp-0x20],edi
1001edb8:	lea    eax,[ebp-0x20]
1001edbb:	mov    BYTE PTR [ebp-0x4],0x2
1001edbf:	mov    ecx,DWORD PTR [ebp-0x14]
1001edc2:	push   eax
1001edc3:	call   0x1001bc83
1001edc8:	cmp    eax,edi
1001edca:	pop    ecx
1001edcb:	jge    0x1001edef
1001edcd:	push   DWORD PTR [ebp-0x20]
1001edd0:	call   DWORD PTR ds:0x100672b4
1001edd6:	mov    BYTE PTR [ebp-0x4],0x0
1001edda:	mov    eax,DWORD PTR [ebp-0x14]
1001eddd:	cmp    eax,edi
1001eddf:	je     0x1001ede7
1001ede1:	mov    ecx,DWORD PTR [eax]
1001ede3:	push   eax
1001ede4:	call   DWORD PTR [ecx+0x8]
1001ede7:	push   DWORD PTR [ebp-0x18]
1001edea:	jmp    0x1001ed30
1001edef:	call   DWORD PTR ds:0x10080ffc
1001edf5:	mov    DWORD PTR [ebp-0x2c],edi
1001edf8:	mov    DWORD PTR [ebp-0x1c],edi
1001edfb:	mov    BYTE PTR [ebp-0x4],0x4
1001edff:	mov    edi,DWORD PTR [ebp-0x20]
1001ee02:	push   edi
1001ee03:	push   DWORD PTR [ebp-0x14]
1001ee06:	lea    ebx,[ebp-0x1c]
1001ee09:	push   DWORD PTR [ebp+0x8]
1001ee0c:	push   DWORD PTR [ebp-0x18]
1001ee0f:	call   0x1001eeb2
1001ee14:	xor    ebx,ebx
1001ee16:	cmp    eax,ebx
1001ee18:	jge    0x1001ee3c
1001ee1a:	mov    BYTE PTR [ebp-0x4],0x3
1001ee1e:	mov    eax,DWORD PTR [ebp-0x1c]
1001ee21:	cmp    eax,ebx
1001ee23:	je     0x1001ee2b
1001ee25:	mov    ecx,DWORD PTR [eax]
1001ee27:	push   eax
1001ee28:	call   DWORD PTR [ecx+0x8]
1001ee2b:	push   edi
1001ee2c:	call   DWORD PTR ds:0x100672b4
1001ee32:	mov    BYTE PTR [ebp-0x4],bl
1001ee35:	mov    eax,DWORD PTR [ebp-0x14]
1001ee38:	cmp    eax,ebx
1001ee3a:	jmp    0x1001eddf
1001ee3c:	mov    esi,DWORD PTR [ebp-0x1c]
1001ee3f:	mov    eax,DWORD PTR [esi]
1001ee41:	lea    ecx,[ebp-0x24]
1001ee44:	push   ecx
1001ee45:	push   0x1007152c
1001ee4a:	push   esi
1001ee4b:	call   DWORD PTR [eax]
1001ee4d:	cmp    eax,ebx
1001ee4f:	jge    0x1001ee5d
1001ee51:	mov    BYTE PTR [ebp-0x4],0x3
1001ee55:	mov    eax,DWORD PTR [esi]
1001ee57:	push   esi
1001ee58:	call   DWORD PTR [eax+0x8]
1001ee5b:	jmp    0x1001ee2b
1001ee5d:	push   DWORD PTR [ebp-0x24]
1001ee60:	push   0xffffffeb
1001ee62:	push   DWORD PTR [ebp+0x8]
1001ee65:	call   DWORD PTR ds:0x100672f4
1001ee6b:	mov    BYTE PTR [ebp-0x4],0x3
1001ee6f:	mov    eax,DWORD PTR [esi]
1001ee71:	push   esi
1001ee72:	call   DWORD PTR [eax+0x8]
1001ee75:	push   edi
1001ee76:	call   DWORD PTR ds:0x100672b4
1001ee7c:	mov    BYTE PTR [ebp-0x4],bl
1001ee7f:	mov    eax,DWORD PTR [ebp-0x14]
1001ee82:	cmp    eax,ebx
1001ee84:	je     0x1001ee8c
1001ee86:	mov    ecx,DWORD PTR [eax]
1001ee88:	push   eax
1001ee89:	call   DWORD PTR [ecx+0x8]
1001ee8c:	push   DWORD PTR [ebp-0x18]
1001ee8f:	call   0x1001b64a
1001ee94:	pop    ecx
1001ee95:	push   DWORD PTR [ebp+0x14]
1001ee98:	push   DWORD PTR [ebp+0x10]
1001ee9b:	push   DWORD PTR [ebp+0xc]
1001ee9e:	push   DWORD PTR [ebp+0x8]
1001eea1:	call   DWORD PTR ds:0x10067334
1001eea7:	lea    esp,[ebp-0x3c]
1001eeaa:	call   0x10059ee1
1001eeaf:	ret    0x10
1001eeb2:	push   ebp
1001eeb3:	mov    ebp,esp
1001eeb5:	sub    esp,0xc
1001eeb8:	push   esi
1001eeb9:	push   edi
1001eeba:	call   0x1001ef62
1001eebf:	lea    eax,[ebp-0x4]
1001eec2:	xor    edi,edi
1001eec4:	push   eax
1001eec5:	mov    DWORD PTR [ebp-0x4],edi
1001eec8:	mov    DWORD PTR [ebp-0xc],edi
1001eecb:	call   0x100205a3
1001eed0:	mov    esi,eax
1001eed2:	cmp    esi,edi
1001eed4:	jl     0x1001ef2c
1001eed6:	mov    eax,DWORD PTR [ebp-0x4]
1001eed9:	lea    edx,[ebp-0x8]
1001eedc:	push   edx
1001eedd:	push   0x1007153c
1001eee2:	mov    DWORD PTR [ebp-0x8],edi
1001eee5:	mov    ecx,DWORD PTR [eax]
1001eee7:	push   eax
1001eee8:	call   DWORD PTR [ecx]
1001eeea:	push   DWORD PTR [ebp+0x8]
1001eeed:	lea    esi,[ebp+0x8]
1001eef0:	call   0x1001b665
1001eef5:	push   DWORD PTR [ebp+0x14]
1001eef8:	mov    eax,DWORD PTR [ebp-0x8]
1001eefb:	mov    ecx,DWORD PTR [eax]
1001eefd:	push   edi
1001eefe:	push   0x1006c868
1001ef03:	lea    edx,[ebp-0xc]
1001ef06:	push   edx
1001ef07:	push   DWORD PTR [ebp+0x10]
1001ef0a:	push   DWORD PTR [ebp+0xc]
1001ef0d:	push   DWORD PTR [ebp+0x8]
1001ef10:	push   eax
1001ef11:	call   DWORD PTR [ecx+0x28]
1001ef14:	push   DWORD PTR [ebp+0x8]
1001ef17:	mov    esi,eax
1001ef19:	call   DWORD PTR ds:0x100672b4
1001ef1f:	mov    eax,DWORD PTR [ebp-0x8]
1001ef22:	cmp    eax,edi
1001ef24:	je     0x1001ef2c
1001ef26:	mov    ecx,DWORD PTR [eax]
1001ef28:	push   eax
1001ef29:	call   DWORD PTR [ecx+0x8]
1001ef2c:	cmp    ebx,edi
1001ef2e:	je     0x1001ef40
1001ef30:	cmp    esi,edi
1001ef32:	jl     0x1001ef3e
1001ef34:	mov    eax,DWORD PTR [ebp-0x4]
1001ef37:	mov    DWORD PTR [ebx],eax
1001ef39:	mov    DWORD PTR [ebp-0x4],edi
1001ef3c:	jmp    0x1001ef40
1001ef3e:	mov    DWORD PTR [ebx],edi
1001ef40:	mov    eax,DWORD PTR [ebp-0xc]
1001ef43:	cmp    eax,edi
1001ef45:	je     0x1001ef4d
1001ef47:	mov    ecx,DWORD PTR [eax]
1001ef49:	push   eax
1001ef4a:	call   DWORD PTR [ecx+0x8]
1001ef4d:	mov    eax,DWORD PTR [ebp-0x4]
1001ef50:	cmp    eax,edi
1001ef52:	je     0x1001ef5a
1001ef54:	mov    ecx,DWORD PTR [eax]
1001ef56:	push   eax
1001ef57:	call   DWORD PTR [ecx+0x8]
1001ef5a:	pop    edi
1001ef5b:	mov    eax,esi
1001ef5d:	pop    esi
1001ef5e:	leave  
1001ef5f:	ret    0x10
1001ef62:	push   ebp
1001ef63:	mov    ebp,esp
1001ef65:	and    esp,0xfffffff8
1001ef68:	sub    esp,0x3c
1001ef6b:	push   ebx
1001ef6c:	push   esi
1001ef6d:	mov    eax,0x10082ac8
1001ef72:	push   edi
1001ef73:	push   eax
1001ef74:	mov    DWORD PTR [esp+0x14],eax
1001ef78:	call   DWORD PTR ds:0x100670f8
1001ef7e:	mov    esi,DWORD PTR ds:0x100672d4
1001ef84:	push   0x10071730
1001ef89:	mov    BYTE PTR [esp+0x18],0x1
1001ef8e:	call   esi
1001ef90:	push   0x1007174c
1001ef95:	mov    ds:0x10083048,eax
1001ef9a:	call   esi
1001ef9c:	push   0x30
1001ef9e:	pop    edi
1001ef9f:	mov    ds:0x1008304c,eax
1001efa4:	lea    eax,[esp+0x18]
1001efa8:	push   eax
1001efa9:	mov    ebx,0x1007170c
1001efae:	push   ebx
1001efaf:	push   DWORD PTR ds:0x10082a8c
1001efb5:	mov    DWORD PTR [esp+0x24],edi
1001efb9:	call   DWORD PTR ds:0x10067314
1001efbf:	xor    esi,esi
1001efc1:	cmp    eax,esi
1001efc3:	jne    0x1001f03d
1001efc5:	mov    eax,ds:0x10082a8c
1001efca:	push   0x7f00
1001efcf:	push   esi
1001efd0:	mov    DWORD PTR [esp+0x20],edi
1001efd4:	mov    DWORD PTR [esp+0x24],0x8
1001efdc:	mov    DWORD PTR [esp+0x28],0x1001ea3f
1001efe4:	mov    DWORD PTR [esp+0x2c],esi
1001efe8:	mov    DWORD PTR [esp+0x30],esi
1001efec:	mov    DWORD PTR [esp+0x34],eax
1001eff0:	mov    DWORD PTR [esp+0x38],esi
1001eff4:	call   DWORD PTR ds:0x100672ec
1001effa:	mov    DWORD PTR [esp+0x34],eax
1001effe:	lea    eax,[esp+0x18]
1001f002:	push   eax
1001f003:	mov    DWORD PTR [esp+0x3c],0x6
1001f00b:	mov    DWORD PTR [esp+0x40],esi
1001f00f:	mov    DWORD PTR [esp+0x44],ebx
1001f013:	mov    DWORD PTR [esp+0x48],esi
1001f017:	call   DWORD PTR ds:0x10067328
1001f01d:	movzx  eax,ax
1001f020:	cmp    ax,si
1001f023:	mov    DWORD PTR [esp+0xc],eax
1001f027:	je     0x1001f0ef
1001f02d:	lea    ebx,[esp+0xc]
1001f031:	mov    esi,0x10082ae4
1001f036:	call   0x10020170
1001f03b:	xor    esi,esi
1001f03d:	push   edi
1001f03e:	lea    eax,[esp+0x1c]
1001f042:	push   esi
1001f043:	push   eax
1001f044:	call   0x10045dc0
1001f049:	add    esp,0xc
1001f04c:	lea    eax,[esp+0x18]
1001f050:	push   eax
1001f051:	mov    ebx,0x1007181c
1001f056:	push   ebx
1001f057:	push   DWORD PTR ds:0x10082a8c
1001f05d:	mov    DWORD PTR [esp+0x24],edi
1001f061:	call   DWORD PTR ds:0x10067314
1001f067:	cmp    eax,esi
1001f069:	mov    DWORD PTR [esp+0xc],eax
1001f06d:	jne    0x1001f0f3
1001f073:	mov    eax,ds:0x10082a8c
1001f078:	push   0x7f00
1001f07d:	push   esi
1001f07e:	mov    DWORD PTR [esp+0x20],edi
1001f082:	mov    DWORD PTR [esp+0x24],0x8
1001f08a:	mov    DWORD PTR [esp+0x28],0x1001ec5a
1001f092:	mov    DWORD PTR [esp+0x2c],esi
1001f096:	mov    DWORD PTR [esp+0x30],esi
1001f09a:	mov    DWORD PTR [esp+0x34],eax
1001f09e:	mov    DWORD PTR [esp+0x38],esi
1001f0a2:	call   DWORD PTR ds:0x100672ec
1001f0a8:	mov    DWORD PTR [esp+0x34],eax
1001f0ac:	lea    eax,[esp+0x18]
1001f0b0:	push   eax
1001f0b1:	mov    DWORD PTR [esp+0x3c],0x6
1001f0b9:	mov    DWORD PTR [esp+0x40],esi
1001f0bd:	mov    DWORD PTR [esp+0x44],ebx
1001f0c1:	mov    DWORD PTR [esp+0x48],esi
1001f0c5:	call   DWORD PTR ds:0x10067328
1001f0cb:	movzx  eax,ax
1001f0ce:	cmp    ax,si
1001f0d1:	mov    DWORD PTR [esp+0xc],eax
1001f0d5:	je     0x1001f0ef
1001f0d7:	lea    ebx,[esp+0xc]
1001f0db:	mov    esi,0x10082ae4
1001f0e0:	call   0x10020170
1001f0e5:	mov    DWORD PTR [esp+0xc],0x1
1001f0ed:	jmp    0x1001f0f3
1001f0ef:	mov    DWORD PTR [esp+0xc],esi
1001f0f3:	lea    ecx,[esp+0x10]
1001f0f7:	call   0x100111c4
1001f0fc:	mov    eax,DWORD PTR [esp+0xc]
1001f100:	pop    edi
1001f101:	pop    esi
1001f102:	pop    ebx
1001f103:	mov    esp,ebp
1001f105:	pop    ebp
1001f106:	ret    
1001f107:	cmp    DWORD PTR [eax+0x18],0x8
1001f10b:	push   esi
1001f10c:	push   edi
1001f10d:	jb     0x1001f114
1001f10f:	mov    esi,DWORD PTR [eax+0x4]
1001f112:	jmp    0x1001f117
1001f114:	lea    esi,[eax+0x4]
1001f117:	push   esi
1001f118:	call   0x100437c6
1001f11d:	pop    ecx
1001f11e:	mov    ecx,DWORD PTR [ebx+0x14]
1001f121:	mov    edi,eax
1001f123:	push   esi
1001f124:	mov    eax,ebx
1001f126:	call   0x1000688a
1001f12b:	xor    ecx,ecx
1001f12d:	test   eax,eax
1001f12f:	setl   cl
1001f132:	pop    edi
1001f133:	mov    al,cl
1001f135:	pop    esi
1001f136:	ret    
1001f137:	push   ebp
1001f138:	mov    ebp,esp
1001f13a:	and    esp,0xfffffff8
1001f13d:	sub    esp,0x1c
1001f140:	push   ebx
1001f141:	push   esi
1001f142:	push   edi
1001f143:	push   0xffffffff
1001f145:	push   DWORD PTR ds:0x10082fc0
1001f14b:	xor    ebx,ebx
1001f14d:	call   DWORD PTR ds:0x1006707c
1001f153:	test   eax,eax
1001f155:	jne    0x1001f1d4
1001f157:	lea    eax,[ebp+0x8]
1001f15a:	push   eax
1001f15b:	lea    eax,[esp+0x1c]
1001f15f:	push   eax
1001f160:	call   0x10020cee
1001f165:	mov    eax,ds:0x10082fc8
1001f16a:	lea    edi,[esp+0x10]
1001f16e:	lea    esi,[esp+0x18]
1001f172:	mov    DWORD PTR [esp+0x14],eax
1001f176:	mov    DWORD PTR [esp+0x10],0x10082fc4
1001f17e:	call   0x10004b0c
1001f183:	test   al,al
1001f185:	je     0x1001f1c3
1001f187:	mov    esi,DWORD PTR ds:0x10067114
1001f18d:	push   ebx
1001f18e:	push   ebx
1001f18f:	push   ebx
1001f190:	push   ebx
1001f191:	mov    BYTE PTR [esp+0x34],bl
1001f195:	mov    DWORD PTR [esp+0x28],0x1388
1001f19d:	call   esi
1001f19f:	push   ebx
1001f1a0:	push   ebx
1001f1a1:	push   ebx
1001f1a2:	push   ebx
1001f1a3:	mov    DWORD PTR [esp+0x30],eax
1001f1a7:	call   esi
1001f1a9:	lea    ebx,[ebp+0x8]
1001f1ac:	mov    DWORD PTR [esp+0x1c],eax
1001f1b0:	call   0x100209bb
1001f1b5:	lea    esi,[esp+0x18]
1001f1b9:	mov    edi,eax
1001f1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f1bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001f1bf:	mov    bl,0x1
1001f1c1:	jmp    0x1001f1c8
1001f1c3:	call   0x10002068
1001f1c8:	push   DWORD PTR ds:0x10082fc0
1001f1ce:	call   DWORD PTR ds:0x10067090
1001f1d4:	pop    edi
1001f1d5:	pop    esi
1001f1d6:	mov    al,bl
1001f1d8:	pop    ebx
1001f1d9:	mov    esp,ebp
1001f1db:	pop    ebp
1001f1dc:	ret    
1001f1dd:	push   ebp
1001f1de:	mov    ebp,esp
1001f1e0:	sub    esp,0x10
1001f1e3:	push   0xffffffff
1001f1e5:	push   DWORD PTR ds:0x10082fc0
1001f1eb:	call   DWORD PTR ds:0x1006707c
1001f1f1:	test   eax,eax
1001f1f3:	jne    0x1001f249
1001f1f5:	push   esi
1001f1f6:	push   edi
1001f1f7:	lea    eax,[ebp+0x8]
1001f1fa:	push   eax
1001f1fb:	lea    eax,[ebp-0x8]
1001f1fe:	push   eax
1001f1ff:	call   0x10020cee
1001f204:	mov    eax,ds:0x10082fc8
1001f209:	lea    edi,[ebp-0x10]
1001f20c:	lea    esi,[ebp-0x8]
1001f20f:	mov    DWORD PTR [ebp-0xc],eax
1001f212:	mov    DWORD PTR [ebp-0x10],0x10082fc4
1001f219:	call   0x10004b0c
1001f21e:	test   al,al
1001f220:	jne    0x1001f23b
1001f222:	call   0x1001426e
1001f227:	mov    ecx,DWORD PTR [ebp+0xc]
1001f22a:	mov    DWORD PTR [eax+0x4],ecx
1001f22d:	call   0x1001426e
1001f232:	push   DWORD PTR [eax+0x8]
1001f235:	call   DWORD PTR ds:0x10067148
1001f23b:	push   DWORD PTR ds:0x10082fc0
1001f241:	call   DWORD PTR ds:0x10067090
1001f247:	pop    edi
1001f248:	pop    esi
1001f249:	leave  
1001f24a:	ret    
1001f24b:	push   ebp
1001f24c:	mov    ebp,esp
1001f24e:	sub    esp,0x14
1001f251:	push   esi
1001f252:	push   edi
1001f253:	push   0xffffffff
1001f255:	push   DWORD PTR ds:0x10082fc0
1001f25b:	call   DWORD PTR ds:0x1006707c
1001f261:	test   eax,eax
1001f263:	jne    0x1001f2b1
1001f265:	call   0x10002068
1001f26a:	lea    eax,[ebp+0x8]
1001f26d:	push   eax
1001f26e:	lea    eax,[ebp-0x14]
1001f271:	push   eax
1001f272:	call   0x10020cee
1001f277:	mov    eax,ds:0x10082fc8
1001f27c:	lea    edi,[ebp-0xc]
1001f27f:	lea    esi,[ebp-0x14]
1001f282:	mov    DWORD PTR [ebp-0x8],eax
1001f285:	mov    DWORD PTR [ebp-0xc],0x10082fc4
1001f28c:	call   0x10004b0c
1001f291:	test   al,al
1001f293:	jne    0x1001f2a0
1001f295:	call   0x1001426e
1001f29a:	mov    BYTE PTR [eax+0x10],0x1
1001f29e:	jmp    0x1001f2a5
1001f2a0:	call   0x10002068
1001f2a5:	push   DWORD PTR ds:0x10082fc0
1001f2ab:	call   DWORD PTR ds:0x10067090
1001f2b1:	pop    edi
1001f2b2:	pop    esi
1001f2b3:	leave  
1001f2b4:	ret    
1001f2b5:	push   ebp
1001f2b6:	mov    ebp,esp
1001f2b8:	sub    esp,0x18
1001f2bb:	push   ebx
1001f2bc:	push   esi
1001f2bd:	push   edi
1001f2be:	push   0xffffffff
1001f2c0:	push   DWORD PTR ds:0x10082fc0
1001f2c6:	xor    ebx,ebx
1001f2c8:	call   DWORD PTR ds:0x1006707c
1001f2ce:	test   eax,eax
1001f2d0:	jne    0x1001f318
1001f2d2:	lea    eax,[ebp+0x8]
1001f2d5:	push   eax
1001f2d6:	lea    eax,[ebp-0x14]
1001f2d9:	push   eax
1001f2da:	call   0x10020cee
1001f2df:	mov    eax,ds:0x10082fc8
1001f2e4:	lea    edi,[ebp-0xc]
1001f2e7:	lea    esi,[ebp-0x14]
1001f2ea:	mov    DWORD PTR [ebp-0x8],eax
1001f2ed:	mov    DWORD PTR [ebp-0xc],0x10082fc4
1001f2f4:	call   0x10004b0c
1001f2f9:	test   al,al
1001f2fb:	jne    0x1001f307
1001f2fd:	call   0x1001426e
1001f302:	mov    ebx,DWORD PTR [eax+0x4]
1001f305:	jmp    0x1001f30c
1001f307:	call   0x10002068
1001f30c:	push   DWORD PTR ds:0x10082fc0
1001f312:	call   DWORD PTR ds:0x10067090
1001f318:	pop    edi
1001f319:	pop    esi
1001f31a:	mov    eax,ebx
1001f31c:	pop    ebx
1001f31d:	leave  
1001f31e:	ret    
1001f31f:	push   ebp
1001f320:	mov    ebp,esp
1001f322:	sub    esp,0x18
1001f325:	push   ebx
1001f326:	push   esi
1001f327:	push   edi
1001f328:	push   0xffffffff
1001f32a:	push   DWORD PTR ds:0x10082fc0
1001f330:	xor    bl,bl
1001f332:	call   DWORD PTR ds:0x1006707c
1001f338:	test   eax,eax
1001f33a:	jne    0x1001f3cb
1001f340:	lea    eax,[ebp+0x8]
1001f343:	push   eax
1001f344:	lea    eax,[ebp-0xc]
1001f347:	push   eax
1001f348:	call   0x10020cee
1001f34d:	mov    eax,ds:0x10082fc8
1001f352:	lea    edi,[ebp-0x14]
1001f355:	lea    esi,[ebp-0xc]
1001f358:	mov    DWORD PTR [ebp-0x10],eax
1001f35b:	mov    DWORD PTR [ebp-0x14],0x10082fc4
1001f362:	call   0x10004b0c
1001f367:	test   al,al
1001f369:	jne    0x1001f3ba
1001f36b:	mov    ebx,DWORD PTR ds:0x10067128
1001f371:	mov    edi,DWORD PTR ds:0x1006712c
1001f377:	xor    eax,eax
1001f379:	cmp    DWORD PTR [ebp+0xc],eax
1001f37c:	je     0x1001f397
1001f37e:	push   0x2
1001f380:	push   eax
1001f381:	push   eax
1001f382:	push   DWORD PTR [ebp+0xc]
1001f385:	call   edi
1001f387:	push   eax
1001f388:	call   0x1001426e
1001f38d:	push   DWORD PTR [eax+0x8]
1001f390:	call   edi
1001f392:	push   eax
1001f393:	call   ebx
1001f395:	xor    eax,eax
1001f397:	cmp    DWORD PTR [ebp+0x10],eax
1001f39a:	je     0x1001f3b6
1001f39c:	push   0x2
1001f39e:	push   eax
1001f39f:	push   eax
1001f3a0:	push   DWORD PTR [ebp+0x10]
1001f3a3:	call   edi
1001f3a5:	push   eax
1001f3a6:	lea    esi,[ebp-0xc]
1001f3a9:	call   0x1001426e
1001f3ae:	push   DWORD PTR [eax+0xc]
1001f3b1:	call   edi
1001f3b3:	push   eax
1001f3b4:	call   ebx
1001f3b6:	mov    bl,0x1
1001f3b8:	jmp    0x1001f3bf
1001f3ba:	call   0x10002068
1001f3bf:	push   DWORD PTR ds:0x10082fc0
1001f3c5:	call   DWORD PTR ds:0x10067090
1001f3cb:	pop    edi
1001f3cc:	pop    esi
1001f3cd:	mov    al,bl
1001f3cf:	pop    ebx
1001f3d0:	leave  
1001f3d1:	ret    
1001f3d2:	push   ebp
1001f3d3:	mov    ebp,esp
1001f3d5:	and    esp,0xfffffff8
1001f3d8:	sub    esp,0x14
1001f3db:	push   ebx
1001f3dc:	push   esi
1001f3dd:	push   edi
1001f3de:	push   0xffffffff
1001f3e0:	push   DWORD PTR ds:0x10082fc0
1001f3e6:	xor    bl,bl
1001f3e8:	call   DWORD PTR ds:0x1006707c
1001f3ee:	test   eax,eax
1001f3f0:	jne    0x1001f469
1001f3f2:	lea    eax,[ebp+0x8]
1001f3f5:	push   eax
1001f3f6:	lea    eax,[esp+0x14]
1001f3fa:	push   eax
1001f3fb:	call   0x10020cee
1001f400:	mov    eax,ds:0x10082fc8
1001f405:	lea    edi,[esp+0x18]
1001f409:	lea    esi,[esp+0x10]
1001f40d:	mov    DWORD PTR [esp+0x1c],eax
1001f411:	mov    DWORD PTR [esp+0x18],0x10082fc4
1001f419:	call   0x10004b0c
1001f41e:	test   al,al
1001f420:	jne    0x1001f458
1001f422:	call   0x1001426e
1001f427:	mov    bl,BYTE PTR [eax+0x10]
1001f42a:	call   0x1001426e
1001f42f:	push   DWORD PTR [eax+0x8]
1001f432:	mov    edi,DWORD PTR ds:0x10067078
1001f438:	call   edi
1001f43a:	call   0x1001426e
1001f43f:	push   DWORD PTR [eax+0xc]
1001f442:	call   edi
1001f444:	push   DWORD PTR [esp+0x14]
1001f448:	lea    eax,[esp+0x1c]
1001f44c:	push   DWORD PTR [esp+0x14]
1001f450:	push   eax
1001f451:	call   0x10020a7b
1001f456:	jmp    0x1001f45d
1001f458:	call   0x10002068
1001f45d:	push   DWORD PTR ds:0x10082fc0
1001f463:	call   DWORD PTR ds:0x10067090
1001f469:	pop    edi
1001f46a:	pop    esi
1001f46b:	mov    al,bl
1001f46d:	pop    ebx
1001f46e:	mov    esp,ebp
1001f470:	pop    ebp
1001f471:	ret    
1001f472:	push   esi
1001f473:	xor    esi,esi
1001f475:	mov    eax,DWORD PTR [esp+0xc]
1001f479:	mov    ecx,DWORD PTR [esi+0x1008184c]
1001f47f:	call   0x100107af
1001f484:	test   eax,eax
1001f486:	jne    0x1001f495
1001f488:	add    esi,0x4
1001f48b:	cmp    esi,0x4
1001f48e:	jb     0x1001f475
1001f490:	inc    eax
1001f491:	pop    esi
1001f492:	ret    0x8
1001f495:	xor    eax,eax
1001f497:	jmp    0x1001f491
1001f499:	mov    ecx,DWORD PTR [esp+0x4]
1001f49d:	mov    edx,DWORD PTR [esp+0x8]
1001f4a1:	add    ecx,0xffffffe4
1001f4a4:	call   0x10020631
1001f4a9:	neg    eax
1001f4ab:	sbb    eax,eax
1001f4ad:	and    eax,0x7fffbffb
1001f4b2:	add    eax,0x80004005
1001f4b7:	ret    0x8
1001f4ba:	cmp    DWORD PTR [esp+0x8],0xffffea78
1001f4c2:	jne    0x1001f4d8
1001f4c4:	mov    eax,DWORD PTR [esp+0x1c]
1001f4c8:	mov    WORD PTR [eax],0x3
1001f4cd:	mov    DWORD PTR [eax+0x8],0x60009f80
1001f4d4:	xor    eax,eax
1001f4d6:	jmp    0x1001f4dd
1001f4d8:	mov    eax,0x80020003
1001f4dd:	ret    0x24
1001f4e0:	push   ebp
1001f4e1:	mov    ebp,esp
1001f4e3:	and    esp,0xfffffff8
1001f4e6:	push   0xffffffff
1001f4e8:	push   0x1006219d
1001f4ed:	mov    eax,fs:0x0
1001f4f3:	push   eax
1001f4f4:	sub    esp,0x20
1001f4f7:	push   ebx
1001f4f8:	push   esi
1001f4f9:	push   edi
1001f4fa:	mov    eax,ds:0x100801ac
1001f4ff:	xor    eax,esp
1001f501:	push   eax
1001f502:	lea    eax,[esp+0x30]
1001f506:	mov    fs:0x0,eax
1001f50c:	call   DWORD PTR ds:0x10080ffc
1001f512:	push   0x100717e8
1001f517:	push   0x8
1001f519:	mov    ecx,0x1006f324
1001f51e:	call   0x1000444a
1001f523:	push   eax
1001f524:	push   DWORD PTR [ebp+0xc]
1001f527:	call   0x10046853
1001f52c:	add    esp,0x10
1001f52f:	test   eax,eax
1001f531:	push   DWORD PTR [ebp+0xc]
1001f534:	jne    0x1001f761
1001f53a:	call   0x100208e4
1001f53f:	mov    edi,eax
1001f541:	xor    esi,esi
1001f543:	cmp    edi,esi
1001f545:	mov    DWORD PTR [esp+0x28],edi
1001f549:	je     0x1001f551
1001f54b:	mov    eax,DWORD PTR [edi]
1001f54d:	push   edi
1001f54e:	call   DWORD PTR [eax+0x4]
1001f551:	mov    DWORD PTR [esp+0x38],esi
1001f555:	mov    DWORD PTR [esp+0x20],esi
1001f559:	call   0x1001ef62
1001f55e:	push   ecx
1001f55f:	mov    eax,esp
1001f561:	mov    DWORD PTR [esp+0x28],esp
1001f565:	push   ecx
1001f566:	mov    DWORD PTR [eax],esi
1001f568:	mov    eax,esp
1001f56a:	mov    DWORD PTR [eax],esi
1001f56c:	lea    eax,[esp+0x28]
1001f570:	mov    DWORD PTR [esp+0x2c],esp
1001f574:	push   eax
1001f575:	call   0x100201dd
1001f57a:	cmp    eax,esi
1001f57c:	jne    0x1001f59c
1001f57e:	call   0x10002068
1001f583:	or     DWORD PTR [esp+0x38],0xffffffff
1001f588:	cmp    edi,esi
1001f58a:	je     0x1001f592
1001f58c:	mov    eax,DWORD PTR [edi]
1001f58e:	push   edi
1001f58f:	call   DWORD PTR [eax+0x8]
1001f592:	mov    eax,0x80004005
1001f597:	jmp    0x1001f779
1001f59c:	mov    DWORD PTR [esp+0x10],esi
1001f5a0:	push   0x1006c8a8
1001f5a5:	lea    eax,[esp+0x24]
1001f5a9:	push   eax
1001f5aa:	lea    ebx,[esp+0x18]
1001f5ae:	mov    BYTE PTR [esp+0x40],0x1
1001f5b3:	call   0x10020226
1001f5b8:	mov    esi,eax
1001f5ba:	xor    ebx,ebx
1001f5bc:	cmp    esi,ebx
1001f5be:	jge    0x1001f5ef
1001f5c0:	push   esi
1001f5c1:	call   0x10002068
1001f5c6:	mov    BYTE PTR [esp+0x3c],bl
1001f5ca:	mov    eax,DWORD PTR [esp+0x14]
1001f5ce:	cmp    eax,ebx
1001f5d0:	pop    ecx
1001f5d1:	je     0x1001f5d9
1001f5d3:	mov    ecx,DWORD PTR [eax]
1001f5d5:	push   eax
1001f5d6:	call   DWORD PTR [ecx+0x8]
1001f5d9:	or     DWORD PTR [esp+0x38],0xffffffff
1001f5de:	cmp    edi,ebx
1001f5e0:	je     0x1001f5e8
1001f5e2:	mov    eax,DWORD PTR [edi]
1001f5e4:	push   edi
1001f5e5:	call   DWORD PTR [eax+0x8]
1001f5e8:	mov    eax,esi
1001f5ea:	jmp    0x1001f779
1001f5ef:	mov    DWORD PTR [esp+0x18],ebx
1001f5f3:	mov    DWORD PTR [esp+0x14],ebx
1001f5f7:	lea    ecx,[esp+0x18]
1001f5fb:	push   ecx
1001f5fc:	push   0x1006c898
1001f601:	mov    BYTE PTR [esp+0x40],0x3
1001f606:	mov    eax,DWORD PTR [edi]
1001f608:	push   edi
1001f609:	call   DWORD PTR [eax]
1001f60b:	mov    esi,eax
1001f60d:	cmp    esi,ebx
1001f60f:	jge    0x1001f657
1001f611:	push   esi
1001f612:	call   0x10002068
1001f617:	pop    ecx
1001f618:	mov    BYTE PTR [esp+0x38],0x2
1001f61d:	mov    eax,DWORD PTR [esp+0x14]
1001f621:	cmp    eax,ebx
1001f623:	je     0x1001f62b
1001f625:	mov    ecx,DWORD PTR [eax]
1001f627:	push   eax
1001f628:	call   DWORD PTR [ecx+0x8]
1001f62b:	mov    BYTE PTR [esp+0x38],0x1
1001f630:	mov    eax,DWORD PTR [esp+0x18]
1001f634:	cmp    eax,ebx
1001f636:	je     0x1001f63e
1001f638:	mov    ecx,DWORD PTR [eax]
1001f63a:	push   eax
1001f63b:	call   DWORD PTR [ecx+0x8]
1001f63e:	mov    BYTE PTR [esp+0x38],bl
1001f642:	mov    eax,DWORD PTR [esp+0x10]
1001f646:	cmp    eax,ebx
1001f648:	je     0x1001f650
1001f64a:	mov    ecx,DWORD PTR [eax]
1001f64c:	push   eax
1001f64d:	call   DWORD PTR [ecx+0x8]
1001f650:	or     DWORD PTR [esp+0x38],0xffffffff
1001f655:	jmp    0x1001f5e2
1001f657:	mov    eax,DWORD PTR [edi]
1001f659:	lea    ecx,[esp+0x14]
1001f65d:	push   ecx
1001f65e:	push   0x1006c878
1001f663:	push   edi
1001f664:	call   DWORD PTR [eax]
1001f666:	mov    esi,eax
1001f668:	cmp    esi,ebx
1001f66a:	jl     0x1001f611
1001f66c:	mov    eax,DWORD PTR [esp+0x18]
1001f670:	push   DWORD PTR [esp+0x10]
1001f674:	mov    ecx,DWORD PTR [eax]
1001f676:	push   eax
1001f677:	call   DWORD PTR [ecx+0xc]
1001f67a:	mov    esi,eax
1001f67c:	cmp    esi,ebx
1001f67e:	jl     0x1001f611
1001f680:	mov    DWORD PTR [esp+0x1c],ebx
1001f684:	push   0x1006dca0
1001f689:	lea    eax,[esp+0x24]
1001f68d:	push   eax
1001f68e:	lea    ebx,[esp+0x24]
1001f692:	mov    BYTE PTR [esp+0x40],0x4
1001f697:	call   0x10020226
1001f69c:	mov    esi,eax
1001f69e:	xor    ebx,ebx
1001f6a0:	cmp    esi,ebx
1001f6a2:	jge    0x1001f6c7
1001f6a4:	push   esi
1001f6a5:	call   0x10002068
1001f6aa:	mov    BYTE PTR [esp+0x3c],0x3
1001f6af:	mov    eax,DWORD PTR [esp+0x20]
1001f6b3:	cmp    eax,ebx
1001f6b5:	pop    ecx
1001f6b6:	je     0x1001f618
1001f6bc:	mov    ecx,DWORD PTR [eax]
1001f6be:	push   eax
1001f6bf:	call   DWORD PTR [ecx+0x8]
1001f6c2:	jmp    0x1001f618
1001f6c7:	lea    eax,[esp+0x24]
1001f6cb:	push   eax
1001f6cc:	call   0x1002263d
1001f6d1:	mov    eax,DWORD PTR [esp+0x1c]
1001f6d5:	push   DWORD PTR [esp+0x24]
1001f6d9:	mov    ecx,DWORD PTR [eax]
1001f6db:	push   eax
1001f6dc:	call   DWORD PTR [ecx+0x8c]
1001f6e2:	mov    esi,eax
1001f6e4:	cmp    esi,ebx
1001f6e6:	jl     0x1001f6a4
1001f6e8:	mov    eax,DWORD PTR [esp+0x14]
1001f6ec:	mov    ecx,DWORD PTR [eax]
1001f6ee:	push   0xffffea78
1001f6f3:	push   eax
1001f6f4:	call   DWORD PTR [ecx+0x14]
1001f6f7:	mov    esi,eax
1001f6f9:	cmp    esi,ebx
1001f6fb:	jl     0x1001f6a4
1001f6fd:	push   DWORD PTR [esp+0x20]
1001f701:	call   DWORD PTR ds:0x10067318
1001f707:	mov    ecx,DWORD PTR [ebp+0x10]
1001f70a:	mov    eax,edi
1001f70c:	mov    DWORD PTR [ecx],eax
1001f70e:	mov    BYTE PTR [esp+0x38],0x3
1001f713:	mov    eax,DWORD PTR [esp+0x1c]
1001f717:	cmp    eax,ebx
1001f719:	mov    DWORD PTR [esp+0x28],ebx
1001f71d:	je     0x1001f725
1001f71f:	mov    ecx,DWORD PTR [eax]
1001f721:	push   eax
1001f722:	call   DWORD PTR [ecx+0x8]
1001f725:	mov    BYTE PTR [esp+0x38],0x2
1001f72a:	mov    eax,DWORD PTR [esp+0x14]
1001f72e:	cmp    eax,ebx
1001f730:	je     0x1001f738
1001f732:	mov    ecx,DWORD PTR [eax]
1001f734:	push   eax
1001f735:	call   DWORD PTR [ecx+0x8]
1001f738:	mov    BYTE PTR [esp+0x38],0x1
1001f73d:	mov    eax,DWORD PTR [esp+0x18]
1001f741:	cmp    eax,ebx
1001f743:	je     0x1001f74b
1001f745:	mov    ecx,DWORD PTR [eax]
1001f747:	push   eax
1001f748:	call   DWORD PTR [ecx+0x8]
1001f74b:	mov    BYTE PTR [esp+0x38],bl
1001f74f:	mov    eax,DWORD PTR [esp+0x10]
1001f753:	cmp    eax,ebx
1001f755:	je     0x1001f75d
1001f757:	mov    ecx,DWORD PTR [eax]
1001f759:	push   eax
1001f75a:	call   DWORD PTR [ecx+0x8]
1001f75d:	xor    eax,eax
1001f75f:	jmp    0x1001f779
1001f761:	call   0x100208e4
1001f766:	mov    ecx,DWORD PTR [ebp+0x10]
1001f769:	mov    DWORD PTR [ecx],eax
1001f76b:	neg    eax
1001f76d:	sbb    eax,eax
1001f76f:	and    eax,0x7fffbffb
1001f774:	add    eax,0x80004005
1001f779:	mov    ecx,DWORD PTR [esp+0x30]
1001f77d:	mov    DWORD PTR fs:0x0,ecx
1001f784:	pop    ecx
1001f785:	pop    edi
1001f786:	pop    esi
1001f787:	pop    ebx
1001f788:	mov    esp,ebp
1001f78a:	pop    ebp
1001f78b:	ret    0xc
1001f78e:	mov    edx,DWORD PTR [esp+0x4]
1001f792:	push   DWORD PTR [esp+0x8]
1001f796:	mov    ecx,DWORD PTR [esp+0x10]
1001f79a:	add    edx,0xffffffe4
1001f79d:	call   0x100207ca
1001f7a2:	neg    eax
1001f7a4:	sbb    eax,eax
1001f7a6:	and    eax,0x7fffbffb
1001f7ab:	add    eax,0x80004005
1001f7b0:	ret    0xc
1001f7b3:	push   ebp
1001f7b4:	mov    ebp,esp
1001f7b6:	mov    edx,DWORD PTR [ebp+0x8]
1001f7b9:	sub    esp,0x20
1001f7bc:	push   esi
1001f7bd:	xor    esi,esi
1001f7bf:	cmp    DWORD PTR [edx-0x10],esi
1001f7c2:	je     0x1001f7f7
1001f7c4:	push   edi
1001f7c5:	push   0x7
1001f7c7:	pop    ecx
1001f7c8:	mov    WORD PTR [ebp-0x20],si
1001f7cc:	xor    eax,eax
1001f7ce:	lea    edi,[ebp-0x1e]
1001f7d1:	rep stos DWORD PTR es:[edi],eax
1001f7d3:	stos   WORD PTR es:[edi],ax
1001f7d5:	mov    eax,DWORD PTR [edx-0x14]
1001f7d8:	mov    ecx,DWORD PTR [eax]
1001f7da:	lea    edx,[ebp-0x20]
1001f7dd:	push   edx
1001f7de:	push   esi
1001f7df:	push   0x42
1001f7e1:	push   esi
1001f7e2:	push   esi
1001f7e3:	push   esi
1001f7e4:	push   esi
1001f7e5:	push   esi
1001f7e6:	push   DWORD PTR [ebp+0xc]
1001f7e9:	push   eax
1001f7ea:	call   DWORD PTR [ecx+0x14]
1001f7ed:	test   eax,eax
1001f7ef:	pop    edi
1001f7f0:	jl     0x1001f7f7
1001f7f2:	xor    eax,eax
1001f7f4:	inc    eax
1001f7f5:	jmp    0x1001f7f9
1001f7f7:	xor    eax,eax
1001f7f9:	neg    eax
1001f7fb:	sbb    eax,eax
1001f7fd:	and    eax,0x7fffbffb
1001f802:	add    eax,0x80004005
1001f807:	pop    esi
1001f808:	leave  
1001f809:	ret    0x8
1001f80c:	push   ebp
1001f80d:	mov    ebp,esp
1001f80f:	mov    eax,DWORD PTR [ebp+0x8]
1001f812:	mov    edx,DWORD PTR [eax-0x14]
1001f815:	sub    esp,0x20
1001f818:	push   esi
1001f819:	xor    esi,esi
1001f81b:	cmp    edx,esi
1001f81d:	je     0x1001f86d
1001f81f:	push   edi
1001f820:	push   0x7
1001f822:	pop    ecx
1001f823:	mov    WORD PTR [ebp-0x20],si
1001f827:	xor    eax,eax
1001f829:	lea    edi,[ebp-0x1e]
1001f82c:	rep stos DWORD PTR es:[edi],eax
1001f82e:	lea    ecx,[ebp-0x20]
1001f831:	push   ecx
1001f832:	lea    ecx,[ebp+0x8]
1001f835:	push   ecx
1001f836:	push   esi
1001f837:	push   esi
1001f838:	push   esi
1001f839:	push   0x1006e2d8
1001f83e:	push   DWORD PTR [ebp+0x18]
1001f841:	stos   WORD PTR es:[edi],ax
1001f843:	push   DWORD PTR [ebp+0x14]
1001f846:	mov    DWORD PTR [ebp+0x8],esi
1001f849:	push   DWORD PTR [ebp+0x14]
1001f84c:	mov    eax,DWORD PTR [edx]
1001f84e:	push   DWORD PTR [ebp+0x10]
1001f851:	push   DWORD PTR [ebp+0xc]
1001f854:	push   edx
1001f855:	call   DWORD PTR [eax+0x10]
1001f858:	push   DWORD PTR [ebp+0x8]
1001f85b:	mov    edi,eax
1001f85d:	call   DWORD PTR ds:0x100672b4
1001f863:	cmp    edi,esi
1001f865:	pop    edi
1001f866:	jl     0x1001f86d
1001f868:	xor    eax,eax
1001f86a:	inc    eax
1001f86b:	jmp    0x1001f86f
1001f86d:	xor    eax,eax
1001f86f:	neg    eax
1001f871:	sbb    eax,eax
1001f873:	and    eax,0x7fffbffb
1001f878:	add    eax,0x80004005
1001f87d:	pop    esi
1001f87e:	leave  
1001f87f:	ret    0x14
1001f882:	call   DWORD PTR ds:0x10080ffc
1001f888:	push   0x0
1001f88a:	push   0x1006e2d8
1001f88f:	push   DWORD PTR [esp+0x10]
1001f893:	push   0x0
1001f895:	call   DWORD PTR ds:0x100672e8
1001f89b:	xor    eax,eax
1001f89d:	ret    0x8
1001f8a0:	push   ebp
1001f8a1:	mov    ebp,esp
1001f8a3:	push   DWORD PTR [ebp+0x18]
1001f8a6:	mov    ecx,DWORD PTR [ebp+0x8]
1001f8a9:	push   DWORD PTR [ebp+0x14]
1001f8ac:	add    ecx,0xffffffe4
1001f8af:	push   DWORD PTR [ebp+0x10]
1001f8b2:	push   DWORD PTR [ebp+0xc]
1001f8b5:	call   0x10020942
1001f8ba:	pop    ebp
1001f8bb:	ret    0x14
1001f8be:	push   ebp
1001f8bf:	sub    esp,0x8c
1001f8c5:	lea    ebp,[esp-0x4]
1001f8c9:	mov    eax,ds:0x100801ac
1001f8ce:	xor    eax,ebp
1001f8d0:	mov    DWORD PTR [ebp+0x8c],eax
1001f8d6:	push   0x108
1001f8db:	mov    eax,0x10063083
1001f8e0:	call   0x10059e28
1001f8e5:	mov    eax,DWORD PTR [ebp+0xa0]
1001f8eb:	mov    esi,DWORD PTR [ebp+0x9c]
1001f8f1:	mov    DWORD PTR [ebp-0x1c],eax
1001f8f4:	mov    eax,DWORD PTR [ebp+0xa4]
1001f8fa:	mov    DWORD PTR [ebp-0x24],eax
1001f8fd:	mov    eax,DWORD PTR [ebp+0xa8]
1001f903:	mov    DWORD PTR [ebp-0x2c],eax
1001f906:	mov    eax,DWORD PTR [ebp+0xc0]
1001f90c:	xor    edi,edi
1001f90e:	mov    DWORD PTR [ebp-0x20],eax
1001f911:	lea    eax,[ebp-0x18]
1001f914:	push   edi
1001f915:	push   eax
1001f916:	mov    DWORD PTR [ebp-0x4],edi
1001f919:	call   0x10002818
1001f91e:	pop    ecx
1001f91f:	pop    ecx
1001f920:	mov    ecx,DWORD PTR [eax]
1001f922:	mov    DWORD PTR [eax],edi
1001f924:	mov    DWORD PTR [ebp-0x34],ecx
1001f927:	lea    eax,[ebp-0x18]
1001f92a:	mov    BYTE PTR [ebp-0x4],0x1
1001f92e:	call   0x1000428d
1001f933:	call   DWORD PTR ds:0x10080ffc
1001f939:	cmp    esi,edi
1001f93b:	mov    ebx,DWORD PTR ds:0x100670ac
1001f941:	mov    DWORD PTR [ebp-0x14],eax
1001f944:	je     0x1001f951
1001f946:	push   esi
1001f947:	call   ebx
1001f949:	inc    eax
1001f94a:	cmp    eax,0x3fffffff
1001f94f:	jle    0x1001f955
1001f951:	xor    eax,eax
1001f953:	jmp    0x1001f970
1001f955:	lea    edi,[eax+eax*1]
1001f958:	mov    eax,edi
1001f95a:	call   0x1004b9b0
1001f95f:	mov    eax,esp
1001f961:	mov    DWORD PTR [ebp-0x10],esp
1001f964:	push   DWORD PTR [ebp-0x14]
1001f967:	push   edi
1001f968:	push   esi
1001f969:	mov    esi,eax
1001f96b:	call   0x10002425
1001f970:	push   eax
1001f971:	lea    ecx,[ebp+0x70]
1001f974:	call   0x100011a7
1001f979:	cmp    DWORD PTR [ebp-0x1c],0x0
1001f97d:	mov    BYTE PTR [ebp-0x4],0x2
1001f981:	je     0x1001f990
1001f983:	push   DWORD PTR [ebp-0x1c]
1001f986:	call   ebx
1001f988:	inc    eax
1001f989:	cmp    eax,0x3fffffff
1001f98e:	jle    0x1001f994
1001f990:	xor    eax,eax
1001f992:	jmp    0x1001f9af
1001f994:	lea    edi,[eax+eax*1]
1001f997:	mov    eax,edi
1001f999:	call   0x1004b9b0
1001f99e:	mov    DWORD PTR [ebp-0x10],esp
1001f9a1:	mov    esi,esp
1001f9a3:	push   DWORD PTR [ebp-0x14]
1001f9a6:	push   edi
1001f9a7:	push   DWORD PTR [ebp-0x1c]
1001f9aa:	call   0x10002425
1001f9af:	push   eax
1001f9b0:	lea    ecx,[ebp+0x1c]
1001f9b3:	call   0x100011a7
1001f9b8:	mov    BYTE PTR [ebp-0x4],0x3
1001f9bc:	cmp    DWORD PTR [ebp-0x24],0x0
1001f9c0:	je     0x1001f9cf
1001f9c2:	push   DWORD PTR [ebp-0x24]
1001f9c5:	call   ebx
1001f9c7:	inc    eax
1001f9c8:	cmp    eax,0x3fffffff
1001f9cd:	jle    0x1001f9d3
1001f9cf:	xor    eax,eax
1001f9d1:	jmp    0x1001f9ee
1001f9d3:	lea    edi,[eax+eax*1]
1001f9d6:	mov    eax,edi
1001f9d8:	call   0x1004b9b0
1001f9dd:	mov    DWORD PTR [ebp-0x10],esp
1001f9e0:	mov    esi,esp
1001f9e2:	push   DWORD PTR [ebp-0x14]
1001f9e5:	push   edi
1001f9e6:	push   DWORD PTR [ebp-0x24]
1001f9e9:	call   0x10002425
1001f9ee:	push   eax
1001f9ef:	lea    ecx,[ebp+0x0]
1001f9f2:	call   0x100011a7
1001f9f7:	mov    BYTE PTR [ebp-0x4],0x4
1001f9fb:	cmp    DWORD PTR [ebp-0x2c],0x0
1001f9ff:	je     0x1001fa0e
1001fa01:	push   DWORD PTR [ebp-0x2c]
1001fa04:	call   ebx
1001fa06:	inc    eax
1001fa07:	cmp    eax,0x3fffffff
1001fa0c:	jle    0x1001fa12
1001fa0e:	xor    eax,eax
1001fa10:	jmp    0x1001fa2d
1001fa12:	lea    edi,[eax+eax*1]
1001fa15:	mov    eax,edi
1001fa17:	call   0x1004b9b0
1001fa1c:	mov    DWORD PTR [ebp-0x10],esp
1001fa1f:	mov    esi,esp
1001fa21:	push   DWORD PTR [ebp-0x14]
1001fa24:	push   edi
1001fa25:	push   DWORD PTR [ebp-0x2c]
1001fa28:	call   0x10002425
1001fa2d:	push   eax
1001fa2e:	lea    ecx,[ebp+0x38]
1001fa31:	call   0x100011a7
1001fa36:	mov    BYTE PTR [ebp-0x4],0x5
1001fa3a:	push   DWORD PTR [ebp-0x20]
1001fa3d:	lea    eax,[ebp-0x20]
1001fa40:	push   eax
1001fa41:	call   0x10002352
1001fa46:	mov    ecx,eax
1001fa48:	lea    edi,[ebp+0x54]
1001fa4b:	mov    BYTE PTR [ebp-0x4],0x6
1001fa4f:	call   0x100303e0
1001fa54:	mov    BYTE PTR [ebp-0x4],0x8
1001fa58:	mov    eax,DWORD PTR [ebp-0x20]
1001fa5b:	add    eax,0xfffffff0
1001fa5e:	call   0x10002069
1001fa63:	fld    QWORD PTR [ebp+0xb0]
1001fa69:	call   0x1005f986
1001fa6e:	push   0x0
1001fa70:	mov    esi,0x2710
1001fa75:	push   esi
1001fa76:	push   edx
1001fa77:	push   eax
1001fa78:	call   0x1004f990
1001fa7d:	fld    QWORD PTR [ebp+0xb8]
1001fa83:	mov    DWORD PTR [ebp-0x28],eax
1001fa86:	mov    DWORD PTR [ebp-0x24],edx
1001fa89:	call   0x1005f986
1001fa8e:	push   0x0
1001fa90:	push   esi
1001fa91:	push   edx
1001fa92:	push   eax
1001fa93:	call   0x1004f990
1001fa98:	sub    esp,0x1c
1001fa9b:	mov    DWORD PTR [ebp-0x30],eax
1001fa9e:	lea    eax,[ebp+0x54]
1001faa1:	mov    ecx,esp
1001faa3:	mov    DWORD PTR [ebp-0x18],esp
1001faa6:	push   eax
1001faa7:	mov    DWORD PTR [ebp-0x2c],edx
1001faaa:	lea    edi,[ebp-0x30]
1001faad:	lea    ebx,[ebp-0x28]
1001fab0:	call   0x100011c9
1001fab5:	push   ecx
1001fab6:	mov    ecx,DWORD PTR [ebp+0xac]
1001fabc:	mov    eax,esp
1001fabe:	mov    DWORD PTR [eax],ecx
1001fac0:	mov    DWORD PTR [ebp-0x18],esp
1001fac3:	lea    eax,[ebp+0x38]
1001fac6:	push   eax
1001fac7:	lea    eax,[ebp+0x0]
1001faca:	push   eax
1001facb:	lea    eax,[ebp+0x70]
1001face:	push   eax
1001facf:	lea    ecx,[ebp+0x1c]
1001fad2:	lea    esi,[ebp-0x114]
1001fad8:	call   0x100026ef
1001fadd:	mov    edi,eax
1001fadf:	lea    eax,[ebp+0x70]
1001fae2:	push   eax
1001fae3:	lea    esi,[ebp-0x50]
1001fae6:	mov    BYTE PTR [ebp-0x4],0x9
1001faea:	call   0x100300d0
1001faef:	pop    ecx
1001faf0:	lea    ecx,[ebp-0x6c]
1001faf3:	push   ecx
1001faf4:	mov    ecx,eax
1001faf6:	mov    BYTE PTR [ebp-0x4],0xa
1001fafa:	call   0x1002f810
1001faff:	pop    ecx
1001fb00:	mov    BYTE PTR [ebp-0x4],0xb
1001fb04:	push   edi
1001fb05:	mov    edx,eax
1001fb07:	mov    ecx,0x10082ec4
1001fb0c:	call   0x10013298
1001fb11:	xor    ebx,ebx
1001fb13:	xor    edi,edi
1001fb15:	push   ebx
1001fb16:	inc    edi
1001fb17:	push   edi
1001fb18:	lea    ecx,[ebp-0x6c]
1001fb1b:	call   0x100012f0
1001fb20:	push   ebx
1001fb21:	push   edi
1001fb22:	mov    ecx,esi
1001fb24:	call   0x100012f0
1001fb29:	lea    esi,[ebp-0x114]
1001fb2f:	call   0x10003432
1001fb34:	push   ebx
1001fb35:	push   edi
1001fb36:	lea    ecx,[ebp+0x54]
1001fb39:	call   0x100012f0
1001fb3e:	push   ebx
1001fb3f:	push   edi
1001fb40:	lea    ecx,[ebp+0x38]
1001fb43:	call   0x100012f0
1001fb48:	push   ebx
1001fb49:	push   edi
1001fb4a:	lea    ecx,[ebp+0x0]
1001fb4d:	call   0x100012f0
1001fb52:	push   ebx
1001fb53:	push   edi
1001fb54:	lea    ecx,[ebp+0x1c]
1001fb57:	call   0x100012f0
1001fb5c:	push   ebx
1001fb5d:	push   edi
1001fb5e:	lea    ecx,[ebp+0x70]
1001fb61:	call   0x100012f0
1001fb66:	lea    eax,[ebp-0x34]
1001fb69:	call   0x1000428d
1001fb6e:	xor    eax,eax
1001fb70:	lea    esp,[ebp-0x124]
1001fb76:	mov    ecx,DWORD PTR [ebp-0xc]
1001fb79:	mov    DWORD PTR fs:0x0,ecx
1001fb80:	pop    ecx
1001fb81:	pop    edi
1001fb82:	pop    esi
1001fb83:	pop    ebx
1001fb84:	mov    ecx,DWORD PTR [ebp+0x8c]
1001fb8a:	xor    ecx,ebp
1001fb8c:	call   0x10043615
1001fb91:	add    ebp,0x90
1001fb97:	leave  
1001fb98:	ret    0x2c
1001fb9b:	mov    eax,0x1001fba1
1001fba0:	ret    
1001fba1:	jmp    0x1001fb6e
1001fba3:	push   0x4
1001fba5:	call   0x10038b80
1001fbaa:	pop    ecx
1001fbab:	mov    eax,0x1001fb6e
1001fbb0:	ret    
1001fbb1:	push   0x48
1001fbb3:	mov    eax,0x10062150
1001fbb8:	call   0x10059e94
1001fbbd:	mov    eax,DWORD PTR [ebp+0x10]
1001fbc0:	mov    esi,DWORD PTR [ebp+0xc]
1001fbc3:	and    DWORD PTR [ebp-0x4],0x0
1001fbc7:	mov    DWORD PTR [ebp-0x50],eax
1001fbca:	push   0x1
1001fbcc:	lea    eax,[ebp-0x54]
1001fbcf:	push   eax
1001fbd0:	call   0x10034910
1001fbd5:	mov    BYTE PTR [ebp-0x4],0x1
1001fbd9:	call   DWORD PTR ds:0x10080ffc
1001fbdf:	test   esi,esi
1001fbe1:	mov    ebx,eax
1001fbe3:	je     0x1001fbf4
1001fbe5:	push   esi
1001fbe6:	call   DWORD PTR ds:0x100670ac
1001fbec:	inc    eax
1001fbed:	cmp    eax,0x3fffffff
1001fbf2:	jle    0x1001fbf8
1001fbf4:	xor    eax,eax
1001fbf6:	jmp    0x1001fc11
1001fbf8:	lea    edi,[eax+eax*1]
1001fbfb:	mov    eax,edi
1001fbfd:	call   0x1004b9b0
1001fc02:	mov    eax,esp
1001fc04:	mov    DWORD PTR [ebp-0x10],esp
1001fc07:	push   ebx
1001fc08:	push   edi
1001fc09:	push   esi
1001fc0a:	mov    esi,eax
1001fc0c:	call   0x10002425
1001fc11:	push   eax
1001fc12:	lea    ecx,[ebp-0x4c]
1001fc15:	call   0x100011a7
1001fc1a:	cmp    DWORD PTR [ebp-0x50],0x0
1001fc1e:	mov    BYTE PTR [ebp-0x4],0x2
1001fc22:	je     0x1001fc35
1001fc24:	push   DWORD PTR [ebp-0x50]
1001fc27:	call   DWORD PTR ds:0x100670ac
1001fc2d:	inc    eax
1001fc2e:	cmp    eax,0x3fffffff
1001fc33:	jle    0x1001fc39
1001fc35:	xor    eax,eax
1001fc37:	jmp    0x1001fc52
1001fc39:	lea    edi,[eax+eax*1]
1001fc3c:	mov    eax,edi
1001fc3e:	call   0x1004b9b0
1001fc43:	mov    DWORD PTR [ebp-0x10],esp
1001fc46:	mov    esi,esp
1001fc48:	push   ebx
1001fc49:	push   edi
1001fc4a:	push   DWORD PTR [ebp-0x50]
1001fc4d:	call   0x10002425
1001fc52:	push   eax
1001fc53:	lea    ecx,[ebp-0x30]
1001fc56:	call   0x100011a7
1001fc5b:	lea    eax,[ebp-0x30]
1001fc5e:	push   eax
1001fc5f:	lea    eax,[ebp-0x54]
1001fc62:	push   eax
1001fc63:	lea    ecx,[ebp-0x4c]
1001fc66:	mov    BYTE PTR [ebp-0x4],0x3
1001fc6a:	call   0x10035430
1001fc6f:	push   0x0
1001fc71:	push   0x1
1001fc73:	lea    ecx,[ebp-0x30]
1001fc76:	call   0x100012f0
1001fc7b:	push   0x0
1001fc7d:	push   0x1
1001fc7f:	lea    ecx,[ebp-0x4c]
1001fc82:	call   0x100012f0
1001fc87:	push   DWORD PTR [ebp-0x54]
1001fc8a:	call   DWORD PTR ds:0x10067078
1001fc90:	xor    eax,eax
1001fc92:	jmp    0x1001fc9f
1001fc94:	mov    eax,0x1001fc9a
1001fc99:	ret    
1001fc9a:	mov    eax,0x80004005
1001fc9f:	lea    esp,[ebp-0x64]
1001fca2:	call   0x10059ef0
1001fca7:	ret    0xc
1001fcaa:	push   0x48
1001fcac:	mov    eax,0x10062113
1001fcb1:	call   0x10059e94
1001fcb6:	and    DWORD PTR [ebp-0x4],0x0
1001fcba:	push   0x1
1001fcbc:	lea    eax,[ebp-0x18]
1001fcbf:	push   eax
1001fcc0:	call   0x10034910
1001fcc5:	mov    BYTE PTR [ebp-0x4],0x1
1001fcc9:	call   DWORD PTR ds:0x10080ffc
1001fccf:	cmp    DWORD PTR [ebp+0xc],0x0
1001fcd3:	mov    ebx,eax
1001fcd5:	je     0x1001fce8
1001fcd7:	push   DWORD PTR [ebp+0xc]
1001fcda:	call   DWORD PTR ds:0x100670ac
1001fce0:	inc    eax
1001fce1:	cmp    eax,0x3fffffff
1001fce6:	jle    0x1001fcec
1001fce8:	xor    eax,eax
1001fcea:	jmp    0x1001fd05
1001fcec:	lea    edi,[eax+eax*1]
1001fcef:	mov    eax,edi
1001fcf1:	call   0x1004b9b0
1001fcf6:	mov    DWORD PTR [ebp-0x10],esp
1001fcf9:	mov    esi,esp
1001fcfb:	push   ebx
1001fcfc:	push   edi
1001fcfd:	push   DWORD PTR [ebp+0xc]
1001fd00:	call   0x10002425
1001fd05:	push   eax
1001fd06:	lea    ecx,[ebp-0x38]
1001fd09:	call   0x100011a7
1001fd0e:	lea    eax,[ebp-0x38]
1001fd11:	push   eax
1001fd12:	lea    eax,[ebp-0x54]
1001fd15:	push   eax
1001fd16:	lea    eax,[ebp-0x18]
1001fd19:	push   eax
1001fd1a:	mov    BYTE PTR [ebp-0x4],0x2
1001fd1e:	call   0x100355c0
1001fd23:	mov    BYTE PTR [ebp-0x4],0x3
1001fd27:	cmp    DWORD PTR [eax+0x18],0x10
1001fd2b:	jb     0x1001fd32
1001fd2d:	mov    eax,DWORD PTR [eax+0x4]
1001fd30:	jmp    0x1001fd35
1001fd32:	add    eax,0x4
1001fd35:	push   eax
1001fd36:	lea    edi,[ebp-0x1c]
1001fd39:	call   0x10002458
1001fd3e:	mov    BYTE PTR [ebp-0x4],0x4
1001fd42:	call   0x100122f4
1001fd47:	mov    ecx,DWORD PTR [ebp+0x10]
1001fd4a:	mov    DWORD PTR [ecx],eax
1001fd4c:	call   0x100025b3
1001fd51:	push   0x0
1001fd53:	push   0x1
1001fd55:	lea    ecx,[ebp-0x54]
1001fd58:	call   0x100012f0
1001fd5d:	push   0x0
1001fd5f:	push   0x1
1001fd61:	lea    ecx,[ebp-0x38]
1001fd64:	call   0x100012f0
1001fd69:	push   DWORD PTR [ebp-0x18]
1001fd6c:	call   DWORD PTR ds:0x10067078
1001fd72:	xor    eax,eax
1001fd74:	jmp    0x1001fd81
1001fd76:	mov    eax,0x1001fd7c
1001fd7b:	ret    
1001fd7c:	mov    eax,0x80004005
1001fd81:	lea    esp,[ebp-0x64]
1001fd84:	call   0x10059ef0
1001fd89:	ret    0xc
1001fd8c:	push   ebp
1001fd8d:	sub    esp,0xcc
1001fd93:	lea    ebp,[esp-0x4]
1001fd97:	mov    eax,ds:0x100801ac
1001fd9c:	xor    eax,ebp
1001fd9e:	mov    DWORD PTR [ebp+0xcc],eax
1001fda4:	push   0x40
1001fda6:	mov    eax,0x100653d5
1001fdab:	call   0x10059e28
1001fdb0:	mov    eax,DWORD PTR [ebp+0xe4]
1001fdb6:	mov    esi,DWORD PTR [ebp+0xe0]
1001fdbc:	mov    DWORD PTR [ebp-0x14],eax
1001fdbf:	mov    eax,DWORD PTR [ebp+0xec]
1001fdc5:	mov    DWORD PTR [ebp-0x20],eax
1001fdc8:	call   DWORD PTR ds:0x10080ffc
1001fdce:	xor    ebx,ebx
1001fdd0:	cmp    DWORD PTR [ebp+0xe8],ebx
1001fdd6:	mov    DWORD PTR [ebp-0x1c],eax
1001fdd9:	jne    0x1001fde5
1001fddb:	mov    DWORD PTR [ebp+0xe8],0x7d0
1001fde5:	cmp    WORD PTR [ebp+0xdc],0xffff
1001fded:	jne    0x1001ff4a
1001fdf3:	cmp    esi,ebx
1001fdf5:	mov    DWORD PTR [ebp-0x4],ebx
1001fdf8:	mov    DWORD PTR [ebp-0x14],ebx
1001fdfb:	je     0x1001fe0c
1001fdfd:	push   esi
1001fdfe:	call   DWORD PTR ds:0x100670ac
1001fe04:	inc    eax
1001fe05:	cmp    eax,0x3fffffff
1001fe0a:	jle    0x1001fe10
1001fe0c:	xor    eax,eax
1001fe0e:	jmp    0x1001fe2b
1001fe10:	lea    edi,[eax+eax*1]
1001fe13:	mov    eax,edi
1001fe15:	call   0x1004b9b0
1001fe1a:	mov    eax,esp
1001fe1c:	mov    DWORD PTR [ebp-0x10],esp
1001fe1f:	push   DWORD PTR [ebp-0x1c]
1001fe22:	push   edi
1001fe23:	push   esi
1001fe24:	mov    esi,eax
1001fe26:	call   0x10002425
1001fe2b:	push   eax
1001fe2c:	lea    ecx,[ebp+0xb0]
1001fe32:	call   0x100011a7
1001fe37:	lea    ecx,[ebp-0x4c]
1001fe3a:	mov    BYTE PTR [ebp-0x4],0x1
1001fe3e:	call   0x100186d5
1001fe43:	push   DWORD PTR [ebp+0xe8]
1001fe49:	lea    ecx,[ebp-0x14]
1001fe4c:	push   ecx
1001fe4d:	lea    ecx,[ebp+0xb0]
1001fe53:	push   ecx
1001fe54:	push   eax
1001fe55:	lea    esi,[ebp-0x18]
1001fe58:	mov    BYTE PTR [ebp-0x4],0x2
1001fe5c:	call   0x10030ac0
1001fe61:	mov    ecx,DWORD PTR [eax]
1001fe63:	mov    ebx,ecx
1001fe65:	xor    esi,esi
1001fe67:	add    esp,0x10
1001fe6a:	mov    DWORD PTR [eax],esi
1001fe6c:	mov    DWORD PTR [ebp-0x24],ebx
1001fe6f:	push   DWORD PTR [ebp-0x18]
1001fe72:	call   0x10042fe2
1001fe77:	pop    ecx
1001fe78:	push   esi
1001fe79:	push   0x1
1001fe7b:	lea    ecx,[ebp-0x4c]
1001fe7e:	call   0x100012f0
1001fe83:	push   esi
1001fe84:	push   0x1
1001fe86:	lea    ecx,[ebp+0xb0]
1001fe8c:	mov    BYTE PTR [ebp-0x4],0x5
1001fe90:	call   0x100012f0
1001fe95:	cmp    ebx,esi
1001fe97:	jne    0x1001fecd
1001fe99:	push   esi
1001fe9a:	call   0x10042fe2
1001fe9f:	pop    ecx
1001fea0:	mov    eax,0x80004005
1001fea5:	lea    esp,[ebp-0x5c]
1001fea8:	mov    ecx,DWORD PTR [ebp-0xc]
1001feab:	mov    DWORD PTR fs:0x0,ecx
1001feb2:	pop    ecx
1001feb3:	pop    edi
1001feb4:	pop    esi
1001feb5:	pop    ebx
1001feb6:	mov    ecx,DWORD PTR [ebp+0xcc]
1001febc:	xor    ecx,ebp
1001febe:	call   0x10043615
1001fec3:	add    ebp,0xd0
1001fec9:	leave  
1001feca:	ret    0x18
1001fecd:	mov    eax,DWORD PTR [ebp-0x14]
1001fed0:	mov    DWORD PTR [ebp-0x2c],eax
1001fed3:	lea    eax,[ebp-0x1c]
1001fed6:	push   eax
1001fed7:	lea    ecx,[ebp-0x30]
1001feda:	mov    DWORD PTR [ebp-0x30],esi
1001fedd:	mov    DWORD PTR [ebp-0x28],ebx
1001fee0:	call   0x10037340
1001fee5:	mov    esi,eax
1001fee7:	mov    BYTE PTR [ebp-0x4],0x6
1001feeb:	call   0x100041e6
1001fef0:	push   eax
1001fef1:	lea    edi,[ebp-0x14]
1001fef4:	call   0x100024b0
1001fef9:	mov    BYTE PTR [ebp-0x4],0x7
1001fefd:	call   0x100122f4
1001ff02:	mov    ecx,DWORD PTR [ebp-0x20]
1001ff05:	mov    DWORD PTR [ecx],eax
1001ff07:	call   0x100025b3
1001ff0c:	mov    eax,DWORD PTR [ebp-0x1c]
1001ff0f:	add    eax,0xfffffff0
1001ff12:	call   0x10002069
1001ff17:	push   ebx
1001ff18:	call   0x10042fe2
1001ff1d:	pop    ecx
1001ff1e:	xor    eax,eax
1001ff20:	jmp    0x1001fea5
1001ff22:	mov    eax,0x1001ff28
1001ff27:	ret    
1001ff28:	and    DWORD PTR [ebp-0x14],0x0
1001ff2c:	lea    eax,[ebp-0x14]
1001ff2f:	mov    DWORD PTR [ebp-0x4],0x9
1001ff36:	call   0x100122f4
1001ff3b:	mov    ecx,DWORD PTR [ebp-0x20]
1001ff3e:	lea    edi,[ebp-0x14]
1001ff41:	mov    DWORD PTR [ecx],eax
1001ff43:	call   0x100025b3
1001ff48:	jmp    0x1001ff1e
1001ff4a:	lea    edi,[ebp+0x0]
1001ff4d:	call   0x1000bfdb
1001ff52:	cmp    esi,ebx
1001ff54:	mov    DWORD PTR [ebp-0x4],0xa
1001ff5b:	je     0x1001ff6c
1001ff5d:	push   esi
1001ff5e:	call   DWORD PTR ds:0x100670ac
1001ff64:	inc    eax
1001ff65:	cmp    eax,0x3fffffff
1001ff6a:	jle    0x1001ff70
1001ff6c:	xor    eax,eax
1001ff6e:	jmp    0x1001ff8b
1001ff70:	lea    edi,[eax+eax*1]
1001ff73:	mov    eax,edi
1001ff75:	call   0x1004b9b0
1001ff7a:	mov    eax,esp
1001ff7c:	mov    DWORD PTR [ebp-0x10],esp
1001ff7f:	push   DWORD PTR [ebp-0x1c]
1001ff82:	push   edi
1001ff83:	push   esi
1001ff84:	mov    esi,eax
1001ff86:	call   0x10002425
1001ff8b:	push   eax
1001ff8c:	lea    ecx,[ebp+0xb0]
1001ff92:	call   0x100011a7
1001ff97:	lea    eax,[ebp+0x0]
1001ff9a:	push   eax
1001ff9b:	lea    ecx,[ebp+0xb0]
1001ffa1:	mov    BYTE PTR [ebp-0x4],0xb
1001ffa5:	call   0x10032750
1001ffaa:	mov    bl,al
1001ffac:	neg    bl
1001ffae:	pop    ecx
1001ffaf:	sbb    bl,bl
1001ffb1:	xor    edi,edi
1001ffb3:	push   edi
1001ffb4:	push   0x1
1001ffb6:	lea    ecx,[ebp+0xb0]
1001ffbc:	inc    bl
1001ffbe:	mov    BYTE PTR [ebp-0x4],0xa
1001ffc2:	call   0x100012f0
1001ffc7:	test   bl,bl
1001ffc9:	je     0x1001ffdf
1001ffcb:	mov    edi,0x80004005
1001ffd0:	lea    esi,[ebp+0x0]
1001ffd3:	call   0x1000c008
1001ffd8:	mov    eax,edi
1001ffda:	jmp    0x1001fea5
1001ffdf:	cmp    DWORD PTR [ebp-0x14],edi
1001ffe2:	mov    DWORD PTR [ebp-0x18],edi
1001ffe5:	je     0x1001fff8
1001ffe7:	push   DWORD PTR [ebp-0x14]
1001ffea:	call   DWORD PTR ds:0x100670ac
1001fff0:	inc    eax
1001fff1:	cmp    eax,0x3fffffff
1001fff6:	jle    0x1001fffc
1001fff8:	xor    eax,eax
1001fffa:	jmp    0x10020017
1001fffc:	lea    ebx,[eax+eax*1]
1001ffff:	mov    eax,ebx
10020001:	call   0x1004b9b0
10020006:	mov    DWORD PTR [ebp-0x10],esp
10020009:	mov    esi,esp
1002000b:	push   DWORD PTR [ebp-0x1c]
1002000e:	push   ebx
1002000f:	push   DWORD PTR [ebp-0x14]
10020012:	call   0x10002425
10020017:	push   eax
10020018:	lea    ecx,[ebp+0x94]
1002001e:	call   0x100011a7
10020023:	push   DWORD PTR [ebp+0xe8]
10020029:	lea    eax,[ebp-0x18]
1002002c:	push   eax
1002002d:	push   edi
1002002e:	push   edi
1002002f:	lea    eax,[ebp+0x94]
10020035:	push   eax
10020036:	lea    eax,[ebp+0x5c]
10020039:	push   eax
1002003a:	mov    BYTE PTR [ebp-0x4],0xc
1002003e:	push   DWORD PTR [ebp+0x20]
10020041:	lea    eax,[ebp+0x4]
10020044:	push   eax
10020045:	lea    eax,[ebp-0x14]
10020048:	push   eax
10020049:	call   0x100322a0
1002004e:	mov    ecx,DWORD PTR [eax]
10020050:	mov    ebx,ecx
10020052:	mov    DWORD PTR [eax],edi
10020054:	mov    DWORD PTR [ebp-0x24],ebx
10020057:	mov    BYTE PTR [ebp-0x4],0xd
1002005b:	push   DWORD PTR [ebp-0x14]
1002005e:	call   0x10042fe2
10020063:	add    esp,0x28
10020066:	cmp    ebx,edi
10020068:	je     0x100200d8
1002006a:	push   DWORD PTR [ebp-0x18]
1002006d:	lea    esi,[ebp+0xb0]
10020073:	push   ebx
10020074:	call   0x10004102
10020079:	mov    BYTE PTR [ebp-0x4],0xe
1002007d:	cmp    DWORD PTR [ebp+0xc8],0x10
10020084:	mov    eax,DWORD PTR [ebp+0xb4]
1002008a:	jae    0x10020092
1002008c:	lea    eax,[ebp+0xb4]
10020092:	push   eax
10020093:	lea    edi,[ebp-0x18]
10020096:	call   0x10002458
1002009b:	mov    BYTE PTR [ebp-0x4],0xf
1002009f:	call   0x100122f4
100200a4:	mov    ecx,DWORD PTR [ebp-0x20]
100200a7:	mov    DWORD PTR [ecx],eax
100200a9:	call   0x100025b3
100200ae:	xor    edi,edi
100200b0:	push   edi
100200b1:	push   0x1
100200b3:	lea    ecx,[ebp+0xb0]
100200b9:	call   0x100012f0
100200be:	push   ebx
100200bf:	call   0x10042fe2
100200c4:	pop    ecx
100200c5:	push   edi
100200c6:	push   0x1
100200c8:	lea    ecx,[ebp+0x94]
100200ce:	call   0x100012f0
100200d3:	jmp    0x1001ffd0
100200d8:	mov    DWORD PTR [ebp-0x18],edi
100200db:	lea    eax,[ebp-0x18]
100200de:	mov    BYTE PTR [ebp-0x4],0x10
100200e2:	call   0x100122f4
100200e7:	mov    ecx,DWORD PTR [ebp-0x20]
100200ea:	lea    edi,[ebp-0x18]
100200ed:	mov    DWORD PTR [ecx],eax
100200ef:	call   0x100025b3
100200f4:	push   0x0
100200f6:	call   0x10042fe2
100200fb:	pop    ecx
100200fc:	push   0x0
100200fe:	push   0x1
10020100:	lea    ecx,[ebp+0x94]
10020106:	call   0x100012f0
1002010b:	jmp    0x1001ffcb
10020110:	mov    ecx,DWORD PTR [esp+0x8]
10020114:	test   ecx,ecx
10020116:	mov    eax,DWORD PTR [esp+0x4]
1002011a:	jne    0x10020123
1002011c:	mov    eax,0x80004003
10020121:	jmp    0x10020137
10020123:	mov    edx,DWORD PTR [eax-0x10]
10020126:	mov    DWORD PTR [ecx],edx
10020128:	mov    eax,DWORD PTR [eax-0x10]
1002012b:	test   eax,eax
1002012d:	je     0x10020135
1002012f:	mov    ecx,DWORD PTR [eax]
10020131:	push   eax
10020132:	call   DWORD PTR [ecx+0x4]
10020135:	xor    eax,eax
10020137:	ret    0x8
1002013a:	push   DWORD PTR [esp+0x8]
1002013e:	call   DWORD PTR ds:0x1006715c
10020144:	push   eax
10020145:	call   0x1001f1dd
1002014a:	pop    ecx
1002014b:	pop    ecx
1002014c:	xor    eax,eax
1002014e:	ret    0x8
10020151:	mov    eax,DWORD PTR [esp+0x8]
10020155:	cmp    eax,0x2
10020158:	ja     0x10020168
1002015a:	add    eax,0x12
1002015d:	push   eax
1002015e:	call   0x10038b80
10020163:	pop    ecx
10020164:	xor    eax,eax
10020166:	jmp    0x1002016d
10020168:	mov    eax,0x80004005
1002016d:	ret    0x8
10020170:	mov    ecx,DWORD PTR [esi+0x4]
10020173:	mov    eax,DWORD PTR [esi+0x8]
10020176:	cmp    ecx,eax
10020178:	push   edi
10020179:	jne    0x100201bf
1002017b:	mov    edx,DWORD PTR [esi]
1002017d:	cmp    ebx,edx
1002017f:	jb     0x10020192
10020181:	lea    edi,[edx+eax*2]
10020184:	cmp    ebx,edi
10020186:	jae    0x10020192
10020188:	push   0x80004005
1002018d:	call   0x10001f2d
10020192:	test   eax,eax
10020194:	jne    0x1002019b
10020196:	xor    edi,edi
10020198:	inc    edi
10020199:	jmp    0x100201aa
1002019b:	lea    edi,[ecx+ecx*1]
1002019e:	test   edi,edi
100201a0:	jl     0x100201d9
100201a2:	cmp    edi,0x3fffffff
100201a8:	ja     0x100201d9
100201aa:	push   0x2
100201ac:	push   edi
100201ad:	push   edx
100201ae:	call   0x100464b9
100201b3:	add    esp,0xc
100201b6:	test   eax,eax
100201b8:	je     0x100201d9
100201ba:	mov    DWORD PTR [esi+0x8],edi
100201bd:	mov    DWORD PTR [esi],eax
100201bf:	mov    eax,DWORD PTR [esi+0x4]
100201c2:	mov    ecx,DWORD PTR [esi]
100201c4:	lea    eax,[ecx+eax*2]
100201c7:	test   eax,eax
100201c9:	je     0x100201d1
100201cb:	mov    cx,WORD PTR [ebx]
100201ce:	mov    WORD PTR [eax],cx
100201d1:	inc    DWORD PTR [esi+0x4]
100201d4:	xor    eax,eax
100201d6:	inc    eax
100201d7:	pop    edi
100201d8:	ret    
100201d9:	xor    eax,eax
100201db:	pop    edi
100201dc:	ret    
100201dd:	mov    eax,DWORD PTR [esp+0x8]
100201e1:	push   esi
100201e2:	xor    esi,esi
100201e4:	cmp    eax,esi
100201e6:	push   edi
100201e7:	jne    0x100201ee
100201e9:	mov    eax,0x1008183c
100201ee:	mov    ecx,DWORD PTR [eax+0x4]
100201f1:	mov    edi,DWORD PTR [eax+0xc]
100201f4:	mov    edx,DWORD PTR [eax]
100201f6:	mov    eax,DWORD PTR [eax+0x8]
100201f9:	push   esi
100201fa:	push   DWORD PTR ds:0x10082a8c
10020200:	sub    edi,ecx
10020202:	push   DWORD PTR [esp+0x1c]
10020206:	sub    eax,edx
10020208:	push   esi
10020209:	push   edi
1002020a:	push   eax
1002020b:	push   ecx
1002020c:	push   edx
1002020d:	push   esi
1002020e:	push   esi
1002020f:	push   0x1007170c
10020214:	push   esi
10020215:	call   DWORD PTR ds:0x10067364
1002021b:	mov    ecx,DWORD PTR [esp+0xc]
1002021f:	pop    edi
10020220:	mov    DWORD PTR [ecx],eax
10020222:	pop    esi
10020223:	ret    0xc
10020226:	push   0x0
10020228:	mov    eax,0x1005fb3d
1002022d:	call   0x10059df5
10020232:	xor    ecx,ecx
10020234:	cmp    ebx,ecx
10020236:	jne    0x1002023f
10020238:	mov    eax,0x80004003
1002023d:	jmp    0x1002028c
1002023f:	mov    DWORD PTR [ebx],ecx
10020241:	push   ecx
10020242:	mov    DWORD PTR [ebp-0x4],ecx
10020245:	mov    eax,DWORD PTR [ebp+0x8]
10020248:	mov    eax,DWORD PTR [eax]
1002024a:	push   ecx
1002024b:	push   DWORD PTR ds:0x10083048
10020251:	push   eax
10020252:	call   DWORD PTR ds:0x100672f8
10020258:	mov    edi,eax
1002025a:	mov    esi,edi
1002025c:	neg    esi
1002025e:	sbb    esi,esi
10020260:	and    esi,0x7fffbffb
10020266:	add    esi,0x80004005
1002026c:	mov    DWORD PTR [ebp+0x8],edi
1002026f:	js     0x1002027c
10020271:	mov    eax,DWORD PTR [edi]
10020273:	push   ebx
10020274:	push   DWORD PTR [ebp+0xc]
10020277:	push   edi
10020278:	call   DWORD PTR [eax]
1002027a:	mov    esi,eax
1002027c:	or     DWORD PTR [ebp-0x4],0xffffffff
10020280:	test   edi,edi
10020282:	je     0x1002028a
10020284:	mov    eax,DWORD PTR [edi]
10020286:	push   edi
10020287:	call   DWORD PTR [eax+0x8]
1002028a:	mov    eax,esi
1002028c:	call   0x10059ecd
10020291:	ret    0x8
10020294:	push   ebp
10020295:	mov    ebp,esp
10020297:	cmp    DWORD PTR ds:0x10081880,0x0
1002029e:	push   ebx
1002029f:	mov    ebx,eax
100202a1:	jne    0x100202aa
100202a3:	and    DWORD PTR ds:0x10081880,0x0
100202aa:	push   DWORD PTR [ebp+0xc]
100202ad:	lea    eax,[ebx+0x20]
100202b0:	push   eax
100202b1:	push   0x10081850
100202b6:	call   0x10021e71
100202bb:	add    esp,0xc
100202be:	movzx  eax,ax
100202c1:	push   eax
100202c2:	push   DWORD PTR [ebp+0xc]
100202c5:	push   0x0
100202c7:	push   0xcf0000
100202cc:	push   0x100715d0
100202d1:	push   DWORD PTR [ebp+0x8]
100202d4:	call   0x10022185
100202d9:	pop    ebx
100202da:	pop    ebp
100202db:	ret    0x8
100202de:	mov    eax,0x1002207f
100202e3:	ret    
100202e4:	push   ebp
100202e5:	mov    ebp,esp
100202e7:	cmp    DWORD PTR ds:0x10081910,0x0
100202ee:	push   ebx
100202ef:	mov    ebx,eax
100202f1:	jne    0x100202fa
100202f3:	and    DWORD PTR ds:0x10081910,0x0
100202fa:	push   DWORD PTR [ebp+0xc]
100202fd:	lea    eax,[ebx+0x20]
10020300:	push   eax
10020301:	push   0x100818e0
10020306:	call   0x10021e71
1002030b:	add    esp,0xc
1002030e:	movzx  eax,ax
10020311:	push   eax
10020312:	push   DWORD PTR [ebp+0xc]
10020315:	push   0x0
10020317:	push   0xcf0000
1002031c:	push   0x1007161c
10020321:	push   DWORD PTR [ebp+0x8]
10020324:	call   0x10022185
10020329:	pop    ebx
1002032a:	pop    ebp
1002032b:	ret    0x8
1002032e:	push   esi
1002032f:	mov    esi,DWORD PTR [esp+0x8]
10020333:	lea    eax,[esi-0x38]
10020336:	neg    esi
10020338:	sbb    esi,esi
1002033a:	and    esi,eax
1002033c:	push   edi
1002033d:	mov    edi,DWORD PTR [esp+0x10]
10020341:	add    esi,0x3c
10020344:	cmp    DWORD PTR [esi],edi
10020346:	je     0x1002034d
10020348:	call   0x10007961
1002034d:	pop    edi
1002034e:	xor    eax,eax
10020350:	pop    esi
10020351:	ret    0x8
10020354:	mov    ecx,DWORD PTR [esp+0x4]
10020358:	mov    edx,DWORD PTR [esp+0xc]
1002035c:	lea    eax,[ecx-0x38]
1002035f:	neg    ecx
10020361:	sbb    ecx,ecx
10020363:	and    ecx,eax
10020365:	test   edx,edx
10020367:	mov    eax,0x80004003
1002036c:	je     0x10020389
1002036e:	mov    ecx,DWORD PTR [ecx+0x3c]
10020371:	test   ecx,ecx
10020373:	je     0x10020381
10020375:	mov    eax,DWORD PTR [ecx]
10020377:	push   edx
10020378:	push   DWORD PTR [esp+0xc]
1002037c:	push   ecx
1002037d:	call   DWORD PTR [eax]
1002037f:	jmp    0x10020389
10020381:	and    DWORD PTR [edx],0x0
10020384:	mov    eax,0x80004005
10020389:	ret    0xc
1002038c:	push   edi
1002038d:	mov    edi,DWORD PTR [esp+0x14]
10020391:	mov    ecx,0x1008196c
10020396:	call   0x10010945
1002039b:	pop    edi
1002039c:	ret    0x10
1002039f:	push   DWORD PTR [esp+0x18]
100203a3:	mov    eax,0x1008196c
100203a8:	push   DWORD PTR [esp+0x14]
100203ac:	push   DWORD PTR [esp+0x14]
100203b0:	call   0x10010973
100203b5:	ret    0x18
100203b8:	push   ebp
100203b9:	mov    ebp,esp
100203bb:	push   DWORD PTR [ebp+0x28]
100203be:	mov    eax,0x1008196c
100203c3:	push   DWORD PTR [ebp+0x24]
100203c6:	push   DWORD PTR [ebp+0x20]
100203c9:	push   DWORD PTR [ebp+0x1c]
100203cc:	push   DWORD PTR [ebp+0x18]
100203cf:	push   DWORD PTR [ebp+0xc]
100203d2:	push   DWORD PTR [ebp+0x8]
100203d5:	call   0x10010a16
100203da:	pop    ebp
100203db:	ret    0x24
100203de:	push   esi
100203df:	mov    esi,ecx
100203e1:	mov    DWORD PTR [esi],0x10071878
100203e7:	mov    DWORD PTR [esi+0x24],0x10071888
100203ee:	mov    DWORD PTR [esi+0x28],0xc0000001
100203f5:	mov    eax,DWORD PTR [esi+0x2c]
100203f8:	test   eax,eax
100203fa:	je     0x10020406
100203fc:	and    DWORD PTR [esi+0x2c],0x0
10020400:	mov    ecx,DWORD PTR [eax]
10020402:	push   eax
10020403:	call   DWORD PTR [ecx+0x8]
10020406:	mov    eax,DWORD PTR [esi+0x4]
10020409:	test   eax,eax
1002040b:	je     0x10020414
1002040d:	push   eax
1002040e:	call   DWORD PTR ds:0x10067318
10020414:	mov    ecx,DWORD PTR ds:0x10082c64
1002041a:	mov    eax,DWORD PTR [ecx]
1002041c:	call   DWORD PTR [eax+0x8]
1002041f:	mov    eax,DWORD PTR [esi+0x2c]
10020422:	test   eax,eax
10020424:	je     0x1002042c
10020426:	mov    ecx,DWORD PTR [eax]
10020428:	push   eax
10020429:	call   DWORD PTR [ecx+0x8]
1002042c:	mov    esi,DWORD PTR [esi+0x14]
1002042f:	test   esi,esi
10020431:	je     0x10020439
10020433:	push   esi
10020434:	call   0x100573fe
10020439:	pop    esi
1002043a:	ret    
1002043b:	mov    eax,DWORD PTR [esp+0x4]
1002043f:	push   ebx
10020440:	push   DWORD PTR [esp+0xc]
10020444:	mov    ebx,DWORD PTR [esp+0x14]
10020448:	add    eax,0xffffffdc
1002044b:	push   eax
1002044c:	mov    eax,0x100715a0
10020451:	call   0x10010824
10020456:	pop    ebx
10020457:	ret    0xc
1002045a:	push   esi
1002045b:	mov    esi,ecx
1002045d:	mov    DWORD PTR [esi],0x100718c4
10020463:	mov    DWORD PTR [esi+0x24],0x100718d4
1002046a:	mov    DWORD PTR [esi+0x28],0xc0000001
10020471:	mov    eax,DWORD PTR [esi+0x2c]
10020474:	test   eax,eax
10020476:	je     0x10020482
10020478:	and    DWORD PTR [esi+0x2c],0x0
1002047c:	mov    ecx,DWORD PTR [eax]
1002047e:	push   eax
1002047f:	call   DWORD PTR [ecx+0x8]
10020482:	mov    eax,DWORD PTR [esi+0x4]
10020485:	test   eax,eax
10020487:	je     0x10020490
10020489:	push   eax
1002048a:	call   DWORD PTR ds:0x10067318
10020490:	mov    ecx,DWORD PTR ds:0x10082c64
10020496:	mov    eax,DWORD PTR [ecx]
10020498:	call   DWORD PTR [eax+0x8]
1002049b:	mov    eax,DWORD PTR [esi+0x2c]
1002049e:	test   eax,eax
100204a0:	je     0x100204a8
100204a2:	mov    ecx,DWORD PTR [eax]
100204a4:	push   eax
100204a5:	call   DWORD PTR [ecx+0x8]
100204a8:	mov    esi,DWORD PTR [esi+0x14]
100204ab:	test   esi,esi
100204ad:	je     0x100204b5
100204af:	push   esi
100204b0:	call   0x100573fe
100204b5:	pop    esi
100204b6:	ret    
100204b7:	mov    eax,DWORD PTR [esp+0x4]
100204bb:	inc    DWORD PTR [eax+0x4]
100204be:	mov    eax,DWORD PTR [eax+0x4]
100204c1:	ret    0x4
100204c4:	mov    eax,DWORD PTR [esp+0x4]
100204c8:	dec    DWORD PTR [eax+0x4]
100204cb:	push   esi
100204cc:	mov    esi,DWORD PTR [eax+0x4]
100204cf:	jne    0x100204df
100204d1:	lea    ecx,[eax-0x24]
100204d4:	test   ecx,ecx
100204d6:	je     0x100204df
100204d8:	mov    eax,DWORD PTR [ecx]
100204da:	push   0x1
100204dc:	call   DWORD PTR [eax+0x4]
100204df:	mov    eax,esi
100204e1:	pop    esi
100204e2:	ret    0x4
100204e5:	mov    eax,DWORD PTR [esp+0x4]
100204e9:	push   ebx
100204ea:	push   DWORD PTR [esp+0xc]
100204ee:	mov    ebx,DWORD PTR [esp+0x14]
100204f2:	add    eax,0xffffffdc
100204f5:	push   eax
100204f6:	mov    eax,0x100715f8
100204fb:	call   0x10010824
10020500:	pop    ebx
10020501:	ret    0xc
10020504:	xor    eax,eax
10020506:	mov    DWORD PTR [esi+0x4],eax
10020509:	mov    DWORD PTR [esi+0x10],eax
1002050c:	mov    DWORD PTR [esi+0xc],eax
1002050f:	mov    DWORD PTR [esi+0x8],eax
10020512:	mov    DWORD PTR [esi+0x14],eax
10020515:	mov    DWORD PTR [esi+0x18],eax
10020518:	mov    DWORD PTR [esi],0x100718f8
1002051e:	mov    ecx,DWORD PTR ds:0x10082c64
10020524:	mov    eax,DWORD PTR [ecx]
10020526:	call   DWORD PTR [eax+0x4]
10020529:	mov    eax,esi
1002052b:	ret    
1002052c:	push   esi
1002052d:	mov    esi,ecx
1002052f:	mov    DWORD PTR [esi],0x100718f8
10020535:	mov    DWORD PTR [esi+0x18],0xc0000001
1002053c:	mov    ecx,DWORD PTR ds:0x10082c64
10020542:	mov    eax,DWORD PTR [ecx]
10020544:	call   DWORD PTR [eax+0x8]
10020547:	mov    ecx,esi
10020549:	pop    esi
1002054a:	jmp    0x1002232a
1002054f:	mov    ecx,DWORD PTR [esp+0x4]
10020553:	dec    DWORD PTR [ecx+0x18]
10020556:	push   esi
10020557:	mov    esi,DWORD PTR [ecx+0x18]
1002055a:	jne    0x10020567
1002055c:	test   ecx,ecx
1002055e:	je     0x10020567
10020560:	mov    eax,DWORD PTR [ecx]
10020562:	push   0x1
10020564:	call   DWORD PTR [eax+0x1c]
10020567:	mov    eax,esi
10020569:	pop    esi
1002056a:	ret    0x4
1002056d:	push   ebx
1002056e:	push   DWORD PTR [esp+0xc]
10020572:	mov    ebx,DWORD PTR [esp+0x14]
10020576:	push   DWORD PTR [esp+0xc]
1002057a:	mov    eax,0x10071850
1002057f:	call   0x10010824
10020584:	pop    ebx
10020585:	ret    0xc
10020588:	mov    eax,DWORD PTR [esp+0x4]
1002058c:	mov    ecx,DWORD PTR [eax+0x8]
1002058f:	mov    DWORD PTR [eax+0x10],ecx
10020592:	xor    eax,eax
10020594:	ret    0x4
10020597:	push   DWORD PTR [esi]
10020599:	call   0x1001b64a
1002059e:	and    DWORD PTR [esi],0x0
100205a1:	pop    ecx
100205a2:	ret    
100205a3:	push   0x10
100205a5:	mov    eax,0x100606a3
100205aa:	call   0x10059e28
100205af:	mov    eax,DWORD PTR [ebp+0x8]
100205b2:	xor    esi,esi
100205b4:	cmp    eax,esi
100205b6:	jne    0x100205bf
100205b8:	mov    eax,0x80004003
100205bd:	jmp    0x10020629
100205bf:	push   0xf4
100205c4:	mov    DWORD PTR [eax],esi
100205c6:	mov    DWORD PTR [ebp-0x14],0x8007000e
100205cd:	mov    DWORD PTR [ebp-0x1c],esi
100205d0:	mov    DWORD PTR [ebp-0x4],esi
100205d3:	call   0x10043196
100205d8:	pop    ecx
100205d9:	mov    DWORD PTR [ebp-0x18],eax
100205dc:	cmp    eax,esi
100205de:	mov    BYTE PTR [ebp-0x4],0x1
100205e2:	je     0x100205ec
100205e4:	push   eax
100205e5:	call   0x10021261
100205ea:	mov    esi,eax
100205ec:	or     DWORD PTR [ebp-0x4],0xffffffff
100205f0:	jmp    0x100205ff
100205f2:	or     DWORD PTR [ebp-0x4],0xffffffff
100205f6:	mov    eax,0x100205fc
100205fb:	ret    
100205fc:	mov    esi,DWORD PTR [ebp-0x1c]
100205ff:	test   esi,esi
10020601:	je     0x10020626
10020603:	push   DWORD PTR [ebp+0x8]
10020606:	inc    DWORD PTR [esi+0x4]
10020609:	dec    DWORD PTR [esi+0x4]
1002060c:	mov    eax,DWORD PTR [esi]
1002060e:	push   0x1006eecc
10020613:	push   esi
10020614:	call   DWORD PTR [eax]
10020616:	test   eax,eax
10020618:	mov    DWORD PTR [ebp-0x14],eax
1002061b:	je     0x10020626
1002061d:	mov    eax,DWORD PTR [esi]
1002061f:	push   0x1
10020621:	mov    ecx,esi
10020623:	call   DWORD PTR [eax+0xc]
10020626:	mov    eax,DWORD PTR [ebp-0x14]
10020629:	call   0x10059ecd
1002062e:	ret    0x4
10020631:	push   ebp
10020632:	mov    ebp,esp
10020634:	and    esp,0xfffffff8
10020637:	push   0xffffffff
10020639:	push   0x100611a7
1002063e:	mov    eax,fs:0x0
10020644:	push   eax
10020645:	sub    esp,0x70
10020648:	mov    eax,ds:0x100801ac
1002064d:	xor    eax,esp
1002064f:	mov    DWORD PTR [esp+0x68],eax
10020653:	push   ebx
10020654:	push   esi
10020655:	push   edi
10020656:	mov    eax,ds:0x100801ac
1002065b:	xor    eax,esp
1002065d:	push   eax
1002065e:	lea    eax,[esp+0x80]
10020665:	mov    fs:0x0,eax
1002066b:	mov    edi,ecx
1002066d:	mov    eax,edi
1002066f:	mov    DWORD PTR [esp+0x14],edi
10020673:	mov    esi,edx
10020675:	call   0x10020fe4
1002067a:	lea    eax,[esp+0x68]
1002067e:	push   eax
1002067f:	push   esi
10020680:	call   DWORD PTR ds:0x10067444
10020686:	test   eax,eax
10020688:	jl     0x100207a7
1002068e:	lea    esi,[edi+0xc]
10020691:	push   esi
10020692:	push   0x1006c8c8
10020697:	push   0x17
10020699:	push   0x0
1002069b:	lea    eax,[esp+0x78]
1002069f:	push   eax
100206a0:	mov    DWORD PTR [esp+0x2c],esi
100206a4:	call   DWORD PTR ds:0x10067440
100206aa:	test   eax,eax
100206ac:	mov    DWORD PTR [esp+0x10],eax
100206b0:	jl     0x100206e7
100206b2:	mov    eax,DWORD PTR [esi]
100206b4:	mov    ecx,DWORD PTR [eax]
100206b6:	lea    ebx,[edi+0x8]
100206b9:	push   ebx
100206ba:	push   0x1006c8b8
100206bf:	push   eax
100206c0:	call   DWORD PTR [ecx]
100206c2:	test   eax,eax
100206c4:	mov    DWORD PTR [esp+0x10],eax
100206c8:	jl     0x100206e7
100206ca:	mov    esi,DWORD PTR [esi]
100206cc:	mov    eax,DWORD PTR [esi]
100206ce:	push   edi
100206cf:	push   esi
100206d0:	call   DWORD PTR [eax+0xc]
100206d3:	test   eax,eax
100206d5:	mov    DWORD PTR [esp+0x10],eax
100206d9:	jl     0x100206e7
100206db:	mov    ebx,DWORD PTR [ebx]
100206dd:	mov    eax,DWORD PTR [ebx]
100206df:	push   ebx
100206e0:	call   DWORD PTR [eax+0xc]
100206e3:	mov    DWORD PTR [esp+0x10],eax
100206e7:	push   0x10071838
100206ec:	lea    eax,[esp+0x50]
100206f0:	call   0x10020e72
100206f5:	and    DWORD PTR [esp+0x88],0x0
100206fd:	mov    eax,edi
100206ff:	neg    eax
10020701:	sbb    eax,eax
10020703:	lea    ecx,[edi-0x8]
10020706:	and    eax,ecx
10020708:	lea    ebx,[eax+0x24]
1002070b:	lea    eax,[esp+0x4c]
1002070f:	lea    esi,[esp+0x20]
10020713:	call   0x10004b27
10020718:	mov    DWORD PTR [esp+0x3c],ebx
1002071c:	mov    eax,esi
1002071e:	add    edi,0x10
10020721:	push   eax
10020722:	push   edi
10020723:	mov    DWORD PTR [esp+0x24],edi
10020727:	lea    edi,[esp+0x48]
1002072b:	mov    BYTE PTR [esp+0x90],0x1
10020733:	call   0x10020e9e
10020738:	push   0x1
1002073a:	xor    ebx,ebx
1002073c:	mov    BYTE PTR [esp+0x8c],0x0
10020744:	call   0x10005465
10020749:	cmp    DWORD PTR [esp+0x10],ebx
1002074d:	jl     0x10020784
1002074f:	mov    esi,DWORD PTR [esp+0x18]
10020753:	mov    eax,DWORD PTR [esi]
10020755:	mov    ecx,DWORD PTR [eax]
10020757:	push   0xe
10020759:	push   0x10071838
1002075e:	push   eax
1002075f:	call   DWORD PTR [ecx+0x20]
10020762:	test   eax,eax
10020764:	jl     0x10020784
10020766:	mov    eax,DWORD PTR [esi]
10020768:	mov    ecx,DWORD PTR [eax]
1002076a:	push   0x1
1002076c:	push   eax
1002076d:	call   DWORD PTR [ecx+0x14]
10020770:	test   eax,eax
10020772:	jl     0x10020784
10020774:	push   0x1
10020776:	lea    esi,[esp+0x50]
1002077a:	call   0x10005465
1002077f:	xor    eax,eax
10020781:	inc    eax
10020782:	jmp    0x100207a9
10020784:	mov    ecx,DWORD PTR [esp+0x1c]
10020788:	lea    eax,[esp+0x4c]
1002078c:	call   0x10020f54
10020791:	mov    eax,DWORD PTR [esp+0x14]
10020795:	call   0x10020fe4
1002079a:	push   0x1
1002079c:	xor    ebx,ebx
1002079e:	lea    esi,[esp+0x50]
100207a2:	call   0x10005465
100207a7:	xor    eax,eax
100207a9:	mov    ecx,DWORD PTR [esp+0x80]
100207b0:	mov    DWORD PTR fs:0x0,ecx
100207b7:	pop    ecx
100207b8:	pop    edi
100207b9:	pop    esi
100207ba:	pop    ebx
100207bb:	mov    ecx,DWORD PTR [esp+0x68]
100207bf:	xor    ecx,esp
100207c1:	call   0x10043615
100207c6:	mov    esp,ebp
100207c8:	pop    ebp
100207c9:	ret    
100207ca:	push   ebp
100207cb:	mov    ebp,esp
100207cd:	and    esp,0xfffffff8
100207d0:	push   0xffffffff
100207d2:	push   0x1006116f
100207d7:	mov    eax,fs:0x0
100207dd:	push   eax
100207de:	sub    esp,0x60
100207e1:	mov    eax,ds:0x100801ac
100207e6:	xor    eax,esp
100207e8:	mov    DWORD PTR [esp+0x58],eax
100207ec:	push   ebx
100207ed:	push   esi
100207ee:	push   edi
100207ef:	mov    eax,ds:0x100801ac
100207f4:	xor    eax,esp
100207f6:	push   eax
100207f7:	lea    eax,[esp+0x70]
100207fb:	mov    fs:0x0,eax
10020801:	mov    ebx,ecx
10020803:	mov    esi,DWORD PTR [ebp+0x8]
10020806:	mov    edi,edx
10020808:	cmp    DWORD PTR [edi+0xc],0x0
1002080c:	mov    DWORD PTR [esp+0x18],edi
10020810:	mov    DWORD PTR [esp+0x1c],esi
10020814:	je     0x100208c2
1002081a:	test   ebx,ebx
1002081c:	je     0x100208c2
10020822:	call   DWORD PTR ds:0x10080ffc
10020828:	push   esi
10020829:	lea    eax,[esp+0x50]
1002082d:	call   0x10020e72
10020832:	and    DWORD PTR [esp+0x78],0x0
10020837:	lea    eax,[esp+0x4c]
1002083b:	lea    esi,[esp+0x20]
1002083f:	call   0x10004b27
10020844:	mov    DWORD PTR [esp+0x3c],ebx
10020848:	lea    eax,[edi+0x10]
1002084b:	mov    ecx,esi
1002084d:	push   ecx
1002084e:	push   eax
1002084f:	lea    edi,[esp+0x48]
10020853:	mov    BYTE PTR [esp+0x80],0x1
1002085b:	mov    DWORD PTR [esp+0x1c],eax
1002085f:	call   0x10020e9e
10020864:	push   0x1
10020866:	xor    ebx,ebx
10020868:	mov    BYTE PTR [esp+0x7c],0x0
1002086d:	call   0x10005465
10020872:	mov    esi,DWORD PTR [esp+0x18]
10020876:	mov    eax,DWORD PTR [esi+0xc]
10020879:	mov    ecx,DWORD PTR [eax]
1002087b:	push   0xe
1002087d:	push   DWORD PTR [esp+0x20]
10020881:	push   eax
10020882:	call   DWORD PTR [ecx+0x20]
10020885:	test   eax,eax
10020887:	jl     0x100208a8
10020889:	mov    esi,DWORD PTR [esi+0xc]
1002088c:	mov    eax,DWORD PTR [esi]
1002088e:	push   0x2
10020890:	push   esi
10020891:	call   DWORD PTR [eax+0x14]
10020894:	test   eax,eax
10020896:	jl     0x100208a8
10020898:	push   0x1
1002089a:	lea    esi,[esp+0x50]
1002089e:	call   0x10005465
100208a3:	xor    eax,eax
100208a5:	inc    eax
100208a6:	jmp    0x100208c4
100208a8:	mov    ecx,DWORD PTR [esp+0x14]
100208ac:	lea    eax,[esp+0x4c]
100208b0:	call   0x10020f54
100208b5:	push   0x1
100208b7:	xor    ebx,ebx
100208b9:	lea    esi,[esp+0x50]
100208bd:	call   0x10005465
100208c2:	xor    eax,eax
100208c4:	mov    ecx,DWORD PTR [esp+0x70]
100208c8:	mov    DWORD PTR fs:0x0,ecx
100208cf:	pop    ecx
100208d0:	pop    edi
100208d1:	pop    esi
100208d2:	pop    ebx
100208d3:	mov    ecx,DWORD PTR [esp+0x58]
100208d7:	xor    ecx,esp
100208d9:	call   0x10043615
100208de:	mov    esp,ebp
100208e0:	pop    ebp
100208e1:	ret    0x4
100208e4:	push   ebp
100208e5:	mov    ebp,esp
100208e7:	sub    esp,0x1c
100208ea:	mov    eax,ds:0x100801ac
100208ef:	xor    eax,ebp
100208f1:	mov    DWORD PTR [ebp-0x8],eax
100208f4:	mov    eax,DWORD PTR [ebp+0x8]
100208f7:	and    DWORD PTR [ebp-0x1c],0x0
100208fb:	push   esi
100208fc:	push   edi
100208fd:	mov    esi,0x1006c868
10020902:	lea    edi,[ebp-0x18]
10020905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020908:	lea    ecx,[ebp-0x18]
1002090b:	push   ecx
1002090c:	push   eax
1002090d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002090e:	call   DWORD PTR ds:0x10067444
10020914:	test   eax,eax
10020916:	jl     0x1002092f
10020918:	lea    eax,[ebp-0x1c]
1002091b:	push   eax
1002091c:	push   0x1006c8d8
10020921:	push   0x1
10020923:	push   0x0
10020925:	lea    eax,[ebp-0x18]
10020928:	push   eax
10020929:	call   DWORD PTR ds:0x10067440
1002092f:	mov    ecx,DWORD PTR [ebp-0x8]
10020932:	mov    eax,DWORD PTR [ebp-0x1c]
10020935:	pop    edi
10020936:	xor    ecx,ebp
10020938:	pop    esi
10020939:	call   0x10043615
1002093e:	leave  
1002093f:	ret    0x4
10020942:	push   ebp
10020943:	mov    ebp,esp
10020945:	mov    ecx,DWORD PTR [ecx+0xc]
10020948:	sub    esp,0x14
1002094b:	push   edi
1002094c:	xor    edi,edi
1002094e:	cmp    ecx,edi
10020950:	mov    eax,0x80004005
10020955:	je     0x100209b6
10020957:	mov    eax,DWORD PTR [ebp+0xc]
1002095a:	lea    edx,[ebp-0x4]
1002095d:	mov    DWORD PTR [ebp-0x14],eax
10020960:	mov    eax,DWORD PTR [ebp+0x10]
10020963:	push   edx
10020964:	push   edi
10020965:	mov    DWORD PTR [ebp-0x4],edi
10020968:	mov    DWORD PTR [ebp-0x10],edi
1002096b:	mov    DWORD PTR [ebp-0xc],eax
1002096e:	mov    DWORD PTR [ebp-0x8],edi
10020971:	mov    eax,DWORD PTR [ecx]
10020973:	push   ecx
10020974:	call   DWORD PTR [eax+0x28]
10020977:	cmp    eax,edi
10020979:	jl     0x100209b6
1002097b:	mov    eax,DWORD PTR [ebp-0x4]
1002097e:	mov    ecx,DWORD PTR [eax]
10020980:	push   esi
10020981:	lea    edx,[ebp+0xc]
10020984:	push   edx
10020985:	push   0x9
10020987:	push   0x1
10020989:	lea    edx,[ebp+0x8]
1002098c:	push   edx
1002098d:	mov    esi,0x1006c868
10020992:	push   esi
10020993:	push   eax
10020994:	call   DWORD PTR [ecx+0x14]
10020997:	cmp    eax,edi
10020999:	jl     0x100209b5
1002099b:	mov    eax,DWORD PTR [ebp-0x4]
1002099e:	mov    ecx,DWORD PTR [eax]
100209a0:	push   edi
100209a1:	push   edi
100209a2:	push   DWORD PTR [ebp+0x14]
100209a5:	lea    edx,[ebp-0x14]
100209a8:	push   edx
100209a9:	push   0x1
100209ab:	push   0x9
100209ad:	push   esi
100209ae:	push   DWORD PTR [ebp+0xc]
100209b1:	push   eax
100209b2:	call   DWORD PTR [ecx+0x18]
100209b5:	pop    esi
100209b6:	pop    edi
100209b7:	leave  
100209b8:	ret    0x10
100209bb:	push   ebp
100209bc:	mov    ebp,esp
100209be:	sub    esp,0x30
100209c1:	push   esi
100209c2:	push   edi
100209c3:	push   ebx
100209c4:	lea    eax,[ebp-0x8]
100209c7:	call   0x10021161
100209cc:	mov    eax,ds:0x10082fc8
100209d1:	lea    edi,[ebp-0x10]
100209d4:	lea    esi,[ebp-0x8]
100209d7:	mov    DWORD PTR [ebp-0xc],eax
100209da:	mov    DWORD PTR [ebp-0x10],0x10082fc4
100209e1:	call   0x10004b0c
100209e6:	test   al,al
100209e8:	mov    ecx,DWORD PTR [ebp-0x4]
100209eb:	jne    0x100209f4
100209ed:	mov    eax,DWORD PTR [ebx]
100209ef:	cmp    eax,DWORD PTR [ecx+0xc]
100209f2:	jae    0x10020a27
100209f4:	xor    eax,eax
100209f6:	lea    edi,[ebp-0x18]
100209f9:	stos   DWORD PTR es:[edi],eax
100209fa:	stos   DWORD PTR es:[edi],eax
100209fb:	stos   DWORD PTR es:[edi],eax
100209fc:	stos   DWORD PTR es:[edi],eax
100209fd:	mov    eax,DWORD PTR [ebx]
100209ff:	mov    DWORD PTR [ebp-0x2c],eax
10020a02:	lea    esi,[ebp-0x18]
10020a05:	lea    edi,[ebp-0x28]
10020a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020a0a:	push   ecx
10020a0b:	push   DWORD PTR [ebp-0x8]
10020a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020a0f:	lea    eax,[ebp-0x10]
10020a12:	push   eax
10020a13:	lea    eax,[ebp-0x2c]
10020a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020a17:	call   0x1002101c
10020a1c:	mov    ecx,DWORD PTR [eax]
10020a1e:	mov    eax,DWORD PTR [eax+0x4]
10020a21:	mov    DWORD PTR [ebp-0x8],ecx
10020a24:	mov    DWORD PTR [ebp-0x4],eax
10020a27:	lea    esi,[ebp-0x8]
10020a2a:	call   0x1001426e
10020a2f:	pop    edi
10020a30:	add    eax,0x4
10020a33:	pop    esi
10020a34:	leave  
10020a35:	ret    
10020a36:	push   ebp
10020a37:	mov    ebp,esp
10020a39:	and    esp,0xfffffff8
10020a3c:	mov    eax,ds:0x10082fc8
10020a41:	mov    edx,DWORD PTR [eax]
10020a43:	sub    esp,0xc
10020a46:	push   esi
10020a47:	push   eax
10020a48:	mov    ecx,0x10082fc4
10020a4d:	mov    esi,ecx
10020a4f:	push   esi
10020a50:	push   edx
10020a51:	push   ecx
10020a52:	lea    eax,[esp+0x18]
10020a56:	push   eax
10020a57:	call   0x100216ce
10020a5c:	push   DWORD PTR ds:0x10082fc8
10020a62:	call   0x10042fe2
10020a67:	and    DWORD PTR ds:0x10082fc8,0x0
10020a6e:	and    DWORD PTR ds:0x10082fcc,0x0
10020a75:	pop    ecx
10020a76:	pop    esi
10020a77:	mov    esp,ebp
10020a79:	pop    ebp
10020a7a:	ret    
10020a7b:	push   0x48
10020a7d:	mov    eax,0x100607fe
10020a82:	call   0x10059df5
10020a87:	mov    ebx,DWORD PTR [ebp+0x10]
10020a8a:	cmp    BYTE PTR [ebx+0x21],0x0
10020a8e:	je     0x10020ac2
10020a90:	push   0x1006dcfc
10020a95:	lea    ecx,[ebp-0x2c]
10020a98:	call   0x100011a7
10020a9d:	and    DWORD PTR [ebp-0x4],0x0
10020aa1:	lea    eax,[ebp-0x2c]
10020aa4:	push   eax
10020aa5:	lea    ecx,[ebp-0x54]
10020aa8:	call   0x10001077
10020aad:	push   0x10076428
10020ab2:	lea    eax,[ebp-0x54]
10020ab5:	push   eax
10020ab6:	mov    DWORD PTR [ebp-0x54],0x1006c988
10020abd:	call   0x10047942
10020ac2:	lea    esi,[ebp+0xc]
10020ac5:	call   0x10021214
10020aca:	mov    ecx,DWORD PTR [ebx]
10020acc:	cmp    BYTE PTR [ecx+0x21],0x0
10020ad0:	je     0x10020ad7
10020ad2:	mov    edi,DWORD PTR [ebx+0x8]
10020ad5:	jmp    0x10020aee
10020ad7:	mov    eax,DWORD PTR [ebx+0x8]
10020ada:	cmp    BYTE PTR [eax+0x21],0x0
10020ade:	je     0x10020ae4
10020ae0:	mov    edi,ecx
10020ae2:	jmp    0x10020aee
10020ae4:	mov    eax,DWORD PTR [ebp+0x10]
10020ae7:	cmp    eax,ebx
10020ae9:	mov    edi,DWORD PTR [eax+0x8]
10020aec:	jne    0x10020b66
10020aee:	cmp    BYTE PTR [edi+0x21],0x0
10020af2:	mov    esi,DWORD PTR [ebx+0x4]
10020af5:	jne    0x10020afa
10020af7:	mov    DWORD PTR [edi+0x4],esi
10020afa:	mov    eax,ds:0x10082fc8
10020aff:	cmp    DWORD PTR [eax+0x4],ebx
10020b02:	jne    0x10020b09
10020b04:	mov    DWORD PTR [eax+0x4],edi
10020b07:	jmp    0x10020b14
10020b09:	cmp    DWORD PTR [esi],ebx
10020b0b:	jne    0x10020b11
10020b0d:	mov    DWORD PTR [esi],edi
10020b0f:	jmp    0x10020b14
10020b11:	mov    DWORD PTR [esi+0x8],edi
10020b14:	mov    edx,DWORD PTR ds:0x10082fc8
10020b1a:	cmp    DWORD PTR [edx],ebx
10020b1c:	jne    0x10020b3a
10020b1e:	cmp    BYTE PTR [edi+0x21],0x0
10020b22:	je     0x10020b28
10020b24:	mov    ecx,esi
10020b26:	jmp    0x10020b38
10020b28:	mov    eax,DWORD PTR [edi]
10020b2a:	mov    ecx,edi
10020b2c:	jmp    0x10020b32
10020b2e:	mov    ecx,eax
10020b30:	mov    eax,DWORD PTR [ecx]
10020b32:	cmp    BYTE PTR [eax+0x21],0x0
10020b36:	je     0x10020b2e
10020b38:	mov    DWORD PTR [edx],ecx
10020b3a:	mov    edx,DWORD PTR ds:0x10082fc8
10020b40:	cmp    DWORD PTR [edx+0x8],ebx
10020b43:	jne    0x10020bc0
10020b45:	cmp    BYTE PTR [edi+0x21],0x0
10020b49:	je     0x10020b4f
10020b4b:	mov    ecx,esi
10020b4d:	jmp    0x10020b61
10020b4f:	mov    eax,DWORD PTR [edi+0x8]
10020b52:	mov    ecx,edi
10020b54:	jmp    0x10020b5b
10020b56:	mov    ecx,eax
10020b58:	mov    eax,DWORD PTR [ecx+0x8]
10020b5b:	cmp    BYTE PTR [eax+0x21],0x0
10020b5f:	je     0x10020b56
10020b61:	mov    DWORD PTR [edx+0x8],ecx
10020b64:	jmp    0x10020bc0
10020b66:	mov    DWORD PTR [ecx+0x4],eax
10020b69:	mov    ecx,DWORD PTR [ebx]
10020b6b:	mov    DWORD PTR [eax],ecx
10020b6d:	cmp    eax,DWORD PTR [ebx+0x8]
10020b70:	jne    0x10020b76
10020b72:	mov    esi,eax
10020b74:	jmp    0x10020b90
10020b76:	cmp    BYTE PTR [edi+0x21],0x0
10020b7a:	mov    esi,DWORD PTR [eax+0x4]
10020b7d:	jne    0x10020b82
10020b7f:	mov    DWORD PTR [edi+0x4],esi
10020b82:	mov    DWORD PTR [esi],edi
10020b84:	mov    ecx,DWORD PTR [ebx+0x8]
10020b87:	mov    DWORD PTR [eax+0x8],ecx
10020b8a:	mov    ecx,DWORD PTR [ebx+0x8]
10020b8d:	mov    DWORD PTR [ecx+0x4],eax
10020b90:	mov    ecx,DWORD PTR ds:0x10082fc8
10020b96:	cmp    DWORD PTR [ecx+0x4],ebx
10020b99:	jne    0x10020ba0
10020b9b:	mov    DWORD PTR [ecx+0x4],eax
10020b9e:	jmp    0x10020bae
10020ba0:	mov    ecx,DWORD PTR [ebx+0x4]
10020ba3:	cmp    DWORD PTR [ecx],ebx
10020ba5:	jne    0x10020bab
10020ba7:	mov    DWORD PTR [ecx],eax
10020ba9:	jmp    0x10020bae
10020bab:	mov    DWORD PTR [ecx+0x8],eax
10020bae:	mov    ecx,DWORD PTR [ebx+0x4]
10020bb1:	mov    DWORD PTR [eax+0x4],ecx
10020bb4:	mov    dl,BYTE PTR [ebx+0x20]
10020bb7:	mov    cl,BYTE PTR [eax+0x20]
10020bba:	mov    BYTE PTR [eax+0x20],dl
10020bbd:	mov    BYTE PTR [ebx+0x20],cl
10020bc0:	cmp    BYTE PTR [ebx+0x20],0x1
10020bc4:	jne    0x10020cc2
10020bca:	jmp    0x10020c7d
10020bcf:	cmp    BYTE PTR [edi+0x20],0x1
10020bd3:	jne    0x10020cbe
10020bd9:	mov    ecx,DWORD PTR [esi]
10020bdb:	cmp    edi,ecx
10020bdd:	jne    0x10020c46
10020bdf:	mov    ecx,DWORD PTR [esi+0x8]
10020be2:	cmp    BYTE PTR [ecx+0x20],0x0
10020be6:	jne    0x10020bfa
10020be8:	mov    BYTE PTR [ecx+0x20],0x1
10020bec:	mov    ecx,esi
10020bee:	mov    BYTE PTR [esi+0x20],0x0
10020bf2:	call   0x10021198
10020bf7:	mov    ecx,DWORD PTR [esi+0x8]
10020bfa:	cmp    BYTE PTR [ecx+0x21],0x0
10020bfe:	jne    0x10020c78
10020c00:	mov    eax,DWORD PTR [ecx]
10020c02:	cmp    BYTE PTR [eax+0x20],0x1
10020c06:	jne    0x10020c11
10020c08:	mov    eax,DWORD PTR [ecx+0x8]
10020c0b:	cmp    BYTE PTR [eax+0x20],0x1
10020c0f:	je     0x10020c74
10020c11:	mov    eax,DWORD PTR [ecx+0x8]
10020c14:	cmp    BYTE PTR [eax+0x20],0x1
10020c18:	jne    0x10020c2c
10020c1a:	mov    eax,DWORD PTR [ecx]
10020c1c:	mov    BYTE PTR [eax+0x20],0x1
10020c20:	mov    BYTE PTR [ecx+0x20],0x0
10020c24:	call   0x100211d5
10020c29:	mov    ecx,DWORD PTR [esi+0x8]
10020c2c:	mov    al,BYTE PTR [esi+0x20]
10020c2f:	mov    BYTE PTR [ecx+0x20],al
10020c32:	mov    BYTE PTR [esi+0x20],0x1
10020c36:	mov    eax,DWORD PTR [ecx+0x8]
10020c39:	mov    ecx,esi
10020c3b:	mov    BYTE PTR [eax+0x20],0x1
10020c3f:	call   0x10021198
10020c44:	jmp    0x10020cbe
10020c46:	cmp    BYTE PTR [ecx+0x20],0x0
10020c4a:	jne    0x10020c5d
10020c4c:	mov    BYTE PTR [ecx+0x20],0x1
10020c50:	mov    ecx,esi
10020c52:	mov    BYTE PTR [esi+0x20],0x0
10020c56:	call   0x100211d5
10020c5b:	mov    ecx,DWORD PTR [esi]
10020c5d:	cmp    BYTE PTR [ecx+0x21],0x0
10020c61:	jne    0x10020c78
10020c63:	mov    eax,DWORD PTR [ecx+0x8]
10020c66:	cmp    BYTE PTR [eax+0x20],0x1
10020c6a:	jne    0x10020c8d
10020c6c:	mov    eax,DWORD PTR [ecx]
10020c6e:	cmp    BYTE PTR [eax+0x20],0x1
10020c72:	jne    0x10020c8d
10020c74:	mov    BYTE PTR [ecx+0x20],0x0
10020c78:	mov    edi,esi
10020c7a:	mov    esi,DWORD PTR [esi+0x4]
10020c7d:	mov    eax,ds:0x10082fc8
10020c82:	cmp    edi,DWORD PTR [eax+0x4]
10020c85:	jne    0x10020bcf
10020c8b:	jmp    0x10020cbe
10020c8d:	mov    eax,DWORD PTR [ecx]
10020c8f:	cmp    BYTE PTR [eax+0x20],0x1
10020c93:	jne    0x10020ca7
10020c95:	mov    eax,DWORD PTR [ecx+0x8]
10020c98:	mov    BYTE PTR [eax+0x20],0x1
10020c9c:	mov    BYTE PTR [ecx+0x20],0x0
10020ca0:	call   0x10021198
10020ca5:	mov    ecx,DWORD PTR [esi]
10020ca7:	mov    al,BYTE PTR [esi+0x20]
10020caa:	mov    BYTE PTR [ecx+0x20],al
10020cad:	mov    BYTE PTR [esi+0x20],0x1
10020cb1:	mov    eax,DWORD PTR [ecx]
10020cb3:	mov    ecx,esi
10020cb5:	mov    BYTE PTR [eax+0x20],0x1
10020cb9:	call   0x100211d5
10020cbe:	mov    BYTE PTR [edi+0x20],0x1
10020cc2:	push   ebx
10020cc3:	call   0x10042fe2
10020cc8:	cmp    DWORD PTR ds:0x10082fcc,0x0
10020ccf:	pop    ecx
10020cd0:	jbe    0x10020cd8
10020cd2:	dec    DWORD PTR ds:0x10082fcc
10020cd8:	mov    ecx,DWORD PTR [ebp+0xc]
10020cdb:	mov    eax,DWORD PTR [ebp+0x8]
10020cde:	mov    DWORD PTR [eax],ecx
10020ce0:	mov    ecx,DWORD PTR [ebp+0x10]
10020ce3:	mov    DWORD PTR [eax+0x4],ecx
10020ce6:	call   0x10059ecd
10020ceb:	ret    0xc
10020cee:	push   ebp
10020cef:	mov    ebp,esp
10020cf1:	sub    esp,0x14
10020cf4:	push   ebx
10020cf5:	push   esi
10020cf6:	push   edi
10020cf7:	push   DWORD PTR [ebp+0xc]
10020cfa:	lea    eax,[ebp-0x8]
10020cfd:	call   0x10021161
10020d02:	mov    eax,ds:0x10082fc8
10020d07:	mov    ebx,0x10082fc4
10020d0c:	lea    edi,[ebp-0x10]
10020d0f:	lea    esi,[ebp-0x8]
10020d12:	mov    DWORD PTR [ebp-0xc],eax
10020d15:	mov    DWORD PTR [ebp-0x10],ebx
10020d18:	call   0x10004b0c
10020d1d:	test   al,al
10020d1f:	jne    0x10020d32
10020d21:	mov    eax,DWORD PTR [ebp+0xc]
10020d24:	mov    eax,DWORD PTR [eax]
10020d26:	mov    ecx,DWORD PTR [ebp-0x4]
10020d29:	cmp    eax,DWORD PTR [ecx+0xc]
10020d2c:	jb     0x10020d32
10020d2e:	mov    eax,esi
10020d30:	jmp    0x10020d40
10020d32:	mov    eax,ds:0x10082fc8
10020d37:	mov    DWORD PTR [ebp-0xc],eax
10020d3a:	mov    DWORD PTR [ebp-0x10],ebx
10020d3d:	lea    eax,[ebp-0x10]
10020d40:	mov    edx,DWORD PTR [eax]
10020d42:	mov    ecx,DWORD PTR [ebp+0x8]
10020d45:	mov    eax,DWORD PTR [eax+0x4]
10020d48:	pop    edi
10020d49:	pop    esi
10020d4a:	mov    DWORD PTR [ecx+0x4],eax
10020d4d:	mov    DWORD PTR [ecx],edx
10020d4f:	mov    eax,ecx
10020d51:	pop    ebx
10020d52:	leave  
10020d53:	ret    0x8
10020d56:	push   esi
10020d57:	mov    esi,DWORD PTR [esp+0x14]
10020d5b:	test   esi,esi
10020d5d:	jne    0x10020d66
10020d5f:	mov    eax,0x80004003
10020d64:	jmp    0x10020d93
10020d66:	xor    eax,eax
10020d68:	cmp    DWORD PTR ds:0x10081994,eax
10020d6e:	jne    0x10020d79
10020d70:	push   DWORD PTR [esp+0x10]
10020d74:	call   0x1001ba83
10020d79:	mov    ecx,DWORD PTR ds:0x10081994
10020d7f:	mov    DWORD PTR [esi],ecx
10020d81:	mov    ecx,DWORD PTR ds:0x10081994
10020d87:	test   ecx,ecx
10020d89:	je     0x10020d93
10020d8b:	mov    eax,DWORD PTR [ecx]
10020d8d:	push   ecx
10020d8e:	call   DWORD PTR [eax+0x4]
10020d91:	xor    eax,eax
10020d93:	pop    esi
10020d94:	ret    0x10
10020d97:	push   ebx
10020d98:	push   DWORD PTR [esp+0x1c]
10020d9c:	mov    ebx,DWORD PTR [esp+0x14]
10020da0:	push   DWORD PTR [esp+0x1c]
10020da4:	push   DWORD PTR [esp+0x1c]
10020da8:	call   0x1001b866
10020dad:	pop    ebx
10020dae:	ret    0x18
10020db1:	mov    DWORD PTR [ecx],0x10071918
10020db7:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020dbe:	mov    ecx,DWORD PTR ds:0x10082c64
10020dc4:	mov    eax,DWORD PTR [ecx]
10020dc6:	jmp    DWORD PTR [eax+0x8]
10020dc9:	mov    ecx,DWORD PTR [esp+0x4]
10020dcd:	dec    DWORD PTR [ecx+0x4]
10020dd0:	push   esi
10020dd1:	mov    esi,DWORD PTR [ecx+0x4]
10020dd4:	jne    0x10020de1
10020dd6:	test   ecx,ecx
10020dd8:	je     0x10020de1
10020dda:	mov    eax,DWORD PTR [ecx]
10020ddc:	push   0x1
10020dde:	call   DWORD PTR [eax+0x1c]
10020de1:	mov    eax,esi
10020de3:	pop    esi
10020de4:	ret    0x4
10020de7:	push   ebx
10020de8:	push   DWORD PTR [esp+0xc]
10020dec:	mov    ebx,DWORD PTR [esp+0x14]
10020df0:	push   DWORD PTR [esp+0xc]
10020df4:	mov    eax,0x100717c4
10020df9:	call   0x10010824
10020dfe:	pop    ebx
10020dff:	ret    0xc
10020e02:	push   esi
10020e03:	mov    esi,ecx
10020e05:	call   0x100203de
10020e0a:	test   BYTE PTR [esp+0x8],0x1
10020e0f:	je     0x10020e18
10020e11:	push   esi
10020e12:	call   0x10042fe2
10020e17:	pop    ecx
10020e18:	mov    eax,esi
10020e1a:	pop    esi
10020e1b:	ret    0x4
10020e1e:	push   esi
10020e1f:	mov    esi,ecx
10020e21:	call   0x1002045a
10020e26:	test   BYTE PTR [esp+0x8],0x1
10020e2b:	je     0x10020e34
10020e2d:	push   esi
10020e2e:	call   0x10042fe2
10020e33:	pop    ecx
10020e34:	mov    eax,esi
10020e36:	pop    esi
10020e37:	ret    0x4
10020e3a:	push   esi
10020e3b:	mov    esi,ecx
10020e3d:	call   0x1002052c
10020e42:	test   BYTE PTR [esp+0x8],0x1
10020e47:	je     0x10020e50
10020e49:	push   esi
10020e4a:	call   0x10042fe2
10020e4f:	pop    ecx
10020e50:	mov    eax,esi
10020e52:	pop    esi
10020e53:	ret    0x4
10020e56:	push   esi
10020e57:	mov    esi,ecx
10020e59:	call   0x10020db1
10020e5e:	test   BYTE PTR [esp+0x8],0x1
10020e63:	je     0x10020e6c
10020e65:	push   esi
10020e66:	call   0x10042fe2
10020e6b:	pop    ecx
10020e6c:	mov    eax,esi
10020e6e:	pop    esi
10020e6f:	ret    0x4
10020e72:	push   esi
10020e73:	push   DWORD PTR [esp+0x8]
10020e77:	mov    esi,eax
10020e79:	and    DWORD PTR [esi+0x14],0x0
10020e7d:	mov    DWORD PTR [esi+0x18],0x7
10020e84:	and    WORD PTR [esi+0x4],0x0
10020e89:	call   0x100437c6
10020e8e:	pop    ecx
10020e8f:	push   DWORD PTR [esp+0x8]
10020e93:	call   0x100053e0
10020e98:	mov    eax,esi
10020e9a:	pop    esi
10020e9b:	ret    0x4
10020e9e:	push   ebp
10020e9f:	mov    ebp,esp
10020ea1:	sub    esp,0x10
10020ea4:	mov    edx,DWORD PTR [ebp+0x8]
10020ea7:	mov    eax,DWORD PTR [edx+0x4]
10020eaa:	push   ebx
10020eab:	push   esi
10020eac:	mov    esi,DWORD PTR [eax+0x4]
10020eaf:	cmp    BYTE PTR [esi+0x2d],0x0
10020eb3:	mov    DWORD PTR [ebp-0x4],eax
10020eb6:	mov    al,0x1
10020eb8:	mov    BYTE PTR [ebp-0x8],al
10020ebb:	jne    0x10020ee2
10020ebd:	mov    ebx,DWORD PTR [ebp+0xc]
10020ec0:	lea    eax,[esi+0xc]
10020ec3:	mov    DWORD PTR [ebp-0x4],esi
10020ec6:	call   0x1001f107
10020ecb:	test   al,al
10020ecd:	mov    BYTE PTR [ebp-0x8],al
10020ed0:	je     0x10020ed6
10020ed2:	mov    esi,DWORD PTR [esi]
10020ed4:	jmp    0x10020ed9
10020ed6:	mov    esi,DWORD PTR [esi+0x8]
10020ed9:	cmp    BYTE PTR [esi+0x2d],0x0
10020edd:	je     0x10020ebd
10020edf:	mov    edx,DWORD PTR [ebp+0x8]
10020ee2:	test   al,al
10020ee4:	mov    ecx,DWORD PTR [ebp-0x4]
10020ee7:	mov    esi,ecx
10020ee9:	mov    DWORD PTR [ebp-0xc],esi
10020eec:	mov    DWORD PTR [ebp-0x10],edx
10020eef:	je     0x10020f23
10020ef1:	mov    eax,DWORD PTR [edx+0x4]
10020ef4:	cmp    ecx,DWORD PTR [eax]
10020ef6:	jne    0x10020f18
10020ef8:	push   DWORD PTR [ebp+0xc]
10020efb:	mov    esi,edx
10020efd:	push   0x1
10020eff:	lea    eax,[ebp-0x10]
10020f02:	push   eax
10020f03:	call   0x100214c8
10020f08:	mov    ecx,DWORD PTR [eax]
10020f0a:	mov    eax,DWORD PTR [eax+0x4]
10020f0d:	mov    DWORD PTR [edi],ecx
10020f0f:	mov    DWORD PTR [edi+0x4],eax
10020f12:	mov    BYTE PTR [edi+0x8],0x1
10020f16:	jmp    0x10020f4c
10020f18:	lea    esi,[ebp-0x10]
10020f1b:	call   0x10021945
10020f20:	mov    esi,DWORD PTR [ebp-0xc]
10020f23:	mov    eax,DWORD PTR [ebp+0xc]
10020f26:	lea    ebx,[esi+0xc]
10020f29:	call   0x1001f107
10020f2e:	test   al,al
10020f30:	je     0x10020f40
10020f32:	push   DWORD PTR [ebp+0xc]
10020f35:	mov    ecx,DWORD PTR [ebp-0x4]
10020f38:	push   DWORD PTR [ebp-0x8]
10020f3b:	mov    esi,DWORD PTR [ebp+0x8]
10020f3e:	jmp    0x10020eff
10020f40:	mov    eax,DWORD PTR [ebp-0x10]
10020f43:	mov    DWORD PTR [edi],eax
10020f45:	mov    DWORD PTR [edi+0x4],esi
10020f48:	mov    BYTE PTR [edi+0x8],0x0
10020f4c:	pop    esi
10020f4d:	mov    eax,edi
10020f4f:	pop    ebx
10020f50:	leave  
10020f51:	ret    0x8
10020f54:	push   ebp
10020f55:	mov    ebp,esp
10020f57:	sub    esp,0x2c
10020f5a:	push   ebx
10020f5b:	push   esi
10020f5c:	push   edi
10020f5d:	mov    edi,ecx
10020f5f:	mov    ebx,eax
10020f61:	mov    eax,DWORD PTR [edi+0x4]
10020f64:	mov    esi,DWORD PTR [eax+0x4]
10020f67:	mov    DWORD PTR [ebp-0x8],eax
10020f6a:	jmp    0x10020f82
10020f6c:	lea    eax,[esi+0xc]
10020f6f:	call   0x1001f107
10020f74:	test   al,al
10020f76:	je     0x10020f7f
10020f78:	mov    DWORD PTR [ebp-0x8],esi
10020f7b:	mov    esi,DWORD PTR [esi]
10020f7d:	jmp    0x10020f82
10020f7f:	mov    esi,DWORD PTR [esi+0x8]
10020f82:	cmp    BYTE PTR [esi+0x2d],0x0
10020f86:	je     0x10020f6c
10020f88:	push   ebx
10020f89:	lea    eax,[ebp-0x18]
10020f8c:	push   eax
10020f8d:	call   0x10021483
10020f92:	mov    ecx,DWORD PTR [eax+0x4]
10020f95:	mov    ebx,DWORD PTR [eax]
10020f97:	mov    eax,DWORD PTR [eax+0x4]
10020f9a:	and    DWORD PTR [ebp-0x4],0x0
10020f9e:	mov    DWORD PTR [ebp-0x24],ecx
10020fa1:	mov    ecx,ebx
10020fa3:	mov    DWORD PTR [ebp-0x10],ecx
10020fa6:	mov    DWORD PTR [ebp-0xc],eax
10020fa9:	cmp    DWORD PTR [ebp-0x10],0x0
10020fad:	je     0x10020fb4
10020faf:	cmp    DWORD PTR [ebp-0x10],edi
10020fb2:	je     0x10020fb9
10020fb4:	call   0x10043605
10020fb9:	mov    eax,DWORD PTR [ebp-0x8]
10020fbc:	cmp    DWORD PTR [ebp-0xc],eax
10020fbf:	je     0x10020fce
10020fc1:	inc    DWORD PTR [ebp-0x4]
10020fc4:	lea    esi,[ebp-0x10]
10020fc7:	call   0x10021e24
10020fcc:	jmp    0x10020fa9
10020fce:	push   eax
10020fcf:	push   edi
10020fd0:	push   DWORD PTR [ebp-0x24]
10020fd3:	push   ebx
10020fd4:	lea    ebx,[ebp-0x18]
10020fd7:	call   0x100213d7
10020fdc:	mov    eax,DWORD PTR [ebp-0x4]
10020fdf:	pop    edi
10020fe0:	pop    esi
10020fe1:	pop    ebx
10020fe2:	leave  
10020fe3:	ret    
10020fe4:	push   ebx
10020fe5:	lea    ebx,[eax+0xc]
10020fe8:	cmp    DWORD PTR [ebx],0x0
10020feb:	push   esi
10020fec:	push   edi
10020fed:	je     0x10020ffe
10020fef:	lea    esi,[eax+0x8]
10020ff2:	cmp    DWORD PTR [esi],0x0
10020ff5:	je     0x10020ffe
10020ff7:	xor    edi,edi
10020ff9:	call   0x10007961
10020ffe:	mov    eax,DWORD PTR [ebx]
10021000:	test   eax,eax
10021002:	je     0x10021018
10021004:	mov    ecx,DWORD PTR [eax]
10021006:	push   eax
10021007:	call   DWORD PTR [ecx+0x1c]
1002100a:	cmp    DWORD PTR [ebx],0x0
1002100d:	je     0x10021018
1002100f:	xor    edi,edi
10021011:	mov    esi,ebx
10021013:	call   0x10007961
10021018:	pop    edi
10021019:	pop    esi
1002101a:	pop    ebx
1002101b:	ret    
1002101c:	push   ebp
1002101d:	mov    ebp,esp
1002101f:	sub    esp,0x18
10021022:	push   ebx
10021023:	mov    ebx,eax
10021025:	xor    eax,eax
10021027:	cmp    DWORD PTR ds:0x10082fcc,eax
1002102d:	push   esi
1002102e:	push   edi
1002102f:	mov    DWORD PTR [ebp-0xc],eax
10021032:	mov    DWORD PTR [ebp-0x8],eax
10021035:	jne    0x1002104d
10021037:	mov    ecx,DWORD PTR ds:0x10082fc8
1002103d:	push   ebx
1002103e:	push   0x1
10021040:	push   DWORD PTR [ebp+0x8]
10021043:	call   0x1002178a
10021048:	mov    eax,DWORD PTR [ebp+0x8]
1002104b:	jmp    0x1002108f
1002104d:	mov    eax,ds:0x10082fc8
10021052:	mov    eax,DWORD PTR [eax]
10021054:	lea    edi,[ebp-0x14]
10021057:	lea    esi,[ebp+0xc]
1002105a:	mov    DWORD PTR [ebp-0x10],eax
1002105d:	mov    DWORD PTR [ebp-0x14],0x10082fc4
10021064:	call   0x10004b0c
10021069:	test   al,al
1002106b:	je     0x10021096
1002106d:	mov    eax,DWORD PTR [ebx]
1002106f:	mov    ecx,DWORD PTR [ebp+0x10]
10021072:	cmp    eax,DWORD PTR [ecx+0xc]
10021075:	jb     0x1002103d
10021077:	push   ebx
10021078:	lea    ebx,[ebp-0x18]
1002107b:	call   0x10021613
10021080:	mov    edx,DWORD PTR [eax]
10021082:	mov    ecx,DWORD PTR [ebp+0x8]
10021085:	mov    DWORD PTR [ecx],edx
10021087:	mov    eax,DWORD PTR [eax+0x4]
1002108a:	mov    DWORD PTR [ecx+0x4],eax
1002108d:	mov    eax,ecx
1002108f:	pop    edi
10021090:	pop    esi
10021091:	pop    ebx
10021092:	leave  
10021093:	ret    0xc
10021096:	mov    eax,ds:0x10082fc8
1002109b:	lea    edi,[ebp-0x14]
1002109e:	lea    esi,[ebp+0xc]
100210a1:	mov    DWORD PTR [ebp-0x10],eax
100210a4:	mov    DWORD PTR [ebp-0x14],0x10082fc4
100210ab:	call   0x10004b0c
100210b0:	test   al,al
100210b2:	je     0x100210cb
100210b4:	mov    eax,ds:0x10082fc8
100210b9:	mov    ecx,DWORD PTR [eax+0x8]
100210bc:	mov    eax,DWORD PTR [ecx+0xc]
100210bf:	cmp    eax,DWORD PTR [ebx]
100210c1:	jae    0x10021077
100210c3:	push   ebx
100210c4:	push   0x0
100210c6:	jmp    0x10021040
100210cb:	mov    ecx,DWORD PTR [ebx]
100210cd:	mov    edi,DWORD PTR [ebp+0x10]
100210d0:	cmp    DWORD PTR [edi+0xc],ecx
100210d3:	jbe    0x10021107
100210d5:	mov    eax,DWORD PTR [ebp+0xc]
100210d8:	lea    esi,[ebp-0xc]
100210db:	mov    DWORD PTR [ebp-0xc],eax
100210de:	mov    DWORD PTR [ebp-0x8],edi
100210e1:	call   0x100218e4
100210e6:	mov    ecx,DWORD PTR [ebx]
100210e8:	mov    eax,DWORD PTR [eax+0x4]
100210eb:	cmp    DWORD PTR [eax+0xc],ecx
100210ee:	jae    0x10021104
100210f0:	mov    ecx,DWORD PTR [ebp-0x8]
100210f3:	mov    eax,DWORD PTR [ecx+0x8]
100210f6:	cmp    BYTE PTR [eax+0x21],0x0
100210fa:	push   ebx
100210fb:	jne    0x100210c4
100210fd:	mov    ecx,edi
100210ff:	jmp    0x1002103e
10021104:	cmp    DWORD PTR [edi+0xc],ecx
10021107:	jae    0x10021077
1002110d:	mov    eax,DWORD PTR [ebp+0xc]
10021110:	mov    DWORD PTR [ebp-0xc],eax
10021113:	mov    eax,ds:0x10082fc8
10021118:	lea    esi,[ebp-0xc]
1002111b:	mov    DWORD PTR [ebp-0x8],edi
1002111e:	mov    DWORD PTR [ebp-0x10],eax
10021121:	mov    DWORD PTR [ebp-0x14],0x10082fc4
10021128:	call   0x10021214
1002112d:	lea    edi,[ebp-0x14]
10021130:	mov    esi,eax
10021132:	call   0x10004b0c
10021137:	test   al,al
10021139:	mov    eax,DWORD PTR [ebp-0x8]
1002113c:	jne    0x10021149
1002113e:	mov    ecx,DWORD PTR [ebx]
10021140:	cmp    ecx,DWORD PTR [eax+0xc]
10021143:	jae    0x10021077
10021149:	mov    ecx,DWORD PTR [ebp+0x10]
1002114c:	mov    edx,DWORD PTR [ecx+0x8]
1002114f:	cmp    BYTE PTR [edx+0x21],0x0
10021153:	push   ebx
10021154:	jne    0x100210c4
1002115a:	mov    ecx,eax
1002115c:	jmp    0x1002103e
10021161:	mov    edx,DWORD PTR ds:0x10082fc8
10021167:	mov    ecx,DWORD PTR [edx+0x4]
1002116a:	cmp    BYTE PTR [ecx+0x21],0x0
1002116e:	jne    0x1002118c
10021170:	push   esi
10021171:	mov    esi,DWORD PTR [esp+0x8]
10021175:	mov    esi,DWORD PTR [esi]
10021177:	cmp    DWORD PTR [ecx+0xc],esi
1002117a:	jae    0x10021181
1002117c:	mov    ecx,DWORD PTR [ecx+0x8]
1002117f:	jmp    0x10021185
10021181:	mov    edx,ecx
10021183:	mov    ecx,DWORD PTR [ecx]
10021185:	cmp    BYTE PTR [ecx+0x21],0x0
10021189:	je     0x10021177
1002118b:	pop    esi
1002118c:	mov    DWORD PTR [eax+0x4],edx
1002118f:	mov    DWORD PTR [eax],0x10082fc4
10021195:	ret    0x4
10021198:	mov    eax,DWORD PTR [ecx+0x8]
1002119b:	mov    edx,DWORD PTR [eax]
1002119d:	mov    DWORD PTR [ecx+0x8],edx
100211a0:	mov    edx,DWORD PTR [eax]
100211a2:	cmp    BYTE PTR [edx+0x21],0x0
100211a6:	jne    0x100211ab
100211a8:	mov    DWORD PTR [edx+0x4],ecx
100211ab:	mov    edx,DWORD PTR [ecx+0x4]
100211ae:	mov    DWORD PTR [eax+0x4],edx
100211b1:	mov    edx,DWORD PTR ds:0x10082fc8
100211b7:	cmp    ecx,DWORD PTR [edx+0x4]
100211ba:	jne    0x100211c1
100211bc:	mov    DWORD PTR [edx+0x4],eax
100211bf:	jmp    0x100211cf
100211c1:	mov    edx,DWORD PTR [ecx+0x4]
100211c4:	cmp    ecx,DWORD PTR [edx]
100211c6:	jne    0x100211cc
100211c8:	mov    DWORD PTR [edx],eax
100211ca:	jmp    0x100211cf
100211cc:	mov    DWORD PTR [edx+0x8],eax
100211cf:	mov    DWORD PTR [eax],ecx
100211d1:	mov    DWORD PTR [ecx+0x4],eax
100211d4:	ret    
100211d5:	mov    eax,DWORD PTR [ecx]
100211d7:	mov    edx,DWORD PTR [eax+0x8]
100211da:	mov    DWORD PTR [ecx],edx
100211dc:	mov    edx,DWORD PTR [eax+0x8]
100211df:	cmp    BYTE PTR [edx+0x21],0x0
100211e3:	jne    0x100211e8
100211e5:	mov    DWORD PTR [edx+0x4],ecx
100211e8:	mov    edx,DWORD PTR [ecx+0x4]
100211eb:	mov    DWORD PTR [eax+0x4],edx
100211ee:	mov    edx,DWORD PTR ds:0x10082fc8
100211f4:	cmp    ecx,DWORD PTR [edx+0x4]
100211f7:	jne    0x100211fe
100211f9:	mov    DWORD PTR [edx+0x4],eax
100211fc:	jmp    0x1002120d
100211fe:	mov    edx,DWORD PTR [ecx+0x4]
10021201:	cmp    ecx,DWORD PTR [edx+0x8]
10021204:	jne    0x1002120b
10021206:	mov    DWORD PTR [edx+0x8],eax
10021209:	jmp    0x1002120d
1002120b:	mov    DWORD PTR [edx],eax
1002120d:	mov    DWORD PTR [eax+0x8],ecx
10021210:	mov    DWORD PTR [ecx+0x4],eax
10021213:	ret    
10021214:	push   ebx
10021215:	xor    ebx,ebx
10021217:	cmp    DWORD PTR [esi],ebx
10021219:	jne    0x10021220
1002121b:	call   0x10043605
10021220:	mov    eax,DWORD PTR [esi+0x4]
10021223:	cmp    BYTE PTR [eax+0x21],bl
10021226:	je     0x1002122f
10021228:	call   0x10043605
1002122d:	jmp    0x1002125d
1002122f:	mov    ecx,DWORD PTR [eax+0x8]
10021232:	cmp    BYTE PTR [ecx+0x21],bl
10021235:	jne    0x10021252
10021237:	jmp    0x1002123b
10021239:	mov    ecx,eax
1002123b:	mov    eax,DWORD PTR [ecx]
1002123d:	cmp    BYTE PTR [eax+0x21],bl
10021240:	je     0x10021239
10021242:	mov    DWORD PTR [esi+0x4],ecx
10021245:	jmp    0x1002125d
10021247:	mov    ecx,DWORD PTR [esi+0x4]
1002124a:	cmp    ecx,DWORD PTR [eax+0x8]
1002124d:	jne    0x1002125a
1002124f:	mov    DWORD PTR [esi+0x4],eax
10021252:	mov    eax,DWORD PTR [eax+0x4]
10021255:	cmp    BYTE PTR [eax+0x21],bl
10021258:	je     0x10021247
1002125a:	mov    DWORD PTR [esi+0x4],eax
1002125d:	mov    eax,esi
1002125f:	pop    ebx
10021260:	ret    
10021261:	push   0x0
10021263:	mov    eax,0x1006067e
10021268:	call   0x10059df5
1002126d:	mov    edi,DWORD PTR [ebp+0x8]
10021270:	and    DWORD PTR [edi+0x4],0x0
10021274:	lea    esi,[edi+0x8]
10021277:	mov    DWORD PTR [edi],0x10071868
1002127d:	call   0x1001c1a7
10021282:	mov    DWORD PTR [esi],0x10071938
10021288:	mov    DWORD PTR [esi+0x24],0x1007194c
1002128f:	mov    DWORD PTR [esi+0x28],0x10071978
10021296:	mov    DWORD PTR [esi+0x2c],0x100719a0
1002129d:	mov    DWORD PTR [esi+0x30],0x10071a18
100212a4:	mov    DWORD PTR [esi+0x34],0x10071a40
100212ab:	mov    DWORD PTR [esi+0x38],0x10071a58
100212b2:	mov    DWORD PTR [esi+0x40],0x10071a70
100212b9:	mov    DWORD PTR [esi+0x44],0x10071a80
100212c0:	mov    DWORD PTR [esi+0x48],0x10071aa0
100212c7:	mov    DWORD PTR [esi+0x4c],0x10071ae8
100212ce:	mov    DWORD PTR [esi+0x50],edi
100212d1:	and    DWORD PTR [ebp-0x4],0x0
100212d5:	mov    ecx,DWORD PTR ds:0x10082c64
100212db:	mov    eax,DWORD PTR [ecx]
100212dd:	call   DWORD PTR [eax+0x4]
100212e0:	mov    eax,edi
100212e2:	call   0x10059ecd
100212e7:	ret    0x4
100212ea:	push   0x4
100212ec:	mov    eax,0x10060658
100212f1:	call   0x10059df5
100212f6:	mov    DWORD PTR [ebp-0x10],ecx
100212f9:	mov    DWORD PTR [ecx],0x10071868
100212ff:	and    DWORD PTR [ebp-0x4],0x0
10021303:	lea    esi,[ecx+0x8]
10021306:	mov    DWORD PTR [ecx+0x4],0xc0000001
1002130d:	mov    ecx,esi
1002130f:	call   0x1001c7dc
10021314:	mov    ecx,DWORD PTR ds:0x10082c64
1002131a:	mov    eax,DWORD PTR [ecx]
1002131c:	call   DWORD PTR [eax+0x8]
1002131f:	or     DWORD PTR [ebp-0x4],0xffffffff
10021323:	mov    eax,esi
10021325:	call   0x1001c26c
1002132a:	call   0x10059ecd
1002132f:	ret    
10021330:	push   ebp
10021331:	mov    ebp,esp
10021333:	push   ebx
10021334:	mov    ebx,DWORD PTR [ebp+0x10]
10021337:	push   esi
10021338:	xor    esi,esi
1002133a:	cmp    ebx,esi
1002133c:	jne    0x10021345
1002133e:	mov    eax,0x80004003
10021343:	jmp    0x10021375
10021345:	mov    eax,DWORD PTR [ebp+0xc]
10021348:	mov    DWORD PTR [ebx],esi
1002134a:	call   0x10010800
1002134f:	test   eax,eax
10021351:	mov    eax,DWORD PTR [ebp+0x8]
10021354:	je     0x10021360
10021356:	mov    DWORD PTR [ebx],eax
10021358:	mov    ecx,DWORD PTR [eax]
1002135a:	push   eax
1002135b:	call   DWORD PTR [ecx+0x4]
1002135e:	jmp    0x10021373
10021360:	push   DWORD PTR [ebp+0xc]
10021363:	add    eax,0x8
10021366:	push   eax
10021367:	mov    eax,0x10071640
1002136c:	call   0x10010824
10021371:	mov    esi,eax
10021373:	mov    eax,esi
10021375:	pop    esi
10021376:	pop    ebx
10021377:	pop    ebp
10021378:	ret    0xc
1002137b:	mov    eax,DWORD PTR [esp+0x4]
1002137f:	mov    eax,DWORD PTR [eax+0x2c]
10021382:	mov    ecx,DWORD PTR [eax]
10021384:	push   eax
10021385:	call   DWORD PTR [ecx+0x4]
10021388:	ret    0x4
1002138b:	mov    eax,DWORD PTR [esp+0x4]
1002138f:	mov    eax,DWORD PTR [eax+0x2c]
10021392:	mov    ecx,DWORD PTR [eax]
10021394:	push   eax
10021395:	call   DWORD PTR [ecx+0x8]
10021398:	ret    0x4
1002139b:	push   DWORD PTR [esp+0xc]
1002139f:	mov    eax,DWORD PTR [esp+0x8]
100213a3:	mov    eax,DWORD PTR [eax+0x2c]
100213a6:	push   DWORD PTR [esp+0xc]
100213aa:	mov    ecx,DWORD PTR [eax]
100213ac:	push   eax
100213ad:	call   DWORD PTR [ecx]
100213af:	ret    0xc
100213b2:	mov    eax,DWORD PTR [ecx+0x50]
100213b5:	ret    
100213b6:	push   esi
100213b7:	mov    esi,ecx
100213b9:	call   0x100212ea
100213be:	test   BYTE PTR [esp+0x8],0x1
100213c3:	je     0x100213cc
100213c5:	push   esi
100213c6:	call   0x10042fe2
100213cb:	pop    ecx
100213cc:	mov    eax,esi
100213ce:	pop    esi
100213cf:	ret    0x4
100213d2:	jmp    0x1001c26c
100213d7:	push   ebp
100213d8:	mov    ebp,esp
100213da:	mov    eax,DWORD PTR [edi+0x4]
100213dd:	sub    esp,0x14
100213e0:	cmp    DWORD PTR [ebp+0x8],0x0
100213e4:	push   esi
100213e5:	mov    esi,DWORD PTR [eax]
100213e7:	je     0x100213ee
100213e9:	cmp    DWORD PTR [ebp+0x8],edi
100213ec:	je     0x100213f3
100213ee:	call   0x10043605
100213f3:	cmp    DWORD PTR [ebp+0xc],esi
100213f6:	jne    0x1002143b
100213f8:	cmp    DWORD PTR [ebp+0x10],0x0
100213fc:	mov    esi,DWORD PTR [edi+0x4]
100213ff:	je     0x10021406
10021401:	cmp    DWORD PTR [ebp+0x10],edi
10021404:	je     0x1002140b
10021406:	call   0x10043605
1002140b:	cmp    DWORD PTR [ebp+0x14],esi
1002140e:	jne    0x1002143b
10021410:	mov    eax,DWORD PTR [edi+0x4]
10021413:	push   DWORD PTR [eax+0x4]
10021416:	mov    ecx,edi
10021418:	call   0x10021dad
1002141d:	mov    eax,DWORD PTR [edi+0x4]
10021420:	mov    DWORD PTR [eax+0x4],eax
10021423:	mov    eax,DWORD PTR [edi+0x4]
10021426:	and    DWORD PTR [edi+0x8],0x0
1002142a:	mov    DWORD PTR [eax],eax
1002142c:	mov    eax,DWORD PTR [edi+0x4]
1002142f:	mov    DWORD PTR [eax+0x8],eax
10021432:	mov    eax,DWORD PTR [edi+0x4]
10021435:	mov    eax,DWORD PTR [eax]
10021437:	mov    DWORD PTR [ebx],edi
10021439:	jmp    0x10021479
1002143b:	mov    eax,DWORD PTR [ebp+0x8]
1002143e:	test   eax,eax
10021440:	je     0x10021447
10021442:	cmp    eax,DWORD PTR [ebp+0x10]
10021445:	je     0x1002144c
10021447:	call   0x10043605
1002144c:	mov    eax,DWORD PTR [ebp+0xc]
1002144f:	cmp    eax,DWORD PTR [ebp+0x14]
10021452:	mov    ecx,DWORD PTR [ebp+0x8]
10021455:	je     0x10021477
10021457:	lea    esi,[ebp+0x8]
1002145a:	mov    DWORD PTR [ebp-0x8],ecx
1002145d:	mov    DWORD PTR [ebp-0x4],eax
10021460:	call   0x10021e24
10021465:	push   DWORD PTR [ebp-0x4]
10021468:	lea    eax,[ebp-0x10]
1002146b:	push   DWORD PTR [ebp-0x8]
1002146e:	push   eax
1002146f:	push   edi
10021470:	call   0x100219c4
10021475:	jmp    0x1002143b
10021477:	mov    DWORD PTR [ebx],ecx
10021479:	mov    DWORD PTR [ebx+0x4],eax
1002147c:	mov    eax,ebx
1002147e:	pop    esi
1002147f:	leave  
10021480:	ret    0x10
10021483:	push   ebp
10021484:	mov    ebp,esp
10021486:	push   ecx
10021487:	mov    eax,DWORD PTR [edi+0x4]
1002148a:	push   esi
1002148b:	mov    esi,DWORD PTR [eax+0x4]
1002148e:	cmp    BYTE PTR [esi+0x2d],0x0
10021492:	mov    DWORD PTR [ebp-0x4],eax
10021495:	jne    0x100214b8
10021497:	push   ebx
10021498:	mov    eax,DWORD PTR [ebp+0xc]
1002149b:	lea    ebx,[esi+0xc]
1002149e:	call   0x1001f107
100214a3:	test   al,al
100214a5:	je     0x100214ac
100214a7:	mov    esi,DWORD PTR [esi+0x8]
100214aa:	jmp    0x100214b1
100214ac:	mov    DWORD PTR [ebp-0x4],esi
100214af:	mov    esi,DWORD PTR [esi]
100214b1:	cmp    BYTE PTR [esi+0x2d],0x0
100214b5:	je     0x10021498
100214b7:	pop    ebx
100214b8:	mov    eax,DWORD PTR [ebp+0x8]
100214bb:	mov    ecx,DWORD PTR [ebp-0x4]
100214be:	mov    DWORD PTR [eax+0x4],ecx
100214c1:	mov    DWORD PTR [eax],edi
100214c3:	pop    esi
100214c4:	leave  
100214c5:	ret    0x8
100214c8:	push   0x48
100214ca:	mov    eax,0x100607fe
100214cf:	call   0x10059df5
100214d4:	mov    edi,ecx
100214d6:	cmp    DWORD PTR [esi+0x8],0x7fffffe
100214dd:	jb     0x10021511
100214df:	push   0x1006e0f8
100214e4:	lea    ecx,[ebp-0x2c]
100214e7:	call   0x100011a7
100214ec:	and    DWORD PTR [ebp-0x4],0x0
100214f0:	lea    eax,[ebp-0x2c]
100214f3:	push   eax
100214f4:	lea    ecx,[ebp-0x54]
100214f7:	call   0x10001077
100214fc:	push   0x100764d0
10021501:	lea    eax,[ebp-0x54]
10021504:	push   eax
10021505:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1002150c:	call   0x10047942
10021511:	mov    eax,DWORD PTR [esi+0x4]
10021514:	mov    ecx,DWORD PTR [ebp+0x10]
10021517:	push   eax
10021518:	push   edi
10021519:	push   eax
1002151a:	call   0x10021cdc
1002151f:	inc    DWORD PTR [esi+0x8]
10021522:	mov    ebx,eax
10021524:	mov    eax,DWORD PTR [esi+0x4]
10021527:	cmp    edi,eax
10021529:	jne    0x10021538
1002152b:	mov    DWORD PTR [eax+0x4],ebx
1002152e:	mov    eax,DWORD PTR [esi+0x4]
10021531:	mov    DWORD PTR [eax],ebx
10021533:	mov    eax,DWORD PTR [esi+0x4]
10021536:	jmp    0x10021556
10021538:	cmp    BYTE PTR [ebp+0xc],0x0
1002153c:	je     0x1002154b
1002153e:	mov    DWORD PTR [edi],ebx
10021540:	mov    eax,DWORD PTR [esi+0x4]
10021543:	cmp    edi,DWORD PTR [eax]
10021545:	jne    0x10021559
10021547:	mov    DWORD PTR [eax],ebx
10021549:	jmp    0x10021559
1002154b:	mov    DWORD PTR [edi+0x8],ebx
1002154e:	mov    eax,DWORD PTR [esi+0x4]
10021551:	cmp    edi,DWORD PTR [eax+0x8]
10021554:	jne    0x10021559
10021556:	mov    DWORD PTR [eax+0x8],ebx
10021559:	mov    edi,ebx
1002155b:	lea    eax,[ebx+0x4]
1002155e:	jmp    0x100215ed
10021563:	mov    ecx,DWORD PTR [eax]
10021565:	mov    edx,DWORD PTR [ecx+0x4]
10021568:	cmp    ecx,DWORD PTR [edx]
1002156a:	jne    0x100215a1
1002156c:	mov    edx,DWORD PTR [edx+0x8]
1002156f:	cmp    BYTE PTR [edx+0x2c],0x0
10021573:	je     0x100215a9
10021575:	cmp    edi,DWORD PTR [ecx+0x8]
10021578:	jne    0x10021582
1002157a:	push   esi
1002157b:	mov    edi,ecx
1002157d:	call   0x10021c5a
10021582:	mov    eax,DWORD PTR [edi+0x4]
10021585:	mov    BYTE PTR [eax+0x2c],0x1
10021589:	mov    eax,DWORD PTR [edi+0x4]
1002158c:	mov    eax,DWORD PTR [eax+0x4]
1002158f:	mov    BYTE PTR [eax+0x2c],0x0
10021593:	mov    eax,DWORD PTR [edi+0x4]
10021596:	mov    ecx,DWORD PTR [eax+0x4]
10021599:	push   esi
1002159a:	call   0x10021c9a
1002159f:	jmp    0x100215ea
100215a1:	mov    edx,DWORD PTR [edx]
100215a3:	cmp    BYTE PTR [edx+0x2c],0x0
100215a7:	jne    0x100215c1
100215a9:	mov    BYTE PTR [ecx+0x2c],0x1
100215ad:	mov    BYTE PTR [edx+0x2c],0x1
100215b1:	mov    ecx,DWORD PTR [eax]
100215b3:	mov    ecx,DWORD PTR [ecx+0x4]
100215b6:	mov    BYTE PTR [ecx+0x2c],0x0
100215ba:	mov    eax,DWORD PTR [eax]
100215bc:	mov    edi,DWORD PTR [eax+0x4]
100215bf:	jmp    0x100215ea
100215c1:	cmp    edi,DWORD PTR [ecx]
100215c3:	jne    0x100215cd
100215c5:	push   esi
100215c6:	mov    edi,ecx
100215c8:	call   0x10021c9a
100215cd:	mov    eax,DWORD PTR [edi+0x4]
100215d0:	mov    BYTE PTR [eax+0x2c],0x1
100215d4:	mov    eax,DWORD PTR [edi+0x4]
100215d7:	mov    eax,DWORD PTR [eax+0x4]
100215da:	mov    BYTE PTR [eax+0x2c],0x0
100215de:	mov    eax,DWORD PTR [edi+0x4]
100215e1:	mov    ecx,DWORD PTR [eax+0x4]
100215e4:	push   esi
100215e5:	call   0x10021c5a
100215ea:	lea    eax,[edi+0x4]
100215ed:	mov    ecx,DWORD PTR [eax]
100215ef:	cmp    BYTE PTR [ecx+0x2c],0x0
100215f3:	je     0x10021563
100215f9:	mov    eax,DWORD PTR [esi+0x4]
100215fc:	mov    eax,DWORD PTR [eax+0x4]
100215ff:	mov    BYTE PTR [eax+0x2c],0x1
10021603:	mov    eax,DWORD PTR [ebp+0x8]
10021606:	mov    DWORD PTR [eax+0x4],ebx
10021609:	mov    DWORD PTR [eax],esi
1002160b:	call   0x10059ecd
10021610:	ret    0xc
10021613:	push   ebp
10021614:	mov    ebp,esp
10021616:	sub    esp,0x1c
10021619:	push   esi
1002161a:	mov    esi,DWORD PTR ds:0x10082fc8
10021620:	mov    eax,DWORD PTR [esi+0x4]
10021623:	cmp    BYTE PTR [eax+0x21],0x0
10021627:	push   edi
10021628:	mov    DWORD PTR [ebp-0xc],esi
1002162b:	mov    BYTE PTR [ebp-0x8],0x1
1002162f:	jne    0x10021653
10021631:	mov    ecx,DWORD PTR [ebp+0x8]
10021634:	mov    edi,DWORD PTR [ecx]
10021636:	cmp    edi,DWORD PTR [eax+0xc]
10021639:	mov    DWORD PTR [ebp-0xc],eax
1002163c:	setb   BYTE PTR [ebp-0x8]
10021640:	cmp    BYTE PTR [ebp-0x8],0x0
10021644:	je     0x1002164a
10021646:	mov    eax,DWORD PTR [eax]
10021648:	jmp    0x1002164d
1002164a:	mov    eax,DWORD PTR [eax+0x8]
1002164d:	cmp    BYTE PTR [eax+0x21],0x0
10021651:	je     0x10021636
10021653:	cmp    BYTE PTR [ebp-0x8],0x0
10021657:	mov    edi,DWORD PTR [ebp-0xc]
1002165a:	mov    eax,0x10082fc4
1002165f:	mov    DWORD PTR [ebp-0x10],edi
10021662:	mov    DWORD PTR [ebp-0x14],eax
10021665:	je     0x100216aa
10021667:	mov    ecx,DWORD PTR [esi]
10021669:	lea    edi,[ebp-0x1c]
1002166c:	lea    esi,[ebp-0x14]
1002166f:	mov    DWORD PTR [ebp-0x18],ecx
10021672:	mov    DWORD PTR [ebp-0x1c],eax
10021675:	call   0x10004b0c
1002167a:	test   al,al
1002167c:	je     0x1002169f
1002167e:	push   DWORD PTR [ebp+0x8]
10021681:	push   0x1
10021683:	mov    ecx,DWORD PTR [ebp-0xc]
10021686:	lea    eax,[ebp-0x1c]
10021689:	push   eax
1002168a:	call   0x1002178a
1002168f:	mov    ecx,DWORD PTR [eax]
10021691:	mov    eax,DWORD PTR [eax+0x4]
10021694:	mov    DWORD PTR [ebx],ecx
10021696:	mov    DWORD PTR [ebx+0x4],eax
10021699:	mov    BYTE PTR [ebx+0x8],0x1
1002169d:	jmp    0x100216c6
1002169f:	lea    esi,[ebp-0x14]
100216a2:	call   0x100218e4
100216a7:	mov    edi,DWORD PTR [ebp-0x10]
100216aa:	mov    ecx,DWORD PTR [edi+0xc]
100216ad:	mov    eax,DWORD PTR [ebp+0x8]
100216b0:	cmp    ecx,DWORD PTR [eax]
100216b2:	jae    0x100216ba
100216b4:	push   eax
100216b5:	push   DWORD PTR [ebp-0x8]
100216b8:	jmp    0x10021683
100216ba:	mov    eax,DWORD PTR [ebp-0x14]
100216bd:	mov    DWORD PTR [ebx],eax
100216bf:	mov    DWORD PTR [ebx+0x4],edi
100216c2:	mov    BYTE PTR [ebx+0x8],0x0
100216c6:	pop    edi
100216c7:	mov    eax,ebx
100216c9:	pop    esi
100216ca:	leave  
100216cb:	ret    0x4
100216ce:	push   ebp
100216cf:	mov    ebp,esp
100216d1:	sub    esp,0x10
100216d4:	mov    eax,ds:0x10082fc8
100216d9:	mov    eax,DWORD PTR [eax]
100216db:	push   ebx
100216dc:	push   esi
100216dd:	push   edi
100216de:	mov    ebx,0x10082fc4
100216e3:	lea    edi,[ebp-0xc]
100216e6:	lea    esi,[ebp+0xc]
100216e9:	mov    DWORD PTR [ebp-0x8],eax
100216ec:	mov    DWORD PTR [ebp-0xc],ebx
100216ef:	call   0x10004b0c
100216f4:	test   al,al
100216f6:	je     0x10021766
100216f8:	mov    eax,ds:0x10082fc8
100216fd:	lea    edi,[ebp-0xc]
10021700:	lea    esi,[ebp+0x14]
10021703:	mov    DWORD PTR [ebp-0x8],eax
10021706:	mov    DWORD PTR [ebp-0xc],ebx
10021709:	call   0x10004b0c
1002170e:	test   al,al
10021710:	je     0x10021766
10021712:	mov    eax,ds:0x10082fc8
10021717:	push   DWORD PTR [eax+0x4]
1002171a:	mov    ecx,ebx
1002171c:	call   0x10021df2
10021721:	mov    eax,ds:0x10082fc8
10021726:	mov    DWORD PTR [eax+0x4],eax
10021729:	mov    eax,ds:0x10082fc8
1002172e:	and    DWORD PTR ds:0x10082fcc,0x0
10021735:	mov    DWORD PTR [eax],eax
10021737:	mov    eax,ds:0x10082fc8
1002173c:	mov    DWORD PTR [eax+0x8],eax
1002173f:	mov    eax,ds:0x10082fc8
10021744:	mov    ecx,DWORD PTR [eax]
10021746:	mov    eax,DWORD PTR [ebp+0x8]
10021749:	mov    DWORD PTR [eax],ebx
1002174b:	jmp    0x10021780
1002174d:	mov    edi,DWORD PTR [ebp+0xc]
10021750:	mov    ebx,DWORD PTR [ebp+0x10]
10021753:	lea    esi,[ebp+0xc]
10021756:	call   0x10021214
1002175b:	push   ebx
1002175c:	push   edi
1002175d:	lea    eax,[ebp-0xc]
10021760:	push   eax
10021761:	call   0x10020a7b
10021766:	lea    edi,[ebp+0x14]
10021769:	lea    esi,[ebp+0xc]
1002176c:	call   0x10004b0c
10021771:	test   al,al
10021773:	je     0x1002174d
10021775:	mov    ecx,DWORD PTR [ebp+0xc]
10021778:	mov    eax,DWORD PTR [ebp+0x8]
1002177b:	mov    DWORD PTR [eax],ecx
1002177d:	mov    ecx,DWORD PTR [ebp+0x10]
10021780:	pop    edi
10021781:	pop    esi
10021782:	mov    DWORD PTR [eax+0x4],ecx
10021785:	pop    ebx
10021786:	leave  
10021787:	ret    0x14
1002178a:	push   0x48
1002178c:	mov    eax,0x100607fe
10021791:	call   0x10059df5
10021796:	mov    esi,ecx
10021798:	cmp    DWORD PTR ds:0x10082fcc,0xccccccb
100217a2:	jb     0x100217d6
100217a4:	push   0x1006e0f8
100217a9:	lea    ecx,[ebp-0x2c]
100217ac:	call   0x100011a7
100217b1:	and    DWORD PTR [ebp-0x4],0x0
100217b5:	lea    eax,[ebp-0x2c]
100217b8:	push   eax
100217b9:	lea    ecx,[ebp-0x54]
100217bc:	call   0x10001077
100217c1:	push   0x100764d0
100217c6:	lea    eax,[ebp-0x54]
100217c9:	push   eax
100217ca:	mov    DWORD PTR [ebp-0x54],0x1006c97c
100217d1:	call   0x10047942
100217d6:	push   DWORD PTR [ebp+0x10]
100217d9:	mov    eax,ds:0x10082fc8
100217de:	push   eax
100217df:	push   esi
100217e0:	push   eax
100217e1:	call   0x10021d72
100217e6:	inc    DWORD PTR ds:0x10082fcc
100217ec:	mov    edi,eax
100217ee:	mov    eax,ds:0x10082fc8
100217f3:	xor    bl,bl
100217f5:	cmp    esi,eax
100217f7:	jne    0x1002180a
100217f9:	mov    DWORD PTR [eax+0x4],edi
100217fc:	mov    eax,ds:0x10082fc8
10021801:	mov    DWORD PTR [eax],edi
10021803:	mov    eax,ds:0x10082fc8
10021808:	jmp    0x1002182b
1002180a:	cmp    BYTE PTR [ebp+0xc],bl
1002180d:	je     0x1002181e
1002180f:	mov    DWORD PTR [esi],edi
10021811:	mov    eax,ds:0x10082fc8
10021816:	cmp    esi,DWORD PTR [eax]
10021818:	jne    0x1002182e
1002181a:	mov    DWORD PTR [eax],edi
1002181c:	jmp    0x1002182e
1002181e:	mov    DWORD PTR [esi+0x8],edi
10021821:	mov    eax,ds:0x10082fc8
10021826:	cmp    esi,DWORD PTR [eax+0x8]
10021829:	jne    0x1002182e
1002182b:	mov    DWORD PTR [eax+0x8],edi
1002182e:	mov    esi,edi
10021830:	lea    eax,[edi+0x4]
10021833:	jmp    0x100218b9
10021838:	mov    ecx,DWORD PTR [eax]
1002183a:	mov    edx,DWORD PTR [ecx+0x4]
1002183d:	cmp    ecx,DWORD PTR [edx]
1002183f:	jne    0x10021872
10021841:	mov    edx,DWORD PTR [edx+0x8]
10021844:	cmp    BYTE PTR [edx+0x20],bl
10021847:	je     0x10021879
10021849:	cmp    esi,DWORD PTR [ecx+0x8]
1002184c:	jne    0x10021855
1002184e:	mov    esi,ecx
10021850:	call   0x10021198
10021855:	mov    eax,DWORD PTR [esi+0x4]
10021858:	mov    BYTE PTR [eax+0x20],0x1
1002185c:	mov    eax,DWORD PTR [esi+0x4]
1002185f:	mov    eax,DWORD PTR [eax+0x4]
10021862:	mov    BYTE PTR [eax+0x20],bl
10021865:	mov    eax,DWORD PTR [esi+0x4]
10021868:	mov    ecx,DWORD PTR [eax+0x4]
1002186b:	call   0x100211d5
10021870:	jmp    0x100218b6
10021872:	mov    edx,DWORD PTR [edx]
10021874:	cmp    BYTE PTR [edx+0x20],bl
10021877:	jne    0x10021890
10021879:	mov    BYTE PTR [ecx+0x20],0x1
1002187d:	mov    BYTE PTR [edx+0x20],0x1
10021881:	mov    ecx,DWORD PTR [eax]
10021883:	mov    ecx,DWORD PTR [ecx+0x4]
10021886:	mov    BYTE PTR [ecx+0x20],bl
10021889:	mov    eax,DWORD PTR [eax]
1002188b:	mov    esi,DWORD PTR [eax+0x4]
1002188e:	jmp    0x100218b6
10021890:	cmp    esi,DWORD PTR [ecx]
10021892:	jne    0x1002189b
10021894:	mov    esi,ecx
10021896:	call   0x100211d5
1002189b:	mov    eax,DWORD PTR [esi+0x4]
1002189e:	mov    BYTE PTR [eax+0x20],0x1
100218a2:	mov    eax,DWORD PTR [esi+0x4]
100218a5:	mov    eax,DWORD PTR [eax+0x4]
100218a8:	mov    BYTE PTR [eax+0x20],bl
100218ab:	mov    eax,DWORD PTR [esi+0x4]
100218ae:	mov    ecx,DWORD PTR [eax+0x4]
100218b1:	call   0x10021198
100218b6:	lea    eax,[esi+0x4]
100218b9:	mov    ecx,DWORD PTR [eax]
100218bb:	cmp    BYTE PTR [ecx+0x20],bl
100218be:	je     0x10021838
100218c4:	mov    eax,ds:0x10082fc8
100218c9:	mov    eax,DWORD PTR [eax+0x4]
100218cc:	mov    BYTE PTR [eax+0x20],0x1
100218d0:	mov    eax,DWORD PTR [ebp+0x8]
100218d3:	mov    DWORD PTR [eax+0x4],edi
100218d6:	mov    DWORD PTR [eax],0x10082fc4
100218dc:	call   0x10059ecd
100218e1:	ret    0xc
100218e4:	push   ebx
100218e5:	xor    ebx,ebx
100218e7:	cmp    DWORD PTR [esi],ebx
100218e9:	jne    0x100218f0
100218eb:	call   0x10043605
100218f0:	mov    eax,DWORD PTR [esi+0x4]
100218f3:	cmp    BYTE PTR [eax+0x21],bl
100218f6:	je     0x10021905
100218f8:	mov    eax,DWORD PTR [eax+0x8]
100218fb:	mov    DWORD PTR [esi+0x4],eax
100218fe:	cmp    BYTE PTR [eax+0x21],bl
10021901:	je     0x10021941
10021903:	jmp    0x10021937
10021905:	mov    ecx,DWORD PTR [eax]
10021907:	cmp    BYTE PTR [ecx+0x21],bl
1002190a:	jne    0x10021927
1002190c:	jmp    0x10021910
1002190e:	mov    ecx,eax
10021910:	mov    eax,DWORD PTR [ecx+0x8]
10021913:	cmp    BYTE PTR [eax+0x21],bl
10021916:	je     0x1002190e
10021918:	mov    DWORD PTR [esi+0x4],ecx
1002191b:	jmp    0x10021941
1002191d:	mov    ecx,DWORD PTR [esi+0x4]
10021920:	cmp    ecx,DWORD PTR [eax]
10021922:	jne    0x1002192f
10021924:	mov    DWORD PTR [esi+0x4],eax
10021927:	mov    eax,DWORD PTR [eax+0x4]
1002192a:	cmp    BYTE PTR [eax+0x21],bl
1002192d:	je     0x1002191d
1002192f:	mov    ecx,DWORD PTR [esi+0x4]
10021932:	cmp    BYTE PTR [ecx+0x21],bl
10021935:	je     0x1002193e
10021937:	call   0x10043605
1002193c:	jmp    0x10021941
1002193e:	mov    DWORD PTR [esi+0x4],eax
10021941:	mov    eax,esi
10021943:	pop    ebx
10021944:	ret    
10021945:	push   ebx
10021946:	xor    ebx,ebx
10021948:	cmp    DWORD PTR [esi],ebx
1002194a:	jne    0x10021951
1002194c:	call   0x10043605
10021951:	mov    eax,DWORD PTR [esi+0x4]
10021954:	cmp    BYTE PTR [eax+0x2d],bl
10021957:	je     0x10021966
10021959:	mov    eax,DWORD PTR [eax+0x8]
1002195c:	mov    DWORD PTR [esi+0x4],eax
1002195f:	cmp    BYTE PTR [eax+0x2d],bl
10021962:	je     0x100219a2
10021964:	jmp    0x10021998
10021966:	mov    ecx,DWORD PTR [eax]
10021968:	cmp    BYTE PTR [ecx+0x2d],bl
1002196b:	jne    0x10021988
1002196d:	jmp    0x10021971
1002196f:	mov    ecx,eax
10021971:	mov    eax,DWORD PTR [ecx+0x8]
10021974:	cmp    BYTE PTR [eax+0x2d],bl
10021977:	je     0x1002196f
10021979:	mov    DWORD PTR [esi+0x4],ecx
1002197c:	jmp    0x100219a2
1002197e:	mov    ecx,DWORD PTR [esi+0x4]
10021981:	cmp    ecx,DWORD PTR [eax]
10021983:	jne    0x10021990
10021985:	mov    DWORD PTR [esi+0x4],eax
10021988:	mov    eax,DWORD PTR [eax+0x4]
1002198b:	cmp    BYTE PTR [eax+0x2d],bl
1002198e:	je     0x1002197e
10021990:	mov    ecx,DWORD PTR [esi+0x4]
10021993:	cmp    BYTE PTR [ecx+0x2d],bl
10021996:	je     0x1002199f
10021998:	call   0x10043605
1002199d:	jmp    0x100219a2
1002199f:	mov    DWORD PTR [esi+0x4],eax
100219a2:	mov    eax,esi
100219a4:	pop    ebx
100219a5:	ret    
100219a6:	push   esi
100219a7:	mov    esi,ecx
100219a9:	mov    eax,esi
100219ab:	call   0x1001c26c
100219b0:	test   BYTE PTR [esp+0x8],0x1
100219b5:	je     0x100219be
100219b7:	push   esi
100219b8:	call   0x10042fe2
100219bd:	pop    ecx
100219be:	mov    eax,esi
100219c0:	pop    esi
100219c1:	ret    0x4
100219c4:	push   0x44
100219c6:	mov    eax,0x10060b46
100219cb:	call   0x10059df5
100219d0:	mov    edi,DWORD PTR [ebp+0x14]
100219d3:	cmp    BYTE PTR [edi+0x2d],0x0
100219d7:	je     0x10021a0b
100219d9:	push   0x1006dcfc
100219de:	lea    ecx,[ebp-0x28]
100219e1:	call   0x100011a7
100219e6:	and    DWORD PTR [ebp-0x4],0x0
100219ea:	lea    eax,[ebp-0x28]
100219ed:	push   eax
100219ee:	lea    ecx,[ebp-0x50]
100219f1:	call   0x10001077
100219f6:	push   0x10076428
100219fb:	lea    eax,[ebp-0x50]
100219fe:	push   eax
100219ff:	mov    DWORD PTR [ebp-0x50],0x1006c988
10021a06:	call   0x10047942
10021a0b:	lea    esi,[ebp+0x10]
10021a0e:	call   0x10021e24
10021a13:	mov    ecx,DWORD PTR [edi]
10021a15:	cmp    BYTE PTR [ecx+0x2d],0x0
10021a19:	je     0x10021a20
10021a1b:	mov    ebx,DWORD PTR [edi+0x8]
10021a1e:	jmp    0x10021a37
10021a20:	mov    eax,DWORD PTR [edi+0x8]
10021a23:	cmp    BYTE PTR [eax+0x2d],0x0
10021a27:	je     0x10021a2d
10021a29:	mov    ebx,ecx
10021a2b:	jmp    0x10021a37
10021a2d:	mov    eax,DWORD PTR [ebp+0x14]
10021a30:	cmp    eax,edi
10021a32:	mov    ebx,DWORD PTR [eax+0x8]
10021a35:	jne    0x10021aad
10021a37:	cmp    BYTE PTR [ebx+0x2d],0x0
10021a3b:	mov    esi,DWORD PTR [edi+0x4]
10021a3e:	jne    0x10021a43
10021a40:	mov    DWORD PTR [ebx+0x4],esi
10021a43:	mov    ecx,DWORD PTR [ebp+0x8]
10021a46:	mov    eax,DWORD PTR [ecx+0x4]
10021a49:	cmp    DWORD PTR [eax+0x4],edi
10021a4c:	jne    0x10021a53
10021a4e:	mov    DWORD PTR [eax+0x4],ebx
10021a51:	jmp    0x10021a5e
10021a53:	cmp    DWORD PTR [esi],edi
10021a55:	jne    0x10021a5b
10021a57:	mov    DWORD PTR [esi],ebx
10021a59:	jmp    0x10021a5e
10021a5b:	mov    DWORD PTR [esi+0x8],ebx
10021a5e:	mov    edx,DWORD PTR [ecx+0x4]
10021a61:	cmp    DWORD PTR [edx],edi
10021a63:	jne    0x10021a81
10021a65:	cmp    BYTE PTR [ebx+0x2d],0x0
10021a69:	je     0x10021a6f
10021a6b:	mov    ecx,esi
10021a6d:	jmp    0x10021a7f
10021a6f:	mov    eax,DWORD PTR [ebx]
10021a71:	mov    ecx,ebx
10021a73:	jmp    0x10021a79
10021a75:	mov    ecx,eax
10021a77:	mov    eax,DWORD PTR [ecx]
10021a79:	cmp    BYTE PTR [eax+0x2d],0x0
10021a7d:	je     0x10021a75
10021a7f:	mov    DWORD PTR [edx],ecx
10021a81:	mov    eax,DWORD PTR [ebp+0x8]
10021a84:	mov    edx,DWORD PTR [eax+0x4]
10021a87:	cmp    DWORD PTR [edx+0x8],edi
10021a8a:	jne    0x10021b07
10021a8c:	cmp    BYTE PTR [ebx+0x2d],0x0
10021a90:	je     0x10021a96
10021a92:	mov    ecx,esi
10021a94:	jmp    0x10021aa8
10021a96:	mov    eax,DWORD PTR [ebx+0x8]
10021a99:	mov    ecx,ebx
10021a9b:	jmp    0x10021aa2
10021a9d:	mov    ecx,eax
10021a9f:	mov    eax,DWORD PTR [ecx+0x8]
10021aa2:	cmp    BYTE PTR [eax+0x2d],0x0
10021aa6:	je     0x10021a9d
10021aa8:	mov    DWORD PTR [edx+0x8],ecx
10021aab:	jmp    0x10021b07
10021aad:	mov    DWORD PTR [ecx+0x4],eax
10021ab0:	mov    ecx,DWORD PTR [edi]
10021ab2:	mov    DWORD PTR [eax],ecx
10021ab4:	cmp    eax,DWORD PTR [edi+0x8]
10021ab7:	jne    0x10021abd
10021ab9:	mov    esi,eax
10021abb:	jmp    0x10021ad7
10021abd:	cmp    BYTE PTR [ebx+0x2d],0x0
10021ac1:	mov    esi,DWORD PTR [eax+0x4]
10021ac4:	jne    0x10021ac9
10021ac6:	mov    DWORD PTR [ebx+0x4],esi
10021ac9:	mov    DWORD PTR [esi],ebx
10021acb:	mov    ecx,DWORD PTR [edi+0x8]
10021ace:	mov    DWORD PTR [eax+0x8],ecx
10021ad1:	mov    ecx,DWORD PTR [edi+0x8]
10021ad4:	mov    DWORD PTR [ecx+0x4],eax
10021ad7:	mov    ecx,DWORD PTR [ebp+0x8]
10021ada:	mov    ecx,DWORD PTR [ecx+0x4]
10021add:	cmp    DWORD PTR [ecx+0x4],edi
10021ae0:	jne    0x10021ae7
10021ae2:	mov    DWORD PTR [ecx+0x4],eax
10021ae5:	jmp    0x10021af5
10021ae7:	mov    ecx,DWORD PTR [edi+0x4]
10021aea:	cmp    DWORD PTR [ecx],edi
10021aec:	jne    0x10021af2
10021aee:	mov    DWORD PTR [ecx],eax
10021af0:	jmp    0x10021af5
10021af2:	mov    DWORD PTR [ecx+0x8],eax
10021af5:	mov    ecx,DWORD PTR [edi+0x4]
10021af8:	mov    DWORD PTR [eax+0x4],ecx
10021afb:	mov    dl,BYTE PTR [edi+0x2c]
10021afe:	mov    cl,BYTE PTR [eax+0x2c]
10021b01:	mov    BYTE PTR [eax+0x2c],dl
10021b04:	mov    BYTE PTR [edi+0x2c],cl
10021b07:	cmp    BYTE PTR [edi+0x2c],0x1
10021b0b:	jne    0x10021c23
10021b11:	jmp    0x10021bd7
10021b16:	cmp    BYTE PTR [ebx+0x2c],0x1
10021b1a:	jne    0x10021c1f
10021b20:	mov    ecx,DWORD PTR [esi]
10021b22:	cmp    ebx,ecx
10021b24:	jne    0x10021b9d
10021b26:	mov    ecx,DWORD PTR [esi+0x8]
10021b29:	cmp    BYTE PTR [ecx+0x2c],0x0
10021b2d:	jne    0x10021b44
10021b2f:	push   DWORD PTR [ebp+0x8]
10021b32:	mov    BYTE PTR [ecx+0x2c],0x1
10021b36:	mov    ecx,esi
10021b38:	mov    BYTE PTR [esi+0x2c],0x0
10021b3c:	call   0x10021c5a
10021b41:	mov    ecx,DWORD PTR [esi+0x8]
10021b44:	cmp    BYTE PTR [ecx+0x2d],0x0
10021b48:	jne    0x10021bd2
10021b4e:	mov    eax,DWORD PTR [ecx]
10021b50:	cmp    BYTE PTR [eax+0x2c],0x1
10021b54:	jne    0x10021b5f
10021b56:	mov    eax,DWORD PTR [ecx+0x8]
10021b59:	cmp    BYTE PTR [eax+0x2c],0x1
10021b5d:	je     0x10021bce
10021b5f:	mov    eax,DWORD PTR [ecx+0x8]
10021b62:	cmp    BYTE PTR [eax+0x2c],0x1
10021b66:	jne    0x10021b7d
10021b68:	mov    eax,DWORD PTR [ecx]
10021b6a:	push   DWORD PTR [ebp+0x8]
10021b6d:	mov    BYTE PTR [eax+0x2c],0x1
10021b71:	mov    BYTE PTR [ecx+0x2c],0x0
10021b75:	call   0x10021c9a
10021b7a:	mov    ecx,DWORD PTR [esi+0x8]
10021b7d:	mov    al,BYTE PTR [esi+0x2c]
10021b80:	push   DWORD PTR [ebp+0x8]
10021b83:	mov    BYTE PTR [ecx+0x2c],al
10021b86:	mov    BYTE PTR [esi+0x2c],0x1
10021b8a:	mov    eax,DWORD PTR [ecx+0x8]
10021b8d:	mov    ecx,esi
10021b8f:	mov    BYTE PTR [eax+0x2c],0x1
10021b93:	call   0x10021c5a
10021b98:	jmp    0x10021c1f
10021b9d:	cmp    BYTE PTR [ecx+0x2c],0x0
10021ba1:	jne    0x10021bb7
10021ba3:	push   DWORD PTR [ebp+0x8]
10021ba6:	mov    BYTE PTR [ecx+0x2c],0x1
10021baa:	mov    ecx,esi
10021bac:	mov    BYTE PTR [esi+0x2c],0x0
10021bb0:	call   0x10021c9a
10021bb5:	mov    ecx,DWORD PTR [esi]
10021bb7:	cmp    BYTE PTR [ecx+0x2d],0x0
10021bbb:	jne    0x10021bd2
10021bbd:	mov    eax,DWORD PTR [ecx+0x8]
10021bc0:	cmp    BYTE PTR [eax+0x2c],0x1
10021bc4:	jne    0x10021be8
10021bc6:	mov    eax,DWORD PTR [ecx]
10021bc8:	cmp    BYTE PTR [eax+0x2c],0x1
10021bcc:	jne    0x10021be8
10021bce:	mov    BYTE PTR [ecx+0x2c],0x0
10021bd2:	mov    ebx,esi
10021bd4:	mov    esi,DWORD PTR [esi+0x4]
10021bd7:	mov    eax,DWORD PTR [ebp+0x8]
10021bda:	mov    eax,DWORD PTR [eax+0x4]
10021bdd:	cmp    ebx,DWORD PTR [eax+0x4]
10021be0:	jne    0x10021b16
10021be6:	jmp    0x10021c1f
10021be8:	mov    eax,DWORD PTR [ecx]
10021bea:	cmp    BYTE PTR [eax+0x2c],0x1
10021bee:	jne    0x10021c05
10021bf0:	mov    eax,DWORD PTR [ecx+0x8]
10021bf3:	push   DWORD PTR [ebp+0x8]
10021bf6:	mov    BYTE PTR [eax+0x2c],0x1
10021bfa:	mov    BYTE PTR [ecx+0x2c],0x0
10021bfe:	call   0x10021c5a
10021c03:	mov    ecx,DWORD PTR [esi]
10021c05:	mov    al,BYTE PTR [esi+0x2c]
10021c08:	push   DWORD PTR [ebp+0x8]
10021c0b:	mov    BYTE PTR [ecx+0x2c],al
10021c0e:	mov    BYTE PTR [esi+0x2c],0x1
10021c12:	mov    eax,DWORD PTR [ecx]
10021c14:	mov    ecx,esi
10021c16:	mov    BYTE PTR [eax+0x2c],0x1
10021c1a:	call   0x10021c9a
10021c1f:	mov    BYTE PTR [ebx+0x2c],0x1
10021c23:	push   0x1
10021c25:	lea    esi,[edi+0xc]
10021c28:	xor    ebx,ebx
10021c2a:	call   0x10005465
10021c2f:	push   edi
10021c30:	call   0x10042fe2
10021c35:	pop    ecx
10021c36:	mov    ecx,DWORD PTR [ebp+0x8]
10021c39:	mov    eax,DWORD PTR [ecx+0x8]
10021c3c:	test   eax,eax
10021c3e:	jbe    0x10021c44
10021c40:	dec    eax
10021c41:	mov    DWORD PTR [ecx+0x8],eax
10021c44:	mov    ecx,DWORD PTR [ebp+0x10]
10021c47:	mov    eax,DWORD PTR [ebp+0xc]
10021c4a:	mov    DWORD PTR [eax],ecx
10021c4c:	mov    ecx,DWORD PTR [ebp+0x14]
10021c4f:	mov    DWORD PTR [eax+0x4],ecx
10021c52:	call   0x10059ecd
10021c57:	ret    0x10
10021c5a:	mov    eax,DWORD PTR [ecx+0x8]
10021c5d:	mov    edx,DWORD PTR [eax]
10021c5f:	mov    DWORD PTR [ecx+0x8],edx
10021c62:	mov    edx,DWORD PTR [eax]
10021c64:	cmp    BYTE PTR [edx+0x2d],0x0
10021c68:	jne    0x10021c6d
10021c6a:	mov    DWORD PTR [edx+0x4],ecx
10021c6d:	mov    edx,DWORD PTR [ecx+0x4]
10021c70:	mov    DWORD PTR [eax+0x4],edx
10021c73:	mov    edx,DWORD PTR [esp+0x4]
10021c77:	mov    edx,DWORD PTR [edx+0x4]
10021c7a:	cmp    ecx,DWORD PTR [edx+0x4]
10021c7d:	jne    0x10021c84
10021c7f:	mov    DWORD PTR [edx+0x4],eax
10021c82:	jmp    0x10021c92
10021c84:	mov    edx,DWORD PTR [ecx+0x4]
10021c87:	cmp    ecx,DWORD PTR [edx]
10021c89:	jne    0x10021c8f
10021c8b:	mov    DWORD PTR [edx],eax
10021c8d:	jmp    0x10021c92
10021c8f:	mov    DWORD PTR [edx+0x8],eax
10021c92:	mov    DWORD PTR [eax],ecx
10021c94:	mov    DWORD PTR [ecx+0x4],eax
10021c97:	ret    0x4
10021c9a:	mov    eax,DWORD PTR [ecx]
10021c9c:	mov    edx,DWORD PTR [eax+0x8]
10021c9f:	mov    DWORD PTR [ecx],edx
10021ca1:	mov    edx,DWORD PTR [eax+0x8]
10021ca4:	cmp    BYTE PTR [edx+0x2d],0x0
10021ca8:	jne    0x10021cad
10021caa:	mov    DWORD PTR [edx+0x4],ecx
10021cad:	mov    edx,DWORD PTR [ecx+0x4]
10021cb0:	mov    DWORD PTR [eax+0x4],edx
10021cb3:	mov    edx,DWORD PTR [esp+0x4]
10021cb7:	mov    edx,DWORD PTR [edx+0x4]
10021cba:	cmp    ecx,DWORD PTR [edx+0x4]
10021cbd:	jne    0x10021cc4
10021cbf:	mov    DWORD PTR [edx+0x4],eax
10021cc2:	jmp    0x10021cd3
10021cc4:	mov    edx,DWORD PTR [ecx+0x4]
10021cc7:	cmp    ecx,DWORD PTR [edx+0x8]
10021cca:	jne    0x10021cd1
10021ccc:	mov    DWORD PTR [edx+0x8],eax
10021ccf:	jmp    0x10021cd3
10021cd1:	mov    DWORD PTR [edx],eax
10021cd3:	mov    DWORD PTR [eax+0x8],ecx
10021cd6:	mov    DWORD PTR [ecx+0x4],eax
10021cd9:	ret    0x4
10021cdc:	push   0x8
10021cde:	mov    eax,0x10060632
10021ce3:	call   0x10059e28
10021ce8:	mov    ebx,ecx
10021cea:	push   0x30
10021cec:	call   0x10043196
10021cf1:	mov    edi,eax
10021cf3:	pop    ecx
10021cf4:	mov    DWORD PTR [ebp-0x14],edi
10021cf7:	test   edi,edi
10021cf9:	mov    DWORD PTR [ebp-0x4],0x1
10021d00:	je     0x10021d2b
10021d02:	mov    eax,DWORD PTR [ebp+0x8]
10021d05:	mov    DWORD PTR [edi],eax
10021d07:	mov    eax,DWORD PTR [ebp+0xc]
10021d0a:	mov    DWORD PTR [edi+0x4],eax
10021d0d:	mov    eax,DWORD PTR [ebp+0x10]
10021d10:	mov    DWORD PTR [edi+0x8],eax
10021d13:	lea    esi,[edi+0xc]
10021d16:	mov    eax,ebx
10021d18:	call   0x10004b27
10021d1d:	mov    eax,DWORD PTR [ebx+0x1c]
10021d20:	mov    DWORD PTR [esi+0x1c],eax
10021d23:	mov    BYTE PTR [edi+0x2c],0x0
10021d27:	mov    BYTE PTR [edi+0x2d],0x0
10021d2b:	mov    eax,edi
10021d2d:	call   0x10059ecd
10021d32:	ret    0xc
10021d35:	push   DWORD PTR [ebp-0x14]
10021d38:	call   0x10042fe2
10021d3d:	pop    ecx
10021d3e:	push   0x0
10021d40:	push   0x0
10021d42:	call   0x10047942
10021d47:	int3   
10021d48:	push   0x24
10021d4a:	call   0x10043196
10021d4f:	xor    edx,edx
10021d51:	cmp    eax,edx
10021d53:	pop    ecx
10021d54:	je     0x10021d58
10021d56:	mov    DWORD PTR [eax],edx
10021d58:	lea    ecx,[eax+0x4]
10021d5b:	cmp    ecx,edx
10021d5d:	je     0x10021d61
10021d5f:	mov    DWORD PTR [ecx],edx
10021d61:	lea    ecx,[eax+0x8]
10021d64:	cmp    ecx,edx
10021d66:	je     0x10021d6a
10021d68:	mov    DWORD PTR [ecx],edx
10021d6a:	mov    BYTE PTR [eax+0x20],0x1
10021d6e:	mov    BYTE PTR [eax+0x21],dl
10021d71:	ret    
10021d72:	push   0x24
10021d74:	call   0x10043196
10021d79:	test   eax,eax
10021d7b:	pop    ecx
10021d7c:	je     0x10021daa
10021d7e:	mov    ecx,DWORD PTR [esp+0x4]
10021d82:	push   esi
10021d83:	mov    esi,DWORD PTR [esp+0x14]
10021d87:	mov    DWORD PTR [eax],ecx
10021d89:	mov    ecx,DWORD PTR [esp+0xc]
10021d8d:	push   edi
10021d8e:	mov    DWORD PTR [eax+0x4],ecx
10021d91:	mov    ecx,DWORD PTR [esp+0x14]
10021d95:	push   0x5
10021d97:	mov    DWORD PTR [eax+0x8],ecx
10021d9a:	pop    ecx
10021d9b:	lea    edi,[eax+0xc]
10021d9e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021da0:	pop    edi
10021da1:	mov    BYTE PTR [eax+0x20],0x0
10021da5:	mov    BYTE PTR [eax+0x21],0x0
10021da9:	pop    esi
10021daa:	ret    0x10
10021dad:	push   ecx
10021dae:	push   ebp
10021daf:	mov    ebp,DWORD PTR [esp+0xc]
10021db3:	cmp    BYTE PTR [ebp+0x2d],0x0
10021db7:	push   edi
10021db8:	mov    DWORD PTR [esp+0x8],ecx
10021dbc:	mov    edi,ebp
10021dbe:	jne    0x10021dec
10021dc0:	push   ebx
10021dc1:	push   esi
10021dc2:	push   DWORD PTR [edi+0x8]
10021dc5:	mov    ecx,DWORD PTR [esp+0x14]
10021dc9:	call   0x10021dad
10021dce:	mov    edi,DWORD PTR [edi]
10021dd0:	push   0x1
10021dd2:	lea    esi,[ebp+0xc]
10021dd5:	xor    ebx,ebx
10021dd7:	call   0x10005465
10021ddc:	push   ebp
10021ddd:	call   0x10042fe2
10021de2:	cmp    BYTE PTR [edi+0x2d],bl
10021de5:	pop    ecx
10021de6:	mov    ebp,edi
10021de8:	je     0x10021dc2
10021dea:	pop    esi
10021deb:	pop    ebx
10021dec:	pop    edi
10021ded:	pop    ebp
10021dee:	pop    ecx
10021def:	ret    0x4
10021df2:	push   ebx
10021df3:	push   esi
10021df4:	push   edi
10021df5:	mov    edi,DWORD PTR [esp+0x10]
10021df9:	cmp    BYTE PTR [edi+0x21],0x0
10021dfd:	mov    ebx,ecx
10021dff:	mov    esi,edi
10021e01:	jne    0x10021e1e
10021e03:	push   DWORD PTR [esi+0x8]
10021e06:	mov    ecx,ebx
10021e08:	call   0x10021df2
10021e0d:	mov    esi,DWORD PTR [esi]
10021e0f:	push   edi
10021e10:	call   0x10042fe2
10021e15:	cmp    BYTE PTR [esi+0x21],0x0
10021e19:	pop    ecx
10021e1a:	mov    edi,esi
10021e1c:	je     0x10021e03
10021e1e:	pop    edi
10021e1f:	pop    esi
10021e20:	pop    ebx
10021e21:	ret    0x4
10021e24:	push   ebx
10021e25:	xor    ebx,ebx
10021e27:	cmp    DWORD PTR [esi],ebx
10021e29:	jne    0x10021e30
10021e2b:	call   0x10043605
10021e30:	mov    eax,DWORD PTR [esi+0x4]
10021e33:	cmp    BYTE PTR [eax+0x2d],bl
10021e36:	je     0x10021e3f
10021e38:	call   0x10043605
10021e3d:	jmp    0x10021e6d
10021e3f:	mov    ecx,DWORD PTR [eax+0x8]
10021e42:	cmp    BYTE PTR [ecx+0x2d],bl
10021e45:	jne    0x10021e62
10021e47:	jmp    0x10021e4b
10021e49:	mov    ecx,eax
10021e4b:	mov    eax,DWORD PTR [ecx]
10021e4d:	cmp    BYTE PTR [eax+0x2d],bl
10021e50:	je     0x10021e49
10021e52:	mov    DWORD PTR [esi+0x4],ecx
10021e55:	jmp    0x10021e6d
10021e57:	mov    ecx,DWORD PTR [esi+0x4]
10021e5a:	cmp    ecx,DWORD PTR [eax+0x8]
10021e5d:	jne    0x10021e6a
10021e5f:	mov    DWORD PTR [esi+0x4],eax
10021e62:	mov    eax,DWORD PTR [eax+0x4]
10021e65:	cmp    BYTE PTR [eax+0x2d],bl
10021e68:	je     0x10021e57
10021e6a:	mov    DWORD PTR [esi+0x4],eax
10021e6d:	mov    eax,esi
10021e6f:	pop    ebx
10021e70:	ret    
10021e71:	push   ebp
10021e72:	mov    ebp,esp
10021e74:	and    esp,0xfffffff8
10021e77:	sub    esp,0x74
10021e7a:	push   ebx
10021e7b:	mov    ebx,DWORD PTR [ebp+0x8]
10021e7e:	push   esi
10021e7f:	xor    esi,esi
10021e81:	cmp    ebx,esi
10021e83:	push   edi
10021e84:	je     0x10021f02
10021e86:	cmp    DWORD PTR [ebp+0xc],esi
10021e89:	je     0x10021f02
10021e8b:	cmp    WORD PTR [ebx+0x40],si
10021e8f:	jne    0x10021fd1
10021e95:	mov    eax,0x10082ac8
10021e9a:	push   eax
10021e9b:	mov    DWORD PTR [esp+0x1c],eax
10021e9f:	call   DWORD PTR ds:0x100670f8
10021ea5:	cmp    WORD PTR [ebx+0x40],si
10021ea9:	mov    BYTE PTR [esp+0x1c],0x1
10021eae:	jne    0x10021fc6
10021eb4:	mov    eax,DWORD PTR [ebx+0x30]
10021eb7:	cmp    eax,esi
10021eb9:	je     0x10021f2d
10021ebb:	mov    ecx,DWORD PTR [ebx+0x28]
10021ebe:	mov    DWORD PTR [esp+0x10],ecx
10021ec2:	mov    ecx,DWORD PTR [ebx+0x8]
10021ec5:	mov    DWORD PTR [esp+0x14],ecx
10021ec9:	lea    ecx,[esp+0x20]
10021ecd:	push   ecx
10021ece:	push   eax
10021ecf:	push   esi
10021ed0:	mov    esi,DWORD PTR ds:0x10067314
10021ed6:	mov    DWORD PTR [esp+0x2c],0x30
10021ede:	call   esi
10021ee0:	test   eax,eax
10021ee2:	jne    0x10021f0c
10021ee4:	mov    eax,DWORD PTR [ebx+0x30]
10021ee7:	lea    ecx,[esp+0x20]
10021eeb:	push   ecx
10021eec:	push   eax
10021eed:	push   DWORD PTR ds:0x10082a8c
10021ef3:	call   esi
10021ef5:	test   eax,eax
10021ef7:	jne    0x10021f0c
10021ef9:	lea    ecx,[esp+0x18]
10021efd:	call   0x100111c4
10021f02:	xor    ax,ax
10021f05:	pop    edi
10021f06:	pop    esi
10021f07:	pop    ebx
10021f08:	mov    esp,ebp
10021f0a:	pop    ebp
10021f0b:	ret    
10021f0c:	push   0xc
10021f0e:	pop    ecx
10021f0f:	lea    esi,[esp+0x20]
10021f13:	mov    edi,ebx
10021f15:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f17:	mov    eax,DWORD PTR [ebx+0x8]
10021f1a:	mov    DWORD PTR [ebx+0x34],eax
10021f1d:	mov    eax,DWORD PTR [esp+0x10]
10021f21:	mov    DWORD PTR [ebx+0x28],eax
10021f24:	mov    eax,DWORD PTR [esp+0x14]
10021f28:	mov    DWORD PTR [ebx+0x8],eax
10021f2b:	jmp    0x10021f49
10021f2d:	mov    eax,DWORD PTR [ebx+0x3c]
10021f30:	push   DWORD PTR [ebx+0x38]
10021f33:	neg    eax
10021f35:	sbb    eax,eax
10021f37:	not    eax
10021f39:	and    eax,DWORD PTR ds:0x10082a90
10021f3f:	push   eax
10021f40:	call   DWORD PTR ds:0x100672ec
10021f46:	mov    DWORD PTR [ebx+0x1c],eax
10021f49:	mov    eax,ds:0x10082a8c
10021f4e:	and    DWORD PTR [ebx+0x4],0xffffbfff
10021f55:	cmp    DWORD PTR [ebx+0x28],0x0
10021f59:	mov    DWORD PTR [ebx+0x14],eax
10021f5c:	jne    0x10021f75
10021f5e:	push   ebx
10021f5f:	push   0x1007158c
10021f64:	lea    esi,[ebx+0x42]
10021f67:	push   0x25
10021f69:	push   esi
10021f6a:	call   0x10046728
10021f6f:	add    esp,0x10
10021f72:	mov    DWORD PTR [ebx+0x28],esi
10021f75:	mov    eax,DWORD PTR [ebx+0x28]
10021f78:	push   0xc
10021f7a:	pop    ecx
10021f7b:	lea    edx,[esp+0x50]
10021f7f:	push   edx
10021f80:	mov    esi,ebx
10021f82:	lea    edi,[esp+0x54]
10021f86:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f88:	mov    ecx,DWORD PTR [ebx+0x14]
10021f8b:	push   eax
10021f8c:	push   ecx
10021f8d:	call   DWORD PTR ds:0x10067314
10021f93:	test   ax,ax
10021f96:	mov    WORD PTR [ebx+0x40],ax
10021f9a:	jne    0x10021fc6
10021f9c:	push   ebx
10021f9d:	call   DWORD PTR ds:0x10067328
10021fa3:	movzx  eax,ax
10021fa6:	lea    ebx,[esp+0x10]
10021faa:	mov    esi,0x10082ae4
10021faf:	mov    DWORD PTR [esp+0x10],eax
10021fb3:	call   0x10020170
10021fb8:	mov    ecx,DWORD PTR [ebp+0x8]
10021fbb:	mov    ax,WORD PTR [esp+0x10]
10021fc0:	mov    WORD PTR [ecx+0x40],ax
10021fc4:	mov    ebx,ecx
10021fc6:	lea    ecx,[esp+0x18]
10021fca:	call   0x100111c4
10021fcf:	xor    esi,esi
10021fd1:	cmp    DWORD PTR [ebx+0x30],esi
10021fd4:	je     0x10021fde
10021fd6:	mov    eax,DWORD PTR [ebx+0x34]
10021fd9:	mov    ecx,DWORD PTR [ebp+0xc]
10021fdc:	mov    DWORD PTR [ecx],eax
10021fde:	mov    ax,WORD PTR [ebx+0x40]
10021fe2:	jmp    0x10021f05
10021fe7:	push   ebp
10021fe8:	mov    ebp,esp
10021fea:	push   ecx
10021feb:	push   ecx
10021fec:	push   ebx
10021fed:	mov    eax,0x10082ac8
10021ff2:	push   esi
10021ff3:	push   eax
10021ff4:	xor    ebx,ebx
10021ff6:	mov    DWORD PTR [ebp-0x8],eax
10021ff9:	call   DWORD PTR ds:0x100670f8
10021fff:	mov    esi,DWORD PTR ds:0x10082ae0
10022005:	test   esi,esi
10022007:	mov    BYTE PTR [ebp-0x4],0x1
1002200b:	je     0x10022038
1002200d:	call   DWORD PTR ds:0x1006715c
10022013:	xor    ecx,ecx
10022015:	cmp    DWORD PTR [esi+0x4],eax
10022018:	je     0x10022025
1002201a:	mov    ecx,esi
1002201c:	mov    esi,DWORD PTR [esi+0x8]
1002201f:	test   esi,esi
10022021:	jne    0x10022015
10022023:	jmp    0x10022038
10022025:	test   ecx,ecx
10022027:	mov    eax,DWORD PTR [esi+0x8]
1002202a:	jne    0x10022033
1002202c:	mov    ds:0x10082ae0,eax
10022031:	jmp    0x10022036
10022033:	mov    DWORD PTR [ecx+0x8],eax
10022036:	mov    ebx,DWORD PTR [esi]
10022038:	lea    ecx,[ebp-0x8]
1002203b:	call   0x100111c4
10022040:	test   ebx,ebx
10022042:	jne    0x10022048
10022044:	xor    eax,eax
10022046:	jmp    0x10022079
10022048:	mov    esi,DWORD PTR [ebp+0x8]
1002204b:	mov    eax,DWORD PTR [ebx]
1002204d:	push   edi
1002204e:	push   ebx
1002204f:	mov    ecx,ebx
10022051:	mov    DWORD PTR [ebx+0x4],esi
10022054:	call   DWORD PTR [eax+0x8]
10022057:	lea    edi,[ebx+0x8]
1002205a:	call   0x1001be62
1002205f:	mov    ebx,DWORD PTR [ebx+0x14]
10022062:	push   ebx
10022063:	push   0xfffffffc
10022065:	push   esi
10022066:	call   DWORD PTR ds:0x100672f4
1002206c:	push   DWORD PTR [ebp+0x14]
1002206f:	push   DWORD PTR [ebp+0x10]
10022072:	push   DWORD PTR [ebp+0xc]
10022075:	push   esi
10022076:	call   ebx
10022078:	pop    edi
10022079:	pop    esi
1002207a:	pop    ebx
1002207b:	leave  
1002207c:	ret    0x10
1002207f:	push   ebp
10022080:	mov    ebp,esp
10022082:	sub    esp,0x24
10022085:	mov    ecx,DWORD PTR [ebp+0x14]
10022088:	push   ebx
10022089:	mov    ebx,DWORD PTR [ebp+0x10]
1002208c:	push   esi
1002208d:	mov    esi,DWORD PTR [ebp+0x8]
10022090:	mov    edx,DWORD PTR [esi+0x18]
10022093:	mov    eax,DWORD PTR [esi+0x4]
10022096:	push   edi
10022097:	mov    edi,DWORD PTR [ebp+0xc]
1002209a:	mov    DWORD PTR [ebp-0x18],ecx
1002209d:	xor    ecx,ecx
1002209f:	push   ecx
100220a0:	mov    DWORD PTR [ebp-0x14],ecx
100220a3:	mov    DWORD PTR [ebp-0xc],ecx
100220a6:	mov    DWORD PTR [ebp-0x10],ecx
100220a9:	lea    ecx,[ebp+0x8]
100220ac:	push   ecx
100220ad:	push   DWORD PTR [ebp+0x14]
100220b0:	mov    DWORD PTR [ebp+0xc],edx
100220b3:	push   ebx
100220b4:	lea    edx,[ebp-0x24]
100220b7:	push   edi
100220b8:	mov    DWORD PTR [esi+0x18],edx
100220bb:	mov    edx,DWORD PTR [esi]
100220bd:	push   eax
100220be:	mov    ecx,esi
100220c0:	mov    DWORD PTR [ebp-0x8],0x24
100220c7:	mov    DWORD PTR [ebp-0x4],0x1
100220ce:	mov    DWORD PTR [ebp-0x24],eax
100220d1:	mov    DWORD PTR [ebp-0x20],edi
100220d4:	mov    DWORD PTR [ebp-0x1c],ebx
100220d7:	call   DWORD PTR [edx]
100220d9:	test   eax,eax
100220db:	jne    0x1002214e
100220dd:	cmp    edi,0x82
100220e3:	je     0x100220fb
100220e5:	push   DWORD PTR [ebp+0x14]
100220e8:	push   ebx
100220e9:	push   edi
100220ea:	push   DWORD PTR [esi+0x4]
100220ed:	push   DWORD PTR [esi+0x20]
100220f0:	call   DWORD PTR ds:0x10067320
100220f6:	mov    DWORD PTR [ebp+0x8],eax
100220f9:	jmp    0x1002214e
100220fb:	mov    eax,DWORD PTR [esi+0x4]
100220fe:	mov    edi,DWORD PTR ds:0x100672f0
10022104:	push   0xfffffffc
10022106:	push   eax
10022107:	call   edi
10022109:	push   DWORD PTR [ebp+0x14]
1002210c:	mov    DWORD PTR [ebp+0x10],eax
1002210f:	push   ebx
10022110:	push   0x82
10022115:	push   DWORD PTR [esi+0x4]
10022118:	push   DWORD PTR [esi+0x20]
1002211b:	call   DWORD PTR ds:0x10067320
10022121:	mov    DWORD PTR [ebp+0x8],eax
10022124:	mov    eax,DWORD PTR [esi+0x20]
10022127:	cmp    eax,DWORD PTR ds:0x10067334
1002212d:	je     0x1002214a
1002212f:	mov    eax,DWORD PTR [esi+0x4]
10022132:	push   0xfffffffc
10022134:	push   eax
10022135:	call   edi
10022137:	cmp    eax,DWORD PTR [ebp+0x10]
1002213a:	jne    0x1002214a
1002213c:	push   DWORD PTR [esi+0x20]
1002213f:	push   0xfffffffc
10022141:	push   DWORD PTR [esi+0x4]
10022144:	call   DWORD PTR ds:0x100672f4
1002214a:	or     DWORD PTR [esi+0x1c],0x1
1002214e:	mov    eax,DWORD PTR [esi+0x1c]
10022151:	test   al,0x1
10022153:	je     0x10022175
10022155:	xor    edx,edx
10022157:	cmp    DWORD PTR [ebp+0xc],edx
1002215a:	jne    0x10022175
1002215c:	mov    ecx,DWORD PTR [esi+0x4]
1002215f:	and    eax,0xfffffffe
10022162:	mov    DWORD PTR [esi+0x1c],eax
10022165:	mov    eax,DWORD PTR [esi]
10022167:	push   ecx
10022168:	mov    ecx,esi
1002216a:	mov    DWORD PTR [esi+0x4],edx
1002216d:	mov    DWORD PTR [esi+0x18],edx
10022170:	call   DWORD PTR [eax+0xc]
10022173:	jmp    0x1002217b
10022175:	mov    eax,DWORD PTR [ebp+0xc]
10022178:	mov    DWORD PTR [esi+0x18],eax
1002217b:	mov    eax,DWORD PTR [ebp+0x8]
1002217e:	pop    edi
1002217f:	pop    esi
10022180:	pop    ebx
10022181:	leave  
10022182:	ret    0x10
10022185:	push   ebp
10022186:	mov    ebp,esp
10022188:	push   esi
10022189:	push   edi
1002218a:	lea    esi,[ebx+0x8]
1002218d:	push   0x0
1002218f:	xor    eax,eax
10022191:	mov    edi,esi
10022193:	call   0x1001be62
10022198:	test   eax,eax
1002219a:	jne    0x100221a8
1002219c:	push   0xe
1002219e:	call   DWORD PTR ds:0x10067150
100221a4:	xor    eax,eax
100221a6:	jmp    0x10022206
100221a8:	xor    edi,edi
100221aa:	cmp    WORD PTR [ebp+0x1c],di
100221ae:	je     0x100221a4
100221b0:	mov    eax,ebx
100221b2:	call   0x1001b6ea
100221b7:	cmp    DWORD PTR [ebp+0x18],edi
100221ba:	jne    0x100221c8
100221bc:	test   DWORD PTR [ebp+0x10],0x40000000
100221c3:	je     0x100221c8
100221c5:	mov    DWORD PTR [ebp+0x18],ebx
100221c8:	mov    eax,DWORD PTR [ebp+0x8]
100221cb:	cmp    eax,edi
100221cd:	jne    0x100221d4
100221cf:	mov    eax,0x1008183c
100221d4:	mov    ecx,DWORD PTR [eax+0x4]
100221d7:	mov    esi,DWORD PTR [eax+0xc]
100221da:	mov    edx,DWORD PTR [eax]
100221dc:	mov    eax,DWORD PTR [eax+0x8]
100221df:	push   edi
100221e0:	push   DWORD PTR ds:0x10082a8c
100221e6:	sub    esi,ecx
100221e8:	push   DWORD PTR [ebp+0x18]
100221eb:	sub    eax,edx
100221ed:	push   edi
100221ee:	push   esi
100221ef:	push   eax
100221f0:	movzx  eax,WORD PTR [ebp+0x1c]
100221f4:	push   ecx
100221f5:	push   edx
100221f6:	push   DWORD PTR [ebp+0x10]
100221f9:	push   DWORD PTR [ebp+0xc]
100221fc:	push   eax
100221fd:	push   DWORD PTR [ebp+0x14]
10022200:	call   DWORD PTR ds:0x10067364
10022206:	pop    edi
10022207:	pop    esi
10022208:	pop    ebp
10022209:	ret    0x18
1002220c:	push   0xc
1002220e:	mov    eax,0x10060612
10022213:	call   0x10059e28
10022218:	mov    ebx,DWORD PTR [ebp+0x8]
1002221b:	xor    edi,edi
1002221d:	cmp    ebx,edi
1002221f:	jne    0x10022228
10022221:	mov    eax,0x80004003
10022226:	jmp    0x10022293
10022228:	push   0x30
1002222a:	mov    DWORD PTR [ebx],edi
1002222c:	mov    DWORD PTR [ebp-0x14],0x8007000e
10022233:	mov    DWORD PTR [ebp-0x4],edi
10022236:	call   0x10043196
1002223b:	mov    esi,eax
1002223d:	cmp    esi,edi
1002223f:	pop    ecx
10022240:	je     0x10022276
10022242:	mov    eax,ds:0x10067334
10022247:	mov    DWORD PTR [esi+0x28],edi
1002224a:	mov    DWORD PTR [esi+0x4],edi
1002224d:	mov    DWORD PTR [esi+0x14],edi
10022250:	mov    DWORD PTR [esi+0x18],edi
10022253:	mov    DWORD PTR [esi+0x1c],edi
10022256:	mov    DWORD PTR [esi+0x20],eax
10022259:	mov    DWORD PTR [esi+0x2c],edi
1002225c:	mov    DWORD PTR [esi],0x10071878
10022262:	mov    DWORD PTR [esi+0x24],0x10071888
10022269:	mov    ecx,DWORD PTR ds:0x10082c64
1002226f:	mov    eax,DWORD PTR [ecx]
10022271:	call   DWORD PTR [eax+0x4]
10022274:	jmp    0x10022287
10022276:	xor    esi,esi
10022278:	jmp    0x10022287
1002227a:	mov    eax,0x10022280
1002227f:	ret    
10022280:	mov    ebx,DWORD PTR [ebp+0x8]
10022283:	xor    edi,edi
10022285:	mov    esi,edi
10022287:	cmp    esi,edi
10022289:	je     0x1002228e
1002228b:	mov    DWORD PTR [ebp-0x14],edi
1002228e:	mov    eax,DWORD PTR [ebp-0x14]
10022291:	mov    DWORD PTR [ebx],esi
10022293:	call   0x10059ecd
10022298:	ret    0x4
1002229b:	push   0xc
1002229d:	mov    eax,0x10061144
100222a2:	call   0x10059e28
100222a7:	mov    ebx,DWORD PTR [ebp+0x8]
100222aa:	xor    edi,edi
100222ac:	cmp    ebx,edi
100222ae:	jne    0x100222b7
100222b0:	mov    eax,0x80004003
100222b5:	jmp    0x10022322
100222b7:	push   0x30
100222b9:	mov    DWORD PTR [ebx],edi
100222bb:	mov    DWORD PTR [ebp-0x14],0x8007000e
100222c2:	mov    DWORD PTR [ebp-0x4],edi
100222c5:	call   0x10043196
100222ca:	mov    esi,eax
100222cc:	cmp    esi,edi
100222ce:	pop    ecx
100222cf:	je     0x10022305
100222d1:	mov    eax,ds:0x10067334
100222d6:	mov    DWORD PTR [esi+0x28],edi
100222d9:	mov    DWORD PTR [esi+0x4],edi
100222dc:	mov    DWORD PTR [esi+0x14],edi
100222df:	mov    DWORD PTR [esi+0x18],edi
100222e2:	mov    DWORD PTR [esi+0x1c],edi
100222e5:	mov    DWORD PTR [esi+0x20],eax
100222e8:	mov    DWORD PTR [esi+0x2c],edi
100222eb:	mov    DWORD PTR [esi],0x100718c4
100222f1:	mov    DWORD PTR [esi+0x24],0x100718d4
100222f8:	mov    ecx,DWORD PTR ds:0x10082c64
100222fe:	mov    eax,DWORD PTR [ecx]
10022300:	call   DWORD PTR [eax+0x4]
10022303:	jmp    0x10022316
10022305:	xor    esi,esi
10022307:	jmp    0x10022316
10022309:	mov    eax,0x1002230f
1002230e:	ret    
1002230f:	mov    ebx,DWORD PTR [ebp+0x8]
10022312:	xor    edi,edi
10022314:	mov    esi,edi
10022316:	cmp    esi,edi
10022318:	je     0x1002231d
1002231a:	mov    DWORD PTR [ebp-0x14],edi
1002231d:	mov    eax,DWORD PTR [ebp-0x14]
10022320:	mov    DWORD PTR [ebx],esi
10022322:	call   0x10059ecd
10022327:	ret    0x4
1002232a:	push   0x4
1002232c:	mov    eax,0x1005fad4
10022331:	call   0x10059df5
10022336:	mov    esi,ecx
10022338:	mov    DWORD PTR [ebp-0x10],esi
1002233b:	and    DWORD PTR [ebp-0x4],0x0
1002233f:	test   BYTE PTR [esi+0x14],0x2
10022343:	je     0x10022367
10022345:	mov    edi,DWORD PTR [esi+0x8]
10022348:	jmp    0x10022359
1002234a:	mov    eax,DWORD PTR [edi]
1002234c:	test   eax,eax
1002234e:	je     0x10022356
10022350:	mov    ecx,DWORD PTR [eax]
10022352:	push   eax
10022353:	call   DWORD PTR [ecx+0x8]
10022356:	add    edi,0x4
10022359:	cmp    edi,DWORD PTR [esi+0xc]
1002235c:	jne    0x1002234a
1002235e:	push   DWORD PTR [esi+0x8]
10022361:	call   0x10043178
10022366:	pop    ecx
10022367:	or     DWORD PTR [ebp-0x4],0xffffffff
1002236b:	mov    esi,DWORD PTR [esi+0x4]
1002236e:	test   esi,esi
10022370:	je     0x10022378
10022372:	mov    eax,DWORD PTR [esi]
10022374:	push   esi
10022375:	call   DWORD PTR [eax+0x8]
10022378:	call   0x10059ecd
1002237d:	ret    
1002237e:	push   ebp
1002237f:	mov    ebp,esp
10022381:	mov    edx,DWORD PTR [ebp+0x14]
10022384:	xor    ecx,ecx
10022386:	cmp    edx,ecx
10022388:	je     0x1002238c
1002238a:	mov    DWORD PTR [edx],ecx
1002238c:	push   esi
1002238d:	push   edi
1002238e:	mov    edi,DWORD PTR [ebp+0xc]
10022391:	cmp    edi,ecx
10022393:	jne    0x1002239f
10022395:	mov    eax,0x80070057
1002239a:	jmp    0x10022443
1002239f:	cmp    DWORD PTR [ebp+0x10],ecx
100223a2:	push   ebx
100223a3:	je     0x1002243d
100223a9:	xor    ebx,ebx
100223ab:	inc    ebx
100223ac:	cmp    edi,ebx
100223ae:	je     0x100223b8
100223b0:	cmp    edx,ecx
100223b2:	je     0x1002243d
100223b8:	mov    esi,DWORD PTR [ebp+0x8]
100223bb:	cmp    DWORD PTR [esi+0x8],ecx
100223be:	je     0x10022436
100223c0:	mov    eax,DWORD PTR [esi+0xc]
100223c3:	cmp    eax,ecx
100223c5:	je     0x10022436
100223c7:	mov    ecx,DWORD PTR [esi+0x10]
100223ca:	test   ecx,ecx
100223cc:	je     0x10022436
100223ce:	and    DWORD PTR [ebp+0xc],0x0
100223d2:	sub    eax,ecx
100223d4:	sar    eax,0x2
100223d7:	cmp    edi,eax
100223d9:	jbe    0x100223de
100223db:	mov    DWORD PTR [ebp+0xc],ebx
100223de:	jb     0x100223e2
100223e0:	mov    edi,eax
100223e2:	test   edx,edx
100223e4:	je     0x100223e8
100223e6:	mov    DWORD PTR [edx],edi
100223e8:	mov    ebx,DWORD PTR [ebp+0x10]
100223eb:	jmp    0x10022406
100223ed:	mov    eax,DWORD PTR [esi+0x10]
100223f0:	mov    ecx,ebx
100223f2:	dec    edi
100223f3:	call   0x100249e2
100223f8:	test   eax,eax
100223fa:	mov    DWORD PTR [ebp+0x8],eax
100223fd:	jl     0x1002240f
100223ff:	add    ebx,0x4
10022402:	add    DWORD PTR [esi+0x10],0x4
10022406:	test   edi,edi
10022408:	jne    0x100223ed
1002240a:	mov    eax,DWORD PTR [ebp+0xc]
1002240d:	jmp    0x10022442
1002240f:	mov    esi,DWORD PTR [ebp+0x10]
10022412:	jmp    0x10022423
10022414:	mov    eax,DWORD PTR [esi]
10022416:	test   eax,eax
10022418:	je     0x10022420
1002241a:	mov    ecx,DWORD PTR [eax]
1002241c:	push   eax
1002241d:	call   DWORD PTR [ecx+0x8]
10022420:	add    esi,0x4
10022423:	cmp    esi,ebx
10022425:	jb     0x10022414
10022427:	mov    eax,DWORD PTR [ebp+0x14]
1002242a:	test   eax,eax
1002242c:	je     0x10022431
1002242e:	and    DWORD PTR [eax],0x0
10022431:	mov    eax,DWORD PTR [ebp+0x8]
10022434:	jmp    0x10022442
10022436:	mov    eax,0x80004005
1002243b:	jmp    0x10022442
1002243d:	mov    eax,0x80004003
10022442:	pop    ebx
10022443:	pop    edi
10022444:	pop    esi
10022445:	pop    ebp
10022446:	ret    0x10
10022449:	push   esi
1002244a:	mov    esi,DWORD PTR [esp+0xc]
1002244e:	test   esi,esi
10022450:	jne    0x10022459
10022452:	mov    eax,0x80070057
10022457:	jmp    0x1002247d
10022459:	mov    ecx,DWORD PTR [esp+0x8]
1002245d:	mov    edx,DWORD PTR [ecx+0x10]
10022460:	mov    eax,DWORD PTR [ecx+0xc]
10022463:	sub    eax,edx
10022465:	sar    eax,0x2
10022468:	cmp    esi,eax
1002246a:	ja     0x1002246e
1002246c:	mov    eax,esi
1002246e:	lea    edx,[edx+eax*4]
10022471:	mov    DWORD PTR [ecx+0x10],edx
10022474:	xor    ecx,ecx
10022476:	cmp    esi,eax
10022478:	setne  cl
1002247b:	mov    eax,ecx
1002247d:	pop    esi
1002247e:	ret    0x8
10022481:	push   0x8
10022483:	mov    eax,0x100605f7
10022488:	call   0x10059df5
1002248d:	mov    eax,DWORD PTR [ebp+0xc]
10022490:	xor    edi,edi
10022492:	cmp    eax,edi
10022494:	mov    DWORD PTR [ebp-0x10],edi
10022497:	mov    ebx,0x80004003
1002249c:	je     0x10022537
100224a2:	mov    DWORD PTR [eax],edi
100224a4:	lea    eax,[ebp-0x14]
100224a7:	push   eax
100224a8:	call   0x100226ae
100224ad:	mov    ebx,eax
100224af:	cmp    ebx,edi
100224b1:	jl     0x10022537
100224b7:	mov    esi,DWORD PTR [ebp+0x8]
100224ba:	test   BYTE PTR [esi+0x14],0x2
100224be:	je     0x100224d8
100224c0:	mov    eax,DWORD PTR [esi]
100224c2:	push   esi
100224c3:	mov    DWORD PTR [ebp+0x8],esi
100224c6:	call   DWORD PTR [eax+0x4]
100224c9:	mov    DWORD PTR [ebp-0x4],edi
100224cc:	lea    eax,[ebp+0x8]
100224cf:	mov    DWORD PTR [ebp-0x10],0x1
100224d6:	jmp    0x100224db
100224d8:	lea    eax,[esi+0x4]
100224db:	mov    eax,DWORD PTR [eax]
100224dd:	push   edi
100224de:	mov    edi,DWORD PTR [ebp-0x14]
100224e1:	push   eax
100224e2:	push   DWORD PTR [esi+0xc]
100224e5:	push   DWORD PTR [esi+0x8]
100224e8:	push   edi
100224e9:	call   0x10022541
100224ee:	or     DWORD PTR [ebp-0x4],0xffffffff
100224f2:	test   BYTE PTR [ebp-0x10],0x1
100224f6:	mov    ebx,eax
100224f8:	je     0x10022507
100224fa:	mov    eax,DWORD PTR [ebp+0x8]
100224fd:	test   eax,eax
100224ff:	je     0x10022507
10022501:	mov    ecx,DWORD PTR [eax]
10022503:	push   eax
10022504:	call   DWORD PTR [ecx+0x8]
10022507:	test   ebx,ebx
10022509:	jl     0x1002252a
1002250b:	mov    eax,DWORD PTR [esi+0x10]
1002250e:	mov    ebx,DWORD PTR [ebp+0xc]
10022511:	push   0x1007140c
10022516:	mov    DWORD PTR [edi+0x10],eax
10022519:	push   edi
1002251a:	mov    eax,0x10071850
1002251f:	call   0x10010824
10022524:	mov    ebx,eax
10022526:	test   ebx,ebx
10022528:	jge    0x10022537
1002252a:	test   edi,edi
1002252c:	je     0x10022537
1002252e:	mov    eax,DWORD PTR [edi]
10022530:	push   0x1
10022532:	mov    ecx,edi
10022534:	call   DWORD PTR [eax+0x1c]
10022537:	mov    eax,ebx
10022539:	call   0x10059ecd
1002253e:	ret    0x8
10022541:	push   0x4
10022543:	mov    eax,0x1005fcdc
10022548:	call   0x10059e28
1002254d:	mov    esi,DWORD PTR [ebp+0x10]
10022550:	mov    ebx,DWORD PTR [ebp+0x8]
10022553:	cmp    DWORD PTR [ebp+0x18],0x3
10022557:	jne    0x1002260f
1002255d:	and    DWORD PTR [ebp-0x4],0x0
10022561:	mov    eax,esi
10022563:	sub    eax,DWORD PTR [ebp+0xc]
10022566:	xor    ecx,ecx
10022568:	push   0x4
1002256a:	sar    eax,0x2
1002256d:	pop    edx
1002256e:	mul    edx
10022570:	seto   cl
10022573:	neg    ecx
10022575:	or     ecx,eax
10022577:	push   ecx
10022578:	call   0x100438d7
1002257d:	or     DWORD PTR [ebp-0x4],0xffffffff
10022581:	pop    ecx
10022582:	mov    DWORD PTR [ebx+0x8],eax
10022585:	jmp    0x10022597
10022587:	or     DWORD PTR [ebp-0x4],0xffffffff
1002258b:	mov    eax,0x10022591
10022590:	ret    
10022591:	mov    ebx,DWORD PTR [ebp+0x8]
10022594:	mov    esi,DWORD PTR [ebp+0x10]
10022597:	mov    eax,DWORD PTR [ebx+0x8]
1002259a:	test   eax,eax
1002259c:	mov    DWORD PTR [ebx+0x10],eax
1002259f:	jne    0x100225ab
100225a1:	mov    eax,0x8007000e
100225a6:	jmp    0x10022635
100225ab:	mov    edi,DWORD PTR [ebp+0xc]
100225ae:	jmp    0x100225c8
100225b0:	mov    ecx,DWORD PTR [ebx+0x10]
100225b3:	mov    eax,edi
100225b5:	call   0x100249e2
100225ba:	test   eax,eax
100225bc:	mov    DWORD PTR [ebp+0x8],eax
100225bf:	jl     0x100225dd
100225c1:	add    DWORD PTR [ebx+0x10],0x4
100225c5:	add    edi,0x4
100225c8:	cmp    edi,esi
100225ca:	jne    0x100225b0
100225cc:	sub    esi,DWORD PTR [ebp+0xc]
100225cf:	mov    eax,DWORD PTR [ebx+0x8]
100225d2:	sar    esi,0x2
100225d5:	lea    eax,[eax+esi*4]
100225d8:	mov    DWORD PTR [ebx+0xc],eax
100225db:	jmp    0x10022618
100225dd:	mov    esi,DWORD PTR [ebx+0x8]
100225e0:	jmp    0x100225f1
100225e2:	mov    eax,DWORD PTR [esi]
100225e4:	test   eax,eax
100225e6:	je     0x100225ee
100225e8:	mov    ecx,DWORD PTR [eax]
100225ea:	push   eax
100225eb:	call   DWORD PTR [ecx+0x8]
100225ee:	add    esi,0x4
100225f1:	cmp    esi,DWORD PTR [ebx+0x10]
100225f4:	jb     0x100225e2
100225f6:	push   DWORD PTR [ebx+0x8]
100225f9:	call   0x10043178
100225fe:	xor    eax,eax
10022600:	mov    DWORD PTR [ebx+0x10],eax
10022603:	mov    DWORD PTR [ebx+0xc],eax
10022606:	mov    DWORD PTR [ebx+0x8],eax
10022609:	mov    eax,DWORD PTR [ebp+0x8]
1002260c:	pop    ecx
1002260d:	jmp    0x10022635
1002260f:	mov    eax,DWORD PTR [ebp+0xc]
10022612:	mov    DWORD PTR [ebx+0x8],eax
10022615:	mov    DWORD PTR [ebx+0xc],esi
10022618:	mov    edi,DWORD PTR [ebp+0x14]
1002261b:	lea    esi,[ebx+0x4]
1002261e:	cmp    DWORD PTR [esi],edi
10022620:	je     0x10022627
10022622:	call   0x10007961
10022627:	mov    eax,DWORD PTR [ebx+0x8]
1002262a:	mov    DWORD PTR [ebx+0x10],eax
1002262d:	mov    eax,DWORD PTR [ebp+0x18]
10022630:	mov    DWORD PTR [ebx+0x14],eax
10022633:	xor    eax,eax
10022635:	call   0x10059ecd
1002263a:	ret    0x14
1002263d:	push   0xc
1002263f:	mov    eax,0x1005ff87
10022644:	call   0x10059e28
10022649:	mov    edi,DWORD PTR [ebp+0x8]
1002264c:	xor    ebx,ebx
1002264e:	cmp    edi,ebx
10022650:	jne    0x10022659
10022652:	mov    eax,0x80004003
10022657:	jmp    0x100226a6
10022659:	push   0x8
1002265b:	mov    DWORD PTR [edi],ebx
1002265d:	mov    DWORD PTR [ebp-0x14],0x8007000e
10022664:	mov    DWORD PTR [ebp-0x4],ebx
10022667:	call   0x10043196
1002266c:	mov    esi,eax
1002266e:	cmp    esi,ebx
10022670:	pop    ecx
10022671:	je     0x10022689
10022673:	mov    DWORD PTR [esi+0x4],ebx
10022676:	mov    DWORD PTR [esi],0x10071918
1002267c:	mov    ecx,DWORD PTR ds:0x10082c64
10022682:	mov    eax,DWORD PTR [ecx]
10022684:	call   DWORD PTR [eax+0x4]
10022687:	jmp    0x1002269a
10022689:	xor    esi,esi
1002268b:	jmp    0x1002269a
1002268d:	mov    eax,0x10022693
10022692:	ret    
10022693:	mov    edi,DWORD PTR [ebp+0x8]
10022696:	xor    ebx,ebx
10022698:	mov    esi,ebx
1002269a:	cmp    esi,ebx
1002269c:	je     0x100226a1
1002269e:	mov    DWORD PTR [ebp-0x14],ebx
100226a1:	mov    eax,DWORD PTR [ebp-0x14]
100226a4:	mov    DWORD PTR [edi],esi
100226a6:	call   0x10059ecd
100226ab:	ret    0x4
100226ae:	push   0xc
100226b0:	mov    eax,0x1005ff6c
100226b5:	call   0x10059e28
100226ba:	mov    edi,DWORD PTR [ebp+0x8]
100226bd:	xor    esi,esi
100226bf:	cmp    edi,esi
100226c1:	jne    0x100226ca
100226c3:	mov    eax,0x80004003
100226c8:	jmp    0x1002270b
100226ca:	push   0x1c
100226cc:	mov    DWORD PTR [edi],esi
100226ce:	mov    DWORD PTR [ebp-0x14],0x8007000e
100226d5:	mov    DWORD PTR [ebp-0x18],esi
100226d8:	mov    DWORD PTR [ebp-0x4],esi
100226db:	call   0x10043196
100226e0:	cmp    eax,esi
100226e2:	pop    ecx
100226e3:	je     0x100226ee
100226e5:	mov    esi,eax
100226e7:	call   0x10020504
100226ec:	jmp    0x100226fe
100226ee:	xor    eax,eax
100226f0:	jmp    0x100226fe
100226f2:	mov    eax,0x100226f8
100226f7:	ret    
100226f8:	mov    edi,DWORD PTR [ebp+0x8]
100226fb:	mov    eax,DWORD PTR [ebp-0x18]
100226fe:	test   eax,eax
10022700:	je     0x10022706
10022702:	and    DWORD PTR [ebp-0x14],0x0
10022706:	mov    DWORD PTR [edi],eax
10022708:	mov    eax,DWORD PTR [ebp-0x14]
1002270b:	call   0x10059ecd
10022710:	ret    0x4
10022713:	sub    DWORD PTR [esp+0x4],0xc
10022718:	jmp    0x1002137b
1002271d:	sub    DWORD PTR [esp+0x4],0x10
10022722:	jmp    0x1002138b
10022727:	sub    DWORD PTR [esp+0x4],0x10
1002272c:	jmp    0x1002137b
10022731:	sub    DWORD PTR [esp+0x4],0x1c
10022736:	jmp    0x1002139b
1002273b:	sub    DWORD PTR [esp+0x4],0x14
10022740:	jmp    0x1002138b
10022745:	sub    ecx,0x38
10022748:	jmp    0x100219a6
1002274d:	sub    DWORD PTR [esp+0x4],0x14
10022752:	jmp    0x1002137b
10022757:	sub    DWORD PTR [esp+0x4],0x20
1002275c:	jmp    0x1002139b
10022761:	sub    DWORD PTR [esp+0x4],0x4
10022766:	jmp    0x1002139b
1002276b:	sub    DWORD PTR [esp+0x4],0x24
10022770:	jmp    0x1002139b
10022775:	sub    DWORD PTR [esp+0x4],0x1c
1002277a:	jmp    0x1002138b
1002277f:	sub    DWORD PTR [esp+0x4],0x1c
10022784:	jmp    0x1002137b
10022789:	sub    DWORD PTR [esp+0x4],0x8
1002278e:	jmp    0x1002139b
10022793:	sub    DWORD PTR [esp+0x4],0x28
10022798:	jmp    0x1002139b
1002279d:	sub    DWORD PTR [esp+0x4],0x20
100227a2:	jmp    0x1002138b
100227a7:	sub    DWORD PTR [esp+0x4],0x20
100227ac:	jmp    0x1002137b
100227b1:	sub    DWORD PTR [esp+0x4],0xc
100227b6:	jmp    0x1002139b
100227bb:	sub    DWORD PTR [esp+0x4],0x4
100227c0:	jmp    0x1002138b
100227c5:	sub    DWORD PTR [esp+0x4],0x24
100227ca:	jmp    0x1002138b
100227cf:	sub    DWORD PTR [esp+0x4],0x4
100227d4:	jmp    0x1002137b
100227d9:	sub    DWORD PTR [esp+0x4],0x24
100227de:	jmp    0x1002137b
100227e3:	sub    DWORD PTR [esp+0x4],0x10
100227e8:	jmp    0x1002139b
100227ed:	sub    DWORD PTR [esp+0x4],0x8
100227f2:	jmp    0x1002138b
100227f7:	sub    DWORD PTR [esp+0x4],0x28
100227fc:	jmp    0x1002138b
10022801:	sub    DWORD PTR [esp+0x4],0x8
10022806:	jmp    0x1002137b
1002280b:	sub    DWORD PTR [esp+0x4],0x28
10022810:	jmp    0x1002137b
10022815:	sub    DWORD PTR [esp+0x4],0x14
1002281a:	jmp    0x1002139b
1002281f:	sub    DWORD PTR [esp+0x4],0xc
10022824:	jmp    0x1002138b
10022829:	mov    eax,DWORD PTR [esp+0x4]
1002282d:	add    eax,0x8
10022830:	call   0x100122f4
10022835:	mov    ecx,DWORD PTR [esp+0x8]
10022839:	mov    DWORD PTR [ecx],eax
1002283b:	xor    eax,eax
1002283d:	ret    0x8
10022840:	mov    eax,DWORD PTR [esp+0x4]
10022844:	add    eax,0xc
10022847:	call   0x100122f4
1002284c:	mov    ecx,DWORD PTR [esp+0x8]
10022850:	mov    DWORD PTR [ecx],eax
10022852:	xor    eax,eax
10022854:	ret    0x8
10022857:	mov    eax,DWORD PTR [esp+0x4]
1002285b:	add    eax,0x10
1002285e:	call   0x100122f4
10022863:	mov    ecx,DWORD PTR [esp+0x8]
10022867:	mov    DWORD PTR [ecx],eax
10022869:	xor    eax,eax
1002286b:	ret    0x8
1002286e:	mov    eax,DWORD PTR [esp+0x4]
10022872:	add    eax,0x14
10022875:	call   0x100122f4
1002287a:	mov    ecx,DWORD PTR [esp+0x8]
1002287e:	mov    DWORD PTR [ecx],eax
10022880:	xor    eax,eax
10022882:	ret    0x8
10022885:	mov    eax,DWORD PTR [esp+0x4]
10022889:	add    eax,0x18
1002288c:	call   0x100122f4
10022891:	mov    ecx,DWORD PTR [esp+0x8]
10022895:	mov    DWORD PTR [ecx],eax
10022897:	xor    eax,eax
10022899:	ret    0x8
1002289c:	mov    eax,DWORD PTR [esp+0x4]
100228a0:	mov    eax,DWORD PTR [eax+0x1c]
100228a3:	mov    ecx,DWORD PTR [esp+0x8]
100228a7:	mov    DWORD PTR [ecx],eax
100228a9:	xor    eax,eax
100228ab:	ret    0x8
100228ae:	mov    WORD PTR [esi],0x8
100228b3:	mov    eax,DWORD PTR [eax]
100228b5:	test   eax,eax
100228b7:	push   edi
100228b8:	je     0x100228be
100228ba:	mov    edi,DWORD PTR [eax]
100228bc:	jmp    0x100228c0
100228be:	xor    edi,edi
100228c0:	test   edi,edi
100228c2:	jne    0x100228c9
100228c4:	and    DWORD PTR [esi+0x8],edi
100228c7:	jmp    0x100228e9
100228c9:	push   edi
100228ca:	call   DWORD PTR ds:0x100672a0
100228d0:	push   eax
100228d1:	push   edi
100228d2:	call   DWORD PTR ds:0x100672b0
100228d8:	test   eax,eax
100228da:	mov    DWORD PTR [esi+0x8],eax
100228dd:	jne    0x100228e9
100228df:	push   0x8007000e
100228e4:	call   0x10050e90
100228e9:	mov    eax,esi
100228eb:	pop    edi
100228ec:	ret    
100228ed:	test   ecx,ecx
100228ef:	jne    0x100228f3
100228f1:	mov    ecx,eax
100228f3:	cmp    eax,ecx
100228f5:	jne    0x100228fc
100228f7:	cmp    dx,WORD PTR [eax]
100228fa:	je     0x10022911
100228fc:	push   edx
100228fd:	push   0x0
100228ff:	push   ecx
10022900:	push   eax
10022901:	call   DWORD PTR ds:0x1006727c
10022907:	test   eax,eax
10022909:	jge    0x10022911
1002290b:	push   eax
1002290c:	call   0x10050e90
10022911:	ret    
10022912:	push   0x14
10022914:	mov    eax,0x1005fcc1
10022919:	call   0x10059df5
1002291e:	and    DWORD PTR [edi],0x0
10022921:	cmp    WORD PTR [esi],0x8
10022925:	jne    0x10022933
10022927:	push   DWORD PTR [esi+0x8]
1002292a:	mov    ecx,edi
1002292c:	call   0x10011381
10022931:	jmp    0x10022963
10022933:	lea    eax,[ebp-0x20]
10022936:	push   eax
10022937:	call   DWORD PTR ds:0x10067294
1002293d:	and    DWORD PTR [ebp-0x4],0x0
10022941:	mov    ecx,esi
10022943:	mov    dx,0x8
10022947:	lea    eax,[ebp-0x20]
1002294a:	call   0x100228ed
1002294f:	push   DWORD PTR [ebp-0x18]
10022952:	mov    ecx,edi
10022954:	call   0x10011381
10022959:	lea    eax,[ebp-0x20]
1002295c:	push   eax
1002295d:	call   DWORD PTR ds:0x10067284
10022963:	mov    eax,edi
10022965:	call   0x10059ecd
1002296a:	ret    
1002296b:	push   0x4
1002296d:	mov    eax,0x10061129
10022972:	call   0x10059df5
10022977:	xor    eax,eax
10022979:	lea    edi,[esi+0x8]
1002297c:	mov    DWORD PTR [esi+0x28],eax
1002297f:	mov    DWORD PTR [ebp-0x10],edi
10022982:	mov    DWORD PTR [edi+0x8],eax
10022985:	mov    DWORD PTR [ebp-0x4],eax
10022988:	mov    DWORD PTR [edi+0xc],eax
1002298b:	mov    BYTE PTR [ebp-0x4],0x1
1002298f:	call   0x10024757
10022994:	lea    ecx,[edi+0x14]
10022997:	mov    DWORD PTR [ecx],eax
10022999:	mov    BYTE PTR [eax+0x2d],0x1
1002299d:	mov    eax,DWORD PTR [ecx]
1002299f:	mov    DWORD PTR [eax+0x4],eax
100229a2:	mov    eax,DWORD PTR [ecx]
100229a4:	mov    DWORD PTR [eax],eax
100229a6:	mov    ecx,DWORD PTR [ecx]
100229a8:	mov    DWORD PTR [ecx+0x8],ecx
100229ab:	and    DWORD PTR [edi+0x18],0x0
100229af:	mov    DWORD PTR [esi],0x10072794
100229b5:	mov    DWORD PTR [esi+0x4],0x100727a4
100229bc:	mov    DWORD PTR [edi],0x100727b8
100229c2:	mov    DWORD PTR [esi+0xc],0x100727f0
100229c9:	mov    DWORD PTR [esi+0x24],0x10072808
100229d0:	mov    eax,esi
100229d2:	call   0x10059ecd
100229d7:	ret    
100229d8:	push   ebp
100229d9:	mov    ebp,esp
100229db:	sub    esp,0x34
100229de:	mov    eax,ds:0x100801ac
100229e3:	xor    eax,ebp
100229e5:	mov    DWORD PTR [ebp-0x4],eax
100229e8:	push   ebx
100229e9:	push   esi
100229ea:	mov    esi,DWORD PTR [ebp+0xc]
100229ed:	mov    eax,DWORD PTR [esi]
100229ef:	push   edi
100229f0:	lea    ecx,[ebp-0x34]
100229f3:	push   ecx
100229f4:	push   esi
100229f5:	call   DWORD PTR [eax+0xc]
100229f8:	mov    eax,DWORD PTR [esi]
100229fa:	lea    ecx,[ebp-0x10]
100229fd:	push   ecx
100229fe:	lea    ecx,[ebp-0x8]
10022a01:	push   ecx
10022a02:	lea    ecx,[ebp-0x14]
10022a05:	push   ecx
10022a06:	push   esi
10022a07:	call   DWORD PTR [eax+0x10]
10022a0a:	call   DWORD PTR ds:0x10080ffc
10022a10:	mov    ebx,eax
10022a12:	mov    eax,DWORD PTR [ebp-0x2c]
10022a15:	test   eax,eax
10022a17:	mov    DWORD PTR [ebp-0xc],eax
10022a1a:	je     0x10022a2b
10022a1c:	push   eax
10022a1d:	call   DWORD PTR ds:0x100670ac
10022a23:	inc    eax
10022a24:	cmp    eax,0x3fffffff
10022a29:	jle    0x10022a2f
10022a2b:	xor    eax,eax
10022a2d:	jmp    0x10022a45
10022a2f:	lea    edi,[eax+eax*1]
10022a32:	mov    eax,edi
10022a34:	call   0x1004b9b0
10022a39:	mov    esi,esp
10022a3b:	push   ebx
10022a3c:	push   edi
10022a3d:	push   DWORD PTR [ebp-0xc]
10022a40:	call   0x10002425
10022a45:	push   DWORD PTR [ebp-0x10]
10022a48:	push   DWORD PTR [ebp-0x8]
10022a4b:	push   eax
10022a4c:	call   0x10002068
10022a51:	add    esp,0xc
10022a54:	xor    eax,eax
10022a56:	lea    esp,[ebp-0x40]
10022a59:	pop    edi
10022a5a:	pop    esi
10022a5b:	pop    ebx
10022a5c:	mov    ecx,DWORD PTR [ebp-0x4]
10022a5f:	xor    ecx,ebp
10022a61:	call   0x10043615
10022a66:	leave  
10022a67:	ret    0x8
10022a6a:	push   esi
10022a6b:	mov    esi,ecx
10022a6d:	neg    ecx
10022a6f:	lea    eax,[esi+0x8]
10022a72:	sbb    ecx,ecx
10022a74:	and    ecx,eax
10022a76:	call   0x100241a8
10022a7b:	test   BYTE PTR [esp+0x8],0x1
10022a80:	je     0x10022a89
10022a82:	push   esi
10022a83:	call   0x10042fe2
10022a88:	pop    ecx
10022a89:	mov    eax,esi
10022a8b:	pop    esi
10022a8c:	ret    0x4
10022a8f:	push   ebp
10022a90:	mov    ebp,esp
10022a92:	and    esp,0xfffffff8
10022a95:	push   0xffffffff
10022a97:	push   0x1005ff51
10022a9c:	mov    eax,fs:0x0
10022aa2:	push   eax
10022aa3:	sub    esp,0x38
10022aa6:	push   ebx
10022aa7:	push   esi
10022aa8:	push   edi
10022aa9:	mov    eax,ds:0x100801ac
10022aae:	xor    eax,esp
10022ab0:	push   eax
10022ab1:	lea    eax,[esp+0x48]
10022ab5:	mov    fs:0x0,eax
10022abb:	mov    ebx,DWORD PTR [ebp+0x8]
10022abe:	mov    DWORD PTR [esp+0x18],ebx
10022ac2:	and    DWORD PTR [esp+0x50],0x0
10022ac7:	push   DWORD PTR [ebx+0x4]
10022aca:	call   0x1001f2b5
10022acf:	pop    ecx
10022ad0:	mov    esi,eax
10022ad2:	lea    eax,[esp+0x1c]
10022ad6:	push   eax
10022ad7:	lea    eax,[esp+0x24]
10022adb:	push   eax
10022adc:	push   DWORD PTR [ebx+0x4]
10022adf:	call   0x1001f31f
10022ae4:	add    esp,0xc
10022ae7:	test   al,al
10022ae9:	je     0x10022bd5
10022aef:	push   esi
10022af0:	mov    esi,DWORD PTR ds:0x100670f4
10022af6:	push   0x0
10022af8:	lea    eax,[esp+0x24]
10022afc:	push   eax
10022afd:	push   0x2
10022aff:	call   esi
10022b01:	mov    edi,DWORD PTR ds:0x100670cc
10022b07:	jmp    0x10022b1e
10022b09:	push   DWORD PTR [ebx+0x4]
10022b0c:	call   0x1001f2b5
10022b11:	pop    ecx
10022b12:	push   eax
10022b13:	push   0x0
10022b15:	lea    eax,[esp+0x24]
10022b19:	push   eax
10022b1a:	push   0x2
10022b1c:	call   esi
10022b1e:	mov    DWORD PTR [esp+0x10],eax
10022b22:	call   edi
10022b24:	cmp    DWORD PTR [esp+0x10],0x1
10022b29:	je     0x10022b09
10022b2b:	cmp    DWORD PTR [esp+0x10],0x102
10022b33:	jne    0x10022bc3
10022b39:	and    DWORD PTR [esp+0x10],0x0
10022b3e:	mov    BYTE PTR [esp+0x50],0x1
10022b43:	mov    eax,DWORD PTR [ebx]
10022b45:	mov    ecx,DWORD PTR [eax]
10022b47:	lea    edx,[esp+0x10]
10022b4b:	push   edx
10022b4c:	push   eax
10022b4d:	call   DWORD PTR [ecx+0x50]
10022b50:	test   eax,eax
10022b52:	jl     0x10022bb0
10022b54:	push   0x7
10022b56:	pop    ecx
10022b57:	xor    eax,eax
10022b59:	lea    edi,[esp+0x26]
10022b5d:	rep stos DWORD PTR es:[edi],eax
10022b5f:	stos   WORD PTR es:[edi],ax
10022b61:	push   0x1006dd18
10022b66:	lea    edi,[esp+0x18]
10022b6a:	mov    WORD PTR [esp+0x28],0x3e8
10022b71:	call   0x10002458
10022b76:	mov    esi,edi
10022b78:	mov    BYTE PTR [esp+0x50],0x2
10022b7d:	call   0x100113ea
10022b82:	mov    eax,DWORD PTR [eax]
10022b84:	push   0x0
10022b86:	lea    edx,[esp+0x28]
10022b8a:	mov    DWORD PTR [esp+0x2c],eax
10022b8e:	mov    eax,DWORD PTR [esp+0x14]
10022b92:	mov    ecx,DWORD PTR [eax]
10022b94:	push   edx
10022b95:	push   DWORD PTR [ebx+0x4]
10022b98:	push   eax
10022b99:	call   DWORD PTR [ecx+0x38]
10022b9c:	mov    esi,eax
10022b9e:	call   0x100025b3
10022ba3:	test   esi,esi
10022ba5:	jl     0x10022bb0
10022ba7:	push   DWORD PTR [ebx+0x4]
10022baa:	call   0x1001f24b
10022baf:	pop    ecx
10022bb0:	mov    BYTE PTR [esp+0x50],0x0
10022bb5:	mov    eax,DWORD PTR [esp+0x10]
10022bb9:	test   eax,eax
10022bbb:	je     0x10022bc3
10022bbd:	mov    ecx,DWORD PTR [eax]
10022bbf:	push   eax
10022bc0:	call   DWORD PTR [ecx+0x8]
10022bc3:	xor    esi,esi
10022bc5:	push   DWORD PTR [esp+esi*4+0x1c]
10022bc9:	call   DWORD PTR ds:0x10067078
10022bcf:	inc    esi
10022bd0:	cmp    esi,0x2
10022bd3:	jne    0x10022bc5
10022bd5:	lea    eax,[esp+0x18]
10022bd9:	call   0x1002448e
10022bde:	xor    eax,eax
10022be0:	mov    ecx,DWORD PTR [esp+0x48]
10022be4:	mov    DWORD PTR fs:0x0,ecx
10022beb:	pop    ecx
10022bec:	pop    edi
10022bed:	pop    esi
10022bee:	pop    ebx
10022bef:	mov    esp,ebp
10022bf1:	pop    ebp
10022bf2:	ret    0x4
10022bf5:	push   0x4c
10022bf7:	mov    eax,0x10063b24
10022bfc:	call   0x10059e28
10022c01:	test   BYTE PTR ds:0x100834a0,0x1
10022c08:	jne    0x10022c23
10022c0a:	or     DWORD PTR ds:0x100834a0,0x1
10022c11:	and    DWORD PTR ds:0x1008349c,0x0
10022c18:	push   0x10065fe7
10022c1d:	call   0x10043166
10022c22:	pop    ecx
10022c23:	push   0x1f4
10022c28:	push   DWORD PTR ds:0x10082fd0
10022c2e:	call   DWORD PTR ds:0x1006707c
10022c34:	test   eax,eax
10022c36:	jne    0x10022ce5
10022c3c:	xor    ebx,ebx
10022c3e:	mov    DWORD PTR [ebp-0x4],ebx
10022c41:	cmp    DWORD PTR ds:0x1008349c,ebx
10022c47:	jne    0x10022cd5
10022c4d:	push   0x2c
10022c4f:	call   0x10043196
10022c54:	mov    edi,eax
10022c56:	cmp    edi,ebx
10022c58:	pop    ecx
10022c59:	mov    esi,0x10022d5d
10022c5e:	je     0x10022c75
10022c60:	push   esi
10022c61:	push   0x10022d4c
10022c66:	push   0x2
10022c68:	push   0x14
10022c6a:	lea    eax,[edi+0x4]
10022c6d:	push   eax
10022c6e:	call   0x10045fb8
10022c73:	mov    ebx,edi
10022c75:	xor    eax,eax
10022c77:	push   eax
10022c78:	push   eax
10022c79:	push   ebx
10022c7a:	push   0x10023fae
10022c7f:	push   eax
10022c80:	push   eax
10022c81:	mov    edi,ebx
10022c83:	call   DWORD PTR ds:0x10067088
10022c89:	test   eax,eax
10022c8b:	je     0x10022cbc
10022c8d:	mov    eax,ds:0x1008349c
10022c92:	xor    edi,edi
10022c94:	cmp    ebx,eax
10022c96:	je     0x10022cb6
10022c98:	test   eax,eax
10022c9a:	mov    DWORD PTR [ebp-0x14],eax
10022c9d:	je     0x10022cb6
10022c9f:	push   esi
10022ca0:	push   0x2
10022ca2:	push   0x14
10022ca4:	add    eax,0x4
10022ca7:	push   eax
10022ca8:	call   0x1004325e
10022cad:	push   DWORD PTR [ebp-0x14]
10022cb0:	call   0x10042fe2
10022cb5:	pop    ecx
10022cb6:	mov    DWORD PTR ds:0x1008349c,ebx
10022cbc:	test   edi,edi
10022cbe:	je     0x10022cd5
10022cc0:	push   esi
10022cc1:	push   0x2
10022cc3:	push   0x14
10022cc5:	lea    eax,[edi+0x4]
10022cc8:	push   eax
10022cc9:	call   0x1004325e
10022cce:	push   edi
10022ccf:	call   0x10042fe2
10022cd4:	pop    ecx
10022cd5:	push   DWORD PTR ds:0x10082fd0
10022cdb:	call   DWORD PTR ds:0x10067090
10022ce1:	or     DWORD PTR [ebp-0x4],0xffffffff
10022ce5:	mov    eax,ds:0x1008349c
10022cea:	test   eax,eax
10022cec:	jne    0x10022d46
10022cee:	push   0x10071d00
10022cf3:	push   0x16
10022cf5:	mov    ecx,0x10071d40
10022cfa:	call   0x100042b4
10022cff:	pop    ecx
10022d00:	pop    ecx
10022d01:	push   eax
10022d02:	lea    ecx,[ebp-0x30]
10022d05:	call   0x100011a7
10022d0a:	lea    eax,[ebp-0x30]
10022d0d:	push   eax
10022d0e:	lea    eax,[ebp-0x58]
10022d11:	push   eax
10022d12:	mov    DWORD PTR [ebp-0x4],0x2
10022d19:	call   0x10006eba
10022d1e:	push   0x10076508
10022d23:	lea    eax,[ebp-0x58]
10022d26:	push   eax
10022d27:	jmp    0x10022d41
10022d29:	push   0x4
10022d2b:	call   0x10038b80
10022d30:	pop    ecx
10022d31:	push   DWORD PTR ds:0x10082fd0
10022d37:	call   DWORD PTR ds:0x10067090
10022d3d:	push   0x0
10022d3f:	push   0x0
10022d41:	call   0x10047942
10022d46:	call   0x10059ecd
10022d4b:	ret    
10022d4c:	push   esi
10022d4d:	mov    esi,ecx
10022d4f:	mov    ecx,0x10082a6c
10022d54:	call   0x1000214c
10022d59:	mov    eax,esi
10022d5b:	pop    esi
10022d5c:	ret    
10022d5d:	mov    eax,DWORD PTR [ecx]
10022d5f:	sub    eax,0x10
10022d62:	jmp    0x10002069
10022d67:	push   0x0
10022d69:	mov    eax,0x100610f8
10022d6e:	call   0x10059df5
10022d73:	mov    ebx,DWORD PTR [ebp+0x8]
10022d76:	push   0x8
10022d78:	call   0x10043196
10022d7d:	pop    ecx
10022d7e:	xor    ecx,ecx
10022d80:	cmp    eax,ecx
10022d82:	je     0x10022d88
10022d84:	mov    DWORD PTR [eax],ecx
10022d86:	jmp    0x10022d8a
10022d88:	xor    eax,eax
10022d8a:	mov    DWORD PTR [ebx],eax
10022d8c:	mov    DWORD PTR [ebp-0x4],ecx
10022d8f:	mov    DWORD PTR [ebx+0x4],ecx
10022d92:	mov    ecx,DWORD PTR [ebp+0xc]
10022d95:	mov    BYTE PTR [ebp-0x4],0x1
10022d99:	mov    eax,DWORD PTR [ebx]
10022d9b:	mov    edi,DWORD PTR [ecx]
10022d9d:	cmp    DWORD PTR [eax],edi
10022d9f:	je     0x10022da8
10022da1:	mov    esi,eax
10022da3:	call   0x10007961
10022da8:	mov    edi,DWORD PTR ds:0x1006715c
10022dae:	mov    esi,DWORD PTR [ebx]
10022db0:	call   edi
10022db2:	xor    ecx,ecx
10022db4:	push   ecx
10022db5:	push   0x4
10022db7:	mov    DWORD PTR [esi+0x4],eax
10022dba:	mov    eax,DWORD PTR [ebx]
10022dbc:	push   eax
10022dbd:	push   0x10022a8f
10022dc2:	push   ecx
10022dc3:	push   ecx
10022dc4:	call   DWORD PTR ds:0x10067088
10022dca:	push   eax
10022dcb:	lea    esi,[ebx+0x4]
10022dce:	call   0x100049bb
10022dd3:	mov    eax,DWORD PTR [esi]
10022dd5:	test   eax,eax
10022dd7:	je     0x10022df6
10022dd9:	push   0x2
10022ddb:	push   eax
10022ddc:	call   DWORD PTR ds:0x10067170
10022de2:	call   edi
10022de4:	push   eax
10022de5:	call   0x1001f137
10022dea:	pop    ecx
10022deb:	push   DWORD PTR [esi]
10022ded:	call   DWORD PTR ds:0x1006716c
10022df3:	and    DWORD PTR [ebx],0x0
10022df6:	mov    eax,ebx
10022df8:	call   0x10059ecd
10022dfd:	ret    0x8
10022e00:	push   0x58
10022e02:	mov    eax,0x10063015
10022e07:	call   0x10059e28
10022e0c:	xor    ebx,ebx
10022e0e:	mov    DWORD PTR [ebp-0x18],ebx
10022e11:	mov    DWORD PTR [ebp-0x4],ebx
10022e14:	push   DWORD PTR ds:0x10082fdc
10022e1a:	xor    eax,eax
10022e1c:	lea    edi,[ebp-0x40]
10022e1f:	mov    DWORD PTR [ebp-0x44],ebx
10022e22:	stos   DWORD PTR es:[edi],eax
10022e23:	lea    edi,[ebp-0x48]
10022e26:	mov    DWORD PTR [ebp-0x4c],ebx
10022e29:	stos   DWORD PTR es:[edi],eax
10022e2a:	call   DWORD PTR ds:0x10067148
10022e30:	mov    eax,ds:0x10083010
10022e35:	mov    DWORD PTR [ebp-0x54],eax
10022e38:	mov    eax,ds:0x10082fd4
10022e3d:	push   0xffffffff
10022e3f:	mov    DWORD PTR [ebp-0x50],eax
10022e42:	push   ebx
10022e43:	lea    eax,[ebp-0x54]
10022e46:	push   eax
10022e47:	push   0x2
10022e49:	call   DWORD PTR ds:0x100670f4
10022e4f:	cmp    eax,ebx
10022e51:	jne    0x10022f80
10022e57:	push   0x1f4
10022e5c:	push   DWORD PTR ds:0x10082fdc
10022e62:	call   DWORD PTR ds:0x1006707c
10022e68:	test   eax,eax
10022e6a:	je     0x10022f89
10022e70:	mov    BYTE PTR [ebp-0x4],0x1
10022e74:	mov    edi,DWORD PTR [ebp-0x4c]
10022e77:	mov    esi,DWORD PTR [ebp-0x48]
10022e7a:	add    edi,0x989680
10022e80:	adc    esi,ebx
10022e82:	call   0x1002f6a0
10022e87:	cmp    esi,edx
10022e89:	ja     0x10022f53
10022e8f:	jb     0x10022e99
10022e91:	cmp    edi,eax
10022e93:	jae    0x10022f53
10022e99:	lea    eax,[ebp-0x2c]
10022e9c:	push   ebx
10022e9d:	push   eax
10022e9e:	call   0x10002818
10022ea3:	pop    ecx
10022ea4:	pop    ecx
10022ea5:	mov    ecx,DWORD PTR [eax]
10022ea7:	mov    ebx,ecx
10022ea9:	xor    esi,esi
10022eab:	mov    DWORD PTR [eax],esi
10022ead:	mov    DWORD PTR [ebp-0x28],ebx
10022eb0:	lea    eax,[ebp-0x2c]
10022eb3:	mov    BYTE PTR [ebp-0x4],0x2
10022eb7:	call   0x1000428d
10022ebc:	push   ebx
10022ebd:	call   0x10002896
10022ec2:	test   al,al
10022ec4:	je     0x10022ee2
10022ec6:	mov    eax,DWORD PTR [ebx]
10022ec8:	push   0x1
10022eca:	push   eax
10022ecb:	lea    ecx,[ebp-0x5c]
10022ece:	call   0x100358a0
10022ed3:	mov    ecx,DWORD PTR [ebp-0x44]
10022ed6:	cmp    ecx,DWORD PTR [eax]
10022ed8:	jne    0x10022ee2
10022eda:	mov    ecx,DWORD PTR [ebp-0x40]
10022edd:	cmp    ecx,DWORD PTR [eax+0x4]
10022ee0:	je     0x10022f40
10022ee2:	cmp    DWORD PTR [ebp-0x18],esi
10022ee5:	mov    DWORD PTR [ebp-0x44],esi
10022ee8:	mov    DWORD PTR [ebp-0x40],esi
10022eeb:	je     0x10022efc
10022eed:	push   0x1007145c
10022ef2:	xor    eax,eax
10022ef4:	lea    esi,[ebp-0x18]
10022ef7:	call   0x100107d4
10022efc:	push   ebx
10022efd:	lea    eax,[ebp-0x30]
10022f00:	push   eax
10022f01:	call   0x10023797
10022f06:	mov    edi,DWORD PTR [eax]
10022f08:	cmp    DWORD PTR [ebp-0x18],edi
10022f0b:	je     0x10022f15
10022f0d:	lea    esi,[ebp-0x18]
10022f10:	call   0x10007961
10022f15:	mov    eax,DWORD PTR [ebp-0x30]
10022f18:	test   eax,eax
10022f1a:	je     0x10022f22
10022f1c:	mov    ecx,DWORD PTR [eax]
10022f1e:	push   eax
10022f1f:	call   DWORD PTR [ecx+0x8]
10022f22:	cmp    DWORD PTR [ebp-0x18],0x0
10022f26:	je     0x10022f40
10022f28:	mov    ebx,DWORD PTR [ebx]
10022f2a:	push   0x1
10022f2c:	push   ebx
10022f2d:	lea    ecx,[ebp-0x64]
10022f30:	call   0x100358a0
10022f35:	mov    ecx,DWORD PTR [eax]
10022f37:	mov    eax,DWORD PTR [eax+0x4]
10022f3a:	mov    DWORD PTR [ebp-0x44],ecx
10022f3d:	mov    DWORD PTR [ebp-0x40],eax
10022f40:	call   0x1002f6a0
10022f45:	mov    DWORD PTR [ebp-0x4c],eax
10022f48:	lea    eax,[ebp-0x28]
10022f4b:	mov    DWORD PTR [ebp-0x48],edx
10022f4e:	call   0x1000428d
10022f53:	and    DWORD PTR [ebp-0x4],0x0
10022f57:	xor    ebx,ebx
10022f59:	cmp    DWORD PTR [ebp-0x18],ebx
10022f5c:	jne    0x10022fc9
10022f5e:	mov    ecx,DWORD PTR [ebp+0x8]
10022f61:	xor    edx,edx
10022f63:	cmp    DWORD PTR [ecx],ebx
10022f65:	je     0x10022f75
10022f67:	lea    eax,[ecx+0x14]
10022f6a:	mov    BYTE PTR [eax],0x0
10022f6d:	inc    edx
10022f6e:	add    eax,0x14
10022f71:	cmp    edx,DWORD PTR [ecx]
10022f73:	jne    0x10022f6a
10022f75:	push   DWORD PTR ds:0x10082fd8
10022f7b:	jmp    0x10022e2a
10022f80:	cmp    eax,0x1
10022f83:	je     0x10022e70
10022f89:	or     DWORD PTR [ebp-0x4],0xffffffff
10022f8d:	mov    eax,DWORD PTR [ebp-0x18]
10022f90:	cmp    eax,ebx
10022f92:	je     0x10022f9a
10022f94:	mov    ecx,DWORD PTR [eax]
10022f96:	push   eax
10022f97:	call   DWORD PTR [ecx+0x8]
10022f9a:	call   0x10059ecd
10022f9f:	ret    0x4
10022fa2:	xor    edi,edi
10022fa4:	cmp    DWORD PTR [ebp-0x18],edi
10022fa7:	mov    DWORD PTR [ebp-0x44],edi
10022faa:	mov    DWORD PTR [ebp-0x40],edi
10022fad:	je     0x10022fbe
10022faf:	push   0x1007145c
10022fb4:	xor    eax,eax
10022fb6:	lea    esi,[ebp-0x18]
10022fb9:	call   0x100107d4
10022fbe:	mov    DWORD PTR [ebp-0x4],edi
10022fc1:	mov    eax,0x10022fc7
10022fc6:	ret    
10022fc7:	jmp    0x10022f57
10022fc9:	call   DWORD PTR ds:0x1006713c
10022fcf:	mov    edi,DWORD PTR [ebp+0x8]
10022fd2:	cmp    DWORD PTR [edi],ebx
10022fd4:	mov    DWORD PTR [ebp-0x24],eax
10022fd7:	mov    DWORD PTR [ebp-0x28],ebx
10022fda:	je     0x1002313d
10022fe0:	add    edi,0xc
10022fe3:	lea    eax,[ebp-0x18]
10022fe6:	push   eax
10022fe7:	lea    eax,[ebp-0x38]
10022fea:	push   eax
10022feb:	call   0x10022d67
10022ff0:	mov    BYTE PTR [ebp-0x4],0x4
10022ff4:	push   DWORD PTR [edi+0x4]
10022ff7:	mov    eax,DWORD PTR [ebp-0x18]
10022ffa:	push   DWORD PTR [edi]
10022ffc:	mov    ebx,DWORD PTR [eax]
10022ffe:	push   DWORD PTR [edi-0x4]
10023001:	lea    esi,[edi-0x8]
10023004:	mov    DWORD PTR [ebp-0x20],eax
10023007:	add    ebx,0x34
1002300a:	call   0x100041e6
1002300f:	push   eax
10023010:	push   DWORD PTR [ebp-0x20]
10023013:	call   DWORD PTR [ebx]
10023015:	test   eax,eax
10023017:	setge  al
1002301a:	mov    BYTE PTR [edi+0x8],al
1002301d:	call   DWORD PTR ds:0x1006713c
10023023:	mov    ebx,DWORD PTR ds:0x1006715c
10023029:	and    DWORD PTR [ebp-0x1c],0x0
1002302d:	mov    DWORD PTR [ebp-0x20],eax
10023030:	lea    eax,[ebp-0x1c]
10023033:	push   eax
10023034:	push   0x0
10023036:	call   ebx
10023038:	push   eax
10023039:	call   0x1001f31f
1002303e:	add    esp,0xc
10023041:	test   al,al
10023043:	je     0x100230fe
10023049:	push   DWORD PTR [ebp-0x1c]
1002304c:	call   DWORD PTR ds:0x10067148
10023052:	push   0xffffffff
10023054:	push   DWORD PTR [ebp-0x34]
10023057:	call   DWORD PTR ds:0x1006707c
1002305d:	cmp    DWORD PTR [ebp-0x1c],0x0
10023061:	je     0x1002306c
10023063:	push   DWORD PTR [ebp-0x1c]
10023066:	call   DWORD PTR ds:0x10067078
1002306c:	and    DWORD PTR [ebp-0x1c],0x0
10023070:	call   ebx
10023072:	push   eax
10023073:	call   0x1001f3d2
10023078:	test   al,al
1002307a:	pop    ecx
1002307b:	je     0x100230a9
1002307d:	push   0xe
1002307f:	call   0x10038b80
10023084:	mov    eax,DWORD PTR [ebp-0x20]
10023087:	sub    eax,DWORD PTR [ebp-0x24]
1002308a:	pop    ecx
1002308b:	push   eax
1002308c:	call   0x100041e6
10023091:	push   eax
10023092:	call   0x10002068
10023097:	xor    ebx,ebx
10023099:	pop    ecx
1002309a:	pop    ecx
1002309b:	mov    DWORD PTR [ebp-0x44],ebx
1002309e:	mov    DWORD PTR [ebp-0x40],ebx
100230a1:	mov    DWORD PTR [ebp-0x4c],ebx
100230a4:	mov    DWORD PTR [ebp-0x48],ebx
100230a7:	jmp    0x100230ab
100230a9:	xor    ebx,ebx
100230ab:	cmp    BYTE PTR [edi+0x8],0x0
100230af:	je     0x10023124
100230b1:	mov    eax,DWORD PTR [ebp-0x20]
100230b4:	sub    eax,DWORD PTR [ebp-0x24]
100230b7:	push   eax
100230b8:	call   0x100041e6
100230bd:	push   eax
100230be:	call   0x10002068
100230c3:	mov    eax,DWORD PTR [ebp-0x20]
100230c6:	pop    ecx
100230c7:	mov    BYTE PTR [ebp-0x4],0x0
100230cb:	cmp    DWORD PTR [ebp-0x34],ebx
100230ce:	pop    ecx
100230cf:	mov    DWORD PTR [ebp-0x24],eax
100230d2:	je     0x100230dd
100230d4:	push   DWORD PTR [ebp-0x34]
100230d7:	call   DWORD PTR ds:0x10067078
100230dd:	lea    eax,[ebp-0x38]
100230e0:	mov    DWORD PTR [ebp-0x34],ebx
100230e3:	call   0x1002448e
100230e8:	inc    DWORD PTR [ebp-0x28]
100230eb:	mov    eax,DWORD PTR [ebp+0x8]
100230ee:	mov    ecx,DWORD PTR [ebp-0x28]
100230f1:	add    edi,0x14
100230f4:	cmp    ecx,DWORD PTR [eax]
100230f6:	jne    0x10022fe3
100230fc:	jmp    0x1002313d
100230fe:	xor    esi,esi
10023100:	cmp    DWORD PTR [ebp-0x1c],esi
10023103:	je     0x1002310e
10023105:	push   DWORD PTR [ebp-0x1c]
10023108:	call   DWORD PTR ds:0x10067078
1002310e:	cmp    DWORD PTR [ebp-0x34],esi
10023111:	mov    DWORD PTR [ebp-0x1c],esi
10023114:	je     0x1002311f
10023116:	push   DWORD PTR [ebp-0x34]
10023119:	call   DWORD PTR ds:0x10067078
1002311f:	mov    DWORD PTR [ebp-0x34],esi
10023122:	jmp    0x10023135
10023124:	cmp    DWORD PTR [ebp-0x34],ebx
10023127:	je     0x10023132
10023129:	push   DWORD PTR [ebp-0x34]
1002312c:	call   DWORD PTR ds:0x10067078
10023132:	mov    DWORD PTR [ebp-0x34],ebx
10023135:	lea    eax,[ebp-0x38]
10023138:	call   0x1002448e
1002313d:	push   DWORD PTR ds:0x10082fd8
10023143:	call   DWORD PTR ds:0x10067148
10023149:	xor    ebx,ebx
1002314b:	jmp    0x10022e30
10023150:	mov    eax,DWORD PTR [esi+0x4]
10023153:	test   eax,eax
10023155:	je     0x1002315e
10023157:	push   eax
10023158:	call   DWORD PTR ds:0x10067078
1002315e:	and    DWORD PTR [esi+0x4],0x0
10023162:	mov    eax,esi
10023164:	jmp    0x1002448e
10023169:	push   0xa4
1002316e:	mov    eax,0x10062fdf
10023173:	call   0x10059e28
10023178:	push   0x1f4
1002317d:	push   DWORD PTR ds:0x10082fdc
10023183:	call   DWORD PTR ds:0x1006707c
10023189:	test   eax,eax
1002318b:	je     0x1002319c
1002318d:	push   0xf
1002318f:	call   0x10038b80
10023194:	pop    ecx
10023195:	xor    al,al
10023197:	jmp    0x100233ea
1002319c:	xor    esi,esi
1002319e:	mov    DWORD PTR [ebp-0x4],esi
100231a1:	mov    BYTE PTR [ebp-0x11],0x0
100231a5:	mov    DWORD PTR [ebp-0x18],esi
100231a8:	cmp    DWORD PTR [ebp+0x10],esi
100231ab:	je     0x100231da
100231ad:	lea    eax,[ebp-0x1c]
100231b0:	push   eax
100231b1:	call   0x10024781
100231b6:	test   eax,eax
100231b8:	jl     0x100233db
100231be:	mov    edi,DWORD PTR [ebp-0x1c]
100231c1:	mov    eax,DWORD PTR [ebp+0x10]
100231c4:	mov    ecx,edi
100231c6:	call   0x10010d8c
100231cb:	cmp    edi,esi
100231cd:	je     0x100231da
100231cf:	lea    esi,[ebp-0x18]
100231d2:	call   0x10007961
100231d7:	mov    esi,DWORD PTR [ebp-0x18]
100231da:	mov    eax,DWORD PTR [ebp+0xc]
100231dd:	mov    WORD PTR [ebp-0x60],0x16
100231e3:	mov    DWORD PTR [ebp-0x58],eax
100231e6:	lea    eax,[ebp-0x50]
100231e9:	push   eax
100231ea:	call   DWORD PTR ds:0x10067294
100231f0:	mov    BYTE PTR [ebp-0x4],0x3
100231f4:	cmp    DWORD PTR [ebp+0x10],0x0
100231f8:	je     0x1002323b
100231fa:	test   esi,esi
100231fc:	mov    WORD PTR [ebp-0x70],0x9
10023202:	mov    DWORD PTR [ebp-0x68],esi
10023205:	je     0x1002320d
10023207:	mov    eax,DWORD PTR [esi]
10023209:	push   esi
1002320a:	call   DWORD PTR [eax+0x4]
1002320d:	lea    eax,[ebp-0x70]
10023210:	push   eax
10023211:	lea    eax,[ebp-0x50]
10023214:	push   eax
10023215:	mov    BYTE PTR [ebp-0x4],0x4
10023219:	call   DWORD PTR ds:0x10067280
1002321f:	test   eax,eax
10023221:	jge    0x10023229
10023223:	push   eax
10023224:	call   0x10050e90
10023229:	lea    eax,[ebp-0x70]
1002322c:	mov    BYTE PTR [ebp-0x4],0x3
10023230:	mov    ebx,DWORD PTR ds:0x10067284
10023236:	push   eax
10023237:	call   ebx
10023239:	jmp    0x10023241
1002323b:	mov    ebx,DWORD PTR ds:0x10067284
10023241:	mov    eax,DWORD PTR [ebp+0x14]
10023244:	cmp    DWORD PTR [eax+0x18],0x10
10023248:	jb     0x1002324f
1002324a:	mov    eax,DWORD PTR [eax+0x4]
1002324d:	jmp    0x10023252
1002324f:	add    eax,0x4
10023252:	push   eax
10023253:	lea    edi,[ebp+0x10]
10023256:	call   0x10002458
1002325b:	lea    esi,[ebp-0x80]
1002325e:	mov    BYTE PTR [ebp-0x4],0x5
10023262:	call   0x100228ae
10023267:	call   0x100025b3
1002326c:	mov    esi,DWORD PTR ds:0x10067294
10023272:	lea    eax,[ebp-0x40]
10023275:	push   eax
10023276:	call   esi
10023278:	lea    eax,[ebp-0x30]
1002327b:	push   eax
1002327c:	call   esi
1002327e:	mov    BYTE PTR [ebp-0x4],0x9
10023282:	lea    esi,[ebp-0x60]
10023285:	lea    edi,[ebp-0x90]
1002328b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002328c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002328d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002328e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002328f:	lea    esi,[ebp-0x50]
10023292:	lea    edi,[ebp-0xa0]
10023298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002329a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002329b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002329c:	lea    esi,[ebp-0x80]
1002329f:	lea    edi,[ebp-0xb0]
100232a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100232a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100232a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100232a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100232a9:	mov    esi,DWORD PTR [ebp+0x8]
100232ac:	push   0x10071d58
100232b1:	push   0xb
100232b3:	mov    ecx,0x10071d90
100232b8:	mov    DWORD PTR [esi],0x2
100232be:	call   0x1000444a
100232c3:	pop    ecx
100232c4:	pop    ecx
100232c5:	push   eax
100232c6:	lea    eax,[esi+0x4]
100232c9:	push   eax
100232ca:	call   0x1000238f
100232cf:	lea    eax,[ebp-0xb0]
100232d5:	mov    DWORD PTR [esi+0x8],eax
100232d8:	lea    eax,[ebp-0x40]
100232db:	push   0x10071da8
100232e0:	push   0xd
100232e2:	mov    ecx,0x10071dd4
100232e7:	mov    DWORD PTR [esi+0xc],0x3
100232ee:	mov    DWORD PTR [esi+0x10],eax
100232f1:	call   0x1000444a
100232f6:	pop    ecx
100232f7:	pop    ecx
100232f8:	push   eax
100232f9:	lea    eax,[esi+0x18]
100232fc:	push   eax
100232fd:	call   0x1000238f
10023302:	push   DWORD PTR ds:0x10082fd4
10023308:	and    DWORD PTR [esi+0x1c],0x0
1002330c:	and    DWORD PTR [esi+0x20],0x0
10023310:	lea    eax,[ebp-0x30]
10023313:	mov    DWORD PTR [esi+0x24],eax
10023316:	call   DWORD PTR ds:0x10067148
1002331c:	push   0xffffffff
1002331e:	push   DWORD PTR ds:0x10082fd8
10023324:	call   DWORD PTR ds:0x1006707c
1002332a:	cmp    BYTE PTR [esi+0x14],0x0
1002332e:	je     0x100233ac
10023330:	cmp    BYTE PTR [esi+0x28],0x0
10023334:	je     0x100233ac
10023336:	lea    esi,[ebp-0x40]
10023339:	lea    edi,[ebp+0x10]
1002333c:	call   0x10022912
10023341:	mov    BYTE PTR [ebp-0x4],0xa
10023345:	mov    eax,DWORD PTR [eax]
10023347:	test   eax,eax
10023349:	je     0x1002334f
1002334b:	mov    eax,DWORD PTR [eax]
1002334d:	jmp    0x10023351
1002334f:	xor    eax,eax
10023351:	push   eax
10023352:	push   DWORD PTR [ebp+0x18]
10023355:	call   0x1000238f
1002335a:	lea    edi,[ebp+0x10]
1002335d:	mov    BYTE PTR [ebp-0x4],0x9
10023361:	call   0x100025b3
10023366:	push   DWORD PTR [ebp+0x18]
10023369:	call   0x10023fed
1002336e:	mov    esi,DWORD PTR [ebp+0x1c]
10023371:	mov    BYTE PTR [ebp-0x4],0xb
10023375:	cmp    WORD PTR [ebp-0x30],0x3
1002337a:	pop    ecx
1002337b:	mov    BYTE PTR [ebp-0x11],al
1002337e:	mov    DWORD PTR [esi],0x1
10023384:	je     0x1002339f
10023386:	push   0x3
10023388:	push   0x0
1002338a:	lea    eax,[ebp-0x30]
1002338d:	push   eax
1002338e:	push   eax
1002338f:	call   DWORD PTR ds:0x1006727c
10023395:	test   eax,eax
10023397:	jge    0x1002339f
10023399:	push   eax
1002339a:	call   0x10050e90
1002339f:	movsx  eax,WORD PTR [ebp-0x28]
100233a3:	mov    DWORD PTR [esi],eax
100233a5:	mov    DWORD PTR [ebp-0x4],0x9
100233ac:	lea    eax,[ebp-0x30]
100233af:	push   eax
100233b0:	call   ebx
100233b2:	lea    eax,[ebp-0x40]
100233b5:	push   eax
100233b6:	call   ebx
100233b8:	lea    eax,[ebp-0x80]
100233bb:	push   eax
100233bc:	call   ebx
100233be:	lea    eax,[ebp-0x50]
100233c1:	push   eax
100233c2:	call   ebx
100233c4:	lea    eax,[ebp-0x60]
100233c7:	push   eax
100233c8:	call   ebx
100233ca:	mov    BYTE PTR [ebp-0x4],0x0
100233ce:	mov    eax,DWORD PTR [ebp-0x18]
100233d1:	test   eax,eax
100233d3:	je     0x100233db
100233d5:	mov    ecx,DWORD PTR [eax]
100233d7:	push   eax
100233d8:	call   DWORD PTR [ecx+0x8]
100233db:	push   DWORD PTR ds:0x10082fdc
100233e1:	call   DWORD PTR ds:0x10067148
100233e7:	mov    al,BYTE PTR [ebp-0x11]
100233ea:	call   0x10059ecd
100233ef:	ret    0x18
100233f2:	mov    DWORD PTR [ebp-0x4],0x9
100233f9:	mov    eax,0x100233ff
100233fe:	ret    
100233ff:	mov    ebx,DWORD PTR ds:0x10067284
10023405:	jmp    0x100233ac
10023407:	push   0x4
10023409:	call   0x10038b80
1002340e:	pop    ecx
1002340f:	mov    eax,0x100233db
10023414:	ret    
10023415:	push   0xd8
1002341a:	mov    eax,0x10064056
1002341f:	call   0x10059e28
10023424:	mov    edi,ecx
10023426:	push   0x1f4
1002342b:	push   DWORD PTR ds:0x10082fdc
10023431:	call   DWORD PTR ds:0x1006707c
10023437:	test   eax,eax
10023439:	je     0x10023447
1002343b:	push   0xf
1002343d:	call   0x10038b80
10023442:	pop    ecx
10023443:	xor    al,al
10023445:	jmp    0x100234a3
10023447:	lea    eax,[ebp-0x1c]
1002344a:	xor    ebx,ebx
1002344c:	push   eax
1002344d:	mov    BYTE PTR [ebp-0x15],bl
10023450:	mov    DWORD PTR [ebp-0x4],ebx
10023453:	call   0x10024781
10023458:	test   eax,eax
1002345a:	jl     0x10023494
1002345c:	mov    esi,DWORD PTR [ebp-0x1c]
1002345f:	mov    eax,DWORD PTR [ebp+0x10]
10023462:	mov    ecx,esi
10023464:	call   0x10010d8c
10023469:	cmp    esi,ebx
1002346b:	mov    DWORD PTR [ebp-0x80],esi
1002346e:	je     0x10023476
10023470:	mov    eax,DWORD PTR [esi]
10023472:	push   esi
10023473:	call   DWORD PTR [eax+0x4]
10023476:	lea    eax,[ebp+0x10]
10023479:	push   eax
1002347a:	mov    BYTE PTR [ebp-0x4],0x1
1002347e:	call   0x100247fe
10023483:	test   eax,eax
10023485:	jge    0x100234ab
10023487:	cmp    esi,ebx
10023489:	mov    BYTE PTR [ebp-0x4],bl
1002348c:	je     0x10023494
1002348e:	mov    eax,DWORD PTR [esi]
10023490:	push   esi
10023491:	call   DWORD PTR [eax+0x8]
10023494:	push   DWORD PTR ds:0x10082fdc
1002349a:	call   DWORD PTR ds:0x10067148
100234a0:	mov    al,BYTE PTR [ebp-0x15]
100234a3:	call   0x10059ecd
100234a8:	ret    0x1c
100234ab:	mov    ecx,DWORD PTR [ebp+0x14]
100234ae:	mov    ebx,DWORD PTR [ebp+0x10]
100234b1:	call   0x10011a39
100234b6:	test   ebx,ebx
100234b8:	mov    DWORD PTR [ebp+0x14],ebx
100234bb:	je     0x100234c3
100234bd:	mov    eax,DWORD PTR [ebx]
100234bf:	push   ebx
100234c0:	call   DWORD PTR [eax+0x4]
100234c3:	mov    eax,DWORD PTR [ebp+0xc]
100234c6:	mov    WORD PTR [ebp-0x5c],0x16
100234cc:	mov    DWORD PTR [ebp-0x54],eax
100234cf:	test   esi,esi
100234d1:	mov    BYTE PTR [ebp-0x4],0x3
100234d5:	mov    WORD PTR [ebp-0x3c],0x9
100234db:	mov    DWORD PTR [ebp-0x34],esi
100234de:	je     0x100234e6
100234e0:	mov    eax,DWORD PTR [esi]
100234e2:	push   esi
100234e3:	call   DWORD PTR [eax+0x4]
100234e6:	test   ebx,ebx
100234e8:	mov    BYTE PTR [ebp-0x4],0x4
100234ec:	mov    WORD PTR [ebp-0x6c],0x9
100234f2:	mov    DWORD PTR [ebp-0x64],ebx
100234f5:	je     0x100234fd
100234f7:	mov    eax,DWORD PTR [ebx]
100234f9:	push   ebx
100234fa:	call   DWORD PTR [eax+0x4]
100234fd:	test   edi,edi
100234ff:	mov    BYTE PTR [ebp-0x4],0x5
10023503:	mov    WORD PTR [ebp-0x2c],0x9
10023509:	mov    DWORD PTR [ebp-0x24],edi
1002350c:	je     0x10023514
1002350e:	mov    eax,DWORD PTR [edi]
10023510:	push   edi
10023511:	call   DWORD PTR [eax+0x4]
10023514:	mov    eax,DWORD PTR [ebp+0x18]
10023517:	mov    BYTE PTR [ebp-0x4],0x6
1002351b:	cmp    DWORD PTR [eax+0x18],0x10
1002351f:	jb     0x10023526
10023521:	mov    eax,DWORD PTR [eax+0x4]
10023524:	jmp    0x10023529
10023526:	add    eax,0x4
10023529:	push   eax
1002352a:	lea    edi,[ebp+0x10]
1002352d:	call   0x10002458
10023532:	lea    esi,[ebp-0x7c]
10023535:	mov    BYTE PTR [ebp-0x4],0x7
10023539:	call   0x100228ae
1002353e:	mov    BYTE PTR [ebp-0x4],0x9
10023542:	call   0x100025b3
10023547:	mov    eax,DWORD PTR [ebp+0x1c]
1002354a:	mov    esi,DWORD PTR [eax]
1002354c:	push   esi
1002354d:	mov    WORD PTR [ebp-0x4c],0x8
10023553:	call   DWORD PTR ds:0x100672ac
10023559:	test   eax,eax
1002355b:	mov    DWORD PTR [ebp-0x44],eax
1002355e:	jne    0x1002356e
10023560:	test   esi,esi
10023562:	je     0x1002356e
10023564:	push   0x8007000e
10023569:	call   0x10050e90
1002356e:	cmp    BYTE PTR [ebp+0x20],0x0
10023572:	mov    BYTE PTR [ebp-0x4],0xa
10023576:	lea    esi,[ebp-0x5c]
10023579:	lea    edi,[ebp-0x94]
1002357f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023583:	lea    esi,[ebp-0x3c]
10023586:	lea    edi,[ebp-0xa4]
1002358c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002358d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002358e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002358f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023590:	lea    esi,[ebp-0x6c]
10023593:	lea    edi,[ebp-0xb4]
10023599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002359a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002359b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002359c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002359d:	lea    esi,[ebp-0x2c]
100235a0:	lea    edi,[ebp-0xc4]
100235a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235aa:	lea    esi,[ebp-0x7c]
100235ad:	lea    edi,[ebp-0xd4]
100235b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235b7:	lea    esi,[ebp-0x4c]
100235ba:	lea    edi,[ebp-0xe4]
100235c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100235c4:	mov    esi,DWORD PTR [ebp+0x8]
100235c7:	mov    DWORD PTR [esi],0x1
100235cd:	je     0x100235dd
100235cf:	push   0x10071df0
100235d4:	push   0x9
100235d6:	mov    ecx,0x10071e1c
100235db:	jmp    0x100235e9
100235dd:	push   0x10071e30
100235e2:	push   0x8
100235e4:	mov    ecx,0x10071e68
100235e9:	call   0x1000444a
100235ee:	pop    ecx
100235ef:	pop    ecx
100235f0:	push   eax
100235f1:	lea    eax,[esi+0x4]
100235f4:	push   eax
100235f5:	call   0x1000238f
100235fa:	push   DWORD PTR ds:0x10082fd4
10023600:	and    DWORD PTR [esi+0x10],0x0
10023604:	lea    eax,[ebp-0xe4]
1002360a:	mov    DWORD PTR [esi+0x8],eax
1002360d:	mov    DWORD PTR [esi+0xc],0x6
10023614:	call   DWORD PTR ds:0x10067148
1002361a:	push   0xffffffff
1002361c:	push   DWORD PTR ds:0x10082fd8
10023622:	call   DWORD PTR ds:0x1006707c
10023628:	cmp    BYTE PTR [esi+0x14],0x0
1002362c:	je     0x10023639
1002362e:	mov    eax,ebx
10023630:	call   0x10011f01
10023635:	mov    BYTE PTR [ebp-0x15],0x1
10023639:	mov    esi,DWORD PTR ds:0x10067284
1002363f:	lea    eax,[ebp-0x4c]
10023642:	push   eax
10023643:	call   esi
10023645:	lea    eax,[ebp-0x7c]
10023648:	push   eax
10023649:	call   esi
1002364b:	lea    eax,[ebp-0x2c]
1002364e:	push   eax
1002364f:	call   esi
10023651:	lea    eax,[ebp-0x6c]
10023654:	push   eax
10023655:	call   esi
10023657:	lea    eax,[ebp-0x3c]
1002365a:	push   eax
1002365b:	call   esi
1002365d:	lea    eax,[ebp-0x5c]
10023660:	push   eax
10023661:	call   esi
10023663:	test   ebx,ebx
10023665:	mov    BYTE PTR [ebp-0x4],0x1
10023669:	je     0x10023671
1002366b:	mov    eax,DWORD PTR [ebx]
1002366d:	push   ebx
1002366e:	call   DWORD PTR [eax+0x8]
10023671:	mov    BYTE PTR [ebp-0x4],0x0
10023675:	mov    eax,DWORD PTR [ebp-0x1c]
10023678:	test   eax,eax
1002367a:	je     0x10023494
10023680:	mov    ecx,DWORD PTR [eax]
10023682:	push   eax
10023683:	call   DWORD PTR [ecx+0x8]
10023686:	jmp    0x10023494
1002368b:	push   0x4
1002368d:	call   0x10038b80
10023692:	pop    ecx
10023693:	mov    eax,0x10023494
10023698:	ret    
10023699:	push   0x2c
1002369b:	mov    eax,0x10062f7c
100236a0:	call   0x10059e28
100236a5:	mov    esi,ecx
100236a7:	mov    ebx,DWORD PTR ds:0x1006707c
100236ad:	push   0x1f4
100236b2:	push   DWORD PTR ds:0x10082fdc
100236b8:	call   ebx
100236ba:	test   eax,eax
100236bc:	je     0x100236cd
100236be:	push   0xf
100236c0:	call   0x10038b80
100236c5:	pop    ecx
100236c6:	xor    eax,eax
100236c8:	jmp    0x10023783
100236cd:	and    DWORD PTR [ebp-0x4],0x0
100236d1:	mov    edi,DWORD PTR ds:0x10067294
100236d7:	and    DWORD PTR [ebp-0x14],0x0
100236db:	lea    eax,[ebp-0x28]
100236de:	push   eax
100236df:	call   edi
100236e1:	push   0x10071e7c
100236e6:	mov    BYTE PTR [ebp-0x4],0x1
100236ea:	push   0x8
100236ec:	mov    ecx,0x10071eb4
100236f1:	mov    DWORD PTR [esi],0x1
100236f7:	call   0x1000444a
100236fc:	pop    ecx
100236fd:	pop    ecx
100236fe:	push   eax
100236ff:	lea    eax,[esi+0x4]
10023702:	push   eax
10023703:	call   0x1000238f
10023708:	push   DWORD PTR ds:0x10082fd4
1002370e:	and    DWORD PTR [esi+0x8],0x0
10023712:	and    DWORD PTR [esi+0xc],0x0
10023716:	lea    eax,[ebp-0x28]
10023719:	mov    DWORD PTR [esi+0x10],eax
1002371c:	call   DWORD PTR ds:0x10067148
10023722:	push   0xffffffff
10023724:	push   DWORD PTR ds:0x10082fd8
1002372a:	call   ebx
1002372c:	cmp    BYTE PTR [esi+0x14],0x0
10023730:	je     0x1002376a
10023732:	cmp    WORD PTR [ebp-0x28],0x16
10023737:	jne    0x10023741
10023739:	mov    eax,DWORD PTR [ebp-0x20]
1002373c:	mov    DWORD PTR [ebp-0x14],eax
1002373f:	jmp    0x1002376a
10023741:	lea    eax,[ebp-0x38]
10023744:	push   eax
10023745:	call   edi
10023747:	lea    ecx,[ebp-0x28]
1002374a:	mov    dx,0x16
1002374e:	lea    eax,[ebp-0x38]
10023751:	mov    BYTE PTR [ebp-0x4],0x2
10023755:	call   0x100228ed
1002375a:	mov    esi,DWORD PTR [ebp-0x30]
1002375d:	lea    eax,[ebp-0x38]
10023760:	push   eax
10023761:	call   DWORD PTR ds:0x10067284
10023767:	mov    DWORD PTR [ebp-0x14],esi
1002376a:	lea    eax,[ebp-0x28]
1002376d:	push   eax
1002376e:	call   DWORD PTR ds:0x10067284
10023774:	push   DWORD PTR ds:0x10082fdc
1002377a:	call   DWORD PTR ds:0x10067148
10023780:	mov    eax,DWORD PTR [ebp-0x14]
10023783:	call   0x10059ecd
10023788:	ret    
10023789:	push   0x4
1002378b:	call   0x10038b80
10023790:	pop    ecx
10023791:	mov    eax,0x10023774
10023796:	ret    
10023797:	push   ebp
10023798:	mov    ebp,esp
1002379a:	and    esp,0xfffffff8
1002379d:	push   0xffffffff
1002379f:	push   0x10062f3e
100237a4:	mov    eax,fs:0x0
100237aa:	push   eax
100237ab:	sub    esp,0xd8
100237b1:	mov    eax,ds:0x100801ac
100237b6:	xor    eax,esp
100237b8:	mov    DWORD PTR [esp+0xd0],eax
100237bf:	push   ebx
100237c0:	push   esi
100237c1:	push   edi
100237c2:	mov    eax,ds:0x100801ac
100237c7:	xor    eax,esp
100237c9:	push   eax
100237ca:	lea    eax,[esp+0xe8]
100237d1:	mov    fs:0x0,eax
100237d7:	mov    eax,DWORD PTR [ebp+0x8]
100237da:	mov    DWORD PTR [esp+0x28],eax
100237de:	mov    eax,DWORD PTR [ebp+0xc]
100237e1:	mov    DWORD PTR [esp+0x1c],eax
100237e5:	lea    eax,[esp+0x10]
100237e9:	xor    edi,edi
100237eb:	push   eax
100237ec:	mov    DWORD PTR [esp+0x24],edi
100237f0:	call   0x10024890
100237f5:	cmp    eax,edi
100237f7:	jge    0x1002383b
100237f9:	push   0x10071ec8
100237fe:	push   0x16
10023800:	mov    ecx,0x10071eec
10023805:	call   0x100042b4
1002380a:	pop    ecx
1002380b:	pop    ecx
1002380c:	push   eax
1002380d:	lea    ecx,[esp+0x3c]
10023811:	call   0x100011a7
10023816:	lea    eax,[esp+0x38]
1002381a:	push   eax
1002381b:	lea    eax,[esp+0x5c]
1002381f:	push   eax
10023820:	mov    DWORD PTR [esp+0xf8],edi
10023827:	call   0x10006eba
1002382c:	push   0x10076508
10023831:	lea    eax,[esp+0x5c]
10023835:	push   eax
10023836:	call   0x10047942
1002383b:	mov    esi,DWORD PTR [esp+0x10]
1002383f:	lea    eax,[esi+0x24]
10023842:	neg    esi
10023844:	sbb    esi,esi
10023846:	and    esi,eax
10023848:	mov    DWORD PTR [esp+0x18],esi
1002384c:	je     0x10023854
1002384e:	mov    eax,DWORD PTR [esi]
10023850:	push   esi
10023851:	call   DWORD PTR [eax+0x4]
10023854:	mov    DWORD PTR [esp+0xf0],0x1
1002385f:	call   DWORD PTR ds:0x1006713c
10023865:	cmp    esi,edi
10023867:	mov    DWORD PTR [esp+0x20],eax
1002386b:	mov    DWORD PTR [esp+0x14],edi
1002386f:	je     0x10023880
10023871:	mov    eax,DWORD PTR [esi]
10023873:	lea    ecx,[esp+0x14]
10023877:	push   ecx
10023878:	push   0x1007144c
1002387d:	push   esi
1002387e:	call   DWORD PTR [eax]
10023880:	mov    BYTE PTR [esp+0xf0],0x2
10023888:	cmp    DWORD PTR [esp+0x14],edi
1002388c:	jne    0x100238d0
1002388e:	push   0x10071f04
10023893:	push   0x16
10023895:	mov    ecx,0x10071eec
1002389a:	call   0x100042b4
1002389f:	pop    ecx
100238a0:	pop    ecx
100238a1:	push   eax
100238a2:	lea    ecx,[esp+0x3c]
100238a6:	call   0x100011a7
100238ab:	lea    eax,[esp+0x38]
100238af:	push   eax
100238b0:	lea    eax,[esp+0x5c]
100238b4:	push   eax
100238b5:	mov    BYTE PTR [esp+0xf8],0x3
100238bd:	call   0x10006eba
100238c2:	push   0x10076508
100238c7:	lea    eax,[esp+0x5c]
100238cb:	jmp    0x10023835
100238d0:	mov    eax,DWORD PTR [esi]
100238d2:	push   0x10071f34
100238d7:	push   esi
100238d8:	call   DWORD PTR [eax+0x1c]
100238db:	test   eax,eax
100238dd:	jge    0x10023921
100238df:	push   0x10071f44
100238e4:	push   0x16
100238e6:	mov    ecx,0x10071eec
100238eb:	call   0x100042b4
100238f0:	pop    ecx
100238f1:	pop    ecx
100238f2:	push   eax
100238f3:	lea    ecx,[esp+0x3c]
100238f7:	call   0x100011a7
100238fc:	lea    eax,[esp+0x38]
10023900:	push   eax
10023901:	lea    eax,[esp+0x5c]
10023905:	push   eax
10023906:	mov    BYTE PTR [esp+0xf8],0x4
1002390e:	call   0x10006eba
10023913:	push   0x10076508
10023918:	lea    eax,[esp+0x5c]
1002391c:	jmp    0x10023835
10023921:	push   edi
10023922:	lea    ecx,[esp+0xc8]
10023929:	mov    DWORD PTR [esp+0xe0],0xf
10023934:	call   0x1000141c
10023939:	push   0x10071f6c
1002393e:	push   0x16
10023940:	mov    ecx,0x10071f94
10023945:	mov    BYTE PTR [esp+0xf8],0x5
1002394d:	call   0x100042b4
10023952:	pop    ecx
10023953:	pop    ecx
10023954:	push   eax
10023955:	lea    eax,[esp+0xc8]
1002395c:	push   eax
1002395d:	call   0x10004126
10023962:	push   0x10071fac
10023967:	push   0x15
10023969:	mov    ecx,0x10071fdc
1002396e:	call   0x100042b4
10023973:	pop    ecx
10023974:	pop    ecx
10023975:	push   eax
10023976:	lea    eax,[esp+0xc8]
1002397d:	push   eax
1002397e:	call   0x10004126
10023983:	push   0x10071ff4
10023988:	push   0x1c
1002398a:	mov    ecx,0x10072034
1002398f:	call   0x100042b4
10023994:	pop    ecx
10023995:	pop    ecx
10023996:	push   eax
10023997:	lea    eax,[esp+0xc8]
1002399e:	push   eax
1002399f:	call   0x10004126
100239a4:	push   0x10072054
100239a9:	push   0x1d
100239ab:	mov    ecx,0x10072090
100239b0:	call   0x100042b4
100239b5:	pop    ecx
100239b6:	pop    ecx
100239b7:	push   eax
100239b8:	lea    eax,[esp+0xc8]
100239bf:	push   eax
100239c0:	call   0x10004126
100239c5:	push   0x100720b0
100239ca:	push   0x14
100239cc:	mov    ecx,0x100720e8
100239d1:	call   0x100042b4
100239d6:	pop    ecx
100239d7:	pop    ecx
100239d8:	push   eax
100239d9:	lea    eax,[esp+0xc8]
100239e0:	push   eax
100239e1:	call   0x10004126
100239e6:	push   0x10072100
100239eb:	push   0x1b
100239ed:	mov    ecx,0x1007213c
100239f2:	call   0x100042b4
100239f7:	pop    ecx
100239f8:	pop    ecx
100239f9:	push   eax
100239fa:	lea    eax,[esp+0xc8]
10023a01:	push   eax
10023a02:	call   0x10004126
10023a07:	push   0x10072158
10023a0c:	push   0x7
10023a0e:	mov    ecx,0x10072188
10023a13:	call   0x100042b4
10023a18:	pop    ecx
10023a19:	pop    ecx
10023a1a:	push   eax
10023a1b:	lea    eax,[esp+0xc8]
10023a22:	push   eax
10023a23:	call   0x10004126
10023a28:	push   0x10072190
10023a2d:	push   0x19
10023a2f:	mov    ecx,0x100721b4
10023a34:	call   0x100042b4
10023a39:	pop    ecx
10023a3a:	pop    ecx
10023a3b:	push   eax
10023a3c:	lea    eax,[esp+0xc8]
10023a43:	push   eax
10023a44:	call   0x10004126
10023a49:	mov    ebx,0x100721d0
10023a4e:	push   ebx
10023a4f:	lea    eax,[esp+0xc8]
10023a56:	push   eax
10023a57:	call   0x10004126
10023a5c:	push   0x100721d4
10023a61:	push   0x15
10023a63:	mov    ecx,0x10072200
10023a68:	call   0x100042b4
10023a6d:	pop    ecx
10023a6e:	pop    ecx
10023a6f:	push   eax
10023a70:	lea    eax,[esp+0xc8]
10023a77:	push   eax
10023a78:	call   0x10004126
10023a7d:	mov    esi,0x10072218
10023a82:	push   esi
10023a83:	lea    eax,[esp+0xc8]
10023a8a:	push   eax
10023a8b:	call   0x10004126
10023a90:	push   0x1007221c
10023a95:	push   0x14
10023a97:	mov    ecx,0x10072258
10023a9c:	call   0x100042b4
10023aa1:	pop    ecx
10023aa2:	pop    ecx
10023aa3:	push   eax
10023aa4:	lea    eax,[esp+0xc8]
10023aab:	push   eax
10023aac:	call   0x10004126
10023ab1:	push   ebx
10023ab2:	lea    eax,[esp+0xc8]
10023ab9:	push   eax
10023aba:	call   0x10004126
10023abf:	push   0x10072270
10023ac4:	push   0x19
10023ac6:	mov    ecx,0x100722a8
10023acb:	call   0x100042b4
10023ad0:	pop    ecx
10023ad1:	pop    ecx
10023ad2:	push   eax
10023ad3:	lea    eax,[esp+0xc8]
10023ada:	push   eax
10023adb:	call   0x10004126
10023ae0:	push   esi
10023ae1:	lea    eax,[esp+0xc8]
10023ae8:	push   eax
10023ae9:	call   0x10004126
10023aee:	push   0x100722c4
10023af3:	push   0x26
10023af5:	mov    ecx,0x10072304
10023afa:	call   0x100042b4
10023aff:	pop    ecx
10023b00:	pop    ecx
10023b01:	push   eax
10023b02:	lea    eax,[esp+0xc8]
10023b09:	push   eax
10023b0a:	call   0x10004126
10023b0f:	push   0x1007232c
10023b14:	push   0x2
10023b16:	mov    ecx,0x1007236c
10023b1b:	call   0x100042b4
10023b20:	pop    ecx
10023b21:	pop    ecx
10023b22:	push   eax
10023b23:	lea    eax,[esp+0xc8]
10023b2a:	push   eax
10023b2b:	call   0x10004126
10023b30:	push   0x10072370
10023b35:	push   0x12
10023b37:	mov    ecx,0x100723ac
10023b3c:	call   0x100042b4
10023b41:	pop    ecx
10023b42:	pop    ecx
10023b43:	push   eax
10023b44:	lea    eax,[esp+0xc8]
10023b4b:	push   eax
10023b4c:	call   0x10004126
10023b51:	push   0x100723c0
10023b56:	push   0x39
10023b58:	mov    ecx,0x100723fc
10023b5d:	call   0x100042b4
10023b62:	pop    ecx
10023b63:	pop    ecx
10023b64:	push   eax
10023b65:	lea    eax,[esp+0xc8]
10023b6c:	push   eax
10023b6d:	call   0x10004126
10023b72:	push   esi
10023b73:	lea    eax,[esp+0xc8]
10023b7a:	push   eax
10023b7b:	call   0x10004126
10023b80:	push   0x10072438
10023b85:	push   0x3c
10023b87:	mov    ecx,0x10072470
10023b8c:	call   0x100042b4
10023b91:	pop    ecx
10023b92:	pop    ecx
10023b93:	push   eax
10023b94:	lea    eax,[esp+0xc8]
10023b9b:	push   eax
10023b9c:	call   0x10004126
10023ba1:	push   ebx
10023ba2:	lea    eax,[esp+0xc8]
10023ba9:	push   eax
10023baa:	call   0x10004126
10023baf:	push   0x100724b0
10023bb4:	push   0x45
10023bb6:	mov    ecx,0x100724d8
10023bbb:	call   0x100042b4
10023bc0:	pop    ecx
10023bc1:	pop    ecx
10023bc2:	push   eax
10023bc3:	lea    eax,[esp+0xc8]
10023bca:	push   eax
10023bcb:	call   0x10004126
10023bd0:	push   esi
10023bd1:	lea    eax,[esp+0xc8]
10023bd8:	push   eax
10023bd9:	call   0x10004126
10023bde:	push   0x10072520
10023be3:	push   0x3d
10023be5:	mov    ecx,0x1007254c
10023bea:	call   0x100042b4
10023bef:	pop    ecx
10023bf0:	pop    ecx
10023bf1:	push   eax
10023bf2:	lea    eax,[esp+0xc8]
10023bf9:	push   eax
10023bfa:	call   0x10004126
10023bff:	push   ebx
10023c00:	lea    eax,[esp+0xc8]
10023c07:	push   eax
10023c08:	call   0x10004126
10023c0d:	push   0x1007258c
10023c12:	push   0x46
10023c14:	mov    ecx,0x100725b0
10023c19:	call   0x100042b4
10023c1e:	pop    ecx
10023c1f:	pop    ecx
10023c20:	push   eax
10023c21:	lea    eax,[esp+0xc8]
10023c28:	push   eax
10023c29:	call   0x10004126
10023c2e:	push   esi
10023c2f:	lea    eax,[esp+0xc8]
10023c36:	push   eax
10023c37:	call   0x10004126
10023c3c:	mov    eax,DWORD PTR [esp+0x1c]
10023c40:	mov    eax,DWORD PTR [eax]
10023c42:	lea    ecx,[esp+0x10]
10023c46:	push   ecx
10023c47:	push   0x1
10023c49:	lea    ecx,[esp+0x24]
10023c4d:	push   ecx
10023c4e:	push   eax
10023c4f:	call   0x10036840
10023c54:	mov    ecx,DWORD PTR [eax]
10023c56:	mov    esi,ecx
10023c58:	mov    DWORD PTR [esp+0x24],esi
10023c5c:	mov    DWORD PTR [eax],edi
10023c5e:	mov    DWORD PTR [esp+0x54],esi
10023c62:	mov    BYTE PTR [esp+0xf0],0x6
10023c6a:	push   DWORD PTR [esp+0x1c]
10023c6e:	call   0x10042fe2
10023c73:	cmp    esi,edi
10023c75:	pop    ecx
10023c76:	jne    0x10023cc3
10023c78:	mov    esi,DWORD PTR [esp+0x28]
10023c7c:	push   edi
10023c7d:	mov    DWORD PTR [esi],edi
10023c7f:	call   0x10042fe2
10023c84:	pop    ecx
10023c85:	push   edi
10023c86:	push   0x1
10023c88:	lea    ecx,[esp+0xcc]
10023c8f:	call   0x100012f0
10023c94:	mov    BYTE PTR [esp+0xf0],0x1
10023c9c:	mov    eax,DWORD PTR [esp+0x14]
10023ca0:	cmp    eax,edi
10023ca2:	je     0x10023caa
10023ca4:	mov    ecx,DWORD PTR [eax]
10023ca6:	push   eax
10023ca7:	call   DWORD PTR [ecx+0x8]
10023caa:	or     DWORD PTR [esp+0xf0],0xffffffff
10023cb2:	mov    eax,DWORD PTR [esp+0x18]
10023cb6:	mov    ecx,DWORD PTR [eax]
10023cb8:	push   eax
10023cb9:	call   DWORD PTR [ecx+0x8]
10023cbc:	mov    eax,esi
10023cbe:	jmp    0x10023f88
10023cc3:	mov    eax,DWORD PTR [esp+0x10]
10023cc7:	mov    DWORD PTR [esp+0x30],eax
10023ccb:	lea    eax,[esp+0x2c]
10023ccf:	push   eax
10023cd0:	mov    DWORD PTR [esp+0x30],edi
10023cd4:	mov    DWORD PTR [esp+0x38],esi
10023cd8:	call   0x100374b0
10023cdd:	cmp    eax,edi
10023cdf:	je     0x10023e54
10023ce5:	mov    DWORD PTR [esp+0x10],eax
10023ce9:	mov    ebx,0x10072684
10023cee:	push   0x100725f8
10023cf3:	push   0x12
10023cf5:	mov    ecx,0x10072638
10023cfa:	call   0x100042b4
10023cff:	pop    ecx
10023d00:	pop    ecx
10023d01:	push   eax
10023d02:	lea    eax,[esp+0xc8]
10023d09:	push   eax
10023d0a:	call   0x10004126
10023d0f:	push   0x1007264c
10023d14:	push   0x10
10023d16:	mov    ecx,0x10072670
10023d1b:	call   0x100042b4
10023d20:	pop    ecx
10023d21:	pop    ecx
10023d22:	push   eax
10023d23:	lea    eax,[esp+0xc8]
10023d2a:	push   eax
10023d2b:	call   0x10004126
10023d30:	lea    eax,[esp+0x2c]
10023d34:	push   eax
10023d35:	lea    esi,[esp+0x3c]
10023d39:	call   0x10037170
10023d3e:	push   0xffffffff
10023d40:	push   edi
10023d41:	lea    esi,[esp+0xcc]
10023d48:	mov    BYTE PTR [esp+0xf8],0x7
10023d50:	call   0x10004cbe
10023d55:	push   edi
10023d56:	push   0x1
10023d58:	lea    ecx,[esp+0x40]
10023d5c:	mov    BYTE PTR [esp+0xf8],0x6
10023d64:	call   0x100012f0
10023d69:	push   ebx
10023d6a:	mov    eax,esi
10023d6c:	push   eax
10023d6d:	call   0x10004126
10023d72:	push   0x10072688
10023d77:	push   0xd
10023d79:	mov    ecx,0x100726ac
10023d7e:	call   0x100042b4
10023d83:	pop    ecx
10023d84:	pop    ecx
10023d85:	push   eax
10023d86:	mov    eax,esi
10023d88:	push   eax
10023d89:	call   0x10004126
10023d8e:	lea    eax,[esp+0x2c]
10023d92:	push   eax
10023d93:	lea    esi,[esp+0x3c]
10023d97:	call   0x10037170
10023d9c:	push   0xffffffff
10023d9e:	push   edi
10023d9f:	lea    esi,[esp+0xcc]
10023da6:	mov    BYTE PTR [esp+0xf8],0x8
10023dae:	call   0x10004cbe
10023db3:	push   edi
10023db4:	push   0x1
10023db6:	lea    ecx,[esp+0x40]
10023dba:	mov    BYTE PTR [esp+0xf8],0x6
10023dc2:	call   0x100012f0
10023dc7:	push   ebx
10023dc8:	mov    eax,esi
10023dca:	push   eax
10023dcb:	call   0x10004126
10023dd0:	push   0x100726bc
10023dd5:	push   0xe
10023dd7:	mov    ecx,0x100726ec
10023ddc:	call   0x100042b4
10023de1:	pop    ecx
10023de2:	pop    ecx
10023de3:	push   eax
10023de4:	mov    eax,esi
10023de6:	push   eax
10023de7:	call   0x10004126
10023dec:	lea    eax,[esp+0x2c]
10023df0:	push   eax
10023df1:	lea    esi,[esp+0x3c]
10023df5:	call   0x10037170
10023dfa:	push   0xffffffff
10023dfc:	push   edi
10023dfd:	lea    esi,[esp+0xcc]
10023e04:	mov    BYTE PTR [esp+0xf8],0x9
10023e0c:	call   0x10004cbe
10023e11:	push   edi
10023e12:	push   0x1
10023e14:	lea    ecx,[esp+0x40]
10023e18:	mov    BYTE PTR [esp+0xf8],0x6
10023e20:	call   0x100012f0
10023e25:	push   ebx
10023e26:	mov    eax,esi
10023e28:	push   eax
10023e29:	call   0x10004126
10023e2e:	push   0x100726fc
10023e33:	push   0x11
10023e35:	mov    ecx,0x10072738
10023e3a:	call   0x100042b4
10023e3f:	pop    ecx
10023e40:	pop    ecx
10023e41:	push   eax
10023e42:	mov    eax,esi
10023e44:	push   eax
10023e45:	call   0x10004126
10023e4a:	dec    DWORD PTR [esp+0x10]
10023e4e:	jne    0x10023cee
10023e54:	call   DWORD PTR ds:0x10080ffc
10023e5a:	cmp    DWORD PTR [esp+0xdc],0x10
10023e62:	mov    eax,DWORD PTR [esp+0xc8]
10023e69:	jae    0x10023e72
10023e6b:	lea    eax,[esp+0xc8]
10023e72:	push   eax
10023e73:	lea    ecx,[esp+0x3c]
10023e77:	call   0x100011a7
10023e7c:	lea    eax,[esp+0x10]
10023e80:	push   eax
10023e81:	lea    ebx,[esp+0x3c]
10023e85:	mov    BYTE PTR [esp+0xf4],0xa
10023e8d:	call   0x10033c90
10023e92:	pop    ecx
10023e93:	mov    BYTE PTR [esp+0xf0],0xb
10023e9b:	mov    eax,DWORD PTR [eax]
10023e9d:	test   eax,eax
10023e9f:	je     0x10023ea5
10023ea1:	mov    eax,DWORD PTR [eax]
10023ea3:	jmp    0x10023ea7
10023ea5:	xor    eax,eax
10023ea7:	mov    ecx,DWORD PTR [esp+0x18]
10023eab:	mov    edx,DWORD PTR [ecx]
10023ead:	push   eax
10023eae:	push   ecx
10023eaf:	call   DWORD PTR [edx+0x28]
10023eb2:	test   eax,eax
10023eb4:	lea    edi,[esp+0x10]
10023eb8:	setl   bl
10023ebb:	call   0x100025b3
10023ec0:	push   0x0
10023ec2:	push   0x1
10023ec4:	lea    ecx,[esp+0x40]
10023ec8:	mov    BYTE PTR [esp+0xf8],0x6
10023ed0:	call   0x100012f0
10023ed5:	test   bl,bl
10023ed7:	je     0x10023f27
10023ed9:	push   0x1007274c
10023ede:	push   0x16
10023ee0:	mov    ecx,0x10071eec
10023ee5:	call   0x100042b4
10023eea:	pop    ecx
10023eeb:	pop    ecx
10023eec:	push   eax
10023eed:	lea    ecx,[esp+0x84]
10023ef4:	call   0x100011a7
10023ef9:	lea    eax,[esp+0x80]
10023f00:	push   eax
10023f01:	lea    eax,[esp+0xa0]
10023f08:	push   eax
10023f09:	mov    BYTE PTR [esp+0xf8],0xc
10023f11:	call   0x10006eba
10023f16:	push   0x10076508
10023f1b:	lea    eax,[esp+0xa0]
10023f22:	jmp    0x10023835
10023f27:	push   DWORD PTR [esp+0x24]
10023f2b:	call   0x10042fe2
10023f30:	pop    ecx
10023f31:	push   0x0
10023f33:	push   0x1
10023f35:	lea    ecx,[esp+0xcc]
10023f3c:	call   0x100012f0
10023f41:	mov    BYTE PTR [esp+0xf0],0x1
10023f49:	mov    eax,DWORD PTR [esp+0x14]
10023f4d:	test   eax,eax
10023f4f:	je     0x10023f57
10023f51:	mov    ecx,DWORD PTR [eax]
10023f53:	push   eax
10023f54:	call   DWORD PTR [ecx+0x8]
10023f57:	call   DWORD PTR ds:0x1006713c
10023f5d:	sub    eax,DWORD PTR [esp+0x20]
10023f61:	push   eax
10023f62:	call   0x10002068
10023f67:	mov    esi,DWORD PTR [esp+0x1c]
10023f6b:	mov    edi,DWORD PTR [esp+0x2c]
10023f6f:	pop    ecx
10023f70:	mov    DWORD PTR [edi],esi
10023f72:	mov    eax,DWORD PTR [esi]
10023f74:	push   esi
10023f75:	call   DWORD PTR [eax+0x4]
10023f78:	or     DWORD PTR [esp+0xf0],0xffffffff
10023f80:	mov    eax,DWORD PTR [esi]
10023f82:	push   esi
10023f83:	call   DWORD PTR [eax+0x8]
10023f86:	mov    eax,edi
10023f88:	mov    ecx,DWORD PTR [esp+0xe8]
10023f8f:	mov    DWORD PTR fs:0x0,ecx
10023f96:	pop    ecx
10023f97:	pop    edi
10023f98:	pop    esi
10023f99:	pop    ebx
10023f9a:	mov    ecx,DWORD PTR [esp+0xd0]
10023fa1:	xor    ecx,esp
10023fa3:	call   0x10043615
10023fa8:	mov    esp,ebp
10023faa:	pop    ebp
10023fab:	ret    0x8
10023fae:	push   0x0
10023fb0:	mov    eax,0x10063b01
10023fb5:	call   0x10059df5
10023fba:	lea    eax,[ebp+0xb]
10023fbd:	push   eax
10023fbe:	call   0x10036f20
10023fc3:	xor    eax,eax
10023fc5:	push   eax
10023fc6:	push   eax
10023fc7:	mov    DWORD PTR [ebp-0x4],eax
10023fca:	call   DWORD PTR ds:0x1006742c
10023fd0:	push   DWORD PTR [ebp+0x8]
10023fd3:	call   0x10022e00
10023fd8:	call   DWORD PTR ds:0x10067448
10023fde:	call   0x10036f40
10023fe3:	xor    eax,eax
10023fe5:	call   0x10059ecd
10023fea:	ret    0x4
10023fed:	push   0x4
10023fef:	mov    eax,0x100629a6
10023ff4:	call   0x10059df5
10023ff9:	mov    eax,DWORD PTR [ebp+0x8]
10023ffc:	call   0x10004697
10024001:	push   0x1006dd18
10024006:	lea    ecx,[ebp-0x10]
10024009:	push   ecx
1002400a:	mov    ecx,eax
1002400c:	call   0x10006e0c
10024011:	and    DWORD PTR [ebp-0x4],0x0
10024015:	push   DWORD PTR [ebp-0x10]
10024018:	push   DWORD PTR [ebp+0x8]
1002401b:	call   0x100246fc
10024020:	test   eax,eax
10024022:	mov    eax,DWORD PTR [ebp-0x10]
10024025:	setne  bl
10024028:	add    eax,0xfffffff0
1002402b:	call   0x10002069
10024030:	mov    al,bl
10024032:	call   0x10059ecd
10024037:	ret    
10024038:	push   0x10
1002403a:	mov    eax,0x1005ff14
1002403f:	call   0x10059e94
10024044:	mov    eax,DWORD PTR [ebp+0xc]
10024047:	xor    ebx,ebx
10024049:	cmp    eax,ebx
1002404b:	jne    0x10024057
1002404d:	mov    eax,0x80004003
10024052:	jmp    0x1002416d
10024057:	push   0x1c
10024059:	mov    DWORD PTR [eax],ebx
1002405b:	mov    DWORD PTR [ebp-0x18],ebx
1002405e:	mov    DWORD PTR [ebp-0x4],ebx
10024061:	call   0x10043196
10024066:	cmp    eax,ebx
10024068:	pop    ecx
10024069:	je     0x10024076
1002406b:	mov    esi,eax
1002406d:	call   0x1002466d
10024072:	mov    edi,eax
10024074:	jmp    0x10024078
10024076:	xor    edi,edi
10024078:	or     DWORD PTR [ebp-0x4],0xffffffff
1002407c:	jmp    0x1002408d
1002407e:	or     DWORD PTR [ebp-0x4],0xffffffff
10024082:	mov    eax,0x10024088
10024087:	ret    
10024088:	mov    edi,DWORD PTR [ebp-0x18]
1002408b:	xor    ebx,ebx
1002408d:	cmp    edi,ebx
1002408f:	jne    0x1002409b
10024091:	mov    eax,0x8007000e
10024096:	jmp    0x1002416d
1002409b:	xor    esi,esi
1002409d:	mov    DWORD PTR [ebp-0x18],esi
100240a0:	push   ebx
100240a1:	lea    eax,[ebp-0x1c]
100240a4:	push   0x4
100240a6:	mov    DWORD PTR [ebp-0x4],0x2
100240ad:	push   eax
100240ae:	mov    DWORD PTR [ebp-0x1c],ebx
100240b1:	call   0x1001473a
100240b6:	add    esp,0xc
100240b9:	cmp    eax,ebx
100240bb:	jl     0x1002416d
100240c1:	mov    ebx,DWORD PTR [ebp-0x1c]
100240c4:	cmp    ebx,0x400
100240ca:	ja     0x100240e5
100240cc:	push   ebx
100240cd:	call   0x10007047
100240d2:	test   al,al
100240d4:	pop    ecx
100240d5:	je     0x100240e5
100240d7:	mov    eax,ebx
100240d9:	call   0x1004b9b0
100240de:	mov    DWORD PTR [ebp-0x10],esp
100240e1:	mov    eax,esp
100240e3:	jmp    0x100240f1
100240e5:	push   ebx
100240e6:	lea    esi,[ebp-0x18]
100240e9:	call   0x100078dc
100240ee:	mov    esi,DWORD PTR [ebp-0x18]
100240f1:	test   eax,eax
100240f3:	jne    0x10024111
100240f5:	mov    eax,DWORD PTR [edi]
100240f7:	push   0x1
100240f9:	mov    ecx,edi
100240fb:	call   DWORD PTR [eax+0x1c]
100240fe:	jmp    0x1002410b
10024100:	mov    eax,esi
10024102:	mov    esi,DWORD PTR [esi]
10024104:	push   eax
10024105:	call   0x100437dc
1002410a:	pop    ecx
1002410b:	test   esi,esi
1002410d:	jne    0x10024100
1002410f:	jmp    0x10024091
10024111:	push   0x3
10024113:	push   DWORD PTR [ebp+0x8]
10024116:	push   eax
10024117:	push   eax
10024118:	push   edi
10024119:	call   0x10022541
1002411e:	mov    ebx,eax
10024120:	test   ebx,ebx
10024122:	mov    eax,DWORD PTR [edi]
10024124:	jge    0x10024140
10024126:	push   0x1
10024128:	mov    ecx,edi
1002412a:	call   DWORD PTR [eax+0x1c]
1002412d:	jmp    0x1002413a
1002412f:	mov    eax,esi
10024131:	mov    esi,DWORD PTR [esi]
10024133:	push   eax
10024134:	call   0x100437dc
10024139:	pop    ecx
1002413a:	test   esi,esi
1002413c:	jne    0x1002412f
1002413e:	jmp    0x1002416b
10024140:	push   DWORD PTR [ebp+0xc]
10024143:	push   0x10071c88
10024148:	push   edi
10024149:	call   DWORD PTR [eax]
1002414b:	mov    ebx,eax
1002414d:	test   ebx,ebx
1002414f:	jge    0x10024167
10024151:	mov    eax,DWORD PTR [edi]
10024153:	push   0x1
10024155:	mov    ecx,edi
10024157:	call   DWORD PTR [eax+0x1c]
1002415a:	jmp    0x10024167
1002415c:	mov    eax,esi
1002415e:	mov    esi,DWORD PTR [esi]
10024160:	push   eax
10024161:	call   0x100437dc
10024166:	pop    ecx
10024167:	test   esi,esi
10024169:	jne    0x1002415c
1002416b:	mov    eax,ebx
1002416d:	lea    esp,[ebp-0x2c]
10024170:	call   0x10059ef0
10024175:	ret    0x8
10024178:	push   ecx
10024179:	mov    eax,ds:0x100801ac
1002417e:	xor    eax,esp
10024180:	mov    DWORD PTR [esp],eax
10024183:	mov    eax,DWORD PTR [esp+0x10]
10024187:	test   eax,eax
10024189:	jne    0x10024192
1002418b:	mov    eax,0x80004003
10024190:	jmp    0x1002419a
10024192:	and    DWORD PTR [eax],0x0
10024195:	mov    eax,0x80040200
1002419a:	mov    ecx,DWORD PTR [esp]
1002419d:	xor    ecx,esp
1002419f:	call   0x10043615
100241a4:	pop    ecx
100241a5:	ret    0xc
100241a8:	push   0x4
100241aa:	mov    eax,0x100610ca
100241af:	call   0x10059df5
100241b4:	mov    esi,ecx
100241b6:	mov    DWORD PTR [ebp-0x10],esi
100241b9:	mov    eax,esi
100241bb:	mov    DWORD PTR [ebp-0x4],0x2
100241c2:	call   0x10020fe4
100241c7:	lea    eax,[esi+0x10]
100241ca:	mov    BYTE PTR [ebp-0x4],0x1
100241ce:	call   0x10024722
100241d3:	mov    BYTE PTR [ebp-0x4],0x0
100241d7:	mov    eax,DWORD PTR [esi+0xc]
100241da:	test   eax,eax
100241dc:	je     0x100241e4
100241de:	mov    ecx,DWORD PTR [eax]
100241e0:	push   eax
100241e1:	call   DWORD PTR [ecx+0x8]
100241e4:	or     DWORD PTR [ebp-0x4],0xffffffff
100241e8:	mov    esi,DWORD PTR [esi+0x8]
100241eb:	test   esi,esi
100241ed:	je     0x100241f5
100241ef:	mov    eax,DWORD PTR [esi]
100241f1:	push   esi
100241f2:	call   DWORD PTR [eax+0x8]
100241f5:	call   0x10059ecd
100241fa:	ret    
100241fb:	push   0x34
100241fd:	mov    eax,0x100620ce
10024202:	call   0x10059e5e
10024207:	mov    eax,DWORD PTR [ebp+0x8]
1002420a:	push   eax
1002420b:	xor    ebx,ebx
1002420d:	lea    eax,[ebp-0x2c]
10024210:	mov    edi,ecx
10024212:	mov    DWORD PTR [ebp-0x30],ebx
10024215:	call   0x10020e72
1002421a:	lea    eax,[ebp-0x2c]
1002421d:	push   eax
1002421e:	lea    eax,[ebp-0x38]
10024221:	add    edi,0x10
10024224:	push   eax
10024225:	mov    DWORD PTR [ebp-0x4],ebx
10024228:	call   0x10021483
1002422d:	cmp    DWORD PTR [ebp-0x38],ebx
10024230:	mov    esi,DWORD PTR [edi+0x4]
10024233:	je     0x1002423a
10024235:	cmp    DWORD PTR [ebp-0x38],edi
10024238:	je     0x1002423f
1002423a:	call   0x10043605
1002423f:	mov    eax,DWORD PTR [ebp-0x34]
10024242:	cmp    eax,esi
10024244:	je     0x1002425a
10024246:	add    eax,0xc
10024249:	lea    ebx,[ebp-0x2c]
1002424c:	call   0x1001f107
10024251:	test   al,al
10024253:	jne    0x1002425a
10024255:	lea    eax,[ebp-0x38]
10024258:	jmp    0x10024266
1002425a:	mov    eax,DWORD PTR [edi+0x4]
1002425d:	mov    DWORD PTR [ebp-0x3c],eax
10024260:	mov    DWORD PTR [ebp-0x40],edi
10024263:	lea    eax,[ebp-0x40]
10024266:	mov    esi,DWORD PTR [eax]
10024268:	test   esi,esi
1002426a:	mov    ebx,DWORD PTR [eax+0x4]
1002426d:	mov    eax,DWORD PTR [edi+0x4]
10024270:	mov    DWORD PTR [ebp-0x3c],eax
10024273:	je     0x10024279
10024275:	cmp    esi,edi
10024277:	je     0x1002427e
10024279:	call   0x10043605
1002427e:	cmp    ebx,DWORD PTR [ebp-0x3c]
10024281:	je     0x1002429c
10024283:	test   esi,esi
10024285:	jne    0x1002428c
10024287:	call   0x10043605
1002428c:	cmp    ebx,DWORD PTR [esi+0x4]
1002428f:	jne    0x10024296
10024291:	call   0x10043605
10024296:	mov    eax,DWORD PTR [ebx+0x28]
10024299:	mov    DWORD PTR [ebp-0x30],eax
1002429c:	push   0x1
1002429e:	xor    ebx,ebx
100242a0:	lea    esi,[ebp-0x2c]
100242a3:	call   0x10005465
100242a8:	mov    eax,DWORD PTR [ebp-0x30]
100242ab:	call   0x10059ee1
100242b0:	ret    0x4
100242b3:	jmp    DWORD PTR ds:0x10067360
100242b9:	mov    eax,DWORD PTR [esp+0x8]
100242bd:	mov    DWORD PTR [eax],0x9
100242c3:	xor    eax,eax
100242c5:	ret    0x8
100242c8:	push   ebp
100242c9:	mov    ebp,esp
100242cb:	push   ecx
100242cc:	mov    ecx,DWORD PTR [ebp+0x10]
100242cf:	push   edi
100242d0:	mov    edi,ecx
100242d2:	and    edi,0x2
100242d5:	je     0x100242eb
100242d7:	mov    eax,DWORD PTR [ebp+0x18]
100242da:	test   eax,eax
100242dc:	jne    0x100242e8
100242de:	mov    eax,0x80070057
100242e3:	jmp    0x10024371
100242e8:	and    DWORD PTR [eax],0x0
100242eb:	mov    DWORD PTR [ebp-0x4],ecx
100242ee:	and    DWORD PTR [ebp-0x4],0x1
100242f2:	je     0x100242fe
100242f4:	mov    eax,DWORD PTR [ebp+0x14]
100242f7:	test   eax,eax
100242f9:	je     0x100242de
100242fb:	and    DWORD PTR [eax],0x0
100242fe:	mov    ecx,DWORD PTR [ebp+0x8]
10024301:	mov    eax,DWORD PTR [ecx]
10024303:	push   esi
10024304:	push   DWORD PTR [ebp+0xc]
10024307:	call   DWORD PTR [eax+0x30]
1002430a:	mov    esi,eax
1002430c:	test   esi,esi
1002430e:	jne    0x10024317
10024310:	mov    eax,0x8002802b
10024315:	jmp    0x10024370
10024317:	test   edi,edi
10024319:	je     0x1002435d
1002431b:	mov    eax,DWORD PTR [esi]
1002431d:	and    DWORD PTR [ebp+0x10],0x0
10024321:	lea    ecx,[ebp+0x10]
10024324:	push   ecx
10024325:	push   0x1006c888
1002432a:	push   esi
1002432b:	call   DWORD PTR [eax]
1002432d:	mov    edi,eax
1002432f:	test   edi,edi
10024331:	jl     0x10024345
10024333:	mov    eax,DWORD PTR [ebp+0x10]
10024336:	test   eax,eax
10024338:	je     0x10024352
1002433a:	push   DWORD PTR [ebp+0x18]
1002433d:	mov    ecx,DWORD PTR [eax]
1002433f:	push   eax
10024340:	call   DWORD PTR [ecx+0xc]
10024343:	mov    edi,eax
10024345:	mov    eax,DWORD PTR [ebp+0x10]
10024348:	test   eax,eax
1002434a:	je     0x10024352
1002434c:	mov    ecx,DWORD PTR [eax]
1002434e:	push   eax
1002434f:	call   DWORD PTR [ecx+0x8]
10024352:	test   edi,edi
10024354:	jge    0x1002435d
10024356:	mov    eax,0x80004005
1002435b:	jmp    0x10024370
1002435d:	cmp    DWORD PTR [ebp-0x4],0x0
10024361:	je     0x1002436e
10024363:	mov    eax,DWORD PTR [ebp+0x14]
10024366:	mov    DWORD PTR [eax],esi
10024368:	mov    eax,DWORD PTR [esi]
1002436a:	push   esi
1002436b:	call   DWORD PTR [eax+0x4]
1002436e:	xor    eax,eax
10024370:	pop    esi
10024371:	pop    edi
10024372:	leave  
10024373:	ret    0x14
10024376:	xor    eax,eax
10024378:	ret    0xc
1002437b:	mov    ecx,DWORD PTR [esp+0x4]
1002437f:	lea    eax,[ecx-0x4]
10024382:	neg    ecx
10024384:	sbb    ecx,ecx
10024386:	and    ecx,eax
10024388:	mov    eax,DWORD PTR [ecx]
1002438a:	call   DWORD PTR [eax+0x34]
1002438d:	mov    ecx,DWORD PTR [esp+0x8]
10024391:	mov    DWORD PTR [ecx],eax
10024393:	xor    eax,eax
10024395:	ret    0x8
10024398:	push   edi
10024399:	mov    edi,DWORD PTR [esp+0x14]
1002439d:	mov    ecx,0x100819a4
100243a2:	call   0x10010945
100243a7:	pop    edi
100243a8:	ret    0x10
100243ab:	push   DWORD PTR [esp+0x18]
100243af:	mov    eax,0x100819a4
100243b4:	push   DWORD PTR [esp+0x14]
100243b8:	push   DWORD PTR [esp+0x14]
100243bc:	call   0x10010973
100243c1:	ret    0x18
100243c4:	push   ebp
100243c5:	mov    ebp,esp
100243c7:	push   DWORD PTR [ebp+0x28]
100243ca:	mov    eax,0x100819a4
100243cf:	push   DWORD PTR [ebp+0x24]
100243d2:	push   DWORD PTR [ebp+0x20]
100243d5:	push   DWORD PTR [ebp+0x1c]
100243d8:	push   DWORD PTR [ebp+0x18]
100243db:	push   DWORD PTR [ebp+0xc]
100243de:	push   DWORD PTR [ebp+0x8]
100243e1:	call   0x10010a16
100243e6:	pop    ebp
100243e7:	ret    0x24
100243ea:	push   edi
100243eb:	mov    edi,DWORD PTR [esp+0x14]
100243ef:	mov    ecx,0x100819c0
100243f4:	call   0x10010945
100243f9:	pop    edi
100243fa:	ret    0x10
100243fd:	push   DWORD PTR [esp+0x18]
10024401:	mov    eax,0x100819c0
10024406:	push   DWORD PTR [esp+0x14]
1002440a:	push   DWORD PTR [esp+0x14]
1002440e:	call   0x10010973
10024413:	ret    0x18
10024416:	push   ebp
10024417:	mov    ebp,esp
10024419:	push   DWORD PTR [ebp+0x28]
1002441c:	mov    eax,0x100819c0
10024421:	push   DWORD PTR [ebp+0x24]
10024424:	push   DWORD PTR [ebp+0x20]
10024427:	push   DWORD PTR [ebp+0x1c]
1002442a:	push   DWORD PTR [ebp+0x18]
1002442d:	push   DWORD PTR [ebp+0xc]
10024430:	push   DWORD PTR [ebp+0x8]
10024433:	call   0x10010a16
10024438:	pop    ebp
10024439:	ret    0x24
1002443c:	push   edi
1002443d:	mov    edi,DWORD PTR [esp+0x14]
10024441:	mov    ecx,0x100819dc
10024446:	call   0x10010945
1002444b:	pop    edi
1002444c:	ret    0x10
1002444f:	push   DWORD PTR [esp+0x18]
10024453:	mov    eax,0x100819dc
10024458:	push   DWORD PTR [esp+0x14]
1002445c:	push   DWORD PTR [esp+0x14]
10024460:	call   0x10010973
10024465:	ret    0x18
10024468:	push   ebp
10024469:	mov    ebp,esp
1002446b:	push   DWORD PTR [ebp+0x28]
1002446e:	mov    eax,0x100819dc
10024473:	push   DWORD PTR [ebp+0x24]
10024476:	push   DWORD PTR [ebp+0x20]
10024479:	push   DWORD PTR [ebp+0x1c]
1002447c:	push   DWORD PTR [ebp+0x18]
1002447f:	push   DWORD PTR [ebp+0xc]
10024482:	push   DWORD PTR [ebp+0x8]
10024485:	call   0x10010a16
1002448a:	pop    ebp
1002448b:	ret    0x24
1002448e:	push   esi
1002448f:	mov    esi,DWORD PTR [eax]
10024491:	test   esi,esi
10024493:	je     0x100244a8
10024495:	mov    eax,DWORD PTR [esi]
10024497:	test   eax,eax
10024499:	je     0x100244a1
1002449b:	mov    ecx,DWORD PTR [eax]
1002449d:	push   eax
1002449e:	call   DWORD PTR [ecx+0x8]
100244a1:	push   esi
100244a2:	call   0x10042fe2
100244a7:	pop    ecx
100244a8:	pop    esi
100244a9:	ret    
100244aa:	push   esi
100244ab:	mov    esi,ecx
100244ad:	mov    DWORD PTR [esi],0x10072928
100244b3:	mov    DWORD PTR [esi+0x4],0xc0000001
100244ba:	mov    ecx,DWORD PTR ds:0x10082c64
100244c0:	mov    eax,DWORD PTR [ecx]
100244c2:	call   DWORD PTR [eax+0x8]
100244c5:	mov    esi,DWORD PTR [esi+0xc]
100244c8:	test   esi,esi
100244ca:	je     0x100244d2
100244cc:	mov    eax,DWORD PTR [esi]
100244ce:	push   esi
100244cf:	call   DWORD PTR [eax+0x8]
100244d2:	pop    esi
100244d3:	ret    
100244d4:	mov    ecx,DWORD PTR [esp+0x4]
100244d8:	dec    DWORD PTR [ecx+0x4]
100244db:	push   esi
100244dc:	mov    esi,DWORD PTR [ecx+0x4]
100244df:	jne    0x100244ec
100244e1:	test   ecx,ecx
100244e3:	je     0x100244ec
100244e5:	mov    eax,DWORD PTR [ecx]
100244e7:	push   0x1
100244e9:	call   DWORD PTR [eax+0x40]
100244ec:	mov    eax,esi
100244ee:	pop    esi
100244ef:	ret    0x4
100244f2:	push   ebx
100244f3:	push   DWORD PTR [esp+0xc]
100244f7:	mov    ebx,DWORD PTR [esp+0x14]
100244fb:	push   DWORD PTR [esp+0xc]
100244ff:	mov    eax,0x10071cb8
10024504:	call   0x10010824
10024509:	pop    ebx
1002450a:	ret    0xc
1002450d:	push   esi
1002450e:	mov    esi,ecx
10024510:	mov    DWORD PTR [esi],0x10072970
10024516:	mov    DWORD PTR [esi+0x4],0xc0000001
1002451d:	mov    ecx,DWORD PTR ds:0x10082c64
10024523:	mov    eax,DWORD PTR [ecx]
10024525:	call   DWORD PTR [eax+0x8]
10024528:	call   0x1002462d
1002452d:	pop    esi
1002452e:	ret    
1002452f:	mov    ecx,DWORD PTR [esp+0x4]
10024533:	dec    DWORD PTR [ecx+0x4]
10024536:	push   esi
10024537:	mov    esi,DWORD PTR [ecx+0x4]
1002453a:	jne    0x10024547
1002453c:	test   ecx,ecx
1002453e:	je     0x10024547
10024540:	mov    eax,DWORD PTR [ecx]
10024542:	push   0x1
10024544:	call   DWORD PTR [eax+0x48]
10024547:	mov    eax,esi
10024549:	pop    esi
1002454a:	ret    0x4
1002454d:	push   ebx
1002454e:	push   DWORD PTR [esp+0xc]
10024552:	mov    ebx,DWORD PTR [esp+0x14]
10024556:	push   DWORD PTR [esp+0xc]
1002455a:	mov    eax,0x10071cdc
1002455f:	call   0x10010824
10024564:	pop    ebx
10024565:	ret    0xc
10024568:	push   esi
10024569:	lea    esi,[ecx+0x8]
1002456c:	mov    DWORD PTR [ecx],0x1007285c
10024572:	mov    DWORD PTR [ecx+0x4],0x1007286c
10024579:	mov    DWORD PTR [esi],0x10072880
1002457f:	mov    DWORD PTR [ecx+0xc],0x100728b8
10024586:	mov    DWORD PTR [ecx+0x24],0x100728d0
1002458d:	mov    DWORD PTR [ecx+0x28],0xc0000001
10024594:	mov    ecx,DWORD PTR ds:0x10082c64
1002459a:	mov    eax,DWORD PTR [ecx]
1002459c:	call   DWORD PTR [eax+0x8]
1002459f:	mov    ecx,esi
100245a1:	pop    esi
100245a2:	jmp    0x100241a8
100245a7:	mov    eax,DWORD PTR [esp+0x4]
100245ab:	inc    DWORD PTR [eax+0x28]
100245ae:	mov    eax,DWORD PTR [eax+0x28]
100245b1:	ret    0x4
100245b4:	mov    eax,DWORD PTR [esp+0x4]
100245b8:	dec    DWORD PTR [eax+0x28]
100245bb:	push   esi
100245bc:	mov    esi,DWORD PTR [eax+0x28]
100245bf:	jne    0x100245cf
100245c1:	test   eax,eax
100245c3:	je     0x100245cf
100245c5:	lea    ecx,[eax+0x8]
100245c8:	mov    eax,DWORD PTR [ecx]
100245ca:	push   0x1
100245cc:	call   DWORD PTR [eax+0x2c]
100245cf:	mov    eax,esi
100245d1:	pop    esi
100245d2:	ret    0x4
100245d5:	push   ebx
100245d6:	push   DWORD PTR [esp+0xc]
100245da:	mov    ebx,DWORD PTR [esp+0x14]
100245de:	push   DWORD PTR [esp+0xc]
100245e2:	mov    eax,0x10071770
100245e7:	call   0x10010824
100245ec:	pop    ebx
100245ed:	ret    0xc
100245f0:	jmp    0x10024722
100245f5:	push   esi
100245f6:	mov    esi,ecx
100245f8:	call   0x100244aa
100245fd:	test   BYTE PTR [esp+0x8],0x1
10024602:	je     0x1002460b
10024604:	push   esi
10024605:	call   0x10042fe2
1002460a:	pop    ecx
1002460b:	mov    eax,esi
1002460d:	pop    esi
1002460e:	ret    0x4
10024611:	push   esi
10024612:	mov    esi,ecx
10024614:	call   0x1002450d
10024619:	test   BYTE PTR [esp+0x8],0x1
1002461e:	je     0x10024627
10024620:	push   esi
10024621:	call   0x10042fe2
10024626:	pop    ecx
10024627:	mov    eax,esi
10024629:	pop    esi
1002462a:	ret    0x4
1002462d:	mov    eax,DWORD PTR [esi+0x38]
10024630:	test   eax,eax
10024632:	je     0x1002463a
10024634:	mov    ecx,DWORD PTR [eax]
10024636:	push   eax
10024637:	call   DWORD PTR [ecx+0x8]
1002463a:	push   edi
1002463b:	lea    edi,[esi+0x30]
1002463e:	call   0x100025b3
10024643:	push   0x0
10024645:	push   0x1
10024647:	lea    ecx,[esi+0x8]
1002464a:	call   0x100012f0
1002464f:	pop    edi
10024650:	ret    
10024651:	push   esi
10024652:	mov    esi,ecx
10024654:	call   0x10024568
10024659:	test   BYTE PTR [esp+0x8],0x1
1002465e:	je     0x10024667
10024660:	push   esi
10024661:	call   0x10042fe2
10024666:	pop    ecx
10024667:	mov    eax,esi
10024669:	pop    esi
1002466a:	ret    0x4
1002466d:	xor    eax,eax
1002466f:	mov    DWORD PTR [esi+0x4],eax
10024672:	mov    DWORD PTR [esi+0x10],eax
10024675:	mov    DWORD PTR [esi+0xc],eax
10024678:	mov    DWORD PTR [esi+0x8],eax
1002467b:	mov    DWORD PTR [esi+0x14],eax
1002467e:	mov    DWORD PTR [esi+0x18],eax
10024681:	mov    DWORD PTR [esi],0x100729bc
10024687:	mov    ecx,DWORD PTR ds:0x10082c64
1002468d:	mov    eax,DWORD PTR [ecx]
1002468f:	call   DWORD PTR [eax+0x4]
10024692:	mov    eax,esi
10024694:	ret    
10024695:	push   esi
10024696:	mov    esi,ecx
10024698:	mov    DWORD PTR [esi],0x100729bc
1002469e:	mov    DWORD PTR [esi+0x18],0xc0000001
100246a5:	mov    ecx,DWORD PTR ds:0x10082c64
100246ab:	mov    eax,DWORD PTR [ecx]
100246ad:	call   DWORD PTR [eax+0x8]
100246b0:	mov    ecx,esi
100246b2:	pop    esi
100246b3:	jmp    0x1002232a
100246b8:	mov    eax,DWORD PTR [esp+0x4]
100246bc:	inc    DWORD PTR [eax+0x18]
100246bf:	mov    eax,DWORD PTR [eax+0x18]
100246c2:	ret    0x4
100246c5:	push   ebx
100246c6:	push   DWORD PTR [esp+0xc]
100246ca:	mov    ebx,DWORD PTR [esp+0x14]
100246ce:	push   DWORD PTR [esp+0xc]
100246d2:	mov    eax,0x1007277c
100246d7:	call   0x10010824
100246dc:	pop    ebx
100246dd:	ret    0xc
100246e0:	push   esi
100246e1:	mov    esi,ecx
100246e3:	call   0x10024695
100246e8:	test   BYTE PTR [esp+0x8],0x1
100246ed:	je     0x100246f6
100246ef:	push   esi
100246f0:	call   0x10042fe2
100246f5:	pop    ecx
100246f6:	mov    eax,esi
100246f8:	pop    esi
100246f9:	ret    0x4
100246fc:	cmp    DWORD PTR [esp+0x8],0x0
10024701:	jne    0x1002470d
10024703:	push   0x80004005
10024708:	call   0x10001f2d
1002470d:	mov    eax,DWORD PTR [esp+0x4]
10024711:	mov    eax,DWORD PTR [eax]
10024713:	push   DWORD PTR [esp+0x8]
10024717:	push   eax
10024718:	call   0x100468e4
1002471d:	pop    ecx
1002471e:	pop    ecx
1002471f:	ret    0x8
10024722:	push   ebp
10024723:	mov    ebp,esp
10024725:	and    esp,0xfffffff8
10024728:	push   ecx
10024729:	push   ecx
1002472a:	push   ebx
1002472b:	push   edi
1002472c:	mov    edi,eax
1002472e:	mov    eax,DWORD PTR [edi+0x4]
10024731:	mov    ecx,DWORD PTR [eax]
10024733:	push   eax
10024734:	push   edi
10024735:	push   ecx
10024736:	push   edi
10024737:	lea    ebx,[esp+0x18]
1002473b:	call   0x100213d7
10024740:	push   DWORD PTR [edi+0x4]
10024743:	call   0x10042fe2
10024748:	and    DWORD PTR [edi+0x4],0x0
1002474c:	and    DWORD PTR [edi+0x8],0x0
10024750:	pop    ecx
10024751:	pop    edi
10024752:	pop    ebx
10024753:	mov    esp,ebp
10024755:	pop    ebp
10024756:	ret    
10024757:	push   0x30
10024759:	call   0x10043196
1002475e:	xor    edx,edx
10024760:	cmp    eax,edx
10024762:	pop    ecx
10024763:	je     0x10024767
10024765:	mov    DWORD PTR [eax],edx
10024767:	lea    ecx,[eax+0x4]
1002476a:	cmp    ecx,edx
1002476c:	je     0x10024770
1002476e:	mov    DWORD PTR [ecx],edx
10024770:	lea    ecx,[eax+0x8]
10024773:	cmp    ecx,edx
10024775:	je     0x10024779
10024777:	mov    DWORD PTR [ecx],edx
10024779:	mov    BYTE PTR [eax+0x2c],0x1
1002477d:	mov    BYTE PTR [eax+0x2d],dl
10024780:	ret    
10024781:	push   0xc
10024783:	mov    eax,0x1005fef1
10024788:	call   0x10059e28
1002478d:	mov    ebx,DWORD PTR [ebp+0x8]
10024790:	xor    edi,edi
10024792:	cmp    ebx,edi
10024794:	jne    0x1002479d
10024796:	mov    eax,0x80004003
1002479b:	jmp    0x100247f6
1002479d:	push   0x10
1002479f:	mov    DWORD PTR [ebx],edi
100247a1:	mov    DWORD PTR [ebp-0x14],0x8007000e
100247a8:	mov    DWORD PTR [ebp-0x4],edi
100247ab:	call   0x10043196
100247b0:	mov    esi,eax
100247b2:	cmp    esi,edi
100247b4:	pop    ecx
100247b5:	je     0x100247d3
100247b7:	mov    DWORD PTR [esi+0x4],edi
100247ba:	mov    DWORD PTR [esi+0x8],edi
100247bd:	mov    DWORD PTR [esi+0xc],edi
100247c0:	mov    DWORD PTR [esi],0x10072928
100247c6:	mov    ecx,DWORD PTR ds:0x10082c64
100247cc:	mov    eax,DWORD PTR [ecx]
100247ce:	call   DWORD PTR [eax+0x4]
100247d1:	jmp    0x100247e4
100247d3:	xor    esi,esi
100247d5:	jmp    0x100247e4
100247d7:	mov    eax,0x100247dd
100247dc:	ret    
100247dd:	mov    ebx,DWORD PTR [ebp+0x8]
100247e0:	xor    edi,edi
100247e2:	mov    esi,edi
100247e4:	cmp    esi,edi
100247e6:	je     0x100247f1
100247e8:	inc    DWORD PTR [esi+0x4]
100247eb:	dec    DWORD PTR [esi+0x4]
100247ee:	mov    DWORD PTR [ebp-0x14],edi
100247f1:	mov    eax,DWORD PTR [ebp-0x14]
100247f4:	mov    DWORD PTR [ebx],esi
100247f6:	call   0x10059ecd
100247fb:	ret    0x4
100247fe:	push   0xc
10024800:	mov    eax,0x100605c3
10024805:	call   0x10059e28
1002480a:	mov    eax,DWORD PTR [ebp+0x8]
1002480d:	xor    ebx,ebx
1002480f:	cmp    eax,ebx
10024811:	jne    0x1002481a
10024813:	mov    eax,0x80004003
10024818:	jmp    0x10024888
1002481a:	push   0x3c
1002481c:	mov    DWORD PTR [eax],ebx
1002481e:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024825:	mov    DWORD PTR [ebp-0x4],ebx
10024828:	call   0x10043196
1002482d:	mov    edi,eax
1002482f:	cmp    edi,ebx
10024831:	pop    ecx
10024832:	je     0x10024865
10024834:	lea    esi,[edi+0x8]
10024837:	mov    DWORD PTR [edi+0x4],ebx
1002483a:	call   0x100040ef
1002483f:	or     DWORD PTR [edi+0x28],0xffffffff
10024843:	mov    DWORD PTR [edi+0x24],ebx
10024846:	mov    BYTE PTR [edi+0x2c],bl
10024849:	mov    DWORD PTR [edi+0x30],ebx
1002484c:	mov    DWORD PTR [edi+0x34],ebx
1002484f:	mov    DWORD PTR [edi+0x38],ebx
10024852:	mov    DWORD PTR [edi],0x10072970
10024858:	mov    ecx,DWORD PTR ds:0x10082c64
1002485e:	mov    eax,DWORD PTR [ecx]
10024860:	call   DWORD PTR [eax+0x4]
10024863:	jmp    0x10024873
10024865:	xor    edi,edi
10024867:	jmp    0x10024873
10024869:	mov    eax,0x1002486f
1002486e:	ret    
1002486f:	xor    ebx,ebx
10024871:	mov    edi,ebx
10024873:	cmp    edi,ebx
10024875:	je     0x10024880
10024877:	inc    DWORD PTR [edi+0x4]
1002487a:	dec    DWORD PTR [edi+0x4]
1002487d:	mov    DWORD PTR [ebp-0x14],ebx
10024880:	mov    eax,DWORD PTR [ebp+0x8]
10024883:	mov    DWORD PTR [eax],edi
10024885:	mov    eax,DWORD PTR [ebp-0x14]
10024888:	call   0x10059ecd
1002488d:	ret    0x4
10024890:	push   0xc
10024892:	mov    eax,0x100620ab
10024897:	call   0x10059e28
1002489c:	mov    edi,DWORD PTR [ebp+0x8]
1002489f:	xor    ebx,ebx
100248a1:	cmp    edi,ebx
100248a3:	jne    0x100248ac
100248a5:	mov    eax,0x80004003
100248aa:	jmp    0x1002491a
100248ac:	push   0x2c
100248ae:	mov    DWORD PTR [edi],ebx
100248b0:	mov    DWORD PTR [ebp-0x14],0x8007000e
100248b7:	mov    DWORD PTR [ebp-0x18],ebx
100248ba:	mov    DWORD PTR [ebp-0x4],ebx
100248bd:	call   0x10043196
100248c2:	mov    esi,eax
100248c4:	cmp    esi,ebx
100248c6:	pop    ecx
100248c7:	je     0x100248fd
100248c9:	call   0x1002296b
100248ce:	mov    DWORD PTR [esi],0x1007285c
100248d4:	mov    DWORD PTR [esi+0x4],0x1007286c
100248db:	mov    DWORD PTR [esi+0x8],0x10072880
100248e2:	mov    DWORD PTR [esi+0xc],0x100728b8
100248e9:	mov    DWORD PTR [esi+0x24],0x100728d0
100248f0:	mov    ecx,DWORD PTR ds:0x10082c64
100248f6:	mov    eax,DWORD PTR [ecx]
100248f8:	call   DWORD PTR [eax+0x4]
100248fb:	jmp    0x1002490d
100248fd:	xor    esi,esi
100248ff:	jmp    0x1002490d
10024901:	mov    eax,0x10024907
10024906:	ret    
10024907:	mov    edi,DWORD PTR [ebp+0x8]
1002490a:	mov    esi,DWORD PTR [ebp-0x18]
1002490d:	test   esi,esi
1002490f:	je     0x10024915
10024911:	and    DWORD PTR [ebp-0x14],0x0
10024915:	mov    eax,DWORD PTR [ebp-0x14]
10024918:	mov    DWORD PTR [edi],esi
1002491a:	call   0x10059ecd
1002491f:	ret    0x4
10024922:	push   0x8
10024924:	mov    eax,0x100605f7
10024929:	call   0x10059df5
1002492e:	mov    eax,DWORD PTR [ebp+0xc]
10024931:	xor    edi,edi
10024933:	cmp    eax,edi
10024935:	mov    DWORD PTR [ebp-0x10],edi
10024938:	mov    ebx,0x80004003
1002493d:	je     0x100249d8
10024943:	mov    DWORD PTR [eax],edi
10024945:	lea    eax,[ebp-0x14]
10024948:	push   eax
10024949:	call   0x10024a05
1002494e:	mov    ebx,eax
10024950:	cmp    ebx,edi
10024952:	jl     0x100249d8
10024958:	mov    esi,DWORD PTR [ebp+0x8]
1002495b:	test   BYTE PTR [esi+0x14],0x2
1002495f:	je     0x10024979
10024961:	mov    eax,DWORD PTR [esi]
10024963:	push   esi
10024964:	mov    DWORD PTR [ebp+0x8],esi
10024967:	call   DWORD PTR [eax+0x4]
1002496a:	mov    DWORD PTR [ebp-0x4],edi
1002496d:	lea    eax,[ebp+0x8]
10024970:	mov    DWORD PTR [ebp-0x10],0x1
10024977:	jmp    0x1002497c
10024979:	lea    eax,[esi+0x4]
1002497c:	mov    eax,DWORD PTR [eax]
1002497e:	push   edi
1002497f:	mov    edi,DWORD PTR [ebp-0x14]
10024982:	push   eax
10024983:	push   DWORD PTR [esi+0xc]
10024986:	push   DWORD PTR [esi+0x8]
10024989:	push   edi
1002498a:	call   0x10022541
1002498f:	or     DWORD PTR [ebp-0x4],0xffffffff
10024993:	test   BYTE PTR [ebp-0x10],0x1
10024997:	mov    ebx,eax
10024999:	je     0x100249a8
1002499b:	mov    eax,DWORD PTR [ebp+0x8]
1002499e:	test   eax,eax
100249a0:	je     0x100249a8
100249a2:	mov    ecx,DWORD PTR [eax]
100249a4:	push   eax
100249a5:	call   DWORD PTR [ecx+0x8]
100249a8:	test   ebx,ebx
100249aa:	jl     0x100249cb
100249ac:	mov    eax,DWORD PTR [esi+0x10]
100249af:	mov    ebx,DWORD PTR [ebp+0xc]
100249b2:	push   0x10071c88
100249b7:	mov    DWORD PTR [edi+0x10],eax
100249ba:	push   edi
100249bb:	mov    eax,0x1007277c
100249c0:	call   0x10010824
100249c5:	mov    ebx,eax
100249c7:	test   ebx,ebx
100249c9:	jge    0x100249d8
100249cb:	test   edi,edi
100249cd:	je     0x100249d8
100249cf:	mov    eax,DWORD PTR [edi]
100249d1:	push   0x1
100249d3:	mov    ecx,edi
100249d5:	call   DWORD PTR [eax+0x1c]
100249d8:	mov    eax,ebx
100249da:	call   0x10059ecd
100249df:	ret    0x8
100249e2:	test   ecx,ecx
100249e4:	je     0x100249ea
100249e6:	test   eax,eax
100249e8:	jne    0x100249f4
100249ea:	push   0x80004005
100249ef:	call   0x10001f2d
100249f4:	mov    eax,DWORD PTR [eax]
100249f6:	test   eax,eax
100249f8:	mov    DWORD PTR [ecx],eax
100249fa:	je     0x10024a02
100249fc:	mov    ecx,DWORD PTR [eax]
100249fe:	push   eax
100249ff:	call   DWORD PTR [ecx+0x4]
10024a02:	xor    eax,eax
10024a04:	ret    
10024a05:	push   0xc
10024a07:	mov    eax,0x1005fed6
10024a0c:	call   0x10059e28
10024a11:	mov    edi,DWORD PTR [ebp+0x8]
10024a14:	xor    esi,esi
10024a16:	cmp    edi,esi
10024a18:	jne    0x10024a21
10024a1a:	mov    eax,0x80004003
10024a1f:	jmp    0x10024a62
10024a21:	push   0x1c
10024a23:	mov    DWORD PTR [edi],esi
10024a25:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024a2c:	mov    DWORD PTR [ebp-0x18],esi
10024a2f:	mov    DWORD PTR [ebp-0x4],esi
10024a32:	call   0x10043196
10024a37:	cmp    eax,esi
10024a39:	pop    ecx
10024a3a:	je     0x10024a45
10024a3c:	mov    esi,eax
10024a3e:	call   0x1002466d
10024a43:	jmp    0x10024a55
10024a45:	xor    eax,eax
10024a47:	jmp    0x10024a55
10024a49:	mov    eax,0x10024a4f
10024a4e:	ret    
10024a4f:	mov    edi,DWORD PTR [ebp+0x8]
10024a52:	mov    eax,DWORD PTR [ebp-0x18]
10024a55:	test   eax,eax
10024a57:	je     0x10024a5d
10024a59:	and    DWORD PTR [ebp-0x14],0x0
10024a5d:	mov    DWORD PTR [edi],eax
10024a5f:	mov    eax,DWORD PTR [ebp-0x14]
10024a62:	call   0x10059ecd
10024a67:	ret    0x4
10024a6a:	sub    DWORD PTR [esp+0x4],0xc
10024a6f:	jmp    0x100245b4
10024a74:	sub    DWORD PTR [esp+0x4],0xc
10024a79:	jmp    0x100245a7
10024a7e:	sub    ecx,0x8
10024a81:	jmp    0x10022a6a
10024a86:	sub    DWORD PTR [esp+0x4],0x4
10024a8b:	jmp    0x100245d5
10024a90:	sub    DWORD PTR [esp+0x4],0x24
10024a95:	jmp    0x100245d5
10024a9a:	sub    ecx,0x8
10024a9d:	jmp    0x10024651
10024aa2:	sub    DWORD PTR [esp+0x4],0x8
10024aa7:	jmp    0x100245d5
10024aac:	sub    DWORD PTR [esp+0x4],0xc
10024ab1:	jmp    0x100245d5
10024ab6:	sub    DWORD PTR [esp+0x4],0x4
10024abb:	jmp    0x100245b4
10024ac0:	sub    DWORD PTR [esp+0x4],0x24
10024ac5:	jmp    0x100245b4
10024aca:	sub    DWORD PTR [esp+0x4],0x4
10024acf:	jmp    0x100245a7
10024ad4:	sub    DWORD PTR [esp+0x4],0x24
10024ad9:	jmp    0x100245a7
10024ade:	sub    DWORD PTR [esp+0x4],0x8
10024ae3:	jmp    0x100245b4
10024ae8:	sub    DWORD PTR [esp+0x4],0x8
10024aed:	jmp    0x100245a7
10024af2:	push   0x0
10024af4:	mov    eax,0x1005febb
10024af9:	call   0x10059df5
10024afe:	mov    esi,DWORD PTR [ebp+0x8]
10024b01:	push   DWORD PTR [ebp+0xc]
10024b04:	mov    ecx,esi
10024b06:	call   0x100011c9
10024b0b:	push   DWORD PTR [ebp+0x10]
10024b0e:	and    DWORD PTR [ebp-0x4],0x0
10024b12:	lea    ecx,[esi+0x1c]
10024b15:	call   0x100011c9
10024b1a:	push   DWORD PTR [ebp+0x14]
10024b1d:	lea    ecx,[esi+0x38]
10024b20:	mov    BYTE PTR [ebp-0x4],0x1
10024b24:	call   0x100011c9
10024b29:	mov    eax,DWORD PTR [ebp+0x18]
10024b2c:	mov    DWORD PTR [esi+0x58],eax
10024b2f:	mov    eax,DWORD PTR [ebp+0x1c]
10024b32:	mov    DWORD PTR [esi+0x5c],eax
10024b35:	mov    eax,DWORD PTR [ebp+0x20]
10024b38:	mov    DWORD PTR [esi+0x60],eax
10024b3b:	mov    eax,DWORD PTR [ebp+0x24]
10024b3e:	mov    DWORD PTR [esi+0x64],eax
10024b41:	mov    eax,esi
10024b43:	call   0x10059ecd
10024b48:	ret    0x20
10024b4b:	push   ebp
10024b4c:	mov    ebp,esp
10024b4e:	push   ecx
10024b4f:	push   ebx
10024b50:	mov    ebx,DWORD PTR ds:0x10067114
10024b56:	push   esi
10024b57:	xor    esi,esi
10024b59:	push   esi
10024b5a:	push   esi
10024b5b:	mov    DWORD PTR [edi],0x10072a48
10024b61:	mov    DWORD PTR [edi+0x4],esi
10024b64:	push   esi
10024b65:	mov    DWORD PTR [edi+0x8],esi
10024b68:	push   esi
10024b69:	mov    DWORD PTR [edi+0x1c],eax
10024b6c:	call   ebx
10024b6e:	push   esi
10024b6f:	push   esi
10024b70:	push   esi
10024b71:	push   esi
10024b72:	mov    DWORD PTR [ebp-0x4],eax
10024b75:	call   ebx
10024b77:	push   DWORD PTR [ebp-0x4]
10024b7a:	lea    esi,[edi+0x4]
10024b7d:	mov    ebx,eax
10024b7f:	call   0x100049bb
10024b84:	push   ebx
10024b85:	lea    esi,[edi+0x8]
10024b88:	call   0x100049bb
10024b8d:	pop    esi
10024b8e:	mov    eax,edi
10024b90:	pop    ebx
10024b91:	leave  
10024b92:	ret    
10024b93:	push   esi
10024b94:	mov    esi,ecx
10024b96:	mov    DWORD PTR [esi],0x10072a48
10024b9c:	mov    eax,DWORD PTR [esi+0x8]
10024b9f:	test   eax,eax
10024ba1:	push   edi
10024ba2:	mov    edi,DWORD PTR ds:0x10067078
10024ba8:	je     0x10024bad
10024baa:	push   eax
10024bab:	call   edi
10024bad:	and    DWORD PTR [esi+0x8],0x0
10024bb1:	mov    eax,DWORD PTR [esi+0x4]
10024bb4:	test   eax,eax
10024bb6:	je     0x10024bbb
10024bb8:	push   eax
10024bb9:	call   edi
10024bbb:	and    DWORD PTR [esi+0x4],0x0
10024bbf:	test   BYTE PTR [esp+0xc],0x1
10024bc4:	mov    DWORD PTR [esi],0x1006ea24
10024bca:	je     0x10024bd3
10024bcc:	push   esi
10024bcd:	call   0x10042fe2
10024bd2:	pop    ecx
10024bd3:	pop    edi
10024bd4:	mov    eax,esi
10024bd6:	pop    esi
10024bd7:	ret    0x4
10024bda:	push   ebp
10024bdb:	mov    ebp,esp
10024bdd:	sub    esp,0xc
10024be0:	push   ebx
10024be1:	push   esi
10024be2:	mov    esi,ecx
10024be4:	mov    eax,DWORD PTR [esi+0x4]
10024be7:	mov    DWORD PTR [ebp-0xc],eax
10024bea:	mov    eax,ds:0x10083010
10024bef:	mov    DWORD PTR [ebp-0x8],eax
10024bf2:	mov    eax,DWORD PTR [esi+0x1c]
10024bf5:	mov    eax,DWORD PTR [eax+0x30]
10024bf8:	push   0xffffffff
10024bfa:	mov    DWORD PTR [ebp-0x4],eax
10024bfd:	xor    ebx,ebx
10024bff:	push   ebx
10024c00:	lea    eax,[ebp-0xc]
10024c03:	push   eax
10024c04:	push   0x3
10024c06:	call   DWORD PTR ds:0x100670f4
10024c0c:	test   eax,eax
10024c0e:	je     0x10024c29
10024c10:	mov    eax,DWORD PTR [ebp+0x10]
10024c13:	mov    DWORD PTR [eax],ebx
10024c15:	mov    BYTE PTR [esi+0x18],bl
10024c18:	push   DWORD PTR [esi+0x8]
10024c1b:	call   DWORD PTR ds:0x10067148
10024c21:	pop    esi
10024c22:	mov    al,bl
10024c24:	pop    ebx
10024c25:	leave  
10024c26:	ret    0xc
10024c29:	push   edi
10024c2a:	mov    edi,DWORD PTR [esi+0x10]
10024c2d:	cmp    edi,DWORD PTR [ebp+0xc]
10024c30:	jb     0x10024c35
10024c32:	mov    edi,DWORD PTR [ebp+0xc]
10024c35:	push   edi
10024c36:	push   DWORD PTR [esi+0xc]
10024c39:	push   DWORD PTR [ebp+0x8]
10024c3c:	call   0x10045340
10024c41:	mov    eax,DWORD PTR [ebp+0x10]
10024c44:	mov    DWORD PTR [eax],edi
10024c46:	add    esp,0xc
10024c49:	mov    DWORD PTR [esi+0x14],edi
10024c4c:	mov    BYTE PTR [esi+0x18],0x1
10024c50:	mov    bl,0x1
10024c52:	pop    edi
10024c53:	jmp    0x10024c18
10024c55:	mov    DWORD PTR [eax],0x1006ea24
10024c5b:	ret    
10024c5c:	push   ebp
10024c5d:	mov    ebp,esp
10024c5f:	sub    esp,0x21c
10024c65:	mov    eax,DWORD PTR [ebp+0x8]
10024c68:	push   ebx
10024c69:	push   esi
10024c6a:	mov    DWORD PTR [ebp-0x8],eax
10024c6d:	mov    eax,DWORD PTR [ebp+0xc]
10024c70:	push   edi
10024c71:	xor    edi,edi
10024c73:	mov    esi,ecx
10024c75:	mov    DWORD PTR [ebp-0xc],eax
10024c78:	mov    eax,DWORD PTR [esi+0x4]
10024c7b:	push   edi
10024c7c:	mov    DWORD PTR [ebp-0x4],edi
10024c7f:	mov    DWORD PTR [ebp+0x8],edi
10024c82:	mov    DWORD PTR [ebp+0xc],edi
10024c85:	push   DWORD PTR [eax+0x30]
10024c88:	call   DWORD PTR ds:0x1006707c
10024c8e:	test   eax,eax
10024c90:	je     0x10024d0a
10024c92:	xor    ebx,ebx
10024c94:	inc    ebx
10024c95:	mov    eax,DWORD PTR [esi+0x4]
10024c98:	mov    DWORD PTR [ebp-0x21c],edi
10024c9e:	mov    DWORD PTR [ebp-0x14],edi
10024ca1:	mov    DWORD PTR [ebp-0x10],0x64
10024ca8:	mov    ecx,DWORD PTR [eax]
10024caa:	mov    DWORD PTR [ebp-0x218],ecx
10024cb0:	mov    DWORD PTR [ebp-0x118],edi
10024cb6:	mov    DWORD PTR [ebp-0x21c],ebx
10024cbc:	mov    ecx,DWORD PTR [eax]
10024cbe:	mov    DWORD PTR [ebp-0x114],ecx
10024cc4:	lea    ecx,[ebp+0x8]
10024cc7:	push   ecx
10024cc8:	lea    ecx,[ebp-0x14]
10024ccb:	push   ecx
10024ccc:	lea    ecx,[ebp-0x118]
10024cd2:	push   ecx
10024cd3:	push   edi
10024cd4:	lea    ecx,[ebp-0x21c]
10024cda:	push   ecx
10024cdb:	push   edi
10024cdc:	mov    DWORD PTR [ebp-0x118],ebx
10024ce2:	call   DWORD PTR [eax+0x94]
10024ce8:	cmp    eax,0xffffffff
10024ceb:	je     0x10024d13
10024ced:	cmp    DWORD PTR [ebp-0x118],ebx
10024cf3:	je     0x10024d1e
10024cf5:	cmp    eax,edi
10024cf7:	mov    eax,DWORD PTR [esi+0x4]
10024cfa:	jg     0x10024d2a
10024cfc:	push   edi
10024cfd:	push   DWORD PTR [eax+0x30]
10024d00:	call   DWORD PTR ds:0x1006707c
10024d06:	test   eax,eax
10024d08:	jne    0x10024c95
10024d0a:	mov    eax,DWORD PTR [ebp+0x10]
10024d0d:	mov    DWORD PTR [eax],edi
10024d0f:	xor    al,al
10024d11:	jmp    0x10024d55
10024d13:	mov    eax,DWORD PTR [esi+0x4]
10024d16:	mov    ecx,DWORD PTR [ebp+0x8]
10024d19:	mov    DWORD PTR [eax+0x38],ecx
10024d1c:	jmp    0x10024d0f
10024d1e:	mov    eax,DWORD PTR [esi+0x4]
10024d21:	mov    DWORD PTR [eax+0x38],0x2746
10024d28:	jmp    0x10024d0f
10024d2a:	lea    ecx,[ebp+0x8]
10024d2d:	push   ecx
10024d2e:	push   edi
10024d2f:	push   edi
10024d30:	push   edi
10024d31:	lea    ecx,[ebp+0xc]
10024d34:	push   ecx
10024d35:	lea    ecx,[ebp-0x4]
10024d38:	push   ecx
10024d39:	push   ebx
10024d3a:	lea    ecx,[ebp-0xc]
10024d3d:	push   ecx
10024d3e:	push   DWORD PTR [eax]
10024d40:	call   DWORD PTR [eax+0x88]
10024d46:	cmp    eax,0xffffffff
10024d49:	je     0x10024d13
10024d4b:	mov    eax,DWORD PTR [ebp+0x10]
10024d4e:	mov    ecx,DWORD PTR [ebp-0x4]
10024d51:	mov    DWORD PTR [eax],ecx
10024d53:	mov    al,bl
10024d55:	pop    edi
10024d56:	pop    esi
10024d57:	pop    ebx
10024d58:	leave  
10024d59:	ret    0xc
10024d5c:	push   0x0
10024d5e:	mov    eax,0x10063ff3
10024d63:	call   0x10059df5
10024d68:	mov    esi,DWORD PTR [ebp+0x8]
10024d6b:	xor    ebx,ebx
10024d6d:	mov    BYTE PTR [esi],bl
10024d6f:	mov    BYTE PTR [esi+0x1],bl
10024d72:	mov    DWORD PTR [esi+0x8],ebx
10024d75:	mov    DWORD PTR [esi+0xc],ebx
10024d78:	mov    DWORD PTR [esi+0x10],ebx
10024d7b:	mov    DWORD PTR [esi+0x14],ebx
10024d7e:	mov    DWORD PTR [ebp-0x4],ebx
10024d81:	mov    DWORD PTR [esi+0x1c],ebx
10024d84:	mov    DWORD PTR [esi+0x20],ebx
10024d87:	mov    DWORD PTR [esi+0x24],ebx
10024d8a:	mov    DWORD PTR [esi+0x28],ebx
10024d8d:	mov    DWORD PTR [esi+0x2c],ebx
10024d90:	mov    DWORD PTR [esi+0x30],ebx
10024d93:	mov    DWORD PTR [esi+0x34],ebx
10024d96:	mov    eax,DWORD PTR [ebp+0xc]
10024d99:	mov    BYTE PTR [ebp-0x4],0x4
10024d9d:	mov    DWORD PTR [esi+0x50],eax
10024da0:	lea    eax,[esi+0x38]
10024da3:	push   eax
10024da4:	call   DWORD PTR ds:0x10067118
10024daa:	push   0x20
10024dac:	call   0x10043196
10024db1:	mov    edi,eax
10024db3:	cmp    edi,ebx
10024db5:	pop    ecx
10024db6:	je     0x10024dc4
10024db8:	mov    eax,DWORD PTR [esi+0x50]
10024dbb:	call   0x10024b4b
10024dc0:	mov    edi,eax
10024dc2:	jmp    0x10024dc6
10024dc4:	xor    edi,edi
10024dc6:	mov    ecx,DWORD PTR [esi+0x30]
10024dc9:	cmp    edi,ecx
10024dcb:	je     0x10024dd7
10024dcd:	cmp    ecx,ebx
10024dcf:	je     0x10024dd7
10024dd1:	mov    eax,DWORD PTR [ecx]
10024dd3:	push   0x1
10024dd5:	call   DWORD PTR [eax]
10024dd7:	mov    DWORD PTR [esi+0x30],edi
10024dda:	mov    eax,esi
10024ddc:	call   0x10059ecd
10024de1:	ret    0x8
10024de4:	jmp    0x10025eb4
10024de9:	push   0x0
10024deb:	mov    eax,0x10063ff3
10024df0:	call   0x10059df5
10024df5:	mov    edi,DWORD PTR [ebp+0x8]
10024df8:	mov    DWORD PTR [ebp-0x4],0x4
10024dff:	mov    ecx,edi
10024e01:	call   0x10025a91
10024e06:	test   al,al
10024e08:	jne    0x10024dff
10024e0a:	push   edi
10024e0b:	call   0x10025e16
10024e10:	test   al,al
10024e12:	jne    0x10024e0a
10024e14:	lea    eax,[edi+0x38]
10024e17:	push   eax
10024e18:	call   DWORD PTR ds:0x10067120
10024e1e:	lea    eax,[edi+0x34]
10024e21:	mov    BYTE PTR [ebp-0x4],0x3
10024e25:	call   0x1000ce90
10024e2a:	mov    BYTE PTR [ebp-0x4],0x2
10024e2e:	mov    ecx,DWORD PTR [edi+0x30]
10024e31:	test   ecx,ecx
10024e33:	je     0x10024e3b
10024e35:	mov    eax,DWORD PTR [ecx]
10024e37:	push   0x1
10024e39:	call   DWORD PTR [eax]
10024e3b:	mov    BYTE PTR [ebp-0x4],0x1
10024e3f:	mov    eax,DWORD PTR [edi+0x2c]
10024e42:	test   eax,eax
10024e44:	je     0x10024e4c
10024e46:	mov    ecx,DWORD PTR [eax]
10024e48:	push   eax
10024e49:	call   DWORD PTR [ecx+0x8]
10024e4c:	lea    esi,[edi+0x18]
10024e4f:	call   0x10025eb4
10024e54:	lea    esi,[edi+0x4]
10024e57:	call   0x10025eb4
10024e5c:	call   0x10059ecd
10024e61:	ret    0x4
10024e64:	push   0x8
10024e66:	mov    eax,0x1006560c
10024e6b:	call   0x10059e28
10024e70:	mov    edi,ecx
10024e72:	mov    esi,edx
10024e74:	xor    ebx,ebx
10024e76:	mov    DWORD PTR [ebp-0x4],ebx
10024e79:	cmp    DWORD PTR ds:0x10082cec,0x3
10024e80:	mov    BYTE PTR [edi],bl
10024e82:	jne    0x10024e89
10024e84:	call   0x1000409a
10024e89:	mov    DWORD PTR [ebp-0x14],ebx
10024e8c:	lea    eax,[ebp-0x14]
10024e8f:	push   eax
10024e90:	mov    BYTE PTR [ebp-0x4],0x1
10024e94:	push   DWORD PTR [esi+0x50]
10024e97:	push   DWORD PTR [ebp+0x8]
10024e9a:	push   0x10082ff8
10024e9f:	call   0x1002626d
10024ea4:	add    esp,0x10
10024ea7:	cmp    al,bl
10024ea9:	je     0x10024ebd
10024eab:	mov    ecx,DWORD PTR [ebp-0x14]
10024eae:	cmp    ecx,ebx
10024eb0:	je     0x10024ec9
10024eb2:	mov    DWORD PTR [ebp-0x14],ebx
10024eb5:	call   0x10025b02
10024eba:	mov    BYTE PTR [edi],0x1
10024ebd:	mov    edi,DWORD PTR [ebp-0x14]
10024ec0:	cmp    edi,ebx
10024ec2:	je     0x10024ec9
10024ec4:	call   0x1000a38e
10024ec9:	call   0x10059ecd
10024ece:	ret    0x4
10024ed1:	mov    eax,0x10024ec9
10024ed6:	ret    
10024ed7:	push   ebp
10024ed8:	mov    ebp,esp
10024eda:	and    esp,0xfffffff8
10024edd:	sub    esp,0x120
10024ee3:	push   ebx
10024ee4:	push   esi
10024ee5:	xor    esi,esi
10024ee7:	xor    ebx,ebx
10024ee9:	cmp    DWORD PTR [ebp+0xc],esi
10024eec:	jbe    0x10024f91
10024ef2:	mov    eax,DWORD PTR [ebp+0x8]
10024ef5:	add    eax,ebx
10024ef7:	mov    DWORD PTR [esp+0x1c],eax
10024efb:	mov    eax,DWORD PTR [ebp+0xc]
10024efe:	sub    eax,ebx
10024f00:	mov    DWORD PTR [esp+0x8],esi
10024f04:	mov    DWORD PTR [esp+0xc],esi
10024f08:	mov    DWORD PTR [esp+0x18],eax
10024f0c:	mov    eax,DWORD PTR [edi+0x50]
10024f0f:	push   esi
10024f10:	push   DWORD PTR [eax+0x30]
10024f13:	call   DWORD PTR ds:0x1006707c
10024f19:	test   eax,eax
10024f1b:	mov    eax,DWORD PTR [edi+0x50]
10024f1e:	je     0x10024f9b
10024f20:	mov    DWORD PTR [esp+0x20],esi
10024f24:	mov    DWORD PTR [esp+0x10],esi
10024f28:	mov    DWORD PTR [esp+0x14],0x64
10024f30:	mov    ecx,DWORD PTR [eax]
10024f32:	mov    DWORD PTR [esp+0x24],ecx
10024f36:	lea    ecx,[esp+0x8]
10024f3a:	push   ecx
10024f3b:	lea    ecx,[esp+0x14]
10024f3f:	push   ecx
10024f40:	push   esi
10024f41:	lea    ecx,[esp+0x2c]
10024f45:	push   ecx
10024f46:	push   esi
10024f47:	push   esi
10024f48:	mov    DWORD PTR [esp+0x38],0x1
10024f50:	call   DWORD PTR [eax+0x94]
10024f56:	cmp    eax,0xffffffff
10024f59:	je     0x10024fa6
10024f5b:	cmp    eax,esi
10024f5d:	jle    0x10024f0c
10024f5f:	mov    eax,DWORD PTR [edi+0x50]
10024f62:	lea    ecx,[esp+0x8]
10024f66:	push   ecx
10024f67:	push   esi
10024f68:	push   esi
10024f69:	push   esi
10024f6a:	push   esi
10024f6b:	lea    ecx,[esp+0x20]
10024f6f:	push   ecx
10024f70:	push   0x1
10024f72:	lea    ecx,[esp+0x34]
10024f76:	push   ecx
10024f77:	push   DWORD PTR [eax]
10024f79:	call   DWORD PTR [eax+0x98]
10024f7f:	cmp    eax,0xffffffff
10024f82:	je     0x10024fa6
10024f84:	add    ebx,DWORD PTR [esp+0xc]
10024f88:	cmp    DWORD PTR [ebp+0xc],ebx
10024f8b:	ja     0x10024ef2
10024f91:	mov    al,0x1
10024f93:	pop    esi
10024f94:	pop    ebx
10024f95:	mov    esp,ebp
10024f97:	pop    ebp
10024f98:	ret    0x8
10024f9b:	mov    DWORD PTR [eax+0x38],0x2749
10024fa2:	xor    al,al
10024fa4:	jmp    0x10024f93
10024fa6:	mov    eax,DWORD PTR [edi+0x50]
10024fa9:	mov    ecx,DWORD PTR [esp+0x8]
10024fad:	mov    DWORD PTR [eax+0x38],ecx
10024fb0:	jmp    0x10024fa2
10024fb2:	push   0x8
10024fb4:	mov    eax,0x10063fa1
10024fb9:	call   0x10059df5
10024fbe:	mov    ebx,ecx
10024fc0:	push   0x40
10024fc2:	call   0x10043196
10024fc7:	pop    ecx
10024fc8:	mov    DWORD PTR [ebp-0x10],eax
10024fcb:	and    DWORD PTR [ebp-0x4],0x0
10024fcf:	test   eax,eax
10024fd1:	je     0x10024fdd
10024fd3:	push   eax
10024fd4:	call   0x100089ba
10024fd9:	mov    esi,eax
10024fdb:	jmp    0x10024fdf
10024fdd:	xor    esi,esi
10024fdf:	mov    DWORD PTR [ebp-0x10],esi
10024fe2:	mov    eax,ebx
10024fe4:	mov    DWORD PTR [ebp-0x4],0x1
10024feb:	call   0x1000e4f0
10024ff0:	test   al,al
10024ff2:	je     0x10025047
10024ff4:	lea    eax,[ebp-0x14]
10024ff7:	push   eax
10024ff8:	call   0x1000e30b
10024ffd:	mov    BYTE PTR [ebp-0x4],0x2
10025001:	mov    ecx,DWORD PTR [eax]
10025003:	and    DWORD PTR [eax],0x0
10025006:	mov    eax,ecx
10025008:	mov    ecx,esi
1002500a:	call   0x10008a04
1002500f:	mov    BYTE PTR [ebp-0x4],0x1
10025013:	mov    edi,DWORD PTR [ebp-0x14]
10025016:	test   edi,edi
10025018:	je     0x1002501f
1002501a:	call   0x1000a38e
1002501f:	mov    eax,DWORD PTR [esi+0x34]
10025022:	mov    ecx,DWORD PTR [eax+0x18]
10025025:	mov    eax,DWORD PTR [eax+0x14]
10025028:	mov    edi,DWORD PTR [ebp+0x8]
1002502b:	push   ecx
1002502c:	push   eax
1002502d:	call   0x10024ed7
10025032:	or     DWORD PTR [ebp-0x4],0xffffffff
10025036:	test   al,al
10025038:	lea    ecx,[ebp-0x10]
1002503b:	je     0x1002504e
1002503d:	call   0x1000a176
10025042:	jmp    0x10024fc0
10025047:	or     DWORD PTR [ebp-0x4],0xffffffff
1002504b:	lea    ecx,[ebp-0x10]
1002504e:	call   0x1000a176
10025053:	call   0x10059ecd
10025058:	ret    0x4
1002505b:	push   esi
1002505c:	mov    esi,ecx
1002505e:	cmp    BYTE PTR [esi+0x8],0x0
10025062:	jne    0x10025096
10025064:	cmp    BYTE PTR [esi+0x9],0x0
10025068:	jne    0x10025096
1002506a:	push   ebx
1002506b:	mov    ebx,DWORD PTR [esp+0xc]
1002506f:	mov    eax,DWORD PTR [ebx+0x18]
10025072:	mov    ecx,DWORD PTR [ebx+0x14]
10025075:	push   edi
10025076:	push   eax
10025077:	mov    eax,DWORD PTR [esi+0x4]
1002507a:	mov    edi,DWORD PTR [eax+0x1c]
1002507d:	push   ecx
1002507e:	call   0x10024ed7
10025083:	test   al,al
10025085:	jne    0x10025094
10025087:	mov    BYTE PTR [esi+0x9],0x1
1002508b:	push   DWORD PTR [ebx+0x18]
1002508e:	call   0x10002068
10025093:	pop    ecx
10025094:	pop    edi
10025095:	pop    ebx
10025096:	pop    esi
10025097:	ret    0x4
1002509a:	push   0x8
1002509c:	mov    eax,0x100648a8
100250a1:	call   0x10059e28
100250a6:	mov    esi,DWORD PTR [ebp+0x10]
100250a9:	push   0xc
100250ab:	call   0x10043196
100250b0:	xor    ebx,ebx
100250b2:	cmp    eax,ebx
100250b4:	pop    ecx
100250b5:	je     0x100250d3
100250b7:	mov    ecx,DWORD PTR [ebp+0x8]
100250ba:	mov    ecx,DWORD PTR [ecx+0x50]
100250bd:	mov    DWORD PTR [eax+0x4],ecx
100250c0:	mov    cl,BYTE PTR [ebp+0x18]
100250c3:	mov    DWORD PTR [eax],0x10072a58
100250c9:	mov    BYTE PTR [eax+0x8],cl
100250cc:	mov    BYTE PTR [eax+0x9],bl
100250cf:	mov    edi,eax
100250d1:	jmp    0x100250d5
100250d3:	xor    edi,edi
100250d5:	mov    DWORD PTR [ebp-0x14],edi
100250d8:	mov    DWORD PTR [ebp-0x4],ebx
100250db:	call   0x1000e194
100250e0:	push   DWORD PTR [ebp+0xc]
100250e3:	mov    ecx,DWORD PTR [ebp+0x14]
100250e6:	mov    DWORD PTR [esi+0x14],edi
100250e9:	mov    BYTE PTR [ebp-0x4],0x1
100250ed:	call   0x1000e7b1
100250f2:	cmp    eax,ebx
100250f4:	mov    DWORD PTR [ebp+0x18],eax
100250f7:	jne    0x1002511c
100250f9:	cmp    BYTE PTR [edi+0x9],bl
100250fc:	je     0x1002511c
100250fe:	mov    esi,DWORD PTR [ebp+0x8]
10025101:	call   0x10025a60
10025106:	or     DWORD PTR [ebp-0x4],0xffffffff
1002510a:	mov    eax,DWORD PTR [edi]
1002510c:	push   0x1
1002510e:	mov    ecx,edi
10025110:	call   DWORD PTR [eax]
10025112:	xor    eax,eax
10025114:	call   0x10059ecd
10025119:	ret    0x14
1002511c:	mov    DWORD PTR [ebp-0x4],ebx
1002511f:	call   0x1000e194
10025124:	or     DWORD PTR [ebp-0x4],0xffffffff
10025128:	cmp    edi,ebx
1002512a:	mov    DWORD PTR [esi+0x14],ebx
1002512d:	je     0x10025137
1002512f:	mov    eax,DWORD PTR [edi]
10025131:	push   0x1
10025133:	mov    ecx,edi
10025135:	call   DWORD PTR [eax]
10025137:	mov    eax,DWORD PTR [ebp+0x18]
1002513a:	jmp    0x10025114
1002513c:	push   0x4
1002513e:	call   0x10038b80
10025143:	mov    esi,DWORD PTR [ebp+0x10]
10025146:	pop    ecx
10025147:	call   0x1000e194
1002514c:	xor    ebx,ebx
1002514e:	push   ebx
1002514f:	push   ebx
10025150:	mov    DWORD PTR [esi+0x14],ebx
10025153:	call   0x10047942
10025158:	int3   
10025159:	push   ebp
1002515a:	mov    ebp,esp
1002515c:	and    esp,0xfffffff8
1002515f:	push   0xffffffff
10025161:	push   0x100658c5
10025166:	mov    eax,fs:0x0
1002516c:	push   eax
1002516d:	sub    esp,0x40
10025170:	push   ebx
10025171:	push   esi
10025172:	push   edi
10025173:	mov    eax,ds:0x100801ac
10025178:	xor    eax,esp
1002517a:	push   eax
1002517b:	lea    eax,[esp+0x50]
1002517f:	mov    fs:0x0,eax
10025185:	mov    esi,ecx
10025187:	mov    eax,DWORD PTR [esi+0x30]
1002518a:	xor    ebx,ebx
1002518c:	mov    DWORD PTR [esp+0x30],ebx
10025190:	mov    DWORD PTR [esp+0x34],ebx
10025194:	mov    DWORD PTR [esp+0x38],ebx
10025198:	mov    DWORD PTR [esp+0x3c],ebx
1002519c:	mov    BYTE PTR [esp+0x40],bl
100251a0:	mov    DWORD PTR [esp+0x44],ebx
100251a4:	mov    DWORD PTR [esp+0x48],eax
100251a8:	lea    eax,[esp+0x30]
100251ac:	mov    DWORD PTR [esp+0x58],ebx
100251b0:	mov    DWORD PTR [esp+0x28],eax
100251b4:	push   0x40
100251b6:	call   0x10043196
100251bb:	pop    ecx
100251bc:	mov    DWORD PTR [esp+0x1c],eax
100251c0:	cmp    eax,ebx
100251c2:	mov    BYTE PTR [esp+0x58],0x1
100251c7:	je     0x100251d7
100251c9:	push   eax
100251ca:	call   0x100089ba
100251cf:	mov    edi,eax
100251d1:	mov    DWORD PTR [esp+0x14],edi
100251d5:	jmp    0x100251dd
100251d7:	mov    DWORD PTR [esp+0x14],ebx
100251db:	mov    edi,ebx
100251dd:	mov    DWORD PTR [esp+0x1c],edi
100251e1:	push   edi
100251e2:	lea    ecx,[esp+0x2c]
100251e6:	mov    BYTE PTR [esp+0x5c],0x2
100251eb:	call   0x1000e531
100251f0:	cmp    eax,0x1
100251f3:	mov    DWORD PTR [esp+0x18],eax
100251f7:	je     0x100252fd
100251fd:	lea    eax,[esp+0x24]
10025201:	push   eax
10025202:	lea    ebx,[esp+0x34]
10025206:	call   0x1000e30b
1002520b:	mov    BYTE PTR [esp+0x58],0x3
10025210:	mov    ecx,DWORD PTR [eax]
10025212:	xor    ebx,ebx
10025214:	mov    DWORD PTR [eax],ebx
10025216:	mov    eax,ecx
10025218:	mov    ecx,edi
1002521a:	call   0x10008a04
1002521f:	mov    BYTE PTR [esp+0x58],0x2
10025224:	cmp    DWORD PTR [esp+0x24],ebx
10025228:	je     0x10025237
1002522a:	mov    edi,DWORD PTR [esp+0x24]
1002522e:	call   0x1000a38e
10025233:	mov    edi,DWORD PTR [esp+0x14]
10025237:	call   0x1002f6a0
1002523c:	mov    DWORD PTR [edi+0x10],eax
1002523f:	mov    DWORD PTR [edi+0x14],edx
10025242:	call   0x10025a77
10025247:	test   al,al
10025249:	je     0x10025253
1002524b:	mov    DWORD PTR [esp+0x18],0x1
10025253:	cmp    DWORD PTR [esp+0x18],ebx
10025257:	mov    BYTE PTR [esp+0x20],bl
1002525b:	mov    ebx,DWORD PTR [esp+0x14]
1002525f:	jne    0x10025274
10025261:	push   ebx
10025262:	lea    ecx,[esp+0x24]
10025266:	mov    edx,esi
10025268:	call   0x10024e64
1002526d:	cmp    BYTE PTR [esp+0x20],0x0
10025272:	jne    0x100252c8
10025274:	mov    ecx,ebx
10025276:	call   0x10008b05
1002527b:	lea    edi,[esi+0x38]
1002527e:	push   edi
1002527f:	mov    DWORD PTR [esp+0x18],eax
10025283:	mov    DWORD PTR [esp+0x30],edi
10025287:	call   DWORD PTR ds:0x100670f8
1002528d:	lea    eax,[esp+0x14]
10025291:	push   eax
10025292:	lea    eax,[esi+0x4]
10025295:	mov    BYTE PTR [esp+0x5c],0x4
1002529a:	call   0x10025f01
1002529f:	push   edi
100252a0:	mov    BYTE PTR [esp+0x5c],0x2
100252a5:	call   DWORD PTR ds:0x100670fc
100252ab:	mov    eax,DWORD PTR [ebx+0x34]
100252ae:	mov    ecx,DWORD PTR [eax+0x18]
100252b1:	mov    eax,DWORD PTR [eax+0x14]
100252b4:	push   ecx
100252b5:	push   eax
100252b6:	mov    edi,esi
100252b8:	call   0x10024ed7
100252bd:	test   al,al
100252bf:	je     0x10025312
100252c1:	cmp    DWORD PTR [esp+0x18],0x0
100252c6:	jne    0x100252e1
100252c8:	push   DWORD PTR [esp+0x20]
100252cc:	lea    eax,[esp+0x34]
100252d0:	push   ebx
100252d1:	push   eax
100252d2:	lea    eax,[esp+0x34]
100252d6:	push   eax
100252d7:	push   esi
100252d8:	call   0x1002509a
100252dd:	mov    DWORD PTR [esp+0x18],eax
100252e1:	cmp    DWORD PTR [esp+0x18],0x1
100252e6:	je     0x10025328
100252e8:	lea    ecx,[esp+0x1c]
100252ec:	mov    BYTE PTR [esp+0x58],0x0
100252f1:	call   0x1000a176
100252f6:	xor    ebx,ebx
100252f8:	jmp    0x100251b4
100252fd:	call   0x10025a60
10025302:	push   esi
10025303:	lea    ecx,[esp+0x34]
10025307:	call   0x10024fb2
1002530c:	mov    BYTE PTR [esp+0x58],bl
10025310:	jmp    0x10025344
10025312:	mov    ebx,DWORD PTR [ebx+0x34]
10025315:	push   DWORD PTR [ebx+0x18]
10025318:	push   0x0
1002531a:	call   0x10002068
1002531f:	pop    ecx
10025320:	pop    ecx
10025321:	call   0x10025a60
10025326:	jmp    0x1002533f
10025328:	push   0x10
1002532a:	call   0x10038b80
1002532f:	pop    ecx
10025330:	call   0x10025a60
10025335:	push   esi
10025336:	lea    ecx,[esp+0x34]
1002533a:	call   0x10024fb2
1002533f:	mov    BYTE PTR [esp+0x58],0x0
10025344:	lea    ecx,[esp+0x1c]
10025348:	call   0x1000a176
1002534d:	or     DWORD PTR [esp+0x58],0xffffffff
10025352:	lea    eax,[esp+0x30]
10025356:	call   0x1000e163
1002535b:	mov    ecx,DWORD PTR [esp+0x50]
1002535f:	mov    DWORD PTR fs:0x0,ecx
10025366:	pop    ecx
10025367:	pop    edi
10025368:	pop    esi
10025369:	pop    ebx
1002536a:	mov    esp,ebp
1002536c:	pop    ebp
1002536d:	ret    
1002536e:	push   0x8
10025370:	mov    eax,0x100658ed
10025375:	call   0x10059e28
1002537a:	lea    eax,[ebp+0xb]
1002537d:	push   eax
1002537e:	call   0x10036f20
10025383:	and    DWORD PTR [ebp-0x4],0x0
10025387:	mov    eax,DWORD PTR [ebp+0x8]
1002538a:	mov    DWORD PTR [ebp-0x14],eax
1002538d:	mov    BYTE PTR [ebp-0x4],0x2
10025391:	mov    ecx,DWORD PTR [eax+0x1c]
10025394:	call   0x10025159
10025399:	lea    ecx,[ebp-0x14]
1002539c:	call   0x10016239
100253a1:	call   0x10036f40
100253a6:	xor    eax,eax
100253a8:	call   0x10059ecd
100253ad:	ret    0x4
100253b0:	mov    eax,DWORD PTR [ebp-0x14]
100253b3:	push   DWORD PTR [eax]
100253b5:	call   0x10002068
100253ba:	pop    ecx
100253bb:	mov    eax,0x10025399
100253c0:	ret    
100253c1:	push   0x4
100253c3:	mov    eax,0x10063f6c
100253c8:	call   0x10059df5
100253cd:	mov    ebx,ecx
100253cf:	mov    esi,edx
100253d1:	mov    eax,DWORD PTR [esi+0x50]
100253d4:	xor    edi,edi
100253d6:	push   edi
100253d7:	push   DWORD PTR [eax+0x30]
100253da:	call   DWORD PTR ds:0x1006707c
100253e0:	test   eax,eax
100253e2:	je     0x100253f9
100253e4:	mov    eax,esi
100253e6:	call   0x10025a32
100253eb:	test   eax,eax
100253ed:	je     0x100253f9
100253ef:	push   0xa
100253f1:	call   DWORD PTR ds:0x10067144
100253f7:	jmp    0x100253d1
100253f9:	mov    eax,ebx
100253fb:	call   0x1000e4f0
10025400:	test   al,al
10025402:	je     0x1002542c
10025404:	lea    eax,[ebp-0x10]
10025407:	push   eax
10025408:	call   0x1000e30b
1002540d:	mov    DWORD PTR [ebp-0x4],edi
10025410:	mov    ecx,DWORD PTR [eax]
10025412:	mov    DWORD PTR [eax],edi
10025414:	call   0x10025b02
10025419:	or     DWORD PTR [ebp-0x4],0xffffffff
1002541d:	cmp    DWORD PTR [ebp-0x10],edi
10025420:	je     0x100253d1
10025422:	mov    edi,DWORD PTR [ebp-0x10]
10025425:	call   0x1000a38e
1002542a:	jmp    0x100253d1
1002542c:	call   0x10025e98
10025431:	call   0x10059ecd
10025436:	ret    
10025437:	mov    eax,DWORD PTR [ecx+0x4]
1002543a:	mov    ecx,DWORD PTR [esp+0x4]
1002543e:	push   esi
1002543f:	mov    esi,DWORD PTR [eax+0x1c]
10025442:	call   0x10025b02
10025447:	pop    esi
10025448:	ret    0x4
1002544b:	push   0xc
1002544d:	mov    eax,0x10064e91
10025452:	call   0x10059e28
10025457:	mov    ebx,ecx
10025459:	xor    edi,edi
1002545b:	mov    DWORD PTR [ebp-0x4],edi
1002545e:	mov    ecx,DWORD PTR [ebp+0x14]
10025461:	lea    eax,[ecx+0x34]
10025464:	mov    edx,DWORD PTR [eax]
10025466:	mov    edx,DWORD PTR [edx+0x18]
10025469:	mov    DWORD PTR [ecx+0x38],edx
1002546c:	mov    ecx,DWORD PTR [eax]
1002546e:	mov    esi,ebx
10025470:	mov    DWORD PTR [eax],edi
10025472:	call   0x10025b02
10025477:	push   0x8
10025479:	call   0x10043196
1002547e:	cmp    eax,edi
10025480:	pop    ecx
10025481:	je     0x10025491
10025483:	mov    ecx,DWORD PTR [ebx+0x50]
10025486:	mov    DWORD PTR [eax],0x10072a60
1002548c:	mov    DWORD PTR [eax+0x4],ecx
1002548f:	mov    edi,eax
10025491:	mov    DWORD PTR [ebp-0x14],edi
10025494:	mov    DWORD PTR [ebp-0x18],edi
10025497:	mov    esi,DWORD PTR [ebp+0x10]
1002549a:	mov    BYTE PTR [ebp-0x4],0x1
1002549e:	call   0x1000e194
100254a3:	mov    ecx,DWORD PTR [ebp+0x8]
100254a6:	mov    BYTE PTR [ebp-0x4],0x2
100254aa:	push   DWORD PTR [ebp+0xc]
100254ad:	mov    edx,DWORD PTR [ebp+0x14]
100254b0:	mov    DWORD PTR [esi+0x14],edi
100254b3:	call   0x1000ea5f
100254b8:	test   eax,eax
100254ba:	mov    DWORD PTR [ebp+0x8],eax
100254bd:	jne    0x10025513
100254bf:	call   0x1002f6a0
100254c4:	mov    ecx,DWORD PTR [ebp+0x14]
100254c7:	mov    DWORD PTR [ecx+0x18],eax
100254ca:	mov    eax,DWORD PTR [ebp+0x14]
100254cd:	mov    DWORD PTR [eax+0x1c],edx
100254d0:	mov    ecx,DWORD PTR [ebp+0x14]
100254d3:	push   ebx
100254d4:	mov    ebx,DWORD PTR [ebp+0xc]
100254d7:	call   0x10025b5e
100254dc:	mov    ecx,ebx
100254de:	cmp    BYTE PTR [ecx+0x2c],0x0
100254e2:	jne    0x10025513
100254e4:	call   0x10008b05
100254e9:	mov    DWORD PTR [ebp+0xc],eax
100254ec:	lea    eax,[ebp+0x14]
100254ef:	push   eax
100254f0:	lea    eax,[ebp+0xc]
100254f3:	push   eax
100254f4:	mov    edi,0x10082fe0
100254f9:	mov    BYTE PTR [ebp-0x4],0x3
100254fd:	call   0x100266f6
10025502:	pop    ecx
10025503:	pop    ecx
10025504:	lea    ecx,[ebp+0xc]
10025507:	mov    BYTE PTR [ebp-0x4],0x2
1002550b:	call   0x1000a176
10025510:	mov    edi,DWORD PTR [ebp-0x14]
10025513:	xor    ebx,ebx
10025515:	inc    ebx
10025516:	mov    DWORD PTR [ebp-0x4],ebx
10025519:	call   0x1000e194
1002551e:	and    DWORD PTR [esi+0x14],0x0
10025522:	test   edi,edi
10025524:	mov    BYTE PTR [ebp-0x4],0x0
10025528:	je     0x10025531
1002552a:	mov    eax,DWORD PTR [edi]
1002552c:	push   ebx
1002552d:	mov    ecx,edi
1002552f:	call   DWORD PTR [eax]
10025531:	or     DWORD PTR [ebp-0x4],0xffffffff
10025535:	lea    eax,[ebp+0x14]
10025538:	call   0x1000a2dc
1002553d:	mov    eax,DWORD PTR [ebp+0x8]
10025540:	call   0x10059ecd
10025545:	ret    0x10
10025548:	push   0x4
1002554a:	call   0x10038b80
1002554f:	mov    esi,DWORD PTR [ebp+0x10]
10025552:	pop    ecx
10025553:	call   0x1000e194
10025558:	xor    eax,eax
1002555a:	push   eax
1002555b:	push   eax
1002555c:	mov    DWORD PTR [esi+0x14],eax
1002555f:	call   0x10047942
10025564:	int3   
10025565:	push   0x10
10025567:	mov    eax,0x10064e5e
1002556c:	call   0x10059df5
10025571:	mov    ebx,edx
10025573:	mov    esi,DWORD PTR [ebp+0x10]
10025576:	push   DWORD PTR [ebp+0xc]
10025579:	mov    edx,esi
1002557b:	call   0x1000ea5f
10025580:	and    DWORD PTR [ebp-0x10],0x0
10025584:	mov    DWORD PTR [ebp-0x14],eax
10025587:	and    DWORD PTR [ebp-0x4],0x0
1002558b:	test   eax,eax
1002558d:	lea    eax,[ebp-0x18]
10025590:	push   eax
10025591:	jne    0x100255e7
10025593:	call   0x1000e30b
10025598:	mov    BYTE PTR [ebp-0x4],0x1
1002559c:	mov    ebx,DWORD PTR [eax]
1002559e:	and    DWORD PTR [eax],0x0
100255a1:	mov    ecx,esi
100255a3:	call   0x1000943e
100255a8:	mov    BYTE PTR [ebp-0x4],0x0
100255ac:	mov    edi,DWORD PTR [ebp-0x18]
100255af:	test   edi,edi
100255b1:	je     0x100255b8
100255b3:	call   0x1000a38e
100255b8:	call   0x1002f6a0
100255bd:	mov    DWORD PTR [esi+0x18],eax
100255c0:	mov    eax,DWORD PTR [ebp+0xc]
100255c3:	mov    DWORD PTR [esi+0x1c],edx
100255c6:	cmp    BYTE PTR [eax+0x2c],0x0
100255ca:	jne    0x10025629
100255cc:	lea    ecx,[ebp-0x10]
100255cf:	push   ecx
100255d0:	mov    ecx,DWORD PTR [ebp+0x8]
100255d3:	push   esi
100255d4:	push   DWORD PTR [ecx+0x50]
100255d7:	push   eax
100255d8:	push   0x10083004
100255dd:	call   0x100265ab
100255e2:	add    esp,0x14
100255e5:	jmp    0x10025622
100255e7:	call   0x1000e30b
100255ec:	mov    ebx,DWORD PTR [eax]
100255ee:	and    DWORD PTR [eax],0x0
100255f1:	mov    DWORD PTR [ebp-0x1c],ebx
100255f4:	mov    BYTE PTR [ebp-0x4],0x3
100255f8:	mov    edi,DWORD PTR [ebx+0x18]
100255fb:	test   edi,edi
100255fd:	je     0x1002560b
100255ff:	mov    ecx,DWORD PTR [ebx+0x14]
10025602:	mov    eax,DWORD PTR [esi+0x34]
10025605:	push   ecx
10025606:	call   0x100079fa
1002560b:	mov    edi,ebx
1002560d:	call   0x1000a38e
10025612:	mov    BYTE PTR [ebp-0x4],0x0
10025616:	mov    edi,DWORD PTR [ebp-0x18]
10025619:	test   edi,edi
1002561b:	je     0x10025629
1002561d:	call   0x1000a38e
10025622:	mov    ecx,DWORD PTR [ebp-0x10]
10025625:	test   ecx,ecx
10025627:	jne    0x1002563b
10025629:	mov    eax,DWORD PTR [esi+0x34]
1002562c:	mov    eax,DWORD PTR [eax+0x18]
1002562f:	mov    DWORD PTR [esi+0x38],eax
10025632:	mov    ecx,DWORD PTR [esi+0x34]
10025635:	and    DWORD PTR [esi+0x34],0x0
10025639:	jmp    0x1002563f
1002563b:	and    DWORD PTR [ebp-0x10],0x0
1002563f:	mov    esi,DWORD PTR [ebp+0x8]
10025642:	call   0x10025b02
10025647:	cmp    DWORD PTR [ebp-0x14],0x0
1002564b:	jne    0x10025659
1002564d:	mov    ecx,DWORD PTR [ebp+0x10]
10025650:	mov    ebx,DWORD PTR [ebp+0xc]
10025653:	push   esi
10025654:	call   0x10025b5e
10025659:	mov    eax,DWORD PTR [ebp-0x14]
1002565c:	call   0x10059ecd
10025661:	ret    0xc
10025664:	push   ebp
10025665:	mov    ebp,esp
10025667:	and    esp,0xfffffff8
1002566a:	push   0xffffffff
1002566c:	push   0x100655e9
10025671:	mov    eax,fs:0x0
10025677:	push   eax
10025678:	sub    esp,0x48
1002567b:	push   ebx
1002567c:	push   esi
1002567d:	push   edi
1002567e:	mov    eax,ds:0x100801ac
10025683:	xor    eax,esp
10025685:	push   eax
10025686:	lea    eax,[esp+0x58]
1002568a:	mov    fs:0x0,eax
10025690:	mov    edi,DWORD PTR [ebp+0x8]
10025693:	mov    eax,DWORD PTR [edi+0x50]
10025696:	mov    DWORD PTR [esp+0x30],0x10072a50
1002569e:	mov    DWORD PTR [esp+0x34],eax
100256a2:	xor    ebx,ebx
100256a4:	mov    DWORD PTR [esp+0x60],ebx
100256a8:	lea    ecx,[esp+0x30]
100256ac:	mov    DWORD PTR [esp+0x38],ebx
100256b0:	mov    DWORD PTR [esp+0x3c],ebx
100256b4:	mov    DWORD PTR [esp+0x40],ebx
100256b8:	mov    DWORD PTR [esp+0x44],ebx
100256bc:	mov    BYTE PTR [esp+0x48],bl
100256c0:	mov    DWORD PTR [esp+0x4c],ebx
100256c4:	mov    DWORD PTR [esp+0x50],ecx
100256c8:	lea    ecx,[esp+0x38]
100256cc:	mov    BYTE PTR [esp+0x60],0x1
100256d1:	mov    DWORD PTR [esp+0x20],ecx
100256d5:	jmp    0x100258b6
100256da:	mov    eax,edi
100256dc:	call   0x10025a32
100256e1:	test   eax,eax
100256e3:	je     0x100256f2
100256e5:	push   0xa
100256e7:	call   DWORD PTR ds:0x10067144
100256ed:	jmp    0x100258b3
100256f2:	lea    esi,[esp+0x38]
100256f6:	call   0x1000e2e6
100256fb:	test   al,al
100256fd:	jne    0x100258ca
10025703:	push   0x40
10025705:	call   0x10043196
1002570a:	pop    ecx
1002570b:	mov    DWORD PTR [esp+0x24],eax
1002570f:	cmp    eax,ebx
10025711:	mov    BYTE PTR [esp+0x60],0x2
10025716:	je     0x10025724
10025718:	push   eax
10025719:	call   0x10009389
1002571e:	mov    DWORD PTR [esp+0x18],eax
10025722:	jmp    0x10025728
10025724:	mov    DWORD PTR [esp+0x18],ebx
10025728:	mov    eax,DWORD PTR [esp+0x18]
1002572c:	mov    DWORD PTR [esp+0x24],eax
10025730:	push   eax
10025731:	lea    eax,[esp+0x24]
10025735:	push   eax
10025736:	mov    BYTE PTR [esp+0x68],0x3
1002573b:	call   0x1000e981
10025740:	lea    esi,[edi+0x38]
10025743:	push   esi
10025744:	mov    DWORD PTR [esp+0x18],eax
10025748:	call   DWORD PTR ds:0x100670f8
1002574e:	cmp    BYTE PTR [edi],bl
10025750:	jne    0x10025771
10025752:	cmp    DWORD PTR [edi+0x14],ebx
10025755:	je     0x10025771
10025757:	lea    esi,[edi+0x4]
1002575a:	call   0x10025f76
1002575f:	mov    esi,DWORD PTR [eax]
10025761:	lea    eax,[edi+0x38]
10025764:	push   eax
10025765:	call   DWORD PTR ds:0x100670fc
1002576b:	mov    DWORD PTR [esp+0x1c],esi
1002576f:	jmp    0x1002577c
10025771:	push   esi
10025772:	call   DWORD PTR ds:0x100670fc
10025778:	mov    DWORD PTR [esp+0x1c],ebx
1002577c:	cmp    DWORD PTR [esp+0x1c],ebx
10025780:	jne    0x1002578a
10025782:	mov    DWORD PTR [esp+0x14],0x1
1002578a:	mov    esi,edi
1002578c:	call   0x10025a77
10025791:	test   al,al
10025793:	je     0x1002579d
10025795:	mov    DWORD PTR [esp+0x14],0x1
1002579d:	cmp    DWORD PTR [esp+0x14],ebx
100257a1:	jne    0x10025859
100257a7:	call   0x1000409a
100257ac:	lea    eax,[esp+0x28]
100257b0:	push   eax
100257b1:	lea    ebx,[esp+0x3c]
100257b5:	call   0x1000e30b
100257ba:	mov    esi,DWORD PTR [esp+0x18]
100257be:	mov    BYTE PTR [esp+0x60],0x4
100257c3:	mov    ecx,DWORD PTR [eax]
100257c5:	and    DWORD PTR [eax],0x0
100257c8:	mov    eax,ecx
100257ca:	mov    ecx,esi
100257cc:	call   0x100093d0
100257d1:	mov    BYTE PTR [esp+0x60],0x3
100257d6:	cmp    DWORD PTR [esp+0x28],0x0
100257db:	je     0x100257e9
100257dd:	mov    edi,DWORD PTR [esp+0x28]
100257e1:	call   0x1000a38e
100257e6:	mov    edi,DWORD PTR [ebp+0x8]
100257e9:	call   0x1002f6a0
100257ee:	mov    ebx,DWORD PTR [esp+0x1c]
100257f2:	mov    DWORD PTR [esi+0x10],eax
100257f5:	mov    DWORD PTR [esi+0x14],edx
100257f8:	cmp    BYTE PTR [ebx+0x2c],0x0
100257fc:	mov    BYTE PTR [esp+0x13],0x1
10025801:	jne    0x10025821
10025803:	lea    eax,[esp+0x13]
10025807:	push   eax
10025808:	push   esi
10025809:	push   DWORD PTR [edi+0x50]
1002580c:	push   ebx
1002580d:	push   0x10082fec
10025812:	call   0x1002649a
10025817:	add    esp,0x14
1002581a:	cmp    BYTE PTR [esp+0x13],0x0
1002581f:	je     0x10025843
10025821:	push   ecx
10025822:	mov    eax,esp
10025824:	mov    DWORD PTR [esp+0x28],esp
10025828:	and    DWORD PTR [esp+0x28],0x0
1002582d:	mov    DWORD PTR [eax],esi
1002582f:	lea    eax,[esp+0x3c]
10025833:	push   eax
10025834:	push   ebx
10025835:	lea    eax,[esp+0x2c]
10025839:	push   eax
1002583a:	mov    ecx,edi
1002583c:	call   0x1002544b
10025841:	jmp    0x10025853
10025843:	push   esi
10025844:	push   ebx
10025845:	push   edi
10025846:	lea    edx,[esp+0x44]
1002584a:	lea    ecx,[esp+0x2c]
1002584e:	call   0x10025565
10025853:	mov    DWORD PTR [esp+0x14],eax
10025857:	jmp    0x10025895
10025859:	mov    esi,edi
1002585b:	call   0x10025a60
10025860:	lea    eax,[esp+0x2c]
10025864:	push   eax
10025865:	lea    ebx,[esp+0x3c]
10025869:	call   0x1000e30b
1002586e:	mov    BYTE PTR [esp+0x60],0x5
10025873:	mov    ecx,DWORD PTR [eax]
10025875:	and    DWORD PTR [eax],0x0
10025878:	call   0x10025b02
1002587d:	mov    BYTE PTR [esp+0x60],0x3
10025882:	cmp    DWORD PTR [esp+0x2c],0x0
10025887:	je     0x10025895
10025889:	mov    edi,DWORD PTR [esp+0x2c]
1002588d:	call   0x1000a38e
10025892:	mov    edi,DWORD PTR [ebp+0x8]
10025895:	mov    ecx,edi
10025897:	call   0x10025a91
1002589c:	cmp    DWORD PTR [esp+0x14],0x1
100258a1:	je     0x100258d3
100258a3:	lea    eax,[esp+0x24]
100258a7:	mov    BYTE PTR [esp+0x60],0x1
100258ac:	call   0x1000a2dc
100258b1:	xor    ebx,ebx
100258b3:	mov    eax,DWORD PTR [edi+0x50]
100258b6:	push   ebx
100258b7:	push   DWORD PTR [eax+0x30]
100258ba:	call   DWORD PTR ds:0x1006707c
100258c0:	test   eax,eax
100258c2:	jne    0x100256da
100258c8:	jmp    0x100258f6
100258ca:	mov    esi,edi
100258cc:	call   0x10025e98
100258d1:	jmp    0x100258f6
100258d3:	push   0x10
100258d5:	call   0x10038b80
100258da:	pop    ecx
100258db:	lea    ecx,[esp+0x38]
100258df:	mov    edx,edi
100258e1:	call   0x100253c1
100258e6:	lea    eax,[esp+0x24]
100258ea:	mov    BYTE PTR [esp+0x60],0x1
100258ef:	call   0x1000a2dc
100258f4:	xor    ebx,ebx
100258f6:	lea    eax,[esp+0x38]
100258fa:	mov    BYTE PTR [esp+0x60],bl
100258fe:	call   0x1000e163
10025903:	mov    ecx,DWORD PTR [esp+0x58]
10025907:	mov    DWORD PTR fs:0x0,ecx
1002590e:	pop    ecx
1002590f:	pop    edi
10025910:	pop    esi
10025911:	pop    ebx
10025912:	mov    esp,ebp
10025914:	pop    ebp
10025915:	ret    0x4
10025918:	push   0x8
1002591a:	mov    eax,0x10065880
1002591f:	call   0x10059e28
10025924:	lea    eax,[ebp+0xb]
10025927:	push   eax
10025928:	call   0x10036f20
1002592d:	and    DWORD PTR [ebp-0x4],0x0
10025931:	mov    eax,DWORD PTR [ebp+0x8]
10025934:	mov    DWORD PTR [ebp-0x14],eax
10025937:	mov    BYTE PTR [ebp-0x4],0x2
1002593b:	push   DWORD PTR [eax+0x1c]
1002593e:	call   0x10025664
10025943:	mov    eax,DWORD PTR [ebp-0x14]
10025946:	push   DWORD PTR [eax+0x30]
10025949:	call   DWORD PTR ds:0x10067148
1002594f:	lea    ecx,[ebp-0x14]
10025952:	call   0x10016239
10025957:	call   0x10036f40
1002595c:	xor    eax,eax
1002595e:	call   0x10059ecd
10025963:	ret    0x4
10025966:	push   0x4
10025968:	call   0x10038b80
1002596d:	pop    ecx
1002596e:	mov    eax,0x10025943
10025973:	ret    
10025974:	push   ebp
10025975:	mov    ebp,esp
10025977:	push   ecx
10025978:	push   ebx
10025979:	push   esi
1002597a:	mov    esi,eax
1002597c:	mov    eax,DWORD PTR [ebp+0x8]
1002597f:	xor    ebx,ebx
10025981:	push   edi
10025982:	mov    DWORD PTR [esi],ebx
10025984:	call   0x10025a32
10025989:	mov    edi,eax
1002598b:	cmp    edi,ebx
1002598d:	je     0x10025a2a
10025993:	mov    eax,DWORD PTR [edi+0x18]
10025996:	sub    eax,DWORD PTR [edi+0x20]
10025999:	cmp    eax,DWORD PTR [ebp+0x10]
1002599c:	jbe    0x100259a1
1002599e:	mov    eax,DWORD PTR [ebp+0x10]
100259a1:	push   eax
100259a2:	mov    DWORD PTR [esi],eax
100259a4:	mov    eax,DWORD PTR [edi+0x14]
100259a7:	add    eax,DWORD PTR [edi+0x20]
100259aa:	push   eax
100259ab:	push   DWORD PTR [ebp+0xc]
100259ae:	call   0x10045340
100259b3:	add    esp,0xc
100259b6:	cmp    BYTE PTR [ebp+0x14],bl
100259b9:	jne    0x10025a2a
100259bb:	mov    eax,DWORD PTR [esi]
100259bd:	add    DWORD PTR [edi+0x20],eax
100259c0:	mov    eax,DWORD PTR [edi+0x20]
100259c3:	cmp    eax,DWORD PTR [edi+0x18]
100259c6:	jb     0x10025a2a
100259c8:	cmp    DWORD PTR [edi],ebx
100259ca:	je     0x10025a22
100259cc:	call   0x1002f6a0
100259d1:	mov    esi,DWORD PTR [edi]
100259d3:	sub    eax,DWORD PTR [esi+0x58]
100259d6:	push   ebx
100259d7:	sbb    edx,DWORD PTR [esi+0x5c]
100259da:	push   0x2710
100259df:	push   edx
100259e0:	push   eax
100259e1:	call   0x1005f840
100259e6:	push   DWORD PTR [esi+0x64]
100259e9:	mov    ebx,eax
100259eb:	push   DWORD PTR [esi+0x60]
100259ee:	push   ebx
100259ef:	call   DWORD PTR ds:0x1006713c
100259f5:	push   eax
100259f6:	lea    eax,[esi+0x38]
100259f9:	push   eax
100259fa:	lea    eax,[esi+0x1c]
100259fd:	push   eax
100259fe:	push   esi
100259ff:	push   0x10082fa0
10025a04:	call   0x1001a649
10025a09:	mov    edi,DWORD PTR [edi]
10025a0b:	cmp    DWORD PTR [edi+0x18],0x10
10025a0f:	jb     0x10025a16
10025a11:	mov    edi,DWORD PTR [edi+0x4]
10025a14:	jmp    0x10025a19
10025a16:	add    edi,0x4
10025a19:	push   edi
10025a1a:	push   ebx
10025a1b:	call   0x10002068
10025a20:	pop    ecx
10025a21:	pop    ecx
10025a22:	push   DWORD PTR [ebp+0x8]
10025a25:	call   0x10025e16
10025a2a:	pop    edi
10025a2b:	pop    esi
10025a2c:	pop    ebx
10025a2d:	pop    ecx
10025a2e:	pop    ebp
10025a2f:	ret    0x10
10025a32:	push   esi
10025a33:	push   edi
10025a34:	mov    esi,eax
10025a36:	lea    edi,[esi+0x38]
10025a39:	push   edi
10025a3a:	call   DWORD PTR ds:0x100670f8
10025a40:	cmp    DWORD PTR [esi+0x28],0x0
10025a44:	jne    0x10025a54
10025a46:	xor    esi,esi
10025a48:	push   edi
10025a49:	call   DWORD PTR ds:0x100670fc
10025a4f:	pop    edi
10025a50:	mov    eax,esi
10025a52:	pop    esi
10025a53:	ret    
10025a54:	add    esi,0x18
10025a57:	call   0x10025f76
10025a5c:	mov    esi,DWORD PTR [eax]
10025a5e:	jmp    0x10025a48
10025a60:	push   edi
10025a61:	lea    edi,[esi+0x38]
10025a64:	push   edi
10025a65:	call   DWORD PTR ds:0x100670f8
10025a6b:	push   edi
10025a6c:	mov    BYTE PTR [esi],0x1
10025a6f:	call   DWORD PTR ds:0x100670fc
10025a75:	pop    edi
10025a76:	ret    
10025a77:	push   ebx
10025a78:	push   edi
10025a79:	lea    edi,[esi+0x38]
10025a7c:	push   edi
10025a7d:	call   DWORD PTR ds:0x100670f8
10025a83:	mov    bl,BYTE PTR [esi]
10025a85:	push   edi
10025a86:	call   DWORD PTR ds:0x100670fc
10025a8c:	pop    edi
10025a8d:	mov    al,bl
10025a8f:	pop    ebx
10025a90:	ret    
10025a91:	push   0x4
10025a93:	mov    eax,0x10063f49
10025a98:	call   0x10059df5
10025a9d:	mov    esi,ecx
10025a9f:	lea    edi,[esi+0x38]
10025aa2:	push   edi
10025aa3:	mov    DWORD PTR [ebp-0x10],edi
10025aa6:	call   DWORD PTR ds:0x100670f8
10025aac:	xor    ebx,ebx
10025aae:	mov    DWORD PTR [ebp-0x4],ebx
10025ab1:	cmp    DWORD PTR [esi+0x14],ebx
10025ab4:	jne    0x10025ac5
10025ab6:	push   edi
10025ab7:	call   DWORD PTR ds:0x100670fc
10025abd:	mov    al,bl
10025abf:	call   0x10059ecd
10025ac4:	ret    
10025ac5:	add    esi,0x4
10025ac8:	call   0x10025f76
10025acd:	mov    eax,DWORD PTR [eax]
10025acf:	cmp    eax,ebx
10025ad1:	je     0x10025ad9
10025ad3:	push   eax
10025ad4:	call   0x1000a31f
10025ad9:	mov    eax,DWORD PTR [esi+0x10]
10025adc:	cmp    eax,ebx
10025ade:	je     0x10025afe
10025ae0:	inc    DWORD PTR [esi+0xc]
10025ae3:	mov    edx,DWORD PTR [esi+0x8]
10025ae6:	mov    ecx,DWORD PTR [esi+0xc]
10025ae9:	shl    edx,0x2
10025aec:	cmp    edx,ecx
10025aee:	ja     0x10025af3
10025af0:	mov    DWORD PTR [esi+0xc],ebx
10025af3:	dec    eax
10025af4:	cmp    eax,ebx
10025af6:	mov    DWORD PTR [esi+0x10],eax
10025af9:	jne    0x10025afe
10025afb:	mov    DWORD PTR [esi+0xc],ebx
10025afe:	mov    bl,0x1
10025b00:	jmp    0x10025ab6
10025b02:	push   0xc
10025b04:	mov    eax,0x100605a8
10025b09:	call   0x10059df5
10025b0e:	mov    edi,ecx
10025b10:	and    DWORD PTR [ebp-0x4],0x0
10025b14:	cmp    DWORD PTR [edi+0x18],0x0
10025b18:	jne    0x10025b21
10025b1a:	call   0x1000a38e
10025b1f:	jmp    0x10025b58
10025b21:	lea    ebx,[esi+0x38]
10025b24:	push   ebx
10025b25:	mov    DWORD PTR [ebp-0x14],ebx
10025b28:	call   DWORD PTR ds:0x100670f8
10025b2e:	lea    eax,[ebp-0x10]
10025b31:	mov    BYTE PTR [ebp-0x4],0x1
10025b35:	and    DWORD PTR [ebp-0x18],0x0
10025b39:	push   eax
10025b3a:	lea    eax,[esi+0x18]
10025b3d:	mov    DWORD PTR [ebp-0x10],edi
10025b40:	call   0x100260ad
10025b45:	mov    eax,DWORD PTR [esi+0x50]
10025b48:	push   DWORD PTR [eax+0x28]
10025b4b:	call   DWORD PTR ds:0x10067148
10025b51:	push   ebx
10025b52:	call   DWORD PTR ds:0x100670fc
10025b58:	call   0x10059ecd
10025b5d:	ret    
10025b5e:	push   0xa8
10025b63:	mov    eax,0x10062e97
10025b68:	call   0x10059df5
10025b6d:	mov    edi,ecx
10025b6f:	mov    eax,DWORD PTR [ebp+0x8]
10025b72:	add    eax,0x38
10025b75:	xor    esi,esi
10025b77:	mov    DWORD PTR [ebp-0x10],esi
10025b7a:	push   eax
10025b7b:	mov    BYTE PTR [ebp-0x11],0x0
10025b7f:	mov    DWORD PTR [ebp-0x20],eax
10025b82:	mov    DWORD PTR [ebp-0x24],eax
10025b85:	call   DWORD PTR ds:0x100670f8
10025b8b:	mov    eax,DWORD PTR [ebp+0x8]
10025b8e:	mov    DWORD PTR [ebp-0x4],esi
10025b91:	cmp    DWORD PTR [eax+0x28],esi
10025b94:	jne    0x10025b9f
10025b96:	mov    BYTE PTR [ebp-0x11],0x1
10025b9a:	jmp    0x10025cde
10025b9f:	push   0x68
10025ba1:	call   0x10043196
10025ba6:	pop    ecx
10025ba7:	mov    DWORD PTR [ebp-0x1c],eax
10025baa:	cmp    eax,esi
10025bac:	mov    BYTE PTR [ebp-0x4],0x1
10025bb0:	je     0x10025c5a
10025bb6:	push   0x100729dc
10025bbb:	push   0x7
10025bbd:	mov    ecx,0x1006e7c4
10025bc2:	call   0x100042b4
10025bc7:	pop    ecx
10025bc8:	pop    ecx
10025bc9:	push   eax
10025bca:	lea    ecx,[ebp-0x44]
10025bcd:	call   0x100011a7
10025bd2:	mov    BYTE PTR [ebp-0x4],0x2
10025bd6:	mov    eax,DWORD PTR [edi+0x4]
10025bd9:	lea    ecx,[ebp-0x7c]
10025bdc:	push   ecx
10025bdd:	mov    DWORD PTR [ebp-0x10],0x1
10025be4:	call   0x10007ca8
10025be9:	mov    DWORD PTR [ebp-0x18],eax
10025bec:	push   0x3
10025bee:	pop    eax
10025bef:	mov    DWORD PTR [ebp-0x4],eax
10025bf2:	mov    DWORD PTR [ebp-0x10],eax
10025bf5:	push   esi
10025bf6:	lea    eax,[ebp-0x44]
10025bf9:	push   eax
10025bfa:	lea    eax,[ebp-0x60]
10025bfd:	push   eax
10025bfe:	lea    eax,[ebx+0x18]
10025c01:	call   0x10008803
10025c06:	mov    esi,eax
10025c08:	mov    DWORD PTR [ebp-0x4],0x4
10025c0f:	push   ebx
10025c10:	lea    ecx,[ebp-0x98]
10025c16:	mov    DWORD PTR [ebp-0x10],0x7
10025c1d:	call   0x10009035
10025c22:	mov    edx,eax
10025c24:	mov    DWORD PTR [ebp-0x4],0x5
10025c2b:	mov    ecx,edi
10025c2d:	mov    DWORD PTR [ebp-0x10],0xf
10025c34:	call   0x1000948c
10025c39:	push   eax
10025c3a:	mov    ecx,ebx
10025c3c:	call   0x1000948c
10025c41:	push   eax
10025c42:	push   DWORD PTR [edi+0x14]
10025c45:	push   DWORD PTR [edi+0x10]
10025c48:	push   DWORD PTR [ebp-0x18]
10025c4b:	push   esi
10025c4c:	push   edx
10025c4d:	push   DWORD PTR [ebp-0x1c]
10025c50:	call   0x10024af2
10025c55:	mov    DWORD PTR [ebp-0x18],eax
10025c58:	jmp    0x10025c5d
10025c5a:	mov    DWORD PTR [ebp-0x18],esi
10025c5d:	mov    esi,DWORD PTR [ebp+0x8]
10025c60:	add    esi,0x18
10025c63:	call   0x10025f76
10025c68:	mov    eax,DWORD PTR [eax]
10025c6a:	mov    esi,DWORD PTR [eax]
10025c6c:	cmp    DWORD PTR [ebp-0x18],esi
10025c6f:	mov    DWORD PTR [ebp+0x8],eax
10025c72:	je     0x10025c80
10025c74:	test   esi,esi
10025c76:	je     0x10025c80
10025c78:	call   0x1000a2f2
10025c7d:	mov    eax,DWORD PTR [ebp+0x8]
10025c80:	test   BYTE PTR [ebp-0x10],0x8
10025c84:	mov    ecx,DWORD PTR [ebp-0x18]
10025c87:	mov    DWORD PTR [eax],ecx
10025c89:	je     0x10025c9e
10025c8b:	and    DWORD PTR [ebp-0x10],0xfffffff7
10025c8f:	push   0x0
10025c91:	push   0x1
10025c93:	lea    ecx,[ebp-0x98]
10025c99:	call   0x100012f0
10025c9e:	test   BYTE PTR [ebp-0x10],0x4
10025ca2:	je     0x10025cb4
10025ca4:	and    DWORD PTR [ebp-0x10],0xfffffffb
10025ca8:	push   0x0
10025caa:	push   0x1
10025cac:	lea    ecx,[ebp-0x60]
10025caf:	call   0x100012f0
10025cb4:	test   BYTE PTR [ebp-0x10],0x2
10025cb8:	je     0x10025cca
10025cba:	and    DWORD PTR [ebp-0x10],0xfffffffd
10025cbe:	push   0x0
10025cc0:	push   0x1
10025cc2:	lea    ecx,[ebp-0x7c]
10025cc5:	call   0x100012f0
10025cca:	test   BYTE PTR [ebp-0x10],0x1
10025cce:	je     0x10025cdc
10025cd0:	push   0x0
10025cd2:	push   0x1
10025cd4:	lea    ecx,[ebp-0x44]
10025cd7:	call   0x100012f0
10025cdc:	xor    esi,esi
10025cde:	push   DWORD PTR [ebp-0x20]
10025ce1:	or     DWORD PTR [ebp-0x4],0xffffffff
10025ce5:	call   DWORD PTR ds:0x100670fc
10025ceb:	cmp    BYTE PTR [ebp-0x11],0x0
10025cef:	je     0x10025e0e
10025cf5:	mov    eax,DWORD PTR [edi+0x10]
10025cf8:	mov    DWORD PTR [ebp-0x28],eax
10025cfb:	mov    eax,DWORD PTR [edi+0x14]
10025cfe:	mov    DWORD PTR [ebp-0x24],eax
10025d01:	call   0x1002f6a0
10025d06:	sub    eax,DWORD PTR [ebp-0x28]
10025d09:	push   esi
10025d0a:	sbb    edx,DWORD PTR [ebp-0x24]
10025d0d:	push   0x2710
10025d12:	push   edx
10025d13:	push   eax
10025d14:	call   0x1005f840
10025d19:	push   0x10072a0c
10025d1e:	push   0x7
10025d20:	mov    ecx,0x1006e7c4
10025d25:	mov    DWORD PTR [ebp+0x8],eax
10025d28:	call   0x100042b4
10025d2d:	pop    ecx
10025d2e:	pop    ecx
10025d2f:	push   eax
10025d30:	lea    ecx,[ebp-0x44]
10025d33:	call   0x100011a7
10025d38:	lea    ecx,[ebp-0x98]
10025d3e:	mov    DWORD PTR [ebp-0x4],0xa
10025d45:	mov    eax,DWORD PTR [edi+0x4]
10025d48:	push   ecx
10025d49:	call   0x10007ca8
10025d4e:	mov    DWORD PTR [ebp-0x20],eax
10025d51:	push   esi
10025d52:	lea    eax,[ebp-0x44]
10025d55:	push   eax
10025d56:	lea    eax,[ebp-0x60]
10025d59:	push   eax
10025d5a:	lea    eax,[ebx+0x18]
10025d5d:	mov    BYTE PTR [ebp-0x4],0xb
10025d61:	call   0x10008803
10025d66:	mov    DWORD PTR [ebp-0x1c],eax
10025d69:	push   ebx
10025d6a:	lea    ecx,[ebp-0x7c]
10025d6d:	mov    BYTE PTR [ebp-0x4],0xc
10025d71:	call   0x10009035
10025d76:	mov    DWORD PTR [ebp-0x18],eax
10025d79:	mov    ecx,edi
10025d7b:	mov    BYTE PTR [ebp-0x4],0xd
10025d7f:	call   0x1000948c
10025d84:	push   eax
10025d85:	mov    ecx,ebx
10025d87:	call   0x1000948c
10025d8c:	push   eax
10025d8d:	push   DWORD PTR [ebp+0x8]
10025d90:	call   DWORD PTR ds:0x1006713c
10025d96:	push   eax
10025d97:	push   DWORD PTR [ebp-0x20]
10025d9a:	push   DWORD PTR [ebp-0x1c]
10025d9d:	push   DWORD PTR [ebp-0x18]
10025da0:	push   0x10082fa0
10025da5:	call   0x1001a649
10025daa:	xor    edi,edi
10025dac:	push   esi
10025dad:	inc    edi
10025dae:	push   edi
10025daf:	lea    ecx,[ebp-0x7c]
10025db2:	call   0x100012f0
10025db7:	push   esi
10025db8:	push   edi
10025db9:	lea    ecx,[ebp-0x60]
10025dbc:	call   0x100012f0
10025dc1:	push   esi
10025dc2:	push   edi
10025dc3:	lea    ecx,[ebp-0x98]
10025dc9:	call   0x100012f0
10025dce:	or     DWORD PTR [ebp-0x4],0xffffffff
10025dd2:	push   esi
10025dd3:	push   edi
10025dd4:	lea    ecx,[ebp-0x44]
10025dd7:	call   0x100012f0
10025ddc:	push   ebx
10025ddd:	lea    ecx,[ebp-0xb4]
10025de3:	call   0x10009035
10025de8:	cmp    DWORD PTR [eax+0x18],0x10
10025dec:	jb     0x10025df3
10025dee:	mov    eax,DWORD PTR [eax+0x4]
10025df1:	jmp    0x10025df6
10025df3:	add    eax,0x4
10025df6:	push   eax
10025df7:	push   DWORD PTR [ebp+0x8]
10025dfa:	call   0x10002068
10025dff:	pop    ecx
10025e00:	pop    ecx
10025e01:	push   esi
10025e02:	push   edi
10025e03:	lea    ecx,[ebp-0xb4]
10025e09:	call   0x100012f0
10025e0e:	call   0x10059ecd
10025e13:	ret    0x4
10025e16:	push   ebx
10025e17:	push   ebp
10025e18:	mov    ebp,DWORD PTR [esp+0xc]
10025e1c:	lea    eax,[ebp+0x38]
10025e1f:	push   eax
10025e20:	mov    DWORD PTR [esp+0x10],eax
10025e24:	call   DWORD PTR ds:0x100670f8
10025e2a:	xor    ebx,ebx
10025e2c:	cmp    DWORD PTR [ebp+0x28],ebx
10025e2f:	jne    0x10025e42
10025e31:	push   DWORD PTR [esp+0xc]
10025e35:	call   DWORD PTR ds:0x100670fc
10025e3b:	pop    ebp
10025e3c:	mov    al,bl
10025e3e:	pop    ebx
10025e3f:	ret    0x4
10025e42:	push   esi
10025e43:	push   edi
10025e44:	lea    esi,[ebp+0x18]
10025e47:	call   0x10025f76
10025e4c:	mov    edi,DWORD PTR [eax]
10025e4e:	cmp    edi,ebx
10025e50:	je     0x10025e57
10025e52:	call   0x1000a38e
10025e57:	mov    eax,DWORD PTR [esi+0x10]
10025e5a:	cmp    eax,ebx
10025e5c:	je     0x10025e7c
10025e5e:	inc    DWORD PTR [esi+0xc]
10025e61:	mov    edx,DWORD PTR [esi+0x8]
10025e64:	mov    ecx,DWORD PTR [esi+0xc]
10025e67:	shl    edx,0x2
10025e6a:	cmp    edx,ecx
10025e6c:	ja     0x10025e71
10025e6e:	mov    DWORD PTR [esi+0xc],ebx
10025e71:	dec    eax
10025e72:	cmp    eax,ebx
10025e74:	mov    DWORD PTR [esi+0x10],eax
10025e77:	jne    0x10025e7c
10025e79:	mov    DWORD PTR [esi+0xc],ebx
10025e7c:	cmp    DWORD PTR [ebp+0x28],ebx
10025e7f:	pop    edi
10025e80:	pop    esi
10025e81:	jne    0x10025e94
10025e83:	cmp    BYTE PTR [ebp+0x1],bl
10025e86:	je     0x10025e94
10025e88:	mov    eax,DWORD PTR [ebp+0x50]
10025e8b:	push   DWORD PTR [eax+0x30]
10025e8e:	call   DWORD PTR ds:0x10067148
10025e94:	mov    bl,0x1
10025e96:	jmp    0x10025e31
10025e98:	mov    eax,esi
10025e9a:	mov    BYTE PTR [esi+0x1],0x1
10025e9e:	call   0x10025a32
10025ea3:	test   eax,eax
10025ea5:	jne    0x10025eb3
10025ea7:	mov    eax,DWORD PTR [esi+0x50]
10025eaa:	push   DWORD PTR [eax+0x30]
10025ead:	call   DWORD PTR ds:0x10067148
10025eb3:	ret    
10025eb4:	push   ebx
10025eb5:	xor    ebx,ebx
10025eb7:	jmp    0x10025ecb
10025eb9:	mov    eax,DWORD PTR [esi+0x10]
10025ebc:	cmp    eax,ebx
10025ebe:	je     0x10025ecb
10025ec0:	dec    eax
10025ec1:	cmp    eax,ebx
10025ec3:	mov    DWORD PTR [esi+0x10],eax
10025ec6:	jne    0x10025ecb
10025ec8:	mov    DWORD PTR [esi+0xc],ebx
10025ecb:	cmp    DWORD PTR [esi+0x10],ebx
10025ece:	jne    0x10025eb9
10025ed0:	push   edi
10025ed1:	mov    edi,DWORD PTR [esi+0x8]
10025ed4:	jmp    0x10025ee6
10025ed6:	dec    edi
10025ed7:	lea    eax,[eax+edi*4]
10025eda:	cmp    DWORD PTR [eax],ebx
10025edc:	je     0x10025ee6
10025ede:	push   DWORD PTR [eax]
10025ee0:	call   0x10042fe2
10025ee5:	pop    ecx
10025ee6:	cmp    edi,ebx
10025ee8:	mov    eax,DWORD PTR [esi+0x4]
10025eeb:	ja     0x10025ed6
10025eed:	cmp    eax,ebx
10025eef:	pop    edi
10025ef0:	je     0x10025ef9
10025ef2:	push   eax
10025ef3:	call   0x10042fe2
10025ef8:	pop    ecx
10025ef9:	mov    DWORD PTR [esi+0x8],ebx
10025efc:	mov    DWORD PTR [esi+0x4],ebx
10025eff:	pop    ebx
10025f00:	ret    
10025f01:	push   ecx
10025f02:	push   ebx
10025f03:	push   esi
10025f04:	mov    esi,eax
10025f06:	mov    eax,DWORD PTR [esi+0x10]
10025f09:	mov    ecx,DWORD PTR [esi+0xc]
10025f0c:	add    ecx,eax
10025f0e:	test   cl,0x3
10025f11:	push   edi
10025f12:	jne    0x10025f24
10025f14:	add    eax,0x4
10025f17:	shr    eax,0x2
10025f1a:	cmp    DWORD PTR [esi+0x8],eax
10025f1d:	ja     0x10025f24
10025f1f:	call   0x10025fc6
10025f24:	mov    edi,DWORD PTR [esi+0xc]
10025f27:	add    edi,DWORD PTR [esi+0x10]
10025f2a:	mov    ecx,DWORD PTR [esi+0x8]
10025f2d:	mov    eax,edi
10025f2f:	shr    eax,0x2
10025f32:	cmp    ecx,eax
10025f34:	ja     0x10025f38
10025f36:	sub    eax,ecx
10025f38:	mov    ebx,eax
10025f3a:	mov    eax,DWORD PTR [esi+0x4]
10025f3d:	shl    ebx,0x2
10025f40:	cmp    DWORD PTR [ebx+eax*1],0x0
10025f44:	jne    0x10025f54
10025f46:	push   0x10
10025f48:	call   0x10043196
10025f4d:	pop    ecx
10025f4e:	mov    ecx,DWORD PTR [esi+0x4]
10025f51:	mov    DWORD PTR [ebx+ecx*1],eax
10025f54:	mov    eax,DWORD PTR [esi+0x4]
10025f57:	mov    eax,DWORD PTR [eax+ebx*1]
10025f5a:	and    edi,0x3
10025f5d:	lea    edi,[eax+edi*4]
10025f60:	test   edi,edi
10025f62:	je     0x10025f6c
10025f64:	mov    eax,DWORD PTR [esp+0x14]
10025f68:	mov    eax,DWORD PTR [eax]
10025f6a:	mov    DWORD PTR [edi],eax
10025f6c:	inc    DWORD PTR [esi+0x10]
10025f6f:	pop    edi
10025f70:	pop    esi
10025f71:	pop    ebx
10025f72:	pop    ecx
10025f73:	ret    0x4
10025f76:	mov    eax,DWORD PTR [esi+0x10]
10025f79:	push   ebx
10025f7a:	push   ebp
10025f7b:	mov    ebp,DWORD PTR [esi+0xc]
10025f7e:	add    eax,ebp
10025f80:	cmp    ebp,eax
10025f82:	push   edi
10025f83:	jbe    0x10025f8a
10025f85:	call   0x10043605
10025f8a:	mov    eax,DWORD PTR [esi+0x10]
10025f8d:	add    eax,DWORD PTR [esi+0xc]
10025f90:	mov    edi,ebp
10025f92:	mov    ebx,ebp
10025f94:	shr    edi,0x2
10025f97:	and    ebx,0x3
10025f9a:	cmp    ebp,eax
10025f9c:	jb     0x10025fa3
10025f9e:	call   0x10043605
10025fa3:	mov    eax,DWORD PTR [esi+0x8]
10025fa6:	cmp    eax,edi
10025fa8:	ja     0x10025fac
10025faa:	sub    edi,eax
10025fac:	mov    eax,DWORD PTR [esi+0x4]
10025faf:	mov    eax,DWORD PTR [eax+edi*4]
10025fb2:	pop    edi
10025fb3:	pop    ebp
10025fb4:	lea    eax,[eax+ebx*4]
10025fb7:	pop    ebx
10025fb8:	ret    
10025fb9:	mov    ecx,DWORD PTR [eax]
10025fbb:	test   ecx,ecx
10025fbd:	je     0x10025fc5
10025fbf:	mov    eax,DWORD PTR [ecx]
10025fc1:	push   0x1
10025fc3:	call   DWORD PTR [eax]
10025fc5:	ret    
10025fc6:	push   ebp
10025fc7:	mov    ebp,esp
10025fc9:	sub    esp,0x10
10025fcc:	mov    eax,DWORD PTR [esi+0x8]
10025fcf:	push   ebx
10025fd0:	push   edi
10025fd1:	mov    edx,0xfffffff
10025fd6:	xor    edi,edi
10025fd8:	mov    ecx,edx
10025fda:	inc    edi
10025fdb:	sub    ecx,eax
10025fdd:	cmp    ecx,edi
10025fdf:	mov    DWORD PTR [ebp-0x4],edi
10025fe2:	jae    0x10025fe9
10025fe4:	jmp    0x10026207
10025fe9:	mov    ecx,eax
10025feb:	shr    ecx,1
10025fed:	cmp    ecx,0x8
10025ff0:	jae    0x10025ff5
10025ff2:	push   0x8
10025ff4:	pop    ecx
10025ff5:	cmp    ecx,edi
10025ff7:	jbe    0x10026002
10025ff9:	sub    edx,ecx
10025ffb:	cmp    eax,edx
10025ffd:	ja     0x10026002
10025fff:	mov    DWORD PTR [ebp-0x4],ecx
10026002:	mov    ebx,DWORD PTR [esi+0xc]
10026005:	mov    ecx,DWORD PTR [ebp-0x4]
10026008:	add    ecx,eax
1002600a:	shr    ebx,0x2
1002600d:	call   0x1000a8c0
10026012:	mov    edx,DWORD PTR [esi+0x4]
10026015:	mov    edi,ebx
10026017:	shl    edi,0x2
1002601a:	mov    DWORD PTR [ebp-0x8],eax
1002601d:	lea    ecx,[edi+eax*1]
10026020:	mov    eax,DWORD PTR [esi+0x8]
10026023:	lea    eax,[edx+eax*4]
10026026:	add    edx,edi
10026028:	push   edx
10026029:	call   0x10026246
1002602e:	mov    edx,DWORD PTR [esi+0x4]
10026031:	pop    ecx
10026032:	mov    ecx,eax
10026034:	mov    eax,DWORD PTR [ebp-0x4]
10026037:	cmp    ebx,eax
10026039:	push   edx
1002603a:	ja     0x10026062
1002603c:	sub    eax,ebx
1002603e:	mov    DWORD PTR [ebp-0xc],eax
10026041:	lea    eax,[edx+edi*1]
10026044:	call   0x10026246
10026049:	pop    ecx
1002604a:	mov    ecx,DWORD PTR [ebp-0xc]
1002604d:	test   ecx,ecx
1002604f:	mov    edi,eax
10026051:	jbe    0x10026057
10026053:	xor    eax,eax
10026055:	rep stos DWORD PTR es:[edi],eax
10026057:	test   ebx,ebx
10026059:	jbe    0x1002608f
1002605b:	mov    edi,DWORD PTR [ebp-0x8]
1002605e:	mov    ecx,ebx
10026060:	jmp    0x1002608b
10026062:	mov    ebx,eax
10026064:	shl    ebx,0x2
10026067:	lea    eax,[ebx+edx*1]
1002606a:	call   0x10026246
1002606f:	pop    ecx
10026070:	mov    ecx,DWORD PTR [esi+0x4]
10026073:	add    ebx,ecx
10026075:	lea    eax,[ecx+edi*1]
10026078:	mov    ecx,DWORD PTR [ebp-0x8]
1002607b:	push   ebx
1002607c:	call   0x10026246
10026081:	pop    ecx
10026082:	mov    ecx,DWORD PTR [ebp-0x4]
10026085:	test   ecx,ecx
10026087:	mov    edi,eax
10026089:	jbe    0x1002608f
1002608b:	xor    eax,eax
1002608d:	rep stos DWORD PTR es:[edi],eax
1002608f:	mov    eax,DWORD PTR [esi+0x4]
10026092:	test   eax,eax
10026094:	je     0x1002609d
10026096:	push   eax
10026097:	call   0x10042fe2
1002609c:	pop    ecx
1002609d:	mov    eax,DWORD PTR [ebp-0x8]
100260a0:	mov    DWORD PTR [esi+0x4],eax
100260a3:	mov    eax,DWORD PTR [ebp-0x4]
100260a6:	add    DWORD PTR [esi+0x8],eax
100260a9:	pop    edi
100260aa:	pop    ebx
100260ab:	leave  
100260ac:	ret    
100260ad:	push   esi
100260ae:	mov    esi,eax
100260b0:	mov    eax,DWORD PTR [esi+0x10]
100260b3:	mov    ecx,DWORD PTR [esi+0xc]
100260b6:	add    ecx,eax
100260b8:	test   cl,0x3
100260bb:	push   edi
100260bc:	jne    0x100260ce
100260be:	add    eax,0x4
100260c1:	shr    eax,0x2
100260c4:	cmp    DWORD PTR [esi+0x8],eax
100260c7:	ja     0x100260ce
100260c9:	call   0x10026120
100260ce:	mov    edi,DWORD PTR [esi+0xc]
100260d1:	add    edi,DWORD PTR [esi+0x10]
100260d4:	mov    ecx,DWORD PTR [esi+0x8]
100260d7:	mov    eax,edi
100260d9:	shr    eax,0x2
100260dc:	cmp    ecx,eax
100260de:	ja     0x100260e2
100260e0:	sub    eax,ecx
100260e2:	push   ebx
100260e3:	mov    ebx,eax
100260e5:	mov    eax,DWORD PTR [esi+0x4]
100260e8:	shl    ebx,0x2
100260eb:	cmp    DWORD PTR [ebx+eax*1],0x0
100260ef:	jne    0x100260ff
100260f1:	push   0x10
100260f3:	call   0x10043196
100260f8:	pop    ecx
100260f9:	mov    ecx,DWORD PTR [esi+0x4]
100260fc:	mov    DWORD PTR [ebx+ecx*1],eax
100260ff:	mov    eax,DWORD PTR [esi+0x4]
10026102:	mov    eax,DWORD PTR [eax+ebx*1]
10026105:	and    edi,0x3
10026108:	lea    edi,[eax+edi*4]
1002610b:	test   edi,edi
1002610d:	pop    ebx
1002610e:	je     0x10026118
10026110:	mov    eax,DWORD PTR [esp+0xc]
10026114:	mov    eax,DWORD PTR [eax]
10026116:	mov    DWORD PTR [edi],eax
10026118:	inc    DWORD PTR [esi+0x10]
1002611b:	pop    edi
1002611c:	pop    esi
1002611d:	ret    0x4
10026120:	push   ebp
10026121:	mov    ebp,esp
10026123:	sub    esp,0xc
10026126:	mov    eax,DWORD PTR [esi+0x8]
10026129:	push   ebx
1002612a:	push   edi
1002612b:	mov    edx,0xfffffff
10026130:	xor    edi,edi
10026132:	mov    ecx,edx
10026134:	inc    edi
10026135:	sub    ecx,eax
10026137:	cmp    ecx,edi
10026139:	mov    DWORD PTR [ebp-0x4],edi
1002613c:	jae    0x10026143
1002613e:	jmp    0x10026207
10026143:	mov    ecx,eax
10026145:	shr    ecx,1
10026147:	cmp    ecx,0x8
1002614a:	jae    0x1002614f
1002614c:	push   0x8
1002614e:	pop    ecx
1002614f:	cmp    ecx,edi
10026151:	jbe    0x1002615c
10026153:	sub    edx,ecx
10026155:	cmp    eax,edx
10026157:	ja     0x1002615c
10026159:	mov    DWORD PTR [ebp-0x4],ecx
1002615c:	mov    ebx,DWORD PTR [esi+0xc]
1002615f:	mov    ecx,DWORD PTR [ebp-0x4]
10026162:	add    ecx,eax
10026164:	shr    ebx,0x2
10026167:	call   0x1000a8c0
1002616c:	mov    edx,DWORD PTR [esi+0x4]
1002616f:	mov    edi,ebx
10026171:	shl    edi,0x2
10026174:	mov    DWORD PTR [ebp-0x8],eax
10026177:	lea    ecx,[edi+eax*1]
1002617a:	mov    eax,DWORD PTR [esi+0x8]
1002617d:	lea    eax,[edx+eax*4]
10026180:	add    edx,edi
10026182:	push   edx
10026183:	call   0x10026246
10026188:	mov    edx,DWORD PTR [esi+0x4]
1002618b:	pop    ecx
1002618c:	mov    ecx,eax
1002618e:	mov    eax,DWORD PTR [ebp-0x4]
10026191:	cmp    ebx,eax
10026193:	push   edx
10026194:	ja     0x100261bc
10026196:	sub    eax,ebx
10026198:	mov    DWORD PTR [ebp-0xc],eax
1002619b:	lea    eax,[edx+edi*1]
1002619e:	call   0x10026246
100261a3:	pop    ecx
100261a4:	mov    ecx,DWORD PTR [ebp-0xc]
100261a7:	test   ecx,ecx
100261a9:	mov    edi,eax
100261ab:	jbe    0x100261b1
100261ad:	xor    eax,eax
100261af:	rep stos DWORD PTR es:[edi],eax
100261b1:	test   ebx,ebx
100261b3:	jbe    0x100261e9
100261b5:	mov    edi,DWORD PTR [ebp-0x8]
100261b8:	mov    ecx,ebx
100261ba:	jmp    0x100261e5
100261bc:	mov    ebx,eax
100261be:	shl    ebx,0x2
100261c1:	lea    eax,[ebx+edx*1]
100261c4:	call   0x10026246
100261c9:	mov    ecx,DWORD PTR [esi+0x4]
100261cc:	add    ebx,ecx
100261ce:	lea    eax,[ecx+edi*1]
100261d1:	mov    ecx,DWORD PTR [ebp-0x8]
100261d4:	push   ebx
100261d5:	call   0x10026246
100261da:	pop    ecx
100261db:	pop    ecx
100261dc:	mov    ecx,DWORD PTR [ebp-0x4]
100261df:	test   ecx,ecx
100261e1:	mov    edi,eax
100261e3:	jbe    0x100261e9
100261e5:	xor    eax,eax
100261e7:	rep stos DWORD PTR es:[edi],eax
100261e9:	mov    eax,DWORD PTR [esi+0x4]
100261ec:	test   eax,eax
100261ee:	pop    edi
100261ef:	pop    ebx
100261f0:	je     0x100261f9
100261f2:	push   eax
100261f3:	call   0x10042fe2
100261f8:	pop    ecx
100261f9:	mov    eax,DWORD PTR [ebp-0x8]
100261fc:	mov    DWORD PTR [esi+0x4],eax
100261ff:	mov    eax,DWORD PTR [ebp-0x4]
10026202:	add    DWORD PTR [esi+0x8],eax
10026205:	leave  
10026206:	ret    
10026207:	push   0x44
10026209:	mov    eax,0x10060b46
1002620e:	call   0x10059df5
10026213:	push   0x10072a34
10026218:	lea    ecx,[ebp-0x28]
1002621b:	call   0x100011a7
10026220:	and    DWORD PTR [ebp-0x4],0x0
10026224:	lea    eax,[ebp-0x28]
10026227:	push   eax
10026228:	lea    ecx,[ebp-0x50]
1002622b:	call   0x10001077
10026230:	push   0x100764d0
10026235:	lea    eax,[ebp-0x50]
10026238:	push   eax
10026239:	mov    DWORD PTR [ebp-0x50],0x1006c97c
10026240:	call   0x10047942
10026245:	int3   
10026246:	sub    eax,DWORD PTR [esp+0x4]
1002624a:	push   esi
1002624b:	sar    eax,0x2
1002624e:	lea    eax,[eax*4+0x0]
10026255:	lea    esi,[eax+ecx*1]
10026258:	je     0x10026269
1002625a:	push   eax
1002625b:	push   DWORD PTR [esp+0xc]
1002625f:	push   eax
10026260:	push   ecx
10026261:	call   0x10042fe7
10026266:	add    esp,0x10
10026269:	mov    eax,esi
1002626b:	pop    esi
1002626c:	ret    
1002626d:	push   0x3c
1002626f:	mov    eax,0x10064e23
10026274:	call   0x10059df5
10026279:	mov    ecx,DWORD PTR [ebp+0xc]
1002627c:	mov    BYTE PTR [ebp-0xd],0x0
10026280:	call   0x10008b05
10026285:	mov    DWORD PTR [ebp-0x20],eax
10026288:	mov    ecx,DWORD PTR [ebp+0xc]
1002628b:	xor    edi,edi
1002628d:	mov    DWORD PTR [ebp-0x4],edi
10026290:	call   0x10008b05
10026295:	mov    esi,eax
10026297:	mov    DWORD PTR [ebp-0x1c],esi
1002629a:	mov    DWORD PTR [ebp-0x18],edi
1002629d:	mov    DWORD PTR [ebp-0x14],edi
100262a0:	mov    ecx,DWORD PTR [ebp+0x8]
100262a3:	mov    BYTE PTR [ebp-0x4],0x3
100262a7:	mov    eax,DWORD PTR [ecx+0x4]
100262aa:	mov    edi,DWORD PTR [eax]
100262ac:	mov    ebx,ecx
100262ae:	mov    DWORD PTR [ebp-0x24],edi
100262b1:	mov    DWORD PTR [ebp-0x28],ebx
100262b4:	test   ebx,ebx
100262b6:	mov    eax,DWORD PTR [ecx+0x4]
100262b9:	mov    DWORD PTR [ebp-0x2c],eax
100262bc:	je     0x100262c2
100262be:	cmp    ebx,ecx
100262c0:	je     0x100262c7
100262c2:	call   0x10043605
100262c7:	cmp    edi,DWORD PTR [ebp-0x2c]
100262ca:	je     0x1002636d
100262d0:	mov    eax,DWORD PTR [ebp-0x20]
100262d3:	and    DWORD PTR [ebp-0x40],0x0
100262d7:	and    DWORD PTR [ebp-0x3c],0x0
100262db:	mov    DWORD PTR [ebp-0x48],eax
100262de:	mov    eax,DWORD PTR [ebp+0x10]
100262e1:	mov    DWORD PTR [ebp-0x44],esi
100262e4:	mov    DWORD PTR [ebp-0x38],eax
100262e7:	mov    BYTE PTR [ebp-0x34],0x0
100262eb:	test   ebx,ebx
100262ed:	mov    BYTE PTR [ebp-0x4],0x4
100262f1:	jne    0x100262f8
100262f3:	call   0x10043605
100262f8:	cmp    edi,DWORD PTR [ebx+0x4]
100262fb:	jne    0x10026302
100262fd:	call   0x10043605
10026302:	mov    edi,DWORD PTR [edi+0x8]
10026305:	mov    eax,DWORD PTR [edi]
10026307:	lea    ecx,[ebp-0x48]
1002630a:	push   ecx
1002630b:	mov    ecx,edi
1002630d:	call   DWORD PTR [eax]
1002630f:	test   al,al
10026311:	je     0x100263a8
10026317:	mov    ecx,DWORD PTR [ebp+0xc]
1002631a:	push   esi
1002631b:	mov    BYTE PTR [ebp-0xd],0x1
1002631f:	call   0x10008c3d
10026324:	mov    eax,DWORD PTR [ebp-0x40]
10026327:	and    DWORD PTR [ebp-0x40],0x0
1002632b:	mov    ebx,eax
1002632d:	lea    edi,[ebp-0x18]
10026330:	call   0x1000cea7
10026335:	mov    ebx,DWORD PTR [ebp-0x3c]
10026338:	mov    edi,DWORD PTR [ebp-0x14]
1002633b:	and    DWORD PTR [ebp-0x3c],0x0
1002633f:	cmp    ebx,edi
10026341:	je     0x1002634c
10026343:	test   edi,edi
10026345:	je     0x1002634c
10026347:	call   0x1000a38e
1002634c:	cmp    BYTE PTR [ebp-0x34],0x0
10026350:	mov    DWORD PTR [ebp-0x14],ebx
10026353:	je     0x100263d1
10026355:	mov    BYTE PTR [ebp-0x4],0x3
10026359:	mov    edi,DWORD PTR [ebp-0x3c]
1002635c:	test   edi,edi
1002635e:	je     0x10026365
10026360:	call   0x1000a38e
10026365:	lea    eax,[ebp-0x40]
10026368:	call   0x1000a2dc
1002636d:	cmp    BYTE PTR [ebp-0xd],0x0
10026371:	je     0x1002644b
10026377:	mov    eax,DWORD PTR [ebp-0x18]
1002637a:	test   eax,eax
1002637c:	je     0x10026402
10026382:	mov    ecx,DWORD PTR [eax+0x34]
10026385:	mov    ecx,DWORD PTR [ecx+0x18]
10026388:	mov    esi,DWORD PTR [ebp+0x14]
1002638b:	mov    DWORD PTR [eax+0x38],ecx
1002638e:	mov    ebx,DWORD PTR [eax+0x34]
10026391:	and    DWORD PTR [eax+0x34],0x0
10026395:	mov    edi,DWORD PTR [esi]
10026397:	cmp    ebx,edi
10026399:	je     0x100263a4
1002639b:	test   edi,edi
1002639d:	je     0x100263a4
1002639f:	call   0x1000a38e
100263a4:	mov    DWORD PTR [esi],ebx
100263a6:	jmp    0x10026421
100263a8:	push   DWORD PTR [ebp+0xc]
100263ab:	mov    ecx,esi
100263ad:	call   0x10008e33
100263b2:	test   al,al
100263b4:	jne    0x100263d1
100263b6:	mov    ecx,DWORD PTR [ebp+0xc]
100263b9:	call   0x10008b05
100263be:	mov    edi,eax
100263c0:	cmp    edi,esi
100263c2:	je     0x100263ce
100263c4:	test   esi,esi
100263c6:	je     0x100263ce
100263c8:	push   esi
100263c9:	call   0x1000a31f
100263ce:	mov    DWORD PTR [ebp-0x1c],edi
100263d1:	mov    BYTE PTR [ebp-0x4],0x3
100263d5:	mov    edi,DWORD PTR [ebp-0x3c]
100263d8:	test   edi,edi
100263da:	je     0x100263e1
100263dc:	call   0x1000a38e
100263e1:	lea    eax,[ebp-0x40]
100263e4:	call   0x1000a2dc
100263e9:	lea    esi,[ebp-0x28]
100263ec:	call   0x100268eb
100263f1:	mov    edi,DWORD PTR [ebp-0x24]
100263f4:	mov    ebx,DWORD PTR [ebp-0x28]
100263f7:	mov    ecx,DWORD PTR [ebp+0x8]
100263fa:	mov    esi,DWORD PTR [ebp-0x1c]
100263fd:	jmp    0x100262b4
10026402:	mov    esi,DWORD PTR [ebp-0x14]
10026405:	test   esi,esi
10026407:	je     0x10026421
10026409:	mov    ebx,DWORD PTR [ebp+0x14]
1002640c:	mov    edi,DWORD PTR [ebx]
1002640e:	and    DWORD PTR [ebp-0x14],0x0
10026412:	cmp    esi,edi
10026414:	je     0x1002641f
10026416:	test   edi,edi
10026418:	je     0x1002641f
1002641a:	call   0x1000a38e
1002641f:	mov    DWORD PTR [ebx],esi
10026421:	mov    eax,DWORD PTR [ebp+0xc]
10026424:	cmp    BYTE PTR [eax+0x2d],0x0
10026428:	je     0x1002644b
1002642a:	mov    ecx,DWORD PTR [ebp-0x20]
1002642d:	call   0x10008b05
10026432:	mov    edi,DWORD PTR [ebp+0xc]
10026435:	mov    esi,eax
10026437:	mov    eax,DWORD PTR [edi+0x30]
1002643a:	cmp    esi,eax
1002643c:	je     0x10026448
1002643e:	test   eax,eax
10026440:	je     0x10026448
10026442:	push   eax
10026443:	call   0x1000a31f
10026448:	mov    DWORD PTR [edi+0x30],esi
1002644b:	mov    edi,DWORD PTR [ebp-0x14]
1002644e:	test   edi,edi
10026450:	je     0x10026457
10026452:	call   0x1000a38e
10026457:	lea    eax,[ebp-0x18]
1002645a:	mov    BYTE PTR [ebp-0x4],0x1
1002645e:	call   0x1000a2dc
10026463:	lea    ecx,[ebp-0x1c]
10026466:	mov    BYTE PTR [ebp-0x4],0x0
1002646a:	call   0x1000a176
1002646f:	or     DWORD PTR [ebp-0x4],0xffffffff
10026473:	lea    ecx,[ebp-0x20]
10026476:	call   0x1000a176
1002647b:	mov    al,BYTE PTR [ebp-0xd]
1002647e:	call   0x10059ecd
10026483:	ret    
10026484:	push   edi
10026485:	mov    edi,DWORD PTR [esi+0xc]
10026488:	test   edi,edi
1002648a:	je     0x10026491
1002648c:	call   0x1000a38e
10026491:	lea    eax,[esi+0x8]
10026494:	pop    edi
10026495:	jmp    0x1000a2dc
1002649a:	push   0x30
1002649c:	mov    eax,0x10064885
100264a1:	call   0x10059df5
100264a6:	push   DWORD PTR [ebp+0x14]
100264a9:	mov    BYTE PTR [ebp-0xd],0x0
100264ad:	call   0x1000949b
100264b2:	mov    DWORD PTR [ebp-0x18],eax
100264b5:	push   DWORD PTR [ebp+0x14]
100264b8:	and    DWORD PTR [ebp-0x4],0x0
100264bc:	call   0x1000949b
100264c1:	mov    DWORD PTR [ebp-0x14],eax
100264c4:	mov    ebx,DWORD PTR [ebp+0x8]
100264c7:	mov    BYTE PTR [ebp-0x4],0x1
100264cb:	mov    eax,DWORD PTR [ebx+0x4]
100264ce:	mov    esi,DWORD PTR [eax]
100264d0:	mov    edi,ebx
100264d2:	mov    DWORD PTR [ebp-0x1c],esi
100264d5:	mov    DWORD PTR [ebp-0x20],edi
100264d8:	test   edi,edi
100264da:	mov    eax,DWORD PTR [ebx+0x4]
100264dd:	mov    DWORD PTR [ebp-0x24],eax
100264e0:	je     0x100264e6
100264e2:	cmp    edi,ebx
100264e4:	je     0x100264eb
100264e6:	call   0x10043605
100264eb:	cmp    esi,DWORD PTR [ebp-0x24]
100264ee:	je     0x10026555
100264f0:	test   edi,edi
100264f2:	mov    ecx,DWORD PTR [ebp+0xc]
100264f5:	mov    eax,DWORD PTR [ebp+0x18]
100264f8:	mov    al,BYTE PTR [eax]
100264fa:	mov    DWORD PTR [ebp-0x3c],ecx
100264fd:	mov    ecx,DWORD PTR [ebp-0x18]
10026500:	mov    DWORD PTR [ebp-0x38],ecx
10026503:	mov    ecx,DWORD PTR [ebp-0x14]
10026506:	mov    DWORD PTR [ebp-0x34],ecx
10026509:	mov    ecx,DWORD PTR [ebp+0x10]
1002650c:	mov    DWORD PTR [ebp-0x30],ecx
1002650f:	mov    BYTE PTR [ebp-0x2c],al
10026512:	mov    BYTE PTR [ebp-0x2b],0x0
10026516:	jne    0x1002651d
10026518:	call   0x10043605
1002651d:	cmp    esi,DWORD PTR [edi+0x4]
10026520:	jne    0x10026527
10026522:	call   0x10043605
10026527:	mov    esi,DWORD PTR [esi+0x8]
1002652a:	mov    eax,DWORD PTR [esi]
1002652c:	lea    ecx,[ebp-0x3c]
1002652f:	push   ecx
10026530:	mov    ecx,esi
10026532:	call   DWORD PTR [eax]
10026534:	test   al,al
10026536:	je     0x10026576
10026538:	mov    al,BYTE PTR [ebp-0x2c]
1002653b:	mov    ecx,DWORD PTR [ebp+0x18]
1002653e:	push   DWORD PTR [ebp-0x14]
10026541:	mov    edi,DWORD PTR [ebp+0x14]
10026544:	mov    BYTE PTR [ebp-0xd],0x1
10026548:	mov    BYTE PTR [ecx],al
1002654a:	call   0x1000956f
1002654f:	cmp    BYTE PTR [ebp-0x2b],0x0
10026553:	je     0x10026598
10026555:	lea    eax,[ebp-0x14]
10026558:	mov    BYTE PTR [ebp-0x4],0x0
1002655c:	call   0x1000a2dc
10026561:	or     DWORD PTR [ebp-0x4],0xffffffff
10026565:	lea    eax,[ebp-0x18]
10026568:	call   0x1000a2dc
1002656d:	mov    al,BYTE PTR [ebp-0xd]
10026570:	call   0x10059ecd
10026575:	ret    
10026576:	mov    esi,DWORD PTR [ebp+0x14]
10026579:	mov    edi,DWORD PTR [ebp-0x14]
1002657c:	call   0x10009702
10026581:	test   al,al
10026583:	jne    0x10026598
10026585:	push   esi
10026586:	call   0x1000949b
1002658b:	mov    ebx,eax
1002658d:	lea    edi,[ebp-0x14]
10026590:	call   0x1000cea7
10026595:	mov    ebx,DWORD PTR [ebp+0x8]
10026598:	lea    esi,[ebp-0x20]
1002659b:	call   0x100268eb
100265a0:	mov    esi,DWORD PTR [ebp-0x1c]
100265a3:	mov    edi,DWORD PTR [ebp-0x20]
100265a6:	jmp    0x100264d8
100265ab:	push   0x38
100265ad:	mov    eax,0x1006485a
100265b2:	call   0x10059df5
100265b7:	push   DWORD PTR [ebp+0x14]
100265ba:	mov    BYTE PTR [ebp-0x11],0x0
100265be:	call   0x1000949b
100265c3:	mov    DWORD PTR [ebp-0x1c],eax
100265c6:	push   DWORD PTR [ebp+0x14]
100265c9:	and    DWORD PTR [ebp-0x4],0x0
100265cd:	call   0x1000949b
100265d2:	mov    DWORD PTR [ebp-0x18],eax
100265d5:	mov    ebx,DWORD PTR [ebp+0x8]
100265d8:	mov    eax,DWORD PTR [ebx+0x4]
100265db:	mov    esi,DWORD PTR [eax]
100265dd:	mov    edi,ebx
100265df:	mov    DWORD PTR [ebp-0x20],esi
100265e2:	mov    DWORD PTR [ebp-0x24],edi
100265e5:	test   edi,edi
100265e7:	mov    eax,DWORD PTR [ebx+0x4]
100265ea:	mov    DWORD PTR [ebp-0x28],eax
100265ed:	je     0x100265f3
100265ef:	cmp    edi,ebx
100265f1:	je     0x100265f8
100265f3:	call   0x10043605
100265f8:	cmp    esi,DWORD PTR [ebp-0x28]
100265fb:	je     0x10026685
10026601:	mov    eax,DWORD PTR [ebp+0xc]
10026604:	and    DWORD PTR [ebp-0x34],0x0
10026608:	mov    DWORD PTR [ebp-0x44],eax
1002660b:	mov    eax,DWORD PTR [ebp-0x1c]
1002660e:	mov    DWORD PTR [ebp-0x40],eax
10026611:	mov    eax,DWORD PTR [ebp-0x18]
10026614:	mov    DWORD PTR [ebp-0x3c],eax
10026617:	mov    eax,DWORD PTR [ebp+0x10]
1002661a:	mov    DWORD PTR [ebp-0x38],eax
1002661d:	mov    BYTE PTR [ebp-0x30],0x0
10026621:	test   edi,edi
10026623:	mov    BYTE PTR [ebp-0x4],0x2
10026627:	jne    0x1002662e
10026629:	call   0x10043605
1002662e:	cmp    esi,DWORD PTR [edi+0x4]
10026631:	jne    0x10026638
10026633:	call   0x10043605
10026638:	mov    esi,DWORD PTR [esi+0x8]
1002663b:	mov    eax,DWORD PTR [esi]
1002663d:	lea    ecx,[ebp-0x44]
10026640:	push   ecx
10026641:	mov    ecx,esi
10026643:	call   DWORD PTR [eax]
10026645:	test   al,al
10026647:	je     0x100266a6
10026649:	push   DWORD PTR [ebp-0x18]
1002664c:	mov    edi,DWORD PTR [ebp+0x14]
1002664f:	mov    BYTE PTR [ebp-0x11],0x1
10026653:	call   0x1000956f
10026658:	cmp    BYTE PTR [ebp-0x30],0x0
1002665c:	je     0x100266c8
1002665e:	mov    ebx,DWORD PTR [ebp+0x18]
10026661:	mov    esi,DWORD PTR [ebp-0x34]
10026664:	mov    edi,DWORD PTR [ebx]
10026666:	and    DWORD PTR [ebp-0x34],0x0
1002666a:	cmp    esi,edi
1002666c:	je     0x10026677
1002666e:	test   edi,edi
10026670:	je     0x10026677
10026672:	call   0x1000a38e
10026677:	mov    edi,DWORD PTR [ebp-0x34]
1002667a:	test   edi,edi
1002667c:	mov    DWORD PTR [ebx],esi
1002667e:	je     0x10026685
10026680:	call   0x1000a38e
10026685:	lea    eax,[ebp-0x18]
10026688:	mov    BYTE PTR [ebp-0x4],0x0
1002668c:	call   0x1000a2dc
10026691:	or     DWORD PTR [ebp-0x4],0xffffffff
10026695:	lea    eax,[ebp-0x1c]
10026698:	call   0x1000a2dc
1002669d:	mov    al,BYTE PTR [ebp-0x11]
100266a0:	call   0x10059ecd
100266a5:	ret    
100266a6:	mov    esi,DWORD PTR [ebp+0x14]
100266a9:	mov    edi,DWORD PTR [ebp-0x18]
100266ac:	call   0x10009702
100266b1:	test   al,al
100266b3:	jne    0x100266c8
100266b5:	push   esi
100266b6:	call   0x1000949b
100266bb:	mov    ebx,eax
100266bd:	lea    edi,[ebp-0x18]
100266c0:	call   0x1000cea7
100266c5:	mov    ebx,DWORD PTR [ebp+0x8]
100266c8:	mov    edi,DWORD PTR [ebp-0x34]
100266cb:	test   edi,edi
100266cd:	je     0x100266d4
100266cf:	call   0x1000a38e
100266d4:	lea    esi,[ebp-0x24]
100266d7:	call   0x100268eb
100266dc:	mov    esi,DWORD PTR [ebp-0x20]
100266df:	mov    edi,DWORD PTR [ebp-0x24]
100266e2:	jmp    0x100265e5
100266e7:	push   edi
100266e8:	mov    edi,DWORD PTR [eax+0x10]
100266eb:	test   edi,edi
100266ed:	je     0x100266f4
100266ef:	call   0x1000a38e
100266f4:	pop    edi
100266f5:	ret    
100266f6:	push   ebp
100266f7:	mov    ebp,esp
100266f9:	sub    esp,0x20
100266fc:	mov    eax,DWORD PTR [ebp+0x8]
100266ff:	mov    DWORD PTR [ebp-0x20],eax
10026702:	mov    eax,DWORD PTR [ebp+0xc]
10026705:	push   ebx
10026706:	mov    DWORD PTR [ebp-0x1c],eax
10026709:	mov    eax,DWORD PTR [edi+0x4]
1002670c:	push   esi
1002670d:	mov    BYTE PTR [ebp-0x18],0x0
10026711:	mov    esi,DWORD PTR [eax]
10026713:	mov    ebx,edi
10026715:	mov    BYTE PTR [ebp-0x1],0x0
10026719:	mov    DWORD PTR [ebp-0x8],esi
1002671c:	mov    DWORD PTR [ebp-0xc],ebx
1002671f:	test   ebx,ebx
10026721:	mov    eax,DWORD PTR [edi+0x4]
10026724:	mov    DWORD PTR [ebp-0x10],eax
10026727:	je     0x1002672d
10026729:	cmp    ebx,edi
1002672b:	je     0x10026732
1002672d:	call   0x10043605
10026732:	cmp    esi,DWORD PTR [ebp-0x10]
10026735:	je     0x10026783
10026737:	test   ebx,ebx
10026739:	jne    0x10026740
1002673b:	call   0x10043605
10026740:	cmp    esi,DWORD PTR [ebx+0x4]
10026743:	jne    0x1002674a
10026745:	call   0x10043605
1002674a:	mov    ecx,DWORD PTR [esi+0x8]
1002674d:	mov    eax,DWORD PTR [ecx]
1002674f:	lea    edx,[ebp-0x20]
10026752:	push   edx
10026753:	call   DWORD PTR [eax]
10026755:	test   al,al
10026757:	je     0x10026773
10026759:	cmp    BYTE PTR [ebp-0x18],0x0
1002675d:	mov    BYTE PTR [ebp-0x1],0x1
10026761:	jne    0x10026783
10026763:	mov    eax,DWORD PTR [ebp+0x8]
10026766:	cmp    DWORD PTR [eax],0x0
10026769:	je     0x10026783
1002676b:	mov    eax,DWORD PTR [ebp+0xc]
1002676e:	cmp    DWORD PTR [eax],0x0
10026771:	je     0x10026783
10026773:	lea    esi,[ebp-0xc]
10026776:	call   0x100268eb
1002677b:	mov    esi,DWORD PTR [ebp-0x8]
1002677e:	mov    ebx,DWORD PTR [ebp-0xc]
10026781:	jmp    0x1002671f
10026783:	mov    al,BYTE PTR [ebp-0x1]
10026786:	pop    esi
10026787:	pop    ebx
10026788:	leave  
10026789:	ret    
1002678a:	push   ebp
1002678b:	mov    ebp,esp
1002678d:	and    esp,0xfffffff8
10026790:	sub    esp,0x30
10026793:	mov    eax,ds:0x100801ac
10026798:	xor    eax,esp
1002679a:	mov    DWORD PTR [esp+0x2c],eax
1002679e:	push   0x10
100267a0:	pop    eax
100267a1:	mov    DWORD PTR [esp+0x8],eax
100267a5:	mov    DWORD PTR [esp+0x4],eax
100267a9:	lea    eax,[esp+0x8]
100267ad:	push   eax
100267ae:	lea    eax,[esp+0x20]
100267b2:	push   eax
100267b3:	push   DWORD PTR [esi]
100267b5:	call   DWORD PTR ds:0x100673a0
100267bb:	cmp    eax,0xffffffff
100267be:	je     0x10026815
100267c0:	lea    eax,[esp+0x4]
100267c4:	push   eax
100267c5:	lea    eax,[esp+0x10]
100267c9:	push   eax
100267ca:	push   DWORD PTR [esi]
100267cc:	call   DWORD PTR ds:0x100673b0
100267d2:	cmp    eax,0xffffffff
100267d5:	je     0x10026815
100267d7:	cmp    WORD PTR [esp+0xc],0x2
100267dd:	jne    0x10026815
100267df:	cmp    WORD PTR [esp+0x1c],0x2
100267e5:	jne    0x10026815
100267e7:	mov    eax,DWORD PTR [esp+0x10]
100267eb:	cmp    eax,DWORD PTR [esp+0x20]
100267ef:	je     0x10026811
100267f1:	push   0x10072a68
100267f6:	push   0x9
100267f8:	mov    ecx,0x10072a94
100267fd:	call   0x100042b4
10026802:	pop    ecx
10026803:	pop    ecx
10026804:	push   eax
10026805:	call   DWORD PTR ds:0x100673f8
1002680b:	cmp    DWORD PTR [esp+0x10],eax
1002680f:	jne    0x10026815
10026811:	mov    al,0x1
10026813:	jmp    0x10026817
10026815:	xor    al,al
10026817:	mov    ecx,DWORD PTR [esp+0x2c]
1002681b:	xor    ecx,esp
1002681d:	call   0x10043615
10026822:	mov    esp,ebp
10026824:	pop    ebp
10026825:	ret    
10026826:	push   ebp
10026827:	mov    ebp,esp
10026829:	and    esp,0xfffffff8
1002682c:	push   0xffffffff
1002682e:	push   0x10062090
10026833:	mov    eax,fs:0x0
10026839:	push   eax
1002683a:	sub    esp,0x3c
1002683d:	push   ebx
1002683e:	push   esi
1002683f:	mov    eax,ds:0x100801ac
10026844:	xor    eax,esp
10026846:	push   eax
10026847:	lea    eax,[esp+0x48]
1002684b:	mov    fs:0x0,eax
10026851:	push   0x10072ad8
10026856:	push   0x5
10026858:	mov    ecx,0x10072b18
1002685d:	call   0x100042b4
10026862:	pop    ecx
10026863:	pop    ecx
10026864:	push   eax
10026865:	lea    ecx,[esp+0x10]
10026869:	call   0x100011a7
1002686e:	and    DWORD PTR [esp+0x50],0x0
10026873:	push   0x0
10026875:	lea    eax,[esp+0x10]
10026879:	push   eax
1002687a:	lea    eax,[esp+0x30]
1002687e:	push   eax
1002687f:	mov    eax,DWORD PTR [ebp+0x8]
10026882:	add    eax,0x18
10026885:	call   0x10008803
1002688a:	mov    BYTE PTR [esp+0x50],0x1
1002688f:	cmp    DWORD PTR [eax+0x18],0x10
10026893:	jb     0x1002689a
10026895:	mov    esi,DWORD PTR [eax+0x4]
10026898:	jmp    0x1002689d
1002689a:	lea    esi,[eax+0x4]
1002689d:	push   0x10072aa0
100268a2:	push   0x8
100268a4:	mov    ecx,0x10072acc
100268a9:	call   0x100042b4
100268ae:	push   eax
100268af:	push   esi
100268b0:	call   0x10045bf0
100268b5:	add    esp,0x10
100268b8:	push   0x0
100268ba:	test   eax,eax
100268bc:	push   0x1
100268be:	lea    ecx,[esp+0x30]
100268c2:	setne  bl
100268c5:	call   0x100012f0
100268ca:	push   0x0
100268cc:	push   0x1
100268ce:	lea    ecx,[esp+0x14]
100268d2:	call   0x100012f0
100268d7:	mov    al,bl
100268d9:	mov    ecx,DWORD PTR [esp+0x48]
100268dd:	mov    DWORD PTR fs:0x0,ecx
100268e4:	pop    ecx
100268e5:	pop    esi
100268e6:	pop    ebx
100268e7:	mov    esp,ebp
100268e9:	pop    ebp
100268ea:	ret    
100268eb:	cmp    DWORD PTR [esi],0x0
100268ee:	jne    0x100268f5
100268f0:	call   0x10043605
100268f5:	mov    eax,DWORD PTR [esi]
100268f7:	mov    ecx,DWORD PTR [esi+0x4]
100268fa:	cmp    ecx,DWORD PTR [eax+0x4]
100268fd:	jne    0x10026904
100268ff:	call   0x10043605
10026904:	mov    eax,DWORD PTR [esi+0x4]
10026907:	mov    eax,DWORD PTR [eax]
10026909:	mov    DWORD PTR [esi+0x4],eax
1002690c:	mov    eax,esi
1002690e:	ret    
1002690f:	push   ebp
10026910:	mov    ebp,esp
10026912:	and    esp,0xfffffff8
10026915:	push   0xffffffff
10026917:	push   0x1006108e
1002691c:	mov    eax,fs:0x0
10026922:	push   eax
10026923:	sub    esp,0x28
10026926:	push   ebx
10026927:	push   esi
10026928:	push   edi
10026929:	mov    eax,ds:0x100801ac
1002692e:	xor    eax,esp
10026930:	push   eax
10026931:	lea    eax,[esp+0x38]
10026935:	mov    fs:0x0,eax
1002693b:	xor    ebx,ebx
1002693d:	cmp    DWORD PTR ds:0x10083000,ebx
10026943:	jne    0x10026bbf
10026949:	call   0x10026e6c
1002694e:	mov    DWORD PTR [esp+0x20],eax
10026952:	mov    DWORD PTR [esp+0x24],ebx
10026956:	push   0x4
10026958:	pop    esi
10026959:	push   esi
1002695a:	mov    DWORD PTR [esp+0x44],ebx
1002695e:	call   0x10043196
10026963:	cmp    eax,ebx
10026965:	pop    ecx
10026966:	je     0x10026974
10026968:	mov    DWORD PTR [eax],0x10072b58
1002696e:	mov    DWORD PTR [esp+0x14],eax
10026972:	jmp    0x10026978
10026974:	mov    DWORD PTR [esp+0x14],ebx
10026978:	mov    eax,DWORD PTR [esp+0x20]
1002697c:	push   eax
1002697d:	lea    ecx,[esp+0x20]
10026981:	push   ecx
10026982:	lea    eax,[esp+0x1c]
10026986:	push   eax
10026987:	mov    edi,ecx
10026989:	call   0x10026e84
1002698e:	push   esi
1002698f:	call   0x10043196
10026994:	cmp    eax,ebx
10026996:	pop    ecx
10026997:	je     0x100269a5
10026999:	mov    DWORD PTR [eax],0x10072b60
1002699f:	mov    DWORD PTR [esp+0x14],eax
100269a3:	jmp    0x100269a9
100269a5:	mov    DWORD PTR [esp+0x14],ebx
100269a9:	mov    eax,DWORD PTR [esp+0x20]
100269ad:	push   eax
100269ae:	lea    ecx,[esp+0x20]
100269b2:	push   ecx
100269b3:	lea    eax,[esp+0x1c]
100269b7:	push   eax
100269b8:	mov    edi,ecx
100269ba:	call   0x10026e84
100269bf:	push   esi
100269c0:	call   0x10043196
100269c5:	cmp    eax,ebx
100269c7:	pop    ecx
100269c8:	je     0x100269d6
100269ca:	mov    DWORD PTR [eax],0x10072b78
100269d0:	mov    DWORD PTR [esp+0x14],eax
100269d4:	jmp    0x100269da
100269d6:	mov    DWORD PTR [esp+0x14],ebx
100269da:	mov    eax,DWORD PTR [esp+0x20]
100269de:	push   eax
100269df:	lea    ecx,[esp+0x20]
100269e3:	push   ecx
100269e4:	lea    eax,[esp+0x1c]
100269e8:	push   eax
100269e9:	mov    edi,ecx
100269eb:	call   0x10026e84
100269f0:	push   esi
100269f1:	call   0x10043196
100269f6:	cmp    eax,ebx
100269f8:	pop    ecx
100269f9:	je     0x10026a07
100269fb:	mov    DWORD PTR [eax],0x10072b88
10026a01:	mov    DWORD PTR [esp+0x14],eax
10026a05:	jmp    0x10026a0b
10026a07:	mov    DWORD PTR [esp+0x14],ebx
10026a0b:	mov    eax,DWORD PTR [esp+0x20]
10026a0f:	push   eax
10026a10:	lea    ecx,[esp+0x20]
10026a14:	push   ecx
10026a15:	lea    eax,[esp+0x1c]
10026a19:	push   eax
10026a1a:	mov    edi,ecx
10026a1c:	call   0x10026e84
10026a21:	push   esi
10026a22:	call   0x10043196
10026a27:	cmp    eax,ebx
10026a29:	pop    ecx
10026a2a:	je     0x10026a38
10026a2c:	mov    DWORD PTR [eax],0x10072b98
10026a32:	mov    DWORD PTR [esp+0x14],eax
10026a36:	jmp    0x10026a3c
10026a38:	mov    DWORD PTR [esp+0x14],ebx
10026a3c:	mov    eax,DWORD PTR [esp+0x20]
10026a40:	push   eax
10026a41:	lea    ecx,[esp+0x20]
10026a45:	push   ecx
10026a46:	lea    eax,[esp+0x1c]
10026a4a:	push   eax
10026a4b:	mov    edi,ecx
10026a4d:	call   0x10026e84
10026a52:	push   esi
10026a53:	call   0x10043196
10026a58:	cmp    eax,ebx
10026a5a:	pop    ecx
10026a5b:	je     0x10026a69
10026a5d:	mov    DWORD PTR [eax],0x10072b28
10026a63:	mov    DWORD PTR [esp+0x14],eax
10026a67:	jmp    0x10026a6d
10026a69:	mov    DWORD PTR [esp+0x14],ebx
10026a6d:	mov    eax,DWORD PTR [esp+0x20]
10026a71:	push   eax
10026a72:	lea    ecx,[esp+0x20]
10026a76:	push   ecx
10026a77:	lea    eax,[esp+0x1c]
10026a7b:	push   eax
10026a7c:	mov    edi,ecx
10026a7e:	call   0x10026e84
10026a83:	push   esi
10026a84:	call   0x10043196
10026a89:	cmp    eax,ebx
10026a8b:	pop    ecx
10026a8c:	je     0x10026a9a
10026a8e:	mov    DWORD PTR [eax],0x10072b80
10026a94:	mov    DWORD PTR [esp+0x14],eax
10026a98:	jmp    0x10026a9e
10026a9a:	mov    DWORD PTR [esp+0x14],ebx
10026a9e:	mov    eax,DWORD PTR [esp+0x20]
10026aa2:	push   eax
10026aa3:	lea    ecx,[esp+0x20]
10026aa7:	push   ecx
10026aa8:	lea    eax,[esp+0x1c]
10026aac:	push   eax
10026aad:	mov    edi,ecx
10026aaf:	call   0x10026e84
10026ab4:	push   esi
10026ab5:	call   0x10043196
10026aba:	cmp    eax,ebx
10026abc:	pop    ecx
10026abd:	je     0x10026acb
10026abf:	mov    DWORD PTR [eax],0x10072b68
10026ac5:	mov    DWORD PTR [esp+0x14],eax
10026ac9:	jmp    0x10026acf
10026acb:	mov    DWORD PTR [esp+0x14],ebx
10026acf:	mov    eax,DWORD PTR [esp+0x20]
10026ad3:	push   eax
10026ad4:	lea    ecx,[esp+0x20]
10026ad8:	push   ecx
10026ad9:	lea    eax,[esp+0x1c]
10026add:	push   eax
10026ade:	mov    edi,ecx
10026ae0:	call   0x10026e84
10026ae5:	push   esi
10026ae6:	call   0x10043196
10026aeb:	cmp    eax,ebx
10026aed:	pop    ecx
10026aee:	je     0x10026afc
10026af0:	mov    DWORD PTR [eax],0x10072b48
10026af6:	mov    DWORD PTR [esp+0x14],eax
10026afa:	jmp    0x10026b00
10026afc:	mov    DWORD PTR [esp+0x14],ebx
10026b00:	mov    eax,DWORD PTR [esp+0x20]
10026b04:	push   eax
10026b05:	lea    ecx,[esp+0x20]
10026b09:	push   ecx
10026b0a:	lea    eax,[esp+0x1c]
10026b0e:	push   eax
10026b0f:	mov    edi,ecx
10026b11:	call   0x10026e84
10026b16:	push   esi
10026b17:	call   0x10043196
10026b1c:	cmp    eax,ebx
10026b1e:	pop    ecx
10026b1f:	je     0x10026b2d
10026b21:	mov    DWORD PTR [eax],0x10072b30
10026b27:	mov    DWORD PTR [esp+0x14],eax
10026b2b:	jmp    0x10026b31
10026b2d:	mov    DWORD PTR [esp+0x14],ebx
10026b31:	mov    eax,DWORD PTR [esp+0x20]
10026b35:	push   eax
10026b36:	lea    ecx,[esp+0x20]
10026b3a:	push   ecx
10026b3b:	lea    eax,[esp+0x1c]
10026b3f:	push   eax
10026b40:	mov    edi,ecx
10026b42:	call   0x10026e84
10026b47:	push   esi
10026b48:	call   0x10043196
10026b4d:	cmp    eax,ebx
10026b4f:	pop    ecx
10026b50:	je     0x10026b5e
10026b52:	mov    DWORD PTR [eax],0x10072b50
10026b58:	mov    DWORD PTR [esp+0x14],eax
10026b5c:	jmp    0x10026b62
10026b5e:	mov    DWORD PTR [esp+0x14],ebx
10026b62:	mov    eax,DWORD PTR [esp+0x20]
10026b66:	push   eax
10026b67:	lea    ecx,[esp+0x20]
10026b6b:	push   ecx
10026b6c:	lea    eax,[esp+0x1c]
10026b70:	push   eax
10026b71:	mov    edi,ecx
10026b73:	call   0x10026e84
10026b78:	mov    eax,DWORD PTR [esp+0x20]
10026b7c:	mov    ebx,DWORD PTR [eax]
10026b7e:	mov    esi,0x10082ff8
10026b83:	mov    DWORD PTR [esp+0x18],eax
10026b87:	call   0x10026ef4
10026b8c:	push   DWORD PTR [esp+0x18]
10026b90:	mov    eax,ds:0x10082ffc
10026b95:	mov    ecx,DWORD PTR [eax]
10026b97:	push   edi
10026b98:	push   ebx
10026b99:	mov    eax,edi
10026b9b:	push   eax
10026b9c:	push   ecx
10026b9d:	push   esi
10026b9e:	push   DWORD PTR [esp+0x2c]
10026ba2:	call   0x10026f4e
10026ba7:	or     DWORD PTR [esp+0x40],0xffffffff
10026bac:	mov    esi,edi
10026bae:	call   0x10026ef4
10026bb3:	push   DWORD PTR [esp+0x20]
10026bb7:	call   0x10042fe2
10026bbc:	pop    ecx
10026bbd:	xor    ebx,ebx
10026bbf:	cmp    DWORD PTR ds:0x10082ff4,ebx
10026bc5:	jne    0x10026cee
10026bcb:	call   0x10026e6c
10026bd0:	mov    DWORD PTR [esp+0x20],eax
10026bd4:	mov    DWORD PTR [esp+0x24],ebx
10026bd8:	push   0x4
10026bda:	pop    esi
10026bdb:	push   esi
10026bdc:	mov    DWORD PTR [esp+0x44],0x1
10026be4:	call   0x10043196
10026be9:	cmp    eax,ebx
10026beb:	pop    ecx
10026bec:	je     0x10026bfa
10026bee:	mov    DWORD PTR [eax],0x10072ba0
10026bf4:	mov    DWORD PTR [esp+0x14],eax
10026bf8:	jmp    0x10026bfe
10026bfa:	mov    DWORD PTR [esp+0x14],ebx
10026bfe:	mov    eax,DWORD PTR [esp+0x20]
10026c02:	push   eax
10026c03:	lea    ecx,[esp+0x20]
10026c07:	push   ecx
10026c08:	lea    eax,[esp+0x1c]
10026c0c:	push   eax
10026c0d:	mov    edi,ecx
10026c0f:	call   0x10026e84
10026c14:	push   esi
10026c15:	call   0x10043196
10026c1a:	cmp    eax,ebx
10026c1c:	pop    ecx
10026c1d:	je     0x10026c2b
10026c1f:	mov    DWORD PTR [eax],0x10072b90
10026c25:	mov    DWORD PTR [esp+0x14],eax
10026c29:	jmp    0x10026c2f
10026c2b:	mov    DWORD PTR [esp+0x14],ebx
10026c2f:	mov    eax,DWORD PTR [esp+0x20]
10026c33:	push   eax
10026c34:	lea    ecx,[esp+0x20]
10026c38:	push   ecx
10026c39:	lea    eax,[esp+0x1c]
10026c3d:	push   eax
10026c3e:	mov    edi,ecx
10026c40:	call   0x10026e84
10026c45:	push   esi
10026c46:	call   0x10043196
10026c4b:	cmp    eax,ebx
10026c4d:	pop    ecx
10026c4e:	je     0x10026c5c
10026c50:	mov    DWORD PTR [eax],0x10072b70
10026c56:	mov    DWORD PTR [esp+0x14],eax
10026c5a:	jmp    0x10026c60
10026c5c:	mov    DWORD PTR [esp+0x14],ebx
10026c60:	mov    eax,DWORD PTR [esp+0x20]
10026c64:	push   eax
10026c65:	lea    ecx,[esp+0x20]
10026c69:	push   ecx
10026c6a:	lea    eax,[esp+0x1c]
10026c6e:	push   eax
10026c6f:	mov    edi,ecx
10026c71:	call   0x10026e84
10026c76:	push   esi
10026c77:	call   0x10043196
10026c7c:	cmp    eax,ebx
10026c7e:	pop    ecx
10026c7f:	je     0x10026c8d
10026c81:	mov    DWORD PTR [eax],0x10072b38
10026c87:	mov    DWORD PTR [esp+0x14],eax
10026c8b:	jmp    0x10026c91
10026c8d:	mov    DWORD PTR [esp+0x14],ebx
10026c91:	mov    eax,DWORD PTR [esp+0x20]
10026c95:	push   eax
10026c96:	lea    ecx,[esp+0x20]
10026c9a:	push   ecx
10026c9b:	lea    eax,[esp+0x1c]
10026c9f:	push   eax
10026ca0:	mov    edi,ecx
10026ca2:	call   0x10026e84
10026ca7:	mov    eax,DWORD PTR [esp+0x20]
10026cab:	mov    ebx,DWORD PTR [eax]
10026cad:	mov    esi,0x10082fec
10026cb2:	mov    DWORD PTR [esp+0x18],eax
10026cb6:	call   0x10026ef4
10026cbb:	push   DWORD PTR [esp+0x18]
10026cbf:	mov    eax,ds:0x10082ff0
10026cc4:	mov    ecx,DWORD PTR [eax]
10026cc6:	push   edi
10026cc7:	push   ebx
10026cc8:	mov    eax,edi
10026cca:	push   eax
10026ccb:	push   ecx
10026ccc:	push   esi
10026ccd:	push   DWORD PTR [esp+0x2c]
10026cd1:	call   0x10027015
10026cd6:	or     DWORD PTR [esp+0x40],0xffffffff
10026cdb:	mov    esi,edi
10026cdd:	call   0x10026ef4
10026ce2:	push   DWORD PTR [esp+0x20]
10026ce6:	call   0x10042fe2
10026ceb:	pop    ecx
10026cec:	xor    ebx,ebx
10026cee:	cmp    DWORD PTR ds:0x1008300c,ebx
10026cf4:	jne    0x10026d94
10026cfa:	call   0x10026e6c
10026cff:	mov    DWORD PTR [esp+0x20],eax
10026d03:	mov    DWORD PTR [esp+0x24],ebx
10026d07:	push   0x8
10026d09:	mov    DWORD PTR [esp+0x44],0x2
10026d11:	call   0x10043196
10026d16:	pop    ecx
10026d17:	mov    DWORD PTR [esp+0x14],eax
10026d1b:	cmp    eax,ebx
10026d1d:	mov    BYTE PTR [esp+0x40],0x3
10026d22:	je     0x10026d2c
10026d24:	push   eax
10026d25:	call   0x1002c17f
10026d2a:	jmp    0x10026d2e
10026d2c:	xor    eax,eax
10026d2e:	mov    BYTE PTR [esp+0x40],0x2
10026d33:	mov    DWORD PTR [esp+0x14],eax
10026d37:	mov    eax,DWORD PTR [esp+0x20]
10026d3b:	push   eax
10026d3c:	lea    ecx,[esp+0x20]
10026d40:	push   ecx
10026d41:	lea    eax,[esp+0x1c]
10026d45:	push   eax
10026d46:	mov    edi,ecx
10026d48:	call   0x10026e84
10026d4d:	mov    eax,DWORD PTR [esp+0x20]
10026d51:	mov    ebx,DWORD PTR [eax]
10026d53:	mov    esi,0x10083004
10026d58:	mov    DWORD PTR [esp+0x18],eax
10026d5c:	call   0x10026ef4
10026d61:	push   DWORD PTR [esp+0x18]
10026d65:	mov    eax,ds:0x10083008
10026d6a:	mov    ecx,DWORD PTR [eax]
10026d6c:	push   edi
10026d6d:	push   ebx
10026d6e:	mov    eax,edi
10026d70:	push   eax
10026d71:	push   ecx
10026d72:	push   esi
10026d73:	push   DWORD PTR [esp+0x2c]
10026d77:	call   0x100270dc
10026d7c:	or     DWORD PTR [esp+0x40],0xffffffff
10026d81:	mov    esi,edi
10026d83:	call   0x10026ef4
10026d88:	push   DWORD PTR [esp+0x20]
10026d8c:	call   0x10042fe2
10026d91:	pop    ecx
10026d92:	xor    ebx,ebx
10026d94:	cmp    DWORD PTR ds:0x10082fe8,ebx
10026d9a:	jne    0x10026e25
10026da0:	call   0x10026e6c
10026da5:	mov    DWORD PTR [esp+0x2c],eax
10026da9:	mov    DWORD PTR [esp+0x30],ebx
10026dad:	push   0x4
10026daf:	pop    eax
10026db0:	push   eax
10026db1:	mov    DWORD PTR [esp+0x44],eax
10026db5:	call   0x10043196
10026dba:	cmp    eax,ebx
10026dbc:	pop    ecx
10026dbd:	je     0x10026dcb
10026dbf:	mov    DWORD PTR [eax],0x10072b40
10026dc5:	mov    DWORD PTR [esp+0x14],eax
10026dc9:	jmp    0x10026dcf
10026dcb:	mov    DWORD PTR [esp+0x14],ebx
10026dcf:	mov    eax,DWORD PTR [esp+0x2c]
10026dd3:	push   eax
10026dd4:	lea    ecx,[esp+0x2c]
10026dd8:	push   ecx
10026dd9:	lea    eax,[esp+0x1c]
10026ddd:	push   eax
10026dde:	mov    edi,ecx
10026de0:	call   0x10026e84
10026de5:	mov    eax,DWORD PTR [esp+0x2c]
10026de9:	mov    ebx,DWORD PTR [eax]
10026deb:	mov    esi,0x10082fe0
10026df0:	mov    DWORD PTR [esp+0x18],eax
10026df4:	call   0x10026ef4
10026df9:	push   DWORD PTR [esp+0x18]
10026dfd:	mov    eax,ds:0x10082fe4
10026e02:	mov    ecx,DWORD PTR [eax]
10026e04:	push   edi
10026e05:	push   ebx
10026e06:	mov    eax,edi
10026e08:	push   eax
10026e09:	push   ecx
10026e0a:	push   esi
10026e0b:	push   DWORD PTR [esp+0x2c]
10026e0f:	call   0x100271a3
10026e14:	mov    esi,edi
10026e16:	call   0x10026ef4
10026e1b:	push   DWORD PTR [esp+0x2c]
10026e1f:	call   0x10042fe2
10026e24:	pop    ecx
10026e25:	mov    ecx,DWORD PTR [esp+0x38]
10026e29:	mov    DWORD PTR fs:0x0,ecx
10026e30:	pop    ecx
10026e31:	pop    edi
10026e32:	pop    esi
10026e33:	pop    ebx
10026e34:	mov    esp,ebp
10026e36:	pop    ebp
10026e37:	ret    
10026e38:	test   BYTE PTR [esp+0x4],0x1
10026e3d:	push   esi
10026e3e:	mov    esi,ecx
10026e40:	mov    DWORD PTR [esi],0x10072b20
10026e46:	je     0x10026e4f
10026e48:	push   esi
10026e49:	call   0x10042fe2
10026e4e:	pop    ecx
10026e4f:	mov    eax,esi
10026e51:	pop    esi
10026e52:	ret    0x4
10026e55:	push   esi
10026e56:	mov    esi,eax
10026e58:	call   0x10026ef4
10026e5d:	push   DWORD PTR [esi+0x4]
10026e60:	call   0x10042fe2
10026e65:	and    DWORD PTR [esi+0x4],0x0
10026e69:	pop    ecx
10026e6a:	pop    esi
10026e6b:	ret    
10026e6c:	push   0xc
10026e6e:	call   0x10043196
10026e73:	test   eax,eax
10026e75:	pop    ecx
10026e76:	je     0x10026e7a
10026e78:	mov    DWORD PTR [eax],eax
10026e7a:	lea    ecx,[eax+0x4]
10026e7d:	test   ecx,ecx
10026e7f:	je     0x10026e83
10026e81:	mov    DWORD PTR [ecx],eax
10026e83:	ret    
10026e84:	push   0x48
10026e86:	mov    eax,0x100607fe
10026e8b:	call   0x10059df5
10026e90:	push   DWORD PTR [ebp+0x8]
10026e93:	mov    esi,DWORD PTR [ebp+0x10]
10026e96:	push   DWORD PTR [esi+0x4]
10026e99:	push   esi
10026e9a:	call   0x10026f1d
10026e9f:	mov    ecx,DWORD PTR [edi+0x8]
10026ea2:	mov    edx,0x3fffffff
10026ea7:	sub    edx,ecx
10026ea9:	cmp    edx,0x1
10026eac:	jae    0x10026ee0
10026eae:	push   0x10071080
10026eb3:	lea    ecx,[ebp-0x2c]
10026eb6:	call   0x100011a7
10026ebb:	and    DWORD PTR [ebp-0x4],0x0
10026ebf:	lea    eax,[ebp-0x2c]
10026ec2:	push   eax
10026ec3:	lea    ecx,[ebp-0x54]
10026ec6:	call   0x10001077
10026ecb:	push   0x100764d0
10026ed0:	lea    eax,[ebp-0x54]
10026ed3:	push   eax
10026ed4:	mov    DWORD PTR [ebp-0x54],0x1006c97c
10026edb:	call   0x10047942
10026ee0:	inc    ecx
10026ee1:	mov    DWORD PTR [edi+0x8],ecx
10026ee4:	mov    DWORD PTR [esi+0x4],eax
10026ee7:	mov    ecx,DWORD PTR [eax+0x4]
10026eea:	mov    DWORD PTR [ecx],eax
10026eec:	call   0x10059ecd
10026ef1:	ret    0xc
10026ef4:	mov    eax,DWORD PTR [esi+0x4]
10026ef7:	mov    ecx,DWORD PTR [eax]
10026ef9:	mov    DWORD PTR [eax],eax
10026efb:	mov    eax,DWORD PTR [esi+0x4]
10026efe:	mov    DWORD PTR [eax+0x4],eax
10026f01:	and    DWORD PTR [esi+0x8],0x0
10026f05:	cmp    ecx,DWORD PTR [esi+0x4]
10026f08:	je     0x10026f1c
10026f0a:	push   edi
10026f0b:	mov    edi,DWORD PTR [ecx]
10026f0d:	push   ecx
10026f0e:	call   0x10042fe2
10026f13:	cmp    edi,DWORD PTR [esi+0x4]
10026f16:	pop    ecx
10026f17:	mov    ecx,edi
10026f19:	jne    0x10026f0b
10026f1b:	pop    edi
10026f1c:	ret    
10026f1d:	push   0xc
10026f1f:	call   0x10043196
10026f24:	test   eax,eax
10026f26:	pop    ecx
10026f27:	je     0x10026f2f
10026f29:	mov    ecx,DWORD PTR [esp+0x4]
10026f2d:	mov    DWORD PTR [eax],ecx
10026f2f:	lea    ecx,[eax+0x4]
10026f32:	test   ecx,ecx
10026f34:	je     0x10026f3c
10026f36:	mov    edx,DWORD PTR [esp+0x8]
10026f3a:	mov    DWORD PTR [ecx],edx
10026f3c:	lea    ecx,[eax+0x8]
10026f3f:	test   ecx,ecx
10026f41:	je     0x10026f4b
10026f43:	mov    edx,DWORD PTR [esp+0xc]
10026f47:	mov    edx,DWORD PTR [edx]
10026f49:	mov    DWORD PTR [ecx],edx
10026f4b:	ret    0xc
10026f4e:	push   0x18
10026f50:	mov    eax,0x10061049
10026f55:	call   0x10059e28
10026f5a:	mov    ebx,DWORD PTR [ebp+0x14]
10026f5d:	mov    esi,DWORD PTR [ebp+0x18]
10026f60:	and    DWORD PTR [ebp-0x4],0x0
10026f64:	mov    edi,0x10082ff8
10026f69:	mov    DWORD PTR [ebp-0x1c],ebx
10026f6c:	mov    DWORD PTR [ebp-0x18],esi
10026f6f:	test   ebx,ebx
10026f71:	je     0x10026f78
10026f73:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026f76:	je     0x10026f7d
10026f78:	call   0x10043605
10026f7d:	cmp    esi,DWORD PTR [ebp+0x20]
10026f80:	je     0x1002700d
10026f86:	test   ebx,ebx
10026f88:	jne    0x10026f8f
10026f8a:	call   0x10043605
10026f8f:	cmp    esi,DWORD PTR [ebx+0x4]
10026f92:	jne    0x10026f99
10026f94:	call   0x10043605
10026f99:	push   DWORD PTR [ebp+0x10]
10026f9c:	add    esi,0x8
10026f9f:	push   DWORD PTR [ebp+0xc]
10026fa2:	push   esi
10026fa3:	call   0x10026e84
10026fa8:	lea    esi,[ebp+0x14]
10026fab:	call   0x100268eb
10026fb0:	mov    esi,DWORD PTR [ebp+0x18]
10026fb3:	mov    ebx,DWORD PTR [ebp+0x14]
10026fb6:	jmp    0x10026f6f
10026fb8:	mov    edi,DWORD PTR [ebp+0x10]
10026fbb:	mov    eax,DWORD PTR [ebp-0x1c]
10026fbe:	test   eax,eax
10026fc0:	je     0x10026fc7
10026fc2:	cmp    eax,DWORD PTR [ebp+0x14]
10026fc5:	je     0x10026fcc
10026fc7:	call   0x10043605
10026fcc:	mov    eax,DWORD PTR [ebp-0x18]
10026fcf:	cmp    eax,DWORD PTR [ebp+0x18]
10026fd2:	je     0x10027004
10026fd4:	mov    ebx,DWORD PTR [ebp+0xc]
10026fd7:	test   ebx,ebx
10026fd9:	mov    DWORD PTR [ebp+0x20],edi
10026fdc:	jne    0x10026fe3
10026fde:	call   0x10043605
10026fe3:	mov    esi,DWORD PTR [edi+0x4]
10026fe6:	cmp    esi,DWORD PTR [ebx+0x4]
10026fe9:	jne    0x10026ff0
10026feb:	call   0x10043605
10026ff0:	push   esi
10026ff1:	push   ebx
10026ff2:	lea    ebx,[ebp-0x24]
10026ff5:	call   0x1002726a
10026ffa:	lea    esi,[ebp-0x1c]
10026ffd:	call   0x100268eb
10027002:	jmp    0x10026fbb
10027004:	push   0x0
10027006:	push   0x0
10027008:	call   0x10047942
1002700d:	call   0x10059ecd
10027012:	ret    0x1c
10027015:	push   0x18
10027017:	mov    eax,0x1006102e
1002701c:	call   0x10059e28
10027021:	mov    ebx,DWORD PTR [ebp+0x14]
10027024:	mov    esi,DWORD PTR [ebp+0x18]
10027027:	and    DWORD PTR [ebp-0x4],0x0
1002702b:	mov    edi,0x10082fec
10027030:	mov    DWORD PTR [ebp-0x1c],ebx
10027033:	mov    DWORD PTR [ebp-0x18],esi
10027036:	test   ebx,ebx
10027038:	je     0x1002703f
1002703a:	cmp    ebx,DWORD PTR [ebp+0x1c]
1002703d:	je     0x10027044
1002703f:	call   0x10043605
10027044:	cmp    esi,DWORD PTR [ebp+0x20]
10027047:	je     0x100270d4
1002704d:	test   ebx,ebx
1002704f:	jne    0x10027056
10027051:	call   0x10043605
10027056:	cmp    esi,DWORD PTR [ebx+0x4]
10027059:	jne    0x10027060
1002705b:	call   0x10043605
10027060:	push   DWORD PTR [ebp+0x10]
10027063:	add    esi,0x8
10027066:	push   DWORD PTR [ebp+0xc]
10027069:	push   esi
1002706a:	call   0x10026e84
1002706f:	lea    esi,[ebp+0x14]
10027072:	call   0x100268eb
10027077:	mov    esi,DWORD PTR [ebp+0x18]
1002707a:	mov    ebx,DWORD PTR [ebp+0x14]
1002707d:	jmp    0x10027036
1002707f:	mov    edi,DWORD PTR [ebp+0x10]
10027082:	mov    eax,DWORD PTR [ebp-0x1c]
10027085:	test   eax,eax
10027087:	je     0x1002708e
10027089:	cmp    eax,DWORD PTR [ebp+0x14]
1002708c:	je     0x10027093
1002708e:	call   0x10043605
10027093:	mov    eax,DWORD PTR [ebp-0x18]
10027096:	cmp    eax,DWORD PTR [ebp+0x18]
10027099:	je     0x100270cb
1002709b:	mov    ebx,DWORD PTR [ebp+0xc]
1002709e:	test   ebx,ebx
100270a0:	mov    DWORD PTR [ebp+0x20],edi
100270a3:	jne    0x100270aa
100270a5:	call   0x10043605
100270aa:	mov    esi,DWORD PTR [edi+0x4]
100270ad:	cmp    esi,DWORD PTR [ebx+0x4]
100270b0:	jne    0x100270b7
100270b2:	call   0x10043605
100270b7:	push   esi
100270b8:	push   ebx
100270b9:	lea    ebx,[ebp-0x24]
100270bc:	call   0x100272b9
100270c1:	lea    esi,[ebp-0x1c]
100270c4:	call   0x100268eb
100270c9:	jmp    0x10027082
100270cb:	push   0x0
100270cd:	push   0x0
100270cf:	call   0x10047942
100270d4:	call   0x10059ecd
100270d9:	ret    0x1c
100270dc:	push   0x18
100270de:	mov    eax,0x10061013
100270e3:	call   0x10059e28
100270e8:	mov    ebx,DWORD PTR [ebp+0x14]
100270eb:	mov    esi,DWORD PTR [ebp+0x18]
100270ee:	and    DWORD PTR [ebp-0x4],0x0
100270f2:	mov    edi,0x10083004
100270f7:	mov    DWORD PTR [ebp-0x1c],ebx
100270fa:	mov    DWORD PTR [ebp-0x18],esi
100270fd:	test   ebx,ebx
100270ff:	je     0x10027106
10027101:	cmp    ebx,DWORD PTR [ebp+0x1c]
10027104:	je     0x1002710b
10027106:	call   0x10043605
1002710b:	cmp    esi,DWORD PTR [ebp+0x20]
1002710e:	je     0x1002719b
10027114:	test   ebx,ebx
10027116:	jne    0x1002711d
10027118:	call   0x10043605
1002711d:	cmp    esi,DWORD PTR [ebx+0x4]
10027120:	jne    0x10027127
10027122:	call   0x10043605
10027127:	push   DWORD PTR [ebp+0x10]
1002712a:	add    esi,0x8
1002712d:	push   DWORD PTR [ebp+0xc]
10027130:	push   esi
10027131:	call   0x10026e84
10027136:	lea    esi,[ebp+0x14]
10027139:	call   0x100268eb
1002713e:	mov    esi,DWORD PTR [ebp+0x18]
10027141:	mov    ebx,DWORD PTR [ebp+0x14]
10027144:	jmp    0x100270fd
10027146:	mov    edi,DWORD PTR [ebp+0x10]
10027149:	mov    eax,DWORD PTR [ebp-0x1c]
1002714c:	test   eax,eax
1002714e:	je     0x10027155
10027150:	cmp    eax,DWORD PTR [ebp+0x14]
10027153:	je     0x1002715a
10027155:	call   0x10043605
1002715a:	mov    eax,DWORD PTR [ebp-0x18]
1002715d:	cmp    eax,DWORD PTR [ebp+0x18]
10027160:	je     0x10027192
10027162:	mov    ebx,DWORD PTR [ebp+0xc]
10027165:	test   ebx,ebx
10027167:	mov    DWORD PTR [ebp+0x20],edi
1002716a:	jne    0x10027171
1002716c:	call   0x10043605
10027171:	mov    esi,DWORD PTR [edi+0x4]
10027174:	cmp    esi,DWORD PTR [ebx+0x4]
10027177:	jne    0x1002717e
10027179:	call   0x10043605
1002717e:	push   esi
1002717f:	push   ebx
10027180:	lea    ebx,[ebp-0x24]
10027183:	call   0x10027308
10027188:	lea    esi,[ebp-0x1c]
1002718b:	call   0x100268eb
10027190:	jmp    0x10027149
10027192:	push   0x0
10027194:	push   0x0
10027196:	call   0x10047942
1002719b:	call   0x10059ecd
100271a0:	ret    0x1c
100271a3:	push   0x18
100271a5:	mov    eax,0x10060ff8
100271aa:	call   0x10059e28
100271af:	mov    ebx,DWORD PTR [ebp+0x14]
100271b2:	mov    esi,DWORD PTR [ebp+0x18]
100271b5:	and    DWORD PTR [ebp-0x4],0x0
100271b9:	mov    edi,0x10082fe0
100271be:	mov    DWORD PTR [ebp-0x1c],ebx
100271c1:	mov    DWORD PTR [ebp-0x18],esi
100271c4:	test   ebx,ebx
100271c6:	je     0x100271cd
100271c8:	cmp    ebx,DWORD PTR [ebp+0x1c]
100271cb:	je     0x100271d2
100271cd:	call   0x10043605
100271d2:	cmp    esi,DWORD PTR [ebp+0x20]
100271d5:	je     0x10027262
100271db:	test   ebx,ebx
100271dd:	jne    0x100271e4
100271df:	call   0x10043605
100271e4:	cmp    esi,DWORD PTR [ebx+0x4]
100271e7:	jne    0x100271ee
100271e9:	call   0x10043605
100271ee:	push   DWORD PTR [ebp+0x10]
100271f1:	add    esi,0x8
100271f4:	push   DWORD PTR [ebp+0xc]
100271f7:	push   esi
100271f8:	call   0x10026e84
100271fd:	lea    esi,[ebp+0x14]
10027200:	call   0x100268eb
10027205:	mov    esi,DWORD PTR [ebp+0x18]
10027208:	mov    ebx,DWORD PTR [ebp+0x14]
1002720b:	jmp    0x100271c4
1002720d:	mov    edi,DWORD PTR [ebp+0x10]
10027210:	mov    eax,DWORD PTR [ebp-0x1c]
10027213:	test   eax,eax
10027215:	je     0x1002721c
10027217:	cmp    eax,DWORD PTR [ebp+0x14]
1002721a:	je     0x10027221
1002721c:	call   0x10043605
10027221:	mov    eax,DWORD PTR [ebp-0x18]
10027224:	cmp    eax,DWORD PTR [ebp+0x18]
10027227:	je     0x10027259
10027229:	mov    ebx,DWORD PTR [ebp+0xc]
1002722c:	test   ebx,ebx
1002722e:	mov    DWORD PTR [ebp+0x20],edi
10027231:	jne    0x10027238
10027233:	call   0x10043605
10027238:	mov    esi,DWORD PTR [edi+0x4]
1002723b:	cmp    esi,DWORD PTR [ebx+0x4]
1002723e:	jne    0x10027245
10027240:	call   0x10043605
10027245:	push   esi
10027246:	push   ebx
10027247:	lea    ebx,[ebp-0x24]
1002724a:	call   0x10027357
1002724f:	lea    esi,[ebp-0x1c]
10027252:	call   0x100268eb
10027257:	jmp    0x10027210
10027259:	push   0x0
1002725b:	push   0x0
1002725d:	call   0x10047942
10027262:	call   0x10059ecd
10027267:	ret    0x1c
1002726a:	push   ebp
1002726b:	mov    ebp,esp
1002726d:	push   ecx
1002726e:	push   ecx
1002726f:	mov    eax,DWORD PTR [ebp+0x8]
10027272:	push   esi
10027273:	push   edi
10027274:	mov    edi,DWORD PTR [ebp+0xc]
10027277:	lea    esi,[ebp+0x8]
1002727a:	mov    DWORD PTR [ebp-0x8],eax
1002727d:	call   0x100268eb
10027282:	cmp    edi,DWORD PTR ds:0x10082ffc
10027288:	je     0x100272a6
1002728a:	mov    eax,DWORD PTR [edi+0x4]
1002728d:	mov    ecx,DWORD PTR [edi]
1002728f:	mov    DWORD PTR [eax],ecx
10027291:	mov    eax,DWORD PTR [edi]
10027293:	mov    ecx,DWORD PTR [edi+0x4]
10027296:	push   edi
10027297:	mov    DWORD PTR [eax+0x4],ecx
1002729a:	call   0x10042fe2
1002729f:	dec    DWORD PTR ds:0x10083000
100272a5:	pop    ecx
100272a6:	mov    eax,DWORD PTR [ebp+0x8]
100272a9:	mov    DWORD PTR [ebx],eax
100272ab:	mov    eax,DWORD PTR [ebp+0xc]
100272ae:	pop    edi
100272af:	mov    DWORD PTR [ebx+0x4],eax
100272b2:	mov    eax,ebx
100272b4:	pop    esi
100272b5:	leave  
100272b6:	ret    0x8
100272b9:	push   ebp
100272ba:	mov    ebp,esp
100272bc:	push   ecx
100272bd:	push   ecx
100272be:	mov    eax,DWORD PTR [ebp+0x8]
100272c1:	push   esi
100272c2:	push   edi
100272c3:	mov    edi,DWORD PTR [ebp+0xc]
100272c6:	lea    esi,[ebp+0x8]
100272c9:	mov    DWORD PTR [ebp-0x8],eax
100272cc:	call   0x100268eb
100272d1:	cmp    edi,DWORD PTR ds:0x10082ff0
100272d7:	je     0x100272f5
100272d9:	mov    eax,DWORD PTR [edi+0x4]
100272dc:	mov    ecx,DWORD PTR [edi]
100272de:	mov    DWORD PTR [eax],ecx
100272e0:	mov    eax,DWORD PTR [edi]
100272e2:	mov    ecx,DWORD PTR [edi+0x4]
100272e5:	push   edi
100272e6:	mov    DWORD PTR [eax+0x4],ecx
100272e9:	call   0x10042fe2
100272ee:	dec    DWORD PTR ds:0x10082ff4
100272f4:	pop    ecx
100272f5:	mov    eax,DWORD PTR [ebp+0x8]
100272f8:	mov    DWORD PTR [ebx],eax
100272fa:	mov    eax,DWORD PTR [ebp+0xc]
100272fd:	pop    edi
100272fe:	mov    DWORD PTR [ebx+0x4],eax
10027301:	mov    eax,ebx
10027303:	pop    esi
10027304:	leave  
10027305:	ret    0x8
10027308:	push   ebp
10027309:	mov    ebp,esp
1002730b:	push   ecx
1002730c:	push   ecx
1002730d:	mov    eax,DWORD PTR [ebp+0x8]
10027310:	push   esi
10027311:	push   edi
10027312:	mov    edi,DWORD PTR [ebp+0xc]
10027315:	lea    esi,[ebp+0x8]
10027318:	mov    DWORD PTR [ebp-0x8],eax
1002731b:	call   0x100268eb
10027320:	cmp    edi,DWORD PTR ds:0x10083008
10027326:	je     0x10027344
10027328:	mov    eax,DWORD PTR [edi+0x4]
1002732b:	mov    ecx,DWORD PTR [edi]
1002732d:	mov    DWORD PTR [eax],ecx
1002732f:	mov    eax,DWORD PTR [edi]
10027331:	mov    ecx,DWORD PTR [edi+0x4]
10027334:	push   edi
10027335:	mov    DWORD PTR [eax+0x4],ecx
10027338:	call   0x10042fe2
1002733d:	dec    DWORD PTR ds:0x1008300c
10027343:	pop    ecx
10027344:	mov    eax,DWORD PTR [ebp+0x8]
10027347:	mov    DWORD PTR [ebx],eax
10027349:	mov    eax,DWORD PTR [ebp+0xc]
1002734c:	pop    edi
1002734d:	mov    DWORD PTR [ebx+0x4],eax
10027350:	mov    eax,ebx
10027352:	pop    esi
10027353:	leave  
10027354:	ret    0x8
10027357:	push   ebp
10027358:	mov    ebp,esp
1002735a:	push   ecx
1002735b:	push   ecx
1002735c:	mov    eax,DWORD PTR [ebp+0x8]
1002735f:	push   esi
10027360:	push   edi
10027361:	mov    edi,DWORD PTR [ebp+0xc]
10027364:	lea    esi,[ebp+0x8]
10027367:	mov    DWORD PTR [ebp-0x8],eax
1002736a:	call   0x100268eb
1002736f:	cmp    edi,DWORD PTR ds:0x10082fe4
10027375:	je     0x10027393
10027377:	mov    eax,DWORD PTR [edi+0x4]
1002737a:	mov    ecx,DWORD PTR [edi]
1002737c:	mov    DWORD PTR [eax],ecx
1002737e:	mov    eax,DWORD PTR [edi]
10027380:	mov    ecx,DWORD PTR [edi+0x4]
10027383:	push   edi
10027384:	mov    DWORD PTR [eax+0x4],ecx
10027387:	call   0x10042fe2
1002738c:	dec    DWORD PTR ds:0x10082fe8
10027392:	pop    ecx
10027393:	mov    eax,DWORD PTR [ebp+0x8]
10027396:	mov    DWORD PTR [ebx],eax
10027398:	mov    eax,DWORD PTR [ebp+0xc]
1002739b:	pop    edi
1002739c:	mov    DWORD PTR [ebx+0x4],eax
1002739f:	mov    eax,ebx
100273a1:	pop    esi
100273a2:	leave  
100273a3:	ret    0x8
100273a6:	push   ebp
100273a7:	mov    ebp,esp
100273a9:	and    esp,0xfffffff8
100273ac:	push   0xffffffff
100273ae:	push   0x10063ad4
100273b3:	mov    eax,fs:0x0
100273b9:	push   eax
100273ba:	sub    esp,0x60
100273bd:	mov    eax,ds:0x100801ac
100273c2:	xor    eax,esp
100273c4:	mov    DWORD PTR [esp+0x58],eax
100273c8:	push   ebx
100273c9:	push   esi
100273ca:	push   edi
100273cb:	mov    eax,ds:0x100801ac
100273d0:	xor    eax,esp
100273d2:	push   eax
100273d3:	lea    eax,[esp+0x70]
100273d7:	mov    fs:0x0,eax
100273dd:	mov    edi,DWORD PTR [ebp+0x8]
100273e0:	push   0x10072ba8
100273e5:	mov    ebx,0x1006e7c4
100273ea:	push   0x7
100273ec:	mov    ecx,ebx
100273ee:	call   0x100042b4
100273f3:	pop    ecx
100273f4:	pop    ecx
100273f5:	push   eax
100273f6:	lea    ecx,[esp+0x34]
100273fa:	call   0x100011a7
100273ff:	xor    esi,esi
10027401:	push   esi
10027402:	lea    eax,[esp+0x34]
10027406:	push   eax
10027407:	lea    eax,[esp+0x54]
1002740b:	push   eax
1002740c:	mov    DWORD PTR [esp+0x84],esi
10027413:	mov    eax,DWORD PTR [edi+0x4]
10027416:	add    eax,0x18
10027419:	call   0x10008803
1002741e:	push   esi
1002741f:	push   0x1
10027421:	lea    ecx,[esp+0x38]
10027425:	mov    BYTE PTR [esp+0x80],0x2
1002742d:	call   0x100012f0
10027432:	push   0x1006dd18
10027437:	lea    esi,[esp+0x50]
1002743b:	call   0x10006825
10027440:	test   al,al
10027442:	pop    ecx
10027443:	jne    0x10027509
10027449:	push   0x10082dc8
1002744e:	mov    ecx,esi
10027450:	call   0x10001164
10027455:	test   al,al
10027457:	je     0x10027509
1002745d:	push   DWORD PTR [edi]
1002745f:	lea    ecx,[esp+0x18]
10027463:	call   0x10009035
10027468:	cmp    DWORD PTR [eax+0x18],0x10
1002746c:	jb     0x10027473
1002746e:	mov    eax,DWORD PTR [eax+0x4]
10027471:	jmp    0x10027476
10027473:	add    eax,0x4
10027476:	cmp    DWORD PTR [esp+0x64],0x10
1002747b:	mov    ecx,DWORD PTR [esp+0x50]
1002747f:	jae    0x10027485
10027481:	lea    ecx,[esp+0x50]
10027485:	push   eax
10027486:	push   ecx
10027487:	call   0x10002068
1002748c:	pop    ecx
1002748d:	pop    ecx
1002748e:	push   0x0
10027490:	push   0x1
10027492:	lea    ecx,[esp+0x1c]
10027496:	call   0x100012f0
1002749b:	push   0x10072bcc
100274a0:	push   0x7
100274a2:	mov    ecx,ebx
100274a4:	call   0x100042b4
100274a9:	pop    ecx
100274aa:	pop    ecx
100274ab:	push   eax
100274ac:	lea    ecx,[esp+0x18]
100274b0:	call   0x100011a7
100274b5:	lea    eax,[esp+0x14]
100274b9:	push   eax
100274ba:	mov    BYTE PTR [esp+0x7c],0x3
100274bf:	mov    eax,DWORD PTR [edi+0x4]
100274c2:	add    eax,0x18
100274c5:	push   eax
100274c6:	call   0x100085a1
100274cb:	push   0x0
100274cd:	push   0x1
100274cf:	lea    ecx,[esp+0x1c]
100274d3:	call   0x100012f0
100274d8:	mov    bl,0x1
100274da:	push   0x0
100274dc:	push   0x1
100274de:	lea    ecx,[esp+0x54]
100274e2:	call   0x100012f0
100274e7:	mov    al,bl
100274e9:	mov    ecx,DWORD PTR [esp+0x70]
100274ed:	mov    DWORD PTR fs:0x0,ecx
100274f4:	pop    ecx
100274f5:	pop    edi
100274f6:	pop    esi
100274f7:	pop    ebx
100274f8:	mov    ecx,DWORD PTR [esp+0x58]
100274fc:	xor    ecx,esp
100274fe:	call   0x10043615
10027503:	mov    esp,ebp
10027505:	pop    ebp
10027506:	ret    0x4
10027509:	xor    bl,bl
1002750b:	jmp    0x100274da
1002750d:	push   ebp
1002750e:	mov    ebp,esp
10027510:	and    esp,0xfffffff8
10027513:	push   0xffffffff
10027515:	push   0x10063a94
1002751a:	mov    eax,fs:0x0
10027520:	push   eax
10027521:	sub    esp,0x2c
10027524:	mov    eax,ds:0x100801ac
10027529:	xor    eax,esp
1002752b:	mov    DWORD PTR [esp+0x24],eax
1002752f:	push   ebx
10027530:	push   edi
10027531:	mov    eax,ds:0x100801ac
10027536:	xor    eax,esp
10027538:	push   eax
10027539:	lea    eax,[esp+0x38]
1002753d:	mov    fs:0x0,eax
10027543:	mov    ebx,DWORD PTR [ebp+0x8]
10027546:	lea    eax,[esp+0x14]
1002754a:	push   eax
1002754b:	mov    DWORD PTR [esp+0x14],ecx
1002754f:	mov    edi,edx
10027551:	call   0x100307c0
10027556:	pop    ecx
10027557:	and    DWORD PTR [esp+0x40],0x0
1002755c:	mov    eax,DWORD PTR [edi]
1002755e:	push   esi
1002755f:	lea    ecx,[esp+0x18]
10027563:	push   ecx
10027564:	push   eax
10027565:	call   0x10035070
1002756a:	mov    ecx,DWORD PTR [esi+0x70]
1002756d:	shr    ecx,0x2
10027570:	test   cl,0x1
10027573:	jne    0x10027577
10027575:	xor    al,al
10027577:	test   al,al
10027579:	je     0x100275ab
1002757b:	xor    eax,eax
1002757d:	inc    eax
1002757e:	push   0x0
10027580:	mov    DWORD PTR [ebx],eax
10027582:	push   eax
10027583:	lea    ecx,[esp+0x1c]
10027587:	call   0x100012f0
1002758c:	mov    al,0x1
1002758e:	mov    ecx,DWORD PTR [esp+0x38]
10027592:	mov    DWORD PTR fs:0x0,ecx
10027599:	pop    ecx
1002759a:	pop    edi
1002759b:	pop    ebx
1002759c:	mov    ecx,DWORD PTR [esp+0x24]
100275a0:	xor    ecx,esp
100275a2:	call   0x10043615
100275a7:	mov    esp,ebp
100275a9:	pop    ebp
100275aa:	ret    
100275ab:	mov    edi,DWORD PTR [edi]
100275ad:	push   esi
100275ae:	push   DWORD PTR [esp+0x14]
100275b2:	push   edi
100275b3:	call   0x10035070
100275b8:	test   al,al
100275ba:	je     0x100275c5
100275bc:	and    DWORD PTR [ebx],0x0
100275bf:	push   0x0
100275c1:	push   0x1
100275c3:	jmp    0x10027583
100275c5:	push   esi
100275c6:	push   DWORD PTR [esp+0x14]
100275ca:	push   0x10082ec4
100275cf:	call   0x10013032
100275d4:	test   al,al
100275d6:	je     0x100275f1
100275d8:	mov    DWORD PTR [ebx],0x2
100275de:	mov    bl,0x1
100275e0:	push   0x0
100275e2:	push   0x1
100275e4:	lea    ecx,[esp+0x1c]
100275e8:	call   0x100012f0
100275ed:	mov    al,bl
100275ef:	jmp    0x1002758e
100275f1:	xor    bl,bl
100275f3:	jmp    0x100275e0
100275f5:	push   ebp
100275f6:	mov    ebp,esp
100275f8:	and    esp,0xfffffff8
100275fb:	push   0xffffffff
100275fd:	push   0x10063a71
10027602:	mov    eax,fs:0x0
10027608:	push   eax
10027609:	sub    esp,0x20
1002760c:	push   ebx
1002760d:	mov    eax,ds:0x100801ac
10027612:	xor    eax,esp
10027614:	push   eax
10027615:	lea    eax,[esp+0x28]
10027619:	mov    fs:0x0,eax
1002761f:	mov    ebx,edx
10027621:	mov    eax,DWORD PTR [ebp+0x8]
10027624:	sub    eax,0x0
10027627:	je     0x1002766a
10027629:	dec    eax
1002762a:	je     0x1002763f
1002762c:	dec    eax
1002762d:	jne    0x10027676
1002762f:	push   ecx
10027630:	mov    ecx,DWORD PTR [ebp+0xc]
10027633:	push   0x10082ec4
10027638:	call   0x1001308d
1002763d:	jmp    0x10027676
1002763f:	lea    eax,[esp+0x8]
10027643:	push   eax
10027644:	call   0x100307c0
10027649:	pop    ecx
1002764a:	push   DWORD PTR [ebp+0xc]
1002764d:	and    DWORD PTR [esp+0x34],0x0
10027652:	push   ebx
10027653:	push   eax
10027654:	push   DWORD PTR [esi]
10027656:	call   0x10034ee0
1002765b:	push   0x0
1002765d:	push   0x1
1002765f:	lea    ecx,[esp+0x10]
10027663:	call   0x100012f0
10027668:	jmp    0x10027676
1002766a:	push   DWORD PTR [ebp+0xc]
1002766d:	push   ebx
1002766e:	push   ecx
1002766f:	push   DWORD PTR [esi]
10027671:	call   0x10034ee0
10027676:	mov    ecx,DWORD PTR [esp+0x28]
1002767a:	mov    DWORD PTR fs:0x0,ecx
10027681:	pop    ecx
10027682:	pop    ebx
10027683:	mov    esp,ebp
10027685:	pop    ebp
10027686:	ret    
10027687:	push   ebp
10027688:	sub    esp,0xc4
1002768e:	lea    ebp,[esp-0x4]
10027692:	mov    eax,ds:0x100801ac
10027697:	xor    eax,ebp
10027699:	mov    DWORD PTR [ebp+0xc4],eax
1002769f:	push   0x28
100276a1:	mov    eax,0x1006584b
100276a6:	call   0x10059e28
100276ab:	mov    eax,DWORD PTR [ebp+0xd0]
100276b1:	xor    esi,esi
100276b3:	mov    DWORD PTR [ebp-0x4],esi
100276b6:	push   DWORD PTR [eax]
100276b8:	lea    ecx,[ebp+0xa8]
100276be:	mov    DWORD PTR [ebp-0x1c],eax
100276c1:	call   0x10009035
100276c6:	lea    eax,[ebp-0x18]
100276c9:	push   esi
100276ca:	push   eax
100276cb:	mov    BYTE PTR [ebp-0x4],0x1
100276cf:	call   0x10002818
100276d4:	pop    ecx
100276d5:	pop    ecx
100276d6:	mov    ecx,DWORD PTR [eax]
100276d8:	mov    ebx,ecx
100276da:	mov    DWORD PTR [eax],esi
100276dc:	mov    DWORD PTR [ebp-0x14],ebx
100276df:	lea    eax,[ebp-0x18]
100276e2:	mov    BYTE PTR [ebp-0x4],0x2
100276e6:	call   0x1000428d
100276eb:	push   ebx
100276ec:	call   0x10002896
100276f1:	test   al,al
100276f3:	jne    0x10027703
100276f5:	lea    eax,[ebp-0x14]
100276f8:	call   0x1000428d
100276fd:	push   esi
100276fe:	jmp    0x100277ab
10027703:	lea    edi,[ebp+0x0]
10027706:	call   0x10012fed
1002770b:	lea    eax,[ebp-0x18]
1002770e:	push   eax
1002770f:	mov    esi,edi
10027711:	mov    edx,ebx
10027713:	lea    ecx,[ebp+0xa8]
10027719:	mov    BYTE PTR [ebp-0x4],0x3
1002771d:	call   0x1002750d
10027722:	test   al,al
10027724:	pop    ecx
10027725:	je     0x10027799
10027727:	call   0x1002f6a0
1002772c:	mov    edi,eax
1002772e:	mov    eax,DWORD PTR [ebp+0x84]
10027734:	cmp    eax,edx
10027736:	mov    DWORD PTR [ebp-0x2c],edi
10027739:	mov    DWORD PTR [ebp-0x28],edx
1002773c:	jb     0x1002774a
1002773e:	ja     0x10027799
10027740:	mov    eax,DWORD PTR [ebp+0x80]
10027746:	cmp    eax,edi
10027748:	ja     0x10027799
1002774a:	mov    eax,DWORD PTR [ebp+0x70]
1002774d:	shr    eax,0xa
10027750:	test   al,0x1
10027752:	jne    0x100277df
10027758:	mov    eax,DWORD PTR [ebx]
1002775a:	push   0x5
1002775c:	push   eax
1002775d:	lea    ecx,[ebp-0x24]
10027760:	call   0x100358a0
10027765:	mov    ecx,DWORD PTR [eax+0x4]
10027768:	cmp    ecx,DWORD PTR [ebp-0x28]
1002776b:	jb     0x100277df
1002776d:	ja     0x10027775
1002776f:	mov    eax,DWORD PTR [eax]
10027771:	cmp    eax,edi
10027773:	jbe    0x100277df
10027775:	cmp    DWORD PTR [ebp+0xc0],0x10
1002777c:	mov    eax,DWORD PTR [ebp+0xac]
10027782:	jae    0x1002778a
10027784:	lea    eax,[ebp+0xac]
1002778a:	push   eax
1002778b:	call   0x10002068
10027790:	push   0xc
10027792:	call   0x10038b80
10027797:	pop    ecx
10027798:	pop    ecx
10027799:	lea    esi,[ebp+0x0]
1002779c:	call   0x10003432
100277a1:	lea    eax,[ebp-0x14]
100277a4:	call   0x1000428d
100277a9:	push   0x0
100277ab:	push   0x1
100277ad:	lea    ecx,[ebp+0xa8]
100277b3:	call   0x100012f0
100277b8:	xor    al,al
100277ba:	mov    ecx,DWORD PTR [ebp-0xc]
100277bd:	mov    DWORD PTR fs:0x0,ecx
100277c4:	pop    ecx
100277c5:	pop    edi
100277c6:	pop    esi
100277c7:	pop    ebx
100277c8:	mov    ecx,DWORD PTR [ebp+0xc4]
100277ce:	xor    ecx,ebp
100277d0:	call   0x10043615
100277d5:	add    ebp,0xc8
100277db:	leave  
100277dc:	ret    0x4
100277df:	push   DWORD PTR [ebx]
100277e1:	call   0x10035bc0
100277e6:	mov    esi,0x2710
100277eb:	mov    ecx,esi
100277ed:	mul    ecx
100277ef:	add    eax,edi
100277f1:	adc    edx,DWORD PTR [ebp-0x28]
100277f4:	lea    ecx,[ebp-0x24]
100277f7:	push   ecx
100277f8:	mov    DWORD PTR [ebp-0x24],eax
100277fb:	mov    eax,DWORD PTR [ebx]
100277fd:	push   eax
100277fe:	push   0x5
10027800:	pop    ecx
10027801:	mov    DWORD PTR [ebp-0x20],edx
10027804:	call   0x100359b0
10027809:	mov    edi,DWORD PTR [ebp-0x1c]
1002780c:	push   DWORD PTR [edi]
1002780e:	call   0x10026826
10027813:	test   al,al
10027815:	pop    ecx
10027816:	jne    0x10027923
1002781c:	push   0x0
1002781e:	push   esi
1002781f:	push   DWORD PTR [ebp+0x7c]
10027822:	push   DWORD PTR [ebp+0x78]
10027825:	call   0x1005fa00
1002782a:	mov    ecx,DWORD PTR [edi+0x4]
1002782d:	and    DWORD PTR [ebp-0x1c],0x0
10027831:	mov    DWORD PTR [ebp-0x20],eax
10027834:	mov    DWORD PTR [ebp-0x34],eax
10027837:	call   0x10008b05
1002783c:	mov    DWORD PTR [ebp-0x30],eax
1002783f:	mov    BYTE PTR [ebp-0x4],0x4
10027843:	push   DWORD PTR [ebx]
10027845:	call   0x10035ed0
1002784a:	lea    ecx,[ebp-0x34]
1002784d:	push   ecx
1002784e:	lea    ecx,[ebp-0x1c]
10027851:	push   ecx
10027852:	push   eax
10027853:	push   DWORD PTR [ebp-0x20]
10027856:	lea    eax,[ebp+0xa8]
1002785c:	push   DWORD PTR [ebp-0x18]
1002785f:	lea    ecx,[ebp+0x0]
10027862:	push   eax
10027863:	push   edi
10027864:	call   0x10027935
10027869:	push   DWORD PTR [edi+0x4]
1002786c:	mov    ecx,DWORD PTR [ebp-0x30]
1002786f:	call   0x10008e33
10027874:	test   al,al
10027876:	je     0x100278ce
10027878:	cmp    DWORD PTR [edi+0x8],0x0
1002787c:	jne    0x100278ce
1002787e:	cmp    DWORD PTR [ebp+0xc0],0x10
10027885:	mov    eax,DWORD PTR [ebp+0xac]
1002788b:	jae    0x10027893
1002788d:	lea    eax,[ebp+0xac]
10027893:	push   eax
10027894:	call   0x10002068
10027899:	pop    ecx
1002789a:	lea    ecx,[ebp-0x30]
1002789d:	mov    BYTE PTR [ebp-0x4],0x3
100278a1:	call   0x1000a176
100278a6:	xor    bl,bl
100278a8:	lea    esi,[ebp+0x0]
100278ab:	call   0x10003432
100278b0:	lea    eax,[ebp-0x14]
100278b3:	call   0x1000428d
100278b8:	push   0x0
100278ba:	push   0x1
100278bc:	lea    ecx,[ebp+0xa8]
100278c2:	call   0x100012f0
100278c7:	mov    al,bl
100278c9:	jmp    0x100277ba
100278ce:	mov    eax,DWORD PTR [ebp-0x34]
100278d1:	push   0x0
100278d3:	cdq    
100278d4:	push   esi
100278d5:	push   edx
100278d6:	push   eax
100278d7:	call   0x1004f990
100278dc:	add    eax,DWORD PTR [ebp-0x2c]
100278df:	push   0x0
100278e1:	adc    edx,DWORD PTR [ebp-0x28]
100278e4:	mov    DWORD PTR [ebp-0x2c],eax
100278e7:	mov    eax,DWORD PTR [ebp-0x1c]
100278ea:	mov    DWORD PTR [ebp-0x28],edx
100278ed:	cdq    
100278ee:	push   esi
100278ef:	push   edx
100278f0:	push   eax
100278f1:	call   0x1004f990
100278f6:	mov    DWORD PTR [ebp-0x24],eax
100278f9:	lea    eax,[ebp-0x2c]
100278fc:	push   eax
100278fd:	push   DWORD PTR [ebp-0x18]
10027900:	mov    DWORD PTR [ebp-0x20],edx
10027903:	lea    edx,[ebp-0x24]
10027906:	mov    esi,ebx
10027908:	lea    ecx,[ebp+0xa8]
1002790e:	call   0x100275f5
10027913:	pop    ecx
10027914:	pop    ecx
10027915:	lea    ecx,[ebp-0x30]
10027918:	mov    BYTE PTR [ebp-0x4],0x3
1002791c:	call   0x1000a176
10027921:	jmp    0x10027928
10027923:	call   0x10002068
10027928:	mov    bl,0x1
1002792a:	jmp    0x100278a8
1002792f:	mov    eax,0x100277b8
10027934:	ret    
10027935:	push   ebp
10027936:	mov    ebp,esp
10027938:	and    esp,0xfffffff8
1002793b:	push   0xffffffff
1002793d:	push   0x100657fa
10027942:	mov    eax,fs:0x0
10027948:	push   eax
10027949:	sub    esp,0x120
1002794f:	mov    eax,ds:0x100801ac
10027954:	xor    eax,esp
10027956:	mov    DWORD PTR [esp+0x118],eax
1002795d:	push   ebx
1002795e:	push   esi
1002795f:	push   edi
10027960:	mov    eax,ds:0x100801ac
10027965:	xor    eax,esp
10027967:	push   eax
10027968:	lea    eax,[esp+0x130]
1002796f:	mov    fs:0x0,eax
10027975:	mov    eax,DWORD PTR [ebp+0x8]
10027978:	mov    DWORD PTR [esp+0x10],eax
1002797c:	mov    eax,DWORD PTR [ebp+0xc]
1002797f:	mov    DWORD PTR [esp+0x20],eax
10027983:	mov    eax,DWORD PTR [ebp+0x1c]
10027986:	mov    DWORD PTR [esp+0x1c],eax
1002798a:	mov    eax,DWORD PTR [ebp+0x20]
1002798d:	mov    edi,ecx
1002798f:	mov    DWORD PTR [esp+0x44],eax
10027993:	lea    eax,[edi+0x38]
10027996:	push   eax
10027997:	lea    ecx,[esp+0x84]
1002799e:	call   0x100011c9
100279a3:	lea    eax,[edi+0x54]
100279a6:	xor    ebx,ebx
100279a8:	push   eax
100279a9:	lea    ecx,[esp+0xd8]
100279b0:	mov    DWORD PTR [esp+0x13c],ebx
100279b7:	call   0x100011c9
100279bc:	mov    BYTE PTR [esp+0x138],0x1
100279c4:	mov    eax,DWORD PTR [edi+0x70]
100279c7:	lea    edx,[esp+0x80]
100279ce:	lea    ecx,[esp+0x10c]
100279d5:	mov    DWORD PTR [esp+0x14],eax
100279d9:	call   0x100337f0
100279de:	push   0x1006dd18
100279e3:	lea    esi,[esp+0x110]
100279ea:	mov    BYTE PTR [esp+0x13c],0x2
100279f2:	call   0x10006825
100279f7:	test   al,al
100279f9:	pop    ecx
100279fa:	jne    0x10027a0e
100279fc:	push   0xffffffff
100279fe:	push   ebx
100279ff:	mov    eax,esi
10027a01:	push   eax
10027a02:	lea    ecx,[esp+0x8c]
10027a09:	call   0x10001241
10027a0e:	mov    eax,DWORD PTR [esp+0x14]
10027a12:	shr    eax,0x3
10027a15:	test   al,0x1
10027a17:	mov    esi,0x1006e7c4
10027a1c:	je     0x10027b31
10027a22:	push   0x10072bf0
10027a27:	push   0x7
10027a29:	mov    ecx,esi
10027a2b:	call   0x100042b4
10027a30:	pop    ecx
10027a31:	pop    ecx
10027a32:	push   eax
10027a33:	lea    ecx,[esp+0xa0]
10027a3a:	call   0x100011a7
10027a3f:	push   ebx
10027a40:	lea    eax,[esp+0xa0]
10027a47:	push   eax
10027a48:	lea    eax,[esp+0xc0]
10027a4f:	push   eax
10027a50:	mov    eax,DWORD PTR [esp+0x1c]
10027a54:	mov    BYTE PTR [esp+0x144],0x3
10027a5c:	mov    eax,DWORD PTR [eax]
10027a5e:	add    eax,0x18
10027a61:	call   0x10008803
10027a66:	push   eax
10027a67:	push   DWORD PTR [esp+0x24]
10027a6b:	lea    ecx,[esp+0xf8]
10027a72:	mov    BYTE PTR [esp+0x140],0x4
10027a7a:	call   0x10028851
10027a7f:	mov    DWORD PTR [esp+0x24],eax
10027a83:	push   0x10072c20
10027a88:	push   0x5
10027a8a:	mov    ecx,0x10072c48
10027a8f:	mov    BYTE PTR [esp+0x140],0x5
10027a97:	call   0x100042b4
10027a9c:	push   eax
10027a9d:	lea    eax,[esp+0x8c]
10027aa4:	push   eax
10027aa5:	lea    eax,[esp+0x58]
10027aa9:	push   eax
10027aaa:	call   0x10006727
10027aaf:	add    esp,0x14
10027ab2:	mov    BYTE PTR [esp+0x138],0x6
10027aba:	push   DWORD PTR [esp+0x24]
10027abe:	push   eax
10027abf:	lea    eax,[esp+0x30]
10027ac3:	push   eax
10027ac4:	call   0x1000676d
10027ac9:	add    esp,0xc
10027acc:	push   0xffffffff
10027ace:	push   ebx
10027acf:	push   eax
10027ad0:	lea    ecx,[esp+0x8c]
10027ad7:	mov    BYTE PTR [esp+0x144],0x7
10027adf:	call   0x10001241
10027ae4:	push   ebx
10027ae5:	push   0x1
10027ae7:	lea    ecx,[esp+0x30]
10027aeb:	call   0x100012f0
10027af0:	push   ebx
10027af1:	push   0x1
10027af3:	lea    ecx,[esp+0x50]
10027af7:	call   0x100012f0
10027afc:	push   ebx
10027afd:	push   0x1
10027aff:	lea    ecx,[esp+0xf8]
10027b06:	call   0x100012f0
10027b0b:	push   ebx
10027b0c:	push   0x1
10027b0e:	lea    ecx,[esp+0xc0]
10027b15:	call   0x100012f0
10027b1a:	push   ebx
10027b1b:	push   0x1
10027b1d:	lea    ecx,[esp+0xa4]
10027b24:	mov    BYTE PTR [esp+0x140],0x2
10027b2c:	call   0x100012f0
10027b31:	mov    eax,DWORD PTR [esp+0x14]
10027b35:	shr    eax,0x4
10027b38:	test   al,0x1
10027b3a:	je     0x10027dcc
10027b40:	push   ebx
10027b41:	lea    ecx,[esp+0xa0]
10027b48:	mov    DWORD PTR [esp+0xb8],0xf
10027b53:	call   0x1000141c
10027b58:	push   ebx
10027b59:	lea    ecx,[esp+0xf4]
10027b60:	mov    DWORD PTR [esp+0x10c],0xf
10027b6b:	call   0x1000141c
10027b70:	push   ebx
10027b71:	lea    ecx,[esp+0xbc]
10027b78:	mov    DWORD PTR [esp+0x28],ebx
10027b7c:	mov    DWORD PTR [esp+0xd4],0xf
10027b87:	call   0x1000141c
10027b8c:	cmp    DWORD PTR [ebp+0x10],0x2
10027b90:	mov    BYTE PTR [esp+0x138],0xa
10027b98:	mov    eax,0x10072c50
10027b9d:	je     0x10027ba4
10027b9f:	mov    eax,0x10072c54
10027ba4:	push   eax
10027ba5:	lea    ecx,[esp+0x2c]
10027ba9:	call   0x100011a7
10027bae:	push   0x10072c58
10027bb3:	push   0x7
10027bb5:	mov    ecx,esi
10027bb7:	mov    BYTE PTR [esp+0x140],0xb
10027bbf:	call   0x100042b4
10027bc4:	pop    ecx
10027bc5:	pop    ecx
10027bc6:	push   eax
10027bc7:	lea    ecx,[esp+0x4c]
10027bcb:	call   0x100011a7
10027bd0:	push   ebx
10027bd1:	lea    eax,[esp+0x4c]
10027bd5:	push   eax
10027bd6:	lea    eax,[esp+0x6c]
10027bda:	push   eax
10027bdb:	mov    eax,DWORD PTR [esp+0x1c]
10027bdf:	mov    BYTE PTR [esp+0x144],0xc
10027be7:	mov    eax,DWORD PTR [eax]
10027be9:	add    eax,0x18
10027bec:	call   0x10008803
10027bf1:	push   DWORD PTR [esp+0x44]
10027bf5:	mov    BYTE PTR [esp+0x13c],0xd
10027bfd:	push   DWORD PTR [esp+0x20]
10027c01:	lea    ecx,[esp+0xc0]
10027c08:	push   ecx
10027c09:	lea    ecx,[esp+0xfc]
10027c10:	push   ecx
10027c11:	lea    ecx,[esp+0xac]
10027c18:	push   ecx
10027c19:	lea    ecx,[esp+0x38]
10027c1d:	push   ecx
10027c1e:	push   DWORD PTR [ebp+0x18]
10027c21:	add    edi,0x88
10027c27:	push   DWORD PTR [ebp+0x14]
10027c2a:	lea    ecx,[esp+0x48]
10027c2e:	push   edi
10027c2f:	push   ecx
10027c30:	lea    ecx,[esp+0xfc]
10027c37:	push   ecx
10027c38:	lea    ecx,[esp+0xac]
10027c3f:	push   ecx
10027c40:	mov    ecx,DWORD PTR [esp+0x50]
10027c44:	mov    edx,eax
10027c46:	call   0x10028283
10027c4b:	xor    edi,edi
10027c4d:	push   ebx
10027c4e:	inc    edi
10027c4f:	push   edi
10027c50:	lea    ecx,[esp+0x6c]
10027c54:	mov    BYTE PTR [esp+0x23],al
10027c58:	call   0x100012f0
10027c5d:	push   ebx
10027c5e:	push   edi
10027c5f:	lea    ecx,[esp+0x50]
10027c63:	call   0x100012f0
10027c68:	push   ebx
10027c69:	push   edi
10027c6a:	lea    ecx,[esp+0x30]
10027c6e:	mov    BYTE PTR [esp+0x140],0xa
10027c76:	call   0x100012f0
10027c7b:	cmp    BYTE PTR [esp+0x1b],bl
10027c7f:	je     0x10027d92
10027c85:	mov    eax,DWORD PTR [esp+0x24]
10027c89:	mov    ecx,eax
10027c8b:	shr    ecx,0x8
10027c8e:	test   cl,0x1
10027c91:	je     0x10027d5e
10027c97:	push   0x24
10027c99:	call   0x10043196
10027c9e:	pop    ecx
10027c9f:	mov    DWORD PTR [esp+0x1c],eax
10027ca3:	cmp    eax,ebx
10027ca5:	mov    BYTE PTR [esp+0x138],0xe
10027cad:	je     0x10027cb9
10027caf:	push   eax
10027cb0:	call   0x100079b2
10027cb5:	mov    esi,eax
10027cb7:	jmp    0x10027cbb
10027cb9:	xor    esi,esi
10027cbb:	mov    eax,DWORD PTR [esp+0x10]
10027cbf:	mov    BYTE PTR [esp+0x138],0xa
10027cc7:	mov    edi,DWORD PTR [eax+0xc]
10027cca:	cmp    esi,edi
10027ccc:	je     0x10027cd7
10027cce:	cmp    edi,ebx
10027cd0:	je     0x10027cd7
10027cd2:	call   0x1000a38e
10027cd7:	cmp    DWORD PTR [esp+0xd0],0x10
10027cdf:	mov    eax,DWORD PTR [esp+0x10]
10027ce3:	mov    DWORD PTR [eax+0xc],esi
10027ce6:	mov    eax,DWORD PTR [esp+0xbc]
10027ced:	jae    0x10027cf6
10027cef:	lea    eax,[esp+0xbc]
10027cf6:	mov    esi,DWORD PTR [esp+0x10]
10027cfa:	mov    edi,DWORD PTR [esp+0xcc]
10027d01:	push   eax
10027d02:	mov    eax,DWORD PTR [esi+0xc]
10027d05:	call   0x100079fa
10027d0a:	mov    BYTE PTR [esi+0x14],0x1
10027d0e:	xor    esi,esi
10027d10:	push   ebx
10027d11:	inc    esi
10027d12:	push   esi
10027d13:	lea    ecx,[esp+0xc0]
10027d1a:	call   0x100012f0
10027d1f:	push   ebx
10027d20:	push   esi
10027d21:	lea    ecx,[esp+0xf8]
10027d28:	call   0x100012f0
10027d2d:	push   ebx
10027d2e:	push   esi
10027d2f:	lea    ecx,[esp+0xa4]
10027d36:	call   0x100012f0
10027d3b:	push   ebx
10027d3c:	push   esi
10027d3d:	lea    ecx,[esp+0x114]
10027d44:	call   0x100012f0
10027d49:	push   ebx
10027d4a:	push   esi
10027d4b:	lea    ecx,[esp+0xdc]
10027d52:	call   0x100012f0
10027d57:	push   ebx
10027d58:	push   esi
10027d59:	jmp    0x1002824f
10027d5e:	push   0xffffffff
10027d60:	mov    DWORD PTR [esp+0x18],eax
10027d64:	push   ebx
10027d65:	lea    eax,[esp+0xa4]
10027d6c:	push   eax
10027d6d:	lea    ecx,[esp+0x8c]
10027d74:	call   0x10001241
10027d79:	push   0xffffffff
10027d7b:	push   ebx
10027d7c:	lea    eax,[esp+0xf8]
10027d83:	push   eax
10027d84:	lea    ecx,[esp+0xe0]
10027d8b:	call   0x10001241
10027d90:	jmp    0x10027d9a
10027d92:	push   0x5
10027d94:	call   0x10038b80
10027d99:	pop    ecx
10027d9a:	push   ebx
10027d9b:	push   edi
10027d9c:	lea    ecx,[esp+0xc0]
10027da3:	call   0x100012f0
10027da8:	push   ebx
10027da9:	push   edi
10027daa:	lea    ecx,[esp+0xf8]
10027db1:	call   0x100012f0
10027db6:	push   ebx
10027db7:	push   edi
10027db8:	lea    ecx,[esp+0xa4]
10027dbf:	mov    BYTE PTR [esp+0x140],0x2
10027dc7:	call   0x100012f0
10027dcc:	mov    eax,DWORD PTR [esp+0x14]
10027dd0:	shr    eax,0x5
10027dd3:	test   al,0x1
10027dd5:	je     0x10028130
10027ddb:	push   0x1006dd18
10027de0:	lea    esi,[esp+0x84]
10027de7:	call   0x10006825
10027dec:	test   al,al
10027dee:	pop    ecx
10027def:	jne    0x1002822e
10027df5:	cmp    DWORD PTR [ebp+0x10],0x2
10027df9:	jne    0x10027e72
10027dfb:	cmp    DWORD PTR [esp+0x98],0x10
10027e03:	mov    eax,DWORD PTR [esp+0x84]
10027e0a:	jae    0x10027e13
10027e0c:	lea    eax,[esp+0x84]
10027e13:	push   eax
10027e14:	lea    ecx,[esp+0x2c]
10027e18:	call   0x100011a7
10027e1d:	push   0x1f4
10027e22:	mov    BYTE PTR [esp+0x13c],0xf
10027e2a:	push   DWORD PTR ds:0x10082f54
10027e30:	call   DWORD PTR ds:0x1006707c
10027e36:	test   eax,eax
10027e38:	jne    0x10027e5e
10027e3a:	mov    eax,ds:0x10082f4c
10027e3f:	mov    edi,0x10082f48
10027e44:	push   eax
10027e45:	mov    ecx,edi
10027e47:	push   ecx
10027e48:	lea    eax,[esp+0x30]
10027e4c:	push   eax
10027e4d:	call   0x1001992c
10027e52:	push   DWORD PTR ds:0x10082f54
10027e58:	call   DWORD PTR ds:0x10067090
10027e5e:	push   ebx
10027e5f:	push   0x1
10027e61:	lea    ecx,[esp+0x30]
10027e65:	mov    BYTE PTR [esp+0x140],0x2
10027e6d:	call   0x100012f0
10027e72:	cmp    DWORD PTR [esp+0x98],0x10
10027e7a:	mov    ecx,DWORD PTR [esp+0x84]
10027e81:	jae    0x10027e8a
10027e83:	lea    ecx,[esp+0x84]
10027e8a:	mov    eax,DWORD PTR [esp+0x20]
10027e8e:	cmp    DWORD PTR [eax+0x18],0x10
10027e92:	jb     0x10027e99
10027e94:	mov    eax,DWORD PTR [eax+0x4]
10027e97:	jmp    0x10027e9c
10027e99:	add    eax,0x4
10027e9c:	push   ecx
10027e9d:	push   eax
10027e9e:	call   0x10002068
10027ea3:	push   0x10072c8c
10027ea8:	push   0xc
10027eaa:	mov    ecx,0x10072cbc
10027eaf:	call   0x100042b4
10027eb4:	add    esp,0x10
10027eb7:	push   eax
10027eb8:	lea    ecx,[esp+0xa0]
10027ebf:	call   0x100011a7
10027ec4:	push   0x10072ccc
10027ec9:	push   0x3
10027ecb:	mov    ecx,0x10072cf8
10027ed0:	mov    BYTE PTR [esp+0x140],0x10
10027ed8:	call   0x100042b4
10027edd:	pop    ecx
10027ede:	pop    ecx
10027edf:	push   eax
10027ee0:	lea    ecx,[esp+0x4c]
10027ee4:	call   0x100011a7
10027ee9:	push   0x10072cfc
10027eee:	push   0x3
10027ef0:	mov    ecx,0x10072d24
10027ef5:	mov    BYTE PTR [esp+0x140],0x11
10027efd:	call   0x100042b4
10027f02:	pop    ecx
10027f03:	pop    ecx
10027f04:	push   eax
10027f05:	lea    ecx,[esp+0x2c]
10027f09:	call   0x100011a7
10027f0e:	mov    edi,DWORD PTR [esp+0x10]
10027f12:	push   ebx
10027f13:	lea    eax,[esp+0xa0]
10027f1a:	push   eax
10027f1b:	lea    eax,[esp+0x50]
10027f1f:	mov    BYTE PTR [esp+0x140],0x12
10027f27:	add    edi,0x8
10027f2a:	push   eax
10027f2b:	lea    ecx,[esp+0x34]
10027f2f:	mov    DWORD PTR [esp+0x28],edi
10027f33:	call   0x10009a7b
10027f38:	add    esp,0xc
10027f3b:	mov    ebx,eax
10027f3d:	call   0x1000cea7
10027f42:	xor    edi,edi
10027f44:	xor    ebx,ebx
10027f46:	push   edi
10027f47:	inc    ebx
10027f48:	push   ebx
10027f49:	lea    ecx,[esp+0x30]
10027f4d:	call   0x100012f0
10027f52:	push   edi
10027f53:	push   ebx
10027f54:	lea    ecx,[esp+0x50]
10027f58:	call   0x100012f0
10027f5d:	push   edi
10027f5e:	push   ebx
10027f5f:	lea    ecx,[esp+0xa4]
10027f66:	mov    BYTE PTR [esp+0x140],0x2
10027f6e:	call   0x100012f0
10027f73:	push   0x10072d28
10027f78:	push   0x7
10027f7a:	mov    ecx,0x1006e7c4
10027f7f:	call   0x100042b4
10027f84:	pop    ecx
10027f85:	pop    ecx
10027f86:	push   eax
10027f87:	lea    ecx,[esp+0x2c]
10027f8b:	call   0x100011a7
10027f90:	push   edi
10027f91:	lea    eax,[esp+0x2c]
10027f95:	push   eax
10027f96:	lea    eax,[esp+0xa4]
10027f9d:	push   eax
10027f9e:	mov    eax,DWORD PTR [esp+0x1c]
10027fa2:	mov    BYTE PTR [esp+0x144],0x13
10027faa:	mov    eax,DWORD PTR [eax]
10027fac:	add    eax,0x18
10027faf:	call   0x10008803
10027fb4:	push   edi
10027fb5:	push   ebx
10027fb6:	lea    ecx,[esp+0x30]
10027fba:	mov    BYTE PTR [esp+0x140],0x15
10027fc2:	call   0x100012f0
10027fc7:	push   0x1006dd18
10027fcc:	lea    esi,[esp+0xa0]
10027fd3:	call   0x10006825
10027fd8:	test   al,al
10027fda:	pop    ecx
10027fdb:	jne    0x10028015
10027fdd:	push   0x1006dcf8
10027fe2:	lea    ecx,[esp+0x4c]
10027fe6:	call   0x100011a7
10027feb:	push   edi
10027fec:	mov    eax,esi
10027fee:	push   eax
10027fef:	lea    ebx,[esp+0x50]
10027ff3:	mov    edi,0x10082dc8
10027ff8:	mov    BYTE PTR [esp+0x140],0x16
10028000:	call   0x10019baa
10028005:	push   0x0
10028007:	push   0x1
10028009:	mov    ecx,ebx
1002800b:	call   0x100012f0
10028010:	xor    ebx,ebx
10028012:	inc    ebx
10028013:	xor    edi,edi
10028015:	push   edi
10028016:	push   ebx
10028017:	lea    ecx,[esp+0xa4]
1002801e:	mov    BYTE PTR [esp+0x140],0x2
10028026:	call   0x100012f0
1002802b:	push   0x10072d68
10028030:	push   0x8
10028032:	mov    ecx,0x10072d9c
10028037:	call   0x100042b4
1002803c:	pop    ecx
1002803d:	pop    ecx
1002803e:	push   eax
1002803f:	lea    ecx,[esp+0x2c]
10028043:	call   0x100011a7
10028048:	mov    BYTE PTR [esp+0x138],0x17
10028050:	mov    esi,DWORD PTR [esp+0x1c]
10028054:	mov    eax,DWORD PTR [esi]
10028056:	push   edi
10028057:	lea    ecx,[esp+0x2c]
1002805b:	push   ecx
1002805c:	lea    edx,[eax+0x20]
1002805f:	lea    ecx,[esp+0x88]
10028066:	call   0x10008298
1002806b:	push   edi
1002806c:	push   ebx
1002806d:	lea    ecx,[esp+0x30]
10028071:	mov    BYTE PTR [esp+0x140],0x2
10028079:	call   0x100012f0
1002807e:	push   0x1006dd1c
10028083:	lea    ecx,[esp+0x4c]
10028087:	call   0x100011a7
1002808c:	push   0x10072da8
10028091:	push   0xe
10028093:	mov    ecx,0x1006eae4
10028098:	mov    BYTE PTR [esp+0x140],0x18
100280a0:	call   0x100042b4
100280a5:	pop    ecx
100280a6:	pop    ecx
100280a7:	push   eax
100280a8:	lea    ecx,[esp+0x2c]
100280ac:	call   0x100011a7
100280b1:	mov    BYTE PTR [esp+0x138],0x19
100280b9:	mov    eax,DWORD PTR [esi]
100280bb:	push   edi
100280bc:	lea    ecx,[esp+0x2c]
100280c0:	push   ecx
100280c1:	lea    edx,[eax+0x20]
100280c4:	lea    ecx,[esp+0x50]
100280c8:	call   0x10008298
100280cd:	push   edi
100280ce:	push   ebx
100280cf:	lea    ecx,[esp+0x30]
100280d3:	call   0x100012f0
100280d8:	push   edi
100280d9:	push   ebx
100280da:	lea    ecx,[esp+0x50]
100280de:	mov    BYTE PTR [esp+0x140],0x2
100280e6:	call   0x100012f0
100280eb:	mov    eax,DWORD PTR [esp+0x10]
100280ef:	push   0x1006dd18
100280f4:	lea    esi,[esp+0xd8]
100280fb:	mov    BYTE PTR [eax+0x14],bl
100280fe:	call   0x10006825
10028103:	test   al,al
10028105:	pop    ecx
10028106:	jne    0x10028217
1002810c:	mov    eax,DWORD PTR [esp+0x14]
10028110:	sar    eax,0x6
10028113:	and    eax,0x3
10028116:	push   eax
10028117:	lea    eax,[esp+0x84]
1002811e:	push   eax
1002811f:	mov    ebx,esi
10028121:	mov    edi,0x10082f58
10028126:	call   0x10019baa
1002812b:	jmp    0x10028217
10028130:	mov    eax,DWORD PTR [esp+0x20]
10028134:	cmp    DWORD PTR [eax+0x18],0x10
10028138:	jb     0x1002813f
1002813a:	mov    eax,DWORD PTR [eax+0x4]
1002813d:	jmp    0x10028142
1002813f:	add    eax,0x4
10028142:	push   eax
10028143:	call   0x10002068
10028148:	mov    edi,DWORD PTR [esp+0x18]
1002814c:	sar    edi,0x6
1002814f:	and    edi,0x3
10028152:	pop    ecx
10028153:	mov    DWORD PTR [esp+0x1c],edi
10028157:	je     0x10028219
1002815d:	push   0x10072de8
10028162:	push   0x7
10028164:	mov    ecx,esi
10028166:	call   0x100042b4
1002816b:	pop    ecx
1002816c:	pop    ecx
1002816d:	push   eax
1002816e:	lea    ecx,[esp+0x2c]
10028172:	call   0x100011a7
10028177:	lea    eax,[esp+0x28]
1002817b:	push   eax
1002817c:	mov    eax,DWORD PTR [esp+0x14]
10028180:	mov    BYTE PTR [esp+0x13c],0x1a
10028188:	mov    eax,DWORD PTR [eax+0x4]
1002818b:	add    eax,0x18
1002818e:	push   eax
1002818f:	call   0x100085a1
10028194:	push   ebx
10028195:	push   0x1
10028197:	lea    ecx,[esp+0x30]
1002819b:	mov    BYTE PTR [esp+0x140],0x2
100281a3:	call   0x100012f0
100281a8:	push   edi
100281a9:	push   DWORD PTR [esp+0x24]
100281ad:	lea    ebx,[esp+0xdc]
100281b4:	mov    edi,0x10082f58
100281b9:	call   0x10019baa
100281be:	cmp    DWORD PTR [esp+0x1c],0x1
100281c3:	jne    0x10028217
100281c5:	push   0x10072e14
100281ca:	push   0x7
100281cc:	mov    ecx,0x1006e7c4
100281d1:	call   0x100042b4
100281d6:	pop    ecx
100281d7:	pop    ecx
100281d8:	push   eax
100281d9:	lea    ecx,[esp+0x2c]
100281dd:	call   0x100011a7
100281e2:	push   0x0
100281e4:	lea    eax,[esp+0x2c]
100281e8:	push   eax
100281e9:	mov    eax,DWORD PTR [esp+0x18]
100281ed:	mov    BYTE PTR [esp+0x140],0x1b
100281f5:	mov    edx,DWORD PTR [eax+0x4]
100281f8:	add    edx,0x18
100281fb:	mov    ecx,ebx
100281fd:	call   0x10008298
10028202:	push   0x0
10028204:	push   0x1
10028206:	lea    ecx,[esp+0x30]
1002820a:	mov    BYTE PTR [esp+0x140],0x2
10028212:	call   0x100012f0
10028217:	xor    ebx,ebx
10028219:	mov    eax,DWORD PTR [esp+0x14]
1002821d:	shr    eax,0x9
10028220:	test   al,0x1
10028222:	je     0x1002822e
10028224:	push   0x10082fa0
10028229:	call   0x1001a956
1002822e:	push   ebx
1002822f:	push   0x1
10028231:	lea    ecx,[esp+0x114]
10028238:	call   0x100012f0
1002823d:	push   ebx
1002823e:	push   0x1
10028240:	lea    ecx,[esp+0xdc]
10028247:	call   0x100012f0
1002824c:	push   ebx
1002824d:	push   0x1
1002824f:	lea    ecx,[esp+0x88]
10028256:	call   0x100012f0
1002825b:	mov    al,0x1
1002825d:	mov    ecx,DWORD PTR [esp+0x130]
10028264:	mov    DWORD PTR fs:0x0,ecx
1002826b:	pop    ecx
1002826c:	pop    edi
1002826d:	pop    esi
1002826e:	pop    ebx
1002826f:	mov    ecx,DWORD PTR [esp+0x118]
10028276:	xor    ecx,esp
10028278:	call   0x10043615
1002827d:	mov    esp,ebp
1002827f:	pop    ebp
10028280:	ret    0x1c
10028283:	push   0x13c
10028288:	mov    eax,0x10065339
1002828d:	call   0x10059e94
10028292:	mov    eax,DWORD PTR [ebp+0xc]
10028295:	mov    ebx,DWORD PTR [ebp+0x8]
10028298:	mov    DWORD PTR [ebp-0xc0],eax
1002829e:	mov    eax,DWORD PTR [ebp+0x10]
100282a1:	and    DWORD PTR [ebp-0x4],0x0
100282a5:	mov    DWORD PTR [ebp-0xc8],eax
100282ab:	mov    eax,DWORD PTR [ebp+0x14]
100282ae:	mov    DWORD PTR [ebp-0xc4],eax
100282b4:	mov    eax,DWORD PTR [ebp+0x20]
100282b7:	mov    DWORD PTR [ebp-0x104],eax
100282bd:	mov    eax,DWORD PTR [ebp+0x24]
100282c0:	mov    DWORD PTR [ebp-0x108],eax
100282c6:	mov    eax,DWORD PTR [ebp+0x28]
100282c9:	mov    DWORD PTR [ebp-0x100],eax
100282cf:	mov    eax,DWORD PTR [ebp+0x2c]
100282d2:	mov    DWORD PTR [ebp-0xf8],eax
100282d8:	mov    eax,DWORD PTR [ebp+0x30]
100282db:	mov    DWORD PTR [ebp-0xf4],eax
100282e1:	mov    eax,DWORD PTR [ebp+0x34]
100282e4:	mov    edi,ecx
100282e6:	lea    ecx,[ebp-0xb8]
100282ec:	mov    esi,edx
100282ee:	mov    DWORD PTR [ebp-0xfc],eax
100282f4:	call   0x100186d5
100282f9:	cmp    DWORD PTR [ebp-0xa0],0x10
10028300:	mov    ecx,DWORD PTR [ebp-0xb4]
10028306:	jae    0x1002830e
10028308:	lea    ecx,[ebp-0xb4]
1002830e:	cmp    DWORD PTR [edi+0x18],0x10
10028312:	jb     0x10028319
10028314:	mov    eax,DWORD PTR [edi+0x4]
10028317:	jmp    0x1002831c
10028319:	lea    eax,[edi+0x4]
1002831c:	push   ecx
1002831d:	push   eax
1002831e:	call   0x10002068
10028323:	pop    ecx
10028324:	pop    ecx
10028325:	push   0x0
10028327:	lea    ecx,[ebp-0x9c]
1002832d:	mov    DWORD PTR [ebp-0x84],0xf
10028337:	call   0x1000141c
1002833c:	push   0x10072e54
10028341:	push   0x6
10028343:	mov    ecx,0x10072e8c
10028348:	mov    BYTE PTR [ebp-0x4],0x2
1002834c:	call   0x100042b4
10028351:	pop    ecx
10028352:	pop    ecx
10028353:	push   eax
10028354:	lea    eax,[ebp-0x9c]
1002835a:	push   eax
1002835b:	call   0x10004126
10028360:	push   edi
10028361:	lea    ecx,[ebp-0xf0]
10028367:	call   0x10030ca0
1002836c:	pop    ecx
1002836d:	mov    BYTE PTR [ebp-0x4],0x3
10028371:	cmp    DWORD PTR [eax+0x18],0x10
10028375:	jb     0x1002837c
10028377:	mov    eax,DWORD PTR [eax+0x4]
1002837a:	jmp    0x1002837f
1002837c:	add    eax,0x4
1002837f:	push   eax
10028380:	lea    eax,[ebp-0x9c]
10028386:	push   eax
10028387:	call   0x10004126
1002838c:	push   0x0
1002838e:	push   0x1
10028390:	lea    ecx,[ebp-0xf0]
10028396:	mov    BYTE PTR [ebp-0x4],0x2
1002839a:	call   0x100012f0
1002839f:	mov    edi,0x1006dd18
100283a4:	push   edi
100283a5:	call   0x10006825
100283aa:	test   al,al
100283ac:	pop    ecx
100283ad:	jne    0x1002840e
100283af:	push   0x10072e94
100283b4:	push   0x6
100283b6:	mov    ecx,0x10072ed4
100283bb:	call   0x100042b4
100283c0:	pop    ecx
100283c1:	pop    ecx
100283c2:	push   eax
100283c3:	lea    eax,[ebp-0x9c]
100283c9:	push   eax
100283ca:	call   0x10004126
100283cf:	push   esi
100283d0:	lea    ecx,[ebp-0xf0]
100283d6:	call   0x10030ca0
100283db:	pop    ecx
100283dc:	mov    BYTE PTR [ebp-0x4],0x4
100283e0:	cmp    DWORD PTR [eax+0x18],0x10
100283e4:	jb     0x100283eb
100283e6:	mov    eax,DWORD PTR [eax+0x4]
100283e9:	jmp    0x100283ee
100283eb:	add    eax,0x4
100283ee:	push   eax
100283ef:	lea    eax,[ebp-0x9c]
100283f5:	push   eax
100283f6:	call   0x10004126
100283fb:	push   0x0
100283fd:	push   0x1
100283ff:	lea    ecx,[ebp-0xf0]
10028405:	mov    BYTE PTR [ebp-0x4],0x2
10028409:	call   0x100012f0
1002840e:	push   edi
1002840f:	mov    esi,ebx
10028411:	call   0x10006825
10028416:	test   al,al
10028418:	pop    ecx
10028419:	jne    0x1002847a
1002841b:	push   0x10072edc
10028420:	push   0x6
10028422:	mov    ecx,0x10072f04
10028427:	call   0x100042b4
1002842c:	pop    ecx
1002842d:	pop    ecx
1002842e:	push   eax
1002842f:	lea    eax,[ebp-0x9c]
10028435:	push   eax
10028436:	call   0x10004126
1002843b:	push   ebx
1002843c:	lea    ecx,[ebp-0xf0]
10028442:	call   0x10030ca0
10028447:	pop    ecx
10028448:	mov    BYTE PTR [ebp-0x4],0x5
1002844c:	cmp    DWORD PTR [eax+0x18],0x10
10028450:	jb     0x10028457
10028452:	mov    eax,DWORD PTR [eax+0x4]
10028455:	jmp    0x1002845a
10028457:	add    eax,0x4
1002845a:	push   eax
1002845b:	lea    eax,[ebp-0x9c]
10028461:	push   eax
10028462:	call   0x10004126
10028467:	push   0x0
10028469:	push   0x1
1002846b:	lea    ecx,[ebp-0xf0]
10028471:	mov    BYTE PTR [ebp-0x4],0x2
10028475:	call   0x100012f0
1002847a:	mov    esi,DWORD PTR [ebp-0xc0]
10028480:	push   edi
10028481:	call   0x10006825
10028486:	test   al,al
10028488:	pop    ecx
10028489:	jne    0x100284ea
1002848b:	push   0x10072f0c
10028490:	push   0x6
10028492:	mov    ecx,0x10072f34
10028497:	call   0x100042b4
1002849c:	pop    ecx
1002849d:	pop    ecx
1002849e:	push   eax
1002849f:	lea    eax,[ebp-0x9c]
100284a5:	push   eax
100284a6:	call   0x10004126
100284ab:	push   esi
100284ac:	lea    ecx,[ebp-0xf0]
100284b2:	call   0x10030ca0
100284b7:	pop    ecx
100284b8:	mov    BYTE PTR [ebp-0x4],0x6
100284bc:	cmp    DWORD PTR [eax+0x18],0x10
100284c0:	jb     0x100284c7
100284c2:	mov    eax,DWORD PTR [eax+0x4]
100284c5:	jmp    0x100284ca
100284c7:	add    eax,0x4
100284ca:	push   eax
100284cb:	lea    eax,[ebp-0x9c]
100284d1:	push   eax
100284d2:	call   0x10004126
100284d7:	push   0x0
100284d9:	push   0x1
100284db:	lea    ecx,[ebp-0xf0]
100284e1:	mov    BYTE PTR [ebp-0x4],0x2
100284e5:	call   0x100012f0
100284ea:	mov    esi,DWORD PTR [ebp-0xc8]
100284f0:	push   edi
100284f1:	call   0x10006825
100284f6:	test   al,al
100284f8:	pop    ecx
100284f9:	jne    0x1002855a
100284fb:	push   0x10072f3c
10028500:	push   0x6
10028502:	mov    ecx,0x10072f7c
10028507:	call   0x100042b4
1002850c:	pop    ecx
1002850d:	pop    ecx
1002850e:	push   eax
1002850f:	lea    eax,[ebp-0x9c]
10028515:	push   eax
10028516:	call   0x10004126
1002851b:	push   esi
1002851c:	lea    ecx,[ebp-0xf0]
10028522:	call   0x10030ca0
10028527:	pop    ecx
10028528:	mov    BYTE PTR [ebp-0x4],0x7
1002852c:	cmp    DWORD PTR [eax+0x18],0x10
10028530:	jb     0x10028537
10028532:	mov    eax,DWORD PTR [eax+0x4]
10028535:	jmp    0x1002853a
10028537:	add    eax,0x4
1002853a:	push   eax
1002853b:	lea    eax,[ebp-0x9c]
10028541:	push   eax
10028542:	call   0x10004126
10028547:	push   0x0
10028549:	push   0x1
1002854b:	lea    ecx,[ebp-0xf0]
10028551:	mov    BYTE PTR [ebp-0x4],0x2
10028555:	call   0x100012f0
1002855a:	mov    esi,DWORD PTR [ebp-0xc4]
10028560:	push   edi
10028561:	call   0x10006825
10028566:	test   al,al
10028568:	pop    ecx
10028569:	jne    0x1002859c
1002856b:	push   0x10072f84
10028570:	push   0x6
10028572:	mov    ecx,0x10072fa8
10028577:	call   0x100042b4
1002857c:	pop    ecx
1002857d:	pop    ecx
1002857e:	push   eax
1002857f:	lea    eax,[ebp-0x9c]
10028585:	push   eax
10028586:	call   0x10004126
1002858b:	push   0xffffffff
1002858d:	mov    eax,esi
1002858f:	push   0x0
10028591:	lea    esi,[ebp-0x9c]
10028597:	call   0x10004cbe
1002859c:	push   DWORD PTR [ebp+0x1c]
1002859f:	mov    esi,0x10082fa0
100285a4:	sub    esp,0xc
100285a7:	mov    ebx,esp
100285a9:	mov    DWORD PTR [ebp-0xc4],esp
100285af:	call   0x1001a9b1
100285b4:	lea    ecx,[ebp-0xf0]
100285ba:	call   0x1001aa25
100285bf:	add    esp,0x10
100285c2:	push   0xffffffff
100285c4:	xor    ebx,ebx
100285c6:	push   ebx
100285c7:	lea    esi,[ebp-0x9c]
100285cd:	mov    BYTE PTR [ebp-0x4],0x8
100285d1:	call   0x10004cbe
100285d6:	push   ebx
100285d7:	push   0x1
100285d9:	lea    ecx,[ebp-0xf0]
100285df:	mov    BYTE PTR [ebp-0x4],0x2
100285e3:	call   0x100012f0
100285e8:	push   0x10072fb0
100285ed:	push   0x5
100285ef:	mov    ecx,0x10072fe0
100285f4:	call   0x100042b4
100285f9:	pop    ecx
100285fa:	pop    ecx
100285fb:	push   eax
100285fc:	mov    eax,esi
100285fe:	push   eax
100285ff:	call   0x10004126
10028604:	push   0xa
10028606:	lea    eax,[ebp-0x80]
10028609:	push   eax
1002860a:	push   DWORD PTR [ebp+0x18]
1002860d:	call   0x10045cb6
10028612:	add    esp,0xc
10028615:	push   eax
10028616:	mov    eax,esi
10028618:	push   eax
10028619:	call   0x10004126
1002861e:	cmp    DWORD PTR [ebp-0x84],0x10
10028625:	mov    eax,DWORD PTR [ebp-0x98]
1002862b:	jae    0x10028633
1002862d:	lea    eax,[ebp-0x98]
10028633:	push   eax
10028634:	lea    ecx,[ebp-0xf0]
1002863a:	call   0x100011a7
1002863f:	mov    BYTE PTR [ebp-0x4],0x9
10028643:	push   DWORD PTR ds:0x10082dfc
10028649:	lea    ecx,[ebp-0x144]
1002864f:	call   0x100011a7
10028654:	push   0xbb8
10028659:	lea    eax,[ebp-0xc8]
1002865f:	push   eax
10028660:	lea    eax,[ebp-0xf0]
10028666:	push   eax
10028667:	lea    eax,[ebp-0xb8]
1002866d:	push   eax
1002866e:	lea    eax,[ebp-0xc4]
10028674:	push   eax
10028675:	lea    edx,[ebp-0x144]
1002867b:	mov    BYTE PTR [ebp-0x4],0xa
1002867f:	call   0x10030b80
10028684:	mov    ecx,DWORD PTR [eax]
10028686:	mov    esi,ecx
10028688:	add    esp,0x14
1002868b:	mov    DWORD PTR [ebp-0xc0],esi
10028691:	mov    DWORD PTR [eax],ebx
10028693:	mov    DWORD PTR [ebp-0x128],esi
10028699:	push   DWORD PTR [ebp-0xc4]
1002869f:	call   0x10042fe2
100286a4:	pop    ecx
100286a5:	push   ebx
100286a6:	push   0x1
100286a8:	lea    ecx,[ebp-0x144]
100286ae:	call   0x100012f0
100286b3:	push   ebx
100286b4:	push   0x1
100286b6:	lea    ecx,[ebp-0xf0]
100286bc:	mov    BYTE PTR [ebp-0x4],0xd
100286c0:	call   0x100012f0
100286c5:	cmp    esi,ebx
100286c7:	jne    0x10028726
100286c9:	call   0x10018654
100286ce:	cmp    DWORD PTR [ebp-0xa0],0x10
100286d5:	mov    eax,DWORD PTR [ebp-0xb4]
100286db:	jae    0x100286e3
100286dd:	lea    eax,[ebp-0xb4]
100286e3:	push   eax
100286e4:	call   0x10002068
100286e9:	pop    ecx
100286ea:	push   0x5
100286ec:	call   0x10038b80
100286f1:	pop    ecx
100286f2:	push   ebx
100286f3:	call   0x10042fe2
100286f8:	mov    BYTE PTR [ebp-0xb9],bl
100286fe:	pop    ecx
100286ff:	push   ebx
10028700:	push   0x1
10028702:	lea    ecx,[ebp-0x9c]
10028708:	call   0x100012f0
1002870d:	push   ebx
1002870e:	push   0x1
10028710:	lea    ecx,[ebp-0xb8]
10028716:	call   0x100012f0
1002871b:	mov    al,BYTE PTR [ebp-0xb9]
10028721:	jmp    0x10028849
10028726:	mov    eax,DWORD PTR [ebp-0xc8]
1002872c:	mov    DWORD PTR [ebp-0xd0],eax
10028732:	mov    eax,DWORD PTR [ebp-0xc0]
10028738:	lea    edi,[ebp-0x124]
1002873e:	lea    esi,[ebp-0xd4]
10028744:	mov    DWORD PTR [ebp-0xd4],ebx
1002874a:	mov    DWORD PTR [ebp-0xcc],eax
10028750:	call   0x100372a0
10028755:	cmp    DWORD PTR [eax+0x18],0x10
10028759:	jb     0x10028760
1002875b:	mov    eax,DWORD PTR [eax+0x4]
1002875e:	jmp    0x10028763
10028760:	add    eax,0x4
10028763:	push   eax
10028764:	call   0x10045fb3
10028769:	pop    ecx
1002876a:	mov    ecx,DWORD PTR [ebp-0x104]
10028770:	push   ebx
10028771:	mov    DWORD PTR [ecx],eax
10028773:	push   0x1
10028775:	lea    ecx,[ebp-0x124]
1002877b:	call   0x100012f0
10028780:	lea    edi,[ebp-0x124]
10028786:	lea    esi,[ebp-0xd4]
1002878c:	call   0x100372a0
10028791:	mov    ecx,DWORD PTR [ebp-0x108]
10028797:	push   0xffffffff
10028799:	push   ebx
1002879a:	push   eax
1002879b:	mov    BYTE PTR [ebp-0x4],0xe
1002879f:	call   0x10001241
100287a4:	push   ebx
100287a5:	push   0x1
100287a7:	mov    ecx,edi
100287a9:	mov    BYTE PTR [ebp-0x4],0xd
100287ad:	call   0x100012f0
100287b2:	lea    edi,[ebp-0x124]
100287b8:	call   0x100372a0
100287bd:	mov    ecx,DWORD PTR [ebp-0x100]
100287c3:	push   0xffffffff
100287c5:	push   ebx
100287c6:	push   eax
100287c7:	mov    BYTE PTR [ebp-0x4],0xf
100287cb:	call   0x10001241
100287d0:	push   ebx
100287d1:	push   0x1
100287d3:	mov    ecx,edi
100287d5:	mov    BYTE PTR [ebp-0x4],0xd
100287d9:	call   0x100012f0
100287de:	lea    edi,[ebp-0x124]
100287e4:	call   0x100372a0
100287e9:	mov    ecx,DWORD PTR [ebp-0xf8]
100287ef:	push   0xffffffff
100287f1:	push   ebx
100287f2:	push   eax
100287f3:	mov    BYTE PTR [ebp-0x4],0x10
100287f7:	call   0x10001241
100287fc:	push   ebx
100287fd:	push   0x1
100287ff:	mov    ecx,edi
10028801:	mov    BYTE PTR [ebp-0x4],0xd
10028805:	call   0x100012f0
1002880a:	mov    eax,esi
1002880c:	push   eax
1002880d:	call   0x100374b0
10028812:	mov    ecx,DWORD PTR [ebp-0xf4]
10028818:	mov    DWORD PTR [ecx],eax
1002881a:	mov    eax,esi
1002881c:	push   eax
1002881d:	call   0x100374b0
10028822:	mov    ecx,DWORD PTR [ebp-0xfc]
10028828:	push   DWORD PTR [ebp-0xc0]
1002882e:	mov    DWORD PTR [ecx],eax
10028830:	call   0x10042fe2
10028835:	mov    BYTE PTR [ebp-0xb9],0x1
1002883c:	jmp    0x100286fe
10028841:	mov    eax,0x10028847
10028846:	ret    
10028847:	xor    al,al
10028849:	call   0x10059ef0
1002884e:	ret    0x30
10028851:	push   0xbc
10028856:	mov    eax,0x10063f19
1002885b:	call   0x10059e5e
10028860:	mov    eax,DWORD PTR [ebp+0x8]
10028863:	mov    DWORD PTR [ebp-0x50],eax
10028866:	mov    eax,DWORD PTR [ebp+0xc]
10028869:	mov    DWORD PTR [ebp-0x54],eax
1002886c:	lea    eax,[ebp-0x74]
1002886f:	mov    esi,ecx
10028871:	xor    edi,edi
10028873:	push   eax
10028874:	mov    DWORD PTR [ebp-0x4c],esi
10028877:	mov    DWORD PTR [ebp-0x58],edi
1002887a:	call   0x10030d80
1002887f:	pop    ecx
10028880:	push   edi
10028881:	mov    DWORD PTR [ebp-0x4],edi
10028884:	push   DWORD PTR ds:0x10082e30
1002888a:	lea    ecx,[ebp-0x48]
1002888d:	push   ecx
1002888e:	mov    ecx,eax
10028890:	call   0x10039ec0
10028895:	add    esp,0xc
10028898:	xor    ebx,ebx
1002889a:	push   edi
1002889b:	inc    ebx
1002889c:	push   ebx
1002889d:	lea    ecx,[ebp-0x74]
100288a0:	mov    BYTE PTR [ebp-0x4],0x2
100288a4:	call   0x100012f0
100288a9:	cmp    DWORD PTR [ebp-0x34],edi
100288ac:	jne    0x100288cb
100288ae:	push   0x1006dd18
100288b3:	mov    ecx,esi
100288b5:	call   0x100011a7
100288ba:	push   edi
100288bb:	push   ebx
100288bc:	lea    ecx,[ebp-0x48]
100288bf:	call   0x100012f0
100288c4:	mov    eax,esi
100288c6:	jmp    0x10028a0a
100288cb:	push   DWORD PTR [ebp-0x50]
100288ce:	lea    ecx,[ebp-0xc8]
100288d4:	call   0x10030ca0
100288d9:	pop    ecx
100288da:	push   eax
100288db:	push   0x10072fe8
100288e0:	push   0x3
100288e2:	mov    ecx,0x10073024
100288e7:	mov    BYTE PTR [ebp-0x4],0x3
100288eb:	call   0x100042b4
100288f0:	pop    ecx
100288f1:	pop    ecx
100288f2:	push   eax
100288f3:	lea    eax,[ebp-0x2c]
100288f6:	push   eax
100288f7:	call   0x100067b8
100288fc:	add    esp,0xc
100288ff:	push   edi
10028900:	push   ebx
10028901:	lea    ecx,[ebp-0xc8]
10028907:	mov    BYTE PTR [ebp-0x4],0x5
1002890b:	call   0x100012f0
10028910:	push   DWORD PTR [ebp-0x54]
10028913:	lea    ecx,[ebp-0xac]
10028919:	call   0x10030ca0
1002891e:	pop    ecx
1002891f:	push   eax
10028920:	push   0x10073028
10028925:	push   0x4
10028927:	mov    ecx,0x10073058
1002892c:	mov    BYTE PTR [ebp-0x4],0x6
10028930:	call   0x100042b4
10028935:	pop    ecx
10028936:	pop    ecx
10028937:	push   eax
10028938:	lea    eax,[ebp-0x74]
1002893b:	push   eax
1002893c:	call   0x100067b8
10028941:	add    esp,0xc
10028944:	push   0xffffffff
10028946:	push   edi
10028947:	lea    esi,[ebp-0x2c]
1002894a:	mov    BYTE PTR [ebp-0x4],0x7
1002894e:	call   0x10004cbe
10028953:	push   edi
10028954:	push   ebx
10028955:	lea    ecx,[ebp-0x74]
10028958:	call   0x100012f0
1002895d:	push   edi
1002895e:	push   ebx
1002895f:	lea    ecx,[ebp-0xac]
10028965:	mov    BYTE PTR [ebp-0x4],0x5
10028969:	call   0x100012f0
1002896e:	push   edi
1002896f:	push   DWORD PTR ds:0x10082e2c
10028975:	lea    eax,[ebp-0x90]
1002897b:	push   eax
1002897c:	mov    ecx,esi
1002897e:	call   0x10039ec0
10028983:	add    esp,0xc
10028986:	push   0xffffffff
10028988:	push   edi
10028989:	push   eax
1002898a:	mov    ecx,esi
1002898c:	mov    BYTE PTR [ebp-0x4],0x8
10028990:	call   0x10001241
10028995:	push   edi
10028996:	push   ebx
10028997:	lea    ecx,[ebp-0x90]
1002899d:	mov    BYTE PTR [ebp-0x4],0x5
100289a1:	call   0x100012f0
100289a6:	cmp    DWORD PTR [ebp-0x18],edi
100289a9:	jne    0x100289ba
100289ab:	mov    ecx,DWORD PTR [ebp-0x4c]
100289ae:	push   0x1006dd18
100289b3:	call   0x100011a7
100289b8:	jmp    0x100289f3
100289ba:	push   0x10073060
100289bf:	lea    eax,[ebp-0x48]
100289c2:	push   eax
100289c3:	lea    eax,[ebp-0x90]
100289c9:	push   eax
100289ca:	call   0x10006727
100289cf:	add    esp,0xc
100289d2:	lea    ecx,[ebp-0x2c]
100289d5:	push   ecx
100289d6:	push   eax
100289d7:	push   DWORD PTR [ebp-0x4c]
100289da:	mov    BYTE PTR [ebp-0x4],0x9
100289de:	call   0x1000676d
100289e3:	add    esp,0xc
100289e6:	push   edi
100289e7:	push   ebx
100289e8:	lea    ecx,[ebp-0x90]
100289ee:	call   0x100012f0
100289f3:	push   edi
100289f4:	push   ebx
100289f5:	lea    ecx,[ebp-0x2c]
100289f8:	call   0x100012f0
100289fd:	push   edi
100289fe:	push   ebx
100289ff:	lea    ecx,[ebp-0x48]
10028a02:	call   0x100012f0
10028a07:	mov    eax,DWORD PTR [ebp-0x4c]
10028a0a:	call   0x10059ee1
10028a0f:	ret    0x8
10028a12:	push   ebp
10028a13:	mov    ebp,esp
10028a15:	and    esp,0xfffffff8
10028a18:	push   0xffffffff
10028a1a:	push   0x10064814
10028a1f:	mov    eax,fs:0x0
10028a25:	push   eax
10028a26:	sub    esp,0xa0
10028a2c:	mov    eax,ds:0x100801ac
10028a31:	xor    eax,esp
10028a33:	mov    DWORD PTR [esp+0x98],eax
10028a3a:	push   ebx
10028a3b:	push   esi
10028a3c:	push   edi
10028a3d:	mov    eax,ds:0x100801ac
10028a42:	xor    eax,esp
10028a44:	push   eax
10028a45:	lea    eax,[esp+0xb0]
10028a4c:	mov    fs:0x0,eax
10028a52:	mov    edi,DWORD PTR [ebp+0x8]
10028a55:	push   0x10073064
10028a5a:	push   0x4
10028a5c:	mov    ecx,0x1006e51c
10028a61:	mov    DWORD PTR [esp+0x20],edi
10028a65:	mov    BYTE PTR [esp+0x1f],0x0
10028a6a:	call   0x100042b4
10028a6f:	pop    ecx
10028a70:	pop    ecx
10028a71:	push   eax
10028a72:	lea    ecx,[esp+0x3c]
10028a76:	call   0x100011a7
10028a7b:	xor    esi,esi
10028a7d:	push   esi
10028a7e:	lea    eax,[esp+0x3c]
10028a82:	push   eax
10028a83:	lea    eax,[esp+0x94]
10028a8a:	push   eax
10028a8b:	mov    DWORD PTR [esp+0xc4],esi
10028a92:	mov    eax,DWORD PTR [edi]
10028a94:	add    eax,0x18
10028a97:	call   0x10008803
10028a9c:	push   esi
10028a9d:	push   0x1
10028a9f:	lea    ecx,[esp+0x40]
10028aa3:	mov    BYTE PTR [esp+0xc0],0x2
10028aab:	call   0x100012f0
10028ab0:	cmp    DWORD PTR [esp+0xa0],0x4
10028ab8:	jbe    0x10028b38
10028aba:	cmp    DWORD PTR [esp+0xa4],0x10
10028ac2:	mov    esi,DWORD PTR [esp+0x90]
10028ac9:	mov    ebx,esi
10028acb:	jae    0x10028ad6
10028acd:	lea    ebx,[esp+0x90]
10028ad4:	mov    esi,ebx
10028ad6:	push   0x10073094
10028adb:	push   0x4
10028add:	mov    ecx,0x100730b8
10028ae2:	call   0x100042b4
10028ae7:	push   eax
10028ae8:	push   ebx
10028ae9:	call   0x10045bf0
10028aee:	add    esp,0x10
10028af1:	cmp    eax,esi
10028af3:	jne    0x10028b38
10028af5:	push   0xffffffff
10028af7:	push   0x4
10028af9:	lea    eax,[esp+0x94]
10028b00:	push   eax
10028b01:	lea    eax,[esp+0x28]
10028b05:	call   0x1000ce4e
10028b0a:	push   0xffffffff
10028b0c:	push   0x0
10028b0e:	push   eax
10028b0f:	lea    ecx,[esp+0x98]
10028b16:	mov    BYTE PTR [esp+0xc4],0x3
10028b1e:	call   0x10001241
10028b23:	push   0x0
10028b25:	push   0x1
10028b27:	lea    ecx,[esp+0x24]
10028b2b:	mov    BYTE PTR [esp+0xc0],0x2
10028b33:	call   0x100012f0
10028b38:	cmp    DWORD PTR [esp+0xa4],0x10
10028b40:	mov    eax,DWORD PTR [esp+0x90]
10028b47:	jae    0x10028b50
10028b49:	lea    eax,[esp+0x90]
10028b50:	push   eax
10028b51:	call   DWORD PTR ds:0x100673f8
10028b57:	cmp    eax,0xffffffff
10028b5a:	je     0x10028b6b
10028b5c:	mov    ebx,eax
10028b5e:	call   0x100178d7
10028b63:	test   al,al
10028b65:	jne    0x10028cd8
10028b6b:	push   0x100730c0
10028b70:	push   0xa
10028b72:	mov    ecx,0x10073100
10028b77:	call   0x100042b4
10028b7c:	push   eax
10028b7d:	lea    esi,[esp+0x98]
10028b84:	call   0x10006825
10028b89:	add    esp,0xc
10028b8c:	test   al,al
10028b8e:	jne    0x10028cd8
10028b94:	push   0x1007310c
10028b99:	push   0x9
10028b9b:	mov    ecx,0x10073144
10028ba0:	call   0x100042b4
10028ba5:	push   eax
10028ba6:	call   0x10006825
10028bab:	add    esp,0xc
10028bae:	test   al,al
10028bb0:	jne    0x10028cd8
10028bb6:	push   0x10073150
10028bbb:	push   0x9
10028bbd:	mov    ecx,0x10073184
10028bc2:	call   0x100042b4
10028bc7:	push   eax
10028bc8:	call   0x10006825
10028bcd:	add    esp,0xc
10028bd0:	test   al,al
10028bd2:	jne    0x10028cd8
10028bd8:	push   0x10073190
10028bdd:	push   0x5
10028bdf:	mov    ecx,0x100731cc
10028be4:	call   0x100042b4
10028be9:	push   eax
10028bea:	call   0x10006825
10028bef:	add    esp,0xc
10028bf2:	test   al,al
10028bf4:	jne    0x10028cd8
10028bfa:	push   0x100731d4
10028bff:	push   0x8
10028c01:	mov    ecx,0x10073208
10028c06:	call   0x100042b4
10028c0b:	push   eax
10028c0c:	call   0x10006825
10028c11:	add    esp,0xc
10028c14:	test   al,al
10028c16:	jne    0x10028cd8
10028c1c:	push   0x10073214
10028c21:	push   0xd
10028c23:	mov    ecx,0x10073240
10028c28:	call   0x100042b4
10028c2d:	push   eax
10028c2e:	call   0x10006825
10028c33:	add    esp,0xc
10028c36:	test   al,al
10028c38:	jne    0x10028cd8
10028c3e:	push   0x10073250
10028c43:	push   0x15
10028c45:	mov    ecx,0x10073280
10028c4a:	call   0x100042b4
10028c4f:	push   eax
10028c50:	call   0x10006825
10028c55:	add    esp,0xc
10028c58:	test   al,al
10028c5a:	jne    0x10028cd8
10028c5c:	push   0x10073298
10028c61:	push   0x1e
10028c63:	mov    ecx,0x100732c8
10028c68:	call   0x100042b4
10028c6d:	push   eax
10028c6e:	call   0x10006825
10028c73:	add    esp,0xc
10028c76:	test   al,al
10028c78:	jne    0x10028cd8
10028c7a:	push   0x100732e8
10028c7f:	push   0x1d
10028c81:	mov    ecx,0x10073318
10028c86:	call   0x100042b4
10028c8b:	push   eax
10028c8c:	call   0x10006825
10028c91:	add    esp,0xc
10028c94:	test   al,al
10028c96:	jne    0x10028cd8
10028c98:	push   0x10073338
10028c9d:	push   0x1d
10028c9f:	mov    ecx,0x10073360
10028ca4:	call   0x100042b4
10028ca9:	push   eax
10028caa:	call   0x10006825
10028caf:	add    esp,0xc
10028cb2:	test   al,al
10028cb4:	jne    0x10028cd8
10028cb6:	push   0x10073380
10028cbb:	push   0x15
10028cbd:	mov    ecx,0x100733c0
10028cc2:	call   0x100042b4
10028cc7:	push   eax
10028cc8:	call   0x10006825
10028ccd:	add    esp,0xc
10028cd0:	test   al,al
10028cd2:	je     0x10028dbc
10028cd8:	cmp    DWORD PTR [esp+0xa4],0x10
10028ce0:	mov    eax,DWORD PTR [esp+0x90]
10028ce7:	mov    BYTE PTR [esp+0x17],0x1
10028cec:	jae    0x10028cf5
10028cee:	lea    eax,[esp+0x90]
10028cf5:	push   eax
10028cf6:	call   0x10002068
10028cfb:	mov    DWORD PTR [esp],0x100733d8
10028d02:	push   0x9
10028d04:	mov    ecx,0x10073400
10028d09:	call   0x100042b4
10028d0e:	pop    ecx
10028d0f:	pop    ecx
10028d10:	push   eax
10028d11:	lea    ecx,[esp+0x20]
10028d15:	call   0x100011a7
10028d1a:	push   0x1007340c
10028d1f:	push   0x3
10028d21:	mov    ecx,0x10073444
10028d26:	mov    BYTE PTR [esp+0xc0],0x4
10028d2e:	call   0x100042b4
10028d33:	pop    ecx
10028d34:	pop    ecx
10028d35:	push   eax
10028d36:	lea    ecx,[esp+0x58]
10028d3a:	call   0x100011a7
10028d3f:	push   0x10073448
10028d44:	push   0x3
10028d46:	mov    ecx,0x10072d24
10028d4b:	mov    BYTE PTR [esp+0xc0],0x5
10028d53:	call   0x100042b4
10028d58:	pop    ecx
10028d59:	pop    ecx
10028d5a:	push   eax
10028d5b:	lea    ecx,[esp+0x74]
10028d5f:	call   0x100011a7
10028d64:	push   0x0
10028d66:	lea    eax,[esp+0x20]
10028d6a:	push   eax
10028d6b:	lea    eax,[esp+0x5c]
10028d6f:	push   eax
10028d70:	lea    ecx,[esp+0x7c]
10028d74:	mov    BYTE PTR [esp+0xc4],0x6
10028d7c:	call   0x10009a7b
10028d81:	add    esp,0xc
10028d84:	add    edi,0x8
10028d87:	mov    ebx,eax
10028d89:	call   0x1000cea7
10028d8e:	xor    esi,esi
10028d90:	push   esi
10028d91:	push   0x1
10028d93:	lea    ecx,[esp+0x78]
10028d97:	call   0x100012f0
10028d9c:	push   esi
10028d9d:	push   0x1
10028d9f:	lea    ecx,[esp+0x5c]
10028da3:	call   0x100012f0
10028da8:	push   esi
10028da9:	push   0x1
10028dab:	lea    ecx,[esp+0x24]
10028daf:	call   0x100012f0
10028db4:	mov    eax,DWORD PTR [esp+0x18]
10028db8:	mov    BYTE PTR [eax+0x14],0x1
10028dbc:	push   0x0
10028dbe:	push   0x1
10028dc0:	lea    ecx,[esp+0x94]
10028dc7:	call   0x100012f0
10028dcc:	mov    al,BYTE PTR [esp+0x17]
10028dd0:	mov    ecx,DWORD PTR [esp+0xb0]
10028dd7:	mov    DWORD PTR fs:0x0,ecx
10028dde:	pop    ecx
10028ddf:	pop    edi
10028de0:	pop    esi
10028de1:	pop    ebx
10028de2:	mov    ecx,DWORD PTR [esp+0x98]
10028de9:	xor    ecx,esp
10028deb:	call   0x10043615
10028df0:	mov    esp,ebp
10028df2:	pop    ebp
10028df3:	ret    0x4
10028df6:	push   ebp
10028df7:	mov    ebp,esp
10028df9:	and    esp,0xfffffff8
10028dfc:	push   0xffffffff
10028dfe:	push   0x10063a3b
10028e03:	mov    eax,fs:0x0
10028e09:	push   eax
10028e0a:	sub    esp,0x110
10028e10:	mov    eax,ds:0x100801ac
10028e15:	xor    eax,esp
10028e17:	mov    DWORD PTR [esp+0x108],eax
10028e1e:	push   ebx
10028e1f:	push   esi
10028e20:	push   edi
10028e21:	mov    eax,ds:0x100801ac
10028e26:	xor    eax,esp
10028e28:	push   eax
10028e29:	lea    eax,[esp+0x120]
10028e30:	mov    fs:0x0,eax
10028e36:	mov    esi,DWORD PTR [ebp+0x8]
10028e39:	push   DWORD PTR [esi]
10028e3b:	lea    ecx,[esp+0x70]
10028e3f:	call   0x10009035
10028e44:	lea    ecx,[esp+0xf8]
10028e4b:	push   ecx
10028e4c:	xor    ebx,ebx
10028e4e:	push   0x10082f58
10028e53:	mov    ecx,eax
10028e55:	mov    DWORD PTR [esp+0x130],ebx
10028e5c:	call   0x10019c6d
10028e61:	push   ebx
10028e62:	push   0x1
10028e64:	lea    ecx,[esp+0x74]
10028e68:	mov    BYTE PTR [esp+0x130],0x2
10028e70:	call   0x100012f0
10028e75:	lea    edi,[esp+0xf8]
10028e7c:	call   0x10019b2d
10028e81:	test   al,al
10028e83:	jne    0x1002909b
10028e89:	mov    eax,DWORD PTR [esp+0xf8]
10028e90:	dec    eax
10028e91:	je     0x10028f58
10028e97:	dec    eax
10028e98:	jne    0x1002909b
10028e9e:	push   0x100734e8
10028ea3:	push   0x7
10028ea5:	mov    ecx,0x1006e7c4
10028eaa:	call   0x100042b4
10028eaf:	pop    ecx
10028eb0:	pop    ecx
10028eb1:	push   eax
10028eb2:	lea    ecx,[esp+0x1c]
10028eb6:	call   0x100011a7
10028ebb:	lea    eax,[esp+0x18]
10028ebf:	push   eax
10028ec0:	mov    BYTE PTR [esp+0x12c],0x7
10028ec8:	mov    eax,DWORD PTR [esi+0x4]
10028ecb:	add    eax,0x18
10028ece:	push   eax
10028ecf:	call   0x100085a1
10028ed4:	push   ebx
10028ed5:	push   0x1
10028ed7:	lea    ecx,[esp+0x20]
10028edb:	mov    BYTE PTR [esp+0x130],0x2
10028ee3:	call   0x100012f0
10028ee8:	push   DWORD PTR [esi]
10028eea:	lea    ecx,[esp+0xa8]
10028ef1:	call   0x10009035
10028ef6:	cmp    DWORD PTR [eax+0x18],0x10
10028efa:	jb     0x10028f01
10028efc:	mov    eax,DWORD PTR [eax+0x4]
10028eff:	jmp    0x10028f04
10028f01:	add    eax,0x4
10028f04:	push   eax
10028f05:	call   0x10002068
10028f0a:	pop    ecx
10028f0b:	push   ebx
10028f0c:	push   0x1
10028f0e:	lea    ecx,[esp+0xac]
10028f15:	call   0x100012f0
10028f1a:	mov    BYTE PTR [esp+0x17],0x1
10028f1f:	push   ebx
10028f20:	push   0x1
10028f22:	lea    ecx,[esp+0x104]
10028f29:	call   0x100012f0
10028f2e:	mov    al,BYTE PTR [esp+0x17]
10028f32:	mov    ecx,DWORD PTR [esp+0x120]
10028f39:	mov    DWORD PTR fs:0x0,ecx
10028f40:	pop    ecx
10028f41:	pop    edi
10028f42:	pop    esi
10028f43:	pop    ebx
10028f44:	mov    ecx,DWORD PTR [esp+0x108]
10028f4b:	xor    ecx,esp
10028f4d:	call   0x10043615
10028f52:	mov    esp,ebp
10028f54:	pop    ebp
10028f55:	ret    0x4
10028f58:	push   0x10073470
10028f5d:	mov    edi,0x1006e7c4
10028f62:	push   0x7
10028f64:	mov    ecx,edi
10028f66:	call   0x100042b4
10028f6b:	pop    ecx
10028f6c:	pop    ecx
10028f6d:	push   eax
10028f6e:	lea    ecx,[esp+0x38]
10028f72:	call   0x100011a7
10028f77:	lea    eax,[esp+0x34]
10028f7b:	push   eax
10028f7c:	mov    BYTE PTR [esp+0x12c],0x3
10028f84:	mov    eax,DWORD PTR [esi+0x4]
10028f87:	add    eax,0x18
10028f8a:	push   eax
10028f8b:	call   0x100085a1
10028f90:	push   ebx
10028f91:	push   0x1
10028f93:	lea    ecx,[esp+0x3c]
10028f97:	mov    BYTE PTR [esp+0x130],0x2
10028f9f:	call   0x100012f0
10028fa4:	push   0x100734ac
10028fa9:	push   0x7
10028fab:	mov    ecx,edi
10028fad:	call   0x100042b4
10028fb2:	pop    ecx
10028fb3:	pop    ecx
10028fb4:	push   eax
10028fb5:	lea    ecx,[esp+0x54]
10028fb9:	call   0x100011a7
10028fbe:	lea    eax,[esp+0xdc]
10028fc5:	push   eax
10028fc6:	lea    eax,[esp+0xfc]
10028fcd:	mov    BYTE PTR [esp+0x12c],0x4
10028fd5:	call   0x10007ca8
10028fda:	mov    BYTE PTR [esp+0x128],0x5
10028fe2:	mov    edx,DWORD PTR [esi+0x4]
10028fe5:	push   ebx
10028fe6:	lea    ecx,[esp+0x54]
10028fea:	push   ecx
10028feb:	add    edx,0x18
10028fee:	mov    ecx,eax
10028ff0:	call   0x10008298
10028ff5:	xor    edi,edi
10028ff7:	push   ebx
10028ff8:	inc    edi
10028ff9:	push   edi
10028ffa:	lea    ecx,[esp+0xe4]
10029001:	call   0x100012f0
10029006:	push   ebx
10029007:	push   edi
10029008:	lea    ecx,[esp+0x58]
1002900c:	mov    BYTE PTR [esp+0x130],0x2
10029014:	call   0x100012f0
10029019:	push   DWORD PTR [esi]
1002901b:	lea    ecx,[esp+0xc4]
10029022:	call   0x10009035
10029027:	mov    esi,eax
10029029:	lea    eax,[esp+0x88]
10029030:	push   eax
10029031:	lea    eax,[esp+0xfc]
10029038:	mov    BYTE PTR [esp+0x12c],0x6
10029040:	call   0x10007ca8
10029045:	cmp    DWORD PTR [esi+0x18],0x10
10029049:	jb     0x10029050
1002904b:	mov    esi,DWORD PTR [esi+0x4]
1002904e:	jmp    0x10029053
10029050:	add    esi,0x4
10029053:	cmp    DWORD PTR [eax+0x18],0x10
10029057:	jb     0x1002905e
10029059:	mov    eax,DWORD PTR [eax+0x4]
1002905c:	jmp    0x10029061
1002905e:	add    eax,0x4
10029061:	push   esi
10029062:	push   eax
10029063:	call   0x10002068
10029068:	pop    ecx
10029069:	pop    ecx
1002906a:	push   ebx
1002906b:	push   edi
1002906c:	lea    ecx,[esp+0x90]
10029073:	call   0x100012f0
10029078:	push   ebx
10029079:	push   edi
1002907a:	lea    ecx,[esp+0xc8]
10029081:	call   0x100012f0
10029086:	push   ebx
10029087:	push   edi
10029088:	lea    ecx,[esp+0x104]
1002908f:	call   0x100012f0
10029094:	mov    al,0x1
10029096:	jmp    0x10028f32
1002909b:	mov    BYTE PTR [esp+0x17],bl
1002909f:	jmp    0x10028f1f
100290a4:	push   ebp
100290a5:	mov    ebp,esp
100290a7:	and    esp,0xfffffff8
100290aa:	push   0xffffffff
100290ac:	push   0x100647ad
100290b1:	mov    eax,fs:0x0
100290b7:	push   eax
100290b8:	sub    esp,0xa0
100290be:	mov    eax,ds:0x100801ac
100290c3:	xor    eax,esp
100290c5:	mov    DWORD PTR [esp+0x98],eax
100290cc:	push   ebx
100290cd:	push   esi
100290ce:	push   edi
100290cf:	mov    eax,ds:0x100801ac
100290d4:	xor    eax,esp
100290d6:	push   eax
100290d7:	lea    eax,[esp+0xb0]
100290de:	mov    fs:0x0,eax
100290e4:	mov    edi,DWORD PTR [ebp+0x8]
100290e7:	push   DWORD PTR [edi]
100290e9:	lea    ecx,[esp+0x58]
100290ed:	mov    DWORD PTR [esp+0x1c],edi
100290f1:	call   0x10009035
100290f6:	xor    ebx,ebx
100290f8:	push   eax
100290f9:	lea    esi,[esp+0x90]
10029100:	mov    DWORD PTR [esp+0xbc],ebx
10029107:	call   0x100300d0
1002910c:	pop    ecx
1002910d:	push   ebx
1002910e:	push   0x1
10029110:	lea    ecx,[esp+0x5c]
10029114:	mov    BYTE PTR [esp+0xc0],0x2
1002911c:	call   0x100012f0
10029121:	mov    edx,esi
10029123:	lea    ecx,[esp+0x70]
10029127:	call   0x100337f0
1002912c:	push   0x1006dd18
10029131:	lea    esi,[esp+0x74]
10029135:	mov    BYTE PTR [esp+0xbc],0x3
1002913d:	call   0x10006825
10029142:	test   al,al
10029144:	pop    ecx
10029145:	jne    0x10029326
1002914b:	cmp    DWORD PTR [esp+0x88],0x10
10029153:	mov    eax,DWORD PTR [esp+0x74]
10029157:	jae    0x1002915d
10029159:	lea    eax,[esp+0x74]
1002915d:	push   eax
1002915e:	call   0x10002068
10029163:	mov    DWORD PTR [esp],0x10073520
1002916a:	push   0xc
1002916c:	mov    ecx,0x10072cbc
10029171:	call   0x100042b4
10029176:	pop    ecx
10029177:	pop    ecx
10029178:	push   eax
10029179:	lea    ecx,[esp+0x20]
1002917d:	call   0x100011a7
10029182:	push   0x10073558
10029187:	push   0x3
10029189:	mov    ecx,0x10072cf8
1002918e:	mov    BYTE PTR [esp+0xc0],0x4
10029196:	call   0x100042b4
1002919b:	pop    ecx
1002919c:	pop    ecx
1002919d:	push   eax
1002919e:	lea    ecx,[esp+0x3c]
100291a2:	call   0x100011a7
100291a7:	push   0x10073598
100291ac:	push   0x3
100291ae:	mov    ecx,0x10072d24
100291b3:	mov    BYTE PTR [esp+0xc0],0x5
100291bb:	call   0x100042b4
100291c0:	pop    ecx
100291c1:	pop    ecx
100291c2:	push   eax
100291c3:	lea    ecx,[esp+0x58]
100291c7:	call   0x100011a7
100291cc:	push   ebx
100291cd:	lea    eax,[esp+0x20]
100291d1:	push   eax
100291d2:	lea    eax,[esp+0x40]
100291d6:	push   eax
100291d7:	lea    ecx,[esp+0x60]
100291db:	mov    BYTE PTR [esp+0xc4],0x6
100291e3:	add    edi,0x8
100291e6:	call   0x10009a7b
100291eb:	add    esp,0xc
100291ee:	mov    ebx,eax
100291f0:	call   0x1000cea7
100291f5:	xor    esi,esi
100291f7:	xor    ebx,ebx
100291f9:	push   esi
100291fa:	inc    ebx
100291fb:	push   ebx
100291fc:	lea    ecx,[esp+0x5c]
10029200:	call   0x100012f0
10029205:	push   esi
10029206:	push   ebx
10029207:	lea    ecx,[esp+0x40]
1002920b:	call   0x100012f0
10029210:	push   esi
10029211:	push   ebx
10029212:	lea    ecx,[esp+0x24]
10029216:	mov    BYTE PTR [esp+0xc0],0x3
1002921e:	call   0x100012f0
10029223:	push   0x100735d4
10029228:	push   0x8
1002922a:	mov    ecx,0x10072d9c
1002922f:	call   0x100042b4
10029234:	pop    ecx
10029235:	pop    ecx
10029236:	push   eax
10029237:	lea    ecx,[esp+0x20]
1002923b:	call   0x100011a7
10029240:	mov    BYTE PTR [esp+0xb8],0x7
10029248:	mov    eax,DWORD PTR [edi]
1002924a:	push   esi
1002924b:	lea    ecx,[esp+0x20]
1002924f:	push   ecx
10029250:	lea    edx,[eax+0x20]
10029253:	lea    ecx,[esp+0x78]
10029257:	call   0x10008298
1002925c:	mov    BYTE PTR [esp+0xb8],0x3
10029264:	push   esi
10029265:	push   ebx
10029266:	lea    ecx,[esp+0x24]
1002926a:	call   0x100012f0
1002926f:	push   0x1006dd1c
10029274:	lea    ecx,[esp+0x3c]
10029278:	call   0x100011a7
1002927d:	push   0x10073608
10029282:	push   0xe
10029284:	mov    ecx,0x1006eae4
10029289:	mov    BYTE PTR [esp+0xc0],0x8
10029291:	call   0x100042b4
10029296:	pop    ecx
10029297:	pop    ecx
10029298:	push   eax
10029299:	lea    ecx,[esp+0x20]
1002929d:	call   0x100011a7
100292a2:	mov    BYTE PTR [esp+0xb8],0x9
100292aa:	mov    edx,DWORD PTR [edi]
100292ac:	push   esi
100292ad:	lea    eax,[esp+0x20]
100292b1:	push   eax
100292b2:	add    edx,0x20
100292b5:	lea    ecx,[esp+0x40]
100292b9:	call   0x10008298
100292be:	push   esi
100292bf:	push   ebx
100292c0:	lea    ecx,[esp+0x24]
100292c4:	call   0x100012f0
100292c9:	push   esi
100292ca:	push   ebx
100292cb:	lea    ecx,[esp+0x40]
100292cf:	call   0x100012f0
100292d4:	mov    eax,DWORD PTR [esp+0x18]
100292d8:	mov    BYTE PTR [eax+0x14],bl
100292db:	mov    BYTE PTR [esp+0x17],bl
100292df:	xor    ebx,ebx
100292e1:	push   ebx
100292e2:	push   0x1
100292e4:	lea    ecx,[esp+0x78]
100292e8:	call   0x100012f0
100292ed:	push   ebx
100292ee:	push   0x1
100292f0:	lea    ecx,[esp+0x94]
100292f7:	call   0x100012f0
100292fc:	mov    al,BYTE PTR [esp+0x17]
10029300:	mov    ecx,DWORD PTR [esp+0xb0]
10029307:	mov    DWORD PTR fs:0x0,ecx
1002930e:	pop    ecx
1002930f:	pop    edi
10029310:	pop    esi
10029311:	pop    ebx
10029312:	mov    ecx,DWORD PTR [esp+0x98]
10029319:	xor    ecx,esp
1002931b:	call   0x10043615
10029320:	mov    esp,ebp
10029322:	pop    ebp
10029323:	ret    0x4
10029326:	mov    BYTE PTR [esp+0x17],bl
1002932a:	jmp    0x100292e1
1002932c:	push   esi
1002932d:	push   edi
1002932e:	mov    edi,DWORD PTR [esp+0xc]
10029332:	mov    esi,DWORD PTR [edi+0x10]
10029335:	call   0x1002678a
1002933a:	test   al,al
1002933c:	je     0x10029346
1002933e:	mov    BYTE PTR [edi+0x14],0x1
10029342:	mov    al,0x1
10029344:	jmp    0x10029348
10029346:	xor    al,al
10029348:	pop    edi
10029349:	pop    esi
1002934a:	ret    0x4
1002934d:	push   ebp
1002934e:	mov    ebp,esp
10029350:	and    esp,0xfffffff8
10029353:	push   0xffffffff
10029355:	push   0x10064728
1002935a:	mov    eax,fs:0x0
10029360:	push   eax
10029361:	sub    esp,0x280
10029367:	mov    eax,ds:0x100801ac
1002936c:	xor    eax,esp
1002936e:	mov    DWORD PTR [esp+0x278],eax
10029375:	push   ebx
10029376:	push   esi
10029377:	push   edi
10029378:	mov    eax,ds:0x100801ac
1002937d:	xor    eax,esp
1002937f:	push   eax
10029380:	lea    eax,[esp+0x290]
10029387:	mov    fs:0x0,eax
1002938d:	mov    ebx,DWORD PTR [ebp+0x8]
10029390:	push   0x10073684
10029395:	push   0x7
10029397:	mov    ecx,0x1006e7c4
1002939c:	mov    DWORD PTR [esp+0x1c],ebx
100293a0:	call   0x100042b4
100293a5:	pop    ecx
100293a6:	pop    ecx
100293a7:	push   eax
100293a8:	lea    ecx,[esp+0x80]
100293af:	call   0x100011a7
100293b4:	xor    edi,edi
100293b6:	push   edi
100293b7:	lea    eax,[esp+0x80]
100293be:	push   eax
100293bf:	lea    eax,[esp+0x28]
100293c3:	push   eax
100293c4:	mov    DWORD PTR [esp+0x2a4],edi
100293cb:	mov    eax,DWORD PTR [ebx]
100293cd:	add    eax,0x18
100293d0:	call   0x10008803
100293d5:	mov    esi,eax
100293d7:	push   0x10073648
100293dc:	push   0x10
100293de:	mov    ecx,0x10073670
100293e3:	mov    BYTE PTR [esp+0x2a0],0x1
100293eb:	call   0x100042b4
100293f0:	push   eax
100293f1:	call   0x10006825
100293f6:	add    esp,0xc
100293f9:	neg    al
100293fb:	sbb    al,al
100293fd:	xor    esi,esi
100293ff:	push   edi
10029400:	inc    al
10029402:	inc    esi
10029403:	push   esi
10029404:	lea    ecx,[esp+0x28]
10029408:	mov    BYTE PTR [esp+0x1b],al
1002940c:	call   0x100012f0
10029411:	or     DWORD PTR [esp+0x298],0xffffffff
10029419:	push   edi
1002941a:	push   esi
1002941b:	lea    ecx,[esp+0x84]
10029422:	call   0x100012f0
10029427:	cmp    BYTE PTR [esp+0x13],0x0
1002942c:	je     0x10029435
1002942e:	xor    al,al
10029430:	jmp    0x10029b05
10029435:	mov    eax,DWORD PTR [ebx+0x10]
10029438:	lea    ecx,[esp+0x3c]
1002943c:	push   ecx
1002943d:	push   0x4
1002943f:	lea    ecx,[esp+0x48]
10029443:	push   ecx
10029444:	push   esi
10029445:	push   0x6
10029447:	mov    DWORD PTR [esp+0x54],esi
1002944b:	mov    DWORD PTR [esp+0x50],edi
1002944f:	push   DWORD PTR [eax]
10029451:	call   DWORD PTR [eax+0xa4]
10029457:	mov    esi,DWORD PTR [ebx+0x10]
1002945a:	call   0x1002678a
1002945f:	test   al,al
10029461:	je     0x1002953b
10029467:	call   0x10002068
1002946c:	push   0x100736b4
10029471:	push   0x9
10029473:	mov    ecx,0x10073400
10029478:	call   0x100042b4
1002947d:	pop    ecx
1002947e:	pop    ecx
1002947f:	push   eax
10029480:	lea    ecx,[esp+0x24]
10029484:	call   0x100011a7
10029489:	push   0x100736e0
1002948e:	push   0x3
10029490:	mov    ecx,0x10073444
10029495:	mov    DWORD PTR [esp+0x2a0],0x2
100294a0:	call   0x100042b4
100294a5:	pop    ecx
100294a6:	pop    ecx
100294a7:	push   eax
100294a8:	lea    ecx,[esp+0x48]
100294ac:	call   0x100011a7
100294b1:	push   0x10073720
100294b6:	push   0x3
100294b8:	mov    ecx,0x10072d24
100294bd:	mov    BYTE PTR [esp+0x2a0],0x3
100294c5:	call   0x100042b4
100294ca:	pop    ecx
100294cb:	pop    ecx
100294cc:	push   eax
100294cd:	lea    ecx,[esp+0x80]
100294d4:	call   0x100011a7
100294d9:	push   edi
100294da:	lea    eax,[esp+0x24]
100294de:	push   eax
100294df:	lea    eax,[esp+0x4c]
100294e3:	push   eax
100294e4:	lea    ecx,[esp+0x88]
100294eb:	mov    BYTE PTR [esp+0x2a4],0x4
100294f3:	call   0x10009a7b
100294f8:	lea    edi,[ebx+0x8]
100294fb:	add    esp,0xc
100294fe:	mov    ebx,eax
10029500:	call   0x1000cea7
10029505:	xor    esi,esi
10029507:	push   esi
10029508:	push   0x1
1002950a:	lea    ecx,[esp+0x84]
10029511:	call   0x100012f0
10029516:	push   esi
10029517:	push   0x1
10029519:	lea    ecx,[esp+0x4c]
1002951d:	call   0x100012f0
10029522:	push   esi
10029523:	push   0x1
10029525:	lea    ecx,[esp+0x28]
10029529:	call   0x100012f0
1002952e:	mov    eax,DWORD PTR [esp+0x14]
10029532:	mov    BYTE PTR [eax+0x14],0x1
10029536:	jmp    0x10029b03
1002953b:	push   0x10073750
10029540:	push   0x7
10029542:	mov    ecx,0x1006e7c4
10029547:	call   0x100042b4
1002954c:	pop    ecx
1002954d:	pop    ecx
1002954e:	push   eax
1002954f:	lea    ecx,[esp+0x24]
10029553:	call   0x100011a7
10029558:	lea    eax,[esp+0x20]
1002955c:	push   eax
1002955d:	mov    DWORD PTR [esp+0x29c],0x5
10029568:	mov    eax,DWORD PTR [ebx+0x4]
1002956b:	add    eax,0x18
1002956e:	push   eax
1002956f:	call   0x100085a1
10029574:	or     DWORD PTR [esp+0x298],0xffffffff
1002957c:	push   edi
1002957d:	push   0x1
1002957f:	lea    ecx,[esp+0x28]
10029583:	call   0x100012f0
10029588:	lea    ecx,[esp+0x15c]
1002958f:	call   0x10012eb8
10029594:	push   0x1006dd18
10029599:	lea    esi,[esp+0x160]
100295a0:	mov    DWORD PTR [esp+0x29c],0x6
100295ab:	call   0x10006825
100295b0:	test   al,al
100295b2:	pop    ecx
100295b3:	jne    0x10029600
100295b5:	push   0x10073790
100295ba:	push   0xa
100295bc:	mov    ecx,0x1006e7f0
100295c1:	call   0x100042b4
100295c6:	pop    ecx
100295c7:	pop    ecx
100295c8:	push   eax
100295c9:	lea    ecx,[esp+0x24]
100295cd:	call   0x100011a7
100295d2:	mov    BYTE PTR [esp+0x298],0x7
100295da:	mov    edx,DWORD PTR [ebx+0x4]
100295dd:	lea    eax,[esp+0x20]
100295e1:	push   eax
100295e2:	add    edx,0x18
100295e5:	mov    ecx,esi
100295e7:	call   0x100086ec
100295ec:	push   edi
100295ed:	push   0x1
100295ef:	lea    ecx,[esp+0x28]
100295f3:	mov    BYTE PTR [esp+0x2a0],0x6
100295fb:	call   0x100012f0
10029600:	push   0x1006dd18
10029605:	lea    esi,[esp+0x1b4]
1002960c:	call   0x10006825
10029611:	test   al,al
10029613:	pop    ecx
10029614:	jne    0x10029661
10029616:	push   0x100737c8
1002961b:	push   0xf
1002961d:	mov    ecx,0x1006e868
10029622:	call   0x100042b4
10029627:	pop    ecx
10029628:	pop    ecx
10029629:	push   eax
1002962a:	lea    ecx,[esp+0x24]
1002962e:	call   0x100011a7
10029633:	mov    BYTE PTR [esp+0x298],0x8
1002963b:	mov    edx,DWORD PTR [ebx+0x4]
1002963e:	lea    eax,[esp+0x20]
10029642:	push   eax
10029643:	add    edx,0x18
10029646:	mov    ecx,esi
10029648:	call   0x100086ec
1002964d:	push   edi
1002964e:	push   0x1
10029650:	lea    ecx,[esp+0x28]
10029654:	mov    BYTE PTR [esp+0x2a0],0x6
1002965c:	call   0x100012f0
10029661:	push   0x1006dd18
10029666:	lea    esi,[esp+0x17c]
1002966d:	mov    BYTE PTR [esp+0x17],0x0
10029672:	call   0x10006825
10029677:	test   al,al
10029679:	pop    ecx
1002967a:	jne    0x1002973f
10029680:	push   0x10
10029682:	pop    esi
10029683:	lea    eax,[esp+0x14]
10029687:	push   eax
10029688:	lea    eax,[esp+0x128]
1002968f:	push   eax
10029690:	mov    eax,DWORD PTR [ebx+0x10]
10029693:	mov    DWORD PTR [esp+0x1c],esi
10029697:	push   DWORD PTR [eax]
10029699:	call   DWORD PTR ds:0x100673b0
1002969f:	cmp    eax,0xffffffff
100296a2:	je     0x1002973f
100296a8:	cmp    WORD PTR [esp+0x124],0x2
100296b1:	jne    0x1002973f
100296b7:	push   0x10073804
100296bc:	push   0x4
100296be:	mov    ecx,0x1006e51c
100296c3:	call   0x100042b4
100296c8:	pop    ecx
100296c9:	pop    ecx
100296ca:	push   eax
100296cb:	lea    ecx,[esp+0x24]
100296cf:	call   0x100011a7
100296d4:	push   edi
100296d5:	lea    eax,[esp+0x24]
100296d9:	push   eax
100296da:	lea    eax,[esp+0x68]
100296de:	push   eax
100296df:	mov    BYTE PTR [esp+0x2a4],0x9
100296e7:	mov    eax,DWORD PTR [ebx]
100296e9:	add    eax,0x18
100296ec:	call   0x10008803
100296f1:	cmp    DWORD PTR [eax+0x18],esi
100296f4:	jb     0x100296fb
100296f6:	mov    eax,DWORD PTR [eax+0x4]
100296f9:	jmp    0x100296fe
100296fb:	add    eax,0x4
100296fe:	push   eax
100296ff:	call   DWORD PTR ds:0x100673f8
10029705:	cmp    DWORD PTR [esp+0x128],eax
1002970c:	push   edi
1002970d:	push   0x1
1002970f:	lea    ecx,[esp+0x68]
10029713:	setne  BYTE PTR [esp+0x23]
10029718:	call   0x100012f0
1002971d:	push   edi
1002971e:	push   0x1
10029720:	lea    ecx,[esp+0x28]
10029724:	mov    BYTE PTR [esp+0x2a0],0x6
1002972c:	call   0x100012f0
10029731:	cmp    BYTE PTR [esp+0x1b],0x0
10029736:	je     0x1002973f
10029738:	mov    BYTE PTR [esp+0x13],0x1
1002973d:	jmp    0x100297a0
1002973f:	push   0x1006dd18
10029744:	lea    esi,[esp+0x17c]
1002974b:	call   0x10006825
10029750:	test   al,al
10029752:	pop    ecx
10029753:	jne    0x100297a0
10029755:	push   0x10073838
1002975a:	push   0x4
1002975c:	mov    ecx,0x1006e51c
10029761:	call   0x100042b4
10029766:	pop    ecx
10029767:	pop    ecx
10029768:	push   eax
10029769:	lea    ecx,[esp+0x24]
1002976d:	call   0x100011a7
10029772:	mov    BYTE PTR [esp+0x298],0xa
1002977a:	mov    edx,DWORD PTR [ebx+0x4]
1002977d:	lea    eax,[esp+0x20]
10029781:	push   eax
10029782:	add    edx,0x18
10029785:	mov    ecx,esi
10029787:	call   0x100086ec
1002978c:	push   edi
1002978d:	push   0x1
1002978f:	lea    ecx,[esp+0x28]
10029793:	mov    BYTE PTR [esp+0x2a0],0x6
1002979b:	call   0x100012f0
100297a0:	push   0x10073874
100297a5:	mov    esi,0x1006e9bc
100297aa:	push   0x6
100297ac:	mov    ecx,esi
100297ae:	call   0x100042b4
100297b3:	pop    ecx
100297b4:	pop    ecx
100297b5:	push   eax
100297b6:	lea    ecx,[esp+0x24]
100297ba:	call   0x100011a7
100297bf:	push   edi
100297c0:	lea    eax,[esp+0x24]
100297c4:	push   eax
100297c5:	lea    eax,[esp+0x12c]
100297cc:	push   eax
100297cd:	mov    BYTE PTR [esp+0x2a4],0xb
100297d5:	mov    eax,DWORD PTR [ebx]
100297d7:	add    eax,0x18
100297da:	call   0x10008803
100297df:	push   edi
100297e0:	push   0x1
100297e2:	lea    ecx,[esp+0x28]
100297e6:	mov    BYTE PTR [esp+0x2a0],0xd
100297ee:	call   0x100012f0
100297f3:	push   0x100738a0
100297f8:	push   0x6
100297fa:	mov    ecx,esi
100297fc:	call   0x100042b4
10029801:	pop    ecx
10029802:	pop    ecx
10029803:	push   eax
10029804:	lea    ecx,[esp+0x48]
10029808:	call   0x100011a7
1002980d:	lea    eax,[esp+0x44]
10029811:	push   eax
10029812:	mov    BYTE PTR [esp+0x29c],0xe
1002981a:	mov    eax,DWORD PTR [ebx+0x4]
1002981d:	add    eax,0x18
10029820:	push   eax
10029821:	call   0x100085a1
10029826:	push   edi
10029827:	push   0x1
10029829:	lea    ecx,[esp+0x4c]
1002982d:	mov    BYTE PTR [esp+0x2a0],0xd
10029835:	call   0x100012f0
1002983a:	cmp    DWORD PTR [esp+0x138],edi
10029841:	mov    DWORD PTR [esp+0x1c],edi
10029845:	jbe    0x10029913
1002984b:	push   DWORD PTR [esp+0x1c]
1002984f:	lea    eax,[esp+0x128]
10029856:	push   0x1006e9fc
1002985b:	push   eax
1002985c:	call   0x1000ce2f
10029861:	cmp    eax,0xffffffff
10029864:	mov    DWORD PTR [esp+0x14],eax
10029868:	jne    0x10029875
1002986a:	mov    eax,DWORD PTR [esp+0x138]
10029871:	mov    DWORD PTR [esp+0x14],eax
10029875:	cmp    eax,DWORD PTR [esp+0x1c]
10029879:	jbe    0x100298ff
1002987f:	push   0x100738d0
10029884:	push   0x6
10029886:	mov    ecx,esi
10029888:	call   0x100042b4
1002988d:	pop    ecx
1002988e:	pop    ecx
1002988f:	push   eax
10029890:	lea    ecx,[esp+0x48]
10029894:	call   0x100011a7
10029899:	mov    BYTE PTR [esp+0x298],0xf
100298a1:	mov    eax,DWORD PTR [esp+0x14]
100298a5:	sub    eax,DWORD PTR [esp+0x1c]
100298a9:	push   eax
100298aa:	push   DWORD PTR [esp+0x20]
100298ae:	lea    eax,[esp+0x12c]
100298b5:	push   eax
100298b6:	lea    eax,[esp+0x6c]
100298ba:	call   0x1000ce4e
100298bf:	mov    BYTE PTR [esp+0x298],0x10
100298c7:	mov    edx,DWORD PTR [ebx+0x4]
100298ca:	push   0x1
100298cc:	lea    ecx,[esp+0x48]
100298d0:	push   ecx
100298d1:	add    edx,0x18
100298d4:	mov    ecx,eax
100298d6:	call   0x10008298
100298db:	push   edi
100298dc:	push   0x1
100298de:	lea    ecx,[esp+0x68]
100298e2:	call   0x100012f0
100298e7:	push   edi
100298e8:	push   0x1
100298ea:	lea    ecx,[esp+0x4c]
100298ee:	mov    BYTE PTR [esp+0x2a0],0xd
100298f6:	call   0x100012f0
100298fb:	mov    eax,DWORD PTR [esp+0x14]
100298ff:	cmp    eax,DWORD PTR [esp+0x138]
10029906:	lea    ecx,[eax+0x1]
10029909:	mov    DWORD PTR [esp+0x1c],ecx
1002990d:	jb     0x1002984b
10029913:	push   0x1006dd18
10029918:	lea    esi,[esp+0x198]
1002991f:	call   0x10006825
10029924:	test   al,al
10029926:	pop    ecx
10029927:	jne    0x10029ae8
1002992d:	lea    edi,[esp+0x1ec]
10029934:	call   0x1000bfdb
10029939:	mov    eax,esi
1002993b:	push   eax
1002993c:	lea    ecx,[esp+0x144]
10029943:	mov    BYTE PTR [esp+0x29c],0x11
1002994b:	call   0x100011c9
10029950:	cmp    BYTE PTR [esp+0x13],0x0
10029955:	mov    BYTE PTR [esp+0x298],0x12
1002995d:	je     0x10029ab6
10029963:	mov    eax,edi
10029965:	push   eax
10029966:	lea    ecx,[esp+0x144]
1002996d:	call   0x10032750
10029972:	test   al,al
10029974:	pop    ecx
10029975:	je     0x10029ab6
1002997b:	push   0x1007390c
10029980:	push   0x4
10029982:	mov    ecx,0x1006e51c
10029987:	call   0x100042b4
1002998c:	pop    ecx
1002998d:	pop    ecx
1002998e:	push   eax
1002998f:	lea    ecx,[esp+0x64]
10029993:	call   0x100011a7
10029998:	xor    edi,edi
1002999a:	push   edi
1002999b:	lea    eax,[esp+0x64]
1002999f:	push   eax
100299a0:	lea    eax,[esp+0x110]
100299a7:	push   eax
100299a8:	mov    BYTE PTR [esp+0x2a4],0x13
100299b0:	mov    eax,DWORD PTR [ebx]
100299b2:	add    eax,0x18
100299b5:	call   0x10008803
100299ba:	mov    esi,eax
100299bc:	push   0x10073938
100299c1:	push   0x7
100299c3:	mov    ecx,0x1006e4dc
100299c8:	mov    BYTE PTR [esp+0x2a0],0x14
100299d0:	call   0x100042b4
100299d5:	pop    ecx
100299d6:	pop    ecx
100299d7:	push   eax
100299d8:	lea    ecx,[esp+0xd4]
100299df:	call   0x100011a7
100299e4:	push   esi
100299e5:	push   eax
100299e6:	lea    eax,[esp+0xbc]
100299ed:	push   eax
100299ee:	mov    BYTE PTR [esp+0x2a4],0x15
100299f6:	call   0x1000676d
100299fb:	add    esp,0xc
100299fe:	lea    ecx,[esp+0x248]
10029a05:	push   ecx
10029a06:	push   eax
10029a07:	lea    eax,[esp+0xa0]
10029a0e:	push   eax
10029a0f:	mov    BYTE PTR [esp+0x2a4],0x16
10029a17:	call   0x1000676d
10029a1c:	add    esp,0xc
10029a1f:	lea    ecx,[esp+0x264]
10029a26:	push   ecx
10029a27:	push   eax
10029a28:	lea    eax,[esp+0xf4]
10029a2f:	push   eax
10029a30:	mov    BYTE PTR [esp+0x2a4],0x17
10029a38:	call   0x1000676d
10029a3d:	add    esp,0xc
10029a40:	push   0xffffffff
10029a42:	push   edi
10029a43:	push   eax
10029a44:	lea    ecx,[esp+0x14c]
10029a4b:	mov    BYTE PTR [esp+0x2a4],0x18
10029a53:	call   0x10001241
10029a58:	xor    esi,esi
10029a5a:	push   edi
10029a5b:	inc    esi
10029a5c:	push   esi
10029a5d:	lea    ecx,[esp+0xf4]
10029a64:	call   0x100012f0
10029a69:	push   edi
10029a6a:	push   esi
10029a6b:	lea    ecx,[esp+0xa0]
10029a72:	call   0x100012f0
10029a77:	push   edi
10029a78:	push   esi
10029a79:	lea    ecx,[esp+0xbc]
10029a80:	call   0x100012f0
10029a85:	push   edi
10029a86:	push   esi
10029a87:	lea    ecx,[esp+0xd8]
10029a8e:	call   0x100012f0
10029a93:	push   edi
10029a94:	push   esi
10029a95:	lea    ecx,[esp+0x110]
10029a9c:	call   0x100012f0
10029aa1:	push   edi
10029aa2:	push   esi
10029aa3:	lea    ecx,[esp+0x68]
10029aa7:	mov    BYTE PTR [esp+0x2a0],0x12
10029aaf:	call   0x100012f0
10029ab4:	jmp    0x10029ab8
10029ab6:	xor    edi,edi
10029ab8:	lea    eax,[esp+0x140]
10029abf:	push   eax
10029ac0:	mov    eax,DWORD PTR [ebx+0x4]
10029ac3:	mov    esi,DWORD PTR [eax+0x4]
10029ac6:	call   0x10007cc3
10029acb:	push   edi
10029acc:	push   0x1
10029ace:	lea    ecx,[esp+0x148]
10029ad5:	call   0x100012f0
10029ada:	lea    esi,[esp+0x1ec]
10029ae1:	call   0x1000c008
10029ae6:	xor    edi,edi
10029ae8:	push   edi
10029ae9:	push   0x1
10029aeb:	lea    ecx,[esp+0x12c]
10029af2:	call   0x100012f0
10029af7:	lea    esi,[esp+0x15c]
10029afe:	call   0x1000bfa0
10029b03:	mov    al,0x1
10029b05:	mov    ecx,DWORD PTR [esp+0x290]
10029b0c:	mov    DWORD PTR fs:0x0,ecx
10029b13:	pop    ecx
10029b14:	pop    edi
10029b15:	pop    esi
10029b16:	pop    ebx
10029b17:	mov    ecx,DWORD PTR [esp+0x278]
10029b1e:	xor    ecx,esp
10029b20:	call   0x10043615
10029b25:	mov    esp,ebp
10029b27:	pop    ebp
10029b28:	ret    0x4
10029b2b:	push   ebp
10029b2c:	mov    ebp,esp
10029b2e:	sub    esp,0x1c
10029b31:	push   esi
10029b32:	mov    esi,DWORD PTR [ebp+0x8]
10029b35:	push   DWORD PTR [esi]
10029b37:	call   0x10026826
10029b3c:	test   al,al
10029b3e:	pop    ecx
10029b3f:	je     0x10029b7a
10029b41:	push   DWORD PTR [esi]
10029b43:	lea    ecx,[ebp-0x1c]
10029b46:	call   0x10009035
10029b4b:	cmp    DWORD PTR [eax+0x18],0x10
10029b4f:	jb     0x10029b56
10029b51:	mov    eax,DWORD PTR [eax+0x4]
10029b54:	jmp    0x10029b59
10029b56:	add    eax,0x4
10029b59:	push   eax
10029b5a:	mov    eax,DWORD PTR [esi+0x10]
10029b5d:	push   DWORD PTR [eax]
10029b5f:	call   0x10002068
10029b64:	pop    ecx
10029b65:	pop    ecx
10029b66:	push   0x0
10029b68:	push   0x1
10029b6a:	lea    ecx,[ebp-0x1c]
10029b6d:	call   0x100012f0
10029b72:	mov    BYTE PTR [esi+0x14],0x1
10029b76:	mov    al,0x1
10029b78:	jmp    0x10029b7c
10029b7a:	xor    al,al
10029b7c:	pop    esi
10029b7d:	leave  
10029b7e:	ret    0x4
10029b81:	push   ebp
10029b82:	mov    ebp,esp
10029b84:	and    esp,0xfffffff8
10029b87:	push   0xffffffff
10029b89:	push   0x10062de0
10029b8e:	mov    eax,fs:0x0
10029b94:	push   eax
10029b95:	sub    esp,0x58
10029b98:	push   ebx
10029b99:	push   esi
10029b9a:	push   edi
10029b9b:	mov    eax,ds:0x100801ac
10029ba0:	xor    eax,esp
10029ba2:	push   eax
10029ba3:	lea    eax,[esp+0x68]
10029ba7:	mov    fs:0x0,eax
10029bad:	mov    esi,DWORD PTR [ebp+0x8]
10029bb0:	push   DWORD PTR [esi]
10029bb2:	call   0x10026826
10029bb7:	test   al,al
10029bb9:	pop    ecx
10029bba:	je     0x10029c7d
10029bc0:	push   0x10073964
10029bc5:	mov    edi,0x10073990
10029bca:	push   0xd
10029bcc:	mov    ecx,edi
10029bce:	call   0x100042b4
10029bd3:	pop    ecx
10029bd4:	pop    ecx
10029bd5:	push   eax
10029bd6:	lea    ecx,[esp+0x14]
10029bda:	call   0x100011a7
10029bdf:	and    DWORD PTR [esp+0x70],0x0
10029be4:	lea    eax,[esp+0x10]
10029be8:	push   eax
10029be9:	mov    eax,DWORD PTR [esi+0x8]
10029bec:	add    eax,0x20
10029bef:	push   eax
10029bf0:	call   0x100085a1
10029bf5:	or     DWORD PTR [esp+0x70],0xffffffff
10029bfa:	xor    ebx,ebx
10029bfc:	push   0x0
10029bfe:	inc    ebx
10029bff:	push   ebx
10029c00:	lea    ecx,[esp+0x18]
10029c04:	call   0x100012f0
10029c09:	push   0x100739a0
10029c0e:	push   0x8
10029c10:	mov    ecx,0x100739d0
10029c15:	call   0x100042b4
10029c1a:	pop    ecx
10029c1b:	pop    ecx
10029c1c:	push   eax
10029c1d:	lea    ecx,[esp+0x4c]
10029c21:	call   0x100011a7
10029c26:	push   0x100739dc
10029c2b:	push   0xd
10029c2d:	mov    ecx,edi
10029c2f:	mov    DWORD PTR [esp+0x78],ebx
10029c33:	call   0x100042b4
10029c38:	pop    ecx
10029c39:	pop    ecx
10029c3a:	push   eax
10029c3b:	lea    ecx,[esp+0x30]
10029c3f:	call   0x100011a7
10029c44:	mov    BYTE PTR [esp+0x70],0x2
10029c49:	mov    edx,DWORD PTR [esi+0x8]
10029c4c:	xor    edi,edi
10029c4e:	push   edi
10029c4f:	lea    eax,[esp+0x30]
10029c53:	push   eax
10029c54:	add    edx,0x20
10029c57:	lea    ecx,[esp+0x50]
10029c5b:	call   0x10008298
10029c60:	push   edi
10029c61:	push   ebx
10029c62:	lea    ecx,[esp+0x34]
10029c66:	call   0x100012f0
10029c6b:	push   edi
10029c6c:	push   ebx
10029c6d:	lea    ecx,[esp+0x50]
10029c71:	call   0x100012f0
10029c76:	mov    BYTE PTR [esi+0x11],bl
10029c79:	mov    al,bl
10029c7b:	jmp    0x10029c7f
10029c7d:	xor    al,al
10029c7f:	mov    ecx,DWORD PTR [esp+0x68]
10029c83:	mov    DWORD PTR fs:0x0,ecx
10029c8a:	pop    ecx
10029c8b:	pop    edi
10029c8c:	pop    esi
10029c8d:	pop    ebx
10029c8e:	mov    esp,ebp
10029c90:	pop    ebp
10029c91:	ret    0x4
10029c94:	push   ebp
10029c95:	mov    ebp,esp
10029c97:	and    esp,0xfffffff8
10029c9a:	push   0xffffffff
10029c9c:	push   0x1006205f
10029ca1:	mov    eax,fs:0x0
10029ca7:	push   eax
10029ca8:	sub    esp,0x1f0
10029cae:	push   ebx
10029caf:	push   esi
10029cb0:	push   edi
10029cb1:	mov    eax,ds:0x100801ac
10029cb6:	xor    eax,esp
10029cb8:	push   eax
10029cb9:	lea    eax,[esp+0x200]
10029cc0:	mov    fs:0x0,eax
10029cc6:	push   0x10073a08
10029ccb:	xor    ebx,ebx
10029ccd:	push   0xa
10029ccf:	mov    ecx,0x1006e7f0
10029cd4:	mov    DWORD PTR [esp+0x18],ebx
10029cd8:	call   0x100042b4
10029cdd:	pop    ecx
10029cde:	pop    ecx
10029cdf:	push   eax
10029ce0:	lea    ecx,[esp+0x78]
10029ce4:	call   0x100011a7
10029ce9:	mov    edi,DWORD PTR [ebp+0x8]
10029cec:	push   ebx
10029ced:	lea    eax,[esp+0x78]
10029cf1:	push   eax
10029cf2:	lea    eax,[esp+0xb4]
10029cf9:	mov    DWORD PTR [esp+0x210],ebx
10029d00:	push   eax
10029d01:	mov    eax,DWORD PTR [edi]
10029d03:	xor    esi,esi
10029d05:	inc    esi
10029d06:	add    eax,0x18
10029d09:	mov    DWORD PTR [esp+0x1c],esi
10029d0d:	call   0x10008803
10029d12:	mov    DWORD PTR [esp+0x208],esi
10029d19:	push   0x1006dd18
10029d1e:	mov    esi,eax
10029d20:	mov    DWORD PTR [esp+0x14],0x3
10029d28:	call   0x10006825
10029d2d:	test   al,al
10029d2f:	pop    ecx
10029d30:	jne    0x10029da9
10029d32:	push   0x10073a38
10029d37:	push   0x4
10029d39:	mov    ecx,0x1006e51c
10029d3e:	call   0x100042b4
10029d43:	pop    ecx
10029d44:	pop    ecx
10029d45:	push   eax
10029d46:	lea    ecx,[esp+0x94]
10029d4d:	call   0x100011a7
10029d52:	push   ebx
10029d53:	lea    eax,[esp+0x94]
10029d5a:	push   eax
10029d5b:	lea    eax,[esp+0xec]
10029d62:	mov    DWORD PTR [esp+0x210],0x2
10029d6d:	push   eax
10029d6e:	mov    eax,DWORD PTR [edi]
10029d70:	add    eax,0x18
10029d73:	mov    DWORD PTR [esp+0x1c],0x7
10029d7b:	call   0x10008803
10029d80:	mov    DWORD PTR [esp+0x208],0x3
10029d8b:	push   0x1006dd18
10029d90:	mov    esi,eax
10029d92:	mov    DWORD PTR [esp+0x14],0xf
10029d9a:	call   0x10006825
10029d9f:	test   al,al
10029da1:	pop    ecx
10029da2:	mov    BYTE PTR [esp+0x17],0x1
10029da7:	je     0x10029dad
10029da9:	mov    BYTE PTR [esp+0x17],bl
10029dad:	test   BYTE PTR [esp+0x10],0x8
10029db2:	je     0x10029dc8
10029db4:	and    DWORD PTR [esp+0x10],0xfffffff7
10029db9:	push   ebx
10029dba:	push   0x1
10029dbc:	lea    ecx,[esp+0xec]
10029dc3:	call   0x100012f0
10029dc8:	test   BYTE PTR [esp+0x10],0x4
10029dcd:	je     0x10029de3
10029dcf:	and    DWORD PTR [esp+0x10],0xfffffffb
10029dd4:	push   ebx
10029dd5:	push   0x1
10029dd7:	lea    ecx,[esp+0x98]
10029dde:	call   0x100012f0
10029de3:	test   BYTE PTR [esp+0x10],0x2
10029de8:	je     0x10029dfe
10029dea:	and    DWORD PTR [esp+0x10],0xfffffffd
10029def:	push   ebx
10029df0:	push   0x1
10029df2:	lea    ecx,[esp+0xb4]
10029df9:	call   0x100012f0
10029dfe:	or     DWORD PTR [esp+0x208],0xffffffff
10029e06:	test   BYTE PTR [esp+0x10],0x1
10029e0b:	je     0x10029e19
10029e0d:	push   ebx
10029e0e:	push   0x1
10029e10:	lea    ecx,[esp+0x7c]
10029e14:	call   0x100012f0
10029e19:	cmp    BYTE PTR [esp+0x17],bl
10029e1d:	je     0x10029ff5
10029e23:	push   0x10073a78
10029e28:	push   0xf
10029e2a:	mov    ecx,0x1006e868
10029e2f:	call   0x100042b4
10029e34:	pop    ecx
10029e35:	pop    ecx
10029e36:	push   eax
10029e37:	lea    ecx,[esp+0x24]
10029e3b:	call   0x100011a7
10029e40:	push   0x4
10029e42:	pop    eax
10029e43:	push   0x10073aa8
10029e48:	push   eax
10029e49:	mov    ecx,0x1006e51c
10029e4e:	mov    DWORD PTR [esp+0x210],eax
10029e55:	call   0x100042b4
10029e5a:	pop    ecx
10029e5b:	pop    ecx
10029e5c:	push   eax
10029e5d:	lea    ecx,[esp+0x5c]
10029e61:	call   0x100011a7
10029e66:	push   0x10073ae4
10029e6b:	push   0xa
10029e6d:	mov    ecx,0x1006e7f0
10029e72:	mov    BYTE PTR [esp+0x210],0x5
10029e7a:	call   0x100042b4
10029e7f:	pop    ecx
10029e80:	pop    ecx
10029e81:	push   eax
10029e82:	lea    ecx,[esp+0x40]
10029e86:	call   0x100011a7
10029e8b:	mov    BYTE PTR [esp+0x208],0x6
10029e93:	mov    eax,DWORD PTR [edi]
10029e95:	mov    eax,DWORD PTR [eax+0x8]
10029e98:	lea    ecx,[esp+0x138]
10029e9f:	push   ecx
10029ea0:	call   0x10007ca8
10029ea5:	mov    esi,eax
10029ea7:	push   ebx
10029ea8:	lea    eax,[esp+0x24]
10029eac:	push   eax
10029ead:	lea    eax,[esp+0x108]
10029eb4:	push   eax
10029eb5:	mov    BYTE PTR [esp+0x214],0x7
10029ebd:	mov    eax,DWORD PTR [edi]
10029ebf:	add    eax,0x18
10029ec2:	call   0x10008803
10029ec7:	mov    DWORD PTR [esp+0x10],eax
10029ecb:	mov    BYTE PTR [esp+0x208],0x8
10029ed3:	mov    eax,DWORD PTR [edi]
10029ed5:	mov    eax,DWORD PTR [eax+0x4]
10029ed8:	lea    ecx,[esp+0xc8]
10029edf:	push   ecx
10029ee0:	call   0x10007ca8
10029ee5:	mov    DWORD PTR [esp+0x18],eax
10029ee9:	push   ebx
10029eea:	lea    eax,[esp+0x5c]
10029eee:	push   eax
10029eef:	lea    eax,[esp+0x124]
10029ef6:	push   eax
10029ef7:	mov    BYTE PTR [esp+0x214],0x9
10029eff:	mov    eax,DWORD PTR [edi]
10029f01:	add    eax,0x18
10029f04:	call   0x10008803
10029f09:	mov    DWORD PTR [esp+0x1c],eax
10029f0d:	push   ebx
10029f0e:	lea    eax,[esp+0x40]
10029f12:	push   eax
10029f13:	lea    eax,[esp+0x15c]
10029f1a:	push   eax
10029f1b:	mov    BYTE PTR [esp+0x214],0xa
10029f23:	mov    eax,DWORD PTR [edi]
10029f25:	add    eax,0x18
10029f28:	call   0x10008803
10029f2d:	push   esi
10029f2e:	mov    BYTE PTR [esp+0x20c],0xb
10029f36:	push   DWORD PTR [esp+0x14]
10029f3a:	push   DWORD PTR [esp+0x20]
10029f3e:	push   DWORD PTR [esp+0x28]
10029f42:	push   eax
10029f43:	lea    eax,[esp+0x184]
10029f4a:	push   eax
10029f4b:	call   0x10012e2b
10029f50:	mov    esi,eax
10029f52:	push   0xffffffff
10029f54:	mov    BYTE PTR [esp+0x20c],0xc
10029f5c:	push   DWORD PTR ds:0x10082e34
10029f62:	call   DWORD PTR ds:0x1006707c
10029f68:	test   eax,eax
10029f6a:	jne    0x10029f7f
10029f6c:	mov    eax,esi
10029f6e:	call   0x10012f8c
10029f73:	push   DWORD PTR ds:0x10082e34
10029f79:	call   DWORD PTR ds:0x10067090
10029f7f:	lea    esi,[esp+0x170]
10029f86:	call   0x1000bfa0
10029f8b:	xor    esi,esi
10029f8d:	push   ebx
10029f8e:	inc    esi
10029f8f:	push   esi
10029f90:	lea    ecx,[esp+0x15c]
10029f97:	call   0x100012f0
10029f9c:	push   ebx
10029f9d:	push   esi
10029f9e:	lea    ecx,[esp+0x124]
10029fa5:	call   0x100012f0
10029faa:	push   ebx
10029fab:	push   esi
10029fac:	lea    ecx,[esp+0xd0]
10029fb3:	call   0x100012f0
10029fb8:	push   ebx
10029fb9:	push   esi
10029fba:	lea    ecx,[esp+0x108]
10029fc1:	call   0x100012f0
10029fc6:	push   ebx
10029fc7:	push   esi
10029fc8:	lea    ecx,[esp+0x140]
10029fcf:	call   0x100012f0
10029fd4:	push   ebx
10029fd5:	push   esi
10029fd6:	lea    ecx,[esp+0x44]
10029fda:	call   0x100012f0
10029fdf:	push   ebx
10029fe0:	push   esi
10029fe1:	lea    ecx,[esp+0x60]
10029fe5:	call   0x100012f0
10029fea:	push   ebx
10029feb:	push   esi
10029fec:	lea    ecx,[esp+0x28]
10029ff0:	call   0x100012f0
10029ff5:	xor    al,al
10029ff7:	mov    ecx,DWORD PTR [esp+0x200]
10029ffe:	mov    DWORD PTR fs:0x0,ecx
1002a005:	pop    ecx
1002a006:	pop    edi
1002a007:	pop    esi
1002a008:	pop    ebx
1002a009:	mov    esp,ebp
1002a00b:	pop    ebp
1002a00c:	ret    0x4
1002a00f:	push   0x0
1002a011:	push   0x10082e10
1002a016:	call   DWORD PTR ds:0x100670f0
1002a01c:	test   eax,eax
1002a01e:	jne    0x1002a033
1002a020:	mov    eax,DWORD PTR [esp+0x4]
1002a024:	mov    BYTE PTR [eax+0x14],0x1
1002a028:	mov    eax,DWORD PTR [eax+0x4]
1002a02b:	mov    BYTE PTR [eax+0x2c],0x1
1002a02f:	mov    al,0x1
1002a031:	jmp    0x1002a035
1002a033:	xor    al,al
1002a035:	ret    0x4
1002a038:	push   0x20
1002a03a:	mov    eax,0x10060fdd
1002a03f:	call   0x10059df5
1002a044:	mov    edi,DWORD PTR [ebp+0x8]
1002a047:	mov    esi,edi
1002a049:	call   0x100040ef
1002a04e:	push   DWORD PTR [ebp+0xc]
1002a051:	xor    ebx,ebx
1002a053:	mov    DWORD PTR [ebp-0x4],ebx
1002a056:	lea    ecx,[ebp-0x28]
1002a059:	mov    DWORD PTR [edi+0x1c],ebx
1002a05c:	mov    DWORD PTR [edi+0x20],ebx
1002a05f:	mov    DWORD PTR [edi+0x24],ebx
1002a062:	call   0x100011a7
1002a067:	mov    esi,DWORD PTR [ebp+0x10]
1002a06a:	lea    eax,[ebp-0x28]
1002a06d:	mov    ecx,edi
1002a06f:	mov    BYTE PTR [ebp-0x4],0x1
1002a073:	call   0x10039ff0
1002a078:	push   ebx
1002a079:	push   0x1
1002a07b:	lea    ecx,[ebp-0x28]
1002a07e:	call   0x100012f0
1002a083:	mov    eax,edi
1002a085:	call   0x10059ecd
1002a08a:	ret    0xc
1002a08d:	push   ebp
1002a08e:	mov    ebp,esp
1002a090:	and    esp,0xfffffff8
1002a093:	push   0xffffffff
1002a095:	push   0x100639c9
1002a09a:	mov    eax,fs:0x0
1002a0a0:	push   eax
1002a0a1:	sub    esp,0x100
1002a0a7:	mov    eax,ds:0x100801ac
1002a0ac:	xor    eax,esp
1002a0ae:	mov    DWORD PTR [esp+0xf8],eax
1002a0b5:	push   ebx
1002a0b6:	push   esi
1002a0b7:	push   edi
1002a0b8:	mov    eax,ds:0x100801ac
1002a0bd:	xor    eax,esp
1002a0bf:	push   eax
1002a0c0:	lea    eax,[esp+0x110]
1002a0c7:	mov    fs:0x0,eax
1002a0cd:	mov    ebx,DWORD PTR [ebp+0x8]
1002a0d0:	mov    eax,DWORD PTR [ebx]
1002a0d2:	cmp    BYTE PTR [eax+0x2c],0x0
1002a0d6:	mov    DWORD PTR [esp+0x14],ebx
1002a0da:	je     0x1002a104
1002a0dc:	xor    al,al
1002a0de:	mov    ecx,DWORD PTR [esp+0x110]
1002a0e5:	mov    DWORD PTR fs:0x0,ecx
1002a0ec:	pop    ecx
1002a0ed:	pop    edi
1002a0ee:	pop    esi
1002a0ef:	pop    ebx
1002a0f0:	mov    ecx,DWORD PTR [esp+0xf8]
1002a0f7:	xor    ecx,esp
1002a0f9:	call   0x10043615
1002a0fe:	mov    esp,ebp
1002a100:	pop    ebp
1002a101:	ret    0x4
1002a104:	push   0x10073b18
1002a109:	push   0x8
1002a10b:	mov    ecx,0x10072d9c
1002a110:	call   0x100042b4
1002a115:	pop    ecx
1002a116:	pop    ecx
1002a117:	push   eax
1002a118:	lea    ecx,[esp+0xb4]
1002a11f:	call   0x100011a7
1002a124:	xor    esi,esi
1002a126:	push   esi
1002a127:	lea    eax,[esp+0xb4]
1002a12e:	push   eax
1002a12f:	lea    eax,[esp+0x9c]
1002a136:	push   eax
1002a137:	mov    DWORD PTR [esp+0x124],esi
1002a13e:	mov    eax,DWORD PTR [ebx+0x4]
1002a141:	add    eax,0x20
1002a144:	call   0x10008803
1002a149:	push   esi
1002a14a:	push   0x1
1002a14c:	lea    ecx,[esp+0xb8]
1002a153:	mov    BYTE PTR [esp+0x120],0x2
1002a15b:	call   0x100012f0
1002a160:	push   0x1006dd18
1002a165:	lea    esi,[esp+0x98]
1002a16c:	call   0x10006825
1002a171:	test   al,al
1002a173:	pop    ecx
1002a174:	jne    0x1002a6de
1002a17a:	push   DWORD PTR [ebx]
1002a17c:	lea    ecx,[esp+0xf0]
1002a183:	call   0x10009035
1002a188:	lea    eax,[esp+0xcc]
1002a18f:	push   eax
1002a190:	push   0x10082f58
1002a195:	lea    ecx,[esp+0xf4]
1002a19c:	mov    BYTE PTR [esp+0x120],0x3
1002a1a4:	call   0x10019c6d
1002a1a9:	lea    edi,[esp+0xcc]
1002a1b0:	mov    BYTE PTR [esp+0x118],0x4
1002a1b8:	call   0x10019b2d
1002a1bd:	xor    edi,edi
1002a1bf:	test   al,al
1002a1c1:	jne    0x1002a6c0
1002a1c7:	cmp    DWORD PTR [esp+0xcc],edi
1002a1ce:	je     0x1002a6c0
1002a1d4:	cmp    DWORD PTR [esp+0xac],0x10
1002a1dc:	mov    esi,DWORD PTR [esp+0x98]
1002a1e3:	jb     0x1002a1eb
1002a1e5:	mov    DWORD PTR [esp+0x10],esi
1002a1e9:	jmp    0x1002a1f6
1002a1eb:	lea    eax,[esp+0x98]
1002a1f2:	mov    DWORD PTR [esp+0x10],eax
1002a1f6:	cmp    DWORD PTR [esp+0xac],0x10
1002a1fe:	jae    0x1002a207
1002a200:	lea    esi,[esp+0x98]
1002a207:	push   0x10073b48
1002a20c:	push   0x8
1002a20e:	mov    ecx,0x10073b88
1002a213:	call   0x100042b4
1002a218:	push   eax
1002a219:	push   DWORD PTR [esp+0x1c]
1002a21d:	call   0x10045bf0
1002a222:	add    esp,0x10
1002a225:	cmp    eax,esi
1002a227:	jne    0x1002a40c
1002a22d:	push   0x10073b94
1002a232:	push   0x7
1002a234:	mov    ecx,0x10073bd0
1002a239:	call   0x100042b4
1002a23e:	pop    ecx
1002a23f:	pop    ecx
1002a240:	push   eax
1002a241:	lea    ecx,[esp+0xb4]
1002a248:	call   0x100011a7
1002a24d:	push   0xffffffff
1002a24f:	push   edi
1002a250:	lea    eax,[esp+0x9c]
1002a257:	lea    esi,[esp+0xb8]
1002a25e:	mov    BYTE PTR [esp+0x120],0x5
1002a266:	call   0x10004cbe
1002a26b:	push   0x10073bd8
1002a270:	push   0x3
1002a272:	mov    ecx,0x10073c18
1002a277:	call   0x100042b4
1002a27c:	pop    ecx
1002a27d:	pop    ecx
1002a27e:	push   eax
1002a27f:	lea    ecx,[esp+0x1c]
1002a283:	call   0x100011a7
1002a288:	mov    BYTE PTR [esp+0x118],0x6
1002a290:	mov    eax,DWORD PTR [ebx+0x8]
1002a293:	mov    esi,DWORD PTR [eax+0x4]
1002a296:	lea    eax,[esp+0x18]
1002a29a:	push   eax
1002a29b:	call   0x10007cc3
1002a2a0:	push   edi
1002a2a1:	push   0x1
1002a2a3:	lea    ecx,[esp+0x20]
1002a2a7:	mov    BYTE PTR [esp+0x120],0x5
1002a2af:	call   0x100012f0
1002a2b4:	push   0x10073c1c
1002a2b9:	push   0x11
1002a2bb:	mov    ecx,0x10073c4c
1002a2c0:	call   0x100042b4
1002a2c5:	pop    ecx
1002a2c6:	pop    ecx
1002a2c7:	push   eax
1002a2c8:	lea    ecx,[esp+0x1c]
1002a2cc:	call   0x100011a7
1002a2d1:	mov    BYTE PTR [esp+0x118],0x7
1002a2d9:	mov    eax,DWORD PTR [ebx+0x8]
1002a2dc:	mov    esi,DWORD PTR [eax+0x8]
1002a2df:	lea    eax,[esp+0x18]
1002a2e3:	push   eax
1002a2e4:	call   0x10007cc3
1002a2e9:	push   edi
1002a2ea:	push   0x1
1002a2ec:	lea    ecx,[esp+0x20]
1002a2f0:	mov    BYTE PTR [esp+0x120],0x5
1002a2f8:	call   0x100012f0
1002a2fd:	push   0x10073c60
1002a302:	push   0x8
1002a304:	mov    ecx,0x10072d9c
1002a309:	call   0x100042b4
1002a30e:	pop    ecx
1002a30f:	pop    ecx
1002a310:	push   eax
1002a311:	lea    ecx,[esp+0x1c]
1002a315:	call   0x100011a7
1002a31a:	lea    eax,[esp+0x18]
1002a31e:	push   eax
1002a31f:	mov    BYTE PTR [esp+0x11c],0x8
1002a327:	mov    eax,DWORD PTR [ebx+0x8]
1002a32a:	add    eax,0x20
1002a32d:	push   eax
1002a32e:	call   0x100085a1
1002a333:	push   edi
1002a334:	push   0x1
1002a336:	lea    ecx,[esp+0x20]
1002a33a:	mov    BYTE PTR [esp+0x120],0x5
1002a342:	call   0x100012f0
1002a347:	push   0x10073c98
1002a34c:	mov    esi,0x10073cbc
1002a351:	push   0x7
1002a353:	mov    ecx,esi
1002a355:	call   0x100042b4
1002a35a:	pop    ecx
1002a35b:	pop    ecx
1002a35c:	push   eax
1002a35d:	lea    ecx,[esp+0x1c]
1002a361:	call   0x100011a7
1002a366:	lea    eax,[esp+0x18]
1002a36a:	push   eax
1002a36b:	mov    BYTE PTR [esp+0x11c],0x9
1002a373:	mov    eax,DWORD PTR [ebx+0x8]
1002a376:	add    eax,0x20
1002a379:	push   eax
1002a37a:	call   0x100085a1
1002a37f:	push   edi
1002a380:	push   0x1
1002a382:	lea    ecx,[esp+0x20]
1002a386:	mov    BYTE PTR [esp+0x120],0x5
1002a38e:	call   0x100012f0
1002a393:	push   0x10073cc4
1002a398:	push   0x7
1002a39a:	mov    ecx,esi
1002a39c:	call   0x100042b4
1002a3a1:	pop    ecx
1002a3a2:	pop    ecx
1002a3a3:	push   eax
1002a3a4:	lea    ecx,[esp+0x1c]
1002a3a8:	call   0x100011a7
1002a3ad:	mov    BYTE PTR [esp+0x118],0xa
1002a3b5:	mov    edx,DWORD PTR [ebx+0x8]
1002a3b8:	push   edi
1002a3b9:	lea    eax,[esp+0x1c]
1002a3bd:	push   eax
1002a3be:	add    edx,0x20
1002a3c1:	lea    ecx,[esp+0xb8]
1002a3c8:	call   0x10008298
1002a3cd:	push   edi
1002a3ce:	push   0x1
1002a3d0:	lea    ecx,[esp+0x20]
1002a3d4:	call   0x100012f0
1002a3d9:	cmp    DWORD PTR [esp+0xac],0x10
1002a3e1:	mov    eax,DWORD PTR [esp+0x98]
1002a3e8:	jae    0x1002a3f1
1002a3ea:	lea    eax,[esp+0x98]
1002a3f1:	push   eax
1002a3f2:	call   0x10002068
1002a3f7:	pop    ecx
1002a3f8:	push   edi
1002a3f9:	push   0x1
1002a3fb:	lea    ecx,[esp+0xb8]
1002a402:	call   0x100012f0
1002a407:	jmp    0x1002a685
1002a40c:	push   0x34
1002a40e:	call   0x10043196
1002a413:	pop    ecx
1002a414:	mov    DWORD PTR [esp+0x10],eax
1002a418:	cmp    eax,edi
1002a41a:	mov    BYTE PTR [esp+0x118],0xb
1002a422:	je     0x1002a45a
1002a424:	lea    eax,[esp+0x34]
1002a428:	push   eax
1002a429:	push   0x10073cfc
1002a42e:	push   0xd
1002a430:	mov    ecx,0x10073d2c
1002a435:	mov    DWORD PTR [esp+0x40],edi
1002a439:	mov    DWORD PTR [esp+0x44],edi
1002a43d:	mov    DWORD PTR [esp+0x48],0x1
1002a445:	call   0x100042b4
1002a44a:	pop    ecx
1002a44b:	pop    ecx
1002a44c:	push   eax
1002a44d:	push   DWORD PTR [esp+0x18]
1002a451:	call   0x1002a038
1002a456:	mov    esi,eax
1002a458:	jmp    0x1002a45c
1002a45a:	xor    esi,esi
1002a45c:	mov    DWORD PTR [esp+0x10],esi
1002a460:	mov    BYTE PTR [esp+0x118],0xc
1002a468:	cmp    DWORD PTR [esp+0xac],0x10
1002a470:	mov    eax,DWORD PTR [esp+0x98]
1002a477:	jae    0x1002a480
1002a479:	lea    eax,[esp+0x98]
1002a480:	push   eax
1002a481:	mov    DWORD PTR [esp+0x38],eax
1002a485:	call   0x10043450
1002a48a:	pop    ecx
1002a48b:	mov    DWORD PTR [esp+0x38],eax
1002a48f:	lea    eax,[esp+0x34]
1002a493:	push   eax
1002a494:	push   esi
1002a495:	call   0x1003a2c0
1002a49a:	test   al,al
1002a49c:	jne    0x1002a5d0
1002a4a2:	xor    edi,edi
1002a4a4:	lea    eax,[esp+0x94]
1002a4ab:	call   0x10012206
1002a4b0:	cmp    BYTE PTR [eax],0x2f
1002a4b3:	je     0x1002a4d2
1002a4b5:	push   0x10073d3c
1002a4ba:	call   0x10043450
1002a4bf:	mov    ebx,eax
1002a4c1:	pop    ecx
1002a4c2:	lea    eax,[esp+0x94]
1002a4c9:	call   0x1002a6e2
1002a4ce:	mov    ebx,DWORD PTR [esp+0x14]
1002a4d2:	push   0x10073d40
1002a4d7:	push   0x4
1002a4d9:	mov    ecx,0x1006e51c
1002a4de:	call   0x100042b4
1002a4e3:	pop    ecx
1002a4e4:	pop    ecx
1002a4e5:	push   eax
1002a4e6:	lea    ecx,[esp+0x1c]
1002a4ea:	call   0x100011a7
1002a4ef:	xor    edi,edi
1002a4f1:	push   edi
1002a4f2:	lea    eax,[esp+0x1c]
1002a4f6:	push   eax
1002a4f7:	lea    eax,[esp+0x48]
1002a4fb:	push   eax
1002a4fc:	mov    BYTE PTR [esp+0x124],0xd
1002a504:	mov    eax,DWORD PTR [ebx]
1002a506:	add    eax,0x18
1002a509:	call   0x10008803
1002a50e:	mov    ebx,eax
1002a510:	push   0x10073d74
1002a515:	push   0x7
1002a517:	mov    ecx,0x1006e4dc
1002a51c:	mov    BYTE PTR [esp+0x120],0xe
1002a524:	call   0x100042b4
1002a529:	pop    ecx
1002a52a:	pop    ecx
1002a52b:	push   eax
1002a52c:	lea    ecx,[esp+0x60]
1002a530:	call   0x100011a7
1002a535:	push   ebx
1002a536:	push   eax
1002a537:	lea    eax,[esp+0x80]
1002a53e:	push   eax
1002a53f:	mov    BYTE PTR [esp+0x124],0xf
1002a547:	call   0x1000676d
1002a54c:	add    esp,0xc
1002a54f:	lea    ecx,[esp+0x94]
1002a556:	push   ecx
1002a557:	push   eax
1002a558:	lea    eax,[esp+0xb8]
1002a55f:	push   eax
1002a560:	mov    BYTE PTR [esp+0x124],0x10
1002a568:	call   0x1000676d
1002a56d:	add    esp,0xc
1002a570:	push   0xffffffff
1002a572:	push   edi
1002a573:	push   eax
1002a574:	lea    ecx,[esp+0xa0]
1002a57b:	mov    BYTE PTR [esp+0x124],0x11
1002a583:	call   0x10001241
1002a588:	xor    ebx,ebx
1002a58a:	push   edi
1002a58b:	inc    ebx
1002a58c:	push   ebx
1002a58d:	lea    ecx,[esp+0xb8]
1002a594:	call   0x100012f0
1002a599:	push   edi
1002a59a:	push   ebx
1002a59b:	lea    ecx,[esp+0x80]
1002a5a2:	call   0x100012f0
1002a5a7:	push   edi
1002a5a8:	push   ebx
1002a5a9:	lea    ecx,[esp+0x64]
1002a5ad:	call   0x100012f0
1002a5b2:	push   edi
1002a5b3:	push   ebx
1002a5b4:	lea    ecx,[esp+0x48]
1002a5b8:	call   0x100012f0
1002a5bd:	push   edi
1002a5be:	push   ebx
1002a5bf:	lea    ecx,[esp+0x20]
1002a5c3:	mov    BYTE PTR [esp+0x120],0xc
1002a5cb:	call   0x100012f0
1002a5d0:	lea    eax,[esp+0x40]
1002a5d4:	push   eax
1002a5d5:	lea    eax,[esp+0xd0]
1002a5dc:	call   0x10007ca8
1002a5e1:	mov    BYTE PTR [esp+0x118],0x12
1002a5e9:	push   DWORD PTR [esp+0xcc]
1002a5f0:	lea    ecx,[esp+0x98]
1002a5f7:	push   ecx
1002a5f8:	mov    ebx,eax
1002a5fa:	mov    edi,0x10082f58
1002a5ff:	call   0x10019baa
1002a604:	push   0x0
1002a606:	push   0x1
1002a608:	lea    ecx,[esp+0x48]
1002a60c:	mov    BYTE PTR [esp+0x120],0xc
1002a614:	call   0x100012f0
1002a619:	lea    eax,[esp+0x40]
1002a61d:	push   eax
1002a61e:	lea    eax,[esp+0xd0]
1002a625:	call   0x10007ca8
1002a62a:	cmp    DWORD PTR [esp+0xac],0x10
1002a632:	mov    ecx,DWORD PTR [esp+0x98]
1002a639:	jae    0x1002a642
1002a63b:	lea    ecx,[esp+0x98]
1002a642:	cmp    DWORD PTR [eax+0x18],0x10
1002a646:	jb     0x1002a64d
1002a648:	mov    eax,DWORD PTR [eax+0x4]
1002a64b:	jmp    0x1002a650
1002a64d:	add    eax,0x4
1002a650:	push   ecx
1002a651:	push   eax
1002a652:	call   0x10002068
1002a657:	pop    ecx
1002a658:	pop    ecx
1002a659:	push   0x0
1002a65b:	push   0x1
1002a65d:	lea    ecx,[esp+0x48]
1002a661:	call   0x100012f0
1002a666:	test   esi,esi
1002a668:	mov    BYTE PTR [esp+0x118],0x4
1002a670:	je     0x1002a67f
1002a672:	push   esi
1002a673:	call   0x1003a0d0
1002a678:	push   esi
1002a679:	call   0x10042fe2
1002a67e:	pop    ecx
1002a67f:	mov    ebx,DWORD PTR [esp+0x14]
1002a683:	xor    edi,edi
1002a685:	push   edi
1002a686:	push   0x1
1002a688:	lea    ecx,[esp+0xd8]
1002a68f:	mov    BYTE PTR [ebx+0x11],0x1
1002a693:	call   0x100012f0
1002a698:	push   edi
1002a699:	push   0x1
1002a69b:	lea    ecx,[esp+0xf4]
1002a6a2:	call   0x100012f0
1002a6a7:	mov    bl,0x1
1002a6a9:	push   0x0
1002a6ab:	push   0x1
1002a6ad:	lea    ecx,[esp+0x9c]
1002a6b4:	call   0x100012f0
1002a6b9:	mov    al,bl
1002a6bb:	jmp    0x1002a0de
1002a6c0:	push   edi
1002a6c1:	push   0x1
1002a6c3:	lea    ecx,[esp+0xd8]
1002a6ca:	call   0x100012f0
1002a6cf:	push   edi
1002a6d0:	push   0x1
1002a6d2:	lea    ecx,[esp+0xf4]
1002a6d9:	call   0x100012f0
1002a6de:	xor    bl,bl
1002a6e0:	jmp    0x1002a6a9
1002a6e2:	push   ebp
1002a6e3:	mov    ebp,esp
1002a6e5:	push   ecx
1002a6e6:	push   esi
1002a6e7:	push   edi
1002a6e8:	mov    esi,eax
1002a6ea:	mov    edi,0x10073d3c
1002a6ef:	push   edi
1002a6f0:	mov    ecx,esi
1002a6f2:	call   0x100015e2
1002a6f7:	test   al,al
1002a6f9:	je     0x1002a716
1002a6fb:	cmp    DWORD PTR [esi+0x18],0x10
1002a6ff:	jb     0x1002a706
1002a701:	mov    eax,DWORD PTR [esi+0x4]
1002a704:	jmp    0x1002a709
1002a706:	lea    eax,[esi+0x4]
1002a709:	sub    edi,eax
1002a70b:	push   ebx
1002a70c:	push   edi
1002a70d:	mov    eax,esi
1002a70f:	call   0x1002a797
1002a714:	jmp    0x1002a793
1002a716:	or     eax,0xffffffff
1002a719:	sub    eax,DWORD PTR [esi+0x14]
1002a71c:	cmp    eax,ebx
1002a71e:	ja     0x1002a725
1002a720:	call   0x100574b0
1002a725:	test   ebx,ebx
1002a727:	jbe    0x1002a791
1002a729:	mov    eax,DWORD PTR [esi+0x14]
1002a72c:	add    eax,ebx
1002a72e:	push   0x0
1002a730:	push   eax
1002a731:	mov    ecx,esi
1002a733:	mov    DWORD PTR [ebp-0x4],eax
1002a736:	call   0x10001438
1002a73b:	test   al,al
1002a73d:	je     0x1002a791
1002a73f:	mov    eax,DWORD PTR [esi+0x18]
1002a742:	cmp    eax,0x10
1002a745:	lea    edi,[esi+0x4]
1002a748:	jb     0x1002a74e
1002a74a:	mov    edx,DWORD PTR [edi]
1002a74c:	jmp    0x1002a750
1002a74e:	mov    edx,edi
1002a750:	cmp    eax,0x10
1002a753:	jb     0x1002a759
1002a755:	mov    ecx,DWORD PTR [edi]
1002a757:	jmp    0x1002a75b
1002a759:	mov    ecx,edi
1002a75b:	push   DWORD PTR [esi+0x14]
1002a75e:	sub    eax,ebx
1002a760:	push   edx
1002a761:	push   eax
1002a762:	add    ecx,ebx
1002a764:	push   ecx
1002a765:	call   0x1000105b
1002a76a:	mov    eax,DWORD PTR [esi+0x18]
1002a76d:	add    esp,0x10
1002a770:	cmp    eax,0x10
1002a773:	jb     0x1002a777
1002a775:	mov    edi,DWORD PTR [edi]
1002a777:	push   ebx
1002a778:	push   0x10073d3c
1002a77d:	push   eax
1002a77e:	push   edi
1002a77f:	call   0x1000103f
1002a784:	add    esp,0x10
1002a787:	push   DWORD PTR [ebp-0x4]
1002a78a:	mov    ecx,esi
1002a78c:	call   0x1000141c
1002a791:	mov    eax,esi
1002a793:	pop    edi
1002a794:	pop    esi
1002a795:	leave  
1002a796:	ret    
1002a797:	push   ebp
1002a798:	mov    ebp,esp
1002a79a:	push   ecx
1002a79b:	push   ebx
1002a79c:	push   edi
1002a79d:	mov    edi,DWORD PTR [ebp+0x8]
1002a7a0:	mov    ebx,eax
1002a7a2:	cmp    DWORD PTR [ebx+0x14],edi
1002a7a5:	jae    0x1002a7ac
1002a7a7:	call   0x100574ef
1002a7ac:	mov    eax,DWORD PTR [ebx+0x14]
1002a7af:	sub    eax,edi
1002a7b1:	cmp    eax,DWORD PTR [ebp+0xc]
1002a7b4:	jae    0x1002a7b9
1002a7b6:	mov    DWORD PTR [ebp+0xc],eax
1002a7b9:	or     eax,0xffffffff
1002a7bc:	sub    eax,DWORD PTR [esi+0x14]
1002a7bf:	cmp    eax,DWORD PTR [ebp+0xc]
1002a7c2:	ja     0x1002a7c9
1002a7c4:	call   0x100574b0
1002a7c9:	cmp    DWORD PTR [ebp+0xc],0x0
1002a7cd:	jbe    0x1002a888
1002a7d3:	mov    eax,DWORD PTR [esi+0x14]
1002a7d6:	add    eax,DWORD PTR [ebp+0xc]
1002a7d9:	push   0x0
1002a7db:	push   eax
1002a7dc:	mov    ecx,esi
1002a7de:	mov    DWORD PTR [ebp-0x4],eax
1002a7e1:	call   0x10001438
1002a7e6:	test   al,al
1002a7e8:	je     0x1002a888
1002a7ee:	mov    eax,DWORD PTR [esi+0x18]
1002a7f1:	cmp    eax,0x10
1002a7f4:	lea    edi,[esi+0x4]
1002a7f7:	jb     0x1002a7fd
1002a7f9:	mov    edx,DWORD PTR [edi]
1002a7fb:	jmp    0x1002a7ff
1002a7fd:	mov    edx,edi
1002a7ff:	cmp    eax,0x10
1002a802:	jb     0x1002a808
1002a804:	mov    ecx,DWORD PTR [edi]
1002a806:	jmp    0x1002a80a
1002a808:	mov    ecx,edi
1002a80a:	push   DWORD PTR [esi+0x14]
1002a80d:	push   edx
1002a80e:	mov    edx,DWORD PTR [ebp+0xc]
1002a811:	sub    eax,edx
1002a813:	push   eax
1002a814:	add    ecx,edx
1002a816:	push   ecx
1002a817:	call   0x1000105b
1002a81c:	add    esp,0x10
1002a81f:	cmp    esi,ebx
1002a821:	jne    0x1002a853
1002a823:	mov    ecx,DWORD PTR [ebp+0x8]
1002a826:	test   ecx,ecx
1002a828:	jbe    0x1002a82f
1002a82a:	mov    eax,DWORD PTR [ebp+0xc]
1002a82d:	add    ecx,eax
1002a82f:	mov    edx,DWORD PTR [esi+0x18]
1002a832:	cmp    edx,0x10
1002a835:	jb     0x1002a83b
1002a837:	mov    eax,DWORD PTR [edi]
1002a839:	jmp    0x1002a83d
1002a83b:	mov    eax,edi
1002a83d:	cmp    edx,0x10
1002a840:	jb     0x1002a844
1002a842:	mov    edi,DWORD PTR [edi]
1002a844:	push   DWORD PTR [ebp+0xc]
1002a847:	add    eax,ecx
1002a849:	push   eax
1002a84a:	push   edx
1002a84b:	push   edi
1002a84c:	call   0x1000105b
1002a851:	jmp    0x1002a87b
1002a853:	cmp    DWORD PTR [ebx+0x18],0x10
1002a857:	jb     0x1002a85e
1002a859:	mov    ebx,DWORD PTR [ebx+0x4]
1002a85c:	jmp    0x1002a861
1002a85e:	add    ebx,0x4
1002a861:	mov    eax,DWORD PTR [esi+0x18]
1002a864:	cmp    eax,0x10
1002a867:	jb     0x1002a86b
1002a869:	mov    edi,DWORD PTR [edi]
1002a86b:	push   DWORD PTR [ebp+0xc]
1002a86e:	mov    ecx,DWORD PTR [ebp+0x8]
1002a871:	add    ebx,ecx
1002a873:	push   ebx
1002a874:	push   eax
1002a875:	push   edi
1002a876:	call   0x1000103f
1002a87b:	add    esp,0x10
1002a87e:	push   DWORD PTR [ebp-0x4]
1002a881:	mov    ecx,esi
1002a883:	call   0x1000141c
1002a888:	pop    edi
1002a889:	mov    eax,esi
1002a88b:	pop    ebx
1002a88c:	leave  
1002a88d:	ret    0x8
1002a890:	push   ebp
1002a891:	sub    esp,0x70
1002a894:	lea    ebp,[esp-0x4]
1002a898:	mov    eax,ds:0x100801ac
1002a89d:	xor    eax,ebp
1002a89f:	mov    DWORD PTR [ebp+0x70],eax
1002a8a2:	push   0x68
1002a8a4:	mov    eax,0x100638eb
1002a8a9:	call   0x10059e28
1002a8ae:	mov    esi,DWORD PTR [ebp+0x7c]
1002a8b1:	mov    eax,DWORD PTR [esi]
1002a8b3:	xor    ebx,ebx
1002a8b5:	cmp    BYTE PTR [eax+0x2c],bl
1002a8b8:	mov    DWORD PTR [ebp-0x2c],esi
1002a8bb:	jne    0x1002ab1a
1002a8c1:	push   0x10073d9c
1002a8c6:	push   0x8
1002a8c8:	mov    ecx,0x10072d9c
1002a8cd:	call   0x100042b4
1002a8d2:	pop    ecx
1002a8d3:	pop    ecx
1002a8d4:	push   eax
1002a8d5:	lea    ecx,[ebp-0x58]
1002a8d8:	call   0x100011a7
1002a8dd:	push   ebx
1002a8de:	lea    eax,[ebp-0x58]
1002a8e1:	push   eax
1002a8e2:	lea    eax,[ebp+0x54]
1002a8e5:	push   eax
1002a8e6:	mov    DWORD PTR [ebp-0x4],ebx
1002a8e9:	mov    eax,DWORD PTR [esi+0x4]
1002a8ec:	add    eax,0x20
1002a8ef:	call   0x10008803
1002a8f4:	xor    edi,edi
1002a8f6:	push   ebx
1002a8f7:	inc    edi
1002a8f8:	push   edi
1002a8f9:	lea    ecx,[ebp-0x58]
1002a8fc:	mov    BYTE PTR [ebp-0x4],0x2
1002a900:	call   0x100012f0
1002a905:	push   0x1006dd18
1002a90a:	lea    esi,[ebp+0x54]
1002a90d:	call   0x10006825
1002a912:	test   al,al
1002a914:	pop    ecx
1002a915:	je     0x1002a91e
1002a917:	push   ebx
1002a918:	push   edi
1002a919:	jmp    0x1002ab12
1002a91e:	push   0x10073dcc
1002a923:	push   0x5
1002a925:	mov    ecx,0x10073e00
1002a92a:	call   0x100042b4
1002a92f:	mov    esi,eax
1002a931:	push   esi
1002a932:	call   0x10043450
1002a937:	add    esp,0xc
1002a93a:	push   eax
1002a93b:	push   esi
1002a93c:	lea    eax,[ebp+0x54]
1002a93f:	call   0x1002ab3b
1002a944:	cmp    eax,0xffffffff
1002a947:	je     0x1002a917
1002a949:	add    eax,0x5
1002a94c:	push   0xffffffff
1002a94e:	push   eax
1002a94f:	lea    eax,[ebp+0x54]
1002a952:	push   eax
1002a953:	lea    eax,[ebp+0x1c]
1002a956:	call   0x1000ce4e
1002a95b:	lea    eax,[ebp-0x14]
1002a95e:	push   eax
1002a95f:	lea    eax,[ebp+0x1c]
1002a962:	push   eax
1002a963:	lea    eax,[ebp-0x1c]
1002a966:	mov    BYTE PTR [ebp-0x4],0x3
1002a96a:	push   eax
1002a96b:	mov    DWORD PTR [ebp-0x14],ebx
1002a96e:	call   0x10039d10
1002a973:	mov    ecx,DWORD PTR [eax]
1002a975:	mov    esi,ecx
1002a977:	mov    DWORD PTR [ebp-0x24],esi
1002a97a:	mov    DWORD PTR [eax],ebx
1002a97c:	mov    DWORD PTR [ebp-0x3c],esi
1002a97f:	mov    BYTE PTR [ebp-0x4],0x4
1002a983:	push   DWORD PTR [ebp-0x1c]
1002a986:	call   0x10042fe2
1002a98b:	add    esp,0x10
1002a98e:	cmp    esi,ebx
1002a990:	push   ebx
1002a991:	jne    0x1002a9a8
1002a993:	call   0x10042fe2
1002a998:	pop    ecx
1002a999:	push   ebx
1002a99a:	push   edi
1002a99b:	lea    ecx,[ebp+0x1c]
1002a99e:	call   0x100012f0
1002a9a3:	jmp    0x1002a917
1002a9a8:	push   DWORD PTR ds:0x10082e2c
1002a9ae:	lea    eax,[ebp-0x20]
1002a9b1:	push   DWORD PTR [ebp-0x14]
1002a9b4:	lea    edx,[ebp-0x15]
1002a9b7:	push   esi
1002a9b8:	push   eax
1002a9b9:	lea    ecx,[ebp-0x28]
1002a9bc:	mov    DWORD PTR [ebp-0x28],ebx
1002a9bf:	call   0x10039900
1002a9c4:	mov    ecx,DWORD PTR [eax]
1002a9c6:	mov    edi,ecx
1002a9c8:	mov    DWORD PTR [ebp-0x14],edi
1002a9cb:	mov    DWORD PTR [eax],ebx
1002a9cd:	mov    DWORD PTR [ebp-0x1c],edi
1002a9d0:	mov    BYTE PTR [ebp-0x4],0x5
1002a9d4:	push   DWORD PTR [ebp-0x20]
1002a9d7:	call   0x10042fe2
1002a9dc:	add    esp,0x18
1002a9df:	cmp    edi,ebx
1002a9e1:	jne    0x1002aa02
1002a9e3:	push   ebx
1002a9e4:	call   0x10042fe2
1002a9e9:	push   esi
1002a9ea:	call   0x10042fe2
1002a9ef:	pop    ecx
1002a9f0:	pop    ecx
1002a9f1:	push   ebx
1002a9f2:	push   0x1
1002a9f4:	lea    ecx,[ebp+0x1c]
1002a9f7:	call   0x100012f0
1002a9fc:	push   ebx
1002a9fd:	jmp    0x1002ab10
1002aa02:	mov    BYTE PTR [ebp-0x4],0x6
1002aa06:	mov    eax,DWORD PTR [ebp-0x28]
1002aa09:	mov    DWORD PTR [ebp-0x30],edi
1002aa0c:	lea    edi,[ebp+0x38]
1002aa0f:	lea    esi,[ebp-0x38]
1002aa12:	mov    DWORD PTR [ebp-0x38],ebx
1002aa15:	mov    DWORD PTR [ebp-0x34],eax
1002aa18:	call   0x100372a0
1002aa1d:	lea    edi,[ebp+0x0]
1002aa20:	mov    BYTE PTR [ebp-0x4],0x7
1002aa24:	call   0x100372a0
1002aa29:	push   0x1
1002aa2b:	lea    eax,[ebp+0x38]
1002aa2e:	mov    ebx,edi
1002aa30:	push   eax
1002aa31:	mov    edi,0x10082f58
1002aa36:	mov    BYTE PTR [ebp-0x4],0x8
1002aa3a:	call   0x10019baa
1002aa3f:	push   0x10073e08
1002aa44:	push   0x8
1002aa46:	mov    ecx,0x10072d9c
1002aa4b:	call   0x100042b4
1002aa50:	pop    ecx
1002aa51:	pop    ecx
1002aa52:	push   eax
1002aa53:	lea    ecx,[ebp-0x74]
1002aa56:	call   0x100011a7
1002aa5b:	lea    eax,[ebp-0x74]
1002aa5e:	push   eax
1002aa5f:	mov    eax,DWORD PTR [ebp-0x2c]
1002aa62:	mov    BYTE PTR [ebp-0x4],0x9
1002aa66:	mov    edx,DWORD PTR [eax+0x8]
1002aa69:	add    edx,0x20
1002aa6c:	lea    ecx,[ebp+0x38]
1002aa6f:	call   0x100086ec
1002aa74:	xor    esi,esi
1002aa76:	xor    ebx,ebx
1002aa78:	push   esi
1002aa79:	inc    ebx
1002aa7a:	push   ebx
1002aa7b:	lea    ecx,[ebp-0x74]
1002aa7e:	call   0x100012f0
1002aa83:	cmp    DWORD PTR [ebp+0x18],0x10
1002aa87:	mov    ecx,DWORD PTR [ebp+0x4]
1002aa8a:	jae    0x1002aa8f
1002aa8c:	lea    ecx,[ebp+0x4]
1002aa8f:	cmp    DWORD PTR [ebp+0x50],0x10
1002aa93:	mov    eax,DWORD PTR [ebp+0x3c]
1002aa96:	jae    0x1002aa9b
1002aa98:	lea    eax,[ebp+0x3c]
1002aa9b:	push   ecx
1002aa9c:	push   eax
1002aa9d:	call   0x10002068
1002aaa2:	pop    ecx
1002aaa3:	pop    ecx
1002aaa4:	push   esi
1002aaa5:	push   ebx
1002aaa6:	lea    ecx,[ebp+0x0]
1002aaa9:	call   0x100012f0
1002aaae:	push   esi
1002aaaf:	push   ebx
1002aab0:	lea    ecx,[ebp+0x38]
1002aab3:	call   0x100012f0
1002aab8:	push   DWORD PTR [ebp-0x14]
1002aabb:	call   0x10042fe2
1002aac0:	push   DWORD PTR [ebp-0x24]
1002aac3:	call   0x10042fe2
1002aac8:	pop    ecx
1002aac9:	pop    ecx
1002aaca:	push   esi
1002aacb:	push   ebx
1002aacc:	lea    ecx,[ebp+0x1c]
1002aacf:	call   0x100012f0
1002aad4:	push   esi
1002aad5:	push   ebx
1002aad6:	lea    ecx,[ebp+0x54]
1002aad9:	call   0x100012f0
1002aade:	mov    al,bl
1002aae0:	jmp    0x1002ab1c
1002aae2:	push   0x5
1002aae4:	call   0x10038b80
1002aae9:	pop    ecx
1002aaea:	mov    eax,0x1002aaf0
1002aaef:	ret    
1002aaf0:	push   DWORD PTR [ebp-0x14]
1002aaf3:	call   0x10042fe2
1002aaf8:	push   DWORD PTR [ebp-0x24]
1002aafb:	call   0x10042fe2
1002ab00:	pop    ecx
1002ab01:	pop    ecx
1002ab02:	push   0x0
1002ab04:	push   0x1
1002ab06:	lea    ecx,[ebp+0x1c]
1002ab09:	call   0x100012f0
1002ab0e:	push   0x0
1002ab10:	push   0x1
1002ab12:	lea    ecx,[ebp+0x54]
1002ab15:	call   0x100012f0
1002ab1a:	xor    al,al
1002ab1c:	mov    ecx,DWORD PTR [ebp-0xc]
1002ab1f:	mov    DWORD PTR fs:0x0,ecx
1002ab26:	pop    ecx
1002ab27:	pop    edi
1002ab28:	pop    esi
1002ab29:	pop    ebx
1002ab2a:	mov    ecx,DWORD PTR [ebp+0x70]
1002ab2d:	xor    ecx,ebp
1002ab2f:	call   0x10043615
1002ab34:	add    ebp,0x74
1002ab37:	leave  
1002ab38:	ret    0x4
1002ab3b:	push   ebp
1002ab3c:	mov    ebp,esp
1002ab3e:	cmp    DWORD PTR [ebp+0xc],0x0
1002ab42:	push   esi
1002ab43:	mov    esi,eax
1002ab45:	jne    0x1002ab55
1002ab47:	mov    esi,DWORD PTR [esi+0x14]
1002ab4a:	or     eax,0xffffffff
1002ab4d:	cmp    esi,eax
1002ab4f:	ja     0x1002abbd
1002ab51:	mov    eax,esi
1002ab53:	jmp    0x1002abbd
1002ab55:	mov    eax,DWORD PTR [esi+0x14]
1002ab58:	cmp    DWORD PTR [ebp+0xc],eax
1002ab5b:	push   ebx
1002ab5c:	push   edi
1002ab5d:	ja     0x1002abb8
1002ab5f:	sub    eax,DWORD PTR [ebp+0xc]
1002ab62:	or     ecx,0xffffffff
1002ab65:	cmp    eax,ecx
1002ab67:	ja     0x1002ab6b
1002ab69:	mov    ecx,eax
1002ab6b:	cmp    DWORD PTR [esi+0x18],0x10
1002ab6f:	lea    edi,[esi+0x4]
1002ab72:	jb     0x1002ab78
1002ab74:	mov    eax,DWORD PTR [edi]
1002ab76:	jmp    0x1002ab7a
1002ab78:	mov    eax,edi
1002ab7a:	lea    ebx,[eax+ecx*1]
1002ab7d:	mov    cl,BYTE PTR [ebx]
1002ab7f:	mov    eax,DWORD PTR [ebp+0x8]
1002ab82:	cmp    cl,BYTE PTR [eax]
1002ab84:	jne    0x1002ab97
1002ab86:	push   DWORD PTR [ebp+0xc]
1002ab89:	push   eax
1002ab8a:	push   ebx
1002ab8b:	call   0x10043a74
1002ab90:	add    esp,0xc
1002ab93:	test   eax,eax
1002ab95:	je     0x1002abaa
1002ab97:	cmp    DWORD PTR [esi+0x18],0x10
1002ab9b:	jb     0x1002aba1
1002ab9d:	mov    eax,DWORD PTR [edi]
1002ab9f:	jmp    0x1002aba3
1002aba1:	mov    eax,edi
1002aba3:	cmp    ebx,eax
1002aba5:	je     0x1002abb8
1002aba7:	dec    ebx
1002aba8:	jmp    0x1002ab7d
1002abaa:	cmp    DWORD PTR [esi+0x18],0x10
1002abae:	jb     0x1002abb2
1002abb0:	mov    edi,DWORD PTR [edi]
1002abb2:	mov    eax,ebx
1002abb4:	sub    eax,edi
1002abb6:	jmp    0x1002abbb
1002abb8:	or     eax,0xffffffff
1002abbb:	pop    edi
1002abbc:	pop    ebx
1002abbd:	pop    esi
1002abbe:	pop    ebp
1002abbf:	ret    0x8
1002abc2:	push   0x10
1002abc4:	push   DWORD PTR [esp+0xc]
1002abc8:	push   DWORD PTR [esp+0xc]
1002abcc:	call   0x10043a74
1002abd1:	add    esp,0xc
1002abd4:	neg    eax
1002abd6:	sbb    eax,eax
1002abd8:	inc    eax
1002abd9:	ret    
1002abda:	mov    eax,DWORD PTR [esi]
1002abdc:	test   eax,eax
1002abde:	je     0x1002abf0
1002abe0:	push   eax
1002abe1:	call   DWORD PTR ds:0x100672a0
1002abe7:	push   eax
1002abe8:	push   DWORD PTR [esi]
1002abea:	call   DWORD PTR ds:0x100672b0
1002abf0:	mov    DWORD PTR [edi],eax
1002abf2:	cmp    DWORD PTR [esi],0x0
1002abf5:	je     0x1002ac05
1002abf7:	test   eax,eax
1002abf9:	jne    0x1002ac05
1002abfb:	push   0x8007000e
1002ac00:	call   0x10001f2d
1002ac05:	mov    eax,edi
1002ac07:	ret    
1002ac08:	push   DWORD PTR [esp+0x4]
1002ac0c:	push   esi
1002ac0d:	call   DWORD PTR ds:0x10067280
1002ac13:	test   eax,eax
1002ac15:	jge    0x1002ac25
1002ac17:	push   eax
1002ac18:	mov    WORD PTR [esi],0xa
1002ac1d:	mov    DWORD PTR [esi+0x8],eax
1002ac20:	call   0x10001f2d
1002ac25:	ret    0x4
1002ac28:	push   0x14
1002ac2a:	mov    eax,0x1005fcc1
1002ac2f:	call   0x10059df5
1002ac34:	mov    esi,ecx
1002ac36:	cmp    WORD PTR [esi],0x9
1002ac3a:	jne    0x1002ac50
1002ac3c:	cmp    DWORD PTR [esi+0x8],0x0
1002ac40:	je     0x1002ac4b
1002ac42:	mov    eax,DWORD PTR [esi+0x8]
1002ac45:	mov    ecx,DWORD PTR [eax]
1002ac47:	push   eax
1002ac48:	call   DWORD PTR [ecx+0x4]
1002ac4b:	mov    eax,DWORD PTR [esi+0x8]
1002ac4e:	jmp    0x1002ac88
1002ac50:	lea    eax,[ebp-0x20]
1002ac53:	push   eax
1002ac54:	call   DWORD PTR ds:0x10067294
1002ac5a:	and    DWORD PTR [ebp-0x4],0x0
1002ac5e:	mov    ecx,esi
1002ac60:	mov    dx,0x9
1002ac64:	lea    eax,[ebp-0x20]
1002ac67:	call   0x100228ed
1002ac6c:	mov    eax,DWORD PTR [ebp-0x18]
1002ac6f:	test   eax,eax
1002ac71:	je     0x1002ac79
1002ac73:	mov    ecx,DWORD PTR [eax]
1002ac75:	push   eax
1002ac76:	call   DWORD PTR [ecx+0x4]
1002ac79:	mov    esi,DWORD PTR [ebp-0x18]
1002ac7c:	lea    eax,[ebp-0x20]
1002ac7f:	push   eax
1002ac80:	call   DWORD PTR ds:0x10067284
1002ac86:	mov    eax,esi
1002ac88:	call   0x10059ecd
1002ac8d:	ret    
1002ac8e:	mov    eax,DWORD PTR [esp+0x4]
1002ac92:	add    eax,0x4
1002ac95:	push   eax
1002ac96:	call   DWORD PTR ds:0x100670b0
1002ac9c:	ret    0x4
1002ac9f:	push   esi
1002aca0:	mov    esi,DWORD PTR [esp+0x8]
1002aca4:	push   edi
1002aca5:	lea    eax,[esi+0x4]
1002aca8:	push   eax
1002aca9:	call   DWORD PTR ds:0x100670bc
1002acaf:	mov    edi,eax
1002acb1:	test   edi,edi
1002acb3:	jne    0x1002acbc
1002acb5:	push   esi
1002acb6:	call   0x10042fe2
1002acbb:	pop    ecx
1002acbc:	mov    eax,edi
1002acbe:	pop    edi
1002acbf:	pop    esi
1002acc0:	ret    0x4
1002acc3:	mov    DWORD PTR [ecx],0x1007419c
1002acc9:	ret    
1002acca:	test   BYTE PTR [esp+0x4],0x1
1002accf:	push   esi
1002acd0:	mov    esi,ecx
1002acd2:	mov    DWORD PTR [esi],0x1007419c
1002acd8:	je     0x1002ace1
1002acda:	push   esi
1002acdb:	call   0x10042fe2
1002ace0:	pop    ecx
1002ace1:	mov    eax,esi
1002ace3:	pop    esi
1002ace4:	ret    0x4
1002ace7:	push   DWORD PTR [esp+0xc]
1002aceb:	mov    edx,DWORD PTR [esp+0xc]
1002acef:	mov    eax,DWORD PTR [esp+0x8]
1002acf3:	mov    ecx,DWORD PTR [eax]
1002acf5:	inc    edx
1002acf6:	push   edx
1002acf7:	push   eax
1002acf8:	call   DWORD PTR [ecx+0x28]
1002acfb:	ret    0xc
1002acfe:	push   0xc
1002ad00:	mov    eax,0x10060573
1002ad05:	call   0x10059e5e
1002ad0a:	mov    esi,ecx
1002ad0c:	and    DWORD PTR [ebp-0x4],0x0
1002ad10:	call   DWORD PTR ds:0x10080ffc
1002ad16:	cmp    DWORD PTR [esi+0x18],0x10
1002ad1a:	mov    ebx,eax
1002ad1c:	jb     0x1002ad23
1002ad1e:	mov    esi,DWORD PTR [esi+0x4]
1002ad21:	jmp    0x1002ad26
1002ad23:	add    esi,0x4
1002ad26:	test   esi,esi
1002ad28:	je     0x1002ad3c
1002ad2a:	push   esi
1002ad2b:	call   DWORD PTR ds:0x100670e8
1002ad31:	mov    edi,eax
1002ad33:	inc    edi
1002ad34:	cmp    edi,0x3fffffff
1002ad3a:	jle    0x1002ad40
1002ad3c:	xor    eax,eax
1002ad3e:	jmp    0x1002ad54
1002ad40:	lea    eax,[edi+edi*1]
1002ad43:	call   0x1004b9b0
1002ad48:	mov    eax,esp
1002ad4a:	push   ebx
1002ad4b:	push   edi
1002ad4c:	push   esi
1002ad4d:	mov    esi,eax
1002ad4f:	call   0x100070bc
1002ad54:	push   eax
1002ad55:	lea    esi,[ebp-0x18]
1002ad58:	call   0x1001b665
1002ad5d:	mov    esi,eax
1002ad5f:	lea    edi,[ebp-0x14]
1002ad62:	mov    BYTE PTR [ebp-0x4],0x1
1002ad66:	call   0x1002abda
1002ad6b:	mov    eax,edi
1002ad6d:	push   eax
1002ad6e:	mov    eax,DWORD PTR [ebp+0x8]
1002ad71:	add    eax,0x4
1002ad74:	push   eax
1002ad75:	mov    BYTE PTR [ebp-0x4],0x2
1002ad79:	call   0x1002d2f7
1002ad7e:	lea    ecx,[ebp+0xc]
1002ad81:	cmp    eax,ecx
1002ad83:	je     0x1002ad8d
1002ad85:	push   ecx
1002ad86:	mov    esi,eax
1002ad88:	call   0x1002ac08
1002ad8d:	push   DWORD PTR [ebp-0x14]
1002ad90:	mov    esi,DWORD PTR ds:0x100672b4
1002ad96:	call   esi
1002ad98:	push   DWORD PTR [ebp-0x18]
1002ad9b:	call   esi
1002ad9d:	lea    eax,[ebp+0xc]
1002ada0:	push   eax
1002ada1:	call   DWORD PTR ds:0x10067284
1002ada7:	lea    esp,[ebp-0x28]
1002adaa:	call   0x10059ee1
1002adaf:	ret    0x14
1002adb2:	push   ebp
1002adb3:	mov    ebp,esp
1002adb5:	and    esp,0xfffffff8
1002adb8:	push   0xffffffff
1002adba:	push   0x10060fb2
1002adbf:	mov    eax,fs:0x0
1002adc5:	push   eax
1002adc6:	sub    esp,0x30
1002adc9:	push   ebx
1002adca:	push   esi
1002adcb:	push   edi
1002adcc:	mov    eax,ds:0x100801ac
1002add1:	xor    eax,esp
1002add3:	push   eax
1002add4:	lea    eax,[esp+0x40]
1002add8:	mov    fs:0x0,eax
1002adde:	xor    ebx,ebx
1002ade0:	cmp    DWORD PTR [ebp+0x1c],ebx
1002ade3:	jne    0x1002adff
1002ade5:	mov    eax,0x80004003
1002adea:	mov    ecx,DWORD PTR [esp+0x40]
1002adee:	mov    DWORD PTR fs:0x0,ecx
1002adf5:	pop    ecx
1002adf6:	pop    edi
1002adf7:	pop    esi
1002adf8:	pop    ebx
1002adf9:	mov    esp,ebp
1002adfb:	pop    ebp
1002adfc:	ret    0x18
1002adff:	lea    eax,[esp+0x2c]
1002ae03:	push   eax
1002ae04:	call   DWORD PTR ds:0x10067294
1002ae0a:	mov    DWORD PTR [esp+0x48],ebx
1002ae0e:	cmp    WORD PTR [ebp+0xc],0x8
1002ae13:	mov    esi,DWORD PTR ds:0x1006727c
1002ae19:	je     0x1002ae4d
1002ae1b:	push   0x3
1002ae1d:	push   ebx
1002ae1e:	lea    eax,[ebp+0xc]
1002ae21:	push   eax
1002ae22:	lea    eax,[esp+0x38]
1002ae26:	push   eax
1002ae27:	call   esi
1002ae29:	test   eax,eax
1002ae2b:	jl     0x1002ae4d
1002ae2d:	push   DWORD PTR [ebp+0x1c]
1002ae30:	push   DWORD PTR [esp+0x38]
1002ae34:	push   DWORD PTR [ebp+0x8]
1002ae37:	call   0x1002d1b8
1002ae3c:	mov    edi,eax
1002ae3e:	lea    eax,[esp+0x2c]
1002ae42:	push   eax
1002ae43:	call   DWORD PTR ds:0x10067284
1002ae49:	mov    eax,edi
1002ae4b:	jmp    0x1002adea
1002ae4d:	push   0x8
1002ae4f:	push   ebx
1002ae50:	lea    eax,[ebp+0xc]
1002ae53:	push   eax
1002ae54:	lea    eax,[esp+0x38]
1002ae58:	push   eax
1002ae59:	call   esi
1002ae5b:	cmp    eax,ebx
1002ae5d:	jl     0x1002ae3c
1002ae5f:	push   DWORD PTR [esp+0x34]
1002ae63:	lea    esi,[esp+0x18]
1002ae67:	call   0x1001b665
1002ae6c:	mov    esi,eax
1002ae6e:	lea    edi,[esp+0x10]
1002ae72:	mov    BYTE PTR [esp+0x48],0x1
1002ae77:	call   0x1002abda
1002ae7c:	mov    esi,DWORD PTR [ebp+0x8]
1002ae7f:	mov    eax,edi
1002ae81:	push   eax
1002ae82:	lea    eax,[esp+0x28]
1002ae86:	push   eax
1002ae87:	add    esi,0x4
1002ae8a:	push   esi
1002ae8b:	call   0x1002d3f8
1002ae90:	push   DWORD PTR [esp+0x10]
1002ae94:	mov    edi,DWORD PTR ds:0x100672b4
1002ae9a:	call   edi
1002ae9c:	mov    BYTE PTR [esp+0x48],bl
1002aea0:	push   DWORD PTR [esp+0x14]
1002aea4:	call   edi
1002aea6:	mov    eax,DWORD PTR [esi+0x4]
1002aea9:	mov    DWORD PTR [esp+0x14],esi
1002aead:	lea    edi,[esp+0x14]
1002aeb1:	lea    esi,[esp+0x24]
1002aeb5:	mov    DWORD PTR [esp+0x18],eax
1002aeb9:	call   0x10004b0c
1002aebe:	test   al,al
1002aec0:	je     0x1002aecc
1002aec2:	mov    edi,0x80004005
1002aec7:	jmp    0x1002ae3e
1002aecc:	lea    esi,[esp+0x24]
1002aed0:	call   0x1002d45f
1002aed5:	add    eax,0x8
1002aed8:	push   eax
1002aed9:	lea    esi,[esp+0x18]
1002aedd:	mov    WORD PTR [esp+0x18],bx
1002aee2:	call   0x1002ac08
1002aee7:	push   DWORD PTR [ebp+0x1c]
1002aeea:	mov    BYTE PTR [esp+0x4c],0x2
1002aeef:	mov    esi,DWORD PTR ds:0x10067284
1002aef5:	call   esi
1002aef7:	mov    edi,eax
1002aef9:	cmp    edi,ebx
1002aefb:	jl     0x1002af1e
1002aefd:	push   0x10
1002aeff:	lea    eax,[esp+0x18]
1002af03:	push   eax
1002af04:	push   0x10
1002af06:	push   DWORD PTR [ebp+0x1c]
1002af09:	call   0x100433cf
1002af0e:	push   eax
1002af0f:	call   0x10001f45
1002af14:	add    esp,0x14
1002af17:	mov    WORD PTR [esp+0x14],bx
1002af1c:	xor    edi,edi
1002af1e:	lea    eax,[esp+0x14]
1002af22:	push   eax
1002af23:	call   esi
1002af25:	jmp    0x1002ae3e
1002af2a:	mov    eax,DWORD PTR [esp+0x4]
1002af2e:	push   esi
1002af2f:	mov    ecx,DWORD PTR [eax]
1002af31:	push   edi
1002af32:	push   DWORD PTR [esp+0x20]
1002af36:	lea    esi,[esp+0x14]
1002af3a:	sub    esp,0x10
1002af3d:	mov    edi,esp
1002af3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002af40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002af41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002af42:	push   eax
1002af43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002af44:	call   DWORD PTR [ecx+0x30]
1002af47:	pop    edi
1002af48:	pop    esi
1002af49:	ret    0x18
1002af4c:	push   ebp
1002af4d:	mov    ebp,esp
1002af4f:	and    esp,0xfffffff8
1002af52:	sub    esp,0x14
1002af55:	cmp    DWORD PTR [ebp+0x10],0x0
1002af59:	push   ebx
1002af5a:	push   esi
1002af5b:	push   edi
1002af5c:	jne    0x1002af68
1002af5e:	mov    eax,0x80004003
1002af63:	jmp    0x1002b009
1002af68:	cmp    DWORD PTR [ebp+0xc],0x1
1002af6c:	jge    0x1002af78
1002af6e:	mov    eax,0x80070057
1002af73:	jmp    0x1002b009
1002af78:	mov    ebx,DWORD PTR [ebp+0x8]
1002af7b:	dec    DWORD PTR [ebp+0xc]
1002af7e:	mov    eax,DWORD PTR [ebx+0x8]
1002af81:	mov    eax,DWORD PTR [eax]
1002af83:	add    ebx,0x4
1002af86:	mov    DWORD PTR [esp+0xc],0x80004005
1002af8e:	mov    DWORD PTR [esp+0x10],ebx
1002af92:	mov    DWORD PTR [esp+0x14],eax
1002af96:	mov    DWORD PTR [esp+0x18],ebx
1002af9a:	mov    eax,DWORD PTR [ebx+0x4]
1002af9d:	lea    edi,[esp+0x18]
1002afa1:	lea    esi,[esp+0x10]
1002afa5:	mov    DWORD PTR [esp+0x1c],eax
1002afa9:	call   0x10004b0c
1002afae:	test   al,al
1002afb0:	jne    0x1002afc2
1002afb2:	cmp    DWORD PTR [ebp+0xc],0x0
1002afb6:	jle    0x1002afc2
1002afb8:	call   0x1001970d
1002afbd:	dec    DWORD PTR [ebp+0xc]
1002afc0:	jmp    0x1002af9a
1002afc2:	mov    eax,DWORD PTR [ebx+0x4]
1002afc5:	lea    edi,[esp+0x18]
1002afc9:	lea    esi,[esp+0x10]
1002afcd:	mov    DWORD PTR [esp+0x1c],eax
1002afd1:	mov    DWORD PTR [esp+0x18],ebx
1002afd5:	call   0x10004b0c
1002afda:	test   al,al
1002afdc:	jne    0x1002b005
1002afde:	call   0x1002d45f
1002afe3:	mov    esi,eax
1002afe5:	mov    eax,DWORD PTR [esi]
1002afe7:	test   eax,eax
1002afe9:	je     0x1002affb
1002afeb:	push   eax
1002afec:	call   DWORD PTR ds:0x100672a0
1002aff2:	push   eax
1002aff3:	push   DWORD PTR [esi]
1002aff5:	call   DWORD PTR ds:0x100672b0
1002affb:	mov    ecx,DWORD PTR [ebp+0x10]
1002affe:	and    DWORD PTR [esp+0xc],0x0
1002b003:	mov    DWORD PTR [ecx],eax
1002b005:	mov    eax,DWORD PTR [esp+0xc]
1002b009:	pop    edi
1002b00a:	pop    esi
1002b00b:	pop    ebx
1002b00c:	mov    esp,ebp
1002b00e:	pop    ebp
1002b00f:	ret    0xc
1002b012:	mov    eax,DWORD PTR [esi]
1002b014:	test   eax,eax
1002b016:	je     0x1002b025
1002b018:	push   DWORD PTR [esi+0x4]
1002b01b:	push   eax
1002b01c:	call   DWORD PTR ds:0x10067170
1002b022:	and    DWORD PTR [esi],0x0
1002b025:	ret    
1002b026:	push   ebp
1002b027:	sub    esp,0xc4
1002b02d:	lea    ebp,[esp-0x4]
1002b031:	mov    eax,ds:0x100801ac
1002b036:	xor    eax,ebp
1002b038:	mov    DWORD PTR [ebp+0xc4],eax
1002b03e:	push   0x188
1002b043:	mov    eax,0x10065274
1002b048:	call   0x10059e28
1002b04d:	mov    eax,DWORD PTR [ebp+0xd0]
1002b053:	mov    DWORD PTR [ebp-0x14],eax
1002b056:	mov    eax,DWORD PTR [ebp+0xd4]
1002b05c:	xor    ebx,ebx
1002b05e:	mov    DWORD PTR [ebp-0x34],eax
1002b061:	mov    DWORD PTR [ebp-0x78],ebx
1002b064:	call   0x10002068
1002b069:	mov    ecx,0x10082a6c
1002b06e:	lea    esi,[ebp-0x18]
1002b071:	mov    DWORD PTR [ebp-0x1c],ebx
1002b074:	call   0x1000214c
1002b079:	lea    eax,[ebp-0x64]
1002b07c:	mov    DWORD PTR [ebp-0x4],ebx
1002b07f:	push   eax
1002b080:	mov    BYTE PTR [ebp-0x4],0x1
1002b084:	call   0x1002e5c2
1002b089:	test   eax,eax
1002b08b:	jge    0x1002b0c6
1002b08d:	push   DWORD PTR [ebp-0x14]
1002b090:	lea    edi,[ebp-0x1c]
1002b093:	call   0x1002b928
1002b098:	lea    esi,[ebp-0x1c]
1002b09b:	call   0x1002b910
1002b0a0:	mov    eax,DWORD PTR [ebp-0x14]
1002b0a3:	mov    ecx,DWORD PTR [ebp-0xc]
1002b0a6:	mov    DWORD PTR fs:0x0,ecx
1002b0ad:	pop    ecx
1002b0ae:	pop    edi
1002b0af:	pop    esi
1002b0b0:	pop    ebx
1002b0b1:	mov    ecx,DWORD PTR [ebp+0xc4]
1002b0b7:	xor    ecx,ebp
1002b0b9:	call   0x10043615
1002b0be:	add    ebp,0xc8
1002b0c4:	leave  
1002b0c5:	ret    
1002b0c6:	call   0x10002068
1002b0cb:	mov    eax,DWORD PTR [ebp-0x64]
1002b0ce:	cmp    eax,ebx
1002b0d0:	mov    DWORD PTR [ebp-0x24],eax
1002b0d3:	je     0x1002b0db
1002b0d5:	mov    ecx,DWORD PTR [eax]
1002b0d7:	push   eax
1002b0d8:	call   DWORD PTR [ecx+0x4]
1002b0db:	lea    ecx,[ebp+0xa8]
1002b0e1:	mov    BYTE PTR [ebp-0x4],0x2
1002b0e5:	call   0x100186d5
1002b0ea:	cmp    BYTE PTR [ebp+0xd8],bl
1002b0f0:	mov    ecx,0x10073eec
1002b0f5:	jne    0x1002b0fc
1002b0f7:	mov    ecx,0x10073ef4
1002b0fc:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b103:	mov    eax,DWORD PTR [ebp+0xac]
1002b109:	jae    0x1002b111
1002b10b:	lea    eax,[ebp+0xac]
1002b111:	push   eax
1002b112:	push   ecx
1002b113:	call   0x10002068
1002b118:	pop    ecx
1002b119:	pop    ecx
1002b11a:	push   ebx
1002b11b:	lea    ecx,[ebp+0x8c]
1002b121:	mov    DWORD PTR [ebp+0xa4],0xf
1002b12b:	call   0x1000141c
1002b130:	lea    edi,[ebp-0x70]
1002b133:	mov    ecx,0x10082f48
1002b138:	mov    BYTE PTR [ebp-0x4],0x4
1002b13c:	call   0x100197e4
1002b141:	mov    BYTE PTR [ebp-0x4],0x5
1002b145:	mov    eax,DWORD PTR [ebp-0x6c]
1002b148:	mov    edi,DWORD PTR [eax]
1002b14a:	lea    esi,[ebp-0x70]
1002b14d:	mov    DWORD PTR [ebp-0x28],edi
1002b150:	mov    DWORD PTR [ebp-0x2c],esi
1002b153:	cmp    esi,ebx
1002b155:	mov    eax,DWORD PTR [ebp-0x6c]
1002b158:	mov    DWORD PTR [ebp-0x78],eax
1002b15b:	je     0x1002b164
1002b15d:	lea    eax,[ebp-0x70]
1002b160:	cmp    esi,eax
1002b162:	je     0x1002b169
1002b164:	call   0x10043605
1002b169:	cmp    edi,DWORD PTR [ebp-0x78]
1002b16c:	je     0x1002b24e
1002b172:	push   0x10073efc
1002b177:	lea    eax,[ebp+0x8c]
1002b17d:	push   eax
1002b17e:	call   0x10004126
1002b183:	cmp    esi,ebx
1002b185:	jne    0x1002b18c
1002b187:	call   0x10043605
1002b18c:	cmp    edi,DWORD PTR [esi+0x4]
1002b18f:	jne    0x1002b196
1002b191:	call   0x10043605
1002b196:	lea    eax,[edi+0x8]
1002b199:	push   eax
1002b19a:	lea    esi,[ebp-0xb4]
1002b1a0:	mov    DWORD PTR [ebp-0x20],eax
1002b1a3:	call   0x100300d0
1002b1a8:	pop    ecx
1002b1a9:	mov    edx,eax
1002b1ab:	lea    ecx,[ebp+0x70]
1002b1ae:	mov    BYTE PTR [ebp-0x4],0x6
1002b1b2:	call   0x100337f0
1002b1b7:	push   ebx
1002b1b8:	push   0x1
1002b1ba:	mov    ecx,esi
1002b1bc:	mov    BYTE PTR [ebp-0x4],0x8
1002b1c0:	call   0x100012f0
1002b1c5:	push   0x1006dd18
1002b1ca:	lea    esi,[ebp+0x70]
1002b1cd:	call   0x10006825
1002b1d2:	cmp    al,bl
1002b1d4:	pop    ecx
1002b1d5:	jne    0x1002b1e9
1002b1d7:	mov    eax,esi
1002b1d9:	push   eax
1002b1da:	lea    ecx,[ebp+0x54]
1002b1dd:	call   0x10030ca0
1002b1e2:	pop    ecx
1002b1e3:	mov    BYTE PTR [ebp-0x4],0x9
1002b1e7:	jmp    0x1002b206
1002b1e9:	mov    eax,DWORD PTR [ebp-0x2c]
1002b1ec:	cmp    edi,DWORD PTR [eax+0x4]
1002b1ef:	jne    0x1002b1f6
1002b1f1:	call   0x10043605
1002b1f6:	push   DWORD PTR [ebp-0x20]
1002b1f9:	lea    ecx,[ebp+0x54]
1002b1fc:	call   0x10030ca0
1002b201:	pop    ecx
1002b202:	mov    BYTE PTR [ebp-0x4],0xa
1002b206:	cmp    DWORD PTR [eax+0x18],0x10
1002b20a:	jb     0x1002b211
1002b20c:	mov    eax,DWORD PTR [eax+0x4]
1002b20f:	jmp    0x1002b214
1002b211:	add    eax,0x4
1002b214:	push   eax
1002b215:	lea    eax,[ebp+0x8c]
1002b21b:	push   eax
1002b21c:	call   0x10004126
1002b221:	push   ebx
1002b222:	push   0x1
1002b224:	lea    ecx,[ebp+0x54]
1002b227:	call   0x100012f0
1002b22c:	push   ebx
1002b22d:	push   0x1
1002b22f:	lea    ecx,[ebp+0x70]
1002b232:	mov    BYTE PTR [ebp-0x4],0x5
1002b236:	call   0x100012f0
1002b23b:	lea    esi,[ebp-0x2c]
1002b23e:	call   0x100268eb
1002b243:	mov    edi,DWORD PTR [ebp-0x28]
1002b246:	mov    esi,DWORD PTR [ebp-0x2c]
1002b249:	jmp    0x1002b153
1002b24e:	push   0x1f4
1002b253:	push   DWORD PTR ds:0x10082f54
1002b259:	call   DWORD PTR ds:0x1006707c
1002b25f:	test   eax,eax
1002b261:	jne    0x1002b279
1002b263:	mov    esi,0x10082f48
1002b268:	call   0x100198f5
1002b26d:	push   DWORD PTR ds:0x10082f54
1002b273:	call   DWORD PTR ds:0x10067090
1002b279:	lea    esi,[ebp-0x70]
1002b27c:	mov    BYTE PTR [ebp-0x4],0x4
1002b280:	call   0x100198f5
1002b285:	push   DWORD PTR [ebp-0x6c]
1002b288:	call   0x10042fe2
1002b28d:	pop    ecx
1002b28e:	call   DWORD PTR ds:0x10080ffc
1002b294:	mov    eax,DWORD PTR [ebp-0x34]
1002b297:	mov    eax,DWORD PTR [eax]
1002b299:	sub    eax,0x10
1002b29c:	call   0x10004dfc
1002b2a1:	add    eax,0x10
1002b2a4:	mov    DWORD PTR [ebp-0x30],eax
1002b2a7:	cmp    BYTE PTR [ebp+0xd8],bl
1002b2ad:	mov    BYTE PTR [ebp-0x4],0xb
1002b2b1:	mov    esi,0x1006dcf8
1002b2b6:	jne    0x1002b2bd
1002b2b8:	mov    esi,0x1006dd1c
1002b2bd:	push   DWORD PTR ds:0x10082e04
1002b2c3:	lea    ecx,[ebp-0xb4]
1002b2c9:	call   0x100011a7
1002b2ce:	lea    ecx,[ebp-0x30]
1002b2d1:	lea    edi,[ebp-0x124]
1002b2d7:	mov    BYTE PTR [ebp-0x4],0xc
1002b2db:	call   0x100303e0
1002b2e0:	mov    edi,eax
1002b2e2:	push   0x10073f40
1002b2e7:	push   0x2
1002b2e9:	mov    ecx,0x10073f6c
1002b2ee:	mov    BYTE PTR [ebp-0x4],0xd
1002b2f2:	call   0x100042b4
1002b2f7:	pop    ecx
1002b2f8:	pop    ecx
1002b2f9:	push   eax
1002b2fa:	lea    ecx,[ebp-0x108]
1002b300:	call   0x100011a7
1002b305:	push   edi
1002b306:	push   eax
1002b307:	lea    eax,[ebp-0x140]
1002b30d:	push   eax
1002b30e:	mov    BYTE PTR [ebp-0x4],0xe
1002b312:	call   0x1000676d
1002b317:	add    esp,0xc
1002b31a:	mov    edi,eax
1002b31c:	push   0x10073f04
1002b321:	push   0x4
1002b323:	mov    ecx,0x10073f38
1002b328:	mov    BYTE PTR [ebp-0x4],0xf
1002b32c:	call   0x100042b4
1002b331:	pop    ecx
1002b332:	pop    ecx
1002b333:	push   eax
1002b334:	lea    eax,[ebp-0x178]
1002b33a:	push   edi
1002b33b:	push   eax
1002b33c:	call   0x10006727
1002b341:	add    esp,0xc
1002b344:	push   esi
1002b345:	push   eax
1002b346:	lea    eax,[ebp-0xec]
1002b34c:	push   eax
1002b34d:	mov    BYTE PTR [ebp-0x4],0x10
1002b351:	call   0x10006727
1002b356:	add    esp,0xc
1002b359:	mov    BYTE PTR [ebp-0x4],0x11
1002b35d:	cmp    DWORD PTR [ebp+0xa4],0x10
1002b364:	mov    ecx,DWORD PTR [ebp+0x90]
1002b36a:	jae    0x1002b372
1002b36c:	lea    ecx,[ebp+0x90]
1002b372:	push   ecx
1002b373:	push   eax
1002b374:	lea    eax,[ebp-0x194]
1002b37a:	push   eax
1002b37b:	call   0x10006727
1002b380:	add    esp,0xc
1002b383:	push   DWORD PTR [ebp+0xdc]
1002b389:	lea    ecx,[ebp-0x20]
1002b38c:	push   ecx
1002b38d:	push   eax
1002b38e:	lea    eax,[ebp+0xa8]
1002b394:	push   eax
1002b395:	lea    eax,[ebp-0x88]
1002b39b:	push   eax
1002b39c:	lea    edx,[ebp-0xb4]
1002b3a2:	mov    BYTE PTR [ebp-0x4],0x12
1002b3a6:	call   0x10030b80
1002b3ab:	mov    ecx,DWORD PTR [eax]
1002b3ad:	mov    esi,ecx
1002b3af:	add    esp,0x14
1002b3b2:	mov    DWORD PTR [eax],ebx
1002b3b4:	mov    DWORD PTR [ebp-0x58],esi
1002b3b7:	push   DWORD PTR [ebp-0x88]
1002b3bd:	call   0x10042fe2
1002b3c2:	pop    ecx
1002b3c3:	xor    edi,edi
1002b3c5:	push   ebx
1002b3c6:	inc    edi
1002b3c7:	push   edi
1002b3c8:	lea    ecx,[ebp-0x194]
1002b3ce:	call   0x100012f0
1002b3d3:	push   ebx
1002b3d4:	push   edi
1002b3d5:	lea    ecx,[ebp-0xec]
1002b3db:	call   0x100012f0
1002b3e0:	push   ebx
1002b3e1:	push   edi
1002b3e2:	lea    ecx,[ebp-0x178]
1002b3e8:	call   0x100012f0
1002b3ed:	push   ebx
1002b3ee:	push   edi
1002b3ef:	lea    ecx,[ebp-0x140]
1002b3f5:	call   0x100012f0
1002b3fa:	push   ebx
1002b3fb:	push   edi
1002b3fc:	lea    ecx,[ebp-0x108]
1002b402:	call   0x100012f0
1002b407:	push   ebx
1002b408:	push   edi
1002b409:	lea    ecx,[ebp-0x124]
1002b40f:	call   0x100012f0
1002b414:	push   ebx
1002b415:	push   edi
1002b416:	lea    ecx,[ebp-0xb4]
1002b41c:	mov    BYTE PTR [ebp-0x4],0x1a
1002b420:	call   0x100012f0
1002b425:	cmp    esi,ebx
1002b427:	jne    0x1002b4a5
1002b429:	call   0x10018654
1002b42e:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b435:	mov    eax,DWORD PTR [ebp+0xac]
1002b43b:	jae    0x1002b443
1002b43d:	lea    eax,[ebp+0xac]
1002b443:	push   eax
1002b444:	call   0x10002068
1002b449:	push   0x5
1002b44b:	call   0x10038b80
1002b450:	pop    ecx
1002b451:	pop    ecx
1002b452:	push   DWORD PTR [ebp-0x14]
1002b455:	lea    edi,[ebp-0x1c]
1002b458:	call   0x1002b928
1002b45d:	push   ebx
1002b45e:	call   0x10042fe2
1002b463:	mov    eax,DWORD PTR [ebp-0x30]
1002b466:	pop    ecx
1002b467:	add    eax,0xfffffff0
1002b46a:	call   0x10002069
1002b46f:	push   ebx
1002b470:	push   0x1
1002b472:	lea    ecx,[ebp+0x8c]
1002b478:	call   0x100012f0
1002b47d:	push   ebx
1002b47e:	push   0x1
1002b480:	lea    ecx,[ebp+0xa8]
1002b486:	call   0x100012f0
1002b48b:	mov    BYTE PTR [ebp-0x4],0x1
1002b48f:	mov    eax,DWORD PTR [ebp-0x24]
1002b492:	cmp    eax,ebx
1002b494:	je     0x1002b098
1002b49a:	mov    ecx,DWORD PTR [eax]
1002b49c:	push   eax
1002b49d:	call   DWORD PTR [ecx+0x8]
1002b4a0:	jmp    0x1002b098
1002b4a5:	mov    eax,DWORD PTR [ebp-0x20]
1002b4a8:	mov    DWORD PTR [ebp-0x3c],eax
1002b4ab:	lea    eax,[ebp-0x40]
1002b4ae:	push   eax
1002b4af:	mov    DWORD PTR [ebp-0x40],ebx
1002b4b2:	mov    DWORD PTR [ebp-0x38],esi
1002b4b5:	call   0x100374b0
1002b4ba:	mov    DWORD PTR [ebp-0x84],eax
1002b4c0:	mov    DWORD PTR [ebp-0x54],ebx
1002b4c3:	mov    eax,DWORD PTR [ebp-0x54]
1002b4c6:	cmp    eax,DWORD PTR [ebp-0x84]
1002b4cc:	je     0x1002b872
1002b4d2:	lea    eax,[ebp-0x40]
1002b4d5:	push   eax
1002b4d6:	lea    esi,[ebp+0x70]
1002b4d9:	call   0x10037170
1002b4de:	lea    eax,[ebp-0x40]
1002b4e1:	push   eax
1002b4e2:	mov    BYTE PTR [ebp-0x4],0x1b
1002b4e6:	call   0x100374b0
1002b4eb:	mov    DWORD PTR [ebp-0x80],eax
1002b4ee:	lea    eax,[ebp-0x34]
1002b4f1:	push   eax
1002b4f2:	call   0x1002e64a
1002b4f7:	test   eax,eax
1002b4f9:	jge    0x1002b518
1002b4fb:	push   DWORD PTR [ebp-0x14]
1002b4fe:	lea    edi,[ebp-0x1c]
1002b501:	call   0x1002b928
1002b506:	push   ebx
1002b507:	push   0x1
1002b509:	mov    ecx,esi
1002b50b:	call   0x100012f0
1002b510:	push   DWORD PTR [ebp-0x58]
1002b513:	jmp    0x1002b45e
1002b518:	mov    esi,DWORD PTR [ebp-0x34]
1002b51b:	cmp    esi,ebx
1002b51d:	mov    DWORD PTR [ebp-0x20],esi
1002b520:	je     0x1002b528
1002b522:	mov    eax,DWORD PTR [esi]
1002b524:	push   esi
1002b525:	call   DWORD PTR [eax+0x4]
1002b528:	mov    BYTE PTR [ebp-0x4],0x1c
1002b52c:	mov    DWORD PTR [ebp-0x50],ebx
1002b52f:	mov    eax,DWORD PTR [ebp-0x50]
1002b532:	cmp    eax,DWORD PTR [ebp-0x80]
1002b535:	jge    0x1002b829
1002b53b:	lea    eax,[ebp-0x40]
1002b53e:	push   eax
1002b53f:	lea    esi,[ebp-0x15c]
1002b545:	call   0x10037170
1002b54a:	lea    ecx,[ebp-0x5c]
1002b54d:	push   ecx
1002b54e:	mov    ebx,eax
1002b550:	mov    BYTE PTR [ebp-0x4],0x1d
1002b554:	call   0x10033c90
1002b559:	pop    ecx
1002b55a:	push   0x0
1002b55c:	push   0x1
1002b55e:	mov    ecx,esi
1002b560:	mov    BYTE PTR [ebp-0x4],0x1f
1002b564:	call   0x100012f0
1002b569:	lea    eax,[ebp-0x40]
1002b56c:	push   eax
1002b56d:	lea    esi,[ebp-0xd0]
1002b573:	call   0x10037170
1002b578:	lea    ecx,[ebp-0x48]
1002b57b:	push   ecx
1002b57c:	mov    ebx,eax
1002b57e:	mov    BYTE PTR [ebp-0x4],0x20
1002b582:	call   0x10033c90
1002b587:	pop    ecx
1002b588:	push   0x0
1002b58a:	push   0x1
1002b58c:	mov    ecx,esi
1002b58e:	mov    BYTE PTR [ebp-0x4],0x22
1002b592:	call   0x100012f0
1002b597:	lea    eax,[ebp-0x40]
1002b59a:	push   eax
1002b59b:	lea    esi,[ebp+0x1c]
1002b59e:	call   0x10037170
1002b5a3:	mov    edx,esi
1002b5a5:	lea    esi,[ebp+0x54]
1002b5a8:	mov    BYTE PTR [ebp-0x4],0x23
1002b5ac:	call   0x100333c0
1002b5b1:	lea    eax,[ebp-0x60]
1002b5b4:	push   eax
1002b5b5:	mov    ebx,esi
1002b5b7:	mov    BYTE PTR [ebp-0x4],0x24
1002b5bb:	call   0x10033c90
1002b5c0:	pop    ecx
1002b5c1:	lea    eax,[ebp-0x40]
1002b5c4:	push   eax
1002b5c5:	lea    esi,[ebp-0xd0]
1002b5cb:	mov    BYTE PTR [ebp-0x4],0x25
1002b5cf:	call   0x10037170
1002b5d4:	lea    ecx,[ebp-0x44]
1002b5d7:	push   ecx
1002b5d8:	mov    ebx,eax
1002b5da:	mov    BYTE PTR [ebp-0x4],0x26
1002b5de:	call   0x10033c90
1002b5e3:	pop    ecx
1002b5e4:	push   0x0
1002b5e6:	push   0x1
1002b5e8:	mov    ecx,esi
1002b5ea:	mov    BYTE PTR [ebp-0x4],0x28
1002b5ee:	call   0x100012f0
1002b5f3:	lea    eax,[ebp-0x40]
1002b5f6:	push   eax
1002b5f7:	lea    esi,[ebp+0x0]
1002b5fa:	call   0x10037170
1002b5ff:	lea    eax,[ebp-0x4c]
1002b602:	mov    BYTE PTR [ebp-0x4],0x29
1002b606:	push   eax
1002b607:	mov    ebx,esi
1002b609:	call   0x10033c90
1002b60e:	pop    ecx
1002b60f:	lea    eax,[ebp-0x40]
1002b612:	push   eax
1002b613:	lea    esi,[ebp+0x38]
1002b616:	mov    BYTE PTR [ebp-0x4],0x2a
1002b61a:	call   0x10037170
1002b61f:	mov    BYTE PTR [ebp-0x4],0x2b
1002b623:	cmp    DWORD PTR [ebp+0x50],0x10
1002b627:	mov    eax,DWORD PTR [ebp+0x3c]
1002b62a:	jae    0x1002b62f
1002b62c:	lea    eax,[ebp+0x3c]
1002b62f:	push   eax
1002b630:	call   0x10045fb3
1002b635:	mov    DWORD PTR [ebp-0x28],eax
1002b638:	sar    eax,0x6
1002b63b:	pop    ecx
1002b63c:	and    eax,0x3
1002b63f:	push   eax
1002b640:	lea    eax,[ebp+0x1c]
1002b643:	push   eax
1002b644:	lea    ebx,[ebp+0x0]
1002b647:	mov    edi,0x10082f58
1002b64c:	call   0x10019baa
1002b651:	lea    eax,[ebp-0x78]
1002b654:	push   eax
1002b655:	call   0x1002e6ca
1002b65a:	test   eax,eax
1002b65c:	jge    0x1002b718
1002b662:	push   DWORD PTR [ebp-0x14]
1002b665:	lea    edi,[ebp-0x1c]
1002b668:	call   0x1002b928
1002b66d:	xor    esi,esi
1002b66f:	xor    ebx,ebx
1002b671:	push   esi
1002b672:	inc    ebx
1002b673:	push   ebx
1002b674:	lea    ecx,[ebp+0x38]
1002b677:	call   0x100012f0
1002b67c:	lea    edi,[ebp-0x4c]
1002b67f:	call   0x100025b3
1002b684:	push   esi
1002b685:	push   ebx
1002b686:	lea    ecx,[ebp+0x0]
1002b689:	call   0x100012f0
1002b68e:	lea    edi,[ebp-0x44]
1002b691:	call   0x100025b3
1002b696:	lea    edi,[ebp-0x60]
1002b699:	call   0x100025b3
1002b69e:	push   esi
1002b69f:	push   ebx
1002b6a0:	lea    ecx,[ebp+0x54]
1002b6a3:	call   0x100012f0
1002b6a8:	push   esi
1002b6a9:	push   ebx
1002b6aa:	lea    ecx,[ebp+0x1c]
1002b6ad:	call   0x100012f0
1002b6b2:	lea    edi,[ebp-0x48]
1002b6b5:	call   0x100025b3
1002b6ba:	lea    edi,[ebp-0x5c]
1002b6bd:	call   0x100025b3
1002b6c2:	mov    BYTE PTR [ebp-0x4],0x1b
1002b6c6:	mov    eax,DWORD PTR [ebp-0x20]
1002b6c9:	cmp    eax,esi
1002b6cb:	je     0x1002b6d3
1002b6cd:	mov    ecx,DWORD PTR [eax]
1002b6cf:	push   eax
1002b6d0:	call   DWORD PTR [ecx+0x8]
1002b6d3:	push   esi
1002b6d4:	push   ebx
1002b6d5:	lea    ecx,[ebp+0x70]
1002b6d8:	call   0x100012f0
1002b6dd:	push   DWORD PTR [ebp-0x58]
1002b6e0:	call   0x10042fe2
1002b6e5:	mov    eax,DWORD PTR [ebp-0x30]
1002b6e8:	pop    ecx
1002b6e9:	add    eax,0xfffffff0
1002b6ec:	call   0x10002069
1002b6f1:	push   esi
1002b6f2:	push   ebx
1002b6f3:	lea    ecx,[ebp+0x8c]
1002b6f9:	call   0x100012f0
1002b6fe:	push   esi
1002b6ff:	push   ebx
1002b700:	lea    ecx,[ebp+0xa8]
1002b706:	call   0x100012f0
1002b70b:	mov    BYTE PTR [ebp-0x4],bl
1002b70e:	mov    eax,DWORD PTR [ebp-0x24]
1002b711:	cmp    eax,esi
1002b713:	jmp    0x1002b494
1002b718:	mov    edi,DWORD PTR [ebp-0x78]
1002b71b:	lea    eax,[edi+0x8]
1002b71e:	lea    esi,[ebp-0x5c]
1002b721:	call   0x1001135f
1002b726:	lea    eax,[edi+0xc]
1002b729:	lea    esi,[ebp-0x48]
1002b72c:	call   0x1001135f
1002b731:	lea    eax,[edi+0x10]
1002b734:	lea    esi,[ebp-0x60]
1002b737:	call   0x1001135f
1002b73c:	lea    eax,[edi+0x14]
1002b73f:	lea    esi,[ebp-0x44]
1002b742:	call   0x1001135f
1002b747:	lea    eax,[edi+0x18]
1002b74a:	lea    esi,[ebp-0x4c]
1002b74d:	call   0x1001135f
1002b752:	mov    eax,DWORD PTR [ebp-0x28]
1002b755:	mov    DWORD PTR [edi+0x1c],eax
1002b758:	mov    eax,DWORD PTR [edi]
1002b75a:	push   edi
1002b75b:	mov    DWORD PTR [ebp-0x28],edi
1002b75e:	call   DWORD PTR [eax+0x4]
1002b761:	mov    BYTE PTR [ebp-0x4],0x2c
1002b765:	mov    WORD PTR [ebp-0x98],0x9
1002b76e:	mov    DWORD PTR [ebp-0x90],edi
1002b774:	mov    eax,DWORD PTR [edi]
1002b776:	push   edi
1002b777:	call   DWORD PTR [eax+0x4]
1002b77a:	lea    eax,[ebp-0x98]
1002b780:	mov    BYTE PTR [ebp-0x4],0x2d
1002b784:	xor    ebx,ebx
1002b786:	push   eax
1002b787:	lea    esi,[ebp-0x74]
1002b78a:	mov    WORD PTR [ebp-0x74],bx
1002b78e:	call   0x1002ac08
1002b793:	mov    eax,esi
1002b795:	mov    BYTE PTR [ebp-0x4],0x2e
1002b799:	mov    esi,DWORD PTR [ebp-0x34]
1002b79c:	push   eax
1002b79d:	add    esi,0x4
1002b7a0:	call   0x1002d085
1002b7a5:	mov    esi,DWORD PTR ds:0x10067284
1002b7ab:	lea    eax,[ebp-0x74]
1002b7ae:	push   eax
1002b7af:	call   esi
1002b7b1:	lea    eax,[ebp-0x98]
1002b7b7:	push   eax
1002b7b8:	call   esi
1002b7ba:	mov    BYTE PTR [ebp-0x4],0x2b
1002b7be:	mov    eax,DWORD PTR [edi]
1002b7c0:	push   edi
1002b7c1:	call   DWORD PTR [eax+0x8]
1002b7c4:	xor    esi,esi
1002b7c6:	push   ebx
1002b7c7:	inc    esi
1002b7c8:	push   esi
1002b7c9:	lea    ecx,[ebp+0x38]
1002b7cc:	call   0x100012f0
1002b7d1:	lea    edi,[ebp-0x4c]
1002b7d4:	call   0x100025b3
1002b7d9:	push   ebx
1002b7da:	push   esi
1002b7db:	lea    ecx,[ebp+0x0]
1002b7de:	call   0x100012f0
1002b7e3:	lea    edi,[ebp-0x44]
1002b7e6:	call   0x100025b3
1002b7eb:	lea    edi,[ebp-0x60]
1002b7ee:	call   0x100025b3
1002b7f3:	push   ebx
1002b7f4:	push   esi
1002b7f5:	lea    ecx,[ebp+0x54]
1002b7f8:	call   0x100012f0
1002b7fd:	push   ebx
1002b7fe:	push   esi
1002b7ff:	lea    ecx,[ebp+0x1c]
1002b802:	call   0x100012f0
1002b807:	lea    edi,[ebp-0x48]
1002b80a:	call   0x100025b3
1002b80f:	lea    edi,[ebp-0x5c]
1002b812:	mov    BYTE PTR [ebp-0x4],0x1c
1002b816:	call   0x100025b3
1002b81b:	inc    DWORD PTR [ebp-0x50]
1002b81e:	mov    esi,DWORD PTR [ebp-0x20]
1002b821:	xor    edi,edi
1002b823:	inc    edi
1002b824:	jmp    0x1002b52f
1002b829:	sub    esp,0x10
1002b82c:	cmp    esi,ebx
1002b82e:	mov    eax,esp
1002b830:	mov    DWORD PTR [ebp-0x28],esp
1002b833:	mov    WORD PTR [eax],0x9
1002b838:	mov    DWORD PTR [eax+0x8],esi
1002b83b:	je     0x1002b843
1002b83d:	mov    eax,DWORD PTR [esi]
1002b83f:	push   esi
1002b840:	call   DWORD PTR [eax+0x4]
1002b843:	push   DWORD PTR [ebp-0x64]
1002b846:	lea    ecx,[ebp+0x70]
1002b849:	call   0x1002acfe
1002b84e:	cmp    esi,ebx
1002b850:	mov    BYTE PTR [ebp-0x4],0x1b
1002b854:	je     0x1002b85c
1002b856:	mov    eax,DWORD PTR [esi]
1002b858:	push   esi
1002b859:	call   DWORD PTR [eax+0x8]
1002b85c:	push   ebx
1002b85d:	push   edi
1002b85e:	lea    ecx,[ebp+0x70]
1002b861:	mov    BYTE PTR [ebp-0x4],0x1a
1002b865:	call   0x100012f0
1002b86a:	inc    DWORD PTR [ebp-0x54]
1002b86d:	jmp    0x1002b4c3
1002b872:	lea    eax,[ebp-0x28]
1002b875:	push   eax
1002b876:	lea    ecx,[ebp-0x40]
1002b879:	call   0x10037340
1002b87e:	lea    edi,[ebp-0x18]
1002b881:	mov    BYTE PTR [ebp-0x4],0x2f
1002b885:	call   0x10004141
1002b88a:	mov    BYTE PTR [ebp-0x4],0x1a
1002b88e:	mov    eax,DWORD PTR [ebp-0x28]
1002b891:	add    eax,0xfffffff0
1002b894:	call   0x10002069
1002b899:	mov    esi,DWORD PTR [ebp-0x24]
1002b89c:	cmp    DWORD PTR [ebp-0x1c],esi
1002b89f:	je     0x1002b8ad
1002b8a1:	mov    edi,esi
1002b8a3:	lea    esi,[ebp-0x1c]
1002b8a6:	call   0x10007961
1002b8ab:	mov    esi,edi
1002b8ad:	push   DWORD PTR [ebp-0x14]
1002b8b0:	lea    edi,[ebp-0x1c]
1002b8b3:	call   0x1002b928
1002b8b8:	push   DWORD PTR [ebp-0x58]
1002b8bb:	call   0x10042fe2
1002b8c0:	mov    eax,DWORD PTR [ebp-0x30]
1002b8c3:	pop    ecx
1002b8c4:	add    eax,0xfffffff0
1002b8c7:	call   0x10002069
1002b8cc:	push   ebx
1002b8cd:	push   0x1
1002b8cf:	lea    ecx,[ebp+0x8c]
1002b8d5:	call   0x100012f0
1002b8da:	push   ebx
1002b8db:	push   0x1
1002b8dd:	lea    ecx,[ebp+0xa8]
1002b8e3:	call   0x100012f0
1002b8e8:	cmp    esi,ebx
1002b8ea:	mov    BYTE PTR [ebp-0x4],0x1
1002b8ee:	je     0x1002b098
1002b8f4:	mov    eax,DWORD PTR [esi]
1002b8f6:	push   esi
1002b8f7:	call   DWORD PTR [eax+0x8]
1002b8fa:	jmp    0x1002b098
1002b8ff:	push   DWORD PTR [ebp-0x14]
1002b902:	lea    edi,[ebp-0x1c]
1002b905:	call   0x1002b928
1002b90a:	mov    eax,0x1002b098
1002b90f:	ret    
1002b910:	mov    eax,DWORD PTR [esi+0x4]
1002b913:	sub    eax,0x10
1002b916:	call   0x10002069
1002b91b:	mov    eax,DWORD PTR [esi]
1002b91d:	test   eax,eax
1002b91f:	je     0x1002b927
1002b921:	mov    ecx,DWORD PTR [eax]
1002b923:	push   eax
1002b924:	call   DWORD PTR [ecx+0x8]
1002b927:	ret    
1002b928:	push   0x0
1002b92a:	mov    eax,0x10060540
1002b92f:	call   0x10059df5
1002b934:	mov    esi,DWORD PTR [ebp+0x8]
1002b937:	mov    eax,DWORD PTR [edi]
1002b939:	test   eax,eax
1002b93b:	mov    DWORD PTR [esi],eax
1002b93d:	je     0x1002b945
1002b93f:	mov    ecx,DWORD PTR [eax]
1002b941:	push   eax
1002b942:	call   DWORD PTR [ecx+0x4]
1002b945:	and    DWORD PTR [ebp-0x4],0x0
1002b949:	mov    eax,DWORD PTR [edi+0x4]
1002b94c:	sub    eax,0x10
1002b94f:	call   0x10004dfc
1002b954:	add    eax,0x10
1002b957:	mov    DWORD PTR [esi+0x4],eax
1002b95a:	mov    eax,esi
1002b95c:	call   0x10059ecd
1002b961:	ret    0x4
1002b964:	mov    eax,DWORD PTR [eax]
1002b966:	test   eax,eax
1002b968:	je     0x1002b970
1002b96a:	mov    ecx,DWORD PTR [eax]
1002b96c:	push   eax
1002b96d:	call   DWORD PTR [ecx+0x8]
1002b970:	ret    
1002b971:	push   0x0
1002b973:	mov    eax,0x10061f59
1002b978:	call   0x10059df5
1002b97d:	mov    ebx,DWORD PTR [ebp+0x8]
1002b980:	mov    eax,DWORD PTR [ebp+0xc]
1002b983:	mov    DWORD PTR [ebx+0x8],eax
1002b986:	mov    eax,DWORD PTR [ebp+0x10]
1002b989:	mov    edi,0x10082a6c
1002b98e:	mov    DWORD PTR [ebx+0x4],0x1
1002b995:	mov    DWORD PTR [ebx],0x1007427c
1002b99b:	mov    DWORD PTR [ebx+0xc],eax
1002b99e:	and    DWORD PTR [ebx+0x10],0x0
1002b9a2:	lea    esi,[ebx+0x14]
1002b9a5:	mov    ecx,edi
1002b9a7:	call   0x1000214c
1002b9ac:	xor    eax,eax
1002b9ae:	mov    DWORD PTR [ebx+0x1c],eax
1002b9b1:	mov    DWORD PTR [ebp-0x4],eax
1002b9b4:	lea    esi,[ebx+0x24]
1002b9b7:	mov    ecx,edi
1002b9b9:	mov    DWORD PTR [ebx+0x20],eax
1002b9bc:	call   0x1000214c
1002b9c1:	xor    edi,edi
1002b9c3:	mov    DWORD PTR [ebx+0x2c],edi
1002b9c6:	mov    eax,DWORD PTR [ebp+0x14]
1002b9c9:	mov    BYTE PTR [ebp-0x4],0x1
1002b9cd:	mov    eax,DWORD PTR [eax]
1002b9cf:	sub    eax,0x10
1002b9d2:	call   0x10004dfc
1002b9d7:	mov    esi,DWORD PTR ds:0x10067078
1002b9dd:	add    eax,0x10
1002b9e0:	mov    DWORD PTR [ebx+0x30],eax
1002b9e3:	mov    BYTE PTR [ebx+0x18],0x0
1002b9e7:	mov    BYTE PTR [ebx+0x28],0x0
1002b9eb:	mov    eax,DWORD PTR [ebx+0x1c]
1002b9ee:	cmp    eax,edi
1002b9f0:	je     0x1002b9f5
1002b9f2:	push   eax
1002b9f3:	call   esi
1002b9f5:	mov    DWORD PTR [ebx+0x1c],edi
1002b9f8:	mov    eax,DWORD PTR [ebx+0x2c]
1002b9fb:	cmp    eax,edi
1002b9fd:	je     0x1002ba02
1002b9ff:	push   eax
1002ba00:	call   esi
1002ba02:	lea    eax,[ebp+0xc]
1002ba05:	push   eax
1002ba06:	mov    DWORD PTR [ebx+0x2c],edi
1002ba09:	call   0x1002e5c2
1002ba0e:	test   eax,eax
1002ba10:	jl     0x1002ba43
1002ba12:	mov    edi,DWORD PTR [ebp+0xc]
1002ba15:	test   edi,edi
1002ba17:	je     0x1002ba1f
1002ba19:	mov    eax,DWORD PTR [edi]
1002ba1b:	push   edi
1002ba1c:	call   DWORD PTR [eax+0x4]
1002ba1f:	cmp    DWORD PTR [ebx+0x10],edi
1002ba22:	je     0x1002ba2c
1002ba24:	lea    esi,[ebx+0x10]
1002ba27:	call   0x10007961
1002ba2c:	cmp    DWORD PTR [ebx+0x20],edi
1002ba2f:	je     0x1002ba39
1002ba31:	lea    esi,[ebx+0x20]
1002ba34:	call   0x10007961
1002ba39:	test   edi,edi
1002ba3b:	je     0x1002ba43
1002ba3d:	mov    eax,DWORD PTR [edi]
1002ba3f:	push   edi
1002ba40:	call   DWORD PTR [eax+0x8]
1002ba43:	mov    eax,ebx
1002ba45:	call   0x10059ecd
1002ba4a:	ret    0x10
1002ba4d:	push   DWORD PTR [esp+0x8]
1002ba51:	push   0x100706d8
1002ba56:	call   0x1002abc2
1002ba5b:	test   eax,eax
1002ba5d:	pop    ecx
1002ba5e:	pop    ecx
1002ba5f:	je     0x1002ba6f
1002ba61:	mov    eax,DWORD PTR [esp+0x4]
1002ba65:	mov    ecx,DWORD PTR [esp+0xc]
1002ba69:	mov    DWORD PTR [ecx],eax
1002ba6b:	xor    eax,eax
1002ba6d:	jmp    0x1002ba74
1002ba6f:	mov    eax,0x80004005
1002ba74:	ret    0xc
1002ba77:	push   esi
1002ba78:	mov    esi,eax
1002ba7a:	mov    eax,DWORD PTR [esi+0xc]
1002ba7d:	test   eax,eax
1002ba7f:	je     0x1002ba88
1002ba81:	push   eax
1002ba82:	call   DWORD PTR ds:0x10067078
1002ba88:	and    DWORD PTR [esi+0xc],0x0
1002ba8c:	mov    eax,DWORD PTR [esi+0x4]
1002ba8f:	sub    eax,0x10
1002ba92:	call   0x10002069
1002ba97:	mov    esi,DWORD PTR [esi]
1002ba99:	test   esi,esi
1002ba9b:	je     0x1002baa3
1002ba9d:	mov    eax,DWORD PTR [esi]
1002ba9f:	push   esi
1002baa0:	call   DWORD PTR [eax+0x8]
1002baa3:	pop    esi
1002baa4:	ret    
1002baa5:	push   0x10
1002baa7:	mov    eax,0x1006559c
1002baac:	call   0x10059e28
1002bab1:	call   0x10002068
1002bab6:	mov    ebx,DWORD PTR [ebp+0x8]
1002bab9:	xor    esi,esi
1002babb:	mov    DWORD PTR [ebp-0x4],esi
1002babe:	mov    DWORD PTR [ebp-0x14],ebx
1002bac1:	call   0x10002068
1002bac6:	push   esi
1002bac7:	push   esi
1002bac8:	call   DWORD PTR ds:0x1006742c
1002bace:	push   0x3a98
1002bad3:	push   esi
1002bad4:	lea    eax,[ebx+0x30]
1002bad7:	push   eax
1002bad8:	lea    eax,[ebp-0x1c]
1002badb:	push   eax
1002badc:	mov    BYTE PTR [ebp-0x4],0x1
1002bae0:	call   0x1002b026
1002bae5:	add    esp,0x10
1002bae8:	mov    BYTE PTR [ebp-0x4],0x2
1002baec:	mov    edi,DWORD PTR [ebp-0x1c]
1002baef:	lea    esi,[ebx+0x10]
1002baf2:	cmp    DWORD PTR [esi],edi
1002baf4:	je     0x1002bafb
1002baf6:	call   0x10007961
1002bafb:	lea    edi,[ebx+0x14]
1002bafe:	lea    eax,[ebp-0x18]
1002bb01:	call   0x10004141
1002bb06:	cmp    DWORD PTR [esi],0x0
1002bb09:	je     0x1002bb0f
1002bb0b:	mov    BYTE PTR [ebx+0x18],0x1
1002bb0f:	lea    esi,[ebp-0x1c]
1002bb12:	call   0x1002b910
1002bb17:	jmp    0x1002bb2a
1002bb19:	push   0x4
1002bb1b:	call   0x10038b80
1002bb20:	pop    ecx
1002bb21:	mov    eax,0x1002bb27
1002bb26:	ret    
1002bb27:	mov    ebx,DWORD PTR [ebp+0x8]
1002bb2a:	call   DWORD PTR ds:0x10067448
1002bb30:	or     DWORD PTR [ebp-0x4],0xffffffff
1002bb34:	test   ebx,ebx
1002bb36:	je     0x1002bb3e
1002bb38:	mov    eax,DWORD PTR [ebx]
1002bb3a:	push   ebx
1002bb3b:	call   DWORD PTR [eax+0x8]
1002bb3e:	xor    eax,eax
1002bb40:	call   0x10059ecd
1002bb45:	ret    0x4
1002bb48:	push   0x10
1002bb4a:	mov    eax,0x10065571
1002bb4f:	call   0x10059e28
1002bb54:	mov    ebx,DWORD PTR [ebp+0x8]
1002bb57:	xor    eax,eax
1002bb59:	push   eax
1002bb5a:	mov    DWORD PTR [ebp-0x4],eax
1002bb5d:	push   eax
1002bb5e:	mov    DWORD PTR [ebp-0x14],ebx
1002bb61:	call   DWORD PTR ds:0x1006742c
1002bb67:	push   0x186a0
1002bb6c:	push   0x1
1002bb6e:	lea    eax,[ebx+0x30]
1002bb71:	push   eax
1002bb72:	lea    eax,[ebp-0x1c]
1002bb75:	push   eax
1002bb76:	mov    BYTE PTR [ebp-0x4],0x1
1002bb7a:	call   0x1002b026
1002bb7f:	add    esp,0x10
1002bb82:	mov    BYTE PTR [ebp-0x4],0x2
1002bb86:	mov    edi,DWORD PTR [ebp-0x1c]
1002bb89:	lea    esi,[ebx+0x20]
1002bb8c:	cmp    DWORD PTR [esi],edi
1002bb8e:	je     0x1002bb95
1002bb90:	call   0x10007961
1002bb95:	lea    edi,[ebx+0x24]
1002bb98:	lea    eax,[ebp-0x18]
1002bb9b:	call   0x10004141
1002bba0:	cmp    DWORD PTR [esi],0x0
1002bba3:	je     0x1002bba9
1002bba5:	mov    BYTE PTR [ebx+0x28],0x1
1002bba9:	lea    esi,[ebp-0x1c]
1002bbac:	call   0x1002b910
1002bbb1:	jmp    0x1002bbc4
1002bbb3:	push   0x4
1002bbb5:	call   0x10038b80
1002bbba:	pop    ecx
1002bbbb:	mov    eax,0x1002bbc1
1002bbc0:	ret    
1002bbc1:	mov    ebx,DWORD PTR [ebp+0x8]
1002bbc4:	call   DWORD PTR ds:0x10067448
1002bbca:	or     DWORD PTR [ebp-0x4],0xffffffff
1002bbce:	test   ebx,ebx
1002bbd0:	je     0x1002bbd8
1002bbd2:	mov    eax,DWORD PTR [ebx]
1002bbd4:	push   ebx
1002bbd5:	call   DWORD PTR [eax+0x8]
1002bbd8:	xor    eax,eax
1002bbda:	call   0x10059ecd
1002bbdf:	ret    0x4
1002bbe2:	push   ebp
1002bbe3:	mov    ebp,esp
1002bbe5:	and    esp,0xfffffff8
1002bbe8:	push   0xffffffff
1002bbea:	push   0x10062da7
1002bbef:	mov    eax,fs:0x0
1002bbf5:	push   eax
1002bbf6:	sub    esp,0x8c
1002bbfc:	push   esi
1002bbfd:	push   edi
1002bbfe:	mov    eax,ds:0x100801ac
1002bc03:	xor    eax,esp
1002bc05:	push   eax
1002bc06:	lea    eax,[esp+0x98]
1002bc0d:	mov    fs:0x0,eax
1002bc13:	push   0x10073f70
1002bc18:	mov    edi,0x10073f94
1002bc1d:	push   0xf
1002bc1f:	mov    ecx,edi
1002bc21:	call   0x100042b4
1002bc26:	pop    ecx
1002bc27:	pop    ecx
1002bc28:	push   eax
1002bc29:	lea    ecx,[esp+0x44]
1002bc2d:	call   0x100011a7
1002bc32:	xor    esi,esi
1002bc34:	push   esi
1002bc35:	lea    eax,[esp+0x44]
1002bc39:	push   eax
1002bc3a:	lea    eax,[esp+0x80]
1002bc41:	push   eax
1002bc42:	mov    DWORD PTR [esp+0xac],esi
1002bc49:	mov    eax,DWORD PTR [ebx+0x4]
1002bc4c:	add    eax,0x18
1002bc4f:	call   0x10008803
1002bc54:	push   eax
1002bc55:	lea    eax,[esp+0x18]
1002bc59:	push   eax
1002bc5a:	mov    BYTE PTR [esp+0xa8],0x1
1002bc62:	call   0x1002d5a2
1002bc67:	pop    ecx
1002bc68:	pop    ecx
1002bc69:	push   esi
1002bc6a:	push   0x1
1002bc6c:	lea    ecx,[esp+0x80]
1002bc73:	call   0x100012f0
1002bc78:	push   esi
1002bc79:	push   0x1
1002bc7b:	lea    ecx,[esp+0x48]
1002bc7f:	mov    BYTE PTR [esp+0xa8],0x4
1002bc87:	call   0x100012f0
1002bc8c:	lea    eax,[esp+0x14]
1002bc90:	mov    BYTE PTR [esp+0xf],0x0
1002bc95:	mov    DWORD PTR [esp+0x10],esi
1002bc99:	call   0x100045f3
1002bc9e:	test   eax,eax
1002bca0:	je     0x1002bd63
1002bca6:	cmp    BYTE PTR [esp+0xf],0x0
1002bcab:	jne    0x1002bcf9
1002bcad:	push   0x10073fa4
1002bcb2:	push   0x4
1002bcb4:	mov    ecx,0x1006f260
1002bcb9:	call   0x100042b4
1002bcbe:	pop    ecx
1002bcbf:	pop    ecx
1002bcc0:	push   eax
1002bcc1:	push   DWORD PTR [esp+0x14]
1002bcc5:	lea    esi,[esp+0x1c]
1002bcc9:	call   0x10004609
1002bcce:	mov    esi,eax
1002bcd0:	call   0x10006825
1002bcd5:	test   al,al
1002bcd7:	pop    ecx
1002bcd8:	je     0x1002bcdf
1002bcda:	mov    BYTE PTR [esp+0xf],0x1
1002bcdf:	inc    DWORD PTR [esp+0x10]
1002bce3:	lea    eax,[esp+0x14]
1002bce7:	call   0x100045f3
1002bcec:	cmp    DWORD PTR [esp+0x10],eax
1002bcf0:	jne    0x1002bca6
1002bcf2:	cmp    BYTE PTR [esp+0xf],0x0
1002bcf7:	je     0x1002bd63
1002bcf9:	push   0x10073fd8
1002bcfe:	push   0x4
1002bd00:	mov    ecx,0x1006f260
1002bd05:	call   0x100042b4
1002bd0a:	pop    ecx
1002bd0b:	pop    ecx
1002bd0c:	push   eax
1002bd0d:	lea    ecx,[esp+0x28]
1002bd11:	call   0x100011a7
1002bd16:	push   0x1007400c
1002bd1b:	push   0xf
1002bd1d:	mov    ecx,edi
1002bd1f:	mov    BYTE PTR [esp+0xa8],0x5
1002bd27:	call   0x100042b4
1002bd2c:	pop    ecx
1002bd2d:	pop    ecx
1002bd2e:	push   eax
1002bd2f:	lea    ecx,[esp+0x60]
1002bd33:	call   0x100011a7
1002bd38:	mov    BYTE PTR [esp+0xa0],0x6
1002bd40:	mov    edx,DWORD PTR [ebx+0x4]
1002bd43:	lea    eax,[esp+0x5c]
1002bd47:	push   eax
1002bd48:	add    edx,0x18
1002bd4b:	lea    ecx,[esp+0x28]
1002bd4f:	call   0x100086ec
1002bd54:	push   0x0
1002bd56:	push   0x1
1002bd58:	lea    ecx,[esp+0x64]
1002bd5c:	call   0x100012f0
1002bd61:	jmp    0x1002bd96
1002bd63:	push   0x10074038
1002bd68:	push   0xf
1002bd6a:	mov    ecx,edi
1002bd6c:	call   0x100042b4
1002bd71:	pop    ecx
1002bd72:	pop    ecx
1002bd73:	push   eax
1002bd74:	lea    ecx,[esp+0x28]
1002bd78:	call   0x100011a7
1002bd7d:	lea    eax,[esp+0x24]
1002bd81:	push   eax
1002bd82:	mov    BYTE PTR [esp+0xa4],0x7
1002bd8a:	mov    eax,DWORD PTR [ebx+0x4]
1002bd8d:	add    eax,0x18
1002bd90:	push   eax
1002bd91:	call   0x100085a1
1002bd96:	push   0x0
1002bd98:	push   0x1
1002bd9a:	lea    ecx,[esp+0x2c]
1002bd9e:	call   0x100012f0
1002bda3:	lea    esi,[esp+0x14]
1002bda7:	call   0x10004996
1002bdac:	mov    ecx,DWORD PTR [esp+0x98]
1002bdb3:	mov    DWORD PTR fs:0x0,ecx
1002bdba:	pop    ecx
1002bdbb:	pop    edi
1002bdbc:	pop    esi
1002bdbd:	mov    esp,ebp
1002bdbf:	pop    ebp
1002bdc0:	ret    
1002bdc1:	push   0x6c
1002bdc3:	mov    eax,0x100656b6
1002bdc8:	call   0x10059e94
1002bdcd:	mov    esi,DWORD PTR [ebp+0x8]
1002bdd0:	push   DWORD PTR [esi]
1002bdd2:	lea    ecx,[ebp-0x30]
1002bdd5:	mov    DWORD PTR [ebp-0x74],esi
1002bdd8:	call   0x10009035
1002bddd:	xor    edi,edi
1002bddf:	mov    DWORD PTR [ebp-0x4],edi
1002bde2:	mov    DWORD PTR [ebp-0x54],edi
1002bde5:	call   0x1002f6a0
1002bdea:	push   edi
1002bdeb:	lea    ecx,[ebp-0x4c]
1002bdee:	mov    DWORD PTR [ebp-0x34],0xf
1002bdf5:	call   0x1000141c
1002bdfa:	xor    ebx,ebx
1002bdfc:	inc    ebx
1002bdfd:	push   ebx
1002bdfe:	lea    eax,[ebp-0x50]
1002be01:	push   eax
1002be02:	mov    BYTE PTR [ebp-0x4],0x3
1002be06:	call   0x10034910
1002be0b:	lea    eax,[ebp-0x5c]
1002be0e:	push   eax
1002be0f:	lea    ecx,[ebp-0x4c]
1002be12:	lea    edx,[ebp-0x50]
1002be15:	mov    BYTE PTR [ebp-0x4],0x4
1002be19:	call   0x10036070
1002be1e:	test   al,al
1002be20:	je     0x1002be58
1002be22:	push   0x34
1002be24:	call   0x10043196
1002be29:	pop    ecx
1002be2a:	mov    DWORD PTR [ebp-0x58],eax
1002be2d:	cmp    eax,edi
1002be2f:	mov    BYTE PTR [ebp-0x4],0x5
1002be33:	je     0x1002be53
1002be35:	mov    eax,DWORD PTR [ebp-0x5c]
1002be38:	mov    DWORD PTR [ebp-0x68],eax
1002be3b:	lea    eax,[ebp-0x70]
1002be3e:	push   eax
1002be3f:	lea    eax,[ebp-0x4c]
1002be42:	push   eax
1002be43:	push   DWORD PTR [ebp-0x58]
1002be46:	mov    DWORD PTR [ebp-0x70],edi
1002be49:	mov    DWORD PTR [ebp-0x6c],edi
1002be4c:	call   0x100027dd
1002be51:	jmp    0x1002be55
1002be53:	xor    eax,eax
1002be55:	mov    DWORD PTR [ebp-0x54],eax
1002be58:	push   DWORD PTR [ebp-0x50]
1002be5b:	call   DWORD PTR ds:0x10067078
1002be61:	push   edi
1002be62:	push   ebx
1002be63:	lea    ecx,[ebp-0x4c]
1002be66:	call   0x100012f0
1002be6b:	mov    DWORD PTR [ebp-0x4],ebx
1002be6e:	cmp    DWORD PTR [ebp-0x54],edi
1002be71:	jne    0x1002be87
1002be73:	xor    bl,bl
1002be75:	push   edi
1002be76:	push   0x1
1002be78:	lea    ecx,[ebp-0x30]
1002be7b:	call   0x100012f0
1002be80:	mov    al,bl
1002be82:	jmp    0x1002c0da
1002be87:	cmp    DWORD PTR [ebp-0x18],0x10
1002be8b:	mov    eax,DWORD PTR [ebp-0x2c]
1002be8e:	jae    0x1002be93
1002be90:	lea    eax,[ebp-0x2c]
1002be93:	push   eax
1002be94:	mov    DWORD PTR [ebp-0x6c],eax
1002be97:	call   0x10043450
1002be9c:	pop    ecx
1002be9d:	mov    DWORD PTR [ebp-0x68],eax
1002bea0:	lea    eax,[ebp-0x6c]
1002bea3:	push   eax
1002bea4:	push   DWORD PTR [ebp-0x54]
1002bea7:	call   0x1003a2c0
1002beac:	test   al,al
1002beae:	je     0x1002c0b1
1002beb4:	call   DWORD PTR ds:0x1006717c
1002beba:	mov    ebx,eax
1002bebc:	push   ebx
1002bebd:	mov    DWORD PTR [ebp-0x6c],ebx
1002bec0:	call   DWORD PTR ds:0x10067178
1002bec6:	mov    edi,DWORD PTR ds:0x10067170
1002becc:	push   0x2
1002bece:	push   ebx
1002becf:	mov    DWORD PTR [ebp-0x68],eax
1002bed2:	call   edi
1002bed4:	mov    BYTE PTR [ebp-0x4],0x7
1002bed8:	call   0x1002f6a0
1002bedd:	mov    eax,ds:0x10082a6c
1002bee2:	mov    ecx,0x10082a6c
1002bee7:	call   DWORD PTR [eax+0xc]
1002beea:	add    eax,0x10
1002beed:	mov    DWORD PTR [ebp-0x64],eax
1002bef0:	lea    eax,[ebp-0x5c]
1002bef3:	push   eax
1002bef4:	lea    eax,[ebp-0x64]
1002bef7:	push   eax
1002bef8:	lea    eax,[ebp-0x30]
1002befb:	push   eax
1002befc:	mov    BYTE PTR [ebp-0x4],0x8
1002bf00:	push   DWORD PTR [esi+0x4]
1002bf03:	lea    esi,[ebp-0x58]
1002bf06:	call   0x1002c0e2
1002bf0b:	add    esp,0x10
1002bf0e:	test   al,al
1002bf10:	je     0x1002c07d
1002bf16:	call   0x1002f6a0
1002bf1b:	mov    ebx,DWORD PTR [ebp-0x74]
1002bf1e:	call   0x1002bbe2
1002bf23:	cmp    DWORD PTR [ebp-0x18],0x10
1002bf27:	mov    eax,DWORD PTR [ebp-0x2c]
1002bf2a:	jae    0x1002bf2f
1002bf2c:	lea    eax,[ebp-0x2c]
1002bf2f:	push   eax
1002bf30:	call   0x10002068
1002bf35:	push   0x34
1002bf37:	call   0x10043196
1002bf3c:	pop    ecx
1002bf3d:	pop    ecx
1002bf3e:	mov    DWORD PTR [ebp-0x50],eax
1002bf41:	xor    ebx,ebx
1002bf43:	cmp    eax,ebx
1002bf45:	mov    BYTE PTR [ebp-0x4],0x9
1002bf49:	je     0x1002bf5f
1002bf4b:	lea    ecx,[ebp-0x64]
1002bf4e:	push   ecx
1002bf4f:	push   DWORD PTR [ebp-0x5c]
1002bf52:	push   DWORD PTR [ebp-0x58]
1002bf55:	push   eax
1002bf56:	call   0x1002b971
1002bf5b:	mov    edi,eax
1002bf5d:	jmp    0x1002bf61
1002bf5f:	xor    edi,edi
1002bf61:	mov    DWORD PTR [ebp-0x78],edi
1002bf64:	call   0x10002068
1002bf69:	mov    DWORD PTR [ebp-0x50],ebx
1002bf6c:	mov    DWORD PTR [ebp-0x60],ebx
1002bf6f:	mov    BYTE PTR [ebp-0x4],0xc
1002bf73:	mov    eax,DWORD PTR [edi+0xc]
1002bf76:	test   al,0x2
1002bf78:	je     0x1002bfa1
1002bf7a:	test   al,0x4
1002bf7c:	jne    0x1002bfa1
1002bf7e:	mov    eax,DWORD PTR [edi]
1002bf80:	push   edi
1002bf81:	call   DWORD PTR [eax+0x4]
1002bf84:	push   ebx
1002bf85:	push   0x4
1002bf87:	push   edi
1002bf88:	push   0x1002baa5
1002bf8d:	push   ebx
1002bf8e:	push   ebx
1002bf8f:	call   DWORD PTR ds:0x10067088
1002bf95:	push   0x2
1002bf97:	push   eax
1002bf98:	mov    DWORD PTR [ebp-0x50],eax
1002bf9b:	call   DWORD PTR ds:0x10067170
1002bfa1:	mov    eax,DWORD PTR [edi+0xc]
1002bfa4:	test   al,0x1
1002bfa6:	je     0x1002bfc6
1002bfa8:	test   al,0x8
1002bfaa:	jne    0x1002bfc6
1002bfac:	mov    eax,DWORD PTR [edi]
1002bfae:	push   edi
1002bfaf:	call   DWORD PTR [eax+0x4]
1002bfb2:	push   ebx
1002bfb3:	push   0x4
1002bfb5:	push   edi
1002bfb6:	push   0x1002bb48
1002bfbb:	push   ebx
1002bfbc:	push   ebx
1002bfbd:	call   DWORD PTR ds:0x10067088
1002bfc3:	mov    DWORD PTR [ebp-0x60],eax
1002bfc6:	mov    eax,DWORD PTR [ebp-0x50]
1002bfc9:	cmp    eax,ebx
1002bfcb:	jne    0x1002bfec
1002bfcd:	cmp    DWORD PTR [ebp-0x60],ebx
1002bfd0:	jne    0x1002bfec
1002bfd2:	mov    eax,DWORD PTR [ebp-0x74]
1002bfd5:	mov    eax,DWORD PTR [eax+0x4]
1002bfd8:	lea    esi,[eax+0x3c]
1002bfdb:	cmp    DWORD PTR [esi],edi
1002bfdd:	je     0x1002bfe4
1002bfdf:	call   0x10007961
1002bfe4:	mov    eax,DWORD PTR [edi]
1002bfe6:	push   edi
1002bfe7:	call   DWORD PTR [eax+0x8]
1002bfea:	jmp    0x1002c044
1002bfec:	mov    ecx,DWORD PTR [ebp-0x60]
1002bfef:	lea    esi,[edi+0x1c]
1002bff2:	push   eax
1002bff3:	mov    DWORD PTR [ebp-0x58],eax
1002bff6:	mov    DWORD PTR [ebp-0x5c],ecx
1002bff9:	mov    DWORD PTR [ebp-0x50],ebx
1002bffc:	call   0x100049bb
1002c001:	mov    eax,DWORD PTR [ebp-0x60]
1002c004:	lea    esi,[edi+0x2c]
1002c007:	push   eax
1002c008:	mov    DWORD PTR [ebp-0x60],ebx
1002c00b:	call   0x100049bb
1002c010:	mov    eax,DWORD PTR [ebp-0x74]
1002c013:	mov    eax,DWORD PTR [eax+0x4]
1002c016:	lea    esi,[eax+0x3c]
1002c019:	cmp    DWORD PTR [esi],edi
1002c01b:	je     0x1002c022
1002c01d:	call   0x10007961
1002c022:	mov    eax,DWORD PTR [edi]
1002c024:	push   edi
1002c025:	call   DWORD PTR [eax+0x8]
1002c028:	cmp    DWORD PTR [ebp-0x58],ebx
1002c02b:	je     0x1002c036
1002c02d:	push   DWORD PTR [ebp-0x58]
1002c030:	call   DWORD PTR ds:0x1006716c
1002c036:	cmp    DWORD PTR [ebp-0x5c],ebx
1002c039:	je     0x1002c044
1002c03b:	push   DWORD PTR [ebp-0x5c]
1002c03e:	call   DWORD PTR ds:0x1006716c
1002c044:	mov    eax,DWORD PTR [ebp-0x64]
1002c047:	add    eax,0xfffffff0
1002c04a:	call   0x10002069
1002c04f:	cmp    DWORD PTR [ebp-0x6c],ebx
1002c052:	je     0x1002c060
1002c054:	push   DWORD PTR [ebp-0x68]
1002c057:	push   DWORD PTR [ebp-0x6c]
1002c05a:	call   DWORD PTR ds:0x10067170
1002c060:	mov    BYTE PTR [ebp-0x4],bl
1002c063:	push   DWORD PTR [ebp-0x54]
1002c066:	call   0x1003a0d0
1002c06b:	push   DWORD PTR [ebp-0x54]
1002c06e:	call   0x10042fe2
1002c073:	pop    ecx
1002c074:	mov    bl,0x1
1002c076:	xor    edi,edi
1002c078:	jmp    0x1002be75
1002c07d:	call   0x1002f6a0
1002c082:	mov    eax,DWORD PTR [ebp-0x64]
1002c085:	add    eax,0xfffffff0
1002c088:	call   0x10002069
1002c08d:	test   ebx,ebx
1002c08f:	je     0x1002c097
1002c091:	push   DWORD PTR [ebp-0x68]
1002c094:	push   ebx
1002c095:	call   edi
1002c097:	xor    edi,edi
1002c099:	mov    BYTE PTR [ebp-0x4],0x0
1002c09d:	push   DWORD PTR [ebp-0x54]
1002c0a0:	call   0x1003a0d0
1002c0a5:	push   DWORD PTR [ebp-0x54]
1002c0a8:	call   0x10042fe2
1002c0ad:	pop    ecx
1002c0ae:	push   edi
1002c0af:	jmp    0x1002c0ce
1002c0b1:	call   0x1002f6a0
1002c0b6:	jmp    0x1002c099
1002c0b8:	mov    eax,0x1002c0cc
1002c0bd:	ret    
1002c0be:	push   0x4
1002c0c0:	call   0x10038b80
1002c0c5:	pop    ecx
1002c0c6:	mov    eax,0x1002c0cc
1002c0cb:	ret    
1002c0cc:	push   0x0
1002c0ce:	push   0x1
1002c0d0:	lea    ecx,[ebp-0x30]
1002c0d3:	call   0x100012f0
1002c0d8:	xor    al,al
1002c0da:	call   0x10059ef0
1002c0df:	ret    0x4
1002c0e2:	push   ebp
1002c0e3:	mov    ebp,esp
1002c0e5:	and    esp,0xfffffff8
1002c0e8:	push   ecx
1002c0e9:	push   edi
1002c0ea:	call   0x10022bf5
1002c0ef:	mov    ecx,eax
1002c0f1:	call   0x10023699
1002c0f6:	and    DWORD PTR [esi],0x0
1002c0f9:	mov    edi,eax
1002c0fb:	test   edi,edi
1002c0fd:	je     0x1002c131
1002c0ff:	push   DWORD PTR [ebp+0x14]
1002c102:	push   DWORD PTR [ebp+0x10]
1002c105:	push   DWORD PTR [ebp+0xc]
1002c108:	push   DWORD PTR [ebp+0x8]
1002c10b:	push   DWORD PTR [esi]
1002c10d:	push   ecx
1002c10e:	call   0x10022bf5
1002c113:	pop    ecx
1002c114:	push   eax
1002c115:	call   0x10023169
1002c11a:	test   al,al
1002c11c:	je     0x1002c12b
1002c11e:	push   DWORD PTR [ebp+0x10]
1002c121:	call   0x10023fed
1002c126:	test   al,al
1002c128:	pop    ecx
1002c129:	jne    0x1002c138
1002c12b:	inc    DWORD PTR [esi]
1002c12d:	cmp    DWORD PTR [esi],edi
1002c12f:	jne    0x1002c0ff
1002c131:	xor    al,al
1002c133:	pop    edi
1002c134:	mov    esp,ebp
1002c136:	pop    ebp
1002c137:	ret    
1002c138:	mov    al,0x1
1002c13a:	jmp    0x1002c133
1002c13c:	push   ebx
1002c13d:	mov    ebx,DWORD PTR [esp+0x8]
1002c141:	mov    eax,DWORD PTR [ebx]
1002c143:	cmp    BYTE PTR [eax+0x2c],0x0
1002c147:	push   esi
1002c148:	push   edi
1002c149:	je     0x1002c14f
1002c14b:	xor    al,al
1002c14d:	jmp    0x1002c179
1002c14f:	sub    esp,0x10
1002c152:	mov    BYTE PTR [ebx+0x10],0x1
1002c156:	mov    edi,esp
1002c158:	mov    esi,0x100706d8
1002c15d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c160:	push   eax
1002c161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c162:	call   0x10008ac4
1002c167:	test   eax,eax
1002c169:	je     0x1002c177
1002c16b:	mov    eax,DWORD PTR [eax+0xc]
1002c16e:	shr    eax,1
1002c170:	not    al
1002c172:	and    al,0x1
1002c174:	mov    BYTE PTR [ebx+0x10],al
1002c177:	mov    al,0x1
1002c179:	pop    edi
1002c17a:	pop    esi
1002c17b:	pop    ebx
1002c17c:	ret    0x4
1002c17f:	push   0x0
1002c181:	mov    eax,0x1005fc9e
1002c186:	call   0x10059df5
1002c18b:	mov    esi,DWORD PTR [ebp+0x8]
1002c18e:	and    DWORD PTR [ebp-0x4],0x0
1002c192:	mov    DWORD PTR [esi],0x100741a4
1002c198:	and    DWORD PTR [esi+0x4],0x0
1002c19c:	push   0x4
1002c19e:	mov    BYTE PTR [ebp-0x4],0x1
1002c1a2:	call   0x10043196
1002c1a7:	test   eax,eax
1002c1a9:	pop    ecx
1002c1aa:	je     0x1002c1b6
1002c1ac:	mov    DWORD PTR [eax],0x10072b40
1002c1b2:	mov    edi,eax
1002c1b4:	jmp    0x1002c1b8
1002c1b6:	xor    edi,edi
1002c1b8:	mov    ecx,DWORD PTR [esi+0x4]
1002c1bb:	cmp    edi,ecx
1002c1bd:	je     0x1002c1ca
1002c1bf:	test   ecx,ecx
1002c1c1:	je     0x1002c1ca
1002c1c3:	mov    eax,DWORD PTR [ecx]
1002c1c5:	push   0x1
1002c1c7:	call   DWORD PTR [eax+0x4]
1002c1ca:	mov    DWORD PTR [esi+0x4],edi
1002c1cd:	mov    eax,esi
1002c1cf:	call   0x10059ecd
1002c1d4:	ret    0x4
1002c1d7:	push   0x4
1002c1d9:	mov    eax,0x1005faae
1002c1de:	call   0x10059df5
1002c1e3:	mov    esi,ecx
1002c1e5:	mov    DWORD PTR [ebp-0x10],esi
1002c1e8:	and    DWORD PTR [ebp-0x4],0x0
1002c1ec:	mov    ecx,DWORD PTR [esi+0x4]
1002c1ef:	test   ecx,ecx
1002c1f1:	je     0x1002c1fa
1002c1f3:	mov    eax,DWORD PTR [ecx]
1002c1f5:	push   0x1
1002c1f7:	call   DWORD PTR [eax+0x4]
1002c1fa:	test   BYTE PTR [ebp+0x8],0x1
1002c1fe:	mov    DWORD PTR [esi],0x1007419c
1002c204:	je     0x1002c20d
1002c206:	push   esi
1002c207:	call   0x10042fe2
1002c20c:	pop    ecx
1002c20d:	mov    eax,esi
1002c20f:	call   0x10059ecd
1002c214:	ret    0x4
1002c217:	push   0x28
1002c219:	mov    eax,0x1006510f
1002c21e:	call   0x10059df5
1002c223:	mov    eax,DWORD PTR [ebx]
1002c225:	cmp    BYTE PTR [eax+0x2d],0x0
1002c229:	je     0x1002c2d5
1002c22f:	mov    eax,DWORD PTR [ebx+0xc]
1002c232:	mov    esi,DWORD PTR [eax+0xf0]
1002c238:	push   DWORD PTR [esi+0x4]
1002c23b:	call   DWORD PTR ds:0x100673a4
1002c241:	push   eax
1002c242:	lea    ecx,[ebp-0x30]
1002c245:	call   0x100011a7
1002c24a:	push   DWORD PTR [ebp+0x8]
1002c24d:	xor    edi,edi
1002c24f:	mov    DWORD PTR [ebp-0x4],edi
1002c252:	mov    eax,DWORD PTR [ebx]
1002c254:	mov    eax,DWORD PTR [eax+0x30]
1002c257:	push   eax
1002c258:	movzx  eax,WORD PTR [esi+0x2]
1002c25c:	push   eax
1002c25d:	call   DWORD PTR ds:0x100673a8
1002c263:	push   eax
1002c264:	lea    eax,[ebp-0x30]
1002c267:	push   eax
1002c268:	lea    eax,[ebp-0x10]
1002c26b:	push   eax
1002c26c:	call   0x1000cc7f
1002c271:	mov    ecx,DWORD PTR [eax]
1002c273:	mov    esi,ecx
1002c275:	add    esp,0x14
1002c278:	mov    DWORD PTR [eax],edi
1002c27a:	mov    DWORD PTR [ebp-0x14],esi
1002c27d:	lea    eax,[ebp-0x10]
1002c280:	mov    BYTE PTR [ebp-0x4],0x1
1002c284:	call   0x1000a2dc
1002c289:	push   edi
1002c28a:	push   0x1
1002c28c:	lea    ecx,[ebp-0x30]
1002c28f:	call   0x100012f0
1002c294:	cmp    esi,edi
1002c296:	je     0x1002c2c5
1002c298:	call   0x10002068
1002c29d:	mov    eax,DWORD PTR [esi+0x34]
1002c2a0:	mov    eax,DWORD PTR [eax+0x18]
1002c2a3:	mov    DWORD PTR [esi+0x38],eax
1002c2a6:	mov    eax,DWORD PTR [esi+0x34]
1002c2a9:	mov    DWORD PTR [esi+0x34],edi
1002c2ac:	mov    esi,DWORD PTR [eax]
1002c2ae:	mov    DWORD PTR [eax],edi
1002c2b0:	mov    eax,DWORD PTR [ebx+0x10]
1002c2b3:	cmp    esi,eax
1002c2b5:	je     0x1002c2c2
1002c2b7:	cmp    eax,edi
1002c2b9:	je     0x1002c2c2
1002c2bb:	mov    edi,eax
1002c2bd:	call   0x1000a38e
1002c2c2:	mov    DWORD PTR [ebx+0x10],esi
1002c2c5:	or     DWORD PTR [ebp-0x4],0xffffffff
1002c2c9:	lea    eax,[ebp-0x14]
1002c2cc:	mov    BYTE PTR [ebx+0x14],0x1
1002c2d0:	call   0x1000a2dc
1002c2d5:	call   0x10059ecd
1002c2da:	ret    
1002c2db:	push   ebp
1002c2dc:	mov    ebp,esp
1002c2de:	and    esp,0xfffffff8
1002c2e1:	push   0xffffffff
1002c2e3:	push   0x10065533
1002c2e8:	mov    eax,fs:0x0
1002c2ee:	push   eax
1002c2ef:	sub    esp,0x5d8
1002c2f5:	mov    eax,ds:0x100801ac
1002c2fa:	xor    eax,esp
1002c2fc:	mov    DWORD PTR [esp+0x5d0],eax
1002c303:	push   ebx
1002c304:	push   esi
1002c305:	push   edi
1002c306:	mov    eax,ds:0x100801ac
1002c30b:	xor    eax,esp
1002c30d:	push   eax
1002c30e:	lea    eax,[esp+0x5e8]
1002c315:	mov    fs:0x0,eax
1002c31b:	mov    ebx,DWORD PTR [ebp+0x8]
1002c31e:	push   DWORD PTR [ebx]
1002c320:	mov    DWORD PTR [esp+0x40],ecx
1002c324:	lea    ecx,[esp+0x154]
1002c32b:	call   0x10009035
1002c330:	xor    esi,esi
1002c332:	mov    DWORD PTR [esp+0x5f0],esi
1002c339:	mov    eax,DWORD PTR [ebx+0x8]
1002c33c:	cmp    DWORD PTR [eax+0xc],esi
1002c33f:	jne    0x1002c3cd
1002c345:	lea    eax,[esp+0x134]
1002c34c:	push   eax
1002c34d:	mov    eax,DWORD PTR [ebx+0x4]
1002c350:	mov    eax,DWORD PTR [eax+0x4]
1002c353:	call   0x10007ca8
1002c358:	cmp    DWORD PTR [esp+0x168],0x10
1002c360:	mov    ecx,DWORD PTR [esp+0x154]
1002c367:	jae    0x1002c370
1002c369:	lea    ecx,[esp+0x154]
1002c370:	cmp    DWORD PTR [eax+0x18],0x10
1002c374:	jb     0x1002c37b
1002c376:	mov    eax,DWORD PTR [eax+0x4]
1002c379:	jmp    0x1002c37e
1002c37b:	add    eax,0x4
1002c37e:	push   ecx
1002c37f:	push   eax
1002c380:	call   0x10002068
1002c385:	pop    ecx
1002c386:	pop    ecx
1002c387:	push   esi
1002c388:	push   0x1
1002c38a:	lea    ecx,[esp+0x13c]
1002c391:	call   0x100012f0
1002c396:	push   esi
1002c397:	push   0x1
1002c399:	lea    ecx,[esp+0x158]
1002c3a0:	call   0x100012f0
1002c3a5:	xor    al,al
1002c3a7:	mov    ecx,DWORD PTR [esp+0x5e8]
1002c3ae:	mov    DWORD PTR fs:0x0,ecx
1002c3b5:	pop    ecx
1002c3b6:	pop    edi
1002c3b7:	pop    esi
1002c3b8:	pop    ebx
1002c3b9:	mov    ecx,DWORD PTR [esp+0x5d0]
1002c3c0:	xor    ecx,esp
1002c3c2:	call   0x10043615
1002c3c7:	mov    esp,ebp
1002c3c9:	pop    ebp
1002c3ca:	ret    0x4
1002c3cd:	mov    eax,DWORD PTR [ebx]
1002c3cf:	cmp    BYTE PTR [eax+0x2c],0x0
1002c3d3:	jne    0x1002c396
1002c3d5:	sub    esp,0x10
1002c3d8:	mov    edi,esp
1002c3da:	mov    esi,0x100706d8
1002c3df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c3e2:	push   eax
1002c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c3e4:	call   0x10008ac4
1002c3e9:	mov    edi,eax
1002c3eb:	test   edi,edi
1002c3ed:	mov    DWORD PTR [esp+0x2c],edi
1002c3f1:	jne    0x1002c3f6
1002c3f3:	push   eax
1002c3f4:	jmp    0x1002c397
1002c3f6:	mov    eax,DWORD PTR [edi+0xc]
1002c3f9:	test   al,0x2
1002c3fb:	jne    0x1002c413
1002c3fd:	xor    bl,bl
1002c3ff:	push   0x0
1002c401:	push   0x1
1002c403:	lea    ecx,[esp+0x158]
1002c40a:	call   0x100012f0
1002c40f:	mov    al,bl
1002c411:	jmp    0x1002c3a7
1002c413:	test   al,0x4
1002c415:	jne    0x1002c4a7
1002c41b:	mov    eax,DWORD PTR [ebx+0x4]
1002c41e:	mov    edx,DWORD PTR [eax+0x10]
1002c421:	mov    ecx,DWORD PTR [ebx]
1002c423:	sub    edx,DWORD PTR [ecx+0x10]
1002c426:	mov    eax,DWORD PTR [eax+0x14]
1002c429:	sbb    eax,DWORD PTR [ecx+0x14]
1002c42c:	push   0x0
1002c42e:	push   0x2710
1002c433:	push   eax
1002c434:	push   edx
1002c435:	call   0x1005f840
1002c43a:	mov    esi,eax
1002c43c:	add    esi,esi
1002c43e:	mov    eax,0xbb8
1002c443:	cmp    esi,eax
1002c445:	jae    0x1002c449
1002c447:	mov    esi,eax
1002c449:	mov    eax,DWORD PTR [edi+0x1c]
1002c44c:	push   esi
1002c44d:	push   eax
1002c44e:	call   DWORD PTR ds:0x1006707c
1002c454:	test   eax,eax
1002c456:	je     0x1002c48d
1002c458:	cmp    DWORD PTR [esp+0x168],0x10
1002c460:	mov    eax,DWORD PTR [esp+0x154]
1002c467:	jae    0x1002c470
1002c469:	lea    eax,[esp+0x154]
1002c470:	push   eax
1002c471:	call   0x10002068
1002c476:	pop    ecx
1002c477:	push   0x5
1002c479:	call   0x10038b80
1002c47e:	pop    ecx
1002c47f:	push   esi
1002c480:	call   0x1002c217
1002c485:	pop    ecx
1002c486:	mov    bl,0x1
1002c488:	jmp    0x1002c3ff
1002c48d:	mov    al,BYTE PTR [edi+0x18]
1002c490:	test   al,al
1002c492:	jne    0x1002c4a7
1002c494:	cmp    DWORD PTR [esp+0x168],0x10
1002c49c:	jb     0x1002c469
1002c49e:	mov    eax,DWORD PTR [esp+0x154]
1002c4a5:	jmp    0x1002c470
1002c4a7:	push   0x10074078
1002c4ac:	push   0x10
1002c4ae:	mov    ecx,0x1006ef74
1002c4b3:	call   0x100042b4
1002c4b8:	pop    ecx
1002c4b9:	pop    ecx
1002c4ba:	push   eax
1002c4bb:	lea    ecx,[esp+0xc8]
1002c4c2:	call   0x100011a7
1002c4c7:	push   0x0
1002c4c9:	lea    eax,[esp+0xc8]
1002c4d0:	push   eax
1002c4d1:	lea    eax,[esp+0x120]
1002c4d8:	push   eax
1002c4d9:	mov    BYTE PTR [esp+0x5fc],0x1
1002c4e1:	mov    eax,DWORD PTR [ebx+0x4]
1002c4e4:	add    eax,0x20
1002c4e7:	call   0x10008803
1002c4ec:	mov    BYTE PTR [esp+0x5f0],0x2
1002c4f4:	cmp    DWORD PTR [eax+0x18],0x10
1002c4f8:	jb     0x1002c4ff
1002c4fa:	mov    eax,DWORD PTR [eax+0x4]
1002c4fd:	jmp    0x1002c502
1002c4ff:	add    eax,0x4
1002c502:	push   eax
1002c503:	lea    ecx,[esp+0x100]
1002c50a:	call   0x100011a7
1002c50f:	lea    eax,[esp+0xfc]
1002c516:	push   eax
1002c517:	lea    esi,[esp+0x1c4]
1002c51e:	mov    BYTE PTR [esp+0x5f4],0x3
1002c526:	call   0x1002f6d0
1002c52b:	pop    ecx
1002c52c:	xor    esi,esi
1002c52e:	push   esi
1002c52f:	push   0x1
1002c531:	lea    ecx,[esp+0x104]
1002c538:	call   0x100012f0
1002c53d:	push   esi
1002c53e:	push   0x1
1002c540:	lea    ecx,[esp+0x120]
1002c547:	call   0x100012f0
1002c54c:	push   esi
1002c54d:	push   0x1
1002c54f:	lea    ecx,[esp+0xcc]
1002c556:	mov    BYTE PTR [esp+0x5f8],0x7
1002c55e:	call   0x100012f0
1002c563:	mov    eax,DWORD PTR [ebx+0x8]
1002c566:	mov    eax,DWORD PTR [eax+0xc]
1002c569:	lea    ecx,[esp+0x1a4]
1002c570:	push   ecx
1002c571:	call   0x10007ca8
1002c576:	mov    BYTE PTR [esp+0x5f0],0x8
1002c57e:	mov    eax,DWORD PTR [edi+0x10]
1002c581:	push   esi
1002c582:	mov    DWORD PTR [esp+0x20],eax
1002c586:	lea    eax,[edi+0x14]
1002c589:	push   eax
1002c58a:	lea    eax,[esp+0x158]
1002c591:	push   eax
1002c592:	push   DWORD PTR [ebx+0x8]
1002c595:	push   DWORD PTR [ebx]
1002c597:	push   DWORD PTR [edi+0x8]
1002c59a:	call   0x10022bf5
1002c59f:	mov    ecx,DWORD PTR [esp+0x34]
1002c5a3:	push   eax
1002c5a4:	call   0x10023415
1002c5a9:	test   al,al
1002c5ab:	jne    0x1002c5e7
1002c5ad:	cmp    DWORD PTR [esp+0x168],0x10
1002c5b5:	mov    eax,DWORD PTR [esp+0x154]
1002c5bc:	jae    0x1002c5c5
1002c5be:	lea    eax,[esp+0x154]
1002c5c5:	push   eax
1002c5c6:	call   0x10002068
1002c5cb:	pop    ecx
1002c5cc:	push   0x7
1002c5ce:	call   0x10038b80
1002c5d3:	mov    DWORD PTR [esp],0x7d0
1002c5da:	call   0x1002c217
1002c5df:	pop    ecx
1002c5e0:	xor    esi,esi
1002c5e2:	jmp    0x1002c972
1002c5e7:	mov    eax,DWORD PTR [edi+0x10]
1002c5ea:	lea    edx,[esp+0x1c]
1002c5ee:	push   edx
1002c5ef:	mov    DWORD PTR [esp+0x20],esi
1002c5f3:	mov    ecx,DWORD PTR [eax]
1002c5f5:	push   eax
1002c5f6:	call   DWORD PTR [ecx+0x28]
1002c5f9:	push   esi
1002c5fa:	lea    ecx,[esp+0x170]
1002c601:	mov    DWORD PTR [esp+0x188],0xf
1002c60c:	call   0x1000141c
1002c611:	mov    BYTE PTR [esp+0x5f0],0x9
1002c619:	cmp    DWORD PTR [esp+0x1c],esi
1002c61d:	je     0x1002c7b2
1002c623:	mov    DWORD PTR [esp+0x18],0x1
1002c62b:	jmp    0x1002c631
1002c62d:	mov    edi,DWORD PTR [esp+0x2c]
1002c631:	lea    eax,[esp+0x4c]
1002c635:	push   eax
1002c636:	call   DWORD PTR ds:0x10067294
1002c63c:	mov    eax,DWORD PTR [esp+0x18]
1002c640:	mov    WORD PTR [esp+0x5c],0x16
1002c647:	mov    DWORD PTR [esp+0x64],eax
1002c64b:	mov    BYTE PTR [esp+0x5f0],0xb
1002c653:	mov    eax,DWORD PTR [edi+0x10]
1002c656:	mov    ecx,DWORD PTR [eax]
1002c658:	lea    edx,[esp+0x4c]
1002c65c:	push   edx
1002c65d:	sub    esp,0x10
1002c660:	mov    edi,esp
1002c662:	lea    esi,[esp+0x70]
1002c666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c669:	push   eax
1002c66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c66b:	call   DWORD PTR [ecx+0x20]
1002c66e:	test   eax,eax
1002c670:	lea    eax,[esp+0x5c]
1002c674:	mov    BYTE PTR [esp+0x5f0],0xa
1002c67c:	mov    esi,DWORD PTR ds:0x10067284
1002c682:	push   eax
1002c683:	setge  BYTE PTR [esp+0x1b]
1002c688:	call   esi
1002c68a:	cmp    BYTE PTR [esp+0x17],0x0
1002c68f:	je     0x1002c78e
1002c695:	lea    ecx,[esp+0x4c]
1002c699:	call   0x1002ac28
1002c69e:	xor    edi,edi
1002c6a0:	cmp    eax,edi
1002c6a2:	mov    DWORD PTR [esp+0x20],edi
1002c6a6:	je     0x1002c6b7
1002c6a8:	mov    ecx,DWORD PTR [eax]
1002c6aa:	lea    edx,[esp+0x20]
1002c6ae:	push   edx
1002c6af:	push   0x10073e60
1002c6b4:	push   eax
1002c6b5:	call   DWORD PTR [ecx]
1002c6b7:	mov    BYTE PTR [esp+0x5f0],0xc
1002c6bf:	mov    eax,DWORD PTR [esp+0x20]
1002c6c3:	lea    edx,[esp+0x24]
1002c6c7:	push   edx
1002c6c8:	mov    DWORD PTR [esp+0x28],edi
1002c6cc:	mov    ecx,DWORD PTR [eax]
1002c6ce:	push   eax
1002c6cf:	call   DWORD PTR [ecx+0x24]
1002c6d2:	mov    eax,DWORD PTR [esp+0x2c]
1002c6d6:	mov    eax,DWORD PTR [eax+0x10]
1002c6d9:	mov    ecx,DWORD PTR [eax]
1002c6db:	lea    edx,[esp+0x38]
1002c6df:	push   edx
1002c6e0:	push   DWORD PTR [esp+0x1c]
1002c6e4:	push   eax
1002c6e5:	call   DWORD PTR [ecx+0x24]
1002c6e8:	test   eax,eax
1002c6ea:	jl     0x1002c778
1002c6f0:	mov    ecx,DWORD PTR [esp+0x38]
1002c6f4:	push   edi
1002c6f5:	lea    edi,[esp+0x38]
1002c6f9:	call   0x1000dde7
1002c6fe:	mov    BYTE PTR [esp+0x5f0],0xd
1002c706:	cmp    DWORD PTR [esp+0x180],0x0
1002c70e:	jbe    0x1002c722
1002c710:	push   0x100740ac
1002c715:	lea    eax,[esp+0x170]
1002c71c:	push   eax
1002c71d:	call   0x10004126
1002c722:	lea    eax,[esp+0x34]
1002c726:	call   0x1000de47
1002c72b:	push   eax
1002c72c:	lea    eax,[esp+0x170]
1002c733:	push   eax
1002c734:	call   0x10004126
1002c739:	push   0x1006ee0c
1002c73e:	lea    eax,[esp+0x170]
1002c745:	push   eax
1002c746:	call   0x10004126
1002c74b:	push   0xa
1002c74d:	lea    eax,[esp+0x1e0]
1002c754:	push   eax
1002c755:	push   DWORD PTR [esp+0x2c]
1002c759:	call   0x10045cb6
1002c75e:	add    esp,0xc
1002c761:	push   eax
1002c762:	lea    eax,[esp+0x170]
1002c769:	push   eax
1002c76a:	call   0x10004126
1002c76f:	lea    edi,[esp+0x34]
1002c773:	call   0x100025b3
1002c778:	mov    BYTE PTR [esp+0x5f0],0xa
1002c780:	mov    eax,DWORD PTR [esp+0x20]
1002c784:	test   eax,eax
1002c786:	je     0x1002c78e
1002c788:	mov    ecx,DWORD PTR [eax]
1002c78a:	push   eax
1002c78b:	call   DWORD PTR [ecx+0x8]
1002c78e:	lea    eax,[esp+0x4c]
1002c792:	push   eax
1002c793:	mov    BYTE PTR [esp+0x5f4],0x9
1002c79b:	call   esi
1002c79d:	inc    DWORD PTR [esp+0x18]
1002c7a1:	mov    eax,DWORD PTR [esp+0x18]
1002c7a5:	dec    eax
1002c7a6:	cmp    eax,DWORD PTR [esp+0x1c]
1002c7aa:	jne    0x1002c62d
1002c7b0:	xor    esi,esi
1002c7b2:	mov    eax,DWORD PTR [ebx+0x8]
1002c7b5:	mov    eax,DWORD PTR [eax+0xc]
1002c7b8:	lea    ecx,[esp+0x188]
1002c7bf:	push   ecx
1002c7c0:	call   0x10007ca8
1002c7c5:	lea    ecx,[esp+0x188]
1002c7cc:	lea    eax,[esp+0x1a4]
1002c7d3:	mov    BYTE PTR [esp+0x5f0],0xe
1002c7db:	call   0x10006803
1002c7e0:	test   al,al
1002c7e2:	jne    0x1002c913
1002c7e8:	push   0x100740b0
1002c7ed:	push   0x11
1002c7ef:	mov    ecx,0x1006edc4
1002c7f4:	call   0x100042b4
1002c7f9:	pop    ecx
1002c7fa:	pop    ecx
1002c7fb:	push   eax
1002c7fc:	lea    ecx,[esp+0xac]
1002c803:	call   0x100011a7
1002c808:	lea    eax,[esp+0xa8]
1002c80f:	push   eax
1002c810:	mov    BYTE PTR [esp+0x5f4],0xf
1002c818:	mov    eax,DWORD PTR [ebx+0x8]
1002c81b:	add    eax,0x20
1002c81e:	push   eax
1002c81f:	call   0x100085a1
1002c824:	push   esi
1002c825:	push   0x1
1002c827:	lea    ecx,[esp+0xb0]
1002c82e:	mov    BYTE PTR [esp+0x5f8],0xe
1002c836:	call   0x100012f0
1002c83b:	push   0x100740e0
1002c840:	mov    edi,0x1006eae4
1002c845:	push   0xe
1002c847:	mov    ecx,edi
1002c849:	call   0x100042b4
1002c84e:	pop    ecx
1002c84f:	pop    ecx
1002c850:	push   eax
1002c851:	lea    ecx,[esp+0x74]
1002c855:	call   0x100011a7
1002c85a:	lea    eax,[esp+0x70]
1002c85e:	push   eax
1002c85f:	mov    BYTE PTR [esp+0x5f4],0x10
1002c867:	mov    eax,DWORD PTR [ebx+0x8]
1002c86a:	add    eax,0x20
1002c86d:	push   eax
1002c86e:	call   0x100085a1
1002c873:	push   esi
1002c874:	push   0x1
1002c876:	lea    ecx,[esp+0x78]
1002c87a:	mov    BYTE PTR [esp+0x5f8],0xe
1002c882:	call   0x100012f0
1002c887:	push   0xa
1002c889:	lea    eax,[esp+0x1e0]
1002c890:	push   eax
1002c891:	push   DWORD PTR [esp+0x1a4]
1002c898:	call   0x10045cb6
1002c89d:	add    esp,0xc
1002c8a0:	push   eax
1002c8a1:	lea    ecx,[esp+0xe4]
1002c8a8:	call   0x100011a7
1002c8ad:	push   0x10074114
1002c8b2:	push   0xe
1002c8b4:	mov    ecx,edi
1002c8b6:	mov    BYTE PTR [esp+0x5f8],0x11
1002c8be:	call   0x100042b4
1002c8c3:	pop    ecx
1002c8c4:	pop    ecx
1002c8c5:	push   eax
1002c8c6:	lea    ecx,[esp+0x90]
1002c8cd:	call   0x100011a7
1002c8d2:	mov    BYTE PTR [esp+0x5f0],0x12
1002c8da:	mov    edx,DWORD PTR [ebx+0x8]
1002c8dd:	push   esi
1002c8de:	lea    eax,[esp+0x90]
1002c8e5:	push   eax
1002c8e6:	add    edx,0x20
1002c8e9:	lea    ecx,[esp+0xe8]
1002c8f0:	call   0x10008298
1002c8f5:	push   esi
1002c8f6:	push   0x1
1002c8f8:	lea    ecx,[esp+0x94]
1002c8ff:	call   0x100012f0
1002c904:	push   esi
1002c905:	push   0x1
1002c907:	lea    ecx,[esp+0xe8]
1002c90e:	call   0x100012f0
1002c913:	cmp    DWORD PTR [esp+0x184],0x10
1002c91b:	mov    ecx,DWORD PTR [esp+0x170]
1002c922:	jae    0x1002c92b
1002c924:	lea    ecx,[esp+0x170]
1002c92b:	cmp    DWORD PTR [esp+0x168],0x10
1002c933:	mov    eax,DWORD PTR [esp+0x154]
1002c93a:	jae    0x1002c943
1002c93c:	lea    eax,[esp+0x154]
1002c943:	push   ecx
1002c944:	push   eax
1002c945:	call   0x10002068
1002c94a:	pop    ecx
1002c94b:	pop    ecx
1002c94c:	push   esi
1002c94d:	push   0x1
1002c94f:	lea    ecx,[esp+0x190]
1002c956:	call   0x100012f0
1002c95b:	push   esi
1002c95c:	push   0x1
1002c95e:	lea    ecx,[esp+0x174]
1002c965:	mov    BYTE PTR [esp+0x5f8],0x8
1002c96d:	call   0x100012f0
1002c972:	mov    ecx,DWORD PTR [ebx]
1002c974:	call   0x10008b05
1002c979:	mov    DWORD PTR [esp+0x28],eax
1002c97d:	mov    BYTE PTR [esp+0x5f0],0x13
1002c985:	push   DWORD PTR [ebx+0x8]
1002c988:	call   0x1000949b
1002c98d:	mov    DWORD PTR [esp+0x30],eax
1002c991:	mov    BYTE PTR [esp+0x5f0],0x14
1002c999:	lea    eax,[esp+0x28]
1002c99d:	mov    DWORD PTR [esp+0x40],eax
1002c9a1:	lea    eax,[esp+0x30]
1002c9a5:	mov    DWORD PTR [esp+0x44],eax
1002c9a9:	mov    eax,DWORD PTR [esp+0x3c]
1002c9ad:	mov    ecx,DWORD PTR [eax+0x4]
1002c9b0:	lea    edx,[esp+0x40]
1002c9b4:	mov    BYTE PTR [esp+0x48],0x0
1002c9b9:	mov    eax,DWORD PTR [ecx]
1002c9bb:	push   edx
1002c9bc:	call   DWORD PTR [eax]
1002c9be:	lea    eax,[esp+0x30]
1002c9c2:	mov    BYTE PTR [esp+0x5f0],0x13
1002c9ca:	call   0x1000a2dc
1002c9cf:	lea    ecx,[esp+0x28]
1002c9d3:	mov    BYTE PTR [esp+0x5f0],0x8
1002c9db:	call   0x1000a176
1002c9e0:	push   esi
1002c9e1:	push   0x1
1002c9e3:	lea    ecx,[esp+0x1ac]
1002c9ea:	call   0x100012f0
1002c9ef:	push   esi
1002c9f0:	push   0x1
1002c9f2:	lea    ecx,[esp+0x1c8]
1002c9f9:	call   0x100012f0
1002c9fe:	jmp    0x1002c486
1002ca03:	push   ebp
1002ca04:	sub    esp,0x400
1002ca0a:	lea    ebp,[esp-0x4]
1002ca0e:	mov    eax,ds:0x100801ac
1002ca13:	xor    eax,ebp
1002ca15:	mov    DWORD PTR [ebp+0x400],eax
1002ca1b:	push   0x44
1002ca1d:	mov    eax,0x10060f72
1002ca22:	call   0x10059df5
1002ca27:	xor    edi,edi
1002ca29:	mov    DWORD PTR [ebp-0x4],edi
1002ca2c:	mov    DWORD PTR [ebp-0x30],edi
1002ca2f:	mov    eax,DWORD PTR [ebx]
1002ca31:	lea    edx,[ebp-0x1c]
1002ca34:	mov    esi,ecx
1002ca36:	push   edx
1002ca37:	mov    DWORD PTR [ebp-0x1c],edi
1002ca3a:	mov    ecx,DWORD PTR [eax]
1002ca3c:	push   eax
1002ca3d:	mov    DWORD PTR [ebp-0x28],esi
1002ca40:	call   DWORD PTR [ecx+0x28]
1002ca43:	call   0x100040ef
1002ca48:	xor    esi,esi
1002ca4a:	mov    DWORD PTR [ebp-0x4],edi
1002ca4d:	inc    esi
1002ca4e:	cmp    DWORD PTR [ebp-0x1c],edi
1002ca51:	mov    DWORD PTR [ebp-0x30],esi
1002ca54:	je     0x1002cb86
1002ca5a:	mov    DWORD PTR [ebp-0x14],esi
1002ca5d:	jmp    0x1002ca62
1002ca5f:	xor    esi,esi
1002ca61:	inc    esi
1002ca62:	lea    eax,[ebp-0x40]
1002ca65:	push   eax
1002ca66:	call   DWORD PTR ds:0x10067294
1002ca6c:	mov    eax,DWORD PTR [ebp-0x14]
1002ca6f:	mov    DWORD PTR [ebp-0x4],esi
1002ca72:	mov    WORD PTR [ebp-0x50],0x16
1002ca78:	mov    DWORD PTR [ebp-0x48],eax
1002ca7b:	lea    edx,[ebp-0x40]
1002ca7e:	push   edx
1002ca7f:	mov    BYTE PTR [ebp-0x4],0x2
1002ca83:	mov    eax,DWORD PTR [ebx]
1002ca85:	mov    ecx,DWORD PTR [eax]
1002ca87:	sub    esp,0x10
1002ca8a:	mov    edi,esp
1002ca8c:	lea    esi,[ebp-0x50]
1002ca8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca92:	push   eax
1002ca93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002ca94:	call   DWORD PTR [ecx+0x20]
1002ca97:	test   eax,eax
1002ca99:	lea    eax,[ebp-0x50]
1002ca9c:	mov    BYTE PTR [ebp-0x4],0x1
1002caa0:	mov    esi,DWORD PTR ds:0x10067284
1002caa6:	push   eax
1002caa7:	setge  BYTE PTR [ebp-0xd]
1002caab:	call   esi
1002caad:	cmp    BYTE PTR [ebp-0xd],0x0
1002cab1:	je     0x1002cb6c
1002cab7:	lea    ecx,[ebp-0x40]
1002caba:	call   0x1002ac28
1002cabf:	xor    edi,edi
1002cac1:	cmp    eax,edi
1002cac3:	mov    DWORD PTR [ebp-0x18],edi
1002cac6:	je     0x1002cad6
1002cac8:	mov    ecx,DWORD PTR [eax]
1002caca:	lea    edx,[ebp-0x18]
1002cacd:	push   edx
1002cace:	push   0x10073e60
1002cad3:	push   eax
1002cad4:	call   DWORD PTR [ecx]
1002cad6:	mov    BYTE PTR [ebp-0x4],0x3
1002cada:	mov    eax,DWORD PTR [ebp-0x18]
1002cadd:	lea    edx,[ebp-0x24]
1002cae0:	push   edx
1002cae1:	mov    DWORD PTR [ebp-0x24],edi
1002cae4:	mov    ecx,DWORD PTR [eax]
1002cae6:	push   eax
1002cae7:	call   DWORD PTR [ecx+0x24]
1002caea:	mov    eax,DWORD PTR [ebx]
1002caec:	mov    ecx,DWORD PTR [eax]
1002caee:	lea    edx,[ebp-0x2c]
1002caf1:	push   edx
1002caf2:	push   DWORD PTR [ebp-0x14]
1002caf5:	push   eax
1002caf6:	call   DWORD PTR [ecx+0x24]
1002caf9:	test   eax,eax
1002cafb:	jl     0x1002cb5b
1002cafd:	mov    ecx,DWORD PTR [ebp-0x2c]
1002cb00:	push   edi
1002cb01:	lea    edi,[ebp-0x20]
1002cb04:	call   0x1000dde7
1002cb09:	mov    BYTE PTR [ebp-0x4],0x4
1002cb0d:	mov    edi,DWORD PTR [ebp-0x28]
1002cb10:	cmp    DWORD PTR [edi+0x14],0x0
1002cb14:	jbe    0x1002cb21
1002cb16:	push   0x100740ac
1002cb1b:	push   edi
1002cb1c:	call   0x10004126
1002cb21:	lea    eax,[ebp-0x20]
1002cb24:	call   0x1000de47
1002cb29:	push   eax
1002cb2a:	push   edi
1002cb2b:	call   0x10004126
1002cb30:	push   0x1006ee0c
1002cb35:	push   edi
1002cb36:	call   0x10004126
1002cb3b:	push   0xa
1002cb3d:	lea    eax,[ebp+0x0]
1002cb40:	push   eax
1002cb41:	push   DWORD PTR [ebp-0x24]
1002cb44:	call   0x10045cb6
1002cb49:	add    esp,0xc
1002cb4c:	push   eax
1002cb4d:	push   edi
1002cb4e:	call   0x10004126
1002cb53:	lea    edi,[ebp-0x20]
1002cb56:	call   0x100025b3
1002cb5b:	mov    BYTE PTR [ebp-0x4],0x1
1002cb5f:	mov    eax,DWORD PTR [ebp-0x18]
1002cb62:	test   eax,eax
1002cb64:	je     0x1002cb6c
1002cb66:	mov    ecx,DWORD PTR [eax]
1002cb68:	push   eax
1002cb69:	call   DWORD PTR [ecx+0x8]
1002cb6c:	lea    eax,[ebp-0x40]
1002cb6f:	push   eax
1002cb70:	mov    BYTE PTR [ebp-0x4],0x0
1002cb74:	call   esi
1002cb76:	inc    DWORD PTR [ebp-0x14]
1002cb79:	mov    eax,DWORD PTR [ebp-0x14]
1002cb7c:	dec    eax
1002cb7d:	cmp    eax,DWORD PTR [ebp-0x1c]
1002cb80:	jne    0x1002ca5f
1002cb86:	mov    eax,DWORD PTR [ebp-0x28]
1002cb89:	mov    ecx,DWORD PTR [ebp-0xc]
1002cb8c:	mov    DWORD PTR fs:0x0,ecx
1002cb93:	pop    ecx
1002cb94:	pop    edi
1002cb95:	pop    esi
1002cb96:	pop    ebx
1002cb97:	mov    ecx,DWORD PTR [ebp+0x400]
1002cb9d:	xor    ecx,ebp
1002cb9f:	call   0x10043615
1002cba4:	add    ebp,0x404
1002cbaa:	leave  
1002cbab:	ret    
1002cbac:	push   ebp
1002cbad:	sub    esp,0x60
1002cbb0:	lea    ebp,[esp-0x4]
1002cbb4:	mov    eax,ds:0x100801ac
1002cbb9:	xor    eax,ebp
1002cbbb:	mov    DWORD PTR [ebp+0x60],eax
1002cbbe:	push   0x54
1002cbc0:	mov    eax,0x100645fb
1002cbc5:	call   0x10059df5
1002cbca:	mov    eax,DWORD PTR [ebp+0x6c]
1002cbcd:	mov    ecx,DWORD PTR [eax]
1002cbcf:	mov    DWORD PTR [ebp+0x8],ecx
1002cbd2:	and    DWORD PTR [ebp-0x4],0x0
1002cbd6:	mov    ebx,DWORD PTR [eax+0x4]
1002cbd9:	mov    DWORD PTR [ebp+0x4],ebx
1002cbdc:	push   ecx
1002cbdd:	lea    ecx,[ebp+0x44]
1002cbe0:	mov    BYTE PTR [ebp-0x4],0x1
1002cbe4:	call   0x10009035
1002cbe9:	mov    BYTE PTR [ebp-0x4],0x2
1002cbed:	sub    esp,0x10
1002cbf0:	mov    edi,esp
1002cbf2:	mov    esi,0x100706d8
1002cbf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cbfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cbfb:	mov    esi,DWORD PTR [ebp+0x8]
1002cbfe:	push   esi
1002cbff:	call   0x10008a72
1002cc04:	mov    edi,eax
1002cc06:	xor    ecx,ecx
1002cc08:	cmp    edi,ecx
1002cc0a:	jne    0x1002cc12
1002cc0c:	push   ecx
1002cc0d:	jmp    0x1002cd8e
1002cc12:	mov    eax,DWORD PTR [edi+0xc]
1002cc15:	test   al,0x1
1002cc17:	je     0x1002cc0c
1002cc19:	test   al,0x8
1002cc1b:	jne    0x1002cc7c
1002cc1d:	mov    eax,DWORD PTR [ebx+0x10]
1002cc20:	sub    eax,DWORD PTR [esi+0x10]
1002cc23:	mov    edx,DWORD PTR [ebx+0x14]
1002cc26:	sbb    edx,DWORD PTR [esi+0x14]
1002cc29:	push   ecx
1002cc2a:	push   0x2710
1002cc2f:	push   edx
1002cc30:	push   eax
1002cc31:	call   0x1005f840
1002cc36:	add    eax,eax
1002cc38:	mov    ecx,0x4e20
1002cc3d:	cmp    eax,ecx
1002cc3f:	jae    0x1002cc43
1002cc41:	mov    eax,ecx
1002cc43:	mov    ecx,DWORD PTR [edi+0x2c]
1002cc46:	push   eax
1002cc47:	push   ecx
1002cc48:	call   DWORD PTR ds:0x1006707c
1002cc4e:	test   eax,eax
1002cc50:	je     0x1002cc72
1002cc52:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cc56:	mov    eax,DWORD PTR [ebp+0x48]
1002cc59:	jae    0x1002cc5e
1002cc5b:	lea    eax,[ebp+0x48]
1002cc5e:	push   eax
1002cc5f:	call   0x10002068
1002cc64:	push   0x5
1002cc66:	call   0x10038b80
1002cc6b:	pop    ecx
1002cc6c:	pop    ecx
1002cc6d:	jmp    0x1002cd8c
1002cc72:	mov    al,BYTE PTR [edi+0x28]
1002cc75:	test   al,al
1002cc77:	je     0x1002cc52
1002cc79:	mov    ebx,DWORD PTR [ebp+0x4]
1002cc7c:	push   0x1007413c
1002cc81:	push   0x10
1002cc83:	mov    ecx,0x1006ef74
1002cc88:	call   0x100042b4
1002cc8d:	pop    ecx
1002cc8e:	pop    ecx
1002cc8f:	push   eax
1002cc90:	lea    ecx,[ebp-0x44]
1002cc93:	call   0x100011a7
1002cc98:	push   0x0
1002cc9a:	lea    eax,[ebp-0x44]
1002cc9d:	push   eax
1002cc9e:	lea    eax,[ebp-0x60]
1002cca1:	push   eax
1002cca2:	lea    eax,[ebx+0x20]
1002cca5:	mov    BYTE PTR [ebp-0x4],0x3
1002cca9:	call   0x10008803
1002ccae:	mov    BYTE PTR [ebp-0x4],0x4
1002ccb2:	cmp    DWORD PTR [eax+0x18],0x10
1002ccb6:	jb     0x1002ccbd
1002ccb8:	mov    eax,DWORD PTR [eax+0x4]
1002ccbb:	jmp    0x1002ccc0
1002ccbd:	add    eax,0x4
1002ccc0:	push   eax
1002ccc1:	lea    ecx,[ebp-0x28]
1002ccc4:	call   0x100011a7
1002ccc9:	lea    eax,[ebp-0x28]
1002cccc:	push   eax
1002cccd:	lea    esi,[ebp+0xc]
1002ccd0:	mov    BYTE PTR [ebp-0x4],0x5
1002ccd4:	call   0x1002f6d0
1002ccd9:	pop    ecx
1002ccda:	xor    esi,esi
1002ccdc:	push   esi
1002ccdd:	push   0x1
1002ccdf:	lea    ecx,[ebp-0x28]
1002cce2:	call   0x100012f0
1002cce7:	push   esi
1002cce8:	push   0x1
1002ccea:	lea    ecx,[ebp-0x60]
1002cced:	call   0x100012f0
1002ccf2:	push   esi
1002ccf3:	push   0x1
1002ccf5:	lea    ecx,[ebp-0x44]
1002ccf8:	mov    BYTE PTR [ebp-0x4],0x9
1002ccfc:	call   0x100012f0
1002cd01:	lea    esi,[edi+0x20]
1002cd04:	mov    eax,DWORD PTR [esi]
1002cd06:	push   0x1
1002cd08:	mov    DWORD PTR [ebp+0x0],eax
1002cd0b:	lea    eax,[edi+0x24]
1002cd0e:	push   eax
1002cd0f:	lea    eax,[ebp+0x44]
1002cd12:	push   eax
1002cd13:	push   ebx
1002cd14:	push   DWORD PTR [ebp+0x8]
1002cd17:	push   DWORD PTR [edi+0x8]
1002cd1a:	call   0x10022bf5
1002cd1f:	mov    ecx,DWORD PTR [ebp+0x0]
1002cd22:	push   eax
1002cd23:	call   0x10023415
1002cd28:	test   al,al
1002cd2a:	jne    0x1002cd49
1002cd2c:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cd30:	mov    eax,DWORD PTR [ebp+0x48]
1002cd33:	jae    0x1002cd38
1002cd35:	lea    eax,[ebp+0x48]
1002cd38:	push   eax
1002cd39:	call   0x10002068
1002cd3e:	push   0x7
1002cd40:	call   0x10038b80
1002cd45:	pop    ecx
1002cd46:	pop    ecx
1002cd47:	jmp    0x1002cd80
1002cd49:	mov    ebx,esi
1002cd4b:	lea    ecx,[ebp+0x28]
1002cd4e:	call   0x1002ca03
1002cd53:	cmp    DWORD PTR [ebp+0x40],0x10
1002cd57:	mov    ecx,DWORD PTR [ebp+0x2c]
1002cd5a:	jae    0x1002cd5f
1002cd5c:	lea    ecx,[ebp+0x2c]
1002cd5f:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cd63:	mov    eax,DWORD PTR [ebp+0x48]
1002cd66:	jae    0x1002cd6b
1002cd68:	lea    eax,[ebp+0x48]
1002cd6b:	push   ecx
1002cd6c:	push   eax
1002cd6d:	call   0x10002068
1002cd72:	pop    ecx
1002cd73:	pop    ecx
1002cd74:	push   0x0
1002cd76:	push   0x1
1002cd78:	lea    ecx,[ebp+0x28]
1002cd7b:	call   0x100012f0
1002cd80:	push   0x0
1002cd82:	push   0x1
1002cd84:	lea    ecx,[ebp+0xc]
1002cd87:	call   0x100012f0
1002cd8c:	push   0x0
1002cd8e:	push   0x1
1002cd90:	lea    ecx,[ebp+0x44]
1002cd93:	call   0x100012f0
1002cd98:	lea    eax,[ebp+0x4]
1002cd9b:	mov    BYTE PTR [ebp-0x4],0x0
1002cd9f:	call   0x1000a2dc
1002cda4:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cda8:	lea    ecx,[ebp+0x8]
1002cdab:	call   0x1000a176
1002cdb0:	xor    eax,eax
1002cdb2:	mov    ecx,DWORD PTR [ebp-0xc]
1002cdb5:	mov    DWORD PTR fs:0x0,ecx
1002cdbc:	pop    ecx
1002cdbd:	pop    edi
1002cdbe:	pop    esi
1002cdbf:	pop    ebx
1002cdc0:	mov    ecx,DWORD PTR [ebp+0x60]
1002cdc3:	xor    ecx,ebp
1002cdc5:	call   0x10043615
1002cdca:	add    ebp,0x64
1002cdcd:	leave  
1002cdce:	ret    0x4
1002cdd1:	push   ebx
1002cdd2:	push   ebp
1002cdd3:	mov    ebp,DWORD PTR [esp+0xc]
1002cdd7:	mov    eax,DWORD PTR [ebp+0x0]
1002cdda:	mov    eax,DWORD PTR [eax]
1002cddc:	push   esi
1002cddd:	push   edi
1002cdde:	sub    esp,0x10
1002cde1:	mov    edi,esp
1002cde3:	mov    esi,0x100706d8
1002cde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdeb:	push   eax
1002cdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cded:	call   0x10008a72
1002cdf2:	test   eax,eax
1002cdf4:	jne    0x1002cdfa
1002cdf6:	xor    al,al
1002cdf8:	jmp    0x1002ce33
1002cdfa:	push   0x8
1002cdfc:	call   0x10043196
1002ce01:	pop    ecx
1002ce02:	mov    ecx,DWORD PTR [ebp+0x0]
1002ce05:	mov    edx,DWORD PTR [ecx]
1002ce07:	xor    ebx,ebx
1002ce09:	push   ebx
1002ce0a:	push   ebx
1002ce0b:	mov    DWORD PTR [ecx],ebx
1002ce0d:	push   eax
1002ce0e:	mov    DWORD PTR [eax],edx
1002ce10:	mov    ecx,DWORD PTR [ebp+0x4]
1002ce13:	mov    edx,DWORD PTR [ecx]
1002ce15:	push   0x1002cbac
1002ce1a:	push   ebx
1002ce1b:	mov    DWORD PTR [ecx],ebx
1002ce1d:	push   ebx
1002ce1e:	mov    DWORD PTR [eax+0x4],edx
1002ce21:	call   DWORD PTR ds:0x10067088
1002ce27:	push   ebx
1002ce28:	mov    BYTE PTR [ebp+0x8],bl
1002ce2b:	call   0x10042fe2
1002ce30:	pop    ecx
1002ce31:	mov    al,0x1
1002ce33:	pop    edi
1002ce34:	pop    esi
1002ce35:	pop    ebp
1002ce36:	pop    ebx
1002ce37:	ret    0x4
1002ce3a:	mov    ecx,DWORD PTR [eax]
1002ce3c:	test   ecx,ecx
1002ce3e:	je     0x1002ce47
1002ce40:	mov    eax,DWORD PTR [ecx]
1002ce42:	push   0x1
1002ce44:	call   DWORD PTR [eax+0x4]
1002ce47:	ret    
1002ce48:	push   edi
1002ce49:	mov    edi,DWORD PTR [esp+0x14]
1002ce4d:	mov    ecx,0x100819f8
1002ce52:	call   0x10010945
1002ce57:	pop    edi
1002ce58:	ret    0x10
1002ce5b:	push   DWORD PTR [esp+0x18]
1002ce5f:	mov    eax,0x100819f8
1002ce64:	push   DWORD PTR [esp+0x14]
1002ce68:	push   DWORD PTR [esp+0x14]
1002ce6c:	call   0x10010973
1002ce71:	ret    0x18
1002ce74:	push   ebp
1002ce75:	mov    ebp,esp
1002ce77:	push   DWORD PTR [ebp+0x28]
1002ce7a:	mov    eax,0x100819f8
1002ce7f:	push   DWORD PTR [ebp+0x24]
1002ce82:	push   DWORD PTR [ebp+0x20]
1002ce85:	push   DWORD PTR [ebp+0x1c]
1002ce88:	push   DWORD PTR [ebp+0x18]
1002ce8b:	push   DWORD PTR [ebp+0xc]
1002ce8e:	push   DWORD PTR [ebp+0x8]
1002ce91:	call   0x10010a16
1002ce96:	pop    ebp
1002ce97:	ret    0x24
1002ce9a:	push   edi
1002ce9b:	mov    edi,DWORD PTR [esp+0x14]
1002ce9f:	mov    ecx,0x10081a14
1002cea4:	call   0x10010945
1002cea9:	pop    edi
1002ceaa:	ret    0x10
1002cead:	push   DWORD PTR [esp+0x18]
1002ceb1:	mov    eax,0x10081a14
1002ceb6:	push   DWORD PTR [esp+0x14]
1002ceba:	push   DWORD PTR [esp+0x14]
1002cebe:	call   0x10010973
1002cec3:	ret    0x18
1002cec6:	push   ebp
1002cec7:	mov    ebp,esp
1002cec9:	push   DWORD PTR [ebp+0x28]
1002cecc:	mov    eax,0x10081a14
1002ced1:	push   DWORD PTR [ebp+0x24]
1002ced4:	push   DWORD PTR [ebp+0x20]
1002ced7:	push   DWORD PTR [ebp+0x1c]
1002ceda:	push   DWORD PTR [ebp+0x18]
1002cedd:	push   DWORD PTR [ebp+0xc]
1002cee0:	push   DWORD PTR [ebp+0x8]
1002cee3:	call   0x10010a16
1002cee8:	pop    ebp
1002cee9:	ret    0x24
1002ceec:	mov    edx,DWORD PTR [esp+0x8]
1002cef0:	test   edx,edx
1002cef2:	jne    0x1002cefb
1002cef4:	mov    eax,0x80004003
1002cef9:	jmp    0x1002cf16
1002cefb:	mov    eax,DWORD PTR [esp+0x4]
1002ceff:	mov    ecx,DWORD PTR [eax+0x8]
1002cf02:	test   ecx,ecx
1002cf04:	jne    0x1002cf0a
1002cf06:	xor    eax,eax
1002cf08:	jmp    0x1002cf12
1002cf0a:	mov    eax,DWORD PTR [eax+0xc]
1002cf0d:	sub    eax,ecx
1002cf0f:	sar    eax,0x4
1002cf12:	mov    DWORD PTR [edx],eax
1002cf14:	xor    eax,eax
1002cf16:	ret    0x8
1002cf19:	push   ebp
1002cf1a:	mov    ebp,esp
1002cf1c:	and    esp,0xfffffff8
1002cf1f:	sub    esp,0x14
1002cf22:	cmp    DWORD PTR [ebp+0x10],0x0
1002cf26:	push   ebx
1002cf27:	push   esi
1002cf28:	push   edi
1002cf29:	jne    0x1002cf35
1002cf2b:	mov    eax,0x80004003
1002cf30:	jmp    0x1002cff5
1002cf35:	cmp    DWORD PTR [ebp+0xc],0x1
1002cf39:	jge    0x1002cf45
1002cf3b:	mov    eax,0x80070057
1002cf40:	jmp    0x1002cff5
1002cf45:	mov    ebx,DWORD PTR [ebp+0x8]
1002cf48:	mov    esi,DWORD PTR [ebx+0x8]
1002cf4b:	dec    DWORD PTR [ebp+0xc]
1002cf4e:	add    ebx,0x4
1002cf51:	cmp    esi,DWORD PTR [ebx+0x8]
1002cf54:	mov    DWORD PTR [esp+0xc],0x80004005
1002cf5c:	jbe    0x1002cf63
1002cf5e:	call   0x10043605
1002cf63:	mov    edi,ebx
1002cf65:	mov    DWORD PTR [esp+0x10],edi
1002cf69:	mov    DWORD PTR [esp+0x14],esi
1002cf6d:	mov    esi,DWORD PTR [ebx+0x8]
1002cf70:	cmp    DWORD PTR [ebx+0x4],esi
1002cf73:	jbe    0x1002cf7a
1002cf75:	call   0x10043605
1002cf7a:	test   edi,edi
1002cf7c:	je     0x1002cf82
1002cf7e:	cmp    edi,ebx
1002cf80:	je     0x1002cf87
1002cf82:	call   0x10043605
1002cf87:	cmp    DWORD PTR [esp+0x14],esi
1002cf8b:	je     0x1002cfa9
1002cf8d:	cmp    DWORD PTR [ebp+0xc],0x0
1002cf91:	jle    0x1002cfa9
1002cf93:	lea    edi,[esp+0x18]
1002cf97:	lea    esi,[esp+0x10]
1002cf9b:	call   0x1002d9de
1002cfa0:	dec    DWORD PTR [ebp+0xc]
1002cfa3:	mov    edi,DWORD PTR [esp+0x10]
1002cfa7:	jmp    0x1002cf6d
1002cfa9:	mov    esi,DWORD PTR [ebx+0x8]
1002cfac:	cmp    DWORD PTR [ebx+0x4],esi
1002cfaf:	jbe    0x1002cfb6
1002cfb1:	call   0x10043605
1002cfb6:	test   edi,edi
1002cfb8:	je     0x1002cfbe
1002cfba:	cmp    edi,ebx
1002cfbc:	je     0x1002cfc3
1002cfbe:	call   0x10043605
1002cfc3:	mov    ebx,DWORD PTR [esp+0x14]
1002cfc7:	cmp    ebx,esi
1002cfc9:	je     0x1002cff1
1002cfcb:	test   edi,edi
1002cfcd:	jne    0x1002cfd4
1002cfcf:	call   0x10043605
1002cfd4:	cmp    ebx,DWORD PTR [edi+0x8]
1002cfd7:	jb     0x1002cfde
1002cfd9:	call   0x10043605
1002cfde:	mov    eax,DWORD PTR [ebp+0x10]
1002cfe1:	and    WORD PTR [eax],0x0
1002cfe5:	push   ebx
1002cfe6:	push   eax
1002cfe7:	call   DWORD PTR ds:0x10067280
1002cfed:	mov    DWORD PTR [esp+0xc],eax
1002cff1:	mov    eax,DWORD PTR [esp+0xc]
1002cff5:	pop    edi
1002cff6:	pop    esi
1002cff7:	pop    ebx
1002cff8:	mov    esp,ebp
1002cffa:	pop    ebp
1002cffb:	ret    0xc
1002cffe:	push   ebp
1002cfff:	mov    ebp,esp
1002d001:	push   edi
1002d002:	mov    edi,DWORD PTR [ebp+0xc]
1002d005:	test   edi,edi
1002d007:	jne    0x1002d010
1002d009:	mov    eax,0x80004003
1002d00e:	jmp    0x1002d05b
1002d010:	and    DWORD PTR [edi],0x0
1002d013:	push   ebx
1002d014:	push   esi
1002d015:	lea    eax,[ebp+0xc]
1002d018:	push   eax
1002d019:	call   0x1002e934
1002d01e:	mov    ebx,DWORD PTR [ebp+0xc]
1002d021:	mov    esi,eax
1002d023:	test   esi,esi
1002d025:	jl     0x1002d04a
1002d027:	mov    eax,DWORD PTR [ebp+0x8]
1002d02a:	lea    ecx,[eax+0x4]
1002d02d:	push   ecx
1002d02e:	call   0x1002da6a
1002d033:	mov    esi,eax
1002d035:	test   esi,esi
1002d037:	jne    0x1002d04a
1002d039:	mov    eax,DWORD PTR [ebx]
1002d03b:	push   edi
1002d03c:	push   0x1006eecc
1002d041:	push   ebx
1002d042:	call   DWORD PTR [eax]
1002d044:	mov    esi,eax
1002d046:	test   esi,esi
1002d048:	je     0x1002d057
1002d04a:	test   ebx,ebx
1002d04c:	je     0x1002d057
1002d04e:	mov    eax,DWORD PTR [ebx]
1002d050:	push   0x1
1002d052:	mov    ecx,ebx
1002d054:	call   DWORD PTR [eax+0x1c]
1002d057:	mov    eax,esi
1002d059:	pop    esi
1002d05a:	pop    ebx
1002d05b:	pop    edi
1002d05c:	pop    ebp
1002d05d:	ret    0x8
1002d060:	mov    eax,DWORD PTR [esi+0x4]
1002d063:	test   eax,eax
1002d065:	je     0x1002d078
1002d067:	push   DWORD PTR [esi+0x8]
1002d06a:	call   0x1002dc1c
1002d06f:	push   DWORD PTR [esi+0x4]
1002d072:	call   0x10042fe2
1002d077:	pop    ecx
1002d078:	and    DWORD PTR [esi+0x4],0x0
1002d07c:	and    DWORD PTR [esi+0x8],0x0
1002d080:	and    DWORD PTR [esi+0xc],0x0
1002d084:	ret    
1002d085:	push   ebp
1002d086:	mov    ebp,esp
1002d088:	and    esp,0xfffffff8
1002d08b:	mov    edx,DWORD PTR [esi+0x4]
1002d08e:	sub    esp,0xc
1002d091:	test   edx,edx
1002d093:	push   edi
1002d094:	jne    0x1002d09a
1002d096:	xor    ecx,ecx
1002d098:	jmp    0x1002d0a2
1002d09a:	mov    ecx,DWORD PTR [esi+0x8]
1002d09d:	sub    ecx,edx
1002d09f:	sar    ecx,0x4
1002d0a2:	test   edx,edx
1002d0a4:	je     0x1002d0c4
1002d0a6:	mov    eax,DWORD PTR [esi+0xc]
1002d0a9:	sub    eax,edx
1002d0ab:	sar    eax,0x4
1002d0ae:	cmp    ecx,eax
1002d0b0:	jae    0x1002d0c4
1002d0b2:	push   DWORD PTR [ebp+0x8]
1002d0b5:	push   0x1
1002d0b7:	push   DWORD PTR [esi+0x8]
1002d0ba:	call   0x1002d79a
1002d0bf:	mov    DWORD PTR [esi+0x8],eax
1002d0c2:	jmp    0x1002d0e1
1002d0c4:	mov    edi,DWORD PTR [esi+0x8]
1002d0c7:	cmp    edx,edi
1002d0c9:	jbe    0x1002d0d0
1002d0cb:	call   0x10043605
1002d0d0:	push   edi
1002d0d1:	push   esi
1002d0d2:	push   DWORD PTR [ebp+0x8]
1002d0d5:	lea    eax,[esp+0x14]
1002d0d9:	push   eax
1002d0da:	mov    eax,esi
1002d0dc:	call   0x1002d71a
1002d0e1:	pop    edi
1002d0e2:	mov    esp,ebp
1002d0e4:	pop    ebp
1002d0e5:	ret    0x4
1002d0e8:	push   edi
1002d0e9:	mov    edi,DWORD PTR [esp+0x14]
1002d0ed:	mov    ecx,0x10081a30
1002d0f2:	call   0x10010945
1002d0f7:	pop    edi
1002d0f8:	ret    0x10
1002d0fb:	push   DWORD PTR [esp+0x18]
1002d0ff:	mov    eax,0x10081a30
1002d104:	push   DWORD PTR [esp+0x14]
1002d108:	push   DWORD PTR [esp+0x14]
1002d10c:	call   0x10010973
1002d111:	ret    0x18
1002d114:	push   ebp
1002d115:	mov    ebp,esp
1002d117:	push   DWORD PTR [ebp+0x28]
1002d11a:	mov    eax,0x10081a30
1002d11f:	push   DWORD PTR [ebp+0x24]
1002d122:	push   DWORD PTR [ebp+0x20]
1002d125:	push   DWORD PTR [ebp+0x1c]
1002d128:	push   DWORD PTR [ebp+0x18]
1002d12b:	push   DWORD PTR [ebp+0xc]
1002d12e:	push   DWORD PTR [ebp+0x8]
1002d131:	call   0x10010a16
1002d136:	pop    ebp
1002d137:	ret    0x24
1002d13a:	push   ebp
1002d13b:	mov    ebp,esp
1002d13d:	and    esp,0xfffffff8
1002d140:	sub    esp,0xc
1002d143:	and    DWORD PTR [esp+0x4],0x0
1002d148:	push   ebx
1002d149:	push   esi
1002d14a:	push   edi
1002d14b:	lea    eax,[esp+0x10]
1002d14f:	push   eax
1002d150:	call   0x1002e9ae
1002d155:	test   eax,eax
1002d157:	jl     0x1002d192
1002d159:	mov    esi,DWORD PTR [ebp+0x8]
1002d15c:	mov    edi,DWORD PTR [esp+0x10]
1002d160:	add    esi,0x4
1002d163:	lea    ebx,[edi+0x8]
1002d166:	cmp    ebx,esi
1002d168:	je     0x1002d186
1002d16a:	mov    eax,DWORD PTR [ebx+0x4]
1002d16d:	mov    ecx,DWORD PTR [eax]
1002d16f:	push   eax
1002d170:	push   ebx
1002d171:	push   ecx
1002d172:	push   ebx
1002d173:	lea    eax,[esp+0x20]
1002d177:	push   eax
1002d178:	call   0x1002df5b
1002d17d:	mov    eax,esi
1002d17f:	mov    ecx,ebx
1002d181:	call   0x1002ecd0
1002d186:	push   ebx
1002d187:	push   edi
1002d188:	mov    edi,DWORD PTR [ebp+0xc]
1002d18b:	call   0x1002ea2a
1002d190:	pop    ecx
1002d191:	pop    ecx
1002d192:	pop    edi
1002d193:	pop    esi
1002d194:	pop    ebx
1002d195:	mov    esp,ebp
1002d197:	pop    ebp
1002d198:	ret    0x8
1002d19b:	mov    eax,DWORD PTR [esp+0x8]
1002d19f:	test   eax,eax
1002d1a1:	jne    0x1002d1aa
1002d1a3:	mov    eax,0x80004003
1002d1a8:	jmp    0x1002d1b5
1002d1aa:	mov    ecx,DWORD PTR [esp+0x4]
1002d1ae:	mov    ecx,DWORD PTR [ecx+0xc]
1002d1b1:	mov    DWORD PTR [eax],ecx
1002d1b3:	xor    eax,eax
1002d1b5:	ret    0x8
1002d1b8:	push   ebp
1002d1b9:	mov    ebp,esp
1002d1bb:	and    esp,0xfffffff8
1002d1be:	sub    esp,0x14
1002d1c1:	cmp    DWORD PTR [ebp+0x10],0x0
1002d1c5:	push   ebx
1002d1c6:	push   esi
1002d1c7:	push   edi
1002d1c8:	jne    0x1002d1d4
1002d1ca:	mov    eax,0x80004003
1002d1cf:	jmp    0x1002d269
1002d1d4:	cmp    DWORD PTR [ebp+0xc],0x1
1002d1d8:	jge    0x1002d1e4
1002d1da:	mov    eax,0x80070057
1002d1df:	jmp    0x1002d269
1002d1e4:	mov    ebx,DWORD PTR [ebp+0x8]
1002d1e7:	dec    DWORD PTR [ebp+0xc]
1002d1ea:	mov    eax,DWORD PTR [ebx+0x8]
1002d1ed:	mov    eax,DWORD PTR [eax]
1002d1ef:	add    ebx,0x4
1002d1f2:	mov    DWORD PTR [esp+0xc],0x80004005
1002d1fa:	mov    DWORD PTR [esp+0x10],ebx
1002d1fe:	mov    DWORD PTR [esp+0x14],eax
1002d202:	mov    DWORD PTR [esp+0x18],ebx
1002d206:	mov    eax,DWORD PTR [ebx+0x4]
1002d209:	lea    edi,[esp+0x18]
1002d20d:	lea    esi,[esp+0x10]
1002d211:	mov    DWORD PTR [esp+0x1c],eax
1002d215:	call   0x10004b0c
1002d21a:	test   al,al
1002d21c:	jne    0x1002d22e
1002d21e:	cmp    DWORD PTR [ebp+0xc],0x0
1002d222:	jle    0x1002d22e
1002d224:	call   0x1001970d
1002d229:	dec    DWORD PTR [ebp+0xc]
1002d22c:	jmp    0x1002d206
1002d22e:	mov    eax,DWORD PTR [ebx+0x4]
1002d231:	lea    edi,[esp+0x18]
1002d235:	lea    esi,[esp+0x10]
1002d239:	mov    DWORD PTR [esp+0x1c],eax
1002d23d:	mov    DWORD PTR [esp+0x18],ebx
1002d241:	call   0x10004b0c
1002d246:	test   al,al
1002d248:	jne    0x1002d265
1002d24a:	call   0x1002d45f
1002d24f:	mov    ecx,DWORD PTR [ebp+0x10]
1002d252:	and    WORD PTR [ecx],0x0
1002d256:	add    eax,0x8
1002d259:	push   eax
1002d25a:	push   ecx
1002d25b:	call   DWORD PTR ds:0x10067280
1002d261:	mov    DWORD PTR [esp+0xc],eax
1002d265:	mov    eax,DWORD PTR [esp+0xc]
1002d269:	pop    edi
1002d26a:	pop    esi
1002d26b:	pop    ebx
1002d26c:	mov    esp,ebp
1002d26e:	pop    ebp
1002d26f:	ret    0xc
1002d272:	push   ebp
1002d273:	mov    ebp,esp
1002d275:	push   edi
1002d276:	mov    edi,DWORD PTR [ebp+0xc]
1002d279:	test   edi,edi
1002d27b:	jne    0x1002d284
1002d27d:	mov    eax,0x80004003
1002d282:	jmp    0x1002d2cf
1002d284:	and    DWORD PTR [edi],0x0
1002d287:	push   ebx
1002d288:	push   esi
1002d289:	lea    eax,[ebp+0xc]
1002d28c:	push   eax
1002d28d:	call   0x1002ec32
1002d292:	mov    ebx,DWORD PTR [ebp+0xc]
1002d295:	mov    esi,eax
1002d297:	test   esi,esi
1002d299:	jl     0x1002d2be
1002d29b:	mov    eax,DWORD PTR [ebp+0x8]
1002d29e:	lea    ecx,[eax+0x4]
1002d2a1:	push   ecx
1002d2a2:	call   0x1002db7d
1002d2a7:	mov    esi,eax
1002d2a9:	test   esi,esi
1002d2ab:	jne    0x1002d2be
1002d2ad:	mov    eax,DWORD PTR [ebx]
1002d2af:	push   edi
1002d2b0:	push   0x1006eecc
1002d2b5:	push   ebx
1002d2b6:	call   DWORD PTR [eax]
1002d2b8:	mov    esi,eax
1002d2ba:	test   esi,esi
1002d2bc:	je     0x1002d2cb
1002d2be:	test   ebx,ebx
1002d2c0:	je     0x1002d2cb
1002d2c2:	mov    eax,DWORD PTR [ebx]
1002d2c4:	push   0x1
1002d2c6:	mov    ecx,ebx
1002d2c8:	call   DWORD PTR [eax+0x1c]
1002d2cb:	mov    eax,esi
1002d2cd:	pop    esi
1002d2ce:	pop    ebx
1002d2cf:	pop    edi
1002d2d0:	pop    ebp
1002d2d1:	ret    0x8
1002d2d4:	call   0x1002e4aa
1002d2d9:	lea    ecx,[esi+0x4]
1002d2dc:	mov    DWORD PTR [ecx],eax
1002d2de:	mov    BYTE PTR [eax+0x29],0x1
1002d2e2:	mov    eax,DWORD PTR [ecx]
1002d2e4:	mov    DWORD PTR [eax+0x4],eax
1002d2e7:	mov    eax,DWORD PTR [ecx]
1002d2e9:	mov    DWORD PTR [eax],eax
1002d2eb:	mov    ecx,DWORD PTR [ecx]
1002d2ed:	mov    DWORD PTR [ecx+0x8],ecx
1002d2f0:	and    DWORD PTR [esi+0x8],0x0
1002d2f4:	mov    eax,esi
1002d2f6:	ret    
1002d2f7:	push   ebp
1002d2f8:	mov    ebp,esp
1002d2fa:	and    esp,0xfffffff8
1002d2fd:	push   0xffffffff
1002d2ff:	push   0x1006051d
1002d304:	mov    eax,fs:0x0
1002d30a:	push   eax
1002d30b:	sub    esp,0x40
1002d30e:	push   ebx
1002d30f:	push   esi
1002d310:	push   edi
1002d311:	mov    eax,ds:0x100801ac
1002d316:	xor    eax,esp
1002d318:	push   eax
1002d319:	lea    eax,[esp+0x50]
1002d31d:	mov    fs:0x0,eax
1002d323:	push   DWORD PTR [ebp+0xc]
1002d326:	mov    edi,DWORD PTR [ebp+0x8]
1002d329:	lea    ebx,[esp+0x18]
1002d32d:	call   0x1002d94e
1002d332:	mov    eax,DWORD PTR [edi+0x4]
1002d335:	mov    DWORD PTR [esp+0x1c],edi
1002d339:	lea    edi,[esp+0x1c]
1002d33d:	mov    esi,ebx
1002d33f:	mov    DWORD PTR [esp+0x20],eax
1002d343:	call   0x10004b0c
1002d348:	test   al,al
1002d34a:	mov    ebx,DWORD PTR [esp+0x18]
1002d34e:	jne    0x1002d35f
1002d350:	push   DWORD PTR [ebp+0xc]
1002d353:	lea    eax,[ebx+0x10]
1002d356:	call   0x1002d9c2
1002d35b:	test   al,al
1002d35d:	je     0x1002d3d7
1002d35f:	lea    eax,[esp+0x24]
1002d363:	push   eax
1002d364:	call   DWORD PTR ds:0x10067294
1002d36a:	mov    esi,DWORD PTR [ebp+0xc]
1002d36d:	and    DWORD PTR [esp+0x58],0x0
1002d372:	lea    edi,[esp+0x34]
1002d376:	call   0x1002abda
1002d37b:	lea    eax,[esp+0x24]
1002d37f:	mov    BYTE PTR [esp+0x58],0x1
1002d384:	and    WORD PTR [esp+0x3c],0x0
1002d38a:	push   eax
1002d38b:	lea    esi,[esp+0x40]
1002d38f:	call   0x1002ac08
1002d394:	push   ebx
1002d395:	mov    BYTE PTR [esp+0x5c],0x2
1002d39a:	push   DWORD PTR [esp+0x18]
1002d39e:	mov    eax,edi
1002d3a0:	push   eax
1002d3a1:	lea    eax,[esp+0x28]
1002d3a5:	push   eax
1002d3a6:	mov    eax,DWORD PTR [ebp+0x8]
1002d3a9:	call   0x1002d7ca
1002d3ae:	mov    ecx,DWORD PTR [eax]
1002d3b0:	mov    eax,DWORD PTR [eax+0x4]
1002d3b3:	mov    DWORD PTR [esp+0x18],eax
1002d3b7:	mov    eax,esi
1002d3b9:	mov    esi,DWORD PTR ds:0x10067284
1002d3bf:	push   eax
1002d3c0:	mov    DWORD PTR [esp+0x18],ecx
1002d3c4:	call   esi
1002d3c6:	push   DWORD PTR [esp+0x34]
1002d3ca:	call   DWORD PTR ds:0x100672b4
1002d3d0:	lea    eax,[esp+0x24]
1002d3d4:	push   eax
1002d3d5:	call   esi
1002d3d7:	lea    esi,[esp+0x14]
1002d3db:	call   0x1002d45f
1002d3e0:	add    eax,0x8
1002d3e3:	mov    ecx,DWORD PTR [esp+0x50]
1002d3e7:	mov    DWORD PTR fs:0x0,ecx
1002d3ee:	pop    ecx
1002d3ef:	pop    edi
1002d3f0:	pop    esi
1002d3f1:	pop    ebx
1002d3f2:	mov    esp,ebp
1002d3f4:	pop    ebp
1002d3f5:	ret    0x8
1002d3f8:	push   ebp
1002d3f9:	mov    ebp,esp
1002d3fb:	sub    esp,0x18
1002d3fe:	push   ebx
1002d3ff:	push   esi
1002d400:	push   edi
1002d401:	push   DWORD PTR [ebp+0x10]
1002d404:	mov    edi,DWORD PTR [ebp+0x8]
1002d407:	lea    ebx,[ebp-0xc]
1002d40a:	call   0x1002d94e
1002d40f:	mov    eax,DWORD PTR [edi+0x4]
1002d412:	mov    DWORD PTR [ebp-0x14],edi
1002d415:	lea    edi,[ebp-0x14]
1002d418:	mov    esi,ebx
1002d41a:	mov    DWORD PTR [ebp-0x10],eax
1002d41d:	call   0x10004b0c
1002d422:	test   al,al
1002d424:	jne    0x1002d43c
1002d426:	mov    eax,DWORD PTR [ebp-0x8]
1002d429:	push   DWORD PTR [ebp+0x10]
1002d42c:	add    eax,0x10
1002d42f:	call   0x1002d9c2
1002d434:	test   al,al
1002d436:	jne    0x1002d43c
1002d438:	mov    ecx,ebx
1002d43a:	jmp    0x1002d44b
1002d43c:	mov    eax,DWORD PTR [ebp+0x8]
1002d43f:	mov    ecx,DWORD PTR [eax+0x4]
1002d442:	mov    DWORD PTR [ebp-0x10],ecx
1002d445:	mov    DWORD PTR [ebp-0x14],eax
1002d448:	lea    ecx,[ebp-0x14]
1002d44b:	mov    edx,DWORD PTR [ecx]
1002d44d:	mov    eax,DWORD PTR [ebp+0xc]
1002d450:	mov    ecx,DWORD PTR [ecx+0x4]
1002d453:	pop    edi
1002d454:	pop    esi
1002d455:	mov    DWORD PTR [eax],edx
1002d457:	mov    DWORD PTR [eax+0x4],ecx
1002d45a:	pop    ebx
1002d45b:	leave  
1002d45c:	ret    0xc
1002d45f:	cmp    DWORD PTR [esi],0x0
1002d462:	jne    0x1002d469
1002d464:	call   0x10043605
1002d469:	mov    eax,DWORD PTR [esi]
1002d46b:	mov    ecx,DWORD PTR [esi+0x4]
1002d46e:	cmp    ecx,DWORD PTR [eax+0x4]
1002d471:	jne    0x1002d478
1002d473:	call   0x10043605
1002d478:	mov    eax,DWORD PTR [esi+0x4]
1002d47b:	add    eax,0x10
1002d47e:	ret    
1002d47f:	push   esi
1002d480:	mov    esi,ecx
1002d482:	mov    DWORD PTR [esi],0x10074214
1002d488:	mov    DWORD PTR [esi+0x10],0xc0000001
1002d48f:	mov    ecx,DWORD PTR ds:0x10082c64
1002d495:	mov    eax,DWORD PTR [ecx]
1002d497:	call   DWORD PTR [eax+0x8]
1002d49a:	lea    eax,[esi+0x4]
1002d49d:	pop    esi
1002d49e:	jmp    0x1002d98d
1002d4a3:	mov    eax,DWORD PTR [esp+0x4]
1002d4a7:	inc    DWORD PTR [eax+0x10]
1002d4aa:	mov    eax,DWORD PTR [eax+0x10]
1002d4ad:	ret    0x4
1002d4b0:	mov    ecx,DWORD PTR [esp+0x4]
1002d4b4:	dec    DWORD PTR [ecx+0x10]
1002d4b7:	push   esi
1002d4b8:	mov    esi,DWORD PTR [ecx+0x10]
1002d4bb:	jne    0x1002d4c8
1002d4bd:	test   ecx,ecx
1002d4bf:	je     0x1002d4c8
1002d4c1:	mov    eax,DWORD PTR [ecx]
1002d4c3:	push   0x1
1002d4c5:	call   DWORD PTR [eax+0x34]
1002d4c8:	mov    eax,esi
1002d4ca:	pop    esi
1002d4cb:	ret    0x4
1002d4ce:	push   ebx
1002d4cf:	push   DWORD PTR [esp+0xc]
1002d4d3:	mov    ebx,DWORD PTR [esp+0x14]
1002d4d7:	push   DWORD PTR [esp+0xc]
1002d4db:	mov    eax,0x10073ec8
1002d4e0:	call   0x10010824
1002d4e5:	pop    ebx
1002d4e6:	ret    0xc
1002d4e9:	push   esi
1002d4ea:	mov    esi,ecx
1002d4ec:	mov    DWORD PTR [esi],0x100741e4
1002d4f2:	mov    DWORD PTR [esi+0x14],0xc0000001
1002d4f9:	mov    ecx,DWORD PTR ds:0x10082c64
1002d4ff:	mov    eax,DWORD PTR [ecx]
1002d501:	call   DWORD PTR [eax+0x8]
1002d504:	add    esi,0x4
1002d507:	call   0x1002d060
1002d50c:	pop    esi
1002d50d:	ret    
1002d50e:	mov    ecx,DWORD PTR [esp+0x4]
1002d512:	dec    DWORD PTR [ecx+0x14]
1002d515:	push   esi
1002d516:	mov    esi,DWORD PTR [ecx+0x14]
1002d519:	jne    0x1002d526
1002d51b:	test   ecx,ecx
1002d51d:	je     0x1002d526
1002d51f:	mov    eax,DWORD PTR [ecx]
1002d521:	push   0x1
1002d523:	call   DWORD PTR [eax+0x2c]
1002d526:	mov    eax,esi
1002d528:	pop    esi
1002d529:	ret    0x4
1002d52c:	push   ebx
1002d52d:	push   DWORD PTR [esp+0xc]
1002d531:	mov    ebx,DWORD PTR [esp+0x14]
1002d535:	push   DWORD PTR [esp+0xc]
1002d539:	mov    eax,0x10073ea4
1002d53e:	call   0x10010824
1002d543:	pop    ebx
1002d544:	ret    0xc
1002d547:	push   esi
1002d548:	mov    esi,ecx
1002d54a:	mov    DWORD PTR [esi],0x100741ac
1002d550:	mov    DWORD PTR [esi+0x4],0xc0000001
1002d557:	mov    ecx,DWORD PTR ds:0x10082c64
1002d55d:	mov    eax,DWORD PTR [ecx]
1002d55f:	call   DWORD PTR [eax+0x8]
1002d562:	call   0x1002d6ef
1002d567:	pop    esi
1002d568:	ret    
1002d569:	mov    ecx,DWORD PTR [esp+0x4]
1002d56d:	dec    DWORD PTR [ecx+0x4]
1002d570:	push   esi
1002d571:	mov    esi,DWORD PTR [ecx+0x4]
1002d574:	jne    0x1002d581
1002d576:	test   ecx,ecx
1002d578:	je     0x1002d581
1002d57a:	mov    eax,DWORD PTR [ecx]
1002d57c:	push   0x1
1002d57e:	call   DWORD PTR [eax+0x34]
1002d581:	mov    eax,esi
1002d583:	pop    esi
1002d584:	ret    0x4
1002d587:	push   ebx
1002d588:	push   DWORD PTR [esp+0xc]
1002d58c:	mov    ebx,DWORD PTR [esp+0x14]
1002d590:	push   DWORD PTR [esp+0xc]
1002d594:	mov    eax,0x10073e80
1002d599:	call   0x10010824
1002d59e:	pop    ebx
1002d59f:	ret    0xc
1002d5a2:	push   0x44
1002d5a4:	mov    eax,0x10061f28
1002d5a9:	call   0x10059df5
1002d5ae:	mov    esi,DWORD PTR [ebp+0x8]
1002d5b1:	xor    ebx,ebx
1002d5b3:	mov    DWORD PTR [ebp-0x14],ebx
1002d5b6:	mov    DWORD PTR [esi+0x4],ebx
1002d5b9:	mov    DWORD PTR [esi+0x8],ebx
1002d5bc:	mov    DWORD PTR [esi+0xc],ebx
1002d5bf:	xor    edi,edi
1002d5c1:	inc    edi
1002d5c2:	mov    DWORD PTR [ebp-0x4],ebx
1002d5c5:	push   0x10073e4c
1002d5ca:	mov    DWORD PTR [ebp-0x14],edi
1002d5cd:	call   0x10043450
1002d5d2:	pop    ecx
1002d5d3:	mov    DWORD PTR [ebp-0x18],eax
1002d5d6:	mov    DWORD PTR [ebp-0x10],ebx
1002d5d9:	push   DWORD PTR [ebp-0x10]
1002d5dc:	push   0x10073e4c
1002d5e1:	push   DWORD PTR [ebp+0xc]
1002d5e4:	call   0x1000ce2f
1002d5e9:	mov    ebx,eax
1002d5eb:	cmp    ebx,0xffffffff
1002d5ee:	jne    0x1002d5f6
1002d5f0:	mov    eax,DWORD PTR [ebp+0xc]
1002d5f3:	mov    ebx,DWORD PTR [eax+0x14]
1002d5f6:	cmp    ebx,DWORD PTR [ebp-0x10]
1002d5f9:	jb     0x1002d64a
1002d5fb:	mov    eax,ebx
1002d5fd:	sub    eax,DWORD PTR [ebp-0x10]
1002d600:	push   eax
1002d601:	push   DWORD PTR [ebp-0x10]
1002d604:	lea    eax,[ebp-0x50]
1002d607:	push   DWORD PTR [ebp+0xc]
1002d60a:	call   0x1000ce4e
1002d60f:	lea    ecx,[ebp-0x34]
1002d612:	push   ecx
1002d613:	mov    ecx,eax
1002d615:	mov    DWORD PTR [ebp-0x4],edi
1002d618:	call   0x1000fb5b
1002d61d:	pop    ecx
1002d61e:	push   eax
1002d61f:	mov    BYTE PTR [ebp-0x4],0x2
1002d623:	call   0x1000fd2a
1002d628:	push   0x0
1002d62a:	push   edi
1002d62b:	lea    ecx,[ebp-0x34]
1002d62e:	call   0x100012f0
1002d633:	push   0x0
1002d635:	push   edi
1002d636:	lea    ecx,[ebp-0x50]
1002d639:	mov    BYTE PTR [ebp-0x4],0x0
1002d63d:	call   0x100012f0
1002d642:	mov    eax,DWORD PTR [ebp-0x18]
1002d645:	add    ebx,eax
1002d647:	mov    DWORD PTR [ebp-0x10],ebx
1002d64a:	mov    eax,DWORD PTR [ebp-0x10]
1002d64d:	mov    ecx,DWORD PTR [ebp+0xc]
1002d650:	cmp    eax,DWORD PTR [ecx+0x14]
1002d653:	jb     0x1002d5d9
1002d655:	mov    eax,esi
1002d657:	call   0x10059ecd
1002d65c:	ret    
1002d65d:	push   esi
1002d65e:	mov    esi,DWORD PTR [eax]
1002d660:	test   esi,esi
1002d662:	je     0x1002d686
1002d664:	mov    eax,DWORD PTR [esi+0x30]
1002d667:	sub    eax,0x10
1002d66a:	call   0x10002069
1002d66f:	lea    eax,[esi+0x20]
1002d672:	call   0x1002ba77
1002d677:	lea    eax,[esi+0x10]
1002d67a:	call   0x1002ba77
1002d67f:	push   esi
1002d680:	call   0x10042fe2
1002d685:	pop    ecx
1002d686:	pop    esi
1002d687:	ret    
1002d688:	lea    eax,[esi+0x8]
1002d68b:	push   eax
1002d68c:	call   DWORD PTR ds:0x10067284
1002d692:	push   DWORD PTR [esi]
1002d694:	call   DWORD PTR ds:0x100672b4
1002d69a:	ret    
1002d69b:	push   esi
1002d69c:	mov    esi,ecx
1002d69e:	call   0x1002d47f
1002d6a3:	test   BYTE PTR [esp+0x8],0x1
1002d6a8:	je     0x1002d6b1
1002d6aa:	push   esi
1002d6ab:	call   0x10042fe2
1002d6b0:	pop    ecx
1002d6b1:	mov    eax,esi
1002d6b3:	pop    esi
1002d6b4:	ret    0x4
1002d6b7:	push   esi
1002d6b8:	mov    esi,ecx
1002d6ba:	call   0x1002d4e9
1002d6bf:	test   BYTE PTR [esp+0x8],0x1
1002d6c4:	je     0x1002d6cd
1002d6c6:	push   esi
1002d6c7:	call   0x10042fe2
1002d6cc:	pop    ecx
1002d6cd:	mov    eax,esi
1002d6cf:	pop    esi
1002d6d0:	ret    0x4
1002d6d3:	push   esi
1002d6d4:	mov    esi,ecx
1002d6d6:	call   0x1002d547
1002d6db:	test   BYTE PTR [esp+0x8],0x1
1002d6e0:	je     0x1002d6e9
1002d6e2:	push   esi
1002d6e3:	call   0x10042fe2
1002d6e8:	pop    ecx
1002d6e9:	mov    eax,esi
1002d6eb:	pop    esi
1002d6ec:	ret    0x4
1002d6ef:	push   edi
1002d6f0:	lea    edi,[esi+0x18]
1002d6f3:	call   0x100025b3
1002d6f8:	lea    edi,[esi+0x14]
1002d6fb:	call   0x100025b3
1002d700:	lea    edi,[esi+0x10]
1002d703:	call   0x100025b3
1002d708:	lea    edi,[esi+0xc]
1002d70b:	call   0x100025b3
1002d710:	lea    edi,[esi+0x8]
1002d713:	call   0x100025b3
1002d718:	pop    edi
1002d719:	ret    
1002d71a:	push   ebp
1002d71b:	mov    ebp,esp
1002d71d:	push   ecx
1002d71e:	push   ebx
1002d71f:	push   esi
1002d720:	mov    esi,eax
1002d722:	mov    ebx,DWORD PTR [esi+0x4]
1002d725:	push   edi
1002d726:	xor    edi,edi
1002d728:	cmp    ebx,edi
1002d72a:	je     0x1002d758
1002d72c:	mov    eax,DWORD PTR [esi+0x8]
1002d72f:	mov    ecx,eax
1002d731:	sub    ecx,ebx
1002d733:	sar    ecx,0x4
1002d736:	je     0x1002d758
1002d738:	cmp    ebx,eax
1002d73a:	jbe    0x1002d741
1002d73c:	call   0x10043605
1002d741:	cmp    DWORD PTR [ebp+0x10],edi
1002d744:	je     0x1002d74b
1002d746:	cmp    DWORD PTR [ebp+0x10],esi
1002d749:	je     0x1002d750
1002d74b:	call   0x10043605
1002d750:	mov    edi,DWORD PTR [ebp+0x14]
1002d753:	sub    edi,ebx
1002d755:	sar    edi,0x4
1002d758:	push   DWORD PTR [ebp+0x14]
1002d75b:	push   DWORD PTR [ebp+0x10]
1002d75e:	push   DWORD PTR [ebp+0xc]
1002d761:	push   esi
1002d762:	call   0x1002dc35
1002d767:	mov    ebx,DWORD PTR [esi+0x4]
1002d76a:	cmp    ebx,DWORD PTR [esi+0x8]
1002d76d:	jbe    0x1002d774
1002d76f:	call   0x10043605
1002d774:	shl    edi,0x4
1002d777:	add    edi,ebx
1002d779:	cmp    edi,DWORD PTR [esi+0x8]
1002d77c:	mov    DWORD PTR [ebp+0x14],ebx
1002d77f:	ja     0x1002d786
1002d781:	cmp    edi,DWORD PTR [esi+0x4]
1002d784:	jae    0x1002d78b
1002d786:	call   0x10043605
1002d78b:	mov    eax,DWORD PTR [ebp+0x8]
1002d78e:	mov    DWORD PTR [eax+0x4],edi
1002d791:	pop    edi
1002d792:	mov    DWORD PTR [eax],esi
1002d794:	pop    esi
1002d795:	pop    ebx
1002d796:	leave  
1002d797:	ret    0x10
1002d79a:	push   ebp
1002d79b:	mov    ebp,esp
1002d79d:	push   ecx
1002d79e:	push   edi
1002d79f:	xor    eax,eax
1002d7a1:	lea    edi,[ebp-0x4]
1002d7a4:	stos   BYTE PTR es:[edi],al
1002d7a5:	push   DWORD PTR [ebp-0x4]
1002d7a8:	push   DWORD PTR [ebp+0xc]
1002d7ab:	push   DWORD PTR [ebp+0x10]
1002d7ae:	push   DWORD PTR [ebp+0xc]
1002d7b1:	push   DWORD PTR [ebp+0x8]
1002d7b4:	call   0x1002edab
1002d7b9:	mov    eax,DWORD PTR [ebp+0xc]
1002d7bc:	add    esp,0x14
1002d7bf:	shl    eax,0x4
1002d7c2:	add    eax,DWORD PTR [ebp+0x8]
1002d7c5:	pop    edi
1002d7c6:	leave  
1002d7c7:	ret    0xc
1002d7ca:	push   ebp
1002d7cb:	mov    ebp,esp
1002d7cd:	sub    esp,0x14
1002d7d0:	push   ebx
1002d7d1:	mov    ebx,eax
1002d7d3:	xor    eax,eax
1002d7d5:	cmp    DWORD PTR [ebx+0x8],eax
1002d7d8:	push   esi
1002d7d9:	push   edi
1002d7da:	mov    DWORD PTR [ebp-0x8],eax
1002d7dd:	mov    DWORD PTR [ebp-0x4],eax
1002d7e0:	jne    0x1002d7fc
1002d7e2:	mov    ecx,DWORD PTR [ebx+0x4]
1002d7e5:	push   DWORD PTR [ebp+0xc]
1002d7e8:	push   0x1
1002d7ea:	mov    esi,ebx
1002d7ec:	push   DWORD PTR [ebp+0x8]
1002d7ef:	call   0x1002e005
1002d7f4:	mov    eax,DWORD PTR [ebp+0x8]
1002d7f7:	jmp    0x1002d947
1002d7fc:	mov    eax,DWORD PTR [ebx+0x4]
1002d7ff:	mov    eax,DWORD PTR [eax]
1002d801:	lea    edi,[ebp-0x10]
1002d804:	lea    esi,[ebp+0x10]
1002d807:	mov    DWORD PTR [ebp-0xc],eax
1002d80a:	mov    DWORD PTR [ebp-0x10],ebx
1002d80d:	call   0x10004b0c
1002d812:	test   al,al
1002d814:	je     0x1002d830
1002d816:	mov    esi,DWORD PTR [ebp+0x14]
1002d819:	push   DWORD PTR [ebp+0xc]
1002d81c:	lea    eax,[esi+0x10]
1002d81f:	call   0x1002d9c2
1002d824:	test   al,al
1002d826:	je     0x1002d92c
1002d82c:	mov    ecx,esi
1002d82e:	jmp    0x1002d7e5
1002d830:	mov    eax,DWORD PTR [ebx+0x4]
1002d833:	lea    edi,[ebp-0x10]
1002d836:	lea    esi,[ebp+0x10]
1002d839:	mov    DWORD PTR [ebp-0xc],eax
1002d83c:	mov    DWORD PTR [ebp-0x10],ebx
1002d83f:	call   0x10004b0c
1002d844:	test   al,al
1002d846:	je     0x1002d872
1002d848:	mov    eax,DWORD PTR [ebx+0x4]
1002d84b:	mov    eax,DWORD PTR [eax+0x8]
1002d84e:	add    eax,0x10
1002d851:	push   eax
1002d852:	mov    eax,DWORD PTR [ebp+0xc]
1002d855:	call   0x1002d9c2
1002d85a:	test   al,al
1002d85c:	je     0x1002d92c
1002d862:	push   DWORD PTR [ebp+0xc]
1002d865:	mov    eax,DWORD PTR [ebx+0x4]
1002d868:	mov    ecx,DWORD PTR [eax+0x8]
1002d86b:	push   0x0
1002d86d:	jmp    0x1002d7ea
1002d872:	mov    edi,DWORD PTR [ebp+0x14]
1002d875:	push   DWORD PTR [ebp+0xc]
1002d878:	lea    eax,[edi+0x10]
1002d87b:	call   0x1002d9c2
1002d880:	test   al,al
1002d882:	je     0x1002d8c9
1002d884:	mov    eax,DWORD PTR [ebp+0x10]
1002d887:	lea    esi,[ebp-0x8]
1002d88a:	mov    DWORD PTR [ebp-0x8],eax
1002d88d:	mov    DWORD PTR [ebp-0x4],edi
1002d890:	call   0x1002e152
1002d895:	mov    eax,DWORD PTR [eax+0x4]
1002d898:	add    eax,0x10
1002d89b:	push   eax
1002d89c:	mov    eax,DWORD PTR [ebp+0xc]
1002d89f:	call   0x1002d9c2
1002d8a4:	test   al,al
1002d8a6:	je     0x1002d8c9
1002d8a8:	mov    ecx,DWORD PTR [ebp-0x4]
1002d8ab:	mov    eax,DWORD PTR [ecx+0x8]
1002d8ae:	cmp    BYTE PTR [eax+0x29],0x0
1002d8b2:	push   DWORD PTR [ebp+0xc]
1002d8b5:	mov    esi,ebx
1002d8b7:	je     0x1002d8c0
1002d8b9:	push   0x0
1002d8bb:	jmp    0x1002d7ec
1002d8c0:	push   0x1
1002d8c2:	mov    ecx,edi
1002d8c4:	jmp    0x1002d7ec
1002d8c9:	lea    eax,[edi+0x10]
1002d8cc:	push   eax
1002d8cd:	mov    eax,DWORD PTR [ebp+0xc]
1002d8d0:	call   0x1002d9c2
1002d8d5:	test   al,al
1002d8d7:	je     0x1002d92c
1002d8d9:	mov    eax,DWORD PTR [ebp+0x10]
1002d8dc:	mov    DWORD PTR [ebp-0x8],eax
1002d8df:	mov    eax,DWORD PTR [ebx+0x4]
1002d8e2:	lea    esi,[ebp-0x8]
1002d8e5:	mov    DWORD PTR [ebp-0x4],edi
1002d8e8:	mov    DWORD PTR [ebp-0xc],eax
1002d8eb:	mov    DWORD PTR [ebp-0x10],ebx
1002d8ee:	call   0x1001970d
1002d8f3:	lea    edi,[ebp-0x10]
1002d8f6:	call   0x10004b0c
1002d8fb:	test   al,al
1002d8fd:	jne    0x1002d911
1002d8ff:	mov    eax,DWORD PTR [ebp-0x4]
1002d902:	push   DWORD PTR [ebp+0xc]
1002d905:	add    eax,0x10
1002d908:	call   0x1002d9c2
1002d90d:	test   al,al
1002d90f:	je     0x1002d92c
1002d911:	mov    ecx,DWORD PTR [ebp+0x14]
1002d914:	mov    eax,DWORD PTR [ecx+0x8]
1002d917:	cmp    BYTE PTR [eax+0x29],0x0
1002d91b:	push   DWORD PTR [ebp+0xc]
1002d91e:	mov    esi,ebx
1002d920:	jne    0x1002d8b9
1002d922:	mov    ecx,DWORD PTR [ebp-0x4]
1002d925:	push   0x1
1002d927:	jmp    0x1002d7ec
1002d92c:	push   DWORD PTR [ebp+0xc]
1002d92f:	push   ebx
1002d930:	lea    ebx,[ebp-0x14]
1002d933:	call   0x1002de99
1002d938:	mov    edx,DWORD PTR [eax]
1002d93a:	mov    ecx,DWORD PTR [ebp+0x8]
1002d93d:	mov    DWORD PTR [ecx],edx
1002d93f:	mov    eax,DWORD PTR [eax+0x4]
1002d942:	mov    DWORD PTR [ecx+0x4],eax
1002d945:	mov    eax,ecx
1002d947:	pop    edi
1002d948:	pop    esi
1002d949:	pop    ebx
1002d94a:	leave  
1002d94b:	ret    0x10
1002d94e:	push   ebp
1002d94f:	mov    ebp,esp
1002d951:	push   ecx
1002d952:	mov    eax,DWORD PTR [edi+0x4]
1002d955:	push   esi
1002d956:	mov    esi,DWORD PTR [eax+0x4]
1002d959:	mov    DWORD PTR [ebp-0x4],eax
1002d95c:	jmp    0x1002d978
1002d95e:	lea    eax,[esi+0x10]
1002d961:	push   eax
1002d962:	mov    eax,DWORD PTR [ebp+0x8]
1002d965:	call   0x1002d9c2
1002d96a:	test   al,al
1002d96c:	je     0x1002d973
1002d96e:	mov    esi,DWORD PTR [esi+0x8]
1002d971:	jmp    0x1002d978
1002d973:	mov    DWORD PTR [ebp-0x4],esi
1002d976:	mov    esi,DWORD PTR [esi]
1002d978:	cmp    BYTE PTR [esi+0x29],0x0
1002d97c:	je     0x1002d95e
1002d97e:	mov    eax,DWORD PTR [ebp-0x4]
1002d981:	mov    DWORD PTR [ebx+0x4],eax
1002d984:	mov    DWORD PTR [ebx],edi
1002d986:	mov    eax,ebx
1002d988:	pop    esi
1002d989:	leave  
1002d98a:	ret    0x4
1002d98d:	push   ebp
1002d98e:	mov    ebp,esp
1002d990:	and    esp,0xfffffff8
1002d993:	sub    esp,0xc
1002d996:	push   ebx
1002d997:	mov    ebx,eax
1002d999:	mov    eax,DWORD PTR [ebx+0x4]
1002d99c:	mov    ecx,DWORD PTR [eax]
1002d99e:	push   eax
1002d99f:	push   ebx
1002d9a0:	push   ecx
1002d9a1:	push   ebx
1002d9a2:	lea    eax,[esp+0x18]
1002d9a6:	push   eax
1002d9a7:	call   0x1002df5b
1002d9ac:	push   DWORD PTR [ebx+0x4]
1002d9af:	call   0x10042fe2
1002d9b4:	and    DWORD PTR [ebx+0x4],0x0
1002d9b8:	and    DWORD PTR [ebx+0x8],0x0
1002d9bc:	pop    ecx
1002d9bd:	pop    ebx
1002d9be:	mov    esp,ebp
1002d9c0:	pop    ebp
1002d9c1:	ret    
1002d9c2:	push   0x0
1002d9c4:	push   0x400
1002d9c9:	push   DWORD PTR [eax]
1002d9cb:	mov    eax,DWORD PTR [esp+0x10]
1002d9cf:	push   DWORD PTR [eax]
1002d9d1:	call   0x10056dea
1002d9d6:	neg    eax
1002d9d8:	sbb    eax,eax
1002d9da:	inc    eax
1002d9db:	ret    0x4
1002d9de:	cmp    DWORD PTR [esi],0x0
1002d9e1:	mov    eax,DWORD PTR [esi]
1002d9e3:	mov    DWORD PTR [edi],eax
1002d9e5:	mov    eax,DWORD PTR [esi+0x4]
1002d9e8:	mov    DWORD PTR [edi+0x4],eax
1002d9eb:	jne    0x1002d9f2
1002d9ed:	call   0x10043605
1002d9f2:	mov    eax,DWORD PTR [esi]
1002d9f4:	mov    ecx,DWORD PTR [esi+0x4]
1002d9f7:	cmp    ecx,DWORD PTR [eax+0x8]
1002d9fa:	jb     0x1002da01
1002d9fc:	call   0x10043605
1002da01:	add    DWORD PTR [esi+0x4],0x10
1002da05:	mov    eax,edi
1002da07:	ret    
1002da08:	mov    eax,DWORD PTR [esi]
1002da0a:	test   eax,eax
1002da0c:	je     0x1002da12
1002da0e:	cmp    eax,DWORD PTR [edi]
1002da10:	je     0x1002da17
1002da12:	call   0x10043605
1002da17:	mov    eax,DWORD PTR [esi+0x4]
1002da1a:	xor    ecx,ecx
1002da1c:	cmp    eax,DWORD PTR [edi+0x4]
1002da1f:	setne  cl
1002da22:	mov    al,cl
1002da24:	ret    
1002da25:	push   esi
1002da26:	mov    esi,ecx
1002da28:	mov    DWORD PTR [esi],0x10074288
1002da2e:	mov    DWORD PTR [esi+0x14],0xc0000001
1002da35:	mov    ecx,DWORD PTR ds:0x10082c64
1002da3b:	mov    eax,DWORD PTR [ecx]
1002da3d:	call   DWORD PTR [eax+0x8]
1002da40:	mov    esi,DWORD PTR [esi+0x4]
1002da43:	test   esi,esi
1002da45:	je     0x1002da4d
1002da47:	mov    eax,DWORD PTR [esi]
1002da49:	push   esi
1002da4a:	call   DWORD PTR [eax+0x8]
1002da4d:	pop    esi
1002da4e:	ret    
1002da4f:	push   ebx
1002da50:	push   DWORD PTR [esp+0xc]
1002da54:	mov    ebx,DWORD PTR [esp+0x14]
1002da58:	push   DWORD PTR [esp+0xc]
1002da5c:	mov    eax,0x1007416c
1002da61:	call   0x10010824
1002da66:	pop    ebx
1002da67:	ret    0xc
1002da6a:	push   esi
1002da6b:	push   edi
1002da6c:	mov    edi,eax
1002da6e:	lea    esi,[ebx+0x4]
1002da71:	cmp    DWORD PTR [esi],edi
1002da73:	je     0x1002da7a
1002da75:	call   0x10007961
1002da7a:	mov    esi,DWORD PTR [esp+0xc]
1002da7e:	mov    DWORD PTR [ebx+0x8],esi
1002da81:	mov    edi,DWORD PTR [esi+0x4]
1002da84:	cmp    edi,DWORD PTR [esi+0x8]
1002da87:	jbe    0x1002da8e
1002da89:	call   0x10043605
1002da8e:	mov    DWORD PTR [ebx+0x10],edi
1002da91:	pop    edi
1002da92:	mov    DWORD PTR [ebx+0xc],esi
1002da95:	xor    eax,eax
1002da97:	pop    esi
1002da98:	ret    0x4
1002da9b:	push   esi
1002da9c:	push   edi
1002da9d:	mov    edi,DWORD PTR [esp+0xc]
1002daa1:	mov    esi,DWORD PTR [edi+0x8]
1002daa4:	test   esi,esi
1002daa6:	jne    0x1002daaf
1002daa8:	mov    eax,0x80004005
1002daad:	jmp    0x1002dac6
1002daaf:	push   ebx
1002dab0:	mov    ebx,DWORD PTR [esi+0x4]
1002dab3:	cmp    ebx,DWORD PTR [esi+0x8]
1002dab6:	jbe    0x1002dabd
1002dab8:	call   0x10043605
1002dabd:	mov    DWORD PTR [edi+0x10],ebx
1002dac0:	mov    DWORD PTR [edi+0xc],esi
1002dac3:	xor    eax,eax
1002dac5:	pop    ebx
1002dac6:	pop    edi
1002dac7:	pop    esi
1002dac8:	ret    0x4
1002dacb:	push   esi
1002dacc:	mov    esi,ecx
1002dace:	mov    DWORD PTR [esi],0x100742a8
1002dad4:	mov    DWORD PTR [esi+0x4],0xc0000001
1002dadb:	mov    ecx,DWORD PTR ds:0x10082c64
1002dae1:	mov    eax,DWORD PTR [ecx]
1002dae3:	call   DWORD PTR [eax+0x8]
1002dae6:	lea    eax,[esi+0x8]
1002dae9:	pop    esi
1002daea:	jmp    0x1002d98d
1002daef:	mov    ecx,DWORD PTR [esp+0x4]
1002daf3:	dec    DWORD PTR [ecx+0x4]
1002daf6:	push   esi
1002daf7:	mov    esi,DWORD PTR [ecx+0x4]
1002dafa:	jne    0x1002db07
1002dafc:	test   ecx,ecx
1002dafe:	je     0x1002db07
1002db00:	mov    eax,DWORD PTR [ecx]
1002db02:	push   0x1
1002db04:	call   DWORD PTR [eax+0xc]
1002db07:	mov    eax,esi
1002db09:	pop    esi
1002db0a:	ret    0x4
1002db0d:	push   ebx
1002db0e:	push   DWORD PTR [esp+0xc]
1002db12:	mov    ebx,DWORD PTR [esp+0x14]
1002db16:	push   DWORD PTR [esp+0xc]
1002db1a:	mov    eax,0x10074184
1002db1f:	call   0x10010824
1002db24:	pop    ebx
1002db25:	ret    0xc
1002db28:	push   esi
1002db29:	mov    esi,ecx
1002db2b:	mov    DWORD PTR [esi],0x100742b8
1002db31:	mov    DWORD PTR [esi+0x14],0xc0000001
1002db38:	mov    ecx,DWORD PTR ds:0x10082c64
1002db3e:	mov    eax,DWORD PTR [ecx]
1002db40:	call   DWORD PTR [eax+0x8]
1002db43:	mov    esi,DWORD PTR [esi+0x4]
1002db46:	test   esi,esi
1002db48:	je     0x1002db50
1002db4a:	mov    eax,DWORD PTR [esi]
1002db4c:	push   esi
1002db4d:	call   DWORD PTR [eax+0x8]
1002db50:	pop    esi
1002db51:	ret    
1002db52:	mov    eax,DWORD PTR [esp+0x4]
1002db56:	inc    DWORD PTR [eax+0x14]
1002db59:	mov    eax,DWORD PTR [eax+0x14]
1002db5c:	ret    0x4
1002db5f:	mov    ecx,DWORD PTR [esp+0x4]
1002db63:	dec    DWORD PTR [ecx+0x14]
1002db66:	push   esi
1002db67:	mov    esi,DWORD PTR [ecx+0x14]
1002db6a:	jne    0x1002db77
1002db6c:	test   ecx,ecx
1002db6e:	je     0x1002db77
1002db70:	mov    eax,DWORD PTR [ecx]
1002db72:	push   0x1
1002db74:	call   DWORD PTR [eax+0x1c]
1002db77:	mov    eax,esi
1002db79:	pop    esi
1002db7a:	ret    0x4
1002db7d:	push   esi
1002db7e:	push   edi
1002db7f:	mov    edi,eax
1002db81:	lea    esi,[ebx+0x4]
1002db84:	cmp    DWORD PTR [esi],edi
1002db86:	je     0x1002db8d
1002db88:	call   0x10007961
1002db8d:	mov    eax,DWORD PTR [esp+0xc]
1002db91:	mov    DWORD PTR [ebx+0x8],eax
1002db94:	mov    ecx,DWORD PTR [eax+0x4]
1002db97:	mov    ecx,DWORD PTR [ecx]
1002db99:	pop    edi
1002db9a:	mov    DWORD PTR [ebx+0xc],eax
1002db9d:	mov    DWORD PTR [ebx+0x10],ecx
1002dba0:	xor    eax,eax
1002dba2:	pop    esi
1002dba3:	ret    0x4
1002dba6:	mov    ecx,DWORD PTR [esp+0x4]
1002dbaa:	mov    eax,DWORD PTR [ecx+0x8]
1002dbad:	test   eax,eax
1002dbaf:	jne    0x1002dbb8
1002dbb1:	mov    eax,0x80004005
1002dbb6:	jmp    0x1002dbc5
1002dbb8:	mov    edx,DWORD PTR [eax+0x4]
1002dbbb:	mov    edx,DWORD PTR [edx]
1002dbbd:	mov    DWORD PTR [ecx+0xc],eax
1002dbc0:	mov    DWORD PTR [ecx+0x10],edx
1002dbc3:	xor    eax,eax
1002dbc5:	ret    0x4
1002dbc8:	push   esi
1002dbc9:	mov    esi,ecx
1002dbcb:	call   0x1002da25
1002dbd0:	test   BYTE PTR [esp+0x8],0x1
1002dbd5:	je     0x1002dbde
1002dbd7:	push   esi
1002dbd8:	call   0x10042fe2
1002dbdd:	pop    ecx
1002dbde:	mov    eax,esi
1002dbe0:	pop    esi
1002dbe1:	ret    0x4
1002dbe4:	push   esi
1002dbe5:	mov    esi,ecx
1002dbe7:	call   0x1002dacb
1002dbec:	test   BYTE PTR [esp+0x8],0x1
1002dbf1:	je     0x1002dbfa
1002dbf3:	push   esi
1002dbf4:	call   0x10042fe2
1002dbf9:	pop    ecx
1002dbfa:	mov    eax,esi
1002dbfc:	pop    esi
1002dbfd:	ret    0x4
1002dc00:	push   esi
1002dc01:	mov    esi,ecx
1002dc03:	call   0x1002db28
1002dc08:	test   BYTE PTR [esp+0x8],0x1
1002dc0d:	je     0x1002dc16
1002dc0f:	push   esi
1002dc10:	call   0x10042fe2
1002dc15:	pop    ecx
1002dc16:	mov    eax,esi
1002dc18:	pop    esi
1002dc19:	ret    0x4
1002dc1c:	push   esi
1002dc1d:	mov    esi,eax
1002dc1f:	jmp    0x1002dc2b
1002dc21:	push   esi
1002dc22:	call   DWORD PTR ds:0x10067284
1002dc28:	add    esi,0x10
1002dc2b:	cmp    esi,DWORD PTR [esp+0x8]
1002dc2f:	jne    0x1002dc21
1002dc31:	pop    esi
1002dc32:	ret    0x4
1002dc35:	push   0x14
1002dc37:	mov    eax,0x100604ea
1002dc3c:	call   0x10059e28
1002dc41:	mov    edi,DWORD PTR [ebp+0x8]
1002dc44:	push   DWORD PTR [ebp+0xc]
1002dc47:	xor    ebx,ebx
1002dc49:	lea    esi,[ebp-0x20]
1002dc4c:	mov    WORD PTR [ebp-0x20],bx
1002dc50:	call   0x1002ac08
1002dc55:	mov    DWORD PTR [ebp-0x4],ebx
1002dc58:	mov    ecx,DWORD PTR [edi+0x4]
1002dc5b:	cmp    ecx,ebx
1002dc5d:	je     0x1002dc67
1002dc5f:	mov    ebx,DWORD PTR [edi+0xc]
1002dc62:	sub    ebx,ecx
1002dc64:	sar    ebx,0x4
1002dc67:	test   ecx,ecx
1002dc69:	jne    0x1002dc6f
1002dc6b:	xor    eax,eax
1002dc6d:	jmp    0x1002dc77
1002dc6f:	mov    eax,DWORD PTR [edi+0x8]
1002dc72:	sub    eax,ecx
1002dc74:	sar    eax,0x4
1002dc77:	mov    edx,0xfffffff
1002dc7c:	mov    esi,edx
1002dc7e:	sub    esi,eax
1002dc80:	mov    eax,esi
1002dc82:	xor    esi,esi
1002dc84:	inc    esi
1002dc85:	cmp    eax,esi
1002dc87:	jae    0x1002dc8e
1002dc89:	call   0x1000dbd4
1002dc8e:	test   ecx,ecx
1002dc90:	jne    0x1002dc96
1002dc92:	xor    eax,eax
1002dc94:	jmp    0x1002dc9e
1002dc96:	mov    eax,DWORD PTR [edi+0x8]
1002dc99:	sub    eax,ecx
1002dc9b:	sar    eax,0x4
1002dc9e:	inc    eax
1002dc9f:	cmp    ebx,eax
1002dca1:	jae    0x1002dd7a
1002dca7:	mov    eax,ebx
1002dca9:	shr    eax,1
1002dcab:	sub    edx,eax
1002dcad:	cmp    edx,ebx
1002dcaf:	jae    0x1002dcb5
1002dcb1:	xor    ebx,ebx
1002dcb3:	jmp    0x1002dcb7
1002dcb5:	add    ebx,eax
1002dcb7:	test   ecx,ecx
1002dcb9:	jne    0x1002dcbf
1002dcbb:	xor    eax,eax
1002dcbd:	jmp    0x1002dcc7
1002dcbf:	mov    eax,DWORD PTR [edi+0x8]
1002dcc2:	sub    eax,ecx
1002dcc4:	sar    eax,0x4
1002dcc7:	inc    eax
1002dcc8:	cmp    ebx,eax
1002dcca:	jae    0x1002dcdd
1002dccc:	test   ecx,ecx
1002dcce:	jne    0x1002dcd4
1002dcd0:	xor    ebx,ebx
1002dcd2:	jmp    0x1002dcdc
1002dcd4:	mov    ebx,DWORD PTR [edi+0x8]
1002dcd7:	sub    ebx,ecx
1002dcd9:	sar    ebx,0x4
1002dcdc:	inc    ebx
1002dcdd:	mov    ecx,ebx
1002dcdf:	call   0x1002de4f
1002dce4:	push   eax
1002dce5:	push   DWORD PTR [ebp+0x14]
1002dce8:	mov    BYTE PTR [ebp-0x4],0x1
1002dcec:	mov    ecx,DWORD PTR [edi+0x4]
1002dcef:	mov    DWORD PTR [ebp+0xc],eax
1002dcf2:	mov    DWORD PTR [ebp+0x8],eax
1002dcf5:	call   0x1002ecac
1002dcfa:	lea    ecx,[ebp-0x20]
1002dcfd:	push   ecx
1002dcfe:	push   esi
1002dcff:	push   eax
1002dd00:	mov    DWORD PTR [ebp+0x8],eax
1002dd03:	call   0x1002d79a
1002dd08:	mov    ecx,DWORD PTR [ebp+0x14]
1002dd0b:	push   eax
1002dd0c:	push   DWORD PTR [edi+0x8]
1002dd0f:	mov    DWORD PTR [ebp+0x8],eax
1002dd12:	call   0x1002ecac
1002dd17:	mov    eax,DWORD PTR [edi+0x4]
1002dd1a:	test   eax,eax
1002dd1c:	jne    0x1002dd22
1002dd1e:	xor    ecx,ecx
1002dd20:	jmp    0x1002dd2a
1002dd22:	mov    ecx,DWORD PTR [edi+0x8]
1002dd25:	sub    ecx,eax
1002dd27:	sar    ecx,0x4
1002dd2a:	test   eax,eax
1002dd2c:	lea    esi,[ecx+0x1]
1002dd2f:	je     0x1002dd42
1002dd31:	push   DWORD PTR [edi+0x8]
1002dd34:	call   0x1002dc1c
1002dd39:	push   DWORD PTR [edi+0x4]
1002dd3c:	call   0x10042fe2
1002dd41:	pop    ecx
1002dd42:	mov    eax,DWORD PTR [ebp+0xc]
1002dd45:	shl    ebx,0x4
1002dd48:	add    ebx,eax
1002dd4a:	shl    esi,0x4
1002dd4d:	add    esi,eax
1002dd4f:	mov    DWORD PTR [edi+0xc],ebx
1002dd52:	mov    DWORD PTR [edi+0x8],esi
1002dd55:	mov    DWORD PTR [edi+0x4],eax
1002dd58:	jmp    0x1002de3d
1002dd5d:	push   DWORD PTR [ebp+0x8]
1002dd60:	mov    eax,DWORD PTR [ebp+0xc]
1002dd63:	call   0x1002dc1c
1002dd68:	push   DWORD PTR [ebp+0xc]
1002dd6b:	call   0x10042fe2
1002dd70:	pop    ecx
1002dd71:	push   0x0
1002dd73:	push   0x0
1002dd75:	call   0x10047942
1002dd7a:	mov    eax,DWORD PTR [edi+0x8]
1002dd7d:	mov    ebx,DWORD PTR [ebp+0x14]
1002dd80:	mov    ecx,eax
1002dd82:	sub    ecx,ebx
1002dd84:	sar    ecx,0x4
1002dd87:	cmp    ecx,esi
1002dd89:	jae    0x1002ddf6
1002dd8b:	lea    ecx,[ebx+0x10]
1002dd8e:	push   ecx
1002dd8f:	push   eax
1002dd90:	mov    ecx,ebx
1002dd92:	call   0x1002ecac
1002dd97:	mov    BYTE PTR [ebp-0x4],0x3
1002dd9b:	mov    eax,DWORD PTR [edi+0x8]
1002dd9e:	lea    ecx,[ebp-0x20]
1002dda1:	push   ecx
1002dda2:	mov    ecx,eax
1002dda4:	sub    ecx,ebx
1002dda6:	sar    ecx,0x4
1002dda9:	sub    esi,ecx
1002ddab:	push   esi
1002ddac:	push   eax
1002ddad:	call   0x1002d79a
1002ddb2:	and    DWORD PTR [ebp-0x4],0x0
1002ddb6:	add    DWORD PTR [edi+0x8],0x10
1002ddba:	mov    edi,DWORD PTR [edi+0x8]
1002ddbd:	add    edi,0xfffffff0
1002ddc0:	cmp    ebx,edi
1002ddc2:	mov    esi,ebx
1002ddc4:	je     0x1002de3d
1002ddc6:	lea    eax,[ebp-0x20]
1002ddc9:	cmp    esi,eax
1002ddcb:	je     0x1002ddd3
1002ddcd:	push   eax
1002ddce:	call   0x1002ac08
1002ddd3:	add    esi,0x10
1002ddd6:	cmp    esi,edi
1002ddd8:	jne    0x1002ddc6
1002ddda:	jmp    0x1002de3d
1002dddc:	mov    eax,DWORD PTR [ebp+0x8]
1002dddf:	mov    eax,DWORD PTR [eax+0x8]
1002dde2:	add    eax,0x10
1002dde5:	push   eax
1002dde6:	mov    eax,DWORD PTR [ebp+0x14]
1002dde9:	add    eax,0x10
1002ddec:	call   0x1002dc1c
1002ddf1:	jmp    0x1002dd71
1002ddf6:	lea    esi,[eax-0x10]
1002ddf9:	push   eax
1002ddfa:	push   eax
1002ddfb:	mov    ecx,esi
1002ddfd:	call   0x1002ecac
1002de02:	mov    DWORD PTR [edi+0x8],eax
1002de05:	mov    edi,esi
1002de07:	cmp    ebx,edi
1002de09:	je     0x1002de22
1002de0b:	lea    esi,[edi+0x10]
1002de0e:	sub    edi,0x10
1002de11:	sub    esi,0x10
1002de14:	cmp    esi,edi
1002de16:	je     0x1002de1e
1002de18:	push   edi
1002de19:	call   0x1002ac08
1002de1e:	cmp    edi,ebx
1002de20:	jne    0x1002de0e
1002de22:	lea    edi,[ebx+0x10]
1002de25:	jmp    0x1002de39
1002de27:	lea    eax,[ebp-0x20]
1002de2a:	cmp    ebx,eax
1002de2c:	je     0x1002de36
1002de2e:	push   eax
1002de2f:	mov    esi,ebx
1002de31:	call   0x1002ac08
1002de36:	add    ebx,0x10
1002de39:	cmp    ebx,edi
1002de3b:	jne    0x1002de27
1002de3d:	lea    eax,[ebp-0x20]
1002de40:	push   eax
1002de41:	call   DWORD PTR ds:0x10067284
1002de47:	call   0x10059ecd
1002de4c:	ret    0x10
1002de4f:	push   ebp
1002de50:	mov    ebp,esp
1002de52:	sub    esp,0x10
1002de55:	test   ecx,ecx
1002de57:	ja     0x1002de67
1002de59:	xor    ecx,ecx
1002de5b:	shl    ecx,0x4
1002de5e:	push   ecx
1002de5f:	call   0x10043196
1002de64:	pop    ecx
1002de65:	leave  
1002de66:	ret    
1002de67:	or     eax,0xffffffff
1002de6a:	xor    edx,edx
1002de6c:	div    ecx
1002de6e:	cmp    eax,0x10
1002de71:	jae    0x1002de5b
1002de73:	and    DWORD PTR [ebp-0x4],0x0
1002de77:	lea    eax,[ebp-0x4]
1002de7a:	push   eax
1002de7b:	lea    ecx,[ebp-0x10]
1002de7e:	call   0x100432d2
1002de83:	push   0x10076460
1002de88:	lea    eax,[ebp-0x10]
1002de8b:	push   eax
1002de8c:	mov    DWORD PTR [ebp-0x10],0x100675a0
1002de93:	call   0x10047942
1002de98:	int3   
1002de99:	push   ebp
1002de9a:	mov    ebp,esp
1002de9c:	sub    esp,0x18
1002de9f:	push   esi
1002dea0:	mov    esi,DWORD PTR [ebp+0x8]
1002dea3:	mov    eax,DWORD PTR [esi+0x4]
1002dea6:	push   edi
1002dea7:	mov    edi,DWORD PTR [eax+0x4]
1002deaa:	mov    DWORD PTR [ebp-0x4],eax
1002dead:	mov    al,0x1
1002deaf:	mov    BYTE PTR [ebp-0x8],al
1002deb2:	jmp    0x1002ded0
1002deb4:	push   DWORD PTR [ebp+0xc]
1002deb7:	lea    eax,[edi+0x10]
1002deba:	mov    DWORD PTR [ebp-0x4],edi
1002debd:	call   0x1002d9c2
1002dec2:	test   al,al
1002dec4:	mov    BYTE PTR [ebp-0x8],al
1002dec7:	je     0x1002decd
1002dec9:	mov    edi,DWORD PTR [edi]
1002decb:	jmp    0x1002ded0
1002decd:	mov    edi,DWORD PTR [edi+0x8]
1002ded0:	cmp    BYTE PTR [edi+0x29],0x0
1002ded4:	je     0x1002deb4
1002ded6:	test   al,al
1002ded8:	mov    edi,DWORD PTR [ebp-0x4]
1002dedb:	mov    DWORD PTR [ebp-0xc],edi
1002dede:	mov    DWORD PTR [ebp-0x10],esi
1002dee1:	je     0x1002df2f
1002dee3:	mov    eax,DWORD PTR [esi+0x4]
1002dee6:	mov    eax,DWORD PTR [eax]
1002dee8:	mov    DWORD PTR [ebp-0x18],esi
1002deeb:	lea    edi,[ebp-0x18]
1002deee:	lea    esi,[ebp-0x10]
1002def1:	mov    DWORD PTR [ebp-0x14],eax
1002def4:	call   0x10004b0c
1002def9:	test   al,al
1002defb:	je     0x1002df21
1002defd:	push   DWORD PTR [ebp+0xc]
1002df00:	mov    esi,DWORD PTR [ebp+0x8]
1002df03:	push   0x1
1002df05:	mov    ecx,DWORD PTR [ebp-0x4]
1002df08:	lea    eax,[ebp-0x18]
1002df0b:	push   eax
1002df0c:	call   0x1002e005
1002df11:	mov    ecx,DWORD PTR [eax]
1002df13:	mov    eax,DWORD PTR [eax+0x4]
1002df16:	mov    DWORD PTR [ebx],ecx
1002df18:	mov    DWORD PTR [ebx+0x4],eax
1002df1b:	mov    BYTE PTR [ebx+0x8],0x1
1002df1f:	jmp    0x1002df53
1002df21:	lea    esi,[ebp-0x10]
1002df24:	call   0x1002e152
1002df29:	mov    edi,DWORD PTR [ebp-0xc]
1002df2c:	mov    esi,DWORD PTR [ebp+0x8]
1002df2f:	lea    eax,[edi+0x10]
1002df32:	push   eax
1002df33:	mov    eax,DWORD PTR [ebp+0xc]
1002df36:	call   0x1002d9c2
1002df3b:	test   al,al
1002df3d:	je     0x1002df47
1002df3f:	push   DWORD PTR [ebp+0xc]
1002df42:	push   DWORD PTR [ebp-0x8]
1002df45:	jmp    0x1002df05
1002df47:	mov    eax,DWORD PTR [ebp-0x10]
1002df4a:	mov    DWORD PTR [ebx],eax
1002df4c:	mov    DWORD PTR [ebx+0x4],edi
1002df4f:	mov    BYTE PTR [ebx+0x8],0x0
1002df53:	pop    edi
1002df54:	mov    eax,ebx
1002df56:	pop    esi
1002df57:	leave  
1002df58:	ret    0x8
1002df5b:	push   ebp
1002df5c:	mov    ebp,esp
1002df5e:	sub    esp,0x14
1002df61:	mov    eax,DWORD PTR [ebx+0x4]
1002df64:	mov    eax,DWORD PTR [eax]
1002df66:	push   esi
1002df67:	push   edi
1002df68:	lea    edi,[ebp-0xc]
1002df6b:	lea    esi,[ebp+0xc]
1002df6e:	mov    DWORD PTR [ebp-0x8],eax
1002df71:	mov    DWORD PTR [ebp-0xc],ebx
1002df74:	call   0x10004b0c
1002df79:	test   al,al
1002df7b:	je     0x1002dfe2
1002df7d:	mov    eax,DWORD PTR [ebx+0x4]
1002df80:	lea    edi,[ebp-0xc]
1002df83:	lea    esi,[ebp+0x14]
1002df86:	mov    DWORD PTR [ebp-0x8],eax
1002df89:	mov    DWORD PTR [ebp-0xc],ebx
1002df8c:	call   0x10004b0c
1002df91:	test   al,al
1002df93:	je     0x1002dfe2
1002df95:	mov    eax,DWORD PTR [ebx+0x4]
1002df98:	push   DWORD PTR [eax+0x4]
1002df9b:	mov    ecx,ebx
1002df9d:	call   0x1002e529
1002dfa2:	mov    eax,DWORD PTR [ebx+0x4]
1002dfa5:	mov    DWORD PTR [eax+0x4],eax
1002dfa8:	mov    eax,DWORD PTR [ebx+0x4]
1002dfab:	and    DWORD PTR [ebx+0x8],0x0
1002dfaf:	mov    DWORD PTR [eax],eax
1002dfb1:	mov    eax,DWORD PTR [ebx+0x4]
1002dfb4:	mov    DWORD PTR [eax+0x8],eax
1002dfb7:	mov    eax,DWORD PTR [ebx+0x4]
1002dfba:	mov    ecx,DWORD PTR [eax]
1002dfbc:	mov    eax,DWORD PTR [ebp+0x8]
1002dfbf:	mov    DWORD PTR [eax],ebx
1002dfc1:	jmp    0x1002dffc
1002dfc3:	mov    eax,DWORD PTR [ebp+0x10]
1002dfc6:	mov    edi,DWORD PTR [ebp+0xc]
1002dfc9:	lea    esi,[ebp+0xc]
1002dfcc:	mov    DWORD PTR [ebp-0x8],eax
1002dfcf:	call   0x1001970d
1002dfd4:	push   DWORD PTR [ebp-0x8]
1002dfd7:	lea    eax,[ebp-0x14]
1002dfda:	push   edi
1002dfdb:	push   eax
1002dfdc:	push   ebx
1002dfdd:	call   0x1002e1cb
1002dfe2:	lea    edi,[ebp+0x14]
1002dfe5:	lea    esi,[ebp+0xc]
1002dfe8:	call   0x10004b0c
1002dfed:	test   al,al
1002dfef:	je     0x1002dfc3
1002dff1:	mov    ecx,DWORD PTR [ebp+0xc]
1002dff4:	mov    eax,DWORD PTR [ebp+0x8]
1002dff7:	mov    DWORD PTR [eax],ecx
1002dff9:	mov    ecx,DWORD PTR [ebp+0x10]
1002dffc:	pop    edi
1002dffd:	mov    DWORD PTR [eax+0x4],ecx
1002e000:	pop    esi
1002e001:	leave  
1002e002:	ret    0x14
1002e005:	push   0x48
1002e007:	mov    eax,0x100607fe
1002e00c:	call   0x10059df5
1002e011:	mov    edi,ecx
1002e013:	cmp    DWORD PTR [esi+0x8],0xaaaaaa9
1002e01a:	jb     0x1002e04e
1002e01c:	push   0x1006e0f8
1002e021:	lea    ecx,[ebp-0x2c]
1002e024:	call   0x100011a7
1002e029:	and    DWORD PTR [ebp-0x4],0x0
1002e02d:	lea    eax,[ebp-0x2c]
1002e030:	push   eax
1002e031:	lea    ecx,[ebp-0x54]
1002e034:	call   0x10001077
1002e039:	push   0x100764d0
1002e03e:	lea    eax,[ebp-0x54]
1002e041:	push   eax
1002e042:	mov    DWORD PTR [ebp-0x54],0x1006c97c
1002e049:	call   0x10047942
1002e04e:	mov    eax,DWORD PTR [esi+0x4]
1002e051:	push   0x0
1002e053:	push   DWORD PTR [ebp+0x10]
1002e056:	push   eax
1002e057:	push   edi
1002e058:	push   eax
1002e059:	call   0x1002e4d4
1002e05e:	inc    DWORD PTR [esi+0x8]
1002e061:	mov    ebx,eax
1002e063:	mov    eax,DWORD PTR [esi+0x4]
1002e066:	cmp    edi,eax
1002e068:	jne    0x1002e077
1002e06a:	mov    DWORD PTR [eax+0x4],ebx
1002e06d:	mov    eax,DWORD PTR [esi+0x4]
1002e070:	mov    DWORD PTR [eax],ebx
1002e072:	mov    eax,DWORD PTR [esi+0x4]
1002e075:	jmp    0x1002e095
1002e077:	cmp    BYTE PTR [ebp+0xc],0x0
1002e07b:	je     0x1002e08a
1002e07d:	mov    DWORD PTR [edi],ebx
1002e07f:	mov    eax,DWORD PTR [esi+0x4]
1002e082:	cmp    edi,DWORD PTR [eax]
1002e084:	jne    0x1002e098
1002e086:	mov    DWORD PTR [eax],ebx
1002e088:	jmp    0x1002e098
1002e08a:	mov    DWORD PTR [edi+0x8],ebx
1002e08d:	mov    eax,DWORD PTR [esi+0x4]
1002e090:	cmp    edi,DWORD PTR [eax+0x8]
1002e093:	jne    0x1002e098
1002e095:	mov    DWORD PTR [eax+0x8],ebx
1002e098:	mov    edi,ebx
1002e09a:	lea    eax,[ebx+0x4]
1002e09d:	jmp    0x1002e12c
1002e0a2:	mov    ecx,DWORD PTR [eax]
1002e0a4:	mov    edx,DWORD PTR [ecx+0x4]
1002e0a7:	cmp    ecx,DWORD PTR [edx]
1002e0a9:	jne    0x1002e0e0
1002e0ab:	mov    edx,DWORD PTR [edx+0x8]
1002e0ae:	cmp    BYTE PTR [edx+0x28],0x0
1002e0b2:	je     0x1002e0e8
1002e0b4:	cmp    edi,DWORD PTR [ecx+0x8]
1002e0b7:	jne    0x1002e0c1
1002e0b9:	push   esi
1002e0ba:	mov    edi,ecx
1002e0bc:	call   0x10019368
1002e0c1:	mov    eax,DWORD PTR [edi+0x4]
1002e0c4:	mov    BYTE PTR [eax+0x28],0x1
1002e0c8:	mov    eax,DWORD PTR [edi+0x4]
1002e0cb:	mov    eax,DWORD PTR [eax+0x4]
1002e0ce:	mov    BYTE PTR [eax+0x28],0x0
1002e0d2:	mov    eax,DWORD PTR [edi+0x4]
1002e0d5:	mov    ecx,DWORD PTR [eax+0x4]
1002e0d8:	push   esi
1002e0d9:	call   0x1002e468
1002e0de:	jmp    0x1002e129
1002e0e0:	mov    edx,DWORD PTR [edx]
1002e0e2:	cmp    BYTE PTR [edx+0x28],0x0
1002e0e6:	jne    0x1002e100
1002e0e8:	mov    BYTE PTR [ecx+0x28],0x1
1002e0ec:	mov    BYTE PTR [edx+0x28],0x1
1002e0f0:	mov    ecx,DWORD PTR [eax]
1002e0f2:	mov    ecx,DWORD PTR [ecx+0x4]
1002e0f5:	mov    BYTE PTR [ecx+0x28],0x0
1002e0f9:	mov    eax,DWORD PTR [eax]
1002e0fb:	mov    edi,DWORD PTR [eax+0x4]
1002e0fe:	jmp    0x1002e129
1002e100:	cmp    edi,DWORD PTR [ecx]
1002e102:	jne    0x1002e10c
1002e104:	push   esi
1002e105:	mov    edi,ecx
1002e107:	call   0x1002e468
1002e10c:	mov    eax,DWORD PTR [edi+0x4]
1002e10f:	mov    BYTE PTR [eax+0x28],0x1
1002e113:	mov    eax,DWORD PTR [edi+0x4]
1002e116:	mov    eax,DWORD PTR [eax+0x4]
1002e119:	mov    BYTE PTR [eax+0x28],0x0
1002e11d:	mov    eax,DWORD PTR [edi+0x4]
1002e120:	mov    ecx,DWORD PTR [eax+0x4]
1002e123:	push   esi
1002e124:	call   0x10019368
1002e129:	lea    eax,[edi+0x4]
1002e12c:	mov    ecx,DWORD PTR [eax]
1002e12e:	cmp    BYTE PTR [ecx+0x28],0x0
1002e132:	je     0x1002e0a2
1002e138:	mov    eax,DWORD PTR [esi+0x4]
1002e13b:	mov    eax,DWORD PTR [eax+0x4]
1002e13e:	mov    BYTE PTR [eax+0x28],0x1
1002e142:	mov    eax,DWORD PTR [ebp+0x8]
1002e145:	mov    DWORD PTR [eax+0x4],ebx
1002e148:	mov    DWORD PTR [eax],esi
1002e14a:	call   0x10059ecd
1002e14f:	ret    0xc
1002e152:	push   ebx
1002e153:	xor    ebx,ebx
1002e155:	cmp    DWORD PTR [esi],ebx
1002e157:	jne    0x1002e15e
1002e159:	call   0x10043605
1002e15e:	mov    eax,DWORD PTR [esi+0x4]
1002e161:	cmp    BYTE PTR [eax+0x29],bl
1002e164:	je     0x1002e173
1002e166:	mov    eax,DWORD PTR [eax+0x8]
1002e169:	mov    DWORD PTR [esi+0x4],eax
1002e16c:	cmp    BYTE PTR [eax+0x29],bl
1002e16f:	je     0x1002e1af
1002e171:	jmp    0x1002e1a5
1002e173:	mov    ecx,DWORD PTR [eax]
1002e175:	cmp    BYTE PTR [ecx+0x29],bl
1002e178:	jne    0x1002e195
1002e17a:	jmp    0x1002e17e
1002e17c:	mov    ecx,eax
1002e17e:	mov    eax,DWORD PTR [ecx+0x8]
1002e181:	cmp    BYTE PTR [eax+0x29],bl
1002e184:	je     0x1002e17c
1002e186:	mov    DWORD PTR [esi+0x4],ecx
1002e189:	jmp    0x1002e1af
1002e18b:	mov    ecx,DWORD PTR [esi+0x4]
1002e18e:	cmp    ecx,DWORD PTR [eax]
1002e190:	jne    0x1002e19d
1002e192:	mov    DWORD PTR [esi+0x4],eax
1002e195:	mov    eax,DWORD PTR [eax+0x4]
1002e198:	cmp    BYTE PTR [eax+0x29],bl
1002e19b:	je     0x1002e18b
1002e19d:	mov    ecx,DWORD PTR [esi+0x4]
1002e1a0:	cmp    BYTE PTR [ecx+0x29],bl
1002e1a3:	je     0x1002e1ac
1002e1a5:	call   0x10043605
1002e1aa:	jmp    0x1002e1af
1002e1ac:	mov    DWORD PTR [esi+0x4],eax
1002e1af:	mov    eax,esi
1002e1b1:	pop    ebx
1002e1b2:	ret    
1002e1b3:	push   ebp
1002e1b4:	mov    ebp,esp
1002e1b6:	push   ecx
1002e1b7:	push   DWORD PTR [ebp+0xc]
1002e1ba:	mov    ecx,DWORD PTR [ebp+0x8]
1002e1bd:	and    DWORD PTR [ebp-0x4],0x0
1002e1c1:	call   0x100011c9
1002e1c6:	mov    eax,DWORD PTR [ebp+0x8]
1002e1c9:	leave  
1002e1ca:	ret    
1002e1cb:	push   0x44
1002e1cd:	mov    eax,0x10060b46
1002e1d2:	call   0x10059df5
1002e1d7:	mov    edi,DWORD PTR [ebp+0x14]
1002e1da:	cmp    BYTE PTR [edi+0x29],0x0
1002e1de:	je     0x1002e212
1002e1e0:	push   0x1006dcfc
1002e1e5:	lea    ecx,[ebp-0x28]
1002e1e8:	call   0x100011a7
1002e1ed:	and    DWORD PTR [ebp-0x4],0x0
1002e1f1:	lea    eax,[ebp-0x28]
1002e1f4:	push   eax
1002e1f5:	lea    ecx,[ebp-0x50]
1002e1f8:	call   0x10001077
1002e1fd:	push   0x10076428
1002e202:	lea    eax,[ebp-0x50]
1002e205:	push   eax
1002e206:	mov    DWORD PTR [ebp-0x50],0x1006c988
1002e20d:	call   0x10047942
1002e212:	lea    esi,[ebp+0x10]
1002e215:	call   0x1001970d
1002e21a:	mov    ecx,DWORD PTR [edi]
1002e21c:	cmp    BYTE PTR [ecx+0x29],0x0
1002e220:	je     0x1002e227
1002e222:	mov    ebx,DWORD PTR [edi+0x8]
1002e225:	jmp    0x1002e23e
1002e227:	mov    eax,DWORD PTR [edi+0x8]
1002e22a:	cmp    BYTE PTR [eax+0x29],0x0
1002e22e:	je     0x1002e234
1002e230:	mov    ebx,ecx
1002e232:	jmp    0x1002e23e
1002e234:	mov    eax,DWORD PTR [ebp+0x14]
1002e237:	cmp    eax,edi
1002e239:	mov    ebx,DWORD PTR [eax+0x8]
1002e23c:	jne    0x1002e2b4
1002e23e:	cmp    BYTE PTR [ebx+0x29],0x0
1002e242:	mov    esi,DWORD PTR [edi+0x4]
1002e245:	jne    0x1002e24a
1002e247:	mov    DWORD PTR [ebx+0x4],esi
1002e24a:	mov    ecx,DWORD PTR [ebp+0x8]
1002e24d:	mov    eax,DWORD PTR [ecx+0x4]
1002e250:	cmp    DWORD PTR [eax+0x4],edi
1002e253:	jne    0x1002e25a
1002e255:	mov    DWORD PTR [eax+0x4],ebx
1002e258:	jmp    0x1002e265
1002e25a:	cmp    DWORD PTR [esi],edi
1002e25c:	jne    0x1002e262
1002e25e:	mov    DWORD PTR [esi],ebx
1002e260:	jmp    0x1002e265
1002e262:	mov    DWORD PTR [esi+0x8],ebx
1002e265:	mov    edx,DWORD PTR [ecx+0x4]
1002e268:	cmp    DWORD PTR [edx],edi
1002e26a:	jne    0x1002e288
1002e26c:	cmp    BYTE PTR [ebx+0x29],0x0
1002e270:	je     0x1002e276
1002e272:	mov    ecx,esi
1002e274:	jmp    0x1002e286
1002e276:	mov    eax,DWORD PTR [ebx]
1002e278:	mov    ecx,ebx
1002e27a:	jmp    0x1002e280
1002e27c:	mov    ecx,eax
1002e27e:	mov    eax,DWORD PTR [ecx]
1002e280:	cmp    BYTE PTR [eax+0x29],0x0
1002e284:	je     0x1002e27c
1002e286:	mov    DWORD PTR [edx],ecx
1002e288:	mov    eax,DWORD PTR [ebp+0x8]
1002e28b:	mov    edx,DWORD PTR [eax+0x4]
1002e28e:	cmp    DWORD PTR [edx+0x8],edi
1002e291:	jne    0x1002e30e
1002e293:	cmp    BYTE PTR [ebx+0x29],0x0
1002e297:	je     0x1002e29d
1002e299:	mov    ecx,esi
1002e29b:	jmp    0x1002e2af
1002e29d:	mov    eax,DWORD PTR [ebx+0x8]
1002e2a0:	mov    ecx,ebx
1002e2a2:	jmp    0x1002e2a9
1002e2a4:	mov    ecx,eax
1002e2a6:	mov    eax,DWORD PTR [ecx+0x8]
1002e2a9:	cmp    BYTE PTR [eax+0x29],0x0
1002e2ad:	je     0x1002e2a4
1002e2af:	mov    DWORD PTR [edx+0x8],ecx
1002e2b2:	jmp    0x1002e30e
1002e2b4:	mov    DWORD PTR [ecx+0x4],eax
1002e2b7:	mov    ecx,DWORD PTR [edi]
1002e2b9:	mov    DWORD PTR [eax],ecx
1002e2bb:	cmp    eax,DWORD PTR [edi+0x8]
1002e2be:	jne    0x1002e2c4
1002e2c0:	mov    esi,eax
1002e2c2:	jmp    0x1002e2de
1002e2c4:	cmp    BYTE PTR [ebx+0x29],0x0
1002e2c8:	mov    esi,DWORD PTR [eax+0x4]
1002e2cb:	jne    0x1002e2d0
1002e2cd:	mov    DWORD PTR [ebx+0x4],esi
1002e2d0:	mov    DWORD PTR [esi],ebx
1002e2d2:	mov    ecx,DWORD PTR [edi+0x8]
1002e2d5:	mov    DWORD PTR [eax+0x8],ecx
1002e2d8:	mov    ecx,DWORD PTR [edi+0x8]
1002e2db:	mov    DWORD PTR [ecx+0x4],eax
1002e2de:	mov    ecx,DWORD PTR [ebp+0x8]
1002e2e1:	mov    ecx,DWORD PTR [ecx+0x4]
1002e2e4:	cmp    DWORD PTR [ecx+0x4],edi
1002e2e7:	jne    0x1002e2ee
1002e2e9:	mov    DWORD PTR [ecx+0x4],eax
1002e2ec:	jmp    0x1002e2fc
1002e2ee:	mov    ecx,DWORD PTR [edi+0x4]
1002e2f1:	cmp    DWORD PTR [ecx],edi
1002e2f3:	jne    0x1002e2f9
1002e2f5:	mov    DWORD PTR [ecx],eax
1002e2f7:	jmp    0x1002e2fc
1002e2f9:	mov    DWORD PTR [ecx+0x8],eax
1002e2fc:	mov    ecx,DWORD PTR [edi+0x4]
1002e2ff:	mov    DWORD PTR [eax+0x4],ecx
1002e302:	mov    dl,BYTE PTR [edi+0x28]
1002e305:	mov    cl,BYTE PTR [eax+0x28]
1002e308:	mov    BYTE PTR [eax+0x28],dl
1002e30b:	mov    BYTE PTR [edi+0x28],cl
1002e30e:	cmp    BYTE PTR [edi+0x28],0x1
1002e312:	jne    0x1002e42a
1002e318:	jmp    0x1002e3de
1002e31d:	cmp    BYTE PTR [ebx+0x28],0x1
1002e321:	jne    0x1002e426
1002e327:	mov    ecx,DWORD PTR [esi]
1002e329:	cmp    ebx,ecx
1002e32b:	jne    0x1002e3a4
1002e32d:	mov    ecx,DWORD PTR [esi+0x8]
1002e330:	cmp    BYTE PTR [ecx+0x28],0x0
1002e334:	jne    0x1002e34b
1002e336:	push   DWORD PTR [ebp+0x8]
1002e339:	mov    BYTE PTR [ecx+0x28],0x1
1002e33d:	mov    ecx,esi
1002e33f:	mov    BYTE PTR [esi+0x28],0x0
1002e343:	call   0x10019368
1002e348:	mov    ecx,DWORD PTR [esi+0x8]
1002e34b:	cmp    BYTE PTR [ecx+0x29],0x0
1002e34f:	jne    0x1002e3d9
1002e355:	mov    eax,DWORD PTR [ecx]
1002e357:	cmp    BYTE PTR [eax+0x28],0x1
1002e35b:	jne    0x1002e366
1002e35d:	mov    eax,DWORD PTR [ecx+0x8]
1002e360:	cmp    BYTE PTR [eax+0x28],0x1
1002e364:	je     0x1002e3d5
1002e366:	mov    eax,DWORD PTR [ecx+0x8]
1002e369:	cmp    BYTE PTR [eax+0x28],0x1
1002e36d:	jne    0x1002e384
1002e36f:	mov    eax,DWORD PTR [ecx]
1002e371:	push   DWORD PTR [ebp+0x8]
1002e374:	mov    BYTE PTR [eax+0x28],0x1
1002e378:	mov    BYTE PTR [ecx+0x28],0x0
1002e37c:	call   0x1002e468
1002e381:	mov    ecx,DWORD PTR [esi+0x8]
1002e384:	mov    al,BYTE PTR [esi+0x28]
1002e387:	push   DWORD PTR [ebp+0x8]
1002e38a:	mov    BYTE PTR [ecx+0x28],al
1002e38d:	mov    BYTE PTR [esi+0x28],0x1
1002e391:	mov    eax,DWORD PTR [ecx+0x8]
1002e394:	mov    ecx,esi
1002e396:	mov    BYTE PTR [eax+0x28],0x1
1002e39a:	call   0x10019368
1002e39f:	jmp    0x1002e426
1002e3a4:	cmp    BYTE PTR [ecx+0x28],0x0
1002e3a8:	jne    0x1002e3be
1002e3aa:	push   DWORD PTR [ebp+0x8]
1002e3ad:	mov    BYTE PTR [ecx+0x28],0x1
1002e3b1:	mov    ecx,esi
1002e3b3:	mov    BYTE PTR [esi+0x28],0x0
1002e3b7:	call   0x1002e468
1002e3bc:	mov    ecx,DWORD PTR [esi]
1002e3be:	cmp    BYTE PTR [ecx+0x29],0x0
1002e3c2:	jne    0x1002e3d9
1002e3c4:	mov    eax,DWORD PTR [ecx+0x8]
1002e3c7:	cmp    BYTE PTR [eax+0x28],0x1
1002e3cb:	jne    0x1002e3ef
1002e3cd:	mov    eax,DWORD PTR [ecx]
1002e3cf:	cmp    BYTE PTR [eax+0x28],0x1
1002e3d3:	jne    0x1002e3ef
1002e3d5:	mov    BYTE PTR [ecx+0x28],0x0
1002e3d9:	mov    ebx,esi
1002e3db:	mov    esi,DWORD PTR [esi+0x4]
1002e3de:	mov    eax,DWORD PTR [ebp+0x8]
1002e3e1:	mov    eax,DWORD PTR [eax+0x4]
1002e3e4:	cmp    ebx,DWORD PTR [eax+0x4]
1002e3e7:	jne    0x1002e31d
1002e3ed:	jmp    0x1002e426
1002e3ef:	mov    eax,DWORD PTR [ecx]
1002e3f1:	cmp    BYTE PTR [eax+0x28],0x1
1002e3f5:	jne    0x1002e40c
1002e3f7:	mov    eax,DWORD PTR [ecx+0x8]
1002e3fa:	push   DWORD PTR [ebp+0x8]
1002e3fd:	mov    BYTE PTR [eax+0x28],0x1
1002e401:	mov    BYTE PTR [ecx+0x28],0x0
1002e405:	call   0x10019368
1002e40a:	mov    ecx,DWORD PTR [esi]
1002e40c:	mov    al,BYTE PTR [esi+0x28]
1002e40f:	push   DWORD PTR [ebp+0x8]
1002e412:	mov    BYTE PTR [ecx+0x28],al
1002e415:	mov    BYTE PTR [esi+0x28],0x1
1002e419:	mov    eax,DWORD PTR [ecx]
1002e41b:	mov    ecx,esi
1002e41d:	mov    BYTE PTR [eax+0x28],0x1
1002e421:	call   0x1002e468
1002e426:	mov    BYTE PTR [ebx+0x28],0x1
1002e42a:	lea    eax,[edi+0x18]
1002e42d:	push   eax
1002e42e:	call   DWORD PTR ds:0x10067284
1002e434:	push   DWORD PTR [edi+0x10]
1002e437:	call   DWORD PTR ds:0x100672b4
1002e43d:	push   edi
1002e43e:	call   0x10042fe2
1002e443:	pop    ecx
1002e444:	mov    ecx,DWORD PTR [ebp+0x8]
1002e447:	mov    eax,DWORD PTR [ecx+0x8]
1002e44a:	test   eax,eax
1002e44c:	jbe    0x1002e452
1002e44e:	dec    eax
1002e44f:	mov    DWORD PTR [ecx+0x8],eax
1002e452:	mov    ecx,DWORD PTR [ebp+0x10]
1002e455:	mov    eax,DWORD PTR [ebp+0xc]
1002e458:	mov    DWORD PTR [eax],ecx
1002e45a:	mov    ecx,DWORD PTR [ebp+0x14]
1002e45d:	mov    DWORD PTR [eax+0x4],ecx
1002e460:	call   0x10059ecd
1002e465:	ret    0x10
1002e468:	mov    eax,DWORD PTR [ecx]
1002e46a:	mov    edx,DWORD PTR [eax+0x8]
1002e46d:	mov    DWORD PTR [ecx],edx
1002e46f:	mov    edx,DWORD PTR [eax+0x8]
1002e472:	cmp    BYTE PTR [edx+0x29],0x0
1002e476:	jne    0x1002e47b
1002e478:	mov    DWORD PTR [edx+0x4],ecx
1002e47b:	mov    edx,DWORD PTR [ecx+0x4]
1002e47e:	mov    DWORD PTR [eax+0x4],edx
1002e481:	mov    edx,DWORD PTR [esp+0x4]
1002e485:	mov    edx,DWORD PTR [edx+0x4]
1002e488:	cmp    ecx,DWORD PTR [edx+0x4]
1002e48b:	jne    0x1002e492
1002e48d:	mov    DWORD PTR [edx+0x4],eax
1002e490:	jmp    0x1002e4a1
1002e492:	mov    edx,DWORD PTR [ecx+0x4]
1002e495:	cmp    ecx,DWORD PTR [edx+0x8]
1002e498:	jne    0x1002e49f
1002e49a:	mov    DWORD PTR [edx+0x8],eax
1002e49d:	jmp    0x1002e4a1
1002e49f:	mov    DWORD PTR [edx],eax
1002e4a1:	mov    DWORD PTR [eax+0x8],ecx
1002e4a4:	mov    DWORD PTR [ecx+0x4],eax
1002e4a7:	ret    0x4
1002e4aa:	push   0x30
1002e4ac:	call   0x10043196
1002e4b1:	xor    edx,edx
1002e4b3:	cmp    eax,edx
1002e4b5:	pop    ecx
1002e4b6:	je     0x1002e4ba
1002e4b8:	mov    DWORD PTR [eax],edx
1002e4ba:	lea    ecx,[eax+0x4]
1002e4bd:	cmp    ecx,edx
1002e4bf:	je     0x1002e4c3
1002e4c1:	mov    DWORD PTR [ecx],edx
1002e4c3:	lea    ecx,[eax+0x8]
1002e4c6:	cmp    ecx,edx
1002e4c8:	je     0x1002e4cc
1002e4ca:	mov    DWORD PTR [ecx],edx
1002e4cc:	mov    BYTE PTR [eax+0x28],0x1
1002e4d0:	mov    BYTE PTR [eax+0x29],dl
1002e4d3:	ret    
1002e4d4:	push   0x8
1002e4d6:	mov    eax,0x100604c7
1002e4db:	call   0x10059e28
1002e4e0:	push   0x30
1002e4e2:	call   0x10043196
1002e4e7:	mov    ebx,eax
1002e4e9:	pop    ecx
1002e4ea:	mov    DWORD PTR [ebp-0x14],ebx
1002e4ed:	test   ebx,ebx
1002e4ef:	mov    DWORD PTR [ebp-0x4],0x1
1002e4f6:	je     0x1002e50c
1002e4f8:	push   DWORD PTR [ebp+0x18]
1002e4fb:	mov    ecx,DWORD PTR [ebp+0x14]
1002e4fe:	push   DWORD PTR [ebp+0x10]
1002e501:	push   DWORD PTR [ebp+0xc]
1002e504:	push   DWORD PTR [ebp+0x8]
1002e507:	call   0x1002e56e
1002e50c:	mov    eax,ebx
1002e50e:	call   0x10059ecd
1002e513:	ret    0x14
1002e516:	push   DWORD PTR [ebp-0x14]
1002e519:	call   0x10042fe2
1002e51e:	pop    ecx
1002e51f:	push   0x0
1002e521:	push   0x0
1002e523:	call   0x10047942
1002e528:	int3   
1002e529:	push   ebx
1002e52a:	push   esi
1002e52b:	push   edi
1002e52c:	mov    edi,DWORD PTR [esp+0x10]
1002e530:	cmp    BYTE PTR [edi+0x29],0x0
1002e534:	mov    ebx,ecx
1002e536:	mov    esi,edi
1002e538:	jne    0x1002e568
1002e53a:	push   DWORD PTR [esi+0x8]
1002e53d:	mov    ecx,ebx
1002e53f:	call   0x1002e529
1002e544:	mov    esi,DWORD PTR [esi]
1002e546:	lea    eax,[edi+0x18]
1002e549:	push   eax
1002e54a:	call   DWORD PTR ds:0x10067284
1002e550:	push   DWORD PTR [edi+0x10]
1002e553:	call   DWORD PTR ds:0x100672b4
1002e559:	push   edi
1002e55a:	call   0x10042fe2
1002e55f:	cmp    BYTE PTR [esi+0x29],0x0
1002e563:	pop    ecx
1002e564:	mov    edi,esi
1002e566:	je     0x1002e53a
1002e568:	pop    edi
1002e569:	pop    esi
1002e56a:	pop    ebx
1002e56b:	ret    0x4
1002e56e:	push   0x0
1002e570:	mov    eax,0x100604a7
1002e575:	call   0x10059df5
1002e57a:	mov    esi,ecx
1002e57c:	mov    eax,DWORD PTR [ebp+0x8]
1002e57f:	mov    DWORD PTR [ebx],eax
1002e581:	mov    eax,DWORD PTR [ebp+0xc]
1002e584:	mov    DWORD PTR [ebx+0x4],eax
1002e587:	mov    eax,DWORD PTR [ebp+0x10]
1002e58a:	lea    edi,[ebx+0x10]
1002e58d:	mov    DWORD PTR [ebx+0x8],eax
1002e590:	mov    DWORD PTR [ebp+0x8],edi
1002e593:	call   0x1002abda
1002e598:	and    DWORD PTR [ebp-0x4],0x0
1002e59c:	add    esi,0x8
1002e59f:	lea    eax,[edi+0x8]
1002e5a2:	and    WORD PTR [eax],0x0
1002e5a6:	push   esi
1002e5a7:	mov    esi,eax
1002e5a9:	call   0x1002ac08
1002e5ae:	mov    al,BYTE PTR [ebp+0x14]
1002e5b1:	mov    BYTE PTR [ebx+0x28],al
1002e5b4:	mov    BYTE PTR [ebx+0x29],0x0
1002e5b8:	mov    eax,ebx
1002e5ba:	call   0x10059ecd
1002e5bf:	ret    0x10
1002e5c2:	push   0xc
1002e5c4:	mov    eax,0x10061ee4
1002e5c9:	call   0x10059e28
1002e5ce:	mov    ebx,DWORD PTR [ebp+0x8]
1002e5d1:	xor    esi,esi
1002e5d3:	cmp    ebx,esi
1002e5d5:	jne    0x1002e5de
1002e5d7:	mov    eax,0x80004003
1002e5dc:	jmp    0x1002e642
1002e5de:	push   0x14
1002e5e0:	mov    DWORD PTR [ebx],esi
1002e5e2:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e5e9:	mov    DWORD PTR [ebp-0x18],esi
1002e5ec:	mov    DWORD PTR [ebp-0x4],esi
1002e5ef:	call   0x10043196
1002e5f4:	mov    edi,eax
1002e5f6:	cmp    edi,esi
1002e5f8:	pop    ecx
1002e5f9:	je     0x1002e61f
1002e5fb:	mov    DWORD PTR [edi+0x10],esi
1002e5fe:	lea    esi,[edi+0x4]
1002e601:	mov    DWORD PTR [edi],0x1007424c
1002e607:	call   0x1002d2d4
1002e60c:	mov    DWORD PTR [edi],0x10074214
1002e612:	mov    ecx,DWORD PTR ds:0x10082c64
1002e618:	mov    eax,DWORD PTR [ecx]
1002e61a:	call   DWORD PTR [eax+0x4]
1002e61d:	jmp    0x1002e62f
1002e61f:	xor    edi,edi
1002e621:	jmp    0x1002e62f
1002e623:	mov    eax,0x1002e629
1002e628:	ret    
1002e629:	mov    ebx,DWORD PTR [ebp+0x8]
1002e62c:	mov    edi,DWORD PTR [ebp-0x18]
1002e62f:	test   edi,edi
1002e631:	je     0x1002e63d
1002e633:	inc    DWORD PTR [edi+0x10]
1002e636:	and    DWORD PTR [ebp-0x14],0x0
1002e63a:	dec    DWORD PTR [edi+0x10]
1002e63d:	mov    eax,DWORD PTR [ebp-0x14]
1002e640:	mov    DWORD PTR [ebx],edi
1002e642:	call   0x10059ecd
1002e647:	ret    0x4
1002e64a:	push   0xc
1002e64c:	mov    eax,0x10060f1e
1002e651:	call   0x10059e28
1002e656:	mov    ebx,DWORD PTR [ebp+0x8]
1002e659:	xor    edi,edi
1002e65b:	cmp    ebx,edi
1002e65d:	jne    0x1002e666
1002e65f:	mov    eax,0x80004003
1002e664:	jmp    0x1002e6c2
1002e666:	push   0x18
1002e668:	mov    DWORD PTR [ebx],edi
1002e66a:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e671:	mov    DWORD PTR [ebp-0x4],edi
1002e674:	call   0x10043196
1002e679:	mov    esi,eax
1002e67b:	cmp    esi,edi
1002e67d:	pop    ecx
1002e67e:	je     0x1002e69f
1002e680:	mov    DWORD PTR [esi+0x14],edi
1002e683:	mov    DWORD PTR [esi+0x8],edi
1002e686:	mov    DWORD PTR [esi+0xc],edi
1002e689:	mov    DWORD PTR [esi+0x10],edi
1002e68c:	mov    DWORD PTR [esi],0x100741e4
1002e692:	mov    ecx,DWORD PTR ds:0x10082c64
1002e698:	mov    eax,DWORD PTR [ecx]
1002e69a:	call   DWORD PTR [eax+0x4]
1002e69d:	jmp    0x1002e6b0
1002e69f:	xor    esi,esi
1002e6a1:	jmp    0x1002e6b0
1002e6a3:	mov    eax,0x1002e6a9
1002e6a8:	ret    
1002e6a9:	mov    ebx,DWORD PTR [ebp+0x8]
1002e6ac:	xor    edi,edi
1002e6ae:	mov    esi,edi
1002e6b0:	cmp    esi,edi
1002e6b2:	je     0x1002e6bd
1002e6b4:	inc    DWORD PTR [esi+0x14]
1002e6b7:	dec    DWORD PTR [esi+0x14]
1002e6ba:	mov    DWORD PTR [ebp-0x14],edi
1002e6bd:	mov    eax,DWORD PTR [ebp-0x14]
1002e6c0:	mov    DWORD PTR [ebx],esi
1002e6c2:	call   0x10059ecd
1002e6c7:	ret    0x4
1002e6ca:	push   0xc
1002e6cc:	mov    eax,0x1005fe8d
1002e6d1:	call   0x10059e28
1002e6d6:	mov    ebx,DWORD PTR [ebp+0x8]
1002e6d9:	xor    edi,edi
1002e6db:	cmp    ebx,edi
1002e6dd:	jne    0x1002e6e6
1002e6df:	mov    eax,0x80004003
1002e6e4:	jmp    0x1002e748
1002e6e6:	push   0x20
1002e6e8:	mov    DWORD PTR [ebx],edi
1002e6ea:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e6f1:	mov    DWORD PTR [ebp-0x4],edi
1002e6f4:	call   0x10043196
1002e6f9:	mov    esi,eax
1002e6fb:	cmp    esi,edi
1002e6fd:	pop    ecx
1002e6fe:	je     0x1002e725
1002e700:	mov    DWORD PTR [esi+0x4],edi
1002e703:	mov    DWORD PTR [esi+0x8],edi
1002e706:	mov    DWORD PTR [esi+0xc],edi
1002e709:	mov    DWORD PTR [esi+0x10],edi
1002e70c:	mov    DWORD PTR [esi+0x14],edi
1002e70f:	mov    DWORD PTR [esi+0x18],edi
1002e712:	mov    DWORD PTR [esi],0x100741ac
1002e718:	mov    ecx,DWORD PTR ds:0x10082c64
1002e71e:	mov    eax,DWORD PTR [ecx]
1002e720:	call   DWORD PTR [eax+0x4]
1002e723:	jmp    0x1002e736
1002e725:	xor    esi,esi
1002e727:	jmp    0x1002e736
1002e729:	mov    eax,0x1002e72f
1002e72e:	ret    
1002e72f:	mov    ebx,DWORD PTR [ebp+0x8]
1002e732:	xor    edi,edi
1002e734:	mov    esi,edi
1002e736:	cmp    esi,edi
1002e738:	je     0x1002e743
1002e73a:	inc    DWORD PTR [esi+0x4]
1002e73d:	dec    DWORD PTR [esi+0x4]
1002e740:	mov    DWORD PTR [ebp-0x14],edi
1002e743:	mov    eax,DWORD PTR [ebp-0x14]
1002e746:	mov    DWORD PTR [ebx],esi
1002e748:	call   0x10059ecd
1002e74d:	ret    0x4
1002e750:	push   ebp
1002e751:	mov    ebp,esp
1002e753:	mov    edx,DWORD PTR [ebp+0x10]
1002e756:	xor    ecx,ecx
1002e758:	sub    esp,0x1c
1002e75b:	cmp    edx,ecx
1002e75d:	je     0x1002e850
1002e763:	cmp    DWORD PTR [ebp+0xc],0x1
1002e767:	je     0x1002e772
1002e769:	cmp    DWORD PTR [ebp+0x14],ecx
1002e76c:	je     0x1002e850
1002e772:	mov    eax,DWORD PTR [ebp+0x14]
1002e775:	cmp    eax,ecx
1002e777:	je     0x1002e77b
1002e779:	mov    DWORD PTR [eax],ecx
1002e77b:	mov    eax,DWORD PTR [ebp+0x8]
1002e77e:	cmp    DWORD PTR [eax+0x8],ecx
1002e781:	jne    0x1002e78d
1002e783:	mov    eax,0x80004005
1002e788:	jmp    0x1002e855
1002e78d:	push   ebx
1002e78e:	push   esi
1002e78f:	push   edi
1002e790:	mov    DWORD PTR [ebp-0x4],ecx
1002e793:	mov    DWORD PTR [ebp-0x8],ecx
1002e796:	mov    DWORD PTR [ebp-0xc],edx
1002e799:	lea    esi,[eax+0xc]
1002e79c:	jmp    0x1002e7a1
1002e79e:	mov    eax,DWORD PTR [ebp+0x8]
1002e7a1:	mov    edi,DWORD PTR [eax+0x8]
1002e7a4:	mov    ebx,DWORD PTR [edi+0x8]
1002e7a7:	cmp    DWORD PTR [edi+0x4],ebx
1002e7aa:	jbe    0x1002e7b1
1002e7ac:	call   0x10043605
1002e7b1:	mov    DWORD PTR [ebp-0x14],edi
1002e7b4:	lea    edi,[ebp-0x14]
1002e7b7:	mov    DWORD PTR [ebp-0x10],ebx
1002e7ba:	call   0x1002da08
1002e7bf:	test   al,al
1002e7c1:	je     0x1002e813
1002e7c3:	mov    eax,DWORD PTR [ebp-0x4]
1002e7c6:	cmp    eax,DWORD PTR [ebp+0xc]
1002e7c9:	jae    0x1002e813
1002e7cb:	xor    ebx,ebx
1002e7cd:	cmp    DWORD PTR [esi],ebx
1002e7cf:	jne    0x1002e7d6
1002e7d1:	call   0x10043605
1002e7d6:	mov    eax,DWORD PTR [esi]
1002e7d8:	mov    ecx,DWORD PTR [esi+0x4]
1002e7db:	cmp    ecx,DWORD PTR [eax+0x8]
1002e7de:	jb     0x1002e7e5
1002e7e0:	call   0x10043605
1002e7e5:	mov    eax,DWORD PTR [esi+0x4]
1002e7e8:	mov    edi,DWORD PTR [ebp-0xc]
1002e7eb:	push   eax
1002e7ec:	push   edi
1002e7ed:	mov    WORD PTR [edi],bx
1002e7f0:	call   DWORD PTR ds:0x10067280
1002e7f6:	cmp    eax,ebx
1002e7f8:	mov    DWORD PTR [ebp-0x8],eax
1002e7fb:	jl     0x1002e846
1002e7fd:	add    edi,0x10
1002e800:	mov    DWORD PTR [ebp-0xc],edi
1002e803:	lea    edi,[ebp-0x1c]
1002e806:	call   0x1002d9de
1002e80b:	inc    DWORD PTR [ebp-0x4]
1002e80e:	cmp    DWORD PTR [ebp-0x8],ebx
1002e811:	jge    0x1002e79e
1002e813:	cmp    DWORD PTR [ebp-0x8],0x0
1002e817:	pop    edi
1002e818:	pop    esi
1002e819:	pop    ebx
1002e81a:	jl     0x1002e834
1002e81c:	mov    eax,DWORD PTR [ebp+0x14]
1002e81f:	test   eax,eax
1002e821:	mov    ecx,DWORD PTR [ebp-0x4]
1002e824:	je     0x1002e828
1002e826:	mov    DWORD PTR [eax],ecx
1002e828:	cmp    ecx,DWORD PTR [ebp+0xc]
1002e82b:	jae    0x1002e834
1002e82d:	mov    DWORD PTR [ebp-0x8],0x1
1002e834:	mov    eax,DWORD PTR [ebp-0x8]
1002e837:	jmp    0x1002e855
1002e839:	push   DWORD PTR [ebp+0x10]
1002e83c:	call   DWORD PTR ds:0x10067284
1002e842:	add    DWORD PTR [ebp+0x10],0x10
1002e846:	cmp    DWORD PTR [ebp+0x10],edi
1002e849:	jb     0x1002e839
1002e84b:	mov    DWORD PTR [ebp-0x4],ebx
1002e84e:	jmp    0x1002e80e
1002e850:	mov    eax,0x80004003
1002e855:	leave  
1002e856:	ret    0x10
1002e859:	push   ebp
1002e85a:	mov    ebp,esp
1002e85c:	sub    esp,0x14
1002e85f:	and    DWORD PTR [ebp-0x4],0x0
1002e863:	cmp    DWORD PTR [ebp+0xc],0x0
1002e867:	je     0x1002e8b4
1002e869:	push   ebx
1002e86a:	mov    ebx,DWORD PTR [ebp+0x8]
1002e86d:	push   esi
1002e86e:	push   edi
1002e86f:	mov    edi,DWORD PTR [ebx+0x8]
1002e872:	mov    esi,DWORD PTR [edi+0x8]
1002e875:	dec    DWORD PTR [ebp+0xc]
1002e878:	cmp    DWORD PTR [edi+0x4],esi
1002e87b:	jbe    0x1002e882
1002e87d:	call   0x10043605
1002e882:	mov    DWORD PTR [ebp-0xc],edi
1002e885:	mov    DWORD PTR [ebp-0x8],esi
1002e888:	lea    edi,[ebp-0xc]
1002e88b:	lea    esi,[ebx+0xc]
1002e88e:	call   0x1002da08
1002e893:	test   al,al
1002e895:	je     0x1002e8aa
1002e897:	lea    edi,[ebp-0x14]
1002e89a:	lea    esi,[ebx+0xc]
1002e89d:	call   0x1002d9de
1002e8a2:	cmp    DWORD PTR [ebp+0xc],0x0
1002e8a6:	jne    0x1002e86f
1002e8a8:	jmp    0x1002e8b1
1002e8aa:	mov    DWORD PTR [ebp-0x4],0x1
1002e8b1:	pop    edi
1002e8b2:	pop    esi
1002e8b3:	pop    ebx
1002e8b4:	mov    eax,DWORD PTR [ebp-0x4]
1002e8b7:	leave  
1002e8b8:	ret    0x8
1002e8bb:	push   ebp
1002e8bc:	mov    ebp,esp
1002e8be:	push   ecx
1002e8bf:	mov    eax,DWORD PTR [ebp+0xc]
1002e8c2:	test   eax,eax
1002e8c4:	push   ebx
1002e8c5:	mov    ebx,0x80004003
1002e8ca:	je     0x1002e92d
1002e8cc:	and    DWORD PTR [eax],0x0
1002e8cf:	lea    eax,[ebp-0x4]
1002e8d2:	push   eax
1002e8d3:	call   0x1002e934
1002e8d8:	mov    ebx,eax
1002e8da:	test   ebx,ebx
1002e8dc:	jl     0x1002e92d
1002e8de:	push   esi
1002e8df:	mov    esi,DWORD PTR [ebp+0x8]
1002e8e2:	mov    eax,DWORD PTR [esi+0x4]
1002e8e5:	push   edi
1002e8e6:	mov    edi,DWORD PTR [ebp-0x4]
1002e8e9:	push   DWORD PTR [esi+0x8]
1002e8ec:	mov    ebx,edi
1002e8ee:	call   0x1002da6a
1002e8f3:	mov    ebx,eax
1002e8f5:	test   ebx,ebx
1002e8f7:	jl     0x1002e91e
1002e8f9:	mov    eax,DWORD PTR [esi+0xc]
1002e8fc:	mov    ebx,DWORD PTR [ebp+0xc]
1002e8ff:	mov    DWORD PTR [edi+0xc],eax
1002e902:	mov    eax,DWORD PTR [esi+0x10]
1002e905:	push   0x10073e3c
1002e90a:	mov    DWORD PTR [edi+0x10],eax
1002e90d:	push   edi
1002e90e:	mov    eax,0x1007416c
1002e913:	call   0x10010824
1002e918:	mov    ebx,eax
1002e91a:	test   ebx,ebx
1002e91c:	jge    0x1002e92b
1002e91e:	test   edi,edi
1002e920:	je     0x1002e92b
1002e922:	mov    eax,DWORD PTR [edi]
1002e924:	push   0x1
1002e926:	mov    ecx,edi
1002e928:	call   DWORD PTR [eax+0x1c]
1002e92b:	pop    edi
1002e92c:	pop    esi
1002e92d:	mov    eax,ebx
1002e92f:	pop    ebx
1002e930:	leave  
1002e931:	ret    0x8
1002e934:	push   0xc
1002e936:	mov    eax,0x1005fe72
1002e93b:	call   0x10059e28
1002e940:	mov    ebx,DWORD PTR [ebp+0x8]
1002e943:	xor    edi,edi
1002e945:	cmp    ebx,edi
1002e947:	jne    0x1002e950
1002e949:	mov    eax,0x80004003
1002e94e:	jmp    0x1002e9a6
1002e950:	push   0x18
1002e952:	mov    DWORD PTR [ebx],edi
1002e954:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e95b:	mov    DWORD PTR [ebp-0x4],edi
1002e95e:	call   0x10043196
1002e963:	mov    esi,eax
1002e965:	cmp    esi,edi
1002e967:	pop    ecx
1002e968:	je     0x1002e989
1002e96a:	mov    DWORD PTR [esi+0x4],edi
1002e96d:	mov    DWORD PTR [esi+0xc],edi
1002e970:	mov    DWORD PTR [esi+0x10],edi
1002e973:	mov    DWORD PTR [esi+0x14],edi
1002e976:	mov    DWORD PTR [esi],0x10074288
1002e97c:	mov    ecx,DWORD PTR ds:0x10082c64
1002e982:	mov    eax,DWORD PTR [ecx]
1002e984:	call   DWORD PTR [eax+0x4]
1002e987:	jmp    0x1002e99a
1002e989:	xor    esi,esi
1002e98b:	jmp    0x1002e99a
1002e98d:	mov    eax,0x1002e993
1002e992:	ret    
1002e993:	mov    ebx,DWORD PTR [ebp+0x8]
1002e996:	xor    edi,edi
1002e998:	mov    esi,edi
1002e99a:	cmp    esi,edi
1002e99c:	je     0x1002e9a1
1002e99e:	mov    DWORD PTR [ebp-0x14],edi
1002e9a1:	mov    eax,DWORD PTR [ebp-0x14]
1002e9a4:	mov    DWORD PTR [ebx],esi
1002e9a6:	call   0x10059ecd
1002e9ab:	ret    0x4
1002e9ae:	push   0xc
1002e9b0:	mov    eax,0x10061ec9
1002e9b5:	call   0x10059e28
1002e9ba:	mov    ebx,DWORD PTR [ebp+0x8]
1002e9bd:	xor    esi,esi
1002e9bf:	cmp    ebx,esi
1002e9c1:	jne    0x1002e9ca
1002e9c3:	mov    eax,0x80004003
1002e9c8:	jmp    0x1002ea22
1002e9ca:	push   0x14
1002e9cc:	mov    DWORD PTR [ebx],esi
1002e9ce:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e9d5:	mov    DWORD PTR [ebp-0x18],esi
1002e9d8:	mov    DWORD PTR [ebp-0x4],esi
1002e9db:	call   0x10043196
1002e9e0:	mov    edi,eax
1002e9e2:	cmp    edi,esi
1002e9e4:	pop    ecx
1002e9e5:	je     0x1002ea05
1002e9e7:	mov    DWORD PTR [edi+0x4],esi
1002e9ea:	lea    esi,[edi+0x8]
1002e9ed:	call   0x1002d2d4
1002e9f2:	mov    DWORD PTR [edi],0x100742a8
1002e9f8:	mov    ecx,DWORD PTR ds:0x10082c64
1002e9fe:	mov    eax,DWORD PTR [ecx]
1002ea00:	call   DWORD PTR [eax+0x4]
1002ea03:	jmp    0x1002ea15
1002ea05:	xor    edi,edi
1002ea07:	jmp    0x1002ea15
1002ea09:	mov    eax,0x1002ea0f
1002ea0e:	ret    
1002ea0f:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea12:	mov    edi,DWORD PTR [ebp-0x18]
1002ea15:	test   edi,edi
1002ea17:	je     0x1002ea1d
1002ea19:	and    DWORD PTR [ebp-0x14],0x0
1002ea1d:	mov    eax,DWORD PTR [ebp-0x14]
1002ea20:	mov    DWORD PTR [ebx],edi
1002ea22:	call   0x10059ecd
1002ea27:	ret    0x4
1002ea2a:	push   ebp
1002ea2b:	mov    ebp,esp
1002ea2d:	push   ecx
1002ea2e:	test   edi,edi
1002ea30:	jne    0x1002ea39
1002ea32:	mov    eax,0x80004003
1002ea37:	leave  
1002ea38:	ret    
1002ea39:	and    DWORD PTR [edi],0x0
1002ea3c:	and    DWORD PTR [ebp-0x4],0x0
1002ea40:	lea    eax,[ebp-0x4]
1002ea43:	push   eax
1002ea44:	call   0x1002ec32
1002ea49:	test   eax,eax
1002ea4b:	jl     0x1002ea85
1002ea4d:	mov    eax,DWORD PTR [ebp+0x8]
1002ea50:	push   ebx
1002ea51:	mov    ebx,DWORD PTR [ebp-0x4]
1002ea54:	push   esi
1002ea55:	push   DWORD PTR [ebp+0xc]
1002ea58:	call   0x1002db7d
1002ea5d:	mov    esi,eax
1002ea5f:	test   esi,esi
1002ea61:	jl     0x1002ea74
1002ea63:	mov    eax,DWORD PTR [ebx]
1002ea65:	push   edi
1002ea66:	push   0x1006eecc
1002ea6b:	push   ebx
1002ea6c:	call   DWORD PTR [eax]
1002ea6e:	mov    esi,eax
1002ea70:	test   esi,esi
1002ea72:	jge    0x1002ea81
1002ea74:	test   ebx,ebx
1002ea76:	je     0x1002ea81
1002ea78:	mov    eax,DWORD PTR [ebx]
1002ea7a:	push   0x1
1002ea7c:	mov    ecx,ebx
1002ea7e:	call   DWORD PTR [eax+0x1c]
1002ea81:	mov    eax,esi
1002ea83:	pop    esi
1002ea84:	pop    ebx
1002ea85:	leave  
1002ea86:	ret    
1002ea87:	push   ebp
1002ea88:	mov    ebp,esp
1002ea8a:	sub    esp,0x10
1002ea8d:	push   ebx
1002ea8e:	mov    ebx,DWORD PTR [ebp+0x10]
1002ea91:	xor    ecx,ecx
1002ea93:	cmp    ebx,ecx
1002ea95:	je     0x1002eb5d
1002ea9b:	cmp    DWORD PTR [ebp+0xc],0x1
1002ea9f:	je     0x1002eaaa
1002eaa1:	cmp    DWORD PTR [ebp+0x14],ecx
1002eaa4:	je     0x1002eb5d
1002eaaa:	mov    eax,DWORD PTR [ebp+0x14]
1002eaad:	cmp    eax,ecx
1002eaaf:	je     0x1002eab3
1002eab1:	mov    DWORD PTR [eax],ecx
1002eab3:	mov    eax,DWORD PTR [ebp+0x8]
1002eab6:	cmp    DWORD PTR [eax+0x8],ecx
1002eab9:	jne    0x1002eac5
1002eabb:	mov    eax,0x80004005
1002eac0:	jmp    0x1002eb62
1002eac5:	push   esi
1002eac6:	push   edi
1002eac7:	mov    DWORD PTR [ebp-0x4],ecx
1002eaca:	mov    DWORD PTR [ebp-0x8],ecx
1002eacd:	lea    esi,[eax+0xc]
1002ead0:	jmp    0x1002ead5
1002ead2:	mov    eax,DWORD PTR [ebp+0x8]
1002ead5:	mov    eax,DWORD PTR [eax+0x8]
1002ead8:	mov    ecx,DWORD PTR [eax+0x4]
1002eadb:	lea    edi,[ebp-0x10]
1002eade:	mov    DWORD PTR [ebp-0xc],ecx
1002eae1:	mov    DWORD PTR [ebp-0x10],eax
1002eae4:	call   0x10004b0c
1002eae9:	test   al,al
1002eaeb:	jne    0x1002eb21
1002eaed:	mov    eax,DWORD PTR [ebp-0x4]
1002eaf0:	cmp    eax,DWORD PTR [ebp+0xc]
1002eaf3:	jae    0x1002eb21
1002eaf5:	call   0x1002d45f
1002eafa:	add    eax,0x8
1002eafd:	push   eax
1002eafe:	xor    edi,edi
1002eb00:	push   ebx
1002eb01:	mov    WORD PTR [ebx],di
1002eb04:	call   DWORD PTR ds:0x10067280
1002eb0a:	cmp    eax,edi
1002eb0c:	mov    DWORD PTR [ebp-0x8],eax
1002eb0f:	jl     0x1002eb53
1002eb11:	add    ebx,0x10
1002eb14:	call   0x1001970d
1002eb19:	inc    DWORD PTR [ebp-0x4]
1002eb1c:	cmp    DWORD PTR [ebp-0x8],edi
1002eb1f:	jge    0x1002ead2
1002eb21:	cmp    DWORD PTR [ebp-0x8],0x0
1002eb25:	pop    edi
1002eb26:	pop    esi
1002eb27:	jl     0x1002eb41
1002eb29:	mov    eax,DWORD PTR [ebp+0x14]
1002eb2c:	test   eax,eax
1002eb2e:	mov    ecx,DWORD PTR [ebp-0x4]
1002eb31:	je     0x1002eb35
1002eb33:	mov    DWORD PTR [eax],ecx
1002eb35:	cmp    ecx,DWORD PTR [ebp+0xc]
1002eb38:	jae    0x1002eb41
1002eb3a:	mov    DWORD PTR [ebp-0x8],0x1
1002eb41:	mov    eax,DWORD PTR [ebp-0x8]
1002eb44:	jmp    0x1002eb62
1002eb46:	push   DWORD PTR [ebp+0x10]
1002eb49:	call   DWORD PTR ds:0x10067284
1002eb4f:	add    DWORD PTR [ebp+0x10],0x10
1002eb53:	cmp    DWORD PTR [ebp+0x10],ebx
1002eb56:	jb     0x1002eb46
1002eb58:	mov    DWORD PTR [ebp-0x4],edi
1002eb5b:	jmp    0x1002eb1c
1002eb5d:	mov    eax,0x80004003
1002eb62:	pop    ebx
1002eb63:	leave  
1002eb64:	ret    0x10
1002eb67:	push   ebp
1002eb68:	mov    ebp,esp
1002eb6a:	sub    esp,0xc
1002eb6d:	and    DWORD PTR [ebp-0x4],0x0
1002eb71:	cmp    DWORD PTR [ebp+0xc],0x0
1002eb75:	je     0x1002ebb2
1002eb77:	push   ebx
1002eb78:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb7b:	push   esi
1002eb7c:	lea    esi,[ebx+0xc]
1002eb7f:	push   edi
1002eb80:	mov    eax,DWORD PTR [ebx+0x8]
1002eb83:	mov    ecx,DWORD PTR [eax+0x4]
1002eb86:	dec    DWORD PTR [ebp+0xc]
1002eb89:	lea    edi,[ebp-0xc]
1002eb8c:	mov    DWORD PTR [ebp-0x8],ecx
1002eb8f:	mov    DWORD PTR [ebp-0xc],eax
1002eb92:	call   0x10004b0c
1002eb97:	test   al,al
1002eb99:	jne    0x1002eba8
1002eb9b:	call   0x1001970d
1002eba0:	cmp    DWORD PTR [ebp+0xc],0x0
1002eba4:	jne    0x1002eb80
1002eba6:	jmp    0x1002ebaf
1002eba8:	mov    DWORD PTR [ebp-0x4],0x1
1002ebaf:	pop    edi
1002ebb0:	pop    esi
1002ebb1:	pop    ebx
1002ebb2:	mov    eax,DWORD PTR [ebp-0x4]
1002ebb5:	leave  
1002ebb6:	ret    0x8
1002ebb9:	push   ebp
1002ebba:	mov    ebp,esp
1002ebbc:	push   ecx
1002ebbd:	mov    eax,DWORD PTR [ebp+0xc]
1002ebc0:	test   eax,eax
1002ebc2:	push   ebx
1002ebc3:	mov    ebx,0x80004003
1002ebc8:	je     0x1002ec2b
1002ebca:	and    DWORD PTR [eax],0x0
1002ebcd:	lea    eax,[ebp-0x4]
1002ebd0:	push   eax
1002ebd1:	call   0x1002ec32
1002ebd6:	mov    ebx,eax
1002ebd8:	test   ebx,ebx
1002ebda:	jl     0x1002ec2b
1002ebdc:	push   esi
1002ebdd:	mov    esi,DWORD PTR [ebp+0x8]
1002ebe0:	mov    eax,DWORD PTR [esi+0x4]
1002ebe3:	push   edi
1002ebe4:	mov    edi,DWORD PTR [ebp-0x4]
1002ebe7:	push   DWORD PTR [esi+0x8]
1002ebea:	mov    ebx,edi
1002ebec:	call   0x1002db7d
1002ebf1:	mov    ebx,eax
1002ebf3:	test   ebx,ebx
1002ebf5:	jl     0x1002ec1c
1002ebf7:	mov    eax,DWORD PTR [esi+0xc]
1002ebfa:	mov    ebx,DWORD PTR [ebp+0xc]
1002ebfd:	mov    DWORD PTR [edi+0xc],eax
1002ec00:	mov    eax,DWORD PTR [esi+0x10]
1002ec03:	push   0x10073e3c
1002ec08:	mov    DWORD PTR [edi+0x10],eax
1002ec0b:	push   edi
1002ec0c:	mov    eax,0x1007416c
1002ec11:	call   0x10010824
1002ec16:	mov    ebx,eax
1002ec18:	test   ebx,ebx
1002ec1a:	jge    0x1002ec29
1002ec1c:	test   edi,edi
1002ec1e:	je     0x1002ec29
1002ec20:	mov    eax,DWORD PTR [edi]
1002ec22:	push   0x1
1002ec24:	mov    ecx,edi
1002ec26:	call   DWORD PTR [eax+0x1c]
1002ec29:	pop    edi
1002ec2a:	pop    esi
1002ec2b:	mov    eax,ebx
1002ec2d:	pop    ebx
1002ec2e:	leave  
1002ec2f:	ret    0x8
1002ec32:	push   0xc
1002ec34:	mov    eax,0x1005fe57
1002ec39:	call   0x10059e28
1002ec3e:	mov    ebx,DWORD PTR [ebp+0x8]
1002ec41:	xor    edi,edi
1002ec43:	cmp    ebx,edi
1002ec45:	jne    0x1002ec4e
1002ec47:	mov    eax,0x80004003
1002ec4c:	jmp    0x1002eca4
1002ec4e:	push   0x18
1002ec50:	mov    DWORD PTR [ebx],edi
1002ec52:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ec59:	mov    DWORD PTR [ebp-0x4],edi
1002ec5c:	call   0x10043196
1002ec61:	mov    esi,eax
1002ec63:	cmp    esi,edi
1002ec65:	pop    ecx
1002ec66:	je     0x1002ec87
1002ec68:	mov    DWORD PTR [esi+0x4],edi
1002ec6b:	mov    DWORD PTR [esi+0xc],edi
1002ec6e:	mov    DWORD PTR [esi+0x10],edi
1002ec71:	mov    DWORD PTR [esi+0x14],edi
1002ec74:	mov    DWORD PTR [esi],0x100742b8
1002ec7a:	mov    ecx,DWORD PTR ds:0x10082c64
1002ec80:	mov    eax,DWORD PTR [ecx]
1002ec82:	call   DWORD PTR [eax+0x4]
1002ec85:	jmp    0x1002ec98
1002ec87:	xor    esi,esi
1002ec89:	jmp    0x1002ec98
1002ec8b:	mov    eax,0x1002ec91
1002ec90:	ret    
1002ec91:	mov    ebx,DWORD PTR [ebp+0x8]
1002ec94:	xor    edi,edi
1002ec96:	mov    esi,edi
1002ec98:	cmp    esi,edi
1002ec9a:	je     0x1002ec9f
1002ec9c:	mov    DWORD PTR [ebp-0x14],edi
1002ec9f:	mov    eax,DWORD PTR [ebp-0x14]
1002eca2:	mov    DWORD PTR [ebx],esi
1002eca4:	call   0x10059ecd
1002eca9:	ret    0x4
1002ecac:	push   ebp
1002ecad:	mov    ebp,esp
1002ecaf:	push   ecx
1002ecb0:	push   edi
1002ecb1:	xor    eax,eax
1002ecb3:	lea    edi,[ebp-0x4]
1002ecb6:	stos   BYTE PTR es:[edi],al
1002ecb7:	push   DWORD PTR [ebp-0x4]
1002ecba:	push   DWORD PTR [ebp+0xc]
1002ecbd:	push   DWORD PTR [ebp+0xc]
1002ecc0:	push   DWORD PTR [ebp+0x8]
1002ecc3:	call   0x1002ee28
1002ecc8:	add    esp,0x10
1002eccb:	pop    edi
1002eccc:	leave  
1002eccd:	ret    0x8
1002ecd0:	push   ebx
1002ecd1:	push   esi
1002ecd2:	push   edi
1002ecd3:	mov    ebx,eax
1002ecd5:	mov    eax,DWORD PTR [ebx+0x4]
1002ecd8:	mov    esi,ecx
1002ecda:	mov    edi,DWORD PTR [esi+0x4]
1002ecdd:	add    eax,0x4
1002ece0:	push   edi
1002ece1:	push   DWORD PTR [eax]
1002ece3:	call   0x1002ed2c
1002ece8:	mov    DWORD PTR [edi+0x4],eax
1002eceb:	mov    eax,DWORD PTR [ebx+0x8]
1002ecee:	mov    DWORD PTR [esi+0x8],eax
1002ecf1:	mov    eax,DWORD PTR [esi+0x4]
1002ecf4:	mov    ecx,DWORD PTR [eax+0x4]
1002ecf7:	xor    bl,bl
1002ecf9:	cmp    BYTE PTR [ecx+0x29],bl
1002ecfc:	je     0x1002ed0c
1002ecfe:	mov    DWORD PTR [eax],eax
1002ed00:	mov    esi,DWORD PTR [esi+0x4]
1002ed03:	mov    DWORD PTR [esi+0x8],esi
1002ed06:	pop    edi
1002ed07:	pop    esi
1002ed08:	pop    ebx
1002ed09:	ret    
1002ed0a:	mov    ecx,edx
1002ed0c:	mov    edx,DWORD PTR [ecx]
1002ed0e:	cmp    BYTE PTR [edx+0x29],bl
1002ed11:	je     0x1002ed0a
1002ed13:	mov    DWORD PTR [eax],ecx
1002ed15:	mov    esi,DWORD PTR [esi+0x4]
1002ed18:	mov    ecx,DWORD PTR [esi+0x4]
1002ed1b:	jmp    0x1002ed1f
1002ed1d:	mov    ecx,eax
1002ed1f:	mov    eax,DWORD PTR [ecx+0x8]
1002ed22:	cmp    BYTE PTR [eax+0x29],bl
1002ed25:	je     0x1002ed1d
1002ed27:	mov    DWORD PTR [esi+0x8],ecx
1002ed2a:	jmp    0x1002ed06
1002ed2c:	push   0xc
1002ed2e:	mov    eax,0x10060f03
1002ed33:	call   0x10059e28
1002ed38:	mov    edi,ecx
1002ed3a:	mov    DWORD PTR [ebp-0x18],edi
1002ed3d:	mov    esi,DWORD PTR [ebp+0x8]
1002ed40:	cmp    BYTE PTR [esi+0x29],0x0
1002ed44:	mov    eax,DWORD PTR [edi+0x4]
1002ed47:	mov    DWORD PTR [ebp-0x14],eax
1002ed4a:	jne    0x1002ed8b
1002ed4c:	movzx  ecx,BYTE PTR [esi+0x28]
1002ed50:	push   ecx
1002ed51:	lea    ecx,[esi+0x10]
1002ed54:	push   ecx
1002ed55:	push   eax
1002ed56:	push   DWORD PTR [ebp+0xc]
1002ed59:	push   eax
1002ed5a:	call   0x1002e4d4
1002ed5f:	mov    ebx,eax
1002ed61:	mov    eax,DWORD PTR [ebp-0x14]
1002ed64:	cmp    BYTE PTR [eax+0x29],0x0
1002ed68:	je     0x1002ed6d
1002ed6a:	mov    DWORD PTR [ebp-0x14],ebx
1002ed6d:	and    DWORD PTR [ebp-0x4],0x0
1002ed71:	push   ebx
1002ed72:	push   DWORD PTR [esi]
1002ed74:	mov    ecx,edi
1002ed76:	call   0x1002ed2c
1002ed7b:	push   ebx
1002ed7c:	mov    DWORD PTR [ebx],eax
1002ed7e:	push   DWORD PTR [esi+0x8]
1002ed81:	mov    ecx,edi
1002ed83:	call   0x1002ed2c
1002ed88:	mov    DWORD PTR [ebx+0x8],eax
1002ed8b:	mov    eax,DWORD PTR [ebp-0x14]
1002ed8e:	call   0x10059ecd
1002ed93:	ret    0x8
1002ed96:	push   DWORD PTR [ebp-0x14]
1002ed99:	mov    ecx,DWORD PTR [ebp-0x18]
1002ed9c:	call   0x1002e529
1002eda1:	push   0x0
1002eda3:	push   0x0
1002eda5:	call   0x10047942
1002edaa:	int3   
1002edab:	push   0x8
1002edad:	mov    eax,0x1005fe3c
1002edb2:	call   0x10059e28
1002edb7:	mov    eax,DWORD PTR [ebp+0x8]
1002edba:	and    DWORD PTR [ebp-0x4],0x0
1002edbe:	mov    DWORD PTR [ebp-0x14],eax
1002edc1:	cmp    DWORD PTR [ebp+0xc],0x0
1002edc5:	jbe    0x1002edf8
1002edc7:	push   DWORD PTR [ebp+0x10]
1002edca:	mov    ecx,DWORD PTR [ebp+0x8]
1002edcd:	call   0x1002edfe
1002edd2:	dec    DWORD PTR [ebp+0xc]
1002edd5:	add    DWORD PTR [ebp+0x8],0x10
1002edd9:	jmp    0x1002edc1
1002eddb:	mov    esi,DWORD PTR [ebp-0x14]
1002edde:	jmp    0x1002edea
1002ede0:	push   esi
1002ede1:	call   DWORD PTR ds:0x10067284
1002ede7:	add    esi,0x10
1002edea:	cmp    esi,DWORD PTR [ebp+0x8]
1002eded:	jne    0x1002ede0
1002edef:	push   0x0
1002edf1:	push   0x0
1002edf3:	call   0x10047942
1002edf8:	call   0x10059ecd
1002edfd:	ret    
1002edfe:	push   0x0
1002ee00:	mov    eax,0x1005fe21
1002ee05:	call   0x10059df5
1002ee0a:	mov    esi,ecx
1002ee0c:	and    DWORD PTR [ebp-0x4],0x0
1002ee10:	test   esi,esi
1002ee12:	je     0x1002ee20
1002ee14:	push   DWORD PTR [ebp+0x8]
1002ee17:	and    WORD PTR [esi],0x0
1002ee1b:	call   0x1002ac08
1002ee20:	call   0x10059ecd
1002ee25:	ret    0x4
1002ee28:	push   0x8
1002ee2a:	mov    eax,0x10060484
1002ee2f:	call   0x10059e28
1002ee34:	mov    esi,ecx
1002ee36:	mov    eax,DWORD PTR [ebp+0xc]
1002ee39:	and    DWORD PTR [ebp-0x4],0x0
1002ee3d:	mov    DWORD PTR [ebp-0x14],eax
1002ee40:	cmp    esi,DWORD PTR [ebp+0x8]
1002ee43:	je     0x1002ee74
1002ee45:	mov    ecx,DWORD PTR [ebp+0xc]
1002ee48:	push   esi
1002ee49:	call   0x1002edfe
1002ee4e:	add    DWORD PTR [ebp+0xc],0x10
1002ee52:	add    esi,0x10
1002ee55:	jmp    0x1002ee40
1002ee57:	mov    esi,DWORD PTR [ebp-0x14]
1002ee5a:	jmp    0x1002ee66
1002ee5c:	push   esi
1002ee5d:	call   DWORD PTR ds:0x10067284
1002ee63:	add    esi,0x10
1002ee66:	cmp    esi,DWORD PTR [ebp+0xc]
1002ee69:	jne    0x1002ee5c
1002ee6b:	push   0x0
1002ee6d:	push   0x0
1002ee6f:	call   0x10047942
1002ee74:	mov    eax,DWORD PTR [ebp+0xc]
1002ee77:	call   0x10059ecd
1002ee7c:	ret    
1002ee7d:	int3   
1002ee7e:	int3   
1002ee7f:	int3   
1002ee80:	push   eax
1002ee81:	push   ecx
1002ee82:	call   0x100588bb
1002ee87:	add    esp,0x8
1002ee8a:	cmp    eax,0x50
1002ee8d:	ja     0x1002eeb1
1002ee8f:	movzx  edx,BYTE PTR [eax+0x1002eecc]
1002ee96:	jmp    DWORD PTR [edx*4+0x1002eebc]
1002ee9d:	push   0x8007000e
1002eea2:	call   0x10001f2d
1002eea7:	push   0x80070057
1002eeac:	call   0x10001f2d
1002eeb1:	push   0x80004005
1002eeb6:	call   0x10001f2d
1002eebb:	ret    
1002eebc:	mov    ebx,0x9d1002ee
1002eec1:	out    dx,al
1002eec2:	add    dl,BYTE PTR [eax]
1002eec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1002eec5:	out    dx,al
1002eec6:	add    dl,BYTE PTR [eax]
1002eec8:	mov    cl,0xee
1002eeca:	add    dl,BYTE PTR [eax]
1002eecc:	add    BYTE PTR [ebx],al
1002eece:	add    eax,DWORD PTR [ebx]
1002eed0:	add    eax,DWORD PTR [ebx]
1002eed2:	add    eax,DWORD PTR [ebx]
1002eed4:	add    eax,DWORD PTR [ebx]
1002eed6:	add    eax,DWORD PTR [ebx]
1002eed8:	add    DWORD PTR [ebx],eax
1002eeda:	add    eax,DWORD PTR [ebx]
1002eedc:	add    eax,DWORD PTR [ebx]
1002eede:	add    eax,DWORD PTR [ebx]
1002eee0:	add    eax,DWORD PTR [ebx]
1002eee2:	add    al,BYTE PTR [ebx]
1002eee4:	add    eax,DWORD PTR [ebx]
1002eee6:	add    eax,DWORD PTR [ebx]
1002eee8:	add    eax,DWORD PTR [ebx]
1002eeea:	add    eax,DWORD PTR [ebx]
1002eeec:	add    eax,DWORD PTR [ebx]
1002eeee:	add    al,BYTE PTR [ebx]
1002eef0:	add    eax,DWORD PTR [ebx]
1002eef2:	add    eax,DWORD PTR [ebx]
1002eef4:	add    eax,DWORD PTR [ebx]
1002eef6:	add    eax,DWORD PTR [ebx]
1002eef8:	add    eax,DWORD PTR [ebx]
1002eefa:	add    eax,DWORD PTR [ebx]
1002eefc:	add    eax,DWORD PTR [ebx]
1002eefe:	add    eax,DWORD PTR [ebx]
1002ef00:	add    eax,DWORD PTR [ebx]
1002ef02:	add    eax,DWORD PTR [ebx]
1002ef04:	add    eax,DWORD PTR [ebx]
1002ef06:	add    eax,DWORD PTR [ebx]
1002ef08:	add    eax,DWORD PTR [ebx]
1002ef0a:	add    eax,DWORD PTR [ebx]
1002ef0c:	add    eax,DWORD PTR [ebx]
1002ef0e:	add    eax,DWORD PTR [ebx]
1002ef10:	add    eax,DWORD PTR [ebx]
1002ef12:	add    eax,DWORD PTR [ebx]
1002ef14:	add    eax,DWORD PTR [ebx]
1002ef16:	add    eax,DWORD PTR [ebx]
1002ef18:	add    eax,DWORD PTR [ebx]
1002ef1a:	add    eax,DWORD PTR [ebx]
1002ef1c:	add    ah,cl
1002ef1e:	int3   
1002ef1f:	int3   
1002ef20:	push   ecx
1002ef21:	mov    eax,DWORD PTR [edi]
1002ef23:	lea    ecx,[esp]
1002ef26:	push   ecx
1002ef27:	mov    ecx,DWORD PTR [esp+0xc]
1002ef2b:	push   esi
1002ef2c:	add    eax,eax
1002ef2e:	lea    edx,[esp+0x14]
1002ef32:	push   edx
1002ef33:	mov    DWORD PTR [esp+0xc],eax
1002ef37:	mov    eax,DWORD PTR [esp+0x18]
1002ef3b:	push   0x0
1002ef3d:	mov    DWORD PTR [edi],0x0
1002ef43:	mov    edx,DWORD PTR [ecx]
1002ef45:	push   eax
1002ef46:	push   edx
1002ef47:	call   DWORD PTR ds:0x10067000
1002ef4d:	test   eax,eax
1002ef4f:	jne    0x1002ef8e
1002ef51:	mov    eax,DWORD PTR [esp+0xc]
1002ef55:	cmp    eax,0x1
1002ef58:	je     0x1002ef5f
1002ef5a:	cmp    eax,0x2
1002ef5d:	jne    0x1002ef7a
1002ef5f:	test   esi,esi
1002ef61:	mov    eax,DWORD PTR [esp]
1002ef64:	je     0x1002ef88
1002ef66:	test   eax,eax
1002ef68:	je     0x1002ef83
1002ef6a:	test   al,0x1
1002ef6c:	jne    0x1002ef7a
1002ef6e:	mov    ecx,eax
1002ef70:	shr    ecx,1
1002ef72:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
1002ef78:	je     0x1002ef88
1002ef7a:	mov    eax,0xd
1002ef7f:	pop    ecx
1002ef80:	ret    0x8
1002ef83:	mov    WORD PTR [esi],0x0
1002ef88:	shr    eax,1
1002ef8a:	mov    DWORD PTR [edi],eax
1002ef8c:	xor    eax,eax
1002ef8e:	pop    ecx
1002ef8f:	ret    0x8
1002ef92:	int3   
1002ef93:	int3   
1002ef94:	int3   
1002ef95:	int3   
1002ef96:	int3   
1002ef97:	int3   
1002ef98:	int3   
1002ef99:	int3   
1002ef9a:	int3   
1002ef9b:	int3   
1002ef9c:	int3   
1002ef9d:	int3   
1002ef9e:	int3   
1002ef9f:	int3   
1002efa0:	mov    eax,esi
1002efa2:	mov    edx,0xe3
1002efa7:	push   edi
1002efa8:	mov    ecx,DWORD PTR [eax+0x4]
1002efab:	mov    edi,DWORD PTR [eax]
1002efad:	xor    edi,ecx
1002efaf:	and    edi,0x7ffffffe
1002efb5:	xor    edi,DWORD PTR [eax]
1002efb7:	and    cl,0x1
1002efba:	shr    edi,1
1002efbc:	sub    edx,0x1
1002efbf:	neg    cl
1002efc1:	sbb    ecx,ecx
1002efc3:	and    ecx,0x9908b0df
1002efc9:	xor    edi,ecx
1002efcb:	xor    edi,DWORD PTR [eax+0x634]
1002efd1:	add    eax,0x4
1002efd4:	test   edx,edx
1002efd6:	mov    DWORD PTR [eax-0x4],edi
1002efd9:	jne    0x1002efa8
1002efdb:	mov    edx,0x18c
1002efe0:	mov    ecx,DWORD PTR [eax+0x4]
1002efe3:	mov    edi,DWORD PTR [eax]
1002efe5:	xor    edi,ecx
1002efe7:	and    edi,0x7ffffffe
1002efed:	xor    edi,DWORD PTR [eax]
1002efef:	and    cl,0x1
1002eff2:	shr    edi,1
1002eff4:	neg    cl
1002eff6:	sbb    ecx,ecx
1002eff8:	and    ecx,0x9908b0df
1002effe:	xor    edi,ecx
1002f000:	xor    edi,DWORD PTR [eax-0x38c]
1002f006:	add    eax,0x4
1002f009:	sub    edx,0x1
1002f00c:	mov    DWORD PTR [eax-0x4],edi
1002f00f:	jne    0x1002efe0
1002f011:	mov    ecx,DWORD PTR [esi]
1002f013:	mov    edx,DWORD PTR [eax]
1002f015:	xor    edx,ecx
1002f017:	and    edx,0x7ffffffe
1002f01d:	xor    edx,DWORD PTR [eax]
1002f01f:	and    cl,0x1
1002f022:	shr    edx,1
1002f024:	neg    cl
1002f026:	pop    edi
1002f027:	sbb    ecx,ecx
1002f029:	and    ecx,0x9908b0df
1002f02f:	xor    edx,ecx
1002f031:	xor    edx,DWORD PTR [eax-0x38c]
1002f037:	mov    DWORD PTR [eax],edx
1002f039:	mov    DWORD PTR [esi+0x9c4],0x270
1002f043:	mov    DWORD PTR [esi+0x9c0],esi
1002f049:	ret    
1002f04a:	int3   
1002f04b:	int3   
1002f04c:	int3   
1002f04d:	int3   
1002f04e:	int3   
1002f04f:	int3   
1002f050:	push   esi
1002f051:	mov    esi,eax
1002f053:	push   edi
1002f054:	mov    ecx,0x1
1002f059:	mov    DWORD PTR [esi],edx
1002f05b:	jmp    0x1002f060
1002f05d:	lea    ecx,[ecx+0x0]
1002f060:	mov    edx,DWORD PTR [eax]
1002f062:	mov    edi,edx
1002f064:	shr    edi,0x1e
1002f067:	xor    edi,edx
1002f069:	imul   edi,edi,0x6c078965
1002f06f:	add    edi,ecx
1002f071:	mov    DWORD PTR [eax+0x4],edi
1002f074:	add    ecx,0x1
1002f077:	add    eax,0x4
1002f07a:	cmp    ecx,0x270
1002f080:	jl     0x1002f060
1002f082:	call   0x1002efa0
1002f087:	pop    edi
1002f088:	pop    esi
1002f089:	ret    
1002f08a:	int3   
1002f08b:	int3   
1002f08c:	int3   
1002f08d:	int3   
1002f08e:	int3   
1002f08f:	int3   
1002f090:	push   esi
1002f091:	mov    esi,eax
1002f093:	cmp    DWORD PTR [esi+0x9c4],0x0
1002f09a:	jne    0x1002f0a1
1002f09c:	call   0x1002efa0
1002f0a1:	mov    eax,DWORD PTR [esi+0x9c0]
1002f0a7:	add    DWORD PTR [esi+0x9c4],0xffffffff
1002f0ae:	mov    ecx,DWORD PTR [eax]
1002f0b0:	add    eax,0x4
1002f0b3:	mov    DWORD PTR [esi+0x9c0],eax
1002f0b9:	mov    eax,ecx
1002f0bb:	shr    eax,0xb
1002f0be:	xor    ecx,eax
1002f0c0:	mov    edx,ecx
1002f0c2:	and    edx,0xff3a58ad
1002f0c8:	shl    edx,0x7
1002f0cb:	xor    ecx,edx
1002f0cd:	mov    eax,ecx
1002f0cf:	and    eax,0xffffdf8c
1002f0d4:	shl    eax,0xf
1002f0d7:	xor    ecx,eax
1002f0d9:	mov    eax,ecx
1002f0db:	shr    eax,0x12
1002f0de:	xor    eax,ecx
1002f0e0:	and    eax,0x3f
1002f0e3:	cmp    eax,0x23
1002f0e6:	ja     0x1002f093
1002f0e8:	pop    esi
1002f0e9:	ret    
1002f0ea:	int3   
1002f0eb:	int3   
1002f0ec:	int3   
1002f0ed:	int3   
1002f0ee:	int3   
1002f0ef:	int3   
1002f0f0:	sub    esp,0x9cc
1002f0f6:	push   esi
1002f0f7:	push   edi
1002f0f8:	add    edx,0x3e
1002f0fb:	lea    eax,[esp+0x8]
1002f0ff:	call   0x1002f050
1002f104:	mov    eax,ds:0x10081a94
1002f109:	mov    WORD PTR [ebx],0x0
1002f10e:	mov    edx,eax
1002f110:	mov    cx,WORD PTR [eax]
1002f113:	add    eax,0x2
1002f116:	test   cx,cx
1002f119:	jne    0x1002f110
1002f11b:	mov    edi,ebx
1002f11d:	sub    eax,edx
1002f11f:	add    edi,0xfffffffe
1002f122:	mov    cx,WORD PTR [edi+0x2]
1002f126:	add    edi,0x2
1002f129:	test   cx,cx
1002f12c:	jne    0x1002f122
1002f12e:	mov    ecx,eax
1002f130:	shr    ecx,0x2
1002f133:	mov    esi,edx
1002f135:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002f137:	mov    ecx,eax
1002f139:	and    ecx,0x3
1002f13c:	mov    eax,ebx
1002f13e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1002f140:	lea    edx,[eax+0x2]
1002f143:	mov    cx,WORD PTR [eax]
1002f146:	add    eax,0x2
1002f149:	test   cx,cx
1002f14c:	jne    0x1002f143
1002f14e:	sub    eax,edx
1002f150:	sar    eax,1
1002f152:	mov    esi,eax
1002f154:	mov    edi,0x5
1002f159:	lea    esp,[esp+0x0]
1002f160:	lea    eax,[esp+0x8]
1002f164:	call   0x1002f090
1002f169:	cmp    eax,0xa
1002f16c:	jae    0x1002f173
1002f16e:	add    eax,0x30
1002f171:	jmp    0x1002f176
1002f173:	add    eax,0x57
1002f176:	movzx  eax,ax
1002f179:	mov    WORD PTR [ebx+esi*2],ax
1002f17d:	add    esi,0x1
1002f180:	sub    edi,0x1
1002f183:	mov    WORD PTR [ebx+esi*2],0x0
1002f189:	jne    0x1002f160
1002f18b:	pop    edi
1002f18c:	pop    esi
1002f18d:	add    esp,0x9cc
1002f193:	ret    
1002f194:	int3   
1002f195:	int3   
1002f196:	int3   
1002f197:	int3   
1002f198:	int3   
1002f199:	int3   
1002f19a:	int3   
1002f19b:	int3   
1002f19c:	int3   
1002f19d:	int3   
1002f19e:	int3   
1002f19f:	int3   
1002f1a0:	push   ebp
1002f1a1:	mov    ebp,esp
1002f1a3:	and    esp,0xfffffff8
1002f1a6:	push   0xffffffff
1002f1a8:	push   0x1005fc70
1002f1ad:	mov    eax,fs:0x0
1002f1b3:	push   eax
1002f1b4:	sub    esp,0x50
1002f1b7:	push   ebx
1002f1b8:	push   esi
1002f1b9:	push   edi
1002f1ba:	mov    eax,ds:0x100801ac
1002f1bf:	xor    eax,esp
1002f1c1:	push   eax
1002f1c2:	lea    eax,[esp+0x60]
1002f1c6:	mov    fs:0x0,eax
1002f1cc:	xor    ebx,ebx
1002f1ce:	push   0x4000
1002f1d3:	mov    DWORD PTR [esp+0x18],ebx
1002f1d7:	call   0x100438d7
1002f1dc:	mov    edi,eax
1002f1de:	push   0x38
1002f1e0:	mov    DWORD PTR [esp+0x70],ebx
1002f1e4:	push   0x10074340
1002f1e9:	lea    eax,[esp+0x30]
1002f1ed:	push   0x2f
1002f1ef:	push   eax
1002f1f0:	mov    DWORD PTR [esp+0x58],ebx
1002f1f4:	mov    DWORD PTR [esp+0x5c],ebx
1002f1f8:	mov    DWORD PTR [esp+0x60],ebx
1002f1fc:	mov    DWORD PTR [esp+0x3c],ebx
1002f200:	mov    DWORD PTR [esp+0x38],ebx
1002f204:	call   0x10052bf0
1002f209:	add    esp,0x14
1002f20c:	test   eax,eax
1002f20e:	je     0x1002f23d
1002f210:	mov    esi,DWORD PTR [ebp+0x8]
1002f213:	push   ebx
1002f214:	mov    DWORD PTR [esp+0x1c],ebx
1002f218:	mov    DWORD PTR [esi],ebx
1002f21a:	call   0x10042fe2
1002f21f:	push   edi
1002f220:	call   0x10042fe2
1002f225:	add    esp,0x8
1002f228:	mov    eax,esi
1002f22a:	mov    ecx,DWORD PTR [esp+0x60]
1002f22e:	mov    DWORD PTR fs:0x0,ecx
1002f235:	pop    ecx
1002f236:	pop    edi
1002f237:	pop    esi
1002f238:	pop    ebx
1002f239:	mov    esp,ebp
1002f23b:	pop    ebp
1002f23c:	ret    
1002f23d:	mov    ecx,DWORD PTR [ebp+0x10]
1002f240:	mov    edx,DWORD PTR [ebp+0xc]
1002f243:	mov    DWORD PTR [esp+0x28],ecx
1002f247:	mov    DWORD PTR [esp+0x24],edx
1002f24b:	jmp    0x1002f250
1002f24d:	lea    ecx,[ecx+0x0]
1002f250:	lea    ecx,[esp+0x24]
1002f254:	lea    eax,[ebx+edi*1]
1002f257:	push   0x4
1002f259:	push   ecx
1002f25a:	mov    DWORD PTR [esp+0x3c],0x4000
1002f262:	mov    DWORD PTR [esp+0x38],eax
1002f266:	call   0x10052dd0
1002f26b:	mov    esi,eax
1002f26d:	add    esp,0x8
1002f270:	cmp    esi,0xfffffffc
1002f273:	mov    DWORD PTR [esp+0x18],esi
1002f277:	jl     0x1002f28b
1002f279:	cmp    esi,0xfffffffd
1002f27c:	jle    0x1002f322
1002f282:	cmp    esi,0x2
1002f285:	je     0x1002f322
1002f28b:	mov    ecx,DWORD PTR [esp+0x34]
1002f28f:	mov    eax,0x4000
1002f294:	sub    eax,ecx
1002f296:	add    ebx,eax
1002f298:	test   ecx,ecx
1002f29a:	mov    DWORD PTR [esp+0x14],ebx
1002f29e:	jne    0x1002f309
1002f2a0:	mov    esi,edi
1002f2a2:	mov    DWORD PTR [esp+0x1c],ecx
1002f2a6:	mov    DWORD PTR [esp+0x20],esi
1002f2aa:	add    ebx,0x4000
1002f2b0:	push   ebx
1002f2b1:	mov    BYTE PTR [esp+0x6c],0x1
1002f2b6:	call   0x100438d7
1002f2bb:	mov    edi,eax
1002f2bd:	add    esp,0x4
1002f2c0:	test   edi,edi
1002f2c2:	mov    DWORD PTR [esp+0x10],0x0
1002f2ca:	je     0x1002f2d6
1002f2cc:	push   0x0
1002f2ce:	call   0x10042fe2
1002f2d3:	add    esp,0x4
1002f2d6:	mov    edx,DWORD PTR [esp+0x10]
1002f2da:	push   edx
1002f2db:	call   0x10042fe2
1002f2e0:	mov    ebx,DWORD PTR [esp+0x18]
1002f2e4:	push   ebx
1002f2e5:	push   esi
1002f2e6:	push   edi
1002f2e7:	call   0x10045340
1002f2ec:	push   esi
1002f2ed:	mov    BYTE PTR [esp+0x7c],0x0
1002f2f2:	call   0x10042fe2
1002f2f7:	add    esp,0x14
1002f2fa:	cmp    DWORD PTR [esp+0x34],0x0
1002f2ff:	je     0x1002f250
1002f305:	mov    esi,DWORD PTR [esp+0x18]
1002f309:	lea    ecx,[esp+0x24]
1002f30d:	push   ecx
1002f30e:	call   0x100543c0
1002f313:	add    esp,0x4
1002f316:	cmp    esi,0x1
1002f319:	jne    0x1002f362
1002f31b:	mov    edx,DWORD PTR [ebp+0x14]
1002f31e:	mov    DWORD PTR [edx],ebx
1002f320:	jmp    0x1002f386
1002f322:	lea    eax,[esp+0x24]
1002f326:	push   eax
1002f327:	call   0x100543c0
1002f32c:	mov    esi,DWORD PTR [ebp+0x8]
1002f32f:	push   0x0
1002f331:	mov    DWORD PTR [esp+0x28],0x0
1002f339:	mov    DWORD PTR [esi],0x0
1002f33f:	call   0x10042fe2
1002f344:	push   edi
1002f345:	call   0x10042fe2
1002f34a:	add    esp,0xc
1002f34d:	mov    eax,esi
1002f34f:	mov    ecx,DWORD PTR [esp+0x60]
1002f353:	mov    DWORD PTR fs:0x0,ecx
1002f35a:	pop    ecx
1002f35b:	pop    edi
1002f35c:	pop    esi
1002f35d:	pop    ebx
1002f35e:	mov    esp,ebp
1002f360:	pop    ebp
1002f361:	ret    
1002f362:	test   edi,edi
1002f364:	mov    DWORD PTR [esp+0x18],0x0
1002f36c:	je     0x1002f377
1002f36e:	push   edi
1002f36f:	call   0x10042fe2
1002f374:	add    esp,0x4
1002f377:	mov    eax,DWORD PTR [esp+0x18]
1002f37b:	push   eax
1002f37c:	xor    edi,edi
1002f37e:	call   0x10042fe2
1002f383:	add    esp,0x4
1002f386:	mov    esi,DWORD PTR [ebp+0x8]
1002f389:	push   0x0
1002f38b:	mov    DWORD PTR [esi],edi
1002f38d:	call   0x10042fe2
1002f392:	add    esp,0x4
1002f395:	mov    eax,esi
1002f397:	mov    ecx,DWORD PTR [esp+0x60]
1002f39b:	mov    DWORD PTR fs:0x0,ecx
1002f3a2:	pop    ecx
1002f3a3:	pop    edi
1002f3a4:	pop    esi
1002f3a5:	pop    ebx
1002f3a6:	mov    esp,ebp
1002f3a8:	pop    ebp
1002f3a9:	ret    
1002f3aa:	int3   
1002f3ab:	int3   
1002f3ac:	int3   
1002f3ad:	int3   
1002f3ae:	int3   
1002f3af:	int3   
1002f3b0:	push   0xffffffff
1002f3b2:	push   0x1005fc40
1002f3b7:	mov    eax,fs:0x0
1002f3bd:	push   eax
1002f3be:	sub    esp,0x48
1002f3c1:	push   ebx
1002f3c2:	push   ebp
1002f3c3:	push   esi
1002f3c4:	push   edi
1002f3c5:	mov    eax,ds:0x100801ac
1002f3ca:	xor    eax,esp
1002f3cc:	push   eax
1002f3cd:	lea    eax,[esp+0x5c]
1002f3d1:	mov    fs:0x0,eax
1002f3d7:	mov    eax,DWORD PTR [esp+0x74]
1002f3db:	xor    ebx,ebx
1002f3dd:	mov    ebp,0x4000
1002f3e2:	cmp    eax,ebp
1002f3e4:	mov    DWORD PTR [esp+0x18],ebx
1002f3e8:	jae    0x1002f3f6
1002f3ea:	cmp    eax,0x20
1002f3ed:	mov    ebp,eax
1002f3ef:	jge    0x1002f3f6
1002f3f1:	mov    ebp,0x20
1002f3f6:	push   ebp
1002f3f7:	call   0x100438d7
1002f3fc:	mov    edi,eax
1002f3fe:	mov    eax,DWORD PTR [esp+0x80]
1002f405:	push   0x38
1002f407:	push   0x10074340
1002f40c:	push   ebx
1002f40d:	push   0x8
1002f40f:	push   eax
1002f410:	mov    DWORD PTR [esp+0x7c],ebx
1002f414:	push   0x8
1002f416:	lea    ecx,[esp+0x3c]
1002f41a:	push   0x9
1002f41c:	push   ecx
1002f41d:	xor    esi,esi
1002f41f:	mov    DWORD PTR [esp+0x64],ebx
1002f423:	mov    DWORD PTR [esp+0x68],ebx
1002f427:	mov    DWORD PTR [esp+0x6c],ebx
1002f42b:	mov    DWORD PTR [esp+0x48],ebx
1002f42f:	mov    DWORD PTR [esp+0x44],ebx
1002f433:	call   0x10052970
1002f438:	add    esp,0x24
1002f43b:	test   eax,eax
1002f43d:	je     0x1002f45d
1002f43f:	mov    esi,DWORD PTR [esp+0x6c]
1002f443:	push   ebx
1002f444:	mov    DWORD PTR [esp+0x78],ebx
1002f448:	mov    DWORD PTR [esi],ebx
1002f44a:	call   0x10042fe2
1002f44f:	push   edi
1002f450:	call   0x10042fe2
1002f455:	add    esp,0x8
1002f458:	jmp    0x1002f552
1002f45d:	mov    edx,DWORD PTR [esp+0x74]
1002f461:	mov    eax,DWORD PTR [esp+0x70]
1002f465:	mov    DWORD PTR [esp+0x24],edx
1002f469:	mov    DWORD PTR [esp+0x20],eax
1002f46d:	lea    ecx,[ecx+0x0]
1002f470:	lea    edx,[esp+0x20]
1002f474:	lea    ecx,[esi+edi*1]
1002f477:	push   0x4
1002f479:	push   edx
1002f47a:	mov    DWORD PTR [esp+0x38],ebp
1002f47e:	mov    DWORD PTR [esp+0x34],ecx
1002f482:	call   0x100513a0
1002f487:	mov    ecx,DWORD PTR [esp+0x38]
1002f48b:	mov    DWORD PTR [esp+0x20],eax
1002f48f:	mov    eax,ebp
1002f491:	sub    eax,ecx
1002f493:	add    esp,0x8
1002f496:	add    esi,eax
1002f498:	cmp    ecx,ebx
1002f49a:	jne    0x1002f507
1002f49c:	mov    ebx,edi
1002f49e:	mov    DWORD PTR [esp+0x14],0x0
1002f4a6:	mov    DWORD PTR [esp+0x1c],ebx
1002f4aa:	lea    eax,[esi+ebp*1]
1002f4ad:	push   eax
1002f4ae:	mov    BYTE PTR [esp+0x68],0x1
1002f4b3:	call   0x100438d7
1002f4b8:	mov    edi,eax
1002f4ba:	add    esp,0x4
1002f4bd:	test   edi,edi
1002f4bf:	mov    DWORD PTR [esp+0x14],edi
1002f4c3:	mov    DWORD PTR [esp+0x74],0x0
1002f4cb:	je     0x1002f4d7
1002f4cd:	push   0x0
1002f4cf:	call   0x10042fe2
1002f4d4:	add    esp,0x4
1002f4d7:	mov    ecx,DWORD PTR [esp+0x74]
1002f4db:	push   ecx
1002f4dc:	call   0x10042fe2
1002f4e1:	mov    edx,DWORD PTR [esp+0x18]
1002f4e5:	push   esi
1002f4e6:	push   ebx
1002f4e7:	push   edx
1002f4e8:	call   0x10045340
1002f4ed:	push   ebx
1002f4ee:	mov    BYTE PTR [esp+0x78],0x0
1002f4f3:	call   0x10042fe2
1002f4f8:	xor    ebx,ebx
1002f4fa:	add    esp,0x14
1002f4fd:	cmp    DWORD PTR [esp+0x30],ebx
1002f501:	je     0x1002f470
1002f507:	lea    eax,[esp+0x20]
1002f50b:	push   eax
1002f50c:	call   0x10051b80
1002f511:	add    esp,0x4
1002f514:	cmp    DWORD PTR [esp+0x18],0x1
1002f519:	jne    0x1002f523
1002f51b:	mov    ecx,DWORD PTR [esp+0x78]
1002f51f:	mov    DWORD PTR [ecx],esi
1002f521:	jmp    0x1002f543
1002f523:	cmp    edi,ebx
1002f525:	mov    DWORD PTR [esp+0x74],ebx
1002f529:	je     0x1002f534
1002f52b:	push   edi
1002f52c:	call   0x10042fe2
1002f531:	add    esp,0x4
1002f534:	mov    edx,DWORD PTR [esp+0x74]
1002f538:	push   edx
1002f539:	xor    edi,edi
1002f53b:	call   0x10042fe2
1002f540:	add    esp,0x4
1002f543:	mov    esi,DWORD PTR [esp+0x6c]
1002f547:	push   ebx
1002f548:	mov    DWORD PTR [esi],edi
1002f54a:	call   0x10042fe2
1002f54f:	add    esp,0x4
1002f552:	mov    eax,esi
1002f554:	mov    ecx,DWORD PTR [esp+0x5c]
1002f558:	mov    DWORD PTR fs:0x0,ecx
1002f55f:	pop    ecx
1002f560:	pop    edi
1002f561:	pop    esi
1002f562:	pop    ebp
1002f563:	pop    ebx
1002f564:	add    esp,0x54
1002f567:	ret    
1002f568:	int3   
1002f569:	int3   
1002f56a:	int3   
1002f56b:	int3   
1002f56c:	int3   
1002f56d:	int3   
1002f56e:	int3   
1002f56f:	int3   
1002f570:	push   ecx
1002f571:	push   0xf
1002f573:	push   eax
1002f574:	push   ecx
1002f575:	push   edx
1002f576:	lea    eax,[esp+0x10]
1002f57a:	push   eax
1002f57b:	mov    DWORD PTR [esp+0x14],0x0
1002f583:	call   0x1002f3b0
1002f588:	mov    ecx,DWORD PTR [eax]
1002f58a:	mov    DWORD PTR [eax],0x0
1002f590:	mov    DWORD PTR [esi],ecx
1002f592:	mov    ecx,DWORD PTR [esp+0x14]
1002f596:	add    esp,0x14
1002f599:	push   ecx
1002f59a:	call   0x10042fe2
1002f59f:	mov    eax,esi
1002f5a1:	add    esp,0x8
1002f5a4:	ret    
1002f5a5:	int3   
1002f5a6:	int3   
1002f5a7:	int3   
1002f5a8:	int3   
1002f5a9:	int3   
1002f5aa:	int3   
1002f5ab:	int3   
1002f5ac:	int3   
1002f5ad:	int3   
1002f5ae:	int3   
1002f5af:	int3   
1002f5b0:	push   ecx
1002f5b1:	push   0x1f
1002f5b3:	push   eax
1002f5b4:	push   ecx
1002f5b5:	push   edx
1002f5b6:	lea    eax,[esp+0x10]
1002f5ba:	push   eax
1002f5bb:	mov    DWORD PTR [esp+0x14],0x0
1002f5c3:	call   0x1002f3b0
1002f5c8:	mov    ecx,DWORD PTR [eax]
1002f5ca:	mov    DWORD PTR [eax],0x0
1002f5d0:	mov    DWORD PTR [esi],ecx
1002f5d2:	mov    ecx,DWORD PTR [esp+0x14]
1002f5d6:	add    esp,0x14
1002f5d9:	push   ecx
1002f5da:	call   0x10042fe2
1002f5df:	mov    eax,esi
1002f5e1:	add    esp,0x8
1002f5e4:	ret    
1002f5e5:	int3   
1002f5e6:	int3   
1002f5e7:	int3   
1002f5e8:	int3   
1002f5e9:	int3   
1002f5ea:	int3   
1002f5eb:	int3   
1002f5ec:	int3   
1002f5ed:	int3   
1002f5ee:	int3   
1002f5ef:	int3   
1002f5f0:	push   ebp
1002f5f1:	mov    ebp,esp
1002f5f3:	sub    esp,0x8
1002f5f6:	mov    eax,ds:0x100801ac
1002f5fb:	xor    eax,ebp
1002f5fd:	mov    DWORD PTR [ebp-0x4],eax
1002f600:	push   esi
1002f601:	xor    esi,esi
1002f603:	push   edi
1002f604:	mov    DWORD PTR [ebp-0x8],esi
1002f607:	call   DWORD PTR ds:0x10080ffc
1002f60d:	push   0x10074348
1002f612:	mov    DWORD PTR [ebp-0x8],eax
1002f615:	call   DWORD PTR ds:0x100670ac
1002f61b:	add    eax,0x1
1002f61e:	cmp    eax,0x3fffffff
1002f623:	jg     0x1002f65d
1002f625:	lea    esi,[eax+eax*1]
1002f628:	mov    eax,esi
1002f62a:	call   0x1004b9b0
1002f62f:	mov    edi,esp
1002f631:	test   edi,edi
1002f633:	je     0x1002f65b
1002f635:	mov    eax,DWORD PTR [ebp-0x8]
1002f638:	push   0x0
1002f63a:	push   0x0
1002f63c:	push   esi
1002f63d:	push   edi
1002f63e:	push   0xffffffff
1002f640:	push   0x10074348
1002f645:	push   0x0
1002f647:	push   eax
1002f648:	mov    BYTE PTR [edi],0x0
1002f64b:	call   DWORD PTR ds:0x100670c4
1002f651:	mov    esi,eax
1002f653:	neg    esi
1002f655:	sbb    esi,esi
1002f657:	and    esi,edi
1002f659:	jmp    0x1002f65d
1002f65b:	xor    esi,esi
1002f65d:	mov    DWORD PTR [ebx+0x18],0xf
1002f664:	mov    DWORD PTR [ebx+0x14],0x0
1002f66b:	push   esi
1002f66c:	mov    BYTE PTR [ebx+0x4],0x0
1002f670:	call   0x10043450
1002f675:	add    esp,0x4
1002f678:	push   eax
1002f679:	push   esi
1002f67a:	mov    ecx,ebx
1002f67c:	call   0x1000133b
1002f681:	mov    eax,ebx
1002f683:	lea    esp,[ebp-0x10]
1002f686:	pop    edi
1002f687:	pop    esi
1002f688:	mov    ecx,DWORD PTR [ebp-0x4]
1002f68b:	xor    ecx,ebp
1002f68d:	call   0x10043615
1002f692:	mov    esp,ebp
1002f694:	pop    ebp
1002f695:	ret    
1002f696:	int3   
1002f697:	int3   
1002f698:	int3   
1002f699:	int3   
1002f69a:	int3   
1002f69b:	int3   
1002f69c:	int3   
1002f69d:	int3   
1002f69e:	int3   
1002f69f:	int3   
1002f6a0:	sub    esp,0x1c
1002f6a3:	lea    eax,[esp+0x8]
1002f6a7:	push   eax
1002f6a8:	call   DWORD PTR ds:0x10067124
1002f6ae:	lea    ecx,[esp]
1002f6b1:	push   ecx
1002f6b2:	lea    edx,[esp+0xc]
1002f6b6:	push   edx
1002f6b7:	call   DWORD PTR ds:0x1006710c
1002f6bd:	mov    edx,DWORD PTR [esp+0x4]
1002f6c1:	mov    eax,DWORD PTR [esp]
1002f6c4:	add    esp,0x1c
1002f6c7:	ret    
1002f6c8:	int3   
1002f6c9:	int3   
1002f6ca:	int3   
1002f6cb:	int3   
1002f6cc:	int3   
1002f6cd:	int3   
1002f6ce:	int3   
1002f6cf:	int3   
1002f6d0:	push   ebp
1002f6d1:	mov    ebp,esp
1002f6d3:	and    esp,0xfffffff8
1002f6d6:	sub    esp,0x8
1002f6d9:	mov    eax,DWORD PTR [ebp+0x8]
1002f6dc:	push   ebx
1002f6dd:	push   edi
1002f6de:	xor    ecx,ecx
1002f6e0:	push   0xffffffff
1002f6e2:	mov    DWORD PTR [esi+0x14],ecx
1002f6e5:	push   ecx
1002f6e6:	mov    DWORD PTR [esi+0x18],0xf
1002f6ed:	lea    edi,[esi+0x4]
1002f6f0:	mov    DWORD PTR [esp+0x10],ecx
1002f6f4:	mov    BYTE PTR [edi],cl
1002f6f6:	push   eax
1002f6f7:	mov    ecx,esi
1002f6f9:	call   0x10001241
1002f6fe:	mov    eax,DWORD PTR [esi+0x18]
1002f701:	cmp    eax,0x10
1002f704:	jb     0x1002f70a
1002f706:	mov    ebx,DWORD PTR [edi]
1002f708:	jmp    0x1002f70c
1002f70a:	mov    ebx,edi
1002f70c:	test   ebx,ebx
1002f70e:	je     0x1002f733
1002f710:	cmp    eax,0x10
1002f713:	jb     0x1002f719
1002f715:	mov    ecx,DWORD PTR [edi]
1002f717:	jmp    0x1002f71b
1002f719:	mov    ecx,edi
1002f71b:	cmp    ecx,ebx
1002f71d:	ja     0x1002f733
1002f71f:	cmp    eax,0x10
1002f722:	jb     0x1002f728
1002f724:	mov    eax,DWORD PTR [edi]
1002f726:	jmp    0x1002f72a
1002f728:	mov    eax,edi
1002f72a:	mov    ecx,DWORD PTR [esi+0x14]
1002f72d:	add    ecx,eax
1002f72f:	cmp    ebx,ecx
1002f731:	jbe    0x1002f738
1002f733:	call   0x10043605
1002f738:	mov    edx,DWORD PTR [esi+0x18]
1002f73b:	cmp    edx,0x10
1002f73e:	mov    DWORD PTR [esp+0xc],ebx
1002f742:	jb     0x1002f748
1002f744:	mov    eax,DWORD PTR [edi]
1002f746:	jmp    0x1002f74a
1002f748:	mov    eax,edi
1002f74a:	mov    ecx,DWORD PTR [esi+0x14]
1002f74d:	lea    ebx,[ecx+eax*1]
1002f750:	test   ebx,ebx
1002f752:	je     0x1002f774
1002f754:	cmp    edx,0x10
1002f757:	jb     0x1002f75d
1002f759:	mov    eax,DWORD PTR [edi]
1002f75b:	jmp    0x1002f75f
1002f75d:	mov    eax,edi
1002f75f:	cmp    eax,ebx
1002f761:	ja     0x1002f774
1002f763:	cmp    edx,0x10
1002f766:	jb     0x1002f76c
1002f768:	mov    eax,DWORD PTR [edi]
1002f76a:	jmp    0x1002f76e
1002f76c:	mov    eax,edi
1002f76e:	add    ecx,eax
1002f770:	cmp    ebx,ecx
1002f772:	jbe    0x1002f779
1002f774:	call   0x10043605
1002f779:	mov    ecx,DWORD PTR [esp+0xc]
1002f77d:	cmp    ecx,ebx
1002f77f:	je     0x1002f7fb
1002f781:	cmp    esi,0xfffffffe
1002f784:	je     0x1002f7c2
1002f786:	cmp    DWORD PTR [esi+0x18],0x10
1002f78a:	jb     0x1002f790
1002f78c:	mov    eax,DWORD PTR [edi]
1002f78e:	jmp    0x1002f792
1002f790:	mov    eax,edi
1002f792:	mov    edx,DWORD PTR [esi+0x14]
1002f795:	add    edx,eax
1002f797:	cmp    ecx,edx
1002f799:	jb     0x1002f7a4
1002f79b:	call   0x10043605
1002f7a0:	mov    ecx,DWORD PTR [esp+0xc]
1002f7a4:	cmp    DWORD PTR [esi+0x18],0x10
1002f7a8:	jb     0x1002f7ae
1002f7aa:	mov    eax,DWORD PTR [edi]
1002f7ac:	jmp    0x1002f7b0
1002f7ae:	mov    eax,edi
1002f7b0:	mov    edx,DWORD PTR [esi+0x14]
1002f7b3:	add    edx,eax
1002f7b5:	cmp    ecx,edx
1002f7b7:	jb     0x1002f7c2
1002f7b9:	call   0x10043605
1002f7be:	mov    ecx,DWORD PTR [esp+0xc]
1002f7c2:	movsx  eax,BYTE PTR [ecx]
1002f7c5:	push   eax
1002f7c6:	call   0x10045f7b
1002f7cb:	mov    ebx,DWORD PTR [esp+0x10]
1002f7cf:	add    esp,0x4
1002f7d2:	cmp    esi,0xfffffffe
1002f7d5:	mov    BYTE PTR [ebx],al
1002f7d7:	je     0x1002f7f3
1002f7d9:	cmp    DWORD PTR [esi+0x18],0x10
1002f7dd:	jb     0x1002f7e3
1002f7df:	mov    eax,DWORD PTR [edi]
1002f7e1:	jmp    0x1002f7e5
1002f7e3:	mov    eax,edi
1002f7e5:	mov    ecx,DWORD PTR [esi+0x14]
1002f7e8:	add    ecx,eax
1002f7ea:	cmp    ebx,ecx
1002f7ec:	jb     0x1002f7f3
1002f7ee:	call   0x10043605
1002f7f3:	add    ebx,0x1
1002f7f6:	jmp    0x1002f738
1002f7fb:	pop    edi
1002f7fc:	mov    eax,esi
1002f7fe:	pop    ebx
1002f7ff:	mov    esp,ebp
1002f801:	pop    ebp
1002f802:	ret    
1002f803:	int3   
1002f804:	int3   
1002f805:	int3   
1002f806:	int3   
1002f807:	int3   
1002f808:	int3   
1002f809:	int3   
1002f80a:	int3   
1002f80b:	int3   
1002f80c:	int3   
1002f80d:	int3   
1002f80e:	int3   
1002f80f:	int3   
1002f810:	push   0xffffffff
1002f812:	push   0x10060ed5
1002f817:	mov    eax,fs:0x0
1002f81d:	push   eax
1002f81e:	sub    esp,0xa0
1002f824:	mov    eax,ds:0x100801ac
1002f829:	xor    eax,esp
1002f82b:	mov    DWORD PTR [esp+0x9c],eax
1002f832:	push   ebx
1002f833:	push   ebp
1002f834:	push   esi
1002f835:	push   edi
1002f836:	mov    eax,ds:0x100801ac
1002f83b:	xor    eax,esp
1002f83d:	push   eax
1002f83e:	lea    eax,[esp+0xb4]
1002f845:	mov    fs:0x0,eax
1002f84b:	mov    ebp,DWORD PTR [esp+0xc4]
1002f852:	xor    ebx,ebx
1002f854:	mov    DWORD PTR [esp+0x34],ebx
1002f858:	mov    eax,ds:0x10082a6c
1002f85d:	mov    edx,DWORD PTR [eax+0xc]
1002f860:	mov    edi,ecx
1002f862:	mov    ecx,0x10082a6c
1002f867:	mov    DWORD PTR [esp+0x30],ebp
1002f86b:	mov    DWORD PTR [esp+0x1c],edi
1002f86f:	call   edx
1002f871:	lea    esi,[eax+0x10]
1002f874:	mov    DWORD PTR [esp+0x20],esi
1002f878:	mov    DWORD PTR [esp+0xbc],ebx
1002f87f:	mov    eax,DWORD PTR [edi+0x14]
1002f882:	cmp    eax,ebx
1002f884:	mov    DWORD PTR [esp+0x28],ebx
1002f888:	jbe    0x1002fc18
1002f88e:	mov    edi,edi
1002f890:	cmp    DWORD PTR [esp+0x28],0x0
1002f895:	jle    0x1002fa7d
1002f89b:	sub    DWORD PTR [esp+0x28],0x1
1002f8a0:	cmp    ebx,eax
1002f8a2:	jbe    0x1002f8a9
1002f8a4:	call   0x10043605
1002f8a9:	mov    ebp,DWORD PTR [esp+0x1c]
1002f8ad:	cmp    DWORD PTR [ebp+0x18],0x10
1002f8b1:	lea    edi,[ebp+0x4]
1002f8b4:	mov    DWORD PTR [esp+0x24],edi
1002f8b8:	jb     0x1002f8be
1002f8ba:	mov    eax,DWORD PTR [edi]
1002f8bc:	jmp    0x1002f8c0
1002f8be:	mov    eax,edi
1002f8c0:	movzx  eax,BYTE PTR [eax+ebx*1]
1002f8c4:	push   eax
1002f8c5:	call   0x1004f5ec
1002f8ca:	add    esp,0x4
1002f8cd:	test   eax,eax
1002f8cf:	je     0x1002fa70
1002f8d5:	cmp    ebx,DWORD PTR [ebp+0x14]
1002f8d8:	jbe    0x1002f8df
1002f8da:	call   0x10043605
1002f8df:	cmp    DWORD PTR [ebp+0x18],0x10
1002f8e3:	jb     0x1002f8e9
1002f8e5:	mov    eax,DWORD PTR [edi]
1002f8e7:	jmp    0x1002f8eb
1002f8e9:	mov    eax,edi
1002f8eb:	mov    cl,BYTE PTR [eax+ebx*1]
1002f8ee:	mov    ebp,DWORD PTR [esi-0xc]
1002f8f1:	mov    eax,DWORD PTR [esi-0x8]
1002f8f4:	mov    BYTE PTR [esp+0x14],cl
1002f8f8:	mov    ecx,0x1
1002f8fd:	sub    ecx,DWORD PTR [esi-0x4]
1002f900:	lea    edi,[ebp+0x1]
1002f903:	sub    eax,edi
1002f905:	or     eax,ecx
1002f907:	jge    0x1002f918
1002f909:	mov    ecx,edi
1002f90b:	lea    eax,[esp+0x20]
1002f90f:	call   0x10034570
1002f914:	mov    esi,DWORD PTR [esp+0x20]
1002f918:	test   edi,edi
1002f91a:	mov    dl,BYTE PTR [esp+0x14]
1002f91e:	mov    BYTE PTR [esi+ebp*1],dl
1002f921:	jl     0x1002fd26
1002f927:	cmp    edi,DWORD PTR [esi-0x8]
1002f92a:	jg     0x1002fd26
1002f930:	mov    eax,DWORD PTR [esp+0x1c]
1002f934:	shl    BYTE PTR [esp+0x1b],0x4
1002f939:	mov    DWORD PTR [esi-0xc],edi
1002f93c:	mov    BYTE PTR [edi+esi*1],0x0
1002f940:	cmp    ebx,DWORD PTR [eax+0x14]
1002f943:	jbe    0x1002f94e
1002f945:	call   0x10043605
1002f94a:	mov    eax,DWORD PTR [esp+0x1c]
1002f94e:	cmp    DWORD PTR [eax+0x18],0x10
1002f952:	mov    ecx,DWORD PTR [esp+0x24]
1002f956:	jb     0x1002f95c
1002f958:	mov    edx,DWORD PTR [ecx]
1002f95a:	jmp    0x1002f95e
1002f95c:	mov    edx,ecx
1002f95e:	cmp    BYTE PTR [edx+ebx*1],0x30
1002f962:	jl     0x1002f9b6
1002f964:	cmp    ebx,DWORD PTR [eax+0x14]
1002f967:	jbe    0x1002f976
1002f969:	call   0x10043605
1002f96e:	mov    ecx,DWORD PTR [esp+0x24]
1002f972:	mov    eax,DWORD PTR [esp+0x1c]
1002f976:	cmp    DWORD PTR [eax+0x18],0x10
1002f97a:	jb     0x1002f980
1002f97c:	mov    edx,DWORD PTR [ecx]
1002f97e:	jmp    0x1002f982
1002f980:	mov    edx,ecx
1002f982:	cmp    BYTE PTR [edx+ebx*1],0x39
1002f986:	jg     0x1002f9b6
1002f988:	cmp    ebx,DWORD PTR [eax+0x14]
1002f98b:	jbe    0x1002f99a
1002f98d:	call   0x10043605
1002f992:	mov    ecx,DWORD PTR [esp+0x24]
1002f996:	mov    eax,DWORD PTR [esp+0x1c]
1002f99a:	cmp    DWORD PTR [eax+0x18],0x10
1002f99e:	jb     0x1002f9ab
1002f9a0:	mov    eax,DWORD PTR [ecx]
1002f9a2:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f9a6:	sub    eax,0x30
1002f9a9:	jmp    0x1002f9e4
1002f9ab:	mov    eax,ecx
1002f9ad:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f9b1:	sub    eax,0x30
1002f9b4:	jmp    0x1002f9e4
1002f9b6:	cmp    ebx,DWORD PTR [eax+0x14]
1002f9b9:	jbe    0x1002f9c8
1002f9bb:	call   0x10043605
1002f9c0:	mov    ecx,DWORD PTR [esp+0x24]
1002f9c4:	mov    eax,DWORD PTR [esp+0x1c]
1002f9c8:	cmp    DWORD PTR [eax+0x18],0x10
1002f9cc:	jb     0x1002f9d2
1002f9ce:	mov    eax,DWORD PTR [ecx]
1002f9d0:	jmp    0x1002f9d4
1002f9d2:	mov    eax,ecx
1002f9d4:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f9d8:	push   eax
1002f9d9:	call   0x1005876f
1002f9de:	add    esp,0x4
1002f9e1:	sub    eax,0x37
1002f9e4:	add    BYTE PTR [esp+0x1b],al
1002f9e8:	cmp    DWORD PTR [esp+0x28],0x0
1002f9ed:	jne    0x1002fc00
1002f9f3:	cmp    BYTE PTR [esp+0x1b],0x80
1002f9f8:	jb     0x1002fc00
1002f9fe:	mov    edi,DWORD PTR [esi-0xc]
1002fa01:	mov    eax,DWORD PTR [esi-0x8]
1002fa04:	add    edi,0xfffffffd
1002fa07:	mov    ecx,0x1
1002fa0c:	sub    ecx,DWORD PTR [esi-0x4]
1002fa0f:	sub    eax,edi
1002fa11:	or     eax,ecx
1002fa13:	jge    0x1002fa24
1002fa15:	mov    ecx,edi
1002fa17:	lea    eax,[esp+0x20]
1002fa1b:	call   0x10034570
1002fa20:	mov    esi,DWORD PTR [esp+0x20]
1002fa24:	test   edi,edi
1002fa26:	jl     0x1002fd26
1002fa2c:	cmp    edi,DWORD PTR [esi-0x8]
1002fa2f:	jg     0x1002fd26
1002fa35:	test   edi,edi
1002fa37:	mov    DWORD PTR [esi-0xc],edi
1002fa3a:	mov    BYTE PTR [edi+esi*1],0x0
1002fa3e:	je     0x1002fa5c
1002fa40:	add    edi,0xffffffff
1002fa43:	js     0x1002fd26
1002fa49:	cmp    edi,DWORD PTR [esi-0xc]
1002fa4c:	jg     0x1002fd26
1002fa52:	cmp    BYTE PTR [edi+esi*1],0x80
1002fa56:	je     0x1002fc00
1002fa5c:	push   0xffffff80
1002fa5e:	lea    edi,[esp+0x24]
1002fa62:	call   0x10034130
1002fa67:	mov    esi,DWORD PTR [esp+0x20]
1002fa6b:	jmp    0x1002fc00
1002fa70:	mov    DWORD PTR [esp+0x28],0x0
1002fa78:	jmp    0x1002fc03
1002fa7d:	cmp    ebx,eax
1002fa7f:	jbe    0x1002fa86
1002fa81:	call   0x10043605
1002fa86:	mov    edi,DWORD PTR [esp+0x1c]
1002fa8a:	cmp    DWORD PTR [edi+0x18],0x10
1002fa8e:	lea    ebp,[edi+0x4]
1002fa91:	jb     0x1002fa98
1002fa93:	mov    eax,DWORD PTR [ebp+0x0]
1002fa96:	jmp    0x1002fa9a
1002fa98:	mov    eax,ebp
1002fa9a:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fa9e:	jb     0x1002fb15
1002faa0:	mov    eax,DWORD PTR [edi+0x14]
1002faa3:	add    ebx,0x1
1002faa6:	cmp    ebx,eax
1002faa8:	jae    0x1002face
1002faaa:	jbe    0x1002fab1
1002faac:	call   0x10043605
1002fab1:	cmp    DWORD PTR [edi+0x18],0x10
1002fab5:	jb     0x1002fabc
1002fab7:	mov    eax,DWORD PTR [ebp+0x0]
1002faba:	jmp    0x1002fabe
1002fabc:	mov    eax,ebp
1002fabe:	cmp    BYTE PTR [eax+ebx*1],0x80
1002fac2:	jb     0x1002face
1002fac4:	mov    eax,DWORD PTR [edi+0x14]
1002fac7:	add    ebx,0x1
1002faca:	cmp    ebx,eax
1002facc:	jb     0x1002fab1
1002face:	mov    ebp,DWORD PTR [esi-0xc]
1002fad1:	mov    eax,DWORD PTR [esi-0x8]
1002fad4:	mov    ecx,0x1
1002fad9:	sub    ecx,DWORD PTR [esi-0x4]
1002fadc:	lea    edi,[ebp+0x1]
1002fadf:	sub    eax,edi
1002fae1:	or     eax,ecx
1002fae3:	jge    0x1002faf4
1002fae5:	mov    ecx,edi
1002fae7:	lea    eax,[esp+0x20]
1002faeb:	call   0x10034570
1002faf0:	mov    esi,DWORD PTR [esp+0x20]
1002faf4:	test   edi,edi
1002faf6:	mov    BYTE PTR [esi+ebp*1],0x80
1002fafa:	jl     0x1002fd26
1002fb00:	cmp    edi,DWORD PTR [esi-0x8]
1002fb03:	jg     0x1002fd26
1002fb09:	mov    DWORD PTR [esi-0xc],edi
1002fb0c:	mov    BYTE PTR [edi+esi*1],0x0
1002fb10:	jmp    0x1002fc03
1002fb15:	cmp    ebx,DWORD PTR [edi+0x14]
1002fb18:	jbe    0x1002fb1f
1002fb1a:	call   0x10043605
1002fb1f:	cmp    DWORD PTR [edi+0x18],0x10
1002fb23:	jb     0x1002fb2a
1002fb25:	mov    eax,DWORD PTR [ebp+0x0]
1002fb28:	jmp    0x1002fb2c
1002fb2a:	mov    eax,ebp
1002fb2c:	cmp    BYTE PTR [eax+ebx*1],0x25
1002fb30:	jne    0x1002fb9d
1002fb32:	cmp    ebx,DWORD PTR [edi+0x14]
1002fb35:	jbe    0x1002fb3c
1002fb37:	call   0x10043605
1002fb3c:	cmp    DWORD PTR [edi+0x18],0x10
1002fb40:	jb     0x1002fb47
1002fb42:	mov    eax,DWORD PTR [ebp+0x0]
1002fb45:	jmp    0x1002fb49
1002fb47:	mov    eax,ebp
1002fb49:	mov    cl,BYTE PTR [eax+ebx*1]
1002fb4c:	mov    ebp,DWORD PTR [esi-0xc]
1002fb4f:	mov    eax,DWORD PTR [esi-0x8]
1002fb52:	mov    BYTE PTR [esp+0x14],cl
1002fb56:	mov    ecx,0x1
1002fb5b:	sub    ecx,DWORD PTR [esi-0x4]
1002fb5e:	lea    edi,[ebp+0x1]
1002fb61:	sub    eax,edi
1002fb63:	or     eax,ecx
1002fb65:	jge    0x1002fb76
1002fb67:	mov    ecx,edi
1002fb69:	lea    eax,[esp+0x20]
1002fb6d:	call   0x10034570
1002fb72:	mov    esi,DWORD PTR [esp+0x20]
1002fb76:	test   edi,edi
1002fb78:	mov    dl,BYTE PTR [esp+0x14]
1002fb7c:	mov    BYTE PTR [esi+ebp*1],dl
1002fb7f:	jl     0x1002fd26
1002fb85:	cmp    edi,DWORD PTR [esi-0x8]
1002fb88:	jg     0x1002fd26
1002fb8e:	mov    BYTE PTR [esp+0x1b],0x0
1002fb93:	mov    DWORD PTR [esp+0x28],0x2
1002fb9b:	jmp    0x1002fbf9
1002fb9d:	cmp    ebx,DWORD PTR [edi+0x14]
1002fba0:	jbe    0x1002fba7
1002fba2:	call   0x10043605
1002fba7:	cmp    DWORD PTR [edi+0x18],0x10
1002fbab:	jb     0x1002fbb2
1002fbad:	mov    eax,DWORD PTR [ebp+0x0]
1002fbb0:	jmp    0x1002fbb4
1002fbb2:	mov    eax,ebp
1002fbb4:	mov    al,BYTE PTR [eax+ebx*1]
1002fbb7:	mov    ebp,DWORD PTR [esi-0xc]
1002fbba:	mov    BYTE PTR [esp+0x14],al
1002fbbe:	mov    eax,DWORD PTR [esi-0x8]
1002fbc1:	mov    ecx,0x1
1002fbc6:	sub    ecx,DWORD PTR [esi-0x4]
1002fbc9:	lea    edi,[ebp+0x1]
1002fbcc:	sub    eax,edi
1002fbce:	or     eax,ecx
1002fbd0:	jge    0x1002fbe1
1002fbd2:	mov    ecx,edi
1002fbd4:	lea    eax,[esp+0x20]
1002fbd8:	call   0x10034570
1002fbdd:	mov    esi,DWORD PTR [esp+0x20]
1002fbe1:	test   edi,edi
1002fbe3:	mov    cl,BYTE PTR [esp+0x14]
1002fbe7:	mov    BYTE PTR [esi+ebp*1],cl
1002fbea:	jl     0x1002fd26
1002fbf0:	cmp    edi,DWORD PTR [esi-0x8]
1002fbf3:	jg     0x1002fd26
1002fbf9:	mov    DWORD PTR [esi-0xc],edi
1002fbfc:	mov    BYTE PTR [edi+esi*1],0x0
1002fc00:	add    ebx,0x1
1002fc03:	mov    edx,DWORD PTR [esp+0x1c]
1002fc07:	mov    eax,DWORD PTR [edx+0x14]
1002fc0a:	cmp    ebx,eax
1002fc0c:	jb     0x1002f890
1002fc12:	mov    ebp,DWORD PTR [esp+0x30]
1002fc16:	xor    ebx,ebx
1002fc18:	mov    eax,ds:0x10082a6c
1002fc1d:	mov    edx,DWORD PTR [eax+0xc]
1002fc20:	mov    ecx,0x10082a6c
1002fc25:	call   edx
1002fc27:	lea    edi,[eax+0x10]
1002fc2a:	mov    DWORD PTR [esp+0x28],edi
1002fc2e:	mov    BYTE PTR [esp+0xbc],0x1
1002fc36:	mov    eax,DWORD PTR [esp+0x1c]
1002fc3a:	mov    eax,DWORD PTR [eax+0x14]
1002fc3d:	lea    ecx,[eax+eax*1]
1002fc40:	mov    DWORD PTR [esp+0x34],ecx
1002fc44:	mov    eax,DWORD PTR [edi-0x8]
1002fc47:	mov    edx,0x1
1002fc4c:	sub    edx,DWORD PTR [edi-0x4]
1002fc4f:	sub    eax,ecx
1002fc51:	or     eax,edx
1002fc53:	jge    0x1002fc62
1002fc55:	lea    eax,[esp+0x28]
1002fc59:	call   0x10034570
1002fc5e:	mov    edi,DWORD PTR [esp+0x28]
1002fc62:	cmp    DWORD PTR [esi-0x4],0x1
1002fc66:	jle    0x1002fc7a
1002fc68:	mov    ecx,DWORD PTR [esi-0xc]
1002fc6b:	push   ecx
1002fc6c:	lea    edx,[esp+0x24]
1002fc70:	push   edx
1002fc71:	call   0x100343f0
1002fc76:	mov    esi,DWORD PTR [esp+0x20]
1002fc7a:	push   0x2000000
1002fc7f:	lea    eax,[esp+0x38]
1002fc83:	push   eax
1002fc84:	push   edi
1002fc85:	push   esi
1002fc86:	call   DWORD PTR ds:0x10067384
1002fc8c:	test   eax,eax
1002fc8e:	jne    0x1002fd30
1002fc94:	mov    ecx,DWORD PTR [esp+0x1c]
1002fc98:	push   0xffffffff
1002fc9a:	push   ebx
1002fc9b:	push   ecx
1002fc9c:	mov    DWORD PTR [ebp+0x18],0xf
1002fca3:	mov    DWORD PTR [ebp+0x14],ebx
1002fca6:	mov    ecx,ebp
1002fca8:	mov    BYTE PTR [ebp+0x4],0x0
1002fcac:	call   0x10001241
1002fcb1:	add    edi,0xfffffff0
1002fcb4:	or     eax,0xffffffff
1002fcb7:	lea    edx,[edi+0xc]
1002fcba:	mov    BYTE PTR [esp+0xbc],0x0
1002fcc2:	lock xadd DWORD PTR [edx],eax
1002fcc6:	dec    eax
1002fcc7:	test   eax,eax
1002fcc9:	jg     0x1002fcd5
1002fccb:	mov    ecx,DWORD PTR [edi]
1002fccd:	mov    edx,DWORD PTR [ecx]
1002fccf:	mov    eax,DWORD PTR [edx+0x4]
1002fcd2:	push   edi
1002fcd3:	call   eax
1002fcd5:	add    esi,0xfffffff0
1002fcd8:	mov    DWORD PTR [esp+0xbc],0xffffffff
1002fce3:	lea    ecx,[esi+0xc]
1002fce6:	or     edx,0xffffffff
1002fce9:	lock xadd DWORD PTR [ecx],edx
1002fced:	dec    edx
1002fcee:	test   edx,edx
1002fcf0:	jg     0x1002fcfc
1002fcf2:	mov    ecx,DWORD PTR [esi]
1002fcf4:	mov    eax,DWORD PTR [ecx]
1002fcf6:	mov    edx,DWORD PTR [eax+0x4]
1002fcf9:	push   esi
1002fcfa:	call   edx
1002fcfc:	mov    eax,ebp
1002fcfe:	mov    ecx,DWORD PTR [esp+0xb4]
1002fd05:	mov    DWORD PTR fs:0x0,ecx
1002fd0c:	pop    ecx
1002fd0d:	pop    edi
1002fd0e:	pop    esi
1002fd0f:	pop    ebp
1002fd10:	pop    ebx
1002fd11:	mov    ecx,DWORD PTR [esp+0x9c]
1002fd18:	xor    ecx,esp
1002fd1a:	call   0x10043615
1002fd1f:	add    esp,0xac
1002fd25:	ret    
1002fd26:	push   0x80070057
1002fd2b:	call   0x10001f2d
1002fd30:	cmp    edi,ebx
1002fd32:	jne    0x1002fd38
1002fd34:	xor    eax,eax
1002fd36:	jmp    0x1002fd4d
1002fd38:	mov    eax,edi
1002fd3a:	lea    edx,[eax+0x1]
1002fd3d:	lea    ecx,[ecx+0x0]
1002fd40:	mov    cl,BYTE PTR [eax]
1002fd42:	add    eax,0x1
1002fd45:	test   cl,cl
1002fd47:	jne    0x1002fd40
1002fd49:	sub    eax,edx
1002fd4b:	js     0x1002fd26
1002fd4d:	cmp    eax,DWORD PTR [edi-0x8]
1002fd50:	jg     0x1002fd26
1002fd52:	mov    DWORD PTR [edi-0xc],eax
1002fd55:	push   0x38
1002fd57:	mov    BYTE PTR [eax+edi*1],0x0
1002fd5b:	lea    eax,[esp+0x40]
1002fd5f:	push   ebx
1002fd60:	push   eax
1002fd61:	call   0x10045dc0
1002fd66:	mov    eax,0x1
1002fd6b:	add    esp,0xc
1002fd6e:	mov    DWORD PTR [esp+0x38],0x3c
1002fd76:	mov    DWORD PTR [esp+0x40],eax
1002fd7a:	mov    DWORD PTR [esp+0x4c],eax
1002fd7e:	mov    DWORD PTR [esp+0x58],eax
1002fd82:	mov    DWORD PTR [esp+0x60],eax
1002fd86:	mov    DWORD PTR [esp+0x68],eax
1002fd8a:	mov    DWORD PTR [esp+0x70],eax
1002fd8e:	cmp    DWORD PTR [edi-0x4],eax
1002fd91:	jle    0x1002fda5
1002fd93:	mov    ecx,DWORD PTR [edi-0xc]
1002fd96:	push   ecx
1002fd97:	lea    edx,[esp+0x2c]
1002fd9b:	push   edx
1002fd9c:	call   0x100343f0
1002fda1:	mov    edi,DWORD PTR [esp+0x28]
1002fda5:	lea    eax,[esp+0x38]
1002fda9:	push   eax
1002fdaa:	push   ebx
1002fdab:	push   ebx
1002fdac:	push   edi
1002fdad:	call   DWORD PTR ds:0x1006738c
1002fdb3:	test   eax,eax
1002fdb5:	je     0x1002fc94
1002fdbb:	mov    DWORD PTR [esp+0x8c],0xf
1002fdc6:	mov    DWORD PTR [esp+0x88],ebx
1002fdcd:	mov    BYTE PTR [esp+0x78],0x0
1002fdd2:	mov    BYTE PTR [esp+0xbc],0x2
1002fdda:	mov    eax,DWORD PTR [esp+0x3c]
1002fdde:	cmp    eax,ebx
1002fde0:	je     0x1003007f
1002fde6:	cmp    DWORD PTR [esp+0x48],ebx
1002fdea:	je     0x1003007f
1002fdf0:	cmp    DWORD PTR [esp+0x58],ebx
1002fdf4:	jne    0x1003007f
1002fdfa:	cmp    DWORD PTR [esp+0x60],ebx
1002fdfe:	jne    0x1003007f
1002fe04:	mov    esi,DWORD PTR [esp+0x40]
1002fe08:	mov    ebx,eax
1002fe0a:	lea    edi,[esp+0x24]
1002fe0e:	call   0x10034070
1002fe13:	mov    BYTE PTR [esp+0xbc],0x3
1002fe1b:	call   0x100342c0
1002fe20:	mov    eax,edi
1002fe22:	push   eax
1002fe23:	mov    ecx,0x1006e2f4
1002fe28:	call   0x10034340
1002fe2d:	add    esp,0x4
1002fe30:	test   al,al
1002fe32:	je     0x1002fea1
1002fe34:	mov    ecx,edi
1002fe36:	push   ecx
1002fe37:	mov    ecx,0x1007435c
1002fe3c:	call   0x10034340
1002fe41:	add    esp,0x4
1002fe44:	test   al,al
1002fe46:	je     0x1002fea1
1002fe48:	mov    edx,DWORD PTR [esp+0x1c]
1002fe4c:	push   edx
1002fe4d:	mov    ecx,ebp
1002fe4f:	call   0x100011c9
1002fe54:	mov    eax,edi
1002fe56:	call   0x100340d0
1002fe5b:	cmp    DWORD PTR [esp+0x8c],0x10
1002fe63:	jb     0x1002fe72
1002fe65:	mov    eax,DWORD PTR [esp+0x78]
1002fe69:	push   eax
1002fe6a:	call   0x10042fe2
1002fe6f:	add    esp,0x4
1002fe72:	xor    eax,eax
1002fe74:	mov    DWORD PTR [esp+0x88],eax
1002fe7b:	mov    BYTE PTR [esp+0x78],al
1002fe7f:	lea    eax,[esp+0x28]
1002fe83:	mov    DWORD PTR [esp+0x8c],0xf
1002fe8e:	call   0x100340d0
1002fe93:	lea    eax,[esp+0x20]
1002fe97:	call   0x100340d0
1002fe9c:	jmp    0x1002fcfc
1002fea1:	mov    ecx,DWORD PTR [esp+0x24]
1002fea5:	push   ecx
1002fea6:	lea    edx,[esp+0x78]
1002feaa:	push   edx
1002feab:	call   0x10004126
1002feb0:	push   0x10074364
1002feb5:	lea    eax,[esp+0x78]
1002feb9:	push   eax
1002feba:	call   0x10004126
1002febf:	mov    esi,DWORD PTR [esp+0x4c]
1002fec3:	mov    ebx,DWORD PTR [esp+0x48]
1002fec7:	lea    edi,[esp+0x30]
1002fecb:	call   0x10034070
1002fed0:	mov    BYTE PTR [esp+0xbc],0x4
1002fed8:	call   0x100342c0
1002fedd:	mov    ecx,DWORD PTR [esp+0x30]
1002fee1:	push   ecx
1002fee2:	lea    edx,[esp+0x78]
1002fee6:	push   edx
1002fee7:	call   0x10004126
1002feec:	lea    eax,[esp+0x24]
1002fef0:	push   eax
1002fef1:	mov    ecx,0x1006e2f4
1002fef6:	call   0x10034310
1002fefb:	add    esp,0x4
1002fefe:	test   al,al
1002ff00:	je     0x1002ff0a
1002ff02:	cmp    WORD PTR [esp+0x50],0x50
1002ff08:	jne    0x1002ff29
1002ff0a:	lea    ecx,[esp+0x24]
1002ff0e:	push   ecx
1002ff0f:	mov    ecx,0x1007435c
1002ff14:	call   0x10034310
1002ff19:	add    esp,0x4
1002ff1c:	test   al,al
1002ff1e:	je     0x1002ff5b
1002ff20:	cmp    WORD PTR [esp+0x50],0x1bb
1002ff27:	je     0x1002ff5b
1002ff29:	push   0x1006ee0c
1002ff2e:	lea    edx,[esp+0x78]
1002ff32:	push   edx
1002ff33:	call   0x10004126
1002ff38:	movzx  ecx,WORD PTR [esp+0x50]
1002ff3d:	push   0xa
1002ff3f:	lea    eax,[esp+0x94]
1002ff46:	push   eax
1002ff47:	push   ecx
1002ff48:	call   0x10045cb6
1002ff4d:	add    esp,0xc
1002ff50:	push   eax
1002ff51:	lea    edx,[esp+0x78]
1002ff55:	push   edx
1002ff56:	call   0x10004126
1002ff5b:	lea    esi,[esp+0x1c]
1002ff5f:	call   0x10034050
1002ff64:	mov    BYTE PTR [esp+0xbc],0x5
1002ff6c:	mov    ebx,DWORD PTR [esp+0x64]
1002ff70:	test   ebx,ebx
1002ff72:	je     0x1002ffa1
1002ff74:	mov    esi,DWORD PTR [esp+0x68]
1002ff78:	lea    edi,[esp+0x2c]
1002ff7c:	call   0x10034070
1002ff81:	lea    ebx,[esp+0x1c]
1002ff85:	mov    BYTE PTR [esp+0xbc],0x6
1002ff8d:	call   0x10034390
1002ff92:	mov    eax,edi
1002ff94:	mov    BYTE PTR [esp+0xbc],0x5
1002ff9c:	call   0x100340d0
1002ffa1:	mov    eax,DWORD PTR [esp+0x1c]
1002ffa5:	cmp    DWORD PTR [eax-0xc],0x0
1002ffa9:	jne    0x1002ffb9
1002ffab:	mov    edx,0x10073d3c
1002ffb0:	lea    ebx,[esp+0x1c]
1002ffb4:	call   0x100340f0
1002ffb9:	mov    ecx,DWORD PTR [esp+0x1c]
1002ffbd:	push   ecx
1002ffbe:	lea    edx,[esp+0x78]
1002ffc2:	push   edx
1002ffc3:	call   0x10004126
1002ffc8:	mov    ebx,DWORD PTR [esp+0x6c]
1002ffcc:	test   ebx,ebx
1002ffce:	je     0x1003002c
1002ffd0:	mov    esi,DWORD PTR [esp+0x70]
1002ffd4:	lea    edi,[esp+0x2c]
1002ffd8:	call   0x10034070
1002ffdd:	mov    BYTE PTR [esp+0xbc],0x7
1002ffe5:	mov    esi,DWORD PTR [esp+0x2c]
1002ffe9:	push   0x23
1002ffeb:	push   esi
1002ffec:	call   0x10058baa
1002fff1:	add    esp,0x8
1002fff4:	test   eax,eax
1002fff6:	je     0x10030010
1002fff8:	sub    eax,esi
1002fffa:	mov    ecx,eax
1002fffc:	cmp    ecx,0xffffffff
1002ffff:	je     0x10030010
10030001:	mov    eax,DWORD PTR [esi-0xc]
10030004:	mov    edx,edi
10030006:	push   edx
10030007:	call   0x10034190
1003000c:	mov    esi,DWORD PTR [esp+0x2c]
10030010:	push   esi
10030011:	lea    eax,[esp+0x78]
10030015:	push   eax
10030016:	call   0x10004126
1003001b:	lea    eax,[esp+0x2c]
1003001f:	mov    BYTE PTR [esp+0xbc],0x5
10030027:	call   0x100340d0
1003002c:	lea    ecx,[esp+0x74]
10030030:	push   ecx
10030031:	mov    ecx,ebp
10030033:	call   0x100011c9
10030038:	lea    eax,[esp+0x1c]
1003003c:	call   0x100340d0
10030041:	lea    eax,[esp+0x30]
10030045:	call   0x100340d0
1003004a:	lea    eax,[esp+0x24]
1003004e:	call   0x100340d0
10030053:	cmp    DWORD PTR [esp+0x8c],0x10
1003005b:	jb     0x1003006a
1003005d:	mov    edx,DWORD PTR [esp+0x78]
10030061:	push   edx
10030062:	call   0x10042fe2
10030067:	add    esp,0x4
1003006a:	mov    DWORD PTR [esp+0x88],0x0
10030075:	mov    BYTE PTR [esp+0x78],0x0
1003007a:	jmp    0x1002fe7f
1003007f:	mov    eax,DWORD PTR [esp+0x1c]
10030083:	push   0xffffffff
10030085:	push   ebx
10030086:	mov    DWORD PTR [ebp+0x18],0xf
1003008d:	mov    DWORD PTR [ebp+0x14],ebx
10030090:	push   eax
10030091:	mov    ecx,ebp
10030093:	mov    BYTE PTR [ebp+0x4],0x0
10030097:	call   0x10001241
1003009c:	cmp    DWORD PTR [esp+0x8c],0x10
100300a4:	jb     0x100300b3
100300a6:	mov    ecx,DWORD PTR [esp+0x78]
100300aa:	push   ecx
100300ab:	call   0x10042fe2
100300b0:	add    esp,0x4
100300b3:	mov    DWORD PTR [esp+0x8c],0xf
100300be:	mov    DWORD PTR [esp+0x88],ebx
100300c5:	mov    BYTE PTR [esp+0x78],0x0
100300ca:	jmp    0x1002fcb1
100300cf:	int3   
100300d0:	push   0xffffffff
100300d2:	push   0x10060469
100300d7:	mov    eax,fs:0x0
100300dd:	push   eax
100300de:	sub    esp,0xc
100300e1:	push   ebx
100300e2:	push   ebp
100300e3:	push   edi
100300e4:	mov    eax,ds:0x100801ac
100300e9:	xor    eax,esp
100300eb:	push   eax
100300ec:	lea    eax,[esp+0x1c]
100300f0:	mov    fs:0x0,eax
100300f6:	mov    eax,DWORD PTR [esp+0x2c]
100300fa:	xor    ecx,ecx
100300fc:	mov    DWORD PTR [esp+0x14],ecx
10030100:	mov    DWORD PTR [esi+0x18],0xf
10030107:	mov    DWORD PTR [esi+0x14],ecx
1003010a:	mov    DWORD PTR [esp+0x18],esi
1003010e:	mov    BYTE PTR [esi+0x4],cl
10030111:	mov    DWORD PTR [esp+0x24],ecx
10030115:	cmp    DWORD PTR [eax+0x18],0x10
10030119:	mov    DWORD PTR [esp+0x14],0x1
10030121:	jb     0x10030128
10030123:	mov    ebp,DWORD PTR [eax+0x4]
10030126:	jmp    0x1003012b
10030128:	lea    ebp,[eax+0x4]
1003012b:	mov    al,BYTE PTR [ebp+0x0]
1003012e:	test   al,al
10030130:	je     0x10030344
10030136:	mov    cl,BYTE PTR [ebp+0x1]
10030139:	test   cl,cl
1003013b:	je     0x100302b4
10030141:	cmp    al,0x25
10030143:	jne    0x100302b4
10030149:	movzx  eax,cl
1003014c:	push   eax
1003014d:	call   0x1004f5ec
10030152:	add    esp,0x4
10030155:	test   eax,eax
10030157:	je     0x100302b4
1003015d:	movzx  ecx,BYTE PTR [ebp+0x2]
10030161:	push   ecx
10030162:	call   0x1004f5ec
10030167:	add    esp,0x4
1003016a:	test   eax,eax
1003016c:	je     0x100302b4
10030172:	mov    al,BYTE PTR [ebp+0x1]
10030175:	cmp    al,0x30
10030177:	jl     0x10030185
10030179:	cmp    al,0x39
1003017b:	jg     0x10030185
1003017d:	movsx  edi,al
10030180:	sub    edi,0x30
10030183:	jmp    0x10030196
10030185:	movsx  edx,al
10030188:	push   edx
10030189:	call   0x1005876f
1003018e:	mov    edi,eax
10030190:	add    esp,0x4
10030193:	sub    edi,0x37
10030196:	mov    al,BYTE PTR [ebp+0x2]
10030199:	cmp    al,0x30
1003019b:	jl     0x100301a9
1003019d:	cmp    al,0x39
1003019f:	jg     0x100301a9
100301a1:	movsx  eax,al
100301a4:	sub    eax,0x30
100301a7:	jmp    0x100301b8
100301a9:	movsx  eax,al
100301ac:	push   eax
100301ad:	call   0x1005876f
100301b2:	add    esp,0x4
100301b5:	sub    eax,0x37
100301b8:	shl    edi,0x4
100301bb:	add    edi,eax
100301bd:	cmp    edi,0x7f
100301c0:	jg     0x100302b4
100301c6:	mov    al,BYTE PTR [ebp+0x1]
100301c9:	cmp    al,0x30
100301cb:	jl     0x100301d9
100301cd:	cmp    al,0x39
100301cf:	jg     0x100301d9
100301d1:	movsx  ebx,al
100301d4:	sub    ebx,0x30
100301d7:	jmp    0x100301ea
100301d9:	movsx  ecx,al
100301dc:	push   ecx
100301dd:	call   0x1005876f
100301e2:	mov    ebx,eax
100301e4:	add    esp,0x4
100301e7:	sub    ebx,0x37
100301ea:	mov    al,BYTE PTR [ebp+0x2]
100301ed:	cmp    al,0x30
100301ef:	jl     0x100301fd
100301f1:	cmp    al,0x39
100301f3:	jg     0x100301fd
100301f5:	movsx  eax,al
100301f8:	sub    eax,0x30
100301fb:	jmp    0x1003020c
100301fd:	movsx  edx,al
10030200:	push   edx
10030201:	call   0x1005876f
10030206:	add    esp,0x4
10030209:	sub    eax,0x37
1003020c:	mov    DWORD PTR [esp+0x10],eax
10030210:	or     eax,0xffffffff
10030213:	sub    eax,DWORD PTR [esi+0x14]
10030216:	cmp    eax,0x1
10030219:	ja     0x10030220
1003021b:	call   0x100574b0
10030220:	mov    edi,DWORD PTR [esi+0x14]
10030223:	add    edi,0x1
10030226:	cmp    edi,0xfffffffe
10030229:	jbe    0x10030230
1003022b:	call   0x100574b0
10030230:	mov    eax,DWORD PTR [esi+0x18]
10030233:	cmp    eax,edi
10030235:	jae    0x10030260
10030237:	mov    ecx,DWORD PTR [esi+0x14]
1003023a:	push   ecx
1003023b:	push   edi
1003023c:	mov    ecx,esi
1003023e:	call   0x10001500
10030243:	test   edi,edi
10030245:	jbe    0x100302ac
10030247:	mov    ecx,DWORD PTR [esi+0x14]
1003024a:	shl    bl,0x4
1003024d:	add    bl,BYTE PTR [esp+0x10]
10030251:	mov    edx,0x10
10030256:	cmp    DWORD PTR [esi+0x18],edx
10030259:	jb     0x10030288
1003025b:	mov    eax,DWORD PTR [esi+0x4]
1003025e:	jmp    0x1003028b
10030260:	test   edi,edi
10030262:	jne    0x10030245
10030264:	cmp    eax,0x10
10030267:	mov    DWORD PTR [esi+0x14],edi
1003026a:	jb     0x1003027a
1003026c:	mov    eax,DWORD PTR [esi+0x4]
1003026f:	mov    BYTE PTR [eax],0x0
10030272:	add    ebp,0x2
10030275:	jmp    0x10030336
1003027a:	lea    eax,[esi+0x4]
1003027d:	mov    BYTE PTR [eax],0x0
10030280:	add    ebp,0x2
10030283:	jmp    0x10030336
10030288:	lea    eax,[esi+0x4]
1003028b:	mov    BYTE PTR [eax+ecx*1],bl
1003028e:	cmp    DWORD PTR [esi+0x18],edx
10030291:	mov    DWORD PTR [esi+0x14],edi
10030294:	jb     0x100302a5
10030296:	mov    eax,DWORD PTR [esi+0x4]
10030299:	mov    BYTE PTR [eax+edi*1],0x0
1003029d:	add    ebp,0x2
100302a0:	jmp    0x10030336
100302a5:	lea    eax,[esi+0x4]
100302a8:	mov    BYTE PTR [eax+edi*1],0x0
100302ac:	add    ebp,0x2
100302af:	jmp    0x10030336
100302b4:	mov    bl,BYTE PTR [ebp+0x0]
100302b7:	or     edx,0xffffffff
100302ba:	sub    edx,DWORD PTR [esi+0x14]
100302bd:	cmp    edx,0x1
100302c0:	ja     0x100302c7
100302c2:	call   0x100574b0
100302c7:	mov    edi,DWORD PTR [esi+0x14]
100302ca:	add    edi,0x1
100302cd:	cmp    edi,0xfffffffe
100302d0:	jbe    0x100302d7
100302d2:	call   0x100574b0
100302d7:	mov    eax,DWORD PTR [esi+0x18]
100302da:	cmp    eax,edi
100302dc:	jae    0x10030300
100302de:	mov    eax,DWORD PTR [esi+0x14]
100302e1:	push   eax
100302e2:	push   edi
100302e3:	mov    ecx,esi
100302e5:	call   0x10001500
100302ea:	test   edi,edi
100302ec:	jbe    0x10030336
100302ee:	mov    ecx,DWORD PTR [esi+0x14]
100302f1:	mov    edx,0x10
100302f6:	cmp    DWORD PTR [esi+0x18],edx
100302f9:	jb     0x1003031c
100302fb:	mov    eax,DWORD PTR [esi+0x4]
100302fe:	jmp    0x1003031f
10030300:	test   edi,edi
10030302:	jne    0x100302ec
10030304:	cmp    eax,0x10
10030307:	mov    DWORD PTR [esi+0x14],edi
1003030a:	jb     0x10030314
1003030c:	mov    eax,DWORD PTR [esi+0x4]
1003030f:	mov    BYTE PTR [eax],0x0
10030312:	jmp    0x10030336
10030314:	lea    eax,[esi+0x4]
10030317:	mov    BYTE PTR [eax],0x0
1003031a:	jmp    0x10030336
1003031c:	lea    eax,[esi+0x4]
1003031f:	mov    BYTE PTR [eax+ecx*1],bl
10030322:	cmp    DWORD PTR [esi+0x18],edx
10030325:	mov    DWORD PTR [esi+0x14],edi
10030328:	jb     0x1003032f
1003032a:	mov    eax,DWORD PTR [esi+0x4]
1003032d:	jmp    0x10030332
1003032f:	lea    eax,[esi+0x4]
10030332:	mov    BYTE PTR [eax+edi*1],0x0
10030336:	mov    al,BYTE PTR [ebp+0x1]
10030339:	add    ebp,0x1
1003033c:	test   al,al
1003033e:	jne    0x10030136
10030344:	mov    eax,esi
10030346:	mov    ecx,DWORD PTR [esp+0x1c]
1003034a:	mov    DWORD PTR fs:0x0,ecx
10030351:	pop    ecx
10030352:	pop    edi
10030353:	pop    ebp
10030354:	pop    ebx
10030355:	add    esp,0x18
10030358:	ret    
10030359:	int3   
1003035a:	int3   
1003035b:	int3   
1003035c:	int3   
1003035d:	int3   
1003035e:	int3   
1003035f:	int3   
10030360:	sub    esp,0x14
10030363:	mov    eax,ds:0x100801ac
10030368:	xor    eax,esp
1003036a:	mov    DWORD PTR [esp+0x10],eax
1003036e:	movzx  eax,BYTE PTR [esp+0x18]
10030373:	push   eax
10030374:	push   0x10074368
10030379:	push   0x6
1003037b:	mov    ecx,0x10074390
10030380:	mov    DWORD PTR [esp+0xc],0x0
10030388:	call   0x100042b4
1003038d:	add    esp,0x8
10030390:	push   eax
10030391:	lea    ecx,[esp+0xc]
10030395:	push   ecx
10030396:	call   0x10058a6f
1003039b:	lea    edx,[esp+0x10]
1003039f:	mov    DWORD PTR [esi+0x18],0xf
100303a6:	mov    DWORD PTR [esi+0x14],0x0
100303ad:	push   edx
100303ae:	mov    BYTE PTR [esi+0x4],0x0
100303b2:	call   0x10043450
100303b7:	add    esp,0x10
100303ba:	push   eax
100303bb:	lea    eax,[esp+0x8]
100303bf:	push   eax
100303c0:	mov    ecx,esi
100303c2:	call   0x1000133b
100303c7:	mov    ecx,DWORD PTR [esp+0x10]
100303cb:	xor    ecx,esp
100303cd:	mov    eax,esi
100303cf:	call   0x10043615
100303d4:	add    esp,0x14
100303d7:	ret    
100303d8:	int3   
100303d9:	int3   
100303da:	int3   
100303db:	int3   
100303dc:	int3   
100303dd:	int3   
100303de:	int3   
100303df:	int3   
100303e0:	push   0xffffffff
100303e2:	push   0x10062d59
100303e7:	mov    eax,fs:0x0
100303ed:	push   eax
100303ee:	sub    esp,0x28
100303f1:	push   ebx
100303f2:	push   ebp
100303f3:	push   esi
100303f4:	mov    eax,ds:0x100801ac
100303f9:	xor    eax,esp
100303fb:	push   eax
100303fc:	lea    eax,[esp+0x38]
10030400:	mov    fs:0x0,eax
10030406:	xor    eax,eax
10030408:	mov    DWORD PTR [esp+0x30],eax
1003040c:	mov    DWORD PTR [edi+0x18],0xf
10030413:	mov    DWORD PTR [edi+0x14],eax
10030416:	mov    DWORD PTR [esp+0x34],edi
1003041a:	mov    esi,ecx
1003041c:	mov    BYTE PTR [edi+0x4],al
1003041f:	mov    DWORD PTR [esp+0x40],eax
10030423:	mov    eax,DWORD PTR [esi]
10030425:	mov    ebp,0x10
1003042a:	mov    ecx,0x1
1003042f:	sub    eax,ebp
10030431:	cmp    DWORD PTR [eax+0xc],ecx
10030434:	mov    DWORD PTR [esp+0x30],ecx
10030438:	jle    0x10030444
1003043a:	mov    eax,DWORD PTR [eax+0x4]
1003043d:	push   eax
1003043e:	push   esi
1003043f:	call   0x1000229c
10030444:	mov    ebx,DWORD PTR [esi]
10030446:	movzx  eax,WORD PTR [ebx]
10030449:	test   ax,ax
1003044c:	mov    DWORD PTR [esp+0x10],ebx
10030450:	je     0x100307a2
10030456:	jmp    0x10030464
10030458:	jmp    0x10030460
1003045a:	lea    ebx,[ebx+0x0]
10030460:	mov    ebx,DWORD PTR [esp+0x10]
10030464:	cmp    ax,0x41
10030468:	jb     0x10030474
1003046a:	cmp    ax,0x5a
1003046e:	jbe    0x10030709
10030474:	cmp    ax,0x61
10030478:	jb     0x10030484
1003047a:	cmp    ax,0x7a
1003047e:	jbe    0x10030709
10030484:	cmp    ax,0x30
10030488:	jb     0x10030494
1003048a:	cmp    ax,0x39
1003048e:	jbe    0x10030709
10030494:	cmp    ax,0x20
10030498:	jne    0x10030506
1003049a:	or     ecx,0xffffffff
1003049d:	sub    ecx,DWORD PTR [edi+0x14]
100304a0:	cmp    ecx,0x1
100304a3:	ja     0x100304aa
100304a5:	call   0x100574b0
100304aa:	mov    esi,DWORD PTR [edi+0x14]
100304ad:	add    esi,0x1
100304b0:	cmp    esi,0xfffffffe
100304b3:	jbe    0x100304ba
100304b5:	call   0x100574b0
100304ba:	mov    eax,DWORD PTR [edi+0x18]
100304bd:	cmp    eax,esi
100304bf:	jae    0x100304e4
100304c1:	mov    edx,DWORD PTR [edi+0x14]
100304c4:	push   edx
100304c5:	push   esi
100304c6:	mov    ecx,edi
100304c8:	call   0x10001500
100304cd:	test   esi,esi
100304cf:	jbe    0x1003078b
100304d5:	cmp    DWORD PTR [edi+0x18],ebp
100304d8:	mov    ecx,DWORD PTR [edi+0x14]
100304db:	lea    edx,[edi+0x4]
100304de:	jb     0x100304ed
100304e0:	mov    eax,DWORD PTR [edx]
100304e2:	jmp    0x100304ef
100304e4:	test   esi,esi
100304e6:	jne    0x100304cf
100304e8:	jmp    0x10030759
100304ed:	mov    eax,edx
100304ef:	mov    BYTE PTR [eax+ecx*1],0x2b
100304f3:	cmp    DWORD PTR [edi+0x18],ebp
100304f6:	mov    DWORD PTR [edi+0x14],esi
100304f9:	jb     0x10030785
100304ff:	mov    eax,DWORD PTR [edx]
10030501:	jmp    0x10030787
10030506:	cmp    ax,0x2d
1003050a:	je     0x10030709
10030510:	cmp    ax,0x5f
10030514:	je     0x10030709
1003051a:	cmp    ax,0x2e
1003051e:	je     0x10030709
10030524:	cmp    ax,0x21
10030528:	je     0x10030709
1003052e:	cmp    ax,0x7e
10030532:	je     0x10030709
10030538:	cmp    ax,0x2a
1003053c:	je     0x10030709
10030542:	cmp    ax,0x27
10030546:	je     0x10030709
1003054c:	cmp    ax,0x28
10030550:	je     0x10030709
10030556:	cmp    ax,0x29
1003055a:	je     0x10030709
10030560:	cmp    ax,0x7f
10030564:	lea    esi,[esp+0x14]
10030568:	ja     0x100305aa
1003056a:	movzx  eax,BYTE PTR [ebx]
1003056d:	push   eax
1003056e:	call   0x10030360
10030573:	add    esp,0x4
10030576:	push   0xffffffff
10030578:	push   0x0
1003057a:	mov    esi,edi
1003057c:	mov    DWORD PTR [esp+0x48],0x1
10030584:	call   0x10004cbe
10030589:	mov    BYTE PTR [esp+0x40],0x0
1003058e:	cmp    DWORD PTR [esp+0x2c],ebp
10030592:	jb     0x1003078b
10030598:	mov    ecx,DWORD PTR [esp+0x18]
1003059c:	push   ecx
1003059d:	call   0x10042fe2
100305a2:	add    esp,0x4
100305a5:	jmp    0x1003078b
100305aa:	cmp    ax,0x7ff
100305ae:	ja     0x1003063a
100305b4:	shr    eax,0x6
100305b7:	or     eax,0xffffffc0
100305ba:	push   eax
100305bb:	call   0x10030360
100305c0:	add    esp,0x4
100305c3:	push   0xffffffff
100305c5:	push   0x0
100305c7:	mov    esi,edi
100305c9:	mov    DWORD PTR [esp+0x48],0x2
100305d1:	call   0x10004cbe
100305d6:	mov    BYTE PTR [esp+0x40],0x0
100305db:	cmp    DWORD PTR [esp+0x2c],ebp
100305df:	jb     0x100305ee
100305e1:	mov    edx,DWORD PTR [esp+0x18]
100305e5:	push   edx
100305e6:	call   0x10042fe2
100305eb:	add    esp,0x4
100305ee:	movzx  eax,BYTE PTR [ebx]
100305f1:	and    eax,0xffffff3f
100305f6:	or     eax,0xffffff80
100305f9:	push   eax
100305fa:	lea    esi,[esp+0x18]
100305fe:	call   0x10030360
10030603:	add    esp,0x4
10030606:	push   0xffffffff
10030608:	push   0x0
1003060a:	mov    esi,edi
1003060c:	mov    DWORD PTR [esp+0x48],0x3
10030614:	call   0x10004cbe
10030619:	mov    BYTE PTR [esp+0x40],0x0
1003061e:	cmp    DWORD PTR [esp+0x2c],ebp
10030622:	jb     0x1003078b
10030628:	mov    ecx,DWORD PTR [esp+0x18]
1003062c:	push   ecx
1003062d:	call   0x10042fe2
10030632:	add    esp,0x4
10030635:	jmp    0x1003078b
1003063a:	shr    ax,0xc
1003063e:	or     eax,0xffffffe0
10030641:	push   eax
10030642:	call   0x10030360
10030647:	add    esp,0x4
1003064a:	push   0xffffffff
1003064c:	push   0x0
1003064e:	mov    esi,edi
10030650:	mov    DWORD PTR [esp+0x48],0x4
10030658:	call   0x10004cbe
1003065d:	mov    BYTE PTR [esp+0x40],0x0
10030662:	cmp    DWORD PTR [esp+0x2c],ebp
10030666:	jb     0x10030675
10030668:	mov    edx,DWORD PTR [esp+0x18]
1003066c:	push   edx
1003066d:	call   0x10042fe2
10030672:	add    esp,0x4
10030675:	movzx  eax,WORD PTR [ebx]
10030678:	shr    ax,0x6
1003067c:	lea    esi,[esp+0x14]
10030680:	and    eax,0xffffff3f
10030685:	or     eax,0xffffff80
10030688:	push   eax
10030689:	call   0x10030360
1003068e:	add    esp,0x4
10030691:	push   0xffffffff
10030693:	push   0x0
10030695:	mov    esi,edi
10030697:	mov    DWORD PTR [esp+0x48],0x5
1003069f:	call   0x10004cbe
100306a4:	mov    BYTE PTR [esp+0x40],0x0
100306a9:	cmp    DWORD PTR [esp+0x2c],ebp
100306ad:	jb     0x100306bc
100306af:	mov    ecx,DWORD PTR [esp+0x18]
100306b3:	push   ecx
100306b4:	call   0x10042fe2
100306b9:	add    esp,0x4
100306bc:	movzx  edx,BYTE PTR [ebx]
100306bf:	and    edx,0xffffff3f
100306c5:	or     edx,0xffffff80
100306c8:	push   edx
100306c9:	lea    esi,[esp+0x18]
100306cd:	call   0x10030360
100306d2:	add    esp,0x4
100306d5:	push   0xffffffff
100306d7:	push   0x0
100306d9:	mov    esi,edi
100306db:	mov    DWORD PTR [esp+0x48],0x6
100306e3:	call   0x10004cbe
100306e8:	mov    BYTE PTR [esp+0x40],0x0
100306ed:	cmp    DWORD PTR [esp+0x2c],ebp
100306f1:	jb     0x1003078b
100306f7:	mov    eax,DWORD PTR [esp+0x18]
100306fb:	push   eax
100306fc:	call   0x10042fe2
10030701:	add    esp,0x4
10030704:	jmp    0x1003078b
10030709:	mov    ecx,DWORD PTR [esp+0x10]
1003070d:	mov    bl,BYTE PTR [ecx]
1003070f:	or     edx,0xffffffff
10030712:	sub    edx,DWORD PTR [edi+0x14]
10030715:	cmp    edx,0x1
10030718:	ja     0x1003071f
1003071a:	call   0x100574b0
1003071f:	mov    esi,DWORD PTR [edi+0x14]
10030722:	add    esi,0x1
10030725:	cmp    esi,0xfffffffe
10030728:	jbe    0x1003072f
1003072a:	call   0x100574b0
1003072f:	mov    eax,DWORD PTR [edi+0x18]
10030732:	cmp    eax,esi
10030734:	jae    0x10030755
10030736:	mov    eax,DWORD PTR [edi+0x14]
10030739:	push   eax
1003073a:	push   esi
1003073b:	mov    ecx,edi
1003073d:	call   0x10001500
10030742:	test   esi,esi
10030744:	jbe    0x1003078b
10030746:	cmp    DWORD PTR [edi+0x18],ebp
10030749:	mov    ecx,DWORD PTR [edi+0x14]
1003074c:	lea    edx,[edi+0x4]
1003074f:	jb     0x10030774
10030751:	mov    eax,DWORD PTR [edx]
10030753:	jmp    0x10030776
10030755:	test   esi,esi
10030757:	jne    0x10030744
10030759:	cmp    eax,ebp
1003075b:	mov    DWORD PTR [edi+0x14],0x0
10030762:	jb     0x1003076c
10030764:	mov    eax,DWORD PTR [edi+0x4]
10030767:	mov    BYTE PTR [eax],0x0
1003076a:	jmp    0x1003078b
1003076c:	lea    eax,[edi+0x4]
1003076f:	mov    BYTE PTR [eax],0x0
10030772:	jmp    0x1003078b
10030774:	mov    eax,edx
10030776:	mov    BYTE PTR [eax+ecx*1],bl
10030779:	cmp    DWORD PTR [edi+0x18],ebp
1003077c:	mov    DWORD PTR [edi+0x14],esi
1003077f:	jb     0x10030785
10030781:	mov    eax,DWORD PTR [edx]
10030783:	jmp    0x10030787
10030785:	mov    eax,edx
10030787:	mov    BYTE PTR [eax+esi*1],0x0
1003078b:	mov    eax,DWORD PTR [esp+0x10]
1003078f:	add    eax,0x2
10030792:	mov    DWORD PTR [esp+0x10],eax
10030796:	movzx  eax,WORD PTR [eax]
10030799:	test   ax,ax
1003079c:	jne    0x10030460
100307a2:	mov    eax,edi
100307a4:	mov    ecx,DWORD PTR [esp+0x38]
100307a8:	mov    DWORD PTR fs:0x0,ecx
100307af:	pop    ecx
100307b0:	pop    esi
100307b1:	pop    ebp
100307b2:	pop    ebx
100307b3:	add    esp,0x34
100307b6:	ret    
100307b7:	int3   
100307b8:	int3   
100307b9:	int3   
100307ba:	int3   
100307bb:	int3   
100307bc:	int3   
100307bd:	int3   
100307be:	int3   
100307bf:	int3   
100307c0:	push   0xffffffff
100307c2:	push   0x10060428
100307c7:	mov    eax,fs:0x0
100307cd:	push   eax
100307ce:	sub    esp,0x40
100307d1:	push   ebx
100307d2:	push   ebp
100307d3:	push   esi
100307d4:	push   edi
100307d5:	mov    eax,ds:0x100801ac
100307da:	xor    eax,esp
100307dc:	push   eax
100307dd:	lea    eax,[esp+0x54]
100307e1:	mov    fs:0x0,eax
100307e7:	mov    esi,ecx
100307e9:	mov    ebp,DWORD PTR [esp+0x64]
100307ed:	xor    ebx,ebx
100307ef:	push   0x38
100307f1:	lea    eax,[esp+0x20]
100307f5:	push   ebx
100307f6:	push   eax
100307f7:	mov    DWORD PTR [esp+0x20],ebx
100307fb:	call   0x10045dc0
10030800:	add    esp,0xc
10030803:	cmp    DWORD PTR [esi+0x18],0x10
10030807:	mov    DWORD PTR [esp+0x18],0x3c
1003080f:	mov    DWORD PTR [esp+0x2c],0x1
10030817:	jb     0x1003081e
10030819:	mov    esi,DWORD PTR [esi+0x4]
1003081c:	jmp    0x10030821
1003081e:	add    esi,0x4
10030821:	lea    ecx,[esp+0x18]
10030825:	push   ecx
10030826:	push   ebx
10030827:	push   ebx
10030828:	push   esi
10030829:	call   DWORD PTR ds:0x1006738c
1003082f:	test   eax,eax
10030831:	jne    0x1003085c
10030833:	mov    DWORD PTR [ebp+0x18],0xf
1003083a:	mov    DWORD PTR [ebp+0x14],ebx
1003083d:	push   0x1006dd18
10030842:	mov    BYTE PTR [ebp+0x4],bl
10030845:	call   0x10043450
1003084a:	add    esp,0x4
1003084d:	push   eax
1003084e:	push   0x1006dd18
10030853:	mov    ecx,ebp
10030855:	call   0x1000133b
1003085a:	jmp    0x100308d0
1003085c:	mov    esi,DWORD PTR [esp+0x2c]
10030860:	mov    ebx,DWORD PTR [esp+0x28]
10030864:	lea    edi,[esp+0x14]
10030868:	call   0x10034070
1003086d:	xor    ebx,ebx
1003086f:	mov    DWORD PTR [esp+0x5c],ebx
10030873:	mov    esi,DWORD PTR [esp+0x14]
10030877:	cmp    DWORD PTR [esi-0x4],0x1
1003087b:	jle    0x1003088d
1003087d:	mov    edx,DWORD PTR [esi-0xc]
10030880:	push   edx
10030881:	mov    eax,edi
10030883:	push   eax
10030884:	call   0x100343f0
10030889:	mov    esi,DWORD PTR [esp+0x14]
1003088d:	mov    DWORD PTR [ebp+0x18],0xf
10030894:	mov    DWORD PTR [ebp+0x14],ebx
10030897:	push   esi
10030898:	mov    BYTE PTR [ebp+0x4],bl
1003089b:	call   0x10043450
100308a0:	add    esp,0x4
100308a3:	push   eax
100308a4:	push   esi
100308a5:	mov    ecx,ebp
100308a7:	call   0x1000133b
100308ac:	lea    eax,[esi-0x10]
100308af:	mov    DWORD PTR [esp+0x5c],0xffffffff
100308b7:	lea    ecx,[eax+0xc]
100308ba:	or     edx,0xffffffff
100308bd:	lock xadd DWORD PTR [ecx],edx
100308c1:	dec    edx
100308c2:	test   edx,edx
100308c4:	jg     0x100308d0
100308c6:	mov    ecx,DWORD PTR [eax]
100308c8:	mov    edx,DWORD PTR [ecx]
100308ca:	push   eax
100308cb:	mov    eax,DWORD PTR [edx+0x4]
100308ce:	call   eax
100308d0:	mov    eax,ebp
100308d2:	mov    ecx,DWORD PTR [esp+0x54]
100308d6:	mov    DWORD PTR fs:0x0,ecx
100308dd:	pop    ecx
100308de:	pop    edi
100308df:	pop    esi
100308e0:	pop    ebp
100308e1:	pop    ebx
100308e2:	add    esp,0x4c
100308e5:	ret    
100308e6:	int3   
100308e7:	int3   
100308e8:	int3   
100308e9:	int3   
100308ea:	int3   
100308eb:	int3   
100308ec:	int3   
100308ed:	int3   
100308ee:	int3   
100308ef:	int3   
100308f0:	push   ebp
100308f1:	lea    ebp,[esp-0x78]
100308f5:	sub    esp,0xd0
100308fb:	mov    eax,ds:0x100801ac
10030900:	xor    eax,ebp
10030902:	mov    DWORD PTR [ebp+0x74],eax
10030905:	push   esi
10030906:	push   edi
10030907:	push   0x64
10030909:	lea    eax,[ebp-0x54]
1003090c:	push   eax
1003090d:	xor    esi,esi
1003090f:	push   0x59
10030911:	mov    DWORD PTR [ebp-0x58],esi
10030914:	call   DWORD PTR ds:0x10067244
1003091a:	push   eax
1003091b:	call   DWORD PTR ds:0x1006724c
10030921:	call   DWORD PTR ds:0x10080ffc
10030927:	lea    ecx,[ebp-0x54]
1003092a:	push   ecx
1003092b:	mov    DWORD PTR [ebp-0x58],eax
1003092e:	call   DWORD PTR ds:0x100670ac
10030934:	add    eax,0x1
10030937:	cmp    eax,0x3fffffff
1003093c:	jg     0x10030975
1003093e:	lea    esi,[eax+eax*1]
10030941:	mov    eax,esi
10030943:	call   0x1004b9b0
10030948:	mov    edi,esp
1003094a:	test   edi,edi
1003094c:	je     0x10030973
1003094e:	mov    eax,DWORD PTR [ebp-0x58]
10030951:	push   0x0
10030953:	push   0x0
10030955:	push   esi
10030956:	push   edi
10030957:	push   0xffffffff
10030959:	lea    edx,[ebp-0x54]
1003095c:	push   edx
1003095d:	push   0x0
1003095f:	push   eax
10030960:	mov    BYTE PTR [edi],0x0
10030963:	call   DWORD PTR ds:0x100670c4
10030969:	mov    esi,eax
1003096b:	neg    esi
1003096d:	sbb    esi,esi
1003096f:	and    esi,edi
10030971:	jmp    0x10030975
10030973:	xor    esi,esi
10030975:	mov    DWORD PTR [ebx+0x18],0xf
1003097c:	mov    DWORD PTR [ebx+0x14],0x0
10030983:	push   esi
10030984:	mov    BYTE PTR [ebx+0x4],0x0
10030988:	call   0x10043450
1003098d:	add    esp,0x4
10030990:	push   eax
10030991:	push   esi
10030992:	mov    ecx,ebx
10030994:	call   0x1000133b
10030999:	mov    eax,ebx
1003099b:	lea    esp,[ebp-0x60]
1003099e:	pop    edi
1003099f:	pop    esi
100309a0:	mov    ecx,DWORD PTR [ebp+0x74]
100309a3:	xor    ecx,ebp
100309a5:	call   0x10043615
100309aa:	add    ebp,0x78
100309ad:	mov    esp,ebp
100309af:	pop    ebp
100309b0:	ret    
100309b1:	int3   
100309b2:	int3   
100309b3:	int3   
100309b4:	int3   
100309b5:	int3   
100309b6:	int3   
100309b7:	int3   
100309b8:	int3   
100309b9:	int3   
100309ba:	int3   
100309bb:	int3   
100309bc:	int3   
100309bd:	int3   
100309be:	int3   
100309bf:	int3   
100309c0:	sub    esp,0x74
100309c3:	mov    eax,ds:0x100801ac
100309c8:	xor    eax,esp
100309ca:	mov    DWORD PTR [esp+0x70],eax
100309ce:	mov    eax,DWORD PTR [esp+0x78]
100309d2:	movzx  ecx,BYTE PTR [eax+0xf]
100309d6:	movzx  edx,BYTE PTR [eax+0xe]
100309da:	push   ecx
100309db:	movzx  ecx,BYTE PTR [eax+0xd]
100309df:	push   edx
100309e0:	movzx  edx,BYTE PTR [eax+0xc]
100309e4:	push   ecx
100309e5:	movzx  ecx,BYTE PTR [eax+0xb]
100309e9:	push   edx
100309ea:	movzx  edx,BYTE PTR [eax+0xa]
100309ee:	push   ecx
100309ef:	movzx  ecx,BYTE PTR [eax+0x9]
100309f3:	push   edx
100309f4:	movzx  edx,BYTE PTR [eax+0x8]
100309f8:	push   ecx
100309f9:	movzx  ecx,WORD PTR [eax+0x6]
100309fd:	push   edx
100309fe:	movzx  edx,WORD PTR [eax+0x4]
10030a02:	mov    eax,DWORD PTR [eax]
10030a04:	push   ecx
10030a05:	push   edx
10030a06:	push   eax
10030a07:	push   0x10074398
10030a0c:	push   0x32
10030a0e:	mov    ecx,0x100743c8
10030a13:	mov    DWORD PTR [esp+0x34],0x0
10030a1b:	call   0x100042b4
10030a20:	add    esp,0x8
10030a23:	push   eax
10030a24:	lea    ecx,[esp+0x34]
10030a28:	push   ecx
10030a29:	call   0x10058a6f
10030a2e:	lea    edx,[esp+0x38]
10030a32:	mov    DWORD PTR [esi+0x18],0xf
10030a39:	mov    DWORD PTR [esi+0x14],0x0
10030a40:	push   edx
10030a41:	mov    BYTE PTR [esi+0x4],0x0
10030a45:	call   0x10043450
10030a4a:	add    esp,0x38
10030a4d:	push   eax
10030a4e:	lea    eax,[esp+0x8]
10030a52:	push   eax
10030a53:	mov    ecx,esi
10030a55:	call   0x1000133b
10030a5a:	mov    ecx,DWORD PTR [esp+0x70]
10030a5e:	xor    ecx,esp
10030a60:	mov    eax,esi
10030a62:	call   0x10043615
10030a67:	add    esp,0x74
10030a6a:	ret    
10030a6b:	int3   
10030a6c:	int3   
10030a6d:	int3   
10030a6e:	int3   
10030a6f:	int3   
10030a70:	push   esi
10030a71:	push   edi
10030a72:	push   0x10082dbc
10030a77:	call   DWORD PTR ds:0x100670b0
10030a7d:	mov    eax,DWORD PTR [esp+0xc]
10030a81:	mov    esi,DWORD PTR [eax]
10030a83:	mov    edi,DWORD PTR [eax+0x4]
10030a86:	push   eax
10030a87:	call   0x10042fe2
10030a8c:	mov    eax,ds:0x10083010
10030a91:	add    esp,0x4
10030a94:	push   edi
10030a95:	push   eax
10030a96:	call   DWORD PTR ds:0x1006707c
10030a9c:	push   esi
10030a9d:	call   DWORD PTR ds:0x10067378
10030aa3:	push   0x10082dbc
10030aa8:	call   DWORD PTR ds:0x100670bc
10030aae:	pop    edi
10030aaf:	xor    eax,eax
10030ab1:	pop    esi
10030ab2:	ret    0x4
10030ab5:	int3   
10030ab6:	int3   
10030ab7:	int3   
10030ab8:	int3   
10030ab9:	int3   
10030aba:	int3   
10030abb:	int3   
10030abc:	int3   
10030abd:	int3   
10030abe:	int3   
10030abf:	int3   
10030ac0:	push   0xffffffff
10030ac2:	push   0x100645a8
10030ac7:	mov    eax,fs:0x0
10030acd:	push   eax
10030ace:	sub    esp,0x20
10030ad1:	push   ebx
10030ad2:	mov    eax,ds:0x100801ac
10030ad7:	xor    eax,esp
10030ad9:	push   eax
10030ada:	lea    eax,[esp+0x28]
10030ade:	mov    fs:0x0,eax
10030ae4:	xor    ebx,ebx
10030ae6:	mov    DWORD PTR [esp+0x8],ebx
10030aea:	push   0x1006dd18
10030aef:	mov    DWORD PTR [esp+0x28],0xf
10030af7:	mov    DWORD PTR [esp+0x24],ebx
10030afb:	mov    BYTE PTR [esp+0x14],bl
10030aff:	call   0x10043450
10030b04:	add    esp,0x4
10030b07:	push   eax
10030b08:	push   0x1006dd18
10030b0d:	lea    ecx,[esp+0x14]
10030b11:	call   0x1000133b
10030b16:	mov    eax,DWORD PTR [esp+0x44]
10030b1a:	mov    ecx,DWORD PTR [esp+0x40]
10030b1e:	push   eax
10030b1f:	mov    eax,DWORD PTR [esp+0x3c]
10030b23:	push   ecx
10030b24:	lea    edx,[esp+0x14]
10030b28:	push   edx
10030b29:	mov    edx,DWORD PTR [esp+0x48]
10030b2d:	push   eax
10030b2e:	lea    ecx,[esp+0x18]
10030b32:	push   ecx
10030b33:	mov    DWORD PTR [esp+0x44],ebx
10030b37:	call   0x10030b80
10030b3c:	mov    ecx,DWORD PTR [eax]
10030b3e:	mov    DWORD PTR [eax],ebx
10030b40:	mov    edx,DWORD PTR [esp+0x1c]
10030b44:	push   edx
10030b45:	mov    DWORD PTR [esi],ecx
10030b47:	call   0x10042fe2
10030b4c:	add    esp,0x18
10030b4f:	cmp    DWORD PTR [esp+0x24],0x10
10030b54:	jb     0x10030b63
10030b56:	mov    eax,DWORD PTR [esp+0x10]
10030b5a:	push   eax
10030b5b:	call   0x10042fe2
10030b60:	add    esp,0x4
10030b63:	mov    eax,esi
10030b65:	mov    ecx,DWORD PTR [esp+0x28]
10030b69:	mov    DWORD PTR fs:0x0,ecx
10030b70:	pop    ecx
10030b71:	pop    ebx
10030b72:	add    esp,0x2c
10030b75:	ret    
10030b76:	int3   
10030b77:	int3   
10030b78:	int3   
10030b79:	int3   
10030b7a:	int3   
10030b7b:	int3   
10030b7c:	int3   
10030b7d:	int3   
10030b7e:	int3   
10030b7f:	int3   
10030b80:	push   0xffffffff
10030b82:	push   0x10064580
10030b87:	mov    eax,fs:0x0
10030b8d:	push   eax
10030b8e:	sub    esp,0x18
10030b91:	push   ebx
10030b92:	push   ebp
10030b93:	push   esi
10030b94:	push   edi
10030b95:	mov    eax,ds:0x100801ac
10030b9a:	xor    eax,esp
10030b9c:	push   eax
10030b9d:	lea    eax,[esp+0x2c]
10030ba1:	mov    fs:0x0,eax
10030ba7:	mov    ebp,DWORD PTR [esp+0x3c]
10030bab:	xor    ebx,ebx
10030bad:	mov    DWORD PTR [esp+0x20],ebx
10030bb1:	mov    DWORD PTR [esp+0x24],ebx
10030bb5:	mov    eax,DWORD PTR [esp+0x4c]
10030bb9:	push   eax
10030bba:	lea    ecx,[esp+0x1c]
10030bbe:	push   ecx
10030bbf:	mov    ecx,DWORD PTR [esp+0x48]
10030bc3:	push   edx
10030bc4:	mov    edx,DWORD PTR [esp+0x50]
10030bc8:	lea    eax,[esp+0x28]
10030bcc:	mov    DWORD PTR [esp+0x40],ebx
10030bd0:	push   eax
10030bd1:	mov    DWORD PTR [esp+0x28],ebx
10030bd5:	call   0x100317a0
10030bda:	mov    ecx,DWORD PTR [eax]
10030bdc:	mov    esi,ecx
10030bde:	mov    DWORD PTR [eax],ebx
10030be0:	mov    DWORD PTR [esp+0x38],esi
10030be4:	mov    BYTE PTR [esp+0x44],0x1
10030be9:	mov    edx,DWORD PTR [esp+0x2c]
10030bed:	push   edx
10030bee:	call   0x10042fe2
10030bf3:	add    esp,0x14
10030bf6:	cmp    esi,ebx
10030bf8:	jne    0x10030c00
10030bfa:	mov    DWORD PTR [ebp+0x0],ebx
10030bfd:	push   ebx
10030bfe:	jmp    0x10030c6d
10030c00:	mov    ecx,DWORD PTR [esp+0x18]
10030c04:	mov    eax,DWORD PTR [esi+ecx*1-0x4]
10030c08:	sub    eax,0x4
10030c0b:	lea    edx,[eax+0x4]
10030c0e:	cmp    edx,ecx
10030c10:	jbe    0x10030c17
10030c12:	mov    DWORD PTR [ebp+0x0],ebx
10030c15:	jmp    0x10030c6c
10030c17:	mov    edx,DWORD PTR ds:0x10082e2c
10030c1d:	push   ebx
10030c1e:	push   edx
10030c1f:	push   eax
10030c20:	mov    edx,esi
10030c22:	sub    edx,eax
10030c24:	lea    eax,[edx+ecx*1-0x4]
10030c28:	push   eax
10030c29:	lea    ecx,[esp+0x30]
10030c2d:	push   ecx
10030c2e:	mov    ecx,DWORD PTR [esp+0x5c]
10030c32:	lea    edx,[esp+0x2b]
10030c36:	call   0x10039900
10030c3b:	mov    edi,DWORD PTR [eax]
10030c3d:	add    esp,0x14
10030c40:	cmp    edi,ebx
10030c42:	mov    DWORD PTR [eax],ebx
10030c44:	je     0x10030c4f
10030c46:	push   ebx
10030c47:	call   0x10042fe2
10030c4c:	add    esp,0x4
10030c4f:	mov    edx,DWORD PTR [esp+0x20]
10030c53:	push   edx
10030c54:	call   0x10042fe2
10030c59:	add    esp,0x4
10030c5c:	cmp    BYTE PTR [esp+0x17],bl
10030c60:	je     0x10030c69
10030c62:	mov    BYTE PTR ds:0x10082db8,0x1
10030c69:	mov    DWORD PTR [ebp+0x0],edi
10030c6c:	push   esi
10030c6d:	call   0x10042fe2
10030c72:	add    esp,0x4
10030c75:	push   ebx
10030c76:	call   0x10042fe2
10030c7b:	add    esp,0x4
10030c7e:	mov    eax,ebp
10030c80:	mov    ecx,DWORD PTR [esp+0x2c]
10030c84:	mov    DWORD PTR fs:0x0,ecx
10030c8b:	pop    ecx
10030c8c:	pop    edi
10030c8d:	pop    esi
10030c8e:	pop    ebp
10030c8f:	pop    ebx
10030c90:	add    esp,0x24
10030c93:	ret    
10030c94:	int3   
10030c95:	int3   
10030c96:	int3   
10030c97:	int3   
10030c98:	int3   
10030c99:	int3   
10030c9a:	int3   
10030c9b:	int3   
10030c9c:	int3   
10030c9d:	int3   
10030c9e:	int3   
10030c9f:	int3   
10030ca0:	push   0xffffffff
10030ca2:	push   0x10063890
10030ca7:	mov    eax,fs:0x0
10030cad:	push   eax
10030cae:	push   esi
10030caf:	push   edi
10030cb0:	mov    eax,ds:0x100801ac
10030cb5:	xor    eax,esp
10030cb7:	push   eax
10030cb8:	lea    eax,[esp+0xc]
10030cbc:	mov    fs:0x0,eax
10030cc2:	mov    eax,DWORD PTR [esp+0x1c]
10030cc6:	mov    edi,ecx
10030cc8:	mov    DWORD PTR [esp+0x1c],0x0
10030cd0:	cmp    DWORD PTR [eax+0x18],0x10
10030cd4:	jb     0x10030cdb
10030cd6:	mov    esi,DWORD PTR [eax+0x4]
10030cd9:	jmp    0x10030cde
10030cdb:	lea    esi,[eax+0x4]
10030cde:	mov    eax,ds:0x10082a6c
10030ce3:	mov    edx,DWORD PTR [eax+0xc]
10030ce6:	mov    ecx,0x10082a6c
10030ceb:	call   edx
10030ced:	add    eax,0x10
10030cf0:	mov    DWORD PTR [esp+0x1c],eax
10030cf4:	test   esi,esi
10030cf6:	mov    DWORD PTR [esp+0x14],0x0
10030cfe:	je     0x10030d26
10030d00:	test   esi,0xffff0000
10030d06:	jne    0x10030d26
10030d08:	movzx  esi,si
10030d0b:	push   esi
10030d0c:	call   0x10002005
10030d11:	add    esp,0x4
10030d14:	test   eax,eax
10030d16:	je     0x10030d31
10030d18:	push   esi
10030d19:	push   eax
10030d1a:	lea    eax,[esp+0x24]
10030d1e:	push   eax
10030d1f:	call   0x100021cd
10030d24:	jmp    0x10030d31
10030d26:	push   esi
10030d27:	lea    ecx,[esp+0x20]
10030d2b:	push   ecx
10030d2c:	call   0x100020b3
10030d31:	lea    ecx,[esp+0x1c]
10030d35:	mov    DWORD PTR [esp+0x14],0x1
10030d3d:	call   0x100303e0
10030d42:	mov    DWORD PTR [esp+0x14],0xffffffff
10030d4a:	mov    eax,DWORD PTR [esp+0x1c]
10030d4e:	add    eax,0xfffffff0
10030d51:	lea    edx,[eax+0xc]
10030d54:	or     ecx,0xffffffff
10030d57:	lock xadd DWORD PTR [edx],ecx
10030d5b:	dec    ecx
10030d5c:	test   ecx,ecx
10030d5e:	jg     0x10030d6a
10030d60:	mov    ecx,DWORD PTR [eax]
10030d62:	mov    edx,DWORD PTR [ecx]
10030d64:	push   eax
10030d65:	mov    eax,DWORD PTR [edx+0x4]
10030d68:	call   eax
10030d6a:	mov    eax,edi
10030d6c:	mov    ecx,DWORD PTR [esp+0xc]
10030d70:	mov    DWORD PTR fs:0x0,ecx
10030d77:	pop    ecx
10030d78:	pop    edi
10030d79:	pop    esi
10030d7a:	add    esp,0xc
10030d7d:	ret    
10030d7e:	int3   
10030d7f:	int3   
10030d80:	push   ebp
10030d81:	mov    ebp,esp
10030d83:	push   0xffffffff
10030d85:	push   0x10063ea5
10030d8a:	mov    eax,fs:0x0
10030d90:	push   eax
10030d91:	sub    esp,0xd0
10030d97:	mov    eax,ds:0x100801ac
10030d9c:	xor    eax,ebp
10030d9e:	mov    DWORD PTR [ebp-0x18],eax
10030da1:	push   ebx
10030da2:	push   esi
10030da3:	push   edi
10030da4:	push   eax
10030da5:	lea    eax,[ebp-0xc]
10030da8:	mov    fs:0x0,eax
10030dae:	mov    DWORD PTR [ebp-0x10],esp
10030db1:	mov    eax,DWORD PTR [ebp+0x8]
10030db4:	xor    ebx,ebx
10030db6:	mov    DWORD PTR [ebp-0xb8],ebx
10030dbc:	mov    DWORD PTR [ebp-0x4],ebx
10030dbf:	mov    edi,0xf
10030dc4:	mov    DWORD PTR [ebp-0xbc],eax
10030dca:	mov    DWORD PTR [ebp-0x8c],edi
10030dd0:	mov    DWORD PTR [ebp-0x90],ebx
10030dd6:	mov    BYTE PTR [ebp-0xa0],bl
10030ddc:	mov    DWORD PTR [ebp-0x70],edi
10030ddf:	mov    DWORD PTR [ebp-0x74],ebx
10030de2:	mov    BYTE PTR [ebp-0x84],bl
10030de8:	push   0x1
10030dea:	lea    ecx,[ebp-0xb8]
10030df0:	push   ecx
10030df1:	mov    BYTE PTR [ebp-0x4],0x2
10030df5:	call   0x10034910
10030dfa:	mov    DWORD PTR [ebp-0x1c],edi
10030dfd:	mov    DWORD PTR [ebp-0x20],ebx
10030e00:	mov    BYTE PTR [ebp-0x30],bl
10030e03:	mov    DWORD PTR [ebp-0x38],edi
10030e06:	mov    DWORD PTR [ebp-0x3c],ebx
10030e09:	mov    BYTE PTR [ebp-0x4c],bl
10030e0c:	lea    edx,[ebp-0x88]
10030e12:	push   edx
10030e13:	lea    eax,[ebp-0xa4]
10030e19:	push   eax
10030e1a:	lea    ecx,[ebp-0xb4]
10030e20:	push   ecx
10030e21:	lea    edx,[ebp-0xb8]
10030e27:	push   edx
10030e28:	lea    edx,[ebp-0x50]
10030e2b:	lea    ecx,[ebp-0x34]
10030e2e:	mov    BYTE PTR [ebp-0x4],0x5
10030e32:	call   0x10036310
10030e37:	mov    esi,0x10
10030e3c:	cmp    DWORD PTR [ebp-0x38],esi
10030e3f:	jb     0x10030e4d
10030e41:	mov    eax,DWORD PTR [ebp-0x4c]
10030e44:	push   eax
10030e45:	call   0x10042fe2
10030e4a:	add    esp,0x4
10030e4d:	cmp    DWORD PTR [ebp-0x1c],esi
10030e50:	mov    DWORD PTR [ebp-0x38],edi
10030e53:	mov    DWORD PTR [ebp-0x3c],ebx
10030e56:	mov    BYTE PTR [ebp-0x4c],bl
10030e59:	jb     0x10030e67
10030e5b:	mov    ecx,DWORD PTR [ebp-0x30]
10030e5e:	push   ecx
10030e5f:	call   0x10042fe2
10030e64:	add    esp,0x4
10030e67:	mov    BYTE PTR [ebp-0x4],0x2
10030e6b:	mov    edx,DWORD PTR [ebp-0xb8]
10030e71:	push   edx
10030e72:	mov    DWORD PTR [ebp-0x1c],edi
10030e75:	mov    DWORD PTR [ebp-0x20],ebx
10030e78:	mov    BYTE PTR [ebp-0x30],bl
10030e7b:	call   DWORD PTR ds:0x10067078
10030e81:	push   0x100743fc
10030e86:	push   0x2
10030e88:	mov    ecx,0x10074430
10030e8d:	call   0x100042b4
10030e92:	mov    esi,eax
10030e94:	add    esp,0x8
10030e97:	push   esi
10030e98:	mov    DWORD PTR [ebp-0x54],edi
10030e9b:	mov    DWORD PTR [ebp-0x58],ebx
10030e9e:	mov    BYTE PTR [ebp-0x68],bl
10030ea1:	call   0x10043450
10030ea6:	add    esp,0x4
10030ea9:	push   eax
10030eaa:	push   esi
10030eab:	lea    ecx,[ebp-0x6c]
10030eae:	call   0x1000133b
10030eb3:	lea    ebx,[ebp-0x50]
10030eb6:	mov    BYTE PTR [ebp-0x4],0x6
10030eba:	call   0x100308f0
10030ebf:	push   eax
10030ec0:	lea    ecx,[ebp-0x34]
10030ec3:	mov    BYTE PTR [ebp-0x4],0x7
10030ec7:	call   0x10030ca0
10030ecc:	add    esp,0x4
10030ecf:	push   0xffffffff
10030ed1:	xor    ebx,ebx
10030ed3:	push   ebx
10030ed4:	lea    esi,[ebp-0x6c]
10030ed7:	mov    BYTE PTR [ebp-0x4],0x8
10030edb:	call   0x10004cbe
10030ee0:	mov    esi,0x10
10030ee5:	cmp    DWORD PTR [ebp-0x1c],esi
10030ee8:	jb     0x10030ef6
10030eea:	mov    eax,DWORD PTR [ebp-0x30]
10030eed:	push   eax
10030eee:	call   0x10042fe2
10030ef3:	add    esp,0x4
10030ef6:	mov    BYTE PTR [ebp-0x4],0x6
10030efa:	cmp    DWORD PTR [ebp-0x38],esi
10030efd:	mov    DWORD PTR [ebp-0x1c],0xf
10030f04:	mov    DWORD PTR [ebp-0x20],ebx
10030f07:	mov    BYTE PTR [ebp-0x30],bl
10030f0a:	jb     0x10030f18
10030f0c:	mov    ecx,DWORD PTR [ebp-0x4c]
10030f0f:	push   ecx
10030f10:	call   0x10042fe2
10030f15:	add    esp,0x4
10030f18:	lea    edx,[ebp-0xb4]
10030f1e:	push   edx
10030f1f:	lea    esi,[ebp-0xd8]
10030f25:	call   0x100309c0
10030f2a:	add    esp,0x4
10030f2d:	mov    edi,eax
10030f2f:	push   0x10074434
10030f34:	push   0x3
10030f36:	mov    ecx,0x10074470
10030f3b:	mov    BYTE PTR [ebp-0x4],0x9
10030f3f:	call   0x100042b4
10030f44:	mov    esi,eax
10030f46:	add    esp,0x8
10030f49:	push   esi
10030f4a:	mov    DWORD PTR [ebp-0x38],0xf
10030f51:	mov    DWORD PTR [ebp-0x3c],ebx
10030f54:	mov    BYTE PTR [ebp-0x4c],bl
10030f57:	call   0x10043450
10030f5c:	add    esp,0x4
10030f5f:	push   eax
10030f60:	push   esi
10030f61:	lea    ecx,[ebp-0x50]
10030f64:	call   0x1000133b
10030f69:	push   edi
10030f6a:	lea    eax,[ebp-0x50]
10030f6d:	push   eax
10030f6e:	lea    ecx,[ebp-0x34]
10030f71:	push   ecx
10030f72:	mov    BYTE PTR [ebp-0x4],0xa
10030f76:	call   0x1000676d
10030f7b:	add    esp,0xc
10030f7e:	push   0xffffffff
10030f80:	push   ebx
10030f81:	lea    esi,[ebp-0x6c]
10030f84:	mov    BYTE PTR [ebp-0x4],0xb
10030f88:	call   0x10004cbe
10030f8d:	mov    edi,0x10
10030f92:	cmp    DWORD PTR [ebp-0x1c],edi
10030f95:	jb     0x10030fa3
10030f97:	mov    edx,DWORD PTR [ebp-0x30]
10030f9a:	push   edx
10030f9b:	call   0x10042fe2
10030fa0:	add    esp,0x4
10030fa3:	cmp    DWORD PTR [ebp-0x38],edi
10030fa6:	mov    esi,0xf
10030fab:	mov    DWORD PTR [ebp-0x1c],esi
10030fae:	mov    DWORD PTR [ebp-0x20],ebx
10030fb1:	mov    BYTE PTR [ebp-0x30],bl
10030fb4:	jb     0x10030fc2
10030fb6:	mov    eax,DWORD PTR [ebp-0x4c]
10030fb9:	push   eax
10030fba:	call   0x10042fe2
10030fbf:	add    esp,0x4
10030fc2:	mov    BYTE PTR [ebp-0x4],0x6
10030fc6:	cmp    DWORD PTR [ebp-0xc0],edi
10030fcc:	mov    DWORD PTR [ebp-0x38],esi
10030fcf:	mov    DWORD PTR [ebp-0x3c],ebx
10030fd2:	mov    BYTE PTR [ebp-0x4c],bl
10030fd5:	jb     0x10030fe6
10030fd7:	mov    ecx,DWORD PTR [ebp-0xd4]
10030fdd:	push   ecx
10030fde:	call   0x10042fe2
10030fe3:	add    esp,0x4
10030fe6:	lea    edx,[ebp-0xa4]
10030fec:	push   edx
10030fed:	lea    ecx,[ebp-0xd8]
10030ff3:	call   0x10030ca0
10030ff8:	add    esp,0x4
10030ffb:	mov    esi,eax
10030ffd:	push   0x10074474
10031002:	push   0x3
10031004:	mov    ecx,0x10074498
10031009:	mov    BYTE PTR [ebp-0x4],0xc
1003100d:	call   0x100042b4
10031012:	add    esp,0x8
10031015:	push   esi
10031016:	push   eax
10031017:	lea    eax,[ebp-0x34]
1003101a:	push   eax
1003101b:	call   0x100067b8
10031020:	add    esp,0xc
10031023:	push   0xffffffff
10031025:	push   ebx
10031026:	lea    esi,[ebp-0x6c]
10031029:	mov    BYTE PTR [ebp-0x4],0xd
1003102d:	call   0x10004cbe
10031032:	cmp    DWORD PTR [ebp-0x1c],edi
10031035:	jb     0x10031043
10031037:	mov    ecx,DWORD PTR [ebp-0x30]
1003103a:	push   ecx
1003103b:	call   0x10042fe2
10031040:	add    esp,0x4
10031043:	mov    BYTE PTR [ebp-0x4],0x6
10031047:	cmp    DWORD PTR [ebp-0xc0],edi
1003104d:	mov    DWORD PTR [ebp-0x1c],0xf
10031054:	mov    DWORD PTR [ebp-0x20],ebx
10031057:	mov    BYTE PTR [ebp-0x30],bl
1003105a:	jb     0x1003106b
1003105c:	mov    edx,DWORD PTR [ebp-0xd4]
10031062:	push   edx
10031063:	call   0x10042fe2
10031068:	add    esp,0x4
1003106b:	lea    ebx,[ebp-0xd8]
10031071:	call   0x1002f5f0
10031076:	push   eax
10031077:	lea    ecx,[ebp-0x50]
1003107a:	mov    BYTE PTR [ebp-0x4],0xe
1003107e:	call   0x10030ca0
10031083:	add    esp,0x4
10031086:	mov    esi,eax
10031088:	push   0x1007449c
1003108d:	push   0x4
1003108f:	mov    ecx,0x100744cc
10031094:	mov    BYTE PTR [ebp-0x4],0xf
10031098:	call   0x100042b4
1003109d:	add    esp,0x8
100310a0:	push   esi
100310a1:	push   eax
100310a2:	lea    eax,[ebp-0x34]
100310a5:	push   eax
100310a6:	call   0x100067b8
100310ab:	add    esp,0xc
100310ae:	push   0xffffffff
100310b0:	xor    ebx,ebx
100310b2:	push   ebx
100310b3:	lea    esi,[ebp-0x6c]
100310b6:	mov    BYTE PTR [ebp-0x4],0x10
100310ba:	call   0x10004cbe
100310bf:	mov    esi,0x10
100310c4:	cmp    DWORD PTR [ebp-0x1c],esi
100310c7:	jb     0x100310d5
100310c9:	mov    ecx,DWORD PTR [ebp-0x30]
100310cc:	push   ecx
100310cd:	call   0x10042fe2
100310d2:	add    esp,0x4
100310d5:	cmp    DWORD PTR [ebp-0x38],esi
100310d8:	mov    edi,0xf
100310dd:	mov    DWORD PTR [ebp-0x1c],edi
100310e0:	mov    DWORD PTR [ebp-0x20],ebx
100310e3:	mov    BYTE PTR [ebp-0x30],bl
100310e6:	jb     0x100310f4
100310e8:	mov    edx,DWORD PTR [ebp-0x4c]
100310eb:	push   edx
100310ec:	call   0x10042fe2
100310f1:	add    esp,0x4
100310f4:	mov    BYTE PTR [ebp-0x4],0x6
100310f8:	cmp    DWORD PTR [ebp-0xc0],esi
100310fe:	mov    DWORD PTR [ebp-0x38],edi
10031101:	mov    DWORD PTR [ebp-0x3c],ebx
10031104:	mov    BYTE PTR [ebp-0x4c],bl
10031107:	jb     0x10031118
10031109:	mov    eax,DWORD PTR [ebp-0xd4]
1003110f:	push   eax
10031110:	call   0x10042fe2
10031115:	add    esp,0x4
10031118:	lea    ecx,[ebp-0x88]
1003111e:	push   ecx
1003111f:	lea    ecx,[ebp-0xd8]
10031125:	call   0x10030ca0
1003112a:	add    esp,0x4
1003112d:	mov    esi,eax
1003112f:	push   0x100744d4
10031134:	push   0x3
10031136:	mov    ecx,0x10074500
1003113b:	mov    BYTE PTR [ebp-0x4],0x11
1003113f:	call   0x100042b4
10031144:	add    esp,0x8
10031147:	push   esi
10031148:	push   eax
10031149:	lea    edx,[ebp-0x34]
1003114c:	push   edx
1003114d:	call   0x100067b8
10031152:	add    esp,0xc
10031155:	push   0xffffffff
10031157:	push   ebx
10031158:	lea    esi,[ebp-0x6c]
1003115b:	mov    BYTE PTR [ebp-0x4],0x12
1003115f:	call   0x10004cbe
10031164:	mov    esi,0x10
10031169:	cmp    DWORD PTR [ebp-0x1c],esi
1003116c:	jb     0x1003117a
1003116e:	mov    eax,DWORD PTR [ebp-0x30]
10031171:	push   eax
10031172:	call   0x10042fe2
10031177:	add    esp,0x4
1003117a:	mov    BYTE PTR [ebp-0x4],0x6
1003117e:	cmp    DWORD PTR [ebp-0xc0],esi
10031184:	mov    DWORD PTR [ebp-0x1c],edi
10031187:	mov    DWORD PTR [ebp-0x20],ebx
1003118a:	mov    BYTE PTR [ebp-0x30],bl
1003118d:	jb     0x1003119e
1003118f:	mov    ecx,DWORD PTR [ebp-0xd4]
10031195:	push   ecx
10031196:	call   0x10042fe2
1003119b:	add    esp,0x4
1003119e:	lea    edx,[ebp-0x50]
100311a1:	push   edx
100311a2:	call   0x10038c10
100311a7:	add    esp,0x4
100311aa:	mov    esi,eax
100311ac:	push   0x10074504
100311b1:	push   0x5
100311b3:	mov    ecx,0x10074538
100311b8:	mov    BYTE PTR [ebp-0x4],0x13
100311bc:	call   0x100042b4
100311c1:	add    esp,0x8
100311c4:	push   esi
100311c5:	push   eax
100311c6:	lea    eax,[ebp-0x34]
100311c9:	push   eax
100311ca:	call   0x100067b8
100311cf:	add    esp,0xc
100311d2:	push   0xffffffff
100311d4:	push   ebx
100311d5:	lea    esi,[ebp-0x6c]
100311d8:	mov    BYTE PTR [ebp-0x4],0x14
100311dc:	call   0x10004cbe
100311e1:	mov    esi,0x10
100311e6:	cmp    DWORD PTR [ebp-0x1c],esi
100311e9:	jb     0x100311f7
100311eb:	mov    ecx,DWORD PTR [ebp-0x30]
100311ee:	push   ecx
100311ef:	call   0x10042fe2
100311f4:	add    esp,0x4
100311f7:	mov    BYTE PTR [ebp-0x4],0x6
100311fb:	cmp    DWORD PTR [ebp-0x38],esi
100311fe:	mov    DWORD PTR [ebp-0x1c],edi
10031201:	mov    DWORD PTR [ebp-0x20],ebx
10031204:	mov    BYTE PTR [ebp-0x30],bl
10031207:	jb     0x10031215
10031209:	mov    edx,DWORD PTR [ebp-0x4c]
1003120c:	push   edx
1003120d:	call   0x10042fe2
10031212:	add    esp,0x4
10031215:	mov    esi,DWORD PTR [ebp-0xbc]
1003121b:	push   0xffffffff
1003121d:	push   ebx
1003121e:	lea    eax,[ebp-0x6c]
10031221:	mov    DWORD PTR [esi+0x18],edi
10031224:	mov    DWORD PTR [esi+0x14],ebx
10031227:	push   eax
10031228:	mov    ecx,esi
1003122a:	mov    DWORD PTR [ebp-0x38],edi
1003122d:	mov    DWORD PTR [ebp-0x3c],ebx
10031230:	mov    BYTE PTR [ebp-0x4c],bl
10031233:	mov    BYTE PTR [esi+0x4],bl
10031236:	call   0x10001241
1003123b:	cmp    DWORD PTR [ebp-0x54],0x10
1003123f:	jb     0x1003124d
10031241:	mov    ecx,DWORD PTR [ebp-0x68]
10031244:	push   ecx
10031245:	call   0x10042fe2
1003124a:	add    esp,0x4
1003124d:	cmp    DWORD PTR [ebp-0x70],0x10
10031251:	mov    DWORD PTR [ebp-0x54],edi
10031254:	mov    DWORD PTR [ebp-0x58],ebx
10031257:	mov    BYTE PTR [ebp-0x68],bl
1003125a:	jb     0x1003126b
1003125c:	mov    edx,DWORD PTR [ebp-0x84]
10031262:	push   edx
10031263:	call   0x10042fe2
10031268:	add    esp,0x4
1003126b:	cmp    DWORD PTR [ebp-0x8c],0x10
10031272:	mov    DWORD PTR [ebp-0x70],edi
10031275:	mov    DWORD PTR [ebp-0x74],ebx
10031278:	mov    BYTE PTR [ebp-0x84],bl
1003127e:	jb     0x100312b0
10031280:	mov    eax,DWORD PTR [ebp-0xa0]
10031286:	push   eax
10031287:	call   0x10042fe2
1003128c:	add    esp,0x4
1003128f:	jmp    0x100312b0
10031291:	mov    DWORD PTR [ebp-0x4],0xffffffff
10031298:	mov    eax,0x1003129e
1003129d:	ret    
1003129e:	mov    esi,DWORD PTR [ebp-0xbc]
100312a4:	push   0x1006dd18
100312a9:	mov    ecx,esi
100312ab:	call   0x100011a7
100312b0:	mov    eax,esi
100312b2:	mov    ecx,DWORD PTR [ebp-0xc]
100312b5:	mov    DWORD PTR fs:0x0,ecx
100312bc:	pop    ecx
100312bd:	pop    edi
100312be:	pop    esi
100312bf:	pop    ebx
100312c0:	mov    ecx,DWORD PTR [ebp-0x18]
100312c3:	xor    ecx,ebp
100312c5:	call   0x10043615
100312ca:	mov    esp,ebp
100312cc:	pop    ebp
100312cd:	ret    
100312ce:	int3   
100312cf:	int3   
100312d0:	push   0xffffffff
100312d2:	push   0x10061ea1
100312d7:	mov    eax,fs:0x0
100312dd:	push   eax
100312de:	sub    esp,0x64
100312e1:	mov    eax,ds:0x100801ac
100312e6:	xor    eax,esp
100312e8:	mov    DWORD PTR [esp+0x60],eax
100312ec:	push   ebx
100312ed:	push   ebp
100312ee:	push   esi
100312ef:	push   edi
100312f0:	mov    eax,ds:0x100801ac
100312f5:	xor    eax,esp
100312f7:	push   eax
100312f8:	lea    eax,[esp+0x78]
100312fc:	mov    fs:0x0,eax
10031302:	xor    ebp,ebp
10031304:	mov    DWORD PTR [esp+0x80],ebp
1003130b:	mov    ebx,ecx
1003130d:	mov    DWORD PTR [esp+0x30],ebp
10031311:	mov    edi,0xf
10031316:	mov    DWORD PTR [ebx+0x18],edi
10031319:	mov    DWORD PTR [ebx+0x14],ebp
1003131c:	push   0x1006dd18
10031321:	mov    DWORD PTR [esp+0x2c],ebx
10031325:	mov    esi,edx
10031327:	mov    BYTE PTR [ebx+0x4],0x0
1003132b:	call   0x10043450
10031330:	add    esp,0x4
10031333:	push   eax
10031334:	push   0x1006dd18
10031339:	mov    ecx,ebx
1003133b:	call   0x1000133b
10031340:	mov    eax,0x1
10031345:	mov    DWORD PTR [esp+0x30],eax
10031349:	mov    DWORD PTR [esp+0x1c],ebp
1003134d:	mov    DWORD PTR [esp+0x20],ebp
10031351:	mov    DWORD PTR [esp+0x24],ebp
10031355:	push   0xffffffff
10031357:	mov    DWORD PTR [esp+0x84],eax
1003135e:	push   ebp
1003135f:	push   esi
10031360:	lea    ecx,[esp+0x48]
10031364:	mov    DWORD PTR [esp+0x60],edi
10031368:	mov    DWORD PTR [esp+0x5c],ebp
1003136c:	mov    BYTE PTR [esp+0x4c],0x0
10031371:	call   0x10001241
10031376:	mov    BYTE PTR [esp+0x80],0x2
1003137e:	mov    eax,DWORD PTR [esp+0x50]
10031382:	cmp    eax,ebp
10031384:	jbe    0x100314b9
1003138a:	lea    ebx,[ebx+0x0]
10031390:	cmp    eax,0xfa0
10031395:	mov    DWORD PTR [esp+0x14],eax
10031399:	jbe    0x100313a3
1003139b:	mov    DWORD PTR [esp+0x14],0xfa0
100313a3:	mov    eax,DWORD PTR [esp+0x14]
100313a7:	push   eax
100313a8:	push   ebp
100313a9:	lea    ecx,[esp+0x44]
100313ad:	push   ecx
100313ae:	lea    eax,[esp+0x64]
100313b2:	call   0x1000ce4e
100313b7:	mov    ebx,eax
100313b9:	mov    BYTE PTR [esp+0x80],0x3
100313c1:	mov    edi,DWORD PTR [esp+0x1c]
100313c5:	cmp    edi,ebp
100313c7:	mov    ebp,DWORD PTR [esp+0x20]
100313cb:	je     0x10031427
100313cd:	mov    esi,DWORD PTR [esp+0x24]
100313d1:	mov    ecx,ebp
100313d3:	sub    ecx,edi
100313d5:	mov    eax,0x92492493
100313da:	imul   ecx
100313dc:	add    edx,ecx
100313de:	sar    edx,0x4
100313e1:	mov    ecx,edx
100313e3:	shr    ecx,0x1f
100313e6:	add    ecx,edx
100313e8:	sub    esi,edi
100313ea:	mov    eax,0x92492493
100313ef:	imul   esi
100313f1:	add    edx,esi
100313f3:	sar    edx,0x4
100313f6:	mov    eax,edx
100313f8:	shr    eax,0x1f
100313fb:	add    eax,edx
100313fd:	cmp    ecx,eax
100313ff:	jae    0x10031427
10031401:	mov    eax,DWORD PTR [esp+0x28]
10031405:	mov    BYTE PTR [esp+0x2c],0x0
1003140a:	mov    edx,DWORD PTR [esp+0x2c]
1003140e:	push   edx
1003140f:	push   eax
10031410:	push   ebx
10031411:	push   0x1
10031413:	push   ebp
10031414:	mov    esi,ebp
10031416:	call   0x100103c0
1003141b:	add    esp,0x14
1003141e:	add    esi,0x1c
10031421:	mov    DWORD PTR [esp+0x20],esi
10031425:	jmp    0x10031441
10031427:	cmp    edi,ebp
10031429:	jbe    0x10031430
1003142b:	call   0x10043605
10031430:	push   ebp
10031431:	lea    eax,[esp+0x1c]
10031435:	push   eax
10031436:	push   ebx
10031437:	lea    ecx,[esp+0x40]
1003143b:	push   ecx
1003143c:	call   0x10010025
10031441:	mov    esi,0x10
10031446:	mov    BYTE PTR [esp+0x80],0x2
1003144e:	cmp    DWORD PTR [esp+0x70],esi
10031452:	jb     0x10031461
10031454:	mov    edx,DWORD PTR [esp+0x5c]
10031458:	push   edx
10031459:	call   0x10042fe2
1003145e:	add    esp,0x4
10031461:	mov    eax,DWORD PTR [esp+0x14]
10031465:	push   0xffffffff
10031467:	push   eax
10031468:	lea    ecx,[esp+0x44]
1003146c:	push   ecx
1003146d:	lea    eax,[esp+0x64]
10031471:	call   0x1000ce4e
10031476:	push   0xffffffff
10031478:	push   0x0
1003147a:	push   eax
1003147b:	lea    ecx,[esp+0x48]
1003147f:	mov    BYTE PTR [esp+0x8c],0x4
10031487:	call   0x10001241
1003148c:	mov    BYTE PTR [esp+0x80],0x2
10031494:	cmp    DWORD PTR [esp+0x70],esi
10031498:	jb     0x100314a7
1003149a:	mov    edx,DWORD PTR [esp+0x5c]
1003149e:	push   edx
1003149f:	call   0x10042fe2
100314a4:	add    esp,0x4
100314a7:	mov    eax,DWORD PTR [esp+0x50]
100314ab:	xor    ebp,ebp
100314ad:	test   eax,eax
100314af:	ja     0x10031390
100314b5:	mov    ebx,DWORD PTR [esp+0x28]
100314b9:	mov    BYTE PTR [esp+0x80],0x1
100314c1:	cmp    DWORD PTR [esp+0x54],0x10
100314c6:	jb     0x100314d5
100314c8:	mov    eax,DWORD PTR [esp+0x40]
100314cc:	push   eax
100314cd:	call   0x10042fe2
100314d2:	add    esp,0x4
100314d5:	push   0x10074540
100314da:	push   0x8
100314dc:	mov    ecx,0x1007457c
100314e1:	call   0x100042b4
100314e6:	mov    esi,eax
100314e8:	push   esi
100314e9:	call   0x10043450
100314ee:	add    esp,0xc
100314f1:	push   eax
100314f2:	push   esi
100314f3:	mov    eax,ebx
100314f5:	call   0x10004d62
100314fa:	xor    edi,edi
100314fc:	mov    DWORD PTR [esp+0x14],ebp
10031500:	mov    eax,DWORD PTR [esp+0x1c]
10031504:	cmp    eax,ebp
10031506:	jne    0x1003150c
10031508:	xor    eax,eax
1003150a:	jmp    0x10031525
1003150c:	mov    ecx,DWORD PTR [esp+0x20]
10031510:	sub    ecx,eax
10031512:	mov    eax,0x92492493
10031517:	imul   ecx
10031519:	add    edx,ecx
1003151b:	sar    edx,0x4
1003151e:	mov    eax,edx
10031520:	shr    eax,0x1f
10031523:	add    eax,edx
10031525:	cmp    edi,eax
10031527:	je     0x1003171a
1003152d:	push   0x10074588
10031532:	mov    DWORD PTR [esp+0x58],0xf
1003153a:	mov    DWORD PTR [esp+0x54],ebp
1003153e:	mov    BYTE PTR [esp+0x44],0x0
10031543:	call   0x10043450
10031548:	mov    ecx,DWORD PTR [esp+0x44]
1003154c:	mov    esi,eax
1003154e:	mov    eax,DWORD PTR [esp+0x58]
10031552:	add    esp,0x4
10031555:	cmp    eax,0x10
10031558:	mov    edx,ecx
1003155a:	jae    0x10031560
1003155c:	lea    edx,[esp+0x40]
10031560:	cmp    edx,0x10074588
10031566:	ja     0x100315a7
10031568:	cmp    eax,0x10
1003156b:	mov    edx,ecx
1003156d:	jae    0x10031573
1003156f:	lea    edx,[esp+0x40]
10031573:	mov    ebp,DWORD PTR [esp+0x50]
10031577:	add    edx,ebp
10031579:	cmp    edx,0x10074588
1003157f:	jbe    0x100315a5
10031581:	cmp    eax,0x10
10031584:	mov    eax,ecx
10031586:	jae    0x1003158c
10031588:	lea    eax,[esp+0x40]
1003158c:	push   esi
1003158d:	mov    ecx,0x10074588
10031592:	sub    ecx,eax
10031594:	push   ecx
10031595:	lea    edx,[esp+0x44]
10031599:	push   edx
1003159a:	mov    ecx,edx
1003159c:	call   0x10001241
100315a1:	xor    ebp,ebp
100315a3:	jmp    0x1003160c
100315a5:	xor    ebp,ebp
100315a7:	cmp    esi,0xfffffffe
100315aa:	jbe    0x100315b9
100315ac:	call   0x100574b0
100315b1:	mov    eax,DWORD PTR [esp+0x54]
100315b5:	mov    ecx,DWORD PTR [esp+0x40]
100315b9:	cmp    eax,esi
100315bb:	jae    0x100316fb
100315c1:	mov    eax,DWORD PTR [esp+0x50]
100315c5:	push   eax
100315c6:	push   esi
100315c7:	lea    ecx,[esp+0x44]
100315cb:	call   0x10001500
100315d0:	mov    eax,DWORD PTR [esp+0x54]
100315d4:	mov    ecx,DWORD PTR [esp+0x40]
100315d8:	cmp    esi,ebp
100315da:	jbe    0x1003160c
100315dc:	cmp    eax,0x10
100315df:	jae    0x100315e5
100315e1:	lea    ecx,[esp+0x40]
100315e5:	push   esi
100315e6:	push   0x10074588
100315eb:	push   eax
100315ec:	push   ecx
100315ed:	call   0x100433cf
100315f2:	mov    eax,DWORD PTR [esp+0x50]
100315f6:	add    esp,0x10
100315f9:	cmp    DWORD PTR [esp+0x54],0x10
100315fe:	mov    DWORD PTR [esp+0x50],esi
10031602:	jae    0x10031608
10031604:	lea    eax,[esp+0x40]
10031608:	mov    BYTE PTR [eax+esi*1],0x0
1003160c:	cmp    edi,ebp
1003160e:	mov    BYTE PTR [esp+0x80],0x5
10031616:	jbe    0x1003163e
10031618:	push   0xa
1003161a:	lea    ecx,[esp+0x5c]
1003161e:	push   ecx
1003161f:	push   edi
10031620:	call   0x10045cb6
10031625:	mov    esi,eax
10031627:	add    esp,0xc
1003162a:	push   esi
1003162b:	call   0x10043450
10031630:	add    esp,0x4
10031633:	push   eax
10031634:	push   esi
10031635:	lea    eax,[esp+0x44]
10031639:	call   0x10004d62
1003163e:	push   0x1006f294
10031643:	call   0x10043450
10031648:	add    esp,0x4
1003164b:	push   eax
1003164c:	push   0x1006f294
10031651:	lea    eax,[esp+0x44]
10031655:	call   0x10004d62
1003165a:	mov    esi,DWORD PTR [esp+0x1c]
1003165e:	cmp    esi,ebp
10031660:	je     0x1003167f
10031662:	mov    ecx,DWORD PTR [esp+0x20]
10031666:	sub    ecx,esi
10031668:	mov    eax,0x92492493
1003166d:	imul   ecx
1003166f:	add    edx,ecx
10031671:	sar    edx,0x4
10031674:	mov    eax,edx
10031676:	shr    eax,0x1f
10031679:	add    eax,edx
1003167b:	cmp    edi,eax
1003167d:	jb     0x10031688
1003167f:	call   0x10043605
10031684:	mov    esi,DWORD PTR [esp+0x1c]
10031688:	mov    edx,DWORD PTR [esp+0x14]
1003168c:	push   0xffffffff
1003168e:	lea    eax,[esi+edx*1]
10031691:	push   ebp
10031692:	lea    esi,[esp+0x44]
10031696:	call   0x10004cbe
1003169b:	cmp    edi,ebp
1003169d:	je     0x100316c4
1003169f:	push   0x1007458c
100316a4:	push   0x1
100316a6:	mov    ecx,0x1006e9fc
100316ab:	call   0x100042b4
100316b0:	mov    esi,eax
100316b2:	push   esi
100316b3:	call   0x10043450
100316b8:	add    esp,0xc
100316bb:	push   eax
100316bc:	push   esi
100316bd:	mov    eax,ebx
100316bf:	call   0x10004d62
100316c4:	push   0xffffffff
100316c6:	push   ebp
100316c7:	lea    eax,[esp+0x44]
100316cb:	mov    esi,ebx
100316cd:	call   0x10004cbe
100316d2:	mov    BYTE PTR [esp+0x80],0x1
100316da:	cmp    DWORD PTR [esp+0x54],0x10
100316df:	jb     0x100316ee
100316e1:	mov    eax,DWORD PTR [esp+0x40]
100316e5:	push   eax
100316e6:	call   0x10042fe2
100316eb:	add    esp,0x4
100316ee:	add    edi,0x1
100316f1:	add    DWORD PTR [esp+0x14],0x1c
100316f6:	jmp    0x10031500
100316fb:	cmp    esi,ebp
100316fd:	jne    0x100315da
10031703:	cmp    eax,0x10
10031706:	mov    DWORD PTR [esp+0x50],ebp
1003170a:	mov    eax,ecx
1003170c:	jae    0x10031712
1003170e:	lea    eax,[esp+0x40]
10031712:	mov    BYTE PTR [eax],0x0
10031715:	jmp    0x1003160c
1003171a:	push   0x1006e4b0
1003171f:	call   0x10043450
10031724:	add    esp,0x4
10031727:	push   eax
10031728:	push   0x1006e4b0
1003172d:	mov    eax,ebx
1003172f:	call   0x10004d62
10031734:	mov    esi,DWORD PTR [esp+0x1c]
10031738:	cmp    esi,ebp
1003173a:	je     0x1003177c
1003173c:	mov    edi,DWORD PTR [esp+0x20]
10031740:	cmp    esi,edi
10031742:	je     0x10031773
10031744:	add    esi,0x18
10031747:	cmp    DWORD PTR [esi],0x10
1003174a:	jb     0x10031758
1003174c:	mov    eax,DWORD PTR [esi-0x14]
1003174f:	push   eax
10031750:	call   0x10042fe2
10031755:	add    esp,0x4
10031758:	mov    DWORD PTR [esi],0xf
1003175e:	mov    DWORD PTR [esi-0x4],ebp
10031761:	mov    BYTE PTR [esi-0x14],0x0
10031765:	add    esi,0x1c
10031768:	lea    ecx,[esi-0x18]
1003176b:	cmp    ecx,edi
1003176d:	jne    0x10031747
1003176f:	mov    esi,DWORD PTR [esp+0x1c]
10031773:	push   esi
10031774:	call   0x10042fe2
10031779:	add    esp,0x4
1003177c:	mov    eax,ebx
1003177e:	mov    ecx,DWORD PTR [esp+0x78]
10031782:	mov    DWORD PTR fs:0x0,ecx
10031789:	pop    ecx
1003178a:	pop    edi
1003178b:	pop    esi
1003178c:	pop    ebp
1003178d:	pop    ebx
1003178e:	mov    ecx,DWORD PTR [esp+0x60]
10031792:	xor    ecx,esp
10031794:	call   0x10043615
10031799:	add    esp,0x70
1003179c:	ret    
1003179d:	int3   
1003179e:	int3   
1003179f:	int3   
100317a0:	push   ebp
100317a1:	mov    ebp,esp
100317a3:	and    esp,0xfffffff8
100317a6:	push   0xffffffff
100317a8:	push   0x1006453c
100317ad:	mov    eax,fs:0x0
100317b3:	push   eax
100317b4:	sub    esp,0x1f0
100317ba:	mov    eax,ds:0x100801ac
100317bf:	xor    eax,esp
100317c1:	mov    DWORD PTR [esp+0x1e8],eax
100317c8:	push   ebx
100317c9:	push   esi
100317ca:	push   edi
100317cb:	mov    eax,ds:0x100801ac
100317d0:	xor    eax,esp
100317d2:	push   eax
100317d3:	lea    eax,[esp+0x200]
100317da:	mov    fs:0x0,eax
100317e0:	mov    eax,DWORD PTR [ebp+0x8]
100317e3:	mov    esi,DWORD PTR [ebp+0xc]
100317e6:	mov    DWORD PTR [esp+0x1c],ecx
100317ea:	mov    DWORD PTR [esp+0x14],eax
100317ee:	mov    eax,DWORD PTR [ebp+0x10]
100317f1:	lea    ecx,[esp+0x60]
100317f5:	xor    ebx,ebx
100317f7:	push   ecx
100317f8:	mov    DWORD PTR [esp+0x1c],edx
100317fc:	mov    DWORD PTR [esp+0x24],eax
10031800:	mov    DWORD PTR [esp+0x28],ebx
10031804:	call   0x10030d80
10031809:	add    esp,0x4
1003180c:	mov    edi,eax
1003180e:	push   esi
1003180f:	lea    ecx,[esp+0x48]
10031813:	mov    DWORD PTR [esp+0x20c],ebx
1003181a:	call   0x10030ca0
1003181f:	add    esp,0x4
10031822:	mov    DWORD PTR [esp+0x10],eax
10031826:	push   0x100745bc
1003182b:	push   0x4
1003182d:	mov    ecx,0x100745f8
10031832:	mov    BYTE PTR [esp+0x210],0x1
1003183a:	call   0x100042b4
1003183f:	mov    esi,eax
10031841:	push   esi
10031842:	mov    DWORD PTR [esp+0x4c],0xf
1003184a:	mov    DWORD PTR [esp+0x48],ebx
1003184e:	mov    BYTE PTR [esp+0x38],bl
10031852:	call   0x10043450
10031857:	add    esp,0xc
1003185a:	push   eax
1003185b:	push   esi
1003185c:	lea    ecx,[esp+0x30]
10031860:	call   0x1000133b
10031865:	mov    BYTE PTR [esp+0x208],0x2
1003186d:	mov    edx,DWORD PTR [esp+0x10]
10031871:	push   edx
10031872:	lea    eax,[esp+0x2c]
10031876:	push   eax
10031877:	lea    ecx,[esp+0xbc]
1003187e:	push   ecx
1003187f:	call   0x1000676d
10031884:	add    esp,0xc
10031887:	push   0x100745b8
1003188c:	push   eax
1003188d:	lea    edx,[esp+0xa0]
10031894:	push   edx
10031895:	mov    BYTE PTR [esp+0x214],0x3
1003189d:	call   0x10006727
100318a2:	add    esp,0xc
100318a5:	push   edi
100318a6:	push   eax
100318a7:	lea    eax,[esp+0x1e4]
100318ae:	push   eax
100318af:	mov    BYTE PTR [esp+0x214],0x4
100318b7:	call   0x1000676d
100318bc:	add    esp,0xc
100318bf:	mov    edi,0x10
100318c4:	cmp    DWORD PTR [esp+0xb0],edi
100318cb:	jb     0x100318dd
100318cd:	mov    ecx,DWORD PTR [esp+0x9c]
100318d4:	push   ecx
100318d5:	call   0x10042fe2
100318da:	add    esp,0x4
100318dd:	mov    esi,0xf
100318e2:	mov    DWORD PTR [esp+0xb0],esi
100318e9:	mov    DWORD PTR [esp+0xac],ebx
100318f0:	mov    BYTE PTR [esp+0x9c],bl
100318f7:	cmp    DWORD PTR [esp+0xcc],edi
100318fe:	jb     0x10031910
10031900:	mov    edx,DWORD PTR [esp+0xb8]
10031907:	push   edx
10031908:	call   0x10042fe2
1003190d:	add    esp,0x4
10031910:	mov    DWORD PTR [esp+0xcc],esi
10031917:	mov    DWORD PTR [esp+0xc8],ebx
1003191e:	mov    BYTE PTR [esp+0xb8],bl
10031925:	cmp    DWORD PTR [esp+0x40],edi
10031929:	jb     0x10031938
1003192b:	mov    eax,DWORD PTR [esp+0x2c]
1003192f:	push   eax
10031930:	call   0x10042fe2
10031935:	add    esp,0x4
10031938:	mov    DWORD PTR [esp+0x40],esi
1003193c:	mov    DWORD PTR [esp+0x3c],ebx
10031940:	mov    BYTE PTR [esp+0x2c],bl
10031944:	cmp    DWORD PTR [esp+0x5c],edi
10031948:	jb     0x10031957
1003194a:	mov    ecx,DWORD PTR [esp+0x48]
1003194e:	push   ecx
1003194f:	call   0x10042fe2
10031954:	add    esp,0x4
10031957:	mov    DWORD PTR [esp+0x5c],esi
1003195b:	mov    DWORD PTR [esp+0x58],ebx
1003195f:	mov    BYTE PTR [esp+0x48],bl
10031963:	mov    BYTE PTR [esp+0x208],0xa
1003196b:	cmp    DWORD PTR [esp+0x78],edi
1003196f:	jb     0x1003197e
10031971:	mov    edx,DWORD PTR [esp+0x64]
10031975:	push   edx
10031976:	call   0x10042fe2
1003197b:	add    esp,0x4
1003197e:	mov    eax,ds:0x10082e30
10031983:	push   ebx
10031984:	push   eax
10031985:	lea    ecx,[esp+0x1c8]
1003198c:	push   ecx
1003198d:	lea    ecx,[esp+0x1e8]
10031994:	mov    DWORD PTR [esp+0x84],esi
1003199b:	mov    DWORD PTR [esp+0x80],ebx
100319a2:	mov    BYTE PTR [esp+0x70],bl
100319a6:	call   0x10039ec0
100319ab:	add    esp,0xc
100319ae:	mov    BYTE PTR [esp+0x208],0xb
100319b6:	push   0x10073060
100319bb:	mov    DWORD PTR [esp+0x124],esi
100319c2:	mov    DWORD PTR [esp+0x120],ebx
100319c9:	mov    BYTE PTR [esp+0x110],bl
100319d0:	call   0x10043450
100319d5:	add    esp,0x4
100319d8:	push   eax
100319d9:	push   0x10073060
100319de:	lea    ecx,[esp+0x110]
100319e5:	call   0x1000133b
100319ea:	push   0x1006dd18
100319ef:	mov    BYTE PTR [esp+0x20c],0xc
100319f7:	call   0x10043450
100319fc:	mov    edi,DWORD PTR [esp+0x1c]
10031a00:	mov    esi,DWORD PTR [edi+0x14]
10031a03:	add    esp,0x4
10031a06:	cmp    esi,eax
10031a08:	mov    DWORD PTR [esp+0x10],eax
10031a0c:	mov    ecx,esi
10031a0e:	jae    0x10031a12
10031a10:	mov    eax,esi
10031a12:	cmp    DWORD PTR [edi+0x18],0x10
10031a16:	jb     0x10031a1d
10031a18:	mov    ecx,DWORD PTR [edi+0x4]
10031a1b:	jmp    0x10031a20
10031a1d:	lea    ecx,[edi+0x4]
10031a20:	push   eax
10031a21:	push   0x1006dd18
10031a26:	push   ecx
10031a27:	call   0x10043a74
10031a2c:	add    esp,0xc
10031a2f:	cmp    eax,ebx
10031a31:	jne    0x10031a48
10031a33:	mov    eax,DWORD PTR [esp+0x10]
10031a37:	cmp    esi,eax
10031a39:	jb     0x10031a48
10031a3b:	xor    edx,edx
10031a3d:	cmp    esi,eax
10031a3f:	setne  dl
10031a42:	mov    eax,edx
10031a44:	cmp    eax,ebx
10031a46:	je     0x10031a9a
10031a48:	movzx  eax,BYTE PTR ds:0x10082db8
10031a4f:	mov    ecx,DWORD PTR ds:0x10082e2c
10031a55:	push   eax
10031a56:	push   ecx
10031a57:	lea    edx,[esp+0x84]
10031a5e:	push   edx
10031a5f:	mov    ecx,edi
10031a61:	call   0x10039ec0
10031a66:	add    esp,0xc
10031a69:	push   0xffffffff
10031a6b:	push   ebx
10031a6c:	lea    esi,[esp+0x110]
10031a73:	mov    BYTE PTR [esp+0x210],0xd
10031a7b:	call   0x10004cbe
10031a80:	cmp    DWORD PTR [esp+0x94],0x10
10031a88:	jb     0x10031a9a
10031a8a:	mov    eax,DWORD PTR [esp+0x80]
10031a91:	push   eax
10031a92:	call   0x10042fe2
10031a97:	add    esp,0x4
10031a9a:	mov    DWORD PTR [esp+0x10],ebx
10031a9e:	mov    ecx,DWORD PTR [esp+0x1c]
10031aa2:	push   0x10074600
10031aa7:	push   ecx
10031aa8:	lea    edx,[esp+0x84]
10031aaf:	push   edx
10031ab0:	mov    BYTE PTR [esp+0x214],0xe
10031ab8:	call   0x10006727
10031abd:	add    esp,0xc
10031ac0:	lea    ecx,[esp+0x1dc]
10031ac7:	push   ecx
10031ac8:	push   eax
10031ac9:	lea    edx,[esp+0x4c]
10031acd:	push   edx
10031ace:	mov    BYTE PTR [esp+0x214],0xf
10031ad6:	call   0x1000676d
10031adb:	add    esp,0xc
10031ade:	push   edi
10031adf:	push   eax
10031ae0:	lea    eax,[esp+0x68]
10031ae4:	push   eax
10031ae5:	mov    BYTE PTR [esp+0x214],0x10
10031aed:	call   0x1000676d
10031af2:	mov    esi,0x10
10031af7:	add    esp,0xc
10031afa:	cmp    DWORD PTR [eax+0x18],esi
10031afd:	jb     0x10031b04
10031aff:	mov    eax,DWORD PTR [eax+0x4]
10031b02:	jmp    0x10031b07
10031b04:	add    eax,0x4
10031b07:	push   eax
10031b08:	call   0x10002068
10031b0d:	add    esp,0x4
10031b10:	cmp    DWORD PTR [esp+0x78],esi
10031b14:	jb     0x10031b23
10031b16:	mov    ecx,DWORD PTR [esp+0x64]
10031b1a:	push   ecx
10031b1b:	call   0x10042fe2
10031b20:	add    esp,0x4
10031b23:	cmp    DWORD PTR [esp+0x5c],esi
10031b27:	mov    edi,0xf
10031b2c:	mov    DWORD PTR [esp+0x78],edi
10031b30:	mov    DWORD PTR [esp+0x74],ebx
10031b34:	mov    BYTE PTR [esp+0x64],bl
10031b38:	jb     0x10031b47
10031b3a:	mov    edx,DWORD PTR [esp+0x48]
10031b3e:	push   edx
10031b3f:	call   0x10042fe2
10031b44:	add    esp,0x4
10031b47:	cmp    DWORD PTR [esp+0x94],esi
10031b4e:	mov    DWORD PTR [esp+0x5c],edi
10031b52:	mov    DWORD PTR [esp+0x58],ebx
10031b56:	mov    BYTE PTR [esp+0x48],bl
10031b5a:	jb     0x10031b6c
10031b5c:	mov    eax,DWORD PTR [esp+0x80]
10031b63:	push   eax
10031b64:	call   0x10042fe2
10031b69:	add    esp,0x4
10031b6c:	mov    DWORD PTR [esp+0x140],edi
10031b73:	mov    DWORD PTR [esp+0x13c],ebx
10031b7a:	mov    BYTE PTR [esp+0x12c],bl
10031b81:	mov    DWORD PTR [esp+0x160],edi
10031b88:	mov    DWORD PTR [esp+0x15c],ebx
10031b8f:	mov    BYTE PTR [esp+0x14c],bl
10031b96:	mov    DWORD PTR [esp+0x17c],edi
10031b9d:	mov    DWORD PTR [esp+0x178],ebx
10031ba4:	mov    BYTE PTR [esp+0x168],bl
10031bab:	mov    DWORD PTR [esp+0x198],edi
10031bb2:	mov    DWORD PTR [esp+0x194],ebx
10031bb9:	mov    BYTE PTR [esp+0x184],bl
10031bc0:	mov    DWORD PTR [esp+0x1b4],edi
10031bc7:	mov    DWORD PTR [esp+0x1b0],ebx
10031bce:	mov    BYTE PTR [esp+0x1a0],bl
10031bd5:	lea    ecx,[esp+0x124]
10031bdc:	push   ecx
10031bdd:	mov    ecx,DWORD PTR [esp+0x20]
10031be1:	mov    BYTE PTR [esp+0x20c],0x11
10031be9:	call   0x10032750
10031bee:	add    esp,0x4
10031bf1:	test   al,al
10031bf3:	jne    0x10031d64
10031bf9:	cmp    DWORD PTR [esp+0x1b4],esi
10031c00:	mov    edx,DWORD PTR [esp+0x14]
10031c04:	mov    DWORD PTR [edx],ebx
10031c06:	jb     0x10031c18
10031c08:	mov    eax,DWORD PTR [esp+0x1a0]
10031c0f:	push   eax
10031c10:	call   0x10042fe2
10031c15:	add    esp,0x4
10031c18:	cmp    DWORD PTR [esp+0x198],esi
10031c1f:	mov    DWORD PTR [esp+0x1b4],edi
10031c26:	mov    DWORD PTR [esp+0x1b0],ebx
10031c2d:	mov    BYTE PTR [esp+0x1a0],bl
10031c34:	jb     0x10031c46
10031c36:	mov    ecx,DWORD PTR [esp+0x184]
10031c3d:	push   ecx
10031c3e:	call   0x10042fe2
10031c43:	add    esp,0x4
10031c46:	cmp    DWORD PTR [esp+0x17c],esi
10031c4d:	mov    DWORD PTR [esp+0x198],edi
10031c54:	mov    DWORD PTR [esp+0x194],ebx
10031c5b:	mov    BYTE PTR [esp+0x184],bl
10031c62:	jb     0x10031c74
10031c64:	mov    edx,DWORD PTR [esp+0x168]
10031c6b:	push   edx
10031c6c:	call   0x10042fe2
10031c71:	add    esp,0x4
10031c74:	cmp    DWORD PTR [esp+0x160],esi
10031c7b:	mov    DWORD PTR [esp+0x17c],edi
10031c82:	mov    DWORD PTR [esp+0x178],ebx
10031c89:	mov    BYTE PTR [esp+0x168],bl
10031c90:	jb     0x10031ca2
10031c92:	mov    eax,DWORD PTR [esp+0x14c]
10031c99:	push   eax
10031c9a:	call   0x10042fe2
10031c9f:	add    esp,0x4
10031ca2:	cmp    DWORD PTR [esp+0x140],esi
10031ca9:	mov    DWORD PTR [esp+0x160],edi
10031cb0:	mov    DWORD PTR [esp+0x15c],ebx
10031cb7:	mov    BYTE PTR [esp+0x14c],bl
10031cbe:	jb     0x10031cd0
10031cc0:	mov    ecx,DWORD PTR [esp+0x12c]
10031cc7:	push   ecx
10031cc8:	call   0x10042fe2
10031ccd:	add    esp,0x4
10031cd0:	push   ebx
10031cd1:	mov    DWORD PTR [esp+0x144],edi
10031cd8:	mov    DWORD PTR [esp+0x140],ebx
10031cdf:	mov    BYTE PTR [esp+0x130],bl
10031ce6:	call   0x10042fe2
10031ceb:	add    esp,0x4
10031cee:	cmp    DWORD PTR [esp+0x120],esi
10031cf5:	jb     0x10031d07
10031cf7:	mov    edx,DWORD PTR [esp+0x10c]
10031cfe:	push   edx
10031cff:	call   0x10042fe2
10031d04:	add    esp,0x4
10031d07:	cmp    DWORD PTR [esp+0x1d8],esi
10031d0e:	mov    DWORD PTR [esp+0x120],edi
10031d15:	mov    DWORD PTR [esp+0x11c],ebx
10031d1c:	mov    BYTE PTR [esp+0x10c],bl
10031d23:	jb     0x10031d35
10031d25:	mov    eax,DWORD PTR [esp+0x1c4]
10031d2c:	push   eax
10031d2d:	call   0x10042fe2
10031d32:	add    esp,0x4
10031d35:	cmp    DWORD PTR [esp+0x1f4],esi
10031d3c:	mov    DWORD PTR [esp+0x1d8],edi
10031d43:	mov    DWORD PTR [esp+0x1d4],ebx
10031d4a:	mov    BYTE PTR [esp+0x1c4],bl
10031d51:	jb     0x10032277
10031d57:	mov    ecx,DWORD PTR [esp+0x1e0]
10031d5e:	push   ecx
10031d5f:	jmp    0x1003226f
10031d64:	push   0x10073d3c
10031d69:	mov    DWORD PTR [esp+0xb4],edi
10031d70:	mov    DWORD PTR [esp+0xb0],ebx
10031d77:	mov    BYTE PTR [esp+0xa0],bl
10031d7e:	call   0x10043450
10031d83:	add    esp,0x4
10031d86:	push   eax
10031d87:	push   0x10073d3c
10031d8c:	lea    ecx,[esp+0xa0]
10031d93:	call   0x1000133b
10031d98:	lea    edx,[esp+0x1dc]
10031d9f:	push   edx
10031da0:	lea    edi,[esp+0x80]
10031da7:	mov    BYTE PTR [esp+0x20c],0x12
10031daf:	call   0x100347f0
10031db4:	add    esp,0x4
10031db7:	mov    ecx,DWORD PTR [esp+0x18]
10031dbb:	push   ecx
10031dbc:	push   eax
10031dbd:	lea    edx,[esp+0xd8]
10031dc4:	push   edx
10031dc5:	mov    BYTE PTR [esp+0x214],0x13
10031dcd:	call   0x1000676d
10031dd2:	add    esp,0xc
10031dd5:	lea    eax,[esp+0x108]
10031ddc:	push   eax
10031ddd:	lea    ecx,[esp+0x1c4]
10031de4:	push   ecx
10031de5:	lea    edx,[esp+0xbc]
10031dec:	push   edx
10031ded:	mov    BYTE PTR [esp+0x214],0x14
10031df5:	call   0x1000676d
10031dfa:	add    esp,0xc
10031dfd:	mov    edx,eax
10031dff:	lea    ecx,[esp+0x44]
10031e03:	mov    BYTE PTR [esp+0x208],0x15
10031e0b:	call   0x100312d0
10031e10:	mov    edi,eax
10031e12:	push   0x10074604
10031e17:	push   0x1b
10031e19:	mov    ecx,0x10074634
10031e1e:	mov    BYTE PTR [esp+0x210],0x16
10031e26:	call   0x100042b4
10031e2b:	mov    esi,eax
10031e2d:	push   esi
10031e2e:	mov    DWORD PTR [esp+0x4c],0xf
10031e36:	mov    DWORD PTR [esp+0x48],ebx
10031e3a:	mov    BYTE PTR [esp+0x38],bl
10031e3e:	call   0x10043450
10031e43:	add    esp,0xc
10031e46:	push   eax
10031e47:	push   esi
10031e48:	lea    ecx,[esp+0x30]
10031e4c:	call   0x1000133b
10031e51:	push   edi
10031e52:	lea    eax,[esp+0x2c]
10031e56:	push   eax
10031e57:	lea    ecx,[esp+0x68]
10031e5b:	push   ecx
10031e5c:	mov    BYTE PTR [esp+0x214],0x17
10031e64:	call   0x1000676d
10031e69:	add    esp,0xc
10031e6c:	mov    edx,DWORD PTR [ebp+0x14]
10031e6f:	mov    ecx,DWORD PTR [esp+0x20]
10031e73:	push   edx
10031e74:	push   ecx
10031e75:	push   ebx
10031e76:	push   ebx
10031e77:	push   eax
10031e78:	lea    edx,[esp+0xac]
10031e7f:	mov    BYTE PTR [esp+0x21c],0x18
10031e87:	mov    eax,DWORD PTR [esp+0x158]
10031e8e:	push   edx
10031e8f:	push   eax
10031e90:	lea    ecx,[esp+0x144]
10031e97:	push   ecx
10031e98:	lea    edx,[esp+0x44]
10031e9c:	push   edx
10031e9d:	call   0x1000cb6f
10031ea2:	mov    ecx,DWORD PTR [eax]
10031ea4:	mov    edi,ecx
10031ea6:	add    esp,0x24
10031ea9:	cmp    edi,ebx
10031eab:	mov    DWORD PTR [eax],ebx
10031ead:	je     0x10031eb8
10031eaf:	push   ebx
10031eb0:	call   0x10042fe2
10031eb5:	add    esp,0x4
10031eb8:	mov    edx,DWORD PTR [esp+0x24]
10031ebc:	push   edx
10031ebd:	mov    DWORD PTR [esp+0x14],edi
10031ec1:	call   0x10042fe2
10031ec6:	mov    esi,0x10
10031ecb:	add    esp,0x4
10031ece:	cmp    DWORD PTR [esp+0x78],esi
10031ed2:	jb     0x10031ee1
10031ed4:	mov    eax,DWORD PTR [esp+0x64]
10031ed8:	push   eax
10031ed9:	call   0x10042fe2
10031ede:	add    esp,0x4
10031ee1:	cmp    DWORD PTR [esp+0x40],esi
10031ee5:	mov    DWORD PTR [esp+0x78],0xf
10031eed:	mov    DWORD PTR [esp+0x74],ebx
10031ef1:	mov    BYTE PTR [esp+0x64],bl
10031ef5:	jb     0x10031f04
10031ef7:	mov    ecx,DWORD PTR [esp+0x2c]
10031efb:	push   ecx
10031efc:	call   0x10042fe2
10031f01:	add    esp,0x4
10031f04:	cmp    DWORD PTR [esp+0x5c],esi
10031f08:	mov    DWORD PTR [esp+0x40],0xf
10031f10:	mov    DWORD PTR [esp+0x3c],ebx
10031f14:	mov    BYTE PTR [esp+0x2c],bl
10031f18:	jb     0x10031f27
10031f1a:	mov    edx,DWORD PTR [esp+0x48]
10031f1e:	push   edx
10031f1f:	call   0x10042fe2
10031f24:	add    esp,0x4
10031f27:	cmp    DWORD PTR [esp+0xcc],esi
10031f2e:	mov    DWORD PTR [esp+0x5c],0xf
10031f36:	mov    DWORD PTR [esp+0x58],ebx
10031f3a:	mov    BYTE PTR [esp+0x48],bl
10031f3e:	jb     0x10031f50
10031f40:	mov    eax,DWORD PTR [esp+0xb8]
10031f47:	push   eax
10031f48:	call   0x10042fe2
10031f4d:	add    esp,0x4
10031f50:	cmp    DWORD PTR [esp+0xe8],esi
10031f57:	mov    DWORD PTR [esp+0xcc],0xf
10031f62:	mov    DWORD PTR [esp+0xc8],ebx
10031f69:	mov    BYTE PTR [esp+0xb8],bl
10031f70:	jb     0x10031f82
10031f72:	mov    ecx,DWORD PTR [esp+0xd4]
10031f79:	push   ecx
10031f7a:	call   0x10042fe2
10031f7f:	add    esp,0x4
10031f82:	cmp    DWORD PTR [esp+0x94],esi
10031f89:	mov    DWORD PTR [esp+0xe8],0xf
10031f94:	mov    DWORD PTR [esp+0xe4],ebx
10031f9b:	mov    BYTE PTR [esp+0xd4],bl
10031fa2:	jb     0x10031fb4
10031fa4:	mov    edx,DWORD PTR [esp+0x80]
10031fab:	push   edx
10031fac:	call   0x10042fe2
10031fb1:	add    esp,0x4
10031fb4:	mov    BYTE PTR [esp+0x208],0x11
10031fbc:	cmp    DWORD PTR [esp+0xb0],esi
10031fc3:	mov    DWORD PTR [esp+0x94],0xf
10031fce:	mov    DWORD PTR [esp+0x90],ebx
10031fd5:	mov    BYTE PTR [esp+0x80],bl
10031fdc:	jb     0x10031fee
10031fde:	mov    eax,DWORD PTR [esp+0x9c]
10031fe5:	push   eax
10031fe6:	call   0x10042fe2
10031feb:	add    esp,0x4
10031fee:	cmp    edi,ebx
10031ff0:	jne    0x100320f4
10031ff6:	mov    ecx,DWORD PTR [esp+0x1c]
10031ffa:	push   0x10074600
10031fff:	push   ecx
10032000:	lea    edx,[esp+0xf4]
10032007:	push   edx
10032008:	call   0x10006727
1003200d:	add    esp,0xc
10032010:	lea    ecx,[esp+0x1dc]
10032017:	push   ecx
10032018:	push   eax
10032019:	lea    edx,[esp+0xd8]
10032020:	push   edx
10032021:	mov    BYTE PTR [esp+0x214],0x19
10032029:	call   0x1000676d
1003202e:	add    esp,0xc
10032031:	mov    ecx,DWORD PTR [esp+0x18]
10032035:	push   ecx
10032036:	push   eax
10032037:	lea    edx,[esp+0x84]
1003203e:	push   edx
1003203f:	mov    BYTE PTR [esp+0x214],0x1a
10032047:	call   0x1000676d
1003204c:	add    esp,0xc
1003204f:	cmp    DWORD PTR [eax+0x18],esi
10032052:	jb     0x10032059
10032054:	mov    eax,DWORD PTR [eax+0x4]
10032057:	jmp    0x1003205c
10032059:	add    eax,0x4
1003205c:	push   eax
1003205d:	call   0x10002068
10032062:	add    esp,0x4
10032065:	cmp    DWORD PTR [esp+0x94],esi
1003206c:	jb     0x1003207e
1003206e:	mov    eax,DWORD PTR [esp+0x80]
10032075:	push   eax
10032076:	call   0x10042fe2
1003207b:	add    esp,0x4
1003207e:	cmp    DWORD PTR [esp+0xe8],esi
10032085:	mov    DWORD PTR [esp+0x94],0xf
10032090:	mov    DWORD PTR [esp+0x90],ebx
10032097:	mov    BYTE PTR [esp+0x80],bl
1003209e:	jb     0x100320b0
100320a0:	mov    ecx,DWORD PTR [esp+0xd4]
100320a7:	push   ecx
100320a8:	call   0x10042fe2
100320ad:	add    esp,0x4
100320b0:	mov    BYTE PTR [esp+0x208],0x11
100320b8:	cmp    DWORD PTR [esp+0x104],esi
100320bf:	mov    DWORD PTR [esp+0xe8],0xf
100320ca:	mov    DWORD PTR [esp+0xe4],ebx
100320d1:	mov    BYTE PTR [esp+0xd4],bl
100320d8:	jb     0x100320ea
100320da:	mov    edx,DWORD PTR [esp+0xf0]
100320e1:	push   edx
100320e2:	call   0x10042fe2
100320e7:	add    esp,0x4
100320ea:	push   0x5
100320ec:	call   0x10038b80
100320f1:	add    esp,0x4
100320f4:	cmp    DWORD PTR [esp+0x1b4],esi
100320fb:	mov    eax,DWORD PTR [esp+0x14]
100320ff:	mov    DWORD PTR [eax],edi
10032101:	jb     0x10032113
10032103:	mov    ecx,DWORD PTR [esp+0x1a0]
1003210a:	push   ecx
1003210b:	call   0x10042fe2
10032110:	add    esp,0x4
10032113:	cmp    DWORD PTR [esp+0x198],esi
1003211a:	mov    DWORD PTR [esp+0x1b4],0xf
10032125:	mov    DWORD PTR [esp+0x1b0],ebx
1003212c:	mov    BYTE PTR [esp+0x1a0],bl
10032133:	jb     0x10032145
10032135:	mov    edx,DWORD PTR [esp+0x184]
1003213c:	push   edx
1003213d:	call   0x10042fe2
10032142:	add    esp,0x4
10032145:	cmp    DWORD PTR [esp+0x17c],esi
1003214c:	mov    DWORD PTR [esp+0x198],0xf
10032157:	mov    DWORD PTR [esp+0x194],ebx
1003215e:	mov    BYTE PTR [esp+0x184],bl
10032165:	jb     0x10032177
10032167:	mov    eax,DWORD PTR [esp+0x168]
1003216e:	push   eax
1003216f:	call   0x10042fe2
10032174:	add    esp,0x4
10032177:	cmp    DWORD PTR [esp+0x160],esi
1003217e:	mov    DWORD PTR [esp+0x17c],0xf
10032189:	mov    DWORD PTR [esp+0x178],ebx
10032190:	mov    BYTE PTR [esp+0x168],bl
10032197:	jb     0x100321a9
10032199:	mov    ecx,DWORD PTR [esp+0x14c]
100321a0:	push   ecx
100321a1:	call   0x10042fe2
100321a6:	add    esp,0x4
100321a9:	cmp    DWORD PTR [esp+0x140],esi
100321b0:	mov    DWORD PTR [esp+0x160],0xf
100321bb:	mov    DWORD PTR [esp+0x15c],ebx
100321c2:	mov    BYTE PTR [esp+0x14c],bl
100321c9:	jb     0x100321db
100321cb:	mov    edx,DWORD PTR [esp+0x12c]
100321d2:	push   edx
100321d3:	call   0x10042fe2
100321d8:	add    esp,0x4
100321db:	push   ebx
100321dc:	mov    DWORD PTR [esp+0x144],0xf
100321e7:	mov    DWORD PTR [esp+0x140],ebx
100321ee:	mov    BYTE PTR [esp+0x130],bl
100321f5:	call   0x10042fe2
100321fa:	add    esp,0x4
100321fd:	cmp    DWORD PTR [esp+0x120],esi
10032204:	jb     0x10032216
10032206:	mov    eax,DWORD PTR [esp+0x10c]
1003220d:	push   eax
1003220e:	call   0x10042fe2
10032213:	add    esp,0x4
10032216:	cmp    DWORD PTR [esp+0x1d8],esi
1003221d:	mov    edi,0xf
10032222:	mov    DWORD PTR [esp+0x120],edi
10032229:	mov    DWORD PTR [esp+0x11c],ebx
10032230:	mov    BYTE PTR [esp+0x10c],bl
10032237:	jb     0x10032249
10032239:	mov    ecx,DWORD PTR [esp+0x1c4]
10032240:	push   ecx
10032241:	call   0x10042fe2
10032246:	add    esp,0x4
10032249:	cmp    DWORD PTR [esp+0x1f4],esi
10032250:	mov    DWORD PTR [esp+0x1d8],edi
10032257:	mov    DWORD PTR [esp+0x1d4],ebx
1003225e:	mov    BYTE PTR [esp+0x1c4],bl
10032265:	jb     0x10032277
10032267:	mov    edx,DWORD PTR [esp+0x1e0]
1003226e:	push   edx
1003226f:	call   0x10042fe2
10032274:	add    esp,0x4
10032277:	mov    eax,DWORD PTR [esp+0x14]
1003227b:	mov    ecx,DWORD PTR [esp+0x200]
10032282:	mov    DWORD PTR fs:0x0,ecx
10032289:	pop    ecx
1003228a:	pop    edi
1003228b:	pop    esi
1003228c:	pop    ebx
1003228d:	mov    ecx,DWORD PTR [esp+0x1e8]
10032294:	xor    ecx,esp
10032296:	call   0x10043615
1003229b:	mov    esp,ebp
1003229d:	pop    ebp
1003229e:	ret    
1003229f:	int3   
100322a0:	push   ebp
100322a1:	mov    ebp,esp
100322a3:	push   0xffffffff
100322a5:	push   0x10060e58
100322aa:	mov    eax,fs:0x0
100322b0:	push   eax
100322b1:	sub    esp,0x54
100322b4:	mov    eax,ds:0x100801ac
100322b9:	xor    eax,ebp
100322bb:	mov    DWORD PTR [ebp-0x10],eax
100322be:	push   ebx
100322bf:	push   esi
100322c0:	push   edi
100322c1:	push   eax
100322c2:	lea    eax,[ebp-0xc]
100322c5:	mov    fs:0x0,eax
100322cb:	mov    eax,DWORD PTR [ebp+0x14]
100322ce:	mov    edi,DWORD PTR [ebp+0x8]
100322d1:	mov    ecx,DWORD PTR [ebp+0x18]
100322d4:	mov    edx,DWORD PTR [ebp+0x1c]
100322d7:	mov    esi,DWORD PTR [ebp+0xc]
100322da:	xor    ebx,ebx
100322dc:	mov    DWORD PTR [ebp-0x34],eax
100322df:	mov    eax,DWORD PTR [ebp+0x24]
100322e2:	mov    DWORD PTR [ebp-0x40],ebx
100322e5:	mov    DWORD PTR [ebp-0x38],edi
100322e8:	mov    DWORD PTR [ebp-0x48],ecx
100322eb:	mov    DWORD PTR [ebp-0x44],edx
100322ee:	mov    DWORD PTR [ebp-0x4c],eax
100322f1:	mov    DWORD PTR [ebp-0x60],ebx
100322f4:	mov    DWORD PTR [ebp-0x4],ebx
100322f7:	call   DWORD PTR ds:0x10080ffc
100322fd:	push   ebx
100322fe:	push   ebx
100322ff:	push   ebx
10032300:	push   ebx
10032301:	push   0x10074650
10032306:	push   0x1a
10032308:	mov    ecx,0x10074688
1003230d:	mov    DWORD PTR [ebp-0x30],eax
10032310:	call   0x1000444a
10032315:	add    esp,0x8
10032318:	push   eax
10032319:	call   DWORD PTR ds:0x10067394
1003231f:	mov    ebx,eax
10032321:	mov    DWORD PTR [ebp-0x3c],ebx
10032324:	test   ebx,ebx
10032326:	mov    BYTE PTR [ebp-0x4],0x1
1003232a:	jne    0x1003233b
1003232c:	push   eax
1003232d:	mov    DWORD PTR [edi],eax
1003232f:	call   0x10042fe2
10032334:	mov    eax,edi
10032336:	jmp    0x1003272c
1003233b:	mov    edi,DWORD PTR [ebp+0x28]
1003233e:	cmp    edi,0xffffffff
10032341:	je     0x10032390
10032343:	push   0x8
10032345:	call   0x10043196
1003234a:	add    esp,0x4
1003234d:	test   eax,eax
1003234f:	je     0x10032358
10032351:	mov    DWORD PTR [eax],ebx
10032353:	mov    DWORD PTR [eax+0x4],edi
10032356:	jmp    0x1003235a
10032358:	xor    eax,eax
1003235a:	push   0x0
1003235c:	push   0x0
1003235e:	push   eax
1003235f:	push   0x10030a70
10032364:	push   0x0
10032366:	push   0x0
10032368:	call   DWORD PTR ds:0x10067088
1003236e:	test   eax,eax
10032370:	jne    0x10032390
10032372:	mov    esi,DWORD PTR [ebp-0x38]
10032375:	push   ebx
10032376:	mov    DWORD PTR [esi],0x0
1003237c:	call   DWORD PTR ds:0x10067378
10032382:	push   0x0
10032384:	call   0x10042fe2
10032389:	mov    eax,esi
1003238b:	jmp    0x1003272c
10032390:	call   0x10002068
10032395:	cmp    DWORD PTR [esi+0x18],0x10
10032399:	jb     0x100323a0
1003239b:	mov    esi,DWORD PTR [esi+0x4]
1003239e:	jmp    0x100323a3
100323a0:	add    esi,0x4
100323a3:	test   esi,esi
100323a5:	jne    0x100323ab
100323a7:	xor    eax,eax
100323a9:	jmp    0x100323da
100323ab:	push   esi
100323ac:	call   DWORD PTR ds:0x100670e8
100323b2:	mov    edi,eax
100323b4:	add    edi,0x1
100323b7:	cmp    edi,0x3fffffff
100323bd:	jle    0x100323c3
100323bf:	xor    eax,eax
100323c1:	jmp    0x100323da
100323c3:	lea    eax,[edi+edi*1]
100323c6:	call   0x1004b9b0
100323cb:	mov    ecx,DWORD PTR [ebp-0x30]
100323ce:	mov    eax,esp
100323d0:	push   ecx
100323d1:	push   edi
100323d2:	push   esi
100323d3:	mov    esi,eax
100323d5:	call   0x100070bc
100323da:	mov    edx,DWORD PTR [ebp+0x10]
100323dd:	push   0x0
100323df:	push   0x20000000
100323e4:	push   0x3
100323e6:	push   0x0
100323e8:	push   0x0
100323ea:	push   edx
100323eb:	push   eax
100323ec:	push   ebx
100323ed:	call   DWORD PTR ds:0x10067390
100323f3:	mov    ebx,eax
100323f5:	mov    DWORD PTR [ebp-0x3c],ebx
100323f8:	test   ebx,ebx
100323fa:	mov    BYTE PTR [ebp-0x4],0x2
100323fe:	jne    0x10032412
10032400:	mov    esi,DWORD PTR [ebp-0x38]
10032403:	push   eax
10032404:	mov    DWORD PTR [esi],eax
10032406:	call   0x10042fe2
1003240b:	mov    eax,esi
1003240d:	jmp    0x1003272c
10032412:	push   0x100746c0
10032417:	push   0x9
10032419:	mov    ecx,0x100746e8
1003241e:	call   0x1000444a
10032423:	push   0x100746fc
10032428:	push   0xb
1003242a:	mov    ecx,0x1007472c
1003242f:	mov    DWORD PTR [ebp-0x5c],eax
10032432:	call   0x1000444a
10032437:	push   0x10074744
1003243c:	push   0xd
1003243e:	mov    ecx,0x10074770
10032443:	mov    DWORD PTR [ebp-0x58],eax
10032446:	call   0x1000444a
1003244b:	add    esp,0x18
1003244e:	mov    DWORD PTR [ebp-0x54],eax
10032451:	mov    DWORD PTR [ebp-0x50],0x0
10032458:	call   0x10002068
1003245d:	mov    esi,DWORD PTR [ebp-0x34]
10032460:	cmp    DWORD PTR [esi+0x18],0x10
10032464:	jb     0x1003246b
10032466:	mov    esi,DWORD PTR [esi+0x4]
10032469:	jmp    0x1003246e
1003246b:	add    esi,0x4
1003246e:	test   esi,esi
10032470:	jne    0x10032476
10032472:	xor    eax,eax
10032474:	jmp    0x100324a5
10032476:	push   esi
10032477:	call   DWORD PTR ds:0x100670e8
1003247d:	mov    edi,eax
1003247f:	add    edi,0x1
10032482:	cmp    edi,0x3fffffff
10032488:	jle    0x1003248e
1003248a:	xor    eax,eax
1003248c:	jmp    0x100324a5
1003248e:	lea    eax,[edi+edi*1]
10032491:	call   0x1004b9b0
10032496:	mov    ecx,DWORD PTR [ebp-0x30]
10032499:	mov    eax,esp
1003249b:	push   ecx
1003249c:	push   edi
1003249d:	push   esi
1003249e:	mov    esi,eax
100324a0:	call   0x100070bc
100324a5:	push   0x0
100324a7:	push   0x4080200
100324ac:	lea    edx,[ebp-0x5c]
100324af:	push   edx
100324b0:	push   0x0
100324b2:	push   0x0
100324b4:	push   eax
100324b5:	push   0x10074790
100324ba:	push   0x3
100324bc:	mov    ecx,0x100747d0
100324c1:	call   0x1000444a
100324c6:	add    esp,0x8
100324c9:	push   eax
100324ca:	push   ebx
100324cb:	call   DWORD PTR ds:0x1006737c
100324d1:	mov    DWORD PTR [ebp-0x34],eax
100324d4:	test   eax,eax
100324d6:	mov    BYTE PTR [ebp-0x4],0x3
100324da:	je     0x10032372
100324e0:	push   0x1006dd18
100324e5:	call   0x10043450
100324ea:	mov    edi,DWORD PTR [ebp-0x48]
100324ed:	mov    esi,DWORD PTR [edi+0x14]
100324f0:	mov    ebx,eax
100324f2:	add    esp,0x4
100324f5:	cmp    esi,ebx
100324f7:	mov    eax,esi
100324f9:	mov    ecx,esi
100324fb:	jb     0x100324ff
100324fd:	mov    ecx,ebx
100324ff:	cmp    DWORD PTR [edi+0x18],0x10
10032503:	jb     0x1003250d
10032505:	mov    eax,DWORD PTR [edi+0x4]
10032508:	add    edi,0x4
1003250b:	jmp    0x10032512
1003250d:	add    edi,0x4
10032510:	mov    eax,edi
10032512:	push   ecx
10032513:	push   0x1006dd18
10032518:	push   eax
10032519:	call   0x10043a74
1003251e:	add    esp,0xc
10032521:	test   eax,eax
10032523:	jne    0x10032536
10032525:	cmp    esi,ebx
10032527:	jb     0x10032536
10032529:	cmp    esi,ebx
1003252b:	setne  al
1003252e:	test   eax,eax
10032530:	je     0x100325ff
10032536:	mov    esi,DWORD PTR [ebp-0x48]
10032539:	push   esi
1003253a:	lea    ecx,[ebp-0x2c]
1003253d:	call   0x100011c9
10032542:	cmp    DWORD PTR [esi+0x18],0x10
10032546:	jb     0x1003254c
10032548:	mov    esi,DWORD PTR [edi]
1003254a:	jmp    0x1003254e
1003254c:	mov    esi,edi
1003254e:	test   esi,esi
10032550:	jne    0x10032556
10032552:	xor    eax,eax
10032554:	jmp    0x10032585
10032556:	push   esi
10032557:	call   DWORD PTR ds:0x100670e8
1003255d:	mov    edi,eax
1003255f:	add    edi,0x1
10032562:	cmp    edi,0x3fffffff
10032568:	jle    0x1003256e
1003256a:	xor    eax,eax
1003256c:	jmp    0x10032585
1003256e:	lea    eax,[edi+edi*1]
10032571:	call   0x1004b9b0
10032576:	mov    ecx,DWORD PTR [ebp-0x30]
10032579:	mov    eax,esp
1003257b:	push   ecx
1003257c:	push   edi
1003257d:	push   esi
1003257e:	mov    esi,eax
10032580:	call   0x100070bc
10032585:	mov    ebx,DWORD PTR [ebp-0x34]
10032588:	push   0x1000000
1003258d:	push   0xffffffff
1003258f:	push   eax
10032590:	push   ebx
10032591:	call   DWORD PTR ds:0x10067398
10032597:	test   eax,eax
10032599:	jne    0x100325eb
1003259b:	call   DWORD PTR ds:0x100670cc
100325a1:	cmp    DWORD PTR [ebp-0x14],0x10
100325a5:	mov    edi,DWORD PTR [ebp-0x38]
100325a8:	mov    DWORD PTR [edi],0x0
100325ae:	jb     0x100325bc
100325b0:	mov    edx,DWORD PTR [ebp-0x28]
100325b3:	push   edx
100325b4:	call   0x10042fe2
100325b9:	add    esp,0x4
100325bc:	mov    esi,DWORD PTR ds:0x10067378
100325c2:	push   ebx
100325c3:	mov    DWORD PTR [ebp-0x14],0xf
100325ca:	mov    DWORD PTR [ebp-0x18],0x0
100325d1:	mov    BYTE PTR [ebp-0x28],0x0
100325d5:	call   esi
100325d7:	mov    eax,DWORD PTR [ebp-0x3c]
100325da:	push   eax
100325db:	call   esi
100325dd:	push   0x0
100325df:	call   0x10042fe2
100325e4:	mov    eax,edi
100325e6:	jmp    0x1003272c
100325eb:	cmp    DWORD PTR [ebp-0x14],0x10
100325ef:	jb     0x10032602
100325f1:	mov    ecx,DWORD PTR [ebp-0x28]
100325f4:	push   ecx
100325f5:	call   0x10042fe2
100325fa:	add    esp,0x4
100325fd:	jmp    0x10032602
100325ff:	mov    ebx,DWORD PTR [ebp-0x34]
10032602:	mov    edx,DWORD PTR [ebp+0x20]
10032605:	mov    eax,DWORD PTR [ebp-0x44]
10032608:	push   edx
10032609:	push   eax
1003260a:	push   0x0
1003260c:	push   0x0
1003260e:	push   ebx
1003260f:	call   DWORD PTR ds:0x10067388
10032615:	test   eax,eax
10032617:	jne    0x10032645
10032619:	call   DWORD PTR ds:0x100670cc
1003261f:	mov    edi,DWORD PTR [ebp-0x38]
10032622:	mov    esi,DWORD PTR ds:0x10067378
10032628:	push   ebx
10032629:	mov    DWORD PTR [edi],0x0
1003262f:	call   esi
10032631:	mov    ecx,DWORD PTR [ebp-0x3c]
10032634:	push   ecx
10032635:	call   esi
10032637:	push   0x0
10032639:	call   0x10042fe2
1003263e:	mov    eax,edi
10032640:	jmp    0x1003272c
10032645:	push   0x400
1003264a:	mov    DWORD PTR [ebp-0x30],0x400
10032651:	xor    esi,esi
10032653:	call   0x100438d7
10032658:	mov    edi,eax
1003265a:	add    esp,0x4
1003265d:	mov    DWORD PTR [ebp-0x44],edi
10032660:	lea    edx,[ebp-0x40]
10032663:	push   edx
10032664:	push   0x400
10032669:	push   edi
1003266a:	mov    BYTE PTR [ebp-0x4],0x4
1003266e:	push   ebx
1003266f:	mov    DWORD PTR [ebp-0x40],esi
10032672:	call   DWORD PTR ds:0x10067380
10032678:	test   eax,eax
1003267a:	je     0x100326e3
1003267c:	mov    eax,DWORD PTR [ebp-0x40]
1003267f:	test   eax,eax
10032681:	je     0x100326ef
10032683:	add    esi,eax
10032685:	lea    eax,[esi-0x401]
1003268b:	cmp    eax,0x1ffbfe
10032690:	ja     0x10032695
10032692:	mov    DWORD PTR [ebp-0x30],esi
10032695:	mov    ecx,DWORD PTR [ebp-0x30]
10032698:	lea    edx,[esi+ecx*1]
1003269b:	push   edx
1003269c:	call   0x100438d7
100326a1:	push   esi
100326a2:	mov    ebx,eax
100326a4:	push   edi
100326a5:	push   ebx
100326a6:	call   0x10045340
100326ab:	add    esp,0x10
100326ae:	cmp    ebx,edi
100326b0:	je     0x100326bb
100326b2:	push   edi
100326b3:	call   0x10042fe2
100326b8:	add    esp,0x4
100326bb:	mov    edi,ebx
100326bd:	push   0x0
100326bf:	mov    DWORD PTR [ebp-0x44],edi
100326c2:	call   0x10042fe2
100326c7:	mov    ecx,DWORD PTR [ebp-0x30]
100326ca:	mov    edx,DWORD PTR [ebp-0x34]
100326cd:	add    esp,0x4
100326d0:	lea    eax,[ebp-0x40]
100326d3:	push   eax
100326d4:	push   ecx
100326d5:	add    ebx,esi
100326d7:	push   ebx
100326d8:	push   edx
100326d9:	call   DWORD PTR ds:0x10067380
100326df:	test   eax,eax
100326e1:	jne    0x1003267c
100326e3:	mov    ebx,DWORD PTR [ebp-0x38]
100326e6:	mov    DWORD PTR [ebx],0x0
100326ec:	push   edi
100326ed:	jmp    0x10032709
100326ef:	test   edi,edi
100326f1:	je     0x100326fd
100326f3:	push   0x0
100326f5:	call   0x10042fe2
100326fa:	add    esp,0x4
100326fd:	mov    edx,DWORD PTR [ebp-0x4c]
10032700:	mov    ebx,DWORD PTR [ebp-0x38]
10032703:	mov    DWORD PTR [edx],esi
10032705:	mov    DWORD PTR [ebx],edi
10032707:	push   0x0
10032709:	call   0x10042fe2
1003270e:	mov    eax,DWORD PTR [ebp-0x34]
10032711:	mov    esi,DWORD PTR ds:0x10067378
10032717:	add    esp,0x4
1003271a:	push   eax
1003271b:	call   esi
1003271d:	mov    ecx,DWORD PTR [ebp-0x3c]
10032720:	push   ecx
10032721:	call   esi
10032723:	push   0x0
10032725:	call   0x10042fe2
1003272a:	mov    eax,ebx
1003272c:	add    esp,0x4
1003272f:	lea    esp,[ebp-0x70]
10032732:	mov    ecx,DWORD PTR [ebp-0xc]
10032735:	mov    DWORD PTR fs:0x0,ecx
1003273c:	pop    ecx
1003273d:	pop    edi
1003273e:	pop    esi
1003273f:	pop    ebx
10032740:	mov    ecx,DWORD PTR [ebp-0x10]
10032743:	xor    ecx,ebp
10032745:	call   0x10043615
1003274a:	mov    esp,ebp
1003274c:	pop    ebp
1003274d:	ret    
1003274e:	int3   
1003274f:	int3   
10032750:	push   ebp
10032751:	lea    ebp,[esp-0x98]
10032758:	sub    esp,0x98
1003275e:	push   0xffffffff
10032760:	push   0x10060e00
10032765:	mov    eax,fs:0x0
1003276b:	push   eax
1003276c:	sub    esp,0x50
1003276f:	mov    eax,ds:0x100801ac
10032774:	xor    eax,ebp
10032776:	mov    DWORD PTR [ebp+0x94],eax
1003277c:	push   ebx
1003277d:	push   esi
1003277e:	push   edi
1003277f:	push   eax
10032780:	lea    eax,[ebp-0xc]
10032783:	mov    fs:0x0,eax
10032789:	mov    eax,DWORD PTR [ebp+0xa0]
1003278f:	xor    ebx,ebx
10032791:	mov    edi,0xf
10032796:	mov    esi,ecx
10032798:	mov    DWORD PTR [ebp-0x20],eax
1003279b:	mov    DWORD PTR [ebp+0x1c],edi
1003279e:	mov    DWORD PTR [ebp+0x18],ebx
100327a1:	mov    BYTE PTR [ebp+0x8],bl
100327a4:	mov    DWORD PTR [ebp+0x3c],edi
100327a7:	mov    DWORD PTR [ebp+0x38],ebx
100327aa:	mov    BYTE PTR [ebp+0x28],bl
100327ad:	mov    DWORD PTR [ebp+0x58],edi
100327b0:	mov    DWORD PTR [ebp+0x54],ebx
100327b3:	mov    BYTE PTR [ebp+0x44],bl
100327b6:	mov    DWORD PTR [ebp+0x74],edi
100327b9:	mov    DWORD PTR [ebp+0x70],ebx
100327bc:	mov    BYTE PTR [ebp+0x60],bl
100327bf:	mov    DWORD PTR [ebp+0x90],edi
100327c5:	mov    DWORD PTR [ebp+0x8c],ebx
100327cb:	mov    BYTE PTR [ebp+0x7c],bl
100327ce:	push   0x38
100327d0:	lea    ecx,[ebp-0x58]
100327d3:	push   ebx
100327d4:	push   ecx
100327d5:	mov    DWORD PTR [ebp-0x4],ebx
100327d8:	call   0x10045dc0
100327dd:	mov    eax,0x1
100327e2:	add    esp,0xc
100327e5:	mov    DWORD PTR [ebp-0x5c],0x3c
100327ec:	mov    DWORD PTR [ebp-0x54],eax
100327ef:	mov    DWORD PTR [ebp-0x48],eax
100327f2:	mov    DWORD PTR [ebp-0x3c],eax
100327f5:	mov    DWORD PTR [ebp-0x34],eax
100327f8:	mov    DWORD PTR [ebp-0x2c],eax
100327fb:	mov    DWORD PTR [ebp-0x24],eax
100327fe:	call   DWORD PTR ds:0x10080ffc
10032804:	mov    DWORD PTR [ebp-0x18],eax
10032807:	mov    eax,DWORD PTR [esi+0x14]
1003280a:	xor    ecx,ecx
1003280c:	add    eax,0x1
1003280f:	mov    edx,0x2
10032814:	mul    edx
10032816:	seto   cl
10032819:	neg    ecx
1003281b:	or     ecx,eax
1003281d:	push   ecx
1003281e:	call   0x100438d7
10032823:	add    esp,0x4
10032826:	mov    DWORD PTR [ebp-0x10],eax
10032829:	mov    BYTE PTR [ebp-0x4],0x1
1003282d:	cmp    DWORD PTR [esi+0x18],0x10
10032831:	jb     0x10032838
10032833:	mov    eax,DWORD PTR [esi+0x4]
10032836:	jmp    0x1003283b
10032838:	lea    eax,[esi+0x4]
1003283b:	cmp    eax,ebx
1003283d:	mov    DWORD PTR [ebp-0x14],eax
10032840:	je     0x1003288e
10032842:	push   eax
10032843:	call   DWORD PTR ds:0x100670e8
10032849:	add    eax,0x1
1003284c:	cmp    eax,0x3fffffff
10032851:	mov    DWORD PTR [ebp-0x1c],eax
10032854:	jg     0x1003288e
10032856:	add    eax,eax
10032858:	call   0x1004b9b0
1003285d:	mov    edi,esp
1003285f:	cmp    edi,ebx
10032861:	je     0x10032889
10032863:	mov    ecx,DWORD PTR [ebp-0x1c]
10032866:	mov    edx,DWORD PTR [ebp-0x14]
10032869:	mov    eax,DWORD PTR [ebp-0x18]
1003286c:	push   ecx
1003286d:	push   edi
1003286e:	push   0xffffffff
10032870:	push   edx
10032871:	push   ebx
10032872:	push   eax
10032873:	mov    WORD PTR [edi],bx
10032876:	call   DWORD PTR ds:0x1006708c
1003287c:	neg    eax
1003287e:	sbb    eax,eax
10032880:	and    eax,edi
10032882:	mov    edi,0xf
10032887:	jmp    0x10032890
10032889:	mov    edi,0xf
1003288e:	xor    eax,eax
10032890:	mov    edx,DWORD PTR [ebp-0x10]
10032893:	movzx  ecx,WORD PTR [eax]
10032896:	mov    WORD PTR [edx],cx
10032899:	add    eax,0x2
1003289c:	add    edx,0x2
1003289f:	cmp    cx,bx
100328a2:	jne    0x10032893
100328a4:	mov    esi,DWORD PTR [esi+0x14]
100328a7:	lea    ecx,[ebp-0x5c]
100328aa:	push   ecx
100328ab:	push   ebx
100328ac:	push   esi
100328ad:	mov    esi,DWORD PTR [ebp-0x10]
100328b0:	push   esi
100328b1:	call   DWORD PTR ds:0x10067374
100328b7:	test   eax,eax
100328b9:	jne    0x10032956
100328bf:	push   esi
100328c0:	call   0x10042fe2
100328c5:	mov    esi,0x10
100328ca:	add    esp,0x4
100328cd:	cmp    DWORD PTR [ebp+0x90],esi
100328d3:	jb     0x100328e1
100328d5:	mov    edx,DWORD PTR [ebp+0x7c]
100328d8:	push   edx
100328d9:	call   0x10042fe2
100328de:	add    esp,0x4
100328e1:	cmp    DWORD PTR [ebp+0x74],esi
100328e4:	mov    DWORD PTR [ebp+0x90],edi
100328ea:	mov    DWORD PTR [ebp+0x8c],ebx
100328f0:	mov    BYTE PTR [ebp+0x7c],bl
100328f3:	jb     0x10032901
100328f5:	mov    eax,DWORD PTR [ebp+0x60]
100328f8:	push   eax
100328f9:	call   0x10042fe2
100328fe:	add    esp,0x4
10032901:	cmp    DWORD PTR [ebp+0x58],esi
10032904:	mov    DWORD PTR [ebp+0x74],edi
10032907:	mov    DWORD PTR [ebp+0x70],ebx
1003290a:	mov    BYTE PTR [ebp+0x60],bl
1003290d:	jb     0x1003291b
1003290f:	mov    ecx,DWORD PTR [ebp+0x44]
10032912:	push   ecx
10032913:	call   0x10042fe2
10032918:	add    esp,0x4
1003291b:	cmp    DWORD PTR [ebp+0x3c],esi
1003291e:	mov    DWORD PTR [ebp+0x58],edi
10032921:	mov    DWORD PTR [ebp+0x54],ebx
10032924:	mov    BYTE PTR [ebp+0x44],bl
10032927:	jb     0x10032935
10032929:	mov    edx,DWORD PTR [ebp+0x28]
1003292c:	push   edx
1003292d:	call   0x10042fe2
10032932:	add    esp,0x4
10032935:	cmp    DWORD PTR [ebp+0x1c],esi
10032938:	mov    DWORD PTR [ebp+0x3c],edi
1003293b:	mov    DWORD PTR [ebp+0x38],ebx
1003293e:	mov    BYTE PTR [ebp+0x28],bl
10032941:	jb     0x1003294f
10032943:	mov    eax,DWORD PTR [ebp+0x8]
10032946:	push   eax
10032947:	call   0x10042fe2
1003294c:	add    esp,0x4
1003294f:	xor    al,al
10032951:	jmp    0x10032a57
10032956:	mov    ecx,DWORD PTR [ebp-0x50]
10032959:	mov    eax,DWORD PTR [ebp-0x48]
1003295c:	mov    dx,WORD PTR [ebp-0x44]
10032960:	mov    DWORD PTR [ebp+0x0],ecx
10032963:	push   eax
10032964:	lea    ecx,[ebp+0x4]
10032967:	push   ecx
10032968:	mov    ecx,DWORD PTR [ebp-0x4c]
1003296b:	mov    WORD PTR [ebp+0x20],dx
1003296f:	call   0x10032a80
10032974:	mov    edx,DWORD PTR [ebp-0x3c]
10032977:	mov    ecx,DWORD PTR [ebp-0x40]
1003297a:	push   edx
1003297b:	lea    eax,[ebp+0x24]
1003297e:	push   eax
1003297f:	call   0x10032a80
10032984:	mov    ecx,DWORD PTR [ebp-0x34]
10032987:	push   ecx
10032988:	mov    ecx,DWORD PTR [ebp-0x38]
1003298b:	lea    edx,[ebp+0x40]
1003298e:	push   edx
1003298f:	call   0x10032a80
10032994:	mov    eax,DWORD PTR [ebp-0x2c]
10032997:	push   eax
10032998:	lea    ecx,[ebp+0x5c]
1003299b:	push   ecx
1003299c:	mov    ecx,DWORD PTR [ebp-0x30]
1003299f:	call   0x10032a80
100329a4:	mov    edx,DWORD PTR [ebp-0x24]
100329a7:	mov    ecx,DWORD PTR [ebp-0x28]
100329aa:	push   edx
100329ab:	lea    eax,[ebp+0x78]
100329ae:	push   eax
100329af:	call   0x10032a80
100329b4:	mov    esi,DWORD PTR [ebp-0x20]
100329b7:	add    esp,0x28
100329ba:	lea    eax,[ebp+0x0]
100329bd:	call   0x10032c30
100329c2:	mov    ecx,DWORD PTR [ebp-0x10]
100329c5:	push   ecx
100329c6:	call   0x10042fe2
100329cb:	mov    esi,0x10
100329d0:	add    esp,0x4
100329d3:	cmp    DWORD PTR [ebp+0x90],esi
100329d9:	jb     0x100329e7
100329db:	mov    edx,DWORD PTR [ebp+0x7c]
100329de:	push   edx
100329df:	call   0x10042fe2
100329e4:	add    esp,0x4
100329e7:	cmp    DWORD PTR [ebp+0x74],esi
100329ea:	mov    DWORD PTR [ebp+0x90],edi
100329f0:	mov    DWORD PTR [ebp+0x8c],ebx
100329f6:	mov    BYTE PTR [ebp+0x7c],bl
100329f9:	jb     0x10032a07
100329fb:	mov    eax,DWORD PTR [ebp+0x60]
100329fe:	push   eax
100329ff:	call   0x10042fe2
10032a04:	add    esp,0x4
10032a07:	cmp    DWORD PTR [ebp+0x58],esi
10032a0a:	mov    DWORD PTR [ebp+0x74],edi
10032a0d:	mov    DWORD PTR [ebp+0x70],ebx
10032a10:	mov    BYTE PTR [ebp+0x60],bl
10032a13:	jb     0x10032a21
10032a15:	mov    ecx,DWORD PTR [ebp+0x44]
10032a18:	push   ecx
10032a19:	call   0x10042fe2
10032a1e:	add    esp,0x4
10032a21:	cmp    DWORD PTR [ebp+0x3c],esi
10032a24:	mov    DWORD PTR [ebp+0x58],edi
10032a27:	mov    DWORD PTR [ebp+0x54],ebx
10032a2a:	mov    BYTE PTR [ebp+0x44],bl
10032a2d:	jb     0x10032a3b
10032a2f:	mov    edx,DWORD PTR [ebp+0x28]
10032a32:	push   edx
10032a33:	call   0x10042fe2
10032a38:	add    esp,0x4
10032a3b:	cmp    DWORD PTR [ebp+0x1c],esi
10032a3e:	mov    DWORD PTR [ebp+0x3c],edi
10032a41:	mov    DWORD PTR [ebp+0x38],ebx
10032a44:	mov    BYTE PTR [ebp+0x28],bl
10032a47:	jb     0x10032a55
10032a49:	mov    eax,DWORD PTR [ebp+0x8]
10032a4c:	push   eax
10032a4d:	call   0x10042fe2
10032a52:	add    esp,0x4
10032a55:	mov    al,0x1
10032a57:	lea    esp,[ebp-0x6c]
10032a5a:	mov    ecx,DWORD PTR [ebp-0xc]
10032a5d:	mov    DWORD PTR fs:0x0,ecx
10032a64:	pop    ecx
10032a65:	pop    edi
10032a66:	pop    esi
10032a67:	pop    ebx
10032a68:	mov    ecx,DWORD PTR [ebp+0x94]
10032a6e:	xor    ecx,ebp
10032a70:	call   0x10043615
10032a75:	add    ebp,0x98
10032a7b:	mov    esp,ebp
10032a7d:	pop    ebp
10032a7e:	ret    
10032a7f:	int3   
10032a80:	push   ebp
10032a81:	mov    ebp,esp
10032a83:	push   0xffffffff
10032a85:	push   0x10060dca
10032a8a:	mov    eax,fs:0x0
10032a90:	push   eax
10032a91:	sub    esp,0x4c
10032a94:	mov    eax,ds:0x100801ac
10032a99:	xor    eax,ebp
10032a9b:	mov    DWORD PTR [ebp-0x10],eax
10032a9e:	push   ebx
10032a9f:	push   esi
10032aa0:	push   edi
10032aa1:	push   eax
10032aa2:	lea    eax,[ebp-0xc]
10032aa5:	mov    fs:0x0,eax
10032aab:	mov    ebx,ecx
10032aad:	xor    esi,esi
10032aaf:	mov    DWORD PTR [ebp-0x1c],esi
10032ab2:	call   DWORD PTR ds:0x10080ffc
10032ab8:	xor    edi,edi
10032aba:	mov    DWORD PTR [ebp-0x18],eax
10032abd:	mov    DWORD PTR [ebp-0x14],edi
10032ac0:	cmp    DWORD PTR [ebp+0xc],esi
10032ac3:	mov    DWORD PTR [ebp-0x4],esi
10032ac6:	je     0x10032b64
10032acc:	cmp    ebx,esi
10032ace:	je     0x10032b64
10032ad4:	push   ebx
10032ad5:	call   DWORD PTR ds:0x100670ac
10032adb:	push   esi
10032adc:	add    eax,0x1
10032adf:	cdq    
10032ae0:	push   0x2
10032ae2:	push   edx
10032ae3:	push   eax
10032ae4:	call   0x1004f990
10032ae9:	mov    edi,eax
10032aeb:	add    eax,0x80000000
10032af0:	adc    edx,esi
10032af2:	mov    DWORD PTR [ebp-0x1c],edx
10032af5:	jne    0x10032afc
10032af7:	cmp    eax,0xffffffff
10032afa:	jbe    0x10032b00
10032afc:	xor    eax,eax
10032afe:	jmp    0x10032b38
10032b00:	cmp    edi,0x400
10032b06:	jg     0x10032b20
10032b08:	push   edi
10032b09:	call   0x10007047
10032b0e:	add    esp,0x4
10032b11:	test   al,al
10032b13:	je     0x10032b20
10032b15:	mov    eax,edi
10032b17:	call   0x1004b9b0
10032b1c:	mov    eax,esp
10032b1e:	jmp    0x10032b29
10032b20:	push   edi
10032b21:	lea    esi,[ebp-0x14]
10032b24:	call   0x100078dc
10032b29:	mov    ecx,DWORD PTR [ebp-0x18]
10032b2c:	push   ecx
10032b2d:	push   edi
10032b2e:	push   ebx
10032b2f:	mov    esi,eax
10032b31:	call   0x10002425
10032b36:	xor    esi,esi
10032b38:	mov    edx,DWORD PTR [ebp+0xc]
10032b3b:	push   edx
10032b3c:	push   eax
10032b3d:	lea    ecx,[ebp-0x58]
10032b40:	mov    DWORD PTR [ebp-0x40],0xf
10032b47:	mov    DWORD PTR [ebp-0x44],esi
10032b4a:	mov    BYTE PTR [ebp-0x54],0x0
10032b4e:	call   0x1000133b
10032b53:	mov    BYTE PTR [ebp-0x4],0x1
10032b57:	mov    edi,DWORD PTR [ebp-0x14]
10032b5a:	lea    eax,[ebp-0x58]
10032b5d:	mov    ebx,0x1
10032b62:	jmp    0x10032b98
10032b64:	push   0x1006dd18
10032b69:	mov    DWORD PTR [ebp-0x24],0xf
10032b70:	mov    DWORD PTR [ebp-0x28],esi
10032b73:	mov    BYTE PTR [ebp-0x38],0x0
10032b77:	call   0x10043450
10032b7c:	add    esp,0x4
10032b7f:	push   eax
10032b80:	push   0x1006dd18
10032b85:	lea    ecx,[ebp-0x3c]
10032b88:	call   0x1000133b
10032b8d:	mov    ebx,0x2
10032b92:	lea    eax,[ebp-0x3c]
10032b95:	mov    DWORD PTR [ebp-0x4],ebx
10032b98:	mov    ecx,DWORD PTR [ebp+0x8]
10032b9b:	push   0xffffffff
10032b9d:	push   esi
10032b9e:	push   eax
10032b9f:	mov    DWORD PTR [ebp-0x1c],ebx
10032ba2:	call   0x10001241
10032ba7:	test   bl,0x2
10032baa:	je     0x10032bcf
10032bac:	and    ebx,0xfffffffd
10032baf:	cmp    DWORD PTR [ebp-0x24],0x10
10032bb3:	jb     0x10032bc1
10032bb5:	mov    eax,DWORD PTR [ebp-0x38]
10032bb8:	push   eax
10032bb9:	call   0x10042fe2
10032bbe:	add    esp,0x4
10032bc1:	mov    DWORD PTR [ebp-0x24],0xf
10032bc8:	mov    DWORD PTR [ebp-0x28],esi
10032bcb:	mov    BYTE PTR [ebp-0x38],0x0
10032bcf:	test   bl,0x1
10032bd2:	je     0x10032be6
10032bd4:	cmp    DWORD PTR [ebp-0x40],0x10
10032bd8:	jb     0x10032be6
10032bda:	mov    ecx,DWORD PTR [ebp-0x54]
10032bdd:	push   ecx
10032bde:	call   0x10042fe2
10032be3:	add    esp,0x4
10032be6:	cmp    edi,esi
10032be8:	je     0x10032c07
10032bea:	jmp    0x10032bf3
10032bec:	lea    esp,[esp+0x0]
10032bf0:	mov    edi,DWORD PTR [ebp-0x14]
10032bf3:	mov    eax,edi
10032bf5:	mov    edi,DWORD PTR [edi]
10032bf7:	push   eax
10032bf8:	mov    DWORD PTR [ebp-0x14],edi
10032bfb:	call   0x100437dc
10032c00:	add    esp,0x4
10032c03:	cmp    edi,esi
10032c05:	jne    0x10032bf0
10032c07:	lea    esp,[ebp-0x68]
10032c0a:	mov    ecx,DWORD PTR [ebp-0xc]
10032c0d:	mov    DWORD PTR fs:0x0,ecx
10032c14:	pop    ecx
10032c15:	pop    edi
10032c16:	pop    esi
10032c17:	pop    ebx
10032c18:	mov    ecx,DWORD PTR [ebp-0x10]
10032c1b:	xor    ecx,ebp
10032c1d:	call   0x10043615
10032c22:	mov    esp,ebp
10032c24:	pop    ebp
10032c25:	ret    
10032c26:	int3   
10032c27:	int3   
10032c28:	int3   
10032c29:	int3   
10032c2a:	int3   
10032c2b:	int3   
10032c2c:	int3   
10032c2d:	int3   
10032c2e:	int3   
10032c2f:	int3   
10032c30:	push   edi
10032c31:	mov    edi,eax
10032c33:	mov    eax,DWORD PTR [edi]
10032c35:	push   0xffffffff
10032c37:	push   0x0
10032c39:	lea    ecx,[edi+0x4]
10032c3c:	push   ecx
10032c3d:	lea    ecx,[esi+0x4]
10032c40:	mov    DWORD PTR [esi],eax
10032c42:	call   0x10001241
10032c47:	mov    dx,WORD PTR [edi+0x20]
10032c4b:	push   0xffffffff
10032c4d:	push   0x0
10032c4f:	lea    eax,[edi+0x24]
10032c52:	push   eax
10032c53:	lea    ecx,[esi+0x24]
10032c56:	mov    WORD PTR [esi+0x20],dx
10032c5a:	call   0x10001241
10032c5f:	push   0xffffffff
10032c61:	push   0x0
10032c63:	lea    ecx,[edi+0x40]
10032c66:	push   ecx
10032c67:	lea    ecx,[esi+0x40]
10032c6a:	call   0x10001241
10032c6f:	push   0xffffffff
10032c71:	push   0x0
10032c73:	lea    edx,[edi+0x5c]
10032c76:	push   edx
10032c77:	lea    ecx,[esi+0x5c]
10032c7a:	call   0x10001241
10032c7f:	push   0xffffffff
10032c81:	push   0x0
10032c83:	add    edi,0x78
10032c86:	push   edi
10032c87:	lea    ecx,[esi+0x78]
10032c8a:	call   0x10001241
10032c8f:	mov    eax,esi
10032c91:	pop    edi
10032c92:	ret    
10032c93:	int3   
10032c94:	int3   
10032c95:	int3   
10032c96:	int3   
10032c97:	int3   
10032c98:	int3   
10032c99:	int3   
10032c9a:	int3   
10032c9b:	int3   
10032c9c:	int3   
10032c9d:	int3   
10032c9e:	int3   
10032c9f:	int3   
10032ca0:	push   0xffffffff
10032ca2:	push   0x10061e39
10032ca7:	mov    eax,fs:0x0
10032cad:	push   eax
10032cae:	sub    esp,0x4c
10032cb1:	push   ebx
10032cb2:	push   esi
10032cb3:	push   edi
10032cb4:	mov    eax,ds:0x100801ac
10032cb9:	xor    eax,esp
10032cbb:	push   eax
10032cbc:	lea    eax,[esp+0x5c]
10032cc0:	mov    fs:0x0,eax
10032cc6:	mov    edi,DWORD PTR [esp+0x6c]
10032cca:	xor    ebx,ebx
10032ccc:	mov    DWORD PTR [esp+0x64],ebx
10032cd0:	mov    DWORD PTR [esp+0x10],ebx
10032cd4:	mov    eax,ds:0x10082a6c
10032cd9:	mov    edx,DWORD PTR [eax+0xc]
10032cdc:	mov    ecx,0x10082a6c
10032ce1:	call   edx
10032ce3:	add    eax,0x10
10032ce6:	mov    DWORD PTR [edi],eax
10032ce8:	mov    DWORD PTR [esp+0x64],ebx
10032cec:	mov    ecx,0x1
10032cf1:	sub    ecx,DWORD PTR [eax-0x4]
10032cf4:	mov    eax,DWORD PTR [eax-0x8]
10032cf7:	sub    eax,0x800
10032cfc:	or     eax,ecx
10032cfe:	mov    DWORD PTR [esp+0x10],0x1
10032d06:	jge    0x10032d14
10032d08:	mov    eax,0x800
10032d0d:	mov    ecx,edi
10032d0f:	call   0x10002253
10032d14:	mov    eax,DWORD PTR [edi]
10032d16:	push   0x800
10032d1b:	push   eax
10032d1c:	call   DWORD PTR ds:0x10067268
10032d22:	test   eax,eax
10032d24:	jne    0x10032db1
10032d2a:	push   0x100747d8
10032d2f:	push   0x1c
10032d31:	mov    ecx,0x10074800
10032d36:	call   0x100042b4
10032d3b:	mov    esi,eax
10032d3d:	mov    edi,0xf
10032d42:	push   esi
10032d43:	mov    DWORD PTR [esp+0x38],edi
10032d47:	mov    DWORD PTR [esp+0x34],ebx
10032d4b:	mov    BYTE PTR [esp+0x24],bl
10032d4f:	call   0x10043450
10032d54:	add    esp,0xc
10032d57:	push   eax
10032d58:	push   esi
10032d59:	lea    ecx,[esp+0x1c]
10032d5d:	call   0x1000133b
10032d62:	lea    ecx,[esp+0x30]
10032d66:	mov    DWORD PTR [esp+0x64],0x1
10032d6e:	call   0x100432c1
10032d73:	push   0xffffffff
10032d75:	mov    BYTE PTR [esp+0x68],0x2
10032d7a:	push   ebx
10032d7b:	lea    eax,[esp+0x1c]
10032d7f:	push   eax
10032d80:	lea    ecx,[esp+0x48]
10032d84:	mov    DWORD PTR [esp+0x3c],0x10074a3c
10032d8c:	mov    DWORD PTR [esp+0x60],edi
10032d90:	mov    DWORD PTR [esp+0x5c],ebx
10032d94:	mov    BYTE PTR [esp+0x4c],bl
10032d98:	call   0x10001241
10032d9d:	push   0x10076508
10032da2:	lea    ecx,[esp+0x34]
10032da6:	push   ecx
10032da7:	mov    BYTE PTR [esp+0x6c],0x1
10032dac:	call   0x10047942
10032db1:	mov    eax,DWORD PTR [edi]
10032db3:	cmp    eax,ebx
10032db5:	jne    0x10032dbb
10032db7:	xor    eax,eax
10032db9:	jmp    0x10032dc8
10032dbb:	push   eax
10032dbc:	call   0x100437c6
10032dc1:	add    esp,0x4
10032dc4:	cmp    eax,ebx
10032dc6:	jl     0x10032e0c
10032dc8:	mov    ecx,DWORD PTR [edi]
10032dca:	cmp    eax,DWORD PTR [ecx-0x8]
10032dcd:	jg     0x10032e0c
10032dcf:	mov    DWORD PTR [ecx-0xc],eax
10032dd2:	mov    edx,DWORD PTR [edi]
10032dd4:	mov    WORD PTR [edx+eax*2],bx
10032dd8:	mov    ecx,DWORD PTR [edi]
10032dda:	mov    edx,DWORD PTR [ecx-0xc]
10032ddd:	lea    eax,[edx-0x1]
10032de0:	cmp    eax,ebx
10032de2:	jl     0x10032e0c
10032de4:	cmp    eax,edx
10032de6:	jg     0x10032e0c
10032de8:	movzx  eax,WORD PTR [ecx+eax*2]
10032dec:	cmp    ax,0x5c
10032df0:	je     0x10032df7
10032df2:	call   0x10034470
10032df7:	mov    eax,edi
10032df9:	mov    ecx,DWORD PTR [esp+0x5c]
10032dfd:	mov    DWORD PTR fs:0x0,ecx
10032e04:	pop    ecx
10032e05:	pop    edi
10032e06:	pop    esi
10032e07:	pop    ebx
10032e08:	add    esp,0x58
10032e0b:	ret    
10032e0c:	push   0x80070057
10032e11:	call   0x10001f2d
10032e16:	int3   
10032e17:	int3   
10032e18:	int3   
10032e19:	int3   
10032e1a:	int3   
10032e1b:	int3   
10032e1c:	int3   
10032e1d:	int3   
10032e1e:	int3   
10032e1f:	int3   
10032e20:	push   0xffffffff
10032e22:	push   0x10062ce9
10032e27:	mov    eax,fs:0x0
10032e2d:	push   eax
10032e2e:	sub    esp,0x50
10032e31:	push   ebx
10032e32:	push   ebp
10032e33:	push   esi
10032e34:	push   edi
10032e35:	mov    eax,ds:0x100801ac
10032e3a:	xor    eax,esp
10032e3c:	push   eax
10032e3d:	lea    eax,[esp+0x64]
10032e41:	mov    fs:0x0,eax
10032e47:	mov    esi,DWORD PTR [esp+0x74]
10032e4b:	xor    ebx,ebx
10032e4d:	mov    DWORD PTR [esp+0x6c],ebx
10032e51:	push   esi
10032e52:	mov    DWORD PTR [esp+0x1c],ebx
10032e56:	call   0x10032ca0
10032e5b:	add    esp,0x4
10032e5e:	mov    DWORD PTR [esp+0x6c],ebx
10032e62:	mov    eax,DWORD PTR [esi]
10032e64:	mov    ebp,0x1
10032e69:	sub    eax,0x10
10032e6c:	cmp    DWORD PTR [eax+0xc],ebp
10032e6f:	mov    DWORD PTR [esp+0x18],ebp
10032e73:	jle    0x10032e7f
10032e75:	mov    eax,DWORD PTR [eax+0x4]
10032e78:	push   eax
10032e79:	push   esi
10032e7a:	call   0x1000229c
10032e7f:	mov    eax,DWORD PTR [esi]
10032e81:	push   0x5c
10032e83:	push   eax
10032e84:	call   0x10058796
10032e89:	mov    edi,eax
10032e8b:	add    esp,0x8
10032e8e:	cmp    edi,ebx
10032e90:	jne    0x10032f19
10032e96:	push   0x10074820
10032e9b:	push   0x18
10032e9d:	mov    ecx,0x10074848
10032ea2:	call   0x100042b4
10032ea7:	mov    esi,eax
10032ea9:	mov    edi,0xf
10032eae:	push   esi
10032eaf:	mov    DWORD PTR [esp+0x40],edi
10032eb3:	mov    DWORD PTR [esp+0x3c],ebx
10032eb7:	mov    BYTE PTR [esp+0x2c],bl
10032ebb:	call   0x10043450
10032ec0:	add    esp,0xc
10032ec3:	push   eax
10032ec4:	push   esi
10032ec5:	lea    ecx,[esp+0x24]
10032ec9:	call   0x1000133b
10032ece:	lea    ecx,[esp+0x38]
10032ed2:	mov    DWORD PTR [esp+0x6c],ebp
10032ed6:	call   0x100432c1
10032edb:	push   0xffffffff
10032edd:	mov    BYTE PTR [esp+0x70],0x2
10032ee2:	push   ebx
10032ee3:	lea    ecx,[esp+0x24]
10032ee7:	push   ecx
10032ee8:	lea    ecx,[esp+0x50]
10032eec:	mov    DWORD PTR [esp+0x44],0x10074a3c
10032ef4:	mov    DWORD PTR [esp+0x68],edi
10032ef8:	mov    DWORD PTR [esp+0x64],ebx
10032efc:	mov    BYTE PTR [esp+0x54],bl
10032f00:	call   0x10001241
10032f05:	push   0x10076508
10032f0a:	lea    edx,[esp+0x3c]
10032f0e:	push   edx
10032f0f:	mov    BYTE PTR [esp+0x74],0x1
10032f14:	call   0x10047942
10032f19:	mov    eax,DWORD PTR [esi]
10032f1b:	sub    eax,0x10
10032f1e:	cmp    DWORD PTR [eax+0xc],ebp
10032f21:	jle    0x10032f2d
10032f23:	mov    eax,DWORD PTR [eax+0x4]
10032f26:	push   eax
10032f27:	push   esi
10032f28:	call   0x1000229c
10032f2d:	mov    eax,DWORD PTR [esi]
10032f2f:	sub    edi,eax
10032f31:	sar    edi,1
10032f33:	add    edi,ebp
10032f35:	cmp    eax,ebx
10032f37:	jne    0x10032f3d
10032f39:	xor    eax,eax
10032f3b:	jmp    0x10032f4a
10032f3d:	push   eax
10032f3e:	call   0x100437c6
10032f43:	add    esp,0x4
10032f46:	cmp    eax,ebx
10032f48:	jl     0x10032fa0
10032f4a:	mov    ecx,DWORD PTR [esi]
10032f4c:	cmp    eax,DWORD PTR [ecx-0x8]
10032f4f:	jg     0x10032fa0
10032f51:	mov    DWORD PTR [ecx-0xc],eax
10032f54:	mov    ecx,DWORD PTR [esi]
10032f56:	mov    WORD PTR [ecx+eax*2],bx
10032f5a:	mov    eax,DWORD PTR [esi]
10032f5c:	sub    eax,0x10
10032f5f:	mov    ecx,ebp
10032f61:	sub    ecx,DWORD PTR [eax+0xc]
10032f64:	mov    eax,DWORD PTR [eax+0x8]
10032f67:	sub    eax,edi
10032f69:	or     eax,ecx
10032f6b:	jge    0x10032f76
10032f6d:	mov    eax,edi
10032f6f:	mov    ecx,esi
10032f71:	call   0x10002253
10032f76:	cmp    edi,ebx
10032f78:	jl     0x10032fa0
10032f7a:	mov    eax,DWORD PTR [esi]
10032f7c:	cmp    edi,DWORD PTR [eax-0x8]
10032f7f:	jg     0x10032fa0
10032f81:	mov    DWORD PTR [eax-0xc],edi
10032f84:	mov    edx,DWORD PTR [esi]
10032f86:	mov    WORD PTR [edx+edi*2],bx
10032f8a:	mov    eax,esi
10032f8c:	mov    ecx,DWORD PTR [esp+0x64]
10032f90:	mov    DWORD PTR fs:0x0,ecx
10032f97:	pop    ecx
10032f98:	pop    edi
10032f99:	pop    esi
10032f9a:	pop    ebp
10032f9b:	pop    ebx
10032f9c:	add    esp,0x5c
10032f9f:	ret    
10032fa0:	push   0x80070057
10032fa5:	call   0x10001f2d
10032faa:	int3   
10032fab:	int3   
10032fac:	int3   
10032fad:	int3   
10032fae:	int3   
10032faf:	int3   
10032fb0:	push   ebp
10032fb1:	mov    ebp,esp
10032fb3:	push   0xffffffff
10032fb5:	push   0x1006384a
10032fba:	mov    eax,fs:0x0
10032fc0:	push   eax
10032fc1:	sub    esp,0x134
10032fc7:	mov    eax,ds:0x100801ac
10032fcc:	xor    eax,ebp
10032fce:	mov    DWORD PTR [ebp-0x10],eax
10032fd1:	push   ebx
10032fd2:	push   esi
10032fd3:	push   edi
10032fd4:	push   eax
10032fd5:	lea    eax,[ebp-0xc]
10032fd8:	mov    fs:0x0,eax
10032fde:	call   DWORD PTR ds:0x10080ffc
10032fe4:	mov    DWORD PTR [ebp-0x84],eax
10032fea:	lea    eax,[ebp-0x7c]
10032fed:	push   eax
10032fee:	call   0x10032e20
10032ff3:	add    esp,0x4
10032ff6:	xor    ebx,ebx
10032ff8:	push   ebx
10032ff9:	push   ebx
10032ffa:	lea    ecx,[ebp-0x8c]
10033000:	push   ecx
10033001:	lea    edx,[ebp-0x88]
10033007:	push   edx
10033008:	lea    eax,[ebp-0x80]
1003300b:	push   eax
1003300c:	push   ebx
1003300d:	mov    DWORD PTR [ebp-0x4],ebx
10033010:	mov    ecx,DWORD PTR [ebp-0x7c]
10033013:	push   ebx
10033014:	push   ecx
10033015:	call   DWORD PTR ds:0x10067264
1003301b:	test   eax,eax
1003301d:	jne    0x10033184
10033023:	call   DWORD PTR ds:0x100670cc
10033029:	push   0xa
1003302b:	lea    edx,[ebp-0x78]
1003302e:	push   edx
1003302f:	push   eax
10033030:	call   0x10045cde
10033035:	mov    eax,DWORD PTR [ebp-0x7c]
10033038:	add    esp,0xc
1003303b:	cmp    eax,ebx
1003303d:	mov    esi,eax
1003303f:	jne    0x10033045
10033041:	xor    edi,edi
10033043:	jmp    0x10033078
10033045:	push   eax
10033046:	call   DWORD PTR ds:0x100670ac
1003304c:	add    eax,0x1
1003304f:	cmp    eax,0x3fffffff
10033054:	jle    0x1003305a
10033056:	xor    edi,edi
10033058:	jmp    0x10033078
1003305a:	lea    edi,[eax+eax*1]
1003305d:	mov    eax,edi
1003305f:	call   0x1004b9b0
10033064:	mov    ecx,DWORD PTR [ebp-0x84]
1003306a:	mov    eax,esp
1003306c:	push   ecx
1003306d:	push   edi
1003306e:	push   esi
1003306f:	mov    esi,eax
10033071:	call   0x10002425
10033076:	mov    edi,eax
10033078:	push   0x1007489c
1003307d:	push   0x21
1003307f:	mov    ecx,0x100748c0
10033084:	call   0x100042b4
10033089:	mov    esi,eax
1003308b:	push   esi
1003308c:	mov    DWORD PTR [ebp-0x90],0xf
10033096:	mov    DWORD PTR [ebp-0x94],ebx
1003309c:	mov    BYTE PTR [ebp-0xa4],bl
100330a2:	call   0x10043450
100330a7:	add    esp,0xc
100330aa:	push   eax
100330ab:	push   esi
100330ac:	lea    ecx,[ebp-0xa8]
100330b2:	call   0x1000133b
100330b7:	push   edi
100330b8:	lea    edx,[ebp-0xa8]
100330be:	push   edx
100330bf:	lea    eax,[ebp-0x140]
100330c5:	push   eax
100330c6:	mov    BYTE PTR [ebp-0x4],0x1
100330ca:	call   0x10006727
100330cf:	add    esp,0xc
100330d2:	mov    esi,eax
100330d4:	push   0x10074868
100330d9:	push   0x7
100330db:	mov    ecx,0x10074894
100330e0:	mov    BYTE PTR [ebp-0x4],0x2
100330e4:	call   0x100042b4
100330e9:	push   eax
100330ea:	lea    ecx,[ebp-0x124]
100330f0:	push   esi
100330f1:	push   ecx
100330f2:	call   0x10006727
100330f7:	add    esp,0x14
100330fa:	lea    edx,[ebp-0x78]
100330fd:	push   edx
100330fe:	push   eax
100330ff:	lea    eax,[ebp-0x108]
10033105:	push   eax
10033106:	mov    BYTE PTR [ebp-0x4],0x3
1003310a:	call   0x10006727
1003310f:	add    esp,0xc
10033112:	push   0x10074864
10033117:	push   eax
10033118:	lea    ecx,[ebp-0xec]
1003311e:	push   ecx
1003311f:	mov    BYTE PTR [ebp-0x4],0x4
10033123:	call   0x10006727
10033128:	add    esp,0xc
1003312b:	mov    esi,eax
1003312d:	lea    ecx,[ebp-0xd0]
10033133:	mov    BYTE PTR [ebp-0x4],0x5
10033137:	call   0x100432c1
1003313c:	push   0xffffffff
1003313e:	mov    BYTE PTR [ebp-0x4],0x6
10033142:	push   ebx
10033143:	push   esi
10033144:	lea    ecx,[ebp-0xc4]
1003314a:	mov    DWORD PTR [ebp-0xd0],0x10074a3c
10033154:	mov    DWORD PTR [ebp-0xac],0xf
1003315e:	mov    DWORD PTR [ebp-0xb0],ebx
10033164:	mov    BYTE PTR [ebp-0xc0],bl
1003316a:	call   0x10001241
1003316f:	push   0x10076508
10033174:	lea    edx,[ebp-0xd0]
1003317a:	push   edx
1003317b:	mov    BYTE PTR [ebp-0x4],0x5
1003317f:	call   0x10047942
10033184:	mov    esi,DWORD PTR [ebp-0x80]
10033187:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003318e:	mov    eax,DWORD PTR [ebp-0x7c]
10033191:	add    eax,0xfffffff0
10033194:	lea    ecx,[eax+0xc]
10033197:	or     edx,0xffffffff
1003319a:	lock xadd DWORD PTR [ecx],edx
1003319e:	dec    edx
1003319f:	test   edx,edx
100331a1:	jg     0x100331ad
100331a3:	mov    ecx,DWORD PTR [eax]
100331a5:	mov    edx,DWORD PTR [ecx]
100331a7:	push   eax
100331a8:	mov    eax,DWORD PTR [edx+0x4]
100331ab:	call   eax
100331ad:	mov    eax,esi
100331af:	lea    esp,[ebp-0x150]
100331b5:	mov    ecx,DWORD PTR [ebp-0xc]
100331b8:	mov    DWORD PTR fs:0x0,ecx
100331bf:	pop    ecx
100331c0:	pop    edi
100331c1:	pop    esi
100331c2:	pop    ebx
100331c3:	mov    ecx,DWORD PTR [ebp-0x10]
100331c6:	xor    ecx,ebp
100331c8:	call   0x10043615
100331cd:	mov    esp,ebp
100331cf:	pop    ebp
100331d0:	ret    
100331d1:	int3   
100331d2:	int3   
100331d3:	int3   
100331d4:	int3   
100331d5:	int3   
100331d6:	int3   
100331d7:	int3   
100331d8:	int3   
100331d9:	int3   
100331da:	int3   
100331db:	int3   
100331dc:	int3   
100331dd:	int3   
100331de:	int3   
100331df:	int3   
100331e0:	push   ebp
100331e1:	mov    ebp,esp
100331e3:	sub    esp,0x50
100331e6:	mov    eax,ds:0x100801ac
100331eb:	xor    eax,ebp
100331ed:	mov    DWORD PTR [ebp-0x4],eax
100331f0:	push   ebx
100331f1:	push   esi
100331f2:	mov    DWORD PTR [ebp-0x4c],0x0
100331f9:	call   0x10032fb0
100331fe:	lea    ebx,[ebp-0x48]
10033201:	mov    edx,eax
10033203:	call   0x1002f0f0
10033208:	call   DWORD PTR ds:0x10080ffc
1003320e:	mov    DWORD PTR [ebp-0x4c],eax
10033211:	mov    eax,ebx
10033213:	push   eax
10033214:	call   DWORD PTR ds:0x100670ac
1003321a:	add    eax,0x1
1003321d:	cmp    eax,0x3fffffff
10033222:	jg     0x10033259
10033224:	lea    esi,[eax+eax*1]
10033227:	mov    eax,esi
10033229:	call   0x1004b9b0
1003322e:	mov    ebx,esp
10033230:	test   ebx,ebx
10033232:	je     0x10033259
10033234:	mov    edx,DWORD PTR [ebp-0x4c]
10033237:	push   0x0
10033239:	push   0x0
1003323b:	push   esi
1003323c:	push   ebx
1003323d:	push   0xffffffff
1003323f:	lea    ecx,[ebp-0x48]
10033242:	push   ecx
10033243:	push   0x0
10033245:	push   edx
10033246:	mov    BYTE PTR [ebx],0x0
10033249:	call   DWORD PTR ds:0x100670c4
1003324f:	mov    esi,eax
10033251:	neg    esi
10033253:	sbb    esi,esi
10033255:	and    esi,ebx
10033257:	jmp    0x1003325b
10033259:	xor    esi,esi
1003325b:	xor    eax,eax
1003325d:	mov    DWORD PTR [edi+0x18],0xf
10033264:	mov    DWORD PTR [edi+0x14],eax
10033267:	push   esi
10033268:	mov    BYTE PTR [edi+0x4],al
1003326b:	call   0x10043450
10033270:	add    esp,0x4
10033273:	push   eax
10033274:	push   esi
10033275:	mov    ecx,edi
10033277:	call   0x1000133b
1003327c:	mov    eax,edi
1003327e:	lea    esp,[ebp-0x58]
10033281:	pop    esi
10033282:	pop    ebx
10033283:	mov    ecx,DWORD PTR [ebp-0x4]
10033286:	xor    ecx,ebp
10033288:	call   0x10043615
1003328d:	mov    esp,ebp
1003328f:	pop    ebp
10033290:	ret    
10033291:	int3   
10033292:	int3   
10033293:	int3   
10033294:	int3   
10033295:	int3   
10033296:	int3   
10033297:	int3   
10033298:	int3   
10033299:	int3   
1003329a:	int3   
1003329b:	int3   
1003329c:	int3   
1003329d:	int3   
1003329e:	int3   
1003329f:	int3   
100332a0:	push   esi
100332a1:	push   edi
100332a2:	push   ebx
100332a3:	call   DWORD PTR ds:0x10067084
100332a9:	mov    esi,eax
100332ab:	test   esi,esi
100332ad:	jne    0x100332b1
100332af:	pop    esi
100332b0:	ret    
100332b1:	push   edi
100332b2:	push   ebx
100332b3:	call   DWORD PTR ds:0x10067094
100332b9:	mov    ecx,DWORD PTR [esp+0x8]
100332bd:	push   esi
100332be:	mov    DWORD PTR [ecx],eax
100332c0:	call   DWORD PTR ds:0x10067098
100332c6:	pop    esi
100332c7:	ret    
100332c8:	int3   
100332c9:	int3   
100332ca:	int3   
100332cb:	int3   
100332cc:	int3   
100332cd:	int3   
100332ce:	int3   
100332cf:	int3   
100332d0:	cmp    BYTE PTR ds:0x10083050,0x0
100332d7:	jne    0x10033336
100332d9:	xor    eax,eax
100332db:	mov    cl,0x61
100332dd:	lea    ecx,[ecx+0x0]
100332e0:	mov    BYTE PTR [eax+0x10083458],cl
100332e6:	add    cl,0x1
100332e9:	add    eax,0x1
100332ec:	cmp    cl,0x7a
100332ef:	jle    0x100332e0
100332f1:	mov    cl,0x41
100332f3:	mov    BYTE PTR [eax+0x10083458],cl
100332f9:	add    cl,0x1
100332fc:	add    eax,0x1
100332ff:	cmp    cl,0x5a
10033302:	jle    0x100332f3
10033304:	mov    cl,0x30
10033306:	jmp    0x10033310
10033308:	lea    esp,[esp+0x0]
1003330f:	nop
10033310:	mov    BYTE PTR [eax+0x10083458],cl
10033316:	add    cl,0x1
10033319:	add    eax,0x1
1003331c:	cmp    cl,0x39
1003331f:	jle    0x10033310
10033321:	mov    BYTE PTR [eax+0x10083458],0x5f
10033328:	mov    BYTE PTR [eax+0x10083459],0x2d
1003332f:	mov    BYTE PTR ds:0x10083050,0x1
10033336:	mov    eax,0x10083458
1003333b:	ret    
1003333c:	int3   
1003333d:	int3   
1003333e:	int3   
1003333f:	int3   
10033340:	cmp    BYTE PTR ds:0x10083051,0x0
10033347:	jne    0x100333b8
10033349:	push   edi
1003334a:	or     eax,0xffffffff
1003334d:	mov    ecx,0x100
10033352:	mov    edi,0x10083058
10033357:	rep stos DWORD PTR es:[edi],eax
10033359:	xor    eax,eax
1003335b:	mov    ecx,0x100831dc
10033360:	lea    edx,[eax+0x1a]
10033363:	pop    edi
10033364:	mov    DWORD PTR [ecx],eax
10033366:	add    eax,0x1
10033369:	add    ecx,0x4
1003336c:	sub    edx,0x1
1003336f:	jne    0x10033364
10033371:	mov    ecx,0x1008315c
10033376:	mov    edx,0x1a
1003337b:	jmp    0x10033380
1003337d:	lea    ecx,[ecx+0x0]
10033380:	mov    DWORD PTR [ecx],eax
10033382:	add    eax,0x1
10033385:	add    ecx,0x4
10033388:	sub    edx,0x1
1003338b:	jne    0x10033380
1003338d:	mov    ecx,0x10083118
10033392:	mov    edx,0xa
10033397:	mov    DWORD PTR [ecx],eax
10033399:	add    eax,0x1
1003339c:	add    ecx,0x4
1003339f:	sub    edx,0x1
100333a2:	jne    0x10033397
100333a4:	mov    ds:0x100831d4,eax
100333a9:	add    eax,0x1
100333ac:	mov    ds:0x1008310c,eax
100333b1:	mov    BYTE PTR ds:0x10083051,0x1
100333b8:	mov    eax,0x10083058
100333bd:	ret    
100333be:	int3   
100333bf:	int3   
100333c0:	push   0xffffffff
100333c2:	push   0x10061de9
100333c7:	mov    eax,fs:0x0
100333cd:	push   eax
100333ce:	sub    esp,0x1c
100333d1:	push   ebx
100333d2:	push   ebp
100333d3:	push   edi
100333d4:	mov    eax,ds:0x100801ac
100333d9:	xor    eax,esp
100333db:	push   eax
100333dc:	lea    eax,[esp+0x2c]
100333e0:	mov    fs:0x0,eax
100333e6:	xor    edi,edi
100333e8:	mov    DWORD PTR [esp+0x24],edi
100333ec:	mov    DWORD PTR [esi+0x18],0xf
100333f3:	mov    DWORD PTR [esi+0x14],edi
100333f6:	mov    DWORD PTR [esp+0x28],esi
100333fa:	mov    DWORD PTR [esp+0x20],edx
100333fe:	mov    BYTE PTR [esi+0x4],0x0
10033402:	mov    DWORD PTR [esp+0x34],edi
10033406:	mov    DWORD PTR [esp+0x24],0x1
1003340e:	call   0x100332d0
10033413:	mov    edx,DWORD PTR [edx+0x14]
10033416:	cmp    dx,di
10033419:	mov    DWORD PTR [esp+0x14],eax
1003341d:	mov    DWORD PTR [esp+0x1c],edx
10033421:	mov    DWORD PTR [esp+0x18],edi
10033425:	je     0x10033582
1003342b:	mov    DWORD PTR [esp+0x10],edi
1003342f:	mov    ebx,DWORD PTR [esp+0x10]
10033433:	mov    edi,DWORD PTR [esp+0x20]
10033437:	cmp    ebx,DWORD PTR [edi+0x14]
1003343a:	jbe    0x10033441
1003343c:	call   0x10043605
10033441:	cmp    DWORD PTR [edi+0x18],0x10
10033445:	lea    eax,[edi+0x4]
10033448:	jb     0x1003344c
1003344a:	mov    eax,DWORD PTR [eax]
1003344c:	mov    al,BYTE PTR [ebx+eax*1]
1003344f:	xor    al,BYTE PTR [esp+0x18]
10033453:	mov    ecx,DWORD PTR [esp+0x14]
10033457:	movzx  ebp,al
1003345a:	or     edx,0xffffffff
1003345d:	sub    edx,DWORD PTR [esi+0x14]
10033460:	mov    eax,ebp
10033462:	and    eax,0x3f
10033465:	cmp    edx,0x1
10033468:	mov    bl,BYTE PTR [eax+ecx*1]
1003346b:	ja     0x10033472
1003346d:	call   0x100574b0
10033472:	mov    edi,DWORD PTR [esi+0x14]
10033475:	add    edi,0x1
10033478:	cmp    edi,0xfffffffe
1003347b:	jbe    0x10033482
1003347d:	call   0x100574b0
10033482:	mov    eax,DWORD PTR [esi+0x18]
10033485:	cmp    eax,edi
10033487:	jae    0x100334a9
10033489:	mov    eax,DWORD PTR [esi+0x14]
1003348c:	push   eax
1003348d:	push   edi
1003348e:	mov    ecx,esi
10033490:	call   0x10001500
10033495:	test   edi,edi
10033497:	jbe    0x100334dd
10033499:	cmp    DWORD PTR [esi+0x18],0x10
1003349d:	mov    ecx,DWORD PTR [esi+0x14]
100334a0:	lea    edx,[esi+0x4]
100334a3:	jb     0x100334c5
100334a5:	mov    eax,DWORD PTR [edx]
100334a7:	jmp    0x100334c7
100334a9:	test   edi,edi
100334ab:	jne    0x10033497
100334ad:	cmp    eax,0x10
100334b0:	mov    DWORD PTR [esi+0x14],edi
100334b3:	jb     0x100334bd
100334b5:	mov    eax,DWORD PTR [esi+0x4]
100334b8:	mov    BYTE PTR [eax],0x0
100334bb:	jmp    0x100334dd
100334bd:	lea    eax,[esi+0x4]
100334c0:	mov    BYTE PTR [eax],0x0
100334c3:	jmp    0x100334dd
100334c5:	mov    eax,edx
100334c7:	mov    BYTE PTR [eax+ecx*1],bl
100334ca:	cmp    DWORD PTR [esi+0x18],0x10
100334ce:	mov    DWORD PTR [esi+0x14],edi
100334d1:	jb     0x100334d7
100334d3:	mov    eax,DWORD PTR [edx]
100334d5:	jmp    0x100334d9
100334d7:	mov    eax,edx
100334d9:	mov    BYTE PTR [eax+edi*1],0x0
100334dd:	mov    ecx,DWORD PTR [esp+0x14]
100334e1:	or     edx,0xffffffff
100334e4:	sub    edx,DWORD PTR [esi+0x14]
100334e7:	shr    ebp,0x6
100334ea:	cmp    edx,0x1
100334ed:	mov    bl,BYTE PTR [ecx+ebp*1]
100334f0:	ja     0x100334f7
100334f2:	call   0x100574b0
100334f7:	mov    edi,DWORD PTR [esi+0x14]
100334fa:	add    edi,0x1
100334fd:	cmp    edi,0xfffffffe
10033500:	jbe    0x10033507
10033502:	call   0x100574b0
10033507:	mov    eax,DWORD PTR [esi+0x18]
1003350a:	cmp    eax,edi
1003350c:	jae    0x10033533
1003350e:	mov    eax,DWORD PTR [esi+0x14]
10033511:	push   eax
10033512:	push   edi
10033513:	mov    ecx,esi
10033515:	call   0x10001500
1003351a:	test   edi,edi
1003351c:	jbe    0x10033567
1003351e:	mov    ecx,DWORD PTR [esi+0x14]
10033521:	mov    edx,0x10
10033526:	cmp    DWORD PTR [esi+0x18],edx
10033529:	lea    ebp,[esi+0x4]
1003352c:	jb     0x1003354f
1003352e:	mov    eax,DWORD PTR [ebp+0x0]
10033531:	jmp    0x10033551
10033533:	test   edi,edi
10033535:	jne    0x1003351c
10033537:	cmp    eax,0x10
1003353a:	mov    DWORD PTR [esi+0x14],edi
1003353d:	jb     0x10033547
1003353f:	mov    eax,DWORD PTR [esi+0x4]
10033542:	mov    BYTE PTR [eax],0x0
10033545:	jmp    0x10033567
10033547:	lea    eax,[esi+0x4]
1003354a:	mov    BYTE PTR [eax],0x0
1003354d:	jmp    0x10033567
1003354f:	mov    eax,ebp
10033551:	mov    BYTE PTR [eax+ecx*1],bl
10033554:	cmp    DWORD PTR [esi+0x18],edx
10033557:	mov    DWORD PTR [esi+0x14],edi
1003355a:	jb     0x10033561
1003355c:	mov    eax,DWORD PTR [ebp+0x0]
1003355f:	jmp    0x10033563
10033561:	mov    eax,ebp
10033563:	mov    BYTE PTR [eax+edi*1],0x0
10033567:	mov    eax,DWORD PTR [esp+0x18]
1003356b:	add    DWORD PTR [esp+0x10],0x1
10033570:	add    eax,0x1
10033573:	cmp    ax,WORD PTR [esp+0x1c]
10033578:	mov    DWORD PTR [esp+0x18],eax
1003357c:	jne    0x1003342f
10033582:	movzx  ebp,WORD PTR [esp+0x1c]
10033587:	mov    edx,DWORD PTR [esp+0x14]
1003358b:	or     eax,0xffffffff
1003358e:	sub    eax,DWORD PTR [esi+0x14]
10033591:	mov    ecx,ebp
10033593:	and    ecx,0xf
10033596:	cmp    eax,0x1
10033599:	mov    bl,BYTE PTR [ecx+edx*1]
1003359c:	mov    DWORD PTR [esp+0x10],ebp
100335a0:	ja     0x100335a7
100335a2:	call   0x100574b0
100335a7:	mov    edi,DWORD PTR [esi+0x14]
100335aa:	add    edi,0x1
100335ad:	cmp    edi,0xfffffffe
100335b0:	jbe    0x100335b7
100335b2:	call   0x100574b0
100335b7:	mov    eax,DWORD PTR [esi+0x18]
100335ba:	cmp    eax,edi
100335bc:	jae    0x100335e2
100335be:	mov    ecx,DWORD PTR [esi+0x14]
100335c1:	push   ecx
100335c2:	push   edi
100335c3:	mov    ecx,esi
100335c5:	call   0x10001500
100335ca:	test   edi,edi
100335cc:	jbe    0x10033615
100335ce:	mov    ebp,DWORD PTR [esi+0x14]
100335d1:	mov    edx,0x10
100335d6:	cmp    DWORD PTR [esi+0x18],edx
100335d9:	lea    eax,[esi+0x4]
100335dc:	jb     0x100335fe
100335de:	mov    ecx,DWORD PTR [eax]
100335e0:	jmp    0x10033600
100335e2:	test   edi,edi
100335e4:	jne    0x100335cc
100335e6:	cmp    eax,0x10
100335e9:	mov    DWORD PTR [esi+0x14],edi
100335ec:	jb     0x100335f6
100335ee:	mov    eax,DWORD PTR [esi+0x4]
100335f1:	mov    BYTE PTR [eax],0x0
100335f4:	jmp    0x10033615
100335f6:	lea    eax,[esi+0x4]
100335f9:	mov    BYTE PTR [eax],0x0
100335fc:	jmp    0x10033615
100335fe:	mov    ecx,eax
10033600:	mov    BYTE PTR [ecx+ebp*1],bl
10033603:	cmp    DWORD PTR [esi+0x18],edx
10033606:	mov    DWORD PTR [esi+0x14],edi
10033609:	jb     0x1003360d
1003360b:	mov    eax,DWORD PTR [eax]
1003360d:	mov    ebp,DWORD PTR [esp+0x10]
10033611:	mov    BYTE PTR [eax+edi*1],0x0
10033615:	mov    eax,DWORD PTR [esp+0x14]
10033619:	or     ecx,0xffffffff
1003361c:	sub    ecx,DWORD PTR [esi+0x14]
1003361f:	mov    edx,ebp
10033621:	shr    edx,0x4
10033624:	and    edx,0xf
10033627:	cmp    ecx,0x1
1003362a:	mov    bl,BYTE PTR [edx+eax*1]
1003362d:	ja     0x10033634
1003362f:	call   0x100574b0
10033634:	mov    edi,DWORD PTR [esi+0x14]
10033637:	add    edi,0x1
1003363a:	cmp    edi,0xfffffffe
1003363d:	jbe    0x10033644
1003363f:	call   0x100574b0
10033644:	mov    eax,DWORD PTR [esi+0x18]
10033647:	cmp    eax,edi
10033649:	jae    0x1003366f
1003364b:	mov    edx,DWORD PTR [esi+0x14]
1003364e:	push   edx
1003364f:	push   edi
10033650:	mov    ecx,esi
10033652:	call   0x10001500
10033657:	test   edi,edi
10033659:	jbe    0x100336a2
1003365b:	mov    ebp,DWORD PTR [esi+0x14]
1003365e:	mov    edx,0x10
10033663:	cmp    DWORD PTR [esi+0x18],edx
10033666:	lea    eax,[esi+0x4]
10033669:	jb     0x1003368b
1003366b:	mov    ecx,DWORD PTR [eax]
1003366d:	jmp    0x1003368d
1003366f:	test   edi,edi
10033671:	jne    0x10033659
10033673:	cmp    eax,0x10
10033676:	mov    DWORD PTR [esi+0x14],edi
10033679:	jb     0x10033683
1003367b:	mov    eax,DWORD PTR [esi+0x4]
1003367e:	mov    BYTE PTR [eax],0x0
10033681:	jmp    0x100336a2
10033683:	lea    eax,[esi+0x4]
10033686:	mov    BYTE PTR [eax],0x0
10033689:	jmp    0x100336a2
1003368b:	mov    ecx,eax
1003368d:	mov    BYTE PTR [ecx+ebp*1],bl
10033690:	cmp    DWORD PTR [esi+0x18],edx
10033693:	mov    DWORD PTR [esi+0x14],edi
10033696:	jb     0x1003369a
10033698:	mov    eax,DWORD PTR [eax]
1003369a:	mov    ebp,DWORD PTR [esp+0x10]
1003369e:	mov    BYTE PTR [eax+edi*1],0x0
100336a2:	mov    ecx,DWORD PTR [esp+0x14]
100336a6:	or     edx,0xffffffff
100336a9:	sub    edx,DWORD PTR [esi+0x14]
100336ac:	mov    eax,ebp
100336ae:	shr    eax,0x8
100336b1:	and    eax,0xf
100336b4:	cmp    edx,0x1
100336b7:	mov    bl,BYTE PTR [eax+ecx*1]
100336ba:	ja     0x100336c1
100336bc:	call   0x100574b0
100336c1:	mov    edi,DWORD PTR [esi+0x14]
100336c4:	add    edi,0x1
100336c7:	cmp    edi,0xfffffffe
100336ca:	jbe    0x100336d1
100336cc:	call   0x100574b0
100336d1:	mov    eax,DWORD PTR [esi+0x18]
100336d4:	cmp    eax,edi
100336d6:	jae    0x100336fc
100336d8:	mov    eax,DWORD PTR [esi+0x14]
100336db:	push   eax
100336dc:	push   edi
100336dd:	mov    ecx,esi
100336df:	call   0x10001500
100336e4:	test   edi,edi
100336e6:	jbe    0x1003372f
100336e8:	mov    ebp,DWORD PTR [esi+0x14]
100336eb:	mov    edx,0x10
100336f0:	cmp    DWORD PTR [esi+0x18],edx
100336f3:	lea    eax,[esi+0x4]
100336f6:	jb     0x10033718
100336f8:	mov    ecx,DWORD PTR [eax]
100336fa:	jmp    0x1003371a
100336fc:	test   edi,edi
100336fe:	jne    0x100336e6
10033700:	cmp    eax,0x10
10033703:	mov    DWORD PTR [esi+0x14],edi
10033706:	jb     0x10033710
10033708:	mov    eax,DWORD PTR [esi+0x4]
1003370b:	mov    BYTE PTR [eax],0x0
1003370e:	jmp    0x1003372f
10033710:	lea    eax,[esi+0x4]
10033713:	mov    BYTE PTR [eax],0x0
10033716:	jmp    0x1003372f
10033718:	mov    ecx,eax
1003371a:	mov    BYTE PTR [ecx+ebp*1],bl
1003371d:	cmp    DWORD PTR [esi+0x18],edx
10033720:	mov    DWORD PTR [esi+0x14],edi
10033723:	jb     0x10033727
10033725:	mov    eax,DWORD PTR [eax]
10033727:	mov    ebp,DWORD PTR [esp+0x10]
1003372b:	mov    BYTE PTR [eax+edi*1],0x0
1003372f:	mov    ecx,DWORD PTR [esp+0x14]
10033733:	or     edx,0xffffffff
10033736:	sub    edx,DWORD PTR [esi+0x14]
10033739:	shr    ebp,0xc
1003373c:	cmp    edx,0x1
1003373f:	mov    bl,BYTE PTR [ecx+ebp*1]
10033742:	ja     0x10033749
10033744:	call   0x100574b0
10033749:	mov    edi,DWORD PTR [esi+0x14]
1003374c:	add    edi,0x1
1003374f:	cmp    edi,0xfffffffe
10033752:	jbe    0x10033759
10033754:	call   0x100574b0
10033759:	mov    eax,DWORD PTR [esi+0x18]
1003375c:	cmp    eax,edi
1003375e:	jae    0x10033784
10033760:	mov    eax,DWORD PTR [esi+0x14]
10033763:	push   eax
10033764:	push   edi
10033765:	mov    ecx,esi
10033767:	call   0x10001500
1003376c:	test   edi,edi
1003376e:	jbe    0x100337b3
10033770:	mov    ebp,DWORD PTR [esi+0x14]
10033773:	mov    edx,0x10
10033778:	cmp    DWORD PTR [esi+0x18],edx
1003377b:	lea    eax,[esi+0x4]
1003377e:	jb     0x100337a0
10033780:	mov    ecx,DWORD PTR [eax]
10033782:	jmp    0x100337a2
10033784:	test   edi,edi
10033786:	jne    0x1003376e
10033788:	cmp    eax,0x10
1003378b:	mov    DWORD PTR [esi+0x14],edi
1003378e:	jb     0x10033798
10033790:	mov    eax,DWORD PTR [esi+0x4]
10033793:	mov    BYTE PTR [eax],0x0
10033796:	jmp    0x100337b3
10033798:	lea    eax,[esi+0x4]
1003379b:	mov    BYTE PTR [eax],0x0
1003379e:	jmp    0x100337b3
100337a0:	mov    ecx,eax
100337a2:	mov    BYTE PTR [ecx+ebp*1],bl
100337a5:	cmp    DWORD PTR [esi+0x18],edx
100337a8:	mov    DWORD PTR [esi+0x14],edi
100337ab:	jb     0x100337af
100337ad:	mov    eax,DWORD PTR [eax]
100337af:	mov    BYTE PTR [eax+edi*1],0x0
100337b3:	push   0x100748e4
100337b8:	push   0x7
100337ba:	mov    ecx,0x10074920
100337bf:	call   0x100042b4
100337c4:	mov    edi,eax
100337c6:	push   edi
100337c7:	call   0x10043450
100337cc:	add    esp,0xc
100337cf:	push   eax
100337d0:	push   edi
100337d1:	mov    eax,esi
100337d3:	call   0x10004d62
100337d8:	mov    eax,esi
100337da:	mov    ecx,DWORD PTR [esp+0x2c]
100337de:	mov    DWORD PTR fs:0x0,ecx
100337e5:	pop    ecx
100337e6:	pop    edi
100337e7:	pop    ebp
100337e8:	pop    ebx
100337e9:	add    esp,0x28
100337ec:	ret    
100337ed:	int3   
100337ee:	int3   
100337ef:	int3   
100337f0:	push   ebp
100337f1:	mov    ebp,esp
100337f3:	push   0xffffffff
100337f5:	push   0x10061da0
100337fa:	mov    eax,fs:0x0
10033800:	push   eax
10033801:	sub    esp,0x9c
10033807:	mov    eax,ds:0x100801ac
1003380c:	xor    eax,ebp
1003380e:	mov    DWORD PTR [ebp-0x14],eax
10033811:	push   ebx
10033812:	push   esi
10033813:	push   edi
10033814:	push   eax
10033815:	lea    eax,[ebp-0xc]
10033818:	mov    fs:0x0,eax
1003381e:	mov    DWORD PTR [ebp-0x10],esp
10033821:	xor    ebx,ebx
10033823:	mov    DWORD PTR [ebp-0x4],ebx
10033826:	mov    edi,ecx
10033828:	mov    DWORD PTR [ebp-0x58],edi
1003382b:	mov    esi,edx
1003382d:	mov    DWORD PTR [ebp-0x60],ebx
10033830:	mov    DWORD PTR [ebp-0x34],0xf
10033837:	mov    DWORD PTR [ebp-0x38],ebx
1003383a:	mov    BYTE PTR [ebp-0x48],bl
1003383d:	mov    BYTE PTR [ebp-0x4],0x1
10033841:	call   0x10033340
10033846:	cmp    DWORD PTR [esi+0x14],0xb
1003384a:	mov    DWORD PTR [ebp-0x50],eax
1003384d:	jae    0x1003388f
1003384f:	mov    DWORD PTR [edi+0x18],0xf
10033856:	mov    DWORD PTR [edi+0x14],ebx
10033859:	push   0x1006dd18
1003385e:	mov    BYTE PTR [edi+0x4],bl
10033861:	call   0x10043450
10033866:	add    esp,0x4
10033869:	push   eax
1003386a:	push   0x1006dd18
1003386f:	mov    ecx,edi
10033871:	call   0x1000133b
10033876:	cmp    DWORD PTR [ebp-0x34],0x10
1003387a:	jb     0x10033888
1003387c:	mov    eax,DWORD PTR [ebp-0x48]
1003387f:	push   eax
10033880:	call   0x10042fe2
10033885:	add    esp,0x4
10033888:	mov    eax,edi
1003388a:	jmp    0x10033c67
1003388f:	push   0x10074928
10033894:	push   0x7
10033896:	mov    ecx,0x10074920
1003389b:	call   0x100042b4
100338a0:	mov    ebx,eax
100338a2:	add    esp,0x8
100338a5:	push   ebx
100338a6:	call   0x10043450
100338ab:	add    esp,0x4
100338ae:	push   eax
100338af:	push   ebx
100338b0:	push   esi
100338b1:	xor    eax,eax
100338b3:	call   0x1000d551
100338b8:	cmp    eax,0xffffffff
100338bb:	jne    0x10033902
100338bd:	mov    DWORD PTR [edi+0x18],0xf
100338c4:	mov    DWORD PTR [edi+0x14],0x0
100338cb:	push   0x1006dd18
100338d0:	mov    BYTE PTR [edi+0x4],0x0
100338d4:	call   0x10043450
100338d9:	add    esp,0x4
100338dc:	push   eax
100338dd:	push   0x1006dd18
100338e2:	mov    ecx,edi
100338e4:	call   0x1000133b
100338e9:	cmp    DWORD PTR [ebp-0x34],0x10
100338ed:	jb     0x10033888
100338ef:	mov    ecx,DWORD PTR [ebp-0x48]
100338f2:	push   ecx
100338f3:	call   0x10042fe2
100338f8:	add    esp,0x4
100338fb:	mov    eax,edi
100338fd:	jmp    0x10033c67
10033902:	push   eax
10033903:	push   0x0
10033905:	push   esi
10033906:	lea    eax,[ebp-0x30]
10033909:	call   0x1000ce4e
1003390e:	mov    BYTE PTR [ebp-0x4],0x2
10033912:	mov    ecx,DWORD PTR [ebp-0x1c]
10033915:	lea    esi,[ecx-0x4]
10033918:	cmp    esi,ecx
1003391a:	jbe    0x10033924
1003391c:	call   0x10043605
10033921:	mov    ecx,DWORD PTR [ebp-0x1c]
10033924:	mov    eax,DWORD PTR [ebp-0x2c]
10033927:	mov    ebx,0x10
1003392c:	cmp    DWORD PTR [ebp-0x18],ebx
1003392f:	jae    0x10033934
10033931:	lea    eax,[ebp-0x2c]
10033934:	movsx  edx,BYTE PTR [eax+esi*1]
10033938:	mov    edi,DWORD PTR [ebp-0x50]
1003393b:	mov    al,BYTE PTR [edi+edx*4]
1003393e:	cmp    al,0xf
10033940:	ja     0x10033c3b
10033946:	movsx  eax,al
10033949:	lea    esi,[ecx-0x3]
1003394c:	cmp    esi,ecx
1003394e:	mov    DWORD PTR [ebp-0x54],eax
10033951:	jbe    0x1003395b
10033953:	call   0x10043605
10033958:	mov    ecx,DWORD PTR [ebp-0x1c]
1003395b:	cmp    DWORD PTR [ebp-0x18],ebx
1003395e:	mov    eax,DWORD PTR [ebp-0x2c]
10033961:	jae    0x10033966
10033963:	lea    eax,[ebp-0x2c]
10033966:	movsx  edx,BYTE PTR [eax+esi*1]
1003396a:	mov    al,BYTE PTR [edi+edx*4]
1003396d:	cmp    al,0xf
1003396f:	ja     0x10033c1f
10033975:	lea    esi,[ecx-0x2]
10033978:	cmp    esi,ecx
1003397a:	movsx  edi,al
1003397d:	jbe    0x10033987
1003397f:	call   0x10043605
10033984:	mov    ecx,DWORD PTR [ebp-0x1c]
10033987:	cmp    DWORD PTR [ebp-0x18],ebx
1003398a:	mov    eax,DWORD PTR [ebp-0x2c]
1003398d:	jae    0x10033992
1003398f:	lea    eax,[ebp-0x2c]
10033992:	movsx  eax,BYTE PTR [eax+esi*1]
10033996:	mov    edx,DWORD PTR [ebp-0x50]
10033999:	mov    al,BYTE PTR [edx+eax*4]
1003399c:	cmp    al,0xf
1003399e:	ja     0x10033c03
100339a4:	lea    esi,[ecx-0x1]
100339a7:	cmp    esi,ecx
100339a9:	movsx  ebx,al
100339ac:	jbe    0x100339b6
100339ae:	call   0x10043605
100339b3:	mov    ecx,DWORD PTR [ebp-0x1c]
100339b6:	cmp    DWORD PTR [ebp-0x18],0x10
100339ba:	mov    eax,DWORD PTR [ebp-0x2c]
100339bd:	jae    0x100339c2
100339bf:	lea    eax,[ebp-0x2c]
100339c2:	movsx  eax,BYTE PTR [eax+esi*1]
100339c6:	mov    edx,DWORD PTR [ebp-0x50]
100339c9:	mov    al,BYTE PTR [edx+eax*4]
100339cc:	cmp    al,0xf
100339ce:	ja     0x10033be7
100339d4:	movsx  eax,al
100339d7:	shl    eax,0x4
100339da:	or     eax,ebx
100339dc:	shl    eax,0x4
100339df:	or     eax,edi
100339e1:	shl    eax,0x4
100339e4:	or     eax,DWORD PTR [ebp-0x54]
100339e7:	lea    ebx,[ecx-0x4]
100339ea:	cmp    ebx,ecx
100339ec:	mov    DWORD PTR [ebp-0x54],eax
100339ef:	ja     0x100339fe
100339f1:	push   0xffffffff
100339f3:	push   ebx
100339f4:	lea    ecx,[ebp-0x30]
100339f7:	call   0x100013ad
100339fc:	jmp    0x10033a0a
100339fe:	push   0x0
10033a00:	sub    ebx,ecx
10033a02:	lea    esi,[ebp-0x30]
10033a05:	call   0x1000d4dd
10033a0a:	mov    eax,DWORD PTR [ebp-0x54]
10033a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
10033a10:	add    eax,eax
10033a12:	cmp    ecx,eax
10033a14:	jae    0x10033a82
10033a16:	mov    esi,DWORD PTR [ebp-0x58]
10033a19:	mov    edi,0xf
10033a1e:	mov    DWORD PTR [esi+0x18],edi
10033a21:	mov    DWORD PTR [esi+0x14],0x0
10033a28:	push   0x1006dd18
10033a2d:	mov    BYTE PTR [esi+0x4],0x0
10033a31:	call   0x10043450
10033a36:	add    esp,0x4
10033a39:	push   eax
10033a3a:	push   0x1006dd18
10033a3f:	mov    ecx,esi
10033a41:	call   0x1000133b
10033a46:	mov    ebx,0x10
10033a4b:	cmp    DWORD PTR [ebp-0x18],ebx
10033a4e:	jb     0x10033a5c
10033a50:	mov    eax,DWORD PTR [ebp-0x2c]
10033a53:	push   eax
10033a54:	call   0x10042fe2
10033a59:	add    esp,0x4
10033a5c:	cmp    DWORD PTR [ebp-0x34],ebx
10033a5f:	mov    DWORD PTR [ebp-0x18],edi
10033a62:	mov    DWORD PTR [ebp-0x1c],0x0
10033a69:	mov    BYTE PTR [ebp-0x2c],0x0
10033a6d:	jb     0x10033a7b
10033a6f:	mov    ecx,DWORD PTR [ebp-0x48]
10033a72:	push   ecx
10033a73:	call   0x10042fe2
10033a78:	add    esp,0x4
10033a7b:	mov    eax,esi
10033a7d:	jmp    0x10033c67
10033a82:	mov    edi,ecx
10033a84:	sub    edi,eax
10033a86:	xor    eax,eax
10033a88:	mov    DWORD PTR [ebp-0x5c],eax
10033a8b:	cmp    eax,DWORD PTR [ebp-0x54]
10033a8e:	mov    ebx,DWORD PTR [ebp-0x50]
10033a91:	je     0x10033bbd
10033a97:	lea    esi,[edi+eax*2]
10033a9a:	cmp    esi,ecx
10033a9c:	jbe    0x10033aa3
10033a9e:	call   0x10043605
10033aa3:	cmp    DWORD PTR [ebp-0x18],0x10
10033aa7:	mov    eax,DWORD PTR [ebp-0x2c]
10033aaa:	jae    0x10033aaf
10033aac:	lea    eax,[ebp-0x2c]
10033aaf:	movsx  edx,BYTE PTR [eax+esi*1]
10033ab3:	mov    al,BYTE PTR [ebx+edx*4]
10033ab6:	cmp    al,0x3f
10033ab8:	ja     0x10033ba7
10033abe:	movsx  eax,al
10033ac1:	add    esi,0x1
10033ac4:	cmp    esi,DWORD PTR [ebp-0x1c]
10033ac7:	mov    DWORD PTR [ebp-0x60],eax
10033aca:	jbe    0x10033ad1
10033acc:	call   0x10043605
10033ad1:	cmp    DWORD PTR [ebp-0x18],0x10
10033ad5:	mov    eax,DWORD PTR [ebp-0x2c]
10033ad8:	jae    0x10033add
10033ada:	lea    eax,[ebp-0x2c]
10033add:	movsx  ecx,BYTE PTR [eax+esi*1]
10033ae1:	mov    al,BYTE PTR [ebx+ecx*4]
10033ae4:	cmp    al,0x3
10033ae6:	ja     0x10033b8b
10033aec:	or     edx,0xffffffff
10033aef:	sub    edx,DWORD PTR [ebp-0x38]
10033af2:	movsx  ebx,al
10033af5:	cmp    edx,0x1
10033af8:	ja     0x10033aff
10033afa:	call   0x100574b0
10033aff:	mov    esi,DWORD PTR [ebp-0x38]
10033b02:	add    esi,0x1
10033b05:	cmp    esi,0xfffffffe
10033b08:	jbe    0x10033b0f
10033b0a:	call   0x100574b0
10033b0f:	mov    eax,DWORD PTR [ebp-0x34]
10033b12:	cmp    eax,esi
10033b14:	jae    0x10033b67
10033b16:	mov    eax,DWORD PTR [ebp-0x38]
10033b19:	push   eax
10033b1a:	push   esi
10033b1b:	lea    ecx,[ebp-0x4c]
10033b1e:	call   0x10001500
10033b23:	test   esi,esi
10033b25:	jbe    0x10033b58
10033b27:	mov    eax,DWORD PTR [ebp-0x48]
10033b2a:	shl    bl,0x6
10033b2d:	add    bl,BYTE PTR [ebp-0x60]
10033b30:	mov    ecx,0x10
10033b35:	xor    bl,BYTE PTR [ebp-0x5c]
10033b38:	cmp    DWORD PTR [ebp-0x34],ecx
10033b3b:	jae    0x10033b40
10033b3d:	lea    eax,[ebp-0x48]
10033b40:	mov    edx,DWORD PTR [ebp-0x38]
10033b43:	mov    BYTE PTR [eax+edx*1],bl
10033b46:	cmp    DWORD PTR [ebp-0x34],ecx
10033b49:	mov    eax,DWORD PTR [ebp-0x48]
10033b4c:	mov    DWORD PTR [ebp-0x38],esi
10033b4f:	jae    0x10033b54
10033b51:	lea    eax,[ebp-0x48]
10033b54:	mov    BYTE PTR [eax+esi*1],0x0
10033b58:	add    DWORD PTR [ebp-0x5c],0x1
10033b5c:	mov    eax,DWORD PTR [ebp-0x5c]
10033b5f:	mov    ecx,DWORD PTR [ebp-0x1c]
10033b62:	jmp    0x10033a8b
10033b67:	test   esi,esi
10033b69:	jne    0x10033b25
10033b6b:	cmp    eax,0x10
10033b6e:	mov    eax,DWORD PTR [ebp-0x48]
10033b71:	mov    DWORD PTR [ebp-0x38],esi
10033b74:	jae    0x10033b79
10033b76:	lea    eax,[ebp-0x48]
10033b79:	add    DWORD PTR [ebp-0x5c],0x1
10033b7d:	mov    BYTE PTR [eax],0x0
10033b80:	mov    eax,DWORD PTR [ebp-0x5c]
10033b83:	mov    ecx,DWORD PTR [ebp-0x1c]
10033b86:	jmp    0x10033a8b
10033b8b:	lea    ecx,[ebp-0x90]
10033b91:	call   0x100432c1
10033b96:	push   0x10076520
10033b9b:	lea    eax,[ebp-0x90]
10033ba1:	push   eax
10033ba2:	call   0x10047942
10033ba7:	lea    ecx,[ebp-0x6c]
10033baa:	call   0x100432c1
10033baf:	push   0x10076520
10033bb4:	lea    ecx,[ebp-0x6c]
10033bb7:	push   ecx
10033bb8:	call   0x10047942
10033bbd:	mov    esi,DWORD PTR [ebp-0x58]
10033bc0:	push   0xffffffff
10033bc2:	push   0x0
10033bc4:	lea    edx,[ebp-0x4c]
10033bc7:	mov    edi,0xf
10033bcc:	mov    DWORD PTR [esi+0x18],edi
10033bcf:	mov    DWORD PTR [esi+0x14],0x0
10033bd6:	push   edx
10033bd7:	mov    ecx,esi
10033bd9:	mov    BYTE PTR [esi+0x4],0x0
10033bdd:	call   0x10001241
10033be2:	jmp    0x10033a46
10033be7:	lea    ecx,[ebp-0xa8]
10033bed:	call   0x100432c1
10033bf2:	push   0x10076520
10033bf7:	lea    edx,[ebp-0xa8]
10033bfd:	push   edx
10033bfe:	call   0x10047942
10033c03:	lea    ecx,[ebp-0x84]
10033c09:	call   0x100432c1
10033c0e:	push   0x10076520
10033c13:	lea    eax,[ebp-0x84]
10033c19:	push   eax
10033c1a:	call   0x10047942
10033c1f:	lea    ecx,[ebp-0x9c]
10033c25:	call   0x100432c1
10033c2a:	push   0x10076520
10033c2f:	lea    ecx,[ebp-0x9c]
10033c35:	push   ecx
10033c36:	call   0x10047942
10033c3b:	lea    ecx,[ebp-0x78]
10033c3e:	call   0x100432c1
10033c43:	push   0x10076520
10033c48:	lea    edx,[ebp-0x78]
10033c4b:	push   edx
10033c4c:	call   0x10047942
10033c51:	mov    ecx,DWORD PTR [ebp-0x58]
10033c54:	push   0x1006dd18
10033c59:	call   0x100011a7
10033c5e:	mov    eax,0x10033c64
10033c63:	ret    
10033c64:	mov    eax,DWORD PTR [ebp-0x58]
10033c67:	mov    ecx,DWORD PTR [ebp-0xc]
10033c6a:	mov    DWORD PTR fs:0x0,ecx
10033c71:	pop    ecx
10033c72:	pop    edi
10033c73:	pop    esi
10033c74:	pop    ebx
10033c75:	mov    ecx,DWORD PTR [ebp-0x14]
10033c78:	xor    ecx,ebp
10033c7a:	call   0x10043615
10033c7f:	mov    esp,ebp
10033c81:	pop    ebp
10033c82:	ret    
10033c83:	int3   
10033c84:	int3   
10033c85:	int3   
10033c86:	int3   
10033c87:	int3   
10033c88:	int3   
10033c89:	int3   
10033c8a:	int3   
10033c8b:	int3   
10033c8c:	int3   
10033c8d:	int3   
10033c8e:	int3   
10033c8f:	int3   
10033c90:	push   ebp
10033c91:	mov    ebp,esp
10033c93:	and    esp,0xfffffff8
10033c96:	push   0xffffffff
10033c98:	push   0x10062c98
10033c9d:	mov    eax,fs:0x0
10033ca3:	push   eax
10033ca4:	sub    esp,0x54
10033ca7:	push   esi
10033ca8:	push   edi
10033ca9:	mov    eax,ds:0x100801ac
10033cae:	xor    eax,esp
10033cb0:	push   eax
10033cb1:	lea    eax,[esp+0x60]
10033cb5:	mov    fs:0x0,eax
10033cbb:	xor    esi,esi
10033cbd:	cmp    DWORD PTR [ebx+0x18],0x10
10033cc1:	lea    eax,[ebx+0x4]
10033cc4:	mov    DWORD PTR [esp+0x10],esi
10033cc8:	mov    DWORD PTR [esp+0x10],eax
10033ccc:	jb     0x10033cd0
10033cce:	mov    eax,DWORD PTR [eax]
10033cd0:	push   esi
10033cd1:	push   esi
10033cd2:	push   0xffffffff
10033cd4:	push   eax
10033cd5:	push   esi
10033cd6:	push   0xfde9
10033cdb:	call   DWORD PTR ds:0x1006708c
10033ce1:	cmp    eax,esi
10033ce3:	jne    0x10033d72
10033ce9:	call   0x10002068
10033cee:	push   0x11
10033cf0:	call   0x10038b80
10033cf5:	add    esp,0x4
10033cf8:	mov    edi,0xf
10033cfd:	push   0x1006dd18
10033d02:	mov    DWORD PTR [esp+0x34],edi
10033d06:	mov    DWORD PTR [esp+0x30],esi
10033d0a:	mov    BYTE PTR [esp+0x20],0x0
10033d0f:	call   0x10043450
10033d14:	add    esp,0x4
10033d17:	push   eax
10033d18:	push   0x1006dd18
10033d1d:	lea    ecx,[esp+0x20]
10033d21:	call   0x1000133b
10033d26:	lea    ecx,[esp+0x34]
10033d2a:	mov    DWORD PTR [esp+0x68],esi
10033d2e:	call   0x100432c1
10033d33:	push   0xffffffff
10033d35:	mov    BYTE PTR [esp+0x6c],0x1
10033d3a:	push   esi
10033d3b:	lea    eax,[esp+0x20]
10033d3f:	push   eax
10033d40:	lea    ecx,[esp+0x4c]
10033d44:	mov    DWORD PTR [esp+0x40],0x10074a3c
10033d4c:	mov    DWORD PTR [esp+0x64],edi
10033d50:	mov    DWORD PTR [esp+0x60],esi
10033d54:	mov    BYTE PTR [esp+0x50],0x0
10033d59:	call   0x10001241
10033d5e:	push   0x10076508
10033d63:	lea    ecx,[esp+0x38]
10033d67:	push   ecx
10033d68:	mov    BYTE PTR [esp+0x70],0x0
10033d6d:	call   0x10047942
10033d72:	lea    edi,[eax+0x1]
10033d75:	xor    ecx,ecx
10033d77:	mov    eax,edi
10033d79:	mov    edx,0x2
10033d7e:	mul    edx
10033d80:	seto   cl
10033d83:	neg    ecx
10033d85:	or     ecx,eax
10033d87:	push   ecx
10033d88:	call   0x100438d7
10033d8d:	mov    esi,eax
10033d8f:	add    esp,0x4
10033d92:	mov    DWORD PTR [esp+0x14],esi
10033d96:	mov    eax,DWORD PTR [esp+0x10]
10033d9a:	mov    DWORD PTR [esp+0x68],0x2
10033da2:	cmp    DWORD PTR [ebx+0x18],0x10
10033da6:	jb     0x10033daa
10033da8:	mov    eax,DWORD PTR [eax]
10033daa:	push   edi
10033dab:	push   esi
10033dac:	push   0xffffffff
10033dae:	push   eax
10033daf:	push   0x0
10033db1:	push   0xfde9
10033db6:	call   DWORD PTR ds:0x1006708c
10033dbc:	mov    edi,DWORD PTR [ebp+0x8]
10033dbf:	push   esi
10033dc0:	mov    WORD PTR [esi+eax*2],0x0
10033dc6:	call   0x100024b0
10033dcb:	push   esi
10033dcc:	call   0x10042fe2
10033dd1:	add    esp,0x4
10033dd4:	mov    eax,edi
10033dd6:	mov    ecx,DWORD PTR [esp+0x60]
10033dda:	mov    DWORD PTR fs:0x0,ecx
10033de1:	pop    ecx
10033de2:	pop    edi
10033de3:	pop    esi
10033de4:	mov    esp,ebp
10033de6:	pop    ebp
10033de7:	ret    
10033de8:	int3   
10033de9:	int3   
10033dea:	int3   
10033deb:	int3   
10033dec:	int3   
10033ded:	int3   
10033dee:	int3   
10033def:	int3   
10033df0:	push   ebp
10033df1:	mov    ebp,esp
10033df3:	and    esp,0xfffffff8
10033df6:	push   0xffffffff
10033df8:	push   0x10062c51
10033dfd:	mov    eax,fs:0x0
10033e03:	push   eax
10033e04:	sub    esp,0x838
10033e0a:	mov    eax,ds:0x100801ac
10033e0f:	xor    eax,esp
10033e11:	mov    DWORD PTR [esp+0x830],eax
10033e18:	push   ebx
10033e19:	push   esi
10033e1a:	push   edi
10033e1b:	mov    eax,ds:0x100801ac
10033e20:	xor    eax,esp
10033e22:	push   eax
10033e23:	lea    eax,[esp+0x848]
10033e2a:	mov    fs:0x0,eax
10033e30:	xor    eax,eax
10033e32:	xor    ebx,ebx
10033e34:	mov    DWORD PTR [esp+0x2c],ebx
10033e38:	mov    DWORD PTR [esp+0x30],eax
10033e3c:	mov    DWORD PTR [esp+0x34],eax
10033e40:	mov    DWORD PTR [esp+0x38],eax
10033e44:	mov    DWORD PTR [esp+0x18],ebx
10033e48:	push   0x1007495c
10033e4d:	push   0x1f
10033e4f:	mov    ecx,0x10074998
10033e54:	mov    DWORD PTR [esp+0x858],ebx
10033e5b:	call   0x1000444a
10033e60:	add    esp,0x8
10033e63:	lea    ecx,[esp+0x14]
10033e67:	push   ecx
10033e68:	push   0x20019
10033e6d:	push   ebx
10033e6e:	push   eax
10033e6f:	push   0x80000002
10033e74:	mov    DWORD PTR [esp+0x28],ebx
10033e78:	call   DWORD PTR ds:0x10067020
10033e7e:	cmp    eax,ebx
10033e80:	jne    0x10033ef4
10033e82:	mov    edx,DWORD PTR [esp+0x14]
10033e86:	push   0x100749d8
10033e8b:	push   0xb
10033e8d:	mov    ecx,0x10074a18
10033e92:	mov    DWORD PTR [esp+0x20],edx
10033e96:	mov    DWORD PTR [esp+0x18],0x400
10033e9e:	call   0x1000444a
10033ea3:	add    esp,0x8
10033ea6:	push   eax
10033ea7:	lea    eax,[esp+0x1c]
10033eab:	push   eax
10033eac:	lea    edi,[esp+0x18]
10033eb0:	lea    esi,[esp+0x44]
10033eb4:	call   0x1002ef20
10033eb9:	test   eax,eax
10033ebb:	je     0x10033f11
10033ebd:	mov    eax,DWORD PTR [esp+0x14]
10033ec1:	test   eax,eax
10033ec3:	mov    ecx,DWORD PTR [esp+0x38]
10033ec7:	mov    esi,DWORD PTR [esp+0x2c]
10033ecb:	mov    edi,DWORD PTR [esp+0x30]
10033ecf:	mov    ebx,DWORD PTR [esp+0x34]
10033ed3:	mov    DWORD PTR [esp+0x28],ecx
10033ed7:	je     0x10033ee0
10033ed9:	push   eax
10033eda:	call   DWORD PTR ds:0x10067014
10033ee0:	mov    eax,DWORD PTR [ebp+0x8]
10033ee3:	mov    edx,DWORD PTR [esp+0x28]
10033ee7:	mov    DWORD PTR [eax],esi
10033ee9:	mov    DWORD PTR [eax+0x4],edi
10033eec:	mov    DWORD PTR [eax+0x8],ebx
10033eef:	jmp    0x10034023
10033ef4:	mov    ecx,DWORD PTR [esp+0x2c]
10033ef8:	mov    eax,DWORD PTR [ebp+0x8]
10033efb:	mov    edx,DWORD PTR [esp+0x30]
10033eff:	mov    DWORD PTR [eax],ecx
10033f01:	mov    ecx,DWORD PTR [esp+0x34]
10033f05:	mov    DWORD PTR [eax+0x4],edx
10033f08:	mov    edx,DWORD PTR [esp+0x38]
10033f0c:	jmp    0x10034020
10033f11:	mov    eax,ds:0x10082a6c
10033f16:	mov    edx,DWORD PTR [eax+0xc]
10033f19:	mov    ecx,0x10082a6c
10033f1e:	call   edx
10033f20:	add    eax,0x10
10033f23:	mov    DWORD PTR [esp+0x10],eax
10033f27:	mov    eax,0x10074a30
10033f2c:	test   eax,0xffff0000
10033f31:	mov    BYTE PTR [esp+0x850],0x1
10033f39:	jne    0x10033f5b
10033f3b:	mov    ecx,eax
10033f3d:	movzx  esi,cx
10033f40:	push   esi
10033f41:	call   0x10002005
10033f46:	add    esp,0x4
10033f49:	cmp    eax,ebx
10033f4b:	je     0x10033f78
10033f4d:	push   esi
10033f4e:	push   eax
10033f4f:	lea    edx,[esp+0x18]
10033f53:	push   edx
10033f54:	call   0x100021cd
10033f59:	jmp    0x10033f78
10033f5b:	push   0x10074a30
10033f60:	call   0x100437c6
10033f65:	add    esp,0x4
10033f68:	mov    ebx,eax
10033f6a:	push   0x10074a30
10033f6f:	lea    eax,[esp+0x14]
10033f73:	call   0x100023b8
10033f78:	lea    eax,[esp+0x10]
10033f7c:	push   eax
10033f7d:	lea    eax,[esp+0x40]
10033f81:	mov    BYTE PTR [esp+0x854],0x2
10033f89:	call   0x10034630
10033f8e:	lea    ecx,[esp+0x10]
10033f92:	push   ecx
10033f93:	mov    eax,0x10074a34
10033f98:	call   0x10034630
10033f9d:	mov    esi,DWORD PTR [esp+0x10]
10033fa1:	cmp    DWORD PTR [esi-0x4],0x1
10033fa5:	jle    0x10033fb9
10033fa7:	mov    edx,DWORD PTR [esi-0xc]
10033faa:	push   edx
10033fab:	lea    eax,[esp+0x14]
10033faf:	push   eax
10033fb0:	call   0x1000229c
10033fb5:	mov    esi,DWORD PTR [esp+0x10]
10033fb9:	lea    ecx,[esp+0x2c]
10033fbd:	push   ecx
10033fbe:	push   esi
10033fbf:	call   DWORD PTR ds:0x10067450
10033fc5:	mov    eax,DWORD PTR [esp+0x38]
10033fc9:	mov    edx,DWORD PTR [esp+0x34]
10033fcd:	mov    edi,DWORD PTR [esp+0x2c]
10033fd1:	mov    ebx,DWORD PTR [esp+0x30]
10033fd5:	mov    DWORD PTR [esp+0x28],eax
10033fd9:	lea    eax,[esi-0x10]
10033fdc:	mov    DWORD PTR [esp+0x24],edx
10033fe0:	mov    BYTE PTR [esp+0x850],0x0
10033fe8:	lea    ecx,[eax+0xc]
10033feb:	or     edx,0xffffffff
10033fee:	lock xadd DWORD PTR [ecx],edx
10033ff2:	dec    edx
10033ff3:	test   edx,edx
10033ff5:	jg     0x10034001
10033ff7:	mov    ecx,DWORD PTR [eax]
10033ff9:	mov    edx,DWORD PTR [ecx]
10033ffb:	push   eax
10033ffc:	mov    eax,DWORD PTR [edx+0x4]
10033fff:	call   eax
10034001:	mov    eax,DWORD PTR [esp+0x14]
10034005:	test   eax,eax
10034007:	je     0x10034010
10034009:	push   eax
1003400a:	call   DWORD PTR ds:0x10067014
10034010:	mov    eax,DWORD PTR [ebp+0x8]
10034013:	mov    ecx,DWORD PTR [esp+0x24]
10034017:	mov    edx,DWORD PTR [esp+0x28]
1003401b:	mov    DWORD PTR [eax],edi
1003401d:	mov    DWORD PTR [eax+0x4],ebx
10034020:	mov    DWORD PTR [eax+0x8],ecx
10034023:	mov    DWORD PTR [eax+0xc],edx
10034026:	mov    ecx,DWORD PTR [esp+0x848]
1003402d:	mov    DWORD PTR fs:0x0,ecx
10034034:	pop    ecx
10034035:	pop    edi
10034036:	pop    esi
10034037:	pop    ebx
10034038:	mov    ecx,DWORD PTR [esp+0x830]
1003403f:	xor    ecx,esp
10034041:	call   0x10043615
10034046:	mov    esp,ebp
10034048:	pop    ebp
10034049:	ret    
1003404a:	int3   
1003404b:	int3   
1003404c:	int3   
1003404d:	int3   
1003404e:	int3   
1003404f:	int3   
10034050:	mov    eax,ds:0x10082a6c
10034055:	mov    edx,DWORD PTR [eax+0xc]
10034058:	mov    ecx,0x10082a6c
1003405d:	call   edx
1003405f:	add    eax,0x10
10034062:	mov    DWORD PTR [esi],eax
10034064:	mov    eax,esi
10034066:	ret    
10034067:	int3   
10034068:	int3   
10034069:	int3   
1003406a:	int3   
1003406b:	int3   
1003406c:	int3   
1003406d:	int3   
1003406e:	int3   
1003406f:	int3   
10034070:	test   ebx,ebx
10034072:	jne    0x10034082
10034074:	test   esi,esi
10034076:	je     0x10034082
10034078:	push   0x80070057
1003407d:	call   0x10001f2d
10034082:	mov    eax,ds:0x10082a6c
10034087:	mov    edx,DWORD PTR [eax]
10034089:	push   0x1
1003408b:	push   esi
1003408c:	mov    ecx,0x10082a6c
10034091:	call   edx
10034093:	test   eax,eax
10034095:	jne    0x1003409c
10034097:	jmp    0x10034560
1003409c:	add    eax,0x10
1003409f:	test   esi,esi
100340a1:	mov    DWORD PTR [edi],eax
100340a3:	jl     0x10034078
100340a5:	cmp    esi,DWORD PTR [eax-0x8]
100340a8:	jg     0x10034078
100340aa:	mov    DWORD PTR [eax-0xc],esi
100340ad:	mov    eax,DWORD PTR [edi]
100340af:	push   esi
100340b0:	push   ebx
100340b1:	mov    BYTE PTR [esi+eax*1],0x0
100340b5:	mov    ecx,DWORD PTR [edi]
100340b7:	push   esi
100340b8:	push   ecx
100340b9:	call   0x100433cf
100340be:	add    esp,0x10
100340c1:	mov    eax,edi
100340c3:	ret    
100340c4:	int3   
100340c5:	int3   
100340c6:	int3   
100340c7:	int3   
100340c8:	int3   
100340c9:	int3   
100340ca:	int3   
100340cb:	int3   
100340cc:	int3   
100340cd:	int3   
100340ce:	int3   
100340cf:	int3   
100340d0:	mov    eax,DWORD PTR [eax]
100340d2:	sub    eax,0x10
100340d5:	lea    ecx,[eax+0xc]
100340d8:	or     edx,0xffffffff
100340db:	lock xadd DWORD PTR [ecx],edx
100340df:	dec    edx
100340e0:	test   edx,edx
100340e2:	jg     0x100340ee
100340e4:	mov    ecx,DWORD PTR [eax]
100340e6:	mov    edx,DWORD PTR [ecx]
100340e8:	push   eax
100340e9:	mov    eax,DWORD PTR [edx+0x4]
100340ec:	call   eax
100340ee:	ret    
100340ef:	int3   
100340f0:	test   edx,edx
100340f2:	jne    0x10034105
100340f4:	xor    eax,eax
100340f6:	push   edi
100340f7:	mov    edi,eax
100340f9:	push   edx
100340fa:	mov    eax,ebx
100340fc:	call   0x100344d0
10034101:	mov    eax,ebx
10034103:	pop    edi
10034104:	ret    
10034105:	mov    eax,edx
10034107:	push   esi
10034108:	lea    esi,[eax+0x1]
1003410b:	jmp    0x10034110
1003410d:	lea    ecx,[ecx+0x0]
10034110:	mov    cl,BYTE PTR [eax]
10034112:	add    eax,0x1
10034115:	test   cl,cl
10034117:	jne    0x10034110
10034119:	sub    eax,esi
1003411b:	pop    esi
1003411c:	push   edi
1003411d:	mov    edi,eax
1003411f:	push   edx
10034120:	mov    eax,ebx
10034122:	call   0x100344d0
10034127:	mov    eax,ebx
10034129:	pop    edi
1003412a:	ret    
1003412b:	int3   
1003412c:	int3   
1003412d:	int3   
1003412e:	int3   
1003412f:	int3   
10034130:	mov    eax,DWORD PTR [edi]
10034132:	mov    edx,DWORD PTR [eax-0x8]
10034135:	push   ebx
10034136:	mov    ebx,DWORD PTR [eax-0xc]
10034139:	push   esi
1003413a:	mov    ecx,0x1
1003413f:	sub    ecx,DWORD PTR [eax-0x4]
10034142:	lea    esi,[ebx+0x1]
10034145:	sub    edx,esi
10034147:	or     ecx,edx
10034149:	jge    0x10034154
1003414b:	mov    ecx,esi
1003414d:	mov    eax,edi
1003414f:	call   0x10034570
10034154:	test   esi,esi
10034156:	mov    eax,DWORD PTR [edi]
10034158:	mov    cl,BYTE PTR [esp+0xc]
1003415c:	mov    BYTE PTR [ebx+eax*1],cl
1003415f:	jl     0x10034178
10034161:	mov    eax,DWORD PTR [edi]
10034163:	cmp    esi,DWORD PTR [eax-0x8]
10034166:	jg     0x10034178
10034168:	mov    DWORD PTR [eax-0xc],esi
1003416b:	mov    edx,DWORD PTR [edi]
1003416d:	mov    BYTE PTR [esi+edx*1],0x0
10034171:	pop    esi
10034172:	mov    eax,edi
10034174:	pop    ebx
10034175:	ret    0x4
10034178:	push   0x80070057
1003417d:	call   0x10001f2d
10034182:	int3   
10034183:	int3   
10034184:	int3   
10034185:	int3   
10034186:	int3   
10034187:	int3   
10034188:	int3   
10034189:	int3   
1003418a:	int3   
1003418b:	int3   
1003418c:	int3   
1003418d:	int3   
1003418e:	int3   
1003418f:	int3   
10034190:	push   ebx
10034191:	push   esi
10034192:	mov    ebx,ecx
10034194:	test   ebx,ebx
10034196:	push   edi
10034197:	mov    esi,eax
10034199:	jge    0x1003419d
1003419b:	xor    ebx,ebx
1003419d:	test   esi,esi
1003419f:	jge    0x100341a3
100341a1:	xor    esi,esi
100341a3:	mov    edx,DWORD PTR [esp+0x10]
100341a7:	mov    ecx,DWORD PTR [edx]
100341a9:	mov    eax,DWORD PTR [ecx-0xc]
100341ac:	mov    edi,0x7fffffff
100341b1:	sub    edi,esi
100341b3:	cmp    edi,ebx
100341b5:	jl     0x1003420f
100341b7:	lea    edi,[ebx+esi*1]
100341ba:	cmp    edi,eax
100341bc:	jle    0x100341c2
100341be:	mov    esi,eax
100341c0:	sub    esi,ebx
100341c2:	test   esi,esi
100341c4:	jle    0x1003423d
100341c6:	mov    edi,eax
100341c8:	sub    eax,ebx
100341ca:	sub    eax,esi
100341cc:	add    eax,0x1
100341cf:	sub    edi,esi
100341d1:	cmp    DWORD PTR [ecx-0x4],0x1
100341d5:	push   ebp
100341d6:	mov    ebp,eax
100341d8:	jle    0x100341e8
100341da:	mov    eax,DWORD PTR [ecx-0xc]
100341dd:	push   eax
100341de:	push   edx
100341df:	call   0x100343f0
100341e4:	mov    edx,DWORD PTR [esp+0x14]
100341e8:	mov    eax,DWORD PTR [edx]
100341ea:	add    ebx,eax
100341ec:	push   ebp
100341ed:	lea    ecx,[ebx+esi*1]
100341f0:	push   ecx
100341f1:	push   ebp
100341f2:	push   ebx
100341f3:	call   0x10042fe7
100341f8:	add    esp,0x10
100341fb:	cmp    eax,0x50
100341fe:	pop    ebp
100341ff:	ja     0x10034248
10034201:	movzx  edx,BYTE PTR [eax+0x10034264]
10034208:	jmp    DWORD PTR [edx*4+0x10034254]
1003420f:	push   0x80070057
10034214:	call   0x10001f2d
10034219:	push   0x8007000e
1003421e:	call   0x10001f2d
10034223:	test   edi,edi
10034225:	jl     0x1003420f
10034227:	mov    ecx,DWORD PTR [esp+0x10]
1003422b:	mov    eax,DWORD PTR [ecx]
1003422d:	cmp    edi,DWORD PTR [eax-0x8]
10034230:	jg     0x1003420f
10034232:	mov    DWORD PTR [eax-0xc],edi
10034235:	mov    eax,DWORD PTR [ecx]
10034237:	mov    BYTE PTR [edi+eax*1],0x0
1003423b:	mov    edx,ecx
1003423d:	mov    ecx,DWORD PTR [edx]
1003423f:	mov    eax,DWORD PTR [ecx-0xc]
10034242:	pop    edi
10034243:	pop    esi
10034244:	pop    ebx
10034245:	ret    0x4
10034248:	push   0x80004005
1003424d:	call   0x10001f2d
10034252:	mov    edi,edi
10034254:	and    eax,DWORD PTR [edx+0x3]
10034257:	adc    BYTE PTR [ecx],bl
10034259:	inc    edx
1003425a:	add    edx,DWORD PTR [eax]
1003425c:	cmovb  eax,DWORD PTR [ebx]
1003425f:	adc    BYTE PTR [eax+0x42],cl
10034262:	add    edx,DWORD PTR [eax]
10034264:	add    BYTE PTR [ebx],al
10034266:	add    eax,DWORD PTR [ebx]
10034268:	add    eax,DWORD PTR [ebx]
1003426a:	add    eax,DWORD PTR [ebx]
1003426c:	add    eax,DWORD PTR [ebx]
1003426e:	add    eax,DWORD PTR [ebx]
10034270:	add    DWORD PTR [ebx],eax
10034272:	add    eax,DWORD PTR [ebx]
10034274:	add    eax,DWORD PTR [ebx]
10034276:	add    eax,DWORD PTR [ebx]
10034278:	add    eax,DWORD PTR [ebx]
1003427a:	add    al,BYTE PTR [ebx]
1003427c:	add    eax,DWORD PTR [ebx]
1003427e:	add    eax,DWORD PTR [ebx]
10034280:	add    eax,DWORD PTR [ebx]
10034282:	add    eax,DWORD PTR [ebx]
10034284:	add    eax,DWORD PTR [ebx]
10034286:	add    al,BYTE PTR [ebx]
10034288:	add    eax,DWORD PTR [ebx]
1003428a:	add    eax,DWORD PTR [ebx]
1003428c:	add    eax,DWORD PTR [ebx]
1003428e:	add    eax,DWORD PTR [ebx]
10034290:	add    eax,DWORD PTR [ebx]
10034292:	add    eax,DWORD PTR [ebx]
10034294:	add    eax,DWORD PTR [ebx]
10034296:	add    eax,DWORD PTR [ebx]
10034298:	add    eax,DWORD PTR [ebx]
1003429a:	add    eax,DWORD PTR [ebx]
1003429c:	add    eax,DWORD PTR [ebx]
1003429e:	add    eax,DWORD PTR [ebx]
100342a0:	add    eax,DWORD PTR [ebx]
100342a2:	add    eax,DWORD PTR [ebx]
100342a4:	add    eax,DWORD PTR [ebx]
100342a6:	add    eax,DWORD PTR [ebx]
100342a8:	add    eax,DWORD PTR [ebx]
100342aa:	add    eax,DWORD PTR [ebx]
100342ac:	add    eax,DWORD PTR [ebx]
100342ae:	add    eax,DWORD PTR [ebx]
100342b0:	add    eax,DWORD PTR [ebx]
100342b2:	add    eax,DWORD PTR [ebx]
100342b4:	add    ah,cl
100342b6:	int3   
100342b7:	int3   
100342b8:	int3   
100342b9:	int3   
100342ba:	int3   
100342bb:	int3   
100342bc:	int3   
100342bd:	int3   
100342be:	int3   
100342bf:	int3   
100342c0:	mov    eax,DWORD PTR [edi]
100342c2:	mov    edx,DWORD PTR [eax-0x8]
100342c5:	push   esi
100342c6:	mov    esi,DWORD PTR [eax-0xc]
100342c9:	mov    ecx,0x1
100342ce:	sub    ecx,DWORD PTR [eax-0x4]
100342d1:	sub    edx,esi
100342d3:	or     ecx,edx
100342d5:	jge    0x100342e0
100342d7:	mov    ecx,esi
100342d9:	mov    eax,edi
100342db:	call   0x10034570
100342e0:	mov    ecx,DWORD PTR [edi]
100342e2:	lea    eax,[esi+0x1]
100342e5:	call   0x1002ee80
100342ea:	test   esi,esi
100342ec:	jl     0x10034302
100342ee:	mov    eax,DWORD PTR [edi]
100342f0:	cmp    esi,DWORD PTR [eax-0x8]
100342f3:	jg     0x10034302
100342f5:	mov    DWORD PTR [eax-0xc],esi
100342f8:	mov    eax,DWORD PTR [edi]
100342fa:	mov    BYTE PTR [esi+eax*1],0x0
100342fe:	mov    eax,edi
10034300:	pop    esi
10034301:	ret    
10034302:	push   0x80070057
10034307:	call   0x10001f2d
1003430c:	int3   
1003430d:	int3   
1003430e:	int3   
1003430f:	int3   
10034310:	test   ecx,ecx
10034312:	jne    0x1003431e
10034314:	push   0x80004005
10034319:	call   0x10001f2d
1003431e:	mov    eax,DWORD PTR [esp+0x4]
10034322:	mov    eax,DWORD PTR [eax]
10034324:	push   ecx
10034325:	push   eax
10034326:	call   0x100589ea
1003432b:	add    esp,0x8
1003432e:	neg    eax
10034330:	sbb    eax,eax
10034332:	add    eax,0x1
10034335:	ret    
10034336:	int3   
10034337:	int3   
10034338:	int3   
10034339:	int3   
1003433a:	int3   
1003433b:	int3   
1003433c:	int3   
1003433d:	int3   
1003433e:	int3   
1003433f:	int3   
10034340:	test   ecx,ecx
10034342:	jne    0x1003434e
10034344:	push   0x80004005
10034349:	call   0x10001f2d
1003434e:	mov    eax,DWORD PTR [esp+0x4]
10034352:	mov    eax,DWORD PTR [eax]
10034354:	push   ecx
10034355:	push   eax
10034356:	call   0x100589ea
1003435b:	add    esp,0x8
1003435e:	neg    eax
10034360:	sbb    eax,eax
10034362:	neg    eax
10034364:	ret    
10034365:	int3   
10034366:	int3   
10034367:	int3   
10034368:	int3   
10034369:	int3   
1003436a:	int3   
1003436b:	int3   
1003436c:	int3   
1003436d:	int3   
1003436e:	int3   
1003436f:	int3   
10034370:	mov    eax,DWORD PTR [esi]
10034372:	test   eax,eax
10034374:	je     0x1003437d
10034376:	push   eax
10034377:	call   DWORD PTR ds:0x10067378
1003437d:	mov    DWORD PTR [esi],0x0
10034383:	ret    
10034384:	int3   
10034385:	int3   
10034386:	int3   
10034387:	int3   
10034388:	int3   
10034389:	int3   
1003438a:	int3   
1003438b:	int3   
1003438c:	int3   
1003438d:	int3   
1003438e:	int3   
1003438f:	int3   
10034390:	mov    ecx,DWORD PTR [eax]
10034392:	push   esi
10034393:	mov    esi,DWORD PTR [ebx]
10034395:	lea    eax,[ecx-0x10]
10034398:	sub    esi,0x10
1003439b:	cmp    eax,esi
1003439d:	je     0x100343e8
1003439f:	cmp    DWORD PTR [esi+0xc],0x0
100343a3:	push   edi
100343a4:	lea    edi,[esi+0xc]
100343a7:	jl     0x100343d8
100343a9:	mov    edx,DWORD PTR [eax]
100343ab:	cmp    edx,DWORD PTR [esi]
100343ad:	jne    0x100343d8
100343af:	push   ebp
100343b0:	call   0x100345c0
100343b5:	mov    ebp,eax
100343b7:	or     eax,0xffffffff
100343ba:	lock xadd DWORD PTR [edi],eax
100343be:	dec    eax
100343bf:	test   eax,eax
100343c1:	jg     0x100343cd
100343c3:	mov    ecx,DWORD PTR [esi]
100343c5:	mov    edx,DWORD PTR [ecx]
100343c7:	mov    eax,DWORD PTR [edx+0x4]
100343ca:	push   esi
100343cb:	call   eax
100343cd:	add    ebp,0x10
100343d0:	mov    DWORD PTR [ebx],ebp
100343d2:	pop    ebp
100343d3:	pop    edi
100343d4:	mov    eax,ebx
100343d6:	pop    esi
100343d7:	ret    
100343d8:	mov    edi,DWORD PTR [ecx-0xc]
100343db:	push   ecx
100343dc:	mov    eax,ebx
100343de:	call   0x100344d0
100343e3:	pop    edi
100343e4:	mov    eax,ebx
100343e6:	pop    esi
100343e7:	ret    
100343e8:	mov    eax,ebx
100343ea:	pop    esi
100343eb:	ret    
100343ec:	int3   
100343ed:	int3   
100343ee:	int3   
100343ef:	int3   
100343f0:	mov    eax,DWORD PTR [esp+0x4]
100343f4:	push   ebx
100343f5:	push   ebp
100343f6:	mov    ebp,DWORD PTR [esp+0x10]
100343fa:	push   esi
100343fb:	mov    esi,DWORD PTR [eax]
100343fd:	mov    ecx,DWORD PTR [esi-0x10]
10034400:	mov    edx,DWORD PTR [ecx]
10034402:	mov    eax,DWORD PTR [edx+0x10]
10034405:	mov    ebx,DWORD PTR [esi-0xc]
10034408:	sub    esi,0x10
1003440b:	push   edi
1003440c:	call   eax
1003440e:	mov    edx,DWORD PTR [eax]
10034410:	push   0x1
10034412:	mov    ecx,eax
10034414:	mov    eax,DWORD PTR [edx]
10034416:	push   ebp
10034417:	call   eax
10034419:	mov    edi,eax
1003441b:	test   edi,edi
1003441d:	jne    0x10034424
1003441f:	call   0x10034560
10034424:	cmp    ebx,ebp
10034426:	jge    0x1003442a
10034428:	mov    ebp,ebx
1003442a:	lea    eax,[ebp+0x1]
1003442d:	push   eax
1003442e:	lea    ecx,[esi+0x10]
10034431:	push   ecx
10034432:	push   eax
10034433:	lea    ebp,[edi+0x10]
10034436:	push   ebp
10034437:	call   0x100433cf
1003443c:	add    esp,0x10
1003443f:	mov    DWORD PTR [edi+0x4],ebx
10034442:	lea    edx,[esi+0xc]
10034445:	or     eax,0xffffffff
10034448:	lock xadd DWORD PTR [edx],eax
1003444c:	dec    eax
1003444d:	test   eax,eax
1003444f:	jg     0x1003445b
10034451:	mov    ecx,DWORD PTR [esi]
10034453:	mov    edx,DWORD PTR [ecx]
10034455:	mov    eax,DWORD PTR [edx+0x4]
10034458:	push   esi
10034459:	call   eax
1003445b:	mov    ecx,DWORD PTR [esp+0x14]
1003445f:	pop    edi
10034460:	pop    esi
10034461:	mov    DWORD PTR [ecx],ebp
10034463:	pop    ebp
10034464:	pop    ebx
10034465:	ret    0x8
10034468:	int3   
10034469:	int3   
1003446a:	int3   
1003446b:	int3   
1003446c:	int3   
1003446d:	int3   
1003446e:	int3   
1003446f:	int3   
10034470:	mov    eax,DWORD PTR [edi]
10034472:	mov    edx,DWORD PTR [eax-0x8]
10034475:	push   ebx
10034476:	mov    ebx,DWORD PTR [eax-0xc]
10034479:	push   esi
1003447a:	mov    ecx,0x1
1003447f:	sub    ecx,DWORD PTR [eax-0x4]
10034482:	lea    esi,[ebx+0x1]
10034485:	sub    edx,esi
10034487:	or     ecx,edx
10034489:	jge    0x10034494
1003448b:	mov    eax,esi
1003448d:	mov    ecx,edi
1003448f:	call   0x10002253
10034494:	test   esi,esi
10034496:	mov    eax,DWORD PTR [edi]
10034498:	mov    WORD PTR [eax+ebx*2],0x5c
1003449e:	jl     0x100344b7
100344a0:	mov    eax,DWORD PTR [edi]
100344a2:	cmp    esi,DWORD PTR [eax-0x8]
100344a5:	jg     0x100344b7
100344a7:	mov    DWORD PTR [eax-0xc],esi
100344aa:	mov    ecx,DWORD PTR [edi]
100344ac:	mov    WORD PTR [ecx+esi*2],0x0
100344b2:	pop    esi
100344b3:	mov    eax,edi
100344b5:	pop    ebx
100344b6:	ret    
100344b7:	push   0x80070057
100344bc:	call   0x10001f2d
100344c1:	int3   
100344c2:	int3   
100344c3:	int3   
100344c4:	int3   
100344c5:	int3   
100344c6:	int3   
100344c7:	int3   
100344c8:	int3   
100344c9:	int3   
100344ca:	int3   
100344cb:	int3   
100344cc:	int3   
100344cd:	int3   
100344ce:	int3   
100344cf:	int3   
100344d0:	test   edi,edi
100344d2:	push   esi
100344d3:	mov    esi,eax
100344d5:	jne    0x100344e0
100344d7:	call   0x10034760
100344dc:	pop    esi
100344dd:	ret    0x4
100344e0:	mov    ecx,DWORD PTR [esp+0x8]
100344e4:	test   ecx,ecx
100344e6:	jne    0x100344f2
100344e8:	push   0x80070057
100344ed:	call   0x10001f2d
100344f2:	mov    eax,DWORD PTR [esi]
100344f4:	push   ebx
100344f5:	mov    ebx,ecx
100344f7:	sub    ebx,eax
100344f9:	mov    edx,0x1
100344fe:	sub    edx,DWORD PTR [eax-0x4]
10034501:	push   ebp
10034502:	mov    ebp,DWORD PTR [eax-0xc]
10034505:	mov    eax,DWORD PTR [eax-0x8]
10034508:	sub    eax,edi
1003450a:	or     edx,eax
1003450c:	jge    0x1003451b
1003450e:	mov    ecx,edi
10034510:	mov    eax,esi
10034512:	call   0x10034570
10034517:	mov    ecx,DWORD PTR [esp+0x10]
1003451b:	cmp    ebx,ebp
1003451d:	mov    eax,DWORD PTR [esi]
1003451f:	push   edi
10034520:	ja     0x1003452f
10034522:	lea    ecx,[eax+ebx*1]
10034525:	push   ecx
10034526:	push   edi
10034527:	push   eax
10034528:	call   0x10042fe7
1003452d:	jmp    0x10034537
1003452f:	push   ecx
10034530:	push   edi
10034531:	push   eax
10034532:	call   0x100433cf
10034537:	add    esp,0x10
1003453a:	test   edi,edi
1003453c:	pop    ebp
1003453d:	pop    ebx
1003453e:	jl     0x100344e8
10034540:	mov    eax,DWORD PTR [esi]
10034542:	cmp    edi,DWORD PTR [eax-0x8]
10034545:	jg     0x100344e8
10034547:	mov    DWORD PTR [eax-0xc],edi
1003454a:	mov    edx,DWORD PTR [esi]
1003454c:	mov    BYTE PTR [edi+edx*1],0x0
10034550:	pop    esi
10034551:	ret    0x4
10034554:	int3   
10034555:	int3   
10034556:	int3   
10034557:	int3   
10034558:	int3   
10034559:	int3   
1003455a:	int3   
1003455b:	int3   
1003455c:	int3   
1003455d:	int3   
1003455e:	int3   
1003455f:	int3   
10034560:	push   0x8007000e
10034565:	call   0x10001f2d
1003456a:	int3   
1003456b:	int3   
1003456c:	int3   
1003456d:	int3   
1003456e:	int3   
1003456f:	int3   
10034570:	push   esi
10034571:	mov    esi,eax
10034573:	mov    eax,DWORD PTR [esi]
10034575:	mov    edx,DWORD PTR [eax-0xc]
10034578:	sub    eax,0x10
1003457b:	cmp    edx,ecx
1003457d:	jle    0x10034581
1003457f:	mov    ecx,edx
10034581:	cmp    DWORD PTR [eax+0xc],0x1
10034585:	jle    0x10034590
10034587:	push   ecx
10034588:	push   esi
10034589:	call   0x100343f0
1003458e:	pop    esi
1003458f:	ret    
10034590:	mov    eax,DWORD PTR [eax+0x8]
10034593:	cmp    eax,ecx
10034595:	jge    0x100345b6
10034597:	mov    edx,eax
10034599:	cmp    edx,0x400
1003459f:	jle    0x100345a9
100345a1:	add    edx,0x400
100345a7:	jmp    0x100345ab
100345a9:	add    edx,edx
100345ab:	cmp    edx,ecx
100345ad:	jge    0x100345b1
100345af:	mov    edx,ecx
100345b1:	call   0x100347c0
100345b6:	pop    esi
100345b7:	ret    
100345b8:	int3   
100345b9:	int3   
100345ba:	int3   
100345bb:	int3   
100345bc:	int3   
100345bd:	int3   
100345be:	int3   
100345bf:	int3   
100345c0:	push   esi
100345c1:	mov    esi,eax
100345c3:	mov    ecx,DWORD PTR [esi]
100345c5:	mov    eax,DWORD PTR [ecx]
100345c7:	mov    edx,DWORD PTR [eax+0x10]
100345ca:	push   edi
100345cb:	call   edx
100345cd:	cmp    DWORD PTR [esi+0xc],0x0
100345d1:	lea    ecx,[esi+0xc]
100345d4:	jl     0x100345ea
100345d6:	cmp    eax,DWORD PTR [esi]
100345d8:	jne    0x100345ea
100345da:	mov    edi,esi
100345dc:	mov    eax,0x1
100345e1:	lock xadd DWORD PTR [ecx],eax
100345e5:	mov    eax,edi
100345e7:	pop    edi
100345e8:	pop    esi
100345e9:	ret    
100345ea:	mov    ecx,DWORD PTR [esi+0x4]
100345ed:	mov    edx,DWORD PTR [eax]
100345ef:	mov    edx,DWORD PTR [edx]
100345f1:	push   0x1
100345f3:	push   ecx
100345f4:	mov    ecx,eax
100345f6:	call   edx
100345f8:	mov    edi,eax
100345fa:	test   edi,edi
100345fc:	jne    0x10034603
100345fe:	jmp    0x10034560
10034603:	mov    eax,DWORD PTR [esi+0x4]
10034606:	mov    DWORD PTR [edi+0x4],eax
10034609:	mov    eax,DWORD PTR [esi+0x4]
1003460c:	add    eax,0x1
1003460f:	push   eax
10034610:	add    esi,0x10
10034613:	push   esi
10034614:	push   eax
10034615:	lea    ecx,[edi+0x10]
10034618:	push   ecx
10034619:	call   0x100433cf
1003461e:	add    esp,0x10
10034621:	mov    eax,edi
10034623:	pop    edi
10034624:	pop    esi
10034625:	ret    
10034626:	int3   
10034627:	int3   
10034628:	int3   
10034629:	int3   
1003462a:	int3   
1003462b:	int3   
1003462c:	int3   
1003462d:	int3   
1003462e:	int3   
1003462f:	int3   
10034630:	push   ecx
10034631:	push   ebx
10034632:	push   ebp
10034633:	push   esi
10034634:	mov    esi,eax
10034636:	test   esi,esi
10034638:	push   edi
10034639:	jne    0x10034641
1003463b:	mov    DWORD PTR [esp+0x10],eax
1003463f:	jmp    0x1003464e
10034641:	push   esi
10034642:	call   0x100437c6
10034647:	add    esp,0x4
1003464a:	mov    DWORD PTR [esp+0x10],eax
1003464e:	mov    ecx,DWORD PTR [esp+0x18]
10034652:	mov    eax,DWORD PTR [ecx]
10034654:	mov    ebx,DWORD PTR [eax-0xc]
10034657:	mov    edx,DWORD PTR [esp+0x10]
1003465b:	lea    edi,[ebx+edx*1]
1003465e:	mov    ebp,esi
10034660:	sub    esi,eax
10034662:	mov    edx,0x1
10034667:	sub    edx,DWORD PTR [eax-0x4]
1003466a:	mov    eax,DWORD PTR [eax-0x8]
1003466d:	sub    eax,edi
1003466f:	sar    esi,1
10034671:	or     edx,eax
10034673:	jge    0x10034680
10034675:	mov    eax,edi
10034677:	call   0x10002253
1003467c:	mov    ecx,DWORD PTR [esp+0x18]
10034680:	cmp    esi,ebx
10034682:	mov    ecx,DWORD PTR [ecx]
10034684:	ja     0x10034689
10034686:	lea    ebp,[ecx+esi*2]
10034689:	mov    eax,DWORD PTR [esp+0x10]
1003468d:	add    eax,eax
1003468f:	push   eax
10034690:	push   ebp
10034691:	push   eax
10034692:	lea    ecx,[ecx+ebx*2]
10034695:	push   ecx
10034696:	call   0x100433cf
1003469b:	add    esp,0x10
1003469e:	test   edi,edi
100346a0:	jl     0x100346c0
100346a2:	mov    ecx,DWORD PTR [esp+0x18]
100346a6:	mov    eax,DWORD PTR [ecx]
100346a8:	cmp    edi,DWORD PTR [eax-0x8]
100346ab:	jg     0x100346c0
100346ad:	mov    DWORD PTR [eax-0xc],edi
100346b0:	mov    edx,DWORD PTR [ecx]
100346b2:	mov    WORD PTR [edx+edi*2],0x0
100346b8:	pop    edi
100346b9:	pop    esi
100346ba:	pop    ebp
100346bb:	pop    ebx
100346bc:	pop    ecx
100346bd:	ret    0x4
100346c0:	push   0x80070057
100346c5:	call   0x10001f2d
100346ca:	int3   
100346cb:	int3   
100346cc:	int3   
100346cd:	int3   
100346ce:	int3   
100346cf:	int3   
100346d0:	mov    ecx,DWORD PTR [esp+0xc]
100346d4:	push   ebx
100346d5:	push   ebp
100346d6:	mov    ebp,DWORD PTR [esp+0xc]
100346da:	mov    eax,DWORD PTR [ebp+0x0]
100346dd:	mov    ebx,DWORD PTR [eax-0xc]
100346e0:	push   esi
100346e1:	push   edi
100346e2:	mov    edi,DWORD PTR [esp+0x18]
100346e6:	sub    edi,eax
100346e8:	mov    edx,0x1
100346ed:	sub    edx,DWORD PTR [eax-0x4]
100346f0:	mov    eax,DWORD PTR [eax-0x8]
100346f3:	lea    esi,[ebx+ecx*1]
100346f6:	sub    eax,esi
100346f8:	or     edx,eax
100346fa:	jge    0x10034709
100346fc:	mov    ecx,esi
100346fe:	mov    eax,ebp
10034700:	call   0x10034570
10034705:	mov    ecx,DWORD PTR [esp+0x1c]
10034709:	cmp    edi,ebx
1003470b:	mov    eax,DWORD PTR [ebp+0x0]
1003470e:	ja     0x10034717
10034710:	lea    edx,[eax+edi*1]
10034713:	mov    DWORD PTR [esp+0x18],edx
10034717:	mov    edx,DWORD PTR [esp+0x18]
1003471b:	push   ecx
1003471c:	push   edx
1003471d:	push   ecx
1003471e:	add    eax,ebx
10034720:	push   eax
10034721:	call   0x100433cf
10034726:	add    esp,0x10
10034729:	test   esi,esi
1003472b:	jl     0x10034746
1003472d:	mov    eax,DWORD PTR [ebp+0x0]
10034730:	cmp    esi,DWORD PTR [eax-0x8]
10034733:	jg     0x10034746
10034735:	mov    DWORD PTR [eax-0xc],esi
10034738:	mov    eax,DWORD PTR [ebp+0x0]
1003473b:	pop    edi
1003473c:	mov    BYTE PTR [esi+eax*1],0x0
10034740:	pop    esi
10034741:	pop    ebp
10034742:	pop    ebx
10034743:	ret    0xc
10034746:	push   0x80070057
1003474b:	call   0x10001f2d
10034750:	int3   
10034751:	int3   
10034752:	int3   
10034753:	int3   
10034754:	int3   
10034755:	int3   
10034756:	int3   
10034757:	int3   
10034758:	int3   
10034759:	int3   
1003475a:	int3   
1003475b:	int3   
1003475c:	int3   
1003475d:	int3   
1003475e:	int3   
1003475f:	int3   
10034760:	mov    ecx,DWORD PTR [esi]
10034762:	cmp    DWORD PTR [ecx-0xc],0x0
10034766:	lea    eax,[ecx-0x10]
10034769:	push   edi
1003476a:	mov    edi,DWORD PTR [eax]
1003476c:	je     0x100347b9
1003476e:	cmp    DWORD PTR [eax+0xc],0x0
10034772:	lea    edx,[eax+0xc]
10034775:	jge    0x10034795
10034777:	cmp    DWORD PTR [ecx-0x8],0x0
1003477b:	jge    0x10034787
1003477d:	push   0x80070057
10034782:	call   0x10001f2d
10034787:	mov    DWORD PTR [ecx-0xc],0x0
1003478e:	mov    eax,DWORD PTR [esi]
10034790:	mov    BYTE PTR [eax],0x0
10034793:	pop    edi
10034794:	ret    
10034795:	or     ecx,0xffffffff
10034798:	lock xadd DWORD PTR [edx],ecx
1003479c:	dec    ecx
1003479d:	test   ecx,ecx
1003479f:	jg     0x100347ab
100347a1:	mov    ecx,DWORD PTR [eax]
100347a3:	mov    edx,DWORD PTR [ecx]
100347a5:	push   eax
100347a6:	mov    eax,DWORD PTR [edx+0x4]
100347a9:	call   eax
100347ab:	mov    edx,DWORD PTR [edi]
100347ad:	mov    eax,DWORD PTR [edx+0xc]
100347b0:	mov    ecx,edi
100347b2:	call   eax
100347b4:	add    eax,0x10
100347b7:	mov    DWORD PTR [esi],eax
100347b9:	pop    edi
100347ba:	ret    
100347bb:	int3   
100347bc:	int3   
100347bd:	int3   
100347be:	int3   
100347bf:	int3   
100347c0:	mov    eax,DWORD PTR [esi]
100347c2:	mov    ecx,DWORD PTR [eax-0x10]
100347c5:	sub    eax,0x10
100347c8:	cmp    DWORD PTR [eax+0x8],edx
100347cb:	jge    0x100347e2
100347cd:	test   edx,edx
100347cf:	jle    0x100347e2
100347d1:	push   edi
100347d2:	mov    edi,DWORD PTR [ecx]
100347d4:	push   0x1
100347d6:	push   edx
100347d7:	push   eax
100347d8:	mov    eax,DWORD PTR [edi+0x8]
100347db:	call   eax
100347dd:	test   eax,eax
100347df:	pop    edi
100347e0:	jne    0x100347e7
100347e2:	jmp    0x10034560
100347e7:	add    eax,0x10
100347ea:	mov    DWORD PTR [esi],eax
100347ec:	ret    
100347ed:	int3   
100347ee:	int3   
100347ef:	int3   
100347f0:	push   0xffffffff
100347f2:	push   0x100603f8
100347f7:	mov    eax,fs:0x0
100347fd:	push   eax
100347fe:	sub    esp,0x20
10034801:	push   ebx
10034802:	push   esi
10034803:	mov    eax,ds:0x100801ac
10034808:	xor    eax,esp
1003480a:	push   eax
1003480b:	lea    eax,[esp+0x2c]
1003480f:	mov    fs:0x0,eax
10034815:	mov    eax,DWORD PTR [esp+0x3c]
10034819:	xor    ebx,ebx
1003481b:	push   0xffffffff
1003481d:	push   ebx
1003481e:	push   eax
1003481f:	lea    ecx,[esp+0x1c]
10034823:	mov    DWORD PTR [esp+0x18],ebx
10034827:	mov    DWORD PTR [esp+0x34],0xf
1003482f:	mov    DWORD PTR [esp+0x30],ebx
10034833:	mov    BYTE PTR [esp+0x20],bl
10034837:	call   0x10001241
1003483c:	or     ecx,0xffffffff
1003483f:	mov    DWORD PTR [esp+0x34],ebx
10034843:	sub    ecx,DWORD PTR [esp+0x24]
10034847:	cmp    ecx,0x1
1003484a:	ja     0x10034851
1003484c:	call   0x100574b0
10034851:	mov    esi,DWORD PTR [esp+0x24]
10034855:	add    esi,0x1
10034858:	cmp    esi,0xfffffffe
1003485b:	jbe    0x10034862
1003485d:	call   0x100574b0
10034862:	mov    eax,DWORD PTR [esp+0x28]
10034866:	cmp    eax,esi
10034868:	jae    0x100348f4
1003486e:	mov    edx,DWORD PTR [esp+0x24]
10034872:	push   edx
10034873:	push   esi
10034874:	lea    ecx,[esp+0x18]
10034878:	call   0x10001500
1003487d:	mov    eax,DWORD PTR [esp+0x28]
10034881:	cmp    esi,ebx
10034883:	jbe    0x100348b0
10034885:	cmp    eax,0x10
10034888:	mov    eax,DWORD PTR [esp+0x14]
1003488c:	jae    0x10034892
1003488e:	lea    eax,[esp+0x14]
10034892:	mov    ecx,DWORD PTR [esp+0x24]
10034896:	mov    BYTE PTR [eax+ecx*1],0x26
1003489a:	cmp    DWORD PTR [esp+0x28],0x10
1003489f:	mov    eax,DWORD PTR [esp+0x14]
100348a3:	mov    DWORD PTR [esp+0x24],esi
100348a7:	jae    0x100348ad
100348a9:	lea    eax,[esp+0x14]
100348ad:	mov    BYTE PTR [eax+esi*1],bl
100348b0:	push   0xffffffff
100348b2:	push   ebx
100348b3:	lea    edx,[esp+0x18]
100348b7:	mov    DWORD PTR [edi+0x18],0xf
100348be:	mov    DWORD PTR [edi+0x14],ebx
100348c1:	push   edx
100348c2:	mov    ecx,edi
100348c4:	mov    BYTE PTR [edi+0x4],bl
100348c7:	call   0x10001241
100348cc:	cmp    DWORD PTR [esp+0x28],0x10
100348d1:	jb     0x100348e0
100348d3:	mov    eax,DWORD PTR [esp+0x14]
100348d7:	push   eax
100348d8:	call   0x10042fe2
100348dd:	add    esp,0x4
100348e0:	mov    eax,edi
100348e2:	mov    ecx,DWORD PTR [esp+0x2c]
100348e6:	mov    DWORD PTR fs:0x0,ecx
100348ed:	pop    ecx
100348ee:	pop    esi
100348ef:	pop    ebx
100348f0:	add    esp,0x2c
100348f3:	ret    
100348f4:	cmp    esi,ebx
100348f6:	jne    0x10034883
100348f8:	cmp    eax,0x10
100348fb:	mov    eax,DWORD PTR [esp+0x14]
100348ff:	mov    DWORD PTR [esp+0x24],ebx
10034903:	jae    0x10034909
10034905:	lea    eax,[esp+0x14]
10034909:	mov    BYTE PTR [eax],bl
1003490b:	jmp    0x100348b0
1003490d:	int3   
1003490e:	int3   
1003490f:	int3   
10034910:	push   ebp
10034911:	mov    ebp,esp
10034913:	and    esp,0xfffffff8
10034916:	push   0xffffffff
10034918:	push   0x10061d56
1003491d:	mov    eax,fs:0x0
10034923:	push   eax
10034924:	sub    esp,0x898
1003492a:	mov    eax,ds:0x100801ac
1003492f:	xor    eax,esp
10034931:	mov    DWORD PTR [esp+0x890],eax
10034938:	push   ebx
10034939:	push   esi
1003493a:	push   edi
1003493b:	mov    eax,ds:0x100801ac
10034940:	xor    eax,esp
10034942:	push   eax
10034943:	lea    eax,[esp+0x8a8]
1003494a:	mov    fs:0x0,eax
10034950:	mov    eax,DWORD PTR [ebp+0x8]
10034953:	mov    DWORD PTR [esp+0x10],eax
10034957:	call   DWORD PTR ds:0x10067230
1003495d:	and    eax,0xff
10034962:	cmp    eax,0x5
10034965:	jb     0x10034997
10034967:	push   0x10074a44
1003496c:	push   0xb
1003496e:	mov    ecx,0x10074a80
10034973:	call   0x1000444a
10034978:	add    esp,0x8
1003497b:	lea    edx,[esp+0x94]
10034982:	xor    ebx,ebx
10034984:	movzx  ecx,WORD PTR [eax]
10034987:	mov    WORD PTR [edx],cx
1003498a:	add    eax,0x2
1003498d:	add    edx,0x2
10034990:	cmp    cx,bx
10034993:	jne    0x10034984
10034995:	jmp    0x100349c5
10034997:	push   0x10074a98
1003499c:	push   0x4
1003499e:	mov    ecx,0x10074ad8
100349a3:	call   0x1000444a
100349a8:	add    esp,0x8
100349ab:	lea    edx,[esp+0x94]
100349b2:	xor    ebx,ebx
100349b4:	movzx  ecx,WORD PTR [eax]
100349b7:	mov    WORD PTR [edx],cx
100349ba:	add    eax,0x2
100349bd:	add    edx,0x2
100349c0:	cmp    cx,bx
100349c3:	jne    0x100349b4
100349c5:	lea    eax,[esp+0x94]
100349cc:	add    eax,0xfffffffe
100349cf:	nop
100349d0:	mov    cx,WORD PTR [eax+0x2]
100349d4:	add    eax,0x2
100349d7:	cmp    cx,bx
100349da:	jne    0x100349d0
100349dc:	mov    ecx,DWORD PTR ds:0x10074ae4
100349e2:	mov    edx,DWORD PTR ds:0x10074ae8
100349e8:	mov    esi,DWORD PTR ds:0x10067124
100349ee:	mov    DWORD PTR [eax],ecx
100349f0:	mov    ecx,DWORD PTR ds:0x10074aec
100349f6:	mov    DWORD PTR [eax+0x4],edx
100349f9:	mov    edx,DWORD PTR ds:0x10074af0
100349ff:	mov    DWORD PTR [eax+0x8],ecx
10034a02:	mov    DWORD PTR [eax+0xc],edx
10034a05:	lea    eax,[esp+0x3c]
10034a09:	push   eax
10034a0a:	call   esi
10034a0c:	mov    edi,DWORD PTR ds:0x1006710c
10034a12:	lea    ecx,[esp+0x14]
10034a16:	push   ecx
10034a17:	lea    edx,[esp+0x40]
10034a1b:	push   edx
10034a1c:	call   edi
10034a1e:	push   ebx
10034a1f:	push   0x80
10034a24:	push   0x3
10034a26:	push   ebx
10034a27:	push   ebx
10034a28:	push   0xc0000000
10034a2d:	lea    eax,[esp+0xac]
10034a34:	push   eax
10034a35:	call   DWORD PTR ds:0x100670c8
10034a3b:	cmp    eax,0xffffffff
10034a3e:	jne    0x10034b0d
10034a44:	cmp    BYTE PTR [ebp+0xc],bl
10034a47:	je     0x10034b3b
10034a4d:	call   DWORD PTR ds:0x100670cc
10034a53:	cmp    eax,0x20
10034a56:	jne    0x10034b3b
10034a5c:	lea    ecx,[esp+0x50]
10034a60:	push   ecx
10034a61:	call   esi
10034a63:	lea    edx,[esp+0x24]
10034a67:	push   edx
10034a68:	lea    eax,[esp+0x54]
10034a6c:	push   eax
10034a6d:	call   edi
10034a6f:	mov    ecx,DWORD PTR [esp+0x24]
10034a73:	mov    eax,DWORD PTR [esp+0x28]
10034a77:	mov    DWORD PTR [esp+0x34],ecx
10034a7b:	mov    ecx,eax
10034a7d:	and    eax,0x7fffffff
10034a82:	mov    DWORD PTR [esp+0x38],eax
10034a86:	mov    eax,DWORD PTR [esp+0x14]
10034a8a:	fild   QWORD PTR [esp+0x34]
10034a8e:	and    ecx,0x80000000
10034a94:	mov    DWORD PTR [esp+0x30],ecx
10034a98:	mov    DWORD PTR [esp+0x1c],eax
10034a9c:	mov    eax,DWORD PTR [esp+0x18]
10034aa0:	mov    DWORD PTR [esp+0x2c],ebx
10034aa4:	fild   QWORD PTR [esp+0x2c]
10034aa8:	mov    ecx,eax
10034aaa:	and    eax,0x7fffffff
10034aaf:	mov    DWORD PTR [esp+0x20],eax
10034ab3:	fchs   
10034ab5:	and    ecx,0x80000000
10034abb:	faddp  st(1),st
10034abd:	mov    DWORD PTR [esp+0x40],ecx
10034ac1:	fild   QWORD PTR [esp+0x1c]
10034ac5:	mov    DWORD PTR [esp+0x3c],ebx
10034ac9:	fild   QWORD PTR [esp+0x3c]
10034acd:	fchs   
10034acf:	faddp  st(1),st
10034ad1:	fadd   QWORD PTR ds:0x100758d8
10034ad7:	fcompp 
10034ad9:	fnstsw ax
10034adb:	test   ah,0x5
10034ade:	jnp    0x10034b3b
10034ae0:	push   ebx
10034ae1:	call   DWORD PTR ds:0x10067144
10034ae7:	push   ebx
10034ae8:	push   0x80
10034aed:	push   0x3
10034aef:	push   ebx
10034af0:	push   ebx
10034af1:	push   0xc0000000
10034af6:	lea    ecx,[esp+0xac]
10034afd:	push   ecx
10034afe:	call   DWORD PTR ds:0x100670c8
10034b04:	cmp    eax,0xffffffff
10034b07:	je     0x10034a44
10034b0d:	mov    ecx,DWORD PTR [esp+0x10]
10034b11:	mov    DWORD PTR [ecx],eax
10034b13:	mov    eax,ecx
10034b15:	mov    ecx,DWORD PTR [esp+0x8a8]
10034b1c:	mov    DWORD PTR fs:0x0,ecx
10034b23:	pop    ecx
10034b24:	pop    edi
10034b25:	pop    esi
10034b26:	pop    ebx
10034b27:	mov    ecx,DWORD PTR [esp+0x890]
10034b2e:	xor    ecx,esp
10034b30:	call   0x10043615
10034b35:	mov    esp,ebp
10034b37:	pop    ebp
10034b38:	ret    0x8
10034b3b:	call   DWORD PTR ds:0x100670cc
10034b41:	push   0x10074af4
10034b46:	push   0x12
10034b48:	mov    ecx,0x10074b1c
10034b4d:	call   0x100042b4
10034b52:	mov    esi,eax
10034b54:	mov    edi,0xf
10034b59:	push   esi
10034b5a:	mov    DWORD PTR [esp+0x74],edi
10034b5e:	mov    DWORD PTR [esp+0x70],ebx
10034b62:	mov    BYTE PTR [esp+0x60],bl
10034b66:	call   0x10043450
10034b6b:	add    esp,0xc
10034b6e:	push   eax
10034b6f:	push   esi
10034b70:	lea    ecx,[esp+0x58]
10034b74:	call   0x1000133b
10034b79:	lea    ecx,[esp+0x6c]
10034b7d:	mov    DWORD PTR [esp+0x8b0],ebx
10034b84:	call   0x100432c1
10034b89:	push   0xffffffff
10034b8b:	mov    BYTE PTR [esp+0x8b4],0x1
10034b93:	push   ebx
10034b94:	lea    edx,[esp+0x58]
10034b98:	push   edx
10034b99:	lea    ecx,[esp+0x84]
10034ba0:	mov    DWORD PTR [esp+0x78],0x10074a3c
10034ba8:	mov    DWORD PTR [esp+0x9c],edi
10034baf:	mov    DWORD PTR [esp+0x98],ebx
10034bb6:	mov    BYTE PTR [esp+0x88],bl
10034bbd:	call   0x10001241
10034bc2:	push   0x10076508
10034bc7:	lea    eax,[esp+0x70]
10034bcb:	push   eax
10034bcc:	mov    BYTE PTR [esp+0x8b8],bl
10034bd3:	call   0x10047942
10034bd8:	int3   
10034bd9:	int3   
10034bda:	int3   
10034bdb:	int3   
10034bdc:	int3   
10034bdd:	int3   
10034bde:	int3   
10034bdf:	int3   
10034be0:	mov    ecx,DWORD PTR [eax]
10034be2:	push   ecx
10034be3:	call   DWORD PTR ds:0x10067078
10034be9:	ret    
10034bea:	int3   
10034beb:	int3   
10034bec:	int3   
10034bed:	int3   
10034bee:	int3   
10034bef:	int3   
10034bf0:	push   0xffffffff
10034bf2:	push   0x10061bc0
10034bf7:	mov    eax,fs:0x0
10034bfd:	push   eax
10034bfe:	sub    esp,0x4c
10034c01:	push   ebx
10034c02:	push   esi
10034c03:	mov    eax,ds:0x100801ac
10034c08:	xor    eax,esp
10034c0a:	push   eax
10034c0b:	lea    eax,[esp+0x58]
10034c0f:	mov    fs:0x0,eax
10034c15:	mov    edx,DWORD PTR [ecx]
10034c17:	xor    ebx,ebx
10034c19:	push   ebx
10034c1a:	lea    eax,[esp+0x14]
10034c1e:	push   eax
10034c1f:	push   ebx
10034c20:	push   ebx
10034c21:	push   ebx
10034c22:	push   ebx
10034c23:	push   0x22c028
10034c28:	push   edx
10034c29:	call   DWORD PTR ds:0x1006726c
10034c2f:	test   eax,eax
10034c31:	jne    0x10034cbc
10034c37:	push   0x10074b30
10034c3c:	push   0x1a
10034c3e:	mov    ecx,0x10074b58
10034c43:	call   0x100042b4
10034c48:	mov    esi,eax
10034c4a:	push   esi
10034c4b:	mov    DWORD PTR [esp+0x38],0xf
10034c53:	mov    DWORD PTR [esp+0x34],ebx
10034c57:	mov    BYTE PTR [esp+0x24],bl
10034c5b:	call   0x10043450
10034c60:	add    esp,0xc
10034c63:	push   eax
10034c64:	push   esi
10034c65:	lea    ecx,[esp+0x1c]
10034c69:	call   0x1000133b
10034c6e:	lea    ecx,[esp+0x30]
10034c72:	mov    DWORD PTR [esp+0x60],ebx
10034c76:	call   0x100432c1
10034c7b:	push   0xffffffff
10034c7d:	mov    BYTE PTR [esp+0x64],0x1
10034c82:	push   ebx
10034c83:	lea    eax,[esp+0x1c]
10034c87:	push   eax
10034c88:	lea    ecx,[esp+0x48]
10034c8c:	mov    DWORD PTR [esp+0x3c],0x10074a3c
10034c94:	mov    DWORD PTR [esp+0x60],0xf
10034c9c:	mov    DWORD PTR [esp+0x5c],ebx
10034ca0:	mov    BYTE PTR [esp+0x4c],bl
10034ca4:	call   0x10001241
10034ca9:	push   0x10076508
10034cae:	lea    ecx,[esp+0x34]
10034cb2:	push   ecx
10034cb3:	mov    BYTE PTR [esp+0x68],bl
10034cb7:	call   0x10047942
10034cbc:	mov    ecx,DWORD PTR [esp+0x58]
10034cc0:	mov    DWORD PTR fs:0x0,ecx
10034cc7:	pop    ecx
10034cc8:	pop    esi
10034cc9:	pop    ebx
10034cca:	add    esp,0x58
10034ccd:	ret    
10034cce:	int3   
10034ccf:	int3   
10034cd0:	push   0xffffffff
10034cd2:	push   0x10061d18
10034cd7:	mov    eax,fs:0x0
10034cdd:	push   eax
10034cde:	sub    esp,0x4c
10034ce1:	push   ebx
10034ce2:	push   ebp
10034ce3:	push   esi
10034ce4:	push   edi
10034ce5:	mov    eax,ds:0x100801ac
10034cea:	xor    eax,esp
10034cec:	push   eax
10034ced:	lea    eax,[esp+0x60]
10034cf1:	mov    fs:0x0,eax
10034cf7:	mov    esi,ecx
10034cf9:	xor    ebx,ebx
10034cfb:	mov    DWORD PTR [esp+0x14],ebx
10034cff:	mov    eax,DWORD PTR [esp+0x74]
10034d03:	mov    DWORD PTR [esp+0x68],ebx
10034d07:	mov    edx,DWORD PTR [esi+0x4c]
10034d0a:	mov    edi,DWORD PTR [esi+0x68]
10034d0d:	mov    eax,DWORD PTR [eax+0x14]
10034d10:	mov    ecx,DWORD PTR [esi+0x30]
10034d13:	add    edi,edx
10034d15:	add    edi,eax
10034d17:	lea    ebp,[edi+ecx*1+0x4]
10034d1b:	lea    eax,[ebp+0x20]
10034d1e:	push   eax
10034d1f:	mov    DWORD PTR [esp+0x78],eax
10034d23:	call   0x100438d7
10034d28:	mov    edi,eax
10034d2a:	add    esp,0x4
10034d2d:	cmp    edi,ebx
10034d2f:	je     0x10034d3a
10034d31:	push   ebx
10034d32:	call   0x10042fe2
10034d37:	add    esp,0x4
10034d3a:	mov    ecx,DWORD PTR [esp+0x74]
10034d3e:	push   ecx
10034d3f:	push   ebx
10034d40:	push   edi
10034d41:	mov    DWORD PTR [esp+0x20],edi
10034d45:	call   0x10045dc0
10034d4a:	mov    DWORD PTR [edi],ebp
10034d4c:	mov    eax,DWORD PTR [esi+0x70]
10034d4f:	mov    DWORD PTR [edi+0xc],eax
10034d52:	mov    edx,DWORD PTR [esi+0x78]
10034d55:	mov    DWORD PTR [edi+0x10],edx
10034d58:	mov    eax,DWORD PTR [esi+0x7c]
10034d5b:	mov    DWORD PTR [edi+0x14],eax
10034d5e:	mov    ecx,DWORD PTR [esi+0x80]
10034d64:	mov    DWORD PTR [edi+0x18],ecx
10034d67:	mov    edx,DWORD PTR [esi+0x84]
10034d6d:	mov    DWORD PTR [edi+0x1c],edx
10034d70:	add    esp,0xc
10034d73:	mov    DWORD PTR [edi+0x4],0x7
10034d7a:	cmp    DWORD PTR [esi+0x18],0x10
10034d7e:	jb     0x10034d85
10034d80:	mov    ecx,DWORD PTR [esi+0x4]
10034d83:	jmp    0x10034d88
10034d85:	lea    ecx,[esi+0x4]
10034d88:	lea    edx,[edi+0x20]
10034d8b:	jmp    0x10034d90
10034d8d:	lea    ecx,[ecx+0x0]
10034d90:	mov    al,BYTE PTR [ecx]
10034d92:	mov    BYTE PTR [edx],al
10034d94:	add    ecx,0x1
10034d97:	add    edx,0x1
10034d9a:	cmp    al,bl
10034d9c:	jne    0x10034d90
10034d9e:	cmp    DWORD PTR [esi+0x34],0x10
10034da2:	mov    ebp,DWORD PTR [esi+0x14]
10034da5:	jb     0x10034dac
10034da7:	mov    edx,DWORD PTR [esi+0x20]
10034daa:	jmp    0x10034daf
10034dac:	lea    edx,[esi+0x20]
10034daf:	lea    ecx,[edi+ebp*1+0x21]
10034db3:	mov    al,BYTE PTR [edx]
10034db5:	mov    BYTE PTR [ecx],al
10034db7:	add    edx,0x1
10034dba:	add    ecx,0x1
10034dbd:	cmp    al,bl
10034dbf:	jne    0x10034db3
10034dc1:	cmp    DWORD PTR [esi+0x50],0x10
10034dc5:	mov    eax,DWORD PTR [esi+0x30]
10034dc8:	lea    ebp,[eax+ebp*1+0x2]
10034dcc:	jb     0x10034dd3
10034dce:	mov    edx,DWORD PTR [esi+0x3c]
10034dd1:	jmp    0x10034dd6
10034dd3:	lea    edx,[esi+0x3c]
10034dd6:	lea    ecx,[edi+ebp*1+0x20]
10034dda:	lea    ebx,[ebx+0x0]
10034de0:	mov    al,BYTE PTR [edx]
10034de2:	mov    BYTE PTR [ecx],al
10034de4:	add    edx,0x1
10034de7:	add    ecx,0x1
10034dea:	cmp    al,bl
10034dec:	jne    0x10034de0
10034dee:	cmp    DWORD PTR [esi+0x6c],0x10
10034df2:	mov    eax,DWORD PTR [esi+0x4c]
10034df5:	lea    eax,[eax+ebp*1+0x1]
10034df9:	jb     0x10034e00
10034dfb:	mov    esi,DWORD PTR [esi+0x58]
10034dfe:	jmp    0x10034e03
10034e00:	add    esi,0x58
10034e03:	lea    ecx,[eax+edi*1+0x20]
10034e07:	mov    al,BYTE PTR [esi]
10034e09:	mov    BYTE PTR [ecx],al
10034e0b:	add    esi,0x1
10034e0e:	add    ecx,0x1
10034e11:	cmp    al,bl
10034e13:	jne    0x10034e07
10034e15:	mov    ecx,DWORD PTR [esp+0x74]
10034e19:	mov    edx,DWORD PTR [esp+0x70]
10034e1d:	push   ebx
10034e1e:	lea    eax,[esp+0x1c]
10034e22:	push   eax
10034e23:	mov    eax,DWORD PTR [edx]
10034e25:	push   ebx
10034e26:	push   ebx
10034e27:	push   ecx
10034e28:	push   edi
10034e29:	push   0x22c02c
10034e2e:	push   eax
10034e2f:	call   DWORD PTR ds:0x1006726c
10034e35:	test   eax,eax
10034e37:	jne    0x10034ec1
10034e3d:	push   0x10074b74
10034e42:	push   0x1e
10034e44:	mov    ecx,0x10074bac
10034e49:	call   0x100042b4
10034e4e:	mov    esi,eax
10034e50:	mov    edi,0xf
10034e55:	push   esi
10034e56:	mov    DWORD PTR [esp+0x40],edi
10034e5a:	mov    DWORD PTR [esp+0x3c],ebx
10034e5e:	mov    BYTE PTR [esp+0x2c],bl
10034e62:	call   0x10043450
10034e67:	add    esp,0xc
10034e6a:	push   eax
10034e6b:	push   esi
10034e6c:	lea    ecx,[esp+0x24]
10034e70:	call   0x1000133b
10034e75:	lea    ecx,[esp+0x38]
10034e79:	mov    BYTE PTR [esp+0x68],0x1
10034e7e:	call   0x100432c1
10034e83:	push   0xffffffff
10034e85:	mov    BYTE PTR [esp+0x6c],0x2
10034e8a:	push   ebx
10034e8b:	lea    ecx,[esp+0x24]
10034e8f:	push   ecx
10034e90:	lea    ecx,[esp+0x50]
10034e94:	mov    DWORD PTR [esp+0x44],0x10074a3c
10034e9c:	mov    DWORD PTR [esp+0x68],edi
10034ea0:	mov    DWORD PTR [esp+0x64],ebx
10034ea4:	mov    BYTE PTR [esp+0x54],bl
10034ea8:	call   0x10001241
10034ead:	push   0x10076508
10034eb2:	lea    edx,[esp+0x3c]
10034eb6:	push   edx
10034eb7:	mov    BYTE PTR [esp+0x70],0x1
10034ebc:	call   0x10047942
10034ec1:	push   edi
10034ec2:	call   0x10042fe2
10034ec7:	add    esp,0x4
10034eca:	mov    ecx,DWORD PTR [esp+0x60]
10034ece:	mov    DWORD PTR fs:0x0,ecx
10034ed5:	pop    ecx
10034ed6:	pop    edi
10034ed7:	pop    esi
10034ed8:	pop    ebp
10034ed9:	pop    ebx
10034eda:	add    esp,0x58
10034edd:	ret    0x8
10034ee0:	push   0xffffffff
10034ee2:	push   0x10061d18
10034ee7:	mov    eax,fs:0x0
10034eed:	push   eax
10034eee:	sub    esp,0x4c
10034ef1:	push   ebx
10034ef2:	push   ebp
10034ef3:	push   esi
10034ef4:	push   edi
10034ef5:	mov    eax,ds:0x100801ac
10034efa:	xor    eax,esp
10034efc:	push   eax
10034efd:	lea    eax,[esp+0x60]
10034f01:	mov    fs:0x0,eax
10034f07:	xor    ebx,ebx
10034f09:	mov    DWORD PTR [esp+0x14],ebx
10034f0d:	mov    eax,DWORD PTR [esp+0x74]
10034f11:	mov    DWORD PTR [esp+0x68],ebx
10034f15:	mov    eax,DWORD PTR [eax+0x14]
10034f18:	lea    edi,[eax+0x1]
10034f1b:	lea    ebp,[edi+0x20]
10034f1e:	push   ebp
10034f1f:	call   0x100438d7
10034f24:	mov    esi,eax
10034f26:	add    esp,0x4
10034f29:	cmp    esi,ebx
10034f2b:	je     0x10034f36
10034f2d:	push   ebx
10034f2e:	call   0x10042fe2
10034f33:	add    esp,0x4
10034f36:	push   ebp
10034f37:	push   ebx
10034f38:	push   esi
10034f39:	mov    DWORD PTR [esp+0x20],esi
10034f3d:	call   0x10045dc0
10034f42:	mov    eax,DWORD PTR [esp+0x84]
10034f49:	add    esp,0xc
10034f4c:	cmp    eax,ebx
10034f4e:	mov    DWORD PTR [esi],edi
10034f50:	je     0x10034f61
10034f52:	mov    ecx,DWORD PTR [eax]
10034f54:	mov    DWORD PTR [esi+0x10],ecx
10034f57:	mov    edx,DWORD PTR [eax+0x4]
10034f5a:	mov    DWORD PTR [esi+0x14],edx
10034f5d:	or     DWORD PTR [esi+0x4],0x2
10034f61:	mov    eax,DWORD PTR [esp+0x7c]
10034f65:	cmp    eax,ebx
10034f67:	mov    edx,0x10
10034f6c:	je     0x10034f7f
10034f6e:	mov    ecx,DWORD PTR [eax]
10034f70:	mov    DWORD PTR [esi+0x18],ecx
10034f73:	mov    eax,DWORD PTR [eax+0x4]
10034f76:	mov    DWORD PTR [esi+0x1c],eax
10034f79:	or     DWORD PTR [esi+0x4],0x4
10034f7d:	jmp    0x10034f82
10034f7f:	or     DWORD PTR [esi+0x4],edx
10034f82:	mov    ecx,DWORD PTR [esp+0x74]
10034f86:	cmp    DWORD PTR [ecx+0x18],edx
10034f89:	jb     0x10034f90
10034f8b:	mov    ecx,DWORD PTR [ecx+0x4]
10034f8e:	jmp    0x10034f93
10034f90:	add    ecx,0x4
10034f93:	lea    edx,[esi+0x20]
10034f96:	mov    al,BYTE PTR [ecx]
10034f98:	mov    BYTE PTR [edx],al
10034f9a:	add    ecx,0x1
10034f9d:	add    edx,0x1
10034fa0:	cmp    al,bl
10034fa2:	jne    0x10034f96
10034fa4:	mov    edx,DWORD PTR [esp+0x70]
10034fa8:	mov    eax,DWORD PTR [edx]
10034faa:	push   ebx
10034fab:	lea    ecx,[esp+0x1c]
10034faf:	push   ecx
10034fb0:	push   ebx
10034fb1:	push   ebx
10034fb2:	push   ebp
10034fb3:	push   esi
10034fb4:	push   0x22c02c
10034fb9:	push   eax
10034fba:	call   DWORD PTR ds:0x1006726c
10034fc0:	test   eax,eax
10034fc2:	jne    0x1003504c
10034fc8:	push   0x10074bcc
10034fcd:	push   0x1e
10034fcf:	mov    ecx,0x10074bac
10034fd4:	call   0x100042b4
10034fd9:	mov    esi,eax
10034fdb:	mov    edi,0xf
10034fe0:	push   esi
10034fe1:	mov    DWORD PTR [esp+0x40],edi
10034fe5:	mov    DWORD PTR [esp+0x3c],ebx
10034fe9:	mov    BYTE PTR [esp+0x2c],bl
10034fed:	call   0x10043450
10034ff2:	add    esp,0xc
10034ff5:	push   eax
10034ff6:	push   esi
10034ff7:	lea    ecx,[esp+0x24]
10034ffb:	call   0x1000133b
10035000:	lea    ecx,[esp+0x38]
10035004:	mov    BYTE PTR [esp+0x68],0x1
10035009:	call   0x100432c1
1003500e:	push   0xffffffff
10035010:	mov    BYTE PTR [esp+0x6c],0x2
10035015:	push   ebx
10035016:	lea    ecx,[esp+0x24]
1003501a:	push   ecx
1003501b:	lea    ecx,[esp+0x50]
1003501f:	mov    DWORD PTR [esp+0x44],0x10074a3c
10035027:	mov    DWORD PTR [esp+0x68],edi
1003502b:	mov    DWORD PTR [esp+0x64],ebx
1003502f:	mov    BYTE PTR [esp+0x54],bl
10035033:	call   0x10001241
10035038:	push   0x10076508
1003503d:	lea    edx,[esp+0x3c]
10035041:	push   edx
10035042:	mov    BYTE PTR [esp+0x70],0x1
10035047:	call   0x10047942
1003504c:	push   esi
1003504d:	call   0x10042fe2
10035052:	add    esp,0x4
10035055:	mov    ecx,DWORD PTR [esp+0x60]
10035059:	mov    DWORD PTR fs:0x0,ecx
10035060:	pop    ecx
10035061:	pop    edi
10035062:	pop    esi
10035063:	pop    ebp
10035064:	pop    ebx
10035065:	add    esp,0x58
10035068:	ret    0x10
1003506b:	int3   
1003506c:	int3   
1003506d:	int3   
1003506e:	int3   
1003506f:	int3   
10035070:	push   0xffffffff
10035072:	push   0x10061ce0
10035077:	mov    eax,fs:0x0
1003507d:	push   eax
1003507e:	sub    esp,0x50
10035081:	push   ebx
10035082:	push   ebp
10035083:	push   esi
10035084:	push   edi
10035085:	mov    eax,ds:0x100801ac
1003508a:	xor    eax,esp
1003508c:	push   eax
1003508d:	lea    eax,[esp+0x64]
10035091:	mov    fs:0x0,eax
10035097:	mov    ebp,DWORD PTR [esp+0x78]
1003509b:	mov    eax,DWORD PTR [ebp+0x14]
1003509e:	lea    esi,[eax+0x1]
100350a1:	lea    eax,[esi+0xe8]
100350a7:	push   eax
100350a8:	call   0x100438d7
100350ad:	mov    edi,eax
100350af:	add    esp,0x4
100350b2:	mov    DWORD PTR [esp+0x14],edi
100350b6:	xor    ebx,ebx
100350b8:	mov    DWORD PTR [esp+0x6c],ebx
100350bc:	mov    DWORD PTR [edi],esi
100350be:	mov    DWORD PTR [edi+0x4],ebx
100350c1:	cmp    DWORD PTR [ebp+0x18],0x10
100350c5:	jb     0x100350cc
100350c7:	mov    ecx,DWORD PTR [ebp+0x4]
100350ca:	jmp    0x100350cf
100350cc:	lea    ecx,[ebp+0x4]
100350cf:	lea    edx,[edi+0x20]
100350d2:	mov    al,BYTE PTR [ecx]
100350d4:	mov    BYTE PTR [edx],al
100350d6:	add    ecx,0x1
100350d9:	add    edx,0x1
100350dc:	cmp    al,bl
100350de:	jne    0x100350d2
100350e0:	mov    eax,DWORD PTR [edi]
100350e2:	mov    edx,DWORD PTR [esp+0x74]
100350e6:	push   ebx
100350e7:	add    eax,0x20
100350ea:	lea    ecx,[esp+0x1c]
100350ee:	push   ecx
100350ef:	push   eax
100350f0:	push   edi
100350f1:	push   eax
100350f2:	mov    eax,DWORD PTR [edx]
100350f4:	push   edi
100350f5:	push   0x22c030
100350fa:	push   eax
100350fb:	call   DWORD PTR ds:0x1006726c
10035101:	test   eax,eax
10035103:	jne    0x1003518d
10035109:	push   0x10074c0c
1003510e:	push   0x1e
10035110:	mov    ecx,0x10074c38
10035115:	call   0x100042b4
1003511a:	mov    esi,eax
1003511c:	mov    edi,0xf
10035121:	push   esi
10035122:	mov    DWORD PTR [esp+0x40],edi
10035126:	mov    DWORD PTR [esp+0x3c],ebx
1003512a:	mov    BYTE PTR [esp+0x2c],bl
1003512e:	call   0x10043450
10035133:	add    esp,0xc
10035136:	push   eax
10035137:	push   esi
10035138:	lea    ecx,[esp+0x24]
1003513c:	call   0x1000133b
10035141:	lea    ecx,[esp+0x38]
10035145:	mov    BYTE PTR [esp+0x6c],0x1
1003514a:	call   0x100432c1
1003514f:	push   0xffffffff
10035151:	mov    BYTE PTR [esp+0x70],0x2
10035156:	push   ebx
10035157:	lea    ecx,[esp+0x24]
1003515b:	push   ecx
1003515c:	lea    ecx,[esp+0x50]
10035160:	mov    DWORD PTR [esp+0x44],0x10074a3c
10035168:	mov    DWORD PTR [esp+0x68],edi
1003516c:	mov    DWORD PTR [esp+0x64],ebx
10035170:	mov    BYTE PTR [esp+0x54],bl
10035174:	call   0x10001241
10035179:	push   0x10076508
1003517e:	lea    edx,[esp+0x3c]
10035182:	push   edx
10035183:	mov    BYTE PTR [esp+0x74],0x1
10035188:	call   0x10047942
1003518d:	cmp    DWORD PTR [edi+0x8],0x2
10035191:	je     0x100351b4
10035193:	cmp    DWORD PTR [edi+0x8],0x1
10035197:	jne    0x100352b7
1003519d:	push   edi
1003519e:	call   0x10042fe2
100351a3:	add    esp,0x4
100351a6:	xor    al,al
100351a8:	jmp    0x1003540d
100351ad:	lea    ecx,[ecx+0x0]
100351b0:	mov    ebp,DWORD PTR [esp+0x78]
100351b4:	mov    eax,DWORD PTR [ebp+0x14]
100351b7:	mov    ebp,DWORD PTR [edi]
100351b9:	lea    ecx,[eax+0x1]
100351bc:	cmp    ebp,ecx
100351be:	ja     0x100351c3
100351c0:	lea    ebp,[eax+0x1]
100351c3:	lea    edx,[ebp+0x20]
100351c6:	push   edx
100351c7:	call   0x100438d7
100351cc:	mov    esi,eax
100351ce:	add    esp,0x4
100351d1:	cmp    esi,edi
100351d3:	je     0x100351de
100351d5:	push   edi
100351d6:	call   0x10042fe2
100351db:	add    esp,0x4
100351de:	mov    ecx,DWORD PTR [esp+0x78]
100351e2:	mov    edi,esi
100351e4:	mov    DWORD PTR [esi],ebp
100351e6:	mov    DWORD PTR [esp+0x14],edi
100351ea:	mov    DWORD PTR [esi+0x4],ebx
100351ed:	call   0x100011ef
100351f2:	lea    edx,[esi+0x20]
100351f5:	mov    cl,BYTE PTR [eax]
100351f7:	mov    BYTE PTR [edx],cl
100351f9:	add    eax,0x1
100351fc:	add    edx,0x1
100351ff:	cmp    cl,bl
10035201:	jne    0x100351f5
10035203:	mov    eax,DWORD PTR [esi]
10035205:	mov    edx,DWORD PTR [esp+0x74]
10035209:	push   ebx
1003520a:	add    eax,0x20
1003520d:	lea    ecx,[esp+0x1c]
10035211:	push   ecx
10035212:	push   eax
10035213:	push   esi
10035214:	push   eax
10035215:	mov    eax,DWORD PTR [edx]
10035217:	push   esi
10035218:	push   0x22c030
1003521d:	push   eax
1003521e:	call   DWORD PTR ds:0x1006726c
10035224:	test   eax,eax
10035226:	je     0x10035233
10035228:	cmp    DWORD PTR [esi+0x8],0x2
1003522c:	je     0x100351b0
1003522e:	jmp    0x10035193
10035233:	push   0x10074c58
10035238:	push   0x1e
1003523a:	mov    ecx,0x10074c38
1003523f:	call   0x100042b4
10035244:	mov    esi,eax
10035246:	mov    edi,0xf
1003524b:	push   esi
1003524c:	mov    DWORD PTR [esp+0x40],edi
10035250:	mov    DWORD PTR [esp+0x3c],ebx
10035254:	mov    BYTE PTR [esp+0x2c],bl
10035258:	call   0x10043450
1003525d:	add    esp,0xc
10035260:	push   eax
10035261:	push   esi
10035262:	lea    ecx,[esp+0x24]
10035266:	call   0x1000133b
1003526b:	lea    ecx,[esp+0x38]
1003526f:	mov    BYTE PTR [esp+0x6c],0x3
10035274:	call   0x100432c1
10035279:	push   0xffffffff
1003527b:	mov    BYTE PTR [esp+0x70],0x4
10035280:	push   ebx
10035281:	lea    ecx,[esp+0x24]
10035285:	push   ecx
10035286:	lea    ecx,[esp+0x50]
1003528a:	mov    DWORD PTR [esp+0x44],0x10074a3c
10035292:	mov    DWORD PTR [esp+0x68],edi
10035296:	mov    DWORD PTR [esp+0x64],ebx
1003529a:	mov    BYTE PTR [esp+0x54],bl
1003529e:	call   0x10001241
100352a3:	push   0x10076508
100352a8:	lea    edx,[esp+0x3c]
100352ac:	push   edx
100352ad:	mov    BYTE PTR [esp+0x74],0x3
100352b2:	call   0x10047942
100352b7:	lea    eax,[edi+0x20]
100352ba:	lea    edx,[eax+0x1]
100352bd:	lea    ecx,[ecx+0x0]
100352c0:	mov    cl,BYTE PTR [eax]
100352c2:	add    eax,0x1
100352c5:	cmp    cl,bl
100352c7:	jne    0x100352c0
100352c9:	sub    eax,edx
100352cb:	mov    esi,eax
100352cd:	lea    ebp,[esi+edi*1+0x21]
100352d1:	push   ebp
100352d2:	mov    DWORD PTR [esp+0x38],0xf
100352da:	mov    DWORD PTR [esp+0x34],ebx
100352de:	mov    BYTE PTR [esp+0x24],bl
100352e2:	call   0x10043450
100352e7:	add    esp,0x4
100352ea:	push   eax
100352eb:	push   ebp
100352ec:	lea    ecx,[esp+0x24]
100352f0:	call   0x1000133b
100352f5:	mov    ebp,DWORD PTR [esp+0x7c]
100352f9:	push   0xffffffff
100352fb:	push   ebx
100352fc:	lea    eax,[esp+0x24]
10035300:	push   eax
10035301:	lea    ecx,[ebp+0x1c]
10035304:	mov    BYTE PTR [esp+0x78],0x5
10035309:	call   0x10001241
1003530e:	mov    BYTE PTR [esp+0x6c],bl
10035312:	cmp    DWORD PTR [esp+0x34],0x10
10035317:	jb     0x10035326
10035319:	mov    ecx,DWORD PTR [esp+0x20]
1003531d:	push   ecx
1003531e:	call   0x10042fe2
10035323:	add    esp,0x4
10035326:	mov    eax,DWORD PTR [ebp+0x30]
10035329:	lea    esi,[esi+eax*1+0x2]
1003532d:	lea    ebp,[esi+edi*1+0x20]
10035331:	push   ebp
10035332:	mov    DWORD PTR [esp+0x38],0xf
1003533a:	mov    DWORD PTR [esp+0x34],ebx
1003533e:	mov    BYTE PTR [esp+0x24],bl
10035342:	call   0x10043450
10035347:	add    esp,0x4
1003534a:	push   eax
1003534b:	push   ebp
1003534c:	lea    ecx,[esp+0x24]
10035350:	call   0x1000133b
10035355:	mov    ebp,DWORD PTR [esp+0x7c]
10035359:	push   0xffffffff
1003535b:	push   ebx
1003535c:	lea    edx,[esp+0x24]
10035360:	push   edx
10035361:	lea    ecx,[ebp+0x38]
10035364:	mov    BYTE PTR [esp+0x78],0x6
10035369:	call   0x10001241
1003536e:	mov    BYTE PTR [esp+0x6c],bl
10035372:	cmp    DWORD PTR [esp+0x34],0x10
10035377:	jb     0x10035386
10035379:	mov    eax,DWORD PTR [esp+0x20]
1003537d:	push   eax
1003537e:	call   0x10042fe2
10035383:	add    esp,0x4
10035386:	mov    eax,DWORD PTR [ebp+0x4c]
10035389:	lea    esi,[esi+eax*1+0x1]
1003538d:	lea    esi,[esi+edi*1+0x20]
10035391:	push   esi
10035392:	mov    DWORD PTR [esp+0x38],0xf
1003539a:	mov    DWORD PTR [esp+0x34],ebx
1003539e:	mov    BYTE PTR [esp+0x24],bl
100353a2:	call   0x10043450
100353a7:	add    esp,0x4
100353aa:	push   eax
100353ab:	push   esi
100353ac:	lea    ecx,[esp+0x24]
100353b0:	call   0x1000133b
100353b5:	push   0xffffffff
100353b7:	push   ebx
100353b8:	lea    ecx,[esp+0x24]
100353bc:	push   ecx
100353bd:	lea    ecx,[ebp+0x54]
100353c0:	mov    BYTE PTR [esp+0x78],0x7
100353c5:	call   0x10001241
100353ca:	cmp    DWORD PTR [esp+0x34],0x10
100353cf:	jb     0x100353de
100353d1:	mov    edx,DWORD PTR [esp+0x20]
100353d5:	push   edx
100353d6:	call   0x10042fe2
100353db:	add    esp,0x4
100353de:	mov    eax,DWORD PTR [edi+0xc]
100353e1:	mov    DWORD PTR [ebp+0x70],eax
100353e4:	mov    ecx,DWORD PTR [edi+0x10]
100353e7:	mov    DWORD PTR [ebp+0x78],ecx
100353ea:	mov    edx,DWORD PTR [edi+0x14]
100353ed:	mov    DWORD PTR [ebp+0x7c],edx
100353f0:	mov    eax,DWORD PTR [edi+0x18]
100353f3:	mov    DWORD PTR [ebp+0x80],eax
100353f9:	mov    ecx,DWORD PTR [edi+0x1c]
100353fc:	push   edi
100353fd:	mov    DWORD PTR [ebp+0x84],ecx
10035403:	call   0x10042fe2
10035408:	add    esp,0x4
1003540b:	mov    al,0x1
1003540d:	mov    ecx,DWORD PTR [esp+0x64]
10035411:	mov    DWORD PTR fs:0x0,ecx
10035418:	pop    ecx
10035419:	pop    edi
1003541a:	pop    esi
1003541b:	pop    ebp
1003541c:	pop    ebx
1003541d:	add    esp,0x5c
10035420:	ret    0xc
10035423:	int3   
10035424:	int3   
10035425:	int3   
10035426:	int3   
10035427:	int3   
10035428:	int3   
10035429:	int3   
1003542a:	int3   
1003542b:	int3   
1003542c:	int3   
1003542d:	int3   
1003542e:	int3   
1003542f:	int3   
10035430:	push   ebp
10035431:	mov    ebp,esp
10035433:	and    esp,0xfffffff8
10035436:	push   0xffffffff
10035438:	push   0x10061c78
1003543d:	mov    eax,fs:0x0
10035443:	push   eax
10035444:	sub    esp,0x58
10035447:	push   ebx
10035448:	push   esi
10035449:	push   edi
1003544a:	mov    eax,ds:0x100801ac
1003544f:	xor    eax,esp
10035451:	push   eax
10035452:	lea    eax,[esp+0x68]
10035456:	mov    fs:0x0,eax
1003545c:	mov    ebx,ecx
1003545e:	xor    eax,eax
10035460:	mov    DWORD PTR [esp+0x18],eax
10035464:	mov    ecx,DWORD PTR [ebp+0xc]
10035467:	mov    DWORD PTR [esp+0x70],eax
1003546b:	mov    eax,DWORD PTR [ebx+0x14]
1003546e:	mov    ecx,DWORD PTR [ecx+0x14]
10035471:	lea    edi,[eax+ecx*1+0x4]
10035475:	lea    eax,[edi+0xc]
10035478:	push   eax
10035479:	mov    DWORD PTR [esp+0x18],eax
1003547d:	call   0x100438d7
10035482:	mov    esi,eax
10035484:	add    esp,0x4
10035487:	test   esi,esi
10035489:	je     0x10035495
1003548b:	push   0x0
1003548d:	call   0x10042fe2
10035492:	add    esp,0x4
10035495:	mov    edx,DWORD PTR [esp+0x14]
10035499:	push   edx
1003549a:	push   0x0
1003549c:	push   esi
1003549d:	mov    DWORD PTR [esp+0x24],esi
100354a1:	call   0x10045dc0
100354a6:	mov    DWORD PTR [esi],edi
100354a8:	mov    edi,0x10
100354ad:	add    esp,0xc
100354b0:	cmp    DWORD PTR [ebx+0x18],edi
100354b3:	jb     0x100354ba
100354b5:	mov    ecx,DWORD PTR [ebx+0x4]
100354b8:	jmp    0x100354bd
100354ba:	lea    ecx,[ebx+0x4]
100354bd:	lea    edx,[esi+0xc]
100354c0:	mov    al,BYTE PTR [ecx]
100354c2:	mov    BYTE PTR [edx],al
100354c4:	add    ecx,0x1
100354c7:	add    edx,0x1
100354ca:	test   al,al
100354cc:	jne    0x100354c0
100354ce:	mov    edx,DWORD PTR [ebp+0xc]
100354d1:	cmp    DWORD PTR [edx+0x18],edi
100354d4:	mov    ebx,DWORD PTR [ebx+0x14]
100354d7:	jb     0x100354de
100354d9:	mov    edx,DWORD PTR [edx+0x4]
100354dc:	jmp    0x100354e1
100354de:	add    edx,0x4
100354e1:	lea    ecx,[ebx+esi*1+0xd]
100354e5:	mov    al,BYTE PTR [edx]
100354e7:	mov    BYTE PTR [ecx],al
100354e9:	add    edx,0x1
100354ec:	add    ecx,0x1
100354ef:	test   al,al
100354f1:	jne    0x100354e5
100354f3:	mov    ecx,DWORD PTR [esp+0x14]
100354f7:	mov    edx,DWORD PTR [ebp+0x8]
100354fa:	xor    ebx,ebx
100354fc:	push   ebx
100354fd:	lea    eax,[esp+0x20]
10035501:	push   eax
10035502:	mov    eax,DWORD PTR [edx]
10035504:	push   ebx
10035505:	push   ebx
10035506:	push   ecx
10035507:	push   esi
10035508:	push   0x22c084
1003550d:	push   eax
1003550e:	call   DWORD PTR ds:0x1006726c
10035514:	test   eax,eax
10035516:	jne    0x100355a0
1003551c:	push   0x10074c98
10035521:	push   0x16
10035523:	mov    ecx,0x10074cbc
10035528:	call   0x100042b4
1003552d:	mov    esi,eax
1003552f:	mov    edi,0xf
10035534:	push   esi
10035535:	mov    DWORD PTR [esp+0x44],edi
10035539:	mov    DWORD PTR [esp+0x40],ebx
1003553d:	mov    BYTE PTR [esp+0x30],bl
10035541:	call   0x10043450
10035546:	add    esp,0xc
10035549:	push   eax
1003554a:	push   esi
1003554b:	lea    ecx,[esp+0x28]
1003554f:	call   0x1000133b
10035554:	lea    ecx,[esp+0x3c]
10035558:	mov    BYTE PTR [esp+0x70],0x1
1003555d:	call   0x100432c1
10035562:	push   0xffffffff
10035564:	mov    BYTE PTR [esp+0x74],0x2
10035569:	push   ebx
1003556a:	lea    ecx,[esp+0x28]
1003556e:	push   ecx
1003556f:	lea    ecx,[esp+0x54]
10035573:	mov    DWORD PTR [esp+0x48],0x10074a3c
1003557b:	mov    DWORD PTR [esp+0x6c],edi
1003557f:	mov    DWORD PTR [esp+0x68],ebx
10035583:	mov    BYTE PTR [esp+0x58],bl
10035587:	call   0x10001241
1003558c:	push   0x10076508
10035591:	lea    edx,[esp+0x40]
10035595:	push   edx
10035596:	mov    BYTE PTR [esp+0x78],0x1
1003559b:	call   0x10047942
100355a0:	push   esi
100355a1:	call   0x10042fe2
100355a6:	add    esp,0x4
100355a9:	mov    ecx,DWORD PTR [esp+0x68]
100355ad:	mov    DWORD PTR fs:0x0,ecx
100355b4:	pop    ecx
100355b5:	pop    edi
100355b6:	pop    esi
100355b7:	pop    ebx
100355b8:	mov    esp,ebp
100355ba:	pop    ebp
100355bb:	ret    0x8
100355be:	int3   
100355bf:	int3   
100355c0:	push   ebp
100355c1:	mov    ebp,esp
100355c3:	and    esp,0xfffffff8
100355c6:	push   0xffffffff
100355c8:	push   0x10061c38
100355cd:	mov    eax,fs:0x0
100355d3:	push   eax
100355d4:	sub    esp,0x50
100355d7:	push   ebx
100355d8:	push   esi
100355d9:	push   edi
100355da:	mov    eax,ds:0x100801ac
100355df:	xor    eax,esp
100355e1:	push   eax
100355e2:	lea    eax,[esp+0x60]
100355e6:	mov    fs:0x0,eax
100355ec:	mov    ebx,DWORD PTR [ebp+0x10]
100355ef:	mov    DWORD PTR [esp+0x14],0x0
100355f7:	mov    esi,DWORD PTR [ebx+0x14]
100355fa:	lea    eax,[esi+0x40d]
10035600:	push   eax
10035601:	call   0x100438d7
10035606:	mov    edi,eax
10035608:	add    esp,0x4
1003560b:	mov    DWORD PTR [esp+0x10],edi
1003560f:	add    esi,0x401
10035615:	mov    DWORD PTR [esp+0x68],0x0
1003561d:	mov    DWORD PTR [edi],esi
1003561f:	cmp    DWORD PTR [ebx+0x18],0x10
10035623:	jb     0x1003562a
10035625:	mov    ecx,DWORD PTR [ebx+0x4]
10035628:	jmp    0x1003562d
1003562a:	lea    ecx,[ebx+0x4]
1003562d:	lea    edx,[edi+0xc]
10035630:	mov    al,BYTE PTR [ecx]
10035632:	mov    BYTE PTR [edx],al
10035634:	add    ecx,0x1
10035637:	add    edx,0x1
1003563a:	test   al,al
1003563c:	jne    0x10035630
1003563e:	mov    eax,DWORD PTR [edi]
10035640:	mov    edx,DWORD PTR [ebp+0x8]
10035643:	push   0x0
10035645:	add    eax,0xc
10035648:	lea    ecx,[esp+0x18]
1003564c:	push   ecx
1003564d:	push   eax
1003564e:	push   edi
1003564f:	push   eax
10035650:	mov    eax,DWORD PTR [edx]
10035652:	push   edi
10035653:	push   0x22c088
10035658:	push   eax
10035659:	call   DWORD PTR ds:0x1006726c
1003565f:	test   eax,eax
10035661:	jne    0x100356ed
10035667:	push   0x10074cd4
1003566c:	push   0x1b
1003566e:	mov    ecx,0x10074d14
10035673:	call   0x100042b4
10035678:	mov    esi,eax
1003567a:	xor    ebx,ebx
1003567c:	mov    edi,0xf
10035681:	push   esi
10035682:	mov    DWORD PTR [esp+0x3c],edi
10035686:	mov    DWORD PTR [esp+0x38],ebx
1003568a:	mov    BYTE PTR [esp+0x28],bl
1003568e:	call   0x10043450
10035693:	add    esp,0xc
10035696:	push   eax
10035697:	push   esi
10035698:	lea    ecx,[esp+0x20]
1003569c:	call   0x1000133b
100356a1:	lea    ecx,[esp+0x34]
100356a5:	mov    BYTE PTR [esp+0x68],0x1
100356aa:	call   0x100432c1
100356af:	push   0xffffffff
100356b1:	mov    BYTE PTR [esp+0x6c],0x2
100356b6:	push   ebx
100356b7:	lea    ecx,[esp+0x20]
100356bb:	push   ecx
100356bc:	lea    ecx,[esp+0x4c]
100356c0:	mov    DWORD PTR [esp+0x40],0x10074a3c
100356c8:	mov    DWORD PTR [esp+0x64],edi
100356cc:	mov    DWORD PTR [esp+0x60],ebx
100356d0:	mov    BYTE PTR [esp+0x50],bl
100356d4:	call   0x10001241
100356d9:	push   0x10076508
100356de:	lea    edx,[esp+0x38]
100356e2:	push   edx
100356e3:	mov    BYTE PTR [esp+0x70],0x1
100356e8:	call   0x10047942
100356ed:	cmp    DWORD PTR [edi+0x8],0x2
100356f1:	je     0x10035733
100356f3:	cmp    DWORD PTR [edi+0x8],0x0
100356f7:	je     0x1003583d
100356fd:	mov    esi,DWORD PTR [ebp+0xc]
10035700:	mov    DWORD PTR [esi+0x18],0xf
10035707:	mov    DWORD PTR [esi+0x14],0x0
1003570e:	push   0x1006dd18
10035713:	mov    BYTE PTR [esi+0x4],0x0
10035717:	call   0x10043450
1003571c:	add    esp,0x4
1003571f:	push   eax
10035720:	push   0x1006dd18
10035725:	jmp    0x10035871
1003572a:	lea    ebx,[ebx+0x0]
10035730:	mov    ebx,DWORD PTR [ebp+0x10]
10035733:	mov    eax,DWORD PTR [ebx+0x14]
10035736:	mov    ebx,DWORD PTR [edi]
10035738:	lea    ecx,[eax+0x1]
1003573b:	cmp    ebx,ecx
1003573d:	ja     0x10035742
1003573f:	lea    ebx,[eax+0x1]
10035742:	lea    edx,[ebx+0xc]
10035745:	push   edx
10035746:	call   0x100438d7
1003574b:	mov    esi,eax
1003574d:	add    esp,0x4
10035750:	cmp    esi,edi
10035752:	je     0x1003575d
10035754:	push   edi
10035755:	call   0x10042fe2
1003575a:	add    esp,0x4
1003575d:	mov    ecx,DWORD PTR [ebp+0x10]
10035760:	mov    edi,esi
10035762:	mov    DWORD PTR [esp+0x10],edi
10035766:	mov    DWORD PTR [esi],ebx
10035768:	call   0x100011ef
1003576d:	lea    edx,[esi+0xc]
10035770:	mov    cl,BYTE PTR [eax]
10035772:	mov    BYTE PTR [edx],cl
10035774:	add    eax,0x1
10035777:	add    edx,0x1
1003577a:	test   cl,cl
1003577c:	jne    0x10035770
1003577e:	mov    eax,DWORD PTR [esi]
10035780:	mov    edx,DWORD PTR [ebp+0x8]
10035783:	push   0x0
10035785:	add    eax,0xc
10035788:	lea    ecx,[esp+0x18]
1003578c:	push   ecx
1003578d:	push   eax
1003578e:	push   esi
1003578f:	push   eax
10035790:	mov    eax,DWORD PTR [edx]
10035792:	push   esi
10035793:	push   0x22c088
10035798:	push   eax
10035799:	call   DWORD PTR ds:0x1006726c
1003579f:	test   eax,eax
100357a1:	je     0x100357ae
100357a3:	cmp    DWORD PTR [esi+0x8],0x2
100357a7:	je     0x10035730
100357a9:	jmp    0x100356f3
100357ae:	push   0x10074d30
100357b3:	push   0x16
100357b5:	mov    ecx,0x10074d68
100357ba:	call   0x100042b4
100357bf:	mov    esi,eax
100357c1:	mov    edi,0xf
100357c6:	push   esi
100357c7:	mov    DWORD PTR [esp+0x3c],edi
100357cb:	mov    DWORD PTR [esp+0x38],0x0
100357d3:	mov    BYTE PTR [esp+0x28],0x0
100357d8:	call   0x10043450
100357dd:	add    esp,0xc
100357e0:	push   eax
100357e1:	push   esi
100357e2:	lea    ecx,[esp+0x20]
100357e6:	call   0x1000133b
100357eb:	mov    bl,0x3
100357ed:	lea    ecx,[esp+0x34]
100357f1:	mov    BYTE PTR [esp+0x68],bl
100357f5:	call   0x100432c1
100357fa:	push   0xffffffff
100357fc:	mov    BYTE PTR [esp+0x6c],0x4
10035801:	push   0x0
10035803:	lea    ecx,[esp+0x20]
10035807:	push   ecx
10035808:	lea    ecx,[esp+0x4c]
1003580c:	mov    DWORD PTR [esp+0x40],0x10074a3c
10035814:	mov    DWORD PTR [esp+0x64],edi
10035818:	mov    DWORD PTR [esp+0x60],0x0
10035820:	mov    BYTE PTR [esp+0x50],0x0
10035825:	call   0x10001241
1003582a:	push   0x10076508
1003582f:	lea    edx,[esp+0x38]
10035833:	push   edx
10035834:	mov    BYTE PTR [esp+0x70],bl
10035838:	call   0x10047942
1003583d:	lea    eax,[edi+0xc]
10035840:	lea    edx,[eax+0x1]
10035843:	mov    cl,BYTE PTR [eax]
10035845:	add    eax,0x1
10035848:	test   cl,cl
1003584a:	jne    0x10035843
1003584c:	mov    esi,DWORD PTR [ebp+0xc]
1003584f:	sub    eax,edx
10035851:	lea    ebx,[eax+edi*1+0xd]
10035855:	mov    DWORD PTR [esi+0x18],0xf
1003585c:	mov    DWORD PTR [esi+0x14],0x0
10035863:	push   ebx
10035864:	mov    BYTE PTR [esi+0x4],cl
10035867:	call   0x10043450
1003586c:	add    esp,0x4
1003586f:	push   eax
10035870:	push   ebx
10035871:	mov    ecx,esi
10035873:	call   0x1000133b
10035878:	push   edi
10035879:	call   0x10042fe2
1003587e:	mov    eax,esi
10035880:	add    esp,0x4
10035883:	mov    ecx,DWORD PTR [esp+0x60]
10035887:	mov    DWORD PTR fs:0x0,ecx
1003588e:	pop    ecx
1003588f:	pop    edi
10035890:	pop    esi
10035891:	pop    ebx
10035892:	mov    esp,ebp
10035894:	pop    ebp
10035895:	ret    0xc
10035898:	int3   
10035899:	int3   
1003589a:	int3   
1003589b:	int3   
1003589c:	int3   
1003589d:	int3   
1003589e:	int3   
1003589f:	int3   
100358a0:	push   ebp
100358a1:	mov    ebp,esp
100358a3:	and    esp,0xfffffff8
100358a6:	push   0xffffffff
100358a8:	push   0x10061bf0
100358ad:	mov    eax,fs:0x0
100358b3:	push   eax
100358b4:	sub    esp,0x64
100358b7:	push   ebx
100358b8:	push   esi
100358b9:	mov    eax,ds:0x100801ac
100358be:	xor    eax,esp
100358c0:	push   eax
100358c1:	lea    eax,[esp+0x70]
100358c5:	mov    fs:0x0,eax
100358cb:	mov    esi,ecx
100358cd:	mov    eax,DWORD PTR [ebp+0xc]
100358d0:	xor    ebx,ebx
100358d2:	push   ebx
100358d3:	lea    ecx,[esp+0x14]
100358d7:	push   ecx
100358d8:	mov    ecx,DWORD PTR [ebp+0x8]
100358db:	push   0x10
100358dd:	lea    edx,[esp+0x20]
100358e1:	push   edx
100358e2:	push   0x10
100358e4:	mov    DWORD PTR [esp+0x28],eax
100358e8:	mov    eax,edx
100358ea:	mov    edx,DWORD PTR [ecx]
100358ec:	push   eax
100358ed:	push   0x22c020
100358f2:	push   edx
100358f3:	call   DWORD PTR ds:0x1006726c
100358f9:	test   eax,eax
100358fb:	jne    0x10035989
10035901:	push   0x10074d80
10035906:	push   0x1e
10035908:	mov    ecx,0x10074da4
1003590d:	call   0x100042b4
10035912:	mov    esi,eax
10035914:	push   esi
10035915:	mov    DWORD PTR [esp+0x4c],0xf
1003591d:	mov    DWORD PTR [esp+0x48],ebx
10035921:	mov    BYTE PTR [esp+0x38],bl
10035925:	call   0x10043450
1003592a:	add    esp,0xc
1003592d:	push   eax
1003592e:	push   esi
1003592f:	lea    ecx,[esp+0x30]
10035933:	call   0x1000133b
10035938:	lea    ecx,[esp+0x44]
1003593c:	mov    DWORD PTR [esp+0x78],ebx
10035940:	call   0x100432c1
10035945:	push   0xffffffff
10035947:	mov    BYTE PTR [esp+0x7c],0x1
1003594c:	push   ebx
1003594d:	lea    eax,[esp+0x30]
10035951:	push   eax
10035952:	lea    ecx,[esp+0x5c]
10035956:	mov    DWORD PTR [esp+0x50],0x10074a3c
1003595e:	mov    DWORD PTR [esp+0x74],0xf
10035966:	mov    DWORD PTR [esp+0x70],ebx
1003596a:	mov    BYTE PTR [esp+0x60],bl
1003596e:	call   0x10001241
10035973:	push   0x10076508
10035978:	lea    ecx,[esp+0x48]
1003597c:	push   ecx
1003597d:	mov    BYTE PTR [esp+0x80],bl
10035984:	call   0x10047942
10035989:	mov    eax,DWORD PTR [esp+0x20]
1003598d:	mov    edx,DWORD PTR [esp+0x1c]
10035991:	mov    DWORD PTR [esi+0x4],eax
10035994:	mov    DWORD PTR [esi],edx
10035996:	mov    eax,esi
10035998:	mov    ecx,DWORD PTR [esp+0x70]
1003599c:	mov    DWORD PTR fs:0x0,ecx
100359a3:	pop    ecx
100359a4:	pop    esi
100359a5:	pop    ebx
100359a6:	mov    esp,ebp
100359a8:	pop    ebp
100359a9:	ret    0x8
100359ac:	int3   
100359ad:	int3   
100359ae:	int3   
100359af:	int3   
100359b0:	push   ebp
100359b1:	mov    ebp,esp
100359b3:	and    esp,0xfffffff8
100359b6:	push   0xffffffff
100359b8:	push   0x10061bf0
100359bd:	mov    eax,fs:0x0
100359c3:	push   eax
100359c4:	sub    esp,0x64
100359c7:	push   ebx
100359c8:	push   esi
100359c9:	mov    eax,ds:0x100801ac
100359ce:	xor    eax,esp
100359d0:	push   eax
100359d1:	lea    eax,[esp+0x70]
100359d5:	mov    fs:0x0,eax
100359db:	mov    eax,DWORD PTR [ebp+0xc]
100359de:	mov    edx,DWORD PTR [eax]
100359e0:	mov    eax,DWORD PTR [eax+0x4]
100359e3:	mov    DWORD PTR [esp+0x14],ecx
100359e7:	xor    ebx,ebx
100359e9:	push   ebx
100359ea:	lea    ecx,[esp+0x14]
100359ee:	push   ecx
100359ef:	mov    ecx,DWORD PTR [ebp+0x8]
100359f2:	push   0x10
100359f4:	mov    DWORD PTR [esp+0x28],edx
100359f8:	lea    edx,[esp+0x20]
100359fc:	push   edx
100359fd:	push   0x10
100359ff:	mov    DWORD PTR [esp+0x34],eax
10035a03:	mov    eax,edx
10035a05:	mov    edx,DWORD PTR [ecx]
10035a07:	push   eax
10035a08:	push   0x22c024
10035a0d:	push   edx
10035a0e:	call   DWORD PTR ds:0x1006726c
10035a14:	test   eax,eax
10035a16:	jne    0x10035aa4
10035a1c:	push   0x10074dc4
10035a21:	push   0x1e
10035a23:	mov    ecx,0x10074dfc
10035a28:	call   0x100042b4
10035a2d:	mov    esi,eax
10035a2f:	push   esi
10035a30:	mov    DWORD PTR [esp+0x4c],0xf
10035a38:	mov    DWORD PTR [esp+0x48],ebx
10035a3c:	mov    BYTE PTR [esp+0x38],bl
10035a40:	call   0x10043450
10035a45:	add    esp,0xc
10035a48:	push   eax
10035a49:	push   esi
10035a4a:	lea    ecx,[esp+0x30]
10035a4e:	call   0x1000133b
10035a53:	lea    ecx,[esp+0x44]
10035a57:	mov    DWORD PTR [esp+0x78],ebx
10035a5b:	call   0x100432c1
10035a60:	push   0xffffffff
10035a62:	mov    BYTE PTR [esp+0x7c],0x1
10035a67:	push   ebx
10035a68:	lea    eax,[esp+0x30]
10035a6c:	push   eax
10035a6d:	lea    ecx,[esp+0x5c]
10035a71:	mov    DWORD PTR [esp+0x50],0x10074a3c
10035a79:	mov    DWORD PTR [esp+0x74],0xf
10035a81:	mov    DWORD PTR [esp+0x70],ebx
10035a85:	mov    BYTE PTR [esp+0x60],bl
10035a89:	call   0x10001241
10035a8e:	push   0x10076508
10035a93:	lea    ecx,[esp+0x48]
10035a97:	push   ecx
10035a98:	mov    BYTE PTR [esp+0x80],bl
10035a9f:	call   0x10047942
10035aa4:	mov    ecx,DWORD PTR [esp+0x70]
10035aa8:	mov    DWORD PTR fs:0x0,ecx
10035aaf:	pop    ecx
10035ab0:	pop    esi
10035ab1:	pop    ebx
10035ab2:	mov    esp,ebp
10035ab4:	pop    ebp
10035ab5:	ret    0x8
10035ab8:	int3   
10035ab9:	int3   
10035aba:	int3   
10035abb:	int3   
10035abc:	int3   
10035abd:	int3   
10035abe:	int3   
10035abf:	int3   
10035ac0:	push   0xffffffff
10035ac2:	push   0x10061bc0
10035ac7:	mov    eax,fs:0x0
10035acd:	push   eax
10035ace:	sub    esp,0x4c
10035ad1:	push   ebx
10035ad2:	push   esi
10035ad3:	mov    eax,ds:0x100801ac
10035ad8:	xor    eax,esp
10035ada:	push   eax
10035adb:	lea    eax,[esp+0x58]
10035adf:	mov    fs:0x0,eax
10035ae5:	mov    eax,DWORD PTR [esp+0x6c]
10035ae9:	xor    ebx,ebx
10035aeb:	push   ebx
10035aec:	lea    edx,[esp+0x70]
10035af0:	push   edx
10035af1:	mov    edx,DWORD PTR [esp+0x70]
10035af5:	push   0x8
10035af7:	mov    DWORD PTR [esp+0x18],eax
10035afb:	lea    eax,[esp+0x18]
10035aff:	push   eax
10035b00:	push   0x8
10035b02:	mov    DWORD PTR [esp+0x24],ecx
10035b06:	mov    ecx,eax
10035b08:	mov    eax,DWORD PTR [edx]
10035b0a:	push   ecx
10035b0b:	push   0x22c05c
10035b10:	push   eax
10035b11:	call   DWORD PTR ds:0x1006726c
10035b17:	test   eax,eax
10035b19:	jne    0x10035ba4
10035b1f:	push   0x10074e1c
10035b24:	push   0x1b
10035b26:	mov    ecx,0x10074e4c
10035b2b:	call   0x100042b4
10035b30:	mov    esi,eax
10035b32:	push   esi
10035b33:	mov    DWORD PTR [esp+0x38],0xf
10035b3b:	mov    DWORD PTR [esp+0x34],ebx
10035b3f:	mov    BYTE PTR [esp+0x24],bl
10035b43:	call   0x10043450
10035b48:	add    esp,0xc
10035b4b:	push   eax
10035b4c:	push   esi
10035b4d:	lea    ecx,[esp+0x1c]
10035b51:	call   0x1000133b
10035b56:	lea    ecx,[esp+0x30]
10035b5a:	mov    DWORD PTR [esp+0x60],ebx
10035b5e:	call   0x100432c1
10035b63:	push   0xffffffff
10035b65:	mov    BYTE PTR [esp+0x64],0x1
10035b6a:	push   ebx
10035b6b:	lea    ecx,[esp+0x1c]
10035b6f:	push   ecx
10035b70:	lea    ecx,[esp+0x48]
10035b74:	mov    DWORD PTR [esp+0x3c],0x10074a3c
10035b7c:	mov    DWORD PTR [esp+0x60],0xf
10035b84:	mov    DWORD PTR [esp+0x5c],ebx
10035b88:	mov    BYTE PTR [esp+0x4c],bl
10035b8c:	call   0x10001241
10035b91:	push   0x10076508
10035b96:	lea    edx,[esp+0x34]
10035b9a:	push   edx
10035b9b:	mov    BYTE PTR [esp+0x68],bl
10035b9f:	call   0x10047942
10035ba4:	mov    ecx,DWORD PTR [esp+0x58]
10035ba8:	mov    DWORD PTR fs:0x0,ecx
10035baf:	pop    ecx
10035bb0:	pop    esi
10035bb1:	pop    ebx
10035bb2:	add    esp,0x58
10035bb5:	ret    0x8
10035bb8:	int3   
10035bb9:	int3   
10035bba:	int3   
10035bbb:	int3   
10035bbc:	int3   
10035bbd:	int3   
10035bbe:	int3   
10035bbf:	int3   
10035bc0:	push   ebp
10035bc1:	mov    ebp,esp
10035bc3:	and    esp,0xfffffff8
10035bc6:	push   0xffffffff
10035bc8:	push   0x10061b90
10035bcd:	mov    eax,fs:0x0
10035bd3:	push   eax
10035bd4:	sub    esp,0x54
10035bd7:	push   ebx
10035bd8:	push   esi
10035bd9:	mov    eax,ds:0x100801ac
10035bde:	xor    eax,esp
10035be0:	push   eax
10035be1:	lea    eax,[esp+0x60]
10035be5:	mov    fs:0x0,eax
10035beb:	xor    ebx,ebx
10035bed:	push   ebx
10035bee:	lea    eax,[esp+0x10]
10035bf2:	push   eax
10035bf3:	mov    eax,DWORD PTR [ebp+0x8]
10035bf6:	push   0x8
10035bf8:	lea    ecx,[esp+0x1c]
10035bfc:	push   ecx
10035bfd:	push   0x8
10035bff:	mov    edx,ecx
10035c01:	mov    ecx,DWORD PTR [eax]
10035c03:	push   edx
10035c04:	push   0x22c060
10035c09:	push   ecx
10035c0a:	mov    DWORD PTR [esp+0x30],ebx
10035c0e:	mov    DWORD PTR [esp+0x34],ebx
10035c12:	call   DWORD PTR ds:0x1006726c
10035c18:	test   eax,eax
10035c1a:	jne    0x10035ca5
10035c20:	push   0x10074e68
10035c25:	push   0x1b
10035c27:	mov    ecx,0x10074e4c
10035c2c:	call   0x100042b4
10035c31:	mov    esi,eax
10035c33:	push   esi
10035c34:	mov    DWORD PTR [esp+0x3c],0xf
10035c3c:	mov    DWORD PTR [esp+0x38],ebx
10035c40:	mov    BYTE PTR [esp+0x28],bl
10035c44:	call   0x10043450
10035c49:	add    esp,0xc
10035c4c:	push   eax
10035c4d:	push   esi
10035c4e:	lea    ecx,[esp+0x20]
10035c52:	call   0x1000133b
10035c57:	lea    ecx,[esp+0x34]
10035c5b:	mov    DWORD PTR [esp+0x68],ebx
10035c5f:	call   0x100432c1
10035c64:	push   0xffffffff
10035c66:	mov    BYTE PTR [esp+0x6c],0x1
10035c6b:	push   ebx
10035c6c:	lea    edx,[esp+0x20]
10035c70:	push   edx
10035c71:	lea    ecx,[esp+0x4c]
10035c75:	mov    DWORD PTR [esp+0x40],0x10074a3c
10035c7d:	mov    DWORD PTR [esp+0x64],0xf
10035c85:	mov    DWORD PTR [esp+0x60],ebx
10035c89:	mov    BYTE PTR [esp+0x50],bl
10035c8d:	call   0x10001241
10035c92:	push   0x10076508
10035c97:	lea    eax,[esp+0x38]
10035c9b:	push   eax
10035c9c:	mov    BYTE PTR [esp+0x70],bl
10035ca0:	call   0x10047942
10035ca5:	mov    eax,DWORD PTR [esp+0x14]
10035ca9:	mov    ecx,DWORD PTR [esp+0x60]
10035cad:	mov    DWORD PTR fs:0x0,ecx
10035cb4:	pop    ecx
10035cb5:	pop    esi
10035cb6:	pop    ebx
10035cb7:	mov    esp,ebp
10035cb9:	pop    ebp
10035cba:	ret    0x4
10035cbd:	int3   
10035cbe:	int3   
10035cbf:	int3   
10035cc0:	push   0xffffffff
10035cc2:	push   0x10061bc0
10035cc7:	mov    eax,fs:0x0
10035ccd:	push   eax
10035cce:	sub    esp,0x4c
10035cd1:	push   ebx
10035cd2:	push   esi
10035cd3:	mov    eax,ds:0x100801ac
10035cd8:	xor    eax,esp
10035cda:	push   eax
10035cdb:	lea    eax,[esp+0x58]
10035cdf:	mov    fs:0x0,eax
10035ce5:	mov    eax,DWORD PTR [esp+0x6c]
10035ce9:	xor    ebx,ebx
10035ceb:	push   ebx
10035cec:	lea    edx,[esp+0x70]
10035cf0:	push   edx
10035cf1:	mov    edx,DWORD PTR [esp+0x70]
10035cf5:	push   0x8
10035cf7:	mov    DWORD PTR [esp+0x18],eax
10035cfb:	lea    eax,[esp+0x18]
10035cff:	push   eax
10035d00:	push   0x8
10035d02:	mov    DWORD PTR [esp+0x24],ecx
10035d06:	mov    ecx,eax
10035d08:	mov    eax,DWORD PTR [edx]
10035d0a:	push   ecx
10035d0b:	push   0x22c07c
10035d10:	push   eax
10035d11:	call   DWORD PTR ds:0x1006726c
10035d17:	test   eax,eax
10035d19:	jne    0x10035da4
10035d1f:	push   0x10074e98
10035d24:	push   0x1b
10035d26:	mov    ecx,0x10074e4c
10035d2b:	call   0x100042b4
10035d30:	mov    esi,eax
10035d32:	push   esi
10035d33:	mov    DWORD PTR [esp+0x38],0xf
10035d3b:	mov    DWORD PTR [esp+0x34],ebx
10035d3f:	mov    BYTE PTR [esp+0x24],bl
10035d43:	call   0x10043450
10035d48:	add    esp,0xc
10035d4b:	push   eax
10035d4c:	push   esi
10035d4d:	lea    ecx,[esp+0x1c]
10035d51:	call   0x1000133b
10035d56:	lea    ecx,[esp+0x30]
10035d5a:	mov    DWORD PTR [esp+0x60],ebx
10035d5e:	call   0x100432c1
10035d63:	push   0xffffffff
10035d65:	mov    BYTE PTR [esp+0x64],0x1
10035d6a:	push   ebx
10035d6b:	lea    ecx,[esp+0x1c]
10035d6f:	push   ecx
10035d70:	lea    ecx,[esp+0x48]
10035d74:	mov    DWORD PTR [esp+0x3c],0x10074a3c
10035d7c:	mov    DWORD PTR [esp+0x60],0xf
10035d84:	mov    DWORD PTR [esp+0x5c],ebx
10035d88:	mov    BYTE PTR [esp+0x4c],bl
10035d8c:	call   0x10001241
10035d91:	push   0x10076508
10035d96:	lea    edx,[esp+0x34]
10035d9a:	push   edx
10035d9b:	mov    BYTE PTR [esp+0x68],bl
10035d9f:	call   0x10047942
10035da4:	mov    ecx,DWORD PTR [esp+0x58]
10035da8:	mov    DWORD PTR fs:0x0,ecx
10035daf:	pop    ecx
10035db0:	pop    esi
10035db1:	pop    ebx
10035db2:	add    esp,0x58
10035db5:	ret    0x8
10035db8:	int3   
10035db9:	int3   
10035dba:	int3   
10035dbb:	int3   
10035dbc:	int3   
10035dbd:	int3   
10035dbe:	int3   
10035dbf:	int3   
10035dc0:	push   0xffffffff
10035dc2:	push   0x10061b60
10035dc7:	mov    eax,fs:0x0
10035dcd:	push   eax
10035dce:	sub    esp,0x50
10035dd1:	push   ebx
10035dd2:	push   esi
10035dd3:	mov    eax,ds:0x100801ac
10035dd8:	xor    eax,esp
10035dda:	push   eax
10035ddb:	lea    eax,[esp+0x5c]
10035ddf:	mov    fs:0x0,eax
10035de5:	xor    ebx,ebx
10035de7:	push   ebx
10035de8:	lea    eax,[esp+0x70]
10035dec:	push   eax
10035ded:	mov    eax,DWORD PTR [esp+0x74]
10035df1:	push   0x8
10035df3:	lea    ecx,[esp+0x18]
10035df7:	push   ecx
10035df8:	push   0x8
10035dfa:	mov    edx,ecx
10035dfc:	mov    ecx,DWORD PTR [eax]
10035dfe:	push   edx
10035dff:	push   0x22c080
10035e04:	push   ecx
10035e05:	mov    DWORD PTR [esp+0x2c],ebx
10035e09:	mov    DWORD PTR [esp+0x30],ebx
10035e0d:	call   DWORD PTR ds:0x1006726c
10035e13:	test   eax,eax
10035e15:	jne    0x10035ea0
10035e1b:	push   0x10074ecc
10035e20:	push   0x1b
10035e22:	mov    ecx,0x10074e4c
10035e27:	call   0x100042b4
10035e2c:	mov    esi,eax
10035e2e:	push   esi
10035e2f:	mov    DWORD PTR [esp+0x38],0xf
10035e37:	mov    DWORD PTR [esp+0x34],ebx
10035e3b:	mov    BYTE PTR [esp+0x24],bl
10035e3f:	call   0x10043450
10035e44:	add    esp,0xc
10035e47:	push   eax
10035e48:	push   esi
10035e49:	lea    ecx,[esp+0x1c]
10035e4d:	call   0x1000133b
10035e52:	lea    ecx,[esp+0x30]
10035e56:	mov    DWORD PTR [esp+0x64],ebx
10035e5a:	call   0x100432c1
10035e5f:	push   0xffffffff
10035e61:	mov    BYTE PTR [esp+0x68],0x1
10035e66:	push   ebx
10035e67:	lea    edx,[esp+0x1c]
10035e6b:	push   edx
10035e6c:	lea    ecx,[esp+0x48]
10035e70:	mov    DWORD PTR [esp+0x3c],0x10074a3c
10035e78:	mov    DWORD PTR [esp+0x60],0xf
10035e80:	mov    DWORD PTR [esp+0x5c],ebx
10035e84:	mov    BYTE PTR [esp+0x4c],bl
10035e88:	call   0x10001241
10035e8d:	push   0x10076508
10035e92:	lea    eax,[esp+0x34]
10035e96:	push   eax
10035e97:	mov    BYTE PTR [esp+0x6c],bl
10035e9b:	call   0x10047942
10035ea0:	mov    eax,DWORD PTR [esp+0xc]
10035ea4:	xor    ecx,ecx
10035ea6:	cmp    eax,ebx
10035ea8:	setl   cl
10035eab:	sub    ecx,0x1
10035eae:	and    eax,ecx
10035eb0:	mov    ecx,DWORD PTR [esp+0x5c]
10035eb4:	mov    DWORD PTR fs:0x0,ecx
10035ebb:	pop    ecx
10035ebc:	pop    esi
10035ebd:	pop    ebx
10035ebe:	add    esp,0x5c
10035ec1:	ret    0x4
10035ec4:	int3   
10035ec5:	int3   
10035ec6:	int3   
10035ec7:	int3   
10035ec8:	int3   
10035ec9:	int3   
10035eca:	int3   
10035ecb:	int3   
10035ecc:	int3   
10035ecd:	int3   
10035ece:	int3   
10035ecf:	int3   
10035ed0:	push   ebp
10035ed1:	mov    ebp,esp
10035ed3:	and    esp,0xfffffff8
10035ed6:	push   0xffffffff
10035ed8:	push   0x10061b90
10035edd:	mov    eax,fs:0x0
10035ee3:	push   eax
10035ee4:	sub    esp,0x54
10035ee7:	push   ebx
10035ee8:	push   esi
10035ee9:	mov    eax,ds:0x100801ac
10035eee:	xor    eax,esp
10035ef0:	push   eax
10035ef1:	lea    eax,[esp+0x60]
10035ef5:	mov    fs:0x0,eax
10035efb:	xor    ebx,ebx
10035efd:	push   ebx
10035efe:	lea    eax,[esp+0x10]
10035f02:	push   eax
10035f03:	mov    eax,DWORD PTR [ebp+0x8]
10035f06:	push   0x8
10035f08:	lea    ecx,[esp+0x1c]
10035f0c:	push   ecx
10035f0d:	push   0x8
10035f0f:	mov    edx,ecx
10035f11:	mov    ecx,DWORD PTR [eax]
10035f13:	push   edx
10035f14:	push   0x22c080
10035f19:	push   ecx
10035f1a:	mov    DWORD PTR [esp+0x30],ebx
10035f1e:	mov    DWORD PTR [esp+0x34],ebx
10035f22:	call   DWORD PTR ds:0x1006726c
10035f28:	test   eax,eax
10035f2a:	jne    0x10035fb5
10035f30:	push   0x10074f00
10035f35:	push   0x1b
10035f37:	mov    ecx,0x10074e4c
10035f3c:	call   0x100042b4
10035f41:	mov    esi,eax
10035f43:	push   esi
10035f44:	mov    DWORD PTR [esp+0x3c],0xf
10035f4c:	mov    DWORD PTR [esp+0x38],ebx
10035f50:	mov    BYTE PTR [esp+0x28],bl
10035f54:	call   0x10043450
10035f59:	add    esp,0xc
10035f5c:	push   eax
10035f5d:	push   esi
10035f5e:	lea    ecx,[esp+0x20]
10035f62:	call   0x1000133b
10035f67:	lea    ecx,[esp+0x34]
10035f6b:	mov    DWORD PTR [esp+0x68],ebx
10035f6f:	call   0x100432c1
10035f74:	push   0xffffffff
10035f76:	mov    BYTE PTR [esp+0x6c],0x1
10035f7b:	push   ebx
10035f7c:	lea    edx,[esp+0x20]
10035f80:	push   edx
10035f81:	lea    ecx,[esp+0x4c]
10035f85:	mov    DWORD PTR [esp+0x40],0x10074a3c
10035f8d:	mov    DWORD PTR [esp+0x64],0xf
10035f95:	mov    DWORD PTR [esp+0x60],ebx
10035f99:	mov    BYTE PTR [esp+0x50],bl
10035f9d:	call   0x10001241
10035fa2:	push   0x10076508
10035fa7:	lea    eax,[esp+0x38]
10035fab:	push   eax
10035fac:	mov    BYTE PTR [esp+0x70],bl
10035fb0:	call   0x10047942
10035fb5:	mov    eax,DWORD PTR [esp+0x14]
10035fb9:	mov    ecx,DWORD PTR [esp+0x60]
10035fbd:	mov    DWORD PTR fs:0x0,ecx
10035fc4:	pop    ecx
10035fc5:	pop    esi
10035fc6:	pop    ebx
10035fc7:	mov    esp,ebp
10035fc9:	pop    ebp
10035fca:	ret    0x4
10035fcd:	int3   
10035fce:	int3   
10035fcf:	int3   
10035fd0:	push   0xffffffff
10035fd2:	push   0x10061b28
10035fd7:	mov    eax,fs:0x0
10035fdd:	push   eax
10035fde:	push   ecx
10035fdf:	push   ebx
10035fe0:	push   esi
10035fe1:	push   edi
10035fe2:	mov    eax,ds:0x100801ac
10035fe7:	xor    eax,esp
10035fe9:	push   eax
10035fea:	lea    eax,[esp+0x14]
10035fee:	mov    fs:0x0,eax
10035ff4:	mov    edi,ecx
10035ff6:	mov    eax,DWORD PTR [edi+0x14]
10035ff9:	lea    ebx,[eax+0x5]
10035ffc:	push   ebx
10035ffd:	call   0x100438d7
10036002:	mov    esi,eax
10036004:	add    esp,0x4
10036007:	mov    DWORD PTR [esp+0x10],esi
1003600b:	mov    DWORD PTR [esp+0x1c],0x0
10036013:	mov    eax,DWORD PTR [esp+0x28]
10036017:	mov    DWORD PTR [esi],eax
10036019:	cmp    DWORD PTR [edi+0x18],0x10
1003601d:	mov    eax,DWORD PTR [edi+0x14]
10036020:	jb     0x10036027
10036022:	mov    edi,DWORD PTR [edi+0x4]
10036025:	jmp    0x1003602a
10036027:	add    edi,0x4
1003602a:	add    eax,0x1
1003602d:	push   eax
1003602e:	lea    ecx,[esi+0x4]
10036031:	push   edi
10036032:	push   ecx
10036033:	call   0x10045340
10036038:	mov    edx,DWORD PTR [esp+0x30]
1003603c:	add    esp,0xc
1003603f:	push   esi
10036040:	push   0x5
10036042:	push   edx
10036043:	mov    ecx,ebx
10036045:	call   0x10036700
1003604a:	push   esi
1003604b:	call   0x10042fe2
10036050:	add    esp,0x4
10036053:	mov    ecx,DWORD PTR [esp+0x14]
10036057:	mov    DWORD PTR fs:0x0,ecx
1003605e:	pop    ecx
1003605f:	pop    edi
10036060:	pop    esi
10036061:	pop    ebx
10036062:	add    esp,0x10
10036065:	ret    0x8
10036068:	int3   
10036069:	int3   
1003606a:	int3   
1003606b:	int3   
1003606c:	int3   
1003606d:	int3   
1003606e:	int3   
1003606f:	int3   
10036070:	push   ebp
10036071:	mov    ebp,esp
10036073:	push   0xffffffff
10036075:	push   0x10062c10
1003607a:	mov    eax,fs:0x0
10036080:	push   eax
10036081:	sub    esp,0x38
10036084:	push   ebx
10036085:	push   esi
10036086:	push   edi
10036087:	mov    eax,ds:0x100801ac
1003608c:	xor    eax,ebp
1003608e:	push   eax
1003608f:	lea    eax,[ebp-0xc]
10036092:	mov    fs:0x0,eax
10036098:	mov    DWORD PTR [ebp-0x10],esp
1003609b:	mov    ebx,ecx
1003609d:	lea    eax,[ebp-0x14]
100360a0:	push   eax
100360a1:	push   0x5
100360a3:	lea    ecx,[ebp-0x18]
100360a6:	xor    esi,esi
100360a8:	push   ecx
100360a9:	mov    DWORD PTR [ebp-0x4],esi
100360ac:	push   edx
100360ad:	mov    DWORD PTR [ebp-0x14],esi
100360b0:	call   0x10036840
100360b5:	mov    ecx,DWORD PTR [eax]
100360b7:	mov    edi,ecx
100360b9:	mov    DWORD PTR [eax],esi
100360bb:	mov    DWORD PTR [ebp-0x1c],edi
100360be:	mov    BYTE PTR [ebp-0x4],0x1
100360c2:	mov    edx,DWORD PTR [ebp-0x18]
100360c5:	push   edx
100360c6:	call   0x10042fe2
100360cb:	mov    eax,DWORD PTR [ebp-0x14]
100360ce:	add    esp,0x4
100360d1:	cmp    eax,esi
100360d3:	jne    0x100360f4
100360d5:	push   edi
100360d6:	call   0x10042fe2
100360db:	add    esp,0x4
100360de:	xor    al,al
100360e0:	mov    ecx,DWORD PTR [ebp-0xc]
100360e3:	mov    DWORD PTR fs:0x0,ecx
100360ea:	pop    ecx
100360eb:	pop    edi
100360ec:	pop    esi
100360ed:	pop    ebx
100360ee:	mov    esp,ebp
100360f0:	pop    ebp
100360f1:	ret    0x4
100360f4:	mov    DWORD PTR [ebp-0x24],eax
100360f7:	lea    eax,[ebp-0x28]
100360fa:	push   eax
100360fb:	mov    DWORD PTR [ebp-0x28],esi
100360fe:	mov    DWORD PTR [ebp-0x20],edi
10036101:	call   0x100374b0
10036106:	mov    ecx,DWORD PTR [ebp+0x8]
10036109:	lea    edx,[ebp-0x28]
1003610c:	push   edx
1003610d:	lea    esi,[ebp-0x44]
10036110:	mov    DWORD PTR [ecx],eax
10036112:	call   0x10037170
10036117:	push   0xffffffff
10036119:	push   0x0
1003611b:	push   eax
1003611c:	mov    ecx,ebx
1003611e:	mov    BYTE PTR [ebp-0x4],0x2
10036122:	call   0x10001241
10036127:	cmp    DWORD PTR [ebp-0x2c],0x10
1003612b:	jb     0x10036139
1003612d:	mov    eax,DWORD PTR [ebp-0x40]
10036130:	push   eax
10036131:	call   0x10042fe2
10036136:	add    esp,0x4
10036139:	push   edi
1003613a:	call   0x10042fe2
1003613f:	push   0x1006dd18
10036144:	call   0x10043450
10036149:	mov    esi,DWORD PTR [ebx+0x14]
1003614c:	mov    edi,eax
1003614e:	add    esp,0x8
10036151:	cmp    esi,edi
10036153:	mov    eax,esi
10036155:	jb     0x10036159
10036157:	mov    eax,edi
10036159:	cmp    DWORD PTR [ebx+0x18],0x10
1003615d:	jb     0x10036164
1003615f:	mov    ebx,DWORD PTR [ebx+0x4]
10036162:	jmp    0x10036167
10036164:	add    ebx,0x4
10036167:	push   eax
10036168:	push   0x1006dd18
1003616d:	push   ebx
1003616e:	call   0x10043a74
10036173:	add    esp,0xc
10036176:	test   eax,eax
10036178:	jne    0x100361a5
1003617a:	cmp    esi,edi
1003617c:	jae    0x1003619e
1003617e:	or     eax,0xffffffff
10036181:	xor    ecx,ecx
10036183:	test   eax,eax
10036185:	setne  cl
10036188:	mov    al,cl
1003618a:	mov    ecx,DWORD PTR [ebp-0xc]
1003618d:	mov    DWORD PTR fs:0x0,ecx
10036194:	pop    ecx
10036195:	pop    edi
10036196:	pop    esi
10036197:	pop    ebx
10036198:	mov    esp,ebp
1003619a:	pop    ebp
1003619b:	ret    0x4
1003619e:	xor    eax,eax
100361a0:	cmp    esi,edi
100361a2:	setne  al
100361a5:	xor    ecx,ecx
100361a7:	test   eax,eax
100361a9:	setne  cl
100361ac:	mov    al,cl
100361ae:	mov    ecx,DWORD PTR [ebp-0xc]
100361b1:	mov    DWORD PTR fs:0x0,ecx
100361b8:	pop    ecx
100361b9:	pop    edi
100361ba:	pop    esi
100361bb:	pop    ebx
100361bc:	mov    esp,ebp
100361be:	pop    ebp
100361bf:	ret    0x4
100361c2:	mov    eax,0x100360de
100361c7:	ret    
100361c8:	int3   
100361c9:	int3   
100361ca:	int3   
100361cb:	int3   
100361cc:	int3   
100361cd:	int3   
100361ce:	int3   
100361cf:	int3   
100361d0:	push   0xffffffff
100361d2:	push   0x10061af0
100361d7:	mov    eax,fs:0x0
100361dd:	push   eax
100361de:	sub    esp,0x74
100361e1:	mov    eax,ds:0x100801ac
100361e6:	xor    eax,esp
100361e8:	mov    DWORD PTR [esp+0x70],eax
100361ec:	push   ebx
100361ed:	push   esi
100361ee:	push   edi
100361ef:	mov    eax,ds:0x100801ac
100361f4:	xor    eax,esp
100361f6:	push   eax
100361f7:	lea    eax,[esp+0x84]
100361fe:	mov    fs:0x0,eax
10036204:	mov    eax,DWORD PTR [esp+0x94]
1003620b:	xor    ebx,ebx
1003620d:	mov    esi,0xf
10036212:	mov    DWORD PTR [esp+0x7c],esi
10036216:	mov    DWORD PTR [esp+0x78],ebx
1003621a:	mov    BYTE PTR [esp+0x68],bl
1003621e:	mov    DWORD PTR [esp+0x8c],ebx
10036225:	mov    DWORD PTR [esp+0x44],esi
10036229:	mov    DWORD PTR [esp+0x40],ebx
1003622d:	mov    BYTE PTR [esp+0x30],bl
10036231:	mov    DWORD PTR [esp+0x28],esi
10036235:	mov    DWORD PTR [esp+0x24],ebx
10036239:	mov    BYTE PTR [esp+0x14],bl
1003623d:	mov    DWORD PTR [esp+0x60],esi
10036241:	mov    DWORD PTR [esp+0x5c],ebx
10036245:	mov    BYTE PTR [esp+0x4c],bl
10036249:	lea    edx,[esp+0x48]
1003624d:	push   edx
1003624e:	lea    edx,[esp+0x68]
10036252:	push   edx
10036253:	push   ecx
10036254:	push   eax
10036255:	lea    edx,[esp+0x20]
10036259:	lea    ecx,[esp+0x3c]
1003625d:	mov    BYTE PTR [esp+0x9c],0x3
10036265:	call   0x10036310
1003626a:	mov    edi,0x10
1003626f:	cmp    DWORD PTR [esp+0x60],edi
10036273:	jb     0x10036282
10036275:	mov    eax,DWORD PTR [esp+0x4c]
10036279:	push   eax
1003627a:	call   0x10042fe2
1003627f:	add    esp,0x4
10036282:	cmp    DWORD PTR [esp+0x28],edi
10036286:	mov    DWORD PTR [esp+0x60],esi
1003628a:	mov    DWORD PTR [esp+0x5c],ebx
1003628e:	mov    BYTE PTR [esp+0x4c],bl
10036292:	jb     0x100362a1
10036294:	mov    ecx,DWORD PTR [esp+0x14]
10036298:	push   ecx
10036299:	call   0x10042fe2
1003629e:	add    esp,0x4
100362a1:	cmp    DWORD PTR [esp+0x44],edi
100362a5:	mov    DWORD PTR [esp+0x28],esi
100362a9:	mov    DWORD PTR [esp+0x24],ebx
100362ad:	mov    BYTE PTR [esp+0x14],bl
100362b1:	jb     0x100362c0
100362b3:	mov    edx,DWORD PTR [esp+0x30]
100362b7:	push   edx
100362b8:	call   0x10042fe2
100362bd:	add    esp,0x4
100362c0:	cmp    DWORD PTR [esp+0x7c],edi
100362c4:	mov    DWORD PTR [esp+0x44],esi
100362c8:	mov    DWORD PTR [esp+0x40],ebx
100362cc:	mov    BYTE PTR [esp+0x30],bl
100362d0:	jb     0x100362df
100362d2:	mov    eax,DWORD PTR [esp+0x68]
100362d6:	push   eax
100362d7:	call   0x10042fe2
100362dc:	add    esp,0x4
100362df:	mov    ecx,DWORD PTR [esp+0x84]
100362e6:	mov    DWORD PTR fs:0x0,ecx
100362ed:	pop    ecx
100362ee:	pop    edi
100362ef:	pop    esi
100362f0:	pop    ebx
100362f1:	mov    ecx,DWORD PTR [esp+0x70]
100362f5:	xor    ecx,esp
100362f7:	call   0x10043615
100362fc:	add    esp,0x80
10036302:	ret    0x4
10036305:	int3   
10036306:	int3   
10036307:	int3   
10036308:	int3   
10036309:	int3   
1003630a:	int3   
1003630b:	int3   
1003630c:	int3   
1003630d:	int3   
1003630e:	int3   
1003630f:	int3   
10036310:	push   ebp
10036311:	mov    ebp,esp
10036313:	push   0xffffffff
10036315:	push   0x10061aa2
1003631a:	mov    eax,fs:0x0
10036320:	push   eax
10036321:	sub    esp,0x18c
10036327:	mov    eax,ds:0x100801ac
1003632c:	xor    eax,ebp
1003632e:	mov    DWORD PTR [ebp-0x10],eax
10036331:	push   ebx
10036332:	push   esi
10036333:	push   edi
10036334:	push   eax
10036335:	lea    eax,[ebp-0xc]
10036338:	mov    fs:0x0,eax
1003633e:	mov    eax,DWORD PTR [ebp+0x8]
10036341:	mov    eax,DWORD PTR [eax]
10036343:	mov    esi,DWORD PTR [ebp+0xc]
10036346:	mov    edi,DWORD PTR [ebp+0x10]
10036349:	mov    DWORD PTR [ebp-0x144],edx
1003634f:	mov    DWORD PTR [ebp-0x148],ecx
10036355:	mov    ecx,DWORD PTR [ebp+0x14]
10036358:	xor    ebx,ebx
1003635a:	push   ebx
1003635b:	lea    edx,[ebp-0x150]
10036361:	push   edx
10036362:	push   0x110
10036367:	mov    DWORD PTR [ebp-0x14c],ecx
1003636d:	lea    ecx,[ebp-0x120]
10036373:	push   ecx
10036374:	push   0x110
10036379:	mov    edx,ecx
1003637b:	push   edx
1003637c:	push   0x22c03c
10036381:	push   eax
10036382:	call   DWORD PTR ds:0x1006726c
10036388:	test   eax,eax
1003638a:	jne    0x10036427
10036390:	push   0x10074f2c
10036395:	push   0x1f
10036397:	mov    ecx,0x10074f58
1003639c:	call   0x100042b4
100363a1:	mov    esi,eax
100363a3:	mov    edi,0xf
100363a8:	push   esi
100363a9:	mov    DWORD PTR [ebp-0x128],edi
100363af:	mov    DWORD PTR [ebp-0x12c],ebx
100363b5:	mov    BYTE PTR [ebp-0x13c],bl
100363bb:	call   0x10043450
100363c0:	add    esp,0xc
100363c3:	push   eax
100363c4:	push   esi
100363c5:	lea    ecx,[ebp-0x140]
100363cb:	call   0x1000133b
100363d0:	lea    ecx,[ebp-0x194]
100363d6:	mov    DWORD PTR [ebp-0x4],ebx
100363d9:	call   0x100432c1
100363de:	push   0xffffffff
100363e0:	mov    BYTE PTR [ebp-0x4],0x1
100363e4:	push   ebx
100363e5:	lea    ecx,[ebp-0x140]
100363eb:	push   ecx
100363ec:	lea    ecx,[ebp-0x188]
100363f2:	mov    DWORD PTR [ebp-0x194],0x10074a3c
100363fc:	mov    DWORD PTR [ebp-0x170],edi
10036402:	mov    DWORD PTR [ebp-0x174],ebx
10036408:	mov    BYTE PTR [ebp-0x184],bl
1003640e:	call   0x10001241
10036413:	push   0x10076508
10036418:	lea    edx,[ebp-0x194]
1003641e:	push   edx
1003641f:	mov    BYTE PTR [ebp-0x4],bl
10036422:	call   0x10047942
10036427:	call   DWORD PTR ds:0x10080ffc
1003642d:	mov    ecx,DWORD PTR [ebp-0xdc]
10036433:	mov    edx,DWORD PTR [ebp-0xd8]
10036439:	mov    DWORD PTR [ebp-0x124],eax
1003643f:	mov    eax,DWORD PTR [ebp-0xe0]
10036445:	mov    DWORD PTR [esi],eax
10036447:	mov    eax,DWORD PTR [ebp-0xd4]
1003644d:	mov    DWORD PTR [esi+0x4],ecx
10036450:	lea    ecx,[ebp-0x120]
10036456:	mov    DWORD PTR [esi+0x8],edx
10036459:	push   ecx
1003645a:	mov    DWORD PTR [esi+0xc],eax
1003645d:	call   DWORD PTR ds:0x100670ac
10036463:	add    eax,0x1
10036466:	cmp    eax,0x3fffffff
1003646b:	jle    0x10036471
1003646d:	xor    esi,esi
1003646f:	jmp    0x10036495
10036471:	lea    esi,[eax+eax*1]
10036474:	mov    eax,esi
10036476:	call   0x1004b9b0
1003647b:	mov    edx,DWORD PTR [ebp-0x124]
10036481:	mov    eax,esp
10036483:	push   edx
10036484:	push   esi
10036485:	lea    ecx,[ebp-0x120]
1003648b:	push   ecx
1003648c:	mov    esi,eax
1003648e:	call   0x10002425
10036493:	mov    esi,eax
10036495:	push   esi
10036496:	mov    DWORD PTR [ebp-0x128],0xf
100364a0:	mov    DWORD PTR [ebp-0x12c],ebx
100364a6:	mov    BYTE PTR [ebp-0x13c],bl
100364ac:	call   0x10043450
100364b1:	add    esp,0x4
100364b4:	push   eax
100364b5:	push   esi
100364b6:	lea    ecx,[ebp-0x140]
100364bc:	call   0x1000133b
100364c1:	push   0xffffffff
100364c3:	push   ebx
100364c4:	lea    edx,[ebp-0x140]
100364ca:	push   edx
100364cb:	mov    ecx,edi
100364cd:	mov    DWORD PTR [ebp-0x4],0x2
100364d4:	call   0x10001241
100364d9:	mov    DWORD PTR [ebp-0x4],0xffffffff
100364e0:	cmp    DWORD PTR [ebp-0x128],0x10
100364e7:	jb     0x100364f8
100364e9:	mov    eax,DWORD PTR [ebp-0x13c]
100364ef:	push   eax
100364f0:	call   0x10042fe2
100364f5:	add    esp,0x4
100364f8:	lea    ecx,[ebp-0xd0]
100364fe:	push   ecx
100364ff:	call   DWORD PTR ds:0x100670ac
10036505:	add    eax,0x1
10036508:	cmp    eax,0x3fffffff
1003650d:	jle    0x10036519
1003650f:	mov    edi,DWORD PTR [ebp-0x124]
10036515:	xor    esi,esi
10036517:	jmp    0x1003653d
10036519:	lea    esi,[eax+eax*1]
1003651c:	mov    eax,esi
1003651e:	call   0x1004b9b0
10036523:	mov    edi,DWORD PTR [ebp-0x124]
10036529:	mov    eax,esp
1003652b:	push   edi
1003652c:	push   esi
1003652d:	lea    edx,[ebp-0xd0]
10036533:	push   edx
10036534:	mov    esi,eax
10036536:	call   0x10002425
1003653b:	mov    esi,eax
1003653d:	push   esi
1003653e:	mov    DWORD PTR [ebp-0x128],0xf
10036548:	mov    DWORD PTR [ebp-0x12c],ebx
1003654e:	mov    BYTE PTR [ebp-0x13c],bl
10036554:	call   0x10043450
10036559:	add    esp,0x4
1003655c:	push   eax
1003655d:	push   esi
1003655e:	lea    ecx,[ebp-0x140]
10036564:	call   0x1000133b
10036569:	mov    ecx,DWORD PTR [ebp-0x148]
1003656f:	push   0xffffffff
10036571:	push   ebx
10036572:	lea    eax,[ebp-0x140]
10036578:	push   eax
10036579:	mov    DWORD PTR [ebp-0x4],0x3
10036580:	call   0x10001241
10036585:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003658c:	cmp    DWORD PTR [ebp-0x128],0x10
10036593:	jb     0x100365a4
10036595:	mov    ecx,DWORD PTR [ebp-0x13c]
1003659b:	push   ecx
1003659c:	call   0x10042fe2
100365a1:	add    esp,0x4
100365a4:	lea    edx,[ebp-0x90]
100365aa:	push   edx
100365ab:	call   DWORD PTR ds:0x100670ac
100365b1:	add    eax,0x1
100365b4:	cmp    eax,0x3fffffff
100365b9:	jle    0x100365bf
100365bb:	xor    esi,esi
100365bd:	jmp    0x100365dd
100365bf:	lea    esi,[eax+eax*1]
100365c2:	mov    eax,esi
100365c4:	call   0x1004b9b0
100365c9:	mov    eax,esp
100365cb:	push   edi
100365cc:	push   esi
100365cd:	lea    ecx,[ebp-0x90]
100365d3:	push   ecx
100365d4:	mov    esi,eax
100365d6:	call   0x10002425
100365db:	mov    esi,eax
100365dd:	push   esi
100365de:	mov    DWORD PTR [ebp-0x128],0xf
100365e8:	mov    DWORD PTR [ebp-0x12c],ebx
100365ee:	mov    BYTE PTR [ebp-0x13c],bl
100365f4:	call   0x10043450
100365f9:	add    esp,0x4
100365fc:	push   eax
100365fd:	push   esi
100365fe:	lea    ecx,[ebp-0x140]
10036604:	call   0x1000133b
10036609:	mov    ecx,DWORD PTR [ebp-0x144]
1003660f:	push   0xffffffff
10036611:	push   ebx
10036612:	lea    edx,[ebp-0x140]
10036618:	push   edx
10036619:	mov    DWORD PTR [ebp-0x4],0x4
10036620:	call   0x10001241
10036625:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003662c:	cmp    DWORD PTR [ebp-0x128],0x10
10036633:	jb     0x10036644
10036635:	mov    eax,DWORD PTR [ebp-0x13c]
1003663b:	push   eax
1003663c:	call   0x10042fe2
10036641:	add    esp,0x4
10036644:	lea    ecx,[ebp-0x50]
10036647:	push   ecx
10036648:	call   DWORD PTR ds:0x100670ac
1003664e:	add    eax,0x1
10036651:	cmp    eax,0x3fffffff
10036656:	jle    0x1003665c
10036658:	xor    esi,esi
1003665a:	jmp    0x10036677
1003665c:	lea    esi,[eax+eax*1]
1003665f:	mov    eax,esi
10036661:	call   0x1004b9b0
10036666:	mov    eax,esp
10036668:	push   edi
10036669:	push   esi
1003666a:	lea    edx,[ebp-0x50]
1003666d:	push   edx
1003666e:	mov    esi,eax
10036670:	call   0x10002425
10036675:	mov    esi,eax
10036677:	push   esi
10036678:	mov    DWORD PTR [ebp-0x154],0xf
10036682:	mov    DWORD PTR [ebp-0x158],ebx
10036688:	mov    BYTE PTR [ebp-0x168],bl
1003668e:	call   0x10043450
10036693:	add    esp,0x4
10036696:	push   eax
10036697:	push   esi
10036698:	lea    ecx,[ebp-0x16c]
1003669e:	call   0x1000133b
100366a3:	mov    ecx,DWORD PTR [ebp-0x14c]
100366a9:	push   0xffffffff
100366ab:	push   ebx
100366ac:	lea    eax,[ebp-0x16c]
100366b2:	push   eax
100366b3:	mov    DWORD PTR [ebp-0x4],0x5
100366ba:	call   0x10001241
100366bf:	cmp    DWORD PTR [ebp-0x154],0x10
100366c6:	jb     0x100366d7
100366c8:	mov    ecx,DWORD PTR [ebp-0x168]
100366ce:	push   ecx
100366cf:	call   0x10042fe2
100366d4:	add    esp,0x4
100366d7:	lea    esp,[ebp-0x1a8]
100366dd:	mov    ecx,DWORD PTR [ebp-0xc]
100366e0:	mov    DWORD PTR fs:0x0,ecx
100366e7:	pop    ecx
100366e8:	pop    edi
100366e9:	pop    esi
100366ea:	pop    ebx
100366eb:	mov    ecx,DWORD PTR [ebp-0x10]
100366ee:	xor    ecx,ebp
100366f0:	call   0x10043615
100366f5:	mov    esp,ebp
100366f7:	pop    ebp
100366f8:	ret    0x10
100366fb:	int3   
100366fc:	int3   
100366fd:	int3   
100366fe:	int3   
100366ff:	int3   
10036700:	push   ebp
10036701:	mov    ebp,esp
10036703:	and    esp,0xfffffff8
10036706:	push   0xffffffff
10036708:	push   0x10061a38
1003670d:	mov    eax,fs:0x0
10036713:	push   eax
10036714:	sub    esp,0x50
10036717:	push   ebx
10036718:	push   esi
10036719:	push   edi
1003671a:	mov    eax,ds:0x100801ac
1003671f:	xor    eax,esp
10036721:	push   eax
10036722:	lea    eax,[esp+0x60]
10036726:	mov    fs:0x0,eax
1003672c:	mov    edi,ecx
1003672e:	xor    eax,eax
10036730:	mov    DWORD PTR [esp+0x10],eax
10036734:	lea    ebx,[edi+0xc]
10036737:	push   ebx
10036738:	mov    DWORD PTR [esp+0x6c],eax
1003673c:	call   0x100438d7
10036741:	mov    esi,eax
10036743:	add    esp,0x4
10036746:	test   esi,esi
10036748:	je     0x10036754
1003674a:	push   0x0
1003674c:	call   0x10042fe2
10036751:	add    esp,0x4
10036754:	mov    ecx,DWORD PTR [ebp+0x10]
10036757:	mov    eax,DWORD PTR [ebp+0xc]
1003675a:	push   edi
1003675b:	push   ecx
1003675c:	lea    edx,[esi+0xc]
1003675f:	mov    DWORD PTR [esi],edi
10036761:	push   edx
10036762:	mov    DWORD PTR [esp+0x1c],esi
10036766:	mov    DWORD PTR [esi+0x4],eax
10036769:	call   0x10045340
1003676e:	mov    ecx,DWORD PTR [ebp+0x8]
10036771:	mov    edx,DWORD PTR [ecx]
10036773:	add    esp,0xc
10036776:	xor    edi,edi
10036778:	push   edi
10036779:	lea    eax,[esp+0x18]
1003677d:	push   eax
1003677e:	push   edi
1003677f:	push   edi
10036780:	push   ebx
10036781:	push   esi
10036782:	push   0x22c034
10036787:	push   edx
10036788:	call   DWORD PTR ds:0x1006726c
1003678e:	test   eax,eax
10036790:	jne    0x1003681f
10036796:	push   0x10074f78
1003679b:	push   0x19
1003679d:	mov    ecx,0x10074fb0
100367a2:	call   0x100042b4
100367a7:	mov    esi,eax
100367a9:	push   esi
100367aa:	mov    DWORD PTR [esp+0x3c],0xf
100367b2:	mov    DWORD PTR [esp+0x38],edi
100367b6:	mov    BYTE PTR [esp+0x28],0x0
100367bb:	call   0x10043450
100367c0:	add    esp,0xc
100367c3:	push   eax
100367c4:	push   esi
100367c5:	lea    ecx,[esp+0x20]
100367c9:	call   0x1000133b
100367ce:	mov    bl,0x1
100367d0:	lea    ecx,[esp+0x34]
100367d4:	mov    BYTE PTR [esp+0x68],bl
100367d8:	call   0x100432c1
100367dd:	push   0xffffffff
100367df:	mov    BYTE PTR [esp+0x6c],0x2
100367e4:	push   edi
100367e5:	lea    eax,[esp+0x20]
100367e9:	push   eax
100367ea:	lea    ecx,[esp+0x4c]
100367ee:	mov    DWORD PTR [esp+0x40],0x10074a3c
100367f6:	mov    DWORD PTR [esp+0x64],0xf
100367fe:	mov    DWORD PTR [esp+0x60],edi
10036802:	mov    BYTE PTR [esp+0x50],0x0
10036807:	call   0x10001241
1003680c:	push   0x10076508
10036811:	lea    ecx,[esp+0x38]
10036815:	push   ecx
10036816:	mov    BYTE PTR [esp+0x70],bl
1003681a:	call   0x10047942
1003681f:	push   esi
10036820:	call   0x10042fe2
10036825:	add    esp,0x4
10036828:	mov    ecx,DWORD PTR [esp+0x60]
1003682c:	mov    DWORD PTR fs:0x0,ecx
10036833:	pop    ecx
10036834:	pop    edi
10036835:	pop    esi
10036836:	pop    ebx
10036837:	mov    esp,ebp
10036839:	pop    ebp
1003683a:	ret    0xc
1003683d:	int3   
1003683e:	int3   
1003683f:	int3   
10036840:	push   ebp
10036841:	mov    ebp,esp
10036843:	and    esp,0xfffffff8
10036846:	push   0xffffffff
10036848:	push   0x100619f8
1003684d:	mov    eax,fs:0x0
10036853:	push   eax
10036854:	sub    esp,0x58
10036857:	push   ebx
10036858:	push   esi
10036859:	push   edi
1003685a:	mov    eax,ds:0x100801ac
1003685f:	xor    eax,esp
10036861:	push   eax
10036862:	lea    eax,[esp+0x68]
10036866:	mov    fs:0x0,eax
1003686c:	xor    ebx,ebx
1003686e:	mov    DWORD PTR [esp+0x18],ebx
10036872:	mov    DWORD PTR [esp+0x1c],ebx
10036876:	push   0xd
10036878:	mov    DWORD PTR [esp+0x74],ebx
1003687c:	call   0x100438d7
10036881:	mov    esi,eax
10036883:	add    esp,0x4
10036886:	mov    DWORD PTR [esp+0x14],esi
1003688a:	mov    eax,DWORD PTR [ebp+0x10]
1003688d:	mov    edx,DWORD PTR [ebp+0x8]
10036890:	mov    BYTE PTR [esp+0x70],0x1
10036895:	mov    DWORD PTR [esi],0x1
1003689b:	push   ebx
1003689c:	mov    DWORD PTR [esi+0x8],0x4
100368a3:	mov    DWORD PTR [esi+0x4],eax
100368a6:	mov    eax,DWORD PTR [esi]
100368a8:	add    eax,0xc
100368ab:	lea    ecx,[esp+0x1c]
100368af:	push   ecx
100368b0:	push   eax
100368b1:	push   esi
100368b2:	push   eax
100368b3:	mov    eax,DWORD PTR [edx]
100368b5:	push   esi
100368b6:	push   0x22c038
100368bb:	push   eax
100368bc:	call   DWORD PTR ds:0x1006726c
100368c2:	test   eax,eax
100368c4:	jne    0x1003694e
100368ca:	push   0x10074fcc
100368cf:	push   0x1e
100368d1:	mov    ecx,0x10074c38
100368d6:	call   0x100042b4
100368db:	mov    esi,eax
100368dd:	mov    edi,0xf
100368e2:	push   esi
100368e3:	mov    DWORD PTR [esp+0x44],edi
100368e7:	mov    DWORD PTR [esp+0x40],ebx
100368eb:	mov    BYTE PTR [esp+0x30],bl
100368ef:	call   0x10043450
100368f4:	add    esp,0xc
100368f7:	push   eax
100368f8:	push   esi
100368f9:	lea    ecx,[esp+0x28]
100368fd:	call   0x1000133b
10036902:	lea    ecx,[esp+0x3c]
10036906:	mov    BYTE PTR [esp+0x70],0x2
1003690b:	call   0x100432c1
10036910:	push   0xffffffff
10036912:	mov    BYTE PTR [esp+0x74],0x3
10036917:	push   ebx
10036918:	lea    ecx,[esp+0x28]
1003691c:	push   ecx
1003691d:	lea    ecx,[esp+0x54]
10036921:	mov    DWORD PTR [esp+0x48],0x10074a3c
10036929:	mov    DWORD PTR [esp+0x6c],edi
1003692d:	mov    DWORD PTR [esp+0x68],ebx
10036931:	mov    BYTE PTR [esp+0x58],bl
10036935:	call   0x10001241
1003693a:	push   0x10076508
1003693f:	lea    edx,[esp+0x40]
10036943:	push   edx
10036944:	mov    BYTE PTR [esp+0x78],0x2
10036949:	call   0x10047942
1003694e:	cmp    DWORD PTR [esi+0x8],0x2
10036952:	jne    0x100369ac
10036954:	mov    ebx,DWORD PTR [esi]
10036956:	lea    eax,[ebx+0xc]
10036959:	push   eax
1003695a:	call   0x100438d7
1003695f:	mov    edi,eax
10036961:	add    esp,0x4
10036964:	cmp    edi,esi
10036966:	je     0x10036971
10036968:	push   esi
10036969:	call   0x10042fe2
1003696e:	add    esp,0x4
10036971:	mov    ecx,DWORD PTR [ebp+0x10]
10036974:	push   0x0
10036976:	mov    DWORD PTR [edi],ebx
10036978:	mov    DWORD PTR [edi+0x4],ecx
1003697b:	mov    eax,DWORD PTR [edi]
1003697d:	add    eax,0xc
10036980:	lea    edx,[esp+0x1c]
10036984:	push   edx
10036985:	push   eax
10036986:	push   edi
10036987:	push   eax
10036988:	mov    eax,DWORD PTR [ebp+0x8]
1003698b:	mov    ecx,DWORD PTR [eax]
1003698d:	push   edi
1003698e:	push   0x22c038
10036993:	mov    esi,edi
10036995:	push   ecx
10036996:	mov    DWORD PTR [esp+0x34],esi
1003699a:	call   DWORD PTR ds:0x1006726c
100369a0:	test   eax,eax
100369a2:	je     0x100369e3
100369a4:	cmp    DWORD PTR [edi+0x8],0x2
100369a8:	je     0x10036954
100369aa:	xor    ebx,ebx
100369ac:	mov    eax,DWORD PTR [esi+0x8]
100369af:	cmp    eax,0x1
100369b2:	jne    0x10036a72
100369b8:	mov    edi,DWORD PTR [ebp+0xc]
100369bb:	push   esi
100369bc:	mov    DWORD PTR [edi],ebx
100369be:	call   0x10042fe2
100369c3:	push   ebx
100369c4:	call   0x10042fe2
100369c9:	add    esp,0x8
100369cc:	mov    eax,edi
100369ce:	mov    ecx,DWORD PTR [esp+0x68]
100369d2:	mov    DWORD PTR fs:0x0,ecx
100369d9:	pop    ecx
100369da:	pop    edi
100369db:	pop    esi
100369dc:	pop    ebx
100369dd:	mov    esp,ebp
100369df:	pop    ebp
100369e0:	ret    0x10
100369e3:	push   0x10075008
100369e8:	push   0x1e
100369ea:	mov    ecx,0x10074c38
100369ef:	call   0x100042b4
100369f4:	mov    esi,eax
100369f6:	mov    edi,0xf
100369fb:	push   esi
100369fc:	mov    DWORD PTR [esp+0x44],edi
10036a00:	mov    DWORD PTR [esp+0x40],0x0
10036a08:	mov    BYTE PTR [esp+0x30],0x0
10036a0d:	call   0x10043450
10036a12:	add    esp,0xc
10036a15:	push   eax
10036a16:	push   esi
10036a17:	lea    ecx,[esp+0x28]
10036a1b:	call   0x1000133b
10036a20:	lea    ecx,[esp+0x3c]
10036a24:	mov    BYTE PTR [esp+0x70],0x4
10036a29:	call   0x100432c1
10036a2e:	push   0xffffffff
10036a30:	mov    BYTE PTR [esp+0x74],0x5
10036a35:	push   0x0
10036a37:	lea    edx,[esp+0x28]
10036a3b:	push   edx
10036a3c:	lea    ecx,[esp+0x54]
10036a40:	mov    DWORD PTR [esp+0x48],0x10074a3c
10036a48:	mov    DWORD PTR [esp+0x6c],edi
10036a4c:	mov    DWORD PTR [esp+0x68],0x0
10036a54:	mov    BYTE PTR [esp+0x58],0x0
10036a59:	call   0x10001241
10036a5e:	push   0x10076508
10036a63:	lea    eax,[esp+0x40]
10036a67:	push   eax
10036a68:	mov    BYTE PTR [esp+0x78],0x4
10036a6d:	call   0x10047942
10036a72:	cmp    eax,ebx
10036a74:	je     0x10036ab7
10036a76:	push   0x10075048
10036a7b:	push   0x1e
10036a7d:	mov    ecx,0x10074c38
10036a82:	call   0x100042b4
10036a87:	add    esp,0x8
10036a8a:	push   eax
10036a8b:	lea    ecx,[esp+0x24]
10036a8f:	call   0x100011a7
10036a94:	lea    ecx,[esp+0x20]
10036a98:	push   ecx
10036a99:	lea    edx,[esp+0x40]
10036a9d:	push   edx
10036a9e:	mov    BYTE PTR [esp+0x78],0x6
10036aa3:	call   0x10006eba
10036aa8:	push   0x10076508
10036aad:	lea    eax,[esp+0x40]
10036ab1:	push   eax
10036ab2:	call   0x10047942
10036ab7:	mov    eax,DWORD PTR [esi]
10036ab9:	mov    ebx,DWORD PTR [ebp+0x14]
10036abc:	push   eax
10036abd:	mov    DWORD PTR [ebx],eax
10036abf:	call   0x100438d7
10036ac4:	mov    edi,eax
10036ac6:	add    esp,0x4
10036ac9:	test   edi,edi
10036acb:	je     0x10036ad7
10036acd:	push   0x0
10036acf:	call   0x10042fe2
10036ad4:	add    esp,0x4
10036ad7:	mov    ecx,DWORD PTR [ebx]
10036ad9:	push   ecx
10036ada:	lea    edx,[esi+0xc]
10036add:	push   edx
10036ade:	push   edi
10036adf:	call   0x10045340
10036ae4:	mov    ebx,DWORD PTR [ebp+0xc]
10036ae7:	push   esi
10036ae8:	mov    DWORD PTR [ebx],edi
10036aea:	call   0x10042fe2
10036aef:	push   0x0
10036af1:	call   0x10042fe2
10036af6:	add    esp,0x14
10036af9:	mov    eax,ebx
10036afb:	mov    ecx,DWORD PTR [esp+0x68]
10036aff:	mov    DWORD PTR fs:0x0,ecx
10036b06:	pop    ecx
10036b07:	pop    edi
10036b08:	pop    esi
10036b09:	pop    ebx
10036b0a:	mov    esp,ebp
10036b0c:	pop    ebp
10036b0d:	ret    0x10
10036b10:	push   0xffffffff
10036b12:	push   0x10061987
10036b17:	mov    eax,fs:0x0
10036b1d:	push   eax
10036b1e:	sub    esp,0x198
10036b24:	mov    eax,ds:0x100801ac
10036b29:	xor    eax,esp
10036b2b:	mov    DWORD PTR [esp+0x194],eax
10036b32:	push   ebx
10036b33:	push   esi
10036b34:	push   edi
10036b35:	mov    eax,ds:0x100801ac
10036b3a:	xor    eax,esp
10036b3c:	push   eax
10036b3d:	lea    eax,[esp+0x1a8]
10036b44:	mov    fs:0x0,eax
10036b4a:	mov    esi,ecx
10036b4c:	mov    eax,esi
10036b4e:	mov    edi,edx
10036b50:	lea    edx,[eax+0x2]
10036b53:	xor    ebx,ebx
10036b55:	mov    cx,WORD PTR [eax]
10036b58:	add    eax,0x2
10036b5b:	cmp    cx,bx
10036b5e:	jne    0x10036b55
10036b60:	sub    eax,edx
10036b62:	sar    eax,1
10036b64:	add    eax,0x1
10036b67:	cmp    eax,0x80
10036b6c:	jbe    0x10036c03
10036b72:	push   0x10075080
10036b77:	push   0x1e
10036b79:	mov    ecx,0x100750c0
10036b7e:	call   0x100042b4
10036b83:	mov    esi,eax
10036b85:	mov    edi,0xf
10036b8a:	push   esi
10036b8b:	mov    DWORD PTR [esp+0x5c],edi
10036b8f:	mov    DWORD PTR [esp+0x58],ebx
10036b93:	mov    BYTE PTR [esp+0x48],bl
10036b97:	call   0x10043450
10036b9c:	add    esp,0xc
10036b9f:	push   eax
10036ba0:	push   esi
10036ba1:	lea    ecx,[esp+0x40]
10036ba5:	call   0x1000133b
10036baa:	lea    ecx,[esp+0x54]
10036bae:	mov    DWORD PTR [esp+0x1b0],ebx
10036bb5:	call   0x100432c1
10036bba:	push   0xffffffff
10036bbc:	mov    BYTE PTR [esp+0x1b4],0x1
10036bc4:	push   ebx
10036bc5:	lea    eax,[esp+0x40]
10036bc9:	push   eax
10036bca:	lea    ecx,[esp+0x6c]
10036bce:	mov    DWORD PTR [esp+0x60],0x10074a3c
10036bd6:	mov    DWORD PTR [esp+0x84],edi
10036bdd:	mov    DWORD PTR [esp+0x80],ebx
10036be4:	mov    BYTE PTR [esp+0x70],bl
10036be8:	call   0x10001241
10036bed:	push   0x10076508
10036bf2:	lea    ecx,[esp+0x58]
10036bf6:	push   ecx
10036bf7:	mov    BYTE PTR [esp+0x1b8],bl
10036bfe:	call   0x10047942
10036c03:	call   DWORD PTR ds:0x10080ffc
10036c09:	lea    edx,[esp+0xa4]
10036c10:	mov    eax,esi
10036c12:	sub    edx,esi
10036c14:	movzx  ecx,WORD PTR [eax]
10036c17:	mov    WORD PTR [edx+eax*1],cx
10036c1b:	add    eax,0x2
10036c1e:	cmp    cx,bx
10036c21:	jne    0x10036c14
10036c23:	push   0x1
10036c25:	call   0x100438d7
10036c2a:	mov    esi,eax
10036c2c:	add    esp,0x4
10036c2f:	mov    DWORD PTR [esp+0x14],esi
10036c33:	push   ebx
10036c34:	lea    edx,[esp+0x1c]
10036c38:	push   edx
10036c39:	push   0x100
10036c3e:	lea    eax,[esp+0xb0]
10036c45:	push   eax
10036c46:	push   0x100
10036c4b:	mov    ecx,eax
10036c4d:	push   ecx
10036c4e:	mov    DWORD PTR [esp+0x1c8],0x2
10036c59:	mov    edx,DWORD PTR [edi]
10036c5b:	push   0x22c070
10036c60:	push   edx
10036c61:	call   DWORD PTR ds:0x1006726c
10036c67:	test   eax,eax
10036c69:	jne    0x10036d0e
10036c6f:	push   0x100750e0
10036c74:	push   0x1a
10036c76:	mov    ecx,0x1007511c
10036c7b:	call   0x100042b4
10036c80:	mov    esi,eax
10036c82:	mov    edi,0xf
10036c87:	push   esi
10036c88:	mov    DWORD PTR [esp+0x40],edi
10036c8c:	mov    DWORD PTR [esp+0x3c],ebx
10036c90:	mov    BYTE PTR [esp+0x2c],bl
10036c94:	call   0x10043450
10036c99:	add    esp,0xc
10036c9c:	push   eax
10036c9d:	push   esi
10036c9e:	lea    ecx,[esp+0x24]
10036ca2:	call   0x1000133b
10036ca7:	lea    ecx,[esp+0x7c]
10036cab:	mov    BYTE PTR [esp+0x1b0],0x3
10036cb3:	call   0x100432c1
10036cb8:	push   0xffffffff
10036cba:	mov    BYTE PTR [esp+0x1b4],0x4
10036cc2:	push   ebx
10036cc3:	lea    eax,[esp+0x24]
10036cc7:	push   eax
10036cc8:	lea    ecx,[esp+0x94]
10036ccf:	mov    DWORD PTR [esp+0x88],0x10074a3c
10036cda:	mov    DWORD PTR [esp+0xac],edi
10036ce1:	mov    DWORD PTR [esp+0xa8],ebx
10036ce8:	mov    BYTE PTR [esp+0x98],bl
10036cef:	call   0x10001241
10036cf4:	push   0x10076508
10036cf9:	lea    ecx,[esp+0x80]
10036d00:	push   ecx
10036d01:	mov    BYTE PTR [esp+0x1b8],0x3
10036d09:	call   0x10047942
10036d0e:	push   esi
10036d0f:	call   0x10042fe2
10036d14:	add    esp,0x4
10036d17:	mov    ecx,DWORD PTR [esp+0x1a8]
10036d1e:	mov    DWORD PTR fs:0x0,ecx
10036d25:	pop    ecx
10036d26:	pop    edi
10036d27:	pop    esi
10036d28:	pop    ebx
10036d29:	mov    ecx,DWORD PTR [esp+0x194]
10036d30:	xor    ecx,esp
10036d32:	call   0x10043615
10036d37:	add    esp,0x1a4
10036d3d:	ret    
10036d3e:	int3   
10036d3f:	int3   
10036d40:	push   ecx
10036d41:	push   esi
10036d42:	push   0x1fe
10036d47:	call   0x10043196
10036d4c:	mov    esi,eax
10036d4e:	add    esp,0x4
10036d51:	test   esi,esi
10036d53:	je     0x10036d67
10036d55:	push   0x1fe
10036d5a:	push   0x0
10036d5c:	push   esi
10036d5d:	call   0x10045dc0
10036d62:	add    esp,0xc
10036d65:	jmp    0x10036d69
10036d67:	xor    esi,esi
10036d69:	mov    edx,esi
10036d6b:	mov    eax,edi
10036d6d:	sub    edx,edi
10036d6f:	nop
10036d70:	movzx  ecx,WORD PTR [eax]
10036d73:	mov    WORD PTR [edx+eax*1],cx
10036d77:	add    eax,0x2
10036d7a:	test   cx,cx
10036d7d:	jne    0x10036d70
10036d7f:	mov    ecx,DWORD PTR [esp+0xc]
10036d83:	mov    edx,DWORD PTR [ecx]
10036d85:	push   0x0
10036d87:	lea    eax,[esp+0x8]
10036d8b:	push   eax
10036d8c:	push   0x1fe
10036d91:	push   esi
10036d92:	push   0x1fe
10036d97:	push   esi
10036d98:	push   0x22c064
10036d9d:	push   edx
10036d9e:	call   DWORD PTR ds:0x1006726c
10036da4:	push   esi
10036da5:	call   0x10042fe2
10036daa:	add    esp,0x4
10036dad:	pop    esi
10036dae:	pop    ecx
10036daf:	ret    0x4
10036db2:	int3   
10036db3:	int3   
10036db4:	int3   
10036db5:	int3   
10036db6:	int3   
10036db7:	int3   
10036db8:	int3   
10036db9:	int3   
10036dba:	int3   
10036dbb:	int3   
10036dbc:	int3   
10036dbd:	int3   
10036dbe:	int3   
10036dbf:	int3   
10036dc0:	push   0xffffffff
10036dc2:	push   0x10060d68
10036dc7:	mov    eax,fs:0x0
10036dcd:	push   eax
10036dce:	push   ecx
10036dcf:	push   ebx
10036dd0:	push   ebp
10036dd1:	push   esi
10036dd2:	push   edi
10036dd3:	mov    eax,ds:0x100801ac
10036dd8:	xor    eax,esp
10036dda:	push   eax
10036ddb:	lea    eax,[esp+0x18]
10036ddf:	mov    fs:0x0,eax
10036de5:	mov    ebp,DWORD PTR [esp+0x30]
10036de9:	push   0x440
10036dee:	call   0x10043196
10036df3:	mov    ebx,eax
10036df5:	add    esp,0x4
10036df8:	test   ebx,ebx
10036dfa:	je     0x10036e0e
10036dfc:	push   0x440
10036e01:	push   0x0
10036e03:	push   ebx
10036e04:	call   0x10045dc0
10036e09:	add    esp,0xc
10036e0c:	jmp    0x10036e10
10036e0e:	xor    ebx,ebx
10036e10:	mov    DWORD PTR [esp+0x30],ebx
10036e14:	push   0x10075138
10036e19:	mov    DWORD PTR [esp+0x24],0x0
10036e21:	push   0x4
10036e23:	mov    ecx,0x10075178
10036e28:	mov    WORD PTR [ebx],0x0
10036e2d:	call   0x1000444a
10036e32:	add    esp,0x8
10036e35:	mov    edx,eax
10036e37:	mov    cx,WORD PTR [eax]
10036e3a:	add    eax,0x2
10036e3d:	test   cx,cx
10036e40:	jne    0x10036e37
10036e42:	mov    edi,ebx
10036e44:	sub    eax,edx
10036e46:	add    edi,0xfffffffe
10036e49:	lea    esp,[esp+0x0]
10036e50:	mov    cx,WORD PTR [edi+0x2]
10036e54:	add    edi,0x2
10036e57:	test   cx,cx
10036e5a:	jne    0x10036e50
10036e5c:	mov    ecx,eax
10036e5e:	shr    ecx,0x2
10036e61:	mov    esi,edx
10036e63:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10036e65:	mov    ecx,eax
10036e67:	mov    eax,DWORD PTR [esp+0x2c]
10036e6b:	and    ecx,0x3
10036e6e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10036e70:	mov    ecx,eax
10036e72:	mov    dx,WORD PTR [eax]
10036e75:	add    eax,0x2
10036e78:	test   dx,dx
10036e7b:	jne    0x10036e72
10036e7d:	mov    edi,ebx
10036e7f:	sub    eax,ecx
10036e81:	mov    esi,ecx
10036e83:	add    edi,0xfffffffe
10036e86:	mov    cx,WORD PTR [edi+0x2]
10036e8a:	add    edi,0x2
10036e8d:	test   cx,cx
10036e90:	jne    0x10036e86
10036e92:	mov    ecx,eax
10036e94:	shr    ecx,0x2
10036e97:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10036e99:	mov    ecx,eax
10036e9b:	and    ecx,0x3
10036e9e:	lea    edx,[ebx+0x400]
10036ea4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10036ea6:	mov    eax,ebp
10036ea8:	sub    edx,ebp
10036eaa:	lea    ebx,[ebx+0x0]
10036eb0:	movzx  ecx,WORD PTR [eax]
10036eb3:	mov    WORD PTR [edx+eax*1],cx
10036eb7:	add    eax,0x2
10036eba:	test   cx,cx
10036ebd:	jne    0x10036eb0
10036ebf:	mov    ecx,DWORD PTR [esp+0x28]
10036ec3:	mov    edx,DWORD PTR [ecx]
10036ec5:	push   0x0
10036ec7:	lea    eax,[esp+0x18]
10036ecb:	push   eax
10036ecc:	push   0x440
10036ed1:	push   ebx
10036ed2:	push   0x440
10036ed7:	push   ebx
10036ed8:	push   0x22c078
10036edd:	push   edx
10036ede:	call   DWORD PTR ds:0x1006726c
10036ee4:	push   ebx
10036ee5:	call   0x10042fe2
10036eea:	add    esp,0x4
10036eed:	mov    ecx,DWORD PTR [esp+0x18]
10036ef1:	mov    DWORD PTR fs:0x0,ecx
10036ef8:	pop    ecx
10036ef9:	pop    edi
10036efa:	pop    esi
10036efb:	pop    ebp
10036efc:	pop    ebx
10036efd:	add    esp,0x10
10036f00:	ret    0xc
10036f03:	int3   
10036f04:	int3   
10036f05:	int3   
10036f06:	int3   
10036f07:	int3   
10036f08:	int3   
10036f09:	int3   
10036f0a:	int3   
10036f0b:	int3   
10036f0c:	int3   
10036f0d:	int3   
10036f0e:	int3   
10036f0f:	int3   
10036f10:	mov    ecx,DWORD PTR [eax]
10036f12:	push   ecx
10036f13:	call   0x10042fe2
10036f18:	pop    ecx
10036f19:	ret    
10036f1a:	int3   
10036f1b:	int3   
10036f1c:	int3   
10036f1d:	int3   
10036f1e:	int3   
10036f1f:	int3   
10036f20:	push   0x10082dbc
10036f25:	call   DWORD PTR ds:0x100670b0
10036f2b:	mov    eax,DWORD PTR [esp+0x4]
10036f2f:	ret    0x4
10036f32:	int3   
10036f33:	int3   
10036f34:	int3   
10036f35:	int3   
10036f36:	int3   
10036f37:	int3   
10036f38:	int3   
10036f39:	int3   
10036f3a:	int3   
10036f3b:	int3   
10036f3c:	int3   
10036f3d:	int3   
10036f3e:	int3   
10036f3f:	int3   
10036f40:	push   0x10082dbc
10036f45:	call   DWORD PTR ds:0x100670bc
10036f4b:	ret    
10036f4c:	int3   
10036f4d:	int3   
10036f4e:	int3   
10036f4f:	int3   
10036f50:	push   ebp
10036f51:	mov    ebp,esp
10036f53:	and    esp,0xfffffff8
10036f56:	mov    ecx,DWORD PTR [eax]
10036f58:	sub    esp,0x28
10036f5b:	cmp    ecx,DWORD PTR [eax+0x4]
10036f5e:	jb     0x10036f78
10036f60:	lea    eax,[esp]
10036f63:	push   eax
10036f64:	call   0x100370a0
10036f69:	push   0x10076554
10036f6e:	lea    ecx,[esp+0x4]
10036f72:	push   ecx
10036f73:	call   0x10047942
10036f78:	mov    edx,DWORD PTR [eax+0x8]
10036f7b:	mov    al,BYTE PTR [ecx+edx*1]
10036f7e:	mov    esp,ebp
10036f80:	pop    ebp
10036f81:	ret    
10036f82:	int3   
10036f83:	int3   
10036f84:	int3   
10036f85:	int3   
10036f86:	int3   
10036f87:	int3   
10036f88:	int3   
10036f89:	int3   
10036f8a:	int3   
10036f8b:	int3   
10036f8c:	int3   
10036f8d:	int3   
10036f8e:	int3   
10036f8f:	int3   
10036f90:	push   esi
10036f91:	mov    esi,ecx
10036f93:	mov    DWORD PTR [esi],0x10074a3c
10036f99:	cmp    DWORD PTR [esi+0x24],0x10
10036f9d:	jb     0x10036fab
10036f9f:	mov    eax,DWORD PTR [esi+0x10]
10036fa2:	push   eax
10036fa3:	call   0x10042fe2
10036fa8:	add    esp,0x4
10036fab:	xor    eax,eax
10036fad:	mov    DWORD PTR [esi+0x24],0xf
10036fb4:	mov    DWORD PTR [esi+0x20],eax
10036fb7:	mov    BYTE PTR [esi+0x10],al
10036fba:	mov    ecx,esi
10036fbc:	pop    esi
10036fbd:	jmp    0x10043390
10036fc2:	int3   
10036fc3:	int3   
10036fc4:	int3   
10036fc5:	int3   
10036fc6:	int3   
10036fc7:	int3   
10036fc8:	int3   
10036fc9:	int3   
10036fca:	int3   
10036fcb:	int3   
10036fcc:	int3   
10036fcd:	int3   
10036fce:	int3   
10036fcf:	int3   
10036fd0:	push   0xffffffff
10036fd2:	push   0x100603c8
10036fd7:	mov    eax,fs:0x0
10036fdd:	push   eax
10036fde:	push   ecx
10036fdf:	push   esi
10036fe0:	push   edi
10036fe1:	mov    eax,ds:0x100801ac
10036fe6:	xor    eax,esp
10036fe8:	push   eax
10036fe9:	lea    eax,[esp+0x10]
10036fed:	mov    fs:0x0,eax
10036ff3:	mov    esi,ecx
10036ff5:	mov    DWORD PTR [esp+0xc],esi
10036ff9:	mov    edi,DWORD PTR [esp+0x20]
10036ffd:	push   edi
10036ffe:	call   0x10043338
10037003:	xor    edx,edx
10037005:	mov    DWORD PTR [esp+0x18],edx
10037009:	push   0xffffffff
1003700b:	lea    ecx,[esi+0xc]
1003700e:	mov    DWORD PTR [esi],0x10074a3c
10037014:	lea    eax,[edi+0xc]
10037017:	push   edx
10037018:	mov    DWORD PTR [ecx+0x18],0xf
1003701f:	mov    DWORD PTR [ecx+0x14],edx
10037022:	push   eax
10037023:	mov    BYTE PTR [ecx+0x4],dl
10037026:	call   0x10001241
1003702b:	mov    DWORD PTR [esi],0x100751dc
10037031:	mov    eax,esi
10037033:	mov    ecx,DWORD PTR [esp+0x10]
10037037:	mov    DWORD PTR fs:0x0,ecx
1003703e:	pop    ecx
1003703f:	pop    edi
10037040:	pop    esi
10037041:	add    esp,0x10
10037044:	ret    0x4
10037047:	int3   
10037048:	int3   
10037049:	int3   
1003704a:	int3   
1003704b:	int3   
1003704c:	int3   
1003704d:	int3   
1003704e:	int3   
1003704f:	int3   
10037050:	push   esi
10037051:	mov    esi,ecx
10037053:	mov    DWORD PTR [esi],0x10074a3c
10037059:	cmp    DWORD PTR [esi+0x24],0x10
1003705d:	jb     0x1003706b
1003705f:	mov    eax,DWORD PTR [esi+0x10]
10037062:	push   eax
10037063:	call   0x10042fe2
10037068:	add    esp,0x4
1003706b:	xor    eax,eax
1003706d:	mov    DWORD PTR [esi+0x24],0xf
10037074:	mov    DWORD PTR [esi+0x20],eax
10037077:	mov    ecx,esi
10037079:	mov    BYTE PTR [esi+0x10],al
1003707c:	call   0x10043390
10037081:	test   BYTE PTR [esp+0x8],0x1
10037086:	je     0x10037091
10037088:	push   esi
10037089:	call   0x10042fe2
1003708e:	add    esp,0x4
10037091:	mov    eax,esi
10037093:	pop    esi
10037094:	ret    0x4
10037097:	int3   
10037098:	int3   
10037099:	int3   
1003709a:	int3   
1003709b:	int3   
1003709c:	int3   
1003709d:	int3   
1003709e:	int3   
1003709f:	int3   
100370a0:	push   0xffffffff
100370a2:	push   0x10061930
100370a7:	mov    eax,fs:0x0
100370ad:	push   eax
100370ae:	sub    esp,0x1c
100370b1:	push   ebx
100370b2:	push   esi
100370b3:	push   edi
100370b4:	mov    eax,ds:0x100801ac
100370b9:	xor    eax,esp
100370bb:	push   eax
100370bc:	lea    eax,[esp+0x2c]
100370c0:	mov    fs:0x0,eax
100370c6:	mov    esi,DWORD PTR [esp+0x3c]
100370ca:	push   0x10075188
100370cf:	push   0xd
100370d1:	mov    ecx,0x100751c8
100370d6:	call   0x100042b4
100370db:	mov    edi,eax
100370dd:	xor    ebx,ebx
100370df:	push   edi
100370e0:	mov    DWORD PTR [esp+0x34],0xf
100370e8:	mov    DWORD PTR [esp+0x30],ebx
100370ec:	mov    BYTE PTR [esp+0x20],bl
100370f0:	call   0x10043450
100370f5:	add    esp,0xc
100370f8:	push   eax
100370f9:	push   edi
100370fa:	lea    ecx,[esp+0x18]
100370fe:	call   0x1000133b
10037103:	mov    ecx,esi
10037105:	mov    DWORD PTR [esp+0x34],ebx
10037109:	call   0x100432c1
1003710e:	mov    BYTE PTR [esp+0x34],0x1
10037113:	push   0xffffffff
10037115:	lea    ecx,[esi+0xc]
10037118:	mov    DWORD PTR [esi],0x10074a3c
1003711e:	push   ebx
1003711f:	lea    eax,[esp+0x18]
10037123:	mov    DWORD PTR [ecx+0x18],0xf
1003712a:	mov    DWORD PTR [ecx+0x14],ebx
1003712d:	push   eax
1003712e:	mov    BYTE PTR [ecx+0x4],bl
10037131:	call   0x10001241
10037136:	cmp    DWORD PTR [esp+0x28],0x10
1003713b:	jb     0x1003714a
1003713d:	mov    ecx,DWORD PTR [esp+0x14]
10037141:	push   ecx
10037142:	call   0x10042fe2
10037147:	add    esp,0x4
1003714a:	mov    eax,esi
1003714c:	mov    DWORD PTR [esi],0x100751dc
10037152:	mov    ecx,DWORD PTR [esp+0x2c]
10037156:	mov    DWORD PTR fs:0x0,ecx
1003715d:	pop    ecx
1003715e:	pop    edi
1003715f:	pop    esi
10037160:	pop    ebx
10037161:	add    esp,0x28
10037164:	ret    0x4
10037167:	int3   
10037168:	int3   
10037169:	int3   
1003716a:	int3   
1003716b:	int3   
1003716c:	int3   
1003716d:	int3   
1003716e:	int3   
1003716f:	int3   
10037170:	push   0xffffffff
10037172:	push   0x10062be1
10037177:	mov    eax,fs:0x0
1003717d:	push   eax
1003717e:	sub    esp,0x10
10037181:	push   ebx
10037182:	push   ebp
10037183:	push   edi
10037184:	mov    eax,ds:0x100801ac
10037189:	xor    eax,esp
1003718b:	push   eax
1003718c:	lea    eax,[esp+0x20]
10037190:	mov    fs:0x0,eax
10037196:	mov    ebp,DWORD PTR [esp+0x30]
1003719a:	xor    eax,eax
1003719c:	mov    DWORD PTR [esp+0x10],eax
100371a0:	mov    ecx,DWORD PTR [ebp+0x0]
100371a3:	mov    DWORD PTR [esp+0x14],esi
100371a7:	mov    DWORD PTR [esp+0x18],ebp
100371ab:	mov    DWORD PTR [esp+0x1c],ecx
100371af:	mov    edi,0x1
100371b4:	mov    DWORD PTR [esp+0x28],edi
100371b8:	mov    DWORD PTR [esi+0x18],0xf
100371bf:	mov    DWORD PTR [esi+0x14],eax
100371c2:	mov    BYTE PTR [esi+0x4],al
100371c5:	mov    eax,ebp
100371c7:	mov    DWORD PTR [esp+0x10],edi
100371cb:	call   0x10036f50
100371d0:	test   al,al
100371d2:	je     0x10037279
100371d8:	mov    eax,ebp
100371da:	call   0x10036f50
100371df:	or     edx,0xffffffff
100371e2:	sub    edx,DWORD PTR [esi+0x14]
100371e5:	mov    bl,al
100371e7:	cmp    edx,0x1
100371ea:	ja     0x100371f1
100371ec:	call   0x100574b0
100371f1:	mov    edi,DWORD PTR [esi+0x14]
100371f4:	add    edi,0x1
100371f7:	cmp    edi,0xfffffffe
100371fa:	jbe    0x10037201
100371fc:	call   0x100574b0
10037201:	mov    eax,DWORD PTR [esi+0x18]
10037204:	cmp    eax,edi
10037206:	jae    0x1003722a
10037208:	mov    eax,DWORD PTR [esi+0x14]
1003720b:	push   eax
1003720c:	push   edi
1003720d:	mov    ecx,esi
1003720f:	call   0x10001500
10037214:	test   edi,edi
10037216:	jbe    0x10037260
10037218:	mov    ecx,DWORD PTR [esi+0x14]
1003721b:	mov    edx,0x10
10037220:	cmp    DWORD PTR [esi+0x18],edx
10037223:	jb     0x10037246
10037225:	mov    eax,DWORD PTR [esi+0x4]
10037228:	jmp    0x10037249
1003722a:	test   edi,edi
1003722c:	jne    0x10037216
1003722e:	cmp    eax,0x10
10037231:	mov    DWORD PTR [esi+0x14],edi
10037234:	jb     0x1003723e
10037236:	mov    eax,DWORD PTR [esi+0x4]
10037239:	mov    BYTE PTR [eax],0x0
1003723c:	jmp    0x10037260
1003723e:	lea    eax,[esi+0x4]
10037241:	mov    BYTE PTR [eax],0x0
10037244:	jmp    0x10037260
10037246:	lea    eax,[esi+0x4]
10037249:	mov    BYTE PTR [eax+ecx*1],bl
1003724c:	cmp    DWORD PTR [esi+0x18],edx
1003724f:	mov    DWORD PTR [esi+0x14],edi
10037252:	jb     0x10037259
10037254:	mov    eax,DWORD PTR [esi+0x4]
10037257:	jmp    0x1003725c
10037259:	lea    eax,[esi+0x4]
1003725c:	mov    BYTE PTR [eax+edi*1],0x0
10037260:	add    DWORD PTR [ebp+0x0],0x1
10037264:	mov    eax,ebp
10037266:	call   0x10036f50
1003726b:	test   al,al
1003726d:	jne    0x100371d8
10037273:	add    DWORD PTR [ebp+0x0],0x1
10037277:	jmp    0x1003727c
10037279:	add    DWORD PTR [ebp+0x0],edi
1003727c:	mov    eax,esi
1003727e:	mov    ecx,DWORD PTR [esp+0x20]
10037282:	mov    DWORD PTR fs:0x0,ecx
10037289:	pop    ecx
1003728a:	pop    edi
1003728b:	pop    ebp
1003728c:	pop    ebx
1003728d:	add    esp,0x1c
10037290:	ret    0x4
10037293:	int3   
10037294:	int3   
10037295:	int3   
10037296:	int3   
10037297:	int3   
10037298:	int3   
10037299:	int3   
1003729a:	int3   
1003729b:	int3   
1003729c:	int3   
1003729d:	int3   
1003729e:	int3   
1003729f:	int3   
100372a0:	push   ebp
100372a1:	mov    ebp,esp
100372a3:	and    esp,0xfffffff8
100372a6:	push   0xffffffff
100372a8:	push   0x100637d8
100372ad:	mov    eax,fs:0x0
100372b3:	push   eax
100372b4:	sub    esp,0x38
100372b7:	push   ebx
100372b8:	mov    eax,ds:0x100801ac
100372bd:	xor    eax,esp
100372bf:	push   eax
100372c0:	lea    eax,[esp+0x40]
100372c4:	mov    fs:0x0,eax
100372ca:	xor    eax,eax
100372cc:	mov    DWORD PTR [esp+0xc],eax
100372d0:	mov    ecx,DWORD PTR [esi]
100372d2:	mov    DWORD PTR [esp+0xc],esi
100372d6:	mov    DWORD PTR [esp+0x10],ecx
100372da:	push   esi
100372db:	mov    DWORD PTR [esp+0x4c],eax
100372df:	call   0x100374b0
100372e4:	mov    ecx,DWORD PTR [esi]
100372e6:	mov    edx,DWORD PTR [esi+0x4]
100372e9:	mov    ebx,eax
100372eb:	sub    edx,ecx
100372ed:	cmp    ebx,edx
100372ef:	jbe    0x1003730a
100372f1:	lea    eax,[esp+0x14]
100372f5:	push   eax
100372f6:	call   0x100370a0
100372fb:	push   0x10076554
10037300:	lea    ecx,[esp+0x18]
10037304:	push   ecx
10037305:	call   0x10047942
1003730a:	mov    eax,DWORD PTR [esi+0x8]
1003730d:	add    eax,ecx
1003730f:	push   ebx
10037310:	mov    DWORD PTR [edi+0x18],0xf
10037317:	mov    DWORD PTR [edi+0x14],0x0
1003731e:	push   eax
1003731f:	mov    ecx,edi
10037321:	mov    BYTE PTR [edi+0x4],0x0
10037325:	call   0x1000133b
1003732a:	add    DWORD PTR [esi],ebx
1003732c:	mov    eax,edi
1003732e:	mov    ecx,DWORD PTR [esp+0x40]
10037332:	mov    DWORD PTR fs:0x0,ecx
10037339:	pop    ecx
1003733a:	pop    ebx
1003733b:	mov    esp,ebp
1003733d:	pop    ebp
1003733e:	ret    
1003733f:	int3   
10037340:	push   0xffffffff
10037342:	push   0x10063db9
10037347:	mov    eax,fs:0x0
1003734d:	push   eax
1003734e:	sub    esp,0x28
10037351:	mov    eax,ds:0x100801ac
10037356:	xor    eax,esp
10037358:	mov    DWORD PTR [esp+0x24],eax
1003735c:	push   ebp
1003735d:	push   esi
1003735e:	push   edi
1003735f:	mov    eax,ds:0x100801ac
10037364:	xor    eax,esp
10037366:	push   eax
10037367:	lea    eax,[esp+0x38]
1003736b:	mov    fs:0x0,eax
10037371:	mov    ebp,DWORD PTR [esp+0x48]
10037375:	xor    eax,eax
10037377:	mov    DWORD PTR [esp+0x40],eax
1003737b:	mov    esi,ecx
1003737d:	lea    edi,[esp+0x18]
10037381:	mov    DWORD PTR [esp+0x14],ebp
10037385:	mov    DWORD PTR [esp+0x10],eax
10037389:	call   0x100372a0
1003738e:	mov    DWORD PTR [esp+0x40],0x1
10037396:	mov    eax,ds:0x10082a6c
1003739b:	mov    edx,DWORD PTR [eax+0xc]
1003739e:	mov    ecx,0x10082a6c
100373a3:	call   edx
100373a5:	add    eax,0x10
100373a8:	mov    DWORD PTR [ebp+0x0],eax
100373ab:	mov    eax,0x1006dd18
100373b0:	test   eax,0xffff0000
100373b5:	mov    BYTE PTR [esp+0x40],0x2
100373ba:	jne    0x100373d8
100373bc:	mov    ecx,eax
100373be:	movzx  esi,cx
100373c1:	push   esi
100373c2:	call   0x10002005
100373c7:	add    esp,0x4
100373ca:	test   eax,eax
100373cc:	je     0x100373e3
100373ce:	push   esi
100373cf:	push   eax
100373d0:	push   ebp
100373d1:	call   0x100021cd
100373d6:	jmp    0x100373e3
100373d8:	push   0x1006dd18
100373dd:	push   ebp
100373de:	call   0x100020b3
100373e3:	mov    BYTE PTR [esp+0x40],0x1
100373e8:	mov    eax,DWORD PTR [ebp+0x0]
100373eb:	mov    esi,DWORD PTR [esp+0x2c]
100373ef:	mov    edi,0x10
100373f4:	sub    eax,edi
100373f6:	mov    ecx,0x1
100373fb:	sub    ecx,DWORD PTR [eax+0xc]
100373fe:	mov    eax,DWORD PTR [eax+0x8]
10037401:	add    esi,esi
10037403:	sub    eax,esi
10037405:	or     eax,ecx
10037407:	mov    DWORD PTR [esp+0x10],0x1
1003740f:	jge    0x1003741a
10037411:	mov    eax,esi
10037413:	mov    ecx,ebp
10037415:	call   0x10002253
1003741a:	cmp    DWORD PTR [esp+0x30],edi
1003741e:	mov    ecx,DWORD PTR [ebp+0x0]
10037421:	mov    eax,DWORD PTR [esp+0x1c]
10037425:	jae    0x1003742b
10037427:	lea    eax,[esp+0x1c]
1003742b:	push   esi
1003742c:	push   ecx
1003742d:	push   0xffffffff
1003742f:	push   eax
10037430:	push   0x0
10037432:	push   0xfde9
10037437:	call   DWORD PTR ds:0x1006708c
1003743d:	mov    eax,DWORD PTR [ebp+0x0]
10037440:	test   eax,eax
10037442:	je     0x10037451
10037444:	push   eax
10037445:	call   0x100437c6
1003744a:	add    esp,0x4
1003744d:	test   eax,eax
1003744f:	jl     0x1003749a
10037451:	mov    ecx,DWORD PTR [ebp+0x0]
10037454:	cmp    eax,DWORD PTR [ecx-0x8]
10037457:	jg     0x1003749a
10037459:	mov    DWORD PTR [ecx-0xc],eax
1003745c:	mov    edx,DWORD PTR [ebp+0x0]
1003745f:	mov    WORD PTR [edx+eax*2],0x0
10037465:	cmp    DWORD PTR [esp+0x30],edi
10037469:	jb     0x10037478
1003746b:	mov    eax,DWORD PTR [esp+0x1c]
1003746f:	push   eax
10037470:	call   0x10042fe2
10037475:	add    esp,0x4
10037478:	mov    eax,ebp
1003747a:	mov    ecx,DWORD PTR [esp+0x38]
1003747e:	mov    DWORD PTR fs:0x0,ecx
10037485:	pop    ecx
10037486:	pop    edi
10037487:	pop    esi
10037488:	pop    ebp
10037489:	mov    ecx,DWORD PTR [esp+0x24]
1003748d:	xor    ecx,esp
1003748f:	call   0x10043615
10037494:	add    esp,0x34
10037497:	ret    0x4
1003749a:	push   0x80070057
1003749f:	call   0x10001f2d
100374a4:	int3   
100374a5:	int3   
100374a6:	int3   
100374a7:	int3   
100374a8:	int3   
100374a9:	int3   
100374aa:	int3   
100374ab:	int3   
100374ac:	int3   
100374ad:	int3   
100374ae:	int3   
100374af:	int3   
100374b0:	push   ebp
100374b1:	mov    ebp,esp
100374b3:	and    esp,0xfffffff8
100374b6:	push   0xffffffff
100374b8:	push   0x10062b98
100374bd:	mov    eax,fs:0x0
100374c3:	push   eax
100374c4:	sub    esp,0x3c
100374c7:	push   esi
100374c8:	push   edi
100374c9:	mov    eax,ds:0x100801ac
100374ce:	xor    eax,esp
100374d0:	push   eax
100374d1:	lea    eax,[esp+0x48]
100374d5:	mov    fs:0x0,eax
100374db:	mov    eax,DWORD PTR [ebp+0x8]
100374de:	mov    ecx,DWORD PTR [eax]
100374e0:	mov    DWORD PTR [esp+0x14],eax
100374e4:	mov    DWORD PTR [esp+0x18],ecx
100374e8:	mov    DWORD PTR [esp+0x50],0x0
100374f0:	mov    edi,DWORD PTR [eax+0x4]
100374f3:	cmp    ecx,edi
100374f5:	jb     0x10037510
100374f7:	lea    eax,[esp+0x1c]
100374fb:	push   eax
100374fc:	call   0x100370a0
10037501:	push   0x10076554
10037506:	lea    ecx,[esp+0x20]
1003750a:	push   ecx
1003750b:	call   0x10047942
10037510:	mov    esi,DWORD PTR [eax+0x8]
10037513:	mov    dl,BYTE PTR [esi+ecx*1]
10037516:	add    ecx,0x1
10037519:	cmp    ecx,edi
1003751b:	mov    BYTE PTR [esp+0x10],dl
1003751f:	mov    DWORD PTR [eax],ecx
10037521:	jb     0x1003753c
10037523:	lea    eax,[esp+0x1c]
10037527:	push   eax
10037528:	call   0x100370a0
1003752d:	push   0x10076554
10037532:	lea    ecx,[esp+0x20]
10037536:	push   ecx
10037537:	call   0x10047942
1003753c:	mov    dl,BYTE PTR [ecx+esi*1]
1003753f:	add    ecx,0x1
10037542:	cmp    ecx,edi
10037544:	mov    BYTE PTR [esp+0x11],dl
10037548:	mov    DWORD PTR [eax],ecx
1003754a:	jb     0x10037565
1003754c:	lea    eax,[esp+0x1c]
10037550:	push   eax
10037551:	call   0x100370a0
10037556:	push   0x10076554
1003755b:	lea    ecx,[esp+0x20]
1003755f:	push   ecx
10037560:	call   0x10047942
10037565:	mov    dl,BYTE PTR [ecx+esi*1]
10037568:	add    ecx,0x1
1003756b:	cmp    ecx,edi
1003756d:	mov    BYTE PTR [esp+0x12],dl
10037571:	mov    DWORD PTR [eax],ecx
10037573:	jb     0x1003758e
10037575:	lea    eax,[esp+0x1c]
10037579:	push   eax
1003757a:	call   0x100370a0
1003757f:	push   0x10076554
10037584:	lea    ecx,[esp+0x20]
10037588:	push   ecx
10037589:	call   0x10047942
1003758e:	mov    dl,BYTE PTR [ecx+esi*1]
10037591:	add    ecx,0x1
10037594:	mov    BYTE PTR [esp+0x13],dl
10037598:	mov    DWORD PTR [eax],ecx
1003759a:	mov    eax,DWORD PTR [esp+0x10]
1003759e:	mov    ecx,DWORD PTR [esp+0x48]
100375a2:	mov    DWORD PTR fs:0x0,ecx
100375a9:	pop    ecx
100375aa:	pop    edi
100375ab:	pop    esi
100375ac:	mov    esp,ebp
100375ae:	pop    ebp
100375af:	ret    0x4
100375b2:	int3   
100375b3:	int3   
100375b4:	int3   
100375b5:	int3   
100375b6:	int3   
100375b7:	int3   
100375b8:	int3   
100375b9:	int3   
100375ba:	int3   
100375bb:	int3   
100375bc:	int3   
100375bd:	int3   
100375be:	int3   
100375bf:	int3   
100375c0:	mov    eax,DWORD PTR [esi]
100375c2:	lea    ecx,[eax+edi*1]
100375c5:	sub    esp,0x28
100375c8:	cmp    ecx,DWORD PTR [esi+0x4]
100375cb:	jbe    0x100375e5
100375cd:	lea    edx,[esp]
100375d0:	push   edx
100375d1:	call   0x100370a0
100375d6:	push   0x10076554
100375db:	lea    eax,[esp+0x4]
100375df:	push   eax
100375e0:	call   0x10047942
100375e5:	mov    ecx,DWORD PTR [esi+0x8]
100375e8:	mov    edx,DWORD PTR [esp+0x2c]
100375ec:	push   edi
100375ed:	add    ecx,eax
100375ef:	push   ecx
100375f0:	push   edx
100375f1:	call   0x10045340
100375f6:	add    esp,0xc
100375f9:	add    DWORD PTR [esi],edi
100375fb:	add    esp,0x28
100375fe:	ret    0x4
10037601:	int3   
10037602:	int3   
10037603:	int3   
10037604:	int3   
10037605:	int3   
10037606:	int3   
10037607:	int3   
10037608:	int3   
10037609:	int3   
1003760a:	int3   
1003760b:	int3   
1003760c:	int3   
1003760d:	int3   
1003760e:	int3   
1003760f:	int3   
10037610:	mov    eax,DWORD PTR [ecx]
10037612:	test   eax,eax
10037614:	je     0x1003761b
10037616:	mov    ecx,DWORD PTR [ecx+0x4]
10037619:	mov    DWORD PTR [eax],ecx
1003761b:	ret    
1003761c:	int3   
1003761d:	int3   
1003761e:	int3   
1003761f:	int3   
10037620:	mov    eax,ds:0x10082dc0
10037625:	test   eax,eax
10037627:	jne    0x10037637
10037629:	push   eax
1003762a:	push   eax
1003762b:	push   eax
1003762c:	call   DWORD PTR ds:0x10067080
10037632:	mov    ds:0x10082dc0,eax
10037637:	push   0xffffffff
10037639:	push   eax
1003763a:	call   DWORD PTR ds:0x1006707c
10037640:	test   eax,eax
10037642:	sete   al
10037645:	ret    
10037646:	int3   
10037647:	int3   
10037648:	int3   
10037649:	int3   
1003764a:	int3   
1003764b:	int3   
1003764c:	int3   
1003764d:	int3   
1003764e:	int3   
1003764f:	int3   
10037650:	mov    eax,ds:0x10082dc0
10037655:	test   eax,eax
10037657:	jne    0x10037667
10037659:	push   eax
1003765a:	push   eax
1003765b:	push   eax
1003765c:	call   DWORD PTR ds:0x10067080
10037662:	mov    ds:0x10082dc0,eax
10037667:	push   eax
10037668:	call   DWORD PTR ds:0x10067090
1003766e:	ret    
1003766f:	int3   
10037670:	push   0xffffffff
10037672:	push   0x10061900
10037677:	mov    eax,fs:0x0
1003767d:	push   eax
1003767e:	sub    esp,0x34
10037681:	push   ebx
10037682:	push   ebp
10037683:	push   esi
10037684:	push   edi
10037685:	mov    eax,ds:0x100801ac
1003768a:	xor    eax,esp
1003768c:	push   eax
1003768d:	lea    eax,[esp+0x48]
10037691:	mov    fs:0x0,eax
10037697:	mov    ebp,DWORD PTR [esp+0x58]
1003769b:	xor    edi,edi
1003769d:	mov    DWORD PTR [esp+0x38],edi
100376a1:	mov    DWORD PTR [esp+0x24],edi
100376a5:	push   0x100751e4
100376aa:	push   0x3d
100376ac:	mov    ecx,0x10075218
100376b1:	mov    DWORD PTR [esp+0x58],edi
100376b5:	call   0x1000444a
100376ba:	add    esp,0x8
100376bd:	lea    ecx,[esp+0x1c]
100376c1:	push   ecx
100376c2:	push   0x20019
100376c7:	push   edi
100376c8:	push   eax
100376c9:	push   0x80000002
100376ce:	mov    DWORD PTR [esp+0x30],edi
100376d2:	call   DWORD PTR ds:0x10067020
100376d8:	cmp    eax,edi
100376da:	jne    0x10037aae
100376e0:	mov    edx,DWORD PTR [esp+0x1c]
100376e4:	mov    DWORD PTR [esp+0x24],edx
100376e8:	mov    DWORD PTR [esp+0x20],0x1
100376f0:	mov    eax,ds:0x10082a6c
100376f5:	mov    edx,DWORD PTR [eax+0xc]
100376f8:	mov    ecx,0x10082a6c
100376fd:	call   edx
100376ff:	add    eax,0x10
10037702:	mov    DWORD PTR [esp+0x14],eax
10037706:	mov    BYTE PTR [esp+0x50],0x1
1003770b:	mov    eax,ds:0x10082a6c
10037710:	mov    edx,DWORD PTR [eax+0xc]
10037713:	mov    ecx,0x10082a6c
10037718:	call   edx
1003771a:	lea    ebx,[eax+0x10]
1003771d:	mov    DWORD PTR [esp+0x28],ebx
10037721:	mov    eax,DWORD PTR [esp+0x20]
10037725:	push   eax
10037726:	push   0x10075294
1003772b:	push   0x12
1003772d:	mov    ecx,0x100752cc
10037732:	mov    BYTE PTR [esp+0x5c],0x2
10037737:	call   0x1000444a
1003773c:	add    esp,0x8
1003773f:	push   eax
10037740:	lea    eax,[esp+0x1c]
10037744:	call   0x100066dc
10037749:	mov    esi,DWORD PTR [esp+0x1c]
1003774d:	mov    eax,DWORD PTR [esp+0x24]
10037751:	add    esp,0x8
10037754:	lea    ecx,[esp+0x18]
10037758:	push   ecx
10037759:	push   edi
1003775a:	lea    edx,[esp+0x38]
1003775e:	push   edx
1003775f:	push   edi
10037760:	push   esi
10037761:	push   eax
10037762:	mov    DWORD PTR [esp+0x30],0x2
1003776a:	call   DWORD PTR ds:0x10067000
10037770:	cmp    eax,edi
10037772:	jne    0x10037a6c
10037778:	mov    eax,DWORD PTR [esp+0x30]
1003777c:	cmp    eax,0x1
1003777f:	je     0x1003778a
10037781:	cmp    eax,0x2
10037784:	jne    0x10037a6c
1003778a:	mov    eax,DWORD PTR [esp+0x18]
1003778e:	shr    eax,1
10037790:	je     0x10037a6c
10037796:	mov    ecx,DWORD PTR [ebx-0x8]
10037799:	add    eax,0x1
1003779c:	mov    edx,0x1
100377a1:	sub    edx,DWORD PTR [ebx-0x4]
100377a4:	sub    ecx,eax
100377a6:	or     ecx,edx
100377a8:	mov    DWORD PTR [esp+0x2c],eax
100377ac:	jge    0x100377bb
100377ae:	lea    ecx,[esp+0x28]
100377b2:	call   0x10002253
100377b7:	mov    ebx,DWORD PTR [esp+0x28]
100377bb:	mov    ebp,DWORD PTR [esp+0x14]
100377bf:	push   ebp
100377c0:	lea    ecx,[esp+0x28]
100377c4:	push   ecx
100377c5:	lea    edi,[esp+0x34]
100377c9:	mov    esi,ebx
100377cb:	call   0x1002ef20
100377d0:	test   eax,eax
100377d2:	je     0x10037802
100377d4:	add    ebx,0xfffffff0
100377d7:	mov    BYTE PTR [esp+0x50],0x1
100377dc:	lea    edx,[ebx+0xc]
100377df:	or     eax,0xffffffff
100377e2:	lock xadd DWORD PTR [edx],eax
100377e6:	dec    eax
100377e7:	test   eax,eax
100377e9:	jg     0x100377f5
100377eb:	mov    ecx,DWORD PTR [ebx]
100377ed:	mov    edx,DWORD PTR [ecx]
100377ef:	mov    eax,DWORD PTR [edx+0x4]
100377f2:	push   ebx
100377f3:	call   eax
100377f5:	mov    BYTE PTR [esp+0x50],0x0
100377fa:	lea    eax,[ebp-0x10]
100377fd:	jmp    0x10037a43
10037802:	mov    edx,DWORD PTR ds:0x10082a6c
10037808:	mov    eax,DWORD PTR [edx+0xc]
1003780b:	mov    ecx,0x10082a6c
10037810:	call   eax
10037812:	lea    edi,[eax+0x10]
10037815:	mov    DWORD PTR [esp+0x18],edi
10037819:	mov    BYTE PTR [esp+0x50],0x3
1003781e:	mov    eax,DWORD PTR [edi-0x8]
10037821:	mov    ecx,0x1
10037826:	sub    ecx,DWORD PTR [edi-0x4]
10037829:	sub    eax,0x1
1003782c:	or     eax,ecx
1003782e:	jge    0x10037842
10037830:	mov    eax,0x1
10037835:	lea    ecx,[esp+0x18]
10037839:	call   0x10002253
1003783e:	mov    edi,DWORD PTR [esp+0x18]
10037842:	mov    ebp,DWORD PTR ds:0x10067068
10037848:	lea    ecx,[esp+0x34]
1003784c:	push   ecx
1003784d:	push   edi
1003784e:	push   0x0
10037850:	push   0x0
10037852:	push   ebx
10037853:	push   0x0
10037855:	call   ebp
10037857:	mov    esi,eax
10037859:	mov    eax,DWORD PTR [edi-0x8]
1003785c:	add    esi,0x1
1003785f:	mov    ecx,0x1
10037864:	sub    ecx,DWORD PTR [edi-0x4]
10037867:	sub    eax,esi
10037869:	or     eax,ecx
1003786b:	jge    0x1003787c
1003786d:	mov    eax,esi
1003786f:	lea    ecx,[esp+0x18]
10037873:	call   0x10002253
10037878:	mov    edi,DWORD PTR [esp+0x18]
1003787c:	lea    edx,[esp+0x34]
10037880:	push   edx
10037881:	push   edi
10037882:	push   esi
10037883:	push   0x0
10037885:	push   ebx
10037886:	push   0x0
10037888:	call   ebp
1003788a:	cmp    eax,esi
1003788c:	jbe    0x100378d9
1003788e:	add    edi,0xfffffff0
10037891:	mov    BYTE PTR [esp+0x50],0x2
10037896:	lea    eax,[edi+0xc]
10037899:	or     ecx,0xffffffff
1003789c:	lock xadd DWORD PTR [eax],ecx
100378a0:	dec    ecx
100378a1:	test   ecx,ecx
100378a3:	jg     0x100378af
100378a5:	mov    ecx,DWORD PTR [edi]
100378a7:	mov    edx,DWORD PTR [ecx]
100378a9:	mov    eax,DWORD PTR [edx+0x4]
100378ac:	push   edi
100378ad:	call   eax
100378af:	add    ebx,0xfffffff0
100378b2:	mov    BYTE PTR [esp+0x50],0x1
100378b7:	lea    ecx,[ebx+0xc]
100378ba:	or     edx,0xffffffff
100378bd:	lock xadd DWORD PTR [ecx],edx
100378c1:	dec    edx
100378c2:	test   edx,edx
100378c4:	jg     0x10037a37
100378ca:	mov    ecx,DWORD PTR [ebx]
100378cc:	mov    eax,DWORD PTR [ecx]
100378ce:	mov    edx,DWORD PTR [eax+0x4]
100378d1:	push   ebx
100378d2:	call   edx
100378d4:	jmp    0x10037a37
100378d9:	test   edi,edi
100378db:	jne    0x100378e1
100378dd:	xor    eax,eax
100378df:	jmp    0x100378f2
100378e1:	push   edi
100378e2:	call   0x100437c6
100378e7:	add    esp,0x4
100378ea:	test   eax,eax
100378ec:	jl     0x10037c34
100378f2:	cmp    eax,DWORD PTR [edi-0x8]
100378f5:	jg     0x10037c34
100378fb:	xor    ebp,ebp
100378fd:	mov    DWORD PTR [edi-0xc],eax
10037900:	mov    WORD PTR [edi+eax*2],0x0
10037906:	mov    DWORD PTR [esp+0x2c],ebp
1003790a:	push   ebp
1003790b:	push   0x80
10037910:	push   0x3
10037912:	push   ebp
10037913:	push   0x3
10037915:	push   0x80000000
1003791a:	push   edi
1003791b:	mov    BYTE PTR [esp+0x6c],0x4
10037920:	call   DWORD PTR ds:0x100670c8
10037926:	cmp    eax,0xffffffff
10037929:	jne    0x1003797b
1003792b:	call   0x1000693b
10037930:	test   eax,eax
10037932:	jl     0x100379f5
10037938:	lea    ecx,[esp+0x44]
1003793c:	push   ecx
1003793d:	push   ebp
1003793e:	call   DWORD PTR ds:0x10067064
10037944:	cmp    eax,0xffffffff
10037947:	mov    DWORD PTR [esp+0x40],eax
1003794b:	jne    0x10037987
1003794d:	call   0x1000693b
10037952:	test   eax,eax
10037954:	jge    0x10037983
10037956:	test   ebp,ebp
10037958:	je     0x10037961
1003795a:	push   ebp
1003795b:	call   DWORD PTR ds:0x10067078
10037961:	add    edi,0xfffffff0
10037964:	mov    BYTE PTR [esp+0x50],0x2
10037969:	lea    edx,[edi+0xc]
1003796c:	or     eax,0xffffffff
1003796f:	lock xadd DWORD PTR [edx],eax
10037973:	dec    eax
10037974:	test   eax,eax
10037976:	jmp    0x100378a3
1003797b:	mov    ebp,eax
1003797d:	mov    DWORD PTR [esp+0x2c],ebp
10037981:	jmp    0x10037938
10037983:	mov    eax,DWORD PTR [esp+0x40]
10037987:	cmp    eax,0x4c00
1003798c:	jne    0x100379ea
1003798e:	cmp    DWORD PTR [esp+0x44],0x0
10037993:	jne    0x100379ea
10037995:	test   ebp,ebp
10037997:	je     0x100379a6
10037999:	push   ebp
1003799a:	call   DWORD PTR ds:0x10067078
100379a0:	xor    ebp,ebp
100379a2:	mov    DWORD PTR [esp+0x2c],ebp
100379a6:	cmp    DWORD PTR [edi-0x4],0x1
100379aa:	jle    0x100379be
100379ac:	mov    ecx,DWORD PTR [edi-0xc]
100379af:	push   ecx
100379b0:	lea    edx,[esp+0x1c]
100379b4:	push   edx
100379b5:	call   0x1000229c
100379ba:	mov    edi,DWORD PTR [esp+0x18]
100379be:	lea    eax,[esp+0x38]
100379c2:	push   eax
100379c3:	lea    ecx,[esp+0x40]
100379c7:	push   ecx
100379c8:	push   edi
100379c9:	call   DWORD PTR ds:0x10067404
100379cf:	test   eax,eax
100379d1:	jne    0x10037956
100379d3:	lea    esi,[esp+0x18]
100379d7:	call   0x100041fd
100379dc:	cmp    DWORD PTR [esp+0x38],0x6673
100379e4:	je     0x10037afd
100379ea:	test   ebp,ebp
100379ec:	je     0x100379f5
100379ee:	push   ebp
100379ef:	call   DWORD PTR ds:0x10067078
100379f5:	add    edi,0xfffffff0
100379f8:	mov    BYTE PTR [esp+0x50],0x2
100379fd:	lea    ecx,[edi+0xc]
10037a00:	or     edx,0xffffffff
10037a03:	lock xadd DWORD PTR [ecx],edx
10037a07:	dec    edx
10037a08:	test   edx,edx
10037a0a:	jg     0x10037a16
10037a0c:	mov    ecx,DWORD PTR [edi]
10037a0e:	mov    eax,DWORD PTR [ecx]
10037a10:	mov    edx,DWORD PTR [eax+0x4]
10037a13:	push   edi
10037a14:	call   edx
10037a16:	add    ebx,0xfffffff0
10037a19:	mov    BYTE PTR [esp+0x50],0x1
10037a1e:	lea    eax,[ebx+0xc]
10037a21:	or     ecx,0xffffffff
10037a24:	lock xadd DWORD PTR [eax],ecx
10037a28:	dec    ecx
10037a29:	test   ecx,ecx
10037a2b:	jg     0x10037a37
10037a2d:	mov    ecx,DWORD PTR [ebx]
10037a2f:	mov    edx,DWORD PTR [ecx]
10037a31:	mov    eax,DWORD PTR [edx+0x4]
10037a34:	push   ebx
10037a35:	call   eax
10037a37:	mov    BYTE PTR [esp+0x50],0x0
10037a3c:	mov    eax,DWORD PTR [esp+0x14]
10037a40:	add    eax,0xfffffff0
10037a43:	lea    ecx,[eax+0xc]
10037a46:	or     edx,0xffffffff
10037a49:	lock xadd DWORD PTR [ecx],edx
10037a4d:	dec    edx
10037a4e:	test   edx,edx
10037a50:	jg     0x10037a5c
10037a52:	mov    ecx,DWORD PTR [eax]
10037a54:	mov    edx,DWORD PTR [ecx]
10037a56:	push   eax
10037a57:	mov    eax,DWORD PTR [edx+0x4]
10037a5a:	call   eax
10037a5c:	add    DWORD PTR [esp+0x20],0x1
10037a61:	mov    ebp,DWORD PTR [esp+0x58]
10037a65:	xor    edi,edi
10037a67:	jmp    0x100376f0
10037a6c:	add    ebx,0xfffffff0
10037a6f:	or     edx,0xffffffff
10037a72:	lea    ecx,[ebx+0xc]
10037a75:	mov    BYTE PTR [esp+0x50],0x1
10037a7a:	lock xadd DWORD PTR [ecx],edx
10037a7e:	dec    edx
10037a7f:	test   edx,edx
10037a81:	jg     0x10037a8d
10037a83:	mov    ecx,DWORD PTR [ebx]
10037a85:	mov    eax,DWORD PTR [ecx]
10037a87:	mov    edx,DWORD PTR [eax+0x4]
10037a8a:	push   ebx
10037a8b:	call   edx
10037a8d:	lea    eax,[esi-0x10]
10037a90:	mov    BYTE PTR [esp+0x50],0x0
10037a95:	lea    ecx,[eax+0xc]
10037a98:	or     edx,0xffffffff
10037a9b:	lock xadd DWORD PTR [ecx],edx
10037a9f:	dec    edx
10037aa0:	test   edx,edx
10037aa2:	jg     0x10037aae
10037aa4:	mov    ecx,DWORD PTR [eax]
10037aa6:	mov    edx,DWORD PTR [ecx]
10037aa8:	push   eax
10037aa9:	mov    eax,DWORD PTR [edx+0x4]
10037aac:	call   eax
10037aae:	mov    edx,DWORD PTR ds:0x10082a6c
10037ab4:	mov    eax,DWORD PTR [edx+0xc]
10037ab7:	mov    ecx,0x10082a6c
10037abc:	call   eax
10037abe:	add    eax,0x10
10037ac1:	mov    DWORD PTR [ebp+0x0],eax
10037ac4:	mov    ecx,0x1006dd18
10037ac9:	test   ecx,0xffff0000
10037acf:	mov    BYTE PTR [esp+0x50],0x5
10037ad4:	jne    0x10037ba4
10037ada:	mov    edx,ecx
10037adc:	movzx  esi,dx
10037adf:	push   esi
10037ae0:	call   0x10002005
10037ae5:	add    esp,0x4
10037ae8:	cmp    eax,edi
10037aea:	je     0x10037c74
10037af0:	push   esi
10037af1:	push   eax
10037af2:	push   ebp
10037af3:	call   0x100021cd
10037af8:	jmp    0x10037c74
10037afd:	add    edi,0xfffffff0
10037b00:	mov    eax,edi
10037b02:	call   0x10004dfc
10037b07:	mov    esi,DWORD PTR [esp+0x58]
10037b0b:	add    eax,0x10
10037b0e:	test   ebp,ebp
10037b10:	mov    DWORD PTR [esi],eax
10037b12:	je     0x10037b1b
10037b14:	push   ebp
10037b15:	call   DWORD PTR ds:0x10067078
10037b1b:	mov    BYTE PTR [esp+0x50],0x2
10037b20:	lea    ecx,[edi+0xc]
10037b23:	or     edx,0xffffffff
10037b26:	lock xadd DWORD PTR [ecx],edx
10037b2a:	dec    edx
10037b2b:	test   edx,edx
10037b2d:	jg     0x10037b39
10037b2f:	mov    ecx,DWORD PTR [edi]
10037b31:	mov    eax,DWORD PTR [ecx]
10037b33:	mov    edx,DWORD PTR [eax+0x4]
10037b36:	push   edi
10037b37:	call   edx
10037b39:	add    ebx,0xfffffff0
10037b3c:	mov    BYTE PTR [esp+0x50],0x1
10037b41:	lea    eax,[ebx+0xc]
10037b44:	or     ecx,0xffffffff
10037b47:	lock xadd DWORD PTR [eax],ecx
10037b4b:	dec    ecx
10037b4c:	test   ecx,ecx
10037b4e:	jg     0x10037b5a
10037b50:	mov    ecx,DWORD PTR [ebx]
10037b52:	mov    edx,DWORD PTR [ecx]
10037b54:	mov    eax,DWORD PTR [edx+0x4]
10037b57:	push   ebx
10037b58:	call   eax
10037b5a:	mov    BYTE PTR [esp+0x50],0x0
10037b5f:	mov    eax,DWORD PTR [esp+0x14]
10037b63:	add    eax,0xfffffff0
10037b66:	lea    ecx,[eax+0xc]
10037b69:	or     edx,0xffffffff
10037b6c:	lock xadd DWORD PTR [ecx],edx
10037b70:	dec    edx
10037b71:	test   edx,edx
10037b73:	jg     0x10037b7f
10037b75:	mov    ecx,DWORD PTR [eax]
10037b77:	mov    edx,DWORD PTR [ecx]
10037b79:	push   eax
10037b7a:	mov    eax,DWORD PTR [edx+0x4]
10037b7d:	call   eax
10037b7f:	mov    eax,DWORD PTR [esp+0x1c]
10037b83:	test   eax,eax
10037b85:	je     0x10037b8e
10037b87:	push   eax
10037b88:	call   DWORD PTR ds:0x10067014
10037b8e:	mov    eax,esi
10037b90:	mov    ecx,DWORD PTR [esp+0x48]
10037b94:	mov    DWORD PTR fs:0x0,ecx
10037b9b:	pop    ecx
10037b9c:	pop    edi
10037b9d:	pop    esi
10037b9e:	pop    ebp
10037b9f:	pop    ebx
10037ba0:	add    esp,0x40
10037ba3:	ret    
10037ba4:	call   DWORD PTR ds:0x10080ffc
10037baa:	mov    edi,DWORD PTR ds:0x1006708c
10037bb0:	push   0x0
10037bb2:	push   0x0
10037bb4:	push   0xffffffff
10037bb6:	push   0x1006dd18
10037bbb:	push   0x0
10037bbd:	push   eax
10037bbe:	call   edi
10037bc0:	mov    esi,eax
10037bc2:	sub    esi,0x1
10037bc5:	test   esi,esi
10037bc7:	jle    0x10037c16
10037bc9:	mov    eax,DWORD PTR [ebp+0x0]
10037bcc:	mov    edx,DWORD PTR [eax-0x8]
10037bcf:	sub    eax,0x10
10037bd2:	mov    ecx,0x1
10037bd7:	sub    ecx,DWORD PTR [eax+0xc]
10037bda:	sub    edx,esi
10037bdc:	or     ecx,edx
10037bde:	jge    0x10037be9
10037be0:	mov    eax,esi
10037be2:	mov    ecx,ebp
10037be4:	call   0x10002253
10037be9:	mov    eax,DWORD PTR [ebp+0x0]
10037bec:	push   esi
10037bed:	push   eax
10037bee:	push   0xffffffff
10037bf0:	push   0x1006dd18
10037bf5:	push   0x0
10037bf7:	call   DWORD PTR ds:0x10080ffc
10037bfd:	push   eax
10037bfe:	call   edi
10037c00:	mov    eax,DWORD PTR [ebp+0x0]
10037c03:	cmp    esi,DWORD PTR [eax-0x8]
10037c06:	jg     0x10037c34
10037c08:	mov    DWORD PTR [eax-0xc],esi
10037c0b:	mov    eax,DWORD PTR [ebp+0x0]
10037c0e:	mov    WORD PTR [eax+esi*2],0x0
10037c14:	jmp    0x10037c74
10037c16:	mov    ecx,DWORD PTR [ebp+0x0]
10037c19:	cmp    DWORD PTR [ecx-0xc],0x0
10037c1d:	mov    esi,DWORD PTR [ecx-0x10]
10037c20:	lea    eax,[ecx-0x10]
10037c23:	je     0x10037c74
10037c25:	cmp    DWORD PTR [eax+0xc],0x0
10037c29:	lea    edx,[eax+0xc]
10037c2c:	jge    0x10037c4f
10037c2e:	cmp    DWORD PTR [ecx-0x8],0x0
10037c32:	jge    0x10037c3e
10037c34:	push   0x80070057
10037c39:	call   0x10001f2d
10037c3e:	mov    DWORD PTR [ecx-0xc],0x0
10037c45:	mov    ecx,DWORD PTR [ebp+0x0]
10037c48:	mov    WORD PTR [ecx],0x0
10037c4d:	jmp    0x10037c74
10037c4f:	or     ecx,0xffffffff
10037c52:	lock xadd DWORD PTR [edx],ecx
10037c56:	dec    ecx
10037c57:	test   ecx,ecx
10037c59:	jg     0x10037c65
10037c5b:	mov    ecx,DWORD PTR [eax]
10037c5d:	mov    edx,DWORD PTR [ecx]
10037c5f:	push   eax
10037c60:	mov    eax,DWORD PTR [edx+0x4]
10037c63:	call   eax
10037c65:	mov    edx,DWORD PTR [esi]
10037c67:	mov    eax,DWORD PTR [edx+0xc]
10037c6a:	mov    ecx,esi
10037c6c:	call   eax
10037c6e:	add    eax,0x10
10037c71:	mov    DWORD PTR [ebp+0x0],eax
10037c74:	mov    eax,DWORD PTR [esp+0x24]
10037c78:	test   eax,eax
10037c7a:	je     0x10037c83
10037c7c:	push   eax
10037c7d:	call   DWORD PTR ds:0x10067014
10037c83:	mov    eax,ebp
10037c85:	mov    ecx,DWORD PTR [esp+0x48]
10037c89:	mov    DWORD PTR fs:0x0,ecx
10037c90:	pop    ecx
10037c91:	pop    edi
10037c92:	pop    esi
10037c93:	pop    ebp
10037c94:	pop    ebx
10037c95:	add    esp,0x40
10037c98:	ret    
10037c99:	int3   
10037c9a:	int3   
10037c9b:	int3   
10037c9c:	int3   
10037c9d:	int3   
10037c9e:	int3   
10037c9f:	int3   
10037ca0:	push   0xffffffff
10037ca2:	push   0x1005fc09
10037ca7:	mov    eax,fs:0x0
10037cad:	push   eax
10037cae:	push   ecx
10037caf:	push   ebx
10037cb0:	mov    eax,ds:0x100801ac
10037cb5:	xor    eax,esp
10037cb7:	push   eax
10037cb8:	lea    eax,[esp+0xc]
10037cbc:	mov    fs:0x0,eax
10037cc2:	mov    ebx,DWORD PTR [esp+0x20]
10037cc6:	mov    eax,DWORD PTR [esp+0x1c]
10037cca:	mov    DWORD PTR [esp+0x8],0x0
10037cd2:	mov    eax,DWORD PTR [eax]
10037cd4:	test   eax,eax
10037cd6:	mov    DWORD PTR [ebx],eax
10037cd8:	je     0x10037ce4
10037cda:	add    eax,0x8
10037cdd:	push   eax
10037cde:	call   DWORD PTR ds:0x100670b0
10037ce4:	mov    ecx,DWORD PTR [esp+0x24]
10037ce8:	mov    DWORD PTR [esp+0x14],0x0
10037cf0:	push   ecx
10037cf1:	mov    DWORD PTR [esp+0xc],0x1
10037cf9:	call   0x10002500
10037cfe:	mov    eax,ebx
10037d00:	mov    ecx,DWORD PTR [esp+0xc]
10037d04:	mov    DWORD PTR fs:0x0,ecx
10037d0b:	pop    ecx
10037d0c:	pop    ebx
10037d0d:	add    esp,0x10
10037d10:	ret    0xc
10037d13:	int3   
10037d14:	int3   
10037d15:	int3   
10037d16:	int3   
10037d17:	int3   
10037d18:	int3   
10037d19:	int3   
10037d1a:	int3   
10037d1b:	int3   
10037d1c:	int3   
10037d1d:	int3   
10037d1e:	int3   
10037d1f:	int3   
10037d20:	push   0xffffffff
10037d22:	push   0x1005fbc8
10037d27:	mov    eax,fs:0x0
10037d2d:	push   eax
10037d2e:	sub    esp,0x14
10037d31:	mov    eax,ds:0x100801ac
10037d36:	xor    eax,esp
10037d38:	push   eax
10037d39:	lea    eax,[esp+0x18]
10037d3d:	mov    fs:0x0,eax
10037d43:	cmp    WORD PTR [esi],0x8
10037d47:	jne    0x10037d66
10037d49:	mov    eax,DWORD PTR [esi+0x8]
10037d4c:	push   eax
10037d4d:	mov    ecx,edi
10037d4f:	call   0x10011381
10037d54:	mov    eax,edi
10037d56:	mov    ecx,DWORD PTR [esp+0x18]
10037d5a:	mov    DWORD PTR fs:0x0,ecx
10037d61:	pop    ecx
10037d62:	add    esp,0x20
10037d65:	ret    
10037d66:	lea    ecx,[esp+0x4]
10037d6a:	push   ecx
10037d6b:	call   DWORD PTR ds:0x10067294
10037d71:	lea    edx,[esp+0x4]
10037d75:	cmp    edx,esi
10037d77:	mov    DWORD PTR [esp+0x20],0x0
10037d7f:	jne    0x10037d89
10037d81:	cmp    WORD PTR [esp+0x4],0x8
10037d87:	je     0x10037da3
10037d89:	push   0x8
10037d8b:	push   0x0
10037d8d:	push   esi
10037d8e:	lea    eax,[esp+0x10]
10037d92:	push   eax
10037d93:	call   DWORD PTR ds:0x1006727c
10037d99:	test   eax,eax
10037d9b:	jge    0x10037da3
10037d9d:	push   eax
10037d9e:	call   0x10050e90
10037da3:	mov    ecx,DWORD PTR [esp+0xc]
10037da7:	push   ecx
10037da8:	mov    ecx,edi
10037daa:	call   0x10011381
10037daf:	lea    edx,[esp+0x4]
10037db3:	push   edx
10037db4:	call   DWORD PTR ds:0x10067284
10037dba:	mov    eax,edi
10037dbc:	mov    ecx,DWORD PTR [esp+0x18]
10037dc0:	mov    DWORD PTR fs:0x0,ecx
10037dc7:	pop    ecx
10037dc8:	add    esp,0x20
10037dcb:	ret    
10037dcc:	int3   
10037dcd:	int3   
10037dce:	int3   
10037dcf:	int3   
10037dd0:	sub    esp,0x8
10037dd3:	test   eax,eax
10037dd5:	mov    BYTE PTR [edi],0x0
10037dd8:	jle    0x10037f2e
10037dde:	push   ebx
10037ddf:	push   ebp
10037de0:	push   esi
10037de1:	xor    esi,esi
10037de3:	add    eax,ecx
10037de5:	mov    BYTE PTR [esp+0xf],0x0
10037dea:	mov    BYTE PTR [edi],0x0
10037ded:	mov    DWORD PTR [esp+0x10],eax
10037df1:	mov    ebp,eax
10037df3:	mov    al,BYTE PTR [ebp+0x0]
10037df6:	test   al,al
10037df8:	je     0x10037ea4
10037dfe:	movsx  edx,al
10037e01:	push   edx
10037e02:	call   0x10045f7b
10037e07:	mov    bl,al
10037e09:	movsx  eax,bl
10037e0c:	push   eax
10037e0d:	call   0x1004f666
10037e12:	add    esp,0x8
10037e15:	test   eax,eax
10037e17:	je     0x10037e1b
10037e19:	mov    bl,0x30
10037e1b:	shl    BYTE PTR [esi+edi*1],0x4
10037e1f:	add    BYTE PTR [esp+0xf],0x1
10037e24:	mov    cl,BYTE PTR [esi+edi*1]
10037e27:	mov    al,bl
10037e29:	sub    al,0x30
10037e2b:	cmp    al,0x9
10037e2d:	ja     0x10037e36
10037e2f:	or     al,cl
10037e31:	mov    BYTE PTR [esi+edi*1],al
10037e34:	jmp    0x10037e48
10037e36:	mov    dl,bl
10037e38:	sub    dl,0x61
10037e3b:	cmp    dl,0x5
10037e3e:	ja     0x10037e7a
10037e40:	sub    bl,0x57
10037e43:	or     bl,cl
10037e45:	mov    BYTE PTR [esi+edi*1],bl
10037e48:	cmp    BYTE PTR [esp+0xf],0x2
10037e4d:	jne    0x10037e72
10037e4f:	mov    al,BYTE PTR [esi+edi*1]
10037e52:	test   al,al
10037e54:	je     0x10037e66
10037e56:	movsx  eax,al
10037e59:	push   eax
10037e5a:	call   0x1004f6e3
10037e5f:	add    esp,0x4
10037e62:	test   eax,eax
10037e64:	je     0x10037e7a
10037e66:	add    esi,0x1
10037e69:	mov    BYTE PTR [esp+0xf],0x0
10037e6e:	mov    BYTE PTR [esi+edi*1],0x0
10037e72:	add    ebp,0x1
10037e75:	jmp    0x10037df3
10037e7a:	mov    ebp,DWORD PTR [esp+0x10]
10037e7e:	xor    esi,esi
10037e80:	mov    bl,BYTE PTR [ebp+0x0]
10037e83:	test   bl,bl
10037e85:	je     0x10037ea4
10037e87:	movsx  ecx,bl
10037e8a:	push   ecx
10037e8b:	call   0x1004f6e3
10037e90:	add    esp,0x4
10037e93:	test   eax,eax
10037e95:	je     0x10037ea2
10037e97:	mov    BYTE PTR [esi+edi*1],bl
10037e9a:	add    esi,0x1
10037e9d:	add    ebp,0x1
10037ea0:	jmp    0x10037e80
10037ea2:	xor    esi,esi
10037ea4:	cmp    DWORD PTR [esp+0x18],0x0
10037ea9:	mov    BYTE PTR [esi+edi*1],0x0
10037ead:	je     0x10037ed2
10037eaf:	test   esi,esi
10037eb1:	jle    0x10037ed2
10037eb3:	add    esi,0xffffffff
10037eb6:	shr    esi,1
10037eb8:	lea    eax,[edi+0x1]
10037ebb:	add    esi,0x1
10037ebe:	mov    edi,edi
10037ec0:	mov    cl,BYTE PTR [eax-0x1]
10037ec3:	mov    dl,BYTE PTR [eax]
10037ec5:	mov    BYTE PTR [eax-0x1],dl
10037ec8:	mov    BYTE PTR [eax],cl
10037eca:	add    eax,0x2
10037ecd:	sub    esi,0x1
10037ed0:	jne    0x10037ec0
10037ed2:	or     ebx,0xffffffff
10037ed5:	or     ebp,ebx
10037ed7:	xor    esi,esi
10037ed9:	cmp    BYTE PTR [edi],0x0
10037edc:	je     0x10037f2b
10037ede:	mov    edi,edi
10037ee0:	movsx  eax,BYTE PTR [esi+edi*1]
10037ee4:	push   eax
10037ee5:	call   0x1004f666
10037eea:	add    esp,0x4
10037eed:	test   eax,eax
10037eef:	jne    0x10037ef9
10037ef1:	test   ebp,ebp
10037ef3:	jge    0x10037ef7
10037ef5:	mov    ebp,esi
10037ef7:	mov    ebx,esi
10037ef9:	add    esi,0x1
10037efc:	cmp    BYTE PTR [esi+edi*1],0x0
10037f00:	jne    0x10037ee0
10037f02:	test   ebp,ebp
10037f04:	jl     0x10037f2b
10037f06:	test   ebx,ebx
10037f08:	jl     0x10037f2b
10037f0a:	cmp    ebp,ebx
10037f0c:	mov    eax,ebp
10037f0e:	jg     0x10037f25
10037f10:	mov    edx,edi
10037f12:	sub    edx,ebp
10037f14:	mov    cl,BYTE PTR [eax+edi*1]
10037f17:	test   cl,cl
10037f19:	je     0x10037f25
10037f1b:	mov    BYTE PTR [edx+eax*1],cl
10037f1e:	add    eax,0x1
10037f21:	cmp    eax,ebx
10037f23:	jle    0x10037f14
10037f25:	sub    eax,ebp
10037f27:	mov    BYTE PTR [eax+edi*1],0x0
10037f2b:	pop    esi
10037f2c:	pop    ebp
10037f2d:	pop    ebx
10037f2e:	mov    eax,edi
10037f30:	add    esp,0x8
10037f33:	ret    
10037f34:	int3   
10037f35:	int3   
10037f36:	int3   
10037f37:	int3   
10037f38:	int3   
10037f39:	int3   
10037f3a:	int3   
10037f3b:	int3   
10037f3c:	int3   
10037f3d:	int3   
10037f3e:	int3   
10037f3f:	int3   
10037f40:	push   ebp
10037f41:	mov    ebp,esp
10037f43:	and    esp,0xfffffff8
10037f46:	mov    eax,0x2f30
10037f4b:	call   0x1004a070
10037f50:	mov    eax,ds:0x100801ac
10037f55:	xor    eax,esp
10037f57:	mov    DWORD PTR [esp+0x2f2c],eax
10037f5e:	mov    eax,DWORD PTR [ebp+0x8]
10037f61:	push   esi
10037f62:	push   edi
10037f63:	xor    edi,edi
10037f65:	push   edi
10037f66:	push   edi
10037f67:	push   0x3
10037f69:	push   edi
10037f6a:	push   0x3
10037f6c:	push   edi
10037f6d:	mov    DWORD PTR [esp+0x2c],ecx
10037f71:	push   0x100752f4
10037f76:	push   0x12
10037f78:	mov    ecx,0x10075330
10037f7d:	mov    DWORD PTR [esp+0x30],eax
10037f81:	mov    BYTE PTR [esp+0x2b],0x0
10037f86:	call   0x1000444a
10037f8b:	add    esp,0x8
10037f8e:	push   eax
10037f8f:	call   DWORD PTR ds:0x100670c8
10037f95:	mov    esi,eax
10037f97:	cmp    esi,0xffffffff
10037f9a:	jne    0x10037fb2
10037f9c:	xor    al,al
10037f9e:	pop    edi
10037f9f:	pop    esi
10037fa0:	mov    ecx,DWORD PTR [esp+0x2f2c]
10037fa7:	xor    ecx,esp
10037fa9:	call   0x10043615
10037fae:	mov    esp,ebp
10037fb0:	pop    ebp
10037fb1:	ret    
10037fb2:	xor    eax,eax
10037fb4:	push   0x2710
10037fb9:	lea    edx,[esp+0x824]
10037fc0:	push   edi
10037fc1:	mov    DWORD PTR [esp+0x24],eax
10037fc5:	mov    DWORD PTR [esp+0x28],eax
10037fc9:	push   edx
10037fca:	mov    DWORD PTR [esp+0x18],edi
10037fce:	mov    DWORD PTR [esp+0x30],eax
10037fd2:	mov    DWORD PTR [esp+0x28],edi
10037fd6:	mov    DWORD PTR [esp+0x2c],edi
10037fda:	call   0x10045dc0
10037fdf:	add    esp,0xc
10037fe2:	push   edi
10037fe3:	lea    eax,[esp+0x10]
10037fe7:	push   eax
10037fe8:	push   0x2710
10037fed:	lea    ecx,[esp+0x82c]
10037ff4:	push   ecx
10037ff5:	push   0xc
10037ff7:	lea    edx,[esp+0x30]
10037ffb:	push   edx
10037ffc:	push   0x2d1400
10038001:	push   esi
10038002:	call   DWORD PTR ds:0x1006726c
10038008:	test   eax,eax
1003800a:	je     0x10038081
1003800c:	mov    eax,DWORD PTR [esp+0x830]
10038013:	push   edi
10038014:	lea    edi,[esp+0x43c]
1003801b:	lea    ecx,[esp+0x824]
10038022:	call   0x10037dd0
10038027:	mov    eax,DWORD PTR [esp+0x83c]
1003802e:	push   0x1
10038030:	lea    edi,[esp+0x58]
10038034:	lea    ecx,[esp+0x828]
1003803b:	call   0x10037dd0
10038040:	mov    eax,edi
10038042:	push   eax
10038043:	call   0x10043450
10038048:	add    esp,0xc
1003804b:	push   eax
1003804c:	mov    ecx,edi
1003804e:	push   ecx
1003804f:	mov    ecx,DWORD PTR [esp+0x18]
10038053:	call   0x1000133b
10038058:	lea    edx,[esp+0x438]
1003805f:	push   edx
10038060:	call   0x10043450
10038065:	mov    ecx,DWORD PTR [esp+0x18]
10038069:	add    esp,0x4
1003806c:	push   eax
1003806d:	lea    eax,[esp+0x43c]
10038074:	push   eax
10038075:	call   0x1000133b
1003807a:	mov    BYTE PTR [esp+0xb],0x1
1003807f:	xor    edi,edi
10038081:	push   edi
10038082:	lea    ecx,[esp+0x1c]
10038086:	push   ecx
10038087:	push   0x28
10038089:	lea    edx,[esp+0x34]
1003808d:	push   edx
1003808e:	xor    eax,eax
10038090:	push   edi
10038091:	push   edi
10038092:	push   0x700a0
10038097:	push   esi
10038098:	mov    DWORD PTR [esp+0x48],edi
1003809c:	mov    DWORD PTR [esp+0x4c],eax
100380a0:	mov    DWORD PTR [esp+0x50],eax
100380a4:	mov    DWORD PTR [esp+0x54],eax
100380a8:	mov    DWORD PTR [esp+0x58],eax
100380ac:	mov    DWORD PTR [esp+0x5c],eax
100380b0:	mov    DWORD PTR [esp+0x60],eax
100380b4:	mov    DWORD PTR [esp+0x64],eax
100380b8:	mov    DWORD PTR [esp+0x68],eax
100380bc:	mov    DWORD PTR [esp+0x6c],eax
100380c0:	mov    DWORD PTR [ebx],edi
100380c2:	mov    DWORD PTR [ebx+0x4],edi
100380c5:	call   DWORD PTR ds:0x1006726c
100380cb:	test   eax,eax
100380cd:	je     0x100380dc
100380cf:	mov    eax,DWORD PTR [esp+0x40]
100380d3:	mov    ecx,DWORD PTR [esp+0x44]
100380d7:	mov    DWORD PTR [ebx],eax
100380d9:	mov    DWORD PTR [ebx+0x4],ecx
100380dc:	push   esi
100380dd:	call   DWORD PTR ds:0x10067078
100380e3:	mov    ecx,DWORD PTR [esp+0x2f34]
100380ea:	mov    al,BYTE PTR [esp+0xb]
100380ee:	pop    edi
100380ef:	pop    esi
100380f0:	xor    ecx,esp
100380f2:	call   0x10043615
100380f7:	mov    esp,ebp
100380f9:	pop    ebp
100380fa:	ret    
100380fb:	int3   
100380fc:	int3   
100380fd:	int3   
100380fe:	int3   
100380ff:	int3   
10038100:	push   ebp
10038101:	lea    ebp,[esp-0x1954]
10038108:	mov    eax,0x1954
1003810d:	call   0x1004a070
10038112:	push   0xffffffff
10038114:	push   0x100618a0
10038119:	mov    eax,fs:0x0
1003811f:	push   eax
10038120:	sub    esp,0x38
10038123:	mov    eax,ds:0x100801ac
10038128:	xor    eax,ebp
1003812a:	mov    DWORD PTR [ebp+0x1950],eax
10038130:	push   ebx
10038131:	push   esi
10038132:	push   edi
10038133:	push   eax
10038134:	lea    eax,[ebp-0xc]
10038137:	mov    fs:0x0,eax
1003813d:	mov    eax,DWORD PTR [ebp+0x195c]
10038143:	lea    ecx,[ebp-0x3c]
10038146:	push   ecx
10038147:	lea    edx,[ebp+0x0]
1003814a:	push   edx
1003814b:	mov    DWORD PTR [ebp-0x38],eax
1003814e:	mov    DWORD PTR [ebp-0x3c],0x1950
10038155:	call   0x10056dde
1003815a:	lea    esi,[ebp+0x0]
1003815d:	mov    DWORD PTR [ebp-0x30],esi
10038160:	jmp    0x10038165
10038162:	mov    esi,DWORD PTR [ebp-0x30]
10038165:	call   DWORD PTR ds:0x10080ffc
1003816b:	mov    ebx,eax
1003816d:	mov    eax,ds:0x10082a6c
10038172:	mov    edx,DWORD PTR [eax+0xc]
10038175:	mov    ecx,0x10082a6c
1003817a:	call   edx
1003817c:	add    eax,0x10
1003817f:	mov    DWORD PTR [ebp-0x10],eax
10038182:	xor    edi,edi
10038184:	mov    DWORD PTR [ebp-0x4],edi
10038187:	movzx  eax,BYTE PTR [esi+0x199]
1003818e:	movzx  ecx,BYTE PTR [esi+0x198]
10038195:	movzx  edx,BYTE PTR [esi+0x197]
1003819c:	push   eax
1003819d:	movzx  eax,BYTE PTR [esi+0x196]
100381a4:	push   ecx
100381a5:	movzx  ecx,BYTE PTR [esi+0x195]
100381ac:	push   edx
100381ad:	movzx  edx,BYTE PTR [esi+0x194]
100381b4:	push   eax
100381b5:	push   ecx
100381b6:	push   edx
100381b7:	push   0x10075358
100381bc:	push   0x18
100381be:	mov    ecx,0x10075394
100381c3:	call   0x1000444a
100381c8:	add    esp,0x8
100381cb:	push   eax
100381cc:	lea    eax,[ebp-0x10]
100381cf:	call   0x100066dc
100381d4:	mov    eax,DWORD PTR [ebp-0x10]
100381d7:	add    esp,0x1c
100381da:	cmp    DWORD PTR [eax-0x4],0x1
100381de:	jle    0x100381f0
100381e0:	mov    eax,DWORD PTR [eax-0xc]
100381e3:	push   eax
100381e4:	lea    ecx,[ebp-0x10]
100381e7:	push   ecx
100381e8:	call   0x1000229c
100381ed:	mov    eax,DWORD PTR [ebp-0x10]
100381f0:	cmp    eax,edi
100381f2:	je     0x10038239
100381f4:	push   eax
100381f5:	call   DWORD PTR ds:0x100670ac
100381fb:	add    eax,0x1
100381fe:	cmp    eax,0x3fffffff
10038203:	jg     0x10038235
10038205:	lea    edi,[eax+eax*1]
10038208:	mov    eax,edi
1003820a:	call   0x1004b9b0
1003820f:	mov    esi,esp
10038211:	test   esi,esi
10038213:	je     0x10038235
10038215:	mov    edx,DWORD PTR [ebp-0x10]
10038218:	push   0x0
1003821a:	push   0x0
1003821c:	push   edi
1003821d:	push   esi
1003821e:	push   0xffffffff
10038220:	push   edx
10038221:	push   0x0
10038223:	push   ebx
10038224:	mov    BYTE PTR [esi],0x0
10038227:	call   DWORD PTR ds:0x100670c4
1003822d:	neg    eax
1003822f:	sbb    eax,eax
10038231:	and    eax,esi
10038233:	jmp    0x10038237
10038235:	xor    eax,eax
10038237:	mov    edi,eax
10038239:	push   edi
1003823a:	mov    DWORD PTR [ebp-0x14],0xf
10038241:	mov    DWORD PTR [ebp-0x18],0x0
10038248:	mov    BYTE PTR [ebp-0x28],0x0
1003824c:	call   0x10043450
10038251:	mov    ecx,DWORD PTR [ebp-0x28]
10038254:	mov    esi,eax
10038256:	mov    eax,DWORD PTR [ebp-0x14]
10038259:	add    esp,0x4
1003825c:	cmp    eax,0x10
1003825f:	mov    edx,ecx
10038261:	jae    0x10038266
10038263:	lea    edx,[ebp-0x28]
10038266:	cmp    edi,edx
10038268:	jb     0x10038298
1003826a:	cmp    eax,0x10
1003826d:	mov    edx,ecx
1003826f:	jae    0x10038274
10038271:	lea    edx,[ebp-0x28]
10038274:	mov    ebx,DWORD PTR [ebp-0x18]
10038277:	add    edx,ebx
10038279:	cmp    edx,edi
1003827b:	jbe    0x10038298
1003827d:	cmp    eax,0x10
10038280:	mov    eax,ecx
10038282:	jae    0x10038287
10038284:	lea    eax,[ebp-0x28]
10038287:	push   esi
10038288:	sub    edi,eax
1003828a:	lea    eax,[ebp-0x2c]
1003828d:	push   edi
1003828e:	push   eax
1003828f:	mov    ecx,eax
10038291:	call   0x10001241
10038296:	jmp    0x100382ea
10038298:	cmp    esi,0xfffffffe
1003829b:	jbe    0x100382a8
1003829d:	call   0x100574b0
100382a2:	mov    eax,DWORD PTR [ebp-0x14]
100382a5:	mov    ecx,DWORD PTR [ebp-0x28]
100382a8:	cmp    eax,esi
100382aa:	jae    0x100382fc
100382ac:	mov    ecx,DWORD PTR [ebp-0x18]
100382af:	push   ecx
100382b0:	push   esi
100382b1:	lea    ecx,[ebp-0x2c]
100382b4:	call   0x10001500
100382b9:	mov    eax,DWORD PTR [ebp-0x14]
100382bc:	mov    ecx,DWORD PTR [ebp-0x28]
100382bf:	test   esi,esi
100382c1:	jbe    0x100382ea
100382c3:	cmp    eax,0x10
100382c6:	jae    0x100382cb
100382c8:	lea    ecx,[ebp-0x28]
100382cb:	push   esi
100382cc:	push   edi
100382cd:	push   eax
100382ce:	push   ecx
100382cf:	call   0x100433cf
100382d4:	mov    eax,DWORD PTR [ebp-0x28]
100382d7:	add    esp,0x10
100382da:	cmp    DWORD PTR [ebp-0x14],0x10
100382de:	mov    DWORD PTR [ebp-0x18],esi
100382e1:	jae    0x100382e6
100382e3:	lea    eax,[ebp-0x28]
100382e6:	mov    BYTE PTR [eax+esi*1],0x0
100382ea:	mov    ebx,DWORD PTR [ebp-0x38]
100382ed:	mov    BYTE PTR [ebp-0x4],0x1
100382f1:	mov    edi,DWORD PTR [ebx+0x4]
100382f4:	test   edi,edi
100382f6:	jne    0x10038312
100382f8:	xor    esi,esi
100382fa:	jmp    0x1003832a
100382fc:	test   esi,esi
100382fe:	jne    0x100382c1
10038300:	cmp    eax,0x10
10038303:	mov    DWORD PTR [ebp-0x18],esi
10038306:	mov    eax,ecx
10038308:	jae    0x1003830d
1003830a:	lea    eax,[ebp-0x28]
1003830d:	mov    BYTE PTR [eax],0x0
10038310:	jmp    0x100382ea
10038312:	mov    ecx,DWORD PTR [ebx+0x8]
10038315:	sub    ecx,edi
10038317:	mov    eax,0x92492493
1003831c:	imul   ecx
1003831e:	add    edx,ecx
10038320:	sar    edx,0x4
10038323:	mov    esi,edx
10038325:	shr    esi,0x1f
10038328:	add    esi,edx
1003832a:	test   edi,edi
1003832c:	je     0x10038370
1003832e:	mov    ecx,DWORD PTR [ebx+0xc]
10038331:	sub    ecx,edi
10038333:	mov    eax,0x92492493
10038338:	imul   ecx
1003833a:	add    edx,ecx
1003833c:	sar    edx,0x4
1003833f:	mov    eax,edx
10038341:	shr    eax,0x1f
10038344:	add    eax,edx
10038346:	cmp    esi,eax
10038348:	jae    0x10038370
1003834a:	mov    esi,DWORD PTR [ebx+0x8]
1003834d:	mov    BYTE PTR [ebp-0x34],0x0
10038351:	mov    edx,DWORD PTR [ebp-0x34]
10038354:	mov    eax,DWORD PTR [ebp-0x34]
10038357:	push   edx
10038358:	push   eax
10038359:	lea    ecx,[ebp-0x2c]
1003835c:	push   ecx
1003835d:	push   0x1
1003835f:	push   esi
10038360:	call   0x100103c0
10038365:	add    esp,0x14
10038368:	add    esi,0x1c
1003836b:	mov    DWORD PTR [ebx+0x8],esi
1003836e:	jmp    0x1003838d
10038370:	mov    esi,DWORD PTR [ebx+0x8]
10038373:	cmp    edi,esi
10038375:	jbe    0x1003837c
10038377:	call   0x10043605
1003837c:	push   esi
1003837d:	push   ebx
1003837e:	lea    edx,[ebp-0x2c]
10038381:	push   edx
10038382:	lea    eax,[ebp-0x44]
10038385:	push   eax
10038386:	mov    eax,ebx
10038388:	call   0x10010025
1003838d:	cmp    DWORD PTR [ebp-0x14],0x10
10038391:	jb     0x1003839f
10038393:	mov    ecx,DWORD PTR [ebp-0x28]
10038396:	push   ecx
10038397:	call   0x10042fe2
1003839c:	add    esp,0x4
1003839f:	mov    edx,DWORD PTR [ebp-0x30]
100383a2:	mov    esi,DWORD PTR [edx]
100383a4:	mov    DWORD PTR [ebp-0x4],0xffffffff
100383ab:	mov    eax,DWORD PTR [ebp-0x10]
100383ae:	add    eax,0xfffffff0
100383b1:	mov    DWORD PTR [ebp-0x14],0xf
100383b8:	mov    DWORD PTR [ebp-0x18],0x0
100383bf:	mov    BYTE PTR [ebp-0x28],0x0
100383c3:	mov    DWORD PTR [ebp-0x30],esi
100383c6:	lea    ecx,[eax+0xc]
100383c9:	or     edx,0xffffffff
100383cc:	lock xadd DWORD PTR [ecx],edx
100383d0:	dec    edx
100383d1:	test   edx,edx
100383d3:	jg     0x100383df
100383d5:	mov    ecx,DWORD PTR [eax]
100383d7:	mov    edx,DWORD PTR [ecx]
100383d9:	push   eax
100383da:	mov    eax,DWORD PTR [edx+0x4]
100383dd:	call   eax
100383df:	test   esi,esi
100383e1:	jne    0x10038162
100383e7:	lea    esp,[ebp-0x54]
100383ea:	mov    ecx,DWORD PTR [ebp-0xc]
100383ed:	mov    DWORD PTR fs:0x0,ecx
100383f4:	pop    ecx
100383f5:	pop    edi
100383f6:	pop    esi
100383f7:	pop    ebx
100383f8:	mov    ecx,DWORD PTR [ebp+0x1950]
100383fe:	xor    ecx,ebp
10038400:	call   0x10043615
10038405:	add    ebp,0x1954
1003840b:	mov    esp,ebp
1003840d:	pop    ebp
1003840e:	ret    
1003840f:	int3   
10038410:	push   ebp
10038411:	mov    ebp,esp
10038413:	and    esp,0xfffffff8
10038416:	push   0xffffffff
10038418:	push   0x1006186b
1003841d:	mov    eax,fs:0x0
10038423:	push   eax
10038424:	sub    esp,0x50
10038427:	push   ebx
10038428:	push   esi
10038429:	push   edi
1003842a:	mov    eax,ds:0x100801ac
1003842f:	xor    eax,esp
10038431:	push   eax
10038432:	lea    eax,[esp+0x60]
10038436:	mov    fs:0x0,eax
1003843c:	xor    ebx,ebx
1003843e:	push   0xc
10038440:	mov    DWORD PTR [esp+0x3c],ebx
10038444:	call   0x10043196
10038449:	mov    esi,eax
1003844b:	add    esp,0x4
1003844e:	mov    DWORD PTR [esp+0x38],esi
10038452:	cmp    esi,ebx
10038454:	mov    DWORD PTR [esp+0x68],ebx
10038458:	lea    edi,[ebx+0x1]
1003845b:	je     0x10038480
1003845d:	push   0x1006e2d8
10038462:	mov    DWORD PTR [esi+0x4],ebx
10038465:	mov    DWORD PTR [esi+0x8],edi
10038468:	call   DWORD PTR ds:0x100672ac
1003846e:	cmp    eax,ebx
10038470:	mov    DWORD PTR [esi],eax
10038472:	jne    0x10038482
10038474:	push   0x8007000e
10038479:	call   0x10050e90
1003847e:	jmp    0x10038482
10038480:	xor    esi,esi
10038482:	cmp    esi,ebx
10038484:	mov    DWORD PTR [esp+0x68],0xffffffff
1003848c:	mov    DWORD PTR [esp+0x1c],esi
10038490:	jne    0x1003849c
10038492:	push   0x8007000e
10038497:	call   0x10050e90
1003849c:	push   ebx
1003849d:	push   ebx
1003849e:	mov    DWORD PTR [esp+0x70],edi
100384a2:	call   DWORD PTR ds:0x1006742c
100384a8:	test   eax,eax
100384aa:	jge    0x10038506
100384ac:	mov    eax,DWORD PTR [ebp+0x8]
100384af:	mov    DWORD PTR [eax],esi
100384b1:	cmp    esi,ebx
100384b3:	je     0x100384f0
100384b5:	lea    edi,[esi+0x8]
100384b8:	push   edi
100384b9:	call   DWORD PTR ds:0x100670b0
100384bf:	push   edi
100384c0:	call   DWORD PTR ds:0x100670bc
100384c6:	test   eax,eax
100384c8:	jne    0x100384f0
100384ca:	mov    eax,DWORD PTR [esi]
100384cc:	cmp    eax,ebx
100384ce:	je     0x100384d7
100384d0:	push   eax
100384d1:	call   DWORD PTR ds:0x100672b4
100384d7:	mov    eax,DWORD PTR [esi+0x4]
100384da:	cmp    eax,ebx
100384dc:	je     0x100384e7
100384de:	push   eax
100384df:	call   0x10043178
100384e4:	add    esp,0x4
100384e7:	push   esi
100384e8:	call   0x10042fe2
100384ed:	add    esp,0x4
100384f0:	mov    eax,DWORD PTR [ebp+0x8]
100384f3:	mov    ecx,DWORD PTR [esp+0x60]
100384f7:	mov    DWORD PTR fs:0x0,ecx
100384fe:	pop    ecx
100384ff:	pop    edi
10038500:	pop    esi
10038501:	pop    ebx
10038502:	mov    esp,ebp
10038504:	pop    ebp
10038505:	ret    
10038506:	lea    ecx,[esp+0x18]
1003850a:	push   ecx
1003850b:	push   0x1006c6b8
10038510:	push   edi
10038511:	push   ebx
10038512:	push   0x1006c788
10038517:	mov    DWORD PTR [esp+0x2c],ebx
1003851b:	call   DWORD PTR ds:0x10067440
10038521:	cmp    eax,ebx
10038523:	jge    0x10038535
10038525:	call   DWORD PTR ds:0x10067448
1003852b:	mov    edx,DWORD PTR [ebp+0x8]
1003852e:	mov    DWORD PTR [edx],esi
10038530:	jmp    0x100384b1
10038535:	push   0x100753c8
1003853a:	push   0xa
1003853c:	mov    ecx,0x10075404
10038541:	mov    DWORD PTR [esp+0x1c],ebx
10038545:	call   0x1000444a
1003854a:	add    esp,0x8
1003854d:	push   eax
1003854e:	lea    edi,[esp+0x30]
10038552:	call   0x100024b0
10038557:	mov    BYTE PTR [esp+0x68],0x2
1003855c:	mov    eax,DWORD PTR [eax]
1003855e:	cmp    eax,ebx
10038560:	je     0x10038566
10038562:	mov    ecx,DWORD PTR [eax]
10038564:	jmp    0x10038568
10038566:	xor    ecx,ecx
10038568:	mov    eax,DWORD PTR [esp+0x18]
1003856c:	mov    edx,DWORD PTR [eax]
1003856e:	lea    edi,[esp+0x14]
10038572:	push   edi
10038573:	push   0x0
10038575:	push   0x0
10038577:	push   0x0
10038579:	push   0x0
1003857b:	push   0x0
1003857d:	push   0x0
1003857f:	push   ecx
10038580:	push   eax
10038581:	mov    eax,DWORD PTR [edx+0xc]
10038584:	call   eax
10038586:	mov    ebx,eax
10038588:	mov    BYTE PTR [esp+0x68],0x1
1003858d:	mov    eax,DWORD PTR [esp+0x2c]
10038591:	test   eax,eax
10038593:	je     0x100385cf
10038595:	mov    edi,eax
10038597:	add    eax,0x8
1003859a:	push   eax
1003859b:	call   DWORD PTR ds:0x100670bc
100385a1:	test   eax,eax
100385a3:	jne    0x100385cf
100385a5:	test   edi,edi
100385a7:	je     0x100385cf
100385a9:	mov    eax,DWORD PTR [edi]
100385ab:	test   eax,eax
100385ad:	je     0x100385b6
100385af:	push   eax
100385b0:	call   DWORD PTR ds:0x100672b4
100385b6:	mov    eax,DWORD PTR [edi+0x4]
100385b9:	test   eax,eax
100385bb:	je     0x100385c6
100385bd:	push   eax
100385be:	call   0x10043178
100385c3:	add    esp,0x4
100385c6:	push   edi
100385c7:	call   0x10042fe2
100385cc:	add    esp,0x4
100385cf:	test   ebx,ebx
100385d1:	jge    0x100385dc
100385d3:	mov    eax,DWORD PTR [esp+0x18]
100385d7:	jmp    0x10038885
100385dc:	mov    eax,DWORD PTR [esp+0x14]
100385e0:	push   0x0
100385e2:	push   0x0
100385e4:	push   0x3
100385e6:	push   0x3
100385e8:	push   0x0
100385ea:	push   0x0
100385ec:	push   0xa
100385ee:	push   eax
100385ef:	call   DWORD PTR ds:0x1006744c
100385f5:	test   eax,eax
100385f7:	jge    0x1003860e
100385f9:	mov    eax,DWORD PTR [esp+0x14]
100385fd:	mov    ecx,DWORD PTR [eax]
100385ff:	mov    edx,DWORD PTR [ecx+0x8]
10038602:	push   eax
10038603:	call   edx
10038605:	mov    eax,DWORD PTR [esp+0x18]
10038609:	jmp    0x10038885
1003860e:	push   0x1007541c
10038613:	push   0xe
10038615:	mov    ecx,0x10075448
1003861a:	mov    DWORD PTR [esp+0x28],0x0
10038622:	call   0x100042b4
10038627:	add    esp,0x8
1003862a:	push   eax
1003862b:	lea    edi,[esp+0x38]
1003862f:	call   0x10002458
10038634:	mov    ecx,DWORD PTR [ebp+0xc]
10038637:	push   ecx
10038638:	lea    edx,[esp+0x30]
1003863c:	push   edx
1003863d:	push   eax
1003863e:	mov    BYTE PTR [esp+0x74],0x3
10038643:	call   0x10037ca0
10038648:	mov    ebx,eax
1003864a:	push   0x10075458
1003864f:	push   0x3
10038651:	mov    ecx,0x1007547c
10038656:	mov    BYTE PTR [esp+0x70],0x4
1003865b:	call   0x100042b4
10038660:	add    esp,0x8
10038663:	push   eax
10038664:	lea    edi,[esp+0x2c]
10038668:	call   0x10002458
1003866d:	mov    BYTE PTR [esp+0x68],0x5
10038672:	mov    ecx,DWORD PTR [ebx]
10038674:	test   ecx,ecx
10038676:	je     0x1003867c
10038678:	mov    ecx,DWORD PTR [ecx]
1003867a:	jmp    0x1003867e
1003867c:	xor    ecx,ecx
1003867e:	mov    eax,DWORD PTR [eax]
10038680:	test   eax,eax
10038682:	je     0x10038688
10038684:	mov    edx,DWORD PTR [eax]
10038686:	jmp    0x1003868a
10038688:	xor    edx,edx
1003868a:	mov    eax,DWORD PTR [esp+0x14]
1003868e:	mov    edi,DWORD PTR [eax]
10038690:	lea    ebx,[esp+0x20]
10038694:	push   ebx
10038695:	push   0x0
10038697:	push   0x30
10038699:	push   ecx
1003869a:	push   edx
1003869b:	push   eax
1003869c:	mov    eax,DWORD PTR [edi+0x50]
1003869f:	call   eax
100386a1:	mov    ebx,DWORD PTR ds:0x100670bc
100386a7:	mov    DWORD PTR [esp+0x38],eax
100386ab:	mov    eax,DWORD PTR [esp+0x28]
100386af:	test   eax,eax
100386b1:	je     0x100386f1
100386b3:	mov    edi,eax
100386b5:	add    eax,0x8
100386b8:	push   eax
100386b9:	call   ebx
100386bb:	test   eax,eax
100386bd:	jne    0x100386e9
100386bf:	test   edi,edi
100386c1:	je     0x100386e9
100386c3:	mov    eax,DWORD PTR [edi]
100386c5:	test   eax,eax
100386c7:	je     0x100386d0
100386c9:	push   eax
100386ca:	call   DWORD PTR ds:0x100672b4
100386d0:	mov    eax,DWORD PTR [edi+0x4]
100386d3:	test   eax,eax
100386d5:	je     0x100386e0
100386d7:	push   eax
100386d8:	call   0x10043178
100386dd:	add    esp,0x4
100386e0:	push   edi
100386e1:	call   0x10042fe2
100386e6:	add    esp,0x4
100386e9:	mov    DWORD PTR [esp+0x28],0x0
100386f1:	mov    edi,DWORD PTR [esp+0x2c]
100386f5:	test   edi,edi
100386f7:	je     0x10038735
100386f9:	lea    ecx,[edi+0x8]
100386fc:	push   ecx
100386fd:	call   ebx
100386ff:	test   eax,eax
10038701:	jne    0x1003872d
10038703:	test   edi,edi
10038705:	je     0x1003872d
10038707:	mov    eax,DWORD PTR [edi]
10038709:	test   eax,eax
1003870b:	je     0x10038714
1003870d:	push   eax
1003870e:	call   DWORD PTR ds:0x100672b4
10038714:	mov    eax,DWORD PTR [edi+0x4]
10038717:	test   eax,eax
10038719:	je     0x10038724
1003871b:	push   eax
1003871c:	call   0x10043178
10038721:	add    esp,0x4
10038724:	push   edi
10038725:	call   0x10042fe2
1003872a:	add    esp,0x4
1003872d:	mov    DWORD PTR [esp+0x2c],0x0
10038735:	mov    BYTE PTR [esp+0x68],0x1
1003873a:	mov    eax,DWORD PTR [esp+0x34]
1003873e:	test   eax,eax
10038740:	je     0x10038778
10038742:	mov    edi,eax
10038744:	add    eax,0x8
10038747:	push   eax
10038748:	call   ebx
1003874a:	test   eax,eax
1003874c:	jne    0x10038778
1003874e:	test   edi,edi
10038750:	je     0x10038778
10038752:	mov    eax,DWORD PTR [edi]
10038754:	test   eax,eax
10038756:	je     0x1003875f
10038758:	push   eax
10038759:	call   DWORD PTR ds:0x100672b4
1003875f:	mov    eax,DWORD PTR [edi+0x4]
10038762:	test   eax,eax
10038764:	je     0x1003876f
10038766:	push   eax
10038767:	call   0x10043178
1003876c:	add    esp,0x4
1003876f:	push   edi
10038770:	call   0x10042fe2
10038775:	add    esp,0x4
10038778:	cmp    DWORD PTR [esp+0x38],0x0
1003877d:	jge    0x10038794
1003877f:	mov    eax,DWORD PTR [esp+0x14]
10038783:	mov    edx,DWORD PTR [eax]
10038785:	push   eax
10038786:	mov    eax,DWORD PTR [edx+0x8]
10038789:	call   eax
1003878b:	mov    eax,DWORD PTR [esp+0x18]
1003878f:	jmp    0x10038885
10038794:	mov    eax,DWORD PTR [esp+0x20]
10038798:	test   eax,eax
1003879a:	mov    DWORD PTR [esp+0x30],0x0
100387a2:	je     0x10038859
100387a8:	mov    ebx,DWORD PTR ds:0x10067284
100387ae:	mov    ecx,DWORD PTR [eax]
100387b0:	lea    edx,[esp+0x30]
100387b4:	push   edx
100387b5:	lea    edx,[esp+0x28]
100387b9:	push   edx
100387ba:	push   0x1
100387bc:	push   0xffffffff
100387be:	push   eax
100387bf:	mov    eax,DWORD PTR [ecx+0x10]
100387c2:	call   eax
100387c4:	cmp    DWORD PTR [esp+0x30],0x0
100387c9:	je     0x10038859
100387cf:	mov    esi,DWORD PTR [esp+0x24]
100387d3:	mov    eax,DWORD PTR [ebp+0x10]
100387d6:	mov    edi,DWORD PTR [esi]
100387d8:	push   0x0
100387da:	push   0x0
100387dc:	lea    ecx,[esp+0x44]
100387e0:	push   ecx
100387e1:	push   0x0
100387e3:	call   0x10002590
100387e8:	mov    edx,DWORD PTR [edi+0x10]
100387eb:	push   eax
100387ec:	push   esi
100387ed:	call   edx
100387ef:	test   eax,eax
100387f1:	jl     0x100387fb
100387f3:	cmp    WORD PTR [esp+0x3c],0x8
100387f9:	je     0x10038818
100387fb:	lea    eax,[esp+0x3c]
100387ff:	push   eax
10038800:	call   ebx
10038802:	mov    eax,DWORD PTR [esp+0x24]
10038806:	mov    ecx,DWORD PTR [eax]
10038808:	mov    edx,DWORD PTR [ecx+0x8]
1003880b:	push   eax
1003880c:	call   edx
1003880e:	mov    eax,DWORD PTR [esp+0x20]
10038812:	test   eax,eax
10038814:	jne    0x100387ae
10038816:	jmp    0x10038859
10038818:	lea    eax,[esp+0x4c]
1003881c:	push   eax
1003881d:	call   DWORD PTR ds:0x10067294
10038823:	lea    ecx,[esp+0x3c]
10038827:	push   ecx
10038828:	lea    edx,[esp+0x50]
1003882c:	push   edx
1003882d:	call   DWORD PTR ds:0x10067280
10038833:	test   eax,eax
10038835:	jge    0x1003883d
10038837:	push   eax
10038838:	call   0x10050e90
1003883d:	lea    esi,[esp+0x4c]
10038841:	lea    edi,[esp+0x1c]
10038845:	mov    BYTE PTR [esp+0x68],0x6
1003884a:	call   0x10037d20
1003884f:	mov    eax,esi
10038851:	push   eax
10038852:	mov    BYTE PTR [esp+0x6c],0x1
10038857:	call   ebx
10038859:	mov    eax,DWORD PTR [esp+0x14]
1003885d:	mov    ecx,DWORD PTR [eax]
1003885f:	mov    edx,DWORD PTR [ecx+0x8]
10038862:	mov    esi,DWORD PTR [esp+0x1c]
10038866:	push   eax
10038867:	call   edx
10038869:	mov    eax,DWORD PTR [esp+0x18]
1003886d:	mov    ecx,DWORD PTR [eax]
1003886f:	mov    edx,DWORD PTR [ecx+0x8]
10038872:	push   eax
10038873:	call   edx
10038875:	mov    eax,DWORD PTR [esp+0x20]
10038879:	mov    ecx,DWORD PTR [eax]
1003887b:	mov    edx,DWORD PTR [ecx+0x8]
1003887e:	push   eax
1003887f:	call   edx
10038881:	mov    eax,DWORD PTR [esp+0x24]
10038885:	mov    ecx,DWORD PTR [eax]
10038887:	mov    edx,DWORD PTR [ecx+0x8]
1003888a:	push   eax
1003888b:	call   edx
1003888d:	call   DWORD PTR ds:0x10067448
10038893:	test   esi,esi
10038895:	mov    ebx,DWORD PTR [ebp+0x8]
10038898:	mov    DWORD PTR [ebx],esi
1003889a:	je     0x100388d7
1003889c:	lea    edi,[esi+0x8]
1003889f:	push   edi
100388a0:	call   DWORD PTR ds:0x100670b0
100388a6:	push   edi
100388a7:	call   DWORD PTR ds:0x100670bc
100388ad:	test   eax,eax
100388af:	jne    0x100388d7
100388b1:	mov    eax,DWORD PTR [esi]
100388b3:	test   eax,eax
100388b5:	je     0x100388be
100388b7:	push   eax
100388b8:	call   DWORD PTR ds:0x100672b4
100388be:	mov    eax,DWORD PTR [esi+0x4]
100388c1:	test   eax,eax
100388c3:	je     0x100388ce
100388c5:	push   eax
100388c6:	call   0x10043178
100388cb:	add    esp,0x4
100388ce:	push   esi
100388cf:	call   0x10042fe2
100388d4:	add    esp,0x4
100388d7:	mov    eax,ebx
100388d9:	mov    ecx,DWORD PTR [esp+0x60]
100388dd:	mov    DWORD PTR fs:0x0,ecx
100388e4:	pop    ecx
100388e5:	pop    edi
100388e6:	pop    esi
100388e7:	pop    ebx
100388e8:	mov    esp,ebp
100388ea:	pop    ebp
100388eb:	ret    
100388ec:	int3   
100388ed:	int3   
100388ee:	int3   
100388ef:	int3   
100388f0:	push   ebp
100388f1:	mov    ebp,esp
100388f3:	push   0xffffffff
100388f5:	push   0x10062b5e
100388fa:	mov    eax,fs:0x0
10038900:	push   eax
10038901:	sub    esp,0x1c
10038904:	mov    eax,ds:0x100801ac
10038909:	xor    eax,ebp
1003890b:	mov    DWORD PTR [ebp-0x10],eax
1003890e:	push   ebx
1003890f:	push   esi
10038910:	push   edi
10038911:	push   eax
10038912:	lea    eax,[ebp-0xc]
10038915:	mov    fs:0x0,eax
1003891b:	mov    eax,DWORD PTR [ebp+0x8]
1003891e:	xor    ebx,ebx
10038920:	mov    DWORD PTR [ebp-0x28],eax
10038923:	mov    DWORD PTR [ebp-0x20],ebx
10038926:	call   DWORD PTR ds:0x10080ffc
1003892c:	push   0x10075480
10038931:	push   0xc
10038933:	mov    ecx,0x100754ac
10038938:	mov    DWORD PTR [ebp-0x20],eax
1003893b:	call   0x1000444a
10038940:	push   0xc
10038942:	mov    edi,eax
10038944:	call   0x10043196
10038949:	mov    esi,eax
1003894b:	add    esp,0xc
1003894e:	mov    DWORD PTR [ebp-0x1c],esi
10038951:	cmp    esi,ebx
10038953:	mov    DWORD PTR [ebp-0x4],ebx
10038956:	je     0x10038983
10038958:	mov    DWORD PTR [esi+0x4],ebx
1003895b:	mov    ebx,0x1
10038960:	push   edi
10038961:	mov    DWORD PTR [esi+0x8],ebx
10038964:	call   DWORD PTR ds:0x100672ac
1003896a:	test   eax,eax
1003896c:	mov    DWORD PTR [esi],eax
1003896e:	jne    0x1003897e
10038970:	test   edi,edi
10038972:	je     0x1003897e
10038974:	push   0x8007000e
10038979:	call   0x10050e90
1003897e:	mov    DWORD PTR [ebp-0x18],esi
10038981:	jmp    0x1003898e
10038983:	mov    DWORD PTR [ebp-0x18],ebx
10038986:	mov    esi,DWORD PTR [ebp-0x18]
10038989:	mov    ebx,0x1
1003898e:	test   esi,esi
10038990:	mov    DWORD PTR [ebp-0x4],0xffffffff
10038997:	mov    DWORD PTR [ebp-0x24],esi
1003899a:	jne    0x100389a6
1003899c:	push   0x8007000e
100389a1:	call   0x10050e90
100389a6:	push   0x100754c8
100389ab:	push   0x15
100389ad:	mov    ecx,0x100754fc
100389b2:	mov    DWORD PTR [ebp-0x4],ebx
100389b5:	call   0x1000444a
100389ba:	push   0xc
100389bc:	mov    esi,eax
100389be:	call   0x10043196
100389c3:	mov    edi,eax
100389c5:	add    esp,0xc
100389c8:	mov    DWORD PTR [ebp-0x1c],edi
100389cb:	test   edi,edi
100389cd:	mov    BYTE PTR [ebp-0x4],0x2
100389d1:	je     0x100389fa
100389d3:	push   esi
100389d4:	mov    DWORD PTR [edi+0x4],0x0
100389db:	mov    DWORD PTR [edi+0x8],ebx
100389de:	call   DWORD PTR ds:0x100672ac
100389e4:	test   eax,eax
100389e6:	mov    DWORD PTR [edi],eax
100389e8:	jne    0x100389fc
100389ea:	test   esi,esi
100389ec:	je     0x100389fc
100389ee:	push   0x8007000e
100389f3:	call   0x10050e90
100389f8:	jmp    0x100389fc
100389fa:	xor    edi,edi
100389fc:	test   edi,edi
100389fe:	mov    BYTE PTR [ebp-0x4],0x1
10038a02:	mov    DWORD PTR [ebp-0x1c],edi
10038a05:	jne    0x10038a11
10038a07:	push   0x8007000e
10038a0c:	call   0x10050e90
10038a11:	lea    ecx,[ebp-0x24]
10038a14:	push   ecx
10038a15:	lea    edx,[ebp-0x1c]
10038a18:	push   edx
10038a19:	lea    eax,[ebp-0x14]
10038a1c:	push   eax
10038a1d:	mov    BYTE PTR [ebp-0x4],0x3
10038a21:	call   0x10038410
10038a26:	add    esp,0xc
10038a29:	test   edi,edi
10038a2b:	je     0x10038a61
10038a2d:	lea    ecx,[edi+0x8]
10038a30:	push   ecx
10038a31:	call   DWORD PTR ds:0x100670bc
10038a37:	test   eax,eax
10038a39:	jne    0x10038a61
10038a3b:	mov    eax,DWORD PTR [edi]
10038a3d:	test   eax,eax
10038a3f:	je     0x10038a48
10038a41:	push   eax
10038a42:	call   DWORD PTR ds:0x100672b4
10038a48:	mov    eax,DWORD PTR [edi+0x4]
10038a4b:	test   eax,eax
10038a4d:	je     0x10038a58
10038a4f:	push   eax
10038a50:	call   0x10043178
10038a55:	add    esp,0x4
10038a58:	push   edi
10038a59:	call   0x10042fe2
10038a5e:	add    esp,0x4
10038a61:	mov    esi,DWORD PTR [ebp-0x18]
10038a64:	test   esi,esi
10038a66:	mov    BYTE PTR [ebp-0x4],0x6
10038a6a:	je     0x10038aa0
10038a6c:	lea    edx,[esi+0x8]
10038a6f:	push   edx
10038a70:	call   DWORD PTR ds:0x100670bc
10038a76:	test   eax,eax
10038a78:	jne    0x10038aa0
10038a7a:	mov    eax,DWORD PTR [esi]
10038a7c:	test   eax,eax
10038a7e:	je     0x10038a87
10038a80:	push   eax
10038a81:	call   DWORD PTR ds:0x100672b4
10038a87:	mov    eax,DWORD PTR [esi+0x4]
10038a8a:	test   eax,eax
10038a8c:	je     0x10038a97
10038a8e:	push   eax
10038a8f:	call   0x10043178
10038a94:	add    esp,0x4
10038a97:	push   esi
10038a98:	call   0x10042fe2
10038a9d:	add    esp,0x4
10038aa0:	mov    edi,DWORD PTR [ebp-0x14]
10038aa3:	test   edi,edi
10038aa5:	je     0x10038aad
10038aa7:	mov    ebx,DWORD PTR [edi]
10038aa9:	test   ebx,ebx
10038aab:	jne    0x10038ab1
10038aad:	xor    esi,esi
10038aaf:	jmp    0x10038afc
10038ab1:	push   ebx
10038ab2:	call   DWORD PTR ds:0x100670ac
10038ab8:	add    eax,0x1
10038abb:	cmp    eax,0x3fffffff
10038ac0:	jg     0x10038af8
10038ac2:	lea    edi,[eax+eax*1]
10038ac5:	mov    eax,edi
10038ac7:	call   0x1004b9b0
10038acc:	mov    esi,esp
10038ace:	test   esi,esi
10038ad0:	je     0x10038af5
10038ad2:	mov    eax,DWORD PTR [ebp-0x20]
10038ad5:	push   0x0
10038ad7:	push   0x0
10038ad9:	push   edi
10038ada:	push   esi
10038adb:	push   0xffffffff
10038add:	push   ebx
10038ade:	push   0x0
10038ae0:	push   eax
10038ae1:	mov    BYTE PTR [esi],0x0
10038ae4:	call   DWORD PTR ds:0x100670c4
10038aea:	mov    edi,DWORD PTR [ebp-0x14]
10038aed:	neg    eax
10038aef:	sbb    eax,eax
10038af1:	and    eax,esi
10038af3:	jmp    0x10038afa
10038af5:	mov    edi,DWORD PTR [ebp-0x14]
10038af8:	xor    eax,eax
10038afa:	mov    esi,eax
10038afc:	mov    ebx,DWORD PTR [ebp-0x28]
10038aff:	mov    DWORD PTR [ebx+0x18],0xf
10038b06:	mov    DWORD PTR [ebx+0x14],0x0
10038b0d:	push   esi
10038b0e:	mov    BYTE PTR [ebx+0x4],0x0
10038b12:	call   0x10043450
10038b17:	add    esp,0x4
10038b1a:	push   eax
10038b1b:	push   esi
10038b1c:	mov    ecx,ebx
10038b1e:	call   0x1000133b
10038b23:	test   edi,edi
10038b25:	je     0x10038b5b
10038b27:	lea    ecx,[edi+0x8]
10038b2a:	push   ecx
10038b2b:	call   DWORD PTR ds:0x100670bc
10038b31:	test   eax,eax
10038b33:	jne    0x10038b5b
10038b35:	mov    eax,DWORD PTR [edi]
10038b37:	test   eax,eax
10038b39:	je     0x10038b42
10038b3b:	push   eax
10038b3c:	call   DWORD PTR ds:0x100672b4
10038b42:	mov    eax,DWORD PTR [edi+0x4]
10038b45:	test   eax,eax
10038b47:	je     0x10038b52
10038b49:	push   eax
10038b4a:	call   0x10043178
10038b4f:	add    esp,0x4
10038b52:	push   edi
10038b53:	call   0x10042fe2
10038b58:	add    esp,0x4
10038b5b:	mov    eax,ebx
10038b5d:	lea    esp,[ebp-0x38]
10038b60:	mov    ecx,DWORD PTR [ebp-0xc]
10038b63:	mov    DWORD PTR fs:0x0,ecx
10038b6a:	pop    ecx
10038b6b:	pop    edi
10038b6c:	pop    esi
10038b6d:	pop    ebx
10038b6e:	mov    ecx,DWORD PTR [ebp-0x10]
10038b71:	xor    ecx,ebp
10038b73:	call   0x10043615
10038b78:	mov    esp,ebp
10038b7a:	pop    ebp
10038b7b:	ret    
10038b7c:	int3   
10038b7d:	int3   
10038b7e:	int3   
10038b7f:	int3   
10038b80:	push   ebp
10038b81:	mov    ebp,esp
10038b83:	push   0xffffffff
10038b85:	push   0x10062b10
10038b8a:	mov    eax,fs:0x0
10038b90:	push   eax
10038b91:	sub    esp,0x10
10038b94:	push   ebx
10038b95:	push   esi
10038b96:	push   edi
10038b97:	mov    eax,ds:0x100801ac
10038b9c:	xor    eax,ebp
10038b9e:	push   eax
10038b9f:	lea    eax,[ebp-0xc]
10038ba2:	mov    fs:0x0,eax
10038ba8:	mov    DWORD PTR [ebp-0x10],esp
10038bab:	push   0x1
10038bad:	lea    eax,[ebp-0x18]
10038bb0:	push   eax
10038bb1:	mov    DWORD PTR [ebp-0x4],0x0
10038bb8:	call   0x10034910
10038bbd:	mov    ecx,DWORD PTR [ebp+0x8]
10038bc0:	mov    esi,DWORD PTR [ebp-0x18]
10038bc3:	push   0x0
10038bc5:	lea    edx,[ebp-0x1c]
10038bc8:	push   edx
10038bc9:	push   0x4
10038bcb:	lea    eax,[ebp-0x14]
10038bce:	push   eax
10038bcf:	push   0x4
10038bd1:	mov    DWORD PTR [ebp-0x14],ecx
10038bd4:	mov    ecx,eax
10038bd6:	push   ecx
10038bd7:	push   0x22c068
10038bdc:	push   esi
10038bdd:	call   DWORD PTR ds:0x1006726c
10038be3:	push   esi
10038be4:	call   DWORD PTR ds:0x10067078
10038bea:	mov    ecx,DWORD PTR [ebp-0xc]
10038bed:	mov    DWORD PTR fs:0x0,ecx
10038bf4:	pop    ecx
10038bf5:	pop    edi
10038bf6:	pop    esi
10038bf7:	pop    ebx
10038bf8:	mov    esp,ebp
10038bfa:	pop    ebp
10038bfb:	ret    
10038bfc:	mov    eax,0x10038bea
10038c01:	ret    
10038c02:	int3   
10038c03:	int3   
10038c04:	int3   
10038c05:	int3   
10038c06:	int3   
10038c07:	int3   
10038c08:	int3   
10038c09:	int3   
10038c0a:	int3   
10038c0b:	int3   
10038c0c:	int3   
10038c0d:	int3   
10038c0e:	int3   
10038c0f:	int3   
10038c10:	push   ebp
10038c11:	mov    ebp,esp
10038c13:	push   0xffffffff
10038c15:	push   0x10062ae8
10038c1a:	mov    eax,fs:0x0
10038c20:	push   eax
10038c21:	sub    esp,0x1c
10038c24:	push   ebx
10038c25:	push   esi
10038c26:	push   edi
10038c27:	mov    eax,ds:0x100801ac
10038c2c:	xor    eax,ebp
10038c2e:	push   eax
10038c2f:	lea    eax,[ebp-0xc]
10038c32:	mov    fs:0x0,eax
10038c38:	mov    DWORD PTR [ebp-0x10],esp
10038c3b:	xor    esi,esi
10038c3d:	mov    DWORD PTR [ebp-0x24],esi
10038c40:	mov    eax,ds:0x10082a6c
10038c45:	mov    edx,DWORD PTR [eax+0xc]
10038c48:	mov    ecx,0x10082a6c
10038c4d:	call   edx
10038c4f:	lea    edi,[eax+0x10]
10038c52:	mov    DWORD PTR [ebp-0x14],edi
10038c55:	push   0x1
10038c57:	lea    eax,[ebp-0x24]
10038c5a:	mov    DWORD PTR [ebp-0x4],esi
10038c5d:	push   eax
10038c5e:	mov    BYTE PTR [ebp-0x4],0x1
10038c62:	call   0x10034910
10038c67:	mov    BYTE PTR [ebp-0x4],0x2
10038c6b:	mov    DWORD PTR [ebp-0x20],esi
10038c6e:	mov    edi,edi
10038c70:	cmp    esi,0x16
10038c73:	je     0x10038d63
10038c79:	mov    edx,DWORD PTR ds:0x10082a6c
10038c7f:	mov    eax,DWORD PTR [edx+0xc]
10038c82:	mov    ecx,0x10082a6c
10038c87:	call   eax
10038c89:	add    eax,0x10
10038c8c:	mov    DWORD PTR [ebp-0x1c],eax
10038c8f:	push   0x0
10038c91:	lea    ecx,[ebp-0x28]
10038c94:	push   ecx
10038c95:	push   0x4
10038c97:	lea    edx,[ebp-0x18]
10038c9a:	push   edx
10038c9b:	push   0x4
10038c9d:	mov    eax,edx
10038c9f:	push   eax
10038ca0:	mov    BYTE PTR [ebp-0x4],0x3
10038ca4:	mov    ecx,DWORD PTR [ebp-0x24]
10038ca7:	push   0x22c06c
10038cac:	push   ecx
10038cad:	mov    DWORD PTR [ebp-0x18],esi
10038cb0:	call   DWORD PTR ds:0x1006726c
10038cb6:	mov    esi,DWORD PTR [ebp-0x18]
10038cb9:	test   esi,esi
10038cbb:	je     0x10038cf2
10038cbd:	push   0x10075528
10038cc2:	push   0x2
10038cc4:	mov    ecx,0x10075560
10038cc9:	call   0x100042b4
10038cce:	add    esp,0x8
10038cd1:	push   esi
10038cd2:	push   eax
10038cd3:	lea    edi,[ebp-0x1c]
10038cd6:	call   0x10038f20
10038cdb:	mov    eax,DWORD PTR [ebp-0x1c]
10038cde:	mov    ecx,DWORD PTR [eax-0xc]
10038ce1:	add    esp,0x8
10038ce4:	push   ecx
10038ce5:	push   eax
10038ce6:	lea    edx,[ebp-0x14]
10038ce9:	push   edx
10038cea:	call   0x100346d0
10038cef:	mov    edi,DWORD PTR [ebp-0x14]
10038cf2:	mov    ebx,DWORD PTR [edi-0xc]
10038cf5:	mov    eax,DWORD PTR [edi-0x8]
10038cf8:	mov    ecx,0x1
10038cfd:	sub    ecx,DWORD PTR [edi-0x4]
10038d00:	lea    esi,[ebx+0x1]
10038d03:	sub    eax,esi
10038d05:	or     eax,ecx
10038d07:	jge    0x10038d16
10038d09:	mov    ecx,esi
10038d0b:	lea    eax,[ebp-0x14]
10038d0e:	call   0x10034570
10038d13:	mov    edi,DWORD PTR [ebp-0x14]
10038d16:	test   esi,esi
10038d18:	mov    BYTE PTR [ebx+edi*1],0x2c
10038d1c:	jl     0x10038d59
10038d1e:	cmp    esi,DWORD PTR [edi-0x8]
10038d21:	jg     0x10038d59
10038d23:	mov    BYTE PTR [ebp-0x4],0x2
10038d27:	mov    eax,DWORD PTR [ebp-0x1c]
10038d2a:	add    eax,0xfffffff0
10038d2d:	mov    DWORD PTR [edi-0xc],esi
10038d30:	mov    BYTE PTR [esi+edi*1],0x0
10038d34:	lea    ecx,[eax+0xc]
10038d37:	or     edx,0xffffffff
10038d3a:	lock xadd DWORD PTR [ecx],edx
10038d3e:	dec    edx
10038d3f:	test   edx,edx
10038d41:	jg     0x10038d4d
10038d43:	mov    ecx,DWORD PTR [eax]
10038d45:	mov    edx,DWORD PTR [ecx]
10038d47:	push   eax
10038d48:	mov    eax,DWORD PTR [edx+0x4]
10038d4b:	call   eax
10038d4d:	add    DWORD PTR [ebp-0x20],0x1
10038d51:	mov    esi,DWORD PTR [ebp-0x20]
10038d54:	jmp    0x10038c70
10038d59:	push   0x80070057
10038d5e:	call   0x10001f2d
10038d63:	lea    edi,[ebp-0x14]
10038d66:	call   0x10038ea0
10038d6b:	mov    ecx,DWORD PTR [ebp-0x24]
10038d6e:	push   ecx
10038d6f:	call   DWORD PTR ds:0x10067078
10038d75:	mov    DWORD PTR [ebp-0x4],0x0
10038d7c:	mov    eax,DWORD PTR [ebp-0x14]
10038d7f:	cmp    DWORD PTR [eax-0x4],0x1
10038d83:	jle    0x10038d95
10038d85:	mov    edx,DWORD PTR [eax-0xc]
10038d88:	push   edx
10038d89:	lea    eax,[ebp-0x14]
10038d8c:	push   eax
10038d8d:	call   0x100343f0
10038d92:	mov    eax,DWORD PTR [ebp-0x14]
10038d95:	mov    esi,DWORD PTR [ebp+0x8]
10038d98:	mov    DWORD PTR [esi+0x18],0xf
10038d9f:	mov    DWORD PTR [esi+0x14],0x0
10038da6:	lea    edi,[esi+0x4]
10038da9:	push   eax
10038daa:	mov    BYTE PTR [edi],0x0
10038dad:	call   0x10043450
10038db2:	mov    ebx,eax
10038db4:	mov    eax,DWORD PTR [esi+0x18]
10038db7:	add    esp,0x4
10038dba:	cmp    eax,0x10
10038dbd:	jb     0x10038dd0
10038dbf:	mov    ecx,DWORD PTR [edi]
10038dc1:	jmp    0x10038dd2
10038dc3:	mov    DWORD PTR [ebp-0x4],0x0
10038dca:	mov    eax,0x10038d7c
10038dcf:	ret    
10038dd0:	mov    ecx,edi
10038dd2:	cmp    DWORD PTR [ebp-0x14],ecx
10038dd5:	jb     0x10038e03
10038dd7:	cmp    eax,0x10
10038dda:	jb     0x10038de0
10038ddc:	mov    ecx,DWORD PTR [edi]
10038dde:	jmp    0x10038de2
10038de0:	mov    ecx,edi
10038de2:	mov    edx,DWORD PTR [esi+0x14]
10038de5:	add    edx,ecx
10038de7:	mov    ecx,DWORD PTR [ebp-0x14]
10038dea:	cmp    edx,ecx
10038dec:	jbe    0x10038e03
10038dee:	cmp    eax,0x10
10038df1:	jb     0x10038df5
10038df3:	mov    edi,DWORD PTR [edi]
10038df5:	push   ebx
10038df6:	sub    ecx,edi
10038df8:	push   ecx
10038df9:	push   esi
10038dfa:	mov    ecx,esi
10038dfc:	call   0x10001241
10038e01:	jmp    0x10038e63
10038e03:	cmp    ebx,0xfffffffe
10038e06:	jbe    0x10038e0d
10038e08:	call   0x100574b0
10038e0d:	mov    eax,DWORD PTR [esi+0x18]
10038e10:	cmp    eax,ebx
10038e12:	jae    0x10038e30
10038e14:	mov    eax,DWORD PTR [esi+0x14]
10038e17:	push   eax
10038e18:	push   ebx
10038e19:	mov    ecx,esi
10038e1b:	call   0x10001500
10038e20:	test   ebx,ebx
10038e22:	jbe    0x10038e63
10038e24:	mov    ecx,DWORD PTR [esi+0x18]
10038e27:	cmp    ecx,0x10
10038e2a:	jb     0x10038e43
10038e2c:	mov    eax,DWORD PTR [edi]
10038e2e:	jmp    0x10038e45
10038e30:	test   ebx,ebx
10038e32:	jne    0x10038e22
10038e34:	cmp    eax,0x10
10038e37:	mov    DWORD PTR [esi+0x14],ebx
10038e3a:	jb     0x10038e3e
10038e3c:	mov    edi,DWORD PTR [edi]
10038e3e:	mov    BYTE PTR [edi],0x0
10038e41:	jmp    0x10038e63
10038e43:	mov    eax,edi
10038e45:	mov    edx,DWORD PTR [ebp-0x14]
10038e48:	push   ebx
10038e49:	push   edx
10038e4a:	push   ecx
10038e4b:	push   eax
10038e4c:	call   0x100433cf
10038e51:	add    esp,0x10
10038e54:	cmp    DWORD PTR [esi+0x18],0x10
10038e58:	mov    DWORD PTR [esi+0x14],ebx
10038e5b:	jb     0x10038e5f
10038e5d:	mov    edi,DWORD PTR [edi]
10038e5f:	mov    BYTE PTR [edi+ebx*1],0x0
10038e63:	mov    DWORD PTR [ebp-0x4],0xffffffff
10038e6a:	mov    eax,DWORD PTR [ebp-0x14]
10038e6d:	add    eax,0xfffffff0
10038e70:	lea    ecx,[eax+0xc]
10038e73:	or     edx,0xffffffff
10038e76:	lock xadd DWORD PTR [ecx],edx
10038e7a:	dec    edx
10038e7b:	test   edx,edx
10038e7d:	jg     0x10038e89
10038e7f:	mov    ecx,DWORD PTR [eax]
10038e81:	mov    edx,DWORD PTR [ecx]
10038e83:	push   eax
10038e84:	mov    eax,DWORD PTR [edx+0x4]
10038e87:	call   eax
10038e89:	mov    eax,esi
10038e8b:	mov    ecx,DWORD PTR [ebp-0xc]
10038e8e:	mov    DWORD PTR fs:0x0,ecx
10038e95:	pop    ecx
10038e96:	pop    edi
10038e97:	pop    esi
10038e98:	pop    ebx
10038e99:	mov    esp,ebp
10038e9b:	pop    ebp
10038e9c:	ret    
10038e9d:	int3   
10038e9e:	int3   
10038e9f:	int3   
10038ea0:	mov    eax,DWORD PTR [edi]
10038ea2:	mov    cl,BYTE PTR [eax]
10038ea4:	push   esi
10038ea5:	xor    esi,esi
10038ea7:	test   cl,cl
10038ea9:	je     0x10038f04
10038eab:	jmp    0x10038eb0
10038ead:	lea    ecx,[ecx+0x0]
10038eb0:	cmp    cl,0x2c
10038eb3:	jne    0x10038ebd
10038eb5:	test   esi,esi
10038eb7:	jne    0x10038ebf
10038eb9:	mov    esi,eax
10038ebb:	jmp    0x10038ebf
10038ebd:	xor    esi,esi
10038ebf:	push   eax
10038ec0:	call   0x1005936a
10038ec5:	mov    cl,BYTE PTR [eax]
10038ec7:	add    esp,0x4
10038eca:	test   cl,cl
10038ecc:	jne    0x10038eb0
10038ece:	test   esi,esi
10038ed0:	je     0x10038f04
10038ed2:	mov    eax,DWORD PTR [edi]
10038ed4:	mov    edx,DWORD PTR [eax-0x8]
10038ed7:	sub    esi,eax
10038ed9:	mov    ecx,0x1
10038ede:	sub    ecx,DWORD PTR [eax-0x4]
10038ee1:	sub    edx,esi
10038ee3:	or     ecx,edx
10038ee5:	jge    0x10038ef0
10038ee7:	mov    ecx,esi
10038ee9:	mov    eax,edi
10038eeb:	call   0x10034570
10038ef0:	test   esi,esi
10038ef2:	jl     0x10038f08
10038ef4:	mov    eax,DWORD PTR [edi]
10038ef6:	cmp    esi,DWORD PTR [eax-0x8]
10038ef9:	jg     0x10038f08
10038efb:	mov    DWORD PTR [eax-0xc],esi
10038efe:	mov    eax,DWORD PTR [edi]
10038f00:	mov    BYTE PTR [esi+eax*1],0x0
10038f04:	mov    eax,edi
10038f06:	pop    esi
10038f07:	ret    
10038f08:	push   0x80070057
10038f0d:	call   0x10001f2d
10038f12:	int3   
10038f13:	int3   
10038f14:	int3   
10038f15:	int3   
10038f16:	int3   
10038f17:	int3   
10038f18:	int3   
10038f19:	int3   
10038f1a:	int3   
10038f1b:	int3   
10038f1c:	int3   
10038f1d:	int3   
10038f1e:	int3   
10038f1f:	int3   
10038f20:	push   ebx
10038f21:	mov    ebx,DWORD PTR [esp+0x8]
10038f25:	lea    eax,[esp+0xc]
10038f29:	push   eax
10038f2a:	call   0x10038f40
10038f2f:	pop    ebx
10038f30:	ret    
10038f31:	int3   
10038f32:	int3   
10038f33:	int3   
10038f34:	int3   
10038f35:	int3   
10038f36:	int3   
10038f37:	int3   
10038f38:	int3   
10038f39:	int3   
10038f3a:	int3   
10038f3b:	int3   
10038f3c:	int3   
10038f3d:	int3   
10038f3e:	int3   
10038f3f:	int3   
10038f40:	test   ebx,ebx
10038f42:	push   ebp
10038f43:	mov    ebp,DWORD PTR [esp+0x8]
10038f47:	jne    0x10038f53
10038f49:	push   0x80070057
10038f4e:	call   0x10001f2d
10038f53:	push   esi
10038f54:	push   ebp
10038f55:	push   ebx
10038f56:	call   0x10059352
10038f5b:	mov    esi,eax
10038f5d:	mov    eax,DWORD PTR [edi]
10038f5f:	mov    edx,DWORD PTR [eax-0x8]
10038f62:	sub    eax,0x10
10038f65:	mov    ecx,0x1
10038f6a:	sub    ecx,DWORD PTR [eax+0xc]
10038f6d:	sub    edx,esi
10038f6f:	add    esp,0x8
10038f72:	or     ecx,edx
10038f74:	jge    0x10038f7f
10038f76:	mov    ecx,esi
10038f78:	mov    eax,edi
10038f7a:	call   0x10034570
10038f7f:	mov    ecx,DWORD PTR [edi]
10038f81:	push   ebp
10038f82:	push   ebx
10038f83:	lea    eax,[esi+0x1]
10038f86:	push   eax
10038f87:	push   ecx
10038f88:	call   0x100594fb
10038f8d:	add    esp,0x10
10038f90:	test   esi,esi
10038f92:	jl     0x10038fa9
10038f94:	mov    eax,DWORD PTR [edi]
10038f96:	cmp    esi,DWORD PTR [eax-0x8]
10038f99:	jg     0x10038fa9
10038f9b:	mov    DWORD PTR [eax-0xc],esi
10038f9e:	mov    edx,DWORD PTR [edi]
10038fa0:	mov    BYTE PTR [esi+edx*1],0x0
10038fa4:	pop    esi
10038fa5:	pop    ebp
10038fa6:	ret    0x4
10038fa9:	push   0x80070057
10038fae:	call   0x10001f2d
10038fb3:	int3   
10038fb4:	int3   
10038fb5:	int3   
10038fb6:	int3   
10038fb7:	int3   
10038fb8:	int3   
10038fb9:	int3   
10038fba:	int3   
10038fbb:	int3   
10038fbc:	int3   
10038fbd:	int3   
10038fbe:	int3   
10038fbf:	int3   
10038fc0:	push   ebp
10038fc1:	mov    ebp,esp
10038fc3:	and    esp,0xfffffff8
10038fc6:	push   0xffffffff
10038fc8:	push   0x10062aa8
10038fcd:	mov    eax,fs:0x0
10038fd3:	push   eax
10038fd4:	sub    esp,0x30
10038fd7:	push   ebx
10038fd8:	push   esi
10038fd9:	push   edi
10038fda:	mov    eax,ds:0x100801ac
10038fdf:	xor    eax,esp
10038fe1:	push   eax
10038fe2:	lea    eax,[esp+0x40]
10038fe6:	mov    fs:0x0,eax
10038fec:	xor    esi,esi
10038fee:	mov    DWORD PTR [esp+0x28],esi
10038ff2:	push   0x10075564
10038ff7:	push   0x12
10038ff9:	mov    ecx,0x10075594
10038ffe:	mov    DWORD PTR [esp+0x50],esi
10039002:	call   0x1000444a
10039007:	add    esp,0x8
1003900a:	lea    ecx,[esp+0x18]
1003900e:	push   ecx
1003900f:	push   0x20019
10039014:	push   esi
10039015:	push   eax
10039016:	push   0x80000000
1003901b:	mov    DWORD PTR [esp+0x2c],esi
1003901f:	call   DWORD PTR ds:0x10067020
10039025:	cmp    eax,esi
10039027:	jne    0x10039418
1003902d:	mov    edx,DWORD PTR [esp+0x18]
10039031:	mov    eax,ds:0x10082a6c
10039036:	mov    DWORD PTR [esp+0x28],edx
1003903a:	mov    edx,DWORD PTR [eax+0xc]
1003903d:	mov    ecx,0x10082a6c
10039042:	mov    DWORD PTR [esp+0x20],esi
10039046:	call   edx
10039048:	lea    edi,[eax+0x10]
1003904b:	mov    DWORD PTR [esp+0x14],edi
1003904f:	mov    BYTE PTR [esp+0x48],0x1
10039054:	mov    DWORD PTR [esp+0x1c],0x800
1003905c:	mov    eax,DWORD PTR [edi-0x8]
1003905f:	mov    edx,DWORD PTR [esp+0x1c]
10039063:	mov    ecx,0x1
10039068:	sub    ecx,DWORD PTR [edi-0x4]
1003906b:	sub    eax,edx
1003906d:	or     eax,ecx
1003906f:	jge    0x10039080
10039071:	mov    eax,edx
10039073:	lea    ecx,[esp+0x14]
10039077:	call   0x10002253
1003907c:	mov    edi,DWORD PTR [esp+0x14]
10039080:	mov    edx,DWORD PTR [esp+0x20]
10039084:	mov    esi,DWORD PTR [esp+0x18]
10039088:	lea    eax,[esp+0x34]
1003908c:	push   eax
1003908d:	push   0x0
1003908f:	push   0x0
10039091:	push   0x0
10039093:	lea    ecx,[esp+0x2c]
10039097:	push   ecx
10039098:	push   edi
10039099:	push   edx
1003909a:	push   esi
1003909b:	call   DWORD PTR ds:0x10067004
100390a1:	test   eax,eax
100390a3:	jne    0x100393ec
100390a9:	test   edi,edi
100390ab:	je     0x100390be
100390ad:	push   edi
100390ae:	call   0x100437c6
100390b3:	add    esp,0x4
100390b6:	test   eax,eax
100390b8:	jl     0x100393e2
100390be:	cmp    eax,DWORD PTR [edi-0x8]
100390c1:	jg     0x100393e2
100390c7:	mov    DWORD PTR [edi-0xc],eax
100390ca:	push   0x100755bc
100390cf:	mov    WORD PTR [edi+eax*2],0x0
100390d5:	push   0x13
100390d7:	mov    ecx,0x100755f8
100390dc:	mov    DWORD PTR [esp+0x24],0x800
100390e4:	call   0x1000444a
100390e9:	mov    esi,eax
100390eb:	mov    eax,ds:0x10082a6c
100390f0:	mov    edx,DWORD PTR [eax+0xc]
100390f3:	add    esp,0x8
100390f6:	mov    ecx,0x10082a6c
100390fb:	call   edx
100390fd:	add    eax,0x10
10039100:	mov    DWORD PTR [esp+0x10],eax
10039104:	test   esi,esi
10039106:	mov    BYTE PTR [esp+0x48],0x2
1003910b:	je     0x10039133
1003910d:	test   esi,0xffff0000
10039113:	jne    0x10039137
10039115:	movzx  esi,si
10039118:	push   esi
10039119:	call   0x10002005
1003911e:	add    esp,0x4
10039121:	test   eax,eax
10039123:	je     0x1003914c
10039125:	push   esi
10039126:	push   eax
10039127:	lea    eax,[esp+0x18]
1003912b:	push   eax
1003912c:	call   0x100021cd
10039131:	jmp    0x1003914c
10039133:	xor    eax,eax
10039135:	jmp    0x10039140
10039137:	push   esi
10039138:	call   0x100437c6
1003913d:	add    esp,0x4
10039140:	mov    ebx,eax
10039142:	push   esi
10039143:	lea    eax,[esp+0x14]
10039147:	call   0x100023b8
1003914c:	lea    ecx,[esp+0x14]
10039150:	push   ecx
10039151:	lea    edx,[esp+0x28]
10039155:	push   edx
10039156:	lea    ecx,[esp+0x18]
1003915a:	mov    BYTE PTR [esp+0x50],0x3
1003915f:	call   0x10039430
10039164:	add    esp,0x8
10039167:	mov    BYTE PTR [esp+0x48],0x5
1003916c:	mov    eax,DWORD PTR [esp+0x10]
10039170:	add    eax,0xfffffff0
10039173:	lea    ecx,[eax+0xc]
10039176:	or     edx,0xffffffff
10039179:	lock xadd DWORD PTR [ecx],edx
1003917d:	dec    edx
1003917e:	test   edx,edx
10039180:	jg     0x1003918c
10039182:	mov    ecx,DWORD PTR [eax]
10039184:	mov    edx,DWORD PTR [ecx]
10039186:	push   eax
10039187:	mov    eax,DWORD PTR [edx+0x4]
1003918a:	call   eax
1003918c:	xor    ebx,ebx
1003918e:	lea    ecx,[esp+0x10]
10039192:	push   ecx
10039193:	push   0x20019
10039198:	mov    BYTE PTR [esp+0x50],0x6
1003919d:	mov    edx,DWORD PTR [esp+0x2c]
100391a1:	push   ebx
100391a2:	push   edx
100391a3:	push   0x80000000
100391a8:	mov    DWORD PTR [esp+0x24],ebx
100391ac:	call   DWORD PTR ds:0x10067020
100391b2:	test   eax,eax
100391b4:	jne    0x100392c5
100391ba:	mov    eax,ds:0x10082a6c
100391bf:	mov    ebx,DWORD PTR [esp+0x10]
100391c3:	mov    edx,DWORD PTR [eax+0xc]
100391c6:	mov    ecx,0x10082a6c
100391cb:	mov    DWORD PTR [esp+0x2c],ebx
100391cf:	call   edx
100391d1:	lea    esi,[eax+0x10]
100391d4:	mov    DWORD PTR [esp+0x10],esi
100391d8:	mov    BYTE PTR [esp+0x48],0x7
100391dd:	mov    eax,DWORD PTR [esi-0x8]
100391e0:	mov    ecx,0x1
100391e5:	sub    ecx,DWORD PTR [esi-0x4]
100391e8:	sub    eax,0x800
100391ed:	or     eax,ecx
100391ef:	mov    DWORD PTR [esp+0x30],0x800
100391f7:	jge    0x1003920b
100391f9:	mov    eax,0x800
100391fe:	lea    ecx,[esp+0x10]
10039202:	call   0x10002253
10039207:	mov    esi,DWORD PTR [esp+0x10]
1003920b:	push   0x10075620
10039210:	push   0xb
10039212:	mov    ecx,0x1007565c
10039217:	call   0x1000444a
1003921c:	add    esp,0x8
1003921f:	push   eax
10039220:	lea    eax,[esp+0x30]
10039224:	push   eax
10039225:	lea    edi,[esp+0x38]
10039229:	call   0x1002ef20
1003922e:	test   eax,eax
10039230:	jne    0x100392a0
10039232:	cmp    DWORD PTR [esi-0x4],0x1
10039236:	jle    0x1003924a
10039238:	mov    ecx,DWORD PTR [esi-0xc]
1003923b:	push   ecx
1003923c:	lea    edx,[esp+0x14]
10039240:	push   edx
10039241:	call   0x1000229c
10039246:	mov    esi,DWORD PTR [esp+0x10]
1003924a:	push   0x10075674
1003924f:	push   0x4
10039251:	mov    ecx,0x100756a4
10039256:	call   0x1000444a
1003925b:	push   eax
1003925c:	push   esi
1003925d:	call   0x10046240
10039262:	add    esp,0x10
10039265:	test   eax,eax
10039267:	je     0x100392a0
10039269:	cmp    DWORD PTR [esi-0x4],0x1
1003926d:	jle    0x10039281
1003926f:	mov    eax,DWORD PTR [esi-0xc]
10039272:	push   eax
10039273:	lea    ecx,[esp+0x14]
10039277:	push   ecx
10039278:	call   0x1000229c
1003927d:	mov    esi,DWORD PTR [esp+0x10]
10039281:	push   0x100756b0
10039286:	push   0x5
10039288:	mov    ecx,0x100756e4
1003928d:	call   0x1000444a
10039292:	push   eax
10039293:	push   esi
10039294:	call   0x10046240
10039299:	add    esp,0x10
1003929c:	test   eax,eax
1003929e:	jne    0x10039303
100392a0:	lea    eax,[esi-0x10]
100392a3:	mov    BYTE PTR [esp+0x48],0x6
100392a8:	lea    edx,[eax+0xc]
100392ab:	or     ecx,0xffffffff
100392ae:	lock xadd DWORD PTR [edx],ecx
100392b2:	dec    ecx
100392b3:	test   ecx,ecx
100392b5:	jg     0x100392c1
100392b7:	mov    ecx,DWORD PTR [eax]
100392b9:	mov    edx,DWORD PTR [ecx]
100392bb:	push   eax
100392bc:	mov    eax,DWORD PTR [edx+0x4]
100392bf:	call   eax
100392c1:	mov    edi,DWORD PTR [esp+0x14]
100392c5:	add    DWORD PTR [esp+0x20],0x1
100392ca:	test   ebx,ebx
100392cc:	je     0x100392d5
100392ce:	push   ebx
100392cf:	call   DWORD PTR ds:0x10067014
100392d5:	mov    BYTE PTR [esp+0x48],0x1
100392da:	mov    eax,DWORD PTR [esp+0x24]
100392de:	add    eax,0xfffffff0
100392e1:	lea    ecx,[eax+0xc]
100392e4:	or     edx,0xffffffff
100392e7:	lock xadd DWORD PTR [ecx],edx
100392eb:	dec    edx
100392ec:	test   edx,edx
100392ee:	jg     0x1003905c
100392f4:	mov    ecx,DWORD PTR [eax]
100392f6:	mov    edx,DWORD PTR [ecx]
100392f8:	push   eax
100392f9:	mov    eax,DWORD PTR [edx+0x4]
100392fc:	call   eax
100392fe:	jmp    0x1003905c
10039303:	push   0x100756f0
10039308:	push   0x7
1003930a:	mov    ecx,0x10075714
1003930f:	call   0x1000444a
10039314:	mov    edi,DWORD PTR [ebp+0x8]
10039317:	add    esp,0x8
1003931a:	lea    ecx,[esp+0x30]
1003931e:	push   ecx
1003931f:	push   edi
10039320:	lea    edx,[esp+0x28]
10039324:	push   edx
10039325:	push   0x0
10039327:	push   eax
10039328:	push   ebx
10039329:	mov    DWORD PTR [esp+0x48],0x4
10039331:	call   DWORD PTR ds:0x10067000
10039337:	test   eax,eax
10039339:	jne    0x10039342
1003933b:	cmp    DWORD PTR [esp+0x20],0x4
10039340:	je     0x10039348
10039342:	mov    DWORD PTR [edi],0x0
10039348:	add    esi,0xfffffff0
1003934b:	mov    BYTE PTR [esp+0x48],0x6
10039350:	lea    eax,[esi+0xc]
10039353:	or     ecx,0xffffffff
10039356:	lock xadd DWORD PTR [eax],ecx
1003935a:	dec    ecx
1003935b:	test   ecx,ecx
1003935d:	jg     0x10039369
1003935f:	mov    ecx,DWORD PTR [esi]
10039361:	mov    edx,DWORD PTR [ecx]
10039363:	mov    eax,DWORD PTR [edx+0x4]
10039366:	push   esi
10039367:	call   eax
10039369:	test   ebx,ebx
1003936b:	je     0x10039374
1003936d:	push   ebx
1003936e:	call   DWORD PTR ds:0x10067014
10039374:	mov    BYTE PTR [esp+0x48],0x1
10039379:	mov    eax,DWORD PTR [esp+0x24]
1003937d:	add    eax,0xfffffff0
10039380:	lea    ecx,[eax+0xc]
10039383:	or     edx,0xffffffff
10039386:	lock xadd DWORD PTR [ecx],edx
1003938a:	dec    edx
1003938b:	test   edx,edx
1003938d:	jg     0x10039399
1003938f:	mov    ecx,DWORD PTR [eax]
10039391:	mov    edx,DWORD PTR [ecx]
10039393:	push   eax
10039394:	mov    eax,DWORD PTR [edx+0x4]
10039397:	call   eax
10039399:	mov    BYTE PTR [esp+0x48],0x0
1003939e:	mov    eax,DWORD PTR [esp+0x14]
100393a2:	add    eax,0xfffffff0
100393a5:	lea    ecx,[eax+0xc]
100393a8:	or     edx,0xffffffff
100393ab:	lock xadd DWORD PTR [ecx],edx
100393af:	dec    edx
100393b0:	test   edx,edx
100393b2:	jg     0x100393be
100393b4:	mov    ecx,DWORD PTR [eax]
100393b6:	mov    edx,DWORD PTR [ecx]
100393b8:	push   eax
100393b9:	mov    eax,DWORD PTR [edx+0x4]
100393bc:	call   eax
100393be:	mov    eax,DWORD PTR [esp+0x18]
100393c2:	test   eax,eax
100393c4:	je     0x100393cd
100393c6:	push   eax
100393c7:	call   DWORD PTR ds:0x10067014
100393cd:	mov    al,0x1
100393cf:	mov    ecx,DWORD PTR [esp+0x40]
100393d3:	mov    DWORD PTR fs:0x0,ecx
100393da:	pop    ecx
100393db:	pop    edi
100393dc:	pop    esi
100393dd:	pop    ebx
100393de:	mov    esp,ebp
100393e0:	pop    ebp
100393e1:	ret    
100393e2:	push   0x80070057
100393e7:	call   0x10001f2d
100393ec:	add    edi,0xfffffff0
100393ef:	mov    BYTE PTR [esp+0x48],0x0
100393f4:	lea    ecx,[edi+0xc]
100393f7:	or     edx,0xffffffff
100393fa:	lock xadd DWORD PTR [ecx],edx
100393fe:	dec    edx
100393ff:	test   edx,edx
10039401:	jg     0x1003940d
10039403:	mov    ecx,DWORD PTR [edi]
10039405:	mov    eax,DWORD PTR [ecx]
10039407:	mov    edx,DWORD PTR [eax+0x4]
1003940a:	push   edi
1003940b:	call   edx
1003940d:	test   esi,esi
1003940f:	je     0x10039418
10039411:	push   esi
10039412:	call   DWORD PTR ds:0x10067014
10039418:	xor    al,al
1003941a:	mov    ecx,DWORD PTR [esp+0x40]
1003941e:	mov    DWORD PTR fs:0x0,ecx
10039425:	pop    ecx
10039426:	pop    edi
10039427:	pop    esi
10039428:	pop    ebx
10039429:	mov    esp,ebp
1003942b:	pop    ebp
1003942c:	ret    
1003942d:	int3   
1003942e:	int3   
1003942f:	int3   
10039430:	push   0xffffffff
10039432:	push   0x10060399
10039437:	mov    eax,fs:0x0
1003943d:	push   eax
1003943e:	sub    esp,0xc
10039441:	push   ebx
10039442:	push   ebp
10039443:	push   esi
10039444:	push   edi
10039445:	mov    eax,ds:0x100801ac
1003944a:	xor    eax,esp
1003944c:	push   eax
1003944d:	lea    eax,[esp+0x20]
10039451:	mov    fs:0x0,eax
10039457:	mov    esi,ecx
10039459:	xor    edi,edi
1003945b:	mov    DWORD PTR [esp+0x28],edi
1003945f:	mov    DWORD PTR [esp+0x14],edi
10039463:	mov    eax,DWORD PTR [esi]
10039465:	mov    ecx,DWORD PTR [eax-0x10]
10039468:	cmp    ecx,edi
1003946a:	je     0x10039477
1003946c:	mov    edx,DWORD PTR [ecx]
1003946e:	mov    eax,DWORD PTR [edx+0x10]
10039471:	call   eax
10039473:	cmp    eax,edi
10039475:	jne    0x10039487
10039477:	mov    edx,DWORD PTR ds:0x10082a6c
1003947d:	mov    eax,DWORD PTR [edx+0x10]
10039480:	mov    ecx,0x10082a6c
10039485:	call   eax
10039487:	xor    ecx,ecx
10039489:	cmp    eax,edi
1003948b:	setne  cl
1003948e:	cmp    ecx,edi
10039490:	jne    0x1003949c
10039492:	push   0x80004005
10039497:	call   0x10001f2d
1003949c:	mov    edx,DWORD PTR [eax]
1003949e:	mov    ecx,eax
100394a0:	mov    eax,DWORD PTR [edx+0xc]
100394a3:	call   eax
100394a5:	mov    edx,DWORD PTR [esp+0x30]
100394a9:	add    eax,0x10
100394ac:	mov    DWORD PTR [edx],eax
100394ae:	mov    ecx,DWORD PTR [esp+0x34]
100394b2:	mov    DWORD PTR [esp+0x28],edi
100394b6:	mov    ebx,DWORD PTR [ecx]
100394b8:	mov    ecx,DWORD PTR [esi]
100394ba:	mov    edi,DWORD PTR [ecx-0xc]
100394bd:	mov    ebp,DWORD PTR [ebx-0xc]
100394c0:	mov    DWORD PTR [esp+0x18],ecx
100394c4:	mov    ecx,0x1
100394c9:	sub    ecx,DWORD PTR [eax-0x4]
100394cc:	mov    eax,DWORD PTR [eax-0x8]
100394cf:	lea    esi,[edi+ebp*1]
100394d2:	sub    eax,esi
100394d4:	or     eax,ecx
100394d6:	mov    DWORD PTR [esp+0x14],0x1
100394de:	jge    0x100394ed
100394e0:	mov    eax,esi
100394e2:	mov    ecx,edx
100394e4:	call   0x10002253
100394e9:	mov    edx,DWORD PTR [esp+0x30]
100394ed:	mov    eax,DWORD PTR [esp+0x18]
100394f1:	mov    edx,DWORD PTR [edx]
100394f3:	add    edi,edi
100394f5:	push   edi
100394f6:	push   eax
100394f7:	push   edi
100394f8:	push   edx
100394f9:	mov    DWORD PTR [esp+0x2c],edx
100394fd:	call   0x100433cf
10039502:	mov    ecx,DWORD PTR [esp+0x2c]
10039506:	add    ebp,ebp
10039508:	push   ebp
10039509:	push   ebx
1003950a:	add    edi,ecx
1003950c:	push   ebp
1003950d:	push   edi
1003950e:	call   0x100433cf
10039513:	add    esp,0x20
10039516:	test   esi,esi
10039518:	jl     0x10039544
1003951a:	mov    eax,DWORD PTR [esp+0x30]
1003951e:	mov    ecx,DWORD PTR [eax]
10039520:	cmp    esi,DWORD PTR [ecx-0x8]
10039523:	jg     0x10039544
10039525:	mov    DWORD PTR [ecx-0xc],esi
10039528:	mov    edx,DWORD PTR [eax]
1003952a:	mov    WORD PTR [edx+esi*2],0x0
10039530:	mov    ecx,DWORD PTR [esp+0x20]
10039534:	mov    DWORD PTR fs:0x0,ecx
1003953b:	pop    ecx
1003953c:	pop    edi
1003953d:	pop    esi
1003953e:	pop    ebp
1003953f:	pop    ebx
10039540:	add    esp,0x18
10039543:	ret    
10039544:	push   0x80070057
10039549:	call   0x10001f2d
1003954e:	int3   
1003954f:	int3   
10039550:	sub    esp,0xc
10039553:	push   ebx
10039554:	push   ebp
10039555:	push   esi
10039556:	mov    esi,DWORD PTR [ecx]
10039558:	push   edi
10039559:	mov    edi,DWORD PTR [esp+0x20]
1003955d:	xor    ebx,ebx
1003955f:	cmp    edi,0x1
10039562:	jle    0x1003964e
10039568:	mov    eax,0x34
1003956d:	cdq    
1003956e:	idiv   edi
10039570:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
10039574:	add    eax,0x6
10039577:	test   eax,eax
10039579:	jle    0x10039644
1003957f:	nop
10039580:	sub    eax,0x1
10039583:	mov    DWORD PTR [esp+0x18],eax
10039587:	sub    ebx,0x61c88647
1003958d:	mov    eax,ebx
1003958f:	shr    eax,0x2
10039592:	and    eax,0x3
10039595:	mov    DWORD PTR [esp+0x10],eax
10039599:	lea    eax,[edi-0x1]
1003959c:	xor    edx,edx
1003959e:	test   eax,eax
100395a0:	mov    DWORD PTR [esp+0x14],ebx
100395a4:	jle    0x100395f9
100395a6:	mov    edi,DWORD PTR [ecx+edx*4+0x4]
100395aa:	mov    ebx,esi
100395ac:	shl    ebx,0x4
100395af:	mov    eax,edi
100395b1:	shr    eax,0x3
100395b4:	xor    eax,ebx
100395b6:	mov    ebx,esi
100395b8:	shr    ebx,0x5
100395bb:	lea    ebp,[edi*4+0x0]
100395c2:	xor    ebx,ebp
100395c4:	mov    ebp,DWORD PTR [esp+0x24]
100395c8:	add    eax,ebx
100395ca:	mov    ebx,edx
100395cc:	and    ebx,0x3
100395cf:	xor    ebx,DWORD PTR [esp+0x10]
100395d3:	add    edx,0x1
100395d6:	mov    ebx,DWORD PTR [ebp+ebx*4+0x0]
100395da:	xor    ebx,esi
100395dc:	mov    esi,DWORD PTR [esp+0x14]
100395e0:	xor    esi,edi
100395e2:	mov    edi,DWORD PTR [esp+0x20]
100395e6:	add    ebx,esi
100395e8:	xor    eax,ebx
100395ea:	add    DWORD PTR [ecx+edx*4-0x4],eax
100395ee:	mov    esi,DWORD PTR [ecx+edx*4-0x4]
100395f2:	lea    eax,[edi-0x1]
100395f5:	cmp    edx,eax
100395f7:	jl     0x100395a6
100395f9:	mov    eax,DWORD PTR [ecx]
100395fb:	mov    ebp,eax
100395fd:	shr    ebp,0x3
10039600:	mov    ebx,esi
10039602:	shl    ebx,0x4
10039605:	xor    ebp,ebx
10039607:	add    eax,eax
10039609:	add    eax,eax
1003960b:	mov    ebx,esi
1003960d:	and    edx,0x3
10039610:	xor    edx,DWORD PTR [esp+0x10]
10039614:	shr    ebx,0x5
10039617:	xor    ebx,eax
10039619:	mov    eax,DWORD PTR [esp+0x24]
1003961d:	mov    edx,DWORD PTR [eax+edx*4]
10039620:	add    ebp,ebx
10039622:	mov    ebx,DWORD PTR [esp+0x14]
10039626:	mov    eax,ebx
10039628:	xor    eax,DWORD PTR [ecx]
1003962a:	xor    edx,esi
1003962c:	add    edx,eax
1003962e:	mov    eax,DWORD PTR [esp+0x18]
10039632:	xor    ebp,edx
10039634:	add    DWORD PTR [ecx+edi*4-0x4],ebp
10039638:	test   eax,eax
1003963a:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
1003963e:	jg     0x10039580
10039644:	pop    edi
10039645:	pop    esi
10039646:	pop    ebp
10039647:	xor    eax,eax
10039649:	pop    ebx
1003964a:	add    esp,0xc
1003964d:	ret    
1003964e:	cmp    edi,0xffffffff
10039651:	jge    0x1003973e
10039657:	mov    eax,0x34
1003965c:	cdq    
1003965d:	neg    edi
1003965f:	idiv   edi
10039661:	mov    DWORD PTR [esp+0x20],edi
10039665:	add    eax,0x6
10039668:	imul   eax,eax,0x9e3779b9
1003966e:	test   eax,eax
10039670:	mov    DWORD PTR [esp+0x14],eax
10039674:	je     0x10039734
1003967a:	lea    ebx,[ebx+0x0]
10039680:	mov    edx,eax
10039682:	shr    edx,0x2
10039685:	and    edx,0x3
10039688:	mov    DWORD PTR [esp+0x10],edx
1003968c:	lea    edx,[edi-0x1]
1003968f:	test   edx,edx
10039691:	jle    0x100396e5
10039693:	mov    edi,DWORD PTR [ecx+edx*4-0x4]
10039697:	mov    eax,edi
10039699:	shl    eax,0x4
1003969c:	mov    ebx,esi
1003969e:	shr    ebx,0x3
100396a1:	xor    ebx,eax
100396a3:	mov    eax,edi
100396a5:	shr    eax,0x5
100396a8:	lea    ebp,[esi*4+0x0]
100396af:	xor    eax,ebp
100396b1:	mov    ebp,DWORD PTR [esp+0x24]
100396b5:	add    ebx,eax
100396b7:	mov    eax,edx
100396b9:	and    eax,0x3
100396bc:	xor    eax,DWORD PTR [esp+0x10]
100396c0:	sub    edx,0x1
100396c3:	mov    ebp,DWORD PTR [ebp+eax*4+0x0]
100396c7:	mov    eax,DWORD PTR [esp+0x14]
100396cb:	xor    ebp,edi
100396cd:	mov    edi,eax
100396cf:	xor    edi,esi
100396d1:	add    ebp,edi
100396d3:	xor    ebx,ebp
100396d5:	sub    DWORD PTR [ecx+edx*4+0x4],ebx
100396d9:	test   edx,edx
100396db:	mov    esi,DWORD PTR [ecx+edx*4+0x4]
100396df:	jg     0x10039693
100396e1:	mov    edi,DWORD PTR [esp+0x20]
100396e5:	mov    edi,DWORD PTR [ecx+edi*4-0x4]
100396e9:	mov    ebp,edi
100396eb:	shl    ebp,0x4
100396ee:	mov    ebx,esi
100396f0:	shr    ebx,0x3
100396f3:	xor    ebx,ebp
100396f5:	shr    edi,0x5
100396f8:	lea    ebp,[esi*4+0x0]
100396ff:	xor    edi,ebp
10039701:	and    edx,0x3
10039704:	xor    edx,DWORD PTR [esp+0x10]
10039708:	add    ebx,edi
1003970a:	mov    edi,DWORD PTR [esp+0x24]
1003970e:	mov    edx,DWORD PTR [edi+edx*4]
10039711:	mov    edi,DWORD PTR [esp+0x20]
10039715:	xor    edx,DWORD PTR [ecx+edi*4-0x4]
10039719:	mov    ebp,eax
1003971b:	xor    ebp,esi
1003971d:	add    edx,ebp
1003971f:	xor    ebx,edx
10039721:	sub    DWORD PTR [ecx],ebx
10039723:	mov    esi,DWORD PTR [ecx]
10039725:	add    eax,0x61c88647
1003972a:	mov    DWORD PTR [esp+0x14],eax
1003972e:	jne    0x10039680
10039734:	pop    edi
10039735:	pop    esi
10039736:	pop    ebp
10039737:	xor    eax,eax
10039739:	pop    ebx
1003973a:	add    esp,0xc
1003973d:	ret    
1003973e:	pop    edi
1003973f:	pop    esi
10039740:	pop    ebp
10039741:	mov    eax,0x1
10039746:	pop    ebx
10039747:	add    esp,0xc
1003974a:	ret    
1003974b:	int3   
1003974c:	int3   
1003974d:	int3   
1003974e:	int3   
1003974f:	int3   
10039750:	push   0xffffffff
10039752:	push   0x10060358
10039757:	mov    eax,fs:0x0
1003975d:	push   eax
1003975e:	sub    esp,0x2c
10039761:	mov    eax,ds:0x100801ac
10039766:	xor    eax,esp
10039768:	mov    DWORD PTR [esp+0x24],eax
1003976c:	push   ebx
1003976d:	push   ebp
1003976e:	push   esi
1003976f:	mov    eax,ds:0x100801ac
10039774:	xor    eax,esp
10039776:	push   eax
10039777:	lea    eax,[esp+0x3c]
1003977b:	mov    fs:0x0,eax
10039781:	mov    bl,cl
10039783:	mov    esi,DWORD PTR [esp+0x4c]
10039787:	mov    ebp,DWORD PTR [esp+0x54]
1003978b:	xor    eax,eax
1003978d:	mov    DWORD PTR [esp+0x14],eax
10039791:	mov    DWORD PTR [esp+0x1c],edx
10039795:	mov    DWORD PTR [esp+0x20],ebp
10039799:	mov    DWORD PTR [esp+0x14],eax
1003979d:	test   bl,bl
1003979f:	mov    DWORD PTR [esp+0x44],eax
100397a3:	je     0x100397e9
100397a5:	mov    DWORD PTR [esp+0x18],eax
100397a9:	mov    ecx,esi
100397ab:	lea    eax,[esp+0x18]
100397af:	lea    esi,[esp+0x1c]
100397b3:	call   0x1002f570
100397b8:	mov    ecx,DWORD PTR [eax]
100397ba:	mov    esi,ecx
100397bc:	test   esi,esi
100397be:	mov    DWORD PTR [eax],0x0
100397c4:	je     0x100397d0
100397c6:	push   0x0
100397c8:	call   0x10042fe2
100397cd:	add    esp,0x4
100397d0:	mov    edx,DWORD PTR [esp+0x1c]
100397d4:	push   edx
100397d5:	mov    DWORD PTR [esp+0x18],esi
100397d9:	call   0x10042fe2
100397de:	mov    DWORD PTR [esp+0x20],esi
100397e2:	mov    esi,DWORD PTR [esp+0x1c]
100397e6:	add    esp,0x4
100397e9:	lea    eax,[esi+0x3]
100397ec:	and    eax,0xfffffffc
100397ef:	add    eax,0x8
100397f2:	mov    DWORD PTR [esp+0x18],eax
100397f6:	add    eax,0x10
100397f9:	push   eax
100397fa:	mov    DWORD PTR [ebp+0x0],eax
100397fd:	call   0x100438d7
10039802:	add    esp,0x4
10039805:	mov    DWORD PTR [edi],eax
10039807:	call   DWORD PTR ds:0x1006713c
1003980d:	push   eax
1003980e:	call   0x10046532
10039813:	add    esp,0x4
10039816:	xor    ebp,ebp
10039818:	call   0x1004653f
1003981d:	cdq    
1003981e:	mov    ecx,0xff
10039823:	idiv   ecx
10039825:	add    ebp,0x1
10039828:	cmp    ebp,0x10
1003982b:	mov    BYTE PTR [esp+ebp*1+0x23],dl
1003982f:	jne    0x10039818
10039831:	mov    eax,DWORD PTR [edi]
10039833:	mov    edx,DWORD PTR [esp+0x24]
10039837:	mov    ecx,DWORD PTR [esp+0x28]
1003983b:	mov    DWORD PTR [eax],edx
1003983d:	mov    edx,DWORD PTR [esp+0x2c]
10039841:	mov    DWORD PTR [eax+0x4],ecx
10039844:	mov    ecx,DWORD PTR [esp+0x30]
10039848:	mov    DWORD PTR [eax+0x8],edx
1003984b:	mov    edx,DWORD PTR [esp+0x1c]
1003984f:	mov    DWORD PTR [eax+0xc],ecx
10039852:	add    eax,ebp
10039854:	neg    bl
10039856:	push   esi
10039857:	push   edx
10039858:	sbb    ebx,ebx
1003985a:	and    ebx,0xfffffbff
10039860:	add    ebx,0x4b4f5444
10039866:	mov    DWORD PTR [eax],ebx
10039868:	add    eax,0x4
1003986b:	push   eax
1003986c:	call   0x10045340
10039871:	mov    ecx,DWORD PTR [esp+0x2c]
10039875:	mov    edx,DWORD PTR [ecx]
10039877:	mov    eax,DWORD PTR [edi]
10039879:	lea    eax,[edx+eax*1-0x4]
1003987d:	mov    DWORD PTR [eax],esi
1003987f:	add    esp,0xc
10039882:	xor    eax,eax
10039884:	xor    ecx,ecx
10039886:	jmp    0x10039890
10039888:	lea    esp,[esp+0x0]
1003988f:	nop
10039890:	mov    edx,DWORD PTR [esp+0x50]
10039894:	mov    dl,BYTE PTR [ecx+edx*1]
10039897:	xor    BYTE PTR [esp+eax*1+0x24],dl
1003989b:	add    ecx,0x1
1003989e:	add    eax,0x1
100398a1:	and    ecx,0xf
100398a4:	cmp    eax,0x10
100398a7:	jne    0x10039890
100398a9:	mov    ecx,DWORD PTR [edi]
100398ab:	lea    eax,[esp+0x24]
100398af:	push   eax
100398b0:	mov    eax,DWORD PTR [esp+0x1c]
100398b4:	cdq    
100398b5:	and    edx,0x3
100398b8:	add    eax,edx
100398ba:	sar    eax,0x2
100398bd:	push   eax
100398be:	add    ecx,0x10
100398c1:	call   0x10039550
100398c6:	mov    ecx,DWORD PTR [esp+0x1c]
100398ca:	push   ecx
100398cb:	call   0x10042fe2
100398d0:	add    esp,0xc
100398d3:	mov    eax,edi
100398d5:	mov    ecx,DWORD PTR [esp+0x3c]
100398d9:	mov    DWORD PTR fs:0x0,ecx
100398e0:	pop    ecx
100398e1:	pop    esi
100398e2:	pop    ebp
100398e3:	pop    ebx
100398e4:	mov    ecx,DWORD PTR [esp+0x24]
100398e8:	xor    ecx,esp
100398ea:	call   0x10043615
100398ef:	add    esp,0x38
100398f2:	ret    
100398f3:	int3   
100398f4:	int3   
100398f5:	int3   
100398f6:	int3   
100398f7:	int3   
100398f8:	int3   
100398f9:	int3   
100398fa:	int3   
100398fb:	int3   
100398fc:	int3   
100398fd:	int3   
100398fe:	int3   
100398ff:	int3   
10039900:	push   0xffffffff
10039902:	push   0x100637a0
10039907:	mov    eax,fs:0x0
1003990d:	push   eax
1003990e:	sub    esp,0x30
10039911:	mov    eax,ds:0x100801ac
10039916:	xor    eax,esp
10039918:	mov    DWORD PTR [esp+0x28],eax
1003991c:	push   ebx
1003991d:	push   ebp
1003991e:	push   esi
1003991f:	push   edi
10039920:	mov    eax,ds:0x100801ac
10039925:	xor    eax,esp
10039927:	push   eax
10039928:	lea    eax,[esp+0x44]
1003992c:	mov    fs:0x0,eax
10039932:	mov    edi,DWORD PTR [esp+0x60]
10039936:	mov    eax,DWORD PTR [esp+0x5c]
1003993a:	mov    ebx,DWORD PTR [esp+0x54]
1003993e:	mov    esi,DWORD PTR [esp+0x58]
10039942:	xor    ebp,ebp
10039944:	mov    DWORD PTR [esp+0x20],ebp
10039948:	mov    DWORD PTR [esp+0x18],ebx
1003994c:	mov    DWORD PTR [esp+0x1c],ecx
10039950:	mov    DWORD PTR [esp+0x14],edx
10039954:	mov    DWORD PTR [esp+0x24],ebp
10039958:	cmp    eax,0x18
1003995b:	mov    DWORD PTR [esp+0x4c],ebp
1003995f:	jae    0x1003997f
10039961:	call   0x10002068
10039966:	push   0x6
10039968:	call   0x10038b80
1003996d:	add    esp,0x4
10039970:	push   ebp
10039971:	mov    DWORD PTR [ebx],ebp
10039973:	call   0x10042fe2
10039978:	mov    eax,ebx
1003997a:	jmp    0x10039c1b
1003997f:	lea    ebx,[eax-0x10]
10039982:	push   ebx
10039983:	call   0x100438d7
10039988:	mov    ebp,eax
1003998a:	add    esp,0x4
1003998d:	mov    DWORD PTR [esp+0x28],ebp
10039991:	push   ebx
10039992:	lea    eax,[esi+0x10]
10039995:	push   eax
10039996:	push   ebp
10039997:	mov    BYTE PTR [esp+0x58],0x1
1003999c:	call   0x10045340
100399a1:	mov    ecx,DWORD PTR [esi]
100399a3:	mov    eax,DWORD PTR [esi+0x8]
100399a6:	mov    edx,DWORD PTR [esi+0x4]
100399a9:	mov    DWORD PTR [esp+0x38],ecx
100399ad:	mov    ecx,DWORD PTR [esi+0xc]
100399b0:	mov    DWORD PTR [esp+0x40],eax
100399b4:	add    esp,0xc
100399b7:	mov    DWORD PTR [esp+0x38],ecx
100399bb:	xor    eax,eax
100399bd:	mov    DWORD PTR [esp+0x30],edx
100399c1:	xor    ecx,ecx
100399c3:	mov    dl,BYTE PTR [ecx+edi*1]
100399c6:	xor    BYTE PTR [esp+eax*1+0x2c],dl
100399ca:	add    ecx,0x1
100399cd:	add    eax,0x1
100399d0:	and    ecx,0xf
100399d3:	cmp    eax,0x10
100399d6:	jne    0x100399c3
100399d8:	lea    eax,[esp+0x2c]
100399dc:	push   eax
100399dd:	mov    eax,ebx
100399df:	cdq    
100399e0:	and    edx,0x3
100399e3:	add    eax,edx
100399e5:	sar    eax,0x2
100399e8:	neg    eax
100399ea:	push   eax
100399eb:	mov    ecx,ebp
100399ed:	call   0x10039550
100399f2:	mov    ecx,DWORD PTR [esp+0x1c]
100399f6:	mov    BYTE PTR [ecx],0x0
100399f9:	add    esp,0x8
100399fc:	mov    eax,0x4
10039a01:	mov    ecx,0x1008153c
10039a06:	mov    edx,ebp
10039a08:	mov    esi,DWORD PTR [edx]
10039a0a:	cmp    esi,DWORD PTR [ecx]
10039a0c:	jne    0x10039a20
10039a0e:	sub    eax,0x4
10039a11:	add    ecx,0x4
10039a14:	add    edx,0x4
10039a17:	cmp    eax,0x4
10039a1a:	jae    0x10039a08
10039a1c:	test   eax,eax
10039a1e:	je     0x10039a7d
10039a20:	movzx  edi,BYTE PTR [ecx]
10039a23:	movzx  esi,BYTE PTR [edx]
10039a26:	sub    esi,edi
10039a28:	jne    0x10039a6f
10039a2a:	sub    eax,0x1
10039a2d:	add    ecx,0x1
10039a30:	add    edx,0x1
10039a33:	test   eax,eax
10039a35:	je     0x10039a7d
10039a37:	movzx  edi,BYTE PTR [ecx]
10039a3a:	movzx  esi,BYTE PTR [edx]
10039a3d:	sub    esi,edi
10039a3f:	jne    0x10039a6f
10039a41:	sub    eax,0x1
10039a44:	add    ecx,0x1
10039a47:	add    edx,0x1
10039a4a:	test   eax,eax
10039a4c:	je     0x10039a7d
10039a4e:	movzx  edi,BYTE PTR [ecx]
10039a51:	movzx  esi,BYTE PTR [edx]
10039a54:	sub    esi,edi
10039a56:	jne    0x10039a6f
10039a58:	sub    eax,0x1
10039a5b:	add    ecx,0x1
10039a5e:	add    edx,0x1
10039a61:	test   eax,eax
10039a63:	je     0x10039a7d
10039a65:	movzx  eax,BYTE PTR [ecx]
10039a68:	movzx  esi,BYTE PTR [edx]
10039a6b:	sub    esi,eax
10039a6d:	je     0x10039a7d
10039a6f:	test   esi,esi
10039a71:	mov    eax,0x1
10039a76:	jg     0x10039a7f
10039a78:	or     eax,0xffffffff
10039a7b:	jmp    0x10039a7f
10039a7d:	xor    eax,eax
10039a7f:	test   eax,eax
10039a81:	jne    0x10039a8f
10039a83:	mov    ecx,DWORD PTR [esp+0x14]
10039a87:	mov    BYTE PTR [ecx],0x1
10039a8a:	jmp    0x10039b1f
10039a8f:	mov    eax,0x4
10039a94:	mov    ecx,0x10081538
10039a99:	mov    edx,ebp
10039a9b:	jmp    0x10039aa0
10039a9d:	lea    ecx,[ecx+0x0]
10039aa0:	mov    esi,DWORD PTR [edx]
10039aa2:	cmp    esi,DWORD PTR [ecx]
10039aa4:	jne    0x10039ab8
10039aa6:	sub    eax,0x4
10039aa9:	add    ecx,0x4
10039aac:	add    edx,0x4
10039aaf:	cmp    eax,0x4
10039ab2:	jae    0x10039aa0
10039ab4:	test   eax,eax
10039ab6:	je     0x10039b15
10039ab8:	movzx  esi,BYTE PTR [edx]
10039abb:	movzx  edi,BYTE PTR [ecx]
10039abe:	sub    esi,edi
10039ac0:	jne    0x10039b07
10039ac2:	sub    eax,0x1
10039ac5:	add    ecx,0x1
10039ac8:	add    edx,0x1
10039acb:	test   eax,eax
10039acd:	je     0x10039b15
10039acf:	movzx  esi,BYTE PTR [edx]
10039ad2:	movzx  edi,BYTE PTR [ecx]
10039ad5:	sub    esi,edi
10039ad7:	jne    0x10039b07
10039ad9:	sub    eax,0x1
10039adc:	add    ecx,0x1
10039adf:	add    edx,0x1
10039ae2:	test   eax,eax
10039ae4:	je     0x10039b15
10039ae6:	movzx  esi,BYTE PTR [edx]
10039ae9:	movzx  edi,BYTE PTR [ecx]
10039aec:	sub    esi,edi
10039aee:	jne    0x10039b07
10039af0:	sub    eax,0x1
10039af3:	add    ecx,0x1
10039af6:	add    edx,0x1
10039af9:	test   eax,eax
10039afb:	je     0x10039b15
10039afd:	movzx  esi,BYTE PTR [edx]
10039b00:	movzx  edx,BYTE PTR [ecx]
10039b03:	sub    esi,edx
10039b05:	je     0x10039b15
10039b07:	test   esi,esi
10039b09:	mov    eax,0x1
10039b0e:	jg     0x10039b17
10039b10:	or     eax,0xffffffff
10039b13:	jmp    0x10039b17
10039b15:	xor    eax,eax
10039b17:	test   eax,eax
10039b19:	jne    0x10039bf0
10039b1f:	cmp    BYTE PTR [esp+0x64],0x0
10039b24:	mov    eax,DWORD PTR [ebx+ebp*1-0x4]
10039b28:	mov    edi,DWORD PTR [esp+0x1c]
10039b2c:	mov    DWORD PTR [edi],eax
10039b2e:	jne    0x10039b35
10039b30:	add    eax,0xfffffffc
10039b33:	mov    DWORD PTR [edi],eax
10039b35:	mov    eax,DWORD PTR [edi]
10039b37:	lea    ecx,[ebx-0x8]
10039b3a:	cmp    eax,ecx
10039b3c:	ja     0x10039bf0
10039b42:	add    ebx,0xfffffff5
10039b45:	cmp    eax,ebx
10039b47:	jb     0x10039bf0
10039b4d:	push   eax
10039b4e:	call   0x100438d7
10039b53:	mov    esi,eax
10039b55:	add    esp,0x4
10039b58:	test   esi,esi
10039b5a:	je     0x10039b66
10039b5c:	push   0x0
10039b5e:	call   0x10042fe2
10039b63:	add    esp,0x4
10039b66:	mov    edx,DWORD PTR [edi]
10039b68:	push   edx
10039b69:	lea    eax,[ebp+0x4]
10039b6c:	push   eax
10039b6d:	push   esi
10039b6e:	mov    DWORD PTR [esp+0x30],esi
10039b72:	call   0x10045340
10039b77:	mov    ecx,DWORD PTR [esp+0x20]
10039b7b:	add    esp,0xc
10039b7e:	cmp    BYTE PTR [ecx],0x0
10039b81:	je     0x10039bd6
10039b83:	mov    eax,DWORD PTR [edi]
10039b85:	lea    edx,[esp+0x14]
10039b89:	push   edx
10039b8a:	push   eax
10039b8b:	lea    ecx,[esp+0x28]
10039b8f:	push   esi
10039b90:	push   ecx
10039b91:	mov    DWORD PTR [esp+0x24],0x0
10039b99:	call   0x1002f1a0
10039b9e:	mov    edi,DWORD PTR [eax]
10039ba0:	mov    DWORD PTR [eax],0x0
10039ba6:	mov    edx,DWORD PTR [esp+0x30]
10039baa:	push   edx
10039bab:	call   0x10042fe2
10039bb0:	add    esp,0x14
10039bb3:	cmp    edi,esi
10039bb5:	je     0x10039bc0
10039bb7:	push   esi
10039bb8:	call   0x10042fe2
10039bbd:	add    esp,0x4
10039bc0:	mov    eax,DWORD PTR [esp+0x14]
10039bc4:	mov    ecx,DWORD PTR [esp+0x1c]
10039bc8:	push   0x0
10039bca:	mov    esi,edi
10039bcc:	mov    DWORD PTR [ecx],eax
10039bce:	call   0x10042fe2
10039bd3:	add    esp,0x4
10039bd6:	mov    edi,DWORD PTR [esp+0x18]
10039bda:	push   ebp
10039bdb:	mov    DWORD PTR [edi],esi
10039bdd:	call   0x10042fe2
10039be2:	add    esp,0x4
10039be5:	push   0x0
10039be7:	call   0x10042fe2
10039bec:	mov    eax,edi
10039bee:	jmp    0x10039c1b
10039bf0:	call   0x10002068
10039bf5:	push   0x6
10039bf7:	call   0x10038b80
10039bfc:	mov    esi,DWORD PTR [esp+0x1c]
10039c00:	add    esp,0x4
10039c03:	push   ebp
10039c04:	mov    DWORD PTR [esi],0x0
10039c0a:	call   0x10042fe2
10039c0f:	add    esp,0x4
10039c12:	push   0x0
10039c14:	call   0x10042fe2
10039c19:	mov    eax,esi
10039c1b:	add    esp,0x4
10039c1e:	mov    ecx,DWORD PTR [esp+0x44]
10039c22:	mov    DWORD PTR fs:0x0,ecx
10039c29:	pop    ecx
10039c2a:	pop    edi
10039c2b:	pop    esi
10039c2c:	pop    ebp
10039c2d:	pop    ebx
10039c2e:	mov    ecx,DWORD PTR [esp+0x28]
10039c32:	xor    ecx,esp
10039c34:	call   0x10043615
10039c39:	add    esp,0x3c
10039c3c:	ret    
10039c3d:	int3   
10039c3e:	int3   
10039c3f:	int3   
10039c40:	push   0xffffffff
10039c42:	push   0x100617f9
10039c47:	mov    eax,fs:0x0
10039c4d:	push   eax
10039c4e:	sub    esp,0x18
10039c51:	mov    eax,ds:0x100801ac
10039c56:	xor    eax,esp
10039c58:	mov    DWORD PTR [esp+0x14],eax
10039c5c:	push   ebp
10039c5d:	push   esi
10039c5e:	mov    eax,ds:0x100801ac
10039c63:	xor    eax,esp
10039c65:	push   eax
10039c66:	lea    eax,[esp+0x24]
10039c6a:	mov    fs:0x0,eax
10039c70:	mov    ebp,DWORD PTR [esp+0x34]
10039c74:	xor    eax,eax
10039c76:	mov    DWORD PTR [esp+0xc],eax
10039c7a:	mov    DWORD PTR [edi+0x18],0xf
10039c81:	mov    DWORD PTR [edi+0x14],eax
10039c84:	mov    DWORD PTR [esp+0x10],edi
10039c88:	mov    BYTE PTR [edi+0x4],al
10039c8b:	xor    esi,esi
10039c8d:	cmp    ebx,eax
10039c8f:	mov    DWORD PTR [esp+0x2c],eax
10039c93:	mov    DWORD PTR [esp+0xc],0x1
10039c9b:	je     0x10039ce5
10039c9d:	lea    ecx,[ecx+0x0]
10039ca0:	movzx  eax,BYTE PTR [esi+ebp*1]
10039ca4:	push   eax
10039ca5:	push   0x10075724
10039caa:	push   0x4
10039cac:	mov    ecx,0x1007574c
10039cb1:	call   0x100042b4
10039cb6:	add    esp,0x8
10039cb9:	push   eax
10039cba:	lea    ecx,[esp+0x1c]
10039cbe:	push   ecx
10039cbf:	call   0x10058a6f
10039cc4:	lea    edx,[esp+0x20]
10039cc8:	push   edx
10039cc9:	call   0x10043450
10039cce:	add    esp,0x10
10039cd1:	push   eax
10039cd2:	lea    eax,[esp+0x18]
10039cd6:	push   eax
10039cd7:	mov    eax,edi
10039cd9:	call   0x10004d62
10039cde:	add    esi,0x1
10039ce1:	cmp    esi,ebx
10039ce3:	jne    0x10039ca0
10039ce5:	mov    eax,edi
10039ce7:	mov    ecx,DWORD PTR [esp+0x24]
10039ceb:	mov    DWORD PTR fs:0x0,ecx
10039cf2:	pop    ecx
10039cf3:	pop    esi
10039cf4:	pop    ebp
10039cf5:	mov    ecx,DWORD PTR [esp+0x14]
10039cf9:	xor    ecx,esp
10039cfb:	call   0x10043615
10039d00:	add    esp,0x24
10039d03:	ret    
10039d04:	int3   
10039d05:	int3   
10039d06:	int3   
10039d07:	int3   
10039d08:	int3   
10039d09:	int3   
10039d0a:	int3   
10039d0b:	int3   
10039d0c:	int3   
10039d0d:	int3   
10039d0e:	int3   
10039d0f:	int3   
10039d10:	push   0xffffffff
10039d12:	push   0x1005fb98
10039d17:	mov    eax,fs:0x0
10039d1d:	push   eax
10039d1e:	sub    esp,0xc
10039d21:	push   ebx
10039d22:	push   ebp
10039d23:	push   esi
10039d24:	push   edi
10039d25:	mov    eax,ds:0x100801ac
10039d2a:	xor    eax,esp
10039d2c:	push   eax
10039d2d:	lea    eax,[esp+0x20]
10039d31:	mov    fs:0x0,eax
10039d37:	mov    ebx,DWORD PTR [esp+0x38]
10039d3b:	xor    edi,edi
10039d3d:	mov    DWORD PTR [esp+0x1c],edi
10039d41:	mov    DWORD PTR [ebx],edi
10039d43:	mov    DWORD PTR [esp+0x1c],edi
10039d47:	mov    esi,DWORD PTR [esp+0x34]
10039d4b:	mov    DWORD PTR [esp+0x28],edi
10039d4f:	mov    eax,DWORD PTR [esi+0x14]
10039d52:	test   al,0x1
10039d54:	je     0x10039d5e
10039d56:	mov    esi,DWORD PTR [esp+0x30]
10039d5a:	mov    DWORD PTR [esi],edi
10039d5c:	jmp    0x10039d92
10039d5e:	shr    eax,1
10039d60:	mov    DWORD PTR [ebx],eax
10039d62:	je     0x10039d56
10039d64:	push   eax
10039d65:	call   0x100438d7
10039d6a:	add    esp,0x4
10039d6d:	cmp    eax,edi
10039d6f:	mov    DWORD PTR [esp+0x1c],eax
10039d73:	je     0x10039d7e
10039d75:	push   edi
10039d76:	call   0x10042fe2
10039d7b:	add    esp,0x4
10039d7e:	xor    ebp,ebp
10039d80:	cmp    DWORD PTR [ebx],edi
10039d82:	mov    DWORD PTR [esp+0x18],edi
10039d86:	jne    0x10039db9
10039d88:	mov    esi,DWORD PTR [esp+0x30]
10039d8c:	mov    eax,DWORD PTR [esp+0x1c]
10039d90:	mov    DWORD PTR [esi],eax
10039d92:	push   edi
10039d93:	call   0x10042fe2
10039d98:	mov    eax,esi
10039d9a:	add    esp,0x4
10039d9d:	mov    ecx,DWORD PTR [esp+0x20]
10039da1:	mov    DWORD PTR fs:0x0,ecx
10039da8:	pop    ecx
10039da9:	pop    edi
10039daa:	pop    esi
10039dab:	pop    ebp
10039dac:	pop    ebx
10039dad:	add    esp,0x18
10039db0:	ret    
10039db1:	mov    esi,DWORD PTR [esp+0x34]
10039db5:	mov    edi,DWORD PTR [esp+0x18]
10039db9:	cmp    edi,DWORD PTR [esi+0x14]
10039dbc:	jbe    0x10039dc3
10039dbe:	call   0x10043605
10039dc3:	cmp    DWORD PTR [esi+0x18],0x10
10039dc7:	jb     0x10039dd1
10039dc9:	mov    eax,DWORD PTR [esi+0x4]
10039dcc:	add    esi,0x4
10039dcf:	jmp    0x10039dd6
10039dd1:	add    esi,0x4
10039dd4:	mov    eax,esi
10039dd6:	mov    bl,BYTE PTR [eax+edi*1]
10039dd9:	mov    eax,DWORD PTR [esp+0x34]
10039ddd:	add    edi,0x1
10039de0:	cmp    edi,DWORD PTR [eax+0x14]
10039de3:	jbe    0x10039dea
10039de5:	call   0x10043605
10039dea:	mov    ecx,DWORD PTR [esp+0x34]
10039dee:	cmp    DWORD PTR [ecx+0x18],0x10
10039df2:	jb     0x10039df6
10039df4:	mov    esi,DWORD PTR [esi]
10039df6:	mov    dl,BYTE PTR [edi+esi*1]
10039df9:	movzx  eax,bl
10039dfc:	push   eax
10039dfd:	mov    BYTE PTR [esp+0x1b],dl
10039e01:	call   0x1004f5ec
10039e06:	add    esp,0x4
10039e09:	test   eax,eax
10039e0b:	je     0x10039e92
10039e11:	movzx  ecx,BYTE PTR [esp+0x17]
10039e16:	push   ecx
10039e17:	call   0x1004f5ec
10039e1c:	add    esp,0x4
10039e1f:	test   eax,eax
10039e21:	je     0x10039e92
10039e23:	mov    dl,bl
10039e25:	sub    dl,0x30
10039e28:	cmp    dl,0x9
10039e2b:	ja     0x10039e35
10039e2d:	movsx  ebx,bl
10039e30:	sub    ebx,0x30
10039e33:	jmp    0x10039e46
10039e35:	movsx  eax,bl
10039e38:	push   eax
10039e39:	call   0x1005876f
10039e3e:	mov    ebx,eax
10039e40:	add    esp,0x4
10039e43:	sub    ebx,0x37
10039e46:	mov    al,BYTE PTR [esp+0x17]
10039e4a:	mov    cl,al
10039e4c:	sub    cl,0x30
10039e4f:	cmp    cl,0x9
10039e52:	ja     0x10039e5c
10039e54:	movsx  eax,al
10039e57:	sub    eax,0x30
10039e5a:	jmp    0x10039e6b
10039e5c:	movsx  edx,al
10039e5f:	push   edx
10039e60:	call   0x1005876f
10039e65:	add    esp,0x4
10039e68:	sub    eax,0x37
10039e6b:	mov    ecx,DWORD PTR [esp+0x38]
10039e6f:	add    DWORD PTR [esp+0x18],0x2
10039e74:	shl    bl,0x4
10039e77:	add    bl,al
10039e79:	mov    eax,DWORD PTR [esp+0x1c]
10039e7d:	mov    BYTE PTR [eax+ebp*1],bl
10039e80:	add    ebp,0x1
10039e83:	cmp    ebp,DWORD PTR [ecx]
10039e85:	jne    0x10039db1
10039e8b:	xor    edi,edi
10039e8d:	jmp    0x10039d88
10039e92:	mov    eax,DWORD PTR [esp+0x1c]
10039e96:	test   eax,eax
10039e98:	mov    edx,DWORD PTR [esp+0x38]
10039e9c:	mov    DWORD PTR [edx],0x0
10039ea2:	je     0x10039ead
10039ea4:	push   eax
10039ea5:	call   0x10042fe2
10039eaa:	add    esp,0x4
10039ead:	mov    esi,DWORD PTR [esp+0x30]
10039eb1:	mov    DWORD PTR [esi],0x0
10039eb7:	push   0x0
10039eb9:	jmp    0x10039d93
10039ebe:	int3   
10039ebf:	int3   
10039ec0:	push   0xffffffff
10039ec2:	push   0x10062a50
10039ec7:	mov    eax,fs:0x0
10039ecd:	push   eax
10039ece:	sub    esp,0x10
10039ed1:	push   ebx
10039ed2:	push   ebp
10039ed3:	push   esi
10039ed4:	push   edi
10039ed5:	mov    eax,ds:0x100801ac
10039eda:	xor    eax,esp
10039edc:	push   eax
10039edd:	lea    eax,[esp+0x24]
10039ee1:	mov    fs:0x0,eax
10039ee7:	mov    ebx,ecx
10039ee9:	mov    DWORD PTR [esp+0x18],0x0
10039ef1:	mov    edi,DWORD PTR [ebx+0x14]
10039ef4:	lea    ebp,[edi+0x4]
10039ef7:	push   ebp
10039ef8:	call   0x100438d7
10039efd:	mov    esi,eax
10039eff:	add    esp,0x4
10039f02:	mov    DWORD PTR [esp+0x1c],esi
10039f06:	mov    DWORD PTR [esp+0x2c],0x0
10039f0e:	mov    DWORD PTR [esi],edi
10039f10:	cmp    DWORD PTR [ebx+0x18],0x10
10039f14:	jb     0x10039f1b
10039f16:	mov    ebx,DWORD PTR [ebx+0x4]
10039f19:	jmp    0x10039f1e
10039f1b:	add    ebx,0x4
10039f1e:	push   edi
10039f1f:	lea    eax,[esi+0x4]
10039f22:	push   ebx
10039f23:	push   eax
10039f24:	call   0x10045340
10039f29:	mov    edx,DWORD PTR [esp+0x44]
10039f2d:	add    esp,0xc
10039f30:	lea    ecx,[esp+0x18]
10039f34:	push   ecx
10039f35:	mov    cl,BYTE PTR [esp+0x40]
10039f39:	push   edx
10039f3a:	push   ebp
10039f3b:	mov    edx,esi
10039f3d:	lea    edi,[esp+0x20]
10039f41:	call   0x10039750
10039f46:	mov    ecx,DWORD PTR [eax]
10039f48:	mov    ebp,ecx
10039f4a:	add    esp,0xc
10039f4d:	mov    DWORD PTR [eax],0x0
10039f53:	mov    DWORD PTR [esp+0x20],ebp
10039f57:	mov    BYTE PTR [esp+0x2c],0x1
10039f5c:	mov    edx,DWORD PTR [esp+0x14]
10039f60:	push   edx
10039f61:	call   0x10042fe2
10039f66:	mov    edi,DWORD PTR [esp+0x38]
10039f6a:	add    esp,0x4
10039f6d:	test   ebp,ebp
10039f6f:	jne    0x10039f9c
10039f71:	mov    DWORD PTR [edi+0x18],0xf
10039f78:	mov    DWORD PTR [edi+0x14],ebp
10039f7b:	push   0x1006dd18
10039f80:	mov    BYTE PTR [edi+0x4],0x0
10039f84:	call   0x10043450
10039f89:	add    esp,0x4
10039f8c:	push   eax
10039f8d:	push   0x1006dd18
10039f92:	mov    ecx,edi
10039f94:	call   0x1000133b
10039f99:	push   ebp
10039f9a:	jmp    0x10039faa
10039f9c:	mov    ebx,DWORD PTR [esp+0x18]
10039fa0:	push   ebp
10039fa1:	call   0x10039c40
10039fa6:	add    esp,0x4
10039fa9:	push   ebp
10039faa:	call   0x10042fe2
10039faf:	add    esp,0x4
10039fb2:	push   esi
10039fb3:	call   0x10042fe2
10039fb8:	mov    eax,edi
10039fba:	add    esp,0x4
10039fbd:	mov    ecx,DWORD PTR [esp+0x24]
10039fc1:	mov    DWORD PTR fs:0x0,ecx
10039fc8:	pop    ecx
10039fc9:	pop    edi
10039fca:	pop    esi
10039fcb:	pop    ebp
10039fcc:	pop    ebx
10039fcd:	add    esp,0x1c
10039fd0:	ret    
10039fd1:	int3   
10039fd2:	int3   
10039fd3:	int3   
10039fd4:	int3   
10039fd5:	int3   
10039fd6:	int3   
10039fd7:	int3   
10039fd8:	int3   
10039fd9:	int3   
10039fda:	int3   
10039fdb:	int3   
10039fdc:	int3   
10039fdd:	int3   
10039fde:	int3   
10039fdf:	int3   
10039fe0:	mov    ecx,DWORD PTR [eax]
10039fe2:	push   ecx
10039fe3:	call   DWORD PTR ds:0x100670fc
10039fe9:	ret    
10039fea:	int3   
10039feb:	int3   
10039fec:	int3   
10039fed:	int3   
10039fee:	int3   
10039fef:	int3   
10039ff0:	push   edi
10039ff1:	push   0xffffffff
10039ff3:	push   0x0
10039ff5:	push   eax
10039ff6:	mov    edi,ecx
10039ff8:	call   0x10001241
10039ffd:	test   esi,esi
10039fff:	jne    0x1003a01a
1003a001:	mov    ecx,DWORD PTR ds:0x10083014
1003a007:	mov    DWORD PTR [edi+0x1c],ecx
1003a00a:	mov    edx,DWORD PTR ds:0x10083018
1003a010:	mov    DWORD PTR [edi+0x20],edx
1003a013:	mov    eax,ds:0x1008301c
1003a018:	jmp    0x1003a028
1003a01a:	mov    ecx,DWORD PTR [esi]
1003a01c:	mov    DWORD PTR [edi+0x1c],ecx
1003a01f:	mov    edx,DWORD PTR [esi+0x4]
1003a022:	mov    DWORD PTR [edi+0x20],edx
1003a025:	mov    eax,DWORD PTR [esi+0x8]
1003a028:	push   0x0
1003a02a:	mov    DWORD PTR [edi+0x24],eax
1003a02d:	mov    DWORD PTR [edi+0x30],0x1008172c
1003a034:	mov    DWORD PTR [edi+0x28],0x0
1003a03b:	mov    DWORD PTR [edi+0x2c],0x0
1003a042:	call   0x1003a140
1003a047:	test   eax,eax
1003a049:	mov    DWORD PTR [edi+0x2c],eax
1003a04c:	je     0x1003a058
1003a04e:	push   0x2
1003a050:	call   0x1003a140
1003a055:	mov    DWORD PTR [edi+0x28],eax
1003a058:	pop    edi
1003a059:	ret    
1003a05a:	int3   
1003a05b:	int3   
1003a05c:	int3   
1003a05d:	int3   
1003a05e:	int3   
1003a05f:	int3   
1003a060:	push   esi
1003a061:	mov    esi,eax
1003a063:	mov    eax,DWORD PTR [esi+0x28]
1003a066:	test   eax,eax
1003a068:	je     0x1003a074
1003a06a:	push   eax
1003a06b:	call   DWORD PTR ds:0x1008150c
1003a071:	add    esp,0x4
1003a074:	mov    eax,DWORD PTR [esi+0x2c]
1003a077:	test   eax,eax
1003a079:	je     0x1003a085
1003a07b:	push   eax
1003a07c:	call   DWORD PTR ds:0x1008150c
1003a082:	add    esp,0x4
1003a085:	mov    esi,DWORD PTR [esi+0x30]
1003a088:	cmp    esi,0x1008172c
1003a08e:	je     0x1003a0c1
1003a090:	test   esi,esi
1003a092:	je     0x1003a0c1
1003a094:	cmp    DWORD PTR [esi+0x18],0x10
1003a098:	jb     0x1003a0a6
1003a09a:	mov    eax,DWORD PTR [esi+0x4]
1003a09d:	push   eax
1003a09e:	call   0x10042fe2
1003a0a3:	add    esp,0x4
1003a0a6:	mov    DWORD PTR [esi+0x18],0xf
1003a0ad:	mov    DWORD PTR [esi+0x14],0x0
1003a0b4:	push   esi
1003a0b5:	mov    BYTE PTR [esi+0x4],0x0
1003a0b9:	call   0x10042fe2
1003a0be:	add    esp,0x4
1003a0c1:	pop    esi
1003a0c2:	ret    
1003a0c3:	int3   
1003a0c4:	int3   
1003a0c5:	int3   
1003a0c6:	int3   
1003a0c7:	int3   
1003a0c8:	int3   
1003a0c9:	int3   
1003a0ca:	int3   
1003a0cb:	int3   
1003a0cc:	int3   
1003a0cd:	int3   
1003a0ce:	int3   
1003a0cf:	int3   
1003a0d0:	push   0xffffffff
1003a0d2:	push   0x10060328
1003a0d7:	mov    eax,fs:0x0
1003a0dd:	push   eax
1003a0de:	push   esi
1003a0df:	mov    eax,ds:0x100801ac
1003a0e4:	xor    eax,esp
1003a0e6:	push   eax
1003a0e7:	lea    eax,[esp+0x8]
1003a0eb:	mov    fs:0x0,eax
1003a0f1:	mov    esi,DWORD PTR [esp+0x18]
1003a0f5:	mov    eax,esi
1003a0f7:	mov    DWORD PTR [esp+0x10],0x0
1003a0ff:	call   0x1003a060
1003a104:	cmp    DWORD PTR [esi+0x18],0x10
1003a108:	jb     0x1003a116
1003a10a:	mov    eax,DWORD PTR [esi+0x4]
1003a10d:	push   eax
1003a10e:	call   0x10042fe2
1003a113:	add    esp,0x4
1003a116:	mov    DWORD PTR [esi+0x18],0xf
1003a11d:	mov    DWORD PTR [esi+0x14],0x0
1003a124:	mov    BYTE PTR [esi+0x4],0x0
1003a128:	mov    ecx,DWORD PTR [esp+0x8]
1003a12c:	mov    DWORD PTR fs:0x0,ecx
1003a133:	pop    ecx
1003a134:	pop    esi
1003a135:	add    esp,0xc
1003a138:	ret    0x4
1003a13b:	int3   
1003a13c:	int3   
1003a13d:	int3   
1003a13e:	int3   
1003a13f:	int3   
1003a140:	push   0xffffffff
1003a142:	push   0x10060d33
1003a147:	mov    eax,fs:0x0
1003a14d:	push   eax
1003a14e:	sub    esp,0x2c
1003a151:	mov    eax,ds:0x100801ac
1003a156:	xor    eax,esp
1003a158:	mov    DWORD PTR [esp+0x28],eax
1003a15c:	push   ebx
1003a15d:	push   ebp
1003a15e:	push   esi
1003a15f:	mov    eax,ds:0x100801ac
1003a164:	xor    eax,esp
1003a166:	push   eax
1003a167:	lea    eax,[esp+0x3c]
1003a16b:	mov    fs:0x0,eax
1003a171:	mov    ebp,DWORD PTR [edi+0x24]
1003a174:	xor    ebx,ebx
1003a176:	cmp    DWORD PTR [esp+0x4c],0x2
1003a17b:	je     0x1003a1a4
1003a17d:	cmp    DWORD PTR [edi+0x18],0x10
1003a181:	jb     0x1003a188
1003a183:	mov    edx,DWORD PTR [edi+0x4]
1003a186:	jmp    0x1003a18b
1003a188:	lea    edx,[edi+0x4]
1003a18b:	lea    eax,[esp+0x14]
1003a18f:	push   eax
1003a190:	push   ebp
1003a191:	lea    ecx,[esp+0x20]
1003a195:	call   0x10042640
1003a19a:	add    esp,0x8
1003a19d:	mov    ebp,eax
1003a19f:	jmp    0x1003a23e
1003a1a4:	push   0x10075874
1003a1a9:	mov    DWORD PTR [esp+0x38],0xf
1003a1b1:	mov    DWORD PTR [esp+0x34],ebx
1003a1b5:	mov    BYTE PTR [esp+0x24],bl
1003a1b9:	call   0x10043450
1003a1be:	add    esp,0x4
1003a1c1:	push   eax
1003a1c2:	push   0x10075874
1003a1c7:	lea    ecx,[esp+0x24]
1003a1cb:	call   0x1000133b
1003a1d0:	push   0xffffffff
1003a1d2:	push   ebx
1003a1d3:	mov    eax,edi
1003a1d5:	lea    esi,[esp+0x24]
1003a1d9:	mov    DWORD PTR [esp+0x4c],ebx
1003a1dd:	call   0x10004cbe
1003a1e2:	push   0x10075878
1003a1e7:	call   0x10043450
1003a1ec:	add    esp,0x4
1003a1ef:	push   eax
1003a1f0:	push   0x10075878
1003a1f5:	mov    eax,esi
1003a1f7:	call   0x10004d62
1003a1fc:	mov    edx,DWORD PTR [esp+0x20]
1003a200:	mov    esi,0x10
1003a205:	cmp    DWORD PTR [esp+0x34],esi
1003a209:	jae    0x1003a20f
1003a20b:	lea    edx,[esp+0x20]
1003a20f:	lea    ecx,[esp+0x14]
1003a213:	push   ecx
1003a214:	push   ebp
1003a215:	lea    ecx,[esp+0x20]
1003a219:	call   0x10042640
1003a21e:	add    esp,0x8
1003a221:	mov    DWORD PTR [esp+0x44],0xffffffff
1003a229:	cmp    DWORD PTR [esp+0x34],esi
1003a22d:	mov    ebp,eax
1003a22f:	jb     0x1003a23e
1003a231:	mov    edx,DWORD PTR [esp+0x20]
1003a235:	push   edx
1003a236:	call   0x10042fe2
1003a23b:	add    esp,0x4
1003a23e:	cmp    ebp,ebx
1003a240:	jne    0x1003a291
1003a242:	cmp    DWORD PTR [edi+0x30],0x1008172c
1003a249:	jne    0x1003a291
1003a24b:	push   0x1c
1003a24d:	call   0x10043196
1003a252:	mov    esi,eax
1003a254:	add    esp,0x4
1003a257:	mov    DWORD PTR [esp+0x14],esi
1003a25b:	cmp    esi,ebx
1003a25d:	mov    DWORD PTR [esp+0x44],0x1
1003a265:	je     0x1003a28c
1003a267:	mov    DWORD PTR [esi+0x14],ebx
1003a26a:	mov    DWORD PTR [esi+0x18],0xf
1003a271:	mov    BYTE PTR [esi+0x4],bl
1003a274:	mov    ebx,DWORD PTR [esp+0x18]
1003a278:	push   ebx
1003a279:	call   0x10043450
1003a27e:	add    esp,0x4
1003a281:	push   eax
1003a282:	push   ebx
1003a283:	mov    ecx,esi
1003a285:	call   0x1000133b
1003a28a:	jmp    0x1003a28e
1003a28c:	xor    esi,esi
1003a28e:	mov    DWORD PTR [edi+0x30],esi
1003a291:	mov    eax,ebp
1003a293:	mov    ecx,DWORD PTR [esp+0x3c]
1003a297:	mov    DWORD PTR fs:0x0,ecx
1003a29e:	pop    ecx
1003a29f:	pop    esi
1003a2a0:	pop    ebp
1003a2a1:	pop    ebx
1003a2a2:	mov    ecx,DWORD PTR [esp+0x28]
1003a2a6:	xor    ecx,esp
1003a2a8:	call   0x10043615
1003a2ad:	add    esp,0x38
1003a2b0:	ret    0x4
1003a2b3:	int3   
1003a2b4:	int3   
1003a2b5:	int3   
1003a2b6:	int3   
1003a2b7:	int3   
1003a2b8:	int3   
1003a2b9:	int3   
1003a2ba:	int3   
1003a2bb:	int3   
1003a2bc:	int3   
1003a2bd:	int3   
1003a2be:	int3   
1003a2bf:	int3   
1003a2c0:	sub    esp,0x11c
1003a2c6:	lea    eax,[esp+0x48]
1003a2ca:	push   eax
1003a2cb:	mov    eax,DWORD PTR [esp+0x128]
1003a2d2:	push   0x0
1003a2d4:	lea    ecx,[esp+0x10]
1003a2d8:	push   ecx
1003a2d9:	lea    edx,[esp+0x10]
1003a2dd:	push   edx
1003a2de:	push   eax
1003a2df:	mov    eax,DWORD PTR [esp+0x134]
1003a2e6:	call   0x1003a3a0
1003a2eb:	add    esp,0x11c
1003a2f1:	ret    0x8
1003a2f4:	int3   
1003a2f5:	int3   
1003a2f6:	int3   
1003a2f7:	int3   
1003a2f8:	int3   
1003a2f9:	int3   
1003a2fa:	int3   
1003a2fb:	int3   
1003a2fc:	int3   
1003a2fd:	int3   
1003a2fe:	int3   
1003a2ff:	int3   
1003a300:	push   ebp
1003a301:	mov    ebp,esp
1003a303:	and    esp,0xfffffff8
1003a306:	sub    esp,0x18
1003a309:	push   esi
1003a30a:	mov    esi,DWORD PTR [eax+0x2c]
1003a30d:	push   edi
1003a30e:	xor    edi,edi
1003a310:	cmp    esi,edi
1003a312:	jne    0x1003a31e
1003a314:	xor    eax,eax
1003a316:	pop    edi
1003a317:	pop    esi
1003a318:	mov    esp,ebp
1003a31a:	pop    ebp
1003a31b:	ret    0x4
1003a31e:	mov    ecx,DWORD PTR [eax+0x1c]
1003a321:	cmp    ecx,edi
1003a323:	mov    DWORD PTR [esp+0x8],edi
1003a327:	mov    DWORD PTR [esp+0xc],edi
1003a32b:	mov    DWORD PTR [esp+0x10],edi
1003a32f:	mov    DWORD PTR [esp+0x14],edi
1003a333:	mov    DWORD PTR [esp+0x18],edi
1003a337:	mov    DWORD PTR [esp+0x1c],edi
1003a33b:	jle    0x1003a349
1003a33d:	mov    DWORD PTR [esp+0x8],0x2
1003a345:	mov    DWORD PTR [esp+0x10],ecx
1003a349:	mov    eax,DWORD PTR [eax+0x20]
1003a34c:	cmp    eax,edi
1003a34e:	jle    0x1003a359
1003a350:	or     DWORD PTR [esp+0x8],0x10
1003a355:	mov    DWORD PTR [esp+0x1c],eax
1003a359:	mov    edx,DWORD PTR [ebx]
1003a35b:	cmp    edx,edi
1003a35d:	jne    0x1003a364
1003a35f:	mov    edx,0x1006dd18
1003a364:	mov    ecx,DWORD PTR [ebp+0x8]
1003a367:	mov    eax,DWORD PTR [ebx+0x4]
1003a36a:	push   ecx
1003a36b:	push   eax
1003a36c:	lea    eax,[esp+0x10]
1003a370:	push   eax
1003a371:	push   esi
1003a372:	xor    ecx,ecx
1003a374:	call   0x1003d360
1003a379:	add    esp,0x10
1003a37c:	cmp    eax,0xffffffff
1003a37f:	je     0x1003a314
1003a381:	cmp    eax,edi
1003a383:	jl     0x1003a314
1003a385:	jne    0x1003a38c
1003a387:	mov    eax,0x19
1003a38c:	pop    edi
1003a38d:	pop    esi
1003a38e:	mov    esp,ebp
1003a390:	pop    ebp
1003a391:	ret    0x4
1003a394:	int3   
1003a395:	int3   
1003a396:	int3   
1003a397:	int3   
1003a398:	int3   
1003a399:	int3   
1003a39a:	int3   
1003a39b:	int3   
1003a39c:	int3   
1003a39d:	int3   
1003a39e:	int3   
1003a39f:	int3   
1003a3a0:	push   ebx
1003a3a1:	mov    ebx,DWORD PTR [esp+0x8]
1003a3a5:	push   ebp
1003a3a6:	mov    ebp,DWORD PTR [esp+0x1c]
1003a3aa:	push   esi
1003a3ab:	push   edi
1003a3ac:	push   ebp
1003a3ad:	mov    esi,eax
1003a3af:	call   0x1003a300
1003a3b4:	test   eax,eax
1003a3b6:	jne    0x1003a3c1
1003a3b8:	xor    al,al
1003a3ba:	pop    edi
1003a3bb:	pop    esi
1003a3bc:	pop    ebp
1003a3bd:	pop    ebx
1003a3be:	ret    0x14
1003a3c1:	mov    ebx,DWORD PTR [esp+0x20]
1003a3c5:	test   ebx,ebx
1003a3c7:	mov    eax,DWORD PTR [ebp+0x4]
1003a3ca:	mov    ecx,DWORD PTR [esp+0x18]
1003a3ce:	mov    DWORD PTR [ecx],eax
1003a3d0:	je     0x1003a432
1003a3d2:	cmp    DWORD PTR [esp+0x1c],0x0
1003a3d7:	je     0x1003a432
1003a3d9:	mov    edx,DWORD PTR [esi+0x2c]
1003a3dc:	test   edx,edx
1003a3de:	jne    0x1003a3e5
1003a3e0:	or     eax,0xffffffff
1003a3e3:	jmp    0x1003a3f2
1003a3e5:	lea    esi,[esp+0x24]
1003a3e9:	call   0x1003dcf0
1003a3ee:	mov    eax,DWORD PTR [esp+0x24]
1003a3f2:	cmp    eax,ebx
1003a3f4:	jl     0x1003a3b8
1003a3f6:	xor    edi,edi
1003a3f8:	test   ebx,ebx
1003a3fa:	jle    0x1003a432
1003a3fc:	lea    esi,[ebp+0xc]
1003a3ff:	mov    edx,DWORD PTR [esp+0x14]
1003a403:	mov    ebx,DWORD PTR [edx]
1003a405:	mov    edx,DWORD PTR [esp+0x1c]
1003a409:	mov    edx,DWORD PTR [edx+edi*4]
1003a40c:	mov    ecx,DWORD PTR [esi-0x4]
1003a40f:	mov    eax,DWORD PTR [esi]
1003a411:	mov    ebp,DWORD PTR [edx]
1003a413:	sub    eax,ecx
1003a415:	push   ebp
1003a416:	push   eax
1003a417:	mov    eax,DWORD PTR [edx+0x4]
1003a41a:	add    ebx,ecx
1003a41c:	push   ebx
1003a41d:	call   eax
1003a41f:	add    esp,0xc
1003a422:	test   al,al
1003a424:	je     0x1003a3b8
1003a426:	add    edi,0x1
1003a429:	add    esi,0x8
1003a42c:	cmp    edi,DWORD PTR [esp+0x20]
1003a430:	jl     0x1003a3ff
1003a432:	pop    edi
1003a433:	pop    esi
1003a434:	pop    ebp
1003a435:	mov    al,0x1
1003a437:	pop    ebx
1003a438:	ret    0x14
1003a43b:	int3   
1003a43c:	int3   
1003a43d:	int3   
1003a43e:	int3   
1003a43f:	int3   
1003a440:	xor    eax,eax
1003a442:	cmp    DWORD PTR [esp+0xc],eax
1003a446:	sete   al
1003a449:	ret    
1003a44a:	int3   
1003a44b:	int3   
1003a44c:	int3   
1003a44d:	int3   
1003a44e:	int3   
1003a44f:	int3   
1003a450:	push   esi
1003a451:	mov    esi,eax
1003a453:	mov    eax,DWORD PTR [ecx+0xc]
1003a456:	mov    eax,DWORD PTR [eax+edx*4]
1003a459:	mov    edx,DWORD PTR [ecx+0x5c]
1003a45c:	add    eax,DWORD PTR [ecx+0x58]
1003a45f:	push   edi
1003a460:	mov    edi,DWORD PTR [esp+0xc]
1003a464:	sub    edx,edi
1003a466:	cmp    esi,edx
1003a468:	jle    0x1003a46f
1003a46a:	pop    edi
1003a46b:	xor    eax,eax
1003a46d:	pop    esi
1003a46e:	ret    
1003a46f:	test   BYTE PTR [esp+0x10],0x1
1003a474:	push   ebx
1003a475:	je     0x1003a4a4
1003a477:	test   esi,esi
1003a479:	jle    0x1003a49b
1003a47b:	mov    ecx,DWORD PTR [ecx+0x24]
1003a47e:	mov    edi,edi
1003a480:	movzx  edx,BYTE PTR [edi]
1003a483:	movzx  ebx,BYTE PTR [eax]
1003a486:	mov    dl,BYTE PTR [edx+ecx*1]
1003a489:	sub    esi,0x1
1003a48c:	add    edi,0x1
1003a48f:	add    eax,0x1
1003a492:	cmp    BYTE PTR [ebx+ecx*1],dl
1003a495:	jne    0x1003a4c6
1003a497:	test   esi,esi
1003a499:	jg     0x1003a480
1003a49b:	pop    ebx
1003a49c:	pop    edi
1003a49d:	mov    eax,0x1
1003a4a2:	pop    esi
1003a4a3:	ret    
1003a4a4:	test   esi,esi
1003a4a6:	jle    0x1003a49b
1003a4a8:	mov    cl,BYTE PTR [eax]
1003a4aa:	mov    dl,BYTE PTR [edi]
1003a4ac:	sub    esi,0x1
1003a4af:	add    edi,0x1
1003a4b2:	add    eax,0x1
1003a4b5:	cmp    cl,dl
1003a4b7:	jne    0x1003a4c6
1003a4b9:	test   esi,esi
1003a4bb:	jg     0x1003a4a8
1003a4bd:	pop    ebx
1003a4be:	pop    edi
1003a4bf:	mov    eax,0x1
1003a4c4:	pop    esi
1003a4c5:	ret    
1003a4c6:	pop    ebx
1003a4c7:	pop    edi
1003a4c8:	xor    eax,eax
1003a4ca:	pop    esi
1003a4cb:	ret    
1003a4cc:	int3   
1003a4cd:	int3   
1003a4ce:	int3   
1003a4cf:	int3   
1003a4d0:	sub    esp,0xe8
1003a4d6:	push   ebx
1003a4d7:	push   ebp
1003a4d8:	push   esi
1003a4d9:	push   edi
1003a4da:	mov    edi,DWORD PTR [esp+0x10c]
1003a4e1:	mov    eax,DWORD PTR [edi]
1003a4e3:	cmp    eax,DWORD PTR [edi+0x4]
1003a4e6:	jae    0x1003c426
1003a4ec:	mov    ebx,DWORD PTR [esp+0x100]
1003a4f3:	mov    ebp,DWORD PTR [esp+0xfc]
1003a4fa:	mov    ecx,DWORD PTR [esp+0x11c]
1003a501:	add    DWORD PTR [edi],0x1
1003a504:	cmp    ecx,DWORD PTR [edi+0x8]
1003a507:	jae    0x1003c439
1003a50d:	test   BYTE PTR [esp+0x118],0x2
1003a515:	mov    edx,DWORD PTR [esp+0x110]
1003a51c:	mov    DWORD PTR [esp+0x28],edx
1003a520:	je     0x1003a53c
1003a522:	mov    eax,DWORD PTR [esp+0x114]
1003a529:	lea    ecx,[esp+0x48]
1003a52d:	mov    DWORD PTR [esp+0x4c],ebp
1003a531:	mov    DWORD PTR [esp+0x48],eax
1003a535:	mov    DWORD PTR [esp+0x114],ecx
1003a53c:	movzx  eax,BYTE PTR [ebx]
1003a53f:	xor    edx,edx
1003a541:	cmp    DWORD PTR [edi+0x48],edx
1003a544:	mov    DWORD PTR [esp+0x1c],edx
1003a548:	mov    DWORD PTR [esp+0x20],edx
1003a54c:	mov    DWORD PTR [esp+0x24],eax
1003a550:	je     0x1003a56b
1003a552:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a555:	jb     0x1003a56b
1003a557:	mov    esi,DWORD PTR [esp+0x104]
1003a55e:	cmp    ebp,esi
1003a560:	jbe    0x1003a572
1003a562:	mov    DWORD PTR [edi+0x4c],0x1
1003a569:	jmp    0x1003a572
1003a56b:	mov    esi,DWORD PTR [esp+0x104]
1003a572:	cmp    eax,0x6f
1003a575:	ja     0x1003cfc1
1003a57b:	movzx  eax,BYTE PTR [eax+0x1003d0ec]
1003a582:	jmp    DWORD PTR [eax*4+0x1003cfd4]
1003a589:	mov    cl,BYTE PTR [ebx+0x3]
1003a58c:	cmp    cl,0x65
1003a58f:	lea    eax,[ebx+0x3]
1003a592:	jne    0x1003a5ba
1003a594:	mov    eax,DWORD PTR [edi+0x7c]
1003a597:	xor    ecx,ecx
1003a599:	test   eax,eax
1003a59b:	mov    ch,BYTE PTR [ebx+0x4]
1003a59e:	mov    cl,BYTE PTR [ebx+0x5]
1003a5a1:	je     0x1003a5db
1003a5a3:	cmp    ecx,0xffff
1003a5a9:	je     0x1003a5b0
1003a5ab:	cmp    ecx,DWORD PTR [eax+0x4]
1003a5ae:	jne    0x1003a5db
1003a5b0:	mov    ecx,0x1
1003a5b5:	lea    eax,[ecx+0x2]
1003a5b8:	jmp    0x1003a5e5
1003a5ba:	cmp    cl,0x64
1003a5bd:	jne    0x1003a600
1003a5bf:	xor    eax,eax
1003a5c1:	mov    ah,BYTE PTR [ebx+0x4]
1003a5c4:	mov    al,BYTE PTR [ebx+0x5]
1003a5c7:	add    eax,eax
1003a5c9:	cmp    eax,DWORD PTR [esp+0x108]
1003a5d0:	jge    0x1003a5db
1003a5d2:	mov    ecx,DWORD PTR [edi+0xc]
1003a5d5:	cmp    DWORD PTR [ecx+eax*4],0x0
1003a5d9:	jge    0x1003a5b0
1003a5db:	xor    ecx,ecx
1003a5dd:	xor    eax,eax
1003a5df:	mov    ah,BYTE PTR [ebx+0x1]
1003a5e2:	mov    al,BYTE PTR [ebx+0x2]
1003a5e5:	add    ebx,eax
1003a5e7:	test   ecx,ecx
1003a5e9:	jne    0x1003c1af
1003a5ef:	cmp    BYTE PTR [ebx],0x54
1003a5f2:	je     0x1003c1af
1003a5f8:	add    ebx,0x3
1003a5fb:	jmp    0x1003a53c
1003a600:	cmp    cl,0x66
1003a603:	jne    0x1003a611
1003a605:	xor    edx,edx
1003a607:	mov    dh,BYTE PTR [ebx+0x1]
1003a60a:	mov    dl,BYTE PTR [ebx+0x2]
1003a60d:	add    ebx,edx
1003a60f:	jmp    0x1003a5ef
1003a611:	mov    ecx,DWORD PTR [esp+0x11c]
1003a618:	mov    edx,DWORD PTR [esp+0x110]
1003a61f:	add    ecx,0x1
1003a622:	push   ecx
1003a623:	mov    ecx,DWORD PTR [esp+0x10c]
1003a62a:	push   0x1
1003a62c:	push   0x0
1003a62e:	push   edx
1003a62f:	push   edi
1003a630:	push   ecx
1003a631:	push   esi
1003a632:	push   eax
1003a633:	push   ebp
1003a634:	call   0x1003a4d0
1003a639:	add    esp,0x24
1003a63c:	cmp    eax,0x1
1003a63f:	je     0x1003c18c
1003a645:	test   eax,eax
1003a647:	je     0x1003a654
1003a649:	cmp    eax,0xfffffc1c
1003a64e:	jne    0x1003cfc6
1003a654:	xor    edx,edx
1003a656:	mov    dh,BYTE PTR [ebx+0x1]
1003a659:	mov    dl,BYTE PTR [ebx+0x2]
1003a65c:	add    ebx,edx
1003a65e:	jmp    0x1003a5ef
1003a660:	mov    ebx,DWORD PTR [edi+0x7c]
1003a663:	test   ebx,ebx
1003a665:	je     0x1003c6fa
1003a66b:	cmp    DWORD PTR [ebx+0x4],0x0
1003a66f:	jne    0x1003c6fa
1003a675:	mov    eax,DWORD PTR [ebx]
1003a677:	mov    DWORD PTR [edi+0x7c],eax
1003a67a:	mov    ecx,DWORD PTR [ebx+0x14]
1003a67d:	mov    edx,DWORD PTR [ebx+0x10]
1003a680:	mov    eax,DWORD PTR [edi+0xc]
1003a683:	add    ecx,ecx
1003a685:	add    ecx,ecx
1003a687:	push   ecx
1003a688:	push   edx
1003a689:	push   eax
1003a68a:	call   0x10045880
1003a68f:	mov    ecx,DWORD PTR [ebx+0xc]
1003a692:	mov    edx,DWORD PTR [esp+0x34]
1003a696:	mov    ebx,DWORD PTR [ebx+0x8]
1003a699:	add    esp,0xc
1003a69c:	mov    DWORD PTR [esp+0x104],ecx
1003a6a3:	mov    DWORD PTR [esp+0x110],edx
1003a6aa:	jmp    0x1003a53c
1003a6af:	movzx  eax,BYTE PTR [ebx+0x1]
1003a6b3:	mov    DWORD PTR [esp+0x110],eax
1003a6ba:	add    ebx,0x2
1003a6bd:	jmp    0x1003a53c
1003a6c2:	mov    esi,DWORD PTR [esp+0x11c]
1003a6c9:	add    esi,0x1
1003a6cc:	mov    ecx,DWORD PTR [esp+0x110]
1003a6d3:	mov    edx,DWORD PTR [esp+0x108]
1003a6da:	mov    eax,DWORD PTR [esp+0x104]
1003a6e1:	push   esi
1003a6e2:	push   0x0
1003a6e4:	push   0x0
1003a6e6:	push   ecx
1003a6e7:	push   edi
1003a6e8:	push   edx
1003a6e9:	push   eax
1003a6ea:	lea    ecx,[ebx+0x3]
1003a6ed:	push   ecx
1003a6ee:	push   ebp
1003a6ef:	call   0x1003a4d0
1003a6f4:	add    esp,0x24
1003a6f7:	cmp    eax,0x1
1003a6fa:	je     0x1003a71a
1003a6fc:	test   eax,eax
1003a6fe:	je     0x1003a70b
1003a700:	cmp    eax,0xfffffc1c
1003a705:	jne    0x1003cfc6
1003a70b:	xor    edx,edx
1003a70d:	mov    dh,BYTE PTR [ebx+0x1]
1003a710:	mov    dl,BYTE PTR [ebx+0x2]
1003a713:	add    ebx,edx
1003a715:	cmp    BYTE PTR [ebx],0x54
1003a718:	je     0x1003a6cc
1003a71a:	cmp    BYTE PTR [ebx],0x55
1003a71d:	je     0x1003c69f
1003a723:	test   BYTE PTR [esp+0x118],0x1
1003a72b:	jne    0x1003c714
1003a731:	xor    eax,eax
1003a733:	mov    ah,BYTE PTR [ebx+0x1]
1003a736:	mov    al,BYTE PTR [ebx+0x2]
1003a739:	add    ebx,eax
1003a73b:	cmp    BYTE PTR [ebx],0x54
1003a73e:	je     0x1003a731
1003a740:	mov    ecx,DWORD PTR [edi+0x68]
1003a743:	add    ebx,0x3
1003a746:	mov    DWORD PTR [esp+0x108],ecx
1003a74d:	jmp    0x1003a53c
1003a752:	mov    esi,DWORD PTR [esp+0x11c]
1003a759:	add    esi,0x1
1003a75c:	mov    edx,DWORD PTR [esp+0x110]
1003a763:	mov    eax,DWORD PTR [esp+0x108]
1003a76a:	mov    ecx,DWORD PTR [esp+0x104]
1003a771:	push   esi
1003a772:	push   0x0
1003a774:	push   0x0
1003a776:	push   edx
1003a777:	push   edi
1003a778:	push   eax
1003a779:	push   ecx
1003a77a:	lea    edx,[ebx+0x3]
1003a77d:	push   edx
1003a77e:	push   ebp
1003a77f:	call   0x1003a4d0
1003a784:	add    esp,0x24
1003a787:	cmp    eax,0x1
1003a78a:	je     0x1003c69f
1003a790:	test   eax,eax
1003a792:	je     0x1003a79f
1003a794:	cmp    eax,0xfffffc1c
1003a799:	jne    0x1003cfc6
1003a79f:	xor    eax,eax
1003a7a1:	mov    ah,BYTE PTR [ebx+0x1]
1003a7a4:	mov    al,BYTE PTR [ebx+0x2]
1003a7a7:	add    ebx,eax
1003a7a9:	cmp    BYTE PTR [ebx],0x54
1003a7ac:	je     0x1003a75c
1003a7ae:	test   BYTE PTR [esp+0x118],0x1
1003a7b6:	jne    0x1003c714
1003a7bc:	add    ebx,0x3
1003a7bf:	jmp    0x1003a53c
1003a7c4:	xor    ecx,ecx
1003a7c6:	mov    ch,BYTE PTR [ebx+0x1]
1003a7c9:	mov    cl,BYTE PTR [ebx+0x2]
1003a7cc:	sub    ebp,ecx
1003a7ce:	cmp    ebp,DWORD PTR [edi+0x58]
1003a7d1:	jb     0x1003c69f
1003a7d7:	add    ebx,0x3
1003a7da:	jmp    0x1003a53c
1003a7df:	mov    ecx,DWORD PTR ds:0x10082dc4
1003a7e5:	test   ecx,ecx
1003a7e7:	je     0x1003a873
1003a7ed:	movzx  edx,BYTE PTR [ebx+0x1]
1003a7f1:	mov    eax,DWORD PTR [edi+0xc]
1003a7f4:	mov    DWORD PTR [esp+0x58],eax
1003a7f8:	mov    eax,DWORD PTR [edi+0x58]
1003a7fb:	mov    DWORD PTR [esp+0x54],edx
1003a7ff:	mov    edx,DWORD PTR [edi+0x5c]
1003a802:	sub    edx,eax
1003a804:	mov    DWORD PTR [esp+0x60],edx
1003a808:	sub    esi,eax
1003a80a:	mov    DWORD PTR [esp+0x5c],eax
1003a80e:	mov    edx,ebp
1003a810:	sub    edx,eax
1003a812:	xor    eax,eax
1003a814:	mov    ah,BYTE PTR [ebx+0x2]
1003a817:	mov    DWORD PTR [esp+0x68],edx
1003a81b:	xor    edx,edx
1003a81d:	mov    dh,BYTE PTR [ebx+0x4]
1003a820:	mov    DWORD PTR [esp+0x50],0x1
1003a828:	mov    DWORD PTR [esp+0x64],esi
1003a82c:	mov    al,BYTE PTR [ebx+0x3]
1003a82f:	mov    dl,BYTE PTR [ebx+0x5]
1003a832:	mov    DWORD PTR [esp+0x78],eax
1003a836:	mov    eax,DWORD PTR [esp+0x108]
1003a83d:	mov    DWORD PTR [esp+0x7c],edx
1003a841:	cdq    
1003a842:	sub    eax,edx
1003a844:	mov    edx,DWORD PTR [edi+0x80]
1003a84a:	sar    eax,1
1003a84c:	mov    DWORD PTR [esp+0x6c],eax
1003a850:	mov    eax,DWORD PTR [edi+0x6c]
1003a853:	mov    DWORD PTR [esp+0x70],eax
1003a857:	lea    eax,[esp+0x50]
1003a85b:	push   eax
1003a85c:	mov    DWORD PTR [esp+0x78],edx
1003a860:	call   ecx
1003a862:	add    esp,0x4
1003a865:	test   eax,eax
1003a867:	jg     0x1003c69f
1003a86d:	jl     0x1003cfc6
1003a873:	add    ebx,0x6
1003a876:	jmp    0x1003a53c
1003a87b:	mov    esi,DWORD PTR [esp+0x11c]
1003a882:	mov    DWORD PTR [esp+0x1c],ebx
1003a886:	mov    DWORD PTR [esp+0x24],ebp
1003a88a:	add    esi,0x1
1003a88d:	mov    ecx,DWORD PTR [esp+0x114]
1003a894:	mov    edx,DWORD PTR [esp+0x110]
1003a89b:	mov    eax,DWORD PTR [esp+0x108]
1003a8a2:	push   esi
1003a8a3:	push   0x0
1003a8a5:	push   ecx
1003a8a6:	mov    ecx,DWORD PTR [esp+0x110]
1003a8ad:	push   edx
1003a8ae:	push   edi
1003a8af:	push   eax
1003a8b0:	push   ecx
1003a8b1:	lea    edx,[ebx+0x3]
1003a8b4:	push   edx
1003a8b5:	push   ebp
1003a8b6:	call   0x1003a4d0
1003a8bb:	add    esp,0x24
1003a8be:	cmp    eax,0x1
1003a8c1:	je     0x1003a8e1
1003a8c3:	test   eax,eax
1003a8c5:	je     0x1003a8d2
1003a8c7:	cmp    eax,0xfffffc1c
1003a8cc:	jne    0x1003cfc6
1003a8d2:	xor    eax,eax
1003a8d4:	mov    ah,BYTE PTR [ebx+0x1]
1003a8d7:	mov    al,BYTE PTR [ebx+0x2]
1003a8da:	add    ebx,eax
1003a8dc:	cmp    BYTE PTR [ebx],0x54
1003a8df:	je     0x1003a88d
1003a8e1:	mov    al,BYTE PTR [ebx]
1003a8e3:	cmp    al,0x5d
1003a8e5:	je     0x1003a8f0
1003a8e7:	cmp    al,0x54
1003a8e9:	jne    0x1003c69f
1003a8ef:	nop
1003a8f0:	xor    ecx,ecx
1003a8f2:	mov    ch,BYTE PTR [ebx+0x1]
1003a8f5:	mov    cl,BYTE PTR [ebx+0x2]
1003a8f8:	add    ebx,ecx
1003a8fa:	cmp    BYTE PTR [ebx],0x54
1003a8fd:	je     0x1003a8f0
1003a8ff:	cmp    BYTE PTR [ebx],0x55
1003a902:	mov    ecx,DWORD PTR [edi+0x68]
1003a905:	mov    ebp,DWORD PTR [edi+0x64]
1003a908:	mov    DWORD PTR [esp+0x108],ecx
1003a90f:	je     0x1003a91b
1003a911:	cmp    ebp,DWORD PTR [esp+0x24]
1003a915:	jne    0x1003c2d1
1003a91b:	add    ebx,0x3
1003a91e:	jmp    0x1003a53c
1003a923:	xor    edx,edx
1003a925:	mov    dh,BYTE PTR [ebx+0x1]
1003a928:	mov    dl,BYTE PTR [ebx+0x2]
1003a92b:	add    ebx,edx
1003a92d:	cmp    BYTE PTR [ebx],0x54
1003a930:	je     0x1003a923
1003a932:	jmp    0x1003a53c
1003a937:	mov    eax,DWORD PTR [esp+0x11c]
1003a93e:	mov    ecx,DWORD PTR [esp+0x114]
1003a945:	mov    edx,DWORD PTR [esp+0x110]
1003a94c:	add    eax,0x1
1003a94f:	push   eax
1003a950:	mov    eax,DWORD PTR [esp+0x10c]
1003a957:	push   0x0
1003a959:	push   ecx
1003a95a:	push   edx
1003a95b:	push   edi
1003a95c:	push   eax
1003a95d:	push   esi
1003a95e:	add    ebx,0x1
1003a961:	push   ebx
1003a962:	push   ebp
1003a963:	call   0x1003a4d0
1003a968:	add    esp,0x24
1003a96b:	test   eax,eax
1003a96d:	jne    0x1003cfc6
1003a973:	xor    ecx,ecx
1003a975:	mov    ch,BYTE PTR [ebx+0x1]
1003a978:	mov    cl,BYTE PTR [ebx+0x2]
1003a97b:	add    ebx,ecx
1003a97d:	cmp    BYTE PTR [ebx],0x54
1003a980:	je     0x1003a973
1003a982:	add    ebx,0x3
1003a985:	jmp    0x1003a53c
1003a98a:	add    ebx,0x1
1003a98d:	mov    eax,ebx
1003a98f:	nop
1003a990:	xor    edx,edx
1003a992:	mov    dh,BYTE PTR [eax+0x1]
1003a995:	mov    dl,BYTE PTR [eax+0x2]
1003a998:	add    eax,edx
1003a99a:	cmp    BYTE PTR [eax],0x54
1003a99d:	je     0x1003a990
1003a99f:	mov    ecx,DWORD PTR [esp+0x11c]
1003a9a6:	mov    edx,DWORD PTR [esp+0x114]
1003a9ad:	add    ecx,0x1
1003a9b0:	push   ecx
1003a9b1:	mov    ecx,DWORD PTR [esp+0x114]
1003a9b8:	push   0x0
1003a9ba:	push   edx
1003a9bb:	mov    edx,DWORD PTR [esp+0x114]
1003a9c2:	push   ecx
1003a9c3:	push   edi
1003a9c4:	push   edx
1003a9c5:	push   esi
1003a9c6:	add    eax,0x3
1003a9c9:	push   eax
1003a9ca:	push   ebp
1003a9cb:	call   0x1003a4d0
1003a9d0:	add    esp,0x24
1003a9d3:	test   eax,eax
1003a9d5:	jne    0x1003cfc6
1003a9db:	jmp    0x1003a53c
1003a9e0:	add    ebx,0x1
1003a9e3:	xor    eax,eax
1003a9e5:	mov    ah,BYTE PTR [ebx+0x1]
1003a9e8:	mov    al,BYTE PTR [ebx+0x2]
1003a9eb:	add    ebx,eax
1003a9ed:	cmp    BYTE PTR [ebx],0x54
1003a9f0:	je     0x1003a9e3
1003a9f2:	add    ebx,0x3
1003a9f5:	jmp    0x1003a53c
1003a9fa:	xor    edx,edx
1003a9fc:	mov    dh,BYTE PTR [ebx+0x1]
1003a9ff:	mov    ecx,ebx
1003aa01:	mov    dl,BYTE PTR [ebx+0x2]
1003aa04:	sub    ecx,edx
1003aa06:	mov    al,BYTE PTR [ecx]
1003aa08:	cmp    al,0x61
1003aa0a:	mov    DWORD PTR [esp+0x1c],ecx
1003aa0e:	jb     0x1003aa25
1003aa10:	mov    esi,DWORD PTR [esp+0x114]
1003aa17:	mov    edx,DWORD PTR [esi+0x4]
1003aa1a:	mov    esi,DWORD PTR [esi]
1003aa1c:	mov    DWORD PTR [esp+0x114],esi
1003aa23:	jmp    0x1003aa27
1003aa25:	xor    edx,edx
1003aa27:	cmp    al,0x58
1003aa29:	je     0x1003c8fa
1003aa2f:	cmp    al,0x59
1003aa31:	je     0x1003c8fa
1003aa37:	cmp    al,0x5a
1003aa39:	je     0x1003c8fa
1003aa3f:	cmp    al,0x5b
1003aa41:	je     0x1003c8fa
1003aa47:	cmp    al,0x5d
1003aa49:	je     0x1003c8fa
1003aa4f:	cmp    al,0x5f
1003aa51:	je     0x1003aa5b
1003aa53:	cmp    al,0x62
1003aa55:	jne    0x1003aaf6
1003aa5b:	xor    eax,eax
1003aa5d:	mov    ah,BYTE PTR [ecx+0x3]
1003aa60:	mov    al,BYTE PTR [ecx+0x4]
1003aa63:	mov    ecx,eax
1003aa65:	lea    eax,[ecx+ecx*1]
1003aa68:	cmp    eax,DWORD PTR [edi+0x14]
1003aa6b:	mov    DWORD PTR [esp+0x20],ecx
1003aa6f:	mov    DWORD PTR [edi+0x6c],ecx
1003aa72:	jl     0x1003aa7d
1003aa74:	mov    DWORD PTR [edi+0x2c],0x1
1003aa7b:	jmp    0x1003aab0
1003aa7d:	mov    esi,DWORD PTR [edi+0x10]
1003aa80:	mov    ecx,DWORD PTR [edi+0xc]
1003aa83:	sub    esi,DWORD PTR [esp+0x20]
1003aa87:	mov    esi,DWORD PTR [ecx+esi*4]
1003aa8a:	mov    DWORD PTR [ecx+eax*4],esi
1003aa8d:	mov    esi,DWORD PTR [edi+0xc]
1003aa90:	mov    ecx,ebp
1003aa92:	sub    ecx,DWORD PTR [edi+0x58]
1003aa95:	cmp    DWORD PTR [esp+0x108],eax
1003aa9c:	mov    DWORD PTR [esi+eax*4+0x4],ecx
1003aaa0:	mov    ecx,DWORD PTR [esp+0x20]
1003aaa4:	jg     0x1003aab0
1003aaa6:	add    eax,0x2
1003aaa9:	mov    DWORD PTR [esp+0x108],eax
1003aab0:	mov    esi,DWORD PTR [edi+0x7c]
1003aab3:	test   esi,esi
1003aab5:	je     0x1003aaf6
1003aab7:	cmp    DWORD PTR [esi+0x4],ecx
1003aaba:	jne    0x1003aaf6
1003aabc:	mov    edx,DWORD PTR [esi]
1003aabe:	mov    DWORD PTR [edi+0x7c],edx
1003aac1:	mov    ecx,DWORD PTR [esi+0x14]
1003aac4:	mov    eax,DWORD PTR [esi+0xc]
1003aac7:	mov    edx,DWORD PTR [esi+0x10]
1003aaca:	add    ecx,ecx
1003aacc:	add    ecx,ecx
1003aace:	push   ecx
1003aacf:	mov    DWORD PTR [esp+0x108],eax
1003aad6:	mov    eax,DWORD PTR [edi+0xc]
1003aad9:	push   edx
1003aada:	push   eax
1003aadb:	call   0x10045340
1003aae0:	mov    ecx,DWORD PTR [esp+0x34]
1003aae4:	mov    ebx,DWORD PTR [esi+0x8]
1003aae7:	add    esp,0xc
1003aaea:	mov    DWORD PTR [esp+0x110],ecx
1003aaf1:	jmp    0x1003a53c
1003aaf6:	cmp    BYTE PTR [ebx],0x55
1003aaf9:	mov    esi,DWORD PTR [esp+0x28]
1003aafd:	mov    DWORD PTR [esp+0x110],esi
1003ab04:	je     0x1003ab0e
1003ab06:	cmp    ebp,edx
1003ab08:	jne    0x1003c365
1003ab0e:	add    ebx,0x3
1003ab11:	jmp    0x1003a53c
1003ab16:	cmp    DWORD PTR [edi+0x30],0x0
1003ab1a:	je     0x1003ab25
1003ab1c:	cmp    ebp,DWORD PTR [edi+0x58]
1003ab1f:	je     0x1003c69f
1003ab25:	test   BYTE PTR [esp+0x110],0x2
1003ab2d:	je     0x1003aba6
1003ab2f:	mov    eax,DWORD PTR [edi+0x58]
1003ab32:	cmp    ebp,eax
1003ab34:	je     0x1003ab9e
1003ab36:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ab39:	je     0x1003c69f
1003ab3f:	mov    ecx,DWORD PTR [edi+0x18]
1003ab42:	test   ecx,ecx
1003ab44:	je     0x1003ab70
1003ab46:	cmp    ebp,eax
1003ab48:	jbe    0x1003c69f
1003ab4e:	push   0x0
1003ab50:	push   ecx
1003ab51:	lea    edx,[edi+0x1c]
1003ab54:	mov    esi,eax
1003ab56:	mov    ecx,ebp
1003ab58:	call   0x10042f30
1003ab5d:	add    esp,0x8
1003ab60:	test   eax,eax
1003ab62:	je     0x1003c69f
1003ab68:	add    ebx,0x1
1003ab6b:	jmp    0x1003a53c
1003ab70:	mov    ecx,DWORD PTR [edi+0x1c]
1003ab73:	lea    edx,[ecx+eax*1]
1003ab76:	cmp    ebp,edx
1003ab78:	jb     0x1003c69f
1003ab7e:	mov    esi,ebp
1003ab80:	sub    esi,ecx
1003ab82:	mov    al,BYTE PTR [esi]
1003ab84:	cmp    al,BYTE PTR [edi+0x20]
1003ab87:	jne    0x1003c69f
1003ab8d:	cmp    ecx,0x1
1003ab90:	je     0x1003ab9e
1003ab92:	mov    cl,BYTE PTR [esi+0x1]
1003ab95:	cmp    cl,BYTE PTR [edi+0x21]
1003ab98:	jne    0x1003c69f
1003ab9e:	add    ebx,0x1
1003aba1:	jmp    0x1003a53c
1003aba6:	cmp    ebp,DWORD PTR [edi+0x58]
1003aba9:	jne    0x1003c69f
1003abaf:	add    ebx,0x1
1003abb2:	jmp    0x1003a53c
1003abb7:	mov    edx,DWORD PTR [edi+0x70]
1003abba:	add    edx,DWORD PTR [edi+0x58]
1003abbd:	cmp    ebp,edx
1003abbf:	jne    0x1003c69f
1003abc5:	add    ebx,0x1
1003abc8:	jmp    0x1003a53c
1003abcd:	mov    DWORD PTR [esp+0x104],ebp
1003abd4:	add    ebx,0x1
1003abd7:	jmp    0x1003a53c
1003abdc:	test   BYTE PTR [esp+0x110],0x2
1003abe4:	je     0x1003ac5a
1003abe6:	mov    eax,DWORD PTR [edi+0x5c]
1003abe9:	cmp    ebp,eax
1003abeb:	jae    0x1003ac48
1003abed:	mov    ecx,DWORD PTR [edi+0x18]
1003abf0:	test   ecx,ecx
1003abf2:	je     0x1003ac22
1003abf4:	mov    edi,DWORD PTR [esp+0x10c]
1003abfb:	push   ecx
1003abfc:	add    edi,0x1c
1003abff:	xor    edx,edx
1003ac01:	mov    ecx,ebp
1003ac03:	call   0x10042e70
1003ac08:	add    esp,0x4
1003ac0b:	test   eax,eax
1003ac0d:	je     0x1003c69f
1003ac13:	mov    edi,DWORD PTR [esp+0x10c]
1003ac1a:	add    ebx,0x1
1003ac1d:	jmp    0x1003a53c
1003ac22:	mov    ecx,DWORD PTR [edi+0x1c]
1003ac25:	sub    eax,ecx
1003ac27:	cmp    ebp,eax
1003ac29:	ja     0x1003c69f
1003ac2f:	mov    al,BYTE PTR [ebp+0x0]
1003ac32:	cmp    al,BYTE PTR [edi+0x20]
1003ac35:	jne    0x1003c69f
1003ac3b:	cmp    ecx,0x1
1003ac3e:	je     0x1003ac52
1003ac40:	mov    cl,BYTE PTR [ebp+0x1]
1003ac43:	cmp    cl,BYTE PTR [edi+0x21]
1003ac46:	jmp    0x1003ac4c
1003ac48:	cmp    DWORD PTR [edi+0x34],0x0
1003ac4c:	jne    0x1003c69f
1003ac52:	add    ebx,0x1
1003ac55:	jmp    0x1003a53c
1003ac5a:	cmp    DWORD PTR [edi+0x34],0x0
1003ac5e:	jne    0x1003c69f
1003ac64:	cmp    DWORD PTR [edi+0x40],0x0
1003ac68:	jne    0x1003acf0
1003ac6e:	mov    eax,DWORD PTR [edi+0x5c]
1003ac71:	cmp    ebp,eax
1003ac73:	je     0x1003ace8
1003ac75:	mov    ecx,DWORD PTR [edi+0x18]
1003ac78:	test   ecx,ecx
1003ac7a:	je     0x1003acae
1003ac7c:	cmp    ebp,eax
1003ac7e:	jae    0x1003c69f
1003ac84:	mov    esi,DWORD PTR [esp+0x10c]
1003ac8b:	add    esi,0x1c
1003ac8e:	push   ecx
1003ac8f:	xor    edx,edx
1003ac91:	mov    edi,esi
1003ac93:	mov    ecx,ebp
1003ac95:	call   0x10042e70
1003ac9a:	add    esp,0x4
1003ac9d:	test   eax,eax
1003ac9f:	je     0x1003c69f
1003aca5:	mov    edi,DWORD PTR [esp+0x10c]
1003acac:	jmp    0x1003acdb
1003acae:	mov    ecx,DWORD PTR [edi+0x1c]
1003acb1:	lea    esi,[edi+0x1c]
1003acb4:	sub    eax,ecx
1003acb6:	cmp    ebp,eax
1003acb8:	ja     0x1003c69f
1003acbe:	mov    dl,BYTE PTR [ebp+0x0]
1003acc1:	cmp    dl,BYTE PTR [edi+0x20]
1003acc4:	jne    0x1003c69f
1003acca:	cmp    ecx,0x1
1003accd:	je     0x1003acdb
1003accf:	mov    al,BYTE PTR [ebp+0x1]
1003acd2:	cmp    al,BYTE PTR [edi+0x21]
1003acd5:	jne    0x1003c69f
1003acdb:	mov    ecx,DWORD PTR [edi+0x5c]
1003acde:	sub    ecx,DWORD PTR [esi]
1003ace0:	cmp    ebp,ecx
1003ace2:	jne    0x1003c69f
1003ace8:	add    ebx,0x1
1003aceb:	jmp    0x1003a53c
1003acf0:	cmp    ebp,DWORD PTR [edi+0x5c]
1003acf3:	jb     0x1003c69f
1003acf9:	add    ebx,0x1
1003acfc:	jmp    0x1003a53c
1003ad01:	cmp    ebp,DWORD PTR [edi+0x58]
1003ad04:	je     0x1003ad1a
1003ad06:	movzx  edx,BYTE PTR [ebp-0x1]
1003ad0a:	mov    eax,DWORD PTR [edi+0x28]
1003ad0d:	test   BYTE PTR [edx+eax*1],0x10
1003ad11:	je     0x1003ad1a
1003ad13:	mov    esi,0x1
1003ad18:	jmp    0x1003ad1c
1003ad1a:	xor    esi,esi
1003ad1c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ad1f:	jae    0x1003ad35
1003ad21:	movzx  ecx,BYTE PTR [ebp+0x0]
1003ad25:	mov    edx,DWORD PTR [edi+0x28]
1003ad28:	test   BYTE PTR [ecx+edx*1],0x10
1003ad2c:	je     0x1003ad35
1003ad2e:	mov    eax,0x1
1003ad33:	jmp    0x1003ad37
1003ad35:	xor    eax,eax
1003ad37:	mov    cl,BYTE PTR [ebx]
1003ad39:	add    ebx,0x1
1003ad3c:	cmp    cl,0x5
1003ad3f:	jne    0x1003ad4c
1003ad41:	xor    edx,edx
1003ad43:	cmp    eax,esi
1003ad45:	sete   dl
1003ad48:	mov    eax,edx
1003ad4a:	jmp    0x1003ad55
1003ad4c:	xor    ecx,ecx
1003ad4e:	cmp    eax,esi
1003ad50:	setne  cl
1003ad53:	mov    eax,ecx
1003ad55:	test   eax,eax
1003ad57:	je     0x1003a53c
1003ad5d:	xor    eax,eax
1003ad5f:	pop    edi
1003ad60:	pop    esi
1003ad61:	pop    ebp
1003ad62:	pop    ebx
1003ad63:	add    esp,0xe8
1003ad69:	ret    
1003ad6a:	mov    ecx,DWORD PTR [edi+0x18]
1003ad6d:	test   ecx,ecx
1003ad6f:	je     0x1003ada0
1003ad71:	mov    eax,DWORD PTR [edi+0x5c]
1003ad74:	cmp    ebp,eax
1003ad76:	jae    0x1003adc9
1003ad78:	mov    edi,DWORD PTR [esp+0x10c]
1003ad7f:	push   ecx
1003ad80:	add    edi,0x1c
1003ad83:	xor    edx,edx
1003ad85:	mov    ecx,ebp
1003ad87:	call   0x10042e70
1003ad8c:	add    esp,0x4
1003ad8f:	test   eax,eax
1003ad91:	jne    0x1003c69f
1003ad97:	mov    edi,DWORD PTR [esp+0x10c]
1003ad9e:	jmp    0x1003adc9
1003ada0:	mov    eax,DWORD PTR [edi+0x1c]
1003ada3:	mov    edx,DWORD PTR [edi+0x5c]
1003ada6:	sub    edx,eax
1003ada8:	cmp    ebp,edx
1003adaa:	ja     0x1003adc9
1003adac:	mov    cl,BYTE PTR [ebp+0x0]
1003adaf:	cmp    cl,BYTE PTR [edi+0x20]
1003adb2:	jne    0x1003adc9
1003adb4:	cmp    eax,0x1
1003adb7:	je     0x1003c69f
1003adbd:	mov    dl,BYTE PTR [ebp+0x1]
1003adc0:	cmp    dl,BYTE PTR [edi+0x21]
1003adc3:	je     0x1003c69f
1003adc9:	mov    eax,ebp
1003adcb:	add    ebp,0x1
1003adce:	cmp    eax,DWORD PTR [edi+0x5c]
1003add1:	jae    0x1003c69f
1003add7:	add    ebx,0x1
1003adda:	jmp    0x1003a53c
1003addf:	mov    ecx,ebp
1003ade1:	add    ebp,0x1
1003ade4:	cmp    ecx,DWORD PTR [edi+0x5c]
1003ade7:	jae    0x1003c69f
1003aded:	add    ebx,0x1
1003adf0:	jmp    0x1003a53c
1003adf5:	cmp    ebp,DWORD PTR [edi+0x5c]
1003adf8:	jae    0x1003c69f
1003adfe:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae02:	mov    edx,DWORD PTR [edi+0x28]
1003ae05:	add    ebp,0x1
1003ae08:	test   BYTE PTR [eax+edx*1],0x4
1003ae0c:	jne    0x1003c69f
1003ae12:	add    ebx,0x1
1003ae15:	jmp    0x1003a53c
1003ae1a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae1d:	jae    0x1003c69f
1003ae23:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae27:	mov    ecx,DWORD PTR [edi+0x28]
1003ae2a:	add    ebp,0x1
1003ae2d:	test   BYTE PTR [eax+ecx*1],0x4
1003ae31:	je     0x1003c69f
1003ae37:	add    ebx,0x1
1003ae3a:	jmp    0x1003a53c
1003ae3f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae42:	jae    0x1003c69f
1003ae48:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae4c:	mov    edx,DWORD PTR [edi+0x28]
1003ae4f:	add    ebp,0x1
1003ae52:	test   BYTE PTR [eax+edx*1],0x1
1003ae56:	jne    0x1003c69f
1003ae5c:	add    ebx,0x1
1003ae5f:	jmp    0x1003a53c
1003ae64:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae67:	jae    0x1003c69f
1003ae6d:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae71:	mov    ecx,DWORD PTR [edi+0x28]
1003ae74:	add    ebp,0x1
1003ae77:	test   BYTE PTR [eax+ecx*1],0x1
1003ae7b:	je     0x1003c69f
1003ae81:	add    ebx,0x1
1003ae84:	jmp    0x1003a53c
1003ae89:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ae8c:	jae    0x1003c69f
1003ae92:	movzx  eax,BYTE PTR [ebp+0x0]
1003ae96:	mov    edx,DWORD PTR [edi+0x28]
1003ae99:	add    ebp,0x1
1003ae9c:	test   BYTE PTR [eax+edx*1],0x10
1003aea0:	jne    0x1003c69f
1003aea6:	add    ebx,0x1
1003aea9:	jmp    0x1003a53c
1003aeae:	cmp    ebp,DWORD PTR [edi+0x5c]
1003aeb1:	jae    0x1003c69f
1003aeb7:	movzx  eax,BYTE PTR [ebp+0x0]
1003aebb:	mov    ecx,DWORD PTR [edi+0x28]
1003aebe:	add    ebp,0x1
1003aec1:	test   BYTE PTR [eax+ecx*1],0x10
1003aec5:	je     0x1003c69f
1003aecb:	add    ebx,0x1
1003aece:	jmp    0x1003a53c
1003aed3:	mov    ecx,DWORD PTR [edi+0x5c]
1003aed6:	cmp    ebp,ecx
1003aed8:	jae    0x1003c69f
1003aede:	movzx  eax,BYTE PTR [ebp+0x0]
1003aee2:	add    ebp,0x1
1003aee5:	cmp    eax,0xd
1003aee8:	ja     0x1003af11
1003aeea:	je     0x1003aefc
1003aeec:	cmp    eax,0xa
1003aeef:	je     0x1003af38
1003aef1:	jbe    0x1003c69f
1003aef7:	cmp    eax,0xc
1003aefa:	jmp    0x1003af28
1003aefc:	cmp    ebp,ecx
1003aefe:	jae    0x1003af38
1003af00:	cmp    BYTE PTR [ebp+0x0],0xa
1003af04:	jne    0x1003af38
1003af06:	add    ebp,0x1
1003af09:	add    ebx,0x1
1003af0c:	jmp    0x1003a53c
1003af11:	cmp    eax,0x85
1003af16:	je     0x1003af2e
1003af18:	cmp    eax,0x2027
1003af1d:	jbe    0x1003c69f
1003af23:	cmp    eax,0x2029
1003af28:	ja     0x1003c69f
1003af2e:	cmp    DWORD PTR [edi+0x50],0x0
1003af32:	jne    0x1003c69f
1003af38:	add    ebx,0x1
1003af3b:	jmp    0x1003a53c
1003af40:	cmp    ebp,DWORD PTR [edi+0x5c]
1003af43:	jae    0x1003c69f
1003af49:	movzx  eax,BYTE PTR [ebp+0x0]
1003af4d:	add    ebp,0x1
1003af50:	cmp    eax,0x180e
1003af55:	ja     0x1003af7f
1003af57:	je     0x1003c69f
1003af5d:	cmp    eax,0xa0
1003af62:	ja     0x1003af78
1003af64:	je     0x1003c69f
1003af6a:	cmp    eax,0x9
1003af6d:	je     0x1003c69f
1003af73:	cmp    eax,0x20
1003af76:	jmp    0x1003afaa
1003af78:	cmp    eax,0x1680
1003af7d:	jmp    0x1003afaa
1003af7f:	cmp    eax,0x205f
1003af84:	ja     0x1003afa5
1003af86:	je     0x1003c69f
1003af8c:	cmp    eax,0x2000
1003af91:	jb     0x1003afb0
1003af93:	cmp    eax,0x200a
1003af98:	jbe    0x1003c69f
1003af9e:	cmp    eax,0x202f
1003afa3:	jmp    0x1003afaa
1003afa5:	cmp    eax,0x3000
1003afaa:	je     0x1003c69f
1003afb0:	add    ebx,0x1
1003afb3:	jmp    0x1003a53c
1003afb8:	cmp    ebp,DWORD PTR [edi+0x5c]
1003afbb:	jae    0x1003c69f
1003afc1:	movzx  eax,BYTE PTR [ebp+0x0]
1003afc5:	add    ebp,0x1
1003afc8:	cmp    eax,0x180e
1003afcd:	ja     0x1003afeb
1003afcf:	je     0x1003b018
1003afd1:	cmp    eax,0xa0
1003afd6:	ja     0x1003afe4
1003afd8:	je     0x1003b018
1003afda:	cmp    eax,0x9
1003afdd:	je     0x1003b018
1003afdf:	cmp    eax,0x20
1003afe2:	jmp    0x1003b012
1003afe4:	cmp    eax,0x1680
1003afe9:	jmp    0x1003b012
1003afeb:	cmp    eax,0x205f
1003aff0:	ja     0x1003b00d
1003aff2:	je     0x1003b018
1003aff4:	cmp    eax,0x2000
1003aff9:	jb     0x1003c69f
1003afff:	cmp    eax,0x200a
1003b004:	jbe    0x1003b018
1003b006:	cmp    eax,0x202f
1003b00b:	jmp    0x1003b012
1003b00d:	cmp    eax,0x3000
1003b012:	jne    0x1003c69f
1003b018:	add    ebx,0x1
1003b01b:	jmp    0x1003a53c
1003b020:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b023:	jae    0x1003c69f
1003b029:	movzx  eax,BYTE PTR [ebp+0x0]
1003b02d:	add    ebp,0x1
1003b030:	cmp    eax,0x85
1003b035:	ja     0x1003b047
1003b037:	je     0x1003c69f
1003b03d:	cmp    eax,0xa
1003b040:	jb     0x1003b059
1003b042:	cmp    eax,0xd
1003b045:	jmp    0x1003b053
1003b047:	cmp    eax,0x2028
1003b04c:	jb     0x1003b059
1003b04e:	cmp    eax,0x2029
1003b053:	jbe    0x1003c69f
1003b059:	add    ebx,0x1
1003b05c:	jmp    0x1003a53c
1003b061:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b064:	jae    0x1003c69f
1003b06a:	movzx  eax,BYTE PTR [ebp+0x0]
1003b06e:	add    ebp,0x1
1003b071:	cmp    eax,0x85
1003b076:	ja     0x1003b088
1003b078:	je     0x1003b09e
1003b07a:	cmp    eax,0xa
1003b07d:	jb     0x1003c69f
1003b083:	cmp    eax,0xd
1003b086:	jmp    0x1003b098
1003b088:	cmp    eax,0x2028
1003b08d:	jb     0x1003c69f
1003b093:	cmp    eax,0x2029
1003b098:	ja     0x1003c69f
1003b09e:	add    ebx,0x1
1003b0a1:	jmp    0x1003a53c
1003b0a6:	xor    eax,eax
1003b0a8:	mov    ah,BYTE PTR [ebx+0x1]
1003b0ab:	add    ebx,0x3
1003b0ae:	mov    al,BYTE PTR [ebx-0x1]
1003b0b1:	add    eax,eax
1003b0b3:	cmp    eax,DWORD PTR [esp+0x108]
1003b0ba:	mov    DWORD PTR [esp+0x24],eax
1003b0be:	jge    0x1003b0d4
1003b0c0:	mov    edx,DWORD PTR [edi+0xc]
1003b0c3:	mov    ecx,DWORD PTR [edx+eax*4]
1003b0c6:	test   ecx,ecx
1003b0c8:	lea    eax,[edx+eax*4]
1003b0cb:	jl     0x1003b0d4
1003b0cd:	mov    esi,DWORD PTR [eax+0x4]
1003b0d0:	sub    esi,ecx
1003b0d2:	jmp    0x1003b0e6
1003b0d4:	cmp    DWORD PTR [edi+0x3c],0x0
1003b0d8:	je     0x1003b0de
1003b0da:	xor    esi,esi
1003b0dc:	jmp    0x1003b0e6
1003b0de:	mov    esi,DWORD PTR [edi+0x5c]
1003b0e1:	sub    esi,ebp
1003b0e3:	add    esi,0x1
1003b0e6:	mov    cl,BYTE PTR [ebx]
1003b0e8:	movzx  eax,cl
1003b0eb:	lea    edx,[eax-0x46]
1003b0ee:	cmp    edx,0x7
1003b0f1:	ja     0x1003b297
1003b0f7:	movzx  edx,BYTE PTR [edx+0x1003d164]
1003b0fe:	jmp    DWORD PTR [edx*4+0x1003d15c]
1003b105:	add    eax,0xffffffba
1003b108:	mov    ecx,eax
1003b10a:	and    ecx,0x1
1003b10d:	mov    DWORD PTR [esp+0x20],ecx
1003b111:	movsx  ecx,BYTE PTR [eax+0x100706c8]
1003b118:	movsx  eax,BYTE PTR [eax+0x100706d0]
1003b11f:	add    ebx,0x1
1003b122:	test   eax,eax
1003b124:	mov    DWORD PTR [esp+0x1c],ecx
1003b128:	mov    DWORD PTR [esp+0x14],eax
1003b12c:	jne    0x1003b16b
1003b12e:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b136:	jmp    0x1003b16b
1003b138:	xor    edx,edx
1003b13a:	cmp    cl,0x4d
1003b13d:	sete   dl
1003b140:	xor    eax,eax
1003b142:	mov    ah,BYTE PTR [ebx+0x1]
1003b145:	mov    DWORD PTR [esp+0x20],edx
1003b149:	mov    al,BYTE PTR [ebx+0x2]
1003b14c:	mov    DWORD PTR [esp+0x1c],eax
1003b150:	xor    eax,eax
1003b152:	mov    ah,BYTE PTR [ebx+0x3]
1003b155:	mov    al,BYTE PTR [ebx+0x4]
1003b158:	test   eax,eax
1003b15a:	mov    DWORD PTR [esp+0x14],eax
1003b15e:	jne    0x1003b168
1003b160:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003b168:	add    ebx,0x5
1003b16b:	test   esi,esi
1003b16d:	je     0x1003a53c
1003b173:	mov    eax,0x1
1003b178:	cmp    DWORD PTR [esp+0x1c],eax
1003b17c:	mov    DWORD PTR [esp+0x18],eax
1003b180:	jl     0x1003b1b6
1003b182:	mov    ecx,DWORD PTR [esp+0x110]
1003b189:	mov    edx,DWORD PTR [esp+0x24]
1003b18d:	push   ecx
1003b18e:	push   ebp
1003b18f:	mov    ecx,edi
1003b191:	mov    eax,esi
1003b193:	call   0x1003a450
1003b198:	add    esp,0x8
1003b19b:	test   eax,eax
1003b19d:	je     0x1003c69f
1003b1a3:	mov    eax,DWORD PTR [esp+0x18]
1003b1a7:	add    eax,0x1
1003b1aa:	add    ebp,esi
1003b1ac:	cmp    eax,DWORD PTR [esp+0x1c]
1003b1b0:	mov    DWORD PTR [esp+0x18],eax
1003b1b4:	jle    0x1003b182
1003b1b6:	mov    eax,DWORD PTR [esp+0x1c]
1003b1ba:	mov    ecx,DWORD PTR [esp+0x14]
1003b1be:	cmp    eax,ecx
1003b1c0:	je     0x1003a53c
1003b1c6:	cmp    DWORD PTR [esp+0x20],0x0
1003b1cb:	je     0x1003c917
1003b1d1:	mov    ecx,DWORD PTR [esp+0x110]
1003b1d8:	mov    edx,eax
1003b1da:	mov    eax,DWORD PTR [esp+0x11c]
1003b1e1:	add    eax,0x1
1003b1e4:	push   eax
1003b1e5:	push   0x0
1003b1e7:	mov    DWORD PTR [esp+0x24],eax
1003b1eb:	mov    eax,DWORD PTR [esp+0x11c]
1003b1f2:	push   eax
1003b1f3:	mov    eax,DWORD PTR [esp+0x110]
1003b1fa:	push   ecx
1003b1fb:	push   edi
1003b1fc:	mov    DWORD PTR [esp+0x2c],edx
1003b200:	mov    edx,DWORD PTR [esp+0x11c]
1003b207:	push   edx
1003b208:	push   eax
1003b209:	push   ebx
1003b20a:	push   ebp
1003b20b:	call   0x1003a4d0
1003b210:	add    esp,0x24
1003b213:	test   eax,eax
1003b215:	jne    0x1003cfc6
1003b21b:	jmp    0x1003b220
1003b21d:	lea    ecx,[ecx+0x0]
1003b220:	mov    ecx,DWORD PTR [esp+0x14]
1003b224:	cmp    DWORD PTR [esp+0x18],ecx
1003b228:	jge    0x1003c69f
1003b22e:	mov    edx,DWORD PTR [esp+0x110]
1003b235:	push   edx
1003b236:	mov    edx,DWORD PTR [esp+0x28]
1003b23a:	push   ebp
1003b23b:	mov    ecx,edi
1003b23d:	mov    eax,esi
1003b23f:	call   0x1003a450
1003b244:	add    esp,0x8
1003b247:	test   eax,eax
1003b249:	je     0x1003c69f
1003b24f:	mov    eax,DWORD PTR [esp+0x1c]
1003b253:	mov    ecx,DWORD PTR [esp+0x114]
1003b25a:	mov    edx,DWORD PTR [esp+0x110]
1003b261:	add    DWORD PTR [esp+0x18],0x1
1003b266:	push   eax
1003b267:	mov    eax,DWORD PTR [esp+0x10c]
1003b26e:	push   0x0
1003b270:	push   ecx
1003b271:	mov    ecx,DWORD PTR [esp+0x110]
1003b278:	push   edx
1003b279:	push   edi
1003b27a:	push   eax
1003b27b:	push   ecx
1003b27c:	add    ebp,esi
1003b27e:	push   ebx
1003b27f:	push   ebp
1003b280:	call   0x1003a4d0
1003b285:	add    esp,0x24
1003b288:	test   eax,eax
1003b28a:	je     0x1003b220
1003b28c:	pop    edi
1003b28d:	pop    esi
1003b28e:	pop    ebp
1003b28f:	pop    ebx
1003b290:	add    esp,0xe8
1003b296:	ret    
1003b297:	mov    edx,DWORD PTR [esp+0x110]
1003b29e:	push   edx
1003b29f:	mov    edx,DWORD PTR [esp+0x28]
1003b2a3:	push   ebp
1003b2a4:	mov    ecx,edi
1003b2a6:	mov    eax,esi
1003b2a8:	call   0x1003a450
1003b2ad:	add    esp,0x8
1003b2b0:	test   eax,eax
1003b2b2:	je     0x1003c69f
1003b2b8:	add    ebp,esi
1003b2ba:	jmp    0x1003a53c
1003b2bf:	mov    cl,BYTE PTR [ebx+0x21]
1003b2c2:	lea    eax,[ebx+0x1]
1003b2c5:	add    ebx,0x21
1003b2c8:	mov    DWORD PTR [esp+0x24],eax
1003b2cc:	movzx  eax,cl
1003b2cf:	lea    esi,[eax-0x46]
1003b2d2:	cmp    esi,0x7
1003b2d5:	ja     0x1003b345
1003b2d7:	movzx  esi,BYTE PTR [esi+0x1003d174]
1003b2de:	jmp    DWORD PTR [esi*4+0x1003d16c]
1003b2e5:	movsx  esi,BYTE PTR [eax+0x1007068a]
1003b2ec:	movsx  ecx,BYTE PTR [eax+0x10070682]
1003b2f3:	add    eax,0xffffffba
1003b2f6:	mov    edx,eax
1003b2f8:	add    ebx,0x1
1003b2fb:	and    edx,0x1
1003b2fe:	test   esi,esi
1003b300:	mov    DWORD PTR [esp+0x1c],ecx
1003b304:	mov    DWORD PTR [esp+0x14],esi
1003b308:	jne    0x1003b352
1003b30a:	mov    esi,0x7fffffff
1003b30f:	jmp    0x1003b34e
1003b311:	xor    edx,edx
1003b313:	cmp    cl,0x4d
1003b316:	sete   dl
1003b319:	xor    ecx,ecx
1003b31b:	mov    ch,BYTE PTR [ebx+0x3]
1003b31e:	xor    eax,eax
1003b320:	mov    ah,BYTE PTR [ebx+0x1]
1003b323:	mov    cl,BYTE PTR [ebx+0x4]
1003b326:	mov    al,BYTE PTR [ebx+0x2]
1003b329:	mov    esi,ecx
1003b32b:	test   esi,esi
1003b32d:	mov    DWORD PTR [esp+0x1c],eax
1003b331:	mov    DWORD PTR [esp+0x14],ecx
1003b335:	jne    0x1003b340
1003b337:	mov    esi,0x7fffffff
1003b33c:	mov    DWORD PTR [esp+0x14],esi
1003b340:	add    ebx,0x5
1003b343:	jmp    0x1003b352
1003b345:	mov    esi,0x1
1003b34a:	mov    DWORD PTR [esp+0x1c],esi
1003b34e:	mov    DWORD PTR [esp+0x14],esi
1003b352:	mov    eax,0x1
1003b357:	cmp    DWORD PTR [esp+0x1c],eax
1003b35b:	mov    DWORD PTR [esp+0x18],eax
1003b35f:	jl     0x1003b3a4
1003b361:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b364:	jae    0x1003c69f
1003b36a:	movzx  esi,BYTE PTR [ebp+0x0]
1003b36e:	mov    ecx,esi
1003b370:	and    ecx,0x7
1003b373:	mov    eax,0x1
1003b378:	shl    eax,cl
1003b37a:	mov    ecx,DWORD PTR [esp+0x24]
1003b37e:	shr    esi,0x3
1003b381:	mov    cl,BYTE PTR [esi+ecx*1]
1003b384:	add    ebp,0x1
1003b387:	test   cl,al
1003b389:	je     0x1003c69f
1003b38f:	mov    eax,DWORD PTR [esp+0x18]
1003b393:	add    eax,0x1
1003b396:	cmp    eax,DWORD PTR [esp+0x1c]
1003b39a:	mov    DWORD PTR [esp+0x18],eax
1003b39e:	jle    0x1003b361
1003b3a0:	mov    esi,DWORD PTR [esp+0x14]
1003b3a4:	mov    eax,DWORD PTR [esp+0x1c]
1003b3a8:	cmp    eax,esi
1003b3aa:	je     0x1003a53c
1003b3b0:	test   edx,edx
1003b3b2:	mov    DWORD PTR [esp+0x18],eax
1003b3b6:	je     0x1003c9b6
1003b3bc:	mov    eax,DWORD PTR [esp+0x11c]
1003b3c3:	mov    ecx,DWORD PTR [esp+0x110]
1003b3ca:	mov    edx,DWORD PTR [esp+0x108]
1003b3d1:	add    eax,0x1
1003b3d4:	push   eax
1003b3d5:	push   0x0
1003b3d7:	mov    DWORD PTR [esp+0x24],eax
1003b3db:	mov    eax,DWORD PTR [esp+0x11c]
1003b3e2:	push   eax
1003b3e3:	mov    eax,DWORD PTR [esp+0x110]
1003b3ea:	push   ecx
1003b3eb:	push   edi
1003b3ec:	push   edx
1003b3ed:	push   eax
1003b3ee:	push   ebx
1003b3ef:	push   ebp
1003b3f0:	call   0x1003a4d0
1003b3f5:	add    esp,0x24
1003b3f8:	test   eax,eax
1003b3fa:	jne    0x1003cfc6
1003b400:	cmp    DWORD PTR [esp+0x18],esi
1003b404:	jge    0x1003c69f
1003b40a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b40d:	jae    0x1003c69f
1003b413:	movzx  eax,BYTE PTR [ebp+0x0]
1003b417:	mov    ecx,eax
1003b419:	and    ecx,0x7
1003b41c:	mov    edx,0x1
1003b421:	shl    edx,cl
1003b423:	mov    ecx,DWORD PTR [esp+0x24]
1003b427:	shr    eax,0x3
1003b42a:	mov    al,BYTE PTR [eax+ecx*1]
1003b42d:	add    ebp,0x1
1003b430:	test   al,dl
1003b432:	je     0x1003c69f
1003b438:	mov    ecx,DWORD PTR [esp+0x1c]
1003b43c:	mov    edx,DWORD PTR [esp+0x114]
1003b443:	mov    eax,DWORD PTR [esp+0x110]
1003b44a:	add    DWORD PTR [esp+0x18],0x1
1003b44f:	push   ecx
1003b450:	mov    ecx,DWORD PTR [esp+0x10c]
1003b457:	push   0x0
1003b459:	push   edx
1003b45a:	mov    edx,DWORD PTR [esp+0x110]
1003b461:	push   eax
1003b462:	push   edi
1003b463:	push   ecx
1003b464:	push   edx
1003b465:	push   ebx
1003b466:	push   ebp
1003b467:	call   0x1003a4d0
1003b46c:	add    esp,0x24
1003b46f:	test   eax,eax
1003b471:	je     0x1003b400
1003b473:	pop    edi
1003b474:	pop    esi
1003b475:	pop    ebp
1003b476:	pop    ebx
1003b477:	add    esp,0xe8
1003b47d:	ret    
1003b47e:	mov    edx,DWORD PTR [edi+0x5c]
1003b481:	sub    edx,ebp
1003b483:	cmp    edx,0x1
1003b486:	jl     0x1003c69f
1003b48c:	mov    al,BYTE PTR [ebp+0x0]
1003b48f:	add    ebp,0x1
1003b492:	cmp    BYTE PTR [ebx+0x1],al
1003b495:	jne    0x1003c69f
1003b49b:	add    ebx,0x2
1003b49e:	jmp    0x1003a53c
1003b4a3:	mov    ecx,DWORD PTR [edi+0x5c]
1003b4a6:	sub    ecx,ebp
1003b4a8:	cmp    ecx,0x1
1003b4ab:	jl     0x1003c69f
1003b4b1:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b4b5:	mov    eax,DWORD PTR [edi+0x24]
1003b4b8:	movzx  edx,BYTE PTR [ebx+0x1]
1003b4bc:	mov    cl,BYTE PTR [ecx+eax*1]
1003b4bf:	add    ebp,0x1
1003b4c2:	cmp    BYTE PTR [edx+eax*1],cl
1003b4c5:	jne    0x1003c69f
1003b4cb:	add    ebx,0x2
1003b4ce:	jmp    0x1003a53c
1003b4d3:	xor    eax,eax
1003b4d5:	mov    ah,BYTE PTR [ebx+0x1]
1003b4d8:	add    ebx,0x3
1003b4db:	mov    al,BYTE PTR [ebx-0x1]
1003b4de:	mov    esi,eax
1003b4e0:	jmp    0x1003b55e
1003b4e5:	mov    DWORD PTR [esp+0x1c],0x1
1003b4ed:	xor    ecx,ecx
1003b4ef:	mov    ch,BYTE PTR [ebx+0x1]
1003b4f2:	xor    edx,edx
1003b4f4:	xor    eax,eax
1003b4f6:	cmp    BYTE PTR [ebx],0x26
1003b4f9:	sete   dl
1003b4fc:	add    ebx,0x3
1003b4ff:	mov    cl,BYTE PTR [ebx-0x1]
1003b502:	mov    DWORD PTR [esp+0x20],edx
1003b506:	mov    esi,ecx
1003b508:	jmp    0x1003b55e
1003b50a:	xor    eax,eax
1003b50c:	mov    DWORD PTR [esp+0x1c],0x1
1003b514:	add    ebx,0x1
1003b517:	jmp    0x1003b559
1003b519:	mov    eax,0x1
1003b51e:	mov    DWORD PTR [esp+0x1c],eax
1003b522:	add    ebx,eax
1003b524:	jmp    0x1003b559
1003b526:	mov    esi,0x1
1003b52b:	xor    eax,eax
1003b52d:	mov    DWORD PTR [esp+0x1c],esi
1003b531:	add    ebx,esi
1003b533:	jmp    0x1003b55e
1003b535:	movzx  ecx,BYTE PTR [ebx]
1003b538:	movsx  esi,BYTE PTR [ecx+0x100706b1]
1003b53f:	movsx  eax,BYTE PTR [ecx+0x100706a9]
1003b546:	sub    ecx,0x1f
1003b549:	mov    edx,ecx
1003b54b:	and    edx,0x1
1003b54e:	add    ebx,0x1
1003b551:	test   esi,esi
1003b553:	mov    DWORD PTR [esp+0x20],edx
1003b557:	jne    0x1003b55e
1003b559:	mov    esi,0x7fffffff
1003b55e:	mov    ecx,DWORD PTR [edi+0x5c]
1003b561:	sub    ecx,ebp
1003b563:	cmp    eax,ecx
1003b565:	jg     0x1003c69f
1003b56b:	movzx  ecx,BYTE PTR [ebx]
1003b56e:	add    ebx,0x1
1003b571:	test   BYTE PTR [esp+0x110],0x1
1003b579:	mov    DWORD PTR [esp+0x14],ecx
1003b57d:	mov    DWORD PTR [esp+0x18],0x1
1003b585:	je     0x1003b669
1003b58b:	cmp    eax,0x1
1003b58e:	mov    edx,DWORD PTR [esp+0x14]
1003b592:	mov    ecx,DWORD PTR [edi+0x24]
1003b595:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b599:	mov    DWORD PTR [esp+0x14],ecx
1003b59d:	jl     0x1003b5c7
1003b59f:	nop
1003b5a0:	movzx  edx,BYTE PTR [ebp+0x0]
1003b5a4:	mov    ecx,DWORD PTR [edi+0x24]
1003b5a7:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b5ab:	add    ebp,0x1
1003b5ae:	cmp    DWORD PTR [esp+0x14],ecx
1003b5b2:	jne    0x1003c69f
1003b5b8:	mov    ecx,DWORD PTR [esp+0x18]
1003b5bc:	add    ecx,0x1
1003b5bf:	cmp    ecx,eax
1003b5c1:	mov    DWORD PTR [esp+0x18],ecx
1003b5c5:	jle    0x1003b5a0
1003b5c7:	cmp    eax,esi
1003b5c9:	je     0x1003a53c
1003b5cf:	cmp    DWORD PTR [esp+0x20],0x0
1003b5d4:	jne    0x1003ca4f
1003b5da:	cmp    eax,esi
1003b5dc:	mov    DWORD PTR [esp+0x20],ebp
1003b5e0:	jge    0x1003b602
1003b5e2:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b5e5:	jae    0x1003b602
1003b5e7:	movzx  edx,BYTE PTR [ebp+0x0]
1003b5eb:	mov    ecx,DWORD PTR [edi+0x24]
1003b5ee:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b5f2:	cmp    DWORD PTR [esp+0x14],ecx
1003b5f6:	jne    0x1003b602
1003b5f8:	add    eax,0x1
1003b5fb:	add    ebp,0x1
1003b5fe:	cmp    eax,esi
1003b600:	jl     0x1003b5e2
1003b602:	cmp    DWORD PTR [esp+0x1c],0x0
1003b607:	jne    0x1003a53c
1003b60d:	cmp    ebp,DWORD PTR [esp+0x20]
1003b611:	jb     0x1003b65c
1003b613:	mov    esi,DWORD PTR [esp+0x11c]
1003b61a:	add    esi,0x1
1003b61d:	mov    edx,DWORD PTR [esp+0x114]
1003b624:	mov    eax,DWORD PTR [esp+0x110]
1003b62b:	mov    ecx,DWORD PTR [esp+0x108]
1003b632:	push   esi
1003b633:	push   0x0
1003b635:	push   edx
1003b636:	mov    edx,DWORD PTR [esp+0x110]
1003b63d:	push   eax
1003b63e:	push   edi
1003b63f:	push   ecx
1003b640:	push   edx
1003b641:	push   ebx
1003b642:	push   ebp
1003b643:	call   0x1003a4d0
1003b648:	add    esp,0x24
1003b64b:	sub    ebp,0x1
1003b64e:	test   eax,eax
1003b650:	jne    0x1003cfc6
1003b656:	cmp    ebp,DWORD PTR [esp+0x20]
1003b65a:	jae    0x1003b61d
1003b65c:	xor    eax,eax
1003b65e:	pop    edi
1003b65f:	pop    esi
1003b660:	pop    ebp
1003b661:	pop    ebx
1003b662:	add    esp,0xe8
1003b668:	ret    
1003b669:	cmp    eax,0x1
1003b66c:	jl     0x1003b694
1003b66e:	mov    edx,DWORD PTR [esp+0x14]
1003b672:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b676:	add    ebp,0x1
1003b679:	cmp    edx,ecx
1003b67b:	jne    0x1003c69f
1003b681:	mov    ecx,DWORD PTR [esp+0x18]
1003b685:	add    ecx,0x1
1003b688:	cmp    ecx,eax
1003b68a:	mov    DWORD PTR [esp+0x18],ecx
1003b68e:	jle    0x1003b672
1003b690:	mov    edx,DWORD PTR [esp+0x20]
1003b694:	cmp    eax,esi
1003b696:	je     0x1003a53c
1003b69c:	test   edx,edx
1003b69e:	jne    0x1003cb11
1003b6a4:	cmp    eax,esi
1003b6a6:	mov    ecx,ebp
1003b6a8:	mov    DWORD PTR [esp+0x20],ecx
1003b6ac:	jge    0x1003b6c7
1003b6ae:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b6b1:	jae    0x1003b6c7
1003b6b3:	movzx  edx,BYTE PTR [ebp+0x0]
1003b6b7:	cmp    DWORD PTR [esp+0x14],edx
1003b6bb:	jne    0x1003b6c7
1003b6bd:	add    eax,0x1
1003b6c0:	add    ebp,0x1
1003b6c3:	cmp    eax,esi
1003b6c5:	jl     0x1003b6ae
1003b6c7:	cmp    DWORD PTR [esp+0x1c],0x0
1003b6cc:	jne    0x1003a53c
1003b6d2:	cmp    ebp,ecx
1003b6d4:	jb     0x1003b71f
1003b6d6:	mov    esi,DWORD PTR [esp+0x11c]
1003b6dd:	add    esi,0x1
1003b6e0:	mov    ecx,DWORD PTR [esp+0x114]
1003b6e7:	mov    edx,DWORD PTR [esp+0x110]
1003b6ee:	mov    eax,DWORD PTR [esp+0x108]
1003b6f5:	push   esi
1003b6f6:	push   0x0
1003b6f8:	push   ecx
1003b6f9:	mov    ecx,DWORD PTR [esp+0x110]
1003b700:	push   edx
1003b701:	push   edi
1003b702:	push   eax
1003b703:	push   ecx
1003b704:	push   ebx
1003b705:	push   ebp
1003b706:	call   0x1003a4d0
1003b70b:	add    esp,0x24
1003b70e:	sub    ebp,0x1
1003b711:	test   eax,eax
1003b713:	jne    0x1003cfc6
1003b719:	cmp    ebp,DWORD PTR [esp+0x20]
1003b71d:	jae    0x1003b6e0
1003b71f:	xor    eax,eax
1003b721:	pop    edi
1003b722:	pop    esi
1003b723:	pop    ebp
1003b724:	pop    ebx
1003b725:	add    esp,0xe8
1003b72b:	ret    
1003b72c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b72f:	jae    0x1003c69f
1003b735:	movzx  esi,BYTE PTR [ebp+0x0]
1003b739:	add    ebx,0x1
1003b73c:	add    ebp,0x1
1003b73f:	test   BYTE PTR [esp+0x110],0x1
1003b747:	je     0x1003b76b
1003b749:	mov    eax,DWORD PTR [edi+0x24]
1003b74c:	movzx  ecx,BYTE PTR [ebx]
1003b74f:	mov    dl,BYTE PTR [eax+esi*1]
1003b752:	add    ebx,0x1
1003b755:	cmp    BYTE PTR [ecx+eax*1],dl
1003b758:	jne    0x1003a53c
1003b75e:	xor    eax,eax
1003b760:	pop    edi
1003b761:	pop    esi
1003b762:	pop    ebp
1003b763:	pop    ebx
1003b764:	add    esp,0xe8
1003b76a:	ret    
1003b76b:	movzx  eax,BYTE PTR [ebx]
1003b76e:	add    ebx,0x1
1003b771:	cmp    eax,esi
1003b773:	jne    0x1003a53c
1003b779:	xor    eax,eax
1003b77b:	pop    edi
1003b77c:	pop    esi
1003b77d:	pop    ebp
1003b77e:	pop    ebx
1003b77f:	add    esp,0xe8
1003b785:	ret    
1003b786:	xor    ecx,ecx
1003b788:	mov    ch,BYTE PTR [ebx+0x1]
1003b78b:	add    ebx,0x3
1003b78e:	mov    cl,BYTE PTR [ebx-0x1]
1003b791:	mov    esi,ecx
1003b793:	mov    eax,esi
1003b795:	jmp    0x1003b824
1003b79a:	xor    edx,edx
1003b79c:	mov    dh,BYTE PTR [ebx+0x1]
1003b79f:	xor    eax,eax
1003b7a1:	mov    dl,BYTE PTR [ebx+0x2]
1003b7a4:	mov    esi,edx
1003b7a6:	xor    edx,edx
1003b7a8:	cmp    BYTE PTR [ebx],0x33
1003b7ab:	sete   dl
1003b7ae:	add    ebx,0x3
1003b7b1:	mov    DWORD PTR [esp+0x20],edx
1003b7b5:	jmp    0x1003b824
1003b7b7:	xor    eax,eax
1003b7b9:	mov    DWORD PTR [esp+0x1c],0x1
1003b7c1:	add    ebx,0x1
1003b7c4:	jmp    0x1003b81f
1003b7c6:	mov    eax,0x1
1003b7cb:	mov    DWORD PTR [esp+0x1c],eax
1003b7cf:	add    ebx,eax
1003b7d1:	jmp    0x1003b81f
1003b7d3:	mov    esi,0x1
1003b7d8:	xor    eax,eax
1003b7da:	mov    DWORD PTR [esp+0x1c],esi
1003b7de:	add    ebx,esi
1003b7e0:	jmp    0x1003b824
1003b7e2:	xor    ecx,ecx
1003b7e4:	mov    ch,BYTE PTR [ebx+0x1]
1003b7e7:	xor    eax,eax
1003b7e9:	mov    DWORD PTR [esp+0x1c],0x1
1003b7f1:	add    ebx,0x3
1003b7f4:	mov    cl,BYTE PTR [ebx-0x1]
1003b7f7:	mov    esi,ecx
1003b7f9:	jmp    0x1003b824
1003b7fb:	movzx  ecx,BYTE PTR [ebx]
1003b7fe:	movsx  esi,BYTE PTR [ecx+0x100706a4]
1003b805:	movsx  eax,BYTE PTR [ecx+0x1007069c]
1003b80c:	sub    ecx,0x2c
1003b80f:	mov    edx,ecx
1003b811:	and    edx,0x1
1003b814:	add    ebx,0x1
1003b817:	test   esi,esi
1003b819:	mov    DWORD PTR [esp+0x20],edx
1003b81d:	jne    0x1003b824
1003b81f:	mov    esi,0x7fffffff
1003b824:	mov    ecx,DWORD PTR [edi+0x5c]
1003b827:	sub    ecx,ebp
1003b829:	cmp    eax,ecx
1003b82b:	jg     0x1003c69f
1003b831:	movzx  ecx,BYTE PTR [ebx]
1003b834:	add    ebx,0x1
1003b837:	test   BYTE PTR [esp+0x110],0x1
1003b83f:	mov    DWORD PTR [esp+0x14],ecx
1003b843:	mov    DWORD PTR [esp+0x18],0x1
1003b84b:	je     0x1003b92e
1003b851:	cmp    eax,0x1
1003b854:	mov    edx,DWORD PTR [esp+0x14]
1003b858:	mov    ecx,DWORD PTR [edi+0x24]
1003b85b:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003b85f:	mov    DWORD PTR [esp+0x14],ecx
1003b863:	jl     0x1003b88c
1003b865:	movzx  edx,BYTE PTR [ebp+0x0]
1003b869:	mov    ecx,DWORD PTR [edi+0x24]
1003b86c:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b870:	add    ebp,0x1
1003b873:	cmp    DWORD PTR [esp+0x14],ecx
1003b877:	je     0x1003c69f
1003b87d:	mov    ecx,DWORD PTR [esp+0x18]
1003b881:	add    ecx,0x1
1003b884:	cmp    ecx,eax
1003b886:	mov    DWORD PTR [esp+0x18],ecx
1003b88a:	jle    0x1003b865
1003b88c:	cmp    eax,esi
1003b88e:	je     0x1003a53c
1003b894:	cmp    DWORD PTR [esp+0x20],0x0
1003b899:	jne    0x1003cbca
1003b89f:	cmp    eax,esi
1003b8a1:	mov    DWORD PTR [esp+0x20],ebp
1003b8a5:	jge    0x1003b8c7
1003b8a7:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b8aa:	jae    0x1003b8c7
1003b8ac:	movzx  edx,BYTE PTR [ebp+0x0]
1003b8b0:	mov    ecx,DWORD PTR [edi+0x24]
1003b8b3:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003b8b7:	cmp    DWORD PTR [esp+0x14],ecx
1003b8bb:	je     0x1003b8c7
1003b8bd:	add    eax,0x1
1003b8c0:	add    ebp,0x1
1003b8c3:	cmp    eax,esi
1003b8c5:	jl     0x1003b8a7
1003b8c7:	cmp    DWORD PTR [esp+0x1c],0x0
1003b8cc:	jne    0x1003a53c
1003b8d2:	cmp    ebp,DWORD PTR [esp+0x20]
1003b8d6:	jb     0x1003b921
1003b8d8:	mov    esi,DWORD PTR [esp+0x11c]
1003b8df:	add    esi,0x1
1003b8e2:	mov    edx,DWORD PTR [esp+0x114]
1003b8e9:	mov    eax,DWORD PTR [esp+0x110]
1003b8f0:	mov    ecx,DWORD PTR [esp+0x108]
1003b8f7:	push   esi
1003b8f8:	push   0x0
1003b8fa:	push   edx
1003b8fb:	mov    edx,DWORD PTR [esp+0x110]
1003b902:	push   eax
1003b903:	push   edi
1003b904:	push   ecx
1003b905:	push   edx
1003b906:	push   ebx
1003b907:	push   ebp
1003b908:	call   0x1003a4d0
1003b90d:	add    esp,0x24
1003b910:	test   eax,eax
1003b912:	jne    0x1003cfc6
1003b918:	sub    ebp,0x1
1003b91b:	cmp    ebp,DWORD PTR [esp+0x20]
1003b91f:	jae    0x1003b8e2
1003b921:	xor    eax,eax
1003b923:	pop    edi
1003b924:	pop    esi
1003b925:	pop    ebp
1003b926:	pop    ebx
1003b927:	add    esp,0xe8
1003b92d:	ret    
1003b92e:	cmp    eax,0x1
1003b931:	jl     0x1003b959
1003b933:	mov    edx,DWORD PTR [esp+0x14]
1003b937:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b93b:	add    ebp,0x1
1003b93e:	cmp    edx,ecx
1003b940:	je     0x1003c69f
1003b946:	mov    ecx,DWORD PTR [esp+0x18]
1003b94a:	add    ecx,0x1
1003b94d:	cmp    ecx,eax
1003b94f:	mov    DWORD PTR [esp+0x18],ecx
1003b953:	jle    0x1003b937
1003b955:	mov    edx,DWORD PTR [esp+0x20]
1003b959:	cmp    eax,esi
1003b95b:	je     0x1003a53c
1003b961:	test   edx,edx
1003b963:	jne    0x1003cc83
1003b969:	cmp    eax,esi
1003b96b:	mov    ecx,ebp
1003b96d:	mov    DWORD PTR [esp+0x20],ecx
1003b971:	jge    0x1003b98c
1003b973:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b976:	jae    0x1003b98c
1003b978:	movzx  edx,BYTE PTR [ebp+0x0]
1003b97c:	cmp    DWORD PTR [esp+0x14],edx
1003b980:	je     0x1003b98c
1003b982:	add    eax,0x1
1003b985:	add    ebp,0x1
1003b988:	cmp    eax,esi
1003b98a:	jl     0x1003b973
1003b98c:	cmp    DWORD PTR [esp+0x1c],0x0
1003b991:	jne    0x1003a53c
1003b997:	cmp    ebp,ecx
1003b999:	jb     0x1003b9e4
1003b99b:	mov    esi,DWORD PTR [esp+0x11c]
1003b9a2:	add    esi,0x1
1003b9a5:	mov    ecx,DWORD PTR [esp+0x114]
1003b9ac:	mov    edx,DWORD PTR [esp+0x110]
1003b9b3:	mov    eax,DWORD PTR [esp+0x108]
1003b9ba:	push   esi
1003b9bb:	push   0x0
1003b9bd:	push   ecx
1003b9be:	mov    ecx,DWORD PTR [esp+0x110]
1003b9c5:	push   edx
1003b9c6:	push   edi
1003b9c7:	push   eax
1003b9c8:	push   ecx
1003b9c9:	push   ebx
1003b9ca:	push   ebp
1003b9cb:	call   0x1003a4d0
1003b9d0:	add    esp,0x24
1003b9d3:	test   eax,eax
1003b9d5:	jne    0x1003cfc6
1003b9db:	sub    ebp,0x1
1003b9de:	cmp    ebp,DWORD PTR [esp+0x20]
1003b9e2:	jae    0x1003b9a5
1003b9e4:	xor    eax,eax
1003b9e6:	pop    edi
1003b9e7:	pop    esi
1003b9e8:	pop    ebp
1003b9e9:	pop    ebx
1003b9ea:	add    esp,0xe8
1003b9f0:	ret    
1003b9f1:	xor    eax,eax
1003b9f3:	mov    ah,BYTE PTR [ebx+0x1]
1003b9f6:	mov    DWORD PTR [esp+0x20],0x1
1003b9fe:	add    ebx,0x3
1003ba01:	mov    al,BYTE PTR [ebx-0x1]
1003ba04:	mov    esi,eax
1003ba06:	mov    DWORD PTR [esp+0x14],esi
1003ba0a:	jmp    0x1003baab
1003ba0f:	xor    ecx,ecx
1003ba11:	mov    ch,BYTE PTR [ebx+0x1]
1003ba14:	xor    edx,edx
1003ba16:	xor    esi,esi
1003ba18:	cmp    BYTE PTR [ebx],0x40
1003ba1b:	sete   dl
1003ba1e:	add    ebx,0x3
1003ba21:	mov    cl,BYTE PTR [ebx-0x1]
1003ba24:	mov    DWORD PTR [esp+0x20],edx
1003ba28:	mov    DWORD PTR [esp+0x14],ecx
1003ba2c:	jmp    0x1003baab
1003ba31:	xor    esi,esi
1003ba33:	mov    DWORD PTR [esp+0x1c],0x1
1003ba3b:	add    ebx,0x1
1003ba3e:	jmp    0x1003baa3
1003ba40:	mov    esi,0x1
1003ba45:	mov    DWORD PTR [esp+0x1c],esi
1003ba49:	add    ebx,esi
1003ba4b:	jmp    0x1003baa3
1003ba4d:	mov    eax,0x1
1003ba52:	xor    esi,esi
1003ba54:	mov    DWORD PTR [esp+0x1c],eax
1003ba58:	mov    DWORD PTR [esp+0x14],eax
1003ba5c:	add    ebx,eax
1003ba5e:	jmp    0x1003baab
1003ba60:	xor    eax,eax
1003ba62:	mov    ah,BYTE PTR [ebx+0x1]
1003ba65:	xor    esi,esi
1003ba67:	mov    DWORD PTR [esp+0x1c],0x1
1003ba6f:	add    ebx,0x3
1003ba72:	mov    al,BYTE PTR [ebx-0x1]
1003ba75:	mov    DWORD PTR [esp+0x14],eax
1003ba79:	jmp    0x1003baab
1003ba7b:	movzx  eax,BYTE PTR [ebx]
1003ba7e:	movsx  esi,BYTE PTR [eax+0x1007068f]
1003ba85:	sub    eax,0x39
1003ba88:	mov    ecx,eax
1003ba8a:	movsx  eax,BYTE PTR [eax+0x100706d0]
1003ba91:	and    ecx,0x1
1003ba94:	add    ebx,0x1
1003ba97:	test   eax,eax
1003ba99:	mov    DWORD PTR [esp+0x20],ecx
1003ba9d:	mov    DWORD PTR [esp+0x14],eax
1003baa1:	jne    0x1003baab
1003baa3:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003baab:	mov    edx,DWORD PTR [edi+0x5c]
1003baae:	movzx  eax,BYTE PTR [ebx]
1003bab1:	mov    ecx,edx
1003bab3:	sub    ecx,ebp
1003bab5:	add    ebx,0x1
1003bab8:	cmp    esi,ecx
1003baba:	mov    DWORD PTR [esp+0x24],eax
1003babe:	jg     0x1003c69f
1003bac4:	test   esi,esi
1003bac6:	jle    0x1003bdfc
1003bacc:	add    eax,0xfffffffa
1003bacf:	cmp    eax,0xf
1003bad2:	ja     0x1003cd3a
1003bad8:	jmp    DWORD PTR [eax*4+0x1003d17c]
1003badf:	cmp    esi,0x1
1003bae2:	mov    DWORD PTR [esp+0x18],0x1
1003baea:	jl     0x1003bdfc
1003baf0:	mov    ecx,DWORD PTR [edi+0x18]
1003baf3:	test   ecx,ecx
1003baf5:	je     0x1003bb26
1003baf7:	mov    eax,DWORD PTR [edi+0x5c]
1003bafa:	cmp    ebp,eax
1003bafc:	jae    0x1003bb4f
1003bafe:	mov    edi,DWORD PTR [esp+0x10c]
1003bb05:	push   ecx
1003bb06:	add    edi,0x1c
1003bb09:	xor    edx,edx
1003bb0b:	mov    ecx,ebp
1003bb0d:	call   0x10042e70
1003bb12:	add    esp,0x4
1003bb15:	test   eax,eax
1003bb17:	jne    0x1003c69f
1003bb1d:	mov    edi,DWORD PTR [esp+0x10c]
1003bb24:	jmp    0x1003bb4f
1003bb26:	mov    eax,DWORD PTR [edi+0x1c]
1003bb29:	mov    edx,DWORD PTR [edi+0x5c]
1003bb2c:	sub    edx,eax
1003bb2e:	cmp    ebp,edx
1003bb30:	ja     0x1003bb4f
1003bb32:	mov    cl,BYTE PTR [ebp+0x0]
1003bb35:	cmp    cl,BYTE PTR [edi+0x20]
1003bb38:	jne    0x1003bb4f
1003bb3a:	cmp    eax,0x1
1003bb3d:	je     0x1003c69f
1003bb43:	mov    dl,BYTE PTR [ebp+0x1]
1003bb46:	cmp    dl,BYTE PTR [edi+0x21]
1003bb49:	je     0x1003c69f
1003bb4f:	mov    eax,DWORD PTR [esp+0x18]
1003bb53:	add    eax,0x1
1003bb56:	add    ebp,0x1
1003bb59:	cmp    eax,esi
1003bb5b:	mov    DWORD PTR [esp+0x18],eax
1003bb5f:	jle    0x1003baf0
1003bb61:	jmp    0x1003bdfc
1003bb66:	add    ebp,esi
1003bb68:	jmp    0x1003bdfc
1003bb6d:	mov    ecx,0x1
1003bb72:	cmp    esi,ecx
1003bb74:	jl     0x1003bdfc
1003bb7a:	lea    ebx,[ebx+0x0]
1003bb80:	cmp    ebp,edx
1003bb82:	jae    0x1003c69f
1003bb88:	movzx  eax,BYTE PTR [ebp+0x0]
1003bb8c:	sub    eax,0xa
1003bb8f:	add    ebp,0x1
1003bb92:	cmp    eax,0x7b
1003bb95:	ja     0x1003c69f
1003bb9b:	movzx  eax,BYTE PTR [eax+0x1003d1cc]
1003bba2:	jmp    DWORD PTR [eax*4+0x1003d1bc]
1003bba9:	cmp    ebp,edx
1003bbab:	jae    0x1003bbc2
1003bbad:	cmp    BYTE PTR [ebp+0x0],0xa
1003bbb1:	jne    0x1003bbc2
1003bbb3:	add    ebp,0x1
1003bbb6:	jmp    0x1003bbc2
1003bbb8:	cmp    DWORD PTR [edi+0x50],0x0
1003bbbc:	jne    0x1003c69f
1003bbc2:	add    ecx,0x1
1003bbc5:	cmp    ecx,esi
1003bbc7:	jle    0x1003bb80
1003bbc9:	jmp    0x1003bdfc
1003bbce:	mov    ecx,0x1
1003bbd3:	cmp    esi,ecx
1003bbd5:	jl     0x1003bdfc
1003bbdb:	jmp    0x1003bbe0
1003bbdd:	lea    ecx,[ecx+0x0]
1003bbe0:	cmp    ebp,edx
1003bbe2:	jae    0x1003c69f
1003bbe8:	movzx  eax,BYTE PTR [ebp+0x0]
1003bbec:	add    ebp,0x1
1003bbef:	cmp    eax,0x9
1003bbf2:	je     0x1003c69f
1003bbf8:	cmp    eax,0x20
1003bbfb:	je     0x1003c69f
1003bc01:	cmp    eax,0xa0
1003bc06:	je     0x1003c69f
1003bc0c:	add    ecx,0x1
1003bc0f:	cmp    ecx,esi
1003bc11:	jle    0x1003bbe0
1003bc13:	jmp    0x1003bdfc
1003bc18:	mov    ecx,0x1
1003bc1d:	cmp    esi,ecx
1003bc1f:	jl     0x1003bdfc
1003bc25:	cmp    ebp,edx
1003bc27:	jae    0x1003c69f
1003bc2d:	movzx  eax,BYTE PTR [ebp+0x0]
1003bc31:	add    ebp,0x1
1003bc34:	cmp    eax,0x9
1003bc37:	je     0x1003bc49
1003bc39:	cmp    eax,0x20
1003bc3c:	je     0x1003bc49
1003bc3e:	cmp    eax,0xa0
1003bc43:	jne    0x1003c69f
1003bc49:	add    ecx,0x1
1003bc4c:	cmp    ecx,esi
1003bc4e:	jle    0x1003bc25
1003bc50:	jmp    0x1003bdfc
1003bc55:	mov    ecx,0x1
1003bc5a:	cmp    esi,ecx
1003bc5c:	jl     0x1003bdfc
1003bc62:	cmp    ebp,edx
1003bc64:	jae    0x1003c69f
1003bc6a:	movzx  eax,BYTE PTR [ebp+0x0]
1003bc6e:	add    ebp,0x1
1003bc71:	cmp    eax,0xa
1003bc74:	jl     0x1003bc8a
1003bc76:	cmp    eax,0xd
1003bc79:	jle    0x1003c69f
1003bc7f:	cmp    eax,0x85
1003bc84:	je     0x1003c69f
1003bc8a:	add    ecx,0x1
1003bc8d:	cmp    ecx,esi
1003bc8f:	jle    0x1003bc62
1003bc91:	jmp    0x1003bdfc
1003bc96:	mov    ecx,0x1
1003bc9b:	cmp    esi,ecx
1003bc9d:	jl     0x1003bdfc
1003bca3:	cmp    ebp,edx
1003bca5:	jae    0x1003c69f
1003bcab:	movzx  eax,BYTE PTR [ebp+0x0]
1003bcaf:	add    ebp,0x1
1003bcb2:	cmp    eax,0xa
1003bcb5:	jl     0x1003c69f
1003bcbb:	cmp    eax,0xd
1003bcbe:	jle    0x1003bccb
1003bcc0:	cmp    eax,0x85
1003bcc5:	jne    0x1003c69f
1003bccb:	add    ecx,0x1
1003bcce:	cmp    ecx,esi
1003bcd0:	jle    0x1003bca3
1003bcd2:	jmp    0x1003bdfc
1003bcd7:	mov    eax,0x1
1003bcdc:	cmp    esi,eax
1003bcde:	jl     0x1003bdfc
1003bce4:	mov    ecx,DWORD PTR [edi+0x28]
1003bce7:	jmp    0x1003bcf0
1003bce9:	lea    esp,[esp+0x0]
1003bcf0:	movzx  edx,BYTE PTR [ebp+0x0]
1003bcf4:	mov    dl,BYTE PTR [edx+ecx*1]
1003bcf7:	and    dl,0x4
1003bcfa:	add    ebp,0x1
1003bcfd:	test   dl,dl
1003bcff:	jne    0x1003c69f
1003bd05:	add    eax,0x1
1003bd08:	cmp    eax,esi
1003bd0a:	jle    0x1003bcf0
1003bd0c:	jmp    0x1003bdfc
1003bd11:	mov    eax,0x1
1003bd16:	cmp    esi,eax
1003bd18:	jl     0x1003bdfc
1003bd1e:	mov    ecx,DWORD PTR [edi+0x28]
1003bd21:	movzx  edx,BYTE PTR [ebp+0x0]
1003bd25:	mov    dl,BYTE PTR [edx+ecx*1]
1003bd28:	and    dl,0x4
1003bd2b:	add    ebp,0x1
1003bd2e:	test   dl,dl
1003bd30:	je     0x1003c69f
1003bd36:	add    eax,0x1
1003bd39:	cmp    eax,esi
1003bd3b:	jle    0x1003bd21
1003bd3d:	jmp    0x1003bdfc
1003bd42:	mov    eax,0x1
1003bd47:	cmp    esi,eax
1003bd49:	jl     0x1003bdfc
1003bd4f:	mov    ecx,DWORD PTR [edi+0x28]
1003bd52:	movzx  edx,BYTE PTR [ebp+0x0]
1003bd56:	mov    dl,BYTE PTR [edx+ecx*1]
1003bd59:	and    dl,0x1
1003bd5c:	add    ebp,0x1
1003bd5f:	test   dl,dl
1003bd61:	jne    0x1003c69f
1003bd67:	add    eax,0x1
1003bd6a:	cmp    eax,esi
1003bd6c:	jle    0x1003bd52
1003bd6e:	jmp    0x1003bdfc
1003bd73:	mov    eax,0x1
1003bd78:	cmp    esi,eax
1003bd7a:	jl     0x1003bdfc
1003bd80:	mov    ecx,DWORD PTR [edi+0x28]
1003bd83:	movzx  edx,BYTE PTR [ebp+0x0]
1003bd87:	mov    dl,BYTE PTR [edx+ecx*1]
1003bd8a:	and    dl,0x1
1003bd8d:	add    ebp,0x1
1003bd90:	test   dl,dl
1003bd92:	je     0x1003c69f
1003bd98:	add    eax,0x1
1003bd9b:	cmp    eax,esi
1003bd9d:	jle    0x1003bd83
1003bd9f:	jmp    0x1003bdfc
1003bda1:	mov    eax,0x1
1003bda6:	cmp    esi,eax
1003bda8:	jl     0x1003bdfc
1003bdaa:	mov    ecx,DWORD PTR [edi+0x28]
1003bdad:	lea    ecx,[ecx+0x0]
1003bdb0:	movzx  edx,BYTE PTR [ebp+0x0]
1003bdb4:	mov    dl,BYTE PTR [edx+ecx*1]
1003bdb7:	and    dl,0x10
1003bdba:	add    ebp,0x1
1003bdbd:	test   dl,dl
1003bdbf:	jne    0x1003c69f
1003bdc5:	add    eax,0x1
1003bdc8:	cmp    eax,esi
1003bdca:	jle    0x1003bdb0
1003bdcc:	jmp    0x1003bdfc
1003bdce:	mov    eax,0x1
1003bdd3:	cmp    esi,eax
1003bdd5:	jl     0x1003bdfc
1003bdd7:	mov    ecx,DWORD PTR [edi+0x28]
1003bdda:	lea    ebx,[ebx+0x0]
1003bde0:	movzx  edx,BYTE PTR [ebp+0x0]
1003bde4:	mov    dl,BYTE PTR [edx+ecx*1]
1003bde7:	and    dl,0x10
1003bdea:	add    ebp,0x1
1003bded:	test   dl,dl
1003bdef:	je     0x1003c69f
1003bdf5:	add    eax,0x1
1003bdf8:	cmp    eax,esi
1003bdfa:	jle    0x1003bde0
1003bdfc:	cmp    esi,DWORD PTR [esp+0x14]
1003be00:	je     0x1003a53c
1003be06:	cmp    DWORD PTR [esp+0x20],0x0
1003be0b:	jne    0x1003cd4a
1003be11:	mov    eax,DWORD PTR [esp+0x24]
1003be15:	add    eax,0xfffffffa
1003be18:	cmp    eax,0xf
1003be1b:	mov    DWORD PTR [esp+0x20],ebp
1003be1f:	ja     0x1003cd3a
1003be25:	jmp    DWORD PTR [eax*4+0x1003d248]
1003be2c:	cmp    esi,DWORD PTR [esp+0x14]
1003be30:	jge    0x1003c175
1003be36:	mov    eax,DWORD PTR [edi+0x5c]
1003be39:	cmp    ebp,eax
1003be3b:	jae    0x1003c175
1003be41:	mov    ecx,DWORD PTR [edi+0x18]
1003be44:	test   ecx,ecx
1003be46:	je     0x1003be70
1003be48:	mov    edi,DWORD PTR [esp+0x10c]
1003be4f:	push   ecx
1003be50:	add    edi,0x1c
1003be53:	xor    edx,edx
1003be55:	mov    ecx,ebp
1003be57:	call   0x10042e70
1003be5c:	add    esp,0x4
1003be5f:	test   eax,eax
1003be61:	jne    0x1003c175
1003be67:	mov    edi,DWORD PTR [esp+0x10c]
1003be6e:	jmp    0x1003be96
1003be70:	mov    ecx,DWORD PTR [edi+0x1c]
1003be73:	sub    eax,ecx
1003be75:	cmp    ebp,eax
1003be77:	ja     0x1003be96
1003be79:	mov    al,BYTE PTR [ebp+0x0]
1003be7c:	cmp    al,BYTE PTR [edi+0x20]
1003be7f:	jne    0x1003be96
1003be81:	cmp    ecx,0x1
1003be84:	je     0x1003c175
1003be8a:	mov    cl,BYTE PTR [ebp+0x1]
1003be8d:	cmp    cl,BYTE PTR [edi+0x21]
1003be90:	je     0x1003c175
1003be96:	add    esi,0x1
1003be99:	add    ebp,0x1
1003be9c:	cmp    esi,DWORD PTR [esp+0x14]
1003bea0:	jl     0x1003be36
1003bea2:	jmp    0x1003c175
1003bea7:	mov    eax,DWORD PTR [esp+0x14]
1003beab:	mov    edi,DWORD PTR [edi+0x5c]
1003beae:	sub    eax,esi
1003beb0:	sub    edi,ebp
1003beb2:	cmp    eax,edi
1003beb4:	jbe    0x1003beb8
1003beb6:	mov    eax,edi
1003beb8:	add    ebp,eax
1003beba:	jmp    0x1003c175
1003bebf:	cmp    esi,DWORD PTR [esp+0x14]
1003bec3:	jge    0x1003c175
1003bec9:	mov    ecx,DWORD PTR [edi+0x5c]
1003becc:	cmp    ebp,ecx
1003bece:	jae    0x1003c175
1003bed4:	movzx  eax,BYTE PTR [ebp+0x0]
1003bed8:	cmp    eax,0xd
1003bedb:	jne    0x1003bef0
1003bedd:	add    ebp,0x1
1003bee0:	cmp    ebp,ecx
1003bee2:	jae    0x1003c175
1003bee8:	cmp    BYTE PTR [ebp+0x0],0xa
1003beec:	jne    0x1003bf17
1003beee:	jmp    0x1003bf14
1003bef0:	cmp    eax,0xa
1003bef3:	je     0x1003bf14
1003bef5:	cmp    DWORD PTR [edi+0x50],0x0
1003bef9:	jne    0x1003c175
1003beff:	cmp    eax,0xb
1003bf02:	je     0x1003bf14
1003bf04:	cmp    eax,0xc
1003bf07:	je     0x1003bf14
1003bf09:	cmp    eax,0x85
1003bf0e:	jne    0x1003c175
1003bf14:	add    ebp,0x1
1003bf17:	add    esi,0x1
1003bf1a:	cmp    esi,DWORD PTR [esp+0x14]
1003bf1e:	jl     0x1003becc
1003bf20:	jmp    0x1003c175
1003bf25:	cmp    esi,DWORD PTR [esp+0x14]
1003bf29:	jge    0x1003c175
1003bf2f:	mov    edi,DWORD PTR [edi+0x5c]
1003bf32:	cmp    ebp,edi
1003bf34:	jae    0x1003c175
1003bf3a:	movzx  eax,BYTE PTR [ebp+0x0]
1003bf3e:	cmp    eax,0x9
1003bf41:	je     0x1003c175
1003bf47:	cmp    eax,0x20
1003bf4a:	je     0x1003c175
1003bf50:	cmp    eax,0xa0
1003bf55:	je     0x1003c175
1003bf5b:	add    esi,0x1
1003bf5e:	add    ebp,0x1
1003bf61:	cmp    esi,DWORD PTR [esp+0x14]
1003bf65:	jl     0x1003bf32
1003bf67:	jmp    0x1003c175
1003bf6c:	cmp    esi,DWORD PTR [esp+0x14]
1003bf70:	jge    0x1003c175
1003bf76:	mov    edi,DWORD PTR [edi+0x5c]
1003bf79:	cmp    ebp,edi
1003bf7b:	jae    0x1003c175
1003bf81:	movzx  eax,BYTE PTR [ebp+0x0]
1003bf85:	cmp    eax,0x9
1003bf88:	je     0x1003bf9a
1003bf8a:	cmp    eax,0x20
1003bf8d:	je     0x1003bf9a
1003bf8f:	cmp    eax,0xa0
1003bf94:	jne    0x1003c175
1003bf9a:	add    esi,0x1
1003bf9d:	add    ebp,0x1
1003bfa0:	cmp    esi,DWORD PTR [esp+0x14]
1003bfa4:	jl     0x1003bf79
1003bfa6:	jmp    0x1003c175
1003bfab:	cmp    esi,DWORD PTR [esp+0x14]
1003bfaf:	jge    0x1003c175
1003bfb5:	mov    edi,DWORD PTR [edi+0x5c]
1003bfb8:	cmp    ebp,edi
1003bfba:	jae    0x1003c175
1003bfc0:	movzx  eax,BYTE PTR [ebp+0x0]
1003bfc4:	cmp    eax,0xa
1003bfc7:	je     0x1003c175
1003bfcd:	cmp    eax,0xb
1003bfd0:	je     0x1003c175
1003bfd6:	cmp    eax,0xc
1003bfd9:	je     0x1003c175
1003bfdf:	cmp    eax,0xd
1003bfe2:	je     0x1003c175
1003bfe8:	cmp    eax,0x85
1003bfed:	je     0x1003c175
1003bff3:	add    esi,0x1
1003bff6:	add    ebp,0x1
1003bff9:	cmp    esi,DWORD PTR [esp+0x14]
1003bffd:	jl     0x1003bfb8
1003bfff:	jmp    0x1003c175
1003c004:	cmp    esi,DWORD PTR [esp+0x14]
1003c008:	jge    0x1003c175
1003c00e:	mov    edi,DWORD PTR [edi+0x5c]
1003c011:	cmp    ebp,edi
1003c013:	jae    0x1003c175
1003c019:	movzx  eax,BYTE PTR [ebp+0x0]
1003c01d:	cmp    eax,0xa
1003c020:	je     0x1003c03c
1003c022:	cmp    eax,0xb
1003c025:	je     0x1003c03c
1003c027:	cmp    eax,0xc
1003c02a:	je     0x1003c03c
1003c02c:	cmp    eax,0xd
1003c02f:	je     0x1003c03c
1003c031:	cmp    eax,0x85
1003c036:	jne    0x1003c175
1003c03c:	add    esi,0x1
1003c03f:	add    ebp,0x1
1003c042:	cmp    esi,DWORD PTR [esp+0x14]
1003c046:	jl     0x1003c011
1003c048:	jmp    0x1003c175
1003c04d:	cmp    esi,DWORD PTR [esp+0x14]
1003c051:	jge    0x1003c175
1003c057:	mov    eax,DWORD PTR [edi+0x5c]
1003c05a:	lea    ebx,[ebx+0x0]
1003c060:	cmp    ebp,eax
1003c062:	jae    0x1003c175
1003c068:	movzx  edx,BYTE PTR [ebp+0x0]
1003c06c:	mov    ecx,DWORD PTR [edi+0x28]
1003c06f:	test   BYTE PTR [edx+ecx*1],0x4
1003c073:	jne    0x1003c175
1003c079:	add    esi,0x1
1003c07c:	add    ebp,0x1
1003c07f:	cmp    esi,DWORD PTR [esp+0x14]
1003c083:	jl     0x1003c060
1003c085:	jmp    0x1003c175
1003c08a:	cmp    esi,DWORD PTR [esp+0x14]
1003c08e:	jge    0x1003c175
1003c094:	mov    eax,DWORD PTR [edi+0x5c]
1003c097:	cmp    ebp,eax
1003c099:	jae    0x1003c175
1003c09f:	movzx  edx,BYTE PTR [ebp+0x0]
1003c0a3:	mov    ecx,DWORD PTR [edi+0x28]
1003c0a6:	test   BYTE PTR [edx+ecx*1],0x4
1003c0aa:	je     0x1003c175
1003c0b0:	add    esi,0x1
1003c0b3:	add    ebp,0x1
1003c0b6:	cmp    esi,DWORD PTR [esp+0x14]
1003c0ba:	jl     0x1003c097
1003c0bc:	jmp    0x1003c175
1003c0c1:	cmp    esi,DWORD PTR [esp+0x14]
1003c0c5:	jge    0x1003c175
1003c0cb:	mov    eax,DWORD PTR [edi+0x5c]
1003c0ce:	mov    edi,edi
1003c0d0:	cmp    ebp,eax
1003c0d2:	jae    0x1003c175
1003c0d8:	movzx  edx,BYTE PTR [ebp+0x0]
1003c0dc:	mov    ecx,DWORD PTR [edi+0x28]
1003c0df:	test   BYTE PTR [edx+ecx*1],0x1
1003c0e3:	jne    0x1003c175
1003c0e9:	add    esi,0x1
1003c0ec:	add    ebp,0x1
1003c0ef:	cmp    esi,DWORD PTR [esp+0x14]
1003c0f3:	jl     0x1003c0d0
1003c0f5:	jmp    0x1003c175
1003c0fa:	cmp    esi,DWORD PTR [esp+0x14]
1003c0fe:	jge    0x1003c175
1003c100:	mov    eax,DWORD PTR [edi+0x5c]
1003c103:	cmp    ebp,eax
1003c105:	jae    0x1003c175
1003c107:	movzx  edx,BYTE PTR [ebp+0x0]
1003c10b:	mov    ecx,DWORD PTR [edi+0x28]
1003c10e:	test   BYTE PTR [edx+ecx*1],0x1
1003c112:	je     0x1003c175
1003c114:	add    esi,0x1
1003c117:	add    ebp,0x1
1003c11a:	cmp    esi,DWORD PTR [esp+0x14]
1003c11e:	jl     0x1003c103
1003c120:	jmp    0x1003c175
1003c122:	cmp    esi,DWORD PTR [esp+0x14]
1003c126:	jge    0x1003c175
1003c128:	mov    eax,DWORD PTR [edi+0x5c]
1003c12b:	jmp    0x1003c130
1003c12d:	lea    ecx,[ecx+0x0]
1003c130:	cmp    ebp,eax
1003c132:	jae    0x1003c175
1003c134:	movzx  edx,BYTE PTR [ebp+0x0]
1003c138:	mov    ecx,DWORD PTR [edi+0x28]
1003c13b:	test   BYTE PTR [edx+ecx*1],0x10
1003c13f:	jne    0x1003c175
1003c141:	add    esi,0x1
1003c144:	add    ebp,0x1
1003c147:	cmp    esi,DWORD PTR [esp+0x14]
1003c14b:	jl     0x1003c130
1003c14d:	jmp    0x1003c175
1003c14f:	cmp    esi,DWORD PTR [esp+0x14]
1003c153:	jge    0x1003c175
1003c155:	mov    eax,DWORD PTR [edi+0x5c]
1003c158:	cmp    ebp,eax
1003c15a:	jae    0x1003c175
1003c15c:	movzx  edx,BYTE PTR [ebp+0x0]
1003c160:	mov    ecx,DWORD PTR [edi+0x28]
1003c163:	test   BYTE PTR [edx+ecx*1],0x10
1003c167:	je     0x1003c175
1003c169:	add    esi,0x1
1003c16c:	add    ebp,0x1
1003c16f:	cmp    esi,DWORD PTR [esp+0x14]
1003c173:	jl     0x1003c158
1003c175:	cmp    DWORD PTR [esp+0x1c],0x0
1003c17a:	je     0x1003cf62
1003c180:	mov    edi,DWORD PTR [esp+0x10c]
1003c187:	jmp    0x1003a53c
1003c18c:	xor    edx,edx
1003c18e:	mov    dh,BYTE PTR [ebx+0x4]
1003c191:	mov    dl,BYTE PTR [ebx+0x5]
1003c194:	cmp    BYTE PTR [ebx+edx*1+0x3],0x54
1003c199:	lea    ebx,[ebx+edx*1+0x3]
1003c19d:	jne    0x1003c1af
1003c19f:	nop
1003c1a0:	xor    eax,eax
1003c1a2:	mov    ah,BYTE PTR [ebx+0x1]
1003c1a5:	mov    al,BYTE PTR [ebx+0x2]
1003c1a8:	add    ebx,eax
1003c1aa:	cmp    BYTE PTR [ebx],0x54
1003c1ad:	je     0x1003c1a0
1003c1af:	add    ebx,0x3
1003c1b2:	cmp    DWORD PTR [esp+0x24],0x63
1003c1b7:	jne    0x1003c410
1003c1bd:	mov    edx,DWORD PTR [esp+0x11c]
1003c1c4:	mov    eax,DWORD PTR [esp+0x114]
1003c1cb:	mov    ecx,DWORD PTR [esp+0x110]
1003c1d2:	add    edx,0x1
1003c1d5:	push   edx
1003c1d6:	mov    edx,DWORD PTR [esp+0x10c]
1003c1dd:	push   0x2
1003c1df:	push   eax
1003c1e0:	push   ecx
1003c1e1:	push   edi
1003c1e2:	push   edx
1003c1e3:	push   esi
1003c1e4:	push   ebx
1003c1e5:	push   ebp
1003c1e6:	call   0x1003a4d0
1003c1eb:	add    esp,0x24
1003c1ee:	pop    edi
1003c1ef:	pop    esi
1003c1f0:	pop    ebp
1003c1f1:	pop    ebx
1003c1f2:	add    esp,0xe8
1003c1f8:	ret    
1003c1f9:	xor    eax,eax
1003c1fb:	mov    ah,BYTE PTR [ebx+0x3]
1003c1fe:	mov    al,BYTE PTR [ebx+0x4]
1003c201:	lea    esi,[eax+eax*1]
1003c204:	cmp    esi,DWORD PTR [edi+0x14]
1003c207:	mov    DWORD PTR [esp+0x20],eax
1003c20b:	jl     0x1003c5b8
1003c211:	xor    eax,eax
1003c213:	cmp    DWORD PTR [esp+0x24],0x61
1003c218:	setl   al
1003c21b:	xor    ecx,ecx
1003c21d:	mov    ch,BYTE PTR [ebx+0x1]
1003c220:	sub    eax,0x1
1003c223:	and    eax,0x2
1003c226:	mov    cl,BYTE PTR [ebx+0x2]
1003c229:	mov    DWORD PTR [esp+0x118],eax
1003c230:	cmp    BYTE PTR [ecx+ebx*1],0x54
1003c234:	jne    0x1003c2b8
1003c23a:	mov    esi,DWORD PTR [esp+0x11c]
1003c241:	add    esi,0x1
1003c244:	jmp    0x1003c250
1003c246:	lea    esp,[esp+0x0]
1003c24d:	lea    ecx,[ecx+0x0]
1003c250:	mov    edx,DWORD PTR [esp+0x114]
1003c257:	mov    ecx,DWORD PTR [esp+0x108]
1003c25e:	push   esi
1003c25f:	push   eax
1003c260:	mov    eax,DWORD PTR [esp+0x118]
1003c267:	push   edx
1003c268:	mov    edx,DWORD PTR [esp+0x110]
1003c26f:	push   eax
1003c270:	movzx  eax,BYTE PTR [ebx]
1003c273:	push   edi
1003c274:	push   ecx
1003c275:	movzx  ecx,BYTE PTR [eax+0x1006fa18]
1003c27c:	push   edx
1003c27d:	add    ecx,ebx
1003c27f:	push   ecx
1003c280:	push   ebp
1003c281:	call   0x1003a4d0
1003c286:	add    esp,0x24
1003c289:	test   eax,eax
1003c28b:	je     0x1003c298
1003c28d:	cmp    eax,0xfffffc1c
1003c292:	jne    0x1003cfc6
1003c298:	xor    edx,edx
1003c29a:	mov    dh,BYTE PTR [ebx+0x1]
1003c29d:	xor    eax,eax
1003c29f:	mov    dl,BYTE PTR [ebx+0x2]
1003c2a2:	mov    ah,BYTE PTR [ebx+edx*1+0x1]
1003c2a6:	add    ebx,edx
1003c2a8:	mov    al,BYTE PTR [ebx+0x2]
1003c2ab:	cmp    BYTE PTR [eax+ebx*1],0x54
1003c2af:	mov    eax,DWORD PTR [esp+0x118]
1003c2b6:	je     0x1003c250
1003c2b8:	test   eax,eax
1003c2ba:	jne    0x1003c6ac
1003c2c0:	movzx  ecx,BYTE PTR [ebx]
1003c2c3:	movzx  edx,BYTE PTR [ecx+0x1006fa18]
1003c2ca:	add    ebx,edx
1003c2cc:	jmp    0x1003c41b
1003c2d1:	cmp    BYTE PTR [ebx+0x3],0x19
1003c2d5:	lea    esi,[ebx+0x3]
1003c2d8:	jne    0x1003c2f3
1003c2da:	mov    edx,DWORD PTR [esp+0x110]
1003c2e1:	movzx  eax,BYTE PTR [ebx+0x4]
1003c2e5:	and    edx,0xfffffff8
1003c2e8:	or     eax,edx
1003c2ea:	mov    DWORD PTR [esp+0x110],eax
1003c2f1:	jmp    0x1003c2fa
1003c2f3:	mov    eax,DWORD PTR [esp+0x110]
1003c2fa:	mov    edx,DWORD PTR [esp+0x11c]
1003c301:	add    edx,0x1
1003c304:	cmp    BYTE PTR [ebx],0x57
1003c307:	push   edx
1003c308:	mov    edx,DWORD PTR [esp+0x118]
1003c30f:	jne    0x1003c33a
1003c311:	push   0x0
1003c313:	push   edx
1003c314:	push   eax
1003c315:	mov    eax,DWORD PTR [esp+0x114]
1003c31c:	push   edi
1003c31d:	push   ecx
1003c31e:	push   eax
1003c31f:	push   esi
1003c320:	push   ebp
1003c321:	call   0x1003a4d0
1003c326:	add    esp,0x24
1003c329:	test   eax,eax
1003c32b:	jne    0x1003cfc6
1003c331:	mov    ebx,DWORD PTR [esp+0x1c]
1003c335:	jmp    0x1003c410
1003c33a:	push   0x2
1003c33c:	push   edx
1003c33d:	push   eax
1003c33e:	mov    eax,DWORD PTR [esp+0x114]
1003c345:	push   edi
1003c346:	push   ecx
1003c347:	mov    ecx,DWORD PTR [esp+0x34]
1003c34b:	push   eax
1003c34c:	push   ecx
1003c34d:	push   ebp
1003c34e:	call   0x1003a4d0
1003c353:	add    esp,0x24
1003c356:	test   eax,eax
1003c358:	jne    0x1003cfc6
1003c35e:	mov    ebx,esi
1003c360:	jmp    0x1003c410
1003c365:	mov    edx,DWORD PTR [esp+0x1c]
1003c369:	cmp    BYTE PTR [edx],0x61
1003c36c:	sbb    eax,eax
1003c36e:	and    eax,0xfffffffe
1003c371:	add    eax,0x2
1003c374:	cmp    BYTE PTR [ebx],0x57
1003c377:	mov    DWORD PTR [esp+0x118],eax
1003c37e:	jne    0x1003c3d1
1003c380:	mov    eax,DWORD PTR [esp+0x11c]
1003c387:	mov    ecx,DWORD PTR [esp+0x114]
1003c38e:	mov    edx,DWORD PTR [esp+0x108]
1003c395:	add    eax,0x1
1003c398:	push   eax
1003c399:	mov    eax,DWORD PTR [esp+0x108]
1003c3a0:	push   0x0
1003c3a2:	push   ecx
1003c3a3:	push   esi
1003c3a4:	push   edi
1003c3a5:	push   edx
1003c3a6:	push   eax
1003c3a7:	add    ebx,0x3
1003c3aa:	push   ebx
1003c3ab:	push   ebp
1003c3ac:	call   0x1003a4d0
1003c3b1:	add    esp,0x24
1003c3b4:	test   eax,eax
1003c3b6:	jne    0x1003cfc6
1003c3bc:	mov    eax,DWORD PTR [esp+0x118]
1003c3c3:	test   eax,eax
1003c3c5:	jne    0x1003c8bb
1003c3cb:	mov    ebx,DWORD PTR [esp+0x1c]
1003c3cf:	jmp    0x1003c41b
1003c3d1:	mov    ecx,DWORD PTR [esp+0x11c]
1003c3d8:	mov    edx,DWORD PTR [esp+0x114]
1003c3df:	add    ecx,0x1
1003c3e2:	push   ecx
1003c3e3:	mov    ecx,DWORD PTR [esp+0x108]
1003c3ea:	push   eax
1003c3eb:	mov    eax,DWORD PTR [esp+0x110]
1003c3f2:	push   edx
1003c3f3:	mov    edx,DWORD PTR [esp+0x28]
1003c3f7:	push   esi
1003c3f8:	push   edi
1003c3f9:	push   eax
1003c3fa:	push   ecx
1003c3fb:	push   edx
1003c3fc:	push   ebp
1003c3fd:	call   0x1003a4d0
1003c402:	add    esp,0x24
1003c405:	test   eax,eax
1003c407:	jne    0x1003cfc6
1003c40d:	add    ebx,0x3
1003c410:	mov    DWORD PTR [esp+0x118],0x0
1003c41b:	mov    eax,DWORD PTR [edi]
1003c41d:	cmp    eax,DWORD PTR [edi+0x4]
1003c420:	jb     0x1003a4fa
1003c426:	add    DWORD PTR [edi],0x1
1003c429:	mov    eax,0xfffffff8
1003c42e:	pop    edi
1003c42f:	pop    esi
1003c430:	pop    ebp
1003c431:	pop    ebx
1003c432:	add    esp,0xe8
1003c438:	ret    
1003c439:	mov    eax,0xffffffeb
1003c43e:	pop    edi
1003c43f:	pop    esi
1003c440:	pop    ebp
1003c441:	pop    ebx
1003c442:	add    esp,0xe8
1003c448:	ret    
1003c449:	mov    ecx,DWORD PTR [esp+0x11c]
1003c450:	mov    edx,DWORD PTR [esp+0x118]
1003c457:	mov    eax,DWORD PTR [esp+0x114]
1003c45e:	add    ecx,0x1
1003c461:	push   ecx
1003c462:	mov    ecx,DWORD PTR [esp+0x114]
1003c469:	push   edx
1003c46a:	mov    edx,DWORD PTR [esp+0x110]
1003c471:	push   eax
1003c472:	movzx  eax,BYTE PTR [ebx]
1003c475:	push   ecx
1003c476:	movzx  ecx,BYTE PTR [eax+0x1006fa18]
1003c47d:	push   edi
1003c47e:	push   edx
1003c47f:	push   esi
1003c480:	add    ecx,ebx
1003c482:	push   ecx
1003c483:	push   ebp
1003c484:	call   0x1003a4d0
1003c489:	add    esp,0x24
1003c48c:	test   eax,eax
1003c48e:	jne    0x1003cfc6
1003c494:	mov    eax,0xfffffc1a
1003c499:	pop    edi
1003c49a:	pop    esi
1003c49b:	pop    ebp
1003c49c:	pop    ebx
1003c49d:	add    esp,0xe8
1003c4a3:	ret    
1003c4a4:	mov    edx,DWORD PTR [esp+0x11c]
1003c4ab:	mov    eax,DWORD PTR [esp+0x118]
1003c4b2:	mov    ecx,DWORD PTR [esp+0x114]
1003c4b9:	add    edx,0x1
1003c4bc:	push   edx
1003c4bd:	mov    edx,DWORD PTR [esp+0x114]
1003c4c4:	push   eax
1003c4c5:	mov    eax,DWORD PTR [esp+0x110]
1003c4cc:	push   ecx
1003c4cd:	movzx  ecx,BYTE PTR [ebx]
1003c4d0:	push   edx
1003c4d1:	movzx  edx,BYTE PTR [ecx+0x1006fa18]
1003c4d8:	push   edi
1003c4d9:	push   eax
1003c4da:	push   esi
1003c4db:	add    edx,ebx
1003c4dd:	push   edx
1003c4de:	push   ebp
1003c4df:	call   0x1003a4d0
1003c4e4:	add    esp,0x24
1003c4e7:	test   eax,eax
1003c4e9:	jne    0x1003cfc6
1003c4ef:	mov    eax,0xfffffc19
1003c4f4:	pop    edi
1003c4f5:	pop    esi
1003c4f6:	pop    ebp
1003c4f7:	pop    ebx
1003c4f8:	add    esp,0xe8
1003c4fe:	ret    
1003c4ff:	mov    eax,DWORD PTR [esp+0x11c]
1003c506:	mov    ecx,DWORD PTR [esp+0x118]
1003c50d:	mov    edx,DWORD PTR [esp+0x114]
1003c514:	add    eax,0x1
1003c517:	push   eax
1003c518:	mov    eax,DWORD PTR [esp+0x114]
1003c51f:	push   ecx
1003c520:	mov    ecx,DWORD PTR [esp+0x110]
1003c527:	push   edx
1003c528:	movzx  edx,BYTE PTR [ebx]
1003c52b:	push   eax
1003c52c:	movzx  eax,BYTE PTR [edx+0x1006fa18]
1003c533:	push   edi
1003c534:	push   ecx
1003c535:	push   esi
1003c536:	add    eax,ebx
1003c538:	push   eax
1003c539:	push   ebp
1003c53a:	call   0x1003a4d0
1003c53f:	add    esp,0x24
1003c542:	test   eax,eax
1003c544:	jne    0x1003cfc6
1003c54a:	mov    DWORD PTR [edi+0x60],ebp
1003c54d:	mov    eax,0xfffffc1b
1003c552:	pop    edi
1003c553:	pop    esi
1003c554:	pop    ebp
1003c555:	pop    ebx
1003c556:	add    esp,0xe8
1003c55c:	ret    
1003c55d:	mov    ecx,DWORD PTR [esp+0x11c]
1003c564:	mov    edx,DWORD PTR [esp+0x118]
1003c56b:	mov    eax,DWORD PTR [esp+0x114]
1003c572:	add    ecx,0x1
1003c575:	push   ecx
1003c576:	mov    ecx,DWORD PTR [esp+0x114]
1003c57d:	push   edx
1003c57e:	mov    edx,DWORD PTR [esp+0x110]
1003c585:	push   eax
1003c586:	movzx  eax,BYTE PTR [ebx]
1003c589:	push   ecx
1003c58a:	movzx  ecx,BYTE PTR [eax+0x1006fa18]
1003c591:	push   edi
1003c592:	push   edx
1003c593:	push   esi
1003c594:	add    ecx,ebx
1003c596:	push   ecx
1003c597:	push   ebp
1003c598:	call   0x1003a4d0
1003c59d:	add    esp,0x24
1003c5a0:	test   eax,eax
1003c5a2:	jne    0x1003cfc6
1003c5a8:	mov    eax,0xfffffc1c
1003c5ad:	pop    edi
1003c5ae:	pop    esi
1003c5af:	pop    ebp
1003c5b0:	pop    ebx
1003c5b1:	add    esp,0xe8
1003c5b7:	ret    
1003c5b8:	mov    eax,DWORD PTR [edi+0xc]
1003c5bb:	mov    edx,DWORD PTR [eax+esi*4]
1003c5be:	mov    ecx,DWORD PTR [eax+esi*4+0x4]
1003c5c2:	mov    DWORD PTR [esp+0x14],edx
1003c5c6:	mov    edx,DWORD PTR [edi+0x10]
1003c5c9:	sub    edx,DWORD PTR [esp+0x20]
1003c5cd:	mov    DWORD PTR [esp+0x18],ecx
1003c5d1:	mov    ecx,DWORD PTR [eax+edx*4]
1003c5d4:	lea    eax,[eax+edx*4]
1003c5d7:	mov    edx,DWORD PTR [edi+0x6c]
1003c5da:	mov    DWORD PTR [esp+0x44],ecx
1003c5de:	mov    DWORD PTR [esp+0x28],edx
1003c5e2:	xor    edx,edx
1003c5e4:	mov    ecx,ebp
1003c5e6:	sub    ecx,DWORD PTR [edi+0x58]
1003c5e9:	cmp    DWORD PTR [esp+0x24],0x62
1003c5ee:	mov    DWORD PTR [eax],ecx
1003c5f0:	mov    eax,DWORD PTR [esp+0x11c]
1003c5f7:	setne  dl
1003c5fa:	sub    edx,0x1
1003c5fd:	and    edx,0x2
1003c600:	add    eax,0x1
1003c603:	mov    DWORD PTR [esp+0x118],edx
1003c60a:	mov    DWORD PTR [esp+0x1c],eax
1003c60e:	mov    edi,edi
1003c610:	mov    ecx,DWORD PTR [esp+0x1c]
1003c614:	mov    edx,DWORD PTR [esp+0x118]
1003c61b:	mov    eax,DWORD PTR [esp+0x114]
1003c622:	push   ecx
1003c623:	mov    ecx,DWORD PTR [esp+0x114]
1003c62a:	push   edx
1003c62b:	mov    edx,DWORD PTR [esp+0x110]
1003c632:	push   eax
1003c633:	mov    eax,DWORD PTR [esp+0x110]
1003c63a:	push   ecx
1003c63b:	movzx  ecx,BYTE PTR [ebx]
1003c63e:	push   edi
1003c63f:	push   edx
1003c640:	movzx  edx,BYTE PTR [ecx+0x1006fa18]
1003c647:	push   eax
1003c648:	add    edx,ebx
1003c64a:	push   edx
1003c64b:	push   ebp
1003c64c:	call   0x1003a4d0
1003c651:	add    esp,0x24
1003c654:	test   eax,eax
1003c656:	je     0x1003c663
1003c658:	cmp    eax,0xfffffc1c
1003c65d:	jne    0x1003cfc6
1003c663:	mov    eax,DWORD PTR [esp+0x28]
1003c667:	xor    ecx,ecx
1003c669:	mov    DWORD PTR [edi+0x6c],eax
1003c66c:	mov    ch,BYTE PTR [ebx+0x1]
1003c66f:	mov    cl,BYTE PTR [ebx+0x2]
1003c672:	add    ebx,ecx
1003c674:	cmp    BYTE PTR [ebx],0x54
1003c677:	je     0x1003c610
1003c679:	mov    edx,DWORD PTR [edi+0xc]
1003c67c:	mov    eax,DWORD PTR [esp+0x14]
1003c680:	mov    DWORD PTR [edx+esi*4],eax
1003c683:	mov    ecx,DWORD PTR [edi+0xc]
1003c686:	mov    edx,DWORD PTR [esp+0x18]
1003c68a:	mov    DWORD PTR [ecx+esi*4+0x4],edx
1003c68e:	mov    eax,DWORD PTR [edi+0x10]
1003c691:	sub    eax,DWORD PTR [esp+0x20]
1003c695:	mov    ecx,DWORD PTR [edi+0xc]
1003c698:	mov    edx,DWORD PTR [esp+0x44]
1003c69c:	mov    DWORD PTR [ecx+eax*4],edx
1003c69f:	xor    eax,eax
1003c6a1:	pop    edi
1003c6a2:	pop    esi
1003c6a3:	pop    ebp
1003c6a4:	pop    ebx
1003c6a5:	add    esp,0xe8
1003c6ab:	ret    
1003c6ac:	mov    ecx,DWORD PTR [esp+0x11c]
1003c6b3:	mov    edx,DWORD PTR [esp+0x114]
1003c6ba:	add    ecx,0x1
1003c6bd:	push   ecx
1003c6be:	mov    ecx,DWORD PTR [esp+0x10c]
1003c6c5:	push   eax
1003c6c6:	mov    eax,DWORD PTR [esp+0x118]
1003c6cd:	push   edx
1003c6ce:	mov    edx,DWORD PTR [esp+0x110]
1003c6d5:	push   eax
1003c6d6:	movzx  eax,BYTE PTR [ebx]
1003c6d9:	push   edi
1003c6da:	push   ecx
1003c6db:	movzx  ecx,BYTE PTR [eax+0x1006fa18]
1003c6e2:	push   edx
1003c6e3:	add    ecx,ebx
1003c6e5:	push   ecx
1003c6e6:	push   ebp
1003c6e7:	call   0x1003a4d0
1003c6ec:	add    esp,0x24
1003c6ef:	pop    edi
1003c6f0:	pop    esi
1003c6f1:	pop    ebp
1003c6f2:	pop    ebx
1003c6f3:	add    esp,0xe8
1003c6f9:	ret    
1003c6fa:	cmp    DWORD PTR [edi+0x44],0x0
1003c6fe:	je     0x1003c704
1003c700:	cmp    ebp,esi
1003c702:	je     0x1003c69f
1003c704:	mov    eax,DWORD PTR [esp+0x108]
1003c70b:	mov    DWORD PTR [edi+0x64],ebp
1003c70e:	mov    DWORD PTR [edi+0x68],eax
1003c711:	mov    DWORD PTR [edi+0x60],esi
1003c714:	mov    eax,0x1
1003c719:	pop    edi
1003c71a:	pop    esi
1003c71b:	pop    ebp
1003c71c:	pop    ebx
1003c71d:	add    esp,0xe8
1003c723:	ret    
1003c724:	mov    eax,DWORD PTR [edi+0x54]
1003c727:	xor    ecx,ecx
1003c729:	mov    ch,BYTE PTR [ebx+0x1]
1003c72c:	mov    cl,BYTE PTR [ebx+0x2]
1003c72f:	add    ecx,eax
1003c731:	mov    esi,ecx
1003c733:	cmp    esi,eax
1003c735:	jne    0x1003c741
1003c737:	mov    DWORD PTR [esp+0x30],0x0
1003c73f:	jmp    0x1003c74d
1003c741:	xor    edx,edx
1003c743:	mov    dh,BYTE PTR [esi+0x3]
1003c746:	mov    dl,BYTE PTR [esi+0x4]
1003c749:	mov    DWORD PTR [esp+0x30],edx
1003c74d:	mov    eax,DWORD PTR [edi+0x7c]
1003c750:	lea    ecx,[esp+0x2c]
1003c754:	mov    DWORD PTR [edi+0x7c],ecx
1003c757:	mov    ecx,DWORD PTR [edi+0x10]
1003c75a:	add    ebx,0x3
1003c75d:	cmp    ecx,0x1e
1003c760:	mov    DWORD PTR [esp+0x2c],eax
1003c764:	mov    DWORD PTR [esp+0x34],ebx
1003c768:	mov    DWORD PTR [esp+0x40],ecx
1003c76c:	jg     0x1003c77b
1003c76e:	lea    eax,[esp+0x80]
1003c775:	mov    DWORD PTR [esp+0x3c],eax
1003c779:	jmp    0x1003c7a8
1003c77b:	lea    edx,[ecx*4+0x0]
1003c782:	push   edx
1003c783:	call   DWORD PTR ds:0x10081508
1003c789:	add    esp,0x4
1003c78c:	test   eax,eax
1003c78e:	mov    DWORD PTR [esp+0x3c],eax
1003c792:	jne    0x1003c7a4
1003c794:	mov    eax,0xfffffffa
1003c799:	pop    edi
1003c79a:	pop    esi
1003c79b:	pop    ebp
1003c79c:	pop    ebx
1003c79d:	add    esp,0xe8
1003c7a3:	ret    
1003c7a4:	mov    ecx,DWORD PTR [esp+0x40]
1003c7a8:	mov    edx,DWORD PTR [edi+0xc]
1003c7ab:	add    ecx,ecx
1003c7ad:	add    ecx,ecx
1003c7af:	push   ecx
1003c7b0:	push   edx
1003c7b1:	push   eax
1003c7b2:	call   0x10045340
1003c7b7:	mov    eax,DWORD PTR [esp+0x110]
1003c7be:	mov    ecx,DWORD PTR [esp+0x128]
1003c7c5:	mov    DWORD PTR [esp+0x44],eax
1003c7c9:	mov    al,BYTE PTR [esi]
1003c7cb:	add    esp,0xc
1003c7ce:	cmp    al,0x61
1003c7d0:	sbb    ebx,ebx
1003c7d2:	and    ebx,0xfffffffe
1003c7d5:	add    ebx,0x2
1003c7d8:	add    ecx,0x1
1003c7db:	mov    DWORD PTR [esp+0x1c],ecx
1003c7df:	nop
1003c7e0:	mov    edx,DWORD PTR [esp+0x1c]
1003c7e4:	mov    ecx,DWORD PTR [esp+0x114]
1003c7eb:	push   edx
1003c7ec:	mov    edx,DWORD PTR [esp+0x114]
1003c7f3:	push   ebx
1003c7f4:	push   ecx
1003c7f5:	mov    ecx,DWORD PTR [esp+0x114]
1003c7fc:	push   edx
1003c7fd:	movzx  edx,al
1003c800:	movzx  eax,BYTE PTR [edx+0x1006fa18]
1003c807:	push   edi
1003c808:	push   ecx
1003c809:	push   ebp
1003c80a:	add    eax,esi
1003c80c:	push   eax
1003c80d:	push   ebp
1003c80e:	call   0x1003a4d0
1003c813:	add    esp,0x24
1003c816:	cmp    eax,0x1
1003c819:	je     0x1003c88b
1003c81b:	test   eax,eax
1003c81d:	je     0x1003c82a
1003c81f:	cmp    eax,0xfffffc1c
1003c824:	jne    0x1003cfc6
1003c82a:	mov    edx,DWORD PTR [esp+0x40]
1003c82e:	lea    ecx,[esp+0x2c]
1003c832:	lea    eax,[edx*4+0x0]
1003c839:	mov    edx,DWORD PTR [edi+0xc]
1003c83c:	mov    DWORD PTR [edi+0x7c],ecx
1003c83f:	mov    ecx,DWORD PTR [esp+0x3c]
1003c843:	push   eax
1003c844:	push   ecx
1003c845:	push   edx
1003c846:	call   0x10045340
1003c84b:	xor    eax,eax
1003c84d:	mov    ah,BYTE PTR [esi+0x1]
1003c850:	add    esp,0xc
1003c853:	mov    al,BYTE PTR [esi+0x2]
1003c856:	add    esi,eax
1003c858:	mov    al,BYTE PTR [esi]
1003c85a:	cmp    al,0x54
1003c85c:	je     0x1003c7e0
1003c85e:	mov    eax,DWORD PTR [esp+0x2c]
1003c862:	mov    DWORD PTR [edi+0x7c],eax
1003c865:	mov    eax,DWORD PTR [esp+0x3c]
1003c869:	lea    ecx,[esp+0x80]
1003c870:	cmp    eax,ecx
1003c872:	je     0x1003c87e
1003c874:	push   eax
1003c875:	call   DWORD PTR ds:0x1008150c
1003c87b:	add    esp,0x4
1003c87e:	xor    eax,eax
1003c880:	pop    edi
1003c881:	pop    esi
1003c882:	pop    ebp
1003c883:	pop    ebx
1003c884:	add    esp,0xe8
1003c88a:	ret    
1003c88b:	mov    eax,DWORD PTR [esp+0x3c]
1003c88f:	mov    ecx,DWORD PTR [esp+0x2c]
1003c893:	lea    edx,[esp+0x80]
1003c89a:	cmp    eax,edx
1003c89c:	mov    DWORD PTR [edi+0x7c],ecx
1003c89f:	je     0x1003c8ab
1003c8a1:	push   eax
1003c8a2:	call   DWORD PTR ds:0x1008150c
1003c8a8:	add    esp,0x4
1003c8ab:	mov    eax,0x1
1003c8b0:	pop    edi
1003c8b1:	pop    esi
1003c8b2:	pop    ebp
1003c8b3:	pop    ebx
1003c8b4:	add    esp,0xe8
1003c8ba:	ret    
1003c8bb:	mov    edx,DWORD PTR [esp+0x11c]
1003c8c2:	mov    ecx,DWORD PTR [esp+0x108]
1003c8c9:	add    edx,0x1
1003c8cc:	push   edx
1003c8cd:	mov    edx,DWORD PTR [esp+0x108]
1003c8d4:	push   eax
1003c8d5:	mov    eax,DWORD PTR [esp+0x11c]
1003c8dc:	push   eax
1003c8dd:	mov    eax,DWORD PTR [esp+0x28]
1003c8e1:	push   esi
1003c8e2:	push   edi
1003c8e3:	push   ecx
1003c8e4:	push   edx
1003c8e5:	push   eax
1003c8e6:	push   ebp
1003c8e7:	call   0x1003a4d0
1003c8ec:	add    esp,0x24
1003c8ef:	pop    edi
1003c8f0:	pop    esi
1003c8f1:	pop    ebp
1003c8f2:	pop    ebx
1003c8f3:	add    esp,0xe8
1003c8f9:	ret    
1003c8fa:	mov    ecx,DWORD PTR [esp+0x108]
1003c901:	mov    DWORD PTR [edi+0x64],ebp
1003c904:	mov    DWORD PTR [edi+0x68],ecx
1003c907:	mov    eax,0x1
1003c90c:	pop    edi
1003c90d:	pop    esi
1003c90e:	pop    ebp
1003c90f:	pop    ebx
1003c910:	add    esp,0xe8
1003c916:	ret    
1003c917:	cmp    eax,ecx
1003c919:	mov    DWORD PTR [esp+0x20],ebp
1003c91d:	mov    DWORD PTR [esp+0x18],eax
1003c921:	jge    0x1003c959
1003c923:	mov    edx,DWORD PTR [esp+0x110]
1003c92a:	push   edx
1003c92b:	mov    edx,DWORD PTR [esp+0x28]
1003c92f:	push   ebp
1003c930:	mov    ecx,edi
1003c932:	mov    eax,esi
1003c934:	call   0x1003a450
1003c939:	add    esp,0x8
1003c93c:	test   eax,eax
1003c93e:	je     0x1003c953
1003c940:	mov    eax,DWORD PTR [esp+0x18]
1003c944:	add    eax,0x1
1003c947:	add    ebp,esi
1003c949:	cmp    eax,DWORD PTR [esp+0x14]
1003c94d:	mov    DWORD PTR [esp+0x18],eax
1003c951:	jl     0x1003c923
1003c953:	cmp    ebp,DWORD PTR [esp+0x20]
1003c957:	jb     0x1003c9a9
1003c959:	mov    eax,DWORD PTR [esp+0x11c]
1003c960:	add    eax,0x1
1003c963:	mov    DWORD PTR [esp+0x1c],eax
1003c967:	mov    ecx,DWORD PTR [esp+0x1c]
1003c96b:	mov    edx,DWORD PTR [esp+0x114]
1003c972:	mov    eax,DWORD PTR [esp+0x110]
1003c979:	push   ecx
1003c97a:	mov    ecx,DWORD PTR [esp+0x10c]
1003c981:	push   0x0
1003c983:	push   edx
1003c984:	mov    edx,DWORD PTR [esp+0x110]
1003c98b:	push   eax
1003c98c:	push   edi
1003c98d:	push   ecx
1003c98e:	push   edx
1003c98f:	push   ebx
1003c990:	push   ebp
1003c991:	call   0x1003a4d0
1003c996:	add    esp,0x24
1003c999:	test   eax,eax
1003c99b:	jne    0x1003cfc6
1003c9a1:	sub    ebp,esi
1003c9a3:	cmp    ebp,DWORD PTR [esp+0x20]
1003c9a7:	jae    0x1003c967
1003c9a9:	xor    eax,eax
1003c9ab:	pop    edi
1003c9ac:	pop    esi
1003c9ad:	pop    ebp
1003c9ae:	pop    ebx
1003c9af:	add    esp,0xe8
1003c9b5:	ret    
1003c9b6:	cmp    eax,esi
1003c9b8:	mov    DWORD PTR [esp+0x20],ebp
1003c9bc:	jge    0x1003c9f9
1003c9be:	cmp    ebp,DWORD PTR [edi+0x5c]
1003c9c1:	jae    0x1003c9f3
1003c9c3:	movzx  eax,BYTE PTR [ebp+0x0]
1003c9c7:	mov    ecx,eax
1003c9c9:	and    ecx,0x7
1003c9cc:	mov    edx,0x1
1003c9d1:	shl    edx,cl
1003c9d3:	mov    ecx,DWORD PTR [esp+0x24]
1003c9d7:	shr    eax,0x3
1003c9da:	mov    al,BYTE PTR [eax+ecx*1]
1003c9dd:	test   al,dl
1003c9df:	je     0x1003c9f3
1003c9e1:	mov    eax,DWORD PTR [esp+0x18]
1003c9e5:	add    eax,0x1
1003c9e8:	add    ebp,0x1
1003c9eb:	cmp    eax,esi
1003c9ed:	mov    DWORD PTR [esp+0x18],eax
1003c9f1:	jl     0x1003c9be
1003c9f3:	cmp    ebp,DWORD PTR [esp+0x20]
1003c9f7:	jb     0x1003ca42
1003c9f9:	mov    esi,DWORD PTR [esp+0x11c]
1003ca00:	add    esi,0x1
1003ca03:	mov    ecx,DWORD PTR [esp+0x114]
1003ca0a:	mov    edx,DWORD PTR [esp+0x110]
1003ca11:	mov    eax,DWORD PTR [esp+0x108]
1003ca18:	push   esi
1003ca19:	push   0x0
1003ca1b:	push   ecx
1003ca1c:	mov    ecx,DWORD PTR [esp+0x110]
1003ca23:	push   edx
1003ca24:	push   edi
1003ca25:	push   eax
1003ca26:	push   ecx
1003ca27:	push   ebx
1003ca28:	push   ebp
1003ca29:	call   0x1003a4d0
1003ca2e:	add    esp,0x24
1003ca31:	test   eax,eax
1003ca33:	jne    0x1003cfc6
1003ca39:	sub    ebp,0x1
1003ca3c:	cmp    ebp,DWORD PTR [esp+0x20]
1003ca40:	jae    0x1003ca03
1003ca42:	xor    eax,eax
1003ca44:	pop    edi
1003ca45:	pop    esi
1003ca46:	pop    ebp
1003ca47:	pop    ebx
1003ca48:	add    esp,0xe8
1003ca4e:	ret    
1003ca4f:	mov    edx,DWORD PTR [esp+0x114]
1003ca56:	mov    ecx,DWORD PTR [esp+0x108]
1003ca5d:	mov    DWORD PTR [esp+0x18],eax
1003ca61:	mov    eax,DWORD PTR [esp+0x11c]
1003ca68:	add    eax,0x1
1003ca6b:	push   eax
1003ca6c:	push   0x0
1003ca6e:	push   edx
1003ca6f:	mov    edx,DWORD PTR [esp+0x110]
1003ca76:	mov    DWORD PTR [esp+0x28],eax
1003ca7a:	mov    eax,DWORD PTR [esp+0x11c]
1003ca81:	push   eax
1003ca82:	push   edi
1003ca83:	push   ecx
1003ca84:	push   edx
1003ca85:	push   ebx
1003ca86:	push   ebp
1003ca87:	call   0x1003a4d0
1003ca8c:	add    esp,0x24
1003ca8f:	test   eax,eax
1003ca91:	jne    0x1003cfc6
1003ca97:	jmp    0x1003caa0
1003ca99:	lea    esp,[esp+0x0]
1003caa0:	cmp    DWORD PTR [esp+0x18],esi
1003caa4:	jge    0x1003c69f
1003caaa:	cmp    ebp,DWORD PTR [edi+0x5c]
1003caad:	jae    0x1003c69f
1003cab3:	movzx  eax,BYTE PTR [ebp+0x0]
1003cab7:	mov    ecx,DWORD PTR [edi+0x24]
1003caba:	movzx  edx,BYTE PTR [eax+ecx*1]
1003cabe:	add    ebp,0x1
1003cac1:	cmp    DWORD PTR [esp+0x14],edx
1003cac5:	jne    0x1003c69f
1003cacb:	mov    eax,DWORD PTR [esp+0x1c]
1003cacf:	mov    ecx,DWORD PTR [esp+0x114]
1003cad6:	mov    edx,DWORD PTR [esp+0x110]
1003cadd:	add    DWORD PTR [esp+0x18],0x1
1003cae2:	push   eax
1003cae3:	mov    eax,DWORD PTR [esp+0x10c]
1003caea:	push   0x0
1003caec:	push   ecx
1003caed:	mov    ecx,DWORD PTR [esp+0x110]
1003caf4:	push   edx
1003caf5:	push   edi
1003caf6:	push   eax
1003caf7:	push   ecx
1003caf8:	push   ebx
1003caf9:	push   ebp
1003cafa:	call   0x1003a4d0
1003caff:	add    esp,0x24
1003cb02:	test   eax,eax
1003cb04:	je     0x1003caa0
1003cb06:	pop    edi
1003cb07:	pop    esi
1003cb08:	pop    ebp
1003cb09:	pop    ebx
1003cb0a:	add    esp,0xe8
1003cb10:	ret    
1003cb11:	mov    ecx,DWORD PTR [esp+0x110]
1003cb18:	mov    edx,DWORD PTR [esp+0x108]
1003cb1f:	mov    DWORD PTR [esp+0x18],eax
1003cb23:	mov    eax,DWORD PTR [esp+0x11c]
1003cb2a:	add    eax,0x1
1003cb2d:	push   eax
1003cb2e:	push   0x0
1003cb30:	mov    DWORD PTR [esp+0x24],eax
1003cb34:	mov    eax,DWORD PTR [esp+0x11c]
1003cb3b:	push   eax
1003cb3c:	mov    eax,DWORD PTR [esp+0x110]
1003cb43:	push   ecx
1003cb44:	push   edi
1003cb45:	push   edx
1003cb46:	push   eax
1003cb47:	push   ebx
1003cb48:	push   ebp
1003cb49:	call   0x1003a4d0
1003cb4e:	add    esp,0x24
1003cb51:	test   eax,eax
1003cb53:	jne    0x1003cfc6
1003cb59:	lea    esp,[esp+0x0]
1003cb60:	cmp    DWORD PTR [esp+0x18],esi
1003cb64:	jge    0x1003c69f
1003cb6a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cb6d:	jae    0x1003c69f
1003cb73:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cb77:	add    ebp,0x1
1003cb7a:	cmp    DWORD PTR [esp+0x14],ecx
1003cb7e:	jne    0x1003c69f
1003cb84:	mov    edx,DWORD PTR [esp+0x1c]
1003cb88:	mov    eax,DWORD PTR [esp+0x114]
1003cb8f:	mov    ecx,DWORD PTR [esp+0x110]
1003cb96:	add    DWORD PTR [esp+0x18],0x1
1003cb9b:	push   edx
1003cb9c:	mov    edx,DWORD PTR [esp+0x10c]
1003cba3:	push   0x0
1003cba5:	push   eax
1003cba6:	mov    eax,DWORD PTR [esp+0x110]
1003cbad:	push   ecx
1003cbae:	push   edi
1003cbaf:	push   edx
1003cbb0:	push   eax
1003cbb1:	push   ebx
1003cbb2:	push   ebp
1003cbb3:	call   0x1003a4d0
1003cbb8:	add    esp,0x24
1003cbbb:	test   eax,eax
1003cbbd:	je     0x1003cb60
1003cbbf:	pop    edi
1003cbc0:	pop    esi
1003cbc1:	pop    ebp
1003cbc2:	pop    ebx
1003cbc3:	add    esp,0xe8
1003cbc9:	ret    
1003cbca:	mov    edx,DWORD PTR [esp+0x114]
1003cbd1:	mov    ecx,DWORD PTR [esp+0x108]
1003cbd8:	mov    DWORD PTR [esp+0x18],eax
1003cbdc:	mov    eax,DWORD PTR [esp+0x11c]
1003cbe3:	add    eax,0x1
1003cbe6:	push   eax
1003cbe7:	push   0x0
1003cbe9:	push   edx
1003cbea:	mov    edx,DWORD PTR [esp+0x110]
1003cbf1:	mov    DWORD PTR [esp+0x28],eax
1003cbf5:	mov    eax,DWORD PTR [esp+0x11c]
1003cbfc:	push   eax
1003cbfd:	push   edi
1003cbfe:	push   ecx
1003cbff:	push   edx
1003cc00:	push   ebx
1003cc01:	push   ebp
1003cc02:	call   0x1003a4d0
1003cc07:	add    esp,0x24
1003cc0a:	test   eax,eax
1003cc0c:	jne    0x1003cfc6
1003cc12:	cmp    DWORD PTR [esp+0x18],esi
1003cc16:	jge    0x1003c69f
1003cc1c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003cc1f:	jae    0x1003c69f
1003cc25:	movzx  eax,BYTE PTR [ebp+0x0]
1003cc29:	mov    ecx,DWORD PTR [edi+0x24]
1003cc2c:	movzx  edx,BYTE PTR [eax+ecx*1]
1003cc30:	add    ebp,0x1
1003cc33:	cmp    DWORD PTR [esp+0x14],edx
1003cc37:	je     0x1003c69f
1003cc3d:	mov    eax,DWORD PTR [esp+0x1c]
1003cc41:	mov    ecx,DWORD PTR [esp+0x114]
1003cc48:	mov    edx,DWORD PTR [esp+0x110]
1003cc4f:	add    DWORD PTR [esp+0x18],0x1
1003cc54:	push   eax
1003cc55:	mov    eax,DWORD PTR [esp+0x10c]
1003cc5c:	push   0x0
1003cc5e:	push   ecx
1003cc5f:	mov    ecx,DWORD PTR [esp+0x110]
1003cc66:	push   edx
1003cc67:	push   edi
1003cc68:	push   eax
1003cc69:	push   ecx
1003cc6a:	push   ebx
1003cc6b:	push   ebp
1003cc6c:	call   0x1003a4d0
1003cc71:	add    esp,0x24
1003cc74:	test   eax,eax
1003cc76:	je     0x1003cc12
1003cc78:	pop    edi
1003cc79:	pop    esi
1003cc7a:	pop    ebp
1003cc7b:	pop    ebx
1003cc7c:	add    esp,0xe8
1003cc82:	ret    
1003cc83:	mov    ecx,DWORD PTR [esp+0x110]
1003cc8a:	mov    edx,DWORD PTR [esp+0x108]
1003cc91:	mov    DWORD PTR [esp+0x18],eax
1003cc95:	mov    eax,DWORD PTR [esp+0x11c]
1003cc9c:	add    eax,0x1
1003cc9f:	push   eax
1003cca0:	push   0x0
1003cca2:	mov    DWORD PTR [esp+0x24],eax
1003cca6:	mov    eax,DWORD PTR [esp+0x11c]
1003ccad:	push   eax
1003ccae:	mov    eax,DWORD PTR [esp+0x110]
1003ccb5:	push   ecx
1003ccb6:	push   edi
1003ccb7:	push   edx
1003ccb8:	push   eax
1003ccb9:	push   ebx
1003ccba:	push   ebp
1003ccbb:	call   0x1003a4d0
1003ccc0:	add    esp,0x24
1003ccc3:	test   eax,eax
1003ccc5:	jne    0x1003cfc6
1003cccb:	jmp    0x1003ccd0
1003cccd:	lea    ecx,[ecx+0x0]
1003ccd0:	cmp    DWORD PTR [esp+0x18],esi
1003ccd4:	jge    0x1003c69f
1003ccda:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ccdd:	jae    0x1003c69f
1003cce3:	movzx  ecx,BYTE PTR [ebp+0x0]
1003cce7:	add    ebp,0x1
1003ccea:	cmp    DWORD PTR [esp+0x14],ecx
1003ccee:	je     0x1003c69f
1003ccf4:	mov    edx,DWORD PTR [esp+0x1c]
1003ccf8:	mov    eax,DWORD PTR [esp+0x114]
1003ccff:	mov    ecx,DWORD PTR [esp+0x110]
1003cd06:	add    DWORD PTR [esp+0x18],0x1
1003cd0b:	push   edx
1003cd0c:	mov    edx,DWORD PTR [esp+0x10c]
1003cd13:	push   0x0
1003cd15:	push   eax
1003cd16:	mov    eax,DWORD PTR [esp+0x110]
1003cd1d:	push   ecx
1003cd1e:	push   edi
1003cd1f:	push   edx
1003cd20:	push   eax
1003cd21:	push   ebx
1003cd22:	push   ebp
1003cd23:	call   0x1003a4d0
1003cd28:	add    esp,0x24
1003cd2b:	test   eax,eax
1003cd2d:	je     0x1003ccd0
1003cd2f:	pop    edi
1003cd30:	pop    esi
1003cd31:	pop    ebp
1003cd32:	pop    ebx
1003cd33:	add    esp,0xe8
1003cd39:	ret    
1003cd3a:	mov    eax,0xfffffff2
1003cd3f:	pop    edi
1003cd40:	pop    esi
1003cd41:	pop    ebp
1003cd42:	pop    ebx
1003cd43:	add    esp,0xe8
1003cd49:	ret    
1003cd4a:	mov    edx,DWORD PTR [esp+0x114]
1003cd51:	mov    eax,DWORD PTR [esp+0x110]
1003cd58:	mov    ecx,DWORD PTR [esp+0x108]
1003cd5f:	mov    DWORD PTR [esp+0x18],esi
1003cd63:	mov    esi,DWORD PTR [esp+0x11c]
1003cd6a:	add    esi,0x1
1003cd6d:	push   esi
1003cd6e:	push   0x0
1003cd70:	push   edx
1003cd71:	mov    edx,DWORD PTR [esp+0x110]
1003cd78:	push   eax
1003cd79:	push   edi
1003cd7a:	push   ecx
1003cd7b:	push   edx
1003cd7c:	push   ebx
1003cd7d:	push   ebp
1003cd7e:	call   0x1003a4d0
1003cd83:	add    esp,0x24
1003cd86:	test   eax,eax
1003cd88:	jne    0x1003cfc6
1003cd8e:	mov    eax,DWORD PTR [esp+0x18]
1003cd92:	cmp    eax,DWORD PTR [esp+0x14]
1003cd96:	jge    0x1003c69f
1003cd9c:	mov    eax,DWORD PTR [edi+0x5c]
1003cd9f:	cmp    ebp,eax
1003cda1:	jae    0x1003c69f
1003cda7:	cmp    DWORD PTR [esp+0x24],0xc
1003cdac:	jne    0x1003ce03
1003cdae:	mov    ecx,DWORD PTR [edi+0x18]
1003cdb1:	test   ecx,ecx
1003cdb3:	je     0x1003cddd
1003cdb5:	mov    edi,DWORD PTR [esp+0x10c]
1003cdbc:	push   ecx
1003cdbd:	add    edi,0x1c
1003cdc0:	xor    edx,edx
1003cdc2:	mov    ecx,ebp
1003cdc4:	call   0x10042e70
1003cdc9:	add    esp,0x4
1003cdcc:	test   eax,eax
1003cdce:	jne    0x1003c69f
1003cdd4:	mov    edi,DWORD PTR [esp+0x10c]
1003cddb:	jmp    0x1003ce03
1003cddd:	mov    ecx,DWORD PTR [edi+0x1c]
1003cde0:	sub    eax,ecx
1003cde2:	cmp    ebp,eax
1003cde4:	ja     0x1003ce03
1003cde6:	mov    dl,BYTE PTR [ebp+0x0]
1003cde9:	cmp    dl,BYTE PTR [edi+0x20]
1003cdec:	jne    0x1003ce03
1003cdee:	cmp    ecx,0x1
1003cdf1:	je     0x1003c69f
1003cdf7:	mov    al,BYTE PTR [ebp+0x1]
1003cdfa:	cmp    al,BYTE PTR [edi+0x21]
1003cdfd:	je     0x1003c69f
1003ce03:	mov    ecx,DWORD PTR [esp+0x24]
1003ce07:	movzx  eax,BYTE PTR [ebp+0x0]
1003ce0b:	add    ecx,0xfffffffa
1003ce0e:	add    ebp,0x1
1003ce11:	cmp    ecx,0xf
1003ce14:	ja     0x1003cd3a
1003ce1a:	jmp    DWORD PTR [ecx*4+0x1003d288]
1003ce21:	add    eax,0xfffffff6
1003ce24:	cmp    eax,0x7b
1003ce27:	ja     0x1003c69f
1003ce2d:	movzx  ecx,BYTE PTR [eax+0x1003d2d8]
1003ce34:	jmp    DWORD PTR [ecx*4+0x1003d2c8]
1003ce3b:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ce3e:	jae    0x1003cf1c
1003ce44:	cmp    BYTE PTR [ebp+0x0],0xa
1003ce48:	jne    0x1003cf1c
1003ce4e:	add    ebp,0x1
1003ce51:	jmp    0x1003cf1c
1003ce56:	cmp    DWORD PTR [edi+0x50],0x0
1003ce5a:	jne    0x1003c69f
1003ce60:	jmp    0x1003cf1c
1003ce65:	cmp    eax,0x9
1003ce68:	je     0x1003c69f
1003ce6e:	cmp    eax,0x20
1003ce71:	je     0x1003c69f
1003ce77:	cmp    eax,0xa0
1003ce7c:	jmp    0x1003cf16
1003ce81:	cmp    eax,0x9
1003ce84:	je     0x1003cf1c
1003ce8a:	cmp    eax,0x20
1003ce8d:	je     0x1003cf1c
1003ce93:	cmp    eax,0xa0
1003ce98:	jne    0x1003c69f
1003ce9e:	jmp    0x1003cf1c
1003cea0:	cmp    eax,0xa
1003cea3:	jb     0x1003cf1c
1003cea5:	cmp    eax,0xd
1003cea8:	jbe    0x1003c69f
1003ceae:	cmp    eax,0x85
1003ceb3:	jmp    0x1003cf16
1003ceb5:	cmp    eax,0xa
1003ceb8:	jb     0x1003c69f
1003cebe:	cmp    eax,0xd
1003cec1:	jbe    0x1003cf1c
1003cec3:	cmp    eax,0x85
1003cec8:	jne    0x1003c69f
1003cece:	jmp    0x1003cf1c
1003ced0:	mov    edx,DWORD PTR [edi+0x28]
1003ced3:	test   BYTE PTR [eax+edx*1],0x4
1003ced7:	jne    0x1003c69f
1003cedd:	jmp    0x1003cf1c
1003cedf:	mov    ecx,DWORD PTR [edi+0x28]
1003cee2:	test   BYTE PTR [eax+ecx*1],0x4
1003cee6:	jmp    0x1003cf16
1003cee8:	mov    edx,DWORD PTR [edi+0x28]
1003ceeb:	test   BYTE PTR [eax+edx*1],0x1
1003ceef:	jne    0x1003c69f
1003cef5:	jmp    0x1003cf1c
1003cef7:	mov    ecx,DWORD PTR [edi+0x28]
1003cefa:	test   BYTE PTR [eax+ecx*1],0x1
1003cefe:	jmp    0x1003cf16
1003cf00:	mov    edx,DWORD PTR [edi+0x28]
1003cf03:	test   BYTE PTR [eax+edx*1],0x10
1003cf07:	jne    0x1003c69f
1003cf0d:	jmp    0x1003cf1c
1003cf0f:	mov    ecx,DWORD PTR [edi+0x28]
1003cf12:	test   BYTE PTR [eax+ecx*1],0x10
1003cf16:	je     0x1003c69f
1003cf1c:	mov    edx,DWORD PTR [esp+0x114]
1003cf23:	mov    eax,DWORD PTR [esp+0x110]
1003cf2a:	mov    ecx,DWORD PTR [esp+0x108]
1003cf31:	add    DWORD PTR [esp+0x18],0x1
1003cf36:	push   esi
1003cf37:	push   0x0
1003cf39:	push   edx
1003cf3a:	mov    edx,DWORD PTR [esp+0x110]
1003cf41:	push   eax
1003cf42:	push   edi
1003cf43:	push   ecx
1003cf44:	push   edx
1003cf45:	push   ebx
1003cf46:	push   ebp
1003cf47:	call   0x1003a4d0
1003cf4c:	add    esp,0x24
1003cf4f:	test   eax,eax
1003cf51:	je     0x1003cd8e
1003cf57:	pop    edi
1003cf58:	pop    esi
1003cf59:	pop    ebp
1003cf5a:	pop    ebx
1003cf5b:	add    esp,0xe8
1003cf61:	ret    
1003cf62:	cmp    ebp,DWORD PTR [esp+0x20]
1003cf66:	jb     0x1003cfb4
1003cf68:	mov    esi,DWORD PTR [esp+0x11c]
1003cf6f:	mov    edi,DWORD PTR [esp+0x104]
1003cf76:	add    esi,0x1
1003cf79:	mov    eax,DWORD PTR [esp+0x114]
1003cf80:	mov    ecx,DWORD PTR [esp+0x110]
1003cf87:	mov    edx,DWORD PTR [esp+0x10c]
1003cf8e:	push   esi
1003cf8f:	push   0x0
1003cf91:	push   eax
1003cf92:	mov    eax,DWORD PTR [esp+0x114]
1003cf99:	push   ecx
1003cf9a:	push   edx
1003cf9b:	push   eax
1003cf9c:	push   edi
1003cf9d:	push   ebx
1003cf9e:	push   ebp
1003cf9f:	call   0x1003a4d0
1003cfa4:	add    esp,0x24
1003cfa7:	sub    ebp,0x1
1003cfaa:	test   eax,eax
1003cfac:	jne    0x1003cfc6
1003cfae:	cmp    ebp,DWORD PTR [esp+0x20]
1003cfb2:	jae    0x1003cf79
1003cfb4:	xor    eax,eax
1003cfb6:	pop    edi
1003cfb7:	pop    esi
1003cfb8:	pop    ebp
1003cfb9:	pop    ebx
1003cfba:	add    esp,0xe8
1003cfc0:	ret    
1003cfc1:	mov    eax,0xfffffffb
1003cfc6:	pop    edi
1003cfc7:	pop    esi
1003cfc8:	pop    ebp
1003cfc9:	pop    ebx
1003cfca:	add    esp,0xe8
1003cfd0:	ret    
1003cfd1:	lea    ecx,[ecx+0x0]
1003cfd4:	pusha  
1003cfd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1003cfd6:	add    edx,DWORD PTR [eax]
1003cfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1003cfd9:	stos   DWORD PTR es:[edi],eax
1003cfda:	add    edx,DWORD PTR [eax]
1003cfdc:	mov    bh,0xab
1003cfde:	add    edx,DWORD PTR [eax]
1003cfe0:	int    0xab
1003cfe2:	add    edx,DWORD PTR [eax]
1003cfe4:	add    DWORD PTR [ebp-0x520aeffd],ebp
1003cfea:	add    edx,DWORD PTR [eax]
1003cfec:	sbb    ch,BYTE PTR [esi-0x51c0effd]
1003cff2:	add    edx,DWORD PTR [eax]
1003cff4:	fs scas al,BYTE PTR es:[edi]
1003cff6:	add    edx,DWORD PTR [eax]
1003cff8:	mov    DWORD PTR [esi-0x5151effd],ebp
1003cffe:	add    edx,DWORD PTR [eax]
1003d000:	push   0xffffffad
1003d002:	add    edx,DWORD PTR [eax]
1003d004:	leave  
1003d005:	lods   eax,DWORD PTR ds:[esi]
1003d006:	add    edx,DWORD PTR [eax]
1003d008:	fild   QWORD PTR [ebp-0x512ceffd]
1003d00e:	add    edx,DWORD PTR [eax]
1003d010:	inc    eax
1003d011:	scas   eax,DWORD PTR es:[edi]
1003d012:	add    edx,DWORD PTR [eax]
1003d014:	mov    eax,0x201003af
1003d019:	mov    al,0x3
1003d01b:	adc    BYTE PTR [ecx-0x50],ah
1003d01e:	add    edx,DWORD PTR [eax]
1003d020:	outs   dx,BYTE PTR ds:[esi]
1003d021:	lods   al,BYTE PTR ds:[esi]
1003d022:	add    edx,DWORD PTR [eax]
1003d024:	lock lods al,BYTE PTR ds:[esi]
1003d026:	add    edx,DWORD PTR [eax]
1003d028:	scas   eax,DWORD PTR es:[edi]
1003d029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1003d02a:	add    edx,DWORD PTR [eax]
1003d02c:	push   ss
1003d02d:	stos   DWORD PTR es:[edi],eax
1003d02e:	add    edx,DWORD PTR [eax]
1003d030:	fsubr  QWORD PTR [ebx-0x4b81effd]
1003d036:	add    edx,DWORD PTR [eax]
1003d038:	mov    ds:0x2c1003b4,eax
1003d03d:	mov    bh,0x3
1003d03f:	adc    BYTE PTR ds:0xed1003b5,dh
1003d045:	mov    ah,0x3
1003d047:	adc    bl,dl
1003d049:	mov    ah,0x3
1003d04b:	adc    BYTE PTR [edx],cl
1003d04d:	mov    ch,0x3
1003d04f:	adc    BYTE PTR [ecx],bl
1003d051:	mov    ch,0x3
1003d053:	adc    BYTE PTR [esi],ah
1003d055:	mov    ch,0x3
1003d057:	adc    ch,ah
1003d059:	mov    ah,0x3
1003d05b:	adc    bl,bh
1003d05d:	mov    bh,0x3
1003d05f:	adc    BYTE PTR [edx-0x79effc49],bl
1003d065:	mov    bh,0x3
1003d067:	adc    BYTE PTR [edi-0x39effc49],dh
1003d06d:	mov    bh,0x3
1003d06f:	adc    bl,dl
1003d071:	mov    bh,0x3
1003d073:	adc    dl,ah
1003d075:	mov    bh,0x3
1003d077:	adc    BYTE PTR [ebx-0x46],bh
1003d07a:	add    edx,DWORD PTR [eax]
1003d07c:	(bad)  
1003d07e:	add    edx,DWORD PTR [eax]
1003d080:	icebp  
1003d081:	mov    ecx,0xba311003
1003d086:	add    edx,DWORD PTR [eax]
1003d088:	inc    eax
1003d089:	mov    edx,0xba4d1003
1003d08e:	add    edx,DWORD PTR [eax]
1003d090:	pusha  
1003d091:	mov    edx,0xb2bf1003
1003d096:	add    edx,DWORD PTR [eax]
1003d098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1003d099:	mov    al,0x3
1003d09b:	adc    BYTE PTR [edi+eax*8],ah
1003d09e:	add    edx,DWORD PTR [eax]
1003d0a0:	fbld   TBYTE PTR [edi-0x56dceffd]
1003d0a6:	add    edx,DWORD PTR [eax]
1003d0a8:	cli    
1003d0a9:	test   eax,0xa6c21003
1003d0ae:	add    edx,DWORD PTR [eax]
1003d0b0:	push   edx
1003d0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d0b2:	add    edx,DWORD PTR [eax]
1003d0b4:	les    esp,FWORD PTR [edi-0x5784effd]
1003d0ba:	add    edx,DWORD PTR [eax]
1003d0bc:	adc    edx,eax
1003d0be:	add    edx,DWORD PTR [eax]
1003d0c0:	stc    
1003d0c1:	rol    DWORD PTR [ebx],0x10
1003d0c4:	mov    DWORD PTR [ebp-0x56c8effd],esp
1003d0ca:	add    edx,DWORD PTR [eax]
1003d0cc:	mov    ch,BYTE PTR [ecx-0x3bb6effd]
1003d0d2:	add    edx,DWORD PTR [eax]
1003d0d4:	inc    esp
1003d0d6:	add    edx,DWORD PTR [eax]
1003d0d8:	pop    ebp
1003d0d9:	lds    eax,FWORD PTR [ebx]
1003d0db:	adc    BYTE PTR [esp+eax*8-0x3960effd],ah
1003d0e2:	add    edx,DWORD PTR [eax]
1003d0e4:	loopne 0x1003d08f
1003d0e6:	add    edx,DWORD PTR [eax]
1003d0e8:	ror    edi,0x3
1003d0eb:	adc    BYTE PTR [eax],al
1003d0ed:	add    DWORD PTR [edx],eax
1003d0ef:	add    eax,DWORD PTR [esp+eax*1]
1003d0f2:	add    eax,0x9080706
1003d0f7:	or     cl,BYTE PTR [ebx]
1003d0f9:	or     al,0xd
1003d0fb:	inc    ebp
1003d0fc:	inc    ebp
1003d0fd:	push   cs
1003d0fe:	movups xmm2,XMMWORD PTR [ecx]
1003d101:	adc    al,BYTE PTR [ebp+0x13]
1003d104:	adc    al,0x15
1003d106:	push   ss
1003d107:	pop    ss
1003d108:	sbb    BYTE PTR [ecx],bl
1003d10a:	sbb    bl,BYTE PTR [ebx]
1003d10c:	sbb    ebx,DWORD PTR [ebx]
1003d10e:	sbb    ebx,DWORD PTR [ebx]
1003d110:	sbb    ebx,DWORD PTR [esp+ebx*1]
1003d113:	sbb    eax,0x21201f1e
1003d118:	and    ah,BYTE PTR [edx]
1003d11a:	and    ah,BYTE PTR [edx]
1003d11c:	and    ah,BYTE PTR [edx]
1003d11e:	and    esp,DWORD PTR [ebx]
1003d120:	and    al,0x25
1003d122:	es daa 
1003d124:	sub    BYTE PTR [ecx],ch
1003d126:	sub    DWORD PTR [ecx],ebp
1003d128:	sub    DWORD PTR [ecx],ebp
1003d12a:	sub    DWORD PTR [edx],ebp
1003d12c:	sub    ch,BYTE PTR [ebx]
1003d12e:	sub    al,0x2d
1003d130:	cs das 
1003d132:	inc    ebp
1003d133:	inc    ebp
1003d134:	inc    ebp
1003d135:	inc    ebp
1003d136:	inc    ebp
1003d137:	inc    ebp
1003d138:	inc    ebp
1003d139:	inc    ebp
1003d13a:	xor    BYTE PTR [eax],dh
1003d13c:	inc    ebp
1003d13d:	xor    DWORD PTR [edx],esi
1003d13f:	xor    esi,DWORD PTR [esi*1+0x37363535]
1003d146:	ss aaa 
1003d148:	cmp    BYTE PTR [ecx],bh
1003d14a:	cmp    bh,BYTE PTR [ebx]
1003d14c:	cmp    al,0x3a
1003d14e:	cmp    edi,DWORD PTR [eax*2+0x3e3d4545]
1003d155:	aas    
1003d156:	inc    eax
1003d157:	inc    ecx
1003d158:	inc    edx
1003d159:	inc    ebx
1003d15a:	add    BYTE PTR [ebp+eax*1-0x4f],al
1003d15e:	add    edx,DWORD PTR [eax]
1003d160:	cmp    BYTE PTR [ecx+0x1003],dh
1003d166:	add    BYTE PTR [eax],al
1003d168:	add    BYTE PTR [eax],al
1003d16a:	add    DWORD PTR [ecx],eax
1003d16c:	in     eax,0xb2
1003d16e:	add    edx,DWORD PTR [eax]
1003d170:	adc    DWORD PTR [ebx+0x1003],esi
1003d176:	add    BYTE PTR [eax],al
1003d178:	add    BYTE PTR [eax],al
1003d17a:	add    DWORD PTR [ecx],eax
1003d17c:	xlat   BYTE PTR ds:[ebx]
1003d17d:	mov    esp,0xbd111003
1003d182:	add    edx,DWORD PTR [eax]
1003d184:	inc    edx
1003d185:	mov    ebp,0xbd731003
1003d18a:	add    edx,DWORD PTR [eax]
1003d18c:	mov    eax,ds:0xce1003bd
1003d191:	mov    ebp,0xbadf1003
1003d196:	add    edx,DWORD PTR [eax]
1003d198:	mov    bx,0x1003
1003d19c:	mov    bx,0x1003
1003d1a0:	cmp    cl,ch
1003d1a2:	add    edx,DWORD PTR [eax]
1003d1a4:	cmp    cl,ch
1003d1a6:	add    edx,DWORD PTR [eax]
1003d1a8:	ins    DWORD PTR es:[edi],dx
1003d1a9:	mov    ebx,0xbbce1003
1003d1ae:	add    edx,DWORD PTR [eax]
1003d1b0:	sbb    BYTE PTR [ebx+eax*1+0x3bc5510],bh
1003d1b7:	adc    BYTE PTR [esi-0x3deffc44],dl
1003d1bd:	mov    ebx,0xbbb81003
1003d1c2:	add    edx,DWORD PTR [eax]
1003d1c4:	test   eax,0x9f1003bb
1003d1c9:	mov    BYTE PTR [ebx],0x10
1003d1cc:	add    BYTE PTR [ecx],al
1003d1ce:	add    DWORD PTR [edx],eax
1003d1d0:	add    eax,DWORD PTR [ebx]
1003d1d2:	add    eax,DWORD PTR [ebx]
1003d1d4:	add    eax,DWORD PTR [ebx]
1003d1d6:	add    eax,DWORD PTR [ebx]
1003d1d8:	add    eax,DWORD PTR [ebx]
1003d1da:	add    eax,DWORD PTR [ebx]
1003d1dc:	add    eax,DWORD PTR [ebx]
1003d1de:	add    eax,DWORD PTR [ebx]
1003d1e0:	add    eax,DWORD PTR [ebx]
1003d1e2:	add    eax,DWORD PTR [ebx]
1003d1e4:	add    eax,DWORD PTR [ebx]
1003d1e6:	add    eax,DWORD PTR [ebx]
1003d1e8:	add    eax,DWORD PTR [ebx]
1003d1ea:	add    eax,DWORD PTR [ebx]
1003d1ec:	add    eax,DWORD PTR [ebx]
1003d1ee:	add    eax,DWORD PTR [ebx]
1003d1f0:	add    eax,DWORD PTR [ebx]
1003d1f2:	add    eax,DWORD PTR [ebx]
1003d1f4:	add    eax,DWORD PTR [ebx]
1003d1f6:	add    eax,DWORD PTR [ebx]
1003d1f8:	add    eax,DWORD PTR [ebx]
1003d1fa:	add    eax,DWORD PTR [ebx]
1003d1fc:	add    eax,DWORD PTR [ebx]
1003d1fe:	add    eax,DWORD PTR [ebx]
1003d200:	add    eax,DWORD PTR [ebx]
1003d202:	add    eax,DWORD PTR [ebx]
1003d204:	add    eax,DWORD PTR [ebx]
1003d206:	add    eax,DWORD PTR [ebx]
1003d208:	add    eax,DWORD PTR [ebx]
1003d20a:	add    eax,DWORD PTR [ebx]
1003d20c:	add    eax,DWORD PTR [ebx]
1003d20e:	add    eax,DWORD PTR [ebx]
1003d210:	add    eax,DWORD PTR [ebx]
1003d212:	add    eax,DWORD PTR [ebx]
1003d214:	add    eax,DWORD PTR [ebx]
1003d216:	add    eax,DWORD PTR [ebx]
1003d218:	add    eax,DWORD PTR [ebx]
1003d21a:	add    eax,DWORD PTR [ebx]
1003d21c:	add    eax,DWORD PTR [ebx]
1003d21e:	add    eax,DWORD PTR [ebx]
1003d220:	add    eax,DWORD PTR [ebx]
1003d222:	add    eax,DWORD PTR [ebx]
1003d224:	add    eax,DWORD PTR [ebx]
1003d226:	add    eax,DWORD PTR [ebx]
1003d228:	add    eax,DWORD PTR [ebx]
1003d22a:	add    eax,DWORD PTR [ebx]
1003d22c:	add    eax,DWORD PTR [ebx]
1003d22e:	add    eax,DWORD PTR [ebx]
1003d230:	add    eax,DWORD PTR [ebx]
1003d232:	add    eax,DWORD PTR [ebx]
1003d234:	add    eax,DWORD PTR [ebx]
1003d236:	add    eax,DWORD PTR [ebx]
1003d238:	add    eax,DWORD PTR [ebx]
1003d23a:	add    eax,DWORD PTR [ebx]
1003d23c:	add    eax,DWORD PTR [ebx]
1003d23e:	add    eax,DWORD PTR [ebx]
1003d240:	add    eax,DWORD PTR [ebx]
1003d242:	add    eax,DWORD PTR [ebx]
1003d244:	add    eax,DWORD PTR [ebx]
1003d246:	add    eax,DWORD PTR [ecx]
1003d248:	dec    ebp
1003d249:	rol    BYTE PTR [ebx],0x10
1003d24c:	mov    al,al
1003d24e:	add    edx,DWORD PTR [eax]
1003d250:	rol    eax,0x3
1003d253:	adc    dl,bh
1003d255:	rol    BYTE PTR [ebx],0x10
1003d258:	and    al,cl
1003d25a:	add    edx,DWORD PTR [eax]
1003d25c:	dec    edi
1003d25d:	rol    DWORD PTR [ebx],0x10
1003d260:	sub    al,0xbe
1003d262:	add    edx,DWORD PTR [eax]
1003d264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003d265:	mov    esi,0xbea71003
1003d26a:	add    edx,DWORD PTR [eax]
1003d26c:	cmp    cl,ch
1003d26e:	add    edx,DWORD PTR [eax]
1003d270:	cmp    cl,ch
1003d272:	add    edx,DWORD PTR [eax]
1003d274:	mov    edi,0x251003be
1003d279:	mov    edi,0xbf6c1003
1003d27e:	add    edx,DWORD PTR [eax]
1003d280:	stos   DWORD PTR es:[edi],eax
1003d281:	mov    edi,0xc0041003
1003d286:	add    edx,DWORD PTR [eax]
1003d288:	ror    dh,1
1003d28a:	add    edx,DWORD PTR [eax]
1003d28c:	(bad)  
1003d28e:	add    edx,DWORD PTR [eax]
1003d290:	call   0x713d663
1003d295:	into   
1003d296:	add    edx,DWORD PTR [eax]
1003d298:	add    bh,cl
1003d29a:	add    edx,DWORD PTR [eax]
1003d29c:	bswap  edi
1003d29e:	add    edx,DWORD PTR [eax]
1003d2a0:	sbb    al,0xcf
1003d2a2:	add    edx,DWORD PTR [eax]
1003d2a4:	sbb    al,0xcf
1003d2a6:	add    edx,DWORD PTR [eax]
1003d2a8:	sbb    al,0xcf
1003d2aa:	add    edx,DWORD PTR [eax]
1003d2ac:	cmp    cl,ch
1003d2ae:	add    edx,DWORD PTR [eax]
1003d2b0:	cmp    cl,ch
1003d2b2:	add    edx,DWORD PTR [eax]
1003d2b4:	and    esi,ecx
1003d2b6:	add    edx,DWORD PTR [eax]
1003d2b8:	gs into 
1003d2ba:	add    edx,DWORD PTR [eax]
1003d2bc:	or     esi,0xcea01003
1003d2c2:	add    edx,DWORD PTR [eax]
1003d2c4:	mov    ch,0xce
1003d2c6:	add    edx,DWORD PTR [eax]
1003d2c8:	sbb    al,0xcf
1003d2ca:	add    edx,DWORD PTR [eax]
1003d2cc:	push   esi
1003d2cd:	into   
1003d2ce:	add    edx,DWORD PTR [eax]
1003d2d0:	cmp    ecx,esi
1003d2d2:	add    edx,DWORD PTR [eax]
1003d2d4:	lahf   
1003d2d5:	mov    BYTE PTR [ebx],0x10
1003d2d8:	add    BYTE PTR [ecx],al
1003d2da:	add    DWORD PTR [edx],eax
1003d2dc:	add    eax,DWORD PTR [ebx]
1003d2de:	add    eax,DWORD PTR [ebx]
1003d2e0:	add    eax,DWORD PTR [ebx]
1003d2e2:	add    eax,DWORD PTR [ebx]
1003d2e4:	add    eax,DWORD PTR [ebx]
1003d2e6:	add    eax,DWORD PTR [ebx]
1003d2e8:	add    eax,DWORD PTR [ebx]
1003d2ea:	add    eax,DWORD PTR [ebx]
1003d2ec:	add    eax,DWORD PTR [ebx]
1003d2ee:	add    eax,DWORD PTR [ebx]
1003d2f0:	add    eax,DWORD PTR [ebx]
1003d2f2:	add    eax,DWORD PTR [ebx]
1003d2f4:	add    eax,DWORD PTR [ebx]
1003d2f6:	add    eax,DWORD PTR [ebx]
1003d2f8:	add    eax,DWORD PTR [ebx]
1003d2fa:	add    eax,DWORD PTR [ebx]
1003d2fc:	add    eax,DWORD PTR [ebx]
1003d2fe:	add    eax,DWORD PTR [ebx]
1003d300:	add    eax,DWORD PTR [ebx]
1003d302:	add    eax,DWORD PTR [ebx]
1003d304:	add    eax,DWORD PTR [ebx]
1003d306:	add    eax,DWORD PTR [ebx]
1003d308:	add    eax,DWORD PTR [ebx]
1003d30a:	add    eax,DWORD PTR [ebx]
1003d30c:	add    eax,DWORD PTR [ebx]
1003d30e:	add    eax,DWORD PTR [ebx]
1003d310:	add    eax,DWORD PTR [ebx]
1003d312:	add    eax,DWORD PTR [ebx]
1003d314:	add    eax,DWORD PTR [ebx]
1003d316:	add    eax,DWORD PTR [ebx]
1003d318:	add    eax,DWORD PTR [ebx]
1003d31a:	add    eax,DWORD PTR [ebx]
1003d31c:	add    eax,DWORD PTR [ebx]
1003d31e:	add    eax,DWORD PTR [ebx]
1003d320:	add    eax,DWORD PTR [ebx]
1003d322:	add    eax,DWORD PTR [ebx]
1003d324:	add    eax,DWORD PTR [ebx]
1003d326:	add    eax,DWORD PTR [ebx]
1003d328:	add    eax,DWORD PTR [ebx]
1003d32a:	add    eax,DWORD PTR [ebx]
1003d32c:	add    eax,DWORD PTR [ebx]
1003d32e:	add    eax,DWORD PTR [ebx]
1003d330:	add    eax,DWORD PTR [ebx]
1003d332:	add    eax,DWORD PTR [ebx]
1003d334:	add    eax,DWORD PTR [ebx]
1003d336:	add    eax,DWORD PTR [ebx]
1003d338:	add    eax,DWORD PTR [ebx]
1003d33a:	add    eax,DWORD PTR [ebx]
1003d33c:	add    eax,DWORD PTR [ebx]
1003d33e:	add    eax,DWORD PTR [ebx]
1003d340:	add    eax,DWORD PTR [ebx]
1003d342:	add    eax,DWORD PTR [ebx]
1003d344:	add    eax,DWORD PTR [ebx]
1003d346:	add    eax,DWORD PTR [ebx]
1003d348:	add    eax,DWORD PTR [ebx]
1003d34a:	add    eax,DWORD PTR [ebx]
1003d34c:	add    eax,DWORD PTR [ebx]
1003d34e:	add    eax,DWORD PTR [ebx]
1003d350:	add    eax,DWORD PTR [ebx]
1003d352:	add    eax,DWORD PTR [ecx]
1003d354:	int3   
1003d355:	int3   
1003d356:	int3   
1003d357:	int3   
1003d358:	int3   
1003d359:	int3   
1003d35a:	int3   
1003d35b:	int3   
1003d35c:	int3   
1003d35d:	int3   
1003d35e:	int3   
1003d35f:	int3   
1003d360:	sub    esp,0x134
1003d366:	mov    eax,ds:0x100801ac
1003d36b:	xor    eax,esp
1003d36d:	mov    DWORD PTR [esp+0x12c],eax
1003d374:	mov    eax,DWORD PTR [esp+0x13c]
1003d37b:	push   ebx
1003d37c:	mov    ebx,DWORD PTR [esp+0x148]
1003d383:	push   ebp
1003d384:	mov    ebp,DWORD PTR [esp+0x140]
1003d38b:	push   esi
1003d38c:	mov    esi,ecx
1003d38e:	or     ecx,0xffffffff
1003d391:	push   edi
1003d392:	mov    edi,edx
1003d394:	xor    edx,edx
1003d396:	test   esi,0xfe0f5a6f
1003d39c:	mov    DWORD PTR [esp+0x1c],ecx
1003d3a0:	mov    DWORD PTR [esp+0x44],ecx
1003d3a4:	mov    DWORD PTR [esp+0x50],ecx
1003d3a8:	lea    ecx,[edi-0x1]
1003d3ab:	mov    DWORD PTR [esp+0x28],ebx
1003d3af:	mov    DWORD PTR [esp+0x2c],edx
1003d3b3:	mov    DWORD PTR [esp+0x4c],edx
1003d3b7:	mov    DWORD PTR [esp+0x54],edx
1003d3bb:	mov    DWORD PTR [esp+0x3c],edx
1003d3bf:	mov    DWORD PTR [esp+0x58],edi
1003d3c3:	mov    DWORD PTR [esp+0x34],ecx
1003d3c7:	mov    DWORD PTR [esp+0x20],ebp
1003d3cb:	je     0x1003d3d5
1003d3cd:	lea    eax,[edx-0x3]
1003d3d0:	jmp    0x1003dcbc
1003d3d5:	cmp    ebp,edx
1003d3d7:	je     0x1003dcb7
1003d3dd:	cmp    edi,edx
1003d3df:	je     0x1003dcb7
1003d3e5:	cmp    ebx,edx
1003d3e7:	je     0x1003dcb7
1003d3ed:	cmp    eax,edx
1003d3ef:	mov    ecx,0x989680
1003d3f4:	mov    DWORD PTR [esp+0x8c],ecx
1003d3fb:	mov    DWORD PTR [esp+0x90],ecx
1003d402:	mov    ecx,DWORD PTR [ebp+0x20]
1003d405:	mov    DWORD PTR [esp+0x14],edx
1003d409:	mov    DWORD PTR [esp+0x108],edx
1003d410:	mov    DWORD PTR [esp+0x18],ecx
1003d414:	je     0x1003d45d
1003d416:	mov    ecx,DWORD PTR [eax]
1003d418:	test   cl,0x1
1003d41b:	je     0x1003d424
1003d41d:	mov    ebx,DWORD PTR [eax+0x4]
1003d420:	mov    DWORD PTR [esp+0x14],ebx
1003d424:	test   cl,0x2
1003d427:	je     0x1003d433
1003d429:	mov    ebx,DWORD PTR [eax+0x8]
1003d42c:	mov    DWORD PTR [esp+0x8c],ebx
1003d433:	test   cl,0x10
1003d436:	je     0x1003d442
1003d438:	mov    ebx,DWORD PTR [eax+0x14]
1003d43b:	mov    DWORD PTR [esp+0x90],ebx
1003d442:	test   cl,0x4
1003d445:	je     0x1003d451
1003d447:	mov    ebx,DWORD PTR [eax+0xc]
1003d44a:	mov    DWORD PTR [esp+0x108],ebx
1003d451:	test   cl,0x8
1003d454:	je     0x1003d45d
1003d456:	mov    eax,DWORD PTR [eax+0x10]
1003d459:	mov    DWORD PTR [esp+0x18],eax
1003d45d:	cmp    DWORD PTR [esp+0x18],edx
1003d461:	jne    0x1003d46b
1003d463:	mov    DWORD PTR [esp+0x18],0x1006f5d8
1003d46b:	cmp    DWORD PTR [ebp+0x0],0x50435245
1003d472:	je     0x1003d4ba
1003d474:	mov    ebx,DWORD PTR [esp+0x14]
1003d478:	lea    ecx,[esp+0x114]
1003d47f:	push   ecx
1003d480:	lea    edx,[esp+0x64]
1003d484:	push   edx
1003d485:	mov    edx,ebp
1003d487:	call   0x10042cf0
1003d48c:	add    esp,0x8
1003d48f:	test   eax,eax
1003d491:	mov    DWORD PTR [esp+0x20],eax
1003d495:	jne    0x1003d4a1
1003d497:	mov    eax,0xfffffffc
1003d49c:	jmp    0x1003dcbc
1003d4a1:	mov    ebx,DWORD PTR [esp+0x20]
1003d4a5:	xor    edx,edx
1003d4a7:	cmp    DWORD PTR [esp+0x14],edx
1003d4ab:	je     0x1003d4be
1003d4ad:	lea    eax,[esp+0x114]
1003d4b4:	mov    DWORD PTR [esp+0x14],eax
1003d4b8:	jmp    0x1003d4be
1003d4ba:	xor    edx,edx
1003d4bc:	mov    ebx,ebp
1003d4be:	mov    eax,DWORD PTR [ebx+0x8]
1003d4c1:	mov    ecx,eax
1003d4c3:	shr    eax,0x12
1003d4c6:	and    eax,0x1
1003d4c9:	or     ecx,esi
1003d4cb:	mov    DWORD PTR [esp+0x38],eax
1003d4cf:	movzx  eax,WORD PTR [ebx+0x1a]
1003d4d3:	shr    ecx,0x4
1003d4d6:	and    ecx,0x1
1003d4d9:	mov    DWORD PTR [esp+0x40],ecx
1003d4dd:	movzx  ecx,BYTE PTR [ebx+0xc]
1003d4e1:	shr    ecx,0x3
1003d4e4:	and    ecx,0x1
1003d4e7:	mov    DWORD PTR [esp+0x48],ecx
1003d4eb:	movzx  ecx,WORD PTR [ebx+0x1c]
1003d4ef:	imul   ecx,eax
1003d4f2:	movzx  eax,WORD PTR [ebx+0x18]
1003d4f6:	add    ecx,ebp
1003d4f8:	add    eax,ecx
1003d4fa:	mov    ecx,DWORD PTR [esp+0x150]
1003d501:	mov    DWORD PTR [esp+0xdc],eax
1003d508:	mov    DWORD PTR [esp+0xe0],edi
1003d50f:	add    edi,ecx
1003d511:	mov    DWORD PTR [esp+0xe4],edi
1003d518:	mov    ecx,0x1
1003d51d:	mov    DWORD PTR [esp+0xf8],edx
1003d524:	mov    eax,DWORD PTR [ebx+0x8]
1003d527:	shr    eax,0x5
1003d52a:	and    eax,ecx
1003d52c:	mov    DWORD PTR [esp+0xc8],eax
1003d533:	mov    eax,DWORD PTR [ebx+0x8]
1003d536:	shr    eax,0xb
1003d539:	and    eax,ecx
1003d53b:	mov    DWORD PTR [esp+0xc0],eax
1003d542:	mov    DWORD PTR [esp+0x24],eax
1003d546:	mov    eax,DWORD PTR [ebx+0x8]
1003d549:	shr    eax,0x19
1003d54c:	and    eax,ecx
1003d54e:	mov    ebp,DWORD PTR [esp+0x18]
1003d552:	mov    DWORD PTR [esp+0xc4],eax
1003d559:	mov    eax,esi
1003d55b:	shr    eax,0x7
1003d55e:	and    eax,ecx
1003d560:	mov    DWORD PTR [esp+0xb8],eax
1003d567:	mov    eax,esi
1003d569:	shr    eax,0x8
1003d56c:	and    eax,ecx
1003d56e:	mov    DWORD PTR [esp+0xbc],eax
1003d575:	mov    eax,esi
1003d577:	shr    eax,0xa
1003d57a:	and    eax,ecx
1003d57c:	mov    DWORD PTR [esp+0x30],edi
1003d580:	mov    DWORD PTR [esp+0xcc],eax
1003d587:	lea    eax,[ebp+0x340]
1003d58d:	mov    edi,esi
1003d58f:	shr    edi,0xf
1003d592:	mov    DWORD PTR [esp+0xb0],eax
1003d599:	and    edi,ecx
1003d59b:	mov    eax,esi
1003d59d:	and    eax,0x1800000
1003d5a2:	mov    DWORD PTR [esp+0xd0],edi
1003d5a9:	mov    DWORD PTR [esp+0xd4],edx
1003d5b0:	mov    DWORD PTR [esp+0x104],edx
1003d5b7:	mov    DWORD PTR [esp+0xac],ebp
1003d5be:	je     0x1003d5e1
1003d5c0:	cmp    eax,0x800000
1003d5c5:	je     0x1003d5d8
1003d5c7:	cmp    eax,0x1000000
1003d5cc:	je     0x1003d5f9
1003d5ce:	mov    eax,0xffffffe9
1003d5d3:	jmp    0x1003dcbc
1003d5d8:	mov    DWORD PTR [esp+0xd8],ecx
1003d5df:	jmp    0x1003d600
1003d5e1:	mov    eax,DWORD PTR [ebx+0x8]
1003d5e4:	test   eax,0x1800000
1003d5e9:	je     0x1003d5f9
1003d5eb:	shr    eax,0x17
1003d5ee:	and    eax,ecx
1003d5f0:	mov    DWORD PTR [esp+0xd8],eax
1003d5f7:	jmp    0x1003d600
1003d5f9:	mov    DWORD PTR [esp+0xd8],edx
1003d600:	test   esi,0x700000
1003d606:	jne    0x1003d60b
1003d608:	mov    esi,DWORD PTR [ebx+0x8]
1003d60b:	and    esi,0x700000
1003d611:	cmp    esi,0x300000
1003d617:	ja     0x1003d670
1003d619:	je     0x1003d669
1003d61b:	cmp    esi,edx
1003d61d:	je     0x1003d62f
1003d61f:	cmp    esi,0x100000
1003d625:	je     0x1003d662
1003d627:	cmp    esi,0x200000
1003d62d:	jne    0x1003d5ce
1003d62f:	mov    eax,0xa
1003d634:	cmp    eax,0xff
1003d639:	mov    DWORD PTR [esp+0xa0],edx
1003d640:	jle    0x1003d69a
1003d642:	mov    ecx,eax
1003d644:	sar    ecx,0x8
1003d647:	mov    DWORD PTR [esp+0xa4],0x2
1003d652:	mov    BYTE PTR [esp+0xa8],cl
1003d659:	mov    BYTE PTR [esp+0xa9],al
1003d660:	jmp    0x1003d6a8
1003d662:	mov    eax,0xd
1003d667:	jmp    0x1003d634
1003d669:	mov    eax,0xd0a
1003d66e:	jmp    0x1003d634
1003d670:	cmp    esi,0x400000
1003d676:	je     0x1003d691
1003d678:	cmp    esi,0x500000
1003d67e:	jne    0x1003d5ce
1003d684:	mov    DWORD PTR [esp+0xa0],0x2
1003d68f:	jmp    0x1003d6a8
1003d691:	mov    DWORD PTR [esp+0xa0],ecx
1003d698:	jmp    0x1003d6a8
1003d69a:	mov    DWORD PTR [esp+0xa4],ecx
1003d6a1:	mov    BYTE PTR [esp+0xa8],al
1003d6a8:	cmp    edi,edx
1003d6aa:	je     0x1003d6bc
1003d6ac:	test   BYTE PTR [ebx+0xc],0x1
1003d6b0:	je     0x1003d6bc
1003d6b2:	mov    eax,0xfffffff3
1003d6b7:	jmp    0x1003dcbc
1003d6bc:	mov    eax,DWORD PTR [ebx+0x8]
1003d6bf:	and    eax,0x7
1003d6c2:	mov    DWORD PTR [esp+0x5c],eax
1003d6c6:	movzx  eax,WORD PTR [ebx+0x12]
1003d6ca:	cmp    ax,dx
1003d6cd:	mov    esi,0x33
1003d6d2:	jbe    0x1003d710
1003d6d4:	movzx  eax,ax
1003d6d7:	cmp    eax,0x11
1003d6da:	jl     0x1003d710
1003d6dc:	lea    esi,[eax+eax*2+0x3]
1003d6e0:	lea    ecx,[esi*4+0x0]
1003d6e7:	push   ecx
1003d6e8:	call   DWORD PTR ds:0x10081508
1003d6ee:	mov    edi,eax
1003d6f0:	add    esp,0x4
1003d6f3:	test   edi,edi
1003d6f5:	mov    DWORD PTR [esp+0x94],edi
1003d6fc:	jne    0x1003d706
1003d6fe:	lea    eax,[edi-0x6]
1003d701:	jmp    0x1003dcbc
1003d706:	mov    DWORD PTR [esp+0x2c],0x1
1003d70e:	jmp    0x1003d71b
1003d710:	mov    edi,DWORD PTR [esp+0x28]
1003d714:	mov    DWORD PTR [esp+0x94],edi
1003d71b:	lea    ecx,[esi+esi*1]
1003d71e:	mov    eax,0x55555556
1003d723:	imul   ecx
1003d725:	mov    eax,edx
1003d727:	shr    eax,0x1f
1003d72a:	add    eax,edx
1003d72c:	mov    DWORD PTR [esp+0x9c],eax
1003d733:	mov    DWORD PTR [esp+0x98],esi
1003d73a:	mov    DWORD PTR [esp+0xb4],0x0
1003d745:	mov    DWORD PTR [esp+0xf4],0xffffffff
1003d750:	movzx  eax,WORD PTR [ebx+0x10]
1003d754:	lea    eax,[eax+eax*1+0x2]
1003d758:	cmp    eax,0x33
1003d75b:	mov    DWORD PTR [esp+0x18],eax
1003d75f:	jle    0x1003d767
1003d761:	mov    eax,esi
1003d763:	mov    DWORD PTR [esp+0x18],esi
1003d767:	test   edi,edi
1003d769:	je     0x1003d791
1003d76b:	cdq    
1003d76c:	sub    eax,edx
1003d76e:	sar    eax,1
1003d770:	mov    edx,0x1
1003d775:	lea    ecx,[edi+esi*4]
1003d778:	sub    edx,eax
1003d77a:	lea    eax,[ecx+edx*4]
1003d77d:	sub    ecx,0x4
1003d780:	cmp    ecx,eax
1003d782:	jb     0x1003d791
1003d784:	mov    DWORD PTR [ecx],0xffffffff
1003d78a:	sub    ecx,0x4
1003d78d:	cmp    ecx,eax
1003d78f:	jae    0x1003d784
1003d791:	cmp    DWORD PTR [esp+0x40],0x0
1003d796:	jne    0x1003d7e7
1003d798:	test   BYTE PTR [ebx+0xc],0x2
1003d79c:	je     0x1003d7cb
1003d79e:	movzx  eax,WORD PTR [ebx+0x14]
1003d7a2:	mov    ecx,eax
1003d7a4:	and    ecx,0xff
1003d7aa:	shr    eax,0x8
1003d7ad:	and    eax,0x1
1003d7b0:	mov    DWORD PTR [esp+0x1c],ecx
1003d7b4:	mov    DWORD PTR [esp+0x4c],eax
1003d7b8:	je     0x1003d7e7
1003d7ba:	mov    eax,DWORD PTR [esp+0xac]
1003d7c1:	movzx  ecx,BYTE PTR [eax+ecx*1]
1003d7c5:	mov    DWORD PTR [esp+0x1c],ecx
1003d7c9:	jmp    0x1003d7e7
1003d7cb:	cmp    DWORD PTR [esp+0x48],0x0
1003d7d0:	jne    0x1003d7e7
1003d7d2:	mov    eax,DWORD PTR [esp+0x14]
1003d7d6:	test   eax,eax
1003d7d8:	je     0x1003d7e7
1003d7da:	test   BYTE PTR [eax+0x4],0x1
1003d7de:	je     0x1003d7e7
1003d7e0:	add    eax,0x8
1003d7e3:	mov    DWORD PTR [esp+0x3c],eax
1003d7e7:	test   BYTE PTR [ebx+0xc],0x4
1003d7eb:	je     0x1003d813
1003d7ed:	movzx  eax,WORD PTR [ebx+0x16]
1003d7f1:	mov    ecx,eax
1003d7f3:	and    ecx,0xff
1003d7f9:	movzx  edx,BYTE PTR [ecx+ebp*1+0x100]
1003d801:	shr    eax,0x8
1003d804:	and    eax,0x1
1003d807:	mov    DWORD PTR [esp+0x44],ecx
1003d80b:	mov    DWORD PTR [esp+0x54],eax
1003d80f:	mov    DWORD PTR [esp+0x50],edx
1003d813:	mov    ebp,DWORD PTR [esp+0x58]
1003d817:	mov    edi,DWORD PTR [esp+0x94]
1003d81e:	test   edi,edi
1003d820:	mov    ebx,DWORD PTR [esp+0x30]
1003d824:	mov    DWORD PTR [esp+0x14],ebx
1003d828:	je     0x1003d845
1003d82a:	mov    eax,DWORD PTR [esp+0x18]
1003d82e:	lea    ecx,[edi+eax*4]
1003d831:	cmp    edi,ecx
1003d833:	jae    0x1003d845
1003d835:	sub    ecx,edi
1003d837:	sub    ecx,0x1
1003d83a:	shr    ecx,0x2
1003d83d:	add    ecx,0x1
1003d840:	or     eax,0xffffffff
1003d843:	rep stos DWORD PTR es:[edi],eax
1003d845:	cmp    DWORD PTR [esp+0x38],0x0
1003d84a:	mov    eax,DWORD PTR [esp+0xe4]
1003d851:	je     0x1003d8c1
1003d853:	cmp    ebp,eax
1003d855:	mov    ecx,ebp
1003d857:	jae    0x1003d8bf
1003d859:	mov    esi,DWORD PTR [esp+0x24]
1003d85d:	cmp    DWORD PTR [esp+0xa0],0x0
1003d865:	je     0x1003d88d
1003d867:	mov    edx,DWORD PTR [esp+0xa0]
1003d86e:	push   edx
1003d86f:	mov    edx,esi
1003d871:	lea    edi,[esp+0xa8]
1003d878:	call   0x10042e70
1003d87d:	add    esp,0x4
1003d880:	test   eax,eax
1003d882:	jne    0x1003d8bf
1003d884:	mov    eax,DWORD PTR [esp+0xe4]
1003d88b:	jmp    0x1003d8b8
1003d88d:	mov    edi,DWORD PTR [esp+0xa4]
1003d894:	mov    edx,eax
1003d896:	sub    edx,edi
1003d898:	cmp    ecx,edx
1003d89a:	ja     0x1003d8b8
1003d89c:	mov    dl,BYTE PTR [ecx]
1003d89e:	cmp    dl,BYTE PTR [esp+0xa8]
1003d8a5:	jne    0x1003d8b8
1003d8a7:	cmp    edi,0x1
1003d8aa:	je     0x1003d8bf
1003d8ac:	mov    dl,BYTE PTR [ecx+0x1]
1003d8af:	cmp    dl,BYTE PTR [esp+0xa9]
1003d8b6:	je     0x1003d8bf
1003d8b8:	add    ecx,0x1
1003d8bb:	cmp    ecx,eax
1003d8bd:	jb     0x1003d85d
1003d8bf:	mov    ebx,ecx
1003d8c1:	cmp    DWORD PTR [esp+0x1c],0x0
1003d8c6:	jl     0x1003d92a
1003d8c8:	cmp    DWORD PTR [esp+0x4c],0x0
1003d8cd:	je     0x1003d8fe
1003d8cf:	cmp    ebp,ebx
1003d8d1:	jae    0x1003da11
1003d8d7:	mov    eax,DWORD PTR [esp+0xac]
1003d8de:	mov    edi,edi
1003d8e0:	movzx  ecx,BYTE PTR [ebp+0x0]
1003d8e4:	movzx  edx,BYTE PTR [ecx+eax*1]
1003d8e8:	cmp    edx,DWORD PTR [esp+0x1c]
1003d8ec:	je     0x1003da11
1003d8f2:	add    ebp,0x1
1003d8f5:	cmp    ebp,ebx
1003d8f7:	jb     0x1003d8e0
1003d8f9:	jmp    0x1003da11
1003d8fe:	cmp    ebp,ebx
1003d900:	jae    0x1003da11
1003d906:	jmp    0x1003d910
1003d908:	lea    esp,[esp+0x0]
1003d90f:	nop
1003d910:	movzx  eax,BYTE PTR [ebp+0x0]
1003d914:	cmp    eax,DWORD PTR [esp+0x1c]
1003d918:	je     0x1003da11
1003d91e:	add    ebp,0x1
1003d921:	cmp    ebp,ebx
1003d923:	jb     0x1003d910
1003d925:	jmp    0x1003da11
1003d92a:	cmp    DWORD PTR [esp+0x48],0x0
1003d92f:	je     0x1003d9e3
1003d935:	mov    esi,DWORD PTR [esp+0xe0]
1003d93c:	cmp    ebp,esi
1003d93e:	jbe    0x1003da11
1003d944:	cmp    ebp,ebx
1003d946:	jae    0x1003d9bd
1003d948:	mov    edi,DWORD PTR [esp+0x24]
1003d94c:	mov    ecx,DWORD PTR [esp+0xa4]
1003d953:	cmp    DWORD PTR [esp+0xa0],0x0
1003d95b:	je     0x1003d98f
1003d95d:	cmp    ebp,esi
1003d95f:	jbe    0x1003d9b6
1003d961:	mov    ecx,DWORD PTR [esp+0xa0]
1003d968:	push   edi
1003d969:	push   ecx
1003d96a:	lea    edx,[esp+0xac]
1003d971:	mov    ecx,ebp
1003d973:	call   0x10042f30
1003d978:	add    esp,0x8
1003d97b:	test   eax,eax
1003d97d:	jne    0x1003d9bd
1003d97f:	mov    esi,DWORD PTR [esp+0xe0]
1003d986:	mov    ecx,DWORD PTR [esp+0xa4]
1003d98d:	jmp    0x1003d9b6
1003d98f:	lea    edx,[ecx+esi*1]
1003d992:	cmp    ebp,edx
1003d994:	jb     0x1003d9b6
1003d996:	mov    dl,BYTE PTR [esp+0xa8]
1003d99d:	mov    eax,ebp
1003d99f:	sub    eax,ecx
1003d9a1:	cmp    BYTE PTR [eax],dl
1003d9a3:	jne    0x1003d9b6
1003d9a5:	cmp    ecx,0x1
1003d9a8:	je     0x1003d9bd
1003d9aa:	mov    dl,BYTE PTR [esp+0xa9]
1003d9b1:	cmp    BYTE PTR [eax+0x1],dl
1003d9b4:	je     0x1003d9bd
1003d9b6:	add    ebp,0x1
1003d9b9:	cmp    ebp,ebx
1003d9bb:	jb     0x1003d953
1003d9bd:	cmp    BYTE PTR [ebp-0x1],0xd
1003d9c1:	jne    0x1003da11
1003d9c3:	mov    eax,DWORD PTR [esp+0xa0]
1003d9ca:	cmp    eax,0x1
1003d9cd:	je     0x1003d9d4
1003d9cf:	cmp    eax,0x2
1003d9d2:	jne    0x1003da11
1003d9d4:	cmp    ebp,ebx
1003d9d6:	jae    0x1003da11
1003d9d8:	cmp    BYTE PTR [ebp+0x0],0xa
1003d9dc:	jne    0x1003da11
1003d9de:	add    ebp,0x1
1003d9e1:	jmp    0x1003da11
1003d9e3:	mov    esi,DWORD PTR [esp+0x3c]
1003d9e7:	test   esi,esi
1003d9e9:	je     0x1003da11
1003d9eb:	cmp    ebp,ebx
1003d9ed:	jae    0x1003da11
1003d9ef:	nop
1003d9f0:	movzx  eax,BYTE PTR [ebp+0x0]
1003d9f4:	mov    ecx,eax
1003d9f6:	and    ecx,0x7
1003d9f9:	mov    edx,0x1
1003d9fe:	shl    edx,cl
1003da00:	shr    eax,0x3
1003da03:	mov    al,BYTE PTR [eax+esi*1]
1003da06:	test   al,dl
1003da08:	jne    0x1003da11
1003da0a:	add    ebp,0x1
1003da0d:	cmp    ebp,ebx
1003da0f:	jb     0x1003d9f0
1003da11:	mov    edx,DWORD PTR [esp+0x44]
1003da15:	test   edx,edx
1003da17:	mov    ebx,DWORD PTR [esp+0x14]
1003da1b:	mov    DWORD PTR [esp+0x30],ebx
1003da1f:	jl     0x1003dabd
1003da25:	mov    ecx,ebx
1003da27:	sub    ecx,ebp
1003da29:	cmp    ecx,0x3e8
1003da2f:	jge    0x1003dabd
1003da35:	cmp    DWORD PTR [esp+0xd0],0x0
1003da3d:	jne    0x1003dabd
1003da43:	xor    eax,eax
1003da45:	cmp    DWORD PTR [esp+0x1c],eax
1003da49:	setge  al
1003da4c:	add    eax,ebp
1003da4e:	cmp    eax,DWORD PTR [esp+0x34]
1003da52:	jbe    0x1003dabd
1003da54:	cmp    DWORD PTR [esp+0x54],0x0
1003da59:	je     0x1003da9e
1003da5b:	cmp    eax,ebx
1003da5d:	jae    0x1003da75
1003da5f:	mov    esi,DWORD PTR [esp+0x50]
1003da63:	movzx  ecx,BYTE PTR [eax]
1003da66:	add    eax,0x1
1003da69:	cmp    ecx,edx
1003da6b:	je     0x1003dab2
1003da6d:	cmp    ecx,esi
1003da6f:	je     0x1003dab2
1003da71:	cmp    eax,ebx
1003da73:	jb     0x1003da63
1003da75:	xor    esi,esi
1003da77:	cmp    DWORD PTR [esp+0x2c],0x0
1003da7c:	je     0x1003da8f
1003da7e:	mov    eax,DWORD PTR [esp+0x94]
1003da85:	push   eax
1003da86:	call   DWORD PTR ds:0x1008150c
1003da8c:	add    esp,0x4
1003da8f:	test   esi,esi
1003da91:	je     0x1003dc97
1003da97:	mov    eax,esi
1003da99:	jmp    0x1003dcbc
1003da9e:	cmp    eax,ebx
1003daa0:	jae    0x1003da75
1003daa2:	movzx  ecx,BYTE PTR [eax]
1003daa5:	add    eax,0x1
1003daa8:	cmp    ecx,edx
1003daaa:	je     0x1003dab2
1003daac:	cmp    eax,ebx
1003daae:	jb     0x1003daa2
1003dab0:	jmp    0x1003da75
1003dab2:	sub    eax,0x1
1003dab5:	cmp    eax,ebx
1003dab7:	jae    0x1003da75
1003dab9:	mov    DWORD PTR [esp+0x34],eax
1003dabd:	mov    edx,DWORD PTR [esp+0x5c]
1003dac1:	mov    ecx,DWORD PTR [esp+0xdc]
1003dac8:	push   0x0
1003daca:	push   0x0
1003dacc:	push   0x0
1003dace:	push   edx
1003dacf:	lea    eax,[esp+0x98]
1003dad6:	push   eax
1003dad7:	push   0x2
1003dad9:	push   ebp
1003dada:	push   ecx
1003dadb:	push   ebp
1003dadc:	mov    DWORD PTR [esp+0x10c],ebp
1003dae3:	mov    DWORD PTR [esp+0xac],0x0
1003daee:	call   0x1003a4d0
1003daf3:	mov    esi,eax
1003daf5:	add    esp,0x24
1003daf8:	test   esi,esi
1003dafa:	jg     0x1003dc0e
1003db00:	je     0x1003db21
1003db02:	lea    eax,[esi+0x3e7]
1003db08:	cmp    eax,0x3
1003db0b:	ja     0x1003dc0e
1003db11:	jmp    DWORD PTR [eax*4+0x1003dcd8]
1003db18:	mov    ebx,DWORD PTR [esp+0xe8]
1003db1f:	jmp    0x1003db24
1003db21:	lea    ebx,[ebp+0x1]
1003db24:	xor    esi,esi
1003db26:	cmp    DWORD PTR [esp+0x38],esi
1003db2a:	je     0x1003dba5
1003db2c:	cmp    DWORD PTR [esp+0xa0],esi
1003db33:	je     0x1003db6c
1003db35:	cmp    ebp,DWORD PTR [esp+0xe4]
1003db3c:	jae    0x1003dba5
1003db3e:	mov    edx,DWORD PTR [esp+0xa0]
1003db45:	mov    eax,DWORD PTR [esp+0xe4]
1003db4c:	push   edx
1003db4d:	mov    edx,DWORD PTR [esp+0x28]
1003db51:	lea    edi,[esp+0xa8]
1003db58:	mov    ecx,ebp
1003db5a:	call   0x10042e70
1003db5f:	add    esp,0x4
1003db62:	test   eax,eax
1003db64:	jne    0x1003da77
1003db6a:	jmp    0x1003dba5
1003db6c:	mov    ecx,DWORD PTR [esp+0xe4]
1003db73:	mov    eax,DWORD PTR [esp+0xa4]
1003db7a:	sub    ecx,eax
1003db7c:	cmp    ebp,ecx
1003db7e:	ja     0x1003dba5
1003db80:	mov    dl,BYTE PTR [esp+0xa8]
1003db87:	cmp    BYTE PTR [ebp+0x0],dl
1003db8a:	jne    0x1003dba5
1003db8c:	cmp    eax,0x1
1003db8f:	je     0x1003da77
1003db95:	mov    al,BYTE PTR [esp+0xa9]
1003db9c:	cmp    BYTE PTR [ebp+0x1],al
1003db9f:	je     0x1003da77
1003dba5:	cmp    DWORD PTR [esp+0x40],0x0
1003dbaa:	mov    ebp,ebx
1003dbac:	jne    0x1003da77
1003dbb2:	mov    eax,DWORD PTR [esp+0x14]
1003dbb6:	cmp    ebx,eax
1003dbb8:	ja     0x1003da77
1003dbbe:	cmp    BYTE PTR [ebx-0x1],0xd
1003dbc2:	jne    0x1003d817
1003dbc8:	cmp    ebx,eax
1003dbca:	jae    0x1003d817
1003dbd0:	cmp    BYTE PTR [ebx],0xa
1003dbd3:	jne    0x1003d817
1003dbd9:	mov    ecx,DWORD PTR [esp+0x20]
1003dbdd:	test   BYTE PTR [ecx+0xc],0x20
1003dbe1:	jne    0x1003d817
1003dbe7:	mov    eax,DWORD PTR [esp+0xa0]
1003dbee:	cmp    eax,0x1
1003dbf1:	je     0x1003dc06
1003dbf3:	cmp    eax,0x2
1003dbf6:	je     0x1003dc06
1003dbf8:	cmp    DWORD PTR [esp+0xa4],0x2
1003dc00:	jne    0x1003d817
1003dc06:	lea    ebp,[ebx+0x1]
1003dc09:	jmp    0x1003d817
1003dc0e:	cmp    esi,0x1
1003dc11:	jne    0x1003da77
1003dc17:	cmp    DWORD PTR [esp+0x2c],0x0
1003dc1c:	mov    esi,DWORD PTR [esp+0x28]
1003dc20:	je     0x1003dc5d
1003dc22:	mov    edi,DWORD PTR [esp+0x94]
1003dc29:	push   0xc4
1003dc2e:	lea    edx,[edi+0x8]
1003dc31:	push   edx
1003dc32:	lea    eax,[esi+0x8]
1003dc35:	push   eax
1003dc36:	call   0x10045340
1003dc3b:	add    esp,0xc
1003dc3e:	cmp    DWORD PTR [esp+0xf0],0x33
1003dc46:	jle    0x1003dc53
1003dc48:	mov    DWORD PTR [esp+0xb4],0x1
1003dc53:	push   edi
1003dc54:	call   DWORD PTR ds:0x1008150c
1003dc5a:	add    esp,0x4
1003dc5d:	cmp    DWORD PTR [esp+0xb4],0x0
1003dc65:	je     0x1003dc6b
1003dc67:	xor    eax,eax
1003dc69:	jmp    0x1003dc77
1003dc6b:	mov    eax,DWORD PTR [esp+0xf0]
1003dc72:	cdq    
1003dc73:	sub    eax,edx
1003dc75:	sar    eax,1
1003dc77:	mov    ecx,DWORD PTR [esp+0xe0]
1003dc7e:	mov    edx,DWORD PTR [esp+0xe8]
1003dc85:	sub    edx,ecx
1003dc87:	mov    DWORD PTR [esi],edx
1003dc89:	mov    edx,DWORD PTR [esp+0xec]
1003dc90:	sub    edx,ecx
1003dc92:	mov    DWORD PTR [esi+0x4],edx
1003dc95:	jmp    0x1003dcbc
1003dc97:	cmp    DWORD PTR [esp+0xd0],0x0
1003dc9f:	je     0x1003dcb2
1003dca1:	cmp    DWORD PTR [esp+0xd4],0x0
1003dca9:	je     0x1003dcb2
1003dcab:	mov    eax,0xfffffff4
1003dcb0:	jmp    0x1003dcbc
1003dcb2:	or     eax,0xffffffff
1003dcb5:	jmp    0x1003dcbc
1003dcb7:	mov    eax,0xfffffffe
1003dcbc:	mov    ecx,DWORD PTR [esp+0x13c]
1003dcc3:	pop    edi
1003dcc4:	pop    esi
1003dcc5:	pop    ebp
1003dcc6:	pop    ebx
1003dcc7:	xor    ecx,esp
1003dcc9:	call   0x10043615
1003dcce:	add    esp,0x134
1003dcd4:	ret    
1003dcd5:	lea    ecx,[ecx+0x0]
1003dcd8:	jne    0x1003dcb4
1003dcda:	add    edx,DWORD PTR [eax]
1003dcdc:	and    ebx,ebx
1003dcde:	add    edx,DWORD PTR [eax]
1003dce0:	sbb    bl,bl
1003dce2:	add    edx,DWORD PTR [eax]
1003dce4:	and    ebx,ebx
1003dce6:	add    edx,DWORD PTR [eax]
1003dce8:	int3   
1003dce9:	int3   
1003dcea:	int3   
1003dceb:	int3   
1003dcec:	int3   
1003dced:	int3   
1003dcee:	int3   
1003dcef:	int3   
1003dcf0:	push   ebp
1003dcf1:	mov    ebp,esp
1003dcf3:	and    esp,0xfffffff8
1003dcf6:	sub    esp,0x54
1003dcf9:	mov    eax,ds:0x100801ac
1003dcfe:	xor    eax,esp
1003dd00:	mov    DWORD PTR [esp+0x50],eax
1003dd04:	test   edx,edx
1003dd06:	push   ebx
1003dd07:	mov    eax,edx
1003dd09:	je     0x1003dd5a
1003dd0b:	test   esi,esi
1003dd0d:	je     0x1003dd5a
1003dd0f:	cmp    DWORD PTR [edx],0x50435245
1003dd15:	je     0x1003dd42
1003dd17:	lea    eax,[esp+0x2c]
1003dd1b:	push   eax
1003dd1c:	lea    ecx,[esp+0x8]
1003dd20:	push   ecx
1003dd21:	xor    ebx,ebx
1003dd23:	call   0x10042cf0
1003dd28:	add    esp,0x8
1003dd2b:	test   eax,eax
1003dd2d:	jne    0x1003dd42
1003dd2f:	lea    eax,[ebx-0x4]
1003dd32:	pop    ebx
1003dd33:	mov    ecx,DWORD PTR [esp+0x50]
1003dd37:	xor    ecx,esp
1003dd39:	call   0x10043615
1003dd3e:	mov    esp,ebp
1003dd40:	pop    ebp
1003dd41:	ret    
1003dd42:	movzx  edx,WORD PTR [eax+0x10]
1003dd46:	mov    DWORD PTR [esi],edx
1003dd48:	xor    eax,eax
1003dd4a:	pop    ebx
1003dd4b:	mov    ecx,DWORD PTR [esp+0x50]
1003dd4f:	xor    ecx,esp
1003dd51:	call   0x10043615
1003dd56:	mov    esp,ebp
1003dd58:	pop    ebp
1003dd59:	ret    
1003dd5a:	mov    ecx,DWORD PTR [esp+0x54]
1003dd5e:	pop    ebx
1003dd5f:	xor    ecx,esp
1003dd61:	mov    eax,0xfffffffe
1003dd66:	call   0x10043615
1003dd6b:	mov    esp,ebp
1003dd6d:	pop    ebp
1003dd6e:	ret    
1003dd6f:	int3   
1003dd70:	push   ecx
1003dd71:	push   ebx
1003dd72:	mov    ebx,eax
1003dd74:	mov    eax,DWORD PTR [esp+0xc]
1003dd78:	mov    ecx,DWORD PTR [eax]
1003dd7a:	movzx  eax,BYTE PTR [ecx+0x1]
1003dd7e:	push   ebp
1003dd7f:	add    ecx,0x1
1003dd82:	mov    ebp,ebx
1003dd84:	shr    ebp,0xb
1003dd87:	and    ebp,0x1
1003dd8a:	test   eax,eax
1003dd8c:	jne    0x1003dda2
1003dd8e:	mov    edx,DWORD PTR [esp+0x14]
1003dd92:	mov    DWORD PTR [edx],0x1
1003dd98:	mov    edx,DWORD PTR [esp+0x10]
1003dd9c:	pop    ebp
1003dd9d:	mov    DWORD PTR [edx],ecx
1003dd9f:	pop    ebx
1003dda0:	pop    ecx
1003dda1:	ret    
1003dda2:	lea    edx,[eax-0x30]
1003dda5:	cmp    edx,0x4a
1003dda8:	ja     0x1003e128
1003ddae:	push   edi
1003ddaf:	movsx  edi,WORD PTR [edx*2+0x1006fa88]
1003ddb7:	test   edi,edi
1003ddb9:	mov    DWORD PTR [esp+0xc],edi
1003ddbd:	je     0x1003ddcc
1003ddbf:	mov    edx,DWORD PTR [esp+0x14]
1003ddc3:	mov    eax,edi
1003ddc5:	pop    edi
1003ddc6:	pop    ebp
1003ddc7:	mov    DWORD PTR [edx],ecx
1003ddc9:	pop    ebx
1003ddca:	pop    ecx
1003ddcb:	ret    
1003ddcc:	cmp    edx,0x48
1003ddcf:	push   esi
1003ddd0:	ja     0x1003e117
1003ddd6:	movzx  esi,BYTE PTR [edx+0x1003e150]
1003dddd:	jmp    DWORD PTR [esi*4+0x1003e134]
1003dde4:	mov    edx,DWORD PTR [esp+0x1c]
1003dde8:	pop    esi
1003dde9:	pop    edi
1003ddea:	mov    DWORD PTR [edx],0x25
1003ddf0:	mov    edx,DWORD PTR [esp+0x10]
1003ddf4:	pop    ebp
1003ddf5:	mov    DWORD PTR [edx],ecx
1003ddf7:	pop    ebx
1003ddf8:	pop    ecx
1003ddf9:	ret    
1003ddfa:	mov    al,BYTE PTR [ecx+0x1]
1003ddfd:	cmp    al,0x3c
1003ddff:	je     0x1003df1f
1003de05:	cmp    al,0x27
1003de07:	je     0x1003df1f
1003de0d:	cmp    al,0x7b
1003de0f:	mov    bl,0x4
1003de11:	jne    0x1003de62
1003de13:	mov    al,BYTE PTR [ecx+0x2]
1003de16:	test   al,al
1003de18:	lea    edx,[ecx+0x2]
1003de1b:	je     0x1003de3d
1003de1d:	lea    ecx,[ecx+0x0]
1003de20:	cmp    al,0x7d
1003de22:	je     0x1003de46
1003de24:	cmp    al,0x2d
1003de26:	je     0x1003de33
1003de28:	movzx  eax,al
1003de2b:	test   BYTE PTR [eax+0x100705c8],bl
1003de31:	je     0x1003de46
1003de33:	mov    al,BYTE PTR [edx+0x1]
1003de36:	add    edx,0x1
1003de39:	test   al,al
1003de3b:	jne    0x1003de20
1003de3d:	mov    esi,0x1
1003de42:	add    ecx,esi
1003de44:	jmp    0x1003de64
1003de46:	mov    dl,BYTE PTR [edx]
1003de48:	test   dl,dl
1003de4a:	je     0x1003de3d
1003de4c:	cmp    dl,0x7d
1003de4f:	je     0x1003de3d
1003de51:	mov    edx,DWORD PTR [esp+0x18]
1003de55:	pop    esi
1003de56:	pop    edi
1003de57:	pop    ebp
1003de58:	mov    eax,0xffffffe4
1003de5d:	mov    DWORD PTR [edx],ecx
1003de5f:	pop    ebx
1003de60:	pop    ecx
1003de61:	ret    
1003de62:	xor    esi,esi
1003de64:	cmp    BYTE PTR [ecx+0x1],0x2d
1003de68:	jne    0x1003de73
1003de6a:	mov    edx,0x1
1003de6f:	add    ecx,edx
1003de71:	jmp    0x1003de75
1003de73:	xor    edx,edx
1003de75:	movzx  edi,BYTE PTR [ecx+0x1]
1003de79:	xor    eax,eax
1003de7b:	test   BYTE PTR [edi+0x100705c8],bl
1003de81:	je     0x1003dea5
1003de83:	movzx  edi,BYTE PTR [ecx+0x1]
1003de87:	add    ecx,0x1
1003de8a:	lea    eax,[eax+eax*4]
1003de8d:	lea    eax,[edi+eax*2-0x30]
1003de91:	movzx  edi,BYTE PTR [ecx+0x1]
1003de95:	test   BYTE PTR [edi+0x100705c8],bl
1003de9b:	jne    0x1003de83
1003de9d:	test   eax,eax
1003de9f:	jl     0x1003df6e
1003dea5:	test   esi,esi
1003dea7:	je     0x1003dec7
1003dea9:	add    ecx,0x1
1003deac:	cmp    BYTE PTR [ecx],0x7d
1003deaf:	je     0x1003dec7
1003deb1:	mov    edx,DWORD PTR [esp+0x1c]
1003deb5:	pop    esi
1003deb6:	pop    edi
1003deb7:	mov    DWORD PTR [edx],0x39
1003debd:	mov    edx,DWORD PTR [esp+0x10]
1003dec1:	pop    ebp
1003dec2:	mov    DWORD PTR [edx],ecx
1003dec4:	pop    ebx
1003dec5:	pop    ecx
1003dec6:	ret    
1003dec7:	test   eax,eax
1003dec9:	jne    0x1003dee1
1003decb:	mov    edx,DWORD PTR [esp+0x1c]
1003decf:	pop    esi
1003ded0:	pop    edi
1003ded1:	mov    DWORD PTR [edx],0x3a
1003ded7:	mov    edx,DWORD PTR [esp+0x10]
1003dedb:	pop    ebp
1003dedc:	mov    DWORD PTR [edx],ecx
1003dede:	pop    ebx
1003dedf:	pop    ecx
1003dee0:	ret    
1003dee1:	test   edx,edx
1003dee3:	je     0x1003df0a
1003dee5:	mov    edx,DWORD PTR [esp+0x20]
1003dee9:	cmp    eax,edx
1003deeb:	jle    0x1003df03
1003deed:	mov    edx,DWORD PTR [esp+0x1c]
1003def1:	pop    esi
1003def2:	pop    edi
1003def3:	mov    DWORD PTR [edx],0xf
1003def9:	mov    edx,DWORD PTR [esp+0x10]
1003defd:	pop    ebp
1003defe:	mov    DWORD PTR [edx],ecx
1003df00:	pop    ebx
1003df01:	pop    ecx
1003df02:	ret    
1003df03:	sub    edx,eax
1003df05:	add    edx,0x1
1003df08:	mov    eax,edx
1003df0a:	pop    esi
1003df0b:	mov    edx,0xffffffe3
1003df10:	sub    edx,eax
1003df12:	pop    edi
1003df13:	mov    eax,edx
1003df15:	mov    edx,DWORD PTR [esp+0x10]
1003df19:	pop    ebp
1003df1a:	mov    DWORD PTR [edx],ecx
1003df1c:	pop    ebx
1003df1d:	pop    ecx
1003df1e:	ret    
1003df1f:	mov    edx,DWORD PTR [esp+0x18]
1003df23:	pop    esi
1003df24:	pop    edi
1003df25:	pop    ebp
1003df26:	mov    eax,0xffffffe5
1003df2b:	mov    DWORD PTR [edx],ecx
1003df2d:	pop    ebx
1003df2e:	pop    ecx
1003df2f:	ret    
1003df30:	cmp    DWORD PTR [esp+0x24],0x0
1003df35:	jne    0x1003df95
1003df37:	mov    eax,edx
1003df39:	movzx  edx,BYTE PTR [ecx+0x1]
1003df3d:	mov    bl,0x4
1003df3f:	test   BYTE PTR [edx+0x100705c8],bl
1003df45:	mov    esi,ecx
1003df47:	je     0x1003df6a
1003df49:	lea    esp,[esp+0x0]
1003df50:	movzx  edx,BYTE PTR [ecx+0x1]
1003df54:	add    ecx,0x1
1003df57:	lea    eax,[eax+eax*4]
1003df5a:	lea    eax,[edx+eax*2-0x30]
1003df5e:	movzx  edx,BYTE PTR [ecx+0x1]
1003df62:	test   BYTE PTR [edx+0x100705c8],bl
1003df68:	jne    0x1003df50
1003df6a:	test   eax,eax
1003df6c:	jge    0x1003df84
1003df6e:	mov    edx,DWORD PTR [esp+0x1c]
1003df72:	pop    esi
1003df73:	pop    edi
1003df74:	mov    DWORD PTR [edx],0x3d
1003df7a:	mov    edx,DWORD PTR [esp+0x10]
1003df7e:	pop    ebp
1003df7f:	mov    DWORD PTR [edx],ecx
1003df81:	pop    ebx
1003df82:	pop    ecx
1003df83:	ret    
1003df84:	cmp    eax,0xa
1003df87:	jl     0x1003df0a
1003df89:	cmp    eax,DWORD PTR [esp+0x20]
1003df8d:	jle    0x1003df0a
1003df93:	mov    ecx,esi
1003df95:	movzx  eax,BYTE PTR [ecx]
1003df98:	cmp    eax,0x38
1003df9b:	jl     0x1003dfae
1003df9d:	mov    edx,DWORD PTR [esp+0x18]
1003dfa1:	pop    esi
1003dfa2:	pop    edi
1003dfa3:	sub    ecx,0x1
1003dfa6:	pop    ebp
1003dfa7:	xor    eax,eax
1003dfa9:	mov    DWORD PTR [edx],ecx
1003dfab:	pop    ebx
1003dfac:	pop    ecx
1003dfad:	ret    
1003dfae:	sub    eax,0x30
1003dfb1:	mov    dl,BYTE PTR [ecx+0x1]
1003dfb4:	add    edi,0x1
1003dfb7:	cmp    dl,0x30
1003dfba:	jb     0x1003dfd1
1003dfbc:	cmp    dl,0x37
1003dfbf:	ja     0x1003dfd1
1003dfc1:	movzx  edx,BYTE PTR [ecx+0x1]
1003dfc5:	add    ecx,0x1
1003dfc8:	cmp    edi,0x2
1003dfcb:	lea    eax,[edx+eax*8-0x30]
1003dfcf:	jl     0x1003dfb1
1003dfd1:	test   ebp,ebp
1003dfd3:	jne    0x1003e126
1003dfd9:	cmp    eax,0xff
1003dfde:	jle    0x1003e126
1003dfe4:	mov    edx,DWORD PTR [esp+0x1c]
1003dfe8:	pop    esi
1003dfe9:	pop    edi
1003dfea:	mov    DWORD PTR [edx],0x33
1003dff0:	mov    edx,DWORD PTR [esp+0x10]
1003dff4:	pop    ebp
1003dff5:	mov    DWORD PTR [edx],ecx
1003dff7:	pop    ebx
1003dff8:	pop    ecx
1003dff9:	ret    
1003dffa:	cmp    BYTE PTR [ecx+0x1],0x7b
1003dffe:	mov    bl,0x8
1003e000:	jne    0x1003e08f
1003e006:	movzx  esi,BYTE PTR [ecx+0x2]
1003e00a:	lea    edi,[ecx+0x2]
1003e00d:	xor    edx,edx
1003e00f:	xor    eax,eax
1003e011:	test   BYTE PTR [esi+0x100705c8],bl
1003e017:	je     0x1003e05c
1003e019:	lea    esp,[esp+0x0]
1003e020:	add    edi,0x1
1003e023:	test   eax,eax
1003e025:	jne    0x1003e02c
1003e027:	cmp    esi,0x30
1003e02a:	je     0x1003e051
1003e02c:	add    edx,0x1
1003e02f:	cmp    esi,0x61
1003e032:	jl     0x1003e037
1003e034:	sub    esi,0x20
1003e037:	xor    ebx,ebx
1003e039:	cmp    esi,0x41
1003e03c:	setge  bl
1003e03f:	shl    eax,0x4
1003e042:	sub    ebx,0x1
1003e045:	and    ebx,0xfffffff9
1003e048:	add    ebx,0x37
1003e04b:	sub    eax,ebx
1003e04d:	add    eax,esi
1003e04f:	mov    bl,0x8
1003e051:	movzx  esi,BYTE PTR [edi]
1003e054:	test   BYTE PTR [esi+0x100705c8],bl
1003e05a:	jne    0x1003e020
1003e05c:	cmp    BYTE PTR [edi],0x7d
1003e05f:	jne    0x1003e08b
1003e061:	test   eax,eax
1003e063:	jl     0x1003e073
1003e065:	neg    ebp
1003e067:	sbb    ebp,ebp
1003e069:	and    ebp,0x6
1003e06c:	add    ebp,0x2
1003e06f:	cmp    edx,ebp
1003e071:	jle    0x1003e07d
1003e073:	mov    ecx,DWORD PTR [esp+0x1c]
1003e077:	mov    DWORD PTR [ecx],0x22
1003e07d:	mov    edx,DWORD PTR [esp+0x18]
1003e081:	pop    esi
1003e082:	mov    ecx,edi
1003e084:	pop    edi
1003e085:	pop    ebp
1003e086:	mov    DWORD PTR [edx],ecx
1003e088:	pop    ebx
1003e089:	pop    ecx
1003e08a:	ret    
1003e08b:	mov    edi,DWORD PTR [esp+0x10]
1003e08f:	xor    eax,eax
1003e091:	movzx  edx,BYTE PTR [ecx+0x1]
1003e095:	add    edi,0x1
1003e098:	test   BYTE PTR [edx+0x100705c8],bl
1003e09e:	je     0x1003e126
1003e0a4:	movzx  esi,BYTE PTR [ecx+0x1]
1003e0a8:	add    ecx,0x1
1003e0ab:	cmp    esi,0x61
1003e0ae:	jl     0x1003e0b3
1003e0b0:	sub    esi,0x20
1003e0b3:	xor    edx,edx
1003e0b5:	cmp    esi,0x41
1003e0b8:	setge  dl
1003e0bb:	shl    eax,0x4
1003e0be:	sub    edx,0x1
1003e0c1:	and    edx,0xfffffff9
1003e0c4:	add    edx,0x37
1003e0c7:	sub    eax,edx
1003e0c9:	add    eax,esi
1003e0cb:	cmp    edi,0x2
1003e0ce:	jl     0x1003e091
1003e0d0:	mov    edx,DWORD PTR [esp+0x18]
1003e0d4:	pop    esi
1003e0d5:	pop    edi
1003e0d6:	pop    ebp
1003e0d7:	mov    DWORD PTR [edx],ecx
1003e0d9:	pop    ebx
1003e0da:	pop    ecx
1003e0db:	ret    
1003e0dc:	movzx  eax,BYTE PTR [ecx+0x1]
1003e0e0:	add    ecx,0x1
1003e0e3:	test   eax,eax
1003e0e5:	jne    0x1003e0fd
1003e0e7:	mov    edx,DWORD PTR [esp+0x1c]
1003e0eb:	pop    esi
1003e0ec:	pop    edi
1003e0ed:	mov    DWORD PTR [edx],0x2
1003e0f3:	mov    edx,DWORD PTR [esp+0x10]
1003e0f7:	pop    ebp
1003e0f8:	mov    DWORD PTR [edx],ecx
1003e0fa:	pop    ebx
1003e0fb:	pop    ecx
1003e0fc:	ret    
1003e0fd:	lea    edx,[eax-0x61]
1003e100:	cmp    edx,0x19
1003e103:	ja     0x1003e108
1003e105:	sub    eax,0x20
1003e108:	mov    edx,DWORD PTR [esp+0x18]
1003e10c:	pop    esi
1003e10d:	pop    edi
1003e10e:	pop    ebp
1003e10f:	xor    eax,0x40
1003e112:	mov    DWORD PTR [edx],ecx
1003e114:	pop    ebx
1003e115:	pop    ecx
1003e116:	ret    
1003e117:	test   bl,0x40
1003e11a:	je     0x1003e126
1003e11c:	mov    edx,DWORD PTR [esp+0x1c]
1003e120:	mov    DWORD PTR [edx],0x3
1003e126:	pop    esi
1003e127:	pop    edi
1003e128:	mov    edx,DWORD PTR [esp+0x10]
1003e12c:	pop    ebp
1003e12d:	mov    DWORD PTR [edx],ecx
1003e12f:	pop    ebx
1003e130:	pop    ecx
1003e131:	ret    
1003e132:	mov    edi,edi
1003e134:	scas   al,BYTE PTR es:[edi]
1003e135:	fild   WORD PTR [ebx]
1003e137:	adc    BYTE PTR [eax],dh
1003e139:	fild   WORD PTR [ebx]
1003e13b:	adc    ah,ah
1003e13d:	fld    QWORD PTR [ebx]
1003e13f:	adc    ah,bl
1003e141:	loopne 0x1003e146
1003e143:	adc    dl,bh
1003e145:	fld    QWORD PTR [ebx]
1003e147:	adc    dl,bh
1003e149:	fild   WORD PTR [ebx]
1003e14b:	adc    BYTE PTR [edi],dl
1003e14d:	loope  0x1003e152
1003e14f:	adc    BYTE PTR [eax],al
1003e151:	add    DWORD PTR [ecx],eax
1003e153:	add    DWORD PTR [ecx],eax
1003e155:	add    DWORD PTR [ecx],eax
1003e157:	add    DWORD PTR [ecx],eax
1003e159:	add    DWORD PTR [esi],eax
1003e15b:	push   es
1003e15c:	push   es
1003e15d:	push   es
1003e15e:	push   es
1003e15f:	push   es
1003e160:	push   es
1003e161:	push   es
1003e162:	push   es
1003e163:	push   es
1003e164:	push   es
1003e165:	push   es
1003e166:	push   es
1003e167:	push   es
1003e168:	push   es
1003e169:	push   es
1003e16a:	push   es
1003e16b:	push   es
1003e16c:	add    al,BYTE PTR [esi]
1003e16e:	add    al,BYTE PTR [esi]
1003e170:	push   es
1003e171:	push   es
1003e172:	push   es
1003e173:	push   es
1003e174:	push   es
1003e175:	add    al,BYTE PTR [esi]
1003e177:	push   es
1003e178:	push   es
1003e179:	push   es
1003e17a:	push   es
1003e17b:	push   es
1003e17c:	push   es
1003e17d:	push   es
1003e17e:	push   es
1003e17f:	push   es
1003e180:	push   es
1003e181:	push   es
1003e182:	push   es
1003e183:	add    eax,DWORD PTR [esi]
1003e185:	push   es
1003e186:	push   es
1003e187:	add    al,0x6
1003e189:	push   es
1003e18a:	push   es
1003e18b:	push   es
1003e18c:	add    al,BYTE PTR [esi]
1003e18e:	push   es
1003e18f:	push   es
1003e190:	push   es
1003e191:	push   es
1003e192:	push   es
1003e193:	push   es
1003e194:	push   es
1003e195:	add    al,BYTE PTR [esi]
1003e197:	push   es
1003e198:	add    eax,0xcccccccc
1003e19d:	int3   
1003e19e:	int3   
1003e19f:	int3   
1003e1a0:	movzx  ecx,BYTE PTR [eax]
1003e1a3:	mov    cl,BYTE PTR [ecx+0x100705c8]
1003e1a9:	mov    dl,0x4
1003e1ab:	and    cl,dl
1003e1ad:	add    eax,0x1
1003e1b0:	test   cl,cl
1003e1b2:	jne    0x1003e1b7
1003e1b4:	xor    eax,eax
1003e1b6:	ret    
1003e1b7:	movzx  ecx,BYTE PTR [eax]
1003e1ba:	test   BYTE PTR [ecx+0x100705c8],dl
1003e1c0:	je     0x1003e1d1
1003e1c2:	movzx  ecx,BYTE PTR [eax+0x1]
1003e1c6:	add    eax,0x1
1003e1c9:	test   BYTE PTR [ecx+0x100705c8],dl
1003e1cf:	jne    0x1003e1c2
1003e1d1:	mov    cl,BYTE PTR [eax]
1003e1d3:	cmp    cl,0x7d
1003e1d6:	jne    0x1003e1de
1003e1d8:	mov    eax,0x1
1003e1dd:	ret    
1003e1de:	add    eax,0x1
1003e1e1:	cmp    cl,0x2c
1003e1e4:	jne    0x1003e1b4
1003e1e6:	mov    cl,BYTE PTR [eax]
1003e1e8:	cmp    cl,0x7d
1003e1eb:	je     0x1003e1d8
1003e1ed:	movzx  ecx,cl
1003e1f0:	mov    cl,BYTE PTR [ecx+0x100705c8]
1003e1f6:	and    cl,dl
1003e1f8:	add    eax,0x1
1003e1fb:	test   cl,cl
1003e1fd:	je     0x1003e1b4
1003e1ff:	movzx  ecx,BYTE PTR [eax]
1003e202:	test   BYTE PTR [ecx+0x100705c8],dl
1003e208:	je     0x1003e21f
1003e20a:	lea    ebx,[ebx+0x0]
1003e210:	movzx  ecx,BYTE PTR [eax+0x1]
1003e214:	add    eax,0x1
1003e217:	test   BYTE PTR [ecx+0x100705c8],dl
1003e21d:	jne    0x1003e210
1003e21f:	xor    edx,edx
1003e221:	cmp    BYTE PTR [eax],0x7d
1003e224:	sete   dl
1003e227:	mov    eax,edx
1003e229:	ret    
1003e22a:	int3   
1003e22b:	int3   
1003e22c:	int3   
1003e22d:	int3   
1003e22e:	int3   
1003e22f:	int3   
1003e230:	movzx  ecx,BYTE PTR [eax]
1003e233:	push   ebx
1003e234:	push   esi
1003e235:	mov    ebx,0x4
1003e23a:	xor    esi,esi
1003e23c:	or     edx,0xffffffff
1003e23f:	test   BYTE PTR [ecx+0x100705c8],bl
1003e245:	je     0x1003e271
1003e247:	jmp    0x1003e250
1003e249:	lea    esp,[esp+0x0]
1003e250:	lea    esi,[esi+esi*4]
1003e253:	add    eax,0x1
1003e256:	lea    esi,[ecx+esi*2-0x30]
1003e25a:	movzx  ecx,BYTE PTR [eax]
1003e25d:	test   BYTE PTR [ecx+0x100705c8],bl
1003e263:	jne    0x1003e250
1003e265:	test   esi,esi
1003e267:	jl     0x1003e2ca
1003e269:	cmp    esi,0xffff
1003e26f:	jg     0x1003e2ca
1003e271:	cmp    BYTE PTR [eax],0x7d
1003e274:	jne    0x1003e287
1003e276:	mov    edx,esi
1003e278:	mov    ecx,DWORD PTR [esp+0xc]
1003e27c:	mov    DWORD PTR [ecx],esi
1003e27e:	mov    ecx,DWORD PTR [esp+0x10]
1003e282:	pop    esi
1003e283:	mov    DWORD PTR [ecx],edx
1003e285:	pop    ebx
1003e286:	ret    
1003e287:	mov    cl,BYTE PTR [eax+0x1]
1003e28a:	add    eax,0x1
1003e28d:	cmp    cl,0x7d
1003e290:	je     0x1003e278
1003e292:	movzx  ecx,cl
1003e295:	xor    edx,edx
1003e297:	test   BYTE PTR [ecx+0x100705c8],bl
1003e29d:	je     0x1003e2c1
1003e29f:	nop
1003e2a0:	lea    edx,[edx+edx*4]
1003e2a3:	add    eax,0x1
1003e2a6:	lea    edx,[ecx+edx*2-0x30]
1003e2aa:	movzx  ecx,BYTE PTR [eax]
1003e2ad:	test   BYTE PTR [ecx+0x100705c8],bl
1003e2b3:	jne    0x1003e2a0
1003e2b5:	test   edx,edx
1003e2b7:	jl     0x1003e2ca
1003e2b9:	cmp    edx,0xffff
1003e2bf:	jg     0x1003e2ca
1003e2c1:	cmp    edx,esi
1003e2c3:	jge    0x1003e278
1003e2c5:	pop    esi
1003e2c6:	mov    DWORD PTR [edi],ebx
1003e2c8:	pop    ebx
1003e2c9:	ret    
1003e2ca:	pop    esi
1003e2cb:	mov    DWORD PTR [edi],0x5
1003e2d1:	pop    ebx
1003e2d2:	ret    
1003e2d3:	int3   
1003e2d4:	int3   
1003e2d5:	int3   
1003e2d6:	int3   
1003e2d7:	int3   
1003e2d8:	int3   
1003e2d9:	int3   
1003e2da:	int3   
1003e2db:	int3   
1003e2dc:	int3   
1003e2dd:	int3   
1003e2de:	int3   
1003e2df:	int3   
1003e2e0:	push   ebp
1003e2e1:	push   esi
1003e2e2:	mov    esi,eax
1003e2e4:	mov    eax,DWORD PTR [esp+0xc]
1003e2e8:	mov    ebp,DWORD PTR [eax+0x30]
1003e2eb:	mov    al,BYTE PTR [esi]
1003e2ed:	test   al,al
1003e2ef:	push   edi
1003e2f0:	je     0x1003e40a
1003e2f6:	cmp    al,0x5c
1003e2f8:	jne    0x1003e337
1003e2fa:	mov    al,BYTE PTR [esi+0x1]
1003e2fd:	add    esi,0x1
1003e300:	test   al,al
1003e302:	je     0x1003e40a
1003e308:	cmp    al,0x51
1003e30a:	jne    0x1003e4ac
1003e310:	mov    al,BYTE PTR [esi+0x1]
1003e313:	add    esi,0x1
1003e316:	test   al,al
1003e318:	je     0x1003e40a
1003e31e:	cmp    al,0x5c
1003e320:	jne    0x1003e310
1003e322:	test   al,al
1003e324:	je     0x1003e40a
1003e32a:	add    esi,0x1
1003e32d:	cmp    BYTE PTR [esi],0x45
1003e330:	jne    0x1003e310
1003e332:	jmp    0x1003e4ac
1003e337:	cmp    al,0x5b
1003e339:	jne    0x1003e3e9
1003e33f:	xor    edi,edi
1003e341:	movzx  eax,BYTE PTR [esi+0x1]
1003e345:	add    esi,0x1
1003e348:	cmp    eax,0x5c
1003e34b:	jne    0x1003e373
1003e34d:	cmp    BYTE PTR [esi+0x1],0x45
1003e351:	lea    eax,[esi+0x1]
1003e354:	jne    0x1003e35a
1003e356:	mov    esi,eax
1003e358:	jmp    0x1003e341
1003e35a:	push   0x3
1003e35c:	push   0x1007587c
1003e361:	push   eax
1003e362:	call   0x1004f416
1003e367:	add    esp,0xc
1003e36a:	test   eax,eax
1003e36c:	jne    0x1003e381
1003e36e:	add    esi,0x3
1003e371:	jmp    0x1003e341
1003e373:	test   edi,edi
1003e375:	jne    0x1003e381
1003e377:	cmp    eax,0x5e
1003e37a:	jne    0x1003e381
1003e37c:	lea    edi,[eax-0x5d]
1003e37f:	jmp    0x1003e341
1003e381:	cmp    BYTE PTR [esi+0x1],0x5d
1003e385:	jne    0x1003e397
1003e387:	mov    ecx,DWORD PTR [esp+0x10]
1003e38b:	test   DWORD PTR [ecx+0x40],0x2000000
1003e392:	jne    0x1003e397
1003e394:	add    esi,0x1
1003e397:	mov    al,BYTE PTR [esi+0x1]
1003e39a:	add    esi,0x1
1003e39d:	cmp    al,0x5d
1003e39f:	je     0x1003e4ac
1003e3a5:	test   al,al
1003e3a7:	je     0x1003e40a
1003e3a9:	cmp    al,0x5c
1003e3ab:	jne    0x1003e3da
1003e3ad:	mov    al,BYTE PTR [esi+0x1]
1003e3b0:	add    esi,0x1
1003e3b3:	test   al,al
1003e3b5:	je     0x1003e40a
1003e3b7:	cmp    al,0x51
1003e3b9:	jne    0x1003e3da
1003e3bb:	jmp    0x1003e3c0
1003e3bd:	lea    ecx,[ecx+0x0]
1003e3c0:	mov    al,BYTE PTR [esi+0x1]
1003e3c3:	add    esi,0x1
1003e3c6:	test   al,al
1003e3c8:	je     0x1003e40a
1003e3ca:	cmp    al,0x5c
1003e3cc:	jne    0x1003e3c0
1003e3ce:	test   al,al
1003e3d0:	je     0x1003e40a
1003e3d2:	add    esi,0x1
1003e3d5:	cmp    BYTE PTR [esi],0x45
1003e3d8:	jne    0x1003e3c0
1003e3da:	mov    al,BYTE PTR [esi+0x1]
1003e3dd:	add    esi,0x1
1003e3e0:	cmp    al,0x5d
1003e3e2:	jne    0x1003e3a5
1003e3e4:	jmp    0x1003e4ac
1003e3e9:	cmp    DWORD PTR [esp+0x18],0x0
1003e3ee:	je     0x1003e411
1003e3f0:	cmp    al,0x23
1003e3f2:	jne    0x1003e411
1003e3f4:	mov    al,BYTE PTR [esi+0x1]
1003e3f7:	add    esi,0x1
1003e3fa:	test   al,al
1003e3fc:	je     0x1003e40a
1003e3fe:	cmp    al,0xa
1003e400:	jne    0x1003e3f4
1003e402:	test   al,al
1003e404:	jne    0x1003e4ac
1003e40a:	pop    edi
1003e40b:	pop    esi
1003e40c:	or     eax,0xffffffff
1003e40f:	pop    ebp
1003e410:	ret    
1003e411:	cmp    al,0x28
1003e413:	jne    0x1003e4ac
1003e419:	mov    al,BYTE PTR [esi+0x1]
1003e41c:	cmp    al,0x3f
1003e41e:	je     0x1003e435
1003e420:	cmp    al,0x2a
1003e422:	je     0x1003e435
1003e424:	add    ebp,0x1
1003e427:	test   ebx,ebx
1003e429:	jne    0x1003e4ac
1003e42f:	cmp    ebp,DWORD PTR [esp+0x14]
1003e433:	jmp    0x1003e4aa
1003e435:	add    esi,0x2
1003e438:	cmp    BYTE PTR [esi],0x50
1003e43b:	jne    0x1003e440
1003e43d:	add    esi,0x1
1003e440:	mov    cl,BYTE PTR [esi]
1003e442:	cmp    cl,0x3c
1003e445:	jne    0x1003e452
1003e447:	mov    al,BYTE PTR [esi+0x1]
1003e44a:	cmp    al,0x21
1003e44c:	je     0x1003e452
1003e44e:	cmp    al,0x3d
1003e450:	jne    0x1003e457
1003e452:	cmp    cl,0x27
1003e455:	jne    0x1003e4ac
1003e457:	add    ebp,0x1
1003e45a:	test   ebx,ebx
1003e45c:	jne    0x1003e464
1003e45e:	cmp    ebp,DWORD PTR [esp+0x14]
1003e462:	je     0x1003e4c1
1003e464:	movzx  eax,cl
1003e467:	add    esi,0x1
1003e46a:	cmp    eax,0x3c
1003e46d:	jne    0x1003e474
1003e46f:	mov    eax,0x3e
1003e474:	movzx  edx,BYTE PTR [esi]
1003e477:	cmp    edx,eax
1003e479:	mov    ecx,esi
1003e47b:	je     0x1003e48b
1003e47d:	lea    ecx,[ecx+0x0]
1003e480:	movzx  edx,BYTE PTR [esi+0x1]
1003e484:	add    esi,0x1
1003e487:	cmp    edx,eax
1003e489:	jne    0x1003e480
1003e48b:	test   ebx,ebx
1003e48d:	je     0x1003e4ac
1003e48f:	mov    eax,esi
1003e491:	sub    eax,ecx
1003e493:	cmp    DWORD PTR [esp+0x14],eax
1003e497:	jne    0x1003e4ac
1003e499:	mov    edx,DWORD PTR [esp+0x14]
1003e49d:	push   edx
1003e49e:	push   ecx
1003e49f:	push   ebx
1003e4a0:	call   0x1004f416
1003e4a5:	add    esp,0xc
1003e4a8:	test   eax,eax
1003e4aa:	je     0x1003e4c1
1003e4ac:	mov    al,BYTE PTR [esi+0x1]
1003e4af:	add    esi,0x1
1003e4b2:	test   al,al
1003e4b4:	jne    0x1003e2f6
1003e4ba:	pop    edi
1003e4bb:	pop    esi
1003e4bc:	or     eax,0xffffffff
1003e4bf:	pop    ebp
1003e4c0:	ret    
1003e4c1:	pop    edi
1003e4c2:	pop    esi
1003e4c3:	mov    eax,ebp
1003e4c5:	pop    ebp
1003e4c6:	ret    
1003e4c7:	int3   
1003e4c8:	int3   
1003e4c9:	int3   
1003e4ca:	int3   
1003e4cb:	int3   
1003e4cc:	int3   
1003e4cd:	int3   
1003e4ce:	int3   
1003e4cf:	int3   
1003e4d0:	movzx  edx,BYTE PTR [eax]
1003e4d3:	mov    ecx,edx
1003e4d5:	sub    ecx,0x4
1003e4d8:	cmp    ecx,0x62
1003e4db:	push   ebp
1003e4dc:	ja     0x1003e547
1003e4de:	mov    edi,edi
1003e4e0:	movzx  ecx,BYTE PTR [ecx+0x1003e560]
1003e4e7:	jmp    DWORD PTR [ecx*4+0x1003e54c]
1003e4ee:	test   esi,esi
1003e4f0:	jle    0x1003e504
1003e4f2:	movzx  ecx,BYTE PTR [eax+0x1]
1003e4f6:	mov    edx,DWORD PTR [edi]
1003e4f8:	mov    ebp,ecx
1003e4fa:	and    edx,esi
1003e4fc:	and    ebp,esi
1003e4fe:	cmp    ebp,edx
1003e500:	je     0x1003e504
1003e502:	mov    DWORD PTR [edi],ecx
1003e504:	add    eax,0x2
1003e507:	jmp    0x1003e53a
1003e509:	test   ebx,ebx
1003e50b:	je     0x1003e547
1003e50d:	lea    ecx,[ecx+0x0]
1003e510:	xor    ecx,ecx
1003e512:	mov    ch,BYTE PTR [eax+0x1]
1003e515:	mov    cl,BYTE PTR [eax+0x2]
1003e518:	add    eax,ecx
1003e51a:	cmp    BYTE PTR [eax],0x54
1003e51d:	je     0x1003e510
1003e51f:	movzx  edx,BYTE PTR [eax]
1003e522:	movzx  ecx,BYTE PTR [edx+0x1006fa18]
1003e529:	add    eax,ecx
1003e52b:	jmp    0x1003e53a
1003e52d:	test   ebx,ebx
1003e52f:	je     0x1003e547
1003e531:	movzx  edx,BYTE PTR [edx+0x1006fa18]
1003e538:	add    eax,edx
1003e53a:	movzx  edx,BYTE PTR [eax]
1003e53d:	mov    ecx,edx
1003e53f:	sub    ecx,0x4
1003e542:	cmp    ecx,0x62
1003e545:	jbe    0x1003e4e0
1003e547:	pop    ebp
1003e548:	ret    
1003e549:	lea    ecx,[ecx+0x0]
1003e54c:	sub    eax,0xee1003e5
1003e551:	in     al,0x3
1003e553:	adc    BYTE PTR [ecx],dh
1003e555:	in     eax,0x3
1003e557:	adc    BYTE PTR [ecx],cl
1003e559:	in     eax,0x3
1003e55b:	adc    BYTE PTR [edi-0x1b],al
1003e55e:	add    edx,DWORD PTR [eax]
1003e560:	add    BYTE PTR [eax],al
1003e562:	add    al,0x4
1003e564:	add    al,0x4
1003e566:	add    al,0x4
1003e568:	add    al,0x4
1003e56a:	add    al,0x4
1003e56c:	add    al,0x4
1003e56e:	add    al,0x4
1003e570:	add    al,0x4
1003e572:	add    al,0x4
1003e574:	add    al,0x1
1003e576:	add    al,0x4
1003e578:	add    al,0x4
1003e57a:	add    al,0x4
1003e57c:	add    al,0x4
1003e57e:	add    al,0x4
1003e580:	add    al,0x4
1003e582:	add    al,0x4
1003e584:	add    al,0x4
1003e586:	add    al,0x4
1003e588:	add    al,0x4
1003e58a:	add    al,0x4
1003e58c:	add    al,0x4
1003e58e:	add    al,0x4
1003e590:	add    al,0x4
1003e592:	add    al,0x4
1003e594:	add    al,0x4
1003e596:	add    al,0x4
1003e598:	add    al,0x4
1003e59a:	add    al,0x4
1003e59c:	add    al,0x4
1003e59e:	add    al,0x4
1003e5a0:	add    al,0x4
1003e5a2:	add    al,0x4
1003e5a4:	add    al,0x4
1003e5a6:	add    al,0x4
1003e5a8:	add    al,0x4
1003e5aa:	add    al,0x4
1003e5ac:	add    al,0x4
1003e5ae:	add    al,0x2
1003e5b0:	add    al,0x4
1003e5b2:	add    al,0x4
1003e5b4:	add    al,0x3
1003e5b6:	add    eax,DWORD PTR [ebx]
1003e5b8:	add    al,0x4
1003e5ba:	add    al,0x4
1003e5bc:	add    al,0x4
1003e5be:	add    al,0x4
1003e5c0:	add    al,BYTE PTR [edx]
1003e5c2:	add    cl,ah
1003e5c4:	int3   
1003e5c5:	int3   
1003e5c6:	int3   
1003e5c7:	int3   
1003e5c8:	int3   
1003e5c9:	int3   
1003e5ca:	int3   
1003e5cb:	int3   
1003e5cc:	int3   
1003e5cd:	int3   
1003e5ce:	int3   
1003e5cf:	int3   
1003e5d0:	push   ebx
1003e5d1:	push   ebp
1003e5d2:	push   esi
1003e5d3:	mov    esi,DWORD PTR [esp+0x10]
1003e5d7:	mov    cl,BYTE PTR [esi+0x3]
1003e5da:	add    esi,0x3
1003e5dd:	movzx  eax,cl
1003e5e0:	push   edi
1003e5e1:	or     ebx,0xffffffff
1003e5e4:	xor    edi,edi
1003e5e6:	cmp    eax,0x66
1003e5e9:	ja     0x1003e718
1003e5ef:	mov    ebp,DWORD PTR [esp+0x18]
1003e5f3:	jmp    0x1003e600
1003e5f5:	lea    esp,[esp+0x0]
1003e5fc:	lea    esp,[esp+0x0]
1003e600:	movzx  edx,BYTE PTR [eax+0x1003e764]
1003e607:	jmp    DWORD PTR [edx*4+0x1003e734]
1003e60e:	xor    ecx,ecx
1003e610:	cmp    eax,0x5f
1003e613:	setne  cl
1003e616:	push   ebp
1003e617:	sub    ecx,0x1
1003e61a:	and    ecx,0x2
1003e61d:	add    ecx,esi
1003e61f:	push   ecx
1003e620:	call   0x1003e5d0
1003e625:	add    esp,0x8
1003e628:	test   eax,eax
1003e62a:	jl     0x1003e71b
1003e630:	add    edi,eax
1003e632:	xor    edx,edx
1003e634:	mov    dh,BYTE PTR [esi+0x1]
1003e637:	mov    dl,BYTE PTR [esi+0x2]
1003e63a:	add    esi,edx
1003e63c:	cmp    BYTE PTR [esi],0x54
1003e63f:	je     0x1003e632
1003e641:	add    esi,0x3
1003e644:	jmp    0x1003e70a
1003e649:	test   ebx,ebx
1003e64b:	jge    0x1003e651
1003e64d:	mov    ebx,edi
1003e64f:	jmp    0x1003e659
1003e651:	cmp    ebx,edi
1003e653:	jne    0x1003e718
1003e659:	cmp    cl,0x54
1003e65c:	jne    0x1003e720
1003e662:	add    esi,0x3
1003e665:	xor    edi,edi
1003e667:	jmp    0x1003e70a
1003e66c:	lea    esp,[esp+0x0]
1003e670:	xor    eax,eax
1003e672:	mov    ah,BYTE PTR [esi+0x1]
1003e675:	mov    al,BYTE PTR [esi+0x2]
1003e678:	add    esi,eax
1003e67a:	cmp    BYTE PTR [esi],0x54
1003e67d:	je     0x1003e670
1003e67f:	movzx  ecx,BYTE PTR [esi]
1003e682:	movzx  edx,BYTE PTR [ecx+0x1006fa18]
1003e689:	add    esi,edx
1003e68b:	jmp    0x1003e70a
1003e68d:	add    edi,0x1
1003e690:	add    esi,0x2
1003e693:	jmp    0x1003e70a
1003e695:	xor    eax,eax
1003e697:	mov    ah,BYTE PTR [esi+0x1]
1003e69a:	mov    al,BYTE PTR [esi+0x2]
1003e69d:	add    edi,eax
1003e69f:	add    esi,0x4
1003e6a2:	jmp    0x1003e70a
1003e6a4:	mov    al,BYTE PTR [esi+0x3]
1003e6a7:	xor    ecx,ecx
1003e6a9:	mov    ch,BYTE PTR [esi+0x1]
1003e6ac:	mov    cl,BYTE PTR [esi+0x2]
1003e6af:	add    edi,ecx
1003e6b1:	cmp    al,0x10
1003e6b3:	je     0x1003e6b9
1003e6b5:	cmp    al,0xf
1003e6b7:	jne    0x1003e6bc
1003e6b9:	add    esi,0x2
1003e6bc:	add    esi,0x4
1003e6bf:	jmp    0x1003e70a
1003e6c1:	add    esi,0x2
1003e6c4:	add    edi,0x1
1003e6c7:	add    esi,0x1
1003e6ca:	jmp    0x1003e70a
1003e6cc:	movzx  eax,BYTE PTR [esi+0x21]
1003e6d0:	add    esi,0x21
1003e6d3:	add    eax,0xffffffba
1003e6d6:	cmp    eax,0x7
1003e6d9:	ja     0x1003e707
1003e6db:	movzx  edx,BYTE PTR [eax+0x1003e7d8]
1003e6e2:	jmp    DWORD PTR [edx*4+0x1003e7cc]
1003e6e9:	movzx  ecx,BYTE PTR [esi+0x2]
1003e6ed:	xor    edx,edx
1003e6ef:	mov    dh,BYTE PTR [esi+0x3]
1003e6f2:	xor    eax,eax
1003e6f4:	mov    ah,BYTE PTR [esi+0x1]
1003e6f7:	mov    dl,BYTE PTR [esi+0x4]
1003e6fa:	or     eax,ecx
1003e6fc:	cmp    eax,edx
1003e6fe:	jne    0x1003e718
1003e700:	add    edi,eax
1003e702:	add    esi,0x5
1003e705:	jmp    0x1003e70a
1003e707:	add    edi,0x1
1003e70a:	mov    cl,BYTE PTR [esi]
1003e70c:	movzx  eax,cl
1003e70f:	cmp    eax,0x66
1003e712:	jbe    0x1003e600
1003e718:	or     eax,0xffffffff
1003e71b:	pop    edi
1003e71c:	pop    esi
1003e71d:	pop    ebp
1003e71e:	pop    ebx
1003e71f:	ret    
1003e720:	pop    edi
1003e721:	pop    esi
1003e722:	pop    ebp
1003e723:	mov    eax,ebx
1003e725:	pop    ebx
1003e726:	ret    
1003e727:	pop    edi
1003e728:	pop    esi
1003e729:	pop    ebp
1003e72a:	mov    eax,0xfffffffe
1003e72f:	pop    ebx
1003e730:	ret    
1003e731:	lea    ecx,[ecx+0x0]
1003e734:	dec    ecx
1003e735:	out    0x3,al
1003e737:	adc    BYTE PTR [edi-0x1a],bh
1003e73a:	add    edx,DWORD PTR [eax]
1003e73c:	(bad)  
1003e73d:	out    0x3,al
1003e73f:	adc    BYTE PTR [edi],ah
1003e741:	out    0x3,eax
1003e743:	adc    cl,al
1003e745:	out    0x3,al
1003e747:	adc    BYTE PTR [ebp-0x6aeffc1a],cl
1003e74d:	out    0x3,al
1003e74f:	adc    BYTE PTR [esi+eiz*8-0x1933effd],ah
1003e756:	add    edx,DWORD PTR [eax]
1003e758:	jo     0x1003e740
1003e75a:	add    edx,DWORD PTR [eax]
1003e75c:	push   cs
1003e75d:	out    0x3,al
1003e75f:	adc    BYTE PTR [eax],bl
1003e761:	out    0x3,eax
1003e763:	adc    BYTE PTR [eax],al
1003e765:	add    DWORD PTR [ecx],eax
1003e767:	or     eax,DWORD PTR [ecx]
1003e769:	add    DWORD PTR [edx],eax
1003e76b:	add    al,BYTE PTR [edx]
1003e76d:	add    al,BYTE PTR [edx]
1003e76f:	add    al,BYTE PTR [edx]
1003e771:	add    al,BYTE PTR [ebx]
1003e773:	add    al,0x4
1003e775:	or     ecx,DWORD PTR [ebx]
1003e777:	or     ecx,DWORD PTR [ebx]
1003e779:	or     ecx,DWORD PTR [ebx]
1003e77b:	add    DWORD PTR [ecx],eax
1003e77d:	add    DWORD PTR [ecx],eax
1003e77f:	add    DWORD PTR ds:0xb0b0505,eax
1003e785:	or     ecx,DWORD PTR [ebx]
1003e787:	or     ecx,DWORD PTR [ebx]
1003e789:	or     ecx,DWORD PTR [ebx]
1003e78b:	push   es
1003e78c:	or     ecx,DWORD PTR [ebx]
1003e78e:	or     ecx,DWORD PTR [ebx]
1003e790:	or     ecx,DWORD PTR [ebx]
1003e792:	or     ecx,DWORD PTR [ebx]
1003e794:	or     ecx,DWORD PTR [ebx]
1003e796:	or     ecx,DWORD PTR [ebx]
1003e798:	or     ecx,DWORD PTR [ebx]
1003e79a:	or     ecx,DWORD PTR [ebx]
1003e79c:	or     ecx,DWORD PTR [ebx]
1003e79e:	or     ecx,DWORD PTR [ebx]
1003e7a0:	or     ecx,DWORD PTR [ebx]
1003e7a2:	or     ecx,DWORD PTR [ebx]
1003e7a4:	or     eax,DWORD PTR [edi]
1003e7a6:	or     ecx,DWORD PTR [ebx]
1003e7a8:	or     ecx,DWORD PTR [ebx]
1003e7aa:	or     ecx,DWORD PTR [ebx]
1003e7ac:	or     ecx,DWORD PTR [ebx]
1003e7ae:	or     ecx,DWORD PTR [ebx]
1003e7b0:	or     ecx,DWORD PTR [ebx]
1003e7b2:	or     BYTE PTR [eax],cl
1003e7b4:	or     ecx,DWORD PTR [ebx]
1003e7b6:	or     eax,DWORD PTR [ecx]
1003e7b8:	add    BYTE PTR [eax],al
1003e7ba:	add    BYTE PTR [eax],al
1003e7bc:	or     DWORD PTR [ecx],ecx
1003e7be:	or     DWORD PTR [ecx],ecx
1003e7c0:	add    DWORD PTR [edx],ecx
1003e7c2:	or     cl,BYTE PTR [edx]
1003e7c4:	or     cl,BYTE PTR [ebx]
1003e7c6:	or     ecx,DWORD PTR [ebx]
1003e7c8:	add    DWORD PTR [ecx],eax
1003e7ca:	add    DWORD PTR [eax+0x1003e718],edx
1003e7d0:	jmp    0x1713ebbb
1003e7d5:	out    0x3,eax
1003e7d7:	adc    BYTE PTR [eax],al
1003e7d9:	add    BYTE PTR [edx],al
1003e7db:	add    al,BYTE PTR [eax]
1003e7dd:	add    BYTE PTR [ecx],al
1003e7df:	add    DWORD PTR [edi],ecx
1003e7e1:	mov    dh,0x8
1003e7e3:	test   ecx,ecx
1003e7e5:	je     0x1003e847
1003e7e7:	cmp    ecx,0x50
1003e7ea:	jne    0x1003e7f6
1003e7ec:	xor    ecx,ecx
1003e7ee:	mov    ch,BYTE PTR [eax+0x1]
1003e7f1:	mov    cl,BYTE PTR [eax+0x2]
1003e7f4:	jmp    0x1003e83e
1003e7f6:	cmp    ecx,0x5f
1003e7f9:	jne    0x1003e80c
1003e7fb:	xor    edx,edx
1003e7fd:	mov    dh,BYTE PTR [eax+0x3]
1003e800:	mov    dl,BYTE PTR [eax+0x4]
1003e803:	cmp    edx,esi
1003e805:	je     0x1003e849
1003e807:	add    eax,0x5
1003e80a:	jmp    0x1003e840
1003e80c:	lea    edx,[ecx-0x39]
1003e80f:	cmp    edx,0xc
1003e812:	ja     0x1003e837
1003e814:	movzx  edx,BYTE PTR [edx+0x1003e854]
1003e81b:	jmp    DWORD PTR [edx*4+0x1003e84c]
1003e822:	mov    dl,BYTE PTR [eax+0x1]
1003e825:	jmp    0x1003e82a
1003e827:	mov    dl,BYTE PTR [eax+0x3]
1003e82a:	cmp    dl,0x10
1003e82d:	je     0x1003e834
1003e82f:	cmp    dl,0xf
1003e832:	jne    0x1003e837
1003e834:	add    eax,0x2
1003e837:	movzx  ecx,BYTE PTR [ecx+0x1006fa18]
1003e83e:	add    eax,ecx
1003e840:	movzx  ecx,BYTE PTR [eax]
1003e843:	test   ecx,ecx
1003e845:	jne    0x1003e7e7
1003e847:	xor    eax,eax
1003e849:	ret    
1003e84a:	mov    edi,edi
1003e84c:	and    ch,al
1003e84e:	add    edx,DWORD PTR [eax]
1003e850:	daa    
1003e851:	call   0x1003f859
1003e856:	add    BYTE PTR [eax],al
1003e858:	add    BYTE PTR [eax],al
1003e85a:	add    DWORD PTR [ecx],eax
1003e85c:	add    DWORD PTR [eax],eax
1003e85e:	add    BYTE PTR [eax],al
1003e860:	add    esp,ecx
1003e862:	int3   
1003e863:	int3   
1003e864:	int3   
1003e865:	int3   
1003e866:	int3   
1003e867:	int3   
1003e868:	int3   
1003e869:	int3   
1003e86a:	int3   
1003e86b:	int3   
1003e86c:	int3   
1003e86d:	int3   
1003e86e:	int3   
1003e86f:	int3   
1003e870:	movzx  ecx,BYTE PTR [eax]
1003e873:	test   ecx,ecx
1003e875:	je     0x1003e8c6
1003e877:	cmp    ecx,0x52
1003e87a:	je     0x1003e8c8
1003e87c:	cmp    ecx,0x50
1003e87f:	jne    0x1003e88b
1003e881:	xor    ecx,ecx
1003e883:	mov    ch,BYTE PTR [eax+0x1]
1003e886:	mov    cl,BYTE PTR [eax+0x2]
1003e889:	jmp    0x1003e8bd
1003e88b:	lea    edx,[ecx-0x39]
1003e88e:	cmp    edx,0xc
1003e891:	ja     0x1003e8b6
1003e893:	movzx  edx,BYTE PTR [edx+0x1003e8d4]
1003e89a:	jmp    DWORD PTR [edx*4+0x1003e8cc]
1003e8a1:	mov    dl,BYTE PTR [eax+0x1]
1003e8a4:	jmp    0x1003e8a9
1003e8a6:	mov    dl,BYTE PTR [eax+0x3]
1003e8a9:	cmp    dl,0x10
1003e8ac:	je     0x1003e8b3
1003e8ae:	cmp    dl,0xf
1003e8b1:	jne    0x1003e8b6
1003e8b3:	add    eax,0x2
1003e8b6:	movzx  ecx,BYTE PTR [ecx+0x1006fa18]
1003e8bd:	add    eax,ecx
1003e8bf:	movzx  ecx,BYTE PTR [eax]
1003e8c2:	test   ecx,ecx
1003e8c4:	jne    0x1003e877
1003e8c6:	xor    eax,eax
1003e8c8:	ret    
1003e8c9:	lea    ecx,[ecx+0x0]
1003e8cc:	mov    eax,ds:0xa61003e8
1003e8d1:	call   0x1003f8d9
1003e8d6:	add    BYTE PTR [eax],al
1003e8d8:	add    BYTE PTR [eax],al
1003e8da:	add    DWORD PTR [ecx],eax
1003e8dc:	add    DWORD PTR [eax],eax
1003e8de:	add    BYTE PTR [eax],al
1003e8e0:	add    esp,ecx
1003e8e2:	int3   
1003e8e3:	int3   
1003e8e4:	int3   
1003e8e5:	int3   
1003e8e6:	int3   
1003e8e7:	int3   
1003e8e8:	int3   
1003e8e9:	int3   
1003e8ea:	int3   
1003e8eb:	int3   
1003e8ec:	int3   
1003e8ed:	int3   
1003e8ee:	int3   
1003e8ef:	int3   
1003e8f0:	mov    ecx,DWORD PTR [esp+0x4]
1003e8f4:	movzx  eax,BYTE PTR [ecx]
1003e8f7:	movzx  eax,BYTE PTR [eax+0x1006fa18]
1003e8fe:	push   ebx
1003e8ff:	push   ebp
1003e900:	push   esi
1003e901:	push   edi
1003e902:	add    eax,ecx
1003e904:	mov    ebx,0x1
1003e909:	xor    esi,esi
1003e90b:	xor    edi,edi
1003e90d:	call   0x1003e4d0
1003e912:	mov    ebp,DWORD PTR [esp+0x18]
1003e916:	mov    esi,eax
1003e918:	cmp    esi,ebp
1003e91a:	jae    0x1003ea44
1003e920:	movzx  eax,BYTE PTR [esi]
1003e923:	cmp    eax,0x58
1003e926:	jne    0x1003e93c
1003e928:	xor    ecx,ecx
1003e92a:	mov    ch,BYTE PTR [esi+0x1]
1003e92d:	mov    cl,BYTE PTR [esi+0x2]
1003e930:	add    esi,ecx
1003e932:	cmp    BYTE PTR [esi],0x54
1003e935:	je     0x1003e928
1003e937:	jmp    0x1003ea20
1003e93c:	cmp    eax,0x67
1003e93f:	je     0x1003ea08
1003e945:	cmp    eax,0x68
1003e948:	je     0x1003ea08
1003e94e:	cmp    eax,0x6f
1003e951:	je     0x1003ea08
1003e957:	cmp    eax,0x5e
1003e95a:	je     0x1003e9c9
1003e95c:	cmp    eax,0x5f
1003e95f:	je     0x1003e9c9
1003e961:	cmp    eax,0x5d
1003e964:	je     0x1003e9c9
1003e966:	cmp    eax,0x60
1003e969:	je     0x1003e9c9
1003e96b:	lea    ecx,[eax-0x6]
1003e96e:	cmp    ecx,0x51
1003e971:	ja     0x1003ea23
1003e977:	movzx  edx,BYTE PTR [ecx+0x1003ea68]
1003e97e:	jmp    DWORD PTR [edx*4+0x1003ea50]
1003e985:	movzx  ecx,BYTE PTR [esi+0x21]
1003e989:	add    ecx,0xffffffba
1003e98c:	cmp    ecx,0x7
1003e98f:	ja     0x1003e9ab
1003e991:	movzx  ecx,BYTE PTR [ecx+0x1003eac8]
1003e998:	jmp    DWORD PTR [ecx*4+0x1003eabc]
1003e99f:	xor    edx,edx
1003e9a1:	mov    dh,BYTE PTR [esi+0x22]
1003e9a4:	mov    dl,BYTE PTR [esi+0x23]
1003e9a7:	test   edx,edx
1003e9a9:	jle    0x1003ea23
1003e9ab:	pop    edi
1003e9ac:	pop    esi
1003e9ad:	pop    ebp
1003e9ae:	xor    eax,eax
1003e9b0:	pop    ebx
1003e9b1:	ret    
1003e9b2:	mov    cl,BYTE PTR [esi+0x1]
1003e9b5:	jmp    0x1003e9ba
1003e9b7:	mov    cl,BYTE PTR [esi+0x3]
1003e9ba:	cmp    cl,0x10
1003e9bd:	je     0x1003e9c4
1003e9bf:	cmp    cl,0xf
1003e9c2:	jne    0x1003ea23
1003e9c4:	add    esi,0x2
1003e9c7:	jmp    0x1003ea23
1003e9c9:	xor    eax,eax
1003e9cb:	mov    ah,BYTE PTR [esi+0x1]
1003e9ce:	mov    al,BYTE PTR [esi+0x2]
1003e9d1:	test   eax,eax
1003e9d3:	je     0x1003ea44
1003e9d5:	xor    edi,edi
1003e9d7:	test   edi,edi
1003e9d9:	jne    0x1003e9f3
1003e9db:	mov    ecx,DWORD PTR [esp+0x1c]
1003e9df:	push   ecx
1003e9e0:	push   ebp
1003e9e1:	push   esi
1003e9e2:	call   0x1003e8f0
1003e9e7:	add    esp,0xc
1003e9ea:	test   eax,eax
1003e9ec:	je     0x1003e9f3
1003e9ee:	mov    edi,0x1
1003e9f3:	xor    edx,edx
1003e9f5:	mov    dh,BYTE PTR [esi+0x1]
1003e9f8:	mov    dl,BYTE PTR [esi+0x2]
1003e9fb:	add    esi,edx
1003e9fd:	cmp    BYTE PTR [esi],0x54
1003ea00:	je     0x1003e9d7
1003ea02:	test   edi,edi
1003ea04:	je     0x1003e9ab
1003ea06:	jmp    0x1003ea20
1003ea08:	movzx  eax,BYTE PTR [eax+0x1006fa18]
1003ea0f:	add    esi,eax
1003ea11:	xor    ecx,ecx
1003ea13:	mov    ch,BYTE PTR [esi+0x1]
1003ea16:	mov    cl,BYTE PTR [esi+0x2]
1003ea19:	add    esi,ecx
1003ea1b:	cmp    BYTE PTR [esi],0x54
1003ea1e:	je     0x1003ea11
1003ea20:	movzx  eax,BYTE PTR [esi]
1003ea23:	movzx  eax,BYTE PTR [eax+0x1006fa18]
1003ea2a:	add    eax,esi
1003ea2c:	mov    ebx,0x1
1003ea31:	xor    esi,esi
1003ea33:	xor    edi,edi
1003ea35:	call   0x1003e4d0
1003ea3a:	mov    esi,eax
1003ea3c:	cmp    esi,ebp
1003ea3e:	jb     0x1003e920
1003ea44:	pop    edi
1003ea45:	pop    esi
1003ea46:	pop    ebp
1003ea47:	mov    eax,0x1
1003ea4c:	pop    ebx
1003ea4d:	ret    
1003ea4e:	mov    edi,edi
1003ea50:	stos   DWORD PTR es:[edi],eax
1003ea51:	jmp    0xf9b5fa59
1003ea56:	add    edx,DWORD PTR [eax]
1003ea58:	mov    bh,0xe9
1003ea5a:	add    edx,DWORD PTR [eax]
1003ea5c:	test   ecx,ebp
1003ea5e:	add    edx,DWORD PTR [eax]
1003ea60:	inc    esp
1003ea61:	jmp    0x1003:0xea231003
	...
1003ea70:	add    BYTE PTR [eax],al
1003ea72:	add    BYTE PTR ds:0x5050505,al
1003ea78:	add    BYTE PTR ds:0x5050505,al
1003ea7e:	add    BYTE PTR [eax],al
1003ea80:	add    BYTE PTR ds:0x5000005,al
1003ea86:	add    eax,0x5000505
1003ea8b:	add    BYTE PTR ds:0x50505,al
1003ea91:	add    BYTE PTR ds:0x50505,al
1003ea97:	add    eax,0x1050500
1003ea9c:	add    DWORD PTR [eax],eax
1003ea9e:	add    BYTE PTR [ecx],al
1003eaa0:	add    DWORD PTR [edx],eax
1003eaa2:	add    al,BYTE PTR [eax]
1003eaa4:	add    DWORD PTR [eax],eax
1003eaa6:	add    DWORD PTR [edx],eax
1003eaa8:	add    eax,0x5050505
1003eaad:	add    eax,0x3030505
1003eab2:	add    eax,0x4050505
1003eab7:	add    al,0x4
1003eab9:	add    al,0x8b
1003eabb:	jmp    DWORD PTR [ebx]
1003eabd:	jmp    0x1003:0xe99f1003
1003eac4:	stos   DWORD PTR es:[edi],eax
1003eac5:	jmp    0x1003facd
1003eaca:	add    al,BYTE PTR [edx]
1003eacc:	add    BYTE PTR [eax],al
1003eace:	add    DWORD PTR [ecx],eax
1003ead0:	movzx  edx,BYTE PTR [eax+0x1]
1003ead4:	add    eax,0x1
1003ead7:	mov    cl,BYTE PTR [eax+0x1]
1003eada:	add    eax,0x1
1003eadd:	test   cl,cl
1003eadf:	push   ebx
1003eae0:	je     0x1003eb0d
1003eae2:	mov    bl,0x5d
1003eae4:	cmp    cl,0x5c
1003eae7:	jne    0x1003eaf3
1003eae9:	cmp    BYTE PTR [eax+0x1],bl
1003eaec:	jne    0x1003eaf3
1003eaee:	add    eax,0x1
1003eaf1:	jmp    0x1003eb03
1003eaf3:	cmp    cl,bl
1003eaf5:	je     0x1003eb0d
1003eaf7:	movzx  ecx,cl
1003eafa:	cmp    ecx,edx
1003eafc:	jne    0x1003eb03
1003eafe:	cmp    BYTE PTR [eax+0x1],bl
1003eb01:	je     0x1003eb11
1003eb03:	mov    cl,BYTE PTR [eax+0x1]
1003eb06:	add    eax,0x1
1003eb09:	test   cl,cl
1003eb0b:	jne    0x1003eae4
1003eb0d:	xor    eax,eax
1003eb0f:	pop    ebx
1003eb10:	ret    
1003eb11:	mov    edx,DWORD PTR [esp+0x8]
1003eb15:	mov    DWORD PTR [edx],eax
1003eb17:	mov    eax,0x1
1003eb1c:	pop    ebx
1003eb1d:	ret    
1003eb1e:	int3   
1003eb1f:	int3   
1003eb20:	push   ebp
1003eb21:	mov    ebp,DWORD PTR [esp+0x8]
1003eb25:	push   esi
1003eb26:	push   edi
1003eb27:	mov    edi,0x1006fb88
1003eb2c:	xor    esi,esi
1003eb2e:	mov    edi,edi
1003eb30:	movzx  eax,BYTE PTR [esi+0x1006fbdc]
1003eb37:	cmp    ebx,eax
1003eb39:	jne    0x1003eb4a
1003eb3b:	push   ebx
1003eb3c:	push   edi
1003eb3d:	push   ebp
1003eb3e:	call   0x1004f416
1003eb43:	add    esp,0xc
1003eb46:	test   eax,eax
1003eb48:	je     0x1003eb68
1003eb4a:	movzx  ecx,BYTE PTR [esi+0x1006fbdc]
1003eb51:	add    esi,0x1
1003eb54:	cmp    BYTE PTR [esi+0x1006fbdc],0x0
1003eb5b:	lea    edi,[edi+ecx*1+0x1]
1003eb5f:	jne    0x1003eb30
1003eb61:	pop    edi
1003eb62:	pop    esi
1003eb63:	or     eax,0xffffffff
1003eb66:	pop    ebp
1003eb67:	ret    
1003eb68:	pop    edi
1003eb69:	mov    eax,esi
1003eb6b:	pop    esi
1003eb6c:	pop    ebp
1003eb6d:	ret    
1003eb6e:	int3   
1003eb6f:	int3   
1003eb70:	mov    eax,DWORD PTR [esp+0x4]
1003eb74:	push   ebx
1003eb75:	mov    ebx,DWORD PTR [esp+0xc]
1003eb79:	push   esi
1003eb7a:	push   edi
1003eb7b:	mov    edi,DWORD PTR [esp+0x18]
1003eb7f:	call   0x1003e870
1003eb84:	mov    esi,eax
1003eb86:	test   esi,esi
1003eb88:	je     0x1003ec0a
1003eb8e:	push   ebp
1003eb8f:	nop
1003eb90:	mov    ecx,DWORD PTR [esp+0x20]
1003eb94:	mov    ebp,DWORD PTR [edi+0x20]
1003eb97:	cmp    ecx,ebp
1003eb99:	jae    0x1003ebd3
1003eb9b:	mov    eax,DWORD PTR [edi+0x14]
1003eb9e:	lea    edi,[esi+0x1]
1003eba1:	xor    edx,edx
1003eba3:	mov    dh,BYTE PTR [ecx]
1003eba5:	mov    dl,BYTE PTR [ecx+0x1]
1003eba8:	lea    ebx,[eax+edx*1]
1003ebab:	cmp    ebx,edi
1003ebad:	je     0x1003ebbc
1003ebaf:	add    ecx,0x2
1003ebb2:	cmp    ecx,ebp
1003ebb4:	jb     0x1003eba1
1003ebb6:	mov    ebx,DWORD PTR [esp+0x18]
1003ebba:	jmp    0x1003ebcf
1003ebbc:	mov    ebx,DWORD PTR [esp+0x18]
1003ebc0:	lea    eax,[edx+ebx*1]
1003ebc3:	sar    eax,0x8
1003ebc6:	mov    BYTE PTR [ecx],al
1003ebc8:	mov    al,bl
1003ebca:	add    al,dl
1003ebcc:	mov    BYTE PTR [ecx+0x1],al
1003ebcf:	mov    edi,DWORD PTR [esp+0x1c]
1003ebd3:	cmp    ecx,DWORD PTR [edi+0x20]
1003ebd6:	jb     0x1003ebfb
1003ebd8:	mov    ecx,DWORD PTR [edi+0x14]
1003ebdb:	xor    eax,eax
1003ebdd:	mov    ah,BYTE PTR [esi+0x1]
1003ebe0:	mov    al,BYTE PTR [esi+0x2]
1003ebe3:	add    ecx,eax
1003ebe5:	cmp    ecx,DWORD PTR [esp+0x14]
1003ebe9:	jb     0x1003ebfb
1003ebeb:	lea    edx,[eax+ebx*1]
1003ebee:	sar    edx,0x8
1003ebf1:	mov    cl,bl
1003ebf3:	add    cl,al
1003ebf5:	mov    BYTE PTR [esi+0x1],dl
1003ebf8:	mov    BYTE PTR [esi+0x2],cl
1003ebfb:	lea    eax,[esi+0x3]
1003ebfe:	call   0x1003e870
1003ec03:	mov    esi,eax
1003ec05:	test   esi,esi
1003ec07:	jne    0x1003eb90
1003ec09:	pop    ebp
1003ec0a:	pop    edi
1003ec0b:	pop    esi
1003ec0c:	pop    ebx
1003ec0d:	ret    
1003ec0e:	int3   
1003ec0f:	int3   
1003ec10:	push   ecx
1003ec11:	mov    ecx,DWORD PTR [esp+0x10]
1003ec15:	push   ebx
1003ec16:	mov    ebx,DWORD PTR [esp+0x18]
1003ec1a:	and    ebx,0x8
1003ec1d:	push   ebp
1003ec1e:	push   edi
1003ec1f:	je     0x1003ecaf
1003ec25:	movzx  edx,BYTE PTR [ecx]
1003ec28:	mov    eax,DWORD PTR [esi+0xc]
1003ec2b:	test   BYTE PTR [edx+eax*1],0x1
1003ec2f:	je     0x1003ec42
1003ec31:	movzx  edx,BYTE PTR [ecx+0x1]
1003ec35:	add    ecx,0x1
1003ec38:	test   BYTE PTR [edx+eax*1],0x1
1003ec3c:	jne    0x1003ec31
1003ec3e:	mov    DWORD PTR [esp+0x1c],ecx
1003ec42:	cmp    BYTE PTR [ecx],0x23
1003ec45:	jne    0x1003ecaf
1003ec47:	mov    al,BYTE PTR [ecx+0x1]
1003ec4a:	add    ecx,0x1
1003ec4d:	test   al,al
1003ec4f:	mov    DWORD PTR [esp+0x1c],ecx
1003ec53:	je     0x1003ec25
1003ec55:	mov    edx,DWORD PTR [esi+0x50]
1003ec58:	test   edx,edx
1003ec5a:	je     0x1003ec7e
1003ec5c:	mov    eax,DWORD PTR [esi+0x1c]
1003ec5f:	cmp    ecx,eax
1003ec61:	jae    0x1003ec9c
1003ec63:	push   edx
1003ec64:	lea    edi,[esi+0x54]
1003ec67:	xor    edx,edx
1003ec69:	call   0x10042e70
1003ec6e:	add    esp,0x4
1003ec71:	test   eax,eax
1003ec73:	je     0x1003ec9c
1003ec75:	add    ecx,DWORD PTR [esi+0x54]
1003ec78:	mov    DWORD PTR [esp+0x1c],ecx
1003ec7c:	jmp    0x1003ec25
1003ec7e:	mov    edx,DWORD PTR [esi+0x54]
1003ec81:	mov    edi,DWORD PTR [esi+0x1c]
1003ec84:	sub    edi,edx
1003ec86:	cmp    ecx,edi
1003ec88:	ja     0x1003ec9c
1003ec8a:	cmp    al,BYTE PTR [esi+0x58]
1003ec8d:	jne    0x1003ec9c
1003ec8f:	cmp    edx,0x1
1003ec92:	je     0x1003ec75
1003ec94:	mov    al,BYTE PTR [ecx+0x1]
1003ec97:	cmp    al,BYTE PTR [esi+0x59]
1003ec9a:	je     0x1003ec75
1003ec9c:	mov    al,BYTE PTR [ecx+0x1]
1003ec9f:	add    ecx,0x1
1003eca2:	test   al,al
1003eca4:	mov    DWORD PTR [esp+0x1c],ecx
1003eca8:	jne    0x1003ec55
1003ecaa:	jmp    0x1003ec25
1003ecaf:	mov    al,BYTE PTR [ecx]
1003ecb1:	cmp    al,0x5c
1003ecb3:	jne    0x1003ecec
1003ecb5:	mov    ecx,DWORD PTR [esi+0x30]
1003ecb8:	push   0x0
1003ecba:	push   ecx
1003ecbb:	lea    edx,[esp+0x14]
1003ecbf:	push   edx
1003ecc0:	lea    eax,[esp+0x28]
1003ecc4:	push   eax
1003ecc5:	mov    eax,DWORD PTR [esp+0x30]
1003ecc9:	mov    DWORD PTR [esp+0x1c],0x0
1003ecd1:	call   0x1003dd70
1003ecd6:	add    esp,0x10
1003ecd9:	cmp    DWORD PTR [esp+0xc],0x0
1003ecde:	mov    ebp,eax
1003ece0:	jne    0x1003f1a1
1003ece6:	mov    ecx,DWORD PTR [esp+0x1c]
1003ecea:	jmp    0x1003ecfc
1003ecec:	mov    edx,DWORD PTR [esi+0xc]
1003ecef:	movzx  ebp,al
1003ecf2:	test   BYTE PTR [edx+ebp*1],0x80
1003ecf6:	jne    0x1003f1a1
1003ecfc:	add    ecx,0x1
1003ecff:	test   ebx,ebx
1003ed01:	je     0x1003ed8f
1003ed07:	jmp    0x1003ed10
1003ed09:	lea    esp,[esp+0x0]
1003ed10:	movzx  edx,BYTE PTR [ecx]
1003ed13:	mov    eax,DWORD PTR [esi+0xc]
1003ed16:	test   BYTE PTR [edx+eax*1],0x1
1003ed1a:	je     0x1003ed2d
1003ed1c:	lea    esp,[esp+0x0]
1003ed20:	movzx  edx,BYTE PTR [ecx+0x1]
1003ed24:	add    ecx,0x1
1003ed27:	test   BYTE PTR [edx+eax*1],0x1
1003ed2b:	jne    0x1003ed20
1003ed2d:	cmp    BYTE PTR [ecx],0x23
1003ed30:	jne    0x1003ed8f
1003ed32:	mov    al,BYTE PTR [ecx+0x1]
1003ed35:	add    ecx,0x1
1003ed38:	test   al,al
1003ed3a:	je     0x1003ed10
1003ed3c:	lea    esp,[esp+0x0]
1003ed40:	mov    edx,DWORD PTR [esi+0x50]
1003ed43:	test   edx,edx
1003ed45:	je     0x1003ed65
1003ed47:	mov    eax,DWORD PTR [esi+0x1c]
1003ed4a:	cmp    ecx,eax
1003ed4c:	jae    0x1003ed83
1003ed4e:	push   edx
1003ed4f:	lea    edi,[esi+0x54]
1003ed52:	xor    edx,edx
1003ed54:	call   0x10042e70
1003ed59:	add    esp,0x4
1003ed5c:	test   eax,eax
1003ed5e:	je     0x1003ed83
1003ed60:	add    ecx,DWORD PTR [esi+0x54]
1003ed63:	jmp    0x1003ed10
1003ed65:	mov    edx,DWORD PTR [esi+0x54]
1003ed68:	mov    edi,DWORD PTR [esi+0x1c]
1003ed6b:	sub    edi,edx
1003ed6d:	cmp    ecx,edi
1003ed6f:	ja     0x1003ed83
1003ed71:	cmp    al,BYTE PTR [esi+0x58]
1003ed74:	jne    0x1003ed83
1003ed76:	cmp    edx,0x1
1003ed79:	je     0x1003ed60
1003ed7b:	mov    al,BYTE PTR [ecx+0x1]
1003ed7e:	cmp    al,BYTE PTR [esi+0x59]
1003ed81:	je     0x1003ed60
1003ed83:	mov    al,BYTE PTR [ecx+0x1]
1003ed86:	add    ecx,0x1
1003ed89:	test   al,al
1003ed8b:	jne    0x1003ed40
1003ed8d:	jmp    0x1003ed10
1003ed8f:	mov    al,BYTE PTR [ecx]
1003ed91:	cmp    al,0x2a
1003ed93:	je     0x1003f1a1
1003ed99:	cmp    al,0x3f
1003ed9b:	je     0x1003f1a1
1003eda1:	push   0x3
1003eda3:	push   0x10075880
1003eda8:	push   ecx
1003eda9:	call   0x1004f416
1003edae:	add    esp,0xc
1003edb1:	test   eax,eax
1003edb3:	je     0x1003f1a1
1003edb9:	test   ebp,ebp
1003edbb:	jl     0x1003ef71
1003edc1:	mov    ecx,DWORD PTR [esp+0x14]
1003edc5:	lea    eax,[ecx-0x6]
1003edc8:	cmp    eax,0x18
1003edcb:	ja     0x1003f1a1
1003edd1:	movzx  edx,BYTE PTR [eax+0x1003f1d8]
1003edd8:	jmp    DWORD PTR [edx*4+0x1003f1a8]
1003eddf:	xor    eax,eax
1003ede1:	cmp    DWORD PTR [esp+0x18],ebp
1003ede5:	pop    edi
1003ede6:	pop    ebp
1003ede7:	setne  al
1003edea:	pop    ebx
1003edeb:	pop    ecx
1003edec:	ret    
1003eded:	mov    eax,DWORD PTR [esp+0x18]
1003edf1:	cmp    eax,ebp
1003edf3:	je     0x1003f1a1
1003edf9:	mov    ecx,DWORD PTR [esi+0x4]
1003edfc:	movzx  edx,BYTE PTR [ecx+ebp*1]
1003ee00:	xor    ecx,ecx
1003ee02:	cmp    eax,edx
1003ee04:	setne  cl
1003ee07:	pop    edi
1003ee08:	pop    ebp
1003ee09:	pop    ebx
1003ee0a:	mov    eax,ecx
1003ee0c:	pop    ecx
1003ee0d:	ret    
1003ee0e:	mov    eax,DWORD PTR [esp+0x18]
1003ee12:	cmp    eax,ebp
1003ee14:	je     0x1003ee5d
1003ee16:	test   BYTE PTR [esp+0x20],0x1
1003ee1b:	je     0x1003f1a1
1003ee21:	mov    edx,DWORD PTR [esi+0x4]
1003ee24:	movzx  ecx,BYTE PTR [edx+ebp*1]
1003ee28:	xor    edx,edx
1003ee2a:	cmp    eax,ecx
1003ee2c:	sete   dl
1003ee2f:	pop    edi
1003ee30:	pop    ebp
1003ee31:	pop    ebx
1003ee32:	mov    eax,edx
1003ee34:	pop    ecx
1003ee35:	ret    
1003ee36:	cmp    ebp,0x7f
1003ee39:	jg     0x1003ee5d
1003ee3b:	mov    eax,DWORD PTR [esi+0xc]
1003ee3e:	test   BYTE PTR [eax+ebp*1],0x4
1003ee42:	jmp    0x1003f19b
1003ee47:	cmp    ebp,0x7f
1003ee4a:	jg     0x1003f1a1
1003ee50:	mov    ecx,DWORD PTR [esi+0xc]
1003ee53:	test   BYTE PTR [ecx+ebp*1],0x4
1003ee57:	je     0x1003f1a1
1003ee5d:	pop    edi
1003ee5e:	pop    ebp
1003ee5f:	mov    eax,0x1
1003ee64:	pop    ebx
1003ee65:	pop    ecx
1003ee66:	ret    
1003ee67:	cmp    ebp,0x7f
1003ee6a:	jg     0x1003ee5d
1003ee6c:	mov    edx,DWORD PTR [esi+0xc]
1003ee6f:	test   BYTE PTR [edx+ebp*1],0x1
1003ee73:	jmp    0x1003f19b
1003ee78:	cmp    ebp,0x7f
1003ee7b:	jg     0x1003f1a1
1003ee81:	mov    eax,DWORD PTR [esi+0xc]
1003ee84:	test   BYTE PTR [eax+ebp*1],0x1
1003ee88:	je     0x1003f1a1
1003ee8e:	pop    edi
1003ee8f:	pop    ebp
1003ee90:	mov    eax,0x1
1003ee95:	pop    ebx
1003ee96:	pop    ecx
1003ee97:	ret    
1003ee98:	cmp    ebp,0x7f
1003ee9b:	jg     0x1003ee5d
1003ee9d:	mov    ecx,DWORD PTR [esi+0xc]
1003eea0:	test   BYTE PTR [ecx+ebp*1],0x10
1003eea4:	jmp    0x1003f19b
1003eea9:	cmp    ebp,0x7f
1003eeac:	jg     0x1003f1a1
1003eeb2:	mov    edx,DWORD PTR [esi+0xc]
1003eeb5:	test   BYTE PTR [edx+ebp*1],0x10
1003eeb9:	je     0x1003f1a1
1003eebf:	pop    edi
1003eec0:	pop    ebp
1003eec1:	mov    eax,0x1
1003eec6:	pop    ebx
1003eec7:	pop    ecx
1003eec8:	ret    
1003eec9:	cmp    ebp,0x180e
1003eecf:	jg     0x1003eeef
1003eed1:	je     0x1003ef26
1003eed3:	cmp    ebp,0xa0
1003eed9:	jg     0x1003eee7
1003eedb:	je     0x1003ef26
1003eedd:	cmp    ebp,0x9
1003eee0:	je     0x1003ef26
1003eee2:	cmp    ebp,0x20
1003eee5:	jmp    0x1003ef17
1003eee7:	cmp    ebp,0x1680
1003eeed:	jmp    0x1003ef17
1003eeef:	cmp    ebp,0x205f
1003eef5:	jg     0x1003ef11
1003eef7:	je     0x1003ef26
1003eef9:	cmp    ebp,0x2000
1003eeff:	jl     0x1003ef19
1003ef01:	cmp    ebp,0x200a
1003ef07:	jle    0x1003ef26
1003ef09:	cmp    ebp,0x202f
1003ef0f:	jmp    0x1003ef17
1003ef11:	cmp    ebp,0x3000
1003ef17:	je     0x1003ef26
1003ef19:	pop    edi
1003ef1a:	xor    eax,eax
1003ef1c:	cmp    ecx,0x13
1003ef1f:	pop    ebp
1003ef20:	sete   al
1003ef23:	pop    ebx
1003ef24:	pop    ecx
1003ef25:	ret    
1003ef26:	pop    edi
1003ef27:	xor    eax,eax
1003ef29:	cmp    ecx,0x13
1003ef2c:	pop    ebp
1003ef2d:	setne  al
1003ef30:	pop    ebx
1003ef31:	pop    ecx
1003ef32:	ret    
1003ef33:	cmp    ebp,0x85
1003ef39:	jg     0x1003ef54
1003ef3b:	je     0x1003ef64
1003ef3d:	cmp    ebp,0xa
1003ef40:	jl     0x1003ef47
1003ef42:	cmp    ebp,0xd
1003ef45:	jle    0x1003ef64
1003ef47:	pop    edi
1003ef48:	xor    eax,eax
1003ef4a:	cmp    ecx,0x15
1003ef4d:	pop    ebp
1003ef4e:	sete   al
1003ef51:	pop    ebx
1003ef52:	pop    ecx
1003ef53:	ret    
1003ef54:	cmp    ebp,0x2028
1003ef5a:	jl     0x1003ef47
1003ef5c:	cmp    ebp,0x2029
1003ef62:	jg     0x1003ef47
1003ef64:	pop    edi
1003ef65:	xor    eax,eax
1003ef67:	cmp    ecx,0x15
1003ef6a:	pop    ebp
1003ef6b:	setne  al
1003ef6e:	pop    ebx
1003ef6f:	pop    ecx
1003ef70:	ret    
1003ef71:	mov    eax,DWORD PTR [esp+0x14]
1003ef75:	add    eax,0xfffffffa
1003ef78:	cmp    eax,0x17
1003ef7b:	ja     0x1003f1a1
1003ef81:	movzx  eax,BYTE PTR [eax+0x1003f224]
1003ef88:	jmp    DWORD PTR [eax*4+0x1003f1f4]
1003ef8f:	neg    ebp
1003ef91:	lea    eax,[ebp-0x6]
1003ef94:	cmp    eax,0xf
1003ef97:	ja     0x1003f1a1
1003ef9d:	movzx  ecx,BYTE PTR [eax+0x1003f260]
1003efa4:	jmp    DWORD PTR [ecx*4+0x1003f23c]
1003efab:	mov    eax,DWORD PTR [esp+0x18]
1003efaf:	cmp    eax,0x7f
1003efb2:	jg     0x1003ee5d
1003efb8:	mov    edx,DWORD PTR [esi+0xc]
1003efbb:	test   BYTE PTR [eax+edx*1],0x4
1003efbf:	jmp    0x1003f19b
1003efc4:	mov    eax,DWORD PTR [esp+0x18]
1003efc8:	cmp    eax,0x7f
1003efcb:	jg     0x1003f1a1
1003efd1:	mov    ecx,DWORD PTR [esi+0xc]
1003efd4:	test   BYTE PTR [eax+ecx*1],0x4
1003efd8:	je     0x1003f1a1
1003efde:	pop    edi
1003efdf:	pop    ebp
1003efe0:	mov    eax,0x1
1003efe5:	pop    ebx
1003efe6:	pop    ecx
1003efe7:	ret    
1003efe8:	mov    eax,DWORD PTR [esp+0x18]
1003efec:	cmp    eax,0x7f
1003efef:	jg     0x1003ee5d
1003eff5:	mov    edx,DWORD PTR [esi+0xc]
1003eff8:	test   BYTE PTR [eax+edx*1],0x1
1003effc:	jmp    0x1003f19b
1003f001:	mov    eax,DWORD PTR [esp+0x18]
1003f005:	cmp    eax,0x7f
1003f008:	jg     0x1003f1a1
1003f00e:	mov    ecx,DWORD PTR [esi+0xc]
1003f011:	test   BYTE PTR [eax+ecx*1],0x1
1003f015:	je     0x1003f1a1
1003f01b:	pop    edi
1003f01c:	pop    ebp
1003f01d:	mov    eax,0x1
1003f022:	pop    ebx
1003f023:	pop    ecx
1003f024:	ret    
1003f025:	mov    eax,DWORD PTR [esp+0x18]
1003f029:	cmp    eax,0x7f
1003f02c:	jg     0x1003ee5d
1003f032:	mov    edx,DWORD PTR [esi+0xc]
1003f035:	test   BYTE PTR [eax+edx*1],0x10
1003f039:	jmp    0x1003f19b
1003f03e:	mov    eax,DWORD PTR [esp+0x18]
1003f042:	cmp    eax,0x7f
1003f045:	jg     0x1003f1a1
1003f04b:	mov    ecx,DWORD PTR [esi+0xc]
1003f04e:	test   BYTE PTR [eax+ecx*1],0x10
1003f052:	je     0x1003f1a1
1003f058:	pop    edi
1003f059:	pop    ebp
1003f05a:	mov    eax,0x1
1003f05f:	pop    ebx
1003f060:	pop    ecx
1003f061:	ret    
1003f062:	mov    eax,DWORD PTR [esp+0x18]
1003f066:	cmp    eax,0x180e
1003f06b:	jg     0x1003f089
1003f06d:	je     0x1003f0bb
1003f06f:	cmp    eax,0xa0
1003f074:	jg     0x1003f082
1003f076:	je     0x1003f0bb
1003f078:	cmp    eax,0x9
1003f07b:	je     0x1003f0bb
1003f07d:	cmp    eax,0x20
1003f080:	jmp    0x1003f0ac
1003f082:	cmp    eax,0x1680
1003f087:	jmp    0x1003f0ac
1003f089:	cmp    eax,0x205f
1003f08e:	jg     0x1003f0a7
1003f090:	je     0x1003f0bb
1003f092:	cmp    eax,0x2000
1003f097:	jl     0x1003f0ae
1003f099:	cmp    eax,0x200a
1003f09e:	jle    0x1003f0bb
1003f0a0:	cmp    eax,0x202f
1003f0a5:	jmp    0x1003f0ac
1003f0a7:	cmp    eax,0x3000
1003f0ac:	je     0x1003f0bb
1003f0ae:	xor    eax,eax
1003f0b0:	pop    edi
1003f0b1:	cmp    ebp,0x13
1003f0b4:	pop    ebp
1003f0b5:	sete   al
1003f0b8:	pop    ebx
1003f0b9:	pop    ecx
1003f0ba:	ret    
1003f0bb:	xor    eax,eax
1003f0bd:	pop    edi
1003f0be:	cmp    ebp,0x13
1003f0c1:	pop    ebp
1003f0c2:	setne  al
1003f0c5:	pop    ebx
1003f0c6:	pop    ecx
1003f0c7:	ret    
1003f0c8:	mov    eax,DWORD PTR [esp+0x18]
1003f0cc:	cmp    eax,0x85
1003f0d1:	jg     0x1003f0ec
1003f0d3:	je     0x1003f0fa
1003f0d5:	cmp    eax,0xa
1003f0d8:	jl     0x1003f0df
1003f0da:	cmp    eax,0xd
1003f0dd:	jle    0x1003f0fa
1003f0df:	xor    eax,eax
1003f0e1:	pop    edi
1003f0e2:	cmp    ebp,0x15
1003f0e5:	pop    ebp
1003f0e6:	sete   al
1003f0e9:	pop    ebx
1003f0ea:	pop    ecx
1003f0eb:	ret    
1003f0ec:	cmp    eax,0x2028
1003f0f1:	jl     0x1003f0df
1003f0f3:	cmp    eax,0x2029
1003f0f8:	jg     0x1003f0df
1003f0fa:	xor    eax,eax
1003f0fc:	pop    edi
1003f0fd:	cmp    ebp,0x15
1003f100:	pop    ebp
1003f101:	setne  al
1003f104:	pop    ebx
1003f105:	pop    ecx
1003f106:	ret    
1003f107:	cmp    ebp,0xfffffffa
1003f10a:	je     0x1003ee5d
1003f110:	cmp    ebp,0xfffffff7
1003f113:	je     0x1003ee5d
1003f119:	cmp    ebp,0xfffffff6
1003f11c:	je     0x1003ee5d
1003f122:	cmp    ebp,0xffffffed
1003f125:	je     0x1003ee5d
1003f12b:	cmp    ebp,0xffffffeb
1003f12e:	jmp    0x1003f19b
1003f130:	xor    eax,eax
1003f132:	pop    edi
1003f133:	cmp    ebp,0xfffffff9
1003f136:	pop    ebp
1003f137:	sete   al
1003f13a:	pop    ebx
1003f13b:	pop    ecx
1003f13c:	ret    
1003f13d:	cmp    ebp,0xfffffff8
1003f140:	jmp    0x1003f14e
1003f142:	cmp    ebp,0xfffffff8
1003f145:	je     0x1003ee5d
1003f14b:	cmp    ebp,0xffffffee
1003f14e:	je     0x1003ee5d
1003f154:	cmp    ebp,0xfffffff9
1003f157:	je     0x1003ee5d
1003f15d:	cmp    ebp,0xfffffff5
1003f160:	jmp    0x1003f19b
1003f162:	xor    eax,eax
1003f164:	pop    edi
1003f165:	cmp    ebp,0xffffffed
1003f168:	pop    ebp
1003f169:	sete   al
1003f16c:	pop    ebx
1003f16d:	pop    ecx
1003f16e:	ret    
1003f16f:	cmp    ebp,0xffffffec
1003f172:	jmp    0x1003f14e
1003f174:	xor    eax,eax
1003f176:	pop    edi
1003f177:	cmp    ebp,0xffffffeb
1003f17a:	pop    ebp
1003f17b:	sete   al
1003f17e:	pop    ebx
1003f17f:	pop    ecx
1003f180:	ret    
1003f181:	cmp    ebp,0xfffffff6
1003f184:	je     0x1003ee5d
1003f18a:	cmp    ebp,0xfffffff7
1003f18d:	jmp    0x1003f11c
1003f18f:	cmp    ebp,0xfffffff5
1003f192:	je     0x1003ee5d
1003f198:	cmp    ebp,0xfffffff9
1003f19b:	je     0x1003ee5d
1003f1a1:	pop    edi
1003f1a2:	pop    ebp
1003f1a3:	xor    eax,eax
1003f1a5:	pop    ebx
1003f1a6:	pop    ecx
1003f1a7:	ret    
1003f1a8:	inc    edi
1003f1a9:	out    dx,al
1003f1aa:	add    edx,DWORD PTR [eax]
1003f1ac:	ss out dx,al
1003f1ae:	add    edx,DWORD PTR [eax]
1003f1b0:	js     0x1003f1a0
1003f1b2:	add    edx,DWORD PTR [eax]
1003f1b4:	addr16 out dx,al
1003f1b6:	add    edx,DWORD PTR [eax]
1003f1b8:	test   eax,0x981003ee
1003f1bd:	out    dx,al
1003f1be:	add    edx,DWORD PTR [eax]
1003f1c0:	leave  
1003f1c1:	out    dx,al
1003f1c2:	add    edx,DWORD PTR [eax]
1003f1c4:	xor    ebp,edi
1003f1c6:	add    edx,DWORD PTR [eax]
1003f1c8:	fucomip st,st(5)
1003f1ca:	add    edx,DWORD PTR [eax]
1003f1cc:	in     eax,dx
1003f1cd:	in     eax,dx
1003f1ce:	add    edx,DWORD PTR [eax]
1003f1d0:	push   cs
1003f1d1:	out    dx,al
1003f1d2:	add    edx,DWORD PTR [eax]
1003f1d4:	mov    eax,ds:0x1003f1
1003f1d9:	add    DWORD PTR [edx],eax
1003f1db:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003f1e2:	or     ecx,DWORD PTR [ebx]
1003f1e4:	push   es
1003f1e5:	push   es
1003f1e6:	pop    es
1003f1e7:	pop    es
1003f1e8:	or     ecx,DWORD PTR [ebx]
1003f1ea:	or     ecx,DWORD PTR [ebx]
1003f1ec:	or     ecx,DWORD PTR [ebx]
1003f1ee:	or     BYTE PTR [ecx],cl
1003f1f0:	or     cl,BYTE PTR [ebp-0xecfffb7]
1003f1f6:	add    edx,DWORD PTR [eax]
1003f1f8:	pop    es
1003f1f9:	icebp  
1003f1fa:	add    edx,DWORD PTR [eax]
1003f1fc:	mov    dh,cl
1003f1fe:	add    edx,DWORD PTR [eax]
1003f200:	cmp    eax,0x8f1003f1
1003f205:	icebp  
1003f206:	add    edx,DWORD PTR [eax]
1003f208:	xor    ecx,0xf1621003
1003f20e:	add    edx,DWORD PTR [eax]
1003f210:	inc    edx
1003f211:	icebp  
1003f212:	add    edx,DWORD PTR [eax]
1003f214:	je     0x1003f207
1003f216:	add    edx,DWORD PTR [eax]
1003f218:	outs   dx,DWORD PTR ds:[esi]
1003f219:	icebp  
1003f21a:	add    edx,DWORD PTR [eax]
1003f21c:	(bad)  
1003f21d:	out    dx,eax
1003f21e:	add    edx,DWORD PTR [eax]
1003f220:	mov    eax,ds:0x1003f1
1003f225:	add    DWORD PTR [edx],eax
1003f227:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003f22e:	or     ecx,DWORD PTR [ebx]
1003f230:	push   es
1003f231:	pop    es
1003f232:	or     BYTE PTR [ecx],cl
1003f234:	or     ecx,DWORD PTR [ebx]
1003f236:	or     ecx,DWORD PTR [ebx]
1003f238:	or     ecx,DWORD PTR [ebx]
1003f23a:	or     cl,BYTE PTR [edx]
1003f23c:	(bad)  
1003f23d:	out    dx,eax
1003f23e:	add    edx,DWORD PTR [eax]
1003f240:	stos   DWORD PTR es:[edi],eax
1003f241:	out    dx,eax
1003f242:	add    edx,DWORD PTR [eax]
1003f244:	add    eax,esi
1003f246:	add    edx,DWORD PTR [eax]
1003f248:	call   0x4e13f63c
1003f24d:	lock add edx,DWORD PTR [eax]
1003f250:	and    eax,0x621003f0
1003f255:	lock add edx,DWORD PTR [eax]
1003f258:	enter  0x3f0,0x10
1003f25c:	mov    eax,ds:0x1003f1
1003f261:	add    DWORD PTR [edx],eax
1003f263:	add    eax,DWORD PTR [eax*1+0x8080808]
1003f26a:	or     BYTE PTR [eax],cl
1003f26c:	push   es
1003f26d:	push   es
1003f26e:	pop    es
1003f26f:	pop    es
1003f270:	sub    esp,0xf0
1003f276:	mov    eax,ds:0x100801ac
1003f27b:	xor    eax,esp
1003f27d:	mov    DWORD PTR [esp+0xec],eax
1003f284:	push   ebx
1003f285:	push   ebp
1003f286:	push   esi
1003f287:	push   edi
1003f288:	mov    eax,DWORD PTR [esp+0x104]
1003f28f:	mov    DWORD PTR [esp+0xa8],eax
1003f296:	mov    eax,DWORD PTR [eax]
1003f298:	mov    DWORD PTR [esp+0x34],eax
1003f29c:	mov    DWORD PTR [esp+0x20],ecx
1003f2a0:	mov    ecx,DWORD PTR [esp+0x10c]
1003f2a7:	shr    eax,0x9
1003f2aa:	and    eax,0x1
1003f2ad:	mov    DWORD PTR [esp+0xb4],ecx
1003f2b4:	mov    ecx,DWORD PTR [esp+0x110]
1003f2bb:	mov    DWORD PTR [esp+0xa4],eax
1003f2c2:	xor    eax,0x1
1003f2c5:	mov    DWORD PTR [esp+0xac],ecx
1003f2cc:	mov    ecx,DWORD PTR [esp+0x114]
1003f2d3:	mov    DWORD PTR [esp+0xa0],eax
1003f2da:	mov    eax,0xfffffffe
1003f2df:	mov    DWORD PTR [esp+0x98],ecx
1003f2e6:	mov    ecx,DWORD PTR [esp+0x118]
1003f2ed:	mov    DWORD PTR [esp+0x68],eax
1003f2f1:	mov    DWORD PTR [esp+0x5c],eax
1003f2f5:	mov    DWORD PTR [esp+0x4c],eax
1003f2f9:	mov    DWORD PTR [esp+0x30],eax
1003f2fd:	mov    eax,DWORD PTR [esp+0x34]
1003f301:	mov    esi,DWORD PTR [esp+0x108]
1003f308:	mov    DWORD PTR [esp+0x18],ecx
1003f30c:	mov    ecx,DWORD PTR [esp+0x11c]
1003f313:	mov    DWORD PTR [esp+0xb0],edx
1003f31a:	mov    edx,DWORD PTR [edx]
1003f31c:	xor    edi,edi
1003f31e:	xor    ebp,ebp
1003f320:	and    eax,0x1
1003f323:	mov    DWORD PTR [esp+0x38],ecx
1003f327:	mov    ecx,edx
1003f329:	mov    ebx,edx
1003f32b:	shl    eax,0x8
1003f32e:	mov    DWORD PTR [esp+0x9c],esi
1003f335:	mov    esi,DWORD PTR [esi]
1003f337:	mov    DWORD PTR [esp+0x48],edi
1003f33b:	mov    DWORD PTR [esp+0x40],edi
1003f33f:	mov    DWORD PTR [esp+0x94],edi
1003f346:	mov    DWORD PTR [esp+0x6c],edi
1003f34a:	mov    DWORD PTR [esp+0x14],edx
1003f34e:	mov    DWORD PTR [esp+0x80],ecx
1003f355:	mov    DWORD PTR [esp+0xb8],ebx
1003f35c:	mov    DWORD PTR [esp+0x50],edi
1003f360:	mov    DWORD PTR [esp+0x88],edi
1003f367:	mov    DWORD PTR [esp+0x2c],ebp
1003f36b:	mov    DWORD PTR [esp+0x74],edi
1003f36f:	mov    DWORD PTR [esp+0x64],edi
1003f373:	mov    DWORD PTR [esp+0x84],eax
1003f37a:	cmp    DWORD PTR [esp+0x38],0x0
1003f37f:	mov    DWORD PTR [esp+0x10],esi
1003f383:	movzx  eax,BYTE PTR [esi]
1003f386:	mov    DWORD PTR [esp+0x1c],eax
1003f38a:	mov    eax,DWORD PTR [esp+0x18]
1003f38e:	je     0x1003f41f
1003f394:	mov    eax,DWORD PTR [eax+0x10]
1003f397:	add    eax,0x1000
1003f39c:	cmp    edx,eax
1003f39e:	ja     0x10041b09
1003f3a4:	cmp    edx,ecx
1003f3a6:	jae    0x1003f3ae
1003f3a8:	mov    DWORD PTR [esp+0x14],ecx
1003f3ac:	mov    edx,ecx
1003f3ae:	mov    eax,DWORD PTR [esp+0x38]
1003f3b2:	mov    eax,DWORD PTR [eax]
1003f3b4:	sub    edx,ecx
1003f3b6:	mov    ecx,0x7fffffeb
1003f3bb:	sub    ecx,eax
1003f3bd:	cmp    ecx,edx
1003f3bf:	jl     0x10041b18
1003f3c5:	sub    eax,DWORD PTR [esp+0x80]
1003f3cc:	mov    edx,DWORD PTR [esp+0x14]
1003f3d0:	mov    ecx,DWORD PTR [esp+0x38]
1003f3d4:	add    eax,edx
1003f3d6:	test   ebp,ebp
1003f3d8:	mov    DWORD PTR [ecx],eax
1003f3da:	je     0x1003f410
1003f3dc:	cmp    ebp,ebx
1003f3de:	jbe    0x1003f416
1003f3e0:	mov    esi,edx
1003f3e2:	sub    edx,ebp
1003f3e4:	push   edx
1003f3e5:	push   ebp
1003f3e6:	push   ebx
1003f3e7:	call   0x10045880
1003f3ec:	mov    eax,ebx
1003f3ee:	sub    eax,ebp
1003f3f0:	add    esp,0xc
1003f3f3:	add    esi,eax
1003f3f5:	mov    DWORD PTR [esp+0x14],esi
1003f3f9:	mov    edx,DWORD PTR [esp+0x14]
1003f3fd:	mov    esi,DWORD PTR [esp+0x10]
1003f401:	mov    ebp,ebx
1003f403:	mov    DWORD PTR [esp+0x2c],ebp
1003f407:	mov    DWORD PTR [esp+0x80],edx
1003f40e:	jmp    0x1003f431
1003f410:	mov    DWORD PTR [esp+0x14],ebx
1003f414:	mov    edx,ebx
1003f416:	mov    DWORD PTR [esp+0x80],edx
1003f41d:	jmp    0x1003f431
1003f41f:	mov    ecx,DWORD PTR [eax+0x10]
1003f422:	add    ecx,0x1000
1003f428:	cmp    DWORD PTR [eax+0x20],ecx
1003f42b:	ja     0x10041b27
1003f431:	cmp    DWORD PTR [esp+0x50],0x0
1003f436:	mov    ecx,DWORD PTR [esp+0x1c]
1003f43a:	je     0x1003f517
1003f440:	test   ecx,ecx
1003f442:	je     0x1003f517
1003f448:	cmp    ecx,0x5c
1003f44b:	jne    0x1003f463
1003f44d:	cmp    BYTE PTR [esi+0x1],0x45
1003f451:	jne    0x1003f463
1003f453:	mov    DWORD PTR [esp+0x50],0x0
1003f45b:	add    esi,0x1
1003f45e:	jmp    0x10041ae7
1003f463:	test   edi,edi
1003f465:	je     0x1003f498
1003f467:	cmp    DWORD PTR [esp+0x38],0x0
1003f46c:	jne    0x1003f490
1003f46e:	xor    ebx,ebx
1003f470:	mov    bh,BYTE PTR [edi+0x2]
1003f473:	mov    eax,esi
1003f475:	mov    esi,DWORD PTR [esp+0x18]
1003f479:	mov    bl,BYTE PTR [edi+0x3]
1003f47c:	sub    eax,ebx
1003f47e:	sub    eax,DWORD PTR [esi+0x18]
1003f481:	mov    ebx,eax
1003f483:	sar    ebx,0x8
1003f486:	mov    BYTE PTR [edi+0x4],bl
1003f489:	mov    BYTE PTR [edi+0x5],al
1003f48c:	mov    esi,DWORD PTR [esp+0x10]
1003f490:	mov    DWORD PTR [esp+0x74],0x0
1003f498:	test   DWORD PTR [esp+0x34],0x4000
1003f4a0:	je     0x1003f4dc
1003f4a2:	mov    BYTE PTR [edx],0x53
1003f4a5:	mov    BYTE PTR [edx+0x1],0xff
1003f4a9:	mov    ecx,esi
1003f4ab:	mov    esi,DWORD PTR [esp+0x18]
1003f4af:	lea    eax,[edx+0x1]
1003f4b2:	mov    DWORD PTR [esp+0x74],edx
1003f4b6:	mov    edx,ecx
1003f4b8:	sub    edx,DWORD PTR [esi+0x18]
1003f4bb:	add    eax,0x1
1003f4be:	sar    edx,0x8
1003f4c1:	mov    BYTE PTR [eax],dl
1003f4c3:	sub    cl,BYTE PTR [esi+0x18]
1003f4c6:	mov    BYTE PTR [eax+0x2],0x0
1003f4ca:	mov    BYTE PTR [eax+0x1],cl
1003f4cd:	mov    ecx,DWORD PTR [esp+0x1c]
1003f4d1:	mov    BYTE PTR [eax+0x3],0x0
1003f4d5:	add    eax,0x4
1003f4d8:	mov    DWORD PTR [esp+0x14],eax
1003f4dc:	mov    al,cl
1003f4de:	mov    dl,BYTE PTR [esp+0x34]
1003f4e2:	mov    ecx,DWORD PTR [esp+0x14]
1003f4e6:	and    dl,0x1
1003f4e9:	or     dl,0x1c
1003f4ec:	mov    BYTE PTR [ecx],dl
1003f4ee:	mov    DWORD PTR [esp+0x2c],ecx
1003f4f2:	add    ecx,0x1
1003f4f5:	mov    BYTE PTR [ecx],al
1003f4f7:	add    ecx,0x1
1003f4fa:	cmp    al,0xd
1003f4fc:	mov    DWORD PTR [esp+0x14],ecx
1003f500:	je     0x1003f50a
1003f502:	cmp    al,0xa
1003f504:	jne    0x10041a98
1003f50a:	mov    edx,DWORD PTR [esp+0x18]
1003f50e:	or     DWORD PTR [edx+0x44],0x20
1003f512:	jmp    0x10041a9c
1003f517:	cmp    ecx,0x2a
1003f51a:	je     0x1003f591
1003f51c:	cmp    ecx,0x2b
1003f51f:	je     0x1003f591
1003f521:	cmp    ecx,0x3f
1003f524:	je     0x1003f591
1003f526:	cmp    ecx,0x7b
1003f529:	jne    0x1003f53b
1003f52b:	lea    eax,[esi+0x1]
1003f52e:	call   0x1003e1a0
1003f533:	test   eax,eax
1003f535:	mov    ecx,DWORD PTR [esp+0x1c]
1003f539:	jne    0x1003f591
1003f53b:	test   edi,edi
1003f53d:	mov    DWORD PTR [esp+0x28],0x0
1003f545:	je     0x1003f599
1003f547:	mov    eax,DWORD PTR [esp+0x94]
1003f54e:	mov    edx,eax
1003f550:	sub    eax,0x1
1003f553:	test   edx,edx
1003f555:	mov    DWORD PTR [esp+0x94],eax
1003f55c:	jg     0x1003f599
1003f55e:	cmp    DWORD PTR [esp+0x38],0x0
1003f563:	mov    ebx,DWORD PTR [esp+0x18]
1003f567:	jne    0x1003f587
1003f569:	xor    edx,edx
1003f56b:	mov    dh,BYTE PTR [edi+0x2]
1003f56e:	mov    eax,esi
1003f570:	mov    dl,BYTE PTR [edi+0x3]
1003f573:	sub    eax,edx
1003f575:	sub    eax,DWORD PTR [ebx+0x18]
1003f578:	mov    edx,eax
1003f57a:	sar    edx,0x8
1003f57d:	mov    BYTE PTR [edi+0x4],dl
1003f580:	mov    BYTE PTR [edi+0x5],al
1003f583:	mov    esi,DWORD PTR [esp+0x10]
1003f587:	mov    DWORD PTR [esp+0x74],0x0
1003f58f:	jmp    0x1003f59d
1003f591:	mov    DWORD PTR [esp+0x28],0x1
1003f599:	mov    ebx,DWORD PTR [esp+0x18]
1003f59d:	test   BYTE PTR [esp+0x34],0x8
1003f5a2:	je     0x1003f622
1003f5a4:	mov    eax,DWORD PTR [ebx+0xc]
1003f5a7:	test   BYTE PTR [ecx+eax*1],0x1
1003f5ab:	jne    0x10041ae7
1003f5b1:	cmp    ecx,0x23
1003f5b4:	mov    ebx,DWORD PTR [esp+0x18]
1003f5b8:	jne    0x1003f61e
1003f5ba:	add    esi,0x1
1003f5bd:	mov    DWORD PTR [esp+0x10],esi
1003f5c1:	mov    al,BYTE PTR [esi]
1003f5c3:	test   al,al
1003f5c5:	je     0x1003f612
1003f5c7:	jmp    0x1003f5d0
1003f5c9:	lea    esp,[esp+0x0]
1003f5d0:	mov    ecx,DWORD PTR [ebx+0x50]
1003f5d3:	test   ecx,ecx
1003f5d5:	je     0x1003f688
1003f5db:	mov    eax,DWORD PTR [ebx+0x1c]
1003f5de:	cmp    esi,eax
1003f5e0:	jae    0x1003f6ae
1003f5e6:	push   ecx
1003f5e7:	lea    edi,[ebx+0x54]
1003f5ea:	xor    edx,edx
1003f5ec:	mov    ecx,esi
1003f5ee:	call   0x10042e70
1003f5f3:	add    esp,0x4
1003f5f6:	test   eax,eax
1003f5f8:	je     0x1003f6ae
1003f5fe:	mov    ecx,DWORD PTR [ebx+0x54]
1003f601:	lea    esi,[esi+ecx*1-0x1]
1003f605:	mov    DWORD PTR [esp+0x10],esi
1003f609:	cmp    BYTE PTR [esi],0x0
1003f60c:	jne    0x10041ae7
1003f612:	mov    DWORD PTR [esp+0x1c],0x0
1003f61a:	mov    ecx,DWORD PTR [esp+0x1c]
1003f61e:	mov    ebp,DWORD PTR [esp+0x2c]
1003f622:	test   DWORD PTR [esp+0x34],0x4000
1003f62a:	je     0x1003f671
1003f62c:	cmp    DWORD PTR [esp+0x28],0x0
1003f631:	jne    0x1003f671
1003f633:	mov    eax,DWORD PTR [esp+0x14]
1003f637:	mov    BYTE PTR [eax],0x53
1003f63a:	mov    BYTE PTR [eax+0x1],0xff
1003f63e:	mov    ecx,esi
1003f640:	mov    DWORD PTR [esp+0x74],eax
1003f644:	add    eax,0x1
1003f647:	mov    edx,ecx
1003f649:	sub    edx,DWORD PTR [ebx+0x18]
1003f64c:	add    eax,0x1
1003f64f:	sar    edx,0x8
1003f652:	mov    BYTE PTR [eax],dl
1003f654:	sub    cl,BYTE PTR [ebx+0x18]
1003f657:	mov    BYTE PTR [eax+0x2],0x0
1003f65b:	mov    BYTE PTR [eax+0x1],cl
1003f65e:	mov    ecx,DWORD PTR [esp+0x1c]
1003f662:	mov    BYTE PTR [eax+0x3],0x0
1003f666:	mov    esi,DWORD PTR [esp+0x10]
1003f66a:	add    eax,0x4
1003f66d:	mov    DWORD PTR [esp+0x14],eax
1003f671:	cmp    ecx,0x7c
1003f674:	ja     0x1003f4dc
1003f67a:	movzx  eax,BYTE PTR [ecx+0x10041de0]
1003f681:	jmp    DWORD PTR [eax*4+0x10041dac]
1003f688:	mov    ecx,DWORD PTR [ebx+0x54]
1003f68b:	mov    edx,DWORD PTR [ebx+0x1c]
1003f68e:	sub    edx,ecx
1003f690:	cmp    esi,edx
1003f692:	ja     0x1003f6ae
1003f694:	cmp    al,BYTE PTR [ebx+0x58]
1003f697:	jne    0x1003f6ae
1003f699:	cmp    ecx,0x1
1003f69c:	je     0x1003f5fe
1003f6a2:	mov    al,BYTE PTR [esi+0x1]
1003f6a5:	cmp    al,BYTE PTR [ebx+0x59]
1003f6a8:	je     0x1003f5fe
1003f6ae:	add    esi,0x1
1003f6b1:	mov    DWORD PTR [esp+0x10],esi
1003f6b5:	mov    al,BYTE PTR [esi]
1003f6b7:	test   al,al
1003f6b9:	jne    0x1003f5d0
1003f6bf:	jmp    0x1003f612
1003f6c4:	test   BYTE PTR [esp+0x34],0x2
1003f6c9:	je     0x1003f6da
1003f6cb:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1003f6d0:	jne    0x1003f6da
1003f6d2:	mov    DWORD PTR [esp+0x30],0xffffffff
1003f6da:	mov    eax,DWORD PTR [esp+0x14]
1003f6de:	mov    BYTE PTR [eax],0x1a
1003f6e1:	add    eax,0x1
1003f6e4:	mov    DWORD PTR [esp+0x2c],0x0
1003f6ec:	mov    DWORD PTR [esp+0x14],eax
1003f6f0:	jmp    0x10041ae3
1003f6f5:	mov    eax,DWORD PTR [esp+0x14]
1003f6f9:	mov    BYTE PTR [eax],0x1b
1003f6fc:	add    eax,0x1
1003f6ff:	mov    DWORD PTR [esp+0x2c],0x0
1003f707:	mov    DWORD PTR [esp+0x14],eax
1003f70b:	jmp    0x10041ae3
1003f710:	mov    eax,DWORD PTR [esp+0x30]
1003f714:	cmp    eax,0xfffffffe
1003f717:	jne    0x1003f720
1003f719:	or     eax,0xffffffff
1003f71c:	mov    DWORD PTR [esp+0x30],eax
1003f720:	mov    edx,DWORD PTR [esp+0x34]
1003f724:	mov    ecx,DWORD PTR [esp+0x4c]
1003f728:	shr    edx,0x2
1003f72b:	and    dl,0x1
1003f72e:	mov    DWORD PTR [esp+0x5c],eax
1003f732:	mov    eax,DWORD PTR [esp+0x14]
1003f736:	or     dl,0xc
1003f739:	mov    DWORD PTR [esp+0x2c],eax
1003f73d:	mov    BYTE PTR [eax],dl
1003f73f:	add    eax,0x1
1003f742:	mov    DWORD PTR [esp+0x68],ecx
1003f746:	mov    DWORD PTR [esp+0x14],eax
1003f74a:	jmp    0x10041ae3
1003f74f:	mov    eax,DWORD PTR [esp+0x18]
1003f753:	test   DWORD PTR [eax+0x40],0x2000000
1003f75a:	je     0x1003f4dc
1003f760:	mov    ecx,DWORD PTR [esp+0x20]
1003f764:	mov    DWORD PTR [ecx],0x40
1003f76a:	jmp    0x10040a6d
1003f76f:	mov    al,BYTE PTR [esi+0x1]
1003f772:	cmp    al,0x3a
1003f774:	mov    ebx,DWORD PTR [esp+0x14]
1003f778:	mov    DWORD PTR [esp+0x2c],ebx
1003f77c:	je     0x1003f786
1003f77e:	cmp    al,0x2e
1003f780:	je     0x1003f786
1003f782:	cmp    al,0x3d
1003f784:	jne    0x1003f79d
1003f786:	lea    ecx,[esp+0x7c]
1003f78a:	push   ecx
1003f78b:	mov    eax,esi
1003f78d:	call   0x1003ead0
1003f792:	add    esp,0x4
1003f795:	test   eax,eax
1003f797:	jne    0x10041b96
1003f79d:	mov    DWORD PTR [esp+0x1c],0x0
1003f7a5:	mov    ebp,0x1
1003f7aa:	lea    ebx,[ebx+0x0]
1003f7b0:	add    esi,ebp
1003f7b2:	mov    DWORD PTR [esp+0x10],esi
1003f7b6:	movzx  edi,BYTE PTR [esi]
1003f7b9:	cmp    edi,0x5c
1003f7bc:	jne    0x1003f7e2
1003f7be:	add    esi,ebp
1003f7c0:	cmp    BYTE PTR [esi],0x45
1003f7c3:	je     0x1003f7b0
1003f7c5:	push   0x3
1003f7c7:	push   0x1007587c
1003f7cc:	push   esi
1003f7cd:	call   0x1004f416
1003f7d2:	mov    esi,DWORD PTR [esp+0x1c]
1003f7d6:	add    esp,0xc
1003f7d9:	test   eax,eax
1003f7db:	jne    0x1003f830
1003f7dd:	add    esi,0x3
1003f7e0:	jmp    0x1003f7b0
1003f7e2:	mov    eax,DWORD PTR [esp+0x1c]
1003f7e6:	test   eax,eax
1003f7e8:	jne    0x1003f7f5
1003f7ea:	cmp    edi,0x5e
1003f7ed:	jne    0x1003f7f5
1003f7ef:	mov    DWORD PTR [esp+0x1c],ebp
1003f7f3:	jmp    0x1003f7b0
1003f7f5:	cmp    edi,0x5d
1003f7f8:	jne    0x1003f830
1003f7fa:	mov    edx,DWORD PTR [esp+0x18]
1003f7fe:	test   DWORD PTR [edx+0x40],0x2000000
1003f805:	je     0x1003f830
1003f807:	neg    eax
1003f809:	sbb    al,al
1003f80b:	and    al,0xa0
1003f80d:	add    al,0x6d
1003f80f:	mov    BYTE PTR [ebx],al
1003f811:	mov    eax,DWORD PTR [esp+0x30]
1003f815:	add    ebx,ebp
1003f817:	cmp    eax,0xfffffffe
1003f81a:	mov    DWORD PTR [esp+0x14],ebx
1003f81e:	jne    0x1003f827
1003f820:	or     eax,0xffffffff
1003f823:	mov    DWORD PTR [esp+0x30],eax
1003f827:	mov    DWORD PTR [esp+0x5c],eax
1003f82b:	jmp    0x10041ae3
1003f830:	xor    eax,eax
1003f832:	cmp    edi,eax
1003f834:	mov    DWORD PTR [esp+0x3c],eax
1003f838:	mov    DWORD PTR [esp+0x24],eax
1003f83c:	mov    DWORD PTR [esp+0x28],0xffffffff
1003f844:	mov    DWORD PTR [esp+0xbc],eax
1003f84b:	mov    DWORD PTR [esp+0xc0],eax
1003f852:	mov    DWORD PTR [esp+0xc4],eax
1003f859:	mov    DWORD PTR [esp+0xc8],eax
1003f860:	mov    DWORD PTR [esp+0xcc],eax
1003f867:	mov    DWORD PTR [esp+0xd0],eax
1003f86e:	mov    DWORD PTR [esp+0xd4],eax
1003f875:	mov    DWORD PTR [esp+0xd8],eax
1003f87c:	je     0x10041be9
1003f882:	cmp    DWORD PTR [esp+0x50],0x0
1003f887:	je     0x1003f8ac
1003f889:	cmp    edi,0x5c
1003f88c:	jne    0x1003fd78
1003f892:	cmp    BYTE PTR [esi+0x1],0x45
1003f896:	jne    0x1003fd78
1003f89c:	mov    DWORD PTR [esp+0x50],0x0
1003f8a4:	add    esi,0x1
1003f8a7:	jmp    0x1003fb07
1003f8ac:	cmp    edi,0x5b
1003f8af:	jne    0x1003fa2a
1003f8b5:	mov    bl,BYTE PTR [esi+0x1]
1003f8b8:	cmp    bl,0x3a
1003f8bb:	je     0x1003f8cb
1003f8bd:	cmp    bl,0x2e
1003f8c0:	je     0x1003f8cb
1003f8c2:	cmp    bl,0x3d
1003f8c5:	jne    0x1003fd78
1003f8cb:	lea    eax,[esp+0x7c]
1003f8cf:	push   eax
1003f8d0:	mov    eax,esi
1003f8d2:	call   0x1003ead0
1003f8d7:	add    esp,0x4
1003f8da:	test   eax,eax
1003f8dc:	je     0x1003fd78
1003f8e2:	cmp    bl,0x3a
1003f8e5:	mov    ecx,DWORD PTR [esp+0x18]
1003f8e9:	mov    ebp,DWORD PTR [ecx+0x8]
1003f8ec:	mov    DWORD PTR [esp+0x58],0x0
1003f8f4:	jne    0x10041bb1
1003f8fa:	add    esi,0x2
1003f8fd:	mov    DWORD PTR [esp+0x10],esi
1003f901:	cmp    BYTE PTR [esi],0x5e
1003f904:	jne    0x1003f919
1003f906:	mov    eax,0x1
1003f90b:	add    esi,eax
1003f90d:	mov    DWORD PTR [esp+0x58],eax
1003f911:	mov    DWORD PTR [esp+0x3c],eax
1003f915:	mov    DWORD PTR [esp+0x10],esi
1003f919:	mov    ebx,DWORD PTR [esp+0x7c]
1003f91d:	sub    ebx,esi
1003f91f:	push   esi
1003f920:	call   0x1003eb20
1003f925:	add    esp,0x4
1003f928:	test   eax,eax
1003f92a:	jl     0x10041bc0
1003f930:	test   BYTE PTR [esp+0x34],0x1
1003f935:	je     0x1003f93e
1003f937:	cmp    eax,0x2
1003f93a:	jg     0x1003f93e
1003f93c:	xor    eax,eax
1003f93e:	lea    eax,[eax+eax*2]
1003f941:	mov    esi,DWORD PTR [eax*4+0x1006fbf0]
1003f948:	add    esi,ebp
1003f94a:	mov    ecx,0x8
1003f94f:	lea    edi,[esp+0xdc]
1003f956:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003f958:	mov    ecx,DWORD PTR [eax*4+0x1006fbf4]
1003f95f:	test   ecx,ecx
1003f961:	mov    esi,DWORD PTR [eax*4+0x1006fbf8]
1003f968:	jl     0x1003f9a4
1003f96a:	xor    eax,eax
1003f96c:	add    ecx,ebp
1003f96e:	test   esi,esi
1003f970:	jl     0x1003f990
1003f972:	mov    dl,BYTE PTR [ecx+eax*1]
1003f975:	or     BYTE PTR [esp+eax*1+0xdc],dl
1003f97c:	add    eax,0x1
1003f97f:	cmp    eax,0x20
1003f982:	jl     0x1003f972
1003f984:	jmp    0x1003f9a4
1003f986:	jmp    0x1003f990
1003f988:	lea    esp,[esp+0x0]
1003f98f:	nop
1003f990:	mov    dl,BYTE PTR [ecx+eax*1]
1003f993:	not    dl
1003f995:	and    BYTE PTR [esp+eax*1+0xdc],dl
1003f99c:	add    eax,0x1
1003f99f:	cmp    eax,0x20
1003f9a2:	jl     0x1003f990
1003f9a4:	test   esi,esi
1003f9a6:	jge    0x1003f9aa
1003f9a8:	neg    esi
1003f9aa:	cmp    esi,0x1
1003f9ad:	jne    0x1003f9b9
1003f9af:	and    BYTE PTR [esp+0xdd],0xc3
1003f9b7:	jmp    0x1003f9c6
1003f9b9:	cmp    esi,0x2
1003f9bc:	jne    0x1003f9c6
1003f9be:	and    BYTE PTR [esp+0xe7],0x7f
1003f9c6:	xor    eax,eax
1003f9c8:	cmp    DWORD PTR [esp+0x58],eax
1003f9cc:	je     0x1003fa00
1003f9ce:	mov    edi,edi
1003f9d0:	mov    cl,BYTE PTR [esp+eax*1+0xdc]
1003f9d7:	not    cl
1003f9d9:	or     BYTE PTR [esp+eax*1+0xbc],cl
1003f9e0:	add    eax,0x1
1003f9e3:	cmp    eax,0x20
1003f9e6:	jl     0x1003f9d0
1003f9e8:	mov    esi,DWORD PTR [esp+0x7c]
1003f9ec:	add    esi,0x1
1003f9ef:	mov    DWORD PTR [esp+0x24],0xa
1003f9f7:	jmp    0x1003fb07
1003f9fc:	lea    esp,[esp+0x0]
1003fa00:	mov    dl,BYTE PTR [esp+eax*1+0xdc]
1003fa07:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fa0e:	add    eax,0x1
1003fa11:	cmp    eax,0x20
1003fa14:	jl     0x1003fa00
1003fa16:	mov    esi,DWORD PTR [esp+0x7c]
1003fa1a:	add    esi,0x1
1003fa1d:	mov    DWORD PTR [esp+0x24],0xa
1003fa25:	jmp    0x1003fb07
1003fa2a:	cmp    edi,0x5c
1003fa2d:	jne    0x1003fd78
1003fa33:	mov    ebp,DWORD PTR [esp+0x18]
1003fa37:	mov    eax,DWORD PTR [ebp+0x30]
1003fa3a:	mov    esi,DWORD PTR [esp+0x20]
1003fa3e:	mov    ebx,DWORD PTR [esp+0x34]
1003fa42:	push   0x1
1003fa44:	push   eax
1003fa45:	lea    ecx,[esp+0x18]
1003fa49:	push   esi
1003fa4a:	push   ecx
1003fa4b:	mov    eax,ebx
1003fa4d:	call   0x1003dd70
1003fa52:	add    esp,0x10
1003fa55:	cmp    DWORD PTR [esi],0x0
1003fa58:	mov    edi,eax
1003fa5a:	jne    0x10040a69
1003fa60:	mov    ecx,edi
1003fa62:	neg    ecx
1003fa64:	cmp    ecx,0x5
1003fa67:	jne    0x1003fa75
1003fa69:	lea    edi,[ecx+0x3]
1003fa6c:	mov    esi,DWORD PTR [esp+0x10]
1003fa70:	jmp    0x1003fd7c
1003fa75:	cmp    ecx,0x16
1003fa78:	jne    0x1003fa86
1003fa7a:	mov    esi,DWORD PTR [esp+0x10]
1003fa7e:	lea    edi,[ecx+0x42]
1003fa81:	jmp    0x1003fd7c
1003fa86:	cmp    ecx,0x11
1003fa89:	jne    0x1003fa97
1003fa8b:	mov    esi,DWORD PTR [esp+0x10]
1003fa8f:	lea    edi,[ecx+0x41]
1003fa92:	jmp    0x1003fd7c
1003fa97:	cmp    ecx,0x1a
1003fa9a:	jne    0x1003fabb
1003fa9c:	mov    esi,DWORD PTR [esp+0x10]
1003faa0:	cmp    BYTE PTR [esi+0x1],0x5c
1003faa4:	jne    0x1003fab1
1003faa6:	cmp    BYTE PTR [esi+0x2],0x45
1003faaa:	jne    0x1003fab1
1003faac:	add    esi,0x2
1003faaf:	jmp    0x1003fb07
1003fab1:	mov    DWORD PTR [esp+0x50],0x1
1003fab9:	jmp    0x1003fb07
1003fabb:	cmp    ecx,0x19
1003fabe:	je     0x1003fb03
1003fac0:	test   edi,edi
1003fac2:	jge    0x1003fa6c
1003fac4:	add    DWORD PTR [esp+0x24],0x2
1003fac9:	cmp    DWORD PTR [esp+0x38],0x0
1003face:	mov    eax,DWORD PTR [ebp+0x8]
1003fad1:	jne    0x1003fc73
1003fad7:	lea    edx,[ecx-0x6]
1003fada:	cmp    edx,0x5
1003fadd:	ja     0x1003fca9
1003fae3:	jmp    DWORD PTR [edx*4+0x10041e60]
1003faea:	xor    ecx,ecx
1003faec:	lea    esp,[esp+0x0]
1003faf0:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003faf4:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fafb:	add    ecx,0x1
1003fafe:	cmp    ecx,0x20
1003fb01:	jl     0x1003faf0
1003fb03:	mov    esi,DWORD PTR [esp+0x10]
1003fb07:	add    esi,0x1
1003fb0a:	mov    DWORD PTR [esp+0x10],esi
1003fb0e:	movzx  edi,BYTE PTR [esi]
1003fb11:	test   edi,edi
1003fb13:	je     0x10041be9
1003fb19:	cmp    edi,0x5d
1003fb1c:	jne    0x1003f882
1003fb22:	cmp    DWORD PTR [esp+0x50],0x0
1003fb27:	jne    0x1003f889
1003fb2d:	cmp    DWORD PTR [esp+0x24],0x1
1003fb32:	jne    0x1003ffb3
1003fb38:	cmp    DWORD PTR [esp+0x1c],0x0
1003fb3d:	mov    eax,DWORD PTR [esp+0x4c]
1003fb41:	mov    DWORD PTR [esp+0x68],eax
1003fb45:	je     0x1003ffaa
1003fb4b:	mov    eax,DWORD PTR [esp+0x30]
1003fb4f:	cmp    eax,0xfffffffe
1003fb52:	jne    0x1003fb5b
1003fb54:	or     eax,0xffffffff
1003fb57:	mov    DWORD PTR [esp+0x30],eax
1003fb5b:	mov    cl,BYTE PTR [esp+0x28]
1003fb5f:	mov    DWORD PTR [esp+0x5c],eax
1003fb63:	mov    eax,DWORD PTR [esp+0x14]
1003fb67:	mov    BYTE PTR [eax],0x1e
1003fb6a:	add    eax,0x1
1003fb6d:	mov    BYTE PTR [eax],cl
1003fb6f:	add    eax,0x1
1003fb72:	mov    DWORD PTR [esp+0x14],eax
1003fb76:	jmp    0x10041ae3
1003fb7b:	mov    DWORD PTR [esp+0x3c],0x1
1003fb83:	xor    ecx,ecx
1003fb85:	jmp    0x1003fb90
1003fb87:	lea    esp,[esp+0x0]
1003fb8e:	mov    edi,edi
1003fb90:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003fb94:	not    dl
1003fb96:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fb9d:	add    ecx,0x1
1003fba0:	cmp    ecx,0x20
1003fba3:	jl     0x1003fb90
1003fba5:	jmp    0x1003fb03
1003fbaa:	xor    ecx,ecx
1003fbac:	lea    esp,[esp+0x0]
1003fbb0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003fbb7:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fbbe:	add    ecx,0x1
1003fbc1:	cmp    ecx,0x20
1003fbc4:	jl     0x1003fbb0
1003fbc6:	jmp    0x1003fb03
1003fbcb:	mov    DWORD PTR [esp+0x3c],0x1
1003fbd3:	xor    ecx,ecx
1003fbd5:	jmp    0x1003fbe0
1003fbd7:	lea    esp,[esp+0x0]
1003fbde:	mov    edi,edi
1003fbe0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003fbe7:	not    dl
1003fbe9:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003fbf0:	add    ecx,0x1
1003fbf3:	cmp    ecx,0x20
1003fbf6:	jl     0x1003fbe0
1003fbf8:	jmp    0x1003fb03
1003fbfd:	mov    esi,eax
1003fbff:	lea    eax,[esp+0xbc]
1003fc06:	xor    edx,edx
1003fc08:	sub    esi,eax
1003fc0a:	lea    ebx,[ebx+0x0]
1003fc10:	lea    ecx,[esp+edx*1+0xbc]
1003fc17:	mov    al,BYTE PTR [esi+ecx*1]
1003fc1a:	or     BYTE PTR [ecx],al
1003fc1c:	add    edx,0x1
1003fc1f:	cmp    edx,0x20
1003fc22:	jl     0x1003fc10
1003fc24:	and    BYTE PTR [esp+0xbd],0xf7
1003fc2c:	jmp    0x1003fb03
1003fc31:	mov    esi,eax
1003fc33:	lea    ecx,[esp+0xbc]
1003fc3a:	xor    edx,edx
1003fc3c:	mov    DWORD PTR [esp+0x3c],0x1
1003fc44:	sub    esi,ecx
1003fc46:	jmp    0x1003fc50
1003fc48:	lea    esp,[esp+0x0]
1003fc4f:	nop
1003fc50:	lea    ecx,[esp+edx*1+0xbc]
1003fc57:	mov    al,BYTE PTR [esi+ecx*1]
1003fc5a:	not    al
1003fc5c:	or     BYTE PTR [ecx],al
1003fc5e:	add    edx,0x1
1003fc61:	cmp    edx,0x20
1003fc64:	jl     0x1003fc50
1003fc66:	or     BYTE PTR [esp+0xbd],0x8
1003fc6e:	jmp    0x1003fb03
1003fc73:	cmp    edi,0xfffffff9
1003fc76:	je     0x1003fb03
1003fc7c:	cmp    edi,0xfffffffa
1003fc7f:	je     0x1003fb03
1003fc85:	cmp    edi,0xfffffff5
1003fc88:	je     0x1003fb03
1003fc8e:	cmp    edi,0xfffffff6
1003fc91:	je     0x1003fb03
1003fc97:	cmp    edi,0xfffffff7
1003fc9a:	je     0x1003fb03
1003fca0:	cmp    edi,0xfffffff8
1003fca3:	je     0x1003fb03
1003fca9:	cmp    ecx,0x13
1003fcac:	jne    0x1003fccb
1003fcae:	or     BYTE PTR [esp+0xbd],0x2
1003fcb6:	or     BYTE PTR [esp+0xc0],0x1
1003fcbe:	or     BYTE PTR [esp+0xd0],0x1
1003fcc6:	jmp    0x1003fb03
1003fccb:	cmp    ecx,0x12
1003fcce:	jne    0x1003fd08
1003fcd0:	xor    eax,eax
1003fcd2:	mov    ecx,eax
1003fcd4:	sub    ecx,0x1
1003fcd7:	mov    edx,0xff
1003fcdc:	je     0x1003fcef
1003fcde:	sub    ecx,0x3
1003fce1:	je     0x1003fce8
1003fce3:	sub    ecx,0x10
1003fce6:	jne    0x1003fcf4
1003fce8:	mov    edx,0xfe
1003fced:	jmp    0x1003fcf4
1003fcef:	mov    edx,0xfd
1003fcf4:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fcfb:	add    eax,0x1
1003fcfe:	cmp    eax,0x20
1003fd01:	jl     0x1003fcd2
1003fd03:	jmp    0x1003fb03
1003fd08:	cmp    ecx,0x15
1003fd0b:	jne    0x1003fd22
1003fd0d:	or     BYTE PTR [esp+0xbd],0x3c
1003fd15:	or     BYTE PTR [esp+0xcc],0x20
1003fd1d:	jmp    0x1003fb03
1003fd22:	cmp    ecx,0x14
1003fd25:	jne    0x1003fd61
1003fd27:	xor    eax,eax
1003fd29:	lea    esp,[esp+0x0]
1003fd30:	mov    ecx,eax
1003fd32:	sub    ecx,0x1
1003fd35:	mov    edx,0xff
1003fd3a:	je     0x1003fd48
1003fd3c:	sub    ecx,0xf
1003fd3f:	jne    0x1003fd4d
1003fd41:	mov    edx,0xdf
1003fd46:	jmp    0x1003fd4d
1003fd48:	mov    edx,0xc3
1003fd4d:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003fd54:	add    eax,0x1
1003fd57:	cmp    eax,0x20
1003fd5a:	jl     0x1003fd30
1003fd5c:	jmp    0x1003fb03
1003fd61:	test   bl,0x40
1003fd64:	jne    0x10041bcf
1003fd6a:	mov    esi,DWORD PTR [esp+0x10]
1003fd6e:	sub    DWORD PTR [esp+0x24],0x2
1003fd73:	movzx  edi,BYTE PTR [esi]
1003fd76:	jmp    0x1003fd7c
1003fd78:	mov    ebp,DWORD PTR [esp+0x18]
1003fd7c:	cmp    BYTE PTR [esi+0x1],0x5c
1003fd80:	mov    eax,DWORD PTR [esp+0x50]
1003fd84:	jne    0x1003fd9f
1003fd86:	cmp    BYTE PTR [esi+0x2],0x45
1003fd8a:	jne    0x1003fd9b
1003fd8c:	add    esi,0x2
1003fd8f:	xor    eax,eax
1003fd91:	mov    DWORD PTR [esp+0x10],esi
1003fd95:	cmp    BYTE PTR [esi+0x1],0x5c
1003fd99:	je     0x1003fd86
1003fd9b:	mov    DWORD PTR [esp+0x50],eax
1003fd9f:	cmp    edi,0xd
1003fda2:	mov    DWORD PTR [esp+0x58],esi
1003fda6:	je     0x1003fdad
1003fda8:	cmp    edi,0xa
1003fdab:	jne    0x1003fdb1
1003fdad:	or     DWORD PTR [ebp+0x44],0x20
1003fdb1:	test   eax,eax
1003fdb3:	jne    0x1003ff50
1003fdb9:	cmp    BYTE PTR [esi+0x1],0x2d
1003fdbd:	jne    0x1003ff50
1003fdc3:	add    esi,0x2
1003fdc6:	mov    DWORD PTR [esp+0x10],esi
1003fdca:	cmp    BYTE PTR [esi],0x5c
1003fdcd:	jne    0x1003fe1e
1003fdcf:	nop
1003fdd0:	cmp    BYTE PTR [esi+0x1],0x45
1003fdd4:	jne    0x1003fde4
1003fdd6:	add    esi,0x2
1003fdd9:	mov    DWORD PTR [esp+0x10],esi
1003fddd:	cmp    BYTE PTR [esi],0x5c
1003fde0:	je     0x1003fdd0
1003fde2:	jmp    0x1003fe1e
1003fde4:	cmp    BYTE PTR [esi],0x5c
1003fde7:	jne    0x1003fe1e
1003fde9:	lea    esp,[esp+0x0]
1003fdf0:	cmp    BYTE PTR [esi+0x1],0x51
1003fdf4:	jne    0x1003fe1e
1003fdf6:	add    esi,0x2
1003fdf9:	mov    DWORD PTR [esp+0x10],esi
1003fdfd:	cmp    BYTE PTR [esi],0x5c
1003fe00:	jne    0x1003fe16
1003fe02:	cmp    BYTE PTR [esi+0x1],0x45
1003fe06:	jne    0x1003fe16
1003fe08:	add    esi,0x2
1003fe0b:	mov    DWORD PTR [esp+0x10],esi
1003fe0f:	cmp    BYTE PTR [esi],0x5c
1003fe12:	je     0x1003fdf0
1003fe14:	jmp    0x1003fe1e
1003fe16:	mov    DWORD PTR [esp+0x50],0x1
1003fe1e:	mov    al,BYTE PTR [esi]
1003fe20:	test   al,al
1003fe22:	je     0x1003ff48
1003fe28:	cmp    DWORD PTR [esp+0x50],0x0
1003fe2d:	jne    0x1003fe37
1003fe2f:	cmp    al,0x5d
1003fe31:	je     0x1003ff48
1003fe37:	cmp    DWORD PTR [esp+0x50],0x0
1003fe3c:	movzx  ebx,al
1003fe3f:	jne    0x1003fe9d
1003fe41:	cmp    ebx,0x5c
1003fe44:	jne    0x1003fe9d
1003fe46:	mov    ecx,DWORD PTR [esp+0x18]
1003fe4a:	mov    edx,DWORD PTR [ecx+0x30]
1003fe4d:	mov    esi,DWORD PTR [esp+0x20]
1003fe51:	push   0x1
1003fe53:	push   edx
1003fe54:	lea    eax,[esp+0x18]
1003fe58:	push   esi
1003fe59:	push   eax
1003fe5a:	mov    eax,DWORD PTR [esp+0x44]
1003fe5e:	call   0x1003dd70
1003fe63:	add    esp,0x10
1003fe66:	cmp    DWORD PTR [esi],0x0
1003fe69:	mov    ebx,eax
1003fe6b:	jne    0x10040a69
1003fe71:	test   ebx,ebx
1003fe73:	jge    0x1003fe99
1003fe75:	cmp    ebx,0xfffffffb
1003fe78:	jne    0x1003fe7f
1003fe7a:	lea    ebx,[eax+0xd]
1003fe7d:	jmp    0x1003fe99
1003fe7f:	cmp    ebx,0xffffffea
1003fe82:	jne    0x1003fe8b
1003fe84:	mov    ebx,0x58
1003fe89:	jmp    0x1003fe99
1003fe8b:	cmp    ebx,0xffffffef
1003fe8e:	jne    0x1003ff48
1003fe94:	mov    ebx,0x52
1003fe99:	mov    esi,DWORD PTR [esp+0x10]
1003fe9d:	cmp    ebx,edi
1003fe9f:	jl     0x10041bda
1003fea5:	je     0x1003ff50
1003feab:	cmp    ebx,0xd
1003feae:	je     0x1003feb5
1003feb0:	cmp    ebx,0xa
1003feb3:	jne    0x1003febd
1003feb5:	mov    eax,DWORD PTR [esp+0x18]
1003feb9:	or     DWORD PTR [eax+0x44],0x20
1003febd:	mov    edx,DWORD PTR [esp+0x24]
1003fec1:	mov    ecx,ebx
1003fec3:	sub    ecx,edi
1003fec5:	cmp    DWORD PTR [esp+0x38],0x0
1003feca:	lea    eax,[edx+ecx*1+0x1]
1003fece:	mov    DWORD PTR [esp+0x24],eax
1003fed2:	mov    DWORD PTR [esp+0x28],ebx
1003fed6:	jne    0x1003fb07
1003fedc:	cmp    edi,ebx
1003fede:	jg     0x1003fb07
1003fee4:	mov    eax,DWORD PTR [esp+0x34]
1003fee8:	and    eax,0x1
1003feeb:	mov    DWORD PTR [esp+0x60],eax
1003feef:	nop
1003fef0:	mov    eax,edi
1003fef2:	cdq    
1003fef3:	and    edx,0x7
1003fef6:	add    eax,edx
1003fef8:	mov    ecx,edi
1003fefa:	and    ecx,0x7
1003fefd:	mov    dl,0x1
1003feff:	shl    dl,cl
1003ff01:	sar    eax,0x3
1003ff04:	lea    ebp,[esp+eax*1+0xbc]
1003ff0b:	or     BYTE PTR [ebp+0x0],dl
1003ff0e:	cmp    DWORD PTR [esp+0x60],0x0
1003ff13:	je     0x1003ff3c
1003ff15:	mov    eax,DWORD PTR [esp+0x18]
1003ff19:	mov    ecx,DWORD PTR [eax+0x4]
1003ff1c:	movzx  ecx,BYTE PTR [ecx+edi*1]
1003ff20:	mov    eax,ecx
1003ff22:	cdq    
1003ff23:	and    edx,0x7
1003ff26:	add    eax,edx
1003ff28:	and    ecx,0x7
1003ff2b:	mov    dl,0x1
1003ff2d:	sar    eax,0x3
1003ff30:	shl    dl,cl
1003ff32:	lea    ebp,[esp+eax*1+0xbc]
1003ff39:	or     BYTE PTR [ebp+0x0],dl
1003ff3c:	add    edi,0x1
1003ff3f:	cmp    edi,ebx
1003ff41:	jle    0x1003fef0
1003ff43:	jmp    0x1003fb07
1003ff48:	mov    esi,DWORD PTR [esp+0x58]
1003ff4c:	mov    DWORD PTR [esp+0x10],esi
1003ff50:	mov    eax,edi
1003ff52:	cdq    
1003ff53:	and    edx,0x7
1003ff56:	add    eax,edx
1003ff58:	mov    ecx,edi
1003ff5a:	and    ecx,0x7
1003ff5d:	mov    dl,0x1
1003ff5f:	shl    dl,cl
1003ff61:	sar    eax,0x3
1003ff64:	lea    eax,[esp+eax*1+0xbc]
1003ff6b:	or     BYTE PTR [eax],dl
1003ff6d:	test   BYTE PTR [esp+0x34],0x1
1003ff72:	je     0x1003ff9c
1003ff74:	mov    eax,DWORD PTR [esp+0x18]
1003ff78:	mov    ecx,DWORD PTR [eax+0x4]
1003ff7b:	movzx  edi,BYTE PTR [ecx+edi*1]
1003ff7f:	mov    eax,edi
1003ff81:	cdq    
1003ff82:	and    edx,0x7
1003ff85:	add    eax,edx
1003ff87:	mov    ecx,edi
1003ff89:	and    ecx,0x7
1003ff8c:	mov    dl,0x1
1003ff8e:	sar    eax,0x3
1003ff91:	shl    dl,cl
1003ff93:	lea    eax,[esp+eax*1+0xbc]
1003ff9a:	or     BYTE PTR [eax],dl
1003ff9c:	add    DWORD PTR [esp+0x24],0x1
1003ffa1:	mov    DWORD PTR [esp+0x28],edi
1003ffa5:	jmp    0x1003fb07
1003ffaa:	mov    al,BYTE PTR [esp+0x28]
1003ffae:	jmp    0x1003f4de
1003ffb3:	mov    eax,DWORD PTR [esp+0x30]
1003ffb7:	cmp    eax,0xfffffffe
1003ffba:	jne    0x1003ffc3
1003ffbc:	or     eax,0xffffffff
1003ffbf:	mov    DWORD PTR [esp+0x30],eax
1003ffc3:	mov    ebp,DWORD PTR [esp+0x14]
1003ffc7:	mov    edx,DWORD PTR [esp+0x4c]
1003ffcb:	mov    DWORD PTR [esp+0x5c],eax
1003ffcf:	mov    eax,DWORD PTR [esp+0x1c]
1003ffd3:	cmp    eax,DWORD PTR [esp+0x3c]
1003ffd7:	mov    DWORD PTR [esp+0x68],edx
1003ffdb:	setne  cl
1003ffde:	add    cl,0x4e
1003ffe1:	mov    BYTE PTR [ebp+0x0],cl
1003ffe4:	add    ebp,0x1
1003ffe7:	test   eax,eax
1003ffe9:	je     0x1004001d
1003ffeb:	cmp    DWORD PTR [esp+0x38],0x0
1003fff0:	jne    0x1004002d
1003fff2:	lea    ecx,[esp+0xbc]
1003fff9:	mov    eax,ebp
1003fffb:	sub    ecx,ebp
1003fffd:	mov    esi,0x20
10040002:	mov    dl,BYTE PTR [ecx+eax*1]
10040005:	not    dl
10040007:	mov    BYTE PTR [eax],dl
10040009:	add    eax,0x1
1004000c:	sub    esi,0x1
1004000f:	jne    0x10040002
10040011:	add    ebp,0x20
10040014:	mov    DWORD PTR [esp+0x14],ebp
10040018:	jmp    0x10041ae3
1004001d:	mov    ecx,0x8
10040022:	lea    esi,[esp+0xbc]
10040029:	mov    edi,ebp
1004002b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004002d:	add    ebp,0x20
10040030:	mov    DWORD PTR [esp+0x14],ebp
10040034:	jmp    0x10041ae3
10040039:	cmp    DWORD PTR [esp+0x28],0x0
1004003e:	je     0x1003f4dc
10040044:	mov    edi,DWORD PTR [esp+0x20]
10040048:	lea    eax,[esp+0x40]
1004004c:	push   eax
1004004d:	lea    ecx,[esp+0x4c]
10040051:	push   ecx
10040052:	lea    eax,[esi+0x1]
10040055:	call   0x1003e230
1004005a:	add    esp,0x8
1004005d:	cmp    DWORD PTR [edi],0x0
10040060:	mov    esi,eax
10040062:	mov    DWORD PTR [esp+0x10],esi
10040066:	jne    0x10040a6d
1004006c:	mov    eax,DWORD PTR [esp+0x48]
10040070:	jmp    0x10040099
10040072:	mov    DWORD PTR [esp+0x40],0xffffffff
1004007a:	jmp    0x10040093
1004007c:	mov    eax,0x1
10040081:	mov    DWORD PTR [esp+0x40],0xffffffff
10040089:	jmp    0x10040095
1004008b:	mov    DWORD PTR [esp+0x40],0x1
10040093:	xor    eax,eax
10040095:	mov    DWORD PTR [esp+0x48],eax
10040099:	xor    edx,edx
1004009b:	cmp    ebp,edx
1004009d:	je     0x10041bf8
100400a3:	cmp    eax,edx
100400a5:	jne    0x100400b7
100400a7:	mov    ecx,DWORD PTR [esp+0x5c]
100400ab:	mov    DWORD PTR [esp+0x30],ecx
100400af:	mov    ecx,DWORD PTR [esp+0x68]
100400b3:	mov    DWORD PTR [esp+0x4c],ecx
100400b7:	sub    eax,DWORD PTR [esp+0x40]
100400bb:	mov    ecx,ebp
100400bd:	neg    eax
100400bf:	sbb    eax,eax
100400c1:	and    eax,0x200
100400c6:	mov    DWORD PTR [esp+0x8c],eax
100400cd:	mov    DWORD PTR [esp+0x44],ecx
100400d1:	mov    al,BYTE PTR [esi+0x1]
100400d4:	cmp    al,0x2b
100400d6:	mov    DWORD PTR [esp+0x54],edx
100400da:	mov    DWORD PTR [esp+0x3c],edx
100400de:	jne    0x100400f3
100400e0:	mov    edx,0x1
100400e5:	xor    ebx,ebx
100400e7:	add    esi,edx
100400e9:	mov    DWORD PTR [esp+0x3c],edx
100400ed:	mov    DWORD PTR [esp+0x10],esi
100400f1:	jmp    0x1004010e
100400f3:	cmp    al,0x3f
100400f5:	jne    0x10040107
100400f7:	mov    ebx,DWORD PTR [esp+0xa0]
100400fe:	add    esi,0x1
10040101:	mov    DWORD PTR [esp+0x10],esi
10040105:	jmp    0x1004010e
10040107:	mov    ebx,DWORD PTR [esp+0xa4]
1004010e:	mov    al,BYTE PTR [ebp+0x0]
10040111:	cmp    al,0x1c
10040113:	je     0x1004069a
10040119:	cmp    al,0x1d
1004011b:	je     0x1004069a
10040121:	cmp    al,0x1e
10040123:	jne    0x1004015a
10040125:	test   edx,edx
10040127:	movzx  eax,BYTE PTR [ebp+0x1]
1004012b:	mov    DWORD PTR [esp+0x54],0xd
10040133:	mov    DWORD PTR [esp+0x1c],eax
10040137:	jne    0x100406fb
1004013d:	cmp    DWORD PTR [esp+0x40],edx
10040141:	jge    0x100406fb
10040147:	mov    ecx,DWORD PTR [esp+0x34]
1004014b:	push   ecx
1004014c:	add    esi,0x1
1004014f:	push   esi
10040150:	mov    edx,eax
10040152:	push   edx
10040153:	push   0x1e
10040155:	jmp    0x100406dd
1004015a:	cmp    al,0x17
1004015c:	jae    0x10040190
1004015e:	test   edx,edx
10040160:	movzx  eax,al
10040163:	mov    DWORD PTR [esp+0x54],0x1a
1004016b:	mov    DWORD PTR [esp+0x1c],eax
1004016f:	jne    0x100406fb
10040175:	cmp    DWORD PTR [esp+0x40],edx
10040179:	jge    0x100406fb
1004017f:	mov    ecx,DWORD PTR [esp+0x34]
10040183:	push   ecx
10040184:	add    esi,0x1
10040187:	push   esi
10040188:	push   edx
10040189:	mov    edx,eax
1004018b:	jmp    0x100406dc
10040190:	cmp    al,0x4e
10040192:	je     0x100405fc
10040198:	cmp    al,0x4f
1004019a:	je     0x100405fc
100401a0:	cmp    al,0x51
100401a2:	je     0x100405fc
100401a8:	cmp    al,0x5e
100401aa:	je     0x100401cf
100401ac:	cmp    al,0x5f
100401ae:	je     0x100401cf
100401b0:	cmp    al,0x5d
100401b2:	je     0x100401cf
100401b4:	cmp    al,0x60
100401b6:	je     0x100401cf
100401b8:	cmp    al,0x6d
100401ba:	je     0x1004099a
100401c0:	mov    eax,DWORD PTR [esp+0x20]
100401c4:	mov    DWORD PTR [eax],0xb
100401ca:	jmp    0x10040a6d
100401cf:	mov    edi,DWORD PTR [esp+0x14]
100401d3:	mov    edx,edi
100401d5:	sub    edx,ebp
100401d7:	cmp    al,0x60
100401d9:	mov    DWORD PTR [esp+0x28],0x0
100401e1:	mov    DWORD PTR [esp+0x1c],edx
100401e5:	mov    DWORD PTR [esp+0x24],0x0
100401ed:	jne    0x100401f9
100401ef:	cmp    BYTE PTR [ebp+0x3],0x66
100401f3:	je     0x10041c07
100401f9:	mov    edx,DWORD PTR [esp+0x40]
100401fd:	cmp    edx,0xffffffff
10040200:	jne    0x10040221
10040202:	mov    edi,ebp
10040204:	xor    eax,eax
10040206:	mov    ah,BYTE PTR [edi+0x1]
10040209:	mov    al,BYTE PTR [edi+0x2]
1004020c:	add    edi,eax
1004020e:	cmp    BYTE PTR [edi],0x55
10040211:	jne    0x10040204
10040213:	mov    eax,DWORD PTR [esp+0x14]
10040217:	sub    eax,edi
10040219:	mov    edi,DWORD PTR [esp+0x14]
1004021d:	mov    DWORD PTR [esp+0x28],eax
10040221:	mov    eax,DWORD PTR [esp+0x48]
10040225:	test   eax,eax
10040227:	jne    0x100402e6
1004022d:	cmp    edx,0x1
10040230:	mov    BYTE PTR [edi],al
10040232:	jg     0x1004027d
10040234:	mov    ecx,DWORD PTR [esp+0x64]
10040238:	mov    edx,DWORD PTR [esp+0x18]
1004023c:	push   ecx
1004023d:	push   edx
1004023e:	push   0x1
10040240:	push   ebp
10040241:	call   0x1003eb70
10040246:	mov    eax,DWORD PTR [esp+0x2c]
1004024a:	push   eax
1004024b:	lea    esi,[ebp+0x1]
1004024e:	push   ebp
1004024f:	push   esi
10040250:	call   0x10045880
10040255:	add    edi,0x1
10040258:	add    esp,0x1c
1004025b:	cmp    DWORD PTR [esp+0x40],0x0
10040260:	mov    DWORD PTR [esp+0x14],edi
10040264:	jne    0x1004026f
10040266:	mov    BYTE PTR [ebp+0x0],0x6f
1004026a:	jmp    0x10040996
1004026f:	mov    cl,bl
10040271:	add    cl,0x67
10040274:	mov    BYTE PTR [ebp+0x0],cl
10040277:	mov    DWORD PTR [esp+0x2c],esi
1004027b:	jmp    0x100402cc
1004027d:	mov    edx,DWORD PTR [esp+0x64]
10040281:	mov    eax,DWORD PTR [esp+0x18]
10040285:	push   edx
10040286:	push   eax
10040287:	push   0x4
10040289:	push   ebp
1004028a:	call   0x1003eb70
1004028f:	mov    ecx,DWORD PTR [esp+0x2c]
10040293:	push   ecx
10040294:	lea    edx,[ebp+0x4]
10040297:	push   ebp
10040298:	push   edx
10040299:	call   0x10045880
1004029e:	mov    al,bl
100402a0:	add    al,0x67
100402a2:	mov    BYTE PTR [ebp+0x0],al
100402a5:	add    ebp,0x1
100402a8:	mov    BYTE PTR [ebp+0x0],0x5e
100402ac:	add    ebp,0x1
100402af:	add    edi,0x4
100402b2:	add    esp,0x1c
100402b5:	mov    DWORD PTR [esp+0x24],ebp
100402b9:	mov    BYTE PTR [ebp+0x0],0x0
100402bd:	mov    BYTE PTR [ebp+0x1],0x0
100402c1:	add    ebp,0x2
100402c4:	mov    DWORD PTR [esp+0x14],edi
100402c8:	mov    DWORD PTR [esp+0x2c],ebp
100402cc:	sub    DWORD PTR [esp+0x40],0x1
100402d1:	mov    esi,DWORD PTR [esp+0x10]
100402d5:	mov    ecx,DWORD PTR [esp+0x44]
100402d9:	mov    edx,DWORD PTR [esp+0x40]
100402dd:	mov    edi,DWORD PTR [esp+0x38]
100402e1:	jmp    0x100403fb
100402e6:	cmp    eax,0x1
100402e9:	mov    edi,DWORD PTR [esp+0x38]
100402ed:	jle    0x100403eb
100402f3:	test   edi,edi
100402f5:	je     0x1004033c
100402f7:	mov    eax,DWORD PTR [esp+0x48]
100402fb:	add    eax,0xffffffff
100402fe:	mov    DWORD PTR [esp+0x60],eax
10040302:	imul   eax,DWORD PTR [esp+0x6c]
10040307:	fild   DWORD PTR [esp+0x60]
1004030b:	fimul  DWORD PTR [esp+0x6c]
1004030f:	mov    edx,eax
10040311:	fcomp  QWORD PTR ds:0x100758d0
10040317:	fnstsw ax
10040319:	test   ah,0x41
1004031c:	je     0x10041c16
10040322:	mov    eax,DWORD PTR [edi]
10040324:	mov    ebp,0x7fffffeb
10040329:	sub    ebp,eax
1004032b:	cmp    ebp,edx
1004032d:	jl     0x10041c16
10040333:	add    eax,edx
10040335:	mov    DWORD PTR [edi],eax
10040337:	jmp    0x100403eb
1004033c:	cmp    DWORD PTR [esp+0x88],0x0
10040344:	je     0x10040355
10040346:	cmp    DWORD PTR [esp+0x4c],0x0
1004034b:	jge    0x10040355
1004034d:	mov    edx,DWORD PTR [esp+0x30]
10040351:	mov    DWORD PTR [esp+0x4c],edx
10040355:	cmp    DWORD PTR [esp+0x48],0x1
1004035a:	jle    0x100403eb
10040360:	mov    eax,DWORD PTR [esp+0x48]
10040364:	add    eax,0xffffffff
10040367:	mov    DWORD PTR [esp+0x58],eax
1004036b:	jmp    0x10040370
1004036d:	lea    ecx,[ecx+0x0]
10040370:	mov    edx,DWORD PTR [esp+0x1c]
10040374:	mov    eax,DWORD PTR [esp+0x14]
10040378:	mov    ecx,DWORD PTR [esp+0x18]
1004037c:	mov    edi,DWORD PTR [ecx+0x20]
1004037f:	push   edx
10040380:	push   ebp
10040381:	push   eax
10040382:	call   0x10045340
10040387:	mov    esi,DWORD PTR [esp+0x70]
1004038b:	mov    eax,DWORD PTR [esp+0x28]
1004038f:	add    esp,0xc
10040392:	cmp    esi,edi
10040394:	jae    0x100403d0
10040396:	mov    ecx,DWORD PTR [esp+0x18]
1004039a:	lea    ebx,[ebx+0x0]
100403a0:	mov    ecx,DWORD PTR [ecx+0x20]
100403a3:	xor    edx,edx
100403a5:	mov    dh,BYTE PTR [esi]
100403a7:	add    esi,0x2
100403aa:	mov    dl,BYTE PTR [esi-0x1]
100403ad:	add    edx,eax
100403af:	sar    edx,0x8
100403b2:	mov    BYTE PTR [ecx],dl
100403b4:	movzx  edx,BYTE PTR [esi-0x1]
100403b8:	mov    ecx,DWORD PTR [esp+0x18]
100403bc:	mov    ecx,DWORD PTR [ecx+0x20]
100403bf:	add    dl,al
100403c1:	mov    BYTE PTR [ecx+0x1],dl
100403c4:	mov    ecx,DWORD PTR [esp+0x18]
100403c8:	add    DWORD PTR [ecx+0x20],0x2
100403cc:	cmp    esi,edi
100403ce:	jb     0x100403a0
100403d0:	add    DWORD PTR [esp+0x14],eax
100403d4:	sub    DWORD PTR [esp+0x58],0x1
100403d9:	mov    DWORD PTR [esp+0x64],edi
100403dd:	jne    0x10040370
100403df:	mov    esi,DWORD PTR [esp+0x10]
100403e3:	mov    ecx,DWORD PTR [esp+0x44]
100403e7:	mov    edi,DWORD PTR [esp+0x38]
100403eb:	mov    edx,DWORD PTR [esp+0x40]
100403ef:	test   edx,edx
100403f1:	jle    0x100403fd
100403f3:	sub    edx,DWORD PTR [esp+0x48]
100403f7:	mov    DWORD PTR [esp+0x40],edx
100403fb:	test   edx,edx
100403fd:	jl     0x100405a0
10040403:	test   edi,edi
10040405:	je     0x10040451
10040407:	test   edx,edx
10040409:	jle    0x10040451
1004040b:	mov    eax,DWORD PTR [esp+0x6c]
1004040f:	add    eax,0x7
10040412:	mov    DWORD PTR [esp+0x60],eax
10040416:	imul   eax,edx
10040419:	fild   DWORD PTR [esp+0x60]
1004041d:	fimul  DWORD PTR [esp+0x40]
10040421:	sub    eax,0x6
10040424:	mov    edx,eax
10040426:	fcomp  QWORD PTR ds:0x100758d0
1004042c:	fnstsw ax
1004042e:	test   ah,0x41
10040431:	je     0x10041b18
10040437:	mov    eax,DWORD PTR [edi]
10040439:	mov    ebx,0x7fffffeb
1004043e:	sub    ebx,eax
10040440:	cmp    ebx,edx
10040442:	jl     0x10041b18
10040448:	add    eax,edx
1004044a:	mov    DWORD PTR [edi],eax
1004044c:	jmp    0x10040545
10040451:	add    edx,0xffffffff
10040454:	mov    DWORD PTR [esp+0x28],edx
10040458:	js     0x10040545
1004045e:	mov    esi,DWORD PTR [esp+0x14]
10040462:	mov    edi,DWORD PTR [esp+0x18]
10040466:	add    bl,0x67
10040469:	mov    BYTE PTR [esp+0x73],bl
1004046d:	jmp    0x10040474
1004046f:	nop
10040470:	mov    bl,BYTE PTR [esp+0x73]
10040474:	mov    ebp,DWORD PTR [edi+0x20]
10040477:	mov    BYTE PTR [esi],bl
10040479:	add    esi,0x1
1004047c:	cmp    DWORD PTR [esp+0x28],0x0
10040481:	mov    DWORD PTR [esp+0x60],ebp
10040485:	mov    DWORD PTR [esp+0x14],esi
10040489:	je     0x100404b6
1004048b:	mov    ecx,DWORD PTR [esp+0x24]
1004048f:	mov    BYTE PTR [esi],0x5e
10040492:	add    esi,0x1
10040495:	test   ecx,ecx
10040497:	jne    0x1004049d
10040499:	xor    eax,eax
1004049b:	jmp    0x100404a1
1004049d:	mov    eax,esi
1004049f:	sub    eax,ecx
100404a1:	mov    edx,eax
100404a3:	sar    edx,0x8
100404a6:	mov    DWORD PTR [esp+0x24],esi
100404aa:	mov    BYTE PTR [esi],dl
100404ac:	mov    BYTE PTR [esi+0x1],al
100404af:	add    esi,0x2
100404b2:	mov    DWORD PTR [esp+0x14],esi
100404b6:	mov    ebx,DWORD PTR [esp+0x1c]
100404ba:	mov    eax,DWORD PTR [esp+0x2c]
100404be:	push   ebx
100404bf:	push   eax
100404c0:	push   esi
100404c1:	call   0x10045340
100404c6:	mov    eax,DWORD PTR [esp+0x70]
100404ca:	add    esp,0xc
100404cd:	cmp    eax,ebp
100404cf:	jae    0x10040528
100404d1:	mov    ecx,DWORD PTR [esp+0x28]
100404d5:	mov    esi,ecx
100404d7:	neg    esi
100404d9:	sbb    esi,esi
100404db:	and    esi,0x3
100404de:	add    esi,0x1
100404e1:	neg    ecx
100404e3:	sbb    cl,cl
100404e5:	and    cl,0x3
100404e8:	add    cl,0x1
100404eb:	jmp    0x100404f0
100404ed:	lea    ecx,[ecx+0x0]
100404f0:	xor    edx,edx
100404f2:	mov    dh,BYTE PTR [eax]
100404f4:	add    eax,0x2
100404f7:	mov    dl,BYTE PTR [eax-0x1]
100404fa:	add    edx,esi
100404fc:	add    edx,ebx
100404fe:	mov    ebx,DWORD PTR [edi+0x20]
10040501:	sar    edx,0x8
10040504:	mov    BYTE PTR [ebx],dl
10040506:	movzx  edx,BYTE PTR [eax-0x1]
1004050a:	mov    ebx,DWORD PTR [esp+0x1c]
1004050e:	mov    ebp,DWORD PTR [edi+0x20]
10040511:	add    dl,cl
10040513:	add    dl,bl
10040515:	mov    BYTE PTR [ebp+0x1],dl
10040518:	mov    ebp,DWORD PTR [esp+0x60]
1004051c:	add    DWORD PTR [edi+0x20],0x2
10040520:	cmp    eax,ebp
10040522:	jb     0x100404f0
10040524:	mov    esi,DWORD PTR [esp+0x14]
10040528:	add    esi,ebx
1004052a:	sub    DWORD PTR [esp+0x28],0x1
1004052f:	mov    DWORD PTR [esp+0x64],ebp
10040533:	mov    DWORD PTR [esp+0x14],esi
10040537:	jns    0x10040470
1004053d:	mov    esi,DWORD PTR [esp+0x10]
10040541:	mov    ecx,DWORD PTR [esp+0x44]
10040545:	xor    edi,edi
10040547:	cmp    DWORD PTR [esp+0x24],edi
1004054b:	je     0x100408a3
10040551:	mov    esi,DWORD PTR [esp+0x14]
10040555:	mov    eax,esi
10040557:	sub    eax,DWORD PTR [esp+0x24]
1004055b:	mov    ecx,esi
1004055d:	add    eax,0x1
10040560:	sub    ecx,eax
10040562:	xor    edx,edx
10040564:	mov    dh,BYTE PTR [ecx+0x1]
10040567:	mov    dl,BYTE PTR [ecx+0x2]
1004056a:	cmp    edx,edi
1004056c:	jne    0x10040574
1004056e:	mov    DWORD PTR [esp+0x24],edi
10040572:	jmp    0x10040578
10040574:	sub    DWORD PTR [esp+0x24],edx
10040578:	mov    BYTE PTR [esi],0x55
1004057b:	add    esi,0x1
1004057e:	mov    edx,eax
10040580:	sar    edx,0x8
10040583:	mov    BYTE PTR [esi],dl
10040585:	mov    BYTE PTR [esi+0x1],al
10040588:	add    esi,0x2
1004058b:	cmp    DWORD PTR [esp+0x24],edi
1004058f:	mov    BYTE PTR [ecx+0x1],dl
10040592:	mov    BYTE PTR [ecx+0x2],al
10040595:	jne    0x10040555
10040597:	mov    DWORD PTR [esp+0x14],esi
1004059b:	jmp    0x1004089b
100405a0:	mov    esi,DWORD PTR [esp+0x14]
100405a4:	sub    esi,DWORD PTR [esp+0x28]
100405a8:	xor    eax,eax
100405aa:	mov    ah,BYTE PTR [esi+0x1]
100405ad:	mov    edi,esi
100405af:	add    bl,0x56
100405b2:	mov    BYTE PTR [esi],bl
100405b4:	mov    al,BYTE PTR [esi+0x2]
100405b7:	sub    edi,eax
100405b9:	cmp    DWORD PTR [esp+0x38],0x0
100405be:	jne    0x1004089b
100405c4:	cmp    BYTE PTR [edi],0x5d
100405c7:	je     0x1004089b
100405cd:	mov    ebx,edi
100405cf:	nop
100405d0:	push   0x0
100405d2:	push   esi
100405d3:	push   ebx
100405d4:	call   0x1003e8f0
100405d9:	add    esp,0xc
100405dc:	test   eax,eax
100405de:	jne    0x100405f4
100405e0:	xor    ecx,ecx
100405e2:	mov    ch,BYTE PTR [ebx+0x1]
100405e5:	mov    cl,BYTE PTR [ebx+0x2]
100405e8:	add    ebx,ecx
100405ea:	cmp    BYTE PTR [ebx],0x54
100405ed:	je     0x100405d0
100405ef:	jmp    0x1004089b
100405f4:	add    BYTE PTR [edi],0x3
100405f7:	jmp    0x1004089b
100405fc:	mov    eax,DWORD PTR [esp+0x40]
10040600:	test   eax,eax
10040602:	jne    0x1004060d
10040604:	mov    DWORD PTR [esp+0x14],ebp
10040608:	jmp    0x1004099a
1004060d:	cmp    eax,0x1
10040610:	je     0x1004061a
10040612:	mov    ecx,DWORD PTR [esp+0x18]
10040616:	or     DWORD PTR [ecx+0x44],0x1
1004061a:	mov    ecx,DWORD PTR [esp+0x48]
1004061e:	test   ecx,ecx
10040620:	jne    0x10040635
10040622:	cmp    eax,0xffffffff
10040625:	jne    0x1004064d
10040627:	mov    eax,DWORD PTR [esp+0x14]
1004062b:	add    bl,0x46
1004062e:	mov    BYTE PTR [eax],bl
10040630:	jmp    0x10040894
10040635:	cmp    ecx,0x1
10040638:	jne    0x10040660
1004063a:	cmp    eax,0xffffffff
1004063d:	jne    0x10040660
1004063f:	mov    eax,DWORD PTR [esp+0x14]
10040643:	add    bl,0x48
10040646:	mov    BYTE PTR [eax],bl
10040648:	jmp    0x10040894
1004064d:	cmp    eax,0x1
10040650:	jne    0x10040660
10040652:	mov    eax,DWORD PTR [esp+0x14]
10040656:	add    bl,0x4a
10040659:	mov    BYTE PTR [eax],bl
1004065b:	jmp    0x10040894
10040660:	mov    esi,DWORD PTR [esp+0x14]
10040664:	add    bl,0x4c
10040667:	mov    BYTE PTR [esi],bl
10040669:	add    esi,0x1
1004066c:	mov    edx,ecx
1004066e:	sar    edx,0x8
10040671:	mov    BYTE PTR [esi],dl
10040673:	mov    BYTE PTR [esi+0x1],cl
10040676:	add    esi,0x2
10040679:	cmp    eax,0xffffffff
1004067c:	jne    0x10040684
1004067e:	xor    eax,eax
10040680:	mov    DWORD PTR [esp+0x40],eax
10040684:	mov    ecx,eax
10040686:	sar    ecx,0x8
10040689:	mov    BYTE PTR [esi],cl
1004068b:	mov    BYTE PTR [esi+0x1],al
1004068e:	add    esi,0x2
10040691:	mov    DWORD PTR [esp+0x14],esi
10040695:	jmp    0x1004089b
1004069a:	cmp    DWORD PTR [esp+0x48],0x1
1004069f:	mov    ecx,DWORD PTR [esp+0x14]
100406a3:	movzx  edi,BYTE PTR [ecx-0x1]
100406a7:	mov    DWORD PTR [esp+0x1c],edi
100406ab:	jle    0x100406c1
100406ad:	mov    ecx,DWORD PTR [esp+0x18]
100406b1:	mov    ecx,DWORD PTR [ecx+0x48]
100406b4:	or     ecx,edi
100406b6:	or     ecx,DWORD PTR [esp+0x84]
100406bd:	mov    DWORD PTR [esp+0x4c],ecx
100406c1:	test   edx,edx
100406c3:	jne    0x100406fb
100406c5:	cmp    DWORD PTR [esp+0x40],edx
100406c9:	jge    0x100406fb
100406cb:	mov    edx,DWORD PTR [esp+0x34]
100406cf:	mov    ecx,DWORD PTR [esp+0x1c]
100406d3:	push   edx
100406d4:	add    esi,0x1
100406d7:	push   esi
100406d8:	push   ecx
100406d9:	movzx  edx,al
100406dc:	push   edx
100406dd:	mov    esi,DWORD PTR [esp+0x28]
100406e1:	call   0x1003ec10
100406e6:	add    esp,0x10
100406e9:	test   eax,eax
100406eb:	je     0x100406f7
100406ed:	mov    DWORD PTR [esp+0x3c],0x1
100406f5:	xor    ebx,ebx
100406f7:	mov    esi,DWORD PTR [esp+0x10]
100406fb:	mov    al,BYTE PTR [ebp+0x0]
100406fe:	cmp    al,0x10
10040700:	je     0x1004070f
10040702:	cmp    al,0xf
10040704:	je     0x1004070f
10040706:	or     eax,0xffffffff
10040709:	mov    DWORD PTR [esp+0x24],eax
1004070d:	jmp    0x1004071b
1004070f:	movzx  ecx,BYTE PTR [ebp+0x2]
10040713:	movzx  eax,BYTE PTR [ebp+0x1]
10040717:	mov    DWORD PTR [esp+0x24],ecx
1004071b:	mov    edi,DWORD PTR [esp+0x14]
1004071f:	mov    DWORD PTR [esp+0x28],eax
10040723:	mov    eax,DWORD PTR [esp+0x40]
10040727:	test   eax,eax
10040729:	mov    DWORD PTR [esp+0x14],ebp
1004072d:	je     0x1004099a
10040733:	cmp    eax,0x1
10040736:	je     0x10040740
10040738:	mov    ecx,DWORD PTR [esp+0x18]
1004073c:	or     DWORD PTR [ecx+0x44],0x1
10040740:	mov    ecx,DWORD PTR [esp+0x54]
10040744:	add    ebx,ecx
10040746:	cmp    DWORD PTR [esp+0x48],0x0
1004074b:	jne    0x1004079a
1004074d:	cmp    eax,0xffffffff
10040750:	jne    0x10040764
10040752:	add    bl,0x1f
10040755:	mov    BYTE PTR [ebp+0x0],bl
10040758:	add    ebp,0x1
1004075b:	mov    DWORD PTR [esp+0x14],ebp
1004075f:	jmp    0x1004088a
10040764:	cmp    eax,0x1
10040767:	jne    0x1004077b
10040769:	add    bl,0x23
1004076c:	mov    BYTE PTR [ebp+0x0],bl
1004076f:	add    ebp,0x1
10040772:	mov    DWORD PTR [esp+0x14],ebp
10040776:	jmp    0x1004088a
1004077b:	add    bl,0x25
1004077e:	lea    ecx,[ebp+0x1]
10040781:	mov    edx,eax
10040783:	sar    edx,0x8
10040786:	mov    BYTE PTR [ebp+0x0],bl
10040789:	mov    BYTE PTR [ecx],dl
1004078b:	mov    BYTE PTR [ecx+0x1],al
1004078e:	add    ecx,0x2
10040791:	mov    DWORD PTR [esp+0x14],ecx
10040795:	jmp    0x1004088a
1004079a:	cmp    DWORD PTR [esp+0x48],0x1
1004079f:	jne    0x100407e6
100407a1:	cmp    eax,0xffffffff
100407a4:	jne    0x100407b8
100407a6:	add    bl,0x21
100407a9:	mov    BYTE PTR [ebp+0x0],bl
100407ac:	add    ebp,0x1
100407af:	mov    DWORD PTR [esp+0x14],ebp
100407b3:	jmp    0x1004088a
100407b8:	cmp    eax,0x1
100407bb:	mov    DWORD PTR [esp+0x14],edi
100407bf:	je     0x1004099a
100407c5:	lea    edx,[eax-0x1]
100407c8:	add    bl,0x25
100407cb:	lea    ecx,[edi+0x1]
100407ce:	sar    edx,0x8
100407d1:	sub    al,0x1
100407d3:	mov    BYTE PTR [edi],bl
100407d5:	mov    BYTE PTR [ecx],dl
100407d7:	mov    BYTE PTR [ecx+0x1],al
100407da:	add    ecx,0x2
100407dd:	mov    DWORD PTR [esp+0x14],ecx
100407e1:	jmp    0x1004088a
100407e6:	add    cl,0x27
100407e9:	mov    BYTE PTR [ebp+0x0],cl
100407ec:	mov    ecx,DWORD PTR [esp+0x48]
100407f0:	lea    esi,[ebp+0x1]
100407f3:	mov    edx,ecx
100407f5:	sar    edx,0x8
100407f8:	mov    BYTE PTR [esi],dl
100407fa:	mov    BYTE PTR [esi+0x1],cl
100407fd:	add    esi,0x2
10040800:	test   eax,eax
10040802:	mov    DWORD PTR [esp+0x14],esi
10040806:	jge    0x10040831
10040808:	mov    al,BYTE PTR [esp+0x1c]
1004080c:	mov    BYTE PTR [esi],al
1004080e:	mov    eax,DWORD PTR [esp+0x28]
10040812:	add    esi,0x1
10040815:	test   eax,eax
10040817:	jl     0x10040827
10040819:	mov    cl,BYTE PTR [esp+0x24]
1004081d:	mov    BYTE PTR [esi],al
1004081f:	add    esi,0x1
10040822:	mov    BYTE PTR [esi],cl
10040824:	add    esi,0x1
10040827:	add    bl,0x1f
1004082a:	mov    BYTE PTR [esi],bl
1004082c:	add    esi,0x1
1004082f:	jmp    0x10040886
10040831:	cmp    eax,ecx
10040833:	je     0x1004088a
10040835:	mov    esi,DWORD PTR [esp+0x14]
10040839:	mov    dl,BYTE PTR [esp+0x1c]
1004083d:	mov    BYTE PTR [esi],dl
1004083f:	add    esi,0x1
10040842:	cmp    DWORD PTR [esp+0x28],0x0
10040847:	jl     0x1004085d
10040849:	movzx  edx,BYTE PTR [esp+0x28]
1004084e:	mov    BYTE PTR [esi],dl
10040850:	movzx  edx,BYTE PTR [esp+0x24]
10040855:	add    esi,0x1
10040858:	mov    BYTE PTR [esi],dl
1004085a:	add    esi,0x1
1004085d:	sub    eax,ecx
1004085f:	cmp    eax,0x1
10040862:	mov    DWORD PTR [esp+0x40],eax
10040866:	jne    0x10040871
10040868:	add    bl,0x23
1004086b:	mov    BYTE PTR [esi],bl
1004086d:	add    esi,eax
1004086f:	jmp    0x10040886
10040871:	add    bl,0x25
10040874:	mov    BYTE PTR [esi],bl
10040876:	add    esi,0x1
10040879:	mov    ecx,eax
1004087b:	sar    ecx,0x8
1004087e:	mov    BYTE PTR [esi],cl
10040880:	mov    BYTE PTR [esi+0x1],al
10040883:	add    esi,0x2
10040886:	mov    DWORD PTR [esp+0x14],esi
1004088a:	mov    dl,BYTE PTR [esp+0x1c]
1004088e:	mov    eax,DWORD PTR [esp+0x14]
10040892:	mov    BYTE PTR [eax],dl
10040894:	add    eax,0x1
10040897:	mov    DWORD PTR [esp+0x14],eax
1004089b:	mov    ecx,DWORD PTR [esp+0x44]
1004089f:	mov    esi,DWORD PTR [esp+0x10]
100408a3:	cmp    DWORD PTR [esp+0x3c],0x0
100408a8:	je     0x1004099a
100408ae:	mov    al,BYTE PTR [ecx]
100408b0:	cmp    al,0x27
100408b2:	je     0x100408bc
100408b4:	cmp    al,0x41
100408b6:	je     0x100408c0
100408b8:	cmp    al,0x34
100408ba:	jne    0x100408e8
100408bc:	cmp    al,0x41
100408be:	jne    0x100408d4
100408c0:	mov    dl,BYTE PTR [ecx+0x3]
100408c3:	cmp    dl,0x10
100408c6:	je     0x100408cd
100408c8:	cmp    dl,0xf
100408cb:	jne    0x100408d4
100408cd:	mov    edx,0x2
100408d2:	jmp    0x100408d6
100408d4:	xor    edx,edx
100408d6:	movzx  eax,al
100408d9:	movzx  eax,BYTE PTR [eax+0x1006fa18]
100408e0:	add    eax,edx
100408e2:	add    ecx,eax
100408e4:	mov    DWORD PTR [esp+0x44],ecx
100408e8:	mov    ebx,DWORD PTR [esp+0x14]
100408ec:	sub    ebx,ecx
100408ee:	test   ebx,ebx
100408f0:	jle    0x1004099a
100408f6:	movzx  eax,BYTE PTR [ecx]
100408f9:	add    eax,0xffffffe1
100408fc:	cmp    eax,0x20
100408ff:	ja     0x10040951
10040901:	movzx  edx,BYTE PTR [eax+0x10041eac]
10040908:	jmp    DWORD PTR [edx*4+0x10041e78]
1004090f:	mov    BYTE PTR [ecx],0x28
10040912:	jmp    0x10040996
10040917:	mov    BYTE PTR [ecx],0x29
1004091a:	jmp    0x10040996
1004091f:	mov    BYTE PTR [ecx],0x2a
10040922:	jmp    0x10040996
10040924:	mov    BYTE PTR [ecx],0x2b
10040927:	jmp    0x10040996
10040929:	mov    BYTE PTR [ecx],0x42
1004092c:	jmp    0x10040996
1004092e:	mov    BYTE PTR [ecx],0x43
10040931:	jmp    0x10040996
10040933:	mov    BYTE PTR [ecx],0x44
10040936:	jmp    0x10040996
10040938:	mov    BYTE PTR [ecx],0x45
1004093b:	jmp    0x10040996
1004093d:	mov    BYTE PTR [ecx],0x35
10040940:	jmp    0x10040996
10040942:	mov    BYTE PTR [ecx],0x36
10040945:	jmp    0x10040996
10040947:	mov    BYTE PTR [ecx],0x37
1004094a:	jmp    0x10040996
1004094c:	mov    BYTE PTR [ecx],0x38
1004094f:	jmp    0x10040996
10040951:	push   ebx
10040952:	push   ecx
10040953:	add    ecx,0x3
10040956:	push   ecx
10040957:	call   0x10045880
1004095c:	mov    ecx,DWORD PTR [esp+0x50]
10040960:	mov    eax,DWORD PTR [esp+0x20]
10040964:	mov    BYTE PTR [ecx],0x5d
10040967:	mov    BYTE PTR [eax+0x3],0x55
1004096b:	add    ebx,0x3
1004096e:	add    eax,0x3
10040971:	add    eax,0x1
10040974:	mov    ecx,ebx
10040976:	sar    ecx,0x8
10040979:	mov    BYTE PTR [eax],cl
1004097b:	mov    BYTE PTR [eax+0x1],bl
1004097e:	mov    edx,DWORD PTR [esp+0x50]
10040982:	add    esp,0xc
10040985:	add    eax,0x2
10040988:	mov    BYTE PTR [edx+0x1],cl
1004098b:	mov    DWORD PTR [esp+0x14],eax
1004098f:	mov    eax,DWORD PTR [esp+0x44]
10040993:	mov    BYTE PTR [eax+0x2],bl
10040996:	mov    esi,DWORD PTR [esp+0x10]
1004099a:	mov    eax,DWORD PTR [esp+0x18]
1004099e:	mov    ecx,DWORD PTR [esp+0x8c]
100409a5:	or     DWORD PTR [eax+0x48],ecx
100409a8:	mov    DWORD PTR [esp+0x2c],0x0
100409b0:	jmp    0x10041ae7
100409b5:	mov    edi,DWORD PTR [esp+0x18]
100409b9:	mov    eax,DWORD PTR [edi+0x20]
100409bc:	mov    edx,DWORD PTR [esp+0x34]
100409c0:	mov    ebx,0x1
100409c5:	add    esi,ebx
100409c7:	xor    ebp,ebp
100409c9:	mov    DWORD PTR [esp+0x64],eax
100409cd:	mov    DWORD PTR [esp+0x10],esi
100409d1:	mov    al,BYTE PTR [esi]
100409d3:	cmp    al,0x2a
100409d5:	mov    DWORD PTR [esp+0x60],edx
100409d9:	mov    DWORD PTR [esp+0x28],ebp
100409dd:	mov    DWORD PTR [esp+0x24],0x5f
100409e5:	mov    DWORD PTR [esp+0x58],ebp
100409e9:	jne    0x10040ac0
100409ef:	movzx  ebp,BYTE PTR [esi+0x1]
100409f3:	mov    ecx,DWORD PTR [edi+0xc]
100409f6:	test   BYTE PTR [ecx+ebp*1],0x2
100409fa:	je     0x10040abe
10040a00:	add    esi,0x1
10040a03:	xor    edi,edi
10040a05:	mov    ebx,0x1006fb20
10040a0a:	mov    ebp,esi
10040a0c:	mov    DWORD PTR [esp+0x2c],edi
10040a10:	add    esi,0x1
10040a13:	mov    DWORD PTR [esp+0x10],esi
10040a17:	movzx  edx,BYTE PTR [esi]
10040a1a:	test   BYTE PTR [edx+ecx*1],0x2
10040a1e:	jne    0x10040a10
10040a20:	mov    al,BYTE PTR [esi]
10040a22:	cmp    al,0x3a
10040a24:	je     0x10041c25
10040a2a:	cmp    al,0x29
10040a2c:	jne    0x10041c34
10040a32:	sub    esi,ebp
10040a34:	cmp    esi,DWORD PTR [edi*8+0x1006fb48]
10040a3b:	jne    0x10040a4c
10040a3d:	push   esi
10040a3e:	push   ebx
10040a3f:	push   ebp
10040a40:	call   0x1004f416
10040a45:	add    esp,0xc
10040a48:	test   eax,eax
10040a4a:	je     0x10040a91
10040a4c:	mov    eax,DWORD PTR [edi*8+0x1006fb48]
10040a53:	add    edi,0x1
10040a56:	cmp    edi,0x7
10040a59:	lea    ebx,[ebx+eax*1+0x1]
10040a5d:	jl     0x10040a34
10040a5f:	mov    eax,DWORD PTR [esp+0x20]
10040a63:	mov    DWORD PTR [eax],0x3c
10040a69:	mov    esi,DWORD PTR [esp+0x10]
10040a6d:	mov    edx,DWORD PTR [esp+0x9c]
10040a74:	mov    DWORD PTR [edx],esi
10040a76:	xor    eax,eax
10040a78:	mov    ecx,DWORD PTR [esp+0xfc]
10040a7f:	pop    edi
10040a80:	pop    esi
10040a81:	pop    ebp
10040a82:	pop    ebx
10040a83:	xor    ecx,esp
10040a85:	call   0x10043615
10040a8a:	add    esp,0xf0
10040a90:	ret    
10040a91:	mov    ecx,DWORD PTR [esp+0x14]
10040a95:	mov    al,BYTE PTR [edi*8+0x1006fb4c]
10040a9c:	mov    BYTE PTR [ecx],al
10040a9e:	add    ecx,0x1
10040aa1:	cmp    al,0x6e
10040aa3:	mov    DWORD PTR [esp+0x14],ecx
10040aa7:	jne    0x10040ab4
10040aa9:	mov    ecx,DWORD PTR [esp+0x18]
10040aad:	mov    DWORD PTR [ecx+0x4c],0x1
10040ab4:	cmp    edi,0x7
10040ab7:	jge    0x10040a5f
10040ab9:	jmp    0x10041ae3
10040abe:	xor    ebp,ebp
10040ac0:	cmp    al,0x3f
10040ac2:	jne    0x100411ac
10040ac8:	add    esi,ebx
10040aca:	mov    DWORD PTR [esp+0x10],esi
10040ace:	mov    al,BYTE PTR [esi]
10040ad0:	movzx  ecx,al
10040ad3:	add    ecx,0xffffffdf
10040ad6:	cmp    ecx,0x5b
10040ad9:	ja     0x100413fb
10040adf:	movzx  edx,BYTE PTR [ecx+0x10041f0c]
10040ae6:	jmp    DWORD PTR [edx*4+0x10041ed0]
10040aed:	add    esi,ebx
10040aef:	mov    DWORD PTR [esp+0x10],esi
10040af3:	mov    al,BYTE PTR [esi]
10040af5:	test   al,al
10040af7:	je     0x10040b10
10040af9:	lea    esp,[esp+0x0]
10040b00:	cmp    al,0x29
10040b02:	je     0x10040b1f
10040b04:	add    esi,ebx
10040b06:	mov    DWORD PTR [esp+0x10],esi
10040b0a:	mov    al,BYTE PTR [esi]
10040b0c:	test   al,al
10040b0e:	jne    0x10040b00
10040b10:	mov    ecx,DWORD PTR [esp+0x20]
10040b14:	mov    DWORD PTR [ecx],0x12
10040b1a:	jmp    0x10040a6d
10040b1f:	cmp    BYTE PTR [esi],0x0
10040b22:	je     0x10040b10
10040b24:	jmp    0x10041ae7
10040b29:	mov    DWORD PTR [esp+0x58],ebx
10040b2d:	add    esi,ebx
10040b2f:	jmp    0x10041531
10040b34:	cmp    BYTE PTR [esi+0x1],0x3f
10040b38:	mov    DWORD PTR [esp+0x24],0x60
10040b40:	jne    0x10040b5d
10040b42:	mov    al,BYTE PTR [esi+0x2]
10040b45:	cmp    al,0x3d
10040b47:	je     0x1004153d
10040b4d:	cmp    al,0x21
10040b4f:	je     0x1004153d
10040b55:	cmp    al,0x3c
10040b57:	je     0x1004153d
10040b5d:	mov    edx,DWORD PTR [esp+0x14]
10040b61:	mov    BYTE PTR [edx+0x3],0x64
10040b65:	mov    esi,DWORD PTR [esp+0x10]
10040b69:	mov    al,BYTE PTR [esi+0x1]
10040b6c:	or     ebp,0xffffffff
10040b6f:	cmp    al,0x52
10040b71:	mov    DWORD PTR [esp+0x28],0x3
10040b79:	mov    ebx,ebp
10040b7b:	jne    0x10040b98
10040b7d:	cmp    BYTE PTR [esi+0x2],0x26
10040b81:	lea    ecx,[esi+0x2]
10040b84:	jne    0x10040b98
10040b86:	mov    DWORD PTR [esp+0x10],ecx
10040b8a:	mov    BYTE PTR [edx+0x3],0x65
10040b8e:	mov    esi,DWORD PTR [esp+0x10]
10040b92:	mov    DWORD PTR [esp+0x54],ebp
10040b96:	jmp    0x10040bdc
10040b98:	cmp    al,0x3c
10040b9a:	jne    0x10040bad
10040b9c:	add    esi,0x1
10040b9f:	mov    DWORD PTR [esp+0x54],0x3e
10040ba7:	mov    DWORD PTR [esp+0x10],esi
10040bab:	jmp    0x10040bdc
10040bad:	cmp    al,0x27
10040baf:	jne    0x10040bc2
10040bb1:	add    esi,0x1
10040bb4:	mov    DWORD PTR [esp+0x54],0x27
10040bbc:	mov    DWORD PTR [esp+0x10],esi
10040bc0:	jmp    0x10040bdc
10040bc2:	cmp    al,0x2d
10040bc4:	mov    DWORD PTR [esp+0x54],0x0
10040bcc:	je     0x10040bd2
10040bce:	cmp    al,0x2b
10040bd0:	jne    0x10040bdc
10040bd2:	add    esi,0x1
10040bd5:	mov    DWORD PTR [esp+0x10],esi
10040bd9:	movzx  ebx,BYTE PTR [esi]
10040bdc:	movzx  eax,BYTE PTR [esi+0x1]
10040be0:	mov    edx,DWORD PTR [edi+0xc]
10040be3:	add    esi,0x1
10040be6:	test   BYTE PTR [eax+edx*1],0x10
10040bea:	je     0x10041c43
10040bf0:	mov    DWORD PTR [esp+0x10],esi
10040bf4:	movzx  eax,BYTE PTR [esi]
10040bf7:	xor    ecx,ecx
10040bf9:	test   BYTE PTR [eax+edx*1],0x10
10040bfd:	mov    edi,esi
10040bff:	mov    DWORD PTR [esp+0x1c],ecx
10040c03:	mov    DWORD PTR [esp+0x2c],edi
10040c07:	je     0x10040c42
10040c09:	mov    edx,DWORD PTR [esp+0x18]
10040c0d:	mov    edx,DWORD PTR [edx+0xc]
10040c10:	test   ecx,ecx
10040c12:	jl     0x10040c32
10040c14:	test   BYTE PTR [eax+0x100705c8],0x4
10040c1b:	je     0x10040c2a
10040c1d:	lea    ecx,[ecx+ecx*4]
10040c20:	lea    eax,[eax+ecx*2-0x30]
10040c24:	mov    DWORD PTR [esp+0x1c],eax
10040c28:	jmp    0x10040c2e
10040c2a:	mov    DWORD PTR [esp+0x1c],ebp
10040c2e:	mov    ecx,DWORD PTR [esp+0x1c]
10040c32:	add    esi,0x1
10040c35:	mov    DWORD PTR [esp+0x10],esi
10040c39:	movzx  eax,BYTE PTR [esi]
10040c3c:	test   BYTE PTR [eax+edx*1],0x10
10040c40:	jne    0x10040c10
10040c42:	mov    eax,DWORD PTR [esp+0x54]
10040c46:	mov    ebp,esi
10040c48:	sub    ebp,edi
10040c4a:	test   eax,eax
10040c4c:	jle    0x10040c60
10040c4e:	movzx  edx,BYTE PTR [esi]
10040c51:	add    esi,0x1
10040c54:	cmp    edx,eax
10040c56:	mov    DWORD PTR [esp+0x10],esi
10040c5a:	jne    0x10041c52
10040c60:	mov    al,BYTE PTR [esi]
10040c62:	add    esi,0x1
10040c65:	cmp    al,0x29
10040c67:	mov    DWORD PTR [esp+0x10],esi
10040c6b:	jne    0x10041c52
10040c71:	cmp    DWORD PTR [esp+0x38],0x0
10040c76:	jne    0x1004153d
10040c7c:	test   ebx,ebx
10040c7e:	jle    0x10040cc9
10040c80:	test   ecx,ecx
10040c82:	jle    0x10041c64
10040c88:	cmp    ebx,0x2d
10040c8b:	mov    eax,DWORD PTR [esp+0x18]
10040c8f:	jne    0x10040ca1
10040c91:	mov    edx,DWORD PTR [eax+0x30]
10040c94:	sub    edx,ecx
10040c96:	add    edx,0x1
10040c99:	mov    DWORD PTR [esp+0x1c],edx
10040c9d:	mov    ecx,edx
10040c9f:	jmp    0x10040ca4
10040ca1:	add    ecx,DWORD PTR [eax+0x30]
10040ca4:	test   ecx,ecx
10040ca6:	jle    0x10041c73
10040cac:	cmp    ecx,DWORD PTR [eax+0x34]
10040caf:	jg     0x10041c73
10040cb5:	mov    eax,DWORD PTR [esp+0x14]
10040cb9:	mov    edx,ecx
10040cbb:	sar    edx,0x8
10040cbe:	mov    BYTE PTR [eax+0x4],dl
10040cc1:	mov    BYTE PTR [eax+0x5],cl
10040cc4:	jmp    0x1004153d
10040cc9:	mov    ebx,DWORD PTR [esp+0x18]
10040ccd:	cmp    DWORD PTR [ebx+0x28],0x0
10040cd1:	mov    edi,DWORD PTR [ebx+0x24]
10040cd4:	mov    DWORD PTR [esp+0x3c],0x0
10040cdc:	jle    0x10040d0b
10040cde:	mov    esi,DWORD PTR [esp+0x3c]
10040ce2:	mov    ecx,DWORD PTR [esp+0x2c]
10040ce6:	push   ebp
10040ce7:	lea    eax,[edi+0x2]
10040cea:	push   eax
10040ceb:	push   ecx
10040cec:	call   0x1004f416
10040cf1:	add    esp,0xc
10040cf4:	test   eax,eax
10040cf6:	je     0x10040d07
10040cf8:	add    edi,DWORD PTR [ebx+0x2c]
10040cfb:	add    esi,0x1
10040cfe:	cmp    esi,DWORD PTR [ebx+0x28]
10040d01:	mov    DWORD PTR [esp+0x3c],esi
10040d05:	jl     0x10040ce2
10040d07:	mov    esi,DWORD PTR [esp+0x10]
10040d0b:	mov    edx,DWORD PTR [esp+0x3c]
10040d0f:	cmp    edx,DWORD PTR [ebx+0x28]
10040d12:	jge    0x10040d2e
10040d14:	movzx  ecx,BYTE PTR [edi+0x1]
10040d18:	mov    ch,BYTE PTR [edi]
10040d1a:	mov    eax,DWORD PTR [esp+0x14]
10040d1e:	mov    BYTE PTR [eax+0x5],cl
10040d21:	mov    edx,ecx
10040d23:	sar    edx,0x8
10040d26:	mov    BYTE PTR [eax+0x4],dl
10040d29:	jmp    0x1004153d
10040d2e:	mov    eax,DWORD PTR [esp+0x34]
10040d32:	shr    eax,0x3
10040d35:	and    eax,0x1
10040d38:	push   eax
10040d39:	mov    edi,ebx
10040d3b:	mov    ebx,DWORD PTR [esp+0x30]
10040d3f:	push   ebp
10040d40:	push   edi
10040d41:	mov    eax,esi
10040d43:	call   0x1003e2e0
10040d48:	add    esp,0xc
10040d4b:	test   eax,eax
10040d4d:	jle    0x10040d63
10040d4f:	mov    ecx,DWORD PTR [esp+0x14]
10040d53:	mov    edx,eax
10040d55:	sar    edx,0x8
10040d58:	mov    BYTE PTR [ecx+0x4],dl
10040d5b:	mov    BYTE PTR [ecx+0x5],al
10040d5e:	jmp    0x1004153d
10040d63:	cmp    DWORD PTR [esp+0x54],0x0
10040d68:	jne    0x10041c82
10040d6e:	cmp    BYTE PTR [ebx],0x52
10040d71:	jne    0x10040dc0
10040d73:	xor    ecx,ecx
10040d75:	lea    eax,[ecx+0x1]
10040d78:	cmp    ebp,eax
10040d7a:	jle    0x10040da3
10040d7c:	lea    esp,[esp+0x0]
10040d80:	movzx  edx,BYTE PTR [eax+ebx*1]
10040d84:	test   BYTE PTR [edx+0x100705c8],0x4
10040d8b:	je     0x10041c91
10040d91:	add    eax,0x1
10040d94:	cmp    eax,ebp
10040d96:	lea    ecx,[ecx+ecx*4]
10040d99:	lea    ecx,[edx+ecx*2-0x30]
10040d9d:	jl     0x10040d80
10040d9f:	test   ecx,ecx
10040da1:	jne    0x10040da8
10040da3:	mov    ecx,0xffff
10040da8:	mov    eax,DWORD PTR [esp+0x14]
10040dac:	mov    edx,ecx
10040dae:	sar    edx,0x8
10040db1:	mov    BYTE PTR [eax+0x3],0x65
10040db5:	mov    BYTE PTR [eax+0x4],dl
10040db8:	mov    BYTE PTR [eax+0x5],cl
10040dbb:	jmp    0x1004153d
10040dc0:	cmp    ebp,0x6
10040dc3:	jne    0x10040ded
10040dc5:	push   ebp
10040dc6:	push   0x10075884
10040dcb:	push   ebx
10040dcc:	call   0x1004f416
10040dd1:	add    esp,0xc
10040dd4:	test   eax,eax
10040dd6:	jne    0x10040ded
10040dd8:	mov    eax,DWORD PTR [esp+0x14]
10040ddc:	mov    BYTE PTR [eax+0x3],0x66
10040de0:	mov    DWORD PTR [esp+0x28],0x1
10040de8:	jmp    0x1004153d
10040ded:	mov    eax,DWORD PTR [esp+0x1c]
10040df1:	test   eax,eax
10040df3:	jle    0x10041ca0
10040df9:	cmp    eax,DWORD PTR [edi+0x34]
10040dfc:	jg     0x10041ca0
10040e02:	mov    ecx,DWORD PTR [esp+0x14]
10040e06:	mov    edx,eax
10040e08:	sar    edx,0x8
10040e0b:	mov    BYTE PTR [ecx+0x4],dl
10040e0e:	mov    BYTE PTR [ecx+0x5],al
10040e11:	jmp    0x1004153d
10040e16:	mov    DWORD PTR [esp+0x24],0x58
10040e1e:	add    esi,ebx
10040e20:	jmp    0x10041539
10040e25:	add    esi,ebx
10040e27:	mov    DWORD PTR [esp+0x10],esi
10040e2b:	cmp    BYTE PTR [esi],0x29
10040e2e:	jne    0x10040e46
10040e30:	mov    eax,DWORD PTR [esp+0x14]
10040e34:	mov    BYTE PTR [eax],0x6d
10040e37:	add    eax,ebx
10040e39:	mov    DWORD PTR [esp+0x14],eax
10040e3d:	mov    DWORD PTR [esp+0x2c],ebp
10040e41:	jmp    0x10041ae3
10040e46:	mov    DWORD PTR [esp+0x24],0x59
10040e4e:	jmp    0x1004153d
10040e53:	mov    cl,BYTE PTR [esi+0x1]
10040e56:	cmp    cl,0x21
10040e59:	je     0x10040f15
10040e5f:	cmp    cl,0x3d
10040e62:	je     0x10040f05
10040e68:	mov    edx,DWORD PTR [edi+0xc]
10040e6b:	movzx  ecx,cl
10040e6e:	test   BYTE PTR [ecx+edx*1],0x10
10040e72:	je     0x10041cb5
10040e78:	mov    ebp,DWORD PTR [edi+0xc]
10040e7b:	sub    al,0x3c
10040e7d:	neg    al
10040e7f:	sbb    eax,eax
10040e81:	add    esi,ebx
10040e83:	mov    DWORD PTR [esp+0x10],esi
10040e87:	movzx  ecx,BYTE PTR [esi]
10040e8a:	and    eax,0xffffffe9
10040e8d:	add    eax,0x3e
10040e90:	test   BYTE PTR [ecx+ebp*1],0x10
10040e94:	mov    edx,esi
10040e96:	mov    DWORD PTR [esp+0x2c],edx
10040e9a:	je     0x10040eaf
10040e9c:	mov    ecx,ebp
10040e9e:	mov    edi,edi
10040ea0:	add    esi,ebx
10040ea2:	mov    DWORD PTR [esp+0x10],esi
10040ea6:	movzx  edi,BYTE PTR [esi]
10040ea9:	test   BYTE PTR [edi+ecx*1],0x10
10040ead:	jne    0x10040ea0
10040eaf:	mov    edi,esi
10040eb1:	sub    edi,edx
10040eb3:	cmp    DWORD PTR [esp+0x38],0x0
10040eb8:	mov    DWORD PTR [esp+0x28],edi
10040ebc:	je     0x10041009
10040ec2:	movzx  edx,BYTE PTR [esi]
10040ec5:	cmp    edx,eax
10040ec7:	jne    0x10041ce4
10040ecd:	mov    ecx,DWORD PTR [esp+0x18]
10040ed1:	cmp    DWORD PTR [ecx+0x28],0x2710
10040ed8:	jge    0x10041cf3
10040ede:	lea    eax,[edi+0x3]
10040ee1:	cmp    eax,DWORD PTR [ecx+0x2c]
10040ee4:	jle    0x10041159
10040eea:	cmp    edi,0x20
10040eed:	mov    DWORD PTR [ecx+0x2c],eax
10040ef0:	jle    0x10041159
10040ef6:	mov    eax,DWORD PTR [esp+0x20]
10040efa:	mov    DWORD PTR [eax],0x30
10040f00:	jmp    0x10040a6d
10040f05:	mov    DWORD PTR [esp+0x24],0x5a
10040f0d:	add    esi,0x2
10040f10:	jmp    0x10041539
10040f15:	mov    DWORD PTR [esp+0x24],0x5b
10040f1d:	add    esi,0x2
10040f20:	jmp    0x10041539
10040f25:	mov    DWORD PTR [esp+0x24],0x5d
10040f2d:	add    esi,ebx
10040f2f:	jmp    0x10041539
10040f34:	mov    edi,DWORD PTR [esp+0x14]
10040f38:	mov    BYTE PTR [edi],0x53
10040f3b:	mov    esi,DWORD PTR [esp+0x10]
10040f3f:	add    esi,ebx
10040f41:	mov    DWORD PTR [esp+0x10],esi
10040f45:	movzx  ecx,BYTE PTR [esi]
10040f48:	mov    DWORD PTR [esp+0x74],edi
10040f4c:	mov    edx,0x4
10040f51:	add    edi,ebx
10040f53:	xor    eax,eax
10040f55:	test   BYTE PTR [ecx+0x100705c8],dl
10040f5b:	mov    DWORD PTR [esp+0x94],ebx
10040f62:	je     0x10040f7c
10040f64:	add    esi,ebx
10040f66:	lea    eax,[eax+eax*4]
10040f69:	lea    eax,[ecx+eax*2-0x30]
10040f6d:	mov    DWORD PTR [esp+0x10],esi
10040f71:	movzx  ecx,BYTE PTR [esi]
10040f74:	test   BYTE PTR [ecx+0x100705c8],dl
10040f7a:	jne    0x10040f64
10040f7c:	cmp    BYTE PTR [esi],0x29
10040f7f:	jne    0x10041cc6
10040f85:	cmp    eax,0xff
10040f8a:	jg     0x10041cd5
10040f90:	mov    BYTE PTR [edi],al
10040f92:	mov    ecx,DWORD PTR [esp+0x10]
10040f96:	mov    eax,DWORD PTR [esp+0x18]
10040f9a:	sub    ecx,DWORD PTR [eax+0x18]
10040f9d:	add    edi,ebx
10040f9f:	add    ecx,ebx
10040fa1:	sar    ecx,0x8
10040fa4:	mov    BYTE PTR [edi],cl
10040fa6:	mov    cl,BYTE PTR [esp+0x10]
10040faa:	sub    cl,BYTE PTR [eax+0x18]
10040fad:	mov    BYTE PTR [edi+0x2],0x0
10040fb1:	add    cl,bl
10040fb3:	mov    BYTE PTR [edi+0x1],cl
10040fb6:	mov    BYTE PTR [edi+0x3],0x0
10040fba:	add    edi,edx
10040fbc:	mov    DWORD PTR [esp+0x14],edi
10040fc0:	mov    DWORD PTR [esp+0x2c],0x0
10040fc8:	jmp    0x10041ae3
10040fcd:	add    esi,ebx
10040fcf:	mov    DWORD PTR [esp+0x10],esi
10040fd3:	mov    al,BYTE PTR [esi]
10040fd5:	cmp    al,0x3d
10040fd7:	je     0x10040ff4
10040fd9:	cmp    al,0x3e
10040fdb:	je     0x10040ff4
10040fdd:	cmp    al,0x3c
10040fdf:	je     0x10040e78
10040fe5:	mov    eax,DWORD PTR [esp+0x20]
10040fe9:	mov    DWORD PTR [eax],0x29
10040fef:	jmp    0x10040a6d
10040ff4:	xor    edx,edx
10040ff6:	cmp    al,0x3e
10040ff8:	sete   dl
10040ffb:	mov    ebp,0x29
10041000:	mov    DWORD PTR [esp+0x28],edx
10041004:	jmp    0x100417bf
10041009:	mov    eax,DWORD PTR [esp+0x18]
1004100d:	mov    ebx,DWORD PTR [eax+0x24]
10041010:	mov    eax,DWORD PTR [eax+0x28]
10041013:	test   eax,eax
10041015:	mov    DWORD PTR [esp+0x3c],0x0
1004101d:	mov    DWORD PTR [esp+0x8c],eax
10041024:	jle    0x10041123
1004102a:	lea    ebx,[ebx+0x0]
10041030:	cmp    edi,0x4
10041033:	mov    edx,DWORD PTR [esp+0x2c]
10041037:	mov    eax,edi
10041039:	lea    ecx,[ebx+0x2]
1004103c:	jb     0x10041054
1004103e:	mov    edi,edi
10041040:	mov    ebp,DWORD PTR [edx]
10041042:	cmp    ebp,DWORD PTR [ecx]
10041044:	jne    0x10041058
10041046:	sub    eax,0x4
10041049:	add    ecx,0x4
1004104c:	add    edx,0x4
1004104f:	cmp    eax,0x4
10041052:	jae    0x10041040
10041054:	test   eax,eax
10041056:	je     0x100410bd
10041058:	movzx  edi,BYTE PTR [edx]
1004105b:	movzx  ebp,BYTE PTR [ecx]
1004105e:	sub    edi,ebp
10041060:	jne    0x100410a7
10041062:	sub    eax,0x1
10041065:	add    ecx,0x1
10041068:	add    edx,0x1
1004106b:	test   eax,eax
1004106d:	je     0x100410b9
1004106f:	movzx  edi,BYTE PTR [edx]
10041072:	movzx  ebp,BYTE PTR [ecx]
10041075:	sub    edi,ebp
10041077:	jne    0x100410a7
10041079:	sub    eax,0x1
1004107c:	add    ecx,0x1
1004107f:	add    edx,0x1
10041082:	test   eax,eax
10041084:	je     0x100410b9
10041086:	movzx  edi,BYTE PTR [edx]
10041089:	movzx  ebp,BYTE PTR [ecx]
1004108c:	sub    edi,ebp
1004108e:	jne    0x100410a7
10041090:	sub    eax,0x1
10041093:	add    ecx,0x1
10041096:	add    edx,0x1
10041099:	test   eax,eax
1004109b:	je     0x100410b9
1004109d:	movzx  edi,BYTE PTR [edx]
100410a0:	movzx  eax,BYTE PTR [ecx]
100410a3:	sub    edi,eax
100410a5:	je     0x100410b9
100410a7:	test   edi,edi
100410a9:	mov    edi,DWORD PTR [esp+0x28]
100410ad:	mov    eax,0x1
100410b2:	jg     0x100410bf
100410b4:	or     eax,0xffffffff
100410b7:	jmp    0x100410bf
100410b9:	mov    edi,DWORD PTR [esp+0x28]
100410bd:	xor    eax,eax
100410bf:	test   eax,eax
100410c1:	jne    0x100410e2
100410c3:	cmp    BYTE PTR [ebx+edi*1+0x2],al
100410c7:	jne    0x10041101
100410c9:	test   DWORD PTR [esp+0x34],0x80000
100410d1:	jne    0x100410e4
100410d3:	mov    ecx,DWORD PTR [esp+0x20]
100410d7:	mov    DWORD PTR [ecx],0x2b
100410dd:	jmp    0x10040a6d
100410e2:	jl     0x10041101
100410e4:	mov    eax,DWORD PTR [esp+0x3c]
100410e8:	mov    ecx,DWORD PTR [esp+0x18]
100410ec:	add    ebx,DWORD PTR [ecx+0x2c]
100410ef:	add    eax,0x1
100410f2:	cmp    eax,DWORD PTR [ecx+0x28]
100410f5:	mov    DWORD PTR [esp+0x3c],eax
100410f9:	jl     0x10041030
100410ff:	jmp    0x10041123
10041101:	mov    ecx,DWORD PTR [esp+0x18]
10041105:	mov    eax,DWORD PTR [ecx+0x2c]
10041108:	mov    ecx,DWORD PTR [esp+0x8c]
1004110f:	sub    ecx,DWORD PTR [esp+0x3c]
10041113:	imul   ecx,eax
10041116:	push   ecx
10041117:	add    eax,ebx
10041119:	push   ebx
1004111a:	push   eax
1004111b:	call   0x10045880
10041120:	add    esp,0xc
10041123:	mov    eax,DWORD PTR [esp+0x18]
10041127:	mov    edx,DWORD PTR [eax+0x30]
1004112a:	mov    ecx,DWORD PTR [esp+0x2c]
1004112e:	add    edx,0x1
10041131:	sar    edx,0x8
10041134:	mov    BYTE PTR [ebx],dl
10041136:	mov    al,BYTE PTR [eax+0x30]
10041139:	push   edi
1004113a:	push   ecx
1004113b:	lea    edx,[ebx+0x2]
1004113e:	add    al,0x1
10041140:	push   edx
10041141:	mov    BYTE PTR [ebx+0x1],al
10041144:	call   0x10045340
10041149:	mov    ecx,DWORD PTR [esp+0x24]
1004114d:	mov    BYTE PTR [ebx+edi*1+0x2],0x0
10041152:	mov    esi,DWORD PTR [esp+0x1c]
10041156:	add    esp,0xc
10041159:	mov    edi,DWORD PTR [esp+0x18]
1004115d:	add    esi,0x1
10041160:	add    DWORD PTR [ecx+0x28],0x1
10041164:	mov    DWORD PTR [esp+0x10],esi
10041168:	add    DWORD PTR [edi+0x30],0x1
1004116c:	mov    ecx,DWORD PTR [edi+0x30]
1004116f:	mov    eax,DWORD PTR [esp+0x14]
10041173:	sar    ecx,0x8
10041176:	mov    BYTE PTR [eax+0x3],cl
10041179:	mov    dl,BYTE PTR [edi+0x30]
1004117c:	mov    BYTE PTR [eax+0x4],dl
1004117f:	mov    DWORD PTR [esp+0x28],0x2
10041187:	jmp    0x1004153d
1004118c:	mov    ebp,0x29
10041191:	mov    DWORD PTR [esp+0x28],ebx
10041195:	jmp    0x100417bf
1004119a:	add    esi,ebx
1004119c:	mov    DWORD PTR [esp+0x10],esi
100411a0:	mov    ebp,0x29
100411a5:	mov    ebx,edi
100411a7:	jmp    0x1004132d
100411ac:	test   edx,0x1000
100411b2:	je     0x10041168
100411b4:	mov    DWORD PTR [esp+0x24],0x5e
100411bc:	jmp    0x1004153d
100411c1:	mov    ebx,DWORD PTR [esp+0x20]
100411c5:	mov    DWORD PTR [esp+0x7c],esi
100411c9:	mov    esi,DWORD PTR [esp+0x18]
100411cd:	mov    eax,DWORD PTR [esi+0x30]
100411d0:	xor    edi,edi
100411d2:	push   edi
100411d3:	push   eax
100411d4:	mov    eax,DWORD PTR [esp+0x3c]
100411d8:	lea    ecx,[esp+0x18]
100411dc:	push   ebx
100411dd:	push   ecx
100411de:	call   0x1003dd70
100411e3:	add    esp,0x10
100411e6:	cmp    DWORD PTR [ebx],edi
100411e8:	jne    0x10040a69
100411ee:	cmp    eax,edi
100411f0:	jge    0x1003f4de
100411f6:	mov    ecx,eax
100411f8:	neg    ecx
100411fa:	cmp    ecx,0x1a
100411fd:	jne    0x10041224
100411ff:	mov    esi,DWORD PTR [esp+0x10]
10041203:	cmp    BYTE PTR [esi+0x1],0x5c
10041207:	jne    0x10041217
10041209:	cmp    BYTE PTR [esi+0x2],0x45
1004120d:	jne    0x10041217
1004120f:	add    esi,0x2
10041212:	jmp    0x10041ae7
10041217:	mov    DWORD PTR [esp+0x50],0x1
1004121f:	jmp    0x10041ae7
10041224:	cmp    ecx,0x19
10041227:	je     0x10041ae3
1004122d:	mov    edx,DWORD PTR [esp+0x30]
10041231:	cmp    edx,0xfffffffe
10041234:	jne    0x10041247
10041236:	cmp    ecx,0x5
10041239:	jle    0x10041247
1004123b:	cmp    ecx,0x17
1004123e:	jge    0x10041247
10041240:	or     edx,0xffffffff
10041243:	mov    DWORD PTR [esp+0x30],edx
10041247:	cmp    ecx,0x1b
1004124a:	mov    DWORD PTR [esp+0x5c],edx
1004124e:	mov    edx,DWORD PTR [esp+0x4c]
10041252:	mov    DWORD PTR [esp+0x68],edx
10041256:	jne    0x10041772
1004125c:	mov    eax,DWORD PTR [esi+0x20]
1004125f:	mov    esi,DWORD PTR [esp+0x10]
10041263:	add    esi,0x1
10041266:	mov    DWORD PTR [esp+0x10],esi
1004126a:	mov    cl,BYTE PTR [esi]
1004126c:	sub    cl,0x3c
1004126f:	neg    cl
10041271:	lea    edx,[esi+0x1]
10041274:	mov    DWORD PTR [esp+0x64],eax
10041278:	mov    al,BYTE PTR [edx]
1004127a:	mov    DWORD PTR [esp+0x28],edi
1004127e:	mov    DWORD PTR [esp+0x58],edi
10041282:	sbb    ecx,ecx
10041284:	and    ecx,0xffffffe9
10041287:	add    ecx,0x3e
1004128a:	cmp    al,0x2b
1004128c:	mov    ebp,ecx
1004128e:	je     0x100412f1
10041290:	cmp    al,0x2d
10041292:	je     0x100412f1
10041294:	mov    ecx,edx
10041296:	mov    al,BYTE PTR [ecx]
10041298:	test   al,al
1004129a:	mov    edi,0x1
1004129f:	je     0x100412c6
100412a1:	movzx  eax,al
100412a4:	cmp    eax,ebp
100412a6:	je     0x100412c6
100412a8:	mov    ebx,DWORD PTR [esp+0x18]
100412ac:	mov    ebx,DWORD PTR [ebx+0xc]
100412af:	mov    al,BYTE PTR [eax+ebx*1]
100412b2:	test   al,0x4
100412b4:	jne    0x100412b8
100412b6:	xor    edi,edi
100412b8:	test   al,0x10
100412ba:	je     0x100412c6
100412bc:	mov    al,BYTE PTR [ecx+0x1]
100412bf:	add    ecx,0x1
100412c2:	test   al,al
100412c4:	jne    0x100412a1
100412c6:	movzx  eax,BYTE PTR [ecx]
100412c9:	cmp    eax,ebp
100412cb:	mov    ebx,DWORD PTR [esp+0x18]
100412cf:	je     0x100412e0
100412d1:	mov    ecx,DWORD PTR [esp+0x20]
100412d5:	mov    DWORD PTR [ecx],0x39
100412db:	jmp    0x10041ae7
100412e0:	test   edi,edi
100412e2:	jne    0x10041327
100412e4:	mov    DWORD PTR [esp+0x28],0x1
100412ec:	jmp    0x100417bb
100412f1:	movzx  edi,BYTE PTR [esi+0x2]
100412f5:	lea    eax,[esi+0x2]
100412f8:	mov    cl,0x4
100412fa:	test   BYTE PTR [edi+0x100705c8],cl
10041300:	je     0x10041311
10041302:	movzx  edi,BYTE PTR [eax+0x1]
10041306:	add    eax,0x1
10041309:	test   BYTE PTR [edi+0x100705c8],cl
1004130f:	jne    0x10041302
10041311:	movzx  eax,BYTE PTR [eax]
10041314:	cmp    eax,ebp
10041316:	je     0x10041323
10041318:	mov    DWORD PTR [ebx],0x39
1004131e:	jmp    0x10041ae7
10041323:	mov    ebx,DWORD PTR [esp+0x18]
10041327:	mov    esi,edx
10041329:	mov    DWORD PTR [esp+0x10],esi
1004132d:	mov    al,BYTE PTR [esi]
1004132f:	movzx  edx,al
10041332:	cmp    edx,0x2b
10041335:	jne    0x10041359
10041337:	add    esi,0x1
1004133a:	mov    DWORD PTR [esp+0x10],esi
1004133e:	movzx  ecx,BYTE PTR [esi]
10041341:	test   BYTE PTR [ecx+0x100705c8],0x4
10041348:	jne    0x10041376
1004134a:	mov    edx,DWORD PTR [esp+0x20]
1004134e:	mov    DWORD PTR [edx],0x3f
10041354:	jmp    0x10040a6d
10041359:	cmp    edx,0x2d
1004135c:	jne    0x10041376
1004135e:	movzx  ecx,BYTE PTR [esi+0x1]
10041362:	test   BYTE PTR [ecx+0x100705c8],0x4
10041369:	je     0x100413fd
1004136f:	add    esi,0x1
10041372:	mov    DWORD PTR [esp+0x10],esi
10041376:	movzx  eax,BYTE PTR [esi]
10041379:	test   BYTE PTR [eax+0x100705c8],0x4
10041380:	mov    DWORD PTR [esp+0x1c],0x0
10041388:	je     0x100413b2
1004138a:	lea    ebx,[ebx+0x0]
10041390:	mov    ecx,DWORD PTR [esp+0x1c]
10041394:	lea    ecx,[ecx+ecx*4]
10041397:	add    esi,0x1
1004139a:	lea    eax,[eax+ecx*2-0x30]
1004139e:	mov    DWORD PTR [esp+0x1c],eax
100413a2:	mov    DWORD PTR [esp+0x10],esi
100413a6:	movzx  eax,BYTE PTR [esi]
100413a9:	test   BYTE PTR [eax+0x100705c8],0x4
100413b0:	jne    0x10041390
100413b2:	movzx  ecx,BYTE PTR [esi]
100413b5:	cmp    ecx,ebp
100413b7:	jne    0x10041d44
100413bd:	cmp    edx,0x2d
100413c0:	jne    0x1004174d
100413c6:	mov    eax,DWORD PTR [esp+0x1c]
100413ca:	test   eax,eax
100413cc:	je     0x10041d53
100413d2:	mov    edx,DWORD PTR [esp+0x18]
100413d6:	mov    ecx,DWORD PTR [edx+0x30]
100413d9:	sub    ecx,eax
100413db:	add    ecx,0x1
100413de:	mov    eax,ecx
100413e0:	test   eax,eax
100413e2:	mov    DWORD PTR [esp+0x1c],eax
100413e6:	jg     0x100418b2
100413ec:	mov    eax,DWORD PTR [esp+0x20]
100413f0:	mov    DWORD PTR [eax],0xf
100413f6:	jmp    0x10040a6d
100413fb:	mov    ebx,edi
100413fd:	xor    edi,edi
100413ff:	xor    edx,edx
10041401:	cmp    al,0x29
10041403:	mov    DWORD PTR [esp+0x3c],edi
10041407:	mov    DWORD PTR [esp+0x54],edx
1004140b:	lea    ecx,[esp+0x54]
1004140f:	je     0x1004147a
10041411:	lea    edx,[edi+0x10]
10041414:	cmp    al,0x3a
10041416:	je     0x10041472
10041418:	movzx  eax,al
1004141b:	add    esi,0x1
1004141e:	sub    eax,0x2d
10041421:	cmp    eax,0x4b
10041424:	mov    DWORD PTR [esp+0x10],esi
10041428:	ja     0x10041d02
1004142e:	movzx  eax,BYTE PTR [eax+0x10041f8c]
10041435:	jmp    DWORD PTR [eax*4+0x10041f68]
1004143c:	lea    ecx,[esp+0x3c]
10041440:	jmp    0x1004146c
10041442:	or     DWORD PTR [ecx],0x80000
10041448:	or     DWORD PTR [ebx+0x44],edx
1004144b:	jmp    0x1004146c
1004144d:	or     DWORD PTR [ecx],0x1
10041450:	jmp    0x1004146c
10041452:	or     DWORD PTR [ecx],0x2
10041455:	jmp    0x1004146c
10041457:	or     DWORD PTR [ecx],0x4
1004145a:	jmp    0x1004146c
1004145c:	or     DWORD PTR [ecx],0x8
1004145f:	jmp    0x1004146c
10041461:	or     DWORD PTR [ecx],0x200
10041467:	jmp    0x1004146c
10041469:	or     DWORD PTR [ecx],0x40
1004146c:	mov    al,BYTE PTR [esi]
1004146e:	cmp    al,0x29
10041470:	jne    0x10041414
10041472:	mov    edx,DWORD PTR [esp+0x54]
10041476:	mov    edi,DWORD PTR [esp+0x3c]
1004147a:	mov    ebp,DWORD PTR [esp+0x34]
1004147e:	or     edx,ebp
10041480:	not    edi
10041482:	and    edx,edi
10041484:	cmp    BYTE PTR [esi],0x29
10041487:	mov    eax,edx
10041489:	mov    DWORD PTR [esp+0x60],eax
1004148d:	jne    0x1004152e
10041493:	mov    edx,DWORD PTR [ebx+0x14]
10041496:	mov    ecx,DWORD PTR [esp+0x14]
1004149a:	add    edx,0x3
1004149d:	cmp    ecx,edx
1004149f:	jne    0x100414cb
100414a1:	mov    edx,DWORD PTR [esp+0x38]
100414a5:	test   edx,edx
100414a7:	je     0x100414ae
100414a9:	cmp    DWORD PTR [edx],0x6
100414ac:	jne    0x100414cb
100414ae:	mov    ecx,DWORD PTR [esp+0xa8]
100414b5:	mov    DWORD PTR [ebx+0x40],eax
100414b8:	mov    DWORD PTR [esp+0x34],eax
100414bc:	mov    DWORD PTR [ecx],eax
100414be:	mov    DWORD PTR [esp+0x2c],0x0
100414c6:	jmp    0x10041ae7
100414cb:	mov    edx,eax
100414cd:	xor    edx,ebp
100414cf:	test   dl,0x7
100414d2:	je     0x100414ec
100414d4:	mov    BYTE PTR [ecx],0x19
100414d7:	mov    dl,al
100414d9:	add    ecx,0x1
100414dc:	and    dl,0x7
100414df:	mov    BYTE PTR [ecx],dl
100414e1:	mov    esi,DWORD PTR [esp+0x10]
100414e5:	add    ecx,0x1
100414e8:	mov    DWORD PTR [esp+0x14],ecx
100414ec:	mov    ecx,eax
100414ee:	shr    ecx,0x9
100414f1:	and    ecx,0x1
100414f4:	mov    DWORD PTR [esp+0xa4],ecx
100414fb:	xor    ecx,0x1
100414fe:	mov    DWORD PTR [esp+0xa0],ecx
10041505:	mov    ecx,eax
10041507:	and    ecx,0x1
1004150a:	shl    ecx,0x8
1004150d:	mov    DWORD PTR [esp+0x84],ecx
10041514:	mov    ecx,DWORD PTR [esp+0xa8]
1004151b:	mov    DWORD PTR [esp+0x34],eax
1004151f:	mov    DWORD PTR [ecx],eax
10041521:	mov    DWORD PTR [esp+0x2c],0x0
10041529:	jmp    0x10041ae7
1004152e:	add    esi,0x1
10041531:	mov    DWORD PTR [esp+0x24],0x5e
10041539:	mov    DWORD PTR [esp+0x10],esi
1004153d:	mov    eax,DWORD PTR [esp+0x24]
10041541:	mov    ebx,DWORD PTR [esp+0x14]
10041545:	mov    ecx,DWORD PTR [esp+0x18]
10041549:	xor    edx,edx
1004154b:	cmp    eax,0x5d
1004154e:	setl   dl
10041551:	mov    BYTE PTR [ebx],al
10041553:	mov    edi,DWORD PTR [ecx+0x48]
10041556:	mov    DWORD PTR [esp+0x44],ebx
1004155a:	mov    DWORD PTR [esp+0x6c],0x0
10041562:	sub    edx,0x1
10041565:	and    edx,ebx
10041567:	cmp    eax,0x5a
1004156a:	mov    DWORD PTR [esp+0x2c],edx
1004156e:	je     0x10041579
10041570:	cmp    eax,0x5b
10041573:	je     0x10041579
10041575:	xor    eax,eax
10041577:	jmp    0x1004157e
10041579:	mov    eax,0x1
1004157e:	mov    esi,DWORD PTR [esp+0x38]
10041582:	mov    ebp,DWORD PTR [esp+0x20]
10041586:	mov    edx,esi
10041588:	neg    edx
1004158a:	sbb    edx,edx
1004158c:	lea    ecx,[esp+0x6c]
10041590:	and    edx,ecx
10041592:	mov    ecx,DWORD PTR [esp+0x98]
10041599:	push   edx
1004159a:	mov    edx,DWORD PTR [esp+0x1c]
1004159e:	push   edx
1004159f:	push   ecx
100415a0:	lea    edx,[esp+0x84]
100415a7:	push   edx
100415a8:	mov    edx,DWORD PTR [esp+0x38]
100415ac:	lea    ecx,[esp+0xa0]
100415b3:	push   ecx
100415b4:	mov    ecx,DWORD PTR [esp+0x6c]
100415b8:	push   edx
100415b9:	push   ecx
100415ba:	mov    ecx,DWORD PTR [esp+0x50]
100415be:	push   eax
100415bf:	push   ebp
100415c0:	lea    edx,[esp+0x34]
100415c4:	push   edx
100415c5:	mov    edx,DWORD PTR [esp+0x88]
100415cc:	lea    eax,[esp+0x6c]
100415d0:	push   eax
100415d1:	and    ecx,0x7
100415d4:	push   ecx
100415d5:	push   edx
100415d6:	call   0x10041fe0
100415db:	add    esp,0x34
100415de:	test   eax,eax
100415e0:	je     0x10040a69
100415e6:	cmp    DWORD PTR [esp+0x24],0x60
100415eb:	jne    0x1004161e
100415ed:	test   esi,esi
100415ef:	jne    0x1004161e
100415f1:	mov    eax,ebx
100415f3:	xor    ecx,ecx
100415f5:	xor    edx,edx
100415f7:	mov    dh,BYTE PTR [eax+0x1]
100415fa:	add    ecx,0x1
100415fd:	mov    dl,BYTE PTR [eax+0x2]
10041600:	add    eax,edx
10041602:	cmp    BYTE PTR [eax],0x55
10041605:	jne    0x100415f5
10041607:	cmp    BYTE PTR [ebx+0x3],0x66
1004160b:	jne    0x10041689
1004160d:	cmp    ecx,0x1
10041610:	jg     0x10041d14
10041616:	mov    DWORD PTR [esp+0x24],0x66
1004161e:	mov    eax,DWORD PTR [esp+0x90]
10041625:	mov    ecx,DWORD PTR [esp+0x78]
10041629:	mov    esi,DWORD PTR [esp+0x10]
1004162d:	cmp    BYTE PTR [esi],0x29
10041630:	jne    0x10041d2c
10041636:	mov    edx,DWORD PTR [esp+0x38]
1004163a:	test   edx,edx
1004163c:	je     0x100416a9
1004163e:	mov    eax,DWORD PTR [edx]
10041640:	mov    ecx,DWORD PTR [esp+0x6c]
10041644:	mov    edx,0x7fffffeb
10041649:	sub    edx,eax
1004164b:	lea    edi,[ecx-0x6]
1004164e:	cmp    edx,edi
10041650:	jl     0x10041d38
10041656:	lea    eax,[eax+ecx*1-0x6]
1004165a:	mov    ecx,DWORD PTR [esp+0x38]
1004165e:	mov    DWORD PTR [ecx],eax
10041660:	mov    BYTE PTR [ebx],0x5e
10041663:	add    ebx,0x1
10041666:	mov    BYTE PTR [ebx],0x0
10041669:	mov    BYTE PTR [ebx+0x1],0x3
1004166d:	add    ebx,0x2
10041670:	mov    BYTE PTR [ebx],0x55
10041673:	add    ebx,0x1
10041676:	mov    BYTE PTR [ebx],0x0
10041679:	mov    BYTE PTR [ebx+0x1],0x3
1004167d:	add    ebx,0x2
10041680:	mov    DWORD PTR [esp+0x14],ebx
10041684:	jmp    0x10041ae3
10041689:	cmp    ecx,0x2
1004168c:	jg     0x10041d20
10041692:	cmp    ecx,0x1
10041695:	jne    0x1004161e
10041697:	or     ecx,0xffffffff
1004169a:	or     eax,ecx
1004169c:	mov    DWORD PTR [esp+0x78],ecx
100416a0:	mov    DWORD PTR [esp+0x90],eax
100416a7:	jmp    0x10041629
100416a9:	mov    edx,DWORD PTR [esp+0x44]
100416ad:	mov    DWORD PTR [esp+0x14],edx
100416b1:	mov    edx,DWORD PTR [esp+0x24]
100416b5:	cmp    edx,0x66
100416b8:	je     0x10041ae7
100416be:	cmp    edx,0x5d
100416c1:	mov    ebx,DWORD PTR [esp+0x4c]
100416c5:	mov    ebp,DWORD PTR [esp+0x30]
100416c9:	mov    DWORD PTR [esp+0x68],ebx
100416cd:	mov    DWORD PTR [esp+0x5c],ebp
100416d1:	mov    DWORD PTR [esp+0x88],0x0
100416dc:	jl     0x10041733
100416de:	cmp    ebp,0xfffffffe
100416e1:	jne    0x10041712
100416e3:	test   eax,eax
100416e5:	jl     0x10041700
100416e7:	mov    DWORD PTR [esp+0x30],eax
100416eb:	mov    DWORD PTR [esp+0x88],0x1
100416f6:	mov    DWORD PTR [esp+0x5c],0xffffffff
100416fe:	jmp    0x10041722
10041700:	mov    DWORD PTR [esp+0x30],0xffffffff
10041708:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041710:	jmp    0x10041722
10041712:	test   eax,eax
10041714:	jl     0x10041722
10041716:	test   ecx,ecx
10041718:	jge    0x1004172a
1004171a:	or     eax,edi
1004171c:	mov    ecx,eax
1004171e:	mov    DWORD PTR [esp+0x78],ecx
10041722:	test   ecx,ecx
10041724:	jl     0x10041ae7
1004172a:	mov    DWORD PTR [esp+0x4c],ecx
1004172e:	jmp    0x10041ae7
10041733:	cmp    edx,0x58
10041736:	jne    0x10041ae7
1004173c:	test   ecx,ecx
1004173e:	jl     0x10041ae7
10041744:	mov    DWORD PTR [esp+0x4c],ecx
10041748:	jmp    0x10041ae7
1004174d:	cmp    edx,0x2b
10041750:	jne    0x100418b2
10041756:	mov    eax,DWORD PTR [esp+0x1c]
1004175a:	test   eax,eax
1004175c:	je     0x10041c64
10041762:	mov    edx,DWORD PTR [esp+0x18]
10041766:	add    eax,DWORD PTR [edx+0x30]
10041769:	mov    DWORD PTR [esp+0x1c],eax
1004176d:	jmp    0x100418b2
10041772:	cmp    ecx,0x1c
10041775:	mov    esi,DWORD PTR [esp+0x10]
10041779:	jne    0x100419e5
1004177f:	mov    dl,BYTE PTR [esi+0x1]
10041782:	cmp    dl,0x3c
10041785:	je     0x10041795
10041787:	cmp    dl,0x27
1004178a:	je     0x10041795
1004178c:	cmp    dl,0x7b
1004178f:	jne    0x100419e5
10041795:	add    esi,0x1
10041798:	mov    DWORD PTR [esp+0x10],esi
1004179c:	mov    al,BYTE PTR [esi]
1004179e:	cmp    al,0x3c
100417a0:	mov    DWORD PTR [esp+0x28],edi
100417a4:	jne    0x100417ad
100417a6:	mov    ebp,0x3e
100417ab:	jmp    0x100417bb
100417ad:	sub    al,0x27
100417af:	neg    al
100417b1:	sbb    eax,eax
100417b3:	and    eax,0x56
100417b6:	add    eax,0x27
100417b9:	mov    ebp,eax
100417bb:	mov    edi,DWORD PTR [esp+0x18]
100417bf:	mov    edx,DWORD PTR [edi+0xc]
100417c2:	add    esi,0x1
100417c5:	mov    DWORD PTR [esp+0x10],esi
100417c9:	movzx  eax,BYTE PTR [esi]
100417cc:	test   BYTE PTR [eax+edx*1],0x10
100417d0:	mov    ecx,esi
100417d2:	mov    DWORD PTR [esp+0x2c],ecx
100417d6:	je     0x100417f0
100417d8:	mov    eax,edx
100417da:	lea    ebx,[ebx+0x0]
100417e0:	add    esi,0x1
100417e3:	mov    DWORD PTR [esp+0x10],esi
100417e7:	movzx  edx,BYTE PTR [esi]
100417ea:	test   BYTE PTR [edx+eax*1],0x10
100417ee:	jne    0x100417e0
100417f0:	mov    ebx,esi
100417f2:	sub    ebx,ecx
100417f4:	cmp    DWORD PTR [esp+0x38],0x0
100417f9:	je     0x10041828
100417fb:	test   ebx,ebx
100417fd:	je     0x10041d62
10041803:	movzx  eax,BYTE PTR [esi]
10041806:	cmp    eax,ebp
10041808:	jne    0x10041d71
1004180e:	cmp    ebx,0x20
10041811:	jg     0x10041d80
10041817:	mov    edi,DWORD PTR [esp+0x18]
1004181b:	mov    DWORD PTR [esp+0x1c],0x0
10041823:	jmp    0x100418a3
10041828:	mov    eax,DWORD PTR [esp+0x18]
1004182c:	mov    edi,DWORD PTR [eax+0x24]
1004182f:	xor    ebp,ebp
10041831:	cmp    DWORD PTR [eax+0x28],ebp
10041834:	jle    0x10041863
10041836:	mov    esi,eax
10041838:	mov    edx,DWORD PTR [esp+0x2c]
1004183c:	push   ebx
1004183d:	lea    ecx,[edi+0x2]
10041840:	push   ecx
10041841:	push   edx
10041842:	call   0x1004f416
10041847:	add    esp,0xc
1004184a:	test   eax,eax
1004184c:	jne    0x10041854
1004184e:	cmp    BYTE PTR [edi+ebx*1+0x2],al
10041852:	je     0x1004185f
10041854:	add    edi,DWORD PTR [esi+0x2c]
10041857:	add    ebp,0x1
1004185a:	cmp    ebp,DWORD PTR [esi+0x28]
1004185d:	jl     0x10041838
1004185f:	mov    esi,DWORD PTR [esp+0x10]
10041863:	mov    eax,DWORD PTR [esp+0x18]
10041867:	cmp    ebp,DWORD PTR [eax+0x28]
1004186a:	jge    0x1004187a
1004186c:	movzx  ecx,BYTE PTR [edi+0x1]
10041870:	mov    ch,BYTE PTR [edi]
10041872:	mov    edi,eax
10041874:	mov    DWORD PTR [esp+0x1c],ecx
10041878:	jmp    0x100418a3
1004187a:	mov    edx,DWORD PTR [esp+0x34]
1004187e:	shr    edx,0x3
10041881:	and    edx,0x1
10041884:	push   edx
10041885:	mov    edi,eax
10041887:	push   ebx
10041888:	mov    ebx,DWORD PTR [esp+0x34]
1004188c:	push   edi
1004188d:	mov    eax,esi
1004188f:	call   0x1003e2e0
10041894:	add    esp,0xc
10041897:	test   eax,eax
10041899:	mov    DWORD PTR [esp+0x1c],eax
1004189d:	jle    0x10041d8f
100418a3:	cmp    DWORD PTR [esp+0x28],0x0
100418a8:	mov    eax,DWORD PTR [esp+0x14]
100418ac:	je     0x100419fb
100418b2:	cmp    DWORD PTR [esp+0x38],0x0
100418b7:	mov    edi,DWORD PTR [esp+0x14]
100418bb:	mov    ebp,DWORD PTR [esp+0x18]
100418bf:	mov    ebx,DWORD PTR [ebp+0x14]
100418c2:	mov    DWORD PTR [esp+0x2c],edi
100418c6:	jne    0x10041942
100418cc:	cmp    DWORD PTR [esp+0x1c],0x0
100418d1:	mov    BYTE PTR [edi],0x0
100418d4:	je     0x100418e4
100418d6:	mov    esi,DWORD PTR [esp+0x1c]
100418da:	mov    eax,DWORD PTR [ebp+0x14]
100418dd:	call   0x1003e7e0
100418e2:	mov    ebx,eax
100418e4:	test   ebx,ebx
100418e6:	jne    0x1004199e
100418ec:	mov    eax,DWORD PTR [esp+0x34]
100418f0:	mov    ecx,DWORD PTR [esp+0x1c]
100418f4:	shr    eax,0x3
100418f7:	and    eax,0x1
100418fa:	push   eax
100418fb:	mov    eax,DWORD PTR [esp+0x14]
100418ff:	push   ecx
10041900:	push   ebp
10041901:	call   0x1003e2e0
10041906:	add    esp,0xc
10041909:	test   eax,eax
1004190b:	jl     0x10041c82
10041911:	mov    eax,DWORD PTR [ebp+0x14]
10041914:	mov    edx,DWORD PTR [esp+0x1c]
10041918:	mov    ecx,DWORD PTR [esp+0x14]
1004191c:	mov    edi,DWORD PTR [esp+0x14]
10041920:	lea    ebx,[eax+edx*1]
10041923:	mov    edx,ecx
10041925:	sub    edx,eax
10041927:	mov    eax,DWORD PTR [ebp+0x20]
1004192a:	add    edx,0x4
1004192d:	sar    edx,0x8
10041930:	mov    BYTE PTR [eax],dl
10041932:	sub    cl,BYTE PTR [ebp+0x14]
10041935:	mov    edx,DWORD PTR [ebp+0x20]
10041938:	add    cl,0x4
1004193b:	mov    BYTE PTR [edx+0x1],cl
1004193e:	add    DWORD PTR [ebp+0x20],0x2
10041942:	mov    BYTE PTR [edi],0x5d
10041945:	mov    BYTE PTR [edi+0x1],0x0
10041949:	add    edi,0x3
1004194c:	mov    al,0x6
1004194e:	mov    BYTE PTR [edi-0x1],al
10041951:	mov    BYTE PTR [edi],0x52
10041954:	mov    ecx,ebx
10041956:	sub    ecx,DWORD PTR [ebp+0x14]
10041959:	add    edi,0x3
1004195c:	sar    ecx,0x8
1004195f:	mov    BYTE PTR [edi-0x2],cl
10041962:	sub    bl,BYTE PTR [ebp+0x14]
10041965:	add    edi,0x3
10041968:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1004196d:	mov    BYTE PTR [edi-0x4],bl
10041970:	mov    BYTE PTR [edi-0x3],0x55
10041974:	mov    BYTE PTR [edi-0x2],0x0
10041978:	mov    BYTE PTR [edi-0x1],al
1004197b:	mov    esi,DWORD PTR [esp+0x10]
1004197f:	mov    DWORD PTR [esp+0x14],edi
10041983:	mov    DWORD PTR [esp+0x6c],0x9
1004198b:	jne    0x10041ae7
10041991:	mov    DWORD PTR [esp+0x30],0xffffffff
10041999:	jmp    0x10041ae7
1004199e:	xor    eax,eax
100419a0:	mov    ah,BYTE PTR [ebx+0x1]
100419a3:	mov    al,BYTE PTR [ebx+0x2]
100419a6:	test   eax,eax
100419a8:	jne    0x10041942
100419aa:	mov    esi,DWORD PTR [esp+0x98]
100419b1:	test   esi,esi
100419b3:	je     0x100419d6
100419b5:	mov    eax,DWORD PTR [esi+0x4]
100419b8:	cmp    eax,ebx
100419ba:	jb     0x100419d6
100419bc:	push   0x0
100419be:	push   edi
100419bf:	push   eax
100419c0:	call   0x1003e8f0
100419c5:	add    esp,0xc
100419c8:	test   eax,eax
100419ca:	je     0x10041942
100419d0:	mov    esi,DWORD PTR [esi]
100419d2:	test   esi,esi
100419d4:	jne    0x100419b5
100419d6:	mov    ecx,DWORD PTR [esp+0x20]
100419da:	mov    DWORD PTR [ecx],0x28
100419e0:	jmp    0x10040a69
100419e5:	cmp    ecx,0x1d
100419e8:	jl     0x10041a49
100419ea:	mov    edi,DWORD PTR [esp+0x18]
100419ee:	mov    ecx,0xffffffe3
100419f3:	sub    ecx,eax
100419f5:	mov    eax,DWORD PTR [esp+0x14]
100419f9:	jmp    0x100419ff
100419fb:	mov    ecx,DWORD PTR [esp+0x1c]
100419ff:	cmp    DWORD PTR [esp+0x30],0xfffffffe
10041a04:	jne    0x10041a0e
10041a06:	mov    DWORD PTR [esp+0x30],0xffffffff
10041a0e:	mov    BYTE PTR [eax],0x51
10041a11:	mov    DWORD PTR [esp+0x2c],eax
10041a15:	add    eax,0x1
10041a18:	mov    edx,ecx
10041a1a:	sar    edx,0x8
10041a1d:	mov    BYTE PTR [eax],dl
10041a1f:	mov    BYTE PTR [eax+0x1],cl
10041a22:	add    eax,0x2
10041a25:	cmp    ecx,0x20
10041a28:	mov    DWORD PTR [esp+0x14],eax
10041a2c:	mov    eax,0x1
10041a31:	jge    0x10041a35
10041a33:	shl    eax,cl
10041a35:	or     DWORD PTR [edi+0x3c],eax
10041a38:	cmp    ecx,DWORD PTR [edi+0x38]
10041a3b:	jle    0x10041ae3
10041a41:	mov    DWORD PTR [edi+0x38],ecx
10041a44:	jmp    0x10041ae3
10041a49:	cmp    ecx,0x16
10041a4c:	je     0x10041d9e
10041a52:	cmp    ecx,0xf
10041a55:	je     0x10041d9e
10041a5b:	cmp    ecx,0x10
10041a5e:	je     0x10041d9e
10041a64:	cmp    ecx,0x5
10041a67:	jle    0x10041a83
10041a69:	cmp    ecx,0x17
10041a6c:	jge    0x10041a83
10041a6e:	mov    ecx,DWORD PTR [esp+0x14]
10041a72:	neg    al
10041a74:	mov    DWORD PTR [esp+0x2c],ecx
10041a78:	mov    BYTE PTR [ecx],al
10041a7a:	add    ecx,0x1
10041a7d:	mov    DWORD PTR [esp+0x14],ecx
10041a81:	jmp    0x10041ae3
10041a83:	mov    ecx,DWORD PTR [esp+0x14]
10041a87:	neg    al
10041a89:	mov    BYTE PTR [ecx],al
10041a8b:	add    ecx,0x1
10041a8e:	mov    DWORD PTR [esp+0x2c],edi
10041a92:	mov    DWORD PTR [esp+0x14],ecx
10041a96:	jmp    0x10041ae3
10041a98:	mov    edx,DWORD PTR [esp+0x18]
10041a9c:	mov    esi,DWORD PTR [esp+0x30]
10041aa0:	cmp    esi,0xfffffffe
10041aa3:	jne    0x10041ac5
10041aa5:	mov    ecx,DWORD PTR [esp+0x4c]
10041aa9:	movzx  eax,al
10041aac:	or     eax,DWORD PTR [esp+0x84]
10041ab3:	mov    DWORD PTR [esp+0x5c],0xffffffff
10041abb:	mov    DWORD PTR [esp+0x68],ecx
10041abf:	mov    DWORD PTR [esp+0x30],eax
10041ac3:	jmp    0x10041ae3
10041ac5:	movzx  ecx,BYTE PTR [ecx-0x1]
10041ac9:	or     ecx,DWORD PTR [edx+0x48]
10041acc:	mov    eax,DWORD PTR [esp+0x4c]
10041ad0:	or     ecx,DWORD PTR [esp+0x84]
10041ad7:	mov    DWORD PTR [esp+0x5c],esi
10041adb:	mov    DWORD PTR [esp+0x68],eax
10041adf:	mov    DWORD PTR [esp+0x4c],ecx
10041ae3:	mov    esi,DWORD PTR [esp+0x10]
10041ae7:	mov    edi,DWORD PTR [esp+0x74]
10041aeb:	mov    ebx,DWORD PTR [esp+0xb8]
10041af2:	mov    ebp,DWORD PTR [esp+0x2c]
10041af6:	mov    edx,DWORD PTR [esp+0x14]
10041afa:	mov    ecx,DWORD PTR [esp+0x80]
10041b01:	add    esi,0x1
10041b04:	jmp    0x1003f37a
10041b09:	mov    edx,DWORD PTR [esp+0x20]
10041b0d:	mov    DWORD PTR [edx],0x34
10041b13:	jmp    0x10040a6d
10041b18:	mov    eax,DWORD PTR [esp+0x20]
10041b1c:	mov    DWORD PTR [eax],0x14
10041b22:	jmp    0x10040a6d
10041b27:	mov    ecx,DWORD PTR [esp+0x20]
10041b2b:	mov    DWORD PTR [ecx],0x34
10041b31:	jmp    0x10040a6d
10041b36:	mov    edx,DWORD PTR [esp+0x30]
10041b3a:	mov    eax,DWORD PTR [esp+0xb4]
10041b41:	mov    ecx,DWORD PTR [esp+0x4c]
10041b45:	mov    DWORD PTR [eax],edx
10041b47:	mov    edx,DWORD PTR [esp+0xac]
10041b4e:	mov    eax,DWORD PTR [esp+0xb0]
10041b55:	mov    DWORD PTR [edx],ecx
10041b57:	mov    ecx,DWORD PTR [esp+0x14]
10041b5b:	mov    edx,DWORD PTR [esp+0x9c]
10041b62:	mov    DWORD PTR [eax],ecx
10041b64:	mov    DWORD PTR [edx],esi
10041b66:	mov    edx,DWORD PTR [esp+0x38]
10041b6a:	test   edx,edx
10041b6c:	je     0x10041b8c
10041b6e:	mov    eax,DWORD PTR [edx]
10041b70:	mov    edi,DWORD PTR [esp+0x80]
10041b77:	mov    ebx,ecx
10041b79:	mov    ebp,0x7fffffeb
10041b7e:	sub    ebx,edi
10041b80:	sub    ebp,eax
10041b82:	cmp    ebp,ebx
10041b84:	jl     0x10041b18
10041b86:	sub    eax,edi
10041b88:	add    eax,ecx
10041b8a:	mov    DWORD PTR [edx],eax
10041b8c:	mov    eax,0x1
10041b91:	jmp    0x10040a78
10041b96:	mov    dl,BYTE PTR [esi+0x1]
10041b99:	mov    eax,DWORD PTR [esp+0x20]
10041b9d:	sub    dl,0x3a
10041ba0:	neg    dl
10041ba2:	sbb    edx,edx
10041ba4:	and    edx,0x12
10041ba7:	add    edx,0xd
10041baa:	mov    DWORD PTR [eax],edx
10041bac:	jmp    0x10040a6d
10041bb1:	mov    ecx,DWORD PTR [esp+0x20]
10041bb5:	mov    DWORD PTR [ecx],0x1f
10041bbb:	jmp    0x10040a6d
10041bc0:	mov    edx,DWORD PTR [esp+0x20]
10041bc4:	mov    DWORD PTR [edx],0x1e
10041bca:	jmp    0x10040a69
10041bcf:	mov    DWORD PTR [esi],0x7
10041bd5:	jmp    0x10040a69
10041bda:	mov    eax,DWORD PTR [esp+0x20]
10041bde:	mov    DWORD PTR [eax],0x8
10041be4:	jmp    0x10040a6d
10041be9:	mov    ecx,DWORD PTR [esp+0x20]
10041bed:	mov    DWORD PTR [ecx],0x6
10041bf3:	jmp    0x10040a6d
10041bf8:	mov    edx,DWORD PTR [esp+0x20]
10041bfc:	mov    DWORD PTR [edx],0x9
10041c02:	jmp    0x10040a6d
10041c07:	mov    ecx,DWORD PTR [esp+0x20]
10041c0b:	mov    DWORD PTR [ecx],0x37
10041c11:	jmp    0x10040a6d
10041c16:	mov    edx,DWORD PTR [esp+0x20]
10041c1a:	mov    DWORD PTR [edx],0x14
10041c20:	jmp    0x10040a6d
10041c25:	mov    ecx,DWORD PTR [esp+0x20]
10041c29:	mov    DWORD PTR [ecx],0x3b
10041c2f:	jmp    0x10040a6d
10041c34:	mov    edx,DWORD PTR [esp+0x20]
10041c38:	mov    DWORD PTR [edx],0x3c
10041c3e:	jmp    0x10040a6d
10041c43:	mov    edx,DWORD PTR [esp+0x20]
10041c47:	mov    DWORD PTR [edx],0x1c
10041c4d:	jmp    0x10040a6d
10041c52:	mov    eax,DWORD PTR [esp+0x20]
10041c56:	sub    esi,0x1
10041c59:	mov    DWORD PTR [eax],0x1a
10041c5f:	jmp    0x10040a6d
10041c64:	mov    ecx,DWORD PTR [esp+0x20]
10041c68:	mov    DWORD PTR [ecx],0x3a
10041c6e:	jmp    0x10040a6d
10041c73:	mov    edx,DWORD PTR [esp+0x20]
10041c77:	mov    DWORD PTR [edx],0xf
10041c7d:	jmp    0x10040a6d
10041c82:	mov    eax,DWORD PTR [esp+0x20]
10041c86:	mov    DWORD PTR [eax],0xf
10041c8c:	jmp    0x10040a69
10041c91:	mov    ecx,DWORD PTR [esp+0x20]
10041c95:	mov    DWORD PTR [ecx],0xf
10041c9b:	jmp    0x10040a69
10041ca0:	mov    edx,DWORD PTR [esp+0x20]
10041ca4:	neg    eax
10041ca6:	sbb    eax,eax
10041ca8:	and    eax,0xffffffec
10041cab:	add    eax,0x23
10041cae:	mov    DWORD PTR [edx],eax
10041cb0:	jmp    0x10040a69
10041cb5:	mov    eax,DWORD PTR [esp+0x20]
10041cb9:	add    esi,ebx
10041cbb:	mov    DWORD PTR [eax],0x18
10041cc1:	jmp    0x10040a6d
10041cc6:	mov    ecx,DWORD PTR [esp+0x20]
10041cca:	mov    DWORD PTR [ecx],0x27
10041cd0:	jmp    0x10040a6d
10041cd5:	mov    edx,DWORD PTR [esp+0x20]
10041cd9:	mov    DWORD PTR [edx],0x26
10041cdf:	jmp    0x10040a6d
10041ce4:	mov    ecx,DWORD PTR [esp+0x20]
10041ce8:	mov    DWORD PTR [ecx],0x2a
10041cee:	jmp    0x10040a6d
10041cf3:	mov    edx,DWORD PTR [esp+0x20]
10041cf7:	mov    DWORD PTR [edx],0x31
10041cfd:	jmp    0x10040a6d
10041d02:	mov    eax,DWORD PTR [esp+0x20]
10041d06:	mov    DWORD PTR [eax],0xc
10041d0c:	sub    esi,0x1
10041d0f:	jmp    0x10040a6d
10041d14:	mov    DWORD PTR [ebp+0x0],0x36
10041d1b:	jmp    0x10040a69
10041d20:	mov    DWORD PTR [ebp+0x0],0x1b
10041d27:	jmp    0x10040a69
10041d2c:	mov    DWORD PTR [ebp+0x0],0xe
10041d33:	jmp    0x10040a6d
10041d38:	mov    DWORD PTR [ebp+0x0],0x14
10041d3f:	jmp    0x10040a6d
10041d44:	mov    ecx,DWORD PTR [esp+0x20]
10041d48:	mov    DWORD PTR [ecx],0x1d
10041d4e:	jmp    0x10040a6d
10041d53:	mov    edx,DWORD PTR [esp+0x20]
10041d57:	mov    DWORD PTR [edx],0x3a
10041d5d:	jmp    0x10040a6d
10041d62:	mov    edx,DWORD PTR [esp+0x20]
10041d66:	mov    DWORD PTR [edx],0x3e
10041d6c:	jmp    0x10040a6d
10041d71:	mov    eax,DWORD PTR [esp+0x20]
10041d75:	mov    DWORD PTR [eax],0x2a
10041d7b:	jmp    0x10040a6d
10041d80:	mov    ecx,DWORD PTR [esp+0x20]
10041d84:	mov    DWORD PTR [ecx],0x30
10041d8a:	jmp    0x10040a6d
10041d8f:	mov    edx,DWORD PTR [esp+0x20]
10041d93:	mov    DWORD PTR [edx],0xf
10041d99:	jmp    0x10040a69
10041d9e:	mov    DWORD PTR [ebx],0x2d
10041da4:	jmp    0x10040a6d
10041da9:	lea    ecx,[ecx+0x0]
10041dac:	sbb    eax,DWORD PTR ss:[eax+edx*1]
10041db0:	cmc    
10041db1:	test   BYTE PTR [ebx],0x10
10041db4:	mov    ch,0x9
10041db6:	add    al,0x10
10041db8:	jb     0x10041dba
10041dba:	add    al,0x10
10041dbc:	jl     0x10041dbe
10041dbe:	add    al,0x10
10041dc0:	adc    bh,dh
10041dc2:	add    edx,DWORD PTR [eax]
10041dc4:	mov    eax,DWORD PTR [eax]
10041dc6:	add    al,0x10
10041dc8:	outs   dx,DWORD PTR ds:[esi]
10041dc9:	test   DWORD PTR [ebx],0x411c110
10041dcf:	adc    BYTE PTR [edi-0x9],cl
10041dd2:	add    edx,DWORD PTR [eax]
10041dd4:	(bad)  
10041dd5:	test   BYTE PTR [ebx],0x10
10041dd8:	cmp    DWORD PTR [eax],eax
10041dda:	add    al,0x10
10041ddc:	fdivr  st(4),st
10041dde:	add    edx,DWORD PTR [eax]
10041de0:	add    BYTE PTR [esp+ecx*1],cl
10041de3:	or     al,0xc
10041de5:	or     al,0xc
10041de7:	or     al,0xc
10041de9:	or     al,0xc
10041deb:	or     al,0xc
10041ded:	or     al,0xc
10041def:	or     al,0xc
10041df1:	or     al,0xc
10041df3:	or     al,0xc
10041df5:	or     al,0xc
10041df7:	or     al,0xc
10041df9:	or     al,0xc
10041dfb:	or     al,0xc
10041dfd:	or     al,0xc
10041dff:	or     al,0xc
10041e01:	or     al,0xc
10041e03:	or     al,0x1
10041e05:	or     al,0xc
10041e07:	or     al,0x2
10041e09:	add    BYTE PTR [ebx],al
10041e0b:	add    al,0xc
10041e0d:	or     al,0x5
10041e0f:	or     al,0xc
10041e11:	or     al,0xc
10041e13:	or     al,0xc
10041e15:	or     al,0xc
10041e17:	or     al,0xc
10041e19:	or     al,0xc
10041e1b:	or     al,0xc
10041e1d:	or     al,0xc
10041e1f:	push   es
10041e20:	or     al,0xc
10041e22:	or     al,0xc
10041e24:	or     al,0xc
10041e26:	or     al,0xc
10041e28:	or     al,0xc
10041e2a:	or     al,0xc
10041e2c:	or     al,0xc
10041e2e:	or     al,0xc
10041e30:	or     al,0xc
10041e32:	or     al,0xc
10041e34:	or     al,0xc
10041e36:	or     al,0xc
10041e38:	or     al,0xc
10041e3a:	or     al,0x7
10041e3c:	or     BYTE PTR [ecx],cl
10041e3e:	or     cl,BYTE PTR [esp+ecx*1]
10041e41:	or     al,0xc
10041e43:	or     al,0xc
10041e45:	or     al,0xc
10041e47:	or     al,0xc
10041e49:	or     al,0xc
10041e4b:	or     al,0xc
10041e4d:	or     al,0xc
10041e4f:	or     al,0xc
10041e51:	or     al,0xc
10041e53:	or     al,0xc
10041e55:	or     al,0xc
10041e57:	or     al,0xc
10041e59:	or     al,0xc
10041e5b:	or     eax,DWORD PTR [eax]
10041e5d:	lea    ecx,[ecx+0x0]
10041e60:	jnp    0x10041e5d
10041e62:	add    edx,DWORD PTR [eax]
10041e64:	jmp    0x3fc:0x311003fa
10041e6b:	adc    ch,bh
10041e6d:	sti    
10041e6e:	add    edx,DWORD PTR [eax]
10041e70:	retf   
10041e71:	sti    
10041e72:	add    edx,DWORD PTR [eax]
10041e74:	stos   BYTE PTR es:[edi],al
10041e75:	sti    
10041e76:	add    edx,DWORD PTR [eax]
10041e78:	wbinvd 
10041e7a:	add    al,0x10
10041e7c:	pop    ss
10041e7d:	or     DWORD PTR [eax+edx*1],eax
10041e80:	pop    ds
10041e81:	or     DWORD PTR [eax+edx*1],eax
10041e84:	and    al,0x9
10041e86:	add    al,0x10
10041e88:	cmp    eax,0x42100409
10041e8d:	or     DWORD PTR [eax+edx*1],eax
10041e90:	inc    edi
10041e91:	or     DWORD PTR [eax+edx*1],eax
10041e94:	dec    esp
10041e95:	or     DWORD PTR [eax+edx*1],eax
10041e98:	sub    DWORD PTR [ecx],ecx
10041e9a:	add    al,0x10
10041e9c:	or     DWORD PTR cs:[eax+edx*1],eax
10041ea0:	xor    ecx,DWORD PTR [ecx]
10041ea2:	add    al,0x10
10041ea4:	cmp    BYTE PTR [ecx],cl
10041ea6:	add    al,0x10
10041ea8:	push   ecx
10041ea9:	or     DWORD PTR [eax+edx*1],eax
10041eac:	add    BYTE PTR [ecx+eax*1],cl
10041eaf:	or     al,0x2
10041eb1:	or     al,0x3
10041eb3:	or     al,0xc
10041eb5:	or     al,0xc
10041eb7:	or     al,0xc
10041eb9:	add    al,0xc
10041ebb:	add    eax,0x70c060c
10041ec0:	or     al,0xc
10041ec2:	or     al,0xc
10041ec4:	or     al,0xc
10041ec6:	or     BYTE PTR [ecx+ecx*1],cl
10041ec9:	or     al,0xa
10041ecb:	or     al,0xb
10041ecd:	lea    ecx,[ecx+0x0]
10041ed0:	and    eax,0xed10040e
10041ed5:	or     al,BYTE PTR [eax+edx*1]
10041ed8:	mov    WORD PTR [ecx],ss
10041eda:	add    al,0x10
10041edc:	js     0x10041eec
10041ede:	add    al,0x10
10041ee0:	xor    al,0xb
10041ee2:	add    al,0x10
10041ee4:	mov    al,ds:0x2d100411
10041ee9:	or     eax,DWORD PTR [eax+edx*1]
10041eec:	push   ebx
10041eed:	push   cs
10041eee:	add    al,0x10
10041ef0:	push   ss
10041ef1:	push   cs
10041ef2:	add    al,0x10
10041ef4:	and    eax,0x3410040f
10041ef9:	(bad)  
10041efb:	adc    ch,cl
10041efd:	(bad)  
10041eff:	adc    BYTE PTR [edx+0x29100411],bl
10041f05:	or     eax,DWORD PTR [eax+edx*1]
10041f08:	sti    
10041f09:	adc    eax,DWORD PTR [eax+edx*1]
10041f0c:	add    BYTE PTR [esi],cl
10041f0e:	add    DWORD PTR [esi],ecx
10041f10:	push   cs
10041f11:	add    al,BYTE PTR [ebx]
10041f13:	add    al,0xe
10041f15:	push   cs
10041f16:	add    eax,0xe0e050e
10041f1b:	add    eax,0x5050505
10041f20:	add    eax,0x5050505
10041f25:	push   es
10041f26:	push   cs
10041f27:	pop    es
10041f28:	or     BYTE PTR [ecx],cl
10041f2a:	push   cs
10041f2b:	push   cs
10041f2c:	push   cs
10041f2d:	push   cs
10041f2e:	or     cl,BYTE PTR [esi]
10041f30:	push   cs
10041f31:	push   cs
10041f32:	push   cs
10041f33:	push   cs
10041f34:	push   cs
10041f35:	push   cs
10041f36:	push   cs
10041f37:	push   cs
10041f38:	push   cs
10041f39:	push   cs
10041f3a:	push   cs
10041f3b:	or     ecx,DWORD PTR [esi]
10041f3d:	or     al,0xe
10041f3f:	push   cs
10041f40:	push   cs
10041f41:	push   cs
10041f42:	push   cs
10041f43:	push   cs
10041f44:	push   cs
10041f45:	push   cs
10041f46:	push   cs
10041f47:	push   cs
10041f48:	push   cs
10041f49:	push   cs
10041f4a:	push   cs
10041f4b:	push   cs
10041f4c:	push   cs
10041f4d:	push   cs
10041f4e:	push   cs
10041f4f:	push   cs
10041f50:	push   cs
10041f51:	push   cs
10041f52:	push   cs
10041f53:	push   cs
10041f54:	push   cs
10041f55:	push   cs
10041f56:	push   cs
10041f57:	push   cs
10041f58:	push   cs
10041f59:	push   cs
10041f5a:	push   cs
10041f5b:	push   cs
10041f5c:	push   cs
10041f5d:	push   cs
10041f5e:	push   cs
10041f5f:	push   cs
10041f60:	push   cs
10041f61:	push   cs
10041f62:	push   cs
10041f63:	push   cs
10041f64:	push   cs
10041f65:	push   cs
10041f66:	push   cs
10041f67:	or     eax,0x1004143c
10041f6c:	inc    edx
10041f6d:	adc    al,0x4
10041f6f:	adc    BYTE PTR [ecx+0x14],ah
10041f72:	add    al,0x10
10041f74:	imul   edx,DWORD PTR [esp+eax*1],0x4144d10
10041f7b:	adc    BYTE PTR [edx+0x14],dl
10041f7e:	add    al,0x10
10041f80:	push   edi
10041f81:	adc    al,0x4
10041f83:	adc    BYTE PTR [esp+edx*1+0x4],bl
10041f87:	adc    BYTE PTR [edx],al
10041f89:	sbb    eax,0x8001004
10041f8e:	or     BYTE PTR [eax],cl
10041f90:	or     BYTE PTR [eax],cl
10041f92:	or     BYTE PTR [eax],cl
10041f94:	or     BYTE PTR [eax],cl
10041f96:	or     BYTE PTR [eax],cl
10041f98:	or     BYTE PTR [eax],cl
10041f9a:	or     BYTE PTR [eax],cl
10041f9c:	or     BYTE PTR [eax],cl
10041f9e:	or     BYTE PTR [eax],cl
10041fa0:	or     BYTE PTR [eax],cl
10041fa2:	or     BYTE PTR [eax],cl
10041fa4:	or     BYTE PTR [eax],cl
10041fa6:	or     BYTE PTR [eax],cl
10041fa8:	or     BYTE PTR [ecx],al
10041faa:	or     BYTE PTR [eax],cl
10041fac:	or     BYTE PTR [eax],cl
10041fae:	or     BYTE PTR [eax],cl
10041fb0:	or     BYTE PTR [eax],cl
10041fb2:	or     BYTE PTR [eax],cl
10041fb4:	add    cl,BYTE PTR [eax]
10041fb6:	or     BYTE PTR [ebx],al
10041fb8:	or     BYTE PTR [eax],cl
10041fba:	or     BYTE PTR [eax],cl
10041fbc:	or     BYTE PTR [eax],cl
10041fbe:	or     BYTE PTR [eax],cl
10041fc0:	or     BYTE PTR [eax],cl
10041fc2:	or     BYTE PTR [eax],cl
10041fc4:	or     BYTE PTR [eax],cl
10041fc6:	or     BYTE PTR [eax],cl
10041fc8:	add    al,0x8
10041fca:	or     BYTE PTR [eax],cl
10041fcc:	add    eax,0x8080808
10041fd1:	or     BYTE PTR [esi],al
10041fd3:	or     BYTE PTR [eax],cl
10041fd5:	or     BYTE PTR [eax],cl
10041fd7:	pop    es
10041fd8:	int3   
10041fd9:	int3   
10041fda:	int3   
10041fdb:	int3   
10041fdc:	int3   
10041fdd:	int3   
10041fde:	int3   
10041fdf:	int3   
10041fe0:	push   ebp
10041fe1:	mov    ebp,esp
10041fe3:	and    esp,0xfffffff8
10041fe6:	sub    esp,0x3c
10041fe9:	mov    eax,DWORD PTR [ebp+0x14]
10041fec:	mov    ecx,DWORD PTR [eax]
10041fee:	mov    eax,DWORD PTR [ebp+0x30]
10041ff1:	mov    edx,DWORD PTR [ebp+0x10]
10041ff4:	mov    DWORD PTR [esp+0x34],eax
10041ff8:	mov    eax,0xfffffffe
10041ffd:	push   ebx
10041ffe:	mov    ebx,DWORD PTR [edx]
10042000:	mov    DWORD PTR [esp+0xc],eax
10042004:	mov    DWORD PTR [esp+0x20],eax
10042008:	mov    eax,DWORD PTR [ebp+0x24]
1004200b:	push   esi
1004200c:	mov    esi,DWORD PTR [ebp+0x38]
1004200f:	mov    DWORD PTR [esp+0x18],ecx
10042013:	lea    ecx,[eax+0x6]
10042016:	mov    DWORD PTR [esp+0x40],ebx
1004201a:	mov    DWORD PTR [esp+0xc],ecx
1004201e:	mov    BYTE PTR [ebx+0x1],0x0
10042022:	push   edi
10042023:	mov    edi,DWORD PTR [ebp+0x34]
10042026:	mov    BYTE PTR [ebx+0x2],0x0
1004202a:	neg    esi
1004202c:	mov    DWORD PTR [esp+0x24],ebx
10042030:	mov    DWORD PTR [esp+0x3c],ebx
10042034:	lea    ebx,[ebx+eax*1+0x3]
10042038:	mov    eax,DWORD PTR [edi+0x30]
1004203b:	sbb    esi,esi
1004203d:	lea    edx,[esp+0x10]
10042041:	mov    DWORD PTR [esp+0x34],0x0
10042049:	mov    DWORD PTR [esp+0x2c],eax
1004204d:	mov    DWORD PTR [esp+0x38],eax
10042051:	and    esi,edx
10042053:	cmp    DWORD PTR [ebp+0x20],0x0
10042057:	mov    DWORD PTR [esp+0x18],ebx
1004205b:	je     0x10042064
1004205d:	mov    eax,DWORD PTR [esp+0x38]
10042061:	mov    DWORD PTR [edi+0x30],eax
10042064:	mov    eax,DWORD PTR [ebp+0x8]
10042067:	mov    ecx,eax
10042069:	and    ecx,0x7
1004206c:	cmp    ecx,DWORD PTR [ebp+0xc]
1004206f:	je     0x10042087
10042071:	mov    BYTE PTR [ebx],0x19
10042074:	add    ebx,0x1
10042077:	and    al,0x7
10042079:	mov    BYTE PTR [ebx],al
1004207b:	add    ebx,0x1
1004207e:	add    DWORD PTR [esp+0x10],0x2
10042083:	mov    DWORD PTR [esp+0x18],ebx
10042087:	cmp    DWORD PTR [ebp+0x1c],0x0
1004208b:	je     0x100420aa
1004208d:	mov    BYTE PTR [ebx],0x5c
10042090:	add    ebx,0x1
10042093:	mov    BYTE PTR [ebx],0x0
10042096:	mov    BYTE PTR [ebx+0x1],0x0
1004209a:	mov    DWORD PTR [esp+0x34],ebx
1004209e:	add    ebx,0x2
100420a1:	add    DWORD PTR [esp+0x10],0x3
100420a6:	mov    DWORD PTR [esp+0x18],ebx
100420aa:	push   esi
100420ab:	push   edi
100420ac:	lea    edx,[esp+0x48]
100420b0:	push   edx
100420b1:	lea    eax,[esp+0x2c]
100420b5:	push   eax
100420b6:	lea    ecx,[esp+0x40]
100420ba:	push   ecx
100420bb:	mov    ecx,DWORD PTR [ebp+0x18]
100420be:	lea    edx,[esp+0x30]
100420c2:	push   edx
100420c3:	lea    eax,[ebp+0x8]
100420c6:	push   eax
100420c7:	lea    edx,[esp+0x34]
100420cb:	call   0x1003f270
100420d0:	add    esp,0x1c
100420d3:	test   eax,eax
100420d5:	je     0x100421f5
100420db:	mov    eax,DWORD PTR [edi+0x30]
100420de:	cmp    eax,DWORD PTR [esp+0x2c]
100420e2:	jle    0x100420e8
100420e4:	mov    DWORD PTR [esp+0x2c],eax
100420e8:	cmp    DWORD PTR [ebp+0x38],0x0
100420ec:	mov    ebx,DWORD PTR [esp+0x18]
100420f0:	mov    ecx,DWORD PTR [esp+0x24]
100420f4:	jne    0x10042194
100420fa:	cmp    BYTE PTR [ecx],0x54
100420fd:	mov    edx,DWORD PTR [esp+0x30]
10042101:	je     0x10042111
10042103:	mov    eax,DWORD PTR [esp+0x20]
10042107:	mov    DWORD PTR [esp+0x28],edx
1004210b:	mov    DWORD PTR [esp+0x14],eax
1004210f:	jmp    0x10042164
10042111:	mov    eax,DWORD PTR [esp+0x28]
10042115:	test   eax,eax
10042117:	jl     0x10042130
10042119:	cmp    eax,edx
1004211b:	je     0x10042144
1004211d:	cmp    DWORD PTR [esp+0x14],0x0
10042122:	jge    0x10042128
10042124:	mov    DWORD PTR [esp+0x14],eax
10042128:	mov    DWORD PTR [esp+0x28],0xffffffff
10042130:	test   edx,edx
10042132:	jl     0x10042144
10042134:	mov    eax,DWORD PTR [esp+0x20]
10042138:	test   eax,eax
1004213a:	jge    0x10042148
1004213c:	mov    eax,edx
1004213e:	mov    DWORD PTR [esp+0x20],eax
10042142:	jmp    0x10042148
10042144:	mov    eax,DWORD PTR [esp+0x20]
10042148:	mov    edx,eax
1004214a:	xor    edx,DWORD PTR [esp+0x14]
1004214e:	test   edx,0xfffffdff
10042154:	je     0x10042160
10042156:	mov    DWORD PTR [esp+0x14],0xffffffff
1004215e:	jmp    0x10042164
10042160:	or     DWORD PTR [esp+0x14],eax
10042164:	cmp    DWORD PTR [ebp+0x1c],0x0
10042168:	je     0x10042194
1004216a:	mov    eax,DWORD PTR [ebp+0x8]
1004216d:	push   eax
1004216e:	push   ecx
1004216f:	mov    BYTE PTR [ebx],0x0
10042172:	call   0x1003e5d0
10042177:	add    esp,0x8
1004217a:	test   eax,eax
1004217c:	jl     0x10042207
10042182:	mov    edi,DWORD PTR [esp+0x34]
10042186:	mov    ecx,eax
10042188:	sar    ecx,0x8
1004218b:	mov    BYTE PTR [edi],cl
1004218d:	mov    ecx,DWORD PTR [esp+0x24]
10042191:	mov    BYTE PTR [edi+0x1],al
10042194:	mov    edi,DWORD PTR [esp+0x1c]
10042198:	cmp    BYTE PTR [edi],0x7c
1004219b:	jne    0x1004222b
100421a1:	cmp    DWORD PTR [ebp+0x38],0x0
100421a5:	je     0x100421c7
100421a7:	mov    edx,DWORD PTR [ebp+0x10]
100421aa:	add    DWORD PTR [esp+0x10],0x3
100421af:	mov    eax,DWORD PTR [edx]
100421b1:	mov    ecx,DWORD PTR [ebp+0x24]
100421b4:	add    edi,0x1
100421b7:	mov    DWORD PTR [esp+0x1c],edi
100421bb:	mov    edi,DWORD PTR [ebp+0x34]
100421be:	lea    ebx,[eax+ecx*1+0x3]
100421c2:	jmp    0x10042053
100421c7:	mov    edx,ebx
100421c9:	sub    edx,ecx
100421cb:	mov    BYTE PTR [ebx],0x54
100421ce:	mov    al,bl
100421d0:	sar    edx,0x8
100421d3:	mov    BYTE PTR [ebx+0x1],dl
100421d6:	sub    al,cl
100421d8:	mov    BYTE PTR [ebx+0x2],al
100421db:	mov    DWORD PTR [esp+0x24],ebx
100421df:	mov    DWORD PTR [esp+0x44],ebx
100421e3:	add    ebx,0x3
100421e6:	add    edi,0x1
100421e9:	mov    DWORD PTR [esp+0x1c],edi
100421ed:	mov    edi,DWORD PTR [ebp+0x34]
100421f0:	jmp    0x10042053
100421f5:	mov    ecx,DWORD PTR [esp+0x1c]
100421f9:	mov    edx,DWORD PTR [ebp+0x14]
100421fc:	mov    DWORD PTR [edx],ecx
100421fe:	xor    eax,eax
10042200:	pop    edi
10042201:	pop    esi
10042202:	pop    ebx
10042203:	mov    esp,ebp
10042205:	pop    ebp
10042206:	ret    
10042207:	mov    ecx,DWORD PTR [ebp+0x18]
1004220a:	mov    edx,DWORD PTR [esp+0x1c]
1004220e:	sub    eax,0xfffffffe
10042211:	neg    eax
10042213:	sbb    eax,eax
10042215:	and    eax,0xfffffff5
10042218:	add    eax,0x24
1004221b:	mov    DWORD PTR [ecx],eax
1004221d:	mov    eax,DWORD PTR [ebp+0x14]
10042220:	mov    DWORD PTR [eax],edx
10042222:	xor    eax,eax
10042224:	pop    edi
10042225:	pop    esi
10042226:	pop    ebx
10042227:	mov    esp,ebp
10042229:	pop    ebp
1004222a:	ret    
1004222b:	mov    esi,DWORD PTR [ebp+0x38]
1004222e:	test   esi,esi
10042230:	jne    0x10042256
10042232:	mov    eax,ebx
10042234:	sub    eax,ecx
10042236:	xor    edx,edx
10042238:	mov    dh,BYTE PTR [ecx+0x1]
1004223b:	mov    dl,BYTE PTR [ecx+0x2]
1004223e:	mov    BYTE PTR [ecx+0x2],al
10042241:	mov    esi,edx
10042243:	mov    edx,eax
10042245:	sar    edx,0x8
10042248:	mov    BYTE PTR [ecx+0x1],dl
1004224b:	sub    ecx,esi
1004224d:	test   esi,esi
1004224f:	mov    eax,esi
10042251:	jg     0x10042236
10042253:	mov    esi,DWORD PTR [ebp+0x38]
10042256:	mov    eax,DWORD PTR [esp+0x3c]
1004225a:	mov    ecx,ebx
1004225c:	sub    ecx,eax
1004225e:	mov    dl,bl
10042260:	sub    dl,al
10042262:	mov    eax,DWORD PTR [ebp+0x8]
10042265:	sar    ecx,0x8
10042268:	mov    BYTE PTR [ebx],0x55
1004226b:	mov    BYTE PTR [ebx+0x1],cl
1004226e:	mov    ecx,DWORD PTR [ebp+0xc]
10042271:	mov    BYTE PTR [ebx+0x2],dl
10042274:	and    eax,0x7
10042277:	add    ebx,0x3
1004227a:	cmp    eax,ecx
1004227c:	je     0x10042297
1004227e:	cmp    BYTE PTR [edi],0x29
10042281:	jne    0x10042297
10042283:	mov    BYTE PTR [ebx],0x19
10042286:	add    ebx,0x1
10042289:	mov    BYTE PTR [ebx],cl
1004228b:	mov    ecx,DWORD PTR [esp+0x10]
1004228f:	add    ebx,0x1
10042292:	add    ecx,0x2
10042295:	jmp    0x1004229b
10042297:	mov    ecx,DWORD PTR [esp+0x10]
1004229b:	test   esi,esi
1004229d:	mov    eax,DWORD PTR [esp+0x2c]
100422a1:	mov    edx,DWORD PTR [ebp+0x34]
100422a4:	mov    DWORD PTR [edx+0x30],eax
100422a7:	mov    eax,DWORD PTR [ebp+0x10]
100422aa:	mov    edx,DWORD PTR [ebp+0x14]
100422ad:	mov    DWORD PTR [eax],ebx
100422af:	mov    eax,DWORD PTR [ebp+0x28]
100422b2:	mov    DWORD PTR [edx],edi
100422b4:	mov    edx,DWORD PTR [esp+0x28]
100422b8:	mov    DWORD PTR [eax],edx
100422ba:	mov    eax,DWORD PTR [ebp+0x2c]
100422bd:	mov    edx,DWORD PTR [esp+0x14]
100422c1:	mov    DWORD PTR [eax],edx
100422c3:	je     0x100422e8
100422c5:	mov    eax,DWORD PTR [esi]
100422c7:	mov    edx,0x7fffffeb
100422cc:	sub    edx,eax
100422ce:	cmp    edx,ecx
100422d0:	jge    0x100422e4
100422d2:	mov    eax,DWORD PTR [ebp+0x18]
100422d5:	mov    DWORD PTR [eax],0x14
100422db:	xor    eax,eax
100422dd:	pop    edi
100422de:	pop    esi
100422df:	pop    ebx
100422e0:	mov    esp,ebp
100422e2:	pop    ebp
100422e3:	ret    
100422e4:	add    eax,ecx
100422e6:	mov    DWORD PTR [esi],eax
100422e8:	pop    edi
100422e9:	pop    esi
100422ea:	mov    eax,0x1
100422ef:	pop    ebx
100422f0:	mov    esp,ebp
100422f2:	pop    ebp
100422f3:	ret    
100422f4:	int3   
100422f5:	int3   
100422f6:	int3   
100422f7:	int3   
100422f8:	int3   
100422f9:	int3   
100422fa:	int3   
100422fb:	int3   
100422fc:	int3   
100422fd:	int3   
100422fe:	int3   
100422ff:	int3   
10042300:	push   ebx
10042301:	push   ebp
10042302:	mov    ebp,DWORD PTR [esp+0xc]
10042306:	push   esi
10042307:	push   edi
10042308:	mov    edi,DWORD PTR [esp+0x18]
1004230c:	lea    esp,[esp+0x0]
10042310:	movzx  eax,BYTE PTR [ebp+0x0]
10042314:	movzx  eax,BYTE PTR [eax+0x1006fa18]
1004231b:	xor    ebx,ebx
1004231d:	add    eax,ebp
1004231f:	lea    esi,[ebx+0x2]
10042322:	call   0x1003e4d0
10042327:	movzx  ecx,BYTE PTR [eax]
1004232a:	cmp    ecx,0x5e
1004232d:	je     0x10042396
1004232f:	cmp    ecx,0x5f
10042332:	jne    0x1004234c
10042334:	xor    ecx,ecx
10042336:	mov    ch,BYTE PTR [eax+0x3]
10042339:	lea    edx,[ebx+0x1]
1004233c:	mov    cl,BYTE PTR [eax+0x4]
1004233f:	cmp    ecx,0x20
10042342:	jge    0x10042346
10042344:	shl    edx,cl
10042346:	or     edx,DWORD PTR [esp+0x1c]
1004234a:	jmp    0x1004239a
1004234c:	cmp    ecx,0x58
1004234f:	je     0x10042396
10042351:	cmp    ecx,0x5d
10042354:	je     0x10042396
10042356:	cmp    ecx,0x60
10042359:	je     0x10042396
1004235b:	cmp    ecx,0x39
1004235e:	je     0x10042384
10042360:	cmp    ecx,0x3a
10042363:	je     0x10042384
10042365:	cmp    ecx,0x42
10042368:	je     0x10042384
1004236a:	cmp    ecx,0x1
1004236d:	je     0x100423ae
1004236f:	cmp    ecx,esi
10042371:	je     0x100423ae
10042373:	test   BYTE PTR [edi],0x2
10042376:	jne    0x1004237d
10042378:	cmp    ecx,0x1a
1004237b:	je     0x100423ae
1004237d:	pop    edi
1004237e:	pop    esi
1004237f:	pop    ebp
10042380:	xor    eax,eax
10042382:	pop    ebx
10042383:	ret    
10042384:	cmp    BYTE PTR [eax+0x1],0xd
10042388:	jne    0x1004237d
1004238a:	mov    edx,DWORD PTR [esp+0x20]
1004238e:	test   DWORD PTR [esp+0x1c],edx
10042392:	jne    0x1004237d
10042394:	jmp    0x100423ae
10042396:	mov    edx,DWORD PTR [esp+0x1c]
1004239a:	mov    ecx,DWORD PTR [esp+0x20]
1004239e:	push   ecx
1004239f:	push   edx
100423a0:	push   edi
100423a1:	push   eax
100423a2:	call   0x10042300
100423a7:	add    esp,0x10
100423aa:	test   eax,eax
100423ac:	je     0x1004237d
100423ae:	xor    eax,eax
100423b0:	mov    ah,BYTE PTR [ebp+0x1]
100423b3:	mov    al,BYTE PTR [ebp+0x2]
100423b6:	add    ebp,eax
100423b8:	cmp    BYTE PTR [ebp+0x0],0x54
100423bc:	je     0x10042310
100423c2:	pop    edi
100423c3:	pop    esi
100423c4:	pop    ebp
100423c5:	mov    eax,0x1
100423ca:	pop    ebx
100423cb:	ret    
100423cc:	int3   
100423cd:	int3   
100423ce:	int3   
100423cf:	int3   
100423d0:	push   ebp
100423d1:	mov    ebp,DWORD PTR [esp+0xc]
100423d5:	push   esi
100423d6:	mov    esi,DWORD PTR [esp+0xc]
100423da:	push   edi
100423db:	mov    edi,DWORD PTR [esp+0x18]
100423df:	nop
100423e0:	movzx  eax,BYTE PTR [esi]
100423e3:	movzx  eax,BYTE PTR [eax+0x1006fa18]
100423ea:	movzx  edx,BYTE PTR [eax+esi*1]
100423ee:	add    eax,esi
100423f0:	mov    ecx,edx
100423f2:	sub    ecx,0x4
100423f5:	cmp    ecx,0x62
100423f8:	ja     0x10042429
100423fa:	lea    ebx,[ebx+0x0]
10042400:	movzx  ecx,BYTE PTR [ecx+0x100424c0]
10042407:	jmp    DWORD PTR [ecx*4+0x100424b0]
1004240e:	add    eax,0x2
10042411:	jmp    0x1004241c
10042413:	movzx  edx,BYTE PTR [edx+0x1006fa18]
1004241a:	add    eax,edx
1004241c:	movzx  edx,BYTE PTR [eax]
1004241f:	mov    ecx,edx
10042421:	sub    ecx,0x4
10042424:	cmp    ecx,0x62
10042427:	jbe    0x10042400
10042429:	movzx  ecx,BYTE PTR [eax]
1004242c:	cmp    ecx,0x5e
1004242f:	je     0x10042485
10042431:	cmp    ecx,0x5f
10042434:	jne    0x10042450
10042436:	xor    ecx,ecx
10042438:	mov    ch,BYTE PTR [eax+0x3]
1004243b:	mov    edx,0x1
10042440:	mov    cl,BYTE PTR [eax+0x4]
10042443:	cmp    ecx,0x20
10042446:	jge    0x1004244a
10042448:	shl    edx,cl
1004244a:	push   edi
1004244b:	or     edx,ebp
1004244d:	push   edx
1004244e:	jmp    0x10042487
10042450:	cmp    ecx,0x58
10042453:	je     0x10042485
10042455:	cmp    ecx,0x5d
10042458:	je     0x10042485
1004245a:	cmp    ecx,0x60
1004245d:	je     0x10042485
1004245f:	cmp    ecx,0x39
10042462:	je     0x10042479
10042464:	cmp    ecx,0x3a
10042467:	je     0x10042479
10042469:	cmp    ecx,0x42
1004246c:	je     0x10042479
1004246e:	cmp    ecx,0x1a
10042471:	je     0x10042494
10042473:	pop    edi
10042474:	pop    esi
10042475:	xor    eax,eax
10042477:	pop    ebp
10042478:	ret    
10042479:	cmp    BYTE PTR [eax+0x1],0xc
1004247d:	jne    0x10042473
1004247f:	test   edi,ebp
10042481:	jne    0x10042473
10042483:	jmp    0x10042494
10042485:	push   edi
10042486:	push   ebp
10042487:	push   eax
10042488:	call   0x100423d0
1004248d:	add    esp,0xc
10042490:	test   eax,eax
10042492:	je     0x10042473
10042494:	xor    eax,eax
10042496:	mov    ah,BYTE PTR [esi+0x1]
10042499:	mov    al,BYTE PTR [esi+0x2]
1004249c:	add    esi,eax
1004249e:	cmp    BYTE PTR [esi],0x54
100424a1:	je     0x100423e0
100424a7:	pop    edi
100424a8:	pop    esi
100424a9:	mov    eax,0x1
100424ae:	pop    ebp
100424af:	ret    
100424b0:	sub    DWORD PTR [esp+eax*1],esp
100424b3:	adc    BYTE PTR [esi],cl
100424b5:	and    al,0x4
100424b7:	adc    BYTE PTR [ebx],dl
100424b9:	and    al,0x4
100424bb:	adc    BYTE PTR [ecx],ch
100424bd:	and    al,0x4
100424bf:	adc    BYTE PTR [eax],al
100424c1:	add    BYTE PTR [ebx],al
100424c3:	add    eax,DWORD PTR [ebx]
100424c5:	add    eax,DWORD PTR [ebx]
100424c7:	add    eax,DWORD PTR [ebx]
100424c9:	add    eax,DWORD PTR [ebx]
100424cb:	add    eax,DWORD PTR [ebx]
100424cd:	add    eax,DWORD PTR [ebx]
100424cf:	add    eax,DWORD PTR [ebx]
100424d1:	add    eax,DWORD PTR [ebx]
100424d3:	add    eax,DWORD PTR [ebx]
100424d5:	add    DWORD PTR [ebx],eax
100424d7:	add    eax,DWORD PTR [ebx]
100424d9:	add    eax,DWORD PTR [ebx]
100424db:	add    eax,DWORD PTR [ebx]
100424dd:	add    eax,DWORD PTR [ebx]
100424df:	add    eax,DWORD PTR [ebx]
100424e1:	add    eax,DWORD PTR [ebx]
100424e3:	add    eax,DWORD PTR [ebx]
100424e5:	add    eax,DWORD PTR [ebx]
100424e7:	add    eax,DWORD PTR [ebx]
100424e9:	add    eax,DWORD PTR [ebx]
100424eb:	add    eax,DWORD PTR [ebx]
100424ed:	add    eax,DWORD PTR [ebx]
100424ef:	add    eax,DWORD PTR [ebx]
100424f1:	add    eax,DWORD PTR [ebx]
100424f3:	add    eax,DWORD PTR [ebx]
100424f5:	add    eax,DWORD PTR [ebx]
100424f7:	add    eax,DWORD PTR [ebx]
100424f9:	add    eax,DWORD PTR [ebx]
100424fb:	add    eax,DWORD PTR [ebx]
100424fd:	add    eax,DWORD PTR [ebx]
100424ff:	add    eax,DWORD PTR [ebx]
10042501:	add    eax,DWORD PTR [ebx]
10042503:	add    eax,DWORD PTR [ebx]
10042505:	add    eax,DWORD PTR [ebx]
10042507:	add    eax,DWORD PTR [ebx]
10042509:	add    eax,DWORD PTR [ebx]
1004250b:	add    eax,DWORD PTR [ebx]
1004250d:	add    eax,DWORD PTR [ebx]
1004250f:	add    al,BYTE PTR [ebx]
10042511:	add    eax,DWORD PTR [ebx]
10042513:	add    eax,DWORD PTR [ebx]
10042515:	add    BYTE PTR [eax],al
10042517:	add    BYTE PTR [ebx],al
10042519:	add    eax,DWORD PTR [ebx]
1004251b:	add    eax,DWORD PTR [ebx]
1004251d:	add    eax,DWORD PTR [ebx]
1004251f:	add    eax,DWORD PTR [edx]
10042521:	add    al,BYTE PTR [edx]
10042523:	int3   
10042524:	int3   
10042525:	int3   
10042526:	int3   
10042527:	int3   
10042528:	int3   
10042529:	int3   
1004252a:	int3   
1004252b:	int3   
1004252c:	int3   
1004252d:	int3   
1004252e:	int3   
1004252f:	int3   
10042530:	push   ebx
10042531:	push   ebp
10042532:	push   esi
10042533:	push   edi
10042534:	mov    edi,DWORD PTR [esp+0x18]
10042538:	or     ebp,0xffffffff
1004253b:	jmp    0x10042540
1004253d:	lea    ecx,[ecx+0x0]
10042540:	mov    eax,DWORD PTR [esp+0x14]
10042544:	mov    ebx,0x1
10042549:	add    eax,0x3
1004254c:	mov    esi,ebx
1004254e:	call   0x1003e4d0
10042553:	movzx  ecx,BYTE PTR [eax]
10042556:	lea    edx,[ecx-0x1c]
10042559:	cmp    edx,0x44
1004255c:	ja     0x100425d3
1004255e:	movzx  edx,BYTE PTR [edx+0x100425ec]
10042565:	jmp    DWORD PTR [edx*4+0x100425dc]
1004256c:	xor    edx,edx
1004256e:	cmp    ecx,0x58
10042571:	sete   dl
10042574:	push   edx
10042575:	push   edi
10042576:	push   eax
10042577:	call   0x10042530
1004257c:	add    esp,0xc
1004257f:	test   eax,eax
10042581:	jl     0x100425d3
10042583:	test   ebp,ebp
10042585:	jge    0x100425ad
10042587:	mov    ebp,eax
10042589:	jmp    0x100425b1
1004258b:	add    eax,0x2
1004258e:	cmp    DWORD PTR [esp+0x1c],0x0
10042593:	je     0x100425d3
10042595:	test   ebp,ebp
10042597:	jge    0x100425a9
10042599:	test   BYTE PTR [edi],bl
1004259b:	movzx  ebp,BYTE PTR [eax+0x1]
1004259f:	je     0x100425b1
100425a1:	or     ebp,0x100
100425a7:	jmp    0x100425b1
100425a9:	movzx  eax,BYTE PTR [eax+0x1]
100425ad:	cmp    ebp,eax
100425af:	jne    0x100425d3
100425b1:	mov    eax,DWORD PTR [esp+0x14]
100425b5:	xor    ecx,ecx
100425b7:	mov    ch,BYTE PTR [eax+0x1]
100425ba:	mov    cl,BYTE PTR [eax+0x2]
100425bd:	add    eax,ecx
100425bf:	cmp    BYTE PTR [eax],0x54
100425c2:	mov    DWORD PTR [esp+0x14],eax
100425c6:	je     0x10042540
100425cc:	pop    edi
100425cd:	pop    esi
100425ce:	mov    eax,ebp
100425d0:	pop    ebp
100425d1:	pop    ebx
100425d2:	ret    
100425d3:	pop    edi
100425d4:	pop    esi
100425d5:	pop    ebp
100425d6:	or     eax,0xffffffff
100425d9:	pop    ebx
100425da:	ret    
100425db:	nop
100425dc:	mov    fs,WORD PTR ds:0x258b1004
100425e2:	add    al,0x10
100425e4:	ins    BYTE PTR es:[edi],dx
100425e5:	and    eax,0x25d31004
100425ea:	add    al,0x10
100425ec:	add    BYTE PTR [eax],al
100425ee:	add    eax,DWORD PTR [ebx]
100425f0:	add    eax,DWORD PTR [eax]
100425f2:	add    BYTE PTR [ebx],al
100425f4:	add    eax,DWORD PTR [ebx]
100425f6:	add    eax,DWORD PTR [ecx]
100425f8:	add    eax,DWORD PTR [eax]
100425fa:	add    eax,DWORD PTR [ebx]
100425fc:	add    eax,DWORD PTR [ebx]
100425fe:	add    eax,DWORD PTR [ebx]
10042600:	add    eax,DWORD PTR [ebx]
10042602:	add    eax,DWORD PTR [ebx]
10042604:	add    eax,DWORD PTR [ebx]
10042606:	add    eax,DWORD PTR [ebx]
10042608:	add    eax,DWORD PTR [ebx]
1004260a:	add    eax,DWORD PTR [ebx]
1004260c:	add    eax,DWORD PTR [ebx]
1004260e:	add    eax,DWORD PTR [ebx]
10042610:	add    eax,DWORD PTR [ebx]
10042612:	add    eax,DWORD PTR [ebx]
10042614:	add    eax,DWORD PTR [ebx]
10042616:	add    eax,DWORD PTR [ebx]
10042618:	add    eax,DWORD PTR [ebx]
1004261a:	add    eax,DWORD PTR [ebx]
1004261c:	add    eax,DWORD PTR [ebx]
1004261e:	add    eax,DWORD PTR [ebx]
10042620:	add    eax,DWORD PTR [ebx]
10042622:	add    eax,DWORD PTR [ebx]
10042624:	add    eax,DWORD PTR [ebx]
10042626:	add    eax,DWORD PTR [ebx]
10042628:	add    al,BYTE PTR [ebx]
1004262a:	add    eax,DWORD PTR [ebx]
1004262c:	add    eax,DWORD PTR [edx]
1004262e:	add    al,BYTE PTR [edx]
10042630:	add    cl,ah
10042632:	int3   
10042633:	int3   
10042634:	int3   
10042635:	int3   
10042636:	int3   
10042637:	int3   
10042638:	int3   
10042639:	int3   
1004263a:	int3   
1004263b:	int3   
1004263c:	int3   
1004263d:	int3   
1004263e:	int3   
1004263f:	int3   
10042640:	push   ebp
10042641:	mov    ebp,esp
10042643:	and    esp,0xfffffff8
10042646:	mov    eax,0x108c
1004264b:	call   0x1004a070
10042650:	mov    eax,ds:0x100801ac
10042655:	xor    eax,esp
10042657:	mov    DWORD PTR [esp+0x1088],eax
1004265e:	mov    eax,DWORD PTR [ebp+0xc]
10042661:	push   ebx
10042662:	push   esi
10042663:	push   edi
10042664:	xor    edi,edi
10042666:	mov    esi,edx
10042668:	xor    ebx,ebx
1004266a:	cmp    ecx,edi
1004266c:	mov    DWORD PTR [esp+0x18],esi
10042670:	mov    DWORD PTR [esp+0x2c],ecx
10042674:	mov    DWORD PTR [esp+0x28],eax
10042678:	mov    DWORD PTR [esp+0x14],0x1
10042680:	mov    DWORD PTR [esp+0xc],edi
10042684:	mov    DWORD PTR [esp+0x10],esi
10042688:	je     0x10042bf2
1004268e:	cmp    eax,edi
10042690:	mov    DWORD PTR [ecx],edi
10042692:	jne    0x1004269c
10042694:	lea    eax,[edi+0x10]
10042697:	jmp    0x10042bd1
1004269c:	mov    DWORD PTR [eax],edi
1004269e:	mov    eax,DWORD PTR [ebp+0x8]
100426a1:	test   eax,0x800
100426a6:	je     0x100426b2
100426a8:	mov    eax,0x20
100426ad:	jmp    0x10042bbf
100426b2:	test   eax,0xfc038580
100426b7:	je     0x100426c3
100426b9:	mov    eax,0x11
100426be:	jmp    0x10042bbf
100426c3:	mov    DWORD PTR [esp+0x30],0x1006f5d8
100426cb:	mov    DWORD PTR [esp+0x34],0x1006f6d8
100426d3:	mov    DWORD PTR [esp+0x38],0x1006f7d8
100426db:	mov    DWORD PTR [esp+0x3c],0x1006f918
100426e3:	cmp    BYTE PTR [esi],0x28
100426e6:	jne    0x1004281c
100426ec:	jmp    0x100426f2
100426ee:	mov    edi,edi
100426f0:	xor    edi,edi
100426f2:	cmp    BYTE PTR [esi+ebx*1+0x1],0x2a
100426f7:	jne    0x1004281c
100426fd:	push   0x3
100426ff:	lea    edi,[esi+ebx*1+0x2]
10042703:	push   0x1007588c
10042708:	push   edi
10042709:	call   0x1004f416
1004270e:	add    esp,0xc
10042711:	test   eax,eax
10042713:	jne    0x10042730
10042715:	mov    ecx,DWORD PTR [ebp+0x8]
10042718:	mov    eax,0x100000
1004271d:	and    ecx,0xff8fffff
10042723:	add    ebx,0x5
10042726:	or     ecx,eax
10042728:	mov    DWORD PTR [ebp+0x8],ecx
1004272b:	jmp    0x10042810
10042730:	push   0x3
10042732:	push   0x10075890
10042737:	push   edi
10042738:	call   0x1004f416
1004273d:	add    esp,0xc
10042740:	test   eax,eax
10042742:	jne    0x1004275f
10042744:	mov    ecx,DWORD PTR [ebp+0x8]
10042747:	mov    eax,0x200000
1004274c:	and    ecx,0xff8fffff
10042752:	add    ebx,0x5
10042755:	or     ecx,eax
10042757:	mov    DWORD PTR [ebp+0x8],ecx
1004275a:	jmp    0x10042810
1004275f:	push   0x5
10042761:	push   0x10075894
10042766:	push   edi
10042767:	call   0x1004f416
1004276c:	add    esp,0xc
1004276f:	test   eax,eax
10042771:	jne    0x1004278e
10042773:	mov    ecx,DWORD PTR [ebp+0x8]
10042776:	mov    eax,0x300000
1004277b:	and    ecx,0xff8fffff
10042781:	add    ebx,0x7
10042784:	or     ecx,eax
10042786:	mov    DWORD PTR [ebp+0x8],ecx
10042789:	jmp    0x10042810
1004278e:	push   0x4
10042790:	push   0x1007589c
10042795:	push   edi
10042796:	call   0x1004f416
1004279b:	add    esp,0xc
1004279e:	test   eax,eax
100427a0:	jne    0x100427ba
100427a2:	mov    ecx,DWORD PTR [ebp+0x8]
100427a5:	mov    eax,0x400000
100427aa:	and    ecx,0xff8fffff
100427b0:	add    ebx,0x6
100427b3:	or     ecx,eax
100427b5:	mov    DWORD PTR [ebp+0x8],ecx
100427b8:	jmp    0x10042810
100427ba:	push   0x8
100427bc:	push   0x100758a4
100427c1:	push   edi
100427c2:	call   0x1004f416
100427c7:	add    esp,0xc
100427ca:	test   eax,eax
100427cc:	jne    0x100427e6
100427ce:	mov    ecx,DWORD PTR [ebp+0x8]
100427d1:	mov    eax,0x500000
100427d6:	and    ecx,0xff8fffff
100427dc:	add    ebx,0xa
100427df:	or     ecx,eax
100427e1:	mov    DWORD PTR [ebp+0x8],ecx
100427e4:	jmp    0x10042810
100427e6:	push   0xc
100427e8:	push   0x100758b0
100427ed:	push   edi
100427ee:	call   0x1004f416
100427f3:	add    esp,0xc
100427f6:	test   eax,eax
100427f8:	jne    0x10042840
100427fa:	add    ebx,0xe
100427fd:	mov    eax,0x800000
10042802:	mov    edx,DWORD PTR [ebp+0x8]
10042805:	and    edx,0xfe7fffff
1004280b:	or     edx,eax
1004280d:	mov    DWORD PTR [ebp+0x8],edx
10042810:	cmp    BYTE PTR [esi+ebx*1],0x28
10042814:	je     0x100426f0
1004281a:	xor    edi,edi
1004281c:	mov    ecx,DWORD PTR [ebp+0x8]
1004281f:	mov    eax,ecx
10042821:	and    eax,0x1800000
10042826:	je     0x1004285e
10042828:	cmp    eax,0x800000
1004282d:	je     0x1004285e
1004282f:	cmp    eax,0x1000000
10042834:	je     0x1004285e
10042836:	mov    eax,0x38
1004283b:	jmp    0x10042bbf
10042840:	push   0xc
10042842:	push   0x100758c0
10042847:	push   edi
10042848:	call   0x1004f416
1004284d:	add    esp,0xc
10042850:	test   eax,eax
10042852:	jne    0x1004281a
10042854:	add    ebx,0xe
10042857:	mov    eax,0x1000000
1004285c:	jmp    0x10042802
1004285e:	mov    eax,ecx
10042860:	and    eax,0x700000
10042865:	cmp    eax,0x300000
1004286a:	mov    ecx,0x2
1004286f:	jg     0x100428c2
10042871:	je     0x100428bb
10042873:	cmp    eax,edi
10042875:	je     0x10042885
10042877:	cmp    eax,0x100000
1004287c:	je     0x100428b4
1004287e:	cmp    eax,0x200000
10042883:	jne    0x100428d0
10042885:	mov    eax,0xa
1004288a:	cmp    eax,0xff
1004288f:	mov    DWORD PTR [esp+0x80],edi
10042896:	jle    0x100428f0
10042898:	mov    DWORD PTR [esp+0x84],ecx
1004289f:	mov    ecx,eax
100428a1:	sar    ecx,0x8
100428a4:	mov    BYTE PTR [esp+0x88],cl
100428ab:	mov    BYTE PTR [esp+0x89],al
100428b2:	jmp    0x10042902
100428b4:	mov    eax,0xd
100428b9:	jmp    0x1004288a
100428bb:	mov    eax,0xd0a
100428c0:	jmp    0x1004288a
100428c2:	cmp    eax,0x400000
100428c7:	je     0x100428e3
100428c9:	cmp    eax,0x500000
100428ce:	je     0x100428da
100428d0:	mov    eax,0x38
100428d5:	jmp    0x10042bbf
100428da:	mov    DWORD PTR [esp+0x80],ecx
100428e1:	jmp    0x10042902
100428e3:	mov    DWORD PTR [esp+0x80],0x1
100428ee:	jmp    0x10042902
100428f0:	mov    DWORD PTR [esp+0x84],0x1
100428fb:	mov    BYTE PTR [esp+0x88],al
10042902:	lea    edx,[esp+0x90]
10042909:	mov    eax,edx
1004290b:	mov    DWORD PTR [esp+0x44],eax
1004290f:	mov    ecx,edx
10042911:	mov    eax,esi
10042913:	mov    DWORD PTR [esp+0x40],edx
10042917:	mov    DWORD PTR [esp+0x68],edi
1004291b:	mov    DWORD PTR [esp+0x6c],edi
1004291f:	mov    DWORD PTR [esp+0x64],edi
10042923:	mov    DWORD PTR [esp+0x60],edi
10042927:	mov    DWORD PTR [esp+0x58],edi
1004292b:	mov    DWORD PTR [esp+0x5c],edi
1004292f:	mov    DWORD PTR [esp+0x54],edi
10042933:	mov    DWORD PTR [esp+0x50],ecx
10042937:	mov    DWORD PTR [esp+0x48],esi
1004293b:	lea    edx,[eax+0x1]
1004293e:	mov    edi,edi
10042940:	mov    cl,BYTE PTR [eax]
10042942:	add    eax,0x1
10042945:	test   cl,cl
10042947:	jne    0x10042940
10042949:	sub    eax,edx
1004294b:	lea    edx,[esp+0x90]
10042952:	mov    DWORD PTR [esp+0x1c],edx
10042956:	xor    edi,edi
10042958:	lea    ecx,[esp+0x14]
1004295c:	push   ecx
1004295d:	lea    edx,[esp+0x34]
10042961:	push   edx
10042962:	push   edi
10042963:	lea    ecx,[esp+0x2c]
10042967:	push   ecx
10042968:	lea    edx,[esp+0x34]
1004296c:	push   edx
1004296d:	push   edi
1004296e:	push   edi
1004296f:	push   edi
10042970:	add    eax,esi
10042972:	lea    ecx,[esp+0x2c]
10042976:	push   ecx
10042977:	mov    DWORD PTR [esp+0x70],eax
1004297b:	mov    eax,DWORD PTR [ebp+0x8]
1004297e:	lea    edx,[esp+0x34]
10042982:	push   edx
10042983:	lea    ecx,[esp+0x44]
10042987:	mov    edx,eax
10042989:	push   ecx
1004298a:	and    edx,0x7
1004298d:	push   edx
1004298e:	add    esi,ebx
10042990:	push   eax
10042991:	mov    DWORD PTR [esp+0xac],edi
10042998:	mov    DWORD PTR [esp+0xa4],eax
1004299f:	mov    DWORD PTR [esp+0xa8],edi
100429a6:	mov    DWORD PTR [esp+0x44],esi
100429aa:	mov    BYTE PTR [esp+0xc4],0x5e
100429b2:	call   0x10041fe0
100429b7:	mov    eax,DWORD PTR [esp+0x40]
100429bb:	add    esp,0x34
100429be:	cmp    eax,edi
100429c0:	jne    0x10042bbf
100429c6:	cmp    DWORD PTR [esp+0x14],0x10000
100429ce:	jle    0x100429d8
100429d0:	lea    eax,[edi+0x14]
100429d3:	jmp    0x10042bbf
100429d8:	mov    eax,DWORD PTR [esp+0x5c]
100429dc:	mov    ecx,DWORD PTR [esp+0x14]
100429e0:	add    eax,0x3
100429e3:	imul   eax,DWORD PTR [esp+0x58]
100429e8:	lea    ebx,[eax+ecx*1+0x28]
100429ec:	push   ebx
100429ed:	call   DWORD PTR ds:0x10081508
100429f3:	mov    edi,eax
100429f5:	add    esp,0x4
100429f8:	test   edi,edi
100429fa:	jne    0x10042a04
100429fc:	lea    eax,[edi+0x15]
100429ff:	jmp    0x10042bbf
10042a04:	mov    DWORD PTR [edi+0x4],ebx
10042a07:	mov    DWORD PTR [edi],0x50435245
10042a0d:	mov    edx,DWORD PTR [esp+0x70]
10042a11:	mov    DWORD PTR [edi+0x8],edx
10042a14:	movzx  eax,WORD PTR [esp+0x74]
10042a19:	xor    ecx,ecx
10042a1b:	mov    WORD PTR [edi+0xc],ax
10042a1f:	mov    WORD PTR [edi+0xe],cx
10042a23:	mov    WORD PTR [edi+0x14],cx
10042a27:	mov    WORD PTR [edi+0x16],cx
10042a2b:	mov    WORD PTR [edi+0x18],0x28
10042a31:	movzx  edx,WORD PTR [esp+0x5c]
10042a36:	mov    WORD PTR [edi+0x1a],dx
10042a3a:	movzx  eax,WORD PTR [esp+0x58]
10042a3f:	mov    WORD PTR [edi+0x1c],ax
10042a43:	mov    WORD PTR [edi+0x1e],cx
10042a47:	mov    DWORD PTR [edi+0x20],ecx
10042a4a:	mov    DWORD PTR [edi+0x24],ecx
10042a4d:	mov    edx,DWORD PTR [esp+0x60]
10042a51:	mov    DWORD PTR [esp+0x64],edx
10042a55:	mov    DWORD PTR [esp+0x60],ecx
10042a59:	mov    DWORD PTR [esp+0x58],ecx
10042a5d:	movzx  eax,WORD PTR [edi+0x18]
10042a61:	push   ecx
10042a62:	add    eax,edi
10042a64:	mov    DWORD PTR [esp+0x58],eax
10042a68:	movzx  edx,WORD PTR [edi+0x1a]
10042a6c:	movzx  ebx,WORD PTR [edi+0x1c]
10042a70:	imul   ebx,edx
10042a73:	lea    edx,[esp+0x34]
10042a77:	push   edx
10042a78:	push   ecx
10042a79:	lea    edx,[esp+0x2c]
10042a7d:	push   edx
10042a7e:	lea    edx,[esp+0x34]
10042a82:	push   edx
10042a83:	push   ecx
10042a84:	push   ecx
10042a85:	push   ecx
10042a86:	add    ebx,eax
10042a88:	mov    DWORD PTR [esp+0x98],ecx
10042a8f:	mov    DWORD PTR [esp+0x9c],ecx
10042a96:	lea    eax,[esp+0xb0]
10042a9d:	mov    DWORD PTR [esp+0x64],ebx
10042aa1:	mov    DWORD PTR [esp+0x70],eax
10042aa5:	lea    ecx,[esp+0x2c]
10042aa9:	push   ecx
10042aaa:	mov    BYTE PTR [ebx],0x5e
10042aad:	mov    eax,DWORD PTR [edi+0x8]
10042ab0:	lea    edx,[esp+0x34]
10042ab4:	push   edx
10042ab5:	lea    ecx,[esp+0x44]
10042ab9:	mov    edx,eax
10042abb:	push   ecx
10042abc:	and    edx,0x7
10042abf:	push   edx
10042ac0:	push   eax
10042ac1:	mov    DWORD PTR [esp+0x44],esi
10042ac5:	mov    DWORD PTR [esp+0x50],ebx
10042ac9:	call   0x10041fe0
10042ace:	movzx  eax,WORD PTR [esp+0x94]
10042ad6:	mov    WORD PTR [edi+0x10],ax
10042ada:	mov    cx,WORD PTR [esp+0x9c]
10042ae2:	mov    WORD PTR [edi+0x12],cx
10042ae6:	movzx  edx,WORD PTR [esp+0xa8]
10042aee:	add    esp,0x34
10042af1:	mov    WORD PTR [edi+0xc],dx
10042af5:	cmp    DWORD PTR [esp+0x7c],0x0
10042afa:	je     0x10042b04
10042afc:	mov    DWORD PTR [esp+0x20],0xffffffff
10042b04:	cmp    DWORD PTR [esp+0xc],0x0
10042b09:	jne    0x10042b1c
10042b0b:	mov    eax,DWORD PTR [esp+0x10]
10042b0f:	cmp    BYTE PTR [eax],0x0
10042b12:	je     0x10042b1c
10042b14:	mov    DWORD PTR [esp+0xc],0x16
10042b1c:	mov    eax,DWORD PTR [esp+0x1c]
10042b20:	mov    BYTE PTR [eax],0x0
10042b23:	add    eax,0x1
10042b26:	sub    eax,ebx
10042b28:	cmp    eax,DWORD PTR [esp+0x14]
10042b2c:	jle    0x10042b38
10042b2e:	mov    DWORD PTR [esp+0xc],0x17
10042b36:	jmp    0x10042bb1
10042b38:	cmp    DWORD PTR [esp+0xc],0x0
10042b3d:	jne    0x10042bb1
10042b3f:	nop
10042b40:	mov    eax,DWORD PTR [esp+0x50]
10042b44:	lea    ecx,[esp+0x90]
10042b4b:	cmp    eax,ecx
10042b4d:	jbe    0x10042b9f
10042b4f:	sub    eax,0x2
10042b52:	mov    DWORD PTR [esp+0x50],eax
10042b56:	movzx  edx,BYTE PTR [eax+0x1]
10042b5a:	mov    dh,BYTE PTR [eax]
10042b5c:	xor    ecx,ecx
10042b5e:	mov    eax,edx
10042b60:	mov    ch,BYTE PTR [eax+ebx*1]
10042b63:	mov    DWORD PTR [esp+0x14],eax
10042b67:	mov    cl,BYTE PTR [eax+ebx*1+0x1]
10042b6b:	mov    eax,ebx
10042b6d:	mov    esi,ecx
10042b6f:	call   0x1003e7e0
10042b74:	test   eax,eax
10042b76:	je     0x10042b95
10042b78:	mov    esi,DWORD PTR [esp+0x14]
10042b7c:	mov    edx,eax
10042b7e:	sub    edx,ebx
10042b80:	sar    edx,0x8
10042b83:	sub    al,bl
10042b85:	mov    BYTE PTR [esi+ebx*1],dl
10042b88:	mov    BYTE PTR [esi+ebx*1+0x1],al
10042b8c:	cmp    DWORD PTR [esp+0xc],0x0
10042b91:	je     0x10042b40
10042b93:	jmp    0x10042bb1
10042b95:	mov    DWORD PTR [esp+0xc],0x35
10042b9d:	jmp    0x10042bb1
10042b9f:	mov    ax,WORD PTR [edi+0x12]
10042ba3:	cmp    ax,WORD PTR [edi+0x10]
10042ba7:	jbe    0x10042c09
10042ba9:	mov    DWORD PTR [esp+0xc],0xf
10042bb1:	push   edi
10042bb2:	call   DWORD PTR ds:0x1008150c
10042bb8:	mov    eax,DWORD PTR [esp+0x10]
10042bbc:	add    esp,0x4
10042bbf:	mov    ecx,DWORD PTR [esp+0x10]
10042bc3:	sub    ecx,DWORD PTR [esp+0x18]
10042bc7:	mov    edx,DWORD PTR [esp+0x28]
10042bcb:	mov    DWORD PTR [edx],ecx
10042bcd:	mov    ecx,DWORD PTR [esp+0x2c]
10042bd1:	test   eax,eax
10042bd3:	mov    edi,0x1006fc98
10042bd8:	jle    0x10042bf0
10042bda:	lea    ebx,[ebx+0x0]
10042be0:	mov    dl,BYTE PTR [edi]
10042be2:	add    edi,0x1
10042be5:	test   dl,dl
10042be7:	jne    0x10042be0
10042be9:	sub    eax,0x1
10042bec:	test   eax,eax
10042bee:	jg     0x10042be0
10042bf0:	mov    DWORD PTR [ecx],edi
10042bf2:	xor    eax,eax
10042bf4:	pop    edi
10042bf5:	pop    esi
10042bf6:	pop    ebx
10042bf7:	mov    ecx,DWORD PTR [esp+0x1088]
10042bfe:	xor    ecx,esp
10042c00:	call   0x10043615
10042c05:	mov    esp,ebp
10042c07:	pop    ebp
10042c08:	ret    
10042c09:	mov    eax,DWORD PTR [edi+0x8]
10042c0c:	test   al,0x10
10042c0e:	jne    0x10042c94
10042c14:	mov    DWORD PTR [esp+0x18],eax
10042c18:	mov    eax,DWORD PTR [esp+0x6c]
10042c1c:	push   eax
10042c1d:	push   0x0
10042c1f:	lea    ecx,[esp+0x20]
10042c23:	push   ecx
10042c24:	push   ebx
10042c25:	call   0x10042300
10042c2a:	add    esp,0x10
10042c2d:	test   eax,eax
10042c2f:	je     0x10042c37
10042c31:	or     DWORD PTR [edi+0x8],0x10
10042c35:	jmp    0x10042c94
10042c37:	mov    eax,DWORD PTR [esp+0x24]
10042c3b:	test   eax,eax
10042c3d:	jge    0x10042c53
10042c3f:	push   0x0
10042c41:	lea    edx,[esp+0x1c]
10042c45:	push   edx
10042c46:	push   ebx
10042c47:	call   0x10042530
10042c4c:	add    esp,0xc
10042c4f:	test   eax,eax
10042c51:	jl     0x10042c7b
10042c53:	mov    ecx,eax
10042c55:	and    ecx,0xff
10042c5b:	test   eax,0x100
10042c60:	je     0x10042c70
10042c62:	mov    edx,DWORD PTR [esp+0x34]
10042c66:	movzx  edx,BYTE PTR [edx+ecx*1]
10042c6a:	cmp    edx,ecx
10042c6c:	jne    0x10042c70
10042c6e:	mov    eax,ecx
10042c70:	or     WORD PTR [edi+0xc],0x2
10042c75:	mov    WORD PTR [edi+0x14],ax
10042c79:	jmp    0x10042c94
10042c7b:	mov    eax,DWORD PTR [esp+0x6c]
10042c7f:	push   eax
10042c80:	push   0x0
10042c82:	push   ebx
10042c83:	call   0x100423d0
10042c88:	add    esp,0xc
10042c8b:	test   eax,eax
10042c8d:	je     0x10042c94
10042c8f:	or     WORD PTR [edi+0xc],0x8
10042c94:	mov    eax,DWORD PTR [esp+0x20]
10042c98:	test   eax,eax
10042c9a:	jl     0x10042cd2
10042c9c:	test   BYTE PTR [edi+0x8],0x10
10042ca0:	je     0x10042ca9
10042ca2:	test   eax,0x200
10042ca7:	je     0x10042cd2
10042ca9:	mov    ecx,eax
10042cab:	and    ecx,0xff
10042cb1:	test   eax,0x100
10042cb6:	je     0x10042cc9
10042cb8:	mov    edx,DWORD PTR [esp+0x34]
10042cbc:	movzx  edx,BYTE PTR [edx+ecx*1]
10042cc0:	cmp    edx,ecx
10042cc2:	jne    0x10042cc9
10042cc4:	and    eax,0xfffffeff
10042cc9:	or     WORD PTR [edi+0xc],0x4
10042cce:	mov    WORD PTR [edi+0x16],ax
10042cd2:	mov    ecx,DWORD PTR [esp+0x1094]
10042cd9:	mov    eax,edi
10042cdb:	pop    edi
10042cdc:	pop    esi
10042cdd:	pop    ebx
10042cde:	xor    ecx,esp
10042ce0:	call   0x10043615
10042ce5:	mov    esp,ebp
10042ce7:	pop    ebp
10042ce8:	ret    
10042ce9:	int3   
10042cea:	int3   
10042ceb:	int3   
10042cec:	int3   
10042ced:	int3   
10042cee:	int3   
10042cef:	int3   
10042cf0:	mov    eax,DWORD PTR [edx]
10042cf2:	push   ebp
10042cf3:	mov    ebp,DWORD PTR [esp+0x8]
10042cf7:	push   esi
10042cf8:	mov    ecx,eax
10042cfa:	and    ecx,0xff0000
10042d00:	mov    esi,eax
10042d02:	shr    esi,0x10
10042d05:	or     ecx,esi
10042d07:	mov    esi,eax
10042d09:	and    esi,0xff00
10042d0f:	shl    eax,0x10
10042d12:	or     esi,eax
10042d14:	shr    ecx,0x8
10042d17:	shl    esi,0x8
10042d1a:	or     ecx,esi
10042d1c:	cmp    ecx,0x50435245
10042d22:	je     0x10042d29
10042d24:	pop    esi
10042d25:	xor    eax,eax
10042d27:	pop    ebp
10042d28:	ret    
10042d29:	push   edi
10042d2a:	mov    esi,edx
10042d2c:	mov    ecx,0xa
10042d31:	mov    edi,ebp
10042d33:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042d35:	mov    eax,DWORD PTR [edx+0x4]
10042d38:	mov    ecx,eax
10042d3a:	and    ecx,0xff0000
10042d40:	mov    esi,eax
10042d42:	shr    esi,0x10
10042d45:	or     ecx,esi
10042d47:	shr    ecx,0x8
10042d4a:	mov    esi,eax
10042d4c:	shl    eax,0x10
10042d4f:	and    esi,0xff00
10042d55:	or     esi,eax
10042d57:	shl    esi,0x8
10042d5a:	or     ecx,esi
10042d5c:	mov    DWORD PTR [ebp+0x4],ecx
10042d5f:	mov    eax,DWORD PTR [edx+0x8]
10042d62:	mov    ecx,eax
10042d64:	and    ecx,0xff0000
10042d6a:	mov    esi,eax
10042d6c:	shr    esi,0x10
10042d6f:	or     ecx,esi
10042d71:	shr    ecx,0x8
10042d74:	mov    esi,eax
10042d76:	shl    eax,0x10
10042d79:	and    esi,0xff00
10042d7f:	or     esi,eax
10042d81:	shl    esi,0x8
10042d84:	or     ecx,esi
10042d86:	test   ebx,ebx
10042d88:	mov    DWORD PTR [ebp+0x8],ecx
10042d8b:	movzx  eax,WORD PTR [edx+0xc]
10042d8f:	movzx  cx,ah
10042d93:	mov    ch,al
10042d95:	mov    WORD PTR [ebp+0xc],cx
10042d99:	movzx  eax,WORD PTR [edx+0x10]
10042d9d:	movzx  cx,ah
10042da1:	mov    ch,al
10042da3:	mov    WORD PTR [ebp+0x10],cx
10042da7:	movzx  eax,WORD PTR [edx+0x12]
10042dab:	movzx  cx,ah
10042daf:	mov    ch,al
10042db1:	mov    WORD PTR [ebp+0x12],cx
10042db5:	movzx  eax,WORD PTR [edx+0x14]
10042db9:	movzx  cx,ah
10042dbd:	mov    ch,al
10042dbf:	mov    WORD PTR [ebp+0x14],cx
10042dc3:	movzx  eax,WORD PTR [edx+0x16]
10042dc7:	movzx  cx,ah
10042dcb:	mov    ch,al
10042dcd:	mov    WORD PTR [ebp+0x16],cx
10042dd1:	movzx  eax,WORD PTR [edx+0x18]
10042dd5:	movzx  cx,ah
10042dd9:	mov    ch,al
10042ddb:	mov    WORD PTR [ebp+0x18],cx
10042ddf:	movzx  eax,WORD PTR [edx+0x1a]
10042de3:	movzx  cx,ah
10042de7:	mov    ch,al
10042de9:	mov    WORD PTR [ebp+0x1a],cx
10042ded:	movzx  eax,WORD PTR [edx+0x1c]
10042df1:	movzx  dx,ah
10042df5:	mov    dh,al
10042df7:	mov    WORD PTR [ebp+0x1c],dx
10042dfb:	je     0x10042e5c
10042dfd:	mov    edx,DWORD PTR [esp+0x14]
10042e01:	mov    ecx,0xa
10042e06:	mov    esi,ebx
10042e08:	mov    edi,edx
10042e0a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10042e0c:	mov    eax,DWORD PTR [ebx]
10042e0e:	mov    ecx,eax
10042e10:	and    ecx,0xff0000
10042e16:	mov    esi,eax
10042e18:	shr    esi,0x10
10042e1b:	or     ecx,esi
10042e1d:	mov    esi,eax
10042e1f:	shl    esi,0x10
10042e22:	and    eax,0xff00
10042e27:	or     esi,eax
10042e29:	shl    esi,0x8
10042e2c:	shr    ecx,0x8
10042e2f:	or     ecx,esi
10042e31:	mov    DWORD PTR [edx],ecx
10042e33:	mov    eax,DWORD PTR [ebx+0x4]
10042e36:	mov    ecx,eax
10042e38:	mov    esi,eax
10042e3a:	shr    esi,0x10
10042e3d:	and    ecx,0xff0000
10042e43:	or     ecx,esi
10042e45:	mov    esi,eax
10042e47:	shl    esi,0x10
10042e4a:	and    eax,0xff00
10042e4f:	or     esi,eax
10042e51:	shr    ecx,0x8
10042e54:	shl    esi,0x8
10042e57:	or     ecx,esi
10042e59:	mov    DWORD PTR [edx+0x4],ecx
10042e5c:	pop    edi
10042e5d:	pop    esi
10042e5e:	mov    eax,ebp
10042e60:	pop    ebp
10042e61:	ret    
10042e62:	int3   
10042e63:	int3   
10042e64:	int3   
10042e65:	int3   
10042e66:	int3   
10042e67:	int3   
10042e68:	int3   
10042e69:	int3   
10042e6a:	int3   
10042e6b:	int3   
10042e6c:	int3   
10042e6d:	int3   
10042e6e:	int3   
10042e6f:	int3   
10042e70:	cmp    DWORD PTR [esp+0x4],0x2
10042e75:	push   esi
10042e76:	mov    esi,eax
10042e78:	movzx  eax,BYTE PTR [ecx]
10042e7b:	jne    0x10042eb8
10042e7d:	cmp    eax,0xa
10042e80:	je     0x10042eab
10042e82:	cmp    eax,0xd
10042e85:	jne    0x10042f1e
10042e8b:	add    esi,0xffffffff
10042e8e:	cmp    ecx,esi
10042e90:	jae    0x10042e9d
10042e92:	cmp    BYTE PTR [ecx+0x1],0xa
10042e96:	mov    eax,0x2
10042e9b:	je     0x10042ea2
10042e9d:	mov    eax,0x1
10042ea2:	mov    DWORD PTR [edi],eax
10042ea4:	mov    eax,0x1
10042ea9:	pop    esi
10042eaa:	ret    
10042eab:	mov    DWORD PTR [edi],0x1
10042eb1:	mov    eax,0x1
10042eb6:	pop    esi
10042eb7:	ret    
10042eb8:	cmp    eax,0x85
10042ebd:	jg     0x10042f03
10042ebf:	je     0x10042ef0
10042ec1:	cmp    eax,0xa
10042ec4:	jl     0x10042f1e
10042ec6:	cmp    eax,0xc
10042ec9:	jle    0x10042eab
10042ecb:	cmp    eax,0xd
10042ece:	jne    0x10042f1e
10042ed0:	add    esi,0xffffffff
10042ed3:	cmp    ecx,esi
10042ed5:	jae    0x10042ee2
10042ed7:	cmp    BYTE PTR [ecx+0x1],0xa
10042edb:	mov    eax,0x2
10042ee0:	je     0x10042ee7
10042ee2:	mov    eax,0x1
10042ee7:	mov    DWORD PTR [edi],eax
10042ee9:	mov    eax,0x1
10042eee:	pop    esi
10042eef:	ret    
10042ef0:	xor    eax,eax
10042ef2:	test   edx,edx
10042ef4:	setne  al
10042ef7:	pop    esi
10042ef8:	add    eax,0x1
10042efb:	mov    DWORD PTR [edi],eax
10042efd:	mov    eax,0x1
10042f02:	ret    
10042f03:	cmp    eax,0x2028
10042f08:	jl     0x10042f1e
10042f0a:	cmp    eax,0x2029
10042f0f:	jg     0x10042f1e
10042f11:	mov    DWORD PTR [edi],0x3
10042f17:	mov    eax,0x1
10042f1c:	pop    esi
10042f1d:	ret    
10042f1e:	xor    eax,eax
10042f20:	pop    esi
10042f21:	ret    
10042f22:	int3   
10042f23:	int3   
10042f24:	int3   
10042f25:	int3   
10042f26:	int3   
10042f27:	int3   
10042f28:	int3   
10042f29:	int3   
10042f2a:	int3   
10042f2b:	int3   
10042f2c:	int3   
10042f2d:	int3   
10042f2e:	int3   
10042f2f:	int3   
10042f30:	movzx  eax,BYTE PTR [ecx-0x1]
10042f34:	sub    ecx,0x1
10042f37:	cmp    DWORD PTR [esp+0x4],0x2
10042f3c:	jne    0x10042f74
10042f3e:	cmp    eax,0xa
10042f41:	je     0x10042f58
10042f43:	cmp    eax,0xd
10042f46:	jne    0x10042fdf
10042f4c:	mov    DWORD PTR [edx],0x1
10042f52:	mov    eax,0x1
10042f57:	ret    
10042f58:	cmp    ecx,esi
10042f5a:	jbe    0x10042f67
10042f5c:	cmp    BYTE PTR [ecx-0x1],0xd
10042f60:	mov    eax,0x2
10042f65:	je     0x10042f6c
10042f67:	mov    eax,0x1
10042f6c:	mov    DWORD PTR [edx],eax
10042f6e:	mov    eax,0x1
10042f73:	ret    
10042f74:	cmp    eax,0x85
10042f79:	jg     0x10042fc5
10042f7b:	je     0x10042fb1
10042f7d:	cmp    eax,0xa
10042f80:	je     0x10042f95
10042f82:	jle    0x10042fdf
10042f84:	cmp    eax,0xd
10042f87:	jg     0x10042fdf
10042f89:	mov    DWORD PTR [edx],0x1
10042f8f:	mov    eax,0x1
10042f94:	ret    
10042f95:	cmp    ecx,esi
10042f97:	jbe    0x10042fa4
10042f99:	cmp    BYTE PTR [ecx-0x1],0xd
10042f9d:	mov    eax,0x2
10042fa2:	je     0x10042fa9
10042fa4:	mov    eax,0x1
10042fa9:	mov    DWORD PTR [edx],eax
10042fab:	mov    eax,0x1
10042fb0:	ret    
10042fb1:	xor    eax,eax
10042fb3:	cmp    DWORD PTR [esp+0x8],eax
10042fb7:	setne  al
10042fba:	add    eax,0x1
10042fbd:	mov    DWORD PTR [edx],eax
10042fbf:	mov    eax,0x1
10042fc4:	ret    
10042fc5:	cmp    eax,0x2028
10042fca:	jl     0x10042fdf
10042fcc:	cmp    eax,0x2029
10042fd1:	jg     0x10042fdf
10042fd3:	mov    DWORD PTR [edx],0x3
10042fd9:	mov    eax,0x1
10042fde:	ret    
10042fdf:	xor    eax,eax
10042fe1:	ret    
10042fe2:	jmp    0x100437dc
10042fe7:	push   ebp
10042fe8:	mov    ebp,esp
10042fea:	mov    eax,DWORD PTR [ebp+0x14]
10042fed:	push   esi
10042fee:	push   edi
10042fef:	xor    edi,edi
10042ff1:	cmp    eax,edi
10042ff3:	je     0x1004303c
10042ff5:	cmp    DWORD PTR [ebp+0x8],edi
10042ff8:	jne    0x10043015
10042ffa:	call   0x10046c41
10042fff:	push   0x16
10043001:	pop    esi
10043002:	mov    DWORD PTR [eax],esi
10043004:	push   edi
10043005:	push   edi
10043006:	push   edi
10043007:	push   edi
10043008:	push   edi
10043009:	call   0x100435e1
1004300e:	add    esp,0x14
10043011:	mov    eax,esi
10043013:	jmp    0x1004303e
10043015:	cmp    DWORD PTR [ebp+0x10],edi
10043018:	je     0x10042ffa
1004301a:	cmp    DWORD PTR [ebp+0xc],eax
1004301d:	jae    0x1004302d
1004301f:	call   0x10046c41
10043024:	push   0x22
10043026:	pop    ecx
10043027:	mov    DWORD PTR [eax],ecx
10043029:	mov    esi,ecx
1004302b:	jmp    0x10043004
1004302d:	push   eax
1004302e:	push   DWORD PTR [ebp+0x10]
10043031:	push   DWORD PTR [ebp+0x8]
10043034:	call   0x10045880
10043039:	add    esp,0xc
1004303c:	xor    eax,eax
1004303e:	pop    edi
1004303f:	pop    esi
10043040:	pop    ebp
10043041:	ret    
10043042:	push   ecx
10043043:	push   ebx
10043044:	push   ebp
10043045:	push   esi
10043046:	push   edi
10043047:	push   DWORD PTR ds:0x10084610
1004304d:	call   0x10046d68
10043052:	push   DWORD PTR ds:0x1008460c
10043058:	mov    esi,eax
1004305a:	mov    DWORD PTR [esp+0x18],esi
1004305e:	call   0x10046d68
10043063:	mov    edi,eax
10043065:	cmp    edi,esi
10043067:	pop    ecx
10043068:	pop    ecx
10043069:	jb     0x100430f3
1004306f:	mov    ebx,edi
10043071:	sub    ebx,esi
10043073:	lea    ebp,[ebx+0x4]
10043076:	cmp    ebp,0x4
10043079:	jb     0x100430f3
1004307b:	push   esi
1004307c:	call   0x1004737d
10043081:	mov    esi,eax
10043083:	cmp    esi,ebp
10043085:	pop    ecx
10043086:	jae    0x100430d2
10043088:	mov    eax,0x800
1004308d:	cmp    esi,eax
1004308f:	jae    0x10043093
10043091:	mov    eax,esi
10043093:	add    eax,esi
10043095:	cmp    eax,esi
10043097:	jb     0x100430a9
10043099:	push   eax
1004309a:	push   DWORD PTR [esp+0x14]
1004309e:	call   0x10047332
100430a3:	test   eax,eax
100430a5:	pop    ecx
100430a6:	pop    ecx
100430a7:	jne    0x100430c0
100430a9:	lea    eax,[esi+0x10]
100430ac:	cmp    eax,esi
100430ae:	jb     0x100430f3
100430b0:	push   eax
100430b1:	push   DWORD PTR [esp+0x14]
100430b5:	call   0x10047332
100430ba:	test   eax,eax
100430bc:	pop    ecx
100430bd:	pop    ecx
100430be:	je     0x100430f3
100430c0:	sar    ebx,0x2
100430c3:	push   eax
100430c4:	lea    edi,[eax+ebx*4]
100430c7:	call   0x10046cf1
100430cc:	pop    ecx
100430cd:	mov    ds:0x10084610,eax
100430d2:	push   DWORD PTR [esp+0x18]
100430d6:	call   0x10046cf1
100430db:	mov    DWORD PTR [edi],eax
100430dd:	add    edi,0x4
100430e0:	push   edi
100430e1:	call   0x10046cf1
100430e6:	pop    ecx
100430e7:	mov    ds:0x1008460c,eax
100430ec:	mov    eax,DWORD PTR [esp+0x1c]
100430f0:	pop    ecx
100430f1:	jmp    0x100430f5
100430f3:	xor    eax,eax
100430f5:	pop    edi
100430f6:	pop    esi
100430f7:	pop    ebp
100430f8:	pop    ebx
100430f9:	pop    ecx
100430fa:	ret    
100430fb:	push   esi
100430fc:	push   0x4
100430fe:	push   0x20
10043100:	call   0x100472ea
10043105:	mov    esi,eax
10043107:	push   esi
10043108:	call   0x10046cf1
1004310d:	add    esp,0xc
10043110:	test   esi,esi
10043112:	mov    ds:0x10084610,eax
10043117:	mov    ds:0x1008460c,eax
1004311c:	jne    0x10043123
1004311e:	push   0x18
10043120:	pop    eax
10043121:	pop    esi
10043122:	ret    
10043123:	and    DWORD PTR [esi],0x0
10043126:	xor    eax,eax
10043128:	pop    esi
10043129:	ret    
1004312a:	push   0xc
1004312c:	push   0x10075c88
10043131:	call   0x1004771c
10043136:	call   0x1004747f
1004313b:	and    DWORD PTR [ebp-0x4],0x0
1004313f:	push   DWORD PTR [ebp+0x8]
10043142:	call   0x10043042
10043147:	pop    ecx
10043148:	mov    DWORD PTR [ebp-0x1c],eax
1004314b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043152:	call   0x10043160
10043157:	mov    eax,DWORD PTR [ebp-0x1c]
1004315a:	call   0x10047761
1004315f:	ret    
10043160:	call   0x10047488
10043165:	ret    
10043166:	push   DWORD PTR [esp+0x4]
1004316a:	call   0x1004312a
1004316f:	neg    eax
10043171:	sbb    eax,eax
10043173:	neg    eax
10043175:	pop    ecx
10043176:	dec    eax
10043177:	ret    
10043178:	jmp    0x10042fe2
1004317d:	push   esi
1004317e:	push   0x1
10043180:	push   0x10080000
10043185:	mov    esi,ecx
10043187:	call   0x10043320
1004318c:	mov    DWORD PTR [esi],0x100675a0
10043192:	mov    eax,esi
10043194:	pop    esi
10043195:	ret    
10043196:	push   ebp
10043197:	mov    ebp,esp
10043199:	sub    esp,0xc
1004319c:	jmp    0x100431ab
1004319e:	push   DWORD PTR [ebp+0x8]
100431a1:	call   0x10047920
100431a6:	test   eax,eax
100431a8:	pop    ecx
100431a9:	je     0x100431ba
100431ab:	push   DWORD PTR [ebp+0x8]
100431ae:	call   0x10045143
100431b3:	test   eax,eax
100431b5:	pop    ecx
100431b6:	je     0x1004319e
100431b8:	leave  
100431b9:	ret    
100431ba:	test   BYTE PTR ds:0x10081aec,0x1
100431c1:	mov    esi,0x10081ae0
100431c6:	jne    0x100431e1
100431c8:	or     DWORD PTR ds:0x10081aec,0x1
100431cf:	mov    ecx,esi
100431d1:	call   0x1004317d
100431d6:	push   0x100660be
100431db:	call   0x10043166
100431e0:	pop    ecx
100431e1:	push   esi
100431e2:	lea    ecx,[ebp-0xc]
100431e5:	call   0x10043338
100431ea:	push   0x10076460
100431ef:	lea    eax,[ebp-0xc]
100431f2:	push   eax
100431f3:	mov    DWORD PTR [ebp-0xc],0x100675a0
100431fa:	call   0x10047942
100431ff:	int3   
10043200:	push   0x14
10043202:	push   0x10075ca8
10043207:	call   0x1004771c
1004320c:	and    DWORD PTR [ebp-0x4],0x0
10043210:	dec    DWORD PTR [ebp+0x10]
10043213:	js     0x1004324f
10043215:	mov    ecx,DWORD PTR [ebp+0x8]
10043218:	sub    ecx,DWORD PTR [ebp+0xc]
1004321b:	mov    DWORD PTR [ebp+0x8],ecx
1004321e:	call   DWORD PTR [ebp+0x14]
10043221:	jmp    0x10043210
10043223:	mov    eax,DWORD PTR [ebp-0x14]
10043226:	mov    DWORD PTR [ebp-0x1c],eax
10043229:	mov    eax,DWORD PTR [ebp-0x1c]
1004322c:	mov    eax,DWORD PTR [eax]
1004322e:	mov    DWORD PTR [ebp-0x20],eax
10043231:	mov    eax,DWORD PTR [ebp-0x20]
10043234:	cmp    DWORD PTR [eax],0xe06d7363
1004323a:	je     0x10043247
1004323c:	mov    DWORD PTR [ebp-0x24],0x0
10043243:	mov    eax,DWORD PTR [ebp-0x24]
10043246:	ret    
10043247:	call   0x1004798c
1004324c:	mov    esp,DWORD PTR [ebp-0x18]
1004324f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043256:	call   0x10047761
1004325b:	ret    0x10
1004325e:	push   0xc
10043260:	push   0x10075cc8
10043265:	call   0x1004771c
1004326a:	and    DWORD PTR [ebp-0x1c],0x0
1004326e:	mov    esi,DWORD PTR [ebp+0xc]
10043271:	mov    eax,esi
10043273:	imul   eax,DWORD PTR [ebp+0x10]
10043277:	add    DWORD PTR [ebp+0x8],eax
1004327a:	and    DWORD PTR [ebp-0x4],0x0
1004327e:	dec    DWORD PTR [ebp+0x10]
10043281:	js     0x1004328e
10043283:	sub    DWORD PTR [ebp+0x8],esi
10043286:	mov    ecx,DWORD PTR [ebp+0x8]
10043289:	call   DWORD PTR [ebp+0x14]
1004328c:	jmp    0x1004327e
1004328e:	mov    DWORD PTR [ebp-0x1c],0x1
10043295:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004329c:	call   0x100432a9
100432a1:	call   0x10047761
100432a6:	ret    0x10
100432a9:	cmp    DWORD PTR [ebp-0x1c],0x0
100432ad:	jne    0x100432c0
100432af:	push   DWORD PTR [ebp+0x14]
100432b2:	push   DWORD PTR [ebp+0x10]
100432b5:	push   DWORD PTR [ebp+0xc]
100432b8:	push   DWORD PTR [ebp+0x8]
100432bb:	call   0x10043200
100432c0:	ret    
100432c1:	mov    eax,ecx
100432c3:	and    DWORD PTR [eax+0x4],0x0
100432c7:	and    DWORD PTR [eax+0x8],0x0
100432cb:	mov    DWORD PTR [eax],0x100675ac
100432d1:	ret    
100432d2:	push   ebx
100432d3:	mov    ebx,DWORD PTR [esp+0x8]
100432d7:	push   esi
100432d8:	push   edi
100432d9:	mov    edi,ecx
100432db:	mov    DWORD PTR [edi],0x100675ac
100432e1:	mov    eax,DWORD PTR [ebx]
100432e3:	test   eax,eax
100432e5:	je     0x1004330d
100432e7:	push   eax
100432e8:	call   0x10043450
100432ed:	mov    esi,eax
100432ef:	inc    esi
100432f0:	push   esi
100432f1:	call   0x10045143
100432f6:	test   eax,eax
100432f8:	pop    ecx
100432f9:	pop    ecx
100432fa:	mov    DWORD PTR [edi+0x4],eax
100432fd:	je     0x10043311
100432ff:	push   DWORD PTR [ebx]
10043301:	push   esi
10043302:	push   eax
10043303:	call   0x10047a20
10043308:	add    esp,0xc
1004330b:	jmp    0x10043311
1004330d:	and    DWORD PTR [edi+0x4],0x0
10043311:	mov    DWORD PTR [edi+0x8],0x1
10043318:	mov    eax,edi
1004331a:	pop    edi
1004331b:	pop    esi
1004331c:	pop    ebx
1004331d:	ret    0x4
10043320:	mov    eax,ecx
10043322:	mov    ecx,DWORD PTR [esp+0x4]
10043326:	mov    DWORD PTR [eax],0x100675ac
1004332c:	mov    ecx,DWORD PTR [ecx]
1004332e:	and    DWORD PTR [eax+0x8],0x0
10043332:	mov    DWORD PTR [eax+0x4],ecx
10043335:	ret    0x8
10043338:	push   ebx
10043339:	mov    ebx,DWORD PTR [esp+0x8]
1004333d:	push   esi
1004333e:	mov    esi,ecx
10043340:	mov    DWORD PTR [esi],0x100675ac
10043346:	mov    eax,DWORD PTR [ebx+0x8]
10043349:	mov    DWORD PTR [esi+0x8],eax
1004334c:	test   eax,eax
1004334e:	mov    eax,DWORD PTR [ebx+0x4]
10043351:	push   edi
10043352:	je     0x10043385
10043354:	test   eax,eax
10043356:	je     0x1004337f
10043358:	push   eax
10043359:	call   0x10043450
1004335e:	mov    edi,eax
10043360:	inc    edi
10043361:	push   edi
10043362:	call   0x10045143
10043367:	test   eax,eax
10043369:	pop    ecx
1004336a:	pop    ecx
1004336b:	mov    DWORD PTR [esi+0x4],eax
1004336e:	je     0x10043388
10043370:	push   DWORD PTR [ebx+0x4]
10043373:	push   edi
10043374:	push   eax
10043375:	call   0x10047a20
1004337a:	add    esp,0xc
1004337d:	jmp    0x10043388
1004337f:	and    DWORD PTR [esi+0x4],0x0
10043383:	jmp    0x10043388
10043385:	mov    DWORD PTR [esi+0x4],eax
10043388:	pop    edi
10043389:	mov    eax,esi
1004338b:	pop    esi
1004338c:	pop    ebx
1004338d:	ret    0x4
10043390:	cmp    DWORD PTR [ecx+0x8],0x0
10043394:	mov    DWORD PTR [ecx],0x100675ac
1004339a:	je     0x100433a5
1004339c:	push   DWORD PTR [ecx+0x4]
1004339f:	call   0x100437dc
100433a4:	pop    ecx
100433a5:	ret    
100433a6:	mov    eax,DWORD PTR [ecx+0x4]
100433a9:	test   eax,eax
100433ab:	jne    0x100433b2
100433ad:	mov    eax,0x100675b4
100433b2:	ret    
100433b3:	push   esi
100433b4:	mov    esi,ecx
100433b6:	call   0x10043390
100433bb:	test   BYTE PTR [esp+0x8],0x1
100433c0:	je     0x100433c9
100433c2:	push   esi
100433c3:	call   0x10042fe2
100433c8:	pop    ecx
100433c9:	mov    eax,esi
100433cb:	pop    esi
100433cc:	ret    0x4
100433cf:	push   ebp
100433d0:	mov    ebp,esp
100433d2:	push   esi
100433d3:	mov    esi,DWORD PTR [ebp+0x14]
100433d6:	push   edi
100433d7:	xor    edi,edi
100433d9:	cmp    esi,edi
100433db:	jne    0x100433e1
100433dd:	xor    eax,eax
100433df:	jmp    0x10043446
100433e1:	cmp    DWORD PTR [ebp+0x8],edi
100433e4:	jne    0x10043401
100433e6:	call   0x10046c41
100433eb:	push   0x16
100433ed:	pop    esi
100433ee:	mov    DWORD PTR [eax],esi
100433f0:	push   edi
100433f1:	push   edi
100433f2:	push   edi
100433f3:	push   edi
100433f4:	push   edi
100433f5:	call   0x100435e1
100433fa:	add    esp,0x14
100433fd:	mov    eax,esi
100433ff:	jmp    0x10043446
10043401:	cmp    DWORD PTR [ebp+0x10],edi
10043404:	je     0x1004341c
10043406:	cmp    DWORD PTR [ebp+0xc],esi
10043409:	jb     0x1004341c
1004340b:	push   esi
1004340c:	push   DWORD PTR [ebp+0x10]
1004340f:	push   DWORD PTR [ebp+0x8]
10043412:	call   0x10045340
10043417:	add    esp,0xc
1004341a:	jmp    0x100433dd
1004341c:	push   DWORD PTR [ebp+0xc]
1004341f:	push   edi
10043420:	push   DWORD PTR [ebp+0x8]
10043423:	call   0x10045dc0
10043428:	add    esp,0xc
1004342b:	cmp    DWORD PTR [ebp+0x10],edi
1004342e:	je     0x100433e6
10043430:	cmp    DWORD PTR [ebp+0xc],esi
10043433:	jae    0x10043443
10043435:	call   0x10046c41
1004343a:	push   0x22
1004343c:	pop    ecx
1004343d:	mov    DWORD PTR [eax],ecx
1004343f:	mov    esi,ecx
10043441:	jmp    0x100433f0
10043443:	push   0x16
10043445:	pop    eax
10043446:	pop    edi
10043447:	pop    esi
10043448:	pop    ebp
10043449:	ret    
1004344a:	int3   
1004344b:	int3   
1004344c:	int3   
1004344d:	int3   
1004344e:	int3   
1004344f:	int3   
10043450:	mov    ecx,DWORD PTR [esp+0x4]
10043454:	test   ecx,0x3
1004345a:	je     0x10043480
1004345c:	mov    al,BYTE PTR [ecx]
1004345e:	add    ecx,0x1
10043461:	test   al,al
10043463:	je     0x100434b3
10043465:	test   ecx,0x3
1004346b:	jne    0x1004345c
1004346d:	add    eax,0x0
10043472:	lea    esp,[esp+0x0]
10043479:	lea    esp,[esp+0x0]
10043480:	mov    eax,DWORD PTR [ecx]
10043482:	mov    edx,0x7efefeff
10043487:	add    edx,eax
10043489:	xor    eax,0xffffffff
1004348c:	xor    eax,edx
1004348e:	add    ecx,0x4
10043491:	test   eax,0x81010100
10043496:	je     0x10043480
10043498:	mov    eax,DWORD PTR [ecx-0x4]
1004349b:	test   al,al
1004349d:	je     0x100434d1
1004349f:	test   ah,ah
100434a1:	je     0x100434c7
100434a3:	test   eax,0xff0000
100434a8:	je     0x100434bd
100434aa:	test   eax,0xff000000
100434af:	je     0x100434b3
100434b1:	jmp    0x10043480
100434b3:	lea    eax,[ecx-0x1]
100434b6:	mov    ecx,DWORD PTR [esp+0x4]
100434ba:	sub    eax,ecx
100434bc:	ret    
100434bd:	lea    eax,[ecx-0x2]
100434c0:	mov    ecx,DWORD PTR [esp+0x4]
100434c4:	sub    eax,ecx
100434c6:	ret    
100434c7:	lea    eax,[ecx-0x3]
100434ca:	mov    ecx,DWORD PTR [esp+0x4]
100434ce:	sub    eax,ecx
100434d0:	ret    
100434d1:	lea    eax,[ecx-0x4]
100434d4:	mov    ecx,DWORD PTR [esp+0x4]
100434d8:	sub    eax,ecx
100434da:	ret    
100434db:	mov    eax,DWORD PTR [esp+0x4]
100434df:	mov    ds:0x10081af0,eax
100434e4:	ret    
100434e5:	push   ebp
100434e6:	lea    ebp,[esp-0x2a8]
100434ed:	sub    esp,0x328
100434f3:	mov    eax,ds:0x100801ac
100434f8:	xor    eax,ebp
100434fa:	mov    DWORD PTR [ebp+0x2a4],eax
10043500:	push   esi
10043501:	mov    DWORD PTR [ebp+0x88],eax
10043507:	mov    DWORD PTR [ebp+0x84],ecx
1004350d:	mov    DWORD PTR [ebp+0x80],edx
10043513:	mov    DWORD PTR [ebp+0x7c],ebx
10043516:	mov    DWORD PTR [ebp+0x78],esi
10043519:	mov    DWORD PTR [ebp+0x74],edi
1004351c:	data16 mov WORD PTR [ebp+0xa0],ss
10043523:	data16 mov WORD PTR [ebp+0x94],cs
1004352a:	data16 mov WORD PTR [ebp+0x70],ds
1004352e:	data16 mov WORD PTR [ebp+0x6c],es
10043532:	data16 mov WORD PTR [ebp+0x68],fs
10043536:	data16 mov WORD PTR [ebp+0x64],gs
1004353a:	pushf  
1004353b:	pop    DWORD PTR [ebp+0x98]
10043541:	mov    esi,DWORD PTR [ebp+0x2ac]
10043547:	lea    eax,[ebp+0x2ac]
1004354d:	mov    DWORD PTR [ebp+0x9c],eax
10043553:	mov    DWORD PTR [ebp-0x28],0x10001
1004355a:	mov    DWORD PTR [ebp+0x90],esi
10043560:	mov    eax,DWORD PTR [eax-0x4]
10043563:	push   0x50
10043565:	mov    DWORD PTR [ebp+0x8c],eax
1004356b:	lea    eax,[ebp-0x80]
1004356e:	push   0x0
10043570:	push   eax
10043571:	call   0x10045dc0
10043576:	lea    eax,[ebp-0x80]
10043579:	mov    DWORD PTR [ebp-0x30],eax
1004357c:	lea    eax,[ebp-0x28]
1004357f:	add    esp,0xc
10043582:	mov    DWORD PTR [ebp-0x80],0xc000000d
10043589:	mov    DWORD PTR [ebp-0x74],esi
1004358c:	mov    DWORD PTR [ebp-0x2c],eax
1004358f:	call   DWORD PTR ds:0x1006718c
10043595:	push   0x0
10043597:	mov    esi,eax
10043599:	call   DWORD PTR ds:0x10067188
1004359f:	lea    eax,[ebp-0x30]
100435a2:	push   eax
100435a3:	call   DWORD PTR ds:0x10067184
100435a9:	test   eax,eax
100435ab:	jne    0x100435b9
100435ad:	test   esi,esi
100435af:	jne    0x100435b9
100435b1:	push   0x2
100435b3:	call   0x10047a85
100435b8:	pop    ecx
100435b9:	push   0xc000000d
100435be:	call   DWORD PTR ds:0x1006712c
100435c4:	push   eax
100435c5:	call   DWORD PTR ds:0x10067180
100435cb:	mov    ecx,DWORD PTR [ebp+0x2a4]
100435d1:	xor    ecx,ebp
100435d3:	pop    esi
100435d4:	call   0x10043615
100435d9:	add    ebp,0x2a8
100435df:	leave  
100435e0:	ret    
100435e1:	push   ebp
100435e2:	mov    ebp,esp
100435e4:	push   DWORD PTR ds:0x10081af0
100435ea:	call   0x10046d68
100435ef:	test   eax,eax
100435f1:	pop    ecx
100435f2:	je     0x100435f7
100435f4:	pop    ebp
100435f5:	jmp    eax
100435f7:	push   0x2
100435f9:	call   0x10047a85
100435fe:	pop    ecx
100435ff:	pop    ebp
10043600:	jmp    0x100434e5
10043605:	xor    eax,eax
10043607:	push   eax
10043608:	push   eax
10043609:	push   eax
1004360a:	push   eax
1004360b:	push   eax
1004360c:	call   0x100435e1
10043611:	add    esp,0x14
10043614:	ret    
10043615:	cmp    ecx,DWORD PTR ds:0x100801ac
1004361b:	jne    0x1004361f
1004361d:	repz ret 
1004361f:	jmp    0x10047a8d
10043624:	push   ecx
10043625:	mov    DWORD PTR [ecx],0x100675cc
1004362b:	call   0x10047b91
10043630:	pop    ecx
10043631:	ret    
10043632:	push   esi
10043633:	mov    esi,ecx
10043635:	call   0x10043624
1004363a:	test   BYTE PTR [esp+0x8],0x1
1004363f:	je     0x10043648
10043641:	push   esi
10043642:	call   0x10042fe2
10043647:	pop    ecx
10043648:	mov    eax,esi
1004364a:	pop    esi
1004364b:	ret    0x4
1004364e:	mov    eax,DWORD PTR [esp+0x4]
10043652:	add    ecx,0x9
10043655:	push   ecx
10043656:	add    eax,0x9
10043659:	push   eax
1004365a:	call   0x10047c10
1004365f:	neg    eax
10043661:	pop    ecx
10043662:	sbb    eax,eax
10043664:	pop    ecx
10043665:	inc    eax
10043666:	ret    0x4
10043669:	push   0xc
1004366b:	push   0x10075ce8
10043670:	call   0x1004771c
10043675:	mov    ecx,DWORD PTR [ebp+0x8]
10043678:	xor    edi,edi
1004367a:	cmp    ecx,edi
1004367c:	jbe    0x100436ac
1004367e:	push   0xffffffe0
10043680:	pop    eax
10043681:	xor    edx,edx
10043683:	div    ecx
10043685:	cmp    eax,DWORD PTR [ebp+0xc]
10043688:	sbb    eax,eax
1004368a:	inc    eax
1004368b:	jne    0x100436ac
1004368d:	call   0x10046c41
10043692:	mov    DWORD PTR [eax],0xc
10043698:	push   edi
10043699:	push   edi
1004369a:	push   edi
1004369b:	push   edi
1004369c:	push   edi
1004369d:	call   0x100435e1
100436a2:	add    esp,0x14
100436a5:	xor    eax,eax
100436a7:	jmp    0x10043781
100436ac:	imul   ecx,DWORD PTR [ebp+0xc]
100436b0:	mov    esi,ecx
100436b2:	mov    DWORD PTR [ebp+0x8],esi
100436b5:	cmp    esi,edi
100436b7:	jne    0x100436bc
100436b9:	xor    esi,esi
100436bb:	inc    esi
100436bc:	xor    ebx,ebx
100436be:	mov    DWORD PTR [ebp-0x1c],ebx
100436c1:	cmp    esi,0xffffffe0
100436c4:	ja     0x1004372f
100436c6:	cmp    DWORD PTR ds:0x10084600,0x3
100436cd:	jne    0x1004371a
100436cf:	add    esi,0xf
100436d2:	and    esi,0xfffffff0
100436d5:	mov    DWORD PTR [ebp+0xc],esi
100436d8:	mov    eax,DWORD PTR [ebp+0x8]
100436db:	cmp    eax,DWORD PTR ds:0x100845f0
100436e1:	ja     0x1004371a
100436e3:	push   0x4
100436e5:	call   0x10047e0e
100436ea:	pop    ecx
100436eb:	mov    DWORD PTR [ebp-0x4],edi
100436ee:	push   DWORD PTR [ebp+0x8]
100436f1:	call   0x10048784
100436f6:	pop    ecx
100436f7:	mov    DWORD PTR [ebp-0x1c],eax
100436fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043701:	call   0x10043765
10043706:	mov    ebx,DWORD PTR [ebp-0x1c]
10043709:	cmp    ebx,edi
1004370b:	je     0x1004371e
1004370d:	push   DWORD PTR [ebp+0x8]
10043710:	push   edi
10043711:	push   ebx
10043712:	call   0x10045dc0
10043717:	add    esp,0xc
1004371a:	cmp    ebx,edi
1004371c:	jne    0x1004377f
1004371e:	push   esi
1004371f:	push   0x8
10043721:	push   DWORD PTR ds:0x10081ff4
10043727:	call   DWORD PTR ds:0x10067190
1004372d:	mov    ebx,eax
1004372f:	cmp    ebx,edi
10043731:	jne    0x1004377f
10043733:	cmp    DWORD PTR ds:0x10081ff0,edi
10043739:	je     0x1004376e
1004373b:	push   esi
1004373c:	call   0x10047920
10043741:	pop    ecx
10043742:	test   eax,eax
10043744:	jne    0x100436bc
1004374a:	mov    eax,DWORD PTR [ebp+0x10]
1004374d:	cmp    eax,edi
1004374f:	je     0x100436a5
10043755:	mov    DWORD PTR [eax],0xc
1004375b:	jmp    0x100436a5
10043760:	xor    edi,edi
10043762:	mov    esi,DWORD PTR [ebp+0xc]
10043765:	push   0x4
10043767:	call   0x10047d36
1004376c:	pop    ecx
1004376d:	ret    
1004376e:	cmp    ebx,edi
10043770:	jne    0x1004377f
10043772:	mov    eax,DWORD PTR [ebp+0x10]
10043775:	cmp    eax,edi
10043777:	je     0x1004377f
10043779:	mov    DWORD PTR [eax],0xc
1004377f:	mov    eax,ebx
10043781:	call   0x10047761
10043786:	ret    
10043787:	push   ebp
10043788:	mov    ebp,esp
1004378a:	push   ecx
1004378b:	and    DWORD PTR [ebp-0x4],0x0
1004378f:	push   edi
10043790:	lea    eax,[ebp-0x4]
10043793:	push   eax
10043794:	push   DWORD PTR [ebp+0xc]
10043797:	push   DWORD PTR [ebp+0x8]
1004379a:	call   0x10043669
1004379f:	mov    edi,eax
100437a1:	add    esp,0xc
100437a4:	test   edi,edi
100437a6:	jne    0x100437c1
100437a8:	push   esi
100437a9:	mov    esi,DWORD PTR [ebp-0x4]
100437ac:	test   esi,esi
100437ae:	je     0x100437c0
100437b0:	call   0x10046c41
100437b5:	test   eax,eax
100437b7:	je     0x100437c0
100437b9:	call   0x10046c41
100437be:	mov    DWORD PTR [eax],esi
100437c0:	pop    esi
100437c1:	mov    eax,edi
100437c3:	pop    edi
100437c4:	leave  
100437c5:	ret    
100437c6:	mov    eax,DWORD PTR [esp+0x4]
100437ca:	mov    cx,WORD PTR [eax]
100437cd:	inc    eax
100437ce:	inc    eax
100437cf:	test   cx,cx
100437d2:	jne    0x100437ca
100437d4:	sub    eax,DWORD PTR [esp+0x4]
100437d8:	sar    eax,1
100437da:	dec    eax
100437db:	ret    
100437dc:	push   0xc
100437de:	push   0x10075d08
100437e3:	call   0x1004771c
100437e8:	mov    esi,DWORD PTR [ebp+0x8]
100437eb:	test   esi,esi
100437ed:	je     0x10043864
100437ef:	cmp    DWORD PTR ds:0x10084600,0x3
100437f6:	jne    0x1004383b
100437f8:	push   0x4
100437fa:	call   0x10047e0e
100437ff:	pop    ecx
10043800:	and    DWORD PTR [ebp-0x4],0x0
10043804:	push   esi
10043805:	call   0x10047fb0
1004380a:	pop    ecx
1004380b:	mov    DWORD PTR [ebp-0x1c],eax
1004380e:	test   eax,eax
10043810:	je     0x1004381b
10043812:	push   esi
10043813:	push   eax
10043814:	call   0x10047fdb
10043819:	pop    ecx
1004381a:	pop    ecx
1004381b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043822:	call   0x10043832
10043827:	cmp    DWORD PTR [ebp-0x1c],0x0
1004382b:	jne    0x10043864
1004382d:	push   DWORD PTR [ebp+0x8]
10043830:	jmp    0x1004383c
10043832:	push   0x4
10043834:	call   0x10047d36
10043839:	pop    ecx
1004383a:	ret    
1004383b:	push   esi
1004383c:	push   0x0
1004383e:	push   DWORD PTR ds:0x10081ff4
10043844:	call   DWORD PTR ds:0x10067194
1004384a:	test   eax,eax
1004384c:	jne    0x10043864
1004384e:	call   0x10046c41
10043853:	mov    esi,eax
10043855:	call   DWORD PTR ds:0x100670cc
1004385b:	push   eax
1004385c:	call   0x10046c06
10043861:	mov    DWORD PTR [esi],eax
10043863:	pop    ecx
10043864:	call   0x10047761
10043869:	ret    
1004386a:	push   ebp
1004386b:	mov    ebp,esp
1004386d:	sub    esp,0x20
10043870:	push   esi
10043871:	xor    esi,esi
10043873:	cmp    DWORD PTR [ebp+0xc],esi
10043876:	jne    0x10043895
10043878:	call   0x10046c41
1004387d:	push   esi
1004387e:	push   esi
1004387f:	push   esi
10043880:	push   esi
10043881:	push   esi
10043882:	mov    DWORD PTR [eax],0x16
10043888:	call   0x100435e1
1004388d:	add    esp,0x14
10043890:	or     eax,0xffffffff
10043893:	jmp    0x100438bc
10043895:	push   DWORD PTR [ebp+0x14]
10043898:	lea    eax,[ebp-0x20]
1004389b:	push   DWORD PTR [ebp+0x10]
1004389e:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
100438a5:	push   DWORD PTR [ebp+0xc]
100438a8:	mov    DWORD PTR [ebp-0x14],0x42
100438af:	push   eax
100438b0:	mov    DWORD PTR [ebp-0x18],esi
100438b3:	mov    DWORD PTR [ebp-0x20],esi
100438b6:	call   DWORD PTR [ebp+0x8]
100438b9:	add    esp,0x10
100438bc:	pop    esi
100438bd:	leave  
100438be:	ret    
100438bf:	push   DWORD PTR [esp+0x8]
100438c3:	push   0x0
100438c5:	push   DWORD PTR [esp+0xc]
100438c9:	push   0x10048bc7
100438ce:	call   0x1004386a
100438d3:	add    esp,0x10
100438d6:	ret    
100438d7:	jmp    0x10043196
100438dc:	push   ebp
100438dd:	mov    ebp,esp
100438df:	sub    esp,0x20
100438e2:	push   ebx
100438e3:	xor    ebx,ebx
100438e5:	cmp    DWORD PTR [ebp+0x14],ebx
100438e8:	jne    0x1004390a
100438ea:	call   0x10046c41
100438ef:	push   ebx
100438f0:	push   ebx
100438f1:	push   ebx
100438f2:	push   ebx
100438f3:	push   ebx
100438f4:	mov    DWORD PTR [eax],0x16
100438fa:	call   0x100435e1
100438ff:	add    esp,0x14
10043902:	or     eax,0xffffffff
10043905:	jmp    0x100439cf
1004390a:	push   esi
1004390b:	mov    esi,DWORD PTR [ebp+0xc]
1004390e:	push   edi
1004390f:	mov    edi,DWORD PTR [ebp+0x10]
10043912:	cmp    edi,ebx
10043914:	je     0x1004393a
10043916:	cmp    esi,ebx
10043918:	jne    0x1004393a
1004391a:	call   0x10046c41
1004391f:	push   ebx
10043920:	push   ebx
10043921:	push   ebx
10043922:	push   ebx
10043923:	push   ebx
10043924:	mov    DWORD PTR [eax],0x16
1004392a:	call   0x100435e1
1004392f:	add    esp,0x14
10043932:	or     eax,0xffffffff
10043935:	jmp    0x100439cd
1004393a:	cmp    edi,0x3fffffff
10043940:	mov    DWORD PTR [ebp-0x14],0x42
10043947:	mov    DWORD PTR [ebp-0x18],esi
1004394a:	mov    DWORD PTR [ebp-0x20],esi
1004394d:	jbe    0x10043958
1004394f:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10043956:	jmp    0x1004395e
10043958:	lea    eax,[edi+edi*1]
1004395b:	mov    DWORD PTR [ebp-0x1c],eax
1004395e:	push   DWORD PTR [ebp+0x1c]
10043961:	lea    eax,[ebp-0x20]
10043964:	push   DWORD PTR [ebp+0x18]
10043967:	push   DWORD PTR [ebp+0x14]
1004396a:	push   eax
1004396b:	call   DWORD PTR [ebp+0x8]
1004396e:	add    esp,0x10
10043971:	cmp    esi,ebx
10043973:	mov    DWORD PTR [ebp+0x14],eax
10043976:	je     0x100439cd
10043978:	cmp    eax,ebx
1004397a:	jl     0x100439be
1004397c:	dec    DWORD PTR [ebp-0x1c]
1004397f:	js     0x1004398b
10043981:	mov    eax,DWORD PTR [ebp-0x20]
10043984:	mov    BYTE PTR [eax],bl
10043986:	inc    DWORD PTR [ebp-0x20]
10043989:	jmp    0x1004399c
1004398b:	lea    eax,[ebp-0x20]
1004398e:	push   eax
1004398f:	push   ebx
10043990:	call   0x10048a67
10043995:	cmp    eax,0xffffffff
10043998:	pop    ecx
10043999:	pop    ecx
1004399a:	je     0x100439be
1004399c:	dec    DWORD PTR [ebp-0x1c]
1004399f:	js     0x100439a8
100439a1:	mov    eax,DWORD PTR [ebp-0x20]
100439a4:	mov    BYTE PTR [eax],bl
100439a6:	jmp    0x100439b9
100439a8:	lea    eax,[ebp-0x20]
100439ab:	push   eax
100439ac:	push   ebx
100439ad:	call   0x10048a67
100439b2:	cmp    eax,0xffffffff
100439b5:	pop    ecx
100439b6:	pop    ecx
100439b7:	je     0x100439be
100439b9:	mov    eax,DWORD PTR [ebp+0x14]
100439bc:	jmp    0x100439cd
100439be:	xor    eax,eax
100439c0:	cmp    DWORD PTR [ebp-0x1c],ebx
100439c3:	mov    WORD PTR [esi+edi*2-0x2],bx
100439c8:	setge  al
100439cb:	dec    eax
100439cc:	dec    eax
100439cd:	pop    edi
100439ce:	pop    esi
100439cf:	pop    ebx
100439d0:	leave  
100439d1:	ret    
100439d2:	push   ebp
100439d3:	mov    ebp,esp
100439d5:	push   esi
100439d6:	xor    esi,esi
100439d8:	cmp    DWORD PTR [ebp+0x10],esi
100439db:	jne    0x100439fa
100439dd:	call   0x10046c41
100439e2:	push   esi
100439e3:	push   esi
100439e4:	push   esi
100439e5:	push   esi
100439e6:	push   esi
100439e7:	mov    DWORD PTR [eax],0x16
100439ed:	call   0x100435e1
100439f2:	add    esp,0x14
100439f5:	or     eax,0xffffffff
100439f8:	jmp    0x10043a56
100439fa:	push   edi
100439fb:	mov    edi,DWORD PTR [ebp+0x8]
100439fe:	cmp    edi,esi
10043a00:	je     0x10043a07
10043a02:	cmp    DWORD PTR [ebp+0xc],esi
10043a05:	ja     0x10043a14
10043a07:	call   0x10046c41
10043a0c:	mov    DWORD PTR [eax],0x16
10043a12:	jmp    0x10043a45
10043a14:	push   DWORD PTR [ebp+0x18]
10043a17:	push   DWORD PTR [ebp+0x14]
10043a1a:	push   DWORD PTR [ebp+0x10]
10043a1d:	push   DWORD PTR [ebp+0xc]
10043a20:	push   edi
10043a21:	push   0x10049570
10043a26:	call   0x100438dc
10043a2b:	add    esp,0x18
10043a2e:	cmp    eax,esi
10043a30:	jge    0x10043a35
10043a32:	mov    WORD PTR [edi],si
10043a35:	cmp    eax,0xfffffffe
10043a38:	jne    0x10043a55
10043a3a:	call   0x10046c41
10043a3f:	mov    DWORD PTR [eax],0x22
10043a45:	push   esi
10043a46:	push   esi
10043a47:	push   esi
10043a48:	push   esi
10043a49:	push   esi
10043a4a:	call   0x100435e1
10043a4f:	add    esp,0x14
10043a52:	or     eax,0xffffffff
10043a55:	pop    edi
10043a56:	pop    esi
10043a57:	pop    ebp
10043a58:	ret    
10043a59:	push   DWORD PTR [esp+0x10]
10043a5d:	push   0x0
10043a5f:	push   DWORD PTR [esp+0x14]
10043a63:	push   DWORD PTR [esp+0x14]
10043a67:	push   DWORD PTR [esp+0x14]
10043a6b:	call   0x100439d2
10043a70:	add    esp,0x14
10043a73:	ret    
10043a74:	push   ebp
10043a75:	mov    ebp,esp
10043a77:	push   esi
10043a78:	push   edi
10043a79:	mov    edi,DWORD PTR [ebp+0x10]
10043a7c:	mov    eax,edi
10043a7e:	sub    eax,0x0
10043a81:	je     0x1004506c
10043a87:	dec    eax
10043a88:	je     0x1004505b
10043a8e:	dec    eax
10043a8f:	je     0x1004502d
10043a95:	dec    eax
10043a96:	je     0x10044fe5
10043a9c:	dec    eax
10043a9d:	je     0x10044f5c
10043aa3:	mov    ecx,DWORD PTR [ebp+0xc]
10043aa6:	mov    eax,DWORD PTR [ebp+0x8]
10043aa9:	push   ebx
10043aaa:	push   0x20
10043aac:	pop    edx
10043aad:	jmp    0x10043f24
10043ab2:	mov    esi,DWORD PTR [eax]
10043ab4:	cmp    esi,DWORD PTR [ecx]
10043ab6:	je     0x10043b34
10043ab8:	movzx  esi,BYTE PTR [eax]
10043abb:	movzx  ebx,BYTE PTR [ecx]
10043abe:	sub    esi,ebx
10043ac0:	je     0x10043ad7
10043ac2:	xor    ebx,ebx
10043ac4:	test   esi,esi
10043ac6:	setg   bl
10043ac9:	lea    ebx,[ebx+ebx*1-0x1]
10043acd:	mov    esi,ebx
10043acf:	test   esi,esi
10043ad1:	jne    0x10043f40
10043ad7:	movzx  esi,BYTE PTR [eax+0x1]
10043adb:	movzx  ebx,BYTE PTR [ecx+0x1]
10043adf:	sub    esi,ebx
10043ae1:	je     0x10043af8
10043ae3:	xor    ebx,ebx
10043ae5:	test   esi,esi
10043ae7:	setg   bl
10043aea:	lea    ebx,[ebx+ebx*1-0x1]
10043aee:	mov    esi,ebx
10043af0:	test   esi,esi
10043af2:	jne    0x10043f40
10043af8:	movzx  esi,BYTE PTR [eax+0x2]
10043afc:	movzx  ebx,BYTE PTR [ecx+0x2]
10043b00:	sub    esi,ebx
10043b02:	je     0x10043b19
10043b04:	xor    ebx,ebx
10043b06:	test   esi,esi
10043b08:	setg   bl
10043b0b:	lea    ebx,[ebx+ebx*1-0x1]
10043b0f:	mov    esi,ebx
10043b11:	test   esi,esi
10043b13:	jne    0x10043f40
10043b19:	movzx  esi,BYTE PTR [eax+0x3]
10043b1d:	movzx  ebx,BYTE PTR [ecx+0x3]
10043b21:	sub    esi,ebx
10043b23:	je     0x10043b36
10043b25:	xor    ebx,ebx
10043b27:	test   esi,esi
10043b29:	setg   bl
10043b2c:	lea    ebx,[ebx+ebx*1-0x1]
10043b30:	mov    esi,ebx
10043b32:	jmp    0x10043b36
10043b34:	xor    esi,esi
10043b36:	test   esi,esi
10043b38:	jne    0x10043f40
10043b3e:	mov    esi,DWORD PTR [eax+0x4]
10043b41:	cmp    esi,DWORD PTR [ecx+0x4]
10043b44:	je     0x10043bc4
10043b46:	movzx  esi,BYTE PTR [eax+0x4]
10043b4a:	movzx  ebx,BYTE PTR [ecx+0x4]
10043b4e:	sub    esi,ebx
10043b50:	je     0x10043b67
10043b52:	xor    ebx,ebx
10043b54:	test   esi,esi
10043b56:	setg   bl
10043b59:	lea    ebx,[ebx+ebx*1-0x1]
10043b5d:	mov    esi,ebx
10043b5f:	test   esi,esi
10043b61:	jne    0x10043f40
10043b67:	movzx  esi,BYTE PTR [eax+0x5]
10043b6b:	movzx  ebx,BYTE PTR [ecx+0x5]
10043b6f:	sub    esi,ebx
10043b71:	je     0x10043b88
10043b73:	xor    ebx,ebx
10043b75:	test   esi,esi
10043b77:	setg   bl
10043b7a:	lea    ebx,[ebx+ebx*1-0x1]
10043b7e:	mov    esi,ebx
10043b80:	test   esi,esi
10043b82:	jne    0x10043f40
10043b88:	movzx  esi,BYTE PTR [eax+0x6]
10043b8c:	movzx  ebx,BYTE PTR [ecx+0x6]
10043b90:	sub    esi,ebx
10043b92:	je     0x10043ba9
10043b94:	xor    ebx,ebx
10043b96:	test   esi,esi
10043b98:	setg   bl
10043b9b:	lea    ebx,[ebx+ebx*1-0x1]
10043b9f:	mov    esi,ebx
10043ba1:	test   esi,esi
10043ba3:	jne    0x10043f40
10043ba9:	movzx  esi,BYTE PTR [eax+0x7]
10043bad:	movzx  ebx,BYTE PTR [ecx+0x7]
10043bb1:	sub    esi,ebx
10043bb3:	je     0x10043bc6
10043bb5:	xor    ebx,ebx
10043bb7:	test   esi,esi
10043bb9:	setg   bl
10043bbc:	lea    ebx,[ebx+ebx*1-0x1]
10043bc0:	mov    esi,ebx
10043bc2:	jmp    0x10043bc6
10043bc4:	xor    esi,esi
10043bc6:	test   esi,esi
10043bc8:	jne    0x10043f40
10043bce:	mov    esi,DWORD PTR [eax+0x8]
10043bd1:	cmp    esi,DWORD PTR [ecx+0x8]
10043bd4:	je     0x10043c54
10043bd6:	movzx  esi,BYTE PTR [eax+0x8]
10043bda:	movzx  ebx,BYTE PTR [ecx+0x8]
10043bde:	sub    esi,ebx
10043be0:	je     0x10043bf7
10043be2:	xor    ebx,ebx
10043be4:	test   esi,esi
10043be6:	setg   bl
10043be9:	lea    ebx,[ebx+ebx*1-0x1]
10043bed:	mov    esi,ebx
10043bef:	test   esi,esi
10043bf1:	jne    0x10043f40
10043bf7:	movzx  esi,BYTE PTR [eax+0x9]
10043bfb:	movzx  ebx,BYTE PTR [ecx+0x9]
10043bff:	sub    esi,ebx
10043c01:	je     0x10043c18
10043c03:	xor    ebx,ebx
10043c05:	test   esi,esi
10043c07:	setg   bl
10043c0a:	lea    ebx,[ebx+ebx*1-0x1]
10043c0e:	mov    esi,ebx
10043c10:	test   esi,esi
10043c12:	jne    0x10043f40
10043c18:	movzx  esi,BYTE PTR [eax+0xa]
10043c1c:	movzx  ebx,BYTE PTR [ecx+0xa]
10043c20:	sub    esi,ebx
10043c22:	je     0x10043c39
10043c24:	xor    ebx,ebx
10043c26:	test   esi,esi
10043c28:	setg   bl
10043c2b:	lea    ebx,[ebx+ebx*1-0x1]
10043c2f:	mov    esi,ebx
10043c31:	test   esi,esi
10043c33:	jne    0x10043f40
10043c39:	movzx  esi,BYTE PTR [eax+0xb]
10043c3d:	movzx  ebx,BYTE PTR [ecx+0xb]
10043c41:	sub    esi,ebx
10043c43:	je     0x10043c56
10043c45:	xor    ebx,ebx
10043c47:	test   esi,esi
10043c49:	setg   bl
10043c4c:	lea    ebx,[ebx+ebx*1-0x1]
10043c50:	mov    esi,ebx
10043c52:	jmp    0x10043c56
10043c54:	xor    esi,esi
10043c56:	test   esi,esi
10043c58:	jne    0x10043f40
10043c5e:	mov    esi,DWORD PTR [eax+0xc]
10043c61:	cmp    esi,DWORD PTR [ecx+0xc]
10043c64:	je     0x10043ce4
10043c66:	movzx  esi,BYTE PTR [eax+0xc]
10043c6a:	movzx  ebx,BYTE PTR [ecx+0xc]
10043c6e:	sub    esi,ebx
10043c70:	je     0x10043c87
10043c72:	xor    ebx,ebx
10043c74:	test   esi,esi
10043c76:	setg   bl
10043c79:	lea    ebx,[ebx+ebx*1-0x1]
10043c7d:	mov    esi,ebx
10043c7f:	test   esi,esi
10043c81:	jne    0x10043f40
10043c87:	movzx  esi,BYTE PTR [eax+0xd]
10043c8b:	movzx  ebx,BYTE PTR [ecx+0xd]
10043c8f:	sub    esi,ebx
10043c91:	je     0x10043ca8
10043c93:	xor    ebx,ebx
10043c95:	test   esi,esi
10043c97:	setg   bl
10043c9a:	lea    ebx,[ebx+ebx*1-0x1]
10043c9e:	mov    esi,ebx
10043ca0:	test   esi,esi
10043ca2:	jne    0x10043f40
10043ca8:	movzx  esi,BYTE PTR [eax+0xe]
10043cac:	movzx  ebx,BYTE PTR [ecx+0xe]
10043cb0:	sub    esi,ebx
10043cb2:	je     0x10043cc9
10043cb4:	xor    ebx,ebx
10043cb6:	test   esi,esi
10043cb8:	setg   bl
10043cbb:	lea    ebx,[ebx+ebx*1-0x1]
10043cbf:	mov    esi,ebx
10043cc1:	test   esi,esi
10043cc3:	jne    0x10043f40
10043cc9:	movzx  esi,BYTE PTR [eax+0xf]
10043ccd:	movzx  ebx,BYTE PTR [ecx+0xf]
10043cd1:	sub    esi,ebx
10043cd3:	je     0x10043ce6
10043cd5:	xor    ebx,ebx
10043cd7:	test   esi,esi
10043cd9:	setg   bl
10043cdc:	lea    ebx,[ebx+ebx*1-0x1]
10043ce0:	mov    esi,ebx
10043ce2:	jmp    0x10043ce6
10043ce4:	xor    esi,esi
10043ce6:	test   esi,esi
10043ce8:	jne    0x10043f40
10043cee:	mov    esi,DWORD PTR [eax+0x10]
10043cf1:	cmp    esi,DWORD PTR [ecx+0x10]
10043cf4:	je     0x10043d74
10043cf6:	movzx  ebx,BYTE PTR [ecx+0x10]
10043cfa:	movzx  esi,BYTE PTR [eax+0x10]
10043cfe:	sub    esi,ebx
10043d00:	je     0x10043d17
10043d02:	xor    ebx,ebx
10043d04:	test   esi,esi
10043d06:	setg   bl
10043d09:	lea    ebx,[ebx+ebx*1-0x1]
10043d0d:	mov    esi,ebx
10043d0f:	test   esi,esi
10043d11:	jne    0x10043f40
10043d17:	movzx  esi,BYTE PTR [eax+0x11]
10043d1b:	movzx  ebx,BYTE PTR [ecx+0x11]
10043d1f:	sub    esi,ebx
10043d21:	je     0x10043d38
10043d23:	xor    ebx,ebx
10043d25:	test   esi,esi
10043d27:	setg   bl
10043d2a:	lea    ebx,[ebx+ebx*1-0x1]
10043d2e:	mov    esi,ebx
10043d30:	test   esi,esi
10043d32:	jne    0x10043f40
10043d38:	movzx  esi,BYTE PTR [eax+0x12]
10043d3c:	movzx  ebx,BYTE PTR [ecx+0x12]
10043d40:	sub    esi,ebx
10043d42:	je     0x10043d59
10043d44:	xor    ebx,ebx
10043d46:	test   esi,esi
10043d48:	setg   bl
10043d4b:	lea    ebx,[ebx+ebx*1-0x1]
10043d4f:	mov    esi,ebx
10043d51:	test   esi,esi
10043d53:	jne    0x10043f40
10043d59:	movzx  esi,BYTE PTR [eax+0x13]
10043d5d:	movzx  ebx,BYTE PTR [ecx+0x13]
10043d61:	sub    esi,ebx
10043d63:	je     0x10043d76
10043d65:	xor    ebx,ebx
10043d67:	test   esi,esi
10043d69:	setg   bl
10043d6c:	lea    ebx,[ebx+ebx*1-0x1]
10043d70:	mov    esi,ebx
10043d72:	jmp    0x10043d76
10043d74:	xor    esi,esi
10043d76:	test   esi,esi
10043d78:	jne    0x10043f40
10043d7e:	mov    esi,DWORD PTR [eax+0x14]
10043d81:	cmp    esi,DWORD PTR [ecx+0x14]
10043d84:	je     0x10043e04
10043d86:	movzx  esi,BYTE PTR [eax+0x14]
10043d8a:	movzx  ebx,BYTE PTR [ecx+0x14]
10043d8e:	sub    esi,ebx
10043d90:	je     0x10043da7
10043d92:	xor    ebx,ebx
10043d94:	test   esi,esi
10043d96:	setg   bl
10043d99:	lea    ebx,[ebx+ebx*1-0x1]
10043d9d:	mov    esi,ebx
10043d9f:	test   esi,esi
10043da1:	jne    0x10043f40
10043da7:	movzx  esi,BYTE PTR [eax+0x15]
10043dab:	movzx  ebx,BYTE PTR [ecx+0x15]
10043daf:	sub    esi,ebx
10043db1:	je     0x10043dc8
10043db3:	xor    ebx,ebx
10043db5:	test   esi,esi
10043db7:	setg   bl
10043dba:	lea    ebx,[ebx+ebx*1-0x1]
10043dbe:	mov    esi,ebx
10043dc0:	test   esi,esi
10043dc2:	jne    0x10043f40
10043dc8:	movzx  esi,BYTE PTR [eax+0x16]
10043dcc:	movzx  ebx,BYTE PTR [ecx+0x16]
10043dd0:	sub    esi,ebx
10043dd2:	je     0x10043de9
10043dd4:	xor    ebx,ebx
10043dd6:	test   esi,esi
10043dd8:	setg   bl
10043ddb:	lea    ebx,[ebx+ebx*1-0x1]
10043ddf:	mov    esi,ebx
10043de1:	test   esi,esi
10043de3:	jne    0x10043f40
10043de9:	movzx  esi,BYTE PTR [eax+0x17]
10043ded:	movzx  ebx,BYTE PTR [ecx+0x17]
10043df1:	sub    esi,ebx
10043df3:	je     0x10043e06
10043df5:	xor    ebx,ebx
10043df7:	test   esi,esi
10043df9:	setg   bl
10043dfc:	lea    ebx,[ebx+ebx*1-0x1]
10043e00:	mov    esi,ebx
10043e02:	jmp    0x10043e06
10043e04:	xor    esi,esi
10043e06:	test   esi,esi
10043e08:	jne    0x10043f40
10043e0e:	mov    esi,DWORD PTR [eax+0x18]
10043e11:	cmp    esi,DWORD PTR [ecx+0x18]
10043e14:	je     0x10043e94
10043e16:	movzx  esi,BYTE PTR [eax+0x18]
10043e1a:	movzx  ebx,BYTE PTR [ecx+0x18]
10043e1e:	sub    esi,ebx
10043e20:	je     0x10043e37
10043e22:	xor    ebx,ebx
10043e24:	test   esi,esi
10043e26:	setg   bl
10043e29:	lea    ebx,[ebx+ebx*1-0x1]
10043e2d:	mov    esi,ebx
10043e2f:	test   esi,esi
10043e31:	jne    0x10043f40
10043e37:	movzx  esi,BYTE PTR [eax+0x19]
10043e3b:	movzx  ebx,BYTE PTR [ecx+0x19]
10043e3f:	sub    esi,ebx
10043e41:	je     0x10043e58
10043e43:	xor    ebx,ebx
10043e45:	test   esi,esi
10043e47:	setg   bl
10043e4a:	lea    ebx,[ebx+ebx*1-0x1]
10043e4e:	mov    esi,ebx
10043e50:	test   esi,esi
10043e52:	jne    0x10043f40
10043e58:	movzx  esi,BYTE PTR [eax+0x1a]
10043e5c:	movzx  ebx,BYTE PTR [ecx+0x1a]
10043e60:	sub    esi,ebx
10043e62:	je     0x10043e79
10043e64:	xor    ebx,ebx
10043e66:	test   esi,esi
10043e68:	setg   bl
10043e6b:	lea    ebx,[ebx+ebx*1-0x1]
10043e6f:	mov    esi,ebx
10043e71:	test   esi,esi
10043e73:	jne    0x10043f40
10043e79:	movzx  esi,BYTE PTR [eax+0x1b]
10043e7d:	movzx  ebx,BYTE PTR [ecx+0x1b]
10043e81:	sub    esi,ebx
10043e83:	je     0x10043e96
10043e85:	xor    ebx,ebx
10043e87:	test   esi,esi
10043e89:	setg   bl
10043e8c:	lea    ebx,[ebx+ebx*1-0x1]
10043e90:	mov    esi,ebx
10043e92:	jmp    0x10043e96
10043e94:	xor    esi,esi
10043e96:	test   esi,esi
10043e98:	jne    0x10043f40
10043e9e:	mov    esi,DWORD PTR [eax+0x1c]
10043ea1:	cmp    esi,DWORD PTR [ecx+0x1c]
10043ea4:	je     0x10043f18
10043ea6:	movzx  esi,BYTE PTR [eax+0x1c]
10043eaa:	movzx  ebx,BYTE PTR [ecx+0x1c]
10043eae:	sub    esi,ebx
10043eb0:	je     0x10043ec3
10043eb2:	xor    ebx,ebx
10043eb4:	test   esi,esi
10043eb6:	setg   bl
10043eb9:	lea    ebx,[ebx+ebx*1-0x1]
10043ebd:	mov    esi,ebx
10043ebf:	test   esi,esi
10043ec1:	jne    0x10043f40
10043ec3:	movzx  esi,BYTE PTR [eax+0x1d]
10043ec7:	movzx  ebx,BYTE PTR [ecx+0x1d]
10043ecb:	sub    esi,ebx
10043ecd:	je     0x10043ee0
10043ecf:	xor    ebx,ebx
10043ed1:	test   esi,esi
10043ed3:	setg   bl
10043ed6:	lea    ebx,[ebx+ebx*1-0x1]
10043eda:	mov    esi,ebx
10043edc:	test   esi,esi
10043ede:	jne    0x10043f40
10043ee0:	movzx  esi,BYTE PTR [eax+0x1e]
10043ee4:	movzx  ebx,BYTE PTR [ecx+0x1e]
10043ee8:	sub    esi,ebx
10043eea:	je     0x10043efd
10043eec:	xor    ebx,ebx
10043eee:	test   esi,esi
10043ef0:	setg   bl
10043ef3:	lea    ebx,[ebx+ebx*1-0x1]
10043ef7:	mov    esi,ebx
10043ef9:	test   esi,esi
10043efb:	jne    0x10043f40
10043efd:	movzx  esi,BYTE PTR [eax+0x1f]
10043f01:	movzx  ebx,BYTE PTR [ecx+0x1f]
10043f05:	sub    esi,ebx
10043f07:	je     0x10043f1a
10043f09:	xor    ebx,ebx
10043f0b:	test   esi,esi
10043f0d:	setg   bl
10043f10:	lea    ebx,[ebx+ebx*1-0x1]
10043f14:	mov    esi,ebx
10043f16:	jmp    0x10043f1a
10043f18:	xor    esi,esi
10043f1a:	test   esi,esi
10043f1c:	jne    0x10043f40
10043f1e:	add    eax,edx
10043f20:	add    ecx,edx
10043f22:	sub    edi,edx
10043f24:	cmp    edi,edx
10043f26:	jae    0x10043ab2
10043f2c:	add    eax,edi
10043f2e:	add    ecx,edi
10043f30:	cmp    edi,0x1f
10043f33:	ja     0x10044313
10043f39:	jmp    DWORD PTR [edi*4+0x10045074]
10043f40:	mov    eax,esi
10043f42:	jmp    0x10044315
10043f47:	mov    edx,DWORD PTR [eax-0x1c]
10043f4a:	cmp    edx,DWORD PTR [ecx-0x1c]
10043f4d:	je     0x10043fc0
10043f4f:	movzx  esi,dl
10043f52:	movzx  edx,BYTE PTR [ecx-0x1c]
10043f56:	sub    esi,edx
10043f58:	je     0x10043f6b
10043f5a:	xor    edx,edx
10043f5c:	test   esi,esi
10043f5e:	setg   dl
10043f61:	lea    edx,[edx+edx*1-0x1]
10043f65:	mov    esi,edx
10043f67:	test   esi,esi
10043f69:	jne    0x10043f40
10043f6b:	movzx  esi,BYTE PTR [eax-0x1b]
10043f6f:	movzx  edx,BYTE PTR [ecx-0x1b]
10043f73:	sub    esi,edx
10043f75:	je     0x10043f88
10043f77:	xor    edx,edx
10043f79:	test   esi,esi
10043f7b:	setg   dl
10043f7e:	lea    edx,[edx+edx*1-0x1]
10043f82:	mov    esi,edx
10043f84:	test   esi,esi
10043f86:	jne    0x10043f40
10043f88:	movzx  esi,BYTE PTR [eax-0x1a]
10043f8c:	movzx  edx,BYTE PTR [ecx-0x1a]
10043f90:	sub    esi,edx
10043f92:	je     0x10043fa5
10043f94:	xor    edx,edx
10043f96:	test   esi,esi
10043f98:	setg   dl
10043f9b:	lea    edx,[edx+edx*1-0x1]
10043f9f:	mov    esi,edx
10043fa1:	test   esi,esi
10043fa3:	jne    0x10043f40
10043fa5:	movzx  esi,BYTE PTR [eax-0x19]
10043fa9:	movzx  edx,BYTE PTR [ecx-0x19]
10043fad:	sub    esi,edx
10043faf:	je     0x10043fc2
10043fb1:	xor    edx,edx
10043fb3:	test   esi,esi
10043fb5:	setg   dl
10043fb8:	lea    edx,[edx+edx*1-0x1]
10043fbc:	mov    esi,edx
10043fbe:	jmp    0x10043fc2
10043fc0:	xor    esi,esi
10043fc2:	test   esi,esi
10043fc4:	jne    0x10043f40
10043fca:	mov    edx,DWORD PTR [eax-0x18]
10043fcd:	cmp    edx,DWORD PTR [ecx-0x18]
10043fd0:	je     0x1004404f
10043fd2:	movzx  esi,dl
10043fd5:	movzx  edx,BYTE PTR [ecx-0x18]
10043fd9:	sub    esi,edx
10043fdb:	je     0x10043ff2
10043fdd:	xor    edx,edx
10043fdf:	test   esi,esi
10043fe1:	setg   dl
10043fe4:	lea    edx,[edx+edx*1-0x1]
10043fe8:	mov    esi,edx
10043fea:	test   esi,esi
10043fec:	jne    0x10043f40
10043ff2:	movzx  esi,BYTE PTR [eax-0x17]
10043ff6:	movzx  edx,BYTE PTR [ecx-0x17]
10043ffa:	sub    esi,edx
10043ffc:	je     0x10044013
10043ffe:	xor    edx,edx
10044000:	test   esi,esi
10044002:	setg   dl
10044005:	lea    edx,[edx+edx*1-0x1]
10044009:	mov    esi,edx
1004400b:	test   esi,esi
1004400d:	jne    0x10043f40
10044013:	movzx  esi,BYTE PTR [eax-0x16]
10044017:	movzx  edx,BYTE PTR [ecx-0x16]
1004401b:	sub    esi,edx
1004401d:	je     0x10044034
1004401f:	xor    edx,edx
10044021:	test   esi,esi
10044023:	setg   dl
10044026:	lea    edx,[edx+edx*1-0x1]
1004402a:	mov    esi,edx
1004402c:	test   esi,esi
1004402e:	jne    0x10043f40
10044034:	movzx  esi,BYTE PTR [eax-0x15]
10044038:	movzx  edx,BYTE PTR [ecx-0x15]
1004403c:	sub    esi,edx
1004403e:	je     0x10044051
10044040:	xor    edx,edx
10044042:	test   esi,esi
10044044:	setg   dl
10044047:	lea    edx,[edx+edx*1-0x1]
1004404b:	mov    esi,edx
1004404d:	jmp    0x10044051
1004404f:	xor    esi,esi
10044051:	test   esi,esi
10044053:	jne    0x10043f40
10044059:	mov    edx,DWORD PTR [eax-0x14]
1004405c:	cmp    edx,DWORD PTR [ecx-0x14]
1004405f:	je     0x100440de
10044061:	movzx  esi,dl
10044064:	movzx  edx,BYTE PTR [ecx-0x14]
10044068:	sub    esi,edx
1004406a:	je     0x10044081
1004406c:	xor    edx,edx
1004406e:	test   esi,esi
10044070:	setg   dl
10044073:	lea    edx,[edx+edx*1-0x1]
10044077:	mov    esi,edx
10044079:	test   esi,esi
1004407b:	jne    0x10043f40
10044081:	movzx  esi,BYTE PTR [eax-0x13]
10044085:	movzx  edx,BYTE PTR [ecx-0x13]
10044089:	sub    esi,edx
1004408b:	je     0x100440a2
1004408d:	xor    edx,edx
1004408f:	test   esi,esi
10044091:	setg   dl
10044094:	lea    edx,[edx+edx*1-0x1]
10044098:	mov    esi,edx
1004409a:	test   esi,esi
1004409c:	jne    0x10043f40
100440a2:	movzx  esi,BYTE PTR [eax-0x12]
100440a6:	movzx  edx,BYTE PTR [ecx-0x12]
100440aa:	sub    esi,edx
100440ac:	je     0x100440c3
100440ae:	xor    edx,edx
100440b0:	test   esi,esi
100440b2:	setg   dl
100440b5:	lea    edx,[edx+edx*1-0x1]
100440b9:	mov    esi,edx
100440bb:	test   esi,esi
100440bd:	jne    0x10043f40
100440c3:	movzx  esi,BYTE PTR [eax-0x11]
100440c7:	movzx  edx,BYTE PTR [ecx-0x11]
100440cb:	sub    esi,edx
100440cd:	je     0x100440e0
100440cf:	xor    edx,edx
100440d1:	test   esi,esi
100440d3:	setg   dl
100440d6:	lea    edx,[edx+edx*1-0x1]
100440da:	mov    esi,edx
100440dc:	jmp    0x100440e0
100440de:	xor    esi,esi
100440e0:	test   esi,esi
100440e2:	jne    0x10043f40
100440e8:	mov    edx,DWORD PTR [eax-0x10]
100440eb:	cmp    edx,DWORD PTR [ecx-0x10]
100440ee:	je     0x1004416d
100440f0:	movzx  esi,dl
100440f3:	movzx  edx,BYTE PTR [ecx-0x10]
100440f7:	sub    esi,edx
100440f9:	je     0x10044110
100440fb:	xor    edx,edx
100440fd:	test   esi,esi
100440ff:	setg   dl
10044102:	lea    edx,[edx+edx*1-0x1]
10044106:	mov    esi,edx
10044108:	test   esi,esi
1004410a:	jne    0x10043f40
10044110:	movzx  esi,BYTE PTR [eax-0xf]
10044114:	movzx  edx,BYTE PTR [ecx-0xf]
10044118:	sub    esi,edx
1004411a:	je     0x10044131
1004411c:	xor    edx,edx
1004411e:	test   esi,esi
10044120:	setg   dl
10044123:	lea    edx,[edx+edx*1-0x1]
10044127:	mov    esi,edx
10044129:	test   esi,esi
1004412b:	jne    0x10043f40
10044131:	movzx  esi,BYTE PTR [eax-0xe]
10044135:	movzx  edx,BYTE PTR [ecx-0xe]
10044139:	sub    esi,edx
1004413b:	je     0x10044152
1004413d:	xor    edx,edx
1004413f:	test   esi,esi
10044141:	setg   dl
10044144:	lea    edx,[edx+edx*1-0x1]
10044148:	mov    esi,edx
1004414a:	test   esi,esi
1004414c:	jne    0x10043f40
10044152:	movzx  esi,BYTE PTR [eax-0xd]
10044156:	movzx  edx,BYTE PTR [ecx-0xd]
1004415a:	sub    esi,edx
1004415c:	je     0x1004416f
1004415e:	xor    edx,edx
10044160:	test   esi,esi
10044162:	setg   dl
10044165:	lea    edx,[edx+edx*1-0x1]
10044169:	mov    esi,edx
1004416b:	jmp    0x1004416f
1004416d:	xor    esi,esi
1004416f:	test   esi,esi
10044171:	jne    0x10043f40
10044177:	mov    edx,DWORD PTR [eax-0xc]
1004417a:	cmp    edx,DWORD PTR [ecx-0xc]
1004417d:	je     0x100441fd
1004417f:	movzx  edx,BYTE PTR [ecx-0xc]
10044183:	movzx  esi,BYTE PTR [eax-0xc]
10044187:	sub    esi,edx
10044189:	je     0x100441a0
1004418b:	xor    edx,edx
1004418d:	test   esi,esi
1004418f:	setg   dl
10044192:	lea    edx,[edx+edx*1-0x1]
10044196:	mov    esi,edx
10044198:	test   esi,esi
1004419a:	jne    0x10043f40
100441a0:	movzx  esi,BYTE PTR [eax-0xb]
100441a4:	movzx  edx,BYTE PTR [ecx-0xb]
100441a8:	sub    esi,edx
100441aa:	je     0x100441c1
100441ac:	xor    edx,edx
100441ae:	test   esi,esi
100441b0:	setg   dl
100441b3:	lea    edx,[edx+edx*1-0x1]
100441b7:	mov    esi,edx
100441b9:	test   esi,esi
100441bb:	jne    0x10043f40
100441c1:	movzx  esi,BYTE PTR [eax-0xa]
100441c5:	movzx  edx,BYTE PTR [ecx-0xa]
100441c9:	sub    esi,edx
100441cb:	je     0x100441e2
100441cd:	xor    edx,edx
100441cf:	test   esi,esi
100441d1:	setg   dl
100441d4:	lea    edx,[edx+edx*1-0x1]
100441d8:	mov    esi,edx
100441da:	test   esi,esi
100441dc:	jne    0x10043f40
100441e2:	movzx  esi,BYTE PTR [eax-0x9]
100441e6:	movzx  edx,BYTE PTR [ecx-0x9]
100441ea:	sub    esi,edx
100441ec:	je     0x100441ff
100441ee:	xor    edx,edx
100441f0:	test   esi,esi
100441f2:	setg   dl
100441f5:	lea    edx,[edx+edx*1-0x1]
100441f9:	mov    esi,edx
100441fb:	jmp    0x100441ff
100441fd:	xor    esi,esi
100441ff:	test   esi,esi
10044201:	jne    0x10043f40
10044207:	mov    edx,DWORD PTR [eax-0x8]
1004420a:	cmp    edx,DWORD PTR [ecx-0x8]
1004420d:	je     0x1004428c
1004420f:	movzx  esi,dl
10044212:	movzx  edx,BYTE PTR [ecx-0x8]
10044216:	sub    esi,edx
10044218:	je     0x1004422f
1004421a:	xor    edx,edx
1004421c:	test   esi,esi
1004421e:	setg   dl
10044221:	lea    edx,[edx+edx*1-0x1]
10044225:	mov    esi,edx
10044227:	test   esi,esi
10044229:	jne    0x10043f40
1004422f:	movzx  esi,BYTE PTR [eax-0x7]
10044233:	movzx  edx,BYTE PTR [ecx-0x7]
10044237:	sub    esi,edx
10044239:	je     0x10044250
1004423b:	xor    edx,edx
1004423d:	test   esi,esi
1004423f:	setg   dl
10044242:	lea    edx,[edx+edx*1-0x1]
10044246:	mov    esi,edx
10044248:	test   esi,esi
1004424a:	jne    0x10043f40
10044250:	movzx  esi,BYTE PTR [eax-0x6]
10044254:	movzx  edx,BYTE PTR [ecx-0x6]
10044258:	sub    esi,edx
1004425a:	je     0x10044271
1004425c:	xor    edx,edx
1004425e:	test   esi,esi
10044260:	setg   dl
10044263:	lea    edx,[edx+edx*1-0x1]
10044267:	mov    esi,edx
10044269:	test   esi,esi
1004426b:	jne    0x10043f40
10044271:	movzx  esi,BYTE PTR [eax-0x5]
10044275:	movzx  edx,BYTE PTR [ecx-0x5]
10044279:	sub    esi,edx
1004427b:	je     0x1004428e
1004427d:	xor    edx,edx
1004427f:	test   esi,esi
10044281:	setg   dl
10044284:	lea    edx,[edx+edx*1-0x1]
10044288:	mov    esi,edx
1004428a:	jmp    0x1004428e
1004428c:	xor    esi,esi
1004428e:	test   esi,esi
10044290:	jne    0x10043f40
10044296:	mov    edx,DWORD PTR [eax-0x4]
10044299:	cmp    edx,DWORD PTR [ecx-0x4]
1004429c:	je     0x1004430d
1004429e:	movzx  esi,dl
100442a1:	movzx  edx,BYTE PTR [ecx-0x4]
100442a5:	sub    esi,edx
100442a7:	je     0x100442b8
100442a9:	xor    edx,edx
100442ab:	test   esi,esi
100442ad:	setg   dl
100442b0:	lea    edx,[edx+edx*1-0x1]
100442b4:	test   edx,edx
100442b6:	jne    0x100442ee
100442b8:	movzx  esi,BYTE PTR [eax-0x3]
100442bc:	movzx  edx,BYTE PTR [ecx-0x3]
100442c0:	sub    esi,edx
100442c2:	je     0x100442d3
100442c4:	xor    edx,edx
100442c6:	test   esi,esi
100442c8:	setg   dl
100442cb:	lea    edx,[edx+edx*1-0x1]
100442cf:	test   edx,edx
100442d1:	jne    0x100442ee
100442d3:	movzx  esi,BYTE PTR [eax-0x2]
100442d7:	movzx  edx,BYTE PTR [ecx-0x2]
100442db:	sub    esi,edx
100442dd:	je     0x100442f2
100442df:	xor    edx,edx
100442e1:	test   esi,esi
100442e3:	setg   dl
100442e6:	lea    edx,[edx+edx*1-0x1]
100442ea:	test   edx,edx
100442ec:	je     0x100442f2
100442ee:	mov    eax,edx
100442f0:	jmp    0x1004430f
100442f2:	movzx  eax,BYTE PTR [eax-0x1]
100442f6:	movzx  ecx,BYTE PTR [ecx-0x1]
100442fa:	sub    eax,ecx
100442fc:	je     0x1004430f
100442fe:	xor    ecx,ecx
10044300:	test   eax,eax
10044302:	setg   cl
10044305:	lea    ecx,[ecx+ecx*1-0x1]
10044309:	mov    eax,ecx
1004430b:	jmp    0x1004430f
1004430d:	xor    eax,eax
1004430f:	test   eax,eax
10044311:	jne    0x10044315
10044313:	xor    eax,eax
10044315:	pop    ebx
10044316:	jmp    0x1004506e
1004431b:	mov    edx,DWORD PTR [eax-0x1d]
1004431e:	cmp    edx,DWORD PTR [ecx-0x1d]
10044321:	je     0x100443a0
10044323:	movzx  esi,dl
10044326:	movzx  edx,BYTE PTR [ecx-0x1d]
1004432a:	sub    esi,edx
1004432c:	je     0x10044343
1004432e:	xor    edx,edx
10044330:	test   esi,esi
10044332:	setg   dl
10044335:	lea    edx,[edx+edx*1-0x1]
10044339:	mov    esi,edx
1004433b:	test   esi,esi
1004433d:	jne    0x10043f40
10044343:	movzx  esi,BYTE PTR [eax-0x1c]
10044347:	movzx  edx,BYTE PTR [ecx-0x1c]
1004434b:	sub    esi,edx
1004434d:	je     0x10044364
1004434f:	xor    edx,edx
10044351:	test   esi,esi
10044353:	setg   dl
10044356:	lea    edx,[edx+edx*1-0x1]
1004435a:	mov    esi,edx
1004435c:	test   esi,esi
1004435e:	jne    0x10043f40
10044364:	movzx  esi,BYTE PTR [eax-0x1b]
10044368:	movzx  edx,BYTE PTR [ecx-0x1b]
1004436c:	sub    esi,edx
1004436e:	je     0x10044385
10044370:	xor    edx,edx
10044372:	test   esi,esi
10044374:	setg   dl
10044377:	lea    edx,[edx+edx*1-0x1]
1004437b:	mov    esi,edx
1004437d:	test   esi,esi
1004437f:	jne    0x10043f40
10044385:	movzx  esi,BYTE PTR [eax-0x1a]
10044389:	movzx  edx,BYTE PTR [ecx-0x1a]
1004438d:	sub    esi,edx
1004438f:	je     0x100443a2
10044391:	xor    edx,edx
10044393:	test   esi,esi
10044395:	setg   dl
10044398:	lea    edx,[edx+edx*1-0x1]
1004439c:	mov    esi,edx
1004439e:	jmp    0x100443a2
100443a0:	xor    esi,esi
100443a2:	test   esi,esi
100443a4:	jne    0x10043f40
100443aa:	mov    edx,DWORD PTR [eax-0x19]
100443ad:	cmp    edx,DWORD PTR [ecx-0x19]
100443b0:	je     0x1004442f
100443b2:	movzx  esi,dl
100443b5:	movzx  edx,BYTE PTR [ecx-0x19]
100443b9:	sub    esi,edx
100443bb:	je     0x100443d2
100443bd:	xor    edx,edx
100443bf:	test   esi,esi
100443c1:	setg   dl
100443c4:	lea    edx,[edx+edx*1-0x1]
100443c8:	mov    esi,edx
100443ca:	test   esi,esi
100443cc:	jne    0x10043f40
100443d2:	movzx  esi,BYTE PTR [eax-0x18]
100443d6:	movzx  edx,BYTE PTR [ecx-0x18]
100443da:	sub    esi,edx
100443dc:	je     0x100443f3
100443de:	xor    edx,edx
100443e0:	test   esi,esi
100443e2:	setg   dl
100443e5:	lea    edx,[edx+edx*1-0x1]
100443e9:	mov    esi,edx
100443eb:	test   esi,esi
100443ed:	jne    0x10043f40
100443f3:	movzx  esi,BYTE PTR [eax-0x17]
100443f7:	movzx  edx,BYTE PTR [ecx-0x17]
100443fb:	sub    esi,edx
100443fd:	je     0x10044414
100443ff:	xor    edx,edx
10044401:	test   esi,esi
10044403:	setg   dl
10044406:	lea    edx,[edx+edx*1-0x1]
1004440a:	mov    esi,edx
1004440c:	test   esi,esi
1004440e:	jne    0x10043f40
10044414:	movzx  esi,BYTE PTR [eax-0x16]
10044418:	movzx  edx,BYTE PTR [ecx-0x16]
1004441c:	sub    esi,edx
1004441e:	je     0x10044431
10044420:	xor    edx,edx
10044422:	test   esi,esi
10044424:	setg   dl
10044427:	lea    edx,[edx+edx*1-0x1]
1004442b:	mov    esi,edx
1004442d:	jmp    0x10044431
1004442f:	xor    esi,esi
10044431:	test   esi,esi
10044433:	jne    0x10043f40
10044439:	mov    edx,DWORD PTR [eax-0x15]
1004443c:	cmp    edx,DWORD PTR [ecx-0x15]
1004443f:	je     0x100444be
10044441:	movzx  esi,dl
10044444:	movzx  edx,BYTE PTR [ecx-0x15]
10044448:	sub    esi,edx
1004444a:	je     0x10044461
1004444c:	xor    edx,edx
1004444e:	test   esi,esi
10044450:	setg   dl
10044453:	lea    edx,[edx+edx*1-0x1]
10044457:	mov    esi,edx
10044459:	test   esi,esi
1004445b:	jne    0x10043f40
10044461:	movzx  esi,BYTE PTR [eax-0x14]
10044465:	movzx  edx,BYTE PTR [ecx-0x14]
10044469:	sub    esi,edx
1004446b:	je     0x10044482
1004446d:	xor    edx,edx
1004446f:	test   esi,esi
10044471:	setg   dl
10044474:	lea    edx,[edx+edx*1-0x1]
10044478:	mov    esi,edx
1004447a:	test   esi,esi
1004447c:	jne    0x10043f40
10044482:	movzx  esi,BYTE PTR [eax-0x13]
10044486:	movzx  edx,BYTE PTR [ecx-0x13]
1004448a:	sub    esi,edx
1004448c:	je     0x100444a3
1004448e:	xor    edx,edx
10044490:	test   esi,esi
10044492:	setg   dl
10044495:	lea    edx,[edx+edx*1-0x1]
10044499:	mov    esi,edx
1004449b:	test   esi,esi
1004449d:	jne    0x10043f40
100444a3:	movzx  esi,BYTE PTR [eax-0x12]
100444a7:	movzx  edx,BYTE PTR [ecx-0x12]
100444ab:	sub    esi,edx
100444ad:	je     0x100444c0
100444af:	xor    edx,edx
100444b1:	test   esi,esi
100444b3:	setg   dl
100444b6:	lea    edx,[edx+edx*1-0x1]
100444ba:	mov    esi,edx
100444bc:	jmp    0x100444c0
100444be:	xor    esi,esi
100444c0:	test   esi,esi
100444c2:	jne    0x10043f40
100444c8:	mov    edx,DWORD PTR [eax-0x11]
100444cb:	cmp    edx,DWORD PTR [ecx-0x11]
100444ce:	je     0x1004454d
100444d0:	movzx  esi,dl
100444d3:	movzx  edx,BYTE PTR [ecx-0x11]
100444d7:	sub    esi,edx
100444d9:	je     0x100444f0
100444db:	xor    edx,edx
100444dd:	test   esi,esi
100444df:	setg   dl
100444e2:	lea    edx,[edx+edx*1-0x1]
100444e6:	mov    esi,edx
100444e8:	test   esi,esi
100444ea:	jne    0x10043f40
100444f0:	movzx  esi,BYTE PTR [eax-0x10]
100444f4:	movzx  edx,BYTE PTR [ecx-0x10]
100444f8:	sub    esi,edx
100444fa:	je     0x10044511
100444fc:	xor    edx,edx
100444fe:	test   esi,esi
10044500:	setg   dl
10044503:	lea    edx,[edx+edx*1-0x1]
10044507:	mov    esi,edx
10044509:	test   esi,esi
1004450b:	jne    0x10043f40
10044511:	movzx  esi,BYTE PTR [eax-0xf]
10044515:	movzx  edx,BYTE PTR [ecx-0xf]
10044519:	sub    esi,edx
1004451b:	je     0x10044532
1004451d:	xor    edx,edx
1004451f:	test   esi,esi
10044521:	setg   dl
10044524:	lea    edx,[edx+edx*1-0x1]
10044528:	mov    esi,edx
1004452a:	test   esi,esi
1004452c:	jne    0x10043f40
10044532:	movzx  esi,BYTE PTR [eax-0xe]
10044536:	movzx  edx,BYTE PTR [ecx-0xe]
1004453a:	sub    esi,edx
1004453c:	je     0x1004454f
1004453e:	xor    edx,edx
10044540:	test   esi,esi
10044542:	setg   dl
10044545:	lea    edx,[edx+edx*1-0x1]
10044549:	mov    esi,edx
1004454b:	jmp    0x1004454f
1004454d:	xor    esi,esi
1004454f:	test   esi,esi
10044551:	jne    0x10043f40
10044557:	mov    edx,DWORD PTR [eax-0xd]
1004455a:	cmp    edx,DWORD PTR [ecx-0xd]
1004455d:	je     0x100445dc
1004455f:	movzx  esi,dl
10044562:	movzx  edx,BYTE PTR [ecx-0xd]
10044566:	sub    esi,edx
10044568:	je     0x1004457f
1004456a:	xor    edx,edx
1004456c:	test   esi,esi
1004456e:	setg   dl
10044571:	lea    edx,[edx+edx*1-0x1]
10044575:	mov    esi,edx
10044577:	test   esi,esi
10044579:	jne    0x10043f40
1004457f:	movzx  esi,BYTE PTR [eax-0xc]
10044583:	movzx  edx,BYTE PTR [ecx-0xc]
10044587:	sub    esi,edx
10044589:	je     0x100445a0
1004458b:	xor    edx,edx
1004458d:	test   esi,esi
1004458f:	setg   dl
10044592:	lea    edx,[edx+edx*1-0x1]
10044596:	mov    esi,edx
10044598:	test   esi,esi
1004459a:	jne    0x10043f40
100445a0:	movzx  esi,BYTE PTR [eax-0xb]
100445a4:	movzx  edx,BYTE PTR [ecx-0xb]
100445a8:	sub    esi,edx
100445aa:	je     0x100445c1
100445ac:	xor    edx,edx
100445ae:	test   esi,esi
100445b0:	setg   dl
100445b3:	lea    edx,[edx+edx*1-0x1]
100445b7:	mov    esi,edx
100445b9:	test   esi,esi
100445bb:	jne    0x10043f40
100445c1:	movzx  esi,BYTE PTR [eax-0xa]
100445c5:	movzx  edx,BYTE PTR [ecx-0xa]
100445c9:	sub    esi,edx
100445cb:	je     0x100445de
100445cd:	xor    edx,edx
100445cf:	test   esi,esi
100445d1:	setg   dl
100445d4:	lea    edx,[edx+edx*1-0x1]
100445d8:	mov    esi,edx
100445da:	jmp    0x100445de
100445dc:	xor    esi,esi
100445de:	test   esi,esi
100445e0:	jne    0x10043f40
100445e6:	mov    edx,DWORD PTR [eax-0x9]
100445e9:	cmp    edx,DWORD PTR [ecx-0x9]
100445ec:	je     0x1004466c
100445ee:	movzx  edx,BYTE PTR [ecx-0x9]
100445f2:	movzx  esi,BYTE PTR [eax-0x9]
100445f6:	sub    esi,edx
100445f8:	je     0x1004460f
100445fa:	xor    edx,edx
100445fc:	test   esi,esi
100445fe:	setg   dl
10044601:	lea    edx,[edx+edx*1-0x1]
10044605:	mov    esi,edx
10044607:	test   esi,esi
10044609:	jne    0x10043f40
1004460f:	movzx  esi,BYTE PTR [eax-0x8]
10044613:	movzx  edx,BYTE PTR [ecx-0x8]
10044617:	sub    esi,edx
10044619:	je     0x10044630
1004461b:	xor    edx,edx
1004461d:	test   esi,esi
1004461f:	setg   dl
10044622:	lea    edx,[edx+edx*1-0x1]
10044626:	mov    esi,edx
10044628:	test   esi,esi
1004462a:	jne    0x10043f40
10044630:	movzx  esi,BYTE PTR [eax-0x7]
10044634:	movzx  edx,BYTE PTR [ecx-0x7]
10044638:	sub    esi,edx
1004463a:	je     0x10044651
1004463c:	xor    edx,edx
1004463e:	test   esi,esi
10044640:	setg   dl
10044643:	lea    edx,[edx+edx*1-0x1]
10044647:	mov    esi,edx
10044649:	test   esi,esi
1004464b:	jne    0x10043f40
10044651:	movzx  esi,BYTE PTR [eax-0x6]
10044655:	movzx  edx,BYTE PTR [ecx-0x6]
10044659:	sub    esi,edx
1004465b:	je     0x1004466e
1004465d:	xor    edx,edx
1004465f:	test   esi,esi
10044661:	setg   dl
10044664:	lea    edx,[edx+edx*1-0x1]
10044668:	mov    esi,edx
1004466a:	jmp    0x1004466e
1004466c:	xor    esi,esi
1004466e:	test   esi,esi
10044670:	jne    0x10043f40
10044676:	mov    edx,DWORD PTR [eax-0x5]
10044679:	cmp    edx,DWORD PTR [ecx-0x5]
1004467c:	je     0x100446fb
1004467e:	movzx  esi,dl
10044681:	movzx  edx,BYTE PTR [ecx-0x5]
10044685:	sub    esi,edx
10044687:	je     0x1004469e
10044689:	xor    edx,edx
1004468b:	test   esi,esi
1004468d:	setg   dl
10044690:	lea    edx,[edx+edx*1-0x1]
10044694:	mov    esi,edx
10044696:	test   esi,esi
10044698:	jne    0x10043f40
1004469e:	movzx  esi,BYTE PTR [eax-0x4]
100446a2:	movzx  edx,BYTE PTR [ecx-0x4]
100446a6:	sub    esi,edx
100446a8:	je     0x100446bf
100446aa:	xor    edx,edx
100446ac:	test   esi,esi
100446ae:	setg   dl
100446b1:	lea    edx,[edx+edx*1-0x1]
100446b5:	mov    esi,edx
100446b7:	test   esi,esi
100446b9:	jne    0x10043f40
100446bf:	movzx  esi,BYTE PTR [eax-0x3]
100446c3:	movzx  edx,BYTE PTR [ecx-0x3]
100446c7:	sub    esi,edx
100446c9:	je     0x100446e0
100446cb:	xor    edx,edx
100446cd:	test   esi,esi
100446cf:	setg   dl
100446d2:	lea    edx,[edx+edx*1-0x1]
100446d6:	mov    esi,edx
100446d8:	test   esi,esi
100446da:	jne    0x10043f40
100446e0:	movzx  esi,BYTE PTR [eax-0x2]
100446e4:	movzx  edx,BYTE PTR [ecx-0x2]
100446e8:	sub    esi,edx
100446ea:	je     0x100446fd
100446ec:	xor    edx,edx
100446ee:	test   esi,esi
100446f0:	setg   dl
100446f3:	lea    edx,[edx+edx*1-0x1]
100446f7:	mov    esi,edx
100446f9:	jmp    0x100446fd
100446fb:	xor    esi,esi
100446fd:	test   esi,esi
100446ff:	jne    0x10043f40
10044705:	movzx  ecx,BYTE PTR [ecx-0x1]
10044709:	movzx  eax,BYTE PTR [eax-0x1]
1004470d:	sub    eax,ecx
1004470f:	je     0x10044315
10044715:	xor    ecx,ecx
10044717:	test   eax,eax
10044719:	setg   cl
1004471c:	lea    ecx,[ecx+ecx*1-0x1]
10044720:	mov    eax,ecx
10044722:	jmp    0x10044315
10044727:	mov    edx,DWORD PTR [eax-0x1e]
1004472a:	cmp    edx,DWORD PTR [ecx-0x1e]
1004472d:	je     0x100447ac
1004472f:	movzx  esi,dl
10044732:	movzx  edx,BYTE PTR [ecx-0x1e]
10044736:	sub    esi,edx
10044738:	je     0x1004474f
1004473a:	xor    edx,edx
1004473c:	test   esi,esi
1004473e:	setg   dl
10044741:	lea    edx,[edx+edx*1-0x1]
10044745:	mov    esi,edx
10044747:	test   esi,esi
10044749:	jne    0x10043f40
1004474f:	movzx  esi,BYTE PTR [eax-0x1d]
10044753:	movzx  edx,BYTE PTR [ecx-0x1d]
10044757:	sub    esi,edx
10044759:	je     0x10044770
1004475b:	xor    edx,edx
1004475d:	test   esi,esi
1004475f:	setg   dl
10044762:	lea    edx,[edx+edx*1-0x1]
10044766:	mov    esi,edx
10044768:	test   esi,esi
1004476a:	jne    0x10043f40
10044770:	movzx  esi,BYTE PTR [eax-0x1c]
10044774:	movzx  edx,BYTE PTR [ecx-0x1c]
10044778:	sub    esi,edx
1004477a:	je     0x10044791
1004477c:	xor    edx,edx
1004477e:	test   esi,esi
10044780:	setg   dl
10044783:	lea    edx,[edx+edx*1-0x1]
10044787:	mov    esi,edx
10044789:	test   esi,esi
1004478b:	jne    0x10043f40
10044791:	movzx  esi,BYTE PTR [eax-0x1b]
10044795:	movzx  edx,BYTE PTR [ecx-0x1b]
10044799:	sub    esi,edx
1004479b:	je     0x100447ae
1004479d:	xor    edx,edx
1004479f:	test   esi,esi
100447a1:	setg   dl
100447a4:	lea    edx,[edx+edx*1-0x1]
100447a8:	mov    esi,edx
100447aa:	jmp    0x100447ae
100447ac:	xor    esi,esi
100447ae:	test   esi,esi
100447b0:	jne    0x10043f40
100447b6:	mov    edx,DWORD PTR [eax-0x1a]
100447b9:	cmp    edx,DWORD PTR [ecx-0x1a]
100447bc:	je     0x1004483b
100447be:	movzx  esi,dl
100447c1:	movzx  edx,BYTE PTR [ecx-0x1a]
100447c5:	sub    esi,edx
100447c7:	je     0x100447de
100447c9:	xor    edx,edx
100447cb:	test   esi,esi
100447cd:	setg   dl
100447d0:	lea    edx,[edx+edx*1-0x1]
100447d4:	mov    esi,edx
100447d6:	test   esi,esi
100447d8:	jne    0x10043f40
100447de:	movzx  esi,BYTE PTR [eax-0x19]
100447e2:	movzx  edx,BYTE PTR [ecx-0x19]
100447e6:	sub    esi,edx
100447e8:	je     0x100447ff
100447ea:	xor    edx,edx
100447ec:	test   esi,esi
100447ee:	setg   dl
100447f1:	lea    edx,[edx+edx*1-0x1]
100447f5:	mov    esi,edx
100447f7:	test   esi,esi
100447f9:	jne    0x10043f40
100447ff:	movzx  esi,BYTE PTR [eax-0x18]
10044803:	movzx  edx,BYTE PTR [ecx-0x18]
10044807:	sub    esi,edx
10044809:	je     0x10044820
1004480b:	xor    edx,edx
1004480d:	test   esi,esi
1004480f:	setg   dl
10044812:	lea    edx,[edx+edx*1-0x1]
10044816:	mov    esi,edx
10044818:	test   esi,esi
1004481a:	jne    0x10043f40
10044820:	movzx  esi,BYTE PTR [eax-0x17]
10044824:	movzx  edx,BYTE PTR [ecx-0x17]
10044828:	sub    esi,edx
1004482a:	je     0x1004483d
1004482c:	xor    edx,edx
1004482e:	test   esi,esi
10044830:	setg   dl
10044833:	lea    edx,[edx+edx*1-0x1]
10044837:	mov    esi,edx
10044839:	jmp    0x1004483d
1004483b:	xor    esi,esi
1004483d:	test   esi,esi
1004483f:	jne    0x10043f40
10044845:	mov    edx,DWORD PTR [eax-0x16]
10044848:	cmp    edx,DWORD PTR [ecx-0x16]
1004484b:	je     0x100448ca
1004484d:	movzx  esi,dl
10044850:	movzx  edx,BYTE PTR [ecx-0x16]
10044854:	sub    esi,edx
10044856:	je     0x1004486d
10044858:	xor    edx,edx
1004485a:	test   esi,esi
1004485c:	setg   dl
1004485f:	lea    edx,[edx+edx*1-0x1]
10044863:	mov    esi,edx
10044865:	test   esi,esi
10044867:	jne    0x10043f40
1004486d:	movzx  esi,BYTE PTR [eax-0x15]
10044871:	movzx  edx,BYTE PTR [ecx-0x15]
10044875:	sub    esi,edx
10044877:	je     0x1004488e
10044879:	xor    edx,edx
1004487b:	test   esi,esi
1004487d:	setg   dl
10044880:	lea    edx,[edx+edx*1-0x1]
10044884:	mov    esi,edx
10044886:	test   esi,esi
10044888:	jne    0x10043f40
1004488e:	movzx  esi,BYTE PTR [eax-0x14]
10044892:	movzx  edx,BYTE PTR [ecx-0x14]
10044896:	sub    esi,edx
10044898:	je     0x100448af
1004489a:	xor    edx,edx
1004489c:	test   esi,esi
1004489e:	setg   dl
100448a1:	lea    edx,[edx+edx*1-0x1]
100448a5:	mov    esi,edx
100448a7:	test   esi,esi
100448a9:	jne    0x10043f40
100448af:	movzx  esi,BYTE PTR [eax-0x13]
100448b3:	movzx  edx,BYTE PTR [ecx-0x13]
100448b7:	sub    esi,edx
100448b9:	je     0x100448cc
100448bb:	xor    edx,edx
100448bd:	test   esi,esi
100448bf:	setg   dl
100448c2:	lea    edx,[edx+edx*1-0x1]
100448c6:	mov    esi,edx
100448c8:	jmp    0x100448cc
100448ca:	xor    esi,esi
100448cc:	test   esi,esi
100448ce:	jne    0x10043f40
100448d4:	mov    edx,DWORD PTR [eax-0x12]
100448d7:	cmp    edx,DWORD PTR [ecx-0x12]
100448da:	je     0x10044959
100448dc:	movzx  esi,dl
100448df:	movzx  edx,BYTE PTR [ecx-0x12]
100448e3:	sub    esi,edx
100448e5:	je     0x100448fc
100448e7:	xor    edx,edx
100448e9:	test   esi,esi
100448eb:	setg   dl
100448ee:	lea    edx,[edx+edx*1-0x1]
100448f2:	mov    esi,edx
100448f4:	test   esi,esi
100448f6:	jne    0x10043f40
100448fc:	movzx  esi,BYTE PTR [eax-0x11]
10044900:	movzx  edx,BYTE PTR [ecx-0x11]
10044904:	sub    esi,edx
10044906:	je     0x1004491d
10044908:	xor    edx,edx
1004490a:	test   esi,esi
1004490c:	setg   dl
1004490f:	lea    edx,[edx+edx*1-0x1]
10044913:	mov    esi,edx
10044915:	test   esi,esi
10044917:	jne    0x10043f40
1004491d:	movzx  esi,BYTE PTR [eax-0x10]
10044921:	movzx  edx,BYTE PTR [ecx-0x10]
10044925:	sub    esi,edx
10044927:	je     0x1004493e
10044929:	xor    edx,edx
1004492b:	test   esi,esi
1004492d:	setg   dl
10044930:	lea    edx,[edx+edx*1-0x1]
10044934:	mov    esi,edx
10044936:	test   esi,esi
10044938:	jne    0x10043f40
1004493e:	movzx  esi,BYTE PTR [eax-0xf]
10044942:	movzx  edx,BYTE PTR [ecx-0xf]
10044946:	sub    esi,edx
10044948:	je     0x1004495b
1004494a:	xor    edx,edx
1004494c:	test   esi,esi
1004494e:	setg   dl
10044951:	lea    edx,[edx+edx*1-0x1]
10044955:	mov    esi,edx
10044957:	jmp    0x1004495b
10044959:	xor    esi,esi
1004495b:	test   esi,esi
1004495d:	jne    0x10043f40
10044963:	mov    edx,DWORD PTR [eax-0xe]
10044966:	cmp    edx,DWORD PTR [ecx-0xe]
10044969:	je     0x100449e8
1004496b:	movzx  esi,dl
1004496e:	movzx  edx,BYTE PTR [ecx-0xe]
10044972:	sub    esi,edx
10044974:	je     0x1004498b
10044976:	xor    edx,edx
10044978:	test   esi,esi
1004497a:	setg   dl
1004497d:	lea    edx,[edx+edx*1-0x1]
10044981:	mov    esi,edx
10044983:	test   esi,esi
10044985:	jne    0x10043f40
1004498b:	movzx  esi,BYTE PTR [eax-0xd]
1004498f:	movzx  edx,BYTE PTR [ecx-0xd]
10044993:	sub    esi,edx
10044995:	je     0x100449ac
10044997:	xor    edx,edx
10044999:	test   esi,esi
1004499b:	setg   dl
1004499e:	lea    edx,[edx+edx*1-0x1]
100449a2:	mov    esi,edx
100449a4:	test   esi,esi
100449a6:	jne    0x10043f40
100449ac:	movzx  esi,BYTE PTR [eax-0xc]
100449b0:	movzx  edx,BYTE PTR [ecx-0xc]
100449b4:	sub    esi,edx
100449b6:	je     0x100449cd
100449b8:	xor    edx,edx
100449ba:	test   esi,esi
100449bc:	setg   dl
100449bf:	lea    edx,[edx+edx*1-0x1]
100449c3:	mov    esi,edx
100449c5:	test   esi,esi
100449c7:	jne    0x10043f40
100449cd:	movzx  esi,BYTE PTR [eax-0xb]
100449d1:	movzx  edx,BYTE PTR [ecx-0xb]
100449d5:	sub    esi,edx
100449d7:	je     0x100449ea
100449d9:	xor    edx,edx
100449db:	test   esi,esi
100449dd:	setg   dl
100449e0:	lea    edx,[edx+edx*1-0x1]
100449e4:	mov    esi,edx
100449e6:	jmp    0x100449ea
100449e8:	xor    esi,esi
100449ea:	test   esi,esi
100449ec:	jne    0x10043f40
100449f2:	mov    edx,DWORD PTR [eax-0xa]
100449f5:	cmp    edx,DWORD PTR [ecx-0xa]
100449f8:	je     0x10044a78
100449fa:	movzx  edx,BYTE PTR [ecx-0xa]
100449fe:	movzx  esi,BYTE PTR [eax-0xa]
10044a02:	sub    esi,edx
10044a04:	je     0x10044a1b
10044a06:	xor    edx,edx
10044a08:	test   esi,esi
10044a0a:	setg   dl
10044a0d:	lea    edx,[edx+edx*1-0x1]
10044a11:	mov    esi,edx
10044a13:	test   esi,esi
10044a15:	jne    0x10043f40
10044a1b:	movzx  edx,BYTE PTR [ecx-0x9]
10044a1f:	movzx  esi,BYTE PTR [eax-0x9]
10044a23:	sub    esi,edx
10044a25:	je     0x10044a3c
10044a27:	xor    edx,edx
10044a29:	test   esi,esi
10044a2b:	setg   dl
10044a2e:	lea    edx,[edx+edx*1-0x1]
10044a32:	mov    esi,edx
10044a34:	test   esi,esi
10044a36:	jne    0x10043f40
10044a3c:	movzx  edx,BYTE PTR [ecx-0x8]
10044a40:	movzx  esi,BYTE PTR [eax-0x8]
10044a44:	sub    esi,edx
10044a46:	je     0x10044a5d
10044a48:	xor    edx,edx
10044a4a:	test   esi,esi
10044a4c:	setg   dl
10044a4f:	lea    edx,[edx+edx*1-0x1]
10044a53:	mov    esi,edx
10044a55:	test   esi,esi
10044a57:	jne    0x10043f40
10044a5d:	movzx  edx,BYTE PTR [ecx-0x7]
10044a61:	movzx  esi,BYTE PTR [eax-0x7]
10044a65:	sub    esi,edx
10044a67:	je     0x10044a7a
10044a69:	xor    edx,edx
10044a6b:	test   esi,esi
10044a6d:	setg   dl
10044a70:	lea    edx,[edx+edx*1-0x1]
10044a74:	mov    esi,edx
10044a76:	jmp    0x10044a7a
10044a78:	xor    esi,esi
10044a7a:	test   esi,esi
10044a7c:	jne    0x10043f40
10044a82:	mov    edx,DWORD PTR [eax-0x6]
10044a85:	cmp    edx,DWORD PTR [ecx-0x6]
10044a88:	je     0x10044b07
10044a8a:	movzx  esi,dl
10044a8d:	movzx  edx,BYTE PTR [ecx-0x6]
10044a91:	sub    esi,edx
10044a93:	je     0x10044aaa
10044a95:	xor    edx,edx
10044a97:	test   esi,esi
10044a99:	setg   dl
10044a9c:	lea    edx,[edx+edx*1-0x1]
10044aa0:	mov    esi,edx
10044aa2:	test   esi,esi
10044aa4:	jne    0x10043f40
10044aaa:	movzx  esi,BYTE PTR [eax-0x5]
10044aae:	movzx  edx,BYTE PTR [ecx-0x5]
10044ab2:	sub    esi,edx
10044ab4:	je     0x10044acb
10044ab6:	xor    edx,edx
10044ab8:	test   esi,esi
10044aba:	setg   dl
10044abd:	lea    edx,[edx+edx*1-0x1]
10044ac1:	mov    esi,edx
10044ac3:	test   esi,esi
10044ac5:	jne    0x10043f40
10044acb:	movzx  esi,BYTE PTR [eax-0x4]
10044acf:	movzx  edx,BYTE PTR [ecx-0x4]
10044ad3:	sub    esi,edx
10044ad5:	je     0x10044aec
10044ad7:	xor    edx,edx
10044ad9:	test   esi,esi
10044adb:	setg   dl
10044ade:	lea    edx,[edx+edx*1-0x1]
10044ae2:	mov    esi,edx
10044ae4:	test   esi,esi
10044ae6:	jne    0x10043f40
10044aec:	movzx  esi,BYTE PTR [eax-0x3]
10044af0:	movzx  edx,BYTE PTR [ecx-0x3]
10044af4:	sub    esi,edx
10044af6:	je     0x10044b09
10044af8:	xor    edx,edx
10044afa:	test   esi,esi
10044afc:	setg   dl
10044aff:	lea    edx,[edx+edx*1-0x1]
10044b03:	mov    esi,edx
10044b05:	jmp    0x10044b09
10044b07:	xor    esi,esi
10044b09:	test   esi,esi
10044b0b:	jne    0x10043f40
10044b11:	mov    dx,WORD PTR [eax-0x2]
10044b15:	cmp    dx,WORD PTR [ecx-0x2]
10044b19:	je     0x10044313
10044b1f:	movzx  edx,BYTE PTR [ecx-0x2]
10044b23:	movzx  esi,BYTE PTR [eax-0x2]
10044b27:	sub    esi,edx
10044b29:	je     0x10044705
10044b2f:	xor    edx,edx
10044b31:	test   esi,esi
10044b33:	setg   dl
10044b36:	lea    edx,[edx+edx*1-0x1]
10044b3a:	test   edx,edx
10044b3c:	jne    0x10044f55
10044b42:	jmp    0x10044705
10044b47:	mov    edx,DWORD PTR [eax-0x1f]
10044b4a:	cmp    edx,DWORD PTR [ecx-0x1f]
10044b4d:	je     0x10044bcd
10044b4f:	movzx  edx,BYTE PTR [ecx-0x1f]
10044b53:	movzx  esi,BYTE PTR [eax-0x1f]
10044b57:	sub    esi,edx
10044b59:	je     0x10044b70
10044b5b:	xor    edx,edx
10044b5d:	test   esi,esi
10044b5f:	setg   dl
10044b62:	lea    edx,[edx+edx*1-0x1]
10044b66:	mov    esi,edx
10044b68:	test   esi,esi
10044b6a:	jne    0x10043f40
10044b70:	movzx  esi,BYTE PTR [eax-0x1e]
10044b74:	movzx  edx,BYTE PTR [ecx-0x1e]
10044b78:	sub    esi,edx
10044b7a:	je     0x10044b91
10044b7c:	xor    edx,edx
10044b7e:	test   esi,esi
10044b80:	setg   dl
10044b83:	lea    edx,[edx+edx*1-0x1]
10044b87:	mov    esi,edx
10044b89:	test   esi,esi
10044b8b:	jne    0x10043f40
10044b91:	movzx  esi,BYTE PTR [eax-0x1d]
10044b95:	movzx  edx,BYTE PTR [ecx-0x1d]
10044b99:	sub    esi,edx
10044b9b:	je     0x10044bb2
10044b9d:	xor    edx,edx
10044b9f:	test   esi,esi
10044ba1:	setg   dl
10044ba4:	lea    edx,[edx+edx*1-0x1]
10044ba8:	mov    esi,edx
10044baa:	test   esi,esi
10044bac:	jne    0x10043f40
10044bb2:	movzx  esi,BYTE PTR [eax-0x1c]
10044bb6:	movzx  edx,BYTE PTR [ecx-0x1c]
10044bba:	sub    esi,edx
10044bbc:	je     0x10044bcf
10044bbe:	xor    edx,edx
10044bc0:	test   esi,esi
10044bc2:	setg   dl
10044bc5:	lea    edx,[edx+edx*1-0x1]
10044bc9:	mov    esi,edx
10044bcb:	jmp    0x10044bcf
10044bcd:	xor    esi,esi
10044bcf:	test   esi,esi
10044bd1:	jne    0x10043f40
10044bd7:	mov    edx,DWORD PTR [eax-0x1b]
10044bda:	cmp    edx,DWORD PTR [ecx-0x1b]
10044bdd:	je     0x10044c5c
10044bdf:	movzx  esi,dl
10044be2:	movzx  edx,BYTE PTR [ecx-0x1b]
10044be6:	sub    esi,edx
10044be8:	je     0x10044bff
10044bea:	xor    edx,edx
10044bec:	test   esi,esi
10044bee:	setg   dl
10044bf1:	lea    edx,[edx+edx*1-0x1]
10044bf5:	mov    esi,edx
10044bf7:	test   esi,esi
10044bf9:	jne    0x10043f40
10044bff:	movzx  esi,BYTE PTR [eax-0x1a]
10044c03:	movzx  edx,BYTE PTR [ecx-0x1a]
10044c07:	sub    esi,edx
10044c09:	je     0x10044c20
10044c0b:	xor    edx,edx
10044c0d:	test   esi,esi
10044c0f:	setg   dl
10044c12:	lea    edx,[edx+edx*1-0x1]
10044c16:	mov    esi,edx
10044c18:	test   esi,esi
10044c1a:	jne    0x10043f40
10044c20:	movzx  esi,BYTE PTR [eax-0x19]
10044c24:	movzx  edx,BYTE PTR [ecx-0x19]
10044c28:	sub    esi,edx
10044c2a:	je     0x10044c41
10044c2c:	xor    edx,edx
10044c2e:	test   esi,esi
10044c30:	setg   dl
10044c33:	lea    edx,[edx+edx*1-0x1]
10044c37:	mov    esi,edx
10044c39:	test   esi,esi
10044c3b:	jne    0x10043f40
10044c41:	movzx  esi,BYTE PTR [eax-0x18]
10044c45:	movzx  edx,BYTE PTR [ecx-0x18]
10044c49:	sub    esi,edx
10044c4b:	je     0x10044c5e
10044c4d:	xor    edx,edx
10044c4f:	test   esi,esi
10044c51:	setg   dl
10044c54:	lea    edx,[edx+edx*1-0x1]
10044c58:	mov    esi,edx
10044c5a:	jmp    0x10044c5e
10044c5c:	xor    esi,esi
10044c5e:	test   esi,esi
10044c60:	jne    0x10043f40
10044c66:	mov    edx,DWORD PTR [eax-0x17]
10044c69:	cmp    edx,DWORD PTR [ecx-0x17]
10044c6c:	je     0x10044ceb
10044c6e:	movzx  esi,dl
10044c71:	movzx  edx,BYTE PTR [ecx-0x17]
10044c75:	sub    esi,edx
10044c77:	je     0x10044c8e
10044c79:	xor    edx,edx
10044c7b:	test   esi,esi
10044c7d:	setg   dl
10044c80:	lea    edx,[edx+edx*1-0x1]
10044c84:	mov    esi,edx
10044c86:	test   esi,esi
10044c88:	jne    0x10043f40
10044c8e:	movzx  esi,BYTE PTR [eax-0x16]
10044c92:	movzx  edx,BYTE PTR [ecx-0x16]
10044c96:	sub    esi,edx
10044c98:	je     0x10044caf
10044c9a:	xor    edx,edx
10044c9c:	test   esi,esi
10044c9e:	setg   dl
10044ca1:	lea    edx,[edx+edx*1-0x1]
10044ca5:	mov    esi,edx
10044ca7:	test   esi,esi
10044ca9:	jne    0x10043f40
10044caf:	movzx  esi,BYTE PTR [eax-0x15]
10044cb3:	movzx  edx,BYTE PTR [ecx-0x15]
10044cb7:	sub    esi,edx
10044cb9:	je     0x10044cd0
10044cbb:	xor    edx,edx
10044cbd:	test   esi,esi
10044cbf:	setg   dl
10044cc2:	lea    edx,[edx+edx*1-0x1]
10044cc6:	mov    esi,edx
10044cc8:	test   esi,esi
10044cca:	jne    0x10043f40
10044cd0:	movzx  esi,BYTE PTR [eax-0x14]
10044cd4:	movzx  edx,BYTE PTR [ecx-0x14]
10044cd8:	sub    esi,edx
10044cda:	je     0x10044ced
10044cdc:	xor    edx,edx
10044cde:	test   esi,esi
10044ce0:	setg   dl
10044ce3:	lea    edx,[edx+edx*1-0x1]
10044ce7:	mov    esi,edx
10044ce9:	jmp    0x10044ced
10044ceb:	xor    esi,esi
10044ced:	test   esi,esi
10044cef:	jne    0x10043f40
10044cf5:	mov    edx,DWORD PTR [eax-0x13]
10044cf8:	cmp    edx,DWORD PTR [ecx-0x13]
10044cfb:	je     0x10044d7a
10044cfd:	movzx  esi,dl
10044d00:	movzx  edx,BYTE PTR [ecx-0x13]
10044d04:	sub    esi,edx
10044d06:	je     0x10044d1d
10044d08:	xor    edx,edx
10044d0a:	test   esi,esi
10044d0c:	setg   dl
10044d0f:	lea    edx,[edx+edx*1-0x1]
10044d13:	mov    esi,edx
10044d15:	test   esi,esi
10044d17:	jne    0x10043f40
10044d1d:	movzx  esi,BYTE PTR [eax-0x12]
10044d21:	movzx  edx,BYTE PTR [ecx-0x12]
10044d25:	sub    esi,edx
10044d27:	je     0x10044d3e
10044d29:	xor    edx,edx
10044d2b:	test   esi,esi
10044d2d:	setg   dl
10044d30:	lea    edx,[edx+edx*1-0x1]
10044d34:	mov    esi,edx
10044d36:	test   esi,esi
10044d38:	jne    0x10043f40
10044d3e:	movzx  esi,BYTE PTR [eax-0x11]
10044d42:	movzx  edx,BYTE PTR [ecx-0x11]
10044d46:	sub    esi,edx
10044d48:	je     0x10044d5f
10044d4a:	xor    edx,edx
10044d4c:	test   esi,esi
10044d4e:	setg   dl
10044d51:	lea    edx,[edx+edx*1-0x1]
10044d55:	mov    esi,edx
10044d57:	test   esi,esi
10044d59:	jne    0x10043f40
10044d5f:	movzx  esi,BYTE PTR [eax-0x10]
10044d63:	movzx  edx,BYTE PTR [ecx-0x10]
10044d67:	sub    esi,edx
10044d69:	je     0x10044d7c
10044d6b:	xor    edx,edx
10044d6d:	test   esi,esi
10044d6f:	setg   dl
10044d72:	lea    edx,[edx+edx*1-0x1]
10044d76:	mov    esi,edx
10044d78:	jmp    0x10044d7c
10044d7a:	xor    esi,esi
10044d7c:	test   esi,esi
10044d7e:	jne    0x10043f40
10044d84:	mov    edx,DWORD PTR [eax-0xf]
10044d87:	cmp    edx,DWORD PTR [ecx-0xf]
10044d8a:	je     0x10044e0a
10044d8c:	movzx  edx,BYTE PTR [ecx-0xf]
10044d90:	movzx  esi,BYTE PTR [eax-0xf]
10044d94:	sub    esi,edx
10044d96:	je     0x10044dad
10044d98:	xor    edx,edx
10044d9a:	test   esi,esi
10044d9c:	setg   dl
10044d9f:	lea    edx,[edx+edx*1-0x1]
10044da3:	mov    esi,edx
10044da5:	test   esi,esi
10044da7:	jne    0x10043f40
10044dad:	movzx  esi,BYTE PTR [eax-0xe]
10044db1:	movzx  edx,BYTE PTR [ecx-0xe]
10044db5:	sub    esi,edx
10044db7:	je     0x10044dce
10044db9:	xor    edx,edx
10044dbb:	test   esi,esi
10044dbd:	setg   dl
10044dc0:	lea    edx,[edx+edx*1-0x1]
10044dc4:	mov    esi,edx
10044dc6:	test   esi,esi
10044dc8:	jne    0x10043f40
10044dce:	movzx  esi,BYTE PTR [eax-0xd]
10044dd2:	movzx  edx,BYTE PTR [ecx-0xd]
10044dd6:	sub    esi,edx
10044dd8:	je     0x10044def
10044dda:	xor    edx,edx
10044ddc:	test   esi,esi
10044dde:	setg   dl
10044de1:	lea    edx,[edx+edx*1-0x1]
10044de5:	mov    esi,edx
10044de7:	test   esi,esi
10044de9:	jne    0x10043f40
10044def:	movzx  esi,BYTE PTR [eax-0xc]
10044df3:	movzx  edx,BYTE PTR [ecx-0xc]
10044df7:	sub    esi,edx
10044df9:	je     0x10044e0c
10044dfb:	xor    edx,edx
10044dfd:	test   esi,esi
10044dff:	setg   dl
10044e02:	lea    edx,[edx+edx*1-0x1]
10044e06:	mov    esi,edx
10044e08:	jmp    0x10044e0c
10044e0a:	xor    esi,esi
10044e0c:	test   esi,esi
10044e0e:	jne    0x10043f40
10044e14:	mov    edx,DWORD PTR [eax-0xb]
10044e17:	cmp    edx,DWORD PTR [ecx-0xb]
10044e1a:	je     0x10044e99
10044e1c:	movzx  esi,dl
10044e1f:	movzx  edx,BYTE PTR [ecx-0xb]
10044e23:	sub    esi,edx
10044e25:	je     0x10044e3c
10044e27:	xor    edx,edx
10044e29:	test   esi,esi
10044e2b:	setg   dl
10044e2e:	lea    edx,[edx+edx*1-0x1]
10044e32:	mov    esi,edx
10044e34:	test   esi,esi
10044e36:	jne    0x10043f40
10044e3c:	movzx  esi,BYTE PTR [eax-0xa]
10044e40:	movzx  edx,BYTE PTR [ecx-0xa]
10044e44:	sub    esi,edx
10044e46:	je     0x10044e5d
10044e48:	xor    edx,edx
10044e4a:	test   esi,esi
10044e4c:	setg   dl
10044e4f:	lea    edx,[edx+edx*1-0x1]
10044e53:	mov    esi,edx
10044e55:	test   esi,esi
10044e57:	jne    0x10043f40
10044e5d:	movzx  esi,BYTE PTR [eax-0x9]
10044e61:	movzx  edx,BYTE PTR [ecx-0x9]
10044e65:	sub    esi,edx
10044e67:	je     0x10044e7e
10044e69:	xor    edx,edx
10044e6b:	test   esi,esi
10044e6d:	setg   dl
10044e70:	lea    edx,[edx+edx*1-0x1]
10044e74:	mov    esi,edx
10044e76:	test   esi,esi
10044e78:	jne    0x10043f40
10044e7e:	movzx  esi,BYTE PTR [eax-0x8]
10044e82:	movzx  edx,BYTE PTR [ecx-0x8]
10044e86:	sub    esi,edx
10044e88:	je     0x10044e9b
10044e8a:	xor    edx,edx
10044e8c:	test   esi,esi
10044e8e:	setg   dl
10044e91:	lea    edx,[edx+edx*1-0x1]
10044e95:	mov    esi,edx
10044e97:	jmp    0x10044e9b
10044e99:	xor    esi,esi
10044e9b:	test   esi,esi
10044e9d:	jne    0x10043f40
10044ea3:	mov    edx,DWORD PTR [eax-0x7]
10044ea6:	cmp    edx,DWORD PTR [ecx-0x7]
10044ea9:	je     0x10044f28
10044eab:	movzx  esi,dl
10044eae:	movzx  edx,BYTE PTR [ecx-0x7]
10044eb2:	sub    esi,edx
10044eb4:	je     0x10044ecb
10044eb6:	xor    edx,edx
10044eb8:	test   esi,esi
10044eba:	setg   dl
10044ebd:	lea    edx,[edx+edx*1-0x1]
10044ec1:	mov    esi,edx
10044ec3:	test   esi,esi
10044ec5:	jne    0x10043f40
10044ecb:	movzx  esi,BYTE PTR [eax-0x6]
10044ecf:	movzx  edx,BYTE PTR [ecx-0x6]
10044ed3:	sub    esi,edx
10044ed5:	je     0x10044eec
10044ed7:	xor    edx,edx
10044ed9:	test   esi,esi
10044edb:	setg   dl
10044ede:	lea    edx,[edx+edx*1-0x1]
10044ee2:	mov    esi,edx
10044ee4:	test   esi,esi
10044ee6:	jne    0x10043f40
10044eec:	movzx  esi,BYTE PTR [eax-0x5]
10044ef0:	movzx  edx,BYTE PTR [ecx-0x5]
10044ef4:	sub    esi,edx
10044ef6:	je     0x10044f0d
10044ef8:	xor    edx,edx
10044efa:	test   esi,esi
10044efc:	setg   dl
10044eff:	lea    edx,[edx+edx*1-0x1]
10044f03:	mov    esi,edx
10044f05:	test   esi,esi
10044f07:	jne    0x10043f40
10044f0d:	movzx  esi,BYTE PTR [eax-0x4]
10044f11:	movzx  edx,BYTE PTR [ecx-0x4]
10044f15:	sub    esi,edx
10044f17:	je     0x10044f2a
10044f19:	xor    edx,edx
10044f1b:	test   esi,esi
10044f1d:	setg   dl
10044f20:	lea    edx,[edx+edx*1-0x1]
10044f24:	mov    esi,edx
10044f26:	jmp    0x10044f2a
10044f28:	xor    esi,esi
10044f2a:	test   esi,esi
10044f2c:	jne    0x10043f40
10044f32:	movzx  esi,BYTE PTR [eax-0x3]
10044f36:	movzx  edx,BYTE PTR [ecx-0x3]
10044f3a:	sub    esi,edx
10044f3c:	je     0x10044b1f
10044f42:	xor    edx,edx
10044f44:	test   esi,esi
10044f46:	setg   dl
10044f49:	lea    edx,[edx+edx*1-0x1]
10044f4d:	test   edx,edx
10044f4f:	je     0x10044b1f
10044f55:	mov    eax,edx
10044f57:	jmp    0x10044315
10044f5c:	mov    ecx,DWORD PTR [ebp+0x8]
10044f5f:	mov    esi,DWORD PTR [ebp+0xc]
10044f62:	movzx  eax,BYTE PTR [ecx]
10044f65:	movzx  edx,BYTE PTR [esi]
10044f68:	sub    eax,edx
10044f6a:	je     0x10044f81
10044f6c:	xor    edx,edx
10044f6e:	test   eax,eax
10044f70:	setg   dl
10044f73:	lea    edx,[edx+edx*1-0x1]
10044f77:	mov    eax,edx
10044f79:	test   eax,eax
10044f7b:	jne    0x1004506e
10044f81:	movzx  eax,BYTE PTR [ecx+0x1]
10044f85:	movzx  edx,BYTE PTR [esi+0x1]
10044f89:	sub    eax,edx
10044f8b:	je     0x10044fa2
10044f8d:	xor    edx,edx
10044f8f:	test   eax,eax
10044f91:	setg   dl
10044f94:	lea    edx,[edx+edx*1-0x1]
10044f98:	mov    eax,edx
10044f9a:	test   eax,eax
10044f9c:	jne    0x1004506e
10044fa2:	movzx  eax,BYTE PTR [ecx+0x2]
10044fa6:	movzx  edx,BYTE PTR [esi+0x2]
10044faa:	sub    eax,edx
10044fac:	je     0x10044fc3
10044fae:	xor    edx,edx
10044fb0:	test   eax,eax
10044fb2:	setg   dl
10044fb5:	lea    edx,[edx+edx*1-0x1]
10044fb9:	mov    eax,edx
10044fbb:	test   eax,eax
10044fbd:	jne    0x1004506e
10044fc3:	movzx  eax,BYTE PTR [ecx+0x3]
10044fc7:	movzx  ecx,BYTE PTR [esi+0x3]
10044fcb:	sub    eax,ecx
10044fcd:	je     0x1004506e
10044fd3:	xor    ecx,ecx
10044fd5:	test   eax,eax
10044fd7:	setg   cl
10044fda:	lea    ecx,[ecx+ecx*1-0x1]
10044fde:	mov    eax,ecx
10044fe0:	jmp    0x1004506e
10044fe5:	mov    ecx,DWORD PTR [ebp+0x8]
10044fe8:	mov    esi,DWORD PTR [ebp+0xc]
10044feb:	movzx  eax,BYTE PTR [ecx]
10044fee:	movzx  edx,BYTE PTR [esi]
10044ff1:	sub    eax,edx
10044ff3:	je     0x10045006
10044ff5:	xor    edx,edx
10044ff7:	test   eax,eax
10044ff9:	setg   dl
10044ffc:	lea    edx,[edx+edx*1-0x1]
10045000:	mov    eax,edx
10045002:	test   eax,eax
10045004:	jne    0x1004506e
10045006:	movzx  eax,BYTE PTR [ecx+0x1]
1004500a:	movzx  edx,BYTE PTR [esi+0x1]
1004500e:	sub    eax,edx
10045010:	je     0x10045023
10045012:	xor    edx,edx
10045014:	test   eax,eax
10045016:	setg   dl
10045019:	lea    edx,[edx+edx*1-0x1]
1004501d:	mov    eax,edx
1004501f:	test   eax,eax
10045021:	jne    0x1004506e
10045023:	movzx  eax,BYTE PTR [ecx+0x2]
10045027:	movzx  ecx,BYTE PTR [esi+0x2]
1004502b:	jmp    0x10044fcb
1004502d:	mov    ecx,DWORD PTR [ebp+0x8]
10045030:	mov    esi,DWORD PTR [ebp+0xc]
10045033:	movzx  eax,BYTE PTR [ecx]
10045036:	movzx  edx,BYTE PTR [esi]
10045039:	sub    eax,edx
1004503b:	je     0x1004504e
1004503d:	xor    edx,edx
1004503f:	test   eax,eax
10045041:	setg   dl
10045044:	lea    edx,[edx+edx*1-0x1]
10045048:	mov    eax,edx
1004504a:	test   eax,eax
1004504c:	jne    0x1004506e
1004504e:	movzx  eax,BYTE PTR [ecx+0x1]
10045052:	movzx  ecx,BYTE PTR [esi+0x1]
10045056:	jmp    0x10044fcb
1004505b:	mov    eax,DWORD PTR [ebp+0x8]
1004505e:	mov    ecx,DWORD PTR [ebp+0xc]
10045061:	movzx  eax,BYTE PTR [eax]
10045064:	movzx  ecx,BYTE PTR [ecx]
10045067:	jmp    0x10044fcb
1004506c:	xor    eax,eax
1004506e:	pop    edi
1004506f:	pop    esi
10045070:	pop    ebp
10045071:	ret    
10045072:	mov    edi,edi
10045074:	adc    eax,DWORD PTR [ebx+0x4]
10045077:	adc    BYTE PTR ds:0x11100447,al
1004507d:	dec    ebx
1004507e:	add    al,0x10
10045080:	xor    cl,BYTE PTR [edi+0x4]
10045083:	adc    BYTE PTR [esi+0x76100442],dl
10045089:	inc    esi
1004508a:	add    al,0x10
1004508c:	or     BYTE PTR [edx+0x4],0x10
10045090:	mov    ds:0x710044e,eax
10045095:	inc    edx
10045096:	add    al,0x10
10045098:	out    0x45,al
1004509a:	add    al,0x10
1004509c:	repnz dec ecx
1004509e:	add    al,0x10
100450a0:	adc    al,0x4e
100450a2:	add    al,0x10
100450a4:	ja     0x100450e7
100450a6:	add    al,0x10
100450a8:	push   edi
100450a9:	inc    ebp
100450aa:	add    al,0x10
100450ac:	arpl   WORD PTR [ecx+0x4],cx
100450af:	adc    BYTE PTR [ebp+ecx*2+0x40e81004],al
100450b6:	add    al,0x10
100450b8:	enter  0x444,0x10
100450bc:	aam    0x48
100450be:	add    al,0x10
100450c0:	cmc    
100450c1:	dec    esp
100450c2:	add    al,0x10
100450c4:	pop    ecx
100450c5:	inc    eax
100450c6:	add    al,0x10
100450c8:	cmp    DWORD PTR [esp+eax*1+0x10],eax
100450cc:	inc    ebp
100450cd:	dec    eax
100450ce:	add    al,0x10
100450d0:	dec    sp
100450d2:	add    al,0x10
100450d4:	retf   0x43f
100450d7:	adc    BYTE PTR [edx-0x49effbbd],ch
100450dd:	inc    edi
100450de:	add    al,0x10
100450e0:	xlat   BYTE PTR ds:[ebx]
100450e1:	dec    ebx
100450e2:	add    al,0x10
100450e4:	inc    edi
100450e5:	aas    
100450e6:	add    al,0x10
100450e8:	sbb    eax,DWORD PTR [ebx+0x4]
100450eb:	adc    BYTE PTR [edi],ah
100450ed:	inc    edi
100450ee:	add    al,0x10
100450f0:	inc    edi
100450f1:	dec    ebx
100450f2:	add    al,0x10
100450f4:	push   0xc
100450f6:	push   0x10075d28
100450fb:	call   0x1004771c
10045100:	and    DWORD PTR [ebp-0x1c],0x0
10045104:	mov    esi,DWORD PTR [ebp+0x8]
10045107:	cmp    esi,DWORD PTR ds:0x100845f0
1004510d:	ja     0x10045131
1004510f:	push   0x4
10045111:	call   0x10047e0e
10045116:	pop    ecx
10045117:	and    DWORD PTR [ebp-0x4],0x0
1004511b:	push   esi
1004511c:	call   0x10048784
10045121:	pop    ecx
10045122:	mov    DWORD PTR [ebp-0x1c],eax
10045125:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004512c:	call   0x1004513a
10045131:	mov    eax,DWORD PTR [ebp-0x1c]
10045134:	call   0x10047761
10045139:	ret    
1004513a:	push   0x4
1004513c:	call   0x10047d36
10045141:	pop    ecx
10045142:	ret    
10045143:	push   ebp
10045144:	mov    ebp,DWORD PTR [esp+0x8]
10045148:	cmp    ebp,0xffffffe0
1004514b:	ja     0x100451f0
10045151:	push   ebx
10045152:	mov    ebx,DWORD PTR ds:0x10067190
10045158:	push   esi
10045159:	push   edi
1004515a:	xor    esi,esi
1004515c:	cmp    DWORD PTR ds:0x10081ff4,esi
10045162:	mov    edi,ebp
10045164:	jne    0x1004517e
10045166:	call   0x1004a02c
1004516b:	push   0x1e
1004516d:	call   0x10049e8c
10045172:	push   0xff
10045177:	call   0x1004746a
1004517c:	pop    ecx
1004517d:	pop    ecx
1004517e:	mov    eax,ds:0x10084600
10045183:	cmp    eax,0x1
10045186:	jne    0x10045196
10045188:	cmp    ebp,esi
1004518a:	je     0x10045190
1004518c:	mov    eax,ebp
1004518e:	jmp    0x10045193
10045190:	xor    eax,eax
10045192:	inc    eax
10045193:	push   eax
10045194:	jmp    0x100451b4
10045196:	cmp    eax,0x3
10045199:	jne    0x100451a6
1004519b:	push   ebp
1004519c:	call   0x100450f4
100451a1:	cmp    eax,esi
100451a3:	pop    ecx
100451a4:	jne    0x100451bd
100451a6:	cmp    ebp,esi
100451a8:	jne    0x100451ad
100451aa:	xor    edi,edi
100451ac:	inc    edi
100451ad:	add    edi,0xf
100451b0:	and    edi,0xfffffff0
100451b3:	push   edi
100451b4:	push   esi
100451b5:	push   DWORD PTR ds:0x10081ff4
100451bb:	call   ebx
100451bd:	mov    esi,eax
100451bf:	test   esi,esi
100451c1:	jne    0x100451e9
100451c3:	cmp    DWORD PTR ds:0x10081ff0,eax
100451c9:	push   0xc
100451cb:	pop    edi
100451cc:	je     0x100451db
100451ce:	push   ebp
100451cf:	call   0x10047920
100451d4:	test   eax,eax
100451d6:	pop    ecx
100451d7:	jne    0x1004515a
100451d9:	jmp    0x100451e2
100451db:	call   0x10046c41
100451e0:	mov    DWORD PTR [eax],edi
100451e2:	call   0x10046c41
100451e7:	mov    DWORD PTR [eax],edi
100451e9:	pop    edi
100451ea:	mov    eax,esi
100451ec:	pop    esi
100451ed:	pop    ebx
100451ee:	pop    ebp
100451ef:	ret    
100451f0:	push   ebp
100451f1:	call   0x10047920
100451f6:	pop    ecx
100451f7:	call   0x10046c41
100451fc:	mov    DWORD PTR [eax],0xc
10045202:	xor    eax,eax
10045204:	pop    ebp
10045205:	ret    
10045206:	push   ebp
10045207:	mov    ebp,esp
10045209:	sub    esp,0x5c
1004520c:	mov    eax,ds:0x100801ac
10045211:	xor    eax,ebp
10045213:	mov    DWORD PTR [ebp-0x4],eax
10045216:	push   ebx
10045217:	push   esi
10045218:	push   edi
10045219:	push   0x4
1004521b:	xor    edi,edi
1004521d:	pop    eax
1004521e:	mov    DWORD PTR [ebp-0x8],edi
10045221:	call   0x1004a070
10045226:	mov    DWORD PTR [ebp-0x10],esp
10045229:	push   0x1c
1004522b:	lea    eax,[ebp-0x38]
1004522e:	push   eax
1004522f:	push   DWORD PTR [ebp-0x10]
10045232:	call   DWORD PTR ds:0x10067100
10045238:	test   eax,eax
1004523a:	je     0x1004531e
10045240:	mov    eax,DWORD PTR [ebp-0x34]
10045243:	mov    DWORD PTR [ebp-0x18],eax
10045246:	lea    eax,[ebp-0x5c]
10045249:	push   eax
1004524a:	call   DWORD PTR ds:0x100671a4
10045250:	mov    esi,DWORD PTR [ebp-0x58]
10045253:	lea    eax,[ebp-0x8]
10045256:	push   eax
10045257:	mov    DWORD PTR [ebp-0x14],esi
1004525a:	xor    ebx,ebx
1004525c:	call   0x100474c9
10045261:	test   eax,eax
10045263:	pop    ecx
10045264:	je     0x10045273
10045266:	push   edi
10045267:	push   edi
10045268:	push   edi
10045269:	push   edi
1004526a:	push   edi
1004526b:	call   0x100434e5
10045270:	add    esp,0x14
10045273:	cmp    DWORD PTR [ebp-0x8],0x2
10045277:	jne    0x100452af
10045279:	push   0x100709d4
1004527e:	call   DWORD PTR ds:0x100671a0
10045284:	cmp    eax,edi
10045286:	je     0x100452af
10045288:	push   0x100675d0
1004528d:	push   eax
1004528e:	call   DWORD PTR ds:0x100670e4
10045294:	cmp    eax,edi
10045296:	je     0x100452af
10045298:	lea    ecx,[ebp-0xc]
1004529b:	push   ecx
1004529c:	mov    DWORD PTR [ebp-0xc],edi
1004529f:	call   eax
100452a1:	cmp    eax,0x1
100452a4:	pop    ecx
100452a5:	jne    0x100452af
100452a7:	cmp    DWORD PTR [ebp-0xc],edi
100452aa:	jbe    0x100452af
100452ac:	mov    ebx,DWORD PTR [ebp-0xc]
100452af:	mov    edi,DWORD PTR [ebp-0x8]
100452b2:	dec    edi
100452b3:	neg    edi
100452b5:	sbb    edi,edi
100452b7:	and    edi,0x103
100452bd:	lea    eax,[esi-0x1]
100452c0:	lea    ebx,[ebx+esi*1-0x1]
100452c4:	not    eax
100452c6:	inc    edi
100452c7:	and    ebx,eax
100452c9:	je     0x100452cd
100452cb:	add    ebx,esi
100452cd:	lea    eax,[esi+esi*1]
100452d0:	cmp    ebx,eax
100452d2:	jae    0x100452d6
100452d4:	mov    ebx,eax
100452d6:	dec    esi
100452d7:	not    esi
100452d9:	and    esi,DWORD PTR [ebp-0x10]
100452dc:	sub    esi,ebx
100452de:	cmp    DWORD PTR [ebp-0x8],0x1
100452e2:	jne    0x100452e9
100452e4:	push   0x11
100452e6:	pop    eax
100452e7:	jmp    0x100452ec
100452e9:	mov    eax,DWORD PTR [ebp-0x14]
100452ec:	mov    ecx,DWORD PTR [ebp-0x18]
100452ef:	add    eax,ecx
100452f1:	cmp    esi,eax
100452f3:	jb     0x1004531e
100452f5:	push   0x4
100452f7:	push   0x1000
100452fc:	push   ebx
100452fd:	push   esi
100452fe:	call   DWORD PTR ds:0x1006719c
10045304:	test   eax,eax
10045306:	je     0x1004531e
10045308:	lea    eax,[ebp-0x1c]
1004530b:	push   eax
1004530c:	push   edi
1004530d:	push   ebx
1004530e:	push   esi
1004530f:	call   DWORD PTR ds:0x10067198
10045315:	test   eax,eax
10045317:	je     0x1004531e
10045319:	xor    eax,eax
1004531b:	inc    eax
1004531c:	jmp    0x10045320
1004531e:	xor    eax,eax
10045320:	lea    esp,[ebp-0x68]
10045323:	pop    edi
10045324:	pop    esi
10045325:	pop    ebx
10045326:	mov    ecx,DWORD PTR [ebp-0x4]
10045329:	xor    ecx,ebp
1004532b:	call   0x10043615
10045330:	leave  
10045331:	ret    
10045332:	int3   
10045333:	int3   
10045334:	int3   
10045335:	int3   
10045336:	int3   
10045337:	int3   
10045338:	int3   
10045339:	int3   
1004533a:	int3   
1004533b:	int3   
1004533c:	int3   
1004533d:	int3   
1004533e:	int3   
1004533f:	int3   
10045340:	push   ebp
10045341:	mov    ebp,esp
10045343:	push   edi
10045344:	push   esi
10045345:	mov    esi,DWORD PTR [ebp+0xc]
10045348:	mov    ecx,DWORD PTR [ebp+0x10]
1004534b:	mov    edi,DWORD PTR [ebp+0x8]
1004534e:	mov    eax,ecx
10045350:	mov    edx,ecx
10045352:	add    eax,esi
10045354:	cmp    edi,esi
10045356:	jbe    0x10045360
10045358:	cmp    edi,eax
1004535a:	jb     0x10045504
10045360:	cmp    ecx,0x100
10045366:	jb     0x10045387
10045368:	cmp    DWORD PTR ds:0x100845e4,0x0
1004536f:	je     0x10045387
10045371:	push   edi
10045372:	push   esi
10045373:	and    edi,0xf
10045376:	and    esi,0xf
10045379:	cmp    edi,esi
1004537b:	pop    esi
1004537c:	pop    edi
1004537d:	jne    0x10045387
1004537f:	pop    esi
10045380:	pop    edi
10045381:	pop    ebp
10045382:	jmp    0x1004a122
10045387:	test   edi,0x3
1004538d:	jne    0x100453a4
1004538f:	shr    ecx,0x2
10045392:	and    edx,0x3
10045395:	cmp    ecx,0x8
10045398:	jb     0x100453c4
1004539a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004539c:	jmp    DWORD PTR [edx*4+0x100454b4]
100453a3:	nop
100453a4:	mov    eax,edi
100453a6:	mov    edx,0x3
100453ab:	sub    ecx,0x4
100453ae:	jb     0x100453bc
100453b0:	and    eax,0x3
100453b3:	add    ecx,eax
100453b5:	jmp    DWORD PTR [eax*4+0x100453c8]
100453bc:	jmp    DWORD PTR [ecx*4+0x100454c4]
100453c3:	nop
100453c4:	jmp    DWORD PTR [ecx*4+0x10045448]
100453cb:	nop
100453cc:	fcom   DWORD PTR [ebx+0x4]
100453cf:	adc    BYTE PTR [esp+edx*2],al
100453d2:	add    al,0x10
100453d4:	sub    BYTE PTR [esp+eax*1+0x10],dl
100453d8:	and    edx,ecx
100453da:	mov    al,BYTE PTR [esi]
100453dc:	mov    BYTE PTR [edi],al
100453de:	mov    al,BYTE PTR [esi+0x1]
100453e1:	mov    BYTE PTR [edi+0x1],al
100453e4:	mov    al,BYTE PTR [esi+0x2]
100453e7:	shr    ecx,0x2
100453ea:	mov    BYTE PTR [edi+0x2],al
100453ed:	add    esi,0x3
100453f0:	add    edi,0x3
100453f3:	cmp    ecx,0x8
100453f6:	jb     0x100453c4
100453f8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100453fa:	jmp    DWORD PTR [edx*4+0x100454b4]
10045401:	lea    ecx,[ecx+0x0]
10045404:	and    edx,ecx
10045406:	mov    al,BYTE PTR [esi]
10045408:	mov    BYTE PTR [edi],al
1004540a:	mov    al,BYTE PTR [esi+0x1]
1004540d:	shr    ecx,0x2
10045410:	mov    BYTE PTR [edi+0x1],al
10045413:	add    esi,0x2
10045416:	add    edi,0x2
10045419:	cmp    ecx,0x8
1004541c:	jb     0x100453c4
1004541e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045420:	jmp    DWORD PTR [edx*4+0x100454b4]
10045427:	nop
10045428:	and    edx,ecx
1004542a:	mov    al,BYTE PTR [esi]
1004542c:	mov    BYTE PTR [edi],al
1004542e:	add    esi,0x1
10045431:	shr    ecx,0x2
10045434:	add    edi,0x1
10045437:	cmp    ecx,0x8
1004543a:	jb     0x100453c4
1004543c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004543e:	jmp    DWORD PTR [edx*4+0x100454b4]
10045445:	lea    ecx,[ecx+0x0]
10045448:	stos   DWORD PTR es:[edi],eax
10045449:	push   esp
1004544a:	add    al,0x10
1004544c:	cwde   
1004544d:	push   esp
1004544e:	add    al,0x10
10045450:	nop
10045451:	push   esp
10045452:	add    al,0x10
10045454:	mov    BYTE PTR [esp+eax*1+0x10],dl
10045458:	adc    BYTE PTR [esp+eax*1+0x10],0x78
1004545d:	push   esp
1004545e:	add    al,0x10
10045460:	jo     0x100454b6
10045462:	add    al,0x10
10045464:	push   0x8b100454
10045469:	inc    esp
1004546a:	mov    fs,esp
1004546c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
10045470:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
10045474:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10045478:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1004547c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10045480:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10045484:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10045488:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1004548c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10045490:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10045494:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10045498:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004549c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
100454a0:	lea    eax,[ecx*4+0x0]
100454a7:	add    esi,eax
100454a9:	add    edi,eax
100454ab:	jmp    DWORD PTR [edx*4+0x100454b4]
100454b2:	mov    edi,edi
100454b4:	les    edx,FWORD PTR [esp+eax*1+0x10]
100454b8:	int3   
100454b9:	push   esp
100454ba:	add    al,0x10
100454bc:	fcom   DWORD PTR [esp+eax*1+0x10]
100454c0:	in     al,dx
100454c1:	push   esp
100454c2:	add    al,0x10
100454c4:	mov    eax,DWORD PTR [ebp+0x8]
100454c7:	pop    esi
100454c8:	pop    edi
100454c9:	leave  
100454ca:	ret    
100454cb:	nop
100454cc:	mov    al,BYTE PTR [esi]
100454ce:	mov    BYTE PTR [edi],al
100454d0:	mov    eax,DWORD PTR [ebp+0x8]
100454d3:	pop    esi
100454d4:	pop    edi
100454d5:	leave  
100454d6:	ret    
100454d7:	nop
100454d8:	mov    al,BYTE PTR [esi]
100454da:	mov    BYTE PTR [edi],al
100454dc:	mov    al,BYTE PTR [esi+0x1]
100454df:	mov    BYTE PTR [edi+0x1],al
100454e2:	mov    eax,DWORD PTR [ebp+0x8]
100454e5:	pop    esi
100454e6:	pop    edi
100454e7:	leave  
100454e8:	ret    
100454e9:	lea    ecx,[ecx+0x0]
100454ec:	mov    al,BYTE PTR [esi]
100454ee:	mov    BYTE PTR [edi],al
100454f0:	mov    al,BYTE PTR [esi+0x1]
100454f3:	mov    BYTE PTR [edi+0x1],al
100454f6:	mov    al,BYTE PTR [esi+0x2]
100454f9:	mov    BYTE PTR [edi+0x2],al
100454fc:	mov    eax,DWORD PTR [ebp+0x8]
100454ff:	pop    esi
10045500:	pop    edi
10045501:	leave  
10045502:	ret    
10045503:	nop
10045504:	lea    esi,[ecx+esi*1-0x4]
10045508:	lea    edi,[ecx+edi*1-0x4]
1004550c:	test   edi,0x3
10045512:	jne    0x10045538
10045514:	shr    ecx,0x2
10045517:	and    edx,0x3
1004551a:	cmp    ecx,0x8
1004551d:	jb     0x1004552c
1004551f:	std    
10045520:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045522:	cld    
10045523:	jmp    DWORD PTR [edx*4+0x10045650]
1004552a:	mov    edi,edi
1004552c:	neg    ecx
1004552e:	jmp    DWORD PTR [ecx*4+0x10045600]
10045535:	lea    ecx,[ecx+0x0]
10045538:	mov    eax,edi
1004553a:	mov    edx,0x3
1004553f:	cmp    ecx,0x4
10045542:	jb     0x10045550
10045544:	and    eax,0x3
10045547:	sub    ecx,eax
10045549:	jmp    DWORD PTR [eax*4+0x10045554]
10045550:	jmp    DWORD PTR [ecx*4+0x10045650]
10045557:	nop
10045558:	fs push ebp
1004555a:	add    al,0x10
1004555c:	mov    BYTE PTR [ebp+0x4],dl
1004555f:	adc    BYTE PTR [eax-0x75effbab],dh
10045565:	inc    esi
10045566:	add    esp,DWORD PTR [ebx]
10045568:	ror    DWORD PTR [eax-0x117cfcb9],1
1004556e:	add    ecx,eax
10045570:	jmp    0x11f3d877
10045575:	cmp    ecx,0x8
10045578:	jb     0x1004552c
1004557a:	std    
1004557b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004557d:	cld    
1004557e:	jmp    DWORD PTR [edx*4+0x10045650]
10045585:	lea    ecx,[ecx+0x0]
10045588:	mov    al,BYTE PTR [esi+0x3]
1004558b:	and    edx,ecx
1004558d:	mov    BYTE PTR [edi+0x3],al
10045590:	mov    al,BYTE PTR [esi+0x2]
10045593:	shr    ecx,0x2
10045596:	mov    BYTE PTR [edi+0x2],al
10045599:	sub    esi,0x2
1004559c:	sub    edi,0x2
1004559f:	cmp    ecx,0x8
100455a2:	jb     0x1004552c
100455a4:	std    
100455a5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100455a7:	cld    
100455a8:	jmp    DWORD PTR [edx*4+0x10045650]
100455af:	nop
100455b0:	mov    al,BYTE PTR [esi+0x3]
100455b3:	and    edx,ecx
100455b5:	mov    BYTE PTR [edi+0x3],al
100455b8:	mov    al,BYTE PTR [esi+0x2]
100455bb:	mov    BYTE PTR [edi+0x2],al
100455be:	mov    al,BYTE PTR [esi+0x1]
100455c1:	shr    ecx,0x2
100455c4:	mov    BYTE PTR [edi+0x1],al
100455c7:	sub    esi,0x3
100455ca:	sub    edi,0x3
100455cd:	cmp    ecx,0x8
100455d0:	jb     0x1004552c
100455d6:	std    
100455d7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100455d9:	cld    
100455da:	jmp    DWORD PTR [edx*4+0x10045650]
100455e1:	lea    ecx,[ecx+0x0]
100455e4:	add    al,0x56
100455e6:	add    al,0x10
100455e8:	or     al,0x56
100455ea:	add    al,0x10
100455ec:	adc    al,0x56
100455ee:	add    al,0x10
100455f0:	sbb    al,0x56
100455f2:	add    al,0x10
100455f4:	and    al,0x56
100455f6:	add    al,0x10
100455f8:	sub    al,0x56
100455fa:	add    al,0x10
100455fc:	xor    al,0x56
100455fe:	add    al,0x10
10045600:	inc    edi
10045601:	push   esi
10045602:	add    al,0x10
10045604:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10045608:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1004560c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10045610:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045614:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045618:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1004561c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045620:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045624:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045628:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1004562c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045630:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045634:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045638:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1004563c:	lea    eax,[ecx*4+0x0]
10045643:	add    esi,eax
10045645:	add    edi,eax
10045647:	jmp    DWORD PTR [edx*4+0x10045650]
1004564e:	mov    edi,edi
10045650:	pusha  
10045651:	push   esi
10045652:	add    al,0x10
10045654:	push   0x78100456
10045659:	push   esi
1004565a:	add    al,0x10
1004565c:	mov    WORD PTR [esi+0x4],ss
1004565f:	adc    BYTE PTR [ebx+0x5f5e0845],cl
10045665:	leave  
10045666:	ret    
10045667:	nop
10045668:	mov    al,BYTE PTR [esi+0x3]
1004566b:	mov    BYTE PTR [edi+0x3],al
1004566e:	mov    eax,DWORD PTR [ebp+0x8]
10045671:	pop    esi
10045672:	pop    edi
10045673:	leave  
10045674:	ret    
10045675:	lea    ecx,[ecx+0x0]
10045678:	mov    al,BYTE PTR [esi+0x3]
1004567b:	mov    BYTE PTR [edi+0x3],al
1004567e:	mov    al,BYTE PTR [esi+0x2]
10045681:	mov    BYTE PTR [edi+0x2],al
10045684:	mov    eax,DWORD PTR [ebp+0x8]
10045687:	pop    esi
10045688:	pop    edi
10045689:	leave  
1004568a:	ret    
1004568b:	nop
1004568c:	mov    al,BYTE PTR [esi+0x3]
1004568f:	mov    BYTE PTR [edi+0x3],al
10045692:	mov    al,BYTE PTR [esi+0x2]
10045695:	mov    BYTE PTR [edi+0x2],al
10045698:	mov    al,BYTE PTR [esi+0x1]
1004569b:	mov    BYTE PTR [edi+0x1],al
1004569e:	mov    eax,DWORD PTR [ebp+0x8]
100456a1:	pop    esi
100456a2:	pop    edi
100456a3:	leave  
100456a4:	ret    
100456a5:	mov    eax,DWORD PTR [esp+0x4]
100456a9:	test   eax,eax
100456ab:	push   esi
100456ac:	mov    esi,ecx
100456ae:	mov    BYTE PTR [esi+0xc],0x0
100456b2:	jne    0x10045717
100456b4:	call   0x10046f84
100456b9:	mov    DWORD PTR [esi+0x8],eax
100456bc:	mov    ecx,DWORD PTR [eax+0x6c]
100456bf:	mov    DWORD PTR [esi],ecx
100456c1:	mov    ecx,DWORD PTR [eax+0x68]
100456c4:	mov    DWORD PTR [esi+0x4],ecx
100456c7:	mov    ecx,DWORD PTR [esi]
100456c9:	cmp    ecx,DWORD PTR ds:0x100809a8
100456cf:	je     0x100456e3
100456d1:	mov    ecx,DWORD PTR ds:0x100808c4
100456d7:	test   DWORD PTR [eax+0x70],ecx
100456da:	jne    0x100456e3
100456dc:	call   0x1004ab66
100456e1:	mov    DWORD PTR [esi],eax
100456e3:	mov    eax,DWORD PTR [esi+0x4]
100456e6:	cmp    eax,DWORD PTR ds:0x100807c8
100456ec:	je     0x10045704
100456ee:	mov    eax,DWORD PTR [esi+0x8]
100456f1:	mov    ecx,DWORD PTR ds:0x100808c4
100456f7:	test   DWORD PTR [eax+0x70],ecx
100456fa:	jne    0x10045704
100456fc:	call   0x1004a427
10045701:	mov    DWORD PTR [esi+0x4],eax
10045704:	mov    eax,DWORD PTR [esi+0x8]
10045707:	test   BYTE PTR [eax+0x70],0x2
1004570b:	jne    0x10045721
1004570d:	or     DWORD PTR [eax+0x70],0x2
10045711:	mov    BYTE PTR [esi+0xc],0x1
10045715:	jmp    0x10045721
10045717:	mov    ecx,DWORD PTR [eax]
10045719:	mov    DWORD PTR [esi],ecx
1004571b:	mov    eax,DWORD PTR [eax+0x4]
1004571e:	mov    DWORD PTR [esi+0x4],eax
10045721:	mov    eax,esi
10045723:	pop    esi
10045724:	ret    0x4
10045727:	mov    edx,DWORD PTR [esp+0x8]
1004572b:	push   esi
1004572c:	mov    esi,DWORD PTR [esp+0x8]
10045730:	push   edi
10045731:	movzx  eax,BYTE PTR [esi]
10045734:	lea    ecx,[eax-0x41]
10045737:	inc    esi
10045738:	cmp    ecx,0x19
1004573b:	ja     0x10045740
1004573d:	add    eax,0x20
10045740:	movzx  ecx,BYTE PTR [edx]
10045743:	lea    edi,[ecx-0x41]
10045746:	inc    edx
10045747:	cmp    edi,0x19
1004574a:	ja     0x1004574f
1004574c:	add    ecx,0x20
1004574f:	test   eax,eax
10045751:	je     0x10045757
10045753:	cmp    eax,ecx
10045755:	je     0x10045731
10045757:	pop    edi
10045758:	sub    eax,ecx
1004575a:	pop    esi
1004575b:	ret    
1004575c:	push   ebp
1004575d:	mov    ebp,esp
1004575f:	sub    esp,0x10
10045762:	push   ebx
10045763:	push   DWORD PTR [ebp+0x10]
10045766:	lea    ecx,[ebp-0x10]
10045769:	call   0x100456a5
1004576e:	xor    ebx,ebx
10045770:	cmp    DWORD PTR [ebp+0x8],ebx
10045773:	jne    0x100457a3
10045775:	call   0x10046c41
1004577a:	push   ebx
1004577b:	push   ebx
1004577c:	push   ebx
1004577d:	push   ebx
1004577e:	push   ebx
1004577f:	mov    DWORD PTR [eax],0x16
10045785:	call   0x100435e1
1004578a:	add    esp,0x14
1004578d:	cmp    BYTE PTR [ebp-0x4],bl
10045790:	je     0x10045799
10045792:	mov    eax,DWORD PTR [ebp-0x8]
10045795:	and    DWORD PTR [eax+0x70],0xfffffffd
10045799:	mov    eax,0x7fffffff
1004579e:	jmp    0x1004582c
100457a3:	push   edi
100457a4:	mov    edi,DWORD PTR [ebp+0xc]
100457a7:	cmp    edi,ebx
100457a9:	jne    0x100457d6
100457ab:	call   0x10046c41
100457b0:	push   ebx
100457b1:	push   ebx
100457b2:	push   ebx
100457b3:	push   ebx
100457b4:	push   ebx
100457b5:	mov    DWORD PTR [eax],0x16
100457bb:	call   0x100435e1
100457c0:	add    esp,0x14
100457c3:	cmp    BYTE PTR [ebp-0x4],bl
100457c6:	je     0x100457cf
100457c8:	mov    eax,DWORD PTR [ebp-0x8]
100457cb:	and    DWORD PTR [eax+0x70],0xfffffffd
100457cf:	mov    eax,0x7fffffff
100457d4:	jmp    0x1004582b
100457d6:	mov    eax,DWORD PTR [ebp-0x10]
100457d9:	cmp    DWORD PTR [eax+0x14],ebx
100457dc:	jne    0x100457eb
100457de:	push   edi
100457df:	push   DWORD PTR [ebp+0x8]
100457e2:	call   0x10045727
100457e7:	pop    ecx
100457e8:	pop    ecx
100457e9:	jmp    0x1004581f
100457eb:	push   esi
100457ec:	mov    eax,DWORD PTR [ebp+0x8]
100457ef:	movzx  eax,BYTE PTR [eax]
100457f2:	lea    ecx,[ebp-0x10]
100457f5:	push   ecx
100457f6:	push   eax
100457f7:	call   0x10045e64
100457fc:	inc    DWORD PTR [ebp+0x8]
100457ff:	mov    esi,eax
10045801:	movzx  eax,BYTE PTR [edi]
10045804:	lea    ecx,[ebp-0x10]
10045807:	push   ecx
10045808:	push   eax
10045809:	call   0x10045e64
1004580e:	add    esp,0x10
10045811:	inc    edi
10045812:	cmp    esi,ebx
10045814:	je     0x1004581a
10045816:	cmp    esi,eax
10045818:	je     0x100457ec
1004581a:	sub    esi,eax
1004581c:	mov    eax,esi
1004581e:	pop    esi
1004581f:	cmp    BYTE PTR [ebp-0x4],bl
10045822:	je     0x1004582b
10045824:	mov    ecx,DWORD PTR [ebp-0x8]
10045827:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004582b:	pop    edi
1004582c:	pop    ebx
1004582d:	leave  
1004582e:	ret    
1004582f:	push   ebp
10045830:	mov    ebp,esp
10045832:	push   esi
10045833:	xor    esi,esi
10045835:	cmp    DWORD PTR ds:0x10082330,esi
1004583b:	jne    0x1004586d
1004583d:	cmp    DWORD PTR [ebp+0x8],esi
10045840:	jne    0x10045861
10045842:	call   0x10046c41
10045847:	push   esi
10045848:	push   esi
10045849:	push   esi
1004584a:	push   esi
1004584b:	push   esi
1004584c:	mov    DWORD PTR [eax],0x16
10045852:	call   0x100435e1
10045857:	add    esp,0x14
1004585a:	mov    eax,0x7fffffff
1004585f:	jmp    0x1004587c
10045861:	cmp    DWORD PTR [ebp+0xc],esi
10045864:	je     0x10045842
10045866:	pop    esi
10045867:	pop    ebp
10045868:	jmp    0x10045727
1004586d:	push   esi
1004586e:	push   DWORD PTR [ebp+0xc]
10045871:	push   DWORD PTR [ebp+0x8]
10045874:	call   0x1004575c
10045879:	add    esp,0xc
1004587c:	pop    esi
1004587d:	pop    ebp
1004587e:	ret    
1004587f:	int3   
10045880:	push   ebp
10045881:	mov    ebp,esp
10045883:	push   edi
10045884:	push   esi
10045885:	mov    esi,DWORD PTR [ebp+0xc]
10045888:	mov    ecx,DWORD PTR [ebp+0x10]
1004588b:	mov    edi,DWORD PTR [ebp+0x8]
1004588e:	mov    eax,ecx
10045890:	mov    edx,ecx
10045892:	add    eax,esi
10045894:	cmp    edi,esi
10045896:	jbe    0x100458a0
10045898:	cmp    edi,eax
1004589a:	jb     0x10045a44
100458a0:	cmp    ecx,0x100
100458a6:	jb     0x100458c7
100458a8:	cmp    DWORD PTR ds:0x100845e4,0x0
100458af:	je     0x100458c7
100458b1:	push   edi
100458b2:	push   esi
100458b3:	and    edi,0xf
100458b6:	and    esi,0xf
100458b9:	cmp    edi,esi
100458bb:	pop    esi
100458bc:	pop    edi
100458bd:	jne    0x100458c7
100458bf:	pop    esi
100458c0:	pop    edi
100458c1:	pop    ebp
100458c2:	jmp    0x1004a122
100458c7:	test   edi,0x3
100458cd:	jne    0x100458e4
100458cf:	shr    ecx,0x2
100458d2:	and    edx,0x3
100458d5:	cmp    ecx,0x8
100458d8:	jb     0x10045904
100458da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100458dc:	jmp    DWORD PTR [edx*4+0x100459f4]
100458e3:	nop
100458e4:	mov    eax,edi
100458e6:	mov    edx,0x3
100458eb:	sub    ecx,0x4
100458ee:	jb     0x100458fc
100458f0:	and    eax,0x3
100458f3:	add    ecx,eax
100458f5:	jmp    DWORD PTR [eax*4+0x10045908]
100458fc:	jmp    DWORD PTR [ecx*4+0x10045a04]
10045903:	nop
10045904:	jmp    DWORD PTR [ecx*4+0x10045988]
1004590b:	nop
1004590c:	sbb    BYTE PTR [ecx+0x4],bl
1004590f:	adc    BYTE PTR [ecx+ebx*2+0x4],al
10045913:	adc    BYTE PTR [eax+0x59],ch
10045916:	add    al,0x10
10045918:	and    edx,ecx
1004591a:	mov    al,BYTE PTR [esi]
1004591c:	mov    BYTE PTR [edi],al
1004591e:	mov    al,BYTE PTR [esi+0x1]
10045921:	mov    BYTE PTR [edi+0x1],al
10045924:	mov    al,BYTE PTR [esi+0x2]
10045927:	shr    ecx,0x2
1004592a:	mov    BYTE PTR [edi+0x2],al
1004592d:	add    esi,0x3
10045930:	add    edi,0x3
10045933:	cmp    ecx,0x8
10045936:	jb     0x10045904
10045938:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004593a:	jmp    DWORD PTR [edx*4+0x100459f4]
10045941:	lea    ecx,[ecx+0x0]
10045944:	and    edx,ecx
10045946:	mov    al,BYTE PTR [esi]
10045948:	mov    BYTE PTR [edi],al
1004594a:	mov    al,BYTE PTR [esi+0x1]
1004594d:	shr    ecx,0x2
10045950:	mov    BYTE PTR [edi+0x1],al
10045953:	add    esi,0x2
10045956:	add    edi,0x2
10045959:	cmp    ecx,0x8
1004595c:	jb     0x10045904
1004595e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045960:	jmp    DWORD PTR [edx*4+0x100459f4]
10045967:	nop
10045968:	and    edx,ecx
1004596a:	mov    al,BYTE PTR [esi]
1004596c:	mov    BYTE PTR [edi],al
1004596e:	add    esi,0x1
10045971:	shr    ecx,0x2
10045974:	add    edi,0x1
10045977:	cmp    ecx,0x8
1004597a:	jb     0x10045904
1004597c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004597e:	jmp    DWORD PTR [edx*4+0x100459f4]
10045985:	lea    ecx,[ecx+0x0]
10045988:	jmp    0x100459e3
1004598a:	add    al,0x10
1004598c:	fcomp  DWORD PTR [ecx+0x4]
1004598f:	adc    al,dl
10045991:	pop    ecx
10045992:	add    al,0x10
10045994:	enter  0x459,0x10
10045998:	rcr    BYTE PTR [ecx+0x4],0x10
1004599c:	mov    eax,0xb0100459
100459a1:	pop    ecx
100459a2:	add    al,0x10
100459a4:	test   al,0x59
100459a6:	add    al,0x10
100459a8:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
100459ac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
100459b0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
100459b4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100459b8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100459bc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
100459c0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
100459c4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
100459c8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
100459cc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
100459d0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
100459d4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
100459d8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
100459dc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
100459e0:	lea    eax,[ecx*4+0x0]
100459e7:	add    esi,eax
100459e9:	add    edi,eax
100459eb:	jmp    DWORD PTR [edx*4+0x100459f4]
100459f2:	mov    edi,edi
100459f4:	add    al,0x5a
100459f6:	add    al,0x10
100459f8:	or     al,0x5a
100459fa:	add    al,0x10
100459fc:	sbb    BYTE PTR [edx+0x4],bl
100459ff:	adc    BYTE PTR [edx+ebx*2],ch
10045a02:	add    al,0x10
10045a04:	mov    eax,DWORD PTR [ebp+0x8]
10045a07:	pop    esi
10045a08:	pop    edi
10045a09:	leave  
10045a0a:	ret    
10045a0b:	nop
10045a0c:	mov    al,BYTE PTR [esi]
10045a0e:	mov    BYTE PTR [edi],al
10045a10:	mov    eax,DWORD PTR [ebp+0x8]
10045a13:	pop    esi
10045a14:	pop    edi
10045a15:	leave  
10045a16:	ret    
10045a17:	nop
10045a18:	mov    al,BYTE PTR [esi]
10045a1a:	mov    BYTE PTR [edi],al
10045a1c:	mov    al,BYTE PTR [esi+0x1]
10045a1f:	mov    BYTE PTR [edi+0x1],al
10045a22:	mov    eax,DWORD PTR [ebp+0x8]
10045a25:	pop    esi
10045a26:	pop    edi
10045a27:	leave  
10045a28:	ret    
10045a29:	lea    ecx,[ecx+0x0]
10045a2c:	mov    al,BYTE PTR [esi]
10045a2e:	mov    BYTE PTR [edi],al
10045a30:	mov    al,BYTE PTR [esi+0x1]
10045a33:	mov    BYTE PTR [edi+0x1],al
10045a36:	mov    al,BYTE PTR [esi+0x2]
10045a39:	mov    BYTE PTR [edi+0x2],al
10045a3c:	mov    eax,DWORD PTR [ebp+0x8]
10045a3f:	pop    esi
10045a40:	pop    edi
10045a41:	leave  
10045a42:	ret    
10045a43:	nop
10045a44:	lea    esi,[ecx+esi*1-0x4]
10045a48:	lea    edi,[ecx+edi*1-0x4]
10045a4c:	test   edi,0x3
10045a52:	jne    0x10045a78
10045a54:	shr    ecx,0x2
10045a57:	and    edx,0x3
10045a5a:	cmp    ecx,0x8
10045a5d:	jb     0x10045a6c
10045a5f:	std    
10045a60:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045a62:	cld    
10045a63:	jmp    DWORD PTR [edx*4+0x10045b90]
10045a6a:	mov    edi,edi
10045a6c:	neg    ecx
10045a6e:	jmp    DWORD PTR [ecx*4+0x10045b40]
10045a75:	lea    ecx,[ecx+0x0]
10045a78:	mov    eax,edi
10045a7a:	mov    edx,0x3
10045a7f:	cmp    ecx,0x4
10045a82:	jb     0x10045a90
10045a84:	and    eax,0x3
10045a87:	sub    ecx,eax
10045a89:	jmp    DWORD PTR [eax*4+0x10045a94]
10045a90:	jmp    DWORD PTR [ecx*4+0x10045b90]
10045a97:	nop
10045a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10045a99:	pop    edx
10045a9a:	add    al,0x10
10045a9c:	enter  0x45a,0x10
10045aa0:	lock pop edx
10045aa2:	add    al,0x10
10045aa4:	mov    al,BYTE PTR [esi+0x3]
10045aa7:	and    edx,ecx
10045aa9:	mov    BYTE PTR [edi+0x3],al
10045aac:	sub    esi,0x1
10045aaf:	shr    ecx,0x2
10045ab2:	sub    edi,0x1
10045ab5:	cmp    ecx,0x8
10045ab8:	jb     0x10045a6c
10045aba:	std    
10045abb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045abd:	cld    
10045abe:	jmp    DWORD PTR [edx*4+0x10045b90]
10045ac5:	lea    ecx,[ecx+0x0]
10045ac8:	mov    al,BYTE PTR [esi+0x3]
10045acb:	and    edx,ecx
10045acd:	mov    BYTE PTR [edi+0x3],al
10045ad0:	mov    al,BYTE PTR [esi+0x2]
10045ad3:	shr    ecx,0x2
10045ad6:	mov    BYTE PTR [edi+0x2],al
10045ad9:	sub    esi,0x2
10045adc:	sub    edi,0x2
10045adf:	cmp    ecx,0x8
10045ae2:	jb     0x10045a6c
10045ae4:	std    
10045ae5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045ae7:	cld    
10045ae8:	jmp    DWORD PTR [edx*4+0x10045b90]
10045aef:	nop
10045af0:	mov    al,BYTE PTR [esi+0x3]
10045af3:	and    edx,ecx
10045af5:	mov    BYTE PTR [edi+0x3],al
10045af8:	mov    al,BYTE PTR [esi+0x2]
10045afb:	mov    BYTE PTR [edi+0x2],al
10045afe:	mov    al,BYTE PTR [esi+0x1]
10045b01:	shr    ecx,0x2
10045b04:	mov    BYTE PTR [edi+0x1],al
10045b07:	sub    esi,0x3
10045b0a:	sub    edi,0x3
10045b0d:	cmp    ecx,0x8
10045b10:	jb     0x10045a6c
10045b16:	std    
10045b17:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10045b19:	cld    
10045b1a:	jmp    DWORD PTR [edx*4+0x10045b90]
10045b21:	lea    ecx,[ecx+0x0]
10045b24:	inc    esp
10045b25:	pop    ebx
10045b26:	add    al,0x10
10045b28:	dec    esp
10045b29:	pop    ebx
10045b2a:	add    al,0x10
10045b2c:	push   esp
10045b2d:	pop    ebx
10045b2e:	add    al,0x10
10045b30:	pop    esp
10045b31:	pop    ebx
10045b32:	add    al,0x10
10045b34:	fs pop ebx
10045b36:	add    al,0x10
10045b38:	ins    BYTE PTR es:[edi],dx
10045b39:	pop    ebx
10045b3a:	add    al,0x10
10045b3c:	je     0x10045b99
10045b3e:	add    al,0x10
10045b40:	xchg   DWORD PTR [ebx+0x4],ebx
10045b43:	adc    BYTE PTR [ebx-0x76e371bc],cl
10045b49:	inc    esp
10045b4a:	(bad)  
10045b4b:	sbb    al,0x8b
10045b4d:	inc    esp
10045b4e:	mov    ds,WORD PTR [eax]
10045b50:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10045b54:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10045b58:	mov    DWORD PTR [edi+ecx*4+0x14],eax
10045b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10045b60:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10045b64:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10045b68:	mov    DWORD PTR [edi+ecx*4+0xc],eax
10045b6c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10045b70:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10045b74:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10045b78:	mov    DWORD PTR [edi+ecx*4+0x4],eax
10045b7c:	lea    eax,[ecx*4+0x0]
10045b83:	add    esi,eax
10045b85:	add    edi,eax
10045b87:	jmp    DWORD PTR [edx*4+0x10045b90]
10045b8e:	mov    edi,edi
10045b90:	mov    al,ds:0xa810045b
10045b95:	pop    ebx
10045b96:	add    al,0x10
10045b98:	mov    eax,0xcc10045b
10045b9d:	pop    ebx
10045b9e:	add    al,0x10
10045ba0:	mov    eax,DWORD PTR [ebp+0x8]
10045ba3:	pop    esi
10045ba4:	pop    edi
10045ba5:	leave  
10045ba6:	ret    
10045ba7:	nop
10045ba8:	mov    al,BYTE PTR [esi+0x3]
10045bab:	mov    BYTE PTR [edi+0x3],al
10045bae:	mov    eax,DWORD PTR [ebp+0x8]
10045bb1:	pop    esi
10045bb2:	pop    edi
10045bb3:	leave  
10045bb4:	ret    
10045bb5:	lea    ecx,[ecx+0x0]
10045bb8:	mov    al,BYTE PTR [esi+0x3]
10045bbb:	mov    BYTE PTR [edi+0x3],al
10045bbe:	mov    al,BYTE PTR [esi+0x2]
10045bc1:	mov    BYTE PTR [edi+0x2],al
10045bc4:	mov    eax,DWORD PTR [ebp+0x8]
10045bc7:	pop    esi
10045bc8:	pop    edi
10045bc9:	leave  
10045bca:	ret    
10045bcb:	nop
10045bcc:	mov    al,BYTE PTR [esi+0x3]
10045bcf:	mov    BYTE PTR [edi+0x3],al
10045bd2:	mov    al,BYTE PTR [esi+0x2]
10045bd5:	mov    BYTE PTR [edi+0x2],al
10045bd8:	mov    al,BYTE PTR [esi+0x1]
10045bdb:	mov    BYTE PTR [edi+0x1],al
10045bde:	mov    eax,DWORD PTR [ebp+0x8]
10045be1:	pop    esi
10045be2:	pop    edi
10045be3:	leave  
10045be4:	ret    
10045be5:	int3   
10045be6:	int3   
10045be7:	int3   
10045be8:	int3   
10045be9:	int3   
10045bea:	int3   
10045beb:	int3   
10045bec:	int3   
10045bed:	int3   
10045bee:	int3   
10045bef:	int3   
10045bf0:	mov    ecx,DWORD PTR [esp+0x8]
10045bf4:	push   edi
10045bf5:	push   ebx
10045bf6:	push   esi
10045bf7:	mov    dl,BYTE PTR [ecx]
10045bf9:	mov    edi,DWORD PTR [esp+0x10]
10045bfd:	test   dl,dl
10045bff:	je     0x10045c70
10045c01:	mov    dh,BYTE PTR [ecx+0x1]
10045c04:	test   dh,dh
10045c06:	je     0x10045c5d
10045c08:	mov    esi,edi
10045c0a:	mov    ecx,DWORD PTR [esp+0x14]
10045c0e:	mov    al,BYTE PTR [edi]
10045c10:	add    esi,0x1
10045c13:	cmp    al,dl
10045c15:	je     0x10045c2e
10045c17:	test   al,al
10045c19:	je     0x10045c28
10045c1b:	mov    al,BYTE PTR [esi]
10045c1d:	add    esi,0x1
10045c20:	cmp    al,dl
10045c22:	je     0x10045c2e
10045c24:	test   al,al
10045c26:	jne    0x10045c1b
10045c28:	pop    esi
10045c29:	pop    ebx
10045c2a:	pop    edi
10045c2b:	xor    eax,eax
10045c2d:	ret    
10045c2e:	mov    al,BYTE PTR [esi]
10045c30:	add    esi,0x1
10045c33:	cmp    al,dh
10045c35:	jne    0x10045c20
10045c37:	lea    edi,[esi-0x1]
10045c3a:	mov    ah,BYTE PTR [ecx+0x2]
10045c3d:	test   ah,ah
10045c3f:	je     0x10045c69
10045c41:	mov    al,BYTE PTR [esi]
10045c43:	add    esi,0x2
10045c46:	cmp    al,ah
10045c48:	jne    0x10045c08
10045c4a:	mov    al,BYTE PTR [ecx+0x3]
10045c4d:	test   al,al
10045c4f:	je     0x10045c69
10045c51:	mov    ah,BYTE PTR [esi-0x1]
10045c54:	add    ecx,0x2
10045c57:	cmp    al,ah
10045c59:	je     0x10045c3a
10045c5b:	jmp    0x10045c08
10045c5d:	xor    eax,eax
10045c5f:	pop    esi
10045c60:	pop    ebx
10045c61:	pop    edi
10045c62:	mov    al,dl
10045c64:	jmp    0x1004abf6
10045c69:	lea    eax,[edi-0x1]
10045c6c:	pop    esi
10045c6d:	pop    ebx
10045c6e:	pop    edi
10045c6f:	ret    
10045c70:	mov    eax,edi
10045c72:	pop    esi
10045c73:	pop    ebx
10045c74:	pop    edi
10045c75:	ret    
10045c76:	cmp    DWORD PTR [esp+0x8],0x0
10045c7b:	je     0x10045c83
10045c7d:	mov    BYTE PTR [ecx],0x2d
10045c80:	inc    ecx
10045c81:	neg    eax
10045c83:	push   esi
10045c84:	mov    esi,ecx
10045c86:	xor    edx,edx
10045c88:	div    DWORD PTR [esp+0x8]
10045c8c:	cmp    edx,0x9
10045c8f:	jbe    0x10045c96
10045c91:	add    dl,0x57
10045c94:	jmp    0x10045c99
10045c96:	add    dl,0x30
10045c99:	mov    BYTE PTR [ecx],dl
10045c9b:	inc    ecx
10045c9c:	test   eax,eax
10045c9e:	ja     0x10045c86
10045ca0:	mov    BYTE PTR [ecx],0x0
10045ca3:	dec    ecx
10045ca4:	mov    dl,BYTE PTR [esi]
10045ca6:	mov    al,BYTE PTR [ecx]
10045ca8:	mov    BYTE PTR [ecx],dl
10045caa:	dec    ecx
10045cab:	mov    BYTE PTR [esi],al
10045cad:	inc    esi
10045cae:	cmp    esi,ecx
10045cb0:	jb     0x10045ca4
10045cb2:	pop    esi
10045cb3:	ret    0x8
10045cb6:	push   ebp
10045cb7:	mov    ebp,esp
10045cb9:	cmp    DWORD PTR [ebp+0x10],0xa
10045cbd:	mov    eax,DWORD PTR [ebp+0x8]
10045cc0:	jne    0x10045ccc
10045cc2:	test   eax,eax
10045cc4:	jge    0x10045ccc
10045cc6:	push   0x1
10045cc8:	push   0xa
10045cca:	jmp    0x10045cd1
10045ccc:	push   0x0
10045cce:	push   DWORD PTR [ebp+0x10]
10045cd1:	mov    ecx,DWORD PTR [ebp+0xc]
10045cd4:	call   0x10045c76
10045cd9:	mov    eax,DWORD PTR [ebp+0xc]
10045cdc:	pop    ebp
10045cdd:	ret    
10045cde:	push   ebp
10045cdf:	mov    ebp,esp
10045ce1:	xor    eax,eax
10045ce3:	cmp    DWORD PTR [ebp+0x10],0xa
10045ce7:	jne    0x10045cef
10045ce9:	cmp    DWORD PTR [ebp+0x8],eax
10045cec:	jge    0x10045cef
10045cee:	inc    eax
10045cef:	mov    ecx,DWORD PTR [ebp+0xc]
10045cf2:	push   eax
10045cf3:	push   DWORD PTR [ebp+0x10]
10045cf6:	mov    eax,DWORD PTR [ebp+0x8]
10045cf9:	call   0x10045c76
10045cfe:	mov    eax,DWORD PTR [ebp+0xc]
10045d01:	pop    ebp
10045d02:	ret    
10045d03:	int3   
10045d04:	int3   
10045d05:	int3   
10045d06:	int3   
10045d07:	int3   
10045d08:	int3   
10045d09:	int3   
10045d0a:	int3   
10045d0b:	int3   
10045d0c:	int3   
10045d0d:	int3   
10045d0e:	int3   
10045d0f:	int3   
10045d10:	mov    eax,DWORD PTR [esp+0xc]
10045d14:	push   ebx
10045d15:	test   eax,eax
10045d17:	je     0x10045d6b
10045d19:	mov    edx,DWORD PTR [esp+0x8]
10045d1d:	xor    ebx,ebx
10045d1f:	mov    bl,BYTE PTR [esp+0xc]
10045d23:	test   edx,0x3
10045d29:	je     0x10045d41
10045d2b:	mov    cl,BYTE PTR [edx]
10045d2d:	add    edx,0x1
10045d30:	xor    cl,bl
10045d32:	je     0x10045da6
10045d34:	sub    eax,0x1
10045d37:	je     0x10045d6b
10045d39:	test   edx,0x3
10045d3f:	jne    0x10045d2b
10045d41:	sub    eax,0x4
10045d44:	jb     0x10045d58
10045d46:	push   edi
10045d47:	mov    edi,ebx
10045d49:	shl    ebx,0x8
10045d4c:	add    ebx,edi
10045d4e:	mov    edi,ebx
10045d50:	shl    ebx,0x10
10045d53:	add    ebx,edi
10045d55:	jmp    0x10045d72
10045d57:	pop    edi
10045d58:	add    eax,0x4
10045d5b:	je     0x10045d6b
10045d5d:	mov    cl,BYTE PTR [edx]
10045d5f:	add    edx,0x1
10045d62:	xor    cl,bl
10045d64:	je     0x10045da6
10045d66:	sub    eax,0x1
10045d69:	jne    0x10045d5d
10045d6b:	pop    ebx
10045d6c:	ret    
10045d6d:	sub    eax,0x4
10045d70:	jb     0x10045d57
10045d72:	mov    ecx,DWORD PTR [edx]
10045d74:	xor    ecx,ebx
10045d76:	mov    edi,0x7efefeff
10045d7b:	add    edi,ecx
10045d7d:	xor    ecx,0xffffffff
10045d80:	xor    ecx,edi
10045d82:	add    edx,0x4
10045d85:	and    ecx,0x81010100
10045d8b:	je     0x10045d6d
10045d8d:	mov    ecx,DWORD PTR [edx-0x4]
10045d90:	xor    cl,bl
10045d92:	je     0x10045db7
10045d94:	xor    ch,bl
10045d96:	je     0x10045db1
10045d98:	shr    ecx,0x10
10045d9b:	xor    cl,bl
10045d9d:	je     0x10045dab
10045d9f:	xor    ch,bl
10045da1:	je     0x10045da5
10045da3:	jmp    0x10045d6d
10045da5:	pop    edi
10045da6:	lea    eax,[edx-0x1]
10045da9:	pop    ebx
10045daa:	ret    
10045dab:	lea    eax,[edx-0x2]
10045dae:	pop    edi
10045daf:	pop    ebx
10045db0:	ret    
10045db1:	lea    eax,[edx-0x3]
10045db4:	pop    edi
10045db5:	pop    ebx
10045db6:	ret    
10045db7:	lea    eax,[edx-0x4]
10045dba:	pop    edi
10045dbb:	pop    ebx
10045dbc:	ret    
10045dbd:	int3   
10045dbe:	int3   
10045dbf:	int3   
10045dc0:	mov    edx,DWORD PTR [esp+0xc]
10045dc4:	mov    ecx,DWORD PTR [esp+0x4]
10045dc8:	test   edx,edx
10045dca:	je     0x10045e35
10045dcc:	xor    eax,eax
10045dce:	mov    al,BYTE PTR [esp+0x8]
10045dd2:	test   al,al
10045dd4:	jne    0x10045dec
10045dd6:	cmp    edx,0x100
10045ddc:	jb     0x10045dec
10045dde:	cmp    DWORD PTR ds:0x100845e4,0x0
10045de5:	je     0x10045dec
10045de7:	jmp    0x1004ad9c
10045dec:	push   edi
10045ded:	mov    edi,ecx
10045def:	cmp    edx,0x4
10045df2:	jb     0x10045e25
10045df4:	neg    ecx
10045df6:	and    ecx,0x3
10045df9:	je     0x10045e07
10045dfb:	sub    edx,ecx
10045dfd:	mov    BYTE PTR [edi],al
10045dff:	add    edi,0x1
10045e02:	sub    ecx,0x1
10045e05:	jne    0x10045dfd
10045e07:	mov    ecx,eax
10045e09:	shl    eax,0x8
10045e0c:	add    eax,ecx
10045e0e:	mov    ecx,eax
10045e10:	shl    eax,0x10
10045e13:	add    eax,ecx
10045e15:	mov    ecx,edx
10045e17:	and    edx,0x3
10045e1a:	shr    ecx,0x2
10045e1d:	je     0x10045e25
10045e1f:	rep stos DWORD PTR es:[edi],eax
10045e21:	test   edx,edx
10045e23:	je     0x10045e2f
10045e25:	mov    BYTE PTR [edi],al
10045e27:	add    edi,0x1
10045e2a:	sub    edx,0x1
10045e2d:	jne    0x10045e25
10045e2f:	mov    eax,DWORD PTR [esp+0x8]
10045e33:	pop    edi
10045e34:	ret    
10045e35:	mov    eax,DWORD PTR [esp+0x4]
10045e39:	ret    
10045e3a:	push   DWORD PTR ds:0x1008235c
10045e40:	call   0x10046d68
10045e45:	test   eax,eax
10045e47:	pop    ecx
10045e48:	je     0x10045e4c
10045e4a:	call   eax
10045e4c:	push   0x19
10045e4e:	call   0x10049e8c
10045e53:	push   0x1
10045e55:	push   0x0
10045e57:	call   0x1004af1e
10045e5c:	add    esp,0xc
10045e5f:	jmp    0x1004ae2b
10045e64:	push   ebp
10045e65:	mov    ebp,esp
10045e67:	sub    esp,0x18
10045e6a:	push   ebx
10045e6b:	push   esi
10045e6c:	push   DWORD PTR [ebp+0xc]
10045e6f:	lea    ecx,[ebp-0x18]
10045e72:	call   0x100456a5
10045e77:	mov    ebx,DWORD PTR [ebp+0x8]
10045e7a:	mov    esi,0x100
10045e7f:	cmp    ebx,esi
10045e81:	jae    0x10045ed7
10045e83:	mov    ecx,DWORD PTR [ebp-0x18]
10045e86:	cmp    DWORD PTR [ecx+0xac],0x1
10045e8d:	jle    0x10045ea3
10045e8f:	lea    eax,[ebp-0x18]
10045e92:	push   eax
10045e93:	push   0x1
10045e95:	push   ebx
10045e96:	call   0x1004b36f
10045e9b:	mov    ecx,DWORD PTR [ebp-0x18]
10045e9e:	add    esp,0xc
10045ea1:	jmp    0x10045eb0
10045ea3:	mov    eax,DWORD PTR [ecx+0xc8]
10045ea9:	movzx  eax,BYTE PTR [eax+ebx*2]
10045ead:	and    eax,0x1
10045eb0:	test   eax,eax
10045eb2:	je     0x10045ec3
10045eb4:	mov    eax,DWORD PTR [ecx+0xcc]
10045eba:	movzx  eax,BYTE PTR [eax+ebx*1]
10045ebe:	jmp    0x10045f6a
10045ec3:	cmp    BYTE PTR [ebp-0xc],0x0
10045ec7:	je     0x10045ed0
10045ec9:	mov    eax,DWORD PTR [ebp-0x10]
10045ecc:	and    DWORD PTR [eax+0x70],0xfffffffd
10045ed0:	mov    eax,ebx
10045ed2:	jmp    0x10045f77
10045ed7:	mov    eax,DWORD PTR [ebp-0x18]
10045eda:	cmp    DWORD PTR [eax+0xac],0x1
10045ee1:	jle    0x10045f14
10045ee3:	mov    DWORD PTR [ebp+0x8],ebx
10045ee6:	sar    DWORD PTR [ebp+0x8],0x8
10045eea:	lea    eax,[ebp-0x18]
10045eed:	push   eax
10045eee:	mov    eax,DWORD PTR [ebp+0x8]
10045ef1:	and    eax,0xff
10045ef6:	push   eax
10045ef7:	call   0x1004b32b
10045efc:	test   eax,eax
10045efe:	pop    ecx
10045eff:	pop    ecx
10045f00:	je     0x10045f14
10045f02:	mov    al,BYTE PTR [ebp+0x8]
10045f05:	push   0x2
10045f07:	mov    BYTE PTR [ebp-0x4],al
10045f0a:	mov    BYTE PTR [ebp-0x3],bl
10045f0d:	mov    BYTE PTR [ebp-0x2],0x0
10045f11:	pop    ecx
10045f12:	jmp    0x10045f29
10045f14:	call   0x10046c41
10045f19:	mov    DWORD PTR [eax],0x2a
10045f1f:	xor    ecx,ecx
10045f21:	mov    BYTE PTR [ebp-0x4],bl
10045f24:	mov    BYTE PTR [ebp-0x3],0x0
10045f28:	inc    ecx
10045f29:	mov    eax,DWORD PTR [ebp-0x18]
10045f2c:	push   0x1
10045f2e:	push   DWORD PTR [eax+0x4]
10045f31:	lea    edx,[ebp-0x8]
10045f34:	push   0x3
10045f36:	push   edx
10045f37:	push   ecx
10045f38:	lea    ecx,[ebp-0x4]
10045f3b:	push   ecx
10045f3c:	push   esi
10045f3d:	push   DWORD PTR [eax+0x14]
10045f40:	lea    eax,[ebp-0x18]
10045f43:	push   eax
10045f44:	call   0x1004b2e8
10045f49:	add    esp,0x24
10045f4c:	test   eax,eax
10045f4e:	je     0x10045ec3
10045f54:	cmp    eax,0x1
10045f57:	jne    0x10045f5f
10045f59:	movzx  eax,BYTE PTR [ebp-0x8]
10045f5d:	jmp    0x10045f6a
10045f5f:	movzx  ecx,BYTE PTR [ebp-0x7]
10045f63:	xor    eax,eax
10045f65:	mov    ah,BYTE PTR [ebp-0x8]
10045f68:	or     eax,ecx
10045f6a:	cmp    BYTE PTR [ebp-0xc],0x0
10045f6e:	je     0x10045f77
10045f70:	mov    ecx,DWORD PTR [ebp-0x10]
10045f73:	and    DWORD PTR [ecx+0x70],0xfffffffd
10045f77:	pop    esi
10045f78:	pop    ebx
10045f79:	leave  
10045f7a:	ret    
10045f7b:	cmp    DWORD PTR ds:0x10082330,0x0
10045f82:	jne    0x10045f94
10045f84:	mov    eax,DWORD PTR [esp+0x4]
10045f88:	lea    ecx,[eax-0x41]
10045f8b:	cmp    ecx,0x19
10045f8e:	ja     0x10045fa1
10045f90:	add    eax,0x20
10045f93:	ret    
10045f94:	push   0x0
10045f96:	push   DWORD PTR [esp+0x8]
10045f9a:	call   0x10045e64
10045f9f:	pop    ecx
10045fa0:	pop    ecx
10045fa1:	ret    
10045fa2:	push   0xa
10045fa4:	push   0x0
10045fa6:	push   DWORD PTR [esp+0xc]
10045faa:	call   0x1004b650
10045faf:	add    esp,0xc
10045fb2:	ret    
10045fb3:	jmp    0x10045fa2
10045fb8:	push   0x10
10045fba:	push   0x10075d48
10045fbf:	call   0x1004771c
10045fc4:	xor    eax,eax
10045fc6:	mov    DWORD PTR [ebp-0x20],eax
10045fc9:	mov    DWORD PTR [ebp-0x4],eax
10045fcc:	mov    DWORD PTR [ebp-0x1c],eax
10045fcf:	mov    eax,DWORD PTR [ebp-0x1c]
10045fd2:	cmp    eax,DWORD PTR [ebp+0x10]
10045fd5:	jge    0x10045fea
10045fd7:	mov    esi,DWORD PTR [ebp+0x8]
10045fda:	mov    ecx,esi
10045fdc:	call   DWORD PTR [ebp+0x14]
10045fdf:	add    esi,DWORD PTR [ebp+0xc]
10045fe2:	mov    DWORD PTR [ebp+0x8],esi
10045fe5:	inc    DWORD PTR [ebp-0x1c]
10045fe8:	jmp    0x10045fcf
10045fea:	mov    DWORD PTR [ebp-0x20],0x1
10045ff1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045ff8:	call   0x10046005
10045ffd:	call   0x10047761
10046002:	ret    0x14
10046005:	cmp    DWORD PTR [ebp-0x20],0x0
10046009:	jne    0x1004601c
1004600b:	push   DWORD PTR [ebp+0x18]
1004600e:	push   DWORD PTR [ebp-0x1c]
10046011:	push   DWORD PTR [ebp+0xc]
10046014:	push   DWORD PTR [ebp+0x8]
10046017:	call   0x10043200
1004601c:	ret    
1004601d:	push   ebp
1004601e:	mov    ebp,esp
10046020:	sub    esp,0xc
10046023:	mov    eax,ds:0x100801ac
10046028:	xor    eax,ebp
1004602a:	mov    DWORD PTR [ebp-0x4],eax
1004602d:	push   esi
1004602e:	xor    esi,esi
10046030:	cmp    ebx,esi
10046032:	push   edi
10046033:	jne    0x10046053
10046035:	call   0x10046c41
1004603a:	push   0x16
1004603c:	pop    edi
1004603d:	push   esi
1004603e:	push   esi
1004603f:	push   esi
10046040:	push   esi
10046041:	push   esi
10046042:	mov    DWORD PTR [eax],edi
10046044:	call   0x100435e1
10046049:	add    esp,0x14
1004604c:	mov    eax,edi
1004604e:	jmp    0x10046193
10046053:	push   DWORD PTR [ebp+0x8]
10046056:	push   ebx
10046057:	call   0x1004b986
1004605c:	cmp    eax,DWORD PTR [ebp+0x8]
1004605f:	pop    ecx
10046060:	pop    ecx
10046061:	jb     0x10046068
10046063:	mov    WORD PTR [ebx],si
10046066:	jmp    0x10046035
10046068:	mov    edx,DWORD PTR [ebp+0xc]
1004606b:	mov    eax,DWORD PTR [edx]
1004606d:	mov    ecx,DWORD PTR [eax+0x14]
10046070:	cmp    ecx,esi
10046072:	jne    0x1004609e
10046074:	cmp    WORD PTR [ebx],si
10046077:	mov    eax,ebx
10046079:	je     0x10046097
1004607b:	movzx  ecx,WORD PTR [eax]
1004607e:	cmp    cx,0x41
10046082:	jb     0x10046090
10046084:	cmp    cx,0x5a
10046088:	ja     0x10046090
1004608a:	add    ecx,0x20
1004608d:	mov    WORD PTR [eax],cx
10046090:	inc    eax
10046091:	inc    eax
10046092:	cmp    WORD PTR [eax],si
10046095:	jne    0x1004607b
10046097:	xor    eax,eax
10046099:	jmp    0x10046193
1004609e:	push   DWORD PTR [eax+0x4]
100460a1:	mov    edi,0x100
100460a6:	push   esi
100460a7:	push   esi
100460a8:	push   0xffffffff
100460aa:	push   ebx
100460ab:	push   edi
100460ac:	push   ecx
100460ad:	push   edx
100460ae:	call   0x1004b946
100460b3:	mov    ecx,eax
100460b5:	add    esp,0x20
100460b8:	cmp    ecx,esi
100460ba:	mov    DWORD PTR [ebp-0xc],ecx
100460bd:	jne    0x100460d6
100460bf:	call   0x10046c41
100460c4:	mov    DWORD PTR [eax],0x2a
100460ca:	call   0x10046c41
100460cf:	mov    eax,DWORD PTR [eax]
100460d1:	jmp    0x10046193
100460d6:	cmp    DWORD PTR [ebp+0x8],ecx
100460d9:	jae    0x100460ea
100460db:	mov    WORD PTR [ebx],si
100460de:	call   0x10046c41
100460e3:	push   0x22
100460e5:	jmp    0x1004603c
100460ea:	cmp    ecx,esi
100460ec:	jle    0x10046134
100460ee:	push   0xffffffe0
100460f0:	xor    edx,edx
100460f2:	pop    eax
100460f3:	div    ecx
100460f5:	cmp    eax,0x2
100460f8:	jb     0x10046134
100460fa:	lea    eax,[ecx+ecx*1+0x8]
100460fe:	cmp    eax,0x400
10046103:	ja     0x10046118
10046105:	call   0x1004b9b0
1004610a:	mov    eax,esp
1004610c:	cmp    eax,esi
1004610e:	je     0x1004612c
10046110:	mov    DWORD PTR [eax],0xcccc
10046116:	jmp    0x10046129
10046118:	push   eax
10046119:	call   0x10045143
1004611e:	cmp    eax,esi
10046120:	pop    ecx
10046121:	je     0x1004612c
10046123:	mov    DWORD PTR [eax],0xdddd
10046129:	add    eax,0x8
1004612c:	mov    ecx,DWORD PTR [ebp-0xc]
1004612f:	mov    DWORD PTR [ebp-0x8],eax
10046132:	jmp    0x10046137
10046134:	mov    DWORD PTR [ebp-0x8],esi
10046137:	cmp    DWORD PTR [ebp-0x8],esi
1004613a:	jne    0x10046149
1004613c:	call   0x10046c41
10046141:	mov    DWORD PTR [eax],0xc
10046147:	jmp    0x100460ca
10046149:	mov    edx,DWORD PTR [ebp+0xc]
1004614c:	mov    eax,DWORD PTR [edx]
1004614e:	push   DWORD PTR [eax+0x4]
10046151:	push   ecx
10046152:	push   DWORD PTR [ebp-0x8]
10046155:	push   0xffffffff
10046157:	push   ebx
10046158:	push   edi
10046159:	push   DWORD PTR [eax+0x14]
1004615c:	push   edx
1004615d:	call   0x1004b946
10046162:	add    esp,0x20
10046165:	test   eax,eax
10046167:	je     0x1004617c
10046169:	push   DWORD PTR [ebp-0x8]
1004616c:	push   DWORD PTR [ebp+0x8]
1004616f:	push   ebx
10046170:	call   0x1004b679
10046175:	add    esp,0xc
10046178:	mov    esi,eax
1004617a:	jmp    0x10046188
1004617c:	call   0x10046c41
10046181:	push   0x2a
10046183:	pop    ecx
10046184:	mov    DWORD PTR [eax],ecx
10046186:	mov    esi,ecx
10046188:	push   DWORD PTR [ebp-0x8]
1004618b:	call   0x1001b64a
10046190:	pop    ecx
10046191:	mov    eax,esi
10046193:	lea    esp,[ebp-0x14]
10046196:	pop    edi
10046197:	pop    esi
10046198:	mov    ecx,DWORD PTR [ebp-0x4]
1004619b:	xor    ecx,ebp
1004619d:	call   0x10043615
100461a2:	leave  
100461a3:	ret    
100461a4:	push   ebp
100461a5:	mov    ebp,esp
100461a7:	sub    esp,0x10
100461aa:	push   ebx
100461ab:	push   DWORD PTR [ebp+0x10]
100461ae:	lea    ecx,[ebp-0x10]
100461b1:	call   0x100456a5
100461b6:	mov    ebx,DWORD PTR [ebp+0x8]
100461b9:	lea    eax,[ebp-0x10]
100461bc:	push   eax
100461bd:	push   DWORD PTR [ebp+0xc]
100461c0:	call   0x1004601d
100461c5:	cmp    BYTE PTR [ebp-0x4],0x0
100461c9:	pop    ecx
100461ca:	pop    ecx
100461cb:	pop    ebx
100461cc:	je     0x100461d5
100461ce:	mov    ecx,DWORD PTR [ebp-0x8]
100461d1:	and    DWORD PTR [ecx+0x70],0xfffffffd
100461d5:	leave  
100461d6:	ret    
100461d7:	push   esi
100461d8:	xor    esi,esi
100461da:	cmp    DWORD PTR ds:0x10082330,esi
100461e0:	jne    0x1004622b
100461e2:	mov    eax,DWORD PTR [esp+0x8]
100461e6:	cmp    eax,esi
100461e8:	jne    0x10046206
100461ea:	call   0x10046c41
100461ef:	push   esi
100461f0:	push   esi
100461f1:	push   esi
100461f2:	push   esi
100461f3:	push   esi
100461f4:	mov    DWORD PTR [eax],0x16
100461fa:	call   0x100435e1
100461ff:	add    esp,0x14
10046202:	xor    eax,eax
10046204:	pop    esi
10046205:	ret    
10046206:	cmp    WORD PTR [eax],si
10046209:	mov    ecx,eax
1004620b:	je     0x1004623e
1004620d:	movzx  edx,WORD PTR [ecx]
10046210:	cmp    dx,0x41
10046214:	jb     0x10046222
10046216:	cmp    dx,0x5a
1004621a:	ja     0x10046222
1004621c:	add    edx,0x20
1004621f:	mov    WORD PTR [ecx],dx
10046222:	inc    ecx
10046223:	inc    ecx
10046224:	cmp    WORD PTR [ecx],si
10046227:	jne    0x1004620d
10046229:	pop    esi
1004622a:	ret    
1004622b:	push   esi
1004622c:	push   0xffffffff
1004622e:	push   DWORD PTR [esp+0x10]
10046232:	call   0x100461a4
10046237:	mov    eax,DWORD PTR [esp+0x14]
1004623b:	add    esp,0xc
1004623e:	pop    esi
1004623f:	ret    
10046240:	mov    eax,DWORD PTR [esp+0x4]
10046244:	push   ebx
10046245:	mov    ebx,DWORD PTR [esp+0xc]
10046249:	cmp    WORD PTR [ebx],0x0
1004624d:	push   edi
1004624e:	mov    edi,eax
10046250:	je     0x10046297
10046252:	movzx  ecx,WORD PTR [eax]
10046255:	test   cx,cx
10046258:	je     0x10046295
1004625a:	movzx  edx,cx
1004625d:	sub    eax,ebx
1004625f:	test   dx,dx
10046262:	mov    ecx,DWORD PTR [esp+0x10]
10046266:	je     0x10046283
10046268:	movzx  edx,WORD PTR [ecx]
1004626b:	test   dx,dx
1004626e:	je     0x1004629a
10046270:	movzx  ebx,WORD PTR [eax+ecx*1]
10046274:	movzx  edx,dx
10046277:	sub    ebx,edx
10046279:	jne    0x10046283
1004627b:	inc    ecx
1004627c:	inc    ecx
1004627d:	cmp    WORD PTR [eax+ecx*1],bx
10046281:	jne    0x10046268
10046283:	cmp    WORD PTR [ecx],0x0
10046287:	je     0x1004629a
10046289:	inc    edi
1004628a:	inc    edi
1004628b:	movzx  edx,WORD PTR [edi]
1004628e:	inc    eax
1004628f:	inc    eax
10046290:	test   dx,dx
10046293:	jne    0x1004625f
10046295:	xor    eax,eax
10046297:	pop    edi
10046298:	pop    ebx
10046299:	ret    
1004629a:	mov    eax,edi
1004629c:	jmp    0x10046297
1004629e:	push   0x10
100462a0:	push   0x10075d68
100462a5:	call   0x1004771c
100462aa:	mov    ebx,DWORD PTR [ebp+0x8]
100462ad:	test   ebx,ebx
100462af:	jne    0x100462bf
100462b1:	push   DWORD PTR [ebp+0xc]
100462b4:	call   0x10045143
100462b9:	pop    ecx
100462ba:	jmp    0x1004648b
100462bf:	mov    esi,DWORD PTR [ebp+0xc]
100462c2:	test   esi,esi
100462c4:	jne    0x100462d2
100462c6:	push   ebx
100462c7:	call   0x100437dc
100462cc:	pop    ecx
100462cd:	jmp    0x10046489
100462d2:	cmp    DWORD PTR ds:0x10084600,0x3
100462d9:	jne    0x10046472
100462df:	xor    edi,edi
100462e1:	mov    DWORD PTR [ebp-0x1c],edi
100462e4:	cmp    esi,0xffffffe0
100462e7:	ja     0x10046477
100462ed:	push   0x4
100462ef:	call   0x10047e0e
100462f4:	pop    ecx
100462f5:	mov    DWORD PTR [ebp-0x4],edi
100462f8:	push   ebx
100462f9:	call   0x10047fb0
100462fe:	pop    ecx
100462ff:	mov    DWORD PTR [ebp-0x20],eax
10046302:	cmp    eax,edi
10046304:	je     0x100463a8
1004630a:	cmp    esi,DWORD PTR ds:0x100845f0
10046310:	ja     0x1004635b
10046312:	push   esi
10046313:	push   ebx
10046314:	push   eax
10046315:	call   0x100484a5
1004631a:	add    esp,0xc
1004631d:	test   eax,eax
1004631f:	je     0x10046326
10046321:	mov    DWORD PTR [ebp-0x1c],ebx
10046324:	jmp    0x1004635b
10046326:	push   esi
10046327:	call   0x10048784
1004632c:	pop    ecx
1004632d:	mov    DWORD PTR [ebp-0x1c],eax
10046330:	cmp    eax,edi
10046332:	je     0x1004635b
10046334:	mov    eax,DWORD PTR [ebx-0x4]
10046337:	dec    eax
10046338:	cmp    eax,esi
1004633a:	jb     0x1004633e
1004633c:	mov    eax,esi
1004633e:	push   eax
1004633f:	push   ebx
10046340:	push   DWORD PTR [ebp-0x1c]
10046343:	call   0x10045340
10046348:	push   ebx
10046349:	call   0x10047fb0
1004634e:	mov    DWORD PTR [ebp-0x20],eax
10046351:	push   ebx
10046352:	push   eax
10046353:	call   0x10047fdb
10046358:	add    esp,0x18
1004635b:	cmp    DWORD PTR [ebp-0x1c],edi
1004635e:	jne    0x100463a8
10046360:	cmp    esi,edi
10046362:	jne    0x1004636a
10046364:	xor    esi,esi
10046366:	inc    esi
10046367:	mov    DWORD PTR [ebp+0xc],esi
1004636a:	add    esi,0xf
1004636d:	and    esi,0xfffffff0
10046370:	mov    DWORD PTR [ebp+0xc],esi
10046373:	push   esi
10046374:	push   edi
10046375:	push   DWORD PTR ds:0x10081ff4
1004637b:	call   DWORD PTR ds:0x10067190
10046381:	mov    DWORD PTR [ebp-0x1c],eax
10046384:	cmp    eax,edi
10046386:	je     0x100463a8
10046388:	mov    eax,DWORD PTR [ebx-0x4]
1004638b:	dec    eax
1004638c:	cmp    eax,esi
1004638e:	jb     0x10046392
10046390:	mov    eax,esi
10046392:	push   eax
10046393:	push   ebx
10046394:	push   DWORD PTR [ebp-0x1c]
10046397:	call   0x10045340
1004639c:	push   ebx
1004639d:	push   DWORD PTR [ebp-0x20]
100463a0:	call   0x10047fdb
100463a5:	add    esp,0x14
100463a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100463af:	call   0x100463e2
100463b4:	cmp    DWORD PTR [ebp-0x20],0x0
100463b8:	jne    0x100463eb
100463ba:	test   esi,esi
100463bc:	jne    0x100463bf
100463be:	inc    esi
100463bf:	add    esi,0xf
100463c2:	and    esi,0xfffffff0
100463c5:	mov    DWORD PTR [ebp+0xc],esi
100463c8:	push   esi
100463c9:	push   ebx
100463ca:	push   0x0
100463cc:	push   DWORD PTR ds:0x10081ff4
100463d2:	call   DWORD PTR ds:0x100671a8
100463d8:	mov    edi,eax
100463da:	jmp    0x100463ee
100463dc:	mov    esi,DWORD PTR [ebp+0xc]
100463df:	mov    ebx,DWORD PTR [ebp+0x8]
100463e2:	push   0x4
100463e4:	call   0x10047d36
100463e9:	pop    ecx
100463ea:	ret    
100463eb:	mov    edi,DWORD PTR [ebp-0x1c]
100463ee:	test   edi,edi
100463f0:	jne    0x100464b5
100463f6:	cmp    DWORD PTR ds:0x10081ff0,edi
100463fc:	je     0x1004642a
100463fe:	push   esi
100463ff:	call   0x10047920
10046404:	pop    ecx
10046405:	test   eax,eax
10046407:	jne    0x100462df
1004640d:	call   0x10046c41
10046412:	cmp    DWORD PTR [ebp-0x20],edi
10046415:	jne    0x10046483
10046417:	mov    esi,eax
10046419:	call   DWORD PTR ds:0x100670cc
1004641f:	push   eax
10046420:	call   0x10046c06
10046425:	pop    ecx
10046426:	mov    DWORD PTR [esi],eax
10046428:	jmp    0x10046489
1004642a:	test   edi,edi
1004642c:	jne    0x100464b5
10046432:	call   0x10046c41
10046437:	cmp    DWORD PTR [ebp-0x20],edi
1004643a:	je     0x100464a4
1004643c:	mov    DWORD PTR [eax],0xc
10046442:	jmp    0x100464b5
10046444:	test   esi,esi
10046446:	jne    0x10046449
10046448:	inc    esi
10046449:	push   esi
1004644a:	push   ebx
1004644b:	push   0x0
1004644d:	push   DWORD PTR ds:0x10081ff4
10046453:	call   DWORD PTR ds:0x100671a8
10046459:	mov    edi,eax
1004645b:	test   edi,edi
1004645d:	jne    0x100464b5
1004645f:	cmp    DWORD PTR ds:0x10081ff0,eax
10046465:	je     0x1004649b
10046467:	push   esi
10046468:	call   0x10047920
1004646d:	pop    ecx
1004646e:	test   eax,eax
10046470:	je     0x10046491
10046472:	cmp    esi,0xffffffe0
10046475:	jbe    0x10046444
10046477:	push   esi
10046478:	call   0x10047920
1004647d:	pop    ecx
1004647e:	call   0x10046c41
10046483:	mov    DWORD PTR [eax],0xc
10046489:	xor    eax,eax
1004648b:	call   0x10047761
10046490:	ret    
10046491:	call   0x10046c41
10046496:	jmp    0x10046417
1004649b:	test   edi,edi
1004649d:	jne    0x100464b5
1004649f:	call   0x10046c41
100464a4:	mov    esi,eax
100464a6:	call   DWORD PTR ds:0x100670cc
100464ac:	push   eax
100464ad:	call   0x10046c06
100464b2:	mov    DWORD PTR [esi],eax
100464b4:	pop    ecx
100464b5:	mov    eax,edi
100464b7:	jmp    0x1004648b
100464b9:	push   ebp
100464ba:	mov    ebp,esp
100464bc:	mov    ecx,DWORD PTR [ebp+0xc]
100464bf:	push   ebx
100464c0:	xor    ebx,ebx
100464c2:	cmp    ecx,ebx
100464c4:	jbe    0x100464ee
100464c6:	push   0xffffffe0
100464c8:	xor    edx,edx
100464ca:	pop    eax
100464cb:	div    ecx
100464cd:	cmp    eax,DWORD PTR [ebp+0x10]
100464d0:	jae    0x100464ee
100464d2:	call   0x10046c41
100464d7:	push   ebx
100464d8:	push   ebx
100464d9:	push   ebx
100464da:	push   ebx
100464db:	push   ebx
100464dc:	mov    DWORD PTR [eax],0xc
100464e2:	call   0x100435e1
100464e7:	add    esp,0x14
100464ea:	xor    eax,eax
100464ec:	jmp    0x1004652f
100464ee:	imul   ecx,DWORD PTR [ebp+0x10]
100464f2:	cmp    DWORD PTR [ebp+0x8],ebx
100464f5:	push   esi
100464f6:	push   edi
100464f7:	mov    esi,ecx
100464f9:	je     0x10046506
100464fb:	push   DWORD PTR [ebp+0x8]
100464fe:	call   0x1004737d
10046503:	pop    ecx
10046504:	mov    ebx,eax
10046506:	push   esi
10046507:	push   DWORD PTR [ebp+0x8]
1004650a:	call   0x1004629e
1004650f:	mov    edi,eax
10046511:	test   edi,edi
10046513:	pop    ecx
10046514:	pop    ecx
10046515:	je     0x1004652b
10046517:	cmp    ebx,esi
10046519:	jae    0x1004652b
1004651b:	sub    esi,ebx
1004651d:	push   esi
1004651e:	push   0x0
10046520:	add    ebx,edi
10046522:	push   ebx
10046523:	call   0x10045dc0
10046528:	add    esp,0xc
1004652b:	mov    eax,edi
1004652d:	pop    edi
1004652e:	pop    esi
1004652f:	pop    ebx
10046530:	pop    ebp
10046531:	ret    
10046532:	call   0x10046f84
10046537:	mov    ecx,DWORD PTR [esp+0x4]
1004653b:	mov    DWORD PTR [eax+0x14],ecx
1004653e:	ret    
1004653f:	call   0x10046f84
10046544:	mov    ecx,DWORD PTR [eax+0x14]
10046547:	imul   ecx,ecx,0x343fd
1004654d:	add    ecx,0x269ec3
10046553:	mov    DWORD PTR [eax+0x14],ecx
10046556:	mov    eax,ecx
10046558:	shr    eax,0x10
1004655b:	and    eax,0x7fff
10046560:	ret    
10046561:	push   ebp
10046562:	mov    ebp,esp
10046564:	push   ebx
10046565:	push   esi
10046566:	mov    esi,DWORD PTR [ebp+0x8]
10046569:	push   edi
1004656a:	xor    edi,edi
1004656c:	cmp    DWORD PTR [ebp+0x14],edi
1004656f:	jne    0x10046581
10046571:	cmp    esi,edi
10046573:	jne    0x10046585
10046575:	cmp    DWORD PTR [ebp+0xc],edi
10046578:	jne    0x1004658c
1004657a:	xor    eax,eax
1004657c:	pop    edi
1004657d:	pop    esi
1004657e:	pop    ebx
1004657f:	pop    ebp
10046580:	ret    
10046581:	cmp    esi,edi
10046583:	je     0x1004658c
10046585:	mov    ebx,DWORD PTR [ebp+0xc]
10046588:	cmp    ebx,edi
1004658a:	ja     0x100465a7
1004658c:	call   0x10046c41
10046591:	push   0x16
10046593:	pop    esi
10046594:	mov    DWORD PTR [eax],esi
10046596:	push   edi
10046597:	push   edi
10046598:	push   edi
10046599:	push   edi
1004659a:	push   edi
1004659b:	call   0x100435e1
100465a0:	add    esp,0x14
100465a3:	mov    eax,esi
100465a5:	jmp    0x1004657c
100465a7:	cmp    DWORD PTR [ebp+0x14],edi
100465aa:	jne    0x100465b1
100465ac:	mov    WORD PTR [esi],di
100465af:	jmp    0x1004657a
100465b1:	mov    edx,DWORD PTR [ebp+0x10]
100465b4:	cmp    edx,edi
100465b6:	jne    0x100465bd
100465b8:	mov    WORD PTR [esi],di
100465bb:	jmp    0x1004658c
100465bd:	cmp    DWORD PTR [ebp+0x14],0xffffffff
100465c1:	mov    eax,esi
100465c3:	jne    0x100465d9
100465c5:	movzx  ecx,WORD PTR [edx]
100465c8:	mov    WORD PTR [eax],cx
100465cb:	inc    eax
100465cc:	inc    eax
100465cd:	inc    edx
100465ce:	inc    edx
100465cf:	cmp    cx,di
100465d2:	je     0x100465f8
100465d4:	dec    ebx
100465d5:	jne    0x100465c5
100465d7:	jmp    0x100465f8
100465d9:	movzx  ecx,WORD PTR [edx]
100465dc:	mov    WORD PTR [eax],cx
100465df:	inc    eax
100465e0:	inc    eax
100465e1:	inc    edx
100465e2:	inc    edx
100465e3:	cmp    cx,di
100465e6:	je     0x100465f0
100465e8:	dec    ebx
100465e9:	je     0x100465f0
100465eb:	dec    DWORD PTR [ebp+0x14]
100465ee:	jne    0x100465d9
100465f0:	cmp    DWORD PTR [ebp+0x14],edi
100465f3:	jne    0x100465f8
100465f5:	mov    WORD PTR [eax],di
100465f8:	cmp    ebx,edi
100465fa:	jne    0x1004657a
10046600:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10046604:	jne    0x10046616
10046606:	mov    eax,DWORD PTR [ebp+0xc]
10046609:	push   0x50
1004660b:	mov    WORD PTR [esi+eax*2-0x2],di
10046610:	pop    eax
10046611:	jmp    0x1004657c
10046616:	mov    WORD PTR [esi],di
10046619:	call   0x10046c41
1004661e:	push   0x22
10046620:	pop    ecx
10046621:	mov    DWORD PTR [eax],ecx
10046623:	mov    esi,ecx
10046625:	jmp    0x10046596
1004662a:	int3   
1004662b:	int3   
1004662c:	int3   
1004662d:	int3   
1004662e:	int3   
1004662f:	int3   
10046630:	push   edi
10046631:	mov    edi,DWORD PTR [esp+0x8]
10046635:	jmp    0x100466a5
10046637:	lea    esp,[esp+0x0]
1004663e:	mov    edi,edi
10046640:	mov    ecx,DWORD PTR [esp+0x4]
10046644:	push   edi
10046645:	test   ecx,0x3
1004664b:	je     0x10046660
1004664d:	mov    al,BYTE PTR [ecx]
1004664f:	add    ecx,0x1
10046652:	test   al,al
10046654:	je     0x10046693
10046656:	test   ecx,0x3
1004665c:	jne    0x1004664d
1004665e:	mov    edi,edi
10046660:	mov    eax,DWORD PTR [ecx]
10046662:	mov    edx,0x7efefeff
10046667:	add    edx,eax
10046669:	xor    eax,0xffffffff
1004666c:	xor    eax,edx
1004666e:	add    ecx,0x4
10046671:	test   eax,0x81010100
10046676:	je     0x10046660
10046678:	mov    eax,DWORD PTR [ecx-0x4]
1004667b:	test   al,al
1004667d:	je     0x100466a2
1004667f:	test   ah,ah
10046681:	je     0x1004669d
10046683:	test   eax,0xff0000
10046688:	je     0x10046698
1004668a:	test   eax,0xff000000
1004668f:	je     0x10046693
10046691:	jmp    0x10046660
10046693:	lea    edi,[ecx-0x1]
10046696:	jmp    0x100466a5
10046698:	lea    edi,[ecx-0x2]
1004669b:	jmp    0x100466a5
1004669d:	lea    edi,[ecx-0x3]
100466a0:	jmp    0x100466a5
100466a2:	lea    edi,[ecx-0x4]
100466a5:	mov    ecx,DWORD PTR [esp+0xc]
100466a9:	test   ecx,0x3
100466af:	je     0x100466ce
100466b1:	mov    dl,BYTE PTR [ecx]
100466b3:	add    ecx,0x1
100466b6:	test   dl,dl
100466b8:	je     0x10046720
100466ba:	mov    BYTE PTR [edi],dl
100466bc:	add    edi,0x1
100466bf:	test   ecx,0x3
100466c5:	jne    0x100466b1
100466c7:	jmp    0x100466ce
100466c9:	mov    DWORD PTR [edi],edx
100466cb:	add    edi,0x4
100466ce:	mov    edx,0x7efefeff
100466d3:	mov    eax,DWORD PTR [ecx]
100466d5:	add    edx,eax
100466d7:	xor    eax,0xffffffff
100466da:	xor    eax,edx
100466dc:	mov    edx,DWORD PTR [ecx]
100466de:	add    ecx,0x4
100466e1:	test   eax,0x81010100
100466e6:	je     0x100466c9
100466e8:	test   dl,dl
100466ea:	je     0x10046720
100466ec:	test   dh,dh
100466ee:	je     0x10046717
100466f0:	test   edx,0xff0000
100466f6:	je     0x1004670a
100466f8:	test   edx,0xff000000
100466fe:	je     0x10046702
10046700:	jmp    0x100466c9
10046702:	mov    DWORD PTR [edi],edx
10046704:	mov    eax,DWORD PTR [esp+0x8]
10046708:	pop    edi
10046709:	ret    
1004670a:	mov    WORD PTR [edi],dx
1004670d:	mov    eax,DWORD PTR [esp+0x8]
10046711:	mov    BYTE PTR [edi+0x2],0x0
10046715:	pop    edi
10046716:	ret    
10046717:	mov    WORD PTR [edi],dx
1004671a:	mov    eax,DWORD PTR [esp+0x8]
1004671e:	pop    edi
1004671f:	ret    
10046720:	mov    BYTE PTR [edi],dl
10046722:	mov    eax,DWORD PTR [esp+0x8]
10046726:	pop    edi
10046727:	ret    
10046728:	lea    eax,[esp+0x10]
1004672c:	push   eax
1004672d:	push   0x0
1004672f:	push   DWORD PTR [esp+0x14]
10046733:	push   DWORD PTR [esp+0x14]
10046737:	push   DWORD PTR [esp+0x14]
1004673b:	call   0x100439d2
10046740:	add    esp,0x14
10046743:	ret    
10046744:	push   ebp
10046745:	mov    ebp,esp
10046747:	sub    esp,0x10
1004674a:	push   ebx
1004674b:	push   esi
1004674c:	push   DWORD PTR [ebp+0x10]
1004674f:	lea    ecx,[ebp-0x10]
10046752:	call   0x100456a5
10046757:	mov    ebx,DWORD PTR [ebp+0x8]
1004675a:	xor    esi,esi
1004675c:	cmp    ebx,esi
1004675e:	jne    0x1004678f
10046760:	call   0x10046c41
10046765:	push   esi
10046766:	push   esi
10046767:	push   esi
10046768:	push   esi
10046769:	push   esi
1004676a:	mov    DWORD PTR [eax],0x16
10046770:	call   0x100435e1
10046775:	add    esp,0x14
10046778:	cmp    BYTE PTR [ebp-0x4],0x0
1004677c:	je     0x10046785
1004677e:	mov    eax,DWORD PTR [ebp-0x8]
10046781:	and    DWORD PTR [eax+0x70],0xfffffffd
10046785:	mov    eax,0x7fffffff
1004678a:	jmp    0x1004684f
1004678f:	push   edi
10046790:	mov    edi,DWORD PTR [ebp+0xc]
10046793:	cmp    edi,esi
10046795:	jne    0x100467c6
10046797:	call   0x10046c41
1004679c:	push   esi
1004679d:	push   esi
1004679e:	push   esi
1004679f:	push   esi
100467a0:	push   esi
100467a1:	mov    DWORD PTR [eax],0x16
100467a7:	call   0x100435e1
100467ac:	add    esp,0x14
100467af:	cmp    BYTE PTR [ebp-0x4],0x0
100467b3:	je     0x100467bc
100467b5:	mov    eax,DWORD PTR [ebp-0x8]
100467b8:	and    DWORD PTR [eax+0x70],0xfffffffd
100467bc:	mov    eax,0x7fffffff
100467c1:	jmp    0x1004684e
100467c6:	mov    eax,DWORD PTR [ebp-0x10]
100467c9:	cmp    DWORD PTR [eax+0x14],esi
100467cc:	jne    0x10046808
100467ce:	movzx  eax,WORD PTR [ebx]
100467d1:	cmp    ax,0x41
100467d5:	jb     0x100467e0
100467d7:	cmp    ax,0x5a
100467db:	ja     0x100467e0
100467dd:	add    eax,0x20
100467e0:	movzx  esi,ax
100467e3:	movzx  eax,WORD PTR [edi]
100467e6:	cmp    ax,0x41
100467ea:	jb     0x100467f5
100467ec:	cmp    ax,0x5a
100467f0:	ja     0x100467f5
100467f2:	add    eax,0x20
100467f5:	inc    ebx
100467f6:	inc    ebx
100467f7:	inc    edi
100467f8:	inc    edi
100467f9:	test   si,si
100467fc:	movzx  eax,ax
100467ff:	je     0x10046839
10046801:	cmp    si,ax
10046804:	je     0x100467ce
10046806:	jmp    0x10046839
10046808:	movzx  eax,WORD PTR [ebx]
1004680b:	lea    ecx,[ebp-0x10]
1004680e:	push   ecx
1004680f:	push   eax
10046810:	call   0x1004b9dc
10046815:	movzx  esi,ax
10046818:	movzx  eax,WORD PTR [edi]
1004681b:	lea    ecx,[ebp-0x10]
1004681e:	push   ecx
1004681f:	inc    ebx
10046820:	push   eax
10046821:	inc    ebx
10046822:	call   0x1004b9dc
10046827:	add    esp,0x10
1004682a:	inc    edi
1004682b:	inc    edi
1004682c:	test   si,si
1004682f:	movzx  eax,ax
10046832:	je     0x10046839
10046834:	cmp    si,ax
10046837:	je     0x10046808
10046839:	movzx  ecx,ax
1004683c:	movzx  eax,si
1004683f:	sub    eax,ecx
10046841:	cmp    BYTE PTR [ebp-0x4],0x0
10046845:	je     0x1004684e
10046847:	mov    ecx,DWORD PTR [ebp-0x8]
1004684a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004684e:	pop    edi
1004684f:	pop    esi
10046850:	pop    ebx
10046851:	leave  
10046852:	ret    
10046853:	push   esi
10046854:	xor    esi,esi
10046856:	cmp    DWORD PTR ds:0x10082330,esi
1004685c:	push   edi
1004685d:	jne    0x100468d0
1004685f:	mov    edi,DWORD PTR [esp+0xc]
10046863:	cmp    edi,esi
10046865:	jne    0x10046886
10046867:	call   0x10046c41
1004686c:	push   esi
1004686d:	push   esi
1004686e:	push   esi
1004686f:	push   esi
10046870:	push   esi
10046871:	mov    DWORD PTR [eax],0x16
10046877:	call   0x100435e1
1004687c:	add    esp,0x14
1004687f:	mov    eax,0x7fffffff
10046884:	jmp    0x100468e1
10046886:	mov    edx,DWORD PTR [esp+0x10]
1004688a:	cmp    edx,esi
1004688c:	je     0x10046867
1004688e:	movzx  eax,WORD PTR [edi]
10046891:	cmp    ax,0x41
10046895:	jb     0x100468a0
10046897:	cmp    ax,0x5a
1004689b:	ja     0x100468a0
1004689d:	add    eax,0x20
100468a0:	movzx  ecx,ax
100468a3:	movzx  eax,WORD PTR [edx]
100468a6:	cmp    ax,0x41
100468aa:	jb     0x100468b5
100468ac:	cmp    ax,0x5a
100468b0:	ja     0x100468b5
100468b2:	add    eax,0x20
100468b5:	inc    edi
100468b6:	inc    edi
100468b7:	inc    edx
100468b8:	inc    edx
100468b9:	cmp    cx,si
100468bc:	movzx  eax,ax
100468bf:	je     0x100468c6
100468c1:	cmp    cx,ax
100468c4:	je     0x1004688e
100468c6:	movzx  edx,ax
100468c9:	movzx  eax,cx
100468cc:	sub    eax,edx
100468ce:	jmp    0x100468e1
100468d0:	push   esi
100468d1:	push   DWORD PTR [esp+0x14]
100468d5:	push   DWORD PTR [esp+0x14]
100468d9:	call   0x10046744
100468de:	add    esp,0xc
100468e1:	pop    edi
100468e2:	pop    esi
100468e3:	ret    
100468e4:	mov    edx,DWORD PTR [esp+0x4]
100468e8:	push   esi
100468e9:	mov    esi,DWORD PTR [esp+0xc]
100468ed:	push   edi
100468ee:	jmp    0x100468f9
100468f0:	test   cx,cx
100468f3:	je     0x10046906
100468f5:	inc    edx
100468f6:	inc    edx
100468f7:	inc    esi
100468f8:	inc    esi
100468f9:	movzx  ecx,WORD PTR [esi]
100468fc:	movzx  eax,WORD PTR [edx]
100468ff:	movzx  edi,cx
10046902:	sub    eax,edi
10046904:	je     0x100468f0
10046906:	test   eax,eax
10046908:	pop    edi
10046909:	pop    esi
1004690a:	jge    0x10046910
1004690c:	or     eax,0xffffffff
1004690f:	ret    
10046910:	jle    0x10046915
10046912:	xor    eax,eax
10046914:	inc    eax
10046915:	ret    
10046916:	push   ebp
10046917:	mov    ebp,esp
10046919:	push   ecx
1004691a:	mov    eax,DWORD PTR [ebp+0xc]
1004691d:	cmp    eax,0x1
10046920:	push   ebx
10046921:	push   esi
10046922:	push   edi
10046923:	jne    0x10046a40
10046929:	mov    ebx,DWORD PTR ds:0x100671b4
1004692f:	mov    edi,0x94
10046934:	push   edi
10046935:	push   0x0
10046937:	call   ebx
10046939:	push   eax
1004693a:	call   DWORD PTR ds:0x10067190
10046940:	mov    esi,eax
10046942:	test   esi,esi
10046944:	jne    0x1004694d
10046946:	xor    eax,eax
10046948:	jmp    0x10046ae8
1004694d:	push   esi
1004694e:	mov    DWORD PTR [esi],edi
10046950:	call   DWORD PTR ds:0x100671b0
10046956:	test   eax,eax
10046958:	push   esi
10046959:	push   0x0
1004695b:	jne    0x10046968
1004695d:	call   ebx
1004695f:	push   eax
10046960:	call   DWORD PTR ds:0x10067194
10046966:	jmp    0x10046946
10046968:	mov    eax,DWORD PTR [esi+0x10]
1004696b:	mov    edi,DWORD PTR [esi+0xc]
1004696e:	mov    DWORD PTR [ebp+0xc],eax
10046971:	mov    eax,DWORD PTR [esi+0x4]
10046974:	mov    DWORD PTR [ebp+0x10],eax
10046977:	mov    eax,DWORD PTR [esi+0x8]
1004697a:	mov    DWORD PTR [ebp-0x4],eax
1004697d:	and    edi,0x7fff
10046983:	call   ebx
10046985:	push   eax
10046986:	call   DWORD PTR ds:0x10067194
1004698c:	mov    eax,DWORD PTR [ebp+0xc]
1004698f:	cmp    eax,0x2
10046992:	je     0x1004699a
10046994:	or     edi,0x8000
1004699a:	mov    ecx,DWORD PTR [ebp-0x4]
1004699d:	mov    ds:0x10081b20,eax
100469a2:	mov    eax,DWORD PTR [ebp+0x10]
100469a5:	mov    edx,eax
100469a7:	shl    edx,0x8
100469aa:	add    edx,ecx
100469ac:	push   0x1
100469ae:	mov    DWORD PTR ds:0x10081b28,edx
100469b4:	mov    ds:0x10081b2c,eax
100469b9:	mov    DWORD PTR ds:0x10081b30,ecx
100469bf:	mov    DWORD PTR ds:0x10081b24,edi
100469c5:	call   0x10047e9a
100469ca:	test   eax,eax
100469cc:	pop    ecx
100469cd:	je     0x10046946
100469d3:	call   0x10047126
100469d8:	test   eax,eax
100469da:	jne    0x100469e6
100469dc:	call   0x10047ef4
100469e1:	jmp    0x10046946
100469e6:	call   0x1004c18a
100469eb:	call   DWORD PTR ds:0x100671ac
100469f1:	mov    ds:0x1008461c,eax
100469f6:	call   0x1004c055
100469fb:	mov    ds:0x10081af8,eax
10046a00:	call   0x1004ba89
10046a05:	test   eax,eax
10046a07:	jge    0x10046a10
10046a09:	call   0x10046e11
10046a0e:	jmp    0x100469dc
10046a10:	call   0x1004bf9c
10046a15:	test   eax,eax
10046a17:	jl     0x10046a39
10046a19:	call   0x1004bd29
10046a1e:	test   eax,eax
10046a20:	jl     0x10046a39
10046a22:	push   0x0
10046a24:	call   0x1004753c
10046a29:	test   eax,eax
10046a2b:	pop    ecx
10046a2c:	jne    0x10046a39
10046a2e:	inc    DWORD PTR ds:0x10081af4
10046a34:	jmp    0x10046ae5
10046a39:	call   0x1004bcdd
10046a3e:	jmp    0x10046a09
10046a40:	xor    edi,edi
10046a42:	cmp    eax,edi
10046a44:	jne    0x10046a7b
10046a46:	cmp    DWORD PTR ds:0x10081af4,edi
10046a4c:	jle    0x10046946
10046a52:	dec    DWORD PTR ds:0x10081af4
10046a58:	cmp    DWORD PTR ds:0x10081b5c,edi
10046a5e:	jne    0x10046a65
10046a60:	call   0x100476c1
10046a65:	cmp    DWORD PTR [ebp+0x10],edi
10046a68:	jne    0x10046ae5
10046a6a:	call   0x1004bcdd
10046a6f:	call   0x10046e11
10046a74:	call   0x10047ef4
10046a79:	jmp    0x10046ae5
10046a7b:	cmp    eax,0x2
10046a7e:	jne    0x10046ad9
10046a80:	call   0x10046ddf
10046a85:	push   0x214
10046a8a:	push   0x1
10046a8c:	call   0x100472ea
10046a91:	mov    esi,eax
10046a93:	cmp    esi,edi
10046a95:	pop    ecx
10046a96:	pop    ecx
10046a97:	je     0x10046946
10046a9d:	push   esi
10046a9e:	push   DWORD PTR ds:0x100801a0
10046aa4:	push   DWORD PTR ds:0x10081b10
10046aaa:	call   0x10046d68
10046aaf:	pop    ecx
10046ab0:	call   eax
10046ab2:	test   eax,eax
10046ab4:	je     0x10046acd
10046ab6:	push   edi
10046ab7:	push   esi
10046ab8:	call   0x10046e4e
10046abd:	pop    ecx
10046abe:	pop    ecx
10046abf:	call   DWORD PTR ds:0x1006715c
10046ac5:	or     DWORD PTR [esi+0x4],0xffffffff
10046ac9:	mov    DWORD PTR [esi],eax
10046acb:	jmp    0x10046ae5
10046acd:	push   esi
10046ace:	call   0x100437dc
10046ad3:	pop    ecx
10046ad4:	jmp    0x10046946
10046ad9:	cmp    eax,0x3
10046adc:	jne    0x10046ae5
10046ade:	push   edi
10046adf:	call   0x100470bd
10046ae4:	pop    ecx
10046ae5:	xor    eax,eax
10046ae7:	inc    eax
10046ae8:	pop    edi
10046ae9:	pop    esi
10046aea:	pop    ebx
10046aeb:	leave  
10046aec:	ret    0xc
10046aef:	push   0xc
10046af1:	push   0x10075d88
10046af6:	call   0x1004771c
10046afb:	mov    edi,ecx
10046afd:	mov    esi,edx
10046aff:	mov    ebx,DWORD PTR [ebp+0x8]
10046b02:	xor    eax,eax
10046b04:	inc    eax
10046b05:	mov    DWORD PTR [ebp-0x1c],eax
10046b08:	test   esi,esi
10046b0a:	jne    0x10046b18
10046b0c:	cmp    DWORD PTR ds:0x10081af4,edx
10046b12:	je     0x10046bdd
10046b18:	and    DWORD PTR [ebp-0x4],0x0
10046b1c:	cmp    esi,eax
10046b1e:	je     0x10046b25
10046b20:	cmp    esi,0x2
10046b23:	jne    0x10046b53
10046b25:	mov    eax,ds:0x100675e8
10046b2a:	test   eax,eax
10046b2c:	je     0x10046b36
10046b2e:	push   edi
10046b2f:	push   esi
10046b30:	push   ebx
10046b31:	call   eax
10046b33:	mov    DWORD PTR [ebp-0x1c],eax
10046b36:	cmp    DWORD PTR [ebp-0x1c],0x0
10046b3a:	je     0x10046bd6
10046b40:	push   edi
10046b41:	push   esi
10046b42:	push   ebx
10046b43:	call   0x10046916
10046b48:	mov    DWORD PTR [ebp-0x1c],eax
10046b4b:	test   eax,eax
10046b4d:	je     0x10046bd6
10046b53:	push   edi
10046b54:	push   esi
10046b55:	push   ebx
10046b56:	call   0x10016844
10046b5b:	mov    DWORD PTR [ebp-0x1c],eax
10046b5e:	cmp    esi,0x1
10046b61:	jne    0x10046b87
10046b63:	test   eax,eax
10046b65:	jne    0x10046b87
10046b67:	push   edi
10046b68:	push   eax
10046b69:	push   ebx
10046b6a:	call   0x10016844
10046b6f:	push   edi
10046b70:	push   0x0
10046b72:	push   ebx
10046b73:	call   0x10046916
10046b78:	mov    eax,ds:0x100675e8
10046b7d:	test   eax,eax
10046b7f:	je     0x10046b87
10046b81:	push   edi
10046b82:	push   0x0
10046b84:	push   ebx
10046b85:	call   eax
10046b87:	test   esi,esi
10046b89:	je     0x10046b90
10046b8b:	cmp    esi,0x3
10046b8e:	jne    0x10046bb6
10046b90:	push   edi
10046b91:	push   esi
10046b92:	push   ebx
10046b93:	call   0x10046916
10046b98:	test   eax,eax
10046b9a:	jne    0x10046b9f
10046b9c:	and    DWORD PTR [ebp-0x1c],eax
10046b9f:	cmp    DWORD PTR [ebp-0x1c],0x0
10046ba3:	je     0x10046bb6
10046ba5:	mov    eax,ds:0x100675e8
10046baa:	test   eax,eax
10046bac:	je     0x10046bb6
10046bae:	push   edi
10046baf:	push   esi
10046bb0:	push   ebx
10046bb1:	call   eax
10046bb3:	mov    DWORD PTR [ebp-0x1c],eax
10046bb6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046bbd:	mov    eax,DWORD PTR [ebp-0x1c]
10046bc0:	jmp    0x10046bdf
10046bc2:	mov    eax,DWORD PTR [ebp-0x14]
10046bc5:	mov    ecx,DWORD PTR [eax]
10046bc7:	mov    ecx,DWORD PTR [ecx]
10046bc9:	push   eax
10046bca:	push   ecx
10046bcb:	call   0x1004c330
10046bd0:	pop    ecx
10046bd1:	pop    ecx
10046bd2:	ret    
10046bd3:	mov    esp,DWORD PTR [ebp-0x18]
10046bd6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046bdd:	xor    eax,eax
10046bdf:	call   0x10047761
10046be4:	ret    
10046be5:	cmp    DWORD PTR [esp+0x8],0x1
10046bea:	jne    0x10046bf1
10046bec:	call   0x1004c34b
10046bf1:	push   DWORD PTR [esp+0x4]
10046bf5:	mov    ecx,DWORD PTR [esp+0x10]
10046bf9:	mov    edx,DWORD PTR [esp+0xc]
10046bfd:	call   0x10046aef
10046c02:	pop    ecx
10046c03:	ret    0xc
10046c06:	mov    eax,DWORD PTR [esp+0x4]
10046c0a:	xor    ecx,ecx
10046c0c:	cmp    eax,DWORD PTR [ecx*8+0x10080030]
10046c13:	je     0x10046c27
10046c15:	inc    ecx
10046c16:	cmp    ecx,0x2d
10046c19:	jb     0x10046c0c
10046c1b:	lea    ecx,[eax-0x13]
10046c1e:	cmp    ecx,0x11
10046c21:	ja     0x10046c2f
10046c23:	push   0xd
10046c25:	pop    eax
10046c26:	ret    
10046c27:	mov    eax,DWORD PTR [ecx*8+0x10080034]
10046c2e:	ret    
10046c2f:	add    eax,0xffffff44
10046c34:	push   0xe
10046c36:	pop    ecx
10046c37:	cmp    ecx,eax
10046c39:	sbb    eax,eax
10046c3b:	and    eax,ecx
10046c3d:	add    eax,0x8
10046c40:	ret    
10046c41:	call   0x10046f0d
10046c46:	test   eax,eax
10046c48:	jne    0x10046c50
10046c4a:	mov    eax,0x10080198
10046c4f:	ret    
10046c50:	add    eax,0x8
10046c53:	ret    
10046c54:	call   0x10046f0d
10046c59:	test   eax,eax
10046c5b:	jne    0x10046c63
10046c5d:	mov    eax,0x1008019c
10046c62:	ret    
10046c63:	add    eax,0xc
10046c66:	ret    
10046c67:	push   esi
10046c68:	call   0x10046c54
10046c6d:	mov    ecx,DWORD PTR [esp+0x8]
10046c71:	push   ecx
10046c72:	mov    DWORD PTR [eax],ecx
10046c74:	call   0x10046c06
10046c79:	pop    ecx
10046c7a:	mov    esi,eax
10046c7c:	call   0x10046c41
10046c81:	mov    DWORD PTR [eax],esi
10046c83:	pop    esi
10046c84:	ret    
10046c85:	push   ebp
10046c86:	mov    ebp,esp
10046c88:	push   ecx
10046c89:	push   ecx
10046c8a:	push   ebx
10046c8b:	push   esi
10046c8c:	xor    esi,esi
10046c8e:	lea    eax,[ebp-0x4]
10046c91:	inc    esi
10046c92:	xor    ebx,ebx
10046c94:	push   eax
10046c95:	mov    DWORD PTR [ebp-0x8],esi
10046c98:	mov    DWORD PTR [ebp-0x4],ebx
10046c9b:	call   0x10047500
10046ca0:	cmp    DWORD PTR [ebp-0x4],0x5
10046ca4:	pop    ecx
10046ca5:	jle    0x10046cab
10046ca7:	mov    eax,esi
10046ca9:	jmp    0x10046ced
10046cab:	push   edi
10046cac:	push   ebx
10046cad:	call   DWORD PTR ds:0x100671a0
10046cb3:	mov    esi,DWORD PTR [eax+0x3c]
10046cb6:	add    esi,eax
10046cb8:	cmp    WORD PTR [esi+0x6],bx
10046cbc:	movzx  eax,WORD PTR [esi+0x14]
10046cc0:	lea    edi,[eax+esi*1+0x18]
10046cc4:	jbe    0x10046ce9
10046cc6:	push   edi
10046cc7:	push   0x100675ec
10046ccc:	call   0x10047c10
10046cd1:	test   eax,eax
10046cd3:	pop    ecx
10046cd4:	pop    ecx
10046cd5:	je     0x10046ce5
10046cd7:	movzx  eax,WORD PTR [esi+0x6]
10046cdb:	inc    ebx
10046cdc:	add    edi,0x28
10046cdf:	cmp    ebx,eax
10046ce1:	jb     0x10046cc6
10046ce3:	jmp    0x10046ce9
10046ce5:	and    DWORD PTR [ebp-0x8],0x0
10046ce9:	mov    eax,DWORD PTR [ebp-0x8]
10046cec:	pop    edi
10046ced:	pop    esi
10046cee:	pop    ebx
10046cef:	leave  
10046cf0:	ret    
10046cf1:	push   esi
10046cf2:	push   DWORD PTR ds:0x100801a4
10046cf8:	mov    esi,DWORD PTR ds:0x100671b8
10046cfe:	call   esi
10046d00:	test   eax,eax
10046d02:	je     0x10046d25
10046d04:	mov    eax,ds:0x100801a0
10046d09:	cmp    eax,0xffffffff
10046d0c:	je     0x10046d25
10046d0e:	push   eax
10046d0f:	push   DWORD PTR ds:0x100801a4
10046d15:	call   esi
10046d17:	call   eax
10046d19:	test   eax,eax
10046d1b:	je     0x10046d25
10046d1d:	mov    eax,DWORD PTR [eax+0x1f8]
10046d23:	jmp    0x10046d4b
10046d25:	push   0x10067604
10046d2a:	call   DWORD PTR ds:0x100671a0
10046d30:	mov    esi,eax
10046d32:	test   esi,esi
10046d34:	je     0x10046d59
10046d36:	call   0x10046c85
10046d3b:	test   eax,eax
10046d3d:	je     0x10046d59
10046d3f:	push   0x100675f4
10046d44:	push   esi
10046d45:	call   DWORD PTR ds:0x100670e4
10046d4b:	test   eax,eax
10046d4d:	je     0x10046d59
10046d4f:	push   DWORD PTR [esp+0x8]
10046d53:	call   eax
10046d55:	mov    DWORD PTR [esp+0x8],eax
10046d59:	mov    eax,DWORD PTR [esp+0x8]
10046d5d:	pop    esi
10046d5e:	ret    
10046d5f:	push   0x0
10046d61:	call   0x10046cf1
10046d66:	pop    ecx
10046d67:	ret    
10046d68:	push   esi
10046d69:	push   DWORD PTR ds:0x100801a4
10046d6f:	mov    esi,DWORD PTR ds:0x100671b8
10046d75:	call   esi
10046d77:	test   eax,eax
10046d79:	je     0x10046d9c
10046d7b:	mov    eax,ds:0x100801a0
10046d80:	cmp    eax,0xffffffff
10046d83:	je     0x10046d9c
10046d85:	push   eax
10046d86:	push   DWORD PTR ds:0x100801a4
10046d8c:	call   esi
10046d8e:	call   eax
10046d90:	test   eax,eax
10046d92:	je     0x10046d9c
10046d94:	mov    eax,DWORD PTR [eax+0x1fc]
10046d9a:	jmp    0x10046dc2
10046d9c:	push   0x10067604
10046da1:	call   DWORD PTR ds:0x100671a0
10046da7:	mov    esi,eax
10046da9:	test   esi,esi
10046dab:	je     0x10046dd0
10046dad:	call   0x10046c85
10046db2:	test   eax,eax
10046db4:	je     0x10046dd0
10046db6:	push   0x10067614
10046dbb:	push   esi
10046dbc:	call   DWORD PTR ds:0x100670e4
10046dc2:	test   eax,eax
10046dc4:	je     0x10046dd0
10046dc6:	push   DWORD PTR [esp+0x8]
10046dca:	call   eax
10046dcc:	mov    DWORD PTR [esp+0x8],eax
10046dd0:	mov    eax,DWORD PTR [esp+0x8]
10046dd4:	pop    esi
10046dd5:	ret    
10046dd6:	call   DWORD PTR ds:0x100671bc
10046ddc:	ret    0x4
10046ddf:	push   esi
10046de0:	push   DWORD PTR ds:0x100801a4
10046de6:	call   DWORD PTR ds:0x100671b8
10046dec:	mov    esi,eax
10046dee:	test   esi,esi
10046df0:	jne    0x10046e0d
10046df2:	push   DWORD PTR ds:0x10081b0c
10046df8:	call   0x10046d68
10046dfd:	pop    ecx
10046dfe:	mov    esi,eax
10046e00:	push   esi
10046e01:	push   DWORD PTR ds:0x100801a4
10046e07:	call   DWORD PTR ds:0x100671c0
10046e0d:	mov    eax,esi
10046e0f:	pop    esi
10046e10:	ret    
10046e11:	mov    eax,ds:0x100801a0
10046e16:	cmp    eax,0xffffffff
10046e19:	je     0x10046e31
10046e1b:	push   eax
10046e1c:	push   DWORD PTR ds:0x10081b14
10046e22:	call   0x10046d68
10046e27:	pop    ecx
10046e28:	call   eax
10046e2a:	or     DWORD PTR ds:0x100801a0,0xffffffff
10046e31:	mov    eax,ds:0x100801a4
10046e36:	cmp    eax,0xffffffff
10046e39:	je     0x10046e49
10046e3b:	push   eax
10046e3c:	call   DWORD PTR ds:0x100671c4
10046e42:	or     DWORD PTR ds:0x100801a4,0xffffffff
10046e49:	jmp    0x10047ce1
10046e4e:	push   0xc
10046e50:	push   0x10075da8
10046e55:	call   0x1004771c
10046e5a:	push   0x10067604
10046e5f:	call   DWORD PTR ds:0x100671a0
10046e65:	mov    DWORD PTR [ebp-0x1c],eax
10046e68:	mov    esi,DWORD PTR [ebp+0x8]
10046e6b:	mov    DWORD PTR [esi+0x5c],0x10080a10
10046e72:	xor    edi,edi
10046e74:	inc    edi
10046e75:	mov    DWORD PTR [esi+0x14],edi
10046e78:	test   eax,eax
10046e7a:	je     0x10046eab
10046e7c:	call   0x10046c85
10046e81:	test   eax,eax
10046e83:	je     0x10046eab
10046e85:	push   0x100675f4
10046e8a:	push   DWORD PTR [ebp-0x1c]
10046e8d:	mov    ebx,DWORD PTR ds:0x100670e4
10046e93:	call   ebx
10046e95:	mov    DWORD PTR [esi+0x1f8],eax
10046e9b:	push   0x10067614
10046ea0:	push   DWORD PTR [ebp-0x1c]
10046ea3:	call   ebx
10046ea5:	mov    DWORD PTR [esi+0x1fc],eax
10046eab:	mov    DWORD PTR [esi+0x70],edi
10046eae:	mov    BYTE PTR [esi+0xc8],0x43
10046eb5:	mov    BYTE PTR [esi+0x14b],0x43
10046ebc:	mov    eax,0x100803a0
10046ec1:	mov    DWORD PTR [esi+0x68],eax
10046ec4:	push   eax
10046ec5:	call   DWORD PTR ds:0x100670b0
10046ecb:	push   0xc
10046ecd:	call   0x10047e0e
10046ed2:	pop    ecx
10046ed3:	and    DWORD PTR [ebp-0x4],0x0
10046ed7:	mov    eax,DWORD PTR [ebp+0xc]
10046eda:	mov    DWORD PTR [esi+0x6c],eax
10046edd:	test   eax,eax
10046edf:	jne    0x10046ee9
10046ee1:	mov    eax,ds:0x100809a8
10046ee6:	mov    DWORD PTR [esi+0x6c],eax
10046ee9:	push   DWORD PTR [esi+0x6c]
10046eec:	call   0x1004aa16
10046ef1:	pop    ecx
10046ef2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046ef9:	call   0x10046f04
10046efe:	call   0x10047761
10046f03:	ret    
10046f04:	push   0xc
10046f06:	call   0x10047d36
10046f0b:	pop    ecx
10046f0c:	ret    
10046f0d:	push   esi
10046f0e:	push   edi
10046f0f:	call   DWORD PTR ds:0x100670cc
10046f15:	push   DWORD PTR ds:0x100801a0
10046f1b:	mov    edi,eax
10046f1d:	call   0x10046ddf
10046f22:	call   eax
10046f24:	mov    esi,eax
10046f26:	test   esi,esi
10046f28:	jne    0x10046f78
10046f2a:	push   0x214
10046f2f:	push   0x1
10046f31:	call   0x100472ea
10046f36:	mov    esi,eax
10046f38:	test   esi,esi
10046f3a:	pop    ecx
10046f3b:	pop    ecx
10046f3c:	je     0x10046f78
10046f3e:	push   esi
10046f3f:	push   DWORD PTR ds:0x100801a0
10046f45:	push   DWORD PTR ds:0x10081b10
10046f4b:	call   0x10046d68
10046f50:	pop    ecx
10046f51:	call   eax
10046f53:	test   eax,eax
10046f55:	je     0x10046f6f
10046f57:	push   0x0
10046f59:	push   esi
10046f5a:	call   0x10046e4e
10046f5f:	pop    ecx
10046f60:	pop    ecx
10046f61:	call   DWORD PTR ds:0x1006715c
10046f67:	or     DWORD PTR [esi+0x4],0xffffffff
10046f6b:	mov    DWORD PTR [esi],eax
10046f6d:	jmp    0x10046f78
10046f6f:	push   esi
10046f70:	call   0x100437dc
10046f75:	pop    ecx
10046f76:	xor    esi,esi
10046f78:	push   edi
10046f79:	call   DWORD PTR ds:0x10067150
10046f7f:	pop    edi
10046f80:	mov    eax,esi
10046f82:	pop    esi
10046f83:	ret    
10046f84:	push   esi
10046f85:	call   0x10046f0d
10046f8a:	mov    esi,eax
10046f8c:	test   esi,esi
10046f8e:	jne    0x10046f98
10046f90:	push   0x10
10046f92:	call   0x10047420
10046f97:	pop    ecx
10046f98:	mov    eax,esi
10046f9a:	pop    esi
10046f9b:	ret    
10046f9c:	push   0x8
10046f9e:	push   0x10075dc8
10046fa3:	call   0x1004771c
10046fa8:	mov    esi,DWORD PTR [ebp+0x8]
10046fab:	test   esi,esi
10046fad:	je     0x1004709d
10046fb3:	mov    eax,DWORD PTR [esi+0x24]
10046fb6:	test   eax,eax
10046fb8:	je     0x10046fc1
10046fba:	push   eax
10046fbb:	call   0x100437dc
10046fc0:	pop    ecx
10046fc1:	mov    eax,DWORD PTR [esi+0x2c]
10046fc4:	test   eax,eax
10046fc6:	je     0x10046fcf
10046fc8:	push   eax
10046fc9:	call   0x100437dc
10046fce:	pop    ecx
10046fcf:	mov    eax,DWORD PTR [esi+0x34]
10046fd2:	test   eax,eax
10046fd4:	je     0x10046fdd
10046fd6:	push   eax
10046fd7:	call   0x100437dc
10046fdc:	pop    ecx
10046fdd:	mov    eax,DWORD PTR [esi+0x3c]
10046fe0:	test   eax,eax
10046fe2:	je     0x10046feb
10046fe4:	push   eax
10046fe5:	call   0x100437dc
10046fea:	pop    ecx
10046feb:	mov    eax,DWORD PTR [esi+0x44]
10046fee:	test   eax,eax
10046ff0:	je     0x10046ff9
10046ff2:	push   eax
10046ff3:	call   0x100437dc
10046ff8:	pop    ecx
10046ff9:	mov    eax,DWORD PTR [esi+0x48]
10046ffc:	test   eax,eax
10046ffe:	je     0x10047007
10047000:	push   eax
10047001:	call   0x100437dc
10047006:	pop    ecx
10047007:	mov    eax,DWORD PTR [esi+0x5c]
1004700a:	cmp    eax,0x10080a10
1004700f:	je     0x10047018
10047011:	push   eax
10047012:	call   0x100437dc
10047017:	pop    ecx
10047018:	push   0xd
1004701a:	call   0x10047e0e
1004701f:	pop    ecx
10047020:	and    DWORD PTR [ebp-0x4],0x0
10047024:	mov    edi,DWORD PTR [esi+0x68]
10047027:	test   edi,edi
10047029:	je     0x10047045
1004702b:	push   edi
1004702c:	call   DWORD PTR ds:0x100670bc
10047032:	test   eax,eax
10047034:	jne    0x10047045
10047036:	cmp    edi,0x100803a0
1004703c:	je     0x10047045
1004703e:	push   edi
1004703f:	call   0x100437dc
10047044:	pop    ecx
10047045:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004704c:	call   0x100470a8
10047051:	push   0xc
10047053:	call   0x10047e0e
10047058:	pop    ecx
10047059:	mov    DWORD PTR [ebp-0x4],0x1
10047060:	mov    edi,DWORD PTR [esi+0x6c]
10047063:	test   edi,edi
10047065:	je     0x1004708a
10047067:	push   edi
10047068:	call   0x1004aa9c
1004706d:	pop    ecx
1004706e:	cmp    edi,DWORD PTR ds:0x100809a8
10047074:	je     0x1004708a
10047076:	cmp    edi,0x100808d0
1004707c:	je     0x1004708a
1004707e:	cmp    DWORD PTR [edi],0x0
10047081:	jne    0x1004708a
10047083:	push   edi
10047084:	call   0x1004a8d6
10047089:	pop    ecx
1004708a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047091:	call   0x100470b4
10047096:	push   esi
10047097:	call   0x100437dc
1004709c:	pop    ecx
1004709d:	call   0x10047761
100470a2:	ret    0x4
100470a5:	mov    esi,DWORD PTR [ebp+0x8]
100470a8:	push   0xd
100470aa:	call   0x10047d36
100470af:	pop    ecx
100470b0:	ret    
100470b1:	mov    esi,DWORD PTR [ebp+0x8]
100470b4:	push   0xc
100470b6:	call   0x10047d36
100470bb:	pop    ecx
100470bc:	ret    
100470bd:	cmp    DWORD PTR ds:0x100801a0,0xffffffff
100470c4:	je     0x10047112
100470c6:	push   edi
100470c7:	mov    edi,DWORD PTR [esp+0x8]
100470cb:	test   edi,edi
100470cd:	jne    0x100470f5
100470cf:	push   esi
100470d0:	push   DWORD PTR ds:0x100801a4
100470d6:	mov    esi,DWORD PTR ds:0x100671b8
100470dc:	call   esi
100470de:	test   eax,eax
100470e0:	je     0x100470f4
100470e2:	push   DWORD PTR ds:0x100801a0
100470e8:	push   DWORD PTR ds:0x100801a4
100470ee:	call   esi
100470f0:	call   eax
100470f2:	mov    edi,eax
100470f4:	pop    esi
100470f5:	push   0x0
100470f7:	push   DWORD PTR ds:0x100801a0
100470fd:	push   DWORD PTR ds:0x10081b10
10047103:	call   0x10046d68
10047108:	pop    ecx
10047109:	call   eax
1004710b:	push   edi
1004710c:	call   0x10046f9c
10047111:	pop    edi
10047112:	mov    eax,ds:0x100801a4
10047117:	cmp    eax,0xffffffff
1004711a:	je     0x10047125
1004711c:	push   0x0
1004711e:	push   eax
1004711f:	call   DWORD PTR ds:0x100671c0
10047125:	ret    
10047126:	push   edi
10047127:	push   0x10067604
1004712c:	call   DWORD PTR ds:0x100671a0
10047132:	mov    edi,eax
10047134:	test   edi,edi
10047136:	jne    0x10047141
10047138:	call   0x10046e11
1004713d:	xor    eax,eax
1004713f:	pop    edi
10047140:	ret    
10047141:	push   esi
10047142:	mov    esi,DWORD PTR ds:0x100670e4
10047148:	push   0x10067644
1004714d:	push   edi
1004714e:	call   esi
10047150:	push   0x10067638
10047155:	push   edi
10047156:	mov    ds:0x10081b08,eax
1004715b:	call   esi
1004715d:	push   0x1006762c
10047162:	push   edi
10047163:	mov    ds:0x10081b0c,eax
10047168:	call   esi
1004716a:	push   0x10067624
1004716f:	push   edi
10047170:	mov    ds:0x10081b10,eax
10047175:	call   esi
10047177:	cmp    DWORD PTR ds:0x10081b08,0x0
1004717e:	mov    esi,DWORD PTR ds:0x100671c0
10047184:	mov    ds:0x10081b14,eax
10047189:	je     0x100471a1
1004718b:	cmp    DWORD PTR ds:0x10081b0c,0x0
10047192:	je     0x100471a1
10047194:	cmp    DWORD PTR ds:0x10081b10,0x0
1004719b:	je     0x100471a1
1004719d:	test   eax,eax
1004719f:	jne    0x100471c5
100471a1:	mov    eax,ds:0x100671b8
100471a6:	mov    ds:0x10081b0c,eax
100471ab:	mov    eax,ds:0x100671c4
100471b0:	mov    DWORD PTR ds:0x10081b08,0x10046dd6
100471ba:	mov    DWORD PTR ds:0x10081b10,esi
100471c0:	mov    ds:0x10081b14,eax
100471c5:	call   DWORD PTR ds:0x100671bc
100471cb:	cmp    eax,0xffffffff
100471ce:	mov    ds:0x100801a4,eax
100471d3:	je     0x100472a5
100471d9:	push   DWORD PTR ds:0x10081b0c
100471df:	push   eax
100471e0:	call   esi
100471e2:	test   eax,eax
100471e4:	je     0x100472a5
100471ea:	call   0x100476d0
100471ef:	push   DWORD PTR ds:0x10081b08
100471f5:	call   0x10046cf1
100471fa:	push   DWORD PTR ds:0x10081b0c
10047200:	mov    ds:0x10081b08,eax
10047205:	call   0x10046cf1
1004720a:	push   DWORD PTR ds:0x10081b10
10047210:	mov    ds:0x10081b0c,eax
10047215:	call   0x10046cf1
1004721a:	push   DWORD PTR ds:0x10081b14
10047220:	mov    ds:0x10081b10,eax
10047225:	call   0x10046cf1
1004722a:	add    esp,0x10
1004722d:	mov    ds:0x10081b14,eax
10047232:	call   0x10047c98
10047237:	test   eax,eax
10047239:	je     0x100472a0
1004723b:	push   0x10046f9c
10047240:	push   DWORD PTR ds:0x10081b08
10047246:	call   0x10046d68
1004724b:	pop    ecx
1004724c:	call   eax
1004724e:	cmp    eax,0xffffffff
10047251:	mov    ds:0x100801a0,eax
10047256:	je     0x100472a0
10047258:	push   0x214
1004725d:	push   0x1
1004725f:	call   0x100472ea
10047264:	mov    esi,eax
10047266:	test   esi,esi
10047268:	pop    ecx
10047269:	pop    ecx
1004726a:	je     0x100472a0
1004726c:	push   esi
1004726d:	push   DWORD PTR ds:0x100801a0
10047273:	push   DWORD PTR ds:0x10081b10
10047279:	call   0x10046d68
1004727e:	pop    ecx
1004727f:	call   eax
10047281:	test   eax,eax
10047283:	je     0x100472a0
10047285:	push   0x0
10047287:	push   esi
10047288:	call   0x10046e4e
1004728d:	pop    ecx
1004728e:	pop    ecx
1004728f:	call   DWORD PTR ds:0x1006715c
10047295:	or     DWORD PTR [esi+0x4],0xffffffff
10047299:	mov    DWORD PTR [esi],eax
1004729b:	xor    eax,eax
1004729d:	inc    eax
1004729e:	jmp    0x100472a7
100472a0:	call   0x10046e11
100472a5:	xor    eax,eax
100472a7:	pop    esi
100472a8:	pop    edi
100472a9:	ret    
100472aa:	push   esi
100472ab:	push   edi
100472ac:	xor    esi,esi
100472ae:	push   DWORD PTR [esp+0xc]
100472b2:	call   0x10045143
100472b7:	mov    edi,eax
100472b9:	test   edi,edi
100472bb:	pop    ecx
100472bc:	jne    0x100472e5
100472be:	cmp    DWORD PTR ds:0x10081b18,eax
100472c4:	jbe    0x100472e5
100472c6:	push   esi
100472c7:	call   DWORD PTR ds:0x10067144
100472cd:	lea    eax,[esi+0x3e8]
100472d3:	cmp    eax,DWORD PTR ds:0x10081b18
100472d9:	jbe    0x100472de
100472db:	or     eax,0xffffffff
100472de:	cmp    eax,0xffffffff
100472e1:	mov    esi,eax
100472e3:	jne    0x100472ae
100472e5:	mov    eax,edi
100472e7:	pop    edi
100472e8:	pop    esi
100472e9:	ret    
100472ea:	push   esi
100472eb:	push   edi
100472ec:	xor    esi,esi
100472ee:	push   0x0
100472f0:	push   DWORD PTR [esp+0x14]
100472f4:	push   DWORD PTR [esp+0x14]
100472f8:	call   0x10043669
100472fd:	mov    edi,eax
100472ff:	add    esp,0xc
10047302:	test   edi,edi
10047304:	jne    0x1004732d
10047306:	cmp    DWORD PTR ds:0x10081b18,eax
1004730c:	jbe    0x1004732d
1004730e:	push   esi
1004730f:	call   DWORD PTR ds:0x10067144
10047315:	lea    eax,[esi+0x3e8]
1004731b:	cmp    eax,DWORD PTR ds:0x10081b18
10047321:	jbe    0x10047326
10047323:	or     eax,0xffffffff
10047326:	cmp    eax,0xffffffff
10047329:	mov    esi,eax
1004732b:	jne    0x100472ee
1004732d:	mov    eax,edi
1004732f:	pop    edi
10047330:	pop    esi
10047331:	ret    
10047332:	push   esi
10047333:	push   edi
10047334:	xor    esi,esi
10047336:	push   DWORD PTR [esp+0x10]
1004733a:	push   DWORD PTR [esp+0x10]
1004733e:	call   0x1004629e
10047343:	mov    edi,eax
10047345:	test   edi,edi
10047347:	pop    ecx
10047348:	pop    ecx
10047349:	jne    0x10047378
1004734b:	cmp    DWORD PTR [esp+0x10],eax
1004734f:	je     0x10047378
10047351:	cmp    DWORD PTR ds:0x10081b18,eax
10047357:	jbe    0x10047378
10047359:	push   esi
1004735a:	call   DWORD PTR ds:0x10067144
10047360:	lea    eax,[esi+0x3e8]
10047366:	cmp    eax,DWORD PTR ds:0x10081b18
1004736c:	jbe    0x10047371
1004736e:	or     eax,0xffffffff
10047371:	cmp    eax,0xffffffff
10047374:	mov    esi,eax
10047376:	jne    0x10047336
10047378:	mov    eax,edi
1004737a:	pop    edi
1004737b:	pop    esi
1004737c:	ret    
1004737d:	push   0x10
1004737f:	push   0x10075df0
10047384:	call   0x1004771c
10047389:	xor    eax,eax
1004738b:	mov    ebx,DWORD PTR [ebp+0x8]
1004738e:	xor    edi,edi
10047390:	cmp    ebx,edi
10047392:	setne  al
10047395:	cmp    eax,edi
10047397:	jne    0x100473b6
10047399:	call   0x10046c41
1004739e:	mov    DWORD PTR [eax],0x16
100473a4:	push   edi
100473a5:	push   edi
100473a6:	push   edi
100473a7:	push   edi
100473a8:	push   edi
100473a9:	call   0x100435e1
100473ae:	add    esp,0x14
100473b1:	or     eax,0xffffffff
100473b4:	jmp    0x10047409
100473b6:	cmp    DWORD PTR ds:0x10084600,0x3
100473bd:	jne    0x100473f7
100473bf:	push   0x4
100473c1:	call   0x10047e0e
100473c6:	pop    ecx
100473c7:	mov    DWORD PTR [ebp-0x4],edi
100473ca:	push   ebx
100473cb:	call   0x10047fb0
100473d0:	pop    ecx
100473d1:	mov    DWORD PTR [ebp-0x20],eax
100473d4:	cmp    eax,edi
100473d6:	je     0x100473e3
100473d8:	mov    esi,DWORD PTR [ebx-0x4]
100473db:	sub    esi,0x9
100473de:	mov    DWORD PTR [ebp-0x1c],esi
100473e1:	jmp    0x100473e6
100473e3:	mov    esi,DWORD PTR [ebp-0x1c]
100473e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100473ed:	call   0x10047417
100473f2:	cmp    DWORD PTR [ebp-0x20],edi
100473f5:	jne    0x10047407
100473f7:	push   ebx
100473f8:	push   edi
100473f9:	push   DWORD PTR ds:0x10081ff4
100473ff:	call   DWORD PTR ds:0x100671c8
10047405:	mov    esi,eax
10047407:	mov    eax,esi
10047409:	call   0x10047761
1004740e:	ret    
1004740f:	xor    edi,edi
10047411:	mov    ebx,DWORD PTR [ebp+0x8]
10047414:	mov    esi,DWORD PTR [ebp-0x1c]
10047417:	push   0x4
10047419:	call   0x10047d36
1004741e:	pop    ecx
1004741f:	ret    
10047420:	call   0x1004a02c
10047425:	push   DWORD PTR [esp+0x4]
10047429:	call   0x10049e8c
1004742e:	push   DWORD PTR ds:0x100801a8
10047434:	call   0x10046d68
10047439:	push   0xff
1004743e:	call   eax
10047440:	add    esp,0xc
10047443:	ret    
10047444:	push   0x10067660
10047449:	call   DWORD PTR ds:0x100671a0
1004744f:	test   eax,eax
10047451:	je     0x10047469
10047453:	push   0x10067650
10047458:	push   eax
10047459:	call   DWORD PTR ds:0x100670e4
1004745f:	test   eax,eax
10047461:	je     0x10047469
10047463:	push   DWORD PTR [esp+0x4]
10047467:	call   eax
10047469:	ret    
1004746a:	push   DWORD PTR [esp+0x4]
1004746e:	call   0x10047444
10047473:	pop    ecx
10047474:	push   DWORD PTR [esp+0x4]
10047478:	call   DWORD PTR ds:0x100671cc
1004747e:	int3   
1004747f:	push   0x8
10047481:	call   0x10047e0e
10047486:	pop    ecx
10047487:	ret    
10047488:	push   0x8
1004748a:	call   0x10047d36
1004748f:	pop    ecx
10047490:	ret    
10047491:	push   esi
10047492:	mov    esi,eax
10047494:	jmp    0x100474a1
10047496:	mov    eax,DWORD PTR [esi]
10047498:	test   eax,eax
1004749a:	je     0x1004749e
1004749c:	call   eax
1004749e:	add    esi,0x4
100474a1:	cmp    esi,DWORD PTR [esp+0x8]
100474a5:	jb     0x10047496
100474a7:	pop    esi
100474a8:	ret    
100474a9:	push   esi
100474aa:	mov    esi,DWORD PTR [esp+0x8]
100474ae:	xor    eax,eax
100474b0:	jmp    0x100474c1
100474b2:	test   eax,eax
100474b4:	jne    0x100474c7
100474b6:	mov    ecx,DWORD PTR [esi]
100474b8:	test   ecx,ecx
100474ba:	je     0x100474be
100474bc:	call   ecx
100474be:	add    esi,0x4
100474c1:	cmp    esi,DWORD PTR [esp+0xc]
100474c5:	jb     0x100474b2
100474c7:	pop    esi
100474c8:	ret    
100474c9:	mov    ecx,DWORD PTR [esp+0x4]
100474cd:	push   esi
100474ce:	xor    esi,esi
100474d0:	cmp    ecx,esi
100474d2:	jne    0x100474f1
100474d4:	call   0x10046c41
100474d9:	push   esi
100474da:	push   esi
100474db:	push   esi
100474dc:	push   esi
100474dd:	push   esi
100474de:	mov    DWORD PTR [eax],0x16
100474e4:	call   0x100435e1
100474e9:	add    esp,0x14
100474ec:	push   0x16
100474ee:	pop    eax
100474ef:	pop    esi
100474f0:	ret    
100474f1:	mov    eax,ds:0x10081b20
100474f6:	cmp    eax,esi
100474f8:	je     0x100474d4
100474fa:	mov    DWORD PTR [ecx],eax
100474fc:	xor    eax,eax
100474fe:	pop    esi
100474ff:	ret    
10047500:	mov    eax,DWORD PTR [esp+0x4]
10047504:	push   esi
10047505:	xor    esi,esi
10047507:	cmp    eax,esi
10047509:	jne    0x10047528
1004750b:	call   0x10046c41
10047510:	push   esi
10047511:	push   esi
10047512:	push   esi
10047513:	push   esi
10047514:	push   esi
10047515:	mov    DWORD PTR [eax],0x16
1004751b:	call   0x100435e1
10047520:	add    esp,0x14
10047523:	push   0x16
10047525:	pop    eax
10047526:	pop    esi
10047527:	ret    
10047528:	cmp    DWORD PTR ds:0x10081b20,esi
1004752e:	je     0x1004750b
10047530:	mov    ecx,DWORD PTR ds:0x10081b2c
10047536:	mov    DWORD PTR [eax],ecx
10047538:	xor    eax,eax
1004753a:	pop    esi
1004753b:	ret    
1004753c:	cmp    DWORD PTR ds:0x1006dac8,0x0
10047543:	je     0x1004755f
10047545:	push   0x1006dac8
1004754a:	call   0x1004c480
1004754f:	test   eax,eax
10047551:	pop    ecx
10047552:	je     0x1004755f
10047554:	push   DWORD PTR [esp+0x4]
10047558:	call   DWORD PTR ds:0x1006dac8
1004755e:	pop    ecx
1004755f:	call   0x1004c3df
10047564:	push   0x10067560
10047569:	push   0x10067548
1004756e:	call   0x100474a9
10047573:	test   eax,eax
10047575:	pop    ecx
10047576:	pop    ecx
10047577:	jne    0x100475cd
10047579:	push   esi
1004757a:	push   edi
1004757b:	push   0x1004c1ae
10047580:	call   0x10043166
10047585:	mov    esi,0x10067458
1004758a:	mov    eax,esi
1004758c:	mov    edi,0x10067544
10047591:	cmp    eax,edi
10047593:	pop    ecx
10047594:	jae    0x100475a5
10047596:	mov    eax,DWORD PTR [esi]
10047598:	test   eax,eax
1004759a:	je     0x1004759e
1004759c:	call   eax
1004759e:	add    esi,0x4
100475a1:	cmp    esi,edi
100475a3:	jb     0x10047596
100475a5:	cmp    DWORD PTR ds:0x10084618,0x0
100475ac:	pop    edi
100475ad:	pop    esi
100475ae:	je     0x100475cb
100475b0:	push   0x10084618
100475b5:	call   0x1004c480
100475ba:	test   eax,eax
100475bc:	pop    ecx
100475bd:	je     0x100475cb
100475bf:	push   0x0
100475c1:	push   0x2
100475c3:	push   0x0
100475c5:	call   DWORD PTR ds:0x10084618
100475cb:	xor    eax,eax
100475cd:	ret    
100475ce:	push   0x10
100475d0:	push   0x10075e10
100475d5:	call   0x1004771c
100475da:	push   0x8
100475dc:	call   0x10047e0e
100475e1:	pop    ecx
100475e2:	xor    edi,edi
100475e4:	mov    DWORD PTR [ebp-0x4],edi
100475e7:	xor    ebx,ebx
100475e9:	inc    ebx
100475ea:	cmp    DWORD PTR ds:0x10081b60,ebx
100475f0:	je     0x10047670
100475f2:	mov    DWORD PTR ds:0x10081b5c,ebx
100475f8:	mov    al,BYTE PTR [ebp+0x10]
100475fb:	mov    ds:0x10081b58,al
10047600:	cmp    DWORD PTR [ebp+0xc],edi
10047603:	jne    0x10047660
10047605:	push   DWORD PTR ds:0x10084610
1004760b:	call   0x10046d68
10047610:	mov    DWORD PTR [ebp-0x1c],eax
10047613:	push   DWORD PTR ds:0x1008460c
10047619:	call   0x10046d68
1004761e:	pop    ecx
1004761f:	pop    ecx
10047620:	mov    esi,eax
10047622:	mov    DWORD PTR [ebp-0x20],esi
10047625:	cmp    DWORD PTR [ebp-0x1c],edi
10047628:	je     0x10047650
1004762a:	sub    esi,0x4
1004762d:	mov    DWORD PTR [ebp-0x20],esi
10047630:	cmp    esi,DWORD PTR [ebp-0x1c]
10047633:	jb     0x10047650
10047635:	cmp    DWORD PTR [esi],0x0
10047638:	je     0x1004762a
1004763a:	mov    edi,DWORD PTR [esi]
1004763c:	call   0x10046d5f
10047641:	cmp    edi,eax
10047643:	je     0x1004762a
10047645:	push   edi
10047646:	call   0x10046d68
1004764b:	pop    ecx
1004764c:	call   eax
1004764e:	jmp    0x1004762a
10047650:	push   0x10067570
10047655:	mov    eax,0x10067564
1004765a:	call   0x10047491
1004765f:	pop    ecx
10047660:	push   0x10067578
10047665:	mov    eax,0x10067574
1004766a:	call   0x10047491
1004766f:	pop    ecx
10047670:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047677:	call   0x1004769b
1004767c:	cmp    DWORD PTR [ebp+0x10],0x0
10047680:	jne    0x100476aa
10047682:	mov    DWORD PTR ds:0x10081b60,ebx
10047688:	push   0x8
1004768a:	call   0x10047d36
1004768f:	pop    ecx
10047690:	push   DWORD PTR [ebp+0x8]
10047693:	call   0x1004746a
10047698:	xor    ebx,ebx
1004769a:	inc    ebx
1004769b:	cmp    DWORD PTR [ebp+0x10],0x0
1004769f:	je     0x100476a9
100476a1:	push   0x8
100476a3:	call   0x10047d36
100476a8:	pop    ecx
100476a9:	ret    
100476aa:	call   0x10047761
100476af:	ret    
100476b0:	push   0x0
100476b2:	push   0x1
100476b4:	push   DWORD PTR [esp+0xc]
100476b8:	call   0x100475ce
100476bd:	add    esp,0xc
100476c0:	ret    
100476c1:	push   0x1
100476c3:	push   0x0
100476c5:	push   0x0
100476c7:	call   0x100475ce
100476cc:	add    esp,0xc
100476cf:	ret    
100476d0:	push   esi
100476d1:	call   0x10046d5f
100476d6:	mov    esi,eax
100476d8:	push   esi
100476d9:	call   0x10047916
100476de:	push   esi
100476df:	call   0x1004c74f
100476e4:	push   esi
100476e5:	call   0x100434db
100476ea:	push   esi
100476eb:	call   0x1004af3c
100476f0:	push   esi
100476f1:	call   0x1004c745
100476f6:	push   esi
100476f7:	call   0x1004c53b
100476fc:	push   esi
100476fd:	call   0x100598dd
10047702:	push   esi
10047703:	call   0x10047a0f
10047708:	push   0x100476b0
1004770d:	call   0x10046cf1
10047712:	add    esp,0x24
10047715:	mov    ds:0x100801a8,eax
1004771a:	pop    esi
1004771b:	ret    
1004771c:	push   0x10047780
10047721:	push   DWORD PTR fs:0x0
10047728:	mov    eax,DWORD PTR [esp+0x10]
1004772c:	mov    DWORD PTR [esp+0x10],ebp
10047730:	lea    ebp,[esp+0x10]
10047734:	sub    esp,eax
10047736:	push   ebx
10047737:	push   esi
10047738:	push   edi
10047739:	mov    eax,ds:0x100801ac
1004773e:	xor    DWORD PTR [ebp-0x4],eax
10047741:	xor    eax,ebp
10047743:	push   eax
10047744:	mov    DWORD PTR [ebp-0x18],esp
10047747:	push   DWORD PTR [ebp-0x8]
1004774a:	mov    eax,DWORD PTR [ebp-0x4]
1004774d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047754:	mov    DWORD PTR [ebp-0x8],eax
10047757:	lea    eax,[ebp-0x10]
1004775a:	mov    fs:0x0,eax
10047760:	ret    
10047761:	mov    ecx,DWORD PTR [ebp-0x10]
10047764:	mov    DWORD PTR fs:0x0,ecx
1004776b:	pop    ecx
1004776c:	pop    edi
1004776d:	pop    edi
1004776e:	pop    esi
1004776f:	pop    ebx
10047770:	mov    esp,ebp
10047772:	pop    ebp
10047773:	push   ecx
10047774:	ret    
10047775:	int3   
10047776:	int3   
10047777:	int3   
10047778:	int3   
10047779:	int3   
1004777a:	int3   
1004777b:	int3   
1004777c:	int3   
1004777d:	int3   
1004777e:	int3   
1004777f:	int3   
10047780:	sub    esp,0x14
10047783:	push   ebx
10047784:	mov    ebx,DWORD PTR [esp+0x20]
10047788:	push   ebp
10047789:	push   esi
1004778a:	mov    esi,DWORD PTR [ebx+0x8]
1004778d:	xor    esi,DWORD PTR ds:0x100801ac
10047793:	push   edi
10047794:	mov    eax,DWORD PTR [esi]
10047796:	cmp    eax,0xfffffffe
10047799:	mov    BYTE PTR [esp+0x13],0x0
1004779e:	mov    DWORD PTR [esp+0x18],0x1
100477a6:	lea    edi,[ebx+0x10]
100477a9:	je     0x100477b8
100477ab:	mov    ecx,DWORD PTR [esi+0x4]
100477ae:	add    ecx,edi
100477b0:	xor    ecx,DWORD PTR [eax+edi*1]
100477b3:	call   0x10043615
100477b8:	mov    ecx,DWORD PTR [esi+0xc]
100477bb:	mov    eax,DWORD PTR [esi+0x8]
100477be:	add    ecx,edi
100477c0:	xor    ecx,DWORD PTR [eax+edi*1]
100477c3:	call   0x10043615
100477c8:	mov    eax,DWORD PTR [esp+0x28]
100477cc:	test   BYTE PTR [eax+0x4],0x66
100477d0:	jne    0x100478f5
100477d6:	mov    ebp,DWORD PTR [ebx+0xc]
100477d9:	cmp    ebp,0xfffffffe
100477dc:	mov    ecx,DWORD PTR [esp+0x30]
100477e0:	lea    edx,[esp+0x1c]
100477e4:	mov    DWORD PTR [esp+0x1c],eax
100477e8:	mov    DWORD PTR [esp+0x20],ecx
100477ec:	mov    DWORD PTR [ebx-0x4],edx
100477ef:	je     0x1004784f
100477f1:	lea    eax,[ebp+ebp*2+0x0]
100477f5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
100477f9:	test   ecx,ecx
100477fb:	lea    ebx,[esi+eax*4+0x10]
100477ff:	mov    eax,DWORD PTR [ebx]
10047801:	mov    DWORD PTR [esp+0x14],eax
10047805:	je     0x1004781d
10047807:	mov    edx,edi
10047809:	call   0x1004c922
1004780e:	test   eax,eax
10047810:	mov    BYTE PTR [esp+0x13],0x1
10047815:	jl     0x1004785b
10047817:	jg     0x10047865
10047819:	mov    eax,DWORD PTR [esp+0x14]
1004781d:	cmp    eax,0xfffffffe
10047820:	mov    ebp,eax
10047822:	jne    0x100477f1
10047824:	cmp    BYTE PTR [esp+0x13],0x0
10047829:	je     0x1004784f
1004782b:	mov    eax,DWORD PTR [esi]
1004782d:	cmp    eax,0xfffffffe
10047830:	je     0x1004783f
10047832:	mov    ecx,DWORD PTR [esi+0x4]
10047835:	add    ecx,edi
10047837:	xor    ecx,DWORD PTR [eax+edi*1]
1004783a:	call   0x10043615
1004783f:	mov    ecx,DWORD PTR [esi+0xc]
10047842:	mov    eax,DWORD PTR [esi+0x8]
10047845:	add    ecx,edi
10047847:	xor    ecx,DWORD PTR [eax+edi*1]
1004784a:	call   0x10043615
1004784f:	mov    eax,DWORD PTR [esp+0x18]
10047853:	pop    edi
10047854:	pop    esi
10047855:	pop    ebp
10047856:	pop    ebx
10047857:	add    esp,0x14
1004785a:	ret    
1004785b:	mov    DWORD PTR [esp+0x18],0x0
10047863:	jmp    0x1004782b
10047865:	mov    ecx,DWORD PTR [esp+0x28]
10047869:	cmp    DWORD PTR [ecx],0xe06d7363
1004786f:	jne    0x1004789b
10047871:	cmp    DWORD PTR ds:0x1006daf8,0x0
10047878:	je     0x1004789b
1004787a:	push   0x1006daf8
1004787f:	call   0x1004c480
10047884:	add    esp,0x4
10047887:	test   eax,eax
10047889:	je     0x1004789b
1004788b:	mov    edx,DWORD PTR [esp+0x28]
1004788f:	push   0x1
10047891:	push   edx
10047892:	call   DWORD PTR ds:0x1006daf8
10047898:	add    esp,0x8
1004789b:	mov    ecx,DWORD PTR [esp+0x2c]
1004789f:	call   0x1004c952
100478a4:	mov    eax,DWORD PTR [esp+0x2c]
100478a8:	cmp    DWORD PTR [eax+0xc],ebp
100478ab:	je     0x100478c0
100478ad:	push   0x100801ac
100478b2:	push   edi
100478b3:	mov    edx,ebp
100478b5:	mov    ecx,eax
100478b7:	call   0x1004c96c
100478bc:	mov    eax,DWORD PTR [esp+0x2c]
100478c0:	mov    ecx,DWORD PTR [esp+0x14]
100478c4:	mov    DWORD PTR [eax+0xc],ecx
100478c7:	mov    eax,DWORD PTR [esi]
100478c9:	cmp    eax,0xfffffffe
100478cc:	je     0x100478db
100478ce:	mov    ecx,DWORD PTR [esi+0x4]
100478d1:	add    ecx,edi
100478d3:	xor    ecx,DWORD PTR [eax+edi*1]
100478d6:	call   0x10043615
100478db:	mov    ecx,DWORD PTR [esi+0xc]
100478de:	mov    edx,DWORD PTR [esi+0x8]
100478e1:	add    ecx,edi
100478e3:	xor    ecx,DWORD PTR [edx+edi*1]
100478e6:	call   0x10043615
100478eb:	mov    ecx,DWORD PTR [ebx+0x8]
100478ee:	mov    edx,edi
100478f0:	jmp    0x1004c939
100478f5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
100478f9:	je     0x1004784f
100478ff:	push   0x100801ac
10047904:	push   edi
10047905:	mov    ecx,ebx
10047907:	mov    edx,0xfffffffe
1004790c:	call   0x1004c96c
10047911:	jmp    0x1004782b
10047916:	mov    eax,DWORD PTR [esp+0x4]
1004791a:	mov    ds:0x10081b64,eax
1004791f:	ret    
10047920:	push   DWORD PTR ds:0x10081b64
10047926:	call   0x10046d68
1004792b:	test   eax,eax
1004792d:	pop    ecx
1004792e:	je     0x1004793f
10047930:	push   DWORD PTR [esp+0x4]
10047934:	call   eax
10047936:	test   eax,eax
10047938:	pop    ecx
10047939:	je     0x1004793f
1004793b:	xor    eax,eax
1004793d:	inc    eax
1004793e:	ret    
1004793f:	xor    eax,eax
10047941:	ret    
10047942:	push   ebp
10047943:	mov    ebp,esp
10047945:	sub    esp,0x20
10047948:	mov    eax,DWORD PTR [ebp+0x8]
1004794b:	push   esi
1004794c:	push   edi
1004794d:	push   0x8
1004794f:	pop    ecx
10047950:	mov    esi,0x1006766c
10047955:	lea    edi,[ebp-0x20]
10047958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004795a:	mov    DWORD PTR [ebp-0x8],eax
1004795d:	mov    eax,DWORD PTR [ebp+0xc]
10047960:	test   eax,eax
10047962:	pop    edi
10047963:	mov    DWORD PTR [ebp-0x4],eax
10047966:	pop    esi
10047967:	je     0x10047975
10047969:	test   BYTE PTR [eax],0x8
1004796c:	je     0x10047975
1004796e:	mov    DWORD PTR [ebp-0xc],0x1994000
10047975:	lea    eax,[ebp-0xc]
10047978:	push   eax
10047979:	push   DWORD PTR [ebp-0x10]
1004797c:	push   DWORD PTR [ebp-0x1c]
1004797f:	push   DWORD PTR [ebp-0x20]
10047982:	call   DWORD PTR ds:0x10067110
10047988:	leave  
10047989:	ret    0x8
1004798c:	push   0x8
1004798e:	push   0x10075e30
10047993:	call   0x1004771c
10047998:	call   0x10046f84
1004799d:	mov    eax,DWORD PTR [eax+0x78]
100479a0:	test   eax,eax
100479a2:	je     0x100479ba
100479a4:	and    DWORD PTR [ebp-0x4],0x0
100479a8:	call   eax
100479aa:	jmp    0x100479b3
100479ac:	xor    eax,eax
100479ae:	inc    eax
100479af:	ret    
100479b0:	mov    esp,DWORD PTR [ebp-0x18]
100479b3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100479ba:	call   0x1004ae2b
100479bf:	call   0x10047761
100479c4:	ret    
100479c5:	call   0x10046f84
100479ca:	mov    eax,DWORD PTR [eax+0x7c]
100479cd:	test   eax,eax
100479cf:	je     0x100479d3
100479d1:	call   eax
100479d3:	jmp    0x1004798c
100479d8:	push   0x8
100479da:	push   0x10075e50
100479df:	call   0x1004771c
100479e4:	push   DWORD PTR ds:0x10081b68
100479ea:	call   0x10046d68
100479ef:	pop    ecx
100479f0:	test   eax,eax
100479f2:	je     0x10047a0a
100479f4:	and    DWORD PTR [ebp-0x4],0x0
100479f8:	call   eax
100479fa:	jmp    0x10047a03
100479fc:	xor    eax,eax
100479fe:	inc    eax
100479ff:	ret    
10047a00:	mov    esp,DWORD PTR [ebp-0x18]
10047a03:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047a0a:	jmp    0x1004798c
10047a0f:	push   0x1004798c
10047a14:	call   0x10046cf1
10047a19:	pop    ecx
10047a1a:	mov    ds:0x10081b68,eax
10047a1f:	ret    
10047a20:	mov    ecx,DWORD PTR [esp+0x4]
10047a24:	push   ebx
10047a25:	xor    ebx,ebx
10047a27:	cmp    ecx,ebx
10047a29:	push   esi
10047a2a:	push   edi
10047a2b:	je     0x10047a35
10047a2d:	mov    edi,DWORD PTR [esp+0x14]
10047a31:	cmp    edi,ebx
10047a33:	ja     0x10047a50
10047a35:	call   0x10046c41
10047a3a:	push   0x16
10047a3c:	pop    esi
10047a3d:	mov    DWORD PTR [eax],esi
10047a3f:	push   ebx
10047a40:	push   ebx
10047a41:	push   ebx
10047a42:	push   ebx
10047a43:	push   ebx
10047a44:	call   0x100435e1
10047a49:	add    esp,0x14
10047a4c:	mov    eax,esi
10047a4e:	jmp    0x10047a81
10047a50:	mov    esi,DWORD PTR [esp+0x18]
10047a54:	cmp    esi,ebx
10047a56:	jne    0x10047a5c
10047a58:	mov    BYTE PTR [ecx],bl
10047a5a:	jmp    0x10047a35
10047a5c:	mov    edx,ecx
10047a5e:	mov    al,BYTE PTR [esi]
10047a60:	mov    BYTE PTR [edx],al
10047a62:	inc    edx
10047a63:	inc    esi
10047a64:	cmp    al,bl
10047a66:	je     0x10047a6b
10047a68:	dec    edi
10047a69:	jne    0x10047a5e
10047a6b:	cmp    edi,ebx
10047a6d:	jne    0x10047a7f
10047a6f:	mov    BYTE PTR [ecx],bl
10047a71:	call   0x10046c41
10047a76:	push   0x22
10047a78:	pop    ecx
10047a79:	mov    DWORD PTR [eax],ecx
10047a7b:	mov    esi,ecx
10047a7d:	jmp    0x10047a3f
10047a7f:	xor    eax,eax
10047a81:	pop    edi
10047a82:	pop    esi
10047a83:	pop    ebx
10047a84:	ret    
10047a85:	and    DWORD PTR ds:0x10084604,0x0
10047a8c:	ret    
10047a8d:	push   ebp
10047a8e:	mov    ebp,esp
10047a90:	sub    esp,0x328
10047a96:	mov    ds:0x10081c78,eax
10047a9b:	mov    DWORD PTR ds:0x10081c74,ecx
10047aa1:	mov    DWORD PTR ds:0x10081c70,edx
10047aa7:	mov    DWORD PTR ds:0x10081c6c,ebx
10047aad:	mov    DWORD PTR ds:0x10081c68,esi
10047ab3:	mov    DWORD PTR ds:0x10081c64,edi
10047ab9:	data16 mov WORD PTR ds:0x10081c90,ss
10047ac0:	data16 mov WORD PTR ds:0x10081c84,cs
10047ac7:	data16 mov WORD PTR ds:0x10081c60,ds
10047ace:	data16 mov WORD PTR ds:0x10081c5c,es
10047ad5:	data16 mov WORD PTR ds:0x10081c58,fs
10047adc:	data16 mov WORD PTR ds:0x10081c54,gs
10047ae3:	pushf  
10047ae4:	pop    DWORD PTR ds:0x10081c88
10047aea:	mov    eax,DWORD PTR [ebp+0x0]
10047aed:	mov    ds:0x10081c7c,eax
10047af2:	mov    eax,DWORD PTR [ebp+0x4]
10047af5:	mov    ds:0x10081c80,eax
10047afa:	lea    eax,[ebp+0x8]
10047afd:	mov    ds:0x10081c8c,eax
10047b02:	mov    eax,DWORD PTR [ebp-0x320]
10047b08:	mov    DWORD PTR ds:0x10081bc8,0x10001
10047b12:	mov    eax,ds:0x10081c80
10047b17:	mov    ds:0x10081b7c,eax
10047b1c:	mov    DWORD PTR ds:0x10081b70,0xc0000409
10047b26:	mov    DWORD PTR ds:0x10081b74,0x1
10047b30:	mov    eax,ds:0x100801ac
10047b35:	mov    DWORD PTR [ebp-0x328],eax
10047b3b:	mov    eax,ds:0x100801b0
10047b40:	mov    DWORD PTR [ebp-0x324],eax
10047b46:	call   DWORD PTR ds:0x1006718c
10047b4c:	mov    ds:0x10081bc0,eax
10047b51:	push   0x1
10047b53:	call   0x10047a85
10047b58:	pop    ecx
10047b59:	push   0x0
10047b5b:	call   DWORD PTR ds:0x10067188
10047b61:	push   0x1006768c
10047b66:	call   DWORD PTR ds:0x10067184
10047b6c:	cmp    DWORD PTR ds:0x10081bc0,0x0
10047b73:	jne    0x10047b7d
10047b75:	push   0x1
10047b77:	call   0x10047a85
10047b7c:	pop    ecx
10047b7d:	push   0xc0000409
10047b82:	call   DWORD PTR ds:0x1006712c
10047b88:	push   eax
10047b89:	call   DWORD PTR ds:0x10067180
10047b8f:	leave  
10047b90:	ret    
10047b91:	push   0xc
10047b93:	push   0x10075e70
10047b98:	call   0x1004771c
10047b9d:	push   0xe
10047b9f:	call   0x10047e0e
10047ba4:	pop    ecx
10047ba5:	and    DWORD PTR [ebp-0x4],0x0
10047ba9:	mov    esi,DWORD PTR [ebp+0x8]
10047bac:	mov    ecx,DWORD PTR [esi+0x4]
10047baf:	test   ecx,ecx
10047bb1:	je     0x10047be2
10047bb3:	mov    eax,ds:0x10081e98
10047bb8:	mov    edx,0x10081e94
10047bbd:	mov    DWORD PTR [ebp-0x1c],eax
10047bc0:	test   eax,eax
10047bc2:	je     0x10047bd5
10047bc4:	cmp    DWORD PTR [eax],ecx
10047bc6:	jne    0x10047bf4
10047bc8:	mov    ecx,DWORD PTR [eax+0x4]
10047bcb:	mov    DWORD PTR [edx+0x4],ecx
10047bce:	push   eax
10047bcf:	call   0x100437dc
10047bd4:	pop    ecx
10047bd5:	push   DWORD PTR [esi+0x4]
10047bd8:	call   0x100437dc
10047bdd:	pop    ecx
10047bde:	and    DWORD PTR [esi+0x4],0x0
10047be2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047be9:	call   0x10047bf8
10047bee:	call   0x10047761
10047bf3:	ret    
10047bf4:	mov    edx,eax
10047bf6:	jmp    0x10047bbd
10047bf8:	push   0xe
10047bfa:	call   0x10047d36
10047bff:	pop    ecx
10047c00:	ret    
10047c01:	int3   
10047c02:	int3   
10047c03:	int3   
10047c04:	int3   
10047c05:	int3   
10047c06:	int3   
10047c07:	int3   
10047c08:	int3   
10047c09:	int3   
10047c0a:	int3   
10047c0b:	int3   
10047c0c:	int3   
10047c0d:	int3   
10047c0e:	int3   
10047c0f:	int3   
10047c10:	mov    edx,DWORD PTR [esp+0x4]
10047c14:	mov    ecx,DWORD PTR [esp+0x8]
10047c18:	test   edx,0x3
10047c1e:	jne    0x10047c5c
10047c20:	mov    eax,DWORD PTR [edx]
10047c22:	cmp    al,BYTE PTR [ecx]
10047c24:	jne    0x10047c54
10047c26:	or     al,al
10047c28:	je     0x10047c50
10047c2a:	cmp    ah,BYTE PTR [ecx+0x1]
10047c2d:	jne    0x10047c54
10047c2f:	or     ah,ah
10047c31:	je     0x10047c50
10047c33:	shr    eax,0x10
10047c36:	cmp    al,BYTE PTR [ecx+0x2]
10047c39:	jne    0x10047c54
10047c3b:	or     al,al
10047c3d:	je     0x10047c50
10047c3f:	cmp    ah,BYTE PTR [ecx+0x3]
10047c42:	jne    0x10047c54
10047c44:	add    ecx,0x4
10047c47:	add    edx,0x4
10047c4a:	or     ah,ah
10047c4c:	jne    0x10047c20
10047c4e:	mov    edi,edi
10047c50:	xor    eax,eax
10047c52:	ret    
10047c53:	nop
10047c54:	sbb    eax,eax
10047c56:	shl    eax,1
10047c58:	add    eax,0x1
10047c5b:	ret    
10047c5c:	test   edx,0x1
10047c62:	je     0x10047c7c
10047c64:	mov    al,BYTE PTR [edx]
10047c66:	add    edx,0x1
10047c69:	cmp    al,BYTE PTR [ecx]
10047c6b:	jne    0x10047c54
10047c6d:	add    ecx,0x1
10047c70:	or     al,al
10047c72:	je     0x10047c50
10047c74:	test   edx,0x2
10047c7a:	je     0x10047c20
10047c7c:	mov    ax,WORD PTR [edx]
10047c7f:	add    edx,0x2
10047c82:	cmp    al,BYTE PTR [ecx]
10047c84:	jne    0x10047c54
10047c86:	or     al,al
10047c88:	je     0x10047c50
10047c8a:	cmp    ah,BYTE PTR [ecx+0x1]
10047c8d:	jne    0x10047c54
10047c8f:	or     ah,ah
10047c91:	je     0x10047c50
10047c93:	add    ecx,0x2
10047c96:	jmp    0x10047c20
10047c98:	push   esi
10047c99:	push   edi
10047c9a:	xor    esi,esi
10047c9c:	mov    edi,0x10081ea0
10047ca1:	cmp    DWORD PTR [esi*8+0x100801c4],0x1
10047ca9:	jne    0x10047cc9
10047cab:	lea    eax,[esi*8+0x100801c0]
10047cb2:	mov    DWORD PTR [eax],edi
10047cb4:	push   0xfa0
10047cb9:	push   DWORD PTR [eax]
10047cbb:	add    edi,0x18
10047cbe:	call   0x1004c769
10047cc3:	test   eax,eax
10047cc5:	pop    ecx
10047cc6:	pop    ecx
10047cc7:	je     0x10047cd5
10047cc9:	inc    esi
10047cca:	cmp    esi,0x24
10047ccd:	jl     0x10047ca1
10047ccf:	xor    eax,eax
10047cd1:	inc    eax
10047cd2:	pop    edi
10047cd3:	pop    esi
10047cd4:	ret    
10047cd5:	and    DWORD PTR [esi*8+0x100801c0],0x0
10047cdd:	xor    eax,eax
10047cdf:	jmp    0x10047cd2
10047ce1:	push   ebx
10047ce2:	mov    ebx,DWORD PTR ds:0x10067120
10047ce8:	push   esi
10047ce9:	mov    esi,0x100801c0
10047cee:	push   edi
10047cef:	mov    edi,DWORD PTR [esi]
10047cf1:	test   edi,edi
10047cf3:	je     0x10047d08
10047cf5:	cmp    DWORD PTR [esi+0x4],0x1
10047cf9:	je     0x10047d08
10047cfb:	push   edi
10047cfc:	call   ebx
10047cfe:	push   edi
10047cff:	call   0x100437dc
10047d04:	and    DWORD PTR [esi],0x0
10047d07:	pop    ecx
10047d08:	add    esi,0x8
10047d0b:	cmp    esi,0x100802e0
10047d11:	jl     0x10047cef
10047d13:	mov    esi,0x100801c0
10047d18:	pop    edi
10047d19:	mov    eax,DWORD PTR [esi]
10047d1b:	test   eax,eax
10047d1d:	je     0x10047d28
10047d1f:	cmp    DWORD PTR [esi+0x4],0x1
10047d23:	jne    0x10047d28
10047d25:	push   eax
10047d26:	call   ebx
10047d28:	add    esi,0x8
10047d2b:	cmp    esi,0x100802e0
10047d31:	jl     0x10047d19
10047d33:	pop    esi
10047d34:	pop    ebx
10047d35:	ret    
10047d36:	push   ebp
10047d37:	mov    ebp,esp
10047d39:	mov    eax,DWORD PTR [ebp+0x8]
10047d3c:	push   DWORD PTR [eax*8+0x100801c0]
10047d43:	call   DWORD PTR ds:0x100670fc
10047d49:	pop    ebp
10047d4a:	ret    
10047d4b:	push   0xc
10047d4d:	push   0x10075e90
10047d52:	call   0x1004771c
10047d57:	xor    edi,edi
10047d59:	inc    edi
10047d5a:	mov    DWORD PTR [ebp-0x1c],edi
10047d5d:	xor    ebx,ebx
10047d5f:	cmp    DWORD PTR ds:0x10081ff4,ebx
10047d65:	jne    0x10047d7f
10047d67:	call   0x1004a02c
10047d6c:	push   0x1e
10047d6e:	call   0x10049e8c
10047d73:	push   0xff
10047d78:	call   0x1004746a
10047d7d:	pop    ecx
10047d7e:	pop    ecx
10047d7f:	mov    esi,DWORD PTR [ebp+0x8]
10047d82:	lea    esi,[esi*8+0x100801c0]
10047d89:	cmp    DWORD PTR [esi],ebx
10047d8b:	je     0x10047d91
10047d8d:	mov    eax,edi
10047d8f:	jmp    0x10047dff
10047d91:	push   0x18
10047d93:	call   0x100472aa
10047d98:	pop    ecx
10047d99:	mov    edi,eax
10047d9b:	cmp    edi,ebx
10047d9d:	jne    0x10047dae
10047d9f:	call   0x10046c41
10047da4:	mov    DWORD PTR [eax],0xc
10047daa:	xor    eax,eax
10047dac:	jmp    0x10047dff
10047dae:	push   0xa
10047db0:	call   0x10047e0e
10047db5:	pop    ecx
10047db6:	mov    DWORD PTR [ebp-0x4],ebx
10047db9:	cmp    DWORD PTR [esi],ebx
10047dbb:	jne    0x10047de9
10047dbd:	push   0xfa0
10047dc2:	push   edi
10047dc3:	call   0x1004c769
10047dc8:	pop    ecx
10047dc9:	pop    ecx
10047dca:	test   eax,eax
10047dcc:	jne    0x10047de5
10047dce:	push   edi
10047dcf:	call   0x100437dc
10047dd4:	pop    ecx
10047dd5:	call   0x10046c41
10047dda:	mov    DWORD PTR [eax],0xc
10047de0:	mov    DWORD PTR [ebp-0x1c],ebx
10047de3:	jmp    0x10047df0
10047de5:	mov    DWORD PTR [esi],edi
10047de7:	jmp    0x10047df0
10047de9:	push   edi
10047dea:	call   0x100437dc
10047def:	pop    ecx
10047df0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047df7:	call   0x10047e05
10047dfc:	mov    eax,DWORD PTR [ebp-0x1c]
10047dff:	call   0x10047761
10047e04:	ret    
10047e05:	push   0xa
10047e07:	call   0x10047d36
10047e0c:	pop    ecx
10047e0d:	ret    
10047e0e:	push   ebp
10047e0f:	mov    ebp,esp
10047e11:	mov    eax,DWORD PTR [ebp+0x8]
10047e14:	push   esi
10047e15:	lea    esi,[eax*8+0x100801c0]
10047e1c:	cmp    DWORD PTR [esi],0x0
10047e1f:	jne    0x10047e34
10047e21:	push   eax
10047e22:	call   0x10047d4b
10047e27:	test   eax,eax
10047e29:	pop    ecx
10047e2a:	jne    0x10047e34
10047e2c:	push   0x11
10047e2e:	call   0x10047420
10047e33:	pop    ecx
10047e34:	push   DWORD PTR [esi]
10047e36:	call   DWORD PTR ds:0x100670f8
10047e3c:	pop    esi
10047e3d:	pop    ebp
10047e3e:	ret    
10047e3f:	push   ebp
10047e40:	mov    ebp,esp
10047e42:	push   ecx
10047e43:	push   ecx
10047e44:	push   esi
10047e45:	lea    eax,[ebp-0x4]
10047e48:	xor    esi,esi
10047e4a:	push   eax
10047e4b:	mov    DWORD PTR [ebp-0x4],esi
10047e4e:	mov    DWORD PTR [ebp-0x8],esi
10047e51:	call   0x100474c9
10047e56:	test   eax,eax
10047e58:	pop    ecx
10047e59:	je     0x10047e68
10047e5b:	push   esi
10047e5c:	push   esi
10047e5d:	push   esi
10047e5e:	push   esi
10047e5f:	push   esi
10047e60:	call   0x100434e5
10047e65:	add    esp,0x14
10047e68:	lea    eax,[ebp-0x8]
10047e6b:	push   eax
10047e6c:	call   0x10047500
10047e71:	test   eax,eax
10047e73:	pop    ecx
10047e74:	je     0x10047e83
10047e76:	push   esi
10047e77:	push   esi
10047e78:	push   esi
10047e79:	push   esi
10047e7a:	push   esi
10047e7b:	call   0x100434e5
10047e80:	add    esp,0x14
10047e83:	cmp    DWORD PTR [ebp-0x4],0x2
10047e87:	pop    esi
10047e88:	jne    0x10047e95
10047e8a:	cmp    DWORD PTR [ebp-0x8],0x5
10047e8e:	jb     0x10047e95
10047e90:	xor    eax,eax
10047e92:	inc    eax
10047e93:	leave  
10047e94:	ret    
10047e95:	push   0x3
10047e97:	pop    eax
10047e98:	leave  
10047e99:	ret    
10047e9a:	xor    eax,eax
10047e9c:	cmp    DWORD PTR [esp+0x4],eax
10047ea0:	push   0x0
10047ea2:	sete   al
10047ea5:	push   0x1000
10047eaa:	push   eax
10047eab:	call   DWORD PTR ds:0x100671d4
10047eb1:	test   eax,eax
10047eb3:	mov    ds:0x10081ff4,eax
10047eb8:	jne    0x10047ebd
10047eba:	xor    eax,eax
10047ebc:	ret    
10047ebd:	call   0x10047e3f
10047ec2:	cmp    eax,0x3
10047ec5:	mov    ds:0x10084600,eax
10047eca:	jne    0x10047ef0
10047ecc:	push   0x3f8
10047ed1:	call   0x10047f68
10047ed6:	test   eax,eax
10047ed8:	pop    ecx
10047ed9:	jne    0x10047ef0
10047edb:	push   DWORD PTR ds:0x10081ff4
10047ee1:	call   DWORD PTR ds:0x100671d0
10047ee7:	and    DWORD PTR ds:0x10081ff4,0x0
10047eee:	jmp    0x10047eba
10047ef0:	xor    eax,eax
10047ef2:	inc    eax
10047ef3:	ret    
10047ef4:	push   ebp
10047ef5:	xor    ebp,ebp
10047ef7:	cmp    DWORD PTR ds:0x10084600,0x3
10047efe:	jne    0x10047f54
10047f00:	push   ebx
10047f01:	mov    ebx,DWORD PTR ds:0x10067194
10047f07:	push   edi
10047f08:	xor    edi,edi
10047f0a:	cmp    DWORD PTR ds:0x100845e8,ebp
10047f10:	jle    0x10047f43
10047f12:	push   esi
10047f13:	mov    esi,DWORD PTR ds:0x100845ec
10047f19:	add    esi,0x10
10047f1c:	push   0x8000
10047f21:	push   ebp
10047f22:	push   DWORD PTR [esi-0x4]
10047f25:	call   DWORD PTR ds:0x100671d8
10047f2b:	push   DWORD PTR [esi]
10047f2d:	push   ebp
10047f2e:	push   DWORD PTR ds:0x10081ff4
10047f34:	call   ebx
10047f36:	add    esi,0x14
10047f39:	inc    edi
10047f3a:	cmp    edi,DWORD PTR ds:0x100845e8
10047f40:	jl     0x10047f1c
10047f42:	pop    esi
10047f43:	push   DWORD PTR ds:0x100845ec
10047f49:	push   ebp
10047f4a:	push   DWORD PTR ds:0x10081ff4
10047f50:	call   ebx
10047f52:	pop    edi
10047f53:	pop    ebx
10047f54:	push   DWORD PTR ds:0x10081ff4
10047f5a:	call   DWORD PTR ds:0x100671d0
10047f60:	mov    DWORD PTR ds:0x10081ff4,ebp
10047f66:	pop    ebp
10047f67:	ret    
10047f68:	push   0x140
10047f6d:	push   0x0
10047f6f:	push   DWORD PTR ds:0x10081ff4
10047f75:	call   DWORD PTR ds:0x10067190
10047f7b:	test   eax,eax
10047f7d:	mov    ds:0x100845ec,eax
10047f82:	jne    0x10047f85
10047f84:	ret    
10047f85:	mov    ecx,DWORD PTR [esp+0x4]
10047f89:	and    DWORD PTR ds:0x10081ff8,0x0
10047f90:	and    DWORD PTR ds:0x100845e8,0x0
10047f97:	mov    ds:0x100845f4,eax
10047f9c:	xor    eax,eax
10047f9e:	mov    DWORD PTR ds:0x100845f0,ecx
10047fa4:	mov    DWORD PTR ds:0x100845f8,0x10
10047fae:	inc    eax
10047faf:	ret    
10047fb0:	mov    ecx,DWORD PTR ds:0x100845e8
10047fb6:	mov    eax,ds:0x100845ec
10047fbb:	imul   ecx,ecx,0x14
10047fbe:	add    ecx,eax
10047fc0:	jmp    0x10047fd4
10047fc2:	mov    edx,DWORD PTR [esp+0x4]
10047fc6:	sub    edx,DWORD PTR [eax+0xc]
10047fc9:	cmp    edx,0x100000
10047fcf:	jb     0x10047fda
10047fd1:	add    eax,0x14
10047fd4:	cmp    eax,ecx
10047fd6:	jb     0x10047fc2
10047fd8:	xor    eax,eax
10047fda:	ret    
10047fdb:	push   ebp
10047fdc:	mov    ebp,esp
10047fde:	sub    esp,0x10
10047fe1:	mov    ecx,DWORD PTR [ebp+0x8]
10047fe4:	mov    eax,DWORD PTR [ecx+0x10]
10047fe7:	push   esi
10047fe8:	mov    esi,DWORD PTR [ebp+0xc]
10047feb:	push   edi
10047fec:	mov    edi,esi
10047fee:	sub    edi,DWORD PTR [ecx+0xc]
10047ff1:	add    esi,0xfffffffc
10047ff4:	shr    edi,0xf
10047ff7:	mov    ecx,edi
10047ff9:	imul   ecx,ecx,0x204
10047fff:	lea    ecx,[ecx+eax*1+0x144]
10048006:	mov    DWORD PTR [ebp-0x10],ecx
10048009:	mov    ecx,DWORD PTR [esi]
1004800b:	dec    ecx
1004800c:	test   cl,0x1
1004800f:	mov    DWORD PTR [ebp-0x4],ecx
10048012:	jne    0x100482eb
10048018:	push   ebx
10048019:	lea    ebx,[ecx+esi*1]
1004801c:	mov    edx,DWORD PTR [ebx]
1004801e:	mov    DWORD PTR [ebp-0xc],edx
10048021:	mov    edx,DWORD PTR [esi-0x4]
10048024:	mov    DWORD PTR [ebp-0x8],edx
10048027:	mov    edx,DWORD PTR [ebp-0xc]
1004802a:	test   dl,0x1
1004802d:	mov    DWORD PTR [ebp+0xc],ebx
10048030:	jne    0x100480a6
10048032:	sar    edx,0x4
10048035:	dec    edx
10048036:	cmp    edx,0x3f
10048039:	jbe    0x1004803e
1004803b:	push   0x3f
1004803d:	pop    edx
1004803e:	mov    ecx,DWORD PTR [ebx+0x4]
10048041:	cmp    ecx,DWORD PTR [ebx+0x8]
10048044:	jne    0x10048088
10048046:	cmp    edx,0x20
10048049:	mov    ebx,0x80000000
1004804e:	jae    0x10048069
10048050:	mov    ecx,edx
10048052:	shr    ebx,cl
10048054:	lea    ecx,[edx+eax*1+0x4]
10048058:	not    ebx
1004805a:	and    DWORD PTR [eax+edi*4+0x44],ebx
1004805e:	dec    BYTE PTR [ecx]
10048060:	jne    0x10048085
10048062:	mov    ecx,DWORD PTR [ebp+0x8]
10048065:	and    DWORD PTR [ecx],ebx
10048067:	jmp    0x10048085
10048069:	lea    ecx,[edx-0x20]
1004806c:	shr    ebx,cl
1004806e:	lea    ecx,[edx+eax*1+0x4]
10048072:	not    ebx
10048074:	and    DWORD PTR [eax+edi*4+0xc4],ebx
1004807b:	dec    BYTE PTR [ecx]
1004807d:	jne    0x10048085
1004807f:	mov    ecx,DWORD PTR [ebp+0x8]
10048082:	and    DWORD PTR [ecx+0x4],ebx
10048085:	mov    ebx,DWORD PTR [ebp+0xc]
10048088:	mov    edx,DWORD PTR [ebx+0x8]
1004808b:	mov    ebx,DWORD PTR [ebx+0x4]
1004808e:	mov    ecx,DWORD PTR [ebp-0x4]
10048091:	add    ecx,DWORD PTR [ebp-0xc]
10048094:	mov    DWORD PTR [edx+0x4],ebx
10048097:	mov    edx,DWORD PTR [ebp+0xc]
1004809a:	mov    ebx,DWORD PTR [edx+0x4]
1004809d:	mov    edx,DWORD PTR [edx+0x8]
100480a0:	mov    DWORD PTR [ebx+0x8],edx
100480a3:	mov    DWORD PTR [ebp-0x4],ecx
100480a6:	mov    edx,ecx
100480a8:	sar    edx,0x4
100480ab:	dec    edx
100480ac:	cmp    edx,0x3f
100480af:	jbe    0x100480b4
100480b1:	push   0x3f
100480b3:	pop    edx
100480b4:	mov    ebx,DWORD PTR [ebp-0x8]
100480b7:	and    ebx,0x1
100480ba:	mov    DWORD PTR [ebp-0xc],ebx
100480bd:	jne    0x10048152
100480c3:	sub    esi,DWORD PTR [ebp-0x8]
100480c6:	mov    ebx,DWORD PTR [ebp-0x8]
100480c9:	sar    ebx,0x4
100480cc:	push   0x3f
100480ce:	mov    DWORD PTR [ebp+0xc],esi
100480d1:	dec    ebx
100480d2:	pop    esi
100480d3:	cmp    ebx,esi
100480d5:	jbe    0x100480d9
100480d7:	mov    ebx,esi
100480d9:	add    ecx,DWORD PTR [ebp-0x8]
100480dc:	mov    edx,ecx
100480de:	sar    edx,0x4
100480e1:	dec    edx
100480e2:	cmp    edx,esi
100480e4:	mov    DWORD PTR [ebp-0x4],ecx
100480e7:	jbe    0x100480eb
100480e9:	mov    edx,esi
100480eb:	cmp    ebx,edx
100480ed:	je     0x1004814d
100480ef:	mov    ecx,DWORD PTR [ebp+0xc]
100480f2:	mov    esi,DWORD PTR [ecx+0x4]
100480f5:	cmp    esi,DWORD PTR [ecx+0x8]
100480f8:	jne    0x10048135
100480fa:	cmp    ebx,0x20
100480fd:	mov    esi,0x80000000
10048102:	jae    0x1004811b
10048104:	mov    ecx,ebx
10048106:	shr    esi,cl
10048108:	not    esi
1004810a:	and    DWORD PTR [eax+edi*4+0x44],esi
1004810e:	dec    BYTE PTR [ebx+eax*1+0x4]
10048112:	jne    0x10048135
10048114:	mov    ecx,DWORD PTR [ebp+0x8]
10048117:	and    DWORD PTR [ecx],esi
10048119:	jmp    0x10048135
1004811b:	lea    ecx,[ebx-0x20]
1004811e:	shr    esi,cl
10048120:	not    esi
10048122:	and    DWORD PTR [eax+edi*4+0xc4],esi
10048129:	dec    BYTE PTR [ebx+eax*1+0x4]
1004812d:	jne    0x10048135
1004812f:	mov    ecx,DWORD PTR [ebp+0x8]
10048132:	and    DWORD PTR [ecx+0x4],esi
10048135:	mov    ecx,DWORD PTR [ebp+0xc]
10048138:	mov    esi,DWORD PTR [ecx+0x8]
1004813b:	mov    ecx,DWORD PTR [ecx+0x4]
1004813e:	mov    DWORD PTR [esi+0x4],ecx
10048141:	mov    ecx,DWORD PTR [ebp+0xc]
10048144:	mov    esi,DWORD PTR [ecx+0x4]
10048147:	mov    ecx,DWORD PTR [ecx+0x8]
1004814a:	mov    DWORD PTR [esi+0x8],ecx
1004814d:	mov    esi,DWORD PTR [ebp+0xc]
10048150:	jmp    0x10048155
10048152:	mov    ebx,DWORD PTR [ebp+0x8]
10048155:	cmp    DWORD PTR [ebp-0xc],0x0
10048159:	jne    0x10048163
1004815b:	cmp    ebx,edx
1004815d:	je     0x100481e3
10048163:	mov    ecx,DWORD PTR [ebp-0x10]
10048166:	lea    ecx,[ecx+edx*8]
10048169:	mov    ebx,DWORD PTR [ecx+0x4]
1004816c:	mov    DWORD PTR [esi+0x8],ecx
1004816f:	mov    DWORD PTR [esi+0x4],ebx
10048172:	mov    DWORD PTR [ecx+0x4],esi
10048175:	mov    ecx,DWORD PTR [esi+0x4]
10048178:	mov    DWORD PTR [ecx+0x8],esi
1004817b:	mov    ecx,DWORD PTR [esi+0x4]
1004817e:	cmp    ecx,DWORD PTR [esi+0x8]
10048181:	jne    0x100481e3
10048183:	mov    cl,BYTE PTR [edx+eax*1+0x4]
10048187:	mov    BYTE PTR [ebp+0xf],cl
1004818a:	inc    cl
1004818c:	cmp    edx,0x20
1004818f:	mov    BYTE PTR [edx+eax*1+0x4],cl
10048193:	jae    0x100481ba
10048195:	cmp    BYTE PTR [ebp+0xf],0x0
10048199:	jne    0x100481a9
1004819b:	mov    ecx,edx
1004819d:	mov    ebx,0x80000000
100481a2:	shr    ebx,cl
100481a4:	mov    ecx,DWORD PTR [ebp+0x8]
100481a7:	or     DWORD PTR [ecx],ebx
100481a9:	mov    ebx,0x80000000
100481ae:	mov    ecx,edx
100481b0:	shr    ebx,cl
100481b2:	lea    eax,[eax+edi*4+0x44]
100481b6:	or     DWORD PTR [eax],ebx
100481b8:	jmp    0x100481e3
100481ba:	cmp    BYTE PTR [ebp+0xf],0x0
100481be:	jne    0x100481d0
100481c0:	lea    ecx,[edx-0x20]
100481c3:	mov    ebx,0x80000000
100481c8:	shr    ebx,cl
100481ca:	mov    ecx,DWORD PTR [ebp+0x8]
100481cd:	or     DWORD PTR [ecx+0x4],ebx
100481d0:	lea    ecx,[edx-0x20]
100481d3:	mov    edx,0x80000000
100481d8:	shr    edx,cl
100481da:	lea    eax,[eax+edi*4+0xc4]
100481e1:	or     DWORD PTR [eax],edx
100481e3:	mov    eax,DWORD PTR [ebp-0x4]
100481e6:	mov    DWORD PTR [esi],eax
100481e8:	mov    DWORD PTR [eax+esi*1-0x4],eax
100481ec:	mov    eax,DWORD PTR [ebp-0x10]
100481ef:	dec    DWORD PTR [eax]
100481f1:	jne    0x100482ea
100481f7:	mov    eax,ds:0x10081ff8
100481fc:	test   eax,eax
100481fe:	je     0x100482dc
10048204:	mov    ecx,DWORD PTR ds:0x100845fc
1004820a:	mov    esi,DWORD PTR ds:0x100671d8
10048210:	push   0x4000
10048215:	shl    ecx,0xf
10048218:	add    ecx,DWORD PTR [eax+0xc]
1004821b:	mov    ebx,0x8000
10048220:	push   ebx
10048221:	push   ecx
10048222:	call   esi
10048224:	mov    ecx,DWORD PTR ds:0x100845fc
1004822a:	mov    eax,ds:0x10081ff8
1004822f:	mov    edx,0x80000000
10048234:	shr    edx,cl
10048236:	or     DWORD PTR [eax+0x8],edx
10048239:	mov    eax,ds:0x10081ff8
1004823e:	mov    eax,DWORD PTR [eax+0x10]
10048241:	mov    ecx,DWORD PTR ds:0x100845fc
10048247:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
1004824f:	mov    eax,ds:0x10081ff8
10048254:	mov    eax,DWORD PTR [eax+0x10]
10048257:	dec    BYTE PTR [eax+0x43]
1004825a:	mov    eax,ds:0x10081ff8
1004825f:	mov    ecx,DWORD PTR [eax+0x10]
10048262:	cmp    BYTE PTR [ecx+0x43],0x0
10048266:	jne    0x10048271
10048268:	and    DWORD PTR [eax+0x4],0xfffffffe
1004826c:	mov    eax,ds:0x10081ff8
10048271:	cmp    DWORD PTR [eax+0x8],0xffffffff
10048275:	jne    0x100482dc
10048277:	push   ebx
10048278:	push   0x0
1004827a:	push   DWORD PTR [eax+0xc]
1004827d:	call   esi
1004827f:	mov    eax,ds:0x10081ff8
10048284:	push   DWORD PTR [eax+0x10]
10048287:	push   0x0
10048289:	push   DWORD PTR ds:0x10081ff4
1004828f:	call   DWORD PTR ds:0x10067194
10048295:	mov    ecx,DWORD PTR ds:0x100845e8
1004829b:	mov    eax,ds:0x10081ff8
100482a0:	imul   ecx,ecx,0x14
100482a3:	mov    edx,DWORD PTR ds:0x100845ec
100482a9:	sub    ecx,eax
100482ab:	lea    ecx,[ecx+edx*1-0x14]
100482af:	push   ecx
100482b0:	lea    ecx,[eax+0x14]
100482b3:	push   ecx
100482b4:	push   eax
100482b5:	call   0x10045880
100482ba:	mov    eax,DWORD PTR [ebp+0x8]
100482bd:	add    esp,0xc
100482c0:	dec    DWORD PTR ds:0x100845e8
100482c6:	cmp    eax,DWORD PTR ds:0x10081ff8
100482cc:	jbe    0x100482d2
100482ce:	sub    DWORD PTR [ebp+0x8],0x14
100482d2:	mov    eax,ds:0x100845ec
100482d7:	mov    ds:0x100845f4,eax
100482dc:	mov    eax,DWORD PTR [ebp+0x8]
100482df:	mov    ds:0x10081ff8,eax
100482e4:	mov    DWORD PTR ds:0x100845fc,edi
100482ea:	pop    ebx
100482eb:	pop    edi
100482ec:	pop    esi
100482ed:	leave  
100482ee:	ret    
100482ef:	mov    eax,ds:0x100845f8
100482f4:	push   esi
100482f5:	mov    esi,DWORD PTR ds:0x100845e8
100482fb:	push   edi
100482fc:	xor    edi,edi
100482fe:	cmp    esi,eax
10048300:	jne    0x10048336
10048302:	add    eax,0x10
10048305:	imul   eax,eax,0x14
10048308:	push   eax
10048309:	push   DWORD PTR ds:0x100845ec
1004830f:	push   edi
10048310:	push   DWORD PTR ds:0x10081ff4
10048316:	call   DWORD PTR ds:0x100671a8
1004831c:	cmp    eax,edi
1004831e:	jne    0x10048324
10048320:	xor    eax,eax
10048322:	jmp    0x1004839c
10048324:	add    DWORD PTR ds:0x100845f8,0x10
1004832b:	mov    esi,DWORD PTR ds:0x100845e8
10048331:	mov    ds:0x100845ec,eax
10048336:	imul   esi,esi,0x14
10048339:	add    esi,DWORD PTR ds:0x100845ec
1004833f:	push   0x41c4
10048344:	push   0x8
10048346:	push   DWORD PTR ds:0x10081ff4
1004834c:	call   DWORD PTR ds:0x10067190
10048352:	cmp    eax,edi
10048354:	mov    DWORD PTR [esi+0x10],eax
10048357:	je     0x10048320
10048359:	push   0x4
1004835b:	push   0x2000
10048360:	push   0x100000
10048365:	push   edi
10048366:	call   DWORD PTR ds:0x1006719c
1004836c:	cmp    eax,edi
1004836e:	mov    DWORD PTR [esi+0xc],eax
10048371:	jne    0x10048385
10048373:	push   DWORD PTR [esi+0x10]
10048376:	push   edi
10048377:	push   DWORD PTR ds:0x10081ff4
1004837d:	call   DWORD PTR ds:0x10067194
10048383:	jmp    0x10048320
10048385:	or     DWORD PTR [esi+0x8],0xffffffff
10048389:	mov    DWORD PTR [esi],edi
1004838b:	mov    DWORD PTR [esi+0x4],edi
1004838e:	inc    DWORD PTR ds:0x100845e8
10048394:	mov    eax,DWORD PTR [esi+0x10]
10048397:	or     DWORD PTR [eax],0xffffffff
1004839a:	mov    eax,esi
1004839c:	pop    edi
1004839d:	pop    esi
1004839e:	ret    
1004839f:	push   ebp
100483a0:	mov    ebp,esp
100483a2:	push   ecx
100483a3:	push   ecx
100483a4:	mov    ecx,DWORD PTR [ebp+0x8]
100483a7:	mov    eax,DWORD PTR [ecx+0x8]
100483aa:	push   ebx
100483ab:	push   esi
100483ac:	mov    esi,DWORD PTR [ecx+0x10]
100483af:	push   edi
100483b0:	xor    ebx,ebx
100483b2:	jmp    0x100483b7
100483b4:	add    eax,eax
100483b6:	inc    ebx
100483b7:	test   eax,eax
100483b9:	jge    0x100483b4
100483bb:	mov    eax,ebx
100483bd:	imul   eax,eax,0x204
100483c3:	lea    eax,[eax+esi*1+0x144]
100483ca:	push   0x3f
100483cc:	mov    DWORD PTR [ebp-0x8],eax
100483cf:	pop    edx
100483d0:	mov    DWORD PTR [eax+0x8],eax
100483d3:	mov    DWORD PTR [eax+0x4],eax
100483d6:	add    eax,0x8
100483d9:	dec    edx
100483da:	jne    0x100483d0
100483dc:	push   0x4
100483de:	mov    edi,ebx
100483e0:	push   0x1000
100483e5:	shl    edi,0xf
100483e8:	add    edi,DWORD PTR [ecx+0xc]
100483eb:	push   0x8000
100483f0:	push   edi
100483f1:	call   DWORD PTR ds:0x1006719c
100483f7:	test   eax,eax
100483f9:	jne    0x10048403
100483fb:	or     eax,0xffffffff
100483fe:	jmp    0x100484a0
10048403:	lea    edx,[edi+0x7000]
10048409:	cmp    edi,edx
1004840b:	mov    DWORD PTR [ebp-0x4],edx
1004840e:	ja     0x10048453
10048410:	mov    ecx,edx
10048412:	sub    ecx,edi
10048414:	shr    ecx,0xc
10048417:	lea    eax,[edi+0x10]
1004841a:	inc    ecx
1004841b:	or     DWORD PTR [eax-0x8],0xffffffff
1004841f:	or     DWORD PTR [eax+0xfec],0xffffffff
10048426:	lea    edx,[eax+0xffc]
1004842c:	mov    DWORD PTR [eax],edx
1004842e:	lea    edx,[eax-0x1004]
10048434:	mov    DWORD PTR [eax-0x4],0xff0
1004843b:	mov    DWORD PTR [eax+0x4],edx
1004843e:	mov    DWORD PTR [eax+0xfe8],0xff0
10048448:	add    eax,0x1000
1004844d:	dec    ecx
1004844e:	jne    0x1004841b
10048450:	mov    edx,DWORD PTR [ebp-0x4]
10048453:	mov    eax,DWORD PTR [ebp-0x8]
10048456:	add    eax,0x1f8
1004845b:	lea    ecx,[edi+0xc]
1004845e:	mov    DWORD PTR [eax+0x4],ecx
10048461:	mov    DWORD PTR [ecx+0x8],eax
10048464:	lea    ecx,[edx+0xc]
10048467:	mov    DWORD PTR [eax+0x8],ecx
1004846a:	mov    DWORD PTR [ecx+0x4],eax
1004846d:	and    DWORD PTR [esi+ebx*4+0x44],0x0
10048472:	xor    edi,edi
10048474:	inc    edi
10048475:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
1004847c:	mov    al,BYTE PTR [esi+0x43]
1004847f:	mov    cl,al
10048481:	inc    cl
10048483:	test   al,al
10048485:	mov    eax,DWORD PTR [ebp+0x8]
10048488:	mov    BYTE PTR [esi+0x43],cl
1004848b:	jne    0x10048490
1004848d:	or     DWORD PTR [eax+0x4],edi
10048490:	mov    edx,0x80000000
10048495:	mov    ecx,ebx
10048497:	shr    edx,cl
10048499:	not    edx
1004849b:	and    DWORD PTR [eax+0x8],edx
1004849e:	mov    eax,ebx
100484a0:	pop    edi
100484a1:	pop    esi
100484a2:	pop    ebx
100484a3:	leave  
100484a4:	ret    
100484a5:	push   ebp
100484a6:	mov    ebp,esp
100484a8:	sub    esp,0xc
100484ab:	mov    ecx,DWORD PTR [ebp+0x8]
100484ae:	mov    eax,DWORD PTR [ecx+0x10]
100484b1:	push   ebx
100484b2:	push   esi
100484b3:	mov    esi,DWORD PTR [ebp+0x10]
100484b6:	push   edi
100484b7:	mov    edi,DWORD PTR [ebp+0xc]
100484ba:	mov    edx,edi
100484bc:	sub    edx,DWORD PTR [ecx+0xc]
100484bf:	add    esi,0x17
100484c2:	shr    edx,0xf
100484c5:	mov    ecx,edx
100484c7:	imul   ecx,ecx,0x204
100484cd:	lea    ecx,[ecx+eax*1+0x144]
100484d4:	mov    DWORD PTR [ebp-0xc],ecx
100484d7:	mov    ecx,DWORD PTR [edi-0x4]
100484da:	and    esi,0xfffffff0
100484dd:	dec    ecx
100484de:	cmp    esi,ecx
100484e0:	lea    edi,[ecx+edi*1-0x4]
100484e4:	mov    ebx,DWORD PTR [edi]
100484e6:	mov    DWORD PTR [ebp+0x10],ecx
100484e9:	mov    DWORD PTR [ebp-0x4],ebx
100484ec:	jle    0x10048647
100484f2:	test   bl,0x1
100484f5:	jne    0x10048640
100484fb:	add    ebx,ecx
100484fd:	cmp    esi,ebx
100484ff:	jg     0x10048640
10048505:	mov    ecx,DWORD PTR [ebp-0x4]
10048508:	sar    ecx,0x4
1004850b:	dec    ecx
1004850c:	cmp    ecx,0x3f
1004850f:	mov    DWORD PTR [ebp-0x8],ecx
10048512:	jbe    0x1004851a
10048514:	push   0x3f
10048516:	pop    ecx
10048517:	mov    DWORD PTR [ebp-0x8],ecx
1004851a:	mov    ebx,DWORD PTR [edi+0x4]
1004851d:	cmp    ebx,DWORD PTR [edi+0x8]
10048520:	jne    0x10048565
10048522:	cmp    ecx,0x20
10048525:	mov    ebx,0x80000000
1004852a:	jae    0x10048546
1004852c:	shr    ebx,cl
1004852e:	mov    ecx,DWORD PTR [ebp-0x8]
10048531:	lea    ecx,[ecx+eax*1+0x4]
10048535:	not    ebx
10048537:	and    DWORD PTR [eax+edx*4+0x44],ebx
1004853b:	dec    BYTE PTR [ecx]
1004853d:	jne    0x10048565
1004853f:	mov    ecx,DWORD PTR [ebp+0x8]
10048542:	and    DWORD PTR [ecx],ebx
10048544:	jmp    0x10048565
10048546:	add    ecx,0xffffffe0
10048549:	shr    ebx,cl
1004854b:	mov    ecx,DWORD PTR [ebp-0x8]
1004854e:	lea    ecx,[ecx+eax*1+0x4]
10048552:	not    ebx
10048554:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1004855b:	dec    BYTE PTR [ecx]
1004855d:	jne    0x10048565
1004855f:	mov    ecx,DWORD PTR [ebp+0x8]
10048562:	and    DWORD PTR [ecx+0x4],ebx
10048565:	mov    ecx,DWORD PTR [edi+0x8]
10048568:	mov    ebx,DWORD PTR [edi+0x4]
1004856b:	mov    DWORD PTR [ecx+0x4],ebx
1004856e:	mov    ecx,DWORD PTR [edi+0x4]
10048571:	mov    edi,DWORD PTR [edi+0x8]
10048574:	mov    DWORD PTR [ecx+0x8],edi
10048577:	mov    ecx,DWORD PTR [ebp+0x10]
1004857a:	sub    ecx,esi
1004857c:	add    DWORD PTR [ebp-0x4],ecx
1004857f:	cmp    DWORD PTR [ebp-0x4],0x0
10048583:	jle    0x1004862e
10048589:	mov    edi,DWORD PTR [ebp-0x4]
1004858c:	mov    ecx,DWORD PTR [ebp+0xc]
1004858f:	sar    edi,0x4
10048592:	dec    edi
10048593:	cmp    edi,0x3f
10048596:	lea    ecx,[ecx+esi*1-0x4]
1004859a:	jbe    0x1004859f
1004859c:	push   0x3f
1004859e:	pop    edi
1004859f:	mov    ebx,DWORD PTR [ebp-0xc]
100485a2:	lea    ebx,[ebx+edi*8]
100485a5:	mov    DWORD PTR [ebp+0x10],ebx
100485a8:	mov    ebx,DWORD PTR [ebx+0x4]
100485ab:	mov    DWORD PTR [ecx+0x4],ebx
100485ae:	mov    ebx,DWORD PTR [ebp+0x10]
100485b1:	mov    DWORD PTR [ecx+0x8],ebx
100485b4:	mov    DWORD PTR [ebx+0x4],ecx
100485b7:	mov    ebx,DWORD PTR [ecx+0x4]
100485ba:	mov    DWORD PTR [ebx+0x8],ecx
100485bd:	mov    ebx,DWORD PTR [ecx+0x4]
100485c0:	cmp    ebx,DWORD PTR [ecx+0x8]
100485c3:	jne    0x1004861c
100485c5:	mov    cl,BYTE PTR [edi+eax*1+0x4]
100485c9:	mov    BYTE PTR [ebp+0x13],cl
100485cc:	inc    cl
100485ce:	cmp    edi,0x20
100485d1:	mov    BYTE PTR [edi+eax*1+0x4],cl
100485d5:	jae    0x100485f3
100485d7:	cmp    BYTE PTR [ebp+0x13],0x0
100485db:	jne    0x100485eb
100485dd:	mov    ecx,edi
100485df:	mov    ebx,0x80000000
100485e4:	shr    ebx,cl
100485e6:	mov    ecx,DWORD PTR [ebp+0x8]
100485e9:	or     DWORD PTR [ecx],ebx
100485eb:	lea    eax,[eax+edx*4+0x44]
100485ef:	mov    ecx,edi
100485f1:	jmp    0x10048613
100485f3:	cmp    BYTE PTR [ebp+0x13],0x0
100485f7:	jne    0x10048609
100485f9:	lea    ecx,[edi-0x20]
100485fc:	mov    ebx,0x80000000
10048601:	shr    ebx,cl
10048603:	mov    ecx,DWORD PTR [ebp+0x8]
10048606:	or     DWORD PTR [ecx+0x4],ebx
10048609:	lea    eax,[eax+edx*4+0xc4]
10048610:	lea    ecx,[edi-0x20]
10048613:	mov    edx,0x80000000
10048618:	shr    edx,cl
1004861a:	or     DWORD PTR [eax],edx
1004861c:	mov    edx,DWORD PTR [ebp+0xc]
1004861f:	mov    ecx,DWORD PTR [ebp-0x4]
10048622:	lea    eax,[edx+esi*1-0x4]
10048626:	mov    DWORD PTR [eax],ecx
10048628:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
1004862c:	jmp    0x10048631
1004862e:	mov    edx,DWORD PTR [ebp+0xc]
10048631:	lea    eax,[esi+0x1]
10048634:	mov    DWORD PTR [edx-0x4],eax
10048637:	mov    DWORD PTR [edx+esi*1-0x8],eax
1004863b:	jmp    0x1004877c
10048640:	xor    eax,eax
10048642:	jmp    0x1004877f
10048647:	jge    0x1004877c
1004864d:	mov    ebx,DWORD PTR [ebp+0xc]
10048650:	sub    DWORD PTR [ebp+0x10],esi
10048653:	lea    ecx,[esi+0x1]
10048656:	mov    DWORD PTR [ebx-0x4],ecx
10048659:	lea    ebx,[ebx+esi*1-0x4]
1004865d:	mov    esi,DWORD PTR [ebp+0x10]
10048660:	sar    esi,0x4
10048663:	dec    esi
10048664:	cmp    esi,0x3f
10048667:	mov    DWORD PTR [ebp+0xc],ebx
1004866a:	mov    DWORD PTR [ebx-0x4],ecx
1004866d:	jbe    0x10048672
1004866f:	push   0x3f
10048671:	pop    esi
10048672:	test   BYTE PTR [ebp-0x4],0x1
10048676:	jne    0x100486fc
1004867c:	mov    esi,DWORD PTR [ebp-0x4]
1004867f:	sar    esi,0x4
10048682:	dec    esi
10048683:	cmp    esi,0x3f
10048686:	jbe    0x1004868b
10048688:	push   0x3f
1004868a:	pop    esi
1004868b:	mov    ecx,DWORD PTR [edi+0x4]
1004868e:	cmp    ecx,DWORD PTR [edi+0x8]
10048691:	jne    0x100486d5
10048693:	cmp    esi,0x20
10048696:	mov    ebx,0x80000000
1004869b:	jae    0x100486b6
1004869d:	mov    ecx,esi
1004869f:	shr    ebx,cl
100486a1:	lea    esi,[esi+eax*1+0x4]
100486a5:	not    ebx
100486a7:	and    DWORD PTR [eax+edx*4+0x44],ebx
100486ab:	dec    BYTE PTR [esi]
100486ad:	jne    0x100486d2
100486af:	mov    ecx,DWORD PTR [ebp+0x8]
100486b2:	and    DWORD PTR [ecx],ebx
100486b4:	jmp    0x100486d2
100486b6:	lea    ecx,[esi-0x20]
100486b9:	shr    ebx,cl
100486bb:	lea    ecx,[esi+eax*1+0x4]
100486bf:	not    ebx
100486c1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
100486c8:	dec    BYTE PTR [ecx]
100486ca:	jne    0x100486d2
100486cc:	mov    ecx,DWORD PTR [ebp+0x8]
100486cf:	and    DWORD PTR [ecx+0x4],ebx
100486d2:	mov    ebx,DWORD PTR [ebp+0xc]
100486d5:	mov    ecx,DWORD PTR [edi+0x8]
100486d8:	mov    esi,DWORD PTR [edi+0x4]
100486db:	mov    DWORD PTR [ecx+0x4],esi
100486de:	mov    esi,DWORD PTR [edi+0x8]
100486e1:	mov    ecx,DWORD PTR [edi+0x4]
100486e4:	mov    DWORD PTR [ecx+0x8],esi
100486e7:	mov    esi,DWORD PTR [ebp+0x10]
100486ea:	add    esi,DWORD PTR [ebp-0x4]
100486ed:	mov    DWORD PTR [ebp+0x10],esi
100486f0:	sar    esi,0x4
100486f3:	dec    esi
100486f4:	cmp    esi,0x3f
100486f7:	jbe    0x100486fc
100486f9:	push   0x3f
100486fb:	pop    esi
100486fc:	mov    ecx,DWORD PTR [ebp-0xc]
100486ff:	lea    ecx,[ecx+esi*8]
10048702:	mov    edi,DWORD PTR [ecx+0x4]
10048705:	mov    DWORD PTR [ebx+0x8],ecx
10048708:	mov    DWORD PTR [ebx+0x4],edi
1004870b:	mov    DWORD PTR [ecx+0x4],ebx
1004870e:	mov    ecx,DWORD PTR [ebx+0x4]
10048711:	mov    DWORD PTR [ecx+0x8],ebx
10048714:	mov    ecx,DWORD PTR [ebx+0x4]
10048717:	cmp    ecx,DWORD PTR [ebx+0x8]
1004871a:	jne    0x10048773
1004871c:	mov    cl,BYTE PTR [esi+eax*1+0x4]
10048720:	mov    BYTE PTR [ebp+0xf],cl
10048723:	inc    cl
10048725:	cmp    esi,0x20
10048728:	mov    BYTE PTR [esi+eax*1+0x4],cl
1004872c:	jae    0x1004874a
1004872e:	cmp    BYTE PTR [ebp+0xf],0x0
10048732:	jne    0x10048742
10048734:	mov    ecx,esi
10048736:	mov    edi,0x80000000
1004873b:	shr    edi,cl
1004873d:	mov    ecx,DWORD PTR [ebp+0x8]
10048740:	or     DWORD PTR [ecx],edi
10048742:	lea    eax,[eax+edx*4+0x44]
10048746:	mov    ecx,esi
10048748:	jmp    0x1004876a
1004874a:	cmp    BYTE PTR [ebp+0xf],0x0
1004874e:	jne    0x10048760
10048750:	lea    ecx,[esi-0x20]
10048753:	mov    edi,0x80000000
10048758:	shr    edi,cl
1004875a:	mov    ecx,DWORD PTR [ebp+0x8]
1004875d:	or     DWORD PTR [ecx+0x4],edi
10048760:	lea    eax,[eax+edx*4+0xc4]
10048767:	lea    ecx,[esi-0x20]
1004876a:	mov    edx,0x80000000
1004876f:	shr    edx,cl
10048771:	or     DWORD PTR [eax],edx
10048773:	mov    eax,DWORD PTR [ebp+0x10]
10048776:	mov    DWORD PTR [ebx],eax
10048778:	mov    DWORD PTR [eax+ebx*1-0x4],eax
1004877c:	xor    eax,eax
1004877e:	inc    eax
1004877f:	pop    edi
10048780:	pop    esi
10048781:	pop    ebx
10048782:	leave  
10048783:	ret    
10048784:	push   ebp
10048785:	mov    ebp,esp
10048787:	sub    esp,0x14
1004878a:	mov    eax,ds:0x100845e8
1004878f:	mov    ecx,DWORD PTR [ebp+0x8]
10048792:	imul   eax,eax,0x14
10048795:	add    eax,DWORD PTR ds:0x100845ec
1004879b:	add    ecx,0x17
1004879e:	and    ecx,0xfffffff0
100487a1:	mov    DWORD PTR [ebp-0x10],ecx
100487a4:	sar    ecx,0x4
100487a7:	push   ebx
100487a8:	dec    ecx
100487a9:	cmp    ecx,0x20
100487ac:	push   esi
100487ad:	push   edi
100487ae:	jge    0x100487bb
100487b0:	or     esi,0xffffffff
100487b3:	shr    esi,cl
100487b5:	or     DWORD PTR [ebp-0x8],0xffffffff
100487b9:	jmp    0x100487c8
100487bb:	add    ecx,0xffffffe0
100487be:	or     edx,0xffffffff
100487c1:	xor    esi,esi
100487c3:	shr    edx,cl
100487c5:	mov    DWORD PTR [ebp-0x8],edx
100487c8:	mov    ecx,DWORD PTR ds:0x100845f4
100487ce:	mov    ebx,ecx
100487d0:	jmp    0x100487e3
100487d2:	mov    edx,DWORD PTR [ebx+0x4]
100487d5:	mov    edi,DWORD PTR [ebx]
100487d7:	and    edx,DWORD PTR [ebp-0x8]
100487da:	and    edi,esi
100487dc:	or     edx,edi
100487de:	jne    0x100487ea
100487e0:	add    ebx,0x14
100487e3:	cmp    ebx,eax
100487e5:	mov    DWORD PTR [ebp+0x8],ebx
100487e8:	jb     0x100487d2
100487ea:	cmp    ebx,eax
100487ec:	jne    0x1004886d
100487ee:	mov    ebx,DWORD PTR ds:0x100845ec
100487f4:	jmp    0x10048807
100487f6:	mov    edx,DWORD PTR [ebx+0x4]
100487f9:	mov    edi,DWORD PTR [ebx]
100487fb:	and    edx,DWORD PTR [ebp-0x8]
100487fe:	and    edi,esi
10048800:	or     edx,edi
10048802:	jne    0x1004880e
10048804:	add    ebx,0x14
10048807:	cmp    ebx,ecx
10048809:	mov    DWORD PTR [ebp+0x8],ebx
1004880c:	jb     0x100487f6
1004880e:	cmp    ebx,ecx
10048810:	jne    0x1004886d
10048812:	jmp    0x10048820
10048814:	cmp    DWORD PTR [ebx+0x8],0x0
10048818:	jne    0x10048824
1004881a:	add    ebx,0x14
1004881d:	mov    DWORD PTR [ebp+0x8],ebx
10048820:	cmp    ebx,eax
10048822:	jb     0x10048814
10048824:	cmp    ebx,eax
10048826:	jne    0x10048859
10048828:	mov    ebx,DWORD PTR ds:0x100845ec
1004882e:	jmp    0x10048839
10048830:	cmp    DWORD PTR [ebx+0x8],0x0
10048834:	jne    0x10048840
10048836:	add    ebx,0x14
10048839:	cmp    ebx,ecx
1004883b:	mov    DWORD PTR [ebp+0x8],ebx
1004883e:	jb     0x10048830
10048840:	cmp    ebx,ecx
10048842:	jne    0x10048859
10048844:	call   0x100482ef
10048849:	mov    ebx,eax
1004884b:	test   ebx,ebx
1004884d:	mov    DWORD PTR [ebp+0x8],ebx
10048850:	jne    0x10048859
10048852:	xor    eax,eax
10048854:	jmp    0x10048a62
10048859:	push   ebx
1004885a:	call   0x1004839f
1004885f:	pop    ecx
10048860:	mov    ecx,DWORD PTR [ebx+0x10]
10048863:	mov    DWORD PTR [ecx],eax
10048865:	mov    eax,DWORD PTR [ebx+0x10]
10048868:	cmp    DWORD PTR [eax],0xffffffff
1004886b:	je     0x10048852
1004886d:	mov    DWORD PTR ds:0x100845f4,ebx
10048873:	mov    eax,DWORD PTR [ebx+0x10]
10048876:	mov    edx,DWORD PTR [eax]
10048878:	cmp    edx,0xffffffff
1004887b:	mov    DWORD PTR [ebp-0x4],edx
1004887e:	je     0x10048894
10048880:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
10048887:	mov    edi,DWORD PTR [eax+edx*4+0x44]
1004888b:	and    ecx,DWORD PTR [ebp-0x8]
1004888e:	and    edi,esi
10048890:	or     ecx,edi
10048892:	jne    0x100488bd
10048894:	and    DWORD PTR [ebp-0x4],0x0
10048898:	mov    edx,DWORD PTR [eax+0xc4]
1004889e:	lea    ecx,[eax+0x44]
100488a1:	mov    edi,DWORD PTR [ecx]
100488a3:	and    edx,DWORD PTR [ebp-0x8]
100488a6:	and    edi,esi
100488a8:	or     edx,edi
100488aa:	jne    0x100488ba
100488ac:	inc    DWORD PTR [ebp-0x4]
100488af:	mov    edx,DWORD PTR [ecx+0x84]
100488b5:	add    ecx,0x4
100488b8:	jmp    0x100488a1
100488ba:	mov    edx,DWORD PTR [ebp-0x4]
100488bd:	mov    ecx,edx
100488bf:	imul   ecx,ecx,0x204
100488c5:	lea    ecx,[ecx+eax*1+0x144]
100488cc:	mov    DWORD PTR [ebp-0xc],ecx
100488cf:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
100488d3:	xor    edi,edi
100488d5:	and    ecx,esi
100488d7:	jne    0x100488eb
100488d9:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
100488e0:	and    ecx,DWORD PTR [ebp-0x8]
100488e3:	push   0x20
100488e5:	pop    edi
100488e6:	jmp    0x100488eb
100488e8:	add    ecx,ecx
100488ea:	inc    edi
100488eb:	test   ecx,ecx
100488ed:	jge    0x100488e8
100488ef:	mov    ecx,DWORD PTR [ebp-0xc]
100488f2:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
100488f6:	mov    ecx,DWORD PTR [edx]
100488f8:	sub    ecx,DWORD PTR [ebp-0x10]
100488fb:	mov    esi,ecx
100488fd:	sar    esi,0x4
10048900:	dec    esi
10048901:	cmp    esi,0x3f
10048904:	mov    DWORD PTR [ebp-0x8],ecx
10048907:	jle    0x1004890c
10048909:	push   0x3f
1004890b:	pop    esi
1004890c:	cmp    esi,edi
1004890e:	je     0x10048a15
10048914:	mov    ecx,DWORD PTR [edx+0x4]
10048917:	cmp    ecx,DWORD PTR [edx+0x8]
1004891a:	jne    0x10048978
1004891c:	cmp    edi,0x20
1004891f:	mov    ebx,0x80000000
10048924:	jge    0x1004894c
10048926:	mov    ecx,edi
10048928:	shr    ebx,cl
1004892a:	mov    ecx,DWORD PTR [ebp-0x4]
1004892d:	lea    edi,[eax+edi*1+0x4]
10048931:	not    ebx
10048933:	mov    DWORD PTR [ebp-0x14],ebx
10048936:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
1004893a:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
1004893e:	dec    BYTE PTR [edi]
10048940:	jne    0x10048975
10048942:	mov    ecx,DWORD PTR [ebp-0x14]
10048945:	mov    ebx,DWORD PTR [ebp+0x8]
10048948:	and    DWORD PTR [ebx],ecx
1004894a:	jmp    0x10048978
1004894c:	lea    ecx,[edi-0x20]
1004894f:	shr    ebx,cl
10048951:	mov    ecx,DWORD PTR [ebp-0x4]
10048954:	lea    ecx,[eax+ecx*4+0xc4]
1004895b:	lea    edi,[eax+edi*1+0x4]
1004895f:	not    ebx
10048961:	and    DWORD PTR [ecx],ebx
10048963:	dec    BYTE PTR [edi]
10048965:	mov    DWORD PTR [ebp-0x14],ebx
10048968:	jne    0x10048975
1004896a:	mov    ebx,DWORD PTR [ebp+0x8]
1004896d:	mov    ecx,DWORD PTR [ebp-0x14]
10048970:	and    DWORD PTR [ebx+0x4],ecx
10048973:	jmp    0x10048978
10048975:	mov    ebx,DWORD PTR [ebp+0x8]
10048978:	cmp    DWORD PTR [ebp-0x8],0x0
1004897c:	mov    ecx,DWORD PTR [edx+0x8]
1004897f:	mov    edi,DWORD PTR [edx+0x4]
10048982:	mov    DWORD PTR [ecx+0x4],edi
10048985:	mov    ecx,DWORD PTR [edx+0x4]
10048988:	mov    edi,DWORD PTR [edx+0x8]
1004898b:	mov    DWORD PTR [ecx+0x8],edi
1004898e:	je     0x10048a21
10048994:	mov    ecx,DWORD PTR [ebp-0xc]
10048997:	lea    ecx,[ecx+esi*8]
1004899a:	mov    edi,DWORD PTR [ecx+0x4]
1004899d:	mov    DWORD PTR [edx+0x8],ecx
100489a0:	mov    DWORD PTR [edx+0x4],edi
100489a3:	mov    DWORD PTR [ecx+0x4],edx
100489a6:	mov    ecx,DWORD PTR [edx+0x4]
100489a9:	mov    DWORD PTR [ecx+0x8],edx
100489ac:	mov    ecx,DWORD PTR [edx+0x4]
100489af:	cmp    ecx,DWORD PTR [edx+0x8]
100489b2:	jne    0x10048a12
100489b4:	mov    cl,BYTE PTR [esi+eax*1+0x4]
100489b8:	mov    BYTE PTR [ebp+0xb],cl
100489bb:	inc    cl
100489bd:	cmp    esi,0x20
100489c0:	mov    BYTE PTR [esi+eax*1+0x4],cl
100489c4:	jge    0x100489e9
100489c6:	cmp    BYTE PTR [ebp+0xb],0x0
100489ca:	jne    0x100489d7
100489cc:	mov    edi,0x80000000
100489d1:	mov    ecx,esi
100489d3:	shr    edi,cl
100489d5:	or     DWORD PTR [ebx],edi
100489d7:	mov    ecx,esi
100489d9:	mov    edi,0x80000000
100489de:	shr    edi,cl
100489e0:	mov    ecx,DWORD PTR [ebp-0x4]
100489e3:	or     DWORD PTR [eax+ecx*4+0x44],edi
100489e7:	jmp    0x10048a12
100489e9:	cmp    BYTE PTR [ebp+0xb],0x0
100489ed:	jne    0x100489fc
100489ef:	lea    ecx,[esi-0x20]
100489f2:	mov    edi,0x80000000
100489f7:	shr    edi,cl
100489f9:	or     DWORD PTR [ebx+0x4],edi
100489fc:	mov    ecx,DWORD PTR [ebp-0x4]
100489ff:	lea    edi,[eax+ecx*4+0xc4]
10048a06:	lea    ecx,[esi-0x20]
10048a09:	mov    esi,0x80000000
10048a0e:	shr    esi,cl
10048a10:	or     DWORD PTR [edi],esi
10048a12:	mov    ecx,DWORD PTR [ebp-0x8]
10048a15:	test   ecx,ecx
10048a17:	je     0x10048a24
10048a19:	mov    DWORD PTR [edx],ecx
10048a1b:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
10048a1f:	jmp    0x10048a24
10048a21:	mov    ecx,DWORD PTR [ebp-0x8]
10048a24:	mov    esi,DWORD PTR [ebp-0x10]
10048a27:	add    edx,ecx
10048a29:	lea    ecx,[esi+0x1]
10048a2c:	mov    DWORD PTR [edx],ecx
10048a2e:	mov    DWORD PTR [edx+esi*1-0x4],ecx
10048a32:	mov    esi,DWORD PTR [ebp-0xc]
10048a35:	mov    ecx,DWORD PTR [esi]
10048a37:	test   ecx,ecx
10048a39:	lea    edi,[ecx+0x1]
10048a3c:	mov    DWORD PTR [esi],edi
10048a3e:	jne    0x10048a5a
10048a40:	cmp    ebx,DWORD PTR ds:0x10081ff8
10048a46:	jne    0x10048a5a
10048a48:	mov    ecx,DWORD PTR [ebp-0x4]
10048a4b:	cmp    ecx,DWORD PTR ds:0x100845fc
10048a51:	jne    0x10048a5a
10048a53:	and    DWORD PTR ds:0x10081ff8,0x0
10048a5a:	mov    ecx,DWORD PTR [ebp-0x4]
10048a5d:	mov    DWORD PTR [eax],ecx
10048a5f:	lea    eax,[edx+0x4]
10048a62:	pop    edi
10048a63:	pop    esi
10048a64:	pop    ebx
10048a65:	leave  
10048a66:	ret    
10048a67:	push   ebp
10048a68:	mov    ebp,esp
10048a6a:	push   ecx
10048a6b:	push   esi
10048a6c:	mov    esi,DWORD PTR [ebp+0xc]
10048a6f:	push   esi
10048a70:	call   0x1004d460
10048a75:	mov    DWORD PTR [ebp+0xc],eax
10048a78:	mov    eax,DWORD PTR [esi+0xc]
10048a7b:	test   al,0x82
10048a7d:	pop    ecx
10048a7e:	jne    0x10048a97
10048a80:	call   0x10046c41
10048a85:	mov    DWORD PTR [eax],0x9
10048a8b:	or     DWORD PTR [esi+0xc],0x20
10048a8f:	or     eax,0xffffffff
10048a92:	jmp    0x10048bc4
10048a97:	test   al,0x40
10048a99:	je     0x10048aa8
10048a9b:	call   0x10046c41
10048aa0:	mov    DWORD PTR [eax],0x22
10048aa6:	jmp    0x10048a8b
10048aa8:	push   ebx
10048aa9:	xor    ebx,ebx
10048aab:	test   al,0x1
10048aad:	je     0x10048ac5
10048aaf:	test   al,0x10
10048ab1:	mov    DWORD PTR [esi+0x4],ebx
10048ab4:	je     0x10048b3f
10048aba:	mov    ecx,DWORD PTR [esi+0x8]
10048abd:	and    eax,0xfffffffe
10048ac0:	mov    DWORD PTR [esi],ecx
10048ac2:	mov    DWORD PTR [esi+0xc],eax
10048ac5:	mov    eax,DWORD PTR [esi+0xc]
10048ac8:	and    eax,0xffffffef
10048acb:	or     eax,0x2
10048ace:	test   ax,0x10c
10048ad2:	mov    DWORD PTR [esi+0xc],eax
10048ad5:	mov    DWORD PTR [esi+0x4],ebx
10048ad8:	mov    DWORD PTR [ebp-0x4],ebx
10048adb:	jne    0x10048b09
10048add:	call   0x1004d2bf
10048ae2:	add    eax,0x20
10048ae5:	cmp    esi,eax
10048ae7:	je     0x10048af5
10048ae9:	call   0x1004d2bf
10048aee:	add    eax,0x40
10048af1:	cmp    esi,eax
10048af3:	jne    0x10048b02
10048af5:	push   DWORD PTR [ebp+0xc]
10048af8:	call   0x1004d261
10048afd:	test   eax,eax
10048aff:	pop    ecx
10048b00:	jne    0x10048b09
10048b02:	push   esi
10048b03:	call   0x1004d21d
10048b08:	pop    ecx
10048b09:	test   WORD PTR [esi+0xc],0x108
10048b0f:	push   edi
10048b10:	je     0x10048b96
10048b16:	mov    eax,DWORD PTR [esi+0x8]
10048b19:	mov    edi,DWORD PTR [esi]
10048b1b:	lea    ecx,[eax+0x1]
10048b1e:	mov    DWORD PTR [esi],ecx
10048b20:	mov    ecx,DWORD PTR [esi+0x18]
10048b23:	sub    edi,eax
10048b25:	dec    ecx
10048b26:	cmp    edi,ebx
10048b28:	mov    DWORD PTR [esi+0x4],ecx
10048b2b:	jle    0x10048b4a
10048b2d:	push   edi
10048b2e:	push   eax
10048b2f:	push   DWORD PTR [ebp+0xc]
10048b32:	call   0x1004d141
10048b37:	add    esp,0xc
10048b3a:	mov    DWORD PTR [ebp-0x4],eax
10048b3d:	jmp    0x10048b8c
10048b3f:	or     eax,0x20
10048b42:	mov    DWORD PTR [esi+0xc],eax
10048b45:	or     eax,0xffffffff
10048b48:	jmp    0x10048bc3
10048b4a:	mov    ecx,DWORD PTR [ebp+0xc]
10048b4d:	cmp    ecx,0xffffffff
10048b50:	je     0x10048b6d
10048b52:	cmp    ecx,0xfffffffe
10048b55:	je     0x10048b6d
10048b57:	mov    eax,ecx
10048b59:	and    eax,0x1f
10048b5c:	mov    edx,ecx
10048b5e:	sar    edx,0x5
10048b61:	shl    eax,0x6
10048b64:	add    eax,DWORD PTR [edx*4+0x100844e0]
10048b6b:	jmp    0x10048b72
10048b6d:	mov    eax,0x100809d0
10048b72:	test   BYTE PTR [eax+0x4],0x20
10048b76:	je     0x10048b8c
10048b78:	push   0x2
10048b7a:	push   ebx
10048b7b:	push   ebx
10048b7c:	push   ecx
10048b7d:	call   0x1004ca06
10048b82:	and    eax,edx
10048b84:	add    esp,0x10
10048b87:	cmp    eax,0xffffffff
10048b8a:	je     0x10048bb1
10048b8c:	mov    eax,DWORD PTR [esi+0x8]
10048b8f:	mov    cl,BYTE PTR [ebp+0x8]
10048b92:	mov    BYTE PTR [eax],cl
10048b94:	jmp    0x10048bac
10048b96:	xor    edi,edi
10048b98:	inc    edi
10048b99:	push   edi
10048b9a:	lea    eax,[ebp+0x8]
10048b9d:	push   eax
10048b9e:	push   DWORD PTR [ebp+0xc]
10048ba1:	call   0x1004d141
10048ba6:	add    esp,0xc
10048ba9:	mov    DWORD PTR [ebp-0x4],eax
10048bac:	cmp    DWORD PTR [ebp-0x4],edi
10048baf:	je     0x10048bba
10048bb1:	or     DWORD PTR [esi+0xc],0x20
10048bb5:	or     eax,0xffffffff
10048bb8:	jmp    0x10048bc2
10048bba:	mov    eax,DWORD PTR [ebp+0x8]
10048bbd:	and    eax,0xff
10048bc2:	pop    edi
10048bc3:	pop    ebx
10048bc4:	pop    esi
10048bc5:	leave  
10048bc6:	ret    
10048bc7:	push   ebp
10048bc8:	lea    ebp,[esp-0x3f4]
10048bcf:	sub    esp,0x474
10048bd5:	mov    eax,ds:0x100801ac
10048bda:	xor    eax,ebp
10048bdc:	mov    DWORD PTR [ebp+0x3f0],eax
10048be2:	mov    eax,DWORD PTR [ebp+0x3fc]
10048be8:	push   ebx
10048be9:	mov    ebx,DWORD PTR [ebp+0x408]
10048bef:	push   esi
10048bf0:	mov    esi,DWORD PTR [ebp+0x400]
10048bf6:	push   edi
10048bf7:	push   DWORD PTR [ebp+0x404]
10048bfd:	xor    edi,edi
10048bff:	lea    ecx,[ebp-0x64]
10048c02:	mov    DWORD PTR [ebp-0x3c],eax
10048c05:	mov    DWORD PTR [ebp-0x28],ebx
10048c08:	mov    DWORD PTR [ebp-0x54],edi
10048c0b:	mov    DWORD PTR [ebp-0x14],edi
10048c0e:	mov    DWORD PTR [ebp-0x38],edi
10048c11:	mov    DWORD PTR [ebp-0x18],edi
10048c14:	mov    DWORD PTR [ebp-0x30],edi
10048c17:	mov    DWORD PTR [ebp-0x48],edi
10048c1a:	mov    DWORD PTR [ebp-0x34],edi
10048c1d:	call   0x100456a5
10048c22:	cmp    DWORD PTR [ebp-0x3c],edi
10048c25:	jne    0x10048c54
10048c27:	call   0x10046c41
10048c2c:	push   edi
10048c2d:	push   edi
10048c2e:	push   edi
10048c2f:	push   edi
10048c30:	mov    DWORD PTR [eax],0x16
10048c36:	push   edi
10048c37:	call   0x100435e1
10048c3c:	add    esp,0x14
10048c3f:	cmp    BYTE PTR [ebp-0x58],0x0
10048c43:	je     0x10048c4c
10048c45:	mov    eax,DWORD PTR [ebp-0x5c]
10048c48:	and    DWORD PTR [eax+0x70],0xfffffffd
10048c4c:	or     eax,0xffffffff
10048c4f:	jmp    0x1004949f
10048c54:	cmp    esi,edi
10048c56:	je     0x10048c27
10048c58:	movzx  edx,WORD PTR [esi]
10048c5b:	xor    ecx,ecx
10048c5d:	cmp    dx,di
10048c60:	mov    DWORD PTR [ebp-0x2c],edi
10048c63:	mov    DWORD PTR [ebp-0x20],edi
10048c66:	mov    DWORD PTR [ebp-0x50],edi
10048c69:	mov    DWORD PTR [ebp-0x24],edx
10048c6c:	je     0x1004948f
10048c72:	push   0x2
10048c74:	pop    edi
10048c75:	add    esi,edi
10048c77:	cmp    DWORD PTR [ebp-0x2c],0x0
10048c7b:	mov    DWORD PTR [ebp-0x4c],esi
10048c7e:	jl     0x1004948f
10048c84:	lea    eax,[edx-0x20]
10048c87:	cmp    ax,0x58
10048c8b:	ja     0x10048c9c
10048c8d:	movzx  eax,dx
10048c90:	movzx  eax,BYTE PTR [eax+0x10068408]
10048c97:	and    eax,0xf
10048c9a:	jmp    0x10048c9e
10048c9c:	xor    eax,eax
10048c9e:	movsx  eax,BYTE PTR [ecx+eax*8+0x10068428]
10048ca6:	push   0x7
10048ca8:	sar    eax,0x4
10048cab:	pop    ecx
10048cac:	cmp    eax,ecx
10048cae:	mov    DWORD PTR [ebp-0x68],eax
10048cb1:	ja     0x1004945d
10048cb7:	jmp    DWORD PTR [eax*4+0x100494b7]
10048cbe:	xor    eax,eax
10048cc0:	or     DWORD PTR [ebp-0x18],0xffffffff
10048cc4:	mov    DWORD PTR [ebp-0x6c],eax
10048cc7:	mov    DWORD PTR [ebp-0x48],eax
10048cca:	mov    DWORD PTR [ebp-0x38],eax
10048ccd:	mov    DWORD PTR [ebp-0x30],eax
10048cd0:	mov    DWORD PTR [ebp-0x14],eax
10048cd3:	mov    DWORD PTR [ebp-0x34],eax
10048cd6:	jmp    0x1004945d
10048cdb:	movzx  eax,dx
10048cde:	sub    eax,0x20
10048ce1:	je     0x10048d21
10048ce3:	sub    eax,0x3
10048ce6:	je     0x10048d15
10048ce8:	sub    eax,0x8
10048ceb:	je     0x10048d0c
10048ced:	sub    eax,edi
10048cef:	je     0x10048d03
10048cf1:	sub    eax,0x3
10048cf4:	jne    0x1004945d
10048cfa:	or     DWORD PTR [ebp-0x14],0x8
10048cfe:	jmp    0x1004945d
10048d03:	or     DWORD PTR [ebp-0x14],0x4
10048d07:	jmp    0x1004945d
10048d0c:	or     DWORD PTR [ebp-0x14],0x1
10048d10:	jmp    0x1004945d
10048d15:	or     DWORD PTR [ebp-0x14],0x80
10048d1c:	jmp    0x1004945d
10048d21:	or     DWORD PTR [ebp-0x14],edi
10048d24:	jmp    0x1004945d
10048d29:	cmp    dx,0x2a
10048d2d:	jne    0x10048d4f
10048d2f:	add    ebx,0x4
10048d32:	mov    DWORD PTR [ebp-0x28],ebx
10048d35:	mov    ebx,DWORD PTR [ebx-0x4]
10048d38:	test   ebx,ebx
10048d3a:	mov    DWORD PTR [ebp-0x38],ebx
10048d3d:	jge    0x1004945d
10048d43:	or     DWORD PTR [ebp-0x14],0x4
10048d47:	neg    DWORD PTR [ebp-0x38]
10048d4a:	jmp    0x1004945d
10048d4f:	mov    eax,DWORD PTR [ebp-0x38]
10048d52:	imul   eax,eax,0xa
10048d55:	movzx  ecx,dx
10048d58:	lea    eax,[eax+ecx*1-0x30]
10048d5c:	mov    DWORD PTR [ebp-0x38],eax
10048d5f:	jmp    0x1004945d
10048d64:	and    DWORD PTR [ebp-0x18],0x0
10048d68:	jmp    0x1004945d
10048d6d:	cmp    dx,0x2a
10048d71:	jne    0x10048d90
10048d73:	add    ebx,0x4
10048d76:	mov    DWORD PTR [ebp-0x28],ebx
10048d79:	mov    ebx,DWORD PTR [ebx-0x4]
10048d7c:	test   ebx,ebx
10048d7e:	mov    DWORD PTR [ebp-0x18],ebx
10048d81:	jge    0x1004945d
10048d87:	or     DWORD PTR [ebp-0x18],0xffffffff
10048d8b:	jmp    0x1004945d
10048d90:	mov    eax,DWORD PTR [ebp-0x18]
10048d93:	imul   eax,eax,0xa
10048d96:	movzx  ecx,dx
10048d99:	lea    eax,[eax+ecx*1-0x30]
10048d9d:	mov    DWORD PTR [ebp-0x18],eax
10048da0:	jmp    0x1004945d
10048da5:	movzx  eax,dx
10048da8:	cmp    eax,0x49
10048dab:	je     0x10048df5
10048dad:	cmp    eax,0x68
10048db0:	je     0x10048dec
10048db2:	cmp    eax,0x6c
10048db5:	je     0x10048dcc
10048db7:	cmp    eax,0x77
10048dba:	jne    0x1004945d
10048dc0:	or     DWORD PTR [ebp-0x14],0x800
10048dc7:	jmp    0x1004945d
10048dcc:	cmp    WORD PTR [esi],0x6c
10048dd0:	jne    0x10048de3
10048dd2:	add    esi,edi
10048dd4:	or     DWORD PTR [ebp-0x14],0x1000
10048ddb:	mov    DWORD PTR [ebp-0x4c],esi
10048dde:	jmp    0x1004945d
10048de3:	or     DWORD PTR [ebp-0x14],0x10
10048de7:	jmp    0x1004945d
10048dec:	or     DWORD PTR [ebp-0x14],0x20
10048df0:	jmp    0x1004945d
10048df5:	movzx  eax,WORD PTR [esi]
10048df8:	cmp    ax,0x36
10048dfc:	jne    0x10048e17
10048dfe:	cmp    WORD PTR [esi+0x2],0x34
10048e03:	jne    0x10048e17
10048e05:	add    esi,0x4
10048e08:	or     DWORD PTR [ebp-0x14],0x8000
10048e0f:	mov    DWORD PTR [ebp-0x4c],esi
10048e12:	jmp    0x1004945d
10048e17:	cmp    ax,0x33
10048e1b:	jne    0x10048e36
10048e1d:	cmp    WORD PTR [esi+0x2],0x32
10048e22:	jne    0x10048e36
10048e24:	add    esi,0x4
10048e27:	and    DWORD PTR [ebp-0x14],0xffff7fff
10048e2e:	mov    DWORD PTR [ebp-0x4c],esi
10048e31:	jmp    0x1004945d
10048e36:	cmp    ax,0x64
10048e3a:	je     0x1004945d
10048e40:	cmp    ax,0x69
10048e44:	je     0x1004945d
10048e4a:	cmp    ax,0x6f
10048e4e:	je     0x1004945d
10048e54:	cmp    ax,0x75
10048e58:	je     0x1004945d
10048e5e:	cmp    ax,0x78
10048e62:	je     0x1004945d
10048e68:	cmp    ax,0x58
10048e6c:	je     0x1004945d
10048e72:	and    DWORD PTR [ebp-0x68],0x0
10048e76:	mov    eax,DWORD PTR [ebp-0x3c]
10048e79:	push   edx
10048e7a:	lea    esi,[ebp-0x2c]
10048e7d:	mov    DWORD PTR [ebp-0x34],0x1
10048e84:	call   0x100494d7
10048e89:	jmp    0x1004945c
10048e8e:	movzx  eax,dx
10048e91:	cmp    eax,0x64
10048e94:	jg     0x10049041
10048e9a:	je     0x100490c0
10048ea0:	cmp    eax,0x53
10048ea3:	jg     0x10048f80
10048ea9:	je     0x10048f0a
10048eab:	sub    eax,0x41
10048eae:	je     0x10048ec0
10048eb0:	sub    eax,edi
10048eb2:	je     0x10048ef5
10048eb4:	sub    eax,edi
10048eb6:	je     0x10048ec0
10048eb8:	sub    eax,edi
10048eba:	jne    0x10049341
10048ec0:	add    edx,0x20
10048ec3:	mov    DWORD PTR [ebp-0x6c],0x1
10048eca:	mov    DWORD PTR [ebp-0x24],edx
10048ecd:	or     DWORD PTR [ebp-0x14],0x40
10048ed1:	cmp    DWORD PTR [ebp-0x18],0x0
10048ed5:	lea    esi,[ebp-0x10]
10048ed8:	mov    eax,0x200
10048edd:	mov    DWORD PTR [ebp-0x1c],esi
10048ee0:	mov    DWORD PTR [ebp-0x20],eax
10048ee3:	jge    0x100490e4
10048ee9:	mov    DWORD PTR [ebp-0x18],0x6
10048ef0:	jmp    0x10049131
10048ef5:	test   WORD PTR [ebp-0x14],0x830
10048efb:	jne    0x10048f9d
10048f01:	or     DWORD PTR [ebp-0x14],0x20
10048f05:	jmp    0x10048f9d
10048f0a:	test   WORD PTR [ebp-0x14],0x830
10048f10:	jne    0x10048f16
10048f12:	or     DWORD PTR [ebp-0x14],0x20
10048f16:	mov    edi,DWORD PTR [ebp-0x18]
10048f19:	cmp    edi,0xffffffff
10048f1c:	jne    0x10048f23
10048f1e:	mov    edi,0x7fffffff
10048f23:	add    ebx,0x4
10048f26:	test   BYTE PTR [ebp-0x14],0x20
10048f2a:	mov    DWORD PTR [ebp-0x28],ebx
10048f2d:	mov    ebx,DWORD PTR [ebx-0x4]
10048f30:	mov    DWORD PTR [ebp-0x1c],ebx
10048f33:	je     0x10049314
10048f39:	test   ebx,ebx
10048f3b:	jne    0x10048f45
10048f3d:	mov    eax,ds:0x10080d40
10048f42:	mov    DWORD PTR [ebp-0x1c],eax
10048f45:	and    DWORD PTR [ebp-0x20],0x0
10048f49:	test   edi,edi
10048f4b:	mov    esi,DWORD PTR [ebp-0x1c]
10048f4e:	jle    0x10049341
10048f54:	mov    al,BYTE PTR [esi]
10048f56:	test   al,al
10048f58:	je     0x10049341
10048f5e:	lea    ecx,[ebp-0x64]
10048f61:	movzx  eax,al
10048f64:	push   ecx
10048f65:	push   eax
10048f66:	call   0x1004b32b
10048f6b:	test   eax,eax
10048f6d:	pop    ecx
10048f6e:	pop    ecx
10048f6f:	je     0x10048f72
10048f71:	inc    esi
10048f72:	inc    esi
10048f73:	inc    DWORD PTR [ebp-0x20]
10048f76:	cmp    DWORD PTR [ebp-0x20],edi
10048f79:	jl     0x10048f54
10048f7b:	jmp    0x10049341
10048f80:	sub    eax,0x58
10048f83:	je     0x100491cc
10048f89:	sub    eax,edi
10048f8b:	je     0x10048ff4
10048f8d:	sub    eax,ecx
10048f8f:	je     0x10048ecd
10048f95:	sub    eax,edi
10048f97:	jne    0x10049341
10048f9d:	movzx  eax,WORD PTR [ebx]
10048fa0:	add    ebx,0x4
10048fa3:	xor    esi,esi
10048fa5:	inc    esi
10048fa6:	test   BYTE PTR [ebp-0x14],0x20
10048faa:	mov    DWORD PTR [ebp-0x34],esi
10048fad:	mov    DWORD PTR [ebp-0x28],ebx
10048fb0:	mov    DWORD PTR [ebp-0x70],eax
10048fb3:	je     0x10048fe2
10048fb5:	mov    BYTE PTR [ebp-0x40],al
10048fb8:	lea    eax,[ebp-0x64]
10048fbb:	push   eax
10048fbc:	mov    eax,DWORD PTR [ebp-0x64]
10048fbf:	mov    BYTE PTR [ebp-0x3f],0x0
10048fc3:	push   DWORD PTR [eax+0xac]
10048fc9:	lea    eax,[ebp-0x40]
10048fcc:	push   eax
10048fcd:	lea    eax,[ebp-0x10]
10048fd0:	push   eax
10048fd1:	call   0x1004e0b6
10048fd6:	add    esp,0x10
10048fd9:	test   eax,eax
10048fdb:	jge    0x10048fe6
10048fdd:	mov    DWORD PTR [ebp-0x48],esi
10048fe0:	jmp    0x10048fe6
10048fe2:	mov    WORD PTR [ebp-0x10],ax
10048fe6:	lea    eax,[ebp-0x10]
10048fe9:	mov    DWORD PTR [ebp-0x1c],eax
10048fec:	mov    DWORD PTR [ebp-0x20],esi
10048fef:	jmp    0x10049341
10048ff4:	mov    eax,DWORD PTR [ebx]
10048ff6:	add    ebx,0x4
10048ff9:	test   eax,eax
10048ffb:	mov    DWORD PTR [ebp-0x28],ebx
10048ffe:	je     0x1004902d
10049000:	mov    ecx,DWORD PTR [eax+0x4]
10049003:	test   ecx,ecx
10049005:	je     0x1004902d
10049007:	test   WORD PTR [ebp-0x14],0x800
1004900d:	movsx  eax,WORD PTR [eax]
10049010:	mov    DWORD PTR [ebp-0x1c],ecx
10049013:	je     0x10049024
10049015:	cdq    
10049016:	sub    eax,edx
10049018:	mov    DWORD PTR [ebp-0x34],0x1
1004901f:	jmp    0x1004933c
10049024:	and    DWORD PTR [ebp-0x34],0x0
10049028:	jmp    0x1004933e
1004902d:	mov    eax,ds:0x10080d40
10049032:	mov    DWORD PTR [ebp-0x1c],eax
10049035:	push   eax
10049036:	call   0x10043450
1004903b:	pop    ecx
1004903c:	jmp    0x1004933e
10049041:	cmp    eax,0x70
10049044:	jg     0x100491d1
1004904a:	je     0x100491c5
10049050:	cmp    eax,0x65
10049053:	jl     0x10049341
10049059:	cmp    eax,0x67
1004905c:	jle    0x10048ecd
10049062:	cmp    eax,0x69
10049065:	je     0x100490c0
10049067:	cmp    eax,0x6e
1004906a:	je     0x1004908b
1004906c:	cmp    eax,0x6f
1004906f:	jne    0x10049341
10049075:	test   BYTE PTR [ebp-0x14],0x80
10049079:	mov    DWORD PTR [ebp-0x24],0x8
10049080:	je     0x100490cb
10049082:	or     DWORD PTR [ebp-0x14],0x200
10049089:	jmp    0x100490cb
1004908b:	mov    esi,DWORD PTR [ebx]
1004908d:	add    ebx,0x4
10049090:	mov    DWORD PTR [ebp-0x28],ebx
10049093:	call   0x1004e0a0
10049098:	test   eax,eax
1004909a:	je     0x10049478
100490a0:	test   BYTE PTR [ebp-0x14],0x20
100490a4:	je     0x100490af
100490a6:	mov    ax,WORD PTR [ebp-0x2c]
100490aa:	mov    WORD PTR [esi],ax
100490ad:	jmp    0x100490b4
100490af:	mov    eax,DWORD PTR [ebp-0x2c]
100490b2:	mov    DWORD PTR [esi],eax
100490b4:	mov    DWORD PTR [ebp-0x48],0x1
100490bb:	jmp    0x1004944a
100490c0:	or     DWORD PTR [ebp-0x14],0x40
100490c4:	mov    DWORD PTR [ebp-0x24],0xa
100490cb:	test   WORD PTR [ebp-0x14],0x8000
100490d1:	je     0x1004921b
100490d7:	mov    eax,DWORD PTR [ebx]
100490d9:	mov    edx,DWORD PTR [ebx+0x4]
100490dc:	add    ebx,0x8
100490df:	jmp    0x10049254
100490e4:	jne    0x100490f5
100490e6:	cmp    dx,0x67
100490ea:	jne    0x10049131
100490ec:	mov    DWORD PTR [ebp-0x18],0x1
100490f3:	jmp    0x10049131
100490f5:	cmp    DWORD PTR [ebp-0x18],eax
100490f8:	jle    0x100490fd
100490fa:	mov    DWORD PTR [ebp-0x18],eax
100490fd:	cmp    DWORD PTR [ebp-0x18],0xa3
10049104:	jle    0x10049131
10049106:	mov    edi,DWORD PTR [ebp-0x18]
10049109:	add    edi,0x15d
1004910f:	push   edi
10049110:	call   0x100472aa
10049115:	test   eax,eax
10049117:	mov    edx,DWORD PTR [ebp-0x24]
1004911a:	pop    ecx
1004911b:	mov    DWORD PTR [ebp-0x50],eax
1004911e:	je     0x1004912a
10049120:	mov    DWORD PTR [ebp-0x1c],eax
10049123:	mov    DWORD PTR [ebp-0x20],edi
10049126:	mov    esi,eax
10049128:	jmp    0x10049131
1004912a:	mov    DWORD PTR [ebp-0x18],0xa3
10049131:	mov    eax,DWORD PTR [ebx]
10049133:	add    ebx,0x8
10049136:	mov    DWORD PTR [ebp-0x78],eax
10049139:	mov    eax,DWORD PTR [ebx-0x4]
1004913c:	mov    DWORD PTR [ebp-0x74],eax
1004913f:	lea    eax,[ebp-0x64]
10049142:	push   eax
10049143:	push   DWORD PTR [ebp-0x6c]
10049146:	movsx  eax,dl
10049149:	push   DWORD PTR [ebp-0x18]
1004914c:	mov    DWORD PTR [ebp-0x28],ebx
1004914f:	push   eax
10049150:	push   DWORD PTR [ebp-0x20]
10049153:	lea    eax,[ebp-0x78]
10049156:	push   esi
10049157:	push   eax
10049158:	push   DWORD PTR ds:0x10080ab0
1004915e:	call   0x10046d68
10049163:	pop    ecx
10049164:	call   eax
10049166:	mov    ebx,DWORD PTR [ebp-0x14]
10049169:	add    esp,0x1c
1004916c:	and    ebx,0x80
10049172:	je     0x1004918f
10049174:	cmp    DWORD PTR [ebp-0x18],0x0
10049178:	jne    0x1004918f
1004917a:	lea    eax,[ebp-0x64]
1004917d:	push   eax
1004917e:	push   esi
1004917f:	push   DWORD PTR ds:0x10080abc
10049185:	call   0x10046d68
1004918a:	pop    ecx
1004918b:	call   eax
1004918d:	pop    ecx
1004918e:	pop    ecx
1004918f:	cmp    WORD PTR [ebp-0x24],0x67
10049194:	jne    0x100491af
10049196:	test   ebx,ebx
10049198:	jne    0x100491af
1004919a:	lea    eax,[ebp-0x64]
1004919d:	push   eax
1004919e:	push   esi
1004919f:	push   DWORD PTR ds:0x10080ab8
100491a5:	call   0x10046d68
100491aa:	pop    ecx
100491ab:	call   eax
100491ad:	pop    ecx
100491ae:	pop    ecx
100491af:	cmp    BYTE PTR [esi],0x2d
100491b2:	jne    0x100491bf
100491b4:	or     DWORD PTR [ebp-0x14],0x100
100491bb:	inc    esi
100491bc:	mov    DWORD PTR [ebp-0x1c],esi
100491bf:	push   esi
100491c0:	jmp    0x10049036
100491c5:	mov    DWORD PTR [ebp-0x18],0x8
100491cc:	mov    DWORD PTR [ebp-0x54],ecx
100491cf:	jmp    0x100491f2
100491d1:	sub    eax,0x73
100491d4:	je     0x10048f16
100491da:	sub    eax,edi
100491dc:	je     0x100490c4
100491e2:	sub    eax,0x3
100491e5:	jne    0x10049341
100491eb:	mov    DWORD PTR [ebp-0x54],0x27
100491f2:	test   BYTE PTR [ebp-0x14],0x80
100491f6:	mov    DWORD PTR [ebp-0x24],0x10
100491fd:	je     0x100490cb
10049203:	mov    eax,DWORD PTR [ebp-0x54]
10049206:	add    eax,0x51
10049209:	mov    WORD PTR [ebp-0x44],0x30
1004920f:	mov    WORD PTR [ebp-0x42],ax
10049213:	mov    DWORD PTR [ebp-0x30],edi
10049216:	jmp    0x100490cb
1004921b:	test   WORD PTR [ebp-0x14],0x1000
10049221:	jne    0x100490d7
10049227:	add    ebx,0x4
1004922a:	test   BYTE PTR [ebp-0x14],0x20
1004922e:	je     0x10049246
10049230:	test   BYTE PTR [ebp-0x14],0x40
10049234:	mov    DWORD PTR [ebp-0x28],ebx
10049237:	je     0x1004923f
10049239:	movsx  eax,WORD PTR [ebx-0x4]
1004923d:	jmp    0x10049243
1004923f:	movzx  eax,WORD PTR [ebx-0x4]
10049243:	cdq    
10049244:	jmp    0x10049257
10049246:	test   BYTE PTR [ebp-0x14],0x40
1004924a:	mov    eax,DWORD PTR [ebx-0x4]
1004924d:	je     0x10049252
1004924f:	cdq    
10049250:	jmp    0x10049254
10049252:	xor    edx,edx
10049254:	mov    DWORD PTR [ebp-0x28],ebx
10049257:	test   BYTE PTR [ebp-0x14],0x40
1004925b:	je     0x10049275
1004925d:	test   edx,edx
1004925f:	jg     0x10049275
10049261:	jl     0x10049267
10049263:	test   eax,eax
10049265:	jae    0x10049275
10049267:	neg    eax
10049269:	adc    edx,0x0
1004926c:	neg    edx
1004926e:	or     DWORD PTR [ebp-0x14],0x100
10049275:	test   WORD PTR [ebp-0x14],0x9000
1004927b:	mov    ebx,edx
1004927d:	mov    edi,eax
1004927f:	jne    0x10049283
10049281:	xor    ebx,ebx
10049283:	cmp    DWORD PTR [ebp-0x18],0x0
10049287:	jge    0x10049292
10049289:	mov    DWORD PTR [ebp-0x18],0x1
10049290:	jmp    0x100492a3
10049292:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049296:	mov    eax,0x200
1004929b:	cmp    DWORD PTR [ebp-0x18],eax
1004929e:	jle    0x100492a3
100492a0:	mov    DWORD PTR [ebp-0x18],eax
100492a3:	mov    eax,edi
100492a5:	or     eax,ebx
100492a7:	jne    0x100492ac
100492a9:	and    DWORD PTR [ebp-0x30],eax
100492ac:	lea    esi,[ebp+0x1ef]
100492b2:	mov    eax,DWORD PTR [ebp-0x18]
100492b5:	dec    DWORD PTR [ebp-0x18]
100492b8:	test   eax,eax
100492ba:	jg     0x100492c2
100492bc:	mov    eax,edi
100492be:	or     eax,ebx
100492c0:	je     0x100492e6
100492c2:	mov    eax,DWORD PTR [ebp-0x24]
100492c5:	cdq    
100492c6:	push   edx
100492c7:	push   eax
100492c8:	push   ebx
100492c9:	push   edi
100492ca:	call   0x1004acb0
100492cf:	add    ecx,0x30
100492d2:	cmp    ecx,0x39
100492d5:	mov    DWORD PTR [ebp-0x7c],ebx
100492d8:	mov    edi,eax
100492da:	mov    ebx,edx
100492dc:	jle    0x100492e1
100492de:	add    ecx,DWORD PTR [ebp-0x54]
100492e1:	mov    BYTE PTR [esi],cl
100492e3:	dec    esi
100492e4:	jmp    0x100492b2
100492e6:	lea    eax,[ebp+0x1ef]
100492ec:	sub    eax,esi
100492ee:	inc    esi
100492ef:	test   WORD PTR [ebp-0x14],0x200
100492f5:	mov    DWORD PTR [ebp-0x20],eax
100492f8:	mov    DWORD PTR [ebp-0x1c],esi
100492fb:	je     0x10049341
100492fd:	test   eax,eax
100492ff:	je     0x10049308
10049301:	mov    ecx,esi
10049303:	cmp    BYTE PTR [ecx],0x30
10049306:	je     0x10049341
10049308:	dec    DWORD PTR [ebp-0x1c]
1004930b:	mov    ecx,DWORD PTR [ebp-0x1c]
1004930e:	mov    BYTE PTR [ecx],0x30
10049311:	inc    eax
10049312:	jmp    0x1004933e
10049314:	test   ebx,ebx
10049316:	jne    0x10049320
10049318:	mov    eax,ds:0x10080d44
1004931d:	mov    DWORD PTR [ebp-0x1c],eax
10049320:	mov    eax,DWORD PTR [ebp-0x1c]
10049323:	mov    DWORD PTR [ebp-0x34],0x1
1004932a:	jmp    0x10049335
1004932c:	dec    edi
1004932d:	cmp    WORD PTR [eax],0x0
10049331:	je     0x10049339
10049333:	inc    eax
10049334:	inc    eax
10049335:	test   edi,edi
10049337:	jne    0x1004932c
10049339:	sub    eax,DWORD PTR [ebp-0x1c]
1004933c:	sar    eax,1
1004933e:	mov    DWORD PTR [ebp-0x20],eax
10049341:	cmp    DWORD PTR [ebp-0x48],0x0
10049345:	jne    0x1004944a
1004934b:	mov    eax,DWORD PTR [ebp-0x14]
1004934e:	test   al,0x40
10049350:	je     0x1004937d
10049352:	test   ax,0x100
10049356:	je     0x10049360
10049358:	mov    WORD PTR [ebp-0x44],0x2d
1004935e:	jmp    0x10049376
10049360:	test   al,0x1
10049362:	je     0x1004936c
10049364:	mov    WORD PTR [ebp-0x44],0x2b
1004936a:	jmp    0x10049376
1004936c:	test   al,0x2
1004936e:	je     0x1004937d
10049370:	mov    WORD PTR [ebp-0x44],0x20
10049376:	mov    DWORD PTR [ebp-0x30],0x1
1004937d:	mov    ebx,DWORD PTR [ebp-0x38]
10049380:	mov    esi,DWORD PTR [ebp-0x20]
10049383:	sub    ebx,esi
10049385:	sub    ebx,DWORD PTR [ebp-0x30]
10049388:	test   BYTE PTR [ebp-0x14],0xc
1004938c:	jne    0x1004939f
1004938e:	push   DWORD PTR [ebp-0x3c]
10049391:	lea    eax,[ebp-0x2c]
10049394:	push   ebx
10049395:	push   0x20
10049397:	call   0x100494fc
1004939c:	add    esp,0xc
1004939f:	push   DWORD PTR [ebp-0x30]
100493a2:	mov    edi,DWORD PTR [ebp-0x3c]
100493a5:	lea    eax,[ebp-0x2c]
100493a8:	lea    ecx,[ebp-0x44]
100493ab:	call   0x10049521
100493b0:	test   BYTE PTR [ebp-0x14],0x8
100493b4:	pop    ecx
100493b5:	je     0x100493cc
100493b7:	test   BYTE PTR [ebp-0x14],0x4
100493bb:	jne    0x100493cc
100493bd:	push   edi
100493be:	push   ebx
100493bf:	push   0x30
100493c1:	lea    eax,[ebp-0x2c]
100493c4:	call   0x100494fc
100493c9:	add    esp,0xc
100493cc:	cmp    DWORD PTR [ebp-0x34],0x0
100493d0:	jne    0x10049420
100493d2:	test   esi,esi
100493d4:	jle    0x10049420
100493d6:	mov    edi,DWORD PTR [ebp-0x1c]
100493d9:	mov    DWORD PTR [ebp-0x24],esi
100493dc:	dec    DWORD PTR [ebp-0x24]
100493df:	lea    eax,[ebp-0x64]
100493e2:	push   eax
100493e3:	mov    eax,DWORD PTR [ebp-0x64]
100493e6:	push   DWORD PTR [eax+0xac]
100493ec:	lea    eax,[ebp-0x70]
100493ef:	push   edi
100493f0:	push   eax
100493f1:	call   0x1004e0b6
100493f6:	add    esp,0x10
100493f9:	test   eax,eax
100493fb:	mov    DWORD PTR [ebp-0x7c],eax
100493fe:	jle    0x1004941a
10049400:	push   DWORD PTR [ebp-0x70]
10049403:	mov    eax,DWORD PTR [ebp-0x3c]
10049406:	lea    esi,[ebp-0x2c]
10049409:	call   0x100494d7
1004940e:	add    edi,DWORD PTR [ebp-0x7c]
10049411:	cmp    DWORD PTR [ebp-0x24],0x0
10049415:	pop    ecx
10049416:	jg     0x100493dc
10049418:	jmp    0x1004942d
1004941a:	or     DWORD PTR [ebp-0x2c],0xffffffff
1004941e:	jmp    0x1004942d
10049420:	mov    ecx,DWORD PTR [ebp-0x1c]
10049423:	push   esi
10049424:	lea    eax,[ebp-0x2c]
10049427:	call   0x10049521
1004942c:	pop    ecx
1004942d:	cmp    DWORD PTR [ebp-0x2c],0x0
10049431:	jl     0x1004944a
10049433:	test   BYTE PTR [ebp-0x14],0x4
10049437:	je     0x1004944a
10049439:	push   DWORD PTR [ebp-0x3c]
1004943c:	lea    eax,[ebp-0x2c]
1004943f:	push   ebx
10049440:	push   0x20
10049442:	call   0x100494fc
10049447:	add    esp,0xc
1004944a:	cmp    DWORD PTR [ebp-0x50],0x0
1004944e:	je     0x1004945d
10049450:	push   DWORD PTR [ebp-0x50]
10049453:	call   0x100437dc
10049458:	and    DWORD PTR [ebp-0x50],0x0
1004945c:	pop    ecx
1004945d:	mov    esi,DWORD PTR [ebp-0x4c]
10049460:	movzx  eax,WORD PTR [esi]
10049463:	test   ax,ax
10049466:	mov    DWORD PTR [ebp-0x24],eax
10049469:	je     0x1004948f
1004946b:	mov    ecx,DWORD PTR [ebp-0x68]
1004946e:	mov    ebx,DWORD PTR [ebp-0x28]
10049471:	mov    edx,eax
10049473:	jmp    0x10048c72
10049478:	call   0x10046c41
1004947d:	mov    DWORD PTR [eax],0x16
10049483:	xor    eax,eax
10049485:	push   eax
10049486:	push   eax
10049487:	push   eax
10049488:	push   eax
10049489:	push   eax
1004948a:	jmp    0x10048c37
1004948f:	cmp    BYTE PTR [ebp-0x58],0x0
10049493:	je     0x1004949c
10049495:	mov    eax,DWORD PTR [ebp-0x5c]
10049498:	and    DWORD PTR [eax+0x70],0xfffffffd
1004949c:	mov    eax,DWORD PTR [ebp-0x2c]
1004949f:	mov    ecx,DWORD PTR [ebp+0x3f0]
100494a5:	pop    edi
100494a6:	pop    esi
100494a7:	xor    ecx,ebp
100494a9:	pop    ebx
100494aa:	call   0x10043615
100494af:	add    ebp,0x3f4
100494b5:	leave  
100494b6:	ret    
100494b7:	jbe    0x10049447
100494b9:	add    al,0x10
100494bb:	mov    esi,0xdb10048c
100494c0:	mov    WORD PTR [eax+edx*1],es
100494c3:	sub    DWORD PTR [ebp-0x729beffc],ecx
100494c9:	add    al,0x10
100494cb:	ins    DWORD PTR es:[edi],dx
100494cc:	lea    eax,[eax+edx*1]
100494cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100494d0:	lea    eax,[eax+edx*1]
100494d3:	mov    cs,WORD PTR [esi+0x40f61004]
100494d9:	or     al,0x40
100494db:	je     0x100494e3
100494dd:	cmp    DWORD PTR [eax+0x8],0x0
100494e1:	je     0x100494f9
100494e3:	push   eax
100494e4:	push   DWORD PTR [esp+0x8]
100494e8:	call   0x1004d48d
100494ed:	cmp    ax,0xffff
100494f1:	pop    ecx
100494f2:	pop    ecx
100494f3:	jne    0x100494f9
100494f5:	or     DWORD PTR [esi],0xffffffff
100494f8:	ret    
100494f9:	inc    DWORD PTR [esi]
100494fb:	ret    
100494fc:	push   ebp
100494fd:	mov    ebp,esp
100494ff:	push   esi
10049500:	mov    esi,eax
10049502:	jmp    0x10049518
10049504:	push   DWORD PTR [ebp+0x8]
10049507:	mov    eax,DWORD PTR [ebp+0x10]
1004950a:	dec    DWORD PTR [ebp+0xc]
1004950d:	call   0x100494d7
10049512:	cmp    DWORD PTR [esi],0xffffffff
10049515:	pop    ecx
10049516:	je     0x1004951e
10049518:	cmp    DWORD PTR [ebp+0xc],0x0
1004951c:	jg     0x10049504
1004951e:	pop    esi
1004951f:	pop    ebp
10049520:	ret    
10049521:	test   BYTE PTR [edi+0xc],0x40
10049525:	push   ebx
10049526:	push   esi
10049527:	mov    esi,eax
10049529:	mov    ebx,ecx
1004952b:	je     0x10049566
1004952d:	cmp    DWORD PTR [edi+0x8],0x0
10049531:	jne    0x10049566
10049533:	mov    eax,DWORD PTR [esp+0xc]
10049537:	add    DWORD PTR [esi],eax
10049539:	jmp    0x1004956d
1004953b:	movzx  eax,WORD PTR [ebx]
1004953e:	dec    DWORD PTR [esp+0xc]
10049542:	push   eax
10049543:	mov    eax,edi
10049545:	call   0x100494d7
1004954a:	inc    ebx
1004954b:	inc    ebx
1004954c:	cmp    DWORD PTR [esi],0xffffffff
1004954f:	pop    ecx
10049550:	jne    0x10049566
10049552:	call   0x10046c41
10049557:	cmp    DWORD PTR [eax],0x2a
1004955a:	jne    0x1004956d
1004955c:	push   0x3f
1004955e:	mov    eax,edi
10049560:	call   0x100494d7
10049565:	pop    ecx
10049566:	cmp    DWORD PTR [esp+0xc],0x0
1004956b:	jg     0x1004953b
1004956d:	pop    esi
1004956e:	pop    ebx
1004956f:	ret    
10049570:	push   ebp
10049571:	lea    ebp,[esp-0x3f4]
10049578:	sub    esp,0x474
1004957e:	mov    eax,ds:0x100801ac
10049583:	xor    eax,ebp
10049585:	mov    DWORD PTR [ebp+0x3f0],eax
1004958b:	push   ebx
1004958c:	mov    ebx,DWORD PTR [ebp+0x408]
10049592:	push   esi
10049593:	mov    esi,DWORD PTR [ebp+0x3fc]
10049599:	xor    eax,eax
1004959b:	push   edi
1004959c:	push   DWORD PTR [ebp+0x404]
100495a2:	mov    edi,DWORD PTR [ebp+0x400]
100495a8:	lea    ecx,[ebp-0x58]
100495ab:	mov    DWORD PTR [ebp-0x48],esi
100495ae:	mov    DWORD PTR [ebp-0x24],ebx
100495b1:	mov    DWORD PTR [ebp-0x60],eax
100495b4:	mov    DWORD PTR [ebp-0x14],eax
100495b7:	mov    DWORD PTR [ebp-0x38],eax
100495ba:	mov    DWORD PTR [ebp-0x18],eax
100495bd:	mov    DWORD PTR [ebp-0x30],eax
100495c0:	mov    DWORD PTR [ebp-0x5c],eax
100495c3:	mov    DWORD PTR [ebp-0x34],eax
100495c6:	call   0x100456a5
100495cb:	test   esi,esi
100495cd:	jne    0x100495fe
100495cf:	call   0x10046c41
100495d4:	mov    DWORD PTR [eax],0x16
100495da:	xor    eax,eax
100495dc:	push   eax
100495dd:	push   eax
100495de:	push   eax
100495df:	push   eax
100495e0:	push   eax
100495e1:	call   0x100435e1
100495e6:	add    esp,0x14
100495e9:	cmp    BYTE PTR [ebp-0x4c],0x0
100495ed:	je     0x100495f6
100495ef:	mov    eax,DWORD PTR [ebp-0x50]
100495f2:	and    DWORD PTR [eax+0x70],0xfffffffd
100495f6:	or     eax,0xffffffff
100495f9:	jmp    0x10049e54
100495fe:	xor    esi,esi
10049600:	cmp    edi,esi
10049602:	jne    0x10049616
10049604:	call   0x10046c41
10049609:	push   esi
1004960a:	push   esi
1004960b:	push   esi
1004960c:	push   esi
1004960d:	mov    DWORD PTR [eax],0x16
10049613:	push   esi
10049614:	jmp    0x100495e1
10049616:	movzx  ecx,WORD PTR [edi]
10049619:	cmp    cx,si
1004961c:	mov    DWORD PTR [ebp-0x2c],esi
1004961f:	mov    DWORD PTR [ebp-0x20],esi
10049622:	mov    DWORD PTR [ebp-0x40],esi
10049625:	mov    DWORD PTR [ebp-0x64],esi
10049628:	mov    DWORD PTR [ebp-0x28],ecx
1004962b:	je     0x10049e44
10049631:	push   0x2
10049633:	pop    esi
10049634:	add    edi,esi
10049636:	xor    eax,eax
10049638:	cmp    DWORD PTR [ebp-0x2c],eax
1004963b:	mov    DWORD PTR [ebp-0x6c],edi
1004963e:	jl     0x10049e34
10049644:	lea    edx,[ecx-0x20]
10049647:	cmp    dx,0x58
1004964b:	ja     0x1004965a
1004964d:	movzx  eax,cx
10049650:	movzx  eax,BYTE PTR [eax+0x10068468]
10049657:	and    eax,0xf
1004965a:	mov    edx,DWORD PTR [ebp-0x40]
1004965d:	imul   eax,eax,0x9
10049660:	movzx  eax,BYTE PTR [eax+edx*1+0x10068488]
10049668:	push   0x8
1004966a:	shr    eax,0x4
1004966d:	pop    edx
1004966e:	cmp    eax,edx
10049670:	mov    DWORD PTR [ebp-0x40],eax
10049673:	je     0x100495cf
10049679:	cmp    eax,0x7
1004967c:	ja     0x10049e1c
10049682:	jmp    DWORD PTR [eax*4+0x10049e6c]
10049689:	xor    eax,eax
1004968b:	or     DWORD PTR [ebp-0x18],0xffffffff
1004968f:	mov    DWORD PTR [ebp-0x68],eax
10049692:	mov    DWORD PTR [ebp-0x5c],eax
10049695:	mov    DWORD PTR [ebp-0x38],eax
10049698:	mov    DWORD PTR [ebp-0x30],eax
1004969b:	mov    DWORD PTR [ebp-0x14],eax
1004969e:	mov    DWORD PTR [ebp-0x34],eax
100496a1:	jmp    0x10049e22
100496a6:	movzx  eax,cx
100496a9:	sub    eax,0x20
100496ac:	je     0x100496ea
100496ae:	sub    eax,0x3
100496b1:	je     0x100496de
100496b3:	sub    eax,edx
100496b5:	je     0x100496d5
100496b7:	sub    eax,esi
100496b9:	je     0x100496cc
100496bb:	sub    eax,0x3
100496be:	jne    0x10049e1c
100496c4:	or     DWORD PTR [ebp-0x14],edx
100496c7:	jmp    0x10049e22
100496cc:	or     DWORD PTR [ebp-0x14],0x4
100496d0:	jmp    0x10049e22
100496d5:	or     DWORD PTR [ebp-0x14],0x1
100496d9:	jmp    0x10049e22
100496de:	or     DWORD PTR [ebp-0x14],0x80
100496e5:	jmp    0x10049e22
100496ea:	or     DWORD PTR [ebp-0x14],esi
100496ed:	jmp    0x10049e22
100496f2:	cmp    cx,0x2a
100496f6:	jne    0x10049717
100496f8:	mov    eax,DWORD PTR [ebx]
100496fa:	add    ebx,0x4
100496fd:	test   eax,eax
100496ff:	mov    DWORD PTR [ebp-0x24],ebx
10049702:	mov    DWORD PTR [ebp-0x38],eax
10049705:	jge    0x10049e22
1004970b:	or     DWORD PTR [ebp-0x14],0x4
1004970f:	neg    DWORD PTR [ebp-0x38]
10049712:	jmp    0x10049e22
10049717:	mov    eax,DWORD PTR [ebp-0x38]
1004971a:	imul   eax,eax,0xa
1004971d:	movzx  ecx,cx
10049720:	lea    eax,[eax+ecx*1-0x30]
10049724:	mov    DWORD PTR [ebp-0x38],eax
10049727:	jmp    0x10049e22
1004972c:	and    DWORD PTR [ebp-0x18],0x0
10049730:	jmp    0x10049e22
10049735:	cmp    cx,0x2a
10049739:	jne    0x10049757
1004973b:	mov    eax,DWORD PTR [ebx]
1004973d:	add    ebx,0x4
10049740:	test   eax,eax
10049742:	mov    DWORD PTR [ebp-0x24],ebx
10049745:	mov    DWORD PTR [ebp-0x18],eax
10049748:	jge    0x10049e22
1004974e:	or     DWORD PTR [ebp-0x18],0xffffffff
10049752:	jmp    0x10049e22
10049757:	mov    eax,DWORD PTR [ebp-0x18]
1004975a:	imul   eax,eax,0xa
1004975d:	movzx  ecx,cx
10049760:	lea    eax,[eax+ecx*1-0x30]
10049764:	mov    DWORD PTR [ebp-0x18],eax
10049767:	jmp    0x10049e22
1004976c:	movzx  eax,cx
1004976f:	cmp    eax,0x49
10049772:	je     0x100497b9
10049774:	cmp    eax,0x68
10049777:	je     0x100497b0
10049779:	cmp    eax,0x6c
1004977c:	je     0x10049793
1004977e:	cmp    eax,0x77
10049781:	jne    0x10049e22
10049787:	or     DWORD PTR [ebp-0x14],0x800
1004978e:	jmp    0x10049e22
10049793:	cmp    WORD PTR [edi],0x6c
10049797:	jne    0x100497a7
10049799:	add    edi,esi
1004979b:	or     DWORD PTR [ebp-0x14],0x1000
100497a2:	jmp    0x10049e22
100497a7:	or     DWORD PTR [ebp-0x14],0x10
100497ab:	jmp    0x10049e22
100497b0:	or     DWORD PTR [ebp-0x14],0x20
100497b4:	jmp    0x10049e22
100497b9:	movzx  eax,WORD PTR [edi]
100497bc:	cmp    ax,0x36
100497c0:	jne    0x100497d8
100497c2:	cmp    WORD PTR [edi+0x2],0x34
100497c7:	jne    0x100497d8
100497c9:	add    edi,0x4
100497cc:	or     DWORD PTR [ebp-0x14],0x8000
100497d3:	jmp    0x10049e22
100497d8:	cmp    ax,0x33
100497dc:	jne    0x100497f4
100497de:	cmp    WORD PTR [edi+0x2],0x32
100497e3:	jne    0x100497f4
100497e5:	add    edi,0x4
100497e8:	and    DWORD PTR [ebp-0x14],0xffff7fff
100497ef:	jmp    0x10049e22
100497f4:	cmp    ax,0x64
100497f8:	je     0x10049e22
100497fe:	cmp    ax,0x69
10049802:	je     0x10049e22
10049808:	cmp    ax,0x6f
1004980c:	je     0x10049e22
10049812:	cmp    ax,0x75
10049816:	je     0x10049e22
1004981c:	cmp    ax,0x78
10049820:	je     0x10049e22
10049826:	cmp    ax,0x58
1004982a:	je     0x10049e22
10049830:	and    DWORD PTR [ebp-0x40],0x0
10049834:	mov    eax,DWORD PTR [ebp-0x48]
10049837:	push   ecx
10049838:	lea    esi,[ebp-0x2c]
1004983b:	mov    DWORD PTR [ebp-0x34],0x1
10049842:	call   0x100494d7
10049847:	pop    ecx
10049848:	jmp    0x10049e22
1004984d:	movzx  eax,cx
10049850:	cmp    eax,0x64
10049853:	jg     0x10049a01
10049859:	je     0x10049a7c
1004985f:	cmp    eax,0x53
10049862:	jg     0x1004993f
10049868:	je     0x100498c9
1004986a:	sub    eax,0x41
1004986d:	je     0x1004987f
1004986f:	sub    eax,esi
10049871:	je     0x100498b4
10049873:	sub    eax,esi
10049875:	je     0x1004987f
10049877:	sub    eax,esi
10049879:	jne    0x10049d00
1004987f:	add    ecx,0x20
10049882:	mov    DWORD PTR [ebp-0x68],0x1
10049889:	mov    DWORD PTR [ebp-0x28],ecx
1004988c:	or     DWORD PTR [ebp-0x14],0x40
10049890:	cmp    DWORD PTR [ebp-0x18],0x0
10049894:	lea    esi,[ebp-0x10]
10049897:	mov    eax,0x200
1004989c:	mov    DWORD PTR [ebp-0x1c],esi
1004989f:	mov    DWORD PTR [ebp-0x20],eax
100498a2:	jge    0x10049aa0
100498a8:	mov    DWORD PTR [ebp-0x18],0x6
100498af:	jmp    0x10049af0
100498b4:	test   WORD PTR [ebp-0x14],0x830
100498ba:	jne    0x1004995d
100498c0:	or     DWORD PTR [ebp-0x14],0x20
100498c4:	jmp    0x1004995d
100498c9:	test   WORD PTR [ebp-0x14],0x830
100498cf:	jne    0x100498d5
100498d1:	or     DWORD PTR [ebp-0x14],0x20
100498d5:	mov    edi,DWORD PTR [ebp-0x18]
100498d8:	cmp    edi,0xffffffff
100498db:	jne    0x100498e2
100498dd:	mov    edi,0x7fffffff
100498e2:	add    ebx,0x4
100498e5:	test   BYTE PTR [ebp-0x14],0x20
100498e9:	mov    DWORD PTR [ebp-0x24],ebx
100498ec:	mov    ebx,DWORD PTR [ebx-0x4]
100498ef:	mov    DWORD PTR [ebp-0x1c],ebx
100498f2:	je     0x10049cd3
100498f8:	test   ebx,ebx
100498fa:	jne    0x10049904
100498fc:	mov    eax,ds:0x10080d40
10049901:	mov    DWORD PTR [ebp-0x1c],eax
10049904:	and    DWORD PTR [ebp-0x20],0x0
10049908:	test   edi,edi
1004990a:	mov    esi,DWORD PTR [ebp-0x1c]
1004990d:	jle    0x10049d00
10049913:	mov    al,BYTE PTR [esi]
10049915:	test   al,al
10049917:	je     0x10049d00
1004991d:	lea    ecx,[ebp-0x58]
10049920:	movzx  eax,al
10049923:	push   ecx
10049924:	push   eax
10049925:	call   0x1004b32b
1004992a:	test   eax,eax
1004992c:	pop    ecx
1004992d:	pop    ecx
1004992e:	je     0x10049931
10049930:	inc    esi
10049931:	inc    esi
10049932:	inc    DWORD PTR [ebp-0x20]
10049935:	cmp    DWORD PTR [ebp-0x20],edi
10049938:	jl     0x10049913
1004993a:	jmp    0x10049d00
1004993f:	sub    eax,0x58
10049942:	je     0x10049b87
10049948:	sub    eax,esi
1004994a:	je     0x100499b4
1004994c:	sub    eax,0x7
1004994f:	je     0x1004988c
10049955:	sub    eax,esi
10049957:	jne    0x10049d00
1004995d:	movzx  eax,WORD PTR [ebx]
10049960:	add    ebx,0x4
10049963:	xor    esi,esi
10049965:	inc    esi
10049966:	test   BYTE PTR [ebp-0x14],0x20
1004996a:	mov    DWORD PTR [ebp-0x34],esi
1004996d:	mov    DWORD PTR [ebp-0x24],ebx
10049970:	mov    DWORD PTR [ebp-0x70],eax
10049973:	je     0x100499a2
10049975:	mov    BYTE PTR [ebp-0x44],al
10049978:	lea    eax,[ebp-0x58]
1004997b:	push   eax
1004997c:	mov    eax,DWORD PTR [ebp-0x58]
1004997f:	mov    BYTE PTR [ebp-0x43],0x0
10049983:	push   DWORD PTR [eax+0xac]
10049989:	lea    eax,[ebp-0x44]
1004998c:	push   eax
1004998d:	lea    eax,[ebp-0x10]
10049990:	push   eax
10049991:	call   0x1004e0b6
10049996:	add    esp,0x10
10049999:	test   eax,eax
1004999b:	jge    0x100499a6
1004999d:	mov    DWORD PTR [ebp-0x5c],esi
100499a0:	jmp    0x100499a6
100499a2:	mov    WORD PTR [ebp-0x10],ax
100499a6:	lea    eax,[ebp-0x10]
100499a9:	mov    DWORD PTR [ebp-0x1c],eax
100499ac:	mov    DWORD PTR [ebp-0x20],esi
100499af:	jmp    0x10049d00
100499b4:	mov    eax,DWORD PTR [ebx]
100499b6:	add    ebx,0x4
100499b9:	test   eax,eax
100499bb:	mov    DWORD PTR [ebp-0x24],ebx
100499be:	je     0x100499ed
100499c0:	mov    ecx,DWORD PTR [eax+0x4]
100499c3:	test   ecx,ecx
100499c5:	je     0x100499ed
100499c7:	test   WORD PTR [ebp-0x14],0x800
100499cd:	movsx  eax,WORD PTR [eax]
100499d0:	mov    DWORD PTR [ebp-0x1c],ecx
100499d3:	je     0x100499e4
100499d5:	cdq    
100499d6:	sub    eax,edx
100499d8:	mov    DWORD PTR [ebp-0x34],0x1
100499df:	jmp    0x10049cfb
100499e4:	and    DWORD PTR [ebp-0x34],0x0
100499e8:	jmp    0x10049cfd
100499ed:	mov    eax,ds:0x10080d40
100499f2:	mov    DWORD PTR [ebp-0x1c],eax
100499f5:	push   eax
100499f6:	call   0x10043450
100499fb:	pop    ecx
100499fc:	jmp    0x10049cfd
10049a01:	cmp    eax,0x70
10049a04:	jg     0x10049b90
10049a0a:	je     0x10049b84
10049a10:	cmp    eax,0x65
10049a13:	jl     0x10049d00
10049a19:	cmp    eax,0x67
10049a1c:	jle    0x1004988c
10049a22:	cmp    eax,0x69
10049a25:	je     0x10049a7c
10049a27:	cmp    eax,0x6e
10049a2a:	je     0x10049a47
10049a2c:	cmp    eax,0x6f
10049a2f:	jne    0x10049d00
10049a35:	test   BYTE PTR [ebp-0x14],0x80
10049a39:	mov    DWORD PTR [ebp-0x28],edx
10049a3c:	je     0x10049a87
10049a3e:	or     DWORD PTR [ebp-0x14],0x200
10049a45:	jmp    0x10049a87
10049a47:	mov    esi,DWORD PTR [ebx]
10049a49:	add    ebx,0x4
10049a4c:	mov    DWORD PTR [ebp-0x24],ebx
10049a4f:	call   0x1004e0a0
10049a54:	test   eax,eax
10049a56:	je     0x100495cf
10049a5c:	test   BYTE PTR [ebp-0x14],0x20
10049a60:	je     0x10049a6b
10049a62:	mov    ax,WORD PTR [ebp-0x2c]
10049a66:	mov    WORD PTR [esi],ax
10049a69:	jmp    0x10049a70
10049a6b:	mov    eax,DWORD PTR [ebp-0x2c]
10049a6e:	mov    DWORD PTR [esi],eax
10049a70:	mov    DWORD PTR [ebp-0x5c],0x1
10049a77:	jmp    0x10049e09
10049a7c:	or     DWORD PTR [ebp-0x14],0x40
10049a80:	mov    DWORD PTR [ebp-0x28],0xa
10049a87:	test   WORD PTR [ebp-0x14],0x8000
10049a8d:	je     0x10049bda
10049a93:	add    ebx,edx
10049a95:	mov    eax,DWORD PTR [ebx-0x8]
10049a98:	mov    edx,DWORD PTR [ebx-0x4]
10049a9b:	jmp    0x10049c13
10049aa0:	jne    0x10049ab1
10049aa2:	cmp    cx,0x67
10049aa6:	jne    0x10049af0
10049aa8:	mov    DWORD PTR [ebp-0x18],0x1
10049aaf:	jmp    0x10049af0
10049ab1:	cmp    DWORD PTR [ebp-0x18],eax
10049ab4:	jle    0x10049ab9
10049ab6:	mov    DWORD PTR [ebp-0x18],eax
10049ab9:	cmp    DWORD PTR [ebp-0x18],0xa3
10049ac0:	jle    0x10049af0
10049ac2:	mov    edi,DWORD PTR [ebp-0x18]
10049ac5:	add    edi,0x15d
10049acb:	push   edi
10049acc:	call   0x100472aa
10049ad1:	test   eax,eax
10049ad3:	pop    ecx
10049ad4:	mov    ecx,DWORD PTR [ebp-0x28]
10049ad7:	push   0x8
10049ad9:	mov    DWORD PTR [ebp-0x64],eax
10049adc:	pop    edx
10049add:	je     0x10049ae9
10049adf:	mov    DWORD PTR [ebp-0x1c],eax
10049ae2:	mov    DWORD PTR [ebp-0x20],edi
10049ae5:	mov    esi,eax
10049ae7:	jmp    0x10049af0
10049ae9:	mov    DWORD PTR [ebp-0x18],0xa3
10049af0:	add    ebx,edx
10049af2:	mov    eax,DWORD PTR [ebx-0x8]
10049af5:	mov    DWORD PTR [ebp-0x78],eax
10049af8:	mov    eax,DWORD PTR [ebx-0x4]
10049afb:	mov    DWORD PTR [ebp-0x74],eax
10049afe:	lea    eax,[ebp-0x58]
10049b01:	push   eax
10049b02:	push   DWORD PTR [ebp-0x68]
10049b05:	movsx  eax,cl
10049b08:	push   DWORD PTR [ebp-0x18]
10049b0b:	mov    DWORD PTR [ebp-0x24],ebx
10049b0e:	push   eax
10049b0f:	push   DWORD PTR [ebp-0x20]
10049b12:	lea    eax,[ebp-0x78]
10049b15:	push   esi
10049b16:	push   eax
10049b17:	push   DWORD PTR ds:0x10080ab0
10049b1d:	call   0x10046d68
10049b22:	pop    ecx
10049b23:	call   eax
10049b25:	mov    ebx,DWORD PTR [ebp-0x14]
10049b28:	add    esp,0x1c
10049b2b:	and    ebx,0x80
10049b31:	je     0x10049b4e
10049b33:	cmp    DWORD PTR [ebp-0x18],0x0
10049b37:	jne    0x10049b4e
10049b39:	lea    eax,[ebp-0x58]
10049b3c:	push   eax
10049b3d:	push   esi
10049b3e:	push   DWORD PTR ds:0x10080abc
10049b44:	call   0x10046d68
10049b49:	pop    ecx
10049b4a:	call   eax
10049b4c:	pop    ecx
10049b4d:	pop    ecx
10049b4e:	cmp    WORD PTR [ebp-0x28],0x67
10049b53:	jne    0x10049b6e
10049b55:	test   ebx,ebx
10049b57:	jne    0x10049b6e
10049b59:	lea    eax,[ebp-0x58]
10049b5c:	push   eax
10049b5d:	push   esi
10049b5e:	push   DWORD PTR ds:0x10080ab8
10049b64:	call   0x10046d68
10049b69:	pop    ecx
10049b6a:	call   eax
10049b6c:	pop    ecx
10049b6d:	pop    ecx
10049b6e:	cmp    BYTE PTR [esi],0x2d
10049b71:	jne    0x10049b7e
10049b73:	or     DWORD PTR [ebp-0x14],0x100
10049b7a:	inc    esi
10049b7b:	mov    DWORD PTR [ebp-0x1c],esi
10049b7e:	push   esi
10049b7f:	jmp    0x100499f6
10049b84:	mov    DWORD PTR [ebp-0x18],edx
10049b87:	mov    DWORD PTR [ebp-0x60],0x7
10049b8e:	jmp    0x10049bb1
10049b90:	sub    eax,0x73
10049b93:	je     0x100498d5
10049b99:	sub    eax,esi
10049b9b:	je     0x10049a80
10049ba1:	sub    eax,0x3
10049ba4:	jne    0x10049d00
10049baa:	mov    DWORD PTR [ebp-0x60],0x27
10049bb1:	test   BYTE PTR [ebp-0x14],0x80
10049bb5:	mov    DWORD PTR [ebp-0x28],0x10
10049bbc:	je     0x10049a87
10049bc2:	mov    eax,DWORD PTR [ebp-0x60]
10049bc5:	add    eax,0x51
10049bc8:	mov    WORD PTR [ebp-0x3c],0x30
10049bce:	mov    WORD PTR [ebp-0x3a],ax
10049bd2:	mov    DWORD PTR [ebp-0x30],esi
10049bd5:	jmp    0x10049a87
10049bda:	test   WORD PTR [ebp-0x14],0x1000
10049be0:	jne    0x10049a93
10049be6:	add    ebx,0x4
10049be9:	test   BYTE PTR [ebp-0x14],0x20
10049bed:	je     0x10049c05
10049bef:	test   BYTE PTR [ebp-0x14],0x40
10049bf3:	mov    DWORD PTR [ebp-0x24],ebx
10049bf6:	je     0x10049bfe
10049bf8:	movsx  eax,WORD PTR [ebx-0x4]
10049bfc:	jmp    0x10049c02
10049bfe:	movzx  eax,WORD PTR [ebx-0x4]
10049c02:	cdq    
10049c03:	jmp    0x10049c16
10049c05:	test   BYTE PTR [ebp-0x14],0x40
10049c09:	mov    eax,DWORD PTR [ebx-0x4]
10049c0c:	je     0x10049c11
10049c0e:	cdq    
10049c0f:	jmp    0x10049c13
10049c11:	xor    edx,edx
10049c13:	mov    DWORD PTR [ebp-0x24],ebx
10049c16:	test   BYTE PTR [ebp-0x14],0x40
10049c1a:	je     0x10049c34
10049c1c:	test   edx,edx
10049c1e:	jg     0x10049c34
10049c20:	jl     0x10049c26
10049c22:	test   eax,eax
10049c24:	jae    0x10049c34
10049c26:	neg    eax
10049c28:	adc    edx,0x0
10049c2b:	neg    edx
10049c2d:	or     DWORD PTR [ebp-0x14],0x100
10049c34:	test   WORD PTR [ebp-0x14],0x9000
10049c3a:	mov    ebx,edx
10049c3c:	mov    edi,eax
10049c3e:	jne    0x10049c42
10049c40:	xor    ebx,ebx
10049c42:	cmp    DWORD PTR [ebp-0x18],0x0
10049c46:	jge    0x10049c51
10049c48:	mov    DWORD PTR [ebp-0x18],0x1
10049c4f:	jmp    0x10049c62
10049c51:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049c55:	mov    eax,0x200
10049c5a:	cmp    DWORD PTR [ebp-0x18],eax
10049c5d:	jle    0x10049c62
10049c5f:	mov    DWORD PTR [ebp-0x18],eax
10049c62:	mov    eax,edi
10049c64:	or     eax,ebx
10049c66:	jne    0x10049c6b
10049c68:	and    DWORD PTR [ebp-0x30],eax
10049c6b:	lea    esi,[ebp+0x1ef]
10049c71:	mov    eax,DWORD PTR [ebp-0x18]
10049c74:	dec    DWORD PTR [ebp-0x18]
10049c77:	test   eax,eax
10049c79:	jg     0x10049c81
10049c7b:	mov    eax,edi
10049c7d:	or     eax,ebx
10049c7f:	je     0x10049ca5
10049c81:	mov    eax,DWORD PTR [ebp-0x28]
10049c84:	cdq    
10049c85:	push   edx
10049c86:	push   eax
10049c87:	push   ebx
10049c88:	push   edi
10049c89:	call   0x1004acb0
10049c8e:	add    ecx,0x30
10049c91:	cmp    ecx,0x39
10049c94:	mov    DWORD PTR [ebp-0x7c],ebx
10049c97:	mov    edi,eax
10049c99:	mov    ebx,edx
10049c9b:	jle    0x10049ca0
10049c9d:	add    ecx,DWORD PTR [ebp-0x60]
10049ca0:	mov    BYTE PTR [esi],cl
10049ca2:	dec    esi
10049ca3:	jmp    0x10049c71
10049ca5:	lea    eax,[ebp+0x1ef]
10049cab:	sub    eax,esi
10049cad:	inc    esi
10049cae:	test   WORD PTR [ebp-0x14],0x200
10049cb4:	mov    DWORD PTR [ebp-0x20],eax
10049cb7:	mov    DWORD PTR [ebp-0x1c],esi
10049cba:	je     0x10049d00
10049cbc:	test   eax,eax
10049cbe:	je     0x10049cc7
10049cc0:	mov    ecx,esi
10049cc2:	cmp    BYTE PTR [ecx],0x30
10049cc5:	je     0x10049d00
10049cc7:	dec    DWORD PTR [ebp-0x1c]
10049cca:	mov    ecx,DWORD PTR [ebp-0x1c]
10049ccd:	mov    BYTE PTR [ecx],0x30
10049cd0:	inc    eax
10049cd1:	jmp    0x10049cfd
10049cd3:	test   ebx,ebx
10049cd5:	jne    0x10049cdf
10049cd7:	mov    eax,ds:0x10080d44
10049cdc:	mov    DWORD PTR [ebp-0x1c],eax
10049cdf:	mov    eax,DWORD PTR [ebp-0x1c]
10049ce2:	mov    DWORD PTR [ebp-0x34],0x1
10049ce9:	jmp    0x10049cf4
10049ceb:	dec    edi
10049cec:	cmp    WORD PTR [eax],0x0
10049cf0:	je     0x10049cf8
10049cf2:	add    eax,esi
10049cf4:	test   edi,edi
10049cf6:	jne    0x10049ceb
10049cf8:	sub    eax,DWORD PTR [ebp-0x1c]
10049cfb:	sar    eax,1
10049cfd:	mov    DWORD PTR [ebp-0x20],eax
10049d00:	cmp    DWORD PTR [ebp-0x5c],0x0
10049d04:	jne    0x10049e09
10049d0a:	mov    eax,DWORD PTR [ebp-0x14]
10049d0d:	test   al,0x40
10049d0f:	je     0x10049d3c
10049d11:	test   ax,0x100
10049d15:	je     0x10049d1f
10049d17:	mov    WORD PTR [ebp-0x3c],0x2d
10049d1d:	jmp    0x10049d35
10049d1f:	test   al,0x1
10049d21:	je     0x10049d2b
10049d23:	mov    WORD PTR [ebp-0x3c],0x2b
10049d29:	jmp    0x10049d35
10049d2b:	test   al,0x2
10049d2d:	je     0x10049d3c
10049d2f:	mov    WORD PTR [ebp-0x3c],0x20
10049d35:	mov    DWORD PTR [ebp-0x30],0x1
10049d3c:	mov    ebx,DWORD PTR [ebp-0x38]
10049d3f:	mov    esi,DWORD PTR [ebp-0x20]
10049d42:	sub    ebx,esi
10049d44:	sub    ebx,DWORD PTR [ebp-0x30]
10049d47:	test   BYTE PTR [ebp-0x14],0xc
10049d4b:	jne    0x10049d5e
10049d4d:	push   DWORD PTR [ebp-0x48]
10049d50:	lea    eax,[ebp-0x2c]
10049d53:	push   ebx
10049d54:	push   0x20
10049d56:	call   0x100494fc
10049d5b:	add    esp,0xc
10049d5e:	push   DWORD PTR [ebp-0x30]
10049d61:	mov    edi,DWORD PTR [ebp-0x48]
10049d64:	lea    eax,[ebp-0x2c]
10049d67:	lea    ecx,[ebp-0x3c]
10049d6a:	call   0x10049521
10049d6f:	test   BYTE PTR [ebp-0x14],0x8
10049d73:	pop    ecx
10049d74:	je     0x10049d8b
10049d76:	test   BYTE PTR [ebp-0x14],0x4
10049d7a:	jne    0x10049d8b
10049d7c:	push   edi
10049d7d:	push   ebx
10049d7e:	push   0x30
10049d80:	lea    eax,[ebp-0x2c]
10049d83:	call   0x100494fc
10049d88:	add    esp,0xc
10049d8b:	cmp    DWORD PTR [ebp-0x34],0x0
10049d8f:	jne    0x10049ddf
10049d91:	test   esi,esi
10049d93:	jle    0x10049ddf
10049d95:	mov    edi,DWORD PTR [ebp-0x1c]
10049d98:	mov    DWORD PTR [ebp-0x28],esi
10049d9b:	dec    DWORD PTR [ebp-0x28]
10049d9e:	lea    eax,[ebp-0x58]
10049da1:	push   eax
10049da2:	mov    eax,DWORD PTR [ebp-0x58]
10049da5:	push   DWORD PTR [eax+0xac]
10049dab:	lea    eax,[ebp-0x70]
10049dae:	push   edi
10049daf:	push   eax
10049db0:	call   0x1004e0b6
10049db5:	add    esp,0x10
10049db8:	test   eax,eax
10049dba:	mov    DWORD PTR [ebp-0x7c],eax
10049dbd:	jle    0x10049dd9
10049dbf:	push   DWORD PTR [ebp-0x70]
10049dc2:	mov    eax,DWORD PTR [ebp-0x48]
10049dc5:	lea    esi,[ebp-0x2c]
10049dc8:	call   0x100494d7
10049dcd:	add    edi,DWORD PTR [ebp-0x7c]
10049dd0:	cmp    DWORD PTR [ebp-0x28],0x0
10049dd4:	pop    ecx
10049dd5:	jg     0x10049d9b
10049dd7:	jmp    0x10049dec
10049dd9:	or     DWORD PTR [ebp-0x2c],0xffffffff
10049ddd:	jmp    0x10049dec
10049ddf:	mov    ecx,DWORD PTR [ebp-0x1c]
10049de2:	push   esi
10049de3:	lea    eax,[ebp-0x2c]
10049de6:	call   0x10049521
10049deb:	pop    ecx
10049dec:	cmp    DWORD PTR [ebp-0x2c],0x0
10049df0:	jl     0x10049e09
10049df2:	test   BYTE PTR [ebp-0x14],0x4
10049df6:	je     0x10049e09
10049df8:	push   DWORD PTR [ebp-0x48]
10049dfb:	lea    eax,[ebp-0x2c]
10049dfe:	push   ebx
10049dff:	push   0x20
10049e01:	call   0x100494fc
10049e06:	add    esp,0xc
10049e09:	cmp    DWORD PTR [ebp-0x64],0x0
10049e0d:	je     0x10049e1c
10049e0f:	push   DWORD PTR [ebp-0x64]
10049e12:	call   0x100437dc
10049e17:	and    DWORD PTR [ebp-0x64],0x0
10049e1b:	pop    ecx
10049e1c:	mov    edi,DWORD PTR [ebp-0x6c]
10049e1f:	mov    ebx,DWORD PTR [ebp-0x24]
10049e22:	movzx  eax,WORD PTR [edi]
10049e25:	test   ax,ax
10049e28:	mov    DWORD PTR [ebp-0x28],eax
10049e2b:	je     0x10049e34
10049e2d:	mov    ecx,eax
10049e2f:	jmp    0x10049631
10049e34:	cmp    DWORD PTR [ebp-0x40],0x0
10049e38:	je     0x10049e44
10049e3a:	cmp    DWORD PTR [ebp-0x40],0x7
10049e3e:	jne    0x100495cf
10049e44:	cmp    BYTE PTR [ebp-0x4c],0x0
10049e48:	je     0x10049e51
10049e4a:	mov    eax,DWORD PTR [ebp-0x50]
10049e4d:	and    DWORD PTR [eax+0x70],0xfffffffd
10049e51:	mov    eax,DWORD PTR [ebp-0x2c]
10049e54:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049e5a:	pop    edi
10049e5b:	pop    esi
10049e5c:	xor    ecx,ebp
10049e5e:	pop    ebx
10049e5f:	call   0x10043615
10049e64:	add    ebp,0x3f4
10049e6a:	leave  
10049e6b:	ret    
10049e6c:	xor    al,0x98
10049e6e:	add    al,0x10
10049e70:	mov    DWORD PTR [esi-0x6959effc],edx
10049e76:	add    al,0x10
10049e78:	repnz xchg esi,eax
10049e7a:	add    al,0x10
10049e7c:	sub    al,0x97
10049e7e:	add    al,0x10
10049e80:	xor    eax,0x6c100497
10049e85:	xchg   edi,eax
10049e86:	add    al,0x10
10049e88:	dec    ebp
10049e89:	cwde   
10049e8a:	add    al,0x10
10049e8c:	push   ecx
10049e8d:	push   ebx
10049e8e:	mov    ebx,DWORD PTR [esp+0xc]
10049e92:	push   esi
10049e93:	push   edi
10049e94:	xor    esi,esi
10049e96:	xor    edi,edi
10049e98:	cmp    ebx,DWORD PTR [edi*8+0x100802e8]
10049e9f:	je     0x10049ea7
10049ea1:	inc    edi
10049ea2:	cmp    edi,0x17
10049ea5:	jb     0x10049e98
10049ea7:	cmp    edi,0x17
10049eaa:	jae    0x1004a027
10049eb0:	push   ebp
10049eb1:	push   0x3
10049eb3:	call   0x1004ee71
10049eb8:	cmp    eax,0x1
10049ebb:	pop    ecx
10049ebc:	je     0x10049ff3
10049ec2:	push   0x3
10049ec4:	call   0x1004ee71
10049ec9:	test   eax,eax
10049ecb:	pop    ecx
10049ecc:	jne    0x10049edb
10049ece:	cmp    DWORD PTR ds:0x10081b04,0x1
10049ed5:	je     0x10049ff3
10049edb:	cmp    ebx,0xfc
10049ee1:	je     0x1004a026
10049ee7:	push   0x10067c38
10049eec:	mov    ebx,0x314
10049ef1:	push   ebx
10049ef2:	mov    ebp,0x10082000
10049ef7:	push   ebp
10049ef8:	call   0x10047a20
10049efd:	add    esp,0xc
10049f00:	test   eax,eax
10049f02:	je     0x10049f11
10049f04:	push   esi
10049f05:	push   esi
10049f06:	push   esi
10049f07:	push   esi
10049f08:	push   esi
10049f09:	call   0x100434e5
10049f0e:	add    esp,0x14
10049f11:	push   0x104
10049f16:	mov    esi,0x10082019
10049f1b:	push   esi
10049f1c:	push   0x0
10049f1e:	mov    BYTE PTR ds:0x1008211d,0x0
10049f25:	call   DWORD PTR ds:0x100671e0
10049f2b:	test   eax,eax
10049f2d:	jne    0x10049f55
10049f2f:	push   0x10067c20
10049f34:	push   0x2fb
10049f39:	push   esi
10049f3a:	call   0x10047a20
10049f3f:	add    esp,0xc
10049f42:	test   eax,eax
10049f44:	je     0x10049f55
10049f46:	xor    eax,eax
10049f48:	push   eax
10049f49:	push   eax
10049f4a:	push   eax
10049f4b:	push   eax
10049f4c:	push   eax
10049f4d:	call   0x100434e5
10049f52:	add    esp,0x14
10049f55:	push   esi
10049f56:	call   0x10043450
10049f5b:	inc    eax
10049f5c:	cmp    eax,0x3c
10049f5f:	pop    ecx
10049f60:	jbe    0x10049f9a
10049f62:	push   esi
10049f63:	call   0x10043450
10049f68:	sub    esi,0x3b
10049f6b:	add    eax,esi
10049f6d:	push   0x3
10049f6f:	mov    ecx,0x10082314
10049f74:	push   0x10067c1c
10049f79:	sub    ecx,eax
10049f7b:	push   ecx
10049f7c:	push   eax
10049f7d:	call   0x1004edbe
10049f82:	add    esp,0x14
10049f85:	test   eax,eax
10049f87:	je     0x10049f9a
10049f89:	xor    esi,esi
10049f8b:	push   esi
10049f8c:	push   esi
10049f8d:	push   esi
10049f8e:	push   esi
10049f8f:	push   esi
10049f90:	call   0x100434e5
10049f95:	add    esp,0x14
10049f98:	jmp    0x10049f9c
10049f9a:	xor    esi,esi
10049f9c:	push   0x10067c18
10049fa1:	push   ebx
10049fa2:	push   ebp
10049fa3:	call   0x1004ed4d
10049fa8:	add    esp,0xc
10049fab:	test   eax,eax
10049fad:	je     0x10049fbc
10049faf:	push   esi
10049fb0:	push   esi
10049fb1:	push   esi
10049fb2:	push   esi
10049fb3:	push   esi
10049fb4:	call   0x100434e5
10049fb9:	add    esp,0x14
10049fbc:	push   DWORD PTR [edi*8+0x100802ec]
10049fc3:	push   ebx
10049fc4:	push   ebp
10049fc5:	call   0x1004ed4d
10049fca:	add    esp,0xc
10049fcd:	test   eax,eax
10049fcf:	je     0x10049fde
10049fd1:	push   esi
10049fd2:	push   esi
10049fd3:	push   esi
10049fd4:	push   esi
10049fd5:	push   esi
10049fd6:	call   0x100434e5
10049fdb:	add    esp,0x14
10049fde:	push   0x12010
10049fe3:	push   0x10067bf0
10049fe8:	push   ebp
10049fe9:	call   0x1004eb90
10049fee:	add    esp,0xc
10049ff1:	jmp    0x1004a026
10049ff3:	push   0xfffffff4
10049ff5:	call   DWORD PTR ds:0x100671dc
10049ffb:	mov    ebp,eax
10049ffd:	cmp    ebp,esi
10049fff:	je     0x1004a026
1004a001:	cmp    ebp,0xffffffff
1004a004:	je     0x1004a026
1004a006:	push   0x0
1004a008:	lea    eax,[esp+0x14]
1004a00c:	push   eax
1004a00d:	lea    esi,[edi*8+0x100802ec]
1004a014:	push   DWORD PTR [esi]
1004a016:	call   0x10043450
1004a01b:	pop    ecx
1004a01c:	push   eax
1004a01d:	push   DWORD PTR [esi]
1004a01f:	push   ebp
1004a020:	call   DWORD PTR ds:0x100670a4
1004a026:	pop    ebp
1004a027:	pop    edi
1004a028:	pop    esi
1004a029:	pop    ebx
1004a02a:	pop    ecx
1004a02b:	ret    
1004a02c:	push   0x3
1004a02e:	call   0x1004ee71
1004a033:	cmp    eax,0x1
1004a036:	pop    ecx
1004a037:	je     0x1004a04e
1004a039:	push   0x3
1004a03b:	call   0x1004ee71
1004a040:	test   eax,eax
1004a042:	pop    ecx
1004a043:	jne    0x1004a064
1004a045:	cmp    DWORD PTR ds:0x10081b04,0x1
1004a04c:	jne    0x1004a064
1004a04e:	push   0xfc
1004a053:	call   0x10049e8c
1004a058:	push   0xff
1004a05d:	call   0x10049e8c
1004a062:	pop    ecx
1004a063:	pop    ecx
1004a064:	ret    
1004a065:	int3   
1004a066:	int3   
1004a067:	int3   
1004a068:	int3   
1004a069:	int3   
1004a06a:	int3   
1004a06b:	int3   
1004a06c:	int3   
1004a06d:	int3   
1004a06e:	int3   
1004a06f:	int3   
1004a070:	push   ecx
1004a071:	lea    ecx,[esp+0x4]
1004a075:	sub    ecx,eax
1004a077:	sbb    eax,eax
1004a079:	not    eax
1004a07b:	and    ecx,eax
1004a07d:	mov    eax,esp
1004a07f:	and    eax,0xfffff000
1004a084:	cmp    ecx,eax
1004a086:	jb     0x1004a092
1004a088:	mov    eax,ecx
1004a08a:	pop    ecx
1004a08b:	xchg   esp,eax
1004a08c:	mov    eax,DWORD PTR [eax]
1004a08e:	mov    DWORD PTR [esp],eax
1004a091:	ret    
1004a092:	sub    eax,0x1000
1004a097:	test   DWORD PTR [eax],eax
1004a099:	jmp    0x1004a084
1004a09b:	push   ebp
1004a09c:	mov    ebp,esp
1004a09e:	sub    esp,0x8
1004a0a1:	mov    DWORD PTR [ebp-0x4],edi
1004a0a4:	mov    DWORD PTR [ebp-0x8],esi
1004a0a7:	mov    esi,DWORD PTR [ebp+0xc]
1004a0aa:	mov    edi,DWORD PTR [ebp+0x8]
1004a0ad:	mov    ecx,DWORD PTR [ebp+0x10]
1004a0b0:	shr    ecx,0x7
1004a0b3:	jmp    0x1004a0bb
1004a0b5:	lea    ebx,[ebx+0x0]
1004a0bb:	movdqa xmm0,XMMWORD PTR [esi]
1004a0bf:	movdqa xmm1,XMMWORD PTR [esi+0x10]
1004a0c4:	movdqa xmm2,XMMWORD PTR [esi+0x20]
1004a0c9:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1004a0ce:	movdqa XMMWORD PTR [edi],xmm0
1004a0d2:	movdqa XMMWORD PTR [edi+0x10],xmm1
1004a0d7:	movdqa XMMWORD PTR [edi+0x20],xmm2
1004a0dc:	movdqa XMMWORD PTR [edi+0x30],xmm3
1004a0e1:	movdqa xmm4,XMMWORD PTR [esi+0x40]
1004a0e6:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1004a0eb:	movdqa xmm6,XMMWORD PTR [esi+0x60]
1004a0f0:	movdqa xmm7,XMMWORD PTR [esi+0x70]
1004a0f5:	movdqa XMMWORD PTR [edi+0x40],xmm4
1004a0fa:	movdqa XMMWORD PTR [edi+0x50],xmm5
1004a0ff:	movdqa XMMWORD PTR [edi+0x60],xmm6
1004a104:	movdqa XMMWORD PTR [edi+0x70],xmm7
1004a109:	lea    esi,[esi+0x80]
1004a10f:	lea    edi,[edi+0x80]
1004a115:	dec    ecx
1004a116:	jne    0x1004a0bb
1004a118:	mov    esi,DWORD PTR [ebp-0x8]
1004a11b:	mov    edi,DWORD PTR [ebp-0x4]
1004a11e:	mov    esp,ebp
1004a120:	pop    ebp
1004a121:	ret    
1004a122:	push   ebp
1004a123:	mov    ebp,esp
1004a125:	sub    esp,0x1c
1004a128:	mov    DWORD PTR [ebp-0xc],edi
1004a12b:	mov    DWORD PTR [ebp-0x8],esi
1004a12e:	mov    DWORD PTR [ebp-0x4],ebx
1004a131:	mov    ebx,DWORD PTR [ebp+0xc]
1004a134:	mov    eax,ebx
1004a136:	cdq    
1004a137:	mov    ecx,eax
1004a139:	mov    eax,DWORD PTR [ebp+0x8]
1004a13c:	xor    ecx,edx
1004a13e:	sub    ecx,edx
1004a140:	and    ecx,0xf
1004a143:	xor    ecx,edx
1004a145:	sub    ecx,edx
1004a147:	cdq    
1004a148:	mov    edi,eax
1004a14a:	xor    edi,edx
1004a14c:	sub    edi,edx
1004a14e:	and    edi,0xf
1004a151:	xor    edi,edx
1004a153:	sub    edi,edx
1004a155:	mov    edx,ecx
1004a157:	or     edx,edi
1004a159:	jne    0x1004a1a5
1004a15b:	mov    esi,DWORD PTR [ebp+0x10]
1004a15e:	mov    ecx,esi
1004a160:	and    ecx,0x7f
1004a163:	mov    DWORD PTR [ebp-0x18],ecx
1004a166:	cmp    esi,ecx
1004a168:	je     0x1004a17d
1004a16a:	sub    esi,ecx
1004a16c:	push   esi
1004a16d:	push   ebx
1004a16e:	push   eax
1004a16f:	call   0x1004a09b
1004a174:	add    esp,0xc
1004a177:	mov    eax,DWORD PTR [ebp+0x8]
1004a17a:	mov    ecx,DWORD PTR [ebp-0x18]
1004a17d:	test   ecx,ecx
1004a17f:	je     0x1004a1f8
1004a181:	mov    ebx,DWORD PTR [ebp+0x10]
1004a184:	mov    edx,DWORD PTR [ebp+0xc]
1004a187:	add    edx,ebx
1004a189:	sub    edx,ecx
1004a18b:	mov    DWORD PTR [ebp-0x14],edx
1004a18e:	add    ebx,eax
1004a190:	sub    ebx,ecx
1004a192:	mov    DWORD PTR [ebp-0x10],ebx
1004a195:	mov    esi,DWORD PTR [ebp-0x14]
1004a198:	mov    edi,DWORD PTR [ebp-0x10]
1004a19b:	mov    ecx,DWORD PTR [ebp-0x18]
1004a19e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a1a0:	mov    eax,DWORD PTR [ebp+0x8]
1004a1a3:	jmp    0x1004a1f8
1004a1a5:	cmp    ecx,edi
1004a1a7:	jne    0x1004a1de
1004a1a9:	neg    ecx
1004a1ab:	add    ecx,0x10
1004a1ae:	mov    DWORD PTR [ebp-0x1c],ecx
1004a1b1:	mov    esi,DWORD PTR [ebp+0xc]
1004a1b4:	mov    edi,DWORD PTR [ebp+0x8]
1004a1b7:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a1ba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a1bc:	mov    ecx,DWORD PTR [ebp+0x8]
1004a1bf:	add    ecx,DWORD PTR [ebp-0x1c]
1004a1c2:	mov    edx,DWORD PTR [ebp+0xc]
1004a1c5:	add    edx,DWORD PTR [ebp-0x1c]
1004a1c8:	mov    eax,DWORD PTR [ebp+0x10]
1004a1cb:	sub    eax,DWORD PTR [ebp-0x1c]
1004a1ce:	push   eax
1004a1cf:	push   edx
1004a1d0:	push   ecx
1004a1d1:	call   0x1004a122
1004a1d6:	add    esp,0xc
1004a1d9:	mov    eax,DWORD PTR [ebp+0x8]
1004a1dc:	jmp    0x1004a1f8
1004a1de:	mov    esi,DWORD PTR [ebp+0xc]
1004a1e1:	mov    edi,DWORD PTR [ebp+0x8]
1004a1e4:	mov    ecx,DWORD PTR [ebp+0x10]
1004a1e7:	mov    edx,ecx
1004a1e9:	shr    ecx,0x2
1004a1ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a1ee:	mov    ecx,edx
1004a1f0:	and    ecx,0x3
1004a1f3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004a1f5:	mov    eax,DWORD PTR [ebp+0x8]
1004a1f8:	mov    ebx,DWORD PTR [ebp-0x4]
1004a1fb:	mov    esi,DWORD PTR [ebp-0x8]
1004a1fe:	mov    edi,DWORD PTR [ebp-0xc]
1004a201:	mov    esp,ebp
1004a203:	pop    ebp
1004a204:	ret    
1004a205:	and    DWORD PTR ds:0x100845e0,0x0
1004a20c:	call   0x1004ef07
1004a211:	mov    ds:0x100845e0,eax
1004a216:	xor    eax,eax
1004a218:	ret    
1004a219:	sub    eax,0x3a4
1004a21e:	je     0x1004a242
1004a220:	sub    eax,0x4
1004a223:	je     0x1004a23c
1004a225:	sub    eax,0xd
1004a228:	je     0x1004a236
1004a22a:	dec    eax
1004a22b:	je     0x1004a230
1004a22d:	xor    eax,eax
1004a22f:	ret    
1004a230:	mov    eax,0x404
1004a235:	ret    
1004a236:	mov    eax,0x412
1004a23b:	ret    
1004a23c:	mov    eax,0x804
1004a241:	ret    
1004a242:	mov    eax,0x411
1004a247:	ret    
1004a248:	push   ebx
1004a249:	push   ebp
1004a24a:	push   esi
1004a24b:	push   edi
1004a24c:	mov    ebp,0x101
1004a251:	mov    esi,eax
1004a253:	push   ebp
1004a254:	xor    edi,edi
1004a256:	lea    ebx,[esi+0x1c]
1004a259:	push   edi
1004a25a:	push   ebx
1004a25b:	call   0x10045dc0
1004a260:	mov    DWORD PTR [esi+0x4],edi
1004a263:	mov    DWORD PTR [esi+0x8],edi
1004a266:	mov    DWORD PTR [esi+0xc],edi
1004a269:	xor    eax,eax
1004a26b:	lea    edi,[esi+0x10]
1004a26e:	stos   DWORD PTR es:[edi],eax
1004a26f:	stos   DWORD PTR es:[edi],eax
1004a270:	stos   DWORD PTR es:[edi],eax
1004a271:	mov    eax,0x100803a0
1004a276:	add    esp,0xc
1004a279:	sub    eax,esi
1004a27b:	mov    cl,BYTE PTR [eax+ebx*1]
1004a27e:	mov    BYTE PTR [ebx],cl
1004a280:	inc    ebx
1004a281:	dec    ebp
1004a282:	jne    0x1004a27b
1004a284:	lea    ecx,[esi+0x11d]
1004a28a:	mov    esi,0x100
1004a28f:	mov    dl,BYTE PTR [ecx+eax*1]
1004a292:	mov    BYTE PTR [ecx],dl
1004a294:	inc    ecx
1004a295:	dec    esi
1004a296:	jne    0x1004a28f
1004a298:	pop    edi
1004a299:	pop    esi
1004a29a:	pop    ebp
1004a29b:	pop    ebx
1004a29c:	ret    
1004a29d:	push   ebp
1004a29e:	lea    ebp,[esp-0x49c]
1004a2a5:	sub    esp,0x51c
1004a2ab:	mov    eax,ds:0x100801ac
1004a2b0:	xor    eax,ebp
1004a2b2:	mov    DWORD PTR [ebp+0x498],eax
1004a2b8:	push   ebx
1004a2b9:	push   edi
1004a2ba:	lea    eax,[ebp-0x7c]
1004a2bd:	push   eax
1004a2be:	push   DWORD PTR [esi+0x4]
1004a2c1:	call   DWORD PTR ds:0x100671e4
1004a2c7:	test   eax,eax
1004a2c9:	mov    edi,0x100
1004a2ce:	je     0x1004a3c3
1004a2d4:	xor    eax,eax
1004a2d6:	mov    BYTE PTR [ebp+eax*1+0x398],al
1004a2dd:	inc    eax
1004a2de:	cmp    eax,edi
1004a2e0:	jb     0x1004a2d6
1004a2e2:	mov    al,BYTE PTR [ebp-0x76]
1004a2e5:	test   al,al
1004a2e7:	mov    BYTE PTR [ebp+0x398],0x20
1004a2ee:	je     0x1004a31b
1004a2f0:	lea    ebx,[ebp-0x75]
1004a2f3:	movzx  ecx,al
1004a2f6:	movzx  eax,BYTE PTR [ebx]
1004a2f9:	cmp    ecx,eax
1004a2fb:	ja     0x1004a313
1004a2fd:	sub    eax,ecx
1004a2ff:	inc    eax
1004a300:	push   eax
1004a301:	lea    edx,[ebp+ecx*1+0x398]
1004a308:	push   0x20
1004a30a:	push   edx
1004a30b:	call   0x10045dc0
1004a310:	add    esp,0xc
1004a313:	inc    ebx
1004a314:	mov    al,BYTE PTR [ebx]
1004a316:	inc    ebx
1004a317:	test   al,al
1004a319:	jne    0x1004a2f3
1004a31b:	push   0x0
1004a31d:	push   DWORD PTR [esi+0xc]
1004a320:	lea    eax,[ebp-0x68]
1004a323:	push   DWORD PTR [esi+0x4]
1004a326:	push   eax
1004a327:	push   edi
1004a328:	lea    eax,[ebp+0x398]
1004a32e:	push   eax
1004a32f:	push   0x1
1004a331:	push   0x0
1004a333:	call   0x1004f12c
1004a338:	xor    ebx,ebx
1004a33a:	push   ebx
1004a33b:	push   DWORD PTR [esi+0x4]
1004a33e:	lea    eax,[ebp+0x298]
1004a344:	push   edi
1004a345:	push   eax
1004a346:	push   edi
1004a347:	lea    eax,[ebp+0x398]
1004a34d:	push   eax
1004a34e:	push   edi
1004a34f:	push   DWORD PTR [esi+0xc]
1004a352:	push   ebx
1004a353:	call   0x1004b2e8
1004a358:	add    esp,0x44
1004a35b:	push   ebx
1004a35c:	push   DWORD PTR [esi+0x4]
1004a35f:	lea    eax,[ebp+0x198]
1004a365:	push   edi
1004a366:	push   eax
1004a367:	push   edi
1004a368:	lea    eax,[ebp+0x398]
1004a36e:	push   eax
1004a36f:	push   0x200
1004a374:	push   DWORD PTR [esi+0xc]
1004a377:	push   ebx
1004a378:	call   0x1004b2e8
1004a37d:	add    esp,0x24
1004a380:	xor    eax,eax
1004a382:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1004a387:	test   cl,0x1
1004a38a:	je     0x1004a39a
1004a38c:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1004a391:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1004a398:	jmp    0x1004a3ab
1004a39a:	test   cl,0x2
1004a39d:	je     0x1004a3b4
1004a39f:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1004a3a4:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1004a3ab:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1004a3b2:	jmp    0x1004a3bc
1004a3b4:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1004a3bc:	inc    eax
1004a3bd:	cmp    eax,edi
1004a3bf:	jb     0x1004a382
1004a3c1:	jmp    0x1004a410
1004a3c3:	lea    eax,[esi+0x11d]
1004a3c9:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1004a3d0:	xor    ecx,ecx
1004a3d2:	sub    DWORD PTR [ebp-0x80],eax
1004a3d5:	mov    edx,DWORD PTR [ebp-0x80]
1004a3d8:	lea    eax,[esi+ecx*1+0x11d]
1004a3df:	add    edx,eax
1004a3e1:	lea    ebx,[edx+0x20]
1004a3e4:	cmp    ebx,0x19
1004a3e7:	ja     0x1004a3f5
1004a3e9:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1004a3ee:	mov    dl,cl
1004a3f0:	add    dl,0x20
1004a3f3:	jmp    0x1004a404
1004a3f5:	cmp    edx,0x19
1004a3f8:	ja     0x1004a408
1004a3fa:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1004a3ff:	mov    dl,cl
1004a401:	sub    dl,0x20
1004a404:	mov    BYTE PTR [eax],dl
1004a406:	jmp    0x1004a40b
1004a408:	mov    BYTE PTR [eax],0x0
1004a40b:	inc    ecx
1004a40c:	cmp    ecx,edi
1004a40e:	jb     0x1004a3d5
1004a410:	mov    ecx,DWORD PTR [ebp+0x498]
1004a416:	pop    edi
1004a417:	xor    ecx,ebp
1004a419:	pop    ebx
1004a41a:	call   0x10043615
1004a41f:	add    ebp,0x49c
1004a425:	leave  
1004a426:	ret    
1004a427:	push   0xc
1004a429:	push   0x10075eb0
1004a42e:	call   0x1004771c
1004a433:	call   0x10046f84
1004a438:	mov    edi,eax
1004a43a:	mov    eax,ds:0x100808c4
1004a43f:	test   DWORD PTR [edi+0x70],eax
1004a442:	je     0x1004a461
1004a444:	cmp    DWORD PTR [edi+0x6c],0x0
1004a448:	je     0x1004a461
1004a44a:	mov    esi,DWORD PTR [edi+0x68]
1004a44d:	test   esi,esi
1004a44f:	jne    0x1004a459
1004a451:	push   0x20
1004a453:	call   0x10047420
1004a458:	pop    ecx
1004a459:	mov    eax,esi
1004a45b:	call   0x10047761
1004a460:	ret    
1004a461:	push   0xd
1004a463:	call   0x10047e0e
1004a468:	pop    ecx
1004a469:	and    DWORD PTR [ebp-0x4],0x0
1004a46d:	mov    esi,DWORD PTR [edi+0x68]
1004a470:	mov    DWORD PTR [ebp-0x1c],esi
1004a473:	cmp    esi,DWORD PTR ds:0x100807c8
1004a479:	je     0x1004a4b1
1004a47b:	test   esi,esi
1004a47d:	je     0x1004a499
1004a47f:	push   esi
1004a480:	call   DWORD PTR ds:0x100670bc
1004a486:	test   eax,eax
1004a488:	jne    0x1004a499
1004a48a:	cmp    esi,0x100803a0
1004a490:	je     0x1004a499
1004a492:	push   esi
1004a493:	call   0x100437dc
1004a498:	pop    ecx
1004a499:	mov    eax,ds:0x100807c8
1004a49e:	mov    DWORD PTR [edi+0x68],eax
1004a4a1:	mov    esi,DWORD PTR ds:0x100807c8
1004a4a7:	mov    DWORD PTR [ebp-0x1c],esi
1004a4aa:	push   esi
1004a4ab:	call   DWORD PTR ds:0x100670b0
1004a4b1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a4b8:	call   0x1004a4c2
1004a4bd:	jmp    0x1004a44d
1004a4bf:	mov    esi,DWORD PTR [ebp-0x1c]
1004a4c2:	push   0xd
1004a4c4:	call   0x10047d36
1004a4c9:	pop    ecx
1004a4ca:	ret    
1004a4cb:	push   ebp
1004a4cc:	mov    ebp,esp
1004a4ce:	sub    esp,0x10
1004a4d1:	push   ebx
1004a4d2:	xor    ebx,ebx
1004a4d4:	push   ebx
1004a4d5:	lea    ecx,[ebp-0x10]
1004a4d8:	call   0x100456a5
1004a4dd:	cmp    esi,0xfffffffe
1004a4e0:	mov    DWORD PTR ds:0x10082314,ebx
1004a4e6:	jne    0x1004a506
1004a4e8:	mov    DWORD PTR ds:0x10082314,0x1
1004a4f2:	call   DWORD PTR ds:0x100671ec
1004a4f8:	cmp    BYTE PTR [ebp-0x4],bl
1004a4fb:	je     0x1004a542
1004a4fd:	mov    ecx,DWORD PTR [ebp-0x8]
1004a500:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004a504:	jmp    0x1004a542
1004a506:	cmp    esi,0xfffffffd
1004a509:	jne    0x1004a51d
1004a50b:	mov    DWORD PTR ds:0x10082314,0x1
1004a515:	call   DWORD PTR ds:0x100671e8
1004a51b:	jmp    0x1004a4f8
1004a51d:	cmp    esi,0xfffffffc
1004a520:	jne    0x1004a534
1004a522:	mov    eax,DWORD PTR [ebp-0x10]
1004a525:	mov    eax,DWORD PTR [eax+0x4]
1004a528:	mov    DWORD PTR ds:0x10082314,0x1
1004a532:	jmp    0x1004a4f8
1004a534:	cmp    BYTE PTR [ebp-0x4],bl
1004a537:	je     0x1004a540
1004a539:	mov    eax,DWORD PTR [ebp-0x8]
1004a53c:	and    DWORD PTR [eax+0x70],0xfffffffd
1004a540:	mov    eax,esi
1004a542:	pop    ebx
1004a543:	leave  
1004a544:	ret    
1004a545:	push   ebp
1004a546:	mov    ebp,esp
1004a548:	sub    esp,0x20
1004a54b:	mov    eax,ds:0x100801ac
1004a550:	xor    eax,ebp
1004a552:	mov    DWORD PTR [ebp-0x4],eax
1004a555:	push   ebx
1004a556:	mov    ebx,DWORD PTR [ebp+0xc]
1004a559:	push   esi
1004a55a:	mov    esi,DWORD PTR [ebp+0x8]
1004a55d:	push   edi
1004a55e:	call   0x1004a4cb
1004a563:	mov    edi,eax
1004a565:	xor    esi,esi
1004a567:	cmp    edi,esi
1004a569:	mov    DWORD PTR [ebp+0x8],edi
1004a56c:	jne    0x1004a57c
1004a56e:	mov    eax,ebx
1004a570:	call   0x1004a248
1004a575:	xor    eax,eax
1004a577:	jmp    0x1004a70f
1004a57c:	mov    DWORD PTR [ebp-0x1c],esi
1004a57f:	xor    eax,eax
1004a581:	cmp    DWORD PTR [eax+0x100807d0],edi
1004a587:	je     0x1004a61e
1004a58d:	inc    DWORD PTR [ebp-0x1c]
1004a590:	add    eax,0x30
1004a593:	cmp    eax,0xf0
1004a598:	jb     0x1004a581
1004a59a:	cmp    edi,0xfde8
1004a5a0:	je     0x1004a70c
1004a5a6:	cmp    edi,0xfde9
1004a5ac:	je     0x1004a70c
1004a5b2:	movzx  eax,di
1004a5b5:	push   eax
1004a5b6:	call   DWORD PTR ds:0x100671f0
1004a5bc:	test   eax,eax
1004a5be:	je     0x1004a70c
1004a5c4:	lea    eax,[ebp-0x18]
1004a5c7:	push   eax
1004a5c8:	push   edi
1004a5c9:	call   DWORD PTR ds:0x100671e4
1004a5cf:	test   eax,eax
1004a5d1:	je     0x1004a700
1004a5d7:	push   0x101
1004a5dc:	lea    eax,[ebx+0x1c]
1004a5df:	push   esi
1004a5e0:	push   eax
1004a5e1:	call   0x10045dc0
1004a5e6:	xor    edx,edx
1004a5e8:	inc    edx
1004a5e9:	add    esp,0xc
1004a5ec:	cmp    DWORD PTR [ebp-0x18],edx
1004a5ef:	mov    DWORD PTR [ebx+0x4],edi
1004a5f2:	mov    DWORD PTR [ebx+0xc],esi
1004a5f5:	jbe    0x1004a6f3
1004a5fb:	cmp    BYTE PTR [ebp-0x12],0x0
1004a5ff:	je     0x1004a6d4
1004a605:	lea    esi,[ebp-0x11]
1004a608:	mov    cl,BYTE PTR [esi]
1004a60a:	test   cl,cl
1004a60c:	je     0x1004a6d4
1004a612:	movzx  eax,BYTE PTR [esi-0x1]
1004a616:	movzx  ecx,cl
1004a619:	jmp    0x1004a6c4
1004a61e:	push   0x101
1004a623:	lea    eax,[ebx+0x1c]
1004a626:	push   esi
1004a627:	push   eax
1004a628:	call   0x10045dc0
1004a62d:	mov    ecx,DWORD PTR [ebp-0x1c]
1004a630:	add    esp,0xc
1004a633:	imul   ecx,ecx,0x30
1004a636:	mov    DWORD PTR [ebp-0x20],esi
1004a639:	lea    esi,[ecx+0x100807e0]
1004a63f:	mov    DWORD PTR [ebp-0x1c],esi
1004a642:	jmp    0x1004a66e
1004a644:	mov    al,BYTE PTR [esi+0x1]
1004a647:	test   al,al
1004a649:	je     0x1004a673
1004a64b:	movzx  edi,BYTE PTR [esi]
1004a64e:	movzx  eax,al
1004a651:	jmp    0x1004a665
1004a653:	mov    eax,DWORD PTR [ebp-0x20]
1004a656:	mov    al,BYTE PTR [eax+0x100807cc]
1004a65c:	or     BYTE PTR [ebx+edi*1+0x1d],al
1004a660:	movzx  eax,BYTE PTR [esi+0x1]
1004a664:	inc    edi
1004a665:	cmp    edi,eax
1004a667:	jbe    0x1004a653
1004a669:	mov    edi,DWORD PTR [ebp+0x8]
1004a66c:	inc    esi
1004a66d:	inc    esi
1004a66e:	cmp    BYTE PTR [esi],0x0
1004a671:	jne    0x1004a644
1004a673:	mov    esi,DWORD PTR [ebp-0x1c]
1004a676:	inc    DWORD PTR [ebp-0x20]
1004a679:	add    esi,0x8
1004a67c:	cmp    DWORD PTR [ebp-0x20],0x4
1004a680:	mov    DWORD PTR [ebp-0x1c],esi
1004a683:	jb     0x1004a66e
1004a685:	mov    eax,edi
1004a687:	mov    DWORD PTR [ebx+0x4],edi
1004a68a:	mov    DWORD PTR [ebx+0x8],0x1
1004a691:	call   0x1004a219
1004a696:	push   0x6
1004a698:	mov    DWORD PTR [ebx+0xc],eax
1004a69b:	lea    eax,[ebx+0x10]
1004a69e:	lea    ecx,[ecx+0x100807d4]
1004a6a4:	pop    edx
1004a6a5:	mov    si,WORD PTR [ecx]
1004a6a8:	inc    ecx
1004a6a9:	mov    WORD PTR [eax],si
1004a6ac:	inc    ecx
1004a6ad:	inc    eax
1004a6ae:	inc    eax
1004a6af:	dec    edx
1004a6b0:	jne    0x1004a6a5
1004a6b2:	mov    esi,ebx
1004a6b4:	call   0x1004a29d
1004a6b9:	jmp    0x1004a575
1004a6be:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1004a6c3:	inc    eax
1004a6c4:	cmp    eax,ecx
1004a6c6:	jbe    0x1004a6be
1004a6c8:	inc    esi
1004a6c9:	inc    esi
1004a6ca:	cmp    BYTE PTR [esi-0x1],0x0
1004a6ce:	jne    0x1004a608
1004a6d4:	lea    eax,[ebx+0x1e]
1004a6d7:	mov    ecx,0xfe
1004a6dc:	or     BYTE PTR [eax],0x8
1004a6df:	inc    eax
1004a6e0:	dec    ecx
1004a6e1:	jne    0x1004a6dc
1004a6e3:	mov    eax,DWORD PTR [ebx+0x4]
1004a6e6:	call   0x1004a219
1004a6eb:	mov    DWORD PTR [ebx+0xc],eax
1004a6ee:	mov    DWORD PTR [ebx+0x8],edx
1004a6f1:	jmp    0x1004a6f6
1004a6f3:	mov    DWORD PTR [ebx+0x8],esi
1004a6f6:	xor    eax,eax
1004a6f8:	lea    edi,[ebx+0x10]
1004a6fb:	stos   DWORD PTR es:[edi],eax
1004a6fc:	stos   DWORD PTR es:[edi],eax
1004a6fd:	stos   DWORD PTR es:[edi],eax
1004a6fe:	jmp    0x1004a6b2
1004a700:	cmp    DWORD PTR ds:0x10082314,esi
1004a706:	jne    0x1004a56e
1004a70c:	or     eax,0xffffffff
1004a70f:	mov    ecx,DWORD PTR [ebp-0x4]
1004a712:	pop    edi
1004a713:	pop    esi
1004a714:	xor    ecx,ebp
1004a716:	pop    ebx
1004a717:	call   0x10043615
1004a71c:	leave  
1004a71d:	ret    
1004a71e:	push   0x14
1004a720:	push   0x10075ed0
1004a725:	call   0x1004771c
1004a72a:	or     DWORD PTR [ebp-0x20],0xffffffff
1004a72e:	call   0x10046f84
1004a733:	mov    edi,eax
1004a735:	mov    DWORD PTR [ebp-0x24],edi
1004a738:	call   0x1004a427
1004a73d:	mov    ebx,DWORD PTR [edi+0x68]
1004a740:	mov    esi,DWORD PTR [ebp+0x8]
1004a743:	call   0x1004a4cb
1004a748:	mov    DWORD PTR [ebp+0x8],eax
1004a74b:	cmp    eax,DWORD PTR [ebx+0x4]
1004a74e:	je     0x1004a8ab
1004a754:	push   0x220
1004a759:	call   0x100472aa
1004a75e:	pop    ecx
1004a75f:	mov    ebx,eax
1004a761:	test   ebx,ebx
1004a763:	je     0x1004a8af
1004a769:	mov    ecx,0x88
1004a76e:	mov    esi,DWORD PTR [edi+0x68]
1004a771:	mov    edi,ebx
1004a773:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004a775:	and    DWORD PTR [ebx],0x0
1004a778:	push   ebx
1004a779:	push   DWORD PTR [ebp+0x8]
1004a77c:	call   0x1004a545
1004a781:	pop    ecx
1004a782:	pop    ecx
1004a783:	mov    DWORD PTR [ebp-0x20],eax
1004a786:	test   eax,eax
1004a788:	jne    0x1004a88a
1004a78e:	mov    esi,DWORD PTR [ebp-0x24]
1004a791:	push   DWORD PTR [esi+0x68]
1004a794:	call   DWORD PTR ds:0x100670bc
1004a79a:	test   eax,eax
1004a79c:	jne    0x1004a7af
1004a79e:	mov    eax,DWORD PTR [esi+0x68]
1004a7a1:	cmp    eax,0x100803a0
1004a7a6:	je     0x1004a7af
1004a7a8:	push   eax
1004a7a9:	call   0x100437dc
1004a7ae:	pop    ecx
1004a7af:	mov    DWORD PTR [esi+0x68],ebx
1004a7b2:	push   ebx
1004a7b3:	mov    edi,DWORD PTR ds:0x100670b0
1004a7b9:	call   edi
1004a7bb:	test   BYTE PTR [esi+0x70],0x2
1004a7bf:	jne    0x1004a8af
1004a7c5:	test   BYTE PTR ds:0x100808c4,0x1
1004a7cc:	jne    0x1004a8af
1004a7d2:	push   0xd
1004a7d4:	call   0x10047e0e
1004a7d9:	pop    ecx
1004a7da:	and    DWORD PTR [ebp-0x4],0x0
1004a7de:	mov    eax,DWORD PTR [ebx+0x4]
1004a7e1:	mov    ds:0x10082324,eax
1004a7e6:	mov    eax,DWORD PTR [ebx+0x8]
1004a7e9:	mov    ds:0x10082328,eax
1004a7ee:	mov    eax,DWORD PTR [ebx+0xc]
1004a7f1:	mov    ds:0x1008232c,eax
1004a7f6:	xor    eax,eax
1004a7f8:	mov    DWORD PTR [ebp-0x1c],eax
1004a7fb:	cmp    eax,0x5
1004a7fe:	jge    0x1004a810
1004a800:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1004a805:	mov    WORD PTR [eax*2+0x10082318],cx
1004a80d:	inc    eax
1004a80e:	jmp    0x1004a7f8
1004a810:	xor    eax,eax
1004a812:	mov    DWORD PTR [ebp-0x1c],eax
1004a815:	cmp    eax,0x101
1004a81a:	jge    0x1004a829
1004a81c:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1004a820:	mov    BYTE PTR [eax+0x100805c0],cl
1004a826:	inc    eax
1004a827:	jmp    0x1004a812
1004a829:	xor    eax,eax
1004a82b:	mov    DWORD PTR [ebp-0x1c],eax
1004a82e:	cmp    eax,0x100
1004a833:	jge    0x1004a845
1004a835:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1004a83c:	mov    BYTE PTR [eax+0x100806c8],cl
1004a842:	inc    eax
1004a843:	jmp    0x1004a82b
1004a845:	push   DWORD PTR ds:0x100807c8
1004a84b:	call   DWORD PTR ds:0x100670bc
1004a851:	test   eax,eax
1004a853:	jne    0x1004a868
1004a855:	mov    eax,ds:0x100807c8
1004a85a:	cmp    eax,0x100803a0
1004a85f:	je     0x1004a868
1004a861:	push   eax
1004a862:	call   0x100437dc
1004a867:	pop    ecx
1004a868:	mov    DWORD PTR ds:0x100807c8,ebx
1004a86e:	push   ebx
1004a86f:	call   edi
1004a871:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a878:	call   0x1004a87f
1004a87d:	jmp    0x1004a8af
1004a87f:	push   0xd
1004a881:	call   0x10047d36
1004a886:	pop    ecx
1004a887:	ret    
1004a888:	jmp    0x1004a8af
1004a88a:	cmp    eax,0xffffffff
1004a88d:	jne    0x1004a8af
1004a88f:	cmp    ebx,0x100803a0
1004a895:	je     0x1004a89e
1004a897:	push   ebx
1004a898:	call   0x100437dc
1004a89d:	pop    ecx
1004a89e:	call   0x10046c41
1004a8a3:	mov    DWORD PTR [eax],0x16
1004a8a9:	jmp    0x1004a8af
1004a8ab:	and    DWORD PTR [ebp-0x20],0x0
1004a8af:	mov    eax,DWORD PTR [ebp-0x20]
1004a8b2:	call   0x10047761
1004a8b7:	ret    
1004a8b8:	cmp    DWORD PTR ds:0x10084614,0x0
1004a8bf:	jne    0x1004a8d3
1004a8c1:	push   0xfffffffd
1004a8c3:	call   0x1004a71e
1004a8c8:	pop    ecx
1004a8c9:	mov    DWORD PTR ds:0x10084614,0x1
1004a8d3:	xor    eax,eax
1004a8d5:	ret    
1004a8d6:	push   ebx
1004a8d7:	push   ebp
1004a8d8:	push   esi
1004a8d9:	mov    esi,DWORD PTR [esp+0x10]
1004a8dd:	mov    eax,DWORD PTR [esi+0xbc]
1004a8e3:	xor    ebp,ebp
1004a8e5:	cmp    eax,ebp
1004a8e7:	push   edi
1004a8e8:	je     0x1004a959
1004a8ea:	cmp    eax,0x10080e10
1004a8ef:	je     0x1004a959
1004a8f1:	mov    eax,DWORD PTR [esi+0xb0]
1004a8f7:	cmp    eax,ebp
1004a8f9:	je     0x1004a959
1004a8fb:	cmp    DWORD PTR [eax],ebp
1004a8fd:	jne    0x1004a959
1004a8ff:	mov    eax,DWORD PTR [esi+0xb8]
1004a905:	cmp    eax,ebp
1004a907:	je     0x1004a920
1004a909:	cmp    DWORD PTR [eax],ebp
1004a90b:	jne    0x1004a920
1004a90d:	push   eax
1004a90e:	call   0x100437dc
1004a913:	push   DWORD PTR [esi+0xbc]
1004a919:	call   0x1004f33c
1004a91e:	pop    ecx
1004a91f:	pop    ecx
1004a920:	mov    eax,DWORD PTR [esi+0xb4]
1004a926:	cmp    eax,ebp
1004a928:	je     0x1004a941
1004a92a:	cmp    DWORD PTR [eax],ebp
1004a92c:	jne    0x1004a941
1004a92e:	push   eax
1004a92f:	call   0x100437dc
1004a934:	push   DWORD PTR [esi+0xbc]
1004a93a:	call   0x1004f2fc
1004a93f:	pop    ecx
1004a940:	pop    ecx
1004a941:	push   DWORD PTR [esi+0xb0]
1004a947:	call   0x100437dc
1004a94c:	push   DWORD PTR [esi+0xbc]
1004a952:	call   0x100437dc
1004a957:	pop    ecx
1004a958:	pop    ecx
1004a959:	mov    eax,DWORD PTR [esi+0xc0]
1004a95f:	cmp    eax,ebp
1004a961:	je     0x1004a9a7
1004a963:	cmp    DWORD PTR [eax],ebp
1004a965:	jne    0x1004a9a7
1004a967:	mov    eax,DWORD PTR [esi+0xc4]
1004a96d:	sub    eax,0xfe
1004a972:	push   eax
1004a973:	call   0x100437dc
1004a978:	mov    eax,DWORD PTR [esi+0xcc]
1004a97e:	mov    edi,0x80
1004a983:	sub    eax,edi
1004a985:	push   eax
1004a986:	call   0x100437dc
1004a98b:	mov    eax,DWORD PTR [esi+0xd0]
1004a991:	sub    eax,edi
1004a993:	push   eax
1004a994:	call   0x100437dc
1004a999:	push   DWORD PTR [esi+0xc0]
1004a99f:	call   0x100437dc
1004a9a4:	add    esp,0x10
1004a9a7:	lea    edi,[esi+0xd4]
1004a9ad:	mov    eax,DWORD PTR [edi]
1004a9af:	cmp    eax,0x10080d50
1004a9b4:	je     0x1004a9cd
1004a9b6:	cmp    DWORD PTR [eax+0xb4],ebp
1004a9bc:	jne    0x1004a9cd
1004a9be:	push   eax
1004a9bf:	call   0x1004f16c
1004a9c4:	push   DWORD PTR [edi]
1004a9c6:	call   0x100437dc
1004a9cb:	pop    ecx
1004a9cc:	pop    ecx
1004a9cd:	push   0x6
1004a9cf:	lea    edi,[esi+0x50]
1004a9d2:	pop    ebx
1004a9d3:	cmp    DWORD PTR [edi-0x8],0x100808c8
1004a9da:	je     0x1004a9ed
1004a9dc:	mov    eax,DWORD PTR [edi]
1004a9de:	cmp    eax,ebp
1004a9e0:	je     0x1004a9ed
1004a9e2:	cmp    DWORD PTR [eax],ebp
1004a9e4:	jne    0x1004a9ed
1004a9e6:	push   eax
1004a9e7:	call   0x100437dc
1004a9ec:	pop    ecx
1004a9ed:	cmp    DWORD PTR [edi-0x4],ebp
1004a9f0:	je     0x1004aa04
1004a9f2:	mov    eax,DWORD PTR [edi+0x4]
1004a9f5:	cmp    eax,ebp
1004a9f7:	je     0x1004aa04
1004a9f9:	cmp    DWORD PTR [eax],ebp
1004a9fb:	jne    0x1004aa04
1004a9fd:	push   eax
1004a9fe:	call   0x100437dc
1004aa03:	pop    ecx
1004aa04:	add    edi,0x10
1004aa07:	dec    ebx
1004aa08:	jne    0x1004a9d3
1004aa0a:	push   esi
1004aa0b:	call   0x100437dc
1004aa10:	pop    ecx
1004aa11:	pop    edi
1004aa12:	pop    esi
1004aa13:	pop    ebp
1004aa14:	pop    ebx
1004aa15:	ret    
1004aa16:	push   ebx
1004aa17:	push   ebp
1004aa18:	push   esi
1004aa19:	mov    esi,DWORD PTR [esp+0x10]
1004aa1d:	push   edi
1004aa1e:	mov    edi,DWORD PTR ds:0x100670b0
1004aa24:	push   esi
1004aa25:	call   edi
1004aa27:	mov    eax,DWORD PTR [esi+0xb0]
1004aa2d:	test   eax,eax
1004aa2f:	je     0x1004aa34
1004aa31:	push   eax
1004aa32:	call   edi
1004aa34:	mov    eax,DWORD PTR [esi+0xb8]
1004aa3a:	test   eax,eax
1004aa3c:	je     0x1004aa41
1004aa3e:	push   eax
1004aa3f:	call   edi
1004aa41:	mov    eax,DWORD PTR [esi+0xb4]
1004aa47:	test   eax,eax
1004aa49:	je     0x1004aa4e
1004aa4b:	push   eax
1004aa4c:	call   edi
1004aa4e:	mov    eax,DWORD PTR [esi+0xc0]
1004aa54:	test   eax,eax
1004aa56:	je     0x1004aa5b
1004aa58:	push   eax
1004aa59:	call   edi
1004aa5b:	push   0x6
1004aa5d:	lea    ebx,[esi+0x50]
1004aa60:	pop    ebp
1004aa61:	cmp    DWORD PTR [ebx-0x8],0x100808c8
1004aa68:	je     0x1004aa73
1004aa6a:	mov    eax,DWORD PTR [ebx]
1004aa6c:	test   eax,eax
1004aa6e:	je     0x1004aa73
1004aa70:	push   eax
1004aa71:	call   edi
1004aa73:	cmp    DWORD PTR [ebx-0x4],0x0
1004aa77:	je     0x1004aa83
1004aa79:	mov    eax,DWORD PTR [ebx+0x4]
1004aa7c:	test   eax,eax
1004aa7e:	je     0x1004aa83
1004aa80:	push   eax
1004aa81:	call   edi
1004aa83:	add    ebx,0x10
1004aa86:	dec    ebp
1004aa87:	jne    0x1004aa61
1004aa89:	mov    eax,DWORD PTR [esi+0xd4]
1004aa8f:	add    eax,0xb4
1004aa94:	push   eax
1004aa95:	call   edi
1004aa97:	pop    edi
1004aa98:	pop    esi
1004aa99:	pop    ebp
1004aa9a:	pop    ebx
1004aa9b:	ret    
1004aa9c:	push   esi
1004aa9d:	mov    esi,DWORD PTR [esp+0x8]
1004aaa1:	test   esi,esi
1004aaa3:	je     0x1004ab24
1004aaa5:	push   ebx
1004aaa6:	push   ebp
1004aaa7:	push   edi
1004aaa8:	mov    edi,DWORD PTR ds:0x100670bc
1004aaae:	push   esi
1004aaaf:	call   edi
1004aab1:	mov    eax,DWORD PTR [esi+0xb0]
1004aab7:	test   eax,eax
1004aab9:	je     0x1004aabe
1004aabb:	push   eax
1004aabc:	call   edi
1004aabe:	mov    eax,DWORD PTR [esi+0xb8]
1004aac4:	test   eax,eax
1004aac6:	je     0x1004aacb
1004aac8:	push   eax
1004aac9:	call   edi
1004aacb:	mov    eax,DWORD PTR [esi+0xb4]
1004aad1:	test   eax,eax
1004aad3:	je     0x1004aad8
1004aad5:	push   eax
1004aad6:	call   edi
1004aad8:	mov    eax,DWORD PTR [esi+0xc0]
1004aade:	test   eax,eax
1004aae0:	je     0x1004aae5
1004aae2:	push   eax
1004aae3:	call   edi
1004aae5:	push   0x6
1004aae7:	lea    ebx,[esi+0x50]
1004aaea:	pop    ebp
1004aaeb:	cmp    DWORD PTR [ebx-0x8],0x100808c8
1004aaf2:	je     0x1004aafd
1004aaf4:	mov    eax,DWORD PTR [ebx]
1004aaf6:	test   eax,eax
1004aaf8:	je     0x1004aafd
1004aafa:	push   eax
1004aafb:	call   edi
1004aafd:	cmp    DWORD PTR [ebx-0x4],0x0
1004ab01:	je     0x1004ab0d
1004ab03:	mov    eax,DWORD PTR [ebx+0x4]
1004ab06:	test   eax,eax
1004ab08:	je     0x1004ab0d
1004ab0a:	push   eax
1004ab0b:	call   edi
1004ab0d:	add    ebx,0x10
1004ab10:	dec    ebp
1004ab11:	jne    0x1004aaeb
1004ab13:	mov    eax,DWORD PTR [esi+0xd4]
1004ab19:	add    eax,0xb4
1004ab1e:	push   eax
1004ab1f:	call   edi
1004ab21:	pop    edi
1004ab22:	pop    ebp
1004ab23:	pop    ebx
1004ab24:	mov    eax,esi
1004ab26:	pop    esi
1004ab27:	ret    
1004ab28:	test   edi,edi
1004ab2a:	je     0x1004ab63
1004ab2c:	test   eax,eax
1004ab2e:	je     0x1004ab63
1004ab30:	push   esi
1004ab31:	mov    esi,DWORD PTR [eax]
1004ab33:	cmp    esi,edi
1004ab35:	je     0x1004ab5f
1004ab37:	push   edi
1004ab38:	mov    DWORD PTR [eax],edi
1004ab3a:	call   0x1004aa16
1004ab3f:	test   esi,esi
1004ab41:	pop    ecx
1004ab42:	je     0x1004ab5f
1004ab44:	push   esi
1004ab45:	call   0x1004aa9c
1004ab4a:	cmp    DWORD PTR [esi],0x0
1004ab4d:	pop    ecx
1004ab4e:	jne    0x1004ab5f
1004ab50:	cmp    esi,0x100808d0
1004ab56:	je     0x1004ab5f
1004ab58:	push   esi
1004ab59:	call   0x1004a8d6
1004ab5e:	pop    ecx
1004ab5f:	mov    eax,edi
1004ab61:	pop    esi
1004ab62:	ret    
1004ab63:	xor    eax,eax
1004ab65:	ret    
1004ab66:	push   0xc
1004ab68:	push   0x10075ef0
1004ab6d:	call   0x1004771c
1004ab72:	call   0x10046f84
1004ab77:	mov    esi,eax
1004ab79:	mov    eax,ds:0x100808c4
1004ab7e:	test   DWORD PTR [esi+0x70],eax
1004ab81:	je     0x1004aba5
1004ab83:	cmp    DWORD PTR [esi+0x6c],0x0
1004ab87:	je     0x1004aba5
1004ab89:	call   0x10046f84
1004ab8e:	mov    esi,DWORD PTR [eax+0x6c]
1004ab91:	test   esi,esi
1004ab93:	jne    0x1004ab9d
1004ab95:	push   0x20
1004ab97:	call   0x10047420
1004ab9c:	pop    ecx
1004ab9d:	mov    eax,esi
1004ab9f:	call   0x10047761
1004aba4:	ret    
1004aba5:	push   0xc
1004aba7:	call   0x10047e0e
1004abac:	pop    ecx
1004abad:	and    DWORD PTR [ebp-0x4],0x0
1004abb1:	lea    eax,[esi+0x6c]
1004abb4:	mov    edi,DWORD PTR ds:0x100809a8
1004abba:	call   0x1004ab28
1004abbf:	mov    DWORD PTR [ebp-0x1c],eax
1004abc2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004abc9:	call   0x1004abd0
1004abce:	jmp    0x1004ab91
1004abd0:	push   0xc
1004abd2:	call   0x10047d36
1004abd7:	pop    ecx
1004abd8:	mov    esi,DWORD PTR [ebp-0x1c]
1004abdb:	ret    
1004abdc:	int3   
1004abdd:	int3   
1004abde:	int3   
1004abdf:	int3   
1004abe0:	lea    eax,[edx-0x1]
1004abe3:	pop    ebx
1004abe4:	ret    
1004abe5:	lea    esp,[esp+0x0]
1004abec:	lea    esp,[esp+0x0]
1004abf0:	xor    eax,eax
1004abf2:	mov    al,BYTE PTR [esp+0x8]
1004abf6:	push   ebx
1004abf7:	mov    ebx,eax
1004abf9:	shl    eax,0x8
1004abfc:	mov    edx,DWORD PTR [esp+0x8]
1004ac00:	test   edx,0x3
1004ac06:	je     0x1004ac1d
1004ac08:	mov    cl,BYTE PTR [edx]
1004ac0a:	add    edx,0x1
1004ac0d:	cmp    cl,bl
1004ac0f:	je     0x1004abe0
1004ac11:	test   cl,cl
1004ac13:	je     0x1004ac66
1004ac15:	test   edx,0x3
1004ac1b:	jne    0x1004ac08
1004ac1d:	or     ebx,eax
1004ac1f:	push   edi
1004ac20:	mov    eax,ebx
1004ac22:	shl    ebx,0x10
1004ac25:	push   esi
1004ac26:	or     ebx,eax
1004ac28:	mov    ecx,DWORD PTR [edx]
1004ac2a:	mov    edi,0x7efefeff
1004ac2f:	mov    eax,ecx
1004ac31:	mov    esi,edi
1004ac33:	xor    ecx,ebx
1004ac35:	add    esi,eax
1004ac37:	add    edi,ecx
1004ac39:	xor    ecx,0xffffffff
1004ac3c:	xor    eax,0xffffffff
1004ac3f:	xor    ecx,edi
1004ac41:	xor    eax,esi
1004ac43:	add    edx,0x4
1004ac46:	and    ecx,0x81010100
1004ac4c:	jne    0x1004ac6a
1004ac4e:	and    eax,0x81010100
1004ac53:	je     0x1004ac28
1004ac55:	and    eax,0x1010100
1004ac5a:	jne    0x1004ac64
1004ac5c:	and    esi,0x80000000
1004ac62:	jne    0x1004ac28
1004ac64:	pop    esi
1004ac65:	pop    edi
1004ac66:	pop    ebx
1004ac67:	xor    eax,eax
1004ac69:	ret    
1004ac6a:	mov    eax,DWORD PTR [edx-0x4]
1004ac6d:	cmp    al,bl
1004ac6f:	je     0x1004aca7
1004ac71:	test   al,al
1004ac73:	je     0x1004ac64
1004ac75:	cmp    ah,bl
1004ac77:	je     0x1004aca0
1004ac79:	test   ah,ah
1004ac7b:	je     0x1004ac64
1004ac7d:	shr    eax,0x10
1004ac80:	cmp    al,bl
1004ac82:	je     0x1004ac99
1004ac84:	test   al,al
1004ac86:	je     0x1004ac64
1004ac88:	cmp    ah,bl
1004ac8a:	je     0x1004ac92
1004ac8c:	test   ah,ah
1004ac8e:	je     0x1004ac64
1004ac90:	jmp    0x1004ac28
1004ac92:	pop    esi
1004ac93:	pop    edi
1004ac94:	lea    eax,[edx-0x1]
1004ac97:	pop    ebx
1004ac98:	ret    
1004ac99:	lea    eax,[edx-0x2]
1004ac9c:	pop    esi
1004ac9d:	pop    edi
1004ac9e:	pop    ebx
1004ac9f:	ret    
1004aca0:	lea    eax,[edx-0x3]
1004aca3:	pop    esi
1004aca4:	pop    edi
1004aca5:	pop    ebx
1004aca6:	ret    
1004aca7:	lea    eax,[edx-0x4]
1004acaa:	pop    esi
1004acab:	pop    edi
1004acac:	pop    ebx
1004acad:	ret    
1004acae:	int3   
1004acaf:	int3   
1004acb0:	push   esi
1004acb1:	mov    eax,DWORD PTR [esp+0x14]
1004acb5:	or     eax,eax
1004acb7:	jne    0x1004ace1
1004acb9:	mov    ecx,DWORD PTR [esp+0x10]
1004acbd:	mov    eax,DWORD PTR [esp+0xc]
1004acc1:	xor    edx,edx
1004acc3:	div    ecx
1004acc5:	mov    ebx,eax
1004acc7:	mov    eax,DWORD PTR [esp+0x8]
1004accb:	div    ecx
1004accd:	mov    esi,eax
1004accf:	mov    eax,ebx
1004acd1:	mul    DWORD PTR [esp+0x10]
1004acd5:	mov    ecx,eax
1004acd7:	mov    eax,esi
1004acd9:	mul    DWORD PTR [esp+0x10]
1004acdd:	add    edx,ecx
1004acdf:	jmp    0x1004ad28
1004ace1:	mov    ecx,eax
1004ace3:	mov    ebx,DWORD PTR [esp+0x10]
1004ace7:	mov    edx,DWORD PTR [esp+0xc]
1004aceb:	mov    eax,DWORD PTR [esp+0x8]
1004acef:	shr    ecx,1
1004acf1:	rcr    ebx,1
1004acf3:	shr    edx,1
1004acf5:	rcr    eax,1
1004acf7:	or     ecx,ecx
1004acf9:	jne    0x1004acef
1004acfb:	div    ebx
1004acfd:	mov    esi,eax
1004acff:	mul    DWORD PTR [esp+0x14]
1004ad03:	mov    ecx,eax
1004ad05:	mov    eax,DWORD PTR [esp+0x10]
1004ad09:	mul    esi
1004ad0b:	add    edx,ecx
1004ad0d:	jb     0x1004ad1d
1004ad0f:	cmp    edx,DWORD PTR [esp+0xc]
1004ad13:	ja     0x1004ad1d
1004ad15:	jb     0x1004ad26
1004ad17:	cmp    eax,DWORD PTR [esp+0x8]
1004ad1b:	jbe    0x1004ad26
1004ad1d:	dec    esi
1004ad1e:	sub    eax,DWORD PTR [esp+0x10]
1004ad22:	sbb    edx,DWORD PTR [esp+0x14]
1004ad26:	xor    ebx,ebx
1004ad28:	sub    eax,DWORD PTR [esp+0x8]
1004ad2c:	sbb    edx,DWORD PTR [esp+0xc]
1004ad30:	neg    edx
1004ad32:	neg    eax
1004ad34:	sbb    edx,0x0
1004ad37:	mov    ecx,edx
1004ad39:	mov    edx,ebx
1004ad3b:	mov    ebx,ecx
1004ad3d:	mov    ecx,eax
1004ad3f:	mov    eax,esi
1004ad41:	pop    esi
1004ad42:	ret    0x10
1004ad45:	push   ebp
1004ad46:	mov    ebp,esp
1004ad48:	sub    esp,0x4
1004ad4b:	mov    DWORD PTR [ebp-0x4],edi
1004ad4e:	mov    edi,DWORD PTR [ebp+0x8]
1004ad51:	mov    ecx,DWORD PTR [ebp+0xc]
1004ad54:	shr    ecx,0x7
1004ad57:	pxor   xmm0,xmm0
1004ad5b:	jmp    0x1004ad65
1004ad5d:	lea    esp,[esp+0x0]
1004ad64:	nop
1004ad65:	movdqa XMMWORD PTR [edi],xmm0
1004ad69:	movdqa XMMWORD PTR [edi+0x10],xmm0
1004ad6e:	movdqa XMMWORD PTR [edi+0x20],xmm0
1004ad73:	movdqa XMMWORD PTR [edi+0x30],xmm0
1004ad78:	movdqa XMMWORD PTR [edi+0x40],xmm0
1004ad7d:	movdqa XMMWORD PTR [edi+0x50],xmm0
1004ad82:	movdqa XMMWORD PTR [edi+0x60],xmm0
1004ad87:	movdqa XMMWORD PTR [edi+0x70],xmm0
1004ad8c:	lea    edi,[edi+0x80]
1004ad92:	dec    ecx
1004ad93:	jne    0x1004ad65
1004ad95:	mov    edi,DWORD PTR [ebp-0x4]
1004ad98:	mov    esp,ebp
1004ad9a:	pop    ebp
1004ad9b:	ret    
1004ad9c:	push   ebp
1004ad9d:	mov    ebp,esp
1004ad9f:	sub    esp,0x10
1004ada2:	mov    DWORD PTR [ebp-0x4],edi
1004ada5:	mov    eax,DWORD PTR [ebp+0x8]
1004ada8:	cdq    
1004ada9:	mov    edi,eax
1004adab:	xor    edi,edx
1004adad:	sub    edi,edx
1004adaf:	and    edi,0xf
1004adb2:	xor    edi,edx
1004adb4:	sub    edi,edx
1004adb6:	test   edi,edi
1004adb8:	jne    0x1004adf6
1004adba:	mov    ecx,DWORD PTR [ebp+0x10]
1004adbd:	mov    edx,ecx
1004adbf:	and    edx,0x7f
1004adc2:	mov    DWORD PTR [ebp-0xc],edx
1004adc5:	cmp    ecx,edx
1004adc7:	je     0x1004addb
1004adc9:	sub    ecx,edx
1004adcb:	push   ecx
1004adcc:	push   eax
1004adcd:	call   0x1004ad45
1004add2:	add    esp,0x8
1004add5:	mov    eax,DWORD PTR [ebp+0x8]
1004add8:	mov    edx,DWORD PTR [ebp-0xc]
1004addb:	test   edx,edx
1004addd:	je     0x1004ae24
1004addf:	add    eax,DWORD PTR [ebp+0x10]
1004ade2:	sub    eax,edx
1004ade4:	mov    DWORD PTR [ebp-0x8],eax
1004ade7:	xor    eax,eax
1004ade9:	mov    edi,DWORD PTR [ebp-0x8]
1004adec:	mov    ecx,DWORD PTR [ebp-0xc]
1004adef:	rep stos BYTE PTR es:[edi],al
1004adf1:	mov    eax,DWORD PTR [ebp+0x8]
1004adf4:	jmp    0x1004ae24
1004adf6:	neg    edi
1004adf8:	add    edi,0x10
1004adfb:	mov    DWORD PTR [ebp-0x10],edi
1004adfe:	xor    eax,eax
1004ae00:	mov    edi,DWORD PTR [ebp+0x8]
1004ae03:	mov    ecx,DWORD PTR [ebp-0x10]
1004ae06:	rep stos BYTE PTR es:[edi],al
1004ae08:	mov    eax,DWORD PTR [ebp-0x10]
1004ae0b:	mov    ecx,DWORD PTR [ebp+0x8]
1004ae0e:	mov    edx,DWORD PTR [ebp+0x10]
1004ae11:	add    ecx,eax
1004ae13:	sub    edx,eax
1004ae15:	push   edx
1004ae16:	push   0x0
1004ae18:	push   ecx
1004ae19:	call   0x1004ad9c
1004ae1e:	add    esp,0xc
1004ae21:	mov    eax,DWORD PTR [ebp+0x8]
1004ae24:	mov    edi,DWORD PTR [ebp-0x4]
1004ae27:	mov    esp,ebp
1004ae29:	pop    ebp
1004ae2a:	ret    
1004ae2b:	push   ebp
1004ae2c:	lea    ebp,[esp-0x2a8]
1004ae33:	sub    esp,0x328
1004ae39:	mov    eax,ds:0x100801ac
1004ae3e:	xor    eax,ebp
1004ae40:	mov    DWORD PTR [ebp+0x2a4],eax
1004ae46:	test   BYTE PTR ds:0x100809c0,0x1
1004ae4d:	push   esi
1004ae4e:	je     0x1004ae58
1004ae50:	push   0xa
1004ae52:	call   0x10049e8c
1004ae57:	pop    ecx
1004ae58:	call   0x1004c588
1004ae5d:	test   eax,eax
1004ae5f:	je     0x1004ae69
1004ae61:	push   0x16
1004ae63:	call   0x1004c595
1004ae68:	pop    ecx
1004ae69:	test   BYTE PTR ds:0x100809c0,0x2
1004ae70:	je     0x1004af16
1004ae76:	mov    DWORD PTR [ebp+0x88],eax
1004ae7c:	mov    DWORD PTR [ebp+0x84],ecx
1004ae82:	mov    DWORD PTR [ebp+0x80],edx
1004ae88:	mov    DWORD PTR [ebp+0x7c],ebx
1004ae8b:	mov    DWORD PTR [ebp+0x78],esi
1004ae8e:	mov    DWORD PTR [ebp+0x74],edi
1004ae91:	data16 mov WORD PTR [ebp+0xa0],ss
1004ae98:	data16 mov WORD PTR [ebp+0x94],cs
1004ae9f:	data16 mov WORD PTR [ebp+0x70],ds
1004aea3:	data16 mov WORD PTR [ebp+0x6c],es
1004aea7:	data16 mov WORD PTR [ebp+0x68],fs
1004aeab:	data16 mov WORD PTR [ebp+0x64],gs
1004aeaf:	pushf  
1004aeb0:	pop    DWORD PTR [ebp+0x98]
1004aeb6:	mov    esi,DWORD PTR [ebp+0x2ac]
1004aebc:	lea    eax,[ebp+0x2ac]
1004aec2:	mov    DWORD PTR [ebp+0x9c],eax
1004aec8:	mov    DWORD PTR [ebp-0x28],0x10001
1004aecf:	mov    DWORD PTR [ebp+0x90],esi
1004aed5:	mov    eax,DWORD PTR [eax-0x4]
1004aed8:	push   0x50
1004aeda:	mov    DWORD PTR [ebp+0x8c],eax
1004aee0:	lea    eax,[ebp-0x80]
1004aee3:	push   0x0
1004aee5:	push   eax
1004aee6:	call   0x10045dc0
1004aeeb:	lea    eax,[ebp-0x80]
1004aeee:	add    esp,0xc
1004aef1:	mov    DWORD PTR [ebp-0x30],eax
1004aef4:	lea    eax,[ebp-0x28]
1004aef7:	push   0x0
1004aef9:	mov    DWORD PTR [ebp-0x80],0x40000015
1004af00:	mov    DWORD PTR [ebp-0x74],esi
1004af03:	mov    DWORD PTR [ebp-0x2c],eax
1004af06:	call   DWORD PTR ds:0x10067188
1004af0c:	lea    eax,[ebp-0x30]
1004af0f:	push   eax
1004af10:	call   DWORD PTR ds:0x10067184
1004af16:	push   0x3
1004af18:	call   0x100476b0
1004af1d:	int3   
1004af1e:	mov    ecx,DWORD PTR [esp+0x8]
1004af22:	mov    eax,ds:0x100809c0
1004af27:	mov    edx,DWORD PTR [esp+0x4]
1004af2b:	and    edx,DWORD PTR [esp+0x8]
1004af2f:	not    ecx
1004af31:	and    ecx,eax
1004af33:	or     ecx,edx
1004af35:	mov    DWORD PTR ds:0x100809c0,ecx
1004af3b:	ret    
1004af3c:	mov    eax,DWORD PTR [esp+0x4]
1004af40:	mov    ds:0x1008235c,eax
1004af45:	ret    
1004af46:	push   ebp
1004af47:	mov    ebp,esp
1004af49:	sub    esp,0x14
1004af4c:	mov    eax,ds:0x100801ac
1004af51:	xor    eax,ebp
1004af53:	mov    DWORD PTR [ebp-0x4],eax
1004af56:	push   ebx
1004af57:	push   esi
1004af58:	xor    ebx,ebx
1004af5a:	cmp    DWORD PTR ds:0x10082360,ebx
1004af60:	push   edi
1004af61:	mov    esi,ecx
1004af63:	jne    0x1004af9d
1004af65:	push   ebx
1004af66:	push   ebx
1004af67:	xor    edi,edi
1004af69:	inc    edi
1004af6a:	push   edi
1004af6b:	push   0x10067cd8
1004af70:	push   0x100
1004af75:	push   ebx
1004af76:	call   DWORD PTR ds:0x100671f8
1004af7c:	test   eax,eax
1004af7e:	je     0x1004af88
1004af80:	mov    DWORD PTR ds:0x10082360,edi
1004af86:	jmp    0x1004af9d
1004af88:	call   DWORD PTR ds:0x100670cc
1004af8e:	cmp    eax,0x78
1004af91:	jne    0x1004af9d
1004af93:	mov    DWORD PTR ds:0x10082360,0x2
1004af9d:	cmp    DWORD PTR [ebp+0x14],ebx
1004afa0:	jle    0x1004afc4
1004afa2:	mov    ecx,DWORD PTR [ebp+0x14]
1004afa5:	mov    eax,DWORD PTR [ebp+0x10]
1004afa8:	dec    ecx
1004afa9:	cmp    BYTE PTR [eax],bl
1004afab:	je     0x1004afb5
1004afad:	inc    eax
1004afae:	cmp    ecx,ebx
1004afb0:	jne    0x1004afa8
1004afb2:	or     ecx,0xffffffff
1004afb5:	mov    eax,DWORD PTR [ebp+0x14]
1004afb8:	sub    eax,ecx
1004afba:	dec    eax
1004afbb:	cmp    eax,DWORD PTR [ebp+0x14]
1004afbe:	jge    0x1004afc1
1004afc0:	inc    eax
1004afc1:	mov    DWORD PTR [ebp+0x14],eax
1004afc4:	mov    eax,ds:0x10082360
1004afc9:	cmp    eax,0x2
1004afcc:	je     0x1004b17d
1004afd2:	cmp    eax,ebx
1004afd4:	je     0x1004b17d
1004afda:	cmp    eax,0x1
1004afdd:	jne    0x1004b1ae
1004afe3:	cmp    DWORD PTR [ebp+0x20],ebx
1004afe6:	mov    DWORD PTR [ebp-0x8],ebx
1004afe9:	jne    0x1004aff3
1004afeb:	mov    eax,DWORD PTR [esi]
1004afed:	mov    eax,DWORD PTR [eax+0x4]
1004aff0:	mov    DWORD PTR [ebp+0x20],eax
1004aff3:	mov    esi,DWORD PTR ds:0x1006708c
1004aff9:	xor    eax,eax
1004affb:	cmp    DWORD PTR [ebp+0x24],ebx
1004affe:	push   ebx
1004afff:	push   ebx
1004b000:	push   DWORD PTR [ebp+0x14]
1004b003:	setne  al
1004b006:	push   DWORD PTR [ebp+0x10]
1004b009:	lea    eax,[eax*8+0x1]
1004b010:	push   eax
1004b011:	push   DWORD PTR [ebp+0x20]
1004b014:	call   esi
1004b016:	mov    edi,eax
1004b018:	cmp    edi,ebx
1004b01a:	je     0x1004b1ae
1004b020:	jle    0x1004b065
1004b022:	push   0xffffffe0
1004b024:	xor    edx,edx
1004b026:	pop    eax
1004b027:	div    edi
1004b029:	cmp    eax,0x2
1004b02c:	jb     0x1004b065
1004b02e:	lea    eax,[edi+edi*1+0x8]
1004b032:	cmp    eax,0x400
1004b037:	ja     0x1004b04c
1004b039:	call   0x1004b9b0
1004b03e:	mov    eax,esp
1004b040:	cmp    eax,ebx
1004b042:	je     0x1004b060
1004b044:	mov    DWORD PTR [eax],0xcccc
1004b04a:	jmp    0x1004b05d
1004b04c:	push   eax
1004b04d:	call   0x10045143
1004b052:	cmp    eax,ebx
1004b054:	pop    ecx
1004b055:	je     0x1004b060
1004b057:	mov    DWORD PTR [eax],0xdddd
1004b05d:	add    eax,0x8
1004b060:	mov    DWORD PTR [ebp-0xc],eax
1004b063:	jmp    0x1004b068
1004b065:	mov    DWORD PTR [ebp-0xc],ebx
1004b068:	cmp    DWORD PTR [ebp-0xc],ebx
1004b06b:	je     0x1004b1ae
1004b071:	push   edi
1004b072:	push   DWORD PTR [ebp-0xc]
1004b075:	push   DWORD PTR [ebp+0x14]
1004b078:	push   DWORD PTR [ebp+0x10]
1004b07b:	push   0x1
1004b07d:	push   DWORD PTR [ebp+0x20]
1004b080:	call   esi
1004b082:	test   eax,eax
1004b084:	je     0x1004b16c
1004b08a:	mov    esi,DWORD PTR ds:0x100671f8
1004b090:	push   ebx
1004b091:	push   ebx
1004b092:	push   edi
1004b093:	push   DWORD PTR [ebp-0xc]
1004b096:	push   DWORD PTR [ebp+0xc]
1004b099:	push   DWORD PTR [ebp+0x8]
1004b09c:	call   esi
1004b09e:	mov    ecx,eax
1004b0a0:	cmp    ecx,ebx
1004b0a2:	mov    DWORD PTR [ebp-0x8],ecx
1004b0a5:	je     0x1004b16c
1004b0ab:	test   WORD PTR [ebp+0xc],0x400
1004b0b1:	je     0x1004b0dc
1004b0b3:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b0b6:	je     0x1004b16c
1004b0bc:	cmp    ecx,DWORD PTR [ebp+0x1c]
1004b0bf:	jg     0x1004b16c
1004b0c5:	push   DWORD PTR [ebp+0x1c]
1004b0c8:	push   DWORD PTR [ebp+0x18]
1004b0cb:	push   edi
1004b0cc:	push   DWORD PTR [ebp-0xc]
1004b0cf:	push   DWORD PTR [ebp+0xc]
1004b0d2:	push   DWORD PTR [ebp+0x8]
1004b0d5:	call   esi
1004b0d7:	jmp    0x1004b16c
1004b0dc:	cmp    ecx,ebx
1004b0de:	jle    0x1004b125
1004b0e0:	push   0xffffffe0
1004b0e2:	xor    edx,edx
1004b0e4:	pop    eax
1004b0e5:	div    ecx
1004b0e7:	cmp    eax,0x2
1004b0ea:	jb     0x1004b125
1004b0ec:	lea    eax,[ecx+ecx*1+0x8]
1004b0f0:	cmp    eax,0x400
1004b0f5:	ja     0x1004b10d
1004b0f7:	call   0x1004b9b0
1004b0fc:	mov    esi,esp
1004b0fe:	cmp    esi,ebx
1004b100:	je     0x1004b16c
1004b102:	mov    DWORD PTR [esi],0xcccc
1004b108:	add    esi,0x8
1004b10b:	jmp    0x1004b127
1004b10d:	push   eax
1004b10e:	call   0x10045143
1004b113:	cmp    eax,ebx
1004b115:	pop    ecx
1004b116:	je     0x1004b121
1004b118:	mov    DWORD PTR [eax],0xdddd
1004b11e:	add    eax,0x8
1004b121:	mov    esi,eax
1004b123:	jmp    0x1004b127
1004b125:	xor    esi,esi
1004b127:	cmp    esi,ebx
1004b129:	je     0x1004b16c
1004b12b:	push   DWORD PTR [ebp-0x8]
1004b12e:	push   esi
1004b12f:	push   edi
1004b130:	push   DWORD PTR [ebp-0xc]
1004b133:	push   DWORD PTR [ebp+0xc]
1004b136:	push   DWORD PTR [ebp+0x8]
1004b139:	call   DWORD PTR ds:0x100671f8
1004b13f:	test   eax,eax
1004b141:	je     0x1004b165
1004b143:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b146:	push   ebx
1004b147:	push   ebx
1004b148:	jne    0x1004b14e
1004b14a:	push   ebx
1004b14b:	push   ebx
1004b14c:	jmp    0x1004b154
1004b14e:	push   DWORD PTR [ebp+0x1c]
1004b151:	push   DWORD PTR [ebp+0x18]
1004b154:	push   DWORD PTR [ebp-0x8]
1004b157:	push   esi
1004b158:	push   ebx
1004b159:	push   DWORD PTR [ebp+0x20]
1004b15c:	call   DWORD PTR ds:0x100670c4
1004b162:	mov    DWORD PTR [ebp-0x8],eax
1004b165:	push   esi
1004b166:	call   0x1001b64a
1004b16b:	pop    ecx
1004b16c:	push   DWORD PTR [ebp-0xc]
1004b16f:	call   0x1001b64a
1004b174:	mov    eax,DWORD PTR [ebp-0x8]
1004b177:	pop    ecx
1004b178:	jmp    0x1004b2d6
1004b17d:	cmp    DWORD PTR [ebp+0x8],ebx
1004b180:	mov    DWORD PTR [ebp-0xc],ebx
1004b183:	mov    DWORD PTR [ebp-0x10],ebx
1004b186:	jne    0x1004b190
1004b188:	mov    eax,DWORD PTR [esi]
1004b18a:	mov    eax,DWORD PTR [eax+0x14]
1004b18d:	mov    DWORD PTR [ebp+0x8],eax
1004b190:	cmp    DWORD PTR [ebp+0x20],ebx
1004b193:	jne    0x1004b19d
1004b195:	mov    eax,DWORD PTR [esi]
1004b197:	mov    eax,DWORD PTR [eax+0x4]
1004b19a:	mov    DWORD PTR [ebp+0x20],eax
1004b19d:	push   DWORD PTR [ebp+0x8]
1004b1a0:	call   0x1004f70e
1004b1a5:	cmp    eax,0xffffffff
1004b1a8:	pop    ecx
1004b1a9:	mov    DWORD PTR [ebp-0x14],eax
1004b1ac:	jne    0x1004b1b5
1004b1ae:	xor    eax,eax
1004b1b0:	jmp    0x1004b2d6
1004b1b5:	cmp    eax,DWORD PTR [ebp+0x20]
1004b1b8:	je     0x1004b299
1004b1be:	push   ebx
1004b1bf:	push   ebx
1004b1c0:	lea    ecx,[ebp+0x14]
1004b1c3:	push   ecx
1004b1c4:	push   DWORD PTR [ebp+0x10]
1004b1c7:	push   eax
1004b1c8:	push   DWORD PTR [ebp+0x20]
1004b1cb:	call   0x1004f755
1004b1d0:	add    esp,0x18
1004b1d3:	cmp    eax,ebx
1004b1d5:	mov    DWORD PTR [ebp-0xc],eax
1004b1d8:	je     0x1004b1ae
1004b1da:	mov    esi,DWORD PTR ds:0x100671f4
1004b1e0:	push   ebx
1004b1e1:	push   ebx
1004b1e2:	push   DWORD PTR [ebp+0x14]
1004b1e5:	push   eax
1004b1e6:	push   DWORD PTR [ebp+0xc]
1004b1e9:	push   DWORD PTR [ebp+0x8]
1004b1ec:	call   esi
1004b1ee:	cmp    eax,ebx
1004b1f0:	mov    DWORD PTR [ebp-0x8],eax
1004b1f3:	jne    0x1004b1fc
1004b1f5:	xor    esi,esi
1004b1f7:	jmp    0x1004b2b3
1004b1fc:	jle    0x1004b23b
1004b1fe:	cmp    eax,0xffffffe0
1004b201:	ja     0x1004b23b
1004b203:	add    eax,0x8
1004b206:	cmp    eax,0x400
1004b20b:	ja     0x1004b223
1004b20d:	call   0x1004b9b0
1004b212:	mov    edi,esp
1004b214:	cmp    edi,ebx
1004b216:	je     0x1004b1f5
1004b218:	mov    DWORD PTR [edi],0xcccc
1004b21e:	add    edi,0x8
1004b221:	jmp    0x1004b23d
1004b223:	push   eax
1004b224:	call   0x10045143
1004b229:	cmp    eax,ebx
1004b22b:	pop    ecx
1004b22c:	je     0x1004b237
1004b22e:	mov    DWORD PTR [eax],0xdddd
1004b234:	add    eax,0x8
1004b237:	mov    edi,eax
1004b239:	jmp    0x1004b23d
1004b23b:	xor    edi,edi
1004b23d:	cmp    edi,ebx
1004b23f:	je     0x1004b1f5
1004b241:	push   DWORD PTR [ebp-0x8]
1004b244:	push   ebx
1004b245:	push   edi
1004b246:	call   0x10045dc0
1004b24b:	add    esp,0xc
1004b24e:	push   DWORD PTR [ebp-0x8]
1004b251:	push   edi
1004b252:	push   DWORD PTR [ebp+0x14]
1004b255:	push   DWORD PTR [ebp-0xc]
1004b258:	push   DWORD PTR [ebp+0xc]
1004b25b:	push   DWORD PTR [ebp+0x8]
1004b25e:	call   esi
1004b260:	cmp    eax,ebx
1004b262:	mov    DWORD PTR [ebp-0x8],eax
1004b265:	jne    0x1004b26b
1004b267:	xor    esi,esi
1004b269:	jmp    0x1004b290
1004b26b:	push   DWORD PTR [ebp+0x1c]
1004b26e:	lea    eax,[ebp-0x8]
1004b271:	push   DWORD PTR [ebp+0x18]
1004b274:	push   eax
1004b275:	push   edi
1004b276:	push   DWORD PTR [ebp+0x20]
1004b279:	push   DWORD PTR [ebp-0x14]
1004b27c:	call   0x1004f755
1004b281:	mov    esi,eax
1004b283:	mov    DWORD PTR [ebp-0x10],esi
1004b286:	add    esp,0x18
1004b289:	neg    esi
1004b28b:	sbb    esi,esi
1004b28d:	and    esi,DWORD PTR [ebp-0x8]
1004b290:	push   edi
1004b291:	call   0x1001b64a
1004b296:	pop    ecx
1004b297:	jmp    0x1004b2b3
1004b299:	push   DWORD PTR [ebp+0x1c]
1004b29c:	push   DWORD PTR [ebp+0x18]
1004b29f:	push   DWORD PTR [ebp+0x14]
1004b2a2:	push   DWORD PTR [ebp+0x10]
1004b2a5:	push   DWORD PTR [ebp+0xc]
1004b2a8:	push   DWORD PTR [ebp+0x8]
1004b2ab:	call   DWORD PTR ds:0x100671f4
1004b2b1:	mov    esi,eax
1004b2b3:	cmp    DWORD PTR [ebp-0xc],ebx
1004b2b6:	je     0x1004b2c1
1004b2b8:	push   DWORD PTR [ebp-0xc]
1004b2bb:	call   0x100437dc
1004b2c0:	pop    ecx
1004b2c1:	mov    eax,DWORD PTR [ebp-0x10]
1004b2c4:	cmp    eax,ebx
1004b2c6:	je     0x1004b2d4
1004b2c8:	cmp    DWORD PTR [ebp+0x18],eax
1004b2cb:	je     0x1004b2d4
1004b2cd:	push   eax
1004b2ce:	call   0x100437dc
1004b2d3:	pop    ecx
1004b2d4:	mov    eax,esi
1004b2d6:	lea    esp,[ebp-0x20]
1004b2d9:	pop    edi
1004b2da:	pop    esi
1004b2db:	pop    ebx
1004b2dc:	mov    ecx,DWORD PTR [ebp-0x4]
1004b2df:	xor    ecx,ebp
1004b2e1:	call   0x10043615
1004b2e6:	leave  
1004b2e7:	ret    
1004b2e8:	push   ebp
1004b2e9:	mov    ebp,esp
1004b2eb:	sub    esp,0x10
1004b2ee:	push   DWORD PTR [ebp+0x8]
1004b2f1:	lea    ecx,[ebp-0x10]
1004b2f4:	call   0x100456a5
1004b2f9:	push   DWORD PTR [ebp+0x28]
1004b2fc:	lea    ecx,[ebp-0x10]
1004b2ff:	push   DWORD PTR [ebp+0x24]
1004b302:	push   DWORD PTR [ebp+0x20]
1004b305:	push   DWORD PTR [ebp+0x1c]
1004b308:	push   DWORD PTR [ebp+0x18]
1004b30b:	push   DWORD PTR [ebp+0x14]
1004b30e:	push   DWORD PTR [ebp+0x10]
1004b311:	push   DWORD PTR [ebp+0xc]
1004b314:	call   0x1004af46
1004b319:	add    esp,0x20
1004b31c:	cmp    BYTE PTR [ebp-0x4],0x0
1004b320:	je     0x1004b329
1004b322:	mov    ecx,DWORD PTR [ebp-0x8]
1004b325:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b329:	leave  
1004b32a:	ret    
1004b32b:	push   ebp
1004b32c:	mov    ebp,esp
1004b32e:	sub    esp,0x10
1004b331:	push   DWORD PTR [ebp+0xc]
1004b334:	lea    ecx,[ebp-0x10]
1004b337:	call   0x100456a5
1004b33c:	movzx  eax,BYTE PTR [ebp+0x8]
1004b340:	mov    ecx,DWORD PTR [ebp-0x10]
1004b343:	mov    ecx,DWORD PTR [ecx+0xc8]
1004b349:	movzx  eax,WORD PTR [ecx+eax*2]
1004b34d:	and    eax,0x8000
1004b352:	cmp    BYTE PTR [ebp-0x4],0x0
1004b356:	je     0x1004b35f
1004b358:	mov    ecx,DWORD PTR [ebp-0x8]
1004b35b:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b35f:	leave  
1004b360:	ret    
1004b361:	push   0x0
1004b363:	push   DWORD PTR [esp+0x8]
1004b367:	call   0x1004b32b
1004b36c:	pop    ecx
1004b36d:	pop    ecx
1004b36e:	ret    
1004b36f:	push   ebp
1004b370:	mov    ebp,esp
1004b372:	sub    esp,0x18
1004b375:	push   ebx
1004b376:	push   DWORD PTR [ebp+0x10]
1004b379:	lea    ecx,[ebp-0x18]
1004b37c:	call   0x100456a5
1004b381:	mov    ebx,DWORD PTR [ebp+0x8]
1004b384:	lea    eax,[ebx+0x1]
1004b387:	cmp    eax,0x100
1004b38c:	ja     0x1004b39d
1004b38e:	mov    eax,DWORD PTR [ebp-0x18]
1004b391:	mov    eax,DWORD PTR [eax+0xc8]
1004b397:	movzx  eax,WORD PTR [eax+ebx*2]
1004b39b:	jmp    0x1004b412
1004b39d:	mov    DWORD PTR [ebp+0x8],ebx
1004b3a0:	sar    DWORD PTR [ebp+0x8],0x8
1004b3a4:	lea    eax,[ebp-0x18]
1004b3a7:	push   eax
1004b3a8:	mov    eax,DWORD PTR [ebp+0x8]
1004b3ab:	and    eax,0xff
1004b3b0:	push   eax
1004b3b1:	call   0x1004b32b
1004b3b6:	test   eax,eax
1004b3b8:	pop    ecx
1004b3b9:	pop    ecx
1004b3ba:	je     0x1004b3ce
1004b3bc:	mov    al,BYTE PTR [ebp+0x8]
1004b3bf:	push   0x2
1004b3c1:	mov    BYTE PTR [ebp-0x8],al
1004b3c4:	mov    BYTE PTR [ebp-0x7],bl
1004b3c7:	mov    BYTE PTR [ebp-0x6],0x0
1004b3cb:	pop    ecx
1004b3cc:	jmp    0x1004b3d8
1004b3ce:	xor    ecx,ecx
1004b3d0:	mov    BYTE PTR [ebp-0x8],bl
1004b3d3:	mov    BYTE PTR [ebp-0x7],0x0
1004b3d7:	inc    ecx
1004b3d8:	mov    eax,DWORD PTR [ebp-0x18]
1004b3db:	push   0x1
1004b3dd:	push   DWORD PTR [eax+0x14]
1004b3e0:	push   DWORD PTR [eax+0x4]
1004b3e3:	lea    eax,[ebp-0x4]
1004b3e6:	push   eax
1004b3e7:	push   ecx
1004b3e8:	lea    eax,[ebp-0x8]
1004b3eb:	push   eax
1004b3ec:	lea    eax,[ebp-0x18]
1004b3ef:	push   0x1
1004b3f1:	push   eax
1004b3f2:	call   0x1004f12c
1004b3f7:	add    esp,0x20
1004b3fa:	test   eax,eax
1004b3fc:	jne    0x1004b40e
1004b3fe:	cmp    BYTE PTR [ebp-0xc],al
1004b401:	je     0x1004b40a
1004b403:	mov    eax,DWORD PTR [ebp-0x10]
1004b406:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b40a:	xor    eax,eax
1004b40c:	jmp    0x1004b422
1004b40e:	movzx  eax,WORD PTR [ebp-0x4]
1004b412:	and    eax,DWORD PTR [ebp+0xc]
1004b415:	cmp    BYTE PTR [ebp-0xc],0x0
1004b419:	je     0x1004b422
1004b41b:	mov    ecx,DWORD PTR [ebp-0x10]
1004b41e:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b422:	pop    ebx
1004b423:	leave  
1004b424:	ret    
1004b425:	push   ebp
1004b426:	mov    ebp,esp
1004b428:	sub    esp,0x14
1004b42b:	push   esi
1004b42c:	push   edi
1004b42d:	push   DWORD PTR [ebp+0x8]
1004b430:	lea    ecx,[ebp-0x14]
1004b433:	call   0x100456a5
1004b438:	mov    eax,DWORD PTR [ebp+0x10]
1004b43b:	mov    esi,DWORD PTR [ebp+0xc]
1004b43e:	xor    edi,edi
1004b440:	cmp    eax,edi
1004b442:	je     0x1004b446
1004b444:	mov    DWORD PTR [eax],esi
1004b446:	cmp    esi,edi
1004b448:	jne    0x1004b476
1004b44a:	call   0x10046c41
1004b44f:	push   edi
1004b450:	push   edi
1004b451:	push   edi
1004b452:	push   edi
1004b453:	push   edi
1004b454:	mov    DWORD PTR [eax],0x16
1004b45a:	call   0x100435e1
1004b45f:	add    esp,0x14
1004b462:	cmp    BYTE PTR [ebp-0x8],0x0
1004b466:	je     0x1004b46f
1004b468:	mov    eax,DWORD PTR [ebp-0xc]
1004b46b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b46f:	xor    eax,eax
1004b471:	jmp    0x1004b64c
1004b476:	cmp    DWORD PTR [ebp+0x14],edi
1004b479:	je     0x1004b487
1004b47b:	cmp    DWORD PTR [ebp+0x14],0x2
1004b47f:	jl     0x1004b44a
1004b481:	cmp    DWORD PTR [ebp+0x14],0x24
1004b485:	jg     0x1004b44a
1004b487:	mov    ecx,DWORD PTR [ebp-0x14]
1004b48a:	push   ebx
1004b48b:	mov    bl,BYTE PTR [esi]
1004b48d:	mov    DWORD PTR [ebp-0x4],edi
1004b490:	lea    edi,[esi+0x1]
1004b493:	cmp    DWORD PTR [ecx+0xac],0x1
1004b49a:	jle    0x1004b4b3
1004b49c:	lea    eax,[ebp-0x14]
1004b49f:	push   eax
1004b4a0:	movzx  eax,bl
1004b4a3:	push   0x8
1004b4a5:	push   eax
1004b4a6:	call   0x1004b36f
1004b4ab:	mov    ecx,DWORD PTR [ebp-0x14]
1004b4ae:	add    esp,0xc
1004b4b1:	jmp    0x1004b4c3
1004b4b3:	mov    edx,DWORD PTR [ecx+0xc8]
1004b4b9:	movzx  eax,bl
1004b4bc:	movzx  eax,BYTE PTR [edx+eax*2]
1004b4c0:	and    eax,0x8
1004b4c3:	test   eax,eax
1004b4c5:	je     0x1004b4cc
1004b4c7:	mov    bl,BYTE PTR [edi]
1004b4c9:	inc    edi
1004b4ca:	jmp    0x1004b493
1004b4cc:	cmp    bl,0x2d
1004b4cf:	jne    0x1004b4d7
1004b4d1:	or     DWORD PTR [ebp+0x18],0x2
1004b4d5:	jmp    0x1004b4dc
1004b4d7:	cmp    bl,0x2b
1004b4da:	jne    0x1004b4df
1004b4dc:	mov    bl,BYTE PTR [edi]
1004b4de:	inc    edi
1004b4df:	mov    eax,DWORD PTR [ebp+0x14]
1004b4e2:	test   eax,eax
1004b4e4:	jl     0x1004b633
1004b4ea:	cmp    eax,0x1
1004b4ed:	je     0x1004b633
1004b4f3:	cmp    eax,0x24
1004b4f6:	jg     0x1004b633
1004b4fc:	test   eax,eax
1004b4fe:	jne    0x1004b52a
1004b500:	cmp    bl,0x30
1004b503:	je     0x1004b50e
1004b505:	mov    DWORD PTR [ebp+0x14],0xa
1004b50c:	jmp    0x1004b542
1004b50e:	mov    al,BYTE PTR [edi]
1004b510:	cmp    al,0x78
1004b512:	je     0x1004b521
1004b514:	cmp    al,0x58
1004b516:	je     0x1004b521
1004b518:	mov    DWORD PTR [ebp+0x14],0x8
1004b51f:	jmp    0x1004b542
1004b521:	mov    DWORD PTR [ebp+0x14],0x10
1004b528:	jmp    0x1004b534
1004b52a:	cmp    eax,0x10
1004b52d:	jne    0x1004b542
1004b52f:	cmp    bl,0x30
1004b532:	jne    0x1004b542
1004b534:	mov    al,BYTE PTR [edi]
1004b536:	cmp    al,0x78
1004b538:	je     0x1004b53e
1004b53a:	cmp    al,0x58
1004b53c:	jne    0x1004b542
1004b53e:	inc    edi
1004b53f:	mov    bl,BYTE PTR [edi]
1004b541:	inc    edi
1004b542:	mov    esi,DWORD PTR [ecx+0xc8]
1004b548:	or     eax,0xffffffff
1004b54b:	xor    edx,edx
1004b54d:	div    DWORD PTR [ebp+0x14]
1004b550:	movzx  ecx,bl
1004b553:	movzx  ecx,WORD PTR [esi+ecx*2]
1004b557:	test   cl,0x4
1004b55a:	je     0x1004b564
1004b55c:	movsx  ecx,bl
1004b55f:	sub    ecx,0x30
1004b562:	jmp    0x1004b57e
1004b564:	test   cx,0x103
1004b569:	je     0x1004b59c
1004b56b:	mov    cl,bl
1004b56d:	sub    cl,0x61
1004b570:	cmp    cl,0x19
1004b573:	movsx  ecx,bl
1004b576:	ja     0x1004b57b
1004b578:	sub    ecx,0x20
1004b57b:	add    ecx,0xffffffc9
1004b57e:	cmp    ecx,DWORD PTR [ebp+0x14]
1004b581:	jae    0x1004b59c
1004b583:	or     DWORD PTR [ebp+0x18],0x8
1004b587:	cmp    DWORD PTR [ebp-0x4],eax
1004b58a:	jb     0x1004b5b3
1004b58c:	jne    0x1004b592
1004b58e:	cmp    ecx,edx
1004b590:	jbe    0x1004b5b3
1004b592:	or     DWORD PTR [ebp+0x18],0x4
1004b596:	cmp    DWORD PTR [ebp+0x10],0x0
1004b59a:	jne    0x1004b5bf
1004b59c:	mov    eax,DWORD PTR [ebp+0x18]
1004b59f:	dec    edi
1004b5a0:	test   al,0x8
1004b5a2:	jne    0x1004b5c4
1004b5a4:	cmp    DWORD PTR [ebp+0x10],0x0
1004b5a8:	je     0x1004b5ad
1004b5aa:	mov    edi,DWORD PTR [ebp+0xc]
1004b5ad:	and    DWORD PTR [ebp-0x4],0x0
1004b5b1:	jmp    0x1004b60f
1004b5b3:	mov    ebx,DWORD PTR [ebp-0x4]
1004b5b6:	imul   ebx,DWORD PTR [ebp+0x14]
1004b5ba:	add    ebx,ecx
1004b5bc:	mov    DWORD PTR [ebp-0x4],ebx
1004b5bf:	mov    bl,BYTE PTR [edi]
1004b5c1:	inc    edi
1004b5c2:	jmp    0x1004b550
1004b5c4:	test   al,0x4
1004b5c6:	mov    esi,0x7fffffff
1004b5cb:	jne    0x1004b5e8
1004b5cd:	test   al,0x1
1004b5cf:	jne    0x1004b60f
1004b5d1:	and    eax,0x2
1004b5d4:	je     0x1004b5df
1004b5d6:	cmp    DWORD PTR [ebp-0x4],0x80000000
1004b5dd:	ja     0x1004b5e8
1004b5df:	test   eax,eax
1004b5e1:	jne    0x1004b60f
1004b5e3:	cmp    DWORD PTR [ebp-0x4],esi
1004b5e6:	jbe    0x1004b60f
1004b5e8:	call   0x10046c41
1004b5ed:	test   BYTE PTR [ebp+0x18],0x1
1004b5f1:	mov    DWORD PTR [eax],0x22
1004b5f7:	je     0x1004b5ff
1004b5f9:	or     DWORD PTR [ebp-0x4],0xffffffff
1004b5fd:	jmp    0x1004b60f
1004b5ff:	mov    al,BYTE PTR [ebp+0x18]
1004b602:	and    al,0x2
1004b604:	neg    al
1004b606:	sbb    eax,eax
1004b608:	neg    eax
1004b60a:	add    eax,esi
1004b60c:	mov    DWORD PTR [ebp-0x4],eax
1004b60f:	mov    eax,DWORD PTR [ebp+0x10]
1004b612:	test   eax,eax
1004b614:	je     0x1004b618
1004b616:	mov    DWORD PTR [eax],edi
1004b618:	test   BYTE PTR [ebp+0x18],0x2
1004b61c:	je     0x1004b621
1004b61e:	neg    DWORD PTR [ebp-0x4]
1004b621:	cmp    BYTE PTR [ebp-0x8],0x0
1004b625:	je     0x1004b62e
1004b627:	mov    eax,DWORD PTR [ebp-0xc]
1004b62a:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b62e:	mov    eax,DWORD PTR [ebp-0x4]
1004b631:	jmp    0x1004b64b
1004b633:	mov    eax,DWORD PTR [ebp+0x10]
1004b636:	test   eax,eax
1004b638:	je     0x1004b63c
1004b63a:	mov    DWORD PTR [eax],esi
1004b63c:	cmp    BYTE PTR [ebp-0x8],0x0
1004b640:	je     0x1004b649
1004b642:	mov    eax,DWORD PTR [ebp-0xc]
1004b645:	and    DWORD PTR [eax+0x70],0xfffffffd
1004b649:	xor    eax,eax
1004b64b:	pop    ebx
1004b64c:	pop    edi
1004b64d:	pop    esi
1004b64e:	leave  
1004b64f:	ret    
1004b650:	push   ebp
1004b651:	mov    ebp,esp
1004b653:	xor    eax,eax
1004b655:	cmp    DWORD PTR ds:0x10082330,eax
1004b65b:	push   eax
1004b65c:	push   DWORD PTR [ebp+0x10]
1004b65f:	push   DWORD PTR [ebp+0xc]
1004b662:	push   DWORD PTR [ebp+0x8]
1004b665:	jne    0x1004b66e
1004b667:	push   0x100809b0
1004b66c:	jmp    0x1004b66f
1004b66e:	push   eax
1004b66f:	call   0x1004b425
1004b674:	add    esp,0x14
1004b677:	pop    ebp
1004b678:	ret    
1004b679:	mov    ecx,DWORD PTR [esp+0x4]
1004b67d:	push   ebx
1004b67e:	push   esi
1004b67f:	push   edi
1004b680:	xor    edi,edi
1004b682:	cmp    ecx,edi
1004b684:	je     0x1004b68e
1004b686:	mov    ebx,DWORD PTR [esp+0x14]
1004b68a:	cmp    ebx,edi
1004b68c:	ja     0x1004b6a9
1004b68e:	call   0x10046c41
1004b693:	push   0x16
1004b695:	pop    esi
1004b696:	mov    DWORD PTR [eax],esi
1004b698:	push   edi
1004b699:	push   edi
1004b69a:	push   edi
1004b69b:	push   edi
1004b69c:	push   edi
1004b69d:	call   0x100435e1
1004b6a2:	add    esp,0x14
1004b6a5:	mov    eax,esi
1004b6a7:	jmp    0x1004b6e1
1004b6a9:	mov    esi,DWORD PTR [esp+0x18]
1004b6ad:	cmp    esi,edi
1004b6af:	jne    0x1004b6b6
1004b6b1:	mov    WORD PTR [ecx],di
1004b6b4:	jmp    0x1004b68e
1004b6b6:	mov    edx,ecx
1004b6b8:	movzx  eax,WORD PTR [esi]
1004b6bb:	mov    WORD PTR [edx],ax
1004b6be:	inc    edx
1004b6bf:	inc    edx
1004b6c0:	inc    esi
1004b6c1:	inc    esi
1004b6c2:	cmp    ax,di
1004b6c5:	je     0x1004b6ca
1004b6c7:	dec    ebx
1004b6c8:	jne    0x1004b6b8
1004b6ca:	cmp    ebx,edi
1004b6cc:	jne    0x1004b6df
1004b6ce:	mov    WORD PTR [ecx],di
1004b6d1:	call   0x10046c41
1004b6d6:	push   0x22
1004b6d8:	pop    ecx
1004b6d9:	mov    DWORD PTR [eax],ecx
1004b6db:	mov    esi,ecx
1004b6dd:	jmp    0x1004b698
1004b6df:	xor    eax,eax
1004b6e1:	pop    edi
1004b6e2:	pop    esi
1004b6e3:	pop    ebx
1004b6e4:	ret    
1004b6e5:	push   ebp
1004b6e6:	mov    ebp,esp
1004b6e8:	sub    esp,0x10
1004b6eb:	mov    eax,ds:0x100801ac
1004b6f0:	xor    eax,ebp
1004b6f2:	mov    DWORD PTR [ebp-0x4],eax
1004b6f5:	push   ebx
1004b6f6:	push   esi
1004b6f7:	mov    esi,DWORD PTR ds:0x100671f8
1004b6fd:	xor    ebx,ebx
1004b6ff:	cmp    DWORD PTR ds:0x10082364,ebx
1004b705:	push   edi
1004b706:	mov    edi,ecx
1004b708:	jne    0x1004b740
1004b70a:	push   ebx
1004b70b:	push   ebx
1004b70c:	push   0x1
1004b70e:	push   0x10067cd8
1004b713:	push   0x100
1004b718:	push   ebx
1004b719:	call   esi
1004b71b:	test   eax,eax
1004b71d:	je     0x1004b72b
1004b71f:	mov    DWORD PTR ds:0x10082364,0x1
1004b729:	jmp    0x1004b740
1004b72b:	call   DWORD PTR ds:0x100670cc
1004b731:	cmp    eax,0x78
1004b734:	jne    0x1004b740
1004b736:	mov    DWORD PTR ds:0x10082364,0x2
1004b740:	cmp    DWORD PTR [ebp+0x14],ebx
1004b743:	jle    0x1004b762
1004b745:	mov    ecx,DWORD PTR [ebp+0x14]
1004b748:	mov    eax,DWORD PTR [ebp+0x10]
1004b74b:	dec    ecx
1004b74c:	cmp    WORD PTR [eax],bx
1004b74f:	je     0x1004b75a
1004b751:	inc    eax
1004b752:	inc    eax
1004b753:	cmp    ecx,ebx
1004b755:	jne    0x1004b74b
1004b757:	or     ecx,0xffffffff
1004b75a:	or     eax,0xffffffff
1004b75d:	sub    eax,ecx
1004b75f:	add    DWORD PTR [ebp+0x14],eax
1004b762:	mov    eax,ds:0x10082364
1004b767:	cmp    eax,0x1
1004b76a:	jne    0x1004b785
1004b76c:	push   DWORD PTR [ebp+0x1c]
1004b76f:	push   DWORD PTR [ebp+0x18]
1004b772:	push   DWORD PTR [ebp+0x14]
1004b775:	push   DWORD PTR [ebp+0x10]
1004b778:	push   DWORD PTR [ebp+0xc]
1004b77b:	push   DWORD PTR [ebp+0x8]
1004b77e:	call   esi
1004b780:	jmp    0x1004b934
1004b785:	cmp    eax,0x2
1004b788:	je     0x1004b78e
1004b78a:	cmp    eax,ebx
1004b78c:	jne    0x1004b7e0
1004b78e:	cmp    DWORD PTR [ebp+0x8],ebx
1004b791:	mov    DWORD PTR [ebp-0xc],ebx
1004b794:	jne    0x1004b79e
1004b796:	mov    eax,DWORD PTR [edi]
1004b798:	mov    eax,DWORD PTR [eax+0x14]
1004b79b:	mov    DWORD PTR [ebp+0x8],eax
1004b79e:	cmp    DWORD PTR [ebp+0x20],ebx
1004b7a1:	jne    0x1004b7ab
1004b7a3:	mov    eax,DWORD PTR [edi]
1004b7a5:	mov    eax,DWORD PTR [eax+0x4]
1004b7a8:	mov    DWORD PTR [ebp+0x20],eax
1004b7ab:	push   DWORD PTR [ebp+0x8]
1004b7ae:	call   0x1004f70e
1004b7b3:	cmp    DWORD PTR [ebp+0x20],eax
1004b7b6:	pop    ecx
1004b7b7:	je     0x1004b7c1
1004b7b9:	cmp    eax,0xffffffff
1004b7bc:	je     0x1004b7c1
1004b7be:	mov    DWORD PTR [ebp+0x20],eax
1004b7c1:	mov    esi,DWORD PTR ds:0x100670c4
1004b7c7:	push   ebx
1004b7c8:	push   ebx
1004b7c9:	push   ebx
1004b7ca:	push   ebx
1004b7cb:	push   DWORD PTR [ebp+0x14]
1004b7ce:	push   DWORD PTR [ebp+0x10]
1004b7d1:	push   ebx
1004b7d2:	push   DWORD PTR [ebp+0x20]
1004b7d5:	call   esi
1004b7d7:	mov    edi,eax
1004b7d9:	cmp    edi,ebx
1004b7db:	mov    DWORD PTR [ebp-0x10],edi
1004b7de:	jne    0x1004b7e7
1004b7e0:	xor    eax,eax
1004b7e2:	jmp    0x1004b934
1004b7e7:	jle    0x1004b82b
1004b7e9:	push   0xffffffe0
1004b7eb:	xor    edx,edx
1004b7ed:	pop    eax
1004b7ee:	div    edi
1004b7f0:	cmp    eax,0x1
1004b7f3:	jb     0x1004b82b
1004b7f5:	lea    eax,[edi+0x8]
1004b7f8:	cmp    eax,0x400
1004b7fd:	ja     0x1004b812
1004b7ff:	call   0x1004b9b0
1004b804:	mov    eax,esp
1004b806:	cmp    eax,ebx
1004b808:	je     0x1004b826
1004b80a:	mov    DWORD PTR [eax],0xcccc
1004b810:	jmp    0x1004b823
1004b812:	push   eax
1004b813:	call   0x10045143
1004b818:	cmp    eax,ebx
1004b81a:	pop    ecx
1004b81b:	je     0x1004b826
1004b81d:	mov    DWORD PTR [eax],0xdddd
1004b823:	add    eax,0x8
1004b826:	mov    DWORD PTR [ebp-0x8],eax
1004b829:	jmp    0x1004b82e
1004b82b:	mov    DWORD PTR [ebp-0x8],ebx
1004b82e:	cmp    DWORD PTR [ebp-0x8],ebx
1004b831:	je     0x1004b7e0
1004b833:	push   ebx
1004b834:	push   ebx
1004b835:	push   edi
1004b836:	push   DWORD PTR [ebp-0x8]
1004b839:	push   DWORD PTR [ebp+0x14]
1004b83c:	push   DWORD PTR [ebp+0x10]
1004b83f:	push   ebx
1004b840:	push   DWORD PTR [ebp+0x20]
1004b843:	call   esi
1004b845:	test   eax,eax
1004b847:	je     0x1004b928
1004b84d:	push   ebx
1004b84e:	push   ebx
1004b84f:	push   edi
1004b850:	push   DWORD PTR [ebp-0x8]
1004b853:	mov    edi,DWORD PTR ds:0x100671f4
1004b859:	push   DWORD PTR [ebp+0xc]
1004b85c:	push   DWORD PTR [ebp+0x8]
1004b85f:	call   edi
1004b861:	mov    esi,eax
1004b863:	cmp    esi,ebx
1004b865:	je     0x1004b928
1004b86b:	jle    0x1004b8ac
1004b86d:	push   0xffffffe0
1004b86f:	xor    edx,edx
1004b871:	pop    eax
1004b872:	div    esi
1004b874:	cmp    eax,0x1
1004b877:	jb     0x1004b8ac
1004b879:	lea    eax,[esi+0x8]
1004b87c:	cmp    eax,0x400
1004b881:	ja     0x1004b896
1004b883:	call   0x1004b9b0
1004b888:	mov    eax,esp
1004b88a:	cmp    eax,ebx
1004b88c:	je     0x1004b8aa
1004b88e:	mov    DWORD PTR [eax],0xcccc
1004b894:	jmp    0x1004b8a7
1004b896:	push   eax
1004b897:	call   0x10045143
1004b89c:	cmp    eax,ebx
1004b89e:	pop    ecx
1004b89f:	je     0x1004b8aa
1004b8a1:	mov    DWORD PTR [eax],0xdddd
1004b8a7:	add    eax,0x8
1004b8aa:	mov    ebx,eax
1004b8ac:	test   ebx,ebx
1004b8ae:	je     0x1004b928
1004b8b0:	push   esi
1004b8b1:	push   ebx
1004b8b2:	push   DWORD PTR [ebp-0x10]
1004b8b5:	push   DWORD PTR [ebp-0x8]
1004b8b8:	push   DWORD PTR [ebp+0xc]
1004b8bb:	push   DWORD PTR [ebp+0x8]
1004b8be:	call   edi
1004b8c0:	test   eax,eax
1004b8c2:	je     0x1004b921
1004b8c4:	test   WORD PTR [ebp+0xc],0x400
1004b8ca:	je     0x1004b900
1004b8cc:	mov    eax,DWORD PTR [ebp+0x1c]
1004b8cf:	xor    edi,edi
1004b8d1:	cmp    eax,edi
1004b8d3:	mov    DWORD PTR [ebp-0xc],esi
1004b8d6:	je     0x1004b921
1004b8d8:	cmp    eax,esi
1004b8da:	jg     0x1004b8df
1004b8dc:	lea    esi,[eax-0x1]
1004b8df:	push   esi
1004b8e0:	push   ebx
1004b8e1:	push   eax
1004b8e2:	push   DWORD PTR [ebp+0x18]
1004b8e5:	call   0x1004edbe
1004b8ea:	add    esp,0x10
1004b8ed:	test   eax,eax
1004b8ef:	je     0x1004b921
1004b8f1:	push   edi
1004b8f2:	push   edi
1004b8f3:	push   edi
1004b8f4:	push   edi
1004b8f5:	push   edi
1004b8f6:	call   0x100434e5
1004b8fb:	add    esp,0x14
1004b8fe:	jmp    0x1004b921
1004b900:	xor    eax,eax
1004b902:	cmp    DWORD PTR [ebp+0x1c],eax
1004b905:	jne    0x1004b90b
1004b907:	push   eax
1004b908:	push   eax
1004b909:	jmp    0x1004b911
1004b90b:	push   DWORD PTR [ebp+0x1c]
1004b90e:	push   DWORD PTR [ebp+0x18]
1004b911:	push   esi
1004b912:	push   ebx
1004b913:	push   0x1
1004b915:	push   DWORD PTR [ebp+0x20]
1004b918:	call   DWORD PTR ds:0x1006708c
1004b91e:	mov    DWORD PTR [ebp-0xc],eax
1004b921:	push   ebx
1004b922:	call   0x1001b64a
1004b927:	pop    ecx
1004b928:	push   DWORD PTR [ebp-0x8]
1004b92b:	call   0x1001b64a
1004b930:	mov    eax,DWORD PTR [ebp-0xc]
1004b933:	pop    ecx
1004b934:	lea    esp,[ebp-0x1c]
1004b937:	pop    edi
1004b938:	pop    esi
1004b939:	pop    ebx
1004b93a:	mov    ecx,DWORD PTR [ebp-0x4]
1004b93d:	xor    ecx,ebp
1004b93f:	call   0x10043615
1004b944:	leave  
1004b945:	ret    
1004b946:	push   ebp
1004b947:	mov    ebp,esp
1004b949:	sub    esp,0x10
1004b94c:	push   DWORD PTR [ebp+0x8]
1004b94f:	lea    ecx,[ebp-0x10]
1004b952:	call   0x100456a5
1004b957:	push   DWORD PTR [ebp+0x24]
1004b95a:	lea    ecx,[ebp-0x10]
1004b95d:	push   DWORD PTR [ebp+0x20]
1004b960:	push   DWORD PTR [ebp+0x1c]
1004b963:	push   DWORD PTR [ebp+0x18]
1004b966:	push   DWORD PTR [ebp+0x14]
1004b969:	push   DWORD PTR [ebp+0x10]
1004b96c:	push   DWORD PTR [ebp+0xc]
1004b96f:	call   0x1004b6e5
1004b974:	add    esp,0x1c
1004b977:	cmp    BYTE PTR [ebp-0x4],0x0
1004b97b:	je     0x1004b984
1004b97d:	mov    ecx,DWORD PTR [ebp-0x8]
1004b980:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b984:	leave  
1004b985:	ret    
1004b986:	xor    eax,eax
1004b988:	cmp    DWORD PTR [esp+0x8],eax
1004b98c:	jbe    0x1004b9a1
1004b98e:	mov    ecx,DWORD PTR [esp+0x4]
1004b992:	cmp    WORD PTR [ecx],0x0
1004b996:	je     0x1004b9a1
1004b998:	inc    eax
1004b999:	inc    ecx
1004b99a:	inc    ecx
1004b99b:	cmp    eax,DWORD PTR [esp+0x8]
1004b99f:	jb     0x1004b992
1004b9a1:	ret    
1004b9a2:	int3   
1004b9a3:	int3   
1004b9a4:	int3   
1004b9a5:	int3   
1004b9a6:	int3   
1004b9a7:	int3   
1004b9a8:	int3   
1004b9a9:	int3   
1004b9aa:	int3   
1004b9ab:	int3   
1004b9ac:	int3   
1004b9ad:	int3   
1004b9ae:	int3   
1004b9af:	int3   
1004b9b0:	push   ecx
1004b9b1:	lea    ecx,[esp+0x8]
1004b9b5:	sub    ecx,eax
1004b9b7:	and    ecx,0xf
1004b9ba:	add    eax,ecx
1004b9bc:	sbb    ecx,ecx
1004b9be:	or     eax,ecx
1004b9c0:	pop    ecx
1004b9c1:	jmp    0x1004a070
1004b9c6:	push   ecx
1004b9c7:	lea    ecx,[esp+0x8]
1004b9cb:	sub    ecx,eax
1004b9cd:	and    ecx,0x7
1004b9d0:	add    eax,ecx
1004b9d2:	sbb    ecx,ecx
1004b9d4:	or     eax,ecx
1004b9d6:	pop    ecx
1004b9d7:	jmp    0x1004a070
1004b9dc:	push   ebp
1004b9dd:	mov    ebp,esp
1004b9df:	mov    eax,0xffff
1004b9e4:	sub    esp,0x14
1004b9e7:	cmp    WORD PTR [ebp+0x8],ax
1004b9eb:	je     0x1004ba87
1004b9f1:	push   ebx
1004b9f2:	push   DWORD PTR [ebp+0xc]
1004b9f5:	lea    ecx,[ebp-0x14]
1004b9f8:	call   0x100456a5
1004b9fd:	mov    ecx,DWORD PTR [ebp-0x14]
1004ba00:	mov    edx,DWORD PTR [ecx+0x14]
1004ba03:	xor    ebx,ebx
1004ba05:	cmp    edx,ebx
1004ba07:	jne    0x1004ba1d
1004ba09:	mov    eax,DWORD PTR [ebp+0x8]
1004ba0c:	lea    ecx,[eax-0x41]
1004ba0f:	cmp    cx,0x19
1004ba13:	ja     0x1004ba18
1004ba15:	add    eax,0x20
1004ba18:	movzx  eax,ax
1004ba1b:	jmp    0x1004ba7a
1004ba1d:	mov    eax,0x100
1004ba22:	cmp    WORD PTR [ebp+0x8],ax
1004ba26:	jae    0x1004ba51
1004ba28:	lea    eax,[ebp-0x14]
1004ba2b:	push   eax
1004ba2c:	push   0x1
1004ba2e:	push   DWORD PTR [ebp+0x8]
1004ba31:	call   0x1004f907
1004ba36:	add    esp,0xc
1004ba39:	test   eax,eax
1004ba3b:	movzx  eax,WORD PTR [ebp+0x8]
1004ba3f:	je     0x1004ba7a
1004ba41:	mov    ecx,DWORD PTR [ebp-0x14]
1004ba44:	mov    ecx,DWORD PTR [ecx+0xcc]
1004ba4a:	movzx  ax,BYTE PTR [ecx+eax*1]
1004ba4f:	jmp    0x1004ba18
1004ba51:	push   DWORD PTR [ecx+0x4]
1004ba54:	lea    ecx,[ebp-0x4]
1004ba57:	push   0x1
1004ba59:	push   ecx
1004ba5a:	push   0x1
1004ba5c:	lea    ecx,[ebp+0x8]
1004ba5f:	push   ecx
1004ba60:	push   eax
1004ba61:	push   edx
1004ba62:	lea    eax,[ebp-0x14]
1004ba65:	push   eax
1004ba66:	call   0x1004b946
1004ba6b:	add    esp,0x20
1004ba6e:	test   eax,eax
1004ba70:	movzx  eax,WORD PTR [ebp+0x8]
1004ba74:	je     0x1004ba7a
1004ba76:	movzx  eax,WORD PTR [ebp-0x4]
1004ba7a:	cmp    BYTE PTR [ebp-0x8],bl
1004ba7d:	je     0x1004ba86
1004ba7f:	mov    ecx,DWORD PTR [ebp-0xc]
1004ba82:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004ba86:	pop    ebx
1004ba87:	leave  
1004ba88:	ret    
1004ba89:	push   0x54
1004ba8b:	push   0x10075f10
1004ba90:	call   0x1004771c
1004ba95:	xor    edi,edi
1004ba97:	mov    DWORD PTR [ebp-0x4],edi
1004ba9a:	lea    eax,[ebp-0x64]
1004ba9d:	push   eax
1004ba9e:	call   DWORD PTR ds:0x10067204
1004baa4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004baab:	push   0x40
1004baad:	push   0x20
1004baaf:	pop    esi
1004bab0:	push   esi
1004bab1:	call   0x100472ea
1004bab6:	pop    ecx
1004bab7:	pop    ecx
1004bab8:	cmp    eax,edi
1004baba:	je     0x1004bcd4
1004bac0:	mov    ds:0x100844e0,eax
1004bac5:	mov    DWORD PTR ds:0x100844c4,esi
1004bacb:	lea    ecx,[eax+0x800]
1004bad1:	jmp    0x1004bb03
1004bad3:	mov    BYTE PTR [eax+0x4],0x0
1004bad7:	or     DWORD PTR [eax],0xffffffff
1004bada:	mov    BYTE PTR [eax+0x5],0xa
1004bade:	mov    DWORD PTR [eax+0x8],edi
1004bae1:	mov    BYTE PTR [eax+0x24],0x0
1004bae5:	mov    BYTE PTR [eax+0x25],0xa
1004bae9:	mov    BYTE PTR [eax+0x26],0xa
1004baed:	mov    DWORD PTR [eax+0x38],edi
1004baf0:	mov    BYTE PTR [eax+0x34],0x0
1004baf4:	add    eax,0x40
1004baf7:	mov    ecx,DWORD PTR ds:0x100844e0
1004bafd:	add    ecx,0x800
1004bb03:	cmp    eax,ecx
1004bb05:	jb     0x1004bad3
1004bb07:	cmp    WORD PTR [ebp-0x32],di
1004bb0b:	je     0x1004bc1b
1004bb11:	mov    eax,DWORD PTR [ebp-0x30]
1004bb14:	cmp    eax,edi
1004bb16:	je     0x1004bc1b
1004bb1c:	mov    edi,DWORD PTR [eax]
1004bb1e:	lea    ebx,[eax+0x4]
1004bb21:	lea    eax,[ebx+edi*1]
1004bb24:	mov    DWORD PTR [ebp-0x1c],eax
1004bb27:	mov    esi,0x800
1004bb2c:	cmp    edi,esi
1004bb2e:	jl     0x1004bb32
1004bb30:	mov    edi,esi
1004bb32:	mov    DWORD PTR [ebp-0x20],0x1
1004bb39:	jmp    0x1004bb96
1004bb3b:	push   0x40
1004bb3d:	push   0x20
1004bb3f:	call   0x100472ea
1004bb44:	pop    ecx
1004bb45:	pop    ecx
1004bb46:	test   eax,eax
1004bb48:	je     0x1004bba0
1004bb4a:	mov    ecx,DWORD PTR [ebp-0x20]
1004bb4d:	lea    ecx,[ecx*4+0x100844e0]
1004bb54:	mov    DWORD PTR [ecx],eax
1004bb56:	add    DWORD PTR ds:0x100844c4,0x20
1004bb5d:	lea    edx,[eax+0x800]
1004bb63:	jmp    0x1004bb8f
1004bb65:	mov    BYTE PTR [eax+0x4],0x0
1004bb69:	or     DWORD PTR [eax],0xffffffff
1004bb6c:	mov    BYTE PTR [eax+0x5],0xa
1004bb70:	and    DWORD PTR [eax+0x8],0x0
1004bb74:	and    BYTE PTR [eax+0x24],0x80
1004bb78:	mov    BYTE PTR [eax+0x25],0xa
1004bb7c:	mov    BYTE PTR [eax+0x26],0xa
1004bb80:	and    DWORD PTR [eax+0x38],0x0
1004bb84:	mov    BYTE PTR [eax+0x34],0x0
1004bb88:	add    eax,0x40
1004bb8b:	mov    edx,DWORD PTR [ecx]
1004bb8d:	add    edx,esi
1004bb8f:	cmp    eax,edx
1004bb91:	jb     0x1004bb65
1004bb93:	inc    DWORD PTR [ebp-0x20]
1004bb96:	cmp    DWORD PTR ds:0x100844c4,edi
1004bb9c:	jl     0x1004bb3b
1004bb9e:	jmp    0x1004bba6
1004bba0:	mov    edi,DWORD PTR ds:0x100844c4
1004bba6:	and    DWORD PTR [ebp-0x20],0x0
1004bbaa:	test   edi,edi
1004bbac:	jle    0x1004bc1b
1004bbae:	mov    eax,DWORD PTR [ebp-0x1c]
1004bbb1:	mov    ecx,DWORD PTR [eax]
1004bbb3:	cmp    ecx,0xffffffff
1004bbb6:	je     0x1004bc0e
1004bbb8:	cmp    ecx,0xfffffffe
1004bbbb:	je     0x1004bc0e
1004bbbd:	mov    al,BYTE PTR [ebx]
1004bbbf:	test   al,0x1
1004bbc1:	je     0x1004bc0e
1004bbc3:	test   al,0x8
1004bbc5:	jne    0x1004bbd2
1004bbc7:	push   ecx
1004bbc8:	call   DWORD PTR ds:0x10067200
1004bbce:	test   eax,eax
1004bbd0:	je     0x1004bc0e
1004bbd2:	mov    esi,DWORD PTR [ebp-0x20]
1004bbd5:	mov    eax,esi
1004bbd7:	sar    eax,0x5
1004bbda:	and    esi,0x1f
1004bbdd:	shl    esi,0x6
1004bbe0:	add    esi,DWORD PTR [eax*4+0x100844e0]
1004bbe7:	mov    eax,DWORD PTR [ebp-0x1c]
1004bbea:	mov    eax,DWORD PTR [eax]
1004bbec:	mov    DWORD PTR [esi],eax
1004bbee:	mov    al,BYTE PTR [ebx]
1004bbf0:	mov    BYTE PTR [esi+0x4],al
1004bbf3:	push   0xfa0
1004bbf8:	lea    eax,[esi+0xc]
1004bbfb:	push   eax
1004bbfc:	call   0x1004c769
1004bc01:	pop    ecx
1004bc02:	pop    ecx
1004bc03:	test   eax,eax
1004bc05:	je     0x1004bcd4
1004bc0b:	inc    DWORD PTR [esi+0x8]
1004bc0e:	inc    DWORD PTR [ebp-0x20]
1004bc11:	inc    ebx
1004bc12:	add    DWORD PTR [ebp-0x1c],0x4
1004bc16:	cmp    DWORD PTR [ebp-0x20],edi
1004bc19:	jl     0x1004bbae
1004bc1b:	xor    ebx,ebx
1004bc1d:	mov    esi,ebx
1004bc1f:	shl    esi,0x6
1004bc22:	add    esi,DWORD PTR ds:0x100844e0
1004bc28:	mov    eax,DWORD PTR [esi]
1004bc2a:	cmp    eax,0xffffffff
1004bc2d:	je     0x1004bc3a
1004bc2f:	cmp    eax,0xfffffffe
1004bc32:	je     0x1004bc3a
1004bc34:	or     BYTE PTR [esi+0x4],0x80
1004bc38:	jmp    0x1004bcac
1004bc3a:	mov    BYTE PTR [esi+0x4],0x81
1004bc3e:	test   ebx,ebx
1004bc40:	jne    0x1004bc47
1004bc42:	push   0xfffffff6
1004bc44:	pop    eax
1004bc45:	jmp    0x1004bc51
1004bc47:	mov    eax,ebx
1004bc49:	dec    eax
1004bc4a:	neg    eax
1004bc4c:	sbb    eax,eax
1004bc4e:	add    eax,0xfffffff5
1004bc51:	push   eax
1004bc52:	call   DWORD PTR ds:0x100671dc
1004bc58:	mov    edi,eax
1004bc5a:	cmp    edi,0xffffffff
1004bc5d:	je     0x1004bca2
1004bc5f:	test   edi,edi
1004bc61:	je     0x1004bca2
1004bc63:	push   edi
1004bc64:	call   DWORD PTR ds:0x10067200
1004bc6a:	test   eax,eax
1004bc6c:	je     0x1004bca2
1004bc6e:	mov    DWORD PTR [esi],edi
1004bc70:	and    eax,0xff
1004bc75:	cmp    eax,0x2
1004bc78:	jne    0x1004bc80
1004bc7a:	or     BYTE PTR [esi+0x4],0x40
1004bc7e:	jmp    0x1004bc89
1004bc80:	cmp    eax,0x3
1004bc83:	jne    0x1004bc89
1004bc85:	or     BYTE PTR [esi+0x4],0x8
1004bc89:	push   0xfa0
1004bc8e:	lea    eax,[esi+0xc]
1004bc91:	push   eax
1004bc92:	call   0x1004c769
1004bc97:	pop    ecx
1004bc98:	pop    ecx
1004bc99:	test   eax,eax
1004bc9b:	je     0x1004bcd4
1004bc9d:	inc    DWORD PTR [esi+0x8]
1004bca0:	jmp    0x1004bcac
1004bca2:	or     BYTE PTR [esi+0x4],0x40
1004bca6:	mov    DWORD PTR [esi],0xfffffffe
1004bcac:	inc    ebx
1004bcad:	cmp    ebx,0x3
1004bcb0:	jl     0x1004bc1d
1004bcb6:	push   DWORD PTR ds:0x100844c4
1004bcbc:	call   DWORD PTR ds:0x100671fc
1004bcc2:	xor    eax,eax
1004bcc4:	jmp    0x1004bcd7
1004bcc6:	xor    eax,eax
1004bcc8:	inc    eax
1004bcc9:	ret    
1004bcca:	mov    esp,DWORD PTR [ebp-0x18]
1004bccd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004bcd4:	or     eax,0xffffffff
1004bcd7:	call   0x10047761
1004bcdc:	ret    
1004bcdd:	push   esi
1004bcde:	push   edi
1004bcdf:	mov    esi,0x100844e0
1004bce4:	mov    edi,DWORD PTR [esi]
1004bce6:	test   edi,edi
1004bce8:	je     0x1004bd1b
1004bcea:	lea    eax,[edi+0x800]
1004bcf0:	jmp    0x1004bd0c
1004bcf2:	cmp    DWORD PTR [edi+0x8],0x0
1004bcf6:	je     0x1004bd02
1004bcf8:	lea    eax,[edi+0xc]
1004bcfb:	push   eax
1004bcfc:	call   DWORD PTR ds:0x10067120
1004bd02:	mov    eax,DWORD PTR [esi]
1004bd04:	add    edi,0x40
1004bd07:	add    eax,0x800
1004bd0c:	cmp    edi,eax
1004bd0e:	jb     0x1004bcf2
1004bd10:	push   DWORD PTR [esi]
1004bd12:	call   0x100437dc
1004bd17:	and    DWORD PTR [esi],0x0
1004bd1a:	pop    ecx
1004bd1b:	add    esi,0x4
1004bd1e:	cmp    esi,0x100845e0
1004bd24:	jl     0x1004bce4
1004bd26:	pop    edi
1004bd27:	pop    esi
1004bd28:	ret    
1004bd29:	push   ebx
1004bd2a:	xor    ebx,ebx
1004bd2c:	cmp    DWORD PTR ds:0x10084614,ebx
1004bd32:	push   esi
1004bd33:	push   edi
1004bd34:	jne    0x1004bd3b
1004bd36:	call   0x1004a8b8
1004bd3b:	mov    esi,DWORD PTR ds:0x10081af8
1004bd41:	xor    edi,edi
1004bd43:	cmp    esi,ebx
1004bd45:	jne    0x1004bd5f
1004bd47:	or     eax,0xffffffff
1004bd4a:	jmp    0x1004bdea
1004bd4f:	cmp    al,0x3d
1004bd51:	je     0x1004bd54
1004bd53:	inc    edi
1004bd54:	push   esi
1004bd55:	call   0x10043450
1004bd5a:	pop    ecx
1004bd5b:	lea    esi,[esi+eax*1+0x1]
1004bd5f:	mov    al,BYTE PTR [esi]
1004bd61:	cmp    al,bl
1004bd63:	jne    0x1004bd4f
1004bd65:	push   0x4
1004bd67:	inc    edi
1004bd68:	push   edi
1004bd69:	call   0x100472ea
1004bd6e:	mov    edi,eax
1004bd70:	cmp    edi,ebx
1004bd72:	pop    ecx
1004bd73:	pop    ecx
1004bd74:	mov    DWORD PTR ds:0x10081b40,edi
1004bd7a:	je     0x1004bd47
1004bd7c:	mov    esi,DWORD PTR ds:0x10081af8
1004bd82:	push   ebp
1004bd83:	jmp    0x1004bdc5
1004bd85:	push   esi
1004bd86:	call   0x10043450
1004bd8b:	mov    ebp,eax
1004bd8d:	inc    ebp
1004bd8e:	cmp    BYTE PTR [esi],0x3d
1004bd91:	pop    ecx
1004bd92:	je     0x1004bdc3
1004bd94:	push   0x1
1004bd96:	push   ebp
1004bd97:	call   0x100472ea
1004bd9c:	cmp    eax,ebx
1004bd9e:	pop    ecx
1004bd9f:	pop    ecx
1004bda0:	mov    DWORD PTR [edi],eax
1004bda2:	je     0x1004bdee
1004bda4:	push   esi
1004bda5:	push   ebp
1004bda6:	push   eax
1004bda7:	call   0x10047a20
1004bdac:	add    esp,0xc
1004bdaf:	test   eax,eax
1004bdb1:	je     0x1004bdc0
1004bdb3:	push   ebx
1004bdb4:	push   ebx
1004bdb5:	push   ebx
1004bdb6:	push   ebx
1004bdb7:	push   ebx
1004bdb8:	call   0x100434e5
1004bdbd:	add    esp,0x14
1004bdc0:	add    edi,0x4
1004bdc3:	add    esi,ebp
1004bdc5:	cmp    BYTE PTR [esi],bl
1004bdc7:	jne    0x1004bd85
1004bdc9:	push   DWORD PTR ds:0x10081af8
1004bdcf:	call   0x100437dc
1004bdd4:	mov    DWORD PTR ds:0x10081af8,ebx
1004bdda:	mov    DWORD PTR [edi],ebx
1004bddc:	mov    DWORD PTR ds:0x10084608,0x1
1004bde6:	xor    eax,eax
1004bde8:	pop    ecx
1004bde9:	pop    ebp
1004bdea:	pop    edi
1004bdeb:	pop    esi
1004bdec:	pop    ebx
1004bded:	ret    
1004bdee:	push   DWORD PTR ds:0x10081b40
1004bdf4:	call   0x100437dc
1004bdf9:	mov    DWORD PTR ds:0x10081b40,ebx
1004bdff:	or     eax,0xffffffff
1004be02:	jmp    0x1004bde8
1004be04:	push   ebp
1004be05:	mov    ebp,esp
1004be07:	push   ecx
1004be08:	mov    ecx,DWORD PTR [ebp+0x10]
1004be0b:	push   ebx
1004be0c:	xor    eax,eax
1004be0e:	cmp    DWORD PTR [ebp+0x8],eax
1004be11:	push   esi
1004be12:	mov    DWORD PTR [edi],eax
1004be14:	mov    esi,edx
1004be16:	mov    edx,DWORD PTR [ebp+0xc]
1004be19:	mov    DWORD PTR [ecx],0x1
1004be1f:	je     0x1004be2a
1004be21:	mov    ebx,DWORD PTR [ebp+0x8]
1004be24:	add    DWORD PTR [ebp+0x8],0x4
1004be28:	mov    DWORD PTR [ebx],edx
1004be2a:	mov    DWORD PTR [ebp-0x4],eax
1004be2d:	cmp    BYTE PTR [esi],0x22
1004be30:	jne    0x1004be42
1004be32:	xor    eax,eax
1004be34:	cmp    DWORD PTR [ebp-0x4],eax
1004be37:	mov    bl,0x22
1004be39:	sete   al
1004be3c:	inc    esi
1004be3d:	mov    DWORD PTR [ebp-0x4],eax
1004be40:	jmp    0x1004be7e
1004be42:	inc    DWORD PTR [edi]
1004be44:	test   edx,edx
1004be46:	je     0x1004be50
1004be48:	mov    al,BYTE PTR [esi]
1004be4a:	mov    BYTE PTR [edx],al
1004be4c:	inc    edx
1004be4d:	mov    DWORD PTR [ebp+0xc],edx
1004be50:	mov    bl,BYTE PTR [esi]
1004be52:	movzx  eax,bl
1004be55:	push   eax
1004be56:	inc    esi
1004be57:	call   0x1004fa15
1004be5c:	test   eax,eax
1004be5e:	pop    ecx
1004be5f:	je     0x1004be74
1004be61:	inc    DWORD PTR [edi]
1004be63:	cmp    DWORD PTR [ebp+0xc],0x0
1004be67:	je     0x1004be73
1004be69:	mov    ecx,DWORD PTR [ebp+0xc]
1004be6c:	mov    al,BYTE PTR [esi]
1004be6e:	inc    DWORD PTR [ebp+0xc]
1004be71:	mov    BYTE PTR [ecx],al
1004be73:	inc    esi
1004be74:	test   bl,bl
1004be76:	mov    edx,DWORD PTR [ebp+0xc]
1004be79:	mov    ecx,DWORD PTR [ebp+0x10]
1004be7c:	je     0x1004beb0
1004be7e:	cmp    DWORD PTR [ebp-0x4],0x0
1004be82:	jne    0x1004be2d
1004be84:	cmp    bl,0x20
1004be87:	je     0x1004be8e
1004be89:	cmp    bl,0x9
1004be8c:	jne    0x1004be2d
1004be8e:	test   edx,edx
1004be90:	je     0x1004be96
1004be92:	mov    BYTE PTR [edx-0x1],0x0
1004be96:	and    DWORD PTR [ebp-0x4],0x0
1004be9a:	cmp    BYTE PTR [esi],0x0
1004be9d:	je     0x1004bf8c
1004bea3:	mov    al,BYTE PTR [esi]
1004bea5:	cmp    al,0x20
1004bea7:	je     0x1004bead
1004bea9:	cmp    al,0x9
1004beab:	jne    0x1004beb3
1004bead:	inc    esi
1004beae:	jmp    0x1004bea3
1004beb0:	dec    esi
1004beb1:	jmp    0x1004be96
1004beb3:	cmp    BYTE PTR [esi],0x0
1004beb6:	je     0x1004bf8c
1004bebc:	cmp    DWORD PTR [ebp+0x8],0x0
1004bec0:	je     0x1004becb
1004bec2:	mov    eax,DWORD PTR [ebp+0x8]
1004bec5:	add    DWORD PTR [ebp+0x8],0x4
1004bec9:	mov    DWORD PTR [eax],edx
1004becb:	inc    DWORD PTR [ecx]
1004becd:	xor    ebx,ebx
1004becf:	inc    ebx
1004bed0:	xor    ecx,ecx
1004bed2:	jmp    0x1004bed6
1004bed4:	inc    esi
1004bed5:	inc    ecx
1004bed6:	cmp    BYTE PTR [esi],0x5c
1004bed9:	je     0x1004bed4
1004bedb:	cmp    BYTE PTR [esi],0x22
1004bede:	jne    0x1004bf06
1004bee0:	test   cl,0x1
1004bee3:	jne    0x1004bf04
1004bee5:	cmp    DWORD PTR [ebp-0x4],0x0
1004bee9:	je     0x1004bef7
1004beeb:	lea    eax,[esi+0x1]
1004beee:	cmp    BYTE PTR [eax],0x22
1004bef1:	jne    0x1004bef7
1004bef3:	mov    esi,eax
1004bef5:	jmp    0x1004bf04
1004bef7:	xor    eax,eax
1004bef9:	xor    ebx,ebx
1004befb:	cmp    DWORD PTR [ebp-0x4],eax
1004befe:	sete   al
1004bf01:	mov    DWORD PTR [ebp-0x4],eax
1004bf04:	shr    ecx,1
1004bf06:	test   ecx,ecx
1004bf08:	je     0x1004bf1c
1004bf0a:	dec    ecx
1004bf0b:	test   edx,edx
1004bf0d:	je     0x1004bf13
1004bf0f:	mov    BYTE PTR [edx],0x5c
1004bf12:	inc    edx
1004bf13:	inc    DWORD PTR [edi]
1004bf15:	test   ecx,ecx
1004bf17:	jne    0x1004bf0a
1004bf19:	mov    DWORD PTR [ebp+0xc],edx
1004bf1c:	mov    al,BYTE PTR [esi]
1004bf1e:	test   al,al
1004bf20:	je     0x1004bf77
1004bf22:	cmp    DWORD PTR [ebp-0x4],0x0
1004bf26:	jne    0x1004bf30
1004bf28:	cmp    al,0x20
1004bf2a:	je     0x1004bf77
1004bf2c:	cmp    al,0x9
1004bf2e:	je     0x1004bf77
1004bf30:	test   ebx,ebx
1004bf32:	je     0x1004bf71
1004bf34:	test   edx,edx
1004bf36:	movsx  eax,al
1004bf39:	push   eax
1004bf3a:	je     0x1004bf5f
1004bf3c:	call   0x1004fa15
1004bf41:	test   eax,eax
1004bf43:	pop    ecx
1004bf44:	je     0x1004bf53
1004bf46:	mov    al,BYTE PTR [esi]
1004bf48:	mov    ecx,DWORD PTR [ebp+0xc]
1004bf4b:	inc    DWORD PTR [ebp+0xc]
1004bf4e:	mov    BYTE PTR [ecx],al
1004bf50:	inc    esi
1004bf51:	inc    DWORD PTR [edi]
1004bf53:	mov    ecx,DWORD PTR [ebp+0xc]
1004bf56:	mov    al,BYTE PTR [esi]
1004bf58:	inc    DWORD PTR [ebp+0xc]
1004bf5b:	mov    BYTE PTR [ecx],al
1004bf5d:	jmp    0x1004bf6c
1004bf5f:	call   0x1004fa15
1004bf64:	test   eax,eax
1004bf66:	pop    ecx
1004bf67:	je     0x1004bf6c
1004bf69:	inc    esi
1004bf6a:	inc    DWORD PTR [edi]
1004bf6c:	inc    DWORD PTR [edi]
1004bf6e:	mov    edx,DWORD PTR [ebp+0xc]
1004bf71:	inc    esi
1004bf72:	jmp    0x1004becd
1004bf77:	test   edx,edx
1004bf79:	je     0x1004bf82
1004bf7b:	mov    BYTE PTR [edx],0x0
1004bf7e:	inc    edx
1004bf7f:	mov    DWORD PTR [ebp+0xc],edx
1004bf82:	inc    DWORD PTR [edi]
1004bf84:	mov    ecx,DWORD PTR [ebp+0x10]
1004bf87:	jmp    0x1004be9a
1004bf8c:	mov    eax,DWORD PTR [ebp+0x8]
1004bf8f:	test   eax,eax
1004bf91:	pop    esi
1004bf92:	pop    ebx
1004bf93:	je     0x1004bf98
1004bf95:	and    DWORD PTR [eax],0x0
1004bf98:	inc    DWORD PTR [ecx]
1004bf9a:	leave  
1004bf9b:	ret    
1004bf9c:	push   ebp
1004bf9d:	mov    ebp,esp
1004bf9f:	sub    esp,0xc
1004bfa2:	push   ebx
1004bfa3:	xor    ebx,ebx
1004bfa5:	cmp    DWORD PTR ds:0x10084614,ebx
1004bfab:	push   esi
1004bfac:	push   edi
1004bfad:	jne    0x1004bfb4
1004bfaf:	call   0x1004a8b8
1004bfb4:	push   0x104
1004bfb9:	mov    esi,0x10082368
1004bfbe:	push   esi
1004bfbf:	push   ebx
1004bfc0:	mov    BYTE PTR ds:0x1008246c,bl
1004bfc6:	call   DWORD PTR ds:0x100671e0
1004bfcc:	mov    eax,ds:0x1008461c
1004bfd1:	cmp    eax,ebx
1004bfd3:	mov    DWORD PTR ds:0x10081b50,esi
1004bfd9:	je     0x1004bfe2
1004bfdb:	cmp    BYTE PTR [eax],bl
1004bfdd:	mov    DWORD PTR [ebp-0x4],eax
1004bfe0:	jne    0x1004bfe5
1004bfe2:	mov    DWORD PTR [ebp-0x4],esi
1004bfe5:	mov    edx,DWORD PTR [ebp-0x4]
1004bfe8:	lea    eax,[ebp-0x8]
1004bfeb:	push   eax
1004bfec:	push   ebx
1004bfed:	push   ebx
1004bfee:	lea    edi,[ebp-0xc]
1004bff1:	call   0x1004be04
1004bff6:	mov    eax,DWORD PTR [ebp-0x8]
1004bff9:	add    esp,0xc
1004bffc:	cmp    eax,0x3fffffff
1004c001:	jae    0x1004c04d
1004c003:	mov    ecx,DWORD PTR [ebp-0xc]
1004c006:	cmp    ecx,0xffffffff
1004c009:	jae    0x1004c04d
1004c00b:	mov    edi,eax
1004c00d:	shl    edi,0x2
1004c010:	lea    eax,[edi+ecx*1]
1004c013:	cmp    eax,ecx
1004c015:	jb     0x1004c04d
1004c017:	push   eax
1004c018:	call   0x100472aa
1004c01d:	mov    esi,eax
1004c01f:	cmp    esi,ebx
1004c021:	pop    ecx
1004c022:	je     0x1004c04d
1004c024:	mov    edx,DWORD PTR [ebp-0x4]
1004c027:	lea    eax,[ebp-0x8]
1004c02a:	push   eax
1004c02b:	add    edi,esi
1004c02d:	push   edi
1004c02e:	push   esi
1004c02f:	lea    edi,[ebp-0xc]
1004c032:	call   0x1004be04
1004c037:	mov    eax,DWORD PTR [ebp-0x8]
1004c03a:	add    esp,0xc
1004c03d:	dec    eax
1004c03e:	mov    ds:0x10081b34,eax
1004c043:	mov    DWORD PTR ds:0x10081b38,esi
1004c049:	xor    eax,eax
1004c04b:	jmp    0x1004c050
1004c04d:	or     eax,0xffffffff
1004c050:	pop    edi
1004c051:	pop    esi
1004c052:	pop    ebx
1004c053:	leave  
1004c054:	ret    
1004c055:	push   ecx
1004c056:	push   ecx
1004c057:	mov    eax,ds:0x10082470
1004c05c:	push   ebx
1004c05d:	push   ebp
1004c05e:	push   esi
1004c05f:	push   edi
1004c060:	mov    edi,DWORD PTR ds:0x10067214
1004c066:	xor    ebx,ebx
1004c068:	xor    esi,esi
1004c06a:	cmp    eax,ebx
1004c06c:	push   0x2
1004c06e:	pop    ebp
1004c06f:	jne    0x1004c09e
1004c071:	call   edi
1004c073:	mov    esi,eax
1004c075:	cmp    esi,ebx
1004c077:	je     0x1004c085
1004c079:	mov    DWORD PTR ds:0x10082470,0x1
1004c083:	jmp    0x1004c0a7
1004c085:	call   DWORD PTR ds:0x100670cc
1004c08b:	cmp    eax,0x78
1004c08e:	jne    0x1004c099
1004c090:	mov    eax,ebp
1004c092:	mov    ds:0x10082470,eax
1004c097:	jmp    0x1004c09e
1004c099:	mov    eax,ds:0x10082470
1004c09e:	cmp    eax,0x1
1004c0a1:	jne    0x1004c12b
1004c0a7:	cmp    esi,ebx
1004c0a9:	jne    0x1004c0ba
1004c0ab:	call   edi
1004c0ad:	mov    esi,eax
1004c0af:	cmp    esi,ebx
1004c0b1:	jne    0x1004c0ba
1004c0b3:	xor    eax,eax
1004c0b5:	jmp    0x1004c183
1004c0ba:	cmp    WORD PTR [esi],bx
1004c0bd:	mov    eax,esi
1004c0bf:	je     0x1004c0cf
1004c0c1:	add    eax,ebp
1004c0c3:	cmp    WORD PTR [eax],bx
1004c0c6:	jne    0x1004c0c1
1004c0c8:	add    eax,ebp
1004c0ca:	cmp    WORD PTR [eax],bx
1004c0cd:	jne    0x1004c0c1
1004c0cf:	mov    edi,DWORD PTR ds:0x100670c4
1004c0d5:	push   ebx
1004c0d6:	push   ebx
1004c0d7:	push   ebx
1004c0d8:	sub    eax,esi
1004c0da:	push   ebx
1004c0db:	sar    eax,1
1004c0dd:	inc    eax
1004c0de:	push   eax
1004c0df:	push   esi
1004c0e0:	push   ebx
1004c0e1:	push   ebx
1004c0e2:	mov    DWORD PTR [esp+0x34],eax
1004c0e6:	call   edi
1004c0e8:	mov    ebp,eax
1004c0ea:	cmp    ebp,ebx
1004c0ec:	je     0x1004c120
1004c0ee:	push   ebp
1004c0ef:	call   0x100472aa
1004c0f4:	cmp    eax,ebx
1004c0f6:	pop    ecx
1004c0f7:	mov    DWORD PTR [esp+0x10],eax
1004c0fb:	je     0x1004c120
1004c0fd:	push   ebx
1004c0fe:	push   ebx
1004c0ff:	push   ebp
1004c100:	push   eax
1004c101:	push   DWORD PTR [esp+0x24]
1004c105:	push   esi
1004c106:	push   ebx
1004c107:	push   ebx
1004c108:	call   edi
1004c10a:	test   eax,eax
1004c10c:	jne    0x1004c11c
1004c10e:	push   DWORD PTR [esp+0x10]
1004c112:	call   0x100437dc
1004c117:	pop    ecx
1004c118:	mov    DWORD PTR [esp+0x10],ebx
1004c11c:	mov    ebx,DWORD PTR [esp+0x10]
1004c120:	push   esi
1004c121:	call   DWORD PTR ds:0x10067210
1004c127:	mov    eax,ebx
1004c129:	jmp    0x1004c183
1004c12b:	cmp    eax,ebp
1004c12d:	je     0x1004c133
1004c12f:	cmp    eax,ebx
1004c131:	jne    0x1004c0b3
1004c133:	call   DWORD PTR ds:0x1006720c
1004c139:	mov    esi,eax
1004c13b:	cmp    esi,ebx
1004c13d:	je     0x1004c0b3
1004c143:	cmp    BYTE PTR [esi],bl
1004c145:	je     0x1004c151
1004c147:	inc    eax
1004c148:	cmp    BYTE PTR [eax],bl
1004c14a:	jne    0x1004c147
1004c14c:	inc    eax
1004c14d:	cmp    BYTE PTR [eax],bl
1004c14f:	jne    0x1004c147
1004c151:	sub    eax,esi
1004c153:	inc    eax
1004c154:	mov    ebp,eax
1004c156:	push   ebp
1004c157:	call   0x100472aa
1004c15c:	mov    edi,eax
1004c15e:	cmp    edi,ebx
1004c160:	pop    ecx
1004c161:	jne    0x1004c16f
1004c163:	push   esi
1004c164:	call   DWORD PTR ds:0x10067208
1004c16a:	jmp    0x1004c0b3
1004c16f:	push   ebp
1004c170:	push   esi
1004c171:	push   edi
1004c172:	call   0x10045340
1004c177:	add    esp,0xc
1004c17a:	push   esi
1004c17b:	call   DWORD PTR ds:0x10067208
1004c181:	mov    eax,edi
1004c183:	pop    edi
1004c184:	pop    esi
1004c185:	pop    ebp
1004c186:	pop    ebx
1004c187:	pop    ecx
1004c188:	pop    ecx
1004c189:	ret    
1004c18a:	push   esi
1004c18b:	push   edi
1004c18c:	mov    eax,0x10075c78
1004c191:	mov    edi,0x10075c78
1004c196:	cmp    eax,edi
1004c198:	mov    esi,eax
1004c19a:	jae    0x1004c1ab
1004c19c:	mov    eax,DWORD PTR [esi]
1004c19e:	test   eax,eax
1004c1a0:	je     0x1004c1a4
1004c1a2:	call   eax
1004c1a4:	add    esi,0x4
1004c1a7:	cmp    esi,edi
1004c1a9:	jb     0x1004c19c
1004c1ab:	pop    edi
1004c1ac:	pop    esi
1004c1ad:	ret    
1004c1ae:	push   esi
1004c1af:	push   edi
1004c1b0:	mov    eax,0x10075c80
1004c1b5:	mov    edi,0x10075c80
1004c1ba:	cmp    eax,edi
1004c1bc:	mov    esi,eax
1004c1be:	jae    0x1004c1cf
1004c1c0:	mov    eax,DWORD PTR [esi]
1004c1c2:	test   eax,eax
1004c1c4:	je     0x1004c1c8
1004c1c6:	call   eax
1004c1c8:	add    esi,0x4
1004c1cb:	cmp    esi,edi
1004c1cd:	jb     0x1004c1c0
1004c1cf:	pop    edi
1004c1d0:	pop    esi
1004c1d1:	ret    
1004c1d2:	push   ebp
1004c1d3:	mov    ebp,esp
1004c1d5:	push   ecx
1004c1d6:	push   ecx
1004c1d7:	push   esi
1004c1d8:	call   0x10046f0d
1004c1dd:	mov    esi,eax
1004c1df:	test   esi,esi
1004c1e1:	je     0x1004c32d
1004c1e7:	mov    edx,DWORD PTR [esi+0x5c]
1004c1ea:	mov    eax,ds:0x10080a94
1004c1ef:	push   edi
1004c1f0:	mov    edi,DWORD PTR [ebp+0x8]
1004c1f3:	mov    ecx,edx
1004c1f5:	push   ebx
1004c1f6:	cmp    DWORD PTR [ecx],edi
1004c1f8:	je     0x1004c208
1004c1fa:	mov    ebx,eax
1004c1fc:	imul   ebx,ebx,0xc
1004c1ff:	add    ecx,0xc
1004c202:	add    ebx,edx
1004c204:	cmp    ecx,ebx
1004c206:	jb     0x1004c1f6
1004c208:	imul   eax,eax,0xc
1004c20b:	add    eax,edx
1004c20d:	cmp    ecx,eax
1004c20f:	jae    0x1004c219
1004c211:	cmp    DWORD PTR [ecx],edi
1004c213:	jne    0x1004c219
1004c215:	mov    eax,ecx
1004c217:	jmp    0x1004c21b
1004c219:	xor    eax,eax
1004c21b:	test   eax,eax
1004c21d:	je     0x1004c229
1004c21f:	mov    ebx,DWORD PTR [eax+0x8]
1004c222:	test   ebx,ebx
1004c224:	mov    DWORD PTR [ebp-0x4],ebx
1004c227:	jne    0x1004c230
1004c229:	xor    eax,eax
1004c22b:	jmp    0x1004c32b
1004c230:	cmp    ebx,0x5
1004c233:	jne    0x1004c241
1004c235:	and    DWORD PTR [eax+0x8],0x0
1004c239:	xor    eax,eax
1004c23b:	inc    eax
1004c23c:	jmp    0x1004c32b
1004c241:	cmp    ebx,0x1
1004c244:	je     0x1004c328
1004c24a:	mov    ecx,DWORD PTR [esi+0x60]
1004c24d:	mov    DWORD PTR [ebp-0x8],ecx
1004c250:	mov    ecx,DWORD PTR [ebp+0xc]
1004c253:	mov    DWORD PTR [esi+0x60],ecx
1004c256:	mov    ecx,DWORD PTR [eax+0x4]
1004c259:	cmp    ecx,0x8
1004c25c:	jne    0x1004c31a
1004c262:	mov    ecx,DWORD PTR ds:0x10080a88
1004c268:	mov    edi,DWORD PTR ds:0x10080a8c
1004c26e:	mov    edx,ecx
1004c270:	add    edi,ecx
1004c272:	cmp    edx,edi
1004c274:	jge    0x1004c29a
1004c276:	imul   ecx,ecx,0xc
1004c279:	mov    edi,DWORD PTR [esi+0x5c]
1004c27c:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1004c281:	mov    edi,DWORD PTR ds:0x10080a88
1004c287:	mov    ebx,DWORD PTR ds:0x10080a8c
1004c28d:	inc    edx
1004c28e:	add    ebx,edi
1004c290:	add    ecx,0xc
1004c293:	cmp    edx,ebx
1004c295:	jl     0x1004c279
1004c297:	mov    ebx,DWORD PTR [ebp-0x4]
1004c29a:	mov    eax,DWORD PTR [eax]
1004c29c:	cmp    eax,0xc000008e
1004c2a1:	mov    edi,DWORD PTR [esi+0x64]
1004c2a4:	jne    0x1004c2af
1004c2a6:	mov    DWORD PTR [esi+0x64],0x83
1004c2ad:	jmp    0x1004c30d
1004c2af:	cmp    eax,0xc0000090
1004c2b4:	jne    0x1004c2bf
1004c2b6:	mov    DWORD PTR [esi+0x64],0x81
1004c2bd:	jmp    0x1004c30d
1004c2bf:	cmp    eax,0xc0000091
1004c2c4:	jne    0x1004c2cf
1004c2c6:	mov    DWORD PTR [esi+0x64],0x84
1004c2cd:	jmp    0x1004c30d
1004c2cf:	cmp    eax,0xc0000093
1004c2d4:	jne    0x1004c2df
1004c2d6:	mov    DWORD PTR [esi+0x64],0x85
1004c2dd:	jmp    0x1004c30d
1004c2df:	cmp    eax,0xc000008d
1004c2e4:	jne    0x1004c2ef
1004c2e6:	mov    DWORD PTR [esi+0x64],0x82
1004c2ed:	jmp    0x1004c30d
1004c2ef:	cmp    eax,0xc000008f
1004c2f4:	jne    0x1004c2ff
1004c2f6:	mov    DWORD PTR [esi+0x64],0x86
1004c2fd:	jmp    0x1004c30d
1004c2ff:	cmp    eax,0xc0000092
1004c304:	jne    0x1004c30d
1004c306:	mov    DWORD PTR [esi+0x64],0x8a
1004c30d:	push   DWORD PTR [esi+0x64]
1004c310:	push   0x8
1004c312:	call   ebx
1004c314:	pop    ecx
1004c315:	mov    DWORD PTR [esi+0x64],edi
1004c318:	jmp    0x1004c321
1004c31a:	and    DWORD PTR [eax+0x8],0x0
1004c31e:	push   ecx
1004c31f:	call   ebx
1004c321:	mov    eax,DWORD PTR [ebp-0x8]
1004c324:	pop    ecx
1004c325:	mov    DWORD PTR [esi+0x60],eax
1004c328:	or     eax,0xffffffff
1004c32b:	pop    ebx
1004c32c:	pop    edi
1004c32d:	pop    esi
1004c32e:	leave  
1004c32f:	ret    
1004c330:	mov    eax,0xe06d7363
1004c335:	cmp    DWORD PTR [esp+0x4],eax
1004c339:	jne    0x1004c348
1004c33b:	push   DWORD PTR [esp+0x8]
1004c33f:	push   eax
1004c340:	call   0x1004c1d2
1004c345:	pop    ecx
1004c346:	pop    ecx
1004c347:	ret    
1004c348:	xor    eax,eax
1004c34a:	ret    
1004c34b:	push   ebp
1004c34c:	mov    ebp,esp
1004c34e:	sub    esp,0x10
1004c351:	mov    eax,ds:0x100801ac
1004c356:	and    DWORD PTR [ebp-0x8],0x0
1004c35a:	and    DWORD PTR [ebp-0x4],0x0
1004c35e:	push   ebx
1004c35f:	push   edi
1004c360:	mov    edi,0xbb40e64e
1004c365:	cmp    eax,edi
1004c367:	mov    ebx,0xffff0000
1004c36c:	je     0x1004c37b
1004c36e:	test   ebx,eax
1004c370:	je     0x1004c37b
1004c372:	not    eax
1004c374:	mov    ds:0x100801b0,eax
1004c379:	jmp    0x1004c3db
1004c37b:	push   esi
1004c37c:	lea    eax,[ebp-0x8]
1004c37f:	push   eax
1004c380:	call   DWORD PTR ds:0x10067220
1004c386:	mov    esi,DWORD PTR [ebp-0x4]
1004c389:	xor    esi,DWORD PTR [ebp-0x8]
1004c38c:	call   DWORD PTR ds:0x1006721c
1004c392:	xor    esi,eax
1004c394:	call   DWORD PTR ds:0x1006715c
1004c39a:	xor    esi,eax
1004c39c:	call   DWORD PTR ds:0x1006713c
1004c3a2:	xor    esi,eax
1004c3a4:	lea    eax,[ebp-0x10]
1004c3a7:	push   eax
1004c3a8:	call   DWORD PTR ds:0x10067218
1004c3ae:	mov    eax,DWORD PTR [ebp-0xc]
1004c3b1:	xor    eax,DWORD PTR [ebp-0x10]
1004c3b4:	xor    esi,eax
1004c3b6:	cmp    esi,edi
1004c3b8:	jne    0x1004c3c1
1004c3ba:	mov    esi,0xbb40e64f
1004c3bf:	jmp    0x1004c3cc
1004c3c1:	test   ebx,esi
1004c3c3:	jne    0x1004c3cc
1004c3c5:	mov    eax,esi
1004c3c7:	shl    eax,0x10
1004c3ca:	or     esi,eax
1004c3cc:	mov    DWORD PTR ds:0x100801ac,esi
1004c3d2:	not    esi
1004c3d4:	mov    DWORD PTR ds:0x100801b0,esi
1004c3da:	pop    esi
1004c3db:	pop    edi
1004c3dc:	pop    ebx
1004c3dd:	leave  
1004c3de:	ret    
1004c3df:	push   esi
1004c3e0:	push   edi
1004c3e1:	xor    edi,edi
1004c3e3:	lea    esi,[edi+0x10080a98]
1004c3e9:	push   DWORD PTR [esi]
1004c3eb:	call   0x10046cf1
1004c3f0:	add    edi,0x4
1004c3f3:	cmp    edi,0x28
1004c3f6:	pop    ecx
1004c3f7:	mov    DWORD PTR [esi],eax
1004c3f9:	jb     0x1004c3e3
1004c3fb:	pop    edi
1004c3fc:	pop    esi
1004c3fd:	ret    
1004c3fe:	int3   
1004c3ff:	int3   
1004c400:	mov    ecx,DWORD PTR [esp+0x4]
1004c404:	cmp    WORD PTR [ecx],0x5a4d
1004c409:	je     0x1004c40e
1004c40b:	xor    eax,eax
1004c40d:	ret    
1004c40e:	mov    eax,DWORD PTR [ecx+0x3c]
1004c411:	add    eax,ecx
1004c413:	cmp    DWORD PTR [eax],0x4550
1004c419:	jne    0x1004c40b
1004c41b:	xor    ecx,ecx
1004c41d:	cmp    WORD PTR [eax+0x18],0x10b
1004c423:	sete   cl
1004c426:	mov    eax,ecx
1004c428:	ret    
1004c429:	int3   
1004c42a:	int3   
1004c42b:	int3   
1004c42c:	int3   
1004c42d:	int3   
1004c42e:	int3   
1004c42f:	int3   
1004c430:	mov    eax,DWORD PTR [esp+0x4]
1004c434:	mov    ecx,DWORD PTR [eax+0x3c]
1004c437:	add    ecx,eax
1004c439:	movzx  eax,WORD PTR [ecx+0x14]
1004c43d:	push   ebx
1004c43e:	push   esi
1004c43f:	movzx  esi,WORD PTR [ecx+0x6]
1004c443:	xor    edx,edx
1004c445:	test   esi,esi
1004c447:	push   edi
1004c448:	lea    eax,[eax+ecx*1+0x18]
1004c44c:	jbe    0x1004c46c
1004c44e:	mov    edi,DWORD PTR [esp+0x14]
1004c452:	mov    ecx,DWORD PTR [eax+0xc]
1004c455:	cmp    edi,ecx
1004c457:	jb     0x1004c462
1004c459:	mov    ebx,DWORD PTR [eax+0x8]
1004c45c:	add    ebx,ecx
1004c45e:	cmp    edi,ebx
1004c460:	jb     0x1004c46e
1004c462:	add    edx,0x1
1004c465:	add    eax,0x28
1004c468:	cmp    edx,esi
1004c46a:	jb     0x1004c452
1004c46c:	xor    eax,eax
1004c46e:	pop    edi
1004c46f:	pop    esi
1004c470:	pop    ebx
1004c471:	ret    
1004c472:	int3   
1004c473:	int3   
1004c474:	int3   
1004c475:	int3   
1004c476:	int3   
1004c477:	int3   
1004c478:	int3   
1004c479:	int3   
1004c47a:	int3   
1004c47b:	int3   
1004c47c:	int3   
1004c47d:	int3   
1004c47e:	int3   
1004c47f:	int3   
1004c480:	push   ebp
1004c481:	mov    ebp,esp
1004c483:	push   0xfffffffe
1004c485:	push   0x10075f30
1004c48a:	push   0x10047780
1004c48f:	mov    eax,fs:0x0
1004c495:	push   eax
1004c496:	sub    esp,0x8
1004c499:	push   ebx
1004c49a:	push   esi
1004c49b:	push   edi
1004c49c:	mov    eax,ds:0x100801ac
1004c4a1:	xor    DWORD PTR [ebp-0x8],eax
1004c4a4:	xor    eax,ebp
1004c4a6:	push   eax
1004c4a7:	lea    eax,[ebp-0x10]
1004c4aa:	mov    fs:0x0,eax
1004c4b0:	mov    DWORD PTR [ebp-0x18],esp
1004c4b3:	mov    DWORD PTR [ebp-0x4],0x0
1004c4ba:	push   0x10000000
1004c4bf:	call   0x1004c400
1004c4c4:	add    esp,0x4
1004c4c7:	test   eax,eax
1004c4c9:	je     0x1004c520
1004c4cb:	mov    eax,DWORD PTR [ebp+0x8]
1004c4ce:	sub    eax,0x10000000
1004c4d3:	push   eax
1004c4d4:	push   0x10000000
1004c4d9:	call   0x1004c430
1004c4de:	add    esp,0x8
1004c4e1:	test   eax,eax
1004c4e3:	je     0x1004c520
1004c4e5:	mov    eax,DWORD PTR [eax+0x24]
1004c4e8:	shr    eax,0x1f
1004c4eb:	not    eax
1004c4ed:	and    eax,0x1
1004c4f0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c4f7:	mov    ecx,DWORD PTR [ebp-0x10]
1004c4fa:	mov    DWORD PTR fs:0x0,ecx
1004c501:	pop    ecx
1004c502:	pop    edi
1004c503:	pop    esi
1004c504:	pop    ebx
1004c505:	mov    esp,ebp
1004c507:	pop    ebp
1004c508:	ret    
1004c509:	mov    eax,DWORD PTR [ebp-0x14]
1004c50c:	mov    ecx,DWORD PTR [eax]
1004c50e:	mov    eax,DWORD PTR [ecx]
1004c510:	xor    edx,edx
1004c512:	cmp    eax,0xc0000005
1004c517:	sete   dl
1004c51a:	mov    eax,edx
1004c51c:	ret    
1004c51d:	mov    esp,DWORD PTR [ebp-0x18]
1004c520:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c527:	xor    eax,eax
1004c529:	mov    ecx,DWORD PTR [ebp-0x10]
1004c52c:	mov    DWORD PTR fs:0x0,ecx
1004c533:	pop    ecx
1004c534:	pop    edi
1004c535:	pop    esi
1004c536:	pop    ebx
1004c537:	mov    esp,ebp
1004c539:	pop    ebp
1004c53a:	ret    
1004c53b:	mov    eax,DWORD PTR [esp+0x4]
1004c53f:	mov    ds:0x10082474,eax
1004c544:	mov    ds:0x10082478,eax
1004c549:	mov    ds:0x1008247c,eax
1004c54e:	mov    ds:0x10082480,eax
1004c553:	ret    
1004c554:	mov    eax,DWORD PTR [esp+0x4]
1004c558:	mov    ecx,DWORD PTR ds:0x10080a94
1004c55e:	push   esi
1004c55f:	cmp    DWORD PTR [eax+0x4],edx
1004c562:	je     0x1004c574
1004c564:	mov    esi,ecx
1004c566:	imul   esi,esi,0xc
1004c569:	add    esi,DWORD PTR [esp+0x8]
1004c56d:	add    eax,0xc
1004c570:	cmp    eax,esi
1004c572:	jb     0x1004c55f
1004c574:	imul   ecx,ecx,0xc
1004c577:	add    ecx,DWORD PTR [esp+0x8]
1004c57b:	pop    esi
1004c57c:	cmp    eax,ecx
1004c57e:	jae    0x1004c585
1004c580:	cmp    DWORD PTR [eax+0x4],edx
1004c583:	je     0x1004c587
1004c585:	xor    eax,eax
1004c587:	ret    
1004c588:	push   DWORD PTR ds:0x1008247c
1004c58e:	call   0x10046d68
1004c593:	pop    ecx
1004c594:	ret    
1004c595:	push   0x20
1004c597:	push   0x10075f50
1004c59c:	call   0x1004771c
1004c5a1:	xor    edi,edi
1004c5a3:	mov    DWORD PTR [ebp-0x1c],edi
1004c5a6:	mov    DWORD PTR [ebp-0x28],edi
1004c5a9:	mov    ebx,DWORD PTR [ebp+0x8]
1004c5ac:	cmp    ebx,0xb
1004c5af:	jg     0x1004c5fd
1004c5b1:	je     0x1004c5c8
1004c5b3:	mov    eax,ebx
1004c5b5:	push   0x2
1004c5b7:	pop    ecx
1004c5b8:	sub    eax,ecx
1004c5ba:	je     0x1004c5de
1004c5bc:	sub    eax,ecx
1004c5be:	je     0x1004c5c8
1004c5c0:	sub    eax,ecx
1004c5c2:	je     0x1004c628
1004c5c4:	sub    eax,ecx
1004c5c6:	jne    0x1004c60c
1004c5c8:	call   0x10046f0d
1004c5cd:	mov    edi,eax
1004c5cf:	mov    DWORD PTR [ebp-0x28],edi
1004c5d2:	test   edi,edi
1004c5d4:	jne    0x1004c5ea
1004c5d6:	or     eax,0xffffffff
1004c5d9:	jmp    0x1004c73f
1004c5de:	mov    esi,0x10082474
1004c5e3:	mov    eax,ds:0x10082474
1004c5e8:	jmp    0x1004c64a
1004c5ea:	push   DWORD PTR [edi+0x5c]
1004c5ed:	mov    edx,ebx
1004c5ef:	call   0x1004c554
1004c5f4:	mov    esi,eax
1004c5f6:	add    esi,0x8
1004c5f9:	mov    eax,DWORD PTR [esi]
1004c5fb:	jmp    0x1004c657
1004c5fd:	mov    eax,ebx
1004c5ff:	sub    eax,0xf
1004c602:	je     0x1004c640
1004c604:	sub    eax,0x6
1004c607:	je     0x1004c634
1004c609:	dec    eax
1004c60a:	je     0x1004c628
1004c60c:	call   0x10046c41
1004c611:	mov    DWORD PTR [eax],0x16
1004c617:	xor    eax,eax
1004c619:	push   eax
1004c61a:	push   eax
1004c61b:	push   eax
1004c61c:	push   eax
1004c61d:	push   eax
1004c61e:	call   0x100435e1
1004c623:	add    esp,0x14
1004c626:	jmp    0x1004c5d6
1004c628:	mov    esi,0x1008247c
1004c62d:	mov    eax,ds:0x1008247c
1004c632:	jmp    0x1004c64a
1004c634:	mov    esi,0x10082478
1004c639:	mov    eax,ds:0x10082478
1004c63e:	jmp    0x1004c64a
1004c640:	mov    esi,0x10082480
1004c645:	mov    eax,ds:0x10082480
1004c64a:	mov    DWORD PTR [ebp-0x1c],0x1
1004c651:	push   eax
1004c652:	call   0x10046d68
1004c657:	mov    DWORD PTR [ebp-0x20],eax
1004c65a:	pop    ecx
1004c65b:	xor    eax,eax
1004c65d:	cmp    DWORD PTR [ebp-0x20],0x1
1004c661:	je     0x1004c73f
1004c667:	cmp    DWORD PTR [ebp-0x20],eax
1004c66a:	jne    0x1004c673
1004c66c:	push   0x3
1004c66e:	call   0x100476b0
1004c673:	cmp    DWORD PTR [ebp-0x1c],eax
1004c676:	je     0x1004c67f
1004c678:	push   eax
1004c679:	call   0x10047e0e
1004c67e:	pop    ecx
1004c67f:	xor    eax,eax
1004c681:	mov    DWORD PTR [ebp-0x4],eax
1004c684:	cmp    ebx,0x8
1004c687:	je     0x1004c693
1004c689:	cmp    ebx,0xb
1004c68c:	je     0x1004c693
1004c68e:	cmp    ebx,0x4
1004c691:	jne    0x1004c6ae
1004c693:	mov    ecx,DWORD PTR [edi+0x60]
1004c696:	mov    DWORD PTR [ebp-0x2c],ecx
1004c699:	mov    DWORD PTR [edi+0x60],eax
1004c69c:	cmp    ebx,0x8
1004c69f:	jne    0x1004c6e1
1004c6a1:	mov    ecx,DWORD PTR [edi+0x64]
1004c6a4:	mov    DWORD PTR [ebp-0x30],ecx
1004c6a7:	mov    DWORD PTR [edi+0x64],0x8c
1004c6ae:	cmp    ebx,0x8
1004c6b1:	jne    0x1004c6e1
1004c6b3:	mov    ecx,DWORD PTR ds:0x10080a88
1004c6b9:	mov    DWORD PTR [ebp-0x24],ecx
1004c6bc:	mov    ecx,DWORD PTR ds:0x10080a8c
1004c6c2:	mov    edx,DWORD PTR ds:0x10080a88
1004c6c8:	add    ecx,edx
1004c6ca:	cmp    DWORD PTR [ebp-0x24],ecx
1004c6cd:	jge    0x1004c6e8
1004c6cf:	mov    ecx,DWORD PTR [ebp-0x24]
1004c6d2:	imul   ecx,ecx,0xc
1004c6d5:	mov    edx,DWORD PTR [edi+0x5c]
1004c6d8:	mov    DWORD PTR [ecx+edx*1+0x8],eax
1004c6dc:	inc    DWORD PTR [ebp-0x24]
1004c6df:	jmp    0x1004c6bc
1004c6e1:	call   0x10046d5f
1004c6e6:	mov    DWORD PTR [esi],eax
1004c6e8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c6ef:	call   0x1004c709
1004c6f4:	cmp    ebx,0x8
1004c6f7:	jne    0x1004c718
1004c6f9:	push   DWORD PTR [edi+0x64]
1004c6fc:	push   ebx
1004c6fd:	call   DWORD PTR [ebp-0x20]
1004c700:	pop    ecx
1004c701:	jmp    0x1004c71c
1004c703:	mov    ebx,DWORD PTR [ebp+0x8]
1004c706:	mov    edi,DWORD PTR [ebp-0x28]
1004c709:	cmp    DWORD PTR [ebp-0x1c],0x0
1004c70d:	je     0x1004c717
1004c70f:	push   0x0
1004c711:	call   0x10047d36
1004c716:	pop    ecx
1004c717:	ret    
1004c718:	push   ebx
1004c719:	call   DWORD PTR [ebp-0x20]
1004c71c:	pop    ecx
1004c71d:	cmp    ebx,0x8
1004c720:	je     0x1004c72c
1004c722:	cmp    ebx,0xb
1004c725:	je     0x1004c72c
1004c727:	cmp    ebx,0x4
1004c72a:	jne    0x1004c73d
1004c72c:	mov    eax,DWORD PTR [ebp-0x2c]
1004c72f:	mov    DWORD PTR [edi+0x60],eax
1004c732:	cmp    ebx,0x8
1004c735:	jne    0x1004c73d
1004c737:	mov    eax,DWORD PTR [ebp-0x30]
1004c73a:	mov    DWORD PTR [edi+0x64],eax
1004c73d:	xor    eax,eax
1004c73f:	call   0x10047761
1004c744:	ret    
1004c745:	mov    eax,DWORD PTR [esp+0x4]
1004c749:	mov    ds:0x10082488,eax
1004c74e:	ret    
1004c74f:	mov    eax,DWORD PTR [esp+0x4]
1004c753:	mov    ds:0x1008248c,eax
1004c758:	ret    
1004c759:	push   DWORD PTR [esp+0x4]
1004c75d:	call   DWORD PTR ds:0x10067118
1004c763:	xor    eax,eax
1004c765:	inc    eax
1004c766:	ret    0x8
1004c769:	push   0x14
1004c76b:	push   0x10075f70
1004c770:	call   0x1004771c
1004c775:	xor    edi,edi
1004c777:	mov    DWORD PTR [ebp-0x1c],edi
1004c77a:	push   DWORD PTR ds:0x1008248c
1004c780:	call   0x10046d68
1004c785:	pop    ecx
1004c786:	mov    esi,eax
1004c788:	cmp    esi,edi
1004c78a:	jne    0x1004c7df
1004c78c:	lea    eax,[ebp-0x1c]
1004c78f:	push   eax
1004c790:	call   0x100474c9
1004c795:	pop    ecx
1004c796:	cmp    eax,edi
1004c798:	je     0x1004c7a7
1004c79a:	push   edi
1004c79b:	push   edi
1004c79c:	push   edi
1004c79d:	push   edi
1004c79e:	push   edi
1004c79f:	call   0x100434e5
1004c7a4:	add    esp,0x14
1004c7a7:	cmp    DWORD PTR [ebp-0x1c],0x1
1004c7ab:	je     0x1004c7ce
1004c7ad:	push   0x100709d4
1004c7b2:	call   DWORD PTR ds:0x100671a0
1004c7b8:	cmp    eax,edi
1004c7ba:	je     0x1004c7ce
1004c7bc:	push   0x10067cdc
1004c7c1:	push   eax
1004c7c2:	call   DWORD PTR ds:0x100670e4
1004c7c8:	mov    esi,eax
1004c7ca:	cmp    esi,edi
1004c7cc:	jne    0x1004c7d3
1004c7ce:	mov    esi,0x1004c759
1004c7d3:	push   esi
1004c7d4:	call   0x10046cf1
1004c7d9:	pop    ecx
1004c7da:	mov    ds:0x1008248c,eax
1004c7df:	mov    DWORD PTR [ebp-0x4],edi
1004c7e2:	push   DWORD PTR [ebp+0xc]
1004c7e5:	push   DWORD PTR [ebp+0x8]
1004c7e8:	call   esi
1004c7ea:	mov    DWORD PTR [ebp-0x20],eax
1004c7ed:	jmp    0x1004c81e
1004c7ef:	mov    eax,DWORD PTR [ebp-0x14]
1004c7f2:	mov    eax,DWORD PTR [eax]
1004c7f4:	mov    eax,DWORD PTR [eax]
1004c7f6:	mov    DWORD PTR [ebp-0x24],eax
1004c7f9:	xor    ecx,ecx
1004c7fb:	cmp    eax,0xc0000017
1004c800:	sete   cl
1004c803:	mov    eax,ecx
1004c805:	ret    
1004c806:	mov    esp,DWORD PTR [ebp-0x18]
1004c809:	cmp    DWORD PTR [ebp-0x24],0xc0000017
1004c810:	jne    0x1004c81a
1004c812:	push   0x8
1004c814:	call   DWORD PTR ds:0x10067150
1004c81a:	and    DWORD PTR [ebp-0x20],0x0
1004c81e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c825:	mov    eax,DWORD PTR [ebp-0x20]
1004c828:	call   0x10047761
1004c82d:	ret    
1004c82e:	int3   
1004c82f:	int3   
1004c830:	push   ebx
1004c831:	push   esi
1004c832:	push   edi
1004c833:	mov    edx,DWORD PTR [esp+0x10]
1004c837:	mov    eax,DWORD PTR [esp+0x14]
1004c83b:	mov    ecx,DWORD PTR [esp+0x18]
1004c83f:	push   ebp
1004c840:	push   edx
1004c841:	push   eax
1004c842:	push   ecx
1004c843:	push   ecx
1004c844:	push   0x1004c8c0
1004c849:	push   DWORD PTR fs:0x0
1004c850:	mov    eax,ds:0x100801ac
1004c855:	xor    eax,esp
1004c857:	mov    DWORD PTR [esp+0x8],eax
1004c85b:	mov    DWORD PTR fs:0x0,esp
1004c862:	mov    eax,DWORD PTR [esp+0x30]
1004c866:	mov    ebx,DWORD PTR [eax+0x8]
1004c869:	mov    ecx,DWORD PTR [esp+0x2c]
1004c86d:	xor    ebx,DWORD PTR [ecx]
1004c86f:	mov    esi,DWORD PTR [eax+0xc]
1004c872:	cmp    esi,0xfffffffe
1004c875:	je     0x1004c8b2
1004c877:	mov    edx,DWORD PTR [esp+0x34]
1004c87b:	cmp    edx,0xfffffffe
1004c87e:	je     0x1004c884
1004c880:	cmp    esi,edx
1004c882:	jbe    0x1004c8b2
1004c884:	lea    esi,[esi+esi*2]
1004c887:	lea    ebx,[ebx+esi*4+0x10]
1004c88b:	mov    ecx,DWORD PTR [ebx]
1004c88d:	mov    DWORD PTR [eax+0xc],ecx
1004c890:	cmp    DWORD PTR [ebx+0x4],0x0
1004c894:	jne    0x1004c862
1004c896:	push   0x101
1004c89b:	mov    eax,DWORD PTR [ebx+0x8]
1004c89e:	call   0x1004fb49
1004c8a3:	mov    ecx,0x1
1004c8a8:	mov    eax,DWORD PTR [ebx+0x8]
1004c8ab:	call   0x1004fb68
1004c8b0:	jmp    0x1004c862
1004c8b2:	pop    DWORD PTR fs:0x0
1004c8b9:	add    esp,0x18
1004c8bc:	pop    edi
1004c8bd:	pop    esi
1004c8be:	pop    ebx
1004c8bf:	ret    
1004c8c0:	mov    ecx,DWORD PTR [esp+0x4]
1004c8c4:	test   DWORD PTR [ecx+0x4],0x6
1004c8cb:	mov    eax,0x1
1004c8d0:	je     0x1004c905
1004c8d2:	mov    eax,DWORD PTR [esp+0x8]
1004c8d6:	mov    ecx,DWORD PTR [eax+0x8]
1004c8d9:	xor    ecx,eax
1004c8db:	call   0x10043615
1004c8e0:	push   ebp
1004c8e1:	mov    ebp,DWORD PTR [eax+0x18]
1004c8e4:	push   DWORD PTR [eax+0xc]
1004c8e7:	push   DWORD PTR [eax+0x10]
1004c8ea:	push   DWORD PTR [eax+0x14]
1004c8ed:	call   0x1004c830
1004c8f2:	add    esp,0xc
1004c8f5:	pop    ebp
1004c8f6:	mov    eax,DWORD PTR [esp+0x8]
1004c8fa:	mov    edx,DWORD PTR [esp+0x10]
1004c8fe:	mov    DWORD PTR [edx],eax
1004c900:	mov    eax,0x3
1004c905:	ret    
1004c906:	push   ebp
1004c907:	mov    ecx,DWORD PTR [esp+0x8]
1004c90b:	mov    ebp,DWORD PTR [ecx]
1004c90d:	push   DWORD PTR [ecx+0x1c]
1004c910:	push   DWORD PTR [ecx+0x18]
1004c913:	push   DWORD PTR [ecx+0x28]
1004c916:	call   0x1004c830
1004c91b:	add    esp,0xc
1004c91e:	pop    ebp
1004c91f:	ret    0x4
1004c922:	push   ebp
1004c923:	push   esi
1004c924:	push   edi
1004c925:	push   ebx
1004c926:	mov    ebp,edx
1004c928:	xor    eax,eax
1004c92a:	xor    ebx,ebx
1004c92c:	xor    edx,edx
1004c92e:	xor    esi,esi
1004c930:	xor    edi,edi
1004c932:	call   ecx
1004c934:	pop    ebx
1004c935:	pop    edi
1004c936:	pop    esi
1004c937:	pop    ebp
1004c938:	ret    
1004c939:	mov    ebp,edx
1004c93b:	mov    esi,ecx
1004c93d:	mov    eax,ecx
1004c93f:	push   0x1
1004c941:	call   0x1004fb49
1004c946:	xor    eax,eax
1004c948:	xor    ebx,ebx
1004c94a:	xor    ecx,ecx
1004c94c:	xor    edx,edx
1004c94e:	xor    edi,edi
1004c950:	jmp    esi
1004c952:	push   ebp
1004c953:	mov    ebp,esp
1004c955:	push   ebx
1004c956:	push   esi
1004c957:	push   edi
1004c958:	push   0x0
1004c95a:	push   0x0
1004c95c:	push   0x1004c967
1004c961:	push   ecx
1004c962:	call   0x10056de4
1004c967:	pop    edi
1004c968:	pop    esi
1004c969:	pop    ebx
1004c96a:	pop    ebp
1004c96b:	ret    
1004c96c:	push   ebp
1004c96d:	mov    ebp,DWORD PTR [esp+0x8]
1004c971:	push   edx
1004c972:	push   ecx
1004c973:	push   DWORD PTR [esp+0x14]
1004c977:	call   0x1004c830
1004c97c:	add    esp,0xc
1004c97f:	pop    ebp
1004c980:	ret    0x8
1004c983:	push   ebp
1004c984:	mov    ebp,esp
1004c986:	push   ecx
1004c987:	push   ecx
1004c988:	mov    eax,DWORD PTR [ebp+0xc]
1004c98b:	push   esi
1004c98c:	mov    esi,DWORD PTR [ebp+0x8]
1004c98f:	mov    DWORD PTR [ebp-0x8],eax
1004c992:	mov    eax,DWORD PTR [ebp+0x10]
1004c995:	push   edi
1004c996:	push   esi
1004c997:	mov    DWORD PTR [ebp-0x4],eax
1004c99a:	call   0x1004fc69
1004c99f:	or     edi,0xffffffff
1004c9a2:	cmp    eax,edi
1004c9a4:	pop    ecx
1004c9a5:	jne    0x1004c9b8
1004c9a7:	call   0x10046c41
1004c9ac:	mov    DWORD PTR [eax],0x9
1004c9b2:	mov    eax,edi
1004c9b4:	mov    edx,edi
1004c9b6:	jmp    0x1004ca02
1004c9b8:	push   DWORD PTR [ebp+0x14]
1004c9bb:	lea    ecx,[ebp-0x4]
1004c9be:	push   ecx
1004c9bf:	push   DWORD PTR [ebp-0x8]
1004c9c2:	push   eax
1004c9c3:	call   DWORD PTR ds:0x10067270
1004c9c9:	cmp    eax,edi
1004c9cb:	mov    DWORD PTR [ebp-0x8],eax
1004c9ce:	jne    0x1004c9e3
1004c9d0:	call   DWORD PTR ds:0x100670cc
1004c9d6:	test   eax,eax
1004c9d8:	je     0x1004c9e3
1004c9da:	push   eax
1004c9db:	call   0x10046c67
1004c9e0:	pop    ecx
1004c9e1:	jmp    0x1004c9b2
1004c9e3:	mov    eax,esi
1004c9e5:	sar    eax,0x5
1004c9e8:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1004c9ef:	and    esi,0x1f
1004c9f2:	shl    esi,0x6
1004c9f5:	lea    eax,[eax+esi*1+0x4]
1004c9f9:	and    BYTE PTR [eax],0xfd
1004c9fc:	mov    eax,DWORD PTR [ebp-0x8]
1004c9ff:	mov    edx,DWORD PTR [ebp-0x4]
1004ca02:	pop    edi
1004ca03:	pop    esi
1004ca04:	leave  
1004ca05:	ret    
1004ca06:	push   0x14
1004ca08:	push   0x10075f90
1004ca0d:	call   0x1004771c
1004ca12:	or     esi,0xffffffff
1004ca15:	mov    DWORD PTR [ebp-0x24],esi
1004ca18:	mov    DWORD PTR [ebp-0x20],esi
1004ca1b:	mov    eax,DWORD PTR [ebp+0x8]
1004ca1e:	cmp    eax,0xfffffffe
1004ca21:	jne    0x1004ca3f
1004ca23:	call   0x10046c54
1004ca28:	and    DWORD PTR [eax],0x0
1004ca2b:	call   0x10046c41
1004ca30:	mov    DWORD PTR [eax],0x9
1004ca36:	mov    eax,esi
1004ca38:	mov    edx,esi
1004ca3a:	jmp    0x1004cb0f
1004ca3f:	xor    edi,edi
1004ca41:	cmp    eax,edi
1004ca43:	jl     0x1004ca4d
1004ca45:	cmp    eax,DWORD PTR ds:0x100844c4
1004ca4b:	jb     0x1004ca6e
1004ca4d:	call   0x10046c54
1004ca52:	mov    DWORD PTR [eax],edi
1004ca54:	call   0x10046c41
1004ca59:	mov    DWORD PTR [eax],0x9
1004ca5f:	push   edi
1004ca60:	push   edi
1004ca61:	push   edi
1004ca62:	push   edi
1004ca63:	push   edi
1004ca64:	call   0x100435e1
1004ca69:	add    esp,0x14
1004ca6c:	jmp    0x1004ca36
1004ca6e:	mov    ecx,eax
1004ca70:	sar    ecx,0x5
1004ca73:	lea    ebx,[ecx*4+0x100844e0]
1004ca7a:	mov    esi,eax
1004ca7c:	and    esi,0x1f
1004ca7f:	shl    esi,0x6
1004ca82:	mov    ecx,DWORD PTR [ebx]
1004ca84:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004ca89:	and    ecx,0x1
1004ca8c:	jne    0x1004cab4
1004ca8e:	call   0x10046c54
1004ca93:	mov    DWORD PTR [eax],edi
1004ca95:	call   0x10046c41
1004ca9a:	mov    DWORD PTR [eax],0x9
1004caa0:	push   edi
1004caa1:	push   edi
1004caa2:	push   edi
1004caa3:	push   edi
1004caa4:	push   edi
1004caa5:	call   0x100435e1
1004caaa:	add    esp,0x14
1004caad:	or     edx,0xffffffff
1004cab0:	mov    eax,edx
1004cab2:	jmp    0x1004cb0f
1004cab4:	push   eax
1004cab5:	call   0x1004fcda
1004caba:	pop    ecx
1004cabb:	mov    DWORD PTR [ebp-0x4],edi
1004cabe:	mov    eax,DWORD PTR [ebx]
1004cac0:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004cac5:	je     0x1004cae3
1004cac7:	push   DWORD PTR [ebp+0x14]
1004caca:	push   DWORD PTR [ebp+0x10]
1004cacd:	push   DWORD PTR [ebp+0xc]
1004cad0:	push   DWORD PTR [ebp+0x8]
1004cad3:	call   0x1004c983
1004cad8:	add    esp,0x10
1004cadb:	mov    DWORD PTR [ebp-0x24],eax
1004cade:	mov    DWORD PTR [ebp-0x20],edx
1004cae1:	jmp    0x1004cafd
1004cae3:	call   0x10046c41
1004cae8:	mov    DWORD PTR [eax],0x9
1004caee:	call   0x10046c54
1004caf3:	mov    DWORD PTR [eax],edi
1004caf5:	or     DWORD PTR [ebp-0x24],0xffffffff
1004caf9:	or     DWORD PTR [ebp-0x20],0xffffffff
1004cafd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004cb04:	call   0x1004cb15
1004cb09:	mov    eax,DWORD PTR [ebp-0x24]
1004cb0c:	mov    edx,DWORD PTR [ebp-0x20]
1004cb0f:	call   0x10047761
1004cb14:	ret    
1004cb15:	push   DWORD PTR [ebp+0x8]
1004cb18:	call   0x1004fd7a
1004cb1d:	pop    ecx
1004cb1e:	ret    
1004cb1f:	push   ebp
1004cb20:	lea    ebp,[esp-0x514]
1004cb27:	sub    esp,0x590
1004cb2d:	mov    eax,ds:0x100801ac
1004cb32:	xor    eax,ebp
1004cb34:	mov    DWORD PTR [ebp+0x510],eax
1004cb3a:	mov    eax,DWORD PTR [ebp+0x520]
1004cb40:	push   esi
1004cb41:	xor    esi,esi
1004cb43:	cmp    DWORD PTR [ebp+0x524],esi
1004cb49:	mov    DWORD PTR [ebp-0x64],eax
1004cb4c:	mov    DWORD PTR [ebp-0x60],esi
1004cb4f:	mov    DWORD PTR [ebp-0x68],esi
1004cb52:	jne    0x1004cb5b
1004cb54:	xor    eax,eax
1004cb56:	jmp    0x1004d12b
1004cb5b:	cmp    eax,esi
1004cb5d:	jne    0x1004cb86
1004cb5f:	call   0x10046c54
1004cb64:	mov    DWORD PTR [eax],esi
1004cb66:	call   0x10046c41
1004cb6b:	push   esi
1004cb6c:	push   esi
1004cb6d:	push   esi
1004cb6e:	push   esi
1004cb6f:	push   esi
1004cb70:	mov    DWORD PTR [eax],0x16
1004cb76:	call   0x100435e1
1004cb7b:	add    esp,0x14
1004cb7e:	or     eax,0xffffffff
1004cb81:	jmp    0x1004d12b
1004cb86:	push   ebx
1004cb87:	push   edi
1004cb88:	mov    edi,DWORD PTR [ebp+0x51c]
1004cb8e:	mov    eax,edi
1004cb90:	sar    eax,0x5
1004cb93:	lea    esi,[eax*4+0x100844e0]
1004cb9a:	mov    eax,DWORD PTR [esi]
1004cb9c:	and    edi,0x1f
1004cb9f:	shl    edi,0x6
1004cba2:	add    eax,edi
1004cba4:	mov    bl,BYTE PTR [eax+0x24]
1004cba7:	add    bl,bl
1004cba9:	sar    bl,1
1004cbab:	cmp    bl,0x2
1004cbae:	mov    DWORD PTR [ebp-0x70],esi
1004cbb1:	mov    BYTE PTR [ebp-0x71],bl
1004cbb4:	je     0x1004cbbb
1004cbb6:	cmp    bl,0x1
1004cbb9:	jne    0x1004cbee
1004cbbb:	mov    ecx,DWORD PTR [ebp+0x524]
1004cbc1:	not    ecx
1004cbc3:	test   cl,0x1
1004cbc6:	jne    0x1004cbee
1004cbc8:	call   0x10046c54
1004cbcd:	xor    esi,esi
1004cbcf:	mov    DWORD PTR [eax],esi
1004cbd1:	call   0x10046c41
1004cbd6:	push   esi
1004cbd7:	push   esi
1004cbd8:	push   esi
1004cbd9:	push   esi
1004cbda:	push   esi
1004cbdb:	mov    DWORD PTR [eax],0x16
1004cbe1:	call   0x100435e1
1004cbe6:	add    esp,0x14
1004cbe9:	jmp    0x1004d11e
1004cbee:	test   BYTE PTR [eax+0x4],0x20
1004cbf2:	je     0x1004cc08
1004cbf4:	push   0x2
1004cbf6:	push   0x0
1004cbf8:	push   0x0
1004cbfa:	push   DWORD PTR [ebp+0x51c]
1004cc00:	call   0x1004c983
1004cc05:	add    esp,0x10
1004cc08:	push   DWORD PTR [ebp+0x51c]
1004cc0e:	call   0x1004d261
1004cc13:	test   eax,eax
1004cc15:	pop    ecx
1004cc16:	je     0x1004ce55
1004cc1c:	mov    eax,DWORD PTR [esi]
1004cc1e:	test   BYTE PTR [edi+eax*1+0x4],0x80
1004cc23:	je     0x1004ce55
1004cc29:	call   0x10046f84
1004cc2e:	mov    eax,DWORD PTR [eax+0x6c]
1004cc31:	xor    ecx,ecx
1004cc33:	cmp    DWORD PTR [eax+0x14],ecx
1004cc36:	lea    eax,[ebp-0x7c]
1004cc39:	sete   cl
1004cc3c:	push   eax
1004cc3d:	mov    eax,DWORD PTR [esi]
1004cc3f:	push   DWORD PTR [edi+eax*1]
1004cc42:	mov    DWORD PTR [ebp-0x78],ecx
1004cc45:	call   DWORD PTR ds:0x10067238
1004cc4b:	test   eax,eax
1004cc4d:	je     0x1004ce55
1004cc53:	xor    ecx,ecx
1004cc55:	cmp    DWORD PTR [ebp-0x78],ecx
1004cc58:	je     0x1004cc62
1004cc5a:	test   bl,bl
1004cc5c:	je     0x1004ce57
1004cc62:	call   DWORD PTR ds:0x10067234
1004cc68:	mov    ebx,DWORD PTR [ebp-0x64]
1004cc6b:	mov    DWORD PTR [ebp-0x7c],eax
1004cc6e:	xor    eax,eax
1004cc70:	cmp    DWORD PTR [ebp+0x524],eax
1004cc76:	mov    DWORD PTR [ebp-0x5c],eax
1004cc79:	jbe    0x1004d0c6
1004cc7f:	mov    DWORD PTR [ebp-0x54],eax
1004cc82:	mov    al,BYTE PTR [ebp-0x71]
1004cc85:	test   al,al
1004cc87:	jne    0x1004cdca
1004cc8d:	mov    cl,BYTE PTR [ebx]
1004cc8f:	mov    esi,DWORD PTR [ebp-0x70]
1004cc92:	xor    eax,eax
1004cc94:	cmp    cl,0xa
1004cc97:	sete   al
1004cc9a:	mov    DWORD PTR [ebp-0x78],eax
1004cc9d:	mov    eax,DWORD PTR [esi]
1004cc9f:	add    eax,edi
1004cca1:	cmp    DWORD PTR [eax+0x38],0x0
1004cca5:	je     0x1004ccc5
1004cca7:	mov    dl,BYTE PTR [eax+0x34]
1004ccaa:	mov    BYTE PTR [ebp+0x508],dl
1004ccb0:	mov    BYTE PTR [ebp+0x509],cl
1004ccb6:	and    DWORD PTR [eax+0x38],0x0
1004ccba:	push   0x2
1004ccbc:	lea    eax,[ebp+0x508]
1004ccc2:	push   eax
1004ccc3:	jmp    0x1004cd0a
1004ccc5:	movsx  eax,cl
1004ccc8:	push   eax
1004ccc9:	call   0x1004b361
1004ccce:	test   eax,eax
1004ccd0:	pop    ecx
1004ccd1:	je     0x1004cd07
1004ccd3:	mov    ecx,DWORD PTR [ebp-0x64]
1004ccd6:	sub    ecx,ebx
1004ccd8:	add    ecx,DWORD PTR [ebp+0x524]
1004ccde:	xor    eax,eax
1004cce0:	inc    eax
1004cce1:	cmp    ecx,eax
1004cce3:	jbe    0x1004ce3f
1004cce9:	push   0x2
1004cceb:	lea    eax,[ebp-0x58]
1004ccee:	push   ebx
1004ccef:	push   eax
1004ccf0:	call   0x1004e1c9
1004ccf5:	add    esp,0xc
1004ccf8:	cmp    eax,0xffffffff
1004ccfb:	je     0x1004d0c0
1004cd01:	inc    ebx
1004cd02:	inc    DWORD PTR [ebp-0x54]
1004cd05:	jmp    0x1004cd1f
1004cd07:	push   0x1
1004cd09:	push   ebx
1004cd0a:	lea    eax,[ebp-0x58]
1004cd0d:	push   eax
1004cd0e:	call   0x1004e1c9
1004cd13:	add    esp,0xc
1004cd16:	cmp    eax,0xffffffff
1004cd19:	je     0x1004d0c0
1004cd1f:	xor    eax,eax
1004cd21:	push   eax
1004cd22:	push   eax
1004cd23:	push   0x5
1004cd25:	lea    ecx,[ebp+0x508]
1004cd2b:	push   ecx
1004cd2c:	push   0x1
1004cd2e:	lea    ecx,[ebp-0x58]
1004cd31:	push   ecx
1004cd32:	push   eax
1004cd33:	push   DWORD PTR [ebp-0x7c]
1004cd36:	inc    ebx
1004cd37:	inc    DWORD PTR [ebp-0x54]
1004cd3a:	call   DWORD PTR ds:0x100670c4
1004cd40:	mov    esi,eax
1004cd42:	test   esi,esi
1004cd44:	je     0x1004d0c0
1004cd4a:	push   0x0
1004cd4c:	lea    eax,[ebp-0x5c]
1004cd4f:	push   eax
1004cd50:	push   esi
1004cd51:	lea    eax,[ebp+0x508]
1004cd57:	push   eax
1004cd58:	mov    eax,DWORD PTR [ebp-0x70]
1004cd5b:	mov    eax,DWORD PTR [eax]
1004cd5d:	push   DWORD PTR [edi+eax*1]
1004cd60:	call   DWORD PTR ds:0x100670a4
1004cd66:	test   eax,eax
1004cd68:	je     0x1004d0b7
1004cd6e:	mov    eax,DWORD PTR [ebp-0x54]
1004cd71:	mov    ecx,DWORD PTR [ebp-0x68]
1004cd74:	add    eax,ecx
1004cd76:	cmp    DWORD PTR [ebp-0x5c],esi
1004cd79:	mov    DWORD PTR [ebp-0x60],eax
1004cd7c:	jl     0x1004d0c0
1004cd82:	cmp    DWORD PTR [ebp-0x78],0x0
1004cd86:	je     0x1004ce2b
1004cd8c:	push   0x0
1004cd8e:	lea    eax,[ebp-0x5c]
1004cd91:	push   eax
1004cd92:	push   0x1
1004cd94:	lea    eax,[ebp+0x508]
1004cd9a:	push   eax
1004cd9b:	mov    eax,DWORD PTR [ebp-0x70]
1004cd9e:	mov    eax,DWORD PTR [eax]
1004cda0:	mov    BYTE PTR [ebp+0x508],0xd
1004cda7:	push   DWORD PTR [edi+eax*1]
1004cdaa:	call   DWORD PTR ds:0x100670a4
1004cdb0:	test   eax,eax
1004cdb2:	je     0x1004d0b7
1004cdb8:	cmp    DWORD PTR [ebp-0x5c],0x1
1004cdbc:	jl     0x1004d0c0
1004cdc2:	inc    DWORD PTR [ebp-0x68]
1004cdc5:	inc    DWORD PTR [ebp-0x60]
1004cdc8:	jmp    0x1004ce2b
1004cdca:	cmp    al,0x1
1004cdcc:	je     0x1004cdd2
1004cdce:	cmp    al,0x2
1004cdd0:	jne    0x1004cdea
1004cdd2:	movzx  esi,WORD PTR [ebx]
1004cdd5:	xor    ecx,ecx
1004cdd7:	cmp    si,0xa
1004cddb:	sete   cl
1004cdde:	inc    ebx
1004cddf:	inc    ebx
1004cde0:	add    DWORD PTR [ebp-0x54],0x2
1004cde4:	mov    DWORD PTR [ebp-0x58],esi
1004cde7:	mov    DWORD PTR [ebp-0x78],ecx
1004cdea:	cmp    al,0x1
1004cdec:	je     0x1004cdf2
1004cdee:	cmp    al,0x2
1004cdf0:	jne    0x1004ce2b
1004cdf2:	push   DWORD PTR [ebp-0x58]
1004cdf5:	call   0x1004ff36
1004cdfa:	cmp    ax,WORD PTR [ebp-0x58]
1004cdfe:	pop    ecx
1004cdff:	jne    0x1004d0b7
1004ce05:	inc    DWORD PTR [ebp-0x60]
1004ce08:	cmp    DWORD PTR [ebp-0x78],0x0
1004ce0c:	je     0x1004ce2b
1004ce0e:	push   0xd
1004ce10:	pop    eax
1004ce11:	push   eax
1004ce12:	mov    DWORD PTR [ebp-0x58],eax
1004ce15:	call   0x1004ff36
1004ce1a:	cmp    ax,WORD PTR [ebp-0x58]
1004ce1e:	pop    ecx
1004ce1f:	jne    0x1004d0b7
1004ce25:	inc    DWORD PTR [ebp-0x60]
1004ce28:	inc    DWORD PTR [ebp-0x68]
1004ce2b:	mov    eax,DWORD PTR [ebp+0x524]
1004ce31:	cmp    DWORD PTR [ebp-0x54],eax
1004ce34:	jb     0x1004cc82
1004ce3a:	jmp    0x1004d0c0
1004ce3f:	mov    ecx,DWORD PTR [esi]
1004ce41:	mov    dl,BYTE PTR [ebx]
1004ce43:	inc    DWORD PTR [ebp-0x60]
1004ce46:	mov    BYTE PTR [edi+ecx*1+0x34],dl
1004ce4a:	mov    ecx,DWORD PTR [esi]
1004ce4c:	mov    DWORD PTR [edi+ecx*1+0x38],eax
1004ce50:	jmp    0x1004d0c0
1004ce55:	xor    ecx,ecx
1004ce57:	mov    eax,DWORD PTR [esi]
1004ce59:	add    eax,edi
1004ce5b:	test   BYTE PTR [eax+0x4],0x80
1004ce5f:	je     0x1004d090
1004ce65:	test   bl,bl
1004ce67:	mov    eax,DWORD PTR [ebp-0x64]
1004ce6a:	mov    DWORD PTR [ebp-0x58],ecx
1004ce6d:	jne    0x1004cf09
1004ce73:	cmp    DWORD PTR [ebp+0x524],ecx
1004ce79:	mov    DWORD PTR [ebp-0x5c],eax
1004ce7c:	jbe    0x1004d0f6
1004ce82:	jmp    0x1004ce87
1004ce84:	mov    esi,DWORD PTR [ebp-0x70]
1004ce87:	mov    ecx,DWORD PTR [ebp-0x5c]
1004ce8a:	and    DWORD PTR [ebp-0x54],0x0
1004ce8e:	sub    ecx,DWORD PTR [ebp-0x64]
1004ce91:	lea    eax,[ebp-0x50]
1004ce94:	cmp    ecx,DWORD PTR [ebp+0x524]
1004ce9a:	jae    0x1004cec3
1004ce9c:	mov    edx,DWORD PTR [ebp-0x5c]
1004ce9f:	inc    DWORD PTR [ebp-0x5c]
1004cea2:	mov    dl,BYTE PTR [edx]
1004cea4:	inc    ecx
1004cea5:	cmp    dl,0xa
1004cea8:	jne    0x1004ceb4
1004ceaa:	inc    DWORD PTR [ebp-0x68]
1004cead:	mov    BYTE PTR [eax],0xd
1004ceb0:	inc    eax
1004ceb1:	inc    DWORD PTR [ebp-0x54]
1004ceb4:	mov    BYTE PTR [eax],dl
1004ceb6:	inc    eax
1004ceb7:	inc    DWORD PTR [ebp-0x54]
1004ceba:	cmp    DWORD PTR [ebp-0x54],0x400
1004cec1:	jb     0x1004ce94
1004cec3:	mov    ebx,eax
1004cec5:	lea    eax,[ebp-0x50]
1004cec8:	sub    ebx,eax
1004ceca:	push   0x0
1004cecc:	lea    eax,[ebp-0x6c]
1004cecf:	push   eax
1004ced0:	push   ebx
1004ced1:	lea    eax,[ebp-0x50]
1004ced4:	push   eax
1004ced5:	mov    eax,DWORD PTR [esi]
1004ced7:	push   DWORD PTR [edi+eax*1]
1004ceda:	call   DWORD PTR ds:0x100670a4
1004cee0:	test   eax,eax
1004cee2:	je     0x1004d0b7
1004cee8:	mov    eax,DWORD PTR [ebp-0x6c]
1004ceeb:	add    DWORD PTR [ebp-0x60],eax
1004ceee:	cmp    eax,ebx
1004cef0:	jl     0x1004d0c0
1004cef6:	mov    eax,DWORD PTR [ebp-0x5c]
1004cef9:	sub    eax,DWORD PTR [ebp-0x64]
1004cefc:	cmp    eax,DWORD PTR [ebp+0x524]
1004cf02:	jb     0x1004ce84
1004cf04:	jmp    0x1004d0c0
1004cf09:	cmp    bl,0x2
1004cf0c:	mov    DWORD PTR [ebp-0x54],eax
1004cf0f:	jne    0x1004cfb8
1004cf15:	cmp    DWORD PTR [ebp+0x524],ecx
1004cf1b:	jbe    0x1004d0f6
1004cf21:	jmp    0x1004cf26
1004cf23:	mov    esi,DWORD PTR [ebp-0x70]
1004cf26:	mov    ecx,DWORD PTR [ebp-0x54]
1004cf29:	and    DWORD PTR [ebp-0x5c],0x0
1004cf2d:	sub    ecx,DWORD PTR [ebp-0x64]
1004cf30:	lea    eax,[ebp-0x50]
1004cf33:	cmp    ecx,DWORD PTR [ebp+0x524]
1004cf39:	jae    0x1004cf6e
1004cf3b:	mov    edx,DWORD PTR [ebp-0x54]
1004cf3e:	add    DWORD PTR [ebp-0x54],0x2
1004cf42:	movzx  edx,WORD PTR [edx]
1004cf45:	inc    ecx
1004cf46:	inc    ecx
1004cf47:	cmp    dx,0xa
1004cf4b:	jne    0x1004cf5c
1004cf4d:	add    DWORD PTR [ebp-0x68],0x2
1004cf51:	mov    WORD PTR [eax],0xd
1004cf56:	inc    eax
1004cf57:	inc    eax
1004cf58:	add    DWORD PTR [ebp-0x5c],0x2
1004cf5c:	add    DWORD PTR [ebp-0x5c],0x2
1004cf60:	mov    WORD PTR [eax],dx
1004cf63:	inc    eax
1004cf64:	inc    eax
1004cf65:	cmp    DWORD PTR [ebp-0x5c],0x3ff
1004cf6c:	jb     0x1004cf33
1004cf6e:	mov    ebx,eax
1004cf70:	lea    eax,[ebp-0x50]
1004cf73:	sub    ebx,eax
1004cf75:	push   0x0
1004cf77:	lea    eax,[ebp-0x6c]
1004cf7a:	push   eax
1004cf7b:	push   ebx
1004cf7c:	lea    eax,[ebp-0x50]
1004cf7f:	push   eax
1004cf80:	mov    eax,DWORD PTR [esi]
1004cf82:	push   DWORD PTR [edi+eax*1]
1004cf85:	call   DWORD PTR ds:0x100670a4
1004cf8b:	test   eax,eax
1004cf8d:	je     0x1004d0b7
1004cf93:	mov    eax,DWORD PTR [ebp-0x6c]
1004cf96:	add    DWORD PTR [ebp-0x60],eax
1004cf99:	cmp    eax,ebx
1004cf9b:	jl     0x1004d0c0
1004cfa1:	mov    eax,DWORD PTR [ebp-0x54]
1004cfa4:	sub    eax,DWORD PTR [ebp-0x64]
1004cfa7:	cmp    eax,DWORD PTR [ebp+0x524]
1004cfad:	jb     0x1004cf23
1004cfb3:	jmp    0x1004d0c0
1004cfb8:	cmp    DWORD PTR [ebp+0x524],ecx
1004cfbe:	jbe    0x1004d0f6
1004cfc4:	mov    ecx,DWORD PTR [ebp-0x54]
1004cfc7:	and    DWORD PTR [ebp-0x5c],0x0
1004cfcb:	sub    ecx,DWORD PTR [ebp-0x64]
1004cfce:	push   0x2
1004cfd0:	lea    eax,[ebp+0x3b4]
1004cfd6:	pop    esi
1004cfd7:	cmp    ecx,DWORD PTR [ebp+0x524]
1004cfdd:	jae    0x1004d00b
1004cfdf:	mov    edx,DWORD PTR [ebp-0x54]
1004cfe2:	movzx  edx,WORD PTR [edx]
1004cfe5:	add    DWORD PTR [ebp-0x54],esi
1004cfe8:	add    ecx,esi
1004cfea:	cmp    dx,0xa
1004cfee:	jne    0x1004cffa
1004cff0:	mov    WORD PTR [eax],0xd
1004cff5:	add    eax,esi
1004cff7:	add    DWORD PTR [ebp-0x5c],esi
1004cffa:	add    DWORD PTR [ebp-0x5c],esi
1004cffd:	mov    WORD PTR [eax],dx
1004d000:	add    eax,esi
1004d002:	cmp    DWORD PTR [ebp-0x5c],0x152
1004d009:	jb     0x1004cfd7
1004d00b:	xor    esi,esi
1004d00d:	push   esi
1004d00e:	push   esi
1004d00f:	push   0x2ab
1004d014:	lea    ecx,[ebp+0x104]
1004d01a:	push   ecx
1004d01b:	lea    ecx,[ebp+0x3b4]
1004d021:	sub    eax,ecx
1004d023:	cdq    
1004d024:	sub    eax,edx
1004d026:	sar    eax,1
1004d028:	push   eax
1004d029:	mov    eax,ecx
1004d02b:	push   eax
1004d02c:	push   esi
1004d02d:	push   0xfde9
1004d032:	call   DWORD PTR ds:0x100670c4
1004d038:	mov    ebx,eax
1004d03a:	cmp    ebx,esi
1004d03c:	je     0x1004d0b7
1004d03e:	push   0x0
1004d040:	lea    eax,[ebp-0x6c]
1004d043:	push   eax
1004d044:	mov    eax,ebx
1004d046:	sub    eax,esi
1004d048:	push   eax
1004d049:	lea    eax,[ebp+esi*1+0x104]
1004d050:	push   eax
1004d051:	mov    eax,DWORD PTR [ebp-0x70]
1004d054:	mov    eax,DWORD PTR [eax]
1004d056:	push   DWORD PTR [edi+eax*1]
1004d059:	call   DWORD PTR ds:0x100670a4
1004d05f:	test   eax,eax
1004d061:	je     0x1004d06c
1004d063:	add    esi,DWORD PTR [ebp-0x6c]
1004d066:	cmp    ebx,esi
1004d068:	jg     0x1004d03e
1004d06a:	jmp    0x1004d075
1004d06c:	call   DWORD PTR ds:0x100670cc
1004d072:	mov    DWORD PTR [ebp-0x58],eax
1004d075:	cmp    ebx,esi
1004d077:	jg     0x1004d0c0
1004d079:	mov    eax,DWORD PTR [ebp-0x54]
1004d07c:	sub    eax,DWORD PTR [ebp-0x64]
1004d07f:	cmp    eax,DWORD PTR [ebp+0x524]
1004d085:	mov    DWORD PTR [ebp-0x60],eax
1004d088:	jb     0x1004cfc4
1004d08e:	jmp    0x1004d0c0
1004d090:	push   0x0
1004d092:	lea    ecx,[ebp-0x6c]
1004d095:	push   ecx
1004d096:	push   DWORD PTR [ebp+0x524]
1004d09c:	push   DWORD PTR [ebp-0x64]
1004d09f:	push   DWORD PTR [eax]
1004d0a1:	call   DWORD PTR ds:0x100670a4
1004d0a7:	test   eax,eax
1004d0a9:	je     0x1004d0b7
1004d0ab:	mov    eax,DWORD PTR [ebp-0x6c]
1004d0ae:	and    DWORD PTR [ebp-0x58],0x0
1004d0b2:	mov    DWORD PTR [ebp-0x60],eax
1004d0b5:	jmp    0x1004d0c0
1004d0b7:	call   DWORD PTR ds:0x100670cc
1004d0bd:	mov    DWORD PTR [ebp-0x58],eax
1004d0c0:	cmp    DWORD PTR [ebp-0x60],0x0
1004d0c4:	jne    0x1004d123
1004d0c6:	cmp    DWORD PTR [ebp-0x58],0x0
1004d0ca:	je     0x1004d0f3
1004d0cc:	push   0x5
1004d0ce:	pop    esi
1004d0cf:	cmp    DWORD PTR [ebp-0x58],esi
1004d0d2:	jne    0x1004d0e8
1004d0d4:	call   0x10046c41
1004d0d9:	mov    DWORD PTR [eax],0x9
1004d0df:	call   0x10046c54
1004d0e4:	mov    DWORD PTR [eax],esi
1004d0e6:	jmp    0x1004d11e
1004d0e8:	push   DWORD PTR [ebp-0x58]
1004d0eb:	call   0x10046c67
1004d0f0:	pop    ecx
1004d0f1:	jmp    0x1004d11e
1004d0f3:	mov    esi,DWORD PTR [ebp-0x70]
1004d0f6:	mov    eax,DWORD PTR [esi]
1004d0f8:	test   BYTE PTR [edi+eax*1+0x4],0x40
1004d0fd:	je     0x1004d10b
1004d0ff:	mov    eax,DWORD PTR [ebp-0x64]
1004d102:	cmp    BYTE PTR [eax],0x1a
1004d105:	jne    0x1004d10b
1004d107:	xor    eax,eax
1004d109:	jmp    0x1004d129
1004d10b:	call   0x10046c41
1004d110:	mov    DWORD PTR [eax],0x1c
1004d116:	call   0x10046c54
1004d11b:	and    DWORD PTR [eax],0x0
1004d11e:	or     eax,0xffffffff
1004d121:	jmp    0x1004d129
1004d123:	mov    eax,DWORD PTR [ebp-0x60]
1004d126:	sub    eax,DWORD PTR [ebp-0x68]
1004d129:	pop    edi
1004d12a:	pop    ebx
1004d12b:	mov    ecx,DWORD PTR [ebp+0x510]
1004d131:	xor    ecx,ebp
1004d133:	pop    esi
1004d134:	call   0x10043615
1004d139:	add    ebp,0x514
1004d13f:	leave  
1004d140:	ret    
1004d141:	push   0x10
1004d143:	push   0x10075fb0
1004d148:	call   0x1004771c
1004d14d:	mov    eax,DWORD PTR [ebp+0x8]
1004d150:	cmp    eax,0xfffffffe
1004d153:	jne    0x1004d170
1004d155:	call   0x10046c54
1004d15a:	and    DWORD PTR [eax],0x0
1004d15d:	call   0x10046c41
1004d162:	mov    DWORD PTR [eax],0x9
1004d168:	or     eax,0xffffffff
1004d16b:	jmp    0x1004d20d
1004d170:	xor    edi,edi
1004d172:	cmp    eax,edi
1004d174:	jl     0x1004d17e
1004d176:	cmp    eax,DWORD PTR ds:0x100844c4
1004d17c:	jb     0x1004d19f
1004d17e:	call   0x10046c54
1004d183:	mov    DWORD PTR [eax],edi
1004d185:	call   0x10046c41
1004d18a:	mov    DWORD PTR [eax],0x9
1004d190:	push   edi
1004d191:	push   edi
1004d192:	push   edi
1004d193:	push   edi
1004d194:	push   edi
1004d195:	call   0x100435e1
1004d19a:	add    esp,0x14
1004d19d:	jmp    0x1004d168
1004d19f:	mov    ecx,eax
1004d1a1:	sar    ecx,0x5
1004d1a4:	lea    ebx,[ecx*4+0x100844e0]
1004d1ab:	mov    esi,eax
1004d1ad:	and    esi,0x1f
1004d1b0:	shl    esi,0x6
1004d1b3:	mov    ecx,DWORD PTR [ebx]
1004d1b5:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004d1ba:	and    ecx,0x1
1004d1bd:	je     0x1004d17e
1004d1bf:	push   eax
1004d1c0:	call   0x1004fcda
1004d1c5:	pop    ecx
1004d1c6:	mov    DWORD PTR [ebp-0x4],edi
1004d1c9:	mov    eax,DWORD PTR [ebx]
1004d1cb:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004d1d0:	je     0x1004d1e8
1004d1d2:	push   DWORD PTR [ebp+0x10]
1004d1d5:	push   DWORD PTR [ebp+0xc]
1004d1d8:	push   DWORD PTR [ebp+0x8]
1004d1db:	call   0x1004cb1f
1004d1e0:	add    esp,0xc
1004d1e3:	mov    DWORD PTR [ebp-0x1c],eax
1004d1e6:	jmp    0x1004d1fe
1004d1e8:	call   0x10046c41
1004d1ed:	mov    DWORD PTR [eax],0x9
1004d1f3:	call   0x10046c54
1004d1f8:	mov    DWORD PTR [eax],edi
1004d1fa:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004d1fe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004d205:	call   0x1004d213
1004d20a:	mov    eax,DWORD PTR [ebp-0x1c]
1004d20d:	call   0x10047761
1004d212:	ret    
1004d213:	push   DWORD PTR [ebp+0x8]
1004d216:	call   0x1004fd7a
1004d21b:	pop    ecx
1004d21c:	ret    
1004d21d:	inc    DWORD PTR ds:0x100824cc
1004d223:	push   0x1000
1004d228:	call   0x100472aa
1004d22d:	test   eax,eax
1004d22f:	pop    ecx
1004d230:	mov    ecx,DWORD PTR [esp+0x4]
1004d234:	mov    DWORD PTR [ecx+0x8],eax
1004d237:	je     0x1004d246
1004d239:	or     DWORD PTR [ecx+0xc],0x8
1004d23d:	mov    DWORD PTR [ecx+0x18],0x1000
1004d244:	jmp    0x1004d257
1004d246:	or     DWORD PTR [ecx+0xc],0x4
1004d24a:	lea    eax,[ecx+0x14]
1004d24d:	mov    DWORD PTR [ecx+0x8],eax
1004d250:	mov    DWORD PTR [ecx+0x18],0x2
1004d257:	mov    eax,DWORD PTR [ecx+0x8]
1004d25a:	and    DWORD PTR [ecx+0x4],0x0
1004d25e:	mov    DWORD PTR [ecx],eax
1004d260:	ret    
1004d261:	mov    eax,DWORD PTR [esp+0x4]
1004d265:	cmp    eax,0xfffffffe
1004d268:	jne    0x1004d278
1004d26a:	call   0x10046c41
1004d26f:	mov    DWORD PTR [eax],0x9
1004d275:	xor    eax,eax
1004d277:	ret    
1004d278:	push   esi
1004d279:	xor    esi,esi
1004d27b:	cmp    eax,esi
1004d27d:	jl     0x1004d287
1004d27f:	cmp    eax,DWORD PTR ds:0x100844c4
1004d285:	jb     0x1004d2a3
1004d287:	call   0x10046c41
1004d28c:	push   esi
1004d28d:	push   esi
1004d28e:	push   esi
1004d28f:	push   esi
1004d290:	push   esi
1004d291:	mov    DWORD PTR [eax],0x9
1004d297:	call   0x100435e1
1004d29c:	add    esp,0x14
1004d29f:	xor    eax,eax
1004d2a1:	pop    esi
1004d2a2:	ret    
1004d2a3:	mov    ecx,eax
1004d2a5:	and    eax,0x1f
1004d2a8:	sar    ecx,0x5
1004d2ab:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1004d2b2:	shl    eax,0x6
1004d2b5:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
1004d2ba:	and    eax,0x40
1004d2bd:	pop    esi
1004d2be:	ret    
1004d2bf:	mov    eax,0x10080ac0
1004d2c4:	ret    
1004d2c5:	mov    eax,ds:0x100844c0
1004d2ca:	test   eax,eax
1004d2cc:	push   esi
1004d2cd:	push   0x14
1004d2cf:	pop    esi
1004d2d0:	jne    0x1004d2d9
1004d2d2:	mov    eax,0x200
1004d2d7:	jmp    0x1004d2df
1004d2d9:	cmp    eax,esi
1004d2db:	jge    0x1004d2e4
1004d2dd:	mov    eax,esi
1004d2df:	mov    ds:0x100844c0,eax
1004d2e4:	push   0x4
1004d2e6:	push   eax
1004d2e7:	call   0x100472ea
1004d2ec:	test   eax,eax
1004d2ee:	pop    ecx
1004d2ef:	pop    ecx
1004d2f0:	mov    ds:0x100834b0,eax
1004d2f5:	jne    0x1004d315
1004d2f7:	push   0x4
1004d2f9:	push   esi
1004d2fa:	mov    DWORD PTR ds:0x100844c0,esi
1004d300:	call   0x100472ea
1004d305:	test   eax,eax
1004d307:	pop    ecx
1004d308:	pop    ecx
1004d309:	mov    ds:0x100834b0,eax
1004d30e:	jne    0x1004d315
1004d310:	push   0x1a
1004d312:	pop    eax
1004d313:	pop    esi
1004d314:	ret    
1004d315:	xor    edx,edx
1004d317:	mov    ecx,0x10080ac0
1004d31c:	jmp    0x1004d323
1004d31e:	mov    eax,ds:0x100834b0
1004d323:	mov    DWORD PTR [edx+eax*1],ecx
1004d326:	add    ecx,0x20
1004d329:	add    edx,0x4
1004d32c:	cmp    ecx,0x10080d40
1004d332:	jl     0x1004d31e
1004d334:	push   0xfffffffe
1004d336:	pop    esi
1004d337:	xor    edx,edx
1004d339:	mov    ecx,0x10080ad0
1004d33e:	push   edi
1004d33f:	mov    eax,edx
1004d341:	sar    eax,0x5
1004d344:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1004d34b:	mov    edi,edx
1004d34d:	and    edi,0x1f
1004d350:	shl    edi,0x6
1004d353:	mov    eax,DWORD PTR [edi+eax*1]
1004d356:	cmp    eax,0xffffffff
1004d359:	je     0x1004d363
1004d35b:	cmp    eax,esi
1004d35d:	je     0x1004d363
1004d35f:	test   eax,eax
1004d361:	jne    0x1004d365
1004d363:	mov    DWORD PTR [ecx],esi
1004d365:	add    ecx,0x20
1004d368:	inc    edx
1004d369:	cmp    ecx,0x10080b30
1004d36f:	jl     0x1004d33f
1004d371:	pop    edi
1004d372:	xor    eax,eax
1004d374:	pop    esi
1004d375:	ret    
1004d376:	call   0x10050215
1004d37b:	cmp    BYTE PTR ds:0x10081b58,0x0
1004d382:	je     0x1004d389
1004d384:	call   0x1004fff8
1004d389:	push   DWORD PTR ds:0x100834b0
1004d38f:	call   0x100437dc
1004d394:	pop    ecx
1004d395:	ret    
1004d396:	push   esi
1004d397:	mov    esi,DWORD PTR [esp+0x8]
1004d39b:	mov    eax,0x10080ac0
1004d3a0:	cmp    esi,eax
1004d3a2:	jb     0x1004d3c6
1004d3a4:	cmp    esi,0x10080d20
1004d3aa:	ja     0x1004d3c6
1004d3ac:	mov    ecx,esi
1004d3ae:	sub    ecx,eax
1004d3b0:	sar    ecx,0x5
1004d3b3:	add    ecx,0x10
1004d3b6:	push   ecx
1004d3b7:	call   0x10047e0e
1004d3bc:	or     DWORD PTR [esi+0xc],0x8000
1004d3c3:	pop    ecx
1004d3c4:	pop    esi
1004d3c5:	ret    
1004d3c6:	add    esi,0x20
1004d3c9:	push   esi
1004d3ca:	call   DWORD PTR ds:0x100670f8
1004d3d0:	pop    esi
1004d3d1:	ret    
1004d3d2:	mov    eax,DWORD PTR [esp+0x4]
1004d3d6:	cmp    eax,0x14
1004d3d9:	jge    0x1004d3f1
1004d3db:	add    eax,0x10
1004d3de:	push   eax
1004d3df:	call   0x10047e0e
1004d3e4:	mov    eax,DWORD PTR [esp+0xc]
1004d3e8:	or     DWORD PTR [eax+0xc],0x8000
1004d3ef:	pop    ecx
1004d3f0:	ret    
1004d3f1:	mov    eax,DWORD PTR [esp+0x8]
1004d3f5:	add    eax,0x20
1004d3f8:	push   eax
1004d3f9:	call   DWORD PTR ds:0x100670f8
1004d3ff:	ret    
1004d400:	mov    eax,DWORD PTR [esp+0x4]
1004d404:	mov    ecx,0x10080ac0
1004d409:	cmp    eax,ecx
1004d40b:	jb     0x1004d42b
1004d40d:	cmp    eax,0x10080d20
1004d412:	ja     0x1004d42b
1004d414:	and    DWORD PTR [eax+0xc],0xffff7fff
1004d41b:	sub    eax,ecx
1004d41d:	sar    eax,0x5
1004d420:	add    eax,0x10
1004d423:	push   eax
1004d424:	call   0x10047d36
1004d429:	pop    ecx
1004d42a:	ret    
1004d42b:	add    eax,0x20
1004d42e:	push   eax
1004d42f:	call   DWORD PTR ds:0x100670fc
1004d435:	ret    
1004d436:	mov    ecx,DWORD PTR [esp+0x4]
1004d43a:	cmp    ecx,0x14
1004d43d:	mov    eax,DWORD PTR [esp+0x8]
1004d441:	jge    0x1004d455
1004d443:	and    DWORD PTR [eax+0xc],0xffff7fff
1004d44a:	add    ecx,0x10
1004d44d:	push   ecx
1004d44e:	call   0x10047d36
1004d453:	pop    ecx
1004d454:	ret    
1004d455:	add    eax,0x20
1004d458:	push   eax
1004d459:	call   DWORD PTR ds:0x100670fc
1004d45f:	ret    
1004d460:	mov    eax,DWORD PTR [esp+0x4]
1004d464:	push   esi
1004d465:	xor    esi,esi
1004d467:	cmp    eax,esi
1004d469:	jne    0x1004d488
1004d46b:	call   0x10046c41
1004d470:	push   esi
1004d471:	push   esi
1004d472:	push   esi
1004d473:	push   esi
1004d474:	push   esi
1004d475:	mov    DWORD PTR [eax],0x16
1004d47b:	call   0x100435e1
1004d480:	add    esp,0x14
1004d483:	or     eax,0xffffffff
1004d486:	pop    esi
1004d487:	ret    
1004d488:	mov    eax,DWORD PTR [eax+0x10]
1004d48b:	pop    esi
1004d48c:	ret    
1004d48d:	push   ebp
1004d48e:	mov    ebp,esp
1004d490:	sub    esp,0x10
1004d493:	mov    eax,ds:0x100801ac
1004d498:	xor    eax,ebp
1004d49a:	mov    DWORD PTR [ebp-0x4],eax
1004d49d:	push   ebx
1004d49e:	push   esi
1004d49f:	mov    esi,DWORD PTR [ebp+0xc]
1004d4a2:	test   BYTE PTR [esi+0xc],0x40
1004d4a6:	push   edi
1004d4a7:	jne    0x1004d63c
1004d4ad:	push   esi
1004d4ae:	call   0x1004d460
1004d4b3:	cmp    eax,0xffffffff
1004d4b6:	pop    ecx
1004d4b7:	mov    edi,0x100809d0
1004d4bc:	je     0x1004d4ec
1004d4be:	push   esi
1004d4bf:	call   0x1004d460
1004d4c4:	cmp    eax,0xfffffffe
1004d4c7:	pop    ecx
1004d4c8:	je     0x1004d4ec
1004d4ca:	push   esi
1004d4cb:	call   0x1004d460
1004d4d0:	sar    eax,0x5
1004d4d3:	push   esi
1004d4d4:	lea    ebx,[eax*4+0x100844e0]
1004d4db:	call   0x1004d460
1004d4e0:	and    eax,0x1f
1004d4e3:	pop    ecx
1004d4e4:	shl    eax,0x6
1004d4e7:	add    eax,DWORD PTR [ebx]
1004d4e9:	pop    ecx
1004d4ea:	jmp    0x1004d4ee
1004d4ec:	mov    eax,edi
1004d4ee:	mov    al,BYTE PTR [eax+0x24]
1004d4f1:	and    al,0x7f
1004d4f3:	cmp    al,0x2
1004d4f5:	je     0x1004d63c
1004d4fb:	push   esi
1004d4fc:	call   0x1004d460
1004d501:	cmp    eax,0xffffffff
1004d504:	pop    ecx
1004d505:	je     0x1004d535
1004d507:	push   esi
1004d508:	call   0x1004d460
1004d50d:	cmp    eax,0xfffffffe
1004d510:	pop    ecx
1004d511:	je     0x1004d535
1004d513:	push   esi
1004d514:	call   0x1004d460
1004d519:	sar    eax,0x5
1004d51c:	push   esi
1004d51d:	lea    ebx,[eax*4+0x100844e0]
1004d524:	call   0x1004d460
1004d529:	and    eax,0x1f
1004d52c:	pop    ecx
1004d52d:	shl    eax,0x6
1004d530:	add    eax,DWORD PTR [ebx]
1004d532:	pop    ecx
1004d533:	jmp    0x1004d537
1004d535:	mov    eax,edi
1004d537:	mov    al,BYTE PTR [eax+0x24]
1004d53a:	and    al,0x7f
1004d53c:	cmp    al,0x1
1004d53e:	jne    0x1004d59c
1004d540:	dec    DWORD PTR [esi+0x4]
1004d543:	mov    ebx,DWORD PTR [ebp+0x8]
1004d546:	js     0x1004d556
1004d548:	mov    eax,DWORD PTR [esi]
1004d54a:	mov    BYTE PTR [eax],bl
1004d54c:	mov    ecx,DWORD PTR [esi]
1004d54e:	movzx  eax,BYTE PTR [ecx]
1004d551:	inc    ecx
1004d552:	mov    DWORD PTR [esi],ecx
1004d554:	jmp    0x1004d562
1004d556:	movsx  eax,bl
1004d559:	push   esi
1004d55a:	push   eax
1004d55b:	call   0x10048a67
1004d560:	pop    ecx
1004d561:	pop    ecx
1004d562:	cmp    eax,0xffffffff
1004d565:	jne    0x1004d570
1004d567:	or     ax,0xffff
1004d56b:	jmp    0x1004d65c
1004d570:	dec    DWORD PTR [esi+0x4]
1004d573:	js     0x1004d583
1004d575:	mov    eax,DWORD PTR [esi]
1004d577:	mov    BYTE PTR [eax],bh
1004d579:	mov    ecx,DWORD PTR [esi]
1004d57b:	movzx  eax,BYTE PTR [ecx]
1004d57e:	inc    ecx
1004d57f:	mov    DWORD PTR [esi],ecx
1004d581:	jmp    0x1004d58f
1004d583:	movsx  eax,bh
1004d586:	push   esi
1004d587:	push   eax
1004d588:	call   0x10048a67
1004d58d:	pop    ecx
1004d58e:	pop    ecx
1004d58f:	cmp    eax,0xffffffff
1004d592:	je     0x1004d567
1004d594:	mov    ax,bx
1004d597:	jmp    0x1004d65c
1004d59c:	push   esi
1004d59d:	call   0x1004d460
1004d5a2:	cmp    eax,0xffffffff
1004d5a5:	pop    ecx
1004d5a6:	je     0x1004d5d6
1004d5a8:	push   esi
1004d5a9:	call   0x1004d460
1004d5ae:	cmp    eax,0xfffffffe
1004d5b1:	pop    ecx
1004d5b2:	je     0x1004d5d6
1004d5b4:	push   esi
1004d5b5:	call   0x1004d460
1004d5ba:	sar    eax,0x5
1004d5bd:	push   esi
1004d5be:	lea    ebx,[eax*4+0x100844e0]
1004d5c5:	call   0x1004d460
1004d5ca:	and    eax,0x1f
1004d5cd:	pop    ecx
1004d5ce:	shl    eax,0x6
1004d5d1:	add    eax,DWORD PTR [ebx]
1004d5d3:	pop    ecx
1004d5d4:	jmp    0x1004d5d8
1004d5d6:	mov    eax,edi
1004d5d8:	test   BYTE PTR [eax+0x4],0x80
1004d5dc:	je     0x1004d63c
1004d5de:	push   DWORD PTR [ebp+0x8]
1004d5e1:	lea    eax,[ebp-0xc]
1004d5e4:	push   0x5
1004d5e6:	push   eax
1004d5e7:	lea    eax,[ebp-0x10]
1004d5ea:	push   eax
1004d5eb:	call   0x100504ed
1004d5f0:	add    esp,0x10
1004d5f3:	test   eax,eax
1004d5f5:	jne    0x1004d567
1004d5fb:	xor    ebx,ebx
1004d5fd:	cmp    DWORD PTR [ebp-0x10],ebx
1004d600:	jle    0x1004d636
1004d602:	dec    DWORD PTR [esi+0x4]
1004d605:	js     0x1004d619
1004d607:	mov    eax,DWORD PTR [esi]
1004d609:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1004d60d:	mov    BYTE PTR [eax],cl
1004d60f:	mov    ecx,DWORD PTR [esi]
1004d611:	movzx  eax,BYTE PTR [ecx]
1004d614:	inc    ecx
1004d615:	mov    DWORD PTR [esi],ecx
1004d617:	jmp    0x1004d627
1004d619:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1004d61e:	push   esi
1004d61f:	push   eax
1004d620:	call   0x10048a67
1004d625:	pop    ecx
1004d626:	pop    ecx
1004d627:	cmp    eax,0xffffffff
1004d62a:	je     0x1004d567
1004d630:	inc    ebx
1004d631:	cmp    ebx,DWORD PTR [ebp-0x10]
1004d634:	jl     0x1004d602
1004d636:	mov    ax,WORD PTR [ebp+0x8]
1004d63a:	jmp    0x1004d65c
1004d63c:	add    DWORD PTR [esi+0x4],0xfffffffe
1004d640:	js     0x1004d64f
1004d642:	mov    ecx,DWORD PTR [esi]
1004d644:	mov    eax,DWORD PTR [ebp+0x8]
1004d647:	mov    WORD PTR [ecx],ax
1004d64a:	add    DWORD PTR [esi],0x2
1004d64d:	jmp    0x1004d65c
1004d64f:	movzx  eax,WORD PTR [ebp+0x8]
1004d653:	push   esi
1004d654:	push   eax
1004d655:	call   0x1005021e
1004d65a:	pop    ecx
1004d65b:	pop    ecx
1004d65c:	mov    ecx,DWORD PTR [ebp-0x4]
1004d65f:	pop    edi
1004d660:	pop    esi
1004d661:	xor    ecx,ebp
1004d663:	pop    ebx
1004d664:	call   0x10043615
1004d669:	leave  
1004d66a:	ret    
1004d66b:	test   BYTE PTR [ecx+0xc],0x40
1004d66f:	je     0x1004d677
1004d671:	cmp    DWORD PTR [ecx+0x8],0x0
1004d675:	je     0x1004d69b
1004d677:	dec    DWORD PTR [ecx+0x4]
1004d67a:	js     0x1004d687
1004d67c:	mov    edx,DWORD PTR [ecx]
1004d67e:	mov    BYTE PTR [edx],al
1004d680:	inc    DWORD PTR [ecx]
1004d682:	movzx  eax,al
1004d685:	jmp    0x1004d693
1004d687:	movsx  eax,al
1004d68a:	push   ecx
1004d68b:	push   eax
1004d68c:	call   0x10048a67
1004d691:	pop    ecx
1004d692:	pop    ecx
1004d693:	cmp    eax,0xffffffff
1004d696:	jne    0x1004d69b
1004d698:	or     DWORD PTR [esi],eax
1004d69a:	ret    
1004d69b:	inc    DWORD PTR [esi]
1004d69d:	ret    
1004d69e:	push   ebp
1004d69f:	mov    ebp,esp
1004d6a1:	push   esi
1004d6a2:	mov    esi,eax
1004d6a4:	jmp    0x1004d6b9
1004d6a6:	mov    ecx,DWORD PTR [ebp+0x10]
1004d6a9:	mov    al,BYTE PTR [ebp+0x8]
1004d6ac:	dec    DWORD PTR [ebp+0xc]
1004d6af:	call   0x1004d66b
1004d6b4:	cmp    DWORD PTR [esi],0xffffffff
1004d6b7:	je     0x1004d6bf
1004d6b9:	cmp    DWORD PTR [ebp+0xc],0x0
1004d6bd:	jg     0x1004d6a6
1004d6bf:	pop    esi
1004d6c0:	pop    ebp
1004d6c1:	ret    
1004d6c2:	test   BYTE PTR [edi+0xc],0x40
1004d6c6:	push   ebx
1004d6c7:	push   esi
1004d6c8:	mov    esi,eax
1004d6ca:	mov    ebx,ecx
1004d6cc:	je     0x1004d702
1004d6ce:	cmp    DWORD PTR [edi+0x8],0x0
1004d6d2:	jne    0x1004d702
1004d6d4:	mov    eax,DWORD PTR [esp+0xc]
1004d6d8:	add    DWORD PTR [esi],eax
1004d6da:	jmp    0x1004d709
1004d6dc:	mov    al,BYTE PTR [ebx]
1004d6de:	dec    DWORD PTR [esp+0xc]
1004d6e2:	mov    ecx,edi
1004d6e4:	call   0x1004d66b
1004d6e9:	inc    ebx
1004d6ea:	cmp    DWORD PTR [esi],0xffffffff
1004d6ed:	jne    0x1004d702
1004d6ef:	call   0x10046c41
1004d6f4:	cmp    DWORD PTR [eax],0x2a
1004d6f7:	jne    0x1004d709
1004d6f9:	mov    ecx,edi
1004d6fb:	mov    al,0x3f
1004d6fd:	call   0x1004d66b
1004d702:	cmp    DWORD PTR [esp+0xc],0x0
1004d707:	jg     0x1004d6dc
1004d709:	pop    esi
1004d70a:	pop    ebx
1004d70b:	ret    
1004d70c:	push   ebp
1004d70d:	lea    ebp,[esp-0x1f8]
1004d714:	sub    esp,0x278
1004d71a:	mov    eax,ds:0x100801ac
1004d71f:	xor    eax,ebp
1004d721:	mov    DWORD PTR [ebp+0x1f4],eax
1004d727:	mov    eax,DWORD PTR [ebp+0x200]
1004d72d:	push   ebx
1004d72e:	mov    ebx,DWORD PTR [ebp+0x204]
1004d734:	push   esi
1004d735:	xor    esi,esi
1004d737:	push   edi
1004d738:	mov    edi,DWORD PTR [ebp+0x20c]
1004d73e:	push   DWORD PTR [ebp+0x208]
1004d744:	lea    ecx,[ebp-0x64]
1004d747:	mov    DWORD PTR [ebp-0x30],eax
1004d74a:	mov    DWORD PTR [ebp-0x2c],edi
1004d74d:	mov    DWORD PTR [ebp-0x4c],esi
1004d750:	mov    DWORD PTR [ebp-0x18],esi
1004d753:	mov    DWORD PTR [ebp-0x40],esi
1004d756:	mov    DWORD PTR [ebp-0x20],esi
1004d759:	mov    DWORD PTR [ebp-0x3c],esi
1004d75c:	mov    DWORD PTR [ebp-0x50],esi
1004d75f:	mov    DWORD PTR [ebp-0x44],esi
1004d762:	call   0x100456a5
1004d767:	cmp    DWORD PTR [ebp-0x30],esi
1004d76a:	jne    0x1004d799
1004d76c:	call   0x10046c41
1004d771:	push   esi
1004d772:	push   esi
1004d773:	push   esi
1004d774:	push   esi
1004d775:	mov    DWORD PTR [eax],0x16
1004d77b:	push   esi
1004d77c:	call   0x100435e1
1004d781:	add    esp,0x14
1004d784:	cmp    BYTE PTR [ebp-0x58],0x0
1004d788:	je     0x1004d791
1004d78a:	mov    eax,DWORD PTR [ebp-0x5c]
1004d78d:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d791:	or     eax,0xffffffff
1004d794:	jmp    0x1004e068
1004d799:	mov    eax,DWORD PTR [ebp-0x30]
1004d79c:	test   BYTE PTR [eax+0xc],0x40
1004d7a0:	jne    0x1004d84a
1004d7a6:	push   eax
1004d7a7:	call   0x1004d460
1004d7ac:	cmp    eax,0xffffffff
1004d7af:	pop    ecx
1004d7b0:	je     0x1004d7e8
1004d7b2:	push   DWORD PTR [ebp-0x30]
1004d7b5:	call   0x1004d460
1004d7ba:	cmp    eax,0xfffffffe
1004d7bd:	pop    ecx
1004d7be:	je     0x1004d7e8
1004d7c0:	push   DWORD PTR [ebp-0x30]
1004d7c3:	call   0x1004d460
1004d7c8:	push   DWORD PTR [ebp-0x30]
1004d7cb:	sar    eax,0x5
1004d7ce:	lea    esi,[eax*4+0x100844e0]
1004d7d5:	call   0x1004d460
1004d7da:	and    eax,0x1f
1004d7dd:	shl    eax,0x6
1004d7e0:	add    eax,DWORD PTR [esi]
1004d7e2:	pop    ecx
1004d7e3:	pop    ecx
1004d7e4:	xor    esi,esi
1004d7e6:	jmp    0x1004d7ed
1004d7e8:	mov    eax,0x100809d0
1004d7ed:	test   BYTE PTR [eax+0x24],0x7f
1004d7f1:	jne    0x1004d76c
1004d7f7:	push   DWORD PTR [ebp-0x30]
1004d7fa:	call   0x1004d460
1004d7ff:	cmp    eax,0xffffffff
1004d802:	pop    ecx
1004d803:	je     0x1004d83b
1004d805:	push   DWORD PTR [ebp-0x30]
1004d808:	call   0x1004d460
1004d80d:	cmp    eax,0xfffffffe
1004d810:	pop    ecx
1004d811:	je     0x1004d83b
1004d813:	push   DWORD PTR [ebp-0x30]
1004d816:	call   0x1004d460
1004d81b:	push   DWORD PTR [ebp-0x30]
1004d81e:	sar    eax,0x5
1004d821:	lea    esi,[eax*4+0x100844e0]
1004d828:	call   0x1004d460
1004d82d:	and    eax,0x1f
1004d830:	shl    eax,0x6
1004d833:	add    eax,DWORD PTR [esi]
1004d835:	pop    ecx
1004d836:	pop    ecx
1004d837:	xor    esi,esi
1004d839:	jmp    0x1004d840
1004d83b:	mov    eax,0x100809d0
1004d840:	test   BYTE PTR [eax+0x24],0x80
1004d844:	jne    0x1004d76c
1004d84a:	cmp    ebx,esi
1004d84c:	je     0x1004d76c
1004d852:	mov    dl,BYTE PTR [ebx]
1004d854:	xor    ecx,ecx
1004d856:	test   dl,dl
1004d858:	mov    DWORD PTR [ebp-0x34],esi
1004d85b:	mov    DWORD PTR [ebp-0x28],esi
1004d85e:	mov    DWORD PTR [ebp-0x54],esi
1004d861:	mov    BYTE PTR [ebp-0x19],dl
1004d864:	je     0x1004e058
1004d86a:	inc    ebx
1004d86b:	cmp    DWORD PTR [ebp-0x34],0x0
1004d86f:	mov    DWORD PTR [ebp-0x48],ebx
1004d872:	jl     0x1004e058
1004d878:	mov    al,dl
1004d87a:	sub    al,0x20
1004d87c:	cmp    al,0x58
1004d87e:	ja     0x1004d891
1004d880:	movsx  eax,dl
1004d883:	movzx  eax,BYTE PTR [eax+0x10068408]
1004d88a:	and    eax,0xf
1004d88d:	xor    esi,esi
1004d88f:	jmp    0x1004d895
1004d891:	xor    esi,esi
1004d893:	xor    eax,eax
1004d895:	movsx  eax,BYTE PTR [ecx+eax*8+0x10068428]
1004d89d:	push   0x7
1004d89f:	sar    eax,0x4
1004d8a2:	pop    ecx
1004d8a3:	cmp    eax,ecx
1004d8a5:	mov    DWORD PTR [ebp-0x74],eax
1004d8a8:	ja     0x1004e028
1004d8ae:	jmp    DWORD PTR [eax*4+0x1004e080]
1004d8b5:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d8b9:	mov    DWORD PTR [ebp-0x78],esi
1004d8bc:	mov    DWORD PTR [ebp-0x50],esi
1004d8bf:	mov    DWORD PTR [ebp-0x40],esi
1004d8c2:	mov    DWORD PTR [ebp-0x3c],esi
1004d8c5:	mov    DWORD PTR [ebp-0x18],esi
1004d8c8:	mov    DWORD PTR [ebp-0x44],esi
1004d8cb:	jmp    0x1004e028
1004d8d0:	movsx  eax,dl
1004d8d3:	sub    eax,0x20
1004d8d6:	je     0x1004d916
1004d8d8:	sub    eax,0x3
1004d8db:	je     0x1004d90a
1004d8dd:	sub    eax,0x8
1004d8e0:	je     0x1004d901
1004d8e2:	dec    eax
1004d8e3:	dec    eax
1004d8e4:	je     0x1004d8f8
1004d8e6:	sub    eax,0x3
1004d8e9:	jne    0x1004e028
1004d8ef:	or     DWORD PTR [ebp-0x18],0x8
1004d8f3:	jmp    0x1004e028
1004d8f8:	or     DWORD PTR [ebp-0x18],0x4
1004d8fc:	jmp    0x1004e028
1004d901:	or     DWORD PTR [ebp-0x18],0x1
1004d905:	jmp    0x1004e028
1004d90a:	or     DWORD PTR [ebp-0x18],0x80
1004d911:	jmp    0x1004e028
1004d916:	or     DWORD PTR [ebp-0x18],0x2
1004d91a:	jmp    0x1004e028
1004d91f:	cmp    dl,0x2a
1004d922:	jne    0x1004d944
1004d924:	add    edi,0x4
1004d927:	mov    DWORD PTR [ebp-0x2c],edi
1004d92a:	mov    edi,DWORD PTR [edi-0x4]
1004d92d:	cmp    edi,esi
1004d92f:	mov    DWORD PTR [ebp-0x40],edi
1004d932:	jge    0x1004e028
1004d938:	or     DWORD PTR [ebp-0x18],0x4
1004d93c:	neg    DWORD PTR [ebp-0x40]
1004d93f:	jmp    0x1004e028
1004d944:	mov    eax,DWORD PTR [ebp-0x40]
1004d947:	imul   eax,eax,0xa
1004d94a:	movsx  ecx,dl
1004d94d:	lea    eax,[eax+ecx*1-0x30]
1004d951:	mov    DWORD PTR [ebp-0x40],eax
1004d954:	jmp    0x1004e028
1004d959:	mov    DWORD PTR [ebp-0x20],esi
1004d95c:	jmp    0x1004e028
1004d961:	cmp    dl,0x2a
1004d964:	jne    0x1004d983
1004d966:	add    edi,0x4
1004d969:	mov    DWORD PTR [ebp-0x2c],edi
1004d96c:	mov    edi,DWORD PTR [edi-0x4]
1004d96f:	cmp    edi,esi
1004d971:	mov    DWORD PTR [ebp-0x20],edi
1004d974:	jge    0x1004e028
1004d97a:	or     DWORD PTR [ebp-0x20],0xffffffff
1004d97e:	jmp    0x1004e028
1004d983:	mov    eax,DWORD PTR [ebp-0x20]
1004d986:	imul   eax,eax,0xa
1004d989:	movsx  ecx,dl
1004d98c:	lea    eax,[eax+ecx*1-0x30]
1004d990:	mov    DWORD PTR [ebp-0x20],eax
1004d993:	jmp    0x1004e028
1004d998:	cmp    dl,0x49
1004d99b:	je     0x1004d9e3
1004d99d:	cmp    dl,0x68
1004d9a0:	je     0x1004d9da
1004d9a2:	cmp    dl,0x6c
1004d9a5:	je     0x1004d9bc
1004d9a7:	cmp    dl,0x77
1004d9aa:	jne    0x1004e028
1004d9b0:	or     DWORD PTR [ebp-0x18],0x800
1004d9b7:	jmp    0x1004e028
1004d9bc:	cmp    BYTE PTR [ebx],0x6c
1004d9bf:	jne    0x1004d9d1
1004d9c1:	inc    ebx
1004d9c2:	or     DWORD PTR [ebp-0x18],0x1000
1004d9c9:	mov    DWORD PTR [ebp-0x48],ebx
1004d9cc:	jmp    0x1004e028
1004d9d1:	or     DWORD PTR [ebp-0x18],0x10
1004d9d5:	jmp    0x1004e028
1004d9da:	or     DWORD PTR [ebp-0x18],0x20
1004d9de:	jmp    0x1004e028
1004d9e3:	mov    al,BYTE PTR [ebx]
1004d9e5:	cmp    al,0x36
1004d9e7:	jne    0x1004da00
1004d9e9:	cmp    BYTE PTR [ebx+0x1],0x34
1004d9ed:	jne    0x1004da00
1004d9ef:	inc    ebx
1004d9f0:	inc    ebx
1004d9f1:	or     DWORD PTR [ebp-0x18],0x8000
1004d9f8:	mov    DWORD PTR [ebp-0x48],ebx
1004d9fb:	jmp    0x1004e028
1004da00:	cmp    al,0x33
1004da02:	jne    0x1004da1b
1004da04:	cmp    BYTE PTR [ebx+0x1],0x32
1004da08:	jne    0x1004da1b
1004da0a:	inc    ebx
1004da0b:	inc    ebx
1004da0c:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004da13:	mov    DWORD PTR [ebp-0x48],ebx
1004da16:	jmp    0x1004e028
1004da1b:	cmp    al,0x64
1004da1d:	je     0x1004e028
1004da23:	cmp    al,0x69
1004da25:	je     0x1004e028
1004da2b:	cmp    al,0x6f
1004da2d:	je     0x1004e028
1004da33:	cmp    al,0x75
1004da35:	je     0x1004e028
1004da3b:	cmp    al,0x78
1004da3d:	je     0x1004e028
1004da43:	cmp    al,0x58
1004da45:	je     0x1004e028
1004da4b:	mov    DWORD PTR [ebp-0x74],esi
1004da4e:	lea    eax,[ebp-0x64]
1004da51:	push   eax
1004da52:	movzx  eax,dl
1004da55:	push   eax
1004da56:	mov    DWORD PTR [ebp-0x44],esi
1004da59:	call   0x1004b32b
1004da5e:	pop    ecx
1004da5f:	test   eax,eax
1004da61:	mov    al,BYTE PTR [ebp-0x19]
1004da64:	pop    ecx
1004da65:	je     0x1004da80
1004da67:	mov    ecx,DWORD PTR [ebp-0x30]
1004da6a:	lea    esi,[ebp-0x34]
1004da6d:	call   0x1004d66b
1004da72:	mov    al,BYTE PTR [ebx]
1004da74:	inc    ebx
1004da75:	test   al,al
1004da77:	mov    DWORD PTR [ebp-0x48],ebx
1004da7a:	je     0x1004e041
1004da80:	mov    ecx,DWORD PTR [ebp-0x30]
1004da83:	lea    esi,[ebp-0x34]
1004da86:	call   0x1004d66b
1004da8b:	jmp    0x1004e028
1004da90:	movsx  eax,dl
1004da93:	cmp    eax,0x64
1004da96:	jg     0x1004dc0e
1004da9c:	je     0x1004dc8d
1004daa2:	cmp    eax,0x53
1004daa5:	jg     0x1004db56
1004daab:	je     0x1004db07
1004daad:	sub    eax,0x41
1004dab0:	je     0x1004dac2
1004dab2:	dec    eax
1004dab3:	dec    eax
1004dab4:	je     0x1004daf6
1004dab6:	dec    eax
1004dab7:	dec    eax
1004dab8:	je     0x1004dac2
1004daba:	dec    eax
1004dabb:	dec    eax
1004dabc:	jne    0x1004df10
1004dac2:	add    dl,0x20
1004dac5:	mov    DWORD PTR [ebp-0x78],0x1
1004dacc:	mov    BYTE PTR [ebp-0x19],dl
1004dacf:	or     DWORD PTR [ebp-0x18],0x40
1004dad3:	cmp    DWORD PTR [ebp-0x20],esi
1004dad6:	lea    ebx,[ebp-0x14]
1004dad9:	mov    eax,0x200
1004dade:	mov    DWORD PTR [ebp-0x24],ebx
1004dae1:	mov    DWORD PTR [ebp-0x68],eax
1004dae4:	jge    0x1004dcb1
1004daea:	mov    DWORD PTR [ebp-0x20],0x6
1004daf1:	jmp    0x1004dcff
1004daf6:	test   WORD PTR [ebp-0x18],0x830
1004dafc:	jne    0x1004db73
1004dafe:	or     DWORD PTR [ebp-0x18],0x800
1004db05:	jmp    0x1004db73
1004db07:	test   WORD PTR [ebp-0x18],0x830
1004db0d:	jne    0x1004db16
1004db0f:	or     DWORD PTR [ebp-0x18],0x800
1004db16:	mov    ecx,DWORD PTR [ebp-0x20]
1004db19:	cmp    ecx,0xffffffff
1004db1c:	jne    0x1004db23
1004db1e:	mov    ecx,0x7fffffff
1004db23:	add    edi,0x4
1004db26:	test   WORD PTR [ebp-0x18],0x810
1004db2c:	mov    DWORD PTR [ebp-0x2c],edi
1004db2f:	mov    edi,DWORD PTR [edi-0x4]
1004db32:	mov    DWORD PTR [ebp-0x24],edi
1004db35:	je     0x1004deee
1004db3b:	cmp    edi,esi
1004db3d:	jne    0x1004db47
1004db3f:	mov    eax,ds:0x10080d44
1004db44:	mov    DWORD PTR [ebp-0x24],eax
1004db47:	mov    eax,DWORD PTR [ebp-0x24]
1004db4a:	mov    DWORD PTR [ebp-0x44],0x1
1004db51:	jmp    0x1004dee3
1004db56:	sub    eax,0x58
1004db59:	je     0x1004dd98
1004db5f:	dec    eax
1004db60:	dec    eax
1004db61:	je     0x1004dbc0
1004db63:	sub    eax,ecx
1004db65:	je     0x1004dacf
1004db6b:	dec    eax
1004db6c:	dec    eax
1004db6d:	jne    0x1004df10
1004db73:	add    edi,0x4
1004db76:	test   WORD PTR [ebp-0x18],0x810
1004db7c:	mov    DWORD PTR [ebp-0x2c],edi
1004db7f:	je     0x1004dba8
1004db81:	movzx  eax,WORD PTR [edi-0x4]
1004db85:	push   eax
1004db86:	push   0x200
1004db8b:	lea    eax,[ebp-0x14]
1004db8e:	push   eax
1004db8f:	lea    eax,[ebp-0x28]
1004db92:	push   eax
1004db93:	call   0x100504ed
1004db98:	add    esp,0x10
1004db9b:	test   eax,eax
1004db9d:	je     0x1004dbb5
1004db9f:	mov    DWORD PTR [ebp-0x50],0x1
1004dba6:	jmp    0x1004dbb5
1004dba8:	mov    al,BYTE PTR [edi-0x4]
1004dbab:	mov    BYTE PTR [ebp-0x14],al
1004dbae:	mov    DWORD PTR [ebp-0x28],0x1
1004dbb5:	lea    eax,[ebp-0x14]
1004dbb8:	mov    DWORD PTR [ebp-0x24],eax
1004dbbb:	jmp    0x1004df10
1004dbc0:	mov    eax,DWORD PTR [edi]
1004dbc2:	add    edi,0x4
1004dbc5:	cmp    eax,esi
1004dbc7:	mov    DWORD PTR [ebp-0x2c],edi
1004dbca:	je     0x1004dbfa
1004dbcc:	mov    ecx,DWORD PTR [eax+0x4]
1004dbcf:	cmp    ecx,esi
1004dbd1:	je     0x1004dbfa
1004dbd3:	test   WORD PTR [ebp-0x18],0x800
1004dbd9:	movsx  eax,WORD PTR [eax]
1004dbdc:	mov    DWORD PTR [ebp-0x24],ecx
1004dbdf:	je     0x1004dbf2
1004dbe1:	cdq    
1004dbe2:	sub    eax,edx
1004dbe4:	sar    eax,1
1004dbe6:	mov    DWORD PTR [ebp-0x44],0x1
1004dbed:	jmp    0x1004df0d
1004dbf2:	mov    DWORD PTR [ebp-0x44],esi
1004dbf5:	jmp    0x1004df0d
1004dbfa:	mov    eax,ds:0x10080d40
1004dbff:	mov    DWORD PTR [ebp-0x24],eax
1004dc02:	push   eax
1004dc03:	call   0x10043450
1004dc08:	pop    ecx
1004dc09:	jmp    0x1004df0d
1004dc0e:	cmp    eax,0x70
1004dc11:	jg     0x1004dd9d
1004dc17:	je     0x1004dd91
1004dc1d:	cmp    eax,0x65
1004dc20:	jl     0x1004df10
1004dc26:	cmp    eax,0x67
1004dc29:	jle    0x1004dacf
1004dc2f:	cmp    eax,0x69
1004dc32:	je     0x1004dc8d
1004dc34:	cmp    eax,0x6e
1004dc37:	je     0x1004dc58
1004dc39:	cmp    eax,0x6f
1004dc3c:	jne    0x1004df10
1004dc42:	test   BYTE PTR [ebp-0x18],0x80
1004dc46:	mov    DWORD PTR [ebp-0x28],0x8
1004dc4d:	je     0x1004dc98
1004dc4f:	or     DWORD PTR [ebp-0x18],0x200
1004dc56:	jmp    0x1004dc98
1004dc58:	mov    esi,DWORD PTR [edi]
1004dc5a:	add    edi,0x4
1004dc5d:	mov    DWORD PTR [ebp-0x2c],edi
1004dc60:	call   0x1004e0a0
1004dc65:	test   eax,eax
1004dc67:	je     0x1004e041
1004dc6d:	test   BYTE PTR [ebp-0x18],0x20
1004dc71:	je     0x1004dc7c
1004dc73:	mov    ax,WORD PTR [ebp-0x34]
1004dc77:	mov    WORD PTR [esi],ax
1004dc7a:	jmp    0x1004dc81
1004dc7c:	mov    eax,DWORD PTR [ebp-0x34]
1004dc7f:	mov    DWORD PTR [esi],eax
1004dc81:	mov    DWORD PTR [ebp-0x50],0x1
1004dc88:	jmp    0x1004e015
1004dc8d:	or     DWORD PTR [ebp-0x18],0x40
1004dc91:	mov    DWORD PTR [ebp-0x28],0xa
1004dc98:	mov    ecx,DWORD PTR [ebp-0x18]
1004dc9b:	test   cx,cx
1004dc9e:	jns    0x1004dde7
1004dca4:	mov    eax,DWORD PTR [edi]
1004dca6:	mov    edx,DWORD PTR [edi+0x4]
1004dca9:	add    edi,0x8
1004dcac:	jmp    0x1004de1c
1004dcb1:	jne    0x1004dcc1
1004dcb3:	cmp    dl,0x67
1004dcb6:	jne    0x1004dcff
1004dcb8:	mov    DWORD PTR [ebp-0x20],0x1
1004dcbf:	jmp    0x1004dcff
1004dcc1:	cmp    DWORD PTR [ebp-0x20],eax
1004dcc4:	jle    0x1004dcc9
1004dcc6:	mov    DWORD PTR [ebp-0x20],eax
1004dcc9:	cmp    DWORD PTR [ebp-0x20],0xa3
1004dcd0:	jle    0x1004dcff
1004dcd2:	mov    esi,DWORD PTR [ebp-0x20]
1004dcd5:	add    esi,0x15d
1004dcdb:	push   esi
1004dcdc:	call   0x100472aa
1004dce1:	test   eax,eax
1004dce3:	mov    dl,BYTE PTR [ebp-0x19]
1004dce6:	pop    ecx
1004dce7:	mov    DWORD PTR [ebp-0x54],eax
1004dcea:	je     0x1004dcf6
1004dcec:	mov    DWORD PTR [ebp-0x24],eax
1004dcef:	mov    DWORD PTR [ebp-0x68],esi
1004dcf2:	mov    ebx,eax
1004dcf4:	jmp    0x1004dcfd
1004dcf6:	mov    DWORD PTR [ebp-0x20],0xa3
1004dcfd:	xor    esi,esi
1004dcff:	mov    eax,DWORD PTR [edi]
1004dd01:	add    edi,0x8
1004dd04:	mov    DWORD PTR [ebp-0x80],eax
1004dd07:	mov    eax,DWORD PTR [edi-0x4]
1004dd0a:	mov    DWORD PTR [ebp-0x7c],eax
1004dd0d:	lea    eax,[ebp-0x64]
1004dd10:	push   eax
1004dd11:	push   DWORD PTR [ebp-0x78]
1004dd14:	movsx  eax,dl
1004dd17:	push   DWORD PTR [ebp-0x20]
1004dd1a:	mov    DWORD PTR [ebp-0x2c],edi
1004dd1d:	push   eax
1004dd1e:	push   DWORD PTR [ebp-0x68]
1004dd21:	lea    eax,[ebp-0x80]
1004dd24:	push   ebx
1004dd25:	push   eax
1004dd26:	push   DWORD PTR ds:0x10080ab0
1004dd2c:	call   0x10046d68
1004dd31:	pop    ecx
1004dd32:	call   eax
1004dd34:	mov    edi,DWORD PTR [ebp-0x18]
1004dd37:	add    esp,0x1c
1004dd3a:	and    edi,0x80
1004dd40:	je     0x1004dd5c
1004dd42:	cmp    DWORD PTR [ebp-0x20],esi
1004dd45:	jne    0x1004dd5c
1004dd47:	lea    eax,[ebp-0x64]
1004dd4a:	push   eax
1004dd4b:	push   ebx
1004dd4c:	push   DWORD PTR ds:0x10080abc
1004dd52:	call   0x10046d68
1004dd57:	pop    ecx
1004dd58:	call   eax
1004dd5a:	pop    ecx
1004dd5b:	pop    ecx
1004dd5c:	cmp    BYTE PTR [ebp-0x19],0x67
1004dd60:	jne    0x1004dd7b
1004dd62:	cmp    edi,esi
1004dd64:	jne    0x1004dd7b
1004dd66:	lea    eax,[ebp-0x64]
1004dd69:	push   eax
1004dd6a:	push   ebx
1004dd6b:	push   DWORD PTR ds:0x10080ab8
1004dd71:	call   0x10046d68
1004dd76:	pop    ecx
1004dd77:	call   eax
1004dd79:	pop    ecx
1004dd7a:	pop    ecx
1004dd7b:	cmp    BYTE PTR [ebx],0x2d
1004dd7e:	jne    0x1004dd8b
1004dd80:	or     DWORD PTR [ebp-0x18],0x100
1004dd87:	inc    ebx
1004dd88:	mov    DWORD PTR [ebp-0x24],ebx
1004dd8b:	push   ebx
1004dd8c:	jmp    0x1004dc03
1004dd91:	mov    DWORD PTR [ebp-0x20],0x8
1004dd98:	mov    DWORD PTR [ebp-0x4c],ecx
1004dd9b:	jmp    0x1004ddbe
1004dd9d:	sub    eax,0x73
1004dda0:	je     0x1004db16
1004dda6:	dec    eax
1004dda7:	dec    eax
1004dda8:	je     0x1004dc91
1004ddae:	sub    eax,0x3
1004ddb1:	jne    0x1004df10
1004ddb7:	mov    DWORD PTR [ebp-0x4c],0x27
1004ddbe:	test   BYTE PTR [ebp-0x18],0x80
1004ddc2:	mov    DWORD PTR [ebp-0x28],0x10
1004ddc9:	je     0x1004dc98
1004ddcf:	mov    al,BYTE PTR [ebp-0x4c]
1004ddd2:	add    al,0x51
1004ddd4:	mov    BYTE PTR [ebp-0x38],0x30
1004ddd8:	mov    BYTE PTR [ebp-0x37],al
1004dddb:	mov    DWORD PTR [ebp-0x3c],0x2
1004dde2:	jmp    0x1004dc98
1004dde7:	test   cx,0x1000
1004ddec:	jne    0x1004dca4
1004ddf2:	add    edi,0x4
1004ddf5:	test   cl,0x20
1004ddf8:	je     0x1004de0f
1004ddfa:	test   cl,0x40
1004ddfd:	mov    DWORD PTR [ebp-0x2c],edi
1004de00:	je     0x1004de08
1004de02:	movsx  eax,WORD PTR [edi-0x4]
1004de06:	jmp    0x1004de0c
1004de08:	movzx  eax,WORD PTR [edi-0x4]
1004de0c:	cdq    
1004de0d:	jmp    0x1004de1f
1004de0f:	test   cl,0x40
1004de12:	mov    eax,DWORD PTR [edi-0x4]
1004de15:	je     0x1004de1a
1004de17:	cdq    
1004de18:	jmp    0x1004de1c
1004de1a:	xor    edx,edx
1004de1c:	mov    DWORD PTR [ebp-0x2c],edi
1004de1f:	test   cl,0x40
1004de22:	je     0x1004de3c
1004de24:	cmp    edx,esi
1004de26:	jg     0x1004de3c
1004de28:	jl     0x1004de2e
1004de2a:	cmp    eax,esi
1004de2c:	jae    0x1004de3c
1004de2e:	neg    eax
1004de30:	adc    edx,0x0
1004de33:	neg    edx
1004de35:	or     DWORD PTR [ebp-0x18],0x100
1004de3c:	test   WORD PTR [ebp-0x18],0x9000
1004de42:	mov    ebx,edx
1004de44:	mov    edi,eax
1004de46:	jne    0x1004de4a
1004de48:	xor    ebx,ebx
1004de4a:	cmp    DWORD PTR [ebp-0x20],0x0
1004de4e:	jge    0x1004de59
1004de50:	mov    DWORD PTR [ebp-0x20],0x1
1004de57:	jmp    0x1004de6a
1004de59:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004de5d:	mov    eax,0x200
1004de62:	cmp    DWORD PTR [ebp-0x20],eax
1004de65:	jle    0x1004de6a
1004de67:	mov    DWORD PTR [ebp-0x20],eax
1004de6a:	mov    eax,edi
1004de6c:	or     eax,ebx
1004de6e:	jne    0x1004de73
1004de70:	and    DWORD PTR [ebp-0x3c],eax
1004de73:	lea    esi,[ebp+0x1eb]
1004de79:	mov    eax,DWORD PTR [ebp-0x20]
1004de7c:	dec    DWORD PTR [ebp-0x20]
1004de7f:	test   eax,eax
1004de81:	jg     0x1004de89
1004de83:	mov    eax,edi
1004de85:	or     eax,ebx
1004de87:	je     0x1004dead
1004de89:	mov    eax,DWORD PTR [ebp-0x28]
1004de8c:	cdq    
1004de8d:	push   edx
1004de8e:	push   eax
1004de8f:	push   ebx
1004de90:	push   edi
1004de91:	call   0x1004acb0
1004de96:	add    ecx,0x30
1004de99:	cmp    ecx,0x39
1004de9c:	mov    DWORD PTR [ebp-0x68],ebx
1004de9f:	mov    edi,eax
1004dea1:	mov    ebx,edx
1004dea3:	jle    0x1004dea8
1004dea5:	add    ecx,DWORD PTR [ebp-0x4c]
1004dea8:	mov    BYTE PTR [esi],cl
1004deaa:	dec    esi
1004deab:	jmp    0x1004de79
1004dead:	lea    eax,[ebp+0x1eb]
1004deb3:	sub    eax,esi
1004deb5:	inc    esi
1004deb6:	test   WORD PTR [ebp-0x18],0x200
1004debc:	mov    DWORD PTR [ebp-0x28],eax
1004debf:	mov    DWORD PTR [ebp-0x24],esi
1004dec2:	je     0x1004df10
1004dec4:	test   eax,eax
1004dec6:	je     0x1004decf
1004dec8:	mov    ecx,esi
1004deca:	cmp    BYTE PTR [ecx],0x30
1004decd:	je     0x1004df10
1004decf:	dec    DWORD PTR [ebp-0x24]
1004ded2:	mov    ecx,DWORD PTR [ebp-0x24]
1004ded5:	mov    BYTE PTR [ecx],0x30
1004ded8:	inc    eax
1004ded9:	jmp    0x1004df0d
1004dedb:	dec    ecx
1004dedc:	cmp    WORD PTR [eax],si
1004dedf:	je     0x1004dee7
1004dee1:	inc    eax
1004dee2:	inc    eax
1004dee3:	cmp    ecx,esi
1004dee5:	jne    0x1004dedb
1004dee7:	sub    eax,DWORD PTR [ebp-0x24]
1004deea:	sar    eax,1
1004deec:	jmp    0x1004df0d
1004deee:	cmp    edi,esi
1004def0:	jne    0x1004defa
1004def2:	mov    eax,ds:0x10080d40
1004def7:	mov    DWORD PTR [ebp-0x24],eax
1004defa:	mov    eax,DWORD PTR [ebp-0x24]
1004defd:	jmp    0x1004df06
1004deff:	dec    ecx
1004df00:	cmp    BYTE PTR [eax],0x0
1004df03:	je     0x1004df0a
1004df05:	inc    eax
1004df06:	cmp    ecx,esi
1004df08:	jne    0x1004deff
1004df0a:	sub    eax,DWORD PTR [ebp-0x24]
1004df0d:	mov    DWORD PTR [ebp-0x28],eax
1004df10:	cmp    DWORD PTR [ebp-0x50],0x0
1004df14:	jne    0x1004e015
1004df1a:	mov    eax,DWORD PTR [ebp-0x18]
1004df1d:	test   al,0x40
1004df1f:	je     0x1004df46
1004df21:	test   ax,0x100
1004df25:	je     0x1004df2d
1004df27:	mov    BYTE PTR [ebp-0x38],0x2d
1004df2b:	jmp    0x1004df3f
1004df2d:	test   al,0x1
1004df2f:	je     0x1004df37
1004df31:	mov    BYTE PTR [ebp-0x38],0x2b
1004df35:	jmp    0x1004df3f
1004df37:	test   al,0x2
1004df39:	je     0x1004df46
1004df3b:	mov    BYTE PTR [ebp-0x38],0x20
1004df3f:	mov    DWORD PTR [ebp-0x3c],0x1
1004df46:	mov    ebx,DWORD PTR [ebp-0x40]
1004df49:	sub    ebx,DWORD PTR [ebp-0x28]
1004df4c:	sub    ebx,DWORD PTR [ebp-0x3c]
1004df4f:	test   BYTE PTR [ebp-0x18],0xc
1004df53:	jne    0x1004df66
1004df55:	push   DWORD PTR [ebp-0x30]
1004df58:	lea    eax,[ebp-0x34]
1004df5b:	push   ebx
1004df5c:	push   0x20
1004df5e:	call   0x1004d69e
1004df63:	add    esp,0xc
1004df66:	push   DWORD PTR [ebp-0x3c]
1004df69:	mov    edi,DWORD PTR [ebp-0x30]
1004df6c:	lea    eax,[ebp-0x34]
1004df6f:	lea    ecx,[ebp-0x38]
1004df72:	call   0x1004d6c2
1004df77:	test   BYTE PTR [ebp-0x18],0x8
1004df7b:	pop    ecx
1004df7c:	je     0x1004df93
1004df7e:	test   BYTE PTR [ebp-0x18],0x4
1004df82:	jne    0x1004df93
1004df84:	push   edi
1004df85:	push   ebx
1004df86:	push   0x30
1004df88:	lea    eax,[ebp-0x34]
1004df8b:	call   0x1004d69e
1004df90:	add    esp,0xc
1004df93:	cmp    DWORD PTR [ebp-0x44],0x0
1004df97:	mov    eax,DWORD PTR [ebp-0x28]
1004df9a:	je     0x1004dfed
1004df9c:	test   eax,eax
1004df9e:	jle    0x1004dfed
1004dfa0:	mov    esi,DWORD PTR [ebp-0x24]
1004dfa3:	mov    DWORD PTR [ebp-0x68],eax
1004dfa6:	movzx  eax,WORD PTR [esi]
1004dfa9:	dec    DWORD PTR [ebp-0x68]
1004dfac:	push   eax
1004dfad:	push   0x6
1004dfaf:	lea    eax,[ebp+0x1ec]
1004dfb5:	push   eax
1004dfb6:	lea    eax,[ebp-0x70]
1004dfb9:	inc    esi
1004dfba:	push   eax
1004dfbb:	inc    esi
1004dfbc:	call   0x100504ed
1004dfc1:	add    esp,0x10
1004dfc4:	test   eax,eax
1004dfc6:	jne    0x1004dfe7
1004dfc8:	cmp    DWORD PTR [ebp-0x70],eax
1004dfcb:	je     0x1004dfe7
1004dfcd:	push   DWORD PTR [ebp-0x70]
1004dfd0:	lea    eax,[ebp-0x34]
1004dfd3:	lea    ecx,[ebp+0x1ec]
1004dfd9:	call   0x1004d6c2
1004dfde:	cmp    DWORD PTR [ebp-0x68],0x0
1004dfe2:	pop    ecx
1004dfe3:	jne    0x1004dfa6
1004dfe5:	jmp    0x1004dffa
1004dfe7:	or     DWORD PTR [ebp-0x34],0xffffffff
1004dfeb:	jmp    0x1004dffa
1004dfed:	mov    ecx,DWORD PTR [ebp-0x24]
1004dff0:	push   eax
1004dff1:	lea    eax,[ebp-0x34]
1004dff4:	call   0x1004d6c2
1004dff9:	pop    ecx
1004dffa:	cmp    DWORD PTR [ebp-0x34],0x0
1004dffe:	jl     0x1004e015
1004e000:	test   BYTE PTR [ebp-0x18],0x4
1004e004:	je     0x1004e015
1004e006:	push   edi
1004e007:	push   ebx
1004e008:	push   0x20
1004e00a:	lea    eax,[ebp-0x34]
1004e00d:	call   0x1004d69e
1004e012:	add    esp,0xc
1004e015:	cmp    DWORD PTR [ebp-0x54],0x0
1004e019:	je     0x1004e028
1004e01b:	push   DWORD PTR [ebp-0x54]
1004e01e:	call   0x100437dc
1004e023:	and    DWORD PTR [ebp-0x54],0x0
1004e027:	pop    ecx
1004e028:	mov    ebx,DWORD PTR [ebp-0x48]
1004e02b:	mov    al,BYTE PTR [ebx]
1004e02d:	test   al,al
1004e02f:	mov    BYTE PTR [ebp-0x19],al
1004e032:	je     0x1004e058
1004e034:	mov    ecx,DWORD PTR [ebp-0x74]
1004e037:	mov    edi,DWORD PTR [ebp-0x2c]
1004e03a:	mov    dl,al
1004e03c:	jmp    0x1004d86a
1004e041:	call   0x10046c41
1004e046:	mov    DWORD PTR [eax],0x16
1004e04c:	xor    eax,eax
1004e04e:	push   eax
1004e04f:	push   eax
1004e050:	push   eax
1004e051:	push   eax
1004e052:	push   eax
1004e053:	jmp    0x1004d77c
1004e058:	cmp    BYTE PTR [ebp-0x58],0x0
1004e05c:	je     0x1004e065
1004e05e:	mov    eax,DWORD PTR [ebp-0x5c]
1004e061:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e065:	mov    eax,DWORD PTR [ebp-0x34]
1004e068:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004e06e:	pop    edi
1004e06f:	pop    esi
1004e070:	xor    ecx,ebp
1004e072:	pop    ebx
1004e073:	call   0x10043615
1004e078:	add    ebp,0x1f8
1004e07e:	leave  
1004e07f:	ret    
1004e080:	dec    esi
1004e081:	fiadd  DWORD PTR [eax+edx*1]
1004e084:	mov    ch,0xd8
1004e086:	add    al,0x10
1004e088:	rcr    al,1
1004e08a:	add    al,0x10
1004e08c:	pop    ds
1004e08d:	fld    DWORD PTR [eax+edx*1]
1004e090:	pop    ecx
1004e091:	fld    DWORD PTR [eax+edx*1]
1004e094:	popa   
1004e095:	fld    DWORD PTR [eax+edx*1]
1004e098:	cwde   
1004e099:	fld    DWORD PTR [eax+edx*1]
1004e09c:	nop
1004e09d:	fiadd  DWORD PTR [eax+edx*1]
1004e0a0:	mov    eax,ds:0x100801ac
1004e0a5:	or     eax,0x1
1004e0a8:	xor    ecx,ecx
1004e0aa:	cmp    DWORD PTR ds:0x100824d0,eax
1004e0b0:	sete   cl
1004e0b3:	mov    eax,ecx
1004e0b5:	ret    
1004e0b6:	push   ebp
1004e0b7:	mov    ebp,esp
1004e0b9:	sub    esp,0x10
1004e0bc:	push   ebx
1004e0bd:	push   esi
1004e0be:	mov    esi,DWORD PTR [ebp+0xc]
1004e0c1:	xor    ebx,ebx
1004e0c3:	cmp    esi,ebx
1004e0c5:	je     0x1004e0da
1004e0c7:	cmp    DWORD PTR [ebp+0x10],ebx
1004e0ca:	je     0x1004e0da
1004e0cc:	cmp    BYTE PTR [esi],bl
1004e0ce:	jne    0x1004e0e0
1004e0d0:	mov    eax,DWORD PTR [ebp+0x8]
1004e0d3:	cmp    eax,ebx
1004e0d5:	je     0x1004e0da
1004e0d7:	mov    WORD PTR [eax],bx
1004e0da:	xor    eax,eax
1004e0dc:	pop    esi
1004e0dd:	pop    ebx
1004e0de:	leave  
1004e0df:	ret    
1004e0e0:	push   DWORD PTR [ebp+0x14]
1004e0e3:	lea    ecx,[ebp-0x10]
1004e0e6:	call   0x100456a5
1004e0eb:	mov    eax,DWORD PTR [ebp-0x10]
1004e0ee:	cmp    DWORD PTR [eax+0x14],ebx
1004e0f1:	jne    0x1004e112
1004e0f3:	mov    eax,DWORD PTR [ebp+0x8]
1004e0f6:	cmp    eax,ebx
1004e0f8:	je     0x1004e101
1004e0fa:	movzx  cx,BYTE PTR [esi]
1004e0fe:	mov    WORD PTR [eax],cx
1004e101:	cmp    BYTE PTR [ebp-0x4],bl
1004e104:	je     0x1004e10d
1004e106:	mov    eax,DWORD PTR [ebp-0x8]
1004e109:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e10d:	xor    eax,eax
1004e10f:	inc    eax
1004e110:	jmp    0x1004e0dc
1004e112:	lea    eax,[ebp-0x10]
1004e115:	push   eax
1004e116:	movzx  eax,BYTE PTR [esi]
1004e119:	push   eax
1004e11a:	call   0x1004b32b
1004e11f:	test   eax,eax
1004e121:	pop    ecx
1004e122:	pop    ecx
1004e123:	je     0x1004e1a2
1004e125:	mov    eax,DWORD PTR [ebp-0x10]
1004e128:	mov    ecx,DWORD PTR [eax+0xac]
1004e12e:	cmp    ecx,0x1
1004e131:	jle    0x1004e158
1004e133:	cmp    DWORD PTR [ebp+0x10],ecx
1004e136:	jl     0x1004e158
1004e138:	xor    edx,edx
1004e13a:	cmp    DWORD PTR [ebp+0x8],ebx
1004e13d:	setne  dl
1004e140:	push   edx
1004e141:	push   DWORD PTR [ebp+0x8]
1004e144:	push   ecx
1004e145:	push   esi
1004e146:	push   0x9
1004e148:	push   DWORD PTR [eax+0x4]
1004e14b:	call   DWORD PTR ds:0x1006708c
1004e151:	test   eax,eax
1004e153:	mov    eax,DWORD PTR [ebp-0x10]
1004e156:	jne    0x1004e168
1004e158:	mov    ecx,DWORD PTR [ebp+0x10]
1004e15b:	cmp    ecx,DWORD PTR [eax+0xac]
1004e161:	jb     0x1004e183
1004e163:	cmp    BYTE PTR [esi+0x1],bl
1004e166:	je     0x1004e183
1004e168:	cmp    BYTE PTR [ebp-0x4],bl
1004e16b:	mov    eax,DWORD PTR [eax+0xac]
1004e171:	je     0x1004e0dc
1004e177:	mov    ecx,DWORD PTR [ebp-0x8]
1004e17a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004e17e:	jmp    0x1004e0dc
1004e183:	call   0x10046c41
1004e188:	mov    DWORD PTR [eax],0x2a
1004e18e:	cmp    BYTE PTR [ebp-0x4],bl
1004e191:	je     0x1004e19a
1004e193:	mov    eax,DWORD PTR [ebp-0x8]
1004e196:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e19a:	or     eax,0xffffffff
1004e19d:	jmp    0x1004e0dc
1004e1a2:	xor    eax,eax
1004e1a4:	cmp    DWORD PTR [ebp+0x8],ebx
1004e1a7:	setne  al
1004e1aa:	push   eax
1004e1ab:	push   DWORD PTR [ebp+0x8]
1004e1ae:	mov    eax,DWORD PTR [ebp-0x10]
1004e1b1:	push   0x1
1004e1b3:	push   esi
1004e1b4:	push   0x9
1004e1b6:	push   DWORD PTR [eax+0x4]
1004e1b9:	call   DWORD PTR ds:0x1006708c
1004e1bf:	test   eax,eax
1004e1c1:	jne    0x1004e101
1004e1c7:	jmp    0x1004e183
1004e1c9:	push   0x0
1004e1cb:	push   DWORD PTR [esp+0x10]
1004e1cf:	push   DWORD PTR [esp+0x10]
1004e1d3:	push   DWORD PTR [esp+0x10]
1004e1d7:	call   0x1004e0b6
1004e1dc:	add    esp,0x10
1004e1df:	ret    
1004e1e0:	push   ebp
1004e1e1:	lea    ebp,[esp-0x1f8]
1004e1e8:	sub    esp,0x278
1004e1ee:	mov    eax,ds:0x100801ac
1004e1f3:	xor    eax,ebp
1004e1f5:	mov    DWORD PTR [ebp+0x1f4],eax
1004e1fb:	mov    eax,DWORD PTR [ebp+0x200]
1004e201:	push   ebx
1004e202:	mov    ebx,DWORD PTR [ebp+0x204]
1004e208:	push   esi
1004e209:	xor    esi,esi
1004e20b:	push   edi
1004e20c:	mov    edi,DWORD PTR [ebp+0x20c]
1004e212:	push   DWORD PTR [ebp+0x208]
1004e218:	lea    ecx,[ebp-0x5c]
1004e21b:	mov    DWORD PTR [ebp-0x30],eax
1004e21e:	mov    DWORD PTR [ebp-0x2c],edi
1004e221:	mov    DWORD PTR [ebp-0x64],esi
1004e224:	mov    DWORD PTR [ebp-0x18],esi
1004e227:	mov    DWORD PTR [ebp-0x40],esi
1004e22a:	mov    DWORD PTR [ebp-0x20],esi
1004e22d:	mov    DWORD PTR [ebp-0x3c],esi
1004e230:	mov    DWORD PTR [ebp-0x68],esi
1004e233:	mov    DWORD PTR [ebp-0x44],esi
1004e236:	call   0x100456a5
1004e23b:	cmp    DWORD PTR [ebp-0x30],esi
1004e23e:	jne    0x1004e26d
1004e240:	call   0x10046c41
1004e245:	push   esi
1004e246:	push   esi
1004e247:	push   esi
1004e248:	push   esi
1004e249:	mov    DWORD PTR [eax],0x16
1004e24f:	push   esi
1004e250:	call   0x100435e1
1004e255:	add    esp,0x14
1004e258:	cmp    BYTE PTR [ebp-0x50],0x0
1004e25c:	je     0x1004e265
1004e25e:	mov    eax,DWORD PTR [ebp-0x54]
1004e261:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e265:	or     eax,0xffffffff
1004e268:	jmp    0x1004eb57
1004e26d:	mov    eax,DWORD PTR [ebp-0x30]
1004e270:	test   BYTE PTR [eax+0xc],0x40
1004e274:	jne    0x1004e31e
1004e27a:	push   eax
1004e27b:	call   0x1004d460
1004e280:	cmp    eax,0xffffffff
1004e283:	pop    ecx
1004e284:	je     0x1004e2bc
1004e286:	push   DWORD PTR [ebp-0x30]
1004e289:	call   0x1004d460
1004e28e:	cmp    eax,0xfffffffe
1004e291:	pop    ecx
1004e292:	je     0x1004e2bc
1004e294:	push   DWORD PTR [ebp-0x30]
1004e297:	call   0x1004d460
1004e29c:	push   DWORD PTR [ebp-0x30]
1004e29f:	sar    eax,0x5
1004e2a2:	lea    esi,[eax*4+0x100844e0]
1004e2a9:	call   0x1004d460
1004e2ae:	and    eax,0x1f
1004e2b1:	shl    eax,0x6
1004e2b4:	add    eax,DWORD PTR [esi]
1004e2b6:	pop    ecx
1004e2b7:	pop    ecx
1004e2b8:	xor    esi,esi
1004e2ba:	jmp    0x1004e2c1
1004e2bc:	mov    eax,0x100809d0
1004e2c1:	test   BYTE PTR [eax+0x24],0x7f
1004e2c5:	jne    0x1004e240
1004e2cb:	push   DWORD PTR [ebp-0x30]
1004e2ce:	call   0x1004d460
1004e2d3:	cmp    eax,0xffffffff
1004e2d6:	pop    ecx
1004e2d7:	je     0x1004e30f
1004e2d9:	push   DWORD PTR [ebp-0x30]
1004e2dc:	call   0x1004d460
1004e2e1:	cmp    eax,0xfffffffe
1004e2e4:	pop    ecx
1004e2e5:	je     0x1004e30f
1004e2e7:	push   DWORD PTR [ebp-0x30]
1004e2ea:	call   0x1004d460
1004e2ef:	push   DWORD PTR [ebp-0x30]
1004e2f2:	sar    eax,0x5
1004e2f5:	lea    esi,[eax*4+0x100844e0]
1004e2fc:	call   0x1004d460
1004e301:	and    eax,0x1f
1004e304:	shl    eax,0x6
1004e307:	add    eax,DWORD PTR [esi]
1004e309:	pop    ecx
1004e30a:	pop    ecx
1004e30b:	xor    esi,esi
1004e30d:	jmp    0x1004e314
1004e30f:	mov    eax,0x100809d0
1004e314:	test   BYTE PTR [eax+0x24],0x80
1004e318:	jne    0x1004e240
1004e31e:	cmp    ebx,esi
1004e320:	je     0x1004e240
1004e326:	mov    dl,BYTE PTR [ebx]
1004e328:	test   dl,dl
1004e32a:	mov    DWORD PTR [ebp-0x34],esi
1004e32d:	mov    DWORD PTR [ebp-0x28],esi
1004e330:	mov    DWORD PTR [ebp-0x48],esi
1004e333:	mov    DWORD PTR [ebp-0x60],esi
1004e336:	mov    BYTE PTR [ebp-0x19],dl
1004e339:	je     0x1004eb47
1004e33f:	inc    ebx
1004e340:	xor    eax,eax
1004e342:	cmp    DWORD PTR [ebp-0x34],eax
1004e345:	mov    DWORD PTR [ebp-0x4c],ebx
1004e348:	jl     0x1004eb36
1004e34e:	mov    cl,dl
1004e350:	sub    cl,0x20
1004e353:	cmp    cl,0x58
1004e356:	ja     0x1004e365
1004e358:	movsx  eax,dl
1004e35b:	movzx  eax,BYTE PTR [eax+0x10068468]
1004e362:	and    eax,0xf
1004e365:	mov    ecx,DWORD PTR [ebp-0x48]
1004e368:	imul   eax,eax,0x9
1004e36b:	movzx  eax,BYTE PTR [eax+ecx*1+0x10068488]
1004e373:	push   0x8
1004e375:	shr    eax,0x4
1004e378:	pop    esi
1004e379:	cmp    eax,esi
1004e37b:	mov    DWORD PTR [ebp-0x48],eax
1004e37e:	je     0x1004eb1f
1004e384:	push   0x7
1004e386:	pop    ecx
1004e387:	cmp    eax,ecx
1004e389:	ja     0x1004eb09
1004e38f:	jmp    DWORD PTR [eax*4+0x1004eb70]
1004e396:	xor    eax,eax
1004e398:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e39c:	mov    DWORD PTR [ebp-0x74],eax
1004e39f:	mov    DWORD PTR [ebp-0x68],eax
1004e3a2:	mov    DWORD PTR [ebp-0x40],eax
1004e3a5:	mov    DWORD PTR [ebp-0x3c],eax
1004e3a8:	mov    DWORD PTR [ebp-0x18],eax
1004e3ab:	mov    DWORD PTR [ebp-0x44],eax
1004e3ae:	jmp    0x1004eb09
1004e3b3:	movsx  eax,dl
1004e3b6:	sub    eax,0x20
1004e3b9:	je     0x1004e3f7
1004e3bb:	sub    eax,0x3
1004e3be:	je     0x1004e3eb
1004e3c0:	sub    eax,esi
1004e3c2:	je     0x1004e3e2
1004e3c4:	dec    eax
1004e3c5:	dec    eax
1004e3c6:	je     0x1004e3d9
1004e3c8:	sub    eax,0x3
1004e3cb:	jne    0x1004eb09
1004e3d1:	or     DWORD PTR [ebp-0x18],esi
1004e3d4:	jmp    0x1004eb09
1004e3d9:	or     DWORD PTR [ebp-0x18],0x4
1004e3dd:	jmp    0x1004eb09
1004e3e2:	or     DWORD PTR [ebp-0x18],0x1
1004e3e6:	jmp    0x1004eb09
1004e3eb:	or     DWORD PTR [ebp-0x18],0x80
1004e3f2:	jmp    0x1004eb09
1004e3f7:	or     DWORD PTR [ebp-0x18],0x2
1004e3fb:	jmp    0x1004eb09
1004e400:	cmp    dl,0x2a
1004e403:	jne    0x1004e425
1004e405:	add    edi,0x4
1004e408:	mov    DWORD PTR [ebp-0x2c],edi
1004e40b:	mov    edi,DWORD PTR [edi-0x4]
1004e40e:	test   edi,edi
1004e410:	mov    DWORD PTR [ebp-0x40],edi
1004e413:	jge    0x1004eb09
1004e419:	or     DWORD PTR [ebp-0x18],0x4
1004e41d:	neg    DWORD PTR [ebp-0x40]
1004e420:	jmp    0x1004eb09
1004e425:	mov    eax,DWORD PTR [ebp-0x40]
1004e428:	imul   eax,eax,0xa
1004e42b:	movsx  ecx,dl
1004e42e:	lea    eax,[eax+ecx*1-0x30]
1004e432:	mov    DWORD PTR [ebp-0x40],eax
1004e435:	jmp    0x1004eb09
1004e43a:	and    DWORD PTR [ebp-0x20],0x0
1004e43e:	jmp    0x1004eb09
1004e443:	cmp    dl,0x2a
1004e446:	jne    0x1004e465
1004e448:	add    edi,0x4
1004e44b:	mov    DWORD PTR [ebp-0x2c],edi
1004e44e:	mov    edi,DWORD PTR [edi-0x4]
1004e451:	test   edi,edi
1004e453:	mov    DWORD PTR [ebp-0x20],edi
1004e456:	jge    0x1004eb09
1004e45c:	or     DWORD PTR [ebp-0x20],0xffffffff
1004e460:	jmp    0x1004eb09
1004e465:	mov    eax,DWORD PTR [ebp-0x20]
1004e468:	imul   eax,eax,0xa
1004e46b:	movsx  ecx,dl
1004e46e:	lea    eax,[eax+ecx*1-0x30]
1004e472:	mov    DWORD PTR [ebp-0x20],eax
1004e475:	jmp    0x1004eb09
1004e47a:	cmp    dl,0x49
1004e47d:	je     0x1004e4c5
1004e47f:	cmp    dl,0x68
1004e482:	je     0x1004e4bc
1004e484:	cmp    dl,0x6c
1004e487:	je     0x1004e49e
1004e489:	cmp    dl,0x77
1004e48c:	jne    0x1004eb09
1004e492:	or     DWORD PTR [ebp-0x18],0x800
1004e499:	jmp    0x1004eb09
1004e49e:	cmp    BYTE PTR [ebx],0x6c
1004e4a1:	jne    0x1004e4b3
1004e4a3:	inc    ebx
1004e4a4:	or     DWORD PTR [ebp-0x18],0x1000
1004e4ab:	mov    DWORD PTR [ebp-0x4c],ebx
1004e4ae:	jmp    0x1004eb09
1004e4b3:	or     DWORD PTR [ebp-0x18],0x10
1004e4b7:	jmp    0x1004eb09
1004e4bc:	or     DWORD PTR [ebp-0x18],0x20
1004e4c0:	jmp    0x1004eb09
1004e4c5:	mov    al,BYTE PTR [ebx]
1004e4c7:	cmp    al,0x36
1004e4c9:	jne    0x1004e4e2
1004e4cb:	cmp    BYTE PTR [ebx+0x1],0x34
1004e4cf:	jne    0x1004e4e2
1004e4d1:	inc    ebx
1004e4d2:	inc    ebx
1004e4d3:	or     DWORD PTR [ebp-0x18],0x8000
1004e4da:	mov    DWORD PTR [ebp-0x4c],ebx
1004e4dd:	jmp    0x1004eb09
1004e4e2:	cmp    al,0x33
1004e4e4:	jne    0x1004e4fd
1004e4e6:	cmp    BYTE PTR [ebx+0x1],0x32
1004e4ea:	jne    0x1004e4fd
1004e4ec:	inc    ebx
1004e4ed:	inc    ebx
1004e4ee:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004e4f5:	mov    DWORD PTR [ebp-0x4c],ebx
1004e4f8:	jmp    0x1004eb09
1004e4fd:	cmp    al,0x64
1004e4ff:	je     0x1004eb09
1004e505:	cmp    al,0x69
1004e507:	je     0x1004eb09
1004e50d:	cmp    al,0x6f
1004e50f:	je     0x1004eb09
1004e515:	cmp    al,0x75
1004e517:	je     0x1004eb09
1004e51d:	cmp    al,0x78
1004e51f:	je     0x1004eb09
1004e525:	cmp    al,0x58
1004e527:	je     0x1004eb09
1004e52d:	and    DWORD PTR [ebp-0x48],0x0
1004e531:	and    DWORD PTR [ebp-0x44],0x0
1004e535:	lea    eax,[ebp-0x5c]
1004e538:	push   eax
1004e539:	movzx  eax,dl
1004e53c:	push   eax
1004e53d:	call   0x1004b32b
1004e542:	pop    ecx
1004e543:	test   eax,eax
1004e545:	mov    al,BYTE PTR [ebp-0x19]
1004e548:	pop    ecx
1004e549:	je     0x1004e564
1004e54b:	mov    ecx,DWORD PTR [ebp-0x30]
1004e54e:	lea    esi,[ebp-0x34]
1004e551:	call   0x1004d66b
1004e556:	mov    al,BYTE PTR [ebx]
1004e558:	inc    ebx
1004e559:	test   al,al
1004e55b:	mov    DWORD PTR [ebp-0x4c],ebx
1004e55e:	je     0x1004eb1f
1004e564:	mov    ecx,DWORD PTR [ebp-0x30]
1004e567:	lea    esi,[ebp-0x34]
1004e56a:	call   0x1004d66b
1004e56f:	jmp    0x1004eb09
1004e574:	movsx  eax,dl
1004e577:	cmp    eax,0x64
1004e57a:	jg     0x1004e6f4
1004e580:	je     0x1004e76f
1004e586:	cmp    eax,0x53
1004e589:	jg     0x1004e63b
1004e58f:	je     0x1004e5ec
1004e591:	sub    eax,0x41
1004e594:	je     0x1004e5a6
1004e596:	dec    eax
1004e597:	dec    eax
1004e598:	je     0x1004e5db
1004e59a:	dec    eax
1004e59b:	dec    eax
1004e59c:	je     0x1004e5a6
1004e59e:	dec    eax
1004e59f:	dec    eax
1004e5a0:	jne    0x1004e9f1
1004e5a6:	add    dl,0x20
1004e5a9:	mov    DWORD PTR [ebp-0x74],0x1
1004e5b0:	mov    BYTE PTR [ebp-0x19],dl
1004e5b3:	or     DWORD PTR [ebp-0x18],0x40
1004e5b7:	cmp    DWORD PTR [ebp-0x20],0x0
1004e5bb:	lea    ebx,[ebp-0x14]
1004e5be:	mov    eax,0x200
1004e5c3:	mov    DWORD PTR [ebp-0x24],ebx
1004e5c6:	mov    DWORD PTR [ebp-0x6c],eax
1004e5c9:	jge    0x1004e793
1004e5cf:	mov    DWORD PTR [ebp-0x20],0x6
1004e5d6:	jmp    0x1004e7e2
1004e5db:	test   WORD PTR [ebp-0x18],0x830
1004e5e1:	jne    0x1004e658
1004e5e3:	or     DWORD PTR [ebp-0x18],0x800
1004e5ea:	jmp    0x1004e658
1004e5ec:	test   WORD PTR [ebp-0x18],0x830
1004e5f2:	jne    0x1004e5fb
1004e5f4:	or     DWORD PTR [ebp-0x18],0x800
1004e5fb:	mov    ecx,DWORD PTR [ebp-0x20]
1004e5fe:	cmp    ecx,0xffffffff
1004e601:	jne    0x1004e608
1004e603:	mov    ecx,0x7fffffff
1004e608:	add    edi,0x4
1004e60b:	test   WORD PTR [ebp-0x18],0x810
1004e611:	mov    DWORD PTR [ebp-0x2c],edi
1004e614:	mov    edi,DWORD PTR [edi-0x4]
1004e617:	mov    DWORD PTR [ebp-0x24],edi
1004e61a:	je     0x1004e9cf
1004e620:	test   edi,edi
1004e622:	jne    0x1004e62c
1004e624:	mov    eax,ds:0x10080d44
1004e629:	mov    DWORD PTR [ebp-0x24],eax
1004e62c:	mov    eax,DWORD PTR [ebp-0x24]
1004e62f:	mov    DWORD PTR [ebp-0x44],0x1
1004e636:	jmp    0x1004e9c4
1004e63b:	sub    eax,0x58
1004e63e:	je     0x1004e878
1004e644:	dec    eax
1004e645:	dec    eax
1004e646:	je     0x1004e6a5
1004e648:	sub    eax,ecx
1004e64a:	je     0x1004e5b3
1004e650:	dec    eax
1004e651:	dec    eax
1004e652:	jne    0x1004e9f1
1004e658:	add    edi,0x4
1004e65b:	test   WORD PTR [ebp-0x18],0x810
1004e661:	mov    DWORD PTR [ebp-0x2c],edi
1004e664:	je     0x1004e68d
1004e666:	movzx  eax,WORD PTR [edi-0x4]
1004e66a:	push   eax
1004e66b:	push   0x200
1004e670:	lea    eax,[ebp-0x14]
1004e673:	push   eax
1004e674:	lea    eax,[ebp-0x28]
1004e677:	push   eax
1004e678:	call   0x100504ed
1004e67d:	add    esp,0x10
1004e680:	test   eax,eax
1004e682:	je     0x1004e69a
1004e684:	mov    DWORD PTR [ebp-0x68],0x1
1004e68b:	jmp    0x1004e69a
1004e68d:	mov    al,BYTE PTR [edi-0x4]
1004e690:	mov    BYTE PTR [ebp-0x14],al
1004e693:	mov    DWORD PTR [ebp-0x28],0x1
1004e69a:	lea    eax,[ebp-0x14]
1004e69d:	mov    DWORD PTR [ebp-0x24],eax
1004e6a0:	jmp    0x1004e9f1
1004e6a5:	mov    eax,DWORD PTR [edi]
1004e6a7:	add    edi,0x4
1004e6aa:	test   eax,eax
1004e6ac:	mov    DWORD PTR [ebp-0x2c],edi
1004e6af:	je     0x1004e6e0
1004e6b1:	mov    ecx,DWORD PTR [eax+0x4]
1004e6b4:	test   ecx,ecx
1004e6b6:	je     0x1004e6e0
1004e6b8:	test   WORD PTR [ebp-0x18],0x800
1004e6be:	movsx  eax,WORD PTR [eax]
1004e6c1:	mov    DWORD PTR [ebp-0x24],ecx
1004e6c4:	je     0x1004e6d7
1004e6c6:	cdq    
1004e6c7:	sub    eax,edx
1004e6c9:	sar    eax,1
1004e6cb:	mov    DWORD PTR [ebp-0x44],0x1
1004e6d2:	jmp    0x1004e9ee
1004e6d7:	and    DWORD PTR [ebp-0x44],0x0
1004e6db:	jmp    0x1004e9ee
1004e6e0:	mov    eax,ds:0x10080d40
1004e6e5:	mov    DWORD PTR [ebp-0x24],eax
1004e6e8:	push   eax
1004e6e9:	call   0x10043450
1004e6ee:	pop    ecx
1004e6ef:	jmp    0x1004e9ee
1004e6f4:	cmp    eax,0x70
1004e6f7:	jg     0x1004e87d
1004e6fd:	je     0x1004e875
1004e703:	cmp    eax,0x65
1004e706:	jl     0x1004e9f1
1004e70c:	cmp    eax,0x67
1004e70f:	jle    0x1004e5b3
1004e715:	cmp    eax,0x69
1004e718:	je     0x1004e76f
1004e71a:	cmp    eax,0x6e
1004e71d:	je     0x1004e73a
1004e71f:	cmp    eax,0x6f
1004e722:	jne    0x1004e9f1
1004e728:	test   BYTE PTR [ebp-0x18],0x80
1004e72c:	mov    DWORD PTR [ebp-0x28],esi
1004e72f:	je     0x1004e77a
1004e731:	or     DWORD PTR [ebp-0x18],0x200
1004e738:	jmp    0x1004e77a
1004e73a:	mov    esi,DWORD PTR [edi]
1004e73c:	add    edi,0x4
1004e73f:	mov    DWORD PTR [ebp-0x2c],edi
1004e742:	call   0x1004e0a0
1004e747:	test   eax,eax
1004e749:	je     0x1004eb1f
1004e74f:	test   BYTE PTR [ebp-0x18],0x20
1004e753:	je     0x1004e75e
1004e755:	mov    ax,WORD PTR [ebp-0x34]
1004e759:	mov    WORD PTR [esi],ax
1004e75c:	jmp    0x1004e763
1004e75e:	mov    eax,DWORD PTR [ebp-0x34]
1004e761:	mov    DWORD PTR [esi],eax
1004e763:	mov    DWORD PTR [ebp-0x68],0x1
1004e76a:	jmp    0x1004eaf6
1004e76f:	or     DWORD PTR [ebp-0x18],0x40
1004e773:	mov    DWORD PTR [ebp-0x28],0xa
1004e77a:	mov    ecx,DWORD PTR [ebp-0x18]
1004e77d:	test   cx,cx
1004e780:	jns    0x1004e8c7
1004e786:	add    edi,esi
1004e788:	mov    eax,DWORD PTR [edi-0x8]
1004e78b:	mov    edx,DWORD PTR [edi-0x4]
1004e78e:	jmp    0x1004e8fc
1004e793:	jne    0x1004e7a3
1004e795:	cmp    dl,0x67
1004e798:	jne    0x1004e7e2
1004e79a:	mov    DWORD PTR [ebp-0x20],0x1
1004e7a1:	jmp    0x1004e7e2
1004e7a3:	cmp    DWORD PTR [ebp-0x20],eax
1004e7a6:	jle    0x1004e7ab
1004e7a8:	mov    DWORD PTR [ebp-0x20],eax
1004e7ab:	cmp    DWORD PTR [ebp-0x20],0xa3
1004e7b2:	jle    0x1004e7e2
1004e7b4:	mov    esi,DWORD PTR [ebp-0x20]
1004e7b7:	add    esi,0x15d
1004e7bd:	push   esi
1004e7be:	call   0x100472aa
1004e7c3:	test   eax,eax
1004e7c5:	mov    dl,BYTE PTR [ebp-0x19]
1004e7c8:	pop    ecx
1004e7c9:	mov    DWORD PTR [ebp-0x60],eax
1004e7cc:	push   0x8
1004e7ce:	je     0x1004e7da
1004e7d0:	mov    DWORD PTR [ebp-0x24],eax
1004e7d3:	mov    DWORD PTR [ebp-0x6c],esi
1004e7d6:	mov    ebx,eax
1004e7d8:	jmp    0x1004e7e1
1004e7da:	mov    DWORD PTR [ebp-0x20],0xa3
1004e7e1:	pop    esi
1004e7e2:	add    edi,esi
1004e7e4:	mov    eax,DWORD PTR [edi-0x8]
1004e7e7:	mov    DWORD PTR [ebp-0x80],eax
1004e7ea:	mov    eax,DWORD PTR [edi-0x4]
1004e7ed:	mov    DWORD PTR [ebp-0x7c],eax
1004e7f0:	lea    eax,[ebp-0x5c]
1004e7f3:	push   eax
1004e7f4:	push   DWORD PTR [ebp-0x74]
1004e7f7:	movsx  eax,dl
1004e7fa:	push   DWORD PTR [ebp-0x20]
1004e7fd:	mov    DWORD PTR [ebp-0x2c],edi
1004e800:	push   eax
1004e801:	push   DWORD PTR [ebp-0x6c]
1004e804:	lea    eax,[ebp-0x80]
1004e807:	push   ebx
1004e808:	push   eax
1004e809:	push   DWORD PTR ds:0x10080ab0
1004e80f:	call   0x10046d68
1004e814:	pop    ecx
1004e815:	call   eax
1004e817:	mov    edi,DWORD PTR [ebp-0x18]
1004e81a:	add    esp,0x1c
1004e81d:	and    edi,0x80
1004e823:	je     0x1004e840
1004e825:	cmp    DWORD PTR [ebp-0x20],0x0
1004e829:	jne    0x1004e840
1004e82b:	lea    eax,[ebp-0x5c]
1004e82e:	push   eax
1004e82f:	push   ebx
1004e830:	push   DWORD PTR ds:0x10080abc
1004e836:	call   0x10046d68
1004e83b:	pop    ecx
1004e83c:	call   eax
1004e83e:	pop    ecx
1004e83f:	pop    ecx
1004e840:	cmp    BYTE PTR [ebp-0x19],0x67
1004e844:	jne    0x1004e85f
1004e846:	test   edi,edi
1004e848:	jne    0x1004e85f
1004e84a:	lea    eax,[ebp-0x5c]
1004e84d:	push   eax
1004e84e:	push   ebx
1004e84f:	push   DWORD PTR ds:0x10080ab8
1004e855:	call   0x10046d68
1004e85a:	pop    ecx
1004e85b:	call   eax
1004e85d:	pop    ecx
1004e85e:	pop    ecx
1004e85f:	cmp    BYTE PTR [ebx],0x2d
1004e862:	jne    0x1004e86f
1004e864:	or     DWORD PTR [ebp-0x18],0x100
1004e86b:	inc    ebx
1004e86c:	mov    DWORD PTR [ebp-0x24],ebx
1004e86f:	push   ebx
1004e870:	jmp    0x1004e6e9
1004e875:	mov    DWORD PTR [ebp-0x20],esi
1004e878:	mov    DWORD PTR [ebp-0x64],ecx
1004e87b:	jmp    0x1004e89e
1004e87d:	sub    eax,0x73
1004e880:	je     0x1004e5fb
1004e886:	dec    eax
1004e887:	dec    eax
1004e888:	je     0x1004e773
1004e88e:	sub    eax,0x3
1004e891:	jne    0x1004e9f1
1004e897:	mov    DWORD PTR [ebp-0x64],0x27
1004e89e:	test   BYTE PTR [ebp-0x18],0x80
1004e8a2:	mov    DWORD PTR [ebp-0x28],0x10
1004e8a9:	je     0x1004e77a
1004e8af:	mov    al,BYTE PTR [ebp-0x64]
1004e8b2:	add    al,0x51
1004e8b4:	mov    BYTE PTR [ebp-0x38],0x30
1004e8b8:	mov    BYTE PTR [ebp-0x37],al
1004e8bb:	mov    DWORD PTR [ebp-0x3c],0x2
1004e8c2:	jmp    0x1004e77a
1004e8c7:	test   cx,0x1000
1004e8cc:	jne    0x1004e786
1004e8d2:	add    edi,0x4
1004e8d5:	test   cl,0x20
1004e8d8:	je     0x1004e8ef
1004e8da:	test   cl,0x40
1004e8dd:	mov    DWORD PTR [ebp-0x2c],edi
1004e8e0:	je     0x1004e8e8
1004e8e2:	movsx  eax,WORD PTR [edi-0x4]
1004e8e6:	jmp    0x1004e8ec
1004e8e8:	movzx  eax,WORD PTR [edi-0x4]
1004e8ec:	cdq    
1004e8ed:	jmp    0x1004e8ff
1004e8ef:	test   cl,0x40
1004e8f2:	mov    eax,DWORD PTR [edi-0x4]
1004e8f5:	je     0x1004e8fa
1004e8f7:	cdq    
1004e8f8:	jmp    0x1004e8fc
1004e8fa:	xor    edx,edx
1004e8fc:	mov    DWORD PTR [ebp-0x2c],edi
1004e8ff:	test   cl,0x40
1004e902:	je     0x1004e91c
1004e904:	test   edx,edx
1004e906:	jg     0x1004e91c
1004e908:	jl     0x1004e90e
1004e90a:	test   eax,eax
1004e90c:	jae    0x1004e91c
1004e90e:	neg    eax
1004e910:	adc    edx,0x0
1004e913:	neg    edx
1004e915:	or     DWORD PTR [ebp-0x18],0x100
1004e91c:	test   WORD PTR [ebp-0x18],0x9000
1004e922:	mov    ebx,edx
1004e924:	mov    edi,eax
1004e926:	jne    0x1004e92a
1004e928:	xor    ebx,ebx
1004e92a:	cmp    DWORD PTR [ebp-0x20],0x0
1004e92e:	jge    0x1004e939
1004e930:	mov    DWORD PTR [ebp-0x20],0x1
1004e937:	jmp    0x1004e94a
1004e939:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004e93d:	mov    eax,0x200
1004e942:	cmp    DWORD PTR [ebp-0x20],eax
1004e945:	jle    0x1004e94a
1004e947:	mov    DWORD PTR [ebp-0x20],eax
1004e94a:	mov    eax,edi
1004e94c:	or     eax,ebx
1004e94e:	jne    0x1004e953
1004e950:	and    DWORD PTR [ebp-0x3c],eax
1004e953:	lea    esi,[ebp+0x1eb]
1004e959:	mov    eax,DWORD PTR [ebp-0x20]
1004e95c:	dec    DWORD PTR [ebp-0x20]
1004e95f:	test   eax,eax
1004e961:	jg     0x1004e969
1004e963:	mov    eax,edi
1004e965:	or     eax,ebx
1004e967:	je     0x1004e98d
1004e969:	mov    eax,DWORD PTR [ebp-0x28]
1004e96c:	cdq    
1004e96d:	push   edx
1004e96e:	push   eax
1004e96f:	push   ebx
1004e970:	push   edi
1004e971:	call   0x1004acb0
1004e976:	add    ecx,0x30
1004e979:	cmp    ecx,0x39
1004e97c:	mov    DWORD PTR [ebp-0x6c],ebx
1004e97f:	mov    edi,eax
1004e981:	mov    ebx,edx
1004e983:	jle    0x1004e988
1004e985:	add    ecx,DWORD PTR [ebp-0x64]
1004e988:	mov    BYTE PTR [esi],cl
1004e98a:	dec    esi
1004e98b:	jmp    0x1004e959
1004e98d:	lea    eax,[ebp+0x1eb]
1004e993:	sub    eax,esi
1004e995:	inc    esi
1004e996:	test   WORD PTR [ebp-0x18],0x200
1004e99c:	mov    DWORD PTR [ebp-0x28],eax
1004e99f:	mov    DWORD PTR [ebp-0x24],esi
1004e9a2:	je     0x1004e9f1
1004e9a4:	test   eax,eax
1004e9a6:	je     0x1004e9af
1004e9a8:	mov    ecx,esi
1004e9aa:	cmp    BYTE PTR [ecx],0x30
1004e9ad:	je     0x1004e9f1
1004e9af:	dec    DWORD PTR [ebp-0x24]
1004e9b2:	mov    ecx,DWORD PTR [ebp-0x24]
1004e9b5:	mov    BYTE PTR [ecx],0x30
1004e9b8:	inc    eax
1004e9b9:	jmp    0x1004e9ee
1004e9bb:	dec    ecx
1004e9bc:	cmp    WORD PTR [eax],0x0
1004e9c0:	je     0x1004e9c8
1004e9c2:	inc    eax
1004e9c3:	inc    eax
1004e9c4:	test   ecx,ecx
1004e9c6:	jne    0x1004e9bb
1004e9c8:	sub    eax,DWORD PTR [ebp-0x24]
1004e9cb:	sar    eax,1
1004e9cd:	jmp    0x1004e9ee
1004e9cf:	test   edi,edi
1004e9d1:	jne    0x1004e9db
1004e9d3:	mov    eax,ds:0x10080d40
1004e9d8:	mov    DWORD PTR [ebp-0x24],eax
1004e9db:	mov    eax,DWORD PTR [ebp-0x24]
1004e9de:	jmp    0x1004e9e7
1004e9e0:	dec    ecx
1004e9e1:	cmp    BYTE PTR [eax],0x0
1004e9e4:	je     0x1004e9eb
1004e9e6:	inc    eax
1004e9e7:	test   ecx,ecx
1004e9e9:	jne    0x1004e9e0
1004e9eb:	sub    eax,DWORD PTR [ebp-0x24]
1004e9ee:	mov    DWORD PTR [ebp-0x28],eax
1004e9f1:	cmp    DWORD PTR [ebp-0x68],0x0
1004e9f5:	jne    0x1004eaf6
1004e9fb:	mov    eax,DWORD PTR [ebp-0x18]
1004e9fe:	test   al,0x40
1004ea00:	je     0x1004ea27
1004ea02:	test   ax,0x100
1004ea06:	je     0x1004ea0e
1004ea08:	mov    BYTE PTR [ebp-0x38],0x2d
1004ea0c:	jmp    0x1004ea20
1004ea0e:	test   al,0x1
1004ea10:	je     0x1004ea18
1004ea12:	mov    BYTE PTR [ebp-0x38],0x2b
1004ea16:	jmp    0x1004ea20
1004ea18:	test   al,0x2
1004ea1a:	je     0x1004ea27
1004ea1c:	mov    BYTE PTR [ebp-0x38],0x20
1004ea20:	mov    DWORD PTR [ebp-0x3c],0x1
1004ea27:	mov    ebx,DWORD PTR [ebp-0x40]
1004ea2a:	sub    ebx,DWORD PTR [ebp-0x28]
1004ea2d:	sub    ebx,DWORD PTR [ebp-0x3c]
1004ea30:	test   BYTE PTR [ebp-0x18],0xc
1004ea34:	jne    0x1004ea47
1004ea36:	push   DWORD PTR [ebp-0x30]
1004ea39:	lea    eax,[ebp-0x34]
1004ea3c:	push   ebx
1004ea3d:	push   0x20
1004ea3f:	call   0x1004d69e
1004ea44:	add    esp,0xc
1004ea47:	push   DWORD PTR [ebp-0x3c]
1004ea4a:	mov    edi,DWORD PTR [ebp-0x30]
1004ea4d:	lea    eax,[ebp-0x34]
1004ea50:	lea    ecx,[ebp-0x38]
1004ea53:	call   0x1004d6c2
1004ea58:	test   BYTE PTR [ebp-0x18],0x8
1004ea5c:	pop    ecx
1004ea5d:	je     0x1004ea74
1004ea5f:	test   BYTE PTR [ebp-0x18],0x4
1004ea63:	jne    0x1004ea74
1004ea65:	push   edi
1004ea66:	push   ebx
1004ea67:	push   0x30
1004ea69:	lea    eax,[ebp-0x34]
1004ea6c:	call   0x1004d69e
1004ea71:	add    esp,0xc
1004ea74:	cmp    DWORD PTR [ebp-0x44],0x0
1004ea78:	mov    eax,DWORD PTR [ebp-0x28]
1004ea7b:	je     0x1004eace
1004ea7d:	test   eax,eax
1004ea7f:	jle    0x1004eace
1004ea81:	mov    esi,DWORD PTR [ebp-0x24]
1004ea84:	mov    DWORD PTR [ebp-0x6c],eax
1004ea87:	movzx  eax,WORD PTR [esi]
1004ea8a:	dec    DWORD PTR [ebp-0x6c]
1004ea8d:	push   eax
1004ea8e:	push   0x6
1004ea90:	lea    eax,[ebp+0x1ec]
1004ea96:	push   eax
1004ea97:	lea    eax,[ebp-0x78]
1004ea9a:	inc    esi
1004ea9b:	push   eax
1004ea9c:	inc    esi
1004ea9d:	call   0x100504ed
1004eaa2:	add    esp,0x10
1004eaa5:	test   eax,eax
1004eaa7:	jne    0x1004eac8
1004eaa9:	cmp    DWORD PTR [ebp-0x78],eax
1004eaac:	je     0x1004eac8
1004eaae:	push   DWORD PTR [ebp-0x78]
1004eab1:	lea    eax,[ebp-0x34]
1004eab4:	lea    ecx,[ebp+0x1ec]
1004eaba:	call   0x1004d6c2
1004eabf:	cmp    DWORD PTR [ebp-0x6c],0x0
1004eac3:	pop    ecx
1004eac4:	jne    0x1004ea87
1004eac6:	jmp    0x1004eadb
1004eac8:	or     DWORD PTR [ebp-0x34],0xffffffff
1004eacc:	jmp    0x1004eadb
1004eace:	mov    ecx,DWORD PTR [ebp-0x24]
1004ead1:	push   eax
1004ead2:	lea    eax,[ebp-0x34]
1004ead5:	call   0x1004d6c2
1004eada:	pop    ecx
1004eadb:	cmp    DWORD PTR [ebp-0x34],0x0
1004eadf:	jl     0x1004eaf6
1004eae1:	test   BYTE PTR [ebp-0x18],0x4
1004eae5:	je     0x1004eaf6
1004eae7:	push   edi
1004eae8:	push   ebx
1004eae9:	push   0x20
1004eaeb:	lea    eax,[ebp-0x34]
1004eaee:	call   0x1004d69e
1004eaf3:	add    esp,0xc
1004eaf6:	cmp    DWORD PTR [ebp-0x60],0x0
1004eafa:	je     0x1004eb09
1004eafc:	push   DWORD PTR [ebp-0x60]
1004eaff:	call   0x100437dc
1004eb04:	and    DWORD PTR [ebp-0x60],0x0
1004eb08:	pop    ecx
1004eb09:	mov    ebx,DWORD PTR [ebp-0x4c]
1004eb0c:	mov    al,BYTE PTR [ebx]
1004eb0e:	test   al,al
1004eb10:	mov    BYTE PTR [ebp-0x19],al
1004eb13:	je     0x1004eb36
1004eb15:	mov    edi,DWORD PTR [ebp-0x2c]
1004eb18:	mov    dl,al
1004eb1a:	jmp    0x1004e33f
1004eb1f:	call   0x10046c41
1004eb24:	mov    DWORD PTR [eax],0x16
1004eb2a:	xor    eax,eax
1004eb2c:	push   eax
1004eb2d:	push   eax
1004eb2e:	push   eax
1004eb2f:	push   eax
1004eb30:	push   eax
1004eb31:	jmp    0x1004e250
1004eb36:	xor    esi,esi
1004eb38:	cmp    DWORD PTR [ebp-0x48],esi
1004eb3b:	je     0x1004eb47
1004eb3d:	cmp    DWORD PTR [ebp-0x48],0x7
1004eb41:	jne    0x1004e240
1004eb47:	cmp    BYTE PTR [ebp-0x50],0x0
1004eb4b:	je     0x1004eb54
1004eb4d:	mov    eax,DWORD PTR [ebp-0x54]
1004eb50:	and    DWORD PTR [eax+0x70],0xfffffffd
1004eb54:	mov    eax,DWORD PTR [ebp-0x34]
1004eb57:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004eb5d:	pop    edi
1004eb5e:	pop    esi
1004eb5f:	xor    ecx,ebp
1004eb61:	pop    ebx
1004eb62:	call   0x10043615
1004eb67:	add    ebp,0x1f8
1004eb6d:	leave  
1004eb6e:	ret    
1004eb6f:	nop
1004eb70:	xor    ebp,esp
1004eb72:	add    al,0x10
1004eb74:	xchg   esi,eax
1004eb75:	jecxz  0x1004eb7b
1004eb77:	adc    BYTE PTR [ebx+0x1004e3],dh
1004eb7d:	in     al,0x4
1004eb7f:	adc    BYTE PTR [edx],bh
1004eb81:	in     al,0x4
1004eb83:	adc    BYTE PTR [ebx-0x1c],al
1004eb86:	add    al,0x10
1004eb88:	jp     0x1004eb6e
1004eb8a:	add    al,0x10
1004eb8c:	je     0x1004eb73
1004eb8e:	add    al,0x10
1004eb90:	push   ebp
1004eb91:	mov    ebp,esp
1004eb93:	sub    esp,0x20
1004eb96:	push   ebx
1004eb97:	push   esi
1004eb98:	push   edi
1004eb99:	call   0x10046d5f
1004eb9e:	xor    ebx,ebx
1004eba0:	cmp    DWORD PTR ds:0x100824d4,ebx
1004eba6:	mov    DWORD PTR [ebp-0x8],eax
1004eba9:	mov    DWORD PTR [ebp-0x4],ebx
1004ebac:	mov    DWORD PTR [ebp-0xc],ebx
1004ebaf:	mov    DWORD PTR [ebp-0x10],ebx
1004ebb2:	jne    0x1004ec66
1004ebb8:	push   0x10068548
1004ebbd:	call   DWORD PTR ds:0x10067228
1004ebc3:	mov    edi,eax
1004ebc5:	cmp    edi,ebx
1004ebc7:	je     0x1004ed46
1004ebcd:	mov    esi,DWORD PTR ds:0x100670e4
1004ebd3:	push   0x1006853c
1004ebd8:	push   edi
1004ebd9:	call   esi
1004ebdb:	cmp    eax,ebx
1004ebdd:	je     0x1004ed46
1004ebe3:	push   eax
1004ebe4:	call   0x10046cf1
1004ebe9:	mov    DWORD PTR [esp],0x1006852c
1004ebf0:	push   edi
1004ebf1:	mov    ds:0x100824d4,eax
1004ebf6:	call   esi
1004ebf8:	push   eax
1004ebf9:	call   0x10046cf1
1004ebfe:	mov    DWORD PTR [esp],0x10068518
1004ec05:	push   edi
1004ec06:	mov    ds:0x100824d8,eax
1004ec0b:	call   esi
1004ec0d:	push   eax
1004ec0e:	call   0x10046cf1
1004ec13:	mov    ds:0x100824dc,eax
1004ec18:	lea    eax,[ebp-0xc]
1004ec1b:	push   eax
1004ec1c:	call   0x100474c9
1004ec21:	test   eax,eax
1004ec23:	pop    ecx
1004ec24:	pop    ecx
1004ec25:	je     0x1004ec34
1004ec27:	push   ebx
1004ec28:	push   ebx
1004ec29:	push   ebx
1004ec2a:	push   ebx
1004ec2b:	push   ebx
1004ec2c:	call   0x100434e5
1004ec31:	add    esp,0x14
1004ec34:	cmp    DWORD PTR [ebp-0xc],0x2
1004ec38:	jne    0x1004ec66
1004ec3a:	push   0x100684fc
1004ec3f:	push   edi
1004ec40:	call   esi
1004ec42:	push   eax
1004ec43:	call   0x10046cf1
1004ec48:	cmp    eax,ebx
1004ec4a:	pop    ecx
1004ec4b:	mov    ds:0x100824e4,eax
1004ec50:	je     0x1004ec66
1004ec52:	push   0x100684e4
1004ec57:	push   edi
1004ec58:	call   esi
1004ec5a:	push   eax
1004ec5b:	call   0x10046cf1
1004ec60:	pop    ecx
1004ec61:	mov    ds:0x100824e0,eax
1004ec66:	mov    eax,ds:0x100824e0
1004ec6b:	mov    ecx,DWORD PTR [ebp-0x8]
1004ec6e:	cmp    eax,ecx
1004ec70:	je     0x1004eceb
1004ec72:	cmp    DWORD PTR ds:0x100824e4,ecx
1004ec78:	je     0x1004eceb
1004ec7a:	push   eax
1004ec7b:	call   0x10046d68
1004ec80:	push   DWORD PTR ds:0x100824e4
1004ec86:	mov    esi,eax
1004ec88:	call   0x10046d68
1004ec8d:	cmp    esi,ebx
1004ec8f:	pop    ecx
1004ec90:	pop    ecx
1004ec91:	mov    edi,eax
1004ec93:	je     0x1004eceb
1004ec95:	cmp    edi,ebx
1004ec97:	je     0x1004eceb
1004ec99:	call   esi
1004ec9b:	cmp    eax,ebx
1004ec9d:	je     0x1004ecb8
1004ec9f:	lea    ecx,[ebp-0x14]
1004eca2:	push   ecx
1004eca3:	push   0xc
1004eca5:	lea    ecx,[ebp-0x20]
1004eca8:	push   ecx
1004eca9:	push   0x1
1004ecab:	push   eax
1004ecac:	call   edi
1004ecae:	test   eax,eax
1004ecb0:	je     0x1004ecb8
1004ecb2:	test   BYTE PTR [ebp-0x18],0x1
1004ecb6:	jne    0x1004eceb
1004ecb8:	lea    eax,[ebp-0x10]
1004ecbb:	push   eax
1004ecbc:	call   0x10047500
1004ecc1:	test   eax,eax
1004ecc3:	pop    ecx
1004ecc4:	je     0x1004ecd3
1004ecc6:	push   ebx
1004ecc7:	push   ebx
1004ecc8:	push   ebx
1004ecc9:	push   ebx
1004ecca:	push   ebx
1004eccb:	call   0x100434e5
1004ecd0:	add    esp,0x14
1004ecd3:	cmp    DWORD PTR [ebp-0x10],0x4
1004ecd7:	jb     0x1004ece2
1004ecd9:	or     DWORD PTR [ebp+0x10],0x200000
1004ece0:	jmp    0x1004ed26
1004ece2:	or     DWORD PTR [ebp+0x10],0x40000
1004ece9:	jmp    0x1004ed26
1004eceb:	mov    eax,ds:0x100824d8
1004ecf0:	cmp    eax,DWORD PTR [ebp-0x8]
1004ecf3:	je     0x1004ed26
1004ecf5:	push   eax
1004ecf6:	call   0x10046d68
1004ecfb:	cmp    eax,ebx
1004ecfd:	pop    ecx
1004ecfe:	je     0x1004ed26
1004ed00:	call   eax
1004ed02:	cmp    eax,ebx
1004ed04:	mov    DWORD PTR [ebp-0x4],eax
1004ed07:	je     0x1004ed26
1004ed09:	mov    eax,ds:0x100824dc
1004ed0e:	cmp    eax,DWORD PTR [ebp-0x8]
1004ed11:	je     0x1004ed26
1004ed13:	push   eax
1004ed14:	call   0x10046d68
1004ed19:	cmp    eax,ebx
1004ed1b:	pop    ecx
1004ed1c:	je     0x1004ed26
1004ed1e:	push   DWORD PTR [ebp-0x4]
1004ed21:	call   eax
1004ed23:	mov    DWORD PTR [ebp-0x4],eax
1004ed26:	push   DWORD PTR ds:0x100824d4
1004ed2c:	call   0x10046d68
1004ed31:	cmp    eax,ebx
1004ed33:	pop    ecx
1004ed34:	je     0x1004ed46
1004ed36:	push   DWORD PTR [ebp+0x10]
1004ed39:	push   DWORD PTR [ebp+0xc]
1004ed3c:	push   DWORD PTR [ebp+0x8]
1004ed3f:	push   DWORD PTR [ebp-0x4]
1004ed42:	call   eax
1004ed44:	jmp    0x1004ed48
1004ed46:	xor    eax,eax
1004ed48:	pop    edi
1004ed49:	pop    esi
1004ed4a:	pop    ebx
1004ed4b:	leave  
1004ed4c:	ret    
1004ed4d:	mov    eax,DWORD PTR [esp+0x4]
1004ed51:	push   ebx
1004ed52:	xor    ebx,ebx
1004ed54:	cmp    eax,ebx
1004ed56:	push   esi
1004ed57:	push   edi
1004ed58:	je     0x1004ed62
1004ed5a:	mov    edi,DWORD PTR [esp+0x14]
1004ed5e:	cmp    edi,ebx
1004ed60:	ja     0x1004ed7d
1004ed62:	call   0x10046c41
1004ed67:	push   0x16
1004ed69:	pop    esi
1004ed6a:	mov    DWORD PTR [eax],esi
1004ed6c:	push   ebx
1004ed6d:	push   ebx
1004ed6e:	push   ebx
1004ed6f:	push   ebx
1004ed70:	push   ebx
1004ed71:	call   0x100435e1
1004ed76:	add    esp,0x14
1004ed79:	mov    eax,esi
1004ed7b:	jmp    0x1004edba
1004ed7d:	mov    esi,DWORD PTR [esp+0x18]
1004ed81:	cmp    esi,ebx
1004ed83:	jne    0x1004ed89
1004ed85:	mov    BYTE PTR [eax],bl
1004ed87:	jmp    0x1004ed62
1004ed89:	mov    edx,eax
1004ed8b:	cmp    BYTE PTR [edx],bl
1004ed8d:	je     0x1004ed93
1004ed8f:	inc    edx
1004ed90:	dec    edi
1004ed91:	jne    0x1004ed8b
1004ed93:	cmp    edi,ebx
1004ed95:	je     0x1004ed85
1004ed97:	mov    cl,BYTE PTR [esi]
1004ed99:	mov    BYTE PTR [edx],cl
1004ed9b:	inc    edx
1004ed9c:	inc    esi
1004ed9d:	cmp    cl,bl
1004ed9f:	je     0x1004eda4
1004eda1:	dec    edi
1004eda2:	jne    0x1004ed97
1004eda4:	cmp    edi,ebx
1004eda6:	jne    0x1004edb8
1004eda8:	mov    BYTE PTR [eax],bl
1004edaa:	call   0x10046c41
1004edaf:	push   0x22
1004edb1:	pop    ecx
1004edb2:	mov    DWORD PTR [eax],ecx
1004edb4:	mov    esi,ecx
1004edb6:	jmp    0x1004ed6c
1004edb8:	xor    eax,eax
1004edba:	pop    edi
1004edbb:	pop    esi
1004edbc:	pop    ebx
1004edbd:	ret    
1004edbe:	push   ebp
1004edbf:	mov    ebp,esp
1004edc1:	push   ebx
1004edc2:	push   esi
1004edc3:	mov    esi,DWORD PTR [ebp+0x8]
1004edc6:	xor    ebx,ebx
1004edc8:	cmp    DWORD PTR [ebp+0x14],ebx
1004edcb:	push   edi
1004edcc:	jne    0x1004edde
1004edce:	cmp    esi,ebx
1004edd0:	jne    0x1004ede2
1004edd2:	cmp    DWORD PTR [ebp+0xc],ebx
1004edd5:	jne    0x1004ede9
1004edd7:	xor    eax,eax
1004edd9:	pop    edi
1004edda:	pop    esi
1004eddb:	pop    ebx
1004eddc:	pop    ebp
1004eddd:	ret    
1004edde:	cmp    esi,ebx
1004ede0:	je     0x1004ede9
1004ede2:	mov    edi,DWORD PTR [ebp+0xc]
1004ede5:	cmp    edi,ebx
1004ede7:	ja     0x1004ee04
1004ede9:	call   0x10046c41
1004edee:	push   0x16
1004edf0:	pop    esi
1004edf1:	mov    DWORD PTR [eax],esi
1004edf3:	push   ebx
1004edf4:	push   ebx
1004edf5:	push   ebx
1004edf6:	push   ebx
1004edf7:	push   ebx
1004edf8:	call   0x100435e1
1004edfd:	add    esp,0x14
1004ee00:	mov    eax,esi
1004ee02:	jmp    0x1004edd9
1004ee04:	cmp    DWORD PTR [ebp+0x14],ebx
1004ee07:	jne    0x1004ee0d
1004ee09:	mov    BYTE PTR [esi],bl
1004ee0b:	jmp    0x1004edd7
1004ee0d:	mov    edx,DWORD PTR [ebp+0x10]
1004ee10:	cmp    edx,ebx
1004ee12:	jne    0x1004ee18
1004ee14:	mov    BYTE PTR [esi],bl
1004ee16:	jmp    0x1004ede9
1004ee18:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004ee1c:	mov    eax,esi
1004ee1e:	jne    0x1004ee2f
1004ee20:	mov    cl,BYTE PTR [edx]
1004ee22:	mov    BYTE PTR [eax],cl
1004ee24:	inc    eax
1004ee25:	inc    edx
1004ee26:	cmp    cl,bl
1004ee28:	je     0x1004ee48
1004ee2a:	dec    edi
1004ee2b:	jne    0x1004ee20
1004ee2d:	jmp    0x1004ee48
1004ee2f:	mov    cl,BYTE PTR [edx]
1004ee31:	mov    BYTE PTR [eax],cl
1004ee33:	inc    eax
1004ee34:	inc    edx
1004ee35:	cmp    cl,bl
1004ee37:	je     0x1004ee41
1004ee39:	dec    edi
1004ee3a:	je     0x1004ee41
1004ee3c:	dec    DWORD PTR [ebp+0x14]
1004ee3f:	jne    0x1004ee2f
1004ee41:	cmp    DWORD PTR [ebp+0x14],ebx
1004ee44:	jne    0x1004ee48
1004ee46:	mov    BYTE PTR [eax],bl
1004ee48:	cmp    edi,ebx
1004ee4a:	jne    0x1004edd7
1004ee4c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004ee50:	jne    0x1004ee61
1004ee52:	mov    eax,DWORD PTR [ebp+0xc]
1004ee55:	push   0x50
1004ee57:	mov    BYTE PTR [esi+eax*1-0x1],bl
1004ee5b:	pop    eax
1004ee5c:	jmp    0x1004edd9
1004ee61:	mov    BYTE PTR [esi],bl
1004ee63:	call   0x10046c41
1004ee68:	push   0x22
1004ee6a:	pop    ecx
1004ee6b:	mov    DWORD PTR [eax],ecx
1004ee6d:	mov    esi,ecx
1004ee6f:	jmp    0x1004edf3
1004ee71:	mov    ecx,DWORD PTR [esp+0x4]
1004ee75:	push   esi
1004ee76:	xor    esi,esi
1004ee78:	cmp    ecx,esi
1004ee7a:	jl     0x1004ee9a
1004ee7c:	cmp    ecx,0x2
1004ee7f:	jle    0x1004ee8d
1004ee81:	cmp    ecx,0x3
1004ee84:	jne    0x1004ee9a
1004ee86:	mov    eax,ds:0x10081b00
1004ee8b:	pop    esi
1004ee8c:	ret    
1004ee8d:	mov    eax,ds:0x10081b00
1004ee92:	mov    DWORD PTR ds:0x10081b00,ecx
1004ee98:	pop    esi
1004ee99:	ret    
1004ee9a:	call   0x10046c41
1004ee9f:	push   esi
1004eea0:	push   esi
1004eea1:	push   esi
1004eea2:	push   esi
1004eea3:	push   esi
1004eea4:	mov    DWORD PTR [eax],0x16
1004eeaa:	call   0x100435e1
1004eeaf:	add    esp,0x14
1004eeb2:	or     eax,0xffffffff
1004eeb5:	pop    esi
1004eeb6:	ret    
1004eeb7:	push   0xc
1004eeb9:	push   0x10075fd0
1004eebe:	call   0x1004771c
1004eec3:	and    DWORD PTR [ebp-0x4],0x0
1004eec7:	movapd xmm0,xmm1
1004eecb:	mov    DWORD PTR [ebp-0x1c],0x1
1004eed2:	jmp    0x1004eef7
1004eed4:	mov    eax,DWORD PTR [ebp-0x14]
1004eed7:	mov    eax,DWORD PTR [eax]
1004eed9:	mov    eax,DWORD PTR [eax]
1004eedb:	cmp    eax,0xc0000005
1004eee0:	je     0x1004eeec
1004eee2:	cmp    eax,0xc000001d
1004eee7:	je     0x1004eeec
1004eee9:	xor    eax,eax
1004eeeb:	ret    
1004eeec:	xor    eax,eax
1004eeee:	inc    eax
1004eeef:	ret    
1004eef0:	mov    esp,DWORD PTR [ebp-0x18]
1004eef3:	and    DWORD PTR [ebp-0x1c],0x0
1004eef7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004eefe:	mov    eax,DWORD PTR [ebp-0x1c]
1004ef01:	call   0x10047761
1004ef06:	ret    
1004ef07:	push   ebp
1004ef08:	mov    ebp,esp
1004ef0a:	sub    esp,0x18
1004ef0d:	xor    eax,eax
1004ef0f:	push   ebx
1004ef10:	mov    DWORD PTR [ebp-0x4],eax
1004ef13:	mov    DWORD PTR [ebp-0xc],eax
1004ef16:	mov    DWORD PTR [ebp-0x8],eax
1004ef19:	push   ebx
1004ef1a:	pushf  
1004ef1b:	pop    eax
1004ef1c:	mov    ecx,eax
1004ef1e:	xor    eax,0x200000
1004ef23:	push   eax
1004ef24:	popf   
1004ef25:	pushf  
1004ef26:	pop    edx
1004ef27:	sub    edx,ecx
1004ef29:	je     0x1004ef4a
1004ef2b:	push   ecx
1004ef2c:	popf   
1004ef2d:	xor    eax,eax
1004ef2f:	cpuid  
1004ef31:	mov    DWORD PTR [ebp-0xc],eax
1004ef34:	mov    DWORD PTR [ebp-0x18],ebx
1004ef37:	mov    DWORD PTR [ebp-0x14],edx
1004ef3a:	mov    DWORD PTR [ebp-0x10],ecx
1004ef3d:	mov    eax,0x1
1004ef42:	cpuid  
1004ef44:	mov    DWORD PTR [ebp-0x4],edx
1004ef47:	mov    DWORD PTR [ebp-0x8],eax
1004ef4a:	pop    ebx
1004ef4b:	test   DWORD PTR [ebp-0x4],0x4000000
1004ef52:	je     0x1004ef62
1004ef54:	call   0x1004eeb7
1004ef59:	test   eax,eax
1004ef5b:	je     0x1004ef62
1004ef5d:	xor    eax,eax
1004ef5f:	inc    eax
1004ef60:	jmp    0x1004ef64
1004ef62:	xor    eax,eax
1004ef64:	pop    ebx
1004ef65:	leave  
1004ef66:	ret    
1004ef67:	call   0x1004ef07
1004ef6c:	mov    ds:0x100845e4,eax
1004ef71:	xor    eax,eax
1004ef73:	ret    
1004ef74:	push   ebp
1004ef75:	mov    ebp,esp
1004ef77:	push   ecx
1004ef78:	push   ecx
1004ef79:	mov    eax,ds:0x100801ac
1004ef7e:	xor    eax,ebp
1004ef80:	mov    DWORD PTR [ebp-0x4],eax
1004ef83:	mov    eax,ds:0x100824e8
1004ef88:	push   ebx
1004ef89:	push   esi
1004ef8a:	xor    ebx,ebx
1004ef8c:	cmp    eax,ebx
1004ef8e:	push   edi
1004ef8f:	mov    edi,ecx
1004ef91:	jne    0x1004efcd
1004ef93:	lea    eax,[ebp-0x8]
1004ef96:	push   eax
1004ef97:	xor    esi,esi
1004ef99:	inc    esi
1004ef9a:	push   esi
1004ef9b:	push   0x10067cd8
1004efa0:	push   esi
1004efa1:	call   DWORD PTR ds:0x10067240
1004efa7:	test   eax,eax
1004efa9:	je     0x1004efb3
1004efab:	mov    DWORD PTR ds:0x100824e8,esi
1004efb1:	jmp    0x1004efe7
1004efb3:	call   DWORD PTR ds:0x100670cc
1004efb9:	cmp    eax,0x78
1004efbc:	jne    0x1004efc8
1004efbe:	push   0x2
1004efc0:	pop    eax
1004efc1:	mov    ds:0x100824e8,eax
1004efc6:	jmp    0x1004efcd
1004efc8:	mov    eax,ds:0x100824e8
1004efcd:	cmp    eax,0x2
1004efd0:	je     0x1004f0a5
1004efd6:	cmp    eax,ebx
1004efd8:	je     0x1004f0a5
1004efde:	cmp    eax,0x1
1004efe1:	jne    0x1004f0cf
1004efe7:	cmp    DWORD PTR [ebp+0x18],ebx
1004efea:	mov    DWORD PTR [ebp-0x8],ebx
1004efed:	jne    0x1004eff7
1004efef:	mov    eax,DWORD PTR [edi]
1004eff1:	mov    eax,DWORD PTR [eax+0x4]
1004eff4:	mov    DWORD PTR [ebp+0x18],eax
1004eff7:	mov    esi,DWORD PTR ds:0x1006708c
1004effd:	xor    eax,eax
1004efff:	cmp    DWORD PTR [ebp+0x20],ebx
1004f002:	push   ebx
1004f003:	push   ebx
1004f004:	push   DWORD PTR [ebp+0x10]
1004f007:	setne  al
1004f00a:	push   DWORD PTR [ebp+0xc]
1004f00d:	lea    eax,[eax*8+0x1]
1004f014:	push   eax
1004f015:	push   DWORD PTR [ebp+0x18]
1004f018:	call   esi
1004f01a:	mov    edi,eax
1004f01c:	cmp    edi,ebx
1004f01e:	je     0x1004f0cf
1004f024:	jle    0x1004f062
1004f026:	cmp    edi,0x7ffffff0
1004f02c:	ja     0x1004f062
1004f02e:	lea    eax,[edi+edi*1+0x8]
1004f032:	cmp    eax,0x400
1004f037:	ja     0x1004f04c
1004f039:	call   0x1004b9b0
1004f03e:	mov    eax,esp
1004f040:	cmp    eax,ebx
1004f042:	je     0x1004f060
1004f044:	mov    DWORD PTR [eax],0xcccc
1004f04a:	jmp    0x1004f05d
1004f04c:	push   eax
1004f04d:	call   0x10045143
1004f052:	cmp    eax,ebx
1004f054:	pop    ecx
1004f055:	je     0x1004f060
1004f057:	mov    DWORD PTR [eax],0xdddd
1004f05d:	add    eax,0x8
1004f060:	mov    ebx,eax
1004f062:	test   ebx,ebx
1004f064:	je     0x1004f0cf
1004f066:	lea    eax,[edi+edi*1]
1004f069:	push   eax
1004f06a:	push   0x0
1004f06c:	push   ebx
1004f06d:	call   0x10045dc0
1004f072:	add    esp,0xc
1004f075:	push   edi
1004f076:	push   ebx
1004f077:	push   DWORD PTR [ebp+0x10]
1004f07a:	push   DWORD PTR [ebp+0xc]
1004f07d:	push   0x1
1004f07f:	push   DWORD PTR [ebp+0x18]
1004f082:	call   esi
1004f084:	test   eax,eax
1004f086:	je     0x1004f099
1004f088:	push   DWORD PTR [ebp+0x14]
1004f08b:	push   eax
1004f08c:	push   ebx
1004f08d:	push   DWORD PTR [ebp+0x8]
1004f090:	call   DWORD PTR ds:0x10067240
1004f096:	mov    DWORD PTR [ebp-0x8],eax
1004f099:	push   ebx
1004f09a:	call   0x1001b64a
1004f09f:	mov    eax,DWORD PTR [ebp-0x8]
1004f0a2:	pop    ecx
1004f0a3:	jmp    0x1004f11a
1004f0a5:	xor    esi,esi
1004f0a7:	cmp    DWORD PTR [ebp+0x1c],ebx
1004f0aa:	jne    0x1004f0b4
1004f0ac:	mov    eax,DWORD PTR [edi]
1004f0ae:	mov    eax,DWORD PTR [eax+0x14]
1004f0b1:	mov    DWORD PTR [ebp+0x1c],eax
1004f0b4:	cmp    DWORD PTR [ebp+0x18],ebx
1004f0b7:	jne    0x1004f0c1
1004f0b9:	mov    eax,DWORD PTR [edi]
1004f0bb:	mov    eax,DWORD PTR [eax+0x4]
1004f0be:	mov    DWORD PTR [ebp+0x18],eax
1004f0c1:	push   DWORD PTR [ebp+0x1c]
1004f0c4:	call   0x1004f70e
1004f0c9:	cmp    eax,0xffffffff
1004f0cc:	pop    ecx
1004f0cd:	jne    0x1004f0d3
1004f0cf:	xor    eax,eax
1004f0d1:	jmp    0x1004f11a
1004f0d3:	cmp    eax,DWORD PTR [ebp+0x18]
1004f0d6:	je     0x1004f0f6
1004f0d8:	push   ebx
1004f0d9:	push   ebx
1004f0da:	lea    ecx,[ebp+0x10]
1004f0dd:	push   ecx
1004f0de:	push   DWORD PTR [ebp+0xc]
1004f0e1:	push   eax
1004f0e2:	push   DWORD PTR [ebp+0x18]
1004f0e5:	call   0x1004f755
1004f0ea:	mov    esi,eax
1004f0ec:	add    esp,0x18
1004f0ef:	cmp    esi,ebx
1004f0f1:	je     0x1004f0cf
1004f0f3:	mov    DWORD PTR [ebp+0xc],esi
1004f0f6:	push   DWORD PTR [ebp+0x14]
1004f0f9:	push   DWORD PTR [ebp+0x10]
1004f0fc:	push   DWORD PTR [ebp+0xc]
1004f0ff:	push   DWORD PTR [ebp+0x8]
1004f102:	push   DWORD PTR [ebp+0x1c]
1004f105:	call   DWORD PTR ds:0x1006723c
1004f10b:	cmp    esi,ebx
1004f10d:	mov    edi,eax
1004f10f:	je     0x1004f118
1004f111:	push   esi
1004f112:	call   0x100437dc
1004f117:	pop    ecx
1004f118:	mov    eax,edi
1004f11a:	lea    esp,[ebp-0x14]
1004f11d:	pop    edi
1004f11e:	pop    esi
1004f11f:	pop    ebx
1004f120:	mov    ecx,DWORD PTR [ebp-0x4]
1004f123:	xor    ecx,ebp
1004f125:	call   0x10043615
1004f12a:	leave  
1004f12b:	ret    
1004f12c:	push   ebp
1004f12d:	mov    ebp,esp
1004f12f:	sub    esp,0x10
1004f132:	push   DWORD PTR [ebp+0x8]
1004f135:	lea    ecx,[ebp-0x10]
1004f138:	call   0x100456a5
1004f13d:	push   DWORD PTR [ebp+0x24]
1004f140:	lea    ecx,[ebp-0x10]
1004f143:	push   DWORD PTR [ebp+0x20]
1004f146:	push   DWORD PTR [ebp+0x1c]
1004f149:	push   DWORD PTR [ebp+0x18]
1004f14c:	push   DWORD PTR [ebp+0x14]
1004f14f:	push   DWORD PTR [ebp+0x10]
1004f152:	push   DWORD PTR [ebp+0xc]
1004f155:	call   0x1004ef74
1004f15a:	add    esp,0x1c
1004f15d:	cmp    BYTE PTR [ebp-0x4],0x0
1004f161:	je     0x1004f16a
1004f163:	mov    ecx,DWORD PTR [ebp-0x8]
1004f166:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f16a:	leave  
1004f16b:	ret    
1004f16c:	push   esi
1004f16d:	mov    esi,DWORD PTR [esp+0x8]
1004f171:	test   esi,esi
1004f173:	je     0x1004f2fa
1004f179:	push   DWORD PTR [esi+0x4]
1004f17c:	call   0x100437dc
1004f181:	push   DWORD PTR [esi+0x8]
1004f184:	call   0x100437dc
1004f189:	push   DWORD PTR [esi+0xc]
1004f18c:	call   0x100437dc
1004f191:	push   DWORD PTR [esi+0x10]
1004f194:	call   0x100437dc
1004f199:	push   DWORD PTR [esi+0x14]
1004f19c:	call   0x100437dc
1004f1a1:	push   DWORD PTR [esi+0x18]
1004f1a4:	call   0x100437dc
1004f1a9:	push   DWORD PTR [esi]
1004f1ab:	call   0x100437dc
1004f1b0:	push   DWORD PTR [esi+0x20]
1004f1b3:	call   0x100437dc
1004f1b8:	push   DWORD PTR [esi+0x24]
1004f1bb:	call   0x100437dc
1004f1c0:	push   DWORD PTR [esi+0x28]
1004f1c3:	call   0x100437dc
1004f1c8:	push   DWORD PTR [esi+0x2c]
1004f1cb:	call   0x100437dc
1004f1d0:	push   DWORD PTR [esi+0x30]
1004f1d3:	call   0x100437dc
1004f1d8:	push   DWORD PTR [esi+0x34]
1004f1db:	call   0x100437dc
1004f1e0:	push   DWORD PTR [esi+0x1c]
1004f1e3:	call   0x100437dc
1004f1e8:	push   DWORD PTR [esi+0x38]
1004f1eb:	call   0x100437dc
1004f1f0:	push   DWORD PTR [esi+0x3c]
1004f1f3:	call   0x100437dc
1004f1f8:	add    esp,0x40
1004f1fb:	push   DWORD PTR [esi+0x40]
1004f1fe:	call   0x100437dc
1004f203:	push   DWORD PTR [esi+0x44]
1004f206:	call   0x100437dc
1004f20b:	push   DWORD PTR [esi+0x48]
1004f20e:	call   0x100437dc
1004f213:	push   DWORD PTR [esi+0x4c]
1004f216:	call   0x100437dc
1004f21b:	push   DWORD PTR [esi+0x50]
1004f21e:	call   0x100437dc
1004f223:	push   DWORD PTR [esi+0x54]
1004f226:	call   0x100437dc
1004f22b:	push   DWORD PTR [esi+0x58]
1004f22e:	call   0x100437dc
1004f233:	push   DWORD PTR [esi+0x5c]
1004f236:	call   0x100437dc
1004f23b:	push   DWORD PTR [esi+0x60]
1004f23e:	call   0x100437dc
1004f243:	push   DWORD PTR [esi+0x64]
1004f246:	call   0x100437dc
1004f24b:	push   DWORD PTR [esi+0x68]
1004f24e:	call   0x100437dc
1004f253:	push   DWORD PTR [esi+0x6c]
1004f256:	call   0x100437dc
1004f25b:	push   DWORD PTR [esi+0x70]
1004f25e:	call   0x100437dc
1004f263:	push   DWORD PTR [esi+0x74]
1004f266:	call   0x100437dc
1004f26b:	push   DWORD PTR [esi+0x78]
1004f26e:	call   0x100437dc
1004f273:	push   DWORD PTR [esi+0x7c]
1004f276:	call   0x100437dc
1004f27b:	add    esp,0x40
1004f27e:	push   DWORD PTR [esi+0x80]
1004f284:	call   0x100437dc
1004f289:	push   DWORD PTR [esi+0x84]
1004f28f:	call   0x100437dc
1004f294:	push   DWORD PTR [esi+0x88]
1004f29a:	call   0x100437dc
1004f29f:	push   DWORD PTR [esi+0x8c]
1004f2a5:	call   0x100437dc
1004f2aa:	push   DWORD PTR [esi+0x90]
1004f2b0:	call   0x100437dc
1004f2b5:	push   DWORD PTR [esi+0x94]
1004f2bb:	call   0x100437dc
1004f2c0:	push   DWORD PTR [esi+0x98]
1004f2c6:	call   0x100437dc
1004f2cb:	push   DWORD PTR [esi+0x9c]
1004f2d1:	call   0x100437dc
1004f2d6:	push   DWORD PTR [esi+0xa0]
1004f2dc:	call   0x100437dc
1004f2e1:	push   DWORD PTR [esi+0xa4]
1004f2e7:	call   0x100437dc
1004f2ec:	push   DWORD PTR [esi+0xa8]
1004f2f2:	call   0x100437dc
1004f2f7:	add    esp,0x2c
1004f2fa:	pop    esi
1004f2fb:	ret    
1004f2fc:	push   esi
1004f2fd:	mov    esi,DWORD PTR [esp+0x8]
1004f301:	test   esi,esi
1004f303:	je     0x1004f33a
1004f305:	mov    eax,DWORD PTR [esi]
1004f307:	cmp    eax,DWORD PTR ds:0x10080e10
1004f30d:	je     0x1004f316
1004f30f:	push   eax
1004f310:	call   0x100437dc
1004f315:	pop    ecx
1004f316:	mov    eax,DWORD PTR [esi+0x4]
1004f319:	cmp    eax,DWORD PTR ds:0x10080e14
1004f31f:	je     0x1004f328
1004f321:	push   eax
1004f322:	call   0x100437dc
1004f327:	pop    ecx
1004f328:	mov    esi,DWORD PTR [esi+0x8]
1004f32b:	cmp    esi,DWORD PTR ds:0x10080e18
1004f331:	je     0x1004f33a
1004f333:	push   esi
1004f334:	call   0x100437dc
1004f339:	pop    ecx
1004f33a:	pop    esi
1004f33b:	ret    
1004f33c:	push   esi
1004f33d:	mov    esi,DWORD PTR [esp+0x8]
1004f341:	test   esi,esi
1004f343:	je     0x1004f3c3
1004f345:	mov    eax,DWORD PTR [esi+0xc]
1004f348:	cmp    eax,DWORD PTR ds:0x10080e1c
1004f34e:	je     0x1004f357
1004f350:	push   eax
1004f351:	call   0x100437dc
1004f356:	pop    ecx
1004f357:	mov    eax,DWORD PTR [esi+0x10]
1004f35a:	cmp    eax,DWORD PTR ds:0x10080e20
1004f360:	je     0x1004f369
1004f362:	push   eax
1004f363:	call   0x100437dc
1004f368:	pop    ecx
1004f369:	mov    eax,DWORD PTR [esi+0x14]
1004f36c:	cmp    eax,DWORD PTR ds:0x10080e24
1004f372:	je     0x1004f37b
1004f374:	push   eax
1004f375:	call   0x100437dc
1004f37a:	pop    ecx
1004f37b:	mov    eax,DWORD PTR [esi+0x18]
1004f37e:	cmp    eax,DWORD PTR ds:0x10080e28
1004f384:	je     0x1004f38d
1004f386:	push   eax
1004f387:	call   0x100437dc
1004f38c:	pop    ecx
1004f38d:	mov    eax,DWORD PTR [esi+0x1c]
1004f390:	cmp    eax,DWORD PTR ds:0x10080e2c
1004f396:	je     0x1004f39f
1004f398:	push   eax
1004f399:	call   0x100437dc
1004f39e:	pop    ecx
1004f39f:	mov    eax,DWORD PTR [esi+0x20]
1004f3a2:	cmp    eax,DWORD PTR ds:0x10080e30
1004f3a8:	je     0x1004f3b1
1004f3aa:	push   eax
1004f3ab:	call   0x100437dc
1004f3b0:	pop    ecx
1004f3b1:	mov    esi,DWORD PTR [esi+0x24]
1004f3b4:	cmp    esi,DWORD PTR ds:0x10080e34
1004f3ba:	je     0x1004f3c3
1004f3bc:	push   esi
1004f3bd:	call   0x100437dc
1004f3c2:	pop    ecx
1004f3c3:	pop    esi
1004f3c4:	ret    
1004f3c5:	int3   
1004f3c6:	int3   
1004f3c7:	int3   
1004f3c8:	int3   
1004f3c9:	int3   
1004f3ca:	int3   
1004f3cb:	int3   
1004f3cc:	int3   
1004f3cd:	int3   
1004f3ce:	int3   
1004f3cf:	int3   
1004f3d0:	push   ebp
1004f3d1:	mov    ebp,esp
1004f3d3:	push   esi
1004f3d4:	xor    eax,eax
1004f3d6:	push   eax
1004f3d7:	push   eax
1004f3d8:	push   eax
1004f3d9:	push   eax
1004f3da:	push   eax
1004f3db:	push   eax
1004f3dc:	push   eax
1004f3dd:	push   eax
1004f3de:	mov    edx,DWORD PTR [ebp+0xc]
1004f3e1:	lea    ecx,[ecx+0x0]
1004f3e4:	mov    al,BYTE PTR [edx]
1004f3e6:	or     al,al
1004f3e8:	je     0x1004f3f3
1004f3ea:	add    edx,0x1
1004f3ed:	bts    DWORD PTR [esp],eax
1004f3f1:	jmp    0x1004f3e4
1004f3f3:	mov    esi,DWORD PTR [ebp+0x8]
1004f3f6:	or     ecx,0xffffffff
1004f3f9:	lea    ecx,[ecx+0x0]
1004f3fc:	add    ecx,0x1
1004f3ff:	mov    al,BYTE PTR [esi]
1004f401:	or     al,al
1004f403:	je     0x1004f40e
1004f405:	add    esi,0x1
1004f408:	bt     DWORD PTR [esp],eax
1004f40c:	jae    0x1004f3fc
1004f40e:	mov    eax,ecx
1004f410:	add    esp,0x20
1004f413:	pop    esi
1004f414:	leave  
1004f415:	ret    
1004f416:	push   ebp
1004f417:	mov    ebp,esp
1004f419:	push   ecx
1004f41a:	and    DWORD PTR [ebp-0x4],0x0
1004f41e:	push   ebx
1004f41f:	mov    ebx,DWORD PTR [ebp+0x10]
1004f422:	test   ebx,ebx
1004f424:	jne    0x1004f42d
1004f426:	xor    eax,eax
1004f428:	jmp    0x1004f4c7
1004f42d:	cmp    ebx,0x4
1004f430:	push   edi
1004f431:	jb     0x1004f4a8
1004f433:	lea    edi,[ebx-0x4]
1004f436:	test   edi,edi
1004f438:	jbe    0x1004f4a8
1004f43a:	mov    ecx,DWORD PTR [ebp+0xc]
1004f43d:	mov    eax,DWORD PTR [ebp+0x8]
1004f440:	mov    dl,BYTE PTR [eax]
1004f442:	add    eax,0x4
1004f445:	add    ecx,0x4
1004f448:	test   dl,dl
1004f44a:	je     0x1004f49e
1004f44c:	cmp    dl,BYTE PTR [ecx-0x4]
1004f44f:	jne    0x1004f49e
1004f451:	mov    dl,BYTE PTR [eax-0x3]
1004f454:	test   dl,dl
1004f456:	je     0x1004f494
1004f458:	cmp    dl,BYTE PTR [ecx-0x3]
1004f45b:	jne    0x1004f494
1004f45d:	mov    dl,BYTE PTR [eax-0x2]
1004f460:	test   dl,dl
1004f462:	je     0x1004f48a
1004f464:	cmp    dl,BYTE PTR [ecx-0x2]
1004f467:	jne    0x1004f48a
1004f469:	mov    dl,BYTE PTR [eax-0x1]
1004f46c:	test   dl,dl
1004f46e:	je     0x1004f480
1004f470:	cmp    dl,BYTE PTR [ecx-0x1]
1004f473:	jne    0x1004f480
1004f475:	add    DWORD PTR [ebp-0x4],0x4
1004f479:	cmp    DWORD PTR [ebp-0x4],edi
1004f47c:	jb     0x1004f440
1004f47e:	jmp    0x1004f4bf
1004f480:	movzx  eax,BYTE PTR [eax-0x1]
1004f484:	movzx  ecx,BYTE PTR [ecx-0x1]
1004f488:	jmp    0x1004f4d0
1004f48a:	movzx  eax,BYTE PTR [eax-0x2]
1004f48e:	movzx  ecx,BYTE PTR [ecx-0x2]
1004f492:	jmp    0x1004f4d0
1004f494:	movzx  eax,BYTE PTR [eax-0x3]
1004f498:	movzx  ecx,BYTE PTR [ecx-0x3]
1004f49c:	jmp    0x1004f4d0
1004f49e:	movzx  eax,BYTE PTR [eax-0x4]
1004f4a2:	movzx  ecx,BYTE PTR [ecx-0x4]
1004f4a6:	jmp    0x1004f4d0
1004f4a8:	mov    ecx,DWORD PTR [ebp+0xc]
1004f4ab:	mov    eax,DWORD PTR [ebp+0x8]
1004f4ae:	jmp    0x1004f4bf
1004f4b0:	mov    dl,BYTE PTR [eax]
1004f4b2:	test   dl,dl
1004f4b4:	je     0x1004f4ca
1004f4b6:	cmp    dl,BYTE PTR [ecx]
1004f4b8:	jne    0x1004f4ca
1004f4ba:	inc    eax
1004f4bb:	inc    ecx
1004f4bc:	inc    DWORD PTR [ebp-0x4]
1004f4bf:	cmp    DWORD PTR [ebp-0x4],ebx
1004f4c2:	jb     0x1004f4b0
1004f4c4:	xor    eax,eax
1004f4c6:	pop    edi
1004f4c7:	pop    ebx
1004f4c8:	leave  
1004f4c9:	ret    
1004f4ca:	movzx  eax,BYTE PTR [eax]
1004f4cd:	movzx  ecx,BYTE PTR [ecx]
1004f4d0:	sub    eax,ecx
1004f4d2:	jmp    0x1004f4c6
1004f4d4:	int3   
1004f4d5:	int3   
1004f4d6:	int3   
1004f4d7:	int3   
1004f4d8:	int3   
1004f4d9:	int3   
1004f4da:	int3   
1004f4db:	int3   
1004f4dc:	int3   
1004f4dd:	int3   
1004f4de:	int3   
1004f4df:	int3   
1004f4e0:	push   ebp
1004f4e1:	mov    ebp,esp
1004f4e3:	push   esi
1004f4e4:	xor    eax,eax
1004f4e6:	push   eax
1004f4e7:	push   eax
1004f4e8:	push   eax
1004f4e9:	push   eax
1004f4ea:	push   eax
1004f4eb:	push   eax
1004f4ec:	push   eax
1004f4ed:	push   eax
1004f4ee:	mov    edx,DWORD PTR [ebp+0xc]
1004f4f1:	lea    ecx,[ecx+0x0]
1004f4f4:	mov    al,BYTE PTR [edx]
1004f4f6:	or     al,al
1004f4f8:	je     0x1004f503
1004f4fa:	add    edx,0x1
1004f4fd:	bts    DWORD PTR [esp],eax
1004f501:	jmp    0x1004f4f4
1004f503:	mov    esi,DWORD PTR [ebp+0x8]
1004f506:	mov    edi,edi
1004f508:	mov    al,BYTE PTR [esi]
1004f50a:	or     al,al
1004f50c:	je     0x1004f51a
1004f50e:	add    esi,0x1
1004f511:	bt     DWORD PTR [esp],eax
1004f515:	jae    0x1004f508
1004f517:	lea    eax,[esi-0x1]
1004f51a:	add    esp,0x20
1004f51d:	pop    esi
1004f51e:	leave  
1004f51f:	ret    
1004f520:	push   ebp
1004f521:	mov    ebp,esp
1004f523:	sub    esp,0x10
1004f526:	push   DWORD PTR [ebp+0xc]
1004f529:	lea    ecx,[ebp-0x10]
1004f52c:	call   0x100456a5
1004f531:	mov    eax,DWORD PTR [ebp-0x10]
1004f534:	cmp    DWORD PTR [eax+0xac],0x1
1004f53b:	jle    0x1004f550
1004f53d:	lea    eax,[ebp-0x10]
1004f540:	push   eax
1004f541:	push   0x4
1004f543:	push   DWORD PTR [ebp+0x8]
1004f546:	call   0x1004b36f
1004f54b:	add    esp,0xc
1004f54e:	jmp    0x1004f560
1004f550:	mov    eax,DWORD PTR [eax+0xc8]
1004f556:	mov    ecx,DWORD PTR [ebp+0x8]
1004f559:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f55d:	and    eax,0x4
1004f560:	cmp    BYTE PTR [ebp-0x4],0x0
1004f564:	je     0x1004f56d
1004f566:	mov    ecx,DWORD PTR [ebp-0x8]
1004f569:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f56d:	leave  
1004f56e:	ret    
1004f56f:	cmp    DWORD PTR ds:0x10082330,0x0
1004f576:	jne    0x1004f58a
1004f578:	mov    eax,DWORD PTR [esp+0x4]
1004f57c:	mov    ecx,DWORD PTR ds:0x10080998
1004f582:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f586:	and    eax,0x4
1004f589:	ret    
1004f58a:	push   0x0
1004f58c:	push   DWORD PTR [esp+0x8]
1004f590:	call   0x1004f520
1004f595:	pop    ecx
1004f596:	pop    ecx
1004f597:	ret    
1004f598:	push   ebp
1004f599:	mov    ebp,esp
1004f59b:	sub    esp,0x10
1004f59e:	push   DWORD PTR [ebp+0xc]
1004f5a1:	lea    ecx,[ebp-0x10]
1004f5a4:	call   0x100456a5
1004f5a9:	mov    eax,DWORD PTR [ebp-0x10]
1004f5ac:	cmp    DWORD PTR [eax+0xac],0x1
1004f5b3:	jle    0x1004f5cb
1004f5b5:	lea    eax,[ebp-0x10]
1004f5b8:	push   eax
1004f5b9:	push   0x80
1004f5be:	push   DWORD PTR [ebp+0x8]
1004f5c1:	call   0x1004b36f
1004f5c6:	add    esp,0xc
1004f5c9:	jmp    0x1004f5dd
1004f5cb:	mov    eax,DWORD PTR [eax+0xc8]
1004f5d1:	mov    ecx,DWORD PTR [ebp+0x8]
1004f5d4:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f5d8:	and    eax,0x80
1004f5dd:	cmp    BYTE PTR [ebp-0x4],0x0
1004f5e1:	je     0x1004f5ea
1004f5e3:	mov    ecx,DWORD PTR [ebp-0x8]
1004f5e6:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f5ea:	leave  
1004f5eb:	ret    
1004f5ec:	cmp    DWORD PTR ds:0x10082330,0x0
1004f5f3:	jne    0x1004f609
1004f5f5:	mov    eax,DWORD PTR [esp+0x4]
1004f5f9:	mov    ecx,DWORD PTR ds:0x10080998
1004f5ff:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f603:	and    eax,0x80
1004f608:	ret    
1004f609:	push   0x0
1004f60b:	push   DWORD PTR [esp+0x8]
1004f60f:	call   0x1004f598
1004f614:	pop    ecx
1004f615:	pop    ecx
1004f616:	ret    
1004f617:	push   ebp
1004f618:	mov    ebp,esp
1004f61a:	sub    esp,0x10
1004f61d:	push   DWORD PTR [ebp+0xc]
1004f620:	lea    ecx,[ebp-0x10]
1004f623:	call   0x100456a5
1004f628:	mov    eax,DWORD PTR [ebp-0x10]
1004f62b:	cmp    DWORD PTR [eax+0xac],0x1
1004f632:	jle    0x1004f647
1004f634:	lea    eax,[ebp-0x10]
1004f637:	push   eax
1004f638:	push   0x8
1004f63a:	push   DWORD PTR [ebp+0x8]
1004f63d:	call   0x1004b36f
1004f642:	add    esp,0xc
1004f645:	jmp    0x1004f657
1004f647:	mov    eax,DWORD PTR [eax+0xc8]
1004f64d:	mov    ecx,DWORD PTR [ebp+0x8]
1004f650:	movzx  eax,BYTE PTR [eax+ecx*2]
1004f654:	and    eax,0x8
1004f657:	cmp    BYTE PTR [ebp-0x4],0x0
1004f65b:	je     0x1004f664
1004f65d:	mov    ecx,DWORD PTR [ebp-0x8]
1004f660:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f664:	leave  
1004f665:	ret    
1004f666:	cmp    DWORD PTR ds:0x10082330,0x0
1004f66d:	jne    0x1004f681
1004f66f:	mov    eax,DWORD PTR [esp+0x4]
1004f673:	mov    ecx,DWORD PTR ds:0x10080998
1004f679:	movzx  eax,BYTE PTR [ecx+eax*2]
1004f67d:	and    eax,0x8
1004f680:	ret    
1004f681:	push   0x0
1004f683:	push   DWORD PTR [esp+0x8]
1004f687:	call   0x1004f617
1004f68c:	pop    ecx
1004f68d:	pop    ecx
1004f68e:	ret    
1004f68f:	push   ebp
1004f690:	mov    ebp,esp
1004f692:	sub    esp,0x10
1004f695:	push   DWORD PTR [ebp+0xc]
1004f698:	lea    ecx,[ebp-0x10]
1004f69b:	call   0x100456a5
1004f6a0:	mov    eax,DWORD PTR [ebp-0x10]
1004f6a3:	cmp    DWORD PTR [eax+0xac],0x1
1004f6aa:	jle    0x1004f6c2
1004f6ac:	lea    eax,[ebp-0x10]
1004f6af:	push   eax
1004f6b0:	push   0x157
1004f6b5:	push   DWORD PTR [ebp+0x8]
1004f6b8:	call   0x1004b36f
1004f6bd:	add    esp,0xc
1004f6c0:	jmp    0x1004f6d4
1004f6c2:	mov    eax,DWORD PTR [eax+0xc8]
1004f6c8:	mov    ecx,DWORD PTR [ebp+0x8]
1004f6cb:	movzx  eax,WORD PTR [eax+ecx*2]
1004f6cf:	and    eax,0x157
1004f6d4:	cmp    BYTE PTR [ebp-0x4],0x0
1004f6d8:	je     0x1004f6e1
1004f6da:	mov    ecx,DWORD PTR [ebp-0x8]
1004f6dd:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004f6e1:	leave  
1004f6e2:	ret    
1004f6e3:	cmp    DWORD PTR ds:0x10082330,0x0
1004f6ea:	jne    0x1004f700
1004f6ec:	mov    eax,DWORD PTR [esp+0x4]
1004f6f0:	mov    ecx,DWORD PTR ds:0x10080998
1004f6f6:	movzx  eax,WORD PTR [ecx+eax*2]
1004f6fa:	and    eax,0x157
1004f6ff:	ret    
1004f700:	push   0x0
1004f702:	push   DWORD PTR [esp+0x8]
1004f706:	call   0x1004f68f
1004f70b:	pop    ecx
1004f70c:	pop    ecx
1004f70d:	ret    
1004f70e:	push   ebp
1004f70f:	mov    ebp,esp
1004f711:	sub    esp,0xc
1004f714:	mov    eax,ds:0x100801ac
1004f719:	xor    eax,ebp
1004f71b:	mov    DWORD PTR [ebp-0x4],eax
1004f71e:	push   0x6
1004f720:	lea    eax,[ebp-0xc]
1004f723:	push   eax
1004f724:	push   0x1004
1004f729:	push   DWORD PTR [ebp+0x8]
1004f72c:	mov    BYTE PTR [ebp-0x6],0x0
1004f730:	call   DWORD PTR ds:0x10067248
1004f736:	test   eax,eax
1004f738:	jne    0x1004f73f
1004f73a:	or     eax,0xffffffff
1004f73d:	jmp    0x1004f749
1004f73f:	lea    eax,[ebp-0xc]
1004f742:	push   eax
1004f743:	call   0x10045fa2
1004f748:	pop    ecx
1004f749:	mov    ecx,DWORD PTR [ebp-0x4]
1004f74c:	xor    ecx,ebp
1004f74e:	call   0x10043615
1004f753:	leave  
1004f754:	ret    
1004f755:	push   ebp
1004f756:	mov    ebp,esp
1004f758:	sub    esp,0x34
1004f75b:	mov    eax,ds:0x100801ac
1004f760:	xor    eax,ebp
1004f762:	mov    DWORD PTR [ebp-0x4],eax
1004f765:	mov    eax,DWORD PTR [ebp+0x10]
1004f768:	mov    ecx,DWORD PTR [ebp+0x18]
1004f76b:	mov    DWORD PTR [ebp-0x28],eax
1004f76e:	mov    eax,DWORD PTR [ebp+0x14]
1004f771:	push   ebx
1004f772:	mov    DWORD PTR [ebp-0x30],eax
1004f775:	mov    eax,DWORD PTR [eax]
1004f777:	push   esi
1004f778:	mov    DWORD PTR [ebp-0x24],eax
1004f77b:	mov    eax,DWORD PTR [ebp+0x8]
1004f77e:	push   edi
1004f77f:	xor    edi,edi
1004f781:	cmp    eax,DWORD PTR [ebp+0xc]
1004f784:	mov    DWORD PTR [ebp-0x34],ecx
1004f787:	mov    DWORD PTR [ebp-0x20],edi
1004f78a:	mov    DWORD PTR [ebp-0x2c],edi
1004f78d:	je     0x1004f8f2
1004f793:	mov    esi,DWORD PTR ds:0x100671e4
1004f799:	lea    ecx,[ebp-0x18]
1004f79c:	push   ecx
1004f79d:	push   eax
1004f79e:	call   esi
1004f7a0:	test   eax,eax
1004f7a2:	mov    ebx,DWORD PTR ds:0x1006708c
1004f7a8:	je     0x1004f808
1004f7aa:	cmp    DWORD PTR [ebp-0x18],0x1
1004f7ae:	jne    0x1004f808
1004f7b0:	lea    eax,[ebp-0x18]
1004f7b3:	push   eax
1004f7b4:	push   DWORD PTR [ebp+0xc]
1004f7b7:	call   esi
1004f7b9:	test   eax,eax
1004f7bb:	je     0x1004f808
1004f7bd:	cmp    DWORD PTR [ebp-0x18],0x1
1004f7c1:	jne    0x1004f808
1004f7c3:	mov    esi,DWORD PTR [ebp-0x24]
1004f7c6:	cmp    esi,0xffffffff
1004f7c9:	mov    DWORD PTR [ebp-0x2c],0x1
1004f7d0:	jne    0x1004f7de
1004f7d2:	push   DWORD PTR [ebp-0x28]
1004f7d5:	call   0x10043450
1004f7da:	mov    esi,eax
1004f7dc:	pop    ecx
1004f7dd:	inc    esi
1004f7de:	cmp    esi,edi
1004f7e0:	jle    0x1004f83d
1004f7e2:	cmp    esi,0x7ffffff0
1004f7e8:	ja     0x1004f83d
1004f7ea:	lea    eax,[esi+esi*1+0x8]
1004f7ee:	cmp    eax,0x400
1004f7f3:	ja     0x1004f824
1004f7f5:	call   0x1004b9b0
1004f7fa:	mov    eax,esp
1004f7fc:	cmp    eax,edi
1004f7fe:	je     0x1004f838
1004f800:	mov    DWORD PTR [eax],0xcccc
1004f806:	jmp    0x1004f835
1004f808:	push   edi
1004f809:	push   edi
1004f80a:	push   DWORD PTR [ebp-0x24]
1004f80d:	push   DWORD PTR [ebp-0x28]
1004f810:	push   0x1
1004f812:	push   DWORD PTR [ebp+0x8]
1004f815:	call   ebx
1004f817:	mov    esi,eax
1004f819:	cmp    esi,edi
1004f81b:	jne    0x1004f7e0
1004f81d:	xor    eax,eax
1004f81f:	jmp    0x1004f8f5
1004f824:	push   eax
1004f825:	call   0x10045143
1004f82a:	cmp    eax,edi
1004f82c:	pop    ecx
1004f82d:	je     0x1004f838
1004f82f:	mov    DWORD PTR [eax],0xdddd
1004f835:	add    eax,0x8
1004f838:	mov    DWORD PTR [ebp-0x1c],eax
1004f83b:	jmp    0x1004f840
1004f83d:	mov    DWORD PTR [ebp-0x1c],edi
1004f840:	cmp    DWORD PTR [ebp-0x1c],edi
1004f843:	je     0x1004f81d
1004f845:	lea    eax,[esi+esi*1]
1004f848:	push   eax
1004f849:	push   edi
1004f84a:	push   DWORD PTR [ebp-0x1c]
1004f84d:	call   0x10045dc0
1004f852:	add    esp,0xc
1004f855:	push   esi
1004f856:	push   DWORD PTR [ebp-0x1c]
1004f859:	push   DWORD PTR [ebp-0x24]
1004f85c:	push   DWORD PTR [ebp-0x28]
1004f85f:	push   0x1
1004f861:	push   DWORD PTR [ebp+0x8]
1004f864:	call   ebx
1004f866:	test   eax,eax
1004f868:	je     0x1004f8e9
1004f86a:	mov    ebx,DWORD PTR [ebp-0x34]
1004f86d:	cmp    ebx,edi
1004f86f:	je     0x1004f88e
1004f871:	push   edi
1004f872:	push   edi
1004f873:	push   DWORD PTR [ebp+0x1c]
1004f876:	push   ebx
1004f877:	push   esi
1004f878:	push   DWORD PTR [ebp-0x1c]
1004f87b:	push   edi
1004f87c:	push   DWORD PTR [ebp+0xc]
1004f87f:	call   DWORD PTR ds:0x100670c4
1004f885:	test   eax,eax
1004f887:	je     0x1004f8e9
1004f889:	mov    DWORD PTR [ebp-0x20],ebx
1004f88c:	jmp    0x1004f8e9
1004f88e:	cmp    DWORD PTR [ebp-0x2c],edi
1004f891:	mov    ebx,DWORD PTR ds:0x100670c4
1004f897:	jne    0x1004f8ad
1004f899:	push   edi
1004f89a:	push   edi
1004f89b:	push   edi
1004f89c:	push   edi
1004f89d:	push   esi
1004f89e:	push   DWORD PTR [ebp-0x1c]
1004f8a1:	push   edi
1004f8a2:	push   DWORD PTR [ebp+0xc]
1004f8a5:	call   ebx
1004f8a7:	mov    esi,eax
1004f8a9:	cmp    esi,edi
1004f8ab:	je     0x1004f8e9
1004f8ad:	push   esi
1004f8ae:	push   0x1
1004f8b0:	call   0x100472ea
1004f8b5:	cmp    eax,edi
1004f8b7:	pop    ecx
1004f8b8:	pop    ecx
1004f8b9:	mov    DWORD PTR [ebp-0x20],eax
1004f8bc:	je     0x1004f8e9
1004f8be:	push   edi
1004f8bf:	push   edi
1004f8c0:	push   esi
1004f8c1:	push   eax
1004f8c2:	push   esi
1004f8c3:	push   DWORD PTR [ebp-0x1c]
1004f8c6:	push   edi
1004f8c7:	push   DWORD PTR [ebp+0xc]
1004f8ca:	call   ebx
1004f8cc:	cmp    eax,edi
1004f8ce:	jne    0x1004f8de
1004f8d0:	push   DWORD PTR [ebp-0x20]
1004f8d3:	call   0x100437dc
1004f8d8:	pop    ecx
1004f8d9:	mov    DWORD PTR [ebp-0x20],edi
1004f8dc:	jmp    0x1004f8e9
1004f8de:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1004f8e2:	je     0x1004f8e9
1004f8e4:	mov    ecx,DWORD PTR [ebp-0x30]
1004f8e7:	mov    DWORD PTR [ecx],eax
1004f8e9:	push   DWORD PTR [ebp-0x1c]
1004f8ec:	call   0x1001b64a
1004f8f1:	pop    ecx
1004f8f2:	mov    eax,DWORD PTR [ebp-0x20]
1004f8f5:	lea    esp,[ebp-0x40]
1004f8f8:	pop    edi
1004f8f9:	pop    esi
1004f8fa:	pop    ebx
1004f8fb:	mov    ecx,DWORD PTR [ebp-0x4]
1004f8fe:	xor    ecx,ebp
1004f900:	call   0x10043615
1004f905:	leave  
1004f906:	ret    
1004f907:	push   ebp
1004f908:	mov    ebp,esp
1004f90a:	sub    esp,0x14
1004f90d:	cmp    WORD PTR [ebp+0x8],0xffff
1004f913:	jne    0x1004f91b
1004f915:	and    DWORD PTR [ebp-0x4],0x0
1004f919:	jmp    0x1004f97d
1004f91b:	cmp    WORD PTR [ebp+0x8],0x100
1004f921:	jae    0x1004f93d
1004f923:	movzx  eax,WORD PTR [ebp+0x8]
1004f927:	mov    ecx,DWORD PTR ds:0x10080d4c
1004f92d:	mov    ax,WORD PTR [ecx+eax*2]
1004f931:	and    ax,WORD PTR [ebp+0xc]
1004f935:	movzx  eax,ax
1004f938:	mov    DWORD PTR [ebp-0x4],eax
1004f93b:	jmp    0x1004f97d
1004f93d:	push   DWORD PTR [ebp+0x10]
1004f940:	lea    ecx,[ebp-0x14]
1004f943:	call   0x100456a5
1004f948:	mov    eax,DWORD PTR [ebp-0x14]
1004f94b:	push   DWORD PTR [eax+0x14]
1004f94e:	push   DWORD PTR [eax+0x4]
1004f951:	lea    eax,[ebp-0x4]
1004f954:	push   eax
1004f955:	push   0x1
1004f957:	lea    eax,[ebp+0x8]
1004f95a:	push   eax
1004f95b:	lea    eax,[ebp-0x14]
1004f95e:	push   0x1
1004f960:	push   eax
1004f961:	call   0x1005072c
1004f966:	add    esp,0x1c
1004f969:	test   eax,eax
1004f96b:	jne    0x1004f970
1004f96d:	and    DWORD PTR [ebp-0x4],eax
1004f970:	cmp    BYTE PTR [ebp-0x8],0x0
1004f974:	je     0x1004f97d
1004f976:	mov    eax,DWORD PTR [ebp-0xc]
1004f979:	and    DWORD PTR [eax+0x70],0xfffffffd
1004f97d:	movzx  eax,WORD PTR [ebp-0x4]
1004f981:	movzx  ecx,WORD PTR [ebp+0xc]
1004f985:	and    eax,ecx
1004f987:	leave  
1004f988:	ret    
1004f989:	int3   
1004f98a:	int3   
1004f98b:	int3   
1004f98c:	int3   
1004f98d:	int3   
1004f98e:	int3   
1004f98f:	int3   
1004f990:	mov    eax,DWORD PTR [esp+0x8]
1004f994:	mov    ecx,DWORD PTR [esp+0x10]
1004f998:	or     ecx,eax
1004f99a:	mov    ecx,DWORD PTR [esp+0xc]
1004f99e:	jne    0x1004f9a9
1004f9a0:	mov    eax,DWORD PTR [esp+0x4]
1004f9a4:	mul    ecx
1004f9a6:	ret    0x10
1004f9a9:	push   ebx
1004f9aa:	mul    ecx
1004f9ac:	mov    ebx,eax
1004f9ae:	mov    eax,DWORD PTR [esp+0x8]
1004f9b2:	mul    DWORD PTR [esp+0x14]
1004f9b6:	add    ebx,eax
1004f9b8:	mov    eax,DWORD PTR [esp+0x8]
1004f9bc:	mul    ecx
1004f9be:	add    edx,ebx
1004f9c0:	pop    ebx
1004f9c1:	ret    0x10
1004f9c4:	push   ebp
1004f9c5:	mov    ebp,esp
1004f9c7:	sub    esp,0x10
1004f9ca:	push   DWORD PTR [ebp+0x8]
1004f9cd:	lea    ecx,[ebp-0x10]
1004f9d0:	call   0x100456a5
1004f9d5:	movzx  eax,BYTE PTR [ebp+0xc]
1004f9d9:	mov    ecx,DWORD PTR [ebp-0xc]
1004f9dc:	mov    dl,BYTE PTR [ebp+0x14]
1004f9df:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1004f9e3:	jne    0x1004fa03
1004f9e5:	cmp    DWORD PTR [ebp+0x10],0x0
1004f9e9:	je     0x1004f9fd
1004f9eb:	mov    ecx,DWORD PTR [ebp-0x10]
1004f9ee:	mov    ecx,DWORD PTR [ecx+0xc8]
1004f9f4:	movzx  eax,WORD PTR [ecx+eax*2]
1004f9f8:	and    eax,DWORD PTR [ebp+0x10]
1004f9fb:	jmp    0x1004f9ff
1004f9fd:	xor    eax,eax
1004f9ff:	test   eax,eax
1004fa01:	je     0x1004fa06
1004fa03:	xor    eax,eax
1004fa05:	inc    eax
1004fa06:	cmp    BYTE PTR [ebp-0x4],0x0
1004fa0a:	je     0x1004fa13
1004fa0c:	mov    ecx,DWORD PTR [ebp-0x8]
1004fa0f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004fa13:	leave  
1004fa14:	ret    
1004fa15:	push   0x4
1004fa17:	push   0x0
1004fa19:	push   DWORD PTR [esp+0xc]
1004fa1d:	push   0x0
1004fa1f:	call   0x1004f9c4
1004fa24:	add    esp,0x10
1004fa27:	ret    
1004fa28:	push   0x2
1004fa2a:	call   0x10047420
1004fa2f:	pop    ecx
1004fa30:	ret    
1004fa31:	int3   
1004fa32:	int3   
1004fa33:	int3   
1004fa34:	push   ebp
1004fa35:	mov    ebp,esp
1004fa37:	push   ebx
1004fa38:	push   esi
1004fa39:	push   edi
1004fa3a:	push   ebp
1004fa3b:	push   0x0
1004fa3d:	push   0x0
1004fa3f:	push   0x1004fa4c
1004fa44:	push   DWORD PTR [ebp+0x8]
1004fa47:	call   0x10056de4
1004fa4c:	pop    ebp
1004fa4d:	pop    edi
1004fa4e:	pop    esi
1004fa4f:	pop    ebx
1004fa50:	mov    esp,ebp
1004fa52:	pop    ebp
1004fa53:	ret    
1004fa54:	mov    ecx,DWORD PTR [esp+0x4]
1004fa58:	test   DWORD PTR [ecx+0x4],0x6
1004fa5f:	mov    eax,0x1
1004fa64:	je     0x1004fa98
1004fa66:	mov    eax,DWORD PTR [esp+0x14]
1004fa6a:	mov    ecx,DWORD PTR [eax-0x4]
1004fa6d:	xor    ecx,eax
1004fa6f:	call   0x10043615
1004fa74:	push   ebp
1004fa75:	mov    ebp,DWORD PTR [eax+0x10]
1004fa78:	mov    edx,DWORD PTR [eax+0x28]
1004fa7b:	push   edx
1004fa7c:	mov    edx,DWORD PTR [eax+0x24]
1004fa7f:	push   edx
1004fa80:	call   0x1004fa99
1004fa85:	add    esp,0x8
1004fa88:	pop    ebp
1004fa89:	mov    eax,DWORD PTR [esp+0x8]
1004fa8d:	mov    edx,DWORD PTR [esp+0x10]
1004fa91:	mov    DWORD PTR [edx],eax
1004fa93:	mov    eax,0x3
1004fa98:	ret    
1004fa99:	push   ebx
1004fa9a:	push   esi
1004fa9b:	push   edi
1004fa9c:	mov    eax,DWORD PTR [esp+0x10]
1004faa0:	push   ebp
1004faa1:	push   eax
1004faa2:	push   0xfffffffe
1004faa4:	push   0x1004fa54
1004faa9:	push   DWORD PTR fs:0x0
1004fab0:	mov    eax,ds:0x100801ac
1004fab5:	xor    eax,esp
1004fab7:	push   eax
1004fab8:	lea    eax,[esp+0x4]
1004fabc:	mov    fs:0x0,eax
1004fac2:	mov    eax,DWORD PTR [esp+0x28]
1004fac6:	mov    ebx,DWORD PTR [eax+0x8]
1004fac9:	mov    esi,DWORD PTR [eax+0xc]
1004facc:	cmp    esi,0xffffffff
1004facf:	je     0x1004fb0b
1004fad1:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1004fad6:	je     0x1004fade
1004fad8:	cmp    esi,DWORD PTR [esp+0x2c]
1004fadc:	jbe    0x1004fb0b
1004fade:	lea    esi,[esi+esi*2]
1004fae1:	mov    ecx,DWORD PTR [ebx+esi*4]
1004fae4:	mov    DWORD PTR [esp+0xc],ecx
1004fae8:	mov    DWORD PTR [eax+0xc],ecx
1004faeb:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
1004faf0:	jne    0x1004fb09
1004faf2:	push   0x101
1004faf7:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004fafb:	call   0x1004fb49
1004fb00:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004fb04:	call   0x1004fb68
1004fb09:	jmp    0x1004fac2
1004fb0b:	mov    ecx,DWORD PTR [esp+0x4]
1004fb0f:	mov    DWORD PTR fs:0x0,ecx
1004fb16:	add    esp,0x18
1004fb19:	pop    edi
1004fb1a:	pop    esi
1004fb1b:	pop    ebx
1004fb1c:	ret    
1004fb1d:	xor    eax,eax
1004fb1f:	mov    ecx,DWORD PTR fs:0x0
1004fb26:	cmp    DWORD PTR [ecx+0x4],0x1004fa54
1004fb2d:	jne    0x1004fb3f
1004fb2f:	mov    edx,DWORD PTR [ecx+0xc]
1004fb32:	mov    edx,DWORD PTR [edx+0xc]
1004fb35:	cmp    DWORD PTR [ecx+0x8],edx
1004fb38:	jne    0x1004fb3f
1004fb3a:	mov    eax,0x1
1004fb3f:	ret    
1004fb40:	push   ebx
1004fb41:	push   ecx
1004fb42:	mov    ebx,0x10080e50
1004fb47:	jmp    0x1004fb54
1004fb49:	push   ebx
1004fb4a:	push   ecx
1004fb4b:	mov    ebx,0x10080e50
1004fb50:	mov    ecx,DWORD PTR [esp+0xc]
1004fb54:	mov    DWORD PTR [ebx+0x8],ecx
1004fb57:	mov    DWORD PTR [ebx+0x4],eax
1004fb5a:	mov    DWORD PTR [ebx+0xc],ebp
1004fb5d:	push   ebp
1004fb5e:	push   ecx
1004fb5f:	push   eax
1004fb60:	pop    eax
1004fb61:	pop    ecx
1004fb62:	pop    ebp
1004fb63:	pop    ecx
1004fb64:	pop    ebx
1004fb65:	ret    0x4
1004fb68:	call   eax
1004fb6a:	ret    
1004fb6b:	mov    eax,DWORD PTR [esp+0x4]
1004fb6f:	test   eax,eax
1004fb71:	push   esi
1004fb72:	push   edi
1004fb73:	jl     0x1004fbcf
1004fb75:	cmp    eax,DWORD PTR ds:0x100844c4
1004fb7b:	jae    0x1004fbcf
1004fb7d:	mov    ecx,eax
1004fb7f:	sar    ecx,0x5
1004fb82:	mov    esi,eax
1004fb84:	and    esi,0x1f
1004fb87:	lea    edi,[ecx*4+0x100844e0]
1004fb8e:	mov    ecx,DWORD PTR [edi]
1004fb90:	shl    esi,0x6
1004fb93:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
1004fb97:	jne    0x1004fbcf
1004fb99:	cmp    DWORD PTR ds:0x10081b04,0x1
1004fba0:	push   ebx
1004fba1:	mov    ebx,DWORD PTR [esp+0x14]
1004fba5:	jne    0x1004fbc5
1004fba7:	sub    eax,0x0
1004fbaa:	je     0x1004fbbc
1004fbac:	dec    eax
1004fbad:	je     0x1004fbb7
1004fbaf:	dec    eax
1004fbb0:	jne    0x1004fbc5
1004fbb2:	push   ebx
1004fbb3:	push   0xfffffff4
1004fbb5:	jmp    0x1004fbbf
1004fbb7:	push   ebx
1004fbb8:	push   0xfffffff5
1004fbba:	jmp    0x1004fbbf
1004fbbc:	push   ebx
1004fbbd:	push   0xfffffff6
1004fbbf:	call   DWORD PTR ds:0x10067250
1004fbc5:	mov    eax,DWORD PTR [edi]
1004fbc7:	mov    DWORD PTR [esi+eax*1],ebx
1004fbca:	xor    eax,eax
1004fbcc:	pop    ebx
1004fbcd:	jmp    0x1004fbe5
1004fbcf:	call   0x10046c41
1004fbd4:	mov    DWORD PTR [eax],0x9
1004fbda:	call   0x10046c54
1004fbdf:	and    DWORD PTR [eax],0x0
1004fbe2:	or     eax,0xffffffff
1004fbe5:	pop    edi
1004fbe6:	pop    esi
1004fbe7:	ret    
1004fbe8:	mov    ecx,DWORD PTR [esp+0x4]
1004fbec:	push   ebx
1004fbed:	xor    ebx,ebx
1004fbef:	cmp    ecx,ebx
1004fbf1:	push   esi
1004fbf2:	push   edi
1004fbf3:	jl     0x1004fc50
1004fbf5:	cmp    ecx,DWORD PTR ds:0x100844c4
1004fbfb:	jae    0x1004fc50
1004fbfd:	mov    eax,ecx
1004fbff:	sar    eax,0x5
1004fc02:	mov    esi,ecx
1004fc04:	lea    edi,[eax*4+0x100844e0]
1004fc0b:	mov    eax,DWORD PTR [edi]
1004fc0d:	and    esi,0x1f
1004fc10:	shl    esi,0x6
1004fc13:	add    eax,esi
1004fc15:	test   BYTE PTR [eax+0x4],0x1
1004fc19:	je     0x1004fc50
1004fc1b:	cmp    DWORD PTR [eax],0xffffffff
1004fc1e:	je     0x1004fc50
1004fc20:	cmp    DWORD PTR ds:0x10081b04,0x1
1004fc27:	jne    0x1004fc46
1004fc29:	sub    ecx,ebx
1004fc2b:	je     0x1004fc3d
1004fc2d:	dec    ecx
1004fc2e:	je     0x1004fc38
1004fc30:	dec    ecx
1004fc31:	jne    0x1004fc46
1004fc33:	push   ebx
1004fc34:	push   0xfffffff4
1004fc36:	jmp    0x1004fc40
1004fc38:	push   ebx
1004fc39:	push   0xfffffff5
1004fc3b:	jmp    0x1004fc40
1004fc3d:	push   ebx
1004fc3e:	push   0xfffffff6
1004fc40:	call   DWORD PTR ds:0x10067250
1004fc46:	mov    eax,DWORD PTR [edi]
1004fc48:	or     DWORD PTR [esi+eax*1],0xffffffff
1004fc4c:	xor    eax,eax
1004fc4e:	jmp    0x1004fc65
1004fc50:	call   0x10046c41
1004fc55:	mov    DWORD PTR [eax],0x9
1004fc5b:	call   0x10046c54
1004fc60:	mov    DWORD PTR [eax],ebx
1004fc62:	or     eax,0xffffffff
1004fc65:	pop    edi
1004fc66:	pop    esi
1004fc67:	pop    ebx
1004fc68:	ret    
1004fc69:	mov    eax,DWORD PTR [esp+0x4]
1004fc6d:	cmp    eax,0xfffffffe
1004fc70:	jne    0x1004fc89
1004fc72:	call   0x10046c54
1004fc77:	and    DWORD PTR [eax],0x0
1004fc7a:	call   0x10046c41
1004fc7f:	mov    DWORD PTR [eax],0x9
1004fc85:	or     eax,0xffffffff
1004fc88:	ret    
1004fc89:	push   esi
1004fc8a:	xor    esi,esi
1004fc8c:	cmp    eax,esi
1004fc8e:	jl     0x1004fcb2
1004fc90:	cmp    eax,DWORD PTR ds:0x100844c4
1004fc96:	jae    0x1004fcb2
1004fc98:	mov    ecx,eax
1004fc9a:	and    eax,0x1f
1004fc9d:	sar    ecx,0x5
1004fca0:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1004fca7:	shl    eax,0x6
1004fcaa:	add    eax,ecx
1004fcac:	test   BYTE PTR [eax+0x4],0x1
1004fcb0:	jne    0x1004fcd6
1004fcb2:	call   0x10046c54
1004fcb7:	mov    DWORD PTR [eax],esi
1004fcb9:	call   0x10046c41
1004fcbe:	push   esi
1004fcbf:	push   esi
1004fcc0:	push   esi
1004fcc1:	push   esi
1004fcc2:	push   esi
1004fcc3:	mov    DWORD PTR [eax],0x9
1004fcc9:	call   0x100435e1
1004fcce:	add    esp,0x14
1004fcd1:	or     eax,0xffffffff
1004fcd4:	pop    esi
1004fcd5:	ret    
1004fcd6:	mov    eax,DWORD PTR [eax]
1004fcd8:	pop    esi
1004fcd9:	ret    
1004fcda:	push   0xc
1004fcdc:	push   0x10075ff0
1004fce1:	call   0x1004771c
1004fce6:	mov    edi,DWORD PTR [ebp+0x8]
1004fce9:	mov    eax,edi
1004fceb:	sar    eax,0x5
1004fcee:	mov    esi,edi
1004fcf0:	and    esi,0x1f
1004fcf3:	shl    esi,0x6
1004fcf6:	add    esi,DWORD PTR [eax*4+0x100844e0]
1004fcfd:	mov    DWORD PTR [ebp-0x1c],0x1
1004fd04:	xor    ebx,ebx
1004fd06:	cmp    DWORD PTR [esi+0x8],ebx
1004fd09:	jne    0x1004fd41
1004fd0b:	push   0xa
1004fd0d:	call   0x10047e0e
1004fd12:	pop    ecx
1004fd13:	mov    DWORD PTR [ebp-0x4],ebx
1004fd16:	cmp    DWORD PTR [esi+0x8],ebx
1004fd19:	jne    0x1004fd35
1004fd1b:	push   0xfa0
1004fd20:	lea    eax,[esi+0xc]
1004fd23:	push   eax
1004fd24:	call   0x1004c769
1004fd29:	pop    ecx
1004fd2a:	pop    ecx
1004fd2b:	test   eax,eax
1004fd2d:	jne    0x1004fd32
1004fd2f:	mov    DWORD PTR [ebp-0x1c],ebx
1004fd32:	inc    DWORD PTR [esi+0x8]
1004fd35:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004fd3c:	call   0x1004fd71
1004fd41:	cmp    DWORD PTR [ebp-0x1c],ebx
1004fd44:	je     0x1004fd63
1004fd46:	mov    eax,edi
1004fd48:	sar    eax,0x5
1004fd4b:	and    edi,0x1f
1004fd4e:	shl    edi,0x6
1004fd51:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1004fd58:	lea    eax,[eax+edi*1+0xc]
1004fd5c:	push   eax
1004fd5d:	call   DWORD PTR ds:0x100670f8
1004fd63:	mov    eax,DWORD PTR [ebp-0x1c]
1004fd66:	call   0x10047761
1004fd6b:	ret    
1004fd6c:	xor    ebx,ebx
1004fd6e:	mov    edi,DWORD PTR [ebp+0x8]
1004fd71:	push   0xa
1004fd73:	call   0x10047d36
1004fd78:	pop    ecx
1004fd79:	ret    
1004fd7a:	mov    eax,DWORD PTR [esp+0x4]
1004fd7e:	mov    ecx,eax
1004fd80:	and    eax,0x1f
1004fd83:	sar    ecx,0x5
1004fd86:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1004fd8d:	shl    eax,0x6
1004fd90:	lea    eax,[ecx+eax*1+0xc]
1004fd94:	push   eax
1004fd95:	call   DWORD PTR ds:0x100670fc
1004fd9b:	ret    
1004fd9c:	push   0x18
1004fd9e:	push   0x10076010
1004fda3:	call   0x1004771c
1004fda8:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004fdac:	xor    edi,edi
1004fdae:	mov    DWORD PTR [ebp-0x24],edi
1004fdb1:	push   0xb
1004fdb3:	call   0x10047d4b
1004fdb8:	pop    ecx
1004fdb9:	test   eax,eax
1004fdbb:	jne    0x1004fdc5
1004fdbd:	or     eax,0xffffffff
1004fdc0:	jmp    0x1004ff27
1004fdc5:	push   0xb
1004fdc7:	call   0x10047e0e
1004fdcc:	pop    ecx
1004fdcd:	mov    DWORD PTR [ebp-0x4],edi
1004fdd0:	mov    DWORD PTR [ebp-0x28],edi
1004fdd3:	cmp    edi,0x40
1004fdd6:	jge    0x1004ff18
1004fddc:	mov    esi,DWORD PTR [edi*4+0x100844e0]
1004fde3:	test   esi,esi
1004fde5:	je     0x1004fea5
1004fdeb:	mov    DWORD PTR [ebp-0x20],esi
1004fdee:	mov    eax,DWORD PTR [edi*4+0x100844e0]
1004fdf5:	add    eax,0x800
1004fdfa:	cmp    esi,eax
1004fdfc:	jae    0x1004fe99
1004fe02:	test   BYTE PTR [esi+0x4],0x1
1004fe06:	jne    0x1004fe64
1004fe08:	cmp    DWORD PTR [esi+0x8],0x0
1004fe0c:	jne    0x1004fe47
1004fe0e:	push   0xa
1004fe10:	call   0x10047e0e
1004fe15:	pop    ecx
1004fe16:	xor    ebx,ebx
1004fe18:	inc    ebx
1004fe19:	mov    DWORD PTR [ebp-0x4],ebx
1004fe1c:	cmp    DWORD PTR [esi+0x8],0x0
1004fe20:	jne    0x1004fe3e
1004fe22:	push   0xfa0
1004fe27:	lea    eax,[esi+0xc]
1004fe2a:	push   eax
1004fe2b:	call   0x1004c769
1004fe30:	pop    ecx
1004fe31:	pop    ecx
1004fe32:	test   eax,eax
1004fe34:	jne    0x1004fe3b
1004fe36:	mov    DWORD PTR [ebp-0x24],ebx
1004fe39:	jmp    0x1004fe3e
1004fe3b:	inc    DWORD PTR [esi+0x8]
1004fe3e:	and    DWORD PTR [ebp-0x4],0x0
1004fe42:	call   0x1004fe6f
1004fe47:	cmp    DWORD PTR [ebp-0x24],0x0
1004fe4b:	jne    0x1004fe64
1004fe4d:	lea    ebx,[esi+0xc]
1004fe50:	push   ebx
1004fe51:	call   DWORD PTR ds:0x100670f8
1004fe57:	test   BYTE PTR [esi+0x4],0x1
1004fe5b:	je     0x1004fe78
1004fe5d:	push   ebx
1004fe5e:	call   DWORD PTR ds:0x100670fc
1004fe64:	add    esi,0x40
1004fe67:	jmp    0x1004fdeb
1004fe69:	mov    edi,DWORD PTR [ebp-0x28]
1004fe6c:	mov    esi,DWORD PTR [ebp-0x20]
1004fe6f:	push   0xa
1004fe71:	call   0x10047d36
1004fe76:	pop    ecx
1004fe77:	ret    
1004fe78:	cmp    DWORD PTR [ebp-0x24],0x0
1004fe7c:	jne    0x1004fe64
1004fe7e:	mov    BYTE PTR [esi+0x4],0x1
1004fe82:	or     DWORD PTR [esi],0xffffffff
1004fe85:	sub    esi,DWORD PTR [edi*4+0x100844e0]
1004fe8c:	sar    esi,0x6
1004fe8f:	mov    eax,edi
1004fe91:	shl    eax,0x5
1004fe94:	add    esi,eax
1004fe96:	mov    DWORD PTR [ebp-0x1c],esi
1004fe99:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
1004fe9d:	jne    0x1004ff18
1004fe9f:	inc    edi
1004fea0:	jmp    0x1004fdd0
1004fea5:	push   0x40
1004fea7:	push   0x20
1004fea9:	call   0x100472ea
1004feae:	pop    ecx
1004feaf:	pop    ecx
1004feb0:	mov    DWORD PTR [ebp-0x20],eax
1004feb3:	test   eax,eax
1004feb5:	je     0x1004ff18
1004feb7:	lea    ecx,[edi*4+0x100844e0]
1004febe:	mov    DWORD PTR [ecx],eax
1004fec0:	add    DWORD PTR ds:0x100844c4,0x20
1004fec7:	mov    edx,DWORD PTR [ecx]
1004fec9:	add    edx,0x800
1004fecf:	cmp    eax,edx
1004fed1:	jae    0x1004feea
1004fed3:	mov    BYTE PTR [eax+0x4],0x0
1004fed7:	or     DWORD PTR [eax],0xffffffff
1004feda:	mov    BYTE PTR [eax+0x5],0xa
1004fede:	and    DWORD PTR [eax+0x8],0x0
1004fee2:	add    eax,0x40
1004fee5:	mov    DWORD PTR [ebp-0x20],eax
1004fee8:	jmp    0x1004fec7
1004feea:	shl    edi,0x5
1004feed:	mov    DWORD PTR [ebp-0x1c],edi
1004fef0:	mov    eax,edi
1004fef2:	sar    eax,0x5
1004fef5:	mov    ecx,edi
1004fef7:	and    ecx,0x1f
1004fefa:	shl    ecx,0x6
1004fefd:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1004ff04:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
1004ff09:	push   edi
1004ff0a:	call   0x1004fcda
1004ff0f:	pop    ecx
1004ff10:	test   eax,eax
1004ff12:	jne    0x1004ff18
1004ff14:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004ff18:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ff1f:	call   0x1004ff2d
1004ff24:	mov    eax,DWORD PTR [ebp-0x1c]
1004ff27:	call   0x10047761
1004ff2c:	ret    
1004ff2d:	push   0xb
1004ff2f:	call   0x10047d36
1004ff34:	pop    ecx
1004ff35:	ret    
1004ff36:	push   ebp
1004ff37:	mov    ebp,esp
1004ff39:	sub    esp,0x10
1004ff3c:	mov    eax,ds:0x100801ac
1004ff41:	xor    eax,ebp
1004ff43:	mov    DWORD PTR [ebp-0x4],eax
1004ff46:	push   esi
1004ff47:	xor    esi,esi
1004ff49:	cmp    DWORD PTR ds:0x10080e60,esi
1004ff4f:	je     0x1004ff9f
1004ff51:	cmp    DWORD PTR ds:0x10080f1c,0xfffffffe
1004ff58:	jne    0x1004ff5f
1004ff5a:	call   0x1005076a
1004ff5f:	mov    eax,ds:0x10080f1c
1004ff64:	cmp    eax,0xffffffff
1004ff67:	jne    0x1004ff6f
1004ff69:	or     ax,0xffff
1004ff6d:	jmp    0x1004ffdf
1004ff6f:	push   esi
1004ff70:	lea    ecx,[ebp-0x10]
1004ff73:	push   ecx
1004ff74:	push   0x1
1004ff76:	lea    ecx,[ebp+0x8]
1004ff79:	push   ecx
1004ff7a:	push   eax
1004ff7b:	call   DWORD PTR ds:0x1006725c
1004ff81:	test   eax,eax
1004ff83:	jne    0x1004ffec
1004ff85:	cmp    DWORD PTR ds:0x10080e60,0x2
1004ff8c:	jne    0x1004ff69
1004ff8e:	call   DWORD PTR ds:0x100670cc
1004ff94:	cmp    eax,0x78
1004ff97:	jne    0x1004ff69
1004ff99:	mov    DWORD PTR ds:0x10080e60,esi
1004ff9f:	push   esi
1004ffa0:	push   esi
1004ffa1:	push   0x5
1004ffa3:	lea    eax,[ebp-0xc]
1004ffa6:	push   eax
1004ffa7:	push   0x1
1004ffa9:	lea    eax,[ebp+0x8]
1004ffac:	push   eax
1004ffad:	push   esi
1004ffae:	call   DWORD PTR ds:0x10067258
1004ffb4:	push   eax
1004ffb5:	call   DWORD PTR ds:0x100670c4
1004ffbb:	mov    ecx,DWORD PTR ds:0x10080f1c
1004ffc1:	cmp    ecx,0xffffffff
1004ffc4:	je     0x1004ff69
1004ffc6:	push   esi
1004ffc7:	lea    edx,[ebp-0x10]
1004ffca:	push   edx
1004ffcb:	push   eax
1004ffcc:	lea    eax,[ebp-0xc]
1004ffcf:	push   eax
1004ffd0:	push   ecx
1004ffd1:	call   DWORD PTR ds:0x10067254
1004ffd7:	test   eax,eax
1004ffd9:	je     0x1004ff69
1004ffdb:	mov    ax,WORD PTR [ebp+0x8]
1004ffdf:	mov    ecx,DWORD PTR [ebp-0x4]
1004ffe2:	xor    ecx,ebp
1004ffe4:	pop    esi
1004ffe5:	call   0x10043615
1004ffea:	leave  
1004ffeb:	ret    
1004ffec:	mov    DWORD PTR ds:0x10080e60,0x1
1004fff6:	jmp    0x1004ffdb
1004fff8:	push   0x10
1004fffa:	push   0x10076038
1004ffff:	call   0x1004771c
10050004:	xor    ebx,ebx
10050006:	mov    DWORD PTR [ebp-0x1c],ebx
10050009:	push   0x1
1005000b:	call   0x10047e0e
10050010:	pop    ecx
10050011:	mov    DWORD PTR [ebp-0x4],ebx
10050014:	push   0x3
10050016:	pop    edi
10050017:	mov    DWORD PTR [ebp-0x20],edi
1005001a:	cmp    edi,DWORD PTR ds:0x100844c0
10050020:	jge    0x10050079
10050022:	mov    esi,edi
10050024:	shl    esi,0x2
10050027:	mov    eax,ds:0x100834b0
1005002c:	add    eax,esi
1005002e:	cmp    DWORD PTR [eax],ebx
10050030:	je     0x10050076
10050032:	mov    eax,DWORD PTR [eax]
10050034:	test   BYTE PTR [eax+0xc],0x83
10050038:	je     0x10050049
1005003a:	push   eax
1005003b:	call   0x10050828
10050040:	pop    ecx
10050041:	cmp    eax,0xffffffff
10050044:	je     0x10050049
10050046:	inc    DWORD PTR [ebp-0x1c]
10050049:	cmp    edi,0x14
1005004c:	jl     0x10050076
1005004e:	mov    eax,ds:0x100834b0
10050053:	mov    eax,DWORD PTR [esi+eax*1]
10050056:	add    eax,0x20
10050059:	push   eax
1005005a:	call   DWORD PTR ds:0x10067120
10050060:	mov    eax,ds:0x100834b0
10050065:	push   DWORD PTR [esi+eax*1]
10050068:	call   0x100437dc
1005006d:	pop    ecx
1005006e:	mov    eax,ds:0x100834b0
10050073:	mov    DWORD PTR [esi+eax*1],ebx
10050076:	inc    edi
10050077:	jmp    0x10050017
10050079:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050080:	call   0x1005008e
10050085:	mov    eax,DWORD PTR [ebp-0x1c]
10050088:	call   0x10047761
1005008d:	ret    
1005008e:	push   0x1
10050090:	call   0x10047d36
10050095:	pop    ecx
10050096:	ret    
10050097:	push   ebx
10050098:	push   esi
10050099:	mov    esi,DWORD PTR [esp+0xc]
1005009d:	mov    eax,DWORD PTR [esi+0xc]
100500a0:	mov    ecx,eax
100500a2:	and    cl,0x3
100500a5:	xor    ebx,ebx
100500a7:	cmp    cl,0x2
100500aa:	jne    0x100500eb
100500ac:	test   ax,0x108
100500b0:	je     0x100500eb
100500b2:	mov    eax,DWORD PTR [esi+0x8]
100500b5:	push   edi
100500b6:	mov    edi,DWORD PTR [esi]
100500b8:	sub    edi,eax
100500ba:	test   edi,edi
100500bc:	jle    0x100500ea
100500be:	push   edi
100500bf:	push   eax
100500c0:	push   esi
100500c1:	call   0x1004d460
100500c6:	pop    ecx
100500c7:	push   eax
100500c8:	call   0x1004d141
100500cd:	add    esp,0xc
100500d0:	cmp    eax,edi
100500d2:	jne    0x100500e3
100500d4:	mov    eax,DWORD PTR [esi+0xc]
100500d7:	test   al,al
100500d9:	jns    0x100500ea
100500db:	and    eax,0xfffffffd
100500de:	mov    DWORD PTR [esi+0xc],eax
100500e1:	jmp    0x100500ea
100500e3:	or     DWORD PTR [esi+0xc],0x20
100500e7:	or     ebx,0xffffffff
100500ea:	pop    edi
100500eb:	mov    eax,DWORD PTR [esi+0x8]
100500ee:	and    DWORD PTR [esi+0x4],0x0
100500f2:	mov    DWORD PTR [esi],eax
100500f4:	pop    esi
100500f5:	mov    eax,ebx
100500f7:	pop    ebx
100500f8:	ret    
100500f9:	push   esi
100500fa:	mov    esi,DWORD PTR [esp+0x8]
100500fe:	test   esi,esi
10050100:	jne    0x1005010b
10050102:	push   esi
10050103:	call   0x1005013b
10050108:	pop    ecx
10050109:	pop    esi
1005010a:	ret    
1005010b:	push   esi
1005010c:	call   0x10050097
10050111:	test   eax,eax
10050113:	pop    ecx
10050114:	je     0x1005011b
10050116:	or     eax,0xffffffff
10050119:	pop    esi
1005011a:	ret    
1005011b:	test   WORD PTR [esi+0xc],0x4000
10050121:	je     0x10050137
10050123:	push   esi
10050124:	call   0x1004d460
10050129:	push   eax
1005012a:	call   0x100508a4
1005012f:	pop    ecx
10050130:	pop    ecx
10050131:	neg    eax
10050133:	sbb    eax,eax
10050135:	pop    esi
10050136:	ret    
10050137:	xor    eax,eax
10050139:	pop    esi
1005013a:	ret    
1005013b:	push   0x14
1005013d:	push   0x10076058
10050142:	call   0x1004771c
10050147:	xor    edi,edi
10050149:	mov    DWORD PTR [ebp-0x1c],edi
1005014c:	mov    DWORD PTR [ebp-0x24],edi
1005014f:	push   0x1
10050151:	call   0x10047e0e
10050156:	pop    ecx
10050157:	mov    DWORD PTR [ebp-0x4],edi
1005015a:	xor    esi,esi
1005015c:	mov    DWORD PTR [ebp-0x20],esi
1005015f:	cmp    esi,DWORD PTR ds:0x100844c0
10050165:	jge    0x100501ee
1005016b:	mov    eax,ds:0x100834b0
10050170:	lea    eax,[eax+esi*4]
10050173:	cmp    DWORD PTR [eax],edi
10050175:	je     0x100501d5
10050177:	mov    eax,DWORD PTR [eax]
10050179:	test   BYTE PTR [eax+0xc],0x83
1005017d:	je     0x100501d5
1005017f:	push   eax
10050180:	push   esi
10050181:	call   0x1004d3d2
10050186:	pop    ecx
10050187:	pop    ecx
10050188:	xor    edx,edx
1005018a:	inc    edx
1005018b:	mov    DWORD PTR [ebp-0x4],edx
1005018e:	mov    eax,ds:0x100834b0
10050193:	mov    eax,DWORD PTR [eax+esi*4]
10050196:	mov    ecx,DWORD PTR [eax+0xc]
10050199:	test   cl,0x83
1005019c:	je     0x100501cd
1005019e:	cmp    DWORD PTR [ebp+0x8],edx
100501a1:	jne    0x100501b4
100501a3:	push   eax
100501a4:	call   0x100500f9
100501a9:	pop    ecx
100501aa:	cmp    eax,0xffffffff
100501ad:	je     0x100501cd
100501af:	inc    DWORD PTR [ebp-0x1c]
100501b2:	jmp    0x100501cd
100501b4:	cmp    DWORD PTR [ebp+0x8],edi
100501b7:	jne    0x100501cd
100501b9:	test   cl,0x2
100501bc:	je     0x100501cd
100501be:	push   eax
100501bf:	call   0x100500f9
100501c4:	pop    ecx
100501c5:	cmp    eax,0xffffffff
100501c8:	jne    0x100501cd
100501ca:	or     DWORD PTR [ebp-0x24],eax
100501cd:	mov    DWORD PTR [ebp-0x4],edi
100501d0:	call   0x100501dd
100501d5:	inc    esi
100501d6:	jmp    0x1005015c
100501d8:	xor    edi,edi
100501da:	mov    esi,DWORD PTR [ebp-0x20]
100501dd:	mov    eax,ds:0x100834b0
100501e2:	push   DWORD PTR [eax+esi*4]
100501e5:	push   esi
100501e6:	call   0x1004d436
100501eb:	pop    ecx
100501ec:	pop    ecx
100501ed:	ret    
100501ee:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100501f5:	call   0x1005020c
100501fa:	cmp    DWORD PTR [ebp+0x8],0x1
100501fe:	mov    eax,DWORD PTR [ebp-0x1c]
10050201:	je     0x10050206
10050203:	mov    eax,DWORD PTR [ebp-0x24]
10050206:	call   0x10047761
1005020b:	ret    
1005020c:	push   0x1
1005020e:	call   0x10047d36
10050213:	pop    ecx
10050214:	ret    
10050215:	push   0x1
10050217:	call   0x1005013b
1005021c:	pop    ecx
1005021d:	ret    
1005021e:	push   ebp
1005021f:	mov    ebp,esp
10050221:	push   ecx
10050222:	push   esi
10050223:	mov    esi,DWORD PTR [ebp+0xc]
10050226:	push   esi
10050227:	call   0x1004d460
1005022c:	mov    DWORD PTR [ebp+0xc],eax
1005022f:	mov    eax,DWORD PTR [esi+0xc]
10050232:	test   al,0x82
10050234:	pop    ecx
10050235:	jne    0x10050250
10050237:	call   0x10046c41
1005023c:	mov    DWORD PTR [eax],0x9
10050242:	or     DWORD PTR [esi+0xc],0x20
10050246:	mov    eax,0xffff
1005024b:	jmp    0x1005038b
10050250:	test   al,0x40
10050252:	je     0x10050261
10050254:	call   0x10046c41
10050259:	mov    DWORD PTR [eax],0x22
1005025f:	jmp    0x10050242
10050261:	test   al,0x1
10050263:	je     0x1005027c
10050265:	and    DWORD PTR [esi+0x4],0x0
10050269:	test   al,0x10
1005026b:	je     0x100502fc
10050271:	mov    ecx,DWORD PTR [esi+0x8]
10050274:	and    eax,0xfffffffe
10050277:	mov    DWORD PTR [esi],ecx
10050279:	mov    DWORD PTR [esi+0xc],eax
1005027c:	mov    eax,DWORD PTR [esi+0xc]
1005027f:	and    DWORD PTR [esi+0x4],0x0
10050283:	and    DWORD PTR [ebp-0x4],0x0
10050287:	push   ebx
10050288:	push   0x2
1005028a:	and    eax,0xffffffef
1005028d:	pop    ebx
1005028e:	or     eax,ebx
10050290:	test   ax,0x10c
10050294:	mov    DWORD PTR [esi+0xc],eax
10050297:	jne    0x100502c5
10050299:	call   0x1004d2bf
1005029e:	add    eax,0x20
100502a1:	cmp    esi,eax
100502a3:	je     0x100502b1
100502a5:	call   0x1004d2bf
100502aa:	add    eax,0x40
100502ad:	cmp    esi,eax
100502af:	jne    0x100502be
100502b1:	push   DWORD PTR [ebp+0xc]
100502b4:	call   0x1004d261
100502b9:	test   eax,eax
100502bb:	pop    ecx
100502bc:	jne    0x100502c5
100502be:	push   esi
100502bf:	call   0x1004d21d
100502c4:	pop    ecx
100502c5:	test   WORD PTR [esi+0xc],0x108
100502cb:	push   edi
100502cc:	je     0x10050355
100502d2:	mov    eax,DWORD PTR [esi+0x8]
100502d5:	mov    edi,DWORD PTR [esi]
100502d7:	lea    ecx,[eax+0x2]
100502da:	mov    DWORD PTR [esi],ecx
100502dc:	mov    ecx,DWORD PTR [esi+0x18]
100502df:	sub    edi,eax
100502e1:	sub    ecx,ebx
100502e3:	test   edi,edi
100502e5:	mov    DWORD PTR [esi+0x4],ecx
100502e8:	jle    0x10050307
100502ea:	push   edi
100502eb:	push   eax
100502ec:	push   DWORD PTR [ebp+0xc]
100502ef:	call   0x1004d141
100502f4:	add    esp,0xc
100502f7:	mov    DWORD PTR [ebp-0x4],eax
100502fa:	jmp    0x1005034a
100502fc:	or     eax,0x20
100502ff:	mov    DWORD PTR [esi+0xc],eax
10050302:	jmp    0x10050246
10050307:	mov    ecx,DWORD PTR [ebp+0xc]
1005030a:	cmp    ecx,0xffffffff
1005030d:	je     0x1005032a
1005030f:	cmp    ecx,0xfffffffe
10050312:	je     0x1005032a
10050314:	mov    eax,ecx
10050316:	and    eax,0x1f
10050319:	mov    edx,ecx
1005031b:	sar    edx,0x5
1005031e:	shl    eax,0x6
10050321:	add    eax,DWORD PTR [edx*4+0x100844e0]
10050328:	jmp    0x1005032f
1005032a:	mov    eax,0x100809d0
1005032f:	test   BYTE PTR [eax+0x4],0x20
10050333:	je     0x1005034a
10050335:	push   ebx
10050336:	push   0x0
10050338:	push   0x0
1005033a:	push   ecx
1005033b:	call   0x1004ca06
10050340:	and    eax,edx
10050342:	add    esp,0x10
10050345:	cmp    eax,0xffffffff
10050348:	je     0x10050377
1005034a:	mov    eax,DWORD PTR [esi+0x8]
1005034d:	mov    ebx,DWORD PTR [ebp+0x8]
10050350:	mov    WORD PTR [eax],bx
10050353:	jmp    0x10050372
10050355:	push   0x2
10050357:	lea    eax,[ebp-0x4]
1005035a:	push   eax
1005035b:	push   DWORD PTR [ebp+0xc]
1005035e:	mov    edi,ebx
10050360:	mov    ebx,DWORD PTR [ebp+0x8]
10050363:	mov    WORD PTR [ebp-0x4],bx
10050367:	call   0x1004d141
1005036c:	add    esp,0xc
1005036f:	mov    DWORD PTR [ebp-0x4],eax
10050372:	cmp    DWORD PTR [ebp-0x4],edi
10050375:	je     0x10050382
10050377:	or     DWORD PTR [esi+0xc],0x20
1005037b:	mov    eax,0xffff
10050380:	jmp    0x10050389
10050382:	mov    eax,ebx
10050384:	and    eax,0xffff
10050389:	pop    edi
1005038a:	pop    ebx
1005038b:	pop    esi
1005038c:	leave  
1005038d:	ret    
1005038e:	push   ebp
1005038f:	mov    ebp,esp
10050391:	sub    esp,0x10
10050394:	push   ebx
10050395:	push   esi
10050396:	mov    esi,DWORD PTR [ebp+0xc]
10050399:	xor    ebx,ebx
1005039b:	cmp    esi,ebx
1005039d:	push   edi
1005039e:	mov    edi,DWORD PTR [ebp+0x10]
100503a1:	jne    0x100503b4
100503a3:	cmp    edi,ebx
100503a5:	jbe    0x100503b4
100503a7:	mov    eax,DWORD PTR [ebp+0x8]
100503aa:	cmp    eax,ebx
100503ac:	je     0x100503b0
100503ae:	mov    DWORD PTR [eax],ebx
100503b0:	xor    eax,eax
100503b2:	jmp    0x10050433
100503b4:	mov    eax,DWORD PTR [ebp+0x8]
100503b7:	cmp    eax,ebx
100503b9:	je     0x100503be
100503bb:	or     DWORD PTR [eax],0xffffffff
100503be:	cmp    edi,0x7fffffff
100503c4:	jbe    0x100503e1
100503c6:	call   0x10046c41
100503cb:	push   0x16
100503cd:	pop    esi
100503ce:	push   ebx
100503cf:	push   ebx
100503d0:	push   ebx
100503d1:	push   ebx
100503d2:	push   ebx
100503d3:	mov    DWORD PTR [eax],esi
100503d5:	call   0x100435e1
100503da:	add    esp,0x14
100503dd:	mov    eax,esi
100503df:	jmp    0x10050433
100503e1:	push   DWORD PTR [ebp+0x18]
100503e4:	lea    ecx,[ebp-0x10]
100503e7:	call   0x100456a5
100503ec:	mov    eax,DWORD PTR [ebp-0x10]
100503ef:	cmp    DWORD PTR [eax+0x14],ebx
100503f2:	jne    0x1005048c
100503f8:	mov    ax,WORD PTR [ebp+0x14]
100503fc:	cmp    ax,0xff
10050400:	jbe    0x10050438
10050402:	cmp    esi,ebx
10050404:	je     0x10050415
10050406:	cmp    edi,ebx
10050408:	jbe    0x10050415
1005040a:	push   edi
1005040b:	push   ebx
1005040c:	push   esi
1005040d:	call   0x10045dc0
10050412:	add    esp,0xc
10050415:	call   0x10046c41
1005041a:	mov    DWORD PTR [eax],0x2a
10050420:	call   0x10046c41
10050425:	cmp    BYTE PTR [ebp-0x4],bl
10050428:	mov    eax,DWORD PTR [eax]
1005042a:	je     0x10050433
1005042c:	mov    ecx,DWORD PTR [ebp-0x8]
1005042f:	and    DWORD PTR [ecx+0x70],0xfffffffd
10050433:	pop    edi
10050434:	pop    esi
10050435:	pop    ebx
10050436:	leave  
10050437:	ret    
10050438:	cmp    esi,ebx
1005043a:	je     0x1005046a
1005043c:	cmp    edi,ebx
1005043e:	ja     0x10050468
10050440:	call   0x10046c41
10050445:	push   0x22
10050447:	pop    esi
10050448:	push   ebx
10050449:	push   ebx
1005044a:	push   ebx
1005044b:	push   ebx
1005044c:	push   ebx
1005044d:	mov    DWORD PTR [eax],esi
1005044f:	call   0x100435e1
10050454:	add    esp,0x14
10050457:	cmp    BYTE PTR [ebp-0x4],bl
1005045a:	je     0x100503dd
1005045c:	mov    eax,DWORD PTR [ebp-0x8]
1005045f:	and    DWORD PTR [eax+0x70],0xfffffffd
10050463:	jmp    0x100503dd
10050468:	mov    BYTE PTR [esi],al
1005046a:	mov    eax,DWORD PTR [ebp+0x8]
1005046d:	cmp    eax,ebx
1005046f:	je     0x10050477
10050471:	mov    DWORD PTR [eax],0x1
10050477:	cmp    BYTE PTR [ebp-0x4],bl
1005047a:	je     0x100503b0
10050480:	mov    eax,DWORD PTR [ebp-0x8]
10050483:	and    DWORD PTR [eax+0x70],0xfffffffd
10050487:	jmp    0x100503b0
1005048c:	lea    ecx,[ebp+0xc]
1005048f:	push   ecx
10050490:	push   ebx
10050491:	push   edi
10050492:	push   esi
10050493:	push   0x1
10050495:	lea    ecx,[ebp+0x14]
10050498:	push   ecx
10050499:	push   ebx
1005049a:	mov    DWORD PTR [ebp+0xc],ebx
1005049d:	push   DWORD PTR [eax+0x4]
100504a0:	call   DWORD PTR ds:0x100670c4
100504a6:	cmp    eax,ebx
100504a8:	je     0x100504be
100504aa:	cmp    DWORD PTR [ebp+0xc],ebx
100504ad:	jne    0x10050415
100504b3:	mov    ecx,DWORD PTR [ebp+0x8]
100504b6:	cmp    ecx,ebx
100504b8:	je     0x10050477
100504ba:	mov    DWORD PTR [ecx],eax
100504bc:	jmp    0x10050477
100504be:	call   DWORD PTR ds:0x100670cc
100504c4:	cmp    eax,0x7a
100504c7:	jne    0x10050415
100504cd:	cmp    esi,ebx
100504cf:	je     0x10050440
100504d5:	cmp    edi,ebx
100504d7:	jbe    0x10050440
100504dd:	push   edi
100504de:	push   ebx
100504df:	push   esi
100504e0:	call   0x10045dc0
100504e5:	add    esp,0xc
100504e8:	jmp    0x10050440
100504ed:	push   0x0
100504ef:	push   DWORD PTR [esp+0x14]
100504f3:	push   DWORD PTR [esp+0x14]
100504f7:	push   DWORD PTR [esp+0x14]
100504fb:	push   DWORD PTR [esp+0x14]
100504ff:	call   0x1005038e
10050504:	add    esp,0x14
10050507:	ret    
10050508:	push   ebp
10050509:	mov    ebp,esp
1005050b:	sub    esp,0x10
1005050e:	mov    eax,ds:0x100801ac
10050513:	xor    eax,ebp
10050515:	mov    DWORD PTR [ebp-0x4],eax
10050518:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1005051c:	push   ebx
1005051d:	push   esi
1005051e:	push   edi
1005051f:	jge    0x10050528
10050521:	xor    eax,eax
10050523:	jmp    0x1005071a
10050528:	mov    eax,ds:0x100825b0
1005052d:	mov    esi,DWORD PTR ds:0x10067240
10050533:	xor    ebx,ebx
10050535:	xor    edi,edi
10050537:	inc    ebx
10050538:	cmp    eax,edi
1005053a:	jne    0x1005056f
1005053c:	lea    eax,[ebp-0x8]
1005053f:	push   eax
10050540:	push   ebx
10050541:	push   0x10067cd8
10050546:	push   ebx
10050547:	call   esi
10050549:	test   eax,eax
1005054b:	je     0x10050555
1005054d:	mov    DWORD PTR ds:0x100825b0,ebx
10050553:	jmp    0x10050573
10050555:	call   DWORD PTR ds:0x100670cc
1005055b:	cmp    eax,0x78
1005055e:	jne    0x1005056a
10050560:	push   0x2
10050562:	pop    eax
10050563:	mov    ds:0x100825b0,eax
10050568:	jmp    0x1005056f
1005056a:	mov    eax,ds:0x100825b0
1005056f:	cmp    eax,ebx
10050571:	jne    0x10050586
10050573:	push   DWORD PTR [ebp+0x18]
10050576:	push   DWORD PTR [ebp+0x14]
10050579:	push   DWORD PTR [ebp+0x10]
1005057c:	push   DWORD PTR [ebp+0xc]
1005057f:	call   esi
10050581:	jmp    0x1005071a
10050586:	cmp    eax,0x2
10050589:	je     0x1005058f
1005058b:	cmp    eax,edi
1005058d:	jne    0x10050521
1005058f:	cmp    DWORD PTR [ebp+0x20],edi
10050592:	mov    DWORD PTR [ebp-0xc],edi
10050595:	jne    0x100505a2
10050597:	mov    eax,DWORD PTR [ebp+0x8]
1005059a:	mov    eax,DWORD PTR [eax]
1005059c:	mov    eax,DWORD PTR [eax+0x14]
1005059f:	mov    DWORD PTR [ebp+0x20],eax
100505a2:	cmp    DWORD PTR [ebp+0x1c],edi
100505a5:	jne    0x100505b2
100505a7:	mov    eax,DWORD PTR [ebp+0x8]
100505aa:	mov    eax,DWORD PTR [eax]
100505ac:	mov    eax,DWORD PTR [eax+0x4]
100505af:	mov    DWORD PTR [ebp+0x1c],eax
100505b2:	push   DWORD PTR [ebp+0x20]
100505b5:	call   0x1004f70e
100505ba:	cmp    DWORD PTR [ebp+0x1c],eax
100505bd:	pop    ecx
100505be:	je     0x100505c8
100505c0:	cmp    eax,0xffffffff
100505c3:	je     0x100505c8
100505c5:	mov    DWORD PTR [ebp+0x1c],eax
100505c8:	mov    ebx,DWORD PTR ds:0x100670c4
100505ce:	push   edi
100505cf:	push   edi
100505d0:	push   edi
100505d1:	push   edi
100505d2:	push   DWORD PTR [ebp+0x14]
100505d5:	push   DWORD PTR [ebp+0x10]
100505d8:	push   edi
100505d9:	push   DWORD PTR [ebp+0x1c]
100505dc:	call   ebx
100505de:	mov    esi,eax
100505e0:	cmp    esi,edi
100505e2:	mov    DWORD PTR [ebp-0x10],esi
100505e5:	je     0x10050521
100505eb:	jle    0x10050628
100505ed:	cmp    esi,0xffffffe0
100505f0:	ja     0x10050628
100505f2:	lea    eax,[esi+0x8]
100505f5:	cmp    eax,0x400
100505fa:	ja     0x1005060f
100505fc:	call   0x1004b9b0
10050601:	mov    eax,esp
10050603:	cmp    eax,edi
10050605:	je     0x10050623
10050607:	mov    DWORD PTR [eax],0xcccc
1005060d:	jmp    0x10050620
1005060f:	push   eax
10050610:	call   0x10045143
10050615:	cmp    eax,edi
10050617:	pop    ecx
10050618:	je     0x10050623
1005061a:	mov    DWORD PTR [eax],0xdddd
10050620:	add    eax,0x8
10050623:	mov    DWORD PTR [ebp-0x8],eax
10050626:	jmp    0x1005062b
10050628:	mov    DWORD PTR [ebp-0x8],edi
1005062b:	cmp    DWORD PTR [ebp-0x8],edi
1005062e:	je     0x10050521
10050634:	push   esi
10050635:	push   edi
10050636:	push   DWORD PTR [ebp-0x8]
10050639:	call   0x10045dc0
1005063e:	add    esp,0xc
10050641:	push   edi
10050642:	push   edi
10050643:	push   esi
10050644:	push   DWORD PTR [ebp-0x8]
10050647:	push   DWORD PTR [ebp+0x14]
1005064a:	push   DWORD PTR [ebp+0x10]
1005064d:	push   edi
1005064e:	push   DWORD PTR [ebp+0x1c]
10050651:	call   ebx
10050653:	test   eax,eax
10050655:	je     0x1005070e
1005065b:	lea    eax,[esi+0x1]
1005065e:	cmp    eax,edi
10050660:	jle    0x100506a6
10050662:	cmp    eax,0x7ffffff0
10050667:	ja     0x100506a6
10050669:	lea    eax,[esi+esi*1+0xa]
1005066d:	cmp    eax,0x400
10050672:	ja     0x1005068e
10050674:	call   0x1004b9b0
10050679:	mov    ebx,esp
1005067b:	cmp    ebx,edi
1005067d:	je     0x1005070e
10050683:	mov    DWORD PTR [ebx],0xcccc
10050689:	add    ebx,0x8
1005068c:	jmp    0x100506a8
1005068e:	push   eax
1005068f:	call   0x10045143
10050694:	cmp    eax,edi
10050696:	pop    ecx
10050697:	je     0x100506a2
10050699:	mov    DWORD PTR [eax],0xdddd
1005069f:	add    eax,0x8
100506a2:	mov    ebx,eax
100506a4:	jmp    0x100506a8
100506a6:	xor    ebx,ebx
100506a8:	cmp    ebx,edi
100506aa:	je     0x1005070e
100506ac:	cmp    DWORD PTR [ebp+0x20],edi
100506af:	jne    0x100506bc
100506b1:	mov    eax,DWORD PTR [ebp+0x8]
100506b4:	mov    eax,DWORD PTR [eax]
100506b6:	mov    eax,DWORD PTR [eax+0x14]
100506b9:	mov    DWORD PTR [ebp+0x20],eax
100506bc:	mov    edi,DWORD PTR [ebp+0x14]
100506bf:	push   ebx
100506c0:	push   DWORD PTR [ebp-0x10]
100506c3:	add    edi,edi
100506c5:	push   DWORD PTR [ebp-0x8]
100506c8:	lea    esi,[edi+ebx*1]
100506cb:	push   DWORD PTR [ebp+0xc]
100506ce:	or     WORD PTR [esi],0xffff
100506d3:	push   DWORD PTR [ebp+0x20]
100506d6:	or     WORD PTR [esi-0x2],0xffff
100506dc:	call   DWORD PTR ds:0x1006723c
100506e2:	cmp    WORD PTR [esi-0x2],0xffff
100506e8:	mov    DWORD PTR [ebp-0xc],eax
100506eb:	je     0x10050703
100506ed:	cmp    WORD PTR [esi],0xffff
100506f2:	jne    0x10050703
100506f4:	push   edi
100506f5:	push   ebx
100506f6:	push   DWORD PTR [ebp+0x18]
100506f9:	call   0x10045880
100506fe:	add    esp,0xc
10050701:	jmp    0x10050707
10050703:	and    DWORD PTR [ebp-0xc],0x0
10050707:	push   ebx
10050708:	call   0x1001b64a
1005070d:	pop    ecx
1005070e:	push   DWORD PTR [ebp-0x8]
10050711:	call   0x1001b64a
10050716:	mov    eax,DWORD PTR [ebp-0xc]
10050719:	pop    ecx
1005071a:	lea    esp,[ebp-0x1c]
1005071d:	pop    edi
1005071e:	pop    esi
1005071f:	pop    ebx
10050720:	mov    ecx,DWORD PTR [ebp-0x4]
10050723:	xor    ecx,ebp
10050725:	call   0x10043615
1005072a:	leave  
1005072b:	ret    
1005072c:	push   ebp
1005072d:	mov    ebp,esp
1005072f:	sub    esp,0x10
10050732:	push   DWORD PTR [ebp+0x8]
10050735:	lea    ecx,[ebp-0x10]
10050738:	call   0x100456a5
1005073d:	push   DWORD PTR [ebp+0x20]
10050740:	lea    eax,[ebp-0x10]
10050743:	push   DWORD PTR [ebp+0x1c]
10050746:	push   DWORD PTR [ebp+0x18]
10050749:	push   DWORD PTR [ebp+0x14]
1005074c:	push   DWORD PTR [ebp+0x10]
1005074f:	push   DWORD PTR [ebp+0xc]
10050752:	push   eax
10050753:	call   0x10050508
10050758:	add    esp,0x1c
1005075b:	cmp    BYTE PTR [ebp-0x4],0x0
1005075f:	je     0x10050768
10050761:	mov    ecx,DWORD PTR [ebp-0x8]
10050764:	and    DWORD PTR [ecx+0x70],0xfffffffd
10050768:	leave  
10050769:	ret    
1005076a:	xor    eax,eax
1005076c:	push   eax
1005076d:	push   eax
1005076e:	push   0x3
10050770:	push   eax
10050771:	push   0x3
10050773:	push   0x40000000
10050778:	push   0x10068ecc
1005077d:	call   DWORD PTR ds:0x10067260
10050783:	mov    ds:0x10080f1c,eax
10050788:	ret    
10050789:	mov    eax,ds:0x10080f1c
1005078e:	cmp    eax,0xffffffff
10050791:	push   esi
10050792:	mov    esi,DWORD PTR ds:0x10067078
10050798:	je     0x100507a2
1005079a:	cmp    eax,0xfffffffe
1005079d:	je     0x100507a2
1005079f:	push   eax
100507a0:	call   esi
100507a2:	mov    eax,ds:0x10080f18
100507a7:	cmp    eax,0xffffffff
100507aa:	je     0x100507b4
100507ac:	cmp    eax,0xfffffffe
100507af:	je     0x100507b4
100507b1:	push   eax
100507b2:	call   esi
100507b4:	pop    esi
100507b5:	ret    
100507b6:	push   ebx
100507b7:	push   esi
100507b8:	mov    esi,DWORD PTR [esp+0xc]
100507bc:	push   edi
100507bd:	xor    edi,edi
100507bf:	or     ebx,0xffffffff
100507c2:	cmp    esi,edi
100507c4:	jne    0x100507e2
100507c6:	call   0x10046c41
100507cb:	push   edi
100507cc:	push   edi
100507cd:	push   edi
100507ce:	push   edi
100507cf:	push   edi
100507d0:	mov    DWORD PTR [eax],0x16
100507d6:	call   0x100435e1
100507db:	add    esp,0x14
100507de:	or     eax,ebx
100507e0:	jmp    0x10050824
100507e2:	test   BYTE PTR [esi+0xc],0x83
100507e6:	je     0x1005081f
100507e8:	push   esi
100507e9:	call   0x10050097
100507ee:	push   esi
100507ef:	mov    ebx,eax
100507f1:	call   0x10050b55
100507f6:	push   esi
100507f7:	call   0x1004d460
100507fc:	push   eax
100507fd:	call   0x10050a88
10050802:	add    esp,0x10
10050805:	test   eax,eax
10050807:	jge    0x1005080e
10050809:	or     ebx,0xffffffff
1005080c:	jmp    0x1005081f
1005080e:	mov    eax,DWORD PTR [esi+0x1c]
10050811:	cmp    eax,edi
10050813:	je     0x1005081f
10050815:	push   eax
10050816:	call   0x100437dc
1005081b:	pop    ecx
1005081c:	mov    DWORD PTR [esi+0x1c],edi
1005081f:	mov    DWORD PTR [esi+0xc],edi
10050822:	mov    eax,ebx
10050824:	pop    edi
10050825:	pop    esi
10050826:	pop    ebx
10050827:	ret    
10050828:	push   0xc
1005082a:	push   0x10076080
1005082f:	call   0x1004771c
10050834:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050838:	xor    eax,eax
1005083a:	mov    esi,DWORD PTR [ebp+0x8]
1005083d:	xor    edi,edi
1005083f:	cmp    esi,edi
10050841:	setne  al
10050844:	cmp    eax,edi
10050846:	jne    0x10050865
10050848:	call   0x10046c41
1005084d:	mov    DWORD PTR [eax],0x16
10050853:	push   edi
10050854:	push   edi
10050855:	push   edi
10050856:	push   edi
10050857:	push   edi
10050858:	call   0x100435e1
1005085d:	add    esp,0x14
10050860:	or     eax,0xffffffff
10050863:	jmp    0x10050871
10050865:	test   BYTE PTR [esi+0xc],0x40
10050869:	je     0x10050877
1005086b:	mov    DWORD PTR [esi+0xc],edi
1005086e:	mov    eax,DWORD PTR [ebp-0x1c]
10050871:	call   0x10047761
10050876:	ret    
10050877:	push   esi
10050878:	call   0x1004d396
1005087d:	pop    ecx
1005087e:	mov    DWORD PTR [ebp-0x4],edi
10050881:	push   esi
10050882:	call   0x100507b6
10050887:	pop    ecx
10050888:	mov    DWORD PTR [ebp-0x1c],eax
1005088b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050892:	call   0x1005089c
10050897:	jmp    0x1005086e
10050899:	mov    esi,DWORD PTR [ebp+0x8]
1005089c:	push   esi
1005089d:	call   0x1004d400
100508a2:	pop    ecx
100508a3:	ret    
100508a4:	push   0x10
100508a6:	push   0x100760a0
100508ab:	call   0x1004771c
100508b0:	mov    eax,DWORD PTR [ebp+0x8]
100508b3:	cmp    eax,0xfffffffe
100508b6:	jne    0x100508cb
100508b8:	call   0x10046c41
100508bd:	mov    DWORD PTR [eax],0x9
100508c3:	or     eax,0xffffffff
100508c6:	jmp    0x10050975
100508cb:	xor    ebx,ebx
100508cd:	cmp    eax,ebx
100508cf:	jl     0x100508d9
100508d1:	cmp    eax,DWORD PTR ds:0x100844c4
100508d7:	jb     0x100508f3
100508d9:	call   0x10046c41
100508de:	mov    DWORD PTR [eax],0x9
100508e4:	push   ebx
100508e5:	push   ebx
100508e6:	push   ebx
100508e7:	push   ebx
100508e8:	push   ebx
100508e9:	call   0x100435e1
100508ee:	add    esp,0x14
100508f1:	jmp    0x100508c3
100508f3:	mov    ecx,eax
100508f5:	sar    ecx,0x5
100508f8:	lea    edi,[ecx*4+0x100844e0]
100508ff:	mov    esi,eax
10050901:	and    esi,0x1f
10050904:	shl    esi,0x6
10050907:	mov    ecx,DWORD PTR [edi]
10050909:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
1005090e:	and    ecx,0x1
10050911:	je     0x100508d9
10050913:	push   eax
10050914:	call   0x1004fcda
10050919:	pop    ecx
1005091a:	mov    DWORD PTR [ebp-0x4],ebx
1005091d:	mov    eax,DWORD PTR [edi]
1005091f:	test   BYTE PTR [esi+eax*1+0x4],0x1
10050924:	je     0x10050957
10050926:	push   DWORD PTR [ebp+0x8]
10050929:	call   0x1004fc69
1005092e:	pop    ecx
1005092f:	push   eax
10050930:	call   DWORD PTR ds:0x100670d8
10050936:	test   eax,eax
10050938:	jne    0x10050945
1005093a:	call   DWORD PTR ds:0x100670cc
10050940:	mov    DWORD PTR [ebp-0x1c],eax
10050943:	jmp    0x10050948
10050945:	mov    DWORD PTR [ebp-0x1c],ebx
10050948:	cmp    DWORD PTR [ebp-0x1c],ebx
1005094b:	je     0x10050966
1005094d:	call   0x10046c54
10050952:	mov    ecx,DWORD PTR [ebp-0x1c]
10050955:	mov    DWORD PTR [eax],ecx
10050957:	call   0x10046c41
1005095c:	mov    DWORD PTR [eax],0x9
10050962:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050966:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005096d:	call   0x1005097b
10050972:	mov    eax,DWORD PTR [ebp-0x1c]
10050975:	call   0x10047761
1005097a:	ret    
1005097b:	push   DWORD PTR [ebp+0x8]
1005097e:	call   0x1004fd7a
10050983:	pop    ecx
10050984:	ret    
10050985:	int3   
10050986:	int3   
10050987:	int3   
10050988:	int3   
10050989:	int3   
1005098a:	int3   
1005098b:	int3   
1005098c:	int3   
1005098d:	int3   
1005098e:	int3   
1005098f:	int3   
10050990:	push   ebp
10050991:	mov    ebp,esp
10050993:	push   edi
10050994:	push   esi
10050995:	push   ebx
10050996:	mov    ecx,DWORD PTR [ebp+0x10]
10050999:	or     ecx,ecx
1005099b:	je     0x100509ea
1005099d:	mov    esi,DWORD PTR [ebp+0x8]
100509a0:	mov    edi,DWORD PTR [ebp+0xc]
100509a3:	mov    bh,0x41
100509a5:	mov    bl,0x5a
100509a7:	mov    dh,0x20
100509a9:	lea    ecx,[ecx+0x0]
100509ac:	mov    ah,BYTE PTR [esi]
100509ae:	or     ah,ah
100509b0:	mov    al,BYTE PTR [edi]
100509b2:	je     0x100509db
100509b4:	or     al,al
100509b6:	je     0x100509db
100509b8:	add    esi,0x1
100509bb:	add    edi,0x1
100509be:	cmp    ah,bh
100509c0:	jb     0x100509c8
100509c2:	cmp    ah,bl
100509c4:	ja     0x100509c8
100509c6:	add    ah,dh
100509c8:	cmp    al,bh
100509ca:	jb     0x100509d2
100509cc:	cmp    al,bl
100509ce:	ja     0x100509d2
100509d0:	add    al,dh
100509d2:	cmp    ah,al
100509d4:	jne    0x100509e1
100509d6:	sub    ecx,0x1
100509d9:	jne    0x100509ac
100509db:	xor    ecx,ecx
100509dd:	cmp    ah,al
100509df:	je     0x100509ea
100509e1:	mov    ecx,0xffffffff
100509e6:	jb     0x100509ea
100509e8:	neg    ecx
100509ea:	mov    eax,ecx
100509ec:	pop    ebx
100509ed:	pop    esi
100509ee:	pop    edi
100509ef:	leave  
100509f0:	ret    
100509f1:	push   esi
100509f2:	mov    esi,DWORD PTR [esp+0x8]
100509f6:	push   edi
100509f7:	push   esi
100509f8:	call   0x1004fc69
100509fd:	cmp    eax,0xffffffff
10050a00:	pop    ecx
10050a01:	je     0x10050a53
10050a03:	cmp    esi,0x1
10050a06:	mov    eax,ds:0x100844e0
10050a0b:	jne    0x10050a16
10050a0d:	test   BYTE PTR [eax+0x84],0x1
10050a14:	jne    0x10050a21
10050a16:	cmp    esi,0x2
10050a19:	jne    0x10050a37
10050a1b:	test   BYTE PTR [eax+0x44],0x1
10050a1f:	je     0x10050a37
10050a21:	push   0x2
10050a23:	call   0x1004fc69
10050a28:	push   0x1
10050a2a:	mov    edi,eax
10050a2c:	call   0x1004fc69
10050a31:	cmp    eax,edi
10050a33:	pop    ecx
10050a34:	pop    ecx
10050a35:	je     0x10050a53
10050a37:	push   esi
10050a38:	call   0x1004fc69
10050a3d:	pop    ecx
10050a3e:	push   eax
10050a3f:	call   DWORD PTR ds:0x10067078
10050a45:	test   eax,eax
10050a47:	jne    0x10050a53
10050a49:	call   DWORD PTR ds:0x100670cc
10050a4f:	mov    edi,eax
10050a51:	jmp    0x10050a55
10050a53:	xor    edi,edi
10050a55:	push   esi
10050a56:	call   0x1004fbe8
10050a5b:	mov    eax,esi
10050a5d:	sar    eax,0x5
10050a60:	mov    eax,DWORD PTR [eax*4+0x100844e0]
10050a67:	and    esi,0x1f
10050a6a:	shl    esi,0x6
10050a6d:	test   edi,edi
10050a6f:	pop    ecx
10050a70:	mov    BYTE PTR [eax+esi*1+0x4],0x0
10050a75:	je     0x10050a83
10050a77:	push   edi
10050a78:	call   0x10046c67
10050a7d:	pop    ecx
10050a7e:	or     eax,0xffffffff
10050a81:	jmp    0x10050a85
10050a83:	xor    eax,eax
10050a85:	pop    edi
10050a86:	pop    esi
10050a87:	ret    
10050a88:	push   0x10
10050a8a:	push   0x100760c0
10050a8f:	call   0x1004771c
10050a94:	mov    eax,DWORD PTR [ebp+0x8]
10050a97:	cmp    eax,0xfffffffe
10050a9a:	jne    0x10050ab7
10050a9c:	call   0x10046c54
10050aa1:	and    DWORD PTR [eax],0x0
10050aa4:	call   0x10046c41
10050aa9:	mov    DWORD PTR [eax],0x9
10050aaf:	or     eax,0xffffffff
10050ab2:	jmp    0x10050b45
10050ab7:	xor    edi,edi
10050ab9:	cmp    eax,edi
10050abb:	jl     0x10050ac5
10050abd:	cmp    eax,DWORD PTR ds:0x100844c4
10050ac3:	jb     0x10050ae6
10050ac5:	call   0x10046c54
10050aca:	mov    DWORD PTR [eax],edi
10050acc:	call   0x10046c41
10050ad1:	mov    DWORD PTR [eax],0x9
10050ad7:	push   edi
10050ad8:	push   edi
10050ad9:	push   edi
10050ada:	push   edi
10050adb:	push   edi
10050adc:	call   0x100435e1
10050ae1:	add    esp,0x14
10050ae4:	jmp    0x10050aaf
10050ae6:	mov    ecx,eax
10050ae8:	sar    ecx,0x5
10050aeb:	lea    ebx,[ecx*4+0x100844e0]
10050af2:	mov    esi,eax
10050af4:	and    esi,0x1f
10050af7:	shl    esi,0x6
10050afa:	mov    ecx,DWORD PTR [ebx]
10050afc:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10050b01:	and    ecx,0x1
10050b04:	je     0x10050ac5
10050b06:	push   eax
10050b07:	call   0x1004fcda
10050b0c:	pop    ecx
10050b0d:	mov    DWORD PTR [ebp-0x4],edi
10050b10:	mov    eax,DWORD PTR [ebx]
10050b12:	test   BYTE PTR [eax+esi*1+0x4],0x1
10050b17:	je     0x10050b27
10050b19:	push   DWORD PTR [ebp+0x8]
10050b1c:	call   0x100509f1
10050b21:	pop    ecx
10050b22:	mov    DWORD PTR [ebp-0x1c],eax
10050b25:	jmp    0x10050b36
10050b27:	call   0x10046c41
10050b2c:	mov    DWORD PTR [eax],0x9
10050b32:	or     DWORD PTR [ebp-0x1c],0xffffffff
10050b36:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050b3d:	call   0x10050b4b
10050b42:	mov    eax,DWORD PTR [ebp-0x1c]
10050b45:	call   0x10047761
10050b4a:	ret    
10050b4b:	push   DWORD PTR [ebp+0x8]
10050b4e:	call   0x1004fd7a
10050b53:	pop    ecx
10050b54:	ret    
10050b55:	push   esi
10050b56:	mov    esi,DWORD PTR [esp+0x8]
10050b5a:	mov    eax,DWORD PTR [esi+0xc]
10050b5d:	test   al,0x83
10050b5f:	je     0x10050b7f
10050b61:	test   al,0x8
10050b63:	je     0x10050b7f
10050b65:	push   DWORD PTR [esi+0x8]
10050b68:	call   0x100437dc
10050b6d:	and    DWORD PTR [esi+0xc],0xfffffbf7
10050b74:	xor    eax,eax
10050b76:	pop    ecx
10050b77:	mov    DWORD PTR [esi],eax
10050b79:	mov    DWORD PTR [esi+0x8],eax
10050b7c:	mov    DWORD PTR [esi+0x4],eax
10050b7f:	pop    esi
10050b80:	ret    
10050b81:	xor    eax,eax
10050b83:	cmp    DWORD PTR [esp+0x8],eax
10050b87:	jbe    0x10050b9a
10050b89:	mov    ecx,DWORD PTR [esp+0x4]
10050b8d:	cmp    BYTE PTR [ecx],0x0
10050b90:	je     0x10050b9a
10050b92:	inc    eax
10050b93:	inc    ecx
10050b94:	cmp    eax,DWORD PTR [esp+0x8]
10050b98:	jb     0x10050b8d
10050b9a:	ret    
10050b9b:	int3   
10050b9c:	int3   
10050b9d:	int3   
10050b9e:	int3   
10050b9f:	int3   
10050ba0:	push   ebp
10050ba1:	mov    ebp,esp
10050ba3:	push   0xfffffffe
10050ba5:	push   0x100760e0
10050baa:	push   0x10047780
10050baf:	mov    eax,fs:0x0
10050bb5:	push   eax
10050bb6:	sub    esp,0x18
10050bb9:	mov    eax,ds:0x100801ac
10050bbe:	xor    DWORD PTR [ebp-0x8],eax
10050bc1:	xor    eax,ebp
10050bc3:	mov    DWORD PTR [ebp-0x1c],eax
10050bc6:	push   ebx
10050bc7:	push   esi
10050bc8:	push   edi
10050bc9:	push   eax
10050bca:	lea    eax,[ebp-0x10]
10050bcd:	mov    fs:0x0,eax
10050bd3:	mov    DWORD PTR [ebp-0x18],esp
10050bd6:	mov    esi,DWORD PTR [ebp+0x8]
10050bd9:	test   esi,esi
10050bdb:	je     0x10050c32
10050bdd:	push   esi
10050bde:	call   DWORD PTR ds:0x100670e8
10050be4:	mov    edi,eax
10050be6:	add    edi,0x1
10050be9:	mov    DWORD PTR [ebp-0x20],edi
10050bec:	push   0x0
10050bee:	push   0x0
10050bf0:	push   edi
10050bf1:	push   esi
10050bf2:	push   0x0
10050bf4:	push   0x0
10050bf6:	call   DWORD PTR ds:0x1006708c
10050bfc:	mov    esi,eax
10050bfe:	mov    DWORD PTR [ebp-0x28],esi
10050c01:	test   esi,esi
10050c03:	jne    0x10050c39
10050c05:	mov    esi,DWORD PTR ds:0x100670cc
10050c0b:	call   esi
10050c0d:	test   eax,eax
10050c0f:	jg     0x10050c20
10050c11:	call   esi
10050c13:	push   eax
10050c14:	call   0x10050e90
10050c19:	xor    eax,eax
10050c1b:	jmp    0x10050d00
10050c20:	call   esi
10050c22:	and    eax,0xffff
10050c27:	or     eax,0x80070000
10050c2c:	push   eax
10050c2d:	call   0x10050e90
10050c32:	xor    eax,eax
10050c34:	jmp    0x10050d00
10050c39:	mov    DWORD PTR [ebp-0x4],0x0
10050c40:	lea    eax,[esi+esi*1]
10050c43:	cmp    esi,0x1000
10050c49:	jge    0x10050c63
10050c4b:	call   0x1004b9b0
10050c50:	mov    DWORD PTR [ebp-0x18],esp
10050c53:	mov    eax,esp
10050c55:	mov    ebx,eax
10050c57:	mov    DWORD PTR [ebp-0x24],ebx
10050c5a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c61:	jmp    0x10050c95
10050c63:	push   eax
10050c64:	call   0x10045143
10050c69:	add    esp,0x4
10050c6c:	mov    ebx,eax
10050c6e:	mov    DWORD PTR [ebp-0x24],ebx
10050c71:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c78:	jmp    0x10050c95
10050c7a:	mov    eax,0x1
10050c7f:	ret    
10050c80:	mov    esp,DWORD PTR [ebp-0x18]
10050c83:	xor    ebx,ebx
10050c85:	mov    DWORD PTR [ebp-0x24],ebx
10050c88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10050c8f:	mov    edi,DWORD PTR [ebp-0x20]
10050c92:	mov    esi,DWORD PTR [ebp-0x28]
10050c95:	test   ebx,ebx
10050c97:	jne    0x10050ca7
10050c99:	push   0x8007000e
10050c9e:	call   0x10050e90
10050ca3:	xor    eax,eax
10050ca5:	jmp    0x10050d00
10050ca7:	push   esi
10050ca8:	push   ebx
10050ca9:	push   edi
10050caa:	mov    ecx,DWORD PTR [ebp+0x8]
10050cad:	push   ecx
10050cae:	push   0x0
10050cb0:	push   0x0
10050cb2:	call   DWORD PTR ds:0x1006708c
10050cb8:	test   eax,eax
10050cba:	jne    0x10050cd6
10050cbc:	cmp    esi,0x1000
10050cc2:	jl     0x10050c05
10050cc8:	push   ebx
10050cc9:	call   0x100437dc
10050cce:	add    esp,0x4
10050cd1:	jmp    0x10050c05
10050cd6:	push   ebx
10050cd7:	call   DWORD PTR ds:0x100672ac
10050cdd:	mov    edi,eax
10050cdf:	cmp    esi,0x1000
10050ce5:	jl     0x10050cf0
10050ce7:	push   ebx
10050ce8:	call   0x100437dc
10050ced:	add    esp,0x4
10050cf0:	test   edi,edi
10050cf2:	jne    0x10050cfe
10050cf4:	push   0x8007000e
10050cf9:	call   0x10050e90
10050cfe:	mov    eax,edi
10050d00:	lea    esp,[ebp-0x38]
10050d03:	mov    ecx,DWORD PTR [ebp-0x10]
10050d06:	mov    DWORD PTR fs:0x0,ecx
10050d0d:	pop    ecx
10050d0e:	pop    edi
10050d0f:	pop    esi
10050d10:	pop    ebx
10050d11:	mov    ecx,DWORD PTR [ebp-0x1c]
10050d14:	xor    ecx,ebp
10050d16:	call   0x10043615
10050d1b:	mov    esp,ebp
10050d1d:	pop    ebp
10050d1e:	ret    0x4
10050d21:	int3   
10050d22:	int3   
10050d23:	int3   
10050d24:	int3   
10050d25:	int3   
10050d26:	int3   
10050d27:	int3   
10050d28:	int3   
10050d29:	int3   
10050d2a:	int3   
10050d2b:	int3   
10050d2c:	int3   
10050d2d:	int3   
10050d2e:	int3   
10050d2f:	int3   
10050d30:	push   ebp
10050d31:	mov    ebp,esp
10050d33:	push   0xffffffff
10050d35:	push   0x1005fa70
10050d3a:	mov    eax,fs:0x0
10050d40:	push   eax
10050d41:	push   ecx
10050d42:	push   ebx
10050d43:	push   esi
10050d44:	push   edi
10050d45:	mov    eax,ds:0x100801ac
10050d4a:	xor    eax,ebp
10050d4c:	push   eax
10050d4d:	lea    eax,[ebp-0xc]
10050d50:	mov    fs:0x0,eax
10050d56:	mov    DWORD PTR [ebp-0x10],esp
10050d59:	mov    edx,DWORD PTR [ebp+0x8]
10050d5c:	test   edx,edx
10050d5e:	je     0x10050dcd
10050d60:	mov    eax,edx
10050d62:	lea    esi,[eax+0x2]
10050d65:	mov    cx,WORD PTR [eax]
10050d68:	add    eax,0x2
10050d6b:	test   cx,cx
10050d6e:	jne    0x10050d65
10050d70:	push   0x0
10050d72:	push   0x0
10050d74:	push   0x0
10050d76:	sub    eax,esi
10050d78:	push   0x0
10050d7a:	sar    eax,1
10050d7c:	lea    edi,[eax+0x1]
10050d7f:	push   edi
10050d80:	push   edx
10050d81:	push   0x0
10050d83:	push   0x0
10050d85:	call   DWORD PTR ds:0x100670c4
10050d8b:	mov    esi,eax
10050d8d:	test   esi,esi
10050d8f:	jne    0x10050de3
10050d91:	mov    esi,DWORD PTR ds:0x100670cc
10050d97:	call   esi
10050d99:	test   eax,eax
10050d9b:	jg     0x10050dbb
10050d9d:	call   esi
10050d9f:	push   eax
10050da0:	call   0x10050e90
10050da5:	xor    eax,eax
10050da7:	mov    ecx,DWORD PTR [ebp-0xc]
10050daa:	mov    DWORD PTR fs:0x0,ecx
10050db1:	pop    ecx
10050db2:	pop    edi
10050db3:	pop    esi
10050db4:	pop    ebx
10050db5:	mov    esp,ebp
10050db7:	pop    ebp
10050db8:	ret    0x4
10050dbb:	call   esi
10050dbd:	and    eax,0xffff
10050dc2:	or     eax,0x80070000
10050dc7:	push   eax
10050dc8:	call   0x10050e90
10050dcd:	xor    eax,eax
10050dcf:	mov    ecx,DWORD PTR [ebp-0xc]
10050dd2:	mov    DWORD PTR fs:0x0,ecx
10050dd9:	pop    ecx
10050dda:	pop    edi
10050ddb:	pop    esi
10050ddc:	pop    ebx
10050ddd:	mov    esp,ebp
10050ddf:	pop    ebp
10050de0:	ret    0x4
10050de3:	push   esi
10050de4:	mov    DWORD PTR [ebp-0x4],0x0
10050deb:	call   0x10043196
10050df0:	mov    ebx,eax
10050df2:	add    esp,0x4
10050df5:	test   ebx,ebx
10050df7:	mov    DWORD PTR [ebp-0x4],0xffffffff
10050dfe:	jne    0x10050e2d
10050e00:	push   0x8007000e
10050e05:	call   0x10050e90
10050e0a:	xor    eax,eax
10050e0c:	mov    ecx,DWORD PTR [ebp-0xc]
10050e0f:	mov    DWORD PTR fs:0x0,ecx
10050e16:	pop    ecx
10050e17:	pop    edi
10050e18:	pop    esi
10050e19:	pop    ebx
10050e1a:	mov    esp,ebp
10050e1c:	pop    ebp
10050e1d:	ret    0x4
10050e20:	mov    DWORD PTR [ebp-0x4],0xffffffff
10050e27:	mov    eax,0x10050e00
10050e2c:	ret    
10050e2d:	mov    eax,DWORD PTR [ebp+0x8]
10050e30:	push   0x0
10050e32:	push   0x0
10050e34:	push   esi
10050e35:	push   ebx
10050e36:	push   edi
10050e37:	push   eax
10050e38:	push   0x0
10050e3a:	push   0x0
10050e3c:	call   DWORD PTR ds:0x100670c4
10050e42:	test   eax,eax
10050e44:	jne    0x10050e73
10050e46:	push   ebx
10050e47:	call   0x10042fe2
10050e4c:	mov    esi,DWORD PTR ds:0x100670cc
10050e52:	add    esp,0x4
10050e55:	xor    ebx,ebx
10050e57:	call   esi
10050e59:	test   eax,eax
10050e5b:	jg     0x10050e61
10050e5d:	call   esi
10050e5f:	jmp    0x10050e6d
10050e61:	call   esi
10050e63:	and    eax,0xffff
10050e68:	or     eax,0x80070000
10050e6d:	push   eax
10050e6e:	call   0x10050e90
10050e73:	mov    eax,ebx
10050e75:	mov    ecx,DWORD PTR [ebp-0xc]
10050e78:	mov    DWORD PTR fs:0x0,ecx
10050e7f:	pop    ecx
10050e80:	pop    edi
10050e81:	pop    esi
10050e82:	pop    ebx
10050e83:	mov    esp,ebp
10050e85:	pop    ebp
10050e86:	ret    0x4
10050e89:	int3   
10050e8a:	int3   
10050e8b:	int3   
10050e8c:	int3   
10050e8d:	int3   
10050e8e:	int3   
10050e8f:	int3   
10050e90:	mov    eax,DWORD PTR [esp+0x4]
10050e94:	push   0x0
10050e96:	push   eax
10050e97:	call   DWORD PTR ds:0x10080fa0
10050e9d:	ret    0x4
10050ea0:	push   esi
10050ea1:	mov    esi,ecx
10050ea3:	mov    eax,DWORD PTR [esi+0x8]
10050ea6:	test   eax,eax
10050ea8:	mov    DWORD PTR [esi],0x10068ed8
10050eae:	je     0x10050eb8
10050eb0:	mov    ecx,DWORD PTR [eax]
10050eb2:	mov    edx,DWORD PTR [ecx+0x8]
10050eb5:	push   eax
10050eb6:	call   edx
10050eb8:	cmp    DWORD PTR [esi+0xc],0x0
10050ebc:	je     0x10050ed5
10050ebe:	call   DWORD PTR ds:0x100671b4
10050ec4:	test   eax,eax
10050ec6:	je     0x10050ed5
10050ec8:	mov    ecx,DWORD PTR [esi+0xc]
10050ecb:	push   ecx
10050ecc:	push   0x0
10050ece:	push   eax
10050ecf:	call   DWORD PTR ds:0x10067194
10050ed5:	pop    esi
10050ed6:	ret    
10050ed7:	int3   
10050ed8:	int3   
10050ed9:	int3   
10050eda:	int3   
10050edb:	int3   
10050edc:	int3   
10050edd:	int3   
10050ede:	int3   
10050edf:	int3   
10050ee0:	sub    esp,0x10
10050ee3:	mov    eax,DWORD PTR [esp+0x14]
10050ee7:	mov    ecx,DWORD PTR [esp+0x18]
10050eeb:	push   0x10076154
10050ef0:	lea    edx,[esp+0x4]
10050ef4:	push   edx
10050ef5:	mov    DWORD PTR [esp+0x8],0x10068ed8
10050efd:	mov    DWORD PTR [esp+0xc],eax
10050f01:	mov    DWORD PTR [esp+0x10],ecx
10050f05:	mov    DWORD PTR [esp+0x14],0x0
10050f0d:	call   0x10047942
10050f12:	int3   
10050f13:	int3   
10050f14:	int3   
10050f15:	int3   
10050f16:	int3   
10050f17:	int3   
10050f18:	int3   
10050f19:	int3   
10050f1a:	int3   
10050f1b:	int3   
10050f1c:	int3   
10050f1d:	int3   
10050f1e:	int3   
10050f1f:	int3   
10050f20:	mov    eax,DWORD PTR [esp+0x4]
10050f24:	push   esi
10050f25:	mov    esi,ecx
10050f27:	mov    DWORD PTR [esi],0x10068ed8
10050f2d:	mov    ecx,DWORD PTR [eax+0x4]
10050f30:	mov    DWORD PTR [esi+0x4],ecx
10050f33:	mov    edx,DWORD PTR [eax+0x8]
10050f36:	mov    eax,edx
10050f38:	test   eax,eax
10050f3a:	mov    DWORD PTR [esi+0x8],edx
10050f3d:	mov    DWORD PTR [esi+0xc],0x0
10050f44:	je     0x10050f4e
10050f46:	mov    ecx,DWORD PTR [eax]
10050f48:	mov    edx,DWORD PTR [ecx+0x4]
10050f4b:	push   eax
10050f4c:	call   edx
10050f4e:	mov    eax,esi
10050f50:	pop    esi
10050f51:	ret    0x4
10050f54:	int3   
10050f55:	int3   
10050f56:	int3   
10050f57:	int3   
10050f58:	int3   
10050f59:	int3   
10050f5a:	int3   
10050f5b:	int3   
10050f5c:	int3   
10050f5d:	int3   
10050f5e:	int3   
10050f5f:	int3   
10050f60:	push   esi
10050f61:	mov    esi,ecx
10050f63:	mov    eax,DWORD PTR [esi+0x8]
10050f66:	test   eax,eax
10050f68:	mov    DWORD PTR [esi],0x10068ed8
10050f6e:	je     0x10050f78
10050f70:	mov    ecx,DWORD PTR [eax]
10050f72:	mov    edx,DWORD PTR [ecx+0x8]
10050f75:	push   eax
10050f76:	call   edx
10050f78:	cmp    DWORD PTR [esi+0xc],0x0
10050f7c:	je     0x10050f95
10050f7e:	call   DWORD PTR ds:0x100671b4
10050f84:	test   eax,eax
10050f86:	je     0x10050f95
10050f88:	mov    ecx,DWORD PTR [esi+0xc]
10050f8b:	push   ecx
10050f8c:	push   0x0
10050f8e:	push   eax
10050f8f:	call   DWORD PTR ds:0x10067194
10050f95:	test   BYTE PTR [esp+0x8],0x1
10050f9a:	je     0x10050fa5
10050f9c:	push   esi
10050f9d:	call   0x10042fe2
10050fa2:	add    esp,0x4
10050fa5:	mov    eax,esi
10050fa7:	pop    esi
10050fa8:	ret    0x4
10050fab:	int3   
10050fac:	jmp    DWORD PTR ds:0x100673d8
10050fb2:	mov    eax,DWORD PTR [esp+0x4]
10050fb6:	test   eax,eax
10050fb8:	mov    DWORD PTR ds:0x100825b8,0x1
10050fc2:	mov    DWORD PTR ds:0x100825bc,0x98
10050fcc:	jne    0x10050fd3
10050fce:	mov    eax,0x10068edc
10050fd3:	push   eax
10050fd4:	call   0x1005122b
10050fd9:	test   eax,eax
10050fdb:	pop    ecx
10050fdc:	jne    0x10050fe4
10050fde:	mov    eax,0x80004005
10050fe3:	ret    
10050fe4:	push   ebx
10050fe5:	push   esi
10050fe6:	push   edi
10050fe7:	push   0x0
10050fe9:	mov    esi,0x100825b8
10050fee:	push   esi
10050fef:	call   eax
10050ff1:	mov    ebx,eax
10050ff3:	mov    edi,0x80000000
10050ff8:	test   edi,ebx
10050ffa:	pop    ecx
10050ffb:	pop    ecx
10050ffc:	je     0x10051007
10050ffe:	call   0x100511eb
10051003:	mov    eax,ebx
10051005:	jmp    0x10051026
10051007:	call   0x10051191
1005100c:	mov    ebx,eax
1005100e:	test   edi,ebx
10051010:	je     0x10051024
10051012:	push   0x98
10051017:	push   0x0
10051019:	push   esi
1005101a:	call   0x10045dc0
1005101f:	add    esp,0xc
10051022:	jmp    0x10050ffe
10051024:	xor    eax,eax
10051026:	pop    edi
10051027:	pop    esi
10051028:	pop    ebx
10051029:	ret    
1005102a:	push   ebp
1005102b:	mov    ebp,esp
1005102d:	sub    esp,0x800
10051033:	push   edi
10051034:	push   DWORD PTR [ebp+0x8]
10051037:	lea    eax,[ebp-0x400]
1005103d:	push   0x10068ef4
10051042:	push   eax
10051043:	call   0x10058a6f
10051048:	lea    eax,[ebp-0x400]
1005104e:	push   0x10068ef0
10051053:	push   eax
10051054:	call   0x1005933f
10051059:	mov    edi,eax
1005105b:	add    esp,0x14
1005105e:	test   edi,edi
10051060:	je     0x100510d9
10051062:	push   esi
10051063:	mov    esi,0x400
10051068:	jmp    0x100510bc
1005106a:	lea    eax,[ebp-0x400]
10051070:	push   eax
10051071:	call   0x10043450
10051076:	test   eax,eax
10051078:	pop    ecx
10051079:	je     0x100510bc
1005107b:	cmp    BYTE PTR [ebp-0x400],0x23
10051082:	je     0x100510bc
10051084:	lea    eax,[ebp+eax*1-0x401]
1005108b:	cmp    BYTE PTR [eax],0xa
1005108e:	jne    0x10051093
10051090:	mov    BYTE PTR [eax],0x0
10051093:	lea    eax,[ebp-0x400]
10051099:	push   eax
1005109a:	push   DWORD PTR [ebp+0x8]
1005109d:	lea    eax,[ebp-0x800]
100510a3:	push   0x10068ee8
100510a8:	push   esi
100510a9:	push   eax
100510aa:	call   0x10059ae3
100510af:	lea    eax,[ebp-0x800]
100510b5:	push   eax
100510b6:	call   DWORD PTR [ebp+0xc]
100510b9:	add    esp,0x18
100510bc:	push   edi
100510bd:	lea    eax,[ebp-0x400]
100510c3:	push   esi
100510c4:	push   eax
100510c5:	call   0x1005995c
100510ca:	add    esp,0xc
100510cd:	test   eax,eax
100510cf:	jne    0x1005106a
100510d1:	push   edi
100510d2:	call   0x10050828
100510d7:	pop    ecx
100510d8:	pop    esi
100510d9:	pop    edi
100510da:	leave  
100510db:	ret    
100510dc:	mov    eax,ds:0x100825cc
100510e1:	test   eax,eax
100510e3:	jne    0x100510eb
100510e5:	mov    eax,0xc1f30001
100510ea:	ret    
100510eb:	jmp    eax
100510ed:	mov    eax,ds:0x100825e8
100510f2:	test   eax,eax
100510f4:	jne    0x100510fc
100510f6:	mov    eax,0xc1f30001
100510fb:	ret    
100510fc:	jmp    eax
100510fe:	mov    eax,ds:0x100825f0
10051103:	test   eax,eax
10051105:	jne    0x1005110d
10051107:	mov    eax,0xc1f30001
1005110c:	ret    
1005110d:	jmp    eax
1005110f:	mov    eax,ds:0x100825f4
10051114:	test   eax,eax
10051116:	je     0x1005111a
10051118:	jmp    eax
1005111a:	ret    
1005111b:	mov    eax,ds:0x100825f8
10051120:	test   eax,eax
10051122:	jne    0x1005112e
10051124:	mov    eax,DWORD PTR [esp+0x8]
10051128:	and    DWORD PTR [eax],0x0
1005112b:	xor    eax,eax
1005112d:	ret    
1005112e:	jmp    eax
10051130:	mov    eax,ds:0x100825fc
10051135:	test   eax,eax
10051137:	jne    0x1005113f
10051139:	mov    eax,0xc1f30001
1005113e:	ret    
1005113f:	jmp    eax
10051141:	mov    eax,ds:0x10082608
10051146:	test   eax,eax
10051148:	jne    0x10051150
1005114a:	mov    eax,0xc1f30001
1005114f:	ret    
10051150:	jmp    eax
10051152:	mov    eax,ds:0x1008260c
10051157:	test   eax,eax
10051159:	je     0x1005115d
1005115b:	jmp    eax
1005115d:	ret    
1005115e:	mov    eax,ds:0x10082610
10051163:	test   eax,eax
10051165:	jne    0x10051171
10051167:	mov    eax,DWORD PTR [esp+0x8]
1005116b:	and    DWORD PTR [eax],0x0
1005116e:	xor    eax,eax
10051170:	ret    
10051171:	jmp    eax
10051173:	mov    eax,ds:0x10082614
10051178:	test   eax,eax
1005117a:	jne    0x10051182
1005117c:	mov    eax,0xc1f30001
10051181:	ret    
10051182:	jmp    eax
10051184:	mov    eax,DWORD PTR [ecx]
10051186:	test   eax,eax
10051188:	je     0x10051190
1005118a:	mov    ecx,DWORD PTR [eax]
1005118c:	push   eax
1005118d:	call   DWORD PTR [ecx+0x8]
10051190:	ret    
10051191:	push   0x10082650
10051196:	call   0x100510ed
1005119b:	mov    eax,ds:0x10082650
100511a0:	neg    eax
100511a2:	sbb    eax,eax
100511a4:	and    eax,0x7fffbffb
100511a9:	pop    ecx
100511aa:	add    eax,0x80004005
100511af:	ret    
100511b0:	push   0x8
100511b2:	call   0x10043196
100511b7:	test   eax,eax
100511b9:	pop    ecx
100511ba:	je     0x100511d0
100511bc:	mov    ecx,DWORD PTR ds:0x10082658
100511c2:	mov    DWORD PTR [eax+0x4],ecx
100511c5:	mov    ecx,DWORD PTR [esp+0x4]
100511c9:	mov    DWORD PTR [eax],ecx
100511cb:	mov    ds:0x10082658,eax
100511d0:	ret    
100511d1:	push   0x8
100511d3:	push   0x0
100511d5:	push   DWORD PTR [esp+0xc]
100511d9:	call   DWORD PTR ds:0x10067060
100511df:	test   eax,eax
100511e1:	je     0x100511ea
100511e3:	push   eax
100511e4:	call   0x100511b0
100511e9:	pop    ecx
100511ea:	ret    
100511eb:	push   esi
100511ec:	mov    esi,DWORD PTR ds:0x10067140
100511f2:	jmp    0x1005120d
100511f4:	push   DWORD PTR [eax]
100511f6:	call   esi
100511f8:	mov    eax,ds:0x10082658
100511fd:	mov    ecx,DWORD PTR [eax+0x4]
10051200:	push   eax
10051201:	mov    DWORD PTR ds:0x10082658,ecx
10051207:	call   0x10042fe2
1005120c:	pop    ecx
1005120d:	mov    eax,ds:0x10082658
10051212:	test   eax,eax
10051214:	jne    0x100511f4
10051216:	mov    eax,ds:0x10082654
1005121b:	test   eax,eax
1005121d:	je     0x10051229
1005121f:	push   eax
10051220:	call   esi
10051222:	and    DWORD PTR ds:0x10082654,0x0
10051229:	pop    esi
1005122a:	ret    
1005122b:	push   ebp
1005122c:	mov    ebp,esp
1005122e:	sub    esp,0x404
10051234:	mov    eax,DWORD PTR [ebp+0x8]
10051237:	cmp    BYTE PTR [eax],0x2e
1005123a:	push   ebx
1005123b:	mov    ebx,DWORD PTR ds:0x10067060
10051241:	push   esi
10051242:	jne    0x10051256
10051244:	cmp    BYTE PTR [eax+0x1],0x0
10051248:	jne    0x10051256
1005124a:	mov    DWORD PTR [ebp+0x8],0x10068edc
10051251:	jmp    0x100512eb
10051256:	push   edi
10051257:	mov    esi,0x400
1005125c:	push   esi
1005125d:	push   eax
1005125e:	lea    eax,[ebp-0x404]
10051264:	push   eax
10051265:	call   0x10059ced
1005126a:	mov    dl,BYTE PTR [ebp-0x404]
10051270:	add    esp,0xc
10051273:	xor    edi,edi
10051275:	test   dl,dl
10051277:	lea    eax,[ebp-0x404]
1005127d:	je     0x100512ea
1005127f:	mov    DWORD PTR [ebp-0x4],0x10068f30
10051286:	mov    cl,0x2f
10051288:	cmp    cl,dl
1005128a:	jne    0x1005128e
1005128c:	mov    edi,eax
1005128e:	inc    DWORD PTR [ebp-0x4]
10051291:	mov    ecx,DWORD PTR [ebp-0x4]
10051294:	mov    cl,BYTE PTR [ecx]
10051296:	test   cl,cl
10051298:	jne    0x10051288
1005129a:	inc    eax
1005129b:	mov    dl,BYTE PTR [eax]
1005129d:	test   dl,dl
1005129f:	jne    0x1005127f
100512a1:	test   edi,edi
100512a3:	je     0x100512ea
100512a5:	lea    eax,[ebp-0x404]
100512ab:	push   0x100511d1
100512b0:	push   eax
100512b1:	mov    BYTE PTR [edi],dl
100512b3:	call   0x1005102a
100512b8:	pop    ecx
100512b9:	pop    ecx
100512ba:	lea    eax,[ebp-0x404]
100512c0:	push   0x10068f24
100512c5:	push   eax
100512c6:	call   0x10043450
100512cb:	pop    ecx
100512cc:	sub    esi,eax
100512ce:	push   esi
100512cf:	push   edi
100512d0:	call   0x10059ae3
100512d5:	add    esp,0xc
100512d8:	push   0x8
100512da:	push   0x0
100512dc:	lea    eax,[ebp-0x404]
100512e2:	push   eax
100512e3:	call   ebx
100512e5:	mov    ds:0x10082654,eax
100512ea:	pop    edi
100512eb:	push   0x8
100512ed:	push   0x0
100512ef:	push   DWORD PTR [ebp+0x8]
100512f2:	call   ebx
100512f4:	mov    esi,eax
100512f6:	test   esi,esi
100512f8:	je     0x1005131b
100512fa:	push   esi
100512fb:	call   0x100511b0
10051300:	mov    DWORD PTR [esp],0x10068f0c
10051307:	push   esi
10051308:	call   DWORD PTR ds:0x100670e4
1005130e:	mov    esi,eax
10051310:	test   esi,esi
10051312:	jne    0x10051319
10051314:	call   0x100511eb
10051319:	mov    eax,esi
1005131b:	pop    esi
1005131c:	pop    ebx
1005131d:	leave  
1005131e:	ret    
1005131f:	int3   
10051320:	push   esi
10051321:	mov    esi,DWORD PTR [eax+0x8]
10051324:	push   edi
10051325:	mov    edi,DWORD PTR [eax+0x14]
10051328:	mov    edx,ecx
1005132a:	shr    edx,0x8
1005132d:	mov    BYTE PTR [esi+edi*1],dl
10051330:	mov    edi,DWORD PTR [eax+0x8]
10051333:	mov    esi,0x1
10051338:	add    DWORD PTR [eax+0x14],esi
1005133b:	mov    edx,DWORD PTR [eax+0x14]
1005133e:	mov    BYTE PTR [edx+edi*1],cl
10051341:	add    DWORD PTR [eax+0x14],esi
10051344:	pop    edi
10051345:	pop    esi
10051346:	ret    
10051347:	int3   
10051348:	int3   
10051349:	int3   
1005134a:	int3   
1005134b:	int3   
1005134c:	int3   
1005134d:	int3   
1005134e:	int3   
1005134f:	int3   
10051350:	push   esi
10051351:	mov    esi,eax
10051353:	mov    eax,DWORD PTR [esi+0x1c]
10051356:	mov    ecx,DWORD PTR [esi+0x10]
10051359:	push   edi
1005135a:	mov    edi,DWORD PTR [eax+0x14]
1005135d:	cmp    edi,ecx
1005135f:	jbe    0x10051363
10051361:	mov    edi,ecx
10051363:	test   edi,edi
10051365:	je     0x1005139c
10051367:	mov    eax,DWORD PTR [eax+0x10]
1005136a:	mov    ecx,DWORD PTR [esi+0xc]
1005136d:	push   edi
1005136e:	push   eax
1005136f:	push   ecx
10051370:	call   0x10045340
10051375:	mov    eax,DWORD PTR [esi+0x1c]
10051378:	add    DWORD PTR [esi+0xc],edi
1005137b:	add    DWORD PTR [eax+0x10],edi
1005137e:	add    DWORD PTR [esi+0x14],edi
10051381:	sub    DWORD PTR [esi+0x10],edi
10051384:	mov    eax,DWORD PTR [esi+0x1c]
10051387:	sub    DWORD PTR [eax+0x14],edi
1005138a:	mov    esi,DWORD PTR [esi+0x1c]
1005138d:	add    esp,0xc
10051390:	cmp    DWORD PTR [esi+0x14],0x0
10051394:	jne    0x1005139c
10051396:	mov    edx,DWORD PTR [esi+0x8]
10051399:	mov    DWORD PTR [esi+0x10],edx
1005139c:	pop    edi
1005139d:	pop    esi
1005139e:	ret    
1005139f:	int3   
100513a0:	push   esi
100513a1:	push   edi
100513a2:	mov    edi,DWORD PTR [esp+0xc]
100513a6:	test   edi,edi
100513a8:	je     0x10051b76
100513ae:	mov    esi,DWORD PTR [edi+0x1c]
100513b1:	test   esi,esi
100513b3:	je     0x10051b76
100513b9:	mov    ecx,DWORD PTR [esp+0x10]
100513bd:	cmp    ecx,0x4
100513c0:	ja     0x10051b76
100513c6:	cmp    DWORD PTR [edi+0xc],0x0
100513ca:	je     0x10051b6e
100513d0:	cmp    DWORD PTR [edi],0x0
100513d3:	jne    0x100513df
100513d5:	cmp    DWORD PTR [edi+0x4],0x0
100513d9:	jne    0x10051b6e
100513df:	mov    eax,DWORD PTR [esi+0x4]
100513e2:	cmp    eax,0x29a
100513e7:	jne    0x100513f2
100513e9:	cmp    ecx,0x4
100513ec:	jne    0x10051b6e
100513f2:	cmp    DWORD PTR [edi+0x10],0x0
100513f6:	jne    0x10051408
100513f8:	mov    eax,ds:0x1006c52c
100513fd:	mov    DWORD PTR [edi+0x18],eax
10051400:	pop    edi
10051401:	mov    eax,0xfffffffb
10051406:	pop    esi
10051407:	ret    
10051408:	cmp    eax,0x2a
1005140b:	mov    edx,DWORD PTR [esi+0x28]
1005140e:	push   ebx
1005140f:	push   ebp
10051410:	mov    DWORD PTR [esi],edi
10051412:	mov    DWORD PTR [esp+0x14],edx
10051416:	mov    DWORD PTR [esi+0x28],ecx
10051419:	mov    ebx,0x1
1005141e:	jne    0x100516c6
10051424:	mov    eax,0x2
10051429:	cmp    DWORD PTR [esi+0x18],eax
1005142c:	jne    0x10051630
10051432:	push   0x0
10051434:	push   0x0
10051436:	push   0x0
10051438:	call   0x100563e0
1005143d:	mov    DWORD PTR [edi+0x30],eax
10051440:	mov    ecx,DWORD PTR [esi+0x14]
10051443:	mov    eax,DWORD PTR [esi+0x8]
10051446:	mov    BYTE PTR [eax+ecx*1],0x1f
1005144a:	add    DWORD PTR [esi+0x14],ebx
1005144d:	mov    eax,DWORD PTR [esi+0x14]
10051450:	mov    edx,DWORD PTR [esi+0x8]
10051453:	mov    BYTE PTR [eax+edx*1],0x8b
10051457:	add    DWORD PTR [esi+0x14],ebx
1005145a:	mov    eax,DWORD PTR [esi+0x14]
1005145d:	mov    ecx,DWORD PTR [esi+0x8]
10051460:	mov    BYTE PTR [eax+ecx*1],0x8
10051464:	add    DWORD PTR [esi+0x14],ebx
10051467:	mov    eax,DWORD PTR [esi+0x1c]
1005146a:	mov    ebp,DWORD PTR [esi+0x14]
1005146d:	add    esp,0xc
10051470:	test   eax,eax
10051472:	jne    0x10051501
10051478:	mov    edx,DWORD PTR [esi+0x8]
1005147b:	mov    BYTE PTR [edx+ebp*1],al
1005147e:	add    DWORD PTR [esi+0x14],ebx
10051481:	mov    eax,DWORD PTR [esi+0x14]
10051484:	mov    ecx,DWORD PTR [esi+0x8]
10051487:	mov    BYTE PTR [eax+ecx*1],0x0
1005148b:	add    DWORD PTR [esi+0x14],ebx
1005148e:	mov    eax,DWORD PTR [esi+0x14]
10051491:	mov    edx,DWORD PTR [esi+0x8]
10051494:	mov    BYTE PTR [eax+edx*1],0x0
10051498:	add    DWORD PTR [esi+0x14],ebx
1005149b:	mov    eax,DWORD PTR [esi+0x14]
1005149e:	mov    ecx,DWORD PTR [esi+0x8]
100514a1:	mov    BYTE PTR [eax+ecx*1],0x0
100514a5:	add    DWORD PTR [esi+0x14],ebx
100514a8:	mov    eax,DWORD PTR [esi+0x14]
100514ab:	mov    edx,DWORD PTR [esi+0x8]
100514ae:	mov    BYTE PTR [eax+edx*1],0x0
100514b2:	add    DWORD PTR [esi+0x14],ebx
100514b5:	mov    eax,DWORD PTR [esi+0x84]
100514bb:	cmp    eax,0x9
100514be:	mov    ecx,DWORD PTR [esi+0x14]
100514c1:	jne    0x100514c8
100514c3:	lea    eax,[ebx+0x1]
100514c6:	jmp    0x100514df
100514c8:	cmp    DWORD PTR [esi+0x88],0x2
100514cf:	jge    0x100514da
100514d1:	cmp    eax,0x2
100514d4:	jl     0x100514da
100514d6:	xor    eax,eax
100514d8:	jmp    0x100514df
100514da:	mov    eax,0x4
100514df:	mov    edx,DWORD PTR [esi+0x8]
100514e2:	mov    BYTE PTR [ecx+edx*1],al
100514e5:	add    DWORD PTR [esi+0x14],ebx
100514e8:	mov    eax,DWORD PTR [esi+0x14]
100514eb:	mov    ecx,DWORD PTR [esi+0x8]
100514ee:	mov    BYTE PTR [eax+ecx*1],0xb
100514f2:	add    DWORD PTR [esi+0x14],ebx
100514f5:	mov    DWORD PTR [esi+0x4],0x71
100514fc:	jmp    0x100516c6
10051501:	mov    edx,DWORD PTR [eax+0x24]
10051504:	mov    ecx,DWORD PTR [eax+0x2c]
10051507:	neg    edx
10051509:	sbb    dl,dl
1005150b:	and    edx,0x10
1005150e:	neg    ecx
10051510:	sbb    cl,cl
10051512:	and    ecx,0x2
10051515:	add    dl,cl
10051517:	mov    ecx,DWORD PTR [eax+0x1c]
1005151a:	neg    ecx
1005151c:	sbb    cl,cl
1005151e:	and    ecx,0x8
10051521:	add    dl,cl
10051523:	mov    ecx,DWORD PTR [eax+0x10]
10051526:	neg    ecx
10051528:	sbb    cl,cl
1005152a:	and    ecx,0x4
1005152d:	add    dl,cl
1005152f:	cmp    DWORD PTR [eax],0x0
10051532:	mov    ecx,DWORD PTR [esi+0x8]
10051535:	setne  al
10051538:	add    dl,al
1005153a:	mov    BYTE PTR [ecx+ebp*1],dl
1005153d:	add    DWORD PTR [esi+0x14],ebx
10051540:	mov    eax,DWORD PTR [esi+0x14]
10051543:	mov    edx,DWORD PTR [esi+0x1c]
10051546:	movzx  edx,BYTE PTR [edx+0x4]
1005154a:	mov    ecx,DWORD PTR [esi+0x8]
1005154d:	mov    BYTE PTR [eax+ecx*1],dl
10051550:	add    DWORD PTR [esi+0x14],ebx
10051553:	mov    ecx,DWORD PTR [esi+0x1c]
10051556:	movzx  ecx,BYTE PTR [ecx+0x5]
1005155a:	mov    eax,DWORD PTR [esi+0x14]
1005155d:	mov    edx,DWORD PTR [esi+0x8]
10051560:	mov    BYTE PTR [eax+edx*1],cl
10051563:	add    DWORD PTR [esi+0x14],ebx
10051566:	mov    edx,DWORD PTR [esi+0x1c]
10051569:	movzx  edx,BYTE PTR [edx+0x6]
1005156d:	mov    eax,DWORD PTR [esi+0x14]
10051570:	mov    ecx,DWORD PTR [esi+0x8]
10051573:	mov    BYTE PTR [eax+ecx*1],dl
10051576:	add    DWORD PTR [esi+0x14],ebx
10051579:	mov    ecx,DWORD PTR [esi+0x1c]
1005157c:	movzx  ecx,BYTE PTR [ecx+0x7]
10051580:	mov    eax,DWORD PTR [esi+0x14]
10051583:	mov    edx,DWORD PTR [esi+0x8]
10051586:	mov    BYTE PTR [eax+edx*1],cl
10051589:	add    DWORD PTR [esi+0x14],ebx
1005158c:	mov    eax,DWORD PTR [esi+0x84]
10051592:	cmp    eax,0x9
10051595:	mov    ecx,DWORD PTR [esi+0x14]
10051598:	jne    0x100515a1
1005159a:	mov    eax,0x2
1005159f:	jmp    0x100515b8
100515a1:	cmp    DWORD PTR [esi+0x88],0x2
100515a8:	jge    0x100515b3
100515aa:	cmp    eax,0x2
100515ad:	jl     0x100515b3
100515af:	xor    eax,eax
100515b1:	jmp    0x100515b8
100515b3:	mov    eax,0x4
100515b8:	mov    edx,DWORD PTR [esi+0x8]
100515bb:	mov    BYTE PTR [ecx+edx*1],al
100515be:	add    DWORD PTR [esi+0x14],ebx
100515c1:	mov    ecx,DWORD PTR [esi+0x1c]
100515c4:	mov    eax,DWORD PTR [esi+0x14]
100515c7:	mov    cl,BYTE PTR [ecx+0xc]
100515ca:	mov    edx,DWORD PTR [esi+0x8]
100515cd:	mov    BYTE PTR [eax+edx*1],cl
100515d0:	add    DWORD PTR [esi+0x14],ebx
100515d3:	mov    eax,DWORD PTR [esi+0x1c]
100515d6:	cmp    DWORD PTR [eax+0x10],0x0
100515da:	mov    ecx,DWORD PTR [esi+0x14]
100515dd:	je     0x10051600
100515df:	mov    al,BYTE PTR [eax+0x14]
100515e2:	mov    edx,DWORD PTR [esi+0x8]
100515e5:	mov    BYTE PTR [ecx+edx*1],al
100515e8:	add    DWORD PTR [esi+0x14],ebx
100515eb:	mov    ecx,DWORD PTR [esi+0x1c]
100515ee:	mov    cl,BYTE PTR [ecx+0x15]
100515f1:	mov    eax,DWORD PTR [esi+0x14]
100515f4:	mov    edx,DWORD PTR [esi+0x8]
100515f7:	mov    BYTE PTR [eax+edx*1],cl
100515fa:	add    DWORD PTR [esi+0x14],ebx
100515fd:	mov    ecx,DWORD PTR [esi+0x14]
10051600:	mov    edx,DWORD PTR [esi+0x1c]
10051603:	cmp    DWORD PTR [edx+0x2c],0x0
10051607:	je     0x1005161d
10051609:	mov    eax,DWORD PTR [esi+0x8]
1005160c:	push   ecx
1005160d:	mov    ecx,DWORD PTR [edi+0x30]
10051610:	push   eax
10051611:	push   ecx
10051612:	call   0x100563e0
10051617:	add    esp,0xc
1005161a:	mov    DWORD PTR [edi+0x30],eax
1005161d:	mov    DWORD PTR [esi+0x20],0x0
10051624:	mov    DWORD PTR [esi+0x4],0x45
1005162b:	jmp    0x100516c6
10051630:	mov    ecx,DWORD PTR [esi+0x30]
10051633:	sub    ecx,0x8
10051636:	shl    ecx,0xc
10051639:	add    ecx,0x800
1005163f:	cmp    DWORD PTR [esi+0x88],eax
10051645:	jge    0x10051666
10051647:	mov    ebp,DWORD PTR [esi+0x84]
1005164d:	cmp    ebp,eax
1005164f:	jl     0x10051666
10051651:	cmp    ebp,0x6
10051654:	jge    0x1005165a
10051656:	mov    eax,ebx
10051658:	jmp    0x10051668
1005165a:	xor    edx,edx
1005165c:	cmp    ebp,0x6
1005165f:	setne  dl
10051662:	add    eax,edx
10051664:	jmp    0x10051668
10051666:	xor    eax,eax
10051668:	shl    eax,0x6
1005166b:	or     ecx,eax
1005166d:	cmp    DWORD PTR [esi+0x6c],0x0
10051671:	je     0x10051676
10051673:	or     ecx,0x20
10051676:	mov    eax,0x8421085
1005167b:	mul    ecx
1005167d:	sub    ecx,edx
1005167f:	shr    ecx,1
10051681:	add    ecx,edx
10051683:	shr    ecx,0x4
10051686:	add    ecx,ebx
10051688:	mov    eax,ecx
1005168a:	shl    ecx,0x5
1005168d:	sub    ecx,eax
1005168f:	mov    eax,esi
10051691:	mov    DWORD PTR [esi+0x4],0x71
10051698:	call   0x10051320
1005169d:	cmp    DWORD PTR [esi+0x6c],0x0
100516a1:	je     0x100516b5
100516a3:	movzx  ecx,WORD PTR [edi+0x32]
100516a7:	call   0x10051320
100516ac:	movzx  ecx,WORD PTR [edi+0x30]
100516b0:	call   0x10051320
100516b5:	push   0x0
100516b7:	push   0x0
100516b9:	push   0x0
100516bb:	call   0x10054410
100516c0:	add    esp,0xc
100516c3:	mov    DWORD PTR [edi+0x30],eax
100516c6:	cmp    DWORD PTR [esi+0x4],0x45
100516ca:	jne    0x10051798
100516d0:	mov    eax,DWORD PTR [esi+0x1c]
100516d3:	cmp    DWORD PTR [eax+0x10],0x0
100516d7:	je     0x10051791
100516dd:	movzx  eax,WORD PTR [eax+0x14]
100516e1:	cmp    DWORD PTR [esi+0x20],eax
100516e4:	mov    ecx,DWORD PTR [esi+0x14]
100516e7:	jae    0x10051757
100516e9:	lea    esp,[esp+0x0]
100516f0:	mov    eax,DWORD PTR [esi+0x14]
100516f3:	cmp    eax,DWORD PTR [esi+0xc]
100516f6:	jne    0x1005172e
100516f8:	mov    edx,DWORD PTR [esi+0x1c]
100516fb:	cmp    DWORD PTR [edx+0x2c],0x0
100516ff:	je     0x1005171d
10051701:	cmp    eax,ecx
10051703:	jbe    0x1005171d
10051705:	sub    eax,ecx
10051707:	push   eax
10051708:	mov    eax,DWORD PTR [esi+0x8]
1005170b:	add    eax,ecx
1005170d:	mov    ecx,DWORD PTR [edi+0x30]
10051710:	push   eax
10051711:	push   ecx
10051712:	call   0x100563e0
10051717:	add    esp,0xc
1005171a:	mov    DWORD PTR [edi+0x30],eax
1005171d:	mov    eax,edi
1005171f:	call   0x10051350
10051724:	mov    eax,DWORD PTR [esi+0x14]
10051727:	cmp    eax,DWORD PTR [esi+0xc]
1005172a:	mov    ecx,eax
1005172c:	je     0x10051757
1005172e:	mov    edx,DWORD PTR [esi+0x1c]
10051731:	mov    edx,DWORD PTR [edx+0x10]
10051734:	mov    ebx,DWORD PTR [esi+0x20]
10051737:	mov    dl,BYTE PTR [edx+ebx*1]
1005173a:	mov    ebp,DWORD PTR [esi+0x8]
1005173d:	mov    BYTE PTR [eax+ebp*1],dl
10051740:	mov    eax,0x1
10051745:	add    DWORD PTR [esi+0x14],eax
10051748:	add    DWORD PTR [esi+0x20],eax
1005174b:	mov    eax,DWORD PTR [esi+0x1c]
1005174e:	movzx  edx,WORD PTR [eax+0x14]
10051752:	cmp    DWORD PTR [esi+0x20],edx
10051755:	jb     0x100516f0
10051757:	mov    eax,DWORD PTR [esi+0x1c]
1005175a:	cmp    DWORD PTR [eax+0x2c],0x0
1005175e:	je     0x1005177f
10051760:	mov    eax,DWORD PTR [esi+0x14]
10051763:	cmp    eax,ecx
10051765:	jbe    0x1005177f
10051767:	mov    edx,DWORD PTR [esi+0x8]
1005176a:	sub    eax,ecx
1005176c:	push   eax
1005176d:	mov    eax,DWORD PTR [edi+0x30]
10051770:	add    edx,ecx
10051772:	push   edx
10051773:	push   eax
10051774:	call   0x100563e0
10051779:	add    esp,0xc
1005177c:	mov    DWORD PTR [edi+0x30],eax
1005177f:	mov    ecx,DWORD PTR [esi+0x1c]
10051782:	mov    edx,DWORD PTR [esi+0x20]
10051785:	cmp    edx,DWORD PTR [ecx+0x14]
10051788:	jne    0x10051798
1005178a:	mov    DWORD PTR [esi+0x20],0x0
10051791:	mov    DWORD PTR [esi+0x4],0x49
10051798:	cmp    DWORD PTR [esi+0x4],0x49
1005179c:	mov    ebp,0x1
100517a1:	jne    0x1005184e
100517a7:	mov    eax,DWORD PTR [esi+0x1c]
100517aa:	cmp    DWORD PTR [eax+0x1c],0x0
100517ae:	je     0x10051847
100517b4:	mov    edx,DWORD PTR [esi+0x14]
100517b7:	mov    eax,DWORD PTR [esi+0x14]
100517ba:	cmp    eax,DWORD PTR [esi+0xc]
100517bd:	jne    0x100517f5
100517bf:	mov    ecx,DWORD PTR [esi+0x1c]
100517c2:	cmp    DWORD PTR [ecx+0x2c],0x0
100517c6:	je     0x100517e4
100517c8:	cmp    eax,edx
100517ca:	jbe    0x100517e4
100517cc:	mov    ecx,DWORD PTR [edi+0x30]
100517cf:	sub    eax,edx
100517d1:	push   eax
100517d2:	mov    eax,DWORD PTR [esi+0x8]
100517d5:	add    eax,edx
100517d7:	push   eax
100517d8:	push   ecx
100517d9:	call   0x100563e0
100517de:	add    esp,0xc
100517e1:	mov    DWORD PTR [edi+0x30],eax
100517e4:	mov    eax,edi
100517e6:	call   0x10051350
100517eb:	mov    eax,DWORD PTR [esi+0x14]
100517ee:	cmp    eax,DWORD PTR [esi+0xc]
100517f1:	mov    edx,eax
100517f3:	je     0x10051816
100517f5:	mov    ecx,DWORD PTR [esi+0x20]
100517f8:	mov    ebx,DWORD PTR [esi+0x1c]
100517fb:	mov    ebx,DWORD PTR [ebx+0x1c]
100517fe:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10051802:	add    ecx,ebp
10051804:	mov    DWORD PTR [esi+0x20],ecx
10051807:	mov    ecx,DWORD PTR [esi+0x8]
1005180a:	mov    BYTE PTR [eax+ecx*1],bl
1005180d:	add    DWORD PTR [esi+0x14],ebp
10051810:	test   ebx,ebx
10051812:	jne    0x100517b7
10051814:	jmp    0x10051818
10051816:	mov    ebx,ebp
10051818:	mov    eax,DWORD PTR [esi+0x1c]
1005181b:	cmp    DWORD PTR [eax+0x2c],0x0
1005181f:	je     0x10051840
10051821:	mov    eax,DWORD PTR [esi+0x14]
10051824:	cmp    eax,edx
10051826:	jbe    0x10051840
10051828:	mov    ecx,DWORD PTR [esi+0x8]
1005182b:	sub    eax,edx
1005182d:	push   eax
1005182e:	add    ecx,edx
10051830:	mov    edx,DWORD PTR [edi+0x30]
10051833:	push   ecx
10051834:	push   edx
10051835:	call   0x100563e0
1005183a:	add    esp,0xc
1005183d:	mov    DWORD PTR [edi+0x30],eax
10051840:	test   ebx,ebx
10051842:	jne    0x1005184e
10051844:	mov    DWORD PTR [esi+0x20],ebx
10051847:	mov    DWORD PTR [esi+0x4],0x5b
1005184e:	cmp    DWORD PTR [esi+0x4],0x5b
10051852:	jne    0x100518fd
10051858:	mov    eax,DWORD PTR [esi+0x1c]
1005185b:	cmp    DWORD PTR [eax+0x24],0x0
1005185f:	je     0x100518f6
10051865:	mov    edx,DWORD PTR [esi+0x14]
10051868:	mov    eax,DWORD PTR [esi+0x14]
1005186b:	cmp    eax,DWORD PTR [esi+0xc]
1005186e:	jne    0x100518a6
10051870:	mov    ecx,DWORD PTR [esi+0x1c]
10051873:	cmp    DWORD PTR [ecx+0x2c],0x0
10051877:	je     0x10051895
10051879:	cmp    eax,edx
1005187b:	jbe    0x10051895
1005187d:	mov    ecx,DWORD PTR [edi+0x30]
10051880:	sub    eax,edx
10051882:	push   eax
10051883:	mov    eax,DWORD PTR [esi+0x8]
10051886:	add    eax,edx
10051888:	push   eax
10051889:	push   ecx
1005188a:	call   0x100563e0
1005188f:	add    esp,0xc
10051892:	mov    DWORD PTR [edi+0x30],eax
10051895:	mov    eax,edi
10051897:	call   0x10051350
1005189c:	mov    eax,DWORD PTR [esi+0x14]
1005189f:	cmp    eax,DWORD PTR [esi+0xc]
100518a2:	mov    edx,eax
100518a4:	je     0x100518c8
100518a6:	mov    ecx,DWORD PTR [esi+0x20]
100518a9:	mov    ebx,DWORD PTR [esi+0x1c]
100518ac:	mov    ebx,DWORD PTR [ebx+0x24]
100518af:	movzx  ebx,BYTE PTR [ebx+ecx*1]
100518b3:	add    ecx,0x1
100518b6:	mov    DWORD PTR [esi+0x20],ecx
100518b9:	mov    ecx,DWORD PTR [esi+0x8]
100518bc:	mov    BYTE PTR [eax+ecx*1],bl
100518bf:	add    DWORD PTR [esi+0x14],ebp
100518c2:	test   ebx,ebx
100518c4:	jne    0x10051868
100518c6:	jmp    0x100518ca
100518c8:	mov    ebx,ebp
100518ca:	mov    eax,DWORD PTR [esi+0x1c]
100518cd:	cmp    DWORD PTR [eax+0x2c],0x0
100518d1:	je     0x100518f2
100518d3:	mov    eax,DWORD PTR [esi+0x14]
100518d6:	cmp    eax,edx
100518d8:	jbe    0x100518f2
100518da:	mov    ecx,DWORD PTR [esi+0x8]
100518dd:	sub    eax,edx
100518df:	push   eax
100518e0:	add    ecx,edx
100518e2:	mov    edx,DWORD PTR [edi+0x30]
100518e5:	push   ecx
100518e6:	push   edx
100518e7:	call   0x100563e0
100518ec:	add    esp,0xc
100518ef:	mov    DWORD PTR [edi+0x30],eax
100518f2:	test   ebx,ebx
100518f4:	jne    0x100518fd
100518f6:	mov    DWORD PTR [esi+0x4],0x67
100518fd:	cmp    DWORD PTR [esi+0x4],0x67
10051901:	jne    0x1005195e
10051903:	mov    eax,DWORD PTR [esi+0x1c]
10051906:	cmp    DWORD PTR [eax+0x2c],0x0
1005190a:	je     0x10051957
1005190c:	mov    ecx,DWORD PTR [esi+0x14]
1005190f:	add    ecx,0x2
10051912:	cmp    ecx,DWORD PTR [esi+0xc]
10051915:	jbe    0x1005191e
10051917:	mov    eax,edi
10051919:	call   0x10051350
1005191e:	mov    eax,DWORD PTR [esi+0x14]
10051921:	lea    edx,[eax+0x2]
10051924:	cmp    edx,DWORD PTR [esi+0xc]
10051927:	ja     0x1005195e
10051929:	movzx  edx,BYTE PTR [edi+0x30]
1005192d:	mov    ecx,DWORD PTR [esi+0x8]
10051930:	mov    BYTE PTR [eax+ecx*1],dl
10051933:	add    DWORD PTR [esi+0x14],ebp
10051936:	movzx  edx,BYTE PTR [edi+0x31]
1005193a:	mov    eax,DWORD PTR [esi+0x14]
1005193d:	mov    ecx,DWORD PTR [esi+0x8]
10051940:	push   0x0
10051942:	push   0x0
10051944:	mov    BYTE PTR [eax+ecx*1],dl
10051947:	add    DWORD PTR [esi+0x14],ebp
1005194a:	push   0x0
1005194c:	call   0x100563e0
10051951:	add    esp,0xc
10051954:	mov    DWORD PTR [edi+0x30],eax
10051957:	mov    DWORD PTR [esi+0x4],0x71
1005195e:	cmp    DWORD PTR [esi+0x14],0x0
10051962:	je     0x1005197f
10051964:	mov    eax,edi
10051966:	call   0x10051350
1005196b:	cmp    DWORD PTR [edi+0x10],0x0
1005196f:	jne    0x100519a6
10051971:	mov    DWORD PTR [esi+0x28],0xffffffff
10051978:	pop    ebp
10051979:	pop    ebx
1005197a:	pop    edi
1005197b:	xor    eax,eax
1005197d:	pop    esi
1005197e:	ret    
1005197f:	cmp    DWORD PTR [edi+0x4],0x0
10051983:	mov    ebx,DWORD PTR [esp+0x18]
10051987:	jne    0x100519aa
10051989:	cmp    ebx,DWORD PTR [esp+0x14]
1005198d:	jg     0x100519aa
1005198f:	cmp    ebx,0x4
10051992:	je     0x100519aa
10051994:	mov    eax,ds:0x1006c52c
10051999:	pop    ebp
1005199a:	pop    ebx
1005199b:	mov    DWORD PTR [edi+0x18],eax
1005199e:	pop    edi
1005199f:	mov    eax,0xfffffffb
100519a4:	pop    esi
100519a5:	ret    
100519a6:	mov    ebx,DWORD PTR [esp+0x18]
100519aa:	mov    eax,DWORD PTR [esi+0x4]
100519ad:	cmp    eax,0x29a
100519b2:	jne    0x100519cd
100519b4:	cmp    DWORD PTR [edi+0x4],0x0
100519b8:	je     0x100519d3
100519ba:	mov    ecx,DWORD PTR ds:0x1006c52c
100519c0:	pop    ebp
100519c1:	pop    ebx
100519c2:	mov    DWORD PTR [edi+0x18],ecx
100519c5:	pop    edi
100519c6:	mov    eax,0xfffffffb
100519cb:	pop    esi
100519cc:	ret    
100519cd:	cmp    DWORD PTR [edi+0x4],0x0
100519d1:	jne    0x100519ec
100519d3:	cmp    DWORD PTR [esi+0x74],0x0
100519d7:	jne    0x100519ec
100519d9:	test   ebx,ebx
100519db:	je     0x10051a80
100519e1:	cmp    eax,0x29a
100519e6:	je     0x10051a80
100519ec:	mov    eax,DWORD PTR [esi+0x84]
100519f2:	lea    edx,[eax+eax*2]
100519f5:	mov    eax,DWORD PTR [edx*4+0x10068f78]
100519fc:	push   ebx
100519fd:	push   esi
100519fe:	call   eax
10051a00:	add    esp,0x8
10051a03:	cmp    eax,0x2
10051a06:	je     0x10051a0d
10051a08:	cmp    eax,0x3
10051a0b:	jne    0x10051a14
10051a0d:	mov    DWORD PTR [esi+0x4],0x29a
10051a14:	test   eax,eax
10051a16:	je     0x10051b56
10051a1c:	cmp    eax,0x2
10051a1f:	je     0x10051b56
10051a25:	cmp    eax,ebp
10051a27:	jne    0x10051a80
10051a29:	cmp    ebx,ebp
10051a2b:	jne    0x10051a38
10051a2d:	push   esi
10051a2e:	call   0x10055d40
10051a33:	add    esp,0x4
10051a36:	jmp    0x10051a6f
10051a38:	push   0x0
10051a3a:	push   0x0
10051a3c:	push   0x0
10051a3e:	push   esi
10051a3f:	call   0x10055ca0
10051a44:	add    esp,0x10
10051a47:	cmp    ebx,0x3
10051a4a:	jne    0x10051a6f
10051a4c:	mov    ecx,DWORD PTR [esi+0x4c]
10051a4f:	mov    edx,DWORD PTR [esi+0x44]
10051a52:	mov    WORD PTR [edx+ecx*2-0x2],0x0
10051a59:	mov    eax,DWORD PTR [esi+0x4c]
10051a5c:	mov    edx,DWORD PTR [esi+0x44]
10051a5f:	lea    ecx,[eax+eax*1-0x2]
10051a63:	push   ecx
10051a64:	push   0x0
10051a66:	push   edx
10051a67:	call   0x10045dc0
10051a6c:	add    esp,0xc
10051a6f:	mov    eax,edi
10051a71:	call   0x10051350
10051a76:	cmp    DWORD PTR [edi+0x10],0x0
10051a7a:	je     0x10051971
10051a80:	cmp    ebx,0x4
10051a83:	jne    0x10051978
10051a89:	mov    eax,DWORD PTR [esi+0x18]
10051a8c:	test   eax,eax
10051a8e:	jg     0x10051a97
10051a90:	mov    eax,ebp
10051a92:	pop    ebp
10051a93:	pop    ebx
10051a94:	pop    edi
10051a95:	pop    esi
10051a96:	ret    
10051a97:	cmp    eax,0x2
10051a9a:	jne    0x10051b22
10051aa0:	movzx  edx,BYTE PTR [edi+0x30]
10051aa4:	mov    ecx,DWORD PTR [esi+0x14]
10051aa7:	mov    eax,DWORD PTR [esi+0x8]
10051aaa:	mov    BYTE PTR [eax+ecx*1],dl
10051aad:	add    DWORD PTR [esi+0x14],ebp
10051ab0:	movzx  edx,BYTE PTR [edi+0x31]
10051ab4:	mov    eax,DWORD PTR [esi+0x14]
10051ab7:	mov    ecx,DWORD PTR [esi+0x8]
10051aba:	mov    BYTE PTR [eax+ecx*1],dl
10051abd:	add    DWORD PTR [esi+0x14],ebp
10051ac0:	movzx  edx,BYTE PTR [edi+0x32]
10051ac4:	mov    eax,DWORD PTR [esi+0x14]
10051ac7:	mov    ecx,DWORD PTR [esi+0x8]
10051aca:	mov    BYTE PTR [eax+ecx*1],dl
10051acd:	add    DWORD PTR [esi+0x14],ebp
10051ad0:	movzx  edx,BYTE PTR [edi+0x33]
10051ad4:	mov    eax,DWORD PTR [esi+0x14]
10051ad7:	mov    ecx,DWORD PTR [esi+0x8]
10051ada:	mov    BYTE PTR [eax+ecx*1],dl
10051add:	add    DWORD PTR [esi+0x14],ebp
10051ae0:	movzx  edx,BYTE PTR [edi+0x8]
10051ae4:	mov    eax,DWORD PTR [esi+0x14]
10051ae7:	mov    ecx,DWORD PTR [esi+0x8]
10051aea:	mov    BYTE PTR [eax+ecx*1],dl
10051aed:	add    DWORD PTR [esi+0x14],ebp
10051af0:	movzx  edx,BYTE PTR [edi+0x9]
10051af4:	mov    eax,DWORD PTR [esi+0x14]
10051af7:	mov    ecx,DWORD PTR [esi+0x8]
10051afa:	mov    BYTE PTR [eax+ecx*1],dl
10051afd:	add    DWORD PTR [esi+0x14],ebp
10051b00:	movzx  edx,BYTE PTR [edi+0xa]
10051b04:	mov    eax,DWORD PTR [esi+0x14]
10051b07:	mov    ecx,DWORD PTR [esi+0x8]
10051b0a:	mov    BYTE PTR [eax+ecx*1],dl
10051b0d:	add    DWORD PTR [esi+0x14],ebp
10051b10:	movzx  edx,BYTE PTR [edi+0xb]
10051b14:	mov    eax,DWORD PTR [esi+0x14]
10051b17:	mov    ecx,DWORD PTR [esi+0x8]
10051b1a:	mov    BYTE PTR [eax+ecx*1],dl
10051b1d:	add    DWORD PTR [esi+0x14],ebp
10051b20:	jmp    0x10051b36
10051b22:	movzx  ecx,WORD PTR [edi+0x32]
10051b26:	mov    eax,esi
10051b28:	call   0x10051320
10051b2d:	movzx  ecx,WORD PTR [edi+0x30]
10051b31:	call   0x10051320
10051b36:	mov    eax,edi
10051b38:	call   0x10051350
10051b3d:	mov    eax,DWORD PTR [esi+0x18]
10051b40:	test   eax,eax
10051b42:	jle    0x10051b49
10051b44:	neg    eax
10051b46:	mov    DWORD PTR [esi+0x18],eax
10051b49:	pop    ebp
10051b4a:	xor    eax,eax
10051b4c:	cmp    DWORD PTR [esi+0x14],eax
10051b4f:	pop    ebx
10051b50:	pop    edi
10051b51:	sete   al
10051b54:	pop    esi
10051b55:	ret    
10051b56:	cmp    DWORD PTR [edi+0x10],0x0
10051b5a:	jne    0x10051978
10051b60:	pop    ebp
10051b61:	pop    ebx
10051b62:	pop    edi
10051b63:	mov    DWORD PTR [esi+0x28],0xffffffff
10051b6a:	xor    eax,eax
10051b6c:	pop    esi
10051b6d:	ret    
10051b6e:	mov    eax,ds:0x1006c520
10051b73:	mov    DWORD PTR [edi+0x18],eax
10051b76:	pop    edi
10051b77:	mov    eax,0xfffffffe
10051b7c:	pop    esi
10051b7d:	ret    
10051b7e:	int3   
10051b7f:	int3   
10051b80:	push   esi
10051b81:	mov    esi,DWORD PTR [esp+0x8]
10051b85:	test   esi,esi
10051b87:	je     0x10051c4b
10051b8d:	mov    eax,DWORD PTR [esi+0x1c]
10051b90:	test   eax,eax
10051b92:	je     0x10051c4b
10051b98:	push   edi
10051b99:	mov    edi,DWORD PTR [eax+0x4]
10051b9c:	cmp    edi,0x2a
10051b9f:	je     0x10051bca
10051ba1:	cmp    edi,0x45
10051ba4:	je     0x10051bca
10051ba6:	cmp    edi,0x49
10051ba9:	je     0x10051bca
10051bab:	cmp    edi,0x5b
10051bae:	je     0x10051bca
10051bb0:	cmp    edi,0x67
10051bb3:	je     0x10051bca
10051bb5:	cmp    edi,0x71
10051bb8:	je     0x10051bca
10051bba:	cmp    edi,0x29a
10051bc0:	je     0x10051bca
10051bc2:	pop    edi
10051bc3:	mov    eax,0xfffffffe
10051bc8:	pop    esi
10051bc9:	ret    
10051bca:	mov    eax,DWORD PTR [eax+0x8]
10051bcd:	test   eax,eax
10051bcf:	je     0x10051bde
10051bd1:	mov    ecx,DWORD PTR [esi+0x24]
10051bd4:	push   eax
10051bd5:	mov    eax,DWORD PTR [esi+0x28]
10051bd8:	push   eax
10051bd9:	call   ecx
10051bdb:	add    esp,0x8
10051bde:	mov    edx,DWORD PTR [esi+0x1c]
10051be1:	mov    eax,DWORD PTR [edx+0x44]
10051be4:	test   eax,eax
10051be6:	je     0x10051bf5
10051be8:	mov    ecx,DWORD PTR [esi+0x24]
10051beb:	push   eax
10051bec:	mov    eax,DWORD PTR [esi+0x28]
10051bef:	push   eax
10051bf0:	call   ecx
10051bf2:	add    esp,0x8
10051bf5:	mov    edx,DWORD PTR [esi+0x1c]
10051bf8:	mov    eax,DWORD PTR [edx+0x40]
10051bfb:	test   eax,eax
10051bfd:	je     0x10051c0c
10051bff:	mov    ecx,DWORD PTR [esi+0x24]
10051c02:	push   eax
10051c03:	mov    eax,DWORD PTR [esi+0x28]
10051c06:	push   eax
10051c07:	call   ecx
10051c09:	add    esp,0x8
10051c0c:	mov    edx,DWORD PTR [esi+0x1c]
10051c0f:	mov    eax,DWORD PTR [edx+0x38]
10051c12:	test   eax,eax
10051c14:	je     0x10051c23
10051c16:	mov    ecx,DWORD PTR [esi+0x24]
10051c19:	push   eax
10051c1a:	mov    eax,DWORD PTR [esi+0x28]
10051c1d:	push   eax
10051c1e:	call   ecx
10051c20:	add    esp,0x8
10051c23:	mov    edx,DWORD PTR [esi+0x1c]
10051c26:	mov    eax,DWORD PTR [esi+0x28]
10051c29:	mov    ecx,DWORD PTR [esi+0x24]
10051c2c:	push   edx
10051c2d:	push   eax
10051c2e:	call   ecx
10051c30:	add    esp,0x8
10051c33:	xor    eax,eax
10051c35:	cmp    edi,0x71
10051c38:	setne  al
10051c3b:	pop    edi
10051c3c:	mov    DWORD PTR [esi+0x1c],0x0
10051c43:	pop    esi
10051c44:	sub    eax,0x1
10051c47:	and    eax,0xfffffffd
10051c4a:	ret    
10051c4b:	mov    eax,0xfffffffe
10051c50:	pop    esi
10051c51:	ret    
10051c52:	int3   
10051c53:	int3   
10051c54:	int3   
10051c55:	int3   
10051c56:	int3   
10051c57:	int3   
10051c58:	int3   
10051c59:	int3   
10051c5a:	int3   
10051c5b:	int3   
10051c5c:	int3   
10051c5d:	int3   
10051c5e:	int3   
10051c5f:	int3   
10051c60:	mov    eax,DWORD PTR [esi+0x4]
10051c63:	push   edi
10051c64:	mov    edi,eax
10051c66:	cmp    edi,ecx
10051c68:	jbe    0x10051c6c
10051c6a:	mov    edi,ecx
10051c6c:	test   edi,edi
10051c6e:	jne    0x10051c74
10051c70:	xor    eax,eax
10051c72:	pop    edi
10051c73:	ret    
10051c74:	sub    eax,edi
10051c76:	mov    DWORD PTR [esi+0x4],eax
10051c79:	mov    eax,DWORD PTR [esi+0x1c]
10051c7c:	mov    eax,DWORD PTR [eax+0x18]
10051c7f:	cmp    eax,0x1
10051c82:	jne    0x10051c93
10051c84:	mov    ecx,DWORD PTR [esi]
10051c86:	mov    edx,DWORD PTR [esi+0x30]
10051c89:	push   edi
10051c8a:	push   ecx
10051c8b:	push   edx
10051c8c:	call   0x10054410
10051c91:	jmp    0x10051ca5
10051c93:	cmp    eax,0x2
10051c96:	jne    0x10051cab
10051c98:	mov    eax,DWORD PTR [esi]
10051c9a:	mov    ecx,DWORD PTR [esi+0x30]
10051c9d:	push   edi
10051c9e:	push   eax
10051c9f:	push   ecx
10051ca0:	call   0x100563e0
10051ca5:	mov    DWORD PTR [esi+0x30],eax
10051ca8:	add    esp,0xc
10051cab:	mov    edx,DWORD PTR [esi]
10051cad:	mov    eax,DWORD PTR [esp+0x8]
10051cb1:	push   edi
10051cb2:	push   edx
10051cb3:	push   eax
10051cb4:	call   0x10045340
10051cb9:	add    DWORD PTR [esi],edi
10051cbb:	add    DWORD PTR [esi+0x8],edi
10051cbe:	add    esp,0xc
10051cc1:	mov    eax,edi
10051cc3:	pop    edi
10051cc4:	ret    
10051cc5:	int3   
10051cc6:	int3   
10051cc7:	int3   
10051cc8:	int3   
10051cc9:	int3   
10051cca:	int3   
10051ccb:	int3   
10051ccc:	int3   
10051ccd:	int3   
10051cce:	int3   
10051ccf:	int3   
10051cd0:	mov    eax,DWORD PTR [esi+0x2c]
10051cd3:	mov    ecx,DWORD PTR [esi+0x4c]
10051cd6:	mov    edx,DWORD PTR [esi+0x44]
10051cd9:	push   edi
10051cda:	add    eax,eax
10051cdc:	mov    DWORD PTR [esi+0x3c],eax
10051cdf:	xor    edi,edi
10051ce1:	mov    WORD PTR [edx+ecx*2-0x2],di
10051ce6:	mov    eax,DWORD PTR [esi+0x4c]
10051ce9:	mov    edx,DWORD PTR [esi+0x44]
10051cec:	lea    ecx,[eax+eax*1-0x2]
10051cf0:	push   ecx
10051cf1:	push   edi
10051cf2:	push   edx
10051cf3:	call   0x10045dc0
10051cf8:	mov    eax,DWORD PTR [esi+0x84]
10051cfe:	lea    eax,[eax+eax*2]
10051d01:	add    eax,eax
10051d03:	movzx  ecx,WORD PTR [eax+eax*1+0x10068f72]
10051d0b:	add    eax,eax
10051d0d:	mov    DWORD PTR [esi+0x80],ecx
10051d13:	movzx  edx,WORD PTR [eax+0x10068f70]
10051d1a:	mov    DWORD PTR [esi+0x8c],edx
10051d20:	movzx  ecx,WORD PTR [eax+0x10068f74]
10051d27:	mov    DWORD PTR [esi+0x90],ecx
10051d2d:	movzx  edx,WORD PTR [eax+0x10068f76]
10051d34:	mov    eax,0x2
10051d39:	add    esp,0xc
10051d3c:	mov    DWORD PTR [esi+0x6c],edi
10051d3f:	mov    DWORD PTR [esi+0x5c],edi
10051d42:	mov    DWORD PTR [esi+0x74],edi
10051d45:	mov    DWORD PTR [esi+0x68],edi
10051d48:	mov    DWORD PTR [esi+0x48],edi
10051d4b:	mov    DWORD PTR [esi+0x7c],edx
10051d4e:	mov    DWORD PTR [esi+0x78],eax
10051d51:	mov    DWORD PTR [esi+0x60],eax
10051d54:	pop    edi
10051d55:	ret    
10051d56:	int3   
10051d57:	int3   
10051d58:	int3   
10051d59:	int3   
10051d5a:	int3   
10051d5b:	int3   
10051d5c:	int3   
10051d5d:	int3   
10051d5e:	int3   
10051d5f:	int3   
10051d60:	sub    esp,0x14
10051d63:	mov    ecx,DWORD PTR [edi+0x7c]
10051d66:	mov    edx,DWORD PTR [edi+0x6c]
10051d69:	push   ebx
10051d6a:	push   ebp
10051d6b:	mov    ebp,DWORD PTR [edi+0x78]
10051d6e:	push   esi
10051d6f:	mov    esi,DWORD PTR [edi+0x90]
10051d75:	mov    DWORD PTR [esp+0x10],ecx
10051d79:	mov    ecx,DWORD PTR [edi+0x38]
10051d7c:	mov    DWORD PTR [esp+0x14],esi
10051d80:	mov    esi,DWORD PTR [edi+0x2c]
10051d83:	lea    ebx,[esi-0x106]
10051d89:	add    ecx,edx
10051d8b:	cmp    edx,ebx
10051d8d:	jbe    0x10051d9d
10051d8f:	sub    edx,esi
10051d91:	add    edx,0x106
10051d97:	mov    DWORD PTR [esp+0x18],edx
10051d9b:	jmp    0x10051da5
10051d9d:	mov    DWORD PTR [esp+0x18],0x0
10051da5:	cmp    ebp,DWORD PTR [edi+0x8c]
10051dab:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10051db0:	mov    BYTE PTR [esp+0xe],dl
10051db4:	movzx  edx,BYTE PTR [ecx+ebp*1]
10051db8:	lea    esi,[ecx+0x102]
10051dbe:	mov    BYTE PTR [esp+0xf],dl
10051dc2:	jb     0x10051dc9
10051dc4:	shr    DWORD PTR [esp+0x10],0x2
10051dc9:	mov    edx,DWORD PTR [edi+0x74]
10051dcc:	cmp    DWORD PTR [esp+0x14],edx
10051dd0:	jbe    0x10051dd6
10051dd2:	mov    DWORD PTR [esp+0x14],edx
10051dd6:	mov    edx,DWORD PTR [edi+0x38]
10051dd9:	mov    bl,BYTE PTR [esp+0xf]
10051ddd:	add    edx,eax
10051ddf:	cmp    BYTE PTR [edx+ebp*1],bl
10051de2:	jne    0x10051eaf
10051de8:	mov    bl,BYTE PTR [esp+0xe]
10051dec:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10051df0:	jne    0x10051eaf
10051df6:	mov    bl,BYTE PTR [edx]
10051df8:	cmp    bl,BYTE PTR [ecx]
10051dfa:	jne    0x10051eaf
10051e00:	mov    bl,BYTE PTR [edx+0x1]
10051e03:	add    edx,0x1
10051e06:	cmp    bl,BYTE PTR [ecx+0x1]
10051e09:	jne    0x10051eaf
10051e0f:	add    ecx,0x2
10051e12:	add    edx,0x1
10051e15:	mov    bl,BYTE PTR [ecx+0x1]
10051e18:	add    ecx,0x1
10051e1b:	add    edx,0x1
10051e1e:	cmp    bl,BYTE PTR [edx]
10051e20:	jne    0x10051e81
10051e22:	mov    bl,BYTE PTR [ecx+0x1]
10051e25:	add    ecx,0x1
10051e28:	add    edx,0x1
10051e2b:	cmp    bl,BYTE PTR [edx]
10051e2d:	jne    0x10051e81
10051e2f:	mov    bl,BYTE PTR [ecx+0x1]
10051e32:	add    ecx,0x1
10051e35:	add    edx,0x1
10051e38:	cmp    bl,BYTE PTR [edx]
10051e3a:	jne    0x10051e81
10051e3c:	mov    bl,BYTE PTR [ecx+0x1]
10051e3f:	add    ecx,0x1
10051e42:	add    edx,0x1
10051e45:	cmp    bl,BYTE PTR [edx]
10051e47:	jne    0x10051e81
10051e49:	mov    bl,BYTE PTR [ecx+0x1]
10051e4c:	add    ecx,0x1
10051e4f:	add    edx,0x1
10051e52:	cmp    bl,BYTE PTR [edx]
10051e54:	jne    0x10051e81
10051e56:	mov    bl,BYTE PTR [ecx+0x1]
10051e59:	add    ecx,0x1
10051e5c:	add    edx,0x1
10051e5f:	cmp    bl,BYTE PTR [edx]
10051e61:	jne    0x10051e81
10051e63:	mov    bl,BYTE PTR [ecx+0x1]
10051e66:	add    ecx,0x1
10051e69:	add    edx,0x1
10051e6c:	cmp    bl,BYTE PTR [edx]
10051e6e:	jne    0x10051e81
10051e70:	mov    bl,BYTE PTR [ecx+0x1]
10051e73:	add    ecx,0x1
10051e76:	add    edx,0x1
10051e79:	cmp    bl,BYTE PTR [edx]
10051e7b:	jne    0x10051e81
10051e7d:	cmp    ecx,esi
10051e7f:	jb     0x10051e15
10051e81:	mov    edx,ecx
10051e83:	sub    edx,esi
10051e85:	add    edx,0x102
10051e8b:	cmp    edx,ebp
10051e8d:	lea    ecx,[esi-0x102]
10051e93:	jle    0x10051eaf
10051e95:	cmp    edx,DWORD PTR [esp+0x14]
10051e99:	mov    DWORD PTR [edi+0x70],eax
10051e9c:	mov    ebp,edx
10051e9e:	jge    0x10051ecc
10051ea0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10051ea4:	mov    dl,BYTE PTR [edx+ecx*1]
10051ea7:	mov    BYTE PTR [esp+0xe],bl
10051eab:	mov    BYTE PTR [esp+0xf],dl
10051eaf:	mov    edx,DWORD PTR [edi+0x34]
10051eb2:	and    edx,eax
10051eb4:	mov    eax,DWORD PTR [edi+0x40]
10051eb7:	movzx  eax,WORD PTR [eax+edx*2]
10051ebb:	cmp    eax,DWORD PTR [esp+0x18]
10051ebf:	jbe    0x10051ecc
10051ec1:	sub    DWORD PTR [esp+0x10],0x1
10051ec6:	jne    0x10051dd6
10051ecc:	mov    eax,DWORD PTR [edi+0x74]
10051ecf:	cmp    ebp,eax
10051ed1:	ja     0x10051ed5
10051ed3:	mov    eax,ebp
10051ed5:	pop    esi
10051ed6:	pop    ebp
10051ed7:	pop    ebx
10051ed8:	add    esp,0x14
10051edb:	ret    
10051edc:	int3   
10051edd:	int3   
10051ede:	int3   
10051edf:	int3   
10051ee0:	mov    ecx,DWORD PTR [esi+0x38]
10051ee3:	mov    eax,DWORD PTR [esi+0x6c]
10051ee6:	push   ebp
10051ee7:	mov    ebp,DWORD PTR [esp+0x8]
10051eeb:	mov    dl,BYTE PTR [ecx+ebp*1]
10051eee:	add    eax,ecx
10051ef0:	add    ecx,ebp
10051ef2:	cmp    dl,BYTE PTR [eax]
10051ef4:	push   edi
10051ef5:	lea    edi,[eax+0x102]
10051efb:	jne    0x10051f9a
10051f01:	mov    dl,BYTE PTR [ecx+0x1]
10051f04:	cmp    dl,BYTE PTR [eax+0x1]
10051f07:	jne    0x10051f9a
10051f0d:	add    eax,0x2
10051f10:	add    ecx,0x2
10051f13:	mov    dl,BYTE PTR [eax+0x1]
10051f16:	add    eax,0x1
10051f19:	add    ecx,0x1
10051f1c:	cmp    dl,BYTE PTR [ecx]
10051f1e:	jne    0x10051f7f
10051f20:	mov    dl,BYTE PTR [eax+0x1]
10051f23:	add    eax,0x1
10051f26:	add    ecx,0x1
10051f29:	cmp    dl,BYTE PTR [ecx]
10051f2b:	jne    0x10051f7f
10051f2d:	mov    dl,BYTE PTR [eax+0x1]
10051f30:	add    eax,0x1
10051f33:	add    ecx,0x1
10051f36:	cmp    dl,BYTE PTR [ecx]
10051f38:	jne    0x10051f7f
10051f3a:	mov    dl,BYTE PTR [eax+0x1]
10051f3d:	add    eax,0x1
10051f40:	add    ecx,0x1
10051f43:	cmp    dl,BYTE PTR [ecx]
10051f45:	jne    0x10051f7f
10051f47:	mov    dl,BYTE PTR [eax+0x1]
10051f4a:	add    eax,0x1
10051f4d:	add    ecx,0x1
10051f50:	cmp    dl,BYTE PTR [ecx]
10051f52:	jne    0x10051f7f
10051f54:	mov    dl,BYTE PTR [eax+0x1]
10051f57:	add    eax,0x1
10051f5a:	add    ecx,0x1
10051f5d:	cmp    dl,BYTE PTR [ecx]
10051f5f:	jne    0x10051f7f
10051f61:	mov    dl,BYTE PTR [eax+0x1]
10051f64:	add    eax,0x1
10051f67:	add    ecx,0x1
10051f6a:	cmp    dl,BYTE PTR [ecx]
10051f6c:	jne    0x10051f7f
10051f6e:	mov    dl,BYTE PTR [eax+0x1]
10051f71:	add    eax,0x1
10051f74:	add    ecx,0x1
10051f77:	cmp    dl,BYTE PTR [ecx]
10051f79:	jne    0x10051f7f
10051f7b:	cmp    eax,edi
10051f7d:	jb     0x10051f13
10051f7f:	sub    eax,edi
10051f81:	add    eax,0x102
10051f86:	cmp    eax,0x3
10051f89:	jl     0x10051f9a
10051f8b:	mov    ecx,DWORD PTR [esi+0x74]
10051f8e:	cmp    eax,ecx
10051f90:	mov    DWORD PTR [esi+0x70],ebp
10051f93:	jbe    0x10051f9f
10051f95:	pop    edi
10051f96:	mov    eax,ecx
10051f98:	pop    ebp
10051f99:	ret    
10051f9a:	mov    eax,0x2
10051f9f:	pop    edi
10051fa0:	pop    ebp
10051fa1:	ret    
10051fa2:	int3   
10051fa3:	int3   
10051fa4:	int3   
10051fa5:	int3   
10051fa6:	int3   
10051fa7:	int3   
10051fa8:	int3   
10051fa9:	int3   
10051faa:	int3   
10051fab:	int3   
10051fac:	int3   
10051fad:	int3   
10051fae:	int3   
10051faf:	int3   
10051fb0:	push   ebx
10051fb1:	mov    ebx,DWORD PTR [edi+0x2c]
10051fb4:	push   ebp
10051fb5:	push   esi
10051fb6:	mov    ebp,DWORD PTR [edi+0x3c]
10051fb9:	sub    ebp,DWORD PTR [edi+0x74]
10051fbc:	mov    eax,DWORD PTR [edi+0x6c]
10051fbf:	mov    ecx,DWORD PTR [edi+0x2c]
10051fc2:	lea    edx,[ebx+ecx*1-0x106]
10051fc9:	sub    ebp,eax
10051fcb:	cmp    eax,edx
10051fcd:	jb     0x1005202e
10051fcf:	mov    eax,DWORD PTR [edi+0x38]
10051fd2:	push   ebx
10051fd3:	lea    ecx,[eax+ebx*1]
10051fd6:	push   ecx
10051fd7:	push   eax
10051fd8:	call   0x10045340
10051fdd:	mov    edx,DWORD PTR [edi+0x4c]
10051fe0:	mov    eax,DWORD PTR [edi+0x44]
10051fe3:	sub    DWORD PTR [edi+0x70],ebx
10051fe6:	sub    DWORD PTR [edi+0x6c],ebx
10051fe9:	add    esp,0xc
10051fec:	sub    DWORD PTR [edi+0x5c],ebx
10051fef:	lea    ecx,[eax+edx*2]
10051ff2:	movzx  eax,WORD PTR [ecx-0x2]
10051ff6:	sub    ecx,0x2
10051ff9:	cmp    eax,ebx
10051ffb:	jb     0x10052001
10051ffd:	sub    eax,ebx
10051fff:	jmp    0x10052003
10052001:	xor    eax,eax
10052003:	sub    edx,0x1
10052006:	mov    WORD PTR [ecx],ax
10052009:	jne    0x10051ff2
1005200b:	mov    ecx,DWORD PTR [edi+0x40]
1005200e:	mov    edx,ebx
10052010:	lea    ecx,[ecx+ebx*2]
10052013:	movzx  eax,WORD PTR [ecx-0x2]
10052017:	sub    ecx,0x2
1005201a:	cmp    eax,ebx
1005201c:	jb     0x10052022
1005201e:	sub    eax,ebx
10052020:	jmp    0x10052024
10052022:	xor    eax,eax
10052024:	sub    edx,0x1
10052027:	mov    WORD PTR [ecx],ax
1005202a:	jne    0x10052013
1005202c:	add    ebp,ebx
1005202e:	mov    esi,DWORD PTR [edi]
10052030:	cmp    DWORD PTR [esi+0x4],0x0
10052034:	je     0x10052089
10052036:	mov    edx,DWORD PTR [edi+0x74]
10052039:	add    edx,DWORD PTR [edi+0x6c]
1005203c:	mov    ecx,ebp
1005203e:	add    edx,DWORD PTR [edi+0x38]
10052041:	push   edx
10052042:	call   0x10051c60
10052047:	add    DWORD PTR [edi+0x74],eax
1005204a:	mov    edx,DWORD PTR [edi+0x74]
1005204d:	add    esp,0x4
10052050:	cmp    edx,0x3
10052053:	jb     0x10052075
10052055:	mov    eax,DWORD PTR [edi+0x6c]
10052058:	mov    ecx,DWORD PTR [edi+0x38]
1005205b:	lea    esi,[eax+ecx*1]
1005205e:	movzx  eax,BYTE PTR [esi]
10052061:	mov    ecx,DWORD PTR [edi+0x58]
10052064:	mov    DWORD PTR [edi+0x48],eax
10052067:	shl    eax,cl
10052069:	movzx  ecx,BYTE PTR [esi+0x1]
1005206d:	xor    eax,ecx
1005206f:	and    eax,DWORD PTR [edi+0x54]
10052072:	mov    DWORD PTR [edi+0x48],eax
10052075:	cmp    edx,0x106
1005207b:	jae    0x10052089
1005207d:	mov    edx,DWORD PTR [edi]
1005207f:	cmp    DWORD PTR [edx+0x4],0x0
10052083:	jne    0x10051fb6
10052089:	pop    esi
1005208a:	pop    ebp
1005208b:	pop    ebx
1005208c:	ret    
1005208d:	int3   
1005208e:	int3   
1005208f:	int3   
10052090:	push   esi
10052091:	push   edi
10052092:	mov    edi,DWORD PTR [esp+0xc]
10052096:	mov    eax,DWORD PTR [edi+0xc]
10052099:	mov    esi,0xffff
1005209e:	add    eax,0xfffffffb
100520a1:	cmp    eax,esi
100520a3:	jae    0x100520a7
100520a5:	mov    esi,eax
100520a7:	mov    eax,DWORD PTR [edi+0x74]
100520aa:	cmp    eax,0x1
100520ad:	ja     0x100520bf
100520af:	call   0x10051fb0
100520b4:	mov    eax,DWORD PTR [edi+0x74]
100520b7:	test   eax,eax
100520b9:	je     0x1005215d
100520bf:	add    DWORD PTR [edi+0x6c],eax
100520c2:	mov    ecx,DWORD PTR [edi+0x5c]
100520c5:	mov    edx,DWORD PTR [edi+0x6c]
100520c8:	mov    DWORD PTR [edi+0x74],0x0
100520cf:	lea    eax,[ecx+esi*1]
100520d2:	je     0x100520d8
100520d4:	cmp    edx,eax
100520d6:	jb     0x10052111
100520d8:	sub    edx,eax
100520da:	test   ecx,ecx
100520dc:	mov    DWORD PTR [edi+0x74],edx
100520df:	mov    DWORD PTR [edi+0x6c],eax
100520e2:	jl     0x100520eb
100520e4:	mov    edx,DWORD PTR [edi+0x38]
100520e7:	add    edx,ecx
100520e9:	jmp    0x100520ed
100520eb:	xor    edx,edx
100520ed:	push   0x0
100520ef:	sub    eax,ecx
100520f1:	push   eax
100520f2:	push   edx
100520f3:	push   edi
100520f4:	call   0x10055f30
100520f9:	mov    eax,DWORD PTR [edi+0x6c]
100520fc:	mov    DWORD PTR [edi+0x5c],eax
100520ff:	mov    eax,DWORD PTR [edi]
10052101:	add    esp,0x10
10052104:	call   0x10051350
10052109:	mov    ecx,DWORD PTR [edi]
1005210b:	cmp    DWORD PTR [ecx+0x10],0x0
1005210f:	je     0x10052158
10052111:	mov    ecx,DWORD PTR [edi+0x5c]
10052114:	mov    edx,DWORD PTR [edi+0x6c]
10052117:	mov    eax,DWORD PTR [edi+0x2c]
1005211a:	sub    edx,ecx
1005211c:	sub    eax,0x106
10052121:	cmp    edx,eax
10052123:	jb     0x100520a7
10052125:	test   ecx,ecx
10052127:	jl     0x10052130
10052129:	mov    eax,DWORD PTR [edi+0x38]
1005212c:	add    eax,ecx
1005212e:	jmp    0x10052132
10052130:	xor    eax,eax
10052132:	push   0x0
10052134:	push   edx
10052135:	push   eax
10052136:	push   edi
10052137:	call   0x10055f30
1005213c:	mov    ecx,DWORD PTR [edi+0x6c]
1005213f:	mov    eax,DWORD PTR [edi]
10052141:	add    esp,0x10
10052144:	mov    DWORD PTR [edi+0x5c],ecx
10052147:	call   0x10051350
1005214c:	mov    edx,DWORD PTR [edi]
1005214e:	cmp    DWORD PTR [edx+0x10],0x0
10052152:	jne    0x100520a7
10052158:	pop    edi
10052159:	xor    eax,eax
1005215b:	pop    esi
1005215c:	ret    
1005215d:	mov    esi,DWORD PTR [esp+0x10]
10052161:	test   esi,esi
10052163:	je     0x10052158
10052165:	mov    ecx,DWORD PTR [edi+0x5c]
10052168:	test   ecx,ecx
1005216a:	jl     0x10052173
1005216c:	mov    eax,DWORD PTR [edi+0x38]
1005216f:	add    eax,ecx
10052171:	jmp    0x10052175
10052173:	xor    eax,eax
10052175:	xor    edx,edx
10052177:	cmp    esi,0x4
1005217a:	sete   dl
1005217d:	push   edx
1005217e:	mov    edx,DWORD PTR [edi+0x6c]
10052181:	sub    edx,ecx
10052183:	push   edx
10052184:	push   eax
10052185:	push   edi
10052186:	call   0x10055f30
1005218b:	mov    eax,DWORD PTR [edi+0x6c]
1005218e:	mov    DWORD PTR [edi+0x5c],eax
10052191:	mov    eax,DWORD PTR [edi]
10052193:	add    esp,0x10
10052196:	call   0x10051350
1005219b:	mov    ecx,DWORD PTR [edi]
1005219d:	xor    eax,eax
1005219f:	cmp    DWORD PTR [ecx+0x10],eax
100521a2:	jne    0x100521b3
100521a4:	cmp    esi,0x4
100521a7:	setne  al
100521aa:	pop    edi
100521ab:	pop    esi
100521ac:	sub    eax,0x1
100521af:	and    eax,0x2
100521b2:	ret    
100521b3:	cmp    esi,0x4
100521b6:	sete   al
100521b9:	pop    edi
100521ba:	pop    esi
100521bb:	lea    eax,[eax+eax*1+0x1]
100521bf:	ret    
100521c0:	push   ebx
100521c1:	push   ebp
100521c2:	push   esi
100521c3:	xor    ebp,ebp
100521c5:	push   edi
100521c6:	mov    edi,DWORD PTR [esp+0x14]
100521ca:	lea    ebx,[ebp+0x1]
100521cd:	lea    ecx,[ecx+0x0]
100521d0:	mov    eax,DWORD PTR [edi+0x74]
100521d3:	cmp    eax,0x106
100521d8:	jae    0x100521fd
100521da:	call   0x10051fb0
100521df:	mov    eax,DWORD PTR [edi+0x74]
100521e2:	cmp    eax,0x106
100521e7:	mov    esi,DWORD PTR [esp+0x18]
100521eb:	jae    0x100521f5
100521ed:	test   esi,esi
100521ef:	je     0x10052474
100521f5:	test   eax,eax
100521f7:	je     0x1005247b
100521fd:	cmp    eax,0x3
10052200:	jb     0x1005224b
10052202:	mov    eax,DWORD PTR [edi+0x48]
10052205:	mov    ecx,DWORD PTR [edi+0x58]
10052208:	mov    edx,DWORD PTR [edi+0x6c]
1005220b:	mov    esi,DWORD PTR [edi+0x34]
1005220e:	shl    eax,cl
10052210:	mov    ecx,DWORD PTR [edi+0x38]
10052213:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10052218:	xor    eax,ecx
1005221a:	and    eax,DWORD PTR [edi+0x54]
1005221d:	mov    ecx,DWORD PTR [edi+0x44]
10052220:	mov    DWORD PTR [edi+0x48],eax
10052223:	mov    ax,WORD PTR [ecx+eax*2]
10052227:	and    esi,edx
10052229:	mov    edx,DWORD PTR [edi+0x40]
1005222c:	mov    WORD PTR [edx+esi*2],ax
10052230:	mov    ecx,DWORD PTR [edi+0x6c]
10052233:	and    ecx,DWORD PTR [edi+0x34]
10052236:	mov    edx,DWORD PTR [edi+0x40]
10052239:	movzx  ebp,WORD PTR [edx+ecx*2]
1005223d:	mov    eax,DWORD PTR [edi+0x48]
10052240:	mov    ecx,DWORD PTR [edi+0x44]
10052243:	mov    dx,WORD PTR [edi+0x6c]
10052247:	mov    WORD PTR [ecx+eax*2],dx
1005224b:	test   ebp,ebp
1005224d:	je     0x10052291
1005224f:	mov    eax,DWORD PTR [edi+0x6c]
10052252:	mov    ecx,DWORD PTR [edi+0x2c]
10052255:	sub    eax,ebp
10052257:	sub    ecx,0x106
1005225d:	cmp    eax,ecx
1005225f:	ja     0x10052291
10052261:	mov    ecx,DWORD PTR [edi+0x88]
10052267:	cmp    ecx,0x2
1005226a:	je     0x1005227a
1005226c:	cmp    ecx,0x3
1005226f:	je     0x1005227f
10052271:	mov    eax,ebp
10052273:	call   0x10051d60
10052278:	jmp    0x1005228e
1005227a:	cmp    ecx,0x3
1005227d:	jne    0x10052291
1005227f:	cmp    eax,ebx
10052281:	jne    0x10052291
10052283:	push   ebp
10052284:	mov    esi,edi
10052286:	call   0x10051ee0
1005228b:	add    esp,0x4
1005228e:	mov    DWORD PTR [edi+0x60],eax
10052291:	cmp    DWORD PTR [edi+0x60],0x3
10052295:	jb     0x100523d3
1005229b:	mov    dx,WORD PTR [edi+0x6c]
1005229f:	sub    dx,WORD PTR [edi+0x70]
100522a3:	mov    al,BYTE PTR [edi+0x60]
100522a6:	mov    esi,DWORD PTR [edi+0x16a4]
100522ac:	movzx  ecx,dx
100522af:	mov    edx,DWORD PTR [edi+0x16a0]
100522b5:	mov    WORD PTR [esi+edx*2],cx
100522b9:	mov    edx,DWORD PTR [edi+0x1698]
100522bf:	mov    esi,DWORD PTR [edi+0x16a0]
100522c5:	sub    al,0x3
100522c7:	mov    BYTE PTR [edx+esi*1],al
100522ca:	add    DWORD PTR [edi+0x16a0],ebx
100522d0:	movzx  eax,al
100522d3:	movzx  edx,BYTE PTR [eax+0x1006a2a0]
100522da:	add    WORD PTR [edi+edx*4+0x498],bx
100522e2:	lea    eax,[edi+edx*4+0x498]
100522e9:	add    ecx,0xffff
100522ef:	cmp    cx,0x100
100522f4:	jae    0x10052302
100522f6:	movzx  eax,cx
100522f9:	movzx  eax,BYTE PTR [eax+0x1006a0a0]
10052300:	jmp    0x1005230f
10052302:	movzx  ecx,cx
10052305:	shr    ecx,0x7
10052308:	movzx  eax,BYTE PTR [ecx+0x1006a1a0]
1005230f:	add    WORD PTR [edi+eax*4+0x988],bx
10052317:	mov    edx,DWORD PTR [edi+0x169c]
1005231d:	xor    eax,eax
1005231f:	sub    edx,ebx
10052321:	cmp    DWORD PTR [edi+0x16a0],edx
10052327:	sete   al
1005232a:	mov    esi,eax
1005232c:	mov    eax,DWORD PTR [edi+0x60]
1005232f:	sub    DWORD PTR [edi+0x74],eax
10052332:	cmp    eax,DWORD PTR [edi+0x80]
10052338:	mov    ecx,DWORD PTR [edi+0x74]
1005233b:	ja     0x100523a7
1005233d:	cmp    ecx,0x3
10052340:	jb     0x100523a7
10052342:	add    eax,0xffffffff
10052345:	mov    DWORD PTR [edi+0x60],eax
10052348:	jmp    0x10052350
1005234a:	lea    ebx,[ebx+0x0]
10052350:	add    DWORD PTR [edi+0x6c],ebx
10052353:	mov    edx,DWORD PTR [edi+0x6c]
10052356:	mov    ecx,DWORD PTR [edi+0x38]
10052359:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
1005235e:	mov    ebp,DWORD PTR [edi+0x48]
10052361:	mov    ecx,DWORD PTR [edi+0x58]
10052364:	shl    ebp,cl
10052366:	mov    ecx,DWORD PTR [edi+0x44]
10052369:	xor    eax,ebp
1005236b:	and    eax,DWORD PTR [edi+0x54]
1005236e:	mov    ebp,DWORD PTR [edi+0x34]
10052371:	and    ebp,edx
10052373:	mov    edx,DWORD PTR [edi+0x40]
10052376:	mov    DWORD PTR [edi+0x48],eax
10052379:	mov    ax,WORD PTR [ecx+eax*2]
1005237d:	mov    WORD PTR [edx+ebp*2],ax
10052381:	mov    ecx,DWORD PTR [edi+0x6c]
10052384:	and    ecx,DWORD PTR [edi+0x34]
10052387:	mov    edx,DWORD PTR [edi+0x40]
1005238a:	movzx  ebp,WORD PTR [edx+ecx*2]
1005238e:	mov    eax,DWORD PTR [edi+0x48]
10052391:	mov    ecx,DWORD PTR [edi+0x44]
10052394:	mov    dx,WORD PTR [edi+0x6c]
10052398:	mov    WORD PTR [ecx+eax*2],dx
1005239c:	add    DWORD PTR [edi+0x60],0xffffffff
100523a0:	jne    0x10052350
100523a2:	jmp    0x1005242e
100523a7:	add    DWORD PTR [edi+0x6c],eax
100523aa:	mov    eax,DWORD PTR [edi+0x6c]
100523ad:	mov    ecx,DWORD PTR [edi+0x38]
100523b0:	lea    edx,[eax+ecx*1]
100523b3:	mov    ecx,DWORD PTR [edi+0x58]
100523b6:	mov    DWORD PTR [edi+0x60],0x0
100523bd:	movzx  eax,BYTE PTR [edx]
100523c0:	mov    DWORD PTR [edi+0x48],eax
100523c3:	movzx  edx,BYTE PTR [edx+0x1]
100523c7:	shl    eax,cl
100523c9:	xor    eax,edx
100523cb:	and    eax,DWORD PTR [edi+0x54]
100523ce:	mov    DWORD PTR [edi+0x48],eax
100523d1:	jmp    0x10052431
100523d3:	mov    eax,DWORD PTR [edi+0x6c]
100523d6:	mov    ecx,DWORD PTR [edi+0x38]
100523d9:	mov    al,BYTE PTR [eax+ecx*1]
100523dc:	mov    edx,DWORD PTR [edi+0x16a0]
100523e2:	mov    ecx,DWORD PTR [edi+0x16a4]
100523e8:	mov    WORD PTR [ecx+edx*2],0x0
100523ee:	mov    ecx,DWORD PTR [edi+0x16a0]
100523f4:	mov    edx,DWORD PTR [edi+0x1698]
100523fa:	mov    BYTE PTR [edx+ecx*1],al
100523fd:	add    DWORD PTR [edi+0x16a0],ebx
10052403:	movzx  edx,al
10052406:	add    WORD PTR [edi+edx*4+0x94],bx
1005240e:	lea    eax,[edi+edx*4+0x94]
10052415:	mov    eax,DWORD PTR [edi+0x169c]
1005241b:	xor    ecx,ecx
1005241d:	sub    eax,ebx
1005241f:	cmp    DWORD PTR [edi+0x16a0],eax
10052425:	sete   cl
10052428:	add    DWORD PTR [edi+0x74],0xffffffff
1005242c:	mov    esi,ecx
1005242e:	add    DWORD PTR [edi+0x6c],ebx
10052431:	test   esi,esi
10052433:	je     0x100521d0
10052439:	mov    ecx,DWORD PTR [edi+0x5c]
1005243c:	test   ecx,ecx
1005243e:	jl     0x10052447
10052440:	mov    eax,DWORD PTR [edi+0x38]
10052443:	add    eax,ecx
10052445:	jmp    0x10052449
10052447:	xor    eax,eax
10052449:	mov    edx,DWORD PTR [edi+0x6c]
1005244c:	push   0x0
1005244e:	sub    edx,ecx
10052450:	push   edx
10052451:	push   eax
10052452:	push   edi
10052453:	call   0x10055f30
10052458:	mov    eax,DWORD PTR [edi+0x6c]
1005245b:	mov    DWORD PTR [edi+0x5c],eax
1005245e:	mov    eax,DWORD PTR [edi]
10052460:	add    esp,0x10
10052463:	call   0x10051350
10052468:	mov    ecx,DWORD PTR [edi]
1005246a:	cmp    DWORD PTR [ecx+0x10],0x0
1005246e:	jne    0x100521d0
10052474:	pop    edi
10052475:	pop    esi
10052476:	pop    ebp
10052477:	xor    eax,eax
10052479:	pop    ebx
1005247a:	ret    
1005247b:	mov    ecx,DWORD PTR [edi+0x5c]
1005247e:	test   ecx,ecx
10052480:	jl     0x10052489
10052482:	mov    eax,DWORD PTR [edi+0x38]
10052485:	add    eax,ecx
10052487:	jmp    0x1005248b
10052489:	xor    eax,eax
1005248b:	xor    edx,edx
1005248d:	cmp    esi,0x4
10052490:	sete   dl
10052493:	push   edx
10052494:	mov    edx,DWORD PTR [edi+0x6c]
10052497:	sub    edx,ecx
10052499:	push   edx
1005249a:	push   eax
1005249b:	push   edi
1005249c:	call   0x10055f30
100524a1:	mov    eax,DWORD PTR [edi+0x6c]
100524a4:	mov    DWORD PTR [edi+0x5c],eax
100524a7:	mov    eax,DWORD PTR [edi]
100524a9:	add    esp,0x10
100524ac:	call   0x10051350
100524b1:	mov    ecx,DWORD PTR [edi]
100524b3:	xor    eax,eax
100524b5:	cmp    DWORD PTR [ecx+0x10],eax
100524b8:	jne    0x100524cb
100524ba:	cmp    esi,0x4
100524bd:	setne  al
100524c0:	pop    edi
100524c1:	pop    esi
100524c2:	pop    ebp
100524c3:	pop    ebx
100524c4:	sub    eax,0x1
100524c7:	and    eax,0x2
100524ca:	ret    
100524cb:	cmp    esi,0x4
100524ce:	sete   al
100524d1:	pop    edi
100524d2:	pop    esi
100524d3:	pop    ebp
100524d4:	pop    ebx
100524d5:	lea    eax,[eax+eax*1+0x1]
100524d9:	ret    
100524da:	int3   
100524db:	int3   
100524dc:	int3   
100524dd:	int3   
100524de:	int3   
100524df:	int3   
100524e0:	push   ecx
100524e1:	push   ebx
100524e2:	push   ebp
100524e3:	push   esi
100524e4:	push   edi
100524e5:	mov    edi,DWORD PTR [esp+0x18]
100524e9:	mov    DWORD PTR [esp+0x10],0x0
100524f1:	mov    ebp,0x1
100524f6:	mov    eax,DWORD PTR [edi+0x74]
100524f9:	cmp    eax,0x106
100524fe:	jae    0x10052523
10052500:	call   0x10051fb0
10052505:	mov    eax,DWORD PTR [edi+0x74]
10052508:	cmp    eax,0x106
1005250d:	mov    esi,DWORD PTR [esp+0x1c]
10052511:	jae    0x1005251b
10052513:	test   esi,esi
10052515:	je     0x10052776
1005251b:	test   eax,eax
1005251d:	je     0x1005282b
10052523:	cmp    eax,0x3
10052526:	jb     0x10052575
10052528:	mov    eax,DWORD PTR [edi+0x48]
1005252b:	mov    ecx,DWORD PTR [edi+0x58]
1005252e:	mov    edx,DWORD PTR [edi+0x6c]
10052531:	mov    esi,DWORD PTR [edi+0x34]
10052534:	shl    eax,cl
10052536:	mov    ecx,DWORD PTR [edi+0x38]
10052539:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1005253e:	xor    eax,ecx
10052540:	and    eax,DWORD PTR [edi+0x54]
10052543:	mov    ecx,DWORD PTR [edi+0x44]
10052546:	mov    DWORD PTR [edi+0x48],eax
10052549:	movzx  eax,WORD PTR [ecx+eax*2]
1005254d:	and    esi,edx
1005254f:	mov    edx,DWORD PTR [edi+0x40]
10052552:	mov    WORD PTR [edx+esi*2],ax
10052556:	mov    ecx,DWORD PTR [edi+0x6c]
10052559:	and    ecx,DWORD PTR [edi+0x34]
1005255c:	mov    edx,DWORD PTR [edi+0x40]
1005255f:	movzx  eax,WORD PTR [edx+ecx*2]
10052563:	mov    ecx,DWORD PTR [edi+0x48]
10052566:	mov    edx,DWORD PTR [edi+0x44]
10052569:	mov    DWORD PTR [esp+0x10],eax
1005256d:	movzx  eax,WORD PTR [edi+0x6c]
10052571:	mov    WORD PTR [edx+ecx*2],ax
10052575:	mov    edx,DWORD PTR [edi+0x70]
10052578:	mov    ecx,DWORD PTR [edi+0x60]
1005257b:	mov    DWORD PTR [edi+0x64],edx
1005257e:	mov    edx,DWORD PTR [esp+0x10]
10052582:	test   edx,edx
10052584:	mov    ebx,0x2
10052589:	mov    DWORD PTR [edi+0x78],ecx
1005258c:	mov    DWORD PTR [edi+0x60],ebx
1005258f:	je     0x10052602
10052591:	mov    eax,ecx
10052593:	cmp    eax,DWORD PTR [edi+0x80]
10052599:	jae    0x10052602
1005259b:	mov    eax,DWORD PTR [edi+0x6c]
1005259e:	mov    ecx,DWORD PTR [edi+0x2c]
100525a1:	sub    eax,edx
100525a3:	sub    ecx,0x106
100525a9:	cmp    eax,ecx
100525ab:	ja     0x10052602
100525ad:	mov    ecx,DWORD PTR [edi+0x88]
100525b3:	cmp    ecx,ebx
100525b5:	je     0x100525c5
100525b7:	cmp    ecx,0x3
100525ba:	je     0x100525ca
100525bc:	mov    eax,edx
100525be:	call   0x10051d60
100525c3:	jmp    0x100525d9
100525c5:	cmp    ecx,0x3
100525c8:	jne    0x100525dc
100525ca:	cmp    eax,ebp
100525cc:	jne    0x100525dc
100525ce:	push   edx
100525cf:	mov    esi,edi
100525d1:	call   0x10051ee0
100525d6:	add    esp,0x4
100525d9:	mov    DWORD PTR [edi+0x60],eax
100525dc:	mov    eax,DWORD PTR [edi+0x60]
100525df:	cmp    eax,0x5
100525e2:	ja     0x10052602
100525e4:	cmp    DWORD PTR [edi+0x88],ebp
100525ea:	je     0x100525ff
100525ec:	cmp    eax,0x3
100525ef:	jne    0x10052602
100525f1:	mov    edx,DWORD PTR [edi+0x6c]
100525f4:	sub    edx,DWORD PTR [edi+0x70]
100525f7:	cmp    edx,0x1000
100525fd:	jbe    0x10052602
100525ff:	mov    DWORD PTR [edi+0x60],ebx
10052602:	mov    eax,DWORD PTR [edi+0x78]
10052605:	cmp    eax,0x3
10052608:	jb     0x1005277e
1005260e:	cmp    DWORD PTR [edi+0x60],eax
10052611:	ja     0x1005277e
10052617:	mov    dx,WORD PTR [edi+0x6c]
1005261b:	sub    dx,WORD PTR [edi+0x64]
1005261f:	mov    eax,DWORD PTR [edi+0x6c]
10052622:	mov    ecx,DWORD PTR [edi+0x74]
10052625:	mov    ebx,DWORD PTR [edi+0x16a4]
1005262b:	lea    esi,[eax+ecx*1-0x3]
1005262f:	mov    al,BYTE PTR [edi+0x78]
10052632:	sub    dx,bp
10052635:	movzx  ecx,dx
10052638:	mov    edx,DWORD PTR [edi+0x16a0]
1005263e:	mov    WORD PTR [ebx+edx*2],cx
10052642:	mov    edx,DWORD PTR [edi+0x1698]
10052648:	mov    ebx,DWORD PTR [edi+0x16a0]
1005264e:	sub    al,0x3
10052650:	mov    BYTE PTR [edx+ebx*1],al
10052653:	add    DWORD PTR [edi+0x16a0],ebp
10052659:	movzx  eax,al
1005265c:	movzx  edx,BYTE PTR [eax+0x1006a2a0]
10052663:	add    WORD PTR [edi+edx*4+0x498],bp
1005266b:	lea    eax,[edi+edx*4+0x498]
10052672:	add    ecx,0xffff
10052678:	cmp    cx,0x100
1005267d:	jae    0x1005268b
1005267f:	movzx  eax,cx
10052682:	movzx  eax,BYTE PTR [eax+0x1006a0a0]
10052689:	jmp    0x10052698
1005268b:	movzx  ecx,cx
1005268e:	shr    ecx,0x7
10052691:	movzx  eax,BYTE PTR [ecx+0x1006a1a0]
10052698:	add    WORD PTR [edi+eax*4+0x988],bp
100526a0:	mov    edx,DWORD PTR [edi+0x169c]
100526a6:	mov    eax,DWORD PTR [edi+0x78]
100526a9:	sub    edx,ebp
100526ab:	xor    ebx,ebx
100526ad:	cmp    DWORD PTR [edi+0x16a0],edx
100526b3:	mov    ecx,ebp
100526b5:	sete   bl
100526b8:	sub    ecx,eax
100526ba:	add    DWORD PTR [edi+0x74],ecx
100526bd:	add    eax,0xfffffffe
100526c0:	mov    DWORD PTR [edi+0x78],eax
100526c3:	add    DWORD PTR [edi+0x6c],ebp
100526c6:	mov    edx,DWORD PTR [edi+0x6c]
100526c9:	cmp    edx,esi
100526cb:	ja     0x1005271c
100526cd:	mov    eax,DWORD PTR [edi+0x48]
100526d0:	mov    ecx,DWORD PTR [edi+0x58]
100526d3:	mov    ebp,DWORD PTR [edi+0x34]
100526d6:	shl    eax,cl
100526d8:	mov    ecx,DWORD PTR [edi+0x38]
100526db:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
100526e0:	xor    eax,ecx
100526e2:	and    eax,DWORD PTR [edi+0x54]
100526e5:	mov    ecx,DWORD PTR [edi+0x44]
100526e8:	mov    DWORD PTR [edi+0x48],eax
100526eb:	movzx  eax,WORD PTR [ecx+eax*2]
100526ef:	and    ebp,edx
100526f1:	mov    edx,DWORD PTR [edi+0x40]
100526f4:	mov    WORD PTR [edx+ebp*2],ax
100526f8:	mov    ecx,DWORD PTR [edi+0x6c]
100526fb:	and    ecx,DWORD PTR [edi+0x34]
100526fe:	mov    edx,DWORD PTR [edi+0x40]
10052701:	movzx  eax,WORD PTR [edx+ecx*2]
10052705:	mov    ecx,DWORD PTR [edi+0x48]
10052708:	mov    edx,DWORD PTR [edi+0x44]
1005270b:	mov    DWORD PTR [esp+0x10],eax
1005270f:	movzx  eax,WORD PTR [edi+0x6c]
10052713:	mov    WORD PTR [edx+ecx*2],ax
10052717:	mov    ebp,0x1
1005271c:	add    DWORD PTR [edi+0x78],0xffffffff
10052720:	jne    0x100526c3
10052722:	add    DWORD PTR [edi+0x6c],ebp
10052725:	test   ebx,ebx
10052727:	mov    eax,DWORD PTR [edi+0x6c]
1005272a:	mov    DWORD PTR [edi+0x68],0x0
10052731:	mov    DWORD PTR [edi+0x60],0x2
10052738:	je     0x100524f6
1005273e:	mov    edx,DWORD PTR [edi+0x5c]
10052741:	test   edx,edx
10052743:	jl     0x1005274c
10052745:	mov    ecx,DWORD PTR [edi+0x38]
10052748:	add    ecx,edx
1005274a:	jmp    0x1005274e
1005274c:	xor    ecx,ecx
1005274e:	push   0x0
10052750:	sub    eax,edx
10052752:	push   eax
10052753:	push   ecx
10052754:	push   edi
10052755:	call   0x10055f30
1005275a:	mov    ecx,DWORD PTR [edi+0x6c]
1005275d:	mov    eax,DWORD PTR [edi]
1005275f:	add    esp,0x10
10052762:	mov    DWORD PTR [edi+0x5c],ecx
10052765:	call   0x10051350
1005276a:	mov    edx,DWORD PTR [edi]
1005276c:	cmp    DWORD PTR [edx+0x10],0x0
10052770:	jne    0x100524f6
10052776:	pop    edi
10052777:	pop    esi
10052778:	pop    ebp
10052779:	xor    eax,eax
1005277b:	pop    ebx
1005277c:	pop    ecx
1005277d:	ret    
1005277e:	cmp    DWORD PTR [edi+0x68],0x0
10052782:	je     0x1005281c
10052788:	mov    eax,DWORD PTR [edi+0x6c]
1005278b:	mov    ecx,DWORD PTR [edi+0x38]
1005278e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10052792:	mov    edx,DWORD PTR [edi+0x16a0]
10052798:	mov    ecx,DWORD PTR [edi+0x16a4]
1005279e:	mov    WORD PTR [ecx+edx*2],0x0
100527a4:	mov    edx,DWORD PTR [edi+0x1698]
100527aa:	mov    ecx,DWORD PTR [edi+0x16a0]
100527b0:	mov    BYTE PTR [edx+ecx*1],al
100527b3:	add    DWORD PTR [edi+0x16a0],ebp
100527b9:	movzx  edx,al
100527bc:	add    WORD PTR [edi+edx*4+0x94],bp
100527c4:	lea    eax,[edi+edx*4+0x94]
100527cb:	mov    eax,DWORD PTR [edi+0x169c]
100527d1:	sub    eax,ebp
100527d3:	cmp    DWORD PTR [edi+0x16a0],eax
100527d9:	jne    0x1005280a
100527db:	mov    ecx,DWORD PTR [edi+0x5c]
100527de:	test   ecx,ecx
100527e0:	jl     0x100527e9
100527e2:	mov    eax,DWORD PTR [edi+0x38]
100527e5:	add    eax,ecx
100527e7:	jmp    0x100527eb
100527e9:	xor    eax,eax
100527eb:	mov    edx,DWORD PTR [edi+0x6c]
100527ee:	push   0x0
100527f0:	sub    edx,ecx
100527f2:	push   edx
100527f3:	push   eax
100527f4:	push   edi
100527f5:	call   0x10055f30
100527fa:	mov    eax,DWORD PTR [edi+0x6c]
100527fd:	mov    DWORD PTR [edi+0x5c],eax
10052800:	mov    eax,DWORD PTR [edi]
10052802:	add    esp,0x10
10052805:	call   0x10051350
1005280a:	mov    ecx,DWORD PTR [edi]
1005280c:	add    DWORD PTR [edi+0x6c],ebp
1005280f:	add    DWORD PTR [edi+0x74],0xffffffff
10052813:	cmp    DWORD PTR [ecx+0x10],0x0
10052817:	jmp    0x10052770
1005281c:	add    DWORD PTR [edi+0x6c],ebp
1005281f:	add    DWORD PTR [edi+0x74],0xffffffff
10052823:	mov    DWORD PTR [edi+0x68],ebp
10052826:	jmp    0x100524f6
1005282b:	cmp    DWORD PTR [edi+0x68],0x0
1005282f:	je     0x1005287b
10052831:	mov    edx,DWORD PTR [edi+0x6c]
10052834:	mov    eax,DWORD PTR [edi+0x38]
10052837:	mov    al,BYTE PTR [edx+eax*1-0x1]
1005283b:	mov    ecx,DWORD PTR [edi+0x16a0]
10052841:	mov    edx,DWORD PTR [edi+0x16a4]
10052847:	mov    WORD PTR [edx+ecx*2],0x0
1005284d:	mov    edx,DWORD PTR [edi+0x16a0]
10052853:	mov    ecx,DWORD PTR [edi+0x1698]
10052859:	mov    BYTE PTR [ecx+edx*1],al
1005285c:	add    DWORD PTR [edi+0x16a0],ebp
10052862:	movzx  eax,al
10052865:	add    WORD PTR [edi+eax*4+0x94],bp
1005286d:	lea    eax,[edi+eax*4+0x94]
10052874:	mov    DWORD PTR [edi+0x68],0x0
1005287b:	mov    ecx,DWORD PTR [edi+0x5c]
1005287e:	test   ecx,ecx
10052880:	jl     0x10052889
10052882:	mov    eax,DWORD PTR [edi+0x38]
10052885:	add    eax,ecx
10052887:	jmp    0x1005288b
10052889:	xor    eax,eax
1005288b:	xor    edx,edx
1005288d:	cmp    esi,0x4
10052890:	sete   dl
10052893:	push   edx
10052894:	mov    edx,DWORD PTR [edi+0x6c]
10052897:	sub    edx,ecx
10052899:	push   edx
1005289a:	push   eax
1005289b:	push   edi
1005289c:	call   0x10055f30
100528a1:	mov    eax,DWORD PTR [edi+0x6c]
100528a4:	mov    DWORD PTR [edi+0x5c],eax
100528a7:	mov    eax,DWORD PTR [edi]
100528a9:	add    esp,0x10
100528ac:	call   0x10051350
100528b1:	mov    ecx,DWORD PTR [edi]
100528b3:	xor    eax,eax
100528b5:	cmp    DWORD PTR [ecx+0x10],eax
100528b8:	jne    0x100528cc
100528ba:	cmp    esi,0x4
100528bd:	setne  al
100528c0:	pop    edi
100528c1:	pop    esi
100528c2:	pop    ebp
100528c3:	pop    ebx
100528c4:	sub    eax,0x1
100528c7:	and    eax,0x2
100528ca:	pop    ecx
100528cb:	ret    
100528cc:	cmp    esi,0x4
100528cf:	sete   al
100528d2:	pop    edi
100528d3:	pop    esi
100528d4:	pop    ebp
100528d5:	pop    ebx
100528d6:	lea    eax,[eax+eax*1+0x1]
100528da:	pop    ecx
100528db:	ret    
100528dc:	int3   
100528dd:	int3   
100528de:	int3   
100528df:	int3   
100528e0:	push   ebx
100528e1:	push   esi
100528e2:	push   edi
100528e3:	mov    edi,DWORD PTR [esp+0x10]
100528e7:	xor    ebx,ebx
100528e9:	cmp    edi,ebx
100528eb:	je     0x10052966
100528ed:	mov    esi,DWORD PTR [edi+0x1c]
100528f0:	cmp    esi,ebx
100528f2:	je     0x10052966
100528f4:	cmp    DWORD PTR [edi+0x20],ebx
100528f7:	je     0x10052966
100528f9:	cmp    DWORD PTR [edi+0x24],ebx
100528fc:	je     0x10052966
100528fe:	mov    DWORD PTR [edi+0x14],ebx
10052901:	mov    DWORD PTR [edi+0x8],ebx
10052904:	mov    DWORD PTR [edi+0x18],ebx
10052907:	mov    DWORD PTR [edi+0x2c],0x2
1005290e:	mov    eax,DWORD PTR [esi+0x8]
10052911:	mov    DWORD PTR [esi+0x10],eax
10052914:	mov    eax,DWORD PTR [esi+0x18]
10052917:	cmp    eax,ebx
10052919:	mov    DWORD PTR [esi+0x14],ebx
1005291c:	jge    0x10052923
1005291e:	neg    eax
10052920:	mov    DWORD PTR [esi+0x18],eax
10052923:	mov    eax,DWORD PTR [esi+0x18]
10052926:	mov    ecx,eax
10052928:	neg    ecx
1005292a:	sbb    ecx,ecx
1005292c:	and    ecx,0xffffffb9
1005292f:	push   ebx
10052930:	add    ecx,0x71
10052933:	cmp    eax,0x2
10052936:	push   ebx
10052937:	mov    DWORD PTR [esi+0x4],ecx
1005293a:	push   ebx
1005293b:	jne    0x10052944
1005293d:	call   0x100563e0
10052942:	jmp    0x10052949
10052944:	call   0x10054410
10052949:	add    esp,0xc
1005294c:	mov    DWORD PTR [edi+0x30],eax
1005294f:	push   esi
10052950:	mov    DWORD PTR [esi+0x28],ebx
10052953:	call   0x100558e0
10052958:	add    esp,0x4
1005295b:	call   0x10051cd0
10052960:	pop    edi
10052961:	pop    esi
10052962:	xor    eax,eax
10052964:	pop    ebx
10052965:	ret    
10052966:	pop    edi
10052967:	pop    esi
10052968:	mov    eax,0xfffffffe
1005296d:	pop    ebx
1005296e:	ret    
1005296f:	int3   
10052970:	mov    eax,DWORD PTR [esp+0x1c]
10052974:	xor    ecx,ecx
10052976:	cmp    eax,ecx
10052978:	push   ebp
10052979:	mov    ebp,0x1
1005297e:	je     0x10052b86
10052984:	cmp    BYTE PTR [eax],0x31
10052987:	jne    0x10052b86
1005298d:	cmp    DWORD PTR [esp+0x24],0x38
10052992:	jne    0x10052b86
10052998:	push   edi
10052999:	mov    edi,DWORD PTR [esp+0xc]
1005299d:	cmp    edi,ecx
1005299f:	jne    0x100529a7
100529a1:	pop    edi
100529a2:	lea    eax,[ebp-0x3]
100529a5:	pop    ebp
100529a6:	ret    
100529a7:	cmp    DWORD PTR [edi+0x20],ecx
100529aa:	mov    DWORD PTR [edi+0x18],ecx
100529ad:	jne    0x100529b9
100529af:	mov    DWORD PTR [edi+0x20],0x10056400
100529b6:	mov    DWORD PTR [edi+0x28],ecx
100529b9:	cmp    DWORD PTR [edi+0x24],ecx
100529bc:	jne    0x100529c5
100529be:	mov    DWORD PTR [edi+0x24],0x10056420
100529c5:	cmp    DWORD PTR [esp+0x10],0xffffffff
100529ca:	jne    0x100529d4
100529cc:	mov    DWORD PTR [esp+0x10],0x6
100529d4:	push   ebx
100529d5:	mov    ebx,DWORD PTR [esp+0x1c]
100529d9:	cmp    ebx,ecx
100529db:	jge    0x100529e3
100529dd:	xor    ebp,ebp
100529df:	neg    ebx
100529e1:	jmp    0x100529f0
100529e3:	cmp    ebx,0xf
100529e6:	jle    0x100529f0
100529e8:	mov    ebp,0x2
100529ed:	sub    ebx,0x10
100529f0:	mov    eax,DWORD PTR [esp+0x20]
100529f4:	add    eax,0xffffffff
100529f7:	cmp    eax,0x8
100529fa:	ja     0x10052b7d
10052a00:	cmp    DWORD PTR [esp+0x18],0x8
10052a05:	jne    0x10052b7d
10052a0b:	lea    ecx,[ebx-0x8]
10052a0e:	cmp    ecx,0x7
10052a11:	ja     0x10052b7d
10052a17:	cmp    DWORD PTR [esp+0x14],0x9
10052a1c:	ja     0x10052b7d
10052a22:	cmp    DWORD PTR [esp+0x24],0x4
10052a27:	ja     0x10052b7d
10052a2d:	cmp    ebx,0x8
10052a30:	jne    0x10052a37
10052a32:	mov    ebx,0x9
10052a37:	mov    edx,DWORD PTR [edi+0x28]
10052a3a:	mov    eax,DWORD PTR [edi+0x20]
10052a3d:	push   esi
10052a3e:	push   0x16c0
10052a43:	push   0x1
10052a45:	push   edx
10052a46:	call   eax
10052a48:	mov    esi,eax
10052a4a:	add    esp,0xc
10052a4d:	test   esi,esi
10052a4f:	je     0x10052b73
10052a55:	mov    DWORD PTR [edi+0x1c],esi
10052a58:	mov    DWORD PTR [esi+0x18],ebp
10052a5b:	mov    ecx,ebx
10052a5d:	mov    ebp,0x1
10052a62:	shl    ebp,cl
10052a64:	mov    DWORD PTR [esi+0x30],ebx
10052a67:	mov    ebx,DWORD PTR [esp+0x24]
10052a6b:	mov    eax,0x1
10052a70:	lea    ecx,[ebp-0x1]
10052a73:	mov    DWORD PTR [esi+0x34],ecx
10052a76:	lea    ecx,[ebx+0x7]
10052a79:	shl    eax,cl
10052a7b:	mov    DWORD PTR [esi+0x50],ecx
10052a7e:	add    ecx,0x2
10052a81:	mov    DWORD PTR [esi],edi
10052a83:	mov    DWORD PTR [esi+0x4c],eax
10052a86:	add    eax,0xffffffff
10052a89:	mov    DWORD PTR [esi+0x54],eax
10052a8c:	mov    eax,0xaaaaaaab
10052a91:	mul    ecx
10052a93:	shr    edx,1
10052a95:	mov    DWORD PTR [esi+0x1c],0x0
10052a9c:	mov    DWORD PTR [esi+0x2c],ebp
10052a9f:	mov    DWORD PTR [esi+0x58],edx
10052aa2:	mov    edx,DWORD PTR [edi+0x28]
10052aa5:	mov    eax,DWORD PTR [edi+0x20]
10052aa8:	push   0x2
10052aaa:	push   ebp
10052aab:	push   edx
10052aac:	call   eax
10052aae:	mov    ecx,DWORD PTR [esi+0x2c]
10052ab1:	mov    DWORD PTR [esi+0x38],eax
10052ab4:	mov    edx,DWORD PTR [edi+0x28]
10052ab7:	mov    eax,DWORD PTR [edi+0x20]
10052aba:	push   0x2
10052abc:	push   ecx
10052abd:	push   edx
10052abe:	call   eax
10052ac0:	mov    ecx,DWORD PTR [esi+0x4c]
10052ac3:	mov    DWORD PTR [esi+0x40],eax
10052ac6:	mov    edx,DWORD PTR [edi+0x28]
10052ac9:	mov    eax,DWORD PTR [edi+0x20]
10052acc:	push   0x2
10052ace:	push   ecx
10052acf:	push   edx
10052ad0:	call   eax
10052ad2:	mov    DWORD PTR [esi+0x44],eax
10052ad5:	lea    ecx,[ebx+0x6]
10052ad8:	mov    eax,0x1
10052add:	shl    eax,cl
10052adf:	push   0x4
10052ae1:	mov    DWORD PTR [esi+0x169c],eax
10052ae7:	mov    ecx,DWORD PTR [edi+0x28]
10052aea:	mov    edx,DWORD PTR [edi+0x20]
10052aed:	push   eax
10052aee:	push   ecx
10052aef:	call   edx
10052af1:	mov    ecx,DWORD PTR [esi+0x169c]
10052af7:	add    esp,0x30
10052afa:	cmp    DWORD PTR [esi+0x38],0x0
10052afe:	lea    edx,[ecx*4+0x0]
10052b05:	mov    DWORD PTR [esi+0x8],eax
10052b08:	mov    DWORD PTR [esi+0xc],edx
10052b0b:	je     0x10052b5b
10052b0d:	cmp    DWORD PTR [esi+0x40],0x0
10052b11:	je     0x10052b5b
10052b13:	cmp    DWORD PTR [esi+0x44],0x0
10052b17:	je     0x10052b5b
10052b19:	test   eax,eax
10052b1b:	je     0x10052b5b
10052b1d:	mov    edx,ecx
10052b1f:	shr    edx,1
10052b21:	lea    edx,[eax+edx*2]
10052b24:	lea    eax,[eax+ecx*2]
10052b27:	add    eax,ecx
10052b29:	mov    ecx,DWORD PTR [esp+0x18]
10052b2d:	mov    DWORD PTR [esi+0x16a4],edx
10052b33:	mov    edx,DWORD PTR [esp+0x28]
10052b37:	push   edi
10052b38:	mov    DWORD PTR [esi+0x1698],eax
10052b3e:	mov    DWORD PTR [esi+0x84],ecx
10052b44:	mov    DWORD PTR [esi+0x88],edx
10052b4a:	mov    BYTE PTR [esi+0x24],0x8
10052b4e:	call   0x100528e0
10052b53:	add    esp,0x4
10052b56:	pop    esi
10052b57:	pop    ebx
10052b58:	pop    edi
10052b59:	pop    ebp
10052b5a:	ret    
10052b5b:	mov    DWORD PTR [esi+0x4],0x29a
10052b62:	mov    eax,ds:0x1006c528
10052b67:	push   edi
10052b68:	mov    DWORD PTR [edi+0x18],eax
10052b6b:	call   0x10051b80
10052b70:	add    esp,0x4
10052b73:	pop    esi
10052b74:	pop    ebx
10052b75:	pop    edi
10052b76:	mov    eax,0xfffffffc
10052b7b:	pop    ebp
10052b7c:	ret    
10052b7d:	pop    ebx
10052b7e:	pop    edi
10052b7f:	mov    eax,0xfffffffe
10052b84:	pop    ebp
10052b85:	ret    
10052b86:	mov    eax,0xfffffffa
10052b8b:	pop    ebp
10052b8c:	ret    
10052b8d:	int3   
10052b8e:	int3   
10052b8f:	int3   
10052b90:	mov    edx,DWORD PTR [esp+0x4]
10052b94:	xor    ecx,ecx
10052b96:	cmp    edx,ecx
10052b98:	je     0x10052be7
10052b9a:	mov    eax,DWORD PTR [edx+0x1c]
10052b9d:	cmp    eax,ecx
10052b9f:	je     0x10052be7
10052ba1:	mov    DWORD PTR [eax+0x1c],ecx
10052ba4:	mov    DWORD PTR [edx+0x14],ecx
10052ba7:	mov    DWORD PTR [edx+0x8],ecx
10052baa:	mov    DWORD PTR [edx+0x18],ecx
10052bad:	mov    DWORD PTR [edx+0x30],0x1
10052bb4:	mov    DWORD PTR [eax],ecx
10052bb6:	mov    DWORD PTR [eax+0x4],ecx
10052bb9:	mov    DWORD PTR [eax+0xc],ecx
10052bbc:	mov    DWORD PTR [eax+0x20],ecx
10052bbf:	mov    DWORD PTR [eax+0x28],ecx
10052bc2:	mov    DWORD PTR [eax+0x2c],ecx
10052bc5:	mov    DWORD PTR [eax+0x30],ecx
10052bc8:	mov    DWORD PTR [eax+0x38],ecx
10052bcb:	mov    DWORD PTR [eax+0x3c],ecx
10052bce:	lea    ecx,[eax+0x530]
10052bd4:	mov    DWORD PTR [eax+0x14],0x8000
10052bdb:	mov    DWORD PTR [eax+0x6c],ecx
10052bde:	mov    DWORD PTR [eax+0x50],ecx
10052be1:	mov    DWORD PTR [eax+0x4c],ecx
10052be4:	xor    eax,eax
10052be6:	ret    
10052be7:	mov    eax,0xfffffffe
10052bec:	ret    
10052bed:	int3   
10052bee:	int3   
10052bef:	int3   
10052bf0:	mov    eax,DWORD PTR [esp+0xc]
10052bf4:	push   edi
10052bf5:	xor    edi,edi
10052bf7:	cmp    eax,edi
10052bf9:	je     0x10052cb4
10052bff:	cmp    BYTE PTR [eax],0x31
10052c02:	jne    0x10052cb4
10052c08:	cmp    DWORD PTR [esp+0x14],0x38
10052c0d:	jne    0x10052cb4
10052c13:	push   esi
10052c14:	mov    esi,DWORD PTR [esp+0xc]
10052c18:	cmp    esi,edi
10052c1a:	je     0x10052cac
10052c20:	cmp    DWORD PTR [esi+0x20],edi
10052c23:	mov    DWORD PTR [esi+0x18],edi
10052c26:	jne    0x10052c32
10052c28:	mov    DWORD PTR [esi+0x20],0x10056400
10052c2f:	mov    DWORD PTR [esi+0x28],edi
10052c32:	cmp    DWORD PTR [esi+0x24],edi
10052c35:	jne    0x10052c3e
10052c37:	mov    DWORD PTR [esi+0x24],0x10056420
10052c3e:	mov    eax,DWORD PTR [esi+0x28]
10052c41:	mov    ecx,DWORD PTR [esi+0x20]
10052c44:	push   0x2530
10052c49:	push   0x1
10052c4b:	push   eax
10052c4c:	call   ecx
10052c4e:	add    esp,0xc
10052c51:	cmp    eax,edi
10052c53:	jne    0x10052c5d
10052c55:	pop    esi
10052c56:	mov    eax,0xfffffffc
10052c5b:	pop    edi
10052c5c:	ret    
10052c5d:	mov    ecx,DWORD PTR [esp+0x10]
10052c61:	cmp    ecx,edi
10052c63:	mov    DWORD PTR [esi+0x1c],eax
10052c66:	jge    0x10052c6f
10052c68:	mov    DWORD PTR [eax+0x8],edi
10052c6b:	neg    ecx
10052c6d:	jmp    0x10052c82
10052c6f:	mov    edx,ecx
10052c71:	sar    edx,0x4
10052c74:	add    edx,0x1
10052c77:	cmp    ecx,0x30
10052c7a:	mov    DWORD PTR [eax+0x8],edx
10052c7d:	jge    0x10052c82
10052c7f:	and    ecx,0xf
10052c82:	lea    edx,[ecx-0x8]
10052c85:	cmp    edx,0x7
10052c88:	ja     0x10052c9c
10052c8a:	push   esi
10052c8b:	mov    DWORD PTR [eax+0x24],ecx
10052c8e:	mov    DWORD PTR [eax+0x34],edi
10052c91:	call   0x10052b90
10052c96:	add    esp,0x4
10052c99:	pop    esi
10052c9a:	pop    edi
10052c9b:	ret    
10052c9c:	mov    ecx,DWORD PTR [esi+0x24]
10052c9f:	push   eax
10052ca0:	mov    eax,DWORD PTR [esi+0x28]
10052ca3:	push   eax
10052ca4:	call   ecx
10052ca6:	add    esp,0x8
10052ca9:	mov    DWORD PTR [esi+0x1c],edi
10052cac:	pop    esi
10052cad:	mov    eax,0xfffffffe
10052cb2:	pop    edi
10052cb3:	ret    
10052cb4:	mov    eax,0xfffffffa
10052cb9:	pop    edi
10052cba:	ret    
10052cbb:	int3   
10052cbc:	int3   
10052cbd:	int3   
10052cbe:	int3   
10052cbf:	int3   
10052cc0:	mov    DWORD PTR [eax+0x4c],0x10068ff0
10052cc7:	mov    DWORD PTR [eax+0x54],0x9
10052cce:	mov    DWORD PTR [eax+0x50],0x100697f0
10052cd5:	mov    DWORD PTR [eax+0x58],0x5
10052cdc:	ret    
10052cdd:	int3   
10052cde:	int3   
10052cdf:	int3   
10052ce0:	push   ebp
10052ce1:	push   esi
10052ce2:	mov    esi,DWORD PTR [ebx+0x1c]
10052ce5:	xor    ebp,ebp
10052ce7:	cmp    DWORD PTR [esi+0x34],ebp
10052cea:	push   edi
10052ceb:	mov    edi,eax
10052ced:	jne    0x10052d16
10052cef:	mov    ecx,DWORD PTR [esi+0x24]
10052cf2:	mov    edx,DWORD PTR [ebx+0x20]
10052cf5:	mov    eax,0x1
10052cfa:	shl    eax,cl
10052cfc:	mov    ecx,DWORD PTR [ebx+0x28]
10052cff:	push   0x1
10052d01:	push   eax
10052d02:	push   ecx
10052d03:	call   edx
10052d05:	add    esp,0xc
10052d08:	cmp    eax,ebp
10052d0a:	mov    DWORD PTR [esi+0x34],eax
10052d0d:	jne    0x10052d16
10052d0f:	pop    edi
10052d10:	pop    esi
10052d11:	lea    eax,[ebp+0x1]
10052d14:	pop    ebp
10052d15:	ret    
10052d16:	cmp    DWORD PTR [esi+0x28],ebp
10052d19:	jne    0x10052d2e
10052d1b:	mov    ecx,DWORD PTR [esi+0x24]
10052d1e:	mov    eax,0x1
10052d23:	shl    eax,cl
10052d25:	mov    DWORD PTR [esi+0x30],ebp
10052d28:	mov    DWORD PTR [esi+0x2c],ebp
10052d2b:	mov    DWORD PTR [esi+0x28],eax
10052d2e:	sub    edi,DWORD PTR [ebx+0x10]
10052d31:	mov    eax,DWORD PTR [esi+0x28]
10052d34:	cmp    edi,eax
10052d36:	jb     0x10052d5a
10052d38:	mov    ecx,DWORD PTR [ebx+0xc]
10052d3b:	mov    edx,DWORD PTR [esi+0x34]
10052d3e:	push   eax
10052d3f:	sub    ecx,eax
10052d41:	push   ecx
10052d42:	push   edx
10052d43:	call   0x10045340
10052d48:	mov    eax,DWORD PTR [esi+0x28]
10052d4b:	add    esp,0xc
10052d4e:	pop    edi
10052d4f:	mov    DWORD PTR [esi+0x30],ebp
10052d52:	mov    DWORD PTR [esi+0x2c],eax
10052d55:	pop    esi
10052d56:	xor    eax,eax
10052d58:	pop    ebp
10052d59:	ret    
10052d5a:	sub    eax,DWORD PTR [esi+0x30]
10052d5d:	mov    ebp,eax
10052d5f:	cmp    ebp,edi
10052d61:	jbe    0x10052d65
10052d63:	mov    ebp,edi
10052d65:	mov    ecx,DWORD PTR [ebx+0xc]
10052d68:	mov    edx,DWORD PTR [esi+0x34]
10052d6b:	add    edx,DWORD PTR [esi+0x30]
10052d6e:	push   ebp
10052d6f:	sub    ecx,edi
10052d71:	push   ecx
10052d72:	push   edx
10052d73:	call   0x10045340
10052d78:	add    esp,0xc
10052d7b:	sub    edi,ebp
10052d7d:	je     0x10052da1
10052d7f:	mov    eax,DWORD PTR [ebx+0xc]
10052d82:	mov    ecx,DWORD PTR [esi+0x34]
10052d85:	push   edi
10052d86:	sub    eax,edi
10052d88:	push   eax
10052d89:	push   ecx
10052d8a:	call   0x10045340
10052d8f:	mov    edx,DWORD PTR [esi+0x28]
10052d92:	add    esp,0xc
10052d95:	mov    DWORD PTR [esi+0x30],edi
10052d98:	pop    edi
10052d99:	mov    DWORD PTR [esi+0x2c],edx
10052d9c:	pop    esi
10052d9d:	xor    eax,eax
10052d9f:	pop    ebp
10052da0:	ret    
10052da1:	add    DWORD PTR [esi+0x30],ebp
10052da4:	mov    ecx,DWORD PTR [esi+0x30]
10052da7:	mov    eax,DWORD PTR [esi+0x28]
10052daa:	cmp    ecx,eax
10052dac:	jne    0x10052db5
10052dae:	mov    DWORD PTR [esi+0x30],0x0
10052db5:	mov    ecx,DWORD PTR [esi+0x2c]
10052db8:	cmp    ecx,eax
10052dba:	jae    0x10052dc1
10052dbc:	add    ecx,ebp
10052dbe:	mov    DWORD PTR [esi+0x2c],ecx
10052dc1:	pop    edi
10052dc2:	pop    esi
10052dc3:	xor    eax,eax
10052dc5:	pop    ebp
10052dc6:	ret    
10052dc7:	int3   
10052dc8:	int3   
10052dc9:	int3   
10052dca:	int3   
10052dcb:	int3   
10052dcc:	int3   
10052dcd:	int3   
10052dce:	int3   
10052dcf:	int3   
10052dd0:	mov    eax,DWORD PTR [esp+0x4]
10052dd4:	sub    esp,0x2c
10052dd7:	test   eax,eax
10052dd9:	push   edi
10052dda:	je     0x1005432c
10052de0:	mov    edi,DWORD PTR [eax+0x1c]
10052de3:	test   edi,edi
10052de5:	je     0x1005432c
10052deb:	cmp    DWORD PTR [eax+0xc],0x0
10052def:	je     0x1005432c
10052df5:	cmp    DWORD PTR [eax],0x0
10052df8:	jne    0x10052e04
10052dfa:	cmp    DWORD PTR [eax+0x4],0x0
10052dfe:	jne    0x1005432c
10052e04:	cmp    DWORD PTR [edi],0xb
10052e07:	jne    0x10052e0f
10052e09:	mov    DWORD PTR [edi],0xc
10052e0f:	mov    ecx,DWORD PTR [eax+0xc]
10052e12:	mov    edx,DWORD PTR [eax+0x4]
10052e15:	push   ebx
10052e16:	mov    ebx,DWORD PTR [edi+0x38]
10052e19:	push   ebp
10052e1a:	mov    ebp,DWORD PTR [eax]
10052e1c:	mov    DWORD PTR [esp+0x24],ecx
10052e20:	mov    ecx,DWORD PTR [eax+0x10]
10052e23:	mov    eax,DWORD PTR [edi]
10052e25:	cmp    eax,0x1c
10052e28:	push   esi
10052e29:	mov    esi,DWORD PTR [edi+0x3c]
10052e2c:	mov    DWORD PTR [esp+0x1c],ecx
10052e30:	mov    DWORD PTR [esp+0x10],edx
10052e34:	mov    DWORD PTR [esp+0x18],ebx
10052e38:	mov    DWORD PTR [esp+0x38],edx
10052e3c:	mov    DWORD PTR [esp+0x2c],ecx
10052e40:	mov    DWORD PTR [esp+0x30],0x0
10052e48:	ja     0x100541d9
10052e4e:	mov    edi,edi
10052e50:	jmp    DWORD PTR [eax*4+0x10054338]
10052e57:	cmp    DWORD PTR [edi+0x8],0x0
10052e5b:	jne    0x10052e68
10052e5d:	mov    DWORD PTR [edi],0xc
10052e63:	jmp    0x100541ce
10052e68:	cmp    esi,0x10
10052e6b:	jae    0x10052e98
10052e6d:	lea    ecx,[ecx+0x0]
10052e70:	test   edx,edx
10052e72:	je     0x1005422c
10052e78:	movzx  eax,BYTE PTR [ebp+0x0]
10052e7c:	mov    ecx,esi
10052e7e:	shl    eax,cl
10052e80:	sub    edx,0x1
10052e83:	add    esi,0x8
10052e86:	add    ebp,0x1
10052e89:	add    ebx,eax
10052e8b:	cmp    esi,0x10
10052e8e:	mov    DWORD PTR [esp+0x10],edx
10052e92:	mov    DWORD PTR [esp+0x18],ebx
10052e96:	jb     0x10052e70
10052e98:	test   BYTE PTR [edi+0x8],0x2
10052e9c:	je     0x10052eeb
10052e9e:	cmp    ebx,0x8b1f
10052ea4:	jne    0x10052eeb
10052ea6:	push   0x0
10052ea8:	push   0x0
10052eaa:	push   0x0
10052eac:	call   0x100563e0
10052eb1:	mov    DWORD PTR [edi+0x18],eax
10052eb4:	push   0x2
10052eb6:	lea    ecx,[esp+0x30]
10052eba:	mov    BYTE PTR [esp+0x30],0x1f
10052ebf:	mov    BYTE PTR [esp+0x31],0x8b
10052ec4:	mov    edx,DWORD PTR [edi+0x18]
10052ec7:	push   ecx
10052ec8:	push   edx
10052ec9:	call   0x100563e0
10052ece:	mov    edx,DWORD PTR [esp+0x28]
10052ed2:	xor    ebx,ebx
10052ed4:	add    esp,0x18
10052ed7:	mov    DWORD PTR [edi+0x18],eax
10052eda:	mov    DWORD PTR [esp+0x18],ebx
10052ede:	xor    esi,esi
10052ee0:	mov    DWORD PTR [edi],0x1
10052ee6:	jmp    0x100541ce
10052eeb:	mov    eax,DWORD PTR [edi+0x20]
10052eee:	test   eax,eax
10052ef0:	mov    DWORD PTR [edi+0x10],0x0
10052ef7:	je     0x10052f00
10052ef9:	mov    DWORD PTR [eax+0x30],0xffffffff
10052f00:	test   BYTE PTR [edi+0x8],0x1
10052f04:	je     0x10052fb1
10052f0a:	movzx  eax,bl
10052f0d:	shl    eax,0x8
10052f10:	mov    ecx,ebx
10052f12:	shr    ecx,0x8
10052f15:	add    eax,ecx
10052f17:	xor    edx,edx
10052f19:	mov    ecx,0x1f
10052f1e:	div    ecx
10052f20:	test   edx,edx
10052f22:	jne    0x10052fb1
10052f28:	mov    edx,ebx
10052f2a:	and    dl,0xf
10052f2d:	cmp    dl,0x8
10052f30:	je     0x10052f46
10052f32:	mov    eax,DWORD PTR [esp+0x40]
10052f36:	mov    edx,DWORD PTR [esp+0x10]
10052f3a:	mov    DWORD PTR [eax+0x18],0x10069a3c
10052f41:	jmp    0x100541c8
10052f46:	shr    ebx,0x4
10052f49:	mov    ecx,ebx
10052f4b:	and    ecx,0xf
10052f4e:	add    ecx,0x8
10052f51:	sub    esi,0x4
10052f54:	cmp    ecx,DWORD PTR [edi+0x24]
10052f57:	mov    DWORD PTR [esp+0x18],ebx
10052f5b:	jbe    0x10052f71
10052f5d:	mov    ecx,DWORD PTR [esp+0x40]
10052f61:	mov    edx,DWORD PTR [esp+0x10]
10052f65:	mov    DWORD PTR [ecx+0x18],0x10069a28
10052f6c:	jmp    0x100541c8
10052f71:	mov    edx,0x1
10052f76:	shl    edx,cl
10052f78:	push   0x0
10052f7a:	push   0x0
10052f7c:	push   0x0
10052f7e:	mov    DWORD PTR [edi+0x14],edx
10052f81:	call   0x10054410
10052f86:	mov    ecx,DWORD PTR [esp+0x4c]
10052f8a:	mov    edx,DWORD PTR [esp+0x1c]
10052f8e:	shr    ebx,0x8
10052f91:	not    ebx
10052f93:	and    ebx,0x2
10052f96:	or     ebx,0x9
10052f99:	mov    DWORD PTR [edi+0x18],eax
10052f9c:	mov    DWORD PTR [ecx+0x30],eax
10052f9f:	mov    DWORD PTR [edi],ebx
10052fa1:	xor    ebx,ebx
10052fa3:	add    esp,0xc
10052fa6:	mov    DWORD PTR [esp+0x18],ebx
10052faa:	xor    esi,esi
10052fac:	jmp    0x100541ce
10052fb1:	mov    edx,DWORD PTR [esp+0x40]
10052fb5:	mov    DWORD PTR [edx+0x18],0x10069a10
10052fbc:	mov    edx,DWORD PTR [esp+0x10]
10052fc0:	jmp    0x100541c8
10052fc5:	cmp    esi,0x10
10052fc8:	jae    0x10052ff8
10052fca:	lea    ebx,[ebx+0x0]
10052fd0:	test   edx,edx
10052fd2:	je     0x1005422c
10052fd8:	movzx  eax,BYTE PTR [ebp+0x0]
10052fdc:	mov    ecx,esi
10052fde:	shl    eax,cl
10052fe0:	sub    edx,0x1
10052fe3:	add    esi,0x8
10052fe6:	add    ebp,0x1
10052fe9:	add    ebx,eax
10052feb:	cmp    esi,0x10
10052fee:	mov    DWORD PTR [esp+0x10],edx
10052ff2:	mov    DWORD PTR [esp+0x18],ebx
10052ff6:	jb     0x10052fd0
10052ff8:	cmp    bl,0x8
10052ffb:	mov    DWORD PTR [edi+0x10],ebx
10052ffe:	je     0x10053010
10053000:	mov    ecx,DWORD PTR [esp+0x40]
10053004:	mov    DWORD PTR [ecx+0x18],0x10069a3c
1005300b:	jmp    0x100541c8
10053010:	test   ebx,0xe000
10053016:	je     0x10053028
10053018:	mov    eax,DWORD PTR [esp+0x40]
1005301c:	mov    DWORD PTR [eax+0x18],0x100699f4
10053023:	jmp    0x100541c8
10053028:	mov    eax,DWORD PTR [edi+0x20]
1005302b:	test   eax,eax
1005302d:	je     0x10053039
1005302f:	mov    ecx,ebx
10053031:	shr    ecx,0x8
10053034:	and    ecx,0x1
10053037:	mov    DWORD PTR [eax],ecx
10053039:	test   DWORD PTR [edi+0x10],0x200
10053040:	je     0x10053067
10053042:	mov    BYTE PTR [esp+0x20],bl
10053046:	shr    ebx,0x8
10053049:	push   0x2
1005304b:	lea    edx,[esp+0x24]
1005304f:	mov    BYTE PTR [esp+0x25],bl
10053053:	mov    eax,DWORD PTR [edi+0x18]
10053056:	push   edx
10053057:	push   eax
10053058:	call   0x100563e0
1005305d:	mov    edx,DWORD PTR [esp+0x1c]
10053061:	add    esp,0xc
10053064:	mov    DWORD PTR [edi+0x18],eax
10053067:	xor    ebx,ebx
10053069:	xor    esi,esi
1005306b:	mov    DWORD PTR [edi],0x2
10053071:	jmp    0x10053078
10053073:	cmp    esi,0x20
10053076:	jae    0x1005309c
10053078:	test   edx,edx
1005307a:	je     0x1005422c
10053080:	movzx  eax,BYTE PTR [ebp+0x0]
10053084:	mov    ecx,esi
10053086:	shl    eax,cl
10053088:	sub    edx,0x1
1005308b:	add    esi,0x8
1005308e:	add    ebp,0x1
10053091:	add    ebx,eax
10053093:	cmp    esi,0x20
10053096:	mov    DWORD PTR [esp+0x10],edx
1005309a:	jb     0x10053078
1005309c:	mov    eax,DWORD PTR [edi+0x20]
1005309f:	test   eax,eax
100530a1:	je     0x100530a6
100530a3:	mov    DWORD PTR [eax+0x4],ebx
100530a6:	test   DWORD PTR [edi+0x10],0x200
100530ad:	je     0x100530e6
100530af:	mov    BYTE PTR [esp+0x20],bl
100530b3:	mov    ecx,ebx
100530b5:	mov    edx,ebx
100530b7:	shr    ecx,0x8
100530ba:	shr    edx,0x10
100530bd:	shr    ebx,0x18
100530c0:	push   0x4
100530c2:	lea    eax,[esp+0x24]
100530c6:	mov    BYTE PTR [esp+0x25],cl
100530ca:	mov    BYTE PTR [esp+0x26],dl
100530ce:	mov    BYTE PTR [esp+0x27],bl
100530d2:	mov    ecx,DWORD PTR [edi+0x18]
100530d5:	push   eax
100530d6:	push   ecx
100530d7:	call   0x100563e0
100530dc:	mov    edx,DWORD PTR [esp+0x1c]
100530e0:	add    esp,0xc
100530e3:	mov    DWORD PTR [edi+0x18],eax
100530e6:	xor    ebx,ebx
100530e8:	xor    esi,esi
100530ea:	mov    DWORD PTR [edi],0x3
100530f0:	jmp    0x100530f7
100530f2:	cmp    esi,0x10
100530f5:	jae    0x1005311b
100530f7:	test   edx,edx
100530f9:	je     0x1005422c
100530ff:	movzx  eax,BYTE PTR [ebp+0x0]
10053103:	mov    ecx,esi
10053105:	shl    eax,cl
10053107:	sub    edx,0x1
1005310a:	add    esi,0x8
1005310d:	add    ebp,0x1
10053110:	add    ebx,eax
10053112:	cmp    esi,0x10
10053115:	mov    DWORD PTR [esp+0x10],edx
10053119:	jb     0x100530f7
1005311b:	mov    eax,DWORD PTR [edi+0x20]
1005311e:	test   eax,eax
10053120:	je     0x10053138
10053122:	mov    ecx,ebx
10053124:	and    ecx,0xff
1005312a:	mov    DWORD PTR [eax+0x8],ecx
1005312d:	mov    ecx,DWORD PTR [edi+0x20]
10053130:	mov    eax,ebx
10053132:	shr    eax,0x8
10053135:	mov    DWORD PTR [ecx+0xc],eax
10053138:	test   DWORD PTR [edi+0x10],0x200
1005313f:	je     0x10053166
10053141:	mov    BYTE PTR [esp+0x20],bl
10053145:	shr    ebx,0x8
10053148:	push   0x2
1005314a:	lea    edx,[esp+0x24]
1005314e:	mov    BYTE PTR [esp+0x25],bl
10053152:	mov    eax,DWORD PTR [edi+0x18]
10053155:	push   edx
10053156:	push   eax
10053157:	call   0x100563e0
1005315c:	mov    edx,DWORD PTR [esp+0x1c]
10053160:	add    esp,0xc
10053163:	mov    DWORD PTR [edi+0x18],eax
10053166:	xor    ebx,ebx
10053168:	mov    DWORD PTR [esp+0x18],ebx
1005316c:	xor    esi,esi
1005316e:	mov    DWORD PTR [edi],0x4
10053174:	test   DWORD PTR [edi+0x10],0x400
1005317b:	je     0x100531eb
1005317d:	cmp    esi,0x10
10053180:	jae    0x100531a6
10053182:	test   edx,edx
10053184:	je     0x1005422c
1005318a:	movzx  eax,BYTE PTR [ebp+0x0]
1005318e:	mov    ecx,esi
10053190:	shl    eax,cl
10053192:	sub    edx,0x1
10053195:	add    esi,0x8
10053198:	add    ebp,0x1
1005319b:	add    ebx,eax
1005319d:	cmp    esi,0x10
100531a0:	mov    DWORD PTR [esp+0x10],edx
100531a4:	jb     0x10053182
100531a6:	mov    eax,DWORD PTR [edi+0x20]
100531a9:	test   eax,eax
100531ab:	mov    DWORD PTR [edi+0x40],ebx
100531ae:	je     0x100531b3
100531b0:	mov    DWORD PTR [eax+0x14],ebx
100531b3:	test   DWORD PTR [edi+0x10],0x200
100531ba:	je     0x100531e1
100531bc:	mov    BYTE PTR [esp+0x20],bl
100531c0:	shr    ebx,0x8
100531c3:	push   0x2
100531c5:	lea    ecx,[esp+0x24]
100531c9:	mov    BYTE PTR [esp+0x25],bl
100531cd:	mov    edx,DWORD PTR [edi+0x18]
100531d0:	push   ecx
100531d1:	push   edx
100531d2:	call   0x100563e0
100531d7:	mov    edx,DWORD PTR [esp+0x1c]
100531db:	add    esp,0xc
100531de:	mov    DWORD PTR [edi+0x18],eax
100531e1:	xor    ebx,ebx
100531e3:	mov    DWORD PTR [esp+0x18],ebx
100531e7:	xor    esi,esi
100531e9:	jmp    0x100531f9
100531eb:	mov    eax,DWORD PTR [edi+0x20]
100531ee:	test   eax,eax
100531f0:	je     0x100531f9
100531f2:	mov    DWORD PTR [eax+0x10],0x0
100531f9:	mov    DWORD PTR [edi],0x5
100531ff:	test   DWORD PTR [edi+0x10],0x400
10053206:	je     0x100532ae
1005320c:	mov    eax,DWORD PTR [edi+0x40]
1005320f:	cmp    eax,edx
10053211:	mov    DWORD PTR [esp+0x14],eax
10053215:	jbe    0x1005321d
10053217:	mov    eax,edx
10053219:	mov    DWORD PTR [esp+0x14],edx
1005321d:	test   eax,eax
1005321f:	je     0x100532a4
10053225:	mov    ecx,DWORD PTR [edi+0x20]
10053228:	test   ecx,ecx
1005322a:	je     0x10053273
1005322c:	mov    ecx,DWORD PTR [ecx+0x10]
1005322f:	test   ecx,ecx
10053231:	mov    DWORD PTR [esp+0x34],ecx
10053235:	je     0x10053273
10053237:	mov    ecx,DWORD PTR [edi+0x20]
1005323a:	mov    ecx,DWORD PTR [ecx+0x14]
1005323d:	sub    ecx,DWORD PTR [edi+0x40]
10053240:	mov    edx,DWORD PTR [edi+0x20]
10053243:	mov    edx,DWORD PTR [edx+0x18]
10053246:	mov    DWORD PTR [esp+0x24],ecx
1005324a:	add    ecx,eax
1005324c:	cmp    ecx,edx
1005324e:	jbe    0x10053256
10053250:	sub    edx,DWORD PTR [esp+0x24]
10053254:	mov    eax,edx
10053256:	mov    edx,DWORD PTR [esp+0x34]
1005325a:	push   eax
1005325b:	mov    eax,DWORD PTR [esp+0x28]
1005325f:	add    edx,eax
10053261:	push   ebp
10053262:	push   edx
10053263:	call   0x10045340
10053268:	mov    eax,DWORD PTR [esp+0x20]
1005326c:	mov    edx,DWORD PTR [esp+0x1c]
10053270:	add    esp,0xc
10053273:	test   DWORD PTR [edi+0x10],0x200
1005327a:	je     0x10053299
1005327c:	mov    ecx,DWORD PTR [esp+0x14]
10053280:	mov    edx,DWORD PTR [edi+0x18]
10053283:	push   ecx
10053284:	push   ebp
10053285:	push   edx
10053286:	call   0x100563e0
1005328b:	mov    edx,DWORD PTR [esp+0x1c]
1005328f:	mov    DWORD PTR [edi+0x18],eax
10053292:	mov    eax,DWORD PTR [esp+0x20]
10053296:	add    esp,0xc
10053299:	sub    edx,eax
1005329b:	add    ebp,eax
1005329d:	sub    DWORD PTR [edi+0x40],eax
100532a0:	mov    DWORD PTR [esp+0x10],edx
100532a4:	cmp    DWORD PTR [edi+0x40],0x0
100532a8:	jne    0x1005422c
100532ae:	mov    DWORD PTR [edi+0x40],0x0
100532b5:	mov    DWORD PTR [edi],0x6
100532bb:	test   DWORD PTR [edi+0x10],0x800
100532c2:	je     0x10053358
100532c8:	test   edx,edx
100532ca:	je     0x1005422c
100532d0:	xor    eax,eax
100532d2:	movzx  ecx,BYTE PTR [eax+ebp*1]
100532d6:	add    eax,0x1
100532d9:	mov    DWORD PTR [esp+0x14],eax
100532dd:	mov    eax,DWORD PTR [edi+0x20]
100532e0:	test   eax,eax
100532e2:	mov    DWORD PTR [esp+0x24],ecx
100532e6:	je     0x1005330e
100532e8:	mov    ecx,DWORD PTR [eax+0x1c]
100532eb:	test   ecx,ecx
100532ed:	mov    DWORD PTR [esp+0x34],ecx
100532f1:	je     0x1005330e
100532f3:	mov    ecx,DWORD PTR [edi+0x40]
100532f6:	cmp    ecx,DWORD PTR [eax+0x20]
100532f9:	jae    0x1005330e
100532fb:	mov    edx,DWORD PTR [esp+0x34]
100532ff:	mov    al,BYTE PTR [esp+0x24]
10053303:	mov    BYTE PTR [edx+ecx*1],al
10053306:	add    DWORD PTR [edi+0x40],0x1
1005330a:	mov    edx,DWORD PTR [esp+0x10]
1005330e:	cmp    DWORD PTR [esp+0x24],0x0
10053313:	je     0x1005331d
10053315:	mov    eax,DWORD PTR [esp+0x14]
10053319:	cmp    eax,edx
1005331b:	jb     0x100532d2
1005331d:	test   DWORD PTR [edi+0x10],0x200
10053324:	je     0x1005333f
10053326:	mov    ecx,DWORD PTR [esp+0x14]
1005332a:	mov    edx,DWORD PTR [edi+0x18]
1005332d:	push   ecx
1005332e:	push   ebp
1005332f:	push   edx
10053330:	call   0x100563e0
10053335:	mov    edx,DWORD PTR [esp+0x1c]
10053339:	add    esp,0xc
1005333c:	mov    DWORD PTR [edi+0x18],eax
1005333f:	mov    eax,DWORD PTR [esp+0x14]
10053343:	sub    edx,eax
10053345:	add    ebp,eax
10053347:	cmp    DWORD PTR [esp+0x24],0x0
1005334c:	mov    DWORD PTR [esp+0x10],edx
10053350:	jne    0x1005422c
10053356:	jmp    0x10053366
10053358:	mov    eax,DWORD PTR [edi+0x20]
1005335b:	test   eax,eax
1005335d:	je     0x10053366
1005335f:	mov    DWORD PTR [eax+0x1c],0x0
10053366:	mov    DWORD PTR [edi+0x40],0x0
1005336d:	mov    DWORD PTR [edi],0x7
10053373:	test   DWORD PTR [edi+0x10],0x1000
1005337a:	je     0x10053416
10053380:	test   edx,edx
10053382:	je     0x1005422c
10053388:	xor    eax,eax
1005338a:	lea    ebx,[ebx+0x0]
10053390:	movzx  ecx,BYTE PTR [eax+ebp*1]
10053394:	add    eax,0x1
10053397:	mov    DWORD PTR [esp+0x14],eax
1005339b:	mov    eax,DWORD PTR [edi+0x20]
1005339e:	test   eax,eax
100533a0:	mov    DWORD PTR [esp+0x24],ecx
100533a4:	je     0x100533cc
100533a6:	mov    ecx,DWORD PTR [eax+0x24]
100533a9:	test   ecx,ecx
100533ab:	mov    DWORD PTR [esp+0x34],ecx
100533af:	je     0x100533cc
100533b1:	mov    ecx,DWORD PTR [edi+0x40]
100533b4:	cmp    ecx,DWORD PTR [eax+0x28]
100533b7:	jae    0x100533cc
100533b9:	mov    edx,DWORD PTR [esp+0x34]
100533bd:	mov    al,BYTE PTR [esp+0x24]
100533c1:	mov    BYTE PTR [edx+ecx*1],al
100533c4:	add    DWORD PTR [edi+0x40],0x1
100533c8:	mov    edx,DWORD PTR [esp+0x10]
100533cc:	cmp    DWORD PTR [esp+0x24],0x0
100533d1:	je     0x100533db
100533d3:	mov    eax,DWORD PTR [esp+0x14]
100533d7:	cmp    eax,edx
100533d9:	jb     0x10053390
100533db:	test   DWORD PTR [edi+0x10],0x200
100533e2:	je     0x100533fd
100533e4:	mov    ecx,DWORD PTR [esp+0x14]
100533e8:	mov    edx,DWORD PTR [edi+0x18]
100533eb:	push   ecx
100533ec:	push   ebp
100533ed:	push   edx
100533ee:	call   0x100563e0
100533f3:	mov    edx,DWORD PTR [esp+0x1c]
100533f7:	add    esp,0xc
100533fa:	mov    DWORD PTR [edi+0x18],eax
100533fd:	mov    eax,DWORD PTR [esp+0x14]
10053401:	sub    edx,eax
10053403:	add    ebp,eax
10053405:	cmp    DWORD PTR [esp+0x24],0x0
1005340a:	mov    DWORD PTR [esp+0x10],edx
1005340e:	jne    0x1005422c
10053414:	jmp    0x10053424
10053416:	mov    eax,DWORD PTR [edi+0x20]
10053419:	test   eax,eax
1005341b:	je     0x10053424
1005341d:	mov    DWORD PTR [eax+0x24],0x0
10053424:	mov    DWORD PTR [edi],0x8
1005342a:	test   DWORD PTR [edi+0x10],0x200
10053431:	je     0x10053480
10053433:	cmp    esi,0x10
10053436:	jae    0x10053460
10053438:	test   edx,edx
1005343a:	je     0x1005422c
10053440:	movzx  eax,BYTE PTR [ebp+0x0]
10053444:	mov    ecx,esi
10053446:	shl    eax,cl
10053448:	sub    edx,0x1
1005344b:	add    esi,0x8
1005344e:	add    ebp,0x1
10053451:	add    ebx,eax
10053453:	cmp    esi,0x10
10053456:	mov    DWORD PTR [esp+0x10],edx
1005345a:	mov    DWORD PTR [esp+0x18],ebx
1005345e:	jb     0x10053438
10053460:	movzx  ecx,WORD PTR [edi+0x18]
10053464:	cmp    ebx,ecx
10053466:	je     0x10053478
10053468:	mov    eax,DWORD PTR [esp+0x40]
1005346c:	mov    DWORD PTR [eax+0x18],0x100699e0
10053473:	jmp    0x100541c8
10053478:	xor    ebx,ebx
1005347a:	mov    DWORD PTR [esp+0x18],ebx
1005347e:	xor    esi,esi
10053480:	mov    eax,DWORD PTR [edi+0x20]
10053483:	test   eax,eax
10053485:	je     0x1005349d
10053487:	mov    ecx,DWORD PTR [edi+0x10]
1005348a:	sar    ecx,0x9
1005348d:	and    ecx,0x1
10053490:	mov    DWORD PTR [eax+0x2c],ecx
10053493:	mov    edx,DWORD PTR [edi+0x20]
10053496:	mov    DWORD PTR [edx+0x30],0x1
1005349d:	push   0x0
1005349f:	push   0x0
100534a1:	push   0x0
100534a3:	call   0x100563e0
100534a8:	mov    ecx,DWORD PTR [esp+0x4c]
100534ac:	mov    edx,DWORD PTR [esp+0x1c]
100534b0:	mov    DWORD PTR [edi+0x18],eax
100534b3:	mov    DWORD PTR [ecx+0x30],eax
100534b6:	add    esp,0xc
100534b9:	mov    DWORD PTR [edi],0xb
100534bf:	jmp    0x100541ce
100534c4:	cmp    esi,0x20
100534c7:	jae    0x100534f8
100534c9:	lea    esp,[esp+0x0]
100534d0:	test   edx,edx
100534d2:	je     0x1005422c
100534d8:	movzx  eax,BYTE PTR [ebp+0x0]
100534dc:	mov    ecx,esi
100534de:	shl    eax,cl
100534e0:	sub    edx,0x1
100534e3:	add    esi,0x8
100534e6:	add    ebp,0x1
100534e9:	add    ebx,eax
100534eb:	cmp    esi,0x20
100534ee:	mov    DWORD PTR [esp+0x10],edx
100534f2:	mov    DWORD PTR [esp+0x18],ebx
100534f6:	jb     0x100534d0
100534f8:	mov    ecx,ebx
100534fa:	and    ecx,0xff00
10053500:	mov    eax,ebx
10053502:	shl    eax,0x10
10053505:	add    ecx,eax
10053507:	xor    eax,eax
10053509:	mov    ah,BYTE PTR [esp+0x1a]
1005350d:	shl    ecx,0x8
10053510:	shr    ebx,0x18
10053513:	add    ecx,eax
10053515:	lea    eax,[ecx+ebx*1]
10053518:	mov    ecx,DWORD PTR [esp+0x40]
1005351c:	mov    DWORD PTR [edi+0x18],eax
1005351f:	mov    DWORD PTR [ecx+0x30],eax
10053522:	xor    ebx,ebx
10053524:	xor    esi,esi
10053526:	mov    DWORD PTR [edi],0xa
1005352c:	cmp    DWORD PTR [edi+0xc],0x0
10053530:	je     0x100541e6
10053536:	push   0x0
10053538:	push   0x0
1005353a:	push   0x0
1005353c:	call   0x10054410
10053541:	mov    edx,DWORD PTR [esp+0x4c]
10053545:	mov    DWORD PTR [edi+0x18],eax
10053548:	mov    DWORD PTR [edx+0x30],eax
1005354b:	mov    edx,DWORD PTR [esp+0x1c]
1005354f:	add    esp,0xc
10053552:	mov    DWORD PTR [edi],0xb
10053558:	cmp    DWORD PTR [esp+0x44],0x5
1005355d:	je     0x1005422c
10053563:	cmp    DWORD PTR [edi+0x4],0x0
10053567:	je     0x10053581
10053569:	mov    ecx,esi
1005356b:	and    ecx,0x7
1005356e:	shr    ebx,cl
10053570:	sub    esi,ecx
10053572:	mov    DWORD PTR [edi],0x18
10053578:	mov    DWORD PTR [esp+0x18],ebx
1005357c:	jmp    0x100541ce
10053581:	cmp    esi,0x3
10053584:	jae    0x100535aa
10053586:	test   edx,edx
10053588:	je     0x1005422c
1005358e:	movzx  eax,BYTE PTR [ebp+0x0]
10053592:	mov    ecx,esi
10053594:	shl    eax,cl
10053596:	sub    edx,0x1
10053599:	add    esi,0x8
1005359c:	add    ebp,0x1
1005359f:	add    ebx,eax
100535a1:	cmp    esi,0x3
100535a4:	mov    DWORD PTR [esp+0x10],edx
100535a8:	jb     0x10053586
100535aa:	mov    ecx,ebx
100535ac:	shr    ebx,1
100535ae:	mov    eax,ebx
100535b0:	and    ecx,0x1
100535b3:	and    eax,0x3
100535b6:	sub    esi,0x1
100535b9:	cmp    eax,0x3
100535bc:	mov    DWORD PTR [edi+0x4],ecx
100535bf:	ja     0x1005361f
100535c1:	jmp    DWORD PTR [eax*4+0x100543ac]
100535c8:	shr    ebx,0x2
100535cb:	mov    DWORD PTR [edi],0xd
100535d1:	mov    DWORD PTR [esp+0x18],ebx
100535d5:	sub    esi,0x2
100535d8:	jmp    0x100541ce
100535dd:	mov    eax,edi
100535df:	call   0x10052cc0
100535e4:	shr    ebx,0x2
100535e7:	mov    DWORD PTR [edi],0x12
100535ed:	mov    DWORD PTR [esp+0x18],ebx
100535f1:	sub    esi,0x2
100535f4:	jmp    0x100541ce
100535f9:	shr    ebx,0x2
100535fc:	mov    DWORD PTR [edi],0xf
10053602:	mov    DWORD PTR [esp+0x18],ebx
10053606:	sub    esi,0x2
10053609:	jmp    0x100541ce
1005360e:	mov    eax,DWORD PTR [esp+0x40]
10053612:	mov    DWORD PTR [eax+0x18],0x100699cc
10053619:	mov    DWORD PTR [edi],0x1b
1005361f:	shr    ebx,0x2
10053622:	mov    DWORD PTR [esp+0x18],ebx
10053626:	sub    esi,0x2
10053629:	jmp    0x100541ce
1005362e:	mov    ecx,esi
10053630:	and    ecx,0x7
10053633:	shr    ebx,cl
10053635:	sub    esi,ecx
10053637:	cmp    esi,0x20
1005363a:	mov    DWORD PTR [esp+0x18],ebx
1005363e:	jae    0x10053668
10053640:	test   edx,edx
10053642:	je     0x1005422c
10053648:	movzx  eax,BYTE PTR [ebp+0x0]
1005364c:	mov    ecx,esi
1005364e:	shl    eax,cl
10053650:	sub    edx,0x1
10053653:	add    esi,0x8
10053656:	add    ebp,0x1
10053659:	add    ebx,eax
1005365b:	cmp    esi,0x20
1005365e:	mov    DWORD PTR [esp+0x10],edx
10053662:	mov    DWORD PTR [esp+0x18],ebx
10053666:	jb     0x10053640
10053668:	mov    ecx,ebx
1005366a:	mov    eax,ebx
1005366c:	not    ecx
1005366e:	and    eax,0xffff
10053673:	shr    ecx,0x10
10053676:	cmp    eax,ecx
10053678:	je     0x1005368a
1005367a:	mov    eax,DWORD PTR [esp+0x40]
1005367e:	mov    DWORD PTR [eax+0x18],0x100699ac
10053685:	jmp    0x100541c8
1005368a:	xor    ebx,ebx
1005368c:	mov    DWORD PTR [edi+0x40],eax
1005368f:	mov    DWORD PTR [esp+0x18],ebx
10053693:	xor    esi,esi
10053695:	mov    DWORD PTR [edi],0xe
1005369b:	mov    eax,DWORD PTR [edi+0x40]
1005369e:	test   eax,eax
100536a0:	mov    DWORD PTR [esp+0x14],eax
100536a4:	je     0x10053d5c
100536aa:	cmp    eax,edx
100536ac:	jbe    0x100536b4
100536ae:	mov    eax,edx
100536b0:	mov    DWORD PTR [esp+0x14],edx
100536b4:	mov    ecx,DWORD PTR [esp+0x1c]
100536b8:	cmp    eax,ecx
100536ba:	jbe    0x100536c2
100536bc:	mov    eax,ecx
100536be:	mov    DWORD PTR [esp+0x14],eax
100536c2:	test   eax,eax
100536c4:	je     0x1005422c
100536ca:	mov    ecx,DWORD PTR [esp+0x14]
100536ce:	mov    edx,DWORD PTR [esp+0x28]
100536d2:	push   ecx
100536d3:	push   ebp
100536d4:	push   edx
100536d5:	call   0x10045340
100536da:	mov    eax,DWORD PTR [esp+0x20]
100536de:	sub    DWORD PTR [esp+0x1c],eax
100536e2:	sub    DWORD PTR [esp+0x28],eax
100536e6:	add    DWORD PTR [esp+0x34],eax
100536ea:	mov    edx,DWORD PTR [esp+0x1c]
100536ee:	add    esp,0xc
100536f1:	add    ebp,eax
100536f3:	sub    DWORD PTR [edi+0x40],eax
100536f6:	jmp    0x100541ce
100536fb:	cmp    esi,0xe
100536fe:	jae    0x10053724
10053700:	test   edx,edx
10053702:	je     0x1005422c
10053708:	movzx  eax,BYTE PTR [ebp+0x0]
1005370c:	mov    ecx,esi
1005370e:	shl    eax,cl
10053710:	sub    edx,0x1
10053713:	add    esi,0x8
10053716:	add    ebp,0x1
10053719:	add    ebx,eax
1005371b:	cmp    esi,0xe
1005371e:	mov    DWORD PTR [esp+0x10],edx
10053722:	jb     0x10053700
10053724:	mov    ecx,ebx
10053726:	and    ecx,0x1f
10053729:	shr    ebx,0x5
1005372c:	add    ecx,0x101
10053732:	mov    eax,ebx
10053734:	mov    DWORD PTR [edi+0x60],ecx
10053737:	shr    ebx,0x5
1005373a:	mov    ecx,ebx
1005373c:	and    eax,0x1f
1005373f:	and    ecx,0xf
10053742:	add    eax,0x1
10053745:	add    ecx,0x4
10053748:	shr    ebx,0x4
1005374b:	sub    esi,0xe
1005374e:	cmp    DWORD PTR [edi+0x60],0x11e
10053755:	mov    DWORD PTR [edi+0x64],eax
10053758:	mov    DWORD PTR [edi+0x5c],ecx
1005375b:	mov    DWORD PTR [esp+0x18],ebx
1005375f:	ja     0x10053855
10053765:	cmp    eax,0x1e
10053768:	ja     0x10053855
1005376e:	mov    DWORD PTR [edi+0x68],0x0
10053775:	mov    DWORD PTR [edi],0x10
1005377b:	mov    ecx,DWORD PTR [edi+0x68]
1005377e:	cmp    ecx,DWORD PTR [edi+0x5c]
10053781:	jae    0x100537d8
10053783:	cmp    esi,0x3
10053786:	jae    0x100537ac
10053788:	test   edx,edx
1005378a:	je     0x1005422c
10053790:	movzx  eax,BYTE PTR [ebp+0x0]
10053794:	mov    ecx,esi
10053796:	shl    eax,cl
10053798:	sub    edx,0x1
1005379b:	add    esi,0x8
1005379e:	add    ebp,0x1
100537a1:	add    ebx,eax
100537a3:	cmp    esi,0x3
100537a6:	mov    DWORD PTR [esp+0x10],edx
100537aa:	jb     0x10053788
100537ac:	mov    eax,DWORD PTR [edi+0x68]
100537af:	movzx  eax,WORD PTR [eax*2+0x10069870]
100537b7:	movzx  ecx,bl
100537ba:	and    ecx,0x7
100537bd:	mov    WORD PTR [edi+eax*2+0x70],cx
100537c2:	add    DWORD PTR [edi+0x68],0x1
100537c6:	mov    ecx,DWORD PTR [edi+0x68]
100537c9:	shr    ebx,0x3
100537cc:	sub    esi,0x3
100537cf:	cmp    ecx,DWORD PTR [edi+0x5c]
100537d2:	mov    DWORD PTR [esp+0x18],ebx
100537d6:	jb     0x10053783
100537d8:	cmp    DWORD PTR [edi+0x68],0x13
100537dc:	jae    0x10053809
100537de:	mov    ecx,0x1
100537e3:	xor    eax,eax
100537e5:	jmp    0x100537f0
100537e7:	lea    esp,[esp+0x0]
100537ee:	mov    edi,edi
100537f0:	mov    edx,DWORD PTR [edi+0x68]
100537f3:	movzx  edx,WORD PTR [edx*2+0x10069870]
100537fb:	mov    WORD PTR [edi+edx*2+0x70],ax
10053800:	add    DWORD PTR [edi+0x68],ecx
10053803:	cmp    DWORD PTR [edi+0x68],0x13
10053807:	jb     0x100537f0
10053809:	lea    eax,[edi+0x530]
1005380f:	lea    ecx,[edi+0x6c]
10053812:	mov    DWORD PTR [ecx],eax
10053814:	mov    DWORD PTR [edi+0x4c],eax
10053817:	lea    edx,[edi+0x2f0]
1005381d:	push   edx
1005381e:	lea    eax,[edi+0x54]
10053821:	push   eax
10053822:	push   ecx
10053823:	mov    DWORD PTR [eax],0x7
10053829:	push   0x13
1005382b:	lea    eax,[edi+0x70]
1005382e:	push   eax
1005382f:	push   0x0
10053831:	call   0x100568f0
10053836:	mov    edx,DWORD PTR [esp+0x28]
1005383a:	add    esp,0x18
1005383d:	test   eax,eax
1005383f:	mov    DWORD PTR [esp+0x30],eax
10053843:	je     0x10053865
10053845:	mov    ecx,DWORD PTR [esp+0x40]
10053849:	mov    DWORD PTR [ecx+0x18],0x10069990
10053850:	jmp    0x100541c8
10053855:	mov    eax,DWORD PTR [esp+0x40]
10053859:	mov    DWORD PTR [eax+0x18],0x1006996c
10053860:	jmp    0x100541c8
10053865:	mov    DWORD PTR [edi+0x68],0x0
1005386c:	mov    DWORD PTR [edi],0x11
10053872:	mov    eax,DWORD PTR [edi+0x64]
10053875:	add    eax,DWORD PTR [edi+0x60]
10053878:	cmp    DWORD PTR [edi+0x68],eax
1005387b:	jae    0x10053ab9
10053881:	mov    ecx,DWORD PTR [edi+0x54]
10053884:	mov    eax,0x1
10053889:	shl    eax,cl
1005388b:	mov    ecx,DWORD PTR [edi+0x4c]
1005388e:	sub    eax,0x1
10053891:	and    eax,ebx
10053893:	mov    eax,DWORD PTR [ecx+eax*4]
10053896:	mov    ecx,eax
10053898:	shr    ecx,0x8
1005389b:	movzx  ecx,cl
1005389e:	cmp    ecx,esi
100538a0:	mov    DWORD PTR [esp+0x14],eax
100538a4:	jbe    0x100538ea
100538a6:	test   edx,edx
100538a8:	je     0x1005422c
100538ae:	movzx  eax,BYTE PTR [ebp+0x0]
100538b2:	mov    ecx,esi
100538b4:	shl    eax,cl
100538b6:	mov    ecx,DWORD PTR [edi+0x54]
100538b9:	sub    edx,0x1
100538bc:	add    esi,0x8
100538bf:	add    ebx,eax
100538c1:	mov    eax,0x1
100538c6:	shl    eax,cl
100538c8:	mov    ecx,DWORD PTR [edi+0x4c]
100538cb:	add    ebp,0x1
100538ce:	mov    DWORD PTR [esp+0x10],edx
100538d2:	sub    eax,0x1
100538d5:	and    eax,ebx
100538d7:	mov    eax,DWORD PTR [ecx+eax*4]
100538da:	mov    ecx,eax
100538dc:	shr    ecx,0x8
100538df:	movzx  ecx,cl
100538e2:	cmp    ecx,esi
100538e4:	mov    DWORD PTR [esp+0x14],eax
100538e8:	ja     0x100538a6
100538ea:	mov    ecx,eax
100538ec:	shr    ecx,0x10
100538ef:	cmp    ecx,0x10
100538f2:	jae    0x1005394b
100538f4:	mov    ecx,eax
100538f6:	shr    ecx,0x8
100538f9:	movzx  ecx,cl
100538fc:	cmp    esi,ecx
100538fe:	jae    0x1005392a
10053900:	test   edx,edx
10053902:	je     0x1005422c
10053908:	movzx  eax,BYTE PTR [ebp+0x0]
1005390c:	mov    ecx,esi
1005390e:	shl    eax,cl
10053910:	sub    edx,0x1
10053913:	add    esi,0x8
10053916:	add    ebp,0x1
10053919:	add    ebx,eax
1005391b:	mov    eax,DWORD PTR [esp+0x14]
1005391f:	movzx  ecx,ah
10053922:	cmp    esi,ecx
10053924:	mov    DWORD PTR [esp+0x10],edx
10053928:	jb     0x10053900
1005392a:	movzx  ecx,ah
1005392d:	mov    eax,DWORD PTR [edi+0x68]
10053930:	shr    ebx,cl
10053932:	sub    esi,ecx
10053934:	mov    cx,WORD PTR [esp+0x16]
10053939:	mov    WORD PTR [edi+eax*2+0x70],cx
1005393e:	add    DWORD PTR [edi+0x68],0x1
10053942:	mov    DWORD PTR [esp+0x18],ebx
10053946:	jmp    0x10053aaa
1005394b:	mov    cx,WORD PTR [esp+0x16]
10053950:	cmp    cx,0x10
10053954:	jne    0x100539c1
10053956:	movzx  ecx,ah
10053959:	lea    eax,[ecx+0x2]
1005395c:	cmp    esi,eax
1005395e:	mov    DWORD PTR [esp+0x24],ecx
10053962:	jae    0x1005398e
10053964:	test   edx,edx
10053966:	je     0x1005422c
1005396c:	movzx  eax,BYTE PTR [ebp+0x0]
10053970:	mov    ecx,esi
10053972:	shl    eax,cl
10053974:	mov    ecx,DWORD PTR [esp+0x24]
10053978:	sub    edx,0x1
1005397b:	add    esi,0x8
1005397e:	add    ebx,eax
10053980:	lea    eax,[ecx+0x2]
10053983:	add    ebp,0x1
10053986:	cmp    esi,eax
10053988:	mov    DWORD PTR [esp+0x10],edx
1005398c:	jb     0x10053964
1005398e:	mov    eax,DWORD PTR [edi+0x68]
10053991:	shr    ebx,cl
10053993:	sub    esi,ecx
10053995:	test   eax,eax
10053997:	mov    DWORD PTR [esp+0x18],ebx
1005399b:	je     0x10053b10
100539a1:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
100539a6:	mov    eax,ebx
100539a8:	and    eax,0x3
100539ab:	add    eax,0x3
100539ae:	shr    ebx,0x2
100539b1:	mov    DWORD PTR [esp+0x24],ecx
100539b5:	mov    DWORD PTR [esp+0x14],eax
100539b9:	sub    esi,0x2
100539bc:	jmp    0x10053a70
100539c1:	cmp    cx,0x11
100539c5:	movzx  ecx,ah
100539c8:	mov    DWORD PTR [esp+0x24],ecx
100539cc:	jne    0x10053a17
100539ce:	lea    eax,[ecx+0x3]
100539d1:	cmp    esi,eax
100539d3:	jae    0x100539ff
100539d5:	test   edx,edx
100539d7:	je     0x1005422c
100539dd:	movzx  eax,BYTE PTR [ebp+0x0]
100539e1:	mov    ecx,esi
100539e3:	shl    eax,cl
100539e5:	mov    ecx,DWORD PTR [esp+0x24]
100539e9:	sub    edx,0x1
100539ec:	add    esi,0x8
100539ef:	add    ebx,eax
100539f1:	lea    eax,[ecx+0x3]
100539f4:	add    ebp,0x1
100539f7:	cmp    esi,eax
100539f9:	mov    DWORD PTR [esp+0x10],edx
100539fd:	jb     0x100539d5
100539ff:	shr    ebx,cl
10053a01:	mov    eax,ebx
10053a03:	and    eax,0x7
10053a06:	add    eax,0x3
10053a09:	mov    DWORD PTR [esp+0x14],eax
10053a0d:	shr    ebx,0x3
10053a10:	mov    eax,0xfffffffd
10053a15:	jmp    0x10053a60
10053a17:	lea    eax,[ecx+0x7]
10053a1a:	cmp    esi,eax
10053a1c:	jae    0x10053a4a
10053a1e:	mov    edi,edi
10053a20:	test   edx,edx
10053a22:	je     0x1005422c
10053a28:	movzx  eax,BYTE PTR [ebp+0x0]
10053a2c:	mov    ecx,esi
10053a2e:	shl    eax,cl
10053a30:	mov    ecx,DWORD PTR [esp+0x24]
10053a34:	sub    edx,0x1
10053a37:	add    esi,0x8
10053a3a:	add    ebx,eax
10053a3c:	lea    eax,[ecx+0x7]
10053a3f:	add    ebp,0x1
10053a42:	cmp    esi,eax
10053a44:	mov    DWORD PTR [esp+0x10],edx
10053a48:	jb     0x10053a20
10053a4a:	shr    ebx,cl
10053a4c:	mov    eax,ebx
10053a4e:	and    eax,0x7f
10053a51:	add    eax,0xb
10053a54:	mov    DWORD PTR [esp+0x14],eax
10053a58:	shr    ebx,0x7
10053a5b:	mov    eax,0xfffffff9
10053a60:	sub    eax,ecx
10053a62:	add    esi,eax
10053a64:	mov    eax,DWORD PTR [esp+0x14]
10053a68:	mov    DWORD PTR [esp+0x24],0x0
10053a70:	mov    ecx,DWORD PTR [edi+0x68]
10053a73:	add    ecx,eax
10053a75:	mov    eax,DWORD PTR [edi+0x64]
10053a78:	add    eax,DWORD PTR [edi+0x60]
10053a7b:	mov    DWORD PTR [esp+0x18],ebx
10053a7f:	cmp    ecx,eax
10053a81:	ja     0x10053b20
10053a87:	cmp    DWORD PTR [esp+0x14],0x0
10053a8c:	je     0x10053aaa
10053a8e:	mov    eax,DWORD PTR [esp+0x24]
10053a92:	mov    ecx,DWORD PTR [edi+0x68]
10053a95:	sub    DWORD PTR [esp+0x14],0x1
10053a9a:	mov    WORD PTR [edi+ecx*2+0x70],ax
10053a9f:	add    DWORD PTR [edi+0x68],0x1
10053aa3:	cmp    DWORD PTR [esp+0x14],0x0
10053aa8:	jne    0x10053a92
10053aaa:	mov    eax,DWORD PTR [edi+0x64]
10053aad:	add    eax,DWORD PTR [edi+0x60]
10053ab0:	cmp    DWORD PTR [edi+0x68],eax
10053ab3:	jb     0x10053881
10053ab9:	cmp    DWORD PTR [edi],0x1b
10053abc:	je     0x100541ce
10053ac2:	lea    eax,[edi+0x530]
10053ac8:	lea    ecx,[edi+0x6c]
10053acb:	mov    DWORD PTR [ecx],eax
10053acd:	lea    edx,[edi+0x2f0]
10053ad3:	push   edx
10053ad4:	mov    DWORD PTR [edi+0x4c],eax
10053ad7:	lea    eax,[edi+0x54]
10053ada:	push   eax
10053adb:	push   ecx
10053adc:	mov    ecx,DWORD PTR [edi+0x60]
10053adf:	push   ecx
10053ae0:	lea    edx,[edi+0x70]
10053ae3:	push   edx
10053ae4:	push   0x1
10053ae6:	mov    DWORD PTR [eax],0x9
10053aec:	call   0x100568f0
10053af1:	add    esp,0x18
10053af4:	test   eax,eax
10053af6:	mov    DWORD PTR [esp+0x30],eax
10053afa:	je     0x10053b30
10053afc:	mov    eax,DWORD PTR [esp+0x40]
10053b00:	mov    edx,DWORD PTR [esp+0x10]
10053b04:	mov    DWORD PTR [eax+0x18],0x10069950
10053b0b:	jmp    0x100541c8
10053b10:	mov    ecx,DWORD PTR [esp+0x40]
10053b14:	mov    DWORD PTR [ecx+0x18],0x10069934
10053b1b:	jmp    0x100541c8
10053b20:	mov    eax,DWORD PTR [esp+0x40]
10053b24:	mov    DWORD PTR [eax+0x18],0x10069934
10053b2b:	jmp    0x100541c8
10053b30:	mov    edx,DWORD PTR [edi+0x6c]
10053b33:	lea    ecx,[edi+0x6c]
10053b36:	mov    DWORD PTR [edi+0x50],edx
10053b39:	lea    edx,[edi+0x2f0]
10053b3f:	push   edx
10053b40:	lea    eax,[edi+0x58]
10053b43:	push   eax
10053b44:	push   ecx
10053b45:	mov    ecx,DWORD PTR [edi+0x60]
10053b48:	mov    DWORD PTR [eax],0x6
10053b4e:	mov    eax,DWORD PTR [edi+0x64]
10053b51:	push   eax
10053b52:	lea    edx,[edi+ecx*2+0x70]
10053b56:	push   edx
10053b57:	push   0x2
10053b59:	call   0x100568f0
10053b5e:	mov    edx,DWORD PTR [esp+0x28]
10053b62:	add    esp,0x18
10053b65:	test   eax,eax
10053b67:	mov    DWORD PTR [esp+0x30],eax
10053b6b:	je     0x10053b7d
10053b6d:	mov    eax,DWORD PTR [esp+0x40]
10053b71:	mov    DWORD PTR [eax+0x18],0x1006991c
10053b78:	jmp    0x100541c8
10053b7d:	mov    DWORD PTR [edi],0x12
10053b83:	cmp    edx,0x6
10053b86:	jb     0x10053bf1
10053b8c:	cmp    DWORD PTR [esp+0x1c],0x102
10053b94:	jb     0x10053bf1
10053b96:	mov    eax,DWORD PTR [esp+0x40]
10053b9a:	mov    edx,DWORD PTR [esp+0x1c]
10053b9e:	mov    ecx,DWORD PTR [esp+0x28]
10053ba2:	mov    DWORD PTR [eax+0x10],edx
10053ba5:	mov    edx,DWORD PTR [esp+0x2c]
10053ba9:	mov    DWORD PTR [eax+0xc],ecx
10053bac:	mov    ecx,DWORD PTR [esp+0x10]
10053bb0:	push   edx
10053bb1:	mov    DWORD PTR [eax],ebp
10053bb3:	mov    DWORD PTR [eax+0x4],ecx
10053bb6:	push   eax
10053bb7:	mov    DWORD PTR [edi+0x38],ebx
10053bba:	mov    DWORD PTR [edi+0x3c],esi
10053bbd:	call   0x10056430
10053bc2:	mov    eax,DWORD PTR [esp+0x48]
10053bc6:	mov    edx,DWORD PTR [eax+0x10]
10053bc9:	mov    ecx,DWORD PTR [eax+0xc]
10053bcc:	mov    ebp,DWORD PTR [eax]
10053bce:	mov    eax,DWORD PTR [eax+0x4]
10053bd1:	mov    ebx,DWORD PTR [edi+0x38]
10053bd4:	mov    esi,DWORD PTR [edi+0x3c]
10053bd7:	mov    DWORD PTR [esp+0x24],edx
10053bdb:	add    esp,0x8
10053bde:	mov    DWORD PTR [esp+0x28],ecx
10053be2:	mov    DWORD PTR [esp+0x10],eax
10053be6:	mov    DWORD PTR [esp+0x18],ebx
10053bea:	mov    edx,eax
10053bec:	jmp    0x100541ce
10053bf1:	mov    ecx,DWORD PTR [edi+0x54]
10053bf4:	mov    eax,0x1
10053bf9:	shl    eax,cl
10053bfb:	sub    eax,0x1
10053bfe:	and    eax,ebx
10053c00:	mov    ecx,eax
10053c02:	mov    eax,DWORD PTR [edi+0x4c]
10053c05:	mov    eax,DWORD PTR [eax+ecx*4]
10053c08:	mov    ecx,eax
10053c0a:	shr    ecx,0x8
10053c0d:	movzx  ecx,cl
10053c10:	cmp    ecx,esi
10053c12:	mov    DWORD PTR [esp+0x14],eax
10053c16:	jbe    0x10053c5c
10053c18:	test   edx,edx
10053c1a:	je     0x1005422c
10053c20:	movzx  eax,BYTE PTR [ebp+0x0]
10053c24:	mov    ecx,esi
10053c26:	shl    eax,cl
10053c28:	mov    ecx,DWORD PTR [edi+0x54]
10053c2b:	sub    edx,0x1
10053c2e:	add    esi,0x8
10053c31:	add    ebx,eax
10053c33:	mov    eax,0x1
10053c38:	shl    eax,cl
10053c3a:	mov    ecx,DWORD PTR [edi+0x4c]
10053c3d:	add    ebp,0x1
10053c40:	mov    DWORD PTR [esp+0x10],edx
10053c44:	sub    eax,0x1
10053c47:	and    eax,ebx
10053c49:	mov    eax,DWORD PTR [ecx+eax*4]
10053c4c:	mov    ecx,eax
10053c4e:	shr    ecx,0x8
10053c51:	movzx  ecx,cl
10053c54:	cmp    ecx,esi
10053c56:	mov    DWORD PTR [esp+0x14],eax
10053c5a:	ja     0x10053c18
10053c5c:	test   al,al
10053c5e:	je     0x10053d2d
10053c64:	test   al,0xf0
10053c66:	jne    0x10053d2d
10053c6c:	mov    ecx,eax
10053c6e:	shr    ecx,0x8
10053c71:	mov    DWORD PTR [esp+0x34],ecx
10053c75:	movzx  ecx,cl
10053c78:	mov    DWORD PTR [esp+0x24],ecx
10053c7c:	movzx  ecx,al
10053c7f:	add    ecx,DWORD PTR [esp+0x24]
10053c83:	mov    DWORD PTR [esp+0x18],eax
10053c87:	mov    eax,0x1
10053c8c:	shl    eax,cl
10053c8e:	mov    ecx,DWORD PTR [esp+0x24]
10053c92:	sub    eax,0x1
10053c95:	and    eax,ebx
10053c97:	shr    eax,cl
10053c99:	mov    ecx,DWORD PTR [esp+0x14]
10053c9d:	shr    ecx,0x10
10053ca0:	add    eax,ecx
10053ca2:	mov    ecx,eax
10053ca4:	mov    eax,DWORD PTR [edi+0x4c]
10053ca7:	mov    eax,DWORD PTR [eax+ecx*4]
10053caa:	movzx  ecx,BYTE PTR [esp+0x34]
10053caf:	mov    DWORD PTR [esp+0x14],eax
10053cb3:	shr    eax,0x8
10053cb6:	movzx  eax,al
10053cb9:	add    eax,ecx
10053cbb:	cmp    eax,esi
10053cbd:	jbe    0x10053d20
10053cc3:	test   edx,edx
10053cc5:	je     0x1005422c
10053ccb:	movzx  eax,BYTE PTR [ebp+0x0]
10053ccf:	mov    ecx,esi
10053cd1:	shl    eax,cl
10053cd3:	mov    ecx,DWORD PTR [esp+0x18]
10053cd7:	sub    edx,0x1
10053cda:	add    esi,0x8
10053cdd:	add    ebx,eax
10053cdf:	movzx  eax,ch
10053ce2:	add    ecx,eax
10053ce4:	mov    DWORD PTR [esp+0x24],eax
10053ce8:	mov    eax,0x1
10053ced:	shl    eax,cl
10053cef:	mov    ecx,DWORD PTR [esp+0x24]
10053cf3:	add    ebp,0x1
10053cf6:	mov    DWORD PTR [esp+0x10],edx
10053cfa:	sub    eax,0x1
10053cfd:	and    eax,ebx
10053cff:	shr    eax,cl
10053d01:	movzx  ecx,WORD PTR [esp+0x1a]
10053d06:	add    eax,ecx
10053d08:	mov    ecx,DWORD PTR [edi+0x4c]
10053d0b:	mov    eax,DWORD PTR [ecx+eax*4]
10053d0e:	mov    DWORD PTR [esp+0x14],eax
10053d12:	shr    eax,0x8
10053d15:	movzx  eax,al
10053d18:	add    eax,DWORD PTR [esp+0x24]
10053d1c:	cmp    eax,esi
10053d1e:	ja     0x10053cc3
10053d20:	movzx  ecx,BYTE PTR [esp+0x19]
10053d25:	mov    eax,DWORD PTR [esp+0x14]
10053d29:	shr    ebx,cl
10053d2b:	sub    esi,ecx
10053d2d:	mov    ecx,eax
10053d2f:	shr    ecx,0x8
10053d32:	movzx  ecx,cl
10053d35:	shr    ebx,cl
10053d37:	sub    esi,ecx
10053d39:	mov    DWORD PTR [esp+0x24],ecx
10053d3d:	mov    ecx,eax
10053d3f:	shr    ecx,0x10
10053d42:	test   al,al
10053d44:	mov    DWORD PTR [esp+0x18],ebx
10053d48:	mov    DWORD PTR [edi+0x40],ecx
10053d4b:	jne    0x10053d58
10053d4d:	mov    DWORD PTR [edi],0x17
10053d53:	jmp    0x100541ce
10053d58:	test   al,0x20
10053d5a:	je     0x10053d67
10053d5c:	mov    DWORD PTR [edi],0xb
10053d62:	jmp    0x100541ce
10053d67:	test   al,0x40
10053d69:	je     0x10053d7b
10053d6b:	mov    eax,DWORD PTR [esp+0x40]
10053d6f:	mov    DWORD PTR [eax+0x18],0x10069900
10053d76:	jmp    0x100541c8
10053d7b:	and    eax,0xf
10053d7e:	mov    DWORD PTR [edi+0x48],eax
10053d81:	mov    DWORD PTR [edi],0x13
10053d87:	mov    eax,DWORD PTR [edi+0x48]
10053d8a:	test   eax,eax
10053d8c:	je     0x10053dcc
10053d8e:	cmp    esi,eax
10053d90:	jae    0x10053db6
10053d92:	test   edx,edx
10053d94:	je     0x1005422c
10053d9a:	movzx  eax,BYTE PTR [ebp+0x0]
10053d9e:	mov    ecx,esi
10053da0:	shl    eax,cl
10053da2:	sub    edx,0x1
10053da5:	add    esi,0x8
10053da8:	add    ebp,0x1
10053dab:	add    ebx,eax
10053dad:	cmp    esi,DWORD PTR [edi+0x48]
10053db0:	mov    DWORD PTR [esp+0x10],edx
10053db4:	jb     0x10053d92
10053db6:	mov    ecx,DWORD PTR [edi+0x48]
10053db9:	mov    eax,0x1
10053dbe:	shl    eax,cl
10053dc0:	sub    eax,0x1
10053dc3:	and    eax,ebx
10053dc5:	add    DWORD PTR [edi+0x40],eax
10053dc8:	shr    ebx,cl
10053dca:	sub    esi,ecx
10053dcc:	mov    DWORD PTR [edi],0x14
10053dd2:	mov    ecx,DWORD PTR [edi+0x58]
10053dd5:	mov    eax,0x1
10053dda:	shl    eax,cl
10053ddc:	sub    eax,0x1
10053ddf:	and    eax,ebx
10053de1:	mov    ecx,eax
10053de3:	mov    eax,DWORD PTR [edi+0x50]
10053de6:	mov    eax,DWORD PTR [eax+ecx*4]
10053de9:	mov    ecx,eax
10053deb:	shr    ecx,0x8
10053dee:	movzx  ecx,cl
10053df1:	cmp    ecx,esi
10053df3:	mov    DWORD PTR [esp+0x14],eax
10053df7:	jbe    0x10053e44
10053df9:	lea    esp,[esp+0x0]
10053e00:	test   edx,edx
10053e02:	je     0x1005422c
10053e08:	movzx  eax,BYTE PTR [ebp+0x0]
10053e0c:	mov    ecx,esi
10053e0e:	shl    eax,cl
10053e10:	mov    ecx,DWORD PTR [edi+0x58]
10053e13:	sub    edx,0x1
10053e16:	add    esi,0x8
10053e19:	add    ebx,eax
10053e1b:	mov    eax,0x1
10053e20:	shl    eax,cl
10053e22:	mov    ecx,DWORD PTR [edi+0x50]
10053e25:	add    ebp,0x1
10053e28:	mov    DWORD PTR [esp+0x10],edx
10053e2c:	sub    eax,0x1
10053e2f:	and    eax,ebx
10053e31:	mov    eax,DWORD PTR [ecx+eax*4]
10053e34:	mov    ecx,eax
10053e36:	shr    ecx,0x8
10053e39:	movzx  ecx,cl
10053e3c:	cmp    ecx,esi
10053e3e:	mov    DWORD PTR [esp+0x14],eax
10053e42:	ja     0x10053e00
10053e44:	test   al,0xf0
10053e46:	jne    0x10053f0d
10053e4c:	mov    ecx,eax
10053e4e:	shr    ecx,0x8
10053e51:	mov    DWORD PTR [esp+0x34],ecx
10053e55:	movzx  ecx,cl
10053e58:	mov    DWORD PTR [esp+0x24],ecx
10053e5c:	movzx  ecx,al
10053e5f:	add    ecx,DWORD PTR [esp+0x24]
10053e63:	mov    DWORD PTR [esp+0x18],eax
10053e67:	mov    eax,0x1
10053e6c:	shl    eax,cl
10053e6e:	mov    ecx,DWORD PTR [esp+0x24]
10053e72:	sub    eax,0x1
10053e75:	and    eax,ebx
10053e77:	shr    eax,cl
10053e79:	mov    ecx,DWORD PTR [esp+0x14]
10053e7d:	shr    ecx,0x10
10053e80:	add    eax,ecx
10053e82:	mov    ecx,eax
10053e84:	mov    eax,DWORD PTR [edi+0x50]
10053e87:	mov    eax,DWORD PTR [eax+ecx*4]
10053e8a:	movzx  ecx,BYTE PTR [esp+0x34]
10053e8f:	mov    DWORD PTR [esp+0x14],eax
10053e93:	shr    eax,0x8
10053e96:	movzx  eax,al
10053e99:	add    eax,ecx
10053e9b:	cmp    eax,esi
10053e9d:	jbe    0x10053f00
10053ea3:	test   edx,edx
10053ea5:	je     0x1005422c
10053eab:	movzx  eax,BYTE PTR [ebp+0x0]
10053eaf:	mov    ecx,esi
10053eb1:	shl    eax,cl
10053eb3:	mov    ecx,DWORD PTR [esp+0x18]
10053eb7:	sub    edx,0x1
10053eba:	add    esi,0x8
10053ebd:	add    ebx,eax
10053ebf:	movzx  eax,ch
10053ec2:	add    ecx,eax
10053ec4:	mov    DWORD PTR [esp+0x24],eax
10053ec8:	mov    eax,0x1
10053ecd:	shl    eax,cl
10053ecf:	mov    ecx,DWORD PTR [esp+0x24]
10053ed3:	add    ebp,0x1
10053ed6:	mov    DWORD PTR [esp+0x10],edx
10053eda:	sub    eax,0x1
10053edd:	and    eax,ebx
10053edf:	shr    eax,cl
10053ee1:	movzx  ecx,WORD PTR [esp+0x1a]
10053ee6:	add    eax,ecx
10053ee8:	mov    ecx,DWORD PTR [edi+0x50]
10053eeb:	mov    eax,DWORD PTR [ecx+eax*4]
10053eee:	mov    DWORD PTR [esp+0x14],eax
10053ef2:	shr    eax,0x8
10053ef5:	movzx  eax,al
10053ef8:	add    eax,DWORD PTR [esp+0x24]
10053efc:	cmp    eax,esi
10053efe:	ja     0x10053ea3
10053f00:	movzx  ecx,BYTE PTR [esp+0x19]
10053f05:	mov    eax,DWORD PTR [esp+0x14]
10053f09:	shr    ebx,cl
10053f0b:	sub    esi,ecx
10053f0d:	mov    ecx,eax
10053f0f:	shr    ecx,0x8
10053f12:	movzx  ecx,cl
10053f15:	shr    ebx,cl
10053f17:	sub    esi,ecx
10053f19:	test   al,0x40
10053f1b:	mov    DWORD PTR [esp+0x24],ecx
10053f1f:	mov    DWORD PTR [esp+0x18],ebx
10053f23:	je     0x10053f35
10053f25:	mov    eax,DWORD PTR [esp+0x40]
10053f29:	mov    DWORD PTR [eax+0x18],0x100698e8
10053f30:	jmp    0x100541c8
10053f35:	mov    ecx,eax
10053f37:	shr    ecx,0x10
10053f3a:	and    eax,0xf
10053f3d:	mov    DWORD PTR [edi+0x44],ecx
10053f40:	mov    DWORD PTR [edi+0x48],eax
10053f43:	mov    DWORD PTR [edi],0x15
10053f49:	mov    eax,DWORD PTR [edi+0x48]
10053f4c:	test   eax,eax
10053f4e:	je     0x10053f92
10053f50:	cmp    esi,eax
10053f52:	jae    0x10053f78
10053f54:	test   edx,edx
10053f56:	je     0x1005422c
10053f5c:	movzx  eax,BYTE PTR [ebp+0x0]
10053f60:	mov    ecx,esi
10053f62:	shl    eax,cl
10053f64:	sub    edx,0x1
10053f67:	add    esi,0x8
10053f6a:	add    ebp,0x1
10053f6d:	add    ebx,eax
10053f6f:	cmp    esi,DWORD PTR [edi+0x48]
10053f72:	mov    DWORD PTR [esp+0x10],edx
10053f76:	jb     0x10053f54
10053f78:	mov    ecx,DWORD PTR [edi+0x48]
10053f7b:	mov    eax,0x1
10053f80:	shl    eax,cl
10053f82:	sub    eax,0x1
10053f85:	and    eax,ebx
10053f87:	add    DWORD PTR [edi+0x44],eax
10053f8a:	shr    ebx,cl
10053f8c:	sub    esi,ecx
10053f8e:	mov    DWORD PTR [esp+0x18],ebx
10053f92:	mov    ecx,DWORD PTR [edi+0x2c]
10053f95:	sub    ecx,DWORD PTR [esp+0x1c]
10053f99:	add    ecx,DWORD PTR [esp+0x2c]
10053f9d:	cmp    DWORD PTR [edi+0x44],ecx
10053fa0:	jbe    0x10053fb2
10053fa2:	mov    eax,DWORD PTR [esp+0x40]
10053fa6:	mov    DWORD PTR [eax+0x18],0x100698c8
10053fad:	jmp    0x100541c8
10053fb2:	mov    DWORD PTR [edi],0x16
10053fb8:	cmp    DWORD PTR [esp+0x1c],0x0
10053fbd:	je     0x1005422c
10053fc3:	mov    ecx,DWORD PTR [esp+0x2c]
10053fc7:	sub    ecx,DWORD PTR [esp+0x1c]
10053fcb:	mov    eax,DWORD PTR [edi+0x44]
10053fce:	cmp    eax,ecx
10053fd0:	jbe    0x1005400e
10053fd2:	sub    eax,ecx
10053fd4:	mov    ecx,DWORD PTR [edi+0x30]
10053fd7:	cmp    eax,ecx
10053fd9:	mov    DWORD PTR [esp+0x14],eax
10053fdd:	jbe    0x10053fef
10053fdf:	sub    eax,ecx
10053fe1:	mov    ecx,DWORD PTR [edi+0x34]
10053fe4:	add    ecx,DWORD PTR [edi+0x28]
10053fe7:	mov    DWORD PTR [esp+0x14],eax
10053feb:	sub    ecx,eax
10053fed:	jmp    0x10053ffb
10053fef:	mov    ecx,DWORD PTR [edi+0x34]
10053ff2:	sub    ecx,eax
10053ff4:	add    ecx,DWORD PTR [edi+0x30]
10053ff7:	mov    eax,DWORD PTR [esp+0x14]
10053ffb:	mov    DWORD PTR [esp+0x24],ecx
10053fff:	mov    ecx,DWORD PTR [edi+0x40]
10054002:	cmp    eax,ecx
10054004:	mov    DWORD PTR [esp+0x34],ecx
10054008:	jbe    0x10054023
1005400a:	mov    eax,ecx
1005400c:	jmp    0x1005401f
1005400e:	mov    ecx,DWORD PTR [esp+0x28]
10054012:	sub    ecx,eax
10054014:	mov    eax,DWORD PTR [edi+0x40]
10054017:	mov    DWORD PTR [esp+0x24],ecx
1005401b:	mov    DWORD PTR [esp+0x34],eax
1005401f:	mov    DWORD PTR [esp+0x14],eax
10054023:	mov    ecx,DWORD PTR [esp+0x1c]
10054027:	cmp    eax,ecx
10054029:	jbe    0x10054031
1005402b:	mov    eax,ecx
1005402d:	mov    DWORD PTR [esp+0x14],eax
10054031:	sub    ecx,eax
10054033:	mov    DWORD PTR [esp+0x1c],ecx
10054037:	mov    ecx,DWORD PTR [esp+0x34]
1005403b:	sub    ecx,eax
1005403d:	mov    eax,DWORD PTR [esp+0x28]
10054041:	mov    DWORD PTR [edi+0x40],ecx
10054044:	mov    ecx,DWORD PTR [esp+0x24]
10054048:	mov    cl,BYTE PTR [ecx]
1005404a:	add    DWORD PTR [esp+0x24],0x1
1005404f:	mov    BYTE PTR [eax],cl
10054051:	add    eax,0x1
10054054:	sub    DWORD PTR [esp+0x14],0x1
10054059:	jne    0x10054044
1005405b:	cmp    DWORD PTR [edi+0x40],0x0
1005405f:	mov    DWORD PTR [esp+0x28],eax
10054063:	jne    0x100541ce
10054069:	mov    DWORD PTR [edi],0x12
1005406f:	jmp    0x100541ce
10054074:	cmp    DWORD PTR [esp+0x1c],0x0
10054079:	je     0x1005422c
1005407f:	mov    eax,DWORD PTR [esp+0x28]
10054083:	mov    cl,BYTE PTR [edi+0x40]
10054086:	mov    BYTE PTR [eax],cl
10054088:	add    eax,0x1
1005408b:	sub    DWORD PTR [esp+0x1c],0x1
10054090:	mov    DWORD PTR [esp+0x28],eax
10054094:	mov    DWORD PTR [edi],0x12
1005409a:	jmp    0x100541ce
1005409f:	cmp    DWORD PTR [edi+0x8],0x0
100540a3:	je     0x1005416c
100540a9:	cmp    esi,0x20
100540ac:	jae    0x100540d8
100540ae:	mov    edi,edi
100540b0:	test   edx,edx
100540b2:	je     0x1005422c
100540b8:	movzx  eax,BYTE PTR [ebp+0x0]
100540bc:	mov    ecx,esi
100540be:	shl    eax,cl
100540c0:	sub    edx,0x1
100540c3:	add    esi,0x8
100540c6:	add    ebp,0x1
100540c9:	add    ebx,eax
100540cb:	cmp    esi,0x20
100540ce:	mov    DWORD PTR [esp+0x10],edx
100540d2:	mov    DWORD PTR [esp+0x18],ebx
100540d6:	jb     0x100540b0
100540d8:	mov    eax,DWORD PTR [esp+0x2c]
100540dc:	sub    eax,DWORD PTR [esp+0x1c]
100540e0:	mov    ecx,DWORD PTR [esp+0x40]
100540e4:	add    DWORD PTR [ecx+0x14],eax
100540e7:	add    DWORD PTR [edi+0x1c],eax
100540ea:	test   eax,eax
100540ec:	mov    DWORD PTR [esp+0x2c],eax
100540f0:	je     0x10054121
100540f2:	mov    ecx,DWORD PTR [esp+0x28]
100540f6:	mov    edx,DWORD PTR [edi+0x18]
100540f9:	push   eax
100540fa:	sub    ecx,eax
100540fc:	cmp    DWORD PTR [edi+0x10],0x0
10054100:	push   ecx
10054101:	push   edx
10054102:	je     0x1005410b
10054104:	call   0x100563e0
10054109:	jmp    0x10054110
1005410b:	call   0x10054410
10054110:	mov    ecx,DWORD PTR [esp+0x4c]
10054114:	mov    edx,DWORD PTR [esp+0x1c]
10054118:	mov    DWORD PTR [edi+0x18],eax
1005411b:	add    esp,0xc
1005411e:	mov    DWORD PTR [ecx+0x30],eax
10054121:	cmp    DWORD PTR [edi+0x10],0x0
10054125:	mov    eax,DWORD PTR [esp+0x1c]
10054129:	mov    DWORD PTR [esp+0x2c],eax
1005412d:	mov    eax,ebx
1005412f:	jne    0x1005414f
10054131:	and    eax,0xff00
10054136:	mov    ecx,ebx
10054138:	shl    ecx,0x10
1005413b:	add    eax,ecx
1005413d:	xor    ecx,ecx
1005413f:	mov    ch,BYTE PTR [esp+0x1a]
10054143:	shl    eax,0x8
10054146:	add    eax,ecx
10054148:	mov    ecx,ebx
1005414a:	shr    ecx,0x18
1005414d:	add    eax,ecx
1005414f:	cmp    eax,DWORD PTR [edi+0x18]
10054152:	je     0x10054164
10054154:	mov    eax,DWORD PTR [esp+0x40]
10054158:	mov    DWORD PTR [eax+0x18],0x100698b0
1005415f:	jmp    0x100541c8
10054164:	xor    ebx,ebx
10054166:	mov    DWORD PTR [esp+0x18],ebx
1005416a:	xor    esi,esi
1005416c:	mov    DWORD PTR [edi],0x19
10054172:	cmp    DWORD PTR [edi+0x8],0x0
10054176:	je     0x10054214
1005417c:	cmp    DWORD PTR [edi+0x10],0x0
10054180:	je     0x10054214
10054186:	cmp    esi,0x20
10054189:	jae    0x100541b8
1005418b:	jmp    0x10054190
1005418d:	lea    ecx,[ecx+0x0]
10054190:	test   edx,edx
10054192:	je     0x1005422c
10054198:	movzx  eax,BYTE PTR [ebp+0x0]
1005419c:	mov    ecx,esi
1005419e:	shl    eax,cl
100541a0:	sub    edx,0x1
100541a3:	add    esi,0x8
100541a6:	add    ebp,0x1
100541a9:	add    ebx,eax
100541ab:	cmp    esi,0x20
100541ae:	mov    DWORD PTR [esp+0x10],edx
100541b2:	mov    DWORD PTR [esp+0x18],ebx
100541b6:	jb     0x10054190
100541b8:	cmp    ebx,DWORD PTR [edi+0x1c]
100541bb:	je     0x10054210
100541bd:	mov    ecx,DWORD PTR [esp+0x40]
100541c1:	mov    DWORD PTR [ecx+0x18],0x10069898
100541c8:	mov    DWORD PTR [edi],0x1b
100541ce:	mov    eax,DWORD PTR [edi]
100541d0:	cmp    eax,0x1c
100541d3:	jbe    0x10052e50
100541d9:	mov    eax,0xfffffffe
100541de:	pop    esi
100541df:	pop    ebp
100541e0:	pop    ebx
100541e1:	pop    edi
100541e2:	add    esp,0x2c
100541e5:	ret    
100541e6:	mov    eax,DWORD PTR [esp+0x40]
100541ea:	mov    ecx,DWORD PTR [esp+0x28]
100541ee:	mov    DWORD PTR [eax+0xc],ecx
100541f1:	mov    ecx,DWORD PTR [esp+0x1c]
100541f5:	mov    DWORD PTR [eax],ebp
100541f7:	mov    DWORD PTR [eax+0x10],ecx
100541fa:	mov    DWORD PTR [eax+0x4],edx
100541fd:	mov    DWORD PTR [edi+0x3c],esi
10054200:	pop    esi
10054201:	pop    ebp
10054202:	mov    DWORD PTR [edi+0x38],ebx
10054205:	pop    ebx
10054206:	mov    eax,0x2
1005420b:	pop    edi
1005420c:	add    esp,0x2c
1005420f:	ret    
10054210:	xor    ebx,ebx
10054212:	xor    esi,esi
10054214:	mov    DWORD PTR [edi],0x1a
1005421a:	mov    DWORD PTR [esp+0x30],0x1
10054222:	jmp    0x1005422c
10054224:	mov    DWORD PTR [esp+0x30],0xfffffffd
1005422c:	mov    eax,DWORD PTR [esp+0x40]
10054230:	mov    ecx,DWORD PTR [esp+0x28]
10054234:	mov    DWORD PTR [eax+0xc],ecx
10054237:	mov    ecx,DWORD PTR [esp+0x1c]
1005423b:	mov    DWORD PTR [eax+0x10],ecx
1005423e:	mov    DWORD PTR [eax],ebp
10054240:	mov    DWORD PTR [eax+0x4],edx
10054243:	cmp    DWORD PTR [edi+0x28],0x0
10054247:	mov    DWORD PTR [edi+0x38],ebx
1005424a:	mov    DWORD PTR [edi+0x3c],esi
1005424d:	jne    0x1005425d
1005424f:	cmp    DWORD PTR [edi],0x18
10054252:	jge    0x10054281
10054254:	mov    edx,DWORD PTR [esp+0x2c]
10054258:	cmp    edx,DWORD PTR [eax+0x10]
1005425b:	je     0x10054281
1005425d:	mov    eax,DWORD PTR [esp+0x2c]
10054261:	mov    ebx,DWORD PTR [esp+0x40]
10054265:	call   0x10052ce0
1005426a:	test   eax,eax
1005426c:	je     0x10054281
1005426e:	mov    DWORD PTR [edi],0x1c
10054274:	pop    esi
10054275:	pop    ebp
10054276:	pop    ebx
10054277:	mov    eax,0xfffffffc
1005427c:	pop    edi
1005427d:	add    esp,0x2c
10054280:	ret    
10054281:	mov    esi,DWORD PTR [esp+0x40]
10054285:	mov    ebp,DWORD PTR [esp+0x38]
10054289:	sub    ebp,DWORD PTR [esi+0x4]
1005428c:	mov    ebx,DWORD PTR [esp+0x2c]
10054290:	sub    ebx,DWORD PTR [esi+0x10]
10054293:	add    DWORD PTR [esi+0x8],ebp
10054296:	add    DWORD PTR [esi+0x14],ebx
10054299:	add    DWORD PTR [edi+0x1c],ebx
1005429c:	cmp    DWORD PTR [edi+0x8],0x0
100542a0:	je     0x100542d6
100542a2:	test   ebx,ebx
100542a4:	je     0x100542d6
100542a6:	cmp    DWORD PTR [edi+0x10],0x0
100542aa:	push   ebx
100542ab:	je     0x100542be
100542ad:	mov    ecx,DWORD PTR [esi+0xc]
100542b0:	mov    edx,DWORD PTR [edi+0x18]
100542b3:	sub    ecx,ebx
100542b5:	push   ecx
100542b6:	push   edx
100542b7:	call   0x100563e0
100542bc:	jmp    0x100542cd
100542be:	mov    eax,DWORD PTR [esi+0xc]
100542c1:	mov    ecx,DWORD PTR [edi+0x18]
100542c4:	sub    eax,ebx
100542c6:	push   eax
100542c7:	push   ecx
100542c8:	call   0x10054410
100542cd:	mov    DWORD PTR [edi+0x18],eax
100542d0:	add    esp,0xc
100542d3:	mov    DWORD PTR [esi+0x30],eax
100542d6:	mov    edx,DWORD PTR [edi+0x4]
100542d9:	neg    edx
100542db:	sbb    edx,edx
100542dd:	and    edx,0x40
100542e0:	xor    eax,eax
100542e2:	cmp    DWORD PTR [edi],0xb
100542e5:	setne  al
100542e8:	sub    eax,0x1
100542eb:	and    eax,0x80
100542f0:	add    edx,eax
100542f2:	add    edx,DWORD PTR [edi+0x3c]
100542f5:	test   ebp,ebp
100542f7:	mov    DWORD PTR [esi+0x2c],edx
100542fa:	jne    0x10054300
100542fc:	test   ebx,ebx
100542fe:	je     0x10054307
10054300:	cmp    DWORD PTR [esp+0x44],0x4
10054305:	jne    0x10054320
10054307:	mov    eax,DWORD PTR [esp+0x30]
1005430b:	test   eax,eax
1005430d:	jne    0x100541de
10054313:	pop    esi
10054314:	pop    ebp
10054315:	pop    ebx
10054316:	mov    eax,0xfffffffb
1005431b:	pop    edi
1005431c:	add    esp,0x2c
1005431f:	ret    
10054320:	mov    eax,DWORD PTR [esp+0x30]
10054324:	pop    esi
10054325:	pop    ebp
10054326:	pop    ebx
10054327:	pop    edi
10054328:	add    esp,0x2c
1005432b:	ret    
1005432c:	mov    eax,0xfffffffe
10054331:	pop    edi
10054332:	add    esp,0x2c
10054335:	ret    
10054336:	mov    edi,edi
10054338:	push   edi
10054339:	cs add eax,0x52fc510
1005433f:	adc    BYTE PTR [ebx+0x30],dh
10054342:	add    eax,0x530f210
10054347:	adc    BYTE PTR [ecx+esi*1+0x5],dh
1005434b:	adc    bh,bh
1005434d:	xor    DWORD PTR ds:0x532bb10,eax
10054353:	adc    BYTE PTR [ebx+0x33],dh
10054356:	add    eax,0x5342a10
1005435b:	adc    ah,al
1005435d:	xor    al,0x5
1005435f:	adc    BYTE PTR [esi*1+0x35581005],ch
10054366:	add    eax,0x5356310
1005436b:	adc    BYTE PTR [esi],ch
1005436d:	ss add eax,0x5369b10
10054373:	adc    bl,bh
10054375:	ss add eax,0x5377b10
1005437b:	adc    BYTE PTR [edx+0x38],dh
1005437e:	add    eax,0x53b8310
10054383:	adc    BYTE PTR [edi-0x2deffac3],al
10054389:	cmp    eax,0x3f491005
1005438e:	add    eax,0x53fb810
10054393:	adc    BYTE PTR [eax+eax*2+0x5],dh
10054397:	adc    BYTE PTR [edi+0x72100540],bl
1005439d:	inc    ecx
1005439e:	add    eax,0x5421a10
100543a3:	adc    BYTE PTR [edx+eax*2],ah
100543a6:	add    eax,0x5427410
100543ab:	adc    al,cl
100543ad:	xor    eax,0x35dd1005
100543b2:	add    eax,0x535f910
100543b7:	adc    BYTE PTR [esi],cl
100543b9:	ss add eax,0xcccccc10
100543bf:	int3   
100543c0:	push   esi
100543c1:	mov    esi,DWORD PTR [esp+0x8]
100543c5:	test   esi,esi
100543c7:	je     0x10054403
100543c9:	mov    eax,DWORD PTR [esi+0x1c]
100543cc:	test   eax,eax
100543ce:	je     0x10054403
100543d0:	mov    ecx,DWORD PTR [esi+0x24]
100543d3:	test   ecx,ecx
100543d5:	je     0x10054403
100543d7:	mov    eax,DWORD PTR [eax+0x34]
100543da:	test   eax,eax
100543dc:	je     0x100543e8
100543de:	push   eax
100543df:	mov    eax,DWORD PTR [esi+0x28]
100543e2:	push   eax
100543e3:	call   ecx
100543e5:	add    esp,0x8
100543e8:	mov    ecx,DWORD PTR [esi+0x1c]
100543eb:	mov    edx,DWORD PTR [esi+0x28]
100543ee:	mov    eax,DWORD PTR [esi+0x24]
100543f1:	push   ecx
100543f2:	push   edx
100543f3:	call   eax
100543f5:	add    esp,0x8
100543f8:	mov    DWORD PTR [esi+0x1c],0x0
100543ff:	xor    eax,eax
10054401:	pop    esi
10054402:	ret    
10054403:	mov    eax,0xfffffffe
10054408:	pop    esi
10054409:	ret    
1005440a:	int3   
1005440b:	int3   
1005440c:	int3   
1005440d:	int3   
1005440e:	int3   
1005440f:	int3   
10054410:	mov    ecx,DWORD PTR [esp+0x4]
10054414:	push   ebx
10054415:	mov    ebx,DWORD PTR [esp+0x10]
10054419:	push   edi
1005441a:	mov    edi,ecx
1005441c:	shr    edi,0x10
1005441f:	and    ecx,0xffff
10054425:	cmp    ebx,0x1
10054428:	jne    0x1005445b
1005442a:	mov    eax,DWORD PTR [esp+0x10]
1005442e:	movzx  edx,BYTE PTR [eax]
10054431:	add    ecx,edx
10054433:	cmp    ecx,0xfff1
10054439:	jb     0x10054441
1005443b:	sub    ecx,0xfff1
10054441:	add    edi,ecx
10054443:	cmp    edi,0xfff1
10054449:	jb     0x10054451
1005444b:	sub    edi,0xfff1
10054451:	mov    eax,edi
10054453:	shl    eax,0x10
10054456:	pop    edi
10054457:	or     eax,ecx
10054459:	pop    ebx
1005445a:	ret    
1005445b:	push   esi
1005445c:	mov    esi,DWORD PTR [esp+0x14]
10054460:	test   esi,esi
10054462:	jne    0x1005446b
10054464:	lea    eax,[esi+0x1]
10054467:	pop    esi
10054468:	pop    edi
10054469:	pop    ebx
1005446a:	ret    
1005446b:	cmp    ebx,0x10
1005446e:	jae    0x100544af
10054470:	test   ebx,ebx
10054472:	je     0x10054485
10054474:	movzx  eax,BYTE PTR [esi]
10054477:	add    ecx,eax
10054479:	sub    ebx,0x1
1005447c:	add    esi,0x1
1005447f:	add    edi,ecx
10054481:	test   ebx,ebx
10054483:	jne    0x10054474
10054485:	cmp    ecx,0xfff1
1005448b:	jb     0x10054493
1005448d:	sub    ecx,0xfff1
10054493:	mov    eax,0x80078071
10054498:	mul    edi
1005449a:	shr    edx,0xf
1005449d:	mov    eax,edx
1005449f:	shl    eax,0x4
100544a2:	sub    eax,edx
100544a4:	add    eax,edi
100544a6:	pop    esi
100544a7:	shl    eax,0x10
100544aa:	pop    edi
100544ab:	or     eax,ecx
100544ad:	pop    ebx
100544ae:	ret    
100544af:	cmp    ebx,0x15b0
100544b5:	jb     0x10054599
100544bb:	mov    eax,0x5e6ea9af
100544c0:	mul    ebx
100544c2:	push   ebp
100544c3:	mov    ebp,edx
100544c5:	shr    ebp,0xb
100544c8:	jmp    0x100544d0
100544ca:	lea    ebx,[ebx+0x0]
100544d0:	sub    ebx,0x15b0
100544d6:	mov    eax,0x15b
100544db:	jmp    0x100544e0
100544dd:	lea    ecx,[ecx+0x0]
100544e0:	movzx  edx,BYTE PTR [esi]
100544e3:	add    ecx,edx
100544e5:	movzx  edx,BYTE PTR [esi+0x1]
100544e9:	add    edi,ecx
100544eb:	add    ecx,edx
100544ed:	movzx  edx,BYTE PTR [esi+0x2]
100544f1:	add    edi,ecx
100544f3:	add    ecx,edx
100544f5:	movzx  edx,BYTE PTR [esi+0x3]
100544f9:	add    edi,ecx
100544fb:	add    ecx,edx
100544fd:	movzx  edx,BYTE PTR [esi+0x4]
10054501:	add    edi,ecx
10054503:	add    ecx,edx
10054505:	movzx  edx,BYTE PTR [esi+0x5]
10054509:	add    edi,ecx
1005450b:	add    ecx,edx
1005450d:	movzx  edx,BYTE PTR [esi+0x6]
10054511:	add    edi,ecx
10054513:	add    ecx,edx
10054515:	movzx  edx,BYTE PTR [esi+0x7]
10054519:	add    edi,ecx
1005451b:	add    ecx,edx
1005451d:	movzx  edx,BYTE PTR [esi+0x8]
10054521:	add    edi,ecx
10054523:	add    ecx,edx
10054525:	movzx  edx,BYTE PTR [esi+0x9]
10054529:	add    edi,ecx
1005452b:	add    ecx,edx
1005452d:	movzx  edx,BYTE PTR [esi+0xa]
10054531:	add    edi,ecx
10054533:	add    ecx,edx
10054535:	movzx  edx,BYTE PTR [esi+0xb]
10054539:	add    edi,ecx
1005453b:	add    ecx,edx
1005453d:	movzx  edx,BYTE PTR [esi+0xc]
10054541:	add    edi,ecx
10054543:	add    ecx,edx
10054545:	movzx  edx,BYTE PTR [esi+0xd]
10054549:	add    edi,ecx
1005454b:	add    ecx,edx
1005454d:	movzx  edx,BYTE PTR [esi+0xe]
10054551:	add    edi,ecx
10054553:	add    ecx,edx
10054555:	movzx  edx,BYTE PTR [esi+0xf]
10054559:	add    edi,ecx
1005455b:	add    ecx,edx
1005455d:	add    edi,ecx
1005455f:	add    esi,0x10
10054562:	sub    eax,0x1
10054565:	jne    0x100544e0
1005456b:	mov    eax,0x80078071
10054570:	mul    ecx
10054572:	shr    edx,0xf
10054575:	imul   edx,edx,0xffff000f
1005457b:	add    ecx,edx
1005457d:	mov    eax,0x80078071
10054582:	mul    edi
10054584:	shr    edx,0xf
10054587:	imul   edx,edx,0xffff000f
1005458d:	add    edi,edx
1005458f:	sub    ebp,0x1
10054592:	jne    0x100544d0
10054598:	pop    ebp
10054599:	test   ebx,ebx
1005459b:	je     0x10054677
100545a1:	cmp    ebx,0x10
100545a4:	jb     0x1005463e
100545aa:	mov    eax,ebx
100545ac:	shr    eax,0x4
100545af:	nop
100545b0:	movzx  edx,BYTE PTR [esi]
100545b3:	add    ecx,edx
100545b5:	movzx  edx,BYTE PTR [esi+0x1]
100545b9:	add    edi,ecx
100545bb:	add    ecx,edx
100545bd:	movzx  edx,BYTE PTR [esi+0x2]
100545c1:	add    edi,ecx
100545c3:	add    ecx,edx
100545c5:	movzx  edx,BYTE PTR [esi+0x3]
100545c9:	add    edi,ecx
100545cb:	add    ecx,edx
100545cd:	movzx  edx,BYTE PTR [esi+0x4]
100545d1:	add    edi,ecx
100545d3:	add    ecx,edx
100545d5:	movzx  edx,BYTE PTR [esi+0x5]
100545d9:	add    edi,ecx
100545db:	add    ecx,edx
100545dd:	movzx  edx,BYTE PTR [esi+0x6]
100545e1:	add    edi,ecx
100545e3:	add    ecx,edx
100545e5:	movzx  edx,BYTE PTR [esi+0x7]
100545e9:	add    edi,ecx
100545eb:	add    ecx,edx
100545ed:	movzx  edx,BYTE PTR [esi+0x8]
100545f1:	add    edi,ecx
100545f3:	add    ecx,edx
100545f5:	movzx  edx,BYTE PTR [esi+0x9]
100545f9:	add    edi,ecx
100545fb:	add    ecx,edx
100545fd:	movzx  edx,BYTE PTR [esi+0xa]
10054601:	add    edi,ecx
10054603:	add    ecx,edx
10054605:	movzx  edx,BYTE PTR [esi+0xb]
10054609:	add    edi,ecx
1005460b:	add    ecx,edx
1005460d:	movzx  edx,BYTE PTR [esi+0xc]
10054611:	add    edi,ecx
10054613:	add    ecx,edx
10054615:	movzx  edx,BYTE PTR [esi+0xd]
10054619:	add    edi,ecx
1005461b:	add    ecx,edx
1005461d:	movzx  edx,BYTE PTR [esi+0xe]
10054621:	add    edi,ecx
10054623:	add    ecx,edx
10054625:	movzx  edx,BYTE PTR [esi+0xf]
10054629:	add    edi,ecx
1005462b:	add    ecx,edx
1005462d:	sub    ebx,0x10
10054630:	add    edi,ecx
10054632:	add    esi,0x10
10054635:	sub    eax,0x1
10054638:	jne    0x100545b0
1005463e:	test   ebx,ebx
10054640:	je     0x10054653
10054642:	movzx  eax,BYTE PTR [esi]
10054645:	add    ecx,eax
10054647:	sub    ebx,0x1
1005464a:	add    esi,0x1
1005464d:	add    edi,ecx
1005464f:	test   ebx,ebx
10054651:	jne    0x10054642
10054653:	mov    eax,0x80078071
10054658:	mul    ecx
1005465a:	shr    edx,0xf
1005465d:	imul   edx,edx,0xffff000f
10054663:	add    ecx,edx
10054665:	mov    eax,0x80078071
1005466a:	mul    edi
1005466c:	shr    edx,0xf
1005466f:	imul   edx,edx,0xffff000f
10054675:	add    edi,edx
10054677:	mov    eax,edi
10054679:	pop    esi
1005467a:	shl    eax,0x10
1005467d:	pop    edi
1005467e:	or     eax,ecx
10054680:	pop    ebx
10054681:	ret    
10054682:	int3   
10054683:	int3   
10054684:	int3   
10054685:	int3   
10054686:	int3   
10054687:	int3   
10054688:	int3   
10054689:	int3   
1005468a:	int3   
1005468b:	int3   
1005468c:	int3   
1005468d:	int3   
1005468e:	int3   
1005468f:	int3   
10054690:	push   esi
10054691:	lea    eax,[edx+0x94]
10054697:	mov    ecx,0x11e
1005469c:	xor    esi,esi
1005469e:	mov    edi,edi
100546a0:	mov    WORD PTR [eax],si
100546a3:	add    eax,0x4
100546a6:	sub    ecx,0x1
100546a9:	jne    0x100546a0
100546ab:	lea    eax,[edx+0x988]
100546b1:	mov    ecx,0x1e
100546b6:	mov    WORD PTR [eax],si
100546b9:	add    eax,0x4
100546bc:	sub    ecx,0x1
100546bf:	jne    0x100546b6
100546c1:	lea    eax,[edx+0xa7c]
100546c7:	mov    ecx,0x13
100546cc:	lea    esp,[esp+0x0]
100546d0:	mov    WORD PTR [eax],si
100546d3:	add    eax,0x4
100546d6:	sub    ecx,0x1
100546d9:	jne    0x100546d0
100546db:	mov    DWORD PTR [edx+0x16ac],esi
100546e1:	mov    DWORD PTR [edx+0x16a8],esi
100546e7:	mov    DWORD PTR [edx+0x16b0],esi
100546ed:	mov    DWORD PTR [edx+0x16a0],esi
100546f3:	mov    WORD PTR [edx+0x494],0x1
100546fc:	pop    esi
100546fd:	ret    
100546fe:	int3   
100546ff:	int3   
10054700:	push   ecx
10054701:	mov    edx,DWORD PTR [eax+0x1450]
10054707:	push   ebp
10054708:	push   esi
10054709:	mov    esi,DWORD PTR [esp+0x10]
1005470d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
10054714:	lea    ecx,[esi+esi*1]
10054717:	cmp    ecx,edx
10054719:	mov    DWORD PTR [esp+0x8],ebp
1005471d:	jg     0x100547bb
10054723:	push   ebx
10054724:	jge    0x1005475a
10054726:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
1005472d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10054734:	movzx  edx,WORD PTR [edi+esi*4]
10054738:	movzx  ebx,WORD PTR [edi+ebp*4]
1005473c:	cmp    dx,bx
1005473f:	jb     0x10054753
10054741:	jne    0x10054756
10054743:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
1005474a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
10054751:	ja     0x10054756
10054753:	add    ecx,0x1
10054756:	mov    ebp,DWORD PTR [esp+0xc]
1005475a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
10054761:	movzx  edx,WORD PTR [edi+ebp*4]
10054765:	movzx  ebx,WORD PTR [edi+esi*4]
10054769:	cmp    dx,bx
1005476c:	jb     0x1005479b
1005476e:	jne    0x10054780
10054770:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
10054777:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
1005477e:	jbe    0x100547ab
10054780:	mov    edx,DWORD PTR [esp+0x14]
10054784:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
1005478b:	mov    edx,DWORD PTR [eax+0x1450]
10054791:	mov    DWORD PTR [esp+0x14],ecx
10054795:	add    ecx,ecx
10054797:	cmp    ecx,edx
10054799:	jle    0x10054724
1005479b:	mov    ecx,DWORD PTR [esp+0x14]
1005479f:	pop    ebx
100547a0:	pop    esi
100547a1:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
100547a8:	pop    ebp
100547a9:	pop    ecx
100547aa:	ret    
100547ab:	mov    edx,DWORD PTR [esp+0x14]
100547af:	pop    ebx
100547b0:	pop    esi
100547b1:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
100547b8:	pop    ebp
100547b9:	pop    ecx
100547ba:	ret    
100547bb:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
100547c2:	pop    esi
100547c3:	pop    ebp
100547c4:	pop    ecx
100547c5:	ret    
100547c6:	int3   
100547c7:	int3   
100547c8:	int3   
100547c9:	int3   
100547ca:	int3   
100547cb:	int3   
100547cc:	int3   
100547cd:	int3   
100547ce:	int3   
100547cf:	int3   
100547d0:	sub    esp,0x20
100547d3:	mov    edx,DWORD PTR [ecx+0x4]
100547d6:	push   ebx
100547d7:	mov    ebx,DWORD PTR [ecx]
100547d9:	mov    ecx,DWORD PTR [ecx+0x8]
100547dc:	mov    DWORD PTR [esp+0x18],edx
100547e0:	mov    edx,DWORD PTR [ecx+0x4]
100547e3:	push   ebp
100547e4:	mov    ebp,DWORD PTR [ecx]
100547e6:	mov    DWORD PTR [esp+0x24],edx
100547ea:	mov    edx,DWORD PTR [ecx+0x8]
100547ed:	push   esi
100547ee:	mov    esi,DWORD PTR [ecx+0x10]
100547f1:	xor    ecx,ecx
100547f3:	mov    DWORD PTR [eax+0xb3c],ecx
100547f9:	mov    DWORD PTR [eax+0xb40],ecx
100547ff:	mov    DWORD PTR [eax+0xb44],ecx
10054805:	mov    DWORD PTR [eax+0xb48],ecx
1005480b:	mov    DWORD PTR [eax+0xb4c],ecx
10054811:	mov    DWORD PTR [eax+0xb50],ecx
10054817:	mov    DWORD PTR [eax+0xb54],ecx
1005481d:	mov    DWORD PTR [eax+0xb58],ecx
10054823:	mov    DWORD PTR [esp+0x24],edx
10054827:	mov    edx,DWORD PTR [eax+0x1454]
1005482d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10054834:	push   edi
10054835:	mov    WORD PTR [ebx+edx*4+0x2],cx
1005483a:	mov    edi,DWORD PTR [eax+0x1454]
10054840:	add    edi,0x1
10054843:	cmp    edi,0x23d
10054849:	mov    DWORD PTR [esp+0x1c],esi
1005484d:	mov    DWORD PTR [esp+0x18],ecx
10054851:	jge    0x100549df
10054857:	lea    ecx,[eax+edi*4+0xb5c]
1005485e:	mov    DWORD PTR [esp+0x14],ecx
10054862:	mov    ecx,0x23d
10054867:	sub    ecx,edi
10054869:	add    edi,ecx
1005486b:	mov    DWORD PTR [esp+0x20],ecx
1005486f:	mov    DWORD PTR [esp+0x10],edi
10054873:	jmp    0x10054879
10054875:	mov    esi,DWORD PTR [esp+0x1c]
10054879:	mov    edx,DWORD PTR [esp+0x14]
1005487d:	mov    edx,DWORD PTR [edx]
1005487f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10054884:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10054889:	add    ecx,0x1
1005488c:	cmp    ecx,esi
1005488e:	jle    0x10054897
10054890:	add    DWORD PTR [esp+0x18],0x1
10054895:	mov    ecx,esi
10054897:	cmp    edx,DWORD PTR [esp+0x24]
1005489b:	mov    WORD PTR [ebx+edx*4+0x2],cx
100548a0:	jg     0x100548ea
100548a2:	mov    edi,DWORD PTR [esp+0x28]
100548a6:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
100548af:	xor    esi,esi
100548b1:	cmp    edx,edi
100548b3:	jl     0x100548c0
100548b5:	mov    esi,edx
100548b7:	sub    esi,edi
100548b9:	mov    edi,DWORD PTR [esp+0x2c]
100548bd:	mov    esi,DWORD PTR [edi+esi*4]
100548c0:	movzx  edi,WORD PTR [ebx+edx*4]
100548c4:	movzx  edi,di
100548c7:	add    ecx,esi
100548c9:	imul   ecx,edi
100548cc:	add    DWORD PTR [eax+0x16a8],ecx
100548d2:	test   ebp,ebp
100548d4:	je     0x100548e6
100548d6:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
100548db:	add    edx,esi
100548dd:	imul   edx,edi
100548e0:	add    DWORD PTR [eax+0x16ac],edx
100548e6:	mov    edi,DWORD PTR [esp+0x10]
100548ea:	add    DWORD PTR [esp+0x14],0x4
100548ef:	sub    DWORD PTR [esp+0x20],0x1
100548f4:	jne    0x10054875
100548fa:	mov    ebp,DWORD PTR [esp+0x18]
100548fe:	test   ebp,ebp
10054900:	je     0x100549df
10054906:	mov    ecx,DWORD PTR [esp+0x1c]
1005490a:	lea    edx,[ecx-0x1]
1005490d:	mov    DWORD PTR [esp+0x2c],edx
10054911:	lea    esi,[eax+ecx*2+0xb3c]
10054918:	jmp    0x10054920
1005491a:	lea    ebx,[ebx+0x0]
10054920:	mov    ecx,DWORD PTR [esp+0x2c]
10054924:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
1005492d:	lea    edx,[eax+ecx*2+0xb3c]
10054934:	jne    0x10054942
10054936:	sub    edx,0x2
10054939:	sub    ecx,0x1
1005493c:	cmp    WORD PTR [edx],0x0
10054940:	je     0x10054936
10054942:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
1005494c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
10054955:	add    WORD PTR [esi],0xffff
1005495a:	sub    ebp,0x2
1005495d:	test   ebp,ebp
1005495f:	jg     0x10054920
10054961:	mov    edx,DWORD PTR [esp+0x1c]
10054965:	test   edx,edx
10054967:	je     0x100549df
10054969:	mov    DWORD PTR [esp+0x20],esi
1005496d:	lea    ecx,[ecx+0x0]
10054970:	movzx  esi,WORD PTR [esi]
10054973:	test   esi,esi
10054975:	mov    DWORD PTR [esp+0x1c],esi
10054979:	je     0x100549cd
1005497b:	lea    ebp,[eax+edi*4+0xb5c]
10054982:	mov    ecx,DWORD PTR [ebp-0x4]
10054985:	sub    DWORD PTR [esp+0x10],0x1
1005498a:	sub    ebp,0x4
1005498d:	cmp    ecx,DWORD PTR [esp+0x24]
10054991:	mov    DWORD PTR [esp+0x2c],ebp
10054995:	jg     0x100549c5
10054997:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
1005499c:	cmp    edi,edx
1005499e:	lea    esi,[ebx+ecx*4+0x2]
100549a2:	je     0x100549bc
100549a4:	movzx  ecx,WORD PTR [ebx+ecx*4]
100549a8:	mov    ebp,edx
100549aa:	sub    ebp,edi
100549ac:	imul   ebp,ecx
100549af:	add    DWORD PTR [eax+0x16a8],ebp
100549b5:	mov    ebp,DWORD PTR [esp+0x2c]
100549b9:	mov    WORD PTR [esi],dx
100549bc:	sub    DWORD PTR [esp+0x1c],0x1
100549c1:	mov    esi,DWORD PTR [esp+0x1c]
100549c5:	test   esi,esi
100549c7:	jne    0x10054982
100549c9:	mov    edi,DWORD PTR [esp+0x10]
100549cd:	mov    esi,DWORD PTR [esp+0x20]
100549d1:	sub    edx,0x1
100549d4:	sub    esi,0x2
100549d7:	test   edx,edx
100549d9:	mov    DWORD PTR [esp+0x20],esi
100549dd:	jne    0x10054970
100549df:	pop    edi
100549e0:	pop    esi
100549e1:	pop    ebp
100549e2:	pop    ebx
100549e3:	add    esp,0x20
100549e6:	ret    
100549e7:	int3   
100549e8:	int3   
100549e9:	int3   
100549ea:	int3   
100549eb:	int3   
100549ec:	int3   
100549ed:	int3   
100549ee:	int3   
100549ef:	int3   
100549f0:	sub    esp,0xc
100549f3:	push   ebx
100549f4:	push   ebp
100549f5:	mov    ebp,DWORD PTR [esp+0x18]
100549f9:	push   esi
100549fa:	push   edi
100549fb:	movzx  edi,WORD PTR [eax+0x2]
100549ff:	xor    edx,edx
10054a01:	test   edi,edi
10054a03:	mov    ebx,ecx
10054a05:	mov    DWORD PTR [esp+0x14],0xffffffff
10054a0d:	lea    ecx,[edx+0x7]
10054a10:	lea    esi,[edx+0x4]
10054a13:	jne    0x10054a1d
10054a15:	mov    ecx,0x8a
10054a1a:	lea    esi,[edx+0x3]
10054a1d:	test   ebx,ebx
10054a1f:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
10054a26:	jl     0x10054aca
10054a2c:	add    eax,0x6
10054a2f:	add    ebx,0x1
10054a32:	mov    DWORD PTR [esp+0x18],ebx
10054a36:	mov    DWORD PTR [esp+0x10],eax
10054a3a:	mov    ebx,0x1
10054a3f:	nop
10054a40:	mov    eax,edi
10054a42:	mov    edi,DWORD PTR [esp+0x10]
10054a46:	movzx  edi,WORD PTR [edi]
10054a49:	add    edx,ebx
10054a4b:	cmp    edx,ecx
10054a4d:	jge    0x10054a53
10054a4f:	cmp    eax,edi
10054a51:	je     0x10054abb
10054a53:	cmp    edx,esi
10054a55:	jge    0x10054a61
10054a57:	add    WORD PTR [ebp+eax*4+0xa7c],dx
10054a5f:	jmp    0x10054a91
10054a61:	test   eax,eax
10054a63:	je     0x10054a7c
10054a65:	cmp    eax,DWORD PTR [esp+0x14]
10054a69:	je     0x10054a73
10054a6b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
10054a73:	add    WORD PTR [ebp+0xabc],bx
10054a7a:	jmp    0x10054a91
10054a7c:	cmp    edx,0xa
10054a7f:	jg     0x10054a8a
10054a81:	add    WORD PTR [ebp+0xac0],bx
10054a88:	jmp    0x10054a91
10054a8a:	add    WORD PTR [ebp+0xac4],bx
10054a91:	xor    edx,edx
10054a93:	test   edi,edi
10054a95:	mov    DWORD PTR [esp+0x14],eax
10054a99:	jne    0x10054aa5
10054a9b:	mov    ecx,0x8a
10054aa0:	lea    esi,[edx+0x3]
10054aa3:	jmp    0x10054abb
10054aa5:	cmp    eax,edi
10054aa7:	jne    0x10054ab3
10054aa9:	mov    ecx,0x6
10054aae:	lea    esi,[ecx-0x3]
10054ab1:	jmp    0x10054abb
10054ab3:	mov    ecx,0x7
10054ab8:	lea    esi,[ecx-0x3]
10054abb:	add    DWORD PTR [esp+0x10],0x4
10054ac0:	sub    DWORD PTR [esp+0x18],ebx
10054ac4:	jne    0x10054a40
10054aca:	pop    edi
10054acb:	pop    esi
10054acc:	pop    ebp
10054acd:	pop    ebx
10054ace:	add    esp,0xc
10054ad1:	ret    
10054ad2:	int3   
10054ad3:	int3   
10054ad4:	int3   
10054ad5:	int3   
10054ad6:	int3   
10054ad7:	int3   
10054ad8:	int3   
10054ad9:	int3   
10054ada:	int3   
10054adb:	int3   
10054adc:	int3   
10054add:	int3   
10054ade:	int3   
10054adf:	int3   
10054ae0:	sub    esp,0x18
10054ae3:	push   ebx
10054ae4:	push   ebp
10054ae5:	movzx  ebp,WORD PTR [edx+0x2]
10054ae9:	push   esi
10054aea:	xor    esi,esi
10054aec:	test   ebp,ebp
10054aee:	push   edi
10054aef:	mov    ebx,ecx
10054af1:	mov    DWORD PTR [esp+0x1c],0xffffffff
10054af9:	mov    DWORD PTR [esp+0x14],ebp
10054afd:	lea    ecx,[esi+0x7]
10054b00:	lea    edi,[esi+0x4]
10054b03:	jne    0x10054b0d
10054b05:	mov    ecx,0x8a
10054b0a:	lea    edi,[ebp+0x3]
10054b0d:	test   ebx,ebx
10054b0f:	jl     0x10054fe3
10054b15:	add    edx,0x6
10054b18:	add    ebx,0x1
10054b1b:	mov    DWORD PTR [esp+0x18],edx
10054b1f:	mov    DWORD PTR [esp+0x20],ebx
10054b23:	mov    ebp,0x1
10054b28:	jmp    0x10054b30
10054b2a:	lea    ebx,[ebx+0x0]
10054b30:	mov    ebx,DWORD PTR [esp+0x18]
10054b34:	movzx  ebx,WORD PTR [ebx]
10054b37:	mov    edx,DWORD PTR [esp+0x14]
10054b3b:	add    esi,ebp
10054b3d:	cmp    esi,ecx
10054b3f:	mov    DWORD PTR [esp+0x24],edx
10054b43:	mov    DWORD PTR [esp+0x14],ebx
10054b47:	mov    DWORD PTR [esp+0x10],esi
10054b4b:	jge    0x10054b55
10054b4d:	cmp    edx,ebx
10054b4f:	je     0x10054fd4
10054b55:	cmp    esi,edi
10054b57:	jge    0x10054bff
10054b5d:	lea    ecx,[ecx+0x0]
10054b60:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054b68:	mov    ecx,DWORD PTR [eax+0x16bc]
10054b6e:	mov    ebx,0x10
10054b73:	sub    ebx,edi
10054b75:	cmp    ecx,ebx
10054b77:	jle    0x10054bd4
10054b79:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054b81:	mov    edx,esi
10054b83:	shl    edx,cl
10054b85:	mov    ecx,DWORD PTR [eax+0x8]
10054b88:	or     WORD PTR [eax+0x16b8],dx
10054b8f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054b96:	mov    edx,DWORD PTR [eax+0x14]
10054b99:	mov    BYTE PTR [ecx+edx*1],bl
10054b9c:	add    DWORD PTR [eax+0x14],ebp
10054b9f:	mov    ecx,DWORD PTR [eax+0x14]
10054ba2:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ba9:	mov    edx,DWORD PTR [eax+0x8]
10054bac:	mov    BYTE PTR [ecx+edx*1],bl
10054baf:	mov    edx,DWORD PTR [eax+0x16bc]
10054bb5:	add    DWORD PTR [eax+0x14],ebp
10054bb8:	mov    cl,0x10
10054bba:	sub    cl,dl
10054bbc:	shr    si,cl
10054bbf:	lea    ecx,[edx+edi*1-0x10]
10054bc3:	mov    edx,DWORD PTR [esp+0x24]
10054bc7:	mov    WORD PTR [eax+0x16b8],si
10054bce:	mov    esi,DWORD PTR [esp+0x10]
10054bd2:	jmp    0x10054be8
10054bd4:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
10054bdc:	shl    bx,cl
10054bdf:	or     WORD PTR [eax+0x16b8],bx
10054be6:	add    ecx,edi
10054be8:	sub    esi,ebp
10054bea:	mov    DWORD PTR [eax+0x16bc],ecx
10054bf0:	mov    DWORD PTR [esp+0x10],esi
10054bf4:	jne    0x10054b60
10054bfa:	jmp    0x10054fa6
10054bff:	test   edx,edx
10054c01:	je     0x10054dac
10054c07:	cmp    edx,DWORD PTR [esp+0x1c]
10054c0b:	je     0x10054cad
10054c11:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10054c19:	mov    ecx,DWORD PTR [eax+0x16bc]
10054c1f:	mov    ebx,0x10
10054c24:	sub    ebx,edi
10054c26:	cmp    ecx,ebx
10054c28:	mov    DWORD PTR [esp+0x1c],edi
10054c2c:	jle    0x10054c89
10054c2e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10054c36:	mov    edi,esi
10054c38:	shl    edi,cl
10054c3a:	mov    ecx,DWORD PTR [eax+0x8]
10054c3d:	or     WORD PTR [eax+0x16b8],di
10054c44:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054c4b:	mov    edi,DWORD PTR [eax+0x14]
10054c4e:	mov    BYTE PTR [ecx+edi*1],bl
10054c51:	add    DWORD PTR [eax+0x14],ebp
10054c54:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054c5b:	mov    ecx,DWORD PTR [eax+0x8]
10054c5e:	mov    edi,DWORD PTR [eax+0x14]
10054c61:	mov    BYTE PTR [edi+ecx*1],bl
10054c64:	mov    ebx,DWORD PTR [eax+0x16bc]
10054c6a:	add    DWORD PTR [eax+0x14],ebp
10054c6d:	mov    cl,0x10
10054c6f:	sub    cl,bl
10054c71:	shr    si,cl
10054c74:	mov    ecx,DWORD PTR [esp+0x1c]
10054c78:	lea    ecx,[ebx+ecx*1-0x10]
10054c7c:	mov    WORD PTR [eax+0x16b8],si
10054c83:	mov    esi,DWORD PTR [esp+0x10]
10054c87:	jmp    0x10054ca1
10054c89:	mov    di,WORD PTR [eax+edx*4+0xa7c]
10054c91:	shl    di,cl
10054c94:	or     WORD PTR [eax+0x16b8],di
10054c9b:	mov    edi,DWORD PTR [esp+0x1c]
10054c9f:	add    ecx,edi
10054ca1:	sub    esi,ebp
10054ca3:	mov    DWORD PTR [eax+0x16bc],ecx
10054ca9:	mov    DWORD PTR [esp+0x10],esi
10054cad:	movzx  edi,WORD PTR [eax+0xabe]
10054cb4:	mov    ecx,DWORD PTR [eax+0x16bc]
10054cba:	mov    ebx,0x10
10054cbf:	sub    ebx,edi
10054cc1:	cmp    ecx,ebx
10054cc3:	mov    DWORD PTR [esp+0x1c],edi
10054cc7:	jle    0x10054d23
10054cc9:	movzx  esi,WORD PTR [eax+0xabc]
10054cd0:	mov    edi,esi
10054cd2:	shl    edi,cl
10054cd4:	mov    ecx,DWORD PTR [eax+0x8]
10054cd7:	or     WORD PTR [eax+0x16b8],di
10054cde:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054ce5:	mov    edi,DWORD PTR [eax+0x14]
10054ce8:	mov    BYTE PTR [ecx+edi*1],bl
10054ceb:	add    DWORD PTR [eax+0x14],ebp
10054cee:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054cf5:	mov    ecx,DWORD PTR [eax+0x8]
10054cf8:	mov    edi,DWORD PTR [eax+0x14]
10054cfb:	mov    BYTE PTR [edi+ecx*1],bl
10054cfe:	mov    ebx,DWORD PTR [eax+0x16bc]
10054d04:	add    DWORD PTR [eax+0x14],ebp
10054d07:	mov    cl,0x10
10054d09:	sub    cl,bl
10054d0b:	shr    si,cl
10054d0e:	mov    ecx,DWORD PTR [esp+0x1c]
10054d12:	lea    ecx,[ebx+ecx*1-0x10]
10054d16:	mov    WORD PTR [eax+0x16b8],si
10054d1d:	mov    esi,DWORD PTR [esp+0x10]
10054d21:	jmp    0x10054d3a
10054d23:	mov    di,WORD PTR [eax+0xabc]
10054d2a:	shl    di,cl
10054d2d:	or     WORD PTR [eax+0x16b8],di
10054d34:	mov    edi,DWORD PTR [esp+0x1c]
10054d38:	add    ecx,edi
10054d3a:	add    esi,0xfffffffd
10054d3d:	cmp    ecx,0xe
10054d40:	mov    DWORD PTR [eax+0x16bc],ecx
10054d46:	jle    0x10054d9b
10054d48:	mov    edi,esi
10054d4a:	shl    edi,cl
10054d4c:	mov    ecx,DWORD PTR [eax+0x8]
10054d4f:	or     WORD PTR [eax+0x16b8],di
10054d56:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054d5d:	mov    edi,DWORD PTR [eax+0x14]
10054d60:	mov    BYTE PTR [ecx+edi*1],bl
10054d63:	add    DWORD PTR [eax+0x14],ebp
10054d66:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054d6d:	mov    edi,DWORD PTR [eax+0x14]
10054d70:	mov    ecx,DWORD PTR [eax+0x8]
10054d73:	mov    BYTE PTR [edi+ecx*1],bl
10054d76:	mov    ebx,DWORD PTR [eax+0x16bc]
10054d7c:	add    DWORD PTR [eax+0x14],ebp
10054d7f:	mov    cl,0x10
10054d81:	sub    cl,bl
10054d83:	shr    si,cl
10054d86:	add    ebx,0xfffffff2
10054d89:	mov    DWORD PTR [eax+0x16bc],ebx
10054d8f:	mov    WORD PTR [eax+0x16b8],si
10054d96:	jmp    0x10054fa6
10054d9b:	shl    esi,cl
10054d9d:	or     WORD PTR [eax+0x16b8],si
10054da4:	add    ecx,0x2
10054da7:	jmp    0x10054fa0
10054dac:	cmp    esi,0xa
10054daf:	mov    ecx,DWORD PTR [eax+0x16bc]
10054db5:	mov    ebx,0x10
10054dba:	jg     0x10054eb4
10054dc0:	movzx  edi,WORD PTR [eax+0xac2]
10054dc7:	sub    ebx,edi
10054dc9:	cmp    ecx,ebx
10054dcb:	mov    DWORD PTR [esp+0x1c],edi
10054dcf:	jle    0x10054e2b
10054dd1:	movzx  esi,WORD PTR [eax+0xac0]
10054dd8:	mov    edi,esi
10054dda:	shl    edi,cl
10054ddc:	mov    ecx,DWORD PTR [eax+0x8]
10054ddf:	or     WORD PTR [eax+0x16b8],di
10054de6:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054ded:	mov    edi,DWORD PTR [eax+0x14]
10054df0:	mov    BYTE PTR [ecx+edi*1],bl
10054df3:	add    DWORD PTR [eax+0x14],ebp
10054df6:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054dfd:	mov    ecx,DWORD PTR [eax+0x8]
10054e00:	mov    edi,DWORD PTR [eax+0x14]
10054e03:	mov    BYTE PTR [edi+ecx*1],bl
10054e06:	mov    ebx,DWORD PTR [eax+0x16bc]
10054e0c:	add    DWORD PTR [eax+0x14],ebp
10054e0f:	mov    cl,0x10
10054e11:	sub    cl,bl
10054e13:	shr    si,cl
10054e16:	mov    ecx,DWORD PTR [esp+0x1c]
10054e1a:	lea    ecx,[ebx+ecx*1-0x10]
10054e1e:	mov    WORD PTR [eax+0x16b8],si
10054e25:	mov    esi,DWORD PTR [esp+0x10]
10054e29:	jmp    0x10054e42
10054e2b:	mov    di,WORD PTR [eax+0xac0]
10054e32:	shl    di,cl
10054e35:	or     WORD PTR [eax+0x16b8],di
10054e3c:	mov    edi,DWORD PTR [esp+0x1c]
10054e40:	add    ecx,edi
10054e42:	add    esi,0xfffffffd
10054e45:	cmp    ecx,0xd
10054e48:	mov    DWORD PTR [eax+0x16bc],ecx
10054e4e:	jle    0x10054ea3
10054e50:	mov    edi,esi
10054e52:	shl    edi,cl
10054e54:	mov    ecx,DWORD PTR [eax+0x8]
10054e57:	or     WORD PTR [eax+0x16b8],di
10054e5e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054e65:	mov    edi,DWORD PTR [eax+0x14]
10054e68:	mov    BYTE PTR [ecx+edi*1],bl
10054e6b:	add    DWORD PTR [eax+0x14],ebp
10054e6e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054e75:	mov    edi,DWORD PTR [eax+0x14]
10054e78:	mov    ecx,DWORD PTR [eax+0x8]
10054e7b:	mov    BYTE PTR [edi+ecx*1],bl
10054e7e:	mov    ebx,DWORD PTR [eax+0x16bc]
10054e84:	add    DWORD PTR [eax+0x14],ebp
10054e87:	mov    cl,0x10
10054e89:	sub    cl,bl
10054e8b:	shr    si,cl
10054e8e:	add    ebx,0xfffffff3
10054e91:	mov    DWORD PTR [eax+0x16bc],ebx
10054e97:	mov    WORD PTR [eax+0x16b8],si
10054e9e:	jmp    0x10054fa6
10054ea3:	shl    esi,cl
10054ea5:	or     WORD PTR [eax+0x16b8],si
10054eac:	add    ecx,0x3
10054eaf:	jmp    0x10054fa0
10054eb4:	movzx  edi,WORD PTR [eax+0xac6]
10054ebb:	sub    ebx,edi
10054ebd:	cmp    ecx,ebx
10054ebf:	mov    DWORD PTR [esp+0x1c],edi
10054ec3:	jle    0x10054f1f
10054ec5:	movzx  esi,WORD PTR [eax+0xac4]
10054ecc:	mov    edi,esi
10054ece:	shl    edi,cl
10054ed0:	mov    ecx,DWORD PTR [eax+0x8]
10054ed3:	or     WORD PTR [eax+0x16b8],di
10054eda:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054ee1:	mov    edi,DWORD PTR [eax+0x14]
10054ee4:	mov    BYTE PTR [ecx+edi*1],bl
10054ee7:	add    DWORD PTR [eax+0x14],ebp
10054eea:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054ef1:	mov    ecx,DWORD PTR [eax+0x8]
10054ef4:	mov    edi,DWORD PTR [eax+0x14]
10054ef7:	mov    BYTE PTR [edi+ecx*1],bl
10054efa:	mov    ebx,DWORD PTR [eax+0x16bc]
10054f00:	add    DWORD PTR [eax+0x14],ebp
10054f03:	mov    cl,0x10
10054f05:	sub    cl,bl
10054f07:	shr    si,cl
10054f0a:	mov    ecx,DWORD PTR [esp+0x1c]
10054f0e:	lea    ecx,[ebx+ecx*1-0x10]
10054f12:	mov    WORD PTR [eax+0x16b8],si
10054f19:	mov    esi,DWORD PTR [esp+0x10]
10054f1d:	jmp    0x10054f36
10054f1f:	mov    di,WORD PTR [eax+0xac4]
10054f26:	shl    di,cl
10054f29:	or     WORD PTR [eax+0x16b8],di
10054f30:	mov    edi,DWORD PTR [esp+0x1c]
10054f34:	add    ecx,edi
10054f36:	add    esi,0xfffffff5
10054f39:	cmp    ecx,0x9
10054f3c:	mov    DWORD PTR [eax+0x16bc],ecx
10054f42:	jle    0x10054f94
10054f44:	mov    edi,esi
10054f46:	shl    edi,cl
10054f48:	mov    ecx,DWORD PTR [eax+0x8]
10054f4b:	or     WORD PTR [eax+0x16b8],di
10054f52:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054f59:	mov    edi,DWORD PTR [eax+0x14]
10054f5c:	mov    BYTE PTR [ecx+edi*1],bl
10054f5f:	add    DWORD PTR [eax+0x14],ebp
10054f62:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054f69:	mov    edi,DWORD PTR [eax+0x14]
10054f6c:	mov    ecx,DWORD PTR [eax+0x8]
10054f6f:	mov    BYTE PTR [edi+ecx*1],bl
10054f72:	mov    ebx,DWORD PTR [eax+0x16bc]
10054f78:	add    DWORD PTR [eax+0x14],ebp
10054f7b:	mov    cl,0x10
10054f7d:	sub    cl,bl
10054f7f:	shr    si,cl
10054f82:	add    ebx,0xfffffff7
10054f85:	mov    DWORD PTR [eax+0x16bc],ebx
10054f8b:	mov    WORD PTR [eax+0x16b8],si
10054f92:	jmp    0x10054fa6
10054f94:	shl    esi,cl
10054f96:	or     WORD PTR [eax+0x16b8],si
10054f9d:	add    ecx,0x7
10054fa0:	mov    DWORD PTR [eax+0x16bc],ecx
10054fa6:	mov    ecx,DWORD PTR [esp+0x14]
10054faa:	xor    esi,esi
10054fac:	test   ecx,ecx
10054fae:	mov    DWORD PTR [esp+0x1c],edx
10054fb2:	jne    0x10054fbe
10054fb4:	mov    ecx,0x8a
10054fb9:	lea    edi,[esi+0x3]
10054fbc:	jmp    0x10054fd4
10054fbe:	cmp    edx,ecx
10054fc0:	jne    0x10054fcc
10054fc2:	mov    ecx,0x6
10054fc7:	lea    edi,[ecx-0x3]
10054fca:	jmp    0x10054fd4
10054fcc:	mov    ecx,0x7
10054fd1:	lea    edi,[ecx-0x3]
10054fd4:	add    DWORD PTR [esp+0x18],0x4
10054fd9:	sub    DWORD PTR [esp+0x20],ebp
10054fdd:	jne    0x10054b30
10054fe3:	pop    edi
10054fe4:	pop    esi
10054fe5:	pop    ebp
10054fe6:	pop    ebx
10054fe7:	add    esp,0x18
10054fea:	ret    
10054feb:	int3   
10054fec:	int3   
10054fed:	int3   
10054fee:	int3   
10054fef:	int3   
10054ff0:	push   ecx
10054ff1:	mov    ecx,DWORD PTR [eax+0x16bc]
10054ff7:	cmp    ecx,0xb
10054ffa:	push   ebx
10054ffb:	mov    ebx,DWORD PTR [esp+0x14]
10054fff:	push   ebp
10055000:	push   esi
10055001:	push   edi
10055002:	mov    ebp,0x1
10055007:	jle    0x10055067
10055009:	mov    esi,DWORD PTR [esp+0x18]
1005500d:	add    esi,0xfffffeff
10055013:	mov    edx,esi
10055015:	shl    edx,cl
10055017:	mov    ecx,DWORD PTR [eax+0x14]
1005501a:	or     WORD PTR [eax+0x16b8],dx
10055021:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055028:	mov    edx,DWORD PTR [eax+0x8]
1005502b:	mov    BYTE PTR [ecx+edx*1],bl
1005502e:	add    DWORD PTR [eax+0x14],ebp
10055031:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055038:	mov    ecx,DWORD PTR [eax+0x14]
1005503b:	mov    edx,DWORD PTR [eax+0x8]
1005503e:	mov    BYTE PTR [ecx+edx*1],bl
10055041:	mov    edx,DWORD PTR [eax+0x16bc]
10055047:	add    DWORD PTR [eax+0x14],ebp
1005504a:	mov    ebx,DWORD PTR [esp+0x20]
1005504e:	mov    cl,0x10
10055050:	sub    cl,dl
10055052:	shr    si,cl
10055055:	add    edx,0xfffffff5
10055058:	mov    DWORD PTR [eax+0x16bc],edx
1005505e:	mov    WORD PTR [eax+0x16b8],si
10055065:	jmp    0x10055083
10055067:	mov    edx,DWORD PTR [esp+0x18]
1005506b:	add    edx,0xfffffeff
10055071:	shl    edx,cl
10055073:	or     WORD PTR [eax+0x16b8],dx
1005507a:	add    ecx,0x5
1005507d:	mov    DWORD PTR [eax+0x16bc],ecx
10055083:	mov    ecx,DWORD PTR [eax+0x16bc]
10055089:	cmp    ecx,0xb
1005508c:	jle    0x100550ed
1005508e:	mov    esi,DWORD PTR [esp+0x1c]
10055092:	add    esi,0xffffffff
10055095:	mov    edx,esi
10055097:	shl    edx,cl
10055099:	mov    ecx,DWORD PTR [eax+0x14]
1005509c:	mov    DWORD PTR [esp+0x10],ebx
100550a0:	or     WORD PTR [eax+0x16b8],dx
100550a7:	movzx  ebx,BYTE PTR [eax+0x16b8]
100550ae:	mov    edx,DWORD PTR [eax+0x8]
100550b1:	mov    BYTE PTR [ecx+edx*1],bl
100550b4:	add    DWORD PTR [eax+0x14],ebp
100550b7:	movzx  ebx,BYTE PTR [eax+0x16b9]
100550be:	mov    ecx,DWORD PTR [eax+0x14]
100550c1:	mov    edx,DWORD PTR [eax+0x8]
100550c4:	mov    BYTE PTR [ecx+edx*1],bl
100550c7:	mov    edx,DWORD PTR [eax+0x16bc]
100550cd:	add    DWORD PTR [eax+0x14],ebp
100550d0:	mov    ebx,DWORD PTR [esp+0x10]
100550d4:	mov    cl,0x10
100550d6:	sub    cl,dl
100550d8:	shr    si,cl
100550db:	add    edx,0xfffffff5
100550de:	mov    DWORD PTR [eax+0x16bc],edx
100550e4:	mov    WORD PTR [eax+0x16b8],si
100550eb:	jmp    0x10055106
100550ed:	mov    edx,DWORD PTR [esp+0x1c]
100550f1:	add    edx,0xffffffff
100550f4:	shl    edx,cl
100550f6:	or     WORD PTR [eax+0x16b8],dx
100550fd:	add    ecx,0x5
10055100:	mov    DWORD PTR [eax+0x16bc],ecx
10055106:	mov    ecx,DWORD PTR [eax+0x16bc]
1005510c:	cmp    ecx,0xc
1005510f:	jle    0x1005516c
10055111:	lea    esi,[ebx-0x4]
10055114:	mov    edx,esi
10055116:	shl    edx,cl
10055118:	mov    ecx,DWORD PTR [eax+0x14]
1005511b:	mov    DWORD PTR [esp+0x10],ebx
1005511f:	or     WORD PTR [eax+0x16b8],dx
10055126:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005512d:	mov    edx,DWORD PTR [eax+0x8]
10055130:	mov    BYTE PTR [ecx+edx*1],bl
10055133:	add    DWORD PTR [eax+0x14],ebp
10055136:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005513d:	mov    ecx,DWORD PTR [eax+0x14]
10055140:	mov    edx,DWORD PTR [eax+0x8]
10055143:	mov    BYTE PTR [ecx+edx*1],bl
10055146:	mov    edx,DWORD PTR [eax+0x16bc]
1005514c:	add    DWORD PTR [eax+0x14],ebp
1005514f:	mov    ebx,DWORD PTR [esp+0x10]
10055153:	mov    cl,0x10
10055155:	sub    cl,dl
10055157:	shr    si,cl
1005515a:	add    edx,0xfffffff4
1005515d:	mov    DWORD PTR [eax+0x16bc],edx
10055163:	mov    WORD PTR [eax+0x16b8],si
1005516a:	jmp    0x10055181
1005516c:	lea    edx,[ebx-0x4]
1005516f:	shl    edx,cl
10055171:	or     WORD PTR [eax+0x16b8],dx
10055178:	add    ecx,0x4
1005517b:	mov    DWORD PTR [eax+0x16bc],ecx
10055181:	xor    edi,edi
10055183:	test   ebx,ebx
10055185:	jle    0x10055223
1005518b:	jmp    0x10055190
1005518d:	lea    ecx,[ecx+0x0]
10055190:	mov    ecx,DWORD PTR [eax+0x16bc]
10055196:	cmp    ecx,0xd
10055199:	movzx  edx,BYTE PTR [edi+0x10069acc]
100551a0:	jle    0x100551fe
100551a2:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
100551aa:	mov    edx,esi
100551ac:	shl    edx,cl
100551ae:	mov    ecx,DWORD PTR [eax+0x14]
100551b1:	or     WORD PTR [eax+0x16b8],dx
100551b8:	movzx  ebx,BYTE PTR [eax+0x16b8]
100551bf:	mov    edx,DWORD PTR [eax+0x8]
100551c2:	mov    BYTE PTR [ecx+edx*1],bl
100551c5:	add    DWORD PTR [eax+0x14],ebp
100551c8:	movzx  ebx,BYTE PTR [eax+0x16b9]
100551cf:	mov    ecx,DWORD PTR [eax+0x14]
100551d2:	mov    edx,DWORD PTR [eax+0x8]
100551d5:	mov    BYTE PTR [ecx+edx*1],bl
100551d8:	mov    edx,DWORD PTR [eax+0x16bc]
100551de:	add    DWORD PTR [eax+0x14],ebp
100551e1:	mov    ebx,DWORD PTR [esp+0x20]
100551e5:	mov    cl,0x10
100551e7:	sub    cl,dl
100551e9:	shr    si,cl
100551ec:	add    edx,0xfffffff3
100551ef:	mov    DWORD PTR [eax+0x16bc],edx
100551f5:	mov    WORD PTR [eax+0x16b8],si
100551fc:	jmp    0x10055219
100551fe:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10055206:	shl    dx,cl
10055209:	or     WORD PTR [eax+0x16b8],dx
10055210:	add    ecx,0x3
10055213:	mov    DWORD PTR [eax+0x16bc],ecx
10055219:	add    edi,ebp
1005521b:	cmp    edi,ebx
1005521d:	jl     0x10055190
10055223:	mov    ecx,DWORD PTR [esp+0x18]
10055227:	add    ecx,0xffffffff
1005522a:	lea    edx,[eax+0x94]
10055230:	call   0x10054ae0
10055235:	mov    ecx,DWORD PTR [esp+0x1c]
10055239:	pop    edi
1005523a:	pop    esi
1005523b:	pop    ebp
1005523c:	add    ecx,0xffffffff
1005523f:	lea    edx,[eax+0x988]
10055245:	pop    ebx
10055246:	add    esp,0x4
10055249:	jmp    0x10054ae0
1005524e:	int3   
1005524f:	int3   
10055250:	sub    esp,0xc
10055253:	push   ebx
10055254:	mov    ebx,DWORD PTR [esp+0x14]
10055258:	push   ebp
10055259:	xor    ecx,ecx
1005525b:	cmp    DWORD PTR [eax+0x16a0],ecx
10055261:	push   esi
10055262:	push   edi
10055263:	je     0x100555a2
10055269:	lea    esp,[esp+0x0]
10055270:	mov    edx,DWORD PTR [eax+0x16a4]
10055276:	movzx  ebp,WORD PTR [edx+ecx*2]
1005527a:	mov    edx,DWORD PTR [eax+0x1698]
10055280:	movzx  esi,BYTE PTR [ecx+edx*1]
10055284:	add    ecx,0x1
10055287:	test   ebp,ebp
10055289:	mov    DWORD PTR [esp+0x18],ecx
1005528d:	mov    ecx,DWORD PTR [eax+0x16bc]
10055293:	jne    0x1005531a
10055299:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
1005529e:	mov    edx,0x10
100552a3:	sub    edx,edi
100552a5:	cmp    ecx,edx
100552a7:	jle    0x10055305
100552a9:	movzx  esi,WORD PTR [ebx+esi*4]
100552ad:	mov    edx,esi
100552af:	shl    edx,cl
100552b1:	mov    ecx,DWORD PTR [eax+0x8]
100552b4:	mov    DWORD PTR [esp+0x10],ebx
100552b8:	or     WORD PTR [eax+0x16b8],dx
100552bf:	movzx  ebx,BYTE PTR [eax+0x16b8]
100552c6:	mov    edx,DWORD PTR [eax+0x14]
100552c9:	mov    BYTE PTR [ecx+edx*1],bl
100552cc:	add    DWORD PTR [eax+0x14],0x1
100552d0:	movzx  ebx,BYTE PTR [eax+0x16b9]
100552d7:	mov    ecx,DWORD PTR [eax+0x14]
100552da:	mov    edx,DWORD PTR [eax+0x8]
100552dd:	mov    BYTE PTR [ecx+edx*1],bl
100552e0:	mov    edx,DWORD PTR [eax+0x16bc]
100552e6:	add    DWORD PTR [eax+0x14],0x1
100552ea:	mov    ebx,DWORD PTR [esp+0x10]
100552ee:	mov    cl,0x10
100552f0:	sub    cl,dl
100552f2:	shr    si,cl
100552f5:	lea    ecx,[edx+edi*1-0x10]
100552f9:	mov    WORD PTR [eax+0x16b8],si
10055300:	jmp    0x1005558c
10055305:	mov    dx,WORD PTR [ebx+esi*4]
10055309:	shl    dx,cl
1005530c:	or     WORD PTR [eax+0x16b8],dx
10055313:	add    ecx,edi
10055315:	jmp    0x1005558c
1005531a:	movzx  edx,BYTE PTR [esi+0x1006a2a0]
10055321:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10055329:	mov    ebx,0x10
1005532e:	sub    ebx,edi
10055330:	cmp    ecx,ebx
10055332:	mov    DWORD PTR [esp+0x10],edi
10055336:	mov    edi,DWORD PTR [esp+0x20]
1005533a:	mov    DWORD PTR [esp+0x14],edx
1005533e:	jle    0x100553a3
10055340:	movzx  edi,WORD PTR [edi+edx*4+0x404]
10055348:	mov    edx,edi
1005534a:	shl    edx,cl
1005534c:	mov    ecx,DWORD PTR [eax+0x8]
1005534f:	or     WORD PTR [eax+0x16b8],dx
10055356:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005535d:	mov    edx,DWORD PTR [eax+0x14]
10055360:	mov    BYTE PTR [ecx+edx*1],bl
10055363:	add    DWORD PTR [eax+0x14],0x1
10055367:	mov    ecx,DWORD PTR [eax+0x14]
1005536a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055371:	mov    edx,DWORD PTR [eax+0x8]
10055374:	mov    BYTE PTR [ecx+edx*1],bl
10055377:	mov    edx,DWORD PTR [eax+0x16bc]
1005537d:	add    DWORD PTR [eax+0x14],0x1
10055381:	mov    cl,0x10
10055383:	sub    cl,dl
10055385:	shr    di,cl
10055388:	mov    ecx,DWORD PTR [esp+0x10]
1005538c:	lea    edx,[edx+ecx*1-0x10]
10055390:	mov    DWORD PTR [eax+0x16bc],edx
10055396:	mov    edx,DWORD PTR [esp+0x14]
1005539a:	mov    WORD PTR [eax+0x16b8],di
100553a1:	jmp    0x100553c1
100553a3:	mov    di,WORD PTR [edi+edx*4+0x404]
100553ab:	shl    di,cl
100553ae:	or     WORD PTR [eax+0x16b8],di
100553b5:	mov    edi,DWORD PTR [esp+0x10]
100553b9:	add    ecx,edi
100553bb:	mov    DWORD PTR [eax+0x16bc],ecx
100553c1:	mov    edi,DWORD PTR [edx*4+0x10069a58]
100553c8:	test   edi,edi
100553ca:	mov    ebx,DWORD PTR [esp+0x20]
100553ce:	je     0x1005544a
100553d0:	sub    esi,DWORD PTR [edx*4+0x1006a3a0]
100553d7:	mov    ecx,DWORD PTR [eax+0x16bc]
100553dd:	mov    edx,0x10
100553e2:	sub    edx,edi
100553e4:	cmp    ecx,edx
100553e6:	jle    0x10055439
100553e8:	mov    edx,esi
100553ea:	shl    edx,cl
100553ec:	mov    ecx,DWORD PTR [eax+0x8]
100553ef:	or     WORD PTR [eax+0x16b8],dx
100553f6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100553fd:	mov    edx,DWORD PTR [eax+0x14]
10055400:	mov    BYTE PTR [ecx+edx*1],bl
10055403:	add    DWORD PTR [eax+0x14],0x1
10055407:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005540e:	mov    ecx,DWORD PTR [eax+0x14]
10055411:	mov    edx,DWORD PTR [eax+0x8]
10055414:	mov    BYTE PTR [ecx+edx*1],bl
10055417:	mov    edx,DWORD PTR [eax+0x16bc]
1005541d:	add    DWORD PTR [eax+0x14],0x1
10055421:	mov    ebx,DWORD PTR [esp+0x20]
10055425:	mov    cl,0x10
10055427:	sub    cl,dl
10055429:	shr    si,cl
1005542c:	lea    ecx,[edx+edi*1-0x10]
10055430:	mov    WORD PTR [eax+0x16b8],si
10055437:	jmp    0x10055444
10055439:	shl    esi,cl
1005543b:	or     WORD PTR [eax+0x16b8],si
10055442:	add    ecx,edi
10055444:	mov    DWORD PTR [eax+0x16bc],ecx
1005544a:	sub    ebp,0x1
1005544d:	cmp    ebp,0x100
10055453:	jae    0x1005545e
10055455:	movzx  edi,BYTE PTR [ebp+0x1006a0a0]
1005545c:	jmp    0x1005546a
1005545e:	mov    edx,ebp
10055460:	shr    edx,0x7
10055463:	movzx  edi,BYTE PTR [edx+0x1006a1a0]
1005546a:	mov    ecx,DWORD PTR [esp+0x24]
1005546e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10055473:	mov    ecx,DWORD PTR [eax+0x16bc]
10055479:	mov    esi,0x10
1005547e:	sub    esi,edx
10055480:	cmp    ecx,esi
10055482:	mov    DWORD PTR [esp+0x14],edx
10055486:	jle    0x100554eb
10055488:	mov    edx,DWORD PTR [esp+0x24]
1005548c:	movzx  esi,WORD PTR [edx+edi*4]
10055490:	mov    edx,esi
10055492:	shl    edx,cl
10055494:	mov    ecx,DWORD PTR [eax+0x8]
10055497:	or     WORD PTR [eax+0x16b8],dx
1005549e:	movzx  ebx,BYTE PTR [eax+0x16b8]
100554a5:	mov    edx,DWORD PTR [eax+0x14]
100554a8:	mov    BYTE PTR [ecx+edx*1],bl
100554ab:	add    DWORD PTR [eax+0x14],0x1
100554af:	movzx  ebx,BYTE PTR [eax+0x16b9]
100554b6:	mov    ecx,DWORD PTR [eax+0x14]
100554b9:	mov    edx,DWORD PTR [eax+0x8]
100554bc:	mov    BYTE PTR [ecx+edx*1],bl
100554bf:	mov    edx,DWORD PTR [eax+0x16bc]
100554c5:	add    DWORD PTR [eax+0x14],0x1
100554c9:	mov    ebx,DWORD PTR [esp+0x20]
100554cd:	mov    cl,0x10
100554cf:	sub    cl,dl
100554d1:	shr    si,cl
100554d4:	mov    ecx,DWORD PTR [esp+0x14]
100554d8:	lea    edx,[edx+ecx*1-0x10]
100554dc:	mov    DWORD PTR [eax+0x16bc],edx
100554e2:	mov    WORD PTR [eax+0x16b8],si
100554e9:	jmp    0x10055505
100554eb:	mov    esi,DWORD PTR [esp+0x24]
100554ef:	mov    si,WORD PTR [esi+edi*4]
100554f3:	shl    si,cl
100554f6:	or     WORD PTR [eax+0x16b8],si
100554fd:	add    ecx,edx
100554ff:	mov    DWORD PTR [eax+0x16bc],ecx
10055505:	mov    esi,DWORD PTR [edi*4+0x10069ae0]
1005550c:	test   esi,esi
1005550e:	je     0x10055592
10055514:	mov    ecx,DWORD PTR [eax+0x16bc]
1005551a:	sub    ebp,DWORD PTR [edi*4+0x1006a418]
10055521:	mov    edx,0x10
10055526:	sub    edx,esi
10055528:	cmp    ecx,edx
1005552a:	jle    0x10055581
1005552c:	mov    edx,ebp
1005552e:	shl    edx,cl
10055530:	mov    ecx,DWORD PTR [eax+0x8]
10055533:	mov    DWORD PTR [esp+0x14],ebx
10055537:	or     WORD PTR [eax+0x16b8],dx
1005553e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055545:	mov    edx,DWORD PTR [eax+0x14]
10055548:	mov    BYTE PTR [ecx+edx*1],bl
1005554b:	add    DWORD PTR [eax+0x14],0x1
1005554f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055556:	mov    ecx,DWORD PTR [eax+0x14]
10055559:	mov    edx,DWORD PTR [eax+0x8]
1005555c:	mov    BYTE PTR [ecx+edx*1],bl
1005555f:	mov    edx,DWORD PTR [eax+0x16bc]
10055565:	add    DWORD PTR [eax+0x14],0x1
10055569:	mov    ebx,DWORD PTR [esp+0x14]
1005556d:	mov    cl,0x10
1005556f:	sub    cl,dl
10055571:	shr    bp,cl
10055574:	lea    ecx,[edx+esi*1-0x10]
10055578:	mov    WORD PTR [eax+0x16b8],bp
1005557f:	jmp    0x1005558c
10055581:	shl    ebp,cl
10055583:	or     WORD PTR [eax+0x16b8],bp
1005558a:	add    ecx,esi
1005558c:	mov    DWORD PTR [eax+0x16bc],ecx
10055592:	mov    ecx,DWORD PTR [esp+0x18]
10055596:	cmp    ecx,DWORD PTR [eax+0x16a0]
1005559c:	jb     0x10055270
100555a2:	movzx  edi,WORD PTR [ebx+0x402]
100555a9:	mov    ecx,DWORD PTR [eax+0x16bc]
100555af:	mov    edx,0x10
100555b4:	sub    edx,edi
100555b6:	cmp    ecx,edx
100555b8:	jle    0x1005562d
100555ba:	movzx  esi,WORD PTR [ebx+0x400]
100555c1:	mov    edx,esi
100555c3:	shl    edx,cl
100555c5:	mov    ecx,DWORD PTR [eax+0x8]
100555c8:	mov    DWORD PTR [esp+0x20],ebx
100555cc:	or     WORD PTR [eax+0x16b8],dx
100555d3:	mov    edx,DWORD PTR [eax+0x14]
100555d6:	mov    bl,BYTE PTR [eax+0x16b8]
100555dc:	mov    BYTE PTR [ecx+edx*1],bl
100555df:	add    DWORD PTR [eax+0x14],0x1
100555e3:	mov    ebp,DWORD PTR [eax+0x14]
100555e6:	mov    ecx,DWORD PTR [eax+0x8]
100555e9:	mov    dl,BYTE PTR [eax+0x16b9]
100555ef:	mov    ebx,DWORD PTR [esp+0x20]
100555f3:	mov    BYTE PTR [ecx+ebp*1],dl
100555f6:	mov    edx,DWORD PTR [eax+0x16bc]
100555fc:	add    DWORD PTR [eax+0x14],0x1
10055600:	mov    cl,0x10
10055602:	sub    cl,dl
10055604:	shr    si,cl
10055607:	lea    ecx,[edx+edi*1-0x10]
1005560b:	pop    edi
1005560c:	mov    DWORD PTR [eax+0x16bc],ecx
10055612:	mov    WORD PTR [eax+0x16b8],si
10055619:	movzx  edx,WORD PTR [ebx+0x402]
10055620:	pop    esi
10055621:	pop    ebp
10055622:	mov    DWORD PTR [eax+0x16b4],edx
10055628:	pop    ebx
10055629:	add    esp,0xc
1005562c:	ret    
1005562d:	mov    dx,WORD PTR [ebx+0x400]
10055634:	shl    dx,cl
10055637:	or     WORD PTR [eax+0x16b8],dx
1005563e:	add    ecx,edi
10055640:	pop    edi
10055641:	mov    DWORD PTR [eax+0x16bc],ecx
10055647:	movzx  ecx,WORD PTR [ebx+0x402]
1005564e:	pop    esi
1005564f:	pop    ebp
10055650:	mov    DWORD PTR [eax+0x16b4],ecx
10055656:	pop    ebx
10055657:	add    esp,0xc
1005565a:	ret    
1005565b:	int3   
1005565c:	int3   
1005565d:	int3   
1005565e:	int3   
1005565f:	int3   
10055660:	xor    eax,eax
10055662:	lea    ecx,[edx+0x94]
10055668:	cmp    WORD PTR [ecx],0x0
1005566c:	jne    0x10055679
1005566e:	add    eax,0x1
10055671:	add    ecx,0x4
10055674:	cmp    eax,0x9
10055677:	jl     0x10055668
10055679:	cmp    eax,0x9
1005567c:	jne    0x1005571d
10055682:	mov    eax,0xe
10055687:	lea    ecx,[edx+0xd0]
1005568d:	lea    ecx,[ecx+0x0]
10055690:	cmp    WORD PTR [ecx-0x4],0x0
10055695:	jne    0x1005571d
1005569b:	cmp    WORD PTR [ecx],0x0
1005569f:	jne    0x100556d6
100556a1:	cmp    WORD PTR [ecx+0x4],0x0
100556a6:	jne    0x100556e7
100556a8:	cmp    WORD PTR [ecx+0x8],0x0
100556ad:	jne    0x100556f8
100556af:	cmp    WORD PTR [ecx+0xc],0x0
100556b4:	jne    0x10055709
100556b6:	cmp    WORD PTR [ecx+0x10],0x0
100556bb:	jne    0x1005571a
100556bd:	add    eax,0x6
100556c0:	add    ecx,0x18
100556c3:	cmp    eax,0x20
100556c6:	jl     0x10055690
100556c8:	mov    edx,DWORD PTR [edx]
100556ca:	xor    ecx,ecx
100556cc:	cmp    eax,0x20
100556cf:	sete   cl
100556d2:	mov    DWORD PTR [edx+0x2c],ecx
100556d5:	ret    
100556d6:	mov    edx,DWORD PTR [edx]
100556d8:	xor    ecx,ecx
100556da:	add    eax,0x1
100556dd:	cmp    eax,0x20
100556e0:	sete   cl
100556e3:	mov    DWORD PTR [edx+0x2c],ecx
100556e6:	ret    
100556e7:	mov    edx,DWORD PTR [edx]
100556e9:	xor    ecx,ecx
100556eb:	add    eax,0x2
100556ee:	cmp    eax,0x20
100556f1:	sete   cl
100556f4:	mov    DWORD PTR [edx+0x2c],ecx
100556f7:	ret    
100556f8:	mov    edx,DWORD PTR [edx]
100556fa:	xor    ecx,ecx
100556fc:	add    eax,0x3
100556ff:	cmp    eax,0x20
10055702:	sete   cl
10055705:	mov    DWORD PTR [edx+0x2c],ecx
10055708:	ret    
10055709:	mov    edx,DWORD PTR [edx]
1005570b:	xor    ecx,ecx
1005570d:	add    eax,0x4
10055710:	cmp    eax,0x20
10055713:	sete   cl
10055716:	mov    DWORD PTR [edx+0x2c],ecx
10055719:	ret    
1005571a:	add    eax,0x5
1005571d:	mov    edx,DWORD PTR [edx]
1005571f:	xor    ecx,ecx
10055721:	cmp    eax,0x20
10055724:	sete   cl
10055727:	mov    DWORD PTR [edx+0x2c],ecx
1005572a:	ret    
1005572b:	int3   
1005572c:	int3   
1005572d:	int3   
1005572e:	int3   
1005572f:	int3   
10055730:	xor    eax,eax
10055732:	push   esi
10055733:	mov    esi,ecx
10055735:	and    esi,0x1
10055738:	or     eax,esi
1005573a:	sub    edx,0x1
1005573d:	shr    ecx,1
1005573f:	add    eax,eax
10055741:	test   edx,edx
10055743:	jg     0x10055733
10055745:	shr    eax,1
10055747:	pop    esi
10055748:	ret    
10055749:	int3   
1005574a:	int3   
1005574b:	int3   
1005574c:	int3   
1005574d:	int3   
1005574e:	int3   
1005574f:	int3   
10055750:	mov    ecx,DWORD PTR [eax+0x16bc]
10055756:	cmp    ecx,0x10
10055759:	push   ebx
1005575a:	jne    0x10055795
1005575c:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055763:	mov    edx,DWORD PTR [eax+0x14]
10055766:	mov    ecx,DWORD PTR [eax+0x8]
10055769:	mov    BYTE PTR [ecx+edx*1],bl
1005576c:	add    DWORD PTR [eax+0x14],0x1
10055770:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055777:	mov    ecx,DWORD PTR [eax+0x14]
1005577a:	mov    edx,DWORD PTR [eax+0x8]
1005577d:	mov    BYTE PTR [ecx+edx*1],bl
10055780:	add    DWORD PTR [eax+0x14],0x1
10055784:	xor    ecx,ecx
10055786:	mov    DWORD PTR [eax+0x16bc],ecx
1005578c:	mov    WORD PTR [eax+0x16b8],cx
10055793:	pop    ebx
10055794:	ret    
10055795:	cmp    ecx,0x8
10055798:	jl     0x100557c3
1005579a:	mov    ecx,DWORD PTR [eax+0x8]
1005579d:	mov    edx,DWORD PTR [eax+0x14]
100557a0:	mov    bl,BYTE PTR [eax+0x16b8]
100557a6:	mov    BYTE PTR [ecx+edx*1],bl
100557a9:	movzx  cx,BYTE PTR [eax+0x16b9]
100557b1:	add    DWORD PTR [eax+0x14],0x1
100557b5:	add    DWORD PTR [eax+0x16bc],0xfffffff8
100557bc:	mov    WORD PTR [eax+0x16b8],cx
100557c3:	pop    ebx
100557c4:	ret    
100557c5:	int3   
100557c6:	int3   
100557c7:	int3   
100557c8:	int3   
100557c9:	int3   
100557ca:	int3   
100557cb:	int3   
100557cc:	int3   
100557cd:	int3   
100557ce:	int3   
100557cf:	int3   
100557d0:	mov    edx,DWORD PTR [eax+0x16bc]
100557d6:	cmp    edx,0x8
100557d9:	push   ebx
100557da:	push   esi
100557db:	jle    0x1005581a
100557dd:	movzx  ebx,BYTE PTR [eax+0x16b8]
100557e4:	mov    edx,DWORD PTR [eax+0x14]
100557e7:	mov    ecx,DWORD PTR [eax+0x8]
100557ea:	mov    BYTE PTR [ecx+edx*1],bl
100557ed:	movzx  ebx,BYTE PTR [eax+0x16b9]
100557f4:	mov    edx,DWORD PTR [eax+0x8]
100557f7:	mov    esi,0x1
100557fc:	add    DWORD PTR [eax+0x14],esi
100557ff:	mov    ecx,DWORD PTR [eax+0x14]
10055802:	mov    BYTE PTR [ecx+edx*1],bl
10055805:	add    DWORD PTR [eax+0x14],esi
10055808:	xor    ecx,ecx
1005580a:	pop    esi
1005580b:	mov    WORD PTR [eax+0x16b8],cx
10055812:	mov    DWORD PTR [eax+0x16bc],ecx
10055818:	pop    ebx
10055819:	ret    
1005581a:	xor    ecx,ecx
1005581c:	cmp    edx,ecx
1005581e:	jle    0x10055833
10055820:	mov    esi,DWORD PTR [eax+0x14]
10055823:	mov    edx,DWORD PTR [eax+0x8]
10055826:	mov    bl,BYTE PTR [eax+0x16b8]
1005582c:	mov    BYTE PTR [edx+esi*1],bl
1005582f:	add    DWORD PTR [eax+0x14],0x1
10055833:	pop    esi
10055834:	mov    WORD PTR [eax+0x16b8],cx
1005583b:	mov    DWORD PTR [eax+0x16bc],ecx
10055841:	pop    ebx
10055842:	ret    
10055843:	int3   
10055844:	int3   
10055845:	int3   
10055846:	int3   
10055847:	int3   
10055848:	int3   
10055849:	int3   
1005584a:	int3   
1005584b:	int3   
1005584c:	int3   
1005584d:	int3   
1005584e:	int3   
1005584f:	int3   
10055850:	push   ebx
10055851:	push   esi
10055852:	push   edi
10055853:	mov    ebx,ecx
10055855:	mov    esi,edx
10055857:	call   0x100557d0
1005585c:	cmp    DWORD PTR [esp+0x10],0x0
10055861:	mov    DWORD PTR [eax+0x16b4],0x8
1005586b:	mov    edi,0x1
10055870:	je     0x100558ac
10055872:	mov    ecx,DWORD PTR [eax+0x14]
10055875:	mov    edx,DWORD PTR [eax+0x8]
10055878:	mov    BYTE PTR [ecx+edx*1],bl
1005587b:	add    DWORD PTR [eax+0x14],edi
1005587e:	mov    ecx,DWORD PTR [eax+0x14]
10055881:	mov    edx,DWORD PTR [eax+0x8]
10055884:	mov    BYTE PTR [ecx+edx*1],bh
10055887:	add    DWORD PTR [eax+0x14],edi
1005588a:	mov    edx,DWORD PTR [eax+0x8]
1005588d:	push   ebp
1005588e:	mov    ebp,DWORD PTR [eax+0x14]
10055891:	mov    cl,bl
10055893:	not    cl
10055895:	mov    BYTE PTR [edx+ebp*1],cl
10055898:	add    DWORD PTR [eax+0x14],edi
1005589b:	mov    ebp,DWORD PTR [eax+0x14]
1005589e:	mov    edx,DWORD PTR [eax+0x8]
100558a1:	mov    ecx,ebx
100558a3:	not    ecx
100558a5:	mov    BYTE PTR [edx+ebp*1],ch
100558a8:	add    DWORD PTR [eax+0x14],edi
100558ab:	pop    ebp
100558ac:	test   ebx,ebx
100558ae:	je     0x100558ce
100558b0:	mov    ecx,DWORD PTR [eax+0x14]
100558b3:	mov    edx,DWORD PTR [eax+0x8]
100558b6:	sub    ebx,edi
100558b8:	mov    DWORD PTR [esp+0x10],ebx
100558bc:	mov    bl,BYTE PTR [esi]
100558be:	mov    BYTE PTR [ecx+edx*1],bl
100558c1:	mov    ebx,DWORD PTR [esp+0x10]
100558c5:	add    DWORD PTR [eax+0x14],edi
100558c8:	add    esi,edi
100558ca:	test   ebx,ebx
100558cc:	jne    0x100558b0
100558ce:	pop    edi
100558cf:	pop    esi
100558d0:	pop    ebx
100558d1:	ret    
100558d2:	int3   
100558d3:	int3   
100558d4:	int3   
100558d5:	int3   
100558d6:	int3   
100558d7:	int3   
100558d8:	int3   
100558d9:	int3   
100558da:	int3   
100558db:	int3   
100558dc:	int3   
100558dd:	int3   
100558de:	int3   
100558df:	int3   
100558e0:	mov    edx,DWORD PTR [esp+0x4]
100558e4:	lea    eax,[edx+0x94]
100558ea:	mov    DWORD PTR [edx+0xb18],eax
100558f0:	lea    eax,[edx+0xa7c]
100558f6:	mov    DWORD PTR [edx+0xb30],eax
100558fc:	xor    eax,eax
100558fe:	lea    ecx,[edx+0x988]
10055904:	mov    DWORD PTR [edx+0xb20],0x10080fc0
1005590e:	mov    DWORD PTR [edx+0xb24],ecx
10055914:	mov    DWORD PTR [edx+0xb2c],0x10080fd4
1005591e:	mov    DWORD PTR [edx+0xb38],0x10080fe8
10055928:	mov    WORD PTR [edx+0x16b8],ax
1005592f:	mov    DWORD PTR [edx+0x16bc],eax
10055935:	mov    DWORD PTR [edx+0x16b4],0x8
1005593f:	jmp    0x10054690
10055944:	int3   
10055945:	int3   
10055946:	int3   
10055947:	int3   
10055948:	int3   
10055949:	int3   
1005594a:	int3   
1005594b:	int3   
1005594c:	int3   
1005594d:	int3   
1005594e:	int3   
1005594f:	int3   
10055950:	sub    esp,0x24
10055953:	mov    eax,ds:0x100801ac
10055958:	xor    eax,esp
1005595a:	mov    DWORD PTR [esp+0x20],eax
1005595e:	push   esi
1005595f:	lea    esi,[esp+0x6]
10055963:	xor    ecx,ecx
10055965:	mov    eax,0x1
1005596a:	sub    edx,esi
1005596c:	lea    esp,[esp+0x0]
10055970:	lea    esi,[edx+eax*2]
10055973:	mov    si,WORD PTR [esp+esi*1+0x4]
10055978:	add    si,cx
1005597b:	add    si,si
1005597e:	movzx  ecx,si
10055981:	mov    WORD PTR [esp+eax*2+0x4],cx
10055986:	add    eax,0x1
10055989:	cmp    eax,0xf
1005598c:	jle    0x10055970
1005598e:	xor    esi,esi
10055990:	test   ebx,ebx
10055992:	jl     0x100559bd
10055994:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10055999:	test   edx,edx
1005599b:	je     0x100559b6
1005599d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
100559a2:	movzx  ecx,ax
100559a5:	add    eax,0x1
100559a8:	mov    WORD PTR [esp+edx*2+0x4],ax
100559ad:	call   0x10055730
100559b2:	mov    WORD PTR [edi+esi*4],ax
100559b6:	add    esi,0x1
100559b9:	cmp    esi,ebx
100559bb:	jle    0x10055994
100559bd:	mov    ecx,DWORD PTR [esp+0x24]
100559c1:	pop    esi
100559c2:	xor    ecx,esp
100559c4:	call   0x10043615
100559c9:	add    esp,0x24
100559cc:	ret    
100559cd:	int3   
100559ce:	int3   
100559cf:	int3   
100559d0:	sub    esp,0x8
100559d3:	mov    eax,DWORD PTR [esp+0xc]
100559d7:	push   ebx
100559d8:	push   ebp
100559d9:	push   edi
100559da:	mov    edi,DWORD PTR [eax]
100559dc:	mov    eax,DWORD PTR [eax+0x8]
100559df:	mov    ecx,DWORD PTR [eax+0xc]
100559e2:	mov    ebp,DWORD PTR [eax]
100559e4:	xor    edx,edx
100559e6:	or     ebx,0xffffffff
100559e9:	xor    eax,eax
100559eb:	cmp    ecx,edx
100559ed:	mov    DWORD PTR [esp+0x10],ecx
100559f1:	mov    DWORD PTR [esp+0xc],ebx
100559f5:	mov    DWORD PTR [esi+0x1450],edx
100559fb:	mov    DWORD PTR [esi+0x1454],0x23d
10055a05:	jle    0x10055a3e
10055a07:	cmp    WORD PTR [edi+eax*4],dx
10055a0b:	je     0x10055a30
10055a0d:	add    DWORD PTR [esi+0x1450],0x1
10055a14:	mov    ecx,DWORD PTR [esi+0x1450]
10055a1a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055a21:	mov    DWORD PTR [esp+0xc],eax
10055a25:	mov    BYTE PTR [eax+esi*1+0x1458],dl
10055a2c:	mov    ebx,eax
10055a2e:	jmp    0x10055a35
10055a30:	mov    WORD PTR [edi+eax*4+0x2],dx
10055a35:	add    eax,0x1
10055a38:	cmp    eax,DWORD PTR [esp+0x10]
10055a3c:	jl     0x10055a07
10055a3e:	cmp    DWORD PTR [esi+0x1450],0x2
10055a45:	jge    0x10055a99
10055a47:	cmp    ebx,0x2
10055a4a:	jge    0x10055a53
10055a4c:	add    ebx,0x1
10055a4f:	mov    eax,ebx
10055a51:	jmp    0x10055a55
10055a53:	xor    eax,eax
10055a55:	add    DWORD PTR [esi+0x1450],0x1
10055a5c:	mov    ecx,DWORD PTR [esi+0x1450]
10055a62:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055a69:	mov    WORD PTR [edi+eax*4],0x1
10055a6f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10055a76:	add    DWORD PTR [esi+0x16a8],0xffffffff
10055a7d:	cmp    ebp,edx
10055a7f:	je     0x10055a8c
10055a81:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10055a86:	sub    DWORD PTR [esi+0x16ac],eax
10055a8c:	cmp    DWORD PTR [esi+0x1450],0x2
10055a93:	jl     0x10055a47
10055a95:	mov    DWORD PTR [esp+0xc],ebx
10055a99:	mov    ecx,DWORD PTR [esp+0x18]
10055a9d:	mov    DWORD PTR [ecx+0x4],ebx
10055aa0:	mov    eax,DWORD PTR [esi+0x1450]
10055aa6:	cdq    
10055aa7:	sub    eax,edx
10055aa9:	mov    ebp,eax
10055aab:	sar    ebp,1
10055aad:	cmp    ebp,0x1
10055ab0:	jl     0x10055ac5
10055ab2:	push   ebp
10055ab3:	mov    eax,esi
10055ab5:	call   0x10054700
10055aba:	sub    ebp,0x1
10055abd:	add    esp,0x4
10055ac0:	cmp    ebp,0x1
10055ac3:	jge    0x10055ab2
10055ac5:	mov    ebx,DWORD PTR [esp+0x10]
10055ac9:	lea    esp,[esp+0x0]
10055ad0:	mov    eax,DWORD PTR [esi+0x1450]
10055ad6:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
10055add:	mov    ebp,DWORD PTR [esi+0xb60]
10055ae3:	add    eax,0xffffffff
10055ae6:	mov    DWORD PTR [esi+0x1450],eax
10055aec:	push   0x1
10055aee:	mov    eax,esi
10055af0:	mov    DWORD PTR [esi+0xb60],edx
10055af6:	call   0x10054700
10055afb:	mov    eax,DWORD PTR [esi+0xb60]
10055b01:	or     edx,0xffffffff
10055b04:	add    DWORD PTR [esi+0x1454],edx
10055b0a:	mov    ecx,DWORD PTR [esi+0x1454]
10055b10:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10055b17:	add    DWORD PTR [esi+0x1454],edx
10055b1d:	mov    ecx,DWORD PTR [esi+0x1454]
10055b23:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10055b2a:	mov    cx,WORD PTR [edi+eax*4]
10055b2e:	add    cx,WORD PTR [edi+ebp*4]
10055b32:	add    esp,0x4
10055b35:	mov    WORD PTR [edi+ebx*4],cx
10055b39:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10055b40:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10055b47:	cmp    dl,cl
10055b49:	jb     0x10055b50
10055b4b:	movzx  ecx,dl
10055b4e:	jmp    0x10055b53
10055b50:	movzx  ecx,cl
10055b53:	add    cl,0x1
10055b56:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
10055b5d:	movzx  ecx,bx
10055b60:	mov    WORD PTR [edi+eax*4+0x2],cx
10055b65:	mov    WORD PTR [edi+ebp*4+0x2],cx
10055b6a:	mov    DWORD PTR [esi+0xb60],ebx
10055b70:	push   0x1
10055b72:	mov    eax,esi
10055b74:	add    ebx,0x1
10055b77:	call   0x10054700
10055b7c:	add    esp,0x4
10055b7f:	cmp    DWORD PTR [esi+0x1450],0x2
10055b86:	jge    0x10055ad0
10055b8c:	add    DWORD PTR [esi+0x1454],0xffffffff
10055b93:	mov    eax,DWORD PTR [esi+0x1454]
10055b99:	mov    edx,DWORD PTR [esi+0xb60]
10055b9f:	mov    ecx,DWORD PTR [esp+0x18]
10055ba3:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
10055baa:	mov    eax,esi
10055bac:	call   0x100547d0
10055bb1:	mov    ebx,DWORD PTR [esp+0xc]
10055bb5:	lea    edx,[esi+0xb3c]
10055bbb:	call   0x10055950
10055bc0:	pop    edi
10055bc1:	pop    ebp
10055bc2:	pop    ebx
10055bc3:	add    esp,0x8
10055bc6:	ret    
10055bc7:	int3   
10055bc8:	int3   
10055bc9:	int3   
10055bca:	int3   
10055bcb:	int3   
10055bcc:	int3   
10055bcd:	int3   
10055bce:	int3   
10055bcf:	int3   
10055bd0:	push   esi
10055bd1:	mov    esi,eax
10055bd3:	mov    ecx,DWORD PTR [esi+0xb1c]
10055bd9:	lea    eax,[esi+0x94]
10055bdf:	push   esi
10055be0:	call   0x100549f0
10055be5:	mov    ecx,DWORD PTR [esi+0xb28]
10055beb:	lea    eax,[esi+0x988]
10055bf1:	push   esi
10055bf2:	call   0x100549f0
10055bf7:	lea    eax,[esi+0xb30]
10055bfd:	push   eax
10055bfe:	call   0x100559d0
10055c03:	add    esp,0xc
10055c06:	mov    eax,0x12
10055c0b:	jmp    0x10055c10
10055c0d:	lea    ecx,[ecx+0x0]
10055c10:	movzx  ecx,BYTE PTR [eax+0x10069acc]
10055c17:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055c20:	jne    0x10055c8d
10055c22:	movzx  edx,BYTE PTR [eax+0x10069acb]
10055c29:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055c32:	jne    0x10055c6c
10055c34:	movzx  ecx,BYTE PTR [eax+0x10069aca]
10055c3b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10055c44:	jne    0x10055c7b
10055c46:	movzx  edx,BYTE PTR [eax+0x10069ac9]
10055c4d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10055c56:	jne    0x10055c8a
10055c58:	sub    eax,0x4
10055c5b:	cmp    eax,0x3
10055c5e:	jge    0x10055c10
10055c60:	lea    ecx,[eax+eax*2+0x11]
10055c64:	add    DWORD PTR [esi+0x16a8],ecx
10055c6a:	pop    esi
10055c6b:	ret    
10055c6c:	sub    eax,0x1
10055c6f:	lea    ecx,[eax+eax*2+0x11]
10055c73:	add    DWORD PTR [esi+0x16a8],ecx
10055c79:	pop    esi
10055c7a:	ret    
10055c7b:	sub    eax,0x2
10055c7e:	lea    ecx,[eax+eax*2+0x11]
10055c82:	add    DWORD PTR [esi+0x16a8],ecx
10055c88:	pop    esi
10055c89:	ret    
10055c8a:	sub    eax,0x3
10055c8d:	lea    ecx,[eax+eax*2+0x11]
10055c91:	add    DWORD PTR [esi+0x16a8],ecx
10055c97:	pop    esi
10055c98:	ret    
10055c99:	int3   
10055c9a:	int3   
10055c9b:	int3   
10055c9c:	int3   
10055c9d:	int3   
10055c9e:	int3   
10055c9f:	int3   
10055ca0:	mov    eax,DWORD PTR [esp+0x4]
10055ca4:	mov    ecx,DWORD PTR [eax+0x16bc]
10055caa:	cmp    ecx,0xd
10055cad:	jle    0x10055d18
10055caf:	push   ebx
10055cb0:	push   esi
10055cb1:	mov    esi,DWORD PTR [esp+0x18]
10055cb5:	mov    edx,esi
10055cb7:	shl    edx,cl
10055cb9:	mov    ecx,DWORD PTR [eax+0x8]
10055cbc:	or     WORD PTR [eax+0x16b8],dx
10055cc3:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055cca:	mov    edx,DWORD PTR [eax+0x14]
10055ccd:	mov    BYTE PTR [ecx+edx*1],bl
10055cd0:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055cd7:	add    DWORD PTR [eax+0x14],0x1
10055cdb:	mov    ecx,DWORD PTR [eax+0x14]
10055cde:	mov    edx,DWORD PTR [eax+0x8]
10055ce1:	mov    BYTE PTR [ecx+edx*1],bl
10055ce4:	mov    edx,DWORD PTR [eax+0x16bc]
10055cea:	add    DWORD PTR [eax+0x14],0x1
10055cee:	mov    cl,0x10
10055cf0:	sub    cl,dl
10055cf2:	shr    si,cl
10055cf5:	mov    ecx,DWORD PTR [esp+0x14]
10055cf9:	add    edx,0xfffffff3
10055cfc:	mov    DWORD PTR [eax+0x16bc],edx
10055d02:	mov    edx,DWORD PTR [esp+0x10]
10055d06:	mov    WORD PTR [eax+0x16b8],si
10055d0d:	pop    esi
10055d0e:	pop    ebx
10055d0f:	push   0x1
10055d11:	call   0x10055850
10055d16:	pop    ecx
10055d17:	ret    
10055d18:	mov    edx,DWORD PTR [esp+0x10]
10055d1c:	shl    edx,cl
10055d1e:	add    ecx,0x3
10055d21:	mov    DWORD PTR [eax+0x16bc],ecx
10055d27:	mov    ecx,DWORD PTR [esp+0xc]
10055d2b:	or     WORD PTR [eax+0x16b8],dx
10055d32:	mov    edx,DWORD PTR [esp+0x8]
10055d36:	push   0x1
10055d38:	call   0x10055850
10055d3d:	pop    ecx
10055d3e:	ret    
10055d3f:	int3   
10055d40:	mov    eax,DWORD PTR [esp+0x4]
10055d44:	mov    ecx,DWORD PTR [eax+0x16bc]
10055d4a:	mov    edx,0x2
10055d4f:	shl    edx,cl
10055d51:	push   ebx
10055d52:	push   esi
10055d53:	push   edi
10055d54:	or     WORD PTR [eax+0x16b8],dx
10055d5b:	cmp    ecx,0xd
10055d5e:	mov    esi,0x1
10055d63:	jle    0x10055daf
10055d65:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055d6c:	mov    edx,DWORD PTR [eax+0x14]
10055d6f:	mov    ecx,DWORD PTR [eax+0x8]
10055d72:	mov    BYTE PTR [ecx+edx*1],bl
10055d75:	add    DWORD PTR [eax+0x14],esi
10055d78:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055d7f:	mov    ecx,DWORD PTR [eax+0x14]
10055d82:	mov    edx,DWORD PTR [eax+0x8]
10055d85:	mov    BYTE PTR [ecx+edx*1],bl
10055d88:	mov    edx,DWORD PTR [eax+0x16bc]
10055d8e:	add    DWORD PTR [eax+0x14],esi
10055d91:	mov    cl,0x10
10055d93:	sub    cl,dl
10055d95:	mov    edi,0x2
10055d9a:	shr    di,cl
10055d9d:	add    edx,0xfffffff3
10055da0:	mov    DWORD PTR [eax+0x16bc],edx
10055da6:	mov    WORD PTR [eax+0x16b8],di
10055dad:	jmp    0x10055db8
10055daf:	add    ecx,0x3
10055db2:	mov    DWORD PTR [eax+0x16bc],ecx
10055db8:	mov    ecx,DWORD PTR [eax+0x16bc]
10055dbe:	xor    edx,edx
10055dc0:	shl    edx,cl
10055dc2:	or     WORD PTR [eax+0x16b8],dx
10055dc9:	cmp    ecx,0x9
10055dcc:	jle    0x10055e15
10055dce:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055dd5:	mov    edx,DWORD PTR [eax+0x14]
10055dd8:	mov    ecx,DWORD PTR [eax+0x8]
10055ddb:	mov    BYTE PTR [ecx+edx*1],bl
10055dde:	add    DWORD PTR [eax+0x14],esi
10055de1:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055de8:	mov    ecx,DWORD PTR [eax+0x14]
10055deb:	mov    edx,DWORD PTR [eax+0x8]
10055dee:	mov    BYTE PTR [ecx+edx*1],bl
10055df1:	mov    edx,DWORD PTR [eax+0x16bc]
10055df7:	add    DWORD PTR [eax+0x14],esi
10055dfa:	mov    cl,0x10
10055dfc:	sub    cl,dl
10055dfe:	xor    edi,edi
10055e00:	shr    di,cl
10055e03:	add    edx,0xfffffff7
10055e06:	mov    DWORD PTR [eax+0x16bc],edx
10055e0c:	mov    WORD PTR [eax+0x16b8],di
10055e13:	jmp    0x10055e1e
10055e15:	add    ecx,0x7
10055e18:	mov    DWORD PTR [eax+0x16bc],ecx
10055e1e:	call   0x10055750
10055e23:	mov    ecx,DWORD PTR [eax+0x16bc]
10055e29:	mov    edx,DWORD PTR [eax+0x16b4]
10055e2f:	sub    edx,ecx
10055e31:	add    edx,0xb
10055e34:	cmp    edx,0x9
10055e37:	jge    0x10055f1f
10055e3d:	mov    edx,0x2
10055e42:	shl    edx,cl
10055e44:	or     WORD PTR [eax+0x16b8],dx
10055e4b:	cmp    ecx,0xd
10055e4e:	jle    0x10055e9a
10055e50:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055e57:	mov    edx,DWORD PTR [eax+0x14]
10055e5a:	mov    ecx,DWORD PTR [eax+0x8]
10055e5d:	mov    BYTE PTR [ecx+edx*1],bl
10055e60:	add    DWORD PTR [eax+0x14],esi
10055e63:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055e6a:	mov    ecx,DWORD PTR [eax+0x14]
10055e6d:	mov    edx,DWORD PTR [eax+0x8]
10055e70:	mov    BYTE PTR [ecx+edx*1],bl
10055e73:	mov    edx,DWORD PTR [eax+0x16bc]
10055e79:	add    DWORD PTR [eax+0x14],esi
10055e7c:	mov    cl,0x10
10055e7e:	sub    cl,dl
10055e80:	mov    edi,0x2
10055e85:	shr    di,cl
10055e88:	add    edx,0xfffffff3
10055e8b:	mov    DWORD PTR [eax+0x16bc],edx
10055e91:	mov    WORD PTR [eax+0x16b8],di
10055e98:	jmp    0x10055ea3
10055e9a:	add    ecx,0x3
10055e9d:	mov    DWORD PTR [eax+0x16bc],ecx
10055ea3:	mov    ecx,DWORD PTR [eax+0x16bc]
10055ea9:	xor    edx,edx
10055eab:	shl    edx,cl
10055ead:	or     WORD PTR [eax+0x16b8],dx
10055eb4:	cmp    ecx,0x9
10055eb7:	jle    0x10055f11
10055eb9:	movzx  ebx,BYTE PTR [eax+0x16b8]
10055ec0:	mov    edx,DWORD PTR [eax+0x14]
10055ec3:	mov    ecx,DWORD PTR [eax+0x8]
10055ec6:	mov    BYTE PTR [ecx+edx*1],bl
10055ec9:	add    DWORD PTR [eax+0x14],esi
10055ecc:	movzx  ebx,BYTE PTR [eax+0x16b9]
10055ed3:	mov    ecx,DWORD PTR [eax+0x14]
10055ed6:	mov    edx,DWORD PTR [eax+0x8]
10055ed9:	mov    BYTE PTR [ecx+edx*1],bl
10055edc:	mov    edx,DWORD PTR [eax+0x16bc]
10055ee2:	add    DWORD PTR [eax+0x14],esi
10055ee5:	mov    cl,0x10
10055ee7:	sub    cl,dl
10055ee9:	xor    esi,esi
10055eeb:	shr    si,cl
10055eee:	add    edx,0xfffffff7
10055ef1:	mov    DWORD PTR [eax+0x16bc],edx
10055ef7:	mov    WORD PTR [eax+0x16b8],si
10055efe:	call   0x10055750
10055f03:	pop    edi
10055f04:	pop    esi
10055f05:	mov    DWORD PTR [eax+0x16b4],0x7
10055f0f:	pop    ebx
10055f10:	ret    
10055f11:	add    ecx,0x7
10055f14:	mov    DWORD PTR [eax+0x16bc],ecx
10055f1a:	call   0x10055750
10055f1f:	pop    edi
10055f20:	pop    esi
10055f21:	mov    DWORD PTR [eax+0x16b4],0x7
10055f2b:	pop    ebx
10055f2c:	ret    
10055f2d:	int3   
10055f2e:	int3   
10055f2f:	int3   
10055f30:	push   ecx
10055f31:	push   ebx
10055f32:	mov    ebx,DWORD PTR [esp+0x14]
10055f36:	push   esi
10055f37:	mov    esi,DWORD PTR [esp+0x10]
10055f3b:	cmp    DWORD PTR [esi+0x84],0x0
10055f42:	push   edi
10055f43:	mov    DWORD PTR [esp+0xc],0x0
10055f4b:	jle    0x10055fa4
10055f4d:	test   ebx,ebx
10055f4f:	jbe    0x10055f60
10055f51:	mov    eax,DWORD PTR [esi]
10055f53:	cmp    DWORD PTR [eax+0x2c],0x2
10055f57:	jne    0x10055f60
10055f59:	mov    edx,esi
10055f5b:	call   0x10055660
10055f60:	lea    ecx,[esi+0xb18]
10055f66:	push   ecx
10055f67:	call   0x100559d0
10055f6c:	lea    edx,[esi+0xb24]
10055f72:	push   edx
10055f73:	call   0x100559d0
10055f78:	add    esp,0x8
10055f7b:	mov    eax,esi
10055f7d:	call   0x10055bd0
10055f82:	mov    edx,DWORD PTR [esi+0x16a8]
10055f88:	mov    ecx,DWORD PTR [esi+0x16ac]
10055f8e:	add    edx,0xa
10055f91:	add    ecx,0xa
10055f94:	shr    edx,0x3
10055f97:	shr    ecx,0x3
10055f9a:	cmp    ecx,edx
10055f9c:	mov    DWORD PTR [esp+0xc],eax
10055fa0:	ja     0x10055fa9
10055fa2:	jmp    0x10055fa7
10055fa4:	lea    ecx,[ebx+0x5]
10055fa7:	mov    edx,ecx
10055fa9:	lea    eax,[ebx+0x4]
10055fac:	cmp    eax,edx
10055fae:	ja     0x10055fcd
10055fb0:	mov    eax,DWORD PTR [esp+0x18]
10055fb4:	test   eax,eax
10055fb6:	je     0x10055fcd
10055fb8:	mov    edi,DWORD PTR [esp+0x20]
10055fbc:	push   edi
10055fbd:	push   ebx
10055fbe:	push   eax
10055fbf:	push   esi
10055fc0:	call   0x10055ca0
10055fc5:	add    esp,0x10
10055fc8:	jmp    0x10056122
10055fcd:	cmp    DWORD PTR [esi+0x88],0x4
10055fd4:	je     0x10056098
10055fda:	cmp    ecx,edx
10055fdc:	je     0x10056098
10055fe2:	mov    ecx,DWORD PTR [esi+0x16bc]
10055fe8:	cmp    ecx,0xd
10055feb:	mov    edi,DWORD PTR [esp+0x20]
10055fef:	lea    edx,[edi+0x4]
10055ff2:	jle    0x10056046
10055ff4:	mov    eax,edx
10055ff6:	shl    eax,cl
10055ff8:	mov    ecx,DWORD PTR [esi+0x8]
10055ffb:	or     WORD PTR [esi+0x16b8],ax
10056002:	movzx  ebx,BYTE PTR [esi+0x16b8]
10056009:	mov    eax,DWORD PTR [esi+0x14]
1005600c:	mov    BYTE PTR [ecx+eax*1],bl
1005600f:	add    DWORD PTR [esi+0x14],0x1
10056013:	movzx  ebx,BYTE PTR [esi+0x16b9]
1005601a:	mov    ecx,DWORD PTR [esi+0x14]
1005601d:	mov    eax,DWORD PTR [esi+0x8]
10056020:	mov    BYTE PTR [ecx+eax*1],bl
10056023:	mov    ebx,DWORD PTR [esi+0x16bc]
10056029:	add    DWORD PTR [esi+0x14],0x1
1005602d:	mov    cl,0x10
1005602f:	sub    cl,bl
10056031:	shr    dx,cl
10056034:	add    ebx,0xfffffff3
10056037:	mov    DWORD PTR [esi+0x16bc],ebx
1005603d:	mov    WORD PTR [esi+0x16b8],dx
10056044:	jmp    0x10056058
10056046:	shl    edx,cl
10056048:	or     WORD PTR [esi+0x16b8],dx
1005604f:	add    ecx,0x3
10056052:	mov    DWORD PTR [esi+0x16bc],ecx
10056058:	mov    eax,DWORD PTR [esp+0xc]
1005605c:	mov    ecx,DWORD PTR [esi+0xb28]
10056062:	mov    edx,DWORD PTR [esi+0xb1c]
10056068:	add    eax,0x1
1005606b:	push   eax
1005606c:	add    ecx,0x1
1005606f:	push   ecx
10056070:	add    edx,0x1
10056073:	push   edx
10056074:	mov    eax,esi
10056076:	call   0x10054ff0
1005607b:	lea    eax,[esi+0x988]
10056081:	push   eax
10056082:	lea    ecx,[esi+0x94]
10056088:	push   ecx
10056089:	mov    eax,esi
1005608b:	call   0x10055250
10056090:	add    esp,0x14
10056093:	jmp    0x10056122
10056098:	mov    ecx,DWORD PTR [esi+0x16bc]
1005609e:	cmp    ecx,0xd
100560a1:	mov    edi,DWORD PTR [esp+0x20]
100560a5:	lea    eax,[edi+0x2]
100560a8:	jle    0x100560fc
100560aa:	mov    edx,eax
100560ac:	shl    edx,cl
100560ae:	mov    ecx,DWORD PTR [esi+0x8]
100560b1:	or     WORD PTR [esi+0x16b8],dx
100560b8:	movzx  ebx,BYTE PTR [esi+0x16b8]
100560bf:	mov    edx,DWORD PTR [esi+0x14]
100560c2:	mov    BYTE PTR [ecx+edx*1],bl
100560c5:	add    DWORD PTR [esi+0x14],0x1
100560c9:	movzx  ebx,BYTE PTR [esi+0x16b9]
100560d0:	mov    ecx,DWORD PTR [esi+0x14]
100560d3:	mov    edx,DWORD PTR [esi+0x8]
100560d6:	mov    BYTE PTR [ecx+edx*1],bl
100560d9:	mov    edx,DWORD PTR [esi+0x16bc]
100560df:	add    DWORD PTR [esi+0x14],0x1
100560e3:	mov    cl,0x10
100560e5:	sub    cl,dl
100560e7:	shr    ax,cl
100560ea:	add    edx,0xfffffff3
100560ed:	mov    DWORD PTR [esi+0x16bc],edx
100560f3:	mov    WORD PTR [esi+0x16b8],ax
100560fa:	jmp    0x1005610e
100560fc:	shl    eax,cl
100560fe:	or     WORD PTR [esi+0x16b8],ax
10056105:	add    ecx,0x3
10056108:	mov    DWORD PTR [esi+0x16bc],ecx
1005610e:	push   0x1006a028
10056113:	push   0x10069ba8
10056118:	mov    eax,esi
1005611a:	call   0x10055250
1005611f:	add    esp,0x8
10056122:	mov    edx,esi
10056124:	call   0x10054690
10056129:	test   edi,edi
1005612b:	pop    edi
1005612c:	je     0x1005613a
1005612e:	mov    eax,esi
10056130:	pop    esi
10056131:	pop    ebx
10056132:	add    esp,0x4
10056135:	jmp    0x100557d0
1005613a:	pop    esi
1005613b:	pop    ebx
1005613c:	pop    ecx
1005613d:	ret    
1005613e:	int3   
1005613f:	int3   
10056140:	push   esi
10056141:	mov    esi,edx
10056143:	test   esi,esi
10056145:	not    eax
10056147:	je     0x10056172
10056149:	lea    esp,[esp+0x0]
10056150:	test   cl,0x3
10056153:	je     0x10056172
10056155:	movzx  edx,BYTE PTR [ecx]
10056158:	xor    edx,eax
1005615a:	and    edx,0xff
10056160:	shr    eax,0x8
10056163:	xor    eax,DWORD PTR [edx*4+0x1006a490]
1005616a:	add    ecx,0x1
1005616d:	sub    esi,0x1
10056170:	jne    0x10056150
10056172:	cmp    esi,0x20
10056175:	push   ebx
10056176:	push   edi
10056177:	jb     0x1005635c
1005617d:	mov    edi,esi
1005617f:	shr    edi,0x5
10056182:	xor    eax,DWORD PTR [ecx]
10056184:	add    ecx,0x4
10056187:	mov    edx,eax
10056189:	shr    edx,0x10
1005618c:	movzx  ebx,ah
1005618f:	and    edx,0xff
10056195:	mov    edx,DWORD PTR [edx*4+0x1006a890]
1005619c:	xor    edx,DWORD PTR [ebx*4+0x1006ac90]
100561a3:	mov    ebx,eax
100561a5:	and    eax,0xff
100561aa:	shr    ebx,0x18
100561ad:	xor    edx,DWORD PTR [ebx*4+0x1006a490]
100561b4:	add    ecx,0x4
100561b7:	xor    edx,DWORD PTR [eax*4+0x1006b090]
100561be:	add    ecx,0x4
100561c1:	xor    edx,DWORD PTR [ecx-0x8]
100561c4:	add    ecx,0x4
100561c7:	mov    eax,edx
100561c9:	shr    eax,0x10
100561cc:	and    eax,0xff
100561d1:	mov    eax,DWORD PTR [eax*4+0x1006a890]
100561d8:	movzx  ebx,dh
100561db:	xor    eax,DWORD PTR [ebx*4+0x1006ac90]
100561e2:	mov    ebx,edx
100561e4:	and    edx,0xff
100561ea:	shr    ebx,0x18
100561ed:	xor    eax,DWORD PTR [ebx*4+0x1006a490]
100561f4:	add    ecx,0x4
100561f7:	xor    eax,DWORD PTR [edx*4+0x1006b090]
100561fe:	add    ecx,0x4
10056201:	xor    eax,DWORD PTR [ecx-0x10]
10056204:	mov    edx,eax
10056206:	shr    edx,0x10
10056209:	movzx  ebx,ah
1005620c:	and    edx,0xff
10056212:	mov    edx,DWORD PTR [edx*4+0x1006a890]
10056219:	xor    edx,DWORD PTR [ebx*4+0x1006ac90]
10056220:	mov    ebx,eax
10056222:	and    eax,0xff
10056227:	shr    ebx,0x18
1005622a:	xor    edx,DWORD PTR [ebx*4+0x1006a490]
10056231:	xor    edx,DWORD PTR [eax*4+0x1006b090]
10056238:	xor    edx,DWORD PTR [ecx-0xc]
1005623b:	mov    eax,edx
1005623d:	shr    eax,0x10
10056240:	and    eax,0xff
10056245:	mov    eax,DWORD PTR [eax*4+0x1006a890]
1005624c:	movzx  ebx,dh
1005624f:	xor    eax,DWORD PTR [ebx*4+0x1006ac90]
10056256:	mov    ebx,edx
10056258:	and    edx,0xff
1005625e:	shr    ebx,0x18
10056261:	xor    eax,DWORD PTR [ebx*4+0x1006a490]
10056268:	xor    eax,DWORD PTR [edx*4+0x1006b090]
1005626f:	xor    eax,DWORD PTR [ecx-0x8]
10056272:	mov    edx,eax
10056274:	shr    edx,0x10
10056277:	movzx  ebx,ah
1005627a:	and    edx,0xff
10056280:	mov    edx,DWORD PTR [edx*4+0x1006a890]
10056287:	xor    edx,DWORD PTR [ebx*4+0x1006ac90]
1005628e:	mov    ebx,eax
10056290:	and    eax,0xff
10056295:	shr    ebx,0x18
10056298:	xor    edx,DWORD PTR [ebx*4+0x1006a490]
1005629f:	xor    edx,DWORD PTR [eax*4+0x1006b090]
100562a6:	xor    edx,DWORD PTR [ecx-0x4]
100562a9:	mov    eax,edx
100562ab:	shr    eax,0x10
100562ae:	and    eax,0xff
100562b3:	mov    eax,DWORD PTR [eax*4+0x1006a890]
100562ba:	movzx  ebx,dh
100562bd:	xor    eax,DWORD PTR [ebx*4+0x1006ac90]
100562c4:	mov    ebx,edx
100562c6:	shr    ebx,0x18
100562c9:	xor    eax,DWORD PTR [ebx*4+0x1006a490]
100562d0:	and    edx,0xff
100562d6:	xor    eax,DWORD PTR [edx*4+0x1006b090]
100562dd:	xor    eax,DWORD PTR [ecx]
100562df:	add    ecx,0x4
100562e2:	mov    edx,eax
100562e4:	shr    edx,0x10
100562e7:	movzx  ebx,ah
100562ea:	and    edx,0xff
100562f0:	mov    edx,DWORD PTR [edx*4+0x1006a890]
100562f7:	xor    edx,DWORD PTR [ebx*4+0x1006ac90]
100562fe:	mov    ebx,eax
10056300:	and    eax,0xff
10056305:	shr    ebx,0x18
10056308:	xor    edx,DWORD PTR [ebx*4+0x1006a490]
1005630f:	add    ecx,0x4
10056312:	xor    edx,DWORD PTR [eax*4+0x1006b090]
10056319:	sub    esi,0x20
1005631c:	xor    edx,DWORD PTR [ecx-0x4]
1005631f:	mov    eax,edx
10056321:	shr    eax,0x10
10056324:	and    eax,0xff
10056329:	mov    eax,DWORD PTR [eax*4+0x1006a890]
10056330:	movzx  ebx,dh
10056333:	xor    eax,DWORD PTR [ebx*4+0x1006ac90]
1005633a:	mov    ebx,edx
1005633c:	shr    ebx,0x18
1005633f:	xor    eax,DWORD PTR [ebx*4+0x1006a490]
10056346:	and    edx,0xff
1005634c:	xor    eax,DWORD PTR [edx*4+0x1006b090]
10056353:	sub    edi,0x1
10056356:	jne    0x10056182
1005635c:	cmp    esi,0x4
1005635f:	jb     0x100563a9
10056361:	mov    edx,esi
10056363:	shr    edx,0x2
10056366:	xor    eax,DWORD PTR [ecx]
10056368:	add    ecx,0x4
1005636b:	mov    edi,eax
1005636d:	shr    edi,0x10
10056370:	and    edi,0xff
10056376:	mov    edi,DWORD PTR [edi*4+0x1006a890]
1005637d:	movzx  ebx,ah
10056380:	xor    edi,DWORD PTR [ebx*4+0x1006ac90]
10056387:	mov    ebx,eax
10056389:	shr    ebx,0x18
1005638c:	xor    edi,DWORD PTR [ebx*4+0x1006a490]
10056393:	and    eax,0xff
10056398:	xor    edi,DWORD PTR [eax*4+0x1006b090]
1005639f:	sub    esi,0x4
100563a2:	sub    edx,0x1
100563a5:	mov    eax,edi
100563a7:	jne    0x10056366
100563a9:	test   esi,esi
100563ab:	pop    edi
100563ac:	pop    ebx
100563ad:	je     0x100563cd
100563af:	nop
100563b0:	movzx  edx,BYTE PTR [ecx]
100563b3:	xor    edx,eax
100563b5:	and    edx,0xff
100563bb:	shr    eax,0x8
100563be:	xor    eax,DWORD PTR [edx*4+0x1006a490]
100563c5:	add    ecx,0x1
100563c8:	sub    esi,0x1
100563cb:	jne    0x100563b0
100563cd:	not    eax
100563cf:	pop    esi
100563d0:	ret    
100563d1:	int3   
100563d2:	int3   
100563d3:	int3   
100563d4:	int3   
100563d5:	int3   
100563d6:	int3   
100563d7:	int3   
100563d8:	int3   
100563d9:	int3   
100563da:	int3   
100563db:	int3   
100563dc:	int3   
100563dd:	int3   
100563de:	int3   
100563df:	int3   
100563e0:	mov    ecx,DWORD PTR [esp+0x8]
100563e4:	test   ecx,ecx
100563e6:	jne    0x100563eb
100563e8:	xor    eax,eax
100563ea:	ret    
100563eb:	mov    edx,DWORD PTR [esp+0xc]
100563ef:	mov    eax,DWORD PTR [esp+0x4]
100563f3:	jmp    0x10056140
100563f8:	int3   
100563f9:	int3   
100563fa:	int3   
100563fb:	int3   
100563fc:	int3   
100563fd:	int3   
100563fe:	int3   
100563ff:	int3   
10056400:	mov    eax,DWORD PTR [esp+0x8]
10056404:	imul   eax,DWORD PTR [esp+0xc]
10056409:	push   eax
1005640a:	call   0x10045143
1005640f:	add    esp,0x4
10056412:	ret    
10056413:	int3   
10056414:	int3   
10056415:	int3   
10056416:	int3   
10056417:	int3   
10056418:	int3   
10056419:	int3   
1005641a:	int3   
1005641b:	int3   
1005641c:	int3   
1005641d:	int3   
1005641e:	int3   
1005641f:	int3   
10056420:	mov    eax,DWORD PTR [esp+0x8]
10056424:	push   eax
10056425:	call   0x100437dc
1005642a:	pop    ecx
1005642b:	ret    
1005642c:	int3   
1005642d:	int3   
1005642e:	int3   
1005642f:	int3   
10056430:	sub    esp,0x3c
10056433:	push   ebx
10056434:	push   ebp
10056435:	push   esi
10056436:	push   edi
10056437:	mov    ecx,DWORD PTR [esp+0x50]
1005643b:	mov    eax,DWORD PTR [ecx+0x1c]
1005643e:	mov    edx,DWORD PTR [ecx+0x4]
10056441:	mov    ebx,DWORD PTR [eax+0x38]
10056444:	mov    ebp,DWORD PTR [ecx]
10056446:	sub    ebp,0x1
10056449:	lea    edx,[edx+ebp*1-0x5]
1005644d:	mov    DWORD PTR [esp+0x14],edx
10056451:	mov    esi,DWORD PTR [ecx+0xc]
10056454:	mov    ecx,DWORD PTR [ecx+0x10]
10056457:	mov    edx,ecx
10056459:	sub    edx,DWORD PTR [esp+0x54]
1005645d:	sub    esi,0x1
10056460:	add    edx,esi
10056462:	lea    ecx,[ecx+esi*1-0x101]
10056469:	mov    DWORD PTR [esp+0x38],edx
1005646d:	mov    edx,DWORD PTR [eax+0x28]
10056470:	mov    DWORD PTR [esp+0x2c],ecx
10056474:	mov    ecx,DWORD PTR [eax+0x2c]
10056477:	mov    DWORD PTR [esp+0x28],edx
1005647b:	mov    edx,DWORD PTR [eax+0x30]
1005647e:	mov    DWORD PTR [esp+0x3c],ecx
10056482:	mov    ecx,DWORD PTR [eax+0x34]
10056485:	mov    DWORD PTR [esp+0x44],edx
10056489:	mov    edx,DWORD PTR [eax+0x4c]
1005648c:	mov    DWORD PTR [esp+0x40],ecx
10056490:	mov    ecx,DWORD PTR [eax+0x50]
10056493:	mov    DWORD PTR [esp+0x20],edx
10056497:	mov    DWORD PTR [esp+0x24],ecx
1005649b:	mov    ecx,DWORD PTR [eax+0x54]
1005649e:	mov    edx,0x1
100564a3:	shl    edx,cl
100564a5:	mov    ecx,DWORD PTR [eax+0x58]
100564a8:	mov    DWORD PTR [esp+0x18],eax
100564ac:	mov    edi,DWORD PTR [eax+0x3c]
100564af:	mov    DWORD PTR [esp+0x54],0x1
100564b7:	mov    eax,DWORD PTR [esp+0x54]
100564bb:	shl    eax,cl
100564bd:	sub    edx,0x1
100564c0:	mov    DWORD PTR [esp+0x10],ebp
100564c4:	mov    DWORD PTR [esp+0x48],edx
100564c8:	sub    eax,0x1
100564cb:	mov    DWORD PTR [esp+0x30],eax
100564cf:	nop
100564d0:	cmp    edi,0xf
100564d3:	jae    0x100564f9
100564d5:	movzx  eax,BYTE PTR [ebp+0x1]
100564d9:	add    ebp,0x1
100564dc:	mov    ecx,edi
100564de:	shl    eax,cl
100564e0:	add    ebp,0x1
100564e3:	add    edi,0x8
100564e6:	mov    ecx,edi
100564e8:	add    ebx,eax
100564ea:	movzx  eax,BYTE PTR [ebp+0x0]
100564ee:	shl    eax,cl
100564f0:	mov    DWORD PTR [esp+0x10],ebp
100564f4:	add    ebx,eax
100564f6:	add    edi,0x8
100564f9:	mov    ecx,DWORD PTR [esp+0x20]
100564fd:	and    edx,ebx
100564ff:	mov    eax,DWORD PTR [ecx+edx*4]
10056502:	mov    edx,eax
10056504:	shr    edx,0x8
10056507:	movzx  ecx,dl
1005650a:	movzx  edx,al
1005650d:	shr    ebx,cl
1005650f:	sub    edi,ecx
10056511:	test   edx,edx
10056513:	je     0x10056558
10056515:	test   dl,0x10
10056518:	jne    0x10056565
1005651a:	test   dl,0x40
1005651d:	jne    0x1005686a
10056523:	mov    ecx,0x1
10056528:	mov    DWORD PTR [esp+0x54],ecx
1005652c:	mov    ecx,edx
1005652e:	mov    edx,DWORD PTR [esp+0x54]
10056532:	shl    edx,cl
10056534:	shr    eax,0x10
10056537:	sub    edx,0x1
1005653a:	and    edx,ebx
1005653c:	add    edx,eax
1005653e:	mov    eax,DWORD PTR [esp+0x20]
10056542:	mov    eax,DWORD PTR [eax+edx*4]
10056545:	mov    ecx,eax
10056547:	shr    ecx,0x8
1005654a:	movzx  ecx,cl
1005654d:	movzx  edx,al
10056550:	shr    ebx,cl
10056552:	sub    edi,ecx
10056554:	test   edx,edx
10056556:	jne    0x10056515
10056558:	add    esi,0x1
1005655b:	shr    eax,0x10
1005655e:	mov    BYTE PTR [esi],al
10056560:	jmp    0x100567c5
10056565:	shr    eax,0x10
10056568:	and    edx,0xf
1005656b:	mov    DWORD PTR [esp+0x54],eax
1005656f:	je     0x1005659f
10056571:	cmp    edi,edx
10056573:	jae    0x10056589
10056575:	movzx  eax,BYTE PTR [ebp+0x1]
10056579:	add    ebp,0x1
1005657c:	mov    ecx,edi
1005657e:	shl    eax,cl
10056580:	mov    DWORD PTR [esp+0x10],ebp
10056584:	add    ebx,eax
10056586:	add    edi,0x8
10056589:	mov    ecx,edx
1005658b:	mov    eax,0x1
10056590:	shl    eax,cl
10056592:	sub    eax,0x1
10056595:	and    eax,ebx
10056597:	add    DWORD PTR [esp+0x54],eax
1005659b:	shr    ebx,cl
1005659d:	sub    edi,edx
1005659f:	cmp    edi,0xf
100565a2:	jae    0x100565c8
100565a4:	movzx  edx,BYTE PTR [ebp+0x1]
100565a8:	add    ebp,0x1
100565ab:	movzx  eax,BYTE PTR [ebp+0x1]
100565af:	mov    ecx,edi
100565b1:	add    ebp,0x1
100565b4:	shl    edx,cl
100565b6:	add    edi,0x8
100565b9:	mov    ecx,edi
100565bb:	shl    eax,cl
100565bd:	add    ebx,edx
100565bf:	mov    DWORD PTR [esp+0x10],ebp
100565c3:	add    ebx,eax
100565c5:	add    edi,0x8
100565c8:	mov    ecx,DWORD PTR [esp+0x30]
100565cc:	mov    edx,DWORD PTR [esp+0x24]
100565d0:	and    ecx,ebx
100565d2:	mov    edx,DWORD PTR [edx+ecx*4]
100565d5:	mov    eax,edx
100565d7:	shr    eax,0x8
100565da:	movzx  ecx,al
100565dd:	movzx  eax,dl
100565e0:	shr    ebx,cl
100565e2:	sub    edi,ecx
100565e4:	test   al,0x10
100565e6:	mov    DWORD PTR [esp+0x1c],edx
100565ea:	jne    0x1005662b
100565ec:	lea    esp,[esp+0x0]
100565f0:	test   al,0x40
100565f2:	jne    0x1005685d
100565f8:	mov    ecx,eax
100565fa:	movzx  eax,WORD PTR [esp+0x1e]
100565ff:	mov    edx,0x1
10056604:	shl    edx,cl
10056606:	mov    ecx,DWORD PTR [esp+0x24]
1005660a:	sub    edx,0x1
1005660d:	and    edx,ebx
1005660f:	add    edx,eax
10056611:	mov    edx,DWORD PTR [ecx+edx*4]
10056614:	mov    eax,edx
10056616:	shr    eax,0x8
10056619:	movzx  ecx,al
1005661c:	movzx  eax,dl
1005661f:	shr    ebx,cl
10056621:	sub    edi,ecx
10056623:	test   al,0x10
10056625:	mov    DWORD PTR [esp+0x1c],edx
10056629:	je     0x100565f0
1005662b:	shr    edx,0x10
1005662e:	and    eax,0xf
10056631:	cmp    edi,eax
10056633:	mov    DWORD PTR [esp+0x1c],edx
10056637:	jae    0x10056665
10056639:	movzx  edx,BYTE PTR [ebp+0x1]
1005663d:	add    ebp,0x1
10056640:	mov    ecx,edi
10056642:	shl    edx,cl
10056644:	add    edi,0x8
10056647:	mov    DWORD PTR [esp+0x10],ebp
1005664b:	add    ebx,edx
1005664d:	cmp    edi,eax
1005664f:	jae    0x10056665
10056651:	movzx  edx,BYTE PTR [ebp+0x1]
10056655:	add    ebp,0x1
10056658:	mov    ecx,edi
1005665a:	shl    edx,cl
1005665c:	mov    DWORD PTR [esp+0x10],ebp
10056660:	add    ebx,edx
10056662:	add    edi,0x8
10056665:	mov    ecx,0x1
1005666a:	mov    edx,ecx
1005666c:	mov    ecx,eax
1005666e:	shl    edx,cl
10056670:	sub    edi,eax
10056672:	sub    edx,0x1
10056675:	and    edx,ebx
10056677:	mov    ecx,edx
10056679:	mov    edx,DWORD PTR [esp+0x1c]
1005667d:	add    edx,ecx
1005667f:	mov    ecx,eax
10056681:	mov    eax,esi
10056683:	sub    eax,DWORD PTR [esp+0x38]
10056687:	shr    ebx,cl
10056689:	cmp    edx,eax
1005668b:	mov    DWORD PTR [esp+0x1c],edx
1005668f:	jbe    0x100567e4
10056695:	mov    ebp,edx
10056697:	sub    ebp,eax
10056699:	cmp    ebp,DWORD PTR [esp+0x3c]
1005669d:	ja     0x10056842
100566a3:	mov    ecx,DWORD PTR [esp+0x40]
100566a7:	mov    eax,DWORD PTR [esp+0x44]
100566ab:	add    ecx,0xffffffff
100566ae:	test   eax,eax
100566b0:	mov    DWORD PTR [esp+0x34],ecx
100566b4:	jne    0x100566e2
100566b6:	mov    eax,DWORD PTR [esp+0x28]
100566ba:	sub    eax,ebp
100566bc:	add    ecx,eax
100566be:	cmp    ebp,DWORD PTR [esp+0x54]
100566c2:	jae    0x1005675a
100566c8:	sub    DWORD PTR [esp+0x54],ebp
100566cc:	lea    esp,[esp+0x0]
100566d0:	mov    al,BYTE PTR [ecx+0x1]
100566d3:	add    ecx,0x1
100566d6:	add    esi,0x1
100566d9:	sub    ebp,0x1
100566dc:	mov    BYTE PTR [esi],al
100566de:	jne    0x100566d0
100566e0:	jmp    0x10056756
100566e2:	cmp    eax,ebp
100566e4:	jae    0x10056738
100566e6:	mov    edx,eax
100566e8:	sub    edx,ebp
100566ea:	add    edx,DWORD PTR [esp+0x28]
100566ee:	sub    ebp,eax
100566f0:	add    ecx,edx
100566f2:	cmp    ebp,DWORD PTR [esp+0x54]
100566f6:	jae    0x1005675a
100566f8:	sub    DWORD PTR [esp+0x54],ebp
100566fc:	lea    esp,[esp+0x0]
10056700:	mov    dl,BYTE PTR [ecx+0x1]
10056703:	add    ecx,0x1
10056706:	add    esi,0x1
10056709:	sub    ebp,0x1
1005670c:	mov    BYTE PTR [esi],dl
1005670e:	jne    0x10056700
10056710:	cmp    eax,DWORD PTR [esp+0x54]
10056714:	mov    ecx,DWORD PTR [esp+0x34]
10056718:	jae    0x1005675a
1005671a:	sub    DWORD PTR [esp+0x54],eax
1005671e:	mov    ebp,eax
10056720:	mov    al,BYTE PTR [ecx+0x1]
10056723:	add    ecx,0x1
10056726:	add    esi,0x1
10056729:	sub    ebp,0x1
1005672c:	mov    BYTE PTR [esi],al
1005672e:	jne    0x10056720
10056730:	mov    ecx,esi
10056732:	sub    ecx,DWORD PTR [esp+0x1c]
10056736:	jmp    0x1005675a
10056738:	sub    eax,ebp
1005673a:	add    ecx,eax
1005673c:	cmp    ebp,DWORD PTR [esp+0x54]
10056740:	jae    0x1005675a
10056742:	sub    DWORD PTR [esp+0x54],ebp
10056746:	mov    al,BYTE PTR [ecx+0x1]
10056749:	add    ecx,0x1
1005674c:	add    esi,0x1
1005674f:	sub    ebp,0x1
10056752:	mov    BYTE PTR [esi],al
10056754:	jne    0x10056746
10056756:	mov    ecx,esi
10056758:	sub    ecx,edx
1005675a:	mov    eax,DWORD PTR [esp+0x54]
1005675e:	cmp    eax,0x2
10056761:	jbe    0x100567a1
10056763:	lea    edx,[eax-0x3]
10056766:	mov    eax,0xaaaaaaab
1005676b:	mul    edx
1005676d:	mov    ebp,edx
1005676f:	shr    ebp,1
10056771:	add    ebp,0x1
10056774:	movzx  eax,BYTE PTR [ecx+0x1]
10056778:	sub    DWORD PTR [esp+0x54],0x3
1005677d:	add    ecx,0x1
10056780:	add    esi,0x1
10056783:	mov    BYTE PTR [esi],al
10056785:	mov    dl,BYTE PTR [ecx+0x1]
10056788:	add    ecx,0x1
1005678b:	add    esi,0x1
1005678e:	mov    BYTE PTR [esi],dl
10056790:	movzx  eax,BYTE PTR [ecx+0x1]
10056794:	add    ecx,0x1
10056797:	add    esi,0x1
1005679a:	sub    ebp,0x1
1005679d:	mov    BYTE PTR [esi],al
1005679f:	jne    0x10056774
100567a1:	mov    ebp,DWORD PTR [esp+0x54]
100567a5:	test   ebp,ebp
100567a7:	je     0x100567c1
100567a9:	mov    dl,BYTE PTR [ecx+0x1]
100567ac:	add    ecx,0x1
100567af:	add    esi,0x1
100567b2:	cmp    ebp,0x1
100567b5:	mov    BYTE PTR [esi],dl
100567b7:	jbe    0x100567c1
100567b9:	mov    al,BYTE PTR [ecx+0x1]
100567bc:	add    esi,0x1
100567bf:	mov    BYTE PTR [esi],al
100567c1:	mov    ebp,DWORD PTR [esp+0x10]
100567c5:	mov    edx,DWORD PTR [esp+0x14]
100567c9:	cmp    ebp,edx
100567cb:	jae    0x10056894
100567d1:	cmp    esi,DWORD PTR [esp+0x2c]
100567d5:	jae    0x10056894
100567db:	mov    edx,DWORD PTR [esp+0x48]
100567df:	jmp    0x100564d0
100567e4:	mov    eax,esi
100567e6:	sub    eax,edx
100567e8:	jmp    0x100567f0
100567ea:	lea    ebx,[ebx+0x0]
100567f0:	movzx  ecx,BYTE PTR [eax+0x1]
100567f4:	add    eax,0x1
100567f7:	mov    BYTE PTR [esi+0x1],cl
100567fa:	mov    dl,BYTE PTR [eax+0x1]
100567fd:	add    esi,0x1
10056800:	add    eax,0x1
10056803:	add    esi,0x1
10056806:	mov    BYTE PTR [esi],dl
10056808:	movzx  ecx,BYTE PTR [eax+0x1]
1005680c:	add    eax,0x1
1005680f:	add    esi,0x1
10056812:	mov    BYTE PTR [esi],cl
10056814:	mov    ecx,DWORD PTR [esp+0x54]
10056818:	sub    ecx,0x3
1005681b:	cmp    ecx,0x2
1005681e:	mov    DWORD PTR [esp+0x54],ecx
10056822:	ja     0x100567f0
10056824:	test   ecx,ecx
10056826:	je     0x100567c5
10056828:	mov    dl,BYTE PTR [eax+0x1]
1005682b:	add    eax,0x1
1005682e:	add    esi,0x1
10056831:	cmp    ecx,0x1
10056834:	mov    BYTE PTR [esi],dl
10056836:	jbe    0x100567c5
10056838:	mov    al,BYTE PTR [eax+0x1]
1005683b:	add    esi,0x1
1005683e:	mov    BYTE PTR [esi],al
10056840:	jmp    0x100567c5
10056842:	mov    ecx,DWORD PTR [esp+0x50]
10056846:	mov    edx,DWORD PTR [esp+0x18]
1005684a:	mov    ebp,DWORD PTR [esp+0x10]
1005684e:	mov    DWORD PTR [ecx+0x18],0x100698c8
10056855:	mov    DWORD PTR [edx],0x1b
1005685b:	jmp    0x10056890
1005685d:	mov    eax,DWORD PTR [esp+0x50]
10056861:	mov    DWORD PTR [eax+0x18],0x100698e8
10056868:	jmp    0x10056886
1005686a:	test   dl,0x20
1005686d:	je     0x1005687b
1005686f:	mov    edx,DWORD PTR [esp+0x18]
10056873:	mov    DWORD PTR [edx],0xb
10056879:	jmp    0x10056890
1005687b:	mov    eax,DWORD PTR [esp+0x50]
1005687f:	mov    DWORD PTR [eax+0x18],0x10069900
10056886:	mov    ecx,DWORD PTR [esp+0x18]
1005688a:	mov    DWORD PTR [ecx],0x1b
10056890:	mov    edx,DWORD PTR [esp+0x14]
10056894:	mov    eax,edi
10056896:	shr    eax,0x3
10056899:	sub    ebp,eax
1005689b:	add    eax,eax
1005689d:	add    eax,eax
1005689f:	add    eax,eax
100568a1:	sub    edi,eax
100568a3:	mov    ecx,edi
100568a5:	mov    eax,0x1
100568aa:	shl    eax,cl
100568ac:	mov    ecx,DWORD PTR [esp+0x50]
100568b0:	sub    edx,ebp
100568b2:	add    edx,0x5
100568b5:	sub    eax,0x1
100568b8:	and    ebx,eax
100568ba:	lea    eax,[ebp+0x1]
100568bd:	mov    DWORD PTR [ecx],eax
100568bf:	lea    eax,[esi+0x1]
100568c2:	mov    DWORD PTR [ecx+0xc],eax
100568c5:	mov    eax,DWORD PTR [esp+0x2c]
100568c9:	sub    eax,esi
100568cb:	add    eax,0x101
100568d0:	mov    DWORD PTR [ecx+0x10],eax
100568d3:	mov    eax,DWORD PTR [esp+0x18]
100568d7:	mov    DWORD PTR [ecx+0x4],edx
100568da:	mov    DWORD PTR [eax+0x3c],edi
100568dd:	pop    edi
100568de:	pop    esi
100568df:	pop    ebp
100568e0:	mov    DWORD PTR [eax+0x38],ebx
100568e3:	pop    ebx
100568e4:	add    esp,0x3c
100568e7:	ret    
100568e8:	int3   
100568e9:	int3   
100568ea:	int3   
100568eb:	int3   
100568ec:	int3   
100568ed:	int3   
100568ee:	int3   
100568ef:	int3   
100568f0:	sub    esp,0x8c
100568f6:	mov    eax,ds:0x100801ac
100568fb:	xor    eax,esp
100568fd:	mov    DWORD PTR [esp+0x88],eax
10056904:	mov    eax,DWORD PTR [esp+0xa4]
1005690b:	mov    edx,DWORD PTR [esp+0xa0]
10056912:	push   ebx
10056913:	mov    ebx,DWORD PTR [esp+0xa0]
1005691a:	push   ebp
1005691b:	mov    ebp,DWORD PTR [esp+0x9c]
10056922:	push   esi
10056923:	mov    esi,DWORD PTR [esp+0xa4]
1005692a:	mov    DWORD PTR [esp+0x18],eax
1005692e:	xor    eax,eax
10056930:	test   esi,esi
10056932:	mov    DWORD PTR [esp+0x50],ebp
10056936:	mov    DWORD PTR [esp+0x38],ebx
1005693a:	mov    DWORD PTR [esp+0x48],edx
1005693e:	mov    DWORD PTR [esp+0x54],eax
10056942:	mov    DWORD PTR [esp+0x58],eax
10056946:	mov    DWORD PTR [esp+0x5c],eax
1005694a:	mov    DWORD PTR [esp+0x60],eax
1005694e:	mov    DWORD PTR [esp+0x64],eax
10056952:	mov    DWORD PTR [esp+0x68],eax
10056956:	mov    DWORD PTR [esp+0x6c],eax
1005695a:	mov    DWORD PTR [esp+0x70],eax
1005695e:	jbe    0x10056976
10056960:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
10056965:	add    WORD PTR [esp+ecx*2+0x54],0x1
1005696b:	lea    ecx,[esp+ecx*2+0x54]
1005696f:	add    eax,0x1
10056972:	cmp    eax,esi
10056974:	jb     0x10056960
10056976:	mov    eax,DWORD PTR [edx]
10056978:	mov    DWORD PTR [esp+0x10],eax
1005697c:	mov    ecx,0xf
10056981:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10056987:	jne    0x10056991
10056989:	sub    ecx,0x1
1005698c:	cmp    ecx,0x1
1005698f:	jae    0x10056981
10056991:	cmp    eax,ecx
10056993:	mov    DWORD PTR [esp+0x1c],ecx
10056997:	jbe    0x1005699f
10056999:	mov    DWORD PTR [esp+0x10],ecx
1005699d:	mov    eax,ecx
1005699f:	test   ecx,ecx
100569a1:	jne    0x100569e4
100569a3:	mov    WORD PTR [esp+0xe],cx
100569a8:	mov    ecx,DWORD PTR [ebx]
100569aa:	mov    BYTE PTR [esp+0xc],0x40
100569af:	mov    BYTE PTR [esp+0xd],0x1
100569b4:	mov    eax,DWORD PTR [esp+0xc]
100569b8:	mov    DWORD PTR [ecx],eax
100569ba:	add    DWORD PTR [ebx],0x4
100569bd:	mov    ecx,DWORD PTR [ebx]
100569bf:	pop    esi
100569c0:	mov    DWORD PTR [ecx],eax
100569c2:	add    DWORD PTR [ebx],0x4
100569c5:	pop    ebp
100569c6:	mov    DWORD PTR [edx],0x1
100569cc:	xor    eax,eax
100569ce:	pop    ebx
100569cf:	mov    ecx,DWORD PTR [esp+0x88]
100569d6:	xor    ecx,esp
100569d8:	call   0x10043615
100569dd:	add    esp,0x8c
100569e3:	ret    
100569e4:	mov    esi,0x1
100569e9:	lea    esp,[esp+0x0]
100569f0:	cmp    WORD PTR [esp+esi*2+0x54],0x0
100569f6:	jne    0x10056a34
100569f8:	cmp    WORD PTR [esp+esi*2+0x56],0x0
100569fe:	jne    0x10056a22
10056a00:	cmp    WORD PTR [esp+esi*2+0x58],0x0
10056a06:	jne    0x10056a27
10056a08:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
10056a0e:	jne    0x10056a2c
10056a10:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
10056a16:	jne    0x10056a31
10056a18:	add    esi,0x5
10056a1b:	cmp    esi,0xf
10056a1e:	jbe    0x100569f0
10056a20:	jmp    0x10056a34
10056a22:	add    esi,0x1
10056a25:	jmp    0x10056a34
10056a27:	add    esi,0x2
10056a2a:	jmp    0x10056a34
10056a2c:	add    esi,0x3
10056a2f:	jmp    0x10056a34
10056a31:	add    esi,0x4
10056a34:	cmp    eax,esi
10056a36:	jae    0x10056a3c
10056a38:	mov    DWORD PTR [esp+0x10],esi
10056a3c:	mov    edx,0x1
10056a41:	mov    eax,edx
10056a43:	push   edi
10056a44:	movzx  edi,WORD PTR [esp+eax*2+0x58]
10056a49:	add    edx,edx
10056a4b:	sub    edx,edi
10056a4d:	js     0x10056a6b
10056a4f:	add    eax,0x1
10056a52:	cmp    eax,0xf
10056a55:	jbe    0x10056a44
10056a57:	test   edx,edx
10056a59:	mov    edi,DWORD PTR [esp+0xa0]
10056a60:	jle    0x10056a73
10056a62:	test   edi,edi
10056a64:	je     0x10056a6b
10056a66:	cmp    ecx,0x1
10056a69:	je     0x10056a73
10056a6b:	or     eax,0xffffffff
10056a6e:	jmp    0x10056dc5
10056a73:	mov    WORD PTR [esp+0x7a],0x0
10056a7a:	mov    eax,0x2
10056a7f:	nop
10056a80:	mov    cx,WORD PTR [esp+eax*1+0x78]
10056a85:	add    cx,WORD PTR [esp+eax*1+0x58]
10056a8a:	add    eax,0x2
10056a8d:	cmp    eax,0x1e
10056a90:	mov    WORD PTR [esp+eax*1+0x78],cx
10056a95:	jb     0x10056a80
10056a97:	mov    ecx,DWORD PTR [esp+0x1c]
10056a9b:	xor    eax,eax
10056a9d:	cmp    DWORD PTR [esp+0xa8],eax
10056aa4:	jbe    0x10056ad7
10056aa6:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
10056aac:	je     0x10056acb
10056aae:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10056ab3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10056ab8:	mov    WORD PTR [ecx+edx*2],ax
10056abc:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10056ac1:	add    WORD PTR [esp+edx*2+0x78],0x1
10056ac7:	lea    edx,[esp+edx*2+0x78]
10056acb:	add    eax,0x1
10056ace:	cmp    eax,DWORD PTR [esp+0xa8]
10056ad5:	jb     0x10056aa6
10056ad7:	mov    eax,edi
10056ad9:	sub    eax,0x0
10056adc:	mov    edx,0xffffffff
10056ae1:	je     0x10056b24
10056ae3:	sub    eax,0x1
10056ae6:	je     0x10056afe
10056ae8:	mov    DWORD PTR [esp+0x2c],0x1006c5e8
10056af0:	mov    DWORD PTR [esp+0x38],0x1006c628
10056af8:	mov    DWORD PTR [esp+0x30],edx
10056afc:	jmp    0x10056b34
10056afe:	mov    eax,0x1006c568
10056b03:	sub    eax,0x202
10056b08:	mov    DWORD PTR [esp+0x2c],eax
10056b0c:	mov    eax,0x1006c5a8
10056b11:	sub    eax,0x202
10056b16:	mov    DWORD PTR [esp+0x38],eax
10056b1a:	mov    DWORD PTR [esp+0x30],0x100
10056b22:	jmp    0x10056b34
10056b24:	mov    DWORD PTR [esp+0x38],ecx
10056b28:	mov    DWORD PTR [esp+0x2c],ecx
10056b2c:	mov    DWORD PTR [esp+0x30],0x13
10056b34:	mov    eax,DWORD PTR [ebx]
10056b36:	mov    ecx,DWORD PTR [esp+0x14]
10056b3a:	mov    DWORD PTR [esp+0x24],eax
10056b3e:	mov    eax,0x1
10056b43:	shl    eax,cl
10056b45:	xor    ebp,ebp
10056b47:	xor    ebx,ebx
10056b49:	cmp    edi,0x1
10056b4c:	lea    ecx,[eax-0x1]
10056b4f:	mov    DWORD PTR [esp+0x18],esi
10056b53:	mov    DWORD PTR [esp+0x34],edx
10056b57:	mov    DWORD PTR [esp+0x44],eax
10056b5b:	mov    DWORD PTR [esp+0x28],eax
10056b5f:	mov    DWORD PTR [esp+0x40],ecx
10056b63:	jne    0x10056b70
10056b65:	cmp    eax,0x5b0
10056b6a:	jae    0x10056dc0
10056b70:	mov    edx,DWORD PTR [esp+0x1c]
10056b74:	mov    DWORD PTR [esp+0x1c],edx
10056b78:	jmp    0x10056b80
10056b7a:	lea    ebx,[ebx+0x0]
10056b80:	mov    al,BYTE PTR [esp+0x18]
10056b84:	mov    esi,DWORD PTR [esp+0x1c]
10056b88:	mov    edx,DWORD PTR [esp+0x30]
10056b8c:	sub    al,bl
10056b8e:	mov    BYTE PTR [esp+0x11],al
10056b92:	movzx  eax,WORD PTR [esi]
10056b95:	movzx  ecx,ax
10056b98:	cmp    ecx,edx
10056b9a:	jge    0x10056ba8
10056b9c:	mov    BYTE PTR [esp+0x10],0x0
10056ba1:	mov    WORD PTR [esp+0x12],ax
10056ba6:	jmp    0x10056bd5
10056ba8:	jle    0x10056bc9
10056baa:	movzx  eax,WORD PTR [esi]
10056bad:	mov    ecx,DWORD PTR [esp+0x38]
10056bb1:	add    eax,eax
10056bb3:	mov    dl,BYTE PTR [eax+ecx*1]
10056bb6:	mov    ecx,DWORD PTR [esp+0x2c]
10056bba:	mov    BYTE PTR [esp+0x10],dl
10056bbe:	mov    dx,WORD PTR [eax+ecx*1]
10056bc2:	mov    WORD PTR [esp+0x12],dx
10056bc7:	jmp    0x10056bd5
10056bc9:	mov    BYTE PTR [esp+0x10],0x60
10056bce:	mov    WORD PTR [esp+0x12],0x0
10056bd5:	mov    ecx,DWORD PTR [esp+0x18]
10056bd9:	mov    eax,DWORD PTR [esp+0x44]
10056bdd:	sub    ecx,ebx
10056bdf:	mov    edx,0x1
10056be4:	shl    edx,cl
10056be6:	mov    ecx,ebx
10056be8:	mov    edi,ebp
10056bea:	shr    edi,cl
10056bec:	mov    ecx,DWORD PTR [esp+0x24]
10056bf0:	mov    DWORD PTR [esp+0x50],eax
10056bf4:	lea    esi,[edx*4+0x0]
10056bfb:	add    edi,eax
10056bfd:	lea    ecx,[ecx+edi*4]
10056c00:	mov    edi,DWORD PTR [esp+0x10]
10056c04:	sub    eax,edx
10056c06:	sub    ecx,esi
10056c08:	test   eax,eax
10056c0a:	mov    DWORD PTR [ecx],edi
10056c0c:	jne    0x10056c04
10056c0e:	mov    edx,DWORD PTR [esp+0x18]
10056c12:	lea    ecx,[edx-0x1]
10056c15:	mov    eax,0x1
10056c1a:	shl    eax,cl
10056c1c:	test   ebp,eax
10056c1e:	je     0x10056c26
10056c20:	shr    eax,1
10056c22:	test   ebp,eax
10056c24:	jne    0x10056c20
10056c26:	test   eax,eax
10056c28:	je     0x10056c35
10056c2a:	lea    ecx,[eax-0x1]
10056c2d:	and    ecx,ebp
10056c2f:	add    ecx,eax
10056c31:	mov    ebp,ecx
10056c33:	jmp    0x10056c37
10056c35:	xor    ebp,ebp
10056c37:	add    WORD PTR [esp+edx*2+0x58],0xffff
10056c3e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10056c43:	add    DWORD PTR [esp+0x1c],0x2
10056c48:	test   ax,ax
10056c4b:	jne    0x10056c6a
10056c4d:	cmp    edx,DWORD PTR [esp+0x20]
10056c51:	je     0x10056d33
10056c57:	mov    edx,DWORD PTR [esp+0x1c]
10056c5b:	movzx  eax,WORD PTR [edx]
10056c5e:	mov    ecx,DWORD PTR [esp+0x54]
10056c62:	movzx  edx,WORD PTR [ecx+eax*2]
10056c66:	mov    DWORD PTR [esp+0x18],edx
10056c6a:	cmp    edx,DWORD PTR [esp+0x14]
10056c6e:	jbe    0x10056b80
10056c74:	mov    esi,DWORD PTR [esp+0x40]
10056c78:	and    esi,ebp
10056c7a:	cmp    esi,DWORD PTR [esp+0x34]
10056c7e:	mov    DWORD PTR [esp+0x48],esi
10056c82:	je     0x10056b80
10056c88:	test   ebx,ebx
10056c8a:	jne    0x10056c90
10056c8c:	mov    ebx,DWORD PTR [esp+0x14]
10056c90:	mov    eax,DWORD PTR [esp+0x24]
10056c94:	mov    ecx,DWORD PTR [esp+0x50]
10056c98:	lea    edx,[eax+ecx*4]
10056c9b:	mov    ecx,DWORD PTR [esp+0x18]
10056c9f:	sub    ecx,ebx
10056ca1:	mov    DWORD PTR [esp+0x24],edx
10056ca5:	mov    eax,0x1
10056caa:	lea    edx,[ebx+ecx*1]
10056cad:	shl    eax,cl
10056caf:	cmp    edx,DWORD PTR [esp+0x20]
10056cb3:	jae    0x10056cde
10056cb5:	lea    esi,[esp+edx*2+0x58]
10056cb9:	lea    esp,[esp+0x0]
10056cc0:	movzx  edi,WORD PTR [esi]
10056cc3:	sub    eax,edi
10056cc5:	test   eax,eax
10056cc7:	jle    0x10056cda
10056cc9:	add    edx,0x1
10056ccc:	add    ecx,0x1
10056ccf:	add    esi,0x2
10056cd2:	add    eax,eax
10056cd4:	cmp    edx,DWORD PTR [esp+0x20]
10056cd8:	jb     0x10056cc0
10056cda:	mov    esi,DWORD PTR [esp+0x48]
10056cde:	mov    eax,0x1
10056ce3:	shl    eax,cl
10056ce5:	add    DWORD PTR [esp+0x28],eax
10056ce9:	cmp    DWORD PTR [esp+0xa0],0x1
10056cf1:	mov    DWORD PTR [esp+0x44],eax
10056cf5:	jne    0x10056d05
10056cf7:	cmp    DWORD PTR [esp+0x28],0x5b0
10056cff:	jae    0x10056dc0
10056d05:	mov    edx,esi
10056d07:	mov    esi,DWORD PTR [esp+0x3c]
10056d0b:	mov    eax,DWORD PTR [esi]
10056d0d:	mov    BYTE PTR [eax+edx*4],cl
10056d10:	mov    ecx,DWORD PTR [esi]
10056d12:	mov    al,BYTE PTR [esp+0x14]
10056d16:	mov    BYTE PTR [ecx+edx*4+0x1],al
10056d1a:	mov    eax,DWORD PTR [esi]
10056d1c:	mov    ecx,DWORD PTR [esp+0x24]
10056d20:	sub    ecx,eax
10056d22:	sar    ecx,0x2
10056d25:	mov    DWORD PTR [esp+0x34],edx
10056d29:	mov    WORD PTR [eax+edx*4+0x2],cx
10056d2e:	jmp    0x10056b80
10056d33:	mov    edi,DWORD PTR [esp+0x3c]
10056d37:	mov    al,dl
10056d39:	sub    al,bl
10056d3b:	test   ebp,ebp
10056d3d:	mov    BYTE PTR [esp+0x10],0x40
10056d42:	mov    BYTE PTR [esp+0x11],al
10056d46:	mov    WORD PTR [esp+0x12],0x0
10056d4d:	je     0x10056da5
10056d4f:	mov    esi,DWORD PTR [esp+0x24]
10056d53:	test   ebx,ebx
10056d55:	je     0x10056d75
10056d57:	mov    ecx,DWORD PTR [esp+0x40]
10056d5b:	and    ecx,ebp
10056d5d:	cmp    ecx,DWORD PTR [esp+0x34]
10056d61:	je     0x10056d75
10056d63:	mov    eax,DWORD PTR [esp+0x14]
10056d67:	mov    esi,DWORD PTR [edi]
10056d69:	xor    ebx,ebx
10056d6b:	mov    DWORD PTR [esp+0x18],eax
10056d6f:	mov    BYTE PTR [esp+0x11],al
10056d73:	mov    edx,eax
10056d75:	mov    ecx,ebx
10056d77:	mov    eax,ebp
10056d79:	shr    eax,cl
10056d7b:	mov    ecx,DWORD PTR [esp+0x10]
10056d7f:	mov    DWORD PTR [esi+eax*4],ecx
10056d82:	lea    ecx,[edx-0x1]
10056d85:	mov    eax,0x1
10056d8a:	shl    eax,cl
10056d8c:	test   ebp,eax
10056d8e:	je     0x10056d96
10056d90:	shr    eax,1
10056d92:	test   ebp,eax
10056d94:	jne    0x10056d90
10056d96:	test   eax,eax
10056d98:	je     0x10056da5
10056d9a:	lea    ecx,[eax-0x1]
10056d9d:	and    ecx,ebp
10056d9f:	add    ecx,eax
10056da1:	mov    ebp,ecx
10056da3:	jne    0x10056d53
10056da5:	mov    edx,DWORD PTR [esp+0x28]
10056da9:	mov    ecx,DWORD PTR [esp+0x4c]
10056dad:	lea    eax,[edx*4+0x0]
10056db4:	add    DWORD PTR [edi],eax
10056db6:	mov    edx,DWORD PTR [esp+0x14]
10056dba:	mov    DWORD PTR [ecx],edx
10056dbc:	xor    eax,eax
10056dbe:	jmp    0x10056dc5
10056dc0:	mov    eax,0x1
10056dc5:	mov    ecx,DWORD PTR [esp+0x98]
10056dcc:	pop    edi
10056dcd:	pop    esi
10056dce:	pop    ebp
10056dcf:	pop    ebx
10056dd0:	xor    ecx,esp
10056dd2:	call   0x10043615
10056dd7:	add    esp,0x8c
10056ddd:	ret    
10056dde:	jmp    DWORD PTR ds:0x1006740c
10056de4:	jmp    DWORD PTR ds:0x1006722c
10056dea:	jmp    DWORD PTR ds:0x10067278
10056df0:	cmp    BYTE PTR [ecx+0x8],0x0
10056df4:	mov    DWORD PTR [ecx],0x1006c8e8
10056dfa:	je     0x10056e0a
10056dfc:	mov    ecx,DWORD PTR [ecx+0x4]
10056dff:	test   ecx,ecx
10056e01:	je     0x10056e0a
10056e03:	push   ecx
10056e04:	call   DWORD PTR ds:0x100671d0
10056e0a:	ret    
10056e0b:	push   DWORD PTR [esp+0x4]
10056e0f:	push   0x0
10056e11:	push   DWORD PTR [ecx+0x4]
10056e14:	call   DWORD PTR ds:0x10067190
10056e1a:	ret    0x4
10056e1d:	cmp    DWORD PTR [esp+0x4],0x0
10056e22:	je     0x10056e33
10056e24:	push   DWORD PTR [esp+0x4]
10056e28:	push   0x0
10056e2a:	push   DWORD PTR [ecx+0x4]
10056e2d:	call   DWORD PTR ds:0x10067194
10056e33:	ret    0x4
10056e36:	push   ebp
10056e37:	mov    ebp,esp
10056e39:	xor    eax,eax
10056e3b:	cmp    DWORD PTR [ebp+0x8],eax
10056e3e:	jne    0x10056e49
10056e40:	push   DWORD PTR [ebp+0xc]
10056e43:	mov    eax,DWORD PTR [ecx]
10056e45:	call   DWORD PTR [eax]
10056e47:	jmp    0x10056e6a
10056e49:	cmp    DWORD PTR [ebp+0xc],eax
10056e4c:	jne    0x10056e5a
10056e4e:	push   DWORD PTR [ebp+0x8]
10056e51:	mov    eax,DWORD PTR [ecx]
10056e53:	call   DWORD PTR [eax+0x4]
10056e56:	xor    eax,eax
10056e58:	jmp    0x10056e6a
10056e5a:	push   DWORD PTR [ebp+0xc]
10056e5d:	push   DWORD PTR [ebp+0x8]
10056e60:	push   eax
10056e61:	push   DWORD PTR [ecx+0x4]
10056e64:	call   DWORD PTR ds:0x100671a8
10056e6a:	pop    ebp
10056e6b:	ret    0x8
10056e6e:	push   DWORD PTR [esp+0x4]
10056e72:	push   0x0
10056e74:	push   DWORD PTR [ecx+0x4]
10056e77:	call   DWORD PTR ds:0x100671c8
10056e7d:	ret    0x4
10056e80:	push   esi
10056e81:	mov    esi,ecx
10056e83:	call   0x10056df0
10056e88:	test   BYTE PTR [esp+0x8],0x1
10056e8d:	je     0x10056e96
10056e8f:	push   esi
10056e90:	call   0x10042fe2
10056e95:	pop    ecx
10056e96:	mov    eax,esi
10056e98:	pop    esi
10056e99:	ret    0x4
10056e9c:	mov    eax,ecx
10056e9e:	mov    ecx,DWORD PTR [esp+0x4]
10056ea2:	mov    DWORD PTR [eax+0x4],ecx
10056ea5:	mov    DWORD PTR [eax],0x1006c8fc
10056eab:	xor    ecx,ecx
10056ead:	mov    DWORD PTR [eax+0x14],0x2
10056eb4:	mov    DWORD PTR [eax+0xc],ecx
10056eb7:	mov    DWORD PTR [eax+0x10],ecx
10056eba:	mov    WORD PTR [eax+0x18],cx
10056ebe:	mov    WORD PTR [eax+0x1a],cx
10056ec2:	mov    DWORD PTR [eax+0x8],eax
10056ec5:	ret    0x4
10056ec8:	mov    ecx,DWORD PTR [ecx+0x4]
10056ecb:	mov    eax,DWORD PTR [ecx]
10056ecd:	jmp    DWORD PTR [eax+0x4]
10056ed0:	xor    edx,edx
10056ed2:	lea    eax,[ecx+0x14]
10056ed5:	inc    edx
10056ed6:	lock xadd DWORD PTR [eax],edx
10056eda:	lea    eax,[ecx+0x8]
10056edd:	ret    
10056ede:	mov    eax,ecx
10056ee0:	ret    
10056ee1:	test   BYTE PTR [esp+0x4],0x1
10056ee6:	push   esi
10056ee7:	mov    esi,ecx
10056ee9:	mov    DWORD PTR [esi],0x1006c8fc
10056eef:	je     0x10056ef8
10056ef1:	push   esi
10056ef2:	call   0x10042fe2
10056ef7:	pop    ecx
10056ef8:	mov    eax,esi
10056efa:	pop    esi
10056efb:	ret    0x4
10056efe:	mov    eax,DWORD PTR [esp+0x8]
10056f02:	mov    ecx,DWORD PTR [esp+0xc]
10056f06:	or     edx,0xffffffff
10056f09:	sub    edx,eax
10056f0b:	cmp    edx,ecx
10056f0d:	jae    0x10056f15
10056f0f:	mov    eax,0x80070057
10056f14:	ret    
10056f15:	add    eax,ecx
10056f17:	mov    ecx,DWORD PTR [esp+0x4]
10056f1b:	mov    DWORD PTR [ecx],eax
10056f1d:	xor    eax,eax
10056f1f:	ret    
10056f20:	push   ebp
10056f21:	mov    ebp,esp
10056f23:	push   esi
10056f24:	mov    esi,DWORD PTR [ebp+0x8]
10056f27:	push   edi
10056f28:	push   DWORD PTR [ebp+0xc]
10056f2b:	add    esi,0x8
10056f2e:	and    esi,0xfffffff8
10056f31:	lea    eax,[ebp+0x8]
10056f34:	push   esi
10056f35:	push   eax
10056f36:	mov    edi,ecx
10056f38:	call   0x1001473a
10056f3d:	add    esp,0xc
10056f40:	test   eax,eax
10056f42:	jl     0x10056f7a
10056f44:	push   DWORD PTR [ebp+0x8]
10056f47:	lea    eax,[ebp+0x8]
10056f4a:	push   0x10
10056f4c:	push   eax
10056f4d:	call   0x10056efe
10056f52:	add    esp,0xc
10056f55:	test   eax,eax
10056f57:	jl     0x10056f7a
10056f59:	mov    ecx,DWORD PTR [edi+0x4]
10056f5c:	push   DWORD PTR [ebp+0x8]
10056f5f:	mov    eax,DWORD PTR [ecx]
10056f61:	call   DWORD PTR [eax]
10056f63:	test   eax,eax
10056f65:	je     0x10056f7a
10056f67:	dec    esi
10056f68:	and    DWORD PTR [eax+0x4],0x0
10056f6c:	mov    DWORD PTR [eax],edi
10056f6e:	mov    DWORD PTR [eax+0xc],0x1
10056f75:	mov    DWORD PTR [eax+0x8],esi
10056f78:	jmp    0x10056f7c
10056f7a:	xor    eax,eax
10056f7c:	pop    edi
10056f7d:	pop    esi
10056f7e:	pop    ebp
10056f7f:	ret    0x8
10056f82:	push   ebp
10056f83:	mov    ebp,esp
10056f85:	push   esi
10056f86:	mov    esi,DWORD PTR [ebp+0xc]
10056f89:	push   edi
10056f8a:	push   DWORD PTR [ebp+0x10]
10056f8d:	add    esi,0x8
10056f90:	and    esi,0xfffffff8
10056f93:	lea    eax,[ebp+0xc]
10056f96:	push   esi
10056f97:	push   eax
10056f98:	mov    edi,ecx
10056f9a:	call   0x1001473a
10056f9f:	add    esp,0xc
10056fa2:	test   eax,eax
10056fa4:	jl     0x10056fd3
10056fa6:	push   DWORD PTR [ebp+0xc]
10056fa9:	lea    eax,[ebp+0xc]
10056fac:	push   0x10
10056fae:	push   eax
10056faf:	call   0x1000793f
10056fb4:	add    esp,0xc
10056fb7:	test   eax,eax
10056fb9:	jl     0x10056fd3
10056fbb:	push   DWORD PTR [ebp+0xc]
10056fbe:	mov    ecx,DWORD PTR [edi+0x4]
10056fc1:	push   DWORD PTR [ebp+0x8]
10056fc4:	mov    eax,DWORD PTR [ecx]
10056fc6:	call   DWORD PTR [eax+0x8]
10056fc9:	test   eax,eax
10056fcb:	je     0x10056fd3
10056fcd:	dec    esi
10056fce:	mov    DWORD PTR [eax+0x8],esi
10056fd1:	jmp    0x10056fd5
10056fd3:	xor    eax,eax
10056fd5:	pop    edi
10056fd6:	pop    esi
10056fd7:	pop    ebp
10056fd8:	ret    0xc
10056fdb:	push   ebp
10056fdc:	mov    ebp,esp
10056fde:	sub    esp,0xc
10056fe1:	mov    eax,ds:0x100801ac
10056fe6:	xor    eax,ebp
10056fe8:	mov    DWORD PTR [ebp-0x4],eax
10056feb:	push   esi
10056fec:	xor    esi,esi
10056fee:	call   DWORD PTR ds:0x10067074
10056ff4:	push   0x7
10056ff6:	lea    ecx,[ebp-0xc]
10056ff9:	push   ecx
10056ffa:	push   0x1004
10056fff:	push   eax
10057000:	call   DWORD PTR ds:0x10067248
10057006:	test   eax,eax
10057008:	je     0x10057029
1005700a:	mov    cl,BYTE PTR [ebp-0xc]
1005700d:	test   cl,cl
1005700f:	lea    eax,[ebp-0xc]
10057012:	je     0x10057029
10057014:	imul   esi,esi,0xa
10057017:	movsx  ecx,cl
1005701a:	inc    eax
1005701b:	lea    esi,[esi+ecx*1-0x30]
1005701f:	mov    cl,BYTE PTR [eax]
10057021:	test   cl,cl
10057023:	jne    0x10057014
10057025:	test   esi,esi
10057027:	jne    0x10057031
10057029:	call   DWORD PTR ds:0x100671e8
1005702f:	mov    esi,eax
10057031:	mov    ecx,DWORD PTR [ebp-0x4]
10057034:	mov    eax,esi
10057036:	xor    ecx,ebp
10057038:	pop    esi
10057039:	call   0x10043615
1005703e:	leave  
1005703f:	ret    
10057040:	push   0x3
10057042:	pop    eax
10057043:	ret    
10057044:	push   ebp
10057045:	mov    ebp,esp
10057047:	sub    esp,0x98
1005704d:	mov    eax,ds:0x100801ac
10057052:	xor    eax,ebp
10057054:	mov    DWORD PTR [ebp-0x4],eax
10057057:	lea    eax,[ebp-0x98]
1005705d:	push   eax
1005705e:	mov    DWORD PTR [ebp-0x98],0x94
10057068:	call   DWORD PTR ds:0x100671b0
1005706e:	cmp    DWORD PTR [ebp-0x88],0x2
10057075:	jne    0x10057085
10057077:	cmp    DWORD PTR [ebp-0x94],0x5
1005707e:	mov    eax,0x10057040
10057083:	jae    0x1005708a
10057085:	mov    eax,0x10056fdb
1005708a:	push   eax
1005708b:	push   0x10080ffc
10057090:	call   DWORD PTR ds:0x10067224
10057096:	call   DWORD PTR ds:0x10080ffc
1005709c:	mov    ecx,DWORD PTR [ebp-0x4]
1005709f:	xor    ecx,ebp
100570a1:	call   0x10043615
100570a6:	leave  
100570a7:	ret    
100570a8:	mov    eax,DWORD PTR [esp+0x4]
100570ac:	test   eax,eax
100570ae:	jne    0x100570b7
100570b0:	mov    eax,0x80070057
100570b5:	jmp    0x100570c8
100570b7:	cmp    DWORD PTR [eax],0x2c
100570ba:	jne    0x100570b0
100570bc:	and    DWORD PTR [eax+0x1c],0x0
100570c0:	lea    ecx,[eax+0x4]
100570c3:	call   0x100147b9
100570c8:	ret    0x4
100570cb:	push   esi
100570cc:	mov    esi,ecx
100570ce:	mov    eax,DWORD PTR [esi]
100570d0:	test   eax,eax
100570d2:	je     0x100570de
100570d4:	push   eax
100570d5:	call   0x100437dc
100570da:	and    DWORD PTR [esi],0x0
100570dd:	pop    ecx
100570de:	and    DWORD PTR [esi+0x4],0x0
100570e2:	and    DWORD PTR [esi+0x8],0x0
100570e6:	pop    esi
100570e7:	ret    
100570e8:	mov    eax,DWORD PTR [esp+0x4]
100570ec:	test   eax,eax
100570ee:	jl     0x100570fd
100570f0:	cmp    eax,DWORD PTR [ecx+0x4]
100570f3:	jge    0x100570fd
100570f5:	mov    ecx,DWORD PTR [ecx]
100570f7:	lea    eax,[ecx+eax*2]
100570fa:	ret    0x4
100570fd:	push   0x0
100570ff:	push   0x0
10057101:	push   0x1
10057103:	push   0xc000008c
10057108:	call   DWORD PTR ds:0x10067110
1005710e:	int3   
1005710f:	mov    eax,DWORD PTR [esp+0x4]
10057113:	test   eax,eax
10057115:	jl     0x10057124
10057117:	cmp    eax,DWORD PTR [ecx+0x4]
1005711a:	jge    0x10057124
1005711c:	mov    ecx,DWORD PTR [ecx]
1005711e:	lea    eax,[ecx+eax*4]
10057121:	ret    0x4
10057124:	push   0x0
10057126:	push   0x0
10057128:	push   0x1
1005712a:	push   0xc000008c
1005712f:	call   DWORD PTR ds:0x10067110
10057135:	int3   
10057136:	push   esi
10057137:	mov    esi,ecx
10057139:	lea    ecx,[esi+0x4]
1005713c:	call   0x100147a5
10057141:	xor    eax,eax
10057143:	mov    DWORD PTR [esi+0x20],eax
10057146:	mov    DWORD PTR [esi+0x24],eax
10057149:	mov    DWORD PTR [esi+0x28],eax
1005714c:	mov    eax,esi
1005714e:	pop    esi
1005714f:	ret    
10057150:	push   esi
10057151:	mov    esi,DWORD PTR [esp+0x8]
10057155:	test   esi,esi
10057157:	jne    0x10057160
10057159:	mov    eax,0x80070057
1005715e:	jmp    0x100571ac
10057160:	mov    eax,DWORD PTR [esi]
10057162:	test   eax,eax
10057164:	je     0x100571aa
10057166:	cmp    eax,0x2c
10057169:	jne    0x10057159
1005716b:	push   edi
1005716c:	xor    edi,edi
1005716e:	cmp    DWORD PTR [esi+0x24],edi
10057171:	jle    0x10057194
10057173:	push   ebx
10057174:	lea    ebx,[esi+0x20]
10057177:	push   edi
10057178:	mov    ecx,ebx
1005717a:	call   0x100570e8
1005717f:	movzx  eax,WORD PTR [eax]
10057182:	push   DWORD PTR [esp+0x14]
10057186:	push   eax
10057187:	call   DWORD PTR ds:0x10067368
1005718d:	inc    edi
1005718e:	cmp    edi,DWORD PTR [esi+0x24]
10057191:	jl     0x10057177
10057193:	pop    ebx
10057194:	lea    ecx,[esi+0x20]
10057197:	call   0x100570cb
1005719c:	lea    eax,[esi+0x4]
1005719f:	push   eax
100571a0:	call   DWORD PTR ds:0x10067120
100571a6:	and    DWORD PTR [esi],0x0
100571a9:	pop    edi
100571aa:	xor    eax,eax
100571ac:	pop    esi
100571ad:	ret    0x8
100571b0:	push   esi
100571b1:	mov    esi,ecx
100571b3:	lea    ecx,[esi+0x18]
100571b6:	call   0x100147a5
100571bb:	xor    eax,eax
100571bd:	mov    DWORD PTR [esi+0x30],eax
100571c0:	mov    DWORD PTR [esi+0x34],eax
100571c3:	mov    DWORD PTR [esi+0x38],eax
100571c6:	mov    eax,esi
100571c8:	pop    esi
100571c9:	ret    
100571ca:	push   esi
100571cb:	mov    esi,ecx
100571cd:	lea    eax,[esi+0x18]
100571d0:	push   eax
100571d1:	call   DWORD PTR ds:0x10067120
100571d7:	lea    ecx,[esi+0x30]
100571da:	pop    esi
100571db:	jmp    0x100570cb
100571e0:	push   ebp
100571e1:	mov    ebp,esp
100571e3:	push   ecx
100571e4:	push   ecx
100571e5:	push   esi
100571e6:	mov    esi,ecx
100571e8:	lea    eax,[esi+0x18]
100571eb:	push   eax
100571ec:	mov    DWORD PTR [ebp-0x8],eax
100571ef:	call   DWORD PTR ds:0x100670f8
100571f5:	mov    eax,DWORD PTR [esi+0x34]
100571f8:	mov    ecx,DWORD PTR [ebp+0x8]
100571fb:	cmp    ecx,eax
100571fd:	mov    BYTE PTR [ebp-0x4],0x1
10057201:	jg     0x10057227
10057203:	test   ecx,ecx
10057205:	jl     0x10057227
10057207:	cmp    ecx,eax
10057209:	jne    0x1005721a
1005720b:	mov    esi,DWORD PTR [esi+0x8]
1005720e:	lea    ecx,[ebp-0x8]
10057211:	call   0x100111c4
10057216:	mov    eax,esi
10057218:	jmp    0x10057231
1005721a:	push   ecx
1005721b:	lea    ecx,[esi+0x30]
1005721e:	call   0x1005710f
10057223:	mov    esi,DWORD PTR [eax]
10057225:	jmp    0x1005720e
10057227:	lea    ecx,[ebp-0x8]
1005722a:	call   0x100111c4
1005722f:	xor    eax,eax
10057231:	pop    esi
10057232:	leave  
10057233:	ret    0x4
10057236:	push   esi
10057237:	mov    esi,ecx
10057239:	call   0x10057136
1005723e:	push   esi
1005723f:	mov    DWORD PTR [esi],0x2c
10057245:	call   0x100570a8
1005724a:	test   eax,eax
1005724c:	jge    0x10057258
1005724e:	mov    BYTE PTR ds:0x10082c60,0x1
10057255:	and    DWORD PTR [esi],0x0
10057258:	mov    eax,esi
1005725a:	pop    esi
1005725b:	ret    
1005725c:	push   ebp
1005725d:	lea    ebp,[esp-0x78]
10057261:	sub    esp,0x98
10057267:	mov    eax,ds:0x100801ac
1005726c:	xor    eax,ebp
1005726e:	mov    DWORD PTR [ebp+0x74],eax
10057271:	push   esi
10057272:	mov    esi,ecx
10057274:	call   0x100571b0
10057279:	mov    eax,0x10000000
1005727e:	push   0x94
10057283:	mov    DWORD PTR [esi+0x8],eax
10057286:	mov    DWORD PTR [esi+0x4],eax
10057289:	lea    eax,[ebp-0x20]
1005728c:	push   0x0
1005728e:	push   eax
1005728f:	mov    DWORD PTR [esi],0x3c
10057295:	mov    BYTE PTR [esi+0xc],0x0
10057299:	call   0x10045dc0
1005729e:	add    esp,0xc
100572a1:	lea    eax,[ebp-0x20]
100572a4:	push   eax
100572a5:	mov    DWORD PTR [ebp-0x20],0x94
100572ac:	call   DWORD PTR ds:0x100671b0
100572b2:	cmp    DWORD PTR [ebp-0x10],0x2
100572b6:	jne    0x100572c0
100572b8:	cmp    DWORD PTR [ebp-0x1c],0x5
100572bc:	jb     0x100572d8
100572be:	jmp    0x100572d4
100572c0:	cmp    DWORD PTR [ebp-0x10],0x1
100572c4:	jne    0x100572d8
100572c6:	cmp    DWORD PTR [ebp-0x1c],0x4
100572ca:	ja     0x100572d4
100572cc:	jne    0x100572d8
100572ce:	cmp    DWORD PTR [ebp-0x18],0x0
100572d2:	jbe    0x100572d8
100572d4:	mov    BYTE PTR [esi+0xc],0x1
100572d8:	lea    ecx,[esi+0x18]
100572db:	mov    DWORD PTR [esi+0x10],0x800
100572e2:	mov    DWORD PTR [esi+0x14],0x1006c924
100572e9:	call   0x100147b9
100572ee:	test   eax,eax
100572f0:	jge    0x100572f9
100572f2:	mov    BYTE PTR ds:0x10082c60,0x1
100572f9:	mov    ecx,DWORD PTR [ebp+0x74]
100572fc:	mov    eax,esi
100572fe:	xor    ecx,ebp
10057300:	pop    esi
10057301:	call   0x10043615
10057306:	add    ebp,0x78
10057309:	leave  
1005730a:	ret    
1005730b:	push   esi
1005730c:	push   DWORD PTR ds:0x10082a8c
10057312:	mov    esi,ecx
10057314:	push   esi
10057315:	call   0x10057150
1005731a:	lea    ecx,[esi+0x20]
1005731d:	pop    esi
1005731e:	jmp    0x100570cb
10057323:	mov    eax,ds:0x10082af0
10057328:	cmp    eax,0x1
1005732b:	push   DWORD PTR [esp+0x4]
1005732f:	jne    0x10057341
10057331:	push   0x0
10057333:	call   DWORD PTR ds:0x100671b4
10057339:	push   eax
1005733a:	call   DWORD PTR ds:0x10067194
10057340:	ret    
10057341:	push   eax
10057342:	call   DWORD PTR ds:0x10082af4
10057348:	ret    
10057349:	push   ebx
1005734a:	push   0xc
1005734c:	call   DWORD PTR ds:0x10067054
10057352:	test   eax,eax
10057354:	jne    0x1005735e
10057356:	inc    eax
10057357:	mov    ds:0x10082af0,eax
1005735c:	pop    ebx
1005735d:	ret    
1005735e:	push   ebp
1005735f:	push   esi
10057360:	push   edi
10057361:	push   0x100709d4
10057366:	call   DWORD PTR ds:0x10067228
1005736c:	mov    edi,eax
1005736e:	xor    ebp,ebp
10057370:	cmp    edi,ebp
10057372:	je     0x10057394
10057374:	mov    esi,DWORD PTR ds:0x100670e4
1005737a:	push   0x1006c950
1005737f:	push   edi
10057380:	call   esi
10057382:	push   0x1006c934
10057387:	push   edi
10057388:	mov    ds:0x10082af4,eax
1005738d:	call   esi
1005738f:	mov    ds:0x10082af8,eax
10057394:	cmp    DWORD PTR ds:0x10082af4,ebp
1005739a:	je     0x100573f7
1005739c:	cmp    DWORD PTR ds:0x10082af8,ebp
100573a2:	je     0x100573f7
100573a4:	mov    eax,fs:0x18
100573aa:	mov    esi,DWORD PTR [eax+0x30]
100573ad:	add    esi,0x34
100573b0:	mov    eax,DWORD PTR [esi]
100573b2:	cmp    eax,ebp
100573b4:	jne    0x100573ed
100573b6:	mov    ebx,DWORD PTR ds:0x100671b4
100573bc:	push   0x8
100573be:	push   ebp
100573bf:	call   ebx
100573c1:	push   eax
100573c2:	call   DWORD PTR ds:0x10067190
100573c8:	mov    edi,eax
100573ca:	cmp    edi,ebp
100573cc:	je     0x100573f7
100573ce:	push   ebp
100573cf:	push   edi
100573d0:	push   esi
100573d1:	mov    DWORD PTR [edi],ebp
100573d3:	mov    DWORD PTR [edi+0x4],ebp
100573d6:	call   DWORD PTR ds:0x100670ec
100573dc:	test   eax,eax
100573de:	je     0x100573eb
100573e0:	push   edi
100573e1:	push   ebp
100573e2:	call   ebx
100573e4:	push   eax
100573e5:	call   DWORD PTR ds:0x10067194
100573eb:	mov    eax,DWORD PTR [esi]
100573ed:	mov    ds:0x10082af0,eax
100573f2:	xor    eax,eax
100573f4:	inc    eax
100573f5:	jmp    0x100573f9
100573f7:	xor    eax,eax
100573f9:	pop    edi
100573fa:	pop    esi
100573fb:	pop    ebp
100573fc:	pop    ebx
100573fd:	ret    
100573fe:	push   DWORD PTR [esp+0x4]
10057402:	call   0x10057323
10057407:	pop    ecx
10057408:	ret    0x4
1005740b:	cmp    DWORD PTR ds:0x10082af0,0x0
10057412:	push   esi
10057413:	jne    0x1005741e
10057415:	call   0x10057349
1005741a:	test   eax,eax
1005741c:	je     0x10057461
1005741e:	mov    eax,ds:0x10082af0
10057423:	cmp    eax,0x1
10057426:	jne    0x1005743f
10057428:	push   0xd
1005742a:	push   0x0
1005742c:	call   DWORD PTR ds:0x100671b4
10057432:	push   eax
10057433:	call   DWORD PTR ds:0x10067190
10057439:	test   eax,eax
1005743b:	je     0x10057461
1005743d:	pop    esi
1005743e:	ret    
1005743f:	push   eax
10057440:	call   DWORD PTR ds:0x10082af8
10057446:	test   eax,eax
10057448:	jne    0x100574a9
1005744a:	push   0x40
1005744c:	mov    eax,0x1000
10057451:	push   eax
10057452:	push   eax
10057453:	push   0x0
10057455:	call   DWORD PTR ds:0x1006719c
1005745b:	mov    esi,eax
1005745d:	test   esi,esi
1005745f:	jne    0x10057465
10057461:	xor    eax,eax
10057463:	pop    esi
10057464:	ret    
10057465:	mov    eax,DWORD PTR [esi]
10057467:	push   edi
10057468:	push   DWORD PTR ds:0x10082af0
1005746e:	call   DWORD PTR ds:0x10082af8
10057474:	mov    edi,eax
10057476:	test   edi,edi
10057478:	je     0x1005748c
1005747a:	push   0x8000
1005747f:	push   0x0
10057481:	push   esi
10057482:	call   DWORD PTR ds:0x100671d8
10057488:	mov    eax,edi
1005748a:	jmp    0x100574a8
1005748c:	lea    edi,[esi+0xff0]
10057492:	push   esi
10057493:	push   DWORD PTR ds:0x10082af0
10057499:	call   DWORD PTR ds:0x10082af4
1005749f:	add    esi,0x10
100574a2:	cmp    esi,edi
100574a4:	jb     0x10057492
100574a6:	mov    eax,esi
100574a8:	pop    edi
100574a9:	pop    esi
100574aa:	ret    
100574ab:	jmp    0x1005740b
100574b0:	push   0x44
100574b2:	mov    eax,0x10060b46
100574b7:	call   0x10059df5
100574bc:	push   0x1006c990
100574c1:	lea    ecx,[ebp-0x28]
100574c4:	call   0x100011a7
100574c9:	and    DWORD PTR [ebp-0x4],0x0
100574cd:	lea    eax,[ebp-0x28]
100574d0:	push   eax
100574d1:	lea    ecx,[ebp-0x50]
100574d4:	call   0x10001077
100574d9:	push   0x100764d0
100574de:	lea    eax,[ebp-0x50]
100574e1:	push   eax
100574e2:	mov    DWORD PTR [ebp-0x50],0x1006c97c
100574e9:	call   0x10047942
100574ee:	int3   
100574ef:	push   0x44
100574f1:	mov    eax,0x10060b46
100574f6:	call   0x10059df5
100574fb:	push   0x1006c9a0
10057500:	lea    ecx,[ebp-0x28]
10057503:	call   0x100011a7
10057508:	and    DWORD PTR [ebp-0x4],0x0
1005750c:	lea    eax,[ebp-0x28]
1005750f:	push   eax
10057510:	lea    ecx,[ebp-0x50]
10057513:	call   0x10001077
10057518:	push   0x10076428
1005751d:	lea    eax,[ebp-0x50]
10057520:	push   eax
10057521:	mov    DWORD PTR [ebp-0x50],0x1006c988
10057528:	call   0x10047942
1005752d:	int3   
1005752e:	int3   
1005752f:	int3   
10057530:	push   ebp
10057531:	mov    ebp,esp
10057533:	sub    esp,0x34
10057536:	push   0x1
10057538:	mov    eax,DWORD PTR [ebp+0x8]
1005753b:	push   eax
1005753c:	call   0x10057d70
10057541:	mov    DWORD PTR [ebp+0x8],eax
10057544:	push   0x0
10057546:	mov    ecx,DWORD PTR [ebp+0xc]
10057549:	push   ecx
1005754a:	call   0x10057d70
1005754f:	mov    DWORD PTR [ebp+0xc],eax
10057552:	mov    edx,DWORD PTR [ebp+0x8]
10057555:	movzx  eax,BYTE PTR [edx+0x1f]
10057559:	mov    DWORD PTR [ebp-0xc],eax
1005755c:	cmp    DWORD PTR [ebp-0xc],0x0
10057560:	je     0x10057568
10057562:	cmp    DWORD PTR [ebp-0xc],0x1f
10057566:	jl     0x10057577
10057568:	push   0x6
1005756a:	call   DWORD PTR ds:0x10067150
10057570:	xor    eax,eax
10057572:	jmp    0x10057688
10057577:	mov    ecx,DWORD PTR [ebp+0x8]
1005757a:	add    ecx,DWORD PTR [ebp-0xc]
1005757d:	movzx  edx,BYTE PTR [ecx]
10057580:	cmp    edx,0xe9
10057586:	je     0x10057597
10057588:	push   0x6
1005758a:	call   DWORD PTR ds:0x10067150
10057590:	xor    eax,eax
10057592:	jmp    0x10057688
10057597:	mov    eax,DWORD PTR [ebp+0x8]
1005759a:	add    eax,DWORD PTR [ebp-0xc]
1005759d:	mov    ecx,DWORD PTR [eax+0x1]
100575a0:	mov    DWORD PTR [ebp-0x20],ecx
100575a3:	mov    edx,DWORD PTR [ebp+0x8]
100575a6:	add    edx,DWORD PTR [ebp-0xc]
100575a9:	mov    eax,DWORD PTR [ebp-0x20]
100575ac:	lea    ecx,[edx+eax*1+0x5]
100575b0:	sub    ecx,DWORD PTR [ebp-0xc]
100575b3:	mov    DWORD PTR [ebp-0x8],ecx
100575b6:	mov    edx,DWORD PTR [ebp-0x8]
100575b9:	movzx  eax,BYTE PTR [edx]
100575bc:	cmp    eax,0xe9
100575c1:	je     0x100575d2
100575c3:	push   0x9
100575c5:	call   DWORD PTR ds:0x10067150
100575cb:	xor    eax,eax
100575cd:	jmp    0x10057688
100575d2:	mov    ecx,DWORD PTR [ebp-0x8]
100575d5:	mov    edx,DWORD PTR [ecx+0x1]
100575d8:	mov    DWORD PTR [ebp-0x20],edx
100575db:	mov    eax,DWORD PTR [ebp-0x20]
100575de:	mov    ecx,DWORD PTR [ebp-0x8]
100575e1:	lea    edx,[ecx+eax*1+0x5]
100575e5:	mov    DWORD PTR [ebp-0x28],edx
100575e8:	mov    eax,DWORD PTR [ebp-0x28]
100575eb:	cmp    eax,DWORD PTR [ebp+0xc]
100575ee:	je     0x100575ff
100575f0:	push   0xc
100575f2:	call   DWORD PTR ds:0x10067150
100575f8:	xor    eax,eax
100575fa:	jmp    0x10057688
100575ff:	mov    ecx,DWORD PTR [ebp-0xc]
10057602:	push   ecx
10057603:	mov    edx,DWORD PTR [ebp-0x8]
10057606:	push   edx
10057607:	lea    ecx,[ebp-0x1c]
1005760a:	call   0x10057690
1005760f:	mov    eax,DWORD PTR [ebp+0x8]
10057612:	mov    DWORD PTR [ebp-0x4],eax
10057615:	mov    ecx,DWORD PTR [ebp-0x8]
10057618:	mov    DWORD PTR [ebp-0x24],ecx
1005761b:	mov    DWORD PTR [ebp-0x2c],0x0
10057622:	jmp    0x1005762d
10057624:	mov    edx,DWORD PTR [ebp-0x8]
10057627:	add    edx,DWORD PTR [ebp-0x2c]
1005762a:	mov    DWORD PTR [ebp-0x24],edx
1005762d:	mov    eax,DWORD PTR [ebp-0x2c]
10057630:	cmp    eax,DWORD PTR [ebp-0xc]
10057633:	jge    0x10057652
10057635:	push   0x0
10057637:	mov    ecx,DWORD PTR [ebp-0x4]
1005763a:	push   ecx
1005763b:	mov    edx,DWORD PTR [ebp-0x24]
1005763e:	push   edx
1005763f:	call   0x10057f80
10057644:	mov    DWORD PTR [ebp-0x4],eax
10057647:	mov    eax,DWORD PTR [ebp-0x4]
1005764a:	sub    eax,DWORD PTR [ebp+0x8]
1005764d:	mov    DWORD PTR [ebp-0x2c],eax
10057650:	jmp    0x10057624
10057652:	mov    ecx,DWORD PTR [ebp-0x2c]
10057655:	cmp    ecx,DWORD PTR [ebp-0xc]
10057658:	je     0x10057676
1005765a:	push   0xd
1005765c:	call   DWORD PTR ds:0x10067150
10057662:	mov    DWORD PTR [ebp-0x30],0x0
10057669:	lea    ecx,[ebp-0x1c]
1005766c:	call   0x10057710
10057671:	mov    eax,DWORD PTR [ebp-0x30]
10057674:	jmp    0x10057688
10057676:	mov    DWORD PTR [ebp-0x34],0x1
1005767d:	lea    ecx,[ebp-0x1c]
10057680:	call   0x10057710
10057685:	mov    eax,DWORD PTR [ebp-0x34]
10057688:	mov    esp,ebp
1005768a:	pop    ebp
1005768b:	ret    0x8
1005768e:	int3   
1005768f:	int3   
10057690:	push   ebp
10057691:	mov    ebp,esp
10057693:	push   ecx
10057694:	mov    DWORD PTR [ebp-0x4],ecx
10057697:	mov    eax,DWORD PTR [ebp-0x4]
1005769a:	mov    ecx,DWORD PTR [ebp+0x8]
1005769d:	mov    DWORD PTR [eax+0x4],ecx
100576a0:	mov    edx,DWORD PTR [ebp-0x4]
100576a3:	mov    eax,DWORD PTR [ebp+0xc]
100576a6:	mov    DWORD PTR [edx+0x8],eax
100576a9:	mov    ecx,DWORD PTR [ebp-0x4]
100576ac:	mov    DWORD PTR [ecx+0xc],0x0
100576b3:	call   DWORD PTR ds:0x1006712c
100576b9:	mov    edx,DWORD PTR [ebp-0x4]
100576bc:	mov    DWORD PTR [edx],eax
100576be:	mov    eax,DWORD PTR [ebp-0x4]
100576c1:	cmp    DWORD PTR [eax+0x4],0x0
100576c5:	je     0x10057701
100576c7:	mov    ecx,DWORD PTR [ebp-0x4]
100576ca:	cmp    DWORD PTR [ecx+0x8],0x0
100576ce:	je     0x10057701
100576d0:	mov    edx,DWORD PTR [ebp+0xc]
100576d3:	push   edx
100576d4:	mov    eax,DWORD PTR [ebp+0x8]
100576d7:	push   eax
100576d8:	mov    ecx,DWORD PTR [ebp-0x4]
100576db:	mov    edx,DWORD PTR [ecx]
100576dd:	push   edx
100576de:	call   DWORD PTR ds:0x10067158
100576e4:	test   eax,eax
100576e6:	jne    0x100576ea
100576e8:	jmp    0x10057701
100576ea:	mov    eax,DWORD PTR [ebp-0x4]
100576ed:	add    eax,0xc
100576f0:	push   eax
100576f1:	push   0x40
100576f3:	mov    ecx,DWORD PTR [ebp+0xc]
100576f6:	push   ecx
100576f7:	mov    edx,DWORD PTR [ebp+0x8]
100576fa:	push   edx
100576fb:	call   DWORD PTR ds:0x10067198
10057701:	mov    eax,DWORD PTR [ebp-0x4]
10057704:	mov    esp,ebp
10057706:	pop    ebp
10057707:	ret    0x8
1005770a:	int3   
1005770b:	int3   
1005770c:	int3   
1005770d:	int3   
1005770e:	int3   
1005770f:	int3   
10057710:	push   ebp
10057711:	mov    ebp,esp
10057713:	sub    esp,0x8
10057716:	mov    DWORD PTR [ebp-0x8],ecx
10057719:	mov    eax,DWORD PTR [ebp-0x8]
1005771c:	cmp    DWORD PTR [eax+0xc],0x0
10057720:	je     0x1005777a
10057722:	mov    ecx,DWORD PTR [ebp-0x8]
10057725:	cmp    DWORD PTR [ecx+0x4],0x0
10057729:	je     0x1005777a
1005772b:	mov    edx,DWORD PTR [ebp-0x8]
1005772e:	cmp    DWORD PTR [edx+0x8],0x0
10057732:	je     0x1005777a
10057734:	mov    DWORD PTR [ebp-0x4],0x0
1005773b:	mov    eax,DWORD PTR [ebp-0x8]
1005773e:	mov    ecx,DWORD PTR [eax+0x8]
10057741:	push   ecx
10057742:	mov    edx,DWORD PTR [ebp-0x8]
10057745:	mov    eax,DWORD PTR [edx+0x4]
10057748:	push   eax
10057749:	mov    ecx,DWORD PTR [ebp-0x8]
1005774c:	mov    edx,DWORD PTR [ecx]
1005774e:	push   edx
1005774f:	call   DWORD PTR ds:0x10067158
10057755:	test   eax,eax
10057757:	jne    0x1005775b
10057759:	jmp    0x1005777a
1005775b:	lea    eax,[ebp-0x4]
1005775e:	push   eax
1005775f:	mov    ecx,DWORD PTR [ebp-0x8]
10057762:	mov    edx,DWORD PTR [ecx+0xc]
10057765:	push   edx
10057766:	mov    eax,DWORD PTR [ebp-0x8]
10057769:	mov    ecx,DWORD PTR [eax+0x8]
1005776c:	push   ecx
1005776d:	mov    edx,DWORD PTR [ebp-0x8]
10057770:	mov    eax,DWORD PTR [edx+0x4]
10057773:	push   eax
10057774:	call   DWORD PTR ds:0x10067198
1005777a:	mov    esp,ebp
1005777c:	pop    ebp
1005777d:	ret    
1005777e:	int3   
1005777f:	int3   
10057780:	push   ebp
10057781:	mov    ebp,esp
10057783:	sub    esp,0xc
10057786:	push   0x20
10057788:	call   0x10043196
1005778d:	add    esp,0x4
10057790:	mov    DWORD PTR [ebp-0x8],eax
10057793:	mov    eax,DWORD PTR [ebp-0x8]
10057796:	mov    DWORD PTR [ebp-0x4],eax
10057799:	cmp    DWORD PTR [ebp-0x4],0x0
1005779d:	jne    0x100577a3
1005779f:	xor    eax,eax
100577a1:	jmp    0x100577f0
100577a3:	push   0x0
100577a5:	mov    ecx,DWORD PTR [ebp+0x8]
100577a8:	push   ecx
100577a9:	call   0x10057d70
100577ae:	mov    DWORD PTR [ebp+0x8],eax
100577b1:	push   0x0
100577b3:	mov    edx,DWORD PTR [ebp+0xc]
100577b6:	push   edx
100577b7:	call   0x10057d70
100577bc:	mov    DWORD PTR [ebp+0xc],eax
100577bf:	mov    eax,DWORD PTR [ebp+0xc]
100577c2:	push   eax
100577c3:	mov    ecx,DWORD PTR [ebp-0x4]
100577c6:	push   ecx
100577c7:	mov    edx,DWORD PTR [ebp+0x8]
100577ca:	push   edx
100577cb:	call   0x10057800
100577d0:	add    esp,0xc
100577d3:	test   eax,eax
100577d5:	je     0x100577dc
100577d7:	mov    eax,DWORD PTR [ebp-0x4]
100577da:	jmp    0x100577f0
100577dc:	mov    eax,DWORD PTR [ebp-0x4]
100577df:	mov    DWORD PTR [ebp-0xc],eax
100577e2:	mov    ecx,DWORD PTR [ebp-0xc]
100577e5:	push   ecx
100577e6:	call   0x10042fe2
100577eb:	add    esp,0x4
100577ee:	xor    eax,eax
100577f0:	mov    esp,ebp
100577f2:	pop    ebp
100577f3:	ret    0x8
100577f6:	int3   
100577f7:	int3   
100577f8:	int3   
100577f9:	int3   
100577fa:	int3   
100577fb:	int3   
100577fc:	int3   
100577fd:	int3   
100577fe:	int3   
100577ff:	int3   
10057800:	push   ebp
10057801:	mov    ebp,esp
10057803:	sub    esp,0x54
10057806:	mov    eax,DWORD PTR [ebp+0x8]
10057809:	mov    DWORD PTR [ebp-0x18],eax
1005780c:	mov    DWORD PTR [ebp-0x30],0x0
10057813:	cmp    DWORD PTR [ebp-0x30],0x5
10057817:	jge    0x100578e6
1005781d:	mov    ecx,DWORD PTR [ebp-0x18]
10057820:	mov    DWORD PTR [ebp-0x38],ecx
10057823:	mov    edx,DWORD PTR [ebp-0x38]
10057826:	mov    al,BYTE PTR [edx]
10057828:	mov    BYTE PTR [ebp-0x31],al
1005782b:	push   0x0
1005782d:	mov    ecx,DWORD PTR [ebp-0x18]
10057830:	push   ecx
10057831:	push   0x0
10057833:	call   0x10057f80
10057838:	mov    DWORD PTR [ebp-0x18],eax
1005783b:	mov    edx,DWORD PTR [ebp-0x18]
1005783e:	sub    edx,DWORD PTR [ebp+0x8]
10057841:	mov    DWORD PTR [ebp-0x30],edx
10057844:	movzx  eax,BYTE PTR [ebp-0x31]
10057848:	cmp    eax,0xe9
1005784d:	je     0x10057872
1005784f:	movzx  ecx,BYTE PTR [ebp-0x31]
10057853:	cmp    ecx,0xe0
10057859:	je     0x10057872
1005785b:	movzx  edx,BYTE PTR [ebp-0x31]
1005785f:	cmp    edx,0xc2
10057865:	je     0x10057872
10057867:	movzx  eax,BYTE PTR [ebp-0x31]
1005786b:	cmp    eax,0xc3
10057870:	jne    0x10057874
10057872:	jmp    0x100578e6
10057874:	movzx  ecx,BYTE PTR [ebp-0x31]
10057878:	cmp    ecx,0xff
1005787e:	jne    0x1005788e
10057880:	mov    edx,DWORD PTR [ebp-0x38]
10057883:	movzx  eax,BYTE PTR [edx+0x1]
10057887:	cmp    eax,0x25
1005788a:	jne    0x1005788e
1005788c:	jmp    0x100578e6
1005788e:	movzx  ecx,BYTE PTR [ebp-0x31]
10057892:	cmp    ecx,0x26
10057895:	je     0x100578c4
10057897:	movzx  edx,BYTE PTR [ebp-0x31]
1005789b:	cmp    edx,0x2e
1005789e:	je     0x100578c4
100578a0:	movzx  eax,BYTE PTR [ebp-0x31]
100578a4:	cmp    eax,0x36
100578a7:	je     0x100578c4
100578a9:	movzx  ecx,BYTE PTR [ebp-0x31]
100578ad:	cmp    ecx,0x3e
100578b0:	je     0x100578c4
100578b2:	movzx  edx,BYTE PTR [ebp-0x31]
100578b6:	cmp    edx,0x64
100578b9:	je     0x100578c4
100578bb:	movzx  eax,BYTE PTR [ebp-0x31]
100578bf:	cmp    eax,0x65
100578c2:	jne    0x100578e1
100578c4:	mov    ecx,DWORD PTR [ebp-0x38]
100578c7:	movzx  edx,BYTE PTR [ecx+0x1]
100578cb:	cmp    edx,0xff
100578d1:	jne    0x100578e1
100578d3:	mov    eax,DWORD PTR [ebp-0x38]
100578d6:	movzx  ecx,BYTE PTR [eax+0x2]
100578da:	cmp    ecx,0x25
100578dd:	jne    0x100578e1
100578df:	jmp    0x100578e6
100578e1:	jmp    0x10057813
100578e6:	cmp    DWORD PTR [ebp-0x30],0x5
100578ea:	jge    0x100578f3
100578ec:	xor    eax,eax
100578ee:	jmp    0x10057a6a
100578f3:	cmp    DWORD PTR [ebp-0x30],0x1a
100578f7:	jle    0x10057900
100578f9:	xor    eax,eax
100578fb:	jmp    0x10057a6a
10057900:	push   0x20
10057902:	mov    edx,DWORD PTR [ebp+0xc]
10057905:	push   edx
10057906:	lea    ecx,[ebp-0x28]
10057909:	call   0x10057690
1005790e:	mov    eax,DWORD PTR [ebp-0x30]
10057911:	push   eax
10057912:	mov    ecx,DWORD PTR [ebp+0x8]
10057915:	push   ecx
10057916:	lea    ecx,[ebp-0x14]
10057919:	call   0x10057690
1005791e:	push   0x40
10057920:	lea    ecx,[ebp-0x28]
10057923:	call   0x10057a70
10057928:	test   eax,eax
1005792a:	jne    0x1005794b
1005792c:	mov    DWORD PTR [ebp-0x40],0x0
10057933:	lea    ecx,[ebp-0x14]
10057936:	call   0x10057710
1005793b:	lea    ecx,[ebp-0x28]
1005793e:	call   0x10057710
10057943:	mov    eax,DWORD PTR [ebp-0x40]
10057946:	jmp    0x10057a6a
1005794b:	lea    ecx,[ebp-0x14]
1005794e:	call   0x10057ab0
10057953:	test   eax,eax
10057955:	jne    0x10057976
10057957:	mov    DWORD PTR [ebp-0x44],0x0
1005795e:	lea    ecx,[ebp-0x14]
10057961:	call   0x10057710
10057966:	lea    ecx,[ebp-0x28]
10057969:	call   0x10057710
1005796e:	mov    eax,DWORD PTR [ebp-0x44]
10057971:	jmp    0x10057a6a
10057976:	mov    edx,DWORD PTR [ebp+0x8]
10057979:	mov    DWORD PTR [ebp-0x4],edx
1005797c:	mov    eax,DWORD PTR [ebp+0xc]
1005797f:	mov    DWORD PTR [ebp-0x2c],eax
10057982:	mov    DWORD PTR [ebp-0x3c],0x0
10057989:	mov    ecx,DWORD PTR [ebp-0x3c]
1005798c:	cmp    ecx,DWORD PTR [ebp-0x30]
1005798f:	jge    0x100579b7
10057991:	push   0x0
10057993:	mov    edx,DWORD PTR [ebp-0x4]
10057996:	push   edx
10057997:	mov    eax,DWORD PTR [ebp-0x2c]
1005799a:	push   eax
1005799b:	call   0x10057f80
100579a0:	mov    DWORD PTR [ebp-0x4],eax
100579a3:	mov    ecx,DWORD PTR [ebp-0x4]
100579a6:	sub    ecx,DWORD PTR [ebp+0x8]
100579a9:	mov    DWORD PTR [ebp-0x3c],ecx
100579ac:	mov    edx,DWORD PTR [ebp+0xc]
100579af:	add    edx,DWORD PTR [ebp-0x3c]
100579b2:	mov    DWORD PTR [ebp-0x2c],edx
100579b5:	jmp    0x10057989
100579b7:	mov    eax,DWORD PTR [ebp-0x3c]
100579ba:	cmp    eax,DWORD PTR [ebp-0x30]
100579bd:	je     0x100579de
100579bf:	mov    DWORD PTR [ebp-0x48],0x0
100579c6:	lea    ecx,[ebp-0x14]
100579c9:	call   0x10057710
100579ce:	lea    ecx,[ebp-0x28]
100579d1:	call   0x10057710
100579d6:	mov    eax,DWORD PTR [ebp-0x48]
100579d9:	jmp    0x10057a6a
100579de:	push   0x5
100579e0:	mov    ecx,DWORD PTR [ebp+0x8]
100579e3:	add    ecx,DWORD PTR [ebp-0x30]
100579e6:	push   ecx
100579e7:	mov    edx,DWORD PTR [ebp-0x2c]
100579ea:	push   edx
100579eb:	call   0x10057af0
100579f0:	add    esp,0xc
100579f3:	test   eax,eax
100579f5:	jne    0x10057a13
100579f7:	mov    DWORD PTR [ebp-0x4c],0x0
100579fe:	lea    ecx,[ebp-0x14]
10057a01:	call   0x10057710
10057a06:	lea    ecx,[ebp-0x28]
10057a09:	call   0x10057710
10057a0e:	mov    eax,DWORD PTR [ebp-0x4c]
10057a11:	jmp    0x10057a6a
10057a13:	mov    eax,DWORD PTR [ebp+0xc]
10057a16:	mov    cl,BYTE PTR [ebp-0x30]
10057a19:	mov    BYTE PTR [eax+0x1f],cl
10057a1c:	mov    edx,DWORD PTR [ebp-0x30]
10057a1f:	push   edx
10057a20:	mov    eax,DWORD PTR [ebp+0x10]
10057a23:	push   eax
10057a24:	mov    ecx,DWORD PTR [ebp+0x8]
10057a27:	push   ecx
10057a28:	call   0x10057af0
10057a2d:	add    esp,0xc
10057a30:	test   eax,eax
10057a32:	jne    0x10057a50
10057a34:	mov    DWORD PTR [ebp-0x50],0x0
10057a3b:	lea    ecx,[ebp-0x14]
10057a3e:	call   0x10057710
10057a43:	lea    ecx,[ebp-0x28]
10057a46:	call   0x10057710
10057a4b:	mov    eax,DWORD PTR [ebp-0x50]
10057a4e:	jmp    0x10057a6a
10057a50:	mov    DWORD PTR [ebp-0x54],0x1
10057a57:	lea    ecx,[ebp-0x14]
10057a5a:	call   0x10057710
10057a5f:	lea    ecx,[ebp-0x28]
10057a62:	call   0x10057710
10057a67:	mov    eax,DWORD PTR [ebp-0x54]
10057a6a:	mov    esp,ebp
10057a6c:	pop    ebp
10057a6d:	ret    
10057a6e:	int3   
10057a6f:	int3   
10057a70:	push   ebp
10057a71:	mov    ebp,esp
10057a73:	push   ecx
10057a74:	mov    DWORD PTR [ebp-0x4],ecx
10057a77:	mov    eax,DWORD PTR [ebp-0x4]
10057a7a:	cmp    DWORD PTR [eax+0xc],0x0
10057a7e:	je     0x10057aa2
10057a80:	mov    ecx,DWORD PTR [ebp-0x4]
10057a83:	cmp    DWORD PTR [ecx+0x4],0x0
10057a87:	je     0x10057aa2
10057a89:	mov    edx,DWORD PTR [ebp-0x4]
10057a8c:	cmp    DWORD PTR [edx+0x8],0x0
10057a90:	je     0x10057aa2
10057a92:	mov    eax,DWORD PTR [ebp-0x4]
10057a95:	mov    ecx,DWORD PTR [ebp+0x8]
10057a98:	mov    DWORD PTR [eax+0xc],ecx
10057a9b:	mov    eax,0x1
10057aa0:	jmp    0x10057aa4
10057aa2:	xor    eax,eax
10057aa4:	mov    esp,ebp
10057aa6:	pop    ebp
10057aa7:	ret    0x4
10057aaa:	int3   
10057aab:	int3   
10057aac:	int3   
10057aad:	int3   
10057aae:	int3   
10057aaf:	int3   
10057ab0:	push   ebp
10057ab1:	mov    ebp,esp
10057ab3:	sub    esp,0x8
10057ab6:	mov    DWORD PTR [ebp-0x4],ecx
10057ab9:	mov    eax,DWORD PTR [ebp-0x4]
10057abc:	cmp    DWORD PTR [eax+0x4],0x0
10057ac0:	je     0x10057add
10057ac2:	mov    ecx,DWORD PTR [ebp-0x4]
10057ac5:	cmp    DWORD PTR [ecx+0x8],0x0
10057ac9:	je     0x10057add
10057acb:	mov    edx,DWORD PTR [ebp-0x4]
10057ace:	cmp    DWORD PTR [edx+0xc],0x0
10057ad2:	je     0x10057add
10057ad4:	mov    DWORD PTR [ebp-0x8],0x1
10057adb:	jmp    0x10057ae4
10057add:	mov    DWORD PTR [ebp-0x8],0x0
10057ae4:	mov    eax,DWORD PTR [ebp-0x8]
10057ae7:	mov    esp,ebp
10057ae9:	pop    ebp
10057aea:	ret    
10057aeb:	int3   
10057aec:	int3   
10057aed:	int3   
10057aee:	int3   
10057aef:	int3   
10057af0:	push   ebp
10057af1:	mov    ebp,esp
10057af3:	cmp    DWORD PTR [ebp+0x10],0x5
10057af7:	jge    0x10057afd
10057af9:	xor    eax,eax
10057afb:	jmp    0x10057b42
10057afd:	push   0x0
10057aff:	mov    eax,DWORD PTR [ebp+0xc]
10057b02:	push   eax
10057b03:	mov    ecx,DWORD PTR [ebp+0x8]
10057b06:	push   ecx
10057b07:	call   0x10057b50
10057b0c:	add    esp,0xc
10057b0f:	mov    DWORD PTR [ebp+0x8],eax
10057b12:	mov    edx,DWORD PTR [ebp+0x10]
10057b15:	sub    edx,0x5
10057b18:	mov    DWORD PTR [ebp+0x10],edx
10057b1b:	jmp    0x10057b26
10057b1d:	mov    eax,DWORD PTR [ebp+0x10]
10057b20:	sub    eax,0x1
10057b23:	mov    DWORD PTR [ebp+0x10],eax
10057b26:	cmp    DWORD PTR [ebp+0x10],0x0
10057b2a:	jle    0x10057b3d
10057b2c:	mov    ecx,DWORD PTR [ebp+0x8]
10057b2f:	push   ecx
10057b30:	call   0x10057b90
10057b35:	add    esp,0x4
10057b38:	mov    DWORD PTR [ebp+0x8],eax
10057b3b:	jmp    0x10057b1d
10057b3d:	mov    eax,0x1
10057b42:	pop    ebp
10057b43:	ret    
10057b44:	int3   
10057b45:	int3   
10057b46:	int3   
10057b47:	int3   
10057b48:	int3   
10057b49:	int3   
10057b4a:	int3   
10057b4b:	int3   
10057b4c:	int3   
10057b4d:	int3   
10057b4e:	int3   
10057b4f:	int3   
10057b50:	push   ebp
10057b51:	mov    ebp,esp
10057b53:	cmp    DWORD PTR [ebp+0x10],0x0
10057b57:	jne    0x10057b5f
10057b59:	mov    eax,DWORD PTR [ebp+0x8]
10057b5c:	mov    DWORD PTR [ebp+0x10],eax
10057b5f:	mov    ecx,DWORD PTR [ebp+0x8]
10057b62:	mov    BYTE PTR [ecx],0xe9
10057b65:	mov    edx,DWORD PTR [ebp+0x8]
10057b68:	add    edx,0x1
10057b6b:	mov    DWORD PTR [ebp+0x8],edx
10057b6e:	mov    eax,DWORD PTR [ebp+0x10]
10057b71:	add    eax,0x5
10057b74:	mov    ecx,DWORD PTR [ebp+0xc]
10057b77:	sub    ecx,eax
10057b79:	mov    edx,DWORD PTR [ebp+0x8]
10057b7c:	mov    DWORD PTR [edx],ecx
10057b7e:	mov    eax,DWORD PTR [ebp+0x8]
10057b81:	add    eax,0x4
10057b84:	mov    DWORD PTR [ebp+0x8],eax
10057b87:	mov    eax,DWORD PTR [ebp+0x8]
10057b8a:	pop    ebp
10057b8b:	ret    
10057b8c:	int3   
10057b8d:	int3   
10057b8e:	int3   
10057b8f:	int3   
10057b90:	push   ebp
10057b91:	mov    ebp,esp
10057b93:	mov    eax,DWORD PTR [ebp+0x8]
10057b96:	mov    BYTE PTR [eax],0xcc
10057b99:	mov    ecx,DWORD PTR [ebp+0x8]
10057b9c:	add    ecx,0x1
10057b9f:	mov    DWORD PTR [ebp+0x8],ecx
10057ba2:	mov    eax,DWORD PTR [ebp+0x8]
10057ba5:	pop    ebp
10057ba6:	ret    
10057ba7:	int3   
10057ba8:	int3   
10057ba9:	int3   
10057baa:	int3   
10057bab:	int3   
10057bac:	int3   
10057bad:	int3   
10057bae:	int3   
10057baf:	int3   
10057bb0:	push   ebp
10057bb1:	mov    ebp,esp
10057bb3:	sub    esp,0xc
10057bb6:	cmp    DWORD PTR ds:0x10082b24,0x0
10057bbd:	je     0x10057bc9
10057bbf:	mov    eax,ds:0x10082b24
10057bc4:	jmp    0x10057d66
10057bc9:	mov    DWORD PTR ds:0x10082b24,0x10082afc
10057bd3:	push   0x28
10057bd5:	push   0x0
10057bd7:	push   0x10082afc
10057bdc:	call   0x10045dc0
10057be1:	add    esp,0xc
10057be4:	call   DWORD PTR ds:0x1006712c
10057bea:	mov    ds:0x10082afc,eax
10057bef:	push   0x10081004
10057bf4:	call   DWORD PTR ds:0x10067228
10057bfa:	mov    ds:0x10082b00,eax
10057bff:	cmp    DWORD PTR ds:0x10082b00,0x0
10057c06:	jne    0x10057c0f
10057c08:	xor    eax,eax
10057c0a:	jmp    0x10057d66
10057c0f:	push   0x10081014
10057c14:	mov    eax,ds:0x10082b00
10057c19:	push   eax
10057c1a:	call   DWORD PTR ds:0x100670e4
10057c20:	mov    ds:0x10082b04,eax
10057c25:	push   0x1008102c
10057c2a:	mov    ecx,DWORD PTR ds:0x10082b00
10057c30:	push   ecx
10057c31:	call   DWORD PTR ds:0x100670e4
10057c37:	mov    ds:0x10082b08,eax
10057c3c:	push   0x1008103c
10057c41:	mov    edx,DWORD PTR ds:0x10082b00
10057c47:	push   edx
10057c48:	call   DWORD PTR ds:0x100670e4
10057c4e:	mov    ds:0x10082b0c,eax
10057c53:	push   0x1008104c
10057c58:	mov    eax,ds:0x10082b00
10057c5d:	push   eax
10057c5e:	call   DWORD PTR ds:0x100670e4
10057c64:	mov    ds:0x10082b10,eax
10057c69:	push   0x1008105c
10057c6e:	mov    ecx,DWORD PTR ds:0x10082b00
10057c74:	push   ecx
10057c75:	call   DWORD PTR ds:0x100670e4
10057c7b:	mov    ds:0x10082b14,eax
10057c80:	push   0x1008106c
10057c85:	mov    edx,DWORD PTR ds:0x10082b00
10057c8b:	push   edx
10057c8c:	call   DWORD PTR ds:0x100670e4
10057c92:	mov    ds:0x10082b18,eax
10057c97:	push   0x10081080
10057c9c:	mov    eax,ds:0x10082b00
10057ca1:	push   eax
10057ca2:	call   DWORD PTR ds:0x100670e4
10057ca8:	mov    ds:0x10082b1c,eax
10057cad:	push   0x10081094
10057cb2:	mov    ecx,DWORD PTR ds:0x10082b00
10057cb8:	push   ecx
10057cb9:	call   DWORD PTR ds:0x100670e4
10057cbf:	mov    ds:0x10082b20,eax
10057cc4:	push   0x8
10057cc6:	push   0x0
10057cc8:	lea    edx,[ebp-0x8]
10057ccb:	push   edx
10057ccc:	call   0x10045dc0
10057cd1:	add    esp,0xc
10057cd4:	mov    WORD PTR [ebp-0x8],0x9
10057cda:	cmp    DWORD PTR ds:0x10082b04,0x0
10057ce1:	je     0x10057ced
10057ce3:	lea    eax,[ebp-0x8]
10057ce6:	push   eax
10057ce7:	call   DWORD PTR ds:0x10082b04
10057ced:	cmp    DWORD PTR ds:0x10082b04,0x0
10057cf4:	je     0x10057cff
10057cf6:	movzx  ecx,WORD PTR [ebp-0x8]
10057cfa:	cmp    ecx,0x9
10057cfd:	jge    0x10057d1a
10057cff:	mov    edx,DWORD PTR ds:0x10082b00
10057d05:	push   edx
10057d06:	call   DWORD PTR ds:0x10067140
10057d0c:	mov    DWORD PTR ds:0x10082b00,0x0
10057d16:	xor    eax,eax
10057d18:	jmp    0x10057d66
10057d1a:	cmp    DWORD PTR ds:0x10082b08,0x0
10057d21:	je     0x10057d33
10057d23:	push   0x0
10057d25:	push   0x0
10057d27:	mov    eax,ds:0x10082afc
10057d2c:	push   eax
10057d2d:	call   DWORD PTR ds:0x10082b08
10057d33:	cmp    DWORD PTR ds:0x10082b10,0x0
10057d3a:	je     0x10057d61
10057d3c:	cmp    DWORD PTR ds:0x10082b0c,0x0
10057d43:	je     0x10057d61
10057d45:	call   DWORD PTR ds:0x10082b10
10057d4b:	mov    DWORD PTR [ebp-0xc],eax
10057d4e:	mov    ecx,DWORD PTR [ebp-0xc]
10057d51:	and    ecx,0x7
10057d54:	mov    DWORD PTR [ebp-0xc],ecx
10057d57:	mov    edx,DWORD PTR [ebp-0xc]
10057d5a:	push   edx
10057d5b:	call   DWORD PTR ds:0x10082b0c
10057d61:	mov    eax,ds:0x10082b24
10057d66:	mov    esp,ebp
10057d68:	pop    ebp
10057d69:	ret    
10057d6a:	int3   
10057d6b:	int3   
10057d6c:	int3   
10057d6d:	int3   
10057d6e:	int3   
10057d6f:	int3   
10057d70:	push   ebp
10057d71:	mov    ebp,esp
10057d73:	cmp    DWORD PTR [ebp+0x8],0x0
10057d77:	jne    0x10057d7d
10057d79:	xor    eax,eax
10057d7b:	jmp    0x10057dd0
10057d7d:	mov    eax,DWORD PTR [ebp+0x8]
10057d80:	movzx  ecx,BYTE PTR [eax]
10057d83:	cmp    ecx,0xff
10057d89:	jne    0x10057daa
10057d8b:	mov    edx,DWORD PTR [ebp+0x8]
10057d8e:	movzx  eax,BYTE PTR [edx+0x1]
10057d92:	cmp    eax,0x25
10057d95:	jne    0x10057daa
10057d97:	mov    ecx,DWORD PTR [ebp+0x8]
10057d9a:	mov    edx,DWORD PTR [ecx+0x2]
10057d9d:	mov    DWORD PTR [ebp+0x8],edx
10057da0:	mov    eax,DWORD PTR [ebp+0x8]
10057da3:	mov    ecx,DWORD PTR [eax]
10057da5:	mov    DWORD PTR [ebp+0x8],ecx
10057da8:	jmp    0x10057dcd
10057daa:	mov    edx,DWORD PTR [ebp+0x8]
10057dad:	movzx  eax,BYTE PTR [edx]
10057db0:	cmp    eax,0xe9
10057db5:	jne    0x10057dcd
10057db7:	cmp    DWORD PTR [ebp+0xc],0x0
10057dbb:	je     0x10057dcd
10057dbd:	mov    ecx,DWORD PTR [ebp+0x8]
10057dc0:	mov    edx,DWORD PTR [ecx+0x1]
10057dc3:	mov    eax,DWORD PTR [ebp+0x8]
10057dc6:	lea    ecx,[eax+edx*1+0x5]
10057dca:	mov    DWORD PTR [ebp+0x8],ecx
10057dcd:	mov    eax,DWORD PTR [ebp+0x8]
10057dd0:	pop    ebp
10057dd1:	ret    0x8
10057dd4:	int3   
10057dd5:	int3   
10057dd6:	int3   
10057dd7:	int3   
10057dd8:	int3   
10057dd9:	int3   
10057dda:	int3   
10057ddb:	int3   
10057ddc:	int3   
10057ddd:	int3   
10057dde:	int3   
10057ddf:	int3   
10057de0:	push   ebp
10057de1:	mov    ebp,esp
10057de3:	sub    esp,0x668
10057de9:	mov    eax,DWORD PTR [ebp+0x8]
10057dec:	push   eax
10057ded:	call   DWORD PTR ds:0x10067228
10057df3:	mov    DWORD PTR [ebp-0x668],eax
10057df9:	cmp    DWORD PTR [ebp-0x668],0x0
10057e00:	jne    0x10057e09
10057e02:	xor    eax,eax
10057e04:	jmp    0x10057f6c
10057e09:	mov    ecx,DWORD PTR [ebp+0xc]
10057e0c:	push   ecx
10057e0d:	mov    edx,DWORD PTR [ebp-0x668]
10057e13:	push   edx
10057e14:	call   DWORD PTR ds:0x100670e4
10057e1a:	mov    DWORD PTR [ebp-0x664],eax
10057e20:	cmp    DWORD PTR [ebp-0x664],0x0
10057e27:	je     0x10057e34
10057e29:	mov    eax,DWORD PTR [ebp-0x664]
10057e2f:	jmp    0x10057f6c
10057e34:	call   0x10057bb0
10057e39:	mov    DWORD PTR [ebp-0x21c],eax
10057e3f:	cmp    DWORD PTR [ebp-0x21c],0x0
10057e46:	je     0x10057e6c
10057e48:	mov    eax,DWORD PTR [ebp-0x21c]
10057e4e:	cmp    DWORD PTR [eax+0x18],0x0
10057e52:	je     0x10057e6c
10057e54:	mov    ecx,DWORD PTR [ebp-0x21c]
10057e5a:	cmp    DWORD PTR [ecx+0x1c],0x0
10057e5e:	je     0x10057e6c
10057e60:	mov    edx,DWORD PTR [ebp-0x21c]
10057e66:	cmp    DWORD PTR [edx+0x20],0x0
10057e6a:	jne    0x10057e73
10057e6c:	xor    eax,eax
10057e6e:	jmp    0x10057f6c
10057e73:	push   0x0
10057e75:	mov    eax,DWORD PTR [ebp-0x668]
10057e7b:	push   eax
10057e7c:	push   0x0
10057e7e:	mov    ecx,DWORD PTR [ebp+0x8]
10057e81:	push   ecx
10057e82:	push   0x0
10057e84:	mov    edx,DWORD PTR [ebp-0x21c]
10057e8a:	mov    eax,DWORD PTR [edx]
10057e8c:	push   eax
10057e8d:	mov    ecx,DWORD PTR [ebp-0x21c]
10057e93:	call   DWORD PTR [ecx+0x18]
10057e96:	push   0x23c
10057e9b:	push   0x0
10057e9d:	lea    edx,[ebp-0x460]
10057ea3:	push   edx
10057ea4:	call   0x10045dc0
10057ea9:	add    esp,0xc
10057eac:	lea    eax,[ebp-0x460]
10057eb2:	push   eax
10057eb3:	mov    ecx,DWORD PTR [ebp-0x668]
10057eb9:	push   ecx
10057eba:	mov    edx,DWORD PTR [ebp-0x21c]
10057ec0:	mov    eax,DWORD PTR [edx]
10057ec2:	push   eax
10057ec3:	mov    ecx,DWORD PTR [ebp-0x21c]
10057ec9:	call   DWORD PTR [ecx+0x1c]
10057ecc:	test   eax,eax
10057ece:	jne    0x10057ed7
10057ed0:	xor    eax,eax
10057ed2:	jmp    0x10057f6c
10057ed7:	lea    edx,[ebp-0x444]
10057edd:	push   edx
10057ede:	lea    eax,[ebp-0x660]
10057ee4:	push   eax
10057ee5:	call   0x10046630
10057eea:	add    esp,0x8
10057eed:	push   0x100810a0
10057ef2:	lea    ecx,[ebp-0x660]
10057ef8:	push   ecx
10057ef9:	call   0x10046640
10057efe:	add    esp,0x8
10057f01:	mov    edx,DWORD PTR [ebp+0xc]
10057f04:	push   edx
10057f05:	lea    eax,[ebp-0x660]
10057f0b:	push   eax
10057f0c:	call   0x10046640
10057f11:	add    esp,0x8
10057f14:	push   0x218
10057f19:	push   0x0
10057f1b:	lea    ecx,[ebp-0x218]
10057f21:	push   ecx
10057f22:	call   0x10045dc0
10057f27:	add    esp,0xc
10057f2a:	mov    DWORD PTR [ebp-0x218],0x18
10057f34:	mov    DWORD PTR [ebp-0x208],0x80
10057f3e:	lea    edx,[ebp-0x218]
10057f44:	push   edx
10057f45:	lea    eax,[ebp-0x660]
10057f4b:	push   eax
10057f4c:	mov    ecx,DWORD PTR [ebp-0x21c]
10057f52:	mov    edx,DWORD PTR [ecx]
10057f54:	push   edx
10057f55:	mov    eax,DWORD PTR [ebp-0x21c]
10057f5b:	call   DWORD PTR [eax+0x20]
10057f5e:	test   eax,eax
10057f60:	jne    0x10057f66
10057f62:	xor    eax,eax
10057f64:	jmp    0x10057f6c
10057f66:	mov    eax,DWORD PTR [ebp-0x214]
10057f6c:	mov    esp,ebp
10057f6e:	pop    ebp
10057f6f:	ret    0x8
10057f72:	int3   
10057f73:	int3   
10057f74:	int3   
10057f75:	int3   
10057f76:	int3   
10057f77:	int3   
10057f78:	int3   
10057f79:	int3   
10057f7a:	int3   
10057f7b:	int3   
10057f7c:	int3   
10057f7d:	int3   
10057f7e:	int3   
10057f7f:	int3   
10057f80:	push   ebp
10057f81:	mov    ebp,esp
10057f83:	sub    esp,0x58
10057f86:	push   0x0
10057f88:	mov    eax,DWORD PTR [ebp+0x10]
10057f8b:	push   eax
10057f8c:	lea    ecx,[ebp-0x58]
10057f8f:	call   0x10057fb0
10057f94:	mov    ecx,DWORD PTR [ebp+0xc]
10057f97:	push   ecx
10057f98:	mov    edx,DWORD PTR [ebp+0x8]
10057f9b:	push   edx
10057f9c:	lea    ecx,[ebp-0x58]
10057f9f:	call   0x100580b0
10057fa4:	mov    esp,ebp
10057fa6:	pop    ebp
10057fa7:	ret    0xc
10057faa:	int3   
10057fab:	int3   
10057fac:	int3   
10057fad:	int3   
10057fae:	int3   
10057faf:	int3   
10057fb0:	push   ebp
10057fb1:	mov    ebp,esp
10057fb3:	sub    esp,0xc
10057fb6:	mov    DWORD PTR [ebp-0x4],ecx
10057fb9:	mov    ecx,DWORD PTR [ebp-0x4]
10057fbc:	call   0x10058050
10057fc1:	mov    ecx,DWORD PTR [ebp-0x4]
10057fc4:	call   0x10058090
10057fc9:	cmp    DWORD PTR [ebp+0x8],0x0
10057fcd:	je     0x10057fd7
10057fcf:	mov    eax,DWORD PTR [ebp+0x8]
10057fd2:	mov    DWORD PTR [ebp-0x8],eax
10057fd5:	jmp    0x10057fe0
10057fd7:	mov    ecx,DWORD PTR [ebp-0x4]
10057fda:	add    ecx,0x14
10057fdd:	mov    DWORD PTR [ebp-0x8],ecx
10057fe0:	mov    edx,DWORD PTR [ebp-0x4]
10057fe3:	mov    eax,DWORD PTR [ebp-0x8]
10057fe6:	mov    DWORD PTR [edx+0x8],eax
10057fe9:	cmp    DWORD PTR [ebp+0xc],0x0
10057fed:	je     0x10057ff7
10057fef:	mov    ecx,DWORD PTR [ebp+0xc]
10057ff2:	mov    DWORD PTR [ebp-0xc],ecx
10057ff5:	jmp    0x10058000
10057ff7:	mov    edx,DWORD PTR [ebp-0x4]
10057ffa:	add    edx,0x10
10057ffd:	mov    DWORD PTR [ebp-0xc],edx
10058000:	mov    eax,DWORD PTR [ebp-0x4]
10058003:	mov    ecx,DWORD PTR [ebp-0xc]
10058006:	mov    DWORD PTR [eax+0xc],ecx
10058009:	mov    edx,DWORD PTR [ebp-0x4]
1005800c:	mov    eax,DWORD PTR [edx+0x8]
1005800f:	mov    DWORD PTR [eax],0x0
10058015:	mov    ecx,DWORD PTR [ebp-0x4]
10058018:	mov    edx,DWORD PTR [ecx+0xc]
1005801b:	mov    DWORD PTR [edx],0x0
10058021:	mov    eax,DWORD PTR [ebp-0x4]
10058024:	mov    esp,ebp
10058026:	pop    ebp
10058027:	ret    0x8
1005802a:	int3   
1005802b:	int3   
1005802c:	int3   
1005802d:	int3   
1005802e:	int3   
1005802f:	int3   
10058030:	push   ebp
10058031:	mov    ebp,esp
10058033:	push   ecx
10058034:	mov    DWORD PTR [ebp-0x4],ecx
10058037:	mov    eax,DWORD PTR [ebp-0x4]
1005803a:	mov    DWORD PTR [eax],0x1
10058040:	mov    esp,ebp
10058042:	pop    ebp
10058043:	ret    
10058044:	int3   
10058045:	int3   
10058046:	int3   
10058047:	int3   
10058048:	int3   
10058049:	int3   
1005804a:	int3   
1005804b:	int3   
1005804c:	int3   
1005804d:	int3   
1005804e:	int3   
1005804f:	int3   
10058050:	push   ebp
10058051:	mov    ebp,esp
10058053:	push   ecx
10058054:	mov    DWORD PTR [ebp-0x4],ecx
10058057:	mov    eax,DWORD PTR [ebp-0x4]
1005805a:	mov    DWORD PTR [eax],0x0
10058060:	mov    esp,ebp
10058062:	pop    ebp
10058063:	ret    
10058064:	int3   
10058065:	int3   
10058066:	int3   
10058067:	int3   
10058068:	int3   
10058069:	int3   
1005806a:	int3   
1005806b:	int3   
1005806c:	int3   
1005806d:	int3   
1005806e:	int3   
1005806f:	int3   
10058070:	push   ebp
10058071:	mov    ebp,esp
10058073:	push   ecx
10058074:	mov    DWORD PTR [ebp-0x4],ecx
10058077:	mov    eax,DWORD PTR [ebp-0x4]
1005807a:	mov    DWORD PTR [eax+0x4],0x1
10058081:	mov    esp,ebp
10058083:	pop    ebp
10058084:	ret    
10058085:	int3   
10058086:	int3   
10058087:	int3   
10058088:	int3   
10058089:	int3   
1005808a:	int3   
1005808b:	int3   
1005808c:	int3   
1005808d:	int3   
1005808e:	int3   
1005808f:	int3   
10058090:	push   ebp
10058091:	mov    ebp,esp
10058093:	push   ecx
10058094:	mov    DWORD PTR [ebp-0x4],ecx
10058097:	mov    eax,DWORD PTR [ebp-0x4]
1005809a:	mov    DWORD PTR [eax+0x4],0x0
100580a1:	mov    esp,ebp
100580a3:	pop    ebp
100580a4:	ret    
100580a5:	int3   
100580a6:	int3   
100580a7:	int3   
100580a8:	int3   
100580a9:	int3   
100580aa:	int3   
100580ab:	int3   
100580ac:	int3   
100580ad:	int3   
100580ae:	int3   
100580af:	int3   
100580b0:	push   ebp
100580b1:	mov    ebp,esp
100580b3:	sub    esp,0x8
100580b6:	mov    DWORD PTR [ebp-0x8],ecx
100580b9:	cmp    DWORD PTR [ebp+0x8],0x0
100580bd:	jne    0x100580c8
100580bf:	mov    eax,DWORD PTR [ebp-0x8]
100580c2:	add    eax,0x18
100580c5:	mov    DWORD PTR [ebp+0x8],eax
100580c8:	cmp    DWORD PTR [ebp+0xc],0x0
100580cc:	jne    0x100580da
100580ce:	push   0xd
100580d0:	call   DWORD PTR ds:0x10067150
100580d6:	xor    eax,eax
100580d8:	jmp    0x100580ff
100580da:	mov    ecx,DWORD PTR [ebp+0xc]
100580dd:	movzx  edx,BYTE PTR [ecx]
100580e0:	lea    eax,[edx*8+0x1006cab8]
100580e7:	mov    DWORD PTR [ebp-0x4],eax
100580ea:	mov    ecx,DWORD PTR [ebp+0xc]
100580ed:	push   ecx
100580ee:	mov    edx,DWORD PTR [ebp+0x8]
100580f1:	push   edx
100580f2:	mov    eax,DWORD PTR [ebp-0x4]
100580f5:	push   eax
100580f6:	mov    edx,DWORD PTR [ebp-0x4]
100580f9:	mov    ecx,DWORD PTR [ebp-0x8]
100580fc:	call   DWORD PTR [edx+0x4]
100580ff:	mov    esp,ebp
10058101:	pop    ebp
10058102:	ret    0x8
10058105:	int3   
10058106:	int3   
10058107:	int3   
10058108:	int3   
10058109:	int3   
1005810a:	int3   
1005810b:	int3   
1005810c:	int3   
1005810d:	int3   
1005810e:	int3   
1005810f:	int3   
10058110:	push   ebp
10058111:	mov    ebp,esp
10058113:	sub    esp,0x1c
10058116:	mov    DWORD PTR [ebp-0x10],ecx
10058119:	mov    eax,DWORD PTR [ebp+0x8]
1005811c:	mov    ecx,DWORD PTR [eax]
1005811e:	shr    ecx,0x14
10058121:	and    ecx,0xf
10058124:	and    ecx,0x2
10058127:	test   ecx,ecx
10058129:	je     0x1005815a
1005812b:	mov    edx,DWORD PTR [ebp-0x10]
1005812e:	cmp    DWORD PTR [edx+0x4],0x0
10058132:	je     0x10058144
10058134:	mov    eax,DWORD PTR [ebp+0x8]
10058137:	mov    ecx,DWORD PTR [eax]
10058139:	shr    ecx,0xb
1005813c:	and    ecx,0x7
1005813f:	mov    DWORD PTR [ebp-0x14],ecx
10058142:	jmp    0x10058152
10058144:	mov    edx,DWORD PTR [ebp+0x8]
10058147:	mov    eax,DWORD PTR [edx]
10058149:	shr    eax,0x8
1005814c:	and    eax,0x7
1005814f:	mov    DWORD PTR [ebp-0x14],eax
10058152:	mov    ecx,DWORD PTR [ebp-0x14]
10058155:	mov    DWORD PTR [ebp-0x18],ecx
10058158:	jmp    0x10058186
1005815a:	mov    edx,DWORD PTR [ebp-0x10]
1005815d:	cmp    DWORD PTR [edx],0x0
10058160:	je     0x10058172
10058162:	mov    eax,DWORD PTR [ebp+0x8]
10058165:	mov    ecx,DWORD PTR [eax]
10058167:	shr    ecx,0xb
1005816a:	and    ecx,0x7
1005816d:	mov    DWORD PTR [ebp-0x1c],ecx
10058170:	jmp    0x10058180
10058172:	mov    edx,DWORD PTR [ebp+0x8]
10058175:	mov    eax,DWORD PTR [edx]
10058177:	shr    eax,0x8
1005817a:	and    eax,0x7
1005817d:	mov    DWORD PTR [ebp-0x1c],eax
10058180:	mov    ecx,DWORD PTR [ebp-0x1c]
10058183:	mov    DWORD PTR [ebp-0x18],ecx
10058186:	mov    edx,DWORD PTR [ebp-0x18]
10058189:	mov    DWORD PTR [ebp-0x8],edx
1005818c:	mov    eax,DWORD PTR [ebp-0x8]
1005818f:	mov    DWORD PTR [ebp-0x4],eax
10058192:	mov    ecx,DWORD PTR [ebp+0x8]
10058195:	mov    edx,DWORD PTR [ecx]
10058197:	shr    edx,0xe
1005819a:	and    edx,0x7
1005819d:	test   edx,edx
1005819f:	jbe    0x1005824e
100581a5:	mov    eax,DWORD PTR [ebp+0x8]
100581a8:	mov    ecx,DWORD PTR [eax]
100581aa:	shr    ecx,0xe
100581ad:	and    ecx,0x7
100581b0:	mov    edx,DWORD PTR [ebp+0x10]
100581b3:	mov    al,BYTE PTR [edx+ecx*1]
100581b6:	mov    BYTE PTR [ebp-0x9],al
100581b9:	movzx  ecx,BYTE PTR [ebp-0x9]
100581bd:	mov    dl,BYTE PTR [ecx+0x1006c9b8]
100581c3:	mov    BYTE PTR [ebp-0xa],dl
100581c6:	movzx  eax,BYTE PTR [ebp-0xa]
100581ca:	and    eax,0x10
100581cd:	test   eax,eax
100581cf:	je     0x1005823f
100581d1:	mov    ecx,DWORD PTR [ebp+0x8]
100581d4:	mov    edx,DWORD PTR [ecx]
100581d6:	shr    edx,0xe
100581d9:	and    edx,0x7
100581dc:	mov    eax,DWORD PTR [ebp+0x10]
100581df:	mov    cl,BYTE PTR [eax+edx*1+0x1]
100581e3:	mov    BYTE PTR [ebp-0xb],cl
100581e6:	movzx  edx,BYTE PTR [ebp-0xb]
100581ea:	and    edx,0x7
100581ed:	cmp    edx,0x5
100581f0:	jne    0x1005823f
100581f2:	movzx  eax,BYTE PTR [ebp-0x9]
100581f6:	and    eax,0xc0
100581fb:	test   eax,eax
100581fd:	jne    0x1005820a
100581ff:	mov    ecx,DWORD PTR [ebp-0x4]
10058202:	add    ecx,0x4
10058205:	mov    DWORD PTR [ebp-0x4],ecx
10058208:	jmp    0x1005823f
1005820a:	movzx  edx,BYTE PTR [ebp-0x9]
1005820e:	and    edx,0xc0
10058214:	cmp    edx,0x40
10058217:	jne    0x10058224
10058219:	mov    eax,DWORD PTR [ebp-0x4]
1005821c:	add    eax,0x1
1005821f:	mov    DWORD PTR [ebp-0x4],eax
10058222:	jmp    0x1005823f
10058224:	movzx  ecx,BYTE PTR [ebp-0x9]
10058228:	and    ecx,0xc0
1005822e:	cmp    ecx,0x80
10058234:	jne    0x1005823f
10058236:	mov    edx,DWORD PTR [ebp-0x4]
10058239:	add    edx,0x4
1005823c:	mov    DWORD PTR [ebp-0x4],edx
1005823f:	movzx  eax,BYTE PTR [ebp-0xa]
10058243:	and    eax,0xf
10058246:	mov    ecx,DWORD PTR [ebp-0x4]
10058249:	add    ecx,eax
1005824b:	mov    DWORD PTR [ebp-0x4],ecx
1005824e:	mov    edx,DWORD PTR [ebp-0x4]
10058251:	push   edx
10058252:	mov    eax,DWORD PTR [ebp+0x10]
10058255:	push   eax
10058256:	mov    ecx,DWORD PTR [ebp+0xc]
10058259:	push   ecx
1005825a:	call   0x10045340
1005825f:	add    esp,0xc
10058262:	mov    edx,DWORD PTR [ebp+0x8]
10058265:	mov    eax,DWORD PTR [edx]
10058267:	shl    eax,0xc
1005826a:	sar    eax,0x1d
1005826d:	test   eax,eax
1005826f:	je     0x10058299
10058271:	mov    ecx,DWORD PTR [ebp+0x8]
10058274:	mov    edx,DWORD PTR [ecx]
10058276:	shl    edx,0xc
10058279:	sar    edx,0x1d
1005827c:	push   edx
1005827d:	mov    eax,DWORD PTR [ebp-0x8]
10058280:	push   eax
10058281:	mov    ecx,DWORD PTR [ebp+0x10]
10058284:	push   ecx
10058285:	mov    edx,DWORD PTR [ebp+0xc]
10058288:	push   edx
10058289:	mov    ecx,DWORD PTR [ebp-0x10]
1005828c:	call   0x10058340
10058291:	mov    ecx,DWORD PTR [ebp-0x10]
10058294:	mov    edx,DWORD PTR [ecx+0x8]
10058297:	mov    DWORD PTR [edx],eax
10058299:	mov    eax,DWORD PTR [ebp+0x8]
1005829c:	mov    ecx,DWORD PTR [eax]
1005829e:	shr    ecx,0x14
100582a1:	and    ecx,0xf
100582a4:	and    ecx,0x4
100582a7:	test   ecx,ecx
100582a9:	je     0x100582bd
100582ab:	mov    edx,DWORD PTR [ebp-0x10]
100582ae:	mov    eax,DWORD PTR [edx+0xc]
100582b1:	mov    ecx,DWORD PTR [eax]
100582b3:	neg    ecx
100582b5:	mov    edx,DWORD PTR [ebp-0x10]
100582b8:	mov    eax,DWORD PTR [edx+0xc]
100582bb:	mov    DWORD PTR [eax],ecx
100582bd:	mov    ecx,DWORD PTR [ebp+0x8]
100582c0:	mov    edx,DWORD PTR [ecx]
100582c2:	shr    edx,0x14
100582c5:	and    edx,0xf
100582c8:	and    edx,0x1
100582cb:	test   edx,edx
100582cd:	je     0x100582db
100582cf:	mov    eax,DWORD PTR [ebp-0x10]
100582d2:	mov    ecx,DWORD PTR [eax+0x8]
100582d5:	mov    DWORD PTR [ecx],0xffffffff
100582db:	mov    eax,DWORD PTR [ebp+0x10]
100582de:	add    eax,DWORD PTR [ebp-0x4]
100582e1:	mov    esp,ebp
100582e3:	pop    ebp
100582e4:	ret    0xc
100582e7:	int3   
100582e8:	int3   
100582e9:	int3   
100582ea:	int3   
100582eb:	int3   
100582ec:	int3   
100582ed:	int3   
100582ee:	int3   
100582ef:	int3   
100582f0:	push   ebp
100582f1:	mov    ebp,esp
100582f3:	push   ecx
100582f4:	mov    DWORD PTR [ebp-0x4],ecx
100582f7:	mov    eax,DWORD PTR [ebp+0x10]
100582fa:	push   eax
100582fb:	mov    ecx,DWORD PTR [ebp+0xc]
100582fe:	push   ecx
100582ff:	mov    edx,DWORD PTR [ebp+0x8]
10058302:	push   edx
10058303:	mov    ecx,DWORD PTR [ebp-0x4]
10058306:	call   0x10058110
1005830b:	mov    eax,DWORD PTR [ebp+0x10]
1005830e:	movzx  ecx,BYTE PTR [eax+0x1]
10058312:	lea    edx,[ecx*8+0x1006cab8]
10058319:	mov    DWORD PTR [ebp+0x8],edx
1005831c:	mov    eax,DWORD PTR [ebp+0x10]
1005831f:	add    eax,0x1
10058322:	push   eax
10058323:	mov    ecx,DWORD PTR [ebp+0xc]
10058326:	add    ecx,0x1
10058329:	push   ecx
1005832a:	mov    edx,DWORD PTR [ebp+0x8]
1005832d:	push   edx
1005832e:	mov    eax,DWORD PTR [ebp+0x8]
10058331:	mov    ecx,DWORD PTR [ebp-0x4]
10058334:	call   DWORD PTR [eax+0x4]
10058337:	mov    esp,ebp
10058339:	pop    ebp
1005833a:	ret    0xc
1005833d:	int3   
1005833e:	int3   
1005833f:	int3   
10058340:	push   ebp
10058341:	mov    ebp,esp
10058343:	sub    esp,0x20
10058346:	mov    DWORD PTR [ebp-0x18],ecx
10058349:	mov    eax,DWORD PTR [ebp+0x10]
1005834c:	sub    eax,DWORD PTR [ebp+0x14]
1005834f:	mov    DWORD PTR [ebp-0x10],eax
10058352:	mov    DWORD PTR [ebp-0x4],0x0
10058359:	mov    ecx,DWORD PTR [ebp+0x8]
1005835c:	add    ecx,DWORD PTR [ebp+0x14]
1005835f:	mov    DWORD PTR [ebp-0x14],ecx
10058362:	mov    DWORD PTR [ebp-0xc],0x0
10058369:	mov    edx,DWORD PTR [ebp-0x10]
1005836c:	mov    DWORD PTR [ebp-0x1c],edx
1005836f:	cmp    DWORD PTR [ebp-0x1c],0x1
10058373:	je     0x10058383
10058375:	cmp    DWORD PTR [ebp-0x1c],0x2
10058379:	je     0x1005839a
1005837b:	cmp    DWORD PTR [ebp-0x1c],0x4
1005837f:	je     0x100583b1
10058381:	jmp    0x100583c5
10058383:	mov    eax,DWORD PTR [ebp-0x14]
10058386:	movsx  ecx,BYTE PTR [eax]
10058389:	mov    DWORD PTR [ebp-0xc],ecx
1005838c:	mov    edx,DWORD PTR [ebp-0x18]
1005838f:	mov    eax,DWORD PTR [edx+0xc]
10058392:	mov    DWORD PTR [eax],0x3
10058398:	jmp    0x100583c5
1005839a:	mov    ecx,DWORD PTR [ebp-0x14]
1005839d:	movsx  edx,WORD PTR [ecx]
100583a0:	mov    DWORD PTR [ebp-0xc],edx
100583a3:	mov    eax,DWORD PTR [ebp-0x18]
100583a6:	mov    ecx,DWORD PTR [eax+0xc]
100583a9:	mov    DWORD PTR [ecx],0x2
100583af:	jmp    0x100583c5
100583b1:	mov    edx,DWORD PTR [ebp-0x14]
100583b4:	mov    eax,DWORD PTR [edx]
100583b6:	mov    DWORD PTR [ebp-0xc],eax
100583b9:	mov    ecx,DWORD PTR [ebp-0x18]
100583bc:	mov    edx,DWORD PTR [ecx+0xc]
100583bf:	mov    DWORD PTR [edx],0x0
100583c5:	mov    eax,DWORD PTR [ebp+0xc]
100583c8:	add    eax,DWORD PTR [ebp+0x10]
100583cb:	add    eax,DWORD PTR [ebp-0xc]
100583ce:	mov    DWORD PTR [ebp-0x4],eax
100583d1:	mov    ecx,DWORD PTR [ebp+0x8]
100583d4:	sub    ecx,DWORD PTR [ebp+0xc]
100583d7:	mov    edx,DWORD PTR [ebp-0xc]
100583da:	sub    edx,ecx
100583dc:	mov    DWORD PTR [ebp-0x8],edx
100583df:	mov    eax,DWORD PTR [ebp-0x10]
100583e2:	mov    DWORD PTR [ebp-0x20],eax
100583e5:	cmp    DWORD PTR [ebp-0x20],0x1
100583e9:	je     0x100583f9
100583eb:	cmp    DWORD PTR [ebp-0x20],0x2
100583ef:	je     0x10058403
100583f1:	cmp    DWORD PTR [ebp-0x20],0x4
100583f5:	je     0x1005840f
100583f7:	jmp    0x10058417
100583f9:	mov    ecx,DWORD PTR [ebp-0x14]
100583fc:	mov    dl,BYTE PTR [ebp-0x8]
100583ff:	mov    BYTE PTR [ecx],dl
10058401:	jmp    0x10058417
10058403:	mov    eax,DWORD PTR [ebp-0x14]
10058406:	mov    cx,WORD PTR [ebp-0x8]
1005840a:	mov    WORD PTR [eax],cx
1005840d:	jmp    0x10058417
1005840f:	mov    edx,DWORD PTR [ebp-0x14]
10058412:	mov    eax,DWORD PTR [ebp-0x8]
10058415:	mov    DWORD PTR [edx],eax
10058417:	mov    eax,DWORD PTR [ebp-0x4]
1005841a:	mov    esp,ebp
1005841c:	pop    ebp
1005841d:	ret    0x10
10058420:	push   ebp
10058421:	mov    ebp,esp
10058423:	push   ecx
10058424:	mov    DWORD PTR [ebp-0x4],ecx
10058427:	mov    eax,DWORD PTR [ebp+0x10]
1005842a:	add    eax,0x1
1005842d:	mov    esp,ebp
1005842f:	pop    ebp
10058430:	ret    0xc
10058433:	int3   
10058434:	int3   
10058435:	int3   
10058436:	int3   
10058437:	int3   
10058438:	int3   
10058439:	int3   
1005843a:	int3   
1005843b:	int3   
1005843c:	int3   
1005843d:	int3   
1005843e:	int3   
1005843f:	int3   
10058440:	push   ebp
10058441:	mov    ebp,esp
10058443:	push   ecx
10058444:	mov    DWORD PTR [ebp-0x4],ecx
10058447:	mov    eax,DWORD PTR [ebp+0x10]
1005844a:	push   eax
1005844b:	mov    ecx,DWORD PTR [ebp+0xc]
1005844e:	push   ecx
1005844f:	mov    edx,DWORD PTR [ebp+0x8]
10058452:	push   edx
10058453:	mov    ecx,DWORD PTR [ebp-0x4]
10058456:	call   0x10058110
1005845b:	mov    eax,DWORD PTR [ebp+0x10]
1005845e:	movzx  ecx,BYTE PTR [eax+0x1]
10058462:	lea    edx,[ecx*8+0x1006d2c0]
10058469:	mov    DWORD PTR [ebp+0x8],edx
1005846c:	mov    eax,DWORD PTR [ebp+0x10]
1005846f:	add    eax,0x1
10058472:	push   eax
10058473:	mov    ecx,DWORD PTR [ebp+0xc]
10058476:	add    ecx,0x1
10058479:	push   ecx
1005847a:	mov    edx,DWORD PTR [ebp+0x8]
1005847d:	push   edx
1005847e:	mov    eax,DWORD PTR [ebp+0x8]
10058481:	mov    ecx,DWORD PTR [ebp-0x4]
10058484:	call   DWORD PTR [eax+0x4]
10058487:	mov    esp,ebp
10058489:	pop    ebp
1005848a:	ret    0xc
1005848d:	int3   
1005848e:	int3   
1005848f:	int3   
10058490:	push   ebp
10058491:	mov    ebp,esp
10058493:	push   ecx
10058494:	mov    DWORD PTR [ebp-0x4],ecx
10058497:	mov    ecx,DWORD PTR [ebp-0x4]
1005849a:	call   0x10058030
1005849f:	mov    eax,DWORD PTR [ebp+0x10]
100584a2:	push   eax
100584a3:	mov    ecx,DWORD PTR [ebp+0xc]
100584a6:	push   ecx
100584a7:	mov    edx,DWORD PTR [ebp+0x8]
100584aa:	push   edx
100584ab:	mov    ecx,DWORD PTR [ebp-0x4]
100584ae:	call   0x100582f0
100584b3:	mov    esp,ebp
100584b5:	pop    ebp
100584b6:	ret    0xc
100584b9:	int3   
100584ba:	int3   
100584bb:	int3   
100584bc:	int3   
100584bd:	int3   
100584be:	int3   
100584bf:	int3   
100584c0:	push   ebp
100584c1:	mov    ebp,esp
100584c3:	push   ecx
100584c4:	mov    DWORD PTR [ebp-0x4],ecx
100584c7:	mov    ecx,DWORD PTR [ebp-0x4]
100584ca:	call   0x10058070
100584cf:	mov    eax,DWORD PTR [ebp+0x10]
100584d2:	push   eax
100584d3:	mov    ecx,DWORD PTR [ebp+0xc]
100584d6:	push   ecx
100584d7:	mov    edx,DWORD PTR [ebp+0x8]
100584da:	push   edx
100584db:	mov    ecx,DWORD PTR [ebp-0x4]
100584de:	call   0x100582f0
100584e3:	mov    esp,ebp
100584e5:	pop    ebp
100584e6:	ret    0xc
100584e9:	int3   
100584ea:	int3   
100584eb:	int3   
100584ec:	int3   
100584ed:	int3   
100584ee:	int3   
100584ef:	int3   
100584f0:	push   ebp
100584f1:	mov    ebp,esp
100584f3:	sub    esp,0x14
100584f6:	mov    DWORD PTR [ebp-0x14],ecx
100584f9:	mov    eax,DWORD PTR [ebp+0x10]
100584fc:	movzx  ecx,BYTE PTR [eax+0x1]
10058500:	and    ecx,0x38
10058503:	test   ecx,ecx
10058505:	jne    0x10058529
10058507:	mov    DWORD PTR [ebp-0x10],0x5bf6
1005850e:	mov    DWORD PTR [ebp-0xc],0x10058110
10058515:	mov    edx,DWORD PTR [ebp+0x10]
10058518:	push   edx
10058519:	mov    eax,DWORD PTR [ebp+0xc]
1005851c:	push   eax
1005851d:	lea    ecx,[ebp-0x10]
10058520:	push   ecx
10058521:	mov    ecx,DWORD PTR [ebp-0x14]
10058524:	call   DWORD PTR [ebp-0xc]
10058527:	jmp    0x10058549
10058529:	mov    DWORD PTR [ebp-0x8],0x52f6
10058530:	mov    DWORD PTR [ebp-0x4],0x10058110
10058537:	mov    edx,DWORD PTR [ebp+0x10]
1005853a:	push   edx
1005853b:	mov    eax,DWORD PTR [ebp+0xc]
1005853e:	push   eax
1005853f:	lea    ecx,[ebp-0x8]
10058542:	push   ecx
10058543:	mov    ecx,DWORD PTR [ebp-0x14]
10058546:	call   DWORD PTR [ebp-0x4]
10058549:	mov    esp,ebp
1005854b:	pop    ebp
1005854c:	ret    0xc
1005854f:	int3   
10058550:	push   ebp
10058551:	mov    ebp,esp
10058553:	sub    esp,0x14
10058556:	mov    DWORD PTR [ebp-0x14],ecx
10058559:	mov    eax,DWORD PTR [ebp+0x10]
1005855c:	movzx  ecx,BYTE PTR [eax+0x1]
10058560:	and    ecx,0x38
10058563:	test   ecx,ecx
10058565:	jne    0x10058589
10058567:	mov    DWORD PTR [ebp-0x10],0x66f7
1005856e:	mov    DWORD PTR [ebp-0xc],0x10058110
10058575:	mov    edx,DWORD PTR [ebp+0x10]
10058578:	push   edx
10058579:	mov    eax,DWORD PTR [ebp+0xc]
1005857c:	push   eax
1005857d:	lea    ecx,[ebp-0x10]
10058580:	push   ecx
10058581:	mov    ecx,DWORD PTR [ebp-0x14]
10058584:	call   DWORD PTR [ebp-0xc]
10058587:	jmp    0x100585a9
10058589:	mov    DWORD PTR [ebp-0x8],0x52f7
10058590:	mov    DWORD PTR [ebp-0x4],0x10058110
10058597:	mov    edx,DWORD PTR [ebp+0x10]
1005859a:	push   edx
1005859b:	mov    eax,DWORD PTR [ebp+0xc]
1005859e:	push   eax
1005859f:	lea    ecx,[ebp-0x8]
100585a2:	push   ecx
100585a3:	mov    ecx,DWORD PTR [ebp-0x14]
100585a6:	call   DWORD PTR [ebp-0x4]
100585a9:	mov    esp,ebp
100585ab:	pop    ebp
100585ac:	ret    0xc
100585af:	int3   
100585b0:	push   ebp
100585b1:	mov    ebp,esp
100585b3:	sub    esp,0x10
100585b6:	mov    DWORD PTR [ebp-0x10],ecx
100585b9:	mov    eax,DWORD PTR [ebp+0x10]
100585bc:	movzx  ecx,BYTE PTR [eax+0x1]
100585c0:	cmp    ecx,0x15
100585c3:	je     0x100585d1
100585c5:	mov    edx,DWORD PTR [ebp+0x10]
100585c8:	movzx  eax,BYTE PTR [edx+0x1]
100585cc:	cmp    eax,0x25
100585cf:	jne    0x100585e9
100585d1:	mov    ecx,DWORD PTR [ebp+0x10]
100585d4:	mov    edx,DWORD PTR [ecx+0x2]
100585d7:	mov    DWORD PTR [ebp-0xc],edx
100585da:	mov    eax,DWORD PTR [ebp-0x10]
100585dd:	mov    ecx,DWORD PTR [eax+0x8]
100585e0:	mov    edx,DWORD PTR [ebp-0xc]
100585e3:	mov    eax,DWORD PTR [edx]
100585e5:	mov    DWORD PTR [ecx],eax
100585e7:	jmp    0x10058631
100585e9:	mov    ecx,DWORD PTR [ebp+0x10]
100585ec:	movzx  edx,BYTE PTR [ecx+0x1]
100585f0:	and    edx,0x38
100585f3:	cmp    edx,0x10
100585f6:	je     0x10058625
100585f8:	mov    eax,DWORD PTR [ebp+0x10]
100585fb:	movzx  ecx,BYTE PTR [eax+0x1]
100585ff:	and    ecx,0x38
10058602:	cmp    ecx,0x18
10058605:	je     0x10058625
10058607:	mov    edx,DWORD PTR [ebp+0x10]
1005860a:	movzx  eax,BYTE PTR [edx+0x1]
1005860e:	and    eax,0x38
10058611:	cmp    eax,0x20
10058614:	je     0x10058625
10058616:	mov    ecx,DWORD PTR [ebp+0x10]
10058619:	movzx  edx,BYTE PTR [ecx+0x1]
1005861d:	and    edx,0x38
10058620:	cmp    edx,0x28
10058623:	jne    0x10058631
10058625:	mov    eax,DWORD PTR [ebp-0x10]
10058628:	mov    ecx,DWORD PTR [eax+0x8]
1005862b:	mov    DWORD PTR [ecx],0xffffffff
10058631:	mov    DWORD PTR [ebp-0x8],0x52ff
10058638:	mov    DWORD PTR [ebp-0x4],0x10058110
1005863f:	mov    edx,DWORD PTR [ebp+0x10]
10058642:	push   edx
10058643:	mov    eax,DWORD PTR [ebp+0xc]
10058646:	push   eax
10058647:	lea    ecx,[ebp-0x8]
1005864a:	push   ecx
1005864b:	mov    ecx,DWORD PTR [ebp-0x10]
1005864e:	call   DWORD PTR [ebp-0x4]
10058651:	mov    esp,ebp
10058653:	pop    ebp
10058654:	ret    0xc
10058657:	push   ebp
10058658:	mov    ebp,esp
1005865a:	sub    esp,0x18
1005865d:	push   ebx
1005865e:	push   DWORD PTR [ebp+0xc]
10058661:	lea    ecx,[ebp-0x18]
10058664:	call   0x100456a5
10058669:	mov    ebx,DWORD PTR [ebp+0x8]
1005866c:	cmp    ebx,0x100
10058672:	jae    0x100586c8
10058674:	mov    ecx,DWORD PTR [ebp-0x18]
10058677:	cmp    DWORD PTR [ecx+0xac],0x1
1005867e:	jle    0x10058694
10058680:	lea    eax,[ebp-0x18]
10058683:	push   eax
10058684:	push   0x2
10058686:	push   ebx
10058687:	call   0x1004b36f
1005868c:	mov    ecx,DWORD PTR [ebp-0x18]
1005868f:	add    esp,0xc
10058692:	jmp    0x100586a1
10058694:	mov    eax,DWORD PTR [ecx+0xc8]
1005869a:	movzx  eax,BYTE PTR [eax+ebx*2]
1005869e:	and    eax,0x2
100586a1:	test   eax,eax
100586a3:	je     0x100586b4
100586a5:	mov    eax,DWORD PTR [ecx+0xd0]
100586ab:	movzx  eax,BYTE PTR [eax+ebx*1]
100586af:	jmp    0x1005875f
100586b4:	cmp    BYTE PTR [ebp-0xc],0x0
100586b8:	je     0x100586c1
100586ba:	mov    eax,DWORD PTR [ebp-0x10]
100586bd:	and    DWORD PTR [eax+0x70],0xfffffffd
100586c1:	mov    eax,ebx
100586c3:	jmp    0x1005876c
100586c8:	mov    eax,DWORD PTR [ebp-0x18]
100586cb:	cmp    DWORD PTR [eax+0xac],0x1
100586d2:	jle    0x10058705
100586d4:	mov    DWORD PTR [ebp+0x8],ebx
100586d7:	sar    DWORD PTR [ebp+0x8],0x8
100586db:	lea    eax,[ebp-0x18]
100586de:	push   eax
100586df:	mov    eax,DWORD PTR [ebp+0x8]
100586e2:	and    eax,0xff
100586e7:	push   eax
100586e8:	call   0x1004b32b
100586ed:	test   eax,eax
100586ef:	pop    ecx
100586f0:	pop    ecx
100586f1:	je     0x10058705
100586f3:	mov    al,BYTE PTR [ebp+0x8]
100586f6:	push   0x2
100586f8:	mov    BYTE PTR [ebp-0x4],al
100586fb:	mov    BYTE PTR [ebp-0x3],bl
100586fe:	mov    BYTE PTR [ebp-0x2],0x0
10058702:	pop    ecx
10058703:	jmp    0x1005871a
10058705:	call   0x10046c41
1005870a:	mov    DWORD PTR [eax],0x2a
10058710:	xor    ecx,ecx
10058712:	mov    BYTE PTR [ebp-0x4],bl
10058715:	mov    BYTE PTR [ebp-0x3],0x0
10058719:	inc    ecx
1005871a:	mov    eax,DWORD PTR [ebp-0x18]
1005871d:	push   0x1
1005871f:	push   DWORD PTR [eax+0x4]
10058722:	lea    edx,[ebp-0x8]
10058725:	push   0x3
10058727:	push   edx
10058728:	push   ecx
10058729:	lea    ecx,[ebp-0x4]
1005872c:	push   ecx
1005872d:	push   0x200
10058732:	push   DWORD PTR [eax+0x14]
10058735:	lea    eax,[ebp-0x18]
10058738:	push   eax
10058739:	call   0x1004b2e8
1005873e:	add    esp,0x24
10058741:	test   eax,eax
10058743:	je     0x100586b4
10058749:	cmp    eax,0x1
1005874c:	jne    0x10058754
1005874e:	movzx  eax,BYTE PTR [ebp-0x8]
10058752:	jmp    0x1005875f
10058754:	movzx  ecx,BYTE PTR [ebp-0x7]
10058758:	xor    eax,eax
1005875a:	mov    ah,BYTE PTR [ebp-0x8]
1005875d:	or     eax,ecx
1005875f:	cmp    BYTE PTR [ebp-0xc],0x0
10058763:	je     0x1005876c
10058765:	mov    ecx,DWORD PTR [ebp-0x10]
10058768:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005876c:	pop    ebx
1005876d:	leave  
1005876e:	ret    
1005876f:	cmp    DWORD PTR ds:0x10082330,0x0
10058776:	jne    0x10058788
10058778:	mov    eax,DWORD PTR [esp+0x4]
1005877c:	lea    ecx,[eax-0x61]
1005877f:	cmp    ecx,0x19
10058782:	ja     0x10058795
10058784:	add    eax,0xffffffe0
10058787:	ret    
10058788:	push   0x0
1005878a:	push   DWORD PTR [esp+0x8]
1005878e:	call   0x10058657
10058793:	pop    ecx
10058794:	pop    ecx
10058795:	ret    
10058796:	mov    eax,DWORD PTR [esp+0x4]
1005879a:	mov    dx,WORD PTR [esp+0x8]
1005879f:	jmp    0x100587a8
100587a1:	cmp    cx,dx
100587a4:	je     0x100587b7
100587a6:	inc    eax
100587a7:	inc    eax
100587a8:	movzx  ecx,WORD PTR [eax]
100587ab:	test   cx,cx
100587ae:	jne    0x100587a1
100587b0:	cmp    WORD PTR [eax],dx
100587b3:	je     0x100587b7
100587b5:	xor    eax,eax
100587b7:	ret    
100587b8:	push   ebp
100587b9:	mov    ebp,esp
100587bb:	sub    esp,0x14
100587be:	push   ebx
100587bf:	push   esi
100587c0:	push   edi
100587c1:	mov    edi,DWORD PTR [ebp+0x8]
100587c4:	xor    ebx,ebx
100587c6:	cmp    edi,ebx
100587c8:	je     0x100587eb
100587ca:	cmp    DWORD PTR [ebp+0xc],ebx
100587cd:	jbe    0x100587f0
100587cf:	cmp    edi,ebx
100587d1:	je     0x1005888f
100587d7:	push   DWORD PTR [ebp+0xc]
100587da:	push   edi
100587db:	call   0x10050b81
100587e0:	cmp    eax,DWORD PTR [ebp+0xc]
100587e3:	pop    ecx
100587e4:	pop    ecx
100587e5:	jb     0x1005880e
100587e7:	mov    BYTE PTR [edi],bl
100587e9:	jmp    0x100587f0
100587eb:	cmp    DWORD PTR [ebp+0xc],ebx
100587ee:	je     0x100587cf
100587f0:	call   0x10046c41
100587f5:	push   0x16
100587f7:	pop    esi
100587f8:	push   ebx
100587f9:	push   ebx
100587fa:	push   ebx
100587fb:	push   ebx
100587fc:	push   ebx
100587fd:	mov    DWORD PTR [eax],esi
100587ff:	call   0x100435e1
10058804:	add    esp,0x14
10058807:	mov    eax,esi
10058809:	jmp    0x10058891
1005880e:	push   DWORD PTR [ebp+0x10]
10058811:	lea    ecx,[ebp-0x14]
10058814:	call   0x100456a5
10058819:	mov    esi,edi
1005881b:	cmp    BYTE PTR [esi],bl
1005881d:	je     0x10058881
1005881f:	mov    cl,BYTE PTR [edi]
10058821:	mov    edx,DWORD PTR [ebp-0x10]
10058824:	movzx  eax,cl
10058827:	add    eax,edx
10058829:	mov    dl,BYTE PTR [eax+0x1d]
1005882c:	test   dl,0x4
1005882f:	je     0x1005886a
10058831:	mov    eax,DWORD PTR [ebp-0x10]
10058834:	push   0x1
10058836:	push   DWORD PTR [eax+0x4]
10058839:	lea    ecx,[ebp-0x4]
1005883c:	push   0x2
1005883e:	push   ecx
1005883f:	push   0x2
10058841:	push   edi
10058842:	push   0x100
10058847:	push   DWORD PTR [eax+0xc]
1005884a:	lea    eax,[ebp-0x14]
1005884d:	push   eax
1005884e:	call   0x1004b2e8
10058853:	add    esp,0x24
10058856:	cmp    eax,ebx
10058858:	je     0x10058896
1005885a:	mov    ecx,DWORD PTR [ebp-0x4]
1005885d:	mov    BYTE PTR [esi],cl
1005885f:	inc    esi
10058860:	inc    edi
10058861:	cmp    eax,0x1
10058864:	jle    0x1005887c
10058866:	mov    BYTE PTR [esi],ch
10058868:	jmp    0x1005887b
1005886a:	test   dl,0x10
1005886d:	je     0x10058877
1005886f:	mov    al,BYTE PTR [eax+0x11d]
10058875:	jmp    0x10058879
10058877:	mov    al,cl
10058879:	mov    BYTE PTR [esi],al
1005887b:	inc    esi
1005887c:	inc    edi
1005887d:	cmp    BYTE PTR [edi],bl
1005887f:	jne    0x1005881f
10058881:	cmp    BYTE PTR [ebp-0x8],bl
10058884:	mov    BYTE PTR [esi],bl
10058886:	je     0x1005888f
10058888:	mov    eax,DWORD PTR [ebp-0xc]
1005888b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005888f:	xor    eax,eax
10058891:	pop    edi
10058892:	pop    esi
10058893:	pop    ebx
10058894:	leave  
10058895:	ret    
10058896:	call   0x10046c41
1005889b:	mov    DWORD PTR [eax],0x2a
100588a1:	mov    eax,DWORD PTR [ebp+0x8]
100588a4:	mov    BYTE PTR [eax],bl
100588a6:	call   0x10046c41
100588ab:	cmp    BYTE PTR [ebp-0x8],bl
100588ae:	mov    eax,DWORD PTR [eax]
100588b0:	je     0x10058891
100588b2:	mov    ecx,DWORD PTR [ebp-0xc]
100588b5:	and    DWORD PTR [ecx+0x70],0xfffffffd
100588b9:	jmp    0x10058891
100588bb:	push   0x0
100588bd:	push   DWORD PTR [esp+0xc]
100588c1:	push   DWORD PTR [esp+0xc]
100588c5:	call   0x100587b8
100588ca:	add    esp,0xc
100588cd:	ret    
100588ce:	push   ebp
100588cf:	mov    ebp,esp
100588d1:	sub    esp,0x14
100588d4:	push   ebx
100588d5:	push   DWORD PTR [ebp+0x10]
100588d8:	lea    ecx,[ebp-0x14]
100588db:	call   0x100456a5
100588e0:	xor    ebx,ebx
100588e2:	cmp    DWORD PTR [ebp+0x8],ebx
100588e5:	jne    0x10058915
100588e7:	call   0x10046c41
100588ec:	push   ebx
100588ed:	push   ebx
100588ee:	push   ebx
100588ef:	push   ebx
100588f0:	push   ebx
100588f1:	mov    DWORD PTR [eax],0x16
100588f7:	call   0x100435e1
100588fc:	add    esp,0x14
100588ff:	cmp    BYTE PTR [ebp-0x8],bl
10058902:	je     0x1005890b
10058904:	mov    eax,DWORD PTR [ebp-0xc]
10058907:	and    DWORD PTR [eax+0x70],0xfffffffd
1005890b:	mov    eax,0x7fffffff
10058910:	jmp    0x100589d3
10058915:	push   esi
10058916:	mov    esi,DWORD PTR [ebp+0xc]
10058919:	cmp    esi,ebx
1005891b:	jne    0x1005894b
1005891d:	call   0x10046c41
10058922:	push   ebx
10058923:	push   ebx
10058924:	push   ebx
10058925:	push   ebx
10058926:	push   ebx
10058927:	mov    DWORD PTR [eax],0x16
1005892d:	call   0x100435e1
10058932:	add    esp,0x14
10058935:	cmp    BYTE PTR [ebp-0x8],bl
10058938:	je     0x10058941
1005893a:	mov    eax,DWORD PTR [ebp-0xc]
1005893d:	and    DWORD PTR [eax+0x70],0xfffffffd
10058941:	mov    eax,0x7fffffff
10058946:	jmp    0x100589d2
1005894b:	push   edi
1005894c:	mov    edi,DWORD PTR [ebp-0x10]
1005894f:	cmp    DWORD PTR [edi+0x8],ebx
10058952:	jne    0x10058961
10058954:	push   esi
10058955:	push   DWORD PTR [ebp+0x8]
10058958:	call   0x10047c10
1005895d:	pop    ecx
1005895e:	pop    ecx
1005895f:	jmp    0x100589dc
10058961:	mov    eax,DWORD PTR [ebp+0x8]
10058964:	movzx  cx,BYTE PTR [eax]
10058968:	movzx  ecx,cx
1005896b:	movzx  edx,cl
1005896e:	inc    eax
1005896f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10058974:	mov    DWORD PTR [ebp+0x8],eax
10058977:	je     0x1005898f
10058979:	mov    al,BYTE PTR [eax]
1005897b:	cmp    al,bl
1005897d:	jne    0x10058983
1005897f:	xor    ecx,ecx
10058981:	jmp    0x1005898f
10058983:	xor    edx,edx
10058985:	inc    DWORD PTR [ebp+0x8]
10058988:	mov    dh,cl
1005898a:	mov    dl,al
1005898c:	movzx  ecx,dx
1005898f:	movzx  ax,BYTE PTR [esi]
10058993:	movzx  eax,ax
10058996:	movzx  edx,al
10058999:	inc    esi
1005899a:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005899f:	je     0x100589b9
100589a1:	mov    dl,BYTE PTR [esi]
100589a3:	cmp    dl,bl
100589a5:	mov    BYTE PTR [ebp-0x1],dl
100589a8:	jne    0x100589ae
100589aa:	xor    eax,eax
100589ac:	jmp    0x100589b9
100589ae:	xor    edx,edx
100589b0:	mov    dh,al
100589b2:	inc    esi
100589b3:	mov    dl,BYTE PTR [ebp-0x1]
100589b6:	movzx  eax,dx
100589b9:	cmp    ax,cx
100589bc:	jne    0x100589d6
100589be:	cmp    cx,bx
100589c1:	jne    0x10058961
100589c3:	cmp    BYTE PTR [ebp-0x8],bl
100589c6:	je     0x100589cf
100589c8:	mov    eax,DWORD PTR [ebp-0xc]
100589cb:	and    DWORD PTR [eax+0x70],0xfffffffd
100589cf:	xor    eax,eax
100589d1:	pop    edi
100589d2:	pop    esi
100589d3:	pop    ebx
100589d4:	leave  
100589d5:	ret    
100589d6:	sbb    eax,eax
100589d8:	and    eax,0x2
100589db:	dec    eax
100589dc:	cmp    BYTE PTR [ebp-0x8],bl
100589df:	je     0x100589d1
100589e1:	mov    ecx,DWORD PTR [ebp-0xc]
100589e4:	and    DWORD PTR [ecx+0x70],0xfffffffd
100589e8:	jmp    0x100589d1
100589ea:	push   0x0
100589ec:	push   DWORD PTR [esp+0xc]
100589f0:	push   DWORD PTR [esp+0xc]
100589f4:	call   0x100588ce
100589f9:	add    esp,0xc
100589fc:	ret    
100589fd:	push   esi
100589fe:	mov    esi,DWORD PTR [esp+0x8]
10058a02:	push   esi
10058a03:	call   0x1004fc69
10058a08:	cmp    eax,0xffffffff
10058a0b:	pop    ecx
10058a0c:	jne    0x10058a1e
10058a0e:	call   0x10046c41
10058a13:	mov    DWORD PTR [eax],0x9
10058a19:	or     eax,0xffffffff
10058a1c:	pop    esi
10058a1d:	ret    
10058a1e:	push   edi
10058a1f:	push   DWORD PTR [esp+0x14]
10058a23:	push   0x0
10058a25:	push   DWORD PTR [esp+0x18]
10058a29:	push   eax
10058a2a:	call   DWORD PTR ds:0x10067270
10058a30:	mov    edi,eax
10058a32:	cmp    edi,0xffffffff
10058a35:	jne    0x10058a3f
10058a37:	call   DWORD PTR ds:0x100670cc
10058a3d:	jmp    0x10058a41
10058a3f:	xor    eax,eax
10058a41:	test   eax,eax
10058a43:	je     0x10058a51
10058a45:	push   eax
10058a46:	call   0x10046c67
10058a4b:	pop    ecx
10058a4c:	or     eax,0xffffffff
10058a4f:	jmp    0x10058a6c
10058a51:	mov    eax,esi
10058a53:	sar    eax,0x5
10058a56:	mov    eax,DWORD PTR [eax*4+0x100844e0]
10058a5d:	and    esi,0x1f
10058a60:	shl    esi,0x6
10058a63:	lea    eax,[eax+esi*1+0x4]
10058a67:	and    BYTE PTR [eax],0xfd
10058a6a:	mov    eax,edi
10058a6c:	pop    edi
10058a6d:	pop    esi
10058a6e:	ret    
10058a6f:	push   ebp
10058a70:	mov    ebp,esp
10058a72:	sub    esp,0x20
10058a75:	push   ebx
10058a76:	xor    ebx,ebx
10058a78:	cmp    DWORD PTR [ebp+0xc],ebx
10058a7b:	jne    0x10058a9a
10058a7d:	call   0x10046c41
10058a82:	push   ebx
10058a83:	push   ebx
10058a84:	push   ebx
10058a85:	push   ebx
10058a86:	push   ebx
10058a87:	mov    DWORD PTR [eax],0x16
10058a8d:	call   0x100435e1
10058a92:	add    esp,0x14
10058a95:	or     eax,0xffffffff
10058a98:	jmp    0x10058ae7
10058a9a:	mov    eax,DWORD PTR [ebp+0x8]
10058a9d:	cmp    eax,ebx
10058a9f:	je     0x10058a7d
10058aa1:	push   esi
10058aa2:	mov    DWORD PTR [ebp-0x18],eax
10058aa5:	mov    DWORD PTR [ebp-0x20],eax
10058aa8:	lea    eax,[ebp+0x10]
10058aab:	push   eax
10058aac:	push   ebx
10058aad:	push   DWORD PTR [ebp+0xc]
10058ab0:	lea    eax,[ebp-0x20]
10058ab3:	push   eax
10058ab4:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10058abb:	mov    DWORD PTR [ebp-0x14],0x42
10058ac2:	call   0x1004d70c
10058ac7:	add    esp,0x10
10058aca:	dec    DWORD PTR [ebp-0x1c]
10058acd:	mov    esi,eax
10058acf:	js     0x10058ad8
10058ad1:	mov    eax,DWORD PTR [ebp-0x20]
10058ad4:	mov    BYTE PTR [eax],bl
10058ad6:	jmp    0x10058ae4
10058ad8:	lea    eax,[ebp-0x20]
10058adb:	push   eax
10058adc:	push   ebx
10058add:	call   0x10048a67
10058ae2:	pop    ecx
10058ae3:	pop    ecx
10058ae4:	mov    eax,esi
10058ae6:	pop    esi
10058ae7:	pop    ebx
10058ae8:	leave  
10058ae9:	ret    
10058aea:	push   ebp
10058aeb:	mov    ebp,esp
10058aed:	sub    esp,0x14
10058af0:	push   ebx
10058af1:	push   esi
10058af2:	push   DWORD PTR [ebp+0x10]
10058af5:	xor    ebx,ebx
10058af7:	lea    ecx,[ebp-0x14]
10058afa:	mov    DWORD PTR [ebp-0x4],ebx
10058afd:	call   0x100456a5
10058b02:	mov    esi,DWORD PTR [ebp-0x10]
10058b05:	cmp    DWORD PTR [esi+0x8],ebx
10058b08:	jne    0x10058b29
10058b0a:	push   DWORD PTR [ebp+0xc]
10058b0d:	push   DWORD PTR [ebp+0x8]
10058b10:	call   0x10059cc0
10058b15:	cmp    BYTE PTR [ebp-0x8],bl
10058b18:	pop    ecx
10058b19:	pop    ecx
10058b1a:	je     0x10058ba6
10058b20:	mov    ecx,DWORD PTR [ebp-0xc]
10058b23:	and    DWORD PTR [ecx+0x70],0xfffffffd
10058b27:	jmp    0x10058ba6
10058b29:	mov    ecx,DWORD PTR [ebp+0x8]
10058b2c:	cmp    ecx,ebx
10058b2e:	jne    0x10058b58
10058b30:	call   0x10046c41
10058b35:	push   ebx
10058b36:	push   ebx
10058b37:	push   ebx
10058b38:	push   ebx
10058b39:	push   ebx
10058b3a:	mov    DWORD PTR [eax],0x16
10058b40:	call   0x100435e1
10058b45:	add    esp,0x14
10058b48:	cmp    BYTE PTR [ebp-0x8],bl
10058b4b:	je     0x10058b54
10058b4d:	mov    eax,DWORD PTR [ebp-0xc]
10058b50:	and    DWORD PTR [eax+0x70],0xfffffffd
10058b54:	xor    eax,eax
10058b56:	jmp    0x10058ba6
10058b58:	push   edi
10058b59:	mov    dl,BYTE PTR [ecx]
10058b5b:	movzx  eax,dl
10058b5e:	movzx  edi,al
10058b61:	test   BYTE PTR [edi+esi*1+0x1d],0x4
10058b66:	je     0x10058b89
10058b68:	inc    ecx
10058b69:	mov    dl,BYTE PTR [ecx]
10058b6b:	cmp    dl,bl
10058b6d:	je     0x10058b84
10058b6f:	movzx  edi,dl
10058b72:	shl    eax,0x8
10058b75:	or     eax,edi
10058b77:	cmp    DWORD PTR [ebp+0xc],eax
10058b7a:	jne    0x10058b91
10058b7c:	lea    eax,[ecx-0x1]
10058b7f:	mov    DWORD PTR [ebp-0x4],eax
10058b82:	jmp    0x10058b91
10058b84:	cmp    DWORD PTR [ebp-0x4],ebx
10058b87:	jmp    0x10058b8c
10058b89:	cmp    DWORD PTR [ebp+0xc],eax
10058b8c:	jne    0x10058b91
10058b8e:	mov    DWORD PTR [ebp-0x4],ecx
10058b91:	inc    ecx
10058b92:	cmp    dl,bl
10058b94:	jne    0x10058b59
10058b96:	cmp    BYTE PTR [ebp-0x8],bl
10058b99:	pop    edi
10058b9a:	je     0x10058ba3
10058b9c:	mov    eax,DWORD PTR [ebp-0xc]
10058b9f:	and    DWORD PTR [eax+0x70],0xfffffffd
10058ba3:	mov    eax,DWORD PTR [ebp-0x4]
10058ba6:	pop    esi
10058ba7:	pop    ebx
10058ba8:	leave  
10058ba9:	ret    
10058baa:	push   0x0
10058bac:	push   DWORD PTR [esp+0xc]
10058bb0:	push   DWORD PTR [esp+0xc]
10058bb4:	call   0x10058aea
10058bb9:	add    esp,0xc
10058bbc:	ret    
10058bbd:	push   ebp
10058bbe:	mov    ebp,esp
10058bc0:	sub    esp,0x1c
10058bc3:	mov    edx,DWORD PTR [ebp+0x10]
10058bc6:	push   esi
10058bc7:	mov    esi,DWORD PTR [ebp+0x8]
10058bca:	push   0xfffffffe
10058bcc:	pop    eax
10058bcd:	cmp    esi,eax
10058bcf:	mov    DWORD PTR [ebp-0x14],eax
10058bd2:	mov    DWORD PTR [ebp-0x1c],edx
10058bd5:	jne    0x10058bf2
10058bd7:	call   0x10046c54
10058bdc:	and    DWORD PTR [eax],0x0
10058bdf:	call   0x10046c41
10058be4:	mov    DWORD PTR [eax],0x9
10058bea:	or     eax,0xffffffff
10058bed:	jmp    0x1005917b
10058bf2:	push   ebx
10058bf3:	xor    ebx,ebx
10058bf5:	cmp    esi,ebx
10058bf7:	jl     0x10058c01
10058bf9:	cmp    esi,DWORD PTR ds:0x100844c4
10058bff:	jb     0x10058c28
10058c01:	call   0x10046c54
10058c06:	mov    DWORD PTR [eax],ebx
10058c08:	call   0x10046c41
10058c0d:	push   ebx
10058c0e:	push   ebx
10058c0f:	push   ebx
10058c10:	push   ebx
10058c11:	push   ebx
10058c12:	mov    DWORD PTR [eax],0x9
10058c18:	call   0x100435e1
10058c1d:	add    esp,0x14
10058c20:	or     eax,0xffffffff
10058c23:	jmp    0x1005917a
10058c28:	mov    eax,esi
10058c2a:	sar    eax,0x5
10058c2d:	push   edi
10058c2e:	lea    edi,[eax*4+0x100844e0]
10058c35:	mov    eax,DWORD PTR [edi]
10058c37:	and    esi,0x1f
10058c3a:	shl    esi,0x6
10058c3d:	add    eax,esi
10058c3f:	mov    cl,BYTE PTR [eax+0x4]
10058c42:	test   cl,0x1
10058c45:	jne    0x10058c5b
10058c47:	call   0x10046c54
10058c4c:	mov    DWORD PTR [eax],ebx
10058c4e:	call   0x10046c41
10058c53:	mov    DWORD PTR [eax],0x9
10058c59:	jmp    0x10058cc5
10058c5b:	cmp    edx,0x7fffffff
10058c61:	ja     0x10058cb3
10058c63:	cmp    edx,ebx
10058c65:	mov    DWORD PTR [ebp-0x10],ebx
10058c68:	je     0x10059177
10058c6e:	test   cl,0x2
10058c71:	jne    0x10059177
10058c77:	cmp    DWORD PTR [ebp+0xc],ebx
10058c7a:	je     0x10058cb3
10058c7c:	mov    al,BYTE PTR [eax+0x24]
10058c7f:	add    al,al
10058c81:	sar    al,1
10058c83:	mov    BYTE PTR [ebp-0x2],al
10058c86:	movsx  eax,al
10058c89:	dec    eax
10058c8a:	push   0x4
10058c8c:	pop    ecx
10058c8d:	je     0x10058cab
10058c8f:	dec    eax
10058c90:	jne    0x10058ca0
10058c92:	mov    eax,edx
10058c94:	not    eax
10058c96:	test   al,0x1
10058c98:	je     0x10058cb3
10058c9a:	and    edx,0xfffffffe
10058c9d:	mov    DWORD PTR [ebp+0x10],edx
10058ca0:	mov    eax,DWORD PTR [ebp+0xc]
10058ca3:	mov    DWORD PTR [ebp-0xc],eax
10058ca6:	jmp    0x10058d2c
10058cab:	mov    eax,edx
10058cad:	not    eax
10058caf:	test   al,0x1
10058cb1:	jne    0x10058cd4
10058cb3:	call   0x10046c54
10058cb8:	mov    DWORD PTR [eax],ebx
10058cba:	call   0x10046c41
10058cbf:	mov    DWORD PTR [eax],0x16
10058cc5:	push   ebx
10058cc6:	push   ebx
10058cc7:	push   ebx
10058cc8:	push   ebx
10058cc9:	push   ebx
10058cca:	call   0x100435e1
10058ccf:	add    esp,0x14
10058cd2:	jmp    0x10058d08
10058cd4:	mov    eax,edx
10058cd6:	shr    eax,1
10058cd8:	cmp    eax,ecx
10058cda:	mov    DWORD PTR [ebp+0x10],ecx
10058cdd:	jb     0x10058ce2
10058cdf:	mov    DWORD PTR [ebp+0x10],eax
10058ce2:	push   DWORD PTR [ebp+0x10]
10058ce5:	call   0x100472aa
10058cea:	cmp    eax,ebx
10058cec:	pop    ecx
10058ced:	mov    DWORD PTR [ebp-0xc],eax
10058cf0:	jne    0x10058d10
10058cf2:	call   0x10046c41
10058cf7:	mov    DWORD PTR [eax],0xc
10058cfd:	call   0x10046c54
10058d02:	mov    DWORD PTR [eax],0x8
10058d08:	or     eax,0xffffffff
10058d0b:	jmp    0x10059179
10058d10:	push   0x1
10058d12:	push   ebx
10058d13:	push   ebx
10058d14:	push   DWORD PTR [ebp+0x8]
10058d17:	call   0x1004c983
10058d1c:	mov    ecx,DWORD PTR [edi]
10058d1e:	mov    DWORD PTR [esi+ecx*1+0x28],eax
10058d22:	mov    eax,DWORD PTR [ebp-0xc]
10058d25:	add    esp,0x10
10058d28:	mov    DWORD PTR [esi+ecx*1+0x2c],edx
10058d2c:	mov    ecx,DWORD PTR [edi]
10058d2e:	add    ecx,esi
10058d30:	test   BYTE PTR [ecx+0x4],0x48
10058d34:	je     0x10058daa
10058d36:	mov    cl,BYTE PTR [ecx+0x5]
10058d39:	cmp    cl,0xa
10058d3c:	je     0x10058daa
10058d3e:	cmp    DWORD PTR [ebp+0x10],ebx
10058d41:	je     0x10058daa
10058d43:	mov    BYTE PTR [eax],cl
10058d45:	mov    ecx,DWORD PTR [edi]
10058d47:	inc    eax
10058d48:	dec    DWORD PTR [ebp+0x10]
10058d4b:	cmp    BYTE PTR [ebp-0x2],bl
10058d4e:	mov    DWORD PTR [ebp-0x10],0x1
10058d55:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
10058d5a:	je     0x10058daa
10058d5c:	mov    ecx,DWORD PTR [edi]
10058d5e:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
10058d62:	cmp    cl,0xa
10058d65:	je     0x10058daa
10058d67:	cmp    DWORD PTR [ebp+0x10],ebx
10058d6a:	je     0x10058daa
10058d6c:	mov    BYTE PTR [eax],cl
10058d6e:	mov    ecx,DWORD PTR [edi]
10058d70:	inc    eax
10058d71:	dec    DWORD PTR [ebp+0x10]
10058d74:	cmp    BYTE PTR [ebp-0x2],0x1
10058d78:	mov    DWORD PTR [ebp-0x10],0x2
10058d7f:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
10058d84:	jne    0x10058daa
10058d86:	mov    ecx,DWORD PTR [edi]
10058d88:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
10058d8c:	cmp    cl,0xa
10058d8f:	je     0x10058daa
10058d91:	cmp    DWORD PTR [ebp+0x10],ebx
10058d94:	je     0x10058daa
10058d96:	mov    BYTE PTR [eax],cl
10058d98:	mov    ecx,DWORD PTR [edi]
10058d9a:	inc    eax
10058d9b:	dec    DWORD PTR [ebp+0x10]
10058d9e:	mov    DWORD PTR [ebp-0x10],0x3
10058da5:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
10058daa:	push   ebx
10058dab:	lea    ecx,[ebp-0x18]
10058dae:	push   ecx
10058daf:	push   DWORD PTR [ebp+0x10]
10058db2:	push   eax
10058db3:	mov    eax,DWORD PTR [edi]
10058db5:	push   DWORD PTR [esi+eax*1]
10058db8:	call   DWORD PTR ds:0x100670dc
10058dbe:	test   eax,eax
10058dc0:	je     0x10059142
10058dc6:	mov    ecx,DWORD PTR [ebp-0x18]
10058dc9:	cmp    ecx,ebx
10058dcb:	jl     0x10059142
10058dd1:	cmp    ecx,DWORD PTR [ebp+0x10]
10058dd4:	ja     0x10059142
10058dda:	mov    eax,DWORD PTR [edi]
10058ddc:	add    DWORD PTR [ebp-0x10],ecx
10058ddf:	lea    eax,[esi+eax*1+0x4]
10058de3:	test   BYTE PTR [eax],0x80
10058de6:	je     0x10058fd2
10058dec:	cmp    BYTE PTR [ebp-0x2],0x2
10058df0:	je     0x1005900c
10058df6:	cmp    ecx,ebx
10058df8:	je     0x10058e07
10058dfa:	mov    ecx,DWORD PTR [ebp-0xc]
10058dfd:	cmp    BYTE PTR [ecx],0xa
10058e00:	jne    0x10058e07
10058e02:	or     BYTE PTR [eax],0x4
10058e05:	jmp    0x10058e0a
10058e07:	and    BYTE PTR [eax],0xfb
10058e0a:	mov    ebx,DWORD PTR [ebp-0xc]
10058e0d:	mov    eax,DWORD PTR [ebp-0x10]
10058e10:	add    eax,ebx
10058e12:	cmp    ebx,eax
10058e14:	mov    DWORD PTR [ebp+0x10],ebx
10058e17:	mov    DWORD PTR [ebp-0x10],eax
10058e1a:	jae    0x10058ef0
10058e20:	mov    ecx,DWORD PTR [ebp+0x10]
10058e23:	mov    al,BYTE PTR [ecx]
10058e25:	cmp    al,0x1a
10058e27:	je     0x10058edb
10058e2d:	cmp    al,0xd
10058e2f:	je     0x10058e3d
10058e31:	mov    BYTE PTR [ebx],al
10058e33:	inc    ebx
10058e34:	inc    ecx
10058e35:	mov    DWORD PTR [ebp+0x10],ecx
10058e38:	jmp    0x10058ecd
10058e3d:	mov    eax,DWORD PTR [ebp-0x10]
10058e40:	dec    eax
10058e41:	cmp    ecx,eax
10058e43:	jae    0x10058e5c
10058e45:	lea    eax,[ecx+0x1]
10058e48:	cmp    BYTE PTR [eax],0xa
10058e4b:	jne    0x10058e57
10058e4d:	inc    ecx
10058e4e:	inc    ecx
10058e4f:	mov    DWORD PTR [ebp+0x10],ecx
10058e52:	mov    BYTE PTR [ebx],0xa
10058e55:	jmp    0x10058ecc
10058e57:	mov    DWORD PTR [ebp+0x10],eax
10058e5a:	jmp    0x10058ec9
10058e5c:	inc    DWORD PTR [ebp+0x10]
10058e5f:	push   0x0
10058e61:	lea    eax,[ebp-0x18]
10058e64:	push   eax
10058e65:	push   0x1
10058e67:	lea    eax,[ebp-0x1]
10058e6a:	push   eax
10058e6b:	mov    eax,DWORD PTR [edi]
10058e6d:	push   DWORD PTR [esi+eax*1]
10058e70:	call   DWORD PTR ds:0x100670dc
10058e76:	test   eax,eax
10058e78:	jne    0x10058e84
10058e7a:	call   DWORD PTR ds:0x100670cc
10058e80:	test   eax,eax
10058e82:	jne    0x10058ec9
10058e84:	cmp    DWORD PTR [ebp-0x18],0x0
10058e88:	je     0x10058ec9
10058e8a:	mov    eax,DWORD PTR [edi]
10058e8c:	test   BYTE PTR [esi+eax*1+0x4],0x48
10058e91:	je     0x10058ea7
10058e93:	cmp    BYTE PTR [ebp-0x1],0xa
10058e97:	je     0x10058e52
10058e99:	mov    BYTE PTR [ebx],0xd
10058e9c:	mov    eax,DWORD PTR [edi]
10058e9e:	mov    cl,BYTE PTR [ebp-0x1]
10058ea1:	mov    BYTE PTR [esi+eax*1+0x5],cl
10058ea5:	jmp    0x10058ecc
10058ea7:	cmp    ebx,DWORD PTR [ebp-0xc]
10058eaa:	jne    0x10058eb2
10058eac:	cmp    BYTE PTR [ebp-0x1],0xa
10058eb0:	je     0x10058e52
10058eb2:	push   0x1
10058eb4:	push   0xffffffff
10058eb6:	push   0xffffffff
10058eb8:	push   DWORD PTR [ebp+0x8]
10058ebb:	call   0x1004c983
10058ec0:	add    esp,0x10
10058ec3:	cmp    BYTE PTR [ebp-0x1],0xa
10058ec7:	je     0x10058ecd
10058ec9:	mov    BYTE PTR [ebx],0xd
10058ecc:	inc    ebx
10058ecd:	mov    eax,DWORD PTR [ebp-0x10]
10058ed0:	cmp    DWORD PTR [ebp+0x10],eax
10058ed3:	jb     0x10058e20
10058ed9:	jmp    0x10058ef0
10058edb:	mov    eax,DWORD PTR [edi]
10058edd:	lea    eax,[esi+eax*1+0x4]
10058ee1:	test   BYTE PTR [eax],0x40
10058ee4:	jne    0x10058eeb
10058ee6:	or     BYTE PTR [eax],0x2
10058ee9:	jmp    0x10058ef0
10058eeb:	mov    al,BYTE PTR [ecx]
10058eed:	mov    BYTE PTR [ebx],al
10058eef:	inc    ebx
10058ef0:	mov    eax,ebx
10058ef2:	sub    eax,DWORD PTR [ebp-0xc]
10058ef5:	cmp    BYTE PTR [ebp-0x2],0x1
10058ef9:	mov    DWORD PTR [ebp-0x10],eax
10058efc:	jne    0x10058fd2
10058f02:	test   eax,eax
10058f04:	je     0x10058fd2
10058f0a:	dec    ebx
10058f0b:	mov    cl,BYTE PTR [ebx]
10058f0d:	test   cl,cl
10058f0f:	js     0x10058f17
10058f11:	inc    ebx
10058f12:	jmp    0x10058f9d
10058f17:	xor    eax,eax
10058f19:	inc    eax
10058f1a:	movzx  ecx,cl
10058f1d:	jmp    0x10058f2e
10058f1f:	cmp    eax,0x4
10058f22:	jg     0x10058f37
10058f24:	cmp    ebx,DWORD PTR [ebp-0xc]
10058f27:	jb     0x10058f37
10058f29:	dec    ebx
10058f2a:	movzx  ecx,BYTE PTR [ebx]
10058f2d:	inc    eax
10058f2e:	cmp    BYTE PTR [ecx+0x100810b0],0x0
10058f35:	je     0x10058f1f
10058f37:	mov    dl,BYTE PTR [ebx]
10058f39:	movzx  ecx,dl
10058f3c:	movsx  ecx,BYTE PTR [ecx+0x100810b0]
10058f43:	test   ecx,ecx
10058f45:	jne    0x10058f54
10058f47:	call   0x10046c41
10058f4c:	mov    DWORD PTR [eax],0x2a
10058f52:	jmp    0x10058fce
10058f54:	inc    ecx
10058f55:	cmp    ecx,eax
10058f57:	jne    0x10058f5d
10058f59:	add    ebx,eax
10058f5b:	jmp    0x10058f9d
10058f5d:	mov    ecx,DWORD PTR [edi]
10058f5f:	add    ecx,esi
10058f61:	test   BYTE PTR [ecx+0x4],0x48
10058f65:	je     0x10058f8b
10058f67:	inc    ebx
10058f68:	cmp    eax,0x2
10058f6b:	mov    BYTE PTR [ecx+0x5],dl
10058f6e:	jl     0x10058f79
10058f70:	mov    dl,BYTE PTR [ebx]
10058f72:	mov    ecx,DWORD PTR [edi]
10058f74:	mov    BYTE PTR [esi+ecx*1+0x25],dl
10058f78:	inc    ebx
10058f79:	cmp    eax,0x3
10058f7c:	jne    0x10058f87
10058f7e:	mov    dl,BYTE PTR [ebx]
10058f80:	mov    ecx,DWORD PTR [edi]
10058f82:	mov    BYTE PTR [esi+ecx*1+0x26],dl
10058f86:	inc    ebx
10058f87:	sub    ebx,eax
10058f89:	jmp    0x10058f9d
10058f8b:	neg    eax
10058f8d:	cdq    
10058f8e:	push   0x1
10058f90:	push   edx
10058f91:	push   eax
10058f92:	push   DWORD PTR [ebp+0x8]
10058f95:	call   0x1004c983
10058f9a:	add    esp,0x10
10058f9d:	mov    eax,DWORD PTR [ebp-0x1c]
10058fa0:	sub    ebx,DWORD PTR [ebp-0xc]
10058fa3:	shr    eax,1
10058fa5:	push   eax
10058fa6:	push   DWORD PTR [ebp+0xc]
10058fa9:	push   ebx
10058faa:	push   DWORD PTR [ebp-0xc]
10058fad:	push   0x0
10058faf:	push   0xfde9
10058fb4:	call   DWORD PTR ds:0x1006708c
10058fba:	test   eax,eax
10058fbc:	mov    DWORD PTR [ebp-0x10],eax
10058fbf:	jne    0x10058ff5
10058fc1:	call   DWORD PTR ds:0x100670cc
10058fc7:	push   eax
10058fc8:	call   0x10046c67
10058fcd:	pop    ecx
10058fce:	or     DWORD PTR [ebp-0x14],0xffffffff
10058fd2:	mov    eax,DWORD PTR [ebp-0xc]
10058fd5:	cmp    eax,DWORD PTR [ebp+0xc]
10058fd8:	je     0x10058fe1
10058fda:	push   eax
10058fdb:	call   0x100437dc
10058fe0:	pop    ecx
10058fe1:	mov    eax,DWORD PTR [ebp-0x14]
10058fe4:	cmp    eax,0xfffffffe
10058fe7:	jne    0x10059179
10058fed:	mov    eax,DWORD PTR [ebp-0x10]
10058ff0:	jmp    0x10059179
10058ff5:	mov    eax,DWORD PTR [ebp-0x10]
10058ff8:	mov    edx,DWORD PTR [edi]
10058ffa:	xor    ecx,ecx
10058ffc:	cmp    eax,ebx
10058ffe:	setne  cl
10059001:	add    eax,eax
10059003:	mov    DWORD PTR [ebp-0x10],eax
10059006:	mov    DWORD PTR [esi+edx*1+0x30],ecx
1005900a:	jmp    0x10058fd2
1005900c:	cmp    ecx,ebx
1005900e:	je     0x1005901e
10059010:	mov    ecx,DWORD PTR [ebp-0xc]
10059013:	cmp    WORD PTR [ecx],0xa
10059017:	jne    0x1005901e
10059019:	or     BYTE PTR [eax],0x4
1005901c:	jmp    0x10059021
1005901e:	and    BYTE PTR [eax],0xfb
10059021:	mov    ebx,DWORD PTR [ebp-0xc]
10059024:	mov    eax,DWORD PTR [ebp-0x10]
10059027:	add    eax,ebx
10059029:	cmp    ebx,eax
1005902b:	mov    DWORD PTR [ebp+0x10],ebx
1005902e:	mov    DWORD PTR [ebp-0x10],eax
10059031:	jae    0x10059137
10059037:	mov    eax,DWORD PTR [ebp+0x10]
1005903a:	movzx  ecx,WORD PTR [eax]
1005903d:	cmp    cx,0x1a
10059041:	je     0x1005911f
10059047:	cmp    cx,0xd
1005904b:	je     0x1005905c
1005904d:	mov    WORD PTR [ebx],cx
10059050:	inc    ebx
10059051:	inc    ebx
10059052:	inc    eax
10059053:	inc    eax
10059054:	mov    DWORD PTR [ebp+0x10],eax
10059057:	jmp    0x10059111
1005905c:	mov    ecx,DWORD PTR [ebp-0x10]
1005905f:	add    ecx,0xfffffffe
10059062:	cmp    eax,ecx
10059064:	jae    0x10059087
10059066:	lea    ecx,[eax+0x2]
10059069:	cmp    WORD PTR [ecx],0xa
1005906d:	jne    0x1005907f
1005906f:	add    eax,0x4
10059072:	mov    DWORD PTR [ebp+0x10],eax
10059075:	mov    WORD PTR [ebx],0xa
1005907a:	jmp    0x1005910f
1005907f:	mov    DWORD PTR [ebp+0x10],ecx
10059082:	jmp    0x1005910a
10059087:	add    DWORD PTR [ebp+0x10],0x2
1005908b:	push   0x0
1005908d:	lea    eax,[ebp-0x18]
10059090:	push   eax
10059091:	push   0x2
10059093:	lea    eax,[ebp-0x8]
10059096:	push   eax
10059097:	mov    eax,DWORD PTR [edi]
10059099:	push   DWORD PTR [esi+eax*1]
1005909c:	call   DWORD PTR ds:0x100670dc
100590a2:	test   eax,eax
100590a4:	jne    0x100590b0
100590a6:	call   DWORD PTR ds:0x100670cc
100590ac:	test   eax,eax
100590ae:	jne    0x1005910a
100590b0:	cmp    DWORD PTR [ebp-0x18],0x0
100590b4:	je     0x1005910a
100590b6:	mov    eax,DWORD PTR [edi]
100590b8:	test   BYTE PTR [esi+eax*1+0x4],0x48
100590bd:	je     0x100590e6
100590bf:	cmp    WORD PTR [ebp-0x8],0xa
100590c4:	je     0x10059075
100590c6:	mov    WORD PTR [ebx],0xd
100590cb:	mov    eax,DWORD PTR [edi]
100590cd:	mov    cl,BYTE PTR [ebp-0x8]
100590d0:	mov    BYTE PTR [esi+eax*1+0x5],cl
100590d4:	mov    eax,DWORD PTR [edi]
100590d6:	mov    cl,BYTE PTR [ebp-0x7]
100590d9:	mov    BYTE PTR [esi+eax*1+0x25],cl
100590dd:	mov    eax,DWORD PTR [edi]
100590df:	mov    BYTE PTR [esi+eax*1+0x26],0xa
100590e4:	jmp    0x1005910f
100590e6:	cmp    ebx,DWORD PTR [ebp-0xc]
100590e9:	jne    0x100590f2
100590eb:	cmp    WORD PTR [ebp-0x8],0xa
100590f0:	je     0x10059075
100590f2:	push   0x1
100590f4:	push   0xffffffff
100590f6:	push   0xfffffffe
100590f8:	push   DWORD PTR [ebp+0x8]
100590fb:	call   0x1004c983
10059100:	add    esp,0x10
10059103:	cmp    WORD PTR [ebp-0x8],0xa
10059108:	je     0x10059111
1005910a:	mov    WORD PTR [ebx],0xd
1005910f:	inc    ebx
10059110:	inc    ebx
10059111:	mov    eax,DWORD PTR [ebp-0x10]
10059114:	cmp    DWORD PTR [ebp+0x10],eax
10059117:	jb     0x10059037
1005911d:	jmp    0x10059137
1005911f:	mov    ecx,DWORD PTR [edi]
10059121:	lea    esi,[esi+ecx*1+0x4]
10059125:	test   BYTE PTR [esi],0x40
10059128:	jne    0x1005912f
1005912a:	or     BYTE PTR [esi],0x2
1005912d:	jmp    0x10059137
1005912f:	mov    ax,WORD PTR [eax]
10059132:	mov    WORD PTR [ebx],ax
10059135:	inc    ebx
10059136:	inc    ebx
10059137:	sub    ebx,DWORD PTR [ebp-0xc]
1005913a:	mov    DWORD PTR [ebp-0x10],ebx
1005913d:	jmp    0x10058fd2
10059142:	call   DWORD PTR ds:0x100670cc
10059148:	push   0x5
1005914a:	pop    esi
1005914b:	cmp    eax,esi
1005914d:	jne    0x10059166
1005914f:	call   0x10046c41
10059154:	mov    DWORD PTR [eax],0x9
1005915a:	call   0x10046c54
1005915f:	mov    DWORD PTR [eax],esi
10059161:	jmp    0x10058fce
10059166:	cmp    eax,0x6d
10059169:	jne    0x10058fc7
1005916f:	mov    DWORD PTR [ebp-0x14],ebx
10059172:	jmp    0x10058fd2
10059177:	xor    eax,eax
10059179:	pop    edi
1005917a:	pop    ebx
1005917b:	pop    esi
1005917c:	leave  
1005917d:	ret    
1005917e:	push   0x10
10059180:	push   0x10076188
10059185:	call   0x1004771c
1005918a:	mov    eax,DWORD PTR [ebp+0x8]
1005918d:	cmp    eax,0xfffffffe
10059190:	jne    0x100591ad
10059192:	call   0x10046c54
10059197:	and    DWORD PTR [eax],0x0
1005919a:	call   0x10046c41
1005919f:	mov    DWORD PTR [eax],0x9
100591a5:	or     eax,0xffffffff
100591a8:	jmp    0x1005926b
100591ad:	xor    esi,esi
100591af:	cmp    eax,esi
100591b1:	jl     0x100591bb
100591b3:	cmp    eax,DWORD PTR ds:0x100844c4
100591b9:	jb     0x100591dc
100591bb:	call   0x10046c54
100591c0:	mov    DWORD PTR [eax],esi
100591c2:	call   0x10046c41
100591c7:	mov    DWORD PTR [eax],0x9
100591cd:	push   esi
100591ce:	push   esi
100591cf:	push   esi
100591d0:	push   esi
100591d1:	push   esi
100591d2:	call   0x100435e1
100591d7:	add    esp,0x14
100591da:	jmp    0x100591a5
100591dc:	mov    ecx,eax
100591de:	sar    ecx,0x5
100591e1:	lea    ebx,[ecx*4+0x100844e0]
100591e8:	mov    edi,eax
100591ea:	and    edi,0x1f
100591ed:	shl    edi,0x6
100591f0:	mov    ecx,DWORD PTR [ebx]
100591f2:	movzx  ecx,BYTE PTR [ecx+edi*1+0x4]
100591f7:	and    ecx,0x1
100591fa:	je     0x100591bb
100591fc:	mov    ecx,0x7fffffff
10059201:	cmp    ecx,DWORD PTR [ebp+0x10]
10059204:	sbb    ecx,ecx
10059206:	inc    ecx
10059207:	jne    0x1005921d
10059209:	call   0x10046c54
1005920e:	mov    DWORD PTR [eax],esi
10059210:	call   0x10046c41
10059215:	mov    DWORD PTR [eax],0x16
1005921b:	jmp    0x100591cd
1005921d:	push   eax
1005921e:	call   0x1004fcda
10059223:	pop    ecx
10059224:	mov    DWORD PTR [ebp-0x4],esi
10059227:	mov    eax,DWORD PTR [ebx]
10059229:	test   BYTE PTR [eax+edi*1+0x4],0x1
1005922e:	je     0x10059246
10059230:	push   DWORD PTR [ebp+0x10]
10059233:	push   DWORD PTR [ebp+0xc]
10059236:	push   DWORD PTR [ebp+0x8]
10059239:	call   0x10058bbd
1005923e:	add    esp,0xc
10059241:	mov    DWORD PTR [ebp-0x1c],eax
10059244:	jmp    0x1005925c
10059246:	call   0x10046c41
1005924b:	mov    DWORD PTR [eax],0x9
10059251:	call   0x10046c54
10059256:	mov    DWORD PTR [eax],esi
10059258:	or     DWORD PTR [ebp-0x1c],0xffffffff
1005925c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059263:	call   0x10059271
10059268:	mov    eax,DWORD PTR [ebp-0x1c]
1005926b:	call   0x10047761
10059270:	ret    
10059271:	push   DWORD PTR [ebp+0x8]
10059274:	call   0x1004fd7a
10059279:	pop    ecx
1005927a:	ret    
1005927b:	push   0xc
1005927d:	push   0x100761a8
10059282:	call   0x1004771c
10059287:	xor    ebx,ebx
10059289:	mov    DWORD PTR [ebp-0x1c],ebx
1005928c:	xor    eax,eax
1005928e:	mov    edi,DWORD PTR [ebp+0x8]
10059291:	cmp    edi,ebx
10059293:	setne  al
10059296:	cmp    eax,ebx
10059298:	jne    0x100592b6
1005929a:	call   0x10046c41
1005929f:	mov    DWORD PTR [eax],0x16
100592a5:	push   ebx
100592a6:	push   ebx
100592a7:	push   ebx
100592a8:	push   ebx
100592a9:	push   ebx
100592aa:	call   0x100435e1
100592af:	add    esp,0x14
100592b2:	xor    eax,eax
100592b4:	jmp    0x1005932f
100592b6:	xor    eax,eax
100592b8:	mov    esi,DWORD PTR [ebp+0xc]
100592bb:	cmp    esi,ebx
100592bd:	setne  al
100592c0:	cmp    eax,ebx
100592c2:	je     0x1005929a
100592c4:	xor    eax,eax
100592c6:	cmp    BYTE PTR [esi],bl
100592c8:	setne  al
100592cb:	cmp    eax,ebx
100592cd:	je     0x1005929a
100592cf:	call   0x1005ab04
100592d4:	mov    DWORD PTR [ebp+0x8],eax
100592d7:	cmp    eax,ebx
100592d9:	jne    0x100592e8
100592db:	call   0x10046c41
100592e0:	mov    DWORD PTR [eax],0x18
100592e6:	jmp    0x100592b2
100592e8:	mov    DWORD PTR [ebp-0x4],ebx
100592eb:	cmp    BYTE PTR [edi],bl
100592ed:	jne    0x1005930f
100592ef:	call   0x10046c41
100592f4:	mov    DWORD PTR [eax],0x16
100592fa:	push   0xfffffffe
100592fc:	lea    eax,[ebp-0x10]
100592ff:	push   eax
10059300:	push   0x100801ac
10059305:	call   0x1004c830
1005930a:	add    esp,0xc
1005930d:	jmp    0x100592b2
1005930f:	push   eax
10059310:	push   DWORD PTR [ebp+0x10]
10059313:	push   esi
10059314:	push   edi
10059315:	call   0x1005a864
1005931a:	add    esp,0x10
1005931d:	mov    DWORD PTR [ebp-0x1c],eax
10059320:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059327:	call   0x10059335
1005932c:	mov    eax,DWORD PTR [ebp-0x1c]
1005932f:	call   0x10047761
10059334:	ret    
10059335:	push   DWORD PTR [ebp+0x8]
10059338:	call   0x1004d400
1005933d:	pop    ecx
1005933e:	ret    
1005933f:	push   0x40
10059341:	push   DWORD PTR [esp+0xc]
10059345:	push   DWORD PTR [esp+0xc]
10059349:	call   0x1005927b
1005934e:	add    esp,0xc
10059351:	ret    
10059352:	push   DWORD PTR [esp+0x8]
10059356:	push   0x0
10059358:	push   DWORD PTR [esp+0xc]
1005935c:	push   0x1004d70c
10059361:	call   0x1004386a
10059366:	add    esp,0x10
10059369:	ret    
1005936a:	push   ebx
1005936b:	push   esi
1005936c:	mov    esi,DWORD PTR [esp+0xc]
10059370:	xor    ebx,ebx
10059372:	cmp    esi,ebx
10059374:	jne    0x10059392
10059376:	call   0x10046c41
1005937b:	push   ebx
1005937c:	push   ebx
1005937d:	push   ebx
1005937e:	push   ebx
1005937f:	push   ebx
10059380:	mov    DWORD PTR [eax],0x16
10059386:	call   0x100435e1
1005938b:	add    esp,0x14
1005938e:	xor    eax,eax
10059390:	jmp    0x100593a8
10059392:	movzx  eax,BYTE PTR [esi]
10059395:	push   eax
10059396:	call   0x1004fa15
1005939b:	inc    esi
1005939c:	test   eax,eax
1005939e:	pop    ecx
1005939f:	je     0x100593a6
100593a1:	cmp    BYTE PTR [esi],bl
100593a3:	je     0x100593a6
100593a5:	inc    esi
100593a6:	mov    eax,esi
100593a8:	pop    esi
100593a9:	pop    ebx
100593aa:	ret    
100593ab:	push   ebp
100593ac:	mov    ebp,esp
100593ae:	sub    esp,0x20
100593b1:	push   ebx
100593b2:	xor    ebx,ebx
100593b4:	cmp    DWORD PTR [ebp+0x14],ebx
100593b7:	jne    0x100593d9
100593b9:	call   0x10046c41
100593be:	push   ebx
100593bf:	push   ebx
100593c0:	push   ebx
100593c1:	push   ebx
100593c2:	push   ebx
100593c3:	mov    DWORD PTR [eax],0x16
100593c9:	call   0x100435e1
100593ce:	add    esp,0x14
100593d1:	or     eax,0xffffffff
100593d4:	jmp    0x10059472
100593d9:	push   esi
100593da:	mov    esi,DWORD PTR [ebp+0xc]
100593dd:	push   edi
100593de:	mov    edi,DWORD PTR [ebp+0x10]
100593e1:	cmp    edi,ebx
100593e3:	je     0x10059406
100593e5:	cmp    esi,ebx
100593e7:	jne    0x10059406
100593e9:	call   0x10046c41
100593ee:	push   ebx
100593ef:	push   ebx
100593f0:	push   ebx
100593f1:	push   ebx
100593f2:	push   ebx
100593f3:	mov    DWORD PTR [eax],0x16
100593f9:	call   0x100435e1
100593fe:	add    esp,0x14
10059401:	or     eax,0xffffffff
10059404:	jmp    0x10059470
10059406:	mov    eax,0x7fffffff
1005940b:	cmp    edi,eax
1005940d:	mov    DWORD PTR [ebp-0x1c],eax
10059410:	ja     0x10059415
10059412:	mov    DWORD PTR [ebp-0x1c],edi
10059415:	push   DWORD PTR [ebp+0x1c]
10059418:	lea    eax,[ebp-0x20]
1005941b:	push   DWORD PTR [ebp+0x18]
1005941e:	mov    DWORD PTR [ebp-0x14],0x42
10059425:	push   DWORD PTR [ebp+0x14]
10059428:	mov    DWORD PTR [ebp-0x18],esi
1005942b:	push   eax
1005942c:	mov    DWORD PTR [ebp-0x20],esi
1005942f:	call   DWORD PTR [ebp+0x8]
10059432:	add    esp,0x10
10059435:	cmp    esi,ebx
10059437:	mov    DWORD PTR [ebp+0x14],eax
1005943a:	je     0x10059470
1005943c:	cmp    eax,ebx
1005943e:	jl     0x10059462
10059440:	dec    DWORD PTR [ebp-0x1c]
10059443:	js     0x1005944c
10059445:	mov    eax,DWORD PTR [ebp-0x20]
10059448:	mov    BYTE PTR [eax],bl
1005944a:	jmp    0x1005945d
1005944c:	lea    eax,[ebp-0x20]
1005944f:	push   eax
10059450:	push   ebx
10059451:	call   0x10048a67
10059456:	cmp    eax,0xffffffff
10059459:	pop    ecx
1005945a:	pop    ecx
1005945b:	je     0x10059462
1005945d:	mov    eax,DWORD PTR [ebp+0x14]
10059460:	jmp    0x10059470
10059462:	xor    eax,eax
10059464:	cmp    DWORD PTR [ebp-0x1c],ebx
10059467:	mov    BYTE PTR [esi+edi*1-0x1],bl
1005946b:	setge  al
1005946e:	dec    eax
1005946f:	dec    eax
10059470:	pop    edi
10059471:	pop    esi
10059472:	pop    ebx
10059473:	leave  
10059474:	ret    
10059475:	push   ebp
10059476:	mov    ebp,esp
10059478:	push   ebx
10059479:	xor    ebx,ebx
1005947b:	cmp    DWORD PTR [ebp+0x10],ebx
1005947e:	jne    0x1005949d
10059480:	call   0x10046c41
10059485:	push   ebx
10059486:	push   ebx
10059487:	push   ebx
10059488:	push   ebx
10059489:	push   ebx
1005948a:	mov    DWORD PTR [eax],0x16
10059490:	call   0x100435e1
10059495:	add    esp,0x14
10059498:	or     eax,0xffffffff
1005949b:	jmp    0x100594f8
1005949d:	push   esi
1005949e:	mov    esi,DWORD PTR [ebp+0x8]
100594a1:	cmp    esi,ebx
100594a3:	je     0x100594aa
100594a5:	cmp    DWORD PTR [ebp+0xc],ebx
100594a8:	ja     0x100594b7
100594aa:	call   0x10046c41
100594af:	mov    DWORD PTR [eax],0x16
100594b5:	jmp    0x100594e7
100594b7:	push   DWORD PTR [ebp+0x18]
100594ba:	push   DWORD PTR [ebp+0x14]
100594bd:	push   DWORD PTR [ebp+0x10]
100594c0:	push   DWORD PTR [ebp+0xc]
100594c3:	push   esi
100594c4:	push   0x1004e1e0
100594c9:	call   0x100593ab
100594ce:	add    esp,0x18
100594d1:	cmp    eax,ebx
100594d3:	jge    0x100594d7
100594d5:	mov    BYTE PTR [esi],bl
100594d7:	cmp    eax,0xfffffffe
100594da:	jne    0x100594f7
100594dc:	call   0x10046c41
100594e1:	mov    DWORD PTR [eax],0x22
100594e7:	push   ebx
100594e8:	push   ebx
100594e9:	push   ebx
100594ea:	push   ebx
100594eb:	push   ebx
100594ec:	call   0x100435e1
100594f1:	add    esp,0x14
100594f4:	or     eax,0xffffffff
100594f7:	pop    esi
100594f8:	pop    ebx
100594f9:	pop    ebp
100594fa:	ret    
100594fb:	push   DWORD PTR [esp+0x10]
100594ff:	push   0x0
10059501:	push   DWORD PTR [esp+0x14]
10059505:	push   DWORD PTR [esp+0x14]
10059509:	push   DWORD PTR [esp+0x14]
1005950d:	call   0x10059475
10059512:	add    esp,0x14
10059515:	ret    
10059516:	push   ebp
10059517:	mov    ebp,esp
10059519:	push   ecx
1005951a:	push   ebx
1005951b:	mov    eax,DWORD PTR [ebp+0xc]
1005951e:	add    eax,0xc
10059521:	mov    DWORD PTR [ebp-0x4],eax
10059524:	mov    ebx,DWORD PTR fs:0x0
1005952b:	mov    eax,DWORD PTR [ebx]
1005952d:	mov    fs:0x0,eax
10059533:	mov    eax,DWORD PTR [ebp+0x8]
10059536:	mov    ebx,DWORD PTR [ebp+0xc]
10059539:	mov    ebp,DWORD PTR [ebp-0x4]
1005953c:	mov    esp,DWORD PTR [ebx-0x4]
1005953f:	jmp    eax
10059541:	pop    ebx
10059542:	leave  
10059543:	ret    0x8
10059546:	pop    eax
10059547:	pop    ecx
10059548:	xchg   DWORD PTR [esp],eax
1005954b:	jmp    eax
1005954d:	push   ebp
1005954e:	mov    ebp,esp
10059550:	push   ecx
10059551:	push   ecx
10059552:	push   ebx
10059553:	push   esi
10059554:	push   edi
10059555:	mov    esi,DWORD PTR fs:0x0
1005955c:	mov    DWORD PTR [ebp-0x4],esi
1005955f:	mov    DWORD PTR [ebp-0x8],0x10059576
10059566:	push   0x0
10059568:	push   DWORD PTR [ebp+0xc]
1005956b:	push   DWORD PTR [ebp-0x8]
1005956e:	push   DWORD PTR [ebp+0x8]
10059571:	call   0x10056de4
10059576:	mov    eax,DWORD PTR [ebp+0xc]
10059579:	mov    eax,DWORD PTR [eax+0x4]
1005957c:	and    eax,0xfffffffd
1005957f:	mov    ecx,DWORD PTR [ebp+0xc]
10059582:	mov    DWORD PTR [ecx+0x4],eax
10059585:	mov    edi,DWORD PTR fs:0x0
1005958c:	mov    ebx,DWORD PTR [ebp-0x4]
1005958f:	mov    DWORD PTR [ebx],edi
10059591:	mov    DWORD PTR fs:0x0,ebx
10059598:	pop    edi
10059599:	pop    esi
1005959a:	pop    ebx
1005959b:	leave  
1005959c:	ret    0x8
1005959f:	push   ebp
100595a0:	mov    ebp,esp
100595a2:	sub    esp,0x8
100595a5:	push   ebx
100595a6:	push   esi
100595a7:	push   edi
100595a8:	cld    
100595a9:	mov    DWORD PTR [ebp-0x4],eax
100595ac:	xor    eax,eax
100595ae:	push   eax
100595af:	push   eax
100595b0:	push   eax
100595b1:	push   DWORD PTR [ebp-0x4]
100595b4:	push   DWORD PTR [ebp+0x14]
100595b7:	push   DWORD PTR [ebp+0x10]
100595ba:	push   DWORD PTR [ebp+0xc]
100595bd:	push   DWORD PTR [ebp+0x8]
100595c0:	call   0x1005b7e0
100595c5:	add    esp,0x20
100595c8:	mov    DWORD PTR [ebp-0x8],eax
100595cb:	pop    edi
100595cc:	pop    esi
100595cd:	pop    ebx
100595ce:	mov    eax,DWORD PTR [ebp-0x8]
100595d1:	mov    esp,ebp
100595d3:	pop    ebp
100595d4:	ret    
100595d5:	push   esi
100595d6:	cld    
100595d7:	mov    esi,DWORD PTR [esp+0xc]
100595db:	mov    ecx,DWORD PTR [esi+0x8]
100595de:	xor    ecx,esi
100595e0:	call   0x10043615
100595e5:	push   0x0
100595e7:	push   esi
100595e8:	push   DWORD PTR [esi+0x14]
100595eb:	push   DWORD PTR [esi+0xc]
100595ee:	push   0x0
100595f0:	push   DWORD PTR [esp+0x24]
100595f4:	push   DWORD PTR [esi+0x10]
100595f7:	push   DWORD PTR [esp+0x24]
100595fb:	call   0x1005b7e0
10059600:	add    esp,0x20
10059603:	pop    esi
10059604:	ret    
10059605:	push   ebp
10059606:	mov    ebp,esp
10059608:	sub    esp,0x38
1005960b:	push   ebx
1005960c:	cmp    DWORD PTR [ebp+0x8],0x123
10059613:	jne    0x10059627
10059615:	mov    eax,0x100596ae
1005961a:	mov    ecx,DWORD PTR [ebp+0xc]
1005961d:	mov    DWORD PTR [ecx],eax
1005961f:	xor    eax,eax
10059621:	inc    eax
10059622:	jmp    0x100596d7
10059627:	and    DWORD PTR [ebp-0x28],0x0
1005962b:	mov    DWORD PTR [ebp-0x24],0x100596da
10059632:	mov    eax,ds:0x100801ac
10059637:	lea    ecx,[ebp-0x28]
1005963a:	xor    eax,ecx
1005963c:	mov    DWORD PTR [ebp-0x20],eax
1005963f:	mov    eax,DWORD PTR [ebp+0x18]
10059642:	mov    DWORD PTR [ebp-0x1c],eax
10059645:	mov    eax,DWORD PTR [ebp+0xc]
10059648:	mov    DWORD PTR [ebp-0x18],eax
1005964b:	mov    eax,DWORD PTR [ebp+0x1c]
1005964e:	mov    DWORD PTR [ebp-0x14],eax
10059651:	mov    eax,DWORD PTR [ebp+0x20]
10059654:	mov    DWORD PTR [ebp-0x10],eax
10059657:	and    DWORD PTR [ebp-0xc],0x0
1005965b:	and    DWORD PTR [ebp-0x8],0x0
1005965f:	and    DWORD PTR [ebp-0x4],0x0
10059663:	mov    DWORD PTR [ebp-0xc],esp
10059666:	mov    DWORD PTR [ebp-0x8],ebp
10059669:	mov    eax,fs:0x0
1005966f:	mov    DWORD PTR [ebp-0x28],eax
10059672:	lea    eax,[ebp-0x28]
10059675:	mov    fs:0x0,eax
1005967b:	mov    DWORD PTR [ebp-0x38],0x1
10059682:	mov    eax,DWORD PTR [ebp+0x8]
10059685:	mov    DWORD PTR [ebp-0x34],eax
10059688:	mov    eax,DWORD PTR [ebp+0x10]
1005968b:	mov    DWORD PTR [ebp-0x30],eax
1005968e:	call   0x10046f84
10059693:	mov    eax,DWORD PTR [eax+0x80]
10059699:	mov    DWORD PTR [ebp-0x2c],eax
1005969c:	lea    eax,[ebp-0x34]
1005969f:	push   eax
100596a0:	mov    eax,DWORD PTR [ebp+0x8]
100596a3:	push   DWORD PTR [eax]
100596a5:	call   DWORD PTR [ebp-0x2c]
100596a8:	pop    ecx
100596a9:	pop    ecx
100596aa:	and    DWORD PTR [ebp-0x38],0x0
100596ae:	cmp    DWORD PTR [ebp-0x4],0x0
100596b2:	je     0x100596cb
100596b4:	mov    ebx,DWORD PTR fs:0x0
100596bb:	mov    eax,DWORD PTR [ebx]
100596bd:	mov    ebx,DWORD PTR [ebp-0x28]
100596c0:	mov    DWORD PTR [ebx],eax
100596c2:	mov    DWORD PTR fs:0x0,ebx
100596c9:	jmp    0x100596d4
100596cb:	mov    eax,DWORD PTR [ebp-0x28]
100596ce:	mov    fs:0x0,eax
100596d4:	mov    eax,DWORD PTR [ebp-0x38]
100596d7:	pop    ebx
100596d8:	leave  
100596d9:	ret    
100596da:	push   ebp
100596db:	mov    ebp,esp
100596dd:	push   ecx
100596de:	push   ebx
100596df:	cld    
100596e0:	mov    eax,DWORD PTR [ebp+0xc]
100596e3:	mov    ecx,DWORD PTR [eax+0x8]
100596e6:	xor    ecx,DWORD PTR [ebp+0xc]
100596e9:	call   0x10043615
100596ee:	mov    eax,DWORD PTR [ebp+0x8]
100596f1:	mov    eax,DWORD PTR [eax+0x4]
100596f4:	and    eax,0x66
100596f7:	je     0x1005970a
100596f9:	mov    eax,DWORD PTR [ebp+0xc]
100596fc:	mov    DWORD PTR [eax+0x24],0x1
10059703:	xor    eax,eax
10059705:	inc    eax
10059706:	jmp    0x10059774
10059708:	jmp    0x10059774
1005970a:	push   0x1
1005970c:	mov    eax,DWORD PTR [ebp+0xc]
1005970f:	push   DWORD PTR [eax+0x18]
10059712:	mov    eax,DWORD PTR [ebp+0xc]
10059715:	push   DWORD PTR [eax+0x14]
10059718:	mov    eax,DWORD PTR [ebp+0xc]
1005971b:	push   DWORD PTR [eax+0xc]
1005971e:	push   0x0
10059720:	push   DWORD PTR [ebp+0x10]
10059723:	mov    eax,DWORD PTR [ebp+0xc]
10059726:	push   DWORD PTR [eax+0x10]
10059729:	push   DWORD PTR [ebp+0x8]
1005972c:	call   0x1005b7e0
10059731:	add    esp,0x20
10059734:	mov    eax,DWORD PTR [ebp+0xc]
10059737:	cmp    DWORD PTR [eax+0x24],0x0
1005973b:	jne    0x10059748
1005973d:	push   DWORD PTR [ebp+0x8]
10059740:	push   DWORD PTR [ebp+0xc]
10059743:	call   0x1005954d
10059748:	push   0x0
1005974a:	push   0x0
1005974c:	push   0x0
1005974e:	push   0x0
10059750:	push   0x0
10059752:	lea    eax,[ebp-0x4]
10059755:	push   eax
10059756:	push   0x123
1005975b:	call   0x10059605
10059760:	add    esp,0x1c
10059763:	mov    eax,DWORD PTR [ebp-0x4]
10059766:	mov    ebx,DWORD PTR [ebp+0xc]
10059769:	mov    esp,DWORD PTR [ebx+0x1c]
1005976c:	mov    ebp,DWORD PTR [ebx+0x20]
1005976f:	jmp    eax
10059771:	xor    eax,eax
10059773:	inc    eax
10059774:	pop    ebx
10059775:	leave  
10059776:	ret    
10059777:	push   ebp
10059778:	mov    ebp,esp
1005977a:	push   ecx
1005977b:	push   ebx
1005977c:	push   esi
1005977d:	push   edi
1005977e:	mov    edi,DWORD PTR [ebp+0x8]
10059781:	mov    eax,DWORD PTR [edi+0x10]
10059784:	mov    esi,DWORD PTR [edi+0xc]
10059787:	mov    DWORD PTR [ebp-0x4],eax
1005978a:	mov    ebx,esi
1005978c:	jmp    0x100597bb
1005978e:	cmp    esi,0xffffffff
10059791:	jne    0x10059798
10059793:	call   0x100479d8
10059798:	mov    ecx,DWORD PTR [ebp-0x4]
1005979b:	dec    esi
1005979c:	mov    eax,esi
1005979e:	imul   eax,eax,0x14
100597a1:	add    eax,ecx
100597a3:	mov    ecx,DWORD PTR [ebp+0x10]
100597a6:	cmp    DWORD PTR [eax+0x4],ecx
100597a9:	jge    0x100597b0
100597ab:	cmp    ecx,DWORD PTR [eax+0x8]
100597ae:	jle    0x100597b5
100597b0:	cmp    esi,0xffffffff
100597b3:	jne    0x100597be
100597b5:	dec    DWORD PTR [ebp+0xc]
100597b8:	mov    ebx,DWORD PTR [ebp+0x8]
100597bb:	mov    DWORD PTR [ebp+0x8],esi
100597be:	cmp    DWORD PTR [ebp+0xc],0x0
100597c2:	jge    0x1005978e
100597c4:	mov    eax,DWORD PTR [ebp+0x14]
100597c7:	inc    esi
100597c8:	mov    DWORD PTR [eax],esi
100597ca:	mov    eax,DWORD PTR [ebp+0x18]
100597cd:	mov    DWORD PTR [eax],ebx
100597cf:	cmp    ebx,DWORD PTR [edi+0xc]
100597d2:	ja     0x100597d8
100597d4:	cmp    esi,ebx
100597d6:	jbe    0x100597dd
100597d8:	call   0x100479d8
100597dd:	mov    eax,esi
100597df:	imul   eax,eax,0x14
100597e2:	add    eax,DWORD PTR [ebp-0x4]
100597e5:	pop    edi
100597e6:	pop    esi
100597e7:	pop    ebx
100597e8:	leave  
100597e9:	ret    
100597ea:	mov    eax,DWORD PTR [esp+0x8]
100597ee:	push   esi
100597ef:	mov    esi,DWORD PTR [esp+0x8]
100597f3:	mov    DWORD PTR [esi],eax
100597f5:	call   0x10046f84
100597fa:	mov    eax,DWORD PTR [eax+0x98]
10059800:	mov    DWORD PTR [esi+0x4],eax
10059803:	call   0x10046f84
10059808:	mov    DWORD PTR [eax+0x98],esi
1005980e:	mov    eax,esi
10059810:	pop    esi
10059811:	ret    
10059812:	call   0x10046f84
10059817:	mov    eax,DWORD PTR [eax+0x98]
1005981d:	jmp    0x1005982a
1005981f:	mov    ecx,DWORD PTR [eax]
10059821:	cmp    ecx,DWORD PTR [esp+0x4]
10059825:	je     0x10059830
10059827:	mov    eax,DWORD PTR [eax+0x4]
1005982a:	test   eax,eax
1005982c:	jne    0x1005981f
1005982e:	inc    eax
1005982f:	ret    
10059830:	xor    eax,eax
10059832:	ret    
10059833:	push   esi
10059834:	call   0x10046f84
10059839:	mov    esi,DWORD PTR [esp+0x8]
1005983d:	cmp    esi,DWORD PTR [eax+0x98]
10059843:	jne    0x10059855
10059845:	call   0x10046f84
1005984a:	mov    ecx,DWORD PTR [esi+0x4]
1005984d:	mov    DWORD PTR [eax+0x98],ecx
10059853:	pop    esi
10059854:	ret    
10059855:	call   0x10046f84
1005985a:	mov    eax,DWORD PTR [eax+0x98]
10059860:	jmp    0x1005986b
10059862:	mov    ecx,DWORD PTR [eax+0x4]
10059865:	cmp    esi,ecx
10059867:	je     0x10059877
10059869:	mov    eax,ecx
1005986b:	cmp    DWORD PTR [eax+0x4],0x0
1005986f:	jne    0x10059862
10059871:	pop    esi
10059872:	jmp    0x100479d8
10059877:	mov    ecx,DWORD PTR [esi+0x4]
1005987a:	mov    DWORD PTR [eax+0x4],ecx
1005987d:	pop    esi
1005987e:	ret    
1005987f:	push   ebp
10059880:	mov    ebp,esp
10059882:	sub    esp,0x18
10059885:	mov    eax,ds:0x100801ac
1005988a:	and    DWORD PTR [ebp-0x18],0x0
1005988e:	lea    ecx,[ebp-0x18]
10059891:	xor    eax,ecx
10059893:	mov    ecx,DWORD PTR [ebp+0x8]
10059896:	mov    DWORD PTR [ebp-0x10],eax
10059899:	mov    eax,DWORD PTR [ebp+0xc]
1005989c:	mov    DWORD PTR [ebp-0xc],eax
1005989f:	mov    eax,DWORD PTR [ebp+0x14]
100598a2:	inc    eax
100598a3:	mov    DWORD PTR [ebp-0x14],0x100595d5
100598aa:	mov    DWORD PTR [ebp-0x8],ecx
100598ad:	mov    DWORD PTR [ebp-0x4],eax
100598b0:	mov    eax,fs:0x0
100598b6:	mov    DWORD PTR [ebp-0x18],eax
100598b9:	lea    eax,[ebp-0x18]
100598bc:	mov    fs:0x0,eax
100598c2:	push   DWORD PTR [ebp+0x18]
100598c5:	push   ecx
100598c6:	push   DWORD PTR [ebp+0x10]
100598c9:	call   0x1005b8d0
100598ce:	mov    ecx,eax
100598d0:	mov    eax,DWORD PTR [ebp-0x18]
100598d3:	mov    fs:0x0,eax
100598d9:	mov    eax,ecx
100598db:	leave  
100598dc:	ret    
100598dd:	ret    
100598de:	mov    eax,0x1005c3a9
100598e3:	mov    ds:0x10080a98,eax
100598e8:	mov    DWORD PTR ds:0x10080a9c,0x1005baa5
100598f2:	mov    DWORD PTR ds:0x10080aa0,0x1005ba63
100598fc:	mov    DWORD PTR ds:0x10080aa4,0x1005ba97
10059906:	mov    DWORD PTR ds:0x10080aa8,0x1005ba0d
10059910:	mov    ds:0x10080aac,eax
10059915:	mov    DWORD PTR ds:0x10080ab0,0x1005c323
1005991f:	mov    DWORD PTR ds:0x10080ab4,0x1005ba23
10059929:	mov    DWORD PTR ds:0x10080ab8,0x1005b98d
10059933:	mov    DWORD PTR ds:0x10080abc,0x1005b91c
1005993d:	ret    
1005993e:	call   0x100598de
10059943:	call   0x1005c42f
10059948:	cmp    DWORD PTR [esp+0x4],0x0
1005994d:	mov    ds:0x10082b2c,eax
10059952:	je     0x10059959
10059954:	call   0x1005c3ca
10059959:	fnclex 
1005995b:	ret    
1005995c:	push   0x18
1005995e:	push   0x100761c8
10059963:	call   0x1004771c
10059968:	mov    eax,DWORD PTR [ebp+0x8]
1005996b:	mov    DWORD PTR [ebp-0x1c],eax
1005996e:	mov    DWORD PTR [ebp-0x20],eax
10059971:	xor    ebx,ebx
10059973:	cmp    eax,ebx
10059975:	jne    0x1005999b
10059977:	cmp    DWORD PTR [ebp+0xc],ebx
1005997a:	je     0x1005999b
1005997c:	call   0x10046c41
10059981:	mov    DWORD PTR [eax],0x16
10059987:	push   ebx
10059988:	push   ebx
10059989:	push   ebx
1005998a:	push   ebx
1005998b:	push   ebx
1005998c:	call   0x100435e1
10059991:	add    esp,0x14
10059994:	xor    eax,eax
10059996:	jmp    0x10059ad2
1005999b:	xor    eax,eax
1005999d:	cmp    DWORD PTR [ebp+0xc],ebx
100599a0:	setge  al
100599a3:	cmp    eax,ebx
100599a5:	je     0x1005997c
100599a7:	xor    eax,eax
100599a9:	mov    esi,DWORD PTR [ebp+0x10]
100599ac:	cmp    esi,ebx
100599ae:	setne  al
100599b1:	cmp    eax,ebx
100599b3:	je     0x1005997c
100599b5:	cmp    DWORD PTR [ebp+0xc],ebx
100599b8:	je     0x10059994
100599ba:	mov    edi,esi
100599bc:	mov    DWORD PTR [ebp-0x24],edi
100599bf:	push   esi
100599c0:	call   0x1004d396
100599c5:	pop    ecx
100599c6:	mov    DWORD PTR [ebp-0x4],ebx
100599c9:	test   BYTE PTR [esi+0xc],0x40
100599cd:	jne    0x10059a7d
100599d3:	push   esi
100599d4:	call   0x1004d460
100599d9:	pop    ecx
100599da:	cmp    eax,0xffffffff
100599dd:	je     0x10059a0f
100599df:	push   esi
100599e0:	call   0x1004d460
100599e5:	pop    ecx
100599e6:	cmp    eax,0xfffffffe
100599e9:	je     0x10059a0f
100599eb:	push   esi
100599ec:	call   0x1004d460
100599f1:	sar    eax,0x5
100599f4:	lea    edi,[eax*4+0x100844e0]
100599fb:	push   esi
100599fc:	call   0x1004d460
10059a01:	pop    ecx
10059a02:	pop    ecx
10059a03:	and    eax,0x1f
10059a06:	shl    eax,0x6
10059a09:	add    eax,DWORD PTR [edi]
10059a0b:	mov    edi,esi
10059a0d:	jmp    0x10059a14
10059a0f:	mov    eax,0x100809d0
10059a14:	test   BYTE PTR [eax+0x24],0x7f
10059a18:	jne    0x10059a62
10059a1a:	push   esi
10059a1b:	call   0x1004d460
10059a20:	pop    ecx
10059a21:	cmp    eax,0xffffffff
10059a24:	je     0x10059a57
10059a26:	push   esi
10059a27:	call   0x1004d460
10059a2c:	pop    ecx
10059a2d:	cmp    eax,0xfffffffe
10059a30:	je     0x10059a57
10059a32:	push   esi
10059a33:	call   0x1004d460
10059a38:	sar    eax,0x5
10059a3b:	lea    edi,[eax*4+0x100844e0]
10059a42:	push   esi
10059a43:	call   0x1004d460
10059a48:	pop    ecx
10059a49:	pop    ecx
10059a4a:	and    eax,0x1f
10059a4d:	shl    eax,0x6
10059a50:	add    eax,DWORD PTR [edi]
10059a52:	mov    edi,DWORD PTR [ebp-0x24]
10059a55:	jmp    0x10059a5c
10059a57:	mov    eax,0x100809d0
10059a5c:	test   BYTE PTR [eax+0x24],0x80
10059a60:	je     0x10059a7d
10059a62:	call   0x10046c41
10059a67:	mov    DWORD PTR [eax],0x16
10059a6d:	push   ebx
10059a6e:	push   ebx
10059a6f:	push   ebx
10059a70:	push   ebx
10059a71:	push   ebx
10059a72:	call   0x100435e1
10059a77:	add    esp,0x14
10059a7a:	mov    DWORD PTR [ebp-0x20],ebx
10059a7d:	cmp    DWORD PTR [ebp-0x20],ebx
10059a80:	je     0x10059ac3
10059a82:	dec    DWORD PTR [ebp+0xc]
10059a85:	je     0x10059abe
10059a87:	dec    DWORD PTR [edi+0x4]
10059a8a:	js     0x10059a96
10059a8c:	mov    ecx,DWORD PTR [edi]
10059a8e:	movzx  eax,BYTE PTR [ecx]
10059a91:	inc    ecx
10059a92:	mov    DWORD PTR [edi],ecx
10059a94:	jmp    0x10059a9d
10059a96:	push   edi
10059a97:	call   0x1005c458
10059a9c:	pop    ecx
10059a9d:	mov    DWORD PTR [ebp-0x28],eax
10059aa0:	cmp    eax,0xffffffff
10059aa3:	jne    0x10059ab2
10059aa5:	mov    eax,DWORD PTR [ebp-0x1c]
10059aa8:	cmp    eax,DWORD PTR [ebp+0x8]
10059aab:	jne    0x10059ac1
10059aad:	mov    DWORD PTR [ebp-0x20],ebx
10059ab0:	jmp    0x10059ac3
10059ab2:	mov    ecx,DWORD PTR [ebp-0x1c]
10059ab5:	mov    BYTE PTR [ecx],al
10059ab7:	inc    DWORD PTR [ebp-0x1c]
10059aba:	cmp    al,0xa
10059abc:	jne    0x10059a82
10059abe:	mov    eax,DWORD PTR [ebp-0x1c]
10059ac1:	mov    BYTE PTR [eax],bl
10059ac3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059aca:	call   0x10059adb
10059acf:	mov    eax,DWORD PTR [ebp-0x20]
10059ad2:	call   0x10047761
10059ad7:	ret    
10059ad8:	mov    edi,DWORD PTR [ebp-0x24]
10059adb:	push   edi
10059adc:	call   0x1004d400
10059ae1:	pop    ecx
10059ae2:	ret    
10059ae3:	push   ebp
10059ae4:	mov    ebp,esp
10059ae6:	sub    esp,0x20
10059ae9:	push   ebx
10059aea:	xor    ebx,ebx
10059aec:	cmp    DWORD PTR [ebp+0x10],ebx
10059aef:	jne    0x10059b0e
10059af1:	call   0x10046c41
10059af6:	push   ebx
10059af7:	push   ebx
10059af8:	push   ebx
10059af9:	push   ebx
10059afa:	push   ebx
10059afb:	mov    DWORD PTR [eax],0x16
10059b01:	call   0x100435e1
10059b06:	add    esp,0x14
10059b09:	or     eax,0xffffffff
10059b0c:	jmp    0x10059b8d
10059b0e:	mov    ecx,DWORD PTR [ebp+0xc]
10059b11:	cmp    ecx,ebx
10059b13:	push   esi
10059b14:	mov    esi,DWORD PTR [ebp+0x8]
10059b17:	je     0x10059b3a
10059b19:	cmp    esi,ebx
10059b1b:	jne    0x10059b3a
10059b1d:	call   0x10046c41
10059b22:	push   ebx
10059b23:	push   ebx
10059b24:	push   ebx
10059b25:	push   ebx
10059b26:	push   ebx
10059b27:	mov    DWORD PTR [eax],0x16
10059b2d:	call   0x100435e1
10059b32:	add    esp,0x14
10059b35:	or     eax,0xffffffff
10059b38:	jmp    0x10059b8c
10059b3a:	mov    eax,0x7fffffff
10059b3f:	cmp    ecx,eax
10059b41:	mov    DWORD PTR [ebp-0x1c],eax
10059b44:	ja     0x10059b49
10059b46:	mov    DWORD PTR [ebp-0x1c],ecx
10059b49:	push   edi
10059b4a:	lea    eax,[ebp+0x14]
10059b4d:	push   eax
10059b4e:	push   ebx
10059b4f:	push   DWORD PTR [ebp+0x10]
10059b52:	lea    eax,[ebp-0x20]
10059b55:	push   eax
10059b56:	mov    DWORD PTR [ebp-0x14],0x42
10059b5d:	mov    DWORD PTR [ebp-0x18],esi
10059b60:	mov    DWORD PTR [ebp-0x20],esi
10059b63:	call   0x1004d70c
10059b68:	add    esp,0x10
10059b6b:	cmp    esi,ebx
10059b6d:	mov    edi,eax
10059b6f:	je     0x10059b8b
10059b71:	dec    DWORD PTR [ebp-0x1c]
10059b74:	js     0x10059b7d
10059b76:	mov    eax,DWORD PTR [ebp-0x20]
10059b79:	mov    BYTE PTR [eax],bl
10059b7b:	jmp    0x10059b89
10059b7d:	lea    eax,[ebp-0x20]
10059b80:	push   eax
10059b81:	push   ebx
10059b82:	call   0x10048a67
10059b87:	pop    ecx
10059b88:	pop    ecx
10059b89:	mov    eax,edi
10059b8b:	pop    edi
10059b8c:	pop    esi
10059b8d:	pop    ebx
10059b8e:	leave  
10059b8f:	ret    
10059b90:	mov    ecx,DWORD PTR [esp+0xc]
10059b94:	push   edi
10059b95:	test   ecx,ecx
10059b97:	je     0x10059c2f
10059b9d:	push   esi
10059b9e:	push   ebx
10059b9f:	mov    ebx,ecx
10059ba1:	mov    esi,DWORD PTR [esp+0x14]
10059ba5:	test   esi,0x3
10059bab:	mov    edi,DWORD PTR [esp+0x10]
10059baf:	jne    0x10059bbc
10059bb1:	shr    ecx,0x2
10059bb4:	jne    0x10059c3f
10059bba:	jmp    0x10059be3
10059bbc:	mov    al,BYTE PTR [esi]
10059bbe:	add    esi,0x1
10059bc1:	mov    BYTE PTR [edi],al
10059bc3:	add    edi,0x1
10059bc6:	sub    ecx,0x1
10059bc9:	je     0x10059bf6
10059bcb:	test   al,al
10059bcd:	je     0x10059bfe
10059bcf:	test   esi,0x3
10059bd5:	jne    0x10059bbc
10059bd7:	mov    ebx,ecx
10059bd9:	shr    ecx,0x2
10059bdc:	jne    0x10059c3f
10059bde:	and    ebx,0x3
10059be1:	je     0x10059bf6
10059be3:	mov    al,BYTE PTR [esi]
10059be5:	add    esi,0x1
10059be8:	mov    BYTE PTR [edi],al
10059bea:	add    edi,0x1
10059bed:	test   al,al
10059bef:	je     0x10059c28
10059bf1:	sub    ebx,0x1
10059bf4:	jne    0x10059be3
10059bf6:	mov    eax,DWORD PTR [esp+0x10]
10059bfa:	pop    ebx
10059bfb:	pop    esi
10059bfc:	pop    edi
10059bfd:	ret    
10059bfe:	test   edi,0x3
10059c04:	je     0x10059c1c
10059c06:	mov    BYTE PTR [edi],al
10059c08:	add    edi,0x1
10059c0b:	sub    ecx,0x1
10059c0e:	je     0x10059cac
10059c14:	test   edi,0x3
10059c1a:	jne    0x10059c06
10059c1c:	mov    ebx,ecx
10059c1e:	shr    ecx,0x2
10059c21:	jne    0x10059c97
10059c23:	mov    BYTE PTR [edi],al
10059c25:	add    edi,0x1
10059c28:	sub    ebx,0x1
10059c2b:	jne    0x10059c23
10059c2d:	pop    ebx
10059c2e:	pop    esi
10059c2f:	mov    eax,DWORD PTR [esp+0x8]
10059c33:	pop    edi
10059c34:	ret    
10059c35:	mov    DWORD PTR [edi],edx
10059c37:	add    edi,0x4
10059c3a:	sub    ecx,0x1
10059c3d:	je     0x10059bde
10059c3f:	mov    edx,0x7efefeff
10059c44:	mov    eax,DWORD PTR [esi]
10059c46:	add    edx,eax
10059c48:	xor    eax,0xffffffff
10059c4b:	xor    eax,edx
10059c4d:	mov    edx,DWORD PTR [esi]
10059c4f:	add    esi,0x4
10059c52:	test   eax,0x81010100
10059c57:	je     0x10059c35
10059c59:	test   dl,dl
10059c5b:	je     0x10059c89
10059c5d:	test   dh,dh
10059c5f:	je     0x10059c7f
10059c61:	test   edx,0xff0000
10059c67:	je     0x10059c75
10059c69:	test   edx,0xff000000
10059c6f:	jne    0x10059c35
10059c71:	mov    DWORD PTR [edi],edx
10059c73:	jmp    0x10059c8d
10059c75:	and    edx,0xffff
10059c7b:	mov    DWORD PTR [edi],edx
10059c7d:	jmp    0x10059c8d
10059c7f:	and    edx,0xff
10059c85:	mov    DWORD PTR [edi],edx
10059c87:	jmp    0x10059c8d
10059c89:	xor    edx,edx
10059c8b:	mov    DWORD PTR [edi],edx
10059c8d:	add    edi,0x4
10059c90:	xor    eax,eax
10059c92:	sub    ecx,0x1
10059c95:	je     0x10059ca3
10059c97:	xor    eax,eax
10059c99:	mov    DWORD PTR [edi],eax
10059c9b:	add    edi,0x4
10059c9e:	sub    ecx,0x1
10059ca1:	jne    0x10059c99
10059ca3:	and    ebx,0x3
10059ca6:	jne    0x10059c23
10059cac:	mov    eax,DWORD PTR [esp+0x10]
10059cb0:	pop    ebx
10059cb1:	pop    esi
10059cb2:	pop    edi
10059cb3:	ret    
10059cb4:	int3   
10059cb5:	int3   
10059cb6:	int3   
10059cb7:	int3   
10059cb8:	int3   
10059cb9:	int3   
10059cba:	int3   
10059cbb:	int3   
10059cbc:	int3   
10059cbd:	int3   
10059cbe:	int3   
10059cbf:	int3   
10059cc0:	push   ebp
10059cc1:	mov    ebp,esp
10059cc3:	push   edi
10059cc4:	mov    edi,DWORD PTR [ebp+0x8]
10059cc7:	xor    eax,eax
10059cc9:	or     ecx,0xffffffff
10059ccc:	repnz scas al,BYTE PTR es:[edi]
10059cce:	add    ecx,0x1
10059cd1:	neg    ecx
10059cd3:	sub    edi,0x1
10059cd6:	mov    al,BYTE PTR [ebp+0xc]
10059cd9:	std    
10059cda:	repnz scas al,BYTE PTR es:[edi]
10059cdc:	add    edi,0x1
10059cdf:	cmp    BYTE PTR [edi],al
10059ce1:	je     0x10059ce7
10059ce3:	xor    eax,eax
10059ce5:	jmp    0x10059ce9
10059ce7:	mov    eax,edi
10059ce9:	cld    
10059cea:	pop    edi
10059ceb:	leave  
10059cec:	ret    
10059ced:	push   ebp
10059cee:	mov    ebp,esp
10059cf0:	push   ecx
10059cf1:	push   ecx
10059cf2:	mov    eax,DWORD PTR [ebp+0xc]
10059cf5:	push   ebx
10059cf6:	xor    ebx,ebx
10059cf8:	cmp    eax,ebx
10059cfa:	push   esi
10059cfb:	push   edi
10059cfc:	je     0x10059de3
10059d02:	cmp    BYTE PTR [eax],bl
10059d04:	je     0x10059de3
10059d0a:	cmp    DWORD PTR [ebp+0x8],ebx
10059d0d:	mov    esi,DWORD PTR ds:0x10067058
10059d13:	jne    0x10059d70
10059d15:	push   ebx
10059d16:	push   ebx
10059d17:	push   ebx
10059d18:	push   eax
10059d19:	call   esi
10059d1b:	cmp    eax,ebx
10059d1d:	jne    0x10059d32
10059d1f:	call   DWORD PTR ds:0x100670cc
10059d25:	push   eax
10059d26:	call   0x10046c67
10059d2b:	xor    eax,eax
10059d2d:	jmp    0x10059def
10059d32:	mov    edi,DWORD PTR [ebp+0x10]
10059d35:	cmp    edi,eax
10059d37:	ja     0x10059d3b
10059d39:	mov    edi,eax
10059d3b:	cmp    edi,0xffffffff
10059d3e:	jbe    0x10059d52
10059d40:	call   0x10046c41
10059d45:	mov    DWORD PTR [eax],0x16
10059d4b:	xor    eax,eax
10059d4d:	jmp    0x10059df0
10059d52:	push   0x1
10059d54:	push   edi
10059d55:	call   0x10043787
10059d5a:	cmp    eax,ebx
10059d5c:	pop    ecx
10059d5d:	pop    ecx
10059d5e:	mov    DWORD PTR [ebp-0x4],eax
10059d61:	jne    0x10059d97
10059d63:	call   0x10046c41
10059d68:	mov    DWORD PTR [eax],0xc
10059d6e:	jmp    0x10059d4b
10059d70:	mov    edi,DWORD PTR [ebp+0x10]
10059d73:	cmp    edi,ebx
10059d75:	ja     0x10059d91
10059d77:	call   0x10046c41
10059d7c:	push   ebx
10059d7d:	push   ebx
10059d7e:	push   ebx
10059d7f:	push   ebx
10059d80:	push   ebx
10059d81:	mov    DWORD PTR [eax],0x16
10059d87:	call   0x100435e1
10059d8c:	add    esp,0x14
10059d8f:	jmp    0x10059d4b
10059d91:	mov    eax,DWORD PTR [ebp+0x8]
10059d94:	mov    DWORD PTR [ebp-0x4],eax
10059d97:	lea    eax,[ebp-0x8]
10059d9a:	push   eax
10059d9b:	push   DWORD PTR [ebp-0x4]
10059d9e:	push   edi
10059d9f:	push   DWORD PTR [ebp+0xc]
10059da2:	call   esi
10059da4:	cmp    eax,edi
10059da6:	jb     0x10059dc3
10059da8:	cmp    DWORD PTR [ebp+0x8],ebx
10059dab:	jne    0x10059db6
10059dad:	push   DWORD PTR [ebp-0x4]
10059db0:	call   0x100437dc
10059db5:	pop    ecx
10059db6:	call   0x10046c41
10059dbb:	mov    DWORD PTR [eax],0x22
10059dc1:	jmp    0x10059d4b
10059dc3:	cmp    eax,ebx
10059dc5:	jne    0x10059dde
10059dc7:	cmp    DWORD PTR [ebp+0x8],ebx
10059dca:	jne    0x10059d1f
10059dd0:	push   DWORD PTR [ebp-0x4]
10059dd3:	call   0x100437dc
10059dd8:	pop    ecx
10059dd9:	jmp    0x10059d1f
10059dde:	mov    eax,DWORD PTR [ebp-0x4]
10059de1:	jmp    0x10059df0
10059de3:	push   DWORD PTR [ebp+0x10]
10059de6:	push   DWORD PTR [ebp+0x8]
10059de9:	call   0x1005c6e4
10059dee:	pop    ecx
10059def:	pop    ecx
10059df0:	pop    edi
10059df1:	pop    esi
10059df2:	pop    ebx
10059df3:	leave  
10059df4:	ret    
10059df5:	push   eax
10059df6:	push   DWORD PTR fs:0x0
10059dfd:	lea    eax,[esp+0xc]
10059e01:	sub    esp,DWORD PTR [esp+0xc]
10059e05:	push   ebx
10059e06:	push   esi
10059e07:	push   edi
10059e08:	mov    DWORD PTR [eax],ebp
10059e0a:	mov    ebp,eax
10059e0c:	mov    eax,ds:0x100801ac
10059e11:	xor    eax,ebp
10059e13:	push   eax
10059e14:	push   DWORD PTR [ebp-0x4]
10059e17:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059e1e:	lea    eax,[ebp-0xc]
10059e21:	mov    fs:0x0,eax
10059e27:	ret    
10059e28:	push   eax
10059e29:	push   DWORD PTR fs:0x0
10059e30:	lea    eax,[esp+0xc]
10059e34:	sub    esp,DWORD PTR [esp+0xc]
10059e38:	push   ebx
10059e39:	push   esi
10059e3a:	push   edi
10059e3b:	mov    DWORD PTR [eax],ebp
10059e3d:	mov    ebp,eax
10059e3f:	mov    eax,ds:0x100801ac
10059e44:	xor    eax,ebp
10059e46:	push   eax
10059e47:	mov    DWORD PTR [ebp-0x10],esp
10059e4a:	push   DWORD PTR [ebp-0x4]
10059e4d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059e54:	lea    eax,[ebp-0xc]
10059e57:	mov    fs:0x0,eax
10059e5d:	ret    
10059e5e:	push   eax
10059e5f:	push   DWORD PTR fs:0x0
10059e66:	lea    eax,[esp+0xc]
10059e6a:	sub    esp,DWORD PTR [esp+0xc]
10059e6e:	push   ebx
10059e6f:	push   esi
10059e70:	push   edi
10059e71:	mov    DWORD PTR [eax],ebp
10059e73:	mov    ebp,eax
10059e75:	mov    eax,ds:0x100801ac
10059e7a:	xor    eax,ebp
10059e7c:	push   eax
10059e7d:	mov    DWORD PTR [ebp-0x10],eax
10059e80:	push   DWORD PTR [ebp-0x4]
10059e83:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059e8a:	lea    eax,[ebp-0xc]
10059e8d:	mov    fs:0x0,eax
10059e93:	ret    
10059e94:	push   eax
10059e95:	push   DWORD PTR fs:0x0
10059e9c:	lea    eax,[esp+0xc]
10059ea0:	sub    esp,DWORD PTR [esp+0xc]
10059ea4:	push   ebx
10059ea5:	push   esi
10059ea6:	push   edi
10059ea7:	mov    DWORD PTR [eax],ebp
10059ea9:	mov    ebp,eax
10059eab:	mov    eax,ds:0x100801ac
10059eb0:	xor    eax,ebp
10059eb2:	push   eax
10059eb3:	mov    DWORD PTR [ebp-0x14],eax
10059eb6:	mov    DWORD PTR [ebp-0x10],esp
10059eb9:	push   DWORD PTR [ebp-0x4]
10059ebc:	mov    DWORD PTR [ebp-0x4],0xffffffff
10059ec3:	lea    eax,[ebp-0xc]
10059ec6:	mov    fs:0x0,eax
10059ecc:	ret    
10059ecd:	mov    ecx,DWORD PTR [ebp-0xc]
10059ed0:	mov    DWORD PTR fs:0x0,ecx
10059ed7:	pop    ecx
10059ed8:	pop    edi
10059ed9:	pop    edi
10059eda:	pop    esi
10059edb:	pop    ebx
10059edc:	mov    esp,ebp
10059ede:	pop    ebp
10059edf:	push   ecx
10059ee0:	ret    
10059ee1:	mov    ecx,DWORD PTR [ebp-0x10]
10059ee4:	xor    ecx,ebp
10059ee6:	call   0x10043615
10059eeb:	jmp    0x10059ecd
10059ef0:	mov    ecx,DWORD PTR [ebp-0x14]
10059ef3:	xor    ecx,ebp
10059ef5:	call   0x10043615
10059efa:	jmp    0x10059ecd
10059eff:	int3   
10059f00:	push   esi
10059f01:	inc    ebx
10059f02:	xor    dh,BYTE PTR [eax]
10059f04:	pop    eax
10059f05:	inc    ebx
10059f06:	xor    BYTE PTR [eax],dh
10059f08:	push   ebp
10059f09:	mov    ebp,esp
10059f0b:	sub    esp,0x8
10059f0e:	push   ebx
10059f0f:	push   esi
10059f10:	push   edi
10059f11:	push   ebp
10059f12:	cld    
10059f13:	mov    ebx,DWORD PTR [ebp+0xc]
10059f16:	mov    eax,DWORD PTR [ebp+0x8]
10059f19:	test   DWORD PTR [eax+0x4],0x6
10059f20:	jne    0x10059fe9
10059f26:	mov    DWORD PTR [ebp-0x8],eax
10059f29:	mov    eax,DWORD PTR [ebp+0x10]
10059f2c:	mov    DWORD PTR [ebp-0x4],eax
10059f2f:	lea    eax,[ebp-0x8]
10059f32:	mov    DWORD PTR [ebx-0x4],eax
10059f35:	mov    esi,DWORD PTR [ebx+0xc]
10059f38:	mov    edi,DWORD PTR [ebx+0x8]
10059f3b:	push   ebx
10059f3c:	call   0x1005cb20
10059f41:	add    esp,0x4
10059f44:	or     eax,eax
10059f46:	jle    0x10059fdb
10059f4c:	cmp    esi,0xffffffff
10059f4f:	je     0x10059fe2
10059f55:	lea    ecx,[esi+esi*2]
10059f58:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
10059f5c:	or     eax,eax
10059f5e:	je     0x10059fc6
10059f60:	push   esi
10059f61:	push   ebp
10059f62:	lea    ebp,[ebx+0x10]
10059f65:	xor    ebx,ebx
10059f67:	xor    ecx,ecx
10059f69:	xor    edx,edx
10059f6b:	xor    esi,esi
10059f6d:	xor    edi,edi
10059f6f:	call   eax
10059f71:	pop    ebp
10059f72:	pop    esi
10059f73:	mov    ebx,DWORD PTR [ebp+0xc]
10059f76:	or     eax,eax
10059f78:	je     0x10059fc6
10059f7a:	js     0x10059fd4
10059f7c:	push   0x1
10059f7e:	push   DWORD PTR [ebp+0x8]
10059f81:	call   0x1005ca23
10059f86:	add    esp,0x8
10059f89:	mov    edi,DWORD PTR [ebx+0x8]
10059f8c:	push   ebx
10059f8d:	call   0x1004fa34
10059f92:	add    esp,0x4
10059f95:	lea    ebp,[ebx+0x10]
10059f98:	push   esi
10059f99:	push   ebx
10059f9a:	call   0x1004fa99
10059f9f:	add    esp,0x8
10059fa2:	lea    ecx,[esi+esi*2]
10059fa5:	push   0x1
10059fa7:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059fab:	call   0x1004fb49
10059fb0:	mov    eax,DWORD PTR [edi+ecx*4]
10059fb3:	mov    DWORD PTR [ebx+0xc],eax
10059fb6:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10059fba:	xor    ebx,ebx
10059fbc:	xor    ecx,ecx
10059fbe:	xor    edx,edx
10059fc0:	xor    esi,esi
10059fc2:	xor    edi,edi
10059fc4:	call   eax
10059fc6:	mov    edi,DWORD PTR [ebx+0x8]
10059fc9:	lea    ecx,[esi+esi*2]
10059fcc:	mov    esi,DWORD PTR [edi+ecx*4]
10059fcf:	jmp    0x10059f4c
10059fd4:	mov    eax,0x0
10059fd9:	jmp    0x10059ffe
10059fdb:	mov    eax,DWORD PTR [ebp+0x8]
10059fde:	or     DWORD PTR [eax+0x4],0x8
10059fe2:	mov    eax,0x1
10059fe7:	jmp    0x10059ffe
10059fe9:	push   ebp
10059fea:	lea    ebp,[ebx+0x10]
10059fed:	push   0xffffffff
10059fef:	push   ebx
10059ff0:	call   0x1004fa99
10059ff5:	add    esp,0x8
10059ff8:	pop    ebp
10059ff9:	mov    eax,0x1
10059ffe:	pop    ebp
10059fff:	pop    edi
1005a000:	pop    esi
1005a001:	pop    ebx
1005a002:	mov    esp,ebp
1005a004:	pop    ebp
1005a005:	ret    
1005a006:	push   ebp
1005a007:	mov    ecx,DWORD PTR [esp+0x8]
1005a00b:	mov    ebp,DWORD PTR [ecx]
1005a00d:	mov    eax,DWORD PTR [ecx+0x1c]
1005a010:	push   eax
1005a011:	mov    eax,DWORD PTR [ecx+0x18]
1005a014:	push   eax
1005a015:	call   0x1004fa99
1005a01a:	add    esp,0x8
1005a01d:	pop    ebp
1005a01e:	ret    0x4
1005a021:	push   ebp
1005a022:	mov    ebp,esp
1005a024:	sub    esp,0x34
1005a027:	push   ebx
1005a028:	xor    ebx,ebx
1005a02a:	test   BYTE PTR [ebp+0x10],0x80
1005a02e:	push   esi
1005a02f:	push   edi
1005a030:	mov    esi,eax
1005a032:	mov    DWORD PTR [ebp-0x24],ebx
1005a035:	mov    DWORD PTR [ebp-0x28],ebx
1005a038:	mov    BYTE PTR [ebp-0x2],bl
1005a03b:	mov    DWORD PTR [ebp-0x34],0xc
1005a042:	mov    DWORD PTR [ebp-0x30],ebx
1005a045:	je     0x1005a050
1005a047:	mov    DWORD PTR [ebp-0x2c],ebx
1005a04a:	mov    BYTE PTR [ebp-0x1],0x10
1005a04e:	jmp    0x1005a05a
1005a050:	mov    DWORD PTR [ebp-0x2c],0x1
1005a057:	mov    BYTE PTR [ebp-0x1],bl
1005a05a:	lea    eax,[ebp-0x24]
1005a05d:	push   eax
1005a05e:	call   0x1005d132
1005a063:	test   eax,eax
1005a065:	pop    ecx
1005a066:	je     0x1005a075
1005a068:	push   ebx
1005a069:	push   ebx
1005a06a:	push   ebx
1005a06b:	push   ebx
1005a06c:	push   ebx
1005a06d:	call   0x100434e5
1005a072:	add    esp,0x14
1005a075:	lea    eax,[ebp-0x28]
1005a078:	push   eax
1005a079:	call   0x100474c9
1005a07e:	test   eax,eax
1005a080:	pop    ecx
1005a081:	je     0x1005a090
1005a083:	push   ebx
1005a084:	push   ebx
1005a085:	push   ebx
1005a086:	push   ebx
1005a087:	push   ebx
1005a088:	call   0x100434e5
1005a08d:	add    esp,0x14
1005a090:	mov    ecx,DWORD PTR [ebp+0x10]
1005a093:	mov    eax,0x8000
1005a098:	test   eax,ecx
1005a09a:	jne    0x1005a0ad
1005a09c:	test   ecx,0x74000
1005a0a2:	jne    0x1005a0a9
1005a0a4:	cmp    DWORD PTR [ebp-0x24],eax
1005a0a7:	je     0x1005a0ad
1005a0a9:	or     BYTE PTR [ebp-0x1],0x80
1005a0ad:	mov    eax,ecx
1005a0af:	and    eax,0x3
1005a0b2:	sub    eax,ebx
1005a0b4:	mov    edx,0xc0000000
1005a0b9:	mov    edi,0x80000000
1005a0be:	je     0x1005a107
1005a0c0:	dec    eax
1005a0c1:	je     0x1005a0f1
1005a0c3:	dec    eax
1005a0c4:	je     0x1005a0ec
1005a0c6:	call   0x10046c54
1005a0cb:	mov    DWORD PTR [eax],ebx
1005a0cd:	or     DWORD PTR [esi],0xffffffff
1005a0d0:	call   0x10046c41
1005a0d5:	push   0x16
1005a0d7:	pop    esi
1005a0d8:	push   ebx
1005a0d9:	push   ebx
1005a0da:	push   ebx
1005a0db:	push   ebx
1005a0dc:	push   ebx
1005a0dd:	mov    DWORD PTR [eax],esi
1005a0df:	call   0x100435e1
1005a0e4:	add    esp,0x14
1005a0e7:	jmp    0x1005a6b9
1005a0ec:	mov    DWORD PTR [ebp-0x8],edx
1005a0ef:	jmp    0x1005a10a
1005a0f1:	test   cl,0x8
1005a0f4:	je     0x1005a0fe
1005a0f6:	test   ecx,0x70000
1005a0fc:	jne    0x1005a0ec
1005a0fe:	mov    DWORD PTR [ebp-0x8],0x40000000
1005a105:	jmp    0x1005a10a
1005a107:	mov    DWORD PTR [ebp-0x8],edi
1005a10a:	mov    eax,DWORD PTR [ebp+0x14]
1005a10d:	push   0x10
1005a10f:	pop    ecx
1005a110:	sub    eax,ecx
1005a112:	je     0x1005a14b
1005a114:	sub    eax,ecx
1005a116:	je     0x1005a142
1005a118:	sub    eax,ecx
1005a11a:	je     0x1005a139
1005a11c:	sub    eax,ecx
1005a11e:	je     0x1005a130
1005a120:	sub    eax,0x40
1005a123:	jne    0x1005a0c6
1005a125:	cmp    DWORD PTR [ebp-0x8],edi
1005a128:	sete   al
1005a12b:	mov    DWORD PTR [ebp-0x10],eax
1005a12e:	jmp    0x1005a14e
1005a130:	mov    DWORD PTR [ebp-0x10],0x3
1005a137:	jmp    0x1005a14e
1005a139:	mov    DWORD PTR [ebp-0x10],0x2
1005a140:	jmp    0x1005a14e
1005a142:	mov    DWORD PTR [ebp-0x10],0x1
1005a149:	jmp    0x1005a14e
1005a14b:	mov    DWORD PTR [ebp-0x10],ebx
1005a14e:	mov    eax,DWORD PTR [ebp+0x10]
1005a151:	mov    edx,0x700
1005a156:	and    eax,edx
1005a158:	mov    ecx,0x400
1005a15d:	cmp    eax,ecx
1005a15f:	mov    edi,0x100
1005a164:	jg     0x1005a1a1
1005a166:	je     0x1005a198
1005a168:	cmp    eax,ebx
1005a16a:	je     0x1005a198
1005a16c:	cmp    eax,edi
1005a16e:	je     0x1005a18f
1005a170:	cmp    eax,0x200
1005a175:	je     0x1005a214
1005a17b:	cmp    eax,0x300
1005a180:	jne    0x1005a0c6
1005a186:	mov    DWORD PTR [ebp-0x14],0x2
1005a18d:	jmp    0x1005a1be
1005a18f:	mov    DWORD PTR [ebp-0x14],0x4
1005a196:	jmp    0x1005a1be
1005a198:	mov    DWORD PTR [ebp-0x14],0x3
1005a19f:	jmp    0x1005a1be
1005a1a1:	cmp    eax,0x500
1005a1a6:	je     0x1005a1b7
1005a1a8:	cmp    eax,0x600
1005a1ad:	je     0x1005a214
1005a1af:	cmp    eax,edx
1005a1b1:	jne    0x1005a0c6
1005a1b7:	mov    DWORD PTR [ebp-0x14],0x1
1005a1be:	mov    eax,DWORD PTR [ebp+0x10]
1005a1c1:	test   edi,eax
1005a1c3:	mov    DWORD PTR [ebp-0xc],0x80
1005a1ca:	je     0x1005a1e2
1005a1cc:	mov    ecx,DWORD PTR ds:0x10081b1c
1005a1d2:	not    ecx
1005a1d4:	and    ecx,DWORD PTR [ebp+0x18]
1005a1d7:	test   cl,cl
1005a1d9:	js     0x1005a1e2
1005a1db:	mov    DWORD PTR [ebp-0xc],0x1
1005a1e2:	test   al,0x40
1005a1e4:	je     0x1005a1fe
1005a1e6:	or     DWORD PTR [ebp-0xc],0x4000000
1005a1ed:	or     DWORD PTR [ebp-0x8],0x10000
1005a1f4:	cmp    DWORD PTR [ebp-0x28],0x2
1005a1f8:	jne    0x1005a1fe
1005a1fa:	or     DWORD PTR [ebp-0x10],0x4
1005a1fe:	test   ax,0x1000
1005a202:	je     0x1005a207
1005a204:	or     DWORD PTR [ebp-0xc],edi
1005a207:	test   al,0x20
1005a209:	je     0x1005a21d
1005a20b:	or     DWORD PTR [ebp-0xc],0x8000000
1005a212:	jmp    0x1005a228
1005a214:	mov    DWORD PTR [ebp-0x14],0x5
1005a21b:	jmp    0x1005a1be
1005a21d:	test   al,0x10
1005a21f:	je     0x1005a228
1005a221:	or     DWORD PTR [ebp-0xc],0x10000000
1005a228:	call   0x1004fd9c
1005a22d:	cmp    eax,0xffffffff
1005a230:	mov    DWORD PTR [esi],eax
1005a232:	jne    0x1005a24e
1005a234:	call   0x10046c54
1005a239:	mov    DWORD PTR [eax],ebx
1005a23b:	or     DWORD PTR [esi],0xffffffff
1005a23e:	call   0x10046c41
1005a243:	mov    DWORD PTR [eax],0x18
1005a249:	jmp    0x1005a2dc
1005a24e:	mov    eax,DWORD PTR [ebp+0x8]
1005a251:	mov    edi,DWORD PTR ds:0x10067260
1005a257:	push   ebx
1005a258:	push   DWORD PTR [ebp-0xc]
1005a25b:	mov    DWORD PTR [eax],0x1
1005a261:	push   DWORD PTR [ebp-0x14]
1005a264:	lea    eax,[ebp-0x34]
1005a267:	push   eax
1005a268:	push   DWORD PTR [ebp-0x10]
1005a26b:	push   DWORD PTR [ebp-0x8]
1005a26e:	push   DWORD PTR [ebp+0xc]
1005a271:	call   edi
1005a273:	cmp    eax,0xffffffff
1005a276:	mov    DWORD PTR [ebp-0x1c],eax
1005a279:	jne    0x1005a2e8
1005a27b:	mov    ecx,DWORD PTR [ebp-0x8]
1005a27e:	mov    eax,0xc0000000
1005a283:	and    ecx,eax
1005a285:	cmp    ecx,eax
1005a287:	jne    0x1005a2b4
1005a289:	test   BYTE PTR [ebp+0x10],0x1
1005a28d:	je     0x1005a2b4
1005a28f:	and    DWORD PTR [ebp-0x8],0x7fffffff
1005a296:	push   ebx
1005a297:	push   DWORD PTR [ebp-0xc]
1005a29a:	lea    eax,[ebp-0x34]
1005a29d:	push   DWORD PTR [ebp-0x14]
1005a2a0:	push   eax
1005a2a1:	push   DWORD PTR [ebp-0x10]
1005a2a4:	push   DWORD PTR [ebp-0x8]
1005a2a7:	push   DWORD PTR [ebp+0xc]
1005a2aa:	call   edi
1005a2ac:	cmp    eax,0xffffffff
1005a2af:	mov    DWORD PTR [ebp-0x1c],eax
1005a2b2:	jne    0x1005a2e8
1005a2b4:	mov    esi,DWORD PTR [esi]
1005a2b6:	mov    eax,esi
1005a2b8:	sar    eax,0x5
1005a2bb:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1005a2c2:	and    esi,0x1f
1005a2c5:	shl    esi,0x6
1005a2c8:	lea    eax,[eax+esi*1+0x4]
1005a2cc:	and    BYTE PTR [eax],0xfe
1005a2cf:	call   DWORD PTR ds:0x100670cc
1005a2d5:	push   eax
1005a2d6:	call   0x10046c67
1005a2db:	pop    ecx
1005a2dc:	call   0x10046c41
1005a2e1:	mov    eax,DWORD PTR [eax]
1005a2e3:	jmp    0x1005a775
1005a2e8:	push   DWORD PTR [ebp-0x1c]
1005a2eb:	call   DWORD PTR ds:0x10067200
1005a2f1:	cmp    eax,ebx
1005a2f3:	jne    0x1005a339
1005a2f5:	mov    esi,DWORD PTR [esi]
1005a2f7:	mov    eax,esi
1005a2f9:	sar    eax,0x5
1005a2fc:	mov    eax,DWORD PTR [eax*4+0x100844e0]
1005a303:	and    esi,0x1f
1005a306:	shl    esi,0x6
1005a309:	lea    eax,[eax+esi*1+0x4]
1005a30d:	and    BYTE PTR [eax],0xfe
1005a310:	call   DWORD PTR ds:0x100670cc
1005a316:	mov    esi,eax
1005a318:	push   esi
1005a319:	call   0x10046c67
1005a31e:	pop    ecx
1005a31f:	push   DWORD PTR [ebp-0x1c]
1005a322:	call   DWORD PTR ds:0x10067078
1005a328:	cmp    esi,ebx
1005a32a:	jne    0x1005a2dc
1005a32c:	call   0x10046c41
1005a331:	mov    DWORD PTR [eax],0xd
1005a337:	jmp    0x1005a2dc
1005a339:	cmp    eax,0x2
1005a33c:	jne    0x1005a344
1005a33e:	or     BYTE PTR [ebp-0x1],0x40
1005a342:	jmp    0x1005a34d
1005a344:	cmp    eax,0x3
1005a347:	jne    0x1005a34d
1005a349:	or     BYTE PTR [ebp-0x1],0x8
1005a34d:	push   DWORD PTR [ebp-0x1c]
1005a350:	push   DWORD PTR [esi]
1005a352:	call   0x1004fb6b
1005a357:	mov    eax,DWORD PTR [esi]
1005a359:	mov    edx,eax
1005a35b:	and    eax,0x1f
1005a35e:	sar    edx,0x5
1005a361:	mov    edx,DWORD PTR [edx*4+0x100844e0]
1005a368:	pop    ecx
1005a369:	shl    eax,0x6
1005a36c:	pop    ecx
1005a36d:	mov    cl,BYTE PTR [ebp-0x1]
1005a370:	or     cl,0x1
1005a373:	mov    BYTE PTR [edx+eax*1+0x4],cl
1005a377:	mov    eax,DWORD PTR [esi]
1005a379:	mov    edx,eax
1005a37b:	and    eax,0x1f
1005a37e:	sar    edx,0x5
1005a381:	mov    edx,DWORD PTR [edx*4+0x100844e0]
1005a388:	shl    eax,0x6
1005a38b:	lea    eax,[edx+eax*1+0x24]
1005a38f:	and    BYTE PTR [eax],0x80
1005a392:	mov    BYTE PTR [ebp-0x3],cl
1005a395:	and    BYTE PTR [ebp-0x3],0x48
1005a399:	mov    BYTE PTR [ebp-0x1],cl
1005a39c:	jne    0x1005a422
1005a3a2:	test   cl,0x80
1005a3a5:	je     0x1005a4f2
1005a3ab:	test   BYTE PTR [ebp+0x10],0x2
1005a3af:	je     0x1005a422
1005a3b1:	push   0x2
1005a3b3:	or     edi,0xffffffff
1005a3b6:	push   edi
1005a3b7:	push   DWORD PTR [esi]
1005a3b9:	call   0x100589fd
1005a3be:	add    esp,0xc
1005a3c1:	cmp    eax,edi
1005a3c3:	mov    DWORD PTR [ebp-0x18],eax
1005a3c6:	jne    0x1005a3e1
1005a3c8:	call   0x10046c54
1005a3cd:	cmp    DWORD PTR [eax],0x83
1005a3d3:	je     0x1005a422
1005a3d5:	push   DWORD PTR [esi]
1005a3d7:	call   0x100509f1
1005a3dc:	jmp    0x1005a2db
1005a3e1:	push   0x1
1005a3e3:	lea    eax,[ebp-0x4]
1005a3e6:	push   eax
1005a3e7:	push   DWORD PTR [esi]
1005a3e9:	mov    BYTE PTR [ebp-0x4],bl
1005a3ec:	call   0x10058bbd
1005a3f1:	add    esp,0xc
1005a3f4:	test   eax,eax
1005a3f6:	jne    0x1005a412
1005a3f8:	cmp    BYTE PTR [ebp-0x4],0x1a
1005a3fc:	jne    0x1005a412
1005a3fe:	mov    eax,DWORD PTR [ebp-0x18]
1005a401:	cdq    
1005a402:	push   edx
1005a403:	push   eax
1005a404:	push   DWORD PTR [esi]
1005a406:	call   0x1005cec2
1005a40b:	add    esp,0xc
1005a40e:	cmp    eax,edi
1005a410:	je     0x1005a3d5
1005a412:	push   ebx
1005a413:	push   ebx
1005a414:	push   DWORD PTR [esi]
1005a416:	call   0x100589fd
1005a41b:	add    esp,0xc
1005a41e:	cmp    eax,edi
1005a420:	je     0x1005a3d5
1005a422:	test   BYTE PTR [ebp-0x1],0x80
1005a426:	je     0x1005a4f2
1005a42c:	mov    ecx,0x74000
1005a431:	test   DWORD PTR [ebp+0x10],ecx
1005a434:	mov    edi,0x4000
1005a439:	jne    0x1005a44a
1005a43b:	mov    eax,DWORD PTR [ebp-0x24]
1005a43e:	and    eax,ecx
1005a440:	jne    0x1005a447
1005a442:	or     DWORD PTR [ebp+0x10],edi
1005a445:	jmp    0x1005a44a
1005a447:	or     DWORD PTR [ebp+0x10],eax
1005a44a:	mov    eax,DWORD PTR [ebp+0x10]
1005a44d:	and    eax,ecx
1005a44f:	cmp    eax,edi
1005a451:	je     0x1005a497
1005a453:	cmp    eax,0x10000
1005a458:	je     0x1005a483
1005a45a:	cmp    eax,0x14000
1005a45f:	je     0x1005a483
1005a461:	cmp    eax,0x20000
1005a466:	je     0x1005a491
1005a468:	cmp    eax,0x24000
1005a46d:	je     0x1005a491
1005a46f:	cmp    eax,0x40000
1005a474:	je     0x1005a47d
1005a476:	cmp    eax,0x44000
1005a47b:	jne    0x1005a49a
1005a47d:	mov    BYTE PTR [ebp-0x2],0x1
1005a481:	jmp    0x1005a49a
1005a483:	mov    ecx,DWORD PTR [ebp+0x10]
1005a486:	mov    eax,0x301
1005a48b:	and    ecx,eax
1005a48d:	cmp    ecx,eax
1005a48f:	jne    0x1005a49a
1005a491:	mov    BYTE PTR [ebp-0x2],0x2
1005a495:	jmp    0x1005a49a
1005a497:	mov    BYTE PTR [ebp-0x2],bl
1005a49a:	test   DWORD PTR [ebp+0x10],0x70000
1005a4a1:	je     0x1005a4f2
1005a4a3:	test   BYTE PTR [ebp-0x1],0x40
1005a4a7:	mov    DWORD PTR [ebp-0x18],ebx
1005a4aa:	jne    0x1005a4f2
1005a4ac:	mov    eax,DWORD PTR [ebp-0x8]
1005a4af:	mov    ecx,0xc0000000
1005a4b4:	and    eax,ecx
1005a4b6:	cmp    eax,0x40000000
1005a4bb:	je     0x1005a64c
1005a4c1:	cmp    eax,0x80000000
1005a4c6:	je     0x1005a613
1005a4cc:	cmp    eax,ecx
1005a4ce:	jne    0x1005a4f2
1005a4d0:	mov    eax,DWORD PTR [ebp-0x14]
1005a4d3:	cmp    eax,ebx
1005a4d5:	jbe    0x1005a4f2
1005a4d7:	cmp    eax,0x2
1005a4da:	jbe    0x1005a6f4
1005a4e0:	cmp    eax,0x4
1005a4e3:	jbe    0x1005a5e5
1005a4e9:	cmp    eax,0x5
1005a4ec:	je     0x1005a6f4
1005a4f2:	mov    eax,DWORD PTR [esi]
1005a4f4:	mov    ecx,eax
1005a4f6:	sar    ecx,0x5
1005a4f9:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a500:	and    eax,0x1f
1005a503:	shl    eax,0x6
1005a506:	lea    eax,[ecx+eax*1+0x24]
1005a50a:	mov    cl,BYTE PTR [eax]
1005a50c:	xor    cl,BYTE PTR [ebp-0x2]
1005a50f:	and    cl,0x7f
1005a512:	xor    BYTE PTR [eax],cl
1005a514:	mov    eax,DWORD PTR [esi]
1005a516:	mov    ecx,eax
1005a518:	sar    ecx,0x5
1005a51b:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a522:	and    eax,0x1f
1005a525:	shl    eax,0x6
1005a528:	lea    eax,[ecx+eax*1+0x24]
1005a52c:	mov    ecx,DWORD PTR [ebp+0x10]
1005a52f:	mov    dl,BYTE PTR [eax]
1005a531:	shr    ecx,0x10
1005a534:	shl    cl,0x7
1005a537:	and    dl,0x7f
1005a53a:	or     cl,dl
1005a53c:	cmp    BYTE PTR [ebp-0x3],bl
1005a53f:	mov    BYTE PTR [eax],cl
1005a541:	jne    0x1005a564
1005a543:	test   BYTE PTR [ebp+0x10],0x8
1005a547:	je     0x1005a564
1005a549:	mov    eax,DWORD PTR [esi]
1005a54b:	mov    ecx,eax
1005a54d:	and    eax,0x1f
1005a550:	sar    ecx,0x5
1005a553:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a55a:	shl    eax,0x6
1005a55d:	lea    eax,[ecx+eax*1+0x4]
1005a561:	or     BYTE PTR [eax],0x20
1005a564:	mov    edi,DWORD PTR [ebp-0x8]
1005a567:	mov    eax,0xc0000000
1005a56c:	mov    ecx,edi
1005a56e:	and    ecx,eax
1005a570:	cmp    ecx,eax
1005a572:	jne    0x1005a773
1005a578:	test   BYTE PTR [ebp+0x10],0x1
1005a57c:	je     0x1005a773
1005a582:	push   DWORD PTR [ebp-0x1c]
1005a585:	call   DWORD PTR ds:0x10067078
1005a58b:	push   ebx
1005a58c:	push   DWORD PTR [ebp-0xc]
1005a58f:	lea    eax,[ebp-0x34]
1005a592:	push   0x3
1005a594:	push   eax
1005a595:	push   DWORD PTR [ebp-0x10]
1005a598:	and    edi,0x7fffffff
1005a59e:	push   edi
1005a59f:	push   DWORD PTR [ebp+0xc]
1005a5a2:	call   DWORD PTR ds:0x10067260
1005a5a8:	cmp    eax,0xffffffff
1005a5ab:	jne    0x1005a75c
1005a5b1:	call   DWORD PTR ds:0x100670cc
1005a5b7:	push   eax
1005a5b8:	call   0x10046c67
1005a5bd:	mov    eax,DWORD PTR [esi]
1005a5bf:	mov    ecx,eax
1005a5c1:	and    eax,0x1f
1005a5c4:	sar    ecx,0x5
1005a5c7:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a5ce:	shl    eax,0x6
1005a5d1:	lea    eax,[ecx+eax*1+0x4]
1005a5d5:	and    BYTE PTR [eax],0xfe
1005a5d8:	push   DWORD PTR [esi]
1005a5da:	call   0x1004fbe8
1005a5df:	pop    ecx
1005a5e0:	jmp    0x1005a2db
1005a5e5:	push   0x2
1005a5e7:	push   ebx
1005a5e8:	push   ebx
1005a5e9:	push   DWORD PTR [esi]
1005a5eb:	call   0x1004c983
1005a5f0:	add    esp,0x10
1005a5f3:	or     eax,edx
1005a5f5:	je     0x1005a6f4
1005a5fb:	push   ebx
1005a5fc:	push   ebx
1005a5fd:	push   ebx
1005a5fe:	push   DWORD PTR [esi]
1005a600:	call   0x1004c983
1005a605:	and    eax,edx
1005a607:	add    esp,0x10
1005a60a:	cmp    eax,0xffffffff
1005a60d:	je     0x1005a3d5
1005a613:	push   0x3
1005a615:	lea    eax,[ebp-0x18]
1005a618:	push   eax
1005a619:	push   DWORD PTR [esi]
1005a61b:	call   0x10058bbd
1005a620:	add    esp,0xc
1005a623:	cmp    eax,0xffffffff
1005a626:	je     0x1005a3d5
1005a62c:	cmp    eax,0x2
1005a62f:	je     0x1005a698
1005a631:	cmp    eax,0x3
1005a634:	jne    0x1005a6e6
1005a63a:	cmp    DWORD PTR [ebp-0x18],0xbfbbef
1005a641:	jne    0x1005a698
1005a643:	mov    BYTE PTR [ebp-0x2],0x1
1005a647:	jmp    0x1005a4f2
1005a64c:	mov    eax,DWORD PTR [ebp-0x14]
1005a64f:	cmp    eax,ebx
1005a651:	jbe    0x1005a4f2
1005a657:	cmp    eax,0x2
1005a65a:	jbe    0x1005a6f4
1005a660:	cmp    eax,0x4
1005a663:	ja     0x1005a4e9
1005a669:	push   0x2
1005a66b:	push   ebx
1005a66c:	push   ebx
1005a66d:	push   DWORD PTR [esi]
1005a66f:	call   0x1004c983
1005a674:	add    esp,0x10
1005a677:	or     eax,edx
1005a679:	je     0x1005a6f4
1005a67b:	push   ebx
1005a67c:	push   ebx
1005a67d:	push   ebx
1005a67e:	push   DWORD PTR [esi]
1005a680:	call   0x1004c983
1005a685:	add    esp,0x10
1005a688:	and    eax,edx
1005a68a:	cmp    eax,0xffffffff
1005a68d:	jne    0x1005a4f2
1005a693:	jmp    0x1005a3d5
1005a698:	mov    eax,DWORD PTR [ebp-0x18]
1005a69b:	and    eax,0xffff
1005a6a0:	cmp    eax,0xfffe
1005a6a5:	jne    0x1005a6c0
1005a6a7:	push   DWORD PTR [esi]
1005a6a9:	call   0x100509f1
1005a6ae:	pop    ecx
1005a6af:	call   0x10046c41
1005a6b4:	push   0x16
1005a6b6:	pop    esi
1005a6b7:	mov    DWORD PTR [eax],esi
1005a6b9:	mov    eax,esi
1005a6bb:	jmp    0x1005a775
1005a6c0:	cmp    eax,0xfeff
1005a6c5:	jne    0x1005a6e6
1005a6c7:	push   ebx
1005a6c8:	push   0x2
1005a6ca:	push   DWORD PTR [esi]
1005a6cc:	call   0x100589fd
1005a6d1:	add    esp,0xc
1005a6d4:	cmp    eax,0xffffffff
1005a6d7:	je     0x1005a3d5
1005a6dd:	mov    BYTE PTR [ebp-0x2],0x2
1005a6e1:	jmp    0x1005a4f2
1005a6e6:	push   ebx
1005a6e7:	push   ebx
1005a6e8:	push   DWORD PTR [esi]
1005a6ea:	call   0x100589fd
1005a6ef:	add    esp,0xc
1005a6f2:	jmp    0x1005a68a
1005a6f4:	movsx  eax,BYTE PTR [ebp-0x2]
1005a6f8:	xor    edi,edi
1005a6fa:	dec    eax
1005a6fb:	je     0x1005a714
1005a6fd:	dec    eax
1005a6fe:	jne    0x1005a4f2
1005a704:	mov    DWORD PTR [ebp-0x18],0xfeff
1005a70b:	mov    DWORD PTR [ebp-0x14],0x2
1005a712:	jmp    0x1005a722
1005a714:	mov    DWORD PTR [ebp-0x18],0xbfbbef
1005a71b:	mov    DWORD PTR [ebp-0x14],0x3
1005a722:	mov    eax,DWORD PTR [ebp-0x14]
1005a725:	sub    eax,edi
1005a727:	push   eax
1005a728:	lea    eax,[ebp+edi*1-0x18]
1005a72c:	push   eax
1005a72d:	push   DWORD PTR [esi]
1005a72f:	call   0x1004d141
1005a734:	add    esp,0xc
1005a737:	cmp    eax,0xffffffff
1005a73a:	je     0x1005a748
1005a73c:	add    edi,eax
1005a73e:	cmp    DWORD PTR [ebp-0x14],edi
1005a741:	jg     0x1005a722
1005a743:	jmp    0x1005a4f2
1005a748:	push   DWORD PTR [esi]
1005a74a:	call   0x100509f1
1005a74f:	pop    ecx
1005a750:	call   0x10046c41
1005a755:	mov    eax,DWORD PTR [eax]
1005a757:	mov    DWORD PTR [ebp-0x20],eax
1005a75a:	jmp    0x1005a775
1005a75c:	mov    esi,DWORD PTR [esi]
1005a75e:	mov    ecx,esi
1005a760:	sar    ecx,0x5
1005a763:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a76a:	and    esi,0x1f
1005a76d:	shl    esi,0x6
1005a770:	mov    DWORD PTR [esi+ecx*1],eax
1005a773:	mov    eax,ebx
1005a775:	pop    edi
1005a776:	pop    esi
1005a777:	pop    ebx
1005a778:	leave  
1005a779:	ret    
1005a77a:	push   0x14
1005a77c:	push   0x100761e8
1005a781:	call   0x1004771c
1005a786:	xor    esi,esi
1005a788:	mov    DWORD PTR [ebp-0x1c],esi
1005a78b:	xor    eax,eax
1005a78d:	mov    edi,DWORD PTR [ebp+0x18]
1005a790:	cmp    edi,esi
1005a792:	setne  al
1005a795:	cmp    eax,esi
1005a797:	jne    0x1005a7b4
1005a799:	call   0x10046c41
1005a79e:	push   0x16
1005a7a0:	pop    edi
1005a7a1:	mov    DWORD PTR [eax],edi
1005a7a3:	push   esi
1005a7a4:	push   esi
1005a7a5:	push   esi
1005a7a6:	push   esi
1005a7a7:	push   esi
1005a7a8:	call   0x100435e1
1005a7ad:	add    esp,0x14
1005a7b0:	mov    eax,edi
1005a7b2:	jmp    0x1005a80d
1005a7b4:	or     DWORD PTR [edi],0xffffffff
1005a7b7:	xor    eax,eax
1005a7b9:	cmp    DWORD PTR [ebp+0x8],esi
1005a7bc:	setne  al
1005a7bf:	cmp    eax,esi
1005a7c1:	je     0x1005a799
1005a7c3:	cmp    DWORD PTR [ebp+0x1c],esi
1005a7c6:	je     0x1005a7d7
1005a7c8:	mov    eax,DWORD PTR [ebp+0x14]
1005a7cb:	and    eax,0xfffffe7f
1005a7d0:	neg    eax
1005a7d2:	sbb    eax,eax
1005a7d4:	inc    eax
1005a7d5:	je     0x1005a799
1005a7d7:	mov    DWORD PTR [ebp-0x4],esi
1005a7da:	push   DWORD PTR [ebp+0x14]
1005a7dd:	push   DWORD PTR [ebp+0x10]
1005a7e0:	push   DWORD PTR [ebp+0xc]
1005a7e3:	push   DWORD PTR [ebp+0x8]
1005a7e6:	lea    eax,[ebp-0x1c]
1005a7e9:	push   eax
1005a7ea:	mov    eax,edi
1005a7ec:	call   0x1005a021
1005a7f1:	add    esp,0x14
1005a7f4:	mov    DWORD PTR [ebp-0x20],eax
1005a7f7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005a7fe:	call   0x1005a818
1005a803:	mov    eax,DWORD PTR [ebp-0x20]
1005a806:	cmp    eax,esi
1005a808:	je     0x1005a80d
1005a80a:	or     DWORD PTR [edi],0xffffffff
1005a80d:	call   0x10047761
1005a812:	ret    
1005a813:	xor    esi,esi
1005a815:	mov    edi,DWORD PTR [ebp+0x18]
1005a818:	cmp    DWORD PTR [ebp-0x1c],esi
1005a81b:	je     0x1005a845
1005a81d:	cmp    DWORD PTR [ebp-0x20],esi
1005a820:	je     0x1005a83d
1005a822:	mov    eax,DWORD PTR [edi]
1005a824:	mov    ecx,eax
1005a826:	sar    ecx,0x5
1005a829:	and    eax,0x1f
1005a82c:	shl    eax,0x6
1005a82f:	mov    ecx,DWORD PTR [ecx*4+0x100844e0]
1005a836:	lea    eax,[ecx+eax*1+0x4]
1005a83a:	and    BYTE PTR [eax],0xfe
1005a83d:	push   DWORD PTR [edi]
1005a83f:	call   0x1004fd7a
1005a844:	pop    ecx
1005a845:	ret    
1005a846:	push   ebp
1005a847:	mov    ebp,esp
1005a849:	push   0x1
1005a84b:	push   DWORD PTR [ebp+0x8]
1005a84e:	push   DWORD PTR [ebp+0x18]
1005a851:	push   DWORD PTR [ebp+0x14]
1005a854:	push   DWORD PTR [ebp+0x10]
1005a857:	push   DWORD PTR [ebp+0xc]
1005a85a:	call   0x1005a77a
1005a85f:	add    esp,0x18
1005a862:	pop    ebp
1005a863:	ret    
1005a864:	push   ebp
1005a865:	mov    ebp,esp
1005a867:	sub    esp,0x10
1005a86a:	mov    eax,ds:0x10082c54
1005a86f:	push   ebx
1005a870:	xor    ebx,ebx
1005a872:	push   esi
1005a873:	mov    esi,DWORD PTR [ebp+0xc]
1005a876:	mov    DWORD PTR [ebp-0x4],eax
1005a879:	mov    DWORD PTR [ebp-0xc],ebx
1005a87c:	mov    DWORD PTR [ebp-0x8],ebx
1005a87f:	mov    DWORD PTR [ebp-0x10],ebx
1005a882:	jmp    0x1005a885
1005a884:	inc    esi
1005a885:	cmp    BYTE PTR [esi],0x20
1005a888:	je     0x1005a884
1005a88a:	mov    al,BYTE PTR [esi]
1005a88c:	cmp    al,0x61
1005a88e:	je     0x1005a8c9
1005a890:	cmp    al,0x72
1005a892:	je     0x1005a8c0
1005a894:	cmp    al,0x77
1005a896:	je     0x1005a8b7
1005a898:	call   0x10046c41
1005a89d:	push   ebx
1005a89e:	push   ebx
1005a89f:	push   ebx
1005a8a0:	push   ebx
1005a8a1:	push   ebx
1005a8a2:	mov    DWORD PTR [eax],0x16
1005a8a8:	call   0x100435e1
1005a8ad:	add    esp,0x14
1005a8b0:	xor    eax,eax
1005a8b2:	jmp    0x1005ab00
1005a8b7:	mov    DWORD PTR [ebp+0xc],0x301
1005a8be:	jmp    0x1005a8d0
1005a8c0:	or     DWORD PTR [ebp-0x4],0x1
1005a8c4:	mov    DWORD PTR [ebp+0xc],ebx
1005a8c7:	jmp    0x1005a8d4
1005a8c9:	mov    DWORD PTR [ebp+0xc],0x109
1005a8d0:	or     DWORD PTR [ebp-0x4],0x2
1005a8d4:	xor    ecx,ecx
1005a8d6:	inc    ecx
1005a8d7:	inc    esi
1005a8d8:	mov    al,BYTE PTR [esi]
1005a8da:	cmp    al,bl
1005a8dc:	push   edi
1005a8dd:	je     0x1005aa9a
1005a8e3:	lea    edx,[ecx+0x7f]
1005a8e6:	mov    edi,0x4000
1005a8eb:	cmp    ecx,ebx
1005a8ed:	je     0x1005aa1e
1005a8f3:	movsx  eax,al
1005a8f6:	cmp    eax,0x53
1005a8f9:	jg     0x1005a9a1
1005a8ff:	je     0x1005a98f
1005a905:	sub    eax,0x20
1005a908:	je     0x1005aa13
1005a90e:	sub    eax,0xb
1005a911:	je     0x1005a969
1005a913:	dec    eax
1005a914:	je     0x1005a95d
1005a916:	sub    eax,0x18
1005a919:	je     0x1005a94a
1005a91b:	sub    eax,0xa
1005a91e:	je     0x1005a942
1005a920:	sub    eax,0x4
1005a923:	jne    0x1005aaa3
1005a929:	cmp    DWORD PTR [ebp-0x8],ebx
1005a92c:	jne    0x1005aa08
1005a932:	or     DWORD PTR [ebp+0xc],0x10
1005a936:	mov    DWORD PTR [ebp-0x8],0x1
1005a93d:	jmp    0x1005aa13
1005a942:	or     DWORD PTR [ebp+0xc],edx
1005a945:	jmp    0x1005aa13
1005a94a:	test   BYTE PTR [ebp+0xc],0x40
1005a94e:	jne    0x1005aa08
1005a954:	or     DWORD PTR [ebp+0xc],0x40
1005a958:	jmp    0x1005aa13
1005a95d:	mov    DWORD PTR [ebp-0x10],0x1
1005a964:	jmp    0x1005aa08
1005a969:	test   BYTE PTR [ebp+0xc],0x2
1005a96d:	jne    0x1005aa08
1005a973:	mov    eax,DWORD PTR [ebp+0xc]
1005a976:	and    eax,0xfffffffe
1005a979:	or     eax,0x2
1005a97c:	mov    DWORD PTR [ebp+0xc],eax
1005a97f:	mov    eax,DWORD PTR [ebp-0x4]
1005a982:	and    eax,0xfffffffc
1005a985:	or     eax,edx
1005a987:	mov    DWORD PTR [ebp-0x4],eax
1005a98a:	jmp    0x1005aa13
1005a98f:	cmp    DWORD PTR [ebp-0x8],ebx
1005a992:	jne    0x1005aa08
1005a994:	or     DWORD PTR [ebp+0xc],0x20
1005a998:	mov    DWORD PTR [ebp-0x8],0x1
1005a99f:	jmp    0x1005aa13
1005a9a1:	sub    eax,0x54
1005a9a4:	je     0x1005aa00
1005a9a6:	sub    eax,0xe
1005a9a9:	je     0x1005a9ef
1005a9ab:	dec    eax
1005a9ac:	je     0x1005a9de
1005a9ae:	sub    eax,0xb
1005a9b1:	je     0x1005a9c9
1005a9b3:	sub    eax,0x6
1005a9b6:	jne    0x1005aaa3
1005a9bc:	test   WORD PTR [ebp+0xc],0xc000
1005a9c2:	jne    0x1005aa08
1005a9c4:	or     DWORD PTR [ebp+0xc],edi
1005a9c7:	jmp    0x1005aa13
1005a9c9:	cmp    DWORD PTR [ebp-0xc],ebx
1005a9cc:	jne    0x1005aa08
1005a9ce:	and    DWORD PTR [ebp-0x4],0xffffbfff
1005a9d5:	mov    DWORD PTR [ebp-0xc],0x1
1005a9dc:	jmp    0x1005aa13
1005a9de:	cmp    DWORD PTR [ebp-0xc],ebx
1005a9e1:	jne    0x1005aa08
1005a9e3:	or     DWORD PTR [ebp-0x4],edi
1005a9e6:	mov    DWORD PTR [ebp-0xc],0x1
1005a9ed:	jmp    0x1005aa13
1005a9ef:	test   WORD PTR [ebp+0xc],0xc000
1005a9f5:	jne    0x1005aa08
1005a9f7:	or     DWORD PTR [ebp+0xc],0x8000
1005a9fe:	jmp    0x1005aa13
1005aa00:	test   WORD PTR [ebp+0xc],0x1000
1005aa06:	je     0x1005aa0c
1005aa08:	xor    ecx,ecx
1005aa0a:	jmp    0x1005aa13
1005aa0c:	or     DWORD PTR [ebp+0xc],0x1000
1005aa13:	inc    esi
1005aa14:	mov    al,BYTE PTR [esi]
1005aa16:	cmp    al,bl
1005aa18:	jne    0x1005a8eb
1005aa1e:	cmp    DWORD PTR [ebp-0x10],ebx
1005aa21:	je     0x1005aa9a
1005aa23:	jmp    0x1005aa26
1005aa25:	inc    esi
1005aa26:	cmp    BYTE PTR [esi],0x20
1005aa29:	je     0x1005aa25
1005aa2b:	push   0x4
1005aa2d:	push   esi
1005aa2e:	push   0x1006dad4
1005aa33:	call   0x1005d2cf
1005aa38:	add    esp,0xc
1005aa3b:	test   eax,eax
1005aa3d:	jne    0x1005aaa3
1005aa3f:	add    esi,0x4
1005aa42:	push   0x1006dadc
1005aa47:	push   esi
1005aa48:	call   0x1005c94a
1005aa4d:	test   eax,eax
1005aa4f:	pop    ecx
1005aa50:	pop    ecx
1005aa51:	jne    0x1005aa5f
1005aa53:	add    esi,0x5
1005aa56:	or     DWORD PTR [ebp+0xc],0x40000
1005aa5d:	jmp    0x1005aa9a
1005aa5f:	push   0x1006dae4
1005aa64:	push   esi
1005aa65:	call   0x1005c94a
1005aa6a:	test   eax,eax
1005aa6c:	pop    ecx
1005aa6d:	pop    ecx
1005aa6e:	jne    0x1005aa7c
1005aa70:	add    esi,0x8
1005aa73:	or     DWORD PTR [ebp+0xc],0x20000
1005aa7a:	jmp    0x1005aa9a
1005aa7c:	push   0x1006daf0
1005aa81:	push   esi
1005aa82:	call   0x1005c94a
1005aa87:	test   eax,eax
1005aa89:	pop    ecx
1005aa8a:	pop    ecx
1005aa8b:	jne    0x1005aaa3
1005aa8d:	add    esi,0x7
1005aa90:	or     DWORD PTR [ebp+0xc],0x10000
1005aa97:	jmp    0x1005aa9a
1005aa99:	inc    esi
1005aa9a:	cmp    BYTE PTR [esi],0x20
1005aa9d:	je     0x1005aa99
1005aa9f:	cmp    BYTE PTR [esi],bl
1005aaa1:	je     0x1005aabd
1005aaa3:	call   0x10046c41
1005aaa8:	push   ebx
1005aaa9:	push   ebx
1005aaaa:	push   ebx
1005aaab:	push   ebx
1005aaac:	push   ebx
1005aaad:	mov    DWORD PTR [eax],0x16
1005aab3:	call   0x100435e1
1005aab8:	add    esp,0x14
1005aabb:	jmp    0x1005aadb
1005aabd:	push   0x180
1005aac2:	push   DWORD PTR [ebp+0x10]
1005aac5:	lea    eax,[ebp-0x10]
1005aac8:	push   DWORD PTR [ebp+0xc]
1005aacb:	push   DWORD PTR [ebp+0x8]
1005aace:	push   eax
1005aacf:	call   0x1005a846
1005aad4:	add    esp,0x14
1005aad7:	test   eax,eax
1005aad9:	je     0x1005aadf
1005aadb:	xor    eax,eax
1005aadd:	jmp    0x1005aaff
1005aadf:	mov    eax,DWORD PTR [ebp+0x14]
1005aae2:	inc    DWORD PTR ds:0x100824cc
1005aae8:	mov    ecx,DWORD PTR [ebp-0x4]
1005aaeb:	mov    DWORD PTR [eax+0xc],ecx
1005aaee:	mov    ecx,DWORD PTR [ebp-0x10]
1005aaf1:	mov    DWORD PTR [eax+0x4],ebx
1005aaf4:	mov    DWORD PTR [eax],ebx
1005aaf6:	mov    DWORD PTR [eax+0x8],ebx
1005aaf9:	mov    DWORD PTR [eax+0x1c],ebx
1005aafc:	mov    DWORD PTR [eax+0x10],ecx
1005aaff:	pop    edi
1005ab00:	pop    esi
1005ab01:	pop    ebx
1005ab02:	leave  
1005ab03:	ret    
1005ab04:	push   0x10
1005ab06:	push   0x10076208
1005ab0b:	call   0x1004771c
1005ab10:	xor    ebx,ebx
1005ab12:	xor    edi,edi
1005ab14:	mov    DWORD PTR [ebp-0x1c],edi
1005ab17:	push   0x1
1005ab19:	call   0x10047e0e
1005ab1e:	pop    ecx
1005ab1f:	mov    DWORD PTR [ebp-0x4],ebx
1005ab22:	xor    esi,esi
1005ab24:	mov    DWORD PTR [ebp-0x20],esi
1005ab27:	cmp    esi,DWORD PTR ds:0x100844c0
1005ab2d:	jge    0x1005ac00
1005ab33:	mov    eax,ds:0x100834b0
1005ab38:	lea    eax,[eax+esi*4]
1005ab3b:	cmp    DWORD PTR [eax],ebx
1005ab3d:	je     0x1005ab98
1005ab3f:	mov    eax,DWORD PTR [eax]
1005ab41:	mov    eax,DWORD PTR [eax+0xc]
1005ab44:	test   al,0x83
1005ab46:	jne    0x1005ab8e
1005ab48:	test   ax,ax
1005ab4b:	js     0x1005ab8e
1005ab4d:	lea    eax,[esi-0x3]
1005ab50:	cmp    eax,0x10
1005ab53:	ja     0x1005ab67
1005ab55:	lea    eax,[esi+0x10]
1005ab58:	push   eax
1005ab59:	call   0x10047d4b
1005ab5e:	pop    ecx
1005ab5f:	test   eax,eax
1005ab61:	je     0x1005ac00
1005ab67:	mov    eax,ds:0x100834b0
1005ab6c:	push   DWORD PTR [eax+esi*4]
1005ab6f:	push   esi
1005ab70:	call   0x1004d3d2
1005ab75:	pop    ecx
1005ab76:	pop    ecx
1005ab77:	mov    eax,ds:0x100834b0
1005ab7c:	mov    eax,DWORD PTR [eax+esi*4]
1005ab7f:	test   BYTE PTR [eax+0xc],0x83
1005ab83:	je     0x1005ab91
1005ab85:	push   eax
1005ab86:	push   esi
1005ab87:	call   0x1004d436
1005ab8c:	pop    ecx
1005ab8d:	pop    ecx
1005ab8e:	inc    esi
1005ab8f:	jmp    0x1005ab24
1005ab91:	mov    edi,eax
1005ab93:	mov    DWORD PTR [ebp-0x1c],edi
1005ab96:	jmp    0x1005ac00
1005ab98:	shl    esi,0x2
1005ab9b:	push   0x38
1005ab9d:	call   0x100472aa
1005aba2:	pop    ecx
1005aba3:	mov    ecx,DWORD PTR ds:0x100834b0
1005aba9:	mov    DWORD PTR [esi+ecx*1],eax
1005abac:	mov    eax,ds:0x100834b0
1005abb1:	add    eax,esi
1005abb3:	cmp    DWORD PTR [eax],ebx
1005abb5:	je     0x1005ac00
1005abb7:	push   0xfa0
1005abbc:	mov    eax,DWORD PTR [eax]
1005abbe:	add    eax,0x20
1005abc1:	push   eax
1005abc2:	call   0x1004c769
1005abc7:	pop    ecx
1005abc8:	pop    ecx
1005abc9:	test   eax,eax
1005abcb:	mov    eax,ds:0x100834b0
1005abd0:	jne    0x1005abe5
1005abd2:	push   DWORD PTR [esi+eax*1]
1005abd5:	call   0x100437dc
1005abda:	pop    ecx
1005abdb:	mov    eax,ds:0x100834b0
1005abe0:	mov    DWORD PTR [esi+eax*1],ebx
1005abe3:	jmp    0x1005ac00
1005abe5:	mov    eax,DWORD PTR [esi+eax*1]
1005abe8:	add    eax,0x20
1005abeb:	push   eax
1005abec:	call   DWORD PTR ds:0x100670f8
1005abf2:	mov    eax,ds:0x100834b0
1005abf7:	mov    edi,DWORD PTR [esi+eax*1]
1005abfa:	mov    DWORD PTR [ebp-0x1c],edi
1005abfd:	mov    DWORD PTR [edi+0xc],ebx
1005ac00:	cmp    edi,ebx
1005ac02:	je     0x1005ac1a
1005ac04:	and    DWORD PTR [edi+0xc],0x8000
1005ac0b:	mov    DWORD PTR [edi+0x4],ebx
1005ac0e:	mov    DWORD PTR [edi+0x8],ebx
1005ac11:	mov    DWORD PTR [edi],ebx
1005ac13:	mov    DWORD PTR [edi+0x1c],ebx
1005ac16:	or     DWORD PTR [edi+0x10],0xffffffff
1005ac1a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ac21:	call   0x1005ac31
1005ac26:	mov    eax,edi
1005ac28:	call   0x10047761
1005ac2d:	ret    
1005ac2e:	mov    edi,DWORD PTR [ebp-0x1c]
1005ac31:	push   0x1
1005ac33:	call   0x10047d36
1005ac38:	pop    ecx
1005ac39:	ret    
1005ac3a:	mov    DWORD PTR [ecx],0x1006db00
1005ac40:	jmp    0x10043390
1005ac45:	push   esi
1005ac46:	mov    esi,ecx
1005ac48:	mov    DWORD PTR [esi],0x1006db00
1005ac4e:	call   0x10043390
1005ac53:	test   BYTE PTR [esp+0x8],0x1
1005ac58:	je     0x1005ac61
1005ac5a:	push   esi
1005ac5b:	call   0x10042fe2
1005ac60:	pop    ecx
1005ac61:	mov    eax,esi
1005ac63:	pop    esi
1005ac64:	ret    0x4
1005ac67:	push   esi
1005ac68:	push   edi
1005ac69:	mov    edi,DWORD PTR [esp+0xc]
1005ac6d:	mov    eax,DWORD PTR [edi+0x4]
1005ac70:	test   eax,eax
1005ac72:	je     0x1005acbd
1005ac74:	lea    edx,[eax+0x8]
1005ac77:	cmp    BYTE PTR [edx],0x0
1005ac7a:	je     0x1005acbd
1005ac7c:	mov    esi,DWORD PTR [esp+0x10]
1005ac80:	mov    ecx,DWORD PTR [esi+0x4]
1005ac83:	cmp    eax,ecx
1005ac85:	je     0x1005ac9b
1005ac87:	add    ecx,0x8
1005ac8a:	push   ecx
1005ac8b:	push   edx
1005ac8c:	call   0x10047c10
1005ac91:	test   eax,eax
1005ac93:	pop    ecx
1005ac94:	pop    ecx
1005ac95:	je     0x1005ac9b
1005ac97:	xor    eax,eax
1005ac99:	jmp    0x1005acc0
1005ac9b:	test   BYTE PTR [esi],0x2
1005ac9e:	je     0x1005aca5
1005aca0:	test   BYTE PTR [edi],0x8
1005aca3:	je     0x1005ac97
1005aca5:	mov    eax,DWORD PTR [esp+0x14]
1005aca9:	mov    eax,DWORD PTR [eax]
1005acab:	test   al,0x1
1005acad:	je     0x1005acb4
1005acaf:	test   BYTE PTR [edi],0x1
1005acb2:	je     0x1005ac97
1005acb4:	test   al,0x2
1005acb6:	je     0x1005acbd
1005acb8:	test   BYTE PTR [edi],0x2
1005acbb:	je     0x1005ac97
1005acbd:	xor    eax,eax
1005acbf:	inc    eax
1005acc0:	pop    edi
1005acc1:	pop    esi
1005acc2:	ret    
1005acc3:	mov    eax,DWORD PTR [esp+0x4]
1005acc7:	mov    eax,DWORD PTR [eax]
1005acc9:	mov    eax,DWORD PTR [eax]
1005accb:	cmp    eax,0xe0434f4d
1005acd0:	je     0x1005acea
1005acd2:	cmp    eax,0xe06d7363
1005acd7:	jne    0x1005ad04
1005acd9:	call   0x10046f84
1005acde:	and    DWORD PTR [eax+0x90],0x0
1005ace5:	jmp    0x1004798c
1005acea:	call   0x10046f84
1005acef:	cmp    DWORD PTR [eax+0x90],0x0
1005acf6:	jle    0x1005ad04
1005acf8:	call   0x10046f84
1005acfd:	add    eax,0x90
1005ad02:	dec    DWORD PTR [eax]
1005ad04:	xor    eax,eax
1005ad06:	ret    
1005ad07:	push   0x10
1005ad09:	push   0x10076228
1005ad0e:	call   0x1004771c
1005ad13:	mov    edi,DWORD PTR [ebp+0x10]
1005ad16:	mov    ebx,DWORD PTR [ebp+0x8]
1005ad19:	cmp    DWORD PTR [edi+0x4],0x80
1005ad20:	jg     0x1005ad28
1005ad22:	movsx  esi,BYTE PTR [ebx+0x8]
1005ad26:	jmp    0x1005ad2b
1005ad28:	mov    esi,DWORD PTR [ebx+0x8]
1005ad2b:	mov    DWORD PTR [ebp-0x1c],esi
1005ad2e:	call   0x10046f84
1005ad33:	add    eax,0x90
1005ad38:	inc    DWORD PTR [eax]
1005ad3a:	and    DWORD PTR [ebp-0x4],0x0
1005ad3e:	cmp    esi,DWORD PTR [ebp+0x14]
1005ad41:	je     0x1005ada8
1005ad43:	cmp    esi,0xffffffff
1005ad46:	jle    0x1005ad4d
1005ad48:	cmp    esi,DWORD PTR [edi+0x4]
1005ad4b:	jl     0x1005ad52
1005ad4d:	call   0x100479d8
1005ad52:	mov    eax,esi
1005ad54:	shl    eax,0x3
1005ad57:	mov    ecx,DWORD PTR [edi+0x8]
1005ad5a:	add    ecx,eax
1005ad5c:	mov    esi,DWORD PTR [ecx]
1005ad5e:	mov    DWORD PTR [ebp-0x20],esi
1005ad61:	mov    DWORD PTR [ebp-0x4],0x1
1005ad68:	cmp    DWORD PTR [ecx+0x4],0x0
1005ad6c:	je     0x1005ad83
1005ad6e:	mov    DWORD PTR [ebx+0x8],esi
1005ad71:	push   0x103
1005ad76:	push   ebx
1005ad77:	mov    ecx,DWORD PTR [edi+0x8]
1005ad7a:	push   DWORD PTR [ecx+eax*1+0x4]
1005ad7e:	call   0x1005b8d0
1005ad83:	and    DWORD PTR [ebp-0x4],0x0
1005ad87:	jmp    0x1005ada3
1005ad89:	push   DWORD PTR [ebp-0x14]
1005ad8c:	call   0x1005acc3
1005ad91:	pop    ecx
1005ad92:	ret    
1005ad93:	mov    esp,DWORD PTR [ebp-0x18]
1005ad96:	and    DWORD PTR [ebp-0x4],0x0
1005ad9a:	mov    edi,DWORD PTR [ebp+0x10]
1005ad9d:	mov    ebx,DWORD PTR [ebp+0x8]
1005ada0:	mov    esi,DWORD PTR [ebp-0x20]
1005ada3:	mov    DWORD PTR [ebp-0x1c],esi
1005ada6:	jmp    0x1005ad3e
1005ada8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005adaf:	call   0x1005adcd
1005adb4:	cmp    esi,DWORD PTR [ebp+0x14]
1005adb7:	je     0x1005adbe
1005adb9:	call   0x100479d8
1005adbe:	mov    DWORD PTR [ebx+0x8],esi
1005adc1:	call   0x10047761
1005adc6:	ret    
1005adc7:	mov    ebx,DWORD PTR [ebp+0x8]
1005adca:	mov    esi,DWORD PTR [ebp-0x1c]
1005adcd:	call   0x10046f84
1005add2:	cmp    DWORD PTR [eax+0x90],0x0
1005add9:	jle    0x1005ade7
1005addb:	call   0x10046f84
1005ade0:	add    eax,0x90
1005ade5:	dec    DWORD PTR [eax]
1005ade7:	ret    
1005ade8:	mov    eax,DWORD PTR [eax]
1005adea:	cmp    DWORD PTR [eax],0xe06d7363
1005adf0:	jne    0x1005ae2a
1005adf2:	cmp    DWORD PTR [eax+0x10],0x3
1005adf6:	jne    0x1005ae2a
1005adf8:	mov    ecx,DWORD PTR [eax+0x14]
1005adfb:	cmp    ecx,0x19930520
1005ae01:	je     0x1005ae13
1005ae03:	cmp    ecx,0x19930521
1005ae09:	je     0x1005ae13
1005ae0b:	cmp    ecx,0x19930522
1005ae11:	jne    0x1005ae2a
1005ae13:	cmp    DWORD PTR [eax+0x1c],0x0
1005ae17:	jne    0x1005ae2a
1005ae19:	call   0x10046f84
1005ae1e:	xor    ecx,ecx
1005ae20:	inc    ecx
1005ae21:	mov    DWORD PTR [eax+0x20c],ecx
1005ae27:	mov    eax,ecx
1005ae29:	ret    
1005ae2a:	xor    eax,eax
1005ae2c:	ret    
1005ae2d:	push   0x8
1005ae2f:	push   0x10076250
1005ae34:	call   0x1004771c
1005ae39:	mov    ecx,DWORD PTR [ebp+0x8]
1005ae3c:	test   ecx,ecx
1005ae3e:	je     0x1005ae6a
1005ae40:	cmp    DWORD PTR [ecx],0xe06d7363
1005ae46:	jne    0x1005ae6a
1005ae48:	mov    eax,DWORD PTR [ecx+0x1c]
1005ae4b:	test   eax,eax
1005ae4d:	je     0x1005ae6a
1005ae4f:	mov    eax,DWORD PTR [eax+0x4]
1005ae52:	test   eax,eax
1005ae54:	je     0x1005ae6a
1005ae56:	and    DWORD PTR [ebp-0x4],0x0
1005ae5a:	push   eax
1005ae5b:	push   DWORD PTR [ecx+0x18]
1005ae5e:	call   0x10059546
1005ae63:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005ae6a:	call   0x10047761
1005ae6f:	ret    
1005ae70:	xor    eax,eax
1005ae72:	cmp    BYTE PTR [ebp+0xc],al
1005ae75:	setne  al
1005ae78:	ret    
1005ae79:	mov    esp,DWORD PTR [ebp-0x18]
1005ae7c:	jmp    0x1004798c
1005ae81:	mov    ecx,DWORD PTR [esp+0x8]
1005ae85:	mov    eax,DWORD PTR [ecx]
1005ae87:	push   esi
1005ae88:	mov    esi,DWORD PTR [esp+0x8]
1005ae8c:	add    eax,esi
1005ae8e:	cmp    DWORD PTR [ecx+0x4],0x0
1005ae92:	jl     0x1005aea4
1005ae94:	mov    edx,DWORD PTR [ecx+0x4]
1005ae97:	mov    ecx,DWORD PTR [ecx+0x8]
1005ae9a:	mov    esi,DWORD PTR [edx+esi*1]
1005ae9d:	mov    ecx,DWORD PTR [esi+ecx*1]
1005aea0:	add    ecx,edx
1005aea2:	add    eax,ecx
1005aea4:	pop    esi
1005aea5:	ret    
1005aea6:	push   ebp
1005aea7:	mov    ebp,esp
1005aea9:	sub    esp,0xc
1005aeac:	test   edi,edi
1005aeae:	jne    0x1005aeba
1005aeb0:	call   0x100479d8
1005aeb5:	jmp    0x1004798c
1005aeba:	and    DWORD PTR [ebp-0x8],0x0
1005aebe:	cmp    DWORD PTR [edi],0x0
1005aec1:	mov    BYTE PTR [ebp-0x1],0x0
1005aec5:	jle    0x1005af1a
1005aec7:	push   ebx
1005aec8:	push   esi
1005aec9:	mov    eax,DWORD PTR [ebp+0x8]
1005aecc:	mov    eax,DWORD PTR [eax+0x1c]
1005aecf:	mov    eax,DWORD PTR [eax+0xc]
1005aed2:	mov    ebx,DWORD PTR [eax]
1005aed4:	test   ebx,ebx
1005aed6:	lea    esi,[eax+0x4]
1005aed9:	jle    0x1005af0e
1005aedb:	mov    eax,DWORD PTR [ebp-0x8]
1005aede:	shl    eax,0x4
1005aee1:	mov    DWORD PTR [ebp-0xc],eax
1005aee4:	mov    ecx,DWORD PTR [ebp+0x8]
1005aee7:	push   DWORD PTR [ecx+0x1c]
1005aeea:	mov    eax,DWORD PTR [esi]
1005aeec:	push   eax
1005aeed:	mov    eax,DWORD PTR [edi+0x4]
1005aef0:	add    eax,DWORD PTR [ebp-0xc]
1005aef3:	push   eax
1005aef4:	call   0x1005ac67
1005aef9:	add    esp,0xc
1005aefc:	test   eax,eax
1005aefe:	jne    0x1005af0a
1005af00:	dec    ebx
1005af01:	add    esi,0x4
1005af04:	test   ebx,ebx
1005af06:	jg     0x1005aee4
1005af08:	jmp    0x1005af0e
1005af0a:	mov    BYTE PTR [ebp-0x1],0x1
1005af0e:	inc    DWORD PTR [ebp-0x8]
1005af11:	mov    eax,DWORD PTR [ebp-0x8]
1005af14:	cmp    eax,DWORD PTR [edi]
1005af16:	jl     0x1005aec9
1005af18:	pop    esi
1005af19:	pop    ebx
1005af1a:	mov    al,BYTE PTR [ebp-0x1]
1005af1d:	leave  
1005af1e:	ret    
1005af1f:	push   0x4
1005af21:	mov    eax,0x1005fa8b
1005af26:	call   0x10059e28
1005af2b:	call   0x10046f84
1005af30:	cmp    DWORD PTR [eax+0x94],0x0
1005af37:	je     0x1005af3e
1005af39:	call   0x100479d8
1005af3e:	and    DWORD PTR [ebp-0x4],0x0
1005af42:	call   0x100479c5
1005af47:	or     DWORD PTR [ebp-0x4],0xffffffff
1005af4b:	jmp    0x1004798c
1005af50:	call   0x10046f84
1005af55:	mov    ecx,DWORD PTR [ebp+0x8]
1005af58:	push   0x0
1005af5a:	push   0x0
1005af5c:	mov    DWORD PTR [eax+0x94],ecx
1005af62:	call   0x10047942
1005af67:	int3   
1005af68:	push   0x2c
1005af6a:	push   0x100762c8
1005af6f:	call   0x1004771c
1005af74:	mov    ebx,ecx
1005af76:	mov    edi,DWORD PTR [ebp+0xc]
1005af79:	mov    esi,DWORD PTR [ebp+0x8]
1005af7c:	mov    DWORD PTR [ebp-0x1c],ebx
1005af7f:	and    DWORD PTR [ebp-0x34],0x0
1005af83:	mov    eax,DWORD PTR [edi-0x4]
1005af86:	mov    DWORD PTR [ebp-0x24],eax
1005af89:	push   DWORD PTR [esi+0x18]
1005af8c:	lea    eax,[ebp-0x3c]
1005af8f:	push   eax
1005af90:	call   0x100597ea
1005af95:	pop    ecx
1005af96:	pop    ecx
1005af97:	mov    DWORD PTR [ebp-0x28],eax
1005af9a:	call   0x10046f84
1005af9f:	mov    eax,DWORD PTR [eax+0x88]
1005afa5:	mov    DWORD PTR [ebp-0x2c],eax
1005afa8:	call   0x10046f84
1005afad:	mov    eax,DWORD PTR [eax+0x8c]
1005afb3:	mov    DWORD PTR [ebp-0x30],eax
1005afb6:	call   0x10046f84
1005afbb:	mov    DWORD PTR [eax+0x88],esi
1005afc1:	call   0x10046f84
1005afc6:	mov    ecx,DWORD PTR [ebp+0x10]
1005afc9:	mov    DWORD PTR [eax+0x8c],ecx
1005afcf:	and    DWORD PTR [ebp-0x4],0x0
1005afd3:	xor    eax,eax
1005afd5:	inc    eax
1005afd6:	mov    DWORD PTR [ebp+0x10],eax
1005afd9:	mov    DWORD PTR [ebp-0x4],eax
1005afdc:	push   DWORD PTR [ebp+0x1c]
1005afdf:	push   DWORD PTR [ebp+0x18]
1005afe2:	push   ebx
1005afe3:	push   DWORD PTR [ebp+0x14]
1005afe6:	push   edi
1005afe7:	call   0x1005987f
1005afec:	add    esp,0x14
1005afef:	mov    DWORD PTR [ebp-0x1c],eax
1005aff2:	and    DWORD PTR [ebp-0x4],0x0
1005aff6:	jmp    0x1005b067
1005aff8:	mov    eax,DWORD PTR [ebp-0x14]
1005affb:	call   0x1005ade8
1005b000:	ret    
1005b001:	mov    esp,DWORD PTR [ebp-0x18]
1005b004:	call   0x10046f84
1005b009:	and    DWORD PTR [eax+0x20c],0x0
1005b010:	mov    esi,DWORD PTR [ebp+0x14]
1005b013:	mov    edi,DWORD PTR [ebp+0xc]
1005b016:	cmp    DWORD PTR [esi+0x4],0x80
1005b01d:	jg     0x1005b025
1005b01f:	movsx  ecx,BYTE PTR [edi+0x8]
1005b023:	jmp    0x1005b028
1005b025:	mov    ecx,DWORD PTR [edi+0x8]
1005b028:	mov    ebx,DWORD PTR [esi+0x10]
1005b02b:	and    DWORD PTR [ebp-0x20],0x0
1005b02f:	mov    eax,DWORD PTR [ebp-0x20]
1005b032:	cmp    eax,DWORD PTR [esi+0xc]
1005b035:	jae    0x1005b04f
1005b037:	imul   eax,eax,0x14
1005b03a:	add    eax,ebx
1005b03c:	mov    edx,DWORD PTR [eax+0x4]
1005b03f:	cmp    ecx,edx
1005b041:	jle    0x1005b083
1005b043:	cmp    ecx,DWORD PTR [eax+0x8]
1005b046:	jg     0x1005b083
1005b048:	mov    eax,DWORD PTR [esi+0x8]
1005b04b:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1005b04f:	push   ecx
1005b050:	push   esi
1005b051:	push   0x0
1005b053:	push   edi
1005b054:	call   0x1005ad07
1005b059:	add    esp,0x10
1005b05c:	and    DWORD PTR [ebp-0x1c],0x0
1005b060:	and    DWORD PTR [ebp-0x4],0x0
1005b064:	mov    esi,DWORD PTR [ebp+0x8]
1005b067:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b06e:	mov    DWORD PTR [ebp+0x10],0x0
1005b075:	call   0x1005b08e
1005b07a:	mov    eax,DWORD PTR [ebp-0x1c]
1005b07d:	call   0x10047761
1005b082:	ret    
1005b083:	inc    DWORD PTR [ebp-0x20]
1005b086:	jmp    0x1005b02f
1005b088:	mov    edi,DWORD PTR [ebp+0xc]
1005b08b:	mov    esi,DWORD PTR [ebp+0x8]
1005b08e:	mov    eax,DWORD PTR [ebp-0x24]
1005b091:	mov    DWORD PTR [edi-0x4],eax
1005b094:	push   DWORD PTR [ebp-0x28]
1005b097:	call   0x10059833
1005b09c:	pop    ecx
1005b09d:	call   0x10046f84
1005b0a2:	mov    ecx,DWORD PTR [ebp-0x2c]
1005b0a5:	mov    DWORD PTR [eax+0x88],ecx
1005b0ab:	call   0x10046f84
1005b0b0:	mov    ecx,DWORD PTR [ebp-0x30]
1005b0b3:	mov    DWORD PTR [eax+0x8c],ecx
1005b0b9:	cmp    DWORD PTR [esi],0xe06d7363
1005b0bf:	jne    0x1005b103
1005b0c1:	cmp    DWORD PTR [esi+0x10],0x3
1005b0c5:	jne    0x1005b103
1005b0c7:	mov    eax,DWORD PTR [esi+0x14]
1005b0ca:	cmp    eax,0x19930520
1005b0cf:	je     0x1005b0df
1005b0d1:	cmp    eax,0x19930521
1005b0d6:	je     0x1005b0df
1005b0d8:	cmp    eax,0x19930522
1005b0dd:	jne    0x1005b103
1005b0df:	cmp    DWORD PTR [ebp-0x34],0x0
1005b0e3:	jne    0x1005b103
1005b0e5:	cmp    DWORD PTR [ebp-0x1c],0x0
1005b0e9:	je     0x1005b103
1005b0eb:	push   DWORD PTR [esi+0x18]
1005b0ee:	call   0x10059812
1005b0f3:	pop    ecx
1005b0f4:	test   eax,eax
1005b0f6:	je     0x1005b103
1005b0f8:	push   DWORD PTR [ebp+0x10]
1005b0fb:	push   esi
1005b0fc:	call   0x1005ae2d
1005b101:	pop    ecx
1005b102:	pop    ecx
1005b103:	ret    
1005b104:	push   0xc
1005b106:	push   0x100762f0
1005b10b:	call   0x1004771c
1005b110:	xor    edx,edx
1005b112:	mov    DWORD PTR [ebp-0x1c],edx
1005b115:	mov    eax,DWORD PTR [ebp+0x10]
1005b118:	mov    ecx,DWORD PTR [eax+0x4]
1005b11b:	cmp    ecx,edx
1005b11d:	je     0x1005b27b
1005b123:	cmp    BYTE PTR [ecx+0x8],dl
1005b126:	je     0x1005b27b
1005b12c:	mov    ecx,DWORD PTR [eax+0x8]
1005b12f:	cmp    ecx,edx
1005b131:	jne    0x1005b13f
1005b133:	test   DWORD PTR [eax],0x80000000
1005b139:	je     0x1005b27b
1005b13f:	mov    eax,DWORD PTR [eax]
1005b141:	mov    esi,DWORD PTR [ebp+0xc]
1005b144:	test   eax,eax
1005b146:	js     0x1005b14c
1005b148:	lea    esi,[ecx+esi*1+0xc]
1005b14c:	mov    DWORD PTR [ebp-0x4],edx
1005b14f:	xor    ebx,ebx
1005b151:	inc    ebx
1005b152:	push   ebx
1005b153:	test   al,0x8
1005b155:	je     0x1005b198
1005b157:	mov    edi,DWORD PTR [ebp+0x8]
1005b15a:	push   DWORD PTR [edi+0x18]
1005b15d:	call   0x1005d2e6
1005b162:	pop    ecx
1005b163:	pop    ecx
1005b164:	test   eax,eax
1005b166:	je     0x1005b25e
1005b16c:	push   ebx
1005b16d:	push   esi
1005b16e:	call   0x1005d2e6
1005b173:	pop    ecx
1005b174:	pop    ecx
1005b175:	test   eax,eax
1005b177:	je     0x1005b25e
1005b17d:	mov    eax,DWORD PTR [edi+0x18]
1005b180:	mov    DWORD PTR [esi],eax
1005b182:	mov    ecx,DWORD PTR [ebp+0x14]
1005b185:	add    ecx,0x8
1005b188:	push   ecx
1005b189:	push   eax
1005b18a:	call   0x1005ae81
1005b18f:	pop    ecx
1005b190:	pop    ecx
1005b191:	mov    DWORD PTR [esi],eax
1005b193:	jmp    0x1005b263
1005b198:	mov    edi,DWORD PTR [ebp+0x14]
1005b19b:	mov    eax,DWORD PTR [ebp+0x8]
1005b19e:	push   DWORD PTR [eax+0x18]
1005b1a1:	test   BYTE PTR [edi],bl
1005b1a3:	je     0x1005b1ed
1005b1a5:	call   0x1005d2e6
1005b1aa:	pop    ecx
1005b1ab:	pop    ecx
1005b1ac:	test   eax,eax
1005b1ae:	je     0x1005b25e
1005b1b4:	push   ebx
1005b1b5:	push   esi
1005b1b6:	call   0x1005d2e6
1005b1bb:	pop    ecx
1005b1bc:	pop    ecx
1005b1bd:	test   eax,eax
1005b1bf:	je     0x1005b25e
1005b1c5:	push   DWORD PTR [edi+0x14]
1005b1c8:	mov    eax,DWORD PTR [ebp+0x8]
1005b1cb:	push   DWORD PTR [eax+0x18]
1005b1ce:	push   esi
1005b1cf:	call   0x10045880
1005b1d4:	add    esp,0xc
1005b1d7:	cmp    DWORD PTR [edi+0x14],0x4
1005b1db:	jne    0x1005b263
1005b1e1:	mov    eax,DWORD PTR [esi]
1005b1e3:	test   eax,eax
1005b1e5:	je     0x1005b263
1005b1e7:	add    edi,0x8
1005b1ea:	push   edi
1005b1eb:	jmp    0x1005b189
1005b1ed:	cmp    DWORD PTR [edi+0x18],edx
1005b1f0:	jne    0x1005b22a
1005b1f2:	call   0x1005d2e6
1005b1f7:	pop    ecx
1005b1f8:	pop    ecx
1005b1f9:	test   eax,eax
1005b1fb:	je     0x1005b25e
1005b1fd:	push   ebx
1005b1fe:	push   esi
1005b1ff:	call   0x1005d2e6
1005b204:	pop    ecx
1005b205:	pop    ecx
1005b206:	test   eax,eax
1005b208:	je     0x1005b25e
1005b20a:	push   DWORD PTR [edi+0x14]
1005b20d:	add    edi,0x8
1005b210:	push   edi
1005b211:	mov    eax,DWORD PTR [ebp+0x8]
1005b214:	push   DWORD PTR [eax+0x18]
1005b217:	call   0x1005ae81
1005b21c:	pop    ecx
1005b21d:	pop    ecx
1005b21e:	push   eax
1005b21f:	push   esi
1005b220:	call   0x10045880
1005b225:	add    esp,0xc
1005b228:	jmp    0x1005b263
1005b22a:	call   0x1005d2e6
1005b22f:	pop    ecx
1005b230:	pop    ecx
1005b231:	test   eax,eax
1005b233:	je     0x1005b25e
1005b235:	push   ebx
1005b236:	push   esi
1005b237:	call   0x1005d2e6
1005b23c:	pop    ecx
1005b23d:	pop    ecx
1005b23e:	test   eax,eax
1005b240:	je     0x1005b25e
1005b242:	push   DWORD PTR [edi+0x18]
1005b245:	call   0x1005d2e6
1005b24a:	pop    ecx
1005b24b:	test   eax,eax
1005b24d:	je     0x1005b25e
1005b24f:	test   BYTE PTR [edi],0x4
1005b252:	push   0x0
1005b254:	pop    eax
1005b255:	setne  al
1005b258:	inc    eax
1005b259:	mov    DWORD PTR [ebp-0x1c],eax
1005b25c:	jmp    0x1005b263
1005b25e:	call   0x100479d8
1005b263:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b26a:	mov    eax,DWORD PTR [ebp-0x1c]
1005b26d:	jmp    0x1005b27d
1005b26f:	xor    eax,eax
1005b271:	inc    eax
1005b272:	ret    
1005b273:	mov    esp,DWORD PTR [ebp-0x18]
1005b276:	jmp    0x1004798c
1005b27b:	xor    eax,eax
1005b27d:	call   0x10047761
1005b282:	ret    
1005b283:	push   0x8
1005b285:	push   0x10076310
1005b28a:	call   0x1004771c
1005b28f:	mov    eax,DWORD PTR [ebp+0x10]
1005b292:	test   DWORD PTR [eax],0x80000000
1005b298:	je     0x1005b29f
1005b29a:	mov    ebx,DWORD PTR [ebp+0xc]
1005b29d:	jmp    0x1005b2a9
1005b29f:	mov    ecx,DWORD PTR [eax+0x8]
1005b2a2:	mov    edx,DWORD PTR [ebp+0xc]
1005b2a5:	lea    ebx,[ecx+edx*1+0xc]
1005b2a9:	and    DWORD PTR [ebp-0x4],0x0
1005b2ad:	mov    esi,DWORD PTR [ebp+0x14]
1005b2b0:	push   esi
1005b2b1:	push   eax
1005b2b2:	push   DWORD PTR [ebp+0xc]
1005b2b5:	mov    edi,DWORD PTR [ebp+0x8]
1005b2b8:	push   edi
1005b2b9:	call   0x1005b104
1005b2be:	add    esp,0x10
1005b2c1:	dec    eax
1005b2c2:	je     0x1005b2e3
1005b2c4:	dec    eax
1005b2c5:	jne    0x1005b2fb
1005b2c7:	push   0x1
1005b2c9:	lea    eax,[esi+0x8]
1005b2cc:	push   eax
1005b2cd:	push   DWORD PTR [edi+0x18]
1005b2d0:	call   0x1005ae81
1005b2d5:	pop    ecx
1005b2d6:	pop    ecx
1005b2d7:	push   eax
1005b2d8:	push   DWORD PTR [esi+0x18]
1005b2db:	push   ebx
1005b2dc:	call   0x10059546
1005b2e1:	jmp    0x1005b2fb
1005b2e3:	lea    eax,[esi+0x8]
1005b2e6:	push   eax
1005b2e7:	push   DWORD PTR [edi+0x18]
1005b2ea:	call   0x1005ae81
1005b2ef:	pop    ecx
1005b2f0:	pop    ecx
1005b2f1:	push   eax
1005b2f2:	push   DWORD PTR [esi+0x18]
1005b2f5:	push   ebx
1005b2f6:	call   0x10059546
1005b2fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b302:	call   0x10047761
1005b307:	ret    
1005b308:	xor    eax,eax
1005b30a:	inc    eax
1005b30b:	ret    
1005b30c:	mov    esp,DWORD PTR [ebp-0x18]
1005b30f:	jmp    0x1004798c
1005b314:	push   ebp
1005b315:	mov    ebp,esp
1005b317:	cmp    DWORD PTR [ebp+0x18],0x0
1005b31b:	je     0x1005b32d
1005b31d:	push   DWORD PTR [ebp+0x18]
1005b320:	push   ebx
1005b321:	push   esi
1005b322:	push   DWORD PTR [ebp+0x8]
1005b325:	call   0x1005b283
1005b32a:	add    esp,0x10
1005b32d:	cmp    DWORD PTR [ebp+0x20],0x0
1005b331:	push   DWORD PTR [ebp+0x8]
1005b334:	jne    0x1005b339
1005b336:	push   esi
1005b337:	jmp    0x1005b33c
1005b339:	push   DWORD PTR [ebp+0x20]
1005b33c:	call   0x1005954d
1005b341:	push   DWORD PTR [edi]
1005b343:	push   DWORD PTR [ebp+0x14]
1005b346:	push   DWORD PTR [ebp+0x10]
1005b349:	push   esi
1005b34a:	call   0x1005ad07
1005b34f:	mov    eax,DWORD PTR [edi+0x4]
1005b352:	push   0x100
1005b357:	push   DWORD PTR [ebp+0x1c]
1005b35a:	inc    eax
1005b35b:	push   DWORD PTR [ebp+0x14]
1005b35e:	mov    DWORD PTR [esi+0x8],eax
1005b361:	push   DWORD PTR [ebp+0xc]
1005b364:	mov    ecx,DWORD PTR [ebx+0xc]
1005b367:	push   esi
1005b368:	push   DWORD PTR [ebp+0x8]
1005b36b:	call   0x1005af68
1005b370:	add    esp,0x28
1005b373:	test   eax,eax
1005b375:	je     0x1005b37e
1005b377:	push   esi
1005b378:	push   eax
1005b379:	call   0x10059516
1005b37e:	pop    ebp
1005b37f:	ret    
1005b380:	push   ebp
1005b381:	mov    ebp,esp
1005b383:	push   ecx
1005b384:	push   ecx
1005b385:	push   esi
1005b386:	mov    esi,DWORD PTR [ebp+0x8]
1005b389:	cmp    DWORD PTR [esi],0x80000003
1005b38f:	je     0x1005b46f
1005b395:	push   edi
1005b396:	call   0x10046f84
1005b39b:	cmp    DWORD PTR [eax+0x80],0x0
1005b3a2:	je     0x1005b3e3
1005b3a4:	call   0x10046f84
1005b3a9:	lea    edi,[eax+0x80]
1005b3af:	call   0x10046d5f
1005b3b4:	cmp    DWORD PTR [edi],eax
1005b3b6:	je     0x1005b3e3
1005b3b8:	cmp    DWORD PTR [esi],0xe0434f4d
1005b3be:	je     0x1005b3e3
1005b3c0:	push   DWORD PTR [ebp+0x24]
1005b3c3:	push   DWORD PTR [ebp+0x20]
1005b3c6:	push   DWORD PTR [ebp+0x18]
1005b3c9:	push   DWORD PTR [ebp+0x14]
1005b3cc:	push   DWORD PTR [ebp+0x10]
1005b3cf:	push   DWORD PTR [ebp+0xc]
1005b3d2:	push   esi
1005b3d3:	call   0x10059605
1005b3d8:	add    esp,0x1c
1005b3db:	test   eax,eax
1005b3dd:	jne    0x1005b46e
1005b3e3:	mov    edi,DWORD PTR [ebp+0x18]
1005b3e6:	cmp    DWORD PTR [edi+0xc],0x0
1005b3ea:	jne    0x1005b3f1
1005b3ec:	call   0x100479d8
1005b3f1:	mov    esi,DWORD PTR [ebp+0x1c]
1005b3f4:	lea    eax,[ebp-0x8]
1005b3f7:	push   eax
1005b3f8:	lea    eax,[ebp-0x4]
1005b3fb:	push   eax
1005b3fc:	push   esi
1005b3fd:	push   DWORD PTR [ebp+0x20]
1005b400:	push   edi
1005b401:	call   0x10059777
1005b406:	mov    edi,eax
1005b408:	mov    eax,DWORD PTR [ebp-0x4]
1005b40b:	add    esp,0x14
1005b40e:	cmp    eax,DWORD PTR [ebp-0x8]
1005b411:	jae    0x1005b46e
1005b413:	push   ebx
1005b414:	cmp    esi,DWORD PTR [edi]
1005b416:	jl     0x1005b45f
1005b418:	cmp    esi,DWORD PTR [edi+0x4]
1005b41b:	jg     0x1005b45f
1005b41d:	mov    eax,DWORD PTR [edi+0xc]
1005b420:	mov    ecx,DWORD PTR [edi+0x10]
1005b423:	shl    eax,0x4
1005b426:	add    eax,ecx
1005b428:	mov    ecx,DWORD PTR [eax-0xc]
1005b42b:	test   ecx,ecx
1005b42d:	je     0x1005b435
1005b42f:	cmp    BYTE PTR [ecx+0x8],0x0
1005b433:	jne    0x1005b45f
1005b435:	lea    ebx,[eax-0x10]
1005b438:	test   BYTE PTR [ebx],0x40
1005b43b:	jne    0x1005b45f
1005b43d:	push   DWORD PTR [ebp+0x24]
1005b440:	mov    esi,DWORD PTR [ebp+0xc]
1005b443:	push   DWORD PTR [ebp+0x20]
1005b446:	push   0x0
1005b448:	push   DWORD PTR [ebp+0x18]
1005b44b:	push   DWORD PTR [ebp+0x14]
1005b44e:	push   DWORD PTR [ebp+0x10]
1005b451:	push   DWORD PTR [ebp+0x8]
1005b454:	call   0x1005b314
1005b459:	mov    esi,DWORD PTR [ebp+0x1c]
1005b45c:	add    esp,0x1c
1005b45f:	inc    DWORD PTR [ebp-0x4]
1005b462:	mov    eax,DWORD PTR [ebp-0x4]
1005b465:	add    edi,0x14
1005b468:	cmp    eax,DWORD PTR [ebp-0x8]
1005b46b:	jb     0x1005b414
1005b46d:	pop    ebx
1005b46e:	pop    edi
1005b46f:	pop    esi
1005b470:	leave  
1005b471:	ret    
1005b472:	push   ebp
1005b473:	mov    ebp,esp
1005b475:	sub    esp,0x2c
1005b478:	mov    ecx,DWORD PTR [ebp+0xc]
1005b47b:	push   ebx
1005b47c:	mov    ebx,DWORD PTR [ebp+0x18]
1005b47f:	mov    eax,DWORD PTR [ebx+0x4]
1005b482:	cmp    eax,0x80
1005b487:	push   esi
1005b488:	push   edi
1005b489:	mov    BYTE PTR [ebp-0x1],0x0
1005b48d:	jg     0x1005b495
1005b48f:	movsx  ecx,BYTE PTR [ecx+0x8]
1005b493:	jmp    0x1005b498
1005b495:	mov    ecx,DWORD PTR [ecx+0x8]
1005b498:	cmp    ecx,0xffffffff
1005b49b:	mov    DWORD PTR [ebp-0x8],ecx
1005b49e:	jl     0x1005b4a4
1005b4a0:	cmp    ecx,eax
1005b4a2:	jl     0x1005b4a9
1005b4a4:	call   0x100479d8
1005b4a9:	mov    esi,DWORD PTR [ebp+0x8]
1005b4ac:	mov    edi,0xe06d7363
1005b4b1:	cmp    DWORD PTR [esi],edi
1005b4b3:	jne    0x1005b784
1005b4b9:	cmp    DWORD PTR [esi+0x10],0x3
1005b4bd:	mov    ebx,0x19930520
1005b4c2:	jne    0x1005b5f1
1005b4c8:	mov    eax,DWORD PTR [esi+0x14]
1005b4cb:	cmp    eax,ebx
1005b4cd:	je     0x1005b4e1
1005b4cf:	cmp    eax,0x19930521
1005b4d4:	je     0x1005b4e1
1005b4d6:	cmp    eax,0x19930522
1005b4db:	jne    0x1005b5f1
1005b4e1:	cmp    DWORD PTR [esi+0x1c],0x0
1005b4e5:	jne    0x1005b5f1
1005b4eb:	call   0x10046f84
1005b4f0:	cmp    DWORD PTR [eax+0x88],0x0
1005b4f7:	je     0x1005b7c3
1005b4fd:	call   0x10046f84
1005b502:	mov    esi,DWORD PTR [eax+0x88]
1005b508:	mov    DWORD PTR [ebp+0x8],esi
1005b50b:	call   0x10046f84
1005b510:	mov    eax,DWORD PTR [eax+0x8c]
1005b516:	push   0x1
1005b518:	push   esi
1005b519:	mov    DWORD PTR [ebp+0x10],eax
1005b51c:	call   0x1005d2e6
1005b521:	test   eax,eax
1005b523:	pop    ecx
1005b524:	pop    ecx
1005b525:	jne    0x1005b52c
1005b527:	call   0x100479d8
1005b52c:	cmp    DWORD PTR [esi],edi
1005b52e:	jne    0x1005b556
1005b530:	cmp    DWORD PTR [esi+0x10],0x3
1005b534:	jne    0x1005b556
1005b536:	mov    eax,DWORD PTR [esi+0x14]
1005b539:	cmp    eax,ebx
1005b53b:	je     0x1005b54b
1005b53d:	cmp    eax,0x19930521
1005b542:	je     0x1005b54b
1005b544:	cmp    eax,0x19930522
1005b549:	jne    0x1005b556
1005b54b:	cmp    DWORD PTR [esi+0x1c],0x0
1005b54f:	jne    0x1005b556
1005b551:	call   0x100479d8
1005b556:	call   0x10046f84
1005b55b:	cmp    DWORD PTR [eax+0x94],0x0
1005b562:	je     0x1005b5f1
1005b568:	call   0x10046f84
1005b56d:	mov    edi,DWORD PTR [eax+0x94]
1005b573:	call   0x10046f84
1005b578:	push   DWORD PTR [ebp+0x8]
1005b57b:	xor    esi,esi
1005b57d:	mov    DWORD PTR [eax+0x94],esi
1005b583:	call   0x1005aea6
1005b588:	test   al,al
1005b58a:	pop    ecx
1005b58b:	jne    0x1005b5e9
1005b58d:	xor    ebx,ebx
1005b58f:	cmp    DWORD PTR [edi],ebx
1005b591:	jle    0x1005b5b0
1005b593:	mov    eax,DWORD PTR [edi+0x4]
1005b596:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1005b59a:	push   0x100811c4
1005b59f:	call   0x1004364e
1005b5a4:	test   al,al
1005b5a6:	jne    0x1005b5b5
1005b5a8:	inc    esi
1005b5a9:	add    ebx,0x10
1005b5ac:	cmp    esi,DWORD PTR [edi]
1005b5ae:	jl     0x1005b593
1005b5b0:	jmp    0x1004798c
1005b5b5:	push   0x1
1005b5b7:	push   DWORD PTR [ebp+0x8]
1005b5ba:	call   0x1005ae2d
1005b5bf:	pop    ecx
1005b5c0:	pop    ecx
1005b5c1:	lea    eax,[ebp+0x8]
1005b5c4:	push   eax
1005b5c5:	lea    ecx,[ebp-0x2c]
1005b5c8:	mov    DWORD PTR [ebp+0x8],0x1006db08
1005b5cf:	call   0x100432d2
1005b5d4:	push   0x1007632c
1005b5d9:	lea    eax,[ebp-0x2c]
1005b5dc:	push   eax
1005b5dd:	mov    DWORD PTR [ebp-0x2c],0x1006db00
1005b5e4:	call   0x10047942
1005b5e9:	mov    esi,DWORD PTR [ebp+0x8]
1005b5ec:	mov    edi,0xe06d7363
1005b5f1:	cmp    DWORD PTR [esi],edi
1005b5f3:	jne    0x1005b781
1005b5f9:	cmp    DWORD PTR [esi+0x10],0x3
1005b5fd:	jne    0x1005b781
1005b603:	mov    eax,DWORD PTR [esi+0x14]
1005b606:	cmp    eax,ebx
1005b608:	je     0x1005b61c
1005b60a:	cmp    eax,0x19930521
1005b60f:	je     0x1005b61c
1005b611:	cmp    eax,0x19930522
1005b616:	jne    0x1005b781
1005b61c:	mov    edi,DWORD PTR [ebp+0x18]
1005b61f:	cmp    DWORD PTR [edi+0xc],0x0
1005b623:	jbe    0x1005b6e8
1005b629:	lea    eax,[ebp-0x1c]
1005b62c:	push   eax
1005b62d:	lea    eax,[ebp-0x10]
1005b630:	push   eax
1005b631:	push   DWORD PTR [ebp-0x8]
1005b634:	push   DWORD PTR [ebp+0x20]
1005b637:	push   edi
1005b638:	call   0x10059777
1005b63d:	add    esp,0x14
1005b640:	mov    edi,eax
1005b642:	mov    eax,DWORD PTR [ebp-0x10]
1005b645:	cmp    eax,DWORD PTR [ebp-0x1c]
1005b648:	jae    0x1005b6e5
1005b64e:	mov    eax,DWORD PTR [ebp-0x8]
1005b651:	cmp    DWORD PTR [edi],eax
1005b653:	jg     0x1005b6da
1005b659:	cmp    eax,DWORD PTR [edi+0x4]
1005b65c:	jg     0x1005b6da
1005b65e:	mov    eax,DWORD PTR [edi+0x10]
1005b661:	mov    DWORD PTR [ebp-0xc],eax
1005b664:	mov    eax,DWORD PTR [edi+0xc]
1005b667:	test   eax,eax
1005b669:	mov    DWORD PTR [ebp-0x18],eax
1005b66c:	jle    0x1005b6da
1005b66e:	mov    eax,DWORD PTR [esi+0x1c]
1005b671:	mov    eax,DWORD PTR [eax+0xc]
1005b674:	lea    ebx,[eax+0x4]
1005b677:	mov    eax,DWORD PTR [eax]
1005b679:	test   eax,eax
1005b67b:	mov    DWORD PTR [ebp-0x14],eax
1005b67e:	jle    0x1005b6a3
1005b680:	push   DWORD PTR [esi+0x1c]
1005b683:	mov    eax,DWORD PTR [ebx]
1005b685:	push   eax
1005b686:	push   DWORD PTR [ebp-0xc]
1005b689:	mov    DWORD PTR [ebp-0x20],eax
1005b68c:	call   0x1005ac67
1005b691:	add    esp,0xc
1005b694:	test   eax,eax
1005b696:	jne    0x1005b6b2
1005b698:	dec    DWORD PTR [ebp-0x14]
1005b69b:	add    ebx,0x4
1005b69e:	cmp    DWORD PTR [ebp-0x14],eax
1005b6a1:	jg     0x1005b680
1005b6a3:	dec    DWORD PTR [ebp-0x18]
1005b6a6:	add    DWORD PTR [ebp-0xc],0x10
1005b6aa:	cmp    DWORD PTR [ebp-0x18],0x0
1005b6ae:	jg     0x1005b66e
1005b6b0:	jmp    0x1005b6da
1005b6b2:	push   DWORD PTR [ebp+0x24]
1005b6b5:	mov    ebx,DWORD PTR [ebp-0xc]
1005b6b8:	push   DWORD PTR [ebp+0x20]
1005b6bb:	mov    BYTE PTR [ebp-0x1],0x1
1005b6bf:	push   DWORD PTR [ebp-0x20]
1005b6c2:	push   DWORD PTR [ebp+0x18]
1005b6c5:	push   DWORD PTR [ebp+0x14]
1005b6c8:	push   DWORD PTR [ebp+0x10]
1005b6cb:	push   esi
1005b6cc:	mov    esi,DWORD PTR [ebp+0xc]
1005b6cf:	call   0x1005b314
1005b6d4:	mov    esi,DWORD PTR [ebp+0x8]
1005b6d7:	add    esp,0x1c
1005b6da:	inc    DWORD PTR [ebp-0x10]
1005b6dd:	add    edi,0x14
1005b6e0:	jmp    0x1005b642
1005b6e5:	mov    edi,DWORD PTR [ebp+0x18]
1005b6e8:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b6ec:	je     0x1005b6f8
1005b6ee:	push   0x1
1005b6f0:	push   esi
1005b6f1:	call   0x1005ae2d
1005b6f6:	pop    ecx
1005b6f7:	pop    ecx
1005b6f8:	cmp    BYTE PTR [ebp-0x1],0x0
1005b6fc:	jne    0x1005b7b0
1005b702:	mov    eax,DWORD PTR [edi]
1005b704:	and    eax,0x1fffffff
1005b709:	cmp    eax,0x19930521
1005b70e:	jb     0x1005b7b0
1005b714:	mov    edi,DWORD PTR [edi+0x1c]
1005b717:	test   edi,edi
1005b719:	je     0x1005b7b0
1005b71f:	push   esi
1005b720:	call   0x1005aea6
1005b725:	test   al,al
1005b727:	pop    ecx
1005b728:	jne    0x1005b7b0
1005b72e:	call   0x10046f84
1005b733:	call   0x10046f84
1005b738:	call   0x10046f84
1005b73d:	mov    DWORD PTR [eax+0x88],esi
1005b743:	call   0x10046f84
1005b748:	cmp    DWORD PTR [ebp+0x24],0x0
1005b74c:	mov    ecx,DWORD PTR [ebp+0x10]
1005b74f:	mov    DWORD PTR [eax+0x8c],ecx
1005b755:	push   esi
1005b756:	jne    0x1005b75d
1005b758:	push   DWORD PTR [ebp+0xc]
1005b75b:	jmp    0x1005b760
1005b75d:	push   DWORD PTR [ebp+0x24]
1005b760:	call   0x1005954d
1005b765:	mov    esi,DWORD PTR [ebp+0x18]
1005b768:	push   0xffffffff
1005b76a:	push   esi
1005b76b:	push   DWORD PTR [ebp+0x14]
1005b76e:	push   DWORD PTR [ebp+0xc]
1005b771:	call   0x1005ad07
1005b776:	add    esp,0x10
1005b779:	push   DWORD PTR [esi+0x1c]
1005b77c:	call   0x1005af1f
1005b781:	mov    ebx,DWORD PTR [ebp+0x18]
1005b784:	cmp    DWORD PTR [ebx+0xc],0x0
1005b788:	jbe    0x1005b7b0
1005b78a:	cmp    BYTE PTR [ebp+0x1c],0x0
1005b78e:	jne    0x1005b5b0
1005b794:	push   DWORD PTR [ebp+0x24]
1005b797:	push   DWORD PTR [ebp+0x20]
1005b79a:	push   DWORD PTR [ebp-0x8]
1005b79d:	push   ebx
1005b79e:	push   DWORD PTR [ebp+0x14]
1005b7a1:	push   DWORD PTR [ebp+0x10]
1005b7a4:	push   DWORD PTR [ebp+0xc]
1005b7a7:	push   esi
1005b7a8:	call   0x1005b380
1005b7ad:	add    esp,0x20
1005b7b0:	call   0x10046f84
1005b7b5:	cmp    DWORD PTR [eax+0x94],0x0
1005b7bc:	je     0x1005b7c3
1005b7be:	call   0x100479d8
1005b7c3:	pop    edi
1005b7c4:	pop    esi
1005b7c5:	pop    ebx
1005b7c6:	leave  
1005b7c7:	ret    
1005b7c8:	push   esi
1005b7c9:	push   DWORD PTR [esp+0x8]
1005b7cd:	mov    esi,ecx
1005b7cf:	call   0x10043338
1005b7d4:	mov    DWORD PTR [esi],0x1006db00
1005b7da:	mov    eax,esi
1005b7dc:	pop    esi
1005b7dd:	ret    0x4
1005b7e0:	push   ebp
1005b7e1:	mov    ebp,esp
1005b7e3:	push   ebx
1005b7e4:	push   esi
1005b7e5:	push   edi
1005b7e6:	call   0x10046f84
1005b7eb:	cmp    DWORD PTR [eax+0x20c],0x0
1005b7f2:	mov    eax,DWORD PTR [ebp+0x18]
1005b7f5:	mov    ecx,DWORD PTR [ebp+0x8]
1005b7f8:	mov    edi,0xe06d7363
1005b7fd:	mov    esi,0x1fffffff
1005b802:	mov    ebx,0x19930522
1005b807:	jne    0x1005b829
1005b809:	mov    edx,DWORD PTR [ecx]
1005b80b:	cmp    edx,edi
1005b80d:	je     0x1005b829
1005b80f:	cmp    edx,0x80000026
1005b815:	je     0x1005b829
1005b817:	mov    edx,DWORD PTR [eax]
1005b819:	and    edx,esi
1005b81b:	cmp    edx,ebx
1005b81d:	jb     0x1005b829
1005b81f:	test   BYTE PTR [eax+0x20],0x1
1005b823:	jne    0x1005b8bc
1005b829:	test   BYTE PTR [ecx+0x4],0x66
1005b82d:	je     0x1005b852
1005b82f:	cmp    DWORD PTR [eax+0x4],0x0
1005b833:	je     0x1005b8bc
1005b839:	cmp    DWORD PTR [ebp+0x1c],0x0
1005b83d:	jne    0x1005b8bc
1005b83f:	push   0xffffffff
1005b841:	push   eax
1005b842:	push   DWORD PTR [ebp+0x14]
1005b845:	push   DWORD PTR [ebp+0xc]
1005b848:	call   0x1005ad07
1005b84d:	add    esp,0x10
1005b850:	jmp    0x1005b8bc
1005b852:	cmp    DWORD PTR [eax+0xc],0x0
1005b856:	jne    0x1005b86a
1005b858:	mov    edx,DWORD PTR [eax]
1005b85a:	and    edx,esi
1005b85c:	cmp    edx,0x19930521
1005b862:	jb     0x1005b8bc
1005b864:	cmp    DWORD PTR [eax+0x1c],0x0
1005b868:	je     0x1005b8bc
1005b86a:	cmp    DWORD PTR [ecx],edi
1005b86c:	jne    0x1005b8a0
1005b86e:	cmp    DWORD PTR [ecx+0x10],0x3
1005b872:	jb     0x1005b8a0
1005b874:	cmp    DWORD PTR [ecx+0x14],ebx
1005b877:	jbe    0x1005b8a0
1005b879:	mov    edx,DWORD PTR [ecx+0x1c]
1005b87c:	mov    edx,DWORD PTR [edx+0x8]
1005b87f:	test   edx,edx
1005b881:	je     0x1005b8a0
1005b883:	movzx  esi,BYTE PTR [ebp+0x24]
1005b887:	push   esi
1005b888:	push   DWORD PTR [ebp+0x20]
1005b88b:	push   DWORD PTR [ebp+0x1c]
1005b88e:	push   eax
1005b88f:	push   DWORD PTR [ebp+0x14]
1005b892:	push   DWORD PTR [ebp+0x10]
1005b895:	push   DWORD PTR [ebp+0xc]
1005b898:	push   ecx
1005b899:	call   edx
1005b89b:	add    esp,0x20
1005b89e:	jmp    0x1005b8bf
1005b8a0:	push   DWORD PTR [ebp+0x20]
1005b8a3:	push   DWORD PTR [ebp+0x1c]
1005b8a6:	push   DWORD PTR [ebp+0x24]
1005b8a9:	push   eax
1005b8aa:	push   DWORD PTR [ebp+0x14]
1005b8ad:	push   DWORD PTR [ebp+0x10]
1005b8b0:	push   DWORD PTR [ebp+0xc]
1005b8b3:	push   ecx
1005b8b4:	call   0x1005b472
1005b8b9:	add    esp,0x20
1005b8bc:	xor    eax,eax
1005b8be:	inc    eax
1005b8bf:	pop    edi
1005b8c0:	pop    esi
1005b8c1:	pop    ebx
1005b8c2:	pop    ebp
1005b8c3:	ret    
1005b8c4:	int3   
1005b8c5:	int3   
1005b8c6:	int3   
1005b8c7:	int3   
1005b8c8:	int3   
1005b8c9:	int3   
1005b8ca:	int3   
1005b8cb:	int3   
1005b8cc:	int3   
1005b8cd:	int3   
1005b8ce:	int3   
1005b8cf:	int3   
1005b8d0:	push   ebp
1005b8d1:	mov    ebp,esp
1005b8d3:	sub    esp,0x4
1005b8d6:	push   ebx
1005b8d7:	push   ecx
1005b8d8:	mov    eax,DWORD PTR [ebp+0xc]
1005b8db:	add    eax,0xc
1005b8de:	mov    DWORD PTR [ebp-0x4],eax
1005b8e1:	mov    eax,DWORD PTR [ebp+0x8]
1005b8e4:	push   ebp
1005b8e5:	push   DWORD PTR [ebp+0x10]
1005b8e8:	mov    ecx,DWORD PTR [ebp+0x10]
1005b8eb:	mov    ebp,DWORD PTR [ebp-0x4]
1005b8ee:	call   0x1004fb40
1005b8f3:	push   esi
1005b8f4:	push   edi
1005b8f5:	call   eax
1005b8f7:	pop    edi
1005b8f8:	pop    esi
1005b8f9:	mov    ebx,ebp
1005b8fb:	pop    ebp
1005b8fc:	mov    ecx,DWORD PTR [ebp+0x10]
1005b8ff:	push   ebp
1005b900:	mov    ebp,ebx
1005b902:	cmp    ecx,0x100
1005b908:	jne    0x1005b90f
1005b90a:	mov    ecx,0x2
1005b90f:	push   ecx
1005b910:	call   0x1004fb40
1005b915:	pop    ebp
1005b916:	pop    ecx
1005b917:	pop    ebx
1005b918:	leave  
1005b919:	ret    0xc
1005b91c:	push   ebp
1005b91d:	mov    ebp,esp
1005b91f:	sub    esp,0x10
1005b922:	push   esi
1005b923:	push   DWORD PTR [ebp+0xc]
1005b926:	lea    ecx,[ebp-0x10]
1005b929:	call   0x100456a5
1005b92e:	mov    esi,DWORD PTR [ebp+0x8]
1005b931:	movsx  eax,BYTE PTR [esi]
1005b934:	push   eax
1005b935:	call   0x10045f7b
1005b93a:	cmp    eax,0x65
1005b93d:	jmp    0x1005b94b
1005b93f:	inc    esi
1005b940:	movzx  eax,BYTE PTR [esi]
1005b943:	push   eax
1005b944:	call   0x1004f56f
1005b949:	test   eax,eax
1005b94b:	pop    ecx
1005b94c:	jne    0x1005b93f
1005b94e:	movsx  eax,BYTE PTR [esi]
1005b951:	push   eax
1005b952:	call   0x10045f7b
1005b957:	cmp    eax,0x78
1005b95a:	pop    ecx
1005b95b:	jne    0x1005b95f
1005b95d:	inc    esi
1005b95e:	inc    esi
1005b95f:	mov    ecx,DWORD PTR [ebp-0x10]
1005b962:	mov    ecx,DWORD PTR [ecx+0xbc]
1005b968:	mov    ecx,DWORD PTR [ecx]
1005b96a:	mov    al,BYTE PTR [esi]
1005b96c:	mov    cl,BYTE PTR [ecx]
1005b96e:	mov    BYTE PTR [esi],cl
1005b970:	inc    esi
1005b971:	mov    cl,BYTE PTR [esi]
1005b973:	mov    BYTE PTR [esi],al
1005b975:	mov    al,cl
1005b977:	mov    cl,BYTE PTR [esi]
1005b979:	inc    esi
1005b97a:	test   cl,cl
1005b97c:	jne    0x1005b971
1005b97e:	cmp    BYTE PTR [ebp-0x4],cl
1005b981:	pop    esi
1005b982:	je     0x1005b98b
1005b984:	mov    eax,DWORD PTR [ebp-0x8]
1005b987:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b98b:	leave  
1005b98c:	ret    
1005b98d:	push   ebp
1005b98e:	mov    ebp,esp
1005b990:	sub    esp,0x10
1005b993:	push   esi
1005b994:	push   DWORD PTR [ebp+0xc]
1005b997:	lea    ecx,[ebp-0x10]
1005b99a:	call   0x100456a5
1005b99f:	mov    eax,DWORD PTR [ebp+0x8]
1005b9a2:	mov    cl,BYTE PTR [eax]
1005b9a4:	test   cl,cl
1005b9a6:	mov    esi,DWORD PTR [ebp-0x10]
1005b9a9:	je     0x1005b9c0
1005b9ab:	mov    edx,DWORD PTR [esi+0xbc]
1005b9b1:	mov    edx,DWORD PTR [edx]
1005b9b3:	mov    dl,BYTE PTR [edx]
1005b9b5:	cmp    cl,dl
1005b9b7:	je     0x1005b9c0
1005b9b9:	inc    eax
1005b9ba:	mov    cl,BYTE PTR [eax]
1005b9bc:	test   cl,cl
1005b9be:	jne    0x1005b9b5
1005b9c0:	mov    cl,BYTE PTR [eax]
1005b9c2:	inc    eax
1005b9c3:	test   cl,cl
1005b9c5:	je     0x1005b9fd
1005b9c7:	jmp    0x1005b9d4
1005b9c9:	cmp    cl,0x65
1005b9cc:	je     0x1005b9da
1005b9ce:	cmp    cl,0x45
1005b9d1:	je     0x1005b9da
1005b9d3:	inc    eax
1005b9d4:	mov    cl,BYTE PTR [eax]
1005b9d6:	test   cl,cl
1005b9d8:	jne    0x1005b9c9
1005b9da:	mov    edx,eax
1005b9dc:	dec    eax
1005b9dd:	cmp    BYTE PTR [eax],0x30
1005b9e0:	je     0x1005b9dc
1005b9e2:	mov    ecx,DWORD PTR [esi+0xbc]
1005b9e8:	mov    ecx,DWORD PTR [ecx]
1005b9ea:	push   ebx
1005b9eb:	mov    bl,BYTE PTR [eax]
1005b9ed:	cmp    bl,BYTE PTR [ecx]
1005b9ef:	pop    ebx
1005b9f0:	jne    0x1005b9f3
1005b9f2:	dec    eax
1005b9f3:	mov    cl,BYTE PTR [edx]
1005b9f5:	inc    eax
1005b9f6:	inc    edx
1005b9f7:	test   cl,cl
1005b9f9:	mov    BYTE PTR [eax],cl
1005b9fb:	jne    0x1005b9f3
1005b9fd:	cmp    BYTE PTR [ebp-0x4],0x0
1005ba01:	pop    esi
1005ba02:	je     0x1005ba0b
1005ba04:	mov    eax,DWORD PTR [ebp-0x8]
1005ba07:	and    DWORD PTR [eax+0x70],0xfffffffd
1005ba0b:	leave  
1005ba0c:	ret    
1005ba0d:	fldz   
1005ba0f:	mov    eax,DWORD PTR [esp+0x4]
1005ba13:	fcomp  QWORD PTR [eax]
1005ba15:	fnstsw ax
1005ba17:	test   ah,0x41
1005ba1a:	jp     0x1005ba20
1005ba1c:	xor    eax,eax
1005ba1e:	inc    eax
1005ba1f:	ret    
1005ba20:	xor    eax,eax
1005ba22:	ret    
1005ba23:	push   ebp
1005ba24:	mov    ebp,esp
1005ba26:	push   ecx
1005ba27:	push   ecx
1005ba28:	cmp    DWORD PTR [ebp+0x8],0x0
1005ba2c:	push   DWORD PTR [ebp+0x14]
1005ba2f:	push   DWORD PTR [ebp+0x10]
1005ba32:	je     0x1005ba4d
1005ba34:	lea    eax,[ebp-0x8]
1005ba37:	push   eax
1005ba38:	call   0x1005d2f3
1005ba3d:	mov    ecx,DWORD PTR [ebp-0x8]
1005ba40:	mov    eax,DWORD PTR [ebp+0xc]
1005ba43:	mov    DWORD PTR [eax],ecx
1005ba45:	mov    ecx,DWORD PTR [ebp-0x4]
1005ba48:	mov    DWORD PTR [eax+0x4],ecx
1005ba4b:	jmp    0x1005ba5e
1005ba4d:	lea    eax,[ebp+0x8]
1005ba50:	push   eax
1005ba51:	call   0x1005d399
1005ba56:	mov    eax,DWORD PTR [ebp+0xc]
1005ba59:	mov    ecx,DWORD PTR [ebp+0x8]
1005ba5c:	mov    DWORD PTR [eax],ecx
1005ba5e:	add    esp,0xc
1005ba61:	leave  
1005ba62:	ret    
1005ba63:	push   0x0
1005ba65:	push   DWORD PTR [esp+0x10]
1005ba69:	push   DWORD PTR [esp+0x10]
1005ba6d:	push   DWORD PTR [esp+0x10]
1005ba71:	call   0x1005ba23
1005ba76:	add    esp,0x10
1005ba79:	ret    
1005ba7a:	test   edi,edi
1005ba7c:	push   esi
1005ba7d:	mov    esi,eax
1005ba7f:	je     0x1005ba95
1005ba81:	push   esi
1005ba82:	call   0x10043450
1005ba87:	inc    eax
1005ba88:	push   eax
1005ba89:	push   esi
1005ba8a:	add    esi,edi
1005ba8c:	push   esi
1005ba8d:	call   0x10045880
1005ba92:	add    esp,0x10
1005ba95:	pop    esi
1005ba96:	ret    
1005ba97:	push   0x0
1005ba99:	push   DWORD PTR [esp+0x8]
1005ba9d:	call   0x1005b91c
1005baa2:	pop    ecx
1005baa3:	pop    ecx
1005baa4:	ret    
1005baa5:	push   0x0
1005baa7:	push   DWORD PTR [esp+0x8]
1005baab:	call   0x1005b98d
1005bab0:	pop    ecx
1005bab1:	pop    ecx
1005bab2:	ret    
1005bab3:	push   ebp
1005bab4:	mov    ebp,esp
1005bab6:	sub    esp,0x10
1005bab9:	push   ebx
1005baba:	push   esi
1005babb:	push   edi
1005babc:	push   DWORD PTR [ebp+0x1c]
1005babf:	lea    ecx,[ebp-0x10]
1005bac2:	mov    ebx,eax
1005bac4:	call   0x100456a5
1005bac9:	xor    esi,esi
1005bacb:	cmp    ebx,esi
1005bacd:	jne    0x1005bafa
1005bacf:	call   0x10046c41
1005bad4:	push   0x16
1005bad6:	pop    edi
1005bad7:	push   esi
1005bad8:	push   esi
1005bad9:	push   esi
1005bada:	push   esi
1005badb:	push   esi
1005badc:	mov    DWORD PTR [eax],edi
1005bade:	call   0x100435e1
1005bae3:	add    esp,0x14
1005bae6:	cmp    BYTE PTR [ebp-0x4],0x0
1005baea:	je     0x1005baf3
1005baec:	mov    eax,DWORD PTR [ebp-0x8]
1005baef:	and    DWORD PTR [eax+0x70],0xfffffffd
1005baf3:	mov    eax,edi
1005baf5:	jmp    0x1005bc1b
1005bafa:	cmp    DWORD PTR [ebp+0x8],esi
1005bafd:	jbe    0x1005bacf
1005baff:	cmp    DWORD PTR [ebp+0xc],esi
1005bb02:	jle    0x1005bb09
1005bb04:	mov    eax,DWORD PTR [ebp+0xc]
1005bb07:	jmp    0x1005bb0b
1005bb09:	xor    eax,eax
1005bb0b:	add    eax,0x9
1005bb0e:	cmp    DWORD PTR [ebp+0x8],eax
1005bb11:	ja     0x1005bb1c
1005bb13:	call   0x10046c41
1005bb18:	push   0x22
1005bb1a:	jmp    0x1005bad6
1005bb1c:	cmp    BYTE PTR [ebp+0x18],0x0
1005bb20:	je     0x1005bb40
1005bb22:	mov    edx,DWORD PTR [ebp+0x14]
1005bb25:	xor    eax,eax
1005bb27:	cmp    DWORD PTR [ebp+0xc],esi
1005bb2a:	setg   al
1005bb2d:	xor    ecx,ecx
1005bb2f:	cmp    DWORD PTR [edx],0x2d
1005bb32:	sete   cl
1005bb35:	mov    edi,eax
1005bb37:	add    ecx,ebx
1005bb39:	mov    eax,ecx
1005bb3b:	call   0x1005ba7a
1005bb40:	mov    edi,DWORD PTR [ebp+0x14]
1005bb43:	cmp    DWORD PTR [edi],0x2d
1005bb46:	mov    esi,ebx
1005bb48:	jne    0x1005bb50
1005bb4a:	mov    BYTE PTR [ebx],0x2d
1005bb4d:	lea    esi,[ebx+0x1]
1005bb50:	cmp    DWORD PTR [ebp+0xc],0x0
1005bb54:	jle    0x1005bb6e
1005bb56:	lea    eax,[esi+0x1]
1005bb59:	mov    cl,BYTE PTR [eax]
1005bb5b:	mov    BYTE PTR [esi],cl
1005bb5d:	mov    esi,eax
1005bb5f:	mov    eax,DWORD PTR [ebp-0x10]
1005bb62:	mov    eax,DWORD PTR [eax+0xbc]
1005bb68:	mov    eax,DWORD PTR [eax]
1005bb6a:	mov    al,BYTE PTR [eax]
1005bb6c:	mov    BYTE PTR [esi],al
1005bb6e:	xor    eax,eax
1005bb70:	cmp    BYTE PTR [ebp+0x18],al
1005bb73:	sete   al
1005bb76:	add    eax,DWORD PTR [ebp+0xc]
1005bb79:	add    esi,eax
1005bb7b:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1005bb7f:	jne    0x1005bb86
1005bb81:	or     ebx,0xffffffff
1005bb84:	jmp    0x1005bb8b
1005bb86:	sub    ebx,esi
1005bb88:	add    ebx,DWORD PTR [ebp+0x8]
1005bb8b:	push   0x1006db18
1005bb90:	push   ebx
1005bb91:	push   esi
1005bb92:	call   0x10047a20
1005bb97:	add    esp,0xc
1005bb9a:	xor    ebx,ebx
1005bb9c:	test   eax,eax
1005bb9e:	je     0x1005bbad
1005bba0:	push   ebx
1005bba1:	push   ebx
1005bba2:	push   ebx
1005bba3:	push   ebx
1005bba4:	push   ebx
1005bba5:	call   0x100434e5
1005bbaa:	add    esp,0x14
1005bbad:	cmp    DWORD PTR [ebp+0x10],ebx
1005bbb0:	lea    ecx,[esi+0x2]
1005bbb3:	je     0x1005bbb8
1005bbb5:	mov    BYTE PTR [esi],0x45
1005bbb8:	mov    eax,DWORD PTR [edi+0xc]
1005bbbb:	inc    esi
1005bbbc:	cmp    BYTE PTR [eax],0x30
1005bbbf:	je     0x1005bbef
1005bbc1:	mov    eax,DWORD PTR [edi+0x4]
1005bbc4:	dec    eax
1005bbc5:	jns    0x1005bbcc
1005bbc7:	neg    eax
1005bbc9:	mov    BYTE PTR [esi],0x2d
1005bbcc:	inc    esi
1005bbcd:	cmp    eax,0x64
1005bbd0:	jl     0x1005bbdc
1005bbd2:	cdq    
1005bbd3:	push   0x64
1005bbd5:	pop    edi
1005bbd6:	idiv   edi
1005bbd8:	add    BYTE PTR [esi],al
1005bbda:	mov    eax,edx
1005bbdc:	inc    esi
1005bbdd:	cmp    eax,0xa
1005bbe0:	jl     0x1005bbec
1005bbe2:	cdq    
1005bbe3:	push   0xa
1005bbe5:	pop    edi
1005bbe6:	idiv   edi
1005bbe8:	add    BYTE PTR [esi],al
1005bbea:	mov    eax,edx
1005bbec:	add    BYTE PTR [esi+0x1],al
1005bbef:	test   BYTE PTR ds:0x10082c58,0x1
1005bbf6:	je     0x1005bc0c
1005bbf8:	cmp    BYTE PTR [ecx],0x30
1005bbfb:	jne    0x1005bc0c
1005bbfd:	push   0x3
1005bbff:	lea    eax,[ecx+0x1]
1005bc02:	push   eax
1005bc03:	push   ecx
1005bc04:	call   0x10045880
1005bc09:	add    esp,0xc
1005bc0c:	cmp    BYTE PTR [ebp-0x4],0x0
1005bc10:	je     0x1005bc19
1005bc12:	mov    eax,DWORD PTR [ebp-0x8]
1005bc15:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc19:	xor    eax,eax
1005bc1b:	pop    edi
1005bc1c:	pop    esi
1005bc1d:	pop    ebx
1005bc1e:	leave  
1005bc1f:	ret    
1005bc20:	push   ebp
1005bc21:	mov    ebp,esp
1005bc23:	sub    esp,0x2c
1005bc26:	mov    eax,ds:0x100801ac
1005bc2b:	xor    eax,ebp
1005bc2d:	mov    DWORD PTR [ebp-0x4],eax
1005bc30:	mov    eax,DWORD PTR [ebp+0x8]
1005bc33:	push   ebx
1005bc34:	push   esi
1005bc35:	push   edi
1005bc36:	mov    edi,DWORD PTR [ebp+0xc]
1005bc39:	push   0x16
1005bc3b:	pop    esi
1005bc3c:	push   esi
1005bc3d:	lea    ecx,[ebp-0x1c]
1005bc40:	push   ecx
1005bc41:	lea    ecx,[ebp-0x2c]
1005bc44:	push   ecx
1005bc45:	push   DWORD PTR [eax+0x4]
1005bc48:	push   DWORD PTR [eax]
1005bc4a:	call   0x1005d5b7
1005bc4f:	xor    ebx,ebx
1005bc51:	add    esp,0x14
1005bc54:	cmp    edi,ebx
1005bc56:	jne    0x1005bc70
1005bc58:	call   0x10046c41
1005bc5d:	push   ebx
1005bc5e:	push   ebx
1005bc5f:	push   ebx
1005bc60:	push   ebx
1005bc61:	push   ebx
1005bc62:	mov    DWORD PTR [eax],esi
1005bc64:	call   0x100435e1
1005bc69:	add    esp,0x14
1005bc6c:	mov    eax,esi
1005bc6e:	jmp    0x1005bcdf
1005bc70:	mov    eax,DWORD PTR [ebp+0x10]
1005bc73:	cmp    eax,ebx
1005bc75:	jbe    0x1005bc58
1005bc77:	cmp    eax,0xffffffff
1005bc7a:	mov    esi,DWORD PTR [ebp+0x14]
1005bc7d:	jne    0x1005bc84
1005bc7f:	or     eax,0xffffffff
1005bc82:	jmp    0x1005bc98
1005bc84:	xor    ecx,ecx
1005bc86:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bc8a:	sete   cl
1005bc8d:	sub    eax,ecx
1005bc8f:	xor    ecx,ecx
1005bc91:	cmp    esi,ebx
1005bc93:	setg   cl
1005bc96:	sub    eax,ecx
1005bc98:	lea    ecx,[ebp-0x2c]
1005bc9b:	push   ecx
1005bc9c:	lea    ecx,[esi+0x1]
1005bc9f:	push   ecx
1005bca0:	push   eax
1005bca1:	xor    eax,eax
1005bca3:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005bca7:	sete   al
1005bcaa:	xor    ecx,ecx
1005bcac:	cmp    esi,ebx
1005bcae:	setg   cl
1005bcb1:	add    eax,edi
1005bcb3:	add    ecx,eax
1005bcb5:	push   ecx
1005bcb6:	call   0x1005d43f
1005bcbb:	add    esp,0x10
1005bcbe:	cmp    eax,ebx
1005bcc0:	je     0x1005bcc6
1005bcc2:	mov    BYTE PTR [edi],bl
1005bcc4:	jmp    0x1005bcdf
1005bcc6:	push   DWORD PTR [ebp+0x1c]
1005bcc9:	lea    eax,[ebp-0x2c]
1005bccc:	push   ebx
1005bccd:	push   eax
1005bcce:	push   DWORD PTR [ebp+0x18]
1005bcd1:	mov    eax,edi
1005bcd3:	push   esi
1005bcd4:	push   DWORD PTR [ebp+0x10]
1005bcd7:	call   0x1005bab3
1005bcdc:	add    esp,0x18
1005bcdf:	mov    ecx,DWORD PTR [ebp-0x4]
1005bce2:	pop    edi
1005bce3:	pop    esi
1005bce4:	xor    ecx,ebp
1005bce6:	pop    ebx
1005bce7:	call   0x10043615
1005bcec:	leave  
1005bced:	ret    
1005bcee:	push   ebp
1005bcef:	mov    ebp,esp
1005bcf1:	push   0x0
1005bcf3:	push   DWORD PTR [ebp+0x18]
1005bcf6:	push   DWORD PTR [ebp+0x14]
1005bcf9:	push   DWORD PTR [ebp+0x10]
1005bcfc:	push   DWORD PTR [ebp+0xc]
1005bcff:	push   DWORD PTR [ebp+0x8]
1005bd02:	call   0x1005bc20
1005bd07:	add    esp,0x18
1005bd0a:	pop    ebp
1005bd0b:	ret    
1005bd0c:	push   ebp
1005bd0d:	mov    ebp,esp
1005bd0f:	sub    esp,0x24
1005bd12:	push   esi
1005bd13:	push   edi
1005bd14:	push   DWORD PTR [ebp+0x1c]
1005bd17:	lea    ecx,[ebp-0x24]
1005bd1a:	mov    DWORD PTR [ebp-0x14],0x3ff
1005bd21:	xor    edi,edi
1005bd23:	mov    DWORD PTR [ebp-0x4],0x30
1005bd2a:	call   0x100456a5
1005bd2f:	cmp    DWORD PTR [ebp+0x14],edi
1005bd32:	jge    0x1005bd37
1005bd34:	mov    DWORD PTR [ebp+0x14],edi
1005bd37:	mov    esi,DWORD PTR [ebp+0xc]
1005bd3a:	cmp    esi,edi
1005bd3c:	jne    0x1005bd69
1005bd3e:	call   0x10046c41
1005bd43:	push   0x16
1005bd45:	pop    esi
1005bd46:	push   edi
1005bd47:	push   edi
1005bd48:	push   edi
1005bd49:	push   edi
1005bd4a:	push   edi
1005bd4b:	mov    DWORD PTR [eax],esi
1005bd4d:	call   0x100435e1
1005bd52:	add    esp,0x14
1005bd55:	cmp    BYTE PTR [ebp-0x18],0x0
1005bd59:	je     0x1005bd62
1005bd5b:	mov    eax,DWORD PTR [ebp-0x1c]
1005bd5e:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bd62:	mov    eax,esi
1005bd64:	jmp    0x1005c079
1005bd69:	cmp    DWORD PTR [ebp+0x10],edi
1005bd6c:	jbe    0x1005bd3e
1005bd6e:	mov    eax,DWORD PTR [ebp+0x14]
1005bd71:	add    eax,0xb
1005bd74:	cmp    DWORD PTR [ebp+0x10],eax
1005bd77:	mov    BYTE PTR [esi],0x0
1005bd7a:	ja     0x1005bd85
1005bd7c:	call   0x10046c41
1005bd81:	push   0x22
1005bd83:	jmp    0x1005bd45
1005bd85:	mov    edi,DWORD PTR [ebp+0x8]
1005bd88:	mov    eax,DWORD PTR [edi]
1005bd8a:	mov    DWORD PTR [ebp-0xc],eax
1005bd8d:	mov    eax,DWORD PTR [edi+0x4]
1005bd90:	mov    ecx,eax
1005bd92:	shr    ecx,0x14
1005bd95:	mov    edx,0x7ff
1005bd9a:	push   ebx
1005bd9b:	and    ecx,edx
1005bd9d:	xor    ebx,ebx
1005bd9f:	cmp    ecx,edx
1005bda1:	jne    0x1005be37
1005bda7:	test   ebx,ebx
1005bda9:	jne    0x1005be37
1005bdaf:	mov    eax,DWORD PTR [ebp+0x10]
1005bdb2:	cmp    eax,0xffffffff
1005bdb5:	jne    0x1005bdbb
1005bdb7:	or     eax,eax
1005bdb9:	jmp    0x1005bdbe
1005bdbb:	add    eax,0xfffffffe
1005bdbe:	push   0x0
1005bdc0:	push   DWORD PTR [ebp+0x14]
1005bdc3:	lea    ebx,[esi+0x2]
1005bdc6:	push   eax
1005bdc7:	push   ebx
1005bdc8:	push   edi
1005bdc9:	call   0x1005bcee
1005bdce:	add    esp,0x14
1005bdd1:	test   eax,eax
1005bdd3:	je     0x1005bdee
1005bdd5:	cmp    BYTE PTR [ebp-0x18],0x0
1005bdd9:	mov    BYTE PTR [esi],0x0
1005bddc:	je     0x1005c078
1005bde2:	mov    ecx,DWORD PTR [ebp-0x1c]
1005bde5:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005bde9:	jmp    0x1005c078
1005bdee:	cmp    BYTE PTR [ebx],0x2d
1005bdf1:	jne    0x1005bdf7
1005bdf3:	mov    BYTE PTR [esi],0x2d
1005bdf6:	inc    esi
1005bdf7:	mov    BYTE PTR [esi],0x30
1005bdfa:	inc    esi
1005bdfb:	cmp    DWORD PTR [ebp+0x18],0x0
1005bdff:	push   0x65
1005be01:	sete   al
1005be04:	dec    al
1005be06:	and    al,0xe0
1005be08:	add    al,0x78
1005be0a:	mov    BYTE PTR [esi],al
1005be0c:	inc    esi
1005be0d:	push   esi
1005be0e:	call   0x10059cc0
1005be13:	test   eax,eax
1005be15:	pop    ecx
1005be16:	pop    ecx
1005be17:	je     0x1005c069
1005be1d:	cmp    DWORD PTR [ebp+0x18],0x0
1005be21:	sete   cl
1005be24:	dec    cl
1005be26:	and    cl,0xe0
1005be29:	add    cl,0x70
1005be2c:	mov    BYTE PTR [eax],cl
1005be2e:	mov    BYTE PTR [eax+0x3],0x0
1005be32:	jmp    0x1005c069
1005be37:	and    eax,0x80000000
1005be3c:	xor    ecx,ecx
1005be3e:	or     ecx,eax
1005be40:	je     0x1005be46
1005be42:	mov    BYTE PTR [esi],0x2d
1005be45:	inc    esi
1005be46:	mov    ebx,DWORD PTR [ebp+0x18]
1005be49:	mov    BYTE PTR [esi],0x30
1005be4c:	inc    esi
1005be4d:	test   ebx,ebx
1005be4f:	sete   al
1005be52:	dec    al
1005be54:	and    al,0xe0
1005be56:	add    al,0x78
1005be58:	mov    BYTE PTR [esi],al
1005be5a:	mov    ecx,DWORD PTR [edi+0x4]
1005be5d:	inc    esi
1005be5e:	neg    ebx
1005be60:	sbb    ebx,ebx
1005be62:	and    ebx,0xffffffe0
1005be65:	and    ecx,0x7ff00000
1005be6b:	xor    eax,eax
1005be6d:	add    ebx,0x27
1005be70:	xor    edx,edx
1005be72:	or     eax,ecx
1005be74:	jne    0x1005be97
1005be76:	mov    BYTE PTR [esi],0x30
1005be79:	mov    ecx,DWORD PTR [edi+0x4]
1005be7c:	mov    eax,DWORD PTR [edi]
1005be7e:	and    ecx,0xfffff
1005be84:	inc    esi
1005be85:	or     eax,ecx
1005be87:	jne    0x1005be8e
1005be89:	mov    DWORD PTR [ebp-0x14],edx
1005be8c:	jmp    0x1005be9b
1005be8e:	mov    DWORD PTR [ebp-0x14],0x3fe
1005be95:	jmp    0x1005be9b
1005be97:	mov    BYTE PTR [esi],0x31
1005be9a:	inc    esi
1005be9b:	mov    eax,esi
1005be9d:	inc    esi
1005be9e:	cmp    DWORD PTR [ebp+0x14],edx
1005bea1:	mov    DWORD PTR [ebp+0xc],eax
1005bea4:	jne    0x1005beaa
1005bea6:	mov    BYTE PTR [eax],dl
1005bea8:	jmp    0x1005beb9
1005beaa:	mov    ecx,DWORD PTR [ebp-0x24]
1005bead:	mov    ecx,DWORD PTR [ecx+0xbc]
1005beb3:	mov    ecx,DWORD PTR [ecx]
1005beb5:	mov    cl,BYTE PTR [ecx]
1005beb7:	mov    BYTE PTR [eax],cl
1005beb9:	mov    ecx,DWORD PTR [edi+0x4]
1005bebc:	mov    eax,DWORD PTR [edi]
1005bebe:	and    ecx,0xfffff
1005bec4:	mov    DWORD PTR [ebp-0x8],ecx
1005bec7:	ja     0x1005bed1
1005bec9:	cmp    eax,edx
1005becb:	jbe    0x1005bf86
1005bed1:	mov    DWORD PTR [ebp-0xc],edx
1005bed4:	mov    DWORD PTR [ebp-0x8],0xf0000
1005bedb:	cmp    DWORD PTR [ebp+0x14],0x0
1005bedf:	jle    0x1005bf2e
1005bee1:	mov    edx,DWORD PTR [edi+0x4]
1005bee4:	and    edx,DWORD PTR [ebp-0x8]
1005bee7:	mov    eax,DWORD PTR [edi]
1005bee9:	movsx  ecx,WORD PTR [ebp-0x4]
1005beed:	and    eax,DWORD PTR [ebp-0xc]
1005bef0:	and    edx,0xfffff
1005bef6:	call   0x1005d730
1005befb:	add    ax,0x30
1005beff:	movzx  eax,ax
1005bf02:	cmp    ax,0x39
1005bf06:	jbe    0x1005bf0a
1005bf08:	add    eax,ebx
1005bf0a:	mov    ecx,DWORD PTR [ebp-0x8]
1005bf0d:	sub    DWORD PTR [ebp-0x4],0x4
1005bf11:	mov    BYTE PTR [esi],al
1005bf13:	mov    eax,DWORD PTR [ebp-0xc]
1005bf16:	shrd   eax,ecx,0x4
1005bf1a:	shr    ecx,0x4
1005bf1d:	inc    esi
1005bf1e:	dec    DWORD PTR [ebp+0x14]
1005bf21:	cmp    WORD PTR [ebp-0x4],0x0
1005bf26:	mov    DWORD PTR [ebp-0xc],eax
1005bf29:	mov    DWORD PTR [ebp-0x8],ecx
1005bf2c:	jge    0x1005bedb
1005bf2e:	cmp    WORD PTR [ebp-0x4],0x0
1005bf33:	jl     0x1005bf86
1005bf35:	mov    edx,DWORD PTR [edi+0x4]
1005bf38:	and    edx,DWORD PTR [ebp-0x8]
1005bf3b:	mov    eax,DWORD PTR [edi]
1005bf3d:	movsx  ecx,WORD PTR [ebp-0x4]
1005bf41:	and    eax,DWORD PTR [ebp-0xc]
1005bf44:	and    edx,0xfffff
1005bf4a:	call   0x1005d730
1005bf4f:	cmp    ax,0x8
1005bf53:	jbe    0x1005bf86
1005bf55:	lea    eax,[esi-0x1]
1005bf58:	mov    cl,BYTE PTR [eax]
1005bf5a:	cmp    cl,0x66
1005bf5d:	je     0x1005bf64
1005bf5f:	cmp    cl,0x46
1005bf62:	jne    0x1005bf6a
1005bf64:	mov    BYTE PTR [eax],0x30
1005bf67:	dec    eax
1005bf68:	jmp    0x1005bf58
1005bf6a:	cmp    eax,DWORD PTR [ebp+0xc]
1005bf6d:	je     0x1005bf83
1005bf6f:	mov    cl,BYTE PTR [eax]
1005bf71:	cmp    cl,0x39
1005bf74:	jne    0x1005bf7d
1005bf76:	add    bl,0x3a
1005bf79:	mov    BYTE PTR [eax],bl
1005bf7b:	jmp    0x1005bf86
1005bf7d:	inc    cl
1005bf7f:	mov    BYTE PTR [eax],cl
1005bf81:	jmp    0x1005bf86
1005bf83:	inc    BYTE PTR [eax-0x1]
1005bf86:	cmp    DWORD PTR [ebp+0x14],0x0
1005bf8a:	jle    0x1005bf9d
1005bf8c:	push   DWORD PTR [ebp+0x14]
1005bf8f:	push   0x30
1005bf91:	push   esi
1005bf92:	call   0x10045dc0
1005bf97:	add    esp,0xc
1005bf9a:	add    esi,DWORD PTR [ebp+0x14]
1005bf9d:	mov    eax,DWORD PTR [ebp+0xc]
1005bfa0:	cmp    BYTE PTR [eax],0x0
1005bfa3:	jne    0x1005bfa7
1005bfa5:	mov    esi,eax
1005bfa7:	cmp    DWORD PTR [ebp+0x18],0x0
1005bfab:	mov    cl,0x34
1005bfad:	sete   al
1005bfb0:	dec    al
1005bfb2:	and    al,0xe0
1005bfb4:	add    al,0x70
1005bfb6:	mov    BYTE PTR [esi],al
1005bfb8:	mov    eax,DWORD PTR [edi]
1005bfba:	mov    edx,DWORD PTR [edi+0x4]
1005bfbd:	inc    esi
1005bfbe:	call   0x1005d730
1005bfc3:	xor    ebx,ebx
1005bfc5:	and    eax,0x7ff
1005bfca:	and    edx,ebx
1005bfcc:	sub    eax,DWORD PTR [ebp-0x14]
1005bfcf:	push   ebx
1005bfd0:	pop    ecx
1005bfd1:	sbb    edx,ecx
1005bfd3:	js     0x1005bfe1
1005bfd5:	jg     0x1005bfdb
1005bfd7:	cmp    eax,ebx
1005bfd9:	jb     0x1005bfe1
1005bfdb:	mov    BYTE PTR [esi],0x2b
1005bfde:	inc    esi
1005bfdf:	jmp    0x1005bfeb
1005bfe1:	mov    BYTE PTR [esi],0x2d
1005bfe4:	inc    esi
1005bfe5:	neg    eax
1005bfe7:	adc    edx,ebx
1005bfe9:	neg    edx
1005bfeb:	cmp    edx,ebx
1005bfed:	mov    edi,esi
1005bfef:	mov    BYTE PTR [esi],0x30
1005bff2:	jl     0x1005c018
1005bff4:	mov    ecx,0x3e8
1005bff9:	jg     0x1005bfff
1005bffb:	cmp    eax,ecx
1005bffd:	jb     0x1005c018
1005bfff:	push   ebx
1005c000:	push   ecx
1005c001:	push   edx
1005c002:	push   eax
1005c003:	call   0x1005d650
1005c008:	add    al,0x30
1005c00a:	mov    BYTE PTR [esi],al
1005c00c:	inc    esi
1005c00d:	cmp    esi,edi
1005c00f:	mov    DWORD PTR [ebp-0x10],edx
1005c012:	mov    eax,ecx
1005c014:	mov    edx,ebx
1005c016:	jne    0x1005c023
1005c018:	test   edx,edx
1005c01a:	jl     0x1005c03a
1005c01c:	jg     0x1005c023
1005c01e:	cmp    eax,0x64
1005c021:	jb     0x1005c03a
1005c023:	push   0x0
1005c025:	push   0x64
1005c027:	push   edx
1005c028:	push   eax
1005c029:	call   0x1005d650
1005c02e:	add    al,0x30
1005c030:	mov    BYTE PTR [esi],al
1005c032:	mov    DWORD PTR [ebp-0x10],edx
1005c035:	inc    esi
1005c036:	mov    eax,ecx
1005c038:	mov    edx,ebx
1005c03a:	cmp    esi,edi
1005c03c:	jne    0x1005c049
1005c03e:	test   edx,edx
1005c040:	jl     0x1005c061
1005c042:	jg     0x1005c049
1005c044:	cmp    eax,0xa
1005c047:	jb     0x1005c061
1005c049:	push   0x0
1005c04b:	push   0xa
1005c04d:	push   edx
1005c04e:	push   eax
1005c04f:	call   0x1005d650
1005c054:	add    al,0x30
1005c056:	mov    BYTE PTR [esi],al
1005c058:	mov    DWORD PTR [ebp-0x10],edx
1005c05b:	inc    esi
1005c05c:	mov    eax,ecx
1005c05e:	mov    DWORD PTR [ebp-0x10],ebx
1005c061:	add    al,0x30
1005c063:	mov    BYTE PTR [esi],al
1005c065:	mov    BYTE PTR [esi+0x1],0x0
1005c069:	cmp    BYTE PTR [ebp-0x18],0x0
1005c06d:	je     0x1005c076
1005c06f:	mov    eax,DWORD PTR [ebp-0x1c]
1005c072:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c076:	xor    eax,eax
1005c078:	pop    ebx
1005c079:	pop    edi
1005c07a:	pop    esi
1005c07b:	leave  
1005c07c:	ret    
1005c07d:	push   ebp
1005c07e:	mov    ebp,esp
1005c080:	sub    esp,0x10
1005c083:	push   ebx
1005c084:	push   esi
1005c085:	push   edi
1005c086:	push   DWORD PTR [ebp+0x14]
1005c089:	mov    ebx,eax
1005c08b:	mov    esi,DWORD PTR [ebx+0x4]
1005c08e:	mov    edi,ecx
1005c090:	lea    ecx,[ebp-0x10]
1005c093:	dec    esi
1005c094:	call   0x100456a5
1005c099:	test   edi,edi
1005c09b:	jne    0x1005c0ca
1005c09d:	call   0x10046c41
1005c0a2:	push   0x16
1005c0a4:	pop    esi
1005c0a5:	mov    DWORD PTR [eax],esi
1005c0a7:	xor    eax,eax
1005c0a9:	push   eax
1005c0aa:	push   eax
1005c0ab:	push   eax
1005c0ac:	push   eax
1005c0ad:	push   eax
1005c0ae:	call   0x100435e1
1005c0b3:	add    esp,0x14
1005c0b6:	cmp    BYTE PTR [ebp-0x4],0x0
1005c0ba:	je     0x1005c0c3
1005c0bc:	mov    eax,DWORD PTR [ebp-0x8]
1005c0bf:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c0c3:	mov    eax,esi
1005c0c5:	jmp    0x1005c16d
1005c0ca:	cmp    DWORD PTR [ebp+0x8],0x0
1005c0ce:	jbe    0x1005c09d
1005c0d0:	cmp    BYTE PTR [ebp+0x10],0x0
1005c0d4:	je     0x1005c0ee
1005c0d6:	cmp    esi,DWORD PTR [ebp+0xc]
1005c0d9:	jne    0x1005c0ee
1005c0db:	xor    eax,eax
1005c0dd:	cmp    DWORD PTR [ebx],0x2d
1005c0e0:	sete   al
1005c0e3:	add    eax,esi
1005c0e5:	add    eax,edi
1005c0e7:	mov    BYTE PTR [eax],0x30
1005c0ea:	mov    BYTE PTR [eax+0x1],0x0
1005c0ee:	cmp    DWORD PTR [ebx],0x2d
1005c0f1:	mov    esi,edi
1005c0f3:	jne    0x1005c0fb
1005c0f5:	mov    BYTE PTR [edi],0x2d
1005c0f8:	lea    esi,[edi+0x1]
1005c0fb:	mov    eax,DWORD PTR [ebx+0x4]
1005c0fe:	xor    edi,edi
1005c100:	inc    edi
1005c101:	test   eax,eax
1005c103:	jg     0x1005c112
1005c105:	mov    eax,esi
1005c107:	call   0x1005ba7a
1005c10c:	mov    BYTE PTR [esi],0x30
1005c10f:	inc    esi
1005c110:	jmp    0x1005c114
1005c112:	add    esi,eax
1005c114:	cmp    DWORD PTR [ebp+0xc],0x0
1005c118:	jle    0x1005c15e
1005c11a:	mov    eax,esi
1005c11c:	call   0x1005ba7a
1005c121:	mov    eax,DWORD PTR [ebp-0x10]
1005c124:	mov    eax,DWORD PTR [eax+0xbc]
1005c12a:	mov    eax,DWORD PTR [eax]
1005c12c:	mov    al,BYTE PTR [eax]
1005c12e:	mov    BYTE PTR [esi],al
1005c130:	mov    ebx,DWORD PTR [ebx+0x4]
1005c133:	inc    esi
1005c134:	test   ebx,ebx
1005c136:	jge    0x1005c15e
1005c138:	neg    ebx
1005c13a:	cmp    BYTE PTR [ebp+0x10],0x0
1005c13e:	jne    0x1005c145
1005c140:	cmp    DWORD PTR [ebp+0xc],ebx
1005c143:	jl     0x1005c148
1005c145:	mov    DWORD PTR [ebp+0xc],ebx
1005c148:	mov    edi,DWORD PTR [ebp+0xc]
1005c14b:	mov    eax,esi
1005c14d:	call   0x1005ba7a
1005c152:	push   edi
1005c153:	push   0x30
1005c155:	push   esi
1005c156:	call   0x10045dc0
1005c15b:	add    esp,0xc
1005c15e:	cmp    BYTE PTR [ebp-0x4],0x0
1005c162:	je     0x1005c16b
1005c164:	mov    eax,DWORD PTR [ebp-0x8]
1005c167:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c16b:	xor    eax,eax
1005c16d:	pop    edi
1005c16e:	pop    esi
1005c16f:	pop    ebx
1005c170:	leave  
1005c171:	ret    
1005c172:	push   ebp
1005c173:	mov    ebp,esp
1005c175:	sub    esp,0x2c
1005c178:	mov    eax,ds:0x100801ac
1005c17d:	xor    eax,ebp
1005c17f:	mov    DWORD PTR [ebp-0x4],eax
1005c182:	mov    eax,DWORD PTR [ebp+0x8]
1005c185:	push   ebx
1005c186:	push   esi
1005c187:	push   edi
1005c188:	mov    edi,DWORD PTR [ebp+0xc]
1005c18b:	push   0x16
1005c18d:	pop    esi
1005c18e:	push   esi
1005c18f:	lea    ecx,[ebp-0x1c]
1005c192:	push   ecx
1005c193:	lea    ecx,[ebp-0x2c]
1005c196:	push   ecx
1005c197:	push   DWORD PTR [eax+0x4]
1005c19a:	push   DWORD PTR [eax]
1005c19c:	call   0x1005d5b7
1005c1a1:	xor    ebx,ebx
1005c1a3:	add    esp,0x14
1005c1a6:	cmp    edi,ebx
1005c1a8:	jne    0x1005c1c2
1005c1aa:	call   0x10046c41
1005c1af:	push   ebx
1005c1b0:	push   ebx
1005c1b1:	push   ebx
1005c1b2:	push   ebx
1005c1b3:	push   ebx
1005c1b4:	mov    DWORD PTR [eax],esi
1005c1b6:	call   0x100435e1
1005c1bb:	add    esp,0x14
1005c1be:	mov    eax,esi
1005c1c0:	jmp    0x1005c21c
1005c1c2:	mov    eax,DWORD PTR [ebp+0x10]
1005c1c5:	cmp    eax,ebx
1005c1c7:	jbe    0x1005c1aa
1005c1c9:	cmp    eax,0xffffffff
1005c1cc:	jne    0x1005c1d2
1005c1ce:	or     eax,eax
1005c1d0:	jmp    0x1005c1dd
1005c1d2:	xor    ecx,ecx
1005c1d4:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005c1d8:	sete   cl
1005c1db:	sub    eax,ecx
1005c1dd:	mov    esi,DWORD PTR [ebp+0x14]
1005c1e0:	lea    ecx,[ebp-0x2c]
1005c1e3:	push   ecx
1005c1e4:	mov    ecx,DWORD PTR [ebp-0x28]
1005c1e7:	add    ecx,esi
1005c1e9:	push   ecx
1005c1ea:	push   eax
1005c1eb:	xor    eax,eax
1005c1ed:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005c1f1:	sete   al
1005c1f4:	add    eax,edi
1005c1f6:	push   eax
1005c1f7:	call   0x1005d43f
1005c1fc:	add    esp,0x10
1005c1ff:	cmp    eax,ebx
1005c201:	je     0x1005c207
1005c203:	mov    BYTE PTR [edi],bl
1005c205:	jmp    0x1005c21c
1005c207:	push   DWORD PTR [ebp+0x18]
1005c20a:	lea    eax,[ebp-0x2c]
1005c20d:	push   ebx
1005c20e:	push   esi
1005c20f:	push   DWORD PTR [ebp+0x10]
1005c212:	mov    ecx,edi
1005c214:	call   0x1005c07d
1005c219:	add    esp,0x10
1005c21c:	mov    ecx,DWORD PTR [ebp-0x4]
1005c21f:	pop    edi
1005c220:	pop    esi
1005c221:	xor    ecx,ebp
1005c223:	pop    ebx
1005c224:	call   0x10043615
1005c229:	leave  
1005c22a:	ret    
1005c22b:	push   ebp
1005c22c:	mov    ebp,esp
1005c22e:	sub    esp,0x30
1005c231:	mov    eax,ds:0x100801ac
1005c236:	xor    eax,ebp
1005c238:	mov    DWORD PTR [ebp-0x4],eax
1005c23b:	mov    eax,DWORD PTR [ebp+0x8]
1005c23e:	push   ebx
1005c23f:	push   esi
1005c240:	mov    esi,DWORD PTR [ebp+0xc]
1005c243:	push   edi
1005c244:	push   0x16
1005c246:	pop    edi
1005c247:	push   edi
1005c248:	lea    ecx,[ebp-0x1c]
1005c24b:	push   ecx
1005c24c:	lea    ecx,[ebp-0x30]
1005c24f:	push   ecx
1005c250:	push   DWORD PTR [eax+0x4]
1005c253:	push   DWORD PTR [eax]
1005c255:	call   0x1005d5b7
1005c25a:	xor    ebx,ebx
1005c25c:	add    esp,0x14
1005c25f:	cmp    esi,ebx
1005c261:	jne    0x1005c27e
1005c263:	call   0x10046c41
1005c268:	push   ebx
1005c269:	push   ebx
1005c26a:	push   ebx
1005c26b:	push   ebx
1005c26c:	push   ebx
1005c26d:	mov    DWORD PTR [eax],edi
1005c26f:	call   0x100435e1
1005c274:	add    esp,0x14
1005c277:	mov    eax,edi
1005c279:	jmp    0x1005c314
1005c27e:	mov    ecx,DWORD PTR [ebp+0x10]
1005c281:	cmp    ecx,ebx
1005c283:	jbe    0x1005c263
1005c285:	mov    eax,DWORD PTR [ebp-0x2c]
1005c288:	dec    eax
1005c289:	mov    DWORD PTR [ebp-0x20],eax
1005c28c:	xor    eax,eax
1005c28e:	cmp    DWORD PTR [ebp-0x30],0x2d
1005c292:	sete   al
1005c295:	cmp    ecx,0xffffffff
1005c298:	lea    edi,[eax+esi*1]
1005c29b:	jne    0x1005c2a1
1005c29d:	or     ecx,ecx
1005c29f:	jmp    0x1005c2a3
1005c2a1:	sub    ecx,eax
1005c2a3:	lea    eax,[ebp-0x30]
1005c2a6:	push   eax
1005c2a7:	push   DWORD PTR [ebp+0x14]
1005c2aa:	push   ecx
1005c2ab:	push   edi
1005c2ac:	call   0x1005d43f
1005c2b1:	add    esp,0x10
1005c2b4:	cmp    eax,ebx
1005c2b6:	je     0x1005c2bc
1005c2b8:	mov    BYTE PTR [esi],bl
1005c2ba:	jmp    0x1005c314
1005c2bc:	mov    eax,DWORD PTR [ebp-0x2c]
1005c2bf:	dec    eax
1005c2c0:	cmp    DWORD PTR [ebp-0x20],eax
1005c2c3:	setl   cl
1005c2c6:	cmp    eax,0xfffffffc
1005c2c9:	jl     0x1005c2f8
1005c2cb:	cmp    eax,DWORD PTR [ebp+0x14]
1005c2ce:	jge    0x1005c2f8
1005c2d0:	cmp    cl,bl
1005c2d2:	je     0x1005c2de
1005c2d4:	mov    al,BYTE PTR [edi]
1005c2d6:	inc    edi
1005c2d7:	test   al,al
1005c2d9:	jne    0x1005c2d4
1005c2db:	mov    BYTE PTR [edi-0x2],bl
1005c2de:	push   DWORD PTR [ebp+0x1c]
1005c2e1:	lea    eax,[ebp-0x30]
1005c2e4:	push   0x1
1005c2e6:	push   DWORD PTR [ebp+0x14]
1005c2e9:	mov    ecx,esi
1005c2eb:	push   DWORD PTR [ebp+0x10]
1005c2ee:	call   0x1005c07d
1005c2f3:	add    esp,0x10
1005c2f6:	jmp    0x1005c314
1005c2f8:	push   DWORD PTR [ebp+0x1c]
1005c2fb:	lea    eax,[ebp-0x30]
1005c2fe:	push   0x1
1005c300:	push   eax
1005c301:	push   DWORD PTR [ebp+0x18]
1005c304:	mov    eax,esi
1005c306:	push   DWORD PTR [ebp+0x14]
1005c309:	push   DWORD PTR [ebp+0x10]
1005c30c:	call   0x1005bab3
1005c311:	add    esp,0x18
1005c314:	mov    ecx,DWORD PTR [ebp-0x4]
1005c317:	pop    edi
1005c318:	pop    esi
1005c319:	xor    ecx,ebp
1005c31b:	pop    ebx
1005c31c:	call   0x10043615
1005c321:	leave  
1005c322:	ret    
1005c323:	push   ebp
1005c324:	mov    ebp,esp
1005c326:	mov    eax,DWORD PTR [ebp+0x14]
1005c329:	cmp    eax,0x65
1005c32c:	je     0x1005c38d
1005c32e:	cmp    eax,0x45
1005c331:	je     0x1005c38d
1005c333:	cmp    eax,0x66
1005c336:	jne    0x1005c351
1005c338:	push   DWORD PTR [ebp+0x20]
1005c33b:	push   DWORD PTR [ebp+0x18]
1005c33e:	push   DWORD PTR [ebp+0x10]
1005c341:	push   DWORD PTR [ebp+0xc]
1005c344:	push   DWORD PTR [ebp+0x8]
1005c347:	call   0x1005c172
1005c34c:	add    esp,0x14
1005c34f:	pop    ebp
1005c350:	ret    
1005c351:	cmp    eax,0x61
1005c354:	je     0x1005c374
1005c356:	cmp    eax,0x41
1005c359:	je     0x1005c374
1005c35b:	push   DWORD PTR [ebp+0x20]
1005c35e:	push   DWORD PTR [ebp+0x1c]
1005c361:	push   DWORD PTR [ebp+0x18]
1005c364:	push   DWORD PTR [ebp+0x10]
1005c367:	push   DWORD PTR [ebp+0xc]
1005c36a:	push   DWORD PTR [ebp+0x8]
1005c36d:	call   0x1005c22b
1005c372:	jmp    0x1005c3a4
1005c374:	push   DWORD PTR [ebp+0x20]
1005c377:	push   DWORD PTR [ebp+0x1c]
1005c37a:	push   DWORD PTR [ebp+0x18]
1005c37d:	push   DWORD PTR [ebp+0x10]
1005c380:	push   DWORD PTR [ebp+0xc]
1005c383:	push   DWORD PTR [ebp+0x8]
1005c386:	call   0x1005bd0c
1005c38b:	jmp    0x1005c3a4
1005c38d:	push   DWORD PTR [ebp+0x20]
1005c390:	push   DWORD PTR [ebp+0x1c]
1005c393:	push   DWORD PTR [ebp+0x18]
1005c396:	push   DWORD PTR [ebp+0x10]
1005c399:	push   DWORD PTR [ebp+0xc]
1005c39c:	push   DWORD PTR [ebp+0x8]
1005c39f:	call   0x1005bc20
1005c3a4:	add    esp,0x18
1005c3a7:	pop    ebp
1005c3a8:	ret    
1005c3a9:	push   ebp
1005c3aa:	mov    ebp,esp
1005c3ac:	push   0x0
1005c3ae:	push   DWORD PTR [ebp+0x1c]
1005c3b1:	push   DWORD PTR [ebp+0x18]
1005c3b4:	push   DWORD PTR [ebp+0x14]
1005c3b7:	push   DWORD PTR [ebp+0x10]
1005c3ba:	push   DWORD PTR [ebp+0xc]
1005c3bd:	push   DWORD PTR [ebp+0x8]
1005c3c0:	call   0x1005c323
1005c3c5:	add    esp,0x1c
1005c3c8:	pop    ebp
1005c3c9:	ret    
1005c3ca:	push   esi
1005c3cb:	push   0x30000
1005c3d0:	push   0x10000
1005c3d5:	xor    esi,esi
1005c3d7:	push   esi
1005c3d8:	call   0x1005d74f
1005c3dd:	add    esp,0xc
1005c3e0:	test   eax,eax
1005c3e2:	je     0x1005c3f1
1005c3e4:	push   esi
1005c3e5:	push   esi
1005c3e6:	push   esi
1005c3e7:	push   esi
1005c3e8:	push   esi
1005c3e9:	call   0x100434e5
1005c3ee:	add    esp,0x14
1005c3f1:	pop    esi
1005c3f2:	ret    
1005c3f3:	push   ebp
1005c3f4:	mov    ebp,esp
1005c3f6:	sub    esp,0x18
1005c3f9:	fld    QWORD PTR ds:0x1006db28
1005c3ff:	fstp   QWORD PTR [ebp-0x10]
1005c402:	fld    QWORD PTR ds:0x1006db20
1005c408:	fstp   QWORD PTR [ebp-0x18]
1005c40b:	fld    QWORD PTR [ebp-0x18]
1005c40e:	fdiv   QWORD PTR [ebp-0x10]
1005c411:	fmul   QWORD PTR [ebp-0x10]
1005c414:	fsubr  QWORD PTR [ebp-0x18]
1005c417:	fstp   QWORD PTR [ebp-0x8]
1005c41a:	fld1   
1005c41c:	fcomp  QWORD PTR [ebp-0x8]
1005c41f:	fnstsw ax
1005c421:	test   ah,0x5
1005c424:	jp     0x1005c42b
1005c426:	xor    eax,eax
1005c428:	inc    eax
1005c429:	leave  
1005c42a:	ret    
1005c42b:	xor    eax,eax
1005c42d:	leave  
1005c42e:	ret    
1005c42f:	push   0x1006db4c
1005c434:	call   DWORD PTR ds:0x100671a0
1005c43a:	test   eax,eax
1005c43c:	je     0x1005c453
1005c43e:	push   0x1006db30
1005c443:	push   eax
1005c444:	call   DWORD PTR ds:0x100670e4
1005c44a:	test   eax,eax
1005c44c:	je     0x1005c453
1005c44e:	push   0x0
1005c450:	call   eax
1005c452:	ret    
1005c453:	jmp    0x1005c3f3
1005c458:	push   esi
1005c459:	mov    esi,DWORD PTR [esp+0x8]
1005c45d:	push   edi
1005c45e:	xor    edi,edi
1005c460:	cmp    esi,edi
1005c462:	jne    0x1005c481
1005c464:	call   0x10046c41
1005c469:	push   edi
1005c46a:	push   edi
1005c46b:	push   edi
1005c46c:	push   edi
1005c46d:	push   edi
1005c46e:	mov    DWORD PTR [eax],0x16
1005c474:	call   0x100435e1
1005c479:	add    esp,0x14
1005c47c:	jmp    0x1005c572
1005c481:	mov    eax,DWORD PTR [esi+0xc]
1005c484:	test   al,0x83
1005c486:	je     0x1005c572
1005c48c:	test   al,0x40
1005c48e:	jne    0x1005c572
1005c494:	test   al,0x2
1005c496:	je     0x1005c4a3
1005c498:	or     eax,0x20
1005c49b:	mov    DWORD PTR [esi+0xc],eax
1005c49e:	jmp    0x1005c572
1005c4a3:	or     eax,0x1
1005c4a6:	test   ax,0x10c
1005c4aa:	mov    DWORD PTR [esi+0xc],eax
1005c4ad:	jne    0x1005c4b8
1005c4af:	push   esi
1005c4b0:	call   0x1004d21d
1005c4b5:	pop    ecx
1005c4b6:	jmp    0x1005c4bd
1005c4b8:	mov    eax,DWORD PTR [esi+0x8]
1005c4bb:	mov    DWORD PTR [esi],eax
1005c4bd:	push   DWORD PTR [esi+0x18]
1005c4c0:	push   DWORD PTR [esi+0x8]
1005c4c3:	push   esi
1005c4c4:	call   0x1004d460
1005c4c9:	pop    ecx
1005c4ca:	push   eax
1005c4cb:	call   0x1005917e
1005c4d0:	add    esp,0xc
1005c4d3:	cmp    eax,edi
1005c4d5:	mov    DWORD PTR [esi+0x4],eax
1005c4d8:	je     0x1005c562
1005c4de:	cmp    eax,0xffffffff
1005c4e1:	je     0x1005c562
1005c4e3:	test   BYTE PTR [esi+0xc],0x82
1005c4e7:	jne    0x1005c538
1005c4e9:	push   esi
1005c4ea:	call   0x1004d460
1005c4ef:	cmp    eax,0xffffffff
1005c4f2:	pop    ecx
1005c4f3:	je     0x1005c523
1005c4f5:	push   esi
1005c4f6:	call   0x1004d460
1005c4fb:	cmp    eax,0xfffffffe
1005c4fe:	pop    ecx
1005c4ff:	je     0x1005c523
1005c501:	push   esi
1005c502:	call   0x1004d460
1005c507:	sar    eax,0x5
1005c50a:	push   esi
1005c50b:	lea    edi,[eax*4+0x100844e0]
1005c512:	call   0x1004d460
1005c517:	and    eax,0x1f
1005c51a:	pop    ecx
1005c51b:	shl    eax,0x6
1005c51e:	add    eax,DWORD PTR [edi]
1005c520:	pop    ecx
1005c521:	jmp    0x1005c528
1005c523:	mov    eax,0x100809d0
1005c528:	mov    al,BYTE PTR [eax+0x4]
1005c52b:	and    al,0x82
1005c52d:	cmp    al,0x82
1005c52f:	jne    0x1005c538
1005c531:	or     DWORD PTR [esi+0xc],0x2000
1005c538:	cmp    DWORD PTR [esi+0x18],0x200
1005c53f:	jne    0x1005c555
1005c541:	mov    eax,DWORD PTR [esi+0xc]
1005c544:	test   al,0x8
1005c546:	je     0x1005c555
1005c548:	test   ax,0x400
1005c54c:	jne    0x1005c555
1005c54e:	mov    DWORD PTR [esi+0x18],0x1000
1005c555:	mov    ecx,DWORD PTR [esi]
1005c557:	dec    DWORD PTR [esi+0x4]
1005c55a:	movzx  eax,BYTE PTR [ecx]
1005c55d:	inc    ecx
1005c55e:	mov    DWORD PTR [esi],ecx
1005c560:	jmp    0x1005c575
1005c562:	neg    eax
1005c564:	sbb    eax,eax
1005c566:	and    eax,0x10
1005c569:	add    eax,0x10
1005c56c:	or     DWORD PTR [esi+0xc],eax
1005c56f:	mov    DWORD PTR [esi+0x4],edi
1005c572:	or     eax,0xffffffff
1005c575:	pop    edi
1005c576:	pop    esi
1005c577:	ret    
1005c578:	push   ebp
1005c579:	mov    ebp,esp
1005c57b:	mov    eax,DWORD PTR [ebp+0x8]
1005c57e:	test   eax,eax
1005c580:	jne    0x1005c587
1005c582:	xor    eax,eax
1005c584:	inc    eax
1005c585:	pop    ebp
1005c586:	ret    
1005c587:	add    al,0x40
1005c589:	mov    BYTE PTR [ebp+0x8],al
1005c58c:	lea    eax,[ebp+0x8]
1005c58f:	push   eax
1005c590:	mov    BYTE PTR [ebp+0x9],0x3a
1005c594:	mov    BYTE PTR [ebp+0xa],0x5c
1005c598:	mov    BYTE PTR [ebp+0xb],0x0
1005c59c:	call   DWORD PTR ds:0x1006705c
1005c5a2:	test   eax,eax
1005c5a4:	je     0x1005c5ab
1005c5a6:	cmp    eax,0x1
1005c5a9:	jne    0x1005c582
1005c5ab:	xor    eax,eax
1005c5ad:	pop    ebp
1005c5ae:	ret    
1005c5af:	push   ebp
1005c5b0:	mov    ebp,esp
1005c5b2:	push   ecx
1005c5b3:	push   ecx
1005c5b4:	push   ebx
1005c5b5:	xor    ebx,ebx
1005c5b7:	cmp    DWORD PTR [ebp+0x8],ebx
1005c5ba:	je     0x1005c5f3
1005c5bc:	push   DWORD PTR [ebp+0x8]
1005c5bf:	call   0x1005c578
1005c5c4:	test   eax,eax
1005c5c6:	pop    ecx
1005c5c7:	jne    0x1005c5fa
1005c5c9:	call   0x10046c54
1005c5ce:	mov    DWORD PTR [eax],0xf
1005c5d4:	call   0x10046c41
1005c5d9:	push   ebx
1005c5da:	push   ebx
1005c5db:	push   ebx
1005c5dc:	push   ebx
1005c5dd:	push   ebx
1005c5de:	mov    DWORD PTR [eax],0xd
1005c5e4:	call   0x100435e1
1005c5e9:	add    esp,0x14
1005c5ec:	xor    eax,eax
1005c5ee:	jmp    0x1005c6e1
1005c5f3:	call   0x1005c95d
1005c5f8:	jmp    0x1005c5fd
1005c5fa:	mov    eax,DWORD PTR [ebp+0x8]
1005c5fd:	push   edi
1005c5fe:	mov    edi,DWORD PTR [ebp+0xc]
1005c601:	cmp    edi,ebx
1005c603:	je     0x1005c632
1005c605:	mov    ecx,DWORD PTR [ebp+0x10]
1005c608:	cmp    ecx,ebx
1005c60a:	jg     0x1005c62b
1005c60c:	call   0x10046c41
1005c611:	push   ebx
1005c612:	push   ebx
1005c613:	push   ebx
1005c614:	push   ebx
1005c615:	push   ebx
1005c616:	mov    DWORD PTR [eax],0x16
1005c61c:	call   0x100435e1
1005c621:	add    esp,0x14
1005c624:	xor    eax,eax
1005c626:	jmp    0x1005c6e0
1005c62b:	mov    DWORD PTR [ebp+0x8],ecx
1005c62e:	mov    BYTE PTR [edi],bl
1005c630:	jmp    0x1005c635
1005c632:	mov    DWORD PTR [ebp+0x8],ebx
1005c635:	cmp    eax,ebx
1005c637:	je     0x1005c64b
1005c639:	add    al,0x40
1005c63b:	mov    BYTE PTR [ebp-0x4],al
1005c63e:	mov    BYTE PTR [ebp-0x3],0x3a
1005c642:	mov    BYTE PTR [ebp-0x2],0x2e
1005c646:	mov    BYTE PTR [ebp-0x1],bl
1005c649:	jmp    0x1005c652
1005c64b:	mov    BYTE PTR [ebp-0x4],0x2e
1005c64f:	mov    BYTE PTR [ebp-0x3],bl
1005c652:	push   esi
1005c653:	mov    esi,DWORD PTR ds:0x10067058
1005c659:	lea    eax,[ebp-0x8]
1005c65c:	push   eax
1005c65d:	push   edi
1005c65e:	push   DWORD PTR [ebp+0x8]
1005c661:	lea    eax,[ebp-0x4]
1005c664:	push   eax
1005c665:	call   esi
1005c667:	cmp    eax,ebx
1005c669:	je     0x1005c6d0
1005c66b:	cmp    edi,ebx
1005c66d:	je     0x1005c683
1005c66f:	cmp    eax,DWORD PTR [ebp+0x8]
1005c672:	jl     0x1005c6cc
1005c674:	call   0x10046c41
1005c679:	mov    DWORD PTR [eax],0x22
1005c67f:	mov    BYTE PTR [edi],bl
1005c681:	jmp    0x1005c6dd
1005c683:	cmp    eax,DWORD PTR [ebp+0x10]
1005c686:	jle    0x1005c68b
1005c688:	mov    DWORD PTR [ebp+0x10],eax
1005c68b:	push   0x1
1005c68d:	push   DWORD PTR [ebp+0x10]
1005c690:	call   0x10043787
1005c695:	mov    edi,eax
1005c697:	cmp    edi,ebx
1005c699:	pop    ecx
1005c69a:	pop    ecx
1005c69b:	jne    0x1005c6b5
1005c69d:	call   0x10046c41
1005c6a2:	mov    DWORD PTR [eax],0xc
1005c6a8:	call   0x10046c54
1005c6ad:	mov    DWORD PTR [eax],0x8
1005c6b3:	jmp    0x1005c6dd
1005c6b5:	lea    eax,[ebp-0x8]
1005c6b8:	push   eax
1005c6b9:	push   edi
1005c6ba:	push   DWORD PTR [ebp+0x10]
1005c6bd:	lea    eax,[ebp-0x4]
1005c6c0:	push   eax
1005c6c1:	call   esi
1005c6c3:	cmp    eax,ebx
1005c6c5:	je     0x1005c6d0
1005c6c7:	cmp    eax,DWORD PTR [ebp+0x10]
1005c6ca:	jge    0x1005c6d0
1005c6cc:	mov    eax,edi
1005c6ce:	jmp    0x1005c6df
1005c6d0:	call   DWORD PTR ds:0x100670cc
1005c6d6:	push   eax
1005c6d7:	call   0x10046c67
1005c6dc:	pop    ecx
1005c6dd:	xor    eax,eax
1005c6df:	pop    esi
1005c6e0:	pop    edi
1005c6e1:	pop    ebx
1005c6e2:	leave  
1005c6e3:	ret    
1005c6e4:	push   0xc
1005c6e6:	push   0x10076368
1005c6eb:	call   0x1004771c
1005c6f0:	push   0x7
1005c6f2:	call   0x10047e0e
1005c6f7:	pop    ecx
1005c6f8:	and    DWORD PTR [ebp-0x4],0x0
1005c6fc:	push   DWORD PTR [ebp+0xc]
1005c6ff:	push   DWORD PTR [ebp+0x8]
1005c702:	push   0x0
1005c704:	call   0x1005c5af
1005c709:	add    esp,0xc
1005c70c:	mov    DWORD PTR [ebp-0x1c],eax
1005c70f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005c716:	call   0x1005c724
1005c71b:	mov    eax,DWORD PTR [ebp-0x1c]
1005c71e:	call   0x10047761
1005c723:	ret    
1005c724:	push   0x7
1005c726:	call   0x10047d36
1005c72b:	pop    ecx
1005c72c:	ret    
1005c72d:	int3   
1005c72e:	int3   
1005c72f:	int3   
1005c730:	push   ebp
1005c731:	mov    ebp,esp
1005c733:	sub    esp,0x14
1005c736:	push   esi
1005c737:	push   DWORD PTR [ebp+0x10]
1005c73a:	lea    ecx,[ebp-0x14]
1005c73d:	call   0x100456a5
1005c742:	mov    edx,DWORD PTR [ebp+0x8]
1005c745:	xor    esi,esi
1005c747:	cmp    edx,esi
1005c749:	jne    0x1005c77a
1005c74b:	call   0x10046c41
1005c750:	push   esi
1005c751:	push   esi
1005c752:	push   esi
1005c753:	push   esi
1005c754:	push   esi
1005c755:	mov    DWORD PTR [eax],0x16
1005c75b:	call   0x100435e1
1005c760:	add    esp,0x14
1005c763:	cmp    BYTE PTR [ebp-0x8],0x0
1005c767:	je     0x1005c770
1005c769:	mov    eax,DWORD PTR [ebp-0xc]
1005c76c:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c770:	mov    eax,0x7fffffff
1005c775:	jmp    0x1005c947
1005c77a:	push   ebx
1005c77b:	mov    ebx,DWORD PTR [ebp+0xc]
1005c77e:	cmp    ebx,esi
1005c780:	jne    0x1005c7b1
1005c782:	call   0x10046c41
1005c787:	push   esi
1005c788:	push   esi
1005c789:	push   esi
1005c78a:	push   esi
1005c78b:	push   esi
1005c78c:	mov    DWORD PTR [eax],0x16
1005c792:	call   0x100435e1
1005c797:	add    esp,0x14
1005c79a:	cmp    BYTE PTR [ebp-0x8],0x0
1005c79e:	je     0x1005c7a7
1005c7a0:	mov    eax,DWORD PTR [ebp-0xc]
1005c7a3:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c7a7:	mov    eax,0x7fffffff
1005c7ac:	jmp    0x1005c946
1005c7b1:	mov    eax,DWORD PTR [ebp-0x10]
1005c7b4:	cmp    DWORD PTR [eax+0x8],esi
1005c7b7:	jne    0x1005c7dd
1005c7b9:	lea    eax,[ebp-0x14]
1005c7bc:	push   eax
1005c7bd:	push   ebx
1005c7be:	push   edx
1005c7bf:	call   0x1004575c
1005c7c4:	add    esp,0xc
1005c7c7:	cmp    BYTE PTR [ebp-0x8],0x0
1005c7cb:	je     0x1005c946
1005c7d1:	mov    ecx,DWORD PTR [ebp-0xc]
1005c7d4:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c7d8:	jmp    0x1005c946
1005c7dd:	push   edi
1005c7de:	mov    edi,0x200
1005c7e3:	movzx  cx,BYTE PTR [edx]
1005c7e7:	movzx  ecx,cx
1005c7ea:	movzx  esi,cl
1005c7ed:	inc    edx
1005c7ee:	test   BYTE PTR [esi+eax*1+0x1d],0x4
1005c7f3:	mov    DWORD PTR [ebp+0x8],edx
1005c7f6:	je     0x1005c851
1005c7f8:	cmp    BYTE PTR [edx],0x0
1005c7fb:	jne    0x1005c801
1005c7fd:	xor    esi,esi
1005c7ff:	jmp    0x1005c86d
1005c801:	push   0x1
1005c803:	push   DWORD PTR [eax+0x4]
1005c806:	lea    ecx,[ebp-0x4]
1005c809:	push   0x2
1005c80b:	push   ecx
1005c80c:	push   0x2
1005c80e:	dec    edx
1005c80f:	push   edx
1005c810:	push   edi
1005c811:	push   DWORD PTR [eax+0xc]
1005c814:	lea    eax,[ebp-0x14]
1005c817:	push   eax
1005c818:	call   0x1004b2e8
1005c81d:	add    esp,0x24
1005c820:	cmp    eax,0x1
1005c823:	jne    0x1005c82c
1005c825:	movzx  ax,BYTE PTR [ebp-0x4]
1005c82a:	jmp    0x1005c846
1005c82c:	cmp    eax,0x2
1005c82f:	jne    0x1005c902
1005c835:	movzx  ax,BYTE PTR [ebp-0x4]
1005c83a:	movzx  cx,BYTE PTR [ebp-0x3]
1005c83f:	shl    ax,0x8
1005c843:	add    ax,cx
1005c846:	inc    DWORD PTR [ebp+0x8]
1005c849:	movzx  esi,ax
1005c84c:	mov    eax,DWORD PTR [ebp-0x10]
1005c84f:	jmp    0x1005c86d
1005c851:	movzx  edx,cx
1005c854:	lea    ecx,[edx+eax*1]
1005c857:	test   BYTE PTR [ecx+0x1d],0x10
1005c85b:	je     0x1005c86a
1005c85d:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c865:	movzx  esi,cx
1005c868:	jmp    0x1005c86d
1005c86a:	movzx  esi,dx
1005c86d:	movzx  cx,BYTE PTR [ebx]
1005c871:	movzx  ecx,cx
1005c874:	movzx  edx,cl
1005c877:	inc    ebx
1005c878:	test   BYTE PTR [edx+eax*1+0x1d],0x4
1005c87d:	je     0x1005c8d4
1005c87f:	cmp    BYTE PTR [ebx],0x0
1005c882:	jne    0x1005c888
1005c884:	xor    ecx,ecx
1005c886:	jmp    0x1005c8f0
1005c888:	push   0x1
1005c88a:	push   DWORD PTR [eax+0x4]
1005c88d:	lea    ecx,[ebp-0x4]
1005c890:	push   0x2
1005c892:	push   ecx
1005c893:	push   0x2
1005c895:	lea    ecx,[ebx-0x1]
1005c898:	push   ecx
1005c899:	push   edi
1005c89a:	push   DWORD PTR [eax+0xc]
1005c89d:	lea    eax,[ebp-0x14]
1005c8a0:	push   eax
1005c8a1:	call   0x1004b2e8
1005c8a6:	add    esp,0x24
1005c8a9:	cmp    eax,0x1
1005c8ac:	jne    0x1005c8b5
1005c8ae:	movzx  ax,BYTE PTR [ebp-0x4]
1005c8b3:	jmp    0x1005c8cb
1005c8b5:	cmp    eax,0x2
1005c8b8:	jne    0x1005c902
1005c8ba:	movzx  ax,BYTE PTR [ebp-0x4]
1005c8bf:	movzx  cx,BYTE PTR [ebp-0x3]
1005c8c4:	shl    ax,0x8
1005c8c8:	add    ax,cx
1005c8cb:	movzx  ecx,ax
1005c8ce:	mov    eax,DWORD PTR [ebp-0x10]
1005c8d1:	inc    ebx
1005c8d2:	jmp    0x1005c8f0
1005c8d4:	movzx  edx,cx
1005c8d7:	lea    ecx,[edx+eax*1]
1005c8da:	test   BYTE PTR [ecx+0x1d],0x10
1005c8de:	je     0x1005c8ed
1005c8e0:	movzx  cx,BYTE PTR [ecx+0x11d]
1005c8e8:	movzx  ecx,cx
1005c8eb:	jmp    0x1005c8f0
1005c8ed:	movzx  ecx,dx
1005c8f0:	cmp    cx,si
1005c8f3:	jne    0x1005c921
1005c8f5:	test   si,si
1005c8f8:	je     0x1005c936
1005c8fa:	mov    edx,DWORD PTR [ebp+0x8]
1005c8fd:	jmp    0x1005c7e3
1005c902:	call   0x10046c41
1005c907:	mov    DWORD PTR [eax],0x16
1005c90d:	cmp    BYTE PTR [ebp-0x8],0x0
1005c911:	je     0x1005c91a
1005c913:	mov    eax,DWORD PTR [ebp-0xc]
1005c916:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c91a:	mov    eax,0x7fffffff
1005c91f:	jmp    0x1005c945
1005c921:	sbb    eax,eax
1005c923:	and    eax,0x2
1005c926:	dec    eax
1005c927:	cmp    BYTE PTR [ebp-0x8],0x0
1005c92b:	je     0x1005c945
1005c92d:	mov    ecx,DWORD PTR [ebp-0xc]
1005c930:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005c934:	jmp    0x1005c945
1005c936:	cmp    BYTE PTR [ebp-0x8],0x0
1005c93a:	je     0x1005c943
1005c93c:	mov    eax,DWORD PTR [ebp-0xc]
1005c93f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005c943:	xor    eax,eax
1005c945:	pop    edi
1005c946:	pop    ebx
1005c947:	pop    esi
1005c948:	leave  
1005c949:	ret    
1005c94a:	push   0x0
1005c94c:	push   DWORD PTR [esp+0xc]
1005c950:	push   DWORD PTR [esp+0xc]
1005c954:	call   0x1005c730
1005c959:	add    esp,0xc
1005c95c:	ret    
1005c95d:	push   ebp
1005c95e:	lea    ebp,[esp-0x94]
1005c965:	sub    esp,0x114
1005c96b:	mov    eax,ds:0x100801ac
1005c970:	xor    eax,ebp
1005c972:	mov    DWORD PTR [ebp+0x90],eax
1005c978:	and    DWORD PTR [ebp-0x7c],0x0
1005c97c:	push   ebx
1005c97d:	push   esi
1005c97e:	push   edi
1005c97f:	mov    edi,DWORD PTR ds:0x1006706c
1005c985:	lea    ebx,[ebp-0x78]
1005c988:	mov    eax,ebx
1005c98a:	push   eax
1005c98b:	push   0x105
1005c990:	call   edi
1005c992:	mov    esi,eax
1005c994:	cmp    esi,0x104
1005c99a:	jle    0x1005c9d4
1005c99c:	lea    eax,[esi+0x1]
1005c99f:	push   0x1
1005c9a1:	push   eax
1005c9a2:	mov    DWORD PTR [ebp-0x80],eax
1005c9a5:	call   0x100472ea
1005c9aa:	mov    ebx,eax
1005c9ac:	test   ebx,ebx
1005c9ae:	pop    ecx
1005c9af:	pop    ecx
1005c9b0:	jne    0x1005c9c1
1005c9b2:	call   0x10046c41
1005c9b7:	mov    DWORD PTR [eax],0xc
1005c9bd:	xor    esi,esi
1005c9bf:	jmp    0x1005c9d4
1005c9c1:	test   esi,esi
1005c9c3:	mov    DWORD PTR [ebp-0x7c],0x1
1005c9ca:	je     0x1005c9d4
1005c9cc:	push   ebx
1005c9cd:	push   DWORD PTR [ebp-0x80]
1005c9d0:	call   edi
1005c9d2:	mov    esi,eax
1005c9d4:	xor    edi,edi
1005c9d6:	test   esi,esi
1005c9d8:	je     0x1005c9f1
1005c9da:	cmp    BYTE PTR [ebx+0x1],0x3a
1005c9de:	jne    0x1005c9fc
1005c9e0:	movzx  eax,BYTE PTR [ebx]
1005c9e3:	push   eax
1005c9e4:	call   0x1005876f
1005c9e9:	mov    edi,eax
1005c9eb:	pop    ecx
1005c9ec:	sub    edi,0x40
1005c9ef:	jmp    0x1005c9fc
1005c9f1:	call   0x10046c41
1005c9f6:	mov    DWORD PTR [eax],0xc
1005c9fc:	cmp    DWORD PTR [ebp-0x7c],0x0
1005ca00:	je     0x1005ca09
1005ca02:	push   ebx
1005ca03:	call   0x100437dc
1005ca08:	pop    ecx
1005ca09:	mov    ecx,DWORD PTR [ebp+0x90]
1005ca0f:	mov    eax,edi
1005ca11:	pop    edi
1005ca12:	pop    esi
1005ca13:	xor    ecx,ebp
1005ca15:	pop    ebx
1005ca16:	call   0x10043615
1005ca1b:	add    ebp,0x94
1005ca21:	leave  
1005ca22:	ret    
1005ca23:	push   esi
1005ca24:	mov    esi,DWORD PTR [esp+0x8]
1005ca28:	cmp    DWORD PTR [esi],0xe06d7363
1005ca2e:	jne    0x1005ca55
1005ca30:	cmp    DWORD PTR ds:0x1006daf8,0x0
1005ca37:	je     0x1005ca55
1005ca39:	push   0x1006daf8
1005ca3e:	call   0x1004c480
1005ca43:	test   eax,eax
1005ca45:	pop    ecx
1005ca46:	je     0x1005ca55
1005ca48:	push   DWORD PTR [esp+0xc]
1005ca4c:	push   esi
1005ca4d:	call   DWORD PTR ds:0x1006daf8
1005ca53:	pop    ecx
1005ca54:	pop    ecx
1005ca55:	pop    esi
1005ca56:	ret    
1005ca57:	int3   
1005ca58:	int3   
1005ca59:	int3   
1005ca5a:	int3   
1005ca5b:	int3   
1005ca5c:	int3   
1005ca5d:	int3   
1005ca5e:	int3   
1005ca5f:	int3   
1005ca60:	push   ebx
1005ca61:	push   ebp
1005ca62:	mov    ebp,DWORD PTR [esp+0xc]
1005ca66:	xor    eax,eax
1005ca68:	or     edx,0xffffffff
1005ca6b:	cmp    ecx,0xffffffff
1005ca6e:	push   esi
1005ca6f:	je     0x1005cb02
1005ca75:	lea    ecx,[ecx+ecx*2]
1005ca78:	mov    esi,DWORD PTR [ebp+ecx*4+0x8]
1005ca7c:	lea    ebx,[ebp+ecx*4+0x0]
1005ca80:	sub    esi,edi
1005ca82:	and    esi,0xfffff000
1005ca88:	cmp    esi,edx
1005ca8a:	je     0x1005cab9
1005ca8c:	test   eax,eax
1005ca8e:	je     0x1005caa0
1005ca90:	mov    ecx,DWORD PTR [eax+0xc]
1005ca93:	cmp    esi,ecx
1005ca95:	jb     0x1005caa0
1005ca97:	mov    edx,DWORD PTR [eax+0x8]
1005ca9a:	add    edx,ecx
1005ca9c:	cmp    esi,edx
1005ca9e:	jb     0x1005cab7
1005caa0:	push   esi
1005caa1:	push   edi
1005caa2:	call   0x1004c430
1005caa7:	add    esp,0x8
1005caaa:	test   eax,eax
1005caac:	je     0x1005cb0b
1005caae:	test   DWORD PTR [eax+0x24],0x20000000
1005cab5:	je     0x1005cb0b
1005cab7:	mov    edx,esi
1005cab9:	mov    ecx,DWORD PTR [ebx+0x4]
1005cabc:	test   ecx,ecx
1005cabe:	je     0x1005caf7
1005cac0:	sub    ecx,edi
1005cac2:	and    ecx,0xfffff000
1005cac8:	mov    esi,ecx
1005caca:	cmp    esi,edx
1005cacc:	je     0x1005caf7
1005cace:	mov    ecx,DWORD PTR [eax+0xc]
1005cad1:	cmp    esi,ecx
1005cad3:	jb     0x1005cade
1005cad5:	mov    edx,DWORD PTR [eax+0x8]
1005cad8:	add    edx,ecx
1005cada:	cmp    esi,edx
1005cadc:	jb     0x1005caf5
1005cade:	push   esi
1005cadf:	push   edi
1005cae0:	call   0x1004c430
1005cae5:	add    esp,0x8
1005cae8:	test   eax,eax
1005caea:	je     0x1005cb0b
1005caec:	test   DWORD PTR [eax+0x24],0x20000000
1005caf3:	je     0x1005cb0b
1005caf5:	mov    edx,esi
1005caf7:	mov    ecx,DWORD PTR [ebx]
1005caf9:	cmp    ecx,0xffffffff
1005cafc:	jne    0x1005ca75
1005cb02:	pop    esi
1005cb03:	pop    ebp
1005cb04:	mov    eax,0x1
1005cb09:	pop    ebx
1005cb0a:	ret    
1005cb0b:	pop    esi
1005cb0c:	pop    ebp
1005cb0d:	xor    eax,eax
1005cb0f:	pop    ebx
1005cb10:	ret    
1005cb11:	int3   
1005cb12:	int3   
1005cb13:	int3   
1005cb14:	int3   
1005cb15:	int3   
1005cb16:	int3   
1005cb17:	int3   
1005cb18:	int3   
1005cb19:	int3   
1005cb1a:	int3   
1005cb1b:	int3   
1005cb1c:	int3   
1005cb1d:	int3   
1005cb1e:	int3   
1005cb1f:	int3   
1005cb20:	push   ebp
1005cb21:	mov    ebp,esp
1005cb23:	push   0xfffffffe
1005cb25:	push   0x10076388
1005cb2a:	push   0x10047780
1005cb2f:	mov    eax,fs:0x0
1005cb35:	push   eax
1005cb36:	sub    esp,0x30
1005cb39:	push   ebx
1005cb3a:	push   esi
1005cb3b:	push   edi
1005cb3c:	mov    eax,ds:0x100801ac
1005cb41:	xor    DWORD PTR [ebp-0x8],eax
1005cb44:	xor    eax,ebp
1005cb46:	push   eax
1005cb47:	lea    eax,[ebp-0x10]
1005cb4a:	mov    fs:0x0,eax
1005cb50:	mov    DWORD PTR [ebp-0x18],esp
1005cb53:	mov    esi,DWORD PTR [ebp+0x8]
1005cb56:	mov    edx,DWORD PTR [esi+0x8]
1005cb59:	mov    DWORD PTR [ebp-0x1c],edx
1005cb5c:	test   dl,0x3
1005cb5f:	je     0x1005cb75
1005cb61:	xor    eax,eax
1005cb63:	mov    ecx,DWORD PTR [ebp-0x10]
1005cb66:	mov    DWORD PTR fs:0x0,ecx
1005cb6d:	pop    ecx
1005cb6e:	pop    edi
1005cb6f:	pop    esi
1005cb70:	pop    ebx
1005cb71:	mov    esp,ebp
1005cb73:	pop    ebp
1005cb74:	ret    
1005cb75:	mov    eax,fs:0x18
1005cb7b:	mov    ecx,DWORD PTR [eax+0x8]
1005cb7e:	mov    DWORD PTR [ebp-0x20],ecx
1005cb81:	cmp    edx,ecx
1005cb83:	jb     0x1005cb8a
1005cb85:	cmp    edx,DWORD PTR [eax+0x4]
1005cb88:	jb     0x1005cb61
1005cb8a:	mov    edi,DWORD PTR [esi+0xc]
1005cb8d:	mov    DWORD PTR [ebp-0x24],edi
1005cb90:	cmp    edi,0xffffffff
1005cb93:	je     0x1005ceab
1005cb99:	xor    ebx,ebx
1005cb9b:	xor    eax,eax
1005cb9d:	mov    ecx,edx
1005cb9f:	nop
1005cba0:	mov    esi,DWORD PTR [ecx]
1005cba2:	cmp    esi,0xffffffff
1005cba5:	je     0x1005cbab
1005cba7:	cmp    esi,eax
1005cba9:	jae    0x1005cb61
1005cbab:	cmp    DWORD PTR [ecx+0x4],0x0
1005cbaf:	je     0x1005cbb6
1005cbb1:	mov    ebx,0x1
1005cbb6:	add    eax,0x1
1005cbb9:	add    ecx,0xc
1005cbbc:	cmp    eax,edi
1005cbbe:	jbe    0x1005cba0
1005cbc0:	test   ebx,ebx
1005cbc2:	je     0x1005cbd3
1005cbc4:	mov    ecx,DWORD PTR [ebp+0x8]
1005cbc7:	mov    eax,DWORD PTR [ecx-0x8]
1005cbca:	cmp    eax,DWORD PTR [ebp-0x20]
1005cbcd:	jb     0x1005cb61
1005cbcf:	cmp    eax,ecx
1005cbd1:	jae    0x1005cb61
1005cbd3:	mov    eax,edx
1005cbd5:	and    eax,0xfffff000
1005cbda:	mov    DWORD PTR [ebp-0x20],eax
1005cbdd:	xor    esi,esi
1005cbdf:	mov    eax,ds:0x10082b30
1005cbe4:	cmp    esi,eax
1005cbe6:	jge    0x1005cd2d
1005cbec:	mov    ebx,DWORD PTR [esi*8+0x10082b38]
1005cbf3:	mov    edi,DWORD PTR [esi*8+0x10082b3c]
1005cbfa:	cmp    ebx,DWORD PTR [ebp-0x20]
1005cbfd:	jne    0x1005cd81
1005cc03:	mov    DWORD PTR [ebp-0x4],0x0
1005cc0a:	push   edi
1005cc0b:	call   0x1004c400
1005cc10:	add    esp,0x4
1005cc13:	test   eax,eax
1005cc15:	je     0x1005cd23
1005cc1b:	mov    eax,DWORD PTR [ebp-0x1c]
1005cc1e:	push   eax
1005cc1f:	mov    ecx,DWORD PTR [ebp-0x24]
1005cc22:	call   0x1005ca60
1005cc27:	add    esp,0x4
1005cc2a:	test   eax,eax
1005cc2c:	je     0x1005cd23
1005cc32:	mov    ecx,DWORD PTR [ebp+0x8]
1005cc35:	mov    edx,DWORD PTR [ecx+0x4]
1005cc38:	sub    edx,edi
1005cc3a:	push   edx
1005cc3b:	push   edi
1005cc3c:	call   0x1004c430
1005cc41:	add    esp,0x8
1005cc44:	test   eax,eax
1005cc46:	je     0x1005cd23
1005cc4c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005cc53:	test   esi,esi
1005cc55:	jle    0x1005ceab
1005cc5b:	mov    eax,0x1
1005cc60:	mov    ecx,0x10082bb8
1005cc65:	xchg   DWORD PTR [ecx],eax
1005cc67:	test   eax,eax
1005cc69:	jne    0x1005ceab
1005cc6f:	mov    eax,DWORD PTR [ebp-0x20]
1005cc72:	cmp    DWORD PTR [esi*8+0x10082b38],eax
1005cc79:	je     0x1005ccc3
1005cc7b:	mov    ecx,DWORD PTR ds:0x10082b30
1005cc81:	lea    esi,[ecx-0x1]
1005cc84:	test   esi,esi
1005cc86:	jl     0x1005ccb2
1005cc88:	jmp    0x1005cc90
1005cc8a:	lea    ebx,[ebx+0x0]
1005cc90:	cmp    DWORD PTR [esi*8+0x10082b38],eax
1005cc97:	je     0x1005cca0
1005cc99:	sub    esi,0x1
1005cc9c:	jns    0x1005cc90
1005cc9e:	jmp    0x1005ccae
1005cca0:	mov    ebx,DWORD PTR [esi*8+0x10082b38]
1005cca7:	mov    edi,DWORD PTR [esi*8+0x10082b3c]
1005ccae:	test   esi,esi
1005ccb0:	jge    0x1005ccc5
1005ccb2:	cmp    ecx,0x10
1005ccb5:	jge    0x1005ccc0
1005ccb7:	add    ecx,0x1
1005ccba:	mov    DWORD PTR ds:0x10082b30,ecx
1005ccc0:	lea    esi,[ecx-0x1]
1005ccc3:	test   esi,esi
1005ccc5:	jle    0x1005cea2
1005cccb:	xor    eax,eax
1005cccd:	test   esi,esi
1005cccf:	jl     0x1005cea2
1005ccd5:	jmp    0x1005cce0
1005ccd7:	lea    esp,[esp+0x0]
1005ccde:	mov    edi,edi
1005cce0:	mov    ecx,DWORD PTR [eax*8+0x10082b38]
1005cce7:	mov    edx,DWORD PTR [eax*8+0x10082b3c]
1005ccee:	mov    DWORD PTR [eax*8+0x10082b38],ebx
1005ccf5:	mov    DWORD PTR [eax*8+0x10082b3c],edi
1005ccfc:	mov    ebx,ecx
1005ccfe:	mov    edi,edx
1005cd00:	add    eax,0x1
1005cd03:	cmp    eax,esi
1005cd05:	jle    0x1005cce0
1005cd07:	jmp    0x1005cea2
1005cd0c:	mov    ecx,DWORD PTR [ebp-0x14]
1005cd0f:	mov    edx,DWORD PTR [ecx]
1005cd11:	mov    eax,DWORD PTR [edx]
1005cd13:	xor    ecx,ecx
1005cd15:	cmp    eax,0xc0000005
1005cd1a:	sete   cl
1005cd1d:	mov    eax,ecx
1005cd1f:	ret    
1005cd20:	mov    esp,DWORD PTR [ebp-0x18]
1005cd23:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005cd2a:	mov    edx,DWORD PTR [ebp-0x1c]
1005cd2d:	push   0x1c
1005cd2f:	lea    eax,[ebp-0x40]
1005cd32:	push   eax
1005cd33:	push   edx
1005cd34:	call   DWORD PTR ds:0x10067100
1005cd3a:	test   eax,eax
1005cd3c:	je     0x1005ceab
1005cd42:	mov    eax,DWORD PTR [ebp-0x28]
1005cd45:	cmp    eax,0x1000000
1005cd4a:	je     0x1005cdb0
1005cd4c:	cmp    eax,0x20000
1005cd51:	jne    0x1005cd9b
1005cd53:	cmp    DWORD PTR ds:0x10082b34,0x0
1005cd5a:	jne    0x1005cd92
1005cd5c:	mov    DWORD PTR ds:0x10082bc0,0x94
1005cd66:	push   0x10082bc0
1005cd6b:	call   DWORD PTR ds:0x100671b0
1005cd71:	test   eax,eax
1005cd73:	je     0x1005cd89
1005cd75:	mov    DWORD PTR ds:0x10082b34,0x1
1005cd7f:	jmp    0x1005cd92
1005cd81:	add    esi,0x1
1005cd84:	jmp    0x1005cbe4
1005cd89:	cmp    DWORD PTR ds:0x10082b34,0x0
1005cd90:	je     0x1005cdb0
1005cd92:	cmp    DWORD PTR ds:0x10082bd0,0x1
1005cd99:	je     0x1005cdb0
1005cd9b:	or     eax,0xffffffff
1005cd9e:	mov    ecx,DWORD PTR [ebp-0x10]
1005cda1:	mov    DWORD PTR fs:0x0,ecx
1005cda8:	pop    ecx
1005cda9:	pop    edi
1005cdaa:	pop    esi
1005cdab:	pop    ebx
1005cdac:	mov    esp,ebp
1005cdae:	pop    ebp
1005cdaf:	ret    
1005cdb0:	mov    edi,DWORD PTR [ebp-0x3c]
1005cdb3:	push   edi
1005cdb4:	call   0x1004c400
1005cdb9:	add    esp,0x4
1005cdbc:	test   eax,eax
1005cdbe:	je     0x1005cd9b
1005cdc0:	test   BYTE PTR [ebp-0x2c],0xcc
1005cdc4:	je     0x1005cdea
1005cdc6:	mov    ecx,DWORD PTR [ebp-0x1c]
1005cdc9:	sub    ecx,edi
1005cdcb:	push   ecx
1005cdcc:	push   edi
1005cdcd:	call   0x1004c430
1005cdd2:	add    esp,0x8
1005cdd5:	test   eax,eax
1005cdd7:	je     0x1005cb61
1005cddd:	test   DWORD PTR [eax+0x24],0x80000000
1005cde4:	jne    0x1005cb61
1005cdea:	mov    edx,DWORD PTR [ebp-0x1c]
1005cded:	push   edx
1005cdee:	mov    ecx,DWORD PTR [ebp-0x24]
1005cdf1:	call   0x1005ca60
1005cdf6:	add    esp,0x4
1005cdf9:	test   eax,eax
1005cdfb:	je     0x1005cb61
1005ce01:	mov    eax,DWORD PTR [ebp+0x8]
1005ce04:	mov    ecx,DWORD PTR [eax+0x4]
1005ce07:	sub    ecx,edi
1005ce09:	push   ecx
1005ce0a:	push   edi
1005ce0b:	call   0x1004c430
1005ce10:	add    esp,0x8
1005ce13:	test   eax,eax
1005ce15:	je     0x1005cb61
1005ce1b:	mov    edx,0x1
1005ce20:	mov    eax,0x10082bb8
1005ce25:	xchg   DWORD PTR [eax],edx
1005ce27:	test   edx,edx
1005ce29:	jne    0x1005ceab
1005ce2f:	mov    esi,DWORD PTR ds:0x10082b30
1005ce35:	mov    eax,esi
1005ce37:	mov    ecx,DWORD PTR [ebp-0x20]
1005ce3a:	test   esi,esi
1005ce3c:	jle    0x1005ce53
1005ce3e:	lea    edx,[esi*8+0x10082b30]
1005ce45:	cmp    DWORD PTR [edx],ecx
1005ce47:	je     0x1005ce53
1005ce49:	sub    eax,0x1
1005ce4c:	sub    edx,0x8
1005ce4f:	test   eax,eax
1005ce51:	jg     0x1005ce45
1005ce53:	test   eax,eax
1005ce55:	jne    0x1005ce98
1005ce57:	cmp    esi,0xf
1005ce5a:	jle    0x1005ce61
1005ce5c:	mov    esi,0xf
1005ce61:	mov    edx,DWORD PTR [ebp-0x3c]
1005ce64:	test   esi,esi
1005ce66:	jl     0x1005ce86
1005ce68:	mov    eax,0x10082b38
1005ce6d:	lea    ebx,[esi+0x1]
1005ce70:	mov    esi,DWORD PTR [eax]
1005ce72:	mov    edi,DWORD PTR [eax+0x4]
1005ce75:	mov    DWORD PTR [eax],ecx
1005ce77:	mov    DWORD PTR [eax+0x4],edx
1005ce7a:	mov    ecx,esi
1005ce7c:	mov    edx,edi
1005ce7e:	add    eax,0x8
1005ce81:	sub    ebx,0x1
1005ce84:	jne    0x1005ce70
1005ce86:	cmp    DWORD PTR ds:0x10082b30,0x10
1005ce8d:	jge    0x1005cea2
1005ce8f:	add    DWORD PTR ds:0x10082b30,0x1
1005ce96:	jmp    0x1005cea2
1005ce98:	mov    ecx,DWORD PTR [ebp-0x3c]
1005ce9b:	mov    DWORD PTR [eax*8+0x10082b34],ecx
1005cea2:	mov    eax,0x10082bb8
1005cea7:	xor    edx,edx
1005cea9:	xchg   DWORD PTR [eax],edx
1005ceab:	mov    eax,0x1
1005ceb0:	mov    ecx,DWORD PTR [ebp-0x10]
1005ceb3:	mov    DWORD PTR fs:0x0,ecx
1005ceba:	pop    ecx
1005cebb:	pop    edi
1005cebc:	pop    esi
1005cebd:	pop    ebx
1005cebe:	mov    esp,ebp
1005cec0:	pop    ebp
1005cec1:	ret    
1005cec2:	push   ebp
1005cec3:	mov    ebp,esp
1005cec5:	sub    esp,0x18
1005cec8:	push   ebx
1005cec9:	push   esi
1005ceca:	push   edi
1005cecb:	xor    ebx,ebx
1005cecd:	push   0x1
1005cecf:	push   ebx
1005ced0:	push   ebx
1005ced1:	push   DWORD PTR [ebp+0x8]
1005ced4:	mov    DWORD PTR [ebp-0x10],ebx
1005ced7:	mov    DWORD PTR [ebp-0xc],ebx
1005ceda:	call   0x1004c983
1005cedf:	mov    DWORD PTR [ebp-0x18],eax
1005cee2:	and    eax,edx
1005cee4:	add    esp,0x10
1005cee7:	cmp    eax,0xffffffff
1005ceea:	mov    DWORD PTR [ebp-0x14],edx
1005ceed:	je     0x1005cf48
1005ceef:	push   0x2
1005cef1:	push   ebx
1005cef2:	push   ebx
1005cef3:	push   DWORD PTR [ebp+0x8]
1005cef6:	call   0x1004c983
1005cefb:	mov    ecx,eax
1005cefd:	and    ecx,edx
1005ceff:	add    esp,0x10
1005cf02:	cmp    ecx,0xffffffff
1005cf05:	je     0x1005cf48
1005cf07:	mov    esi,DWORD PTR [ebp+0xc]
1005cf0a:	mov    edi,DWORD PTR [ebp+0x10]
1005cf0d:	sub    esi,eax
1005cf0f:	sbb    edi,edx
1005cf11:	js     0x1005cfdd
1005cf17:	jg     0x1005cf21
1005cf19:	cmp    esi,ebx
1005cf1b:	jbe    0x1005cfdd
1005cf21:	mov    ebx,0x1000
1005cf26:	push   ebx
1005cf27:	push   0x8
1005cf29:	call   DWORD PTR ds:0x100671b4
1005cf2f:	push   eax
1005cf30:	call   DWORD PTR ds:0x10067190
1005cf36:	test   eax,eax
1005cf38:	mov    DWORD PTR [ebp-0x4],eax
1005cf3b:	jne    0x1005cf54
1005cf3d:	call   0x10046c41
1005cf42:	mov    DWORD PTR [eax],0xc
1005cf48:	call   0x10046c41
1005cf4d:	mov    eax,DWORD PTR [eax]
1005cf4f:	pop    edi
1005cf50:	pop    esi
1005cf51:	pop    ebx
1005cf52:	leave  
1005cf53:	ret    
1005cf54:	push   0x8000
1005cf59:	push   DWORD PTR [ebp+0x8]
1005cf5c:	call   0x1005d076
1005cf61:	pop    ecx
1005cf62:	pop    ecx
1005cf63:	mov    DWORD PTR [ebp-0x8],eax
1005cf66:	test   edi,edi
1005cf68:	jl     0x1005cf74
1005cf6a:	jg     0x1005cf70
1005cf6c:	cmp    esi,ebx
1005cf6e:	jb     0x1005cf74
1005cf70:	mov    eax,ebx
1005cf72:	jmp    0x1005cf76
1005cf74:	mov    eax,esi
1005cf76:	push   eax
1005cf77:	push   DWORD PTR [ebp-0x4]
1005cf7a:	push   DWORD PTR [ebp+0x8]
1005cf7d:	call   0x1004cb1f
1005cf82:	add    esp,0xc
1005cf85:	cmp    eax,0xffffffff
1005cf88:	je     0x1005cfc0
1005cf8a:	cdq    
1005cf8b:	sub    esi,eax
1005cf8d:	sbb    edi,edx
1005cf8f:	js     0x1005cf97
1005cf91:	jg     0x1005cf66
1005cf93:	test   esi,esi
1005cf95:	ja     0x1005cf66
1005cf97:	mov    esi,DWORD PTR [ebp-0x10]
1005cf9a:	push   DWORD PTR [ebp-0x8]
1005cf9d:	push   DWORD PTR [ebp+0x8]
1005cfa0:	call   0x1005d076
1005cfa5:	pop    ecx
1005cfa6:	pop    ecx
1005cfa7:	push   DWORD PTR [ebp-0x4]
1005cfaa:	push   0x0
1005cfac:	call   DWORD PTR ds:0x100671b4
1005cfb2:	push   eax
1005cfb3:	call   DWORD PTR ds:0x10067194
1005cfb9:	xor    ebx,ebx
1005cfbb:	jmp    0x1005d046
1005cfc0:	call   0x10046c54
1005cfc5:	cmp    DWORD PTR [eax],0x5
1005cfc8:	jne    0x1005cfd5
1005cfca:	call   0x10046c41
1005cfcf:	mov    DWORD PTR [eax],0xd
1005cfd5:	or     esi,0xffffffff
1005cfd8:	mov    DWORD PTR [ebp-0xc],esi
1005cfdb:	jmp    0x1005cf9a
1005cfdd:	cmp    edi,ebx
1005cfdf:	jg     0x1005d052
1005cfe1:	jl     0x1005cfe7
1005cfe3:	cmp    esi,ebx
1005cfe5:	jae    0x1005d052
1005cfe7:	push   ebx
1005cfe8:	push   DWORD PTR [ebp+0x10]
1005cfeb:	push   DWORD PTR [ebp+0xc]
1005cfee:	push   DWORD PTR [ebp+0x8]
1005cff1:	call   0x1004c983
1005cff6:	and    eax,edx
1005cff8:	add    esp,0x10
1005cffb:	cmp    eax,0xffffffff
1005cffe:	je     0x1005cf48
1005d004:	push   DWORD PTR [ebp+0x8]
1005d007:	call   0x1004fc69
1005d00c:	pop    ecx
1005d00d:	push   eax
1005d00e:	call   DWORD PTR ds:0x10067070
1005d014:	neg    eax
1005d016:	sbb    eax,eax
1005d018:	neg    eax
1005d01a:	dec    eax
1005d01b:	cdq    
1005d01c:	mov    DWORD PTR [ebp-0x10],eax
1005d01f:	and    eax,edx
1005d021:	cmp    eax,0xffffffff
1005d024:	mov    DWORD PTR [ebp-0xc],edx
1005d027:	jne    0x1005d052
1005d029:	call   0x10046c41
1005d02e:	mov    DWORD PTR [eax],0xd
1005d034:	call   0x10046c54
1005d039:	mov    esi,eax
1005d03b:	call   DWORD PTR ds:0x100670cc
1005d041:	mov    DWORD PTR [esi],eax
1005d043:	mov    esi,DWORD PTR [ebp-0x10]
1005d046:	and    esi,DWORD PTR [ebp-0xc]
1005d049:	cmp    esi,0xffffffff
1005d04c:	je     0x1005cf48
1005d052:	push   ebx
1005d053:	push   DWORD PTR [ebp-0x14]
1005d056:	push   DWORD PTR [ebp-0x18]
1005d059:	push   DWORD PTR [ebp+0x8]
1005d05c:	call   0x1004c983
1005d061:	and    eax,edx
1005d063:	add    esp,0x10
1005d066:	cmp    eax,0xffffffff
1005d069:	je     0x1005cf48
1005d06f:	xor    eax,eax
1005d071:	jmp    0x1005cf4f
1005d076:	push   ebp
1005d077:	mov    ebp,esp
1005d079:	push   ebx
1005d07a:	mov    ebx,DWORD PTR [ebp+0xc]
1005d07d:	push   esi
1005d07e:	mov    esi,DWORD PTR [ebp+0x8]
1005d081:	mov    eax,esi
1005d083:	sar    eax,0x5
1005d086:	lea    edx,[eax*4+0x100844e0]
1005d08d:	mov    eax,DWORD PTR [edx]
1005d08f:	and    esi,0x1f
1005d092:	shl    esi,0x6
1005d095:	lea    ecx,[eax+esi*1]
1005d098:	movzx  eax,BYTE PTR [ecx+0x4]
1005d09c:	and    eax,0x80
1005d0a1:	mov    DWORD PTR [ebp+0x8],eax
1005d0a4:	mov    al,BYTE PTR [ecx+0x24]
1005d0a7:	add    al,al
1005d0a9:	movsx  eax,al
1005d0ac:	push   edi
1005d0ad:	mov    edi,0x4000
1005d0b2:	sar    eax,1
1005d0b4:	cmp    ebx,edi
1005d0b6:	je     0x1005d108
1005d0b8:	cmp    ebx,0x8000
1005d0be:	je     0x1005d102
1005d0c0:	cmp    ebx,0x10000
1005d0c6:	je     0x1005d0ee
1005d0c8:	cmp    ebx,0x20000
1005d0ce:	je     0x1005d0ee
1005d0d0:	cmp    ebx,0x40000
1005d0d6:	jne    0x1005d115
1005d0d8:	or     BYTE PTR [ecx+0x4],0x80
1005d0dc:	mov    ecx,DWORD PTR [edx]
1005d0de:	lea    ecx,[ecx+esi*1+0x24]
1005d0e2:	mov    dl,BYTE PTR [ecx]
1005d0e4:	and    dl,0x81
1005d0e7:	or     dl,0x1
1005d0ea:	mov    BYTE PTR [ecx],dl
1005d0ec:	jmp    0x1005d115
1005d0ee:	or     BYTE PTR [ecx+0x4],0x80
1005d0f2:	mov    ecx,DWORD PTR [edx]
1005d0f4:	lea    ecx,[ecx+esi*1+0x24]
1005d0f8:	mov    dl,BYTE PTR [ecx]
1005d0fa:	and    dl,0x82
1005d0fd:	or     dl,0x2
1005d100:	jmp    0x1005d0ea
1005d102:	and    BYTE PTR [ecx+0x4],0x7f
1005d106:	jmp    0x1005d115
1005d108:	or     BYTE PTR [ecx+0x4],0x80
1005d10c:	mov    ecx,DWORD PTR [edx]
1005d10e:	lea    ecx,[ecx+esi*1+0x24]
1005d112:	and    BYTE PTR [ecx],0x80
1005d115:	cmp    DWORD PTR [ebp+0x8],0x0
1005d119:	jne    0x1005d122
1005d11b:	mov    eax,0x8000
1005d120:	jmp    0x1005d12d
1005d122:	neg    eax
1005d124:	sbb    eax,eax
1005d126:	and    eax,0xc000
1005d12b:	add    eax,edi
1005d12d:	pop    edi
1005d12e:	pop    esi
1005d12f:	pop    ebx
1005d130:	pop    ebp
1005d131:	ret    
1005d132:	mov    eax,DWORD PTR [esp+0x4]
1005d136:	push   esi
1005d137:	xor    esi,esi
1005d139:	cmp    eax,esi
1005d13b:	jne    0x1005d15a
1005d13d:	call   0x10046c41
1005d142:	push   esi
1005d143:	push   esi
1005d144:	push   esi
1005d145:	push   esi
1005d146:	push   esi
1005d147:	mov    DWORD PTR [eax],0x16
1005d14d:	call   0x100435e1
1005d152:	add    esp,0x14
1005d155:	push   0x16
1005d157:	pop    eax
1005d158:	pop    esi
1005d159:	ret    
1005d15a:	mov    ecx,DWORD PTR ds:0x10082c5c
1005d160:	mov    DWORD PTR [eax],ecx
1005d162:	xor    eax,eax
1005d164:	pop    esi
1005d165:	ret    
1005d166:	push   ebp
1005d167:	mov    ebp,esp
1005d169:	sub    esp,0x10
1005d16c:	push   ebx
1005d16d:	xor    ebx,ebx
1005d16f:	cmp    DWORD PTR [ebp+0x10],ebx
1005d172:	jne    0x1005d17b
1005d174:	xor    eax,eax
1005d176:	jmp    0x1005d2b8
1005d17b:	push   edi
1005d17c:	push   DWORD PTR [ebp+0x14]
1005d17f:	lea    ecx,[ebp-0x10]
1005d182:	call   0x100456a5
1005d187:	mov    edi,DWORD PTR [ebp-0xc]
1005d18a:	cmp    DWORD PTR [edi+0x8],ebx
1005d18d:	jne    0x1005d1b5
1005d18f:	push   DWORD PTR [ebp+0x10]
1005d192:	push   DWORD PTR [ebp+0xc]
1005d195:	push   DWORD PTR [ebp+0x8]
1005d198:	call   0x1004f416
1005d19d:	add    esp,0xc
1005d1a0:	cmp    BYTE PTR [ebp-0x4],bl
1005d1a3:	je     0x1005d2b7
1005d1a9:	mov    ecx,DWORD PTR [ebp-0x8]
1005d1ac:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005d1b0:	jmp    0x1005d2b7
1005d1b5:	cmp    DWORD PTR [ebp+0x8],ebx
1005d1b8:	jne    0x1005d1e8
1005d1ba:	call   0x10046c41
1005d1bf:	push   ebx
1005d1c0:	push   ebx
1005d1c1:	push   ebx
1005d1c2:	push   ebx
1005d1c3:	push   ebx
1005d1c4:	mov    DWORD PTR [eax],0x16
1005d1ca:	call   0x100435e1
1005d1cf:	add    esp,0x14
1005d1d2:	cmp    BYTE PTR [ebp-0x4],bl
1005d1d5:	je     0x1005d1de
1005d1d7:	mov    eax,DWORD PTR [ebp-0x8]
1005d1da:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d1de:	mov    eax,0x7fffffff
1005d1e3:	jmp    0x1005d2b7
1005d1e8:	push   esi
1005d1e9:	mov    esi,DWORD PTR [ebp+0xc]
1005d1ec:	cmp    esi,ebx
1005d1ee:	jne    0x1005d21e
1005d1f0:	call   0x10046c41
1005d1f5:	push   ebx
1005d1f6:	push   ebx
1005d1f7:	push   ebx
1005d1f8:	push   ebx
1005d1f9:	push   ebx
1005d1fa:	mov    DWORD PTR [eax],0x16
1005d200:	call   0x100435e1
1005d205:	add    esp,0x14
1005d208:	cmp    BYTE PTR [ebp-0x4],bl
1005d20b:	je     0x1005d214
1005d20d:	mov    eax,DWORD PTR [ebp-0x8]
1005d210:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d214:	mov    eax,0x7fffffff
1005d219:	jmp    0x1005d2b6
1005d21e:	mov    eax,DWORD PTR [ebp+0x8]
1005d221:	movzx  cx,BYTE PTR [eax]
1005d225:	dec    DWORD PTR [ebp+0x10]
1005d228:	movzx  ecx,cx
1005d22b:	movzx  edx,cl
1005d22e:	inc    eax
1005d22f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005d234:	mov    DWORD PTR [ebp+0x8],eax
1005d237:	je     0x1005d265
1005d239:	cmp    DWORD PTR [ebp+0x10],ebx
1005d23c:	jne    0x1005d24f
1005d23e:	movzx  eax,BYTE PTR [esi]
1005d241:	xor    ecx,ecx
1005d243:	test   BYTE PTR [eax+edi*1+0x1d],0x4
1005d248:	jne    0x1005d2a8
1005d24a:	movzx  eax,ax
1005d24d:	jmp    0x1005d295
1005d24f:	mov    al,BYTE PTR [eax]
1005d251:	cmp    al,bl
1005d253:	jne    0x1005d259
1005d255:	xor    ecx,ecx
1005d257:	jmp    0x1005d265
1005d259:	xor    edx,edx
1005d25b:	inc    DWORD PTR [ebp+0x8]
1005d25e:	mov    dh,cl
1005d260:	mov    dl,al
1005d262:	movzx  ecx,dx
1005d265:	movzx  ax,BYTE PTR [esi]
1005d269:	movzx  eax,ax
1005d26c:	movzx  edx,al
1005d26f:	inc    esi
1005d270:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005d275:	je     0x1005d295
1005d277:	cmp    DWORD PTR [ebp+0x10],ebx
1005d27a:	jne    0x1005d280
1005d27c:	xor    eax,eax
1005d27e:	jmp    0x1005d295
1005d280:	mov    dl,BYTE PTR [esi]
1005d282:	dec    DWORD PTR [ebp+0x10]
1005d285:	cmp    dl,bl
1005d287:	je     0x1005d27c
1005d289:	xor    ebx,ebx
1005d28b:	mov    bh,al
1005d28d:	inc    esi
1005d28e:	mov    bl,dl
1005d290:	movzx  eax,bx
1005d293:	xor    ebx,ebx
1005d295:	cmp    ax,cx
1005d298:	jne    0x1005d2bb
1005d29a:	cmp    cx,bx
1005d29d:	je     0x1005d2a8
1005d29f:	cmp    DWORD PTR [ebp+0x10],ebx
1005d2a2:	jne    0x1005d21e
1005d2a8:	cmp    BYTE PTR [ebp-0x4],bl
1005d2ab:	je     0x1005d2b4
1005d2ad:	mov    eax,DWORD PTR [ebp-0x8]
1005d2b0:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d2b4:	xor    eax,eax
1005d2b6:	pop    esi
1005d2b7:	pop    edi
1005d2b8:	pop    ebx
1005d2b9:	leave  
1005d2ba:	ret    
1005d2bb:	sbb    eax,eax
1005d2bd:	and    eax,0x2
1005d2c0:	dec    eax
1005d2c1:	cmp    BYTE PTR [ebp-0x4],bl
1005d2c4:	je     0x1005d2b6
1005d2c6:	mov    ecx,DWORD PTR [ebp-0x8]
1005d2c9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005d2cd:	jmp    0x1005d2b6
1005d2cf:	push   0x0
1005d2d1:	push   DWORD PTR [esp+0x10]
1005d2d5:	push   DWORD PTR [esp+0x10]
1005d2d9:	push   DWORD PTR [esp+0x10]
1005d2dd:	call   0x1005d166
1005d2e2:	add    esp,0x10
1005d2e5:	ret    
1005d2e6:	xor    eax,eax
1005d2e8:	inc    eax
1005d2e9:	cmp    DWORD PTR [esp+0x4],0x0
1005d2ee:	jne    0x1005d2f2
1005d2f0:	xor    eax,eax
1005d2f2:	ret    
1005d2f3:	push   ebp
1005d2f4:	mov    ebp,esp
1005d2f6:	sub    esp,0x28
1005d2f9:	mov    eax,ds:0x100801ac
1005d2fe:	xor    eax,ebp
1005d300:	mov    DWORD PTR [ebp-0x4],eax
1005d303:	push   ebx
1005d304:	push   esi
1005d305:	mov    esi,DWORD PTR [ebp+0x8]
1005d308:	push   edi
1005d309:	push   DWORD PTR [ebp+0x10]
1005d30c:	mov    edi,DWORD PTR [ebp+0xc]
1005d30f:	lea    ecx,[ebp-0x24]
1005d312:	call   0x100456a5
1005d317:	lea    eax,[ebp-0x24]
1005d31a:	push   eax
1005d31b:	xor    ebx,ebx
1005d31d:	push   ebx
1005d31e:	push   ebx
1005d31f:	push   ebx
1005d320:	push   ebx
1005d321:	push   edi
1005d322:	lea    eax,[ebp-0x28]
1005d325:	push   eax
1005d326:	lea    eax,[ebp-0x10]
1005d329:	push   eax
1005d32a:	call   0x1005e23d
1005d32f:	mov    DWORD PTR [ebp-0x14],eax
1005d332:	lea    eax,[ebp-0x10]
1005d335:	push   esi
1005d336:	push   eax
1005d337:	call   0x1005d7b9
1005d33c:	add    esp,0x28
1005d33f:	test   BYTE PTR [ebp-0x14],0x3
1005d343:	jne    0x1005d370
1005d345:	cmp    eax,0x1
1005d348:	jne    0x1005d35b
1005d34a:	cmp    BYTE PTR [ebp-0x18],bl
1005d34d:	je     0x1005d356
1005d34f:	mov    eax,DWORD PTR [ebp-0x1c]
1005d352:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d356:	push   0x3
1005d358:	pop    eax
1005d359:	jmp    0x1005d38a
1005d35b:	cmp    eax,0x2
1005d35e:	jne    0x1005d37c
1005d360:	cmp    BYTE PTR [ebp-0x18],bl
1005d363:	je     0x1005d36c
1005d365:	mov    eax,DWORD PTR [ebp-0x1c]
1005d368:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d36c:	push   0x4
1005d36e:	jmp    0x1005d358
1005d370:	test   BYTE PTR [ebp-0x14],0x1
1005d374:	jne    0x1005d360
1005d376:	test   BYTE PTR [ebp-0x14],0x2
1005d37a:	jne    0x1005d34a
1005d37c:	cmp    BYTE PTR [ebp-0x18],bl
1005d37f:	je     0x1005d388
1005d381:	mov    eax,DWORD PTR [ebp-0x1c]
1005d384:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d388:	xor    eax,eax
1005d38a:	mov    ecx,DWORD PTR [ebp-0x4]
1005d38d:	pop    edi
1005d38e:	pop    esi
1005d38f:	xor    ecx,ebp
1005d391:	pop    ebx
1005d392:	call   0x10043615
1005d397:	leave  
1005d398:	ret    
1005d399:	push   ebp
1005d39a:	mov    ebp,esp
1005d39c:	sub    esp,0x28
1005d39f:	mov    eax,ds:0x100801ac
1005d3a4:	xor    eax,ebp
1005d3a6:	mov    DWORD PTR [ebp-0x4],eax
1005d3a9:	push   ebx
1005d3aa:	push   esi
1005d3ab:	mov    esi,DWORD PTR [ebp+0x8]
1005d3ae:	push   edi
1005d3af:	push   DWORD PTR [ebp+0x10]
1005d3b2:	mov    edi,DWORD PTR [ebp+0xc]
1005d3b5:	lea    ecx,[ebp-0x24]
1005d3b8:	call   0x100456a5
1005d3bd:	lea    eax,[ebp-0x24]
1005d3c0:	push   eax
1005d3c1:	xor    ebx,ebx
1005d3c3:	push   ebx
1005d3c4:	push   ebx
1005d3c5:	push   ebx
1005d3c6:	push   ebx
1005d3c7:	push   edi
1005d3c8:	lea    eax,[ebp-0x28]
1005d3cb:	push   eax
1005d3cc:	lea    eax,[ebp-0x10]
1005d3cf:	push   eax
1005d3d0:	call   0x1005e23d
1005d3d5:	mov    DWORD PTR [ebp-0x14],eax
1005d3d8:	lea    eax,[ebp-0x10]
1005d3db:	push   esi
1005d3dc:	push   eax
1005d3dd:	call   0x1005dcfb
1005d3e2:	add    esp,0x28
1005d3e5:	test   BYTE PTR [ebp-0x14],0x3
1005d3e9:	jne    0x1005d416
1005d3eb:	cmp    eax,0x1
1005d3ee:	jne    0x1005d401
1005d3f0:	cmp    BYTE PTR [ebp-0x18],bl
1005d3f3:	je     0x1005d3fc
1005d3f5:	mov    eax,DWORD PTR [ebp-0x1c]
1005d3f8:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d3fc:	push   0x3
1005d3fe:	pop    eax
1005d3ff:	jmp    0x1005d430
1005d401:	cmp    eax,0x2
1005d404:	jne    0x1005d422
1005d406:	cmp    BYTE PTR [ebp-0x18],bl
1005d409:	je     0x1005d412
1005d40b:	mov    eax,DWORD PTR [ebp-0x1c]
1005d40e:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d412:	push   0x4
1005d414:	jmp    0x1005d3fe
1005d416:	test   BYTE PTR [ebp-0x14],0x1
1005d41a:	jne    0x1005d406
1005d41c:	test   BYTE PTR [ebp-0x14],0x2
1005d420:	jne    0x1005d3f0
1005d422:	cmp    BYTE PTR [ebp-0x18],bl
1005d425:	je     0x1005d42e
1005d427:	mov    eax,DWORD PTR [ebp-0x1c]
1005d42a:	and    DWORD PTR [eax+0x70],0xfffffffd
1005d42e:	xor    eax,eax
1005d430:	mov    ecx,DWORD PTR [ebp-0x4]
1005d433:	pop    edi
1005d434:	pop    esi
1005d435:	xor    ecx,ebp
1005d437:	pop    ebx
1005d438:	call   0x10043615
1005d43d:	leave  
1005d43e:	ret    
1005d43f:	push   ebp
1005d440:	mov    ebp,esp
1005d442:	mov    ecx,DWORD PTR [ebp+0x14]
1005d445:	push   ebx
1005d446:	push   esi
1005d447:	mov    esi,DWORD PTR [ebp+0x8]
1005d44a:	xor    ebx,ebx
1005d44c:	cmp    esi,ebx
1005d44e:	push   edi
1005d44f:	mov    edi,DWORD PTR [ecx+0xc]
1005d452:	jne    0x1005d472
1005d454:	call   0x10046c41
1005d459:	push   0x16
1005d45b:	pop    esi
1005d45c:	mov    DWORD PTR [eax],esi
1005d45e:	push   ebx
1005d45f:	push   ebx
1005d460:	push   ebx
1005d461:	push   ebx
1005d462:	push   ebx
1005d463:	call   0x100435e1
1005d468:	add    esp,0x14
1005d46b:	mov    eax,esi
1005d46d:	jmp    0x1005d4f7
1005d472:	cmp    DWORD PTR [ebp+0xc],ebx
1005d475:	jbe    0x1005d454
1005d477:	mov    edx,DWORD PTR [ebp+0x10]
1005d47a:	cmp    edx,ebx
1005d47c:	mov    BYTE PTR [esi],bl
1005d47e:	jle    0x1005d484
1005d480:	mov    eax,edx
1005d482:	jmp    0x1005d486
1005d484:	xor    eax,eax
1005d486:	inc    eax
1005d487:	cmp    DWORD PTR [ebp+0xc],eax
1005d48a:	ja     0x1005d49a
1005d48c:	call   0x10046c41
1005d491:	push   0x22
1005d493:	pop    ecx
1005d494:	mov    DWORD PTR [eax],ecx
1005d496:	mov    esi,ecx
1005d498:	jmp    0x1005d45e
1005d49a:	cmp    edx,ebx
1005d49c:	mov    BYTE PTR [esi],0x30
1005d49f:	lea    eax,[esi+0x1]
1005d4a2:	jle    0x1005d4be
1005d4a4:	mov    cl,BYTE PTR [edi]
1005d4a6:	cmp    cl,bl
1005d4a8:	je     0x1005d4b0
1005d4aa:	movsx  ecx,cl
1005d4ad:	inc    edi
1005d4ae:	jmp    0x1005d4b3
1005d4b0:	push   0x30
1005d4b2:	pop    ecx
1005d4b3:	mov    BYTE PTR [eax],cl
1005d4b5:	inc    eax
1005d4b6:	dec    edx
1005d4b7:	cmp    edx,ebx
1005d4b9:	jg     0x1005d4a4
1005d4bb:	mov    ecx,DWORD PTR [ebp+0x14]
1005d4be:	cmp    edx,ebx
1005d4c0:	mov    BYTE PTR [eax],bl
1005d4c2:	jl     0x1005d4d6
1005d4c4:	cmp    BYTE PTR [edi],0x35
1005d4c7:	jl     0x1005d4d6
1005d4c9:	jmp    0x1005d4ce
1005d4cb:	mov    BYTE PTR [eax],0x30
1005d4ce:	dec    eax
1005d4cf:	cmp    BYTE PTR [eax],0x39
1005d4d2:	je     0x1005d4cb
1005d4d4:	inc    BYTE PTR [eax]
1005d4d6:	cmp    BYTE PTR [esi],0x31
1005d4d9:	jne    0x1005d4e0
1005d4db:	inc    DWORD PTR [ecx+0x4]
1005d4de:	jmp    0x1005d4f5
1005d4e0:	lea    edi,[esi+0x1]
1005d4e3:	push   edi
1005d4e4:	call   0x10043450
1005d4e9:	inc    eax
1005d4ea:	push   eax
1005d4eb:	push   edi
1005d4ec:	push   esi
1005d4ed:	call   0x10045880
1005d4f2:	add    esp,0x10
1005d4f5:	xor    eax,eax
1005d4f7:	pop    edi
1005d4f8:	pop    esi
1005d4f9:	pop    ebx
1005d4fa:	pop    ebp
1005d4fb:	ret    
1005d4fc:	push   ebp
1005d4fd:	mov    ebp,esp
1005d4ff:	push   ecx
1005d500:	mov    edx,DWORD PTR [ebp+0xc]
1005d503:	movzx  eax,WORD PTR [edx+0x6]
1005d507:	push   ebx
1005d508:	mov    ecx,eax
1005d50a:	push   esi
1005d50b:	push   edi
1005d50c:	shr    ecx,0x4
1005d50f:	and    eax,0x8000
1005d514:	mov    edi,0x7ff
1005d519:	and    ecx,edi
1005d51b:	mov    DWORD PTR [ebp+0xc],eax
1005d51e:	mov    eax,DWORD PTR [edx+0x4]
1005d521:	mov    edx,DWORD PTR [edx]
1005d523:	movzx  ebx,cx
1005d526:	mov    esi,0x80000000
1005d52b:	and    eax,0xfffff
1005d530:	test   ebx,ebx
1005d532:	mov    DWORD PTR [ebp-0x4],esi
1005d535:	je     0x1005d54a
1005d537:	cmp    ebx,edi
1005d539:	je     0x1005d543
1005d53b:	add    ecx,0x3c00
1005d541:	jmp    0x1005d56b
1005d543:	mov    edi,0x7fff
1005d548:	jmp    0x1005d56e
1005d54a:	xor    ebx,ebx
1005d54c:	cmp    eax,ebx
1005d54e:	jne    0x1005d562
1005d550:	cmp    edx,ebx
1005d552:	jne    0x1005d562
1005d554:	mov    eax,DWORD PTR [ebp+0x8]
1005d557:	mov    cx,WORD PTR [ebp+0xc]
1005d55b:	mov    DWORD PTR [eax+0x4],ebx
1005d55e:	mov    DWORD PTR [eax],ebx
1005d560:	jmp    0x1005d5ae
1005d562:	add    ecx,0x3c01
1005d568:	mov    DWORD PTR [ebp-0x4],ebx
1005d56b:	movzx  edi,cx
1005d56e:	mov    ecx,edx
1005d570:	shr    ecx,0x15
1005d573:	shl    eax,0xb
1005d576:	or     ecx,eax
1005d578:	or     ecx,DWORD PTR [ebp-0x4]
1005d57b:	mov    eax,DWORD PTR [ebp+0x8]
1005d57e:	shl    edx,0xb
1005d581:	test   esi,ecx
1005d583:	mov    DWORD PTR [eax+0x4],ecx
1005d586:	mov    DWORD PTR [eax],edx
1005d588:	jne    0x1005d5a9
1005d58a:	mov    ecx,DWORD PTR [eax]
1005d58c:	mov    edx,DWORD PTR [eax+0x4]
1005d58f:	mov    ebx,ecx
1005d591:	add    edx,edx
1005d593:	shr    ebx,0x1f
1005d596:	or     edx,ebx
1005d598:	add    ecx,ecx
1005d59a:	add    edi,0xffff
1005d5a0:	test   esi,edx
1005d5a2:	mov    DWORD PTR [eax+0x4],edx
1005d5a5:	mov    DWORD PTR [eax],ecx
1005d5a7:	je     0x1005d58a
1005d5a9:	mov    ecx,DWORD PTR [ebp+0xc]
1005d5ac:	or     ecx,edi
1005d5ae:	pop    edi
1005d5af:	pop    esi
1005d5b0:	mov    WORD PTR [eax+0x8],cx
1005d5b4:	pop    ebx
1005d5b5:	leave  
1005d5b6:	ret    
1005d5b7:	push   ebp
1005d5b8:	mov    ebp,esp
1005d5ba:	sub    esp,0x30
1005d5bd:	mov    eax,ds:0x100801ac
1005d5c2:	xor    eax,ebp
1005d5c4:	mov    DWORD PTR [ebp-0x4],eax
1005d5c7:	mov    eax,DWORD PTR [ebp+0x14]
1005d5ca:	push   ebx
1005d5cb:	mov    ebx,DWORD PTR [ebp+0x10]
1005d5ce:	push   esi
1005d5cf:	mov    DWORD PTR [ebp-0x30],eax
1005d5d2:	push   edi
1005d5d3:	lea    eax,[ebp+0x8]
1005d5d6:	push   eax
1005d5d7:	lea    eax,[ebp-0x10]
1005d5da:	push   eax
1005d5db:	call   0x1005d4fc
1005d5e0:	pop    ecx
1005d5e1:	pop    ecx
1005d5e2:	lea    eax,[ebp-0x2c]
1005d5e5:	push   eax
1005d5e6:	push   0x0
1005d5e8:	push   0x11
1005d5ea:	sub    esp,0xc
1005d5ed:	lea    esi,[ebp-0x10]
1005d5f0:	mov    edi,esp
1005d5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d5f4:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005d5f6:	call   0x1005e8fd
1005d5fb:	mov    esi,DWORD PTR [ebp-0x30]
1005d5fe:	mov    DWORD PTR [ebx+0x8],eax
1005d601:	movsx  eax,BYTE PTR [ebp-0x2a]
1005d605:	mov    DWORD PTR [ebx],eax
1005d607:	movsx  eax,WORD PTR [ebp-0x2c]
1005d60b:	mov    DWORD PTR [ebx+0x4],eax
1005d60e:	lea    eax,[ebp-0x28]
1005d611:	push   eax
1005d612:	push   DWORD PTR [ebp+0x18]
1005d615:	push   esi
1005d616:	call   0x10047a20
1005d61b:	add    esp,0x24
1005d61e:	test   eax,eax
1005d620:	je     0x1005d631
1005d622:	xor    eax,eax
1005d624:	push   eax
1005d625:	push   eax
1005d626:	push   eax
1005d627:	push   eax
1005d628:	push   eax
1005d629:	call   0x100434e5
1005d62e:	add    esp,0x14
1005d631:	mov    ecx,DWORD PTR [ebp-0x4]
1005d634:	pop    edi
1005d635:	mov    DWORD PTR [ebx+0xc],esi
1005d638:	pop    esi
1005d639:	mov    eax,ebx
1005d63b:	xor    ecx,ebp
1005d63d:	pop    ebx
1005d63e:	call   0x10043615
1005d643:	leave  
1005d644:	ret    
1005d645:	int3   
1005d646:	int3   
1005d647:	int3   
1005d648:	int3   
1005d649:	int3   
1005d64a:	int3   
1005d64b:	int3   
1005d64c:	int3   
1005d64d:	int3   
1005d64e:	int3   
1005d64f:	int3   
1005d650:	push   edi
1005d651:	push   esi
1005d652:	push   ebp
1005d653:	xor    edi,edi
1005d655:	xor    ebp,ebp
1005d657:	mov    eax,DWORD PTR [esp+0x14]
1005d65b:	or     eax,eax
1005d65d:	jge    0x1005d674
1005d65f:	inc    edi
1005d660:	inc    ebp
1005d661:	mov    edx,DWORD PTR [esp+0x10]
1005d665:	neg    eax
1005d667:	neg    edx
1005d669:	sbb    eax,0x0
1005d66c:	mov    DWORD PTR [esp+0x14],eax
1005d670:	mov    DWORD PTR [esp+0x10],edx
1005d674:	mov    eax,DWORD PTR [esp+0x1c]
1005d678:	or     eax,eax
1005d67a:	jge    0x1005d690
1005d67c:	inc    edi
1005d67d:	mov    edx,DWORD PTR [esp+0x18]
1005d681:	neg    eax
1005d683:	neg    edx
1005d685:	sbb    eax,0x0
1005d688:	mov    DWORD PTR [esp+0x1c],eax
1005d68c:	mov    DWORD PTR [esp+0x18],edx
1005d690:	or     eax,eax
1005d692:	jne    0x1005d6bc
1005d694:	mov    ecx,DWORD PTR [esp+0x18]
1005d698:	mov    eax,DWORD PTR [esp+0x14]
1005d69c:	xor    edx,edx
1005d69e:	div    ecx
1005d6a0:	mov    ebx,eax
1005d6a2:	mov    eax,DWORD PTR [esp+0x10]
1005d6a6:	div    ecx
1005d6a8:	mov    esi,eax
1005d6aa:	mov    eax,ebx
1005d6ac:	mul    DWORD PTR [esp+0x18]
1005d6b0:	mov    ecx,eax
1005d6b2:	mov    eax,esi
1005d6b4:	mul    DWORD PTR [esp+0x18]
1005d6b8:	add    edx,ecx
1005d6ba:	jmp    0x1005d703
1005d6bc:	mov    ebx,eax
1005d6be:	mov    ecx,DWORD PTR [esp+0x18]
1005d6c2:	mov    edx,DWORD PTR [esp+0x14]
1005d6c6:	mov    eax,DWORD PTR [esp+0x10]
1005d6ca:	shr    ebx,1
1005d6cc:	rcr    ecx,1
1005d6ce:	shr    edx,1
1005d6d0:	rcr    eax,1
1005d6d2:	or     ebx,ebx
1005d6d4:	jne    0x1005d6ca
1005d6d6:	div    ecx
1005d6d8:	mov    esi,eax
1005d6da:	mul    DWORD PTR [esp+0x1c]
1005d6de:	mov    ecx,eax
1005d6e0:	mov    eax,DWORD PTR [esp+0x18]
1005d6e4:	mul    esi
1005d6e6:	add    edx,ecx
1005d6e8:	jb     0x1005d6f8
1005d6ea:	cmp    edx,DWORD PTR [esp+0x14]
1005d6ee:	ja     0x1005d6f8
1005d6f0:	jb     0x1005d701
1005d6f2:	cmp    eax,DWORD PTR [esp+0x10]
1005d6f6:	jbe    0x1005d701
1005d6f8:	dec    esi
1005d6f9:	sub    eax,DWORD PTR [esp+0x18]
1005d6fd:	sbb    edx,DWORD PTR [esp+0x1c]
1005d701:	xor    ebx,ebx
1005d703:	sub    eax,DWORD PTR [esp+0x10]
1005d707:	sbb    edx,DWORD PTR [esp+0x14]
1005d70b:	dec    ebp
1005d70c:	jns    0x1005d715
1005d70e:	neg    edx
1005d710:	neg    eax
1005d712:	sbb    edx,0x0
1005d715:	mov    ecx,edx
1005d717:	mov    edx,ebx
1005d719:	mov    ebx,ecx
1005d71b:	mov    ecx,eax
1005d71d:	mov    eax,esi
1005d71f:	dec    edi
1005d720:	jne    0x1005d729
1005d722:	neg    edx
1005d724:	neg    eax
1005d726:	sbb    edx,0x0
1005d729:	pop    ebp
1005d72a:	pop    esi
1005d72b:	pop    edi
1005d72c:	ret    0x10
1005d72f:	int3   
1005d730:	cmp    cl,0x40
1005d733:	jae    0x1005d74a
1005d735:	cmp    cl,0x20
1005d738:	jae    0x1005d740
1005d73a:	shrd   eax,edx,cl
1005d73d:	shr    edx,cl
1005d73f:	ret    
1005d740:	mov    eax,edx
1005d742:	xor    edx,edx
1005d744:	and    cl,0x1f
1005d747:	shr    eax,cl
1005d749:	ret    
1005d74a:	xor    eax,eax
1005d74c:	xor    edx,edx
1005d74e:	ret    
1005d74f:	push   ebp
1005d750:	mov    ebp,esp
1005d752:	mov    eax,DWORD PTR [ebp+0x10]
1005d755:	mov    ecx,DWORD PTR [ebp+0xc]
1005d758:	and    eax,0xfff7ffff
1005d75d:	and    ecx,eax
1005d75f:	test   ecx,0xfcf0fce0
1005d765:	push   esi
1005d766:	je     0x1005d799
1005d768:	push   edi
1005d769:	mov    edi,DWORD PTR [ebp+0x8]
1005d76c:	xor    esi,esi
1005d76e:	cmp    edi,esi
1005d770:	je     0x1005d77d
1005d772:	push   esi
1005d773:	push   esi
1005d774:	call   0x1005f2f1
1005d779:	pop    ecx
1005d77a:	pop    ecx
1005d77b:	mov    DWORD PTR [edi],eax
1005d77d:	call   0x10046c41
1005d782:	push   0x16
1005d784:	pop    edi
1005d785:	push   esi
1005d786:	push   esi
1005d787:	push   esi
1005d788:	push   esi
1005d789:	push   esi
1005d78a:	mov    DWORD PTR [eax],edi
1005d78c:	call   0x100435e1
1005d791:	add    esp,0x14
1005d794:	mov    eax,edi
1005d796:	pop    edi
1005d797:	jmp    0x1005d7b6
1005d799:	mov    esi,DWORD PTR [ebp+0x8]
1005d79c:	test   esi,esi
1005d79e:	push   eax
1005d79f:	push   DWORD PTR [ebp+0xc]
1005d7a2:	je     0x1005d7ad
1005d7a4:	call   0x1005f2f1
1005d7a9:	mov    DWORD PTR [esi],eax
1005d7ab:	jmp    0x1005d7b2
1005d7ad:	call   0x1005f2f1
1005d7b2:	pop    ecx
1005d7b3:	pop    ecx
1005d7b4:	xor    eax,eax
1005d7b6:	pop    esi
1005d7b7:	pop    ebp
1005d7b8:	ret    
1005d7b9:	push   ebp
1005d7ba:	mov    ebp,esp
1005d7bc:	sub    esp,0x2c
1005d7bf:	mov    eax,DWORD PTR [ebp+0x8]
1005d7c2:	movzx  ecx,WORD PTR [eax+0xa]
1005d7c6:	push   ebx
1005d7c7:	mov    ebx,ecx
1005d7c9:	and    ecx,0x8000
1005d7cf:	mov    DWORD PTR [ebp-0x14],ecx
1005d7d2:	mov    ecx,DWORD PTR [eax+0x6]
1005d7d5:	mov    DWORD PTR [ebp-0x20],ecx
1005d7d8:	mov    ecx,DWORD PTR [eax+0x2]
1005d7db:	movzx  eax,WORD PTR [eax]
1005d7de:	and    ebx,0x7fff
1005d7e4:	sub    ebx,0x3fff
1005d7ea:	shl    eax,0x10
1005d7ed:	cmp    ebx,0xffffc001
1005d7f3:	push   edi
1005d7f4:	mov    DWORD PTR [ebp-0x1c],ecx
1005d7f7:	mov    DWORD PTR [ebp-0x18],eax
1005d7fa:	jne    0x1005d823
1005d7fc:	xor    ebx,ebx
1005d7fe:	xor    eax,eax
1005d800:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005d804:	jne    0x1005d813
1005d806:	inc    eax
1005d807:	cmp    eax,0x3
1005d80a:	jl     0x1005d800
1005d80c:	xor    eax,eax
1005d80e:	jmp    0x1005dcb8
1005d813:	xor    eax,eax
1005d815:	lea    edi,[ebp-0x20]
1005d818:	stos   DWORD PTR es:[edi],eax
1005d819:	stos   DWORD PTR es:[edi],eax
1005d81a:	push   0x2
1005d81c:	stos   DWORD PTR es:[edi],eax
1005d81d:	pop    eax
1005d81e:	jmp    0x1005dcb8
1005d823:	and    DWORD PTR [ebp+0x8],0x0
1005d827:	push   esi
1005d828:	lea    esi,[ebp-0x20]
1005d82b:	lea    edi,[ebp-0x2c]
1005d82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d82f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d831:	mov    esi,DWORD PTR ds:0x10081208
1005d837:	dec    esi
1005d838:	lea    ecx,[esi+0x1]
1005d83b:	mov    eax,ecx
1005d83d:	cdq    
1005d83e:	and    edx,0x1f
1005d841:	add    eax,edx
1005d843:	sar    eax,0x5
1005d846:	mov    edx,ecx
1005d848:	and    edx,0x8000001f
1005d84e:	mov    DWORD PTR [ebp-0x10],ebx
1005d851:	mov    DWORD PTR [ebp-0xc],eax
1005d854:	jns    0x1005d85b
1005d856:	dec    edx
1005d857:	or     edx,0xffffffe0
1005d85a:	inc    edx
1005d85b:	lea    edi,[ebp+eax*4-0x20]
1005d85f:	push   0x1f
1005d861:	xor    eax,eax
1005d863:	pop    ecx
1005d864:	sub    ecx,edx
1005d866:	inc    eax
1005d867:	shl    eax,cl
1005d869:	mov    DWORD PTR [ebp-0x8],ecx
1005d86c:	test   DWORD PTR [edi],eax
1005d86e:	je     0x1005d901
1005d874:	mov    eax,DWORD PTR [ebp-0xc]
1005d877:	or     edx,0xffffffff
1005d87a:	shl    edx,cl
1005d87c:	not    edx
1005d87e:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005d882:	jmp    0x1005d889
1005d884:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005d889:	jne    0x1005d893
1005d88b:	inc    eax
1005d88c:	cmp    eax,0x3
1005d88f:	jl     0x1005d884
1005d891:	jmp    0x1005d901
1005d893:	mov    eax,esi
1005d895:	cdq    
1005d896:	push   0x1f
1005d898:	pop    ecx
1005d899:	and    edx,ecx
1005d89b:	add    eax,edx
1005d89d:	sar    eax,0x5
1005d8a0:	and    esi,0x8000001f
1005d8a6:	jns    0x1005d8ad
1005d8a8:	dec    esi
1005d8a9:	or     esi,0xffffffe0
1005d8ac:	inc    esi
1005d8ad:	and    DWORD PTR [ebp-0x4],0x0
1005d8b1:	sub    ecx,esi
1005d8b3:	xor    edx,edx
1005d8b5:	inc    edx
1005d8b6:	shl    edx,cl
1005d8b8:	lea    ecx,[ebp+eax*4-0x20]
1005d8bc:	mov    esi,DWORD PTR [ecx]
1005d8be:	add    esi,edx
1005d8c0:	mov    DWORD PTR [ebp+0x8],esi
1005d8c3:	mov    esi,DWORD PTR [ecx]
1005d8c5:	cmp    DWORD PTR [ebp+0x8],esi
1005d8c8:	jb     0x1005d8ec
1005d8ca:	cmp    DWORD PTR [ebp+0x8],edx
1005d8cd:	jmp    0x1005d8ea
1005d8cf:	test   ecx,ecx
1005d8d1:	je     0x1005d8fe
1005d8d3:	and    DWORD PTR [ebp-0x4],0x0
1005d8d7:	lea    ecx,[ebp+eax*4-0x20]
1005d8db:	mov    edx,DWORD PTR [ecx]
1005d8dd:	lea    esi,[edx+0x1]
1005d8e0:	cmp    esi,edx
1005d8e2:	mov    DWORD PTR [ebp+0x8],esi
1005d8e5:	jb     0x1005d8ec
1005d8e7:	cmp    esi,0x1
1005d8ea:	jae    0x1005d8f3
1005d8ec:	mov    DWORD PTR [ebp-0x4],0x1
1005d8f3:	dec    eax
1005d8f4:	mov    edx,DWORD PTR [ebp+0x8]
1005d8f7:	mov    DWORD PTR [ecx],edx
1005d8f9:	mov    ecx,DWORD PTR [ebp-0x4]
1005d8fc:	jns    0x1005d8cf
1005d8fe:	mov    DWORD PTR [ebp+0x8],ecx
1005d901:	mov    ecx,DWORD PTR [ebp-0x8]
1005d904:	or     eax,0xffffffff
1005d907:	shl    eax,cl
1005d909:	and    DWORD PTR [edi],eax
1005d90b:	mov    eax,DWORD PTR [ebp-0xc]
1005d90e:	inc    eax
1005d90f:	cmp    eax,0x3
1005d912:	jge    0x1005d921
1005d914:	push   0x3
1005d916:	pop    ecx
1005d917:	lea    edi,[ebp+eax*4-0x20]
1005d91b:	sub    ecx,eax
1005d91d:	xor    eax,eax
1005d91f:	rep stos DWORD PTR es:[edi],eax
1005d921:	cmp    DWORD PTR [ebp+0x8],0x0
1005d925:	je     0x1005d928
1005d927:	inc    ebx
1005d928:	mov    eax,ds:0x10081204
1005d92d:	mov    ecx,eax
1005d92f:	sub    ecx,DWORD PTR ds:0x10081208
1005d935:	cmp    ebx,ecx
1005d937:	jge    0x1005d946
1005d939:	xor    eax,eax
1005d93b:	lea    edi,[ebp-0x20]
1005d93e:	stos   DWORD PTR es:[edi],eax
1005d93f:	stos   DWORD PTR es:[edi],eax
1005d940:	stos   DWORD PTR es:[edi],eax
1005d941:	jmp    0x1005db53
1005d946:	cmp    ebx,eax
1005d948:	jg     0x1005db5d
1005d94e:	sub    eax,DWORD PTR [ebp-0x10]
1005d951:	lea    esi,[ebp-0x2c]
1005d954:	mov    ecx,eax
1005d956:	lea    edi,[ebp-0x20]
1005d959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d95a:	cdq    
1005d95b:	and    edx,0x1f
1005d95e:	add    eax,edx
1005d960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d961:	mov    edx,ecx
1005d963:	sar    eax,0x5
1005d966:	and    edx,0x8000001f
1005d96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d96d:	jns    0x1005d974
1005d96f:	dec    edx
1005d970:	or     edx,0xffffffe0
1005d973:	inc    edx
1005d974:	and    DWORD PTR [ebp-0xc],0x0
1005d978:	and    DWORD PTR [ebp+0x8],0x0
1005d97c:	or     edi,0xffffffff
1005d97f:	mov    ecx,edx
1005d981:	shl    edi,cl
1005d983:	mov    DWORD PTR [ebp-0x4],0x20
1005d98a:	sub    DWORD PTR [ebp-0x4],edx
1005d98d:	not    edi
1005d98f:	mov    ebx,DWORD PTR [ebp+0x8]
1005d992:	lea    ebx,[ebp+ebx*4-0x20]
1005d996:	mov    esi,DWORD PTR [ebx]
1005d998:	mov    ecx,esi
1005d99a:	and    ecx,edi
1005d99c:	mov    DWORD PTR [ebp-0x10],ecx
1005d99f:	mov    ecx,edx
1005d9a1:	shr    esi,cl
1005d9a3:	mov    ecx,DWORD PTR [ebp-0x4]
1005d9a6:	or     esi,DWORD PTR [ebp-0xc]
1005d9a9:	mov    DWORD PTR [ebx],esi
1005d9ab:	mov    esi,DWORD PTR [ebp-0x10]
1005d9ae:	shl    esi,cl
1005d9b0:	inc    DWORD PTR [ebp+0x8]
1005d9b3:	cmp    DWORD PTR [ebp+0x8],0x3
1005d9b7:	mov    DWORD PTR [ebp-0xc],esi
1005d9ba:	jl     0x1005d98f
1005d9bc:	mov    esi,eax
1005d9be:	push   0x2
1005d9c0:	shl    esi,0x2
1005d9c3:	lea    ecx,[ebp-0x18]
1005d9c6:	pop    edx
1005d9c7:	sub    ecx,esi
1005d9c9:	cmp    edx,eax
1005d9cb:	jl     0x1005d9d5
1005d9cd:	mov    esi,DWORD PTR [ecx]
1005d9cf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005d9d3:	jmp    0x1005d9da
1005d9d5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005d9da:	dec    edx
1005d9db:	sub    ecx,0x4
1005d9de:	test   edx,edx
1005d9e0:	jge    0x1005d9c9
1005d9e2:	mov    esi,DWORD PTR ds:0x10081208
1005d9e8:	dec    esi
1005d9e9:	lea    ecx,[esi+0x1]
1005d9ec:	mov    eax,ecx
1005d9ee:	cdq    
1005d9ef:	and    edx,0x1f
1005d9f2:	add    eax,edx
1005d9f4:	sar    eax,0x5
1005d9f7:	mov    edx,ecx
1005d9f9:	and    edx,0x8000001f
1005d9ff:	mov    DWORD PTR [ebp-0xc],eax
1005da02:	jns    0x1005da09
1005da04:	dec    edx
1005da05:	or     edx,0xffffffe0
1005da08:	inc    edx
1005da09:	push   0x1f
1005da0b:	pop    ecx
1005da0c:	sub    ecx,edx
1005da0e:	xor    edx,edx
1005da10:	inc    edx
1005da11:	shl    edx,cl
1005da13:	lea    ebx,[ebp+eax*4-0x20]
1005da17:	mov    DWORD PTR [ebp-0x10],ecx
1005da1a:	test   DWORD PTR [ebx],edx
1005da1c:	je     0x1005daa4
1005da22:	or     edx,0xffffffff
1005da25:	shl    edx,cl
1005da27:	not    edx
1005da29:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005da2d:	jmp    0x1005da34
1005da2f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005da34:	jne    0x1005da3e
1005da36:	inc    eax
1005da37:	cmp    eax,0x3
1005da3a:	jl     0x1005da2f
1005da3c:	jmp    0x1005daa4
1005da3e:	mov    eax,esi
1005da40:	cdq    
1005da41:	push   0x1f
1005da43:	pop    ecx
1005da44:	and    edx,ecx
1005da46:	add    eax,edx
1005da48:	sar    eax,0x5
1005da4b:	and    esi,0x8000001f
1005da51:	jns    0x1005da58
1005da53:	dec    esi
1005da54:	or     esi,0xffffffe0
1005da57:	inc    esi
1005da58:	and    DWORD PTR [ebp+0x8],0x0
1005da5c:	xor    edx,edx
1005da5e:	sub    ecx,esi
1005da60:	inc    edx
1005da61:	shl    edx,cl
1005da63:	lea    ecx,[ebp+eax*4-0x20]
1005da67:	mov    esi,DWORD PTR [ecx]
1005da69:	lea    edi,[esi+edx*1]
1005da6c:	cmp    edi,esi
1005da6e:	jb     0x1005da74
1005da70:	cmp    edi,edx
1005da72:	jae    0x1005da7b
1005da74:	mov    DWORD PTR [ebp+0x8],0x1
1005da7b:	mov    DWORD PTR [ecx],edi
1005da7d:	mov    ecx,DWORD PTR [ebp+0x8]
1005da80:	jmp    0x1005daa1
1005da82:	test   ecx,ecx
1005da84:	je     0x1005daa4
1005da86:	lea    ecx,[ebp+eax*4-0x20]
1005da8a:	mov    edx,DWORD PTR [ecx]
1005da8c:	lea    esi,[edx+0x1]
1005da8f:	xor    edi,edi
1005da91:	cmp    esi,edx
1005da93:	jb     0x1005da9a
1005da95:	cmp    esi,0x1
1005da98:	jae    0x1005da9d
1005da9a:	xor    edi,edi
1005da9c:	inc    edi
1005da9d:	mov    DWORD PTR [ecx],esi
1005da9f:	mov    ecx,edi
1005daa1:	dec    eax
1005daa2:	jns    0x1005da82
1005daa4:	mov    ecx,DWORD PTR [ebp-0x10]
1005daa7:	or     eax,0xffffffff
1005daaa:	shl    eax,cl
1005daac:	and    DWORD PTR [ebx],eax
1005daae:	mov    eax,DWORD PTR [ebp-0xc]
1005dab1:	inc    eax
1005dab2:	cmp    eax,0x3
1005dab5:	jge    0x1005dac4
1005dab7:	push   0x3
1005dab9:	pop    ecx
1005daba:	lea    edi,[ebp+eax*4-0x20]
1005dabe:	sub    ecx,eax
1005dac0:	xor    eax,eax
1005dac2:	rep stos DWORD PTR es:[edi],eax
1005dac4:	mov    ecx,DWORD PTR ds:0x1008120c
1005daca:	inc    ecx
1005dacb:	mov    eax,ecx
1005dacd:	cdq    
1005dace:	and    edx,0x1f
1005dad1:	add    eax,edx
1005dad3:	mov    edx,ecx
1005dad5:	sar    eax,0x5
1005dad8:	and    edx,0x8000001f
1005dade:	jns    0x1005dae5
1005dae0:	dec    edx
1005dae1:	or     edx,0xffffffe0
1005dae4:	inc    edx
1005dae5:	and    DWORD PTR [ebp-0xc],0x0
1005dae9:	and    DWORD PTR [ebp+0x8],0x0
1005daed:	or     edi,0xffffffff
1005daf0:	mov    ecx,edx
1005daf2:	shl    edi,cl
1005daf4:	mov    DWORD PTR [ebp-0x4],0x20
1005dafb:	sub    DWORD PTR [ebp-0x4],edx
1005dafe:	not    edi
1005db00:	mov    ebx,DWORD PTR [ebp+0x8]
1005db03:	lea    ebx,[ebp+ebx*4-0x20]
1005db07:	mov    esi,DWORD PTR [ebx]
1005db09:	mov    ecx,esi
1005db0b:	and    ecx,edi
1005db0d:	mov    DWORD PTR [ebp-0x10],ecx
1005db10:	mov    ecx,edx
1005db12:	shr    esi,cl
1005db14:	mov    ecx,DWORD PTR [ebp-0x4]
1005db17:	or     esi,DWORD PTR [ebp-0xc]
1005db1a:	mov    DWORD PTR [ebx],esi
1005db1c:	mov    esi,DWORD PTR [ebp-0x10]
1005db1f:	shl    esi,cl
1005db21:	inc    DWORD PTR [ebp+0x8]
1005db24:	cmp    DWORD PTR [ebp+0x8],0x3
1005db28:	mov    DWORD PTR [ebp-0xc],esi
1005db2b:	jl     0x1005db00
1005db2d:	mov    esi,eax
1005db2f:	push   0x2
1005db31:	shl    esi,0x2
1005db34:	lea    ecx,[ebp-0x18]
1005db37:	pop    edx
1005db38:	sub    ecx,esi
1005db3a:	cmp    edx,eax
1005db3c:	jl     0x1005db46
1005db3e:	mov    esi,DWORD PTR [ecx]
1005db40:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005db44:	jmp    0x1005db4b
1005db46:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005db4b:	dec    edx
1005db4c:	sub    ecx,0x4
1005db4f:	test   edx,edx
1005db51:	jge    0x1005db3a
1005db53:	push   0x2
1005db55:	xor    ebx,ebx
1005db57:	pop    eax
1005db58:	jmp    0x1005dcb7
1005db5d:	cmp    ebx,DWORD PTR ds:0x10081200
1005db63:	mov    ecx,DWORD PTR ds:0x1008120c
1005db69:	jl     0x1005dc1c
1005db6f:	xor    eax,eax
1005db71:	lea    edi,[ebp-0x20]
1005db74:	stos   DWORD PTR es:[edi],eax
1005db75:	stos   DWORD PTR es:[edi],eax
1005db76:	stos   DWORD PTR es:[edi],eax
1005db77:	or     DWORD PTR [ebp-0x20],0x80000000
1005db7e:	mov    eax,ecx
1005db80:	cdq    
1005db81:	and    edx,0x1f
1005db84:	add    eax,edx
1005db86:	mov    edx,ecx
1005db88:	sar    eax,0x5
1005db8b:	and    edx,0x8000001f
1005db91:	jns    0x1005db98
1005db93:	dec    edx
1005db94:	or     edx,0xffffffe0
1005db97:	inc    edx
1005db98:	and    DWORD PTR [ebp-0xc],0x0
1005db9c:	and    DWORD PTR [ebp+0x8],0x0
1005dba0:	or     edi,0xffffffff
1005dba3:	mov    ecx,edx
1005dba5:	shl    edi,cl
1005dba7:	mov    DWORD PTR [ebp-0x4],0x20
1005dbae:	sub    DWORD PTR [ebp-0x4],edx
1005dbb1:	not    edi
1005dbb3:	mov    ebx,DWORD PTR [ebp+0x8]
1005dbb6:	lea    ebx,[ebp+ebx*4-0x20]
1005dbba:	mov    esi,DWORD PTR [ebx]
1005dbbc:	mov    ecx,esi
1005dbbe:	and    ecx,edi
1005dbc0:	mov    DWORD PTR [ebp-0x10],ecx
1005dbc3:	mov    ecx,edx
1005dbc5:	shr    esi,cl
1005dbc7:	mov    ecx,DWORD PTR [ebp-0x4]
1005dbca:	or     esi,DWORD PTR [ebp-0xc]
1005dbcd:	mov    DWORD PTR [ebx],esi
1005dbcf:	mov    esi,DWORD PTR [ebp-0x10]
1005dbd2:	shl    esi,cl
1005dbd4:	inc    DWORD PTR [ebp+0x8]
1005dbd7:	cmp    DWORD PTR [ebp+0x8],0x3
1005dbdb:	mov    DWORD PTR [ebp-0xc],esi
1005dbde:	jl     0x1005dbb3
1005dbe0:	mov    esi,eax
1005dbe2:	push   0x2
1005dbe4:	shl    esi,0x2
1005dbe7:	lea    ecx,[ebp-0x18]
1005dbea:	pop    edx
1005dbeb:	sub    ecx,esi
1005dbed:	cmp    edx,eax
1005dbef:	jl     0x1005dbf9
1005dbf1:	mov    esi,DWORD PTR [ecx]
1005dbf3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dbf7:	jmp    0x1005dbfe
1005dbf9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dbfe:	dec    edx
1005dbff:	sub    ecx,0x4
1005dc02:	test   edx,edx
1005dc04:	jge    0x1005dbed
1005dc06:	mov    eax,ds:0x10081200
1005dc0b:	mov    ecx,DWORD PTR ds:0x10081214
1005dc11:	lea    ebx,[ecx+eax*1]
1005dc14:	xor    eax,eax
1005dc16:	inc    eax
1005dc17:	jmp    0x1005dcb7
1005dc1c:	mov    eax,ds:0x10081214
1005dc21:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005dc28:	add    ebx,eax
1005dc2a:	mov    eax,ecx
1005dc2c:	cdq    
1005dc2d:	and    edx,0x1f
1005dc30:	add    eax,edx
1005dc32:	mov    edx,ecx
1005dc34:	sar    eax,0x5
1005dc37:	and    edx,0x8000001f
1005dc3d:	jns    0x1005dc44
1005dc3f:	dec    edx
1005dc40:	or     edx,0xffffffe0
1005dc43:	inc    edx
1005dc44:	and    DWORD PTR [ebp-0xc],0x0
1005dc48:	and    DWORD PTR [ebp+0x8],0x0
1005dc4c:	or     esi,0xffffffff
1005dc4f:	mov    ecx,edx
1005dc51:	shl    esi,cl
1005dc53:	mov    DWORD PTR [ebp-0x4],0x20
1005dc5a:	sub    DWORD PTR [ebp-0x4],edx
1005dc5d:	not    esi
1005dc5f:	mov    ecx,DWORD PTR [ebp+0x8]
1005dc62:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005dc66:	mov    ecx,edi
1005dc68:	and    ecx,esi
1005dc6a:	mov    DWORD PTR [ebp-0x10],ecx
1005dc6d:	mov    ecx,edx
1005dc6f:	shr    edi,cl
1005dc71:	mov    ecx,DWORD PTR [ebp+0x8]
1005dc74:	or     edi,DWORD PTR [ebp-0xc]
1005dc77:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005dc7b:	mov    edi,DWORD PTR [ebp-0x10]
1005dc7e:	mov    ecx,DWORD PTR [ebp-0x4]
1005dc81:	shl    edi,cl
1005dc83:	inc    DWORD PTR [ebp+0x8]
1005dc86:	cmp    DWORD PTR [ebp+0x8],0x3
1005dc8a:	mov    DWORD PTR [ebp-0xc],edi
1005dc8d:	jl     0x1005dc5f
1005dc8f:	mov    esi,eax
1005dc91:	push   0x2
1005dc93:	shl    esi,0x2
1005dc96:	lea    ecx,[ebp-0x18]
1005dc99:	pop    edx
1005dc9a:	sub    ecx,esi
1005dc9c:	cmp    edx,eax
1005dc9e:	jl     0x1005dca8
1005dca0:	mov    esi,DWORD PTR [ecx]
1005dca2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005dca6:	jmp    0x1005dcad
1005dca8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005dcad:	dec    edx
1005dcae:	sub    ecx,0x4
1005dcb1:	test   edx,edx
1005dcb3:	jge    0x1005dc9c
1005dcb5:	xor    eax,eax
1005dcb7:	pop    esi
1005dcb8:	push   0x1f
1005dcba:	pop    ecx
1005dcbb:	sub    ecx,DWORD PTR ds:0x1008120c
1005dcc1:	shl    ebx,cl
1005dcc3:	mov    ecx,DWORD PTR [ebp-0x14]
1005dcc6:	neg    ecx
1005dcc8:	sbb    ecx,ecx
1005dcca:	and    ecx,0x80000000
1005dcd0:	or     ebx,ecx
1005dcd2:	mov    ecx,DWORD PTR ds:0x10081210
1005dcd8:	or     ebx,DWORD PTR [ebp-0x20]
1005dcdb:	cmp    ecx,0x40
1005dcde:	jne    0x1005dced
1005dce0:	mov    ecx,DWORD PTR [ebp+0xc]
1005dce3:	mov    edx,DWORD PTR [ebp-0x1c]
1005dce6:	mov    DWORD PTR [ecx+0x4],ebx
1005dce9:	mov    DWORD PTR [ecx],edx
1005dceb:	jmp    0x1005dcf7
1005dced:	cmp    ecx,0x20
1005dcf0:	jne    0x1005dcf7
1005dcf2:	mov    ecx,DWORD PTR [ebp+0xc]
1005dcf5:	mov    DWORD PTR [ecx],ebx
1005dcf7:	pop    edi
1005dcf8:	pop    ebx
1005dcf9:	leave  
1005dcfa:	ret    
1005dcfb:	push   ebp
1005dcfc:	mov    ebp,esp
1005dcfe:	sub    esp,0x2c
1005dd01:	mov    eax,DWORD PTR [ebp+0x8]
1005dd04:	movzx  ecx,WORD PTR [eax+0xa]
1005dd08:	push   ebx
1005dd09:	mov    ebx,ecx
1005dd0b:	and    ecx,0x8000
1005dd11:	mov    DWORD PTR [ebp-0x14],ecx
1005dd14:	mov    ecx,DWORD PTR [eax+0x6]
1005dd17:	mov    DWORD PTR [ebp-0x20],ecx
1005dd1a:	mov    ecx,DWORD PTR [eax+0x2]
1005dd1d:	movzx  eax,WORD PTR [eax]
1005dd20:	and    ebx,0x7fff
1005dd26:	sub    ebx,0x3fff
1005dd2c:	shl    eax,0x10
1005dd2f:	cmp    ebx,0xffffc001
1005dd35:	push   edi
1005dd36:	mov    DWORD PTR [ebp-0x1c],ecx
1005dd39:	mov    DWORD PTR [ebp-0x18],eax
1005dd3c:	jne    0x1005dd65
1005dd3e:	xor    ebx,ebx
1005dd40:	xor    eax,eax
1005dd42:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005dd46:	jne    0x1005dd55
1005dd48:	inc    eax
1005dd49:	cmp    eax,0x3
1005dd4c:	jl     0x1005dd42
1005dd4e:	xor    eax,eax
1005dd50:	jmp    0x1005e1fa
1005dd55:	xor    eax,eax
1005dd57:	lea    edi,[ebp-0x20]
1005dd5a:	stos   DWORD PTR es:[edi],eax
1005dd5b:	stos   DWORD PTR es:[edi],eax
1005dd5c:	push   0x2
1005dd5e:	stos   DWORD PTR es:[edi],eax
1005dd5f:	pop    eax
1005dd60:	jmp    0x1005e1fa
1005dd65:	and    DWORD PTR [ebp+0x8],0x0
1005dd69:	push   esi
1005dd6a:	lea    esi,[ebp-0x20]
1005dd6d:	lea    edi,[ebp-0x2c]
1005dd70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dd73:	mov    esi,DWORD PTR ds:0x10081220
1005dd79:	dec    esi
1005dd7a:	lea    ecx,[esi+0x1]
1005dd7d:	mov    eax,ecx
1005dd7f:	cdq    
1005dd80:	and    edx,0x1f
1005dd83:	add    eax,edx
1005dd85:	sar    eax,0x5
1005dd88:	mov    edx,ecx
1005dd8a:	and    edx,0x8000001f
1005dd90:	mov    DWORD PTR [ebp-0x10],ebx
1005dd93:	mov    DWORD PTR [ebp-0xc],eax
1005dd96:	jns    0x1005dd9d
1005dd98:	dec    edx
1005dd99:	or     edx,0xffffffe0
1005dd9c:	inc    edx
1005dd9d:	lea    edi,[ebp+eax*4-0x20]
1005dda1:	push   0x1f
1005dda3:	xor    eax,eax
1005dda5:	pop    ecx
1005dda6:	sub    ecx,edx
1005dda8:	inc    eax
1005dda9:	shl    eax,cl
1005ddab:	mov    DWORD PTR [ebp-0x8],ecx
1005ddae:	test   DWORD PTR [edi],eax
1005ddb0:	je     0x1005de43
1005ddb6:	mov    eax,DWORD PTR [ebp-0xc]
1005ddb9:	or     edx,0xffffffff
1005ddbc:	shl    edx,cl
1005ddbe:	not    edx
1005ddc0:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005ddc4:	jmp    0x1005ddcb
1005ddc6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005ddcb:	jne    0x1005ddd5
1005ddcd:	inc    eax
1005ddce:	cmp    eax,0x3
1005ddd1:	jl     0x1005ddc6
1005ddd3:	jmp    0x1005de43
1005ddd5:	mov    eax,esi
1005ddd7:	cdq    
1005ddd8:	push   0x1f
1005ddda:	pop    ecx
1005dddb:	and    edx,ecx
1005dddd:	add    eax,edx
1005dddf:	sar    eax,0x5
1005dde2:	and    esi,0x8000001f
1005dde8:	jns    0x1005ddef
1005ddea:	dec    esi
1005ddeb:	or     esi,0xffffffe0
1005ddee:	inc    esi
1005ddef:	and    DWORD PTR [ebp-0x4],0x0
1005ddf3:	sub    ecx,esi
1005ddf5:	xor    edx,edx
1005ddf7:	inc    edx
1005ddf8:	shl    edx,cl
1005ddfa:	lea    ecx,[ebp+eax*4-0x20]
1005ddfe:	mov    esi,DWORD PTR [ecx]
1005de00:	add    esi,edx
1005de02:	mov    DWORD PTR [ebp+0x8],esi
1005de05:	mov    esi,DWORD PTR [ecx]
1005de07:	cmp    DWORD PTR [ebp+0x8],esi
1005de0a:	jb     0x1005de2e
1005de0c:	cmp    DWORD PTR [ebp+0x8],edx
1005de0f:	jmp    0x1005de2c
1005de11:	test   ecx,ecx
1005de13:	je     0x1005de40
1005de15:	and    DWORD PTR [ebp-0x4],0x0
1005de19:	lea    ecx,[ebp+eax*4-0x20]
1005de1d:	mov    edx,DWORD PTR [ecx]
1005de1f:	lea    esi,[edx+0x1]
1005de22:	cmp    esi,edx
1005de24:	mov    DWORD PTR [ebp+0x8],esi
1005de27:	jb     0x1005de2e
1005de29:	cmp    esi,0x1
1005de2c:	jae    0x1005de35
1005de2e:	mov    DWORD PTR [ebp-0x4],0x1
1005de35:	dec    eax
1005de36:	mov    edx,DWORD PTR [ebp+0x8]
1005de39:	mov    DWORD PTR [ecx],edx
1005de3b:	mov    ecx,DWORD PTR [ebp-0x4]
1005de3e:	jns    0x1005de11
1005de40:	mov    DWORD PTR [ebp+0x8],ecx
1005de43:	mov    ecx,DWORD PTR [ebp-0x8]
1005de46:	or     eax,0xffffffff
1005de49:	shl    eax,cl
1005de4b:	and    DWORD PTR [edi],eax
1005de4d:	mov    eax,DWORD PTR [ebp-0xc]
1005de50:	inc    eax
1005de51:	cmp    eax,0x3
1005de54:	jge    0x1005de63
1005de56:	push   0x3
1005de58:	pop    ecx
1005de59:	lea    edi,[ebp+eax*4-0x20]
1005de5d:	sub    ecx,eax
1005de5f:	xor    eax,eax
1005de61:	rep stos DWORD PTR es:[edi],eax
1005de63:	cmp    DWORD PTR [ebp+0x8],0x0
1005de67:	je     0x1005de6a
1005de69:	inc    ebx
1005de6a:	mov    eax,ds:0x1008121c
1005de6f:	mov    ecx,eax
1005de71:	sub    ecx,DWORD PTR ds:0x10081220
1005de77:	cmp    ebx,ecx
1005de79:	jge    0x1005de88
1005de7b:	xor    eax,eax
1005de7d:	lea    edi,[ebp-0x20]
1005de80:	stos   DWORD PTR es:[edi],eax
1005de81:	stos   DWORD PTR es:[edi],eax
1005de82:	stos   DWORD PTR es:[edi],eax
1005de83:	jmp    0x1005e095
1005de88:	cmp    ebx,eax
1005de8a:	jg     0x1005e09f
1005de90:	sub    eax,DWORD PTR [ebp-0x10]
1005de93:	lea    esi,[ebp-0x2c]
1005de96:	mov    ecx,eax
1005de98:	lea    edi,[ebp-0x20]
1005de9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005de9c:	cdq    
1005de9d:	and    edx,0x1f
1005dea0:	add    eax,edx
1005dea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005dea3:	mov    edx,ecx
1005dea5:	sar    eax,0x5
1005dea8:	and    edx,0x8000001f
1005deae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005deaf:	jns    0x1005deb6
1005deb1:	dec    edx
1005deb2:	or     edx,0xffffffe0
1005deb5:	inc    edx
1005deb6:	and    DWORD PTR [ebp-0xc],0x0
1005deba:	and    DWORD PTR [ebp+0x8],0x0
1005debe:	or     edi,0xffffffff
1005dec1:	mov    ecx,edx
1005dec3:	shl    edi,cl
1005dec5:	mov    DWORD PTR [ebp-0x4],0x20
1005decc:	sub    DWORD PTR [ebp-0x4],edx
1005decf:	not    edi
1005ded1:	mov    ebx,DWORD PTR [ebp+0x8]
1005ded4:	lea    ebx,[ebp+ebx*4-0x20]
1005ded8:	mov    esi,DWORD PTR [ebx]
1005deda:	mov    ecx,esi
1005dedc:	and    ecx,edi
1005dede:	mov    DWORD PTR [ebp-0x10],ecx
1005dee1:	mov    ecx,edx
1005dee3:	shr    esi,cl
1005dee5:	mov    ecx,DWORD PTR [ebp-0x4]
1005dee8:	or     esi,DWORD PTR [ebp-0xc]
1005deeb:	mov    DWORD PTR [ebx],esi
1005deed:	mov    esi,DWORD PTR [ebp-0x10]
1005def0:	shl    esi,cl
1005def2:	inc    DWORD PTR [ebp+0x8]
1005def5:	cmp    DWORD PTR [ebp+0x8],0x3
1005def9:	mov    DWORD PTR [ebp-0xc],esi
1005defc:	jl     0x1005ded1
1005defe:	mov    esi,eax
1005df00:	push   0x2
1005df02:	shl    esi,0x2
1005df05:	lea    ecx,[ebp-0x18]
1005df08:	pop    edx
1005df09:	sub    ecx,esi
1005df0b:	cmp    edx,eax
1005df0d:	jl     0x1005df17
1005df0f:	mov    esi,DWORD PTR [ecx]
1005df11:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005df15:	jmp    0x1005df1c
1005df17:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005df1c:	dec    edx
1005df1d:	sub    ecx,0x4
1005df20:	test   edx,edx
1005df22:	jge    0x1005df0b
1005df24:	mov    esi,DWORD PTR ds:0x10081220
1005df2a:	dec    esi
1005df2b:	lea    ecx,[esi+0x1]
1005df2e:	mov    eax,ecx
1005df30:	cdq    
1005df31:	and    edx,0x1f
1005df34:	add    eax,edx
1005df36:	sar    eax,0x5
1005df39:	mov    edx,ecx
1005df3b:	and    edx,0x8000001f
1005df41:	mov    DWORD PTR [ebp-0xc],eax
1005df44:	jns    0x1005df4b
1005df46:	dec    edx
1005df47:	or     edx,0xffffffe0
1005df4a:	inc    edx
1005df4b:	push   0x1f
1005df4d:	pop    ecx
1005df4e:	sub    ecx,edx
1005df50:	xor    edx,edx
1005df52:	inc    edx
1005df53:	shl    edx,cl
1005df55:	lea    ebx,[ebp+eax*4-0x20]
1005df59:	mov    DWORD PTR [ebp-0x10],ecx
1005df5c:	test   DWORD PTR [ebx],edx
1005df5e:	je     0x1005dfe6
1005df64:	or     edx,0xffffffff
1005df67:	shl    edx,cl
1005df69:	not    edx
1005df6b:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005df6f:	jmp    0x1005df76
1005df71:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005df76:	jne    0x1005df80
1005df78:	inc    eax
1005df79:	cmp    eax,0x3
1005df7c:	jl     0x1005df71
1005df7e:	jmp    0x1005dfe6
1005df80:	mov    eax,esi
1005df82:	cdq    
1005df83:	push   0x1f
1005df85:	pop    ecx
1005df86:	and    edx,ecx
1005df88:	add    eax,edx
1005df8a:	sar    eax,0x5
1005df8d:	and    esi,0x8000001f
1005df93:	jns    0x1005df9a
1005df95:	dec    esi
1005df96:	or     esi,0xffffffe0
1005df99:	inc    esi
1005df9a:	and    DWORD PTR [ebp+0x8],0x0
1005df9e:	xor    edx,edx
1005dfa0:	sub    ecx,esi
1005dfa2:	inc    edx
1005dfa3:	shl    edx,cl
1005dfa5:	lea    ecx,[ebp+eax*4-0x20]
1005dfa9:	mov    esi,DWORD PTR [ecx]
1005dfab:	lea    edi,[esi+edx*1]
1005dfae:	cmp    edi,esi
1005dfb0:	jb     0x1005dfb6
1005dfb2:	cmp    edi,edx
1005dfb4:	jae    0x1005dfbd
1005dfb6:	mov    DWORD PTR [ebp+0x8],0x1
1005dfbd:	mov    DWORD PTR [ecx],edi
1005dfbf:	mov    ecx,DWORD PTR [ebp+0x8]
1005dfc2:	jmp    0x1005dfe3
1005dfc4:	test   ecx,ecx
1005dfc6:	je     0x1005dfe6
1005dfc8:	lea    ecx,[ebp+eax*4-0x20]
1005dfcc:	mov    edx,DWORD PTR [ecx]
1005dfce:	lea    esi,[edx+0x1]
1005dfd1:	xor    edi,edi
1005dfd3:	cmp    esi,edx
1005dfd5:	jb     0x1005dfdc
1005dfd7:	cmp    esi,0x1
1005dfda:	jae    0x1005dfdf
1005dfdc:	xor    edi,edi
1005dfde:	inc    edi
1005dfdf:	mov    DWORD PTR [ecx],esi
1005dfe1:	mov    ecx,edi
1005dfe3:	dec    eax
1005dfe4:	jns    0x1005dfc4
1005dfe6:	mov    ecx,DWORD PTR [ebp-0x10]
1005dfe9:	or     eax,0xffffffff
1005dfec:	shl    eax,cl
1005dfee:	and    DWORD PTR [ebx],eax
1005dff0:	mov    eax,DWORD PTR [ebp-0xc]
1005dff3:	inc    eax
1005dff4:	cmp    eax,0x3
1005dff7:	jge    0x1005e006
1005dff9:	push   0x3
1005dffb:	pop    ecx
1005dffc:	lea    edi,[ebp+eax*4-0x20]
1005e000:	sub    ecx,eax
1005e002:	xor    eax,eax
1005e004:	rep stos DWORD PTR es:[edi],eax
1005e006:	mov    ecx,DWORD PTR ds:0x10081224
1005e00c:	inc    ecx
1005e00d:	mov    eax,ecx
1005e00f:	cdq    
1005e010:	and    edx,0x1f
1005e013:	add    eax,edx
1005e015:	mov    edx,ecx
1005e017:	sar    eax,0x5
1005e01a:	and    edx,0x8000001f
1005e020:	jns    0x1005e027
1005e022:	dec    edx
1005e023:	or     edx,0xffffffe0
1005e026:	inc    edx
1005e027:	and    DWORD PTR [ebp-0xc],0x0
1005e02b:	and    DWORD PTR [ebp+0x8],0x0
1005e02f:	or     edi,0xffffffff
1005e032:	mov    ecx,edx
1005e034:	shl    edi,cl
1005e036:	mov    DWORD PTR [ebp-0x4],0x20
1005e03d:	sub    DWORD PTR [ebp-0x4],edx
1005e040:	not    edi
1005e042:	mov    ebx,DWORD PTR [ebp+0x8]
1005e045:	lea    ebx,[ebp+ebx*4-0x20]
1005e049:	mov    esi,DWORD PTR [ebx]
1005e04b:	mov    ecx,esi
1005e04d:	and    ecx,edi
1005e04f:	mov    DWORD PTR [ebp-0x10],ecx
1005e052:	mov    ecx,edx
1005e054:	shr    esi,cl
1005e056:	mov    ecx,DWORD PTR [ebp-0x4]
1005e059:	or     esi,DWORD PTR [ebp-0xc]
1005e05c:	mov    DWORD PTR [ebx],esi
1005e05e:	mov    esi,DWORD PTR [ebp-0x10]
1005e061:	shl    esi,cl
1005e063:	inc    DWORD PTR [ebp+0x8]
1005e066:	cmp    DWORD PTR [ebp+0x8],0x3
1005e06a:	mov    DWORD PTR [ebp-0xc],esi
1005e06d:	jl     0x1005e042
1005e06f:	mov    esi,eax
1005e071:	push   0x2
1005e073:	shl    esi,0x2
1005e076:	lea    ecx,[ebp-0x18]
1005e079:	pop    edx
1005e07a:	sub    ecx,esi
1005e07c:	cmp    edx,eax
1005e07e:	jl     0x1005e088
1005e080:	mov    esi,DWORD PTR [ecx]
1005e082:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005e086:	jmp    0x1005e08d
1005e088:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005e08d:	dec    edx
1005e08e:	sub    ecx,0x4
1005e091:	test   edx,edx
1005e093:	jge    0x1005e07c
1005e095:	push   0x2
1005e097:	xor    ebx,ebx
1005e099:	pop    eax
1005e09a:	jmp    0x1005e1f9
1005e09f:	cmp    ebx,DWORD PTR ds:0x10081218
1005e0a5:	mov    ecx,DWORD PTR ds:0x10081224
1005e0ab:	jl     0x1005e15e
1005e0b1:	xor    eax,eax
1005e0b3:	lea    edi,[ebp-0x20]
1005e0b6:	stos   DWORD PTR es:[edi],eax
1005e0b7:	stos   DWORD PTR es:[edi],eax
1005e0b8:	stos   DWORD PTR es:[edi],eax
1005e0b9:	or     DWORD PTR [ebp-0x20],0x80000000
1005e0c0:	mov    eax,ecx
1005e0c2:	cdq    
1005e0c3:	and    edx,0x1f
1005e0c6:	add    eax,edx
1005e0c8:	mov    edx,ecx
1005e0ca:	sar    eax,0x5
1005e0cd:	and    edx,0x8000001f
1005e0d3:	jns    0x1005e0da
1005e0d5:	dec    edx
1005e0d6:	or     edx,0xffffffe0
1005e0d9:	inc    edx
1005e0da:	and    DWORD PTR [ebp-0xc],0x0
1005e0de:	and    DWORD PTR [ebp+0x8],0x0
1005e0e2:	or     edi,0xffffffff
1005e0e5:	mov    ecx,edx
1005e0e7:	shl    edi,cl
1005e0e9:	mov    DWORD PTR [ebp-0x4],0x20
1005e0f0:	sub    DWORD PTR [ebp-0x4],edx
1005e0f3:	not    edi
1005e0f5:	mov    ebx,DWORD PTR [ebp+0x8]
1005e0f8:	lea    ebx,[ebp+ebx*4-0x20]
1005e0fc:	mov    esi,DWORD PTR [ebx]
1005e0fe:	mov    ecx,esi
1005e100:	and    ecx,edi
1005e102:	mov    DWORD PTR [ebp-0x10],ecx
1005e105:	mov    ecx,edx
1005e107:	shr    esi,cl
1005e109:	mov    ecx,DWORD PTR [ebp-0x4]
1005e10c:	or     esi,DWORD PTR [ebp-0xc]
1005e10f:	mov    DWORD PTR [ebx],esi
1005e111:	mov    esi,DWORD PTR [ebp-0x10]
1005e114:	shl    esi,cl
1005e116:	inc    DWORD PTR [ebp+0x8]
1005e119:	cmp    DWORD PTR [ebp+0x8],0x3
1005e11d:	mov    DWORD PTR [ebp-0xc],esi
1005e120:	jl     0x1005e0f5
1005e122:	mov    esi,eax
1005e124:	push   0x2
1005e126:	shl    esi,0x2
1005e129:	lea    ecx,[ebp-0x18]
1005e12c:	pop    edx
1005e12d:	sub    ecx,esi
1005e12f:	cmp    edx,eax
1005e131:	jl     0x1005e13b
1005e133:	mov    esi,DWORD PTR [ecx]
1005e135:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005e139:	jmp    0x1005e140
1005e13b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005e140:	dec    edx
1005e141:	sub    ecx,0x4
1005e144:	test   edx,edx
1005e146:	jge    0x1005e12f
1005e148:	mov    eax,ds:0x10081218
1005e14d:	mov    ecx,DWORD PTR ds:0x1008122c
1005e153:	lea    ebx,[ecx+eax*1]
1005e156:	xor    eax,eax
1005e158:	inc    eax
1005e159:	jmp    0x1005e1f9
1005e15e:	mov    eax,ds:0x1008122c
1005e163:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005e16a:	add    ebx,eax
1005e16c:	mov    eax,ecx
1005e16e:	cdq    
1005e16f:	and    edx,0x1f
1005e172:	add    eax,edx
1005e174:	mov    edx,ecx
1005e176:	sar    eax,0x5
1005e179:	and    edx,0x8000001f
1005e17f:	jns    0x1005e186
1005e181:	dec    edx
1005e182:	or     edx,0xffffffe0
1005e185:	inc    edx
1005e186:	and    DWORD PTR [ebp-0xc],0x0
1005e18a:	and    DWORD PTR [ebp+0x8],0x0
1005e18e:	or     esi,0xffffffff
1005e191:	mov    ecx,edx
1005e193:	shl    esi,cl
1005e195:	mov    DWORD PTR [ebp-0x4],0x20
1005e19c:	sub    DWORD PTR [ebp-0x4],edx
1005e19f:	not    esi
1005e1a1:	mov    ecx,DWORD PTR [ebp+0x8]
1005e1a4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005e1a8:	mov    ecx,edi
1005e1aa:	and    ecx,esi
1005e1ac:	mov    DWORD PTR [ebp-0x10],ecx
1005e1af:	mov    ecx,edx
1005e1b1:	shr    edi,cl
1005e1b3:	mov    ecx,DWORD PTR [ebp+0x8]
1005e1b6:	or     edi,DWORD PTR [ebp-0xc]
1005e1b9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005e1bd:	mov    edi,DWORD PTR [ebp-0x10]
1005e1c0:	mov    ecx,DWORD PTR [ebp-0x4]
1005e1c3:	shl    edi,cl
1005e1c5:	inc    DWORD PTR [ebp+0x8]
1005e1c8:	cmp    DWORD PTR [ebp+0x8],0x3
1005e1cc:	mov    DWORD PTR [ebp-0xc],edi
1005e1cf:	jl     0x1005e1a1
1005e1d1:	mov    esi,eax
1005e1d3:	push   0x2
1005e1d5:	shl    esi,0x2
1005e1d8:	lea    ecx,[ebp-0x18]
1005e1db:	pop    edx
1005e1dc:	sub    ecx,esi
1005e1de:	cmp    edx,eax
1005e1e0:	jl     0x1005e1ea
1005e1e2:	mov    esi,DWORD PTR [ecx]
1005e1e4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005e1e8:	jmp    0x1005e1ef
1005e1ea:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005e1ef:	dec    edx
1005e1f0:	sub    ecx,0x4
1005e1f3:	test   edx,edx
1005e1f5:	jge    0x1005e1de
1005e1f7:	xor    eax,eax
1005e1f9:	pop    esi
1005e1fa:	push   0x1f
1005e1fc:	pop    ecx
1005e1fd:	sub    ecx,DWORD PTR ds:0x10081224
1005e203:	shl    ebx,cl
1005e205:	mov    ecx,DWORD PTR [ebp-0x14]
1005e208:	neg    ecx
1005e20a:	sbb    ecx,ecx
1005e20c:	and    ecx,0x80000000
1005e212:	or     ebx,ecx
1005e214:	mov    ecx,DWORD PTR ds:0x10081228
1005e21a:	or     ebx,DWORD PTR [ebp-0x20]
1005e21d:	cmp    ecx,0x40
1005e220:	jne    0x1005e22f
1005e222:	mov    ecx,DWORD PTR [ebp+0xc]
1005e225:	mov    edx,DWORD PTR [ebp-0x1c]
1005e228:	mov    DWORD PTR [ecx+0x4],ebx
1005e22b:	mov    DWORD PTR [ecx],edx
1005e22d:	jmp    0x1005e239
1005e22f:	cmp    ecx,0x20
1005e232:	jne    0x1005e239
1005e234:	mov    ecx,DWORD PTR [ebp+0xc]
1005e237:	mov    DWORD PTR [ecx],ebx
1005e239:	pop    edi
1005e23a:	pop    ebx
1005e23b:	leave  
1005e23c:	ret    
1005e23d:	push   ebp
1005e23e:	mov    ebp,esp
1005e240:	sub    esp,0x7c
1005e243:	mov    eax,ds:0x100801ac
1005e248:	xor    eax,ebp
1005e24a:	mov    DWORD PTR [ebp-0x4],eax
1005e24d:	mov    eax,DWORD PTR [ebp+0x8]
1005e250:	push   ebx
1005e251:	xor    ebx,ebx
1005e253:	push   esi
1005e254:	xor    esi,esi
1005e256:	mov    DWORD PTR [ebp-0x7c],eax
1005e259:	mov    eax,DWORD PTR [ebp+0xc]
1005e25c:	inc    esi
1005e25d:	xor    ecx,ecx
1005e25f:	cmp    DWORD PTR [ebp+0x24],ebx
1005e262:	push   edi
1005e263:	mov    DWORD PTR [ebp-0x70],eax
1005e266:	lea    edi,[ebp-0x20]
1005e269:	mov    DWORD PTR [ebp-0x74],ebx
1005e26c:	mov    DWORD PTR [ebp-0x68],esi
1005e26f:	mov    DWORD PTR [ebp-0x4c],ebx
1005e272:	mov    DWORD PTR [ebp-0x58],ebx
1005e275:	mov    DWORD PTR [ebp-0x5c],ebx
1005e278:	mov    DWORD PTR [ebp-0x60],ebx
1005e27b:	mov    DWORD PTR [ebp-0x64],ebx
1005e27e:	mov    DWORD PTR [ebp-0x50],ebx
1005e281:	mov    DWORD PTR [ebp-0x6c],ebx
1005e284:	jne    0x1005e2a5
1005e286:	call   0x10046c41
1005e28b:	push   ebx
1005e28c:	push   ebx
1005e28d:	push   ebx
1005e28e:	push   ebx
1005e28f:	push   ebx
1005e290:	mov    DWORD PTR [eax],0x16
1005e296:	call   0x100435e1
1005e29b:	add    esp,0x14
1005e29e:	xor    eax,eax
1005e2a0:	jmp    0x1005e8be
1005e2a5:	mov    edx,DWORD PTR [ebp+0x10]
1005e2a8:	mov    DWORD PTR [ebp-0x54],edx
1005e2ab:	mov    al,BYTE PTR [edx]
1005e2ad:	cmp    al,0x20
1005e2af:	je     0x1005e2bd
1005e2b1:	cmp    al,0x9
1005e2b3:	je     0x1005e2bd
1005e2b5:	cmp    al,0xa
1005e2b7:	je     0x1005e2bd
1005e2b9:	cmp    al,0xd
1005e2bb:	jne    0x1005e2c0
1005e2bd:	inc    edx
1005e2be:	jmp    0x1005e2ab
1005e2c0:	mov    bl,0x30
1005e2c2:	mov    al,BYTE PTR [edx]
1005e2c4:	inc    edx
1005e2c5:	cmp    ecx,0xb
1005e2c8:	ja     0x1005e4fd
1005e2ce:	jmp    DWORD PTR [ecx*4+0x1005e8cd]
1005e2d5:	mov    cl,al
1005e2d7:	sub    cl,0x31
1005e2da:	cmp    cl,0x8
1005e2dd:	ja     0x1005e2e5
1005e2df:	push   0x3
1005e2e1:	pop    ecx
1005e2e2:	dec    edx
1005e2e3:	jmp    0x1005e2c2
1005e2e5:	mov    ecx,DWORD PTR [ebp+0x24]
1005e2e8:	mov    ecx,DWORD PTR [ecx]
1005e2ea:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e2f0:	mov    ecx,DWORD PTR [ecx]
1005e2f2:	cmp    al,BYTE PTR [ecx]
1005e2f4:	jne    0x1005e2fb
1005e2f6:	push   0x5
1005e2f8:	pop    ecx
1005e2f9:	jmp    0x1005e2c2
1005e2fb:	movsx  eax,al
1005e2fe:	sub    eax,0x2b
1005e301:	je     0x1005e320
1005e303:	dec    eax
1005e304:	dec    eax
1005e305:	je     0x1005e314
1005e307:	sub    eax,0x3
1005e30a:	jne    0x1005e49b
1005e310:	mov    ecx,esi
1005e312:	jmp    0x1005e2c2
1005e314:	push   0x2
1005e316:	pop    ecx
1005e317:	mov    DWORD PTR [ebp-0x74],0x8000
1005e31e:	jmp    0x1005e2c2
1005e320:	and    DWORD PTR [ebp-0x74],0x0
1005e324:	push   0x2
1005e326:	pop    ecx
1005e327:	jmp    0x1005e2c2
1005e329:	mov    cl,al
1005e32b:	sub    cl,0x31
1005e32e:	cmp    cl,0x8
1005e331:	mov    DWORD PTR [ebp-0x58],esi
1005e334:	jbe    0x1005e2df
1005e336:	mov    ecx,DWORD PTR [ebp+0x24]
1005e339:	mov    ecx,DWORD PTR [ecx]
1005e33b:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e341:	mov    ecx,DWORD PTR [ecx]
1005e343:	cmp    al,BYTE PTR [ecx]
1005e345:	jne    0x1005e34b
1005e347:	push   0x4
1005e349:	jmp    0x1005e2f8
1005e34b:	cmp    al,0x2b
1005e34d:	je     0x1005e377
1005e34f:	cmp    al,0x2d
1005e351:	je     0x1005e377
1005e353:	cmp    al,bl
1005e355:	je     0x1005e310
1005e357:	cmp    al,0x43
1005e359:	jle    0x1005e49b
1005e35f:	cmp    al,0x45
1005e361:	jle    0x1005e373
1005e363:	cmp    al,0x63
1005e365:	jle    0x1005e49b
1005e36b:	cmp    al,0x65
1005e36d:	jg     0x1005e49b
1005e373:	push   0x6
1005e375:	jmp    0x1005e2f8
1005e377:	dec    edx
1005e378:	push   0xb
1005e37a:	jmp    0x1005e2f8
1005e37f:	mov    cl,al
1005e381:	sub    cl,0x31
1005e384:	cmp    cl,0x8
1005e387:	jbe    0x1005e2df
1005e38d:	mov    ecx,DWORD PTR [ebp+0x24]
1005e390:	mov    ecx,DWORD PTR [ecx]
1005e392:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e398:	mov    ecx,DWORD PTR [ecx]
1005e39a:	cmp    al,BYTE PTR [ecx]
1005e39c:	je     0x1005e2f6
1005e3a2:	cmp    al,bl
1005e3a4:	je     0x1005e310
1005e3aa:	mov    edx,DWORD PTR [ebp-0x54]
1005e3ad:	jmp    0x1005e4c6
1005e3b2:	mov    DWORD PTR [ebp-0x58],esi
1005e3b5:	jmp    0x1005e3d1
1005e3b7:	cmp    al,0x39
1005e3b9:	jg     0x1005e3d5
1005e3bb:	cmp    DWORD PTR [ebp-0x4c],0x19
1005e3bf:	jae    0x1005e3cb
1005e3c1:	inc    DWORD PTR [ebp-0x4c]
1005e3c4:	sub    al,bl
1005e3c6:	mov    BYTE PTR [edi],al
1005e3c8:	inc    edi
1005e3c9:	jmp    0x1005e3ce
1005e3cb:	inc    DWORD PTR [ebp-0x50]
1005e3ce:	mov    al,BYTE PTR [edx]
1005e3d0:	inc    edx
1005e3d1:	cmp    al,bl
1005e3d3:	jge    0x1005e3b7
1005e3d5:	mov    ecx,DWORD PTR [ebp+0x24]
1005e3d8:	mov    ecx,DWORD PTR [ecx]
1005e3da:	mov    ecx,DWORD PTR [ecx+0xbc]
1005e3e0:	mov    ecx,DWORD PTR [ecx]
1005e3e2:	cmp    al,BYTE PTR [ecx]
1005e3e4:	je     0x1005e347
1005e3ea:	cmp    al,0x2b
1005e3ec:	je     0x1005e377
1005e3ee:	cmp    al,0x2d
1005e3f0:	je     0x1005e377
1005e3f2:	jmp    0x1005e357
1005e3f7:	cmp    DWORD PTR [ebp-0x4c],0x0
1005e3fb:	mov    DWORD PTR [ebp-0x58],esi
1005e3fe:	mov    DWORD PTR [ebp-0x5c],esi
1005e401:	jne    0x1005e429
1005e403:	jmp    0x1005e40b
1005e405:	dec    DWORD PTR [ebp-0x50]
1005e408:	mov    al,BYTE PTR [edx]
1005e40a:	inc    edx
1005e40b:	cmp    al,bl
1005e40d:	je     0x1005e405
1005e40f:	jmp    0x1005e429
1005e411:	cmp    al,0x39
1005e413:	jg     0x1005e3ea
1005e415:	cmp    DWORD PTR [ebp-0x4c],0x19
1005e419:	jae    0x1005e426
1005e41b:	inc    DWORD PTR [ebp-0x4c]
1005e41e:	sub    al,bl
1005e420:	mov    BYTE PTR [edi],al
1005e422:	inc    edi
1005e423:	dec    DWORD PTR [ebp-0x50]
1005e426:	mov    al,BYTE PTR [edx]
1005e428:	inc    edx
1005e429:	cmp    al,bl
1005e42b:	jge    0x1005e411
1005e42d:	jmp    0x1005e3ea
1005e42f:	sub    al,bl
1005e431:	cmp    al,0x9
1005e433:	mov    DWORD PTR [ebp-0x5c],esi
1005e436:	ja     0x1005e3aa
1005e43c:	push   0x4
1005e43e:	jmp    0x1005e2e1
1005e443:	lea    ecx,[edx-0x2]
1005e446:	mov    DWORD PTR [ebp-0x54],ecx
1005e449:	mov    cl,al
1005e44b:	sub    cl,0x31
1005e44e:	cmp    cl,0x8
1005e451:	ja     0x1005e45a
1005e453:	push   0x9
1005e455:	jmp    0x1005e2e1
1005e45a:	movsx  eax,al
1005e45d:	sub    eax,0x2b
1005e460:	je     0x1005e482
1005e462:	dec    eax
1005e463:	dec    eax
1005e464:	je     0x1005e476
1005e466:	sub    eax,0x3
1005e469:	jne    0x1005e3aa
1005e46f:	push   0x8
1005e471:	jmp    0x1005e2f8
1005e476:	or     DWORD PTR [ebp-0x68],0xffffffff
1005e47a:	push   0x7
1005e47c:	pop    ecx
1005e47d:	jmp    0x1005e2c2
1005e482:	push   0x7
1005e484:	jmp    0x1005e2f8
1005e489:	mov    DWORD PTR [ebp-0x60],esi
1005e48c:	jmp    0x1005e491
1005e48e:	mov    al,BYTE PTR [edx]
1005e490:	inc    edx
1005e491:	cmp    al,bl
1005e493:	je     0x1005e48e
1005e495:	sub    al,0x31
1005e497:	cmp    al,0x8
1005e499:	jbe    0x1005e453
1005e49b:	dec    edx
1005e49c:	jmp    0x1005e4c6
1005e49e:	mov    cl,al
1005e4a0:	sub    cl,0x31
1005e4a3:	cmp    cl,0x8
1005e4a6:	jbe    0x1005e453
1005e4a8:	cmp    al,bl
1005e4aa:	jmp    0x1005e469
1005e4ac:	cmp    DWORD PTR [ebp+0x20],0x0
1005e4b0:	je     0x1005e4f9
1005e4b2:	movsx  eax,al
1005e4b5:	sub    eax,0x2b
1005e4b8:	lea    ecx,[edx-0x1]
1005e4bb:	mov    DWORD PTR [ebp-0x54],ecx
1005e4be:	je     0x1005e482
1005e4c0:	dec    eax
1005e4c1:	dec    eax
1005e4c2:	je     0x1005e476
1005e4c4:	mov    edx,ecx
1005e4c6:	cmp    DWORD PTR [ebp-0x58],0x0
1005e4ca:	mov    eax,DWORD PTR [ebp-0x70]
1005e4cd:	mov    DWORD PTR [eax],edx
1005e4cf:	je     0x1005e879
1005e4d5:	push   0x18
1005e4d7:	pop    eax
1005e4d8:	cmp    DWORD PTR [ebp-0x4c],eax
1005e4db:	jbe    0x1005e4ed
1005e4dd:	cmp    BYTE PTR [ebp-0x9],0x5
1005e4e1:	jl     0x1005e4e6
1005e4e3:	inc    BYTE PTR [ebp-0x9]
1005e4e6:	dec    edi
1005e4e7:	inc    DWORD PTR [ebp-0x50]
1005e4ea:	mov    DWORD PTR [ebp-0x4c],eax
1005e4ed:	cmp    DWORD PTR [ebp-0x4c],0x0
1005e4f1:	jbe    0x1005e8a0
1005e4f7:	jmp    0x1005e552
1005e4f9:	push   0xa
1005e4fb:	pop    ecx
1005e4fc:	dec    edx
1005e4fd:	cmp    ecx,0xa
1005e500:	jne    0x1005e2c2
1005e506:	jmp    0x1005e4c6
1005e508:	mov    DWORD PTR [ebp-0x60],esi
1005e50b:	xor    ecx,ecx
1005e50d:	jmp    0x1005e528
1005e50f:	cmp    al,0x39
1005e511:	jg     0x1005e533
1005e513:	imul   ecx,ecx,0xa
1005e516:	movsx  esi,al
1005e519:	lea    ecx,[ecx+esi*1-0x30]
1005e51d:	cmp    ecx,0x1450
1005e523:	jg     0x1005e52e
1005e525:	mov    al,BYTE PTR [edx]
1005e527:	inc    edx
1005e528:	cmp    al,bl
1005e52a:	jge    0x1005e50f
1005e52c:	jmp    0x1005e533
1005e52e:	mov    ecx,0x1451
1005e533:	mov    DWORD PTR [ebp-0x64],ecx
1005e536:	jmp    0x1005e543
1005e538:	cmp    al,0x39
1005e53a:	jg     0x1005e49b
1005e540:	mov    al,BYTE PTR [edx]
1005e542:	inc    edx
1005e543:	cmp    al,bl
1005e545:	jge    0x1005e538
1005e547:	jmp    0x1005e49b
1005e54c:	dec    DWORD PTR [ebp-0x4c]
1005e54f:	inc    DWORD PTR [ebp-0x50]
1005e552:	dec    edi
1005e553:	cmp    BYTE PTR [edi],0x0
1005e556:	je     0x1005e54c
1005e558:	lea    eax,[ebp-0x3c]
1005e55b:	push   eax
1005e55c:	push   DWORD PTR [ebp-0x4c]
1005e55f:	lea    eax,[ebp-0x20]
1005e562:	push   eax
1005e563:	call   0x1005f5f4
1005e568:	mov    eax,DWORD PTR [ebp-0x64]
1005e56b:	xor    ecx,ecx
1005e56d:	add    esp,0xc
1005e570:	cmp    DWORD PTR [ebp-0x68],ecx
1005e573:	jge    0x1005e577
1005e575:	neg    eax
1005e577:	add    eax,DWORD PTR [ebp-0x50]
1005e57a:	cmp    DWORD PTR [ebp-0x60],ecx
1005e57d:	jne    0x1005e582
1005e57f:	add    eax,DWORD PTR [ebp+0x18]
1005e582:	cmp    DWORD PTR [ebp-0x5c],ecx
1005e585:	jne    0x1005e58a
1005e587:	sub    eax,DWORD PTR [ebp+0x1c]
1005e58a:	cmp    eax,0x1450
1005e58f:	jg     0x1005e882
1005e595:	cmp    eax,0xffffebb0
1005e59a:	jl     0x1005e899
1005e5a0:	mov    esi,0x10081230
1005e5a5:	sub    esi,0x60
1005e5a8:	cmp    eax,ecx
1005e5aa:	mov    DWORD PTR [ebp-0x54],eax
1005e5ad:	je     0x1005e867
1005e5b3:	jge    0x1005e5c2
1005e5b5:	neg    eax
1005e5b7:	mov    esi,0x10081390
1005e5bc:	mov    DWORD PTR [ebp-0x54],eax
1005e5bf:	sub    esi,0x60
1005e5c2:	cmp    DWORD PTR [ebp+0x14],ecx
1005e5c5:	jne    0x1005e5cb
1005e5c7:	mov    WORD PTR [ebp-0x3c],cx
1005e5cb:	cmp    DWORD PTR [ebp-0x54],ecx
1005e5ce:	je     0x1005e867
1005e5d4:	mov    eax,DWORD PTR [ebp-0x54]
1005e5d7:	sar    DWORD PTR [ebp-0x54],0x3
1005e5db:	add    esi,0x54
1005e5de:	and    eax,0x7
1005e5e1:	test   eax,eax
1005e5e3:	mov    DWORD PTR [ebp-0x4c],esi
1005e5e6:	je     0x1005e85d
1005e5ec:	imul   eax,eax,0xc
1005e5ef:	add    eax,esi
1005e5f1:	mov    ebx,eax
1005e5f3:	cmp    WORD PTR [ebx],0x8000
1005e5f8:	mov    DWORD PTR [ebp-0x70],ebx
1005e5fb:	jb     0x1005e611
1005e5fd:	mov    esi,ebx
1005e5ff:	lea    edi,[ebp-0x48]
1005e602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e605:	dec    DWORD PTR [ebp-0x46]
1005e608:	mov    esi,DWORD PTR [ebp-0x4c]
1005e60b:	lea    ebx,[ebp-0x48]
1005e60e:	mov    DWORD PTR [ebp-0x70],ebx
1005e611:	movzx  edx,WORD PTR [ebx+0xa]
1005e615:	mov    ecx,DWORD PTR [ebp-0x32]
1005e618:	xor    eax,eax
1005e61a:	mov    DWORD PTR [ebp-0x50],eax
1005e61d:	mov    DWORD PTR [ebp-0x2c],eax
1005e620:	mov    DWORD PTR [ebp-0x28],eax
1005e623:	mov    DWORD PTR [ebp-0x24],eax
1005e626:	mov    eax,edx
1005e628:	mov    edi,0x7fff
1005e62d:	xor    eax,ecx
1005e62f:	and    ecx,edi
1005e631:	and    edx,edi
1005e633:	and    eax,0x8000
1005e638:	cmp    cx,0x7fff
1005e63d:	lea    edi,[edx+ecx*1]
1005e640:	movzx  edi,di
1005e643:	jae    0x1005e843
1005e649:	cmp    dx,0x7fff
1005e64e:	jae    0x1005e843
1005e654:	cmp    di,0xbffd
1005e659:	ja     0x1005e843
1005e65f:	cmp    di,0x3fbf
1005e664:	ja     0x1005e673
1005e666:	xor    eax,eax
1005e668:	mov    DWORD PTR [ebp-0x38],eax
1005e66b:	mov    DWORD PTR [ebp-0x3c],eax
1005e66e:	jmp    0x1005e85a
1005e673:	test   cx,cx
1005e676:	jne    0x1005e697
1005e678:	inc    edi
1005e679:	test   DWORD PTR [ebp-0x34],0x7fffffff
1005e680:	jne    0x1005e697
1005e682:	cmp    DWORD PTR [ebp-0x38],0x0
1005e686:	jne    0x1005e697
1005e688:	cmp    DWORD PTR [ebp-0x3c],0x0
1005e68c:	jne    0x1005e697
1005e68e:	and    WORD PTR [ebp-0x32],cx
1005e692:	jmp    0x1005e85d
1005e697:	xor    ecx,ecx
1005e699:	cmp    dx,cx
1005e69c:	jne    0x1005e6bf
1005e69e:	inc    edi
1005e69f:	test   DWORD PTR [ebx+0x8],0x7fffffff
1005e6a6:	jne    0x1005e6bf
1005e6a8:	cmp    DWORD PTR [ebx+0x4],ecx
1005e6ab:	jne    0x1005e6bf
1005e6ad:	cmp    DWORD PTR [ebx],ecx
1005e6af:	jne    0x1005e6bf
1005e6b1:	mov    DWORD PTR [ebp-0x34],ecx
1005e6b4:	mov    DWORD PTR [ebp-0x38],ecx
1005e6b7:	mov    DWORD PTR [ebp-0x3c],ecx
1005e6ba:	jmp    0x1005e85d
1005e6bf:	and    DWORD PTR [ebp-0x68],ecx
1005e6c2:	lea    esi,[ebp-0x28]
1005e6c5:	mov    DWORD PTR [ebp-0x58],0x5
1005e6cc:	mov    ecx,DWORD PTR [ebp-0x68]
1005e6cf:	mov    edx,DWORD PTR [ebp-0x58]
1005e6d2:	add    ecx,ecx
1005e6d4:	test   edx,edx
1005e6d6:	mov    DWORD PTR [ebp-0x64],edx
1005e6d9:	jle    0x1005e730
1005e6db:	lea    ecx,[ebp+ecx*1-0x3c]
1005e6df:	add    ebx,0x8
1005e6e2:	mov    DWORD PTR [ebp-0x5c],ecx
1005e6e5:	mov    DWORD PTR [ebp-0x60],ebx
1005e6e8:	mov    ecx,DWORD PTR [ebp-0x60]
1005e6eb:	mov    edx,DWORD PTR [ebp-0x5c]
1005e6ee:	movzx  edx,WORD PTR [edx]
1005e6f1:	movzx  ecx,WORD PTR [ecx]
1005e6f4:	and    DWORD PTR [ebp-0x78],0x0
1005e6f8:	imul   ecx,edx
1005e6fb:	mov    edx,DWORD PTR [esi-0x4]
1005e6fe:	lea    ebx,[edx+ecx*1]
1005e701:	cmp    ebx,edx
1005e703:	jb     0x1005e709
1005e705:	cmp    ebx,ecx
1005e707:	jae    0x1005e710
1005e709:	mov    DWORD PTR [ebp-0x78],0x1
1005e710:	cmp    DWORD PTR [ebp-0x78],0x0
1005e714:	mov    DWORD PTR [esi-0x4],ebx
1005e717:	je     0x1005e71c
1005e719:	inc    WORD PTR [esi]
1005e71c:	add    DWORD PTR [ebp-0x5c],0x2
1005e720:	sub    DWORD PTR [ebp-0x60],0x2
1005e724:	dec    DWORD PTR [ebp-0x64]
1005e727:	cmp    DWORD PTR [ebp-0x64],0x0
1005e72b:	jg     0x1005e6e8
1005e72d:	mov    ebx,DWORD PTR [ebp-0x70]
1005e730:	inc    esi
1005e731:	inc    esi
1005e732:	inc    DWORD PTR [ebp-0x68]
1005e735:	dec    DWORD PTR [ebp-0x58]
1005e738:	cmp    DWORD PTR [ebp-0x58],0x0
1005e73c:	jg     0x1005e6cc
1005e73e:	add    edi,0xc002
1005e744:	test   di,di
1005e747:	jle    0x1005e784
1005e749:	test   DWORD PTR [ebp-0x24],0x80000000
1005e750:	jne    0x1005e77f
1005e752:	mov    esi,DWORD PTR [ebp-0x28]
1005e755:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e758:	shl    DWORD PTR [ebp-0x2c],1
1005e75b:	shr    ecx,0x1f
1005e75e:	mov    edx,esi
1005e760:	add    esi,esi
1005e762:	or     esi,ecx
1005e764:	mov    ecx,DWORD PTR [ebp-0x24]
1005e767:	shr    edx,0x1f
1005e76a:	add    ecx,ecx
1005e76c:	or     ecx,edx
1005e76e:	add    edi,0xffff
1005e774:	test   di,di
1005e777:	mov    DWORD PTR [ebp-0x28],esi
1005e77a:	mov    DWORD PTR [ebp-0x24],ecx
1005e77d:	jg     0x1005e749
1005e77f:	test   di,di
1005e782:	jg     0x1005e7d1
1005e784:	add    edi,0xffff
1005e78a:	test   di,di
1005e78d:	jge    0x1005e7d1
1005e78f:	mov    ecx,edi
1005e791:	neg    ecx
1005e793:	movzx  esi,cx
1005e796:	add    edi,esi
1005e798:	test   BYTE PTR [ebp-0x2c],0x1
1005e79c:	je     0x1005e7a1
1005e79e:	inc    DWORD PTR [ebp-0x50]
1005e7a1:	mov    ecx,DWORD PTR [ebp-0x24]
1005e7a4:	mov    ebx,DWORD PTR [ebp-0x28]
1005e7a7:	mov    edx,DWORD PTR [ebp-0x28]
1005e7aa:	shr    DWORD PTR [ebp-0x24],1
1005e7ad:	shl    ecx,0x1f
1005e7b0:	shr    ebx,1
1005e7b2:	or     ebx,ecx
1005e7b4:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e7b7:	shl    edx,0x1f
1005e7ba:	shr    ecx,1
1005e7bc:	or     ecx,edx
1005e7be:	dec    esi
1005e7bf:	mov    DWORD PTR [ebp-0x28],ebx
1005e7c2:	mov    DWORD PTR [ebp-0x2c],ecx
1005e7c5:	jne    0x1005e798
1005e7c7:	cmp    DWORD PTR [ebp-0x50],esi
1005e7ca:	je     0x1005e7d1
1005e7cc:	or     WORD PTR [ebp-0x2c],0x1
1005e7d1:	cmp    WORD PTR [ebp-0x2c],0x8000
1005e7d7:	ja     0x1005e7ea
1005e7d9:	mov    ecx,DWORD PTR [ebp-0x2c]
1005e7dc:	and    ecx,0x1ffff
1005e7e2:	cmp    ecx,0x18000
1005e7e8:	jne    0x1005e81d
1005e7ea:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
1005e7ee:	jne    0x1005e81a
1005e7f0:	and    DWORD PTR [ebp-0x2a],0x0
1005e7f4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1005e7f8:	jne    0x1005e815
1005e7fa:	and    DWORD PTR [ebp-0x26],0x0
1005e7fe:	cmp    WORD PTR [ebp-0x22],0xffff
1005e804:	jne    0x1005e80f
1005e806:	mov    WORD PTR [ebp-0x22],0x8000
1005e80c:	inc    edi
1005e80d:	jmp    0x1005e81d
1005e80f:	inc    WORD PTR [ebp-0x22]
1005e813:	jmp    0x1005e81d
1005e815:	inc    DWORD PTR [ebp-0x26]
1005e818:	jmp    0x1005e81d
1005e81a:	inc    DWORD PTR [ebp-0x2a]
1005e81d:	cmp    di,0x7fff
1005e822:	mov    esi,DWORD PTR [ebp-0x4c]
1005e825:	jae    0x1005e843
1005e827:	mov    cx,WORD PTR [ebp-0x2a]
1005e82b:	mov    WORD PTR [ebp-0x3c],cx
1005e82f:	mov    ecx,DWORD PTR [ebp-0x28]
1005e832:	mov    DWORD PTR [ebp-0x3a],ecx
1005e835:	mov    ecx,DWORD PTR [ebp-0x24]
1005e838:	or     edi,eax
1005e83a:	mov    DWORD PTR [ebp-0x36],ecx
1005e83d:	mov    WORD PTR [ebp-0x32],di
1005e841:	jmp    0x1005e85d
1005e843:	neg    ax
1005e846:	sbb    eax,eax
1005e848:	and    DWORD PTR [ebp-0x38],0x0
1005e84c:	and    eax,0x80000000
1005e851:	add    eax,0x7fff8000
1005e856:	and    DWORD PTR [ebp-0x3c],0x0
1005e85a:	mov    DWORD PTR [ebp-0x34],eax
1005e85d:	cmp    DWORD PTR [ebp-0x54],0x0
1005e861:	jne    0x1005e5d4
1005e867:	mov    eax,DWORD PTR [ebp-0x34]
1005e86a:	movzx  ecx,WORD PTR [ebp-0x3c]
1005e86e:	mov    esi,DWORD PTR [ebp-0x3a]
1005e871:	mov    edx,DWORD PTR [ebp-0x36]
1005e874:	shr    eax,0x10
1005e877:	jmp    0x1005e8a8
1005e879:	mov    DWORD PTR [ebp-0x6c],0x4
1005e880:	jmp    0x1005e8a0
1005e882:	xor    esi,esi
1005e884:	mov    eax,0x7fff
1005e889:	mov    edx,0x80000000
1005e88e:	xor    ecx,ecx
1005e890:	mov    DWORD PTR [ebp-0x6c],0x2
1005e897:	jmp    0x1005e8a8
1005e899:	mov    DWORD PTR [ebp-0x6c],0x1
1005e8a0:	xor    ecx,ecx
1005e8a2:	xor    eax,eax
1005e8a4:	xor    edx,edx
1005e8a6:	xor    esi,esi
1005e8a8:	mov    edi,DWORD PTR [ebp-0x7c]
1005e8ab:	or     eax,DWORD PTR [ebp-0x74]
1005e8ae:	mov    WORD PTR [edi],cx
1005e8b1:	mov    WORD PTR [edi+0xa],ax
1005e8b5:	mov    eax,DWORD PTR [ebp-0x6c]
1005e8b8:	mov    DWORD PTR [edi+0x2],esi
1005e8bb:	mov    DWORD PTR [edi+0x6],edx
1005e8be:	mov    ecx,DWORD PTR [ebp-0x4]
1005e8c1:	pop    edi
1005e8c2:	pop    esi
1005e8c3:	xor    ecx,ebp
1005e8c5:	pop    ebx
1005e8c6:	call   0x10043615
1005e8cb:	leave  
1005e8cc:	ret    
1005e8cd:	aad    0xe2
1005e8cf:	add    eax,0x5e32910
1005e8d4:	adc    BYTE PTR [edi-0x1d],bh
1005e8d7:	add    eax,0x5e3b210
1005e8dc:	adc    bh,dh
1005e8de:	jecxz  0x1005e8e5
1005e8e0:	adc    BYTE PTR [edi],ch
1005e8e2:	in     al,0x5
1005e8e4:	adc    BYTE PTR [ebx-0x1c],al
1005e8e7:	add    eax,0x5e49e10
1005e8ec:	adc    BYTE PTR [ecx+0x81005e4],cl
1005e8f2:	in     eax,0x5
1005e8f4:	adc    ch,bh
1005e8f6:	in     al,0x5
1005e8f8:	adc    BYTE PTR [esp+eiz*8-0x74aaeffb],ch
1005e8ff:	in     al,dx
1005e900:	sub    esp,0x74
1005e903:	mov    eax,ds:0x100801ac
1005e908:	xor    eax,ebp
1005e90a:	mov    DWORD PTR [ebp-0x4],eax
1005e90d:	push   ebx
1005e90e:	mov    ebx,DWORD PTR [ebp+0x1c]
1005e911:	push   esi
1005e912:	push   edi
1005e913:	lea    esi,[ebp+0x8]
1005e916:	lea    edi,[ebp-0x10]
1005e919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005e91b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005e91d:	mov    edx,DWORD PTR [ebp-0x8]
1005e920:	mov    ecx,edx
1005e922:	mov    eax,0x8000
1005e927:	and    ecx,eax
1005e929:	and    edx,0x7fff
1005e92f:	test   cx,cx
1005e932:	mov    DWORD PTR [ebp-0x60],ebx
1005e935:	mov    BYTE PTR [ebp-0x30],0xcc
1005e939:	mov    BYTE PTR [ebp-0x2f],0xcc
1005e93d:	mov    BYTE PTR [ebp-0x2e],0xcc
1005e941:	mov    BYTE PTR [ebp-0x2d],0xcc
1005e945:	mov    BYTE PTR [ebp-0x2c],0xcc
1005e949:	mov    BYTE PTR [ebp-0x2b],0xcc
1005e94d:	mov    BYTE PTR [ebp-0x2a],0xcc
1005e951:	mov    BYTE PTR [ebp-0x29],0xcc
1005e955:	mov    BYTE PTR [ebp-0x28],0xcc
1005e959:	mov    BYTE PTR [ebp-0x27],0xcc
1005e95d:	mov    BYTE PTR [ebp-0x26],0xfb
1005e961:	mov    BYTE PTR [ebp-0x25],0x3f
1005e965:	mov    DWORD PTR [ebp-0x74],0x1
1005e96c:	mov    DWORD PTR [ebp-0x6c],ecx
1005e96f:	je     0x1005e977
1005e971:	mov    BYTE PTR [ebx+0x2],0x2d
1005e975:	jmp    0x1005e97b
1005e977:	mov    BYTE PTR [ebx+0x2],0x20
1005e97b:	test   dx,dx
1005e97e:	mov    esi,DWORD PTR [ebp-0xc]
1005e981:	mov    edi,DWORD PTR [ebp-0x10]
1005e984:	jne    0x1005e9b4
1005e986:	test   esi,esi
1005e988:	jne    0x1005e9b4
1005e98a:	test   edi,edi
1005e98c:	jne    0x1005e9b4
1005e98e:	and    WORD PTR [ebx],di
1005e991:	cmp    cx,ax
1005e994:	setne  al
1005e997:	dec    al
1005e999:	and    al,0xd
1005e99b:	add    al,0x20
1005e99d:	mov    BYTE PTR [ebx+0x2],al
1005e9a0:	mov    BYTE PTR [ebx+0x3],0x1
1005e9a4:	mov    BYTE PTR [ebx+0x4],0x30
1005e9a8:	mov    BYTE PTR [ebx+0x5],0x0
1005e9ac:	xor    eax,eax
1005e9ae:	inc    eax
1005e9af:	jmp    0x1005f17b
1005e9b4:	cmp    dx,0x7fff
1005e9b9:	jne    0x1005ea5d
1005e9bf:	mov    eax,0x80000000
1005e9c4:	cmp    esi,eax
1005e9c6:	mov    WORD PTR [ebx],0x1
1005e9cb:	jne    0x1005e9d1
1005e9cd:	test   edi,edi
1005e9cf:	je     0x1005e9e0
1005e9d1:	test   esi,0x40000000
1005e9d7:	jne    0x1005e9e0
1005e9d9:	push   0x1006db70
1005e9de:	jmp    0x1005ea31
1005e9e0:	test   cx,cx
1005e9e3:	je     0x1005e9f8
1005e9e5:	cmp    esi,0xc0000000
1005e9eb:	jne    0x1005e9f8
1005e9ed:	test   edi,edi
1005e9ef:	jne    0x1005ea2c
1005e9f1:	push   0x1006db68
1005e9f6:	jmp    0x1005ea05
1005e9f8:	cmp    esi,eax
1005e9fa:	jne    0x1005ea2c
1005e9fc:	test   edi,edi
1005e9fe:	jne    0x1005ea2c
1005ea00:	push   0x1006db60
1005ea05:	lea    eax,[ebx+0x4]
1005ea08:	push   0x16
1005ea0a:	push   eax
1005ea0b:	call   0x10047a20
1005ea10:	add    esp,0xc
1005ea13:	xor    esi,esi
1005ea15:	test   eax,eax
1005ea17:	je     0x1005ea26
1005ea19:	push   esi
1005ea1a:	push   esi
1005ea1b:	push   esi
1005ea1c:	push   esi
1005ea1d:	push   esi
1005ea1e:	call   0x100434e5
1005ea23:	add    esp,0x14
1005ea26:	mov    BYTE PTR [ebx+0x3],0x5
1005ea2a:	jmp    0x1005ea56
1005ea2c:	push   0x1006db58
1005ea31:	lea    eax,[ebx+0x4]
1005ea34:	push   0x16
1005ea36:	push   eax
1005ea37:	call   0x10047a20
1005ea3c:	add    esp,0xc
1005ea3f:	xor    esi,esi
1005ea41:	test   eax,eax
1005ea43:	je     0x1005ea52
1005ea45:	push   esi
1005ea46:	push   esi
1005ea47:	push   esi
1005ea48:	push   esi
1005ea49:	push   esi
1005ea4a:	call   0x100434e5
1005ea4f:	add    esp,0x14
1005ea52:	mov    BYTE PTR [ebx+0x3],0x6
1005ea56:	xor    eax,eax
1005ea58:	jmp    0x1005f17b
1005ea5d:	movzx  ecx,dx
1005ea60:	mov    ebx,ecx
1005ea62:	imul   ecx,ecx,0x4d10
1005ea68:	shr    ebx,0x8
1005ea6b:	mov    eax,esi
1005ea6d:	shr    eax,0x18
1005ea70:	lea    eax,[ebx+eax*2]
1005ea73:	imul   eax,eax,0x4d
1005ea76:	lea    eax,[eax+ecx*1-0x134312f4]
1005ea7d:	sar    eax,0x10
1005ea80:	movzx  ecx,ax
1005ea83:	movsx  ebx,cx
1005ea86:	mov    DWORD PTR [ebp-0x4c],ecx
1005ea89:	xor    eax,eax
1005ea8b:	mov    ecx,0x10081230
1005ea90:	neg    ebx
1005ea92:	sub    ecx,0x60
1005ea95:	cmp    ebx,eax
1005ea97:	mov    WORD PTR [ebp-0x16],dx
1005ea9b:	mov    DWORD PTR [ebp-0x1a],esi
1005ea9e:	mov    DWORD PTR [ebp-0x1e],edi
1005eaa1:	mov    WORD PTR [ebp-0x20],ax
1005eaa5:	mov    DWORD PTR [ebp-0x68],ecx
1005eaa8:	je     0x1005ed5c
1005eaae:	jge    0x1005eabd
1005eab0:	mov    ecx,0x10081390
1005eab5:	neg    ebx
1005eab7:	sub    ecx,0x60
1005eaba:	mov    DWORD PTR [ebp-0x68],ecx
1005eabd:	cmp    ebx,eax
1005eabf:	je     0x1005ed5c
1005eac5:	add    DWORD PTR [ebp-0x68],0x54
1005eac9:	mov    ecx,ebx
1005eacb:	and    ecx,0x7
1005eace:	sar    ebx,0x3
1005ead1:	test   ecx,ecx
1005ead3:	je     0x1005ed52
1005ead9:	imul   ecx,ecx,0xc
1005eadc:	add    ecx,DWORD PTR [ebp-0x68]
1005eadf:	cmp    WORD PTR [ecx],0x8000
1005eae4:	mov    DWORD PTR [ebp-0x64],ecx
1005eae7:	jb     0x1005eafc
1005eae9:	mov    esi,ecx
1005eaeb:	lea    edi,[ebp-0x3c]
1005eaee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eaef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eaf0:	lea    eax,[ebp-0x3c]
1005eaf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005eaf4:	dec    DWORD PTR [ebp-0x3a]
1005eaf7:	mov    DWORD PTR [ebp-0x64],eax
1005eafa:	mov    ecx,eax
1005eafc:	movzx  edi,WORD PTR [ecx+0xa]
1005eb00:	mov    edx,DWORD PTR [ebp-0x16]
1005eb03:	xor    eax,eax
1005eb05:	mov    ecx,edi
1005eb07:	mov    esi,0x7fff
1005eb0c:	xor    ecx,edx
1005eb0e:	and    edx,esi
1005eb10:	and    edi,esi
1005eb12:	mov    DWORD PTR [ebp-0x48],eax
1005eb15:	mov    DWORD PTR [ebp-0x10],eax
1005eb18:	mov    DWORD PTR [ebp-0xc],eax
1005eb1b:	mov    DWORD PTR [ebp-0x8],eax
1005eb1e:	and    ecx,0x8000
1005eb24:	cmp    dx,si
1005eb27:	lea    eax,[edi+edx*1]
1005eb2a:	movzx  eax,ax
1005eb2d:	jae    0x1005ed36
1005eb33:	cmp    di,si
1005eb36:	jae    0x1005ed36
1005eb3c:	cmp    ax,0xbffd
1005eb40:	ja     0x1005ed36
1005eb46:	cmp    ax,0x3fbf
1005eb4a:	ja     0x1005eb5c
1005eb4c:	xor    eax,eax
1005eb4e:	mov    DWORD PTR [ebp-0x18],eax
1005eb51:	mov    DWORD PTR [ebp-0x1c],eax
1005eb54:	mov    DWORD PTR [ebp-0x20],eax
1005eb57:	jmp    0x1005ed52
1005eb5c:	xor    esi,esi
1005eb5e:	cmp    dx,si
1005eb61:	jne    0x1005eb80
1005eb63:	inc    eax
1005eb64:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005eb6b:	jne    0x1005eb80
1005eb6d:	cmp    DWORD PTR [ebp-0x1c],esi
1005eb70:	jne    0x1005eb80
1005eb72:	cmp    DWORD PTR [ebp-0x20],esi
1005eb75:	jne    0x1005eb80
1005eb77:	mov    WORD PTR [ebp-0x16],si
1005eb7b:	jmp    0x1005ed52
1005eb80:	cmp    di,si
1005eb83:	jne    0x1005eba9
1005eb85:	mov    edx,DWORD PTR [ebp-0x64]
1005eb88:	inc    eax
1005eb89:	test   DWORD PTR [edx+0x8],0x7fffffff
1005eb90:	jne    0x1005eba9
1005eb92:	cmp    DWORD PTR [edx+0x4],esi
1005eb95:	jne    0x1005eba9
1005eb97:	cmp    DWORD PTR [edx],esi
1005eb99:	jne    0x1005eba9
1005eb9b:	mov    DWORD PTR [ebp-0x18],esi
1005eb9e:	mov    DWORD PTR [ebp-0x1c],esi
1005eba1:	mov    DWORD PTR [ebp-0x20],esi
1005eba4:	jmp    0x1005ed52
1005eba9:	lea    edi,[ebp-0xc]
1005ebac:	mov    DWORD PTR [ebp-0x5c],esi
1005ebaf:	mov    DWORD PTR [ebp-0x44],edi
1005ebb2:	mov    DWORD PTR [ebp-0x40],0x5
1005ebb9:	mov    edx,DWORD PTR [ebp-0x5c]
1005ebbc:	mov    esi,DWORD PTR [ebp-0x40]
1005ebbf:	add    edx,edx
1005ebc1:	test   esi,esi
1005ebc3:	mov    DWORD PTR [ebp-0x50],esi
1005ebc6:	jle    0x1005ec20
1005ebc8:	lea    edx,[ebp+edx*1-0x20]
1005ebcc:	mov    DWORD PTR [ebp-0x58],edx
1005ebcf:	mov    edx,DWORD PTR [ebp-0x64]
1005ebd2:	add    edx,0x8
1005ebd5:	mov    DWORD PTR [ebp-0x54],edx
1005ebd8:	mov    edx,DWORD PTR [ebp-0x58]
1005ebdb:	mov    esi,DWORD PTR [ebp-0x54]
1005ebde:	movzx  esi,WORD PTR [esi]
1005ebe1:	movzx  edx,WORD PTR [edx]
1005ebe4:	mov    edi,DWORD PTR [edi-0x4]
1005ebe7:	imul   edx,esi
1005ebea:	and    DWORD PTR [ebp-0x70],0x0
1005ebee:	lea    esi,[edi+edx*1]
1005ebf1:	cmp    esi,edi
1005ebf3:	jb     0x1005ebf9
1005ebf5:	cmp    esi,edx
1005ebf7:	jae    0x1005ec00
1005ebf9:	mov    DWORD PTR [ebp-0x70],0x1
1005ec00:	cmp    DWORD PTR [ebp-0x70],0x0
1005ec04:	mov    edi,DWORD PTR [ebp-0x44]
1005ec07:	mov    DWORD PTR [edi-0x4],esi
1005ec0a:	je     0x1005ec0f
1005ec0c:	inc    WORD PTR [edi]
1005ec0f:	add    DWORD PTR [ebp-0x58],0x2
1005ec13:	sub    DWORD PTR [ebp-0x54],0x2
1005ec17:	dec    DWORD PTR [ebp-0x50]
1005ec1a:	cmp    DWORD PTR [ebp-0x50],0x0
1005ec1e:	jg     0x1005ebd8
1005ec20:	inc    edi
1005ec21:	inc    edi
1005ec22:	inc    DWORD PTR [ebp-0x5c]
1005ec25:	dec    DWORD PTR [ebp-0x40]
1005ec28:	cmp    DWORD PTR [ebp-0x40],0x0
1005ec2c:	mov    DWORD PTR [ebp-0x44],edi
1005ec2f:	jg     0x1005ebb9
1005ec31:	add    eax,0xc002
1005ec36:	test   ax,ax
1005ec39:	jle    0x1005ec76
1005ec3b:	test   DWORD PTR [ebp-0x8],0x80000000
1005ec42:	jne    0x1005ec71
1005ec44:	mov    edx,DWORD PTR [ebp-0x10]
1005ec47:	mov    edi,DWORD PTR [ebp-0xc]
1005ec4a:	mov    esi,DWORD PTR [ebp-0xc]
1005ec4d:	shl    DWORD PTR [ebp-0x10],1
1005ec50:	shr    edx,0x1f
1005ec53:	add    edi,edi
1005ec55:	or     edi,edx
1005ec57:	mov    edx,DWORD PTR [ebp-0x8]
1005ec5a:	shr    esi,0x1f
1005ec5d:	add    edx,edx
1005ec5f:	or     edx,esi
1005ec61:	add    eax,0xffff
1005ec66:	test   ax,ax
1005ec69:	mov    DWORD PTR [ebp-0xc],edi
1005ec6c:	mov    DWORD PTR [ebp-0x8],edx
1005ec6f:	jg     0x1005ec3b
1005ec71:	test   ax,ax
1005ec74:	jg     0x1005ecc8
1005ec76:	add    eax,0xffff
1005ec7b:	test   ax,ax
1005ec7e:	jge    0x1005ecc8
1005ec80:	mov    edx,eax
1005ec82:	neg    edx
1005ec84:	movzx  edx,dx
1005ec87:	mov    DWORD PTR [ebp-0x44],edx
1005ec8a:	add    eax,edx
1005ec8c:	test   BYTE PTR [ebp-0x10],0x1
1005ec90:	je     0x1005ec95
1005ec92:	inc    DWORD PTR [ebp-0x48]
1005ec95:	mov    edx,DWORD PTR [ebp-0x8]
1005ec98:	mov    edi,DWORD PTR [ebp-0xc]
1005ec9b:	mov    esi,DWORD PTR [ebp-0xc]
1005ec9e:	shr    DWORD PTR [ebp-0x8],1
1005eca1:	shl    edx,0x1f
1005eca4:	shr    edi,1
1005eca6:	or     edi,edx
1005eca8:	mov    edx,DWORD PTR [ebp-0x10]
1005ecab:	shl    esi,0x1f
1005ecae:	shr    edx,1
1005ecb0:	or     edx,esi
1005ecb2:	dec    DWORD PTR [ebp-0x44]
1005ecb5:	mov    DWORD PTR [ebp-0xc],edi
1005ecb8:	mov    DWORD PTR [ebp-0x10],edx
1005ecbb:	jne    0x1005ec8c
1005ecbd:	cmp    DWORD PTR [ebp-0x48],0x0
1005ecc1:	je     0x1005ecc8
1005ecc3:	or     WORD PTR [ebp-0x10],0x1
1005ecc8:	cmp    WORD PTR [ebp-0x10],0x8000
1005ecce:	ja     0x1005ece1
1005ecd0:	mov    edx,DWORD PTR [ebp-0x10]
1005ecd3:	and    edx,0x1ffff
1005ecd9:	cmp    edx,0x18000
1005ecdf:	jne    0x1005ed14
1005ece1:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005ece5:	jne    0x1005ed11
1005ece7:	and    DWORD PTR [ebp-0xe],0x0
1005eceb:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005ecef:	jne    0x1005ed0c
1005ecf1:	and    DWORD PTR [ebp-0xa],0x0
1005ecf5:	cmp    WORD PTR [ebp-0x6],0xffff
1005ecfb:	jne    0x1005ed06
1005ecfd:	mov    WORD PTR [ebp-0x6],0x8000
1005ed03:	inc    eax
1005ed04:	jmp    0x1005ed14
1005ed06:	inc    WORD PTR [ebp-0x6]
1005ed0a:	jmp    0x1005ed14
1005ed0c:	inc    DWORD PTR [ebp-0xa]
1005ed0f:	jmp    0x1005ed14
1005ed11:	inc    DWORD PTR [ebp-0xe]
1005ed14:	cmp    ax,0x7fff
1005ed18:	jae    0x1005ed36
1005ed1a:	mov    dx,WORD PTR [ebp-0xe]
1005ed1e:	mov    WORD PTR [ebp-0x20],dx
1005ed22:	mov    edx,DWORD PTR [ebp-0xc]
1005ed25:	mov    DWORD PTR [ebp-0x1e],edx
1005ed28:	mov    edx,DWORD PTR [ebp-0x8]
1005ed2b:	or     eax,ecx
1005ed2d:	mov    DWORD PTR [ebp-0x1a],edx
1005ed30:	mov    WORD PTR [ebp-0x16],ax
1005ed34:	jmp    0x1005ed52
1005ed36:	neg    cx
1005ed39:	sbb    ecx,ecx
1005ed3b:	and    DWORD PTR [ebp-0x1c],0x0
1005ed3f:	and    ecx,0x80000000
1005ed45:	add    ecx,0x7fff8000
1005ed4b:	and    DWORD PTR [ebp-0x20],0x0
1005ed4f:	mov    DWORD PTR [ebp-0x18],ecx
1005ed52:	test   ebx,ebx
1005ed54:	jne    0x1005eac5
1005ed5a:	xor    eax,eax
1005ed5c:	mov    ecx,DWORD PTR [ebp-0x18]
1005ed5f:	shr    ecx,0x10
1005ed62:	cmp    cx,0x3fff
1005ed67:	mov    ebx,0x7fff
1005ed6c:	jb     0x1005efba
1005ed72:	mov    esi,DWORD PTR [ebp-0x26]
1005ed75:	inc    DWORD PTR [ebp-0x4c]
1005ed78:	movzx  edx,cx
1005ed7b:	mov    ecx,esi
1005ed7d:	xor    ecx,edx
1005ed7f:	and    edx,ebx
1005ed81:	and    esi,ebx
1005ed83:	and    ecx,0x8000
1005ed89:	cmp    dx,bx
1005ed8c:	lea    edi,[esi+edx*1]
1005ed8f:	mov    DWORD PTR [ebp-0x58],eax
1005ed92:	mov    DWORD PTR [ebp-0x10],eax
1005ed95:	mov    DWORD PTR [ebp-0xc],eax
1005ed98:	mov    DWORD PTR [ebp-0x8],eax
1005ed9b:	movzx  edi,di
1005ed9e:	jae    0x1005efa0
1005eda4:	cmp    si,bx
1005eda7:	jae    0x1005efa0
1005edad:	cmp    di,0xbffd
1005edb2:	ja     0x1005efa0
1005edb8:	cmp    di,0x3fbf
1005edbd:	ja     0x1005edc7
1005edbf:	mov    DWORD PTR [ebp-0x18],eax
1005edc2:	jmp    0x1005efb4
1005edc7:	cmp    dx,ax
1005edca:	jne    0x1005ede9
1005edcc:	inc    edi
1005edcd:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005edd4:	jne    0x1005ede9
1005edd6:	cmp    DWORD PTR [ebp-0x1c],eax
1005edd9:	jne    0x1005ede9
1005eddb:	cmp    DWORD PTR [ebp-0x20],eax
1005edde:	jne    0x1005ede9
1005ede0:	mov    WORD PTR [ebp-0x16],ax
1005ede4:	jmp    0x1005efba
1005ede9:	cmp    si,ax
1005edec:	jne    0x1005ee02
1005edee:	inc    edi
1005edef:	test   DWORD PTR [ebp-0x28],0x7fffffff
1005edf6:	jne    0x1005ee02
1005edf8:	cmp    DWORD PTR [ebp-0x2c],eax
1005edfb:	jne    0x1005ee02
1005edfd:	cmp    DWORD PTR [ebp-0x30],eax
1005ee00:	je     0x1005edbf
1005ee02:	and    DWORD PTR [ebp-0x54],0x0
1005ee06:	lea    eax,[ebp-0xc]
1005ee09:	mov    DWORD PTR [ebp-0x40],0x5
1005ee10:	mov    edx,DWORD PTR [ebp-0x54]
1005ee13:	mov    esi,DWORD PTR [ebp-0x40]
1005ee16:	add    edx,edx
1005ee18:	test   esi,esi
1005ee1a:	mov    DWORD PTR [ebp-0x50],esi
1005ee1d:	jle    0x1005ee71
1005ee1f:	lea    esi,[ebp-0x28]
1005ee22:	lea    edx,[ebp+edx*1-0x20]
1005ee26:	mov    DWORD PTR [ebp-0x5c],esi
1005ee29:	mov    DWORD PTR [ebp-0x48],edx
1005ee2c:	mov    edx,DWORD PTR [ebp-0x5c]
1005ee2f:	mov    esi,DWORD PTR [ebp-0x48]
1005ee32:	movzx  esi,WORD PTR [esi]
1005ee35:	movzx  edx,WORD PTR [edx]
1005ee38:	and    DWORD PTR [ebp-0x44],0x0
1005ee3c:	imul   edx,esi
1005ee3f:	mov    esi,DWORD PTR [eax-0x4]
1005ee42:	lea    ebx,[esi+edx*1]
1005ee45:	cmp    ebx,esi
1005ee47:	jb     0x1005ee4d
1005ee49:	cmp    ebx,edx
1005ee4b:	jae    0x1005ee54
1005ee4d:	mov    DWORD PTR [ebp-0x44],0x1
1005ee54:	cmp    DWORD PTR [ebp-0x44],0x0
1005ee58:	mov    DWORD PTR [eax-0x4],ebx
1005ee5b:	je     0x1005ee60
1005ee5d:	inc    WORD PTR [eax]
1005ee60:	add    DWORD PTR [ebp-0x48],0x2
1005ee64:	sub    DWORD PTR [ebp-0x5c],0x2
1005ee68:	dec    DWORD PTR [ebp-0x50]
1005ee6b:	cmp    DWORD PTR [ebp-0x50],0x0
1005ee6f:	jg     0x1005ee2c
1005ee71:	inc    eax
1005ee72:	inc    eax
1005ee73:	inc    DWORD PTR [ebp-0x54]
1005ee76:	dec    DWORD PTR [ebp-0x40]
1005ee79:	cmp    DWORD PTR [ebp-0x40],0x0
1005ee7d:	jg     0x1005ee10
1005ee7f:	add    edi,0xc002
1005ee85:	xor    eax,eax
1005ee87:	cmp    di,ax
1005ee8a:	jle    0x1005eec8
1005ee8c:	test   DWORD PTR [ebp-0x8],0x80000000
1005ee93:	jne    0x1005eec3
1005ee95:	mov    edx,DWORD PTR [ebp-0x10]
1005ee98:	mov    ebx,DWORD PTR [ebp-0xc]
1005ee9b:	mov    esi,DWORD PTR [ebp-0xc]
1005ee9e:	shl    DWORD PTR [ebp-0x10],1
1005eea1:	shr    edx,0x1f
1005eea4:	add    ebx,ebx
1005eea6:	or     ebx,edx
1005eea8:	mov    edx,DWORD PTR [ebp-0x8]
1005eeab:	shr    esi,0x1f
1005eeae:	add    edx,edx
1005eeb0:	or     edx,esi
1005eeb2:	add    edi,0xffff
1005eeb8:	cmp    di,ax
1005eebb:	mov    DWORD PTR [ebp-0xc],ebx
1005eebe:	mov    DWORD PTR [ebp-0x8],edx
1005eec1:	jg     0x1005ee8c
1005eec3:	cmp    di,ax
1005eec6:	jg     0x1005ef15
1005eec8:	add    edi,0xffff
1005eece:	cmp    di,ax
1005eed1:	jge    0x1005ef15
1005eed3:	mov    eax,edi
1005eed5:	neg    eax
1005eed7:	movzx  eax,ax
1005eeda:	add    edi,eax
1005eedc:	test   BYTE PTR [ebp-0x10],0x1
1005eee0:	je     0x1005eee5
1005eee2:	inc    DWORD PTR [ebp-0x58]
1005eee5:	mov    edx,DWORD PTR [ebp-0x8]
1005eee8:	mov    ebx,DWORD PTR [ebp-0xc]
1005eeeb:	mov    esi,DWORD PTR [ebp-0xc]
1005eeee:	shr    DWORD PTR [ebp-0x8],1
1005eef1:	shl    edx,0x1f
1005eef4:	shr    ebx,1
1005eef6:	or     ebx,edx
1005eef8:	mov    edx,DWORD PTR [ebp-0x10]
1005eefb:	shl    esi,0x1f
1005eefe:	shr    edx,1
1005ef00:	or     edx,esi
1005ef02:	dec    eax
1005ef03:	mov    DWORD PTR [ebp-0xc],ebx
1005ef06:	mov    DWORD PTR [ebp-0x10],edx
1005ef09:	jne    0x1005eedc
1005ef0b:	cmp    DWORD PTR [ebp-0x58],eax
1005ef0e:	je     0x1005ef15
1005ef10:	or     WORD PTR [ebp-0x10],0x1
1005ef15:	cmp    WORD PTR [ebp-0x10],0x8000
1005ef1b:	ja     0x1005ef2e
1005ef1d:	mov    edx,DWORD PTR [ebp-0x10]
1005ef20:	and    edx,0x1ffff
1005ef26:	cmp    edx,0x18000
1005ef2c:	jne    0x1005ef5f
1005ef2e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005ef32:	jne    0x1005ef5c
1005ef34:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005ef38:	mov    DWORD PTR [ebp-0xe],eax
1005ef3b:	jne    0x1005ef57
1005ef3d:	cmp    WORD PTR [ebp-0x6],0xffff
1005ef43:	mov    DWORD PTR [ebp-0xa],eax
1005ef46:	jne    0x1005ef51
1005ef48:	mov    WORD PTR [ebp-0x6],0x8000
1005ef4e:	inc    edi
1005ef4f:	jmp    0x1005ef5f
1005ef51:	inc    WORD PTR [ebp-0x6]
1005ef55:	jmp    0x1005ef5f
1005ef57:	inc    DWORD PTR [ebp-0xa]
1005ef5a:	jmp    0x1005ef5f
1005ef5c:	inc    DWORD PTR [ebp-0xe]
1005ef5f:	cmp    di,0x7fff
1005ef64:	jb     0x1005ef84
1005ef66:	neg    cx
1005ef69:	mov    DWORD PTR [ebp-0x1c],eax
1005ef6c:	mov    DWORD PTR [ebp-0x20],eax
1005ef6f:	sbb    ecx,ecx
1005ef71:	and    ecx,0x80000000
1005ef77:	add    ecx,0x7fff8000
1005ef7d:	mov    DWORD PTR [ebp-0x18],ecx
1005ef80:	xor    eax,eax
1005ef82:	jmp    0x1005efba
1005ef84:	mov    ax,WORD PTR [ebp-0xe]
1005ef88:	mov    WORD PTR [ebp-0x20],ax
1005ef8c:	mov    eax,DWORD PTR [ebp-0xc]
1005ef8f:	mov    DWORD PTR [ebp-0x1e],eax
1005ef92:	mov    eax,DWORD PTR [ebp-0x8]
1005ef95:	or     edi,ecx
1005ef97:	mov    DWORD PTR [ebp-0x1a],eax
1005ef9a:	mov    WORD PTR [ebp-0x16],di
1005ef9e:	jmp    0x1005ef80
1005efa0:	neg    cx
1005efa3:	sbb    ecx,ecx
1005efa5:	and    ecx,0x80000000
1005efab:	add    ecx,0x7fff8000
1005efb1:	mov    DWORD PTR [ebp-0x18],ecx
1005efb4:	mov    DWORD PTR [ebp-0x1c],eax
1005efb7:	mov    DWORD PTR [ebp-0x20],eax
1005efba:	test   BYTE PTR [ebp+0x18],0x1
1005efbe:	mov    edx,DWORD PTR [ebp-0x60]
1005efc1:	mov    ecx,DWORD PTR [ebp-0x4c]
1005efc4:	mov    WORD PTR [edx],cx
1005efc7:	je     0x1005effb
1005efc9:	movsx  ecx,cx
1005efcc:	add    DWORD PTR [ebp+0x14],ecx
1005efcf:	cmp    DWORD PTR [ebp+0x14],eax
1005efd2:	jg     0x1005effb
1005efd4:	and    WORD PTR [edx],0x0
1005efd8:	cmp    WORD PTR [ebp-0x6c],0x8000
1005efde:	mov    BYTE PTR [edx+0x3],0x1
1005efe2:	setne  al
1005efe5:	dec    al
1005efe7:	and    al,0xd
1005efe9:	add    al,0x20
1005efeb:	mov    BYTE PTR [edx+0x2],al
1005efee:	mov    BYTE PTR [edx+0x4],0x30
1005eff2:	mov    BYTE PTR [edx+0x5],0x0
1005eff6:	jmp    0x1005e9ac
1005effb:	push   0x15
1005effd:	pop    ecx
1005effe:	cmp    DWORD PTR [ebp+0x14],ecx
1005f001:	jle    0x1005f006
1005f003:	mov    DWORD PTR [ebp+0x14],ecx
1005f006:	mov    esi,DWORD PTR [ebp-0x18]
1005f009:	shr    esi,0x10
1005f00c:	push   0x8
1005f00e:	sub    esi,0x3ffe
1005f014:	mov    WORD PTR [ebp-0x16],ax
1005f018:	pop    ebx
1005f019:	mov    eax,DWORD PTR [ebp-0x20]
1005f01c:	mov    edi,DWORD PTR [ebp-0x1c]
1005f01f:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f022:	shl    DWORD PTR [ebp-0x20],1
1005f025:	shr    eax,0x1f
1005f028:	add    edi,edi
1005f02a:	or     edi,eax
1005f02c:	mov    eax,DWORD PTR [ebp-0x18]
1005f02f:	shr    ecx,0x1f
1005f032:	add    eax,eax
1005f034:	or     eax,ecx
1005f036:	dec    ebx
1005f037:	mov    DWORD PTR [ebp-0x1c],edi
1005f03a:	mov    DWORD PTR [ebp-0x18],eax
1005f03d:	jne    0x1005f019
1005f03f:	test   esi,esi
1005f041:	jge    0x1005f075
1005f043:	neg    esi
1005f045:	and    esi,0xff
1005f04b:	jle    0x1005f075
1005f04d:	mov    eax,DWORD PTR [ebp-0x18]
1005f050:	mov    edi,DWORD PTR [ebp-0x1c]
1005f053:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f056:	shr    DWORD PTR [ebp-0x18],1
1005f059:	shl    eax,0x1f
1005f05c:	shr    edi,1
1005f05e:	or     edi,eax
1005f060:	mov    eax,DWORD PTR [ebp-0x20]
1005f063:	shl    ecx,0x1f
1005f066:	shr    eax,1
1005f068:	or     eax,ecx
1005f06a:	dec    esi
1005f06b:	test   esi,esi
1005f06d:	mov    DWORD PTR [ebp-0x1c],edi
1005f070:	mov    DWORD PTR [ebp-0x20],eax
1005f073:	jg     0x1005f04d
1005f075:	mov    eax,DWORD PTR [ebp+0x14]
1005f078:	inc    eax
1005f079:	test   eax,eax
1005f07b:	lea    ebx,[edx+0x4]
1005f07e:	mov    DWORD PTR [ebp-0x40],ebx
1005f081:	mov    DWORD PTR [ebp-0x4c],eax
1005f084:	jle    0x1005f13f
1005f08a:	mov    edx,DWORD PTR [ebp-0x20]
1005f08d:	mov    eax,DWORD PTR [ebp-0x1c]
1005f090:	lea    esi,[ebp-0x20]
1005f093:	lea    edi,[ebp-0x3c]
1005f096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f099:	shl    DWORD PTR [ebp-0x20],1
1005f09c:	mov    edi,DWORD PTR [ebp-0x20]
1005f09f:	shl    DWORD PTR [ebp-0x20],1
1005f0a2:	shr    edx,0x1f
1005f0a5:	lea    ecx,[eax+eax*1]
1005f0a8:	or     ecx,edx
1005f0aa:	mov    edx,DWORD PTR [ebp-0x18]
1005f0ad:	mov    esi,eax
1005f0af:	shr    esi,0x1f
1005f0b2:	add    edx,edx
1005f0b4:	or     edx,esi
1005f0b6:	mov    eax,ecx
1005f0b8:	lea    esi,[ecx+ecx*1]
1005f0bb:	shr    eax,0x1f
1005f0be:	lea    ecx,[edx+edx*1]
1005f0c1:	mov    edx,DWORD PTR [ebp-0x3c]
1005f0c4:	shr    edi,0x1f
1005f0c7:	or     ecx,eax
1005f0c9:	mov    eax,DWORD PTR [ebp-0x20]
1005f0cc:	or     esi,edi
1005f0ce:	lea    edi,[edx+eax*1]
1005f0d1:	cmp    edi,eax
1005f0d3:	jb     0x1005f0d9
1005f0d5:	cmp    edi,edx
1005f0d7:	jae    0x1005f0f1
1005f0d9:	lea    eax,[esi+0x1]
1005f0dc:	xor    edx,edx
1005f0de:	cmp    eax,esi
1005f0e0:	jb     0x1005f0e7
1005f0e2:	cmp    eax,0x1
1005f0e5:	jae    0x1005f0ea
1005f0e7:	xor    edx,edx
1005f0e9:	inc    edx
1005f0ea:	test   edx,edx
1005f0ec:	mov    esi,eax
1005f0ee:	je     0x1005f0f1
1005f0f0:	inc    ecx
1005f0f1:	mov    eax,DWORD PTR [ebp-0x38]
1005f0f4:	lea    edx,[eax+esi*1]
1005f0f7:	cmp    edx,esi
1005f0f9:	mov    DWORD PTR [ebp-0x44],edx
1005f0fc:	jb     0x1005f102
1005f0fe:	cmp    edx,eax
1005f100:	jae    0x1005f103
1005f102:	inc    ecx
1005f103:	add    ecx,DWORD PTR [ebp-0x34]
1005f106:	shr    edx,0x1f
1005f109:	add    ecx,ecx
1005f10b:	or     ecx,edx
1005f10d:	lea    esi,[edi+edi*1]
1005f110:	mov    DWORD PTR [ebp-0x20],esi
1005f113:	mov    esi,DWORD PTR [ebp-0x44]
1005f116:	mov    DWORD PTR [ebp-0x18],ecx
1005f119:	shr    ecx,0x18
1005f11c:	add    esi,esi
1005f11e:	add    cl,0x30
1005f121:	mov    eax,edi
1005f123:	shr    eax,0x1f
1005f126:	or     esi,eax
1005f128:	mov    BYTE PTR [ebx],cl
1005f12a:	inc    ebx
1005f12b:	dec    DWORD PTR [ebp-0x4c]
1005f12e:	cmp    DWORD PTR [ebp-0x4c],0x0
1005f132:	mov    DWORD PTR [ebp-0x1c],esi
1005f135:	mov    BYTE PTR [ebp-0x15],0x0
1005f139:	jg     0x1005f08a
1005f13f:	dec    ebx
1005f140:	mov    al,BYTE PTR [ebx]
1005f142:	dec    ebx
1005f143:	cmp    al,0x35
1005f145:	jge    0x1005f155
1005f147:	mov    ecx,DWORD PTR [ebp-0x40]
1005f14a:	jmp    0x1005f190
1005f14c:	cmp    BYTE PTR [ebx],0x39
1005f14f:	jne    0x1005f15a
1005f151:	mov    BYTE PTR [ebx],0x30
1005f154:	dec    ebx
1005f155:	cmp    ebx,DWORD PTR [ebp-0x40]
1005f158:	jae    0x1005f14c
1005f15a:	cmp    ebx,DWORD PTR [ebp-0x40]
1005f15d:	mov    eax,DWORD PTR [ebp-0x60]
1005f160:	jae    0x1005f166
1005f162:	inc    ebx
1005f163:	inc    WORD PTR [eax]
1005f166:	inc    BYTE PTR [ebx]
1005f168:	sub    bl,al
1005f16a:	sub    bl,0x3
1005f16d:	movsx  ecx,bl
1005f170:	mov    BYTE PTR [eax+0x3],bl
1005f173:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
1005f178:	mov    eax,DWORD PTR [ebp-0x74]
1005f17b:	mov    ecx,DWORD PTR [ebp-0x4]
1005f17e:	pop    edi
1005f17f:	pop    esi
1005f180:	xor    ecx,ebp
1005f182:	pop    ebx
1005f183:	call   0x10043615
1005f188:	leave  
1005f189:	ret    
1005f18a:	cmp    BYTE PTR [ebx],0x30
1005f18d:	jne    0x1005f194
1005f18f:	dec    ebx
1005f190:	cmp    ebx,ecx
1005f192:	jae    0x1005f18a
1005f194:	cmp    ebx,ecx
1005f196:	mov    eax,DWORD PTR [ebp-0x60]
1005f199:	jae    0x1005f168
1005f19b:	and    WORD PTR [eax],0x0
1005f19f:	cmp    WORD PTR [ebp-0x6c],0x8000
1005f1a5:	mov    BYTE PTR [eax+0x3],0x1
1005f1a9:	setne  dl
1005f1ac:	dec    dl
1005f1ae:	and    dl,0xd
1005f1b1:	add    dl,0x20
1005f1b4:	mov    BYTE PTR [eax+0x2],dl
1005f1b7:	mov    BYTE PTR [ecx],0x30
1005f1ba:	mov    BYTE PTR [eax+0x5],0x0
1005f1be:	jmp    0x1005e9ac
1005f1c3:	xor    eax,eax
1005f1c5:	test   bl,0x10
1005f1c8:	je     0x1005f1cb
1005f1ca:	inc    eax
1005f1cb:	test   bl,0x8
1005f1ce:	je     0x1005f1d3
1005f1d0:	or     eax,0x4
1005f1d3:	test   bl,0x4
1005f1d6:	je     0x1005f1db
1005f1d8:	or     eax,0x8
1005f1db:	test   bl,0x2
1005f1de:	je     0x1005f1e3
1005f1e0:	or     eax,0x10
1005f1e3:	test   bl,0x1
1005f1e6:	je     0x1005f1eb
1005f1e8:	or     eax,0x20
1005f1eb:	test   ebx,0x80000
1005f1f1:	je     0x1005f1f6
1005f1f3:	or     eax,0x2
1005f1f6:	mov    ecx,ebx
1005f1f8:	mov    edx,0x300
1005f1fd:	and    ecx,edx
1005f1ff:	push   esi
1005f200:	mov    esi,0x200
1005f205:	je     0x1005f22a
1005f207:	cmp    ecx,0x100
1005f20d:	je     0x1005f225
1005f20f:	cmp    ecx,esi
1005f211:	je     0x1005f21e
1005f213:	cmp    ecx,edx
1005f215:	jne    0x1005f22a
1005f217:	or     eax,0xc00
1005f21c:	jmp    0x1005f22a
1005f21e:	or     eax,0x800
1005f223:	jmp    0x1005f22a
1005f225:	or     eax,0x400
1005f22a:	mov    ecx,ebx
1005f22c:	and    ecx,0x30000
1005f232:	je     0x1005f240
1005f234:	cmp    ecx,0x10000
1005f23a:	jne    0x1005f242
1005f23c:	or     eax,esi
1005f23e:	jmp    0x1005f242
1005f240:	or     eax,edx
1005f242:	test   ebx,0x40000
1005f248:	pop    esi
1005f249:	je     0x1005f250
1005f24b:	or     eax,0x1000
1005f250:	ret    
1005f251:	xor    eax,eax
1005f253:	test   dl,0x10
1005f256:	je     0x1005f25d
1005f258:	mov    eax,0x80
1005f25d:	test   dl,0x8
1005f260:	push   ebx
1005f261:	push   esi
1005f262:	push   edi
1005f263:	mov    ebx,0x200
1005f268:	je     0x1005f26c
1005f26a:	or     eax,ebx
1005f26c:	test   dl,0x4
1005f26f:	je     0x1005f276
1005f271:	or     eax,0x400
1005f276:	test   dl,0x2
1005f279:	je     0x1005f280
1005f27b:	or     eax,0x800
1005f280:	test   dl,0x1
1005f283:	je     0x1005f28a
1005f285:	or     eax,0x1000
1005f28a:	test   edx,0x80000
1005f290:	mov    edi,0x100
1005f295:	je     0x1005f299
1005f297:	or     eax,edi
1005f299:	mov    ecx,edx
1005f29b:	mov    esi,0x300
1005f2a0:	and    ecx,esi
1005f2a2:	je     0x1005f2c3
1005f2a4:	cmp    ecx,edi
1005f2a6:	je     0x1005f2be
1005f2a8:	cmp    ecx,ebx
1005f2aa:	je     0x1005f2b7
1005f2ac:	cmp    ecx,esi
1005f2ae:	jne    0x1005f2c3
1005f2b0:	or     eax,0x6000
1005f2b5:	jmp    0x1005f2c3
1005f2b7:	or     eax,0x4000
1005f2bc:	jmp    0x1005f2c3
1005f2be:	or     eax,0x2000
1005f2c3:	mov    ecx,0x3000000
1005f2c8:	pop    edi
1005f2c9:	and    edx,ecx
1005f2cb:	cmp    edx,0x1000000
1005f2d1:	pop    esi
1005f2d2:	pop    ebx
1005f2d3:	je     0x1005f2eb
1005f2d5:	cmp    edx,0x2000000
1005f2db:	je     0x1005f2e7
1005f2dd:	cmp    edx,ecx
1005f2df:	jne    0x1005f2f0
1005f2e1:	or     eax,0x8000
1005f2e6:	ret    
1005f2e7:	or     eax,0x40
1005f2ea:	ret    
1005f2eb:	or     eax,0x8040
1005f2f0:	ret    
1005f2f1:	sub    esp,0x10
1005f2f4:	push   ebx
1005f2f5:	push   ebp
1005f2f6:	push   esi
1005f2f7:	push   edi
1005f2f8:	fstcw  WORD PTR [esp+0x14]
1005f2fd:	mov    ebx,DWORD PTR [esp+0x14]
1005f301:	xor    edx,edx
1005f303:	test   bl,0x1
1005f306:	je     0x1005f30b
1005f308:	push   0x10
1005f30a:	pop    edx
1005f30b:	test   bl,0x4
1005f30e:	je     0x1005f313
1005f310:	or     edx,0x8
1005f313:	test   bl,0x8
1005f316:	je     0x1005f31b
1005f318:	or     edx,0x4
1005f31b:	test   bl,0x10
1005f31e:	je     0x1005f323
1005f320:	or     edx,0x2
1005f323:	test   bl,0x20
1005f326:	je     0x1005f32b
1005f328:	or     edx,0x1
1005f32b:	test   bl,0x2
1005f32e:	je     0x1005f336
1005f330:	or     edx,0x80000
1005f336:	movzx  ecx,bx
1005f339:	mov    eax,ecx
1005f33b:	mov    edi,0xc00
1005f340:	and    eax,edi
1005f342:	mov    ebp,0x300
1005f347:	mov    esi,0x200
1005f34c:	je     0x1005f36e
1005f34e:	cmp    eax,0x400
1005f353:	je     0x1005f368
1005f355:	cmp    eax,0x800
1005f35a:	je     0x1005f364
1005f35c:	cmp    eax,edi
1005f35e:	jne    0x1005f36e
1005f360:	or     edx,ebp
1005f362:	jmp    0x1005f36e
1005f364:	or     edx,esi
1005f366:	jmp    0x1005f36e
1005f368:	or     edx,0x100
1005f36e:	and    ecx,ebp
1005f370:	je     0x1005f37e
1005f372:	cmp    ecx,esi
1005f374:	jne    0x1005f384
1005f376:	or     edx,0x10000
1005f37c:	jmp    0x1005f384
1005f37e:	or     edx,0x20000
1005f384:	test   bx,0x1000
1005f389:	je     0x1005f391
1005f38b:	or     edx,0x40000
1005f391:	mov    esi,DWORD PTR [esp+0x28]
1005f395:	mov    ecx,DWORD PTR [esp+0x24]
1005f399:	mov    eax,esi
1005f39b:	not    eax
1005f39d:	and    eax,edx
1005f39f:	and    ecx,esi
1005f3a1:	or     eax,ecx
1005f3a3:	cmp    eax,edx
1005f3a5:	mov    DWORD PTR [esp+0x1c],eax
1005f3a9:	je     0x1005f459
1005f3af:	mov    ebx,eax
1005f3b1:	call   0x1005f1c3
1005f3b6:	movzx  eax,ax
1005f3b9:	mov    DWORD PTR [esp+0x10],eax
1005f3bd:	fldcw  WORD PTR [esp+0x10]
1005f3c1:	fstcw  WORD PTR [esp+0x10]
1005f3c6:	mov    ebx,DWORD PTR [esp+0x10]
1005f3ca:	xor    edx,edx
1005f3cc:	test   bl,0x1
1005f3cf:	je     0x1005f3d4
1005f3d1:	push   0x10
1005f3d3:	pop    edx
1005f3d4:	test   bl,0x4
1005f3d7:	je     0x1005f3dc
1005f3d9:	or     edx,0x8
1005f3dc:	test   bl,0x8
1005f3df:	je     0x1005f3e4
1005f3e1:	or     edx,0x4
1005f3e4:	test   bl,0x10
1005f3e7:	je     0x1005f3ec
1005f3e9:	or     edx,0x2
1005f3ec:	test   bl,0x20
1005f3ef:	je     0x1005f3f4
1005f3f1:	or     edx,0x1
1005f3f4:	test   bl,0x2
1005f3f7:	je     0x1005f3ff
1005f3f9:	or     edx,0x80000
1005f3ff:	movzx  ecx,bx
1005f402:	mov    eax,ecx
1005f404:	and    eax,edi
1005f406:	je     0x1005f42c
1005f408:	cmp    eax,0x400
1005f40d:	je     0x1005f426
1005f40f:	cmp    eax,0x800
1005f414:	je     0x1005f41e
1005f416:	cmp    eax,edi
1005f418:	jne    0x1005f42c
1005f41a:	or     edx,ebp
1005f41c:	jmp    0x1005f42c
1005f41e:	or     edx,0x200
1005f424:	jmp    0x1005f42c
1005f426:	or     edx,0x100
1005f42c:	and    ecx,ebp
1005f42e:	je     0x1005f440
1005f430:	cmp    ecx,0x200
1005f436:	jne    0x1005f446
1005f438:	or     edx,0x10000
1005f43e:	jmp    0x1005f446
1005f440:	or     edx,0x20000
1005f446:	test   bx,0x1000
1005f44b:	je     0x1005f453
1005f44d:	or     edx,0x40000
1005f453:	mov    eax,edx
1005f455:	mov    DWORD PTR [esp+0x1c],edx
1005f459:	cmp    DWORD PTR ds:0x100845e4,0x0
1005f460:	je     0x1005f5ec
1005f466:	and    esi,0x308031f
1005f46c:	mov    edi,esi
1005f46e:	stmxcsr DWORD PTR [esp+0x18]
1005f473:	mov    eax,DWORD PTR [esp+0x18]
1005f477:	xor    esi,esi
1005f479:	test   al,al
1005f47b:	jns    0x1005f480
1005f47d:	push   0x10
1005f47f:	pop    esi
1005f480:	test   ax,0x200
1005f484:	je     0x1005f489
1005f486:	or     esi,0x8
1005f489:	test   ax,0x400
1005f48d:	je     0x1005f492
1005f48f:	or     esi,0x4
1005f492:	test   ax,0x800
1005f496:	je     0x1005f49b
1005f498:	or     esi,0x2
1005f49b:	test   ax,0x1000
1005f49f:	je     0x1005f4a4
1005f4a1:	or     esi,0x1
1005f4a4:	test   ax,0x100
1005f4a8:	je     0x1005f4b0
1005f4aa:	or     esi,0x80000
1005f4b0:	mov    ecx,eax
1005f4b2:	mov    ebp,0x6000
1005f4b7:	and    ecx,ebp
1005f4b9:	je     0x1005f4e5
1005f4bb:	cmp    ecx,0x2000
1005f4c1:	je     0x1005f4df
1005f4c3:	cmp    ecx,0x4000
1005f4c9:	je     0x1005f4d7
1005f4cb:	cmp    ecx,ebp
1005f4cd:	jne    0x1005f4e5
1005f4cf:	or     esi,0x300
1005f4d5:	jmp    0x1005f4e5
1005f4d7:	or     esi,0x200
1005f4dd:	jmp    0x1005f4e5
1005f4df:	or     esi,0x100
1005f4e5:	mov    ebx,0x8040
1005f4ea:	and    eax,ebx
1005f4ec:	sub    eax,0x40
1005f4ef:	je     0x1005f50d
1005f4f1:	sub    eax,0x7fc0
1005f4f6:	je     0x1005f505
1005f4f8:	sub    eax,0x40
1005f4fb:	jne    0x1005f513
1005f4fd:	or     esi,0x1000000
1005f503:	jmp    0x1005f513
1005f505:	or     esi,0x3000000
1005f50b:	jmp    0x1005f513
1005f50d:	or     esi,0x2000000
1005f513:	mov    edx,edi
1005f515:	and    edi,DWORD PTR [esp+0x24]
1005f519:	not    edx
1005f51b:	and    edx,esi
1005f51d:	or     edx,edi
1005f51f:	cmp    edx,esi
1005f521:	jne    0x1005f52a
1005f523:	mov    eax,esi
1005f525:	jmp    0x1005f5d5
1005f52a:	call   0x1005f251
1005f52f:	push   eax
1005f530:	mov    DWORD PTR [esp+0x2c],eax
1005f534:	call   0x1005f7c0
1005f539:	pop    ecx
1005f53a:	stmxcsr DWORD PTR [esp+0x28]
1005f53f:	mov    eax,DWORD PTR [esp+0x28]
1005f543:	xor    edx,edx
1005f545:	test   al,al
1005f547:	jns    0x1005f54c
1005f549:	push   0x10
1005f54b:	pop    edx
1005f54c:	mov    edi,0x200
1005f551:	test   edi,eax
1005f553:	je     0x1005f558
1005f555:	or     edx,0x8
1005f558:	test   ax,0x400
1005f55c:	je     0x1005f561
1005f55e:	or     edx,0x4
1005f561:	test   ax,0x800
1005f565:	je     0x1005f56a
1005f567:	or     edx,0x2
1005f56a:	test   ax,0x1000
1005f56e:	je     0x1005f573
1005f570:	or     edx,0x1
1005f573:	mov    esi,0x100
1005f578:	test   esi,eax
1005f57a:	je     0x1005f582
1005f57c:	or     edx,0x80000
1005f582:	mov    ecx,eax
1005f584:	and    ecx,ebp
1005f586:	je     0x1005f5aa
1005f588:	cmp    ecx,0x2000
1005f58e:	je     0x1005f5a8
1005f590:	cmp    ecx,0x4000
1005f596:	je     0x1005f5a4
1005f598:	cmp    ecx,ebp
1005f59a:	jne    0x1005f5aa
1005f59c:	or     edx,0x300
1005f5a2:	jmp    0x1005f5aa
1005f5a4:	or     edx,edi
1005f5a6:	jmp    0x1005f5aa
1005f5a8:	or     edx,esi
1005f5aa:	and    eax,ebx
1005f5ac:	sub    eax,0x40
1005f5af:	je     0x1005f5cd
1005f5b1:	sub    eax,0x7fc0
1005f5b6:	je     0x1005f5c5
1005f5b8:	sub    eax,0x40
1005f5bb:	jne    0x1005f5d3
1005f5bd:	or     edx,0x1000000
1005f5c3:	jmp    0x1005f5d3
1005f5c5:	or     edx,0x3000000
1005f5cb:	jmp    0x1005f5d3
1005f5cd:	or     edx,0x2000000
1005f5d3:	mov    eax,edx
1005f5d5:	mov    ecx,DWORD PTR [esp+0x1c]
1005f5d9:	mov    edx,eax
1005f5db:	xor    edx,ecx
1005f5dd:	or     eax,ecx
1005f5df:	test   edx,0x8031f
1005f5e5:	je     0x1005f5ec
1005f5e7:	or     eax,0x80000000
1005f5ec:	pop    edi
1005f5ed:	pop    esi
1005f5ee:	pop    ebp
1005f5ef:	pop    ebx
1005f5f0:	add    esp,0x10
1005f5f3:	ret    
1005f5f4:	push   ebp
1005f5f5:	mov    ebp,esp
1005f5f7:	sub    esp,0x18
1005f5fa:	mov    eax,ds:0x100801ac
1005f5ff:	xor    eax,ebp
1005f601:	mov    DWORD PTR [ebp-0x4],eax
1005f604:	mov    eax,DWORD PTR [ebp+0x10]
1005f607:	push   ebx
1005f608:	push   esi
1005f609:	xor    esi,esi
1005f60b:	cmp    DWORD PTR [ebp+0xc],esi
1005f60e:	push   edi
1005f60f:	mov    DWORD PTR [ebp-0x18],0x404e
1005f616:	mov    DWORD PTR [eax],esi
1005f618:	mov    DWORD PTR [eax+0x4],esi
1005f61b:	mov    DWORD PTR [eax+0x8],esi
1005f61e:	jbe    0x1005f76a
1005f624:	mov    edx,DWORD PTR [eax]
1005f626:	mov    ebx,DWORD PTR [eax+0x4]
1005f629:	mov    esi,eax
1005f62b:	lea    edi,[ebp-0x10]
1005f62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005f631:	mov    ecx,edx
1005f633:	shr    ecx,0x1f
1005f636:	lea    edi,[edx+edx*1]
1005f639:	lea    edx,[ebx+ebx*1]
1005f63c:	or     edx,ecx
1005f63e:	mov    ecx,DWORD PTR [eax+0x8]
1005f641:	mov    esi,ebx
1005f643:	shr    esi,0x1f
1005f646:	add    ecx,ecx
1005f648:	or     ecx,esi
1005f64a:	mov    DWORD PTR [ebp-0x14],edi
1005f64d:	mov    esi,edi
1005f64f:	and    DWORD PTR [ebp-0x14],0x0
1005f653:	mov    ebx,edx
1005f655:	shr    ebx,0x1f
1005f658:	add    ecx,ecx
1005f65a:	shr    edi,0x1f
1005f65d:	or     ecx,ebx
1005f65f:	mov    ebx,DWORD PTR [ebp-0x10]
1005f662:	add    esi,esi
1005f664:	add    edx,edx
1005f666:	or     edx,edi
1005f668:	lea    edi,[esi+ebx*1]
1005f66b:	cmp    edi,esi
1005f66d:	mov    DWORD PTR [eax],esi
1005f66f:	mov    DWORD PTR [eax+0x4],edx
1005f672:	mov    DWORD PTR [eax+0x8],ecx
1005f675:	jb     0x1005f67b
1005f677:	cmp    edi,ebx
1005f679:	jae    0x1005f682
1005f67b:	mov    DWORD PTR [ebp-0x14],0x1
1005f682:	xor    ebx,ebx
1005f684:	cmp    DWORD PTR [ebp-0x14],ebx
1005f687:	mov    DWORD PTR [eax],edi
1005f689:	je     0x1005f6a5
1005f68b:	lea    esi,[edx+0x1]
1005f68e:	cmp    esi,edx
1005f690:	jb     0x1005f697
1005f692:	cmp    esi,0x1
1005f695:	jae    0x1005f69a
1005f697:	xor    ebx,ebx
1005f699:	inc    ebx
1005f69a:	test   ebx,ebx
1005f69c:	mov    DWORD PTR [eax+0x4],esi
1005f69f:	je     0x1005f6a5
1005f6a1:	inc    ecx
1005f6a2:	mov    DWORD PTR [eax+0x8],ecx
1005f6a5:	mov    ecx,DWORD PTR [eax+0x4]
1005f6a8:	mov    edx,DWORD PTR [ebp-0xc]
1005f6ab:	lea    ebx,[ecx+edx*1]
1005f6ae:	xor    esi,esi
1005f6b0:	cmp    ebx,ecx
1005f6b2:	jb     0x1005f6b8
1005f6b4:	cmp    ebx,edx
1005f6b6:	jae    0x1005f6bb
1005f6b8:	xor    esi,esi
1005f6ba:	inc    esi
1005f6bb:	test   esi,esi
1005f6bd:	mov    DWORD PTR [eax+0x4],ebx
1005f6c0:	je     0x1005f6c5
1005f6c2:	inc    DWORD PTR [eax+0x8]
1005f6c5:	mov    ecx,DWORD PTR [ebp-0x8]
1005f6c8:	add    DWORD PTR [eax+0x8],ecx
1005f6cb:	and    DWORD PTR [ebp-0x14],0x0
1005f6cf:	lea    ecx,[edi+edi*1]
1005f6d2:	mov    edx,edi
1005f6d4:	shr    edx,0x1f
1005f6d7:	lea    edi,[ebx+ebx*1]
1005f6da:	or     edi,edx
1005f6dc:	mov    edx,DWORD PTR [eax+0x8]
1005f6df:	mov    esi,ebx
1005f6e1:	shr    esi,0x1f
1005f6e4:	lea    ebx,[edx+edx*1]
1005f6e7:	mov    edx,DWORD PTR [ebp+0x8]
1005f6ea:	or     ebx,esi
1005f6ec:	mov    DWORD PTR [eax],ecx
1005f6ee:	mov    DWORD PTR [eax+0x4],edi
1005f6f1:	mov    DWORD PTR [eax+0x8],ebx
1005f6f4:	movsx  edx,BYTE PTR [edx]
1005f6f7:	lea    esi,[ecx+edx*1]
1005f6fa:	cmp    esi,ecx
1005f6fc:	mov    DWORD PTR [ebp-0x10],edx
1005f6ff:	jb     0x1005f705
1005f701:	cmp    esi,edx
1005f703:	jae    0x1005f70c
1005f705:	mov    DWORD PTR [ebp-0x14],0x1
1005f70c:	cmp    DWORD PTR [ebp-0x14],0x0
1005f710:	mov    DWORD PTR [eax],esi
1005f712:	je     0x1005f730
1005f714:	lea    ecx,[edi+0x1]
1005f717:	xor    edx,edx
1005f719:	cmp    ecx,edi
1005f71b:	jb     0x1005f722
1005f71d:	cmp    ecx,0x1
1005f720:	jae    0x1005f725
1005f722:	xor    edx,edx
1005f724:	inc    edx
1005f725:	test   edx,edx
1005f727:	mov    DWORD PTR [eax+0x4],ecx
1005f72a:	je     0x1005f730
1005f72c:	inc    ebx
1005f72d:	mov    DWORD PTR [eax+0x8],ebx
1005f730:	dec    DWORD PTR [ebp+0xc]
1005f733:	inc    DWORD PTR [ebp+0x8]
1005f736:	cmp    DWORD PTR [ebp+0xc],0x0
1005f73a:	ja     0x1005f624
1005f740:	xor    esi,esi
1005f742:	jmp    0x1005f76a
1005f744:	mov    ecx,DWORD PTR [eax+0x4]
1005f747:	mov    edx,ecx
1005f749:	shr    edx,0x10
1005f74c:	mov    DWORD PTR [eax+0x8],edx
1005f74f:	mov    edx,DWORD PTR [eax]
1005f751:	mov    edi,edx
1005f753:	shl    ecx,0x10
1005f756:	shr    edi,0x10
1005f759:	or     ecx,edi
1005f75b:	shl    edx,0x10
1005f75e:	add    DWORD PTR [ebp-0x18],0xfff0
1005f765:	mov    DWORD PTR [eax+0x4],ecx
1005f768:	mov    DWORD PTR [eax],edx
1005f76a:	cmp    DWORD PTR [eax+0x8],esi
1005f76d:	je     0x1005f744
1005f76f:	mov    ebx,0x8000
1005f774:	test   DWORD PTR [eax+0x8],ebx
1005f777:	jne    0x1005f7a9
1005f779:	mov    esi,DWORD PTR [eax]
1005f77b:	mov    edi,DWORD PTR [eax+0x4]
1005f77e:	add    DWORD PTR [ebp-0x18],0xffff
1005f785:	mov    ecx,esi
1005f787:	add    esi,esi
1005f789:	shr    ecx,0x1f
1005f78c:	mov    DWORD PTR [eax],esi
1005f78e:	lea    esi,[edi+edi*1]
1005f791:	or     esi,ecx
1005f793:	mov    ecx,DWORD PTR [eax+0x8]
1005f796:	mov    edx,edi
1005f798:	shr    edx,0x1f
1005f79b:	add    ecx,ecx
1005f79d:	or     ecx,edx
1005f79f:	test   ebx,ecx
1005f7a1:	mov    DWORD PTR [eax+0x4],esi
1005f7a4:	mov    DWORD PTR [eax+0x8],ecx
1005f7a7:	je     0x1005f779
1005f7a9:	mov    cx,WORD PTR [ebp-0x18]
1005f7ad:	mov    WORD PTR [eax+0xa],cx
1005f7b1:	mov    ecx,DWORD PTR [ebp-0x4]
1005f7b4:	pop    edi
1005f7b5:	pop    esi
1005f7b6:	xor    ecx,ebp
1005f7b8:	pop    ebx
1005f7b9:	call   0x10043615
1005f7be:	leave  
1005f7bf:	ret    
1005f7c0:	push   0x8
1005f7c2:	push   0x100763a8
1005f7c7:	call   0x1004771c
1005f7cc:	xor    eax,eax
1005f7ce:	cmp    DWORD PTR ds:0x100845e4,eax
1005f7d4:	je     0x1005f82c
1005f7d6:	test   BYTE PTR [ebp+0x8],0x40
1005f7da:	je     0x1005f824
1005f7dc:	cmp    DWORD PTR ds:0x10081504,eax
1005f7e2:	je     0x1005f824
1005f7e4:	mov    DWORD PTR [ebp-0x4],eax
1005f7e7:	ldmxcsr DWORD PTR [ebp+0x8]
1005f7eb:	jmp    0x1005f81b
1005f7ed:	mov    eax,DWORD PTR [ebp-0x14]
1005f7f0:	mov    eax,DWORD PTR [eax]
1005f7f2:	mov    eax,DWORD PTR [eax]
1005f7f4:	cmp    eax,0xc0000005
1005f7f9:	je     0x1005f805
1005f7fb:	cmp    eax,0xc000001d
1005f800:	je     0x1005f805
1005f802:	xor    eax,eax
1005f804:	ret    
1005f805:	xor    eax,eax
1005f807:	inc    eax
1005f808:	ret    
1005f809:	mov    esp,DWORD PTR [ebp-0x18]
1005f80c:	and    DWORD PTR ds:0x10081504,0x0
1005f813:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f817:	ldmxcsr DWORD PTR [ebp+0x8]
1005f81b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f822:	jmp    0x1005f82c
1005f824:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005f828:	ldmxcsr DWORD PTR [ebp+0x8]
1005f82c:	call   0x10047761
1005f831:	ret    
1005f832:	int3   
1005f833:	int3   
1005f834:	int3   
1005f835:	int3   
1005f836:	int3   
1005f837:	int3   
1005f838:	int3   
1005f839:	int3   
1005f83a:	int3   
1005f83b:	int3   
1005f83c:	int3   
1005f83d:	int3   
1005f83e:	int3   
1005f83f:	int3   
1005f840:	push   edi
1005f841:	push   esi
1005f842:	push   ebx
1005f843:	xor    edi,edi
1005f845:	mov    eax,DWORD PTR [esp+0x14]
1005f849:	or     eax,eax
1005f84b:	jge    0x1005f861
1005f84d:	inc    edi
1005f84e:	mov    edx,DWORD PTR [esp+0x10]
1005f852:	neg    eax
1005f854:	neg    edx
1005f856:	sbb    eax,0x0
1005f859:	mov    DWORD PTR [esp+0x14],eax
1005f85d:	mov    DWORD PTR [esp+0x10],edx
1005f861:	mov    eax,DWORD PTR [esp+0x1c]
1005f865:	or     eax,eax
1005f867:	jge    0x1005f87d
1005f869:	inc    edi
1005f86a:	mov    edx,DWORD PTR [esp+0x18]
1005f86e:	neg    eax
1005f870:	neg    edx
1005f872:	sbb    eax,0x0
1005f875:	mov    DWORD PTR [esp+0x1c],eax
1005f879:	mov    DWORD PTR [esp+0x18],edx
1005f87d:	or     eax,eax
1005f87f:	jne    0x1005f899
1005f881:	mov    ecx,DWORD PTR [esp+0x18]
1005f885:	mov    eax,DWORD PTR [esp+0x14]
1005f889:	xor    edx,edx
1005f88b:	div    ecx
1005f88d:	mov    ebx,eax
1005f88f:	mov    eax,DWORD PTR [esp+0x10]
1005f893:	div    ecx
1005f895:	mov    edx,ebx
1005f897:	jmp    0x1005f8da
1005f899:	mov    ebx,eax
1005f89b:	mov    ecx,DWORD PTR [esp+0x18]
1005f89f:	mov    edx,DWORD PTR [esp+0x14]
1005f8a3:	mov    eax,DWORD PTR [esp+0x10]
1005f8a7:	shr    ebx,1
1005f8a9:	rcr    ecx,1
1005f8ab:	shr    edx,1
1005f8ad:	rcr    eax,1
1005f8af:	or     ebx,ebx
1005f8b1:	jne    0x1005f8a7
1005f8b3:	div    ecx
1005f8b5:	mov    esi,eax
1005f8b7:	mul    DWORD PTR [esp+0x1c]
1005f8bb:	mov    ecx,eax
1005f8bd:	mov    eax,DWORD PTR [esp+0x18]
1005f8c1:	mul    esi
1005f8c3:	add    edx,ecx
1005f8c5:	jb     0x1005f8d5
1005f8c7:	cmp    edx,DWORD PTR [esp+0x14]
1005f8cb:	ja     0x1005f8d5
1005f8cd:	jb     0x1005f8d6
1005f8cf:	cmp    eax,DWORD PTR [esp+0x10]
1005f8d3:	jbe    0x1005f8d6
1005f8d5:	dec    esi
1005f8d6:	xor    edx,edx
1005f8d8:	mov    eax,esi
1005f8da:	dec    edi
1005f8db:	jne    0x1005f8e4
1005f8dd:	neg    edx
1005f8df:	neg    eax
1005f8e1:	sbb    edx,0x0
1005f8e4:	pop    ebx
1005f8e5:	pop    esi
1005f8e6:	pop    edi
1005f8e7:	ret    0x10
1005f8ea:	int3   
1005f8eb:	int3   
1005f8ec:	push   0x10047780
1005f8f1:	push   DWORD PTR fs:0x0
1005f8f8:	mov    eax,DWORD PTR [esp+0x10]
1005f8fc:	mov    DWORD PTR [esp+0x10],ebp
1005f900:	lea    ebp,[esp+0x10]
1005f904:	sub    esp,eax
1005f906:	push   ebx
1005f907:	push   esi
1005f908:	push   edi
1005f909:	mov    eax,ds:0x100801ac
1005f90e:	xor    DWORD PTR [ebp-0x4],eax
1005f911:	xor    eax,ebp
1005f913:	mov    DWORD PTR [ebp-0x1c],eax
1005f916:	push   eax
1005f917:	mov    DWORD PTR [ebp-0x18],esp
1005f91a:	push   DWORD PTR [ebp-0x8]
1005f91d:	mov    eax,DWORD PTR [ebp-0x4]
1005f920:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005f927:	mov    DWORD PTR [ebp-0x8],eax
1005f92a:	lea    eax,[ebp-0x10]
1005f92d:	mov    fs:0x0,eax
1005f933:	ret    
1005f934:	mov    ecx,DWORD PTR [ebp-0x1c]
1005f937:	xor    ecx,ebp
1005f939:	call   0x10043615
1005f93e:	jmp    0x10047761
1005f943:	int3   
1005f944:	int3   
1005f945:	int3   
1005f946:	int3   
1005f947:	int3   
1005f948:	int3   
1005f949:	int3   
1005f94a:	int3   
1005f94b:	int3   
1005f94c:	int3   
1005f94d:	int3   
1005f94e:	int3   
1005f94f:	int3   
1005f950:	cmp    DWORD PTR ds:0x100845e4,0x0
1005f957:	je     0x1005f986
1005f959:	push   ebp
1005f95a:	mov    ebp,esp
1005f95c:	sub    esp,0x8
1005f95f:	and    esp,0xfffffff8
1005f962:	fstp   QWORD PTR [esp]
1005f965:	cvttsd2si eax,QWORD PTR [esp]
1005f96a:	leave  
1005f96b:	ret    
1005f96c:	cmp    DWORD PTR ds:0x100845e4,0x0
1005f973:	je     0x1005f986
1005f975:	sub    esp,0x4
1005f978:	fnstcw WORD PTR [esp]
1005f97b:	pop    eax
1005f97c:	and    ax,0x7f
1005f980:	cmp    ax,0x7f
1005f984:	je     0x1005f959
1005f986:	push   ebp
1005f987:	mov    ebp,esp
1005f989:	sub    esp,0x20
1005f98c:	and    esp,0xfffffff0
1005f98f:	fld    st(0)
1005f991:	fst    DWORD PTR [esp+0x18]
1005f995:	fistp  QWORD PTR [esp+0x10]
1005f999:	fild   QWORD PTR [esp+0x10]
1005f99d:	mov    edx,DWORD PTR [esp+0x18]
1005f9a1:	mov    eax,DWORD PTR [esp+0x10]
1005f9a5:	test   eax,eax
1005f9a7:	je     0x1005f9e5
1005f9a9:	fsubp  st(1),st
1005f9ab:	test   edx,edx
1005f9ad:	jns    0x1005f9cd
1005f9af:	fstp   DWORD PTR [esp]
1005f9b2:	mov    ecx,DWORD PTR [esp]
1005f9b5:	xor    ecx,0x80000000
1005f9bb:	add    ecx,0x7fffffff
1005f9c1:	adc    eax,0x0
1005f9c4:	mov    edx,DWORD PTR [esp+0x14]
1005f9c8:	adc    edx,0x0
1005f9cb:	jmp    0x1005f9f9
1005f9cd:	fstp   DWORD PTR [esp]
1005f9d0:	mov    ecx,DWORD PTR [esp]
1005f9d3:	add    ecx,0x7fffffff
1005f9d9:	sbb    eax,0x0
1005f9dc:	mov    edx,DWORD PTR [esp+0x14]
1005f9e0:	sbb    edx,0x0
1005f9e3:	jmp    0x1005f9f9
1005f9e5:	mov    edx,DWORD PTR [esp+0x14]
1005f9e9:	test   edx,0x7fffffff
1005f9ef:	jne    0x1005f9a9
1005f9f1:	fstp   DWORD PTR [esp+0x18]
1005f9f5:	fstp   DWORD PTR [esp+0x18]
1005f9f9:	leave  
1005f9fa:	ret    
1005f9fb:	int3   
1005f9fc:	int3   
1005f9fd:	int3   
1005f9fe:	int3   
1005f9ff:	int3   
1005fa00:	push   ebx
1005fa01:	push   esi
1005fa02:	mov    eax,DWORD PTR [esp+0x18]
1005fa06:	or     eax,eax
1005fa08:	jne    0x1005fa22
1005fa0a:	mov    ecx,DWORD PTR [esp+0x14]
1005fa0e:	mov    eax,DWORD PTR [esp+0x10]
1005fa12:	xor    edx,edx
1005fa14:	div    ecx
1005fa16:	mov    ebx,eax
1005fa18:	mov    eax,DWORD PTR [esp+0xc]
1005fa1c:	div    ecx
1005fa1e:	mov    edx,ebx
1005fa20:	jmp    0x1005fa63
1005fa22:	mov    ecx,eax
1005fa24:	mov    ebx,DWORD PTR [esp+0x14]
1005fa28:	mov    edx,DWORD PTR [esp+0x10]
1005fa2c:	mov    eax,DWORD PTR [esp+0xc]
1005fa30:	shr    ecx,1
1005fa32:	rcr    ebx,1
1005fa34:	shr    edx,1
1005fa36:	rcr    eax,1
1005fa38:	or     ecx,ecx
1005fa3a:	jne    0x1005fa30
1005fa3c:	div    ebx
1005fa3e:	mov    esi,eax
1005fa40:	mul    DWORD PTR [esp+0x18]
1005fa44:	mov    ecx,eax
1005fa46:	mov    eax,DWORD PTR [esp+0x14]
1005fa4a:	mul    esi
1005fa4c:	add    edx,ecx
1005fa4e:	jb     0x1005fa5e
1005fa50:	cmp    edx,DWORD PTR [esp+0x10]
1005fa54:	ja     0x1005fa5e
1005fa56:	jb     0x1005fa5f
1005fa58:	cmp    eax,DWORD PTR [esp+0xc]
1005fa5c:	jbe    0x1005fa5f
1005fa5e:	dec    esi
1005fa5f:	xor    edx,edx
1005fa61:	mov    eax,esi
1005fa63:	pop    esi
1005fa64:	pop    ebx
1005fa65:	ret    0x10
1005fa68:	int3   
1005fa69:	int3   
1005fa6a:	int3   
1005fa6b:	int3   
1005fa6c:	int3   
1005fa6d:	int3   
1005fa6e:	int3   
1005fa6f:	int3   
1005fa70:	mov    edx,DWORD PTR [esp+0x8]
1005fa74:	lea    eax,[edx+0xc]
1005fa77:	mov    ecx,DWORD PTR [edx-0x14]
1005fa7a:	xor    ecx,eax
1005fa7c:	call   0x10043615
1005fa81:	mov    eax,0x10076130
1005fa86:	jmp    0x1005959f
1005fa8b:	mov    edx,DWORD PTR [esp+0x8]
1005fa8f:	lea    eax,[edx+0xc]
1005fa92:	mov    ecx,DWORD PTR [edx-0x14]
1005fa95:	xor    ecx,eax
1005fa97:	call   0x10043615
1005fa9c:	mov    eax,0x100762a0
1005faa1:	jmp    0x1005959f
1005faa6:	mov    ecx,DWORD PTR [ebp-0x10]
1005faa9:	jmp    0x1002acc3
1005faae:	mov    edx,DWORD PTR [esp+0x8]
1005fab2:	lea    eax,[edx+0xc]
1005fab5:	mov    ecx,DWORD PTR [edx-0x14]
1005fab8:	xor    ecx,eax
1005faba:	call   0x10043615
1005fabf:	mov    eax,0x100765ac
1005fac4:	jmp    0x1005959f
1005fac9:	mov    eax,DWORD PTR [ebp-0x10]
1005facc:	add    eax,0x4
1005facf:	jmp    0x1002b964
1005fad4:	mov    edx,DWORD PTR [esp+0x8]
1005fad8:	lea    eax,[edx+0xc]
1005fadb:	mov    ecx,DWORD PTR [edx-0x14]
1005fade:	xor    ecx,eax
1005fae0:	call   0x10043615
1005fae5:	mov    eax,0x100765d8
1005faea:	jmp    0x1005959f
1005faef:	lea    eax,[ebp+0x10]
1005faf2:	jmp    0x1002b964
1005faf7:	mov    edx,DWORD PTR [esp+0x8]
1005fafb:	lea    eax,[edx+0xc]
1005fafe:	mov    ecx,DWORD PTR [edx-0x10]
1005fb01:	xor    ecx,eax
1005fb03:	call   0x10043615
1005fb08:	mov    eax,0x10076604
1005fb0d:	jmp    0x1005959f
1005fb12:	lea    eax,[ebp-0x10]
1005fb15:	jmp    0x1002b964
1005fb1a:	mov    edx,DWORD PTR [esp+0x8]
1005fb1e:	lea    eax,[edx+0xc]
1005fb21:	mov    ecx,DWORD PTR [edx-0x14]
1005fb24:	xor    ecx,eax
1005fb26:	call   0x10043615
1005fb2b:	mov    eax,0x10076630
1005fb30:	jmp    0x1005959f
1005fb35:	lea    eax,[ebp+0x8]
1005fb38:	jmp    0x1002b964
1005fb3d:	mov    edx,DWORD PTR [esp+0x8]
1005fb41:	lea    eax,[edx+0xc]
1005fb44:	mov    ecx,DWORD PTR [edx-0x10]
1005fb47:	xor    ecx,eax
1005fb49:	call   0x10043615
1005fb4e:	mov    eax,0x1007665c
1005fb53:	jmp    0x1005959f
1005fb58:	lea    eax,[ebp-0x28]
1005fb5b:	jmp    0x1002b964
1005fb60:	mov    edx,DWORD PTR [esp+0x8]
1005fb64:	lea    eax,[edx+0xc]
1005fb67:	mov    ecx,DWORD PTR [edx-0x30]
1005fb6a:	xor    ecx,eax
1005fb6c:	call   0x10043615
1005fb71:	mov    ecx,DWORD PTR [edx-0x4]
1005fb74:	xor    ecx,eax
1005fb76:	call   0x10043615
1005fb7b:	mov    eax,0x10076688
1005fb80:	jmp    0x1005959f
1005fb85:	int3   
1005fb86:	int3   
1005fb87:	int3   
1005fb88:	int3   
1005fb89:	int3   
1005fb8a:	int3   
1005fb8b:	int3   
1005fb8c:	int3   
1005fb8d:	int3   
1005fb8e:	int3   
1005fb8f:	int3   
1005fb90:	lea    eax,[ebp-0x10]
1005fb93:	jmp    0x100020aa
1005fb98:	mov    edx,DWORD PTR [esp+0x8]
1005fb9c:	lea    eax,[edx-0x1c]
1005fb9f:	mov    ecx,DWORD PTR [edx-0x20]
1005fba2:	xor    ecx,eax
1005fba4:	call   0x10043615
1005fba9:	mov    eax,0x100766b4
1005fbae:	jmp    0x1005959f
1005fbb3:	int3   
1005fbb4:	int3   
1005fbb5:	int3   
1005fbb6:	int3   
1005fbb7:	int3   
1005fbb8:	int3   
1005fbb9:	int3   
1005fbba:	int3   
1005fbbb:	int3   
1005fbbc:	int3   
1005fbbd:	int3   
1005fbbe:	int3   
1005fbbf:	int3   
1005fbc0:	lea    ecx,[ebp-0x20]
1005fbc3:	jmp    0x1001b6e2
1005fbc8:	mov    edx,DWORD PTR [esp+0x8]
1005fbcc:	lea    eax,[edx-0x14]
1005fbcf:	mov    ecx,DWORD PTR [edx-0x18]
1005fbd2:	xor    ecx,eax
1005fbd4:	call   0x10043615
1005fbd9:	mov    eax,0x100766e0
1005fbde:	jmp    0x1005959f
1005fbe3:	int3   
1005fbe4:	int3   
1005fbe5:	int3   
1005fbe6:	int3   
1005fbe7:	int3   
1005fbe8:	int3   
1005fbe9:	int3   
1005fbea:	int3   
1005fbeb:	int3   
1005fbec:	int3   
1005fbed:	int3   
1005fbee:	int3   
1005fbef:	int3   
1005fbf0:	mov    eax,DWORD PTR [ebp-0x10]
1005fbf3:	and    eax,0x1
1005fbf6:	je     0x1005fc08
1005fbfc:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fc00:	mov    edi,DWORD PTR [ebp+0x8]
1005fc03:	jmp    0x100024fb
1005fc08:	ret    
1005fc09:	mov    edx,DWORD PTR [esp+0x8]
1005fc0d:	lea    eax,[edx-0x8]
1005fc10:	mov    ecx,DWORD PTR [edx-0xc]
1005fc13:	xor    ecx,eax
1005fc15:	call   0x10043615
1005fc1a:	mov    eax,0x1007670c
1005fc1f:	jmp    0x1005959f
1005fc24:	int3   
1005fc25:	int3   
1005fc26:	int3   
1005fc27:	int3   
1005fc28:	int3   
1005fc29:	int3   
1005fc2a:	int3   
1005fc2b:	int3   
1005fc2c:	int3   
1005fc2d:	int3   
1005fc2e:	int3   
1005fc2f:	int3   
1005fc30:	lea    eax,[ebp-0x54]
1005fc33:	jmp    0x100020aa
1005fc38:	lea    eax,[ebp-0x4c]
1005fc3b:	jmp    0x100020aa
1005fc40:	mov    edx,DWORD PTR [esp+0x8]
1005fc44:	lea    eax,[edx-0x58]
1005fc47:	mov    ecx,DWORD PTR [edx-0x5c]
1005fc4a:	xor    ecx,eax
1005fc4c:	call   0x10043615
1005fc51:	mov    eax,0x10076740
1005fc56:	jmp    0x1005959f
1005fc5b:	int3   
1005fc5c:	int3   
1005fc5d:	int3   
1005fc5e:	int3   
1005fc5f:	int3   
1005fc60:	lea    eax,[ebp-0x50]
1005fc63:	jmp    0x100020aa
1005fc68:	lea    eax,[ebp-0x4c]
1005fc6b:	jmp    0x100020aa
1005fc70:	mov    edx,DWORD PTR [esp+0x8]
1005fc74:	lea    eax,[edx-0x5c]
1005fc77:	mov    ecx,DWORD PTR [edx-0x60]
1005fc7a:	xor    ecx,eax
1005fc7c:	call   0x10043615
1005fc81:	mov    eax,0x10076774
1005fc86:	jmp    0x1005959f
1005fc8b:	mov    ecx,DWORD PTR [ebp+0x8]
1005fc8e:	jmp    0x1002acc3
1005fc93:	mov    eax,DWORD PTR [ebp+0x8]
1005fc96:	add    eax,0x4
1005fc99:	jmp    0x1002ce3a
1005fc9e:	mov    edx,DWORD PTR [esp+0x8]
1005fca2:	lea    eax,[edx+0xc]
1005fca5:	mov    ecx,DWORD PTR [edx-0x10]
1005fca8:	xor    ecx,eax
1005fcaa:	call   0x10043615
1005fcaf:	mov    eax,0x100767a8
1005fcb4:	jmp    0x1005959f
1005fcb9:	lea    ecx,[ebp-0x20]
1005fcbc:	jmp    0x1001b6e2
1005fcc1:	mov    edx,DWORD PTR [esp+0x8]
1005fcc5:	lea    eax,[edx+0xc]
1005fcc8:	mov    ecx,DWORD PTR [edx-0x24]
1005fccb:	xor    ecx,eax
1005fccd:	call   0x10043615
1005fcd2:	mov    eax,0x100767d4
1005fcd7:	jmp    0x1005959f
1005fcdc:	mov    edx,DWORD PTR [esp+0x8]
1005fce0:	lea    eax,[edx+0xc]
1005fce3:	mov    ecx,DWORD PTR [edx-0x14]
1005fce6:	xor    ecx,eax
1005fce8:	call   0x10043615
1005fced:	mov    eax,0x1007682c
1005fcf2:	jmp    0x1005959f
1005fcf7:	mov    edx,DWORD PTR [esp+0x8]
1005fcfb:	lea    eax,[edx+0xc]
1005fcfe:	mov    ecx,DWORD PTR [edx-0x1c]
1005fd01:	xor    ecx,eax
1005fd03:	call   0x10043615
1005fd08:	mov    eax,0x10076884
1005fd0d:	jmp    0x1005959f
1005fd12:	push   DWORD PTR [ebp-0x20]
1005fd15:	call   0x10043178
1005fd1a:	pop    ecx
1005fd1b:	ret    
1005fd1c:	lea    eax,[ebp-0x14]
1005fd1f:	jmp    0x10001000
1005fd24:	mov    edx,DWORD PTR [esp+0x8]
1005fd28:	lea    eax,[edx+0xc]
1005fd2b:	mov    ecx,DWORD PTR [edx-0x28]
1005fd2e:	xor    ecx,eax
1005fd30:	call   0x10043615
1005fd35:	mov    eax,0x100768ec
1005fd3a:	jmp    0x1005959f
1005fd3f:	lea    eax,[ebp-0x10]
1005fd42:	jmp    0x100020aa
1005fd47:	mov    edx,DWORD PTR [esp+0x8]
1005fd4b:	lea    eax,[edx+0xc]
1005fd4e:	mov    ecx,DWORD PTR [edx-0x18]
1005fd51:	xor    ecx,eax
1005fd53:	call   0x10043615
1005fd58:	mov    eax,0x10076934
1005fd5d:	jmp    0x1005959f
1005fd62:	push   DWORD PTR [ebp-0x14]
1005fd65:	call   0x10043178
1005fd6a:	pop    ecx
1005fd6b:	ret    
1005fd6c:	lea    eax,[ebp+0x8]
1005fd6f:	jmp    0x10001000
1005fd74:	mov    edx,DWORD PTR [esp+0x8]
1005fd78:	lea    eax,[edx+0xc]
1005fd7b:	mov    ecx,DWORD PTR [edx-0x24]
1005fd7e:	xor    ecx,eax
1005fd80:	call   0x10043615
1005fd85:	mov    eax,0x1007699c
1005fd8a:	jmp    0x1005959f
1005fd8f:	mov    edx,DWORD PTR [esp+0x8]
1005fd93:	lea    eax,[edx+0xc]
1005fd96:	mov    ecx,DWORD PTR [edx-0x1c]
1005fd99:	xor    ecx,eax
1005fd9b:	call   0x10043615
1005fda0:	mov    eax,0x100769f4
1005fda5:	jmp    0x1005959f
1005fdaa:	mov    eax,DWORD PTR [ebp-0x10]
1005fdad:	and    eax,0x1
1005fdb0:	je     0x1005fdc2
1005fdb6:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fdba:	mov    edi,DWORD PTR [ebp+0x8]
1005fdbd:	jmp    0x100024fb
1005fdc2:	ret    
1005fdc3:	mov    edx,DWORD PTR [esp+0x8]
1005fdc7:	lea    eax,[edx+0xc]
1005fdca:	mov    ecx,DWORD PTR [edx-0x14]
1005fdcd:	xor    ecx,eax
1005fdcf:	call   0x10043615
1005fdd4:	mov    eax,0x10076a20
1005fdd9:	jmp    0x1005959f
1005fdde:	mov    edx,DWORD PTR [esp+0x8]
1005fde2:	lea    eax,[edx+0xc]
1005fde5:	mov    ecx,DWORD PTR [edx-0x1c]
1005fde8:	xor    ecx,eax
1005fdea:	call   0x10043615
1005fdef:	mov    eax,0x10076aac
1005fdf4:	jmp    0x1005959f
1005fdf9:	mov    ecx,DWORD PTR [ebp-0x10]
1005fdfc:	jmp    0x10043390
1005fe01:	mov    edx,DWORD PTR [esp+0x8]
1005fe05:	lea    eax,[edx+0xc]
1005fe08:	mov    ecx,DWORD PTR [edx-0x14]
1005fe0b:	xor    ecx,eax
1005fe0d:	call   0x10043615
1005fe12:	mov    eax,0x10076ad8
1005fe17:	jmp    0x1005959f
1005fe1c:	jmp    0x10002068
1005fe21:	mov    edx,DWORD PTR [esp+0x8]
1005fe25:	lea    eax,[edx+0xc]
1005fe28:	mov    ecx,DWORD PTR [edx-0x10]
1005fe2b:	xor    ecx,eax
1005fe2d:	call   0x10043615
1005fe32:	mov    eax,0x10076b04
1005fe37:	jmp    0x1005959f
1005fe3c:	mov    edx,DWORD PTR [esp+0x8]
1005fe40:	lea    eax,[edx+0xc]
1005fe43:	mov    ecx,DWORD PTR [edx-0x18]
1005fe46:	xor    ecx,eax
1005fe48:	call   0x10043615
1005fe4d:	mov    eax,0x10076b5c
1005fe52:	jmp    0x1005959f
1005fe57:	mov    edx,DWORD PTR [esp+0x8]
1005fe5b:	lea    eax,[edx+0xc]
1005fe5e:	mov    ecx,DWORD PTR [edx-0x1c]
1005fe61:	xor    ecx,eax
1005fe63:	call   0x10043615
1005fe68:	mov    eax,0x10076bb4
1005fe6d:	jmp    0x1005959f
1005fe72:	mov    edx,DWORD PTR [esp+0x8]
1005fe76:	lea    eax,[edx+0xc]
1005fe79:	mov    ecx,DWORD PTR [edx-0x1c]
1005fe7c:	xor    ecx,eax
1005fe7e:	call   0x10043615
1005fe83:	mov    eax,0x10076c0c
1005fe88:	jmp    0x1005959f
1005fe8d:	mov    edx,DWORD PTR [esp+0x8]
1005fe91:	lea    eax,[edx+0xc]
1005fe94:	mov    ecx,DWORD PTR [edx-0x1c]
1005fe97:	xor    ecx,eax
1005fe99:	call   0x10043615
1005fe9e:	mov    eax,0x10076c64
1005fea3:	jmp    0x1005959f
1005fea8:	mov    ecx,DWORD PTR [ebp+0x8]
1005feab:	jmp    0x100131e2
1005feb0:	mov    ecx,DWORD PTR [ebp+0x8]
1005feb3:	add    ecx,0x1c
1005feb6:	jmp    0x100131e2
1005febb:	mov    edx,DWORD PTR [esp+0x8]
1005febf:	lea    eax,[edx+0xc]
1005fec2:	mov    ecx,DWORD PTR [edx-0x10]
1005fec5:	xor    ecx,eax
1005fec7:	call   0x10043615
1005fecc:	mov    eax,0x10076c98
1005fed1:	jmp    0x1005959f
1005fed6:	mov    edx,DWORD PTR [esp+0x8]
1005feda:	lea    eax,[edx+0xc]
1005fedd:	mov    ecx,DWORD PTR [edx-0x1c]
1005fee0:	xor    ecx,eax
1005fee2:	call   0x10043615
1005fee7:	mov    eax,0x10076cf0
1005feec:	jmp    0x1005959f
1005fef1:	mov    edx,DWORD PTR [esp+0x8]
1005fef5:	lea    eax,[edx+0xc]
1005fef8:	mov    ecx,DWORD PTR [edx-0x1c]
1005fefb:	xor    ecx,eax
1005fefd:	call   0x10043615
1005ff02:	mov    eax,0x10076d48
1005ff07:	jmp    0x1005959f
1005ff0c:	lea    esi,[ebp-0x18]
1005ff0f:	jmp    0x10007914
1005ff14:	mov    edx,DWORD PTR [esp+0x8]
1005ff18:	lea    eax,[edx+0xc]
1005ff1b:	mov    ecx,DWORD PTR [edx-0x20]
1005ff1e:	xor    ecx,eax
1005ff20:	call   0x10043615
1005ff25:	mov    ecx,DWORD PTR [edx-0x8]
1005ff28:	xor    ecx,eax
1005ff2a:	call   0x10043615
1005ff2f:	mov    eax,0x10076da8
1005ff34:	jmp    0x1005959f
1005ff39:	lea    eax,[ebp-0x3c]
1005ff3c:	jmp    0x1002448e
1005ff41:	lea    eax,[ebp-0x44]
1005ff44:	jmp    0x1002b964
1005ff49:	lea    edi,[ebp-0x40]
1005ff4c:	jmp    0x100024fb
1005ff51:	mov    edx,DWORD PTR [esp+0x8]
1005ff55:	lea    eax,[edx-0x44]
1005ff58:	mov    ecx,DWORD PTR [edx-0x48]
1005ff5b:	xor    ecx,eax
1005ff5d:	call   0x10043615
1005ff62:	mov    eax,0x10076de4
1005ff67:	jmp    0x1005959f
1005ff6c:	mov    edx,DWORD PTR [esp+0x8]
1005ff70:	lea    eax,[edx+0xc]
1005ff73:	mov    ecx,DWORD PTR [edx-0x1c]
1005ff76:	xor    ecx,eax
1005ff78:	call   0x10043615
1005ff7d:	mov    eax,0x10076e3c
1005ff82:	jmp    0x1005959f
1005ff87:	mov    edx,DWORD PTR [esp+0x8]
1005ff8b:	lea    eax,[edx+0xc]
1005ff8e:	mov    ecx,DWORD PTR [edx-0x1c]
1005ff91:	xor    ecx,eax
1005ff93:	call   0x10043615
1005ff98:	mov    eax,0x10076e94
1005ff9d:	jmp    0x1005959f
1005ffa2:	lea    eax,[ebp-0x18]
1005ffa5:	jmp    0x1002b964
1005ffaa:	lea    eax,[ebp+0xc]
1005ffad:	jmp    0x1002b964
1005ffb2:	lea    eax,[ebp-0x18]
1005ffb5:	jmp    0x1002b964
1005ffba:	lea    eax,[ebp+0xc]
1005ffbd:	jmp    0x1002b964
1005ffc2:	lea    eax,[ebp-0x14]
1005ffc5:	jmp    0x1002b964
1005ffca:	lea    eax,[ebp+0x10]
1005ffcd:	jmp    0x1002b964
1005ffd2:	lea    eax,[ebp-0x1c]
1005ffd5:	jmp    0x1002b964
1005ffda:	mov    edx,DWORD PTR [esp+0x8]
1005ffde:	lea    eax,[edx+0xc]
1005ffe1:	mov    ecx,DWORD PTR [edx-0x28]
1005ffe4:	xor    ecx,eax
1005ffe6:	call   0x10043615
1005ffeb:	mov    eax,0x10076ef0
1005fff0:	jmp    0x1005959f
1005fff5:	lea    eax,[ebp+0x8]
1005fff8:	jmp    0x10001000
1005fffd:	mov    edx,DWORD PTR [esp+0x8]
10060001:	lea    eax,[edx+0xc]
10060004:	mov    ecx,DWORD PTR [edx-0x14]
10060007:	xor    ecx,eax
10060009:	call   0x10043615
1006000e:	mov    eax,0x10076f1c
10060013:	jmp    0x1005959f
10060018:	lea    eax,[ebp-0x10]
1006001b:	jmp    0x10001000
10060020:	mov    edx,DWORD PTR [esp+0x8]
10060024:	lea    eax,[edx+0xc]
10060027:	mov    ecx,DWORD PTR [edx-0x28]
1006002a:	xor    ecx,eax
1006002c:	call   0x10043615
10060031:	mov    ecx,DWORD PTR [edx+0x3f4]
10060037:	xor    ecx,eax
10060039:	call   0x10043615
1006003e:	mov    eax,0x10076f48
10060043:	jmp    0x1005959f
10060048:	lea    ecx,[ebp-0x24]
1006004b:	jmp    0x100111c4
10060050:	lea    eax,[ebp-0x10]
10060053:	jmp    0x1002b964
10060058:	lea    eax,[ebp-0x18]
1006005b:	jmp    0x1002b964
10060060:	lea    eax,[ebp-0x1c]
10060063:	jmp    0x1002b964
10060068:	mov    edx,DWORD PTR [esp+0x8]
1006006c:	lea    eax,[edx+0xc]
1006006f:	mov    ecx,DWORD PTR [edx-0x28]
10060072:	xor    ecx,eax
10060074:	call   0x10043615
10060079:	mov    ecx,DWORD PTR [edx+0x214]
1006007f:	xor    ecx,eax
10060081:	call   0x10043615
10060086:	mov    eax,0x10076f8c
1006008b:	jmp    0x1005959f
10060090:	jmp    0x10002068
10060095:	mov    edx,DWORD PTR [esp+0x8]
10060099:	lea    eax,[edx+0xc]
1006009c:	mov    ecx,DWORD PTR [edx-0x18]
1006009f:	xor    ecx,eax
100600a1:	call   0x10043615
100600a6:	mov    eax,0x10076fec
100600ab:	jmp    0x1005959f
100600b0:	jmp    0x10002068
100600b5:	mov    edx,DWORD PTR [esp+0x8]
100600b9:	lea    eax,[edx+0xc]
100600bc:	mov    ecx,DWORD PTR [edx-0x18]
100600bf:	xor    ecx,eax
100600c1:	call   0x10043615
100600c6:	mov    eax,0x1007704c
100600cb:	jmp    0x1005959f
100600d0:	lea    ecx,[ebp-0x10]
100600d3:	jmp    0x10016239
100600d8:	mov    edx,DWORD PTR [esp+0x8]
100600dc:	lea    eax,[edx+0xc]
100600df:	mov    ecx,DWORD PTR [edx-0x14]
100600e2:	xor    ecx,eax
100600e4:	call   0x10043615
100600e9:	mov    eax,0x10077078
100600ee:	jmp    0x1005959f
100600f3:	lea    eax,[ebp+0x0]
100600f6:	jmp    0x10017baa
100600fb:	lea    eax,[ebp+0x0]
100600fe:	jmp    0x10017baa
10060103:	mov    edx,DWORD PTR [esp+0x8]
10060107:	lea    eax,[edx+0xc]
1006010a:	mov    ecx,DWORD PTR [edx-0x2c]
1006010d:	xor    ecx,eax
1006010f:	call   0x10043615
10060114:	mov    ecx,DWORD PTR [edx+0x2110]
1006011a:	xor    ecx,eax
1006011c:	call   0x10043615
10060121:	mov    eax,0x10077114
10060126:	jmp    0x1005959f
1006012b:	mov    ecx,DWORD PTR [ebp+0x8]
1006012e:	jmp    0x100131e2
10060133:	mov    ecx,DWORD PTR [ebp+0x8]
10060136:	add    ecx,0x1c
10060139:	jmp    0x100131e2
1006013e:	mov    ecx,DWORD PTR [ebp+0x8]
10060141:	add    ecx,0x38
10060144:	jmp    0x100131e2
10060149:	mov    ecx,DWORD PTR [ebp+0x8]
1006014c:	add    ecx,0x54
1006014f:	jmp    0x100131e2
10060154:	mov    edx,DWORD PTR [esp+0x8]
10060158:	lea    eax,[edx+0xc]
1006015b:	mov    ecx,DWORD PTR [edx-0x10]
1006015e:	xor    ecx,eax
10060160:	call   0x10043615
10060165:	mov    eax,0x10077158
1006016a:	jmp    0x1005959f
1006016f:	mov    edx,DWORD PTR [esp+0x8]
10060173:	lea    eax,[edx+0xc]
10060176:	mov    ecx,DWORD PTR [edx-0x1c]
10060179:	xor    ecx,eax
1006017b:	call   0x10043615
10060180:	mov    eax,0x100771b0
10060185:	jmp    0x1005959f
1006018a:	mov    edx,DWORD PTR [esp+0x8]
1006018e:	lea    eax,[edx+0xc]
10060191:	mov    ecx,DWORD PTR [edx-0x18]
10060194:	xor    ecx,eax
10060196:	call   0x10043615
1006019b:	mov    eax,0x10077208
100601a0:	jmp    0x1005959f
100601a5:	mov    eax,DWORD PTR [ebp+0x8]
100601a8:	jmp    0x100020aa
100601ad:	mov    edx,DWORD PTR [esp+0x8]
100601b1:	lea    eax,[edx+0xc]
100601b4:	mov    ecx,DWORD PTR [edx-0x10]
100601b7:	xor    ecx,eax
100601b9:	call   0x10043615
100601be:	mov    eax,0x10077234
100601c3:	jmp    0x1005959f
100601c8:	mov    ecx,DWORD PTR [ebp+0x8]
100601cb:	jmp    0x10043390
100601d0:	mov    edx,DWORD PTR [esp+0x8]
100601d4:	lea    eax,[edx+0xc]
100601d7:	mov    ecx,DWORD PTR [edx-0x10]
100601da:	xor    ecx,eax
100601dc:	call   0x10043615
100601e1:	mov    eax,0x10077260
100601e6:	jmp    0x1005959f
100601eb:	mov    edx,DWORD PTR [esp+0x8]
100601ef:	lea    eax,[edx+0xc]
100601f2:	mov    ecx,DWORD PTR [edx-0x18]
100601f5:	xor    ecx,eax
100601f7:	call   0x10043615
100601fc:	mov    eax,0x100772ec
10060201:	jmp    0x1005959f
10060206:	jmp    0x10002068
1006020b:	mov    edx,DWORD PTR [esp+0x8]
1006020f:	lea    eax,[edx+0xc]
10060212:	mov    ecx,DWORD PTR [edx-0x18]
10060215:	xor    ecx,eax
10060217:	call   0x10043615
1006021c:	mov    eax,0x1007734c
10060221:	jmp    0x1005959f
10060226:	lea    esi,[ebp+0x8]
10060229:	jmp    0x10004b46
1006022e:	mov    edx,DWORD PTR [esp+0x8]
10060232:	lea    eax,[edx+0xc]
10060235:	mov    ecx,DWORD PTR [edx-0x14]
10060238:	xor    ecx,eax
1006023a:	call   0x10043615
1006023f:	mov    eax,0x10077378
10060244:	jmp    0x1005959f
10060249:	lea    ecx,[ebp+0x8]
1006024c:	jmp    0x100131e2
10060251:	mov    edx,DWORD PTR [esp+0x8]
10060255:	lea    eax,[edx+0xc]
10060258:	mov    ecx,DWORD PTR [edx-0x14]
1006025b:	xor    ecx,eax
1006025d:	call   0x10043615
10060262:	mov    eax,0x100773a4
10060267:	jmp    0x1005959f
1006026c:	mov    eax,DWORD PTR [ebp-0x10]
1006026f:	and    eax,0x1
10060272:	je     0x10060284
10060278:	and    DWORD PTR [ebp-0x10],0xfffffffe
1006027c:	mov    eax,DWORD PTR [ebp+0x8]
1006027f:	jmp    0x10002081
10060284:	ret    
10060285:	mov    edx,DWORD PTR [esp+0x8]
10060289:	lea    eax,[edx+0xc]
1006028c:	mov    ecx,DWORD PTR [edx-0x14]
1006028f:	xor    ecx,eax
10060291:	call   0x10043615
10060296:	mov    eax,0x100773d0
1006029b:	jmp    0x1005959f
100602a0:	lea    ecx,[ebp+0x8]
100602a3:	jmp    0x100131e2
100602a8:	mov    ecx,DWORD PTR [ebp-0x10]
100602ab:	jmp    0x100131e2
100602b0:	mov    edx,DWORD PTR [esp+0x8]
100602b4:	lea    eax,[edx+0xc]
100602b7:	mov    ecx,DWORD PTR [edx-0x14]
100602ba:	xor    ecx,eax
100602bc:	call   0x10043615
100602c1:	mov    eax,0x10077404
100602c6:	jmp    0x1005959f
100602cb:	lea    ecx,[ebp+0x18]
100602ce:	jmp    0x100131e2
100602d3:	mov    ecx,DWORD PTR [ebp-0x1c]
100602d6:	jmp    0x100131e2
100602db:	mov    ecx,DWORD PTR [ebp-0x1c]
100602de:	add    ecx,0x1c
100602e1:	jmp    0x100131e2
100602e6:	mov    ecx,DWORD PTR [ebp-0x1c]
100602e9:	add    ecx,0x38
100602ec:	jmp    0x100131e2
100602f1:	mov    ecx,DWORD PTR [ebp-0x1c]
100602f4:	add    ecx,0x54
100602f7:	jmp    0x100131e2
100602fc:	mov    edx,DWORD PTR [esp+0x8]
10060300:	lea    eax,[edx+0xc]
10060303:	mov    ecx,DWORD PTR [edx-0x20]
10060306:	xor    ecx,eax
10060308:	call   0x10043615
1006030d:	mov    eax,0x10077450
10060312:	jmp    0x1005959f
10060317:	int3   
10060318:	int3   
10060319:	int3   
1006031a:	int3   
1006031b:	int3   
1006031c:	int3   
1006031d:	int3   
1006031e:	int3   
1006031f:	int3   
10060320:	mov    ecx,DWORD PTR [ebp+0x4]
10060323:	jmp    0x100131e2
10060328:	mov    edx,DWORD PTR [esp+0x8]
1006032c:	lea    eax,[edx-0x4]
1006032f:	mov    ecx,DWORD PTR [edx-0x8]
10060332:	xor    ecx,eax
10060334:	call   0x10043615
10060339:	mov    eax,0x1007747c
1006033e:	jmp    0x1005959f
10060343:	int3   
10060344:	int3   
10060345:	int3   
10060346:	int3   
10060347:	int3   
10060348:	int3   
10060349:	int3   
1006034a:	int3   
1006034b:	int3   
1006034c:	int3   
1006034d:	int3   
1006034e:	int3   
1006034f:	int3   
10060350:	lea    eax,[ebp-0x34]
10060353:	jmp    0x100020aa
10060358:	mov    edx,DWORD PTR [esp+0x8]
1006035c:	lea    eax,[edx-0x38]
1006035f:	mov    ecx,DWORD PTR [edx-0x3c]
10060362:	xor    ecx,eax
10060364:	call   0x10043615
10060369:	add    eax,0xc
1006036c:	mov    ecx,DWORD PTR [edx-0x8]
1006036f:	xor    ecx,eax
10060371:	call   0x10043615
10060376:	mov    eax,0x100774a8
1006037b:	jmp    0x1005959f
10060380:	mov    eax,DWORD PTR [ebp-0x18]
10060383:	and    eax,0x1
10060386:	je     0x10060398
1006038c:	and    DWORD PTR [ebp-0x18],0xfffffffe
10060390:	mov    eax,DWORD PTR [ebp+0x4]
10060393:	jmp    0x10002081
10060398:	ret    
10060399:	mov    edx,DWORD PTR [esp+0x8]
1006039d:	lea    eax,[edx-0x1c]
100603a0:	mov    ecx,DWORD PTR [edx-0x20]
100603a3:	xor    ecx,eax
100603a5:	call   0x10043615
100603aa:	mov    eax,0x100774d4
100603af:	jmp    0x1005959f
100603b4:	int3   
100603b5:	int3   
100603b6:	int3   
100603b7:	int3   
100603b8:	int3   
100603b9:	int3   
100603ba:	int3   
100603bb:	int3   
100603bc:	int3   
100603bd:	int3   
100603be:	int3   
100603bf:	int3   
100603c0:	mov    ecx,DWORD PTR [ebp-0x10]
100603c3:	jmp    0x10043390
100603c8:	mov    edx,DWORD PTR [esp+0x8]
100603cc:	lea    eax,[edx-0xc]
100603cf:	mov    ecx,DWORD PTR [edx-0x10]
100603d2:	xor    ecx,eax
100603d4:	call   0x10043615
100603d9:	mov    eax,0x10077500
100603de:	jmp    0x1005959f
100603e3:	int3   
100603e4:	int3   
100603e5:	int3   
100603e6:	int3   
100603e7:	int3   
100603e8:	int3   
100603e9:	int3   
100603ea:	int3   
100603eb:	int3   
100603ec:	int3   
100603ed:	int3   
100603ee:	int3   
100603ef:	int3   
100603f0:	lea    ecx,[ebp-0x28]
100603f3:	jmp    0x100131e2
100603f8:	mov    edx,DWORD PTR [esp+0x8]
100603fc:	lea    eax,[edx-0x28]
100603ff:	mov    ecx,DWORD PTR [edx-0x2c]
10060402:	xor    ecx,eax
10060404:	call   0x10043615
10060409:	mov    eax,0x1007752c
1006040e:	jmp    0x1005959f
10060413:	int3   
10060414:	int3   
10060415:	int3   
10060416:	int3   
10060417:	int3   
10060418:	int3   
10060419:	int3   
1006041a:	int3   
1006041b:	int3   
1006041c:	int3   
1006041d:	int3   
1006041e:	int3   
1006041f:	int3   
10060420:	lea    eax,[ebp-0x4c]
10060423:	jmp    0x100340d0
10060428:	mov    edx,DWORD PTR [esp+0x8]
1006042c:	lea    eax,[edx-0x50]
1006042f:	mov    ecx,DWORD PTR [edx-0x54]
10060432:	xor    ecx,eax
10060434:	call   0x10043615
10060439:	mov    eax,0x10077558
1006043e:	jmp    0x1005959f
10060443:	int3   
10060444:	int3   
10060445:	int3   
10060446:	int3   
10060447:	int3   
10060448:	int3   
10060449:	int3   
1006044a:	int3   
1006044b:	int3   
1006044c:	int3   
1006044d:	int3   
1006044e:	int3   
1006044f:	int3   
10060450:	mov    eax,DWORD PTR [ebp-0x14]
10060453:	and    eax,0x1
10060456:	je     0x10060468
1006045c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10060460:	mov    ecx,DWORD PTR [ebp-0x10]
10060463:	jmp    0x100131e2
10060468:	ret    
10060469:	mov    edx,DWORD PTR [esp+0x8]
1006046d:	lea    eax,[edx-0x18]
10060470:	mov    ecx,DWORD PTR [edx-0x1c]
10060473:	xor    ecx,eax
10060475:	call   0x10043615
1006047a:	mov    eax,0x10077584
1006047f:	jmp    0x1005959f
10060484:	mov    edx,DWORD PTR [esp+0x8]
10060488:	lea    eax,[edx+0xc]
1006048b:	mov    ecx,DWORD PTR [edx-0x18]
1006048e:	xor    ecx,eax
10060490:	call   0x10043615
10060495:	mov    eax,0x100775dc
1006049a:	jmp    0x1005959f
1006049f:	mov    eax,DWORD PTR [ebp+0x8]
100604a2:	jmp    0x10001000
100604a7:	mov    edx,DWORD PTR [esp+0x8]
100604ab:	lea    eax,[edx+0xc]
100604ae:	mov    ecx,DWORD PTR [edx-0x10]
100604b1:	xor    ecx,eax
100604b3:	call   0x10043615
100604b8:	mov    eax,0x10077608
100604bd:	jmp    0x1005959f
100604c2:	jmp    0x10002068
100604c7:	mov    edx,DWORD PTR [esp+0x8]
100604cb:	lea    eax,[edx+0xc]
100604ce:	mov    ecx,DWORD PTR [edx-0x18]
100604d1:	xor    ecx,eax
100604d3:	call   0x10043615
100604d8:	mov    eax,0x10077668
100604dd:	jmp    0x1005959f
100604e2:	lea    ecx,[ebp-0x20]
100604e5:	jmp    0x1001b6e2
100604ea:	mov    edx,DWORD PTR [esp+0x8]
100604ee:	lea    eax,[edx+0xc]
100604f1:	mov    ecx,DWORD PTR [edx-0x24]
100604f4:	xor    ecx,eax
100604f6:	call   0x10043615
100604fb:	mov    eax,0x100776fc
10060500:	jmp    0x1005959f
10060505:	lea    ecx,[ebp-0x38]
10060508:	jmp    0x1001b6e2
1006050d:	lea    eax,[ebp-0x28]
10060510:	jmp    0x10001000
10060515:	lea    esi,[ebp-0x28]
10060518:	jmp    0x1002d688
1006051d:	mov    edx,DWORD PTR [esp+0x8]
10060521:	lea    eax,[edx-0x4c]
10060524:	mov    ecx,DWORD PTR [edx-0x50]
10060527:	xor    ecx,eax
10060529:	call   0x10043615
1006052e:	mov    eax,0x10077738
10060533:	jmp    0x1005959f
10060538:	mov    eax,DWORD PTR [ebp+0x8]
1006053b:	jmp    0x1002b964
10060540:	mov    edx,DWORD PTR [esp+0x8]
10060544:	lea    eax,[edx+0xc]
10060547:	mov    ecx,DWORD PTR [edx-0x10]
1006054a:	xor    ecx,eax
1006054c:	call   0x10043615
10060551:	mov    eax,0x10077764
10060556:	jmp    0x1005959f
1006055b:	lea    ecx,[ebp+0xc]
1006055e:	jmp    0x1001b6e2
10060563:	lea    eax,[ebp-0x18]
10060566:	jmp    0x10001000
1006056b:	lea    eax,[ebp-0x14]
1006056e:	jmp    0x10001000
10060573:	mov    edx,DWORD PTR [esp+0x8]
10060577:	lea    eax,[edx+0xc]
1006057a:	mov    ecx,DWORD PTR [edx-0x1c]
1006057d:	xor    ecx,eax
1006057f:	call   0x10043615
10060584:	mov    ecx,DWORD PTR [edx-0x4]
10060587:	xor    ecx,eax
10060589:	call   0x10043615
1006058e:	mov    eax,0x100777a0
10060593:	jmp    0x1005959f
10060598:	lea    eax,[ebp-0x18]
1006059b:	jmp    0x1000a18c
100605a0:	lea    eax,[ebp-0x14]
100605a3:	jmp    0x10039fe0
100605a8:	mov    edx,DWORD PTR [esp+0x8]
100605ac:	lea    eax,[edx+0xc]
100605af:	mov    ecx,DWORD PTR [edx-0x1c]
100605b2:	xor    ecx,eax
100605b4:	call   0x10043615
100605b9:	mov    eax,0x100777d4
100605be:	jmp    0x1005959f
100605c3:	mov    edx,DWORD PTR [esp+0x8]
100605c7:	lea    eax,[edx+0xc]
100605ca:	mov    ecx,DWORD PTR [edx-0x1c]
100605cd:	xor    ecx,eax
100605cf:	call   0x10043615
100605d4:	mov    eax,0x1007782c
100605d9:	jmp    0x1005959f
100605de:	mov    eax,DWORD PTR [ebp-0x10]
100605e1:	and    eax,0x1
100605e4:	je     0x100605f6
100605ea:	and    DWORD PTR [ebp-0x10],0xfffffffe
100605ee:	lea    eax,[ebp+0x8]
100605f1:	jmp    0x1002b964
100605f6:	ret    
100605f7:	mov    edx,DWORD PTR [esp+0x8]
100605fb:	lea    eax,[edx+0xc]
100605fe:	mov    ecx,DWORD PTR [edx-0x18]
10060601:	xor    ecx,eax
10060603:	call   0x10043615
10060608:	mov    eax,0x10077858
1006060d:	jmp    0x1005959f
10060612:	mov    edx,DWORD PTR [esp+0x8]
10060616:	lea    eax,[edx+0xc]
10060619:	mov    ecx,DWORD PTR [edx-0x1c]
1006061c:	xor    ecx,eax
1006061e:	call   0x10043615
10060623:	mov    eax,0x100778b0
10060628:	jmp    0x1005959f
1006062d:	jmp    0x10002068
10060632:	mov    edx,DWORD PTR [esp+0x8]
10060636:	lea    eax,[edx+0xc]
10060639:	mov    ecx,DWORD PTR [edx-0x18]
1006063c:	xor    ecx,eax
1006063e:	call   0x10043615
10060643:	mov    eax,0x10077910
10060648:	jmp    0x1005959f
1006064d:	mov    eax,DWORD PTR [ebp-0x10]
10060650:	add    eax,0x8
10060653:	jmp    0x100213d2
10060658:	mov    edx,DWORD PTR [esp+0x8]
1006065c:	lea    eax,[edx+0xc]
1006065f:	mov    ecx,DWORD PTR [edx-0x14]
10060662:	xor    ecx,eax
10060664:	call   0x10043615
10060669:	mov    eax,0x1007793c
1006066e:	jmp    0x1005959f
10060673:	mov    eax,DWORD PTR [ebp+0x8]
10060676:	add    eax,0x8
10060679:	jmp    0x100213d2
1006067e:	mov    edx,DWORD PTR [esp+0x8]
10060682:	lea    eax,[edx+0xc]
10060685:	mov    ecx,DWORD PTR [edx-0x10]
10060688:	xor    ecx,eax
1006068a:	call   0x10043615
1006068f:	mov    eax,0x10077968
10060694:	jmp    0x1005959f
10060699:	push   DWORD PTR [ebp-0x18]
1006069c:	call   0x10042fe2
100606a1:	pop    ecx
100606a2:	ret    
100606a3:	mov    edx,DWORD PTR [esp+0x8]
100606a7:	lea    eax,[edx+0xc]
100606aa:	mov    ecx,DWORD PTR [edx-0x20]
100606ad:	xor    ecx,eax
100606af:	call   0x10043615
100606b4:	mov    eax,0x100779c8
100606b9:	jmp    0x1005959f
100606be:	lea    esi,[ebp-0x28]
100606c1:	jmp    0x10020597
100606c6:	lea    eax,[ebp-0x14]
100606c9:	jmp    0x1002b964
100606ce:	lea    eax,[ebp-0x20]
100606d1:	jmp    0x10001000
100606d6:	lea    esi,[ebp-0x2c]
100606d9:	jmp    0x10007914
100606de:	lea    eax,[ebp-0x1c]
100606e1:	jmp    0x1002b964
100606e6:	mov    edx,DWORD PTR [esp+0x8]
100606ea:	lea    eax,[edx+0xc]
100606ed:	mov    ecx,DWORD PTR [edx-0x30]
100606f0:	xor    ecx,eax
100606f2:	call   0x10043615
100606f7:	mov    ecx,DWORD PTR [edx-0x4]
100606fa:	xor    ecx,eax
100606fc:	call   0x10043615
10060701:	mov    eax,0x10077a14
10060706:	jmp    0x1005959f
1006070b:	lea    esi,[ebp-0x24]
1006070e:	jmp    0x10020597
10060713:	lea    eax,[ebp-0x14]
10060716:	jmp    0x1002b964
1006071b:	lea    esi,[ebp-0x28]
1006071e:	jmp    0x10007914
10060723:	lea    eax,[ebp-0x18]
10060726:	jmp    0x1002b964
1006072b:	mov    edx,DWORD PTR [esp+0x8]
1006072f:	lea    eax,[edx+0xc]
10060732:	mov    ecx,DWORD PTR [edx-0x2c]
10060735:	xor    ecx,eax
10060737:	call   0x10043615
1006073c:	mov    ecx,DWORD PTR [edx-0x4]
1006073f:	xor    ecx,eax
10060741:	call   0x10043615
10060746:	mov    eax,0x10077a58
1006074b:	jmp    0x1005959f
10060750:	lea    eax,[ebp+0x8]
10060753:	jmp    0x10001000
10060758:	lea    eax,[ebp+0x10]
1006075b:	jmp    0x10001000
10060760:	mov    edx,DWORD PTR [esp+0x8]
10060764:	lea    eax,[edx+0xc]
10060767:	mov    ecx,DWORD PTR [edx-0x14]
1006076a:	xor    ecx,eax
1006076c:	call   0x10043615
10060771:	mov    eax,0x10077a8c
10060776:	jmp    0x1005959f
1006077b:	lea    eax,[ebp-0x40]
1006077e:	jmp    0x1002b964
10060783:	lea    eax,[ebp-0x3c]
10060786:	jmp    0x1002b964
1006078b:	lea    eax,[ebp-0x44]
1006078e:	jmp    0x1002b964
10060793:	lea    eax,[ebp-0x44]
10060796:	jmp    0x1002b964
1006079b:	lea    ecx,[ebp-0x20]
1006079e:	jmp    0x1001b6e2
100607a3:	lea    ecx,[ebp-0x30]
100607a6:	jmp    0x1001b6e2
100607ab:	mov    edx,DWORD PTR [esp+0x8]
100607af:	lea    eax,[edx-0x4c]
100607b2:	mov    ecx,DWORD PTR [edx-0x50]
100607b5:	xor    ecx,eax
100607b7:	call   0x10043615
100607bc:	mov    eax,0x10077ae0
100607c1:	jmp    0x1005959f
100607c6:	lea    esi,[ebp-0x78]
100607c9:	jmp    0x1001a932
100607ce:	mov    edx,DWORD PTR [esp+0x8]
100607d2:	lea    eax,[edx+0xc]
100607d5:	mov    ecx,DWORD PTR [edx-0x8c]
100607db:	xor    ecx,eax
100607dd:	call   0x10043615
100607e2:	mov    ecx,DWORD PTR [edx-0x4]
100607e5:	xor    ecx,eax
100607e7:	call   0x10043615
100607ec:	mov    eax,0x10077b0c
100607f1:	jmp    0x1005959f
100607f6:	lea    ecx,[ebp-0x2c]
100607f9:	jmp    0x100131e2
100607fe:	mov    edx,DWORD PTR [esp+0x8]
10060802:	lea    eax,[edx+0xc]
10060805:	mov    ecx,DWORD PTR [edx-0x58]
10060808:	xor    ecx,eax
1006080a:	call   0x10043615
1006080f:	mov    eax,0x10077b38
10060814:	jmp    0x1005959f
10060819:	mov    edx,DWORD PTR [esp+0x8]
1006081d:	lea    eax,[edx+0xc]
10060820:	mov    ecx,DWORD PTR [edx-0x20]
10060823:	xor    ecx,eax
10060825:	call   0x10043615
1006082a:	mov    eax,0x10077b90
1006082f:	jmp    0x1005959f
10060834:	mov    edx,DWORD PTR [esp+0x8]
10060838:	lea    eax,[edx+0xc]
1006083b:	mov    ecx,DWORD PTR [edx-0x18]
1006083e:	xor    ecx,eax
10060840:	call   0x10043615
10060845:	mov    eax,0x10077be8
1006084a:	jmp    0x1005959f
1006084f:	lea    esi,[ebp-0x444]
10060855:	jmp    0x1001496d
1006085a:	lea    esi,[ebp-0x440]
10060860:	jmp    0x1001496d
10060865:	mov    edx,DWORD PTR [esp+0x8]
10060869:	lea    eax,[edx-0x444]
1006086f:	mov    ecx,DWORD PTR [edx-0x448]
10060875:	xor    ecx,eax
10060877:	call   0x10043615
1006087c:	add    eax,0xc
1006087f:	mov    ecx,DWORD PTR [edx-0x8]
10060882:	xor    ecx,eax
10060884:	call   0x10043615
10060889:	mov    eax,0x10077c1c
1006088e:	jmp    0x1005959f
10060893:	lea    esi,[ebp-0x2c]
10060896:	jmp    0x10017b9e
1006089b:	lea    esi,[ebp-0x28]
1006089e:	jmp    0x10017b9e
100608a3:	mov    edx,DWORD PTR [esp+0x8]
100608a7:	lea    eax,[edx+0xc]
100608aa:	mov    ecx,DWORD PTR [edx-0x30]
100608ad:	xor    ecx,eax
100608af:	call   0x10043615
100608b4:	mov    eax,0x10077cb8
100608b9:	jmp    0x1005959f
100608be:	lea    esi,[ebp-0x9c]
100608c4:	jmp    0x1000bfa0
100608c9:	mov    edx,DWORD PTR [esp+0x8]
100608cd:	lea    eax,[edx+0xc]
100608d0:	mov    ecx,DWORD PTR [edx-0xa4]
100608d6:	xor    ecx,eax
100608d8:	call   0x10043615
100608dd:	mov    ecx,DWORD PTR [edx-0x4]
100608e0:	xor    ecx,eax
100608e2:	call   0x10043615
100608e7:	mov    eax,0x10077ce4
100608ec:	jmp    0x1005959f
100608f1:	mov    ecx,DWORD PTR [ebp+0x8]
100608f4:	jmp    0x100131e2
100608f9:	mov    ecx,DWORD PTR [ebp+0x8]
100608fc:	add    ecx,0x1c
100608ff:	jmp    0x100131e2
10060904:	mov    ecx,DWORD PTR [ebp+0x8]
10060907:	add    ecx,0x38
1006090a:	jmp    0x100131e2
1006090f:	mov    ecx,DWORD PTR [ebp+0x8]
10060912:	add    ecx,0x54
10060915:	jmp    0x100131e2
1006091a:	mov    ecx,DWORD PTR [ebp+0x8]
1006091d:	add    ecx,0x70
10060920:	jmp    0x100131e2
10060925:	mov    edx,DWORD PTR [esp+0x8]
10060929:	lea    eax,[edx+0xc]
1006092c:	mov    ecx,DWORD PTR [edx-0x10]
1006092f:	xor    ecx,eax
10060931:	call   0x10043615
10060936:	mov    eax,0x10077d30
1006093b:	jmp    0x1005959f
10060940:	lea    esi,[ebp-0x20]
10060943:	jmp    0x1000d355
10060948:	mov    edx,DWORD PTR [esp+0x8]
1006094c:	lea    eax,[edx+0xc]
1006094f:	mov    ecx,DWORD PTR [edx-0x24]
10060952:	xor    ecx,eax
10060954:	call   0x10043615
10060959:	mov    eax,0x10077d5c
1006095e:	jmp    0x1005959f
10060963:	lea    ecx,[ebp-0x28]
10060966:	jmp    0x100131e2
1006096b:	mov    edx,DWORD PTR [esp+0x8]
1006096f:	lea    eax,[edx+0xc]
10060972:	mov    ecx,DWORD PTR [edx-0x2c]
10060975:	xor    ecx,eax
10060977:	call   0x10043615
1006097c:	mov    eax,0x10077d88
10060981:	jmp    0x1005959f
10060986:	mov    edx,DWORD PTR [esp+0x8]
1006098a:	lea    eax,[edx+0xc]
1006098d:	mov    ecx,DWORD PTR [edx-0x18]
10060990:	xor    ecx,eax
10060992:	call   0x10043615
10060997:	mov    eax,0x10077de0
1006099c:	jmp    0x1005959f
100609a1:	lea    ecx,[ebp-0x30]
100609a4:	jmp    0x100131e2
100609a9:	mov    edx,DWORD PTR [esp+0x8]
100609ad:	lea    eax,[edx+0xc]
100609b0:	mov    ecx,DWORD PTR [edx-0x3c]
100609b3:	xor    ecx,eax
100609b5:	call   0x10043615
100609ba:	mov    ecx,DWORD PTR [edx-0x8]
100609bd:	xor    ecx,eax
100609bf:	call   0x10043615
100609c4:	mov    eax,0x10077e40
100609c9:	jmp    0x1005959f
100609ce:	mov    edx,DWORD PTR [esp+0x8]
100609d2:	lea    eax,[edx+0xc]
100609d5:	mov    ecx,DWORD PTR [edx-0x34]
100609d8:	xor    ecx,eax
100609da:	call   0x10043615
100609df:	mov    eax,0x10077ecc
100609e4:	jmp    0x1005959f
100609e9:	mov    edx,DWORD PTR [esp+0x8]
100609ed:	lea    eax,[edx+0xc]
100609f0:	mov    ecx,DWORD PTR [edx-0x20]
100609f3:	xor    ecx,eax
100609f5:	call   0x10043615
100609fa:	mov    eax,0x10077f24
100609ff:	jmp    0x1005959f
10060a04:	mov    edx,DWORD PTR [esp+0x8]
10060a08:	lea    eax,[edx+0xc]
10060a0b:	mov    ecx,DWORD PTR [edx-0x18]
10060a0e:	xor    ecx,eax
10060a10:	call   0x10043615
10060a15:	mov    eax,0x10077f7c
10060a1a:	jmp    0x1005959f
10060a1f:	lea    ecx,[ebp-0x44]
10060a22:	jmp    0x100131e2
10060a27:	lea    ecx,[ebp-0x28]
10060a2a:	jmp    0x100131e2
10060a2f:	lea    ecx,[ebp-0x28]
10060a32:	jmp    0x100131e2
10060a37:	lea    ecx,[ebp-0x44]
10060a3a:	jmp    0x100131e2
10060a3f:	lea    ecx,[ebp-0x7c]
10060a42:	jmp    0x100131e2
10060a47:	lea    ecx,[ebp-0x60]
10060a4a:	jmp    0x100131e2
10060a4f:	mov    edx,DWORD PTR [esp+0x8]
10060a53:	lea    eax,[edx+0xc]
10060a56:	mov    ecx,DWORD PTR [edx-0x84]
10060a5c:	xor    ecx,eax
10060a5e:	call   0x10043615
10060a63:	mov    eax,0x10077fd0
10060a68:	jmp    0x1005959f
10060a6d:	lea    ecx,[ebp-0x64]
10060a70:	jmp    0x100131e2
10060a75:	lea    ecx,[ebp-0x80]
10060a78:	jmp    0x100131e2
10060a7d:	lea    ecx,[ebp-0x80]
10060a80:	jmp    0x100131e2
10060a85:	lea    ecx,[ebp-0x64]
10060a88:	jmp    0x100131e2
10060a8d:	lea    ecx,[ebp-0x2c]
10060a90:	jmp    0x100131e2
10060a95:	lea    ecx,[ebp-0x48]
10060a98:	jmp    0x100131e2
10060a9d:	mov    edx,DWORD PTR [esp+0x8]
10060aa1:	lea    eax,[edx-0x84]
10060aa7:	mov    ecx,DWORD PTR [edx-0x88]
10060aad:	xor    ecx,eax
10060aaf:	call   0x10043615
10060ab4:	mov    eax,0x10078024
10060ab9:	jmp    0x1005959f
10060abe:	push   DWORD PTR [ebp-0x10]
10060ac1:	call   0x10042fe2
10060ac6:	pop    ecx
10060ac7:	ret    
10060ac8:	mov    edx,DWORD PTR [esp+0x8]
10060acc:	lea    eax,[edx+0xc]
10060acf:	mov    ecx,DWORD PTR [edx-0x14]
10060ad2:	xor    ecx,eax
10060ad4:	call   0x10043615
10060ad9:	mov    eax,0x10078050
10060ade:	jmp    0x1005959f
10060ae3:	mov    eax,DWORD PTR [ebp+0x8]
10060ae6:	jmp    0x10009d4b
10060aeb:	mov    esi,DWORD PTR [ebp+0x8]
10060aee:	add    esi,0x4
10060af1:	jmp    0x1000d355
10060af6:	mov    edx,DWORD PTR [esp+0x8]
10060afa:	lea    eax,[edx+0xc]
10060afd:	mov    ecx,DWORD PTR [edx-0x10]
10060b00:	xor    ecx,eax
10060b02:	call   0x10043615
10060b07:	mov    eax,0x10078084
10060b0c:	jmp    0x1005959f
10060b11:	lea    esi,[ebp-0x14]
10060b14:	jmp    0x10007914
10060b19:	mov    edx,DWORD PTR [esp+0x8]
10060b1d:	lea    eax,[edx+0xc]
10060b20:	mov    ecx,DWORD PTR [edx-0x30]
10060b23:	xor    ecx,eax
10060b25:	call   0x10043615
10060b2a:	mov    ecx,DWORD PTR [edx-0x4]
10060b2d:	xor    ecx,eax
10060b2f:	call   0x10043615
10060b34:	mov    eax,0x100780b0
10060b39:	jmp    0x1005959f
10060b3e:	lea    ecx,[ebp-0x28]
10060b41:	jmp    0x100131e2
10060b46:	mov    edx,DWORD PTR [esp+0x8]
10060b4a:	lea    eax,[edx+0xc]
10060b4d:	mov    ecx,DWORD PTR [edx-0x54]
10060b50:	xor    ecx,eax
10060b52:	call   0x10043615
10060b57:	mov    eax,0x100780dc
10060b5c:	jmp    0x1005959f
10060b61:	mov    edx,DWORD PTR [esp+0x8]
10060b65:	lea    eax,[edx+0xc]
10060b68:	mov    ecx,DWORD PTR [edx-0x14]
10060b6b:	xor    ecx,eax
10060b6d:	call   0x10043615
10060b72:	mov    eax,0x10078134
10060b77:	jmp    0x1005959f
10060b7c:	lea    ecx,[ebp-0x2c]
10060b7f:	jmp    0x100131e2
10060b84:	mov    edx,DWORD PTR [esp+0x8]
10060b88:	lea    eax,[edx+0xc]
10060b8b:	mov    ecx,DWORD PTR [edx-0x30]
10060b8e:	xor    ecx,eax
10060b90:	call   0x10043615
10060b95:	mov    eax,0x10078160
10060b9a:	jmp    0x1005959f
10060b9f:	mov    esi,DWORD PTR [ebp+0x8]
10060ba2:	jmp    0x10004b46
10060ba7:	mov    edx,DWORD PTR [esp+0x8]
10060bab:	lea    eax,[edx+0xc]
10060bae:	mov    ecx,DWORD PTR [edx-0x10]
10060bb1:	xor    ecx,eax
10060bb3:	call   0x10043615
10060bb8:	mov    eax,0x1007818c
10060bbd:	jmp    0x1005959f
10060bc2:	jmp    0x10002068
10060bc7:	mov    edx,DWORD PTR [esp+0x8]
10060bcb:	lea    eax,[edx+0xc]
10060bce:	mov    ecx,DWORD PTR [edx-0x18]
10060bd1:	xor    ecx,eax
10060bd3:	call   0x10043615
10060bd8:	mov    eax,0x100781ec
10060bdd:	jmp    0x1005959f
10060be2:	lea    esi,[ebp-0x38]
10060be5:	jmp    0x10004b46
10060bea:	lea    esi,[ebp-0x70]
10060bed:	jmp    0x10004b46
10060bf2:	lea    edi,[ebp-0x70]
10060bf5:	jmp    0x10004ca4
10060bfa:	mov    edx,DWORD PTR [esp+0x8]
10060bfe:	lea    eax,[edx+0xc]
10060c01:	mov    ecx,DWORD PTR [edx-0x74]
10060c04:	xor    ecx,eax
10060c06:	call   0x10043615
10060c0b:	mov    eax,0x10078228
10060c10:	jmp    0x1005959f
10060c15:	lea    ecx,[ebp-0x38]
10060c18:	jmp    0x100131e2
10060c1d:	lea    ecx,[ebp-0x70]
10060c20:	jmp    0x100131e2
10060c25:	lea    esi,[ebp-0x70]
10060c28:	jmp    0x10004c8c
10060c2d:	mov    edx,DWORD PTR [esp+0x8]
10060c31:	lea    eax,[edx+0xc]
10060c34:	mov    ecx,DWORD PTR [edx-0x74]
10060c37:	xor    ecx,eax
10060c39:	call   0x10043615
10060c3e:	mov    eax,0x10078264
10060c43:	jmp    0x1005959f
10060c48:	mov    eax,ds:0x10082c88
10060c4d:	and    eax,0xfffffffe
10060c50:	mov    ds:0x10082c88,eax
10060c55:	ret    
10060c56:	mov    edx,DWORD PTR [esp+0x8]
10060c5a:	lea    eax,[edx+0xc]
10060c5d:	mov    ecx,DWORD PTR [edx-0x10]
10060c60:	xor    ecx,eax
10060c62:	call   0x10043615
10060c67:	mov    eax,0x10078290
10060c6c:	jmp    0x1005959f
10060c71:	mov    eax,ds:0x10082c98
10060c76:	and    eax,0xfffffffe
10060c79:	mov    ds:0x10082c98,eax
10060c7e:	ret    
10060c7f:	mov    edx,DWORD PTR [esp+0x8]
10060c83:	lea    eax,[edx+0xc]
10060c86:	mov    ecx,DWORD PTR [edx-0x10]
10060c89:	xor    ecx,eax
10060c8b:	call   0x10043615
10060c90:	mov    eax,0x100782bc
10060c95:	jmp    0x1005959f
10060c9a:	lea    esi,[ebp-0x4c]
10060c9d:	jmp    0x10004b46
10060ca2:	lea    esi,[ebp-0x30]
10060ca5:	jmp    0x10004b46
10060caa:	mov    edx,DWORD PTR [esp+0x8]
10060cae:	lea    eax,[edx-0x64]
10060cb1:	mov    ecx,DWORD PTR [edx-0x68]
10060cb4:	xor    ecx,eax
10060cb6:	call   0x10043615
10060cbb:	add    eax,0xc
10060cbe:	mov    ecx,DWORD PTR [edx-0x8]
10060cc1:	xor    ecx,eax
10060cc3:	call   0x10043615
10060cc8:	mov    eax,0x100782f0
10060ccd:	jmp    0x1005959f
10060cd2:	lea    eax,[ebp-0x10]
10060cd5:	jmp    0x10002081
10060cda:	lea    eax,[ebp-0x14]
10060cdd:	jmp    0x10002081
10060ce2:	lea    edi,[ebp-0x1c]
10060ce5:	jmp    0x100024fb
10060cea:	lea    edi,[ebp-0x20]
10060ced:	jmp    0x100024fb
10060cf2:	lea    eax,[ebp-0x18]
10060cf5:	jmp    0x10002081
10060cfa:	lea    esi,[ebp-0x1c]
10060cfd:	jmp    0x1000463e
10060d02:	mov    edx,DWORD PTR [esp+0x8]
10060d06:	lea    eax,[edx+0xc]
10060d09:	mov    ecx,DWORD PTR [edx-0x28]
10060d0c:	xor    ecx,eax
10060d0e:	call   0x10043615
10060d13:	mov    eax,0x10078358
10060d18:	jmp    0x1005959f
10060d1d:	int3   
10060d1e:	int3   
10060d1f:	int3   
10060d20:	lea    ecx,[ebp-0x2c]
10060d23:	jmp    0x100131e2
10060d28:	mov    eax,DWORD PTR [ebp-0x34]
10060d2b:	push   eax
10060d2c:	call   0x10042fe2
10060d31:	pop    ecx
10060d32:	ret    
10060d33:	mov    edx,DWORD PTR [esp+0x8]
10060d37:	lea    eax,[edx-0x38]
10060d3a:	mov    ecx,DWORD PTR [edx-0x3c]
10060d3d:	xor    ecx,eax
10060d3f:	call   0x10043615
10060d44:	add    eax,0xc
10060d47:	mov    ecx,DWORD PTR [edx-0x4]
10060d4a:	xor    ecx,eax
10060d4c:	call   0x10043615
10060d51:	mov    eax,0x1007838c
10060d56:	jmp    0x1005959f
10060d5b:	int3   
10060d5c:	int3   
10060d5d:	int3   
10060d5e:	int3   
10060d5f:	int3   
10060d60:	lea    eax,[ebp+0xc]
10060d63:	jmp    0x10036f10
10060d68:	mov    edx,DWORD PTR [esp+0x8]
10060d6c:	lea    eax,[edx-0x14]
10060d6f:	mov    ecx,DWORD PTR [edx-0x18]
10060d72:	xor    ecx,eax
10060d74:	call   0x10043615
10060d79:	mov    eax,0x100783b8
10060d7e:	jmp    0x1005959f
10060d83:	int3   
10060d84:	int3   
10060d85:	int3   
10060d86:	int3   
10060d87:	int3   
10060d88:	int3   
10060d89:	int3   
10060d8a:	int3   
10060d8b:	int3   
10060d8c:	int3   
10060d8d:	int3   
10060d8e:	int3   
10060d8f:	int3   
10060d90:	lea    esi,[ebp-0x14]
10060d93:	jmp    0x10007914
10060d98:	mov    eax,DWORD PTR [ebp-0x1c]
10060d9b:	and    eax,0x1
10060d9e:	je     0x10060db0
10060da4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10060da8:	lea    ecx,[ebp-0x58]
10060dab:	jmp    0x100131e2
10060db0:	ret    
10060db1:	mov    eax,DWORD PTR [ebp-0x1c]
10060db4:	and    eax,0x2
10060db7:	je     0x10060dc9
10060dbd:	and    DWORD PTR [ebp-0x1c],0xfffffffd
10060dc1:	lea    ecx,[ebp-0x3c]
10060dc4:	jmp    0x100131e2
10060dc9:	ret    
10060dca:	mov    edx,DWORD PTR [esp+0x8]
10060dce:	lea    eax,[edx+0xc]
10060dd1:	mov    ecx,DWORD PTR [edx-0x5c]
10060dd4:	xor    ecx,eax
10060dd6:	call   0x10043615
10060ddb:	mov    ecx,DWORD PTR [edx-0x4]
10060dde:	xor    ecx,eax
10060de0:	call   0x10043615
10060de5:	mov    eax,0x100783f4
10060dea:	jmp    0x1005959f
10060def:	int3   
10060df0:	lea    esi,[ebp+0x0]
10060df3:	jmp    0x1000c008
10060df8:	lea    eax,[ebp-0x10]
10060dfb:	jmp    0x100020aa
10060e00:	mov    edx,DWORD PTR [esp+0x8]
10060e04:	lea    eax,[edx+0xc]
10060e07:	mov    ecx,DWORD PTR [edx-0x60]
10060e0a:	xor    ecx,eax
10060e0c:	call   0x10043615
10060e11:	mov    ecx,DWORD PTR [edx+0xa0]
10060e17:	xor    ecx,eax
10060e19:	call   0x10043615
10060e1e:	mov    eax,0x10078428
10060e23:	jmp    0x1005959f
10060e28:	int3   
10060e29:	int3   
10060e2a:	int3   
10060e2b:	int3   
10060e2c:	int3   
10060e2d:	int3   
10060e2e:	int3   
10060e2f:	int3   
10060e30:	lea    eax,[ebp-0x60]
10060e33:	jmp    0x100020aa
10060e38:	lea    esi,[ebp-0x3c]
10060e3b:	jmp    0x10034370
10060e40:	lea    esi,[ebp-0x3c]
10060e43:	jmp    0x10034370
10060e48:	lea    esi,[ebp-0x34]
10060e4b:	jmp    0x10034370
10060e50:	lea    eax,[ebp-0x44]
10060e53:	jmp    0x100020aa
10060e58:	mov    edx,DWORD PTR [esp+0x8]
10060e5c:	lea    eax,[edx+0xc]
10060e5f:	mov    ecx,DWORD PTR [edx-0x64]
10060e62:	xor    ecx,eax
10060e64:	call   0x10043615
10060e69:	mov    ecx,DWORD PTR [edx-0x4]
10060e6c:	xor    ecx,eax
10060e6e:	call   0x10043615
10060e73:	mov    eax,0x10078474
10060e78:	jmp    0x1005959f
10060e7d:	int3   
10060e7e:	int3   
10060e7f:	int3   
10060e80:	lea    eax,[ebp-0xa0]
10060e86:	jmp    0x100340d0
10060e8b:	lea    eax,[ebp-0x98]
10060e91:	jmp    0x100340d0
10060e96:	lea    ecx,[ebp-0x4c]
10060e99:	jmp    0x100131e2
10060e9e:	lea    eax,[ebp-0x9c]
10060ea4:	jmp    0x100340d0
10060ea9:	lea    eax,[ebp-0x90]
10060eaf:	jmp    0x100340d0
10060eb4:	lea    eax,[ebp-0xa4]
10060eba:	jmp    0x100340d0
10060ebf:	lea    eax,[ebp-0x94]
10060ec5:	jmp    0x100340d0
10060eca:	lea    eax,[ebp-0x94]
10060ed0:	jmp    0x100340d0
10060ed5:	mov    edx,DWORD PTR [esp+0x8]
10060ed9:	lea    eax,[edx-0xb0]
10060edf:	mov    ecx,DWORD PTR [edx-0xb4]
10060ee5:	xor    ecx,eax
10060ee7:	call   0x10043615
10060eec:	add    eax,0x10
10060eef:	mov    ecx,DWORD PTR [edx-0x4]
10060ef2:	xor    ecx,eax
10060ef4:	call   0x10043615
10060ef9:	mov    eax,0x100784d8
10060efe:	jmp    0x1005959f
10060f03:	mov    edx,DWORD PTR [esp+0x8]
10060f07:	lea    eax,[edx+0xc]
10060f0a:	mov    ecx,DWORD PTR [edx-0x1c]
10060f0d:	xor    ecx,eax
10060f0f:	call   0x10043615
10060f14:	mov    eax,0x10078530
10060f19:	jmp    0x1005959f
10060f1e:	mov    edx,DWORD PTR [esp+0x8]
10060f22:	lea    eax,[edx+0xc]
10060f25:	mov    ecx,DWORD PTR [edx-0x1c]
10060f28:	xor    ecx,eax
10060f2a:	call   0x10043615
10060f2f:	mov    eax,0x10078588
10060f34:	jmp    0x1005959f
10060f39:	mov    eax,DWORD PTR [ebp-0x30]
10060f3c:	and    eax,0x1
10060f3f:	je     0x10060f51
10060f45:	and    DWORD PTR [ebp-0x30],0xfffffffe
10060f49:	mov    ecx,DWORD PTR [ebp-0x28]
10060f4c:	jmp    0x100131e2
10060f51:	ret    
10060f52:	lea    ecx,[ebp-0x40]
10060f55:	jmp    0x1001b6e2
10060f5a:	lea    ecx,[ebp-0x50]
10060f5d:	jmp    0x1001b6e2
10060f62:	lea    eax,[ebp-0x18]
10060f65:	jmp    0x1002b964
10060f6a:	lea    edi,[ebp-0x20]
10060f6d:	jmp    0x100024fb
10060f72:	mov    edx,DWORD PTR [esp+0x8]
10060f76:	lea    eax,[edx+0xc]
10060f79:	mov    ecx,DWORD PTR [edx-0x54]
10060f7c:	xor    ecx,eax
10060f7e:	call   0x10043615
10060f83:	mov    ecx,DWORD PTR [edx+0x40c]
10060f89:	xor    ecx,eax
10060f8b:	call   0x10043615
10060f90:	mov    eax,0x100785d4
10060f95:	jmp    0x1005959f
10060f9a:	lea    ecx,[ebp-0x20]
10060f9d:	jmp    0x1001b6e2
10060fa2:	lea    eax,[ebp-0x38]
10060fa5:	jmp    0x10001000
10060faa:	lea    ecx,[ebp-0x38]
10060fad:	jmp    0x1001b6e2
10060fb2:	mov    edx,DWORD PTR [esp+0x8]
10060fb6:	lea    eax,[edx-0x3c]
10060fb9:	mov    ecx,DWORD PTR [edx-0x40]
10060fbc:	xor    ecx,eax
10060fbe:	call   0x10043615
10060fc3:	mov    eax,0x10078610
10060fc8:	jmp    0x1005959f
10060fcd:	mov    ecx,DWORD PTR [ebp+0x8]
10060fd0:	jmp    0x100131e2
10060fd5:	lea    ecx,[ebp-0x28]
10060fd8:	jmp    0x100131e2
10060fdd:	mov    edx,DWORD PTR [esp+0x8]
10060fe1:	lea    eax,[edx+0xc]
10060fe4:	mov    ecx,DWORD PTR [edx-0x30]
10060fe7:	xor    ecx,eax
10060fe9:	call   0x10043615
10060fee:	mov    eax,0x10078644
10060ff3:	jmp    0x1005959f
10060ff8:	mov    edx,DWORD PTR [esp+0x8]
10060ffc:	lea    eax,[edx+0xc]
10060fff:	mov    ecx,DWORD PTR [edx-0x28]
10061002:	xor    ecx,eax
10061004:	call   0x10043615
10061009:	mov    eax,0x1007869c
1006100e:	jmp    0x1005959f
10061013:	mov    edx,DWORD PTR [esp+0x8]
10061017:	lea    eax,[edx+0xc]
1006101a:	mov    ecx,DWORD PTR [edx-0x28]
1006101d:	xor    ecx,eax
1006101f:	call   0x10043615
10061024:	mov    eax,0x100786f4
10061029:	jmp    0x1005959f
1006102e:	mov    edx,DWORD PTR [esp+0x8]
10061032:	lea    eax,[edx+0xc]
10061035:	mov    ecx,DWORD PTR [edx-0x28]
10061038:	xor    ecx,eax
1006103a:	call   0x10043615
1006103f:	mov    eax,0x1007874c
10061044:	jmp    0x1005959f
10061049:	mov    edx,DWORD PTR [esp+0x8]
1006104d:	lea    eax,[edx+0xc]
10061050:	mov    ecx,DWORD PTR [edx-0x28]
10061053:	xor    ecx,eax
10061055:	call   0x10043615
1006105a:	mov    eax,0x100787a4
1006105f:	jmp    0x1005959f
10061064:	lea    eax,[ebp-0x28]
10061067:	jmp    0x10026e55
1006106c:	lea    eax,[ebp-0x28]
1006106f:	jmp    0x10026e55
10061074:	lea    eax,[ebp-0x28]
10061077:	jmp    0x10026e55
1006107c:	push   DWORD PTR [ebp-0x30]
1006107f:	call   0x10042fe2
10061084:	pop    ecx
10061085:	ret    
10061086:	lea    eax,[ebp-0x1c]
10061089:	jmp    0x10026e55
1006108e:	mov    edx,DWORD PTR [esp+0x8]
10061092:	lea    eax,[edx-0x34]
10061095:	mov    ecx,DWORD PTR [edx-0x38]
10061098:	xor    ecx,eax
1006109a:	call   0x10043615
1006109f:	mov    eax,0x100787f0
100610a4:	jmp    0x1005959f
100610a9:	mov    eax,DWORD PTR [ebp-0x10]
100610ac:	add    eax,0x8
100610af:	jmp    0x1002b964
100610b4:	mov    eax,DWORD PTR [ebp-0x10]
100610b7:	add    eax,0xc
100610ba:	jmp    0x1002b964
100610bf:	mov    eax,DWORD PTR [ebp-0x10]
100610c2:	add    eax,0x10
100610c5:	jmp    0x100245f0
100610ca:	mov    edx,DWORD PTR [esp+0x8]
100610ce:	lea    eax,[edx+0xc]
100610d1:	mov    ecx,DWORD PTR [edx-0x14]
100610d4:	xor    ecx,eax
100610d6:	call   0x10043615
100610db:	mov    eax,0x1007882c
100610e0:	jmp    0x1005959f
100610e5:	mov    eax,DWORD PTR [ebp+0x8]
100610e8:	jmp    0x1002448e
100610ed:	mov    esi,DWORD PTR [ebp+0x8]
100610f0:	add    esi,0x4
100610f3:	jmp    0x1000463e
100610f8:	mov    edx,DWORD PTR [esp+0x8]
100610fc:	lea    eax,[edx+0xc]
100610ff:	mov    ecx,DWORD PTR [edx-0x10]
10061102:	xor    ecx,eax
10061104:	call   0x10043615
10061109:	mov    eax,0x10078860
1006110e:	jmp    0x1005959f
10061113:	mov    eax,DWORD PTR [ebp-0x10]
10061116:	add    eax,0x8
10061119:	jmp    0x1002b964
1006111e:	mov    eax,DWORD PTR [ebp-0x10]
10061121:	add    eax,0xc
10061124:	jmp    0x1002b964
10061129:	mov    edx,DWORD PTR [esp+0x8]
1006112d:	lea    eax,[edx+0xc]
10061130:	mov    ecx,DWORD PTR [edx-0x14]
10061133:	xor    ecx,eax
10061135:	call   0x10043615
1006113a:	mov    eax,0x10078894
1006113f:	jmp    0x1005959f
10061144:	mov    edx,DWORD PTR [esp+0x8]
10061148:	lea    eax,[edx+0xc]
1006114b:	mov    ecx,DWORD PTR [edx-0x1c]
1006114e:	xor    ecx,eax
10061150:	call   0x10043615
10061155:	mov    eax,0x100788ec
1006115a:	jmp    0x1005959f
1006115f:	lea    esi,[ebp-0x30]
10061162:	jmp    0x10004b46
10061167:	lea    esi,[ebp-0x5c]
1006116a:	jmp    0x10004b46
1006116f:	mov    edx,DWORD PTR [esp+0x8]
10061173:	lea    eax,[edx-0x6c]
10061176:	mov    ecx,DWORD PTR [edx-0x70]
10061179:	xor    ecx,eax
1006117b:	call   0x10043615
10061180:	add    eax,0xc
10061183:	mov    ecx,DWORD PTR [edx-0x8]
10061186:	xor    ecx,eax
10061188:	call   0x10043615
1006118d:	mov    eax,0x10078920
10061192:	jmp    0x1005959f
10061197:	lea    esi,[ebp-0x40]
1006119a:	jmp    0x10004b46
1006119f:	lea    esi,[ebp-0x6c]
100611a2:	jmp    0x10004b46
100611a7:	mov    edx,DWORD PTR [esp+0x8]
100611ab:	lea    eax,[edx-0x7c]
100611ae:	mov    ecx,DWORD PTR [edx-0x80]
100611b1:	xor    ecx,eax
100611b3:	call   0x10043615
100611b8:	add    eax,0xc
100611bb:	mov    ecx,DWORD PTR [edx-0x8]
100611be:	xor    ecx,eax
100611c0:	call   0x10043615
100611c5:	mov    eax,0x10078954
100611ca:	jmp    0x1005959f
100611cf:	mov    edx,DWORD PTR [esp+0x8]
100611d3:	lea    eax,[edx+0xc]
100611d6:	mov    ecx,DWORD PTR [edx-0x24]
100611d9:	xor    ecx,eax
100611db:	call   0x10043615
100611e0:	mov    eax,0x100789ac
100611e5:	jmp    0x1005959f
100611ea:	mov    edx,DWORD PTR [esp+0x8]
100611ee:	lea    eax,[edx+0xc]
100611f1:	mov    ecx,DWORD PTR [edx-0x14]
100611f4:	xor    ecx,eax
100611f6:	call   0x10043615
100611fb:	mov    eax,0x10078a04
10061200:	jmp    0x1005959f
10061205:	lea    eax,[ebp-0x1c]
10061208:	jmp    0x1001b1bf
1006120d:	mov    edx,DWORD PTR [esp+0x8]
10061211:	lea    eax,[edx+0xc]
10061214:	mov    ecx,DWORD PTR [edx-0x24]
10061217:	xor    ecx,eax
10061219:	call   0x10043615
1006121e:	mov    eax,0x10078a30
10061223:	jmp    0x1005959f
10061228:	lea    ecx,[ebp+0x24]
1006122b:	jmp    0x10001f20
10061230:	lea    ecx,[ebp+0x8]
10061233:	jmp    0x100131e2
10061238:	mov    ecx,DWORD PTR [ebp-0x10]
1006123b:	jmp    0x100131e2
10061240:	mov    edx,DWORD PTR [esp+0x8]
10061244:	lea    eax,[edx+0xc]
10061247:	mov    ecx,DWORD PTR [edx-0x18]
1006124a:	xor    ecx,eax
1006124c:	call   0x10043615
10061251:	mov    eax,0x10078a6c
10061256:	jmp    0x1005959f
1006125b:	jmp    0x10002068
10061260:	mov    edx,DWORD PTR [esp+0x8]
10061264:	lea    eax,[edx+0xc]
10061267:	mov    ecx,DWORD PTR [edx-0x18]
1006126a:	xor    ecx,eax
1006126c:	call   0x10043615
10061271:	mov    eax,0x10078acc
10061276:	jmp    0x1005959f
1006127b:	mov    edx,DWORD PTR [esp+0x8]
1006127f:	lea    eax,[edx+0xc]
10061282:	mov    ecx,DWORD PTR [edx-0x24]
10061285:	xor    ecx,eax
10061287:	call   0x10043615
1006128c:	mov    eax,0x10078b24
10061291:	jmp    0x1005959f
10061296:	mov    edx,DWORD PTR [esp+0x8]
1006129a:	lea    eax,[edx+0xc]
1006129d:	mov    ecx,DWORD PTR [edx-0x18]
100612a0:	xor    ecx,eax
100612a2:	call   0x10043615
100612a7:	mov    eax,0x10078b7c
100612ac:	jmp    0x1005959f
100612b1:	lea    eax,[ebp-0x1c]
100612b4:	jmp    0x100198de
100612b9:	mov    edx,DWORD PTR [esp+0x8]
100612bd:	lea    eax,[edx-0x1c]
100612c0:	mov    ecx,DWORD PTR [edx-0x20]
100612c3:	xor    ecx,eax
100612c5:	call   0x10043615
100612ca:	mov    eax,0x10078ba8
100612cf:	jmp    0x1005959f
100612d4:	mov    edx,DWORD PTR [esp+0x8]
100612d8:	lea    eax,[edx+0xc]
100612db:	mov    ecx,DWORD PTR [edx-0x20]
100612de:	xor    ecx,eax
100612e0:	call   0x10043615
100612e5:	mov    eax,0x10078c00
100612ea:	jmp    0x1005959f
100612ef:	lea    esi,[ebp-0x10]
100612f2:	jmp    0x10007914
100612f7:	mov    edx,DWORD PTR [esp+0x8]
100612fb:	lea    eax,[edx+0xc]
100612fe:	mov    ecx,DWORD PTR [edx-0x14]
10061301:	xor    ecx,eax
10061303:	call   0x10043615
10061308:	mov    eax,0x10078c2c
1006130d:	jmp    0x1005959f
10061312:	lea    esi,[ebp+0x24]
10061315:	jmp    0x100135dd
1006131a:	lea    ecx,[ebp+0x8]
1006131d:	jmp    0x100131e2
10061322:	mov    ecx,DWORD PTR [ebp-0x10]
10061325:	jmp    0x100131e2
1006132a:	mov    edx,DWORD PTR [esp+0x8]
1006132e:	lea    eax,[edx+0xc]
10061331:	mov    ecx,DWORD PTR [edx-0x18]
10061334:	xor    ecx,eax
10061336:	call   0x10043615
1006133b:	mov    eax,0x10078c68
10061340:	jmp    0x1005959f
10061345:	jmp    0x10002068
1006134a:	mov    edx,DWORD PTR [esp+0x8]
1006134e:	lea    eax,[edx+0xc]
10061351:	mov    ecx,DWORD PTR [edx-0x18]
10061354:	xor    ecx,eax
10061356:	call   0x10043615
1006135b:	mov    eax,0x10078cc8
10061360:	jmp    0x1005959f
10061365:	lea    ecx,[ebp-0x30]
10061368:	jmp    0x100131e2
1006136d:	mov    edx,DWORD PTR [esp+0x8]
10061371:	lea    eax,[edx+0xc]
10061374:	mov    ecx,DWORD PTR [edx-0x5c]
10061377:	xor    ecx,eax
10061379:	call   0x10043615
1006137e:	mov    eax,0x10078cf4
10061383:	jmp    0x1005959f
10061388:	lea    ecx,[ebp-0x34]
1006138b:	jmp    0x100131e2
10061390:	lea    esi,[ebp-0x28]
10061393:	jmp    0x1000d355
10061398:	lea    ecx,[ebp-0x50]
1006139b:	jmp    0x100131e2
100613a0:	mov    edx,DWORD PTR [esp+0x8]
100613a4:	lea    eax,[edx+0xc]
100613a7:	mov    ecx,DWORD PTR [edx-0x54]
100613aa:	xor    ecx,eax
100613ac:	call   0x10043615
100613b1:	mov    eax,0x10078d30
100613b6:	jmp    0x1005959f
100613bb:	lea    edi,[ebp+0x8]
100613be:	jmp    0x100024fb
100613c3:	lea    ecx,[ebp-0x28]
100613c6:	jmp    0x100131e2
100613cb:	mov    edx,DWORD PTR [esp+0x8]
100613cf:	lea    eax,[edx+0xc]
100613d2:	mov    ecx,DWORD PTR [edx-0x2c]
100613d5:	xor    ecx,eax
100613d7:	call   0x10043615
100613dc:	mov    eax,0x10078d64
100613e1:	jmp    0x1005959f
100613e6:	lea    ecx,[ebp-0x30]
100613e9:	jmp    0x100131e2
100613ee:	mov    edx,DWORD PTR [esp+0x8]
100613f2:	lea    eax,[edx+0xc]
100613f5:	mov    ecx,DWORD PTR [edx-0x40]
100613f8:	xor    ecx,eax
100613fa:	call   0x10043615
100613ff:	mov    ecx,DWORD PTR [edx-0x8]
10061402:	xor    ecx,eax
10061404:	call   0x10043615
10061409:	mov    eax,0x10078df8
1006140e:	jmp    0x1005959f
10061413:	mov    edx,DWORD PTR [esp+0x8]
10061417:	lea    eax,[edx+0xc]
1006141a:	mov    ecx,DWORD PTR [edx-0x20]
1006141d:	xor    ecx,eax
1006141f:	call   0x10043615
10061424:	mov    eax,0x10078e50
10061429:	jmp    0x1005959f
1006142e:	push   DWORD PTR [ebp-0x14]
10061431:	call   0x10042fe2
10061436:	pop    ecx
10061437:	ret    
10061438:	mov    eax,DWORD PTR [ebp-0x10]
1006143b:	and    eax,0x1
1006143e:	je     0x10061450
10061444:	and    DWORD PTR [ebp-0x10],0xfffffffe
10061448:	mov    eax,DWORD PTR [ebp+0x8]
1006144b:	jmp    0x1000a18c
10061450:	ret    
10061451:	push   DWORD PTR [ebp-0x14]
10061454:	call   0x10042fe2
10061459:	pop    ecx
1006145a:	ret    
1006145b:	mov    edx,DWORD PTR [esp+0x8]
1006145f:	lea    eax,[edx+0xc]
10061462:	mov    ecx,DWORD PTR [edx-0x18]
10061465:	xor    ecx,eax
10061467:	call   0x10043615
1006146c:	mov    eax,0x10078e8c
10061471:	jmp    0x1005959f
10061476:	lea    eax,[ebp-0x10]
10061479:	jmp    0x1000a18c
1006147e:	mov    edx,DWORD PTR [esp+0x8]
10061482:	lea    eax,[edx+0xc]
10061485:	mov    ecx,DWORD PTR [edx-0x18]
10061488:	xor    ecx,eax
1006148a:	call   0x10043615
1006148f:	mov    eax,0x10078eb8
10061494:	jmp    0x1005959f
10061499:	lea    edi,[ebp+0xc]
1006149c:	jmp    0x100024fb
100614a1:	lea    ecx,[ebp-0x28]
100614a4:	jmp    0x100131e2
100614a9:	lea    ecx,[ebp-0x44]
100614ac:	jmp    0x100131e2
100614b1:	mov    edx,DWORD PTR [esp+0x8]
100614b5:	lea    eax,[edx+0xc]
100614b8:	mov    ecx,DWORD PTR [edx-0x48]
100614bb:	xor    ecx,eax
100614bd:	call   0x10043615
100614c2:	mov    eax,0x10078ef4
100614c7:	jmp    0x1005959f
100614cc:	lea    esi,[ebp+0x24]
100614cf:	jmp    0x1000d355
100614d4:	lea    ecx,[ebp+0x8]
100614d7:	jmp    0x100131e2
100614dc:	mov    ecx,DWORD PTR [ebp-0x10]
100614df:	jmp    0x100131e2
100614e4:	mov    edx,DWORD PTR [esp+0x8]
100614e8:	lea    eax,[edx+0xc]
100614eb:	mov    ecx,DWORD PTR [edx-0x18]
100614ee:	xor    ecx,eax
100614f0:	call   0x10043615
100614f5:	mov    eax,0x10078f30
100614fa:	jmp    0x1005959f
100614ff:	jmp    0x10002068
10061504:	mov    edx,DWORD PTR [esp+0x8]
10061508:	lea    eax,[edx+0xc]
1006150b:	mov    ecx,DWORD PTR [edx-0x1c]
1006150e:	xor    ecx,eax
10061510:	call   0x10043615
10061515:	mov    eax,0x10078f90
1006151a:	jmp    0x1005959f
1006151f:	mov    esi,DWORD PTR [ebp+0x8]
10061522:	jmp    0x1000463e
10061527:	mov    esi,DWORD PTR [ebp+0x8]
1006152a:	add    esi,0x4
1006152d:	jmp    0x1000ce6e
10061532:	mov    esi,DWORD PTR [ebp+0x8]
10061535:	add    esi,0x8
10061538:	jmp    0x1000ce7f
1006153d:	mov    eax,DWORD PTR [ebp+0x8]
10061540:	add    eax,0xc
10061543:	jmp    0x10025fb9
10061548:	mov    edx,DWORD PTR [esp+0x8]
1006154c:	lea    eax,[edx+0xc]
1006154f:	mov    ecx,DWORD PTR [edx-0x10]
10061552:	xor    ecx,eax
10061554:	call   0x10043615
10061559:	mov    eax,0x10078fd4
1006155e:	jmp    0x1005959f
10061563:	mov    eax,DWORD PTR [ebp-0x58]
10061566:	and    eax,0x1
10061569:	je     0x1006157b
1006156f:	and    DWORD PTR [ebp-0x58],0xfffffffe
10061573:	mov    ecx,DWORD PTR [ebp-0x5c]
10061576:	jmp    0x100131e2
1006157b:	ret    
1006157c:	mov    edx,DWORD PTR [esp+0x8]
10061580:	lea    eax,[edx+0xc]
10061583:	mov    ecx,DWORD PTR [edx-0x60]
10061586:	xor    ecx,eax
10061588:	call   0x10043615
1006158d:	mov    ecx,DWORD PTR [edx-0x4]
10061590:	xor    ecx,eax
10061592:	call   0x10043615
10061597:	mov    eax,0x10079000
1006159c:	jmp    0x1005959f
100615a1:	lea    esi,[ebp-0x18]
100615a4:	jmp    0x1000ac45
100615a9:	mov    edx,DWORD PTR [esp+0x8]
100615ad:	lea    eax,[edx+0xc]
100615b0:	mov    ecx,DWORD PTR [edx-0x15c]
100615b6:	xor    ecx,eax
100615b8:	call   0x10043615
100615bd:	mov    eax,0x1007902c
100615c2:	jmp    0x1005959f
100615c7:	jmp    0x10036f40
100615cc:	mov    edx,DWORD PTR [esp+0x8]
100615d0:	lea    eax,[edx-0x14]
100615d3:	mov    ecx,DWORD PTR [edx-0x18]
100615d6:	xor    ecx,eax
100615d8:	call   0x10043615
100615dd:	mov    eax,0x10079058
100615e2:	jmp    0x1005959f
100615e7:	mov    eax,DWORD PTR [ebp-0x68]
100615ea:	and    eax,0x1
100615ed:	je     0x100615ff
100615f3:	and    DWORD PTR [ebp-0x68],0xfffffffe
100615f7:	lea    ecx,[ebp-0x4c]
100615fa:	jmp    0x100131e2
100615ff:	ret    
10061600:	lea    esi,[ebp-0x68]
10061603:	jmp    0x1000ac45
10061608:	lea    ecx,[ebp-0x4c]
1006160b:	jmp    0x100131e2
10061610:	lea    ecx,[ebp-0x30]
10061613:	jmp    0x100131e2
10061618:	mov    edx,DWORD PTR [esp+0x8]
1006161c:	lea    eax,[edx-0x6c]
1006161f:	mov    ecx,DWORD PTR [edx-0x70]
10061622:	xor    ecx,eax
10061624:	call   0x10043615
10061629:	add    eax,0xc
1006162c:	mov    ecx,DWORD PTR [edx-0x8]
1006162f:	xor    ecx,eax
10061631:	call   0x10043615
10061636:	mov    eax,0x100790a4
1006163b:	jmp    0x1005959f
10061640:	mov    eax,DWORD PTR [ebp-0xc8]
10061646:	and    eax,0x1
10061649:	je     0x10061661
1006164f:	and    DWORD PTR [ebp-0xc8],0xfffffffe
10061656:	lea    ecx,[ebp-0xc0]
1006165c:	jmp    0x100131e2
10061661:	ret    
10061662:	lea    esi,[ebp-0xc8]
10061668:	jmp    0x1000ac45
1006166d:	lea    ecx,[ebp-0x88]
10061673:	jmp    0x100131e2
10061678:	lea    ecx,[ebp-0x30]
1006167b:	jmp    0x100131e2
10061680:	lea    esi,[ebp-0xa0]
10061686:	jmp    0x1000d355
1006168b:	mov    esi,DWORD PTR [ebp-0xc4]
10061691:	jmp    0x1000d355
10061696:	lea    edi,[ebp-0x5c]
10061699:	jmp    0x1000cad0
1006169e:	lea    ecx,[ebp-0x88]
100616a4:	jmp    0x100131e2
100616a9:	lea    edi,[ebp-0x88]
100616af:	jmp    0x1000cad0
100616b4:	mov    edx,DWORD PTR [esp+0x8]
100616b8:	lea    eax,[edx-0xcc]
100616be:	mov    ecx,DWORD PTR [edx-0xd0]
100616c4:	xor    ecx,eax
100616c6:	call   0x10043615
100616cb:	add    eax,0xc
100616ce:	mov    ecx,DWORD PTR [edx-0x8]
100616d1:	xor    ecx,eax
100616d3:	call   0x10043615
100616d8:	mov    eax,0x10079118
100616dd:	jmp    0x1005959f
100616e2:	mov    esi,DWORD PTR [ebp-0x10]
100616e5:	jmp    0x1000463e
100616ea:	mov    esi,DWORD PTR [ebp-0x10]
100616ed:	add    esi,0x4
100616f0:	jmp    0x1000463e
100616f5:	mov    edx,DWORD PTR [esp+0x8]
100616f9:	lea    eax,[edx+0xc]
100616fc:	mov    ecx,DWORD PTR [edx-0x14]
100616ff:	xor    ecx,eax
10061701:	call   0x10043615
10061706:	mov    eax,0x1007914c
1006170b:	jmp    0x1005959f
10061710:	mov    edx,DWORD PTR [esp+0x8]
10061714:	lea    eax,[edx+0xc]
10061717:	mov    ecx,DWORD PTR [edx-0x18]
1006171a:	xor    ecx,eax
1006171c:	call   0x10043615
10061721:	mov    eax,0x100791a4
10061726:	jmp    0x1005959f
1006172b:	lea    esi,[ebp-0x18]
1006172e:	jmp    0x10007914
10061733:	mov    edx,DWORD PTR [esp+0x8]
10061737:	lea    eax,[edx+0xc]
1006173a:	mov    ecx,DWORD PTR [edx-0x1c]
1006173d:	xor    ecx,eax
1006173f:	call   0x10043615
10061744:	mov    eax,0x100791d0
10061749:	jmp    0x1005959f
1006174e:	lea    ecx,[ebp-0x38]
10061751:	jmp    0x100131e2
10061756:	mov    edx,DWORD PTR [esp+0x8]
1006175a:	lea    eax,[edx+0xc]
1006175d:	mov    ecx,DWORD PTR [edx-0x44]
10061760:	xor    ecx,eax
10061762:	call   0x10043615
10061767:	mov    ecx,DWORD PTR [edx-0x8]
1006176a:	xor    ecx,eax
1006176c:	call   0x10043615
10061771:	mov    eax,0x10079264
10061776:	jmp    0x1005959f
1006177b:	lea    ecx,[ebp-0x4c]
1006177e:	jmp    0x100131e2
10061783:	lea    ecx,[ebp-0x30]
10061786:	jmp    0x100131e2
1006178b:	mov    edx,DWORD PTR [esp+0x8]
1006178f:	lea    eax,[edx-0x64]
10061792:	mov    ecx,DWORD PTR [edx-0x68]
10061795:	xor    ecx,eax
10061797:	call   0x10043615
1006179c:	add    eax,0xc
1006179f:	mov    ecx,DWORD PTR [edx-0x8]
100617a2:	xor    ecx,eax
100617a4:	call   0x10043615
100617a9:	mov    eax,0x10079298
100617ae:	jmp    0x1005959f
100617b3:	mov    ecx,DWORD PTR [ebp+0x8]
100617b6:	jmp    0x100131e2
100617bb:	mov    edx,DWORD PTR [esp+0x8]
100617bf:	lea    eax,[edx+0xc]
100617c2:	mov    ecx,DWORD PTR [edx-0x10]
100617c5:	xor    ecx,eax
100617c7:	call   0x10043615
100617cc:	mov    eax,0x100792c4
100617d1:	jmp    0x1005959f
100617d6:	int3   
100617d7:	int3   
100617d8:	int3   
100617d9:	int3   
100617da:	int3   
100617db:	int3   
100617dc:	int3   
100617dd:	int3   
100617de:	int3   
100617df:	int3   
100617e0:	mov    eax,DWORD PTR [ebp-0x24]
100617e3:	and    eax,0x1
100617e6:	je     0x100617f8
100617ec:	and    DWORD PTR [ebp-0x24],0xfffffffe
100617f0:	mov    ecx,DWORD PTR [ebp-0x20]
100617f3:	jmp    0x100131e2
100617f8:	ret    
100617f9:	mov    edx,DWORD PTR [esp+0x8]
100617fd:	lea    eax,[edx-0x20]
10061800:	mov    ecx,DWORD PTR [edx-0x24]
10061803:	xor    ecx,eax
10061805:	call   0x10043615
1006180a:	add    eax,0x8
1006180d:	mov    ecx,DWORD PTR [edx-0x4]
10061810:	xor    ecx,eax
10061812:	call   0x10043615
10061817:	mov    eax,0x100792f0
1006181c:	jmp    0x1005959f
10061821:	int3   
10061822:	int3   
10061823:	int3   
10061824:	int3   
10061825:	int3   
10061826:	int3   
10061827:	int3   
10061828:	int3   
10061829:	int3   
1006182a:	int3   
1006182b:	int3   
1006182c:	int3   
1006182d:	int3   
1006182e:	int3   
1006182f:	int3   
10061830:	mov    eax,DWORD PTR [ebp-0x34]
10061833:	push   eax
10061834:	call   0x10042fe2
10061839:	pop    ecx
1006183a:	ret    
1006183b:	lea    edi,[ebp-0x50]
1006183e:	jmp    0x100024fb
10061843:	lea    edi,[ebp-0x40]
10061846:	jmp    0x100024fb
1006184b:	lea    edi,[ebp-0x38]
1006184e:	jmp    0x100024fb
10061853:	lea    edi,[ebp-0x40]
10061856:	jmp    0x100024fb
1006185b:	lea    edi,[ebp-0x44]
1006185e:	jmp    0x100024fb
10061863:	lea    ecx,[ebp-0x20]
10061866:	jmp    0x1001b6e2
1006186b:	mov    edx,DWORD PTR [esp+0x8]
1006186f:	lea    eax,[edx-0x5c]
10061872:	mov    ecx,DWORD PTR [edx-0x60]
10061875:	xor    ecx,eax
10061877:	call   0x10043615
1006187c:	mov    eax,0x1007934c
10061881:	jmp    0x1005959f
10061886:	int3   
10061887:	int3   
10061888:	int3   
10061889:	int3   
1006188a:	int3   
1006188b:	int3   
1006188c:	int3   
1006188d:	int3   
1006188e:	int3   
1006188f:	int3   
10061890:	lea    eax,[ebp-0x10]
10061893:	jmp    0x10002081
10061898:	lea    ecx,[ebp-0x2c]
1006189b:	jmp    0x100131e2
100618a0:	mov    edx,DWORD PTR [esp+0x8]
100618a4:	lea    eax,[edx+0xc]
100618a7:	mov    ecx,DWORD PTR [edx-0x48]
100618aa:	xor    ecx,eax
100618ac:	call   0x10043615
100618b1:	mov    ecx,DWORD PTR [edx+0x195c]
100618b7:	xor    ecx,eax
100618b9:	call   0x10043615
100618be:	mov    eax,0x10079380
100618c3:	jmp    0x1005959f
100618c8:	int3   
100618c9:	int3   
100618ca:	int3   
100618cb:	int3   
100618cc:	int3   
100618cd:	int3   
100618ce:	int3   
100618cf:	int3   
100618d0:	lea    esi,[ebp-0x30]
100618d3:	jmp    0x1001496d
100618d8:	lea    eax,[ebp-0x40]
100618db:	jmp    0x10002081
100618e0:	lea    eax,[ebp-0x2c]
100618e3:	jmp    0x10002081
100618e8:	lea    eax,[ebp-0x3c]
100618eb:	jmp    0x10002081
100618f0:	lea    esi,[ebp-0x28]
100618f3:	jmp    0x10006983
100618f8:	mov    eax,DWORD PTR [ebp+0x4]
100618fb:	jmp    0x10002081
10061900:	mov    edx,DWORD PTR [esp+0x8]
10061904:	lea    eax,[edx-0x44]
10061907:	mov    ecx,DWORD PTR [edx-0x48]
1006190a:	xor    ecx,eax
1006190c:	call   0x10043615
10061911:	mov    eax,0x100793d4
10061916:	jmp    0x1005959f
1006191b:	int3   
1006191c:	int3   
1006191d:	int3   
1006191e:	int3   
1006191f:	int3   
10061920:	lea    ecx,[ebp-0x28]
10061923:	jmp    0x100131e2
10061928:	mov    ecx,DWORD PTR [ebp+0x4]
1006192b:	jmp    0x10043390
10061930:	mov    edx,DWORD PTR [esp+0x8]
10061934:	lea    eax,[edx-0x28]
10061937:	mov    ecx,DWORD PTR [edx-0x2c]
1006193a:	xor    ecx,eax
1006193c:	call   0x10043615
10061941:	mov    eax,0x10079408
10061946:	jmp    0x1005959f
1006194b:	int3   
1006194c:	int3   
1006194d:	int3   
1006194e:	int3   
1006194f:	int3   
10061950:	lea    ecx,[ebp-0x17c]
10061956:	jmp    0x100131e2
1006195b:	lea    ecx,[ebp-0x160]
10061961:	jmp    0x10043390
10061966:	lea    eax,[ebp-0x1a0]
1006196c:	jmp    0x100020aa
10061971:	lea    ecx,[ebp-0x198]
10061977:	jmp    0x100131e2
1006197c:	lea    ecx,[ebp-0x138]
10061982:	jmp    0x10043390
10061987:	mov    edx,DWORD PTR [esp+0x8]
1006198b:	lea    eax,[edx-0x1a4]
10061991:	mov    ecx,DWORD PTR [edx-0x1a8]
10061997:	xor    ecx,eax
10061999:	call   0x10043615
1006199e:	add    eax,0xc
100619a1:	mov    ecx,DWORD PTR [edx-0x4]
100619a4:	xor    ecx,eax
100619a6:	call   0x10043615
100619ab:	mov    eax,0x10079454
100619b0:	jmp    0x1005959f
100619b5:	int3   
100619b6:	int3   
100619b7:	int3   
100619b8:	int3   
100619b9:	int3   
100619ba:	int3   
100619bb:	int3   
100619bc:	int3   
100619bd:	int3   
100619be:	int3   
100619bf:	int3   
100619c0:	lea    eax,[ebp-0x58]
100619c3:	jmp    0x100020aa
100619c8:	lea    eax,[ebp-0x60]
100619cb:	jmp    0x10036f10
100619d0:	lea    ecx,[ebp-0x54]
100619d3:	jmp    0x100131e2
100619d8:	lea    ecx,[ebp-0x38]
100619db:	jmp    0x10043390
100619e0:	lea    ecx,[ebp-0x54]
100619e3:	jmp    0x100131e2
100619e8:	lea    ecx,[ebp-0x38]
100619eb:	jmp    0x10043390
100619f0:	lea    ecx,[ebp-0x54]
100619f3:	jmp    0x100131e2
100619f8:	mov    edx,DWORD PTR [esp+0x8]
100619fc:	lea    eax,[edx-0x64]
100619ff:	mov    ecx,DWORD PTR [edx-0x68]
10061a02:	xor    ecx,eax
10061a04:	call   0x10043615
10061a09:	mov    eax,0x100794b0
10061a0e:	jmp    0x1005959f
10061a13:	int3   
10061a14:	int3   
10061a15:	int3   
10061a16:	int3   
10061a17:	int3   
10061a18:	int3   
10061a19:	int3   
10061a1a:	int3   
10061a1b:	int3   
10061a1c:	int3   
10061a1d:	int3   
10061a1e:	int3   
10061a1f:	int3   
10061a20:	lea    eax,[ebp-0x5c]
10061a23:	jmp    0x10036f10
10061a28:	lea    ecx,[ebp-0x54]
10061a2b:	jmp    0x100131e2
10061a30:	lea    ecx,[ebp-0x38]
10061a33:	jmp    0x10043390
10061a38:	mov    edx,DWORD PTR [esp+0x8]
10061a3c:	lea    eax,[edx-0x5c]
10061a3f:	mov    ecx,DWORD PTR [edx-0x60]
10061a42:	xor    ecx,eax
10061a44:	call   0x10043615
10061a49:	mov    eax,0x100794ec
10061a4e:	jmp    0x1005959f
10061a53:	int3   
10061a54:	int3   
10061a55:	int3   
10061a56:	int3   
10061a57:	int3   
10061a58:	int3   
10061a59:	int3   
10061a5a:	int3   
10061a5b:	int3   
10061a5c:	int3   
10061a5d:	int3   
10061a5e:	int3   
10061a5f:	int3   
10061a60:	lea    ecx,[ebp-0x140]
10061a66:	jmp    0x100131e2
10061a6b:	lea    ecx,[ebp-0x194]
10061a71:	jmp    0x10043390
10061a76:	lea    ecx,[ebp-0x140]
10061a7c:	jmp    0x100131e2
10061a81:	lea    ecx,[ebp-0x140]
10061a87:	jmp    0x100131e2
10061a8c:	lea    ecx,[ebp-0x140]
10061a92:	jmp    0x100131e2
10061a97:	lea    ecx,[ebp-0x16c]
10061a9d:	jmp    0x100131e2
10061aa2:	mov    edx,DWORD PTR [esp+0x8]
10061aa6:	lea    eax,[edx+0xc]
10061aa9:	mov    ecx,DWORD PTR [edx-0x19c]
10061aaf:	xor    ecx,eax
10061ab1:	call   0x10043615
10061ab6:	mov    ecx,DWORD PTR [edx-0x4]
10061ab9:	xor    ecx,eax
10061abb:	call   0x10043615
10061ac0:	mov    eax,0x10079540
10061ac5:	jmp    0x1005959f
10061aca:	int3   
10061acb:	int3   
10061acc:	int3   
10061acd:	int3   
10061ace:	int3   
10061acf:	int3   
10061ad0:	lea    ecx,[ebp-0x2c]
10061ad3:	jmp    0x100131e2
10061ad8:	lea    ecx,[ebp-0x64]
10061adb:	jmp    0x100131e2
10061ae0:	lea    ecx,[ebp-0x80]
10061ae3:	jmp    0x100131e2
10061ae8:	lea    ecx,[ebp-0x48]
10061aeb:	jmp    0x100131e2
10061af0:	mov    edx,DWORD PTR [esp+0x8]
10061af4:	lea    eax,[edx-0x80]
10061af7:	mov    ecx,DWORD PTR [edx-0x84]
10061afd:	xor    ecx,eax
10061aff:	call   0x10043615
10061b04:	add    eax,0xc
10061b07:	mov    ecx,DWORD PTR [edx-0x4]
10061b0a:	xor    ecx,eax
10061b0c:	call   0x10043615
10061b11:	mov    eax,0x10079584
10061b16:	jmp    0x1005959f
10061b1b:	int3   
10061b1c:	int3   
10061b1d:	int3   
10061b1e:	int3   
10061b1f:	int3   
10061b20:	lea    eax,[ebp-0x10]
10061b23:	jmp    0x100020aa
10061b28:	mov    edx,DWORD PTR [esp+0x8]
10061b2c:	lea    eax,[edx-0x10]
10061b2f:	mov    ecx,DWORD PTR [edx-0x14]
10061b32:	xor    ecx,eax
10061b34:	call   0x10043615
10061b39:	mov    eax,0x100795b0
10061b3e:	jmp    0x1005959f
10061b43:	int3   
10061b44:	int3   
10061b45:	int3   
10061b46:	int3   
10061b47:	int3   
10061b48:	int3   
10061b49:	int3   
10061b4a:	int3   
10061b4b:	int3   
10061b4c:	int3   
10061b4d:	int3   
10061b4e:	int3   
10061b4f:	int3   
10061b50:	lea    ecx,[ebp-0x54]
10061b53:	jmp    0x100131e2
10061b58:	lea    ecx,[ebp-0x38]
10061b5b:	jmp    0x10043390
10061b60:	mov    edx,DWORD PTR [esp+0x8]
10061b64:	lea    eax,[edx-0x58]
10061b67:	mov    ecx,DWORD PTR [edx-0x5c]
10061b6a:	xor    ecx,eax
10061b6c:	call   0x10043615
10061b71:	mov    eax,0x100795e4
10061b76:	jmp    0x1005959f
10061b7b:	int3   
10061b7c:	int3   
10061b7d:	int3   
10061b7e:	int3   
10061b7f:	int3   
10061b80:	lea    ecx,[ebp-0x54]
10061b83:	jmp    0x100131e2
10061b88:	lea    ecx,[ebp-0x38]
10061b8b:	jmp    0x10043390
10061b90:	mov    edx,DWORD PTR [esp+0x8]
10061b94:	lea    eax,[edx-0x5c]
10061b97:	mov    ecx,DWORD PTR [edx-0x60]
10061b9a:	xor    ecx,eax
10061b9c:	call   0x10043615
10061ba1:	mov    eax,0x10079618
10061ba6:	jmp    0x1005959f
10061bab:	int3   
10061bac:	int3   
10061bad:	int3   
10061bae:	int3   
10061baf:	int3   
10061bb0:	lea    ecx,[ebp-0x50]
10061bb3:	jmp    0x100131e2
10061bb8:	lea    ecx,[ebp-0x34]
10061bbb:	jmp    0x10043390
10061bc0:	mov    edx,DWORD PTR [esp+0x8]
10061bc4:	lea    eax,[edx-0x54]
10061bc7:	mov    ecx,DWORD PTR [edx-0x58]
10061bca:	xor    ecx,eax
10061bcc:	call   0x10043615
10061bd1:	mov    eax,0x1007964c
10061bd6:	jmp    0x1005959f
10061bdb:	int3   
10061bdc:	int3   
10061bdd:	int3   
10061bde:	int3   
10061bdf:	int3   
10061be0:	lea    ecx,[ebp-0x54]
10061be3:	jmp    0x100131e2
10061be8:	lea    ecx,[ebp-0x38]
10061beb:	jmp    0x10043390
10061bf0:	mov    edx,DWORD PTR [esp+0x8]
10061bf4:	lea    eax,[edx-0x6c]
10061bf7:	mov    ecx,DWORD PTR [edx-0x70]
10061bfa:	xor    ecx,eax
10061bfc:	call   0x10043615
10061c01:	mov    eax,0x10079680
10061c06:	jmp    0x1005959f
10061c0b:	int3   
10061c0c:	int3   
10061c0d:	int3   
10061c0e:	int3   
10061c0f:	int3   
10061c10:	lea    eax,[ebp-0x5c]
10061c13:	jmp    0x10036f10
10061c18:	lea    ecx,[ebp-0x54]
10061c1b:	jmp    0x100131e2
10061c20:	lea    ecx,[ebp-0x38]
10061c23:	jmp    0x10043390
10061c28:	lea    ecx,[ebp-0x54]
10061c2b:	jmp    0x100131e2
10061c30:	lea    ecx,[ebp-0x38]
10061c33:	jmp    0x10043390
10061c38:	mov    edx,DWORD PTR [esp+0x8]
10061c3c:	lea    eax,[edx-0x5c]
10061c3f:	mov    ecx,DWORD PTR [edx-0x60]
10061c42:	xor    ecx,eax
10061c44:	call   0x10043615
10061c49:	mov    eax,0x100796cc
10061c4e:	jmp    0x1005959f
10061c53:	int3   
10061c54:	int3   
10061c55:	int3   
10061c56:	int3   
10061c57:	int3   
10061c58:	int3   
10061c59:	int3   
10061c5a:	int3   
10061c5b:	int3   
10061c5c:	int3   
10061c5d:	int3   
10061c5e:	int3   
10061c5f:	int3   
10061c60:	lea    eax,[ebp-0x5c]
10061c63:	jmp    0x10036f10
10061c68:	lea    ecx,[ebp-0x54]
10061c6b:	jmp    0x100131e2
10061c70:	lea    ecx,[ebp-0x38]
10061c73:	jmp    0x10043390
10061c78:	mov    edx,DWORD PTR [esp+0x8]
10061c7c:	lea    eax,[edx-0x64]
10061c7f:	mov    ecx,DWORD PTR [edx-0x68]
10061c82:	xor    ecx,eax
10061c84:	call   0x10043615
10061c89:	mov    eax,0x10079708
10061c8e:	jmp    0x1005959f
10061c93:	int3   
10061c94:	int3   
10061c95:	int3   
10061c96:	int3   
10061c97:	int3   
10061c98:	int3   
10061c99:	int3   
10061c9a:	int3   
10061c9b:	int3   
10061c9c:	int3   
10061c9d:	int3   
10061c9e:	int3   
10061c9f:	int3   
10061ca0:	lea    eax,[ebp-0x5c]
10061ca3:	jmp    0x10036f10
10061ca8:	lea    ecx,[ebp-0x54]
10061cab:	jmp    0x100131e2
10061cb0:	lea    ecx,[ebp-0x38]
10061cb3:	jmp    0x10043390
10061cb8:	lea    ecx,[ebp-0x54]
10061cbb:	jmp    0x100131e2
10061cc0:	lea    ecx,[ebp-0x38]
10061cc3:	jmp    0x10043390
10061cc8:	lea    ecx,[ebp-0x54]
10061ccb:	jmp    0x100131e2
10061cd0:	lea    ecx,[ebp-0x54]
10061cd3:	jmp    0x100131e2
10061cd8:	lea    ecx,[ebp-0x54]
10061cdb:	jmp    0x100131e2
10061ce0:	mov    edx,DWORD PTR [esp+0x8]
10061ce4:	lea    eax,[edx-0x60]
10061ce7:	mov    ecx,DWORD PTR [edx-0x64]
10061cea:	xor    ecx,eax
10061cec:	call   0x10043615
10061cf1:	mov    eax,0x10079770
10061cf6:	jmp    0x1005959f
10061cfb:	int3   
10061cfc:	int3   
10061cfd:	int3   
10061cfe:	int3   
10061cff:	int3   
10061d00:	lea    eax,[ebp-0x58]
10061d03:	jmp    0x10036f10
10061d08:	lea    ecx,[ebp-0x50]
10061d0b:	jmp    0x100131e2
10061d10:	lea    ecx,[ebp-0x34]
10061d13:	jmp    0x10043390
10061d18:	mov    edx,DWORD PTR [esp+0x8]
10061d1c:	lea    eax,[edx-0x5c]
10061d1f:	mov    ecx,DWORD PTR [edx-0x60]
10061d22:	xor    ecx,eax
10061d24:	call   0x10043615
10061d29:	mov    eax,0x100797ac
10061d2e:	jmp    0x1005959f
10061d33:	int3   
10061d34:	int3   
10061d35:	int3   
10061d36:	int3   
10061d37:	int3   
10061d38:	int3   
10061d39:	int3   
10061d3a:	int3   
10061d3b:	int3   
10061d3c:	int3   
10061d3d:	int3   
10061d3e:	int3   
10061d3f:	int3   
10061d40:	lea    ecx,[ebp-0x864]
10061d46:	jmp    0x100131e2
10061d4b:	lea    ecx,[ebp-0x848]
10061d51:	jmp    0x10043390
10061d56:	mov    edx,DWORD PTR [esp+0x8]
10061d5a:	lea    eax,[edx-0x8a4]
10061d60:	mov    ecx,DWORD PTR [edx-0x8a8]
10061d66:	xor    ecx,eax
10061d68:	call   0x10043615
10061d6d:	add    eax,0xc
10061d70:	mov    ecx,DWORD PTR [edx-0x8]
10061d73:	xor    ecx,eax
10061d75:	call   0x10043615
10061d7a:	mov    eax,0x100797e0
10061d7f:	jmp    0x1005959f
10061d84:	int3   
10061d85:	int3   
10061d86:	int3   
10061d87:	int3   
10061d88:	int3   
10061d89:	int3   
10061d8a:	int3   
10061d8b:	int3   
10061d8c:	int3   
10061d8d:	int3   
10061d8e:	int3   
10061d8f:	int3   
10061d90:	lea    ecx,[ebp-0x4c]
10061d93:	jmp    0x100131e2
10061d98:	lea    ecx,[ebp-0x30]
10061d9b:	jmp    0x100131e2
10061da0:	mov    edx,DWORD PTR [esp+0x8]
10061da4:	lea    eax,[edx+0xc]
10061da7:	mov    ecx,DWORD PTR [edx-0xac]
10061dad:	xor    ecx,eax
10061daf:	call   0x10043615
10061db4:	mov    ecx,DWORD PTR [edx-0x8]
10061db7:	xor    ecx,eax
10061db9:	call   0x10043615
10061dbe:	mov    eax,0x10079848
10061dc3:	jmp    0x1005959f
10061dc8:	int3   
10061dc9:	int3   
10061dca:	int3   
10061dcb:	int3   
10061dcc:	int3   
10061dcd:	int3   
10061dce:	int3   
10061dcf:	int3   
10061dd0:	mov    eax,DWORD PTR [ebp-0x14]
10061dd3:	and    eax,0x1
10061dd6:	je     0x10061de8
10061ddc:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061de0:	mov    ecx,DWORD PTR [ebp-0x10]
10061de3:	jmp    0x100131e2
10061de8:	ret    
10061de9:	mov    edx,DWORD PTR [esp+0x8]
10061ded:	lea    eax,[edx-0x28]
10061df0:	mov    ecx,DWORD PTR [edx-0x2c]
10061df3:	xor    ecx,eax
10061df5:	call   0x10043615
10061dfa:	mov    eax,0x10079874
10061dff:	jmp    0x1005959f
10061e04:	int3   
10061e05:	int3   
10061e06:	int3   
10061e07:	int3   
10061e08:	int3   
10061e09:	int3   
10061e0a:	int3   
10061e0b:	int3   
10061e0c:	int3   
10061e0d:	int3   
10061e0e:	int3   
10061e0f:	int3   
10061e10:	mov    eax,DWORD PTR [ebp-0x58]
10061e13:	and    eax,0x1
10061e16:	je     0x10061e28
10061e1c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10061e20:	mov    eax,DWORD PTR [ebp+0x4]
10061e23:	jmp    0x10002081
10061e28:	ret    
10061e29:	lea    ecx,[ebp-0x54]
10061e2c:	jmp    0x100131e2
10061e31:	lea    ecx,[ebp-0x38]
10061e34:	jmp    0x10043390
10061e39:	mov    edx,DWORD PTR [esp+0x8]
10061e3d:	lea    eax,[edx-0x58]
10061e40:	mov    ecx,DWORD PTR [edx-0x5c]
10061e43:	xor    ecx,eax
10061e45:	call   0x10043615
10061e4a:	mov    eax,0x100798b0
10061e4f:	jmp    0x1005959f
10061e54:	int3   
10061e55:	int3   
10061e56:	int3   
10061e57:	int3   
10061e58:	int3   
10061e59:	int3   
10061e5a:	int3   
10061e5b:	int3   
10061e5c:	int3   
10061e5d:	int3   
10061e5e:	int3   
10061e5f:	int3   
10061e60:	mov    eax,DWORD PTR [ebp-0x54]
10061e63:	and    eax,0x1
10061e66:	je     0x10061e78
10061e6c:	and    DWORD PTR [ebp-0x54],0xfffffffe
10061e70:	mov    ecx,DWORD PTR [ebp-0x5c]
10061e73:	jmp    0x100131e2
10061e78:	ret    
10061e79:	lea    esi,[ebp-0x6c]
10061e7c:	jmp    0x100045ee
10061e81:	lea    ecx,[ebp-0x48]
10061e84:	jmp    0x100131e2
10061e89:	lea    ecx,[ebp-0x2c]
10061e8c:	jmp    0x100131e2
10061e91:	lea    ecx,[ebp-0x2c]
10061e94:	jmp    0x100131e2
10061e99:	lea    ecx,[ebp-0x48]
10061e9c:	jmp    0x100131e2
10061ea1:	mov    edx,DWORD PTR [esp+0x8]
10061ea5:	lea    eax,[edx-0x74]
10061ea8:	mov    ecx,DWORD PTR [edx-0x78]
10061eab:	xor    ecx,eax
10061ead:	call   0x10043615
10061eb2:	add    eax,0x10
10061eb5:	mov    ecx,DWORD PTR [edx-0x4]
10061eb8:	xor    ecx,eax
10061eba:	call   0x10043615
10061ebf:	mov    eax,0x10079904
10061ec4:	jmp    0x1005959f
10061ec9:	mov    edx,DWORD PTR [esp+0x8]
10061ecd:	lea    eax,[edx+0xc]
10061ed0:	mov    ecx,DWORD PTR [edx-0x1c]
10061ed3:	xor    ecx,eax
10061ed5:	call   0x10043615
10061eda:	mov    eax,0x1007995c
10061edf:	jmp    0x1005959f
10061ee4:	mov    edx,DWORD PTR [esp+0x8]
10061ee8:	lea    eax,[edx+0xc]
10061eeb:	mov    ecx,DWORD PTR [edx-0x1c]
10061eee:	xor    ecx,eax
10061ef0:	call   0x10043615
10061ef5:	mov    eax,0x100799b4
10061efa:	jmp    0x1005959f
10061eff:	mov    eax,DWORD PTR [ebp-0x14]
10061f02:	and    eax,0x1
10061f05:	je     0x10061f17
10061f0b:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061f0f:	mov    esi,DWORD PTR [ebp+0x8]
10061f12:	jmp    0x100045ee
10061f17:	ret    
10061f18:	lea    ecx,[ebp-0x50]
10061f1b:	jmp    0x100131e2
10061f20:	lea    ecx,[ebp-0x34]
10061f23:	jmp    0x100131e2
10061f28:	mov    edx,DWORD PTR [esp+0x8]
10061f2c:	lea    eax,[edx+0xc]
10061f2f:	mov    ecx,DWORD PTR [edx-0x54]
10061f32:	xor    ecx,eax
10061f34:	call   0x10043615
10061f39:	mov    eax,0x100799f0
10061f3e:	jmp    0x1005959f
10061f43:	mov    eax,DWORD PTR [ebp+0x8]
10061f46:	add    eax,0x10
10061f49:	jmp    0x1002ba77
10061f4e:	mov    eax,DWORD PTR [ebp+0x8]
10061f51:	add    eax,0x20
10061f54:	jmp    0x1002ba77
10061f59:	mov    edx,DWORD PTR [esp+0x8]
10061f5d:	lea    eax,[edx+0xc]
10061f60:	mov    ecx,DWORD PTR [edx-0x10]
10061f63:	xor    ecx,eax
10061f65:	call   0x10043615
10061f6a:	mov    eax,0x10079a24
10061f6f:	jmp    0x1005959f
10061f74:	mov    eax,DWORD PTR [ebp-0x1fc]
10061f7a:	and    eax,0x1
10061f7d:	je     0x10061f95
10061f83:	and    DWORD PTR [ebp-0x1fc],0xfffffffe
10061f8a:	lea    ecx,[ebp-0x198]
10061f90:	jmp    0x100131e2
10061f95:	ret    
10061f96:	mov    eax,DWORD PTR [ebp-0x1fc]
10061f9c:	and    eax,0x2
10061f9f:	je     0x10061fb7
10061fa5:	and    DWORD PTR [ebp-0x1fc],0xfffffffd
10061fac:	lea    ecx,[ebp-0x160]
10061fb2:	jmp    0x100131e2
10061fb7:	ret    
10061fb8:	mov    eax,DWORD PTR [ebp-0x1fc]
10061fbe:	and    eax,0x4
10061fc1:	je     0x10061fd9
10061fc7:	and    DWORD PTR [ebp-0x1fc],0xfffffffb
10061fce:	lea    ecx,[ebp-0x17c]
10061fd4:	jmp    0x100131e2
10061fd9:	ret    
10061fda:	mov    eax,DWORD PTR [ebp-0x1fc]
10061fe0:	and    eax,0x8
10061fe3:	je     0x10061ffb
10061fe9:	and    DWORD PTR [ebp-0x1fc],0xfffffff7
10061ff0:	lea    ecx,[ebp-0x128]
10061ff6:	jmp    0x100131e2
10061ffb:	ret    
10061ffc:	lea    ecx,[ebp-0x1ec]
10062002:	jmp    0x100131e2
10062007:	lea    ecx,[ebp-0x1b4]
1006200d:	jmp    0x100131e2
10062012:	lea    ecx,[ebp-0x1d0]
10062018:	jmp    0x100131e2
1006201d:	lea    ecx,[ebp-0xd4]
10062023:	jmp    0x100131e2
10062028:	lea    ecx,[ebp-0x10c]
1006202e:	jmp    0x100131e2
10062033:	lea    ecx,[ebp-0x144]
10062039:	jmp    0x100131e2
1006203e:	lea    ecx,[ebp-0xf0]
10062044:	jmp    0x100131e2
10062049:	lea    ecx,[ebp-0xb8]
1006204f:	jmp    0x100131e2
10062054:	lea    esi,[ebp-0x9c]
1006205a:	jmp    0x1000bfa0
1006205f:	mov    edx,DWORD PTR [esp+0x8]
10062063:	lea    eax,[edx-0x1fc]
10062069:	mov    ecx,DWORD PTR [edx-0x200]
1006206f:	xor    ecx,eax
10062071:	call   0x10043615
10062076:	mov    eax,0x10079ab0
1006207b:	jmp    0x1005959f
10062080:	lea    ecx,[ebp-0x48]
10062083:	jmp    0x100131e2
10062088:	lea    ecx,[ebp-0x2c]
1006208b:	jmp    0x100131e2
10062090:	mov    edx,DWORD PTR [esp+0x8]
10062094:	lea    eax,[edx-0x44]
10062097:	mov    ecx,DWORD PTR [edx-0x48]
1006209a:	xor    ecx,eax
1006209c:	call   0x10043615
100620a1:	mov    eax,0x10079ae4
100620a6:	jmp    0x1005959f
100620ab:	mov    edx,DWORD PTR [esp+0x8]
100620af:	lea    eax,[edx+0xc]
100620b2:	mov    ecx,DWORD PTR [edx-0x1c]
100620b5:	xor    ecx,eax
100620b7:	call   0x10043615
100620bc:	mov    eax,0x10079b3c
100620c1:	jmp    0x1005959f
100620c6:	lea    esi,[ebp-0x2c]
100620c9:	jmp    0x10004b46
100620ce:	mov    edx,DWORD PTR [esp+0x8]
100620d2:	lea    eax,[edx+0xc]
100620d5:	mov    ecx,DWORD PTR [edx-0x44]
100620d8:	xor    ecx,eax
100620da:	call   0x10043615
100620df:	mov    ecx,DWORD PTR [edx-0x4]
100620e2:	xor    ecx,eax
100620e4:	call   0x10043615
100620e9:	mov    eax,0x10079b68
100620ee:	jmp    0x1005959f
100620f3:	lea    eax,[ebp-0x18]
100620f6:	jmp    0x10034be0
100620fb:	lea    ecx,[ebp-0x38]
100620fe:	jmp    0x100131e2
10062103:	lea    ecx,[ebp-0x54]
10062106:	jmp    0x100131e2
1006210b:	lea    edi,[ebp-0x1c]
1006210e:	jmp    0x100024fb
10062113:	mov    edx,DWORD PTR [esp+0x8]
10062117:	lea    eax,[edx+0xc]
1006211a:	mov    ecx,DWORD PTR [edx-0x58]
1006211d:	xor    ecx,eax
1006211f:	call   0x10043615
10062124:	mov    ecx,DWORD PTR [edx-0x8]
10062127:	xor    ecx,eax
10062129:	call   0x10043615
1006212e:	mov    eax,0x10079be0
10062133:	jmp    0x1005959f
10062138:	lea    eax,[ebp-0x54]
1006213b:	jmp    0x10034be0
10062140:	lea    ecx,[ebp-0x4c]
10062143:	jmp    0x100131e2
10062148:	lea    ecx,[ebp-0x30]
1006214b:	jmp    0x100131e2
10062150:	mov    edx,DWORD PTR [esp+0x8]
10062154:	lea    eax,[edx+0xc]
10062157:	mov    ecx,DWORD PTR [edx-0x58]
1006215a:	xor    ecx,eax
1006215c:	call   0x10043615
10062161:	mov    ecx,DWORD PTR [edx-0x8]
10062164:	xor    ecx,eax
10062166:	call   0x10043615
1006216b:	mov    eax,0x10079c50
10062170:	jmp    0x1005959f
10062175:	lea    eax,[ebp-0x14]
10062178:	jmp    0x1002b964
1006217d:	lea    eax,[ebp-0x2c]
10062180:	jmp    0x1002b964
10062185:	lea    eax,[ebp-0x24]
10062188:	jmp    0x1002b964
1006218d:	lea    eax,[ebp-0x28]
10062190:	jmp    0x1002b964
10062195:	lea    eax,[ebp-0x20]
10062198:	jmp    0x1002b964
1006219d:	mov    edx,DWORD PTR [esp+0x8]
100621a1:	lea    eax,[edx-0x2c]
100621a4:	mov    ecx,DWORD PTR [edx-0x30]
100621a7:	xor    ecx,eax
100621a9:	call   0x10043615
100621ae:	mov    eax,0x10079c9c
100621b3:	jmp    0x1005959f
100621b8:	lea    eax,[ebp-0x2c]
100621bb:	jmp    0x10034be0
100621c0:	lea    ecx,[ebp-0x9c]
100621c6:	jmp    0x100131e2
100621cb:	lea    ecx,[ebp-0x80]
100621ce:	jmp    0x100131e2
100621d3:	lea    esi,[ebp-0x9c]
100621d9:	jmp    0x1001a932
100621de:	lea    eax,[ebp-0x28]
100621e1:	jmp    0x1001b1bf
100621e6:	lea    esi,[ebp-0x1c]
100621e9:	jmp    0x1001b293
100621ee:	lea    ecx,[ebp-0xe0]
100621f4:	jmp    0x100131e2
100621f9:	mov    edx,DWORD PTR [esp+0x8]
100621fd:	lea    eax,[edx+0xc]
10062200:	mov    ecx,DWORD PTR [edx-0xe4]
10062206:	xor    ecx,eax
10062208:	call   0x10043615
1006220d:	mov    eax,0x10079d2c
10062212:	jmp    0x1005959f
10062217:	lea    eax,[ebp-0x38]
1006221a:	jmp    0x10001239
1006221f:	mov    edx,DWORD PTR [esp+0x8]
10062223:	lea    eax,[edx+0xc]
10062226:	mov    ecx,DWORD PTR [edx-0x48]
10062229:	xor    ecx,eax
1006222b:	call   0x10043615
10062230:	mov    eax,0x10079d60
10062235:	jmp    0x1005959f
1006223a:	lea    ecx,[ebp-0x7c]
1006223d:	jmp    0x100131e2
10062242:	lea    ecx,[ebp-0x3c]
10062245:	jmp    0x10001f20
1006224a:	mov    ecx,DWORD PTR [ebp-0x54]
1006224d:	jmp    0x10001f20
10062252:	lea    esi,[ebp-0xfc]
10062258:	jmp    0x1001a0f9
1006225d:	lea    ecx,[ebp-0xbc]
10062263:	jmp    0x100131e2
10062268:	lea    esi,[ebp-0xbc]
1006226e:	jmp    0x1001a0f9
10062273:	mov    edx,DWORD PTR [esp+0x8]
10062277:	lea    eax,[edx+0xc]
1006227a:	mov    ecx,DWORD PTR [edx-0x100]
10062280:	xor    ecx,eax
10062282:	call   0x10043615
10062287:	mov    ecx,DWORD PTR [edx-0x8]
1006228a:	xor    ecx,eax
1006228c:	call   0x10043615
10062291:	mov    eax,0x10079dec
10062296:	jmp    0x1005959f
1006229b:	lea    ecx,[ebp-0x4c]
1006229e:	jmp    0x100131e2
100622a3:	lea    ecx,[ebp-0x30]
100622a6:	jmp    0x100131e2
100622ab:	lea    ecx,[ebp-0x6c]
100622ae:	jmp    0x10001f20
100622b3:	mov    edx,DWORD PTR [esp+0x8]
100622b7:	lea    eax,[edx-0x64]
100622ba:	mov    ecx,DWORD PTR [edx-0x68]
100622bd:	xor    ecx,eax
100622bf:	call   0x10043615
100622c4:	add    eax,0x4
100622c7:	mov    ecx,DWORD PTR [edx-0x8]
100622ca:	xor    ecx,eax
100622cc:	call   0x10043615
100622d1:	mov    eax,0x10079e30
100622d6:	jmp    0x1005959f
100622db:	mov    eax,DWORD PTR [ebp+0x8]
100622de:	jmp    0x10001234
100622e3:	mov    edx,DWORD PTR [esp+0x8]
100622e7:	lea    eax,[edx+0xc]
100622ea:	mov    ecx,DWORD PTR [edx-0x10]
100622ed:	xor    ecx,eax
100622ef:	call   0x10043615
100622f4:	mov    eax,0x10079e5c
100622f9:	jmp    0x1005959f
100622fe:	lea    eax,[ebp-0x14]
10062301:	jmp    0x100020aa
10062306:	lea    eax,[ebp-0x18]
10062309:	jmp    0x10034be0
1006230e:	mov    edx,DWORD PTR [esp+0x8]
10062312:	lea    eax,[edx-0xc]
10062315:	mov    ecx,DWORD PTR [edx-0x10]
10062318:	xor    ecx,eax
1006231a:	call   0x10043615
1006231f:	mov    eax,0x10079e90
10062324:	jmp    0x1005959f
10062329:	mov    eax,DWORD PTR [ebp-0x10]
1006232c:	and    eax,0x1
1006232f:	je     0x10062341
10062335:	and    DWORD PTR [ebp-0x10],0xfffffffe
10062339:	mov    esi,DWORD PTR [ebp+0x8]
1006233c:	jmp    0x10004229
10062341:	ret    
10062342:	lea    ecx,[ebp-0x34]
10062345:	jmp    0x100131e2
1006234a:	lea    ecx,[ebp-0x34]
1006234d:	jmp    0x100131e2
10062352:	lea    ecx,[ebp-0x34]
10062355:	jmp    0x100131e2
1006235a:	lea    ecx,[ebp-0x34]
1006235d:	jmp    0x100131e2
10062362:	lea    ecx,[ebp-0x34]
10062365:	jmp    0x100131e2
1006236a:	lea    ecx,[ebp-0x34]
1006236d:	jmp    0x100131e2
10062372:	lea    ecx,[ebp-0x34]
10062375:	jmp    0x100131e2
1006237a:	mov    edx,DWORD PTR [esp+0x8]
1006237e:	lea    eax,[edx+0xc]
10062381:	mov    ecx,DWORD PTR [edx-0x38]
10062384:	xor    ecx,eax
10062386:	call   0x10043615
1006238b:	mov    eax,0x10079ef8
10062390:	jmp    0x1005959f
10062395:	lea    eax,[ebp-0x60]
10062398:	jmp    0x10014ce6
1006239d:	lea    esi,[ebp-0x6c]
100623a0:	jmp    0x10007914
100623a5:	mov    edx,DWORD PTR [esp+0x8]
100623a9:	lea    eax,[edx+0xc]
100623ac:	mov    ecx,DWORD PTR [edx-0x70]
100623af:	xor    ecx,eax
100623b1:	call   0x10043615
100623b6:	mov    ecx,DWORD PTR [edx-0x4]
100623b9:	xor    ecx,eax
100623bb:	call   0x10043615
100623c0:	mov    eax,0x10079f2c
100623c5:	jmp    0x1005959f
100623ca:	lea    ecx,[ebp+0x8]
100623cd:	jmp    0x100131e2
100623d2:	mov    edx,DWORD PTR [esp+0x8]
100623d6:	lea    eax,[edx+0xc]
100623d9:	mov    ecx,DWORD PTR [edx-0x44]
100623dc:	xor    ecx,eax
100623de:	call   0x10043615
100623e3:	mov    eax,0x10079f58
100623e8:	jmp    0x1005959f
100623ed:	lea    eax,[ebp-0x28]
100623f0:	jmp    0x10001239
100623f5:	mov    edx,DWORD PTR [esp+0x8]
100623f9:	lea    eax,[edx-0x4c]
100623fc:	mov    ecx,DWORD PTR [edx-0x50]
100623ff:	xor    ecx,eax
10062401:	call   0x10043615
10062406:	mov    eax,0x10079f8c
1006240b:	jmp    0x1005959f
10062410:	lea    esi,[ebp-0xcc]
10062416:	jmp    0x100135dd
1006241b:	mov    esi,DWORD PTR [ebp-0xe0]
10062421:	jmp    0x100135dd
10062426:	lea    edi,[ebp-0x294]
1006242c:	jmp    0x10013664
10062431:	lea    ecx,[ebp-0x1c4]
10062437:	jmp    0x100131e2
1006243c:	lea    edi,[ebp-0x1c4]
10062442:	jmp    0x10013664
10062447:	mov    edx,DWORD PTR [esp+0x8]
1006244b:	lea    eax,[edx+0xc]
1006244e:	mov    ecx,DWORD PTR [edx-0x298]
10062454:	xor    ecx,eax
10062456:	call   0x10043615
1006245b:	mov    ecx,DWORD PTR [edx-0x8]
1006245e:	xor    ecx,eax
10062460:	call   0x10043615
10062465:	mov    eax,0x1007a00c
1006246a:	jmp    0x1005959f
1006246f:	jmp    0x100135d8
10062474:	mov    edx,DWORD PTR [esp+0x8]
10062478:	lea    eax,[edx+0xc]
1006247b:	mov    ecx,DWORD PTR [edx-0x10]
1006247e:	xor    ecx,eax
10062480:	call   0x10043615
10062485:	mov    eax,0x1007a038
1006248a:	jmp    0x1005959f
1006248f:	lea    esi,[ebp-0x1c]
10062492:	jmp    0x100045ee
10062497:	mov    edx,DWORD PTR [esp+0x8]
1006249b:	lea    eax,[edx+0xc]
1006249e:	mov    ecx,DWORD PTR [edx-0x20]
100624a1:	xor    ecx,eax
100624a3:	call   0x10043615
100624a8:	mov    eax,0x1007a064
100624ad:	jmp    0x1005959f
100624b2:	lea    ecx,[ebp-0x2c]
100624b5:	jmp    0x100131e2
100624ba:	lea    ecx,[ebp-0x48]
100624bd:	jmp    0x100131e2
100624c2:	lea    eax,[ebp+0x10]
100624c5:	jmp    0x100020aa
100624ca:	mov    edx,DWORD PTR [esp+0x8]
100624ce:	lea    eax,[edx+0xc]
100624d1:	mov    ecx,DWORD PTR [edx-0x4c]
100624d4:	xor    ecx,eax
100624d6:	call   0x10043615
100624db:	mov    eax,0x1007a0a0
100624e0:	jmp    0x1005959f
100624e5:	lea    ecx,[ebp-0x28]
100624e8:	jmp    0x100131e2
100624ed:	lea    ecx,[ebp-0x44]
100624f0:	jmp    0x100131e2
100624f5:	mov    edx,DWORD PTR [esp+0x8]
100624f9:	lea    eax,[edx+0xc]
100624fc:	mov    ecx,DWORD PTR [edx-0x4c]
100624ff:	xor    ecx,eax
10062501:	call   0x10043615
10062506:	mov    eax,0x1007a0d4
1006250b:	jmp    0x1005959f
10062510:	lea    ecx,[ebp-0x2c]
10062513:	jmp    0x100131e2
10062518:	mov    edx,DWORD PTR [esp+0x8]
1006251c:	lea    eax,[edx+0xc]
1006251f:	mov    ecx,DWORD PTR [edx-0x44]
10062522:	xor    ecx,eax
10062524:	call   0x10043615
10062529:	mov    ecx,DWORD PTR [edx-0x4]
1006252c:	xor    ecx,eax
1006252e:	call   0x10043615
10062533:	mov    eax,0x1007a100
10062538:	jmp    0x1005959f
1006253d:	mov    edx,DWORD PTR [esp+0x8]
10062541:	lea    eax,[edx+0xc]
10062544:	mov    ecx,DWORD PTR [edx-0x18]
10062547:	xor    ecx,eax
10062549:	call   0x10043615
1006254e:	mov    eax,0x1007a158
10062553:	jmp    0x1005959f
10062558:	lea    ecx,[ebp-0x4c]
1006255b:	jmp    0x100131e2
10062560:	lea    ecx,[ebp-0x2c]
10062563:	jmp    0x100131e2
10062568:	mov    edx,DWORD PTR [esp+0x8]
1006256c:	lea    eax,[edx+0xc]
1006256f:	mov    ecx,DWORD PTR [edx-0x50]
10062572:	xor    ecx,eax
10062574:	call   0x10043615
10062579:	mov    ecx,DWORD PTR [edx-0x4]
1006257c:	xor    ecx,eax
1006257e:	call   0x10043615
10062583:	mov    eax,0x1007a18c
10062588:	jmp    0x1005959f
1006258d:	push   DWORD PTR [ebp-0x14]
10062590:	call   0x10042fe2
10062595:	pop    ecx
10062596:	ret    
10062597:	mov    edx,DWORD PTR [esp+0x8]
1006259b:	lea    eax,[edx+0xc]
1006259e:	mov    ecx,DWORD PTR [edx-0x18]
100625a1:	xor    ecx,eax
100625a3:	call   0x10043615
100625a8:	mov    ecx,DWORD PTR [edx+0x1000c]
100625ae:	xor    ecx,eax
100625b0:	call   0x10043615
100625b5:	mov    eax,0x1007a1b8
100625ba:	jmp    0x1005959f
100625bf:	lea    ecx,[ebp-0x2c]
100625c2:	jmp    0x100131e2
100625c7:	mov    edx,DWORD PTR [esp+0x8]
100625cb:	lea    eax,[edx+0xc]
100625ce:	mov    ecx,DWORD PTR [edx-0x38]
100625d1:	xor    ecx,eax
100625d3:	call   0x10043615
100625d8:	mov    ecx,DWORD PTR [edx-0x4]
100625db:	xor    ecx,eax
100625dd:	call   0x10043615
100625e2:	mov    eax,0x1007a1e4
100625e7:	jmp    0x1005959f
100625ec:	mov    eax,DWORD PTR [ebp-0x14]
100625ef:	and    eax,0x1
100625f2:	je     0x10062604
100625f8:	and    DWORD PTR [ebp-0x14],0xfffffffe
100625fc:	lea    ecx,[ebp-0x30]
100625ff:	jmp    0x100131e2
10062604:	ret    
10062605:	lea    esi,[ebp-0x14]
10062608:	jmp    0x1000ac45
1006260d:	lea    ecx,[ebp-0x4c]
10062610:	jmp    0x100131e2
10062615:	mov    edx,DWORD PTR [esp+0x8]
10062619:	lea    eax,[edx+0xc]
1006261c:	mov    ecx,DWORD PTR [edx-0x50]
1006261f:	xor    ecx,eax
10062621:	call   0x10043615
10062626:	mov    eax,0x1007a220
1006262b:	jmp    0x1005959f
10062630:	lea    esi,[ebp-0x10]
10062633:	jmp    0x1000ac45
10062638:	mov    edx,DWORD PTR [esp+0x8]
1006263c:	lea    eax,[edx+0xc]
1006263f:	mov    ecx,DWORD PTR [edx-0x14]
10062642:	xor    ecx,eax
10062644:	call   0x10043615
10062649:	mov    eax,0x1007a24c
1006264e:	jmp    0x1005959f
10062653:	lea    ecx,[ebp-0x80]
10062656:	jmp    0x100131e2
1006265b:	lea    ecx,[ebp-0x80]
1006265e:	jmp    0x100131e2
10062663:	lea    ecx,[ebp-0x48]
10062666:	jmp    0x100131e2
1006266b:	lea    ecx,[ebp-0x64]
1006266e:	jmp    0x100131e2
10062673:	lea    ecx,[ebp-0x2c]
10062676:	jmp    0x100131e2
1006267b:	mov    edx,DWORD PTR [esp+0x8]
1006267f:	lea    eax,[edx-0x84]
10062685:	mov    ecx,DWORD PTR [edx-0x88]
1006268b:	xor    ecx,eax
1006268d:	call   0x10043615
10062692:	mov    eax,0x1007a298
10062697:	jmp    0x1005959f
1006269c:	lea    esi,[ebp+0x24]
1006269f:	jmp    0x10004229
100626a4:	lea    ecx,[ebp+0x8]
100626a7:	jmp    0x100131e2
100626ac:	mov    ecx,DWORD PTR [ebp-0x10]
100626af:	jmp    0x100131e2
100626b4:	mov    edx,DWORD PTR [esp+0x8]
100626b8:	lea    eax,[edx+0xc]
100626bb:	mov    ecx,DWORD PTR [edx-0x18]
100626be:	xor    ecx,eax
100626c0:	call   0x10043615
100626c5:	mov    eax,0x1007a2d4
100626ca:	jmp    0x1005959f
100626cf:	jmp    0x10002068
100626d4:	mov    edx,DWORD PTR [esp+0x8]
100626d8:	lea    eax,[edx+0xc]
100626db:	mov    ecx,DWORD PTR [edx-0x1c]
100626de:	xor    ecx,eax
100626e0:	call   0x10043615
100626e5:	mov    eax,0x1007a334
100626ea:	jmp    0x1005959f
100626ef:	lea    eax,[ebp-0x14]
100626f2:	jmp    0x1000a18c
100626f7:	mov    edx,DWORD PTR [esp+0x8]
100626fb:	lea    eax,[edx+0xc]
100626fe:	mov    ecx,DWORD PTR [edx-0x1c]
10062701:	xor    ecx,eax
10062703:	call   0x10043615
10062708:	mov    eax,0x1007a360
1006270d:	jmp    0x1005959f
10062712:	mov    eax,DWORD PTR [ebp-0xcc]
10062718:	and    eax,0x1
1006271b:	je     0x10062733
10062721:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10062728:	lea    ecx,[ebp-0xa0]
1006272e:	jmp    0x100131e2
10062733:	ret    
10062734:	mov    eax,DWORD PTR [ebp-0xcc]
1006273a:	and    eax,0x2
1006273d:	je     0x10062755
10062743:	and    DWORD PTR [ebp-0xcc],0xfffffffd
1006274a:	lea    ecx,[ebp-0xbc]
10062750:	jmp    0x100131e2
10062755:	ret    
10062756:	lea    ecx,[ebp-0x30]
10062759:	jmp    0x100131e2
1006275e:	lea    ecx,[ebp-0x4c]
10062761:	jmp    0x100131e2
10062766:	lea    ecx,[ebp-0xbc]
1006276c:	jmp    0x100131e2
10062771:	lea    ecx,[ebp-0x84]
10062777:	jmp    0x100131e2
1006277c:	lea    ecx,[ebp-0xa0]
10062782:	jmp    0x100131e2
10062787:	lea    ecx,[ebp-0x68]
1006278a:	jmp    0x100131e2
1006278f:	lea    ecx,[ebp-0x84]
10062795:	jmp    0x100131e2
1006279a:	mov    edx,DWORD PTR [esp+0x8]
1006279e:	lea    eax,[edx-0xcc]
100627a4:	mov    ecx,DWORD PTR [edx-0xd0]
100627aa:	xor    ecx,eax
100627ac:	call   0x10043615
100627b1:	add    eax,0xc
100627b4:	mov    ecx,DWORD PTR [edx-0x8]
100627b7:	xor    ecx,eax
100627b9:	call   0x10043615
100627be:	mov    eax,0x1007a3e0
100627c3:	jmp    0x1005959f
100627c8:	lea    ecx,[ebp-0x48]
100627cb:	jmp    0x100131e2
100627d0:	lea    ecx,[ebp-0x2c]
100627d3:	jmp    0x100131e2
100627d8:	mov    edx,DWORD PTR [esp+0x8]
100627dc:	lea    eax,[edx+0xc]
100627df:	mov    ecx,DWORD PTR [edx-0x4c]
100627e2:	xor    ecx,eax
100627e4:	call   0x10043615
100627e9:	mov    eax,0x1007a414
100627ee:	jmp    0x1005959f
100627f3:	lea    ecx,[ebp-0x30]
100627f6:	jmp    0x100131e2
100627fb:	mov    edx,DWORD PTR [esp+0x8]
100627ff:	lea    eax,[edx-0x44]
10062802:	mov    ecx,DWORD PTR [edx-0x48]
10062805:	xor    ecx,eax
10062807:	call   0x10043615
1006280c:	add    eax,0xc
1006280f:	mov    ecx,DWORD PTR [edx-0x8]
10062812:	xor    ecx,eax
10062814:	call   0x10043615
10062819:	mov    eax,0x1007a440
1006281e:	jmp    0x1005959f
10062823:	lea    ecx,[ebp-0x50]
10062826:	jmp    0x100131e2
1006282b:	lea    eax,[ebp-0xd8]
10062831:	jmp    0x100020aa
10062836:	lea    ecx,[ebp-0x34]
10062839:	jmp    0x100131e2
1006283e:	lea    esi,[ebp-0xb8]
10062844:	jmp    0x10004229
10062849:	mov    esi,DWORD PTR [ebp-0xc8]
1006284f:	jmp    0x10004229
10062854:	lea    edi,[ebp-0x7c]
10062857:	jmp    0x10008282
1006285c:	lea    edi,[ebp-0xa8]
10062862:	jmp    0x10008282
10062867:	mov    edx,DWORD PTR [esp+0x8]
1006286b:	lea    eax,[edx-0xdc]
10062871:	mov    ecx,DWORD PTR [edx-0xe0]
10062877:	xor    ecx,eax
10062879:	call   0x10043615
1006287e:	add    eax,0xc
10062881:	mov    ecx,DWORD PTR [edx-0x8]
10062884:	xor    ecx,eax
10062886:	call   0x10043615
1006288b:	mov    eax,0x1007a49c
10062890:	jmp    0x1005959f
10062895:	lea    eax,[ebp+0xc]
10062898:	jmp    0x100020aa
1006289d:	lea    ecx,[ebp-0x30]
100628a0:	jmp    0x100131e2
100628a5:	mov    esi,DWORD PTR [ebp-0x50]
100628a8:	jmp    0x10004229
100628ad:	lea    edi,[ebp-0xa8]
100628b3:	jmp    0x10008282
100628b8:	lea    edi,[ebp-0x7c]
100628bb:	jmp    0x10008282
100628c0:	mov    edx,DWORD PTR [esp+0x8]
100628c4:	lea    eax,[edx+0xc]
100628c7:	mov    ecx,DWORD PTR [edx-0xac]
100628cd:	xor    ecx,eax
100628cf:	call   0x10043615
100628d4:	mov    ecx,DWORD PTR [edx-0x4]
100628d7:	xor    ecx,eax
100628d9:	call   0x10043615
100628de:	mov    eax,0x1007a4e8
100628e3:	jmp    0x1005959f
100628e8:	lea    ecx,[ebp-0x30]
100628eb:	jmp    0x100131e2
100628f0:	mov    edx,DWORD PTR [esp+0x8]
100628f4:	lea    eax,[edx+0xc]
100628f7:	mov    ecx,DWORD PTR [edx-0x4c]
100628fa:	xor    ecx,eax
100628fc:	call   0x10043615
10062901:	mov    ecx,DWORD PTR [edx-0x4]
10062904:	xor    ecx,eax
10062906:	call   0x10043615
1006290b:	mov    eax,0x1007a514
10062910:	jmp    0x1005959f
10062915:	lea    eax,[ebp-0x14]
10062918:	jmp    0x100020aa
1006291d:	mov    edx,DWORD PTR [esp+0x8]
10062921:	lea    eax,[edx+0xc]
10062924:	mov    ecx,DWORD PTR [edx-0x2c]
10062927:	xor    ecx,eax
10062929:	call   0x10043615
1006292e:	mov    eax,0x1007a540
10062933:	jmp    0x1005959f
10062938:	lea    ecx,[ebp-0x68]
1006293b:	jmp    0x100070fb
10062940:	lea    ecx,[ebp-0x30]
10062943:	jmp    0x100074d6
10062948:	lea    ecx,[ebp-0x40]
1006294b:	jmp    0x100070fb
10062950:	lea    ecx,[ebp-0x2c]
10062953:	jmp    0x100131e2
10062958:	lea    ecx,[ebp-0x84]
1006295e:	jmp    0x100131e2
10062963:	lea    ecx,[ebp-0x58]
10062966:	jmp    0x100070fb
1006296b:	lea    ecx,[ebp-0x84]
10062971:	jmp    0x100131e2
10062976:	mov    edx,DWORD PTR [esp+0x8]
1006297a:	lea    eax,[edx+0xc]
1006297d:	mov    ecx,DWORD PTR [edx-0x88]
10062983:	xor    ecx,eax
10062985:	call   0x10043615
1006298a:	mov    ecx,DWORD PTR [edx-0x4]
1006298d:	xor    ecx,eax
1006298f:	call   0x10043615
10062994:	mov    eax,0x1007a59c
10062999:	jmp    0x1005959f
1006299e:	lea    eax,[ebp-0x10]
100629a1:	jmp    0x10002081
100629a6:	mov    edx,DWORD PTR [esp+0x8]
100629aa:	lea    eax,[edx+0xc]
100629ad:	mov    ecx,DWORD PTR [edx-0x14]
100629b0:	xor    ecx,eax
100629b2:	call   0x10043615
100629b7:	mov    eax,0x1007a5c8
100629bc:	jmp    0x1005959f
100629c1:	lea    eax,[ebp-0x1c]
100629c4:	jmp    0x10034be0
100629c9:	mov    edx,DWORD PTR [esp+0x8]
100629cd:	lea    eax,[edx-0x14]
100629d0:	mov    ecx,DWORD PTR [edx-0x18]
100629d3:	xor    ecx,eax
100629d5:	call   0x10043615
100629da:	mov    eax,0x1007a5f4
100629df:	jmp    0x1005959f
100629e4:	push   DWORD PTR [ebp-0x14]
100629e7:	call   0x10042fe2
100629ec:	pop    ecx
100629ed:	ret    
100629ee:	lea    eax,[ebp-0x14]
100629f1:	jmp    0x10004211
100629f6:	mov    edx,DWORD PTR [esp+0x8]
100629fa:	lea    eax,[edx+0xc]
100629fd:	mov    ecx,DWORD PTR [edx-0x18]
10062a00:	xor    ecx,eax
10062a02:	call   0x10043615
10062a07:	mov    eax,0x1007a628
10062a0c:	jmp    0x1005959f
10062a11:	mov    eax,DWORD PTR [ebp+0x8]
10062a14:	jmp    0x10002081
10062a19:	mov    edx,DWORD PTR [esp+0x8]
10062a1d:	lea    eax,[edx+0xc]
10062a20:	mov    ecx,DWORD PTR [edx-0x10]
10062a23:	xor    ecx,eax
10062a25:	call   0x10043615
10062a2a:	mov    eax,0x1007a654
10062a2f:	jmp    0x1005959f
10062a34:	int3   
10062a35:	int3   
10062a36:	int3   
10062a37:	int3   
10062a38:	int3   
10062a39:	int3   
10062a3a:	int3   
10062a3b:	int3   
10062a3c:	int3   
10062a3d:	int3   
10062a3e:	int3   
10062a3f:	int3   
10062a40:	lea    eax,[ebp-0x14]
10062a43:	jmp    0x100020aa
10062a48:	lea    eax,[ebp-0x10]
10062a4b:	jmp    0x100020aa
10062a50:	mov    edx,DWORD PTR [esp+0x8]
10062a54:	lea    eax,[edx-0x20]
10062a57:	mov    ecx,DWORD PTR [edx-0x24]
10062a5a:	xor    ecx,eax
10062a5c:	call   0x10043615
10062a61:	mov    eax,0x1007a688
10062a66:	jmp    0x1005959f
10062a6b:	int3   
10062a6c:	int3   
10062a6d:	int3   
10062a6e:	int3   
10062a6f:	int3   
10062a70:	lea    esi,[ebp-0x24]
10062a73:	jmp    0x1001496d
10062a78:	lea    eax,[ebp-0x38]
10062a7b:	jmp    0x10002081
10062a80:	lea    eax,[ebp-0x3c]
10062a83:	jmp    0x10002081
10062a88:	lea    eax,[ebp-0x3c]
10062a8b:	jmp    0x10002081
10062a90:	lea    eax,[ebp-0x28]
10062a93:	jmp    0x10002081
10062a98:	lea    esi,[ebp-0x20]
10062a9b:	jmp    0x1001496d
10062aa0:	lea    eax,[ebp-0x3c]
10062aa3:	jmp    0x10002081
10062aa8:	mov    edx,DWORD PTR [esp+0x8]
10062aac:	lea    eax,[edx-0x3c]
10062aaf:	mov    ecx,DWORD PTR [edx-0x40]
10062ab2:	xor    ecx,eax
10062ab4:	call   0x10043615
10062ab9:	mov    eax,0x1007a6f0
10062abe:	jmp    0x1005959f
10062ac3:	int3   
10062ac4:	int3   
10062ac5:	int3   
10062ac6:	int3   
10062ac7:	int3   
10062ac8:	int3   
10062ac9:	int3   
10062aca:	int3   
10062acb:	int3   
10062acc:	int3   
10062acd:	int3   
10062ace:	int3   
10062acf:	int3   
10062ad0:	lea    eax,[ebp-0x14]
10062ad3:	jmp    0x100340d0
10062ad8:	lea    eax,[ebp-0x24]
10062adb:	jmp    0x10034be0
10062ae0:	lea    eax,[ebp-0x1c]
10062ae3:	jmp    0x100340d0
10062ae8:	mov    edx,DWORD PTR [esp+0x8]
10062aec:	lea    eax,[edx+0xc]
10062aef:	mov    ecx,DWORD PTR [edx-0x2c]
10062af2:	xor    ecx,eax
10062af4:	call   0x10043615
10062af9:	mov    eax,0x1007a760
10062afe:	jmp    0x1005959f
10062b03:	int3   
10062b04:	int3   
10062b05:	int3   
10062b06:	int3   
10062b07:	int3   
10062b08:	int3   
10062b09:	int3   
10062b0a:	int3   
10062b0b:	int3   
10062b0c:	int3   
10062b0d:	int3   
10062b0e:	int3   
10062b0f:	int3   
10062b10:	mov    edx,DWORD PTR [esp+0x8]
10062b14:	lea    eax,[edx+0xc]
10062b17:	mov    ecx,DWORD PTR [edx-0x20]
10062b1a:	xor    ecx,eax
10062b1c:	call   0x10043615
10062b21:	mov    eax,0x1007a7b8
10062b26:	jmp    0x1005959f
10062b2b:	int3   
10062b2c:	int3   
10062b2d:	int3   
10062b2e:	int3   
10062b2f:	int3   
10062b30:	mov    eax,DWORD PTR [ebp-0x1c]
10062b33:	push   eax
10062b34:	call   0x10042fe2
10062b39:	pop    ecx
10062b3a:	ret    
10062b3b:	lea    edi,[ebp-0x24]
10062b3e:	jmp    0x100024fb
10062b43:	mov    eax,DWORD PTR [ebp-0x1c]
10062b46:	push   eax
10062b47:	call   0x10042fe2
10062b4c:	pop    ecx
10062b4d:	ret    
10062b4e:	lea    edi,[ebp-0x1c]
10062b51:	jmp    0x100024fb
10062b56:	lea    edi,[ebp-0x14]
10062b59:	jmp    0x100024fb
10062b5e:	mov    edx,DWORD PTR [esp+0x8]
10062b62:	lea    eax,[edx+0xc]
10062b65:	mov    ecx,DWORD PTR [edx-0x2c]
10062b68:	xor    ecx,eax
10062b6a:	call   0x10043615
10062b6f:	mov    ecx,DWORD PTR [edx-0x4]
10062b72:	xor    ecx,eax
10062b74:	call   0x10043615
10062b79:	mov    eax,0x1007a814
10062b7e:	jmp    0x1005959f
10062b83:	int3   
10062b84:	int3   
10062b85:	int3   
10062b86:	int3   
10062b87:	int3   
10062b88:	int3   
10062b89:	int3   
10062b8a:	int3   
10062b8b:	int3   
10062b8c:	int3   
10062b8d:	int3   
10062b8e:	int3   
10062b8f:	int3   
10062b90:	lea    ecx,[ebp-0x40]
10062b93:	jmp    0x10037610
10062b98:	mov    edx,DWORD PTR [esp+0x8]
10062b9c:	lea    eax,[edx-0x44]
10062b9f:	mov    ecx,DWORD PTR [edx-0x48]
10062ba2:	xor    ecx,eax
10062ba4:	call   0x10043615
10062ba9:	mov    eax,0x1007a840
10062bae:	jmp    0x1005959f
10062bb3:	int3   
10062bb4:	int3   
10062bb5:	int3   
10062bb6:	int3   
10062bb7:	int3   
10062bb8:	int3   
10062bb9:	int3   
10062bba:	int3   
10062bbb:	int3   
10062bbc:	int3   
10062bbd:	int3   
10062bbe:	int3   
10062bbf:	int3   
10062bc0:	lea    ecx,[ebp-0x14]
10062bc3:	jmp    0x10037610
10062bc8:	mov    eax,DWORD PTR [ebp-0x1c]
10062bcb:	and    eax,0x1
10062bce:	je     0x10062be0
10062bd4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10062bd8:	mov    ecx,DWORD PTR [ebp-0x18]
10062bdb:	jmp    0x100131e2
10062be0:	ret    
10062be1:	mov    edx,DWORD PTR [esp+0x8]
10062be5:	lea    eax,[edx-0x1c]
10062be8:	mov    ecx,DWORD PTR [edx-0x20]
10062beb:	xor    ecx,eax
10062bed:	call   0x10043615
10062bf2:	mov    eax,0x1007a874
10062bf7:	jmp    0x1005959f
10062bfc:	int3   
10062bfd:	int3   
10062bfe:	int3   
10062bff:	int3   
10062c00:	lea    eax,[ebp-0x1c]
10062c03:	jmp    0x100020aa
10062c08:	lea    ecx,[ebp-0x44]
10062c0b:	jmp    0x100131e2
10062c10:	mov    edx,DWORD PTR [esp+0x8]
10062c14:	lea    eax,[edx+0xc]
10062c17:	mov    ecx,DWORD PTR [edx-0x48]
10062c1a:	xor    ecx,eax
10062c1c:	call   0x10043615
10062c21:	mov    eax,0x1007a8dc
10062c26:	jmp    0x1005959f
10062c2b:	int3   
10062c2c:	int3   
10062c2d:	int3   
10062c2e:	int3   
10062c2f:	int3   
10062c30:	lea    esi,[ebp-0x83c]
10062c36:	jmp    0x1001496d
10062c3b:	lea    eax,[ebp-0x844]
10062c41:	jmp    0x10002081
10062c46:	lea    eax,[ebp-0x844]
10062c4c:	jmp    0x10002081
10062c51:	mov    edx,DWORD PTR [esp+0x8]
10062c55:	lea    eax,[edx-0x844]
10062c5b:	mov    ecx,DWORD PTR [edx-0x848]
10062c61:	xor    ecx,eax
10062c63:	call   0x10043615
10062c68:	add    eax,0xc
10062c6b:	mov    ecx,DWORD PTR [edx-0x8]
10062c6e:	xor    ecx,eax
10062c70:	call   0x10043615
10062c75:	mov    eax,0x1007a918
10062c7a:	jmp    0x1005959f
10062c7f:	int3   
10062c80:	lea    ecx,[ebp-0x54]
10062c83:	jmp    0x100131e2
10062c88:	lea    ecx,[ebp-0x38]
10062c8b:	jmp    0x10043390
10062c90:	lea    eax,[ebp-0x58]
10062c93:	jmp    0x100020aa
10062c98:	mov    edx,DWORD PTR [esp+0x8]
10062c9c:	lea    eax,[edx-0x5c]
10062c9f:	mov    ecx,DWORD PTR [edx-0x60]
10062ca2:	xor    ecx,eax
10062ca4:	call   0x10043615
10062ca9:	mov    eax,0x1007a954
10062cae:	jmp    0x1005959f
10062cb3:	int3   
10062cb4:	int3   
10062cb5:	int3   
10062cb6:	int3   
10062cb7:	int3   
10062cb8:	int3   
10062cb9:	int3   
10062cba:	int3   
10062cbb:	int3   
10062cbc:	int3   
10062cbd:	int3   
10062cbe:	int3   
10062cbf:	int3   
10062cc0:	mov    eax,DWORD PTR [ebp-0x58]
10062cc3:	and    eax,0x1
10062cc6:	je     0x10062cd8
10062ccc:	and    DWORD PTR [ebp-0x58],0xfffffffe
10062cd0:	mov    eax,DWORD PTR [ebp+0x4]
10062cd3:	jmp    0x10002081
10062cd8:	ret    
10062cd9:	lea    ecx,[ebp-0x54]
10062cdc:	jmp    0x100131e2
10062ce1:	lea    ecx,[ebp-0x38]
10062ce4:	jmp    0x10043390
10062ce9:	mov    edx,DWORD PTR [esp+0x8]
10062ced:	lea    eax,[edx-0x60]
10062cf0:	mov    ecx,DWORD PTR [edx-0x64]
10062cf3:	xor    ecx,eax
10062cf5:	call   0x10043615
10062cfa:	mov    eax,0x1007a990
10062cff:	jmp    0x1005959f
10062d04:	int3   
10062d05:	int3   
10062d06:	int3   
10062d07:	int3   
10062d08:	int3   
10062d09:	int3   
10062d0a:	int3   
10062d0b:	int3   
10062d0c:	int3   
10062d0d:	int3   
10062d0e:	int3   
10062d0f:	int3   
10062d10:	mov    eax,DWORD PTR [ebp-0x14]
10062d13:	and    eax,0x1
10062d16:	je     0x10062d28
10062d1c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10062d20:	mov    ecx,DWORD PTR [ebp-0x10]
10062d23:	jmp    0x100131e2
10062d28:	ret    
10062d29:	lea    ecx,[ebp-0x30]
10062d2c:	jmp    0x100131e2
10062d31:	lea    ecx,[ebp-0x30]
10062d34:	jmp    0x100131e2
10062d39:	lea    ecx,[ebp-0x30]
10062d3c:	jmp    0x100131e2
10062d41:	lea    ecx,[ebp-0x30]
10062d44:	jmp    0x100131e2
10062d49:	lea    ecx,[ebp-0x30]
10062d4c:	jmp    0x100131e2
10062d51:	lea    ecx,[ebp-0x30]
10062d54:	jmp    0x100131e2
10062d59:	mov    edx,DWORD PTR [esp+0x8]
10062d5d:	lea    eax,[edx-0x34]
10062d60:	mov    ecx,DWORD PTR [edx-0x38]
10062d63:	xor    ecx,eax
10062d65:	call   0x10043615
10062d6a:	mov    eax,0x1007a9ec
10062d6f:	jmp    0x1005959f
10062d74:	lea    ecx,[ebp-0x64]
10062d77:	jmp    0x100131e2
10062d7c:	lea    ecx,[ebp-0x2c]
10062d7f:	jmp    0x100131e2
10062d84:	lea    esi,[ebp-0x90]
10062d8a:	jmp    0x100045ee
10062d8f:	lea    ecx,[ebp-0x80]
10062d92:	jmp    0x100131e2
10062d97:	lea    ecx,[ebp-0x48]
10062d9a:	jmp    0x100131e2
10062d9f:	lea    ecx,[ebp-0x80]
10062da2:	jmp    0x100131e2
10062da7:	mov    edx,DWORD PTR [esp+0x8]
10062dab:	lea    eax,[edx-0x94]
10062db1:	mov    ecx,DWORD PTR [edx-0x98]
10062db7:	xor    ecx,eax
10062db9:	call   0x10043615
10062dbe:	mov    eax,0x1007aa50
10062dc3:	jmp    0x1005959f
10062dc8:	lea    ecx,[ebp-0x64]
10062dcb:	jmp    0x100131e2
10062dd0:	lea    ecx,[ebp-0x2c]
10062dd3:	jmp    0x100131e2
10062dd8:	lea    ecx,[ebp-0x48]
10062ddb:	jmp    0x100131e2
10062de0:	mov    edx,DWORD PTR [esp+0x8]
10062de4:	lea    eax,[edx-0x64]
10062de7:	mov    ecx,DWORD PTR [edx-0x68]
10062dea:	xor    ecx,eax
10062dec:	call   0x10043615
10062df1:	mov    eax,0x1007aa8c
10062df6:	jmp    0x1005959f
10062dfb:	lea    eax,[ebp-0x24]
10062dfe:	jmp    0x10039fe0
10062e03:	push   DWORD PTR [ebp-0x1c]
10062e06:	call   0x10042fe2
10062e0b:	pop    ecx
10062e0c:	ret    
10062e0d:	mov    eax,DWORD PTR [ebp-0x10]
10062e10:	and    eax,0x1
10062e13:	je     0x10062e25
10062e19:	and    DWORD PTR [ebp-0x10],0xfffffffe
10062e1d:	lea    ecx,[ebp-0x44]
10062e20:	jmp    0x100131e2
10062e25:	ret    
10062e26:	mov    eax,DWORD PTR [ebp-0x10]
10062e29:	and    eax,0x2
10062e2c:	je     0x10062e3e
10062e32:	and    DWORD PTR [ebp-0x10],0xfffffffd
10062e36:	lea    ecx,[ebp-0x7c]
10062e39:	jmp    0x100131e2
10062e3e:	ret    
10062e3f:	mov    eax,DWORD PTR [ebp-0x10]
10062e42:	and    eax,0x4
10062e45:	je     0x10062e57
10062e4b:	and    DWORD PTR [ebp-0x10],0xfffffffb
10062e4f:	lea    ecx,[ebp-0x60]
10062e52:	jmp    0x100131e2
10062e57:	ret    
10062e58:	mov    eax,DWORD PTR [ebp-0x10]
10062e5b:	and    eax,0x8
10062e5e:	je     0x10062e73
10062e64:	and    DWORD PTR [ebp-0x10],0xfffffff7
10062e68:	lea    ecx,[ebp-0x98]
10062e6e:	jmp    0x100131e2
10062e73:	ret    
10062e74:	lea    ecx,[ebp-0x44]
10062e77:	jmp    0x100131e2
10062e7c:	lea    ecx,[ebp-0x98]
10062e82:	jmp    0x100131e2
10062e87:	lea    ecx,[ebp-0x60]
10062e8a:	jmp    0x100131e2
10062e8f:	lea    ecx,[ebp-0x7c]
10062e92:	jmp    0x100131e2
10062e97:	mov    edx,DWORD PTR [esp+0x8]
10062e9b:	lea    eax,[edx+0xc]
10062e9e:	mov    ecx,DWORD PTR [edx-0xb8]
10062ea4:	xor    ecx,eax
10062ea6:	call   0x10043615
10062eab:	mov    eax,0x1007ab20
10062eb0:	jmp    0x1005959f
10062eb5:	lea    ecx,[ebp-0xbc]
10062ebb:	jmp    0x100131e2
10062ec0:	lea    eax,[ebp-0xdc]
10062ec6:	jmp    0x1002b964
10062ecb:	lea    eax,[ebp-0xe0]
10062ed1:	jmp    0x1002b964
10062ed6:	lea    ecx,[ebp-0xbc]
10062edc:	jmp    0x100131e2
10062ee1:	lea    ecx,[ebp-0xbc]
10062ee7:	jmp    0x100131e2
10062eec:	lea    ecx,[ebp-0x30]
10062eef:	jmp    0x100131e2
10062ef4:	lea    eax,[ebp-0xa0]
10062efa:	jmp    0x100020aa
10062eff:	lea    ecx,[ebp-0xbc]
10062f05:	jmp    0x100131e2
10062f0a:	lea    ecx,[ebp-0xbc]
10062f10:	jmp    0x100131e2
10062f15:	lea    ecx,[ebp-0xbc]
10062f1b:	jmp    0x100131e2
10062f20:	lea    ecx,[ebp-0xbc]
10062f26:	jmp    0x100131e2
10062f2b:	lea    edi,[ebp-0xe4]
10062f31:	jmp    0x100024fb
10062f36:	lea    ecx,[ebp-0x74]
10062f39:	jmp    0x100131e2
10062f3e:	mov    edx,DWORD PTR [esp+0x8]
10062f42:	lea    eax,[edx-0xe4]
10062f48:	mov    ecx,DWORD PTR [edx-0xe8]
10062f4e:	xor    ecx,eax
10062f50:	call   0x10043615
10062f55:	add    eax,0xc
10062f58:	mov    ecx,DWORD PTR [edx-0x8]
10062f5b:	xor    ecx,eax
10062f5d:	call   0x10043615
10062f62:	mov    eax,0x1007abb0
10062f67:	jmp    0x1005959f
10062f6c:	lea    ecx,[ebp-0x28]
10062f6f:	jmp    0x1001b6e2
10062f74:	lea    ecx,[ebp-0x38]
10062f77:	jmp    0x1001b6e2
10062f7c:	mov    edx,DWORD PTR [esp+0x8]
10062f80:	lea    eax,[edx+0xc]
10062f83:	mov    ecx,DWORD PTR [edx-0x3c]
10062f86:	xor    ecx,eax
10062f88:	call   0x10043615
10062f8d:	mov    eax,0x1007ac18
10062f92:	jmp    0x1005959f
10062f97:	lea    eax,[ebp-0x18]
10062f9a:	jmp    0x1002b964
10062f9f:	lea    ecx,[ebp-0x60]
10062fa2:	jmp    0x1001b6e2
10062fa7:	lea    ecx,[ebp-0x50]
10062faa:	jmp    0x1001b6e2
10062faf:	lea    ecx,[ebp-0x70]
10062fb2:	jmp    0x1001b6e2
10062fb7:	lea    edi,[ebp+0x10]
10062fba:	jmp    0x100024fb
10062fbf:	lea    ecx,[ebp-0x80]
10062fc2:	jmp    0x1001b6e2
10062fc7:	lea    ecx,[ebp-0x40]
10062fca:	jmp    0x1001b6e2
10062fcf:	lea    ecx,[ebp-0x30]
10062fd2:	jmp    0x1001b6e2
10062fd7:	lea    edi,[ebp+0x10]
10062fda:	jmp    0x100024fb
10062fdf:	mov    edx,DWORD PTR [esp+0x8]
10062fe3:	lea    eax,[edx+0xc]
10062fe6:	mov    ecx,DWORD PTR [edx-0xb4]
10062fec:	xor    ecx,eax
10062fee:	call   0x10043615
10062ff3:	mov    eax,0x1007acf8
10062ff8:	jmp    0x1005959f
10062ffd:	lea    eax,[ebp-0x18]
10063000:	jmp    0x1002b964
10063005:	lea    eax,[ebp-0x28]
10063008:	jmp    0x1000428d
1006300d:	lea    esi,[ebp-0x38]
10063010:	jmp    0x10023150
10063015:	mov    edx,DWORD PTR [esp+0x8]
10063019:	lea    eax,[edx+0xc]
1006301c:	mov    ecx,DWORD PTR [edx-0x68]
1006301f:	xor    ecx,eax
10063021:	call   0x10043615
10063026:	mov    eax,0x1007ad68
1006302b:	jmp    0x1005959f
10063030:	lea    eax,[ebp-0x34]
10063033:	jmp    0x1000428d
10063038:	lea    ecx,[ebp+0x70]
1006303b:	jmp    0x100131e2
10063040:	lea    ecx,[ebp+0x1c]
10063043:	jmp    0x100131e2
10063048:	lea    ecx,[ebp+0x0]
1006304b:	jmp    0x100131e2
10063050:	lea    ecx,[ebp+0x38]
10063053:	jmp    0x100131e2
10063058:	lea    eax,[ebp-0x20]
1006305b:	jmp    0x10002081
10063060:	lea    ecx,[ebp+0x54]
10063063:	jmp    0x100131e2
10063068:	lea    esi,[ebp-0x114]
1006306e:	jmp    0x10003432
10063073:	lea    ecx,[ebp-0x50]
10063076:	jmp    0x100131e2
1006307b:	lea    ecx,[ebp-0x6c]
1006307e:	jmp    0x100131e2
10063083:	mov    edx,DWORD PTR [esp+0x8]
10063087:	lea    eax,[edx+0xc]
1006308a:	mov    ecx,DWORD PTR [edx-0x118]
10063090:	xor    ecx,eax
10063092:	call   0x10043615
10063097:	mov    ecx,DWORD PTR [edx+0x98]
1006309d:	xor    ecx,eax
1006309f:	call   0x10043615
100630a4:	mov    eax,0x1007ae2c
100630a9:	jmp    0x1005959f
100630ae:	mov    edx,DWORD PTR [esp+0x8]
100630b2:	lea    eax,[edx+0xc]
100630b5:	mov    ecx,DWORD PTR [edx-0x20]
100630b8:	xor    ecx,eax
100630ba:	call   0x10043615
100630bf:	mov    eax,0x1007ae84
100630c4:	jmp    0x1005959f
100630c9:	lea    ecx,[ebp-0x6c]
100630cc:	jmp    0x100131e2
100630d1:	lea    ecx,[ebp-0x34]
100630d4:	jmp    0x10001f20
100630d9:	lea    ecx,[ebp-0x50]
100630dc:	jmp    0x100131e2
100630e1:	lea    ecx,[ebp-0x88]
100630e7:	jmp    0x100131e2
100630ec:	lea    ecx,[ebp-0x88]
100630f2:	jmp    0x100131e2
100630f7:	mov    edx,DWORD PTR [esp+0x8]
100630fb:	lea    eax,[edx-0x9c]
10063101:	mov    ecx,DWORD PTR [edx-0xa0]
10063107:	xor    ecx,eax
10063109:	call   0x10043615
1006310e:	add    eax,0xc
10063111:	mov    ecx,DWORD PTR [edx-0x8]
10063114:	xor    ecx,eax
10063116:	call   0x10043615
1006311b:	mov    eax,0x1007aed8
10063120:	jmp    0x1005959f
10063125:	push   DWORD PTR [ebp-0x14]
10063128:	call   0x10042fe2
1006312d:	pop    ecx
1006312e:	ret    
1006312f:	mov    edx,DWORD PTR [esp+0x8]
10063133:	lea    eax,[edx+0xc]
10063136:	mov    ecx,DWORD PTR [edx-0x18]
10063139:	xor    ecx,eax
1006313b:	call   0x10043615
10063140:	mov    eax,0x1007af38
10063145:	jmp    0x1005959f
1006314a:	lea    esi,[ebp-0x28]
1006314d:	jmp    0x10007914
10063152:	lea    eax,[ebp+0x0]
10063155:	jmp    0x10017baa
1006315a:	mov    edx,DWORD PTR [esp+0x8]
1006315e:	lea    eax,[edx+0xc]
10063161:	mov    ecx,DWORD PTR [edx-0x2c]
10063164:	xor    ecx,eax
10063166:	call   0x10043615
1006316b:	mov    ecx,DWORD PTR [edx+0x410]
10063171:	xor    ecx,eax
10063173:	call   0x10043615
10063178:	mov    eax,0x1007afa0
1006317d:	jmp    0x1005959f
10063182:	mov    edx,DWORD PTR [esp+0x8]
10063186:	lea    eax,[edx+0xc]
10063189:	mov    ecx,DWORD PTR [edx-0x20]
1006318c:	xor    ecx,eax
1006318e:	call   0x10043615
10063193:	mov    eax,0x1007aff8
10063198:	jmp    0x1005959f
1006319d:	lea    ecx,[ebp-0x130]
100631a3:	jmp    0x100131e2
100631a8:	lea    ecx,[ebp-0x60]
100631ab:	jmp    0x100131e2
100631b0:	lea    esi,[ebp-0x10c]
100631b6:	jmp    0x10003432
100631bb:	lea    ecx,[ebp-0x44]
100631be:	jmp    0x100131e2
100631c3:	mov    edx,DWORD PTR [esp+0x8]
100631c7:	lea    eax,[edx+0xc]
100631ca:	mov    ecx,DWORD PTR [edx-0x134]
100631d0:	xor    ecx,eax
100631d2:	call   0x10043615
100631d7:	mov    ecx,DWORD PTR [edx-0x4]
100631da:	xor    ecx,eax
100631dc:	call   0x10043615
100631e1:	mov    eax,0x1007b044
100631e6:	jmp    0x1005959f
100631eb:	lea    ecx,[ebp-0x44]
100631ee:	jmp    0x100131e2
100631f3:	lea    ecx,[ebp-0x28]
100631f6:	jmp    0x100131e2
100631fb:	mov    edx,DWORD PTR [esp+0x8]
100631ff:	lea    eax,[edx+0xc]
10063202:	mov    ecx,DWORD PTR [edx-0x48]
10063205:	xor    ecx,eax
10063207:	call   0x10043615
1006320c:	mov    eax,0x1007b078
10063211:	jmp    0x1005959f
10063216:	mov    edx,DWORD PTR [esp+0x8]
1006321a:	lea    eax,[edx+0xc]
1006321d:	mov    ecx,DWORD PTR [edx-0x1c]
10063220:	xor    ecx,eax
10063222:	call   0x10043615
10063227:	mov    eax,0x1007b0d0
1006322c:	jmp    0x1005959f
10063231:	lea    eax,[ebp-0x58]
10063234:	jmp    0x1002b964
10063239:	lea    edi,[ebp-0x5c]
1006323c:	jmp    0x100024fb
10063241:	lea    ecx,[ebp-0x30]
10063244:	jmp    0x100131e2
10063249:	lea    ecx,[ebp-0x50]
1006324c:	jmp    0x10001f20
10063251:	lea    edi,[ebp-0x54]
10063254:	jmp    0x100024fb
10063259:	lea    ecx,[ebp-0x98]
1006325f:	jmp    0x100131e2
10063264:	lea    edi,[ebp-0x54]
10063267:	jmp    0x100024fb
1006326c:	mov    edx,DWORD PTR [esp+0x8]
10063270:	lea    eax,[edx+0xc]
10063273:	mov    ecx,DWORD PTR [edx-0x9c]
10063279:	xor    ecx,eax
1006327b:	call   0x10043615
10063280:	mov    ecx,DWORD PTR [edx-0x8]
10063283:	xor    ecx,eax
10063285:	call   0x10043615
1006328a:	mov    eax,0x1007b16c
1006328f:	jmp    0x1005959f
10063294:	lea    esi,[ebp-0x24]
10063297:	jmp    0x1000d355
1006329c:	lea    ecx,[ebp-0x40]
1006329f:	jmp    0x100131e2
100632a4:	mov    edx,DWORD PTR [esp+0x8]
100632a8:	lea    eax,[edx+0xc]
100632ab:	mov    ecx,DWORD PTR [edx-0x44]
100632ae:	xor    ecx,eax
100632b0:	call   0x10043615
100632b5:	mov    eax,0x1007b1a0
100632ba:	jmp    0x1005959f
100632bf:	lea    eax,[ebp-0x14]
100632c2:	jmp    0x100020aa
100632c7:	mov    edx,DWORD PTR [esp+0x8]
100632cb:	lea    eax,[edx+0xc]
100632ce:	mov    ecx,DWORD PTR [edx-0x1c]
100632d1:	xor    ecx,eax
100632d3:	call   0x10043615
100632d8:	mov    eax,0x1007b1cc
100632dd:	jmp    0x1005959f
100632e2:	lea    esi,[ebp-0x28]
100632e5:	jmp    0x100045ee
100632ea:	mov    edx,DWORD PTR [esp+0x8]
100632ee:	lea    eax,[edx+0xc]
100632f1:	mov    ecx,DWORD PTR [edx-0x2c]
100632f4:	xor    ecx,eax
100632f6:	call   0x10043615
100632fb:	mov    eax,0x1007b234
10063300:	jmp    0x1005959f
10063305:	lea    esi,[ebp-0x24]
10063308:	jmp    0x100045ee
1006330d:	mov    edx,DWORD PTR [esp+0x8]
10063311:	lea    eax,[edx+0xc]
10063314:	mov    ecx,DWORD PTR [edx-0x28]
10063317:	xor    ecx,eax
10063319:	call   0x10043615
1006331e:	mov    eax,0x1007b2c8
10063323:	jmp    0x1005959f
10063328:	mov    eax,DWORD PTR [ebp-0x10]
1006332b:	and    eax,0x1
1006332e:	je     0x10063340
10063334:	and    DWORD PTR [ebp-0x10],0xfffffffe
10063338:	mov    esi,DWORD PTR [ebp+0x8]
1006333b:	jmp    0x1000cec3
10063340:	ret    
10063341:	lea    ecx,[ebp-0x40]
10063344:	jmp    0x100131e2
10063349:	lea    esi,[ebp-0x24]
1006334c:	jmp    0x100045ee
10063351:	mov    edx,DWORD PTR [esp+0x8]
10063355:	lea    eax,[edx+0xc]
10063358:	mov    ecx,DWORD PTR [edx-0x44]
1006335b:	xor    ecx,eax
1006335d:	call   0x10043615
10063362:	mov    eax,0x1007b304
10063367:	jmp    0x1005959f
1006336c:	lea    edi,[ebp+0xc]
1006336f:	jmp    0x100024fb
10063374:	lea    edi,[ebp+0x8]
10063377:	jmp    0x100024fb
1006337c:	lea    ecx,[ebp-0x44]
1006337f:	jmp    0x100131e2
10063384:	lea    ecx,[ebp-0x28]
10063387:	jmp    0x100131e2
1006338c:	mov    edx,DWORD PTR [esp+0x8]
10063390:	lea    eax,[edx+0xc]
10063393:	mov    ecx,DWORD PTR [edx-0x48]
10063396:	xor    ecx,eax
10063398:	call   0x10043615
1006339d:	mov    eax,0x1007b348
100633a2:	jmp    0x1005959f
100633a7:	lea    ecx,[ebp-0x180]
100633ad:	jmp    0x100131e2
100633b2:	lea    esi,[ebp-0xc0]
100633b8:	jmp    0x1000bfa0
100633bd:	lea    ecx,[ebp-0x180]
100633c3:	jmp    0x100131e2
100633c8:	lea    ecx,[ebp-0x180]
100633ce:	jmp    0x100131e2
100633d3:	lea    ecx,[ebp-0x180]
100633d9:	jmp    0x100131e2
100633de:	lea    ecx,[ebp-0x180]
100633e4:	jmp    0x100131e2
100633e9:	lea    esi,[ebp-0x158]
100633ef:	jmp    0x1000c008
100633f4:	lea    ecx,[ebp-0x2c]
100633f7:	jmp    0x100131e2
100633fc:	lea    ecx,[ebp-0x180]
10063402:	jmp    0x100131e2
10063407:	lea    ecx,[ebp-0x1b8]
1006340d:	jmp    0x100131e2
10063412:	lea    ecx,[ebp-0x1f0]
10063418:	jmp    0x100131e2
1006341d:	lea    ecx,[ebp-0x20c]
10063423:	jmp    0x100131e2
10063428:	lea    ecx,[ebp-0x1d4]
1006342e:	jmp    0x100131e2
10063433:	lea    ecx,[ebp-0x19c]
10063439:	jmp    0x100131e2
1006343e:	lea    ecx,[ebp-0x180]
10063444:	jmp    0x100131e2
10063449:	lea    ecx,[ebp-0x180]
1006344f:	jmp    0x100131e2
10063454:	lea    ecx,[ebp-0x180]
1006345a:	jmp    0x100131e2
1006345f:	lea    ecx,[ebp-0x2c]
10063462:	jmp    0x100131e2
10063467:	lea    ecx,[ebp-0x19c]
1006346d:	jmp    0x100131e2
10063472:	lea    ecx,[ebp-0x19c]
10063478:	jmp    0x100131e2
1006347d:	lea    ecx,[ebp-0x1b8]
10063483:	jmp    0x100131e2
10063488:	mov    edx,DWORD PTR [esp+0x8]
1006348c:	lea    eax,[edx+0xc]
1006348f:	mov    ecx,DWORD PTR [edx-0x210]
10063495:	xor    ecx,eax
10063497:	call   0x10043615
1006349c:	mov    ecx,DWORD PTR [edx-0x4]
1006349f:	xor    ecx,eax
100634a1:	call   0x10043615
100634a6:	mov    eax,0x1007b420
100634ab:	jmp    0x1005959f
100634b0:	mov    eax,DWORD PTR [ebp-0x14]
100634b3:	and    eax,0x1
100634b6:	je     0x100634c8
100634bc:	and    DWORD PTR [ebp-0x14],0xfffffffe
100634c0:	lea    ecx,[ebp-0x30]
100634c3:	jmp    0x100131e2
100634c8:	ret    
100634c9:	mov    eax,DWORD PTR [ebp-0x14]
100634cc:	and    eax,0x2
100634cf:	je     0x100634e1
100634d5:	and    DWORD PTR [ebp-0x14],0xfffffffd
100634d9:	lea    ecx,[ebp-0x30]
100634dc:	jmp    0x100131e2
100634e1:	ret    
100634e2:	mov    eax,DWORD PTR [ebp-0x14]
100634e5:	and    eax,0x4
100634e8:	je     0x100634fa
100634ee:	and    DWORD PTR [ebp-0x14],0xfffffffb
100634f2:	lea    ecx,[ebp-0x30]
100634f5:	jmp    0x100131e2
100634fa:	ret    
100634fb:	mov    eax,DWORD PTR [ebp-0x14]
100634fe:	and    eax,0x8
10063501:	je     0x10063513
10063507:	and    DWORD PTR [ebp-0x14],0xfffffff7
1006350b:	lea    ecx,[ebp-0x4c]
1006350e:	jmp    0x100131e2
10063513:	ret    
10063514:	mov    edx,DWORD PTR [esp+0x8]
10063518:	lea    eax,[edx+0xc]
1006351b:	mov    ecx,DWORD PTR [edx-0x50]
1006351e:	xor    ecx,eax
10063520:	call   0x10043615
10063525:	mov    eax,0x1007b464
1006352a:	jmp    0x1005959f
1006352f:	lea    eax,[ebp-0x64]
10063532:	push   eax
10063533:	call   0x100070ee
10063538:	ret    
10063539:	lea    ecx,[ebp-0x4c]
1006353c:	jmp    0x100131e2
10063541:	lea    ecx,[ebp-0x30]
10063544:	jmp    0x10001f20
10063549:	mov    edx,DWORD PTR [esp+0x8]
1006354d:	lea    eax,[edx+0xc]
10063550:	mov    ecx,DWORD PTR [edx-0x84]
10063556:	xor    ecx,eax
10063558:	call   0x10043615
1006355d:	mov    ecx,DWORD PTR [edx-0x4]
10063560:	xor    ecx,eax
10063562:	call   0x10043615
10063567:	mov    eax,0x1007b4a0
1006356c:	jmp    0x1005959f
10063571:	lea    eax,[ebp-0x14]
10063574:	jmp    0x10002081
10063579:	lea    eax,[ebp-0x18]
1006357c:	jmp    0x10002081
10063581:	lea    eax,[ebp-0x1c]
10063584:	jmp    0x10002081
10063589:	lea    eax,[ebp-0x1c]
1006358c:	jmp    0x10034be0
10063591:	mov    edx,DWORD PTR [esp+0x8]
10063595:	lea    eax,[edx-0x1c]
10063598:	mov    ecx,DWORD PTR [edx-0x20]
1006359b:	xor    ecx,eax
1006359d:	call   0x10043615
100635a2:	mov    eax,0x1007b4e4
100635a7:	jmp    0x1005959f
100635ac:	lea    eax,[ebp-0x70]
100635af:	jmp    0x10002081
100635b4:	lea    eax,[ebp-0x74]
100635b7:	jmp    0x10002081
100635bc:	lea    eax,[ebp-0x78]
100635bf:	jmp    0x10002081
100635c4:	lea    eax,[ebp-0x6c]
100635c7:	jmp    0x10034be0
100635cc:	mov    edx,DWORD PTR [esp+0x8]
100635d0:	lea    eax,[edx-0x7c]
100635d3:	mov    ecx,DWORD PTR [edx-0x80]
100635d6:	xor    ecx,eax
100635d8:	call   0x10043615
100635dd:	mov    eax,0x1007b528
100635e2:	jmp    0x1005959f
100635e7:	lea    eax,[ebp-0x18]
100635ea:	jmp    0x10002081
100635ef:	lea    eax,[ebp-0x14]
100635f2:	jmp    0x10002081
100635f7:	lea    eax,[ebp-0x10]
100635fa:	jmp    0x10002081
100635ff:	lea    eax,[ebp-0x10]
10063602:	jmp    0x10034be0
10063607:	mov    edx,DWORD PTR [esp+0x8]
1006360b:	lea    eax,[edx+0xc]
1006360e:	mov    ecx,DWORD PTR [edx-0x1c]
10063611:	xor    ecx,eax
10063613:	call   0x10043615
10063618:	mov    eax,0x1007b56c
1006361d:	jmp    0x1005959f
10063622:	lea    ecx,[ebp-0x2c]
10063625:	jmp    0x100131e2
1006362a:	push   DWORD PTR [ebp-0x30]
1006362d:	call   0x10042fe2
10063632:	pop    ecx
10063633:	ret    
10063634:	lea    eax,[ebp-0x48]
10063637:	jmp    0x10004628
1006363c:	lea    ecx,[ebp-0x64]
1006363f:	jmp    0x100131e2
10063644:	mov    edx,DWORD PTR [esp+0x8]
10063648:	lea    eax,[edx+0xc]
1006364b:	mov    ecx,DWORD PTR [edx-0x68]
1006364e:	xor    ecx,eax
10063650:	call   0x10043615
10063655:	mov    ecx,DWORD PTR [edx-0x4]
10063658:	xor    ecx,eax
1006365a:	call   0x10043615
1006365f:	mov    eax,0x1007b5b0
10063664:	jmp    0x1005959f
10063669:	lea    ecx,[ebp-0x3c]
1006366c:	jmp    0x10037610
10063671:	lea    eax,[ebp-0x30]
10063674:	jmp    0x100020aa
10063679:	mov    edx,DWORD PTR [esp+0x8]
1006367d:	lea    eax,[edx+0xc]
10063680:	mov    ecx,DWORD PTR [edx-0x40]
10063683:	xor    ecx,eax
10063685:	call   0x10043615
1006368a:	mov    ecx,DWORD PTR [edx-0x4]
1006368d:	xor    ecx,eax
1006368f:	call   0x10043615
10063694:	mov    eax,0x1007b5e4
10063699:	jmp    0x1005959f
1006369e:	lea    ecx,[ebp-0x3c]
100636a1:	jmp    0x10037610
100636a6:	lea    ecx,[ebp-0x2c]
100636a9:	jmp    0x100131e2
100636ae:	lea    ecx,[ebp-0x58]
100636b1:	jmp    0x100131e2
100636b6:	lea    ecx,[ebp-0x58]
100636b9:	jmp    0x100131e2
100636be:	lea    eax,[ebp-0x30]
100636c1:	jmp    0x100020aa
100636c6:	mov    edx,DWORD PTR [esp+0x8]
100636ca:	lea    eax,[edx+0xc]
100636cd:	mov    ecx,DWORD PTR [edx-0x60]
100636d0:	xor    ecx,eax
100636d2:	call   0x10043615
100636d7:	mov    ecx,DWORD PTR [edx-0x4]
100636da:	xor    ecx,eax
100636dc:	call   0x10043615
100636e1:	mov    eax,0x1007b630
100636e6:	jmp    0x1005959f
100636eb:	lea    ecx,[ebp-0xc4]
100636f1:	jmp    0x100131e2
100636f6:	lea    ecx,[ebp-0x30]
100636f9:	jmp    0x100131e2
100636fe:	lea    ecx,[ebp-0x4c]
10063701:	jmp    0x100131e2
10063706:	lea    ecx,[ebp-0x68]
10063709:	jmp    0x100131e2
1006370e:	lea    ecx,[ebp-0x84]
10063714:	jmp    0x100131e2
10063719:	lea    ecx,[ebp-0xc4]
1006371f:	jmp    0x100131e2
10063724:	lea    ecx,[ebp-0xc4]
1006372a:	jmp    0x100131e2
1006372f:	lea    esi,[ebp-0x16c]
10063735:	jmp    0x10003432
1006373a:	mov    edx,DWORD PTR [esp+0x8]
1006373e:	lea    eax,[edx+0xc]
10063741:	mov    ecx,DWORD PTR [edx-0x170]
10063747:	xor    ecx,eax
10063749:	call   0x10043615
1006374e:	mov    ecx,DWORD PTR [edx-0x4]
10063751:	xor    ecx,eax
10063753:	call   0x10043615
10063758:	mov    eax,0x1007b6a0
1006375d:	jmp    0x1005959f
10063762:	lea    ecx,[ebp-0x34]
10063765:	jmp    0x10001f20
1006376a:	mov    edx,DWORD PTR [esp+0x8]
1006376e:	lea    eax,[edx+0xc]
10063771:	mov    ecx,DWORD PTR [edx-0x38]
10063774:	xor    ecx,eax
10063776:	call   0x10043615
1006377b:	mov    ecx,DWORD PTR [edx-0x4]
1006377e:	xor    ecx,eax
10063780:	call   0x10043615
10063785:	mov    eax,0x1007b6cc
1006378a:	jmp    0x1005959f
1006378f:	int3   
10063790:	lea    eax,[ebp-0x2c]
10063793:	jmp    0x100020aa
10063798:	lea    eax,[ebp-0x28]
1006379b:	jmp    0x100020aa
100637a0:	mov    edx,DWORD PTR [esp+0x8]
100637a4:	lea    eax,[edx-0x40]
100637a7:	mov    ecx,DWORD PTR [edx-0x44]
100637aa:	xor    ecx,eax
100637ac:	call   0x10043615
100637b1:	add    eax,0x10
100637b4:	mov    ecx,DWORD PTR [edx-0x8]
100637b7:	xor    ecx,eax
100637b9:	call   0x10043615
100637be:	mov    eax,0x1007b700
100637c3:	jmp    0x1005959f
100637c8:	int3   
100637c9:	int3   
100637ca:	int3   
100637cb:	int3   
100637cc:	int3   
100637cd:	int3   
100637ce:	int3   
100637cf:	int3   
100637d0:	lea    ecx,[ebp-0x40]
100637d3:	jmp    0x10037610
100637d8:	mov    edx,DWORD PTR [esp+0x8]
100637dc:	lea    eax,[edx-0x3c]
100637df:	mov    ecx,DWORD PTR [edx-0x40]
100637e2:	xor    ecx,eax
100637e4:	call   0x10043615
100637e9:	mov    eax,0x1007b72c
100637ee:	jmp    0x1005959f
100637f3:	int3   
100637f4:	int3   
100637f5:	int3   
100637f6:	int3   
100637f7:	int3   
100637f8:	int3   
100637f9:	int3   
100637fa:	int3   
100637fb:	int3   
100637fc:	int3   
100637fd:	int3   
100637fe:	int3   
100637ff:	int3   
10063800:	lea    eax,[ebp-0x7c]
10063803:	jmp    0x10002081
10063808:	lea    ecx,[ebp-0xa8]
1006380e:	jmp    0x100131e2
10063813:	lea    ecx,[ebp-0x140]
10063819:	jmp    0x100131e2
1006381e:	lea    ecx,[ebp-0x124]
10063824:	jmp    0x100131e2
10063829:	lea    ecx,[ebp-0x108]
1006382f:	jmp    0x100131e2
10063834:	lea    ecx,[ebp-0xec]
1006383a:	jmp    0x100131e2
1006383f:	lea    ecx,[ebp-0xd0]
10063845:	jmp    0x10043390
1006384a:	mov    edx,DWORD PTR [esp+0x8]
1006384e:	lea    eax,[edx+0xc]
10063851:	mov    ecx,DWORD PTR [edx-0x144]
10063857:	xor    ecx,eax
10063859:	call   0x10043615
1006385e:	mov    ecx,DWORD PTR [edx-0x4]
10063861:	xor    ecx,eax
10063863:	call   0x10043615
10063868:	mov    eax,0x1007b788
1006386d:	jmp    0x1005959f
10063872:	int3   
10063873:	int3   
10063874:	int3   
10063875:	int3   
10063876:	int3   
10063877:	int3   
10063878:	int3   
10063879:	int3   
1006387a:	int3   
1006387b:	int3   
1006387c:	int3   
1006387d:	int3   
1006387e:	int3   
1006387f:	int3   
10063880:	lea    eax,[ebp+0x4]
10063883:	jmp    0x10002081
10063888:	lea    eax,[ebp+0x4]
1006388b:	jmp    0x10002081
10063890:	mov    edx,DWORD PTR [esp+0x8]
10063894:	lea    eax,[edx-0x8]
10063897:	mov    ecx,DWORD PTR [edx-0xc]
1006389a:	xor    ecx,eax
1006389c:	call   0x10043615
100638a1:	mov    eax,0x1007b7bc
100638a6:	jmp    0x1005959f
100638ab:	lea    ecx,[ebp-0x58]
100638ae:	jmp    0x100131e2
100638b3:	lea    ecx,[ebp+0x54]
100638b6:	jmp    0x100131e2
100638bb:	lea    ecx,[ebp+0x1c]
100638be:	jmp    0x100131e2
100638c3:	lea    eax,[ebp-0x3c]
100638c6:	jmp    0x100020aa
100638cb:	lea    eax,[ebp-0x1c]
100638ce:	jmp    0x100020aa
100638d3:	lea    ecx,[ebp+0x38]
100638d6:	jmp    0x100131e2
100638db:	lea    ecx,[ebp+0x0]
100638de:	jmp    0x100131e2
100638e3:	lea    ecx,[ebp-0x74]
100638e6:	jmp    0x100131e2
100638eb:	mov    edx,DWORD PTR [esp+0x8]
100638ef:	lea    eax,[edx+0xc]
100638f2:	mov    ecx,DWORD PTR [edx-0x78]
100638f5:	xor    ecx,eax
100638f7:	call   0x10043615
100638fc:	mov    ecx,DWORD PTR [edx+0x7c]
100638ff:	xor    ecx,eax
10063901:	call   0x10043615
10063906:	mov    eax,0x1007b85c
1006390b:	jmp    0x1005959f
10063910:	lea    ecx,[ebp-0x6c]
10063913:	jmp    0x100131e2
10063918:	lea    ecx,[ebp-0x88]
1006391e:	jmp    0x100131e2
10063923:	lea    ecx,[ebp-0x30]
10063926:	jmp    0x100131e2
1006392b:	lea    ecx,[ebp-0x50]
1006392e:	jmp    0x10001f20
10063933:	lea    ecx,[ebp-0x6c]
10063936:	jmp    0x100131e2
1006393b:	lea    ecx,[ebp-0x104]
10063941:	jmp    0x100131e2
10063946:	lea    ecx,[ebp-0x104]
1006394c:	jmp    0x100131e2
10063951:	lea    ecx,[ebp-0x104]
10063957:	jmp    0x100131e2
1006395c:	lea    ecx,[ebp-0x104]
10063962:	jmp    0x100131e2
10063967:	lea    ecx,[ebp-0x104]
1006396d:	jmp    0x100131e2
10063972:	push   DWORD PTR [ebp-0x10c]
10063978:	call   0x10042fe2
1006397d:	pop    ecx
1006397e:	ret    
1006397f:	lea    eax,[ebp-0x10c]
10063985:	jmp    0x10004628
1006398a:	lea    ecx,[ebp-0x104]
10063990:	jmp    0x100131e2
10063995:	lea    ecx,[ebp-0xdc]
1006399b:	jmp    0x100131e2
100639a0:	lea    ecx,[ebp-0xc0]
100639a6:	jmp    0x100131e2
100639ab:	lea    ecx,[ebp-0xa4]
100639b1:	jmp    0x100131e2
100639b6:	lea    ecx,[ebp-0x6c]
100639b9:	jmp    0x100131e2
100639be:	lea    ecx,[ebp-0xdc]
100639c4:	jmp    0x100131e2
100639c9:	mov    edx,DWORD PTR [esp+0x8]
100639cd:	lea    eax,[edx-0x10c]
100639d3:	mov    ecx,DWORD PTR [edx-0x110]
100639d9:	xor    ecx,eax
100639db:	call   0x10043615
100639e0:	add    eax,0xc
100639e3:	mov    ecx,DWORD PTR [edx-0x8]
100639e6:	xor    ecx,eax
100639e8:	call   0x10043615
100639ed:	mov    eax,0x1007b918
100639f2:	jmp    0x1005959f
100639f7:	lea    ecx,[ebp-0xc0]
100639fd:	jmp    0x100131e2
10063a02:	lea    ecx,[ebp-0x34]
10063a05:	jmp    0x10001f20
10063a0a:	lea    ecx,[ebp-0x114]
10063a10:	jmp    0x100131e2
10063a15:	lea    ecx,[ebp-0xf8]
10063a1b:	jmp    0x100131e2
10063a20:	lea    ecx,[ebp-0xdc]
10063a26:	jmp    0x100131e2
10063a2b:	lea    ecx,[ebp-0x50]
10063a2e:	jmp    0x100131e2
10063a33:	lea    ecx,[ebp-0x6c]
10063a36:	jmp    0x100131e2
10063a3b:	mov    edx,DWORD PTR [esp+0x8]
10063a3f:	lea    eax,[edx-0x11c]
10063a45:	mov    ecx,DWORD PTR [edx-0x120]
10063a4b:	xor    ecx,eax
10063a4d:	call   0x10043615
10063a52:	add    eax,0xc
10063a55:	mov    ecx,DWORD PTR [edx-0x8]
10063a58:	xor    ecx,eax
10063a5a:	call   0x10043615
10063a5f:	mov    eax,0x1007b980
10063a64:	jmp    0x1005959f
10063a69:	lea    ecx,[ebp-0x2c]
10063a6c:	jmp    0x100131e2
10063a71:	mov    edx,DWORD PTR [esp+0x8]
10063a75:	lea    eax,[edx-0x24]
10063a78:	mov    ecx,DWORD PTR [edx-0x28]
10063a7b:	xor    ecx,eax
10063a7d:	call   0x10043615
10063a82:	mov    eax,0x1007b9ac
10063a87:	jmp    0x1005959f
10063a8c:	lea    ecx,[ebp-0x30]
10063a8f:	jmp    0x100131e2
10063a94:	mov    edx,DWORD PTR [esp+0x8]
10063a98:	lea    eax,[edx-0x34]
10063a9b:	mov    ecx,DWORD PTR [edx-0x38]
10063a9e:	xor    ecx,eax
10063aa0:	call   0x10043615
10063aa5:	add    eax,0x8
10063aa8:	mov    ecx,DWORD PTR [edx-0x8]
10063aab:	xor    ecx,eax
10063aad:	call   0x10043615
10063ab2:	mov    eax,0x1007b9d8
10063ab7:	jmp    0x1005959f
10063abc:	lea    ecx,[ebp-0x4c]
10063abf:	jmp    0x100131e2
10063ac4:	lea    ecx,[ebp-0x30]
10063ac7:	jmp    0x100131e2
10063acc:	lea    ecx,[ebp-0x68]
10063acf:	jmp    0x100131e2
10063ad4:	mov    edx,DWORD PTR [esp+0x8]
10063ad8:	lea    eax,[edx-0x6c]
10063adb:	mov    ecx,DWORD PTR [edx-0x70]
10063ade:	xor    ecx,eax
10063ae0:	call   0x10043615
10063ae5:	add    eax,0xc
10063ae8:	mov    ecx,DWORD PTR [edx-0x8]
10063aeb:	xor    ecx,eax
10063aed:	call   0x10043615
10063af2:	mov    eax,0x1007ba1c
10063af7:	jmp    0x1005959f
10063afc:	jmp    0x10036f40
10063b01:	mov    edx,DWORD PTR [esp+0x8]
10063b05:	lea    eax,[edx+0xc]
10063b08:	mov    ecx,DWORD PTR [edx-0x10]
10063b0b:	xor    ecx,eax
10063b0d:	call   0x10043615
10063b12:	mov    eax,0x1007ba48
10063b17:	jmp    0x1005959f
10063b1c:	lea    ecx,[ebp-0x30]
10063b1f:	jmp    0x100131e2
10063b24:	mov    edx,DWORD PTR [esp+0x8]
10063b28:	lea    eax,[edx+0xc]
10063b2b:	mov    ecx,DWORD PTR [edx-0x5c]
10063b2e:	xor    ecx,eax
10063b30:	call   0x10043615
10063b35:	mov    eax,0x1007baa8
10063b3a:	jmp    0x1005959f
10063b3f:	lea    eax,[ebp+0x8]
10063b42:	jmp    0x1001b1bf
10063b47:	mov    eax,DWORD PTR [ebp-0xb4]
10063b4d:	and    eax,0x1
10063b50:	je     0x10063b68
10063b56:	and    DWORD PTR [ebp-0xb4],0xfffffffe
10063b5d:	mov    ecx,DWORD PTR [ebp-0xa0]
10063b63:	jmp    0x100131e2
10063b68:	ret    
10063b69:	lea    ecx,[ebp-0x98]
10063b6f:	jmp    0x100131e2
10063b74:	lea    ecx,[ebp-0xd0]
10063b7a:	jmp    0x100131e2
10063b7f:	lea    ecx,[ebp-0xd0]
10063b85:	jmp    0x100131e2
10063b8a:	lea    ecx,[ebp-0xd0]
10063b90:	jmp    0x100131e2
10063b95:	mov    edx,DWORD PTR [esp+0x8]
10063b99:	lea    eax,[edx+0xc]
10063b9c:	mov    ecx,DWORD PTR [edx-0xd4]
10063ba2:	xor    ecx,eax
10063ba4:	call   0x10043615
10063ba9:	mov    ecx,DWORD PTR [edx-0x4]
10063bac:	xor    ecx,eax
10063bae:	call   0x10043615
10063bb3:	mov    eax,0x1007bafc
10063bb8:	jmp    0x1005959f
10063bbd:	lea    ecx,[ebp-0x1034]
10063bc3:	jmp    0x100131e2
10063bc8:	lea    esi,[ebp-0x1050]
10063bce:	jmp    0x1000cec3
10063bd3:	lea    esi,[ebp-0x1064]
10063bd9:	jmp    0x1000cec3
10063bde:	mov    edx,DWORD PTR [esp+0x8]
10063be2:	lea    eax,[edx+0xc]
10063be5:	mov    ecx,DWORD PTR [edx-0x106c]
10063beb:	xor    ecx,eax
10063bed:	call   0x10043615
10063bf2:	mov    ecx,DWORD PTR [edx-0x8]
10063bf5:	xor    ecx,eax
10063bf7:	call   0x10043615
10063bfc:	mov    eax,0x1007bba0
10063c01:	jmp    0x1005959f
10063c06:	lea    ecx,[ebp-0x84]
10063c0c:	jmp    0x100131e2
10063c11:	lea    ecx,[ebp-0x30]
10063c14:	jmp    0x100131e2
10063c19:	lea    ecx,[ebp-0x68]
10063c1c:	jmp    0x100131e2
10063c21:	lea    ecx,[ebp-0x4c]
10063c24:	jmp    0x100131e2
10063c29:	mov    edx,DWORD PTR [esp+0x8]
10063c2d:	lea    eax,[edx-0x8c]
10063c33:	mov    ecx,DWORD PTR [edx-0x90]
10063c39:	xor    ecx,eax
10063c3b:	call   0x10043615
10063c40:	add    eax,0x8
10063c43:	mov    ecx,DWORD PTR [edx-0x8]
10063c46:	xor    ecx,eax
10063c48:	call   0x10043615
10063c4d:	mov    eax,0x1007bbec
10063c52:	jmp    0x1005959f
10063c57:	mov    eax,DWORD PTR [ebp+0x8]
10063c5a:	jmp    0x1000a128
10063c5f:	mov    eax,DWORD PTR [ebp+0x8]
10063c62:	add    eax,0x4
10063c65:	jmp    0x1000a128
10063c6a:	mov    eax,DWORD PTR [ebp+0x8]
10063c6d:	add    eax,0x8
10063c70:	jmp    0x1000a128
10063c75:	mov    ebx,DWORD PTR [ebp+0x8]
10063c78:	add    ebx,0x18
10063c7b:	jmp    0x10007d7e
10063c80:	mov    ecx,DWORD PTR [ebp+0x8]
10063c83:	add    ecx,0x30
10063c86:	jmp    0x1000a176
10063c8b:	mov    eax,DWORD PTR [ebp+0x8]
10063c8e:	add    eax,0x34
10063c91:	jmp    0x1000a18c
10063c96:	mov    edx,DWORD PTR [esp+0x8]
10063c9a:	lea    eax,[edx+0xc]
10063c9d:	mov    ecx,DWORD PTR [edx-0x10]
10063ca0:	xor    ecx,eax
10063ca2:	call   0x10043615
10063ca7:	mov    eax,0x1007bc40
10063cac:	jmp    0x1005959f
10063cb1:	mov    eax,DWORD PTR [ebp+0x8]
10063cb4:	jmp    0x1000a128
10063cb9:	mov    eax,DWORD PTR [ebp+0x8]
10063cbc:	add    eax,0x4
10063cbf:	jmp    0x1000a128
10063cc4:	mov    eax,DWORD PTR [ebp+0x8]
10063cc7:	add    eax,0x8
10063cca:	jmp    0x1000a128
10063ccf:	mov    eax,DWORD PTR [ebp+0x8]
10063cd2:	add    eax,0xc
10063cd5:	jmp    0x1000a128
10063cda:	mov    edx,DWORD PTR [esp+0x8]
10063cde:	lea    eax,[edx+0xc]
10063ce1:	mov    ecx,DWORD PTR [edx-0x10]
10063ce4:	xor    ecx,eax
10063ce6:	call   0x10043615
10063ceb:	mov    eax,0x1007bc84
10063cf0:	jmp    0x1005959f
10063cf5:	mov    eax,DWORD PTR [ebp+0x8]
10063cf8:	jmp    0x1000a128
10063cfd:	mov    eax,DWORD PTR [ebp+0x8]
10063d00:	add    eax,0x4
10063d03:	jmp    0x1000a128
10063d08:	mov    eax,DWORD PTR [ebp+0x8]
10063d0b:	add    eax,0x8
10063d0e:	jmp    0x1000a128
10063d13:	mov    edx,DWORD PTR [esp+0x8]
10063d17:	lea    eax,[edx+0xc]
10063d1a:	mov    ecx,DWORD PTR [edx-0x10]
10063d1d:	xor    ecx,eax
10063d1f:	call   0x10043615
10063d24:	mov    eax,0x1007bcc0
10063d29:	jmp    0x1005959f
10063d2e:	lea    ecx,[ebp-0x38]
10063d31:	jmp    0x100074d6
10063d36:	lea    ecx,[ebp-0x3c]
10063d39:	jmp    0x100074d6
10063d3e:	mov    edx,DWORD PTR [esp+0x8]
10063d42:	lea    eax,[edx+0xc]
10063d45:	mov    ecx,DWORD PTR [edx-0x44]
10063d48:	xor    ecx,eax
10063d4a:	call   0x10043615
10063d4f:	mov    ecx,DWORD PTR [edx-0x4]
10063d52:	xor    ecx,eax
10063d54:	call   0x10043615
10063d59:	mov    eax,0x1007bcf4
10063d5e:	jmp    0x1005959f
10063d63:	lea    ecx,[ebp-0x30]
10063d66:	jmp    0x100131e2
10063d6b:	mov    edx,DWORD PTR [esp+0x8]
10063d6f:	lea    eax,[edx+0xc]
10063d72:	mov    ecx,DWORD PTR [edx-0x34]
10063d75:	xor    ecx,eax
10063d77:	call   0x10043615
10063d7c:	mov    ecx,DWORD PTR [edx-0x8]
10063d7f:	xor    ecx,eax
10063d81:	call   0x10043615
10063d86:	mov    eax,0x1007bd54
10063d8b:	jmp    0x1005959f
10063d90:	lea    ecx,[ebp-0x2c]
10063d93:	jmp    0x100131e2
10063d98:	mov    eax,DWORD PTR [ebp-0x30]
10063d9b:	jmp    0x10002081
10063da0:	mov    eax,DWORD PTR [ebp-0x34]
10063da3:	and    eax,0x1
10063da6:	je     0x10063db8
10063dac:	and    DWORD PTR [ebp-0x34],0xfffffffe
10063db0:	mov    eax,DWORD PTR [ebp-0x30]
10063db3:	jmp    0x10002081
10063db8:	ret    
10063db9:	mov    edx,DWORD PTR [esp+0x8]
10063dbd:	lea    eax,[edx-0x34]
10063dc0:	mov    ecx,DWORD PTR [edx-0x38]
10063dc3:	xor    ecx,eax
10063dc5:	call   0x10043615
10063dca:	add    eax,0xc
10063dcd:	mov    ecx,DWORD PTR [edx-0x4]
10063dd0:	xor    ecx,eax
10063dd2:	call   0x10043615
10063dd7:	mov    eax,0x1007bd90
10063ddc:	jmp    0x1005959f
10063de1:	int3   
10063de2:	int3   
10063de3:	int3   
10063de4:	int3   
10063de5:	int3   
10063de6:	int3   
10063de7:	int3   
10063de8:	int3   
10063de9:	int3   
10063dea:	int3   
10063deb:	int3   
10063dec:	int3   
10063ded:	int3   
10063dee:	int3   
10063def:	int3   
10063df0:	lea    ecx,[ebp-0xa4]
10063df6:	jmp    0x100131e2
10063dfb:	lea    ecx,[ebp-0x88]
10063e01:	jmp    0x100131e2
10063e06:	lea    eax,[ebp-0xb8]
10063e0c:	jmp    0x10034be0
10063e11:	lea    ecx,[ebp-0x34]
10063e14:	jmp    0x100131e2
10063e19:	lea    ecx,[ebp-0x50]
10063e1c:	jmp    0x100131e2
10063e21:	lea    ecx,[ebp-0x6c]
10063e24:	jmp    0x100131e2
10063e29:	lea    ecx,[ebp-0x50]
10063e2c:	jmp    0x100131e2
10063e31:	lea    ecx,[ebp-0x34]
10063e34:	jmp    0x100131e2
10063e39:	lea    ecx,[ebp-0xd8]
10063e3f:	jmp    0x100131e2
10063e44:	lea    ecx,[ebp-0x50]
10063e47:	jmp    0x100131e2
10063e4c:	lea    ecx,[ebp-0x34]
10063e4f:	jmp    0x100131e2
10063e54:	lea    ecx,[ebp-0xd8]
10063e5a:	jmp    0x100131e2
10063e5f:	lea    ecx,[ebp-0x34]
10063e62:	jmp    0x100131e2
10063e67:	lea    ecx,[ebp-0xd8]
10063e6d:	jmp    0x100131e2
10063e72:	lea    ecx,[ebp-0x50]
10063e75:	jmp    0x100131e2
10063e7a:	lea    ecx,[ebp-0x34]
10063e7d:	jmp    0x100131e2
10063e82:	lea    ecx,[ebp-0xd8]
10063e88:	jmp    0x100131e2
10063e8d:	lea    ecx,[ebp-0x34]
10063e90:	jmp    0x100131e2
10063e95:	lea    ecx,[ebp-0x50]
10063e98:	jmp    0x100131e2
10063e9d:	lea    ecx,[ebp-0x34]
10063ea0:	jmp    0x100131e2
10063ea5:	mov    edx,DWORD PTR [esp+0x8]
10063ea9:	lea    eax,[edx+0xc]
10063eac:	mov    ecx,DWORD PTR [edx-0xe0]
10063eb2:	xor    ecx,eax
10063eb4:	call   0x10043615
10063eb9:	mov    ecx,DWORD PTR [edx-0xc]
10063ebc:	xor    ecx,eax
10063ebe:	call   0x10043615
10063ec3:	mov    eax,0x1007be8c
10063ec8:	jmp    0x1005959f
10063ecd:	lea    ecx,[ebp-0x74]
10063ed0:	jmp    0x100131e2
10063ed5:	lea    ecx,[ebp-0x48]
10063ed8:	jmp    0x100131e2
10063edd:	lea    ecx,[ebp-0xc8]
10063ee3:	jmp    0x100131e2
10063ee8:	lea    ecx,[ebp-0x2c]
10063eeb:	jmp    0x100131e2
10063ef0:	lea    ecx,[ebp-0xac]
10063ef6:	jmp    0x100131e2
10063efb:	lea    ecx,[ebp-0x74]
10063efe:	jmp    0x100131e2
10063f03:	lea    ecx,[ebp-0x90]
10063f09:	jmp    0x100131e2
10063f0e:	lea    ecx,[ebp-0x90]
10063f14:	jmp    0x100131e2
10063f19:	mov    edx,DWORD PTR [esp+0x8]
10063f1d:	lea    eax,[edx+0xc]
10063f20:	mov    ecx,DWORD PTR [edx-0xcc]
10063f26:	xor    ecx,eax
10063f28:	call   0x10043615
10063f2d:	mov    ecx,DWORD PTR [edx-0x4]
10063f30:	xor    ecx,eax
10063f32:	call   0x10043615
10063f37:	mov    eax,0x1007bf00
10063f3c:	jmp    0x1005959f
10063f41:	lea    eax,[ebp-0x10]
10063f44:	jmp    0x10039fe0
10063f49:	mov    edx,DWORD PTR [esp+0x8]
10063f4d:	lea    eax,[edx+0xc]
10063f50:	mov    ecx,DWORD PTR [edx-0x14]
10063f53:	xor    ecx,eax
10063f55:	call   0x10043615
10063f5a:	mov    eax,0x1007bf2c
10063f5f:	jmp    0x1005959f
10063f64:	lea    eax,[ebp-0x10]
10063f67:	jmp    0x1000a18c
10063f6c:	mov    edx,DWORD PTR [esp+0x8]
10063f70:	lea    eax,[edx+0xc]
10063f73:	mov    ecx,DWORD PTR [edx-0x14]
10063f76:	xor    ecx,eax
10063f78:	call   0x10043615
10063f7d:	mov    eax,0x1007bf58
10063f82:	jmp    0x1005959f
10063f87:	push   DWORD PTR [ebp-0x10]
10063f8a:	call   0x10042fe2
10063f8f:	pop    ecx
10063f90:	ret    
10063f91:	lea    ecx,[ebp-0x10]
10063f94:	jmp    0x1000a176
10063f99:	lea    eax,[ebp-0x14]
10063f9c:	jmp    0x1000a18c
10063fa1:	mov    edx,DWORD PTR [esp+0x8]
10063fa5:	lea    eax,[edx+0xc]
10063fa8:	mov    ecx,DWORD PTR [edx-0x18]
10063fab:	xor    ecx,eax
10063fad:	call   0x10043615
10063fb2:	mov    eax,0x1007bf94
10063fb7:	jmp    0x1005959f
10063fbc:	mov    esi,DWORD PTR [ebp+0x8]
10063fbf:	add    esi,0x4
10063fc2:	jmp    0x10025eb4
10063fc7:	mov    esi,DWORD PTR [ebp+0x8]
10063fca:	add    esi,0x18
10063fcd:	jmp    0x10024de4
10063fd2:	mov    eax,DWORD PTR [ebp+0x8]
10063fd5:	add    eax,0x2c
10063fd8:	jmp    0x1002b964
10063fdd:	mov    eax,DWORD PTR [ebp+0x8]
10063fe0:	add    eax,0x30
10063fe3:	jmp    0x10025fb9
10063fe8:	mov    eax,DWORD PTR [ebp+0x8]
10063feb:	add    eax,0x34
10063fee:	jmp    0x1000ce90
10063ff3:	mov    edx,DWORD PTR [esp+0x8]
10063ff7:	lea    eax,[edx+0xc]
10063ffa:	mov    ecx,DWORD PTR [edx-0x10]
10063ffd:	xor    ecx,eax
10063fff:	call   0x10043615
10064004:	mov    eax,0x1007bfe0
10064009:	jmp    0x1005959f
1006400e:	lea    eax,[ebp-0x80]
10064011:	jmp    0x1002b964
10064016:	lea    eax,[ebp+0x14]
10064019:	jmp    0x1002b964
1006401e:	lea    ecx,[ebp-0x5c]
10064021:	jmp    0x1001b6e2
10064026:	lea    ecx,[ebp-0x3c]
10064029:	jmp    0x1001b6e2
1006402e:	lea    ecx,[ebp-0x6c]
10064031:	jmp    0x1001b6e2
10064036:	lea    ecx,[ebp-0x2c]
10064039:	jmp    0x1001b6e2
1006403e:	lea    edi,[ebp+0x10]
10064041:	jmp    0x100024fb
10064046:	lea    ecx,[ebp-0x7c]
10064049:	jmp    0x1001b6e2
1006404e:	lea    ecx,[ebp-0x4c]
10064051:	jmp    0x1001b6e2
10064056:	mov    edx,DWORD PTR [esp+0x8]
1006405a:	lea    eax,[edx+0xc]
1006405d:	mov    ecx,DWORD PTR [edx-0xe8]
10064063:	xor    ecx,eax
10064065:	call   0x10043615
1006406a:	mov    eax,0x1007c08c
1006406f:	jmp    0x1005959f
10064074:	lea    eax,[ebp-0x40]
10064077:	jmp    0x10034be0
1006407c:	lea    eax,[ebp-0x64]
1006407f:	jmp    0x100020aa
10064084:	lea    eax,[ebp-0x5c]
10064087:	jmp    0x100020aa
1006408c:	lea    esi,[ebp-0x54]
1006408f:	jmp    0x10004229
10064094:	mov    edx,DWORD PTR [esp+0x8]
10064098:	lea    eax,[edx+0xc]
1006409b:	mov    ecx,DWORD PTR [edx-0x68]
1006409e:	xor    ecx,eax
100640a0:	call   0x10043615
100640a5:	mov    ecx,DWORD PTR [edx-0x8]
100640a8:	xor    ecx,eax
100640aa:	call   0x10043615
100640af:	mov    eax,0x1007c104
100640b4:	jmp    0x1005959f
100640b9:	lea    eax,[ebp-0x54]
100640bc:	jmp    0x100020aa
100640c1:	lea    eax,[ebp-0x60]
100640c4:	jmp    0x100020aa
100640c9:	lea    eax,[ebp-0x58]
100640cc:	jmp    0x10034be0
100640d1:	lea    esi,[ebp-0x98]
100640d7:	jmp    0x10004229
100640dc:	lea    ecx,[ebp-0x50]
100640df:	jmp    0x100131e2
100640e4:	lea    ecx,[ebp-0xb8]
100640ea:	jmp    0x100131e2
100640ef:	lea    esi,[ebp-0x24]
100640f2:	jmp    0x10004229
100640f7:	lea    eax,[ebp-0x80]
100640fa:	jmp    0x10018413
100640ff:	lea    ecx,[ebp-0x50]
10064102:	jmp    0x100131e2
10064107:	mov    edx,DWORD PTR [esp+0x8]
1006410b:	lea    eax,[edx+0xc]
1006410e:	mov    ecx,DWORD PTR [edx-0xbc]
10064114:	xor    ecx,eax
10064116:	call   0x10043615
1006411b:	mov    ecx,DWORD PTR [edx-0x8]
1006411e:	xor    ecx,eax
10064120:	call   0x10043615
10064125:	mov    eax,0x1007c1a4
1006412a:	jmp    0x1005959f
1006412f:	lea    esi,[ebp-0x20]
10064132:	jmp    0x10004229
10064137:	mov    edx,DWORD PTR [esp+0x8]
1006413b:	lea    eax,[edx-0x1c]
1006413e:	mov    ecx,DWORD PTR [edx-0x20]
10064141:	xor    ecx,eax
10064143:	call   0x10043615
10064148:	mov    eax,0x1007c1d0
1006414d:	jmp    0x1005959f
10064152:	lea    eax,[ebp-0x14]
10064155:	jmp    0x100020aa
1006415a:	mov    eax,DWORD PTR [ebp-0x48]
1006415d:	and    eax,0x1
10064160:	je     0x10064172
10064166:	and    DWORD PTR [ebp-0x48],0xfffffffe
1006416a:	mov    ecx,DWORD PTR [ebp-0x18]
1006416d:	jmp    0x100131e2
10064172:	ret    
10064173:	lea    eax,[ebp-0x1c]
10064176:	jmp    0x10034be0
1006417b:	lea    ecx,[ebp-0x40]
1006417e:	jmp    0x100131e2
10064183:	lea    esi,[ebp-0x34]
10064186:	jmp    0x10004229
1006418b:	mov    edx,DWORD PTR [esp+0x8]
1006418f:	lea    eax,[edx+0xc]
10064192:	mov    ecx,DWORD PTR [edx-0x4c]
10064195:	xor    ecx,eax
10064197:	call   0x10043615
1006419c:	mov    eax,0x1007c22c
100641a1:	jmp    0x1005959f
100641a6:	lea    eax,[ebp-0x28]
100641a9:	jmp    0x1002b964
100641ae:	mov    edx,DWORD PTR [esp+0x8]
100641b2:	lea    eax,[edx-0x24]
100641b5:	mov    ecx,DWORD PTR [edx-0x28]
100641b8:	xor    ecx,eax
100641ba:	call   0x10043615
100641bf:	add    eax,0x4
100641c2:	mov    ecx,DWORD PTR [edx-0x8]
100641c5:	xor    ecx,eax
100641c7:	call   0x10043615
100641cc:	mov    eax,0x1007c258
100641d1:	jmp    0x1005959f
100641d6:	lea    eax,[ebp-0x18]
100641d9:	jmp    0x100020aa
100641de:	mov    edx,DWORD PTR [esp+0x8]
100641e2:	lea    eax,[edx+0xc]
100641e5:	mov    ecx,DWORD PTR [edx-0x1c]
100641e8:	xor    ecx,eax
100641ea:	call   0x10043615
100641ef:	mov    eax,0x1007c284
100641f4:	jmp    0x1005959f
100641f9:	lea    ecx,[ebp-0x2c]
100641fc:	jmp    0x100131e2
10064201:	lea    ecx,[ebp-0x70]
10064204:	jmp    0x100131e2
10064209:	mov    edx,DWORD PTR [esp+0x8]
1006420d:	lea    eax,[edx+0xc]
10064210:	mov    ecx,DWORD PTR [edx-0x90]
10064216:	xor    ecx,eax
10064218:	call   0x10043615
1006421d:	mov    ecx,DWORD PTR [edx-0x4]
10064220:	xor    ecx,eax
10064222:	call   0x10043615
10064227:	mov    eax,0x1007c2b8
1006422c:	jmp    0x1005959f
10064231:	push   DWORD PTR [ebp-0x60]
10064234:	call   0x10042fe2
10064239:	pop    ecx
1006423a:	ret    
1006423b:	lea    eax,[ebp-0x60]
1006423e:	jmp    0x1000a2dc
10064243:	lea    ecx,[ebp-0x2c]
10064246:	jmp    0x100131e2
1006424b:	push   DWORD PTR [ebp-0x58]
1006424e:	call   0x10042fe2
10064253:	pop    ecx
10064254:	ret    
10064255:	push   DWORD PTR [ebp-0x58]
10064258:	call   0x10042fe2
1006425d:	pop    ecx
1006425e:	ret    
1006425f:	push   DWORD PTR [ebp-0x58]
10064262:	call   0x10042fe2
10064267:	pop    ecx
10064268:	ret    
10064269:	push   DWORD PTR [ebp-0x58]
1006426c:	call   0x10042fe2
10064271:	pop    ecx
10064272:	ret    
10064273:	lea    eax,[ebp-0x5c]
10064276:	jmp    0x1000a18c
1006427b:	push   DWORD PTR [ebp-0x4c]
1006427e:	call   0x10042fe2
10064283:	pop    ecx
10064284:	ret    
10064285:	mov    eax,DWORD PTR [ebp-0x54]
10064288:	and    eax,0x1
1006428b:	je     0x1006429d
10064291:	and    DWORD PTR [ebp-0x54],0xfffffffe
10064295:	lea    ecx,[ebp-0x7c]
10064298:	jmp    0x100131e2
1006429d:	ret    
1006429e:	push   DWORD PTR [ebp-0x58]
100642a1:	call   0x10042fe2
100642a6:	pop    ecx
100642a7:	ret    
100642a8:	lea    eax,[ebp-0x54]
100642ab:	jmp    0x1000a18c
100642b0:	lea    ecx,[ebp-0x48]
100642b3:	jmp    0x100131e2
100642b8:	mov    edx,DWORD PTR [esp+0x8]
100642bc:	lea    eax,[edx+0xc]
100642bf:	mov    ecx,DWORD PTR [edx-0x80]
100642c2:	xor    ecx,eax
100642c4:	call   0x10043615
100642c9:	mov    ecx,DWORD PTR [edx-0x4]
100642cc:	xor    ecx,eax
100642ce:	call   0x10043615
100642d3:	mov    eax,0x1007c350
100642d8:	jmp    0x1005959f
100642dd:	push   DWORD PTR [ebp-0x40]
100642e0:	call   0x10042fe2
100642e5:	pop    ecx
100642e6:	ret    
100642e7:	lea    ecx,[ebp-0x40]
100642ea:	jmp    0x1000a176
100642ef:	lea    ecx,[ebp-0x2c]
100642f2:	jmp    0x100131e2
100642f7:	push   DWORD PTR [ebp-0x3c]
100642fa:	call   0x10042fe2
100642ff:	pop    ecx
10064300:	ret    
10064301:	push   DWORD PTR [ebp-0x3c]
10064304:	call   0x10042fe2
10064309:	pop    ecx
1006430a:	ret    
1006430b:	push   DWORD PTR [ebp-0x3c]
1006430e:	call   0x10042fe2
10064313:	pop    ecx
10064314:	ret    
10064315:	push   DWORD PTR [ebp-0x3c]
10064318:	call   0x10042fe2
1006431d:	pop    ecx
1006431e:	ret    
1006431f:	lea    eax,[ebp-0x34]
10064322:	jmp    0x1000a18c
10064327:	mov    edx,DWORD PTR [esp+0x8]
1006432b:	lea    eax,[edx+0xc]
1006432e:	mov    ecx,DWORD PTR [edx-0x44]
10064331:	xor    ecx,eax
10064333:	call   0x10043615
10064338:	mov    ecx,DWORD PTR [edx-0x4]
1006433b:	xor    ecx,eax
1006433d:	call   0x10043615
10064342:	mov    eax,0x1007c3b8
10064347:	jmp    0x1005959f
1006434c:	push   DWORD PTR [ebp-0x10]
1006434f:	call   0x10042fe2
10064354:	pop    ecx
10064355:	ret    
10064356:	lea    eax,[ebp-0x10]
10064359:	jmp    0x1000a2dc
1006435e:	mov    edx,DWORD PTR [esp+0x8]
10064362:	lea    eax,[edx+0xc]
10064365:	mov    ecx,DWORD PTR [edx-0x18]
10064368:	xor    ecx,eax
1006436a:	call   0x10043615
1006436f:	mov    eax,0x1007c3ec
10064374:	jmp    0x1005959f
10064379:	push   DWORD PTR [ebp-0x14]
1006437c:	call   0x10042fe2
10064381:	pop    ecx
10064382:	ret    
10064383:	lea    ecx,[ebp-0x14]
10064386:	jmp    0x1000a176
1006438b:	mov    edx,DWORD PTR [esp+0x8]
1006438f:	lea    eax,[edx-0x1c]
10064392:	mov    ecx,DWORD PTR [edx-0x20]
10064395:	xor    ecx,eax
10064397:	call   0x10043615
1006439c:	mov    eax,0x1007c420
100643a1:	jmp    0x1005959f
100643a6:	lea    eax,[ebp-0x21c]
100643ac:	jmp    0x10002081
100643b1:	lea    ecx,[ebp-0x260]
100643b7:	jmp    0x100131e2
100643bc:	lea    esi,[ebp-0x220]
100643c2:	jmp    0x10006983
100643c7:	lea    eax,[ebp-0x230]
100643cd:	jmp    0x100020aa
100643d2:	mov    edx,DWORD PTR [esp+0x8]
100643d6:	lea    eax,[edx+0xc]
100643d9:	mov    ecx,DWORD PTR [edx-0x264]
100643df:	xor    ecx,eax
100643e1:	call   0x10043615
100643e6:	mov    ecx,DWORD PTR [edx-0x4]
100643e9:	xor    ecx,eax
100643eb:	call   0x10043615
100643f0:	mov    eax,0x1007c464
100643f5:	jmp    0x1005959f
100643fa:	lea    esi,[ebp-0x64]
100643fd:	jmp    0x10004229
10064402:	lea    ecx,[ebp-0x30]
10064405:	jmp    0x100131e2
1006440a:	lea    ecx,[ebp-0x4c]
1006440d:	jmp    0x100131e2
10064412:	lea    ecx,[ebp-0x88]
10064418:	jmp    0x100131e2
1006441d:	mov    edx,DWORD PTR [esp+0x8]
10064421:	lea    eax,[edx+0xc]
10064424:	mov    ecx,DWORD PTR [edx-0x8c]
1006442a:	xor    ecx,eax
1006442c:	call   0x10043615
10064431:	mov    ecx,DWORD PTR [edx-0x4]
10064434:	xor    ecx,eax
10064436:	call   0x10043615
1006443b:	mov    eax,0x1007c4a8
10064440:	jmp    0x1005959f
10064445:	int3   
10064446:	int3   
10064447:	int3   
10064448:	int3   
10064449:	int3   
1006444a:	int3   
1006444b:	int3   
1006444c:	int3   
1006444d:	int3   
1006444e:	int3   
1006444f:	int3   
10064450:	lea    ecx,[ebp-0x1ac]
10064456:	jmp    0x100131e2
1006445b:	lea    ecx,[ebp-0x1c8]
10064461:	jmp    0x100131e2
10064466:	lea    ecx,[ebp-0x1e4]
1006446c:	jmp    0x100131e2
10064471:	lea    ecx,[ebp-0x158]
10064477:	jmp    0x100131e2
1006447c:	lea    ecx,[ebp-0x174]
10064482:	jmp    0x100131e2
10064487:	lea    ecx,[ebp-0x30]
1006448a:	jmp    0x100131e2
1006448f:	lea    ecx,[ebp-0x4c]
10064492:	jmp    0x100131e2
10064497:	lea    ecx,[ebp-0x104]
1006449d:	jmp    0x100131e2
100644a2:	lea    ecx,[ebp-0x190]
100644a8:	jmp    0x100131e2
100644ad:	lea    eax,[ebp-0x1fc]
100644b3:	jmp    0x100020aa
100644b8:	lea    ecx,[ebp-0x190]
100644be:	jmp    0x100131e2
100644c3:	lea    ecx,[ebp-0x1c8]
100644c9:	jmp    0x100131e2
100644ce:	lea    esi,[ebp-0xe8]
100644d4:	jmp    0x1000c008
100644d9:	lea    ecx,[ebp-0x174]
100644df:	jmp    0x100131e2
100644e4:	lea    ecx,[ebp-0x190]
100644ea:	jmp    0x100131e2
100644ef:	lea    ecx,[ebp-0x13c]
100644f5:	jmp    0x100131e2
100644fa:	lea    ecx,[ebp-0x158]
10064500:	jmp    0x100131e2
10064505:	lea    ecx,[ebp-0x1c8]
1006450b:	jmp    0x100131e2
10064510:	lea    ecx,[ebp-0x1e4]
10064516:	jmp    0x100131e2
1006451b:	lea    ecx,[ebp-0x1ac]
10064521:	jmp    0x100131e2
10064526:	lea    ecx,[ebp-0x120]
1006452c:	jmp    0x100131e2
10064531:	lea    ecx,[ebp-0x13c]
10064537:	jmp    0x100131e2
1006453c:	mov    edx,DWORD PTR [esp+0x8]
10064540:	lea    eax,[edx-0x1fc]
10064546:	mov    ecx,DWORD PTR [edx-0x200]
1006454c:	xor    ecx,eax
1006454e:	call   0x10043615
10064553:	add    eax,0xc
10064556:	mov    ecx,DWORD PTR [edx-0x8]
10064559:	xor    ecx,eax
1006455b:	call   0x10043615
10064560:	mov    eax,0x1007c5a8
10064565:	jmp    0x1005959f
1006456a:	int3   
1006456b:	int3   
1006456c:	int3   
1006456d:	int3   
1006456e:	int3   
1006456f:	int3   
10064570:	lea    eax,[ebp-0x14]
10064573:	jmp    0x100020aa
10064578:	lea    eax,[ebp-0x10]
1006457b:	jmp    0x100020aa
10064580:	mov    edx,DWORD PTR [esp+0x8]
10064584:	lea    eax,[edx-0x28]
10064587:	mov    ecx,DWORD PTR [edx-0x2c]
1006458a:	xor    ecx,eax
1006458c:	call   0x10043615
10064591:	mov    eax,0x1007c5dc
10064596:	jmp    0x1005959f
1006459b:	int3   
1006459c:	int3   
1006459d:	int3   
1006459e:	int3   
1006459f:	int3   
100645a0:	lea    ecx,[ebp-0x28]
100645a3:	jmp    0x100131e2
100645a8:	mov    edx,DWORD PTR [esp+0x8]
100645ac:	lea    eax,[edx-0x24]
100645af:	mov    ecx,DWORD PTR [edx-0x28]
100645b2:	xor    ecx,eax
100645b4:	call   0x10043615
100645b9:	mov    eax,0x1007c608
100645be:	jmp    0x1005959f
100645c3:	lea    ecx,[ebp+0x8]
100645c6:	jmp    0x1000a176
100645cb:	lea    eax,[ebp+0x4]
100645ce:	jmp    0x1000a2dc
100645d3:	lea    ecx,[ebp+0x44]
100645d6:	jmp    0x100131e2
100645db:	lea    ecx,[ebp-0x44]
100645de:	jmp    0x100131e2
100645e3:	lea    ecx,[ebp-0x60]
100645e6:	jmp    0x100131e2
100645eb:	lea    ecx,[ebp-0x28]
100645ee:	jmp    0x100131e2
100645f3:	lea    ecx,[ebp+0xc]
100645f6:	jmp    0x100131e2
100645fb:	mov    edx,DWORD PTR [esp+0x8]
100645ff:	lea    eax,[edx+0xc]
10064602:	mov    ecx,DWORD PTR [edx-0x64]
10064605:	xor    ecx,eax
10064607:	call   0x10043615
1006460c:	mov    ecx,DWORD PTR [edx+0x6c]
1006460f:	xor    ecx,eax
10064611:	call   0x10043615
10064616:	mov    eax,0x1007c680
1006461b:	jmp    0x1005959f
10064620:	lea    ecx,[ebp-0x220]
10064626:	jmp    0x100131e2
1006462b:	lea    ecx,[ebp-0x27c]
10064631:	jmp    0x100131e2
10064636:	lea    ecx,[ebp-0x27c]
1006463c:	jmp    0x100131e2
10064641:	lea    ecx,[ebp-0x258]
10064647:	jmp    0x100131e2
1006464c:	lea    ecx,[ebp-0x220]
10064652:	jmp    0x100131e2
10064657:	lea    ecx,[ebp-0x27c]
1006465d:	jmp    0x100131e2
10064662:	lea    esi,[ebp-0x140]
10064668:	jmp    0x1000bfa0
1006466d:	lea    ecx,[ebp-0x27c]
10064673:	jmp    0x100131e2
10064678:	lea    ecx,[ebp-0x27c]
1006467e:	jmp    0x100131e2
10064683:	lea    ecx,[ebp-0x27c]
10064689:	jmp    0x100131e2
1006468e:	lea    ecx,[ebp-0x27c]
10064694:	jmp    0x100131e2
10064699:	lea    ecx,[ebp-0x27c]
1006469f:	jmp    0x100131e2
100646a4:	lea    ecx,[ebp-0x178]
100646aa:	jmp    0x100131e2
100646af:	lea    ecx,[ebp-0x258]
100646b5:	jmp    0x100131e2
100646ba:	lea    ecx,[ebp-0x258]
100646c0:	jmp    0x100131e2
100646c5:	lea    ecx,[ebp-0x23c]
100646cb:	jmp    0x100131e2
100646d0:	lea    esi,[ebp-0xb0]
100646d6:	jmp    0x1000c008
100646db:	lea    ecx,[ebp-0x15c]
100646e1:	jmp    0x100131e2
100646e6:	lea    ecx,[ebp-0x23c]
100646ec:	jmp    0x100131e2
100646f1:	lea    ecx,[ebp-0x194]
100646f7:	jmp    0x100131e2
100646fc:	lea    ecx,[ebp-0x1cc]
10064702:	jmp    0x100131e2
10064707:	lea    ecx,[ebp-0x1e8]
1006470d:	jmp    0x100131e2
10064712:	lea    ecx,[ebp-0x204]
10064718:	jmp    0x100131e2
1006471d:	lea    ecx,[ebp-0x1b0]
10064723:	jmp    0x100131e2
10064728:	mov    edx,DWORD PTR [esp+0x8]
1006472c:	lea    eax,[edx-0x28c]
10064732:	mov    ecx,DWORD PTR [edx-0x290]
10064738:	xor    ecx,eax
1006473a:	call   0x10043615
1006473f:	add    eax,0xc
10064742:	mov    ecx,DWORD PTR [edx-0x8]
10064745:	xor    ecx,eax
10064747:	call   0x10043615
1006474c:	mov    eax,0x1007c770
10064751:	jmp    0x1005959f
10064756:	lea    ecx,[ebp-0x68]
10064759:	jmp    0x100131e2
1006475e:	lea    ecx,[ebp-0x30]
10064761:	jmp    0x100131e2
10064766:	lea    ecx,[ebp-0x4c]
10064769:	jmp    0x100131e2
1006476e:	lea    ecx,[ebp-0xa0]
10064774:	jmp    0x100131e2
10064779:	lea    ecx,[ebp-0x84]
1006477f:	jmp    0x100131e2
10064784:	lea    ecx,[ebp-0x68]
10064787:	jmp    0x100131e2
1006478c:	lea    ecx,[ebp-0xa0]
10064792:	jmp    0x100131e2
10064797:	lea    ecx,[ebp-0x84]
1006479d:	jmp    0x100131e2
100647a2:	lea    ecx,[ebp-0xa0]
100647a8:	jmp    0x100131e2
100647ad:	mov    edx,DWORD PTR [esp+0x8]
100647b1:	lea    eax,[edx-0xac]
100647b7:	mov    ecx,DWORD PTR [edx-0xb0]
100647bd:	xor    ecx,eax
100647bf:	call   0x10043615
100647c4:	add    eax,0xc
100647c7:	mov    ecx,DWORD PTR [edx-0x8]
100647ca:	xor    ecx,eax
100647cc:	call   0x10043615
100647d1:	mov    eax,0x1007c7e8
100647d6:	jmp    0x1005959f
100647db:	lea    ecx,[ebp-0x84]
100647e1:	jmp    0x100131e2
100647e6:	lea    ecx,[ebp-0x30]
100647e9:	jmp    0x100131e2
100647ee:	lea    ecx,[ebp-0xa0]
100647f4:	jmp    0x100131e2
100647f9:	lea    ecx,[ebp-0xa0]
100647ff:	jmp    0x100131e2
10064804:	lea    ecx,[ebp-0x68]
10064807:	jmp    0x100131e2
1006480c:	lea    ecx,[ebp-0x4c]
1006480f:	jmp    0x100131e2
10064814:	mov    edx,DWORD PTR [esp+0x8]
10064818:	lea    eax,[edx-0xac]
1006481e:	mov    ecx,DWORD PTR [edx-0xb0]
10064824:	xor    ecx,eax
10064826:	call   0x10043615
1006482b:	add    eax,0xc
1006482e:	mov    ecx,DWORD PTR [edx-0x8]
10064831:	xor    ecx,eax
10064833:	call   0x10043615
10064838:	mov    eax,0x1007c844
1006483d:	jmp    0x1005959f
10064842:	lea    eax,[ebp-0x1c]
10064845:	jmp    0x1000a2dc
1006484a:	lea    eax,[ebp-0x18]
1006484d:	jmp    0x1000a2dc
10064852:	lea    eax,[ebp-0x44]
10064855:	jmp    0x100266e7
1006485a:	mov    edx,DWORD PTR [esp+0x8]
1006485e:	lea    eax,[edx+0xc]
10064861:	mov    ecx,DWORD PTR [edx-0x48]
10064864:	xor    ecx,eax
10064866:	call   0x10043615
1006486b:	mov    eax,0x1007c880
10064870:	jmp    0x1005959f
10064875:	lea    eax,[ebp-0x18]
10064878:	jmp    0x1000a2dc
1006487d:	lea    eax,[ebp-0x14]
10064880:	jmp    0x1000a2dc
10064885:	mov    edx,DWORD PTR [esp+0x8]
10064889:	lea    eax,[edx+0xc]
1006488c:	mov    ecx,DWORD PTR [edx-0x40]
1006488f:	xor    ecx,eax
10064891:	call   0x10043615
10064896:	mov    eax,0x1007c8b4
1006489b:	jmp    0x1005959f
100648a0:	lea    eax,[ebp-0x14]
100648a3:	jmp    0x10025fb9
100648a8:	mov    edx,DWORD PTR [esp+0x8]
100648ac:	lea    eax,[edx+0xc]
100648af:	mov    ecx,DWORD PTR [edx-0x18]
100648b2:	xor    ecx,eax
100648b4:	call   0x10043615
100648b9:	mov    eax,0x1007c914
100648be:	jmp    0x1005959f
100648c3:	mov    eax,DWORD PTR [ebp-0x14]
100648c6:	and    eax,0x1
100648c9:	je     0x100648db
100648cf:	and    DWORD PTR [ebp-0x14],0xfffffffe
100648d3:	lea    eax,[ebp+0x18]
100648d6:	jmp    0x10034be0
100648db:	ret    
100648dc:	mov    edx,DWORD PTR [esp+0x8]
100648e0:	lea    eax,[edx+0xc]
100648e3:	mov    ecx,DWORD PTR [edx-0x20]
100648e6:	xor    ecx,eax
100648e8:	call   0x10043615
100648ed:	mov    eax,0x1007c984
100648f2:	jmp    0x1005959f
100648f7:	lea    ecx,[ebp-0x10]
100648fa:	jmp    0x10016239
100648ff:	mov    edx,DWORD PTR [esp+0x8]
10064903:	lea    eax,[edx+0xc]
10064906:	mov    ecx,DWORD PTR [edx-0x24]
10064909:	xor    ecx,eax
1006490b:	call   0x10043615
10064910:	mov    eax,0x1007c9b0
10064915:	jmp    0x1005959f
1006491a:	lea    ecx,[ebp-0x18]
1006491d:	jmp    0x100111c4
10064922:	lea    eax,[ebp-0x24]
10064925:	jmp    0x1002b964
1006492a:	lea    eax,[ebp-0x28]
1006492d:	jmp    0x1002b964
10064932:	lea    eax,[ebp-0x20]
10064935:	jmp    0x1002b964
1006493a:	mov    edx,DWORD PTR [esp+0x8]
1006493e:	lea    eax,[edx-0x2c]
10064941:	mov    ecx,DWORD PTR [edx-0x30]
10064944:	xor    ecx,eax
10064946:	call   0x10043615
1006494b:	mov    eax,0x1007c9f4
10064950:	jmp    0x1005959f
10064955:	lea    ecx,[ebp-0x2c]
10064958:	jmp    0x100131e2
1006495d:	mov    edx,DWORD PTR [esp+0x8]
10064961:	lea    eax,[edx+0xc]
10064964:	mov    ecx,DWORD PTR [edx-0x3c]
10064967:	xor    ecx,eax
10064969:	call   0x10043615
1006496e:	mov    ecx,DWORD PTR [edx-0x4]
10064971:	xor    ecx,eax
10064973:	call   0x10043615
10064978:	mov    eax,0x1007ca20
1006497d:	jmp    0x1005959f
10064982:	lea    ecx,[ebp-0x30]
10064985:	jmp    0x100131e2
1006498a:	mov    edx,DWORD PTR [esp+0x8]
1006498e:	lea    eax,[edx+0xc]
10064991:	mov    ecx,DWORD PTR [edx-0x34]
10064994:	xor    ecx,eax
10064996:	call   0x10043615
1006499b:	mov    eax,0x1007ca4c
100649a0:	jmp    0x1005959f
100649a5:	lea    ecx,[ebp-0x2c]
100649a8:	jmp    0x100131e2
100649ad:	push   DWORD PTR [ebp-0x34]
100649b0:	call   0x10042fe2
100649b5:	pop    ecx
100649b6:	ret    
100649b7:	mov    edx,DWORD PTR [esp+0x8]
100649bb:	lea    eax,[edx+0xc]
100649be:	mov    ecx,DWORD PTR [edx-0x40]
100649c1:	xor    ecx,eax
100649c3:	call   0x10043615
100649c8:	mov    ecx,DWORD PTR [edx-0x4]
100649cb:	xor    ecx,eax
100649cd:	call   0x10043615
100649d2:	mov    eax,0x1007ca80
100649d7:	jmp    0x1005959f
100649dc:	lea    ecx,[ebp-0x30]
100649df:	jmp    0x100131e2
100649e4:	lea    ecx,[ebp-0x4c]
100649e7:	jmp    0x100131e2
100649ec:	lea    eax,[ebp-0x5c]
100649ef:	jmp    0x100020aa
100649f4:	mov    edx,DWORD PTR [esp+0x8]
100649f8:	lea    eax,[edx-0x64]
100649fb:	mov    ecx,DWORD PTR [edx-0x68]
100649fe:	xor    ecx,eax
10064a00:	call   0x10043615
10064a05:	add    eax,0xc
10064a08:	mov    ecx,DWORD PTR [edx-0x8]
10064a0b:	xor    ecx,eax
10064a0d:	call   0x10043615
10064a12:	mov    eax,0x1007cabc
10064a17:	jmp    0x1005959f
10064a1c:	lea    ecx,[ebp-0x2c]
10064a1f:	jmp    0x100131e2
10064a24:	push   DWORD PTR [ebp-0x4c]
10064a27:	call   0x10042fe2
10064a2c:	pop    ecx
10064a2d:	ret    
10064a2e:	lea    ecx,[ebp-0x48]
10064a31:	jmp    0x100131e2
10064a36:	push   DWORD PTR [ebp-0x54]
10064a39:	call   0x10042fe2
10064a3e:	pop    ecx
10064a3f:	ret    
10064a40:	mov    edx,DWORD PTR [esp+0x8]
10064a44:	lea    eax,[edx+0xc]
10064a47:	mov    ecx,DWORD PTR [edx-0x5c]
10064a4a:	xor    ecx,eax
10064a4c:	call   0x10043615
10064a51:	mov    ecx,DWORD PTR [edx-0x4]
10064a54:	xor    ecx,eax
10064a56:	call   0x10043615
10064a5b:	mov    eax,0x1007cb00
10064a60:	jmp    0x1005959f
10064a65:	lea    ecx,[ebp-0x30]
10064a68:	jmp    0x100131e2
10064a6d:	lea    ecx,[ebp-0xa0]
10064a73:	jmp    0x100131e2
10064a78:	lea    ecx,[ebp-0xbc]
10064a7e:	jmp    0x100131e2
10064a83:	lea    ecx,[ebp-0xbc]
10064a89:	jmp    0x100131e2
10064a8e:	mov    eax,DWORD PTR [ebp-0xcc]
10064a94:	and    eax,0x1
10064a97:	je     0x10064aaf
10064a9d:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10064aa4:	lea    ecx,[ebp-0xa0]
10064aaa:	jmp    0x100131e2
10064aaf:	ret    
10064ab0:	mov    eax,DWORD PTR [ebp-0xcc]
10064ab6:	and    eax,0x2
10064ab9:	je     0x10064ace
10064abf:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10064ac6:	lea    ecx,[ebp-0x68]
10064ac9:	jmp    0x100131e2
10064ace:	ret    
10064acf:	mov    eax,DWORD PTR [ebp-0xcc]
10064ad5:	and    eax,0x4
10064ad8:	je     0x10064af0
10064ade:	and    DWORD PTR [ebp-0xcc],0xfffffffb
10064ae5:	lea    ecx,[ebp-0xbc]
10064aeb:	jmp    0x100131e2
10064af0:	ret    
10064af1:	mov    eax,DWORD PTR [ebp-0xcc]
10064af7:	and    eax,0x8
10064afa:	je     0x10064b0f
10064b00:	and    DWORD PTR [ebp-0xcc],0xfffffff7
10064b07:	lea    ecx,[ebp-0x4c]
10064b0a:	jmp    0x100131e2
10064b0f:	ret    
10064b10:	mov    eax,DWORD PTR [ebp-0xcc]
10064b16:	and    eax,0x10
10064b19:	je     0x10064b31
10064b1f:	and    DWORD PTR [ebp-0xcc],0xffffffef
10064b26:	lea    ecx,[ebp-0x84]
10064b2c:	jmp    0x100131e2
10064b31:	ret    
10064b32:	push   DWORD PTR [ebp-0xc4]
10064b38:	call   0x10042fe2
10064b3d:	pop    ecx
10064b3e:	ret    
10064b3f:	mov    edx,DWORD PTR [esp+0x8]
10064b43:	lea    eax,[edx-0xd4]
10064b49:	mov    ecx,DWORD PTR [edx-0xd8]
10064b4f:	xor    ecx,eax
10064b51:	call   0x10043615
10064b56:	add    eax,0xc
10064b59:	mov    ecx,DWORD PTR [edx-0x8]
10064b5c:	xor    ecx,eax
10064b5e:	call   0x10043615
10064b63:	mov    eax,0x1007cb78
10064b68:	jmp    0x1005959f
10064b6d:	lea    eax,[ebp-0x18]
10064b70:	jmp    0x1000a128
10064b75:	lea    eax,[ebp-0x14]
10064b78:	jmp    0x1000a128
10064b7d:	lea    eax,[ebp-0x10]
10064b80:	jmp    0x1000a128
10064b85:	mov    edx,DWORD PTR [esp+0x8]
10064b89:	lea    eax,[edx+0xc]
10064b8c:	mov    ecx,DWORD PTR [edx-0x1c]
10064b8f:	xor    ecx,eax
10064b91:	call   0x10043615
10064b96:	mov    eax,0x1007cbb4
10064b9b:	jmp    0x1005959f
10064ba0:	lea    ecx,[ebp-0x2c]
10064ba3:	jmp    0x100131e2
10064ba8:	push   DWORD PTR [ebp-0x50]
10064bab:	call   0x10042fe2
10064bb0:	pop    ecx
10064bb1:	ret    
10064bb2:	lea    ecx,[ebp-0x48]
10064bb5:	jmp    0x100131e2
10064bba:	push   DWORD PTR [ebp-0x50]
10064bbd:	call   0x10042fe2
10064bc2:	pop    ecx
10064bc3:	ret    
10064bc4:	mov    edx,DWORD PTR [esp+0x8]
10064bc8:	lea    eax,[edx+0xc]
10064bcb:	mov    ecx,DWORD PTR [edx-0x60]
10064bce:	xor    ecx,eax
10064bd0:	call   0x10043615
10064bd5:	mov    ecx,DWORD PTR [edx-0x4]
10064bd8:	xor    ecx,eax
10064bda:	call   0x10043615
10064bdf:	mov    eax,0x1007cbf8
10064be4:	jmp    0x1005959f
10064be9:	lea    eax,[ebp-0x10]
10064bec:	jmp    0x1000a128
10064bf1:	lea    eax,[ebp-0x14]
10064bf4:	jmp    0x1000a128
10064bf9:	lea    eax,[ebp-0x18]
10064bfc:	jmp    0x1000a128
10064c01:	mov    edx,DWORD PTR [esp+0x8]
10064c05:	lea    eax,[edx+0xc]
10064c08:	mov    ecx,DWORD PTR [edx-0x20]
10064c0b:	xor    ecx,eax
10064c0d:	call   0x10043615
10064c12:	mov    eax,0x1007cc34
10064c17:	jmp    0x1005959f
10064c1c:	lea    eax,[ebp-0x14]
10064c1f:	jmp    0x1000a2dc
10064c24:	lea    eax,[ebp-0x5c]
10064c27:	push   eax
10064c28:	call   0x1000a3c8
10064c2d:	ret    
10064c2e:	mov    eax,DWORD PTR [ebp-0x18]
10064c31:	and    eax,0x1
10064c34:	je     0x10064c46
10064c3a:	and    DWORD PTR [ebp-0x18],0xfffffffe
10064c3e:	mov    eax,DWORD PTR [ebp+0x8]
10064c41:	jmp    0x1000a2dc
10064c46:	ret    
10064c47:	lea    ecx,[ebp-0x94]
10064c4d:	jmp    0x100131e2
10064c52:	lea    ecx,[ebp-0xb0]
10064c58:	jmp    0x100131e2
10064c5d:	lea    ecx,[ebp-0x78]
10064c60:	jmp    0x100131e2
10064c65:	mov    edx,DWORD PTR [esp+0x8]
10064c69:	lea    eax,[edx+0xc]
10064c6c:	mov    ecx,DWORD PTR [edx-0xb4]
10064c72:	xor    ecx,eax
10064c74:	call   0x10043615
10064c79:	mov    eax,0x1007cc88
10064c7e:	jmp    0x1005959f
10064c83:	lea    eax,[ebp-0x14]
10064c86:	jmp    0x100020aa
10064c8b:	lea    eax,[ebp-0x5c]
10064c8e:	push   eax
10064c8f:	call   0x1000a3c8
10064c94:	ret    
10064c95:	mov    eax,DWORD PTR [ebp-0x18]
10064c98:	and    eax,0x1
10064c9b:	je     0x10064cad
10064ca1:	and    DWORD PTR [ebp-0x18],0xfffffffe
10064ca5:	mov    eax,DWORD PTR [ebp+0xc]
10064ca8:	jmp    0x100020aa
10064cad:	ret    
10064cae:	mov    edx,DWORD PTR [esp+0x8]
10064cb2:	lea    eax,[edx+0xc]
10064cb5:	mov    ecx,DWORD PTR [edx-0x60]
10064cb8:	xor    ecx,eax
10064cba:	call   0x10043615
10064cbf:	mov    eax,0x1007ccc4
10064cc4:	jmp    0x1005959f
10064cc9:	lea    ecx,[ebp-0x64]
10064ccc:	jmp    0x100131e2
10064cd1:	lea    ecx,[ebp-0x48]
10064cd4:	jmp    0x100131e2
10064cd9:	lea    ecx,[ebp-0x80]
10064cdc:	jmp    0x100131e2
10064ce1:	lea    ecx,[ebp-0x2c]
10064ce4:	jmp    0x100131e2
10064ce9:	lea    esi,[ebp-0x98]
10064cef:	jmp    0x1000cec3
10064cf4:	mov    edx,DWORD PTR [esp+0x8]
10064cf8:	lea    eax,[edx-0x9c]
10064cfe:	mov    ecx,DWORD PTR [edx-0xa0]
10064d04:	xor    ecx,eax
10064d06:	call   0x10043615
10064d0b:	mov    eax,0x1007cd10
10064d10:	jmp    0x1005959f
10064d15:	lea    eax,[ebp+0x10]
10064d18:	jmp    0x1000a2dc
10064d1d:	mov    eax,DWORD PTR [ebp-0x10]
10064d20:	and    eax,0x1
10064d23:	je     0x10064d35
10064d29:	and    DWORD PTR [ebp-0x10],0xfffffffe
10064d2d:	mov    eax,DWORD PTR [ebp+0x8]
10064d30:	jmp    0x1000a2dc
10064d35:	ret    
10064d36:	mov    edx,DWORD PTR [esp+0x8]
10064d3a:	lea    eax,[edx+0xc]
10064d3d:	mov    ecx,DWORD PTR [edx-0x18]
10064d40:	xor    ecx,eax
10064d42:	call   0x10043615
10064d47:	mov    eax,0x1007cd44
10064d4c:	jmp    0x1005959f
10064d51:	lea    eax,[ebp+0x10]
10064d54:	jmp    0x100020aa
10064d59:	mov    eax,DWORD PTR [ebp-0x10]
10064d5c:	and    eax,0x1
10064d5f:	je     0x10064d71
10064d65:	and    DWORD PTR [ebp-0x10],0xfffffffe
10064d69:	mov    eax,DWORD PTR [ebp+0x8]
10064d6c:	jmp    0x100020aa
10064d71:	ret    
10064d72:	lea    ecx,[ebp+0xc]
10064d75:	jmp    0x1000a176
10064d7a:	mov    edx,DWORD PTR [esp+0x8]
10064d7e:	lea    eax,[edx+0xc]
10064d81:	mov    ecx,DWORD PTR [edx-0x14]
10064d84:	xor    ecx,eax
10064d86:	call   0x10043615
10064d8b:	mov    eax,0x1007cd80
10064d90:	jmp    0x1005959f
10064d95:	mov    eax,DWORD PTR [ebp-0x14]
10064d98:	and    eax,0x1
10064d9b:	je     0x10064dad
10064da1:	and    DWORD PTR [ebp-0x14],0xfffffffe
10064da5:	lea    ecx,[ebp-0x34]
10064da8:	jmp    0x100131e2
10064dad:	ret    
10064dae:	mov    eax,DWORD PTR [ebp-0x14]
10064db1:	and    eax,0x2
10064db4:	je     0x10064dc6
10064dba:	and    DWORD PTR [ebp-0x14],0xfffffffd
10064dbe:	lea    ecx,[ebp-0x34]
10064dc1:	jmp    0x100131e2
10064dc6:	ret    
10064dc7:	mov    eax,DWORD PTR [ebp-0x14]
10064dca:	and    eax,0x4
10064dcd:	je     0x10064ddf
10064dd3:	and    DWORD PTR [ebp-0x14],0xfffffffb
10064dd7:	lea    ecx,[ebp-0x50]
10064dda:	jmp    0x100131e2
10064ddf:	ret    
10064de0:	mov    edx,DWORD PTR [esp+0x8]
10064de4:	lea    eax,[edx+0xc]
10064de7:	mov    ecx,DWORD PTR [edx-0x58]
10064dea:	xor    ecx,eax
10064dec:	call   0x10043615
10064df1:	mov    eax,0x1007cdbc
10064df6:	jmp    0x1005959f
10064dfb:	lea    ecx,[ebp-0x20]
10064dfe:	jmp    0x1000a176
10064e03:	lea    ecx,[ebp-0x1c]
10064e06:	jmp    0x1000a176
10064e0b:	lea    eax,[ebp-0x18]
10064e0e:	jmp    0x1000a2dc
10064e13:	lea    eax,[ebp-0x14]
10064e16:	jmp    0x1000a18c
10064e1b:	lea    esi,[ebp-0x48]
10064e1e:	jmp    0x10026484
10064e23:	mov    edx,DWORD PTR [esp+0x8]
10064e27:	lea    eax,[edx+0xc]
10064e2a:	mov    ecx,DWORD PTR [edx-0x4c]
10064e2d:	xor    ecx,eax
10064e2f:	call   0x10043615
10064e34:	mov    eax,0x1007ce08
10064e39:	jmp    0x1005959f
10064e3e:	lea    eax,[ebp-0x10]
10064e41:	jmp    0x1000a18c
10064e46:	lea    eax,[ebp-0x18]
10064e49:	jmp    0x1000a18c
10064e4e:	lea    eax,[ebp-0x18]
10064e51:	jmp    0x1000a18c
10064e56:	lea    eax,[ebp-0x1c]
10064e59:	jmp    0x1000a18c
10064e5e:	mov    edx,DWORD PTR [esp+0x8]
10064e62:	lea    eax,[edx+0xc]
10064e65:	mov    ecx,DWORD PTR [edx-0x20]
10064e68:	xor    ecx,eax
10064e6a:	call   0x10043615
10064e6f:	mov    eax,0x1007ce4c
10064e74:	jmp    0x1005959f
10064e79:	lea    eax,[ebp+0x14]
10064e7c:	jmp    0x1000a2dc
10064e81:	lea    eax,[ebp-0x18]
10064e84:	jmp    0x10025fb9
10064e89:	lea    ecx,[ebp+0xc]
10064e8c:	jmp    0x1000a176
10064e91:	mov    edx,DWORD PTR [esp+0x8]
10064e95:	lea    eax,[edx+0xc]
10064e98:	mov    ecx,DWORD PTR [edx-0x1c]
10064e9b:	xor    ecx,eax
10064e9d:	call   0x10043615
10064ea2:	mov    eax,0x1007cebc
10064ea7:	jmp    0x1005959f
10064eac:	lea    eax,[ebp-0x10]
10064eaf:	jmp    0x1000d49f
10064eb4:	lea    ecx,[ebp-0x14]
10064eb7:	jmp    0x1000a176
10064ebc:	lea    ecx,[ebp-0x70]
10064ebf:	jmp    0x100131e2
10064ec4:	lea    ecx,[ebp-0x54]
10064ec7:	jmp    0x100131e2
10064ecc:	lea    ecx,[ebp-0x38]
10064ecf:	jmp    0x100131e2
10064ed4:	lea    eax,[ebp+0x14]
10064ed7:	jmp    0x1000a2dc
10064edc:	mov    eax,DWORD PTR [ebp-0x18]
10064edf:	and    eax,0x1
10064ee2:	je     0x10064ef4
10064ee8:	and    DWORD PTR [ebp-0x18],0xfffffffe
10064eec:	mov    eax,DWORD PTR [ebp+0x8]
10064eef:	jmp    0x1000a2dc
10064ef4:	ret    
10064ef5:	mov    edx,DWORD PTR [esp+0x8]
10064ef9:	lea    eax,[edx+0xc]
10064efc:	mov    ecx,DWORD PTR [edx-0x78]
10064eff:	xor    ecx,eax
10064f01:	call   0x10043615
10064f06:	mov    eax,0x1007cf18
10064f0b:	jmp    0x1005959f
10064f10:	lea    eax,[ebp-0x10]
10064f13:	jmp    0x1000d49f
10064f18:	lea    eax,[ebp-0x1c]
10064f1b:	jmp    0x100020aa
10064f20:	mov    eax,DWORD PTR [ebp-0x14]
10064f23:	and    eax,0x1
10064f26:	je     0x10064f38
10064f2c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10064f30:	mov    eax,DWORD PTR [ebp+0x8]
10064f33:	jmp    0x100020aa
10064f38:	ret    
10064f39:	mov    edx,DWORD PTR [esp+0x8]
10064f3d:	lea    eax,[edx+0xc]
10064f40:	mov    ecx,DWORD PTR [edx-0x20]
10064f43:	xor    ecx,eax
10064f45:	call   0x10043615
10064f4a:	mov    eax,0x1007cf54
10064f4f:	jmp    0x1005959f
10064f54:	lea    eax,[ebp-0x10]
10064f57:	jmp    0x100020aa
10064f5c:	lea    ecx,[ebp-0x38]
10064f5f:	jmp    0x100131e2
10064f64:	mov    edx,DWORD PTR [esp+0x8]
10064f68:	lea    eax,[edx+0xc]
10064f6b:	mov    ecx,DWORD PTR [edx-0x3c]
10064f6e:	xor    ecx,eax
10064f70:	call   0x10043615
10064f75:	mov    eax,0x1007cf88
10064f7a:	jmp    0x1005959f
10064f7f:	jmp    0x10036f40
10064f84:	lea    eax,[ebp-0x14]
10064f87:	jmp    0x10034be0
10064f8c:	lea    ecx,[ebp+0x70]
10064f8f:	jmp    0x100131e2
10064f94:	lea    ecx,[ebp-0x38]
10064f97:	jmp    0x100131e2
10064f9c:	lea    ecx,[ebp-0xa8]
10064fa2:	jmp    0x100131e2
10064fa7:	lea    ecx,[ebp+0x38]
10064faa:	jmp    0x100131e2
10064faf:	lea    ecx,[ebp+0x0]
10064fb2:	jmp    0x100131e2
10064fb7:	lea    ecx,[ebp+0x1c]
10064fba:	jmp    0x100131e2
10064fbf:	lea    ecx,[ebp-0x7c]
10064fc2:	jmp    0x100131e2
10064fc7:	lea    ecx,[ebp-0x60]
10064fca:	jmp    0x100131e2
10064fcf:	lea    ecx,[ebp-0xa8]
10064fd5:	jmp    0x100131e2
10064fda:	lea    ecx,[ebp-0xa8]
10064fe0:	jmp    0x100131e2
10064fe5:	lea    ecx,[ebp-0x60]
10064fe8:	jmp    0x100131e2
10064fed:	lea    ecx,[ebp-0x7c]
10064ff0:	jmp    0x100131e2
10064ff5:	lea    eax,[ebp-0x14]
10064ff8:	jmp    0x10002081
10064ffd:	lea    esi,[ebp-0x8c]
10065003:	jmp    0x100045ee
10065008:	lea    ecx,[ebp-0x60]
1006500b:	jmp    0x100131e2
10065010:	lea    ecx,[ebp-0x7c]
10065013:	jmp    0x100131e2
10065018:	lea    ecx,[ebp-0x38]
1006501b:	jmp    0x100131e2
10065020:	lea    ecx,[ebp-0xa8]
10065026:	jmp    0x100131e2
1006502b:	lea    ecx,[ebp-0x60]
1006502e:	jmp    0x100131e2
10065033:	lea    ecx,[ebp-0x7c]
10065036:	jmp    0x100131e2
1006503b:	lea    eax,[ebp-0x14]
1006503e:	jmp    0x10002081
10065043:	lea    ecx,[ebp-0x60]
10065046:	jmp    0x100131e2
1006504b:	lea    ecx,[ebp-0x7c]
1006504e:	jmp    0x100131e2
10065053:	lea    ecx,[ebp-0x60]
10065056:	jmp    0x100131e2
1006505b:	lea    ecx,[ebp-0x7c]
1006505e:	jmp    0x100131e2
10065063:	lea    eax,[ebp-0x18]
10065066:	jmp    0x10002081
1006506b:	lea    ecx,[ebp-0x60]
1006506e:	jmp    0x100131e2
10065073:	lea    ecx,[ebp-0x7c]
10065076:	jmp    0x100131e2
1006507b:	lea    ecx,[ebp+0x54]
1006507e:	jmp    0x100131e2
10065083:	lea    ecx,[ebp-0xa8]
10065089:	jmp    0x100131e2
1006508e:	lea    eax,[ebp-0x14]
10065091:	jmp    0x100020aa
10065096:	lea    ecx,[ebp-0x7c]
10065099:	jmp    0x100131e2
1006509e:	lea    ecx,[ebp-0x60]
100650a1:	jmp    0x100131e2
100650a6:	lea    ecx,[ebp-0xc4]
100650ac:	jmp    0x100131e2
100650b1:	lea    eax,[ebp-0x18]
100650b4:	jmp    0x1000428d
100650b9:	mov    edx,DWORD PTR [esp+0x8]
100650bd:	lea    eax,[edx+0xc]
100650c0:	mov    ecx,DWORD PTR [edx-0xc8]
100650c6:	xor    ecx,eax
100650c8:	call   0x10043615
100650cd:	mov    ecx,DWORD PTR [edx+0x98]
100650d3:	xor    ecx,eax
100650d5:	call   0x10043615
100650da:	mov    eax,0x1007d124
100650df:	jmp    0x1005959f
100650e4:	mov    edx,DWORD PTR [esp+0x8]
100650e8:	lea    eax,[edx+0xc]
100650eb:	mov    ecx,DWORD PTR [edx-0x14]
100650ee:	xor    ecx,eax
100650f0:	call   0x10043615
100650f5:	mov    eax,0x1007d17c
100650fa:	jmp    0x1005959f
100650ff:	lea    ecx,[ebp-0x30]
10065102:	jmp    0x100131e2
10065107:	lea    eax,[ebp-0x14]
1006510a:	jmp    0x1000a2dc
1006510f:	mov    edx,DWORD PTR [esp+0x8]
10065113:	lea    eax,[edx+0xc]
10065116:	mov    ecx,DWORD PTR [edx-0x38]
10065119:	xor    ecx,eax
1006511b:	call   0x10043615
10065120:	mov    eax,0x1007d1b8
10065125:	jmp    0x1005959f
1006512a:	lea    esi,[ebp-0x1c]
1006512d:	jmp    0x1002b910
10065132:	lea    eax,[ebp-0x24]
10065135:	jmp    0x1002b964
1006513a:	lea    ecx,[ebp+0xa8]
10065140:	jmp    0x100131e2
10065145:	lea    ecx,[ebp+0x8c]
1006514b:	jmp    0x100131e2
10065150:	lea    eax,[ebp-0x70]
10065153:	jmp    0x100198de
10065158:	lea    ecx,[ebp-0xb4]
1006515e:	jmp    0x100131e2
10065163:	lea    ecx,[ebp+0x70]
10065166:	jmp    0x100131e2
1006516b:	lea    ecx,[ebp+0x54]
1006516e:	jmp    0x100131e2
10065173:	lea    ecx,[ebp+0x54]
10065176:	jmp    0x100131e2
1006517b:	lea    eax,[ebp-0x30]
1006517e:	jmp    0x10002081
10065183:	lea    ecx,[ebp-0xb4]
10065189:	jmp    0x100131e2
1006518e:	lea    ecx,[ebp-0x124]
10065194:	jmp    0x100131e2
10065199:	lea    ecx,[ebp-0x108]
1006519f:	jmp    0x100131e2
100651a4:	lea    ecx,[ebp-0x140]
100651aa:	jmp    0x100131e2
100651af:	lea    ecx,[ebp-0x178]
100651b5:	jmp    0x100131e2
100651ba:	lea    ecx,[ebp-0xec]
100651c0:	jmp    0x100131e2
100651c5:	lea    ecx,[ebp-0x194]
100651cb:	jmp    0x100131e2
100651d0:	lea    eax,[ebp-0x58]
100651d3:	jmp    0x100020aa
100651d8:	lea    ecx,[ebp+0x70]
100651db:	jmp    0x100131e2
100651e0:	lea    eax,[ebp-0x20]
100651e3:	jmp    0x1002b964
100651e8:	lea    ecx,[ebp-0x15c]
100651ee:	jmp    0x100131e2
100651f3:	lea    edi,[ebp-0x5c]
100651f6:	jmp    0x100024fb
100651fb:	lea    ecx,[ebp-0xd0]
10065201:	jmp    0x100131e2
10065206:	lea    edi,[ebp-0x48]
10065209:	jmp    0x100024fb
1006520e:	lea    ecx,[ebp+0x1c]
10065211:	jmp    0x100131e2
10065216:	lea    ecx,[ebp+0x54]
10065219:	jmp    0x100131e2
1006521e:	lea    edi,[ebp-0x60]
10065221:	jmp    0x100024fb
10065226:	lea    ecx,[ebp-0xd0]
1006522c:	jmp    0x100131e2
10065231:	lea    edi,[ebp-0x44]
10065234:	jmp    0x100024fb
10065239:	lea    ecx,[ebp+0x0]
1006523c:	jmp    0x100131e2
10065241:	lea    edi,[ebp-0x4c]
10065244:	jmp    0x100024fb
10065249:	lea    ecx,[ebp+0x38]
1006524c:	jmp    0x100131e2
10065251:	lea    eax,[ebp-0x28]
10065254:	jmp    0x1002b964
10065259:	lea    ecx,[ebp-0x98]
1006525f:	jmp    0x1001b6e2
10065264:	lea    ecx,[ebp-0x74]
10065267:	jmp    0x1001b6e2
1006526c:	lea    eax,[ebp-0x28]
1006526f:	jmp    0x10002081
10065274:	mov    edx,DWORD PTR [esp+0x8]
10065278:	lea    eax,[edx+0xc]
1006527b:	mov    ecx,DWORD PTR [edx-0x198]
10065281:	xor    ecx,eax
10065283:	call   0x10043615
10065288:	mov    ecx,DWORD PTR [edx+0xd0]
1006528e:	xor    ecx,eax
10065290:	call   0x10043615
10065295:	mov    eax,0x1007d38c
1006529a:	jmp    0x1005959f
1006529f:	lea    ecx,[ebp-0xb8]
100652a5:	jmp    0x100131e2
100652aa:	lea    ecx,[ebp-0x9c]
100652b0:	jmp    0x100131e2
100652b5:	lea    ecx,[ebp-0xf0]
100652bb:	jmp    0x100131e2
100652c0:	lea    ecx,[ebp-0xf0]
100652c6:	jmp    0x100131e2
100652cb:	lea    ecx,[ebp-0xf0]
100652d1:	jmp    0x100131e2
100652d6:	lea    ecx,[ebp-0xf0]
100652dc:	jmp    0x100131e2
100652e1:	lea    ecx,[ebp-0xf0]
100652e7:	jmp    0x100131e2
100652ec:	lea    ecx,[ebp-0xf0]
100652f2:	jmp    0x100131e2
100652f7:	lea    ecx,[ebp-0xf0]
100652fd:	jmp    0x100131e2
10065302:	lea    ecx,[ebp-0x144]
10065308:	jmp    0x100131e2
1006530d:	lea    eax,[ebp-0x128]
10065313:	jmp    0x100020aa
10065318:	lea    ecx,[ebp-0x124]
1006531e:	jmp    0x100131e2
10065323:	lea    ecx,[ebp-0x124]
10065329:	jmp    0x100131e2
1006532e:	lea    ecx,[ebp-0x124]
10065334:	jmp    0x100131e2
10065339:	mov    edx,DWORD PTR [esp+0x8]
1006533d:	lea    eax,[edx+0xc]
10065340:	mov    ecx,DWORD PTR [edx-0x14c]
10065346:	xor    ecx,eax
10065348:	call   0x10043615
1006534d:	mov    ecx,DWORD PTR [edx-0x8]
10065350:	xor    ecx,eax
10065352:	call   0x10043615
10065357:	mov    eax,0x1007d464
1006535c:	jmp    0x1005959f
10065361:	lea    ecx,[ebp+0xb0]
10065367:	jmp    0x100131e2
1006536c:	lea    ecx,[ebp-0x4c]
1006536f:	jmp    0x100131e2
10065374:	lea    eax,[ebp-0x24]
10065377:	jmp    0x100020aa
1006537c:	lea    eax,[ebp-0x1c]
1006537f:	jmp    0x10002081
10065384:	lea    edi,[ebp-0x14]
10065387:	jmp    0x100024fb
1006538c:	lea    edi,[ebp-0x14]
1006538f:	jmp    0x100024fb
10065394:	lea    esi,[ebp+0x0]
10065397:	jmp    0x1000c008
1006539c:	lea    ecx,[ebp+0xb0]
100653a2:	jmp    0x100131e2
100653a7:	lea    ecx,[ebp+0x94]
100653ad:	jmp    0x100131e2
100653b2:	lea    eax,[ebp-0x24]
100653b5:	jmp    0x100020aa
100653ba:	lea    ecx,[ebp+0xb0]
100653c0:	jmp    0x100131e2
100653c5:	lea    edi,[ebp-0x18]
100653c8:	jmp    0x100024fb
100653cd:	lea    edi,[ebp-0x18]
100653d0:	jmp    0x100024fb
100653d5:	mov    edx,DWORD PTR [esp+0x8]
100653d9:	lea    eax,[edx+0xc]
100653dc:	mov    ecx,DWORD PTR [edx-0x50]
100653df:	xor    ecx,eax
100653e1:	call   0x10043615
100653e6:	mov    ecx,DWORD PTR [edx+0xd8]
100653ec:	xor    ecx,eax
100653ee:	call   0x10043615
100653f3:	mov    eax,0x1007d534
100653f8:	jmp    0x1005959f
100653fd:	lea    eax,[ebp-0x40]
10065400:	jmp    0x1001b2c9
10065405:	lea    ecx,[ebp-0x30]
10065408:	jmp    0x100131e2
1006540d:	lea    ecx,[ebp-0x78]
10065410:	jmp    0x100131e2
10065415:	lea    ecx,[ebp-0x5c]
10065418:	jmp    0x100131e2
1006541d:	lea    eax,[ebp-0x34]
10065420:	jmp    0x100020aa
10065425:	mov    edx,DWORD PTR [esp+0x8]
10065429:	lea    eax,[edx+0xc]
1006542c:	mov    ecx,DWORD PTR [edx-0x80]
1006542f:	xor    ecx,eax
10065431:	call   0x10043615
10065436:	mov    ecx,DWORD PTR [edx-0x8]
10065439:	xor    ecx,eax
1006543b:	call   0x10043615
10065440:	mov    eax,0x1007d5c4
10065445:	jmp    0x1005959f
1006544a:	lea    eax,[ebp-0x18]
1006544d:	jmp    0x1000428d
10065452:	mov    edx,DWORD PTR [esp+0x8]
10065456:	lea    eax,[edx+0xc]
10065459:	mov    ecx,DWORD PTR [edx-0x1c]
1006545c:	xor    ecx,eax
1006545e:	call   0x10043615
10065463:	mov    eax,0x1007d624
10065468:	jmp    0x1005959f
1006546d:	lea    ecx,[ebp-0x4a4]
10065473:	jmp    0x100131e2
10065478:	lea    ecx,[ebp-0x530]
1006547e:	jmp    0x100131e2
10065483:	lea    ecx,[ebp-0x4dc]
10065489:	jmp    0x100131e2
1006548e:	lea    ecx,[ebp-0x4f8]
10065494:	jmp    0x100131e2
10065499:	lea    ecx,[ebp-0x434]
1006549f:	jmp    0x100131e2
100654a4:	lea    ecx,[ebp-0x450]
100654aa:	jmp    0x100131e2
100654af:	lea    ecx,[ebp-0x488]
100654b5:	jmp    0x100131e2
100654ba:	lea    ecx,[ebp-0x5a8]
100654c0:	jmp    0x1001b6e2
100654c5:	lea    ecx,[ebp-0x598]
100654cb:	jmp    0x1001b6e2
100654d0:	lea    eax,[ebp-0x5d4]
100654d6:	jmp    0x1002b964
100654db:	lea    edi,[ebp-0x5c0]
100654e1:	jmp    0x100024fb
100654e6:	lea    ecx,[ebp-0x46c]
100654ec:	jmp    0x100131e2
100654f1:	lea    ecx,[ebp-0x54c]
100654f7:	jmp    0x100131e2
100654fc:	lea    ecx,[ebp-0x584]
10065502:	jmp    0x100131e2
10065507:	lea    ecx,[ebp-0x514]
1006550d:	jmp    0x100131e2
10065512:	lea    ecx,[ebp-0x568]
10065518:	jmp    0x100131e2
1006551d:	lea    ecx,[ebp-0x5cc]
10065523:	jmp    0x1000a176
10065528:	lea    eax,[ebp-0x5c4]
1006552e:	jmp    0x1000a2dc
10065533:	mov    edx,DWORD PTR [esp+0x8]
10065537:	lea    eax,[edx-0x5e4]
1006553d:	mov    ecx,DWORD PTR [edx-0x5e8]
10065543:	xor    ecx,eax
10065545:	call   0x10043615
1006554a:	add    eax,0xc
1006554d:	mov    ecx,DWORD PTR [edx-0x8]
10065550:	xor    ecx,eax
10065552:	call   0x10043615
10065557:	mov    eax,0x1007d6f0
1006555c:	jmp    0x1005959f
10065561:	lea    eax,[ebp-0x14]
10065564:	jmp    0x1002b964
10065569:	lea    esi,[ebp-0x1c]
1006556c:	jmp    0x1002b910
10065571:	mov    edx,DWORD PTR [esp+0x8]
10065575:	lea    eax,[edx+0xc]
10065578:	mov    ecx,DWORD PTR [edx-0x20]
1006557b:	xor    ecx,eax
1006557d:	call   0x10043615
10065582:	mov    eax,0x1007d758
10065587:	jmp    0x1005959f
1006558c:	lea    eax,[ebp-0x14]
1006558f:	jmp    0x1002b964
10065594:	lea    esi,[ebp-0x1c]
10065597:	jmp    0x1002b910
1006559c:	mov    edx,DWORD PTR [esp+0x8]
100655a0:	lea    eax,[edx+0xc]
100655a3:	mov    ecx,DWORD PTR [edx-0x20]
100655a6:	xor    ecx,eax
100655a8:	call   0x10043615
100655ad:	mov    eax,0x1007d7c0
100655b2:	jmp    0x1005959f
100655b7:	lea    eax,[ebp-0x34]
100655ba:	jmp    0x10024c55
100655bf:	lea    eax,[ebp-0x2c]
100655c2:	jmp    0x1000e163
100655c7:	push   DWORD PTR [ebp-0x40]
100655ca:	call   0x10042fe2
100655cf:	pop    ecx
100655d0:	ret    
100655d1:	lea    eax,[ebp-0x40]
100655d4:	jmp    0x1000a2dc
100655d9:	lea    eax,[ebp-0x3c]
100655dc:	jmp    0x1000a18c
100655e1:	lea    eax,[ebp-0x38]
100655e4:	jmp    0x1000a18c
100655e9:	mov    edx,DWORD PTR [esp+0x8]
100655ed:	lea    eax,[edx-0x54]
100655f0:	mov    ecx,DWORD PTR [edx-0x58]
100655f3:	xor    ecx,eax
100655f5:	call   0x10043615
100655fa:	mov    eax,0x1007d814
100655ff:	jmp    0x1005959f
10065604:	lea    eax,[ebp-0x14]
10065607:	jmp    0x1000a18c
1006560c:	mov    edx,DWORD PTR [esp+0x8]
10065610:	lea    eax,[edx+0xc]
10065613:	mov    ecx,DWORD PTR [edx-0x18]
10065616:	xor    ecx,eax
10065618:	call   0x10043615
1006561d:	mov    eax,0x1007d874
10065622:	jmp    0x1005959f
10065627:	lea    eax,[ebp+0x8]
1006562a:	jmp    0x1001b1bf
1006562f:	lea    eax,[ebp-0x10]
10065632:	jmp    0x10034be0
10065637:	lea    ecx,[ebp-0x30]
1006563a:	jmp    0x100131e2
1006563f:	mov    edx,DWORD PTR [esp+0x8]
10065643:	lea    eax,[edx+0xc]
10065646:	mov    ecx,DWORD PTR [edx-0x38]
10065649:	xor    ecx,eax
1006564b:	call   0x10043615
10065650:	mov    eax,0x1007d8b0
10065655:	jmp    0x1005959f
1006565a:	lea    ecx,[ebp-0x30]
1006565d:	jmp    0x100131e2
10065662:	lea    eax,[ebp-0x54]
10065665:	jmp    0x10004628
1006566a:	lea    ecx,[ebp-0x4c]
1006566d:	jmp    0x100131e2
10065672:	lea    eax,[ebp-0x50]
10065675:	jmp    0x10034be0
1006567a:	push   DWORD PTR [ebp-0x58]
1006567d:	call   0x10042fe2
10065682:	pop    ecx
10065683:	ret    
10065684:	lea    esi,[ebp-0x6c]
10065687:	jmp    0x1002b012
1006568c:	lea    eax,[ebp-0x64]
1006568f:	jmp    0x10002081
10065694:	push   DWORD PTR [ebp-0x50]
10065697:	call   0x10042fe2
1006569c:	pop    ecx
1006569d:	ret    
1006569e:	lea    eax,[ebp-0x78]
100656a1:	jmp    0x1002d65d
100656a6:	lea    esi,[ebp-0x50]
100656a9:	jmp    0x1000463e
100656ae:	lea    esi,[ebp-0x60]
100656b1:	jmp    0x1000463e
100656b6:	mov    edx,DWORD PTR [esp+0x8]
100656ba:	lea    eax,[edx+0xc]
100656bd:	mov    ecx,DWORD PTR [edx-0x7c]
100656c0:	xor    ecx,eax
100656c2:	call   0x10043615
100656c7:	mov    ecx,DWORD PTR [edx-0x8]
100656ca:	xor    ecx,eax
100656cc:	call   0x10043615
100656d1:	mov    eax,0x1007d974
100656d6:	jmp    0x1005959f
100656db:	lea    ecx,[ebp-0xbc]
100656e1:	jmp    0x100131e2
100656e6:	lea    ecx,[ebp-0x68]
100656e9:	jmp    0x100131e2
100656ee:	lea    ecx,[ebp-0x30]
100656f1:	jmp    0x100131e2
100656f6:	lea    ecx,[ebp-0xa0]
100656fc:	jmp    0x100131e2
10065701:	lea    ecx,[ebp-0x84]
10065707:	jmp    0x100131e2
1006570c:	lea    ecx,[ebp-0x4c]
1006570f:	jmp    0x100131e2
10065714:	lea    ecx,[ebp-0xf4]
1006571a:	jmp    0x100131e2
1006571f:	lea    ecx,[ebp-0x114]
10065725:	jmp    0x100131e2
1006572a:	lea    ecx,[ebp-0xa0]
10065730:	jmp    0x100131e2
10065735:	lea    ecx,[ebp-0x4c]
10065738:	jmp    0x100131e2
1006573d:	lea    ecx,[ebp-0x84]
10065743:	jmp    0x100131e2
10065748:	lea    ecx,[ebp-0x114]
1006574e:	jmp    0x100131e2
10065753:	lea    ecx,[ebp-0xf4]
10065759:	jmp    0x100131e2
1006575e:	lea    ecx,[ebp-0xd8]
10065764:	jmp    0x100131e2
10065769:	push   DWORD PTR [ebp-0x120]
1006576f:	call   0x10042fe2
10065774:	pop    ecx
10065775:	ret    
10065776:	lea    ecx,[ebp-0x114]
1006577c:	jmp    0x100131e2
10065781:	lea    ecx,[ebp-0xa0]
10065787:	jmp    0x100131e2
1006578c:	lea    ecx,[ebp-0xf4]
10065792:	jmp    0x100131e2
10065797:	lea    ecx,[ebp-0x114]
1006579d:	jmp    0x100131e2
100657a2:	lea    ecx,[ebp-0x114]
100657a8:	jmp    0x100131e2
100657ad:	lea    ecx,[ebp-0xa0]
100657b3:	jmp    0x100131e2
100657b8:	lea    ecx,[ebp-0xf4]
100657be:	jmp    0x100131e2
100657c3:	lea    ecx,[ebp-0x114]
100657c9:	jmp    0x100131e2
100657ce:	lea    ecx,[ebp-0xf4]
100657d4:	jmp    0x100131e2
100657d9:	lea    ecx,[ebp-0x114]
100657df:	jmp    0x100131e2
100657e4:	lea    ecx,[ebp-0x114]
100657ea:	jmp    0x100131e2
100657ef:	lea    ecx,[ebp-0x114]
100657f5:	jmp    0x100131e2
100657fa:	mov    edx,DWORD PTR [esp+0x8]
100657fe:	lea    eax,[edx-0x12c]
10065804:	mov    ecx,DWORD PTR [edx-0x130]
1006580a:	xor    ecx,eax
1006580c:	call   0x10043615
10065811:	add    eax,0xc
10065814:	mov    ecx,DWORD PTR [edx-0x8]
10065817:	xor    ecx,eax
10065819:	call   0x10043615
1006581e:	mov    eax,0x1007da78
10065823:	jmp    0x1005959f
10065828:	lea    ecx,[ebp+0xa8]
1006582e:	jmp    0x100131e2
10065833:	lea    eax,[ebp-0x14]
10065836:	jmp    0x1000428d
1006583b:	lea    esi,[ebp+0x0]
1006583e:	jmp    0x10003432
10065843:	lea    ecx,[ebp-0x30]
10065846:	jmp    0x1000a176
1006584b:	mov    edx,DWORD PTR [esp+0x8]
1006584f:	lea    eax,[edx+0xc]
10065852:	mov    ecx,DWORD PTR [edx-0x38]
10065855:	xor    ecx,eax
10065857:	call   0x10043615
1006585c:	mov    ecx,DWORD PTR [edx+0xd0]
10065862:	xor    ecx,eax
10065864:	call   0x10043615
10065869:	mov    eax,0x1007daf0
1006586e:	jmp    0x1005959f
10065873:	jmp    0x10036f40
10065878:	lea    ecx,[ebp-0x14]
1006587b:	jmp    0x10016239
10065880:	mov    edx,DWORD PTR [esp+0x8]
10065884:	lea    eax,[edx+0xc]
10065887:	mov    ecx,DWORD PTR [edx-0x18]
1006588a:	xor    ecx,eax
1006588c:	call   0x10043615
10065891:	mov    eax,0x1007db58
10065896:	jmp    0x1005959f
1006589b:	lea    eax,[ebp-0x2c]
1006589e:	jmp    0x1000e163
100658a3:	push   DWORD PTR [ebp-0x40]
100658a6:	call   0x10042fe2
100658ab:	pop    ecx
100658ac:	ret    
100658ad:	lea    ecx,[ebp-0x40]
100658b0:	jmp    0x1000a176
100658b5:	lea    eax,[ebp-0x38]
100658b8:	jmp    0x1000a18c
100658bd:	lea    eax,[ebp-0x30]
100658c0:	jmp    0x10039fe0
100658c5:	mov    edx,DWORD PTR [esp+0x8]
100658c9:	lea    eax,[edx-0x4c]
100658cc:	mov    ecx,DWORD PTR [edx-0x50]
100658cf:	xor    ecx,eax
100658d1:	call   0x10043615
100658d6:	mov    eax,0x1007dba4
100658db:	jmp    0x1005959f
100658e0:	jmp    0x10036f40
100658e5:	lea    ecx,[ebp-0x14]
100658e8:	jmp    0x10016239
100658ed:	mov    edx,DWORD PTR [esp+0x8]
100658f1:	lea    eax,[edx+0xc]
100658f4:	mov    ecx,DWORD PTR [edx-0x18]
100658f7:	xor    ecx,eax
100658f9:	call   0x10043615
100658fe:	mov    eax,0x1007dc0c
10065903:	jmp    0x1005959f
10065908:	lea    ecx,[ebp-0xa88]
1006590e:	jmp    0x10016239
10065913:	push   0x10016239
10065918:	push   0x40
1006591a:	push   0x4
1006591c:	lea    eax,[ebp-0x210]
10065922:	push   eax
10065923:	call   0x1004325e
10065928:	ret    
10065929:	push   0x10016239
1006592e:	push   0x40
10065930:	push   0x4
10065932:	lea    eax,[ebp-0x310]
10065938:	push   eax
10065939:	call   0x1004325e
1006593e:	ret    
1006593f:	push   0x10016239
10065944:	push   0x40
10065946:	push   0x4
10065948:	lea    eax,[ebp-0x110]
1006594e:	push   eax
1006594f:	call   0x1004325e
10065954:	ret    
10065955:	lea    ecx,[ebp-0xa8c]
1006595b:	jmp    0x10016239
10065960:	mov    edx,DWORD PTR [esp+0x8]
10065964:	lea    eax,[edx-0xa94]
1006596a:	mov    ecx,DWORD PTR [edx-0xa98]
10065970:	xor    ecx,eax
10065972:	call   0x10043615
10065977:	mov    eax,0x1007dc58
1006597c:	jmp    0x1005959f
10065981:	lea    ecx,[ebp-0x10]
10065984:	jmp    0x10016239
10065989:	mov    edx,DWORD PTR [esp+0x8]
1006598d:	lea    eax,[edx+0xc]
10065990:	mov    ecx,DWORD PTR [edx-0x18]
10065993:	xor    ecx,eax
10065995:	call   0x10043615
1006599a:	mov    eax,0x1007dc84
1006599f:	jmp    0x1005959f
100659a4:	mov    eax,0x10082fa0
100659a9:	jmp    0x1001b1bf
100659ae:	mov    edx,DWORD PTR [esp+0x8]
100659b2:	lea    eax,[edx+0xc]
100659b5:	mov    ecx,DWORD PTR [edx-0x10]
100659b8:	xor    ecx,eax
100659ba:	call   0x10043615
100659bf:	mov    eax,0x1007dccc
100659c4:	jmp    0x1005959f
100659c9:	mov    esi,0x10082e14
100659ce:	jmp    0x1000463e
100659d3:	mov    esi,0x10082e18
100659d8:	jmp    0x1000463e
100659dd:	mov    edx,DWORD PTR [esp+0x8]
100659e1:	lea    eax,[edx+0xc]
100659e4:	mov    ecx,DWORD PTR [edx-0x10]
100659e7:	xor    ecx,eax
100659e9:	call   0x10043615
100659ee:	mov    eax,0x1007dd00
100659f3:	jmp    0x1005959f
100659f8:	int3   
100659f9:	int3   
100659fa:	int3   
100659fb:	int3   
100659fc:	int3   
100659fd:	int3   
100659fe:	int3   
100659ff:	int3   
10065a00:	push   0x32
10065a02:	push   0xa
10065a04:	push   0x10082dc8
10065a09:	call   0x10019b4d
10065a0e:	push   0x10065ed0
10065a13:	call   0x10043166
10065a18:	pop    ecx
10065a19:	ret    
10065a1a:	xor    eax,eax
10065a1c:	push   eax
10065a1d:	push   eax
10065a1e:	push   eax
10065a1f:	call   DWORD PTR ds:0x10067080
10065a25:	mov    ds:0x10082dec,eax
10065a2a:	ret    
10065a2b:	push   0x10065edb
10065a30:	call   0x10043166
10065a35:	pop    ecx
10065a36:	ret    
10065a37:	push   0x1006e10c
10065a3c:	push   0xd
10065a3e:	mov    ecx,0x1006e134
10065a43:	call   0x100042b4
10065a48:	pop    ecx
10065a49:	pop    ecx
10065a4a:	mov    ds:0x10082e00,eax
10065a4f:	ret    
10065a50:	push   0x1006e144
10065a55:	push   0x10
10065a57:	mov    ecx,0x1006e17c
10065a5c:	call   0x100042b4
10065a61:	pop    ecx
10065a62:	pop    ecx
10065a63:	mov    ds:0x10082e04,eax
10065a68:	ret    
10065a69:	push   0x1006e190
10065a6e:	push   0x11
10065a70:	mov    ecx,0x1006e1d0
10065a75:	call   0x100042b4
10065a7a:	pop    ecx
10065a7b:	pop    ecx
10065a7c:	mov    ds:0x10082dfc,eax
10065a81:	ret    
10065a82:	push   0x1006e1e4
10065a87:	push   0x11
10065a89:	mov    ecx,0x1006e224
10065a8e:	call   0x100042b4
10065a93:	pop    ecx
10065a94:	pop    ecx
10065a95:	mov    ds:0x10082df8,eax
10065a9a:	ret    
10065a9b:	call   0x1000c044
10065aa0:	push   0x10065ef6
10065aa5:	call   0x10043166
10065aaa:	pop    ecx
10065aab:	ret    
10065aac:	push   0x1006ee10
10065ab1:	push   0x2
10065ab3:	mov    ecx,0x1006ee50
10065ab8:	call   0x100042b4
10065abd:	pop    ecx
10065abe:	pop    ecx
10065abf:	mov    ds:0x100834a8,eax
10065ac4:	ret    
10065ac5:	push   0x1006f338
10065aca:	push   0x1
10065acc:	mov    ecx,0x1006e584
10065ad1:	call   0x100042b4
10065ad6:	pop    ecx
10065ad7:	pop    ecx
10065ad8:	mov    ds:0x100834ac,eax
10065add:	ret    
10065ade:	push   0x1006f3a4
10065ae3:	push   0x10
10065ae5:	mov    ecx,0x1006f3e0
10065aea:	call   0x100042b4
10065aef:	pop    ecx
10065af0:	pop    ecx
10065af1:	mov    ds:0x10082e30,eax
10065af6:	ret    
10065af7:	push   0x1006f3f4
10065afc:	push   0x10
10065afe:	mov    ecx,0x1006f42c
10065b03:	call   0x100042b4
10065b08:	pop    ecx
10065b09:	pop    ecx
10065b0a:	mov    ds:0x10082e2c,eax
10065b0f:	ret    
10065b10:	push   0x1006f440
10065b15:	push   0x10
10065b17:	mov    ecx,0x1006f478
10065b1c:	call   0x100042b4
10065b21:	pop    ecx
10065b22:	pop    ecx
10065b23:	mov    ds:0x10082e28,eax
10065b28:	ret    
10065b29:	push   edi
10065b2a:	mov    edi,0x10082e38
10065b2f:	call   0x10012dff
10065b34:	push   0x10065f54
10065b39:	call   0x10043166
10065b3e:	pop    ecx
10065b3f:	pop    edi
10065b40:	ret    
10065b41:	xor    eax,eax
10065b43:	push   eax
10065b44:	push   eax
10065b45:	push   eax
10065b46:	call   DWORD PTR ds:0x10067080
10065b4c:	mov    ds:0x10082e34,eax
10065b51:	ret    
10065b52:	call   0x100131ec
10065b57:	push   0x10065f61
10065b5c:	call   0x10043166
10065b61:	pop    ecx
10065b62:	ret    
10065b63:	call   0x10018377
10065b68:	mov    ds:0x10082eec,eax
10065b6d:	mov    BYTE PTR [eax+0x15],0x1
10065b71:	mov    eax,ds:0x10082eec
10065b76:	mov    DWORD PTR [eax+0x4],eax
10065b79:	mov    eax,ds:0x10082eec
10065b7e:	mov    DWORD PTR [eax],eax
10065b80:	mov    eax,ds:0x10082eec
10065b85:	mov    DWORD PTR [eax+0x8],eax
10065b88:	and    DWORD PTR ds:0x10082ef0,0x0
10065b8f:	push   0x10065f66
10065b94:	call   0x10043166
10065b99:	pop    ecx
10065b9a:	ret    
10065b9b:	push   esi
10065b9c:	mov    esi,0x10082f08
10065ba1:	push   edi
10065ba2:	mov    ecx,esi
10065ba4:	call   0x100147a5
10065ba9:	xor    eax,eax
10065bab:	mov    edi,0x10082ef8
10065bb0:	mov    ecx,esi
10065bb2:	mov    ds:0x10082efc,eax
10065bb7:	mov    ds:0x10082f04,eax
10065bbc:	mov    ds:0x10082f00,eax
10065bc1:	mov    DWORD PTR ds:0x10082c64,edi
10065bc7:	mov    ds:0x10082f20,eax
10065bcc:	call   0x100147b9
10065bd1:	test   eax,eax
10065bd3:	jge    0x10065bde
10065bd5:	mov    BYTE PTR ds:0x10082c60,0x1
10065bdc:	jmp    0x10065be8
10065bde:	mov    DWORD PTR ds:0x10082efc,0x24
10065be8:	push   0x10065f6b
10065bed:	mov    DWORD PTR ds:0x10082ef8,0x10070dfc
10065bf7:	mov    DWORD PTR ds:0x10082c78,edi
10065bfd:	call   0x10043166
10065c02:	pop    ecx
10065c03:	pop    edi
10065c04:	pop    esi
10065c05:	ret    
10065c06:	xor    eax,eax
10065c08:	push   eax
10065c09:	push   eax
10065c0a:	push   eax
10065c0b:	call   DWORD PTR ds:0x10067080
10065c11:	mov    ds:0x10082f38,eax
10065c16:	ret    
10065c17:	push   0x10065f7f
10065c1c:	call   0x10043166
10065c21:	pop    ecx
10065c22:	ret    
10065c23:	call   0x100196a5
10065c28:	mov    ds:0x10082f40,eax
10065c2d:	mov    BYTE PTR [eax+0x29],0x1
10065c31:	mov    eax,ds:0x10082f40
10065c36:	mov    DWORD PTR [eax+0x4],eax
10065c39:	mov    eax,ds:0x10082f40
10065c3e:	mov    DWORD PTR [eax],eax
10065c40:	mov    eax,ds:0x10082f40
10065c45:	mov    DWORD PTR [eax+0x8],eax
10065c48:	and    DWORD PTR ds:0x10082f44,0x0
10065c4f:	push   0x10065f8c
10065c54:	call   0x10043166
10065c59:	pop    ecx
10065c5a:	ret    
10065c5b:	call   0x1001999c
10065c60:	mov    ds:0x10082f4c,eax
10065c65:	xor    eax,eax
10065c67:	push   eax
10065c68:	push   eax
10065c69:	push   eax
10065c6a:	mov    ds:0x10082f50,eax
10065c6f:	call   DWORD PTR ds:0x10067080
10065c75:	push   0x10065f96
10065c7a:	mov    ds:0x10082f54,eax
10065c7f:	call   0x10043166
10065c84:	pop    ecx
10065c85:	ret    
10065c86:	push   0x32
10065c88:	push   0xa
10065c8a:	push   0x10082f58
10065c8f:	call   0x10019b4d
10065c94:	push   0x10065fb6
10065c99:	call   0x10043166
10065c9e:	pop    ecx
10065c9f:	ret    
10065ca0:	push   0xfa
10065ca5:	push   0x32
10065ca7:	push   0x10082f7c
10065cac:	call   0x10019b4d
10065cb1:	push   0x10065fc1
10065cb6:	call   0x10043166
10065cbb:	pop    ecx
10065cbc:	ret    
10065cbd:	push   0x0
10065cbf:	mov    eax,0x100659ae
10065cc4:	call   0x10059df5
10065cc9:	call   0x1001b348
10065cce:	xor    esi,esi
10065cd0:	mov    ds:0x10082fa4,eax
10065cd5:	mov    DWORD PTR ds:0x10082fa8,esi
10065cdb:	mov    DWORD PTR [esp+0x18],esi
10065cdf:	call   0x1001b360
10065ce4:	push   esi
10065ce5:	push   esi
10065ce6:	push   esi
10065ce7:	mov    ds:0x10082fb0,eax
10065cec:	mov    DWORD PTR ds:0x10082fb4,esi
10065cf2:	mov    DWORD PTR ds:0x10082fbc,esi
10065cf8:	call   DWORD PTR ds:0x10067080
10065cfe:	push   0x10065fcc
10065d03:	mov    ds:0x10082fb8,eax
10065d08:	call   0x10043166
10065d0d:	pop    ecx
10065d0e:	call   0x10059ecd
10065d13:	ret    
10065d14:	call   0x10021d48
10065d19:	mov    ds:0x10082fc8,eax
10065d1e:	mov    BYTE PTR [eax+0x21],0x1
10065d22:	mov    eax,ds:0x10082fc8
10065d27:	mov    DWORD PTR [eax+0x4],eax
10065d2a:	mov    eax,ds:0x10082fc8
10065d2f:	mov    DWORD PTR [eax],eax
10065d31:	mov    eax,ds:0x10082fc8
10065d36:	mov    DWORD PTR [eax+0x8],eax
10065d39:	and    DWORD PTR ds:0x10082fcc,0x0
10065d40:	push   0x10065fe2
10065d45:	call   0x10043166
10065d4a:	pop    ecx
10065d4b:	ret    
10065d4c:	xor    eax,eax
10065d4e:	push   eax
10065d4f:	push   eax
10065d50:	push   eax
10065d51:	call   DWORD PTR ds:0x10067080
10065d57:	mov    ds:0x10082fc0,eax
10065d5c:	ret    
10065d5d:	xor    eax,eax
10065d5f:	push   eax
10065d60:	push   eax
10065d61:	push   eax
10065d62:	call   DWORD PTR ds:0x10067080
10065d68:	mov    ds:0x10082fd0,eax
10065d6d:	ret    
10065d6e:	xor    eax,eax
10065d70:	push   eax
10065d71:	push   eax
10065d72:	push   eax
10065d73:	push   eax
10065d74:	call   DWORD PTR ds:0x10067114
10065d7a:	mov    ds:0x10082fdc,eax
10065d7f:	ret    
10065d80:	xor    eax,eax
10065d82:	push   eax
10065d83:	push   eax
10065d84:	push   eax
10065d85:	push   eax
10065d86:	call   DWORD PTR ds:0x10067114
10065d8c:	mov    ds:0x10082fd4,eax
10065d91:	ret    
10065d92:	xor    eax,eax
10065d94:	push   eax
10065d95:	push   eax
10065d96:	push   eax
10065d97:	push   eax
10065d98:	call   DWORD PTR ds:0x10067114
10065d9e:	mov    ds:0x10082fd8,eax
10065da3:	ret    
10065da4:	call   0x10026e6c
10065da9:	and    DWORD PTR ds:0x10083000,0x0
10065db0:	push   0x1006600e
10065db5:	mov    ds:0x10082ffc,eax
10065dba:	call   0x10043166
10065dbf:	pop    ecx
10065dc0:	ret    
10065dc1:	call   0x10026e6c
10065dc6:	and    DWORD PTR ds:0x10082ff4,0x0
10065dcd:	push   0x1006602e
10065dd2:	mov    ds:0x10082ff0,eax
10065dd7:	call   0x10043166
10065ddc:	pop    ecx
10065ddd:	ret    
10065dde:	call   0x10026e6c
10065de3:	and    DWORD PTR ds:0x1008300c,0x0
10065dea:	push   0x1006604e
10065def:	mov    ds:0x10083008,eax
10065df4:	call   0x10043166
10065df9:	pop    ecx
10065dfa:	ret    
10065dfb:	call   0x10026e6c
10065e00:	and    DWORD PTR ds:0x10082fe8,0x0
10065e07:	push   0x1006606e
10065e0c:	mov    ds:0x10082fe4,eax
10065e11:	call   0x10043166
10065e16:	pop    ecx
10065e17:	ret    
10065e18:	int3   
10065e19:	int3   
10065e1a:	int3   
10065e1b:	int3   
10065e1c:	int3   
10065e1d:	int3   
10065e1e:	int3   
10065e1f:	int3   
10065e20:	push   0x0
10065e22:	push   0x0
10065e24:	push   0x1
10065e26:	push   0x0
10065e28:	call   DWORD PTR ds:0x10067114
10065e2e:	mov    ds:0x10083010,eax
10065e33:	ret    
10065e34:	int3   
10065e35:	int3   
10065e36:	int3   
10065e37:	int3   
10065e38:	int3   
10065e39:	int3   
10065e3a:	int3   
10065e3b:	int3   
10065e3c:	int3   
10065e3d:	int3   
10065e3e:	int3   
10065e3f:	int3   
10065e40:	push   0x10066090
10065e45:	call   0x10043166
10065e4a:	pop    ecx
10065e4b:	ret    
10065e4c:	int3   
10065e4d:	int3   
10065e4e:	int3   
10065e4f:	int3   
10065e50:	push   0x100660e0
10065e55:	call   0x10043166
10065e5a:	pop    ecx
10065e5b:	ret    
10065e5c:	call   DWORD PTR ds:0x100671b4
10065e62:	push   0x100660ec
10065e67:	mov    DWORD PTR ds:0x10082a60,0x1006c8e8
10065e71:	mov    ds:0x10082a64,eax
10065e76:	mov    BYTE PTR ds:0x10082a68,0x0
10065e7d:	call   0x10043166
10065e82:	pop    ecx
10065e83:	ret    
10065e84:	push   0x10082a60
10065e89:	mov    ecx,0x10082a6c
10065e8e:	call   0x10056e9c
10065e93:	push   0x100660f6
10065e98:	call   0x10043166
10065e9d:	pop    ecx
10065e9e:	ret    
10065e9f:	mov    ecx,0x10082a88
10065ea4:	call   0x1005725c
10065ea9:	push   0x10066101
10065eae:	call   0x10043166
10065eb3:	pop    ecx
10065eb4:	ret    
10065eb5:	mov    ecx,0x10082ac4
10065eba:	call   0x10057236
10065ebf:	push   0x1006610b
10065ec4:	call   0x10043166
10065ec9:	pop    ecx
10065eca:	ret    
10065ecb:	int3   
10065ecc:	int3   
10065ecd:	int3   
10065ece:	int3   
10065ecf:	int3   
10065ed0:	push   0x10082dc8
10065ed5:	call   0x100011fd
10065eda:	ret    
10065edb:	ret    
10065edc:	jmp    0x100054a7
10065ee1:	jmp    0x10005154
10065ee6:	mov    eax,ds:0x10083498
10065eeb:	test   eax,eax
10065eed:	je     0x10065ef5
10065eef:	mov    ecx,DWORD PTR [eax]
10065ef1:	push   eax
10065ef2:	call   DWORD PTR [ecx+0x8]
10065ef5:	ret    
10065ef6:	push   0x0
10065ef8:	mov    eax,0x100659dd
10065efd:	call   0x10059df5
10065f02:	push   0xffffffff
10065f04:	mov    DWORD PTR [esp+0x1c],0x1
10065f0c:	push   DWORD PTR ds:0x10082e18
10065f12:	call   DWORD PTR ds:0x1006707c
10065f18:	mov    eax,0x10082e1c
10065f1d:	call   0x1000d79f
10065f22:	mov    eax,ds:0x10082e18
10065f27:	test   eax,eax
10065f29:	mov    esi,DWORD PTR ds:0x10067078
10065f2f:	je     0x10065f34
10065f31:	push   eax
10065f32:	call   esi
10065f34:	mov    eax,ds:0x10082e14
10065f39:	and    DWORD PTR ds:0x10082e18,0x0
10065f40:	test   eax,eax
10065f42:	je     0x10065f47
10065f44:	push   eax
10065f45:	call   esi
10065f47:	and    DWORD PTR ds:0x10082e14,0x0
10065f4e:	call   0x10059ecd
10065f53:	ret    
10065f54:	push   esi
10065f55:	mov    esi,0x10082e38
10065f5a:	call   0x1000bfa0
10065f5f:	pop    esi
10065f60:	ret    
10065f61:	jmp    0x10013263
10065f66:	jmp    0x10017bb7
10065f6b:	mov    DWORD PTR ds:0x10082ef8,0x10070dfc
10065f75:	mov    ecx,0x10082ef8
10065f7a:	jmp    0x10014813
10065f7f:	push   esi
10065f80:	mov    esi,0x10082f28
10065f85:	call   0x100047a5
10065f8a:	pop    esi
10065f8b:	ret    
10065f8c:	mov    eax,0x10082f3c
10065f91:	jmp    0x10019287
10065f96:	push   esi
10065f97:	mov    esi,0x10082f48
10065f9c:	call   0x100198f5
10065fa1:	push   DWORD PTR ds:0x10082f4c
10065fa7:	call   0x10042fe2
10065fac:	and    DWORD PTR ds:0x10082f4c,0x0
10065fb3:	pop    ecx
10065fb4:	pop    esi
10065fb5:	ret    
10065fb6:	push   0x10082f58
10065fbb:	call   0x100011fd
10065fc0:	ret    
10065fc1:	push   0x10082f7c
10065fc6:	call   0x100011fd
10065fcb:	ret    
10065fcc:	push   esi
10065fcd:	mov    esi,0x10082fac
10065fd2:	call   0x1001b293
10065fd7:	mov    eax,0x10082fa0
10065fdc:	pop    esi
10065fdd:	jmp    0x1001b1bf
10065fe2:	jmp    0x10020a36
10065fe7:	mov    eax,ds:0x1008349c
10065fec:	test   eax,eax
10065fee:	push   esi
10065fef:	mov    esi,eax
10065ff1:	je     0x1006600c
10065ff3:	push   0x10022d5d
10065ff8:	push   0x2
10065ffa:	push   0x14
10065ffc:	add    eax,0x4
10065fff:	push   eax
10066000:	call   0x1004325e
10066005:	push   esi
10066006:	call   0x10042fe2
1006600b:	pop    ecx
1006600c:	pop    esi
1006600d:	ret    
1006600e:	push   esi
1006600f:	mov    esi,0x10082ff8
10066014:	call   0x10026ef4
10066019:	push   DWORD PTR ds:0x10082ffc
1006601f:	call   0x10042fe2
10066024:	and    DWORD PTR ds:0x10082ffc,0x0
1006602b:	pop    ecx
1006602c:	pop    esi
1006602d:	ret    
1006602e:	push   esi
1006602f:	mov    esi,0x10082fec
10066034:	call   0x10026ef4
10066039:	push   DWORD PTR ds:0x10082ff0
1006603f:	call   0x10042fe2
10066044:	and    DWORD PTR ds:0x10082ff0,0x0
1006604b:	pop    ecx
1006604c:	pop    esi
1006604d:	ret    
1006604e:	push   esi
1006604f:	mov    esi,0x10083004
10066054:	call   0x10026ef4
10066059:	push   DWORD PTR ds:0x10083008
1006605f:	call   0x10042fe2
10066064:	and    DWORD PTR ds:0x10083008,0x0
1006606b:	pop    ecx
1006606c:	pop    esi
1006606d:	ret    
1006606e:	push   esi
1006606f:	mov    esi,0x10082fe0
10066074:	call   0x10026ef4
10066079:	push   DWORD PTR ds:0x10082fe4
1006607f:	call   0x10042fe2
10066084:	and    DWORD PTR ds:0x10082fe4,0x0
1006608b:	pop    ecx
1006608c:	pop    esi
1006608d:	ret    
1006608e:	int3   
1006608f:	int3   
10066090:	cmp    DWORD PTR ds:0x10081744,0x10
10066097:	jb     0x100660a7
10066099:	mov    eax,ds:0x10081730
1006609e:	push   eax
1006609f:	call   0x10042fe2
100660a4:	add    esp,0x4
100660a7:	xor    eax,eax
100660a9:	mov    DWORD PTR ds:0x10081744,0xf
100660b3:	mov    ds:0x10081740,eax
100660b8:	mov    ds:0x10081730,al
100660bd:	ret    
100660be:	mov    DWORD PTR ds:0x10081ae0,0x100675a0
100660c8:	mov    ecx,0x10081ae0
100660cd:	jmp    0x10043390
100660d2:	int3   
100660d3:	int3   
100660d4:	int3   
100660d5:	int3   
100660d6:	int3   
100660d7:	int3   
100660d8:	int3   
100660d9:	int3   
100660da:	int3   
100660db:	int3   
100660dc:	int3   
100660dd:	int3   
100660de:	int3   
100660df:	int3   
100660e0:	push   0x10080f90
100660e5:	call   DWORD PTR ds:0x10067284
100660eb:	ret    
100660ec:	mov    ecx,0x10082a60
100660f1:	jmp    0x10056df0
100660f6:	mov    DWORD PTR ds:0x10082a6c,0x1006c8fc
10066100:	ret    
10066101:	mov    ecx,0x10082a88
10066106:	jmp    0x100571ca
1006610b:	mov    ecx,0x10082ac4
10066110:	jmp    0x1005730b
