
a2e6bed37e183a6ea94a63b0f2c775e940cad6f9f322cae88039a1f0372cfc17.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	mov    ecx,DWORD PTR [ebp+0x10]
   10614:	and    eax,0x7ffffffe
   10619:	xor    eax,DWORD PTR [ebp+0xc]
   1061c:	and    cl,0x1
   1061f:	movzx  ecx,cl
   10622:	shr    eax,1
   10624:	neg    ecx
   10626:	sbb    ecx,ecx
   10628:	and    ecx,0x9908b0df
   1062e:	xor    eax,ecx
   10630:	xor    eax,DWORD PTR [ebp+0x8]
   10633:	pop    ebp
   10634:	ret    0xc
   10637:	int3   
   10638:	int3   
   10639:	int3   
   1063a:	int3   
   1063b:	int3   
   1063c:	mov    edi,edi
   1063e:	push   ebp
   1063f:	mov    ebp,esp
   10641:	mov    eax,DWORD PTR [ebp+0x8]
   10644:	xor    edx,edx
   10646:	inc    edx
   10647:	mov    DWORD PTR [ecx],eax
   10649:	push   esi
   1064a:	mov    eax,DWORD PTR [ecx]
   1064c:	mov    esi,eax
   1064e:	shr    esi,0x1e
   10651:	xor    esi,eax
   10653:	imul   esi,esi,0x6c078965
   10659:	add    ecx,0x4
   1065c:	add    esi,edx
   1065e:	inc    edx
   1065f:	cmp    edx,0x270
   10665:	mov    DWORD PTR [ecx],esi
   10667:	jl     0x1064a
   10669:	pop    esi
   1066a:	pop    ebp
   1066b:	ret    0x4
   1066e:	int3   
   1066f:	int3   
   10670:	int3   
   10671:	int3   
   10672:	int3   
   10673:	int3   
   10674:	mov    edi,edi
   10676:	push   ebp
   10677:	mov    ebp,esp
   10679:	push   ecx
   1067a:	push   ebx
   1067b:	push   esi
   1067c:	push   edi
   1067d:	mov    edi,ecx
   1067f:	mov    esi,edi
   10681:	mov    ebx,0xe3
   10686:	push   DWORD PTR [esi+0x4]
   10689:	mov    ecx,edi
   1068b:	push   DWORD PTR [esi]
   1068d:	dec    ebx
   1068e:	push   DWORD PTR [esi+0x634]
   10694:	call   0x10606
   10699:	mov    DWORD PTR [esi],eax
   1069b:	add    esi,0x4
   1069e:	test   ebx,ebx
   106a0:	jne    0x10686
   106a2:	mov    DWORD PTR [ebp-0x4],0x18c
   106a9:	lea    ebx,[esi+0x4]
   106ac:	push   DWORD PTR [ebx]
   106ae:	mov    ecx,edi
   106b0:	push   DWORD PTR [esi]
   106b2:	push   DWORD PTR [esi-0x38c]
   106b8:	call   0x10606
   106bd:	dec    DWORD PTR [ebp-0x4]
   106c0:	mov    DWORD PTR [esi],eax
   106c2:	mov    esi,ebx
   106c4:	jne    0x106a9
   106c6:	push   DWORD PTR [edi]
   106c8:	mov    ecx,edi
   106ca:	push   DWORD PTR [esi]
   106cc:	push   DWORD PTR [esi-0x38c]
   106d2:	call   0x10606
   106d7:	mov    DWORD PTR [esi],eax
   106d9:	mov    DWORD PTR [edi+0x9c4],0x270
   106e3:	mov    DWORD PTR [edi+0x9c0],edi
   106e9:	pop    edi
   106ea:	pop    esi
   106eb:	pop    ebx
   106ec:	leave  
   106ed:	ret    
   106ee:	int3   
   106ef:	int3   
   106f0:	int3   
   106f1:	int3   
   106f2:	int3   
   106f3:	int3   
   106f4:	mov    edi,edi
   106f6:	push   ebp
   106f7:	mov    ebp,esp
   106f9:	push   esi
   106fa:	push   DWORD PTR [ebp+0x8]
   106fd:	mov    esi,ecx
   106ff:	call   0x1063c
   10704:	mov    ecx,esi
   10706:	call   0x10674
   1070b:	pop    esi
   1070c:	pop    ebp
   1070d:	ret    0x4
   10710:	int3   
   10711:	int3   
   10712:	int3   
   10713:	int3   
   10714:	int3   
   10715:	int3   
   10716:	mov    edi,edi
   10718:	push   esi
   10719:	push   edi
   1071a:	mov    edi,ecx
   1071c:	lea    esi,[edi+0x9c4]
   10722:	cmp    DWORD PTR [esi],0x0
   10725:	jne    0x1072c
   10727:	call   0x10674
   1072c:	dec    DWORD PTR [esi]
   1072e:	lea    eax,[edi+0x9c0]
   10734:	mov    edx,DWORD PTR [eax]
   10736:	mov    ecx,DWORD PTR [edx]
   10738:	add    edx,0x4
   1073b:	mov    DWORD PTR [eax],edx
   1073d:	mov    eax,ecx
   1073f:	shr    eax,0xb
   10742:	xor    ecx,eax
   10744:	mov    eax,ecx
   10746:	and    eax,0xff3a58ad
   1074b:	shl    eax,0x7
   1074e:	xor    ecx,eax
   10750:	mov    eax,ecx
   10752:	and    eax,0xffffdf8c
   10757:	shl    eax,0xf
   1075a:	xor    ecx,eax
   1075c:	mov    eax,ecx
   1075e:	shr    eax,0x12
   10761:	pop    edi
   10762:	xor    eax,ecx
   10764:	pop    esi
   10765:	ret    
   10766:	int3   
   10767:	int3   
   10768:	int3   
   10769:	int3   
   1076a:	int3   
   1076b:	int3   
   1076c:	mov    edi,edi
   1076e:	push   ebp
   1076f:	mov    ebp,esp
   10771:	push   esi
   10772:	mov    esi,DWORD PTR [ebp+0x8]
   10775:	shr    esi,1
   10777:	or     esi,DWORD PTR [ebp+0x8]
   1077a:	push   edi
   1077b:	mov    eax,esi
   1077d:	shr    eax,0x2
   10780:	or     esi,eax
   10782:	mov    eax,esi
   10784:	shr    eax,0x4
   10787:	or     esi,eax
   10789:	mov    eax,esi
   1078b:	shr    eax,0x8
   1078e:	or     esi,eax
   10790:	mov    eax,esi
   10792:	shr    eax,0x10
   10795:	mov    edi,ecx
   10797:	or     esi,eax
   10799:	mov    ecx,edi
   1079b:	call   0x10716
   107a0:	and    eax,esi
   107a2:	cmp    eax,DWORD PTR [ebp+0x8]
   107a5:	ja     0x10799
   107a7:	pop    edi
   107a8:	pop    esi
   107a9:	pop    ebp
   107aa:	ret    0x4
   107ad:	int3   
   107ae:	int3   
   107af:	int3   
   107b0:	int3   
   107b1:	int3   
   107b2:	mov    edi,edi
   107b4:	push   ebp
   107b5:	mov    ebp,esp
   107b7:	sub    esp,0xa04
   107bd:	push   ebx
   107be:	push   esi
   107bf:	mov    esi,DWORD PTR [ebp+0x14]
   107c2:	push   edi
   107c3:	test   esi,esi
   107c5:	jne    0x108a0
   107cb:	xor    ecx,ecx
   107cd:	lea    eax,[ebp-0x3c]
   107d0:	mov    edx,0xff
   107d5:	shl    edx,cl
   107d7:	and    edx,DWORD PTR [ebp+0x8]
   107da:	shr    edx,cl
   107dc:	inc    ecx
   107dd:	inc    ecx
   107de:	mov    DWORD PTR [eax],edx
   107e0:	add    eax,0x4
   107e3:	cmp    ecx,0x14
   107e6:	jne    0x107d0
   107e8:	mov    ebx,DWORD PTR [ebp+0xc]
   107eb:	xor    eax,eax
   107ed:	mov    WORD PTR [ebx],ax
   107f0:	mov    eax,DWORD PTR [ebp-0x3c]
   107f3:	push   0x5
   107f5:	cdq    
   107f6:	pop    ecx
   107f7:	idiv   ecx
   107f9:	mov    DWORD PTR [ebp-0x14],0x1e0d6
   10800:	mov    DWORD PTR [ebp-0x10],0x1e0cc
   10807:	mov    DWORD PTR [ebp-0xc],0x1e0c4
   1080e:	mov    DWORD PTR [ebp-0x8],0x1e0ba
   10815:	mov    DWORD PTR [ebp-0x4],0x1e0b0
   1081c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   10820:	mov    ecx,edx
   10822:	mov    ax,WORD PTR [edx]
   10825:	inc    edx
   10826:	inc    edx
   10827:	test   ax,ax
   1082a:	jne    0x10822
   1082c:	sub    edx,ecx
   1082e:	mov    edi,ebx
   10830:	dec    edi
   10831:	mov    esi,ecx
   10833:	dec    edi
   10834:	mov    ax,WORD PTR [edi+0x2]
   10838:	inc    edi
   10839:	inc    edi
   1083a:	test   ax,ax
   1083d:	jne    0x10834
   1083f:	mov    ecx,edx
   10841:	shr    ecx,0x2
   10844:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10846:	mov    ecx,edx
   10848:	and    ecx,0x3
   1084b:	mov    eax,ebx
   1084d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1084f:	lea    ecx,[eax+0x2]
   10852:	mov    dx,WORD PTR [eax]
   10855:	inc    eax
   10856:	inc    eax
   10857:	test   dx,dx
   1085a:	jne    0x10852
   1085c:	sub    eax,ecx
   1085e:	sar    eax,1
   10860:	mov    ecx,eax
   10862:	mov    eax,DWORD PTR [ebp-0x38]
   10865:	push   0x3
   10867:	cdq    
   10868:	pop    esi
   10869:	idiv   esi
   1086b:	cmp    edx,0xfffffffe
   1086e:	je     0x10954
   10874:	add    edx,0x2
   10877:	lea    esi,[ebp-0x34]
   1087a:	mov    DWORD PTR [ebp+0x8],edx
   1087d:	mov    eax,DWORD PTR [esi]
   1087f:	cdq    
   10880:	push   0x1a
   10882:	pop    edi
   10883:	idiv   edi
   10885:	add    esi,0x4
   10888:	xor    eax,eax
   1088a:	add    edx,0x61
   1088d:	mov    WORD PTR [ebx+ecx*2],dx
   10891:	inc    ecx
   10892:	dec    DWORD PTR [ebp+0x8]
   10895:	mov    WORD PTR [ebx+ecx*2],ax
   10899:	jne    0x1087d
   1089b:	jmp    0x10954
   108a0:	cmp    esi,0x1
   108a3:	je     0x108b0
   108a5:	mov    eax,esi
   108a7:	imul   eax,eax,0xa
   108aa:	add    eax,DWORD PTR [ebp+0x10]
   108ad:	add    DWORD PTR [ebp+0x8],eax
   108b0:	push   DWORD PTR [ebp+0x8]
   108b3:	lea    ecx,[ebp-0xa04]
   108b9:	call   0x106f4
   108be:	lea    eax,[esi-0x1]
   108c1:	cmp    eax,0x5
   108c4:	ja     0x108d5
   108c6:	imul   esi,esi,0x3
   108c9:	add    esi,DWORD PTR [ebp+0x10]
   108cc:	mov    esi,DWORD PTR [esi*4+0x77abc]
   108d3:	jmp    0x108da
   108d5:	mov    esi,0x1e0ae
   108da:	mov    ebx,DWORD PTR [ebp+0xc]
   108dd:	xor    eax,eax
   108df:	mov    WORD PTR [ebx],ax
   108e2:	mov    eax,esi
   108e4:	mov    edx,esi
   108e6:	mov    cx,WORD PTR [eax]
   108e9:	inc    eax
   108ea:	inc    eax
   108eb:	test   cx,cx
   108ee:	jne    0x108e6
   108f0:	sub    eax,edx
   108f2:	mov    edi,ebx
   108f4:	dec    edi
   108f5:	dec    edi
   108f6:	mov    cx,WORD PTR [edi+0x2]
   108fa:	inc    edi
   108fb:	inc    edi
   108fc:	test   cx,cx
   108ff:	jne    0x108f6
   10901:	mov    ecx,eax
   10903:	shr    ecx,0x2
   10906:	mov    esi,edx
   10908:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1090a:	mov    ecx,eax
   1090c:	and    ecx,0x3
   1090f:	mov    eax,ebx
   10911:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10913:	lea    ecx,[eax+0x2]
   10916:	mov    dx,WORD PTR [eax]
   10919:	inc    eax
   1091a:	inc    eax
   1091b:	test   dx,dx
   1091e:	jne    0x10916
   10920:	sub    eax,ecx
   10922:	sar    eax,1
   10924:	push   0x5
   10926:	mov    esi,eax
   10928:	pop    edi
   10929:	push   0x23
   1092b:	lea    ecx,[ebp-0xa04]
   10931:	call   0x1076c
   10936:	cmp    eax,0xa
   10939:	jae    0x10940
   1093b:	add    eax,0x30
   1093e:	jmp    0x10943
   10940:	add    eax,0x57
   10943:	movzx  eax,ax
   10946:	mov    WORD PTR [ebx+esi*2],ax
   1094a:	inc    esi
   1094b:	xor    eax,eax
   1094d:	dec    edi
   1094e:	mov    WORD PTR [ebx+esi*2],ax
   10952:	jne    0x10929
   10954:	pop    edi
   10955:	pop    esi
   10956:	pop    ebx
   10957:	leave  
   10958:	ret    0x10
   1095b:	int3   
   1095c:	int3   
   1095d:	int3   
   1095e:	int3   
   1095f:	int3   
   10960:	mov    edi,edi
   10962:	push   ebp
   10963:	mov    ebp,esp
   10965:	mov    eax,DWORD PTR [ebp+0x8]
   10968:	lea    edx,[eax+0x2]
   1096b:	mov    cx,WORD PTR [eax]
   1096e:	inc    eax
   1096f:	inc    eax
   10970:	test   cx,cx
   10973:	jne    0x1096b
   10975:	sub    eax,edx
   10977:	sar    eax,1
   10979:	pop    ebp
   1097a:	ret    0x4
   1097d:	int3   
   1097e:	int3   
   1097f:	int3   
   10980:	int3   
   10981:	int3   
   10982:	mov    eax,ecx
   10984:	ret    
   10985:	int3   
   10986:	int3   
   10987:	int3   
   10988:	int3   
   10989:	int3   
   1098a:	ret    
   1098b:	int3   
   1098c:	int3   
   1098d:	int3   
   1098e:	int3   
   1098f:	int3   
   10990:	mov    edi,edi
   10992:	push   ebp
   10993:	mov    ebp,esp
   10995:	push   esi
   10996:	xor    esi,esi
   10998:	xor    edx,edx
   1099a:	cmp    DWORD PTR [ebp+0xc],esi
   1099d:	je     0x109ba
   1099f:	mov    eax,DWORD PTR [ebp+0x8]
   109a2:	mov    ecx,DWORD PTR [ebp+0x10]
   109a5:	mov    cl,BYTE PTR [edx+ecx*1]
   109a8:	add    eax,esi
   109aa:	xor    BYTE PTR [eax],cl
   109ac:	lea    eax,[edx+0x1]
   109af:	xor    edx,edx
   109b1:	div    DWORD PTR [ebp+0x14]
   109b4:	inc    esi
   109b5:	cmp    esi,DWORD PTR [ebp+0xc]
   109b8:	jne    0x1099f
   109ba:	pop    esi
   109bb:	pop    ebp
   109bc:	ret    0x10
   109bf:	int3   
   109c0:	int3   
   109c1:	int3   
   109c2:	int3   
   109c3:	int3   
   109c4:	mov    edi,edi
   109c6:	push   ebp
   109c7:	mov    ebp,esp
   109c9:	mov    ecx,DWORD PTR [ebp+0x8]
   109cc:	mov    eax,ecx
   109ce:	lea    edx,[eax+0x2]
   109d1:	push   esi
   109d2:	mov    si,WORD PTR [eax]
   109d5:	inc    eax
   109d6:	inc    eax
   109d7:	test   si,si
   109da:	jne    0x109d2
   109dc:	sub    eax,edx
   109de:	sar    eax,1
   109e0:	cmp    eax,0xc
   109e3:	jae    0x109ec
   109e5:	xor    al,al
   109e7:	jmp    0x10aba
   109ec:	lea    eax,[ecx+eax*2-0x18]
   109f0:	movzx  ecx,WORD PTR [eax]
   109f3:	cmp    cx,0x69
   109f7:	je     0x109ff
   109f9:	cmp    cx,0x49
   109fd:	jne    0x109e5
   109ff:	movzx  ecx,WORD PTR [eax+0x2]
   10a03:	push   0x45
   10a05:	pop    esi
   10a06:	push   0x65
   10a08:	pop    edx
   10a09:	cmp    cx,dx
   10a0c:	je     0x10a13
   10a0e:	cmp    cx,si
   10a11:	jne    0x109e5
   10a13:	movzx  ecx,WORD PTR [eax+0x4]
   10a17:	cmp    cx,0x78
   10a1b:	je     0x10a23
   10a1d:	cmp    cx,0x58
   10a21:	jne    0x109e5
   10a23:	movzx  ecx,WORD PTR [eax+0x6]
   10a27:	cmp    cx,0x70
   10a2b:	je     0x10a33
   10a2d:	cmp    cx,0x50
   10a31:	jne    0x109e5
   10a33:	movzx  ecx,WORD PTR [eax+0x8]
   10a37:	cmp    cx,0x6c
   10a3b:	je     0x10a43
   10a3d:	cmp    cx,0x4c
   10a41:	jne    0x109e5
   10a43:	movzx  ecx,WORD PTR [eax+0xa]
   10a47:	cmp    cx,0x6f
   10a4b:	je     0x10a53
   10a4d:	cmp    cx,0x4f
   10a51:	jne    0x109e5
   10a53:	movzx  ecx,WORD PTR [eax+0xc]
   10a57:	cmp    cx,0x72
   10a5b:	je     0x10a63
   10a5d:	cmp    cx,0x52
   10a61:	jne    0x109e5
   10a63:	movzx  ecx,WORD PTR [eax+0xe]
   10a67:	cmp    cx,dx
   10a6a:	je     0x10a75
   10a6c:	cmp    cx,si
   10a6f:	jne    0x109e5
   10a75:	cmp    WORD PTR [eax+0x10],0x2e
   10a7a:	jne    0x109e5
   10a80:	movzx  ecx,WORD PTR [eax+0x12]
   10a84:	cmp    cx,dx
   10a87:	je     0x10a92
   10a89:	cmp    cx,si
   10a8c:	jne    0x109e5
   10a92:	movzx  ecx,WORD PTR [eax+0x14]
   10a96:	cmp    cx,0x78
   10a9a:	je     0x10aa6
   10a9c:	cmp    cx,0x58
   10aa0:	jne    0x109e5
   10aa6:	movzx  eax,WORD PTR [eax+0x16]
   10aaa:	cmp    ax,dx
   10aad:	je     0x10ab8
   10aaf:	cmp    ax,si
   10ab2:	jne    0x109e5
   10ab8:	mov    al,0x1
   10aba:	pop    esi
   10abb:	pop    ebp
   10abc:	ret    0x4
   10abf:	int3   
   10ac0:	int3   
   10ac1:	int3   
   10ac2:	int3   
   10ac3:	int3   
   10ac4:	mov    edi,edi
   10ac6:	push   ebp
   10ac7:	mov    ebp,esp
   10ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   10acc:	mov    eax,ecx
   10ace:	lea    edx,[eax+0x2]
   10ad1:	push   esi
   10ad2:	mov    si,WORD PTR [eax]
   10ad5:	inc    eax
   10ad6:	inc    eax
   10ad7:	test   si,si
   10ada:	jne    0x10ad2
   10adc:	sub    eax,edx
   10ade:	sar    eax,1
   10ae0:	pop    esi
   10ae1:	cmp    eax,0xb
   10ae4:	jae    0x10aed
   10ae6:	xor    al,al
   10ae8:	jmp    0x10ba9
   10aed:	lea    eax,[ecx+eax*2-0x16]
   10af1:	movzx  ecx,WORD PTR [eax]
   10af4:	cmp    cx,0x66
   10af8:	je     0x10b00
   10afa:	cmp    cx,0x46
   10afe:	jne    0x10ae6
   10b00:	movzx  ecx,WORD PTR [eax+0x2]
   10b04:	cmp    cx,0x69
   10b08:	je     0x10b10
   10b0a:	cmp    cx,0x49
   10b0e:	jne    0x10ae6
   10b10:	movzx  ecx,WORD PTR [eax+0x4]
   10b14:	cmp    cx,0x72
   10b18:	je     0x10b20
   10b1a:	cmp    cx,0x52
   10b1e:	jne    0x10ae6
   10b20:	movzx  ecx,WORD PTR [eax+0x6]
   10b24:	cmp    cx,0x65
   10b28:	je     0x10b30
   10b2a:	cmp    cx,0x45
   10b2e:	jne    0x10ae6
   10b30:	movzx  ecx,WORD PTR [eax+0x8]
   10b34:	cmp    cx,0x66
   10b38:	je     0x10b40
   10b3a:	cmp    cx,0x46
   10b3e:	jne    0x10ae6
   10b40:	movzx  ecx,WORD PTR [eax+0xa]
   10b44:	cmp    cx,0x6f
   10b48:	je     0x10b50
   10b4a:	cmp    cx,0x4f
   10b4e:	jne    0x10ae6
   10b50:	movzx  ecx,WORD PTR [eax+0xc]
   10b54:	cmp    cx,0x78
   10b58:	je     0x10b60
   10b5a:	cmp    cx,0x58
   10b5e:	jne    0x10ae6
   10b60:	cmp    WORD PTR [eax+0xe],0x2e
   10b65:	jne    0x10ae6
   10b6b:	movzx  ecx,WORD PTR [eax+0x10]
   10b6f:	cmp    cx,0x65
   10b73:	je     0x10b7f
   10b75:	cmp    cx,0x45
   10b79:	jne    0x10ae6
   10b7f:	movzx  ecx,WORD PTR [eax+0x12]
   10b83:	cmp    cx,0x78
   10b87:	je     0x10b93
   10b89:	cmp    cx,0x58
   10b8d:	jne    0x10ae6
   10b93:	movzx  eax,WORD PTR [eax+0x14]
   10b97:	cmp    ax,0x65
   10b9b:	je     0x10ba7
   10b9d:	cmp    ax,0x45
   10ba1:	jne    0x10ae6
   10ba7:	mov    al,0x1
   10ba9:	pop    ebp
   10baa:	ret    0x4
   10bad:	int3   
   10bae:	int3   
   10baf:	int3   
   10bb0:	int3   
   10bb1:	int3   
   10bb2:	mov    edi,edi
   10bb4:	push   ebp
   10bb5:	mov    ebp,esp
   10bb7:	mov    ecx,DWORD PTR [ebp+0x8]
   10bba:	mov    eax,ecx
   10bbc:	lea    edx,[eax+0x2]
   10bbf:	push   esi
   10bc0:	mov    si,WORD PTR [eax]
   10bc3:	inc    eax
   10bc4:	inc    eax
   10bc5:	test   si,si
   10bc8:	jne    0x10bc0
   10bca:	sub    eax,edx
   10bcc:	sar    eax,1
   10bce:	pop    esi
   10bcf:	cmp    eax,0xa
   10bd2:	jae    0x10bdb
   10bd4:	xor    al,al
   10bd6:	jmp    0x10c83
   10bdb:	lea    eax,[ecx+eax*2-0x14]
   10bdf:	movzx  ecx,WORD PTR [eax]
   10be2:	cmp    cx,0x63
   10be6:	je     0x10bee
   10be8:	cmp    cx,0x43
   10bec:	jne    0x10bd4
   10bee:	movzx  ecx,WORD PTR [eax+0x2]
   10bf2:	cmp    cx,0x68
   10bf6:	je     0x10bfe
   10bf8:	cmp    cx,0x48
   10bfc:	jne    0x10bd4
   10bfe:	movzx  ecx,WORD PTR [eax+0x4]
   10c02:	cmp    cx,0x72
   10c06:	je     0x10c0e
   10c08:	cmp    cx,0x52
   10c0c:	jne    0x10bd4
   10c0e:	movzx  ecx,WORD PTR [eax+0x6]
   10c12:	cmp    cx,0x6f
   10c16:	je     0x10c1e
   10c18:	cmp    cx,0x4f
   10c1c:	jne    0x10bd4
   10c1e:	movzx  ecx,WORD PTR [eax+0x8]
   10c22:	cmp    cx,0x6d
   10c26:	je     0x10c2e
   10c28:	cmp    cx,0x4d
   10c2c:	jne    0x10bd4
   10c2e:	movzx  ecx,WORD PTR [eax+0xa]
   10c32:	cmp    cx,0x65
   10c36:	je     0x10c3e
   10c38:	cmp    cx,0x45
   10c3c:	jne    0x10bd4
   10c3e:	cmp    WORD PTR [eax+0xc],0x2e
   10c43:	jne    0x10bd4
   10c45:	movzx  ecx,WORD PTR [eax+0xe]
   10c49:	cmp    cx,0x65
   10c4d:	je     0x10c59
   10c4f:	cmp    cx,0x45
   10c53:	jne    0x10bd4
   10c59:	movzx  ecx,WORD PTR [eax+0x10]
   10c5d:	cmp    cx,0x78
   10c61:	je     0x10c6d
   10c63:	cmp    cx,0x58
   10c67:	jne    0x10bd4
   10c6d:	movzx  eax,WORD PTR [eax+0x12]
   10c71:	cmp    ax,0x65
   10c75:	je     0x10c81
   10c77:	cmp    ax,0x45
   10c7b:	jne    0x10bd4
   10c81:	mov    al,0x1
   10c83:	pop    ebp
   10c84:	ret    0x4
   10c87:	int3   
   10c88:	int3   
   10c89:	int3   
   10c8a:	int3   
   10c8b:	int3   
   10c8c:	mov    edi,edi
   10c8e:	push   ebp
   10c8f:	mov    ebp,esp
   10c91:	mov    ecx,DWORD PTR [ebp+0x8]
   10c94:	mov    eax,ecx
   10c96:	lea    edx,[eax+0x2]
   10c99:	push   esi
   10c9a:	mov    si,WORD PTR [eax]
   10c9d:	inc    eax
   10c9e:	inc    eax
   10c9f:	test   si,si
   10ca2:	jne    0x10c9a
   10ca4:	sub    eax,edx
   10ca6:	sar    eax,1
   10ca8:	pop    esi
   10ca9:	cmp    eax,0x9
   10cac:	jae    0x10cb5
   10cae:	xor    al,al
   10cb0:	jmp    0x10d49
   10cb5:	lea    eax,[ecx+eax*2-0x12]
   10cb9:	movzx  ecx,WORD PTR [eax]
   10cbc:	cmp    cx,0x6d
   10cc0:	je     0x10cc8
   10cc2:	cmp    cx,0x4d
   10cc6:	jne    0x10cae
   10cc8:	movzx  ecx,WORD PTR [eax+0x2]
   10ccc:	cmp    cx,0x73
   10cd0:	je     0x10cd8
   10cd2:	cmp    cx,0x53
   10cd6:	jne    0x10cae
   10cd8:	movzx  ecx,WORD PTR [eax+0x4]
   10cdc:	cmp    cx,0x68
   10ce0:	je     0x10ce8
   10ce2:	cmp    cx,0x48
   10ce6:	jne    0x10cae
   10ce8:	movzx  ecx,WORD PTR [eax+0x6]
   10cec:	cmp    cx,0x74
   10cf0:	je     0x10cf8
   10cf2:	cmp    cx,0x54
   10cf6:	jne    0x10cae
   10cf8:	movzx  ecx,WORD PTR [eax+0x8]
   10cfc:	cmp    cx,0x61
   10d00:	je     0x10d08
   10d02:	cmp    cx,0x41
   10d06:	jne    0x10cae
   10d08:	cmp    WORD PTR [eax+0xa],0x2e
   10d0d:	jne    0x10cae
   10d0f:	movzx  ecx,WORD PTR [eax+0xc]
   10d13:	cmp    cx,0x65
   10d17:	je     0x10d1f
   10d19:	cmp    cx,0x45
   10d1d:	jne    0x10cae
   10d1f:	movzx  ecx,WORD PTR [eax+0xe]
   10d23:	cmp    cx,0x78
   10d27:	je     0x10d33
   10d29:	cmp    cx,0x58
   10d2d:	jne    0x10cae
   10d33:	movzx  eax,WORD PTR [eax+0x10]
   10d37:	cmp    ax,0x65
   10d3b:	je     0x10d47
   10d3d:	cmp    ax,0x45
   10d41:	jne    0x10cae
   10d47:	mov    al,0x1
   10d49:	pop    ebp
   10d4a:	ret    0x4
   10d4d:	int3   
   10d4e:	int3   
   10d4f:	int3   
   10d50:	int3   
   10d51:	int3   
   10d52:	mov    edi,edi
   10d54:	push   ebp
   10d55:	mov    ebp,esp
   10d57:	push   esi
   10d58:	mov    esi,DWORD PTR [ebp+0x8]
   10d5b:	push   esi
   10d5c:	call   0x109c4
   10d61:	test   al,al
   10d63:	je     0x10d6a
   10d65:	xor    eax,eax
   10d67:	inc    eax
   10d68:	jmp    0x10d97
   10d6a:	push   esi
   10d6b:	call   0x10ac4
   10d70:	test   al,al
   10d72:	je     0x10d79
   10d74:	push   0x2
   10d76:	pop    eax
   10d77:	jmp    0x10d97
   10d79:	push   esi
   10d7a:	call   0x10bb2
   10d7f:	test   al,al
   10d81:	je     0x10d87
   10d83:	push   0x3
   10d85:	jmp    0x10d76
   10d87:	push   esi
   10d88:	call   0x10c8c
   10d8d:	movzx  eax,al
   10d90:	neg    eax
   10d92:	sbb    eax,eax
   10d94:	and    eax,0x4
   10d97:	pop    esi
   10d98:	pop    ebp
   10d99:	ret    0x4
   10d9c:	int3   
   10d9d:	int3   
   10d9e:	int3   
   10d9f:	int3   
   10da0:	int3   
   10da1:	int3   
   10da2:	mov    edi,edi
   10da4:	push   ebp
   10da5:	mov    ebp,esp
   10da7:	mov    eax,DWORD PTR [ebp+0x8]
   10daa:	mov    edx,DWORD PTR [ebp+0xc]
   10dad:	push   esi
   10dae:	xor    esi,esi
   10db0:	jmp    0x10dd5
   10db2:	mov    ecx,eax
   10db4:	and    ecx,0x1
   10db7:	or     ecx,esi
   10db9:	push   esi
   10dba:	jne    0x10dc7
   10dbc:	push   0x2
   10dbe:	push   edx
   10dbf:	push   eax
   10dc0:	call   0x1dcf6
   10dc5:	jmp    0x10dd5
   10dc7:	push   0x3
   10dc9:	push   edx
   10dca:	push   eax
   10dcb:	call   0x1dcea
   10dd0:	add    eax,0x1
   10dd3:	adc    edx,esi
   10dd5:	cmp    eax,0x4
   10dd8:	jne    0x10db2
   10dda:	cmp    edx,esi
   10ddc:	jne    0x10db2
   10dde:	pop    esi
   10ddf:	pop    ebp
   10de0:	ret    0x8
   10de3:	int3   
   10de4:	int3   
   10de5:	int3   
   10de6:	int3   
   10de7:	int3   
   10de8:	mov    edi,edi
   10dea:	push   ebp
   10deb:	mov    ebp,esp
   10ded:	mov    eax,DWORD PTR [ebp+0x8]
   10df0:	mov    edx,DWORD PTR ds:0x786b0
   10df6:	jmp    0x10dfa
   10df8:	mov    eax,ecx
   10dfa:	mov    ecx,DWORD PTR [eax+0x8]
   10dfd:	cmp    ecx,edx
   10dff:	jne    0x10df8
   10e01:	pop    ebp
   10e02:	ret    0x4
   10e05:	int3   
   10e06:	int3   
   10e07:	int3   
   10e08:	int3   
   10e09:	int3   
   10e0a:	mov    edi,edi
   10e0c:	push   ebp
   10e0d:	mov    ebp,esp
   10e0f:	mov    eax,DWORD PTR [ebp+0x8]
   10e12:	mov    edx,DWORD PTR ds:0x786b0
   10e18:	jmp    0x10e1c
   10e1a:	mov    eax,ecx
   10e1c:	mov    ecx,DWORD PTR [eax]
   10e1e:	cmp    ecx,edx
   10e20:	jne    0x10e1a
   10e22:	pop    ebp
   10e23:	ret    0x4
   10e26:	int3   
   10e27:	int3   
   10e28:	int3   
   10e29:	int3   
   10e2a:	int3   
   10e2b:	int3   
   10e2c:	mov    edi,edi
   10e2e:	push   ebp
   10e2f:	mov    ebp,esp
   10e31:	mov    eax,DWORD PTR [ebp+0x8]
   10e34:	mov    edx,DWORD PTR ds:0x786b4
   10e3a:	jmp    0x10e3e
   10e3c:	mov    eax,ecx
   10e3e:	mov    ecx,DWORD PTR [eax+0x8]
   10e41:	cmp    ecx,edx
   10e43:	jne    0x10e3c
   10e45:	pop    ebp
   10e46:	ret    0x4
   10e49:	int3   
   10e4a:	int3   
   10e4b:	int3   
   10e4c:	int3   
   10e4d:	int3   
   10e4e:	mov    edi,edi
   10e50:	push   ebp
   10e51:	mov    ebp,esp
   10e53:	mov    eax,DWORD PTR [ebp+0x8]
   10e56:	mov    edx,DWORD PTR ds:0x786b4
   10e5c:	jmp    0x10e60
   10e5e:	mov    eax,ecx
   10e60:	mov    ecx,DWORD PTR [eax]
   10e62:	cmp    ecx,edx
   10e64:	jne    0x10e5e
   10e66:	pop    ebp
   10e67:	ret    0x4
   10e6a:	int3   
   10e6b:	int3   
   10e6c:	int3   
   10e6d:	int3   
   10e6e:	int3   
   10e6f:	int3   
   10e70:	mov    edi,edi
   10e72:	push   ebp
   10e73:	mov    ebp,esp
   10e75:	mov    eax,DWORD PTR [ebp+0x8]
   10e78:	mov    edx,DWORD PTR ds:0x786b8
   10e7e:	jmp    0x10e82
   10e80:	mov    eax,ecx
   10e82:	mov    ecx,DWORD PTR [eax+0x8]
   10e85:	cmp    ecx,edx
   10e87:	jne    0x10e80
   10e89:	pop    ebp
   10e8a:	ret    0x4
   10e8d:	int3   
   10e8e:	int3   
   10e8f:	int3   
   10e90:	int3   
   10e91:	int3   
   10e92:	mov    edi,edi
   10e94:	push   ebp
   10e95:	mov    ebp,esp
   10e97:	mov    eax,DWORD PTR [ebp+0x8]
   10e9a:	mov    edx,DWORD PTR ds:0x786b8
   10ea0:	jmp    0x10ea4
   10ea2:	mov    eax,ecx
   10ea4:	mov    ecx,DWORD PTR [eax]
   10ea6:	cmp    ecx,edx
   10ea8:	jne    0x10ea2
   10eaa:	pop    ebp
   10eab:	ret    0x4
   10eae:	int3   
   10eaf:	int3   
   10eb0:	int3   
   10eb1:	int3   
   10eb2:	int3   
   10eb3:	int3   
   10eb4:	mov    edi,edi
   10eb6:	push   esi
   10eb7:	mov    esi,ecx
   10eb9:	mov    ecx,DWORD PTR [esi]
   10ebb:	cmp    DWORD PTR [ecx+0x14],0x0
   10ebf:	jne    0x10ece
   10ec1:	mov    eax,DWORD PTR [ecx+0x4]
   10ec4:	cmp    DWORD PTR [eax+0x4],ecx
   10ec7:	jne    0x10ece
   10ec9:	mov    eax,DWORD PTR [ecx+0x8]
   10ecc:	jmp    0x10eeb
   10ece:	mov    eax,DWORD PTR [ecx]
   10ed0:	cmp    eax,DWORD PTR ds:0x786b0
   10ed6:	je     0x10ee4
   10ed8:	push   eax
   10ed9:	call   0x10de8
   10ede:	jmp    0x10eeb
   10ee0:	mov    DWORD PTR [esi],eax
   10ee2:	mov    ecx,eax
   10ee4:	mov    eax,DWORD PTR [ecx+0x4]
   10ee7:	cmp    ecx,DWORD PTR [eax]
   10ee9:	je     0x10ee0
   10eeb:	mov    DWORD PTR [esi],eax
   10eed:	pop    esi
   10eee:	ret    
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	int3   
   10ef3:	int3   
   10ef4:	mov    edi,edi
   10ef6:	push   esi
   10ef7:	mov    esi,ecx
   10ef9:	mov    ecx,DWORD PTR [esi]
   10efb:	mov    eax,DWORD PTR [ecx+0x8]
   10efe:	cmp    eax,DWORD PTR ds:0x786b0
   10f04:	je     0x10f12
   10f06:	push   eax
   10f07:	call   0x10e0a
   10f0c:	jmp    0x10f21
   10f0e:	mov    DWORD PTR [esi],eax
   10f10:	mov    ecx,eax
   10f12:	mov    eax,DWORD PTR [ecx+0x4]
   10f15:	cmp    ecx,DWORD PTR [eax+0x8]
   10f18:	je     0x10f0e
   10f1a:	mov    ecx,DWORD PTR [esi]
   10f1c:	cmp    DWORD PTR [ecx+0x8],eax
   10f1f:	je     0x10f23
   10f21:	mov    DWORD PTR [esi],eax
   10f23:	pop    esi
   10f24:	ret    
   10f25:	int3   
   10f26:	int3   
   10f27:	int3   
   10f28:	int3   
   10f29:	int3   
   10f2a:	mov    edi,edi
   10f2c:	push   ebp
   10f2d:	mov    ebp,esp
   10f2f:	mov    edx,DWORD PTR [ebp+0x8]
   10f32:	mov    eax,DWORD PTR [edx+0x8]
   10f35:	push   esi
   10f36:	mov    esi,DWORD PTR [eax]
   10f38:	mov    DWORD PTR [edx+0x8],esi
   10f3b:	mov    esi,DWORD PTR [eax]
   10f3d:	cmp    esi,DWORD PTR ds:0x786bc
   10f43:	je     0x10f48
   10f45:	mov    DWORD PTR [esi+0x4],edx
   10f48:	mov    esi,DWORD PTR [edx+0x4]
   10f4b:	mov    DWORD PTR [eax+0x4],esi
   10f4e:	mov    ecx,DWORD PTR [ecx+0x4]
   10f51:	pop    esi
   10f52:	cmp    edx,DWORD PTR [ecx+0x4]
   10f55:	jne    0x10f5c
   10f57:	mov    DWORD PTR [ecx+0x4],eax
   10f5a:	jmp    0x10f6a
   10f5c:	mov    ecx,DWORD PTR [edx+0x4]
   10f5f:	cmp    edx,DWORD PTR [ecx]
   10f61:	jne    0x10f67
   10f63:	mov    DWORD PTR [ecx],eax
   10f65:	jmp    0x10f6a
   10f67:	mov    DWORD PTR [ecx+0x8],eax
   10f6a:	mov    DWORD PTR [eax],edx
   10f6c:	mov    DWORD PTR [edx+0x4],eax
   10f6f:	pop    ebp
   10f70:	ret    0x4
   10f73:	int3   
   10f74:	int3   
   10f75:	int3   
   10f76:	int3   
   10f77:	int3   
   10f78:	mov    edi,edi
   10f7a:	push   ebp
   10f7b:	mov    ebp,esp
   10f7d:	mov    eax,DWORD PTR [ebp+0x8]
   10f80:	mov    edx,DWORD PTR ds:0x786bc
   10f86:	jmp    0x10f8a
   10f88:	mov    eax,ecx
   10f8a:	mov    ecx,DWORD PTR [eax+0x8]
   10f8d:	cmp    ecx,edx
   10f8f:	jne    0x10f88
   10f91:	pop    ebp
   10f92:	ret    0x4
   10f95:	int3   
   10f96:	int3   
   10f97:	int3   
   10f98:	int3   
   10f99:	int3   
   10f9a:	mov    edi,edi
   10f9c:	push   ebp
   10f9d:	mov    ebp,esp
   10f9f:	mov    edx,DWORD PTR [ebp+0x8]
   10fa2:	mov    eax,DWORD PTR [edx]
   10fa4:	push   esi
   10fa5:	mov    esi,DWORD PTR [eax+0x8]
   10fa8:	mov    DWORD PTR [edx],esi
   10faa:	mov    esi,DWORD PTR [eax+0x8]
   10fad:	cmp    esi,DWORD PTR ds:0x786bc
   10fb3:	je     0x10fb8
   10fb5:	mov    DWORD PTR [esi+0x4],edx
   10fb8:	mov    esi,DWORD PTR [edx+0x4]
   10fbb:	mov    DWORD PTR [eax+0x4],esi
   10fbe:	mov    ecx,DWORD PTR [ecx+0x4]
   10fc1:	pop    esi
   10fc2:	cmp    edx,DWORD PTR [ecx+0x4]
   10fc5:	jne    0x10fcc
   10fc7:	mov    DWORD PTR [ecx+0x4],eax
   10fca:	jmp    0x10fdb
   10fcc:	mov    ecx,DWORD PTR [edx+0x4]
   10fcf:	cmp    edx,DWORD PTR [ecx+0x8]
   10fd2:	jne    0x10fd9
   10fd4:	mov    DWORD PTR [ecx+0x8],eax
   10fd7:	jmp    0x10fdb
   10fd9:	mov    DWORD PTR [ecx],eax
   10fdb:	mov    DWORD PTR [eax+0x8],edx
   10fde:	mov    DWORD PTR [edx+0x4],eax
   10fe1:	pop    ebp
   10fe2:	ret    0x4
   10fe5:	int3   
   10fe6:	int3   
   10fe7:	int3   
   10fe8:	int3   
   10fe9:	int3   
   10fea:	mov    edi,edi
   10fec:	push   esi
   10fed:	mov    esi,ecx
   10fef:	mov    ecx,DWORD PTR [esi]
   10ff1:	cmp    DWORD PTR [ecx+0x58],0x0
   10ff5:	jne    0x11004
   10ff7:	mov    eax,DWORD PTR [ecx+0x4]
   10ffa:	cmp    DWORD PTR [eax+0x4],ecx
   10ffd:	jne    0x11004
   10fff:	mov    eax,DWORD PTR [ecx+0x8]
   11002:	jmp    0x11021
   11004:	mov    eax,DWORD PTR [ecx]
   11006:	cmp    eax,DWORD PTR ds:0x786bc
   1100c:	je     0x1101a
   1100e:	push   eax
   1100f:	call   0x10f78
   11014:	jmp    0x11021
   11016:	mov    DWORD PTR [esi],eax
   11018:	mov    ecx,eax
   1101a:	mov    eax,DWORD PTR [ecx+0x4]
   1101d:	cmp    ecx,DWORD PTR [eax]
   1101f:	je     0x11016
   11021:	mov    DWORD PTR [esi],eax
   11023:	pop    esi
   11024:	ret    
   11025:	int3   
   11026:	int3   
   11027:	int3   
   11028:	int3   
   11029:	int3   
   1102a:	mov    edi,edi
   1102c:	push   ebp
   1102d:	mov    ebp,esp
   1102f:	mov    eax,DWORD PTR [ebp+0x8]
   11032:	mov    edx,DWORD PTR ds:0x786c0
   11038:	jmp    0x1103c
   1103a:	mov    eax,ecx
   1103c:	mov    ecx,DWORD PTR [eax+0x8]
   1103f:	cmp    ecx,edx
   11041:	jne    0x1103a
   11043:	pop    ebp
   11044:	ret    0x4
   11047:	int3   
   11048:	int3   
   11049:	int3   
   1104a:	int3   
   1104b:	int3   
   1104c:	mov    edi,edi
   1104e:	push   ebp
   1104f:	mov    ebp,esp
   11051:	mov    eax,DWORD PTR [ebp+0x8]
   11054:	mov    edx,DWORD PTR ds:0x786c0
   1105a:	jmp    0x1105e
   1105c:	mov    eax,ecx
   1105e:	mov    ecx,DWORD PTR [eax]
   11060:	cmp    ecx,edx
   11062:	jne    0x1105c
   11064:	pop    ebp
   11065:	ret    0x4
   11068:	int3   
   11069:	int3   
   1106a:	int3   
   1106b:	int3   
   1106c:	int3   
   1106d:	int3   
   1106e:	mov    edi,edi
   11070:	push   esi
   11071:	mov    esi,ecx
   11073:	mov    ecx,DWORD PTR [esi]
   11075:	cmp    DWORD PTR [ecx+0x1c],0x0
   11079:	jne    0x11088
   1107b:	mov    eax,DWORD PTR [ecx+0x4]
   1107e:	cmp    DWORD PTR [eax+0x4],ecx
   11081:	jne    0x11088
   11083:	mov    eax,DWORD PTR [ecx+0x8]
   11086:	jmp    0x110a5
   11088:	mov    eax,DWORD PTR [ecx]
   1108a:	cmp    eax,DWORD PTR ds:0x786c0
   11090:	je     0x1109e
   11092:	push   eax
   11093:	call   0x1102a
   11098:	jmp    0x110a5
   1109a:	mov    DWORD PTR [esi],eax
   1109c:	mov    ecx,eax
   1109e:	mov    eax,DWORD PTR [ecx+0x4]
   110a1:	cmp    ecx,DWORD PTR [eax]
   110a3:	je     0x1109a
   110a5:	mov    DWORD PTR [esi],eax
   110a7:	pop    esi
   110a8:	ret    
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	mov    eax,DWORD PTR [ebp+0x8]
   110b6:	mov    edx,DWORD PTR ds:0x786c4
   110bc:	jmp    0x110c0
   110be:	mov    eax,ecx
   110c0:	mov    ecx,DWORD PTR [eax+0x8]
   110c3:	cmp    ecx,edx
   110c5:	jne    0x110be
   110c7:	pop    ebp
   110c8:	ret    0x4
   110cb:	int3   
   110cc:	int3   
   110cd:	int3   
   110ce:	int3   
   110cf:	int3   
   110d0:	mov    edi,edi
   110d2:	push   ebp
   110d3:	mov    ebp,esp
   110d5:	mov    eax,DWORD PTR [ebp+0x8]
   110d8:	mov    edx,DWORD PTR ds:0x786c4
   110de:	jmp    0x110e2
   110e0:	mov    eax,ecx
   110e2:	mov    ecx,DWORD PTR [eax]
   110e4:	cmp    ecx,edx
   110e6:	jne    0x110e0
   110e8:	pop    ebp
   110e9:	ret    0x4
   110ec:	int3   
   110ed:	int3   
   110ee:	int3   
   110ef:	int3   
   110f0:	int3   
   110f1:	int3   
   110f2:	mov    edi,edi
   110f4:	push   esi
   110f5:	mov    esi,ecx
   110f7:	mov    ecx,DWORD PTR [esi]
   110f9:	cmp    DWORD PTR [ecx+0x14],0x0
   110fd:	jne    0x1110c
   110ff:	mov    eax,DWORD PTR [ecx+0x4]
   11102:	cmp    DWORD PTR [eax+0x4],ecx
   11105:	jne    0x1110c
   11107:	mov    eax,DWORD PTR [ecx+0x8]
   1110a:	jmp    0x11129
   1110c:	mov    eax,DWORD PTR [ecx]
   1110e:	cmp    eax,DWORD PTR ds:0x786c4
   11114:	je     0x11122
   11116:	push   eax
   11117:	call   0x110ae
   1111c:	jmp    0x11129
   1111e:	mov    DWORD PTR [esi],eax
   11120:	mov    ecx,eax
   11122:	mov    eax,DWORD PTR [ecx+0x4]
   11125:	cmp    ecx,DWORD PTR [eax]
   11127:	je     0x1111e
   11129:	mov    DWORD PTR [esi],eax
   1112b:	pop    esi
   1112c:	ret    
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   esi
   11135:	mov    esi,ecx
   11137:	mov    ecx,DWORD PTR [esi]
   11139:	cmp    DWORD PTR [ecx+0x60],0x0
   1113d:	jne    0x1114c
   1113f:	mov    eax,DWORD PTR [ecx+0x4]
   11142:	cmp    DWORD PTR [eax+0x4],ecx
   11145:	jne    0x1114c
   11147:	mov    eax,DWORD PTR [ecx+0x8]
   1114a:	jmp    0x11169
   1114c:	mov    eax,DWORD PTR [ecx]
   1114e:	cmp    eax,DWORD PTR ds:0x786b8
   11154:	je     0x11162
   11156:	push   eax
   11157:	call   0x10e70
   1115c:	jmp    0x11169
   1115e:	mov    DWORD PTR [esi],eax
   11160:	mov    ecx,eax
   11162:	mov    eax,DWORD PTR [ecx+0x4]
   11165:	cmp    ecx,DWORD PTR [eax]
   11167:	je     0x1115e
   11169:	mov    DWORD PTR [esi],eax
   1116b:	pop    esi
   1116c:	ret    
   1116d:	int3   
   1116e:	int3   
   1116f:	int3   
   11170:	int3   
   11171:	int3   
   11172:	mov    edi,edi
   11174:	push   esi
   11175:	mov    esi,ecx
   11177:	mov    ecx,DWORD PTR [esi]
   11179:	mov    eax,DWORD PTR [ecx+0x8]
   1117c:	cmp    eax,DWORD PTR ds:0x786c0
   11182:	je     0x11190
   11184:	push   eax
   11185:	call   0x1104c
   1118a:	jmp    0x1119f
   1118c:	mov    DWORD PTR [esi],eax
   1118e:	mov    ecx,eax
   11190:	mov    eax,DWORD PTR [ecx+0x4]
   11193:	cmp    ecx,DWORD PTR [eax+0x8]
   11196:	je     0x1118c
   11198:	mov    ecx,DWORD PTR [esi]
   1119a:	cmp    DWORD PTR [ecx+0x8],eax
   1119d:	je     0x111a1
   1119f:	mov    DWORD PTR [esi],eax
   111a1:	pop    esi
   111a2:	ret    
   111a3:	int3   
   111a4:	int3   
   111a5:	int3   
   111a6:	int3   
   111a7:	int3   
   111a8:	mov    edi,edi
   111aa:	push   esi
   111ab:	mov    esi,ecx
   111ad:	mov    ecx,DWORD PTR [esi]
   111af:	mov    eax,DWORD PTR [ecx+0x8]
   111b2:	cmp    eax,DWORD PTR ds:0x786c4
   111b8:	je     0x111c6
   111ba:	push   eax
   111bb:	call   0x110d0
   111c0:	jmp    0x111d5
   111c2:	mov    DWORD PTR [esi],eax
   111c4:	mov    ecx,eax
   111c6:	mov    eax,DWORD PTR [ecx+0x4]
   111c9:	cmp    ecx,DWORD PTR [eax+0x8]
   111cc:	je     0x111c2
   111ce:	mov    ecx,DWORD PTR [esi]
   111d0:	cmp    DWORD PTR [ecx+0x8],eax
   111d3:	je     0x111d7
   111d5:	mov    DWORD PTR [esi],eax
   111d7:	pop    esi
   111d8:	ret    
   111d9:	int3   
   111da:	int3   
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	mov    edi,edi
   111e0:	push   ebp
   111e1:	mov    ebp,esp
   111e3:	mov    eax,DWORD PTR [ebp+0x8]
   111e6:	mov    edx,DWORD PTR ds:0x786cc
   111ec:	jmp    0x111f0
   111ee:	mov    eax,ecx
   111f0:	mov    ecx,DWORD PTR [eax+0x8]
   111f3:	cmp    ecx,edx
   111f5:	jne    0x111ee
   111f7:	pop    ebp
   111f8:	ret    0x4
   111fb:	int3   
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	mov    edi,edi
   11202:	push   ebp
   11203:	mov    ebp,esp
   11205:	push   ecx
   11206:	push   ecx
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    DWORD PTR [ebp-0x4],eax
   1120d:	lea    ecx,[eax+0x2]
   11210:	mov    dx,WORD PTR [eax]
   11213:	inc    eax
   11214:	inc    eax
   11215:	test   dx,dx
   11218:	jne    0x11210
   1121a:	sub    eax,ecx
   1121c:	sar    eax,1
   1121e:	add    eax,eax
   11220:	mov    WORD PTR [ebp-0x8],ax
   11224:	mov    WORD PTR [ebp-0x6],ax
   11228:	lea    eax,[ebp-0x8]
   1122b:	push   eax
   1122c:	call   DWORD PTR ds:0x1f414
   11232:	leave  
   11233:	ret    0x4
   11236:	int3   
   11237:	int3   
   11238:	int3   
   11239:	int3   
   1123a:	int3   
   1123b:	int3   
   1123c:	mov    edi,edi
   1123e:	push   ebp
   1123f:	mov    ebp,esp
   11241:	mov    eax,DWORD PTR [ebp+0x8]
   11244:	test   eax,eax
   11246:	je     0x11255
   11248:	mov    ecx,DWORD PTR [ebp+0xc]
   1124b:	mov    edx,DWORD PTR [ecx]
   1124d:	mov    DWORD PTR [eax],edx
   1124f:	mov    ecx,DWORD PTR [ecx+0x4]
   11252:	mov    DWORD PTR [eax+0x4],ecx
   11255:	pop    ebp
   11256:	ret    0x8
   11259:	int3   
   1125a:	int3   
   1125b:	int3   
   1125c:	int3   
   1125d:	int3   
   1125e:	test   BYTE PTR ds:0x786d4,0x1
   11265:	jne    0x1127d
   11267:	or     DWORD PTR ds:0x786d4,0x1
   1126e:	push   0x1e17c
   11273:	call   0x11200
   11278:	mov    ds:0x786d0,eax
   1127d:	mov    eax,ds:0x786d0
   11282:	ret    
   11283:	int3   
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	test   BYTE PTR ds:0x786dc,0x1
   1128f:	jne    0x112a7
   11291:	or     DWORD PTR ds:0x786dc,0x1
   11298:	push   0x1e198
   1129d:	call   0x11200
   112a2:	mov    ds:0x786d8,eax
   112a7:	mov    eax,ds:0x786d8
   112ac:	ret    
   112ad:	int3   
   112ae:	int3   
   112af:	int3   
   112b0:	int3   
   112b1:	int3   
   112b2:	test   BYTE PTR ds:0x786e4,0x1
   112b9:	jne    0x112d1
   112bb:	or     DWORD PTR ds:0x786e4,0x1
   112c2:	push   0x1e1c8
   112c7:	call   0x11200
   112cc:	mov    ds:0x786e0,eax
   112d1:	mov    eax,ds:0x786e0
   112d6:	ret    
   112d7:	int3   
   112d8:	int3   
   112d9:	int3   
   112da:	int3   
   112db:	int3   
   112dc:	test   BYTE PTR ds:0x786ec,0x1
   112e3:	jne    0x112fb
   112e5:	or     DWORD PTR ds:0x786ec,0x1
   112ec:	push   0x1e200
   112f1:	call   0x11200
   112f6:	mov    ds:0x786e8,eax
   112fb:	mov    eax,ds:0x786e8
   11300:	ret    
   11301:	int3   
   11302:	int3   
   11303:	int3   
   11304:	int3   
   11305:	int3   
   11306:	test   BYTE PTR ds:0x786f4,0x1
   1130d:	jne    0x11325
   1130f:	or     DWORD PTR ds:0x786f4,0x1
   11316:	push   0x1e222
   1131b:	call   0x11200
   11320:	mov    ds:0x786f0,eax
   11325:	mov    eax,ds:0x786f0
   1132a:	ret    
   1132b:	int3   
   1132c:	int3   
   1132d:	int3   
   1132e:	int3   
   1132f:	int3   
   11330:	test   BYTE PTR ds:0x786fc,0x1
   11337:	jne    0x1134f
   11339:	or     DWORD PTR ds:0x786fc,0x1
   11340:	push   0x1e262
   11345:	call   0x11200
   1134a:	mov    ds:0x786f8,eax
   1134f:	mov    eax,ds:0x786f8
   11354:	ret    
   11355:	int3   
   11356:	int3   
   11357:	int3   
   11358:	int3   
   11359:	int3   
   1135a:	test   BYTE PTR ds:0x78704,0x1
   11361:	jne    0x11379
   11363:	or     DWORD PTR ds:0x78704,0x1
   1136a:	push   0x1e278
   1136f:	call   0x11200
   11374:	mov    ds:0x78700,eax
   11379:	mov    eax,ds:0x78700
   1137e:	ret    
   1137f:	int3   
   11380:	int3   
   11381:	int3   
   11382:	int3   
   11383:	int3   
   11384:	test   BYTE PTR ds:0x7870c,0x1
   1138b:	jne    0x113a3
   1138d:	or     DWORD PTR ds:0x7870c,0x1
   11394:	push   0x1e2ac
   11399:	call   0x11200
   1139e:	mov    ds:0x78708,eax
   113a3:	mov    eax,ds:0x78708
   113a8:	ret    
   113a9:	int3   
   113aa:	int3   
   113ab:	int3   
   113ac:	int3   
   113ad:	int3   
   113ae:	test   BYTE PTR ds:0x78714,0x1
   113b5:	jne    0x113cd
   113b7:	or     DWORD PTR ds:0x78714,0x1
   113be:	push   0x1e2de
   113c3:	call   0x11200
   113c8:	mov    ds:0x78710,eax
   113cd:	mov    eax,ds:0x78710
   113d2:	ret    
   113d3:	int3   
   113d4:	int3   
   113d5:	int3   
   113d6:	int3   
   113d7:	int3   
   113d8:	test   BYTE PTR ds:0x7871c,0x1
   113df:	jne    0x113f7
   113e1:	or     DWORD PTR ds:0x7871c,0x1
   113e8:	push   0x1e2f2
   113ed:	call   0x11200
   113f2:	mov    ds:0x78718,eax
   113f7:	mov    eax,ds:0x78718
   113fc:	ret    
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	int3   
   11401:	int3   
   11402:	test   BYTE PTR ds:0x78724,0x1
   11409:	jne    0x11421
   1140b:	or     DWORD PTR ds:0x78724,0x1
   11412:	push   0x1e30a
   11417:	call   0x11200
   1141c:	mov    ds:0x78720,eax
   11421:	mov    eax,ds:0x78720
   11426:	ret    
   11427:	int3   
   11428:	int3   
   11429:	int3   
   1142a:	int3   
   1142b:	int3   
   1142c:	test   BYTE PTR ds:0x7872c,0x1
   11433:	jne    0x1144b
   11435:	or     DWORD PTR ds:0x7872c,0x1
   1143c:	push   0x1e326
   11441:	call   0x11200
   11446:	mov    ds:0x78728,eax
   1144b:	mov    eax,ds:0x78728
   11450:	ret    
   11451:	int3   
   11452:	int3   
   11453:	int3   
   11454:	int3   
   11455:	int3   
   11456:	test   BYTE PTR ds:0x78734,0x1
   1145d:	jne    0x11475
   1145f:	or     DWORD PTR ds:0x78734,0x1
   11466:	push   0x1e360
   1146b:	call   0x11200
   11470:	mov    ds:0x78730,eax
   11475:	mov    eax,ds:0x78730
   1147a:	ret    
   1147b:	int3   
   1147c:	int3   
   1147d:	int3   
   1147e:	int3   
   1147f:	int3   
   11480:	test   BYTE PTR ds:0x7873c,0x1
   11487:	jne    0x1149f
   11489:	or     DWORD PTR ds:0x7873c,0x1
   11490:	push   0x1e37a
   11495:	call   0x11200
   1149a:	mov    ds:0x78738,eax
   1149f:	mov    eax,ds:0x78738
   114a4:	ret    
   114a5:	int3   
   114a6:	int3   
   114a7:	int3   
   114a8:	int3   
   114a9:	int3   
   114aa:	test   BYTE PTR ds:0x78744,0x1
   114b1:	jne    0x114c9
   114b3:	or     DWORD PTR ds:0x78744,0x1
   114ba:	push   0x1e39c
   114bf:	call   0x11200
   114c4:	mov    ds:0x78740,eax
   114c9:	mov    eax,ds:0x78740
   114ce:	ret    
   114cf:	int3   
   114d0:	int3   
   114d1:	int3   
   114d2:	int3   
   114d3:	int3   
   114d4:	test   BYTE PTR ds:0x7874c,0x1
   114db:	jne    0x114f3
   114dd:	or     DWORD PTR ds:0x7874c,0x1
   114e4:	push   0x1e3d6
   114e9:	call   0x11200
   114ee:	mov    ds:0x78748,eax
   114f3:	mov    eax,ds:0x78748
   114f8:	ret    
   114f9:	int3   
   114fa:	int3   
   114fb:	int3   
   114fc:	int3   
   114fd:	int3   
   114fe:	test   BYTE PTR ds:0x78754,0x1
   11505:	jne    0x1151d
   11507:	or     DWORD PTR ds:0x78754,0x1
   1150e:	push   0x1e3fc
   11513:	call   0x11200
   11518:	mov    ds:0x78750,eax
   1151d:	mov    eax,ds:0x78750
   11522:	ret    
   11523:	int3   
   11524:	int3   
   11525:	int3   
   11526:	int3   
   11527:	int3   
   11528:	test   BYTE PTR ds:0x7875c,0x1
   1152f:	jne    0x11547
   11531:	or     DWORD PTR ds:0x7875c,0x1
   11538:	push   0x1e42c
   1153d:	call   0x11200
   11542:	mov    ds:0x78758,eax
   11547:	mov    eax,ds:0x78758
   1154c:	ret    
   1154d:	int3   
   1154e:	int3   
   1154f:	int3   
   11550:	int3   
   11551:	int3   
   11552:	test   BYTE PTR ds:0x78764,0x1
   11559:	jne    0x11571
   1155b:	or     DWORD PTR ds:0x78764,0x1
   11562:	push   0x1e45e
   11567:	call   0x11200
   1156c:	mov    ds:0x78760,eax
   11571:	mov    eax,ds:0x78760
   11576:	ret    
   11577:	int3   
   11578:	int3   
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	test   BYTE PTR ds:0x7876c,0x1
   11583:	jne    0x1159b
   11585:	or     DWORD PTR ds:0x7876c,0x1
   1158c:	push   0x1e46e
   11591:	call   0x11200
   11596:	mov    ds:0x78768,eax
   1159b:	mov    eax,ds:0x78768
   115a0:	ret    
   115a1:	int3   
   115a2:	int3   
   115a3:	int3   
   115a4:	int3   
   115a5:	int3   
   115a6:	test   BYTE PTR ds:0x78774,0x1
   115ad:	jne    0x115c5
   115af:	or     DWORD PTR ds:0x78774,0x1
   115b6:	push   0x1e498
   115bb:	call   0x11200
   115c0:	mov    ds:0x78770,eax
   115c5:	mov    eax,ds:0x78770
   115ca:	ret    
   115cb:	int3   
   115cc:	int3   
   115cd:	int3   
   115ce:	int3   
   115cf:	int3   
   115d0:	test   BYTE PTR ds:0x7877c,0x1
   115d7:	jne    0x115ef
   115d9:	or     DWORD PTR ds:0x7877c,0x1
   115e0:	push   0x1e4b4
   115e5:	call   0x11200
   115ea:	mov    ds:0x78778,eax
   115ef:	mov    eax,ds:0x78778
   115f4:	ret    
   115f5:	int3   
   115f6:	int3   
   115f7:	int3   
   115f8:	int3   
   115f9:	int3   
   115fa:	test   BYTE PTR ds:0x78784,0x1
   11601:	jne    0x11619
   11603:	or     DWORD PTR ds:0x78784,0x1
   1160a:	push   0x1e4f0
   1160f:	call   0x11200
   11614:	mov    ds:0x78780,eax
   11619:	mov    eax,ds:0x78780
   1161e:	ret    
   1161f:	int3   
   11620:	int3   
   11621:	int3   
   11622:	int3   
   11623:	int3   
   11624:	test   BYTE PTR ds:0x7878c,0x1
   1162b:	jne    0x11643
   1162d:	or     DWORD PTR ds:0x7878c,0x1
   11634:	push   0x1e514
   11639:	call   0x11200
   1163e:	mov    ds:0x78788,eax
   11643:	mov    eax,ds:0x78788
   11648:	ret    
   11649:	int3   
   1164a:	int3   
   1164b:	int3   
   1164c:	int3   
   1164d:	int3   
   1164e:	test   BYTE PTR ds:0x78794,0x1
   11655:	jne    0x1166d
   11657:	or     DWORD PTR ds:0x78794,0x1
   1165e:	push   0x1e53e
   11663:	call   0x11200
   11668:	mov    ds:0x78790,eax
   1166d:	mov    eax,ds:0x78790
   11672:	ret    
   11673:	int3   
   11674:	int3   
   11675:	int3   
   11676:	int3   
   11677:	int3   
   11678:	test   BYTE PTR ds:0x7879c,0x1
   1167f:	jne    0x11697
   11681:	or     DWORD PTR ds:0x7879c,0x1
   11688:	push   0x1e56a
   1168d:	call   0x11200
   11692:	mov    ds:0x78798,eax
   11697:	mov    eax,ds:0x78798
   1169c:	ret    
   1169d:	int3   
   1169e:	int3   
   1169f:	int3   
   116a0:	int3   
   116a1:	int3   
   116a2:	test   BYTE PTR ds:0x787a4,0x1
   116a9:	jne    0x116c1
   116ab:	or     DWORD PTR ds:0x787a4,0x1
   116b2:	push   0x1e57e
   116b7:	call   0x11200
   116bc:	mov    ds:0x787a0,eax
   116c1:	mov    eax,ds:0x787a0
   116c6:	ret    
   116c7:	int3   
   116c8:	int3   
   116c9:	int3   
   116ca:	int3   
   116cb:	int3   
   116cc:	test   BYTE PTR ds:0x787ac,0x1
   116d3:	jne    0x116eb
   116d5:	or     DWORD PTR ds:0x787ac,0x1
   116dc:	push   0x1e5ae
   116e1:	call   0x11200
   116e6:	mov    ds:0x787a8,eax
   116eb:	mov    eax,ds:0x787a8
   116f0:	ret    
   116f1:	int3   
   116f2:	int3   
   116f3:	int3   
   116f4:	int3   
   116f5:	int3   
   116f6:	test   BYTE PTR ds:0x787b4,0x1
   116fd:	jne    0x11715
   116ff:	or     DWORD PTR ds:0x787b4,0x1
   11706:	push   0x1e5cc
   1170b:	call   0x11200
   11710:	mov    ds:0x787b0,eax
   11715:	mov    eax,ds:0x787b0
   1171a:	ret    
   1171b:	int3   
   1171c:	int3   
   1171d:	int3   
   1171e:	int3   
   1171f:	int3   
   11720:	test   BYTE PTR ds:0x787bc,0x1
   11727:	jne    0x1173f
   11729:	or     DWORD PTR ds:0x787bc,0x1
   11730:	push   0x1e5e6
   11735:	call   0x11200
   1173a:	mov    ds:0x787b8,eax
   1173f:	mov    eax,ds:0x787b8
   11744:	ret    
   11745:	int3   
   11746:	int3   
   11747:	int3   
   11748:	int3   
   11749:	int3   
   1174a:	test   BYTE PTR ds:0x787c4,0x1
   11751:	jne    0x11769
   11753:	or     DWORD PTR ds:0x787c4,0x1
   1175a:	push   0x1e5fe
   1175f:	call   0x11200
   11764:	mov    ds:0x787c0,eax
   11769:	mov    eax,ds:0x787c0
   1176e:	ret    
   1176f:	int3   
   11770:	int3   
   11771:	int3   
   11772:	int3   
   11773:	int3   
   11774:	test   BYTE PTR ds:0x787cc,0x1
   1177b:	jne    0x11793
   1177d:	or     DWORD PTR ds:0x787cc,0x1
   11784:	push   0x1e61c
   11789:	call   0x11200
   1178e:	mov    ds:0x787c8,eax
   11793:	mov    eax,ds:0x787c8
   11798:	ret    
   11799:	int3   
   1179a:	int3   
   1179b:	int3   
   1179c:	int3   
   1179d:	int3   
   1179e:	test   BYTE PTR ds:0x787d4,0x1
   117a5:	jne    0x117bd
   117a7:	or     DWORD PTR ds:0x787d4,0x1
   117ae:	push   0x1e63c
   117b3:	call   0x11200
   117b8:	mov    ds:0x787d0,eax
   117bd:	mov    eax,ds:0x787d0
   117c2:	ret    
   117c3:	int3   
   117c4:	int3   
   117c5:	int3   
   117c6:	int3   
   117c7:	int3   
   117c8:	test   BYTE PTR ds:0x787dc,0x1
   117cf:	jne    0x117e7
   117d1:	or     DWORD PTR ds:0x787dc,0x1
   117d8:	push   0x1e65c
   117dd:	call   0x11200
   117e2:	mov    ds:0x787d8,eax
   117e7:	mov    eax,ds:0x787d8
   117ec:	ret    
   117ed:	int3   
   117ee:	int3   
   117ef:	int3   
   117f0:	int3   
   117f1:	int3   
   117f2:	test   BYTE PTR ds:0x787e4,0x1
   117f9:	jne    0x11811
   117fb:	or     DWORD PTR ds:0x787e4,0x1
   11802:	push   0x1e67c
   11807:	call   0x11200
   1180c:	mov    ds:0x787e0,eax
   11811:	mov    eax,ds:0x787e0
   11816:	ret    
   11817:	int3   
   11818:	int3   
   11819:	int3   
   1181a:	int3   
   1181b:	int3   
   1181c:	test   BYTE PTR ds:0x787ec,0x1
   11823:	jne    0x1183b
   11825:	or     DWORD PTR ds:0x787ec,0x1
   1182c:	push   0x1e692
   11831:	call   0x11200
   11836:	mov    ds:0x787e8,eax
   1183b:	mov    eax,ds:0x787e8
   11840:	ret    
   11841:	int3   
   11842:	int3   
   11843:	int3   
   11844:	int3   
   11845:	int3   
   11846:	test   BYTE PTR ds:0x787f4,0x1
   1184d:	jne    0x11865
   1184f:	or     DWORD PTR ds:0x787f4,0x1
   11856:	push   0x1e6bc
   1185b:	call   0x11200
   11860:	mov    ds:0x787f0,eax
   11865:	mov    eax,ds:0x787f0
   1186a:	ret    
   1186b:	int3   
   1186c:	int3   
   1186d:	int3   
   1186e:	int3   
   1186f:	int3   
   11870:	test   BYTE PTR ds:0x787fc,0x1
   11877:	jne    0x1188f
   11879:	or     DWORD PTR ds:0x787fc,0x1
   11880:	push   0x1e6d4
   11885:	call   0x11200
   1188a:	mov    ds:0x787f8,eax
   1188f:	mov    eax,ds:0x787f8
   11894:	ret    
   11895:	int3   
   11896:	int3   
   11897:	int3   
   11898:	int3   
   11899:	int3   
   1189a:	test   BYTE PTR ds:0x78804,0x1
   118a1:	jne    0x118b9
   118a3:	or     DWORD PTR ds:0x78804,0x1
   118aa:	push   0x1e702
   118af:	call   0x11200
   118b4:	mov    ds:0x78800,eax
   118b9:	mov    eax,ds:0x78800
   118be:	ret    
   118bf:	int3   
   118c0:	int3   
   118c1:	int3   
   118c2:	int3   
   118c3:	int3   
   118c4:	test   BYTE PTR ds:0x7880c,0x1
   118cb:	jne    0x118e3
   118cd:	or     DWORD PTR ds:0x7880c,0x1
   118d4:	push   0x1e72c
   118d9:	call   0x11200
   118de:	mov    ds:0x78808,eax
   118e3:	mov    eax,ds:0x78808
   118e8:	ret    
   118e9:	int3   
   118ea:	int3   
   118eb:	int3   
   118ec:	int3   
   118ed:	int3   
   118ee:	test   BYTE PTR ds:0x78814,0x1
   118f5:	jne    0x1190d
   118f7:	or     DWORD PTR ds:0x78814,0x1
   118fe:	push   0x1e74a
   11903:	call   0x11200
   11908:	mov    ds:0x78810,eax
   1190d:	mov    eax,ds:0x78810
   11912:	ret    
   11913:	int3   
   11914:	int3   
   11915:	int3   
   11916:	int3   
   11917:	int3   
   11918:	test   BYTE PTR ds:0x7881c,0x1
   1191f:	jne    0x11937
   11921:	or     DWORD PTR ds:0x7881c,0x1
   11928:	push   0x1e778
   1192d:	call   0x11200
   11932:	mov    ds:0x78818,eax
   11937:	mov    eax,ds:0x78818
   1193c:	ret    
   1193d:	int3   
   1193e:	int3   
   1193f:	int3   
   11940:	int3   
   11941:	int3   
   11942:	test   BYTE PTR ds:0x78824,0x1
   11949:	jne    0x11961
   1194b:	or     DWORD PTR ds:0x78824,0x1
   11952:	push   0x1e79c
   11957:	call   0x11200
   1195c:	mov    ds:0x78820,eax
   11961:	mov    eax,ds:0x78820
   11966:	ret    
   11967:	int3   
   11968:	int3   
   11969:	int3   
   1196a:	int3   
   1196b:	int3   
   1196c:	test   BYTE PTR ds:0x7882c,0x1
   11973:	jne    0x1198b
   11975:	or     DWORD PTR ds:0x7882c,0x1
   1197c:	push   0x1e7c2
   11981:	call   0x11200
   11986:	mov    ds:0x78828,eax
   1198b:	mov    eax,ds:0x78828
   11990:	ret    
   11991:	int3   
   11992:	int3   
   11993:	int3   
   11994:	int3   
   11995:	int3   
   11996:	test   BYTE PTR ds:0x78834,0x1
   1199d:	jne    0x119b5
   1199f:	or     DWORD PTR ds:0x78834,0x1
   119a6:	push   0x1e7e2
   119ab:	call   0x11200
   119b0:	mov    ds:0x78830,eax
   119b5:	mov    eax,ds:0x78830
   119ba:	ret    
   119bb:	int3   
   119bc:	int3   
   119bd:	int3   
   119be:	int3   
   119bf:	int3   
   119c0:	test   BYTE PTR ds:0x7883c,0x1
   119c7:	jne    0x119df
   119c9:	or     DWORD PTR ds:0x7883c,0x1
   119d0:	push   0x1e80c
   119d5:	call   0x11200
   119da:	mov    ds:0x78838,eax
   119df:	mov    eax,ds:0x78838
   119e4:	ret    
   119e5:	int3   
   119e6:	int3   
   119e7:	int3   
   119e8:	int3   
   119e9:	int3   
   119ea:	test   BYTE PTR ds:0x78844,0x1
   119f1:	jne    0x11a09
   119f3:	or     DWORD PTR ds:0x78844,0x1
   119fa:	push   0x1e830
   119ff:	call   0x11200
   11a04:	mov    ds:0x78840,eax
   11a09:	mov    eax,ds:0x78840
   11a0e:	ret    
   11a0f:	int3   
   11a10:	int3   
   11a11:	int3   
   11a12:	int3   
   11a13:	int3   
   11a14:	test   BYTE PTR ds:0x7884c,0x1
   11a1b:	jne    0x11a33
   11a1d:	or     DWORD PTR ds:0x7884c,0x1
   11a24:	push   0x1e85c
   11a29:	call   0x11200
   11a2e:	mov    ds:0x78848,eax
   11a33:	mov    eax,ds:0x78848
   11a38:	ret    
   11a39:	int3   
   11a3a:	int3   
   11a3b:	int3   
   11a3c:	int3   
   11a3d:	int3   
   11a3e:	test   BYTE PTR ds:0x78854,0x1
   11a45:	jne    0x11a5d
   11a47:	or     DWORD PTR ds:0x78854,0x1
   11a4e:	push   0x1e87a
   11a53:	call   0x11200
   11a58:	mov    ds:0x78850,eax
   11a5d:	mov    eax,ds:0x78850
   11a62:	ret    
   11a63:	int3   
   11a64:	int3   
   11a65:	int3   
   11a66:	int3   
   11a67:	int3   
   11a68:	test   BYTE PTR ds:0x7885c,0x1
   11a6f:	jne    0x11a87
   11a71:	or     DWORD PTR ds:0x7885c,0x1
   11a78:	push   0x1e8b0
   11a7d:	call   0x11200
   11a82:	mov    ds:0x78858,eax
   11a87:	mov    eax,ds:0x78858
   11a8c:	ret    
   11a8d:	int3   
   11a8e:	int3   
   11a8f:	int3   
   11a90:	int3   
   11a91:	int3   
   11a92:	call   0x1125e
   11a97:	test   eax,eax
   11a99:	jne    0x11a9e
   11a9b:	xor    eax,eax
   11a9d:	ret    
   11a9e:	call   0x11288
   11aa3:	test   eax,eax
   11aa5:	je     0x11a9b
   11aa7:	call   0x112b2
   11aac:	test   eax,eax
   11aae:	je     0x11a9b
   11ab0:	call   0x112dc
   11ab5:	test   eax,eax
   11ab7:	je     0x11a9b
   11ab9:	call   0x11306
   11abe:	test   eax,eax
   11ac0:	je     0x11a9b
   11ac2:	call   0x11330
   11ac7:	test   eax,eax
   11ac9:	je     0x11a9b
   11acb:	call   0x1135a
   11ad0:	test   eax,eax
   11ad2:	je     0x11a9b
   11ad4:	call   0x11384
   11ad9:	test   eax,eax
   11adb:	je     0x11a9b
   11add:	call   0x113ae
   11ae2:	test   eax,eax
   11ae4:	je     0x11a9b
   11ae6:	call   0x113d8
   11aeb:	test   eax,eax
   11aed:	je     0x11a9b
   11aef:	call   0x11402
   11af4:	test   eax,eax
   11af6:	je     0x11a9b
   11af8:	call   0x1142c
   11afd:	test   eax,eax
   11aff:	je     0x11a9b
   11b01:	call   0x11456
   11b06:	test   eax,eax
   11b08:	je     0x11a9b
   11b0a:	call   0x11480
   11b0f:	test   eax,eax
   11b11:	je     0x11a9b
   11b13:	call   0x114aa
   11b18:	test   eax,eax
   11b1a:	je     0x11a9b
   11b20:	call   0x114d4
   11b25:	test   eax,eax
   11b27:	je     0x11a9b
   11b2d:	call   0x114fe
   11b32:	test   eax,eax
   11b34:	je     0x11a9b
   11b3a:	call   0x11528
   11b3f:	test   eax,eax
   11b41:	je     0x11a9b
   11b47:	call   0x11552
   11b4c:	test   eax,eax
   11b4e:	je     0x11a9b
   11b54:	call   0x1157c
   11b59:	test   eax,eax
   11b5b:	je     0x11a9b
   11b61:	call   0x115a6
   11b66:	test   eax,eax
   11b68:	je     0x11a9b
   11b6e:	call   0x115d0
   11b73:	test   eax,eax
   11b75:	je     0x11a9b
   11b7b:	call   0x115fa
   11b80:	test   eax,eax
   11b82:	je     0x11a9b
   11b88:	call   0x11624
   11b8d:	test   eax,eax
   11b8f:	je     0x11a9b
   11b95:	call   0x1164e
   11b9a:	test   eax,eax
   11b9c:	je     0x11a9b
   11ba2:	call   0x11678
   11ba7:	test   eax,eax
   11ba9:	je     0x11a9b
   11baf:	call   0x116a2
   11bb4:	test   eax,eax
   11bb6:	je     0x11a9b
   11bbc:	call   0x116cc
   11bc1:	test   eax,eax
   11bc3:	je     0x11a9b
   11bc9:	call   0x116f6
   11bce:	test   eax,eax
   11bd0:	je     0x11a9b
   11bd6:	call   0x11720
   11bdb:	test   eax,eax
   11bdd:	je     0x11a9b
   11be3:	call   0x1174a
   11be8:	test   eax,eax
   11bea:	je     0x11a9b
   11bf0:	call   0x11774
   11bf5:	test   eax,eax
   11bf7:	je     0x11a9b
   11bfd:	call   0x1179e
   11c02:	test   eax,eax
   11c04:	je     0x11a9b
   11c0a:	call   0x117c8
   11c0f:	test   eax,eax
   11c11:	je     0x11a9b
   11c17:	call   0x117f2
   11c1c:	test   eax,eax
   11c1e:	je     0x11a9b
   11c24:	call   0x1181c
   11c29:	test   eax,eax
   11c2b:	je     0x11a9b
   11c31:	call   0x11846
   11c36:	test   eax,eax
   11c38:	je     0x11a9b
   11c3e:	call   0x11870
   11c43:	test   eax,eax
   11c45:	je     0x11a9b
   11c4b:	call   0x1189a
   11c50:	test   eax,eax
   11c52:	je     0x11a9b
   11c58:	call   0x118c4
   11c5d:	test   eax,eax
   11c5f:	je     0x11a9b
   11c65:	call   0x118ee
   11c6a:	test   eax,eax
   11c6c:	je     0x11a9b
   11c72:	call   0x11918
   11c77:	test   eax,eax
   11c79:	je     0x11a9b
   11c7f:	call   0x11942
   11c84:	test   eax,eax
   11c86:	je     0x11a9b
   11c8c:	call   0x1196c
   11c91:	test   eax,eax
   11c93:	je     0x11a9b
   11c99:	call   0x11996
   11c9e:	test   eax,eax
   11ca0:	je     0x11a9b
   11ca6:	call   0x119c0
   11cab:	test   eax,eax
   11cad:	je     0x11a9b
   11cb3:	call   0x119ea
   11cb8:	test   eax,eax
   11cba:	je     0x11a9b
   11cc0:	call   0x11a14
   11cc5:	test   eax,eax
   11cc7:	je     0x11a9b
   11ccd:	call   0x11a3e
   11cd2:	test   eax,eax
   11cd4:	je     0x11a9b
   11cda:	call   0x11a68
   11cdf:	neg    eax
   11ce1:	sbb    eax,eax
   11ce3:	neg    eax
   11ce5:	ret    
   11ce6:	int3   
   11ce7:	int3   
   11ce8:	int3   
   11ce9:	int3   
   11cea:	int3   
   11ceb:	int3   
   11cec:	mov    edi,edi
   11cee:	push   ebp
   11cef:	mov    ebp,esp
   11cf1:	push   esi
   11cf2:	push   0x20
   11cf4:	push   0x61737973
   11cf9:	push   DWORD PTR [ebp+0x8]
   11cfc:	push   0x1
   11cfe:	call   0x115d0
   11d03:	call   eax
   11d05:	mov    esi,eax
   11d07:	test   esi,esi
   11d09:	jne    0x11d17
   11d0b:	push   0xc000009a
   11d10:	call   0x115a6
   11d15:	call   eax
   11d17:	mov    eax,esi
   11d19:	pop    esi
   11d1a:	pop    ebp
   11d1b:	ret    
   11d1c:	int3   
   11d1d:	int3   
   11d1e:	int3   
   11d1f:	int3   
   11d20:	int3   
   11d21:	int3   
   11d22:	mov    edi,edi
   11d24:	push   ebp
   11d25:	mov    ebp,esp
   11d27:	cmp    DWORD PTR [ebp+0x8],0x0
   11d2b:	je     0x11d39
   11d2d:	push   0x0
   11d2f:	push   DWORD PTR [ebp+0x8]
   11d32:	call   0x115fa
   11d37:	call   eax
   11d39:	pop    ebp
   11d3a:	ret    
   11d3b:	int3   
   11d3c:	int3   
   11d3d:	int3   
   11d3e:	int3   
   11d3f:	int3   
   11d40:	mov    edi,edi
   11d42:	push   ebp
   11d43:	mov    ebp,esp
   11d45:	mov    eax,ecx
   11d47:	mov    ecx,DWORD PTR [ebp+0x8]
   11d4a:	mov    edx,DWORD PTR [ecx]
   11d4c:	test   edx,edx
   11d4e:	je     0x11d57
   11d50:	mov    DWORD PTR [eax],edx
   11d52:	inc    DWORD PTR [edx+0x4]
   11d55:	jmp    0x11d5a
   11d57:	and    DWORD PTR [eax],0x0
   11d5a:	pop    ebp
   11d5b:	ret    0x4
   11d5e:	int3   
   11d5f:	int3   
   11d60:	int3   
   11d61:	int3   
   11d62:	int3   
   11d63:	int3   
   11d64:	mov    edi,edi
   11d66:	push   esi
   11d67:	mov    esi,ecx
   11d69:	dec    DWORD PTR [esi+0x4]
   11d6c:	jne    0x11d7d
   11d6e:	push   DWORD PTR [esi]
   11d70:	call   0x11d22
   11d75:	push   esi
   11d76:	call   0x11d22
   11d7b:	pop    ecx
   11d7c:	pop    ecx
   11d7d:	pop    esi
   11d7e:	ret    
   11d7f:	int3   
   11d80:	int3   
   11d81:	int3   
   11d82:	int3   
   11d83:	int3   
   11d84:	mov    edi,edi
   11d86:	push   ebp
   11d87:	mov    ebp,esp
   11d89:	push   ecx
   11d8a:	push   edi
   11d8b:	lea    eax,[ebp-0x4]
   11d8e:	push   eax
   11d8f:	xor    edi,edi
   11d91:	push   edi
   11d92:	push   edi
   11d93:	push   0x1b
   11d95:	push   DWORD PTR [ebp+0x8]
   11d98:	call   0x1135a
   11d9d:	call   eax
   11d9f:	cmp    eax,0xc0000004
   11da4:	jne    0x11e0f
   11da6:	mov    ecx,DWORD PTR [ebp-0x4]
   11da9:	push   ebx
   11daa:	mov    ebx,DWORD PTR [ebp+0xc]
   11dad:	movzx  edx,WORD PTR [ebx+0x2]
   11db1:	lea    eax,[ecx-0x8]
   11db4:	cmp    edx,eax
   11db6:	jae    0x11dc2
   11db8:	mov    WORD PTR [ebx],ax
   11dbb:	mov    eax,0x80000005
   11dc0:	jmp    0x11e0e
   11dc2:	push   esi
   11dc3:	push   0x20736649
   11dc8:	push   ecx
   11dc9:	push   edi
   11dca:	call   0x1164e
   11dcf:	call   eax
   11dd1:	mov    esi,eax
   11dd3:	cmp    esi,edi
   11dd5:	jne    0x11dde
   11dd7:	mov    eax,0xc000009a
   11ddc:	jmp    0x11e0d
   11dde:	lea    eax,[ebp-0x4]
   11de1:	push   eax
   11de2:	push   DWORD PTR [ebp-0x4]
   11de5:	push   esi
   11de6:	push   0x1b
   11de8:	push   DWORD PTR [ebp+0x8]
   11deb:	call   0x1135a
   11df0:	call   eax
   11df2:	mov    edi,eax
   11df4:	test   edi,edi
   11df6:	jl     0x11e01
   11df8:	push   esi
   11df9:	push   ebx
   11dfa:	call   0x11624
   11dff:	call   eax
   11e01:	push   0x0
   11e03:	push   esi
   11e04:	call   0x115fa
   11e09:	call   eax
   11e0b:	mov    eax,edi
   11e0d:	pop    esi
   11e0e:	pop    ebx
   11e0f:	pop    edi
   11e10:	leave  
   11e11:	ret    0x8
   11e14:	int3   
   11e15:	int3   
   11e16:	int3   
   11e17:	int3   
   11e18:	int3   
   11e19:	int3   
   11e1a:	mov    edi,edi
   11e1c:	push   ebp
   11e1d:	mov    ebp,esp
   11e1f:	sub    esp,0x18
   11e22:	push   0x0
   11e24:	push   0x18
   11e26:	lea    eax,[ebp-0x18]
   11e29:	push   eax
   11e2a:	push   0x0
   11e2c:	push   DWORD PTR [ebp+0x8]
   11e2f:	call   0x1135a
   11e34:	call   eax
   11e36:	test   eax,eax
   11e38:	jl     0x11e3f
   11e3a:	mov    eax,DWORD PTR [ebp-0x8]
   11e3d:	jmp    0x11e41
   11e3f:	xor    eax,eax
   11e41:	leave  
   11e42:	ret    0x4
   11e45:	int3   
   11e46:	int3   
   11e47:	int3   
   11e48:	int3   
   11e49:	int3   
   11e4a:	mov    edi,edi
   11e4c:	push   ebp
   11e4d:	mov    ebp,esp
   11e4f:	sub    esp,0x10
   11e52:	push   esi
   11e53:	push   edi
   11e54:	xor    eax,eax
   11e56:	mov    WORD PTR [ebp-0x8],ax
   11e5a:	lea    edi,[ebp-0x6]
   11e5d:	stos   DWORD PTR es:[edi],eax
   11e5e:	stos   WORD PTR es:[edi],ax
   11e60:	mov    eax,DWORD PTR [ebp+0xc]
   11e63:	mov    DWORD PTR [ebp-0x4],eax
   11e66:	lea    ecx,[eax+0x2]
   11e69:	mov    dx,WORD PTR [eax]
   11e6c:	inc    eax
   11e6d:	inc    eax
   11e6e:	test   dx,dx
   11e71:	jne    0x11e69
   11e73:	mov    esi,DWORD PTR [ebp+0x8]
   11e76:	movzx  edx,WORD PTR [esi]
   11e79:	sub    eax,ecx
   11e7b:	sar    eax,1
   11e7d:	lea    ecx,[eax+eax*1]
   11e80:	mov    WORD PTR [ebp-0x8],cx
   11e84:	mov    WORD PTR [ebp-0x6],cx
   11e88:	cmp    dx,cx
   11e8b:	jb     0x11ecb
   11e8d:	xor    eax,eax
   11e8f:	lea    edi,[ebp-0xe]
   11e92:	stos   DWORD PTR es:[edi],eax
   11e93:	stos   WORD PTR es:[edi],ax
   11e95:	mov    WORD PTR [ebp-0x10],cx
   11e99:	mov    WORD PTR [ebp-0xe],cx
   11e9d:	movzx  eax,dx
   11ea0:	movzx  ecx,cx
   11ea3:	sub    eax,ecx
   11ea5:	mov    ecx,DWORD PTR [esi+0x4]
   11ea8:	cdq    
   11ea9:	sub    eax,edx
   11eab:	sar    eax,1
   11ead:	lea    eax,[ecx+eax*2]
   11eb0:	mov    DWORD PTR [ebp-0xc],eax
   11eb3:	push   0x1
   11eb5:	lea    eax,[ebp-0x8]
   11eb8:	push   eax
   11eb9:	lea    eax,[ebp-0x10]
   11ebc:	push   eax
   11ebd:	call   0x116a2
   11ec2:	call   eax
   11ec4:	neg    eax
   11ec6:	sbb    eax,eax
   11ec8:	inc    eax
   11ec9:	jmp    0x11ecd
   11ecb:	xor    al,al
   11ecd:	pop    edi
   11ece:	pop    esi
   11ecf:	leave  
   11ed0:	ret    0x8
   11ed3:	int3   
   11ed4:	int3   
   11ed5:	int3   
   11ed6:	int3   
   11ed7:	int3   
   11ed8:	mov    edi,edi
   11eda:	push   ebp
   11edb:	mov    ebp,esp
   11edd:	push   ebx
   11ede:	xor    eax,eax
   11ee0:	push   eax
   11ee1:	push   eax
   11ee2:	push   eax
   11ee3:	push   eax
   11ee4:	mov    ebx,0x77b2c
   11ee9:	push   ebx
   11eea:	call   0x119ea
   11eef:	call   eax
   11ef1:	test   eax,eax
   11ef3:	jge    0x11ef9
   11ef5:	xor    al,al
   11ef7:	jmp    0x11f1d
   11ef9:	push   esi
   11efa:	mov    esi,DWORD PTR [ebp+0x8]
   11efd:	push   edi
   11efe:	imul   esi,esi,0x14
   11f01:	mov    edi,DWORD PTR [ebp+0xc]
   11f04:	push   0x5
   11f06:	pop    ecx
   11f07:	push   0x0
   11f09:	add    esi,0x7857c
   11f0f:	push   ebx
   11f10:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f12:	call   0x11a14
   11f17:	call   eax
   11f19:	pop    edi
   11f1a:	mov    al,0x1
   11f1c:	pop    esi
   11f1d:	pop    ebx
   11f1e:	pop    ebp
   11f1f:	ret    0x8
   11f22:	int3   
   11f23:	int3   
   11f24:	int3   
   11f25:	int3   
   11f26:	int3   
   11f27:	int3   
   11f28:	mov    edi,edi
   11f2a:	push   ebp
   11f2b:	mov    ebp,esp
   11f2d:	push   ebx
   11f2e:	xor    eax,eax
   11f30:	push   eax
   11f31:	push   eax
   11f32:	push   eax
   11f33:	push   eax
   11f34:	mov    ebx,0x77b2c
   11f39:	push   ebx
   11f3a:	call   0x119ea
   11f3f:	call   eax
   11f41:	test   eax,eax
   11f43:	jl     0x11f67
   11f45:	push   esi
   11f46:	mov    esi,DWORD PTR [ebp+0xc]
   11f49:	push   edi
   11f4a:	mov    edi,DWORD PTR [ebp+0x8]
   11f4d:	imul   edi,edi,0x14
   11f50:	push   0x5
   11f52:	pop    ecx
   11f53:	push   0x0
   11f55:	add    edi,0x7857c
   11f5b:	push   ebx
   11f5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   11f5e:	call   0x11a14
   11f63:	call   eax
   11f65:	pop    edi
   11f66:	pop    esi
   11f67:	pop    ebx
   11f68:	pop    ebp
   11f69:	ret    0x8
   11f6c:	int3   
   11f6d:	int3   
   11f6e:	int3   
   11f6f:	int3   
   11f70:	int3   
   11f71:	int3   
   11f72:	mov    edi,edi
   11f74:	push   ebp
   11f75:	mov    ebp,esp
   11f77:	sub    esp,0x14
   11f7a:	and    DWORD PTR [ebp-0x14],0x0
   11f7e:	push   edi
   11f7f:	xor    eax,eax
   11f81:	lea    edi,[ebp-0x10]
   11f84:	stos   DWORD PTR es:[edi],eax
   11f85:	stos   DWORD PTR es:[edi],eax
   11f86:	stos   DWORD PTR es:[edi],eax
   11f87:	stos   DWORD PTR es:[edi],eax
   11f88:	lea    eax,[ebp-0x14]
   11f8b:	push   eax
   11f8c:	push   DWORD PTR [ebp+0x8]
   11f8f:	call   0x11f28
   11f94:	pop    edi
   11f95:	leave  
   11f96:	ret    0x4
   11f99:	int3   
   11f9a:	int3   
   11f9b:	int3   
   11f9c:	int3   
   11f9d:	int3   
   11f9e:	mov    edi,edi
   11fa0:	push   ebp
   11fa1:	mov    ebp,esp
   11fa3:	mov    ecx,DWORD PTR ds:0x785a4
   11fa9:	sub    esp,0x38
   11fac:	push   esi
   11fad:	xor    esi,esi
   11faf:	cmp    ecx,esi
   11fb1:	jne    0x11fbb
   11fb3:	or     eax,0xffffffff
   11fb6:	jmp    0x120a2
   11fbb:	push   edi
   11fbc:	xor    eax,eax
   11fbe:	mov    DWORD PTR [ebp-0x20],esi
   11fc1:	lea    edi,[ebp-0x1c]
   11fc4:	stos   DWORD PTR es:[edi],eax
   11fc5:	lea    eax,[ebp-0x18]
   11fc8:	push   eax
   11fc9:	lea    eax,[ebp-0x38]
   11fcc:	push   eax
   11fcd:	push   0x400
   11fd2:	lea    eax,[ebp-0x10]
   11fd5:	push   eax
   11fd6:	mov    DWORD PTR [ebp-0x4],esi
   11fd9:	mov    DWORD PTR [ebp-0x38],0x18
   11fe0:	mov    DWORD PTR [ebp-0x34],esi
   11fe3:	mov    DWORD PTR [ebp-0x2c],esi
   11fe6:	mov    DWORD PTR [ebp-0x30],esi
   11fe9:	mov    DWORD PTR [ebp-0x28],esi
   11fec:	mov    DWORD PTR [ebp-0x24],esi
   11fef:	mov    DWORD PTR [ebp-0x18],ecx
   11ff2:	mov    DWORD PTR [ebp-0x14],esi
   11ff5:	call   0x1125e
   11ffa:	call   eax
   11ffc:	mov    edi,eax
   11ffe:	cmp    edi,esi
   12000:	jl     0x1209f
   12006:	lea    eax,[ebp-0xc]
   12009:	push   eax
   1200a:	push   0x8
   1200c:	push   DWORD PTR [ebp-0x10]
   1200f:	call   0x114d4
   12014:	call   eax
   12016:	mov    edi,eax
   12018:	cmp    edi,esi
   1201a:	jl     0x12095
   1201c:	lea    eax,[ebp-0x4]
   1201f:	push   eax
   12020:	push   0x1
   12022:	push   esi
   12023:	push   esi
   12024:	push   0x1
   12026:	push   DWORD PTR [ebp-0xc]
   12029:	call   0x112dc
   1202e:	call   eax
   12030:	mov    edi,eax
   12032:	cmp    edi,esi
   12034:	jl     0x1208b
   12036:	mov    eax,DWORD PTR [ebp+0x8]
   12039:	mov    DWORD PTR [ebp-0x18],eax
   1203c:	lea    eax,[ebp-0x18]
   1203f:	push   eax
   12040:	lea    eax,[ebp-0x38]
   12043:	push   eax
   12044:	push   0x200
   12049:	lea    eax,[ebp-0x8]
   1204c:	push   eax
   1204d:	call   0x1125e
   12052:	call   eax
   12054:	mov    edi,eax
   12056:	cmp    edi,esi
   12058:	jl     0x12081
   1205a:	mov    eax,DWORD PTR [ebp-0x4]
   1205d:	push   0x8
   1205f:	mov    DWORD PTR [ebp-0x20],eax
   12062:	lea    eax,[ebp-0x20]
   12065:	push   eax
   12066:	push   0x9
   12068:	push   DWORD PTR [ebp-0x8]
   1206b:	mov    DWORD PTR [ebp-0x1c],esi
   1206e:	call   0x114fe
   12073:	call   eax
   12075:	push   DWORD PTR [ebp-0x8]
   12078:	mov    edi,eax
   1207a:	call   0x11552
   1207f:	call   eax
   12081:	push   DWORD PTR [ebp-0x4]
   12084:	call   0x11552
   12089:	call   eax
   1208b:	push   DWORD PTR [ebp-0xc]
   1208e:	call   0x11552
   12093:	call   eax
   12095:	push   DWORD PTR [ebp-0x10]
   12098:	call   0x11552
   1209d:	call   eax
   1209f:	mov    eax,edi
   120a1:	pop    edi
   120a2:	pop    esi
   120a3:	leave  
   120a4:	ret    0x4
   120a7:	int3   
   120a8:	int3   
   120a9:	int3   
   120aa:	int3   
   120ab:	int3   
   120ac:	mov    edi,edi
   120ae:	push   ebp
   120af:	mov    ebp,esp
   120b1:	push   ebx
   120b2:	xor    eax,eax
   120b4:	push   eax
   120b5:	push   eax
   120b6:	push   eax
   120b7:	push   eax
   120b8:	mov    ebx,0x784b8
   120bd:	push   ebx
   120be:	call   0x119ea
   120c3:	call   eax
   120c5:	test   eax,eax
   120c7:	jl     0x120e4
   120c9:	push   esi
   120ca:	mov    esi,DWORD PTR [ebp+0x8]
   120cd:	push   edi
   120ce:	push   0x40
   120d0:	pop    ecx
   120d1:	push   0x0
   120d3:	mov    edi,0x785a8
   120d8:	push   ebx
   120d9:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   120db:	call   0x11a14
   120e0:	call   eax
   120e2:	pop    edi
   120e3:	pop    esi
   120e4:	pop    ebx
   120e5:	pop    ebp
   120e6:	ret    0x4
   120e9:	int3   
   120ea:	int3   
   120eb:	int3   
   120ec:	int3   
   120ed:	int3   
   120ee:	mov    edi,edi
   120f0:	push   ebp
   120f1:	mov    ebp,esp
   120f3:	push   ebx
   120f4:	xor    eax,eax
   120f6:	push   eax
   120f7:	push   eax
   120f8:	push   eax
   120f9:	push   eax
   120fa:	mov    ebx,0x784b8
   120ff:	push   ebx
   12100:	call   0x119ea
   12105:	call   eax
   12107:	test   eax,eax
   12109:	jge    0x1210f
   1210b:	xor    al,al
   1210d:	jmp    0x12136
   1210f:	push   esi
   12110:	push   edi
   12111:	mov    edi,DWORD PTR [ebp+0x8]
   12114:	push   0x40
   12116:	pop    ecx
   12117:	push   0x0
   12119:	mov    esi,0x785a8
   1211e:	push   ebx
   1211f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12121:	call   0x11a14
   12126:	call   eax
   12128:	xor    eax,eax
   1212a:	cmp    WORD PTR ds:0x785a8,ax
   12131:	pop    edi
   12132:	setne  al
   12135:	pop    esi
   12136:	pop    ebx
   12137:	pop    ebp
   12138:	ret    0x4
   1213b:	int3   
   1213c:	int3   
   1213d:	int3   
   1213e:	int3   
   1213f:	int3   
   12140:	mov    edi,edi
   12142:	push   ebp
   12143:	mov    ebp,esp
   12145:	sub    esp,0x43c
   1214b:	mov    eax,ds:0x77b1c
   12150:	xor    eax,ebp
   12152:	mov    DWORD PTR [ebp-0x4],eax
   12155:	mov    eax,DWORD PTR [ebp+0xc]
   12158:	push   ebx
   12159:	push   esi
   1215a:	mov    esi,DWORD PTR [ebp+0x8]
   1215d:	push   edi
   1215e:	xor    ebx,ebx
   12160:	push   0x3ff
   12165:	mov    DWORD PTR [ebp-0x418],eax
   1216b:	lea    eax,[ebp-0x403]
   12171:	push   ebx
   12172:	push   eax
   12173:	mov    DWORD PTR [ebp-0x424],esi
   12179:	mov    BYTE PTR [ebp-0x404],bl
   1217f:	call   0x1dd02
   12184:	add    esp,0xc
   12187:	lea    eax,[ebp-0x410]
   1218d:	push   eax
   1218e:	push   0x400
   12193:	lea    eax,[ebp-0x404]
   12199:	push   eax
   1219a:	push   ebx
   1219b:	push   ebx
   1219c:	push   esi
   1219d:	jmp    0x1234c
   121a2:	cmp    eax,ebx
   121a4:	jl     0x1236e
   121aa:	mov    eax,DWORD PTR [ebp-0x418]
   121b0:	lea    edx,[eax+0x2]
   121b3:	mov    cx,WORD PTR [eax]
   121b6:	inc    eax
   121b7:	inc    eax
   121b8:	cmp    cx,bx
   121bb:	jne    0x121b3
   121bd:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121c3:	sub    eax,edx
   121c5:	shr    ecx,1
   121c7:	sar    eax,1
   121c9:	lea    esi,[ecx+eax*1+0x2]
   121cd:	xor    ecx,ecx
   121cf:	push   0x2
   121d1:	pop    edx
   121d2:	mov    eax,esi
   121d4:	mul    edx
   121d6:	seto   cl
   121d9:	neg    ecx
   121db:	or     ecx,eax
   121dd:	push   ecx
   121de:	call   0x11cec
   121e3:	mov    edi,eax
   121e5:	lea    eax,[esi+esi*1]
   121e8:	push   eax
   121e9:	push   ebx
   121ea:	push   edi
   121eb:	mov    DWORD PTR [ebp-0x40c],edi
   121f1:	call   0x1dd02
   121f6:	mov    eax,DWORD PTR [ebp-0x418]
   121fc:	add    esp,0x10
   121ff:	mov    ecx,eax
   12201:	mov    dx,WORD PTR [eax]
   12204:	inc    eax
   12205:	inc    eax
   12206:	cmp    dx,bx
   12209:	jne    0x12201
   1220b:	sub    eax,ecx
   1220d:	dec    edi
   1220e:	mov    esi,ecx
   12210:	dec    edi
   12211:	mov    cx,WORD PTR [edi+0x2]
   12215:	inc    edi
   12216:	inc    edi
   12217:	cmp    cx,bx
   1221a:	jne    0x12211
   1221c:	mov    ecx,eax
   1221e:	shr    ecx,0x2
   12221:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12223:	mov    ecx,eax
   12225:	and    ecx,0x3
   12228:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1222a:	mov    edi,DWORD PTR [ebp-0x40c]
   12230:	dec    edi
   12231:	dec    edi
   12232:	mov    ax,WORD PTR [edi+0x2]
   12236:	inc    edi
   12237:	inc    edi
   12238:	cmp    ax,bx
   1223b:	jne    0x12232
   1223d:	mov    esi,0x1e0aa
   12242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12243:	mov    eax,DWORD PTR [ebp-0x3f8]
   12249:	shr    eax,1
   1224b:	push   eax
   1224c:	lea    eax,[ebp-0x3f4]
   12252:	push   eax
   12253:	push   DWORD PTR [ebp-0x40c]
   12259:	call   0x1dd0e
   1225e:	mov    esi,DWORD PTR [ebp-0x40c]
   12264:	mov    eax,esi
   12266:	add    esp,0xc
   12269:	mov    DWORD PTR [ebp-0x41c],esi
   1226f:	lea    edx,[eax+0x2]
   12272:	mov    cx,WORD PTR [eax]
   12275:	inc    eax
   12276:	inc    eax
   12277:	cmp    cx,bx
   1227a:	jne    0x12272
   1227c:	sub    eax,edx
   1227e:	sar    eax,1
   12280:	add    eax,eax
   12282:	mov    WORD PTR [ebp-0x41e],ax
   12289:	mov    WORD PTR [ebp-0x420],ax
   12290:	lea    eax,[ebp-0x420]
   12296:	mov    DWORD PTR [ebp-0x434],eax
   1229c:	lea    eax,[ebp-0x43c]
   122a2:	push   eax
   122a3:	push   0xf003f
   122a8:	lea    eax,[ebp-0x414]
   122ae:	push   eax
   122af:	mov    DWORD PTR [ebp-0x43c],0x18
   122b9:	mov    DWORD PTR [ebp-0x438],ebx
   122bf:	mov    DWORD PTR [ebp-0x430],0x40
   122c9:	mov    DWORD PTR [ebp-0x42c],ebx
   122cf:	mov    DWORD PTR [ebp-0x428],ebx
   122d5:	call   0x113ae
   122da:	call   eax
   122dc:	push   esi
   122dd:	test   eax,eax
   122df:	jl     0x12368
   122e5:	push   DWORD PTR [ebp-0x414]
   122eb:	call   0x12140
   122f0:	push   esi
   122f1:	mov    BYTE PTR [ebp-0x405],al
   122f7:	call   0x11d22
   122fc:	pop    ecx
   122fd:	push   DWORD PTR [ebp-0x414]
   12303:	call   0x113d8
   12308:	call   eax
   1230a:	test   eax,eax
   1230c:	jl     0x1236e
   1230e:	cmp    BYTE PTR [ebp-0x405],bl
   12314:	je     0x1236e
   12316:	push   0x3ff
   1231b:	lea    eax,[ebp-0x403]
   12321:	push   ebx
   12322:	push   eax
   12323:	mov    BYTE PTR [ebp-0x404],bl
   12329:	call   0x1dd02
   1232e:	add    esp,0xc
   12331:	lea    eax,[ebp-0x410]
   12337:	push   eax
   12338:	push   0x400
   1233d:	lea    eax,[ebp-0x404]
   12343:	push   eax
   12344:	push   ebx
   12345:	push   ebx
   12346:	push   DWORD PTR [ebp-0x424]
   1234c:	mov    DWORD PTR [ebp-0x410],ebx
   12352:	call   0x116cc
   12357:	call   eax
   12359:	cmp    eax,0x8000001a
   1235e:	jne    0x121a2
   12364:	mov    al,0x1
   12366:	jmp    0x12370
   12368:	call   0x11d22
   1236d:	pop    ecx
   1236e:	xor    al,al
   12370:	mov    ecx,DWORD PTR [ebp-0x4]
   12373:	pop    edi
   12374:	pop    esi
   12375:	xor    ecx,ebp
   12377:	pop    ebx
   12378:	call   0x1dca9
   1237d:	leave  
   1237e:	ret    0x8
   12381:	int3   
   12382:	int3   
   12383:	int3   
   12384:	int3   
   12385:	int3   
   12386:	mov    eax,ds:0x78524
   1238b:	test   eax,eax
   1238d:	je     0x1239e
   1238f:	push   eax
   12390:	call   0x1174a
   12395:	call   eax
   12397:	and    DWORD PTR ds:0x78524,0x0
   1239e:	ret    
   1239f:	int3   
   123a0:	int3   
   123a1:	int3   
   123a2:	int3   
   123a3:	int3   
   123a4:	push   0x28
   123a6:	push   0x77618
   123ab:	call   0x1dd40
   123b0:	xor    eax,eax
   123b2:	mov    DWORD PTR [ebp-0x28],eax
   123b5:	mov    DWORD PTR [ebp-0x2c],eax
   123b8:	mov    ebx,DWORD PTR [ebp+0x8]
   123bb:	cmp    ebx,eax
   123bd:	jne    0x123c6
   123bf:	xor    eax,eax
   123c1:	jmp    0x124a3
   123c6:	mov    DWORD PTR [ebp-0x4],eax
   123c9:	lea    ecx,[ebp-0x2c]
   123cc:	push   ecx
   123cd:	push   eax
   123ce:	push   0x1
   123d0:	push   ebx
   123d1:	call   0x114aa
   123d6:	call   eax
   123d8:	mov    edx,eax
   123da:	sub    edx,ebx
   123dc:	mov    DWORD PTR [ebp-0x38],edx
   123df:	mov    esi,DWORD PTR [eax+0x1c]
   123e2:	add    esi,ebx
   123e4:	mov    edi,DWORD PTR [eax+0x24]
   123e7:	add    edi,ebx
   123e9:	mov    ecx,DWORD PTR [eax+0x20]
   123ec:	add    ecx,ebx
   123ee:	and    DWORD PTR [ebp-0x20],0x0
   123f2:	mov    ebx,DWORD PTR [ebp-0x20]
   123f5:	cmp    ebx,DWORD PTR [eax+0x18]
   123f8:	jae    0x1248b
   123fe:	movsx  ebx,WORD PTR [edi+ebx*2]
   12402:	cmp    ebx,DWORD PTR [eax+0x14]
   12405:	jae    0x1247f
   12407:	lea    ebx,[esi+ebx*4]
   1240a:	mov    DWORD PTR [ebp-0x34],ebx
   1240d:	cmp    DWORD PTR [ebx],edx
   1240f:	jb     0x1241d
   12411:	mov    ebx,DWORD PTR [ebp-0x2c]
   12414:	add    edx,ebx
   12416:	mov    ebx,DWORD PTR [ebp-0x34]
   12419:	cmp    DWORD PTR [ebx],edx
   1241b:	jb     0x12474
   1241d:	mov    edx,DWORD PTR [ebp+0xc]
   12420:	mov    DWORD PTR [ebp-0x30],edx
   12423:	mov    edx,DWORD PTR [ebp-0x20]
   12426:	mov    edx,DWORD PTR [ecx+edx*4]
   12429:	add    edx,DWORD PTR [ebp+0x8]
   1242c:	mov    DWORD PTR [ebp-0x24],edx
   1242f:	mov    dl,BYTE PTR [edx]
   12431:	mov    ebx,DWORD PTR [ebp-0x30]
   12434:	cmp    dl,BYTE PTR [ebx]
   12436:	jne    0x12461
   12438:	test   dl,dl
   1243a:	je     0x1245d
   1243c:	mov    edx,DWORD PTR [ebp-0x24]
   1243f:	mov    dl,BYTE PTR [edx+0x1]
   12442:	mov    BYTE PTR [ebp-0x19],dl
   12445:	cmp    dl,BYTE PTR [ebx+0x1]
   12448:	jne    0x12461
   1244a:	mov    edx,DWORD PTR [ebp-0x24]
   1244d:	inc    edx
   1244e:	inc    edx
   1244f:	mov    DWORD PTR [ebp-0x24],edx
   12452:	inc    ebx
   12453:	inc    ebx
   12454:	mov    DWORD PTR [ebp-0x30],ebx
   12457:	cmp    BYTE PTR [ebp-0x19],0x0
   1245b:	jne    0x1242f
   1245d:	xor    edx,edx
   1245f:	jmp    0x12466
   12461:	sbb    edx,edx
   12463:	sbb    edx,0xffffffff
   12466:	test   edx,edx
   12468:	jne    0x12474
   1246a:	mov    eax,DWORD PTR [ebp-0x34]
   1246d:	mov    eax,DWORD PTR [eax]
   1246f:	add    eax,DWORD PTR [ebp+0x8]
   12472:	jmp    0x12499
   12474:	inc    DWORD PTR [ebp-0x20]
   12477:	mov    edx,DWORD PTR [ebp-0x38]
   1247a:	jmp    0x123f2
   1247f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12486:	jmp    0x123bf
   1248b:	mov    eax,DWORD PTR [ebp-0x28]
   1248e:	jmp    0x1249c
   12490:	xor    eax,eax
   12492:	inc    eax
   12493:	ret    
   12494:	mov    esp,DWORD PTR [ebp-0x18]
   12497:	xor    eax,eax
   12499:	mov    DWORD PTR [ebp-0x28],eax
   1249c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a3:	call   0x1dd85
   124a8:	ret    0x8
   124ab:	int3   
   124ac:	int3   
   124ad:	int3   
   124ae:	int3   
   124af:	int3   
   124b0:	mov    edi,edi
   124b2:	push   ebp
   124b3:	mov    ebp,esp
   124b5:	sub    esp,0x48
   124b8:	mov    eax,DWORD PTR [ebp+0xc]
   124bb:	mov    eax,DWORD PTR [eax]
   124bd:	push   edi
   124be:	mov    DWORD PTR [ebp-0x30],eax
   124c1:	lea    eax,[ebp-0x30]
   124c4:	push   eax
   124c5:	lea    eax,[ebp-0x48]
   124c8:	push   eax
   124c9:	xor    edi,edi
   124cb:	push   0x1f0fff
   124d0:	lea    eax,[ebp-0x10]
   124d3:	push   eax
   124d4:	mov    DWORD PTR [ebp-0x48],0x18
   124db:	mov    DWORD PTR [ebp-0x44],edi
   124de:	mov    DWORD PTR [ebp-0x3c],0x200
   124e5:	mov    DWORD PTR [ebp-0x40],edi
   124e8:	mov    DWORD PTR [ebp-0x38],edi
   124eb:	mov    DWORD PTR [ebp-0x34],edi
   124ee:	mov    DWORD PTR [ebp-0x2c],edi
   124f1:	mov    DWORD PTR [ebp-0x10],edi
   124f4:	call   0x1125e
   124f9:	call   eax
   124fb:	test   eax,eax
   124fd:	jl     0x12852
   12503:	push   ebx
   12504:	push   esi
   12505:	push   0x40
   12507:	mov    esi,0x1000
   1250c:	push   esi
   1250d:	lea    eax,[ebp-0x14]
   12510:	push   eax
   12511:	push   edi
   12512:	lea    eax,[ebp-0xc]
   12515:	push   eax
   12516:	push   DWORD PTR [ebp-0x10]
   12519:	mov    ebx,0x400
   1251e:	mov    DWORD PTR [ebp-0xc],edi
   12521:	mov    DWORD PTR [ebp-0x14],ebx
   12524:	call   0x11288
   12529:	call   eax
   1252b:	test   eax,eax
   1252d:	jl     0x12538
   1252f:	mov    eax,DWORD PTR [ebp-0xc]
   12532:	mov    ecx,DWORD PTR [ebp+0xc]
   12535:	mov    DWORD PTR [ecx+0x8],eax
   12538:	push   0x4
   1253a:	push   esi
   1253b:	lea    eax,[ebp-0x14]
   1253e:	push   eax
   1253f:	push   edi
   12540:	lea    eax,[ebp-0x18]
   12543:	push   eax
   12544:	push   DWORD PTR [ebp-0x10]
   12547:	mov    DWORD PTR [ebp-0x18],edi
   1254a:	mov    DWORD PTR [ebp-0x14],ebx
   1254d:	call   0x11288
   12552:	call   eax
   12554:	test   eax,eax
   12556:	jl     0x12561
   12558:	mov    eax,DWORD PTR [ebp-0x18]
   1255b:	mov    ecx,DWORD PTR [ebp+0xc]
   1255e:	mov    DWORD PTR [ecx+0xc],eax
   12561:	lea    eax,[ebp-0x24]
   12564:	push   eax
   12565:	push   DWORD PTR [ebp-0x30]
   12568:	call   0x11a3e
   1256d:	call   eax
   1256f:	test   eax,eax
   12571:	jl     0x12850
   12577:	push   DWORD PTR [ebp-0x24]
   1257a:	call   0x1179e
   1257f:	call   eax
   12581:	mov    eax,DWORD PTR [ebp-0xc]
   12584:	mov    DWORD PTR [ebp-0x20],edi
   12587:	cmp    eax,edi
   12589:	je     0x12836
   1258f:	mov    esi,DWORD PTR [ebp-0x18]
   12592:	cmp    esi,edi
   12594:	je     0x127a3
   1259a:	push   0x214
   1259f:	push   edi
   125a0:	push   esi
   125a1:	mov    DWORD PTR [ebp-0x4],eax
   125a4:	call   0x1dd02
   125a9:	mov    eax,DWORD PTR [ebp-0x4]
   125ac:	add    esp,0xc
   125af:	push   0x60
   125b1:	lea    ebx,[esi+0xc]
   125b4:	push   eax
   125b5:	mov    DWORD PTR [ebx],edi
   125b7:	mov    DWORD PTR [esi],edi
   125b9:	mov    DWORD PTR [ebp-0x20],eax
   125bc:	call   0x19a48
   125c1:	push   0x68
   125c3:	push   eax
   125c4:	call   0x19a48
   125c9:	push   ebx
   125ca:	push   eax
   125cb:	call   0x19a60
   125d0:	push   0x6a
   125d2:	pop    ebx
   125d3:	push   ebx
   125d4:	push   eax
   125d5:	call   0x19a48
   125da:	push   edi
   125db:	push   eax
   125dc:	call   0x19a48
   125e1:	push   ebx
   125e2:	push   eax
   125e3:	call   0x19a48
   125e8:	push   edi
   125e9:	push   eax
   125ea:	call   0x19a48
   125ef:	push   0x68
   125f1:	push   eax
   125f2:	call   0x19a48
   125f7:	push   edi
   125f8:	push   eax
   125f9:	mov    DWORD PTR [ebp-0x28],eax
   125fc:	call   0x19a60
   12601:	push   ebx
   12602:	push   eax
   12603:	call   0x19a48
   12608:	push   edi
   12609:	push   eax
   1260a:	call   0x19a48
   1260f:	push   ebx
   12610:	push   eax
   12611:	call   0x19a48
   12616:	push   edi
   12617:	push   eax
   12618:	call   0x19a48
   1261d:	push   0xb8
   12622:	push   eax
   12623:	call   0x19a48
   12628:	push   DWORD PTR ds:0x78570
   1262e:	push   eax
   1262f:	call   0x19a60
   12634:	mov    ebx,0xc00b
   12639:	push   ebx
   1263a:	push   eax
   1263b:	call   0x19a7a
   12640:	push   0x74
   12642:	push   eax
   12643:	call   0x19a48
   12648:	push   0x9
   1264a:	push   eax
   1264b:	call   0x19a48
   12650:	mov    edi,0xd0ff
   12655:	push   edi
   12656:	push   eax
   12657:	call   0x19a7a
   1265c:	push   0xb9
   12661:	push   eax
   12662:	call   0x19a48
   12667:	lea    ecx,[esi+0x10]
   1266a:	push   ecx
   1266b:	push   eax
   1266c:	call   0x19a60
   12671:	push   0x189
   12676:	push   eax
   12677:	call   0x19a7a
   1267c:	push   0x61
   1267e:	push   eax
   1267f:	call   0x19a48
   12684:	and    DWORD PTR [ebp-0x8],0x0
   12688:	mov    DWORD PTR [ebp-0x4],eax
   1268b:	mov    eax,DWORD PTR [ebp+0x8]
   1268e:	mov    DWORD PTR [ebp-0x1c],eax
   12691:	push   0x0
   12693:	push   DWORD PTR [ebp-0x1c]
   12696:	push   DWORD PTR [ebp-0x4]
   12699:	call   0x1a1fc
   1269e:	mov    ecx,eax
   126a0:	sub    ecx,DWORD PTR [ebp-0x1c]
   126a3:	mov    DWORD PTR [ebp-0x1c],eax
   126a6:	add    DWORD PTR [ebp-0x8],ecx
   126a9:	add    DWORD PTR [ebp-0x4],ecx
   126ac:	cmp    DWORD PTR [ebp-0x8],0x5
   126b0:	jb     0x12691
   126b2:	mov    ecx,DWORD PTR [ebp+0x8]
   126b5:	push   DWORD PTR [ebp-0x4]
   126b8:	mov    eax,DWORD PTR [ebp-0x8]
   126bb:	add    eax,ecx
   126bd:	push   eax
   126be:	call   0x19abe
   126c3:	push   eax
   126c4:	push   DWORD PTR [ebp-0x28]
   126c7:	mov    DWORD PTR [ebp-0x4],eax
   126ca:	call   0x19a60
   126cf:	mov    eax,DWORD PTR [ebp-0x4]
   126d2:	push   0xeb
   126d7:	push   eax
   126d8:	mov    DWORD PTR [esi],eax
   126da:	call   0x19a48
   126df:	push   0x0
   126e1:	push   eax
   126e2:	mov    DWORD PTR [esi+0x4],eax
   126e5:	call   0x19a48
   126ea:	push   0x68
   126ec:	push   eax
   126ed:	call   0x19a48
   126f2:	push   0x3e8
   126f7:	push   eax
   126f8:	call   0x19a60
   126fd:	push   0xb8
   12702:	push   eax
   12703:	call   0x19a48
   12708:	push   DWORD PTR ds:0x78574
   1270e:	push   eax
   1270f:	call   0x19a60
   12714:	push   ebx
   12715:	push   eax
   12716:	call   0x19a7a
   1271b:	push   0x74
   1271d:	push   eax
   1271e:	call   0x19a48
   12723:	push   0x2
   12725:	push   eax
   12726:	call   0x19a48
   1272b:	push   edi
   1272c:	push   eax
   1272d:	call   0x19a7a
   12732:	push   eax
   12733:	push   DWORD PTR [esi]
   12735:	call   0x19abe
   1273a:	mov    cl,al
   1273c:	sub    cl,BYTE PTR [esi+0x4]
   1273f:	push   0x68
   12741:	dec    cl
   12743:	push   eax
   12744:	mov    BYTE PTR [esi+0x8],cl
   12747:	call   0x19a48
   1274c:	add    esi,0x14
   1274f:	push   esi
   12750:	push   eax
   12751:	call   0x19a60
   12756:	push   0xb8
   1275b:	push   eax
   1275c:	call   0x19a48
   12761:	push   DWORD PTR ds:0x78568
   12767:	push   eax
   12768:	call   0x19a60
   1276d:	push   ebx
   1276e:	push   eax
   1276f:	call   0x19a7a
   12774:	push   0x74
   12776:	push   eax
   12777:	call   0x19a48
   1277c:	push   0x2
   1277e:	push   eax
   1277f:	call   0x19a48
   12784:	push   edi
   12785:	push   eax
   12786:	call   0x19a7a
   1278b:	push   0xc2
   12790:	push   eax
   12791:	call   0x19a48
   12796:	push   0x4
   12798:	push   eax
   12799:	call   0x19a7a
   1279e:	mov    eax,DWORD PTR [ebp-0xc]
   127a1:	xor    edi,edi
   127a3:	cmp    eax,edi
   127a5:	je     0x12836
   127ab:	add    eax,0x400
   127b0:	lea    esi,[eax-0xc]
   127b3:	lea    ecx,[eax-0x8]
   127b6:	push   esi
   127b7:	lea    ebx,[eax-0x4]
   127ba:	lea    edx,[eax-0x10]
   127bd:	push   0x40
   127bf:	add    eax,0xffffffe8
   127c2:	push   ecx
   127c3:	mov    DWORD PTR [ebp-0x1c],eax
   127c6:	mov    eax,DWORD PTR [ebp+0x8]
   127c9:	mov    DWORD PTR [ebx],eax
   127cb:	push   ebx
   127cc:	mov    DWORD PTR [ecx],0x5
   127d2:	push   0xffffffff
   127d4:	mov    DWORD PTR [ebp-0x8],ecx
   127d7:	mov    DWORD PTR [ebp-0x28],edx
   127da:	mov    DWORD PTR [esi],edi
   127dc:	call   DWORD PTR ds:0x784e4
   127e2:	test   eax,eax
   127e4:	jl     0x12836
   127e6:	mov    eax,DWORD PTR [ebp-0x20]
   127e9:	sub    eax,DWORD PTR [ebp+0x8]
   127ec:	sub    eax,0x5
   127ef:	push   eax
   127f0:	mov    eax,DWORD PTR [ebp-0x1c]
   127f3:	inc    eax
   127f4:	push   eax
   127f5:	call   0x19a60
   127fa:	push   0xe9
   127ff:	push   DWORD PTR [ebp-0x1c]
   12802:	call   0x19a48
   12807:	mov    eax,DWORD PTR [ebp-0x28]
   1280a:	push   eax
   1280b:	push   0x5
   1280d:	push   DWORD PTR [ebp-0x1c]
   12810:	mov    DWORD PTR [eax],edi
   12812:	push   DWORD PTR [ebp+0x8]
   12815:	push   0xffffffff
   12817:	call   DWORD PTR ds:0x784d8
   1281d:	mov    eax,DWORD PTR [ebp+0xc]
   12820:	mov    BYTE PTR [eax+0x10],0x1
   12824:	lea    eax,[ebp-0x20]
   12827:	push   eax
   12828:	push   DWORD PTR [esi]
   1282a:	push   DWORD PTR [ebp-0x8]
   1282d:	push   ebx
   1282e:	push   0xffffffff
   12830:	call   DWORD PTR ds:0x784e4
   12836:	call   0x11774
   1283b:	call   eax
   1283d:	mov    ecx,DWORD PTR [ebp-0x24]
   12840:	call   DWORD PTR ds:0x1f450
   12846:	push   DWORD PTR [ebp-0x10]
   12849:	call   0x11552
   1284e:	call   eax
   12850:	pop    esi
   12851:	pop    ebx
   12852:	pop    edi
   12853:	leave  
   12854:	ret    0x8
   12857:	int3   
   12858:	int3   
   12859:	int3   
   1285a:	int3   
   1285b:	int3   
   1285c:	mov    edi,edi
   1285e:	push   ebp
   1285f:	mov    ebp,esp
   12861:	sub    esp,0x18
   12864:	and    DWORD PTR [ebp-0x18],0x0
   12868:	push   edi
   12869:	xor    eax,eax
   1286b:	lea    edi,[ebp-0x14]
   1286e:	stos   DWORD PTR es:[edi],eax
   1286f:	stos   DWORD PTR es:[edi],eax
   12870:	stos   DWORD PTR es:[edi],eax
   12871:	stos   DWORD PTR es:[edi],eax
   12872:	lea    eax,[ebp-0x18]
   12875:	push   eax
   12876:	push   0x1
   12878:	call   0x11ed8
   1287d:	pop    edi
   1287e:	test   al,al
   12880:	je     0x128d7
   12882:	cmp    DWORD PTR [ebp-0x18],0x0
   12886:	je     0x128d7
   12888:	lea    eax,[ebp-0x4]
   1288b:	push   eax
   1288c:	push   DWORD PTR [ebp-0x18]
   1288f:	call   0x11a3e
   12894:	call   eax
   12896:	test   eax,eax
   12898:	jl     0x128d7
   1289a:	push   esi
   1289b:	push   DWORD PTR [ebp-0x4]
   1289e:	call   0x1179e
   128a3:	call   eax
   128a5:	mov    esi,DWORD PTR [ebp-0xc]
   128a8:	mov    eax,DWORD PTR [ebp+0x8]
   128ab:	lea    edx,[esi+0x14]
   128ae:	sub    edx,eax
   128b0:	movzx  ecx,WORD PTR [eax]
   128b3:	mov    WORD PTR [edx+eax*1],cx
   128b7:	inc    eax
   128b8:	inc    eax
   128b9:	test   cx,cx
   128bc:	jne    0x128b0
   128be:	mov    eax,DWORD PTR [esi+0x4]
   128c1:	mov    cl,BYTE PTR [esi+0x8]
   128c4:	mov    BYTE PTR [eax],cl
   128c6:	call   0x11774
   128cb:	call   eax
   128cd:	mov    ecx,DWORD PTR [ebp-0x4]
   128d0:	call   DWORD PTR ds:0x1f450
   128d6:	pop    esi
   128d7:	leave  
   128d8:	ret    0x4
   128db:	int3   
   128dc:	int3   
   128dd:	int3   
   128de:	int3   
   128df:	int3   
   128e0:	mov    edi,edi
   128e2:	push   ebp
   128e3:	mov    ebp,esp
   128e5:	push   ecx
   128e6:	and    DWORD PTR [ebp-0x4],0x0
   128ea:	push   ebx
   128eb:	push   esi
   128ec:	push   edi
   128ed:	mov    esi,0x1000
   128f2:	push   0x20736649
   128f7:	push   esi
   128f8:	push   0x0
   128fa:	call   0x1164e
   128ff:	call   eax
   12901:	mov    edi,eax
   12903:	test   edi,edi
   12905:	je     0x1293a
   12907:	lea    eax,[ebp-0x4]
   1290a:	push   eax
   1290b:	push   esi
   1290c:	push   edi
   1290d:	push   DWORD PTR [ebp+0x8]
   12910:	call   0x11384
   12915:	call   eax
   12917:	mov    ebx,eax
   12919:	cmp    ebx,0xc0000004
   1291f:	jne    0x1292d
   12921:	push   0x0
   12923:	push   edi
   12924:	call   0x115fa
   12929:	call   eax
   1292b:	add    esi,esi
   1292d:	test   ebx,ebx
   1292f:	jne    0x128f2
   12931:	mov    eax,edi
   12933:	pop    edi
   12934:	pop    esi
   12935:	pop    ebx
   12936:	leave  
   12937:	ret    0x4
   1293a:	xor    eax,eax
   1293c:	jmp    0x12933
   1293e:	int3   
   1293f:	int3   
   12940:	int3   
   12941:	int3   
   12942:	int3   
   12943:	int3   
   12944:	push   0x0
   12946:	push   0x784f4
   1294b:	call   0x119c0
   12950:	call   eax
   12952:	push   0x100
   12957:	push   0x0
   12959:	push   0x77bb8
   1295e:	call   0x1dd02
   12963:	add    esp,0xc
   12966:	ret    
   12967:	int3   
   12968:	int3   
   12969:	int3   
   1296a:	int3   
   1296b:	int3   
   1296c:	mov    edi,edi
   1296e:	push   ebp
   1296f:	mov    ebp,esp
   12971:	push   ebx
   12972:	mov    ebx,DWORD PTR [ebp+0x8]
   12975:	cmp    ebx,0x40
   12978:	ja     0x129a7
   1297a:	push   esi
   1297b:	push   edi
   1297c:	xor    edi,edi
   1297e:	push   edi
   1297f:	push   edi
   12980:	push   edi
   12981:	push   edi
   12982:	mov    esi,0x784f4
   12987:	push   esi
   12988:	call   0x119ea
   1298d:	call   eax
   1298f:	test   eax,eax
   12991:	jl     0x129a5
   12993:	push   edi
   12994:	lea    eax,[ebx*4+0x77bb8]
   1299b:	inc    DWORD PTR [eax]
   1299d:	push   esi
   1299e:	call   0x11a14
   129a3:	call   eax
   129a5:	pop    edi
   129a6:	pop    esi
   129a7:	pop    ebx
   129a8:	pop    ebp
   129a9:	ret    0x4
   129ac:	int3   
   129ad:	int3   
   129ae:	int3   
   129af:	int3   
   129b0:	int3   
   129b1:	int3   
   129b2:	mov    edi,edi
   129b4:	push   ebp
   129b5:	mov    ebp,esp
   129b7:	push   ebx
   129b8:	push   esi
   129b9:	push   edi
   129ba:	mov    edi,DWORD PTR [ebp+0x8]
   129bd:	cmp    edi,0x40
   129c0:	ja     0x129ed
   129c2:	xor    ebx,ebx
   129c4:	push   ebx
   129c5:	push   ebx
   129c6:	push   ebx
   129c7:	push   ebx
   129c8:	mov    esi,0x784f4
   129cd:	push   esi
   129ce:	call   0x119ea
   129d3:	call   eax
   129d5:	test   eax,eax
   129d7:	jl     0x129ed
   129d9:	mov    edi,DWORD PTR [edi*4+0x77bb8]
   129e0:	push   ebx
   129e1:	push   esi
   129e2:	call   0x11a14
   129e7:	call   eax
   129e9:	mov    eax,edi
   129eb:	jmp    0x129ef
   129ed:	xor    eax,eax
   129ef:	pop    edi
   129f0:	pop    esi
   129f1:	pop    ebx
   129f2:	pop    ebp
   129f3:	ret    0x4
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	mov    edi,edi
   129fe:	push   ebp
   129ff:	mov    ebp,esp
   12a01:	push   esi
   12a02:	mov    esi,DWORD PTR [ebp+0x8]
   12a05:	push   edi
   12a06:	push   DWORD PTR [esi]
   12a08:	call   0x11cec
   12a0d:	push   DWORD PTR [esi]
   12a0f:	mov    edi,eax
   12a11:	push   esi
   12a12:	push   edi
   12a13:	call   0x1dd1a
   12a18:	add    esp,0x10
   12a1b:	mov    eax,edi
   12a1d:	pop    edi
   12a1e:	pop    esi
   12a1f:	pop    ebp
   12a20:	ret    0x4
   12a23:	int3   
   12a24:	int3   
   12a25:	int3   
   12a26:	int3   
   12a27:	int3   
   12a28:	mov    edi,edi
   12a2a:	push   ebp
   12a2b:	mov    ebp,esp
   12a2d:	push   ebx
   12a2e:	push   esi
   12a2f:	push   edi
   12a30:	mov    edi,DWORD PTR [ebp+0x8]
   12a33:	mov    eax,DWORD PTR [edi+0x4]
   12a36:	mov    esi,ecx
   12a38:	mov    ebx,DWORD PTR [esi]
   12a3a:	mov    DWORD PTR [esi+0x4],eax
   12a3d:	inc    eax
   12a3e:	push   eax
   12a3f:	call   0x11cec
   12a44:	push   DWORD PTR [esi+0x4]
   12a47:	mov    DWORD PTR [esi],eax
   12a49:	push   DWORD PTR [edi]
   12a4b:	push   eax
   12a4c:	call   0x1dd1a
   12a51:	mov    eax,DWORD PTR [esi+0x4]
   12a54:	mov    ecx,DWORD PTR [esi]
   12a56:	push   ebx
   12a57:	mov    BYTE PTR [eax+ecx*1],0x0
   12a5b:	call   0x11d22
   12a60:	add    esp,0x14
   12a63:	pop    edi
   12a64:	mov    eax,esi
   12a66:	pop    esi
   12a67:	pop    ebx
   12a68:	pop    ebp
   12a69:	ret    0x4
   12a6c:	int3   
   12a6d:	int3   
   12a6e:	int3   
   12a6f:	int3   
   12a70:	int3   
   12a71:	int3   
   12a72:	mov    edi,edi
   12a74:	push   esi
   12a75:	push   edi
   12a76:	push   0x20736649
   12a7b:	push   0x20
   12a7d:	push   0x0
   12a7f:	mov    esi,ecx
   12a81:	call   0x1164e
   12a86:	call   eax
   12a88:	push   0x0
   12a8a:	mov    edi,eax
   12a8c:	push   0x1
   12a8e:	mov    ecx,esi
   12a90:	mov    DWORD PTR [esi],edi
   12a92:	call   0x10da2
   12a97:	mov    DWORD PTR [esi+0x8],eax
   12a9a:	mov    DWORD PTR [esi+0xc],edx
   12a9d:	test   edi,edi
   12a9f:	jne    0x12aad
   12aa1:	push   0xc000009a
   12aa6:	call   0x115a6
   12aab:	call   eax
   12aad:	pop    edi
   12aae:	mov    eax,esi
   12ab0:	pop    esi
   12ab1:	ret    
   12ab2:	int3   
   12ab3:	int3   
   12ab4:	int3   
   12ab5:	int3   
   12ab6:	int3   
   12ab7:	int3   
   12ab8:	mov    edi,edi
   12aba:	push   ebp
   12abb:	mov    ebp,esp
   12abd:	push   esi
   12abe:	push   edi
   12abf:	mov    edi,DWORD PTR [ebp+0x8]
   12ac2:	push   edi
   12ac3:	mov    esi,ecx
   12ac5:	call   0x12a28
   12aca:	lea    eax,[edi+0x8]
   12acd:	push   eax
   12ace:	lea    ecx,[esi+0x8]
   12ad1:	call   0x12a28
   12ad6:	lea    eax,[edi+0x10]
   12ad9:	push   eax
   12ada:	lea    ecx,[esi+0x10]
   12add:	call   0x12a28
   12ae2:	lea    eax,[edi+0x18]
   12ae5:	push   eax
   12ae6:	lea    ecx,[esi+0x18]
   12ae9:	call   0x12a28
   12aee:	mov    eax,DWORD PTR [edi+0x20]
   12af1:	mov    DWORD PTR [esi+0x20],eax
   12af4:	mov    eax,DWORD PTR [edi+0x28]
   12af7:	mov    DWORD PTR [esi+0x28],eax
   12afa:	mov    eax,DWORD PTR [edi+0x2c]
   12afd:	mov    DWORD PTR [esi+0x2c],eax
   12b00:	mov    eax,DWORD PTR [edi+0x30]
   12b03:	mov    DWORD PTR [esi+0x30],eax
   12b06:	mov    eax,DWORD PTR [edi+0x34]
   12b09:	add    edi,0x38
   12b0c:	push   edi
   12b0d:	lea    ecx,[esi+0x38]
   12b10:	mov    DWORD PTR [esi+0x34],eax
   12b13:	call   0x12a28
   12b18:	pop    edi
   12b19:	mov    eax,esi
   12b1b:	pop    esi
   12b1c:	pop    ebp
   12b1d:	ret    0x4
   12b20:	int3   
   12b21:	int3   
   12b22:	int3   
   12b23:	int3   
   12b24:	int3   
   12b25:	int3   
   12b26:	mov    edi,edi
   12b28:	push   ebp
   12b29:	mov    ebp,esp
   12b2b:	push   esi
   12b2c:	mov    esi,DWORD PTR [ebp+0xc]
   12b2f:	push   edi
   12b30:	mov    edi,ecx
   12b32:	cmp    esi,0xffffffff
   12b35:	jne    0x12b46
   12b37:	mov    esi,DWORD PTR [ebp+0x8]
   12b3a:	lea    ecx,[esi+0x1]
   12b3d:	mov    al,BYTE PTR [esi]
   12b3f:	inc    esi
   12b40:	test   al,al
   12b42:	jne    0x12b3d
   12b44:	sub    esi,ecx
   12b46:	lea    eax,[esi+0x1]
   12b49:	push   eax
   12b4a:	call   0x11cec
   12b4f:	pop    ecx
   12b50:	mov    DWORD PTR [edi],eax
   12b52:	test   eax,eax
   12b54:	jne    0x12b61
   12b56:	push   0xc000009a
   12b5b:	call   DWORD PTR ds:0x1f420
   12b61:	mov    eax,DWORD PTR [edi]
   12b63:	push   esi
   12b64:	push   DWORD PTR [ebp+0x8]
   12b67:	mov    BYTE PTR [esi+eax*1],0x0
   12b6b:	push   DWORD PTR [edi]
   12b6d:	call   0x1dd1a
   12b72:	add    esp,0xc
   12b75:	mov    DWORD PTR [edi+0x4],esi
   12b78:	pop    edi
   12b79:	pop    esi
   12b7a:	pop    ebp
   12b7b:	ret    0x8
   12b7e:	int3   
   12b7f:	int3   
   12b80:	int3   
   12b81:	int3   
   12b82:	int3   
   12b83:	int3   
   12b84:	mov    edi,edi
   12b86:	push   ebp
   12b87:	mov    ebp,esp
   12b89:	push   ebx
   12b8a:	push   esi
   12b8b:	push   edi
   12b8c:	mov    edi,DWORD PTR [ebp+0x8]
   12b8f:	mov    eax,DWORD PTR [edi+0x4]
   12b92:	mov    esi,ecx
   12b94:	mov    ebx,DWORD PTR [esi]
   12b96:	mov    DWORD PTR [esi+0x4],eax
   12b99:	xor    ecx,ecx
   12b9b:	push   0x2
   12b9d:	inc    eax
   12b9e:	pop    edx
   12b9f:	mul    edx
   12ba1:	seto   cl
   12ba4:	neg    ecx
   12ba6:	or     ecx,eax
   12ba8:	push   ecx
   12ba9:	call   0x11cec
   12bae:	mov    ecx,DWORD PTR [esi+0x4]
   12bb1:	add    ecx,ecx
   12bb3:	push   ecx
   12bb4:	mov    DWORD PTR [esi],eax
   12bb6:	push   DWORD PTR [edi]
   12bb8:	push   eax
   12bb9:	call   0x1dd1a
   12bbe:	mov    eax,DWORD PTR [esi+0x4]
   12bc1:	mov    ecx,DWORD PTR [esi]
   12bc3:	xor    edx,edx
   12bc5:	push   ebx
   12bc6:	mov    WORD PTR [ecx+eax*2],dx
   12bca:	call   0x11d22
   12bcf:	add    esp,0x14
   12bd2:	pop    edi
   12bd3:	mov    eax,esi
   12bd5:	pop    esi
   12bd6:	pop    ebx
   12bd7:	pop    ebp
   12bd8:	ret    0x4
   12bdb:	int3   
   12bdc:	int3   
   12bdd:	int3   
   12bde:	int3   
   12bdf:	int3   
   12be0:	mov    edi,edi
   12be2:	push   ebp
   12be3:	mov    ebp,esp
   12be5:	push   esi
   12be6:	push   edi
   12be7:	mov    edi,DWORD PTR [ebp+0xc]
   12bea:	mov    esi,ecx
   12bec:	cmp    edi,0xffffffff
   12bef:	jne    0x12bfb
   12bf1:	push   DWORD PTR [ebp+0x8]
   12bf4:	call   0x10960
   12bf9:	mov    edi,eax
   12bfb:	xor    ecx,ecx
   12bfd:	push   0x2
   12bff:	pop    edx
   12c00:	lea    eax,[edi+0x1]
   12c03:	mul    edx
   12c05:	seto   cl
   12c08:	neg    ecx
   12c0a:	or     ecx,eax
   12c0c:	push   ecx
   12c0d:	call   0x11cec
   12c12:	pop    ecx
   12c13:	mov    DWORD PTR [esi],eax
   12c15:	test   eax,eax
   12c17:	jne    0x12c24
   12c19:	push   0xc000009a
   12c1e:	call   DWORD PTR ds:0x1f420
   12c24:	mov    ecx,DWORD PTR [esi]
   12c26:	lea    eax,[edi+edi*1]
   12c29:	push   eax
   12c2a:	push   DWORD PTR [ebp+0x8]
   12c2d:	xor    edx,edx
   12c2f:	mov    WORD PTR [eax+ecx*1],dx
   12c33:	push   DWORD PTR [esi]
   12c35:	call   0x1dd1a
   12c3a:	add    esp,0xc
   12c3d:	mov    DWORD PTR [esi+0x4],edi
   12c40:	pop    edi
   12c41:	pop    esi
   12c42:	pop    ebp
   12c43:	ret    0x8
   12c46:	int3   
   12c47:	int3   
   12c48:	int3   
   12c49:	int3   
   12c4a:	int3   
   12c4b:	int3   
   12c4c:	mov    edi,edi
   12c4e:	push   ebp
   12c4f:	mov    ebp,esp
   12c51:	mov    eax,DWORD PTR [ebp+0x8]
   12c54:	mov    edx,DWORD PTR ds:0x786bc
   12c5a:	jmp    0x12c5e
   12c5c:	mov    eax,ecx
   12c5e:	mov    ecx,DWORD PTR [eax]
   12c60:	cmp    ecx,edx
   12c62:	jne    0x12c5c
   12c64:	pop    ebp
   12c65:	ret    0x4
   12c68:	int3   
   12c69:	int3   
   12c6a:	int3   
   12c6b:	int3   
   12c6c:	int3   
   12c6d:	int3   
   12c6e:	mov    edi,edi
   12c70:	push   ebp
   12c71:	mov    ebp,esp
   12c73:	mov    eax,DWORD PTR [ecx+0x4]
   12c76:	mov    ecx,DWORD PTR [eax+0x4]
   12c79:	mov    edx,DWORD PTR ds:0x786b0
   12c7f:	cmp    ecx,edx
   12c81:	je     0x12c9c
   12c83:	push   esi
   12c84:	mov    esi,DWORD PTR [ebp+0x8]
   12c87:	mov    esi,DWORD PTR [esi]
   12c89:	cmp    DWORD PTR [ecx+0xc],esi
   12c8c:	jae    0x12c93
   12c8e:	mov    ecx,DWORD PTR [ecx+0x8]
   12c91:	jmp    0x12c97
   12c93:	mov    eax,ecx
   12c95:	mov    ecx,DWORD PTR [ecx]
   12c97:	cmp    ecx,edx
   12c99:	jne    0x12c89
   12c9b:	pop    esi
   12c9c:	pop    ebp
   12c9d:	ret    0x4
   12ca0:	int3   
   12ca1:	int3   
   12ca2:	int3   
   12ca3:	int3   
   12ca4:	int3   
   12ca5:	int3   
   12ca6:	mov    edi,edi
   12ca8:	push   ebp
   12ca9:	mov    ebp,esp
   12cab:	mov    edx,DWORD PTR [ebp+0x8]
   12cae:	mov    eax,DWORD PTR [edx+0x8]
   12cb1:	push   esi
   12cb2:	mov    esi,DWORD PTR [eax]
   12cb4:	mov    DWORD PTR [edx+0x8],esi
   12cb7:	mov    esi,DWORD PTR [eax]
   12cb9:	cmp    esi,DWORD PTR ds:0x786b0
   12cbf:	je     0x12cc4
   12cc1:	mov    DWORD PTR [esi+0x4],edx
   12cc4:	mov    esi,DWORD PTR [edx+0x4]
   12cc7:	mov    DWORD PTR [eax+0x4],esi
   12cca:	mov    ecx,DWORD PTR [ecx+0x4]
   12ccd:	pop    esi
   12cce:	cmp    edx,DWORD PTR [ecx+0x4]
   12cd1:	jne    0x12cd8
   12cd3:	mov    DWORD PTR [ecx+0x4],eax
   12cd6:	jmp    0x12ce6
   12cd8:	mov    ecx,DWORD PTR [edx+0x4]
   12cdb:	cmp    edx,DWORD PTR [ecx]
   12cdd:	jne    0x12ce3
   12cdf:	mov    DWORD PTR [ecx],eax
   12ce1:	jmp    0x12ce6
   12ce3:	mov    DWORD PTR [ecx+0x8],eax
   12ce6:	mov    DWORD PTR [eax],edx
   12ce8:	mov    DWORD PTR [edx+0x4],eax
   12ceb:	pop    ebp
   12cec:	ret    0x4
   12cef:	int3   
   12cf0:	int3   
   12cf1:	int3   
   12cf2:	int3   
   12cf3:	int3   
   12cf4:	mov    edi,edi
   12cf6:	push   ebp
   12cf7:	mov    ebp,esp
   12cf9:	mov    edx,DWORD PTR [ebp+0x8]
   12cfc:	mov    eax,DWORD PTR [edx]
   12cfe:	push   esi
   12cff:	mov    esi,DWORD PTR [eax+0x8]
   12d02:	mov    DWORD PTR [edx],esi
   12d04:	mov    esi,DWORD PTR [eax+0x8]
   12d07:	cmp    esi,DWORD PTR ds:0x786b0
   12d0d:	je     0x12d12
   12d0f:	mov    DWORD PTR [esi+0x4],edx
   12d12:	mov    esi,DWORD PTR [edx+0x4]
   12d15:	mov    DWORD PTR [eax+0x4],esi
   12d18:	mov    ecx,DWORD PTR [ecx+0x4]
   12d1b:	pop    esi
   12d1c:	cmp    edx,DWORD PTR [ecx+0x4]
   12d1f:	jne    0x12d26
   12d21:	mov    DWORD PTR [ecx+0x4],eax
   12d24:	jmp    0x12d35
   12d26:	mov    ecx,DWORD PTR [edx+0x4]
   12d29:	cmp    edx,DWORD PTR [ecx+0x8]
   12d2c:	jne    0x12d33
   12d2e:	mov    DWORD PTR [ecx+0x8],eax
   12d31:	jmp    0x12d35
   12d33:	mov    DWORD PTR [ecx],eax
   12d35:	mov    DWORD PTR [eax+0x8],edx
   12d38:	mov    DWORD PTR [edx+0x4],eax
   12d3b:	pop    ebp
   12d3c:	ret    0x4
   12d3f:	int3   
   12d40:	int3   
   12d41:	int3   
   12d42:	int3   
   12d43:	int3   
   12d44:	mov    edi,edi
   12d46:	push   ebp
   12d47:	mov    ebp,esp
   12d49:	mov    eax,DWORD PTR [ecx+0x4]
   12d4c:	push   esi
   12d4d:	mov    esi,DWORD PTR [eax+0x4]
   12d50:	push   edi
   12d51:	mov    edi,eax
   12d53:	jmp    0x12d6e
   12d55:	push   DWORD PTR [ebp+0x8]
   12d58:	lea    eax,[esi+0x10]
   12d5b:	push   eax
   12d5c:	call   0x19a08
   12d61:	test   al,al
   12d63:	je     0x12d6a
   12d65:	mov    esi,DWORD PTR [esi+0x8]
   12d68:	jmp    0x12d6e
   12d6a:	mov    edi,esi
   12d6c:	mov    esi,DWORD PTR [esi]
   12d6e:	cmp    esi,DWORD PTR ds:0x786bc
   12d74:	jne    0x12d55
   12d76:	mov    eax,edi
   12d78:	pop    edi
   12d79:	pop    esi
   12d7a:	pop    ebp
   12d7b:	ret    0x4
   12d7e:	int3   
   12d7f:	int3   
   12d80:	int3   
   12d81:	int3   
   12d82:	int3   
   12d83:	int3   
   12d84:	mov    edi,edi
   12d86:	push   ebp
   12d87:	mov    ebp,esp
   12d89:	mov    eax,DWORD PTR [ecx+0x4]
   12d8c:	push   esi
   12d8d:	mov    esi,DWORD PTR [eax+0x4]
   12d90:	push   edi
   12d91:	mov    edi,eax
   12d93:	jmp    0x12dae
   12d95:	push   DWORD PTR [ebp+0x8]
   12d98:	lea    eax,[esi+0xc]
   12d9b:	push   eax
   12d9c:	call   0x19a08
   12da1:	test   al,al
   12da3:	je     0x12daa
   12da5:	mov    esi,DWORD PTR [esi+0x8]
   12da8:	jmp    0x12dae
   12daa:	mov    edi,esi
   12dac:	mov    esi,DWORD PTR [esi]
   12dae:	cmp    esi,DWORD PTR ds:0x786c0
   12db4:	jne    0x12d95
   12db6:	mov    eax,edi
   12db8:	pop    edi
   12db9:	pop    esi
   12dba:	pop    ebp
   12dbb:	ret    0x4
   12dbe:	int3   
   12dbf:	int3   
   12dc0:	int3   
   12dc1:	int3   
   12dc2:	int3   
   12dc3:	int3   
   12dc4:	mov    edi,edi
   12dc6:	push   ebp
   12dc7:	mov    ebp,esp
   12dc9:	mov    eax,DWORD PTR [ecx+0x4]
   12dcc:	mov    ecx,DWORD PTR [eax+0x4]
   12dcf:	mov    edx,DWORD PTR ds:0x786c4
   12dd5:	cmp    ecx,edx
   12dd7:	je     0x12df2
   12dd9:	push   esi
   12dda:	mov    esi,DWORD PTR [ebp+0x8]
   12ddd:	mov    esi,DWORD PTR [esi]
   12ddf:	cmp    DWORD PTR [ecx+0xc],esi
   12de2:	jge    0x12de9
   12de4:	mov    ecx,DWORD PTR [ecx+0x8]
   12de7:	jmp    0x12ded
   12de9:	mov    eax,ecx
   12deb:	mov    ecx,DWORD PTR [ecx]
   12ded:	cmp    ecx,edx
   12def:	jne    0x12ddf
   12df1:	pop    esi
   12df2:	pop    ebp
   12df3:	ret    0x4
   12df6:	int3   
   12df7:	int3   
   12df8:	int3   
   12df9:	int3   
   12dfa:	int3   
   12dfb:	int3   
   12dfc:	mov    edi,edi
   12dfe:	push   esi
   12dff:	mov    esi,ecx
   12e01:	mov    ecx,DWORD PTR [esi]
   12e03:	mov    eax,DWORD PTR [ecx+0x8]
   12e06:	cmp    eax,DWORD PTR ds:0x786b8
   12e0c:	je     0x12e1a
   12e0e:	push   eax
   12e0f:	call   0x10e92
   12e14:	jmp    0x12e29
   12e16:	mov    DWORD PTR [esi],eax
   12e18:	mov    ecx,eax
   12e1a:	mov    eax,DWORD PTR [ecx+0x4]
   12e1d:	cmp    ecx,DWORD PTR [eax+0x8]
   12e20:	je     0x12e16
   12e22:	mov    ecx,DWORD PTR [esi]
   12e24:	cmp    DWORD PTR [ecx+0x8],eax
   12e27:	je     0x12e2b
   12e29:	mov    DWORD PTR [esi],eax
   12e2b:	pop    esi
   12e2c:	ret    
   12e2d:	int3   
   12e2e:	int3   
   12e2f:	int3   
   12e30:	int3   
   12e31:	int3   
   12e32:	mov    edi,edi
   12e34:	push   esi
   12e35:	mov    esi,ecx
   12e37:	mov    ecx,DWORD PTR [esi]
   12e39:	cmp    DWORD PTR [ecx+0x10],0x0
   12e3d:	jne    0x12e4c
   12e3f:	mov    eax,DWORD PTR [ecx+0x4]
   12e42:	cmp    DWORD PTR [eax+0x4],ecx
   12e45:	jne    0x12e4c
   12e47:	mov    eax,DWORD PTR [ecx+0x8]
   12e4a:	jmp    0x12e69
   12e4c:	mov    eax,DWORD PTR [ecx]
   12e4e:	cmp    eax,DWORD PTR ds:0x786b4
   12e54:	je     0x12e62
   12e56:	push   eax
   12e57:	call   0x10e2c
   12e5c:	jmp    0x12e69
   12e5e:	mov    DWORD PTR [esi],eax
   12e60:	mov    ecx,eax
   12e62:	mov    eax,DWORD PTR [ecx+0x4]
   12e65:	cmp    ecx,DWORD PTR [eax]
   12e67:	je     0x12e5e
   12e69:	mov    DWORD PTR [esi],eax
   12e6b:	pop    esi
   12e6c:	ret    
   12e6d:	int3   
   12e6e:	int3   
   12e6f:	int3   
   12e70:	int3   
   12e71:	int3   
   12e72:	mov    edi,edi
   12e74:	push   esi
   12e75:	mov    esi,ecx
   12e77:	mov    ecx,DWORD PTR [esi]
   12e79:	mov    eax,DWORD PTR [ecx+0x8]
   12e7c:	cmp    eax,DWORD PTR ds:0x786b4
   12e82:	je     0x12e90
   12e84:	push   eax
   12e85:	call   0x10e4e
   12e8a:	jmp    0x12e9f
   12e8c:	mov    DWORD PTR [esi],eax
   12e8e:	mov    ecx,eax
   12e90:	mov    eax,DWORD PTR [ecx+0x4]
   12e93:	cmp    ecx,DWORD PTR [eax+0x8]
   12e96:	je     0x12e8c
   12e98:	mov    ecx,DWORD PTR [esi]
   12e9a:	cmp    DWORD PTR [ecx+0x8],eax
   12e9d:	je     0x12ea1
   12e9f:	mov    DWORD PTR [esi],eax
   12ea1:	pop    esi
   12ea2:	ret    
   12ea3:	int3   
   12ea4:	int3   
   12ea5:	int3   
   12ea6:	int3   
   12ea7:	int3   
   12ea8:	mov    edi,edi
   12eaa:	push   ebp
   12eab:	mov    ebp,esp
   12ead:	mov    edx,DWORD PTR [ebp+0x8]
   12eb0:	mov    eax,DWORD PTR [edx+0x8]
   12eb3:	push   esi
   12eb4:	mov    esi,DWORD PTR [eax]
   12eb6:	mov    DWORD PTR [edx+0x8],esi
   12eb9:	mov    esi,DWORD PTR [eax]
   12ebb:	cmp    esi,DWORD PTR ds:0x786b4
   12ec1:	je     0x12ec6
   12ec3:	mov    DWORD PTR [esi+0x4],edx
   12ec6:	mov    esi,DWORD PTR [edx+0x4]
   12ec9:	mov    DWORD PTR [eax+0x4],esi
   12ecc:	mov    ecx,DWORD PTR [ecx+0x4]
   12ecf:	pop    esi
   12ed0:	cmp    edx,DWORD PTR [ecx+0x4]
   12ed3:	jne    0x12eda
   12ed5:	mov    DWORD PTR [ecx+0x4],eax
   12ed8:	jmp    0x12ee8
   12eda:	mov    ecx,DWORD PTR [edx+0x4]
   12edd:	cmp    edx,DWORD PTR [ecx]
   12edf:	jne    0x12ee5
   12ee1:	mov    DWORD PTR [ecx],eax
   12ee3:	jmp    0x12ee8
   12ee5:	mov    DWORD PTR [ecx+0x8],eax
   12ee8:	mov    DWORD PTR [eax],edx
   12eea:	mov    DWORD PTR [edx+0x4],eax
   12eed:	pop    ebp
   12eee:	ret    0x4
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	int3   
   12ef5:	int3   
   12ef6:	mov    edi,edi
   12ef8:	push   ebp
   12ef9:	mov    ebp,esp
   12efb:	mov    edx,DWORD PTR [ebp+0x8]
   12efe:	mov    eax,DWORD PTR [edx]
   12f00:	push   esi
   12f01:	mov    esi,DWORD PTR [eax+0x8]
   12f04:	mov    DWORD PTR [edx],esi
   12f06:	mov    esi,DWORD PTR [eax+0x8]
   12f09:	cmp    esi,DWORD PTR ds:0x786b4
   12f0f:	je     0x12f14
   12f11:	mov    DWORD PTR [esi+0x4],edx
   12f14:	mov    esi,DWORD PTR [edx+0x4]
   12f17:	mov    DWORD PTR [eax+0x4],esi
   12f1a:	mov    ecx,DWORD PTR [ecx+0x4]
   12f1d:	pop    esi
   12f1e:	cmp    edx,DWORD PTR [ecx+0x4]
   12f21:	jne    0x12f28
   12f23:	mov    DWORD PTR [ecx+0x4],eax
   12f26:	jmp    0x12f37
   12f28:	mov    ecx,DWORD PTR [edx+0x4]
   12f2b:	cmp    edx,DWORD PTR [ecx+0x8]
   12f2e:	jne    0x12f35
   12f30:	mov    DWORD PTR [ecx+0x8],eax
   12f33:	jmp    0x12f37
   12f35:	mov    DWORD PTR [ecx],eax
   12f37:	mov    DWORD PTR [eax+0x8],edx
   12f3a:	mov    DWORD PTR [edx+0x4],eax
   12f3d:	pop    ebp
   12f3e:	ret    0x4
   12f41:	int3   
   12f42:	int3   
   12f43:	int3   
   12f44:	int3   
   12f45:	int3   
   12f46:	mov    edi,edi
   12f48:	push   ebp
   12f49:	mov    ebp,esp
   12f4b:	mov    eax,DWORD PTR [ecx+0x4]
   12f4e:	push   esi
   12f4f:	mov    esi,DWORD PTR [eax+0x4]
   12f52:	push   edi
   12f53:	mov    edi,eax
   12f55:	jmp    0x12f70
   12f57:	push   DWORD PTR [ebp+0x8]
   12f5a:	lea    eax,[esi+0x10]
   12f5d:	push   eax
   12f5e:	call   0x19a08
   12f63:	test   al,al
   12f65:	je     0x12f6c
   12f67:	mov    esi,DWORD PTR [esi+0x8]
   12f6a:	jmp    0x12f70
   12f6c:	mov    edi,esi
   12f6e:	mov    esi,DWORD PTR [esi]
   12f70:	cmp    esi,DWORD PTR ds:0x786b8
   12f76:	jne    0x12f57
   12f78:	mov    eax,edi
   12f7a:	pop    edi
   12f7b:	pop    esi
   12f7c:	pop    ebp
   12f7d:	ret    0x4
   12f80:	int3   
   12f81:	int3   
   12f82:	int3   
   12f83:	int3   
   12f84:	int3   
   12f85:	int3   
   12f86:	mov    edi,edi
   12f88:	push   ebp
   12f89:	mov    ebp,esp
   12f8b:	mov    edx,DWORD PTR [ebp+0x8]
   12f8e:	mov    eax,DWORD PTR [edx+0x8]
   12f91:	push   esi
   12f92:	mov    esi,DWORD PTR [eax]
   12f94:	mov    DWORD PTR [edx+0x8],esi
   12f97:	mov    esi,DWORD PTR [eax]
   12f99:	cmp    esi,DWORD PTR ds:0x786b8
   12f9f:	je     0x12fa4
   12fa1:	mov    DWORD PTR [esi+0x4],edx
   12fa4:	mov    esi,DWORD PTR [edx+0x4]
   12fa7:	mov    DWORD PTR [eax+0x4],esi
   12faa:	mov    ecx,DWORD PTR [ecx+0x4]
   12fad:	pop    esi
   12fae:	cmp    edx,DWORD PTR [ecx+0x4]
   12fb1:	jne    0x12fb8
   12fb3:	mov    DWORD PTR [ecx+0x4],eax
   12fb6:	jmp    0x12fc6
   12fb8:	mov    ecx,DWORD PTR [edx+0x4]
   12fbb:	cmp    edx,DWORD PTR [ecx]
   12fbd:	jne    0x12fc3
   12fbf:	mov    DWORD PTR [ecx],eax
   12fc1:	jmp    0x12fc6
   12fc3:	mov    DWORD PTR [ecx+0x8],eax
   12fc6:	mov    DWORD PTR [eax],edx
   12fc8:	mov    DWORD PTR [edx+0x4],eax
   12fcb:	pop    ebp
   12fcc:	ret    0x4
   12fcf:	int3   
   12fd0:	int3   
   12fd1:	int3   
   12fd2:	int3   
   12fd3:	int3   
   12fd4:	mov    edi,edi
   12fd6:	push   ebp
   12fd7:	mov    ebp,esp
   12fd9:	mov    edx,DWORD PTR [ebp+0x8]
   12fdc:	mov    eax,DWORD PTR [edx]
   12fde:	push   esi
   12fdf:	mov    esi,DWORD PTR [eax+0x8]
   12fe2:	mov    DWORD PTR [edx],esi
   12fe4:	mov    esi,DWORD PTR [eax+0x8]
   12fe7:	cmp    esi,DWORD PTR ds:0x786b8
   12fed:	je     0x12ff2
   12fef:	mov    DWORD PTR [esi+0x4],edx
   12ff2:	mov    esi,DWORD PTR [edx+0x4]
   12ff5:	mov    DWORD PTR [eax+0x4],esi
   12ff8:	mov    ecx,DWORD PTR [ecx+0x4]
   12ffb:	pop    esi
   12ffc:	cmp    edx,DWORD PTR [ecx+0x4]
   12fff:	jne    0x13006
   13001:	mov    DWORD PTR [ecx+0x4],eax
   13004:	jmp    0x13015
   13006:	mov    ecx,DWORD PTR [edx+0x4]
   13009:	cmp    edx,DWORD PTR [ecx+0x8]
   1300c:	jne    0x13013
   1300e:	mov    DWORD PTR [ecx+0x8],eax
   13011:	jmp    0x13015
   13013:	mov    DWORD PTR [ecx],eax
   13015:	mov    DWORD PTR [eax+0x8],edx
   13018:	mov    DWORD PTR [edx+0x4],eax
   1301b:	pop    ebp
   1301c:	ret    0x4
   1301f:	int3   
   13020:	int3   
   13021:	int3   
   13022:	int3   
   13023:	int3   
   13024:	mov    edi,edi
   13026:	push   ebp
   13027:	mov    ebp,esp
   13029:	mov    eax,DWORD PTR [ecx+0x4]
   1302c:	mov    ecx,DWORD PTR [eax+0x4]
   1302f:	mov    edx,DWORD PTR ds:0x786b0
   13035:	cmp    ecx,edx
   13037:	je     0x13052
   13039:	push   esi
   1303a:	mov    esi,DWORD PTR [ebp+0x8]
   1303d:	mov    esi,DWORD PTR [esi]
   1303f:	cmp    esi,DWORD PTR [ecx+0xc]
   13042:	jae    0x1304a
   13044:	mov    eax,ecx
   13046:	mov    ecx,DWORD PTR [ecx]
   13048:	jmp    0x1304d
   1304a:	mov    ecx,DWORD PTR [ecx+0x8]
   1304d:	cmp    ecx,edx
   1304f:	jne    0x1303f
   13051:	pop    esi
   13052:	pop    ebp
   13053:	ret    0x4
   13056:	int3   
   13057:	int3   
   13058:	int3   
   13059:	int3   
   1305a:	int3   
   1305b:	int3   
   1305c:	mov    edi,edi
   1305e:	push   ebp
   1305f:	mov    ebp,esp
   13061:	mov    eax,DWORD PTR [ecx+0x4]
   13064:	push   esi
   13065:	mov    esi,DWORD PTR [eax+0x4]
   13068:	push   edi
   13069:	mov    edi,eax
   1306b:	jmp    0x13086
   1306d:	lea    eax,[esi+0x10]
   13070:	push   eax
   13071:	push   DWORD PTR [ebp+0x8]
   13074:	call   0x19a08
   13079:	test   al,al
   1307b:	je     0x13083
   1307d:	mov    edi,esi
   1307f:	mov    esi,DWORD PTR [esi]
   13081:	jmp    0x13086
   13083:	mov    esi,DWORD PTR [esi+0x8]
   13086:	cmp    esi,DWORD PTR ds:0x786bc
   1308c:	jne    0x1306d
   1308e:	mov    eax,edi
   13090:	pop    edi
   13091:	pop    esi
   13092:	pop    ebp
   13093:	ret    0x4
   13096:	int3   
   13097:	int3   
   13098:	int3   
   13099:	int3   
   1309a:	int3   
   1309b:	int3   
   1309c:	mov    edi,edi
   1309e:	push   ebp
   1309f:	mov    ebp,esp
   130a1:	mov    edx,DWORD PTR [ebp+0x8]
   130a4:	mov    eax,DWORD PTR [edx+0x8]
   130a7:	push   esi
   130a8:	mov    esi,DWORD PTR [eax]
   130aa:	mov    DWORD PTR [edx+0x8],esi
   130ad:	mov    esi,DWORD PTR [eax]
   130af:	cmp    esi,DWORD PTR ds:0x786c0
   130b5:	je     0x130ba
   130b7:	mov    DWORD PTR [esi+0x4],edx
   130ba:	mov    esi,DWORD PTR [edx+0x4]
   130bd:	mov    DWORD PTR [eax+0x4],esi
   130c0:	mov    ecx,DWORD PTR [ecx+0x4]
   130c3:	pop    esi
   130c4:	cmp    edx,DWORD PTR [ecx+0x4]
   130c7:	jne    0x130ce
   130c9:	mov    DWORD PTR [ecx+0x4],eax
   130cc:	jmp    0x130dc
   130ce:	mov    ecx,DWORD PTR [edx+0x4]
   130d1:	cmp    edx,DWORD PTR [ecx]
   130d3:	jne    0x130d9
   130d5:	mov    DWORD PTR [ecx],eax
   130d7:	jmp    0x130dc
   130d9:	mov    DWORD PTR [ecx+0x8],eax
   130dc:	mov    DWORD PTR [eax],edx
   130de:	mov    DWORD PTR [edx+0x4],eax
   130e1:	pop    ebp
   130e2:	ret    0x4
   130e5:	int3   
   130e6:	int3   
   130e7:	int3   
   130e8:	int3   
   130e9:	int3   
   130ea:	mov    edi,edi
   130ec:	push   ebp
   130ed:	mov    ebp,esp
   130ef:	mov    edx,DWORD PTR [ebp+0x8]
   130f2:	mov    eax,DWORD PTR [edx]
   130f4:	push   esi
   130f5:	mov    esi,DWORD PTR [eax+0x8]
   130f8:	mov    DWORD PTR [edx],esi
   130fa:	mov    esi,DWORD PTR [eax+0x8]
   130fd:	cmp    esi,DWORD PTR ds:0x786c0
   13103:	je     0x13108
   13105:	mov    DWORD PTR [esi+0x4],edx
   13108:	mov    esi,DWORD PTR [edx+0x4]
   1310b:	mov    DWORD PTR [eax+0x4],esi
   1310e:	mov    ecx,DWORD PTR [ecx+0x4]
   13111:	pop    esi
   13112:	cmp    edx,DWORD PTR [ecx+0x4]
   13115:	jne    0x1311c
   13117:	mov    DWORD PTR [ecx+0x4],eax
   1311a:	jmp    0x1312b
   1311c:	mov    ecx,DWORD PTR [edx+0x4]
   1311f:	cmp    edx,DWORD PTR [ecx+0x8]
   13122:	jne    0x13129
   13124:	mov    DWORD PTR [ecx+0x8],eax
   13127:	jmp    0x1312b
   13129:	mov    DWORD PTR [ecx],eax
   1312b:	mov    DWORD PTR [eax+0x8],edx
   1312e:	mov    DWORD PTR [edx+0x4],eax
   13131:	pop    ebp
   13132:	ret    0x4
   13135:	int3   
   13136:	int3   
   13137:	int3   
   13138:	int3   
   13139:	int3   
   1313a:	mov    edi,edi
   1313c:	push   ebp
   1313d:	mov    ebp,esp
   1313f:	mov    eax,DWORD PTR [ecx+0x4]
   13142:	push   esi
   13143:	mov    esi,DWORD PTR [eax+0x4]
   13146:	push   edi
   13147:	mov    edi,eax
   13149:	jmp    0x13164
   1314b:	lea    eax,[esi+0xc]
   1314e:	push   eax
   1314f:	push   DWORD PTR [ebp+0x8]
   13152:	call   0x19a08
   13157:	test   al,al
   13159:	je     0x13161
   1315b:	mov    edi,esi
   1315d:	mov    esi,DWORD PTR [esi]
   1315f:	jmp    0x13164
   13161:	mov    esi,DWORD PTR [esi+0x8]
   13164:	cmp    esi,DWORD PTR ds:0x786c0
   1316a:	jne    0x1314b
   1316c:	mov    eax,edi
   1316e:	pop    edi
   1316f:	pop    esi
   13170:	pop    ebp
   13171:	ret    0x4
   13174:	int3   
   13175:	int3   
   13176:	int3   
   13177:	int3   
   13178:	int3   
   13179:	int3   
   1317a:	mov    edi,edi
   1317c:	push   ebp
   1317d:	mov    ebp,esp
   1317f:	mov    edx,DWORD PTR [ebp+0x8]
   13182:	mov    eax,DWORD PTR [edx+0x8]
   13185:	push   esi
   13186:	mov    esi,DWORD PTR [eax]
   13188:	mov    DWORD PTR [edx+0x8],esi
   1318b:	mov    esi,DWORD PTR [eax]
   1318d:	cmp    esi,DWORD PTR ds:0x786c4
   13193:	je     0x13198
   13195:	mov    DWORD PTR [esi+0x4],edx
   13198:	mov    esi,DWORD PTR [edx+0x4]
   1319b:	mov    DWORD PTR [eax+0x4],esi
   1319e:	mov    ecx,DWORD PTR [ecx+0x4]
   131a1:	pop    esi
   131a2:	cmp    edx,DWORD PTR [ecx+0x4]
   131a5:	jne    0x131ac
   131a7:	mov    DWORD PTR [ecx+0x4],eax
   131aa:	jmp    0x131ba
   131ac:	mov    ecx,DWORD PTR [edx+0x4]
   131af:	cmp    edx,DWORD PTR [ecx]
   131b1:	jne    0x131b7
   131b3:	mov    DWORD PTR [ecx],eax
   131b5:	jmp    0x131ba
   131b7:	mov    DWORD PTR [ecx+0x8],eax
   131ba:	mov    DWORD PTR [eax],edx
   131bc:	mov    DWORD PTR [edx+0x4],eax
   131bf:	pop    ebp
   131c0:	ret    0x4
   131c3:	int3   
   131c4:	int3   
   131c5:	int3   
   131c6:	int3   
   131c7:	int3   
   131c8:	mov    edi,edi
   131ca:	push   ebp
   131cb:	mov    ebp,esp
   131cd:	mov    edx,DWORD PTR [ebp+0x8]
   131d0:	mov    eax,DWORD PTR [edx]
   131d2:	push   esi
   131d3:	mov    esi,DWORD PTR [eax+0x8]
   131d6:	mov    DWORD PTR [edx],esi
   131d8:	mov    esi,DWORD PTR [eax+0x8]
   131db:	cmp    esi,DWORD PTR ds:0x786c4
   131e1:	je     0x131e6
   131e3:	mov    DWORD PTR [esi+0x4],edx
   131e6:	mov    esi,DWORD PTR [edx+0x4]
   131e9:	mov    DWORD PTR [eax+0x4],esi
   131ec:	mov    ecx,DWORD PTR [ecx+0x4]
   131ef:	pop    esi
   131f0:	cmp    edx,DWORD PTR [ecx+0x4]
   131f3:	jne    0x131fa
   131f5:	mov    DWORD PTR [ecx+0x4],eax
   131f8:	jmp    0x13209
   131fa:	mov    ecx,DWORD PTR [edx+0x4]
   131fd:	cmp    edx,DWORD PTR [ecx+0x8]
   13200:	jne    0x13207
   13202:	mov    DWORD PTR [ecx+0x8],eax
   13205:	jmp    0x13209
   13207:	mov    DWORD PTR [ecx],eax
   13209:	mov    DWORD PTR [eax+0x8],edx
   1320c:	mov    DWORD PTR [edx+0x4],eax
   1320f:	pop    ebp
   13210:	ret    0x4
   13213:	int3   
   13214:	int3   
   13215:	int3   
   13216:	int3   
   13217:	int3   
   13218:	mov    edi,edi
   1321a:	push   ebp
   1321b:	mov    ebp,esp
   1321d:	mov    eax,DWORD PTR [ecx+0x4]
   13220:	mov    ecx,DWORD PTR [eax+0x4]
   13223:	mov    edx,DWORD PTR ds:0x786c4
   13229:	cmp    ecx,edx
   1322b:	je     0x13246
   1322d:	push   esi
   1322e:	mov    esi,DWORD PTR [ebp+0x8]
   13231:	mov    esi,DWORD PTR [esi]
   13233:	cmp    esi,DWORD PTR [ecx+0xc]
   13236:	jge    0x1323e
   13238:	mov    eax,ecx
   1323a:	mov    ecx,DWORD PTR [ecx]
   1323c:	jmp    0x13241
   1323e:	mov    ecx,DWORD PTR [ecx+0x8]
   13241:	cmp    ecx,edx
   13243:	jne    0x13233
   13245:	pop    esi
   13246:	pop    ebp
   13247:	ret    0x4
   1324a:	int3   
   1324b:	int3   
   1324c:	int3   
   1324d:	int3   
   1324e:	int3   
   1324f:	int3   
   13250:	mov    edi,edi
   13252:	push   ebp
   13253:	mov    ebp,esp
   13255:	mov    eax,DWORD PTR [ecx+0x4]
   13258:	push   esi
   13259:	mov    esi,DWORD PTR [eax+0x4]
   1325c:	push   edi
   1325d:	mov    edi,eax
   1325f:	jmp    0x1327a
   13261:	push   DWORD PTR [ebp+0x8]
   13264:	lea    eax,[esi+0xc]
   13267:	push   eax
   13268:	call   0x19a38
   1326d:	test   al,al
   1326f:	je     0x13276
   13271:	mov    esi,DWORD PTR [esi+0x8]
   13274:	jmp    0x1327a
   13276:	mov    edi,esi
   13278:	mov    esi,DWORD PTR [esi]
   1327a:	cmp    esi,DWORD PTR ds:0x786cc
   13280:	jne    0x13261
   13282:	mov    eax,edi
   13284:	pop    edi
   13285:	pop    esi
   13286:	pop    ebp
   13287:	ret    0x4
   1328a:	int3   
   1328b:	int3   
   1328c:	int3   
   1328d:	int3   
   1328e:	int3   
   1328f:	int3   
   13290:	mov    edi,edi
   13292:	push   ebp
   13293:	mov    ebp,esp
   13295:	mov    edx,DWORD PTR [ebp+0x8]
   13298:	mov    eax,DWORD PTR [edx+0x8]
   1329b:	push   esi
   1329c:	mov    esi,DWORD PTR [eax]
   1329e:	mov    DWORD PTR [edx+0x8],esi
   132a1:	mov    esi,DWORD PTR [eax]
   132a3:	cmp    esi,DWORD PTR ds:0x786cc
   132a9:	je     0x132ae
   132ab:	mov    DWORD PTR [esi+0x4],edx
   132ae:	mov    esi,DWORD PTR [edx+0x4]
   132b1:	mov    DWORD PTR [eax+0x4],esi
   132b4:	mov    ecx,DWORD PTR [ecx+0x4]
   132b7:	pop    esi
   132b8:	cmp    edx,DWORD PTR [ecx+0x4]
   132bb:	jne    0x132c2
   132bd:	mov    DWORD PTR [ecx+0x4],eax
   132c0:	jmp    0x132d0
   132c2:	mov    ecx,DWORD PTR [edx+0x4]
   132c5:	cmp    edx,DWORD PTR [ecx]
   132c7:	jne    0x132cd
   132c9:	mov    DWORD PTR [ecx],eax
   132cb:	jmp    0x132d0
   132cd:	mov    DWORD PTR [ecx+0x8],eax
   132d0:	mov    DWORD PTR [eax],edx
   132d2:	mov    DWORD PTR [edx+0x4],eax
   132d5:	pop    ebp
   132d6:	ret    0x4
   132d9:	int3   
   132da:	int3   
   132db:	int3   
   132dc:	int3   
   132dd:	int3   
   132de:	mov    edi,edi
   132e0:	push   ebp
   132e1:	mov    ebp,esp
   132e3:	mov    edx,DWORD PTR [ebp+0x8]
   132e6:	mov    eax,DWORD PTR [edx]
   132e8:	push   esi
   132e9:	mov    esi,DWORD PTR [eax+0x8]
   132ec:	mov    DWORD PTR [edx],esi
   132ee:	mov    esi,DWORD PTR [eax+0x8]
   132f1:	cmp    esi,DWORD PTR ds:0x786cc
   132f7:	je     0x132fc
   132f9:	mov    DWORD PTR [esi+0x4],edx
   132fc:	mov    esi,DWORD PTR [edx+0x4]
   132ff:	mov    DWORD PTR [eax+0x4],esi
   13302:	mov    ecx,DWORD PTR [ecx+0x4]
   13305:	pop    esi
   13306:	cmp    edx,DWORD PTR [ecx+0x4]
   13309:	jne    0x13310
   1330b:	mov    DWORD PTR [ecx+0x4],eax
   1330e:	jmp    0x1331f
   13310:	mov    ecx,DWORD PTR [edx+0x4]
   13313:	cmp    edx,DWORD PTR [ecx+0x8]
   13316:	jne    0x1331d
   13318:	mov    DWORD PTR [ecx+0x8],eax
   1331b:	jmp    0x1331f
   1331d:	mov    DWORD PTR [ecx],eax
   1331f:	mov    DWORD PTR [eax+0x8],edx
   13322:	mov    DWORD PTR [edx+0x4],eax
   13325:	pop    ebp
   13326:	ret    0x4
   13329:	int3   
   1332a:	int3   
   1332b:	int3   
   1332c:	int3   
   1332d:	int3   
   1332e:	mov    edi,edi
   13330:	push   esi
   13331:	mov    esi,ecx
   13333:	mov    ecx,DWORD PTR [esi]
   13335:	cmp    DWORD PTR [ecx+0x1c],0x0
   13339:	jne    0x13348
   1333b:	mov    eax,DWORD PTR [ecx+0x4]
   1333e:	cmp    DWORD PTR [eax+0x4],ecx
   13341:	jne    0x13348
   13343:	mov    eax,DWORD PTR [ecx+0x8]
   13346:	jmp    0x13365
   13348:	mov    eax,DWORD PTR [ecx]
   1334a:	cmp    eax,DWORD PTR ds:0x786cc
   13350:	je     0x1335e
   13352:	push   eax
   13353:	call   0x111de
   13358:	jmp    0x13365
   1335a:	mov    DWORD PTR [esi],eax
   1335c:	mov    ecx,eax
   1335e:	mov    eax,DWORD PTR [ecx+0x4]
   13361:	cmp    ecx,DWORD PTR [eax]
   13363:	je     0x1335a
   13365:	mov    DWORD PTR [esi],eax
   13367:	pop    esi
   13368:	ret    
   13369:	int3   
   1336a:	int3   
   1336b:	int3   
   1336c:	int3   
   1336d:	int3   
   1336e:	mov    edi,edi
   13370:	push   ebp
   13371:	mov    ebp,esp
   13373:	mov    eax,DWORD PTR [ecx+0x4]
   13376:	mov    ecx,DWORD PTR [eax+0x4]
   13379:	mov    edx,DWORD PTR ds:0x786b4
   1337f:	cmp    ecx,edx
   13381:	je     0x1339c
   13383:	push   esi
   13384:	mov    esi,DWORD PTR [ebp+0x8]
   13387:	mov    esi,DWORD PTR [esi]
   13389:	cmp    DWORD PTR [ecx+0xc],esi
   1338c:	jae    0x13393
   1338e:	mov    ecx,DWORD PTR [ecx+0x8]
   13391:	jmp    0x13397
   13393:	mov    eax,ecx
   13395:	mov    ecx,DWORD PTR [ecx]
   13397:	cmp    ecx,edx
   13399:	jne    0x13389
   1339b:	pop    esi
   1339c:	pop    ebp
   1339d:	ret    0x4
   133a0:	int3   
   133a1:	int3   
   133a2:	int3   
   133a3:	int3   
   133a4:	int3   
   133a5:	int3   
   133a6:	mov    edi,edi
   133a8:	push   ebp
   133a9:	mov    ebp,esp
   133ab:	mov    eax,DWORD PTR [ecx+0x4]
   133ae:	mov    ecx,DWORD PTR [eax+0x4]
   133b1:	mov    edx,DWORD PTR ds:0x786b4
   133b7:	cmp    ecx,edx
   133b9:	je     0x133d4
   133bb:	push   esi
   133bc:	mov    esi,DWORD PTR [ebp+0x8]
   133bf:	mov    esi,DWORD PTR [esi]
   133c1:	cmp    esi,DWORD PTR [ecx+0xc]
   133c4:	jae    0x133cc
   133c6:	mov    eax,ecx
   133c8:	mov    ecx,DWORD PTR [ecx]
   133ca:	jmp    0x133cf
   133cc:	mov    ecx,DWORD PTR [ecx+0x8]
   133cf:	cmp    ecx,edx
   133d1:	jne    0x133c1
   133d3:	pop    esi
   133d4:	pop    ebp
   133d5:	ret    0x4
   133d8:	int3   
   133d9:	int3   
   133da:	int3   
   133db:	int3   
   133dc:	int3   
   133dd:	int3   
   133de:	mov    edi,edi
   133e0:	push   ebp
   133e1:	mov    ebp,esp
   133e3:	cmp    DWORD PTR [ebp+0x8],0x0
   133e7:	jge    0x133ed
   133e9:	and    DWORD PTR [ebp+0x8],0x0
   133ed:	push   DWORD PTR [ebp+0x8]
   133f0:	call   0x11cec
   133f5:	pop    ecx
   133f6:	pop    ebp
   133f7:	ret    0x8
   133fa:	int3   
   133fb:	int3   
   133fc:	int3   
   133fd:	int3   
   133fe:	int3   
   133ff:	int3   
   13400:	mov    edi,edi
   13402:	push   ebp
   13403:	mov    ebp,esp
   13405:	push   esi
   13406:	mov    esi,ecx
   13408:	call   0x1365a
   1340d:	test   BYTE PTR [ebp+0x8],0x1
   13411:	je     0x1341a
   13413:	push   esi
   13414:	call   0x11d22
   13419:	pop    ecx
   1341a:	mov    eax,esi
   1341c:	pop    esi
   1341d:	pop    ebp
   1341e:	ret    0x4
   13421:	int3   
   13422:	int3   
   13423:	int3   
   13424:	int3   
   13425:	int3   
   13426:	mov    edi,edi
   13428:	push   ebp
   13429:	mov    ebp,esp
   1342b:	push   edi
   1342c:	mov    edi,DWORD PTR [ebp+0xc]
   1342f:	cmp    DWORD PTR [ebp+0x8],edi
   13432:	je     0x13448
   13434:	push   esi
   13435:	mov    esi,DWORD PTR [ebp+0x10]
   13438:	inc    DWORD PTR [esi]
   1343a:	lea    ecx,[ebp+0x8]
   1343d:	call   0x10ef4
   13442:	cmp    DWORD PTR [ebp+0x8],edi
   13445:	jne    0x13438
   13447:	pop    esi
   13448:	pop    edi
   13449:	pop    ebp
   1344a:	ret    
   1344b:	int3   
   1344c:	int3   
   1344d:	int3   
   1344e:	int3   
   1344f:	int3   
   13450:	mov    edi,edi
   13452:	push   ebp
   13453:	mov    ebp,esp
   13455:	push   edi
   13456:	mov    edi,DWORD PTR [ebp+0xc]
   13459:	cmp    DWORD PTR [ebp+0x8],edi
   1345c:	je     0x13472
   1345e:	push   esi
   1345f:	mov    esi,DWORD PTR [ebp+0x10]
   13462:	inc    DWORD PTR [esi]
   13464:	lea    ecx,[ebp+0x8]
   13467:	call   0x11172
   1346c:	cmp    DWORD PTR [ebp+0x8],edi
   1346f:	jne    0x13462
   13471:	pop    esi
   13472:	pop    edi
   13473:	pop    ebp
   13474:	ret    
   13475:	int3   
   13476:	int3   
   13477:	int3   
   13478:	int3   
   13479:	int3   
   1347a:	mov    edi,edi
   1347c:	push   ebp
   1347d:	mov    ebp,esp
   1347f:	push   edi
   13480:	mov    edi,DWORD PTR [ebp+0xc]
   13483:	cmp    DWORD PTR [ebp+0x8],edi
   13486:	je     0x1349c
   13488:	push   esi
   13489:	mov    esi,DWORD PTR [ebp+0x10]
   1348c:	inc    DWORD PTR [esi]
   1348e:	lea    ecx,[ebp+0x8]
   13491:	call   0x111a8
   13496:	cmp    DWORD PTR [ebp+0x8],edi
   13499:	jne    0x1348c
   1349b:	pop    esi
   1349c:	pop    edi
   1349d:	pop    ebp
   1349e:	ret    
   1349f:	int3   
   134a0:	int3   
   134a1:	int3   
   134a2:	int3   
   134a3:	int3   
   134a4:	mov    edi,edi
   134a6:	push   ebp
   134a7:	mov    ebp,esp
   134a9:	push   edi
   134aa:	mov    edi,DWORD PTR [ebp+0xc]
   134ad:	cmp    DWORD PTR [ebp+0x8],edi
   134b0:	je     0x134c6
   134b2:	push   esi
   134b3:	mov    esi,DWORD PTR [ebp+0x10]
   134b6:	inc    DWORD PTR [esi]
   134b8:	lea    ecx,[ebp+0x8]
   134bb:	call   0x12e72
   134c0:	cmp    DWORD PTR [ebp+0x8],edi
   134c3:	jne    0x134b6
   134c5:	pop    esi
   134c6:	pop    edi
   134c7:	pop    ebp
   134c8:	ret    
   134c9:	int3   
   134ca:	int3   
   134cb:	int3   
   134cc:	int3   
   134cd:	int3   
   134ce:	mov    edi,edi
   134d0:	push   esi
   134d1:	mov    esi,ecx
   134d3:	push   DWORD PTR [esi+0x38]
   134d6:	call   0x11d22
   134db:	push   DWORD PTR [esi+0x18]
   134de:	call   0x11d22
   134e3:	push   DWORD PTR [esi+0x10]
   134e6:	call   0x11d22
   134eb:	push   DWORD PTR [esi+0x8]
   134ee:	call   0x11d22
   134f3:	push   DWORD PTR [esi]
   134f5:	call   0x11d22
   134fa:	add    esp,0x14
   134fd:	pop    esi
   134fe:	ret    
   134ff:	int3   
   13500:	int3   
   13501:	int3   
   13502:	int3   
   13503:	int3   
   13504:	mov    edi,edi
   13506:	push   ebp
   13507:	mov    ebp,esp
   13509:	push   esi
   1350a:	mov    esi,ecx
   1350c:	mov    ecx,DWORD PTR [esi]
   1350e:	test   ecx,ecx
   13510:	je     0x13517
   13512:	call   0x11d64
   13517:	mov    eax,DWORD PTR [ebp+0x8]
   1351a:	mov    eax,DWORD PTR [eax]
   1351c:	mov    DWORD PTR [esi],eax
   1351e:	inc    DWORD PTR [eax+0x4]
   13521:	mov    eax,esi
   13523:	pop    esi
   13524:	pop    ebp
   13525:	ret    0x4
   13528:	int3   
   13529:	int3   
   1352a:	int3   
   1352b:	int3   
   1352c:	int3   
   1352d:	int3   
   1352e:	mov    edi,edi
   13530:	push   ebp
   13531:	mov    ebp,esp
   13533:	push   ebx
   13534:	push   esi
   13535:	push   edi
   13536:	mov    edi,DWORD PTR [ebp+0xc]
   13539:	mov    esi,ecx
   1353b:	and    DWORD PTR [esi+0x4],0x0
   1353f:	lea    eax,[edi+0x1]
   13542:	push   eax
   13543:	mov    DWORD PTR [esi+0x8],edi
   13546:	call   0x11cec
   1354b:	push   edi
   1354c:	push   DWORD PTR [ebp+0x8]
   1354f:	mov    ebx,eax
   13551:	push   ebx
   13552:	call   0x1dd1a
   13557:	add    esp,0x10
   1355a:	inc    DWORD PTR [esi+0x4]
   1355d:	pop    edi
   1355e:	mov    DWORD PTR [esi],ebx
   13560:	mov    eax,esi
   13562:	pop    esi
   13563:	pop    ebx
   13564:	pop    ebp
   13565:	ret    0x8
   13568:	int3   
   13569:	int3   
   1356a:	int3   
   1356b:	int3   
   1356c:	int3   
   1356d:	int3   
   1356e:	mov    edi,edi
   13570:	push   ebp
   13571:	mov    ebp,esp
   13573:	sub    esp,0x18
   13576:	lea    eax,[ebp-0x18]
   13579:	push   eax
   1357a:	push   DWORD PTR [ebp+0x8]
   1357d:	call   0x11ed8
   13582:	test   al,al
   13584:	je     0x135f3
   13586:	lea    eax,[ebp-0x4]
   13589:	push   eax
   1358a:	push   DWORD PTR [ebp+0xc]
   1358d:	call   0x11a3e
   13592:	call   eax
   13594:	test   eax,eax
   13596:	jl     0x135f3
   13598:	push   esi
   13599:	push   0x5
   1359b:	call   0x128e0
   135a0:	mov    esi,eax
   135a2:	test   esi,esi
   135a4:	je     0x135f2
   135a6:	mov    edx,DWORD PTR [ebp+0x10]
   135a9:	cmp    DWORD PTR [esi+0x44],edx
   135ac:	je     0x135bb
   135ae:	mov    ecx,DWORD PTR [eax]
   135b0:	test   ecx,ecx
   135b2:	je     0x135df
   135b4:	add    eax,ecx
   135b6:	cmp    DWORD PTR [eax+0x44],edx
   135b9:	jne    0x135ae
   135bb:	cmp    DWORD PTR [eax+0x4],0x0
   135bf:	je     0x135df
   135c1:	mov    ecx,DWORD PTR [eax+0xd8]
   135c7:	mov    eax,DWORD PTR [eax+0xdc]
   135cd:	mov    DWORD PTR [ebp-0x14],eax
   135d0:	lea    eax,[ebp-0x18]
   135d3:	push   eax
   135d4:	push   DWORD PTR [ebp+0x8]
   135d7:	mov    DWORD PTR [ebp-0x18],ecx
   135da:	call   0x11f28
   135df:	mov    ecx,DWORD PTR [ebp-0x4]
   135e2:	call   DWORD PTR ds:0x1f450
   135e8:	push   0x0
   135ea:	push   esi
   135eb:	call   0x115fa
   135f0:	call   eax
   135f2:	pop    esi
   135f3:	leave  
   135f4:	ret    0x10
   135f7:	int3   
   135f8:	int3   
   135f9:	int3   
   135fa:	int3   
   135fb:	int3   
   135fc:	mov    edi,edi
   135fe:	push   ebp
   135ff:	mov    ebp,esp
   13601:	push   esi
   13602:	push   DWORD PTR [ebp+0xc]
   13605:	mov    esi,ecx
   13607:	push   DWORD PTR [ebp+0x8]
   1360a:	call   0x12b26
   1360f:	mov    eax,esi
   13611:	pop    esi
   13612:	pop    ebp
   13613:	ret    0x8
   13616:	int3   
   13617:	int3   
   13618:	int3   
   13619:	int3   
   1361a:	int3   
   1361b:	int3   
   1361c:	mov    edi,edi
   1361e:	push   ebp
   1361f:	mov    ebp,esp
   13621:	mov    eax,DWORD PTR [ebp+0x8]
   13624:	push   esi
   13625:	push   DWORD PTR [eax+0x4]
   13628:	mov    esi,ecx
   1362a:	push   DWORD PTR [eax]
   1362c:	call   0x12b26
   13631:	mov    eax,esi
   13633:	pop    esi
   13634:	pop    ebp
   13635:	ret    0x4
   13638:	int3   
   13639:	int3   
   1363a:	int3   
   1363b:	int3   
   1363c:	int3   
   1363d:	int3   
   1363e:	mov    edi,edi
   13640:	push   esi
   13641:	mov    esi,ecx
   13643:	lea    ecx,[esi+0x8]
   13646:	call   0x134ce
   1364b:	push   DWORD PTR [esi]
   1364d:	call   0x11d22
   13652:	pop    ecx
   13653:	pop    esi
   13654:	ret    
   13655:	int3   
   13656:	int3   
   13657:	int3   
   13658:	int3   
   13659:	int3   
   1365a:	mov    edi,edi
   1365c:	push   esi
   1365d:	mov    esi,ecx
   1365f:	push   DWORD PTR [esi+0x8]
   13662:	call   0x11d22
   13667:	push   DWORD PTR [esi]
   13669:	call   0x11d22
   1366e:	pop    ecx
   1366f:	pop    ecx
   13670:	pop    esi
   13671:	ret    
   13672:	int3   
   13673:	int3   
   13674:	int3   
   13675:	int3   
   13676:	int3   
   13677:	int3   
   13678:	mov    edi,edi
   1367a:	push   ebp
   1367b:	mov    ebp,esp
   1367d:	push   esi
   1367e:	push   DWORD PTR [ebp+0xc]
   13681:	mov    esi,ecx
   13683:	push   DWORD PTR [ebp+0x8]
   13686:	call   0x12be0
   1368b:	mov    eax,esi
   1368d:	pop    esi
   1368e:	pop    ebp
   1368f:	ret    0x8
   13692:	int3   
   13693:	int3   
   13694:	int3   
   13695:	int3   
   13696:	int3   
   13697:	int3   
   13698:	mov    edi,edi
   1369a:	push   ebp
   1369b:	mov    ebp,esp
   1369d:	mov    eax,DWORD PTR [ebp+0x8]
   136a0:	push   esi
   136a1:	push   DWORD PTR [eax+0x4]
   136a4:	mov    esi,ecx
   136a6:	push   DWORD PTR [eax]
   136a8:	call   0x12be0
   136ad:	mov    eax,esi
   136af:	pop    esi
   136b0:	pop    ebp
   136b1:	ret    0x4
   136b4:	int3   
   136b5:	int3   
   136b6:	int3   
   136b7:	int3   
   136b8:	int3   
   136b9:	int3   
   136ba:	mov    edi,edi
   136bc:	push   ebp
   136bd:	mov    ebp,esp
   136bf:	push   esi
   136c0:	mov    esi,DWORD PTR [ebp+0x8]
   136c3:	lea    eax,[ebp+0xc]
   136c6:	push   eax
   136c7:	mov    ecx,esi
   136c9:	call   0x13698
   136ce:	xor    ecx,ecx
   136d0:	inc    ecx
   136d1:	cmp    DWORD PTR [esi+0x4],ecx
   136d4:	jbe    0x136e8
   136d6:	mov    eax,DWORD PTR [esi]
   136d8:	lea    eax,[eax+ecx*2]
   136db:	mov    dx,WORD PTR [eax-0x2]
   136df:	xor    WORD PTR [eax],dx
   136e2:	inc    ecx
   136e3:	cmp    ecx,DWORD PTR [esi+0x4]
   136e6:	jb     0x136d6
   136e8:	push   DWORD PTR [ebp+0xc]
   136eb:	call   0x11d22
   136f0:	pop    ecx
   136f1:	mov    eax,esi
   136f3:	pop    esi
   136f4:	pop    ebp
   136f5:	ret    0xc
   136f8:	int3   
   136f9:	int3   
   136fa:	int3   
   136fb:	int3   
   136fc:	int3   
   136fd:	int3   
   136fe:	mov    edi,edi
   13700:	push   ebp
   13701:	mov    ebp,esp
   13703:	push   esi
   13704:	mov    esi,DWORD PTR [ebp+0x8]
   13707:	lea    eax,[ebp+0xc]
   1370a:	push   eax
   1370b:	mov    ecx,esi
   1370d:	call   0x1361c
   13712:	xor    ecx,ecx
   13714:	inc    ecx
   13715:	cmp    DWORD PTR [esi+0x4],ecx
   13718:	jbe    0x13729
   1371a:	mov    eax,DWORD PTR [esi]
   1371c:	add    eax,ecx
   1371e:	mov    dl,BYTE PTR [eax-0x1]
   13721:	xor    BYTE PTR [eax],dl
   13723:	inc    ecx
   13724:	cmp    ecx,DWORD PTR [esi+0x4]
   13727:	jb     0x1371a
   13729:	push   DWORD PTR [ebp+0xc]
   1372c:	call   0x11d22
   13731:	pop    ecx
   13732:	mov    eax,esi
   13734:	pop    esi
   13735:	pop    ebp
   13736:	ret    0xc
   13739:	int3   
   1373a:	int3   
   1373b:	int3   
   1373c:	int3   
   1373d:	int3   
   1373e:	mov    edi,edi
   13740:	push   esi
   13741:	mov    esi,ecx
   13743:	mov    ecx,DWORD PTR [esi]
   13745:	mov    eax,DWORD PTR [ecx+0x8]
   13748:	cmp    eax,DWORD PTR ds:0x786bc
   1374e:	je     0x1375c
   13750:	push   eax
   13751:	call   0x12c4c
   13756:	jmp    0x1376b
   13758:	mov    DWORD PTR [esi],eax
   1375a:	mov    ecx,eax
   1375c:	mov    eax,DWORD PTR [ecx+0x4]
   1375f:	cmp    ecx,DWORD PTR [eax+0x8]
   13762:	je     0x13758
   13764:	mov    ecx,DWORD PTR [esi]
   13766:	cmp    DWORD PTR [ecx+0x8],eax
   13769:	je     0x1376d
   1376b:	mov    DWORD PTR [esi],eax
   1376d:	pop    esi
   1376e:	ret    
   1376f:	int3   
   13770:	int3   
   13771:	int3   
   13772:	int3   
   13773:	int3   
   13774:	mov    edi,edi
   13776:	push   ebp
   13777:	mov    ebp,esp
   13779:	push   esi
   1377a:	push   DWORD PTR [ebp+0x8]
   1377d:	mov    esi,ecx
   1377f:	call   0x1361c
   13784:	push   DWORD PTR [ebp+0xc]
   13787:	lea    ecx,[esi+0x8]
   1378a:	call   0x1361c
   1378f:	mov    eax,esi
   13791:	pop    esi
   13792:	pop    ebp
   13793:	ret    0x8
   13796:	int3   
   13797:	int3   
   13798:	int3   
   13799:	int3   
   1379a:	int3   
   1379b:	int3   
   1379c:	mov    edi,edi
   1379e:	push   ebp
   1379f:	mov    ebp,esp
   137a1:	mov    eax,DWORD PTR [ebp+0x8]
   137a4:	mov    eax,DWORD PTR [eax]
   137a6:	push   esi
   137a7:	push   DWORD PTR [ebp+0xc]
   137aa:	mov    esi,ecx
   137ac:	lea    ecx,[esi+0x4]
   137af:	mov    DWORD PTR [esi],eax
   137b1:	call   0x11d40
   137b6:	mov    eax,esi
   137b8:	pop    esi
   137b9:	pop    ebp
   137ba:	ret    0x8
   137bd:	int3   
   137be:	int3   
   137bf:	int3   
   137c0:	int3   
   137c1:	int3   
   137c2:	mov    edi,edi
   137c4:	push   ebp
   137c5:	mov    ebp,esp
   137c7:	push   esi
   137c8:	push   edi
   137c9:	mov    edi,DWORD PTR [ebp+0x8]
   137cc:	push   edi
   137cd:	mov    esi,ecx
   137cf:	call   0x1361c
   137d4:	lea    eax,[edi+0x8]
   137d7:	push   eax
   137d8:	lea    ecx,[esi+0x8]
   137db:	call   0x1361c
   137e0:	lea    eax,[edi+0x10]
   137e3:	push   eax
   137e4:	lea    ecx,[esi+0x10]
   137e7:	call   0x1361c
   137ec:	lea    eax,[edi+0x18]
   137ef:	push   eax
   137f0:	lea    ecx,[esi+0x18]
   137f3:	call   0x1361c
   137f8:	mov    eax,DWORD PTR [edi+0x20]
   137fb:	mov    DWORD PTR [esi+0x20],eax
   137fe:	mov    eax,DWORD PTR [edi+0x28]
   13801:	mov    DWORD PTR [esi+0x28],eax
   13804:	mov    eax,DWORD PTR [edi+0x2c]
   13807:	mov    DWORD PTR [esi+0x2c],eax
   1380a:	mov    eax,DWORD PTR [edi+0x30]
   1380d:	mov    DWORD PTR [esi+0x30],eax
   13810:	mov    eax,DWORD PTR [edi+0x34]
   13813:	add    edi,0x38
   13816:	push   edi
   13817:	lea    ecx,[esi+0x38]
   1381a:	mov    DWORD PTR [esi+0x34],eax
   1381d:	call   0x1361c
   13822:	pop    edi
   13823:	mov    eax,esi
   13825:	pop    esi
   13826:	pop    ebp
   13827:	ret    0x4
   1382a:	int3   
   1382b:	int3   
   1382c:	int3   
   1382d:	int3   
   1382e:	int3   
   1382f:	int3   
   13830:	mov    edi,edi
   13832:	push   ebp
   13833:	mov    ebp,esp
   13835:	push   ebx
   13836:	push   esi
   13837:	push   edi
   13838:	mov    edi,DWORD PTR [ebp+0x8]
   1383b:	mov    ebx,ecx
   1383d:	mov    esi,edi
   1383f:	cmp    edi,DWORD PTR ds:0x786b0
   13845:	je     0x13864
   13847:	push   DWORD PTR [esi+0x8]
   1384a:	mov    ecx,ebx
   1384c:	call   0x13830
   13851:	mov    esi,DWORD PTR [esi]
   13853:	push   edi
   13854:	call   0x11d22
   13859:	pop    ecx
   1385a:	mov    edi,esi
   1385c:	cmp    esi,DWORD PTR ds:0x786b0
   13862:	jne    0x13847
   13864:	pop    edi
   13865:	pop    esi
   13866:	pop    ebx
   13867:	pop    ebp
   13868:	ret    0x4
   1386b:	int3   
   1386c:	int3   
   1386d:	int3   
   1386e:	int3   
   1386f:	int3   
   13870:	mov    edi,edi
   13872:	push   ebp
   13873:	mov    ebp,esp
   13875:	push   esi
   13876:	push   DWORD PTR [ebp+0x8]
   13879:	mov    esi,ecx
   1387b:	call   0x13698
   13880:	push   DWORD PTR [ebp+0xc]
   13883:	lea    ecx,[esi+0x8]
   13886:	call   0x13698
   1388b:	mov    eax,esi
   1388d:	pop    esi
   1388e:	pop    ebp
   1388f:	ret    0x8
   13892:	int3   
   13893:	int3   
   13894:	int3   
   13895:	int3   
   13896:	int3   
   13897:	int3   
   13898:	mov    edi,edi
   1389a:	push   ebp
   1389b:	mov    ebp,esp
   1389d:	push   ebx
   1389e:	push   esi
   1389f:	push   edi
   138a0:	mov    edi,DWORD PTR [ebp+0x8]
   138a3:	mov    ebx,ecx
   138a5:	mov    esi,edi
   138a7:	cmp    edi,DWORD PTR ds:0x786b4
   138ad:	je     0x138cc
   138af:	push   DWORD PTR [esi+0x8]
   138b2:	mov    ecx,ebx
   138b4:	call   0x13898
   138b9:	mov    esi,DWORD PTR [esi]
   138bb:	push   edi
   138bc:	call   0x11d22
   138c1:	pop    ecx
   138c2:	mov    edi,esi
   138c4:	cmp    esi,DWORD PTR ds:0x786b4
   138ca:	jne    0x138af
   138cc:	pop    edi
   138cd:	pop    esi
   138ce:	pop    ebx
   138cf:	pop    ebp
   138d0:	ret    0x4
   138d3:	int3   
   138d4:	int3   
   138d5:	int3   
   138d6:	int3   
   138d7:	int3   
   138d8:	mov    edi,edi
   138da:	push   ebp
   138db:	mov    ebp,esp
   138dd:	push   esi
   138de:	push   edi
   138df:	mov    edi,DWORD PTR [ebp+0x8]
   138e2:	push   edi
   138e3:	mov    esi,ecx
   138e5:	call   0x13698
   138ea:	add    edi,0x8
   138ed:	push   edi
   138ee:	lea    ecx,[esi+0x8]
   138f1:	call   0x13698
   138f6:	pop    edi
   138f7:	mov    eax,esi
   138f9:	pop    esi
   138fa:	pop    ebp
   138fb:	ret    0x4
   138fe:	int3   
   138ff:	int3   
   13900:	int3   
   13901:	int3   
   13902:	int3   
   13903:	int3   
   13904:	mov    edi,edi
   13906:	push   ebp
   13907:	mov    ebp,esp
   13909:	push   esi
   1390a:	push   edi
   1390b:	mov    edi,DWORD PTR [ebp+0x8]
   1390e:	push   edi
   1390f:	mov    esi,ecx
   13911:	call   0x1361c
   13916:	add    edi,0x8
   13919:	push   edi
   1391a:	lea    ecx,[esi+0x8]
   1391d:	call   0x1361c
   13922:	pop    edi
   13923:	mov    eax,esi
   13925:	pop    esi
   13926:	pop    ebp
   13927:	ret    0x4
   1392a:	int3   
   1392b:	int3   
   1392c:	int3   
   1392d:	int3   
   1392e:	int3   
   1392f:	int3   
   13930:	mov    edi,edi
   13932:	push   ebp
   13933:	mov    ebp,esp
   13935:	push   ecx
   13936:	push   DWORD PTR [ebp-0x4]
   13939:	push   DWORD PTR [ebp+0x10]
   1393c:	push   DWORD PTR [ebp+0xc]
   1393f:	push   DWORD PTR [ebp+0x8]
   13942:	call   0x13426
   13947:	add    esp,0x10
   1394a:	leave  
   1394b:	ret    
   1394c:	int3   
   1394d:	int3   
   1394e:	int3   
   1394f:	int3   
   13950:	int3   
   13951:	int3   
   13952:	mov    edi,edi
   13954:	push   ebp
   13955:	mov    ebp,esp
   13957:	push   ecx
   13958:	push   DWORD PTR [ebp-0x4]
   1395b:	push   DWORD PTR [ebp+0x10]
   1395e:	push   DWORD PTR [ebp+0xc]
   13961:	push   DWORD PTR [ebp+0x8]
   13964:	call   0x13450
   13969:	add    esp,0x10
   1396c:	leave  
   1396d:	ret    
   1396e:	int3   
   1396f:	int3   
   13970:	int3   
   13971:	int3   
   13972:	int3   
   13973:	int3   
   13974:	mov    edi,edi
   13976:	push   ebp
   13977:	mov    ebp,esp
   13979:	push   ecx
   1397a:	push   DWORD PTR [ebp-0x4]
   1397d:	push   DWORD PTR [ebp+0x10]
   13980:	push   DWORD PTR [ebp+0xc]
   13983:	push   DWORD PTR [ebp+0x8]
   13986:	call   0x1347a
   1398b:	add    esp,0x10
   1398e:	leave  
   1398f:	ret    
   13990:	int3   
   13991:	int3   
   13992:	int3   
   13993:	int3   
   13994:	int3   
   13995:	int3   
   13996:	mov    edi,edi
   13998:	push   ebp
   13999:	mov    ebp,esp
   1399b:	push   ecx
   1399c:	push   DWORD PTR [ebp-0x4]
   1399f:	push   DWORD PTR [ebp+0x10]
   139a2:	push   DWORD PTR [ebp+0xc]
   139a5:	push   DWORD PTR [ebp+0x8]
   139a8:	call   0x134a4
   139ad:	add    esp,0x10
   139b0:	leave  
   139b1:	ret    
   139b2:	int3   
   139b3:	int3   
   139b4:	int3   
   139b5:	int3   
   139b6:	int3   
   139b7:	int3   
   139b8:	mov    edi,edi
   139ba:	push   ebp
   139bb:	mov    ebp,esp
   139bd:	mov    ecx,DWORD PTR [ebp+0x8]
   139c0:	push   0x0
   139c2:	call   0x13400
   139c7:	pop    ebp
   139c8:	ret    0x4
   139cb:	int3   
   139cc:	int3   
   139cd:	int3   
   139ce:	int3   
   139cf:	int3   
   139d0:	mov    edi,edi
   139d2:	push   ebp
   139d3:	mov    ebp,esp
   139d5:	push   esi
   139d6:	push   edi
   139d7:	mov    edi,DWORD PTR [ebp+0x8]
   139da:	push   edi
   139db:	mov    esi,ecx
   139dd:	call   0x137c2
   139e2:	mov    eax,DWORD PTR [edi+0x40]
   139e5:	mov    DWORD PTR [esi+0x40],eax
   139e8:	pop    edi
   139e9:	mov    eax,esi
   139eb:	pop    esi
   139ec:	pop    ebp
   139ed:	ret    0x4
   139f0:	int3   
   139f1:	int3   
   139f2:	int3   
   139f3:	int3   
   139f4:	int3   
   139f5:	int3   
   139f6:	mov    edi,edi
   139f8:	push   ebp
   139f9:	mov    ebp,esp
   139fb:	push   esi
   139fc:	mov    esi,ecx
   139fe:	call   0x1363e
   13a03:	test   BYTE PTR [ebp+0x8],0x1
   13a07:	je     0x13a10
   13a09:	push   esi
   13a0a:	call   0x11d22
   13a0f:	pop    ecx
   13a10:	mov    eax,esi
   13a12:	pop    esi
   13a13:	pop    ebp
   13a14:	ret    0x4
   13a17:	int3   
   13a18:	int3   
   13a19:	int3   
   13a1a:	int3   
   13a1b:	int3   
   13a1c:	mov    edi,edi
   13a1e:	push   ebp
   13a1f:	mov    ebp,esp
   13a21:	push   esi
   13a22:	push   edi
   13a23:	mov    edi,DWORD PTR [ebp+0x8]
   13a26:	push   edi
   13a27:	mov    esi,ecx
   13a29:	call   0x1361c
   13a2e:	add    edi,0x8
   13a31:	push   edi
   13a32:	lea    ecx,[esi+0x8]
   13a35:	call   0x137c2
   13a3a:	pop    edi
   13a3b:	mov    eax,esi
   13a3d:	pop    esi
   13a3e:	pop    ebp
   13a3f:	ret    0x4
   13a42:	int3   
   13a43:	int3   
   13a44:	int3   
   13a45:	int3   
   13a46:	int3   
   13a47:	int3   
   13a48:	mov    edi,edi
   13a4a:	push   ebp
   13a4b:	mov    ebp,esp
   13a4d:	mov    eax,DWORD PTR [ebp+0x8]
   13a50:	push   esi
   13a51:	mov    esi,ecx
   13a53:	mov    ecx,DWORD PTR [eax]
   13a55:	add    eax,0x4
   13a58:	mov    DWORD PTR [esi],ecx
   13a5a:	push   eax
   13a5b:	lea    ecx,[esi+0x4]
   13a5e:	call   0x11d40
   13a63:	mov    eax,esi
   13a65:	pop    esi
   13a66:	pop    ebp
   13a67:	ret    0x4
   13a6a:	int3   
   13a6b:	int3   
   13a6c:	int3   
   13a6d:	int3   
   13a6e:	int3   
   13a6f:	int3   
   13a70:	mov    edi,edi
   13a72:	push   ebp
   13a73:	mov    ebp,esp
   13a75:	push   esi
   13a76:	mov    esi,ecx
   13a78:	mov    ecx,DWORD PTR [esi+0x4]
   13a7b:	test   ecx,ecx
   13a7d:	je     0x13a84
   13a7f:	call   0x11d64
   13a84:	test   BYTE PTR [ebp+0x8],0x1
   13a88:	je     0x13a91
   13a8a:	push   esi
   13a8b:	call   0x11d22
   13a90:	pop    ecx
   13a91:	mov    eax,esi
   13a93:	pop    esi
   13a94:	pop    ebp
   13a95:	ret    0x4
   13a98:	int3   
   13a99:	int3   
   13a9a:	int3   
   13a9b:	int3   
   13a9c:	int3   
   13a9d:	int3   
   13a9e:	mov    edi,edi
   13aa0:	push   ebp
   13aa1:	mov    ebp,esp
   13aa3:	push   esi
   13aa4:	push   DWORD PTR [ebp+0x8]
   13aa7:	mov    esi,ecx
   13aa9:	call   0x1361c
   13aae:	push   DWORD PTR [ebp+0xc]
   13ab1:	lea    ecx,[esi+0x8]
   13ab4:	call   0x139d0
   13ab9:	mov    eax,esi
   13abb:	pop    esi
   13abc:	pop    ebp
   13abd:	ret    0x8
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	int3   
   13ac3:	int3   
   13ac4:	int3   
   13ac5:	int3   
   13ac6:	mov    edi,edi
   13ac8:	push   esi
   13ac9:	push   edi
   13aca:	push   0xffffffff
   13acc:	mov    edi,0x1e148
   13ad1:	push   edi
   13ad2:	mov    esi,ecx
   13ad4:	call   0x12b26
   13ad9:	push   0xffffffff
   13adb:	push   edi
   13adc:	lea    ecx,[esi+0x8]
   13adf:	call   0x12b26
   13ae4:	push   0xffffffff
   13ae6:	push   edi
   13ae7:	lea    ecx,[esi+0x10]
   13aea:	call   0x12b26
   13aef:	push   0xffffffff
   13af1:	push   edi
   13af2:	lea    ecx,[esi+0x18]
   13af5:	call   0x12b26
   13afa:	push   0xffffffff
   13afc:	push   edi
   13afd:	lea    ecx,[esi+0x38]
   13b00:	call   0x12b26
   13b05:	xor    eax,eax
   13b07:	mov    DWORD PTR [esi+0x20],eax
   13b0a:	mov    DWORD PTR [esi+0x30],eax
   13b0d:	mov    DWORD PTR [esi+0x34],eax
   13b10:	pop    edi
   13b11:	mov    eax,esi
   13b13:	pop    esi
   13b14:	ret    
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	int3   
   13b19:	int3   
   13b1a:	mov    edi,edi
   13b1c:	push   ebp
   13b1d:	mov    ebp,esp
   13b1f:	push   esi
   13b20:	push   DWORD PTR [ebp+0x8]
   13b23:	mov    esi,ecx
   13b25:	call   0x1361c
   13b2a:	push   0xffffffff
   13b2c:	push   0x1e148
   13b31:	lea    ecx,[esi+0x8]
   13b34:	call   0x12b26
   13b39:	push   DWORD PTR [ebp+0xc]
   13b3c:	lea    ecx,[esi+0x10]
   13b3f:	call   0x1361c
   13b44:	push   DWORD PTR [ebp+0x10]
   13b47:	lea    ecx,[esi+0x18]
   13b4a:	call   0x1361c
   13b4f:	mov    eax,DWORD PTR [ebp+0x18]
   13b52:	push   DWORD PTR [ebp+0x14]
   13b55:	lea    ecx,[esi+0x38]
   13b58:	mov    DWORD PTR [esi+0x20],eax
   13b5b:	call   0x1361c
   13b60:	and    DWORD PTR [esi+0x30],0x0
   13b64:	and    DWORD PTR [esi+0x34],0x0
   13b68:	mov    eax,DWORD PTR [ebp+0x1c]
   13b6b:	mov    ecx,DWORD PTR [eax]
   13b6d:	mov    DWORD PTR [esi+0x28],ecx
   13b70:	mov    eax,DWORD PTR [eax+0x4]
   13b73:	mov    DWORD PTR [esi+0x2c],eax
   13b76:	mov    eax,esi
   13b78:	pop    esi
   13b79:	pop    ebp
   13b7a:	ret    0x18
   13b7d:	int3   
   13b7e:	int3   
   13b7f:	int3   
   13b80:	int3   
   13b81:	int3   
   13b82:	mov    edi,edi
   13b84:	push   ebp
   13b85:	mov    ebp,esp
   13b87:	push   esi
   13b88:	push   0xc
   13b8a:	mov    esi,ecx
   13b8c:	call   0x11cec
   13b91:	pop    ecx
   13b92:	test   eax,eax
   13b94:	je     0x13ba5
   13b96:	push   DWORD PTR [ebp+0xc]
   13b99:	mov    ecx,eax
   13b9b:	push   DWORD PTR [ebp+0x8]
   13b9e:	call   0x1352e
   13ba3:	jmp    0x13ba7
   13ba5:	xor    eax,eax
   13ba7:	mov    DWORD PTR [esi],eax
   13ba9:	mov    eax,esi
   13bab:	pop    esi
   13bac:	pop    ebp
   13bad:	ret    0x8
   13bb0:	int3   
   13bb1:	int3   
   13bb2:	int3   
   13bb3:	int3   
   13bb4:	int3   
   13bb5:	int3   
   13bb6:	mov    edi,edi
   13bb8:	push   ebp
   13bb9:	mov    ebp,esp
   13bbb:	push   ecx
   13bbc:	push   esi
   13bbd:	push   edi
   13bbe:	mov    edi,DWORD PTR [ebp+0xc]
   13bc1:	push   edi
   13bc2:	mov    esi,ecx
   13bc4:	call   0x12c6e
   13bc9:	mov    esi,DWORD PTR [esi+0x4]
   13bcc:	mov    DWORD PTR [ebp+0xc],eax
   13bcf:	cmp    eax,esi
   13bd1:	je     0x13bdf
   13bd3:	mov    ecx,DWORD PTR [edi]
   13bd5:	cmp    ecx,DWORD PTR [eax+0xc]
   13bd8:	jb     0x13bdf
   13bda:	lea    eax,[ebp+0xc]
   13bdd:	jmp    0x13be5
   13bdf:	mov    DWORD PTR [ebp-0x4],esi
   13be2:	lea    eax,[ebp-0x4]
   13be5:	mov    ecx,DWORD PTR [eax]
   13be7:	mov    eax,DWORD PTR [ebp+0x8]
   13bea:	pop    edi
   13beb:	mov    DWORD PTR [eax],ecx
   13bed:	pop    esi
   13bee:	leave  
   13bef:	ret    0x8
   13bf2:	int3   
   13bf3:	int3   
   13bf4:	int3   
   13bf5:	int3   
   13bf6:	int3   
   13bf7:	int3   
   13bf8:	mov    edi,edi
   13bfa:	push   ebp
   13bfb:	mov    ebp,esp
   13bfd:	push   ecx
   13bfe:	push   esi
   13bff:	push   DWORD PTR [ebp+0xc]
   13c02:	mov    esi,ecx
   13c04:	call   0x12d44
   13c09:	mov    DWORD PTR [ebp-0x4],eax
   13c0c:	cmp    eax,DWORD PTR [esi+0x4]
   13c0f:	je     0x13c26
   13c11:	add    eax,0x10
   13c14:	push   eax
   13c15:	push   DWORD PTR [ebp+0xc]
   13c18:	call   0x19a08
   13c1d:	test   al,al
   13c1f:	jne    0x13c26
   13c21:	lea    eax,[ebp-0x4]
   13c24:	jmp    0x13c2f
   13c26:	mov    eax,DWORD PTR [esi+0x4]
   13c29:	mov    DWORD PTR [ebp+0xc],eax
   13c2c:	lea    eax,[ebp+0xc]
   13c2f:	mov    ecx,DWORD PTR [eax]
   13c31:	mov    eax,DWORD PTR [ebp+0x8]
   13c34:	mov    DWORD PTR [eax],ecx
   13c36:	pop    esi
   13c37:	leave  
   13c38:	ret    0x8
   13c3b:	int3   
   13c3c:	int3   
   13c3d:	int3   
   13c3e:	int3   
   13c3f:	int3   
   13c40:	mov    edi,edi
   13c42:	push   ebp
   13c43:	mov    ebp,esp
   13c45:	push   esi
   13c46:	push   DWORD PTR [ebp+0x8]
   13c49:	mov    esi,ecx
   13c4b:	call   0x1361c
   13c50:	push   DWORD PTR [ebp+0xc]
   13c53:	lea    ecx,[esi+0x8]
   13c56:	call   0x137c2
   13c5b:	mov    eax,esi
   13c5d:	pop    esi
   13c5e:	pop    ebp
   13c5f:	ret    0x8
   13c62:	int3   
   13c63:	int3   
   13c64:	int3   
   13c65:	int3   
   13c66:	int3   
   13c67:	int3   
   13c68:	mov    edi,edi
   13c6a:	push   ebp
   13c6b:	mov    ebp,esp
   13c6d:	push   ecx
   13c6e:	push   esi
   13c6f:	push   DWORD PTR [ebp+0xc]
   13c72:	mov    esi,ecx
   13c74:	call   0x12d84
   13c79:	mov    DWORD PTR [ebp-0x4],eax
   13c7c:	cmp    eax,DWORD PTR [esi+0x4]
   13c7f:	je     0x13c96
   13c81:	add    eax,0xc
   13c84:	push   eax
   13c85:	push   DWORD PTR [ebp+0xc]
   13c88:	call   0x19a08
   13c8d:	test   al,al
   13c8f:	jne    0x13c96
   13c91:	lea    eax,[ebp-0x4]
   13c94:	jmp    0x13c9f
   13c96:	mov    eax,DWORD PTR [esi+0x4]
   13c99:	mov    DWORD PTR [ebp+0xc],eax
   13c9c:	lea    eax,[ebp+0xc]
   13c9f:	mov    ecx,DWORD PTR [eax]
   13ca1:	mov    eax,DWORD PTR [ebp+0x8]
   13ca4:	mov    DWORD PTR [eax],ecx
   13ca6:	pop    esi
   13ca7:	leave  
   13ca8:	ret    0x8
   13cab:	int3   
   13cac:	int3   
   13cad:	int3   
   13cae:	int3   
   13caf:	int3   
   13cb0:	mov    edi,edi
   13cb2:	push   ebp
   13cb3:	mov    ebp,esp
   13cb5:	push   ecx
   13cb6:	push   esi
   13cb7:	push   edi
   13cb8:	mov    edi,DWORD PTR [ebp+0xc]
   13cbb:	push   edi
   13cbc:	mov    esi,ecx
   13cbe:	call   0x12dc4
   13cc3:	mov    esi,DWORD PTR [esi+0x4]
   13cc6:	mov    DWORD PTR [ebp+0xc],eax
   13cc9:	cmp    eax,esi
   13ccb:	je     0x13cd9
   13ccd:	mov    ecx,DWORD PTR [edi]
   13ccf:	cmp    ecx,DWORD PTR [eax+0xc]
   13cd2:	jl     0x13cd9
   13cd4:	lea    eax,[ebp+0xc]
   13cd7:	jmp    0x13cdf
   13cd9:	mov    DWORD PTR [ebp-0x4],esi
   13cdc:	lea    eax,[ebp-0x4]
   13cdf:	mov    ecx,DWORD PTR [eax]
   13ce1:	mov    eax,DWORD PTR [ebp+0x8]
   13ce4:	pop    edi
   13ce5:	mov    DWORD PTR [eax],ecx
   13ce7:	pop    esi
   13ce8:	leave  
   13ce9:	ret    0x8
   13cec:	int3   
   13ced:	int3   
   13cee:	int3   
   13cef:	int3   
   13cf0:	int3   
   13cf1:	int3   
   13cf2:	mov    edi,edi
   13cf4:	push   ebp
   13cf5:	mov    ebp,esp
   13cf7:	push   ecx
   13cf8:	mov    eax,DWORD PTR [ecx]
   13cfa:	lea    ecx,[ebp-0x4]
   13cfd:	mov    DWORD PTR [ebp-0x4],eax
   13d00:	call   0x12e32
   13d05:	mov    eax,DWORD PTR [ebp-0x4]
   13d08:	add    eax,0xc
   13d0b:	leave  
   13d0c:	ret    
   13d0d:	int3   
   13d0e:	int3   
   13d0f:	int3   
   13d10:	int3   
   13d11:	int3   
   13d12:	mov    edi,edi
   13d14:	push   ebp
   13d15:	mov    ebp,esp
   13d17:	push   ecx
   13d18:	push   esi
   13d19:	push   DWORD PTR [ebp+0xc]
   13d1c:	mov    esi,ecx
   13d1e:	call   0x12f46
   13d23:	mov    DWORD PTR [ebp-0x4],eax
   13d26:	cmp    eax,DWORD PTR [esi+0x4]
   13d29:	je     0x13d40
   13d2b:	add    eax,0x10
   13d2e:	push   eax
   13d2f:	push   DWORD PTR [ebp+0xc]
   13d32:	call   0x19a08
   13d37:	test   al,al
   13d39:	jne    0x13d40
   13d3b:	lea    eax,[ebp-0x4]
   13d3e:	jmp    0x13d49
   13d40:	mov    eax,DWORD PTR [esi+0x4]
   13d43:	mov    DWORD PTR [ebp+0xc],eax
   13d46:	lea    eax,[ebp+0xc]
   13d49:	mov    ecx,DWORD PTR [eax]
   13d4b:	mov    eax,DWORD PTR [ebp+0x8]
   13d4e:	mov    DWORD PTR [eax],ecx
   13d50:	pop    esi
   13d51:	leave  
   13d52:	ret    0x8
   13d55:	int3   
   13d56:	int3   
   13d57:	int3   
   13d58:	int3   
   13d59:	int3   
   13d5a:	mov    edi,edi
   13d5c:	push   ebp
   13d5d:	mov    ebp,esp
   13d5f:	push   ecx
   13d60:	push   ecx
   13d61:	push   ebx
   13d62:	push   esi
   13d63:	mov    DWORD PTR [ebp-0x4],ecx
   13d66:	push   edi
   13d67:	mov    edi,DWORD PTR [ebp+0xc]
   13d6a:	lea    ecx,[ebp+0xc]
   13d6d:	call   0x10ef4
   13d72:	mov    esi,DWORD PTR [edi]
   13d74:	mov    eax,ds:0x786b0
   13d79:	mov    ebx,edi
   13d7b:	mov    DWORD PTR [ebp-0x8],esi
   13d7e:	cmp    esi,eax
   13d80:	jne    0x13d9e
   13d82:	mov    esi,DWORD PTR [edi+0x8]
   13d85:	mov    eax,DWORD PTR [ebx+0x4]
   13d88:	mov    ecx,DWORD PTR [ebp-0x4]
   13d8b:	mov    DWORD PTR [esi+0x4],eax
   13d8e:	mov    eax,DWORD PTR [ecx+0x4]
   13d91:	cmp    DWORD PTR [eax+0x4],edi
   13d94:	jne    0x13e13
   13d96:	mov    DWORD PTR [eax+0x4],esi
   13d99:	jmp    0x13e21
   13d9e:	mov    ecx,DWORD PTR [edi+0x8]
   13da1:	cmp    ecx,eax
   13da3:	je     0x13d85
   13da5:	push   ecx
   13da6:	call   0x10e0a
   13dab:	mov    ebx,eax
   13dad:	mov    esi,DWORD PTR [ebx+0x8]
   13db0:	cmp    ebx,edi
   13db2:	je     0x13d85
   13db4:	mov    eax,DWORD PTR [ebp-0x8]
   13db7:	mov    DWORD PTR [eax+0x4],ebx
   13dba:	mov    eax,DWORD PTR [edi]
   13dbc:	mov    DWORD PTR [ebx],eax
   13dbe:	cmp    ebx,DWORD PTR [edi+0x8]
   13dc1:	jne    0x13dc8
   13dc3:	mov    DWORD PTR [esi+0x4],ebx
   13dc6:	jmp    0x13ddf
   13dc8:	mov    eax,DWORD PTR [ebx+0x4]
   13dcb:	mov    DWORD PTR [esi+0x4],eax
   13dce:	mov    eax,DWORD PTR [ebx+0x4]
   13dd1:	mov    DWORD PTR [eax],esi
   13dd3:	mov    eax,DWORD PTR [edi+0x8]
   13dd6:	mov    DWORD PTR [ebx+0x8],eax
   13dd9:	mov    eax,DWORD PTR [edi+0x8]
   13ddc:	mov    DWORD PTR [eax+0x4],ebx
   13ddf:	mov    eax,DWORD PTR [ebp-0x4]
   13de2:	mov    eax,DWORD PTR [eax+0x4]
   13de5:	cmp    DWORD PTR [eax+0x4],edi
   13de8:	jne    0x13def
   13dea:	mov    DWORD PTR [eax+0x4],ebx
   13ded:	jmp    0x13dfd
   13def:	mov    eax,DWORD PTR [edi+0x4]
   13df2:	cmp    DWORD PTR [eax],edi
   13df4:	jne    0x13dfa
   13df6:	mov    DWORD PTR [eax],ebx
   13df8:	jmp    0x13dfd
   13dfa:	mov    DWORD PTR [eax+0x8],ebx
   13dfd:	mov    eax,DWORD PTR [edi+0x4]
   13e00:	mov    DWORD PTR [ebx+0x4],eax
   13e03:	mov    eax,DWORD PTR [ebx+0x14]
   13e06:	mov    ecx,DWORD PTR [edi+0x14]
   13e09:	mov    DWORD PTR [ebx+0x14],ecx
   13e0c:	mov    DWORD PTR [edi+0x14],eax
   13e0f:	mov    ebx,edi
   13e11:	jmp    0x13e74
   13e13:	mov    eax,DWORD PTR [edi+0x4]
   13e16:	cmp    DWORD PTR [eax],edi
   13e18:	jne    0x13e1e
   13e1a:	mov    DWORD PTR [eax],esi
   13e1c:	jmp    0x13e21
   13e1e:	mov    DWORD PTR [eax+0x8],esi
   13e21:	mov    eax,DWORD PTR [ecx+0x4]
   13e24:	mov    DWORD PTR [ebp-0x8],eax
   13e27:	cmp    DWORD PTR [eax],edi
   13e29:	jne    0x13e4b
   13e2b:	mov    edx,DWORD PTR [edi+0x8]
   13e2e:	cmp    edx,DWORD PTR ds:0x786b0
   13e34:	jne    0x13e3d
   13e36:	mov    edx,DWORD PTR [edi+0x4]
   13e39:	mov    DWORD PTR [eax],edx
   13e3b:	jmp    0x13e4b
   13e3d:	push   esi
   13e3e:	call   0x10e0a
   13e43:	mov    ecx,DWORD PTR [ebp-0x8]
   13e46:	mov    DWORD PTR [ecx],eax
   13e48:	mov    ecx,DWORD PTR [ebp-0x4]
   13e4b:	mov    eax,DWORD PTR [ecx+0x4]
   13e4e:	mov    DWORD PTR [ebp-0x8],eax
   13e51:	cmp    DWORD PTR [eax+0x8],edi
   13e54:	jne    0x13e74
   13e56:	mov    ecx,DWORD PTR [edi]
   13e58:	cmp    ecx,DWORD PTR ds:0x786b0
   13e5e:	jne    0x13e68
   13e60:	mov    ecx,DWORD PTR [edi+0x4]
   13e63:	mov    DWORD PTR [eax+0x8],ecx
   13e66:	jmp    0x13e74
   13e68:	push   esi
   13e69:	call   0x10de8
   13e6e:	mov    ecx,DWORD PTR [ebp-0x8]
   13e71:	mov    DWORD PTR [ecx+0x8],eax
   13e74:	xor    edi,edi
   13e76:	inc    edi
   13e77:	cmp    DWORD PTR [ebx+0x14],edi
   13e7a:	jne    0x13f91
   13e80:	jmp    0x13f3f
   13e85:	cmp    DWORD PTR [esi+0x14],edi
   13e88:	jne    0x13f8e
   13e8e:	mov    eax,DWORD PTR [esi+0x4]
   13e91:	cmp    esi,DWORD PTR [eax]
   13e93:	jne    0x13f0a
   13e95:	mov    eax,DWORD PTR [eax+0x8]
   13e98:	cmp    DWORD PTR [eax+0x14],0x0
   13e9c:	jne    0x13eb6
   13e9e:	mov    DWORD PTR [eax+0x14],edi
   13ea1:	mov    eax,DWORD PTR [esi+0x4]
   13ea4:	and    DWORD PTR [eax+0x14],0x0
   13ea8:	push   DWORD PTR [esi+0x4]
   13eab:	call   0x12ca6
   13eb0:	mov    eax,DWORD PTR [esi+0x4]
   13eb3:	mov    eax,DWORD PTR [eax+0x8]
   13eb6:	mov    ecx,DWORD PTR [eax]
   13eb8:	cmp    DWORD PTR [ecx+0x14],edi
   13ebb:	jne    0x13ec5
   13ebd:	mov    ecx,DWORD PTR [eax+0x8]
   13ec0:	cmp    DWORD PTR [ecx+0x14],edi
   13ec3:	je     0x13f38
   13ec5:	mov    ecx,DWORD PTR [eax+0x8]
   13ec8:	cmp    DWORD PTR [ecx+0x14],edi
   13ecb:	jne    0x13ee5
   13ecd:	mov    ecx,DWORD PTR [eax]
   13ecf:	mov    DWORD PTR [ecx+0x14],edi
   13ed2:	mov    ecx,DWORD PTR [ebp-0x4]
   13ed5:	and    DWORD PTR [eax+0x14],0x0
   13ed9:	push   eax
   13eda:	call   0x12cf4
   13edf:	mov    eax,DWORD PTR [esi+0x4]
   13ee2:	mov    eax,DWORD PTR [eax+0x8]
   13ee5:	mov    ecx,DWORD PTR [esi+0x4]
   13ee8:	mov    ecx,DWORD PTR [ecx+0x14]
   13eeb:	mov    DWORD PTR [eax+0x14],ecx
   13eee:	mov    ecx,DWORD PTR [esi+0x4]
   13ef1:	mov    DWORD PTR [ecx+0x14],edi
   13ef4:	mov    eax,DWORD PTR [eax+0x8]
   13ef7:	mov    ecx,DWORD PTR [ebp-0x4]
   13efa:	mov    DWORD PTR [eax+0x14],edi
   13efd:	push   DWORD PTR [esi+0x4]
   13f00:	call   0x12ca6
   13f05:	jmp    0x13f8e
   13f0a:	mov    eax,DWORD PTR [eax]
   13f0c:	cmp    DWORD PTR [eax+0x14],0x0
   13f10:	jne    0x13f29
   13f12:	mov    DWORD PTR [eax+0x14],edi
   13f15:	mov    eax,DWORD PTR [esi+0x4]
   13f18:	and    DWORD PTR [eax+0x14],0x0
   13f1c:	push   DWORD PTR [esi+0x4]
   13f1f:	call   0x12cf4
   13f24:	mov    eax,DWORD PTR [esi+0x4]
   13f27:	mov    eax,DWORD PTR [eax]
   13f29:	mov    ecx,DWORD PTR [eax+0x8]
   13f2c:	cmp    DWORD PTR [ecx+0x14],edi
   13f2f:	jne    0x13f50
   13f31:	mov    ecx,DWORD PTR [eax]
   13f33:	cmp    DWORD PTR [ecx+0x14],edi
   13f36:	jne    0x13f50
   13f38:	and    DWORD PTR [eax+0x14],0x0
   13f3c:	mov    esi,DWORD PTR [esi+0x4]
   13f3f:	mov    ecx,DWORD PTR [ebp-0x4]
   13f42:	mov    eax,DWORD PTR [ecx+0x4]
   13f45:	cmp    esi,DWORD PTR [eax+0x4]
   13f48:	jne    0x13e85
   13f4e:	jmp    0x13f8e
   13f50:	mov    ecx,DWORD PTR [eax]
   13f52:	cmp    DWORD PTR [ecx+0x14],edi
   13f55:	jne    0x13f6f
   13f57:	mov    ecx,DWORD PTR [eax+0x8]
   13f5a:	mov    DWORD PTR [ecx+0x14],edi
   13f5d:	mov    ecx,DWORD PTR [ebp-0x4]
   13f60:	and    DWORD PTR [eax+0x14],0x0
   13f64:	push   eax
   13f65:	call   0x12ca6
   13f6a:	mov    eax,DWORD PTR [esi+0x4]
   13f6d:	mov    eax,DWORD PTR [eax]
   13f6f:	mov    ecx,DWORD PTR [esi+0x4]
   13f72:	mov    ecx,DWORD PTR [ecx+0x14]
   13f75:	mov    DWORD PTR [eax+0x14],ecx
   13f78:	mov    ecx,DWORD PTR [esi+0x4]
   13f7b:	mov    DWORD PTR [ecx+0x14],edi
   13f7e:	mov    eax,DWORD PTR [eax]
   13f80:	mov    ecx,DWORD PTR [ebp-0x4]
   13f83:	mov    DWORD PTR [eax+0x14],edi
   13f86:	push   DWORD PTR [esi+0x4]
   13f89:	call   0x12cf4
   13f8e:	mov    DWORD PTR [esi+0x14],edi
   13f91:	push   ebx
   13f92:	call   0x11d22
   13f97:	mov    eax,DWORD PTR [ebp-0x4]
   13f9a:	dec    DWORD PTR [eax+0xc]
   13f9d:	mov    eax,DWORD PTR [ebp+0x8]
   13fa0:	pop    ecx
   13fa1:	mov    ecx,DWORD PTR [ebp+0xc]
   13fa4:	pop    edi
   13fa5:	pop    esi
   13fa6:	mov    DWORD PTR [eax],ecx
   13fa8:	pop    ebx
   13fa9:	leave  
   13faa:	ret    0x8
   13fad:	int3   
   13fae:	int3   
   13faf:	int3   
   13fb0:	int3   
   13fb1:	int3   
   13fb2:	mov    edi,edi
   13fb4:	push   ebp
   13fb5:	mov    ebp,esp
   13fb7:	push   esi
   13fb8:	push   edi
   13fb9:	push   DWORD PTR [ebp+0xc]
   13fbc:	mov    edi,ecx
   13fbe:	call   0x13024
   13fc3:	push   DWORD PTR [ebp+0xc]
   13fc6:	mov    ecx,edi
   13fc8:	mov    esi,eax
   13fca:	call   0x12c6e
   13fcf:	mov    ecx,DWORD PTR [ebp+0x8]
   13fd2:	pop    edi
   13fd3:	mov    DWORD PTR [ecx],eax
   13fd5:	mov    DWORD PTR [ecx+0x4],esi
   13fd8:	mov    eax,ecx
   13fda:	pop    esi
   13fdb:	pop    ebp
   13fdc:	ret    0x8
   13fdf:	int3   
   13fe0:	int3   
   13fe1:	int3   
   13fe2:	int3   
   13fe3:	int3   
   13fe4:	mov    edi,edi
   13fe6:	push   ebp
   13fe7:	mov    ebp,esp
   13fe9:	push   esi
   13fea:	push   edi
   13feb:	push   DWORD PTR [ebp+0xc]
   13fee:	mov    edi,ecx
   13ff0:	call   0x1305c
   13ff5:	push   DWORD PTR [ebp+0xc]
   13ff8:	mov    ecx,edi
   13ffa:	mov    esi,eax
   13ffc:	call   0x12d44
   14001:	mov    ecx,DWORD PTR [ebp+0x8]
   14004:	pop    edi
   14005:	mov    DWORD PTR [ecx],eax
   14007:	mov    DWORD PTR [ecx+0x4],esi
   1400a:	mov    eax,ecx
   1400c:	pop    esi
   1400d:	pop    ebp
   1400e:	ret    0x8
   14011:	int3   
   14012:	int3   
   14013:	int3   
   14014:	int3   
   14015:	int3   
   14016:	mov    edi,edi
   14018:	push   ebp
   14019:	mov    ebp,esp
   1401b:	push   esi
   1401c:	push   edi
   1401d:	push   DWORD PTR [ebp+0xc]
   14020:	mov    edi,ecx
   14022:	call   0x1313a
   14027:	push   DWORD PTR [ebp+0xc]
   1402a:	mov    ecx,edi
   1402c:	mov    esi,eax
   1402e:	call   0x12d84
   14033:	mov    ecx,DWORD PTR [ebp+0x8]
   14036:	pop    edi
   14037:	mov    DWORD PTR [ecx],eax
   14039:	mov    DWORD PTR [ecx+0x4],esi
   1403c:	mov    eax,ecx
   1403e:	pop    esi
   1403f:	pop    ebp
   14040:	ret    0x8
   14043:	int3   
   14044:	int3   
   14045:	int3   
   14046:	int3   
   14047:	int3   
   14048:	mov    edi,edi
   1404a:	push   ebp
   1404b:	mov    ebp,esp
   1404d:	push   esi
   1404e:	push   edi
   1404f:	push   DWORD PTR [ebp+0xc]
   14052:	mov    edi,ecx
   14054:	call   0x13218
   14059:	push   DWORD PTR [ebp+0xc]
   1405c:	mov    ecx,edi
   1405e:	mov    esi,eax
   14060:	call   0x12dc4
   14065:	mov    ecx,DWORD PTR [ebp+0x8]
   14068:	pop    edi
   14069:	mov    DWORD PTR [ecx],eax
   1406b:	mov    DWORD PTR [ecx+0x4],esi
   1406e:	mov    eax,ecx
   14070:	pop    esi
   14071:	pop    ebp
   14072:	ret    0x8
   14075:	int3   
   14076:	int3   
   14077:	int3   
   14078:	int3   
   14079:	int3   
   1407a:	mov    edi,edi
   1407c:	push   ebp
   1407d:	mov    ebp,esp
   1407f:	push   ecx
   14080:	push   esi
   14081:	push   DWORD PTR [ebp+0xc]
   14084:	mov    esi,ecx
   14086:	call   0x13250
   1408b:	mov    DWORD PTR [ebp-0x4],eax
   1408e:	cmp    eax,DWORD PTR [esi+0x4]
   14091:	je     0x140a8
   14093:	add    eax,0xc
   14096:	push   eax
   14097:	push   DWORD PTR [ebp+0xc]
   1409a:	call   0x19a38
   1409f:	test   al,al
   140a1:	jne    0x140a8
   140a3:	lea    eax,[ebp-0x4]
   140a6:	jmp    0x140b1
   140a8:	mov    eax,DWORD PTR [esi+0x4]
   140ab:	mov    DWORD PTR [ebp+0xc],eax
   140ae:	lea    eax,[ebp+0xc]
   140b1:	mov    ecx,DWORD PTR [eax]
   140b3:	mov    eax,DWORD PTR [ebp+0x8]
   140b6:	mov    DWORD PTR [eax],ecx
   140b8:	pop    esi
   140b9:	leave  
   140ba:	ret    0x8
   140bd:	int3   
   140be:	int3   
   140bf:	int3   
   140c0:	int3   
   140c1:	int3   
   140c2:	mov    edi,edi
   140c4:	push   ebp
   140c5:	mov    ebp,esp
   140c7:	push   ecx
   140c8:	push   ecx
   140c9:	push   ebx
   140ca:	push   esi
   140cb:	mov    DWORD PTR [ebp-0x4],ecx
   140ce:	push   edi
   140cf:	mov    edi,DWORD PTR [ebp+0xc]
   140d2:	lea    ecx,[ebp+0xc]
   140d5:	call   0x12e72
   140da:	mov    esi,DWORD PTR [edi]
   140dc:	mov    eax,ds:0x786b4
   140e1:	mov    ebx,edi
   140e3:	mov    DWORD PTR [ebp-0x8],esi
   140e6:	cmp    esi,eax
   140e8:	jne    0x14106
   140ea:	mov    esi,DWORD PTR [edi+0x8]
   140ed:	mov    eax,DWORD PTR [ebx+0x4]
   140f0:	mov    ecx,DWORD PTR [ebp-0x4]
   140f3:	mov    DWORD PTR [esi+0x4],eax
   140f6:	mov    eax,DWORD PTR [ecx+0x4]
   140f9:	cmp    DWORD PTR [eax+0x4],edi
   140fc:	jne    0x1417b
   140fe:	mov    DWORD PTR [eax+0x4],esi
   14101:	jmp    0x14189
   14106:	mov    ecx,DWORD PTR [edi+0x8]
   14109:	cmp    ecx,eax
   1410b:	je     0x140ed
   1410d:	push   ecx
   1410e:	call   0x10e4e
   14113:	mov    ebx,eax
   14115:	mov    esi,DWORD PTR [ebx+0x8]
   14118:	cmp    ebx,edi
   1411a:	je     0x140ed
   1411c:	mov    eax,DWORD PTR [ebp-0x8]
   1411f:	mov    DWORD PTR [eax+0x4],ebx
   14122:	mov    eax,DWORD PTR [edi]
   14124:	mov    DWORD PTR [ebx],eax
   14126:	cmp    ebx,DWORD PTR [edi+0x8]
   14129:	jne    0x14130
   1412b:	mov    DWORD PTR [esi+0x4],ebx
   1412e:	jmp    0x14147
   14130:	mov    eax,DWORD PTR [ebx+0x4]
   14133:	mov    DWORD PTR [esi+0x4],eax
   14136:	mov    eax,DWORD PTR [ebx+0x4]
   14139:	mov    DWORD PTR [eax],esi
   1413b:	mov    eax,DWORD PTR [edi+0x8]
   1413e:	mov    DWORD PTR [ebx+0x8],eax
   14141:	mov    eax,DWORD PTR [edi+0x8]
   14144:	mov    DWORD PTR [eax+0x4],ebx
   14147:	mov    eax,DWORD PTR [ebp-0x4]
   1414a:	mov    eax,DWORD PTR [eax+0x4]
   1414d:	cmp    DWORD PTR [eax+0x4],edi
   14150:	jne    0x14157
   14152:	mov    DWORD PTR [eax+0x4],ebx
   14155:	jmp    0x14165
   14157:	mov    eax,DWORD PTR [edi+0x4]
   1415a:	cmp    DWORD PTR [eax],edi
   1415c:	jne    0x14162
   1415e:	mov    DWORD PTR [eax],ebx
   14160:	jmp    0x14165
   14162:	mov    DWORD PTR [eax+0x8],ebx
   14165:	mov    eax,DWORD PTR [edi+0x4]
   14168:	mov    DWORD PTR [ebx+0x4],eax
   1416b:	mov    eax,DWORD PTR [ebx+0x10]
   1416e:	mov    ecx,DWORD PTR [edi+0x10]
   14171:	mov    DWORD PTR [ebx+0x10],ecx
   14174:	mov    DWORD PTR [edi+0x10],eax
   14177:	mov    ebx,edi
   14179:	jmp    0x141dc
   1417b:	mov    eax,DWORD PTR [edi+0x4]
   1417e:	cmp    DWORD PTR [eax],edi
   14180:	jne    0x14186
   14182:	mov    DWORD PTR [eax],esi
   14184:	jmp    0x14189
   14186:	mov    DWORD PTR [eax+0x8],esi
   14189:	mov    eax,DWORD PTR [ecx+0x4]
   1418c:	mov    DWORD PTR [ebp-0x8],eax
   1418f:	cmp    DWORD PTR [eax],edi
   14191:	jne    0x141b3
   14193:	mov    edx,DWORD PTR [edi+0x8]
   14196:	cmp    edx,DWORD PTR ds:0x786b4
   1419c:	jne    0x141a5
   1419e:	mov    edx,DWORD PTR [edi+0x4]
   141a1:	mov    DWORD PTR [eax],edx
   141a3:	jmp    0x141b3
   141a5:	push   esi
   141a6:	call   0x10e4e
   141ab:	mov    ecx,DWORD PTR [ebp-0x8]
   141ae:	mov    DWORD PTR [ecx],eax
   141b0:	mov    ecx,DWORD PTR [ebp-0x4]
   141b3:	mov    eax,DWORD PTR [ecx+0x4]
   141b6:	mov    DWORD PTR [ebp-0x8],eax
   141b9:	cmp    DWORD PTR [eax+0x8],edi
   141bc:	jne    0x141dc
   141be:	mov    ecx,DWORD PTR [edi]
   141c0:	cmp    ecx,DWORD PTR ds:0x786b4
   141c6:	jne    0x141d0
   141c8:	mov    ecx,DWORD PTR [edi+0x4]
   141cb:	mov    DWORD PTR [eax+0x8],ecx
   141ce:	jmp    0x141dc
   141d0:	push   esi
   141d1:	call   0x10e2c
   141d6:	mov    ecx,DWORD PTR [ebp-0x8]
   141d9:	mov    DWORD PTR [ecx+0x8],eax
   141dc:	xor    edi,edi
   141de:	inc    edi
   141df:	cmp    DWORD PTR [ebx+0x10],edi
   141e2:	jne    0x142f9
   141e8:	jmp    0x142a7
   141ed:	cmp    DWORD PTR [esi+0x10],edi
   141f0:	jne    0x142f6
   141f6:	mov    eax,DWORD PTR [esi+0x4]
   141f9:	cmp    esi,DWORD PTR [eax]
   141fb:	jne    0x14272
   141fd:	mov    eax,DWORD PTR [eax+0x8]
   14200:	cmp    DWORD PTR [eax+0x10],0x0
   14204:	jne    0x1421e
   14206:	mov    DWORD PTR [eax+0x10],edi
   14209:	mov    eax,DWORD PTR [esi+0x4]
   1420c:	and    DWORD PTR [eax+0x10],0x0
   14210:	push   DWORD PTR [esi+0x4]
   14213:	call   0x12ea8
   14218:	mov    eax,DWORD PTR [esi+0x4]
   1421b:	mov    eax,DWORD PTR [eax+0x8]
   1421e:	mov    ecx,DWORD PTR [eax]
   14220:	cmp    DWORD PTR [ecx+0x10],edi
   14223:	jne    0x1422d
   14225:	mov    ecx,DWORD PTR [eax+0x8]
   14228:	cmp    DWORD PTR [ecx+0x10],edi
   1422b:	je     0x142a0
   1422d:	mov    ecx,DWORD PTR [eax+0x8]
   14230:	cmp    DWORD PTR [ecx+0x10],edi
   14233:	jne    0x1424d
   14235:	mov    ecx,DWORD PTR [eax]
   14237:	mov    DWORD PTR [ecx+0x10],edi
   1423a:	mov    ecx,DWORD PTR [ebp-0x4]
   1423d:	and    DWORD PTR [eax+0x10],0x0
   14241:	push   eax
   14242:	call   0x12ef6
   14247:	mov    eax,DWORD PTR [esi+0x4]
   1424a:	mov    eax,DWORD PTR [eax+0x8]
   1424d:	mov    ecx,DWORD PTR [esi+0x4]
   14250:	mov    ecx,DWORD PTR [ecx+0x10]
   14253:	mov    DWORD PTR [eax+0x10],ecx
   14256:	mov    ecx,DWORD PTR [esi+0x4]
   14259:	mov    DWORD PTR [ecx+0x10],edi
   1425c:	mov    eax,DWORD PTR [eax+0x8]
   1425f:	mov    ecx,DWORD PTR [ebp-0x4]
   14262:	mov    DWORD PTR [eax+0x10],edi
   14265:	push   DWORD PTR [esi+0x4]
   14268:	call   0x12ea8
   1426d:	jmp    0x142f6
   14272:	mov    eax,DWORD PTR [eax]
   14274:	cmp    DWORD PTR [eax+0x10],0x0
   14278:	jne    0x14291
   1427a:	mov    DWORD PTR [eax+0x10],edi
   1427d:	mov    eax,DWORD PTR [esi+0x4]
   14280:	and    DWORD PTR [eax+0x10],0x0
   14284:	push   DWORD PTR [esi+0x4]
   14287:	call   0x12ef6
   1428c:	mov    eax,DWORD PTR [esi+0x4]
   1428f:	mov    eax,DWORD PTR [eax]
   14291:	mov    ecx,DWORD PTR [eax+0x8]
   14294:	cmp    DWORD PTR [ecx+0x10],edi
   14297:	jne    0x142b8
   14299:	mov    ecx,DWORD PTR [eax]
   1429b:	cmp    DWORD PTR [ecx+0x10],edi
   1429e:	jne    0x142b8
   142a0:	and    DWORD PTR [eax+0x10],0x0
   142a4:	mov    esi,DWORD PTR [esi+0x4]
   142a7:	mov    ecx,DWORD PTR [ebp-0x4]
   142aa:	mov    eax,DWORD PTR [ecx+0x4]
   142ad:	cmp    esi,DWORD PTR [eax+0x4]
   142b0:	jne    0x141ed
   142b6:	jmp    0x142f6
   142b8:	mov    ecx,DWORD PTR [eax]
   142ba:	cmp    DWORD PTR [ecx+0x10],edi
   142bd:	jne    0x142d7
   142bf:	mov    ecx,DWORD PTR [eax+0x8]
   142c2:	mov    DWORD PTR [ecx+0x10],edi
   142c5:	mov    ecx,DWORD PTR [ebp-0x4]
   142c8:	and    DWORD PTR [eax+0x10],0x0
   142cc:	push   eax
   142cd:	call   0x12ea8
   142d2:	mov    eax,DWORD PTR [esi+0x4]
   142d5:	mov    eax,DWORD PTR [eax]
   142d7:	mov    ecx,DWORD PTR [esi+0x4]
   142da:	mov    ecx,DWORD PTR [ecx+0x10]
   142dd:	mov    DWORD PTR [eax+0x10],ecx
   142e0:	mov    ecx,DWORD PTR [esi+0x4]
   142e3:	mov    DWORD PTR [ecx+0x10],edi
   142e6:	mov    eax,DWORD PTR [eax]
   142e8:	mov    ecx,DWORD PTR [ebp-0x4]
   142eb:	mov    DWORD PTR [eax+0x10],edi
   142ee:	push   DWORD PTR [esi+0x4]
   142f1:	call   0x12ef6
   142f6:	mov    DWORD PTR [esi+0x10],edi
   142f9:	push   ebx
   142fa:	call   0x11d22
   142ff:	mov    eax,DWORD PTR [ebp-0x4]
   14302:	dec    DWORD PTR [eax+0xc]
   14305:	mov    eax,DWORD PTR [ebp+0x8]
   14308:	pop    ecx
   14309:	mov    ecx,DWORD PTR [ebp+0xc]
   1430c:	pop    edi
   1430d:	pop    esi
   1430e:	mov    DWORD PTR [eax],ecx
   14310:	pop    ebx
   14311:	leave  
   14312:	ret    0x8
   14315:	int3   
   14316:	int3   
   14317:	int3   
   14318:	int3   
   14319:	int3   
   1431a:	mov    edi,edi
   1431c:	push   ebp
   1431d:	mov    ebp,esp
   1431f:	push   esi
   14320:	push   edi
   14321:	push   DWORD PTR [ebp+0xc]
   14324:	mov    edi,ecx
   14326:	call   0x133a6
   1432b:	push   DWORD PTR [ebp+0xc]
   1432e:	mov    ecx,edi
   14330:	mov    esi,eax
   14332:	call   0x1336e
   14337:	mov    ecx,DWORD PTR [ebp+0x8]
   1433a:	pop    edi
   1433b:	mov    DWORD PTR [ecx],eax
   1433d:	mov    DWORD PTR [ecx+0x4],esi
   14340:	mov    eax,ecx
   14342:	pop    esi
   14343:	pop    ebp
   14344:	ret    0x8
   14347:	int3   
   14348:	int3   
   14349:	int3   
   1434a:	int3   
   1434b:	int3   
   1434c:	mov    edi,edi
   1434e:	push   ebp
   1434f:	mov    ebp,esp
   14351:	push   0x0
   14353:	push   0x60
   14355:	call   0x133de
   1435a:	mov    ecx,DWORD PTR [ebp+0x8]
   1435d:	mov    DWORD PTR [eax+0x4],ecx
   14360:	mov    ecx,DWORD PTR [ebp+0xc]
   14363:	mov    DWORD PTR [eax+0x58],ecx
   14366:	pop    ebp
   14367:	ret    0x8
   1436a:	int3   
   1436b:	int3   
   1436c:	int3   
   1436d:	int3   
   1436e:	int3   
   1436f:	int3   
   14370:	mov    edi,edi
   14372:	push   ebp
   14373:	mov    ebp,esp
   14375:	push   0x0
   14377:	push   0x20
   14379:	call   0x133de
   1437e:	mov    ecx,DWORD PTR [ebp+0x8]
   14381:	mov    DWORD PTR [eax+0x4],ecx
   14384:	mov    ecx,DWORD PTR [ebp+0xc]
   14387:	mov    DWORD PTR [eax+0x1c],ecx
   1438a:	pop    ebp
   1438b:	ret    0x8
   1438e:	int3   
   1438f:	int3   
   14390:	int3   
   14391:	int3   
   14392:	int3   
   14393:	int3   
   14394:	mov    edi,edi
   14396:	push   ebp
   14397:	mov    ebp,esp
   14399:	push   0x0
   1439b:	push   0x14
   1439d:	call   0x133de
   143a2:	mov    ecx,DWORD PTR [ebp+0x8]
   143a5:	mov    DWORD PTR [eax+0x4],ecx
   143a8:	mov    ecx,DWORD PTR [ebp+0xc]
   143ab:	mov    DWORD PTR [eax+0x10],ecx
   143ae:	pop    ebp
   143af:	ret    0x8
   143b2:	int3   
   143b3:	int3   
   143b4:	int3   
   143b5:	int3   
   143b6:	int3   
   143b7:	int3   
   143b8:	mov    edi,edi
   143ba:	push   ebp
   143bb:	mov    ebp,esp
   143bd:	push   0x0
   143bf:	push   0x68
   143c1:	call   0x133de
   143c6:	mov    ecx,DWORD PTR [ebp+0x8]
   143c9:	mov    DWORD PTR [eax+0x4],ecx
   143cc:	mov    ecx,DWORD PTR [ebp+0xc]
   143cf:	mov    DWORD PTR [eax+0x60],ecx
   143d2:	pop    ebp
   143d3:	ret    0x8
   143d6:	int3   
   143d7:	int3   
   143d8:	int3   
   143d9:	int3   
   143da:	int3   
   143db:	int3   
   143dc:	mov    edi,edi
   143de:	push   ebp
   143df:	mov    ebp,esp
   143e1:	push   esi
   143e2:	push   edi
   143e3:	mov    edi,DWORD PTR [ebp+0x8]
   143e6:	push   edi
   143e7:	mov    esi,ecx
   143e9:	call   0x1361c
   143ee:	add    edi,0x8
   143f1:	push   edi
   143f2:	lea    ecx,[esi+0x8]
   143f5:	call   0x139d0
   143fa:	pop    edi
   143fb:	mov    eax,esi
   143fd:	pop    esi
   143fe:	pop    ebp
   143ff:	ret    0x4
   14402:	int3   
   14403:	int3   
   14404:	int3   
   14405:	int3   
   14406:	int3   
   14407:	int3   
   14408:	mov    edi,edi
   1440a:	push   ebp
   1440b:	mov    ebp,esp
   1440d:	mov    ecx,DWORD PTR [ebp+0x8]
   14410:	test   ecx,ecx
   14412:	je     0x1441c
   14414:	push   DWORD PTR [ebp+0xc]
   14417:	call   0x143dc
   1441c:	pop    ebp
   1441d:	ret    0x8
   14420:	int3   
   14421:	int3   
   14422:	int3   
   14423:	int3   
   14424:	int3   
   14425:	int3   
   14426:	mov    edi,edi
   14428:	push   ebp
   14429:	mov    ebp,esp
   1442b:	mov    ecx,DWORD PTR [ebp+0x8]
   1442e:	push   0x0
   14430:	call   0x139f6
   14435:	pop    ebp
   14436:	ret    0x4
   14439:	int3   
   1443a:	int3   
   1443b:	int3   
   1443c:	int3   
   1443d:	int3   
   1443e:	mov    edi,edi
   14440:	push   ebp
   14441:	mov    ebp,esp
   14443:	mov    ecx,DWORD PTR [ebp+0x8]
   14446:	test   ecx,ecx
   14448:	je     0x14452
   1444a:	push   DWORD PTR [ebp+0xc]
   1444d:	call   0x13a1c
   14452:	pop    ebp
   14453:	ret    0x8
   14456:	int3   
   14457:	int3   
   14458:	int3   
   14459:	int3   
   1445a:	int3   
   1445b:	int3   
   1445c:	mov    edi,edi
   1445e:	push   ebp
   1445f:	mov    ebp,esp
   14461:	mov    ecx,DWORD PTR [ebp+0x8]
   14464:	test   ecx,ecx
   14466:	je     0x14470
   14468:	push   DWORD PTR [ebp+0xc]
   1446b:	call   0x13904
   14470:	pop    ebp
   14471:	ret    0x8
   14474:	int3   
   14475:	int3   
   14476:	int3   
   14477:	int3   
   14478:	int3   
   14479:	int3   
   1447a:	mov    edi,edi
   1447c:	push   ebp
   1447d:	mov    ebp,esp
   1447f:	mov    ecx,DWORD PTR [ebp+0x8]
   14482:	test   ecx,ecx
   14484:	je     0x1448e
   14486:	push   DWORD PTR [ebp+0xc]
   14489:	call   0x13a48
   1448e:	pop    ebp
   1448f:	ret    0x8
   14492:	int3   
   14493:	int3   
   14494:	int3   
   14495:	int3   
   14496:	int3   
   14497:	int3   
   14498:	mov    edi,edi
   1449a:	push   ebp
   1449b:	mov    ebp,esp
   1449d:	mov    ecx,DWORD PTR [ebp+0x8]
   144a0:	push   0x0
   144a2:	call   0x13a70
   144a7:	pop    ebp
   144a8:	ret    0x4
   144ab:	int3   
   144ac:	int3   
   144ad:	int3   
   144ae:	int3   
   144af:	int3   
   144b0:	mov    edi,edi
   144b2:	push   ebp
   144b3:	mov    ebp,esp
   144b5:	mov    ecx,DWORD PTR [ebp+0x8]
   144b8:	test   ecx,ecx
   144ba:	je     0x144c4
   144bc:	push   DWORD PTR [ebp+0xc]
   144bf:	call   0x138d8
   144c4:	pop    ebp
   144c5:	ret    0x8
   144c8:	int3   
   144c9:	int3   
   144ca:	int3   
   144cb:	int3   
   144cc:	int3   
   144cd:	int3   
   144ce:	mov    edi,edi
   144d0:	push   ebp
   144d1:	mov    ebp,esp
   144d3:	push   ecx
   144d4:	mov    eax,ds:0x786b4
   144d9:	push   ebx
   144da:	mov    ebx,DWORD PTR [ebp+0xc]
   144dd:	push   esi
   144de:	mov    esi,DWORD PTR [ebp+0x8]
   144e1:	mov    DWORD PTR [ebp-0x4],ecx
   144e4:	mov    DWORD PTR [ebp+0x8],esi
   144e7:	cmp    esi,eax
   144e9:	je     0x1452e
   144eb:	push   edi
   144ec:	push   DWORD PTR [esi+0x10]
   144ef:	mov    ecx,DWORD PTR [ebp-0x4]
   144f2:	push   ebx
   144f3:	call   0x14394
   144f8:	mov    edi,eax
   144fa:	cmp    DWORD PTR [ebp+0x8],esi
   144fd:	jne    0x14502
   144ff:	mov    DWORD PTR [ebp+0x8],edi
   14502:	mov    ecx,DWORD PTR [ebp-0x4]
   14505:	push   edi
   14506:	push   DWORD PTR [esi+0x8]
   14509:	call   0x144ce
   1450e:	mov    DWORD PTR [edi+0x8],eax
   14511:	lea    eax,[esi+0xc]
   14514:	push   eax
   14515:	lea    eax,[edi+0xc]
   14518:	push   eax
   14519:	call   0x1a5b4
   1451e:	mov    DWORD PTR [ebx],edi
   14520:	mov    esi,DWORD PTR [esi]
   14522:	mov    eax,ds:0x786b4
   14527:	mov    ebx,edi
   14529:	cmp    esi,eax
   1452b:	jne    0x144ec
   1452d:	pop    edi
   1452e:	mov    DWORD PTR [ebx],eax
   14530:	mov    eax,DWORD PTR [ebp+0x8]
   14533:	pop    esi
   14534:	pop    ebx
   14535:	leave  
   14536:	ret    0x8
   14539:	int3   
   1453a:	int3   
   1453b:	int3   
   1453c:	int3   
   1453d:	int3   
   1453e:	mov    edi,edi
   14540:	push   ebp
   14541:	mov    ebp,esp
   14543:	push   edi
   14544:	mov    edi,DWORD PTR [ebp+0xc]
   14547:	cmp    DWORD PTR [ebp+0x8],edi
   1454a:	je     0x14560
   1454c:	push   esi
   1454d:	mov    esi,DWORD PTR [ebp+0x10]
   14550:	inc    DWORD PTR [esi]
   14552:	lea    ecx,[ebp+0x8]
   14555:	call   0x1373e
   1455a:	cmp    DWORD PTR [ebp+0x8],edi
   1455d:	jne    0x14550
   1455f:	pop    esi
   14560:	pop    edi
   14561:	pop    ebp
   14562:	ret    
   14563:	int3   
   14564:	int3   
   14565:	int3   
   14566:	int3   
   14567:	int3   
   14568:	mov    edi,edi
   1456a:	push   ebp
   1456b:	mov    ebp,esp
   1456d:	push   DWORD PTR [ebp+0xc]
   14570:	push   DWORD PTR [ebp+0x8]
   14573:	call   0x13c68
   14578:	mov    eax,DWORD PTR [ebp+0x8]
   1457b:	pop    ebp
   1457c:	ret    0x8
   1457f:	int3   
   14580:	int3   
   14581:	int3   
   14582:	int3   
   14583:	int3   
   14584:	mov    edi,edi
   14586:	push   ebp
   14587:	mov    ebp,esp
   14589:	push   ecx
   1458a:	push   esi
   1458b:	mov    esi,ecx
   1458d:	cmp    DWORD PTR [esi+0xc],0x0
   14591:	mov    ecx,DWORD PTR [ebp+0xc]
   14594:	je     0x145ce
   14596:	mov    eax,DWORD PTR [esi+0x4]
   14599:	cmp    ecx,DWORD PTR [eax]
   1459b:	jne    0x145ce
   1459d:	cmp    DWORD PTR [ebp+0x10],eax
   145a0:	jne    0x145ce
   145a2:	push   DWORD PTR [eax+0x4]
   145a5:	mov    ecx,esi
   145a7:	call   0x13830
   145ac:	mov    ecx,DWORD PTR ds:0x786b0
   145b2:	mov    eax,DWORD PTR [esi+0x4]
   145b5:	mov    DWORD PTR [eax+0x4],ecx
   145b8:	mov    eax,DWORD PTR [esi+0x4]
   145bb:	and    DWORD PTR [esi+0xc],0x0
   145bf:	mov    DWORD PTR [eax],eax
   145c1:	mov    eax,DWORD PTR [esi+0x4]
   145c4:	mov    DWORD PTR [eax+0x8],eax
   145c7:	mov    eax,DWORD PTR [esi+0x4]
   145ca:	mov    ecx,DWORD PTR [eax]
   145cc:	jmp    0x145f3
   145ce:	cmp    ecx,DWORD PTR [ebp+0x10]
   145d1:	je     0x145f3
   145d3:	push   edi
   145d4:	mov    edi,ecx
   145d6:	lea    ecx,[ebp+0xc]
   145d9:	call   0x10ef4
   145de:	push   edi
   145df:	lea    eax,[ebp-0x4]
   145e2:	push   eax
   145e3:	mov    ecx,esi
   145e5:	call   0x13d5a
   145ea:	mov    ecx,DWORD PTR [ebp+0xc]
   145ed:	cmp    ecx,DWORD PTR [ebp+0x10]
   145f0:	jne    0x145d4
   145f2:	pop    edi
   145f3:	mov    eax,DWORD PTR [ebp+0x8]
   145f6:	mov    DWORD PTR [eax],ecx
   145f8:	pop    esi
   145f9:	leave  
   145fa:	ret    0xc
   145fd:	int3   
   145fe:	int3   
   145ff:	int3   
   14600:	int3   
   14601:	int3   
   14602:	mov    edi,edi
   14604:	push   ebp
   14605:	mov    ebp,esp
   14607:	push   ecx
   14608:	push   ecx
   14609:	push   esi
   1460a:	push   DWORD PTR [ebp+0x8]
   1460d:	lea    eax,[ebp-0x8]
   14610:	push   eax
   14611:	mov    esi,ecx
   14613:	call   0x13fb2
   14618:	and    DWORD PTR [ebp+0x8],0x0
   1461c:	lea    eax,[ebp+0x8]
   1461f:	push   eax
   14620:	push   DWORD PTR [ebp-0x4]
   14623:	push   DWORD PTR [ebp-0x8]
   14626:	call   0x13930
   1462b:	add    esp,0xc
   1462e:	push   DWORD PTR [ebp-0x4]
   14631:	lea    eax,[ebp-0x4]
   14634:	push   DWORD PTR [ebp-0x8]
   14637:	mov    ecx,esi
   14639:	push   eax
   1463a:	call   0x14584
   1463f:	mov    eax,DWORD PTR [ebp+0x8]
   14642:	pop    esi
   14643:	leave  
   14644:	ret    0x4
   14647:	int3   
   14648:	int3   
   14649:	int3   
   1464a:	int3   
   1464b:	int3   
   1464c:	mov    edi,edi
   1464e:	push   ebp
   1464f:	mov    ebp,esp
   14651:	push   ecx
   14652:	push   esi
   14653:	mov    esi,ecx
   14655:	cmp    DWORD PTR [esi+0xc],0x0
   14659:	mov    ecx,DWORD PTR [ebp+0xc]
   1465c:	je     0x14696
   1465e:	mov    eax,DWORD PTR [esi+0x4]
   14661:	cmp    ecx,DWORD PTR [eax]
   14663:	jne    0x14696
   14665:	cmp    DWORD PTR [ebp+0x10],eax
   14668:	jne    0x14696
   1466a:	push   DWORD PTR [eax+0x4]
   1466d:	mov    ecx,esi
   1466f:	call   0x13898
   14674:	mov    ecx,DWORD PTR ds:0x786b4
   1467a:	mov    eax,DWORD PTR [esi+0x4]
   1467d:	mov    DWORD PTR [eax+0x4],ecx
   14680:	mov    eax,DWORD PTR [esi+0x4]
   14683:	and    DWORD PTR [esi+0xc],0x0
   14687:	mov    DWORD PTR [eax],eax
   14689:	mov    eax,DWORD PTR [esi+0x4]
   1468c:	mov    DWORD PTR [eax+0x8],eax
   1468f:	mov    eax,DWORD PTR [esi+0x4]
   14692:	mov    ecx,DWORD PTR [eax]
   14694:	jmp    0x146bb
   14696:	cmp    ecx,DWORD PTR [ebp+0x10]
   14699:	je     0x146bb
   1469b:	push   edi
   1469c:	mov    edi,ecx
   1469e:	lea    ecx,[ebp+0xc]
   146a1:	call   0x12e72
   146a6:	push   edi
   146a7:	lea    eax,[ebp-0x4]
   146aa:	push   eax
   146ab:	mov    ecx,esi
   146ad:	call   0x140c2
   146b2:	mov    ecx,DWORD PTR [ebp+0xc]
   146b5:	cmp    ecx,DWORD PTR [ebp+0x10]
   146b8:	jne    0x1469c
   146ba:	pop    edi
   146bb:	mov    eax,DWORD PTR [ebp+0x8]
   146be:	mov    DWORD PTR [eax],ecx
   146c0:	pop    esi
   146c1:	leave  
   146c2:	ret    0xc
   146c5:	int3   
   146c6:	int3   
   146c7:	int3   
   146c8:	int3   
   146c9:	int3   
   146ca:	mov    edi,edi
   146cc:	push   ebp
   146cd:	mov    ebp,esp
   146cf:	push   ecx
   146d0:	push   ecx
   146d1:	push   esi
   146d2:	push   DWORD PTR [ebp+0x8]
   146d5:	lea    eax,[ebp-0x8]
   146d8:	push   eax
   146d9:	mov    esi,ecx
   146db:	call   0x1431a
   146e0:	and    DWORD PTR [ebp+0x8],0x0
   146e4:	lea    eax,[ebp+0x8]
   146e7:	push   eax
   146e8:	push   DWORD PTR [ebp-0x4]
   146eb:	push   DWORD PTR [ebp-0x8]
   146ee:	call   0x13996
   146f3:	add    esp,0xc
   146f6:	push   DWORD PTR [ebp-0x4]
   146f9:	lea    eax,[ebp-0x4]
   146fc:	push   DWORD PTR [ebp-0x8]
   146ff:	mov    ecx,esi
   14701:	push   eax
   14702:	call   0x1464c
   14707:	mov    eax,DWORD PTR [ebp+0x8]
   1470a:	pop    esi
   1470b:	leave  
   1470c:	ret    0x4
   1470f:	int3   
   14710:	int3   
   14711:	int3   
   14712:	int3   
   14713:	int3   
   14714:	mov    edi,edi
   14716:	push   esi
   14717:	push   edi
   14718:	push   0x1
   1471a:	xor    edi,edi
   1471c:	push   edi
   1471d:	mov    esi,ecx
   1471f:	call   0x1ac7a
   14724:	cmp    DWORD PTR ds:0x786b0,edi
   1472a:	jne    0x14741
   1472c:	mov    ecx,eax
   1472e:	mov    DWORD PTR ds:0x786b0,ecx
   14734:	mov    DWORD PTR [ecx],edi
   14736:	mov    ecx,DWORD PTR ds:0x786b0
   1473c:	xor    eax,eax
   1473e:	mov    DWORD PTR [ecx+0x8],edi
   14741:	inc    DWORD PTR ds:0x78860
   14747:	cmp    eax,edi
   14749:	je     0x14752
   1474b:	push   eax
   1474c:	call   0x11d22
   14751:	pop    ecx
   14752:	push   edi
   14753:	push   DWORD PTR ds:0x786b0
   14759:	mov    ecx,esi
   1475b:	call   0x1ac7a
   14760:	mov    DWORD PTR [esi+0xc],edi
   14763:	mov    DWORD PTR [esi+0x4],eax
   14766:	mov    DWORD PTR [eax],eax
   14768:	mov    esi,DWORD PTR [esi+0x4]
   1476b:	pop    edi
   1476c:	mov    DWORD PTR [esi+0x8],esi
   1476f:	pop    esi
   14770:	ret    
   14771:	int3   
   14772:	int3   
   14773:	int3   
   14774:	int3   
   14775:	int3   
   14776:	mov    edi,edi
   14778:	push   esi
   14779:	push   edi
   1477a:	push   0x1
   1477c:	xor    edi,edi
   1477e:	push   edi
   1477f:	mov    esi,ecx
   14781:	call   0x1434c
   14786:	cmp    DWORD PTR ds:0x786bc,edi
   1478c:	jne    0x147a3
   1478e:	mov    ecx,eax
   14790:	mov    DWORD PTR ds:0x786bc,ecx
   14796:	mov    DWORD PTR [ecx],edi
   14798:	mov    ecx,DWORD PTR ds:0x786bc
   1479e:	xor    eax,eax
   147a0:	mov    DWORD PTR [ecx+0x8],edi
   147a3:	inc    DWORD PTR ds:0x78864
   147a9:	cmp    eax,edi
   147ab:	je     0x147b4
   147ad:	push   eax
   147ae:	call   0x11d22
   147b3:	pop    ecx
   147b4:	push   edi
   147b5:	push   DWORD PTR ds:0x786bc
   147bb:	mov    ecx,esi
   147bd:	call   0x1434c
   147c2:	mov    DWORD PTR [esi+0xc],edi
   147c5:	mov    DWORD PTR [esi+0x4],eax
   147c8:	mov    DWORD PTR [eax],eax
   147ca:	mov    esi,DWORD PTR [esi+0x4]
   147cd:	pop    edi
   147ce:	mov    DWORD PTR [esi+0x8],esi
   147d1:	pop    esi
   147d2:	ret    
   147d3:	int3   
   147d4:	int3   
   147d5:	int3   
   147d6:	int3   
   147d7:	int3   
   147d8:	mov    edi,edi
   147da:	push   esi
   147db:	push   edi
   147dc:	push   0x1
   147de:	xor    edi,edi
   147e0:	push   edi
   147e1:	mov    esi,ecx
   147e3:	call   0x14370
   147e8:	cmp    DWORD PTR ds:0x786c0,edi
   147ee:	jne    0x14805
   147f0:	mov    ecx,eax
   147f2:	mov    DWORD PTR ds:0x786c0,ecx
   147f8:	mov    DWORD PTR [ecx],edi
   147fa:	mov    ecx,DWORD PTR ds:0x786c0
   14800:	xor    eax,eax
   14802:	mov    DWORD PTR [ecx+0x8],edi
   14805:	inc    DWORD PTR ds:0x78868
   1480b:	cmp    eax,edi
   1480d:	je     0x14816
   1480f:	push   eax
   14810:	call   0x11d22
   14815:	pop    ecx
   14816:	push   edi
   14817:	push   DWORD PTR ds:0x786c0
   1481d:	mov    ecx,esi
   1481f:	call   0x14370
   14824:	mov    DWORD PTR [esi+0xc],edi
   14827:	mov    DWORD PTR [esi+0x4],eax
   1482a:	mov    DWORD PTR [eax],eax
   1482c:	mov    esi,DWORD PTR [esi+0x4]
   1482f:	pop    edi
   14830:	mov    DWORD PTR [esi+0x8],esi
   14833:	pop    esi
   14834:	ret    
   14835:	int3   
   14836:	int3   
   14837:	int3   
   14838:	int3   
   14839:	int3   
   1483a:	mov    edi,edi
   1483c:	push   esi
   1483d:	push   edi
   1483e:	push   0x1
   14840:	xor    edi,edi
   14842:	push   edi
   14843:	mov    esi,ecx
   14845:	call   0x1ac7a
   1484a:	cmp    DWORD PTR ds:0x786c4,edi
   14850:	jne    0x14867
   14852:	mov    ecx,eax
   14854:	mov    DWORD PTR ds:0x786c4,ecx
   1485a:	mov    DWORD PTR [ecx],edi
   1485c:	mov    ecx,DWORD PTR ds:0x786c4
   14862:	xor    eax,eax
   14864:	mov    DWORD PTR [ecx+0x8],edi
   14867:	inc    DWORD PTR ds:0x7886c
   1486d:	cmp    eax,edi
   1486f:	je     0x14878
   14871:	push   eax
   14872:	call   0x11d22
   14877:	pop    ecx
   14878:	push   edi
   14879:	push   DWORD PTR ds:0x786c4
   1487f:	mov    ecx,esi
   14881:	call   0x1ac7a
   14886:	mov    DWORD PTR [esi+0xc],edi
   14889:	mov    DWORD PTR [esi+0x4],eax
   1488c:	mov    DWORD PTR [eax],eax
   1488e:	mov    esi,DWORD PTR [esi+0x4]
   14891:	pop    edi
   14892:	mov    DWORD PTR [esi+0x8],esi
   14895:	pop    esi
   14896:	ret    
   14897:	int3   
   14898:	int3   
   14899:	int3   
   1489a:	int3   
   1489b:	int3   
   1489c:	mov    edi,edi
   1489e:	push   esi
   1489f:	push   edi
   148a0:	push   0x1
   148a2:	xor    edi,edi
   148a4:	push   edi
   148a5:	mov    esi,ecx
   148a7:	call   0x14394
   148ac:	cmp    DWORD PTR ds:0x786b4,edi
   148b2:	jne    0x148c9
   148b4:	mov    ecx,eax
   148b6:	mov    DWORD PTR ds:0x786b4,ecx
   148bc:	mov    DWORD PTR [ecx],edi
   148be:	mov    ecx,DWORD PTR ds:0x786b4
   148c4:	xor    eax,eax
   148c6:	mov    DWORD PTR [ecx+0x8],edi
   148c9:	inc    DWORD PTR ds:0x78870
   148cf:	cmp    eax,edi
   148d1:	je     0x148da
   148d3:	push   eax
   148d4:	call   0x11d22
   148d9:	pop    ecx
   148da:	push   edi
   148db:	push   DWORD PTR ds:0x786b4
   148e1:	mov    ecx,esi
   148e3:	call   0x14394
   148e8:	mov    DWORD PTR [esi+0xc],edi
   148eb:	mov    DWORD PTR [esi+0x4],eax
   148ee:	mov    DWORD PTR [eax],eax
   148f0:	mov    esi,DWORD PTR [esi+0x4]
   148f3:	pop    edi
   148f4:	mov    DWORD PTR [esi+0x8],esi
   148f7:	pop    esi
   148f8:	ret    
   148f9:	int3   
   148fa:	int3   
   148fb:	int3   
   148fc:	int3   
   148fd:	int3   
   148fe:	mov    edi,edi
   14900:	push   ebp
   14901:	mov    ebp,esp
   14903:	push   ebx
   14904:	push   esi
   14905:	mov    esi,DWORD PTR [ebp+0x10]
   14908:	push   edi
   14909:	push   0x0
   1490b:	push   esi
   1490c:	mov    edi,ecx
   1490e:	call   0x14394
   14913:	push   DWORD PTR [ebp+0x14]
   14916:	mov    ebx,eax
   14918:	mov    eax,ds:0x786b4
   1491d:	mov    DWORD PTR [ebx],eax
   1491f:	mov    eax,ds:0x786b4
   14924:	mov    DWORD PTR [ebx+0x8],eax
   14927:	lea    eax,[ebx+0xc]
   1492a:	push   eax
   1492b:	call   0x1a5b4
   14930:	inc    DWORD PTR [edi+0xc]
   14933:	cmp    esi,DWORD PTR [edi+0x4]
   14936:	je     0x1495a
   14938:	mov    eax,DWORD PTR [ebp+0xc]
   1493b:	cmp    eax,DWORD PTR ds:0x786b4
   14941:	jne    0x1495a
   14943:	mov    eax,DWORD PTR [ebp+0x14]
   14946:	mov    eax,DWORD PTR [eax]
   14948:	cmp    eax,DWORD PTR [esi+0xc]
   1494b:	jb     0x1495a
   1494d:	mov    DWORD PTR [esi+0x8],ebx
   14950:	mov    eax,DWORD PTR [edi+0x4]
   14953:	cmp    esi,DWORD PTR [eax+0x8]
   14956:	jne    0x14974
   14958:	jmp    0x14969
   1495a:	mov    DWORD PTR [esi],ebx
   1495c:	mov    eax,DWORD PTR [edi+0x4]
   1495f:	cmp    esi,eax
   14961:	jne    0x1496e
   14963:	mov    DWORD PTR [eax+0x4],ebx
   14966:	mov    eax,DWORD PTR [edi+0x4]
   14969:	mov    DWORD PTR [eax+0x8],ebx
   1496c:	jmp    0x14974
   1496e:	cmp    esi,DWORD PTR [eax]
   14970:	jne    0x14974
   14972:	mov    DWORD PTR [eax],ebx
   14974:	mov    eax,DWORD PTR [edi+0x4]
   14977:	mov    esi,ebx
   14979:	cmp    ebx,DWORD PTR [eax+0x4]
   1497c:	je     0x14a30
   14982:	mov    eax,DWORD PTR [esi+0x4]
   14985:	xor    edx,edx
   14987:	cmp    DWORD PTR [eax+0x10],edx
   1498a:	jne    0x14a30
   14990:	mov    ecx,DWORD PTR [eax+0x4]
   14993:	cmp    eax,DWORD PTR [ecx]
   14995:	jne    0x149d1
   14997:	mov    ecx,DWORD PTR [ecx+0x8]
   1499a:	cmp    DWORD PTR [ecx+0x10],edx
   1499d:	je     0x149d8
   1499f:	cmp    esi,DWORD PTR [eax+0x8]
   149a2:	jne    0x149ae
   149a4:	mov    esi,eax
   149a6:	push   esi
   149a7:	mov    ecx,edi
   149a9:	call   0x12ea8
   149ae:	mov    eax,DWORD PTR [esi+0x4]
   149b1:	mov    DWORD PTR [eax+0x10],0x1
   149b8:	mov    eax,DWORD PTR [esi+0x4]
   149bb:	mov    eax,DWORD PTR [eax+0x4]
   149be:	and    DWORD PTR [eax+0x10],0x0
   149c2:	mov    eax,DWORD PTR [esi+0x4]
   149c5:	push   DWORD PTR [eax+0x4]
   149c8:	mov    ecx,edi
   149ca:	call   0x12ef6
   149cf:	jmp    0x14a24
   149d1:	mov    ecx,DWORD PTR [ecx]
   149d3:	cmp    DWORD PTR [ecx+0x10],edx
   149d6:	jne    0x149f5
   149d8:	mov    edx,eax
   149da:	xor    eax,eax
   149dc:	inc    eax
   149dd:	mov    DWORD PTR [edx+0x10],eax
   149e0:	mov    DWORD PTR [ecx+0x10],eax
   149e3:	mov    eax,DWORD PTR [esi+0x4]
   149e6:	mov    eax,DWORD PTR [eax+0x4]
   149e9:	and    DWORD PTR [eax+0x10],0x0
   149ed:	mov    eax,DWORD PTR [esi+0x4]
   149f0:	mov    esi,DWORD PTR [eax+0x4]
   149f3:	jmp    0x14a24
   149f5:	cmp    esi,DWORD PTR [eax]
   149f7:	jne    0x14a03
   149f9:	mov    esi,eax
   149fb:	push   esi
   149fc:	mov    ecx,edi
   149fe:	call   0x12ef6
   14a03:	mov    eax,DWORD PTR [esi+0x4]
   14a06:	mov    DWORD PTR [eax+0x10],0x1
   14a0d:	mov    eax,DWORD PTR [esi+0x4]
   14a10:	mov    eax,DWORD PTR [eax+0x4]
   14a13:	and    DWORD PTR [eax+0x10],0x0
   14a17:	mov    eax,DWORD PTR [esi+0x4]
   14a1a:	push   DWORD PTR [eax+0x4]
   14a1d:	mov    ecx,edi
   14a1f:	call   0x12ea8
   14a24:	mov    eax,DWORD PTR [edi+0x4]
   14a27:	cmp    esi,DWORD PTR [eax+0x4]
   14a2a:	jne    0x14982
   14a30:	mov    eax,DWORD PTR [edi+0x4]
   14a33:	mov    eax,DWORD PTR [eax+0x4]
   14a36:	pop    edi
   14a37:	mov    DWORD PTR [eax+0x10],0x1
   14a3e:	mov    eax,DWORD PTR [ebp+0x8]
   14a41:	pop    esi
   14a42:	mov    DWORD PTR [eax],ebx
   14a44:	pop    ebx
   14a45:	pop    ebp
   14a46:	ret    0x10
   14a49:	int3   
   14a4a:	int3   
   14a4b:	int3   
   14a4c:	int3   
   14a4d:	int3   
   14a4e:	mov    edi,edi
   14a50:	push   esi
   14a51:	push   edi
   14a52:	push   0x1
   14a54:	xor    edi,edi
   14a56:	push   edi
   14a57:	mov    esi,ecx
   14a59:	call   0x143b8
   14a5e:	cmp    DWORD PTR ds:0x786b8,edi
   14a64:	jne    0x14a7b
   14a66:	mov    ecx,eax
   14a68:	mov    DWORD PTR ds:0x786b8,ecx
   14a6e:	mov    DWORD PTR [ecx],edi
   14a70:	mov    ecx,DWORD PTR ds:0x786b8
   14a76:	xor    eax,eax
   14a78:	mov    DWORD PTR [ecx+0x8],edi
   14a7b:	inc    DWORD PTR ds:0x78874
   14a81:	cmp    eax,edi
   14a83:	je     0x14a8c
   14a85:	push   eax
   14a86:	call   0x11d22
   14a8b:	pop    ecx
   14a8c:	push   edi
   14a8d:	push   DWORD PTR ds:0x786b8
   14a93:	mov    ecx,esi
   14a95:	call   0x143b8
   14a9a:	mov    DWORD PTR [esi+0xc],edi
   14a9d:	mov    DWORD PTR [esi+0x4],eax
   14aa0:	mov    DWORD PTR [eax],eax
   14aa2:	mov    esi,DWORD PTR [esi+0x4]
   14aa5:	pop    edi
   14aa6:	mov    DWORD PTR [esi+0x8],esi
   14aa9:	pop    esi
   14aaa:	ret    
   14aab:	int3   
   14aac:	int3   
   14aad:	int3   
   14aae:	int3   
   14aaf:	int3   
   14ab0:	mov    edi,edi
   14ab2:	push   ebp
   14ab3:	mov    ebp,esp
   14ab5:	push   ebx
   14ab6:	push   esi
   14ab7:	mov    esi,DWORD PTR [ebp+0x10]
   14aba:	push   edi
   14abb:	push   0x0
   14abd:	push   esi
   14abe:	mov    edi,ecx
   14ac0:	call   0x1ac7a
   14ac5:	push   DWORD PTR [ebp+0x14]
   14ac8:	mov    ebx,eax
   14aca:	mov    eax,ds:0x786b0
   14acf:	mov    DWORD PTR [ebx],eax
   14ad1:	mov    eax,ds:0x786b0
   14ad6:	mov    DWORD PTR [ebx+0x8],eax
   14ad9:	lea    eax,[ebx+0xc]
   14adc:	push   eax
   14add:	call   0x1123c
   14ae2:	inc    DWORD PTR [edi+0xc]
   14ae5:	cmp    esi,DWORD PTR [edi+0x4]
   14ae8:	je     0x14b0c
   14aea:	mov    eax,DWORD PTR [ebp+0xc]
   14aed:	cmp    eax,DWORD PTR ds:0x786b0
   14af3:	jne    0x14b0c
   14af5:	mov    eax,DWORD PTR [ebp+0x14]
   14af8:	mov    eax,DWORD PTR [eax]
   14afa:	cmp    eax,DWORD PTR [esi+0xc]
   14afd:	jb     0x14b0c
   14aff:	mov    DWORD PTR [esi+0x8],ebx
   14b02:	mov    eax,DWORD PTR [edi+0x4]
   14b05:	cmp    esi,DWORD PTR [eax+0x8]
   14b08:	jne    0x14b26
   14b0a:	jmp    0x14b1b
   14b0c:	mov    DWORD PTR [esi],ebx
   14b0e:	mov    eax,DWORD PTR [edi+0x4]
   14b11:	cmp    esi,eax
   14b13:	jne    0x14b20
   14b15:	mov    DWORD PTR [eax+0x4],ebx
   14b18:	mov    eax,DWORD PTR [edi+0x4]
   14b1b:	mov    DWORD PTR [eax+0x8],ebx
   14b1e:	jmp    0x14b26
   14b20:	cmp    esi,DWORD PTR [eax]
   14b22:	jne    0x14b26
   14b24:	mov    DWORD PTR [eax],ebx
   14b26:	mov    eax,DWORD PTR [edi+0x4]
   14b29:	mov    esi,ebx
   14b2b:	cmp    ebx,DWORD PTR [eax+0x4]
   14b2e:	je     0x14be2
   14b34:	mov    eax,DWORD PTR [esi+0x4]
   14b37:	xor    edx,edx
   14b39:	cmp    DWORD PTR [eax+0x14],edx
   14b3c:	jne    0x14be2
   14b42:	mov    ecx,DWORD PTR [eax+0x4]
   14b45:	cmp    eax,DWORD PTR [ecx]
   14b47:	jne    0x14b83
   14b49:	mov    ecx,DWORD PTR [ecx+0x8]
   14b4c:	cmp    DWORD PTR [ecx+0x14],edx
   14b4f:	je     0x14b8a
   14b51:	cmp    esi,DWORD PTR [eax+0x8]
   14b54:	jne    0x14b60
   14b56:	mov    esi,eax
   14b58:	push   esi
   14b59:	mov    ecx,edi
   14b5b:	call   0x12ca6
   14b60:	mov    eax,DWORD PTR [esi+0x4]
   14b63:	mov    DWORD PTR [eax+0x14],0x1
   14b6a:	mov    eax,DWORD PTR [esi+0x4]
   14b6d:	mov    eax,DWORD PTR [eax+0x4]
   14b70:	and    DWORD PTR [eax+0x14],0x0
   14b74:	mov    eax,DWORD PTR [esi+0x4]
   14b77:	push   DWORD PTR [eax+0x4]
   14b7a:	mov    ecx,edi
   14b7c:	call   0x12cf4
   14b81:	jmp    0x14bd6
   14b83:	mov    ecx,DWORD PTR [ecx]
   14b85:	cmp    DWORD PTR [ecx+0x14],edx
   14b88:	jne    0x14ba7
   14b8a:	mov    edx,eax
   14b8c:	xor    eax,eax
   14b8e:	inc    eax
   14b8f:	mov    DWORD PTR [edx+0x14],eax
   14b92:	mov    DWORD PTR [ecx+0x14],eax
   14b95:	mov    eax,DWORD PTR [esi+0x4]
   14b98:	mov    eax,DWORD PTR [eax+0x4]
   14b9b:	and    DWORD PTR [eax+0x14],0x0
   14b9f:	mov    eax,DWORD PTR [esi+0x4]
   14ba2:	mov    esi,DWORD PTR [eax+0x4]
   14ba5:	jmp    0x14bd6
   14ba7:	cmp    esi,DWORD PTR [eax]
   14ba9:	jne    0x14bb5
   14bab:	mov    esi,eax
   14bad:	push   esi
   14bae:	mov    ecx,edi
   14bb0:	call   0x12cf4
   14bb5:	mov    eax,DWORD PTR [esi+0x4]
   14bb8:	mov    DWORD PTR [eax+0x14],0x1
   14bbf:	mov    eax,DWORD PTR [esi+0x4]
   14bc2:	mov    eax,DWORD PTR [eax+0x4]
   14bc5:	and    DWORD PTR [eax+0x14],0x0
   14bc9:	mov    eax,DWORD PTR [esi+0x4]
   14bcc:	push   DWORD PTR [eax+0x4]
   14bcf:	mov    ecx,edi
   14bd1:	call   0x12ca6
   14bd6:	mov    eax,DWORD PTR [edi+0x4]
   14bd9:	cmp    esi,DWORD PTR [eax+0x4]
   14bdc:	jne    0x14b34
   14be2:	mov    eax,DWORD PTR [edi+0x4]
   14be5:	mov    eax,DWORD PTR [eax+0x4]
   14be8:	pop    edi
   14be9:	mov    DWORD PTR [eax+0x14],0x1
   14bf0:	mov    eax,DWORD PTR [ebp+0x8]
   14bf3:	pop    esi
   14bf4:	mov    DWORD PTR [eax],ebx
   14bf6:	pop    ebx
   14bf7:	pop    ebp
   14bf8:	ret    0x10
   14bfb:	int3   
   14bfc:	int3   
   14bfd:	int3   
   14bfe:	int3   
   14bff:	int3   
   14c00:	mov    edi,edi
   14c02:	push   ebp
   14c03:	mov    ebp,esp
   14c05:	push   ecx
   14c06:	push   ecx
   14c07:	push   ebx
   14c08:	push   esi
   14c09:	mov    DWORD PTR [ebp-0x4],ecx
   14c0c:	push   edi
   14c0d:	mov    edi,DWORD PTR [ebp+0xc]
   14c10:	lea    ecx,[ebp+0xc]
   14c13:	call   0x11172
   14c18:	mov    esi,DWORD PTR [edi]
   14c1a:	mov    eax,ds:0x786c0
   14c1f:	mov    ebx,edi
   14c21:	mov    DWORD PTR [ebp-0x8],esi
   14c24:	cmp    esi,eax
   14c26:	jne    0x14c44
   14c28:	mov    esi,DWORD PTR [edi+0x8]
   14c2b:	mov    eax,DWORD PTR [ebx+0x4]
   14c2e:	mov    ecx,DWORD PTR [ebp-0x4]
   14c31:	mov    DWORD PTR [esi+0x4],eax
   14c34:	mov    eax,DWORD PTR [ecx+0x4]
   14c37:	cmp    DWORD PTR [eax+0x4],edi
   14c3a:	jne    0x14cb9
   14c3c:	mov    DWORD PTR [eax+0x4],esi
   14c3f:	jmp    0x14cc7
   14c44:	mov    ecx,DWORD PTR [edi+0x8]
   14c47:	cmp    ecx,eax
   14c49:	je     0x14c2b
   14c4b:	push   ecx
   14c4c:	call   0x1104c
   14c51:	mov    ebx,eax
   14c53:	mov    esi,DWORD PTR [ebx+0x8]
   14c56:	cmp    ebx,edi
   14c58:	je     0x14c2b
   14c5a:	mov    eax,DWORD PTR [ebp-0x8]
   14c5d:	mov    DWORD PTR [eax+0x4],ebx
   14c60:	mov    eax,DWORD PTR [edi]
   14c62:	mov    DWORD PTR [ebx],eax
   14c64:	cmp    ebx,DWORD PTR [edi+0x8]
   14c67:	jne    0x14c6e
   14c69:	mov    DWORD PTR [esi+0x4],ebx
   14c6c:	jmp    0x14c85
   14c6e:	mov    eax,DWORD PTR [ebx+0x4]
   14c71:	mov    DWORD PTR [esi+0x4],eax
   14c74:	mov    eax,DWORD PTR [ebx+0x4]
   14c77:	mov    DWORD PTR [eax],esi
   14c79:	mov    eax,DWORD PTR [edi+0x8]
   14c7c:	mov    DWORD PTR [ebx+0x8],eax
   14c7f:	mov    eax,DWORD PTR [edi+0x8]
   14c82:	mov    DWORD PTR [eax+0x4],ebx
   14c85:	mov    eax,DWORD PTR [ebp-0x4]
   14c88:	mov    eax,DWORD PTR [eax+0x4]
   14c8b:	cmp    DWORD PTR [eax+0x4],edi
   14c8e:	jne    0x14c95
   14c90:	mov    DWORD PTR [eax+0x4],ebx
   14c93:	jmp    0x14ca3
   14c95:	mov    eax,DWORD PTR [edi+0x4]
   14c98:	cmp    DWORD PTR [eax],edi
   14c9a:	jne    0x14ca0
   14c9c:	mov    DWORD PTR [eax],ebx
   14c9e:	jmp    0x14ca3
   14ca0:	mov    DWORD PTR [eax+0x8],ebx
   14ca3:	mov    eax,DWORD PTR [edi+0x4]
   14ca6:	mov    DWORD PTR [ebx+0x4],eax
   14ca9:	mov    eax,DWORD PTR [ebx+0x1c]
   14cac:	mov    ecx,DWORD PTR [edi+0x1c]
   14caf:	mov    DWORD PTR [ebx+0x1c],ecx
   14cb2:	mov    DWORD PTR [edi+0x1c],eax
   14cb5:	mov    ebx,edi
   14cb7:	jmp    0x14d1a
   14cb9:	mov    eax,DWORD PTR [edi+0x4]
   14cbc:	cmp    DWORD PTR [eax],edi
   14cbe:	jne    0x14cc4
   14cc0:	mov    DWORD PTR [eax],esi
   14cc2:	jmp    0x14cc7
   14cc4:	mov    DWORD PTR [eax+0x8],esi
   14cc7:	mov    eax,DWORD PTR [ecx+0x4]
   14cca:	mov    DWORD PTR [ebp-0x8],eax
   14ccd:	cmp    DWORD PTR [eax],edi
   14ccf:	jne    0x14cf1
   14cd1:	mov    edx,DWORD PTR [edi+0x8]
   14cd4:	cmp    edx,DWORD PTR ds:0x786c0
   14cda:	jne    0x14ce3
   14cdc:	mov    edx,DWORD PTR [edi+0x4]
   14cdf:	mov    DWORD PTR [eax],edx
   14ce1:	jmp    0x14cf1
   14ce3:	push   esi
   14ce4:	call   0x1104c
   14ce9:	mov    ecx,DWORD PTR [ebp-0x8]
   14cec:	mov    DWORD PTR [ecx],eax
   14cee:	mov    ecx,DWORD PTR [ebp-0x4]
   14cf1:	mov    eax,DWORD PTR [ecx+0x4]
   14cf4:	mov    DWORD PTR [ebp-0x8],eax
   14cf7:	cmp    DWORD PTR [eax+0x8],edi
   14cfa:	jne    0x14d1a
   14cfc:	mov    ecx,DWORD PTR [edi]
   14cfe:	cmp    ecx,DWORD PTR ds:0x786c0
   14d04:	jne    0x14d0e
   14d06:	mov    ecx,DWORD PTR [edi+0x4]
   14d09:	mov    DWORD PTR [eax+0x8],ecx
   14d0c:	jmp    0x14d1a
   14d0e:	push   esi
   14d0f:	call   0x1102a
   14d14:	mov    ecx,DWORD PTR [ebp-0x8]
   14d17:	mov    DWORD PTR [ecx+0x8],eax
   14d1a:	xor    edi,edi
   14d1c:	inc    edi
   14d1d:	cmp    DWORD PTR [ebx+0x1c],edi
   14d20:	jne    0x14e37
   14d26:	jmp    0x14de5
   14d2b:	cmp    DWORD PTR [esi+0x1c],edi
   14d2e:	jne    0x14e34
   14d34:	mov    eax,DWORD PTR [esi+0x4]
   14d37:	cmp    esi,DWORD PTR [eax]
   14d39:	jne    0x14db0
   14d3b:	mov    eax,DWORD PTR [eax+0x8]
   14d3e:	cmp    DWORD PTR [eax+0x1c],0x0
   14d42:	jne    0x14d5c
   14d44:	mov    DWORD PTR [eax+0x1c],edi
   14d47:	mov    eax,DWORD PTR [esi+0x4]
   14d4a:	and    DWORD PTR [eax+0x1c],0x0
   14d4e:	push   DWORD PTR [esi+0x4]
   14d51:	call   0x1309c
   14d56:	mov    eax,DWORD PTR [esi+0x4]
   14d59:	mov    eax,DWORD PTR [eax+0x8]
   14d5c:	mov    ecx,DWORD PTR [eax]
   14d5e:	cmp    DWORD PTR [ecx+0x1c],edi
   14d61:	jne    0x14d6b
   14d63:	mov    ecx,DWORD PTR [eax+0x8]
   14d66:	cmp    DWORD PTR [ecx+0x1c],edi
   14d69:	je     0x14dde
   14d6b:	mov    ecx,DWORD PTR [eax+0x8]
   14d6e:	cmp    DWORD PTR [ecx+0x1c],edi
   14d71:	jne    0x14d8b
   14d73:	mov    ecx,DWORD PTR [eax]
   14d75:	mov    DWORD PTR [ecx+0x1c],edi
   14d78:	mov    ecx,DWORD PTR [ebp-0x4]
   14d7b:	and    DWORD PTR [eax+0x1c],0x0
   14d7f:	push   eax
   14d80:	call   0x130ea
   14d85:	mov    eax,DWORD PTR [esi+0x4]
   14d88:	mov    eax,DWORD PTR [eax+0x8]
   14d8b:	mov    ecx,DWORD PTR [esi+0x4]
   14d8e:	mov    ecx,DWORD PTR [ecx+0x1c]
   14d91:	mov    DWORD PTR [eax+0x1c],ecx
   14d94:	mov    ecx,DWORD PTR [esi+0x4]
   14d97:	mov    DWORD PTR [ecx+0x1c],edi
   14d9a:	mov    eax,DWORD PTR [eax+0x8]
   14d9d:	mov    ecx,DWORD PTR [ebp-0x4]
   14da0:	mov    DWORD PTR [eax+0x1c],edi
   14da3:	push   DWORD PTR [esi+0x4]
   14da6:	call   0x1309c
   14dab:	jmp    0x14e34
   14db0:	mov    eax,DWORD PTR [eax]
   14db2:	cmp    DWORD PTR [eax+0x1c],0x0
   14db6:	jne    0x14dcf
   14db8:	mov    DWORD PTR [eax+0x1c],edi
   14dbb:	mov    eax,DWORD PTR [esi+0x4]
   14dbe:	and    DWORD PTR [eax+0x1c],0x0
   14dc2:	push   DWORD PTR [esi+0x4]
   14dc5:	call   0x130ea
   14dca:	mov    eax,DWORD PTR [esi+0x4]
   14dcd:	mov    eax,DWORD PTR [eax]
   14dcf:	mov    ecx,DWORD PTR [eax+0x8]
   14dd2:	cmp    DWORD PTR [ecx+0x1c],edi
   14dd5:	jne    0x14df6
   14dd7:	mov    ecx,DWORD PTR [eax]
   14dd9:	cmp    DWORD PTR [ecx+0x1c],edi
   14ddc:	jne    0x14df6
   14dde:	and    DWORD PTR [eax+0x1c],0x0
   14de2:	mov    esi,DWORD PTR [esi+0x4]
   14de5:	mov    ecx,DWORD PTR [ebp-0x4]
   14de8:	mov    eax,DWORD PTR [ecx+0x4]
   14deb:	cmp    esi,DWORD PTR [eax+0x4]
   14dee:	jne    0x14d2b
   14df4:	jmp    0x14e34
   14df6:	mov    ecx,DWORD PTR [eax]
   14df8:	cmp    DWORD PTR [ecx+0x1c],edi
   14dfb:	jne    0x14e15
   14dfd:	mov    ecx,DWORD PTR [eax+0x8]
   14e00:	mov    DWORD PTR [ecx+0x1c],edi
   14e03:	mov    ecx,DWORD PTR [ebp-0x4]
   14e06:	and    DWORD PTR [eax+0x1c],0x0
   14e0a:	push   eax
   14e0b:	call   0x1309c
   14e10:	mov    eax,DWORD PTR [esi+0x4]
   14e13:	mov    eax,DWORD PTR [eax]
   14e15:	mov    ecx,DWORD PTR [esi+0x4]
   14e18:	mov    ecx,DWORD PTR [ecx+0x1c]
   14e1b:	mov    DWORD PTR [eax+0x1c],ecx
   14e1e:	mov    ecx,DWORD PTR [esi+0x4]
   14e21:	mov    DWORD PTR [ecx+0x1c],edi
   14e24:	mov    eax,DWORD PTR [eax]
   14e26:	mov    ecx,DWORD PTR [ebp-0x4]
   14e29:	mov    DWORD PTR [eax+0x1c],edi
   14e2c:	push   DWORD PTR [esi+0x4]
   14e2f:	call   0x130ea
   14e34:	mov    DWORD PTR [esi+0x1c],edi
   14e37:	lea    eax,[ebx+0xc]
   14e3a:	push   eax
   14e3b:	call   0x139b8
   14e40:	push   ebx
   14e41:	call   0x11d22
   14e46:	mov    eax,DWORD PTR [ebp-0x4]
   14e49:	dec    DWORD PTR [eax+0xc]
   14e4c:	mov    eax,DWORD PTR [ebp+0x8]
   14e4f:	pop    ecx
   14e50:	mov    ecx,DWORD PTR [ebp+0xc]
   14e53:	pop    edi
   14e54:	pop    esi
   14e55:	mov    DWORD PTR [eax],ecx
   14e57:	pop    ebx
   14e58:	leave  
   14e59:	ret    0x8
   14e5c:	int3   
   14e5d:	int3   
   14e5e:	int3   
   14e5f:	int3   
   14e60:	int3   
   14e61:	int3   
   14e62:	mov    edi,edi
   14e64:	push   ebp
   14e65:	mov    ebp,esp
   14e67:	push   ebx
   14e68:	push   esi
   14e69:	push   edi
   14e6a:	mov    edi,DWORD PTR [ebp+0x8]
   14e6d:	mov    ebx,ecx
   14e6f:	mov    esi,edi
   14e71:	cmp    edi,DWORD PTR ds:0x786c0
   14e77:	je     0x14e9f
   14e79:	push   DWORD PTR [esi+0x8]
   14e7c:	mov    ecx,ebx
   14e7e:	call   0x14e62
   14e83:	mov    esi,DWORD PTR [esi]
   14e85:	lea    eax,[edi+0xc]
   14e88:	push   eax
   14e89:	call   0x139b8
   14e8e:	push   edi
   14e8f:	call   0x11d22
   14e94:	pop    ecx
   14e95:	mov    edi,esi
   14e97:	cmp    esi,DWORD PTR ds:0x786c0
   14e9d:	jne    0x14e79
   14e9f:	pop    edi
   14ea0:	pop    esi
   14ea1:	pop    ebx
   14ea2:	pop    ebp
   14ea3:	ret    0x4
   14ea6:	int3   
   14ea7:	int3   
   14ea8:	int3   
   14ea9:	int3   
   14eaa:	int3   
   14eab:	int3   
   14eac:	mov    edi,edi
   14eae:	push   esi
   14eaf:	push   edi
   14eb0:	push   0x1
   14eb2:	xor    edi,edi
   14eb4:	push   edi
   14eb5:	mov    esi,ecx
   14eb7:	call   0x143b8
   14ebc:	cmp    DWORD PTR ds:0x786c8,edi
   14ec2:	jne    0x14ed9
   14ec4:	mov    ecx,eax
   14ec6:	mov    DWORD PTR ds:0x786c8,ecx
   14ecc:	mov    DWORD PTR [ecx],edi
   14ece:	mov    ecx,DWORD PTR ds:0x786c8
   14ed4:	xor    eax,eax
   14ed6:	mov    DWORD PTR [ecx+0x8],edi
   14ed9:	inc    DWORD PTR ds:0x78878
   14edf:	cmp    eax,edi
   14ee1:	je     0x14eea
   14ee3:	push   eax
   14ee4:	call   0x11d22
   14ee9:	pop    ecx
   14eea:	push   edi
   14eeb:	push   DWORD PTR ds:0x786c8
   14ef1:	mov    ecx,esi
   14ef3:	call   0x143b8
   14ef8:	mov    DWORD PTR [esi+0xc],edi
   14efb:	mov    DWORD PTR [esi+0x4],eax
   14efe:	mov    DWORD PTR [eax],eax
   14f00:	mov    esi,DWORD PTR [esi+0x4]
   14f03:	pop    edi
   14f04:	mov    DWORD PTR [esi+0x8],esi
   14f07:	pop    esi
   14f08:	ret    
   14f09:	int3   
   14f0a:	int3   
   14f0b:	int3   
   14f0c:	int3   
   14f0d:	int3   
   14f0e:	mov    edi,edi
   14f10:	push   ebp
   14f11:	mov    ebp,esp
   14f13:	push   ecx
   14f14:	push   DWORD PTR [ebp-0x4]
   14f17:	push   DWORD PTR [ebp+0x10]
   14f1a:	push   DWORD PTR [ebp+0xc]
   14f1d:	push   DWORD PTR [ebp+0x8]
   14f20:	call   0x1453e
   14f25:	add    esp,0x10
   14f28:	leave  
   14f29:	ret    
   14f2a:	int3   
   14f2b:	int3   
   14f2c:	int3   
   14f2d:	int3   
   14f2e:	int3   
   14f2f:	int3   
   14f30:	mov    edi,edi
   14f32:	push   ebp
   14f33:	mov    ebp,esp
   14f35:	push   ebx
   14f36:	mov    ebx,DWORD PTR [ebp+0x8]
   14f39:	mov    eax,DWORD PTR [ebx+0x4]
   14f3c:	push   esi
   14f3d:	push   edi
   14f3e:	mov    esi,ecx
   14f40:	mov    edi,DWORD PTR [esi+0x4]
   14f43:	add    eax,0x4
   14f46:	push   edi
   14f47:	push   DWORD PTR [eax]
   14f49:	call   0x144ce
   14f4e:	mov    DWORD PTR [edi+0x4],eax
   14f51:	mov    eax,DWORD PTR [ebx+0xc]
   14f54:	mov    edi,DWORD PTR [esi+0x4]
   14f57:	mov    DWORD PTR [esi+0xc],eax
   14f5a:	mov    eax,DWORD PTR [edi+0x4]
   14f5d:	cmp    eax,DWORD PTR ds:0x786b4
   14f63:	je     0x14f7d
   14f65:	push   eax
   14f66:	call   0x10e4e
   14f6b:	mov    DWORD PTR [edi],eax
   14f6d:	mov    esi,DWORD PTR [esi+0x4]
   14f70:	push   DWORD PTR [esi+0x4]
   14f73:	call   0x10e2c
   14f78:	mov    DWORD PTR [esi+0x8],eax
   14f7b:	jmp    0x14f85
   14f7d:	mov    DWORD PTR [edi],edi
   14f7f:	mov    esi,DWORD PTR [esi+0x4]
   14f82:	mov    DWORD PTR [esi+0x8],esi
   14f85:	pop    edi
   14f86:	pop    esi
   14f87:	pop    ebx
   14f88:	pop    ebp
   14f89:	ret    0x4
   14f8c:	int3   
   14f8d:	int3   
   14f8e:	int3   
   14f8f:	int3   
   14f90:	int3   
   14f91:	int3   
   14f92:	mov    edi,edi
   14f94:	push   ebp
   14f95:	mov    ebp,esp
   14f97:	push   ecx
   14f98:	push   ebx
   14f99:	push   esi
   14f9a:	push   edi
   14f9b:	xor    edi,edi
   14f9d:	push   edi
   14f9e:	push   edi
   14f9f:	push   edi
   14fa0:	mov    esi,ecx
   14fa2:	mov    eax,DWORD PTR [esi+0x10]
   14fa5:	push   edi
   14fa6:	push   eax
   14fa7:	xor    ebx,ebx
   14fa9:	call   0x119ea
   14fae:	call   eax
   14fb0:	test   eax,eax
   14fb2:	jge    0x14fb8
   14fb4:	xor    eax,eax
   14fb6:	jmp    0x14fe0
   14fb8:	lea    eax,[ebp+0x8]
   14fbb:	push   eax
   14fbc:	lea    eax,[ebp-0x4]
   14fbf:	push   eax
   14fc0:	mov    ecx,esi
   14fc2:	call   0x13bb6
   14fc7:	mov    eax,DWORD PTR [ebp-0x4]
   14fca:	cmp    eax,DWORD PTR [esi+0x4]
   14fcd:	je     0x14fd2
   14fcf:	mov    ebx,DWORD PTR [eax+0x10]
   14fd2:	mov    esi,DWORD PTR [esi+0x10]
   14fd5:	push   edi
   14fd6:	push   esi
   14fd7:	call   0x11a14
   14fdc:	call   eax
   14fde:	mov    eax,ebx
   14fe0:	pop    edi
   14fe1:	pop    esi
   14fe2:	pop    ebx
   14fe3:	leave  
   14fe4:	ret    0x4
   14fe7:	int3   
   14fe8:	int3   
   14fe9:	int3   
   14fea:	int3   
   14feb:	int3   
   14fec:	push   0x10
   14fee:	push   0x77638
   14ff3:	call   0x1dd40
   14ff8:	xor    ebx,ebx
   14ffa:	push   ebx
   14ffb:	push   ebx
   14ffc:	push   ebx
   14ffd:	push   ebx
   14ffe:	push   0x77b58
   15003:	call   0x119ea
   15008:	call   eax
   1500a:	cmp    eax,ebx
   1500c:	jl     0x150ca
   15012:	mov    DWORD PTR [ebp-0x4],ebx
   15015:	push   0xffffffff
   15017:	push   0x1e148
   1501c:	lea    ecx,[ebp-0x20]
   1501f:	call   0x12b26
   15024:	mov    esi,DWORD PTR [ebp+0x8]
   15027:	push   esi
   15028:	lea    eax,[ebp+0x8]
   1502b:	push   eax
   1502c:	mov    ecx,DWORD PTR ds:0x77b28
   15032:	call   0x14568
   15037:	mov    eax,ds:0x77b28
   1503c:	mov    eax,DWORD PTR [eax+0x4]
   1503f:	mov    ecx,DWORD PTR [ebp+0x8]
   15042:	cmp    ecx,eax
   15044:	je     0x15052
   15046:	add    ecx,0x14
   15049:	push   ecx
   1504a:	lea    ecx,[ebp-0x20]
   1504d:	call   0x12a28
   15052:	mov    edx,DWORD PTR [esi+0x4]
   15055:	mov    eax,DWORD PTR [ebp-0x1c]
   15058:	lea    ecx,[eax+edx*1+0x2]
   1505c:	mov    eax,DWORD PTR [ebp+0xc]
   1505f:	cmp    ecx,DWORD PTR [eax]
   15061:	jbe    0x1506e
   15063:	mov    DWORD PTR [eax],ecx
   15065:	mov    DWORD PTR [eax+0x8],0x2
   1506c:	jmp    0x15091
   1506e:	mov    DWORD PTR [eax+0x8],ebx
   15071:	mov    esi,DWORD PTR [esi]
   15073:	lea    edi,[eax+0xc]
   15076:	mov    cl,BYTE PTR [esi]
   15078:	mov    BYTE PTR [edi],cl
   1507a:	inc    esi
   1507b:	inc    edi
   1507c:	cmp    cl,bl
   1507e:	jne    0x15076
   15080:	mov    esi,DWORD PTR [ebp-0x20]
   15083:	lea    eax,[edx+eax*1+0xd]
   15087:	mov    cl,BYTE PTR [esi]
   15089:	mov    BYTE PTR [eax],cl
   1508b:	inc    esi
   1508c:	inc    eax
   1508d:	cmp    cl,bl
   1508f:	jne    0x15087
   15091:	push   DWORD PTR [ebp-0x20]
   15094:	call   0x11d22
   15099:	pop    ecx
   1509a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150a1:	jmp    0x150bd
   150a3:	xor    eax,eax
   150a5:	inc    eax
   150a6:	ret    
   150a7:	mov    esp,DWORD PTR [ebp-0x18]
   150aa:	mov    eax,DWORD PTR [ebp+0xc]
   150ad:	mov    DWORD PTR [eax+0x8],0x4
   150b4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   150bb:	xor    ebx,ebx
   150bd:	push   ebx
   150be:	push   0x77b58
   150c3:	call   0x11a14
   150c8:	call   eax
   150ca:	call   0x1dd85
   150cf:	ret    0x8
   150d2:	int3   
   150d3:	int3   
   150d4:	int3   
   150d5:	int3   
   150d6:	int3   
   150d7:	int3   
   150d8:	push   0xc
   150da:	push   0x77658
   150df:	call   0x1dd40
   150e4:	xor    edi,edi
   150e6:	push   edi
   150e7:	push   edi
   150e8:	push   edi
   150e9:	push   edi
   150ea:	push   0x77b58
   150ef:	call   0x119ea
   150f4:	call   eax
   150f6:	cmp    eax,edi
   150f8:	jl     0x151a8
   150fe:	mov    DWORD PTR [ebp-0x4],edi
   15101:	lea    eax,[ebp+0x8]
   15104:	push   eax
   15105:	lea    eax,[ebp-0x1c]
   15108:	push   eax
   15109:	mov    esi,DWORD PTR ds:0x77bb4
   1510f:	mov    ecx,esi
   15111:	call   0x13cb0
   15116:	mov    esi,DWORD PTR [esi+0x4]
   15119:	mov    ecx,DWORD PTR [ebp-0x1c]
   1511c:	cmp    ecx,esi
   1511e:	jne    0x1512c
   15120:	mov    eax,DWORD PTR [ebp+0xc]
   15123:	mov    DWORD PTR [eax+0x8],0x1
   1512a:	jmp    0x15178
   1512c:	mov    eax,DWORD PTR [ecx+0x10]
   1512f:	cmp    eax,edi
   15131:	jne    0x15137
   15133:	xor    edx,edx
   15135:	jmp    0x1513a
   15137:	mov    edx,DWORD PTR [eax+0x8]
   1513a:	mov    eax,DWORD PTR [ebp+0xc]
   1513d:	cmp    edx,DWORD PTR [eax]
   1513f:	jbe    0x1514c
   15141:	mov    DWORD PTR [eax],edx
   15143:	mov    DWORD PTR [eax+0x8],0x2
   1514a:	jmp    0x15178
   1514c:	mov    DWORD PTR [eax+0x8],edi
   1514f:	mov    edx,DWORD PTR [ecx+0x10]
   15152:	cmp    edx,edi
   15154:	jne    0x1515a
   15156:	xor    edx,edx
   15158:	jmp    0x1515d
   1515a:	mov    edx,DWORD PTR [edx+0x8]
   1515d:	mov    ecx,DWORD PTR [ecx+0x10]
   15160:	cmp    ecx,edi
   15162:	jne    0x15168
   15164:	xor    ecx,ecx
   15166:	jmp    0x1516a
   15168:	mov    ecx,DWORD PTR [ecx]
   1516a:	push   edx
   1516b:	push   ecx
   1516c:	add    eax,0xc
   1516f:	push   eax
   15170:	call   0x1dd1a
   15175:	add    esp,0xc
   15178:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1517f:	jmp    0x1519b
   15181:	xor    eax,eax
   15183:	inc    eax
   15184:	ret    
   15185:	mov    esp,DWORD PTR [ebp-0x18]
   15188:	mov    eax,DWORD PTR [ebp+0xc]
   1518b:	mov    DWORD PTR [eax+0x8],0x4
   15192:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15199:	xor    edi,edi
   1519b:	push   edi
   1519c:	push   0x77b58
   151a1:	call   0x11a14
   151a6:	call   eax
   151a8:	call   0x1dd85
   151ad:	ret    0x8
   151b0:	int3   
   151b1:	int3   
   151b2:	int3   
   151b3:	int3   
   151b4:	int3   
   151b5:	int3   
   151b6:	mov    edi,edi
   151b8:	push   ebp
   151b9:	mov    ebp,esp
   151bb:	push   ebx
   151bc:	push   esi
   151bd:	push   DWORD PTR [ebp+0x8]
   151c0:	mov    esi,ecx
   151c2:	lea    eax,[ebp+0x8]
   151c5:	push   eax
   151c6:	lea    ecx,[esi+0x4]
   151c9:	xor    bl,bl
   151cb:	call   0x13d12
   151d0:	mov    eax,DWORD PTR [ebp+0x8]
   151d3:	cmp    eax,DWORD PTR [esi+0x8]
   151d6:	je     0x151e6
   151d8:	mov    ecx,DWORD PTR [ebp+0xc]
   151db:	add    eax,0x18
   151de:	push   eax
   151df:	call   0x12ab8
   151e4:	inc    bl
   151e6:	pop    esi
   151e7:	mov    al,bl
   151e9:	pop    ebx
   151ea:	pop    ebp
   151eb:	ret    0x8
   151ee:	int3   
   151ef:	int3   
   151f0:	int3   
   151f1:	int3   
   151f2:	int3   
   151f3:	int3   
   151f4:	mov    edi,edi
   151f6:	push   ebp
   151f7:	mov    ebp,esp
   151f9:	push   ecx
   151fa:	push   esi
   151fb:	mov    esi,ecx
   151fd:	mov    eax,DWORD PTR [esi+0x4]
   15200:	mov    ecx,DWORD PTR [eax]
   15202:	push   eax
   15203:	push   ecx
   15204:	lea    eax,[ebp-0x4]
   15207:	push   eax
   15208:	mov    ecx,esi
   1520a:	call   0x1464c
   1520f:	push   DWORD PTR [esi+0x4]
   15212:	call   0x11d22
   15217:	xor    eax,eax
   15219:	mov    DWORD PTR [esi+0x4],eax
   1521c:	mov    DWORD PTR [esi+0xc],eax
   1521f:	dec    DWORD PTR ds:0x78870
   15225:	pop    ecx
   15226:	pop    esi
   15227:	jne    0x1523f
   15229:	mov    ecx,DWORD PTR ds:0x786b4
   1522f:	mov    ds:0x786b4,eax
   15234:	cmp    ecx,eax
   15236:	je     0x1523f
   15238:	push   ecx
   15239:	call   0x11d22
   1523e:	pop    ecx
   1523f:	leave  
   15240:	ret    
   15241:	int3   
   15242:	int3   
   15243:	int3   
   15244:	int3   
   15245:	int3   
   15246:	mov    edi,edi
   15248:	push   ebp
   15249:	mov    ebp,esp
   1524b:	push   ecx
   1524c:	push   ecx
   1524d:	push   DWORD PTR [ebp+0x8]
   15250:	lea    eax,[ebp-0x8]
   15253:	push   eax
   15254:	call   0x13fe4
   15259:	and    DWORD PTR [ebp+0x8],0x0
   1525d:	lea    eax,[ebp+0x8]
   15260:	push   eax
   15261:	push   DWORD PTR [ebp-0x4]
   15264:	push   DWORD PTR [ebp-0x8]
   15267:	call   0x14f0e
   1526c:	mov    eax,DWORD PTR [ebp+0x8]
   1526f:	add    esp,0xc
   15272:	leave  
   15273:	ret    0x4
   15276:	int3   
   15277:	int3   
   15278:	int3   
   15279:	int3   
   1527a:	int3   
   1527b:	int3   
   1527c:	mov    edi,edi
   1527e:	push   ebp
   1527f:	mov    ebp,esp
   15281:	push   ecx
   15282:	push   ebx
   15283:	push   esi
   15284:	push   edi
   15285:	mov    edi,ecx
   15287:	mov    eax,DWORD PTR [edi+0x4]
   1528a:	mov    esi,DWORD PTR [eax+0x4]
   1528d:	mov    ebx,eax
   1528f:	mov    eax,ds:0x786b4
   15294:	mov    dl,0x1
   15296:	cmp    esi,eax
   15298:	je     0x152b6
   1529a:	mov    ecx,DWORD PTR [ebp+0xc]
   1529d:	mov    ecx,DWORD PTR [ecx]
   1529f:	cmp    ecx,DWORD PTR [esi+0xc]
   152a2:	mov    ebx,esi
   152a4:	setb   dl
   152a7:	test   dl,dl
   152a9:	je     0x152af
   152ab:	mov    esi,DWORD PTR [esi]
   152ad:	jmp    0x152b2
   152af:	mov    esi,DWORD PTR [esi+0x8]
   152b2:	cmp    esi,eax
   152b4:	jne    0x1529f
   152b6:	cmp    BYTE PTR [edi+0x8],0x0
   152ba:	je     0x152d7
   152bc:	push   DWORD PTR [ebp+0xc]
   152bf:	push   ebx
   152c0:	push   esi
   152c1:	lea    eax,[ebp+0xc]
   152c4:	push   eax
   152c5:	mov    ecx,edi
   152c7:	call   0x148fe
   152cc:	mov    ecx,DWORD PTR [eax]
   152ce:	mov    eax,DWORD PTR [ebp+0x8]
   152d1:	mov    BYTE PTR [eax+0x4],0x1
   152d5:	jmp    0x15306
   152d7:	mov    ecx,ebx
   152d9:	mov    DWORD PTR [ebp-0x4],ecx
   152dc:	test   dl,dl
   152de:	je     0x152f2
   152e0:	mov    eax,DWORD PTR [edi+0x4]
   152e3:	cmp    ebx,DWORD PTR [eax]
   152e5:	je     0x152bc
   152e7:	lea    ecx,[ebp-0x4]
   152ea:	call   0x12e32
   152ef:	mov    ecx,DWORD PTR [ebp-0x4]
   152f2:	mov    edx,DWORD PTR [ecx+0xc]
   152f5:	mov    eax,DWORD PTR [ebp+0xc]
   152f8:	cmp    edx,DWORD PTR [eax]
   152fa:	jae    0x152ff
   152fc:	push   eax
   152fd:	jmp    0x152bf
   152ff:	mov    eax,DWORD PTR [ebp+0x8]
   15302:	mov    BYTE PTR [eax+0x4],0x0
   15306:	pop    edi
   15307:	pop    esi
   15308:	mov    DWORD PTR [eax],ecx
   1530a:	pop    ebx
   1530b:	leave  
   1530c:	ret    0x8
   1530f:	int3   
   15310:	int3   
   15311:	int3   
   15312:	int3   
   15313:	int3   
   15314:	mov    edi,edi
   15316:	push   ebp
   15317:	mov    ebp,esp
   15319:	push   ecx
   1531a:	push   ebx
   1531b:	push   esi
   1531c:	push   edi
   1531d:	mov    edi,ecx
   1531f:	mov    eax,DWORD PTR [edi+0x4]
   15322:	mov    esi,DWORD PTR [eax+0x4]
   15325:	mov    ebx,eax
   15327:	mov    eax,ds:0x786b0
   1532c:	mov    dl,0x1
   1532e:	cmp    esi,eax
   15330:	je     0x1534e
   15332:	mov    ecx,DWORD PTR [ebp+0xc]
   15335:	mov    ecx,DWORD PTR [ecx]
   15337:	cmp    ecx,DWORD PTR [esi+0xc]
   1533a:	mov    ebx,esi
   1533c:	setb   dl
   1533f:	test   dl,dl
   15341:	je     0x15347
   15343:	mov    esi,DWORD PTR [esi]
   15345:	jmp    0x1534a
   15347:	mov    esi,DWORD PTR [esi+0x8]
   1534a:	cmp    esi,eax
   1534c:	jne    0x15337
   1534e:	cmp    BYTE PTR [edi+0x8],0x0
   15352:	je     0x1536f
   15354:	push   DWORD PTR [ebp+0xc]
   15357:	push   ebx
   15358:	push   esi
   15359:	lea    eax,[ebp+0xc]
   1535c:	push   eax
   1535d:	mov    ecx,edi
   1535f:	call   0x14ab0
   15364:	mov    ecx,DWORD PTR [eax]
   15366:	mov    eax,DWORD PTR [ebp+0x8]
   15369:	mov    BYTE PTR [eax+0x4],0x1
   1536d:	jmp    0x1539e
   1536f:	mov    ecx,ebx
   15371:	mov    DWORD PTR [ebp-0x4],ecx
   15374:	test   dl,dl
   15376:	je     0x1538a
   15378:	mov    eax,DWORD PTR [edi+0x4]
   1537b:	cmp    ebx,DWORD PTR [eax]
   1537d:	je     0x15354
   1537f:	lea    ecx,[ebp-0x4]
   15382:	call   0x10eb4
   15387:	mov    ecx,DWORD PTR [ebp-0x4]
   1538a:	mov    edx,DWORD PTR [ecx+0xc]
   1538d:	mov    eax,DWORD PTR [ebp+0xc]
   15390:	cmp    edx,DWORD PTR [eax]
   15392:	jae    0x15397
   15394:	push   eax
   15395:	jmp    0x15357
   15397:	mov    eax,DWORD PTR [ebp+0x8]
   1539a:	mov    BYTE PTR [eax+0x4],0x0
   1539e:	pop    edi
   1539f:	pop    esi
   153a0:	mov    DWORD PTR [eax],ecx
   153a2:	pop    ebx
   153a3:	leave  
   153a4:	ret    0x8
   153a7:	int3   
   153a8:	int3   
   153a9:	int3   
   153aa:	int3   
   153ab:	int3   
   153ac:	mov    edi,edi
   153ae:	push   ebp
   153af:	mov    ebp,esp
   153b1:	push   ecx
   153b2:	push   esi
   153b3:	mov    esi,ecx
   153b5:	cmp    DWORD PTR [esi+0xc],0x0
   153b9:	mov    ecx,DWORD PTR [ebp+0xc]
   153bc:	je     0x153f6
   153be:	mov    eax,DWORD PTR [esi+0x4]
   153c1:	cmp    ecx,DWORD PTR [eax]
   153c3:	jne    0x153f6
   153c5:	cmp    DWORD PTR [ebp+0x10],eax
   153c8:	jne    0x153f6
   153ca:	push   DWORD PTR [eax+0x4]
   153cd:	mov    ecx,esi
   153cf:	call   0x14e62
   153d4:	mov    ecx,DWORD PTR ds:0x786c0
   153da:	mov    eax,DWORD PTR [esi+0x4]
   153dd:	mov    DWORD PTR [eax+0x4],ecx
   153e0:	mov    eax,DWORD PTR [esi+0x4]
   153e3:	and    DWORD PTR [esi+0xc],0x0
   153e7:	mov    DWORD PTR [eax],eax
   153e9:	mov    eax,DWORD PTR [esi+0x4]
   153ec:	mov    DWORD PTR [eax+0x8],eax
   153ef:	mov    eax,DWORD PTR [esi+0x4]
   153f2:	mov    ecx,DWORD PTR [eax]
   153f4:	jmp    0x1541b
   153f6:	cmp    ecx,DWORD PTR [ebp+0x10]
   153f9:	je     0x1541b
   153fb:	push   edi
   153fc:	mov    edi,ecx
   153fe:	lea    ecx,[ebp+0xc]
   15401:	call   0x11172
   15406:	push   edi
   15407:	lea    eax,[ebp-0x4]
   1540a:	push   eax
   1540b:	mov    ecx,esi
   1540d:	call   0x14c00
   15412:	mov    ecx,DWORD PTR [ebp+0xc]
   15415:	cmp    ecx,DWORD PTR [ebp+0x10]
   15418:	jne    0x153fc
   1541a:	pop    edi
   1541b:	mov    eax,DWORD PTR [ebp+0x8]
   1541e:	mov    DWORD PTR [eax],ecx
   15420:	pop    esi
   15421:	leave  
   15422:	ret    0xc
   15425:	int3   
   15426:	int3   
   15427:	int3   
   15428:	int3   
   15429:	int3   
   1542a:	mov    edi,edi
   1542c:	push   ebp
   1542d:	mov    ebp,esp
   1542f:	push   ecx
   15430:	push   ecx
   15431:	push   ebx
   15432:	push   esi
   15433:	mov    DWORD PTR [ebp-0x4],ecx
   15436:	push   edi
   15437:	mov    edi,DWORD PTR [ebp+0xc]
   1543a:	lea    ecx,[ebp+0xc]
   1543d:	call   0x12dfc
   15442:	mov    esi,DWORD PTR [edi]
   15444:	mov    eax,ds:0x786b8
   15449:	mov    ebx,edi
   1544b:	mov    DWORD PTR [ebp-0x8],esi
   1544e:	cmp    esi,eax
   15450:	jne    0x1546e
   15452:	mov    esi,DWORD PTR [edi+0x8]
   15455:	mov    eax,DWORD PTR [ebx+0x4]
   15458:	mov    ecx,DWORD PTR [ebp-0x4]
   1545b:	mov    DWORD PTR [esi+0x4],eax
   1545e:	mov    eax,DWORD PTR [ecx+0x4]
   15461:	cmp    DWORD PTR [eax+0x4],edi
   15464:	jne    0x154e3
   15466:	mov    DWORD PTR [eax+0x4],esi
   15469:	jmp    0x154f1
   1546e:	mov    ecx,DWORD PTR [edi+0x8]
   15471:	cmp    ecx,eax
   15473:	je     0x15455
   15475:	push   ecx
   15476:	call   0x10e92
   1547b:	mov    ebx,eax
   1547d:	mov    esi,DWORD PTR [ebx+0x8]
   15480:	cmp    ebx,edi
   15482:	je     0x15455
   15484:	mov    eax,DWORD PTR [ebp-0x8]
   15487:	mov    DWORD PTR [eax+0x4],ebx
   1548a:	mov    eax,DWORD PTR [edi]
   1548c:	mov    DWORD PTR [ebx],eax
   1548e:	cmp    ebx,DWORD PTR [edi+0x8]
   15491:	jne    0x15498
   15493:	mov    DWORD PTR [esi+0x4],ebx
   15496:	jmp    0x154af
   15498:	mov    eax,DWORD PTR [ebx+0x4]
   1549b:	mov    DWORD PTR [esi+0x4],eax
   1549e:	mov    eax,DWORD PTR [ebx+0x4]
   154a1:	mov    DWORD PTR [eax],esi
   154a3:	mov    eax,DWORD PTR [edi+0x8]
   154a6:	mov    DWORD PTR [ebx+0x8],eax
   154a9:	mov    eax,DWORD PTR [edi+0x8]
   154ac:	mov    DWORD PTR [eax+0x4],ebx
   154af:	mov    eax,DWORD PTR [ebp-0x4]
   154b2:	mov    eax,DWORD PTR [eax+0x4]
   154b5:	cmp    DWORD PTR [eax+0x4],edi
   154b8:	jne    0x154bf
   154ba:	mov    DWORD PTR [eax+0x4],ebx
   154bd:	jmp    0x154cd
   154bf:	mov    eax,DWORD PTR [edi+0x4]
   154c2:	cmp    DWORD PTR [eax],edi
   154c4:	jne    0x154ca
   154c6:	mov    DWORD PTR [eax],ebx
   154c8:	jmp    0x154cd
   154ca:	mov    DWORD PTR [eax+0x8],ebx
   154cd:	mov    eax,DWORD PTR [edi+0x4]
   154d0:	mov    DWORD PTR [ebx+0x4],eax
   154d3:	mov    eax,DWORD PTR [ebx+0x60]
   154d6:	mov    ecx,DWORD PTR [edi+0x60]
   154d9:	mov    DWORD PTR [ebx+0x60],ecx
   154dc:	mov    DWORD PTR [edi+0x60],eax
   154df:	mov    ebx,edi
   154e1:	jmp    0x15544
   154e3:	mov    eax,DWORD PTR [edi+0x4]
   154e6:	cmp    DWORD PTR [eax],edi
   154e8:	jne    0x154ee
   154ea:	mov    DWORD PTR [eax],esi
   154ec:	jmp    0x154f1
   154ee:	mov    DWORD PTR [eax+0x8],esi
   154f1:	mov    eax,DWORD PTR [ecx+0x4]
   154f4:	mov    DWORD PTR [ebp-0x8],eax
   154f7:	cmp    DWORD PTR [eax],edi
   154f9:	jne    0x1551b
   154fb:	mov    edx,DWORD PTR [edi+0x8]
   154fe:	cmp    edx,DWORD PTR ds:0x786b8
   15504:	jne    0x1550d
   15506:	mov    edx,DWORD PTR [edi+0x4]
   15509:	mov    DWORD PTR [eax],edx
   1550b:	jmp    0x1551b
   1550d:	push   esi
   1550e:	call   0x10e92
   15513:	mov    ecx,DWORD PTR [ebp-0x8]
   15516:	mov    DWORD PTR [ecx],eax
   15518:	mov    ecx,DWORD PTR [ebp-0x4]
   1551b:	mov    eax,DWORD PTR [ecx+0x4]
   1551e:	mov    DWORD PTR [ebp-0x8],eax
   15521:	cmp    DWORD PTR [eax+0x8],edi
   15524:	jne    0x15544
   15526:	mov    ecx,DWORD PTR [edi]
   15528:	cmp    ecx,DWORD PTR ds:0x786b8
   1552e:	jne    0x15538
   15530:	mov    ecx,DWORD PTR [edi+0x4]
   15533:	mov    DWORD PTR [eax+0x8],ecx
   15536:	jmp    0x15544
   15538:	push   esi
   15539:	call   0x10e70
   1553e:	mov    ecx,DWORD PTR [ebp-0x8]
   15541:	mov    DWORD PTR [ecx+0x8],eax
   15544:	xor    edi,edi
   15546:	inc    edi
   15547:	cmp    DWORD PTR [ebx+0x60],edi
   1554a:	jne    0x15661
   15550:	jmp    0x1560f
   15555:	cmp    DWORD PTR [esi+0x60],edi
   15558:	jne    0x1565e
   1555e:	mov    eax,DWORD PTR [esi+0x4]
   15561:	cmp    esi,DWORD PTR [eax]
   15563:	jne    0x155da
   15565:	mov    eax,DWORD PTR [eax+0x8]
   15568:	cmp    DWORD PTR [eax+0x60],0x0
   1556c:	jne    0x15586
   1556e:	mov    DWORD PTR [eax+0x60],edi
   15571:	mov    eax,DWORD PTR [esi+0x4]
   15574:	and    DWORD PTR [eax+0x60],0x0
   15578:	push   DWORD PTR [esi+0x4]
   1557b:	call   0x12f86
   15580:	mov    eax,DWORD PTR [esi+0x4]
   15583:	mov    eax,DWORD PTR [eax+0x8]
   15586:	mov    ecx,DWORD PTR [eax]
   15588:	cmp    DWORD PTR [ecx+0x60],edi
   1558b:	jne    0x15595
   1558d:	mov    ecx,DWORD PTR [eax+0x8]
   15590:	cmp    DWORD PTR [ecx+0x60],edi
   15593:	je     0x15608
   15595:	mov    ecx,DWORD PTR [eax+0x8]
   15598:	cmp    DWORD PTR [ecx+0x60],edi
   1559b:	jne    0x155b5
   1559d:	mov    ecx,DWORD PTR [eax]
   1559f:	mov    DWORD PTR [ecx+0x60],edi
   155a2:	mov    ecx,DWORD PTR [ebp-0x4]
   155a5:	and    DWORD PTR [eax+0x60],0x0
   155a9:	push   eax
   155aa:	call   0x12fd4
   155af:	mov    eax,DWORD PTR [esi+0x4]
   155b2:	mov    eax,DWORD PTR [eax+0x8]
   155b5:	mov    ecx,DWORD PTR [esi+0x4]
   155b8:	mov    ecx,DWORD PTR [ecx+0x60]
   155bb:	mov    DWORD PTR [eax+0x60],ecx
   155be:	mov    ecx,DWORD PTR [esi+0x4]
   155c1:	mov    DWORD PTR [ecx+0x60],edi
   155c4:	mov    eax,DWORD PTR [eax+0x8]
   155c7:	mov    ecx,DWORD PTR [ebp-0x4]
   155ca:	mov    DWORD PTR [eax+0x60],edi
   155cd:	push   DWORD PTR [esi+0x4]
   155d0:	call   0x12f86
   155d5:	jmp    0x1565e
   155da:	mov    eax,DWORD PTR [eax]
   155dc:	cmp    DWORD PTR [eax+0x60],0x0
   155e0:	jne    0x155f9
   155e2:	mov    DWORD PTR [eax+0x60],edi
   155e5:	mov    eax,DWORD PTR [esi+0x4]
   155e8:	and    DWORD PTR [eax+0x60],0x0
   155ec:	push   DWORD PTR [esi+0x4]
   155ef:	call   0x12fd4
   155f4:	mov    eax,DWORD PTR [esi+0x4]
   155f7:	mov    eax,DWORD PTR [eax]
   155f9:	mov    ecx,DWORD PTR [eax+0x8]
   155fc:	cmp    DWORD PTR [ecx+0x60],edi
   155ff:	jne    0x15620
   15601:	mov    ecx,DWORD PTR [eax]
   15603:	cmp    DWORD PTR [ecx+0x60],edi
   15606:	jne    0x15620
   15608:	and    DWORD PTR [eax+0x60],0x0
   1560c:	mov    esi,DWORD PTR [esi+0x4]
   1560f:	mov    ecx,DWORD PTR [ebp-0x4]
   15612:	mov    eax,DWORD PTR [ecx+0x4]
   15615:	cmp    esi,DWORD PTR [eax+0x4]
   15618:	jne    0x15555
   1561e:	jmp    0x1565e
   15620:	mov    ecx,DWORD PTR [eax]
   15622:	cmp    DWORD PTR [ecx+0x60],edi
   15625:	jne    0x1563f
   15627:	mov    ecx,DWORD PTR [eax+0x8]
   1562a:	mov    DWORD PTR [ecx+0x60],edi
   1562d:	mov    ecx,DWORD PTR [ebp-0x4]
   15630:	and    DWORD PTR [eax+0x60],0x0
   15634:	push   eax
   15635:	call   0x12f86
   1563a:	mov    eax,DWORD PTR [esi+0x4]
   1563d:	mov    eax,DWORD PTR [eax]
   1563f:	mov    ecx,DWORD PTR [esi+0x4]
   15642:	mov    ecx,DWORD PTR [ecx+0x60]
   15645:	mov    DWORD PTR [eax+0x60],ecx
   15648:	mov    ecx,DWORD PTR [esi+0x4]
   1564b:	mov    DWORD PTR [ecx+0x60],edi
   1564e:	mov    eax,DWORD PTR [eax]
   15650:	mov    ecx,DWORD PTR [ebp-0x4]
   15653:	mov    DWORD PTR [eax+0x60],edi
   15656:	push   DWORD PTR [esi+0x4]
   15659:	call   0x12fd4
   1565e:	mov    DWORD PTR [esi+0x60],edi
   15661:	lea    eax,[ebx+0x10]
   15664:	push   eax
   15665:	call   0x14426
   1566a:	push   ebx
   1566b:	call   0x11d22
   15670:	mov    eax,DWORD PTR [ebp-0x4]
   15673:	dec    DWORD PTR [eax+0xc]
   15676:	mov    eax,DWORD PTR [ebp+0x8]
   15679:	pop    ecx
   1567a:	mov    ecx,DWORD PTR [ebp+0xc]
   1567d:	pop    edi
   1567e:	pop    esi
   1567f:	mov    DWORD PTR [eax],ecx
   15681:	pop    ebx
   15682:	leave  
   15683:	ret    0x8
   15686:	int3   
   15687:	int3   
   15688:	int3   
   15689:	int3   
   1568a:	int3   
   1568b:	int3   
   1568c:	mov    edi,edi
   1568e:	push   ebp
   1568f:	mov    ebp,esp
   15691:	push   ebx
   15692:	push   esi
   15693:	push   edi
   15694:	mov    edi,DWORD PTR [ebp+0x8]
   15697:	mov    ebx,ecx
   15699:	mov    esi,edi
   1569b:	cmp    edi,DWORD PTR ds:0x786b8
   156a1:	je     0x156c9
   156a3:	push   DWORD PTR [esi+0x8]
   156a6:	mov    ecx,ebx
   156a8:	call   0x1568c
   156ad:	mov    esi,DWORD PTR [esi]
   156af:	lea    eax,[edi+0x10]
   156b2:	push   eax
   156b3:	call   0x14426
   156b8:	push   edi
   156b9:	call   0x11d22
   156be:	pop    ecx
   156bf:	mov    edi,esi
   156c1:	cmp    esi,DWORD PTR ds:0x786b8
   156c7:	jne    0x156a3
   156c9:	pop    edi
   156ca:	pop    esi
   156cb:	pop    ebx
   156cc:	pop    ebp
   156cd:	ret    0x4
   156d0:	int3   
   156d1:	int3   
   156d2:	int3   
   156d3:	int3   
   156d4:	int3   
   156d5:	int3   
   156d6:	mov    edi,edi
   156d8:	push   ebp
   156d9:	mov    ebp,esp
   156db:	push   ebx
   156dc:	push   esi
   156dd:	mov    esi,DWORD PTR [ebp+0x10]
   156e0:	push   edi
   156e1:	push   0x0
   156e3:	push   esi
   156e4:	mov    edi,ecx
   156e6:	call   0x143b8
   156eb:	push   DWORD PTR [ebp+0x14]
   156ee:	mov    ebx,eax
   156f0:	mov    eax,ds:0x786b8
   156f5:	mov    DWORD PTR [ebx],eax
   156f7:	mov    eax,ds:0x786b8
   156fc:	mov    DWORD PTR [ebx+0x8],eax
   156ff:	lea    eax,[ebx+0x10]
   15702:	push   eax
   15703:	call   0x14408
   15708:	inc    DWORD PTR [edi+0xc]
   1570b:	cmp    esi,DWORD PTR [edi+0x4]
   1570e:	je     0x15738
   15710:	mov    eax,DWORD PTR [ebp+0xc]
   15713:	cmp    eax,DWORD PTR ds:0x786b8
   15719:	jne    0x15738
   1571b:	lea    eax,[esi+0x10]
   1571e:	push   eax
   1571f:	push   DWORD PTR [ebp+0x14]
   15722:	call   0x19a08
   15727:	test   al,al
   15729:	jne    0x15738
   1572b:	mov    DWORD PTR [esi+0x8],ebx
   1572e:	mov    eax,DWORD PTR [edi+0x4]
   15731:	cmp    esi,DWORD PTR [eax+0x8]
   15734:	jne    0x15752
   15736:	jmp    0x15747
   15738:	mov    DWORD PTR [esi],ebx
   1573a:	mov    eax,DWORD PTR [edi+0x4]
   1573d:	cmp    esi,eax
   1573f:	jne    0x1574c
   15741:	mov    DWORD PTR [eax+0x4],ebx
   15744:	mov    eax,DWORD PTR [edi+0x4]
   15747:	mov    DWORD PTR [eax+0x8],ebx
   1574a:	jmp    0x15752
   1574c:	cmp    esi,DWORD PTR [eax]
   1574e:	jne    0x15752
   15750:	mov    DWORD PTR [eax],ebx
   15752:	mov    eax,DWORD PTR [edi+0x4]
   15755:	mov    esi,ebx
   15757:	cmp    ebx,DWORD PTR [eax+0x4]
   1575a:	je     0x1580e
   15760:	mov    eax,DWORD PTR [esi+0x4]
   15763:	xor    edx,edx
   15765:	cmp    DWORD PTR [eax+0x60],edx
   15768:	jne    0x1580e
   1576e:	mov    ecx,DWORD PTR [eax+0x4]
   15771:	cmp    eax,DWORD PTR [ecx]
   15773:	jne    0x157af
   15775:	mov    ecx,DWORD PTR [ecx+0x8]
   15778:	cmp    DWORD PTR [ecx+0x60],edx
   1577b:	je     0x157b6
   1577d:	cmp    esi,DWORD PTR [eax+0x8]
   15780:	jne    0x1578c
   15782:	mov    esi,eax
   15784:	push   esi
   15785:	mov    ecx,edi
   15787:	call   0x12f86
   1578c:	mov    eax,DWORD PTR [esi+0x4]
   1578f:	mov    DWORD PTR [eax+0x60],0x1
   15796:	mov    eax,DWORD PTR [esi+0x4]
   15799:	mov    eax,DWORD PTR [eax+0x4]
   1579c:	and    DWORD PTR [eax+0x60],0x0
   157a0:	mov    eax,DWORD PTR [esi+0x4]
   157a3:	push   DWORD PTR [eax+0x4]
   157a6:	mov    ecx,edi
   157a8:	call   0x12fd4
   157ad:	jmp    0x15802
   157af:	mov    ecx,DWORD PTR [ecx]
   157b1:	cmp    DWORD PTR [ecx+0x60],edx
   157b4:	jne    0x157d3
   157b6:	mov    edx,eax
   157b8:	xor    eax,eax
   157ba:	inc    eax
   157bb:	mov    DWORD PTR [edx+0x60],eax
   157be:	mov    DWORD PTR [ecx+0x60],eax
   157c1:	mov    eax,DWORD PTR [esi+0x4]
   157c4:	mov    eax,DWORD PTR [eax+0x4]
   157c7:	and    DWORD PTR [eax+0x60],0x0
   157cb:	mov    eax,DWORD PTR [esi+0x4]
   157ce:	mov    esi,DWORD PTR [eax+0x4]
   157d1:	jmp    0x15802
   157d3:	cmp    esi,DWORD PTR [eax]
   157d5:	jne    0x157e1
   157d7:	mov    esi,eax
   157d9:	push   esi
   157da:	mov    ecx,edi
   157dc:	call   0x12fd4
   157e1:	mov    eax,DWORD PTR [esi+0x4]
   157e4:	mov    DWORD PTR [eax+0x60],0x1
   157eb:	mov    eax,DWORD PTR [esi+0x4]
   157ee:	mov    eax,DWORD PTR [eax+0x4]
   157f1:	and    DWORD PTR [eax+0x60],0x0
   157f5:	mov    eax,DWORD PTR [esi+0x4]
   157f8:	push   DWORD PTR [eax+0x4]
   157fb:	mov    ecx,edi
   157fd:	call   0x12f86
   15802:	mov    eax,DWORD PTR [edi+0x4]
   15805:	cmp    esi,DWORD PTR [eax+0x4]
   15808:	jne    0x15760
   1580e:	mov    eax,DWORD PTR [edi+0x4]
   15811:	mov    eax,DWORD PTR [eax+0x4]
   15814:	pop    edi
   15815:	mov    DWORD PTR [eax+0x60],0x1
   1581c:	mov    eax,DWORD PTR [ebp+0x8]
   1581f:	pop    esi
   15820:	mov    DWORD PTR [eax],ebx
   15822:	pop    ebx
   15823:	pop    ebp
   15824:	ret    0x10
   15827:	int3   
   15828:	int3   
   15829:	int3   
   1582a:	int3   
   1582b:	int3   
   1582c:	mov    edi,edi
   1582e:	push   ebp
   1582f:	mov    ebp,esp
   15831:	push   ecx
   15832:	push   ecx
   15833:	push   ebx
   15834:	push   esi
   15835:	mov    DWORD PTR [ebp-0x4],ecx
   15838:	push   edi
   15839:	mov    edi,DWORD PTR [ebp+0xc]
   1583c:	lea    ecx,[ebp+0xc]
   1583f:	call   0x1373e
   15844:	mov    esi,DWORD PTR [edi]
   15846:	mov    eax,ds:0x786bc
   1584b:	mov    ebx,edi
   1584d:	mov    DWORD PTR [ebp-0x8],esi
   15850:	cmp    esi,eax
   15852:	jne    0x15870
   15854:	mov    esi,DWORD PTR [edi+0x8]
   15857:	mov    eax,DWORD PTR [ebx+0x4]
   1585a:	mov    ecx,DWORD PTR [ebp-0x4]
   1585d:	mov    DWORD PTR [esi+0x4],eax
   15860:	mov    eax,DWORD PTR [ecx+0x4]
   15863:	cmp    DWORD PTR [eax+0x4],edi
   15866:	jne    0x158e5
   15868:	mov    DWORD PTR [eax+0x4],esi
   1586b:	jmp    0x158f3
   15870:	mov    ecx,DWORD PTR [edi+0x8]
   15873:	cmp    ecx,eax
   15875:	je     0x15857
   15877:	push   ecx
   15878:	call   0x12c4c
   1587d:	mov    ebx,eax
   1587f:	mov    esi,DWORD PTR [ebx+0x8]
   15882:	cmp    ebx,edi
   15884:	je     0x15857
   15886:	mov    eax,DWORD PTR [ebp-0x8]
   15889:	mov    DWORD PTR [eax+0x4],ebx
   1588c:	mov    eax,DWORD PTR [edi]
   1588e:	mov    DWORD PTR [ebx],eax
   15890:	cmp    ebx,DWORD PTR [edi+0x8]
   15893:	jne    0x1589a
   15895:	mov    DWORD PTR [esi+0x4],ebx
   15898:	jmp    0x158b1
   1589a:	mov    eax,DWORD PTR [ebx+0x4]
   1589d:	mov    DWORD PTR [esi+0x4],eax
   158a0:	mov    eax,DWORD PTR [ebx+0x4]
   158a3:	mov    DWORD PTR [eax],esi
   158a5:	mov    eax,DWORD PTR [edi+0x8]
   158a8:	mov    DWORD PTR [ebx+0x8],eax
   158ab:	mov    eax,DWORD PTR [edi+0x8]
   158ae:	mov    DWORD PTR [eax+0x4],ebx
   158b1:	mov    eax,DWORD PTR [ebp-0x4]
   158b4:	mov    eax,DWORD PTR [eax+0x4]
   158b7:	cmp    DWORD PTR [eax+0x4],edi
   158ba:	jne    0x158c1
   158bc:	mov    DWORD PTR [eax+0x4],ebx
   158bf:	jmp    0x158cf
   158c1:	mov    eax,DWORD PTR [edi+0x4]
   158c4:	cmp    DWORD PTR [eax],edi
   158c6:	jne    0x158cc
   158c8:	mov    DWORD PTR [eax],ebx
   158ca:	jmp    0x158cf
   158cc:	mov    DWORD PTR [eax+0x8],ebx
   158cf:	mov    eax,DWORD PTR [edi+0x4]
   158d2:	mov    DWORD PTR [ebx+0x4],eax
   158d5:	mov    eax,DWORD PTR [ebx+0x58]
   158d8:	mov    ecx,DWORD PTR [edi+0x58]
   158db:	mov    DWORD PTR [ebx+0x58],ecx
   158de:	mov    DWORD PTR [edi+0x58],eax
   158e1:	mov    ebx,edi
   158e3:	jmp    0x15946
   158e5:	mov    eax,DWORD PTR [edi+0x4]
   158e8:	cmp    DWORD PTR [eax],edi
   158ea:	jne    0x158f0
   158ec:	mov    DWORD PTR [eax],esi
   158ee:	jmp    0x158f3
   158f0:	mov    DWORD PTR [eax+0x8],esi
   158f3:	mov    eax,DWORD PTR [ecx+0x4]
   158f6:	mov    DWORD PTR [ebp-0x8],eax
   158f9:	cmp    DWORD PTR [eax],edi
   158fb:	jne    0x1591d
   158fd:	mov    edx,DWORD PTR [edi+0x8]
   15900:	cmp    edx,DWORD PTR ds:0x786bc
   15906:	jne    0x1590f
   15908:	mov    edx,DWORD PTR [edi+0x4]
   1590b:	mov    DWORD PTR [eax],edx
   1590d:	jmp    0x1591d
   1590f:	push   esi
   15910:	call   0x12c4c
   15915:	mov    ecx,DWORD PTR [ebp-0x8]
   15918:	mov    DWORD PTR [ecx],eax
   1591a:	mov    ecx,DWORD PTR [ebp-0x4]
   1591d:	mov    eax,DWORD PTR [ecx+0x4]
   15920:	mov    DWORD PTR [ebp-0x8],eax
   15923:	cmp    DWORD PTR [eax+0x8],edi
   15926:	jne    0x15946
   15928:	mov    ecx,DWORD PTR [edi]
   1592a:	cmp    ecx,DWORD PTR ds:0x786bc
   15930:	jne    0x1593a
   15932:	mov    ecx,DWORD PTR [edi+0x4]
   15935:	mov    DWORD PTR [eax+0x8],ecx
   15938:	jmp    0x15946
   1593a:	push   esi
   1593b:	call   0x10f78
   15940:	mov    ecx,DWORD PTR [ebp-0x8]
   15943:	mov    DWORD PTR [ecx+0x8],eax
   15946:	xor    edi,edi
   15948:	inc    edi
   15949:	cmp    DWORD PTR [ebx+0x58],edi
   1594c:	jne    0x15a63
   15952:	jmp    0x15a11
   15957:	cmp    DWORD PTR [esi+0x58],edi
   1595a:	jne    0x15a60
   15960:	mov    eax,DWORD PTR [esi+0x4]
   15963:	cmp    esi,DWORD PTR [eax]
   15965:	jne    0x159dc
   15967:	mov    eax,DWORD PTR [eax+0x8]
   1596a:	cmp    DWORD PTR [eax+0x58],0x0
   1596e:	jne    0x15988
   15970:	mov    DWORD PTR [eax+0x58],edi
   15973:	mov    eax,DWORD PTR [esi+0x4]
   15976:	and    DWORD PTR [eax+0x58],0x0
   1597a:	push   DWORD PTR [esi+0x4]
   1597d:	call   0x10f2a
   15982:	mov    eax,DWORD PTR [esi+0x4]
   15985:	mov    eax,DWORD PTR [eax+0x8]
   15988:	mov    ecx,DWORD PTR [eax]
   1598a:	cmp    DWORD PTR [ecx+0x58],edi
   1598d:	jne    0x15997
   1598f:	mov    ecx,DWORD PTR [eax+0x8]
   15992:	cmp    DWORD PTR [ecx+0x58],edi
   15995:	je     0x15a0a
   15997:	mov    ecx,DWORD PTR [eax+0x8]
   1599a:	cmp    DWORD PTR [ecx+0x58],edi
   1599d:	jne    0x159b7
   1599f:	mov    ecx,DWORD PTR [eax]
   159a1:	mov    DWORD PTR [ecx+0x58],edi
   159a4:	mov    ecx,DWORD PTR [ebp-0x4]
   159a7:	and    DWORD PTR [eax+0x58],0x0
   159ab:	push   eax
   159ac:	call   0x10f9a
   159b1:	mov    eax,DWORD PTR [esi+0x4]
   159b4:	mov    eax,DWORD PTR [eax+0x8]
   159b7:	mov    ecx,DWORD PTR [esi+0x4]
   159ba:	mov    ecx,DWORD PTR [ecx+0x58]
   159bd:	mov    DWORD PTR [eax+0x58],ecx
   159c0:	mov    ecx,DWORD PTR [esi+0x4]
   159c3:	mov    DWORD PTR [ecx+0x58],edi
   159c6:	mov    eax,DWORD PTR [eax+0x8]
   159c9:	mov    ecx,DWORD PTR [ebp-0x4]
   159cc:	mov    DWORD PTR [eax+0x58],edi
   159cf:	push   DWORD PTR [esi+0x4]
   159d2:	call   0x10f2a
   159d7:	jmp    0x15a60
   159dc:	mov    eax,DWORD PTR [eax]
   159de:	cmp    DWORD PTR [eax+0x58],0x0
   159e2:	jne    0x159fb
   159e4:	mov    DWORD PTR [eax+0x58],edi
   159e7:	mov    eax,DWORD PTR [esi+0x4]
   159ea:	and    DWORD PTR [eax+0x58],0x0
   159ee:	push   DWORD PTR [esi+0x4]
   159f1:	call   0x10f9a
   159f6:	mov    eax,DWORD PTR [esi+0x4]
   159f9:	mov    eax,DWORD PTR [eax]
   159fb:	mov    ecx,DWORD PTR [eax+0x8]
   159fe:	cmp    DWORD PTR [ecx+0x58],edi
   15a01:	jne    0x15a22
   15a03:	mov    ecx,DWORD PTR [eax]
   15a05:	cmp    DWORD PTR [ecx+0x58],edi
   15a08:	jne    0x15a22
   15a0a:	and    DWORD PTR [eax+0x58],0x0
   15a0e:	mov    esi,DWORD PTR [esi+0x4]
   15a11:	mov    ecx,DWORD PTR [ebp-0x4]
   15a14:	mov    eax,DWORD PTR [ecx+0x4]
   15a17:	cmp    esi,DWORD PTR [eax+0x4]
   15a1a:	jne    0x15957
   15a20:	jmp    0x15a60
   15a22:	mov    ecx,DWORD PTR [eax]
   15a24:	cmp    DWORD PTR [ecx+0x58],edi
   15a27:	jne    0x15a41
   15a29:	mov    ecx,DWORD PTR [eax+0x8]
   15a2c:	mov    DWORD PTR [ecx+0x58],edi
   15a2f:	mov    ecx,DWORD PTR [ebp-0x4]
   15a32:	and    DWORD PTR [eax+0x58],0x0
   15a36:	push   eax
   15a37:	call   0x10f2a
   15a3c:	mov    eax,DWORD PTR [esi+0x4]
   15a3f:	mov    eax,DWORD PTR [eax]
   15a41:	mov    ecx,DWORD PTR [esi+0x4]
   15a44:	mov    ecx,DWORD PTR [ecx+0x58]
   15a47:	mov    DWORD PTR [eax+0x58],ecx
   15a4a:	mov    ecx,DWORD PTR [esi+0x4]
   15a4d:	mov    DWORD PTR [ecx+0x58],edi
   15a50:	mov    eax,DWORD PTR [eax]
   15a52:	mov    ecx,DWORD PTR [ebp-0x4]
   15a55:	mov    DWORD PTR [eax+0x58],edi
   15a58:	push   DWORD PTR [esi+0x4]
   15a5b:	call   0x10f9a
   15a60:	mov    DWORD PTR [esi+0x58],edi
   15a63:	lea    eax,[ebx+0x10]
   15a66:	push   eax
   15a67:	call   0x14426
   15a6c:	push   ebx
   15a6d:	call   0x11d22
   15a72:	mov    eax,DWORD PTR [ebp-0x4]
   15a75:	dec    DWORD PTR [eax+0xc]
   15a78:	mov    eax,DWORD PTR [ebp+0x8]
   15a7b:	pop    ecx
   15a7c:	mov    ecx,DWORD PTR [ebp+0xc]
   15a7f:	pop    edi
   15a80:	pop    esi
   15a81:	mov    DWORD PTR [eax],ecx
   15a83:	pop    ebx
   15a84:	leave  
   15a85:	ret    0x8
   15a88:	int3   
   15a89:	int3   
   15a8a:	int3   
   15a8b:	int3   
   15a8c:	int3   
   15a8d:	int3   
   15a8e:	mov    edi,edi
   15a90:	push   ebp
   15a91:	mov    ebp,esp
   15a93:	push   ebx
   15a94:	push   esi
   15a95:	push   edi
   15a96:	mov    edi,DWORD PTR [ebp+0x8]
   15a99:	mov    ebx,ecx
   15a9b:	mov    esi,edi
   15a9d:	cmp    edi,DWORD PTR ds:0x786bc
   15aa3:	je     0x15acb
   15aa5:	push   DWORD PTR [esi+0x8]
   15aa8:	mov    ecx,ebx
   15aaa:	call   0x15a8e
   15aaf:	mov    esi,DWORD PTR [esi]
   15ab1:	lea    eax,[edi+0x10]
   15ab4:	push   eax
   15ab5:	call   0x14426
   15aba:	push   edi
   15abb:	call   0x11d22
   15ac0:	pop    ecx
   15ac1:	mov    edi,esi
   15ac3:	cmp    esi,DWORD PTR ds:0x786bc
   15ac9:	jne    0x15aa5
   15acb:	pop    edi
   15acc:	pop    esi
   15acd:	pop    ebx
   15ace:	pop    ebp
   15acf:	ret    0x4
   15ad2:	int3   
   15ad3:	int3   
   15ad4:	int3   
   15ad5:	int3   
   15ad6:	int3   
   15ad7:	int3   
   15ad8:	mov    edi,edi
   15ada:	push   ebp
   15adb:	mov    ebp,esp
   15add:	push   ebx
   15ade:	push   esi
   15adf:	mov    esi,DWORD PTR [ebp+0x10]
   15ae2:	push   edi
   15ae3:	push   0x0
   15ae5:	push   esi
   15ae6:	mov    edi,ecx
   15ae8:	call   0x1434c
   15aed:	push   DWORD PTR [ebp+0x14]
   15af0:	mov    ebx,eax
   15af2:	mov    eax,ds:0x786bc
   15af7:	mov    DWORD PTR [ebx],eax
   15af9:	mov    eax,ds:0x786bc
   15afe:	mov    DWORD PTR [ebx+0x8],eax
   15b01:	lea    eax,[ebx+0x10]
   15b04:	push   eax
   15b05:	call   0x1443e
   15b0a:	inc    DWORD PTR [edi+0xc]
   15b0d:	cmp    esi,DWORD PTR [edi+0x4]
   15b10:	je     0x15b3a
   15b12:	mov    eax,DWORD PTR [ebp+0xc]
   15b15:	cmp    eax,DWORD PTR ds:0x786bc
   15b1b:	jne    0x15b3a
   15b1d:	lea    eax,[esi+0x10]
   15b20:	push   eax
   15b21:	push   DWORD PTR [ebp+0x14]
   15b24:	call   0x19a08
   15b29:	test   al,al
   15b2b:	jne    0x15b3a
   15b2d:	mov    DWORD PTR [esi+0x8],ebx
   15b30:	mov    eax,DWORD PTR [edi+0x4]
   15b33:	cmp    esi,DWORD PTR [eax+0x8]
   15b36:	jne    0x15b54
   15b38:	jmp    0x15b49
   15b3a:	mov    DWORD PTR [esi],ebx
   15b3c:	mov    eax,DWORD PTR [edi+0x4]
   15b3f:	cmp    esi,eax
   15b41:	jne    0x15b4e
   15b43:	mov    DWORD PTR [eax+0x4],ebx
   15b46:	mov    eax,DWORD PTR [edi+0x4]
   15b49:	mov    DWORD PTR [eax+0x8],ebx
   15b4c:	jmp    0x15b54
   15b4e:	cmp    esi,DWORD PTR [eax]
   15b50:	jne    0x15b54
   15b52:	mov    DWORD PTR [eax],ebx
   15b54:	mov    eax,DWORD PTR [edi+0x4]
   15b57:	mov    esi,ebx
   15b59:	cmp    ebx,DWORD PTR [eax+0x4]
   15b5c:	je     0x15c10
   15b62:	mov    eax,DWORD PTR [esi+0x4]
   15b65:	xor    edx,edx
   15b67:	cmp    DWORD PTR [eax+0x58],edx
   15b6a:	jne    0x15c10
   15b70:	mov    ecx,DWORD PTR [eax+0x4]
   15b73:	cmp    eax,DWORD PTR [ecx]
   15b75:	jne    0x15bb1
   15b77:	mov    ecx,DWORD PTR [ecx+0x8]
   15b7a:	cmp    DWORD PTR [ecx+0x58],edx
   15b7d:	je     0x15bb8
   15b7f:	cmp    esi,DWORD PTR [eax+0x8]
   15b82:	jne    0x15b8e
   15b84:	mov    esi,eax
   15b86:	push   esi
   15b87:	mov    ecx,edi
   15b89:	call   0x10f2a
   15b8e:	mov    eax,DWORD PTR [esi+0x4]
   15b91:	mov    DWORD PTR [eax+0x58],0x1
   15b98:	mov    eax,DWORD PTR [esi+0x4]
   15b9b:	mov    eax,DWORD PTR [eax+0x4]
   15b9e:	and    DWORD PTR [eax+0x58],0x0
   15ba2:	mov    eax,DWORD PTR [esi+0x4]
   15ba5:	push   DWORD PTR [eax+0x4]
   15ba8:	mov    ecx,edi
   15baa:	call   0x10f9a
   15baf:	jmp    0x15c04
   15bb1:	mov    ecx,DWORD PTR [ecx]
   15bb3:	cmp    DWORD PTR [ecx+0x58],edx
   15bb6:	jne    0x15bd5
   15bb8:	mov    edx,eax
   15bba:	xor    eax,eax
   15bbc:	inc    eax
   15bbd:	mov    DWORD PTR [edx+0x58],eax
   15bc0:	mov    DWORD PTR [ecx+0x58],eax
   15bc3:	mov    eax,DWORD PTR [esi+0x4]
   15bc6:	mov    eax,DWORD PTR [eax+0x4]
   15bc9:	and    DWORD PTR [eax+0x58],0x0
   15bcd:	mov    eax,DWORD PTR [esi+0x4]
   15bd0:	mov    esi,DWORD PTR [eax+0x4]
   15bd3:	jmp    0x15c04
   15bd5:	cmp    esi,DWORD PTR [eax]
   15bd7:	jne    0x15be3
   15bd9:	mov    esi,eax
   15bdb:	push   esi
   15bdc:	mov    ecx,edi
   15bde:	call   0x10f9a
   15be3:	mov    eax,DWORD PTR [esi+0x4]
   15be6:	mov    DWORD PTR [eax+0x58],0x1
   15bed:	mov    eax,DWORD PTR [esi+0x4]
   15bf0:	mov    eax,DWORD PTR [eax+0x4]
   15bf3:	and    DWORD PTR [eax+0x58],0x0
   15bf7:	mov    eax,DWORD PTR [esi+0x4]
   15bfa:	push   DWORD PTR [eax+0x4]
   15bfd:	mov    ecx,edi
   15bff:	call   0x10f2a
   15c04:	mov    eax,DWORD PTR [edi+0x4]
   15c07:	cmp    esi,DWORD PTR [eax+0x4]
   15c0a:	jne    0x15b62
   15c10:	mov    eax,DWORD PTR [edi+0x4]
   15c13:	mov    eax,DWORD PTR [eax+0x4]
   15c16:	pop    edi
   15c17:	mov    DWORD PTR [eax+0x58],0x1
   15c1e:	mov    eax,DWORD PTR [ebp+0x8]
   15c21:	pop    esi
   15c22:	mov    DWORD PTR [eax],ebx
   15c24:	pop    ebx
   15c25:	pop    ebp
   15c26:	ret    0x10
   15c29:	int3   
   15c2a:	int3   
   15c2b:	int3   
   15c2c:	int3   
   15c2d:	int3   
   15c2e:	mov    edi,edi
   15c30:	push   ebp
   15c31:	mov    ebp,esp
   15c33:	push   ebx
   15c34:	push   esi
   15c35:	mov    esi,DWORD PTR [ebp+0x10]
   15c38:	push   edi
   15c39:	push   0x0
   15c3b:	push   esi
   15c3c:	mov    edi,ecx
   15c3e:	call   0x14370
   15c43:	push   DWORD PTR [ebp+0x14]
   15c46:	mov    ebx,eax
   15c48:	mov    eax,ds:0x786c0
   15c4d:	mov    DWORD PTR [ebx],eax
   15c4f:	mov    eax,ds:0x786c0
   15c54:	mov    DWORD PTR [ebx+0x8],eax
   15c57:	lea    eax,[ebx+0xc]
   15c5a:	push   eax
   15c5b:	call   0x1445c
   15c60:	inc    DWORD PTR [edi+0xc]
   15c63:	cmp    esi,DWORD PTR [edi+0x4]
   15c66:	je     0x15c90
   15c68:	mov    eax,DWORD PTR [ebp+0xc]
   15c6b:	cmp    eax,DWORD PTR ds:0x786c0
   15c71:	jne    0x15c90
   15c73:	lea    eax,[esi+0xc]
   15c76:	push   eax
   15c77:	push   DWORD PTR [ebp+0x14]
   15c7a:	call   0x19a08
   15c7f:	test   al,al
   15c81:	jne    0x15c90
   15c83:	mov    DWORD PTR [esi+0x8],ebx
   15c86:	mov    eax,DWORD PTR [edi+0x4]
   15c89:	cmp    esi,DWORD PTR [eax+0x8]
   15c8c:	jne    0x15caa
   15c8e:	jmp    0x15c9f
   15c90:	mov    DWORD PTR [esi],ebx
   15c92:	mov    eax,DWORD PTR [edi+0x4]
   15c95:	cmp    esi,eax
   15c97:	jne    0x15ca4
   15c99:	mov    DWORD PTR [eax+0x4],ebx
   15c9c:	mov    eax,DWORD PTR [edi+0x4]
   15c9f:	mov    DWORD PTR [eax+0x8],ebx
   15ca2:	jmp    0x15caa
   15ca4:	cmp    esi,DWORD PTR [eax]
   15ca6:	jne    0x15caa
   15ca8:	mov    DWORD PTR [eax],ebx
   15caa:	mov    eax,DWORD PTR [edi+0x4]
   15cad:	mov    esi,ebx
   15caf:	cmp    ebx,DWORD PTR [eax+0x4]
   15cb2:	je     0x15d66
   15cb8:	mov    eax,DWORD PTR [esi+0x4]
   15cbb:	xor    edx,edx
   15cbd:	cmp    DWORD PTR [eax+0x1c],edx
   15cc0:	jne    0x15d66
   15cc6:	mov    ecx,DWORD PTR [eax+0x4]
   15cc9:	cmp    eax,DWORD PTR [ecx]
   15ccb:	jne    0x15d07
   15ccd:	mov    ecx,DWORD PTR [ecx+0x8]
   15cd0:	cmp    DWORD PTR [ecx+0x1c],edx
   15cd3:	je     0x15d0e
   15cd5:	cmp    esi,DWORD PTR [eax+0x8]
   15cd8:	jne    0x15ce4
   15cda:	mov    esi,eax
   15cdc:	push   esi
   15cdd:	mov    ecx,edi
   15cdf:	call   0x1309c
   15ce4:	mov    eax,DWORD PTR [esi+0x4]
   15ce7:	mov    DWORD PTR [eax+0x1c],0x1
   15cee:	mov    eax,DWORD PTR [esi+0x4]
   15cf1:	mov    eax,DWORD PTR [eax+0x4]
   15cf4:	and    DWORD PTR [eax+0x1c],0x0
   15cf8:	mov    eax,DWORD PTR [esi+0x4]
   15cfb:	push   DWORD PTR [eax+0x4]
   15cfe:	mov    ecx,edi
   15d00:	call   0x130ea
   15d05:	jmp    0x15d5a
   15d07:	mov    ecx,DWORD PTR [ecx]
   15d09:	cmp    DWORD PTR [ecx+0x1c],edx
   15d0c:	jne    0x15d2b
   15d0e:	mov    edx,eax
   15d10:	xor    eax,eax
   15d12:	inc    eax
   15d13:	mov    DWORD PTR [edx+0x1c],eax
   15d16:	mov    DWORD PTR [ecx+0x1c],eax
   15d19:	mov    eax,DWORD PTR [esi+0x4]
   15d1c:	mov    eax,DWORD PTR [eax+0x4]
   15d1f:	and    DWORD PTR [eax+0x1c],0x0
   15d23:	mov    eax,DWORD PTR [esi+0x4]
   15d26:	mov    esi,DWORD PTR [eax+0x4]
   15d29:	jmp    0x15d5a
   15d2b:	cmp    esi,DWORD PTR [eax]
   15d2d:	jne    0x15d39
   15d2f:	mov    esi,eax
   15d31:	push   esi
   15d32:	mov    ecx,edi
   15d34:	call   0x130ea
   15d39:	mov    eax,DWORD PTR [esi+0x4]
   15d3c:	mov    DWORD PTR [eax+0x1c],0x1
   15d43:	mov    eax,DWORD PTR [esi+0x4]
   15d46:	mov    eax,DWORD PTR [eax+0x4]
   15d49:	and    DWORD PTR [eax+0x1c],0x0
   15d4d:	mov    eax,DWORD PTR [esi+0x4]
   15d50:	push   DWORD PTR [eax+0x4]
   15d53:	mov    ecx,edi
   15d55:	call   0x1309c
   15d5a:	mov    eax,DWORD PTR [edi+0x4]
   15d5d:	cmp    esi,DWORD PTR [eax+0x4]
   15d60:	jne    0x15cb8
   15d66:	mov    eax,DWORD PTR [edi+0x4]
   15d69:	mov    eax,DWORD PTR [eax+0x4]
   15d6c:	pop    edi
   15d6d:	mov    DWORD PTR [eax+0x1c],0x1
   15d74:	mov    eax,DWORD PTR [ebp+0x8]
   15d77:	pop    esi
   15d78:	mov    DWORD PTR [eax],ebx
   15d7a:	pop    ebx
   15d7b:	pop    ebp
   15d7c:	ret    0x10
   15d7f:	int3   
   15d80:	int3   
   15d81:	int3   
   15d82:	int3   
   15d83:	int3   
   15d84:	mov    edi,edi
   15d86:	push   ebp
   15d87:	mov    ebp,esp
   15d89:	push   ecx
   15d8a:	push   ecx
   15d8b:	push   ebx
   15d8c:	push   esi
   15d8d:	mov    DWORD PTR [ebp-0x4],ecx
   15d90:	push   edi
   15d91:	mov    edi,DWORD PTR [ebp+0xc]
   15d94:	lea    ecx,[ebp+0xc]
   15d97:	call   0x111a8
   15d9c:	mov    esi,DWORD PTR [edi]
   15d9e:	mov    eax,ds:0x786c4
   15da3:	mov    ebx,edi
   15da5:	mov    DWORD PTR [ebp-0x8],esi
   15da8:	cmp    esi,eax
   15daa:	jne    0x15dc8
   15dac:	mov    esi,DWORD PTR [edi+0x8]
   15daf:	mov    eax,DWORD PTR [ebx+0x4]
   15db2:	mov    ecx,DWORD PTR [ebp-0x4]
   15db5:	mov    DWORD PTR [esi+0x4],eax
   15db8:	mov    eax,DWORD PTR [ecx+0x4]
   15dbb:	cmp    DWORD PTR [eax+0x4],edi
   15dbe:	jne    0x15e3d
   15dc0:	mov    DWORD PTR [eax+0x4],esi
   15dc3:	jmp    0x15e4b
   15dc8:	mov    ecx,DWORD PTR [edi+0x8]
   15dcb:	cmp    ecx,eax
   15dcd:	je     0x15daf
   15dcf:	push   ecx
   15dd0:	call   0x110d0
   15dd5:	mov    ebx,eax
   15dd7:	mov    esi,DWORD PTR [ebx+0x8]
   15dda:	cmp    ebx,edi
   15ddc:	je     0x15daf
   15dde:	mov    eax,DWORD PTR [ebp-0x8]
   15de1:	mov    DWORD PTR [eax+0x4],ebx
   15de4:	mov    eax,DWORD PTR [edi]
   15de6:	mov    DWORD PTR [ebx],eax
   15de8:	cmp    ebx,DWORD PTR [edi+0x8]
   15deb:	jne    0x15df2
   15ded:	mov    DWORD PTR [esi+0x4],ebx
   15df0:	jmp    0x15e09
   15df2:	mov    eax,DWORD PTR [ebx+0x4]
   15df5:	mov    DWORD PTR [esi+0x4],eax
   15df8:	mov    eax,DWORD PTR [ebx+0x4]
   15dfb:	mov    DWORD PTR [eax],esi
   15dfd:	mov    eax,DWORD PTR [edi+0x8]
   15e00:	mov    DWORD PTR [ebx+0x8],eax
   15e03:	mov    eax,DWORD PTR [edi+0x8]
   15e06:	mov    DWORD PTR [eax+0x4],ebx
   15e09:	mov    eax,DWORD PTR [ebp-0x4]
   15e0c:	mov    eax,DWORD PTR [eax+0x4]
   15e0f:	cmp    DWORD PTR [eax+0x4],edi
   15e12:	jne    0x15e19
   15e14:	mov    DWORD PTR [eax+0x4],ebx
   15e17:	jmp    0x15e27
   15e19:	mov    eax,DWORD PTR [edi+0x4]
   15e1c:	cmp    DWORD PTR [eax],edi
   15e1e:	jne    0x15e24
   15e20:	mov    DWORD PTR [eax],ebx
   15e22:	jmp    0x15e27
   15e24:	mov    DWORD PTR [eax+0x8],ebx
   15e27:	mov    eax,DWORD PTR [edi+0x4]
   15e2a:	mov    DWORD PTR [ebx+0x4],eax
   15e2d:	mov    eax,DWORD PTR [ebx+0x14]
   15e30:	mov    ecx,DWORD PTR [edi+0x14]
   15e33:	mov    DWORD PTR [ebx+0x14],ecx
   15e36:	mov    DWORD PTR [edi+0x14],eax
   15e39:	mov    ebx,edi
   15e3b:	jmp    0x15e9e
   15e3d:	mov    eax,DWORD PTR [edi+0x4]
   15e40:	cmp    DWORD PTR [eax],edi
   15e42:	jne    0x15e48
   15e44:	mov    DWORD PTR [eax],esi
   15e46:	jmp    0x15e4b
   15e48:	mov    DWORD PTR [eax+0x8],esi
   15e4b:	mov    eax,DWORD PTR [ecx+0x4]
   15e4e:	mov    DWORD PTR [ebp-0x8],eax
   15e51:	cmp    DWORD PTR [eax],edi
   15e53:	jne    0x15e75
   15e55:	mov    edx,DWORD PTR [edi+0x8]
   15e58:	cmp    edx,DWORD PTR ds:0x786c4
   15e5e:	jne    0x15e67
   15e60:	mov    edx,DWORD PTR [edi+0x4]
   15e63:	mov    DWORD PTR [eax],edx
   15e65:	jmp    0x15e75
   15e67:	push   esi
   15e68:	call   0x110d0
   15e6d:	mov    ecx,DWORD PTR [ebp-0x8]
   15e70:	mov    DWORD PTR [ecx],eax
   15e72:	mov    ecx,DWORD PTR [ebp-0x4]
   15e75:	mov    eax,DWORD PTR [ecx+0x4]
   15e78:	mov    DWORD PTR [ebp-0x8],eax
   15e7b:	cmp    DWORD PTR [eax+0x8],edi
   15e7e:	jne    0x15e9e
   15e80:	mov    ecx,DWORD PTR [edi]
   15e82:	cmp    ecx,DWORD PTR ds:0x786c4
   15e88:	jne    0x15e92
   15e8a:	mov    ecx,DWORD PTR [edi+0x4]
   15e8d:	mov    DWORD PTR [eax+0x8],ecx
   15e90:	jmp    0x15e9e
   15e92:	push   esi
   15e93:	call   0x110ae
   15e98:	mov    ecx,DWORD PTR [ebp-0x8]
   15e9b:	mov    DWORD PTR [ecx+0x8],eax
   15e9e:	xor    edi,edi
   15ea0:	inc    edi
   15ea1:	cmp    DWORD PTR [ebx+0x14],edi
   15ea4:	jne    0x15fbb
   15eaa:	jmp    0x15f69
   15eaf:	cmp    DWORD PTR [esi+0x14],edi
   15eb2:	jne    0x15fb8
   15eb8:	mov    eax,DWORD PTR [esi+0x4]
   15ebb:	cmp    esi,DWORD PTR [eax]
   15ebd:	jne    0x15f34
   15ebf:	mov    eax,DWORD PTR [eax+0x8]
   15ec2:	cmp    DWORD PTR [eax+0x14],0x0
   15ec6:	jne    0x15ee0
   15ec8:	mov    DWORD PTR [eax+0x14],edi
   15ecb:	mov    eax,DWORD PTR [esi+0x4]
   15ece:	and    DWORD PTR [eax+0x14],0x0
   15ed2:	push   DWORD PTR [esi+0x4]
   15ed5:	call   0x1317a
   15eda:	mov    eax,DWORD PTR [esi+0x4]
   15edd:	mov    eax,DWORD PTR [eax+0x8]
   15ee0:	mov    ecx,DWORD PTR [eax]
   15ee2:	cmp    DWORD PTR [ecx+0x14],edi
   15ee5:	jne    0x15eef
   15ee7:	mov    ecx,DWORD PTR [eax+0x8]
   15eea:	cmp    DWORD PTR [ecx+0x14],edi
   15eed:	je     0x15f62
   15eef:	mov    ecx,DWORD PTR [eax+0x8]
   15ef2:	cmp    DWORD PTR [ecx+0x14],edi
   15ef5:	jne    0x15f0f
   15ef7:	mov    ecx,DWORD PTR [eax]
   15ef9:	mov    DWORD PTR [ecx+0x14],edi
   15efc:	mov    ecx,DWORD PTR [ebp-0x4]
   15eff:	and    DWORD PTR [eax+0x14],0x0
   15f03:	push   eax
   15f04:	call   0x131c8
   15f09:	mov    eax,DWORD PTR [esi+0x4]
   15f0c:	mov    eax,DWORD PTR [eax+0x8]
   15f0f:	mov    ecx,DWORD PTR [esi+0x4]
   15f12:	mov    ecx,DWORD PTR [ecx+0x14]
   15f15:	mov    DWORD PTR [eax+0x14],ecx
   15f18:	mov    ecx,DWORD PTR [esi+0x4]
   15f1b:	mov    DWORD PTR [ecx+0x14],edi
   15f1e:	mov    eax,DWORD PTR [eax+0x8]
   15f21:	mov    ecx,DWORD PTR [ebp-0x4]
   15f24:	mov    DWORD PTR [eax+0x14],edi
   15f27:	push   DWORD PTR [esi+0x4]
   15f2a:	call   0x1317a
   15f2f:	jmp    0x15fb8
   15f34:	mov    eax,DWORD PTR [eax]
   15f36:	cmp    DWORD PTR [eax+0x14],0x0
   15f3a:	jne    0x15f53
   15f3c:	mov    DWORD PTR [eax+0x14],edi
   15f3f:	mov    eax,DWORD PTR [esi+0x4]
   15f42:	and    DWORD PTR [eax+0x14],0x0
   15f46:	push   DWORD PTR [esi+0x4]
   15f49:	call   0x131c8
   15f4e:	mov    eax,DWORD PTR [esi+0x4]
   15f51:	mov    eax,DWORD PTR [eax]
   15f53:	mov    ecx,DWORD PTR [eax+0x8]
   15f56:	cmp    DWORD PTR [ecx+0x14],edi
   15f59:	jne    0x15f7a
   15f5b:	mov    ecx,DWORD PTR [eax]
   15f5d:	cmp    DWORD PTR [ecx+0x14],edi
   15f60:	jne    0x15f7a
   15f62:	and    DWORD PTR [eax+0x14],0x0
   15f66:	mov    esi,DWORD PTR [esi+0x4]
   15f69:	mov    ecx,DWORD PTR [ebp-0x4]
   15f6c:	mov    eax,DWORD PTR [ecx+0x4]
   15f6f:	cmp    esi,DWORD PTR [eax+0x4]
   15f72:	jne    0x15eaf
   15f78:	jmp    0x15fb8
   15f7a:	mov    ecx,DWORD PTR [eax]
   15f7c:	cmp    DWORD PTR [ecx+0x14],edi
   15f7f:	jne    0x15f99
   15f81:	mov    ecx,DWORD PTR [eax+0x8]
   15f84:	mov    DWORD PTR [ecx+0x14],edi
   15f87:	mov    ecx,DWORD PTR [ebp-0x4]
   15f8a:	and    DWORD PTR [eax+0x14],0x0
   15f8e:	push   eax
   15f8f:	call   0x1317a
   15f94:	mov    eax,DWORD PTR [esi+0x4]
   15f97:	mov    eax,DWORD PTR [eax]
   15f99:	mov    ecx,DWORD PTR [esi+0x4]
   15f9c:	mov    ecx,DWORD PTR [ecx+0x14]
   15f9f:	mov    DWORD PTR [eax+0x14],ecx
   15fa2:	mov    ecx,DWORD PTR [esi+0x4]
   15fa5:	mov    DWORD PTR [ecx+0x14],edi
   15fa8:	mov    eax,DWORD PTR [eax]
   15faa:	mov    ecx,DWORD PTR [ebp-0x4]
   15fad:	mov    DWORD PTR [eax+0x14],edi
   15fb0:	push   DWORD PTR [esi+0x4]
   15fb3:	call   0x131c8
   15fb8:	mov    DWORD PTR [esi+0x14],edi
   15fbb:	lea    eax,[ebx+0xc]
   15fbe:	push   eax
   15fbf:	call   0x14498
   15fc4:	push   ebx
   15fc5:	call   0x11d22
   15fca:	mov    eax,DWORD PTR [ebp-0x4]
   15fcd:	dec    DWORD PTR [eax+0xc]
   15fd0:	mov    eax,DWORD PTR [ebp+0x8]
   15fd3:	pop    ecx
   15fd4:	mov    ecx,DWORD PTR [ebp+0xc]
   15fd7:	pop    edi
   15fd8:	pop    esi
   15fd9:	mov    DWORD PTR [eax],ecx
   15fdb:	pop    ebx
   15fdc:	leave  
   15fdd:	ret    0x8
   15fe0:	int3   
   15fe1:	int3   
   15fe2:	int3   
   15fe3:	int3   
   15fe4:	int3   
   15fe5:	int3   
   15fe6:	mov    edi,edi
   15fe8:	push   ebp
   15fe9:	mov    ebp,esp
   15feb:	push   ebx
   15fec:	push   esi
   15fed:	push   edi
   15fee:	mov    edi,DWORD PTR [ebp+0x8]
   15ff1:	mov    ebx,ecx
   15ff3:	mov    esi,edi
   15ff5:	cmp    edi,DWORD PTR ds:0x786c4
   15ffb:	je     0x16023
   15ffd:	push   DWORD PTR [esi+0x8]
   16000:	mov    ecx,ebx
   16002:	call   0x15fe6
   16007:	mov    esi,DWORD PTR [esi]
   16009:	lea    eax,[edi+0xc]
   1600c:	push   eax
   1600d:	call   0x14498
   16012:	push   edi
   16013:	call   0x11d22
   16018:	pop    ecx
   16019:	mov    edi,esi
   1601b:	cmp    esi,DWORD PTR ds:0x786c4
   16021:	jne    0x15ffd
   16023:	pop    edi
   16024:	pop    esi
   16025:	pop    ebx
   16026:	pop    ebp
   16027:	ret    0x4
   1602a:	int3   
   1602b:	int3   
   1602c:	int3   
   1602d:	int3   
   1602e:	int3   
   1602f:	int3   
   16030:	mov    edi,edi
   16032:	push   ebp
   16033:	mov    ebp,esp
   16035:	push   ebx
   16036:	push   esi
   16037:	mov    esi,DWORD PTR [ebp+0x10]
   1603a:	push   edi
   1603b:	push   0x0
   1603d:	push   esi
   1603e:	mov    edi,ecx
   16040:	call   0x1ac7a
   16045:	push   DWORD PTR [ebp+0x14]
   16048:	mov    ebx,eax
   1604a:	mov    eax,ds:0x786c4
   1604f:	mov    DWORD PTR [ebx],eax
   16051:	mov    eax,ds:0x786c4
   16056:	mov    DWORD PTR [ebx+0x8],eax
   16059:	lea    eax,[ebx+0xc]
   1605c:	push   eax
   1605d:	call   0x1447a
   16062:	inc    DWORD PTR [edi+0xc]
   16065:	cmp    esi,DWORD PTR [edi+0x4]
   16068:	je     0x1608c
   1606a:	mov    eax,DWORD PTR [ebp+0xc]
   1606d:	cmp    eax,DWORD PTR ds:0x786c4
   16073:	jne    0x1608c
   16075:	mov    eax,DWORD PTR [ebp+0x14]
   16078:	mov    eax,DWORD PTR [eax]
   1607a:	cmp    eax,DWORD PTR [esi+0xc]
   1607d:	jl     0x1608c
   1607f:	mov    DWORD PTR [esi+0x8],ebx
   16082:	mov    eax,DWORD PTR [edi+0x4]
   16085:	cmp    esi,DWORD PTR [eax+0x8]
   16088:	jne    0x160a6
   1608a:	jmp    0x1609b
   1608c:	mov    DWORD PTR [esi],ebx
   1608e:	mov    eax,DWORD PTR [edi+0x4]
   16091:	cmp    esi,eax
   16093:	jne    0x160a0
   16095:	mov    DWORD PTR [eax+0x4],ebx
   16098:	mov    eax,DWORD PTR [edi+0x4]
   1609b:	mov    DWORD PTR [eax+0x8],ebx
   1609e:	jmp    0x160a6
   160a0:	cmp    esi,DWORD PTR [eax]
   160a2:	jne    0x160a6
   160a4:	mov    DWORD PTR [eax],ebx
   160a6:	mov    eax,DWORD PTR [edi+0x4]
   160a9:	mov    esi,ebx
   160ab:	cmp    ebx,DWORD PTR [eax+0x4]
   160ae:	je     0x16162
   160b4:	mov    eax,DWORD PTR [esi+0x4]
   160b7:	xor    edx,edx
   160b9:	cmp    DWORD PTR [eax+0x14],edx
   160bc:	jne    0x16162
   160c2:	mov    ecx,DWORD PTR [eax+0x4]
   160c5:	cmp    eax,DWORD PTR [ecx]
   160c7:	jne    0x16103
   160c9:	mov    ecx,DWORD PTR [ecx+0x8]
   160cc:	cmp    DWORD PTR [ecx+0x14],edx
   160cf:	je     0x1610a
   160d1:	cmp    esi,DWORD PTR [eax+0x8]
   160d4:	jne    0x160e0
   160d6:	mov    esi,eax
   160d8:	push   esi
   160d9:	mov    ecx,edi
   160db:	call   0x1317a
   160e0:	mov    eax,DWORD PTR [esi+0x4]
   160e3:	mov    DWORD PTR [eax+0x14],0x1
   160ea:	mov    eax,DWORD PTR [esi+0x4]
   160ed:	mov    eax,DWORD PTR [eax+0x4]
   160f0:	and    DWORD PTR [eax+0x14],0x0
   160f4:	mov    eax,DWORD PTR [esi+0x4]
   160f7:	push   DWORD PTR [eax+0x4]
   160fa:	mov    ecx,edi
   160fc:	call   0x131c8
   16101:	jmp    0x16156
   16103:	mov    ecx,DWORD PTR [ecx]
   16105:	cmp    DWORD PTR [ecx+0x14],edx
   16108:	jne    0x16127
   1610a:	mov    edx,eax
   1610c:	xor    eax,eax
   1610e:	inc    eax
   1610f:	mov    DWORD PTR [edx+0x14],eax
   16112:	mov    DWORD PTR [ecx+0x14],eax
   16115:	mov    eax,DWORD PTR [esi+0x4]
   16118:	mov    eax,DWORD PTR [eax+0x4]
   1611b:	and    DWORD PTR [eax+0x14],0x0
   1611f:	mov    eax,DWORD PTR [esi+0x4]
   16122:	mov    esi,DWORD PTR [eax+0x4]
   16125:	jmp    0x16156
   16127:	cmp    esi,DWORD PTR [eax]
   16129:	jne    0x16135
   1612b:	mov    esi,eax
   1612d:	push   esi
   1612e:	mov    ecx,edi
   16130:	call   0x131c8
   16135:	mov    eax,DWORD PTR [esi+0x4]
   16138:	mov    DWORD PTR [eax+0x14],0x1
   1613f:	mov    eax,DWORD PTR [esi+0x4]
   16142:	mov    eax,DWORD PTR [eax+0x4]
   16145:	and    DWORD PTR [eax+0x14],0x0
   16149:	mov    eax,DWORD PTR [esi+0x4]
   1614c:	push   DWORD PTR [eax+0x4]
   1614f:	mov    ecx,edi
   16151:	call   0x1317a
   16156:	mov    eax,DWORD PTR [edi+0x4]
   16159:	cmp    esi,DWORD PTR [eax+0x4]
   1615c:	jne    0x160b4
   16162:	mov    eax,DWORD PTR [edi+0x4]
   16165:	mov    eax,DWORD PTR [eax+0x4]
   16168:	pop    edi
   16169:	mov    DWORD PTR [eax+0x14],0x1
   16170:	mov    eax,DWORD PTR [ebp+0x8]
   16173:	pop    esi
   16174:	mov    DWORD PTR [eax],ebx
   16176:	pop    ebx
   16177:	pop    ebp
   16178:	ret    0x10
   1617b:	int3   
   1617c:	int3   
   1617d:	int3   
   1617e:	int3   
   1617f:	int3   
   16180:	mov    edi,edi
   16182:	push   ebp
   16183:	mov    ebp,esp
   16185:	push   ebx
   16186:	push   esi
   16187:	mov    esi,DWORD PTR [ebp+0x10]
   1618a:	push   edi
   1618b:	push   0x0
   1618d:	push   esi
   1618e:	mov    edi,ecx
   16190:	call   0x14370
   16195:	push   DWORD PTR [ebp+0x14]
   16198:	mov    ebx,eax
   1619a:	mov    eax,ds:0x786cc
   1619f:	mov    DWORD PTR [ebx],eax
   161a1:	mov    eax,ds:0x786cc
   161a6:	mov    DWORD PTR [ebx+0x8],eax
   161a9:	lea    eax,[ebx+0xc]
   161ac:	push   eax
   161ad:	call   0x144b0
   161b2:	inc    DWORD PTR [edi+0xc]
   161b5:	cmp    esi,DWORD PTR [edi+0x4]
   161b8:	je     0x161e2
   161ba:	mov    eax,DWORD PTR [ebp+0xc]
   161bd:	cmp    eax,DWORD PTR ds:0x786cc
   161c3:	jne    0x161e2
   161c5:	lea    eax,[esi+0xc]
   161c8:	push   eax
   161c9:	push   DWORD PTR [ebp+0x14]
   161cc:	call   0x19a38
   161d1:	test   al,al
   161d3:	jne    0x161e2
   161d5:	mov    DWORD PTR [esi+0x8],ebx
   161d8:	mov    eax,DWORD PTR [edi+0x4]
   161db:	cmp    esi,DWORD PTR [eax+0x8]
   161de:	jne    0x161fc
   161e0:	jmp    0x161f1
   161e2:	mov    DWORD PTR [esi],ebx
   161e4:	mov    eax,DWORD PTR [edi+0x4]
   161e7:	cmp    esi,eax
   161e9:	jne    0x161f6
   161eb:	mov    DWORD PTR [eax+0x4],ebx
   161ee:	mov    eax,DWORD PTR [edi+0x4]
   161f1:	mov    DWORD PTR [eax+0x8],ebx
   161f4:	jmp    0x161fc
   161f6:	cmp    esi,DWORD PTR [eax]
   161f8:	jne    0x161fc
   161fa:	mov    DWORD PTR [eax],ebx
   161fc:	mov    eax,DWORD PTR [edi+0x4]
   161ff:	mov    esi,ebx
   16201:	cmp    ebx,DWORD PTR [eax+0x4]
   16204:	je     0x162b8
   1620a:	mov    eax,DWORD PTR [esi+0x4]
   1620d:	xor    edx,edx
   1620f:	cmp    DWORD PTR [eax+0x1c],edx
   16212:	jne    0x162b8
   16218:	mov    ecx,DWORD PTR [eax+0x4]
   1621b:	cmp    eax,DWORD PTR [ecx]
   1621d:	jne    0x16259
   1621f:	mov    ecx,DWORD PTR [ecx+0x8]
   16222:	cmp    DWORD PTR [ecx+0x1c],edx
   16225:	je     0x16260
   16227:	cmp    esi,DWORD PTR [eax+0x8]
   1622a:	jne    0x16236
   1622c:	mov    esi,eax
   1622e:	push   esi
   1622f:	mov    ecx,edi
   16231:	call   0x13290
   16236:	mov    eax,DWORD PTR [esi+0x4]
   16239:	mov    DWORD PTR [eax+0x1c],0x1
   16240:	mov    eax,DWORD PTR [esi+0x4]
   16243:	mov    eax,DWORD PTR [eax+0x4]
   16246:	and    DWORD PTR [eax+0x1c],0x0
   1624a:	mov    eax,DWORD PTR [esi+0x4]
   1624d:	push   DWORD PTR [eax+0x4]
   16250:	mov    ecx,edi
   16252:	call   0x132de
   16257:	jmp    0x162ac
   16259:	mov    ecx,DWORD PTR [ecx]
   1625b:	cmp    DWORD PTR [ecx+0x1c],edx
   1625e:	jne    0x1627d
   16260:	mov    edx,eax
   16262:	xor    eax,eax
   16264:	inc    eax
   16265:	mov    DWORD PTR [edx+0x1c],eax
   16268:	mov    DWORD PTR [ecx+0x1c],eax
   1626b:	mov    eax,DWORD PTR [esi+0x4]
   1626e:	mov    eax,DWORD PTR [eax+0x4]
   16271:	and    DWORD PTR [eax+0x1c],0x0
   16275:	mov    eax,DWORD PTR [esi+0x4]
   16278:	mov    esi,DWORD PTR [eax+0x4]
   1627b:	jmp    0x162ac
   1627d:	cmp    esi,DWORD PTR [eax]
   1627f:	jne    0x1628b
   16281:	mov    esi,eax
   16283:	push   esi
   16284:	mov    ecx,edi
   16286:	call   0x132de
   1628b:	mov    eax,DWORD PTR [esi+0x4]
   1628e:	mov    DWORD PTR [eax+0x1c],0x1
   16295:	mov    eax,DWORD PTR [esi+0x4]
   16298:	mov    eax,DWORD PTR [eax+0x4]
   1629b:	and    DWORD PTR [eax+0x1c],0x0
   1629f:	mov    eax,DWORD PTR [esi+0x4]
   162a2:	push   DWORD PTR [eax+0x4]
   162a5:	mov    ecx,edi
   162a7:	call   0x13290
   162ac:	mov    eax,DWORD PTR [edi+0x4]
   162af:	cmp    esi,DWORD PTR [eax+0x4]
   162b2:	jne    0x1620a
   162b8:	mov    eax,DWORD PTR [edi+0x4]
   162bb:	mov    eax,DWORD PTR [eax+0x4]
   162be:	pop    edi
   162bf:	mov    DWORD PTR [eax+0x1c],0x1
   162c6:	mov    eax,DWORD PTR [ebp+0x8]
   162c9:	pop    esi
   162ca:	mov    DWORD PTR [eax],ebx
   162cc:	pop    ebx
   162cd:	pop    ebp
   162ce:	ret    0x10
   162d1:	int3   
   162d2:	int3   
   162d3:	int3   
   162d4:	int3   
   162d5:	int3   
   162d6:	mov    edi,edi
   162d8:	push   ebp
   162d9:	mov    ebp,esp
   162db:	push   esi
   162dc:	push   edi
   162dd:	mov    edi,DWORD PTR [ebp+0x8]
   162e0:	mov    al,BYTE PTR [edi+0x8]
   162e3:	mov    esi,ecx
   162e5:	mov    BYTE PTR [esi+0x8],al
   162e8:	call   0x1489c
   162ed:	push   edi
   162ee:	mov    ecx,esi
   162f0:	call   0x14f30
   162f5:	pop    edi
   162f6:	mov    eax,esi
   162f8:	pop    esi
   162f9:	pop    ebp
   162fa:	ret    0x4
   162fd:	int3   
   162fe:	int3   
   162ff:	int3   
   16300:	int3   
   16301:	int3   
   16302:	mov    edi,edi
   16304:	push   ebp
   16305:	mov    ebp,esp
   16307:	push   ecx
   16308:	push   esi
   16309:	mov    esi,ecx
   1630b:	cmp    esi,DWORD PTR [ebp+0x8]
   1630e:	je     0x1632c
   16310:	mov    eax,DWORD PTR [esi+0x4]
   16313:	mov    ecx,DWORD PTR [eax]
   16315:	push   eax
   16316:	push   ecx
   16317:	lea    eax,[ebp-0x4]
   1631a:	push   eax
   1631b:	mov    ecx,esi
   1631d:	call   0x1464c
   16322:	push   DWORD PTR [ebp+0x8]
   16325:	mov    ecx,esi
   16327:	call   0x14f30
   1632c:	mov    eax,esi
   1632e:	pop    esi
   1632f:	leave  
   16330:	ret    0x4
   16333:	int3   
   16334:	int3   
   16335:	int3   
   16336:	int3   
   16337:	int3   
   16338:	mov    edi,edi
   1633a:	push   ebp
   1633b:	mov    ebp,esp
   1633d:	push   esi
   1633e:	push   edi
   1633f:	xor    edi,edi
   16341:	push   edi
   16342:	push   edi
   16343:	push   edi
   16344:	mov    esi,ecx
   16346:	mov    eax,DWORD PTR [esi+0x10]
   16349:	push   edi
   1634a:	push   eax
   1634b:	call   0x119ea
   16350:	call   eax
   16352:	test   eax,eax
   16354:	jl     0x1636d
   16356:	lea    eax,[ebp+0x8]
   16359:	push   eax
   1635a:	mov    ecx,esi
   1635c:	call   0x14602
   16361:	mov    esi,DWORD PTR [esi+0x10]
   16364:	push   edi
   16365:	push   esi
   16366:	call   0x11a14
   1636b:	call   eax
   1636d:	pop    edi
   1636e:	pop    esi
   1636f:	pop    ebp
   16370:	ret    0x4
   16373:	int3   
   16374:	int3   
   16375:	int3   
   16376:	int3   
   16377:	int3   
   16378:	mov    edi,edi
   1637a:	push   ebp
   1637b:	mov    ebp,esp
   1637d:	sub    esp,0x40
   16380:	test   BYTE PTR [ebp+0x8],0x20
   16384:	je     0x16410
   1638a:	push   ebx
   1638b:	lea    ecx,[ebp-0x40]
   1638e:	call   0x13ac6
   16393:	mov    ecx,DWORD PTR ds:0x784e8
   16399:	lea    eax,[ebp-0x40]
   1639c:	push   eax
   1639d:	push   DWORD PTR [ebp+0xc]
   163a0:	call   0x151b6
   163a5:	test   al,al
   163a7:	je     0x1640c
   163a9:	mov    ecx,DWORD PTR [ebp+0x10]
   163ac:	lea    eax,[ebp-0x38]
   163af:	push   eax
   163b0:	call   0x12a28
   163b5:	mov    ecx,DWORD PTR [ebp+0x14]
   163b8:	lea    eax,[ebp-0x30]
   163bb:	push   eax
   163bc:	call   0x12a28
   163c1:	mov    ecx,DWORD PTR [ebp+0x18]
   163c4:	lea    eax,[ebp-0x28]
   163c7:	push   eax
   163c8:	call   0x12a28
   163cd:	mov    eax,DWORD PTR [ebp+0x20]
   163d0:	mov    ecx,DWORD PTR [ebp-0x20]
   163d3:	mov    DWORD PTR [eax],ecx
   163d5:	mov    ecx,DWORD PTR [ebp+0x1c]
   163d8:	lea    eax,[ebp-0x8]
   163db:	push   eax
   163dc:	call   0x12a28
   163e1:	mov    eax,DWORD PTR [ebp+0x24]
   163e4:	mov    ecx,DWORD PTR [ebp-0x18]
   163e7:	mov    DWORD PTR [eax],ecx
   163e9:	mov    ecx,DWORD PTR [ebp-0x14]
   163ec:	mov    DWORD PTR [eax+0x4],ecx
   163ef:	mov    ecx,DWORD PTR [ebp-0x10]
   163f2:	mov    eax,DWORD PTR [ebp+0x28]
   163f5:	mov    DWORD PTR [eax],ecx
   163f7:	mov    ecx,DWORD PTR [ebp-0xc]
   163fa:	mov    DWORD PTR [eax+0x4],ecx
   163fd:	mov    bl,0x1
   163ff:	lea    ecx,[ebp-0x40]
   16402:	call   0x134ce
   16407:	mov    al,bl
   16409:	pop    ebx
   1640a:	jmp    0x1648b
   1640c:	xor    bl,bl
   1640e:	jmp    0x163ff
   16410:	mov    ecx,DWORD PTR ds:0x784e0
   16416:	push   esi
   16417:	push   DWORD PTR [ebp+0xc]
   1641a:	lea    eax,[ebp+0xc]
   1641d:	push   eax
   1641e:	call   0x13bf8
   16423:	mov    esi,DWORD PTR [ebp+0xc]
   16426:	mov    eax,ds:0x784e0
   1642b:	cmp    esi,DWORD PTR [eax+0x4]
   1642e:	jne    0x16434
   16430:	xor    al,al
   16432:	jmp    0x1648a
   16434:	mov    ecx,DWORD PTR [ebp+0x10]
   16437:	lea    eax,[esi+0x20]
   1643a:	push   eax
   1643b:	call   0x12a28
   16440:	mov    ecx,DWORD PTR [ebp+0x14]
   16443:	lea    eax,[esi+0x28]
   16446:	push   eax
   16447:	call   0x12a28
   1644c:	mov    ecx,DWORD PTR [ebp+0x18]
   1644f:	lea    eax,[esi+0x30]
   16452:	push   eax
   16453:	call   0x12a28
   16458:	mov    ecx,DWORD PTR [ebp+0x1c]
   1645b:	lea    eax,[esi+0x50]
   1645e:	push   eax
   1645f:	call   0x12a28
   16464:	mov    eax,DWORD PTR [esi+0x38]
   16467:	mov    ecx,DWORD PTR [ebp+0x20]
   1646a:	mov    DWORD PTR [ecx],eax
   1646c:	mov    ecx,DWORD PTR [esi+0x40]
   1646f:	mov    eax,DWORD PTR [ebp+0x24]
   16472:	mov    DWORD PTR [eax],ecx
   16474:	mov    ecx,DWORD PTR [esi+0x44]
   16477:	mov    DWORD PTR [eax+0x4],ecx
   1647a:	mov    ecx,DWORD PTR [esi+0x48]
   1647d:	mov    eax,DWORD PTR [ebp+0x28]
   16480:	mov    DWORD PTR [eax],ecx
   16482:	mov    ecx,DWORD PTR [esi+0x4c]
   16485:	mov    DWORD PTR [eax+0x4],ecx
   16488:	mov    al,0x1
   1648a:	pop    esi
   1648b:	leave  
   1648c:	ret    0x24
   1648f:	int3   
   16490:	int3   
   16491:	int3   
   16492:	int3   
   16493:	int3   
   16494:	push   0x40
   16496:	push   0x77678
   1649b:	call   0x1dd40
   164a0:	xor    esi,esi
   164a2:	push   esi
   164a3:	push   esi
   164a4:	push   esi
   164a5:	push   esi
   164a6:	push   0x77b58
   164ab:	call   0x119ea
   164b0:	call   eax
   164b2:	cmp    eax,esi
   164b4:	jl     0x1662d
   164ba:	mov    DWORD PTR [ebp-0x4],esi
   164bd:	or     edi,0xffffffff
   164c0:	push   edi
   164c1:	mov    esi,0x1e148
   164c6:	push   esi
   164c7:	lea    ecx,[ebp-0x40]
   164ca:	call   0x12b26
   164cf:	push   edi
   164d0:	push   esi
   164d1:	lea    ecx,[ebp-0x38]
   164d4:	call   0x12b26
   164d9:	push   edi
   164da:	push   esi
   164db:	lea    ecx,[ebp-0x30]
   164de:	call   0x12b26
   164e3:	push   edi
   164e4:	push   esi
   164e5:	lea    ecx,[ebp-0x28]
   164e8:	call   0x12b26
   164ed:	lea    eax,[ebp-0x50]
   164f0:	push   eax
   164f1:	lea    eax,[ebp-0x48]
   164f4:	push   eax
   164f5:	lea    eax,[ebp-0x1c]
   164f8:	push   eax
   164f9:	lea    eax,[ebp-0x28]
   164fc:	push   eax
   164fd:	lea    eax,[ebp-0x30]
   16500:	push   eax
   16501:	lea    eax,[ebp-0x38]
   16504:	push   eax
   16505:	lea    eax,[ebp-0x40]
   16508:	push   eax
   16509:	mov    edi,DWORD PTR [ebp+0x8]
   1650c:	push   edi
   1650d:	mov    esi,DWORD PTR [ebp+0xc]
   16510:	push   DWORD PTR [esi+0x4]
   16513:	call   0x16378
   16518:	test   al,al
   1651a:	jne    0x16528
   1651c:	mov    DWORD PTR [esi+0x8],0x1
   16523:	jmp    0x165e2
   16528:	mov    ecx,DWORD PTR [edi+0x4]
   1652b:	mov    eax,DWORD PTR [ebp-0x3c]
   1652e:	lea    edx,[eax+ecx*1+0x2]
   16532:	mov    eax,DWORD PTR [ebp-0x34]
   16535:	lea    edi,[eax+edx*1+0x1]
   16539:	mov    eax,DWORD PTR [ebp-0x2c]
   1653c:	lea    eax,[eax+edi*1+0x1]
   16540:	mov    DWORD PTR [ebp-0x20],eax
   16543:	mov    ebx,DWORD PTR [ebp-0x24]
   16546:	lea    eax,[ebx+eax*1+0x1]
   1654a:	cmp    eax,DWORD PTR [esi]
   1654c:	jbe    0x1655c
   1654e:	mov    DWORD PTR [esi],eax
   16550:	mov    DWORD PTR [esi+0x8],0x2
   16557:	jmp    0x165e2
   1655c:	and    DWORD PTR [esi+0x8],0x0
   16560:	mov    eax,DWORD PTR [ebp-0x1c]
   16563:	mov    DWORD PTR [esi+0xc],eax
   16566:	mov    eax,DWORD PTR [ebp-0x48]
   16569:	mov    DWORD PTR [esi+0x10],eax
   1656c:	mov    eax,DWORD PTR [ebp-0x44]
   1656f:	mov    DWORD PTR [esi+0x14],eax
   16572:	mov    eax,DWORD PTR [ebp-0x50]
   16575:	mov    DWORD PTR [esi+0x18],eax
   16578:	mov    eax,DWORD PTR [ebp-0x4c]
   1657b:	mov    DWORD PTR [esi+0x1c],eax
   1657e:	mov    eax,DWORD PTR [ebp+0x8]
   16581:	mov    eax,DWORD PTR [eax]
   16583:	mov    DWORD PTR [ebp-0x1c],eax
   16586:	lea    eax,[esi+0x20]
   16589:	mov    ebx,DWORD PTR [ebp-0x1c]
   1658c:	mov    bl,BYTE PTR [ebx]
   1658e:	mov    BYTE PTR [ebp+0xb],bl
   16591:	mov    BYTE PTR [eax],bl
   16593:	inc    DWORD PTR [ebp-0x1c]
   16596:	inc    eax
   16597:	test   bl,bl
   16599:	jne    0x16589
   1659b:	mov    ebx,DWORD PTR [ebp-0x40]
   1659e:	lea    ecx,[ecx+esi*1+0x21]
   165a2:	mov    al,BYTE PTR [ebx]
   165a4:	mov    BYTE PTR [ecx],al
   165a6:	inc    ebx
   165a7:	inc    ecx
   165a8:	test   al,al
   165aa:	jne    0x165a2
   165ac:	mov    ecx,DWORD PTR [ebp-0x38]
   165af:	lea    edx,[edx+esi*1+0x20]
   165b3:	mov    al,BYTE PTR [ecx]
   165b5:	mov    BYTE PTR [edx],al
   165b7:	inc    ecx
   165b8:	inc    edx
   165b9:	test   al,al
   165bb:	jne    0x165b3
   165bd:	mov    ecx,DWORD PTR [ebp-0x30]
   165c0:	lea    edi,[edi+esi*1+0x20]
   165c4:	mov    al,BYTE PTR [ecx]
   165c6:	mov    BYTE PTR [edi],al
   165c8:	inc    ecx
   165c9:	inc    edi
   165ca:	test   al,al
   165cc:	jne    0x165c4
   165ce:	mov    ecx,DWORD PTR [ebp-0x28]
   165d1:	mov    eax,DWORD PTR [ebp-0x20]
   165d4:	lea    esi,[eax+esi*1+0x20]
   165d8:	mov    al,BYTE PTR [ecx]
   165da:	mov    BYTE PTR [esi],al
   165dc:	inc    ecx
   165dd:	inc    esi
   165de:	test   al,al
   165e0:	jne    0x165d8
   165e2:	push   DWORD PTR [ebp-0x28]
   165e5:	call   0x11d22
   165ea:	push   DWORD PTR [ebp-0x30]
   165ed:	call   0x11d22
   165f2:	push   DWORD PTR [ebp-0x38]
   165f5:	call   0x11d22
   165fa:	push   DWORD PTR [ebp-0x40]
   165fd:	call   0x11d22
   16602:	add    esp,0x10
   16605:	jmp    0x16618
   16607:	xor    eax,eax
   16609:	inc    eax
   1660a:	ret    
   1660b:	mov    esp,DWORD PTR [ebp-0x18]
   1660e:	mov    eax,DWORD PTR [ebp+0xc]
   16611:	mov    DWORD PTR [eax+0x8],0x4
   16618:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1661f:	push   0x0
   16621:	push   0x77b58
   16626:	call   0x11a14
   1662b:	call   eax
   1662d:	call   0x1dd85
   16632:	ret    0x8
   16635:	int3   
   16636:	int3   
   16637:	int3   
   16638:	int3   
   16639:	int3   
   1663a:	mov    edi,edi
   1663c:	push   ebp
   1663d:	mov    ebp,esp
   1663f:	push   ecx
   16640:	push   ecx
   16641:	push   DWORD PTR [ebp+0xc]
   16644:	lea    eax,[ebp-0x8]
   16647:	push   eax
   16648:	call   0x1527c
   1664d:	mov    eax,DWORD PTR [ebp+0x8]
   16650:	mov    ecx,DWORD PTR [ebp-0x8]
   16653:	mov    DWORD PTR [eax],ecx
   16655:	mov    cl,BYTE PTR [ebp-0x4]
   16658:	mov    BYTE PTR [eax+0x4],cl
   1665b:	leave  
   1665c:	ret    0x8
   1665f:	int3   
   16660:	int3   
   16661:	int3   
   16662:	int3   
   16663:	int3   
   16664:	mov    edi,edi
   16666:	push   ebp
   16667:	mov    ebp,esp
   16669:	push   ecx
   1666a:	push   ecx
   1666b:	push   DWORD PTR [ebp+0xc]
   1666e:	lea    eax,[ebp-0x8]
   16671:	push   eax
   16672:	call   0x15314
   16677:	mov    eax,DWORD PTR [ebp+0x8]
   1667a:	mov    ecx,DWORD PTR [ebp-0x8]
   1667d:	mov    DWORD PTR [eax],ecx
   1667f:	mov    cl,BYTE PTR [ebp-0x4]
   16682:	mov    BYTE PTR [eax+0x4],cl
   16685:	leave  
   16686:	ret    0x8
   16689:	int3   
   1668a:	int3   
   1668b:	int3   
   1668c:	int3   
   1668d:	int3   
   1668e:	mov    edi,edi
   16690:	push   ebp
   16691:	mov    ebp,esp
   16693:	push   ecx
   16694:	push   ecx
   16695:	push   esi
   16696:	push   DWORD PTR [ebp+0x8]
   16699:	lea    eax,[ebp-0x8]
   1669c:	push   eax
   1669d:	mov    esi,ecx
   1669f:	call   0x14016
   166a4:	and    DWORD PTR [ebp+0x8],0x0
   166a8:	lea    eax,[ebp+0x8]
   166ab:	push   eax
   166ac:	push   DWORD PTR [ebp-0x4]
   166af:	push   DWORD PTR [ebp-0x8]
   166b2:	call   0x13952
   166b7:	add    esp,0xc
   166ba:	push   DWORD PTR [ebp-0x4]
   166bd:	lea    eax,[ebp-0x4]
   166c0:	push   DWORD PTR [ebp-0x8]
   166c3:	mov    ecx,esi
   166c5:	push   eax
   166c6:	call   0x153ac
   166cb:	mov    eax,DWORD PTR [ebp+0x8]
   166ce:	pop    esi
   166cf:	leave  
   166d0:	ret    0x4
   166d3:	int3   
   166d4:	int3   
   166d5:	int3   
   166d6:	int3   
   166d7:	int3   
   166d8:	mov    edi,edi
   166da:	push   ebp
   166db:	mov    ebp,esp
   166dd:	push   ecx
   166de:	push   ebx
   166df:	push   esi
   166e0:	push   edi
   166e1:	mov    edi,ecx
   166e3:	mov    eax,DWORD PTR [edi+0x4]
   166e6:	mov    esi,DWORD PTR [eax+0x4]
   166e9:	mov    ebx,eax
   166eb:	mov    al,0x1
   166ed:	jmp    0x16708
   166ef:	lea    eax,[esi+0x10]
   166f2:	push   eax
   166f3:	push   DWORD PTR [ebp+0xc]
   166f6:	mov    ebx,esi
   166f8:	call   0x19a08
   166fd:	test   al,al
   166ff:	je     0x16705
   16701:	mov    esi,DWORD PTR [esi]
   16703:	jmp    0x16708
   16705:	mov    esi,DWORD PTR [esi+0x8]
   16708:	cmp    esi,DWORD PTR ds:0x786b8
   1670e:	jne    0x166ef
   16710:	cmp    BYTE PTR [edi+0x8],0x0
   16714:	je     0x16731
   16716:	push   DWORD PTR [ebp+0xc]
   16719:	lea    eax,[ebp+0xc]
   1671c:	push   ebx
   1671d:	push   esi
   1671e:	push   eax
   1671f:	mov    ecx,edi
   16721:	call   0x156d6
   16726:	mov    ecx,DWORD PTR [eax]
   16728:	mov    eax,DWORD PTR [ebp+0x8]
   1672b:	mov    BYTE PTR [eax+0x4],0x1
   1672f:	jmp    0x16764
   16731:	mov    DWORD PTR [ebp-0x4],ebx
   16734:	test   al,al
   16736:	je     0x16747
   16738:	mov    eax,DWORD PTR [edi+0x4]
   1673b:	cmp    ebx,DWORD PTR [eax]
   1673d:	je     0x16716
   1673f:	lea    ecx,[ebp-0x4]
   16742:	call   0x11132
   16747:	push   DWORD PTR [ebp+0xc]
   1674a:	mov    eax,DWORD PTR [ebp-0x4]
   1674d:	add    eax,0x10
   16750:	push   eax
   16751:	call   0x19a08
   16756:	test   al,al
   16758:	jne    0x16716
   1675a:	mov    eax,DWORD PTR [ebp+0x8]
   1675d:	mov    ecx,DWORD PTR [ebp-0x4]
   16760:	mov    BYTE PTR [eax+0x4],0x0
   16764:	pop    edi
   16765:	pop    esi
   16766:	mov    DWORD PTR [eax],ecx
   16768:	pop    ebx
   16769:	leave  
   1676a:	ret    0x8
   1676d:	int3   
   1676e:	int3   
   1676f:	int3   
   16770:	int3   
   16771:	int3   
   16772:	mov    edi,edi
   16774:	push   ebp
   16775:	mov    ebp,esp
   16777:	push   ecx
   16778:	push   esi
   16779:	mov    esi,ecx
   1677b:	cmp    DWORD PTR [esi+0xc],0x0
   1677f:	mov    ecx,DWORD PTR [ebp+0xc]
   16782:	je     0x167bc
   16784:	mov    eax,DWORD PTR [esi+0x4]
   16787:	cmp    ecx,DWORD PTR [eax]
   16789:	jne    0x167bc
   1678b:	cmp    DWORD PTR [ebp+0x10],eax
   1678e:	jne    0x167bc
   16790:	push   DWORD PTR [eax+0x4]
   16793:	mov    ecx,esi
   16795:	call   0x1568c
   1679a:	mov    ecx,DWORD PTR ds:0x786b8
   167a0:	mov    eax,DWORD PTR [esi+0x4]
   167a3:	mov    DWORD PTR [eax+0x4],ecx
   167a6:	mov    eax,DWORD PTR [esi+0x4]
   167a9:	and    DWORD PTR [esi+0xc],0x0
   167ad:	mov    DWORD PTR [eax],eax
   167af:	mov    eax,DWORD PTR [esi+0x4]
   167b2:	mov    DWORD PTR [eax+0x8],eax
   167b5:	mov    eax,DWORD PTR [esi+0x4]
   167b8:	mov    ecx,DWORD PTR [eax]
   167ba:	jmp    0x167e1
   167bc:	cmp    ecx,DWORD PTR [ebp+0x10]
   167bf:	je     0x167e1
   167c1:	push   edi
   167c2:	mov    edi,ecx
   167c4:	lea    ecx,[ebp+0xc]
   167c7:	call   0x12dfc
   167cc:	push   edi
   167cd:	lea    eax,[ebp-0x4]
   167d0:	push   eax
   167d1:	mov    ecx,esi
   167d3:	call   0x1542a
   167d8:	mov    ecx,DWORD PTR [ebp+0xc]
   167db:	cmp    ecx,DWORD PTR [ebp+0x10]
   167de:	jne    0x167c2
   167e0:	pop    edi
   167e1:	mov    eax,DWORD PTR [ebp+0x8]
   167e4:	mov    DWORD PTR [eax],ecx
   167e6:	pop    esi
   167e7:	leave  
   167e8:	ret    0xc
   167eb:	int3   
   167ec:	int3   
   167ed:	int3   
   167ee:	int3   
   167ef:	int3   
   167f0:	mov    edi,edi
   167f2:	push   ebp
   167f3:	mov    ebp,esp
   167f5:	push   ecx
   167f6:	push   ebx
   167f7:	push   esi
   167f8:	push   edi
   167f9:	mov    edi,ecx
   167fb:	mov    eax,DWORD PTR [edi+0x4]
   167fe:	mov    esi,DWORD PTR [eax+0x4]
   16801:	mov    ebx,eax
   16803:	mov    al,0x1
   16805:	jmp    0x16820
   16807:	lea    eax,[esi+0x10]
   1680a:	push   eax
   1680b:	push   DWORD PTR [ebp+0xc]
   1680e:	mov    ebx,esi
   16810:	call   0x19a08
   16815:	test   al,al
   16817:	je     0x1681d
   16819:	mov    esi,DWORD PTR [esi]
   1681b:	jmp    0x16820
   1681d:	mov    esi,DWORD PTR [esi+0x8]
   16820:	cmp    esi,DWORD PTR ds:0x786bc
   16826:	jne    0x16807
   16828:	cmp    BYTE PTR [edi+0x8],0x0
   1682c:	je     0x16849
   1682e:	push   DWORD PTR [ebp+0xc]
   16831:	lea    eax,[ebp+0xc]
   16834:	push   ebx
   16835:	push   esi
   16836:	push   eax
   16837:	mov    ecx,edi
   16839:	call   0x15ad8
   1683e:	mov    ecx,DWORD PTR [eax]
   16840:	mov    eax,DWORD PTR [ebp+0x8]
   16843:	mov    BYTE PTR [eax+0x4],0x1
   16847:	jmp    0x1687c
   16849:	mov    DWORD PTR [ebp-0x4],ebx
   1684c:	test   al,al
   1684e:	je     0x1685f
   16850:	mov    eax,DWORD PTR [edi+0x4]
   16853:	cmp    ebx,DWORD PTR [eax]
   16855:	je     0x1682e
   16857:	lea    ecx,[ebp-0x4]
   1685a:	call   0x10fea
   1685f:	push   DWORD PTR [ebp+0xc]
   16862:	mov    eax,DWORD PTR [ebp-0x4]
   16865:	add    eax,0x10
   16868:	push   eax
   16869:	call   0x19a08
   1686e:	test   al,al
   16870:	jne    0x1682e
   16872:	mov    eax,DWORD PTR [ebp+0x8]
   16875:	mov    ecx,DWORD PTR [ebp-0x4]
   16878:	mov    BYTE PTR [eax+0x4],0x0
   1687c:	pop    edi
   1687d:	pop    esi
   1687e:	mov    DWORD PTR [eax],ecx
   16880:	pop    ebx
   16881:	leave  
   16882:	ret    0x8
   16885:	int3   
   16886:	int3   
   16887:	int3   
   16888:	int3   
   16889:	int3   
   1688a:	mov    edi,edi
   1688c:	push   ebp
   1688d:	mov    ebp,esp
   1688f:	push   ecx
   16890:	push   esi
   16891:	mov    esi,ecx
   16893:	cmp    DWORD PTR [esi+0xc],0x0
   16897:	mov    ecx,DWORD PTR [ebp+0xc]
   1689a:	je     0x168d4
   1689c:	mov    eax,DWORD PTR [esi+0x4]
   1689f:	cmp    ecx,DWORD PTR [eax]
   168a1:	jne    0x168d4
   168a3:	cmp    DWORD PTR [ebp+0x10],eax
   168a6:	jne    0x168d4
   168a8:	push   DWORD PTR [eax+0x4]
   168ab:	mov    ecx,esi
   168ad:	call   0x15a8e
   168b2:	mov    ecx,DWORD PTR ds:0x786bc
   168b8:	mov    eax,DWORD PTR [esi+0x4]
   168bb:	mov    DWORD PTR [eax+0x4],ecx
   168be:	mov    eax,DWORD PTR [esi+0x4]
   168c1:	and    DWORD PTR [esi+0xc],0x0
   168c5:	mov    DWORD PTR [eax],eax
   168c7:	mov    eax,DWORD PTR [esi+0x4]
   168ca:	mov    DWORD PTR [eax+0x8],eax
   168cd:	mov    eax,DWORD PTR [esi+0x4]
   168d0:	mov    ecx,DWORD PTR [eax]
   168d2:	jmp    0x168f9
   168d4:	cmp    ecx,DWORD PTR [ebp+0x10]
   168d7:	je     0x168f9
   168d9:	push   edi
   168da:	mov    edi,ecx
   168dc:	lea    ecx,[ebp+0xc]
   168df:	call   0x1373e
   168e4:	push   edi
   168e5:	lea    eax,[ebp-0x4]
   168e8:	push   eax
   168e9:	mov    ecx,esi
   168eb:	call   0x1582c
   168f0:	mov    ecx,DWORD PTR [ebp+0xc]
   168f3:	cmp    ecx,DWORD PTR [ebp+0x10]
   168f6:	jne    0x168da
   168f8:	pop    edi
   168f9:	mov    eax,DWORD PTR [ebp+0x8]
   168fc:	mov    DWORD PTR [eax],ecx
   168fe:	pop    esi
   168ff:	leave  
   16900:	ret    0xc
   16903:	int3   
   16904:	int3   
   16905:	int3   
   16906:	int3   
   16907:	int3   
   16908:	mov    edi,edi
   1690a:	push   ebp
   1690b:	mov    ebp,esp
   1690d:	push   ecx
   1690e:	push   ebx
   1690f:	push   esi
   16910:	push   edi
   16911:	mov    edi,ecx
   16913:	mov    eax,DWORD PTR [edi+0x4]
   16916:	mov    esi,DWORD PTR [eax+0x4]
   16919:	mov    ebx,eax
   1691b:	mov    al,0x1
   1691d:	jmp    0x16938
   1691f:	lea    eax,[esi+0xc]
   16922:	push   eax
   16923:	push   DWORD PTR [ebp+0xc]
   16926:	mov    ebx,esi
   16928:	call   0x19a08
   1692d:	test   al,al
   1692f:	je     0x16935
   16931:	mov    esi,DWORD PTR [esi]
   16933:	jmp    0x16938
   16935:	mov    esi,DWORD PTR [esi+0x8]
   16938:	cmp    esi,DWORD PTR ds:0x786c0
   1693e:	jne    0x1691f
   16940:	cmp    BYTE PTR [edi+0x8],0x0
   16944:	je     0x16961
   16946:	push   DWORD PTR [ebp+0xc]
   16949:	lea    eax,[ebp+0xc]
   1694c:	push   ebx
   1694d:	push   esi
   1694e:	push   eax
   1694f:	mov    ecx,edi
   16951:	call   0x15c2e
   16956:	mov    ecx,DWORD PTR [eax]
   16958:	mov    eax,DWORD PTR [ebp+0x8]
   1695b:	mov    BYTE PTR [eax+0x4],0x1
   1695f:	jmp    0x16994
   16961:	mov    DWORD PTR [ebp-0x4],ebx
   16964:	test   al,al
   16966:	je     0x16977
   16968:	mov    eax,DWORD PTR [edi+0x4]
   1696b:	cmp    ebx,DWORD PTR [eax]
   1696d:	je     0x16946
   1696f:	lea    ecx,[ebp-0x4]
   16972:	call   0x1106e
   16977:	push   DWORD PTR [ebp+0xc]
   1697a:	mov    eax,DWORD PTR [ebp-0x4]
   1697d:	add    eax,0xc
   16980:	push   eax
   16981:	call   0x19a08
   16986:	test   al,al
   16988:	jne    0x16946
   1698a:	mov    eax,DWORD PTR [ebp+0x8]
   1698d:	mov    ecx,DWORD PTR [ebp-0x4]
   16990:	mov    BYTE PTR [eax+0x4],0x0
   16994:	pop    edi
   16995:	pop    esi
   16996:	mov    DWORD PTR [eax],ecx
   16998:	pop    ebx
   16999:	leave  
   1699a:	ret    0x8
   1699d:	int3   
   1699e:	int3   
   1699f:	int3   
   169a0:	int3   
   169a1:	int3   
   169a2:	mov    edi,edi
   169a4:	push   ebp
   169a5:	mov    ebp,esp
   169a7:	push   ecx
   169a8:	push   ebx
   169a9:	push   esi
   169aa:	push   edi
   169ab:	mov    edi,ecx
   169ad:	mov    eax,DWORD PTR [edi+0x4]
   169b0:	mov    esi,DWORD PTR [eax+0x4]
   169b3:	mov    ebx,eax
   169b5:	mov    eax,ds:0x786c4
   169ba:	mov    dl,0x1
   169bc:	cmp    esi,eax
   169be:	je     0x169dc
   169c0:	mov    ecx,DWORD PTR [ebp+0xc]
   169c3:	mov    ecx,DWORD PTR [ecx]
   169c5:	cmp    ecx,DWORD PTR [esi+0xc]
   169c8:	mov    ebx,esi
   169ca:	setl   dl
   169cd:	test   dl,dl
   169cf:	je     0x169d5
   169d1:	mov    esi,DWORD PTR [esi]
   169d3:	jmp    0x169d8
   169d5:	mov    esi,DWORD PTR [esi+0x8]
   169d8:	cmp    esi,eax
   169da:	jne    0x169c5
   169dc:	cmp    BYTE PTR [edi+0x8],0x0
   169e0:	je     0x169fd
   169e2:	push   DWORD PTR [ebp+0xc]
   169e5:	push   ebx
   169e6:	push   esi
   169e7:	lea    eax,[ebp+0xc]
   169ea:	push   eax
   169eb:	mov    ecx,edi
   169ed:	call   0x16030
   169f2:	mov    ecx,DWORD PTR [eax]
   169f4:	mov    eax,DWORD PTR [ebp+0x8]
   169f7:	mov    BYTE PTR [eax+0x4],0x1
   169fb:	jmp    0x16a2c
   169fd:	mov    ecx,ebx
   169ff:	mov    DWORD PTR [ebp-0x4],ecx
   16a02:	test   dl,dl
   16a04:	je     0x16a18
   16a06:	mov    eax,DWORD PTR [edi+0x4]
   16a09:	cmp    ebx,DWORD PTR [eax]
   16a0b:	je     0x169e2
   16a0d:	lea    ecx,[ebp-0x4]
   16a10:	call   0x110f2
   16a15:	mov    ecx,DWORD PTR [ebp-0x4]
   16a18:	mov    edx,DWORD PTR [ecx+0xc]
   16a1b:	mov    eax,DWORD PTR [ebp+0xc]
   16a1e:	cmp    edx,DWORD PTR [eax]
   16a20:	jge    0x16a25
   16a22:	push   eax
   16a23:	jmp    0x169e5
   16a25:	mov    eax,DWORD PTR [ebp+0x8]
   16a28:	mov    BYTE PTR [eax+0x4],0x0
   16a2c:	pop    edi
   16a2d:	pop    esi
   16a2e:	mov    DWORD PTR [eax],ecx
   16a30:	pop    ebx
   16a31:	leave  
   16a32:	ret    0x8
   16a35:	int3   
   16a36:	int3   
   16a37:	int3   
   16a38:	int3   
   16a39:	int3   
   16a3a:	mov    edi,edi
   16a3c:	push   ebp
   16a3d:	mov    ebp,esp
   16a3f:	push   ecx
   16a40:	push   esi
   16a41:	mov    esi,ecx
   16a43:	cmp    DWORD PTR [esi+0xc],0x0
   16a47:	mov    ecx,DWORD PTR [ebp+0xc]
   16a4a:	je     0x16a84
   16a4c:	mov    eax,DWORD PTR [esi+0x4]
   16a4f:	cmp    ecx,DWORD PTR [eax]
   16a51:	jne    0x16a84
   16a53:	cmp    DWORD PTR [ebp+0x10],eax
   16a56:	jne    0x16a84
   16a58:	push   DWORD PTR [eax+0x4]
   16a5b:	mov    ecx,esi
   16a5d:	call   0x15fe6
   16a62:	mov    ecx,DWORD PTR ds:0x786c4
   16a68:	mov    eax,DWORD PTR [esi+0x4]
   16a6b:	mov    DWORD PTR [eax+0x4],ecx
   16a6e:	mov    eax,DWORD PTR [esi+0x4]
   16a71:	and    DWORD PTR [esi+0xc],0x0
   16a75:	mov    DWORD PTR [eax],eax
   16a77:	mov    eax,DWORD PTR [esi+0x4]
   16a7a:	mov    DWORD PTR [eax+0x8],eax
   16a7d:	mov    eax,DWORD PTR [esi+0x4]
   16a80:	mov    ecx,DWORD PTR [eax]
   16a82:	jmp    0x16aa9
   16a84:	cmp    ecx,DWORD PTR [ebp+0x10]
   16a87:	je     0x16aa9
   16a89:	push   edi
   16a8a:	mov    edi,ecx
   16a8c:	lea    ecx,[ebp+0xc]
   16a8f:	call   0x111a8
   16a94:	push   edi
   16a95:	lea    eax,[ebp-0x4]
   16a98:	push   eax
   16a99:	mov    ecx,esi
   16a9b:	call   0x15d84
   16aa0:	mov    ecx,DWORD PTR [ebp+0xc]
   16aa3:	cmp    ecx,DWORD PTR [ebp+0x10]
   16aa6:	jne    0x16a8a
   16aa8:	pop    edi
   16aa9:	mov    eax,DWORD PTR [ebp+0x8]
   16aac:	mov    DWORD PTR [eax],ecx
   16aae:	pop    esi
   16aaf:	leave  
   16ab0:	ret    0xc
   16ab3:	int3   
   16ab4:	int3   
   16ab5:	int3   
   16ab6:	int3   
   16ab7:	int3   
   16ab8:	mov    edi,edi
   16aba:	push   ebp
   16abb:	mov    ebp,esp
   16abd:	push   ecx
   16abe:	push   ebx
   16abf:	push   esi
   16ac0:	push   edi
   16ac1:	mov    edi,ecx
   16ac3:	mov    eax,DWORD PTR [edi+0x4]
   16ac6:	mov    esi,DWORD PTR [eax+0x4]
   16ac9:	mov    ebx,eax
   16acb:	mov    al,0x1
   16acd:	jmp    0x16ae8
   16acf:	lea    eax,[esi+0xc]
   16ad2:	push   eax
   16ad3:	push   DWORD PTR [ebp+0xc]
   16ad6:	mov    ebx,esi
   16ad8:	call   0x19a38
   16add:	test   al,al
   16adf:	je     0x16ae5
   16ae1:	mov    esi,DWORD PTR [esi]
   16ae3:	jmp    0x16ae8
   16ae5:	mov    esi,DWORD PTR [esi+0x8]
   16ae8:	cmp    esi,DWORD PTR ds:0x786cc
   16aee:	jne    0x16acf
   16af0:	cmp    BYTE PTR [edi+0x8],0x0
   16af4:	je     0x16b11
   16af6:	push   DWORD PTR [ebp+0xc]
   16af9:	lea    eax,[ebp+0xc]
   16afc:	push   ebx
   16afd:	push   esi
   16afe:	push   eax
   16aff:	mov    ecx,edi
   16b01:	call   0x16180
   16b06:	mov    ecx,DWORD PTR [eax]
   16b08:	mov    eax,DWORD PTR [ebp+0x8]
   16b0b:	mov    BYTE PTR [eax+0x4],0x1
   16b0f:	jmp    0x16b44
   16b11:	mov    DWORD PTR [ebp-0x4],ebx
   16b14:	test   al,al
   16b16:	je     0x16b27
   16b18:	mov    eax,DWORD PTR [edi+0x4]
   16b1b:	cmp    ebx,DWORD PTR [eax]
   16b1d:	je     0x16af6
   16b1f:	lea    ecx,[ebp-0x4]
   16b22:	call   0x1332e
   16b27:	push   DWORD PTR [ebp+0xc]
   16b2a:	mov    eax,DWORD PTR [ebp-0x4]
   16b2d:	add    eax,0xc
   16b30:	push   eax
   16b31:	call   0x19a38
   16b36:	test   al,al
   16b38:	jne    0x16af6
   16b3a:	mov    eax,DWORD PTR [ebp+0x8]
   16b3d:	mov    ecx,DWORD PTR [ebp-0x4]
   16b40:	mov    BYTE PTR [eax+0x4],0x0
   16b44:	pop    edi
   16b45:	pop    esi
   16b46:	mov    DWORD PTR [eax],ecx
   16b48:	pop    ebx
   16b49:	leave  
   16b4a:	ret    0x8
   16b4d:	int3   
   16b4e:	int3   
   16b4f:	int3   
   16b50:	int3   
   16b51:	int3   
   16b52:	mov    edi,edi
   16b54:	push   ebp
   16b55:	mov    ebp,esp
   16b57:	sub    esp,0x10
   16b5a:	push   DWORD PTR [ebp+0x8]
   16b5d:	lea    ecx,[ebp-0x10]
   16b60:	call   0x162d6
   16b65:	push   DWORD PTR [ebp+0xc]
   16b68:	mov    ecx,DWORD PTR [ebp+0x8]
   16b6b:	call   0x16302
   16b70:	mov    ecx,DWORD PTR [ebp+0xc]
   16b73:	lea    eax,[ebp-0x10]
   16b76:	push   eax
   16b77:	call   0x16302
   16b7c:	lea    ecx,[ebp-0x10]
   16b7f:	call   0x151f4
   16b84:	leave  
   16b85:	ret    0x8
   16b88:	int3   
   16b89:	int3   
   16b8a:	int3   
   16b8b:	int3   
   16b8c:	int3   
   16b8d:	int3   
   16b8e:	mov    edi,edi
   16b90:	push   esi
   16b91:	mov    esi,ecx
   16b93:	push   edi
   16b94:	mov    BYTE PTR [esi+0x8],0x0
   16b98:	call   0x14714
   16b9d:	lea    edi,[esi+0x10]
   16ba0:	mov    ecx,edi
   16ba2:	call   0x12a72
   16ba7:	mov    edi,DWORD PTR [edi]
   16ba9:	push   0x0
   16bab:	push   edi
   16bac:	call   0x119c0
   16bb1:	call   eax
   16bb3:	pop    edi
   16bb4:	mov    eax,esi
   16bb6:	pop    esi
   16bb7:	ret    
   16bb8:	int3   
   16bb9:	int3   
   16bba:	int3   
   16bbb:	int3   
   16bbc:	int3   
   16bbd:	int3   
   16bbe:	mov    edi,edi
   16bc0:	push   ebp
   16bc1:	mov    ebp,esp
   16bc3:	sub    esp,0x10
   16bc6:	mov    eax,DWORD PTR [ebp+0x8]
   16bc9:	mov    eax,DWORD PTR [eax]
   16bcb:	and    DWORD PTR [ebp-0x4],0x0
   16bcf:	mov    DWORD PTR [ebp-0x8],eax
   16bd2:	lea    eax,[ebp-0x8]
   16bd5:	push   eax
   16bd6:	lea    eax,[ebp-0x10]
   16bd9:	push   eax
   16bda:	call   0x16664
   16bdf:	mov    eax,DWORD PTR [eax]
   16be1:	add    eax,0x10
   16be4:	leave  
   16be5:	ret    0x4
   16be8:	int3   
   16be9:	int3   
   16bea:	int3   
   16beb:	int3   
   16bec:	int3   
   16bed:	int3   
   16bee:	mov    edi,edi
   16bf0:	push   esi
   16bf1:	mov    esi,ecx
   16bf3:	mov    BYTE PTR [esi+0x8],0x0
   16bf7:	call   0x147d8
   16bfc:	mov    eax,esi
   16bfe:	pop    esi
   16bff:	ret    0x8
   16c02:	int3   
   16c03:	int3   
   16c04:	int3   
   16c05:	int3   
   16c06:	int3   
   16c07:	int3   
   16c08:	mov    edi,edi
   16c0a:	push   ebp
   16c0b:	mov    ebp,esp
   16c0d:	push   ecx
   16c0e:	push   ecx
   16c0f:	push   DWORD PTR [ebp+0xc]
   16c12:	lea    eax,[ebp-0x8]
   16c15:	push   eax
   16c16:	call   0x166d8
   16c1b:	mov    eax,DWORD PTR [ebp+0x8]
   16c1e:	mov    ecx,DWORD PTR [ebp-0x8]
   16c21:	mov    DWORD PTR [eax],ecx
   16c23:	mov    cl,BYTE PTR [ebp-0x4]
   16c26:	mov    BYTE PTR [eax+0x4],cl
   16c29:	leave  
   16c2a:	ret    0x8
   16c2d:	int3   
   16c2e:	int3   
   16c2f:	int3   
   16c30:	int3   
   16c31:	int3   
   16c32:	mov    edi,edi
   16c34:	push   ebp
   16c35:	mov    ebp,esp
   16c37:	push   ecx
   16c38:	push   esi
   16c39:	mov    esi,ecx
   16c3b:	mov    eax,DWORD PTR [esi+0x4]
   16c3e:	mov    ecx,DWORD PTR [eax]
   16c40:	push   eax
   16c41:	push   ecx
   16c42:	lea    eax,[ebp-0x4]
   16c45:	push   eax
   16c46:	mov    ecx,esi
   16c48:	call   0x16772
   16c4d:	push   DWORD PTR [esi+0x4]
   16c50:	call   0x11d22
   16c55:	xor    eax,eax
   16c57:	mov    DWORD PTR [esi+0x4],eax
   16c5a:	mov    DWORD PTR [esi+0xc],eax
   16c5d:	dec    DWORD PTR ds:0x78874
   16c63:	pop    ecx
   16c64:	pop    esi
   16c65:	jne    0x16c7d
   16c67:	mov    ecx,DWORD PTR ds:0x786b8
   16c6d:	mov    ds:0x786b8,eax
   16c72:	cmp    ecx,eax
   16c74:	je     0x16c7d
   16c76:	push   ecx
   16c77:	call   0x11d22
   16c7c:	pop    ecx
   16c7d:	leave  
   16c7e:	ret    
   16c7f:	int3   
   16c80:	int3   
   16c81:	int3   
   16c82:	int3   
   16c83:	int3   
   16c84:	mov    edi,edi
   16c86:	push   ebp
   16c87:	mov    ebp,esp
   16c89:	push   ecx
   16c8a:	push   ecx
   16c8b:	push   DWORD PTR [ebp+0xc]
   16c8e:	lea    eax,[ebp-0x8]
   16c91:	push   eax
   16c92:	call   0x167f0
   16c97:	mov    eax,DWORD PTR [ebp+0x8]
   16c9a:	mov    ecx,DWORD PTR [ebp-0x8]
   16c9d:	mov    DWORD PTR [eax],ecx
   16c9f:	mov    cl,BYTE PTR [ebp-0x4]
   16ca2:	mov    BYTE PTR [eax+0x4],cl
   16ca5:	leave  
   16ca6:	ret    0x8
   16ca9:	int3   
   16caa:	int3   
   16cab:	int3   
   16cac:	int3   
   16cad:	int3   
   16cae:	mov    edi,edi
   16cb0:	push   ebp
   16cb1:	mov    ebp,esp
   16cb3:	push   ecx
   16cb4:	mov    eax,DWORD PTR [ecx+0x4]
   16cb7:	mov    edx,DWORD PTR [eax]
   16cb9:	push   eax
   16cba:	push   edx
   16cbb:	lea    eax,[ebp-0x4]
   16cbe:	push   eax
   16cbf:	call   0x1688a
   16cc4:	leave  
   16cc5:	ret    
   16cc6:	int3   
   16cc7:	int3   
   16cc8:	int3   
   16cc9:	int3   
   16cca:	int3   
   16ccb:	int3   
   16ccc:	mov    edi,edi
   16cce:	push   ebp
   16ccf:	mov    ebp,esp
   16cd1:	push   ecx
   16cd2:	push   ecx
   16cd3:	push   DWORD PTR [ebp+0xc]
   16cd6:	lea    eax,[ebp-0x8]
   16cd9:	push   eax
   16cda:	call   0x16908
   16cdf:	mov    eax,DWORD PTR [ebp+0x8]
   16ce2:	mov    ecx,DWORD PTR [ebp-0x8]
   16ce5:	mov    DWORD PTR [eax],ecx
   16ce7:	mov    cl,BYTE PTR [ebp-0x4]
   16cea:	mov    BYTE PTR [eax+0x4],cl
   16ced:	leave  
   16cee:	ret    0x8
   16cf1:	int3   
   16cf2:	int3   
   16cf3:	int3   
   16cf4:	int3   
   16cf5:	int3   
   16cf6:	mov    edi,edi
   16cf8:	push   ebp
   16cf9:	mov    ebp,esp
   16cfb:	push   ecx
   16cfc:	push   ecx
   16cfd:	push   DWORD PTR [ebp+0xc]
   16d00:	lea    eax,[ebp-0x8]
   16d03:	push   eax
   16d04:	call   0x169a2
   16d09:	mov    eax,DWORD PTR [ebp+0x8]
   16d0c:	mov    ecx,DWORD PTR [ebp-0x8]
   16d0f:	mov    DWORD PTR [eax],ecx
   16d11:	mov    cl,BYTE PTR [ebp-0x4]
   16d14:	mov    BYTE PTR [eax+0x4],cl
   16d17:	leave  
   16d18:	ret    0x8
   16d1b:	int3   
   16d1c:	int3   
   16d1d:	int3   
   16d1e:	int3   
   16d1f:	int3   
   16d20:	mov    edi,edi
   16d22:	push   ebp
   16d23:	mov    ebp,esp
   16d25:	push   ecx
   16d26:	push   ecx
   16d27:	push   esi
   16d28:	push   DWORD PTR [ebp+0x8]
   16d2b:	lea    eax,[ebp-0x8]
   16d2e:	push   eax
   16d2f:	mov    esi,ecx
   16d31:	call   0x14048
   16d36:	and    DWORD PTR [ebp+0x8],0x0
   16d3a:	lea    eax,[ebp+0x8]
   16d3d:	push   eax
   16d3e:	push   DWORD PTR [ebp-0x4]
   16d41:	push   DWORD PTR [ebp-0x8]
   16d44:	call   0x13974
   16d49:	add    esp,0xc
   16d4c:	push   DWORD PTR [ebp-0x4]
   16d4f:	lea    eax,[ebp-0x4]
   16d52:	push   DWORD PTR [ebp-0x8]
   16d55:	mov    ecx,esi
   16d57:	push   eax
   16d58:	call   0x16a3a
   16d5d:	mov    eax,DWORD PTR [ebp+0x8]
   16d60:	pop    esi
   16d61:	leave  
   16d62:	ret    0x4
   16d65:	int3   
   16d66:	int3   
   16d67:	int3   
   16d68:	int3   
   16d69:	int3   
   16d6a:	mov    edi,edi
   16d6c:	push   ebp
   16d6d:	mov    ebp,esp
   16d6f:	push   ecx
   16d70:	mov    eax,DWORD PTR [ecx+0x4]
   16d73:	mov    edx,DWORD PTR [eax]
   16d75:	push   eax
   16d76:	push   edx
   16d77:	lea    eax,[ebp-0x4]
   16d7a:	push   eax
   16d7b:	call   0x16a3a
   16d80:	leave  
   16d81:	ret    
   16d82:	int3   
   16d83:	int3   
   16d84:	int3   
   16d85:	int3   
   16d86:	int3   
   16d87:	int3   
   16d88:	mov    edi,edi
   16d8a:	push   ebp
   16d8b:	mov    ebp,esp
   16d8d:	push   ecx
   16d8e:	push   ecx
   16d8f:	push   DWORD PTR [ebp+0xc]
   16d92:	lea    eax,[ebp-0x8]
   16d95:	push   eax
   16d96:	call   0x16ab8
   16d9b:	mov    eax,DWORD PTR [ebp+0x8]
   16d9e:	mov    ecx,DWORD PTR [ebp-0x8]
   16da1:	mov    DWORD PTR [eax],ecx
   16da3:	mov    cl,BYTE PTR [ebp-0x4]
   16da6:	mov    BYTE PTR [eax+0x4],cl
   16da9:	leave  
   16daa:	ret    0x8
   16dad:	int3   
   16dae:	int3   
   16daf:	int3   
   16db0:	int3   
   16db1:	int3   
   16db2:	mov    edi,edi
   16db4:	push   ebp
   16db5:	mov    ebp,esp
   16db7:	push   esi
   16db8:	push   edi
   16db9:	xor    edi,edi
   16dbb:	push   edi
   16dbc:	push   edi
   16dbd:	push   edi
   16dbe:	mov    esi,ecx
   16dc0:	mov    eax,DWORD PTR [esi+0x10]
   16dc3:	push   edi
   16dc4:	push   eax
   16dc5:	call   0x119ea
   16dca:	call   eax
   16dcc:	test   eax,eax
   16dce:	jl     0x16dec
   16dd0:	lea    eax,[ebp+0x8]
   16dd3:	push   eax
   16dd4:	mov    ecx,esi
   16dd6:	call   0x16bbe
   16ddb:	mov    ecx,DWORD PTR [ebp+0xc]
   16dde:	mov    DWORD PTR [eax],ecx
   16de0:	mov    esi,DWORD PTR [esi+0x10]
   16de3:	push   edi
   16de4:	push   esi
   16de5:	call   0x11a14
   16dea:	call   eax
   16dec:	pop    edi
   16ded:	pop    esi
   16dee:	pop    ebp
   16def:	ret    0x8
   16df2:	int3   
   16df3:	int3   
   16df4:	int3   
   16df5:	int3   
   16df6:	int3   
   16df7:	int3   
   16df8:	mov    edi,edi
   16dfa:	push   ebp
   16dfb:	mov    ebp,esp
   16dfd:	sub    esp,0x38
   16e00:	push   esi
   16e01:	call   0x1a416
   16e06:	test   al,al
   16e08:	jne    0x16e12
   16e0a:	mov    eax,DWORD PTR [ebp+0x8]
   16e0d:	jmp    0x16ee3
   16e12:	push   DWORD PTR [ebp+0xc]
   16e15:	lea    ecx,[ebp-0x8]
   16e18:	push   DWORD PTR [ebp+0x8]
   16e1b:	call   0x13678
   16e20:	mov    ecx,DWORD PTR ds:0x788a0
   16e26:	lea    eax,[ebp-0x8]
   16e29:	push   eax
   16e2a:	lea    eax,[ebp+0xc]
   16e2d:	push   eax
   16e2e:	call   0x1407a
   16e33:	mov    esi,DWORD PTR [ebp+0xc]
   16e36:	mov    eax,ds:0x788a0
   16e3b:	cmp    esi,DWORD PTR [eax+0x4]
   16e3e:	jne    0x16e9e
   16e40:	push   ecx
   16e41:	push   ecx
   16e42:	lea    eax,[ebp-0x8]
   16e45:	mov    ecx,esp
   16e47:	push   eax
   16e48:	call   0x13698
   16e4d:	lea    eax,[ebp-0x10]
   16e50:	push   eax
   16e51:	call   0x136ba
   16e56:	lea    eax,[ebp-0x10]
   16e59:	push   eax
   16e5a:	lea    eax,[ebp-0x8]
   16e5d:	push   eax
   16e5e:	lea    ecx,[ebp-0x38]
   16e61:	call   0x13870
   16e66:	lea    eax,[ebp-0x38]
   16e69:	push   eax
   16e6a:	lea    ecx,[ebp-0x28]
   16e6d:	call   0x138d8
   16e72:	mov    ecx,DWORD PTR ds:0x788a0
   16e78:	lea    eax,[ebp-0x28]
   16e7b:	push   eax
   16e7c:	lea    eax,[ebp-0x18]
   16e7f:	push   eax
   16e80:	call   0x16d88
   16e85:	lea    ecx,[ebp-0x28]
   16e88:	call   0x1365a
   16e8d:	lea    ecx,[ebp-0x38]
   16e90:	call   0x1365a
   16e95:	push   DWORD PTR [ebp-0x10]
   16e98:	call   0x11d22
   16e9d:	pop    ecx
   16e9e:	mov    eax,DWORD PTR [ebp+0x10]
   16ea1:	movzx  eax,BYTE PTR [eax]
   16ea4:	cmp    eax,0x100
   16ea9:	jge    0x16ec1
   16eab:	mov    ecx,DWORD PTR ds:0x788a0
   16eb1:	lea    eax,[ebp-0x8]
   16eb4:	push   eax
   16eb5:	lea    eax,[ebp+0xc]
   16eb8:	push   eax
   16eb9:	call   0x1407a
   16ebe:	mov    esi,DWORD PTR [ebp+0xc]
   16ec1:	mov    eax,ds:0x788a0
   16ec6:	cmp    esi,DWORD PTR [eax+0x4]
   16ec9:	je     0x16ed0
   16ecb:	mov    esi,DWORD PTR [esi+0x14]
   16ece:	jmp    0x16ed3
   16ed0:	mov    esi,DWORD PTR [ebp+0x8]
   16ed3:	call   0x1a432
   16ed8:	push   DWORD PTR [ebp-0x8]
   16edb:	call   0x11d22
   16ee0:	pop    ecx
   16ee1:	mov    eax,esi
   16ee3:	pop    esi
   16ee4:	leave  
   16ee5:	ret    0xc
   16ee8:	int3   
   16ee9:	int3   
   16eea:	int3   
   16eeb:	int3   
   16eec:	int3   
   16eed:	int3   
   16eee:	mov    edi,edi
   16ef0:	push   ebp
   16ef1:	mov    ebp,esp
   16ef3:	sub    esp,0x38
   16ef6:	push   esi
   16ef7:	call   0x1a416
   16efc:	test   al,al
   16efe:	jne    0x16f08
   16f00:	mov    eax,DWORD PTR [ebp+0x8]
   16f03:	jmp    0x16fd9
   16f08:	push   DWORD PTR [ebp+0xc]
   16f0b:	lea    ecx,[ebp-0x8]
   16f0e:	push   DWORD PTR [ebp+0x8]
   16f11:	call   0x135fc
   16f16:	mov    ecx,DWORD PTR ds:0x788a4
   16f1c:	lea    eax,[ebp-0x8]
   16f1f:	push   eax
   16f20:	lea    eax,[ebp+0xc]
   16f23:	push   eax
   16f24:	call   0x13c68
   16f29:	mov    esi,DWORD PTR [ebp+0xc]
   16f2c:	mov    eax,ds:0x788a4
   16f31:	cmp    esi,DWORD PTR [eax+0x4]
   16f34:	jne    0x16f94
   16f36:	push   ecx
   16f37:	push   ecx
   16f38:	lea    eax,[ebp-0x8]
   16f3b:	mov    ecx,esp
   16f3d:	push   eax
   16f3e:	call   0x1361c
   16f43:	lea    eax,[ebp-0x10]
   16f46:	push   eax
   16f47:	call   0x136fe
   16f4c:	lea    eax,[ebp-0x10]
   16f4f:	push   eax
   16f50:	lea    eax,[ebp-0x8]
   16f53:	push   eax
   16f54:	lea    ecx,[ebp-0x38]
   16f57:	call   0x13774
   16f5c:	lea    eax,[ebp-0x38]
   16f5f:	push   eax
   16f60:	lea    ecx,[ebp-0x28]
   16f63:	call   0x13904
   16f68:	mov    ecx,DWORD PTR ds:0x788a4
   16f6e:	lea    eax,[ebp-0x28]
   16f71:	push   eax
   16f72:	lea    eax,[ebp-0x18]
   16f75:	push   eax
   16f76:	call   0x16ccc
   16f7b:	lea    ecx,[ebp-0x28]
   16f7e:	call   0x1365a
   16f83:	lea    ecx,[ebp-0x38]
   16f86:	call   0x1365a
   16f8b:	push   DWORD PTR [ebp-0x10]
   16f8e:	call   0x11d22
   16f93:	pop    ecx
   16f94:	mov    eax,DWORD PTR [ebp+0x10]
   16f97:	movzx  eax,BYTE PTR [eax]
   16f9a:	cmp    eax,0x100
   16f9f:	jge    0x16fb7
   16fa1:	mov    ecx,DWORD PTR ds:0x788a4
   16fa7:	lea    eax,[ebp-0x8]
   16faa:	push   eax
   16fab:	lea    eax,[ebp+0xc]
   16fae:	push   eax
   16faf:	call   0x13c68
   16fb4:	mov    esi,DWORD PTR [ebp+0xc]
   16fb7:	mov    eax,ds:0x788a4
   16fbc:	cmp    esi,DWORD PTR [eax+0x4]
   16fbf:	je     0x16fc6
   16fc1:	mov    esi,DWORD PTR [esi+0x14]
   16fc4:	jmp    0x16fc9
   16fc6:	mov    esi,DWORD PTR [ebp+0x8]
   16fc9:	call   0x1a432
   16fce:	push   DWORD PTR [ebp-0x8]
   16fd1:	call   0x11d22
   16fd6:	pop    ecx
   16fd7:	mov    eax,esi
   16fd9:	pop    esi
   16fda:	leave  
   16fdb:	ret    0xc
   16fde:	int3   
   16fdf:	int3   
   16fe0:	int3   
   16fe1:	int3   
   16fe2:	int3   
   16fe3:	int3   
   16fe4:	mov    edi,edi
   16fe6:	push   esi
   16fe7:	mov    esi,ecx
   16fe9:	mov    BYTE PTR [esi+0x8],0x0
   16fed:	call   0x14776
   16ff2:	mov    eax,esi
   16ff4:	pop    esi
   16ff5:	ret    0x8
   16ff8:	int3   
   16ff9:	int3   
   16ffa:	int3   
   16ffb:	int3   
   16ffc:	int3   
   16ffd:	int3   
   16ffe:	mov    edi,edi
   17000:	push   ebp
   17001:	mov    ebp,esp
   17003:	sub    esp,0x90
   17009:	push   esi
   1700a:	mov    esi,ecx
   1700c:	lea    ecx,[ebp-0x48]
   1700f:	call   0x13ac6
   17014:	push   eax
   17015:	push   DWORD PTR [ebp+0x8]
   17018:	lea    ecx,[ebp-0x90]
   1701e:	call   0x13c40
   17023:	push   eax
   17024:	lea    eax,[ebp-0x8]
   17027:	push   eax
   17028:	mov    ecx,esi
   1702a:	call   0x16c84
   1702f:	mov    esi,DWORD PTR [eax]
   17031:	lea    ecx,[ebp-0x90]
   17037:	call   0x1363e
   1703c:	lea    ecx,[ebp-0x48]
   1703f:	call   0x134ce
   17044:	lea    eax,[esi+0x18]
   17047:	pop    esi
   17048:	leave  
   17049:	ret    0x4
   1704c:	int3   
   1704d:	int3   
   1704e:	int3   
   1704f:	int3   
   17050:	int3   
   17051:	int3   
   17052:	mov    edi,edi
   17054:	push   ebp
   17055:	mov    ebp,esp
   17057:	sub    esp,0x20
   1705a:	push   esi
   1705b:	push   0xffffffff
   1705d:	mov    esi,ecx
   1705f:	push   0x1e148
   17064:	lea    ecx,[ebp-0x8]
   17067:	call   0x12b26
   1706c:	lea    eax,[ebp-0x8]
   1706f:	push   eax
   17070:	push   DWORD PTR [ebp+0x8]
   17073:	lea    ecx,[ebp-0x20]
   17076:	call   0x13774
   1707b:	push   eax
   1707c:	lea    eax,[ebp-0x10]
   1707f:	push   eax
   17080:	mov    ecx,esi
   17082:	call   0x16ccc
   17087:	mov    esi,DWORD PTR [eax]
   17089:	lea    ecx,[ebp-0x20]
   1708c:	call   0x1365a
   17091:	push   DWORD PTR [ebp-0x8]
   17094:	call   0x11d22
   17099:	pop    ecx
   1709a:	lea    eax,[esi+0x14]
   1709d:	pop    esi
   1709e:	leave  
   1709f:	ret    0x4
   170a2:	int3   
   170a3:	int3   
   170a4:	int3   
   170a5:	int3   
   170a6:	int3   
   170a7:	int3   
   170a8:	mov    edi,edi
   170aa:	push   esi
   170ab:	mov    esi,ecx
   170ad:	mov    BYTE PTR [esi+0x8],0x0
   170b1:	call   0x1483a
   170b6:	mov    eax,esi
   170b8:	pop    esi
   170b9:	ret    0x8
   170bc:	int3   
   170bd:	int3   
   170be:	int3   
   170bf:	int3   
   170c0:	int3   
   170c1:	int3   
   170c2:	mov    edi,edi
   170c4:	push   ebp
   170c5:	mov    ebp,esp
   170c7:	sub    esp,0x14
   170ca:	and    DWORD PTR [ebp-0x4],0x0
   170ce:	push   esi
   170cf:	lea    eax,[ebp-0x4]
   170d2:	push   eax
   170d3:	push   DWORD PTR [ebp+0x8]
   170d6:	mov    esi,ecx
   170d8:	lea    ecx,[ebp-0xc]
   170db:	call   0x1379c
   170e0:	push   eax
   170e1:	lea    eax,[ebp-0x14]
   170e4:	push   eax
   170e5:	mov    ecx,esi
   170e7:	call   0x16cf6
   170ec:	mov    ecx,DWORD PTR [ebp-0x8]
   170ef:	mov    esi,DWORD PTR [eax]
   170f1:	test   ecx,ecx
   170f3:	je     0x170fa
   170f5:	call   0x11d64
   170fa:	lea    eax,[esi+0x10]
   170fd:	pop    esi
   170fe:	leave  
   170ff:	ret    0x4
   17102:	int3   
   17103:	int3   
   17104:	int3   
   17105:	int3   
   17106:	int3   
   17107:	int3   
   17108:	mov    edi,edi
   1710a:	push   ebp
   1710b:	mov    ebp,esp
   1710d:	sub    esp,0x20
   17110:	push   esi
   17111:	mov    esi,ecx
   17113:	mov    eax,DWORD PTR [esi+0x24]
   17116:	mov    ecx,DWORD PTR [esi+0x28]
   17119:	add    ecx,eax
   1711b:	cmp    DWORD PTR [esi+0x10],ecx
   1711e:	jbe    0x171b1
   17124:	mov    ecx,DWORD PTR [esi+0x18]
   17127:	mov    ecx,DWORD PTR [ecx]
   17129:	push   edi
   1712a:	mov    DWORD PTR [ebp-0x4],ecx
   1712d:	test   eax,eax
   1712f:	je     0x1713e
   17131:	mov    edi,eax
   17133:	lea    ecx,[ebp-0x4]
   17136:	call   0x12e72
   1713b:	dec    edi
   1713c:	jne    0x17133
   1713e:	mov    eax,DWORD PTR [ebp-0x4]
   17141:	mov    edi,DWORD PTR [eax+0xc]
   17144:	lea    ecx,[ebp-0x20]
   17147:	mov    BYTE PTR [ebp-0x18],0x0
   1714b:	call   0x1489c
   17150:	mov    eax,DWORD PTR [esi+0x8]
   17153:	mov    ecx,DWORD PTR [eax]
   17155:	mov    DWORD PTR [ebp-0x4],ecx
   17158:	cmp    ecx,eax
   1715a:	je     0x1719b
   1715c:	lea    edx,[ecx+0x58]
   1715f:	mov    eax,DWORD PTR [edx]
   17161:	cmp    eax,edi
   17163:	jae    0x1717a
   17165:	push   ecx
   17166:	lea    eax,[ebp-0x8]
   17169:	push   eax
   1716a:	lea    ecx,[esi+0x4]
   1716d:	call   0x1542a
   17172:	mov    ecx,DWORD PTR [ebp-0x8]
   17175:	mov    DWORD PTR [ebp-0x4],ecx
   17178:	jmp    0x17196
   1717a:	sub    eax,edi
   1717c:	mov    DWORD PTR [edx],eax
   1717e:	push   edx
   1717f:	lea    eax,[ebp-0x10]
   17182:	push   eax
   17183:	lea    ecx,[ebp-0x20]
   17186:	call   0x1663a
   1718b:	lea    ecx,[ebp-0x4]
   1718e:	call   0x12dfc
   17193:	mov    ecx,DWORD PTR [ebp-0x4]
   17196:	cmp    ecx,DWORD PTR [esi+0x8]
   17199:	jne    0x1715c
   1719b:	lea    eax,[ebp-0x20]
   1719e:	push   eax
   1719f:	add    esi,0x14
   171a2:	push   esi
   171a3:	call   0x16b52
   171a8:	lea    ecx,[ebp-0x20]
   171ab:	call   0x151f4
   171b0:	pop    edi
   171b1:	pop    esi
   171b2:	leave  
   171b3:	ret    
   171b4:	int3   
   171b5:	int3   
   171b6:	int3   
   171b7:	int3   
   171b8:	int3   
   171b9:	int3   
   171ba:	mov    edi,edi
   171bc:	push   ebp
   171bd:	mov    ebp,esp
   171bf:	sub    esp,0x20
   171c2:	push   esi
   171c3:	push   0xffffffff
   171c5:	mov    esi,ecx
   171c7:	push   0x1e0ae
   171cc:	lea    ecx,[ebp-0x8]
   171cf:	call   0x12be0
   171d4:	lea    eax,[ebp-0x8]
   171d7:	push   eax
   171d8:	push   DWORD PTR [ebp+0x8]
   171db:	lea    ecx,[ebp-0x20]
   171de:	call   0x13870
   171e3:	push   eax
   171e4:	lea    eax,[ebp-0x10]
   171e7:	push   eax
   171e8:	mov    ecx,esi
   171ea:	call   0x16d88
   171ef:	mov    esi,DWORD PTR [eax]
   171f1:	lea    ecx,[ebp-0x20]
   171f4:	call   0x1365a
   171f9:	push   DWORD PTR [ebp-0x8]
   171fc:	call   0x11d22
   17201:	pop    ecx
   17202:	lea    eax,[esi+0x14]
   17205:	pop    esi
   17206:	leave  
   17207:	ret    0x4
   1720a:	int3   
   1720b:	int3   
   1720c:	int3   
   1720d:	int3   
   1720e:	int3   
   1720f:	int3   
   17210:	mov    edi,edi
   17212:	push   ebp
   17213:	mov    ebp,esp
   17215:	sub    esp,0x838
   1721b:	mov    eax,ds:0x77b1c
   17220:	xor    eax,ebp
   17222:	mov    DWORD PTR [ebp-0x4],eax
   17225:	mov    eax,DWORD PTR [ebp+0x8]
   17228:	push   ebx
   17229:	push   esi
   1722a:	push   edi
   1722b:	mov    DWORD PTR [ebp-0x808],eax
   17231:	xor    eax,eax
   17233:	push   0x7fe
   17238:	mov    WORD PTR [ebp-0x804],ax
   1723f:	xor    ebx,ebx
   17241:	lea    eax,[ebp-0x802]
   17247:	push   ebx
   17248:	push   eax
   17249:	call   0x1dd02
   1724e:	mov    eax,0x77cb8
   17253:	add    esp,0xc
   17256:	mov    edx,eax
   17258:	mov    cx,WORD PTR [eax]
   1725b:	inc    eax
   1725c:	inc    eax
   1725d:	cmp    cx,bx
   17260:	jne    0x17258
   17262:	sub    eax,edx
   17264:	lea    edi,[ebp-0x804]
   1726a:	dec    edi
   1726b:	dec    edi
   1726c:	mov    cx,WORD PTR [edi+0x2]
   17270:	inc    edi
   17271:	inc    edi
   17272:	cmp    cx,bx
   17275:	jne    0x1726c
   17277:	mov    ecx,eax
   17279:	shr    ecx,0x2
   1727c:	mov    esi,edx
   1727e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17280:	mov    ecx,eax
   17282:	mov    eax,DWORD PTR [ebp-0x808]
   17288:	and    ecx,0x3
   1728b:	add    eax,0x400
   17290:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17292:	mov    edx,eax
   17294:	mov    cx,WORD PTR [eax]
   17297:	inc    eax
   17298:	inc    eax
   17299:	cmp    cx,bx
   1729c:	jne    0x17294
   1729e:	sub    eax,edx
   172a0:	lea    edi,[ebp-0x804]
   172a6:	dec    edi
   172a7:	dec    edi
   172a8:	mov    cx,WORD PTR [edi+0x2]
   172ac:	inc    edi
   172ad:	inc    edi
   172ae:	cmp    cx,bx
   172b1:	jne    0x172a8
   172b3:	mov    ecx,eax
   172b5:	shr    ecx,0x2
   172b8:	mov    esi,edx
   172ba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   172bc:	mov    ecx,eax
   172be:	and    ecx,0x3
   172c1:	lea    eax,[ebp-0x804]
   172c7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   172c9:	mov    DWORD PTR [ebp-0x818],eax
   172cf:	lea    ecx,[eax+0x2]
   172d2:	mov    dx,WORD PTR [eax]
   172d5:	inc    eax
   172d6:	inc    eax
   172d7:	cmp    dx,bx
   172da:	jne    0x172d2
   172dc:	sub    eax,ecx
   172de:	sar    eax,1
   172e0:	add    eax,eax
   172e2:	mov    WORD PTR [ebp-0x81a],ax
   172e9:	mov    WORD PTR [ebp-0x81c],ax
   172f0:	lea    eax,[ebp-0x81c]
   172f6:	mov    DWORD PTR [ebp-0x82c],eax
   172fc:	lea    eax,[ebp-0x838]
   17302:	push   eax
   17303:	xor    edi,edi
   17305:	inc    edi
   17306:	push   edi
   17307:	push   ebx
   17308:	push   ebx
   17309:	lea    eax,[ebp-0x834]
   1730f:	push   eax
   17310:	push   0xf003f
   17315:	lea    eax,[ebp-0x80c]
   1731b:	push   eax
   1731c:	mov    DWORD PTR [ebp-0x834],0x18
   17326:	mov    DWORD PTR [ebp-0x830],ebx
   1732c:	mov    DWORD PTR [ebp-0x828],0x40
   17336:	mov    DWORD PTR [ebp-0x824],ebx
   1733c:	mov    DWORD PTR [ebp-0x820],ebx
   17342:	call   0x11720
   17347:	call   eax
   17349:	test   eax,eax
   1734b:	jl     0x174db
   17351:	push   0x1e94e
   17356:	push   0x9
   17358:	push   0x1e93a
   1735d:	call   0x16df8
   17362:	mov    DWORD PTR [ebp-0x810],eax
   17368:	lea    edx,[eax+0x2]
   1736b:	mov    cx,WORD PTR [eax]
   1736e:	inc    eax
   1736f:	inc    eax
   17370:	cmp    cx,bx
   17373:	jne    0x1736b
   17375:	sub    eax,edx
   17377:	sar    eax,1
   17379:	add    eax,eax
   1737b:	mov    WORD PTR [ebp-0x812],ax
   17382:	mov    WORD PTR [ebp-0x814],ax
   17389:	mov    eax,DWORD PTR [ebp-0x808]
   1738f:	lea    ecx,[eax+0x2]
   17392:	mov    dx,WORD PTR [eax]
   17395:	inc    eax
   17396:	inc    eax
   17397:	cmp    dx,bx
   1739a:	jne    0x17392
   1739c:	sub    eax,ecx
   1739e:	sar    eax,1
   173a0:	inc    eax
   173a1:	movzx  eax,ax
   173a4:	add    eax,eax
   173a6:	push   eax
   173a7:	push   DWORD PTR [ebp-0x808]
   173ad:	lea    eax,[ebp-0x814]
   173b3:	push   edi
   173b4:	push   ebx
   173b5:	push   eax
   173b6:	push   DWORD PTR [ebp-0x80c]
   173bc:	call   0x11402
   173c1:	call   eax
   173c3:	test   eax,eax
   173c5:	jl     0x174db
   173cb:	push   0x1e912
   173d0:	push   0x5
   173d2:	push   0x1e906
   173d7:	mov    DWORD PTR [ebp-0x808],0x3
   173e1:	call   0x16df8
   173e6:	mov    DWORD PTR [ebp-0x810],eax
   173ec:	lea    edx,[eax+0x2]
   173ef:	mov    cx,WORD PTR [eax]
   173f2:	inc    eax
   173f3:	inc    eax
   173f4:	cmp    cx,bx
   173f7:	jne    0x173ef
   173f9:	sub    eax,edx
   173fb:	push   0x4
   173fd:	sar    eax,1
   173ff:	pop    esi
   17400:	add    eax,eax
   17402:	push   esi
   17403:	mov    WORD PTR [ebp-0x812],ax
   1740a:	mov    WORD PTR [ebp-0x814],ax
   17411:	lea    eax,[ebp-0x808]
   17417:	push   eax
   17418:	push   esi
   17419:	push   ebx
   1741a:	lea    eax,[ebp-0x814]
   17420:	push   eax
   17421:	push   DWORD PTR [ebp-0x80c]
   17427:	call   0x11402
   1742c:	call   eax
   1742e:	test   eax,eax
   17430:	jl     0x174db
   17436:	push   0x1e8e0
   1743b:	push   esi
   1743c:	push   0x1e8d6
   17441:	mov    DWORD PTR [ebp-0x808],edi
   17447:	call   0x16df8
   1744c:	mov    DWORD PTR [ebp-0x810],eax
   17452:	lea    ecx,[eax+0x2]
   17455:	mov    dx,WORD PTR [eax]
   17458:	inc    eax
   17459:	inc    eax
   1745a:	cmp    dx,bx
   1745d:	jne    0x17455
   1745f:	sub    eax,ecx
   17461:	sar    eax,1
   17463:	add    eax,eax
   17465:	push   esi
   17466:	mov    WORD PTR [ebp-0x812],ax
   1746d:	mov    WORD PTR [ebp-0x814],ax
   17474:	lea    eax,[ebp-0x808]
   1747a:	push   eax
   1747b:	push   esi
   1747c:	push   ebx
   1747d:	lea    eax,[ebp-0x814]
   17483:	push   eax
   17484:	push   DWORD PTR [ebp-0x80c]
   1748a:	call   0x11402
   1748f:	call   eax
   17491:	test   eax,eax
   17493:	jl     0x174db
   17495:	lea    eax,[ebp-0x81c]
   1749b:	push   eax
   1749c:	call   0x116f6
   174a1:	call   eax
   174a3:	test   eax,eax
   174a5:	jl     0x174db
   174a7:	lea    eax,[ebp-0x804]
   174ad:	push   eax
   174ae:	push   DWORD PTR [ebp-0x80c]
   174b4:	call   0x12140
   174b9:	test   al,al
   174bb:	je     0x174ce
   174bd:	push   DWORD PTR [ebp-0x80c]
   174c3:	call   0x113d8
   174c8:	call   eax
   174ca:	test   eax,eax
   174cc:	jl     0x174db
   174ce:	push   DWORD PTR [ebp-0x80c]
   174d4:	call   0x11552
   174d9:	call   eax
   174db:	mov    ecx,DWORD PTR [ebp-0x4]
   174de:	pop    edi
   174df:	pop    esi
   174e0:	xor    ecx,ebp
   174e2:	pop    ebx
   174e3:	call   0x1dca9
   174e8:	leave  
   174e9:	ret    0x4
   174ec:	int3   
   174ed:	int3   
   174ee:	int3   
   174ef:	int3   
   174f0:	int3   
   174f1:	int3   
   174f2:	mov    edi,edi
   174f4:	push   ebp
   174f5:	mov    ebp,esp
   174f7:	sub    esp,0x44
   174fa:	mov    eax,DWORD PTR [ebp+0xc]
   174fd:	mov    eax,DWORD PTR [eax]
   174ff:	push   esi
   17500:	mov    DWORD PTR [ebp-0x2c],eax
   17503:	lea    eax,[ebp-0x2c]
   17506:	push   eax
   17507:	lea    eax,[ebp-0x44]
   1750a:	push   eax
   1750b:	xor    esi,esi
   1750d:	push   0x1f0fff
   17512:	lea    eax,[ebp-0x10]
   17515:	push   eax
   17516:	mov    DWORD PTR [ebp-0x44],0x18
   1751d:	mov    DWORD PTR [ebp-0x40],esi
   17520:	mov    DWORD PTR [ebp-0x38],0x200
   17527:	mov    DWORD PTR [ebp-0x3c],esi
   1752a:	mov    DWORD PTR [ebp-0x34],esi
   1752d:	mov    DWORD PTR [ebp-0x30],esi
   17530:	mov    DWORD PTR [ebp-0x28],esi
   17533:	mov    DWORD PTR [ebp-0x10],esi
   17536:	call   0x1125e
   1753b:	call   eax
   1753d:	test   eax,eax
   1753f:	jl     0x177b3
   17545:	push   ebx
   17546:	push   edi
   17547:	push   0x40
   17549:	mov    edi,0x1000
   1754e:	push   edi
   1754f:	lea    eax,[ebp-0x14]
   17552:	push   eax
   17553:	push   esi
   17554:	lea    eax,[ebp-0x8]
   17557:	push   eax
   17558:	push   DWORD PTR [ebp-0x10]
   1755b:	mov    ebx,0x400
   17560:	mov    DWORD PTR [ebp-0x8],esi
   17563:	mov    DWORD PTR [ebp-0x14],ebx
   17566:	call   0x11288
   1756b:	call   eax
   1756d:	test   eax,eax
   1756f:	jl     0x1757a
   17571:	mov    eax,DWORD PTR [ebp-0x8]
   17574:	mov    ecx,DWORD PTR [ebp+0xc]
   17577:	mov    DWORD PTR [ecx+0x8],eax
   1757a:	push   0x4
   1757c:	push   edi
   1757d:	lea    eax,[ebp-0x14]
   17580:	push   eax
   17581:	push   esi
   17582:	lea    eax,[ebp-0x18]
   17585:	push   eax
   17586:	push   DWORD PTR [ebp-0x10]
   17589:	mov    DWORD PTR [ebp-0x18],esi
   1758c:	mov    DWORD PTR [ebp-0x14],ebx
   1758f:	call   0x11288
   17594:	call   eax
   17596:	test   eax,eax
   17598:	jl     0x175a3
   1759a:	mov    eax,DWORD PTR [ebp-0x18]
   1759d:	mov    ecx,DWORD PTR [ebp+0xc]
   175a0:	mov    DWORD PTR [ecx+0xc],eax
   175a3:	lea    eax,[ebp-0x1c]
   175a6:	push   eax
   175a7:	push   DWORD PTR [ebp-0x2c]
   175aa:	call   0x11a3e
   175af:	call   eax
   175b1:	test   eax,eax
   175b3:	jl     0x177b1
   175b9:	push   DWORD PTR [ebp-0x1c]
   175bc:	call   0x1179e
   175c1:	call   eax
   175c3:	mov    ebx,DWORD PTR [ebp-0x8]
   175c6:	mov    DWORD PTR [ebp-0x4],esi
   175c9:	cmp    ebx,esi
   175cb:	je     0x17797
   175d1:	mov    edi,DWORD PTR [ebp-0x18]
   175d4:	push   0x40
   175d6:	push   0x77a08
   175db:	push   edi
   175dc:	mov    DWORD PTR [ebp-0xc],edi
   175df:	call   0x19a96
   175e4:	push   0x1e97a
   175e9:	push   0x4
   175eb:	push   0x1e970
   175f0:	call   0x16df8
   175f5:	mov    edx,eax
   175f7:	mov    cx,WORD PTR [eax]
   175fa:	inc    eax
   175fb:	inc    eax
   175fc:	cmp    cx,si
   175ff:	jne    0x175f7
   17601:	sub    eax,edx
   17603:	dec    edi
   17604:	dec    edi
   17605:	mov    cx,WORD PTR [edi+0x2]
   17609:	inc    edi
   1760a:	inc    edi
   1760b:	cmp    cx,si
   1760e:	jne    0x17605
   17610:	mov    ecx,eax
   17612:	shr    ecx,0x2
   17615:	mov    esi,edx
   17617:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17619:	mov    ecx,eax
   1761b:	push   0x60
   1761d:	and    ecx,0x3
   17620:	push   ebx
   17621:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17623:	mov    DWORD PTR [ebp-0x20],ebx
   17626:	call   0x19a48
   1762b:	push   0x68
   1762d:	push   eax
   1762e:	call   0x19a48
   17633:	push   DWORD PTR [ebp-0xc]
   17636:	push   eax
   17637:	call   0x19a60
   1763c:	push   0xb8
   17641:	push   eax
   17642:	call   0x19a48
   17647:	push   DWORD PTR ds:0x78568
   1764d:	push   eax
   1764e:	call   0x19a60
   17653:	push   0xc00b
   17658:	push   eax
   17659:	call   0x19a7a
   1765e:	push   0x74
   17660:	push   eax
   17661:	call   0x19a48
   17666:	push   0x2
   17668:	push   eax
   17669:	call   0x19a48
   1766e:	push   0xd0ff
   17673:	push   eax
   17674:	call   0x19a7a
   17679:	push   0x61
   1767b:	push   eax
   1767c:	call   0x19a48
   17681:	mov    ebx,DWORD PTR [ebp+0x8]
   17684:	mov    edi,eax
   17686:	mov    esi,ebx
   17688:	push   0x0
   1768a:	push   esi
   1768b:	push   edi
   1768c:	call   0x1a1fc
   17691:	mov    ecx,eax
   17693:	sub    ecx,esi
   17695:	add    DWORD PTR [ebp-0x4],ecx
   17698:	add    edi,ecx
   1769a:	cmp    DWORD PTR [ebp-0x4],0x5
   1769e:	mov    esi,eax
   176a0:	jb     0x17688
   176a2:	mov    eax,DWORD PTR [ebp-0x4]
   176a5:	push   edi
   176a6:	add    eax,ebx
   176a8:	push   eax
   176a9:	call   0x19abe
   176ae:	mov    eax,DWORD PTR [ebp-0x8]
   176b1:	test   eax,eax
   176b3:	je     0x17797
   176b9:	add    eax,0x400
   176be:	lea    ecx,[eax-0x10]
   176c1:	mov    DWORD PTR [ebp-0x24],ecx
   176c4:	mov    ecx,DWORD PTR [ebp-0x4]
   176c7:	lea    esi,[eax-0xc]
   176ca:	push   esi
   176cb:	lea    edi,[eax-0x4]
   176ce:	lea    ebx,[eax-0x8]
   176d1:	shr    ecx,0x2
   176d4:	lea    ecx,[ecx*4+0x14]
   176db:	push   0x40
   176dd:	sub    eax,ecx
   176df:	push   ebx
   176e0:	mov    DWORD PTR [ebp-0xc],eax
   176e3:	mov    eax,DWORD PTR [ebp+0x8]
   176e6:	mov    DWORD PTR [edi],eax
   176e8:	push   edi
   176e9:	mov    DWORD PTR [ebx],0x5
   176ef:	and    DWORD PTR [esi],0x0
   176f2:	push   0xffffffff
   176f4:	call   DWORD PTR ds:0x784e4
   176fa:	test   eax,eax
   176fc:	jl     0x17761
   176fe:	push   DWORD PTR [ebp-0x4]
   17701:	push   0x90
   17706:	push   DWORD PTR [ebp-0xc]
   17709:	call   0x1dd02
   1770e:	mov    eax,DWORD PTR [ebp-0x20]
   17711:	sub    eax,DWORD PTR [ebp+0x8]
   17714:	add    esp,0xc
   17717:	sub    eax,0x5
   1771a:	push   eax
   1771b:	mov    eax,DWORD PTR [ebp-0xc]
   1771e:	inc    eax
   1771f:	push   eax
   17720:	call   0x19a60
   17725:	push   0xe9
   1772a:	push   DWORD PTR [ebp-0xc]
   1772d:	call   0x19a48
   17732:	mov    eax,DWORD PTR [ebp-0x24]
   17735:	and    DWORD PTR [eax],0x0
   17738:	push   eax
   17739:	push   DWORD PTR [ebp-0x4]
   1773c:	push   DWORD PTR [ebp-0xc]
   1773f:	push   DWORD PTR [ebp+0x8]
   17742:	push   0xffffffff
   17744:	call   DWORD PTR ds:0x784d8
   1774a:	mov    eax,DWORD PTR [ebp+0xc]
   1774d:	mov    BYTE PTR [eax+0x10],0x1
   17751:	lea    eax,[ebp-0x20]
   17754:	push   eax
   17755:	push   DWORD PTR [esi]
   17757:	push   ebx
   17758:	push   edi
   17759:	push   0xffffffff
   1775b:	call   DWORD PTR ds:0x784e4
   17761:	mov    esi,DWORD PTR [ebp-0x8]
   17764:	test   esi,esi
   17766:	je     0x17797
   17768:	lea    eax,[esi+0x400]
   1776e:	lea    ecx,[eax-0x4]
   17771:	lea    edx,[eax-0x8]
   17774:	add    eax,0xfffffff4
   17777:	push   eax
   17778:	push   0x20
   1777a:	push   edx
   1777b:	mov    DWORD PTR [ecx],esi
   1777d:	push   ecx
   1777e:	mov    DWORD PTR [edx],0x400
   17784:	and    DWORD PTR [eax],0x0
   17787:	push   0xffffffff
   17789:	call   DWORD PTR ds:0x784e4
   1778f:	test   eax,eax
   17791:	jge    0x17797
   17793:	and    DWORD PTR [ebp-0x8],0x0
   17797:	call   0x11774
   1779c:	call   eax
   1779e:	mov    ecx,DWORD PTR [ebp-0x1c]
   177a1:	call   DWORD PTR ds:0x1f450
   177a7:	push   DWORD PTR [ebp-0x10]
   177aa:	call   0x11552
   177af:	call   eax
   177b1:	pop    edi
   177b2:	pop    ebx
   177b3:	pop    esi
   177b4:	leave  
   177b5:	ret    0x8
   177b8:	int3   
   177b9:	int3   
   177ba:	int3   
   177bb:	int3   
   177bc:	int3   
   177bd:	int3   
   177be:	mov    edi,edi
   177c0:	push   ebp
   177c1:	mov    ebp,esp
   177c3:	cmp    DWORD PTR ds:0x78568,0x0
   177ca:	push   esi
   177cb:	mov    esi,DWORD PTR [ebp+0x10]
   177ce:	jne    0x17899
   177d4:	push   0x1eb24
   177d9:	push   0xc
   177db:	push   0x1eb0a
   177e0:	call   0x16df8
   177e5:	push   eax
   177e6:	push   DWORD PTR [ebp+0x8]
   177e9:	call   0x11e4a
   177ee:	test   al,al
   177f0:	je     0x17899
   177f6:	mov    eax,DWORD PTR [esi+0x4]
   177f9:	push   0x1eae0
   177fe:	push   0xc
   17800:	push   0x1ead2
   17805:	mov    ds:0x78560,eax
   1780a:	call   0x16eee
   1780f:	push   eax
   17810:	push   DWORD PTR [esi+0x4]
   17813:	call   0x123a4
   17818:	push   0x1ea96
   1781d:	push   0xc
   1781f:	push   0x1ea88
   17824:	mov    ds:0x78568,eax
   17829:	call   0x16eee
   1782e:	push   eax
   1782f:	push   DWORD PTR [esi+0x4]
   17832:	call   0x123a4
   17837:	push   0x1ea4a
   1783c:	push   0xc
   1783e:	push   0x1ea3c
   17843:	mov    ds:0x7856c,eax
   17848:	call   0x16eee
   1784d:	push   eax
   1784e:	push   DWORD PTR [esi+0x4]
   17851:	call   0x123a4
   17856:	push   0x1ea14
   1785b:	push   0x5
   1785d:	push   0x1ea0e
   17862:	mov    ds:0x78570,eax
   17867:	call   0x16eee
   1786c:	push   eax
   1786d:	push   DWORD PTR [esi+0x4]
   17870:	call   0x123a4
   17875:	push   0x1e9e6
   1787a:	push   0x4
   1787c:	push   0x1e9e0
   17881:	mov    ds:0x78574,eax
   17886:	call   0x16eee
   1788b:	push   eax
   1788c:	push   DWORD PTR [esi+0x4]
   1788f:	call   0x123a4
   17894:	mov    ds:0x78578,eax
   17899:	cmp    DWORD PTR ds:0x78564,0x0
   178a0:	jne    0x178c8
   178a2:	push   0x1e9be
   178a7:	push   0x9
   178a9:	push   0x1e9aa
   178ae:	call   0x16df8
   178b3:	push   eax
   178b4:	push   DWORD PTR [ebp+0x8]
   178b7:	call   0x11e4a
   178bc:	test   al,al
   178be:	je     0x178c8
   178c0:	mov    eax,DWORD PTR [esi+0x4]
   178c3:	mov    ds:0x78564,eax
   178c8:	pop    esi
   178c9:	pop    ebp
   178ca:	ret    0xc
   178cd:	int3   
   178ce:	int3   
   178cf:	int3   
   178d0:	int3   
   178d1:	int3   
   178d2:	mov    edi,edi
   178d4:	push   ebp
   178d5:	mov    ebp,esp
   178d7:	sub    esp,0x4c
   178da:	push   ebx
   178db:	push   esi
   178dc:	push   edi
   178dd:	push   DWORD PTR [ebp+0xc]
   178e0:	push   DWORD PTR [ebp+0x8]
   178e3:	call   DWORD PTR ds:0x784f0
   178e9:	mov    DWORD PTR [ebp-0x8],eax
   178ec:	xor    eax,eax
   178ee:	xor    ebx,ebx
   178f0:	mov    DWORD PTR [ebp-0x30],ebx
   178f3:	lea    edi,[ebp-0x2c]
   178f6:	stos   DWORD PTR es:[edi],eax
   178f7:	stos   DWORD PTR es:[edi],eax
   178f8:	stos   DWORD PTR es:[edi],eax
   178f9:	stos   DWORD PTR es:[edi],eax
   178fa:	xor    eax,eax
   178fc:	mov    DWORD PTR [ebp-0x1c],ebx
   178ff:	lea    edi,[ebp-0x18]
   17902:	stos   DWORD PTR es:[edi],eax
   17903:	stos   DWORD PTR es:[edi],eax
   17904:	stos   DWORD PTR es:[edi],eax
   17905:	stos   DWORD PTR es:[edi],eax
   17906:	lea    eax,[ebp-0x30]
   17909:	push   eax
   1790a:	push   ebx
   1790b:	call   0x11ed8
   17910:	mov    BYTE PTR [ebp+0xf],al
   17913:	lea    eax,[ebp-0x1c]
   17916:	push   eax
   17917:	push   0x1
   17919:	call   0x11ed8
   1791e:	mov    BYTE PTR [ebp-0x1],al
   17921:	cmp    BYTE PTR [ebp+0xf],bl
   17924:	je     0x17985
   17926:	mov    esi,DWORD PTR [ebp-0x30]
   17929:	cmp    esi,ebx
   1792b:	je     0x17985
   1792d:	push   0x6
   1792f:	pop    ecx
   17930:	push   ebx
   17931:	xor    eax,eax
   17933:	mov    DWORD PTR [ebp-0x4c],ebx
   17936:	lea    edi,[ebp-0x48]
   17939:	push   0x1c
   1793b:	rep stos DWORD PTR es:[edi],eax
   1793d:	lea    eax,[ebp-0x4c]
   17940:	push   eax
   17941:	push   ebx
   17942:	push   DWORD PTR [ebp+0x8]
   17945:	call   0x11528
   1794a:	call   eax
   1794c:	cmp    DWORD PTR [ebp-0x44],esi
   1794f:	jne    0x17985
   17951:	push   ebx
   17952:	push   0x4
   17954:	lea    eax,[ebp+0xc]
   17957:	push   eax
   17958:	push   0x9
   1795a:	push   DWORD PTR [ebp+0x8]
   1795d:	mov    DWORD PTR [ebp+0xc],ebx
   17960:	call   0x11528
   17965:	call   eax
   17967:	test   eax,eax
   17969:	jge    0x1796e
   1796b:	mov    DWORD PTR [ebp+0xc],ebx
   1796e:	cmp    DWORD PTR [ebp+0xc],ebx
   17971:	je     0x17985
   17973:	lea    eax,[ebp-0x30]
   17976:	push   eax
   17977:	push   DWORD PTR [ebp+0xc]
   1797a:	call   0x174f2
   1797f:	push   ebx
   17980:	call   0x11f72
   17985:	cmp    BYTE PTR [ebp-0x1],bl
   17988:	je     0x179f3
   1798a:	mov    esi,DWORD PTR [ebp-0x1c]
   1798d:	cmp    esi,ebx
   1798f:	je     0x179f3
   17991:	cmp    BYTE PTR [ebp-0xc],bl
   17994:	jne    0x179f3
   17996:	push   0x6
   17998:	pop    ecx
   17999:	push   ebx
   1799a:	xor    eax,eax
   1799c:	mov    DWORD PTR [ebp-0x4c],ebx
   1799f:	lea    edi,[ebp-0x48]
   179a2:	push   0x1c
   179a4:	rep stos DWORD PTR es:[edi],eax
   179a6:	lea    eax,[ebp-0x4c]
   179a9:	push   eax
   179aa:	push   ebx
   179ab:	push   DWORD PTR [ebp+0x8]
   179ae:	call   0x11528
   179b3:	call   eax
   179b5:	cmp    DWORD PTR [ebp-0x44],esi
   179b8:	jne    0x179f3
   179ba:	push   ebx
   179bb:	push   0x4
   179bd:	lea    eax,[ebp+0xc]
   179c0:	push   eax
   179c1:	push   0x9
   179c3:	push   DWORD PTR [ebp+0x8]
   179c6:	mov    DWORD PTR [ebp+0xc],ebx
   179c9:	call   0x11528
   179ce:	call   eax
   179d0:	test   eax,eax
   179d2:	jge    0x179d7
   179d4:	mov    DWORD PTR [ebp+0xc],ebx
   179d7:	cmp    DWORD PTR [ebp+0xc],ebx
   179da:	je     0x179f3
   179dc:	lea    eax,[ebp-0x1c]
   179df:	push   eax
   179e0:	push   DWORD PTR [ebp+0xc]
   179e3:	call   0x124b0
   179e8:	lea    eax,[ebp-0x1c]
   179eb:	push   eax
   179ec:	push   0x1
   179ee:	call   0x11f28
   179f3:	mov    eax,DWORD PTR [ebp-0x8]
   179f6:	pop    edi
   179f7:	pop    esi
   179f8:	pop    ebx
   179f9:	leave  
   179fa:	ret    0x8
   179fd:	int3   
   179fe:	int3   
   179ff:	int3   
   17a00:	int3   
   17a01:	int3   
   17a02:	push   0x24
   17a04:	push   0x77698
   17a09:	call   0x1dd40
   17a0e:	xor    ebx,ebx
   17a10:	push   ebx
   17a11:	push   ebx
   17a12:	push   ebx
   17a13:	push   ebx
   17a14:	push   0x77b58
   17a19:	call   0x119ea
   17a1e:	call   eax
   17a20:	cmp    eax,ebx
   17a22:	jge    0x17a33
   17a24:	mov    eax,DWORD PTR [ebp+0x8]
   17a27:	mov    DWORD PTR [eax+0x8],0x4
   17a2e:	jmp    0x17aec
   17a33:	mov    DWORD PTR [ebp-0x4],ebx
   17a36:	push   0xffffffff
   17a38:	mov    esi,DWORD PTR [ebp+0x8]
   17a3b:	lea    eax,[esi+0xc]
   17a3e:	push   eax
   17a3f:	lea    ecx,[ebp-0x24]
   17a42:	call   0x135fc
   17a47:	push   0xffffffff
   17a49:	mov    eax,DWORD PTR [ebp-0x20]
   17a4c:	lea    eax,[eax+esi*1+0xd]
   17a50:	push   eax
   17a51:	lea    ecx,[ebp-0x2c]
   17a54:	call   0x135fc
   17a59:	push   0xffffffff
   17a5b:	push   0x1e148
   17a60:	lea    ecx,[ebp-0x34]
   17a63:	call   0x12b26
   17a68:	lea    eax,[ebp-0x34]
   17a6b:	push   eax
   17a6c:	lea    eax,[ebp-0x2c]
   17a6f:	push   eax
   17a70:	call   0x19a18
   17a75:	mov    BYTE PTR [ebp-0x19],al
   17a78:	push   DWORD PTR [ebp-0x34]
   17a7b:	call   0x11d22
   17a80:	pop    ecx
   17a81:	lea    eax,[ebp-0x24]
   17a84:	mov    ecx,DWORD PTR ds:0x77b28
   17a8a:	push   eax
   17a8b:	cmp    BYTE PTR [ebp-0x19],bl
   17a8e:	je     0x17a97
   17a90:	call   0x1668e
   17a95:	jmp    0x17aa7
   17a97:	call   0x17052
   17a9c:	lea    ecx,[ebp-0x2c]
   17a9f:	push   ecx
   17aa0:	mov    ecx,eax
   17aa2:	call   0x12a28
   17aa7:	mov    DWORD PTR [esi+0x8],ebx
   17aaa:	push   DWORD PTR [ebp-0x2c]
   17aad:	call   0x11d22
   17ab2:	push   DWORD PTR [ebp-0x24]
   17ab5:	call   0x11d22
   17aba:	pop    ecx
   17abb:	pop    ecx
   17abc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17ac3:	jmp    0x17adf
   17ac5:	xor    eax,eax
   17ac7:	inc    eax
   17ac8:	ret    
   17ac9:	mov    esp,DWORD PTR [ebp-0x18]
   17acc:	mov    eax,DWORD PTR [ebp+0x8]
   17acf:	mov    DWORD PTR [eax+0x8],0x4
   17ad6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17add:	xor    ebx,ebx
   17adf:	push   ebx
   17ae0:	push   0x77b58
   17ae5:	call   0x11a14
   17aea:	call   eax
   17aec:	call   0x1dd85
   17af1:	ret    0x4
   17af4:	int3   
   17af5:	int3   
   17af6:	int3   
   17af7:	int3   
   17af8:	int3   
   17af9:	int3   
   17afa:	push   0xc
   17afc:	push   0x776b8
   17b01:	call   0x1dd40
   17b06:	xor    edi,edi
   17b08:	push   edi
   17b09:	push   edi
   17b0a:	push   edi
   17b0b:	push   edi
   17b0c:	push   0x77b58
   17b11:	call   0x119ea
   17b16:	call   eax
   17b18:	cmp    eax,edi
   17b1a:	jge    0x17b28
   17b1c:	mov    eax,DWORD PTR [ebp+0x8]
   17b1f:	mov    DWORD PTR [eax+0x8],0x4
   17b26:	jmp    0x17b9f
   17b28:	mov    DWORD PTR [ebp-0x4],edi
   17b2b:	mov    esi,DWORD PTR [ebp+0x8]
   17b2e:	lea    eax,[esi+0x4]
   17b31:	mov    ecx,DWORD PTR ds:0x77bb4
   17b37:	push   eax
   17b38:	cmp    DWORD PTR [esi],edi
   17b3a:	jbe    0x17b67
   17b3c:	call   0x170c2
   17b41:	mov    ebx,eax
   17b43:	push   DWORD PTR [esi]
   17b45:	lea    eax,[esi+0xc]
   17b48:	push   eax
   17b49:	lea    ecx,[ebp-0x1c]
   17b4c:	call   0x13b82
   17b51:	push   eax
   17b52:	mov    ecx,ebx
   17b54:	call   0x13504
   17b59:	mov    ecx,DWORD PTR [ebp-0x1c]
   17b5c:	cmp    ecx,edi
   17b5e:	je     0x17b6c
   17b60:	call   0x11d64
   17b65:	jmp    0x17b6c
   17b67:	call   0x16d20
   17b6c:	mov    DWORD PTR [esi+0x8],edi
   17b6f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17b76:	jmp    0x17b92
   17b78:	xor    eax,eax
   17b7a:	inc    eax
   17b7b:	ret    
   17b7c:	mov    esp,DWORD PTR [ebp-0x18]
   17b7f:	mov    eax,DWORD PTR [ebp+0x8]
   17b82:	mov    DWORD PTR [eax+0x8],0x4
   17b89:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17b90:	xor    edi,edi
   17b92:	push   edi
   17b93:	push   0x77b58
   17b98:	call   0x11a14
   17b9d:	call   eax
   17b9f:	call   0x1dd85
   17ba4:	ret    0x4
   17ba7:	int3   
   17ba8:	int3   
   17ba9:	int3   
   17baa:	int3   
   17bab:	int3   
   17bac:	mov    edi,edi
   17bae:	push   ebp
   17baf:	mov    ebp,esp
   17bb1:	sub    esp,0x10
   17bb4:	and    DWORD PTR [ebp-0xc],0x0
   17bb8:	xor    ecx,ecx
   17bba:	mov    DWORD PTR [ebp-0x10],0x1
   17bc1:	xor    eax,eax
   17bc3:	mov    dl,BYTE PTR [eax+0x73a18]
   17bc9:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17bcd:	inc    ecx
   17bce:	inc    eax
   17bcf:	and    eax,0xf
   17bd2:	cmp    ecx,0x8
   17bd5:	jne    0x17bc3
   17bd7:	push   ecx
   17bd8:	lea    eax,[ebp-0x10]
   17bdb:	push   eax
   17bdc:	lea    ecx,[ebp-0x8]
   17bdf:	mov    DWORD PTR [ebp-0x4],0x2
   17be6:	call   0x13b82
   17beb:	mov    ecx,DWORD PTR ds:0x77bb4
   17bf1:	push   eax
   17bf2:	lea    eax,[ebp-0x4]
   17bf5:	push   eax
   17bf6:	call   0x170c2
   17bfb:	mov    ecx,eax
   17bfd:	call   0x13504
   17c02:	mov    ecx,DWORD PTR [ebp-0x8]
   17c05:	test   ecx,ecx
   17c07:	je     0x17c0e
   17c09:	call   0x11d64
   17c0e:	leave  
   17c0f:	ret    
   17c10:	int3   
   17c11:	int3   
   17c12:	int3   
   17c13:	int3   
   17c14:	int3   
   17c15:	int3   
   17c16:	push   0x848
   17c1b:	push   0x776d8
   17c20:	call   0x1e040
   17c25:	xor    ebx,ebx
   17c27:	mov    BYTE PTR [ebp-0x81d],bl
   17c2d:	xor    eax,eax
   17c2f:	mov    WORD PTR [ebp-0x81c],ax
   17c36:	push   0x7fe
   17c3b:	push   ebx
   17c3c:	lea    eax,[ebp-0x81a]
   17c42:	push   eax
   17c43:	call   0x1dd02
   17c48:	add    esp,0xc
   17c4b:	push   0x1ebbc
   17c50:	push   0x15
   17c52:	push   0x1eb90
   17c57:	call   0x16df8
   17c5c:	mov    edx,eax
   17c5e:	mov    cx,WORD PTR [eax]
   17c61:	inc    eax
   17c62:	inc    eax
   17c63:	cmp    cx,bx
   17c66:	jne    0x17c5e
   17c68:	sub    eax,edx
   17c6a:	lea    edi,[ebp-0x81c]
   17c70:	dec    edi
   17c71:	dec    edi
   17c72:	mov    cx,WORD PTR [edi+0x2]
   17c76:	inc    edi
   17c77:	inc    edi
   17c78:	cmp    cx,bx
   17c7b:	jne    0x17c72
   17c7d:	mov    ecx,eax
   17c7f:	mov    esi,edx
   17c81:	shr    ecx,0x2
   17c84:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17c86:	mov    ecx,eax
   17c88:	and    ecx,0x3
   17c8b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17c8d:	mov    eax,0x77a08
   17c92:	mov    edx,eax
   17c94:	mov    cx,WORD PTR [eax]
   17c97:	inc    eax
   17c98:	inc    eax
   17c99:	cmp    cx,bx
   17c9c:	jne    0x17c94
   17c9e:	sub    eax,edx
   17ca0:	lea    edi,[ebp-0x81c]
   17ca6:	dec    edi
   17ca7:	dec    edi
   17ca8:	mov    cx,WORD PTR [edi+0x2]
   17cac:	inc    edi
   17cad:	inc    edi
   17cae:	cmp    cx,bx
   17cb1:	jne    0x17ca8
   17cb3:	mov    ecx,eax
   17cb5:	mov    esi,edx
   17cb7:	shr    ecx,0x2
   17cba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17cbc:	mov    ecx,eax
   17cbe:	and    ecx,0x3
   17cc1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17cc3:	push   0x1eb66
   17cc8:	push   0x4
   17cca:	push   0x1e970
   17ccf:	call   0x16df8
   17cd4:	mov    edx,eax
   17cd6:	mov    cx,WORD PTR [eax]
   17cd9:	inc    eax
   17cda:	inc    eax
   17cdb:	cmp    cx,bx
   17cde:	jne    0x17cd6
   17ce0:	sub    eax,edx
   17ce2:	lea    edi,[ebp-0x81c]
   17ce8:	dec    edi
   17ce9:	dec    edi
   17cea:	mov    cx,WORD PTR [edi+0x2]
   17cee:	inc    edi
   17cef:	inc    edi
   17cf0:	cmp    cx,bx
   17cf3:	jne    0x17cea
   17cf5:	mov    ecx,eax
   17cf7:	mov    esi,edx
   17cf9:	shr    ecx,0x2
   17cfc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17cfe:	mov    ecx,eax
   17d00:	and    ecx,0x3
   17d03:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d05:	lea    eax,[ebp-0x81c]
   17d0b:	push   eax
   17d0c:	lea    eax,[ebp-0x858]
   17d12:	push   eax
   17d13:	call   0x1157c
   17d18:	call   eax
   17d1a:	mov    DWORD PTR [ebp-0x824],ebx
   17d20:	xor    eax,eax
   17d22:	lea    edi,[ebp-0x84c]
   17d28:	stos   DWORD PTR es:[edi],eax
   17d29:	stos   DWORD PTR es:[edi],eax
   17d2a:	stos   DWORD PTR es:[edi],eax
   17d2b:	stos   DWORD PTR es:[edi],eax
   17d2c:	stos   DWORD PTR es:[edi],eax
   17d2d:	mov    DWORD PTR [ebp-0x830],ebx
   17d33:	xor    eax,eax
   17d35:	lea    edi,[ebp-0x82c]
   17d3b:	stos   DWORD PTR es:[edi],eax
   17d3c:	mov    DWORD PTR [ebp-0x850],0x18
   17d46:	mov    DWORD PTR [ebp-0x84c],ebx
   17d4c:	mov    DWORD PTR [ebp-0x844],0x240
   17d56:	lea    eax,[ebp-0x858]
   17d5c:	mov    DWORD PTR [ebp-0x848],eax
   17d62:	mov    DWORD PTR [ebp-0x840],ebx
   17d68:	mov    DWORD PTR [ebp-0x83c],ebx
   17d6e:	push   ebx
   17d6f:	push   ebx
   17d70:	push   0x60
   17d72:	push   0x1
   17d74:	push   ebx
   17d75:	push   0x80
   17d7a:	push   ebx
   17d7b:	lea    eax,[ebp-0x830]
   17d81:	push   eax
   17d82:	lea    eax,[ebp-0x850]
   17d88:	push   eax
   17d89:	push   0x100001
   17d8e:	lea    eax,[ebp-0x824]
   17d94:	push   eax
   17d95:	call   0x11456
   17d9a:	call   eax
   17d9c:	cmp    eax,ebx
   17d9e:	jge    0x17da7
   17da0:	xor    al,al
   17da2:	jmp    0x17e3d
   17da7:	mov    DWORD PTR [ebp-0x4],ebx
   17daa:	mov    esi,DWORD PTR [ebp+0xc]
   17dad:	mov    eax,0x10000
   17db2:	cmp    esi,eax
   17db4:	jbe    0x17db8
   17db6:	mov    esi,eax
   17db8:	push   esi
   17db9:	call   0x11cec
   17dbe:	pop    ecx
   17dbf:	mov    DWORD PTR [ebp-0x828],eax
   17dc5:	mov    DWORD PTR [ebp-0x838],ebx
   17dcb:	xor    eax,eax
   17dcd:	lea    edi,[ebp-0x834]
   17dd3:	stos   DWORD PTR es:[edi],eax
   17dd4:	push   ebx
   17dd5:	lea    eax,[ebp-0x838]
   17ddb:	push   eax
   17ddc:	push   esi
   17ddd:	push   DWORD PTR [ebp-0x828]
   17de3:	lea    eax,[ebp-0x830]
   17de9:	push   eax
   17dea:	push   ebx
   17deb:	push   ebx
   17dec:	push   ebx
   17ded:	push   DWORD PTR [ebp-0x824]
   17df3:	call   0x117f2
   17df8:	call   eax
   17dfa:	cmp    eax,ebx
   17dfc:	jl     0x17e23
   17dfe:	mov    ecx,DWORD PTR [ebp-0x82c]
   17e04:	mov    edi,DWORD PTR [ebp+0x8]
   17e07:	mov    esi,DWORD PTR [ebp-0x828]
   17e0d:	xor    eax,eax
   17e0f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17e11:	sete   al
   17e14:	mov    BYTE PTR [ebp-0x81d],al
   17e1a:	jmp    0x17e23
   17e1c:	xor    eax,eax
   17e1e:	inc    eax
   17e1f:	ret    
   17e20:	mov    esp,DWORD PTR [ebp-0x18]
   17e23:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17e2a:	push   DWORD PTR [ebp-0x824]
   17e30:	call   0x11552
   17e35:	call   eax
   17e37:	mov    al,BYTE PTR [ebp-0x81d]
   17e3d:	call   0x1e088
   17e42:	ret    0x8
   17e45:	int3   
   17e46:	int3   
   17e47:	int3   
   17e48:	int3   
   17e49:	int3   
   17e4a:	push   0x874
   17e4f:	push   0x776f8
   17e54:	call   0x1e040
   17e59:	mov    eax,DWORD PTR [ebp+0x8]
   17e5c:	mov    DWORD PTR [ebp-0x830],eax
   17e62:	xor    ebx,ebx
   17e64:	mov    BYTE PTR [ebp-0x81d],bl
   17e6a:	xor    eax,eax
   17e6c:	mov    WORD PTR [ebp-0x81c],ax
   17e73:	push   0x7fe
   17e78:	push   ebx
   17e79:	lea    eax,[ebp-0x81a]
   17e7f:	push   eax
   17e80:	call   0x1dd02
   17e85:	add    esp,0xc
   17e88:	push   0x1ec38
   17e8d:	push   0x15
   17e8f:	push   0x1eb90
   17e94:	call   0x16df8
   17e99:	mov    edx,eax
   17e9b:	mov    cx,WORD PTR [eax]
   17e9e:	inc    eax
   17e9f:	inc    eax
   17ea0:	cmp    cx,bx
   17ea3:	jne    0x17e9b
   17ea5:	sub    eax,edx
   17ea7:	lea    edi,[ebp-0x81c]
   17ead:	dec    edi
   17eae:	dec    edi
   17eaf:	mov    cx,WORD PTR [edi+0x2]
   17eb3:	inc    edi
   17eb4:	inc    edi
   17eb5:	cmp    cx,bx
   17eb8:	jne    0x17eaf
   17eba:	mov    ecx,eax
   17ebc:	mov    esi,edx
   17ebe:	shr    ecx,0x2
   17ec1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ec3:	mov    ecx,eax
   17ec5:	and    ecx,0x3
   17ec8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17eca:	mov    eax,0x77a08
   17ecf:	mov    edx,eax
   17ed1:	mov    cx,WORD PTR [eax]
   17ed4:	inc    eax
   17ed5:	inc    eax
   17ed6:	cmp    cx,bx
   17ed9:	jne    0x17ed1
   17edb:	sub    eax,edx
   17edd:	lea    edi,[ebp-0x81c]
   17ee3:	dec    edi
   17ee4:	dec    edi
   17ee5:	mov    cx,WORD PTR [edi+0x2]
   17ee9:	inc    edi
   17eea:	inc    edi
   17eeb:	cmp    cx,bx
   17eee:	jne    0x17ee5
   17ef0:	mov    ecx,eax
   17ef2:	mov    esi,edx
   17ef4:	shr    ecx,0x2
   17ef7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ef9:	mov    ecx,eax
   17efb:	and    ecx,0x3
   17efe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17f00:	push   0x1ebfa
   17f05:	push   0x4
   17f07:	push   0x1e970
   17f0c:	call   0x16df8
   17f11:	mov    edx,eax
   17f13:	mov    cx,WORD PTR [eax]
   17f16:	inc    eax
   17f17:	inc    eax
   17f18:	cmp    cx,bx
   17f1b:	jne    0x17f13
   17f1d:	sub    eax,edx
   17f1f:	lea    edi,[ebp-0x81c]
   17f25:	dec    edi
   17f26:	dec    edi
   17f27:	mov    cx,WORD PTR [edi+0x2]
   17f2b:	inc    edi
   17f2c:	inc    edi
   17f2d:	cmp    cx,bx
   17f30:	jne    0x17f27
   17f32:	mov    ecx,eax
   17f34:	mov    esi,edx
   17f36:	shr    ecx,0x2
   17f39:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17f3b:	mov    ecx,eax
   17f3d:	and    ecx,0x3
   17f40:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17f42:	lea    eax,[ebp-0x81c]
   17f48:	push   eax
   17f49:	lea    eax,[ebp-0x884]
   17f4f:	push   eax
   17f50:	call   0x1157c
   17f55:	call   eax
   17f57:	mov    DWORD PTR [ebp-0x824],ebx
   17f5d:	xor    eax,eax
   17f5f:	lea    edi,[ebp-0x850]
   17f65:	stos   DWORD PTR es:[edi],eax
   17f66:	stos   DWORD PTR es:[edi],eax
   17f67:	stos   DWORD PTR es:[edi],eax
   17f68:	stos   DWORD PTR es:[edi],eax
   17f69:	stos   DWORD PTR es:[edi],eax
   17f6a:	mov    DWORD PTR [ebp-0x82c],ebx
   17f70:	xor    eax,eax
   17f72:	lea    edi,[ebp-0x828]
   17f78:	stos   DWORD PTR es:[edi],eax
   17f79:	mov    DWORD PTR [ebp-0x854],0x18
   17f83:	mov    DWORD PTR [ebp-0x850],ebx
   17f89:	mov    DWORD PTR [ebp-0x848],0x240
   17f93:	lea    eax,[ebp-0x884]
   17f99:	mov    DWORD PTR [ebp-0x84c],eax
   17f9f:	mov    DWORD PTR [ebp-0x844],ebx
   17fa5:	mov    DWORD PTR [ebp-0x840],ebx
   17fab:	push   ebx
   17fac:	push   ebx
   17fad:	push   0x60
   17faf:	push   ebx
   17fb0:	push   ebx
   17fb1:	push   0x80
   17fb6:	push   ebx
   17fb7:	lea    eax,[ebp-0x82c]
   17fbd:	push   eax
   17fbe:	lea    eax,[ebp-0x854]
   17fc4:	push   eax
   17fc5:	push   0x100002
   17fca:	lea    eax,[ebp-0x824]
   17fd0:	push   eax
   17fd1:	call   0x11456
   17fd6:	call   eax
   17fd8:	cmp    eax,ebx
   17fda:	jge    0x17fe3
   17fdc:	xor    al,al
   17fde:	jmp    0x180e9
   17fe3:	mov    DWORD PTR [ebp-0x4],ebx
   17fe6:	xor    eax,eax
   17fe8:	lea    edi,[ebp-0x82c]
   17fee:	stos   DWORD PTR es:[edi],eax
   17fef:	stos   DWORD PTR es:[edi],eax
   17ff0:	xor    edi,edi
   17ff2:	mov    esi,0x10000
   17ff7:	mov    DWORD PTR [ebp-0x834],edi
   17ffd:	mov    eax,DWORD PTR [ebp+0xc]
   18000:	cmp    edi,eax
   18002:	jae    0x1804d
   18004:	mov    DWORD PTR [ebp-0x83c],ebx
   1800a:	mov    DWORD PTR [ebp-0x83c],edi
   18010:	mov    DWORD PTR [ebp-0x838],ebx
   18016:	sub    eax,edi
   18018:	cmp    eax,esi
   1801a:	jb     0x1801e
   1801c:	mov    eax,esi
   1801e:	push   ebx
   1801f:	push   ebx
   18020:	push   eax
   18021:	mov    eax,DWORD PTR [ebp-0x830]
   18027:	add    eax,edi
   18029:	push   eax
   1802a:	lea    eax,[ebp-0x82c]
   18030:	push   eax
   18031:	push   ebx
   18032:	push   ebx
   18033:	push   ebx
   18034:	push   DWORD PTR [ebp-0x824]
   1803a:	call   0x11846
   1803f:	call   eax
   18041:	cmp    eax,ebx
   18043:	jl     0x180cf
   18049:	add    edi,esi
   1804b:	jmp    0x17ff7
   1804d:	mov    BYTE PTR [ebp-0x81d],0x1
   18054:	mov    DWORD PTR [ebp-0x87c],ebx
   1805a:	push   0x9
   1805c:	pop    ecx
   1805d:	xor    eax,eax
   1805f:	lea    edi,[ebp-0x878]
   18065:	rep stos DWORD PTR es:[edi],eax
   18067:	mov    eax,DWORD PTR [ebp+0x10]
   1806a:	mov    DWORD PTR [ebp-0x86c],eax
   18070:	mov    ecx,DWORD PTR [ebp+0x14]
   18073:	mov    DWORD PTR [ebp-0x868],ecx
   18079:	mov    DWORD PTR [ebp-0x874],eax
   1807f:	mov    DWORD PTR [ebp-0x870],ecx
   18085:	mov    DWORD PTR [ebp-0x864],eax
   1808b:	mov    DWORD PTR [ebp-0x860],ecx
   18091:	mov    DWORD PTR [ebp-0x87c],eax
   18097:	mov    DWORD PTR [ebp-0x878],ecx
   1809d:	mov    DWORD PTR [ebp-0x85c],0x80
   180a7:	push   0x4
   180a9:	push   0x28
   180ab:	lea    eax,[ebp-0x87c]
   180b1:	push   eax
   180b2:	lea    eax,[ebp-0x82c]
   180b8:	push   eax
   180b9:	push   DWORD PTR [ebp-0x824]
   180bf:	call   0x1181c
   180c4:	call   eax
   180c6:	jmp    0x180cf
   180c8:	xor    eax,eax
   180ca:	inc    eax
   180cb:	ret    
   180cc:	mov    esp,DWORD PTR [ebp-0x18]
   180cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   180d6:	push   DWORD PTR [ebp-0x824]
   180dc:	call   0x11552
   180e1:	call   eax
   180e3:	mov    al,BYTE PTR [ebp-0x81d]
   180e9:	call   0x1e088
   180ee:	ret    0x10
   180f1:	int3   
   180f2:	int3   
   180f3:	int3   
   180f4:	int3   
   180f5:	int3   
   180f6:	push   0x874
   180fb:	push   0x77718
   18100:	call   0x1e040
   18105:	xor    ebx,ebx
   18107:	mov    BYTE PTR [ebp-0x81d],bl
   1810d:	mov    BYTE PTR [ebp-0x81e],bl
   18113:	mov    DWORD PTR [ebp-0x828],ebx
   18119:	mov    DWORD PTR [ebp-0x824],ebx
   1811f:	xor    eax,eax
   18121:	mov    WORD PTR [ebp-0x81c],ax
   18128:	push   0x7fe
   1812d:	push   ebx
   1812e:	lea    eax,[ebp-0x81a]
   18134:	push   eax
   18135:	call   0x1dd02
   1813a:	add    esp,0xc
   1813d:	push   0x1ecc8
   18142:	push   0x1d
   18144:	push   0x1ec8c
   18149:	call   0x16df8
   1814e:	mov    edx,eax
   18150:	mov    cx,WORD PTR [eax]
   18153:	inc    eax
   18154:	inc    eax
   18155:	cmp    cx,bx
   18158:	jne    0x18150
   1815a:	sub    eax,edx
   1815c:	lea    edi,[ebp-0x81c]
   18162:	dec    edi
   18163:	dec    edi
   18164:	mov    cx,WORD PTR [edi+0x2]
   18168:	inc    edi
   18169:	inc    edi
   1816a:	cmp    cx,bx
   1816d:	jne    0x18164
   1816f:	mov    ecx,eax
   18171:	mov    esi,edx
   18173:	shr    ecx,0x2
   18176:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18178:	mov    ecx,eax
   1817a:	and    ecx,0x3
   1817d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1817f:	mov    eax,0x77a48
   18184:	mov    edx,eax
   18186:	mov    cx,WORD PTR [eax]
   18189:	inc    eax
   1818a:	inc    eax
   1818b:	cmp    cx,bx
   1818e:	jne    0x18186
   18190:	sub    eax,edx
   18192:	lea    edi,[ebp-0x81c]
   18198:	dec    edi
   18199:	dec    edi
   1819a:	mov    cx,WORD PTR [edi+0x2]
   1819e:	inc    edi
   1819f:	inc    edi
   181a0:	cmp    cx,bx
   181a3:	jne    0x1819a
   181a5:	mov    ecx,eax
   181a7:	mov    esi,edx
   181a9:	shr    ecx,0x2
   181ac:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   181ae:	mov    ecx,eax
   181b0:	and    ecx,0x3
   181b3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   181b5:	push   0x1ec66
   181ba:	push   0x4
   181bc:	push   0x1ec5c
   181c1:	call   0x16df8
   181c6:	mov    edx,eax
   181c8:	mov    cx,WORD PTR [eax]
   181cb:	inc    eax
   181cc:	inc    eax
   181cd:	cmp    cx,bx
   181d0:	jne    0x181c8
   181d2:	sub    eax,edx
   181d4:	lea    edi,[ebp-0x81c]
   181da:	dec    edi
   181db:	dec    edi
   181dc:	mov    cx,WORD PTR [edi+0x2]
   181e0:	inc    edi
   181e1:	inc    edi
   181e2:	cmp    cx,bx
   181e5:	jne    0x181dc
   181e7:	mov    ecx,eax
   181e9:	mov    esi,edx
   181eb:	shr    ecx,0x2
   181ee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   181f0:	mov    ecx,eax
   181f2:	and    ecx,0x3
   181f5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   181f7:	lea    eax,[ebp-0x81c]
   181fd:	push   eax
   181fe:	lea    eax,[ebp-0x85c]
   18204:	push   eax
   18205:	call   0x1157c
   1820a:	call   eax
   1820c:	xor    eax,eax
   1820e:	lea    edi,[ebp-0x850]
   18214:	stos   DWORD PTR es:[edi],eax
   18215:	stos   DWORD PTR es:[edi],eax
   18216:	stos   DWORD PTR es:[edi],eax
   18217:	stos   DWORD PTR es:[edi],eax
   18218:	stos   DWORD PTR es:[edi],eax
   18219:	mov    DWORD PTR [ebp-0x834],ebx
   1821f:	xor    eax,eax
   18221:	lea    edi,[ebp-0x830]
   18227:	stos   DWORD PTR es:[edi],eax
   18228:	mov    DWORD PTR [ebp-0x82c],ebx
   1822e:	mov    DWORD PTR [ebp-0x854],0x18
   18238:	mov    DWORD PTR [ebp-0x850],ebx
   1823e:	mov    DWORD PTR [ebp-0x848],0x240
   18248:	lea    eax,[ebp-0x85c]
   1824e:	mov    DWORD PTR [ebp-0x84c],eax
   18254:	mov    DWORD PTR [ebp-0x844],ebx
   1825a:	mov    DWORD PTR [ebp-0x840],ebx
   18260:	push   ebx
   18261:	push   ebx
   18262:	push   ebx
   18263:	push   0x1
   18265:	push   0x7
   18267:	push   ebx
   18268:	push   ebx
   18269:	lea    eax,[ebp-0x834]
   1826f:	push   eax
   18270:	lea    eax,[ebp-0x854]
   18276:	push   eax
   18277:	push   0x89
   1827c:	lea    eax,[ebp-0x82c]
   18282:	push   eax
   18283:	call   0x11456
   18288:	call   eax
   1828a:	cmp    eax,ebx
   1828c:	jge    0x18295
   1828e:	xor    al,al
   18290:	jmp    0x183b5
   18295:	mov    DWORD PTR [ebp-0x884],ebx
   1829b:	push   0x9
   1829d:	pop    ecx
   1829e:	xor    eax,eax
   182a0:	lea    edi,[ebp-0x880]
   182a6:	rep stos DWORD PTR es:[edi],eax
   182a8:	mov    DWORD PTR [ebp-0x4],ebx
   182ab:	push   0x4
   182ad:	push   0x28
   182af:	lea    eax,[ebp-0x884]
   182b5:	push   eax
   182b6:	lea    eax,[ebp-0x834]
   182bc:	push   eax
   182bd:	push   DWORD PTR [ebp-0x82c]
   182c3:	call   0x11870
   182c8:	call   eax
   182ca:	cmp    eax,ebx
   182cc:	jl     0x1834a
   182ce:	mov    esi,0x5455f
   182d3:	push   esi
   182d4:	call   0x11cec
   182d9:	mov    edi,eax
   182db:	push   esi
   182dc:	push   0x1f490
   182e1:	push   edi
   182e2:	call   0x1dd1a
   182e7:	add    esp,0x10
   182ea:	push   0x25
   182ec:	push   0x739f0
   182f1:	push   esi
   182f2:	push   edi
   182f3:	call   0x10990
   182f8:	lea    eax,[ebp-0x828]
   182fe:	push   eax
   182ff:	push   esi
   18300:	push   edi
   18301:	lea    eax,[ebp-0x83c]
   18307:	push   eax
   18308:	call   0x1a28c
   1830d:	mov    BYTE PTR [ebp-0x83c],bl
   18313:	mov    eax,DWORD PTR [ebp-0x838]
   18319:	mov    DWORD PTR [ebp-0x824],eax
   1831f:	cmp    eax,ebx
   18321:	je     0x1833c
   18323:	push   DWORD PTR [ebp-0x828]
   18329:	push   eax
   1832a:	call   0x17c16
   1832f:	test   al,al
   18331:	je     0x1833c
   18333:	mov    BYTE PTR [ebp-0x81d],0x1
   1833a:	jmp    0x1834a
   1833c:	mov    BYTE PTR [ebp-0x81d],0x1
   18343:	mov    BYTE PTR [ebp-0x81e],0x1
   1834a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18351:	jmp    0x18363
   18353:	xor    eax,eax
   18355:	inc    eax
   18356:	ret    
   18357:	mov    esp,DWORD PTR [ebp-0x18]
   1835a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18361:	xor    ebx,ebx
   18363:	push   DWORD PTR [ebp-0x82c]
   18369:	call   0x11552
   1836e:	call   eax
   18370:	cmp    BYTE PTR [ebp-0x81e],bl
   18376:	je     0x1839b
   18378:	push   DWORD PTR [ebp-0x880]
   1837e:	push   DWORD PTR [ebp-0x884]
   18384:	push   DWORD PTR [ebp-0x828]
   1838a:	push   DWORD PTR [ebp-0x824]
   18390:	call   0x17e4a
   18395:	mov    BYTE PTR [ebp-0x81d],al
   1839b:	cmp    DWORD PTR [ebp-0x824],ebx
   183a1:	je     0x183af
   183a3:	push   DWORD PTR [ebp-0x824]
   183a9:	call   0x11d22
   183ae:	pop    ecx
   183af:	mov    al,BYTE PTR [ebp-0x81d]
   183b5:	call   0x1e088
   183ba:	ret    
   183bb:	int3   
   183bc:	int3   
   183bd:	int3   
   183be:	int3   
   183bf:	int3   
   183c0:	mov    edi,edi
   183c2:	push   ebp
   183c3:	mov    ebp,esp
   183c5:	sub    esp,0xbc
   183cb:	mov    eax,ds:0x77b1c
   183d0:	xor    eax,ebp
   183d2:	mov    DWORD PTR [ebp-0x4],eax
   183d5:	push   ebx
   183d6:	push   edi
   183d7:	push   0x1ed14
   183dc:	push   0xb
   183de:	push   0x1ecfc
   183e3:	call   0x16df8
   183e8:	push   eax
   183e9:	lea    eax,[ebp-0xbc]
   183ef:	push   eax
   183f0:	call   0x1157c
   183f5:	call   eax
   183f7:	xor    eax,eax
   183f9:	lea    edi,[ebp-0xb0]
   183ff:	stos   DWORD PTR es:[edi],eax
   18400:	stos   DWORD PTR es:[edi],eax
   18401:	stos   DWORD PTR es:[edi],eax
   18402:	stos   DWORD PTR es:[edi],eax
   18403:	xor    ebx,ebx
   18405:	push   ebx
   18406:	stos   DWORD PTR es:[edi],eax
   18407:	push   ebx
   18408:	push   ebx
   18409:	push   0x1
   1840b:	xor    eax,eax
   1840d:	push   0x7
   1840f:	push   ebx
   18410:	mov    DWORD PTR [ebp-0x94],ebx
   18416:	lea    edi,[ebp-0x90]
   1841c:	stos   DWORD PTR es:[edi],eax
   1841d:	lea    eax,[ebp-0xbc]
   18423:	mov    DWORD PTR [ebp-0xac],eax
   18429:	push   ebx
   1842a:	lea    eax,[ebp-0x94]
   18430:	push   eax
   18431:	lea    eax,[ebp-0xb4]
   18437:	push   eax
   18438:	push   0x89
   1843d:	lea    eax,[ebp-0x8c]
   18443:	push   eax
   18444:	mov    DWORD PTR [ebp-0x8c],ebx
   1844a:	mov    DWORD PTR [ebp-0xb4],0x18
   18454:	mov    DWORD PTR [ebp-0xb0],ebx
   1845a:	mov    DWORD PTR [ebp-0xa8],0x240
   18464:	mov    DWORD PTR [ebp-0xa4],ebx
   1846a:	mov    DWORD PTR [ebp-0xa0],ebx
   18470:	call   0x11456
   18475:	call   eax
   18477:	test   eax,eax
   18479:	jge    0x18482
   1847b:	xor    al,al
   1847d:	jmp    0x1853e
   18482:	push   esi
   18483:	mov    esi,0x20c
   18488:	push   esi
   18489:	call   0x11cec
   1848e:	pop    ecx
   1848f:	push   0x1
   18491:	mov    edi,eax
   18493:	push   esi
   18494:	push   edi
   18495:	lea    eax,[ebp-0x94]
   1849b:	push   eax
   1849c:	push   DWORD PTR [ebp-0x8c]
   184a2:	cmp    edi,ebx
   184a4:	setne  BYTE PTR [ebp-0x9c]
   184ab:	call   0x1142c
   184b0:	call   eax
   184b2:	push   DWORD PTR [ebp-0x8c]
   184b8:	mov    esi,eax
   184ba:	call   0x11552
   184bf:	call   eax
   184c1:	cmp    esi,ebx
   184c3:	pop    esi
   184c4:	jge    0x184d7
   184c6:	cmp    BYTE PTR [ebp-0x9c],bl
   184cc:	je     0x1847b
   184ce:	push   edi
   184cf:	call   0x11d22
   184d4:	pop    ecx
   184d5:	jmp    0x1847b
   184d7:	push   0x6
   184d9:	push   0x1
   184db:	lea    eax,[ebp-0x84]
   184e1:	push   eax
   184e2:	push   DWORD PTR [edi+0x8]
   184e5:	call   0x107b2
   184ea:	mov    ecx,0x77a08
   184ef:	lea    eax,[ebp-0x84]
   184f5:	mov    dx,WORD PTR [eax]
   184f8:	cmp    dx,WORD PTR [ecx]
   184fb:	jne    0x1851b
   184fd:	cmp    dx,bx
   18500:	je     0x18517
   18502:	mov    dx,WORD PTR [eax+0x2]
   18506:	cmp    dx,WORD PTR [ecx+0x2]
   1850a:	jne    0x1851b
   1850c:	add    eax,0x4
   1850f:	add    ecx,0x4
   18512:	cmp    dx,bx
   18515:	jne    0x184f5
   18517:	xor    eax,eax
   18519:	jmp    0x18520
   1851b:	sbb    eax,eax
   1851d:	sbb    eax,0xffffffff
   18520:	cmp    eax,ebx
   18522:	sete   BYTE PTR [ebp-0x85]
   18529:	cmp    BYTE PTR [ebp-0x9c],bl
   1852f:	je     0x18538
   18531:	push   edi
   18532:	call   0x11d22
   18537:	pop    ecx
   18538:	mov    al,BYTE PTR [ebp-0x85]
   1853e:	mov    ecx,DWORD PTR [ebp-0x4]
   18541:	pop    edi
   18542:	xor    ecx,ebp
   18544:	pop    ebx
   18545:	call   0x1dca9
   1854a:	leave  
   1854b:	ret    
   1854c:	int3   
   1854d:	int3   
   1854e:	int3   
   1854f:	int3   
   18550:	int3   
   18551:	int3   
   18552:	call   0x1a4a8
   18557:	push   0x1edae
   1855c:	push   0x34
   1855e:	push   0x1ed44
   18563:	call   0x16df8
   18568:	mov    edx,0x77cb8
   1856d:	movzx  ecx,WORD PTR [eax]
   18570:	inc    eax
   18571:	mov    WORD PTR [edx],cx
   18574:	inc    eax
   18575:	inc    edx
   18576:	inc    edx
   18577:	test   cx,cx
   1857a:	jne    0x1856d
   1857c:	ret    
   1857d:	int3   
   1857e:	int3   
   1857f:	int3   
   18580:	int3   
   18581:	int3   
   18582:	mov    edi,edi
   18584:	push   ebp
   18585:	mov    ebp,esp
   18587:	push   esi
   18588:	mov    esi,ecx
   1858a:	lea    ecx,[esi+0x4]
   1858d:	mov    DWORD PTR [esi],0x73a28
   18593:	mov    BYTE PTR [ecx+0x8],0x0
   18597:	call   0x14a4e
   1859c:	lea    ecx,[esi+0x14]
   1859f:	mov    BYTE PTR [ecx+0x8],0x0
   185a3:	call   0x1489c
   185a8:	mov    eax,DWORD PTR [ebp+0x8]
   185ab:	mov    DWORD PTR [esi+0x24],eax
   185ae:	mov    eax,DWORD PTR [ebp+0xc]
   185b1:	mov    DWORD PTR [esi+0x28],eax
   185b4:	mov    eax,esi
   185b6:	pop    esi
   185b7:	pop    ebp
   185b8:	ret    0x8
   185bb:	int3   
   185bc:	int3   
   185bd:	int3   
   185be:	int3   
   185bf:	int3   
   185c0:	mov    edi,edi
   185c2:	push   esi
   185c3:	mov    esi,ecx
   185c5:	lea    ecx,[esi+0x14]
   185c8:	mov    DWORD PTR [esi],0x73a28
   185ce:	call   0x151f4
   185d3:	lea    ecx,[esi+0x4]
   185d6:	pop    esi
   185d7:	jmp    0x16c32
   185dc:	int3   
   185dd:	int3   
   185de:	int3   
   185df:	int3   
   185e0:	int3   
   185e1:	int3   
   185e2:	mov    edi,edi
   185e4:	push   ebp
   185e5:	mov    ebp,esp
   185e7:	sub    esp,0xf4
   185ed:	push   ebx
   185ee:	push   esi
   185ef:	push   edi
   185f0:	mov    esi,ecx
   185f2:	call   0x17108
   185f7:	push   DWORD PTR [ebp+0x8]
   185fa:	lea    eax,[ebp-0x4]
   185fd:	lea    edi,[esi+0x4]
   18600:	push   eax
   18601:	mov    ecx,edi
   18603:	call   0x13d12
   18608:	mov    ebx,DWORD PTR [ebp-0x4]
   1860b:	cmp    ebx,DWORD PTR [esi+0x8]
   1860e:	je     0x18659
   18610:	mov    eax,DWORD PTR [esi+0x18]
   18613:	lea    ecx,[ebp+0x8]
   18616:	mov    DWORD PTR [ebp+0x8],eax
   18619:	call   0x13cf2
   1861e:	mov    edi,DWORD PTR [eax]
   18620:	lea    eax,[ebx+0x58]
   18623:	add    esi,0x14
   18626:	inc    edi
   18627:	push   eax
   18628:	mov    ecx,esi
   1862a:	mov    DWORD PTR [ebp+0x8],edi
   1862d:	mov    DWORD PTR [ebp-0x4],eax
   18630:	call   0x146ca
   18635:	lea    eax,[ebp+0x8]
   18638:	push   eax
   18639:	lea    eax,[ebp-0xc]
   1863c:	push   eax
   1863d:	mov    ecx,esi
   1863f:	call   0x1663a
   18644:	push   DWORD PTR [ebp+0xc]
   18647:	lea    ecx,[ebx+0x18]
   1864a:	call   0x12ab8
   1864f:	mov    eax,DWORD PTR [ebp-0x4]
   18652:	mov    DWORD PTR [eax],edi
   18654:	jmp    0x186ee
   18659:	lea    ecx,[ebp-0x54]
   1865c:	call   0x13ac6
   18661:	xor    eax,eax
   18663:	cmp    DWORD PTR [esi+0x20],eax
   18666:	je     0x18679
   18668:	mov    eax,DWORD PTR [esi+0x18]
   1866b:	lea    ecx,[ebp-0x4]
   1866e:	mov    DWORD PTR [ebp-0x4],eax
   18671:	call   0x13cf2
   18676:	mov    eax,DWORD PTR [eax]
   18678:	inc    eax
   18679:	push   DWORD PTR [ebp+0xc]
   1867c:	lea    ecx,[ebp-0x54]
   1867f:	mov    DWORD PTR [ebp-0x4],eax
   18682:	mov    DWORD PTR [ebp-0x14],eax
   18685:	call   0x12ab8
   1868a:	lea    eax,[ebp-0x54]
   1868d:	push   eax
   1868e:	push   DWORD PTR [ebp+0x8]
   18691:	lea    ecx,[ebp-0xf4]
   18697:	call   0x13a9e
   1869c:	lea    eax,[ebp-0xf4]
   186a2:	push   eax
   186a3:	lea    ecx,[ebp-0xa4]
   186a9:	call   0x143dc
   186ae:	lea    eax,[ebp-0xa4]
   186b4:	push   eax
   186b5:	lea    eax,[ebp-0xc]
   186b8:	push   eax
   186b9:	mov    ecx,edi
   186bb:	call   0x16c08
   186c0:	lea    ecx,[ebp-0xa4]
   186c6:	call   0x1363e
   186cb:	lea    ecx,[ebp-0xf4]
   186d1:	call   0x1363e
   186d6:	lea    eax,[ebp-0x4]
   186d9:	push   eax
   186da:	lea    eax,[ebp-0xc]
   186dd:	push   eax
   186de:	lea    ecx,[esi+0x14]
   186e1:	call   0x1663a
   186e6:	lea    ecx,[ebp-0x54]
   186e9:	call   0x134ce
   186ee:	pop    edi
   186ef:	pop    esi
   186f0:	pop    ebx
   186f1:	leave  
   186f2:	ret    0x8
   186f5:	int3   
   186f6:	int3   
   186f7:	int3   
   186f8:	int3   
   186f9:	int3   
   186fa:	mov    edi,edi
   186fc:	push   ebp
   186fd:	mov    ebp,esp
   186ff:	sub    esp,0x10
   18702:	call   0x1a416
   18707:	test   al,al
   18709:	jne    0x18713
   1870b:	mov    eax,DWORD PTR [ebp+0x8]
   1870e:	jmp    0x187a7
   18713:	push   esi
   18714:	mov    esi,DWORD PTR [ebp+0x8]
   18717:	push   0xffffffff
   18719:	push   esi
   1871a:	lea    ecx,[ebp-0x8]
   1871d:	call   0x12be0
   18722:	mov    ecx,DWORD PTR ds:0x788a0
   18728:	lea    eax,[ebp-0x8]
   1872b:	push   eax
   1872c:	lea    eax,[ebp+0x8]
   1872f:	push   eax
   18730:	call   0x1407a
   18735:	mov    eax,DWORD PTR [ebp+0x8]
   18738:	mov    ecx,DWORD PTR ds:0x788a0
   1873e:	cmp    eax,DWORD PTR [ecx+0x4]
   18741:	jne    0x18772
   18743:	lea    eax,[ebp-0x8]
   18746:	push   eax
   18747:	lea    ecx,[ebp-0x10]
   1874a:	call   0x13698
   1874f:	mov    ecx,DWORD PTR ds:0x788a0
   18755:	lea    eax,[ebp-0x10]
   18758:	push   eax
   18759:	lea    eax,[ebp-0x8]
   1875c:	push   eax
   1875d:	call   0x171ba
   18762:	mov    ecx,eax
   18764:	call   0x12b84
   18769:	push   DWORD PTR [ebp-0x10]
   1876c:	call   0x11d22
   18771:	pop    ecx
   18772:	mov    ecx,DWORD PTR ds:0x788a0
   18778:	lea    eax,[ebp-0x8]
   1877b:	push   eax
   1877c:	lea    eax,[ebp+0x8]
   1877f:	push   eax
   18780:	call   0x1407a
   18785:	mov    eax,DWORD PTR [ebp+0x8]
   18788:	mov    ecx,DWORD PTR ds:0x788a0
   1878e:	cmp    eax,DWORD PTR [ecx+0x4]
   18791:	je     0x18796
   18793:	mov    esi,DWORD PTR [eax+0x14]
   18796:	call   0x1a432
   1879b:	push   DWORD PTR [ebp-0x8]
   1879e:	call   0x11d22
   187a3:	pop    ecx
   187a4:	mov    eax,esi
   187a6:	pop    esi
   187a7:	leave  
   187a8:	ret    0x4
   187ab:	int3   
   187ac:	int3   
   187ad:	int3   
   187ae:	int3   
   187af:	int3   
   187b0:	mov    edi,edi
   187b2:	push   ebp
   187b3:	mov    ebp,esp
   187b5:	push   esi
   187b6:	mov    esi,ecx
   187b8:	call   0x185c0
   187bd:	test   BYTE PTR [ebp+0x8],0x1
   187c1:	je     0x187ca
   187c3:	push   esi
   187c4:	call   0x11d22
   187c9:	pop    ecx
   187ca:	mov    eax,esi
   187cc:	pop    esi
   187cd:	pop    ebp
   187ce:	ret    0x4
   187d1:	int3   
   187d2:	int3   
   187d3:	int3   
   187d4:	int3   
   187d5:	int3   
   187d6:	mov    edi,edi
   187d8:	push   ebp
   187d9:	mov    ebp,esp
   187db:	push   esi
   187dc:	push   DWORD PTR [ebp+0xc]
   187df:	mov    esi,ecx
   187e1:	push   DWORD PTR [ebp+0x8]
   187e4:	call   0x18582
   187e9:	mov    eax,esi
   187eb:	pop    esi
   187ec:	pop    ebp
   187ed:	ret    0x8
   187f0:	int3   
   187f1:	int3   
   187f2:	int3   
   187f3:	int3   
   187f4:	int3   
   187f5:	int3   
   187f6:	push   0x33c
   187fb:	push   0x77738
   18800:	call   0x1e040
   18805:	mov    esi,DWORD PTR [ebp+0xc]
   18808:	mov    DWORD PTR [ebp-0x32c],esi
   1880e:	call   DWORD PTR ds:0x1f400
   18814:	xor    ebx,ebx
   18816:	cmp    BYTE PTR [ebp+0x10],bl
   18819:	jne    0x18857
   1881b:	push   esi
   1881c:	mov    ecx,DWORD PTR ds:0x77b50
   18822:	call   0x14f92
   18827:	mov    edi,eax
   18829:	push   esi
   1882a:	mov    ecx,DWORD PTR ds:0x77b50
   18830:	call   0x16338
   18835:	mov    eax,edi
   18837:	dec    eax
   18838:	je     0x1884c
   1883a:	dec    eax
   1883b:	je     0x18848
   1883d:	dec    eax
   1883e:	jne    0x18a32
   18844:	push   0xa
   18846:	jmp    0x1884d
   18848:	push   0x2
   1884a:	jmp    0x1884d
   1884c:	push   ebx
   1884d:	call   0x1296c
   18852:	jmp    0x18a32
   18857:	mov    DWORD PTR [ebp-0x320],ebx
   1885d:	xor    eax,eax
   1885f:	lea    edi,[ebp-0x326]
   18865:	stos   DWORD PTR es:[edi],eax
   18866:	stos   WORD PTR es:[edi],ax
   18868:	xor    eax,eax
   1886a:	mov    WORD PTR [ebp-0x21c],ax
   18871:	push   0x1fc
   18876:	push   ebx
   18877:	lea    eax,[ebp-0x21a]
   1887d:	push   eax
   1887e:	call   0x1dd02
   18883:	add    esp,0xc
   18886:	lea    eax,[ebp-0x21c]
   1888c:	mov    DWORD PTR [ebp-0x324],eax
   18892:	xor    eax,eax
   18894:	mov    WORD PTR [ebp-0x328],ax
   1889b:	mov    eax,0x1fe
   188a0:	mov    WORD PTR [ebp-0x326],ax
   188a7:	mov    DWORD PTR [ebp-0x34c],0x18
   188b1:	mov    DWORD PTR [ebp-0x348],ebx
   188b7:	mov    DWORD PTR [ebp-0x340],0x200
   188c1:	mov    DWORD PTR [ebp-0x344],ebx
   188c7:	mov    DWORD PTR [ebp-0x33c],ebx
   188cd:	mov    DWORD PTR [ebp-0x338],ebx
   188d3:	mov    DWORD PTR [ebp-0x334],esi
   188d9:	mov    DWORD PTR [ebp-0x330],ebx
   188df:	lea    eax,[ebp-0x334]
   188e5:	push   eax
   188e6:	lea    eax,[ebp-0x34c]
   188ec:	push   eax
   188ed:	push   0x1f0fff
   188f2:	lea    eax,[ebp-0x320]
   188f8:	push   eax
   188f9:	call   0x1125e
   188fe:	call   eax
   18900:	test   eax,eax
   18902:	jl     0x18a32
   18908:	lea    eax,[ebp-0x328]
   1890e:	push   eax
   1890f:	push   DWORD PTR [ebp-0x320]
   18915:	call   0x11d84
   1891a:	cmp    eax,ebx
   1891c:	jl     0x18a25
   18922:	movzx  eax,WORD PTR [ebp-0x328]
   18929:	shr    eax,1
   1892b:	xor    ecx,ecx
   1892d:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   18935:	push   DWORD PTR [ebp-0x320]
   1893b:	call   0x11e1a
   18940:	lea    eax,[ebp-0x21c]
   18946:	push   eax
   18947:	call   0x10d52
   1894c:	cmp    eax,ebx
   1894e:	je     0x18973
   18950:	push   eax
   18951:	push   esi
   18952:	mov    ecx,DWORD PTR ds:0x77b50
   18958:	call   0x16db2
   1895d:	push   DWORD PTR [ebp-0x320]
   18963:	push   DWORD PTR [ebp-0x320]
   18969:	call   0x11e1a
   1896e:	push   eax
   1896f:	push   esi
   18970:	push   ebx
   18971:	jmp    0x189f1
   18973:	push   0x1edf0
   18978:	push   0x9
   1897a:	push   0x1eddc
   1897f:	call   0x16df8
   18984:	push   eax
   18985:	lea    eax,[ebp-0x328]
   1898b:	push   eax
   1898c:	call   0x11e4a
   18991:	test   al,al
   18993:	je     0x189f8
   18995:	cmp    DWORD PTR ds:0x7887c,ebx
   1899b:	jne    0x189ce
   1899d:	mov    DWORD PTR ds:0x7887c,0x1
   189a7:	mov    DWORD PTR [ebp-0x4],ebx
   189aa:	call   0x180f6
   189af:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   189b6:	jmp    0x189ce
   189b8:	xor    eax,eax
   189ba:	inc    eax
   189bb:	ret    
   189bc:	mov    esp,DWORD PTR [ebp-0x18]
   189bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   189c6:	xor    ebx,ebx
   189c8:	mov    esi,DWORD PTR [ebp-0x32c]
   189ce:	cmp    DWORD PTR ds:0x785a4,ebx
   189d4:	jne    0x189dc
   189d6:	mov    DWORD PTR ds:0x785a4,esi
   189dc:	push   DWORD PTR [ebp-0x320]
   189e2:	push   DWORD PTR [ebp-0x320]
   189e8:	call   0x11e1a
   189ed:	push   eax
   189ee:	push   esi
   189ef:	push   0x1
   189f1:	call   0x1356e
   189f6:	jmp    0x18a25
   189f8:	lea    eax,[ebp-0x31c]
   189fe:	push   eax
   189ff:	call   0x120ee
   18a04:	test   al,al
   18a06:	je     0x18a25
   18a08:	lea    eax,[ebp-0x31c]
   18a0e:	push   eax
   18a0f:	lea    eax,[ebp-0x328]
   18a15:	push   eax
   18a16:	call   0x11e4a
   18a1b:	test   al,al
   18a1d:	je     0x18a25
   18a1f:	push   esi
   18a20:	call   0x11f9e
   18a25:	push   DWORD PTR [ebp-0x320]
   18a2b:	call   0x11552
   18a30:	call   eax
   18a32:	call   0x1e088
   18a37:	ret    0xc
   18a3a:	int3   
   18a3b:	int3   
   18a3c:	int3   
   18a3d:	int3   
   18a3e:	int3   
   18a3f:	int3   
   18a40:	mov    edi,edi
   18a42:	push   ebp
   18a43:	mov    ebp,esp
   18a45:	push   ecx
   18a46:	cli    
   18a47:	mov    eax,cr0
   18a4a:	mov    DWORD PTR [ebp-0x4],eax
   18a4d:	and    eax,0xfffeffff
   18a52:	mov    cr0,eax
   18a55:	push   0x178d2
   18a5a:	push   DWORD PTR ds:0x784ec
   18a60:	call   0x19ae0
   18a65:	push   0x0
   18a67:	push   0x187f6
   18a6c:	mov    ds:0x784f0,eax
   18a71:	call   0x11306
   18a76:	call   eax
   18a78:	push   0x177be
   18a7d:	call   0x112b2
   18a82:	call   eax
   18a84:	mov    eax,DWORD PTR [ebp-0x4]
   18a87:	mov    cr0,eax
   18a8a:	sti    
   18a8b:	leave  
   18a8c:	ret    
   18a8d:	int3   
   18a8e:	int3   
   18a8f:	int3   
   18a90:	int3   
   18a91:	int3   
   18a92:	mov    edi,edi
   18a94:	push   ebp
   18a95:	mov    ebp,esp
   18a97:	sub    esp,0x40
   18a9a:	push   ebx
   18a9b:	mov    ebx,DWORD PTR [ebp+0x8]
   18a9e:	push   esi
   18a9f:	test   bl,0x20
   18aa2:	je     0x18adc
   18aa4:	push   DWORD PTR [ebp+0x24]
   18aa7:	mov    esi,DWORD PTR ds:0x784e8
   18aad:	push   DWORD PTR [ebp+0x20]
   18ab0:	lea    ecx,[ebp-0x40]
   18ab3:	push   DWORD PTR [ebp+0x1c]
   18ab6:	push   DWORD PTR [ebp+0x18]
   18ab9:	push   DWORD PTR [ebp+0x14]
   18abc:	push   DWORD PTR [ebp+0xc]
   18abf:	call   0x13b1a
   18ac4:	push   eax
   18ac5:	push   DWORD PTR [ebp+0xc]
   18ac8:	mov    ecx,esi
   18aca:	call   0x185e2
   18acf:	lea    ecx,[ebp-0x40]
   18ad2:	call   0x134ce
   18ad7:	jmp    0x18c0a
   18adc:	push   DWORD PTR [ebp+0xc]
   18adf:	mov    ecx,DWORD PTR ds:0x784e0
   18ae5:	call   0x15246
   18aea:	test   eax,eax
   18aec:	jne    0x18afa
   18aee:	test   bl,0x1
   18af1:	jne    0x18afa
   18af3:	xor    al,al
   18af5:	jmp    0x18c0c
   18afa:	push   DWORD PTR [ebp+0xc]
   18afd:	mov    ecx,DWORD PTR ds:0x784e0
   18b03:	call   0x16ffe
   18b08:	mov    esi,eax
   18b0a:	test   bl,0x1
   18b0d:	je     0x18b40
   18b0f:	mov    eax,DWORD PTR [ebp+0x20]
   18b12:	push   DWORD PTR [ebp+0xc]
   18b15:	mov    ecx,esi
   18b17:	mov    DWORD PTR [esi+0x20],eax
   18b1a:	call   0x12a28
   18b1f:	push   DWORD PTR [ebp+0x10]
   18b22:	lea    ecx,[esi+0x8]
   18b25:	call   0x12a28
   18b2a:	push   DWORD PTR [ebp+0x14]
   18b2d:	lea    ecx,[esi+0x10]
   18b30:	call   0x12a28
   18b35:	push   DWORD PTR [ebp+0x18]
   18b38:	lea    ecx,[esi+0x18]
   18b3b:	call   0x12a28
   18b40:	mov    DWORD PTR [ebp+0x20],ebx
   18b43:	and    DWORD PTR [ebp+0x20],0x2
   18b47:	je     0x18b57
   18b49:	mov    eax,DWORD PTR [ebp+0x24]
   18b4c:	mov    ecx,DWORD PTR [eax]
   18b4e:	mov    DWORD PTR [esi+0x28],ecx
   18b51:	mov    eax,DWORD PTR [eax+0x4]
   18b54:	mov    DWORD PTR [esi+0x2c],eax
   18b57:	mov    DWORD PTR [ebp+0x14],ebx
   18b5a:	and    DWORD PTR [ebp+0x14],0x4
   18b5e:	je     0x18b6e
   18b60:	mov    eax,DWORD PTR [ebp+0x28]
   18b63:	mov    ecx,DWORD PTR [eax]
   18b65:	mov    DWORD PTR [esi+0x30],ecx
   18b68:	mov    eax,DWORD PTR [eax+0x4]
   18b6b:	mov    DWORD PTR [esi+0x34],eax
   18b6e:	test   bl,0x10
   18b71:	je     0x18c0a
   18b77:	cmp    DWORD PTR [esi+0xc],0x0
   18b7b:	jbe    0x18c0a
   18b81:	mov    eax,ds:0x784e0
   18b86:	mov    eax,DWORD PTR [eax+0x4]
   18b89:	push   edi
   18b8a:	mov    edi,DWORD PTR [eax]
   18b8c:	mov    DWORD PTR [ebp+0x18],edi
   18b8f:	cmp    edi,eax
   18b91:	je     0x18c09
   18b93:	push   DWORD PTR [ebp+0xc]
   18b96:	lea    ebx,[edi+0x10]
   18b99:	push   ebx
   18b9a:	call   0x19a28
   18b9f:	test   al,al
   18ba1:	je     0x18bf4
   18ba3:	lea    eax,[esi+0x8]
   18ba6:	push   eax
   18ba7:	add    edi,0x20
   18baa:	push   edi
   18bab:	call   0x19a18
   18bb0:	test   al,al
   18bb2:	je     0x18bf4
   18bb4:	cmp    DWORD PTR [ebp+0x20],0x0
   18bb8:	je     0x18bd4
   18bba:	mov    ecx,DWORD PTR ds:0x784e0
   18bc0:	push   ebx
   18bc1:	call   0x16ffe
   18bc6:	mov    ecx,DWORD PTR [ebp+0x24]
   18bc9:	mov    edx,DWORD PTR [ecx]
   18bcb:	mov    DWORD PTR [eax+0x28],edx
   18bce:	mov    ecx,DWORD PTR [ecx+0x4]
   18bd1:	mov    DWORD PTR [eax+0x2c],ecx
   18bd4:	cmp    DWORD PTR [ebp+0x14],0x0
   18bd8:	je     0x18bf4
   18bda:	mov    ecx,DWORD PTR ds:0x784e0
   18be0:	push   ebx
   18be1:	call   0x16ffe
   18be6:	mov    ecx,DWORD PTR [ebp+0x28]
   18be9:	mov    edx,DWORD PTR [ecx]
   18beb:	mov    DWORD PTR [eax+0x30],edx
   18bee:	mov    ecx,DWORD PTR [ecx+0x4]
   18bf1:	mov    DWORD PTR [eax+0x34],ecx
   18bf4:	lea    ecx,[ebp+0x18]
   18bf7:	call   0x1373e
   18bfc:	mov    edi,DWORD PTR [ebp+0x18]
   18bff:	mov    eax,ds:0x784e0
   18c04:	cmp    edi,DWORD PTR [eax+0x4]
   18c07:	jne    0x18b93
   18c09:	pop    edi
   18c0a:	mov    al,0x1
   18c0c:	pop    esi
   18c0d:	pop    ebx
   18c0e:	leave  
   18c0f:	ret    0x24
   18c12:	int3   
   18c13:	int3   
   18c14:	int3   
   18c15:	int3   
   18c16:	int3   
   18c17:	int3   
   18c18:	push   0x40
   18c1a:	push   0x77758
   18c1f:	call   0x1dd40
   18c24:	xor    esi,esi
   18c26:	push   esi
   18c27:	push   esi
   18c28:	push   esi
   18c29:	push   esi
   18c2a:	push   0x77b58
   18c2f:	call   0x119ea
   18c34:	call   eax
   18c36:	cmp    eax,esi
   18c38:	jge    0x18c49
   18c3a:	mov    eax,DWORD PTR [ebp+0x8]
   18c3d:	mov    DWORD PTR [eax+0x8],0x4
   18c44:	jmp    0x18d4d
   18c49:	mov    DWORD PTR [ebp-0x4],esi
   18c4c:	or     ebx,0xffffffff
   18c4f:	push   ebx
   18c50:	mov    esi,DWORD PTR [ebp+0x8]
   18c53:	lea    eax,[esi+0x20]
   18c56:	push   eax
   18c57:	lea    ecx,[ebp-0x38]
   18c5a:	call   0x135fc
   18c5f:	mov    edi,DWORD PTR [ebp-0x34]
   18c62:	inc    edi
   18c63:	push   ebx
   18c64:	lea    eax,[edi+esi*1+0x20]
   18c68:	push   eax
   18c69:	lea    ecx,[ebp-0x30]
   18c6c:	call   0x135fc
   18c71:	mov    eax,DWORD PTR [ebp-0x2c]
   18c74:	lea    edi,[edi+eax*1+0x1]
   18c78:	push   ebx
   18c79:	lea    eax,[edi+esi*1+0x20]
   18c7d:	push   eax
   18c7e:	lea    ecx,[ebp-0x28]
   18c81:	call   0x135fc
   18c86:	mov    eax,DWORD PTR [ebp-0x24]
   18c89:	lea    edi,[edi+eax*1+0x1]
   18c8d:	push   ebx
   18c8e:	lea    eax,[edi+esi*1+0x20]
   18c92:	push   eax
   18c93:	lea    ecx,[ebp-0x20]
   18c96:	call   0x135fc
   18c9b:	mov    eax,DWORD PTR [ebp-0x1c]
   18c9e:	lea    eax,[edi+eax*1+0x1]
   18ca2:	push   ebx
   18ca3:	lea    eax,[eax+esi*1+0x20]
   18ca7:	push   eax
   18ca8:	lea    ecx,[ebp-0x50]
   18cab:	call   0x135fc
   18cb0:	mov    eax,DWORD PTR [esi+0xc]
   18cb3:	mov    ecx,DWORD PTR [esi+0x10]
   18cb6:	mov    DWORD PTR [ebp-0x48],ecx
   18cb9:	mov    ecx,DWORD PTR [esi+0x14]
   18cbc:	mov    DWORD PTR [ebp-0x44],ecx
   18cbf:	mov    ecx,DWORD PTR [esi+0x18]
   18cc2:	mov    DWORD PTR [ebp-0x40],ecx
   18cc5:	mov    ecx,DWORD PTR [esi+0x1c]
   18cc8:	mov    DWORD PTR [ebp-0x3c],ecx
   18ccb:	lea    ecx,[ebp-0x40]
   18cce:	push   ecx
   18ccf:	lea    ecx,[ebp-0x48]
   18cd2:	push   ecx
   18cd3:	push   eax
   18cd4:	lea    eax,[ebp-0x50]
   18cd7:	push   eax
   18cd8:	lea    eax,[ebp-0x20]
   18cdb:	push   eax
   18cdc:	lea    eax,[ebp-0x28]
   18cdf:	push   eax
   18ce0:	lea    eax,[ebp-0x30]
   18ce3:	push   eax
   18ce4:	lea    eax,[ebp-0x38]
   18ce7:	push   eax
   18ce8:	push   DWORD PTR [esi+0x4]
   18ceb:	call   0x18a92
   18cf0:	xor    ecx,ecx
   18cf2:	test   al,al
   18cf4:	sete   cl
   18cf7:	mov    DWORD PTR [esi+0x8],ecx
   18cfa:	push   DWORD PTR [ebp-0x50]
   18cfd:	call   0x11d22
   18d02:	push   DWORD PTR [ebp-0x20]
   18d05:	call   0x11d22
   18d0a:	push   DWORD PTR [ebp-0x28]
   18d0d:	call   0x11d22
   18d12:	push   DWORD PTR [ebp-0x30]
   18d15:	call   0x11d22
   18d1a:	push   DWORD PTR [ebp-0x38]
   18d1d:	call   0x11d22
   18d22:	add    esp,0x14
   18d25:	jmp    0x18d38
   18d27:	xor    eax,eax
   18d29:	inc    eax
   18d2a:	ret    
   18d2b:	mov    esp,DWORD PTR [ebp-0x18]
   18d2e:	mov    eax,DWORD PTR [ebp+0x8]
   18d31:	mov    DWORD PTR [eax+0x8],0x4
   18d38:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18d3f:	push   0x0
   18d41:	push   0x77b58
   18d46:	call   0x11a14
   18d4b:	call   eax
   18d4d:	call   0x1dd85
   18d52:	ret    0x4
   18d55:	int3   
   18d56:	int3   
   18d57:	int3   
   18d58:	int3   
   18d59:	int3   
   18d5a:	push   0x2c
   18d5c:	push   0x77778
   18d61:	call   0x1dd40
   18d66:	xor    edi,edi
   18d68:	mov    DWORD PTR [ebp-0x24],edi
   18d6b:	mov    ebx,DWORD PTR [ebp+0xc]
   18d6e:	mov    DWORD PTR [ebx+0x18],edi
   18d71:	mov    DWORD PTR [ebx+0x1c],edi
   18d74:	mov    eax,DWORD PTR [ebx+0x60]
   18d77:	cmp    BYTE PTR [eax],0xe
   18d7a:	jne    0x1921c
   18d80:	mov    eax,DWORD PTR [eax+0xc]
   18d83:	mov    DWORD PTR [ebx+0x1c],0x84c
   18d8a:	mov    ecx,0x22c068
   18d8f:	cmp    eax,ecx
   18d91:	ja     0x190cd
   18d97:	je     0x190be
   18d9d:	add    ecx,0xffffffd0
   18da0:	cmp    eax,ecx
   18da2:	ja     0x18ebf
   18da8:	je     0x18ea6
   18dae:	sub    eax,0x22c020
   18db3:	je     0x18e70
   18db9:	push   0x4
   18dbb:	pop    esi
   18dbc:	sub    eax,esi
   18dbe:	je     0x18e3a
   18dc0:	sub    eax,esi
   18dc2:	je     0x18e1f
   18dc4:	sub    eax,esi
   18dc6:	je     0x18e12
   18dc8:	sub    eax,esi
   18dca:	je     0x18de1
   18dcc:	sub    eax,esi
   18dce:	jne    0x191bc
   18dd4:	push   DWORD PTR [ebx+0xc]
   18dd7:	call   0x17afa
   18ddc:	jmp    0x19219
   18de1:	mov    esi,DWORD PTR [ebx+0xc]
   18de4:	mov    eax,DWORD PTR [esi]
   18de6:	add    eax,0x20
   18de9:	mov    DWORD PTR [ebx+0x1c],eax
   18dec:	push   0xffffffff
   18dee:	lea    eax,[esi+0x20]
   18df1:	push   eax
   18df2:	lea    ecx,[ebp-0x34]
   18df5:	call   0x12b26
   18dfa:	push   esi
   18dfb:	lea    eax,[ebp-0x34]
   18dfe:	push   eax
   18dff:	call   0x16494
   18e04:	push   DWORD PTR [ebp-0x34]
   18e07:	call   0x11d22
   18e0c:	pop    ecx
   18e0d:	jmp    0x1921c
   18e12:	push   DWORD PTR [ebx+0xc]
   18e15:	call   0x18c18
   18e1a:	jmp    0x19219
   18e1f:	mov    ecx,DWORD PTR ds:0x784e0
   18e25:	call   0x16cae
   18e2a:	mov    ecx,DWORD PTR ds:0x77bb4
   18e30:	call   0x16d6a
   18e35:	jmp    0x1921c
   18e3a:	mov    eax,DWORD PTR [ebx+0xc]
   18e3d:	mov    DWORD PTR [ebx+0x1c],0x10
   18e44:	mov    ecx,DWORD PTR [eax]
   18e46:	cmp    ecx,edi
   18e48:	jl     0x1921c
   18e4e:	cmp    ecx,0x6
   18e51:	jge    0x1921c
   18e57:	mov    edx,DWORD PTR [eax+0x8]
   18e5a:	mov    DWORD PTR [ecx*8+0x78530],edx
   18e61:	mov    eax,DWORD PTR [eax+0xc]
   18e64:	mov    DWORD PTR [ecx*8+0x78534],eax
   18e6b:	jmp    0x1921c
   18e70:	mov    eax,DWORD PTR [ebx+0xc]
   18e73:	mov    DWORD PTR [ebx+0x1c],0x10
   18e7a:	mov    ecx,DWORD PTR [eax]
   18e7c:	cmp    ecx,edi
   18e7e:	jl     0x1921c
   18e84:	cmp    ecx,0x6
   18e87:	jge    0x1921c
   18e8d:	mov    edx,DWORD PTR [ecx*8+0x78530]
   18e94:	mov    DWORD PTR [eax+0x8],edx
   18e97:	mov    ecx,DWORD PTR [ecx*8+0x78534]
   18e9e:	mov    DWORD PTR [eax+0xc],ecx
   18ea1:	jmp    0x1921c
   18ea6:	mov    eax,DWORD PTR [ebx+0xc]
   18ea9:	mov    ecx,DWORD PTR [eax]
   18eab:	add    ecx,0xc
   18eae:	mov    DWORD PTR [ebx+0x1c],ecx
   18eb1:	push   eax
   18eb2:	push   DWORD PTR [eax+0x4]
   18eb5:	call   0x150d8
   18eba:	jmp    0x1921c
   18ebf:	sub    eax,0x22c03c
   18ec4:	je     0x1903a
   18eca:	sub    eax,0x10
   18ecd:	je     0x19030
   18ed3:	push   0x4
   18ed5:	pop    esi
   18ed6:	sub    eax,esi
   18ed8:	je     0x18f2e
   18eda:	sub    eax,0xc
   18edd:	je     0x18f16
   18edf:	sub    eax,esi
   18ee1:	je     0x18ef8
   18ee3:	sub    eax,esi
   18ee5:	jne    0x191bc
   18eeb:	push   DWORD PTR [ebx+0xc]
   18eee:	call   0x1285c
   18ef3:	jmp    0x19219
   18ef8:	mov    DWORD PTR [ebx+0x1c],0x8
   18eff:	mov    ebx,DWORD PTR [ebx+0xc]
   18f02:	mov    eax,ds:0x78514
   18f07:	mov    DWORD PTR [ebx],eax
   18f09:	mov    eax,ds:0x78518
   18f0e:	mov    DWORD PTR [ebx+0x4],eax
   18f11:	jmp    0x1921c
   18f16:	mov    eax,DWORD PTR [ebx+0xc]
   18f19:	mov    ecx,DWORD PTR [eax]
   18f1b:	mov    DWORD PTR ds:0x78514,ecx
   18f21:	mov    eax,DWORD PTR [eax+0x4]
   18f24:	mov    ds:0x78518,eax
   18f29:	jmp    0x19219
   18f2e:	mov    DWORD PTR [ebx+0x1c],edi
   18f31:	mov    esi,DWORD PTR [ebx+0xc]
   18f34:	mov    DWORD PTR [ebp-0x20],esi
   18f37:	push   0xffffffff
   18f39:	push   0x1e148
   18f3e:	lea    ecx,[ebp-0x2c]
   18f41:	call   0x12b26
   18f46:	xor    edi,edi
   18f48:	inc    edi
   18f49:	mov    DWORD PTR [esi+0x8],edi
   18f4c:	xor    eax,eax
   18f4e:	push   eax
   18f4f:	push   eax
   18f50:	push   eax
   18f51:	push   eax
   18f52:	push   0x77b58
   18f57:	call   0x119ea
   18f5c:	call   eax
   18f5e:	test   eax,eax
   18f60:	jge    0x18f6a
   18f62:	push   DWORD PTR [ebp-0x2c]
   18f65:	jmp    0x18e07
   18f6a:	and    DWORD PTR [ebp-0x4],0x0
   18f6e:	mov    DWORD PTR [ebp-0x4],edi
   18f71:	mov    eax,DWORD PTR [esi]
   18f73:	add    eax,0x20
   18f76:	mov    DWORD PTR [ebx+0x1c],eax
   18f79:	mov    eax,ds:0x784e0
   18f7e:	mov    ebx,DWORD PTR [eax+0x4]
   18f81:	mov    eax,DWORD PTR [ebx]
   18f83:	mov    DWORD PTR [ebp+0xc],eax
   18f86:	and    DWORD PTR [ebp-0x1c],0x0
   18f8a:	mov    edi,DWORD PTR [esi+0x20]
   18f8d:	cmp    DWORD PTR [ebp-0x1c],edi
   18f90:	jge    0x18fa4
   18f92:	cmp    DWORD PTR [ebp+0xc],ebx
   18f95:	je     0x18fa4
   18f97:	lea    ecx,[ebp+0xc]
   18f9a:	call   0x1373e
   18f9f:	inc    DWORD PTR [ebp-0x1c]
   18fa2:	jmp    0x18f8d
   18fa4:	mov    eax,DWORD PTR [ebp+0xc]
   18fa7:	cmp    eax,ebx
   18fa9:	je     0x18fbd
   18fab:	and    DWORD PTR [esi+0x8],0x0
   18faf:	add    eax,0x10
   18fb2:	push   eax
   18fb3:	lea    ecx,[ebp-0x2c]
   18fb6:	call   0x12a28
   18fbb:	jmp    0x18fc4
   18fbd:	mov    DWORD PTR [esi+0x8],0x1
   18fc4:	and    DWORD PTR [esi+0x4],0x0
   18fc8:	and    DWORD PTR [ebp-0x4],0x0
   18fcc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18fd3:	call   0x19021
   18fd8:	cmp    DWORD PTR [esi+0x8],0x0
   18fdc:	jne    0x18f62
   18fde:	push   esi
   18fdf:	lea    eax,[ebp-0x2c]
   18fe2:	push   eax
   18fe3:	call   0x16494
   18fe8:	jmp    0x18f62
   18fed:	xor    eax,eax
   18fef:	inc    eax
   18ff0:	ret    
   18ff1:	mov    esp,DWORD PTR [ebp-0x18]
   18ff4:	mov    eax,DWORD PTR [ebp-0x20]
   18ff7:	mov    DWORD PTR [eax+0x8],0x4
   18ffe:	push   DWORD PTR [ebp-0x2c]
   19001:	call   0x11d22
   19006:	push   0xfffffffe
   19008:	lea    eax,[ebp-0x10]
   1900b:	push   eax
   1900c:	push   0x77b1c
   19011:	call   0x1defc
   19016:	add    esp,0x10
   19019:	jmp    0x1921c
   1901e:	mov    esi,DWORD PTR [ebp-0x20]
   19021:	push   0x0
   19023:	push   0x77b58
   19028:	call   0x11a14
   1902d:	call   eax
   1902f:	ret    
   19030:	call   0x12386
   19035:	jmp    0x1921c
   1903a:	mov    eax,DWORD PTR [ebx+0xc]
   1903d:	mov    ecx,DWORD PTR ds:0x77a04
   19043:	mov    esi,eax
   19045:	sub    esi,ecx
   19047:	push   0x2
   19049:	pop    edi
   1904a:	movzx  edx,WORD PTR [ecx]
   1904d:	mov    WORD PTR [esi+ecx*1],dx
   19051:	add    ecx,edi
   19053:	test   dx,dx
   19056:	jne    0x1904a
   19058:	mov    ecx,0x77a48
   1905d:	lea    esi,[eax+0x50]
   19060:	sub    esi,ecx
   19062:	movzx  edx,WORD PTR [ecx]
   19065:	mov    WORD PTR [esi+ecx*1],dx
   19069:	add    ecx,edi
   1906b:	test   dx,dx
   1906e:	jne    0x19062
   19070:	mov    ecx,0x77a08
   19075:	lea    esi,[eax+0x90]
   1907b:	sub    esi,ecx
   1907d:	movzx  edx,WORD PTR [ecx]
   19080:	mov    WORD PTR [esi+ecx*1],dx
   19084:	add    ecx,edi
   19086:	test   dx,dx
   19089:	jne    0x1907d
   1908b:	mov    ecx,0x77a88
   19090:	lea    esi,[eax+0xd0]
   19096:	sub    esi,ecx
   19098:	movzx  edx,WORD PTR [ecx]
   1909b:	mov    WORD PTR [esi+ecx*1],dx
   1909f:	add    ecx,edi
   190a1:	test   dx,dx
   190a4:	jne    0x19098
   190a6:	lea    edi,[eax+0x40]
   190a9:	mov    esi,0x73a18
   190ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   190b2:	mov    DWORD PTR [ebx+0x1c],0x110
   190b9:	jmp    0x1921c
   190be:	mov    eax,DWORD PTR [ebx+0xc]
   190c1:	push   DWORD PTR [eax]
   190c3:	call   0x1296c
   190c8:	jmp    0x19219
   190cd:	mov    ecx,0x22c088
   190d2:	cmp    eax,ecx
   190d4:	ja     0x1919e
   190da:	je     0x19173
   190e0:	sub    eax,0x22c06c
   190e5:	je     0x1915b
   190e7:	push   0x4
   190e9:	pop    esi
   190ea:	sub    eax,esi
   190ec:	je     0x1914e
   190ee:	push   0x8
   190f0:	pop    ecx
   190f1:	sub    eax,ecx
   190f3:	je     0x19141
   190f5:	sub    eax,esi
   190f7:	je     0x19129
   190f9:	sub    eax,esi
   190fb:	je     0x19112
   190fd:	sub    eax,esi
   190ff:	jne    0x191bc
   19105:	push   DWORD PTR [ebx+0xc]
   19108:	call   0x17a02
   1910d:	jmp    0x19219
   19112:	mov    DWORD PTR [ebx+0x1c],ecx
   19115:	mov    ebx,DWORD PTR [ebx+0xc]
   19118:	mov    eax,ds:0x7851c
   1911d:	mov    DWORD PTR [ebx],eax
   1911f:	mov    eax,ds:0x78520
   19124:	jmp    0x18f0e
   19129:	mov    eax,DWORD PTR [ebx+0xc]
   1912c:	mov    ecx,DWORD PTR [eax]
   1912e:	mov    DWORD PTR ds:0x7851c,ecx
   19134:	mov    eax,DWORD PTR [eax+0x4]
   19137:	mov    ds:0x78520,eax
   1913c:	jmp    0x19219
   19141:	push   DWORD PTR [ebx+0xc]
   19144:	call   0x17210
   19149:	jmp    0x19219
   1914e:	push   DWORD PTR [ebx+0xc]
   19151:	call   0x120ac
   19156:	jmp    0x19219
   1915b:	mov    esi,DWORD PTR [ebx+0xc]
   1915e:	push   DWORD PTR [esi]
   19160:	call   0x129b2
   19165:	mov    DWORD PTR [esi],eax
   19167:	mov    DWORD PTR [ebx+0x1c],0x4
   1916e:	jmp    0x1921c
   19173:	mov    esi,DWORD PTR [ebx+0xc]
   19176:	mov    eax,DWORD PTR [esi]
   19178:	add    eax,0xc
   1917b:	mov    DWORD PTR [ebx+0x1c],eax
   1917e:	push   0xffffffff
   19180:	lea    eax,[esi+0xc]
   19183:	push   eax
   19184:	lea    ecx,[ebp-0x3c]
   19187:	call   0x12b26
   1918c:	push   esi
   1918d:	lea    eax,[ebp-0x3c]
   19190:	push   eax
   19191:	call   0x14fec
   19196:	push   DWORD PTR [ebp-0x3c]
   19199:	jmp    0x18e07
   1919e:	sub    eax,0x22c08c
   191a3:	je     0x1920b
   191a5:	push   0x4
   191a7:	pop    esi
   191a8:	sub    eax,esi
   191aa:	je     0x191f7
   191ac:	sub    eax,esi
   191ae:	je     0x191f0
   191b0:	sub    eax,esi
   191b2:	je     0x191dc
   191b4:	sub    eax,esi
   191b6:	je     0x191d2
   191b8:	sub    eax,esi
   191ba:	je     0x191c5
   191bc:	mov    DWORD PTR [ebp-0x24],0xc0000010
   191c3:	jmp    0x19219
   191c5:	push   DWORD PTR [ebx+0xc]
   191c8:	call   0x1acc8
   191cd:	mov    DWORD PTR [ebx+0x1c],esi
   191d0:	jmp    0x1921c
   191d2:	push   DWORD PTR [ebx+0xc]
   191d5:	call   0x1b770
   191da:	jmp    0x19219
   191dc:	mov    eax,DWORD PTR [ebx+0xc]
   191df:	mov    ecx,DWORD PTR [eax+0x4]
   191e2:	add    ecx,0x8
   191e5:	mov    DWORD PTR [ebx+0x1c],ecx
   191e8:	push   eax
   191e9:	call   0x1ba3e
   191ee:	jmp    0x1921c
   191f0:	call   0x1b680
   191f5:	jmp    0x19219
   191f7:	mov    eax,DWORD PTR [ebx+0xc]
   191fa:	mov    ecx,DWORD PTR [eax+0x4]
   191fd:	add    ecx,0x8
   19200:	mov    DWORD PTR [ebx+0x1c],ecx
   19203:	push   eax
   19204:	call   0x1aa7c
   19209:	jmp    0x1921c
   1920b:	push   DWORD PTR [ebx+0xc]
   1920e:	call   0x129fc
   19213:	push   eax
   19214:	call   0x1b8a2
   19219:	mov    DWORD PTR [ebx+0x1c],edi
   1921c:	mov    eax,DWORD PTR [ebp-0x24]
   1921f:	call   0x1dd85
   19224:	ret    0x8
   19227:	int3   
   19228:	int3   
   19229:	int3   
   1922a:	int3   
   1922b:	int3   
   1922c:	push   0xc
   1922e:	push   0x777a0
   19233:	call   0x1dd40
   19238:	and    DWORD PTR [ebp-0x4],0x0
   1923c:	push   DWORD PTR [ebp+0xc]
   1923f:	push   DWORD PTR [ebp+0x8]
   19242:	call   0x18d5a
   19247:	mov    esi,eax
   19249:	jmp    0x1925e
   1924b:	xor    eax,eax
   1924d:	inc    eax
   1924e:	ret    
   1924f:	mov    esp,DWORD PTR [ebp-0x18]
   19252:	push   0xd
   19254:	call   0x1296c
   19259:	mov    esi,0xc0000001
   1925e:	mov    DWORD PTR [ebp-0x1c],esi
   19261:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19268:	cmp    esi,0x103
   1926e:	je     0x1927e
   19270:	mov    ecx,DWORD PTR [ebp+0xc]
   19273:	mov    DWORD PTR [ecx+0x18],esi
   19276:	xor    dl,dl
   19278:	call   DWORD PTR ds:0x1f424
   1927e:	mov    eax,esi
   19280:	call   0x1dd85
   19285:	ret    0x8
   19288:	int3   
   19289:	int3   
   1928a:	int3   
   1928b:	int3   
   1928c:	int3   
   1928d:	int3   
   1928e:	mov    edi,edi
   19290:	push   ebp
   19291:	mov    ebp,esp
   19293:	push   esi
   19294:	mov    esi,ecx
   19296:	mov    BYTE PTR [esi+0x8],0x0
   1929a:	call   0x14eac
   1929f:	lea    ecx,[esi+0x10]
   192a2:	mov    BYTE PTR [ecx+0x8],0x0
   192a6:	call   0x1489c
   192ab:	mov    eax,DWORD PTR [ebp+0x8]
   192ae:	mov    DWORD PTR [esi+0x20],eax
   192b1:	mov    eax,DWORD PTR [ebp+0xc]
   192b4:	mov    DWORD PTR [esi+0x24],eax
   192b7:	mov    eax,esi
   192b9:	pop    esi
   192ba:	pop    ebp
   192bb:	ret    0x8
   192be:	int3   
   192bf:	int3   
   192c0:	int3   
   192c1:	int3   
   192c2:	int3   
   192c3:	int3   
   192c4:	push   0x854
   192c9:	push   0x777c0
   192ce:	call   0x1e040
   192d3:	mov    esi,DWORD PTR [ebp+0x8]
   192d6:	mov    DWORD PTR [ebp-0x830],esi
   192dc:	mov    edi,DWORD PTR [ebp+0xc]
   192df:	call   0x18552
   192e4:	call   0x11a92
   192e9:	test   eax,eax
   192eb:	je     0x198ee
   192f1:	xor    ebx,ebx
   192f3:	mov    DWORD PTR [ebp-0x834],ebx
   192f9:	call   0x183c0
   192fe:	cmp    al,bl
   19300:	jne    0x19521
   19306:	mov    DWORD PTR [ebp-0x4],ebx
   19309:	push   ebx
   1930a:	push   0x784b8
   1930f:	call   0x119c0
   19314:	call   eax
   19316:	push   0x10
   19318:	call   0x11cec
   1931d:	pop    ecx
   1931e:	cmp    eax,ebx
   19320:	je     0x19339
   19322:	lea    ecx,[ebp-0x81d]
   19328:	push   ecx
   19329:	lea    ecx,[ebp-0x81d]
   1932f:	push   ecx
   19330:	mov    ecx,eax
   19332:	call   0x16fe4
   19337:	jmp    0x1933b
   19339:	xor    eax,eax
   1933b:	mov    ecx,eax
   1933d:	mov    DWORD PTR ds:0x784e0,ecx
   19343:	call   0x16cae
   19348:	push   edi
   19349:	push   0x1f0be
   1934e:	lea    eax,[ebp-0x41c]
   19354:	push   eax
   19355:	call   0x1dd32
   1935a:	add    esp,0xc
   1935d:	push   0xffffffff
   1935f:	lea    eax,[ebp-0x41c]
   19365:	push   eax
   19366:	lea    ecx,[ebp-0x828]
   1936c:	call   0x12b26
   19371:	lea    eax,[ebp-0x828]
   19377:	push   eax
   19378:	mov    ecx,DWORD PTR ds:0x784e0
   1937e:	call   0x16ffe
   19383:	mov    edi,eax
   19385:	push   DWORD PTR [ebp-0x828]
   1938b:	call   0x11d22
   19390:	pop    ecx
   19391:	lea    eax,[ebp-0x83c]
   19397:	push   eax
   19398:	call   0x11918
   1939d:	call   eax
   1939f:	push   ebx
   193a0:	push   0x989680
   193a5:	push   DWORD PTR [ebp-0x838]
   193ab:	push   DWORD PTR [ebp-0x83c]
   193b1:	call   0x1dcf6
   193b6:	inc    eax
   193b7:	mov    DWORD PTR [edi+0x20],eax
   193ba:	cmp    eax,ebx
   193bc:	jge    0x193c5
   193be:	mov    DWORD PTR [edi+0x20],0x1
   193c5:	push   0xffffffff
   193c7:	push   0x1f082
   193cc:	push   0x4
   193ce:	push   0x1f07c
   193d3:	call   0x16eee
   193d8:	push   eax
   193d9:	lea    ecx,[ebp-0x828]
   193df:	call   0x135fc
   193e4:	lea    eax,[ebp-0x828]
   193ea:	push   eax
   193eb:	mov    ecx,edi
   193ed:	call   0x12a28
   193f2:	push   DWORD PTR [ebp-0x828]
   193f8:	call   0x11d22
   193fd:	mov    DWORD PTR [esp],0x1f03c
   19404:	push   0x4
   19406:	push   0x1f032
   1940b:	call   0x16df8
   19410:	mov    DWORD PTR [ebp-0x824],eax
   19416:	lea    ecx,[eax+0x2]
   19419:	mov    dx,WORD PTR [eax]
   1941c:	inc    eax
   1941d:	inc    eax
   1941e:	cmp    dx,bx
   19421:	jne    0x19419
   19423:	sub    eax,ecx
   19425:	sar    eax,1
   19427:	add    eax,eax
   19429:	mov    WORD PTR [ebp-0x826],ax
   19430:	mov    WORD PTR [ebp-0x828],ax
   19437:	mov    DWORD PTR [ebp-0x854],0x18
   19441:	mov    DWORD PTR [ebp-0x850],ebx
   19447:	mov    DWORD PTR [ebp-0x848],0x40
   19451:	lea    eax,[ebp-0x828]
   19457:	mov    DWORD PTR [ebp-0x84c],eax
   1945d:	mov    DWORD PTR [ebp-0x844],ebx
   19463:	mov    DWORD PTR [ebp-0x840],ebx
   19469:	mov    eax,DWORD PTR [ebp-0x824]
   1946f:	lea    ecx,[eax+0x2]
   19472:	mov    dx,WORD PTR [eax]
   19475:	inc    eax
   19476:	inc    eax
   19477:	cmp    dx,bx
   1947a:	jne    0x19472
   1947c:	sub    eax,ecx
   1947e:	sar    eax,1
   19480:	mov    DWORD PTR [ebp-0x834],eax
   19486:	push   0xffffffff
   19488:	push   0x1f008
   1948d:	push   0x8
   1948f:	push   0x1effe
   19494:	call   0x16eee
   19499:	push   eax
   1949a:	lea    ecx,[ebp-0x828]
   194a0:	call   0x135fc
   194a5:	lea    ecx,[edi+0x8]
   194a8:	lea    eax,[ebp-0x828]
   194ae:	push   eax
   194af:	call   0x12a28
   194b4:	push   DWORD PTR [ebp-0x828]
   194ba:	call   0x11d22
   194bf:	pop    ecx
   194c0:	push   0xffffffff
   194c2:	push   0x1e148
   194c7:	lea    ecx,[ebp-0x828]
   194cd:	call   0x12b26
   194d2:	lea    eax,[ebp-0x828]
   194d8:	push   eax
   194d9:	lea    ecx,[edi+0x10]
   194dc:	call   0x12a28
   194e1:	push   DWORD PTR [ebp-0x828]
   194e7:	call   0x11d22
   194ec:	pop    ecx
   194ed:	lea    eax,[edi+0x8]
   194f0:	push   eax
   194f1:	lea    ecx,[edi+0x18]
   194f4:	call   0x12a28
   194f9:	mov    eax,DWORD PTR [edi+0x20]
   194fc:	or     DWORD PTR [ebp-0x834],eax
   19502:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19509:	jmp    0x19521
   1950b:	xor    eax,eax
   1950d:	inc    eax
   1950e:	ret    
   1950f:	mov    esp,DWORD PTR [ebp-0x18]
   19512:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   19519:	xor    ebx,ebx
   1951b:	mov    esi,DWORD PTR [ebp-0x830]
   19521:	cmp    DWORD PTR [ebp-0x834],ebx
   19527:	jne    0x198ee
   1952d:	xor    eax,eax
   1952f:	lea    edi,[ebp-0x844]
   19535:	stos   DWORD PTR es:[edi],eax
   19536:	stos   DWORD PTR es:[edi],eax
   19537:	mov    DWORD PTR [ebp-0x848],0xc
   19541:	mov    DWORD PTR [ebp-0x844],0x2
   1954b:	mov    BYTE PTR [ebp-0x840],bl
   19551:	mov    BYTE PTR [ebp-0x83f],bl
   19557:	push   0x77b78
   1955c:	push   ebx
   1955d:	lea    eax,[ebp-0x848]
   19563:	push   eax
   19564:	call   0x11a68
   19569:	call   eax
   1956b:	push   eax
   1956c:	call   0x118ee
   19571:	call   eax
   19573:	push   0x10
   19575:	call   0x11cec
   1957a:	pop    ecx
   1957b:	cmp    eax,ebx
   1957d:	je     0x1959b
   1957f:	lea    ecx,[ebp-0x81d]
   19585:	push   ecx
   19586:	lea    ecx,[ebp-0x81d]
   1958c:	push   ecx
   1958d:	mov    ecx,eax
   1958f:	call   0x16fe4
   19594:	mov    ds:0x784e0,eax
   19599:	jmp    0x195a1
   1959b:	mov    DWORD PTR ds:0x784e0,ebx
   195a1:	push   0x2c
   195a3:	call   0x11cec
   195a8:	pop    ecx
   195a9:	cmp    eax,ebx
   195ab:	je     0x195c2
   195ad:	push   0x96
   195b2:	push   0x14
   195b4:	mov    ecx,eax
   195b6:	call   0x187d6
   195bb:	mov    ds:0x784e8,eax
   195c0:	jmp    0x195c8
   195c2:	mov    DWORD PTR ds:0x784e8,ebx
   195c8:	push   0x10
   195ca:	call   0x11cec
   195cf:	pop    ecx
   195d0:	cmp    eax,ebx
   195d2:	je     0x195f0
   195d4:	lea    ecx,[ebp-0x81d]
   195da:	push   ecx
   195db:	lea    ecx,[ebp-0x81d]
   195e1:	push   ecx
   195e2:	mov    ecx,eax
   195e4:	call   0x16bee
   195e9:	mov    ds:0x77b28,eax
   195ee:	jmp    0x195f6
   195f0:	mov    DWORD PTR ds:0x77b28,ebx
   195f6:	push   0x10
   195f8:	call   0x11cec
   195fd:	pop    ecx
   195fe:	cmp    eax,ebx
   19600:	je     0x1961e
   19602:	lea    ecx,[ebp-0x81d]
   19608:	push   ecx
   19609:	lea    ecx,[ebp-0x81d]
   1960f:	push   ecx
   19610:	mov    ecx,eax
   19612:	call   0x170a8
   19617:	mov    ds:0x77bb4,eax
   1961c:	jmp    0x19624
   1961e:	mov    DWORD PTR ds:0x77bb4,ebx
   19624:	push   0x28
   19626:	call   0x11cec
   1962b:	pop    ecx
   1962c:	cmp    eax,ebx
   1962e:	je     0x19642
   19630:	push   0x64
   19632:	push   0x14
   19634:	mov    ecx,eax
   19636:	call   0x1928e
   1963b:	mov    ds:0x77b54,eax
   19640:	jmp    0x19648
   19642:	mov    DWORD PTR ds:0x77b54,ebx
   19648:	push   0x20
   1964a:	call   0x11cec
   1964f:	pop    ecx
   19650:	cmp    eax,ebx
   19652:	je     0x19662
   19654:	mov    ecx,eax
   19656:	call   0x16b8e
   1965b:	mov    ds:0x77b50,eax
   19660:	jmp    0x19668
   19662:	mov    DWORD PTR ds:0x77b50,ebx
   19668:	call   0x12944
   1966d:	call   0x1b80a
   19672:	call   0x17bac
   19677:	mov    edi,0x1efee
   1967c:	push   edi
   1967d:	call   0x186fa
   19682:	push   eax
   19683:	push   0x1efb0
   19688:	push   0xa
   1968a:	push   0x1ef9a
   1968f:	call   0x16df8
   19694:	push   eax
   19695:	lea    eax,[ebp-0x41c]
   1969b:	push   eax
   1969c:	call   0x1dd26
   196a1:	add    esp,0xc
   196a4:	lea    eax,[ebp-0x41c]
   196aa:	push   eax
   196ab:	lea    eax,[ebp-0x85c]
   196b1:	push   eax
   196b2:	call   0x1157c
   196b7:	call   eax
   196b9:	push   edi
   196ba:	call   0x186fa
   196bf:	push   eax
   196c0:	push   0x1ef5e
   196c5:	push   0xe
   196c7:	push   0x1ef40
   196cc:	call   0x16df8
   196d1:	push   eax
   196d2:	lea    eax,[ebp-0x81c]
   196d8:	push   eax
   196d9:	call   0x1dd26
   196de:	add    esp,0xc
   196e1:	lea    eax,[ebp-0x81c]
   196e7:	push   eax
   196e8:	lea    eax,[ebp-0x864]
   196ee:	push   eax
   196ef:	call   0x1157c
   196f4:	call   eax
   196f6:	push   0x78524
   196fb:	push   ebx
   196fc:	push   0x100
   19701:	push   0x22
   19703:	lea    eax,[ebp-0x85c]
   19709:	push   eax
   1970a:	push   ebx
   1970b:	push   esi
   1970c:	call   0x118c4
   19711:	call   eax
   19713:	cmp    eax,ebx
   19715:	jl     0x198f0
   1971b:	mov    eax,0x1922c
   19720:	mov    DWORD PTR [esi+0x94],eax
   19726:	mov    DWORD PTR [esi+0x90],eax
   1972c:	mov    DWORD PTR [esi+0xa4],eax
   19732:	mov    DWORD PTR [esi+0x70],eax
   19735:	mov    DWORD PTR [esi+0x48],eax
   19738:	mov    DWORD PTR [esi+0x44],eax
   1973b:	mov    DWORD PTR [esi+0x40],eax
   1973e:	mov    DWORD PTR [esi+0x38],eax
   19741:	mov    eax,ds:0x78524
   19746:	or     DWORD PTR [eax+0x1c],0x4
   1974a:	lea    eax,[ebp-0x85c]
   19750:	push   eax
   19751:	lea    eax,[ebp-0x864]
   19757:	push   eax
   19758:	call   0x1189a
   1975d:	call   eax
   1975f:	mov    DWORD PTR [ebp-0x830],eax
   19765:	cmp    eax,ebx
   19767:	jge    0x1977e
   19769:	push   DWORD PTR [esi+0x4]
   1976c:	call   0x1174a
   19771:	call   eax
   19773:	mov    eax,DWORD PTR [ebp-0x830]
   19779:	jmp    0x198f0
   1977e:	push   ebx
   1977f:	push   0x784b8
   19784:	call   0x119c0
   19789:	call   eax
   1978b:	push   ebx
   1978c:	push   0x77b58
   19791:	call   0x119c0
   19796:	call   eax
   19798:	push   ebx
   19799:	push   0x77b2c
   1979e:	call   0x119c0
   197a3:	call   eax
   197a5:	push   0x8000000
   197aa:	push   0x1ef04
   197af:	push   0x9
   197b1:	push   0x1eb5c
   197b6:	call   0x16eee
   197bb:	push   eax
   197bc:	lea    eax,[ebp-0x82c]
   197c2:	push   eax
   197c3:	call   0x19d2a
   197c8:	push   DWORD PTR [ebp-0x82c]
   197ce:	call   0x11480
   197d3:	call   eax
   197d5:	mov    DWORD PTR [ebp-0x838],eax
   197db:	push   ebx
   197dc:	push   0x1eeda
   197e1:	push   0x16
   197e3:	push   0x1eec2
   197e8:	call   0x16eee
   197ed:	push   eax
   197ee:	push   DWORD PTR [ebp-0x82c]
   197f4:	call   0x19c10
   197f9:	push   eax
   197fa:	push   DWORD PTR [ebp-0x838]
   19800:	call   0x19bb6
   19805:	mov    edi,eax
   19807:	add    edi,DWORD PTR [ebp-0x82c]
   1980d:	mov    esi,0x1e14a
   19812:	push   esi
   19813:	call   0x11200
   19818:	mov    DWORD PTR [ebp-0x824],eax
   1981e:	push   edi
   1981f:	call   0x19b5e
   19824:	mov    ecx,DWORD PTR [ebp-0x824]
   1982a:	mov    ecx,DWORD PTR [ecx]
   1982c:	mov    eax,DWORD PTR [ecx+eax*4]
   1982f:	mov    ds:0x784e4,eax
   19834:	push   ebx
   19835:	push   0x1ee96
   1983a:	push   0x14
   1983c:	push   0x1ee80
   19841:	call   0x16eee
   19846:	push   eax
   19847:	push   DWORD PTR [ebp-0x82c]
   1984d:	call   0x19c10
   19852:	push   eax
   19853:	push   DWORD PTR [ebp-0x838]
   19859:	call   0x19bb6
   1985e:	mov    edi,eax
   19860:	add    edi,DWORD PTR [ebp-0x82c]
   19866:	push   esi
   19867:	call   0x11200
   1986c:	mov    DWORD PTR [ebp-0x824],eax
   19872:	push   edi
   19873:	call   0x19b5e
   19878:	mov    ecx,DWORD PTR [ebp-0x824]
   1987e:	mov    ecx,DWORD PTR [ecx]
   19880:	mov    eax,DWORD PTR [ecx+eax*4]
   19883:	mov    ds:0x784d8,eax
   19888:	push   ebx
   19889:	push   0x1ee40
   1988e:	push   0xe
   19890:	push   0x1ee30
   19895:	call   0x16eee
   1989a:	push   eax
   1989b:	push   DWORD PTR [ebp-0x82c]
   198a1:	call   0x19c10
   198a6:	push   eax
   198a7:	push   DWORD PTR [ebp-0x838]
   198ad:	call   0x19bb6
   198b2:	mov    edi,eax
   198b4:	add    edi,DWORD PTR [ebp-0x82c]
   198ba:	push   esi
   198bb:	call   0x11200
   198c0:	mov    esi,eax
   198c2:	push   edi
   198c3:	call   0x19b5e
   198c8:	mov    ecx,DWORD PTR [esi]
   198ca:	mov    eax,DWORD PTR [ecx+eax*4]
   198cd:	mov    ds:0x784ec,eax
   198d2:	push   DWORD PTR [ebp-0x82c]
   198d8:	call   0x19e7a
   198dd:	call   0x18a40
   198e2:	mov    BYTE PTR ds:0x78528,0x1
   198e9:	jmp    0x19773
   198ee:	xor    eax,eax
   198f0:	call   0x1e088
   198f5:	ret    0x8
   198f8:	int3   
   198f9:	int3   
   198fa:	int3   
   198fb:	int3   
   198fc:	int3   
   198fd:	int3   
   198fe:	mov    edi,edi
   19900:	push   ebp
   19901:	mov    ebp,esp
   19903:	push   ecx
   19904:	mov    ecx,DWORD PTR [ebp+0x8]
   19907:	mov    eax,DWORD PTR [ecx+0x4]
   1990a:	mov    edx,DWORD PTR [ebp+0xc]
   1990d:	push   ebx
   1990e:	mov    ebx,DWORD PTR [edx+0x4]
   19911:	push   esi
   19912:	push   edi
   19913:	mov    DWORD PTR [ebp-0x4],eax
   19916:	mov    DWORD PTR [ebp+0x8],eax
   19919:	cmp    eax,ebx
   1991b:	jbe    0x19920
   1991d:	mov    DWORD PTR [ebp+0x8],ebx
   19920:	xor    eax,eax
   19922:	cmp    DWORD PTR [ebp+0x8],eax
   19925:	jbe    0x1993d
   19927:	mov    esi,DWORD PTR [ecx]
   19929:	mov    edi,DWORD PTR [edx]
   1992b:	mov    cl,BYTE PTR [esi+eax*1]
   1992e:	mov    dl,BYTE PTR [edi+eax*1]
   19931:	cmp    cl,dl
   19933:	jl     0x1994a
   19935:	jg     0x1994e
   19937:	inc    eax
   19938:	cmp    eax,DWORD PTR [ebp+0x8]
   1993b:	jb     0x1992b
   1993d:	cmp    DWORD PTR [ebp-0x4],ebx
   19940:	setb   al
   19943:	pop    edi
   19944:	pop    esi
   19945:	pop    ebx
   19946:	leave  
   19947:	ret    0x8
   1994a:	mov    al,0x1
   1994c:	jmp    0x19943
   1994e:	xor    al,al
   19950:	jmp    0x19943
   19952:	int3   
   19953:	int3   
   19954:	int3   
   19955:	int3   
   19956:	int3   
   19957:	int3   
   19958:	mov    edi,edi
   1995a:	push   ebp
   1995b:	mov    ebp,esp
   1995d:	mov    eax,DWORD PTR [ebp+0x8]
   19960:	mov    ecx,DWORD PTR [eax+0x4]
   19963:	mov    edx,DWORD PTR [ebp+0xc]
   19966:	cmp    ecx,DWORD PTR [edx+0x4]
   19969:	je     0x1996f
   1996b:	xor    al,al
   1996d:	jmp    0x1997e
   1996f:	push   esi
   19970:	mov    esi,DWORD PTR [eax]
   19972:	push   edi
   19973:	mov    edi,DWORD PTR [edx]
   19975:	xor    eax,eax
   19977:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19979:	pop    edi
   1997a:	sete   al
   1997d:	pop    esi
   1997e:	pop    ebp
   1997f:	ret    0x8
   19982:	int3   
   19983:	int3   
   19984:	int3   
   19985:	int3   
   19986:	int3   
   19987:	int3   
   19988:	mov    edi,edi
   1998a:	push   ebp
   1998b:	mov    ebp,esp
   1998d:	push   DWORD PTR [ebp+0xc]
   19990:	push   DWORD PTR [ebp+0x8]
   19993:	call   0x19958
   19998:	xor    ecx,ecx
   1999a:	test   al,al
   1999c:	sete   cl
   1999f:	mov    al,cl
   199a1:	pop    ebp
   199a2:	ret    0x8
   199a5:	int3   
   199a6:	int3   
   199a7:	int3   
   199a8:	int3   
   199a9:	int3   
   199aa:	mov    edi,edi
   199ac:	push   ebp
   199ad:	mov    ebp,esp
   199af:	push   ecx
   199b0:	mov    ecx,DWORD PTR [ebp+0x8]
   199b3:	mov    eax,DWORD PTR [ebp+0xc]
   199b6:	push   ebx
   199b7:	mov    ebx,DWORD PTR [eax+0x4]
   199ba:	push   esi
   199bb:	push   edi
   199bc:	mov    edi,DWORD PTR [ecx+0x4]
   199bf:	mov    DWORD PTR [ebp-0x4],edi
   199c2:	cmp    edi,ebx
   199c4:	jbe    0x199c8
   199c6:	mov    edi,ebx
   199c8:	and    DWORD PTR [ebp+0x8],0x0
   199cc:	test   edi,edi
   199ce:	jbe    0x199ee
   199d0:	mov    eax,DWORD PTR [eax]
   199d2:	mov    ecx,DWORD PTR [ecx]
   199d4:	sub    ecx,eax
   199d6:	movzx  edx,WORD PTR [ecx+eax*1]
   199da:	movzx  esi,WORD PTR [eax]
   199dd:	cmp    dx,si
   199e0:	jb     0x199fb
   199e2:	ja     0x199ff
   199e4:	inc    DWORD PTR [ebp+0x8]
   199e7:	inc    eax
   199e8:	inc    eax
   199e9:	cmp    DWORD PTR [ebp+0x8],edi
   199ec:	jb     0x199d6
   199ee:	cmp    DWORD PTR [ebp-0x4],ebx
   199f1:	setb   al
   199f4:	pop    edi
   199f5:	pop    esi
   199f6:	pop    ebx
   199f7:	leave  
   199f8:	ret    0x8
   199fb:	mov    al,0x1
   199fd:	jmp    0x199f4
   199ff:	xor    al,al
   19a01:	jmp    0x199f4
   19a03:	int3   
   19a04:	int3   
   19a05:	int3   
   19a06:	int3   
   19a07:	int3   
   19a08:	mov    edi,edi
   19a0a:	push   ebp
   19a0b:	mov    ebp,esp
   19a0d:	pop    ebp
   19a0e:	jmp    0x198fe
   19a13:	int3   
   19a14:	int3   
   19a15:	int3   
   19a16:	int3   
   19a17:	int3   
   19a18:	mov    edi,edi
   19a1a:	push   ebp
   19a1b:	mov    ebp,esp
   19a1d:	pop    ebp
   19a1e:	jmp    0x19958
   19a23:	int3   
   19a24:	int3   
   19a25:	int3   
   19a26:	int3   
   19a27:	int3   
   19a28:	mov    edi,edi
   19a2a:	push   ebp
   19a2b:	mov    ebp,esp
   19a2d:	pop    ebp
   19a2e:	jmp    0x19988
   19a33:	int3   
   19a34:	int3   
   19a35:	int3   
   19a36:	int3   
   19a37:	int3   
   19a38:	mov    edi,edi
   19a3a:	push   ebp
   19a3b:	mov    ebp,esp
   19a3d:	pop    ebp
   19a3e:	jmp    0x199aa
   19a43:	int3   
   19a44:	int3   
   19a45:	int3   
   19a46:	int3   
   19a47:	int3   
   19a48:	mov    edi,edi
   19a4a:	push   ebp
   19a4b:	mov    ebp,esp
   19a4d:	mov    eax,DWORD PTR [ebp+0x8]
   19a50:	mov    cl,BYTE PTR [ebp+0xc]
   19a53:	mov    BYTE PTR [eax],cl
   19a55:	inc    eax
   19a56:	pop    ebp
   19a57:	ret    0x8
   19a5a:	int3   
   19a5b:	int3   
   19a5c:	int3   
   19a5d:	int3   
   19a5e:	int3   
   19a5f:	int3   
   19a60:	mov    edi,edi
   19a62:	push   ebp
   19a63:	mov    ebp,esp
   19a65:	mov    eax,DWORD PTR [ebp+0x8]
   19a68:	mov    ecx,DWORD PTR [ebp+0xc]
   19a6b:	mov    DWORD PTR [eax],ecx
   19a6d:	add    eax,0x4
   19a70:	pop    ebp
   19a71:	ret    0x8
   19a74:	int3   
   19a75:	int3   
   19a76:	int3   
   19a77:	int3   
   19a78:	int3   
   19a79:	int3   
   19a7a:	mov    edi,edi
   19a7c:	push   ebp
   19a7d:	mov    ebp,esp
   19a7f:	mov    eax,DWORD PTR [ebp+0x8]
   19a82:	mov    cx,WORD PTR [ebp+0xc]
   19a86:	mov    WORD PTR [eax],cx
   19a89:	add    eax,0x2
   19a8c:	pop    ebp
   19a8d:	ret    0x8
   19a90:	int3   
   19a91:	int3   
   19a92:	int3   
   19a93:	int3   
   19a94:	int3   
   19a95:	int3   
   19a96:	mov    edi,edi
   19a98:	push   ebp
   19a99:	mov    ebp,esp
   19a9b:	push   esi
   19a9c:	mov    esi,DWORD PTR [ebp+0x10]
   19a9f:	push   edi
   19aa0:	mov    edi,DWORD PTR [ebp+0x8]
   19aa3:	push   esi
   19aa4:	push   DWORD PTR [ebp+0xc]
   19aa7:	push   edi
   19aa8:	call   0x1dd1a
   19aad:	add    esp,0xc
   19ab0:	lea    eax,[edi+esi*1]
   19ab3:	pop    edi
   19ab4:	pop    esi
   19ab5:	pop    ebp
   19ab6:	ret    0xc
   19ab9:	int3   
   19aba:	int3   
   19abb:	int3   
   19abc:	int3   
   19abd:	int3   
   19abe:	mov    edi,edi
   19ac0:	push   ebp
   19ac1:	mov    ebp,esp
   19ac3:	mov    eax,DWORD PTR [ebp+0xc]
   19ac6:	mov    ecx,DWORD PTR [ebp+0x8]
   19ac9:	sub    ecx,eax
   19acb:	sub    ecx,0x5
   19ace:	mov    DWORD PTR [eax+0x1],ecx
   19ad1:	mov    BYTE PTR [eax],0xe9
   19ad4:	add    eax,0x5
   19ad7:	pop    ebp
   19ad8:	ret    0x8
   19adb:	int3   
   19adc:	int3   
   19add:	int3   
   19ade:	int3   
   19adf:	int3   
   19ae0:	mov    edi,edi
   19ae2:	push   ebp
   19ae3:	mov    ebp,esp
   19ae5:	push   ecx
   19ae6:	push   ebx
   19ae7:	mov    ebx,DWORD PTR [ebp+0x8]
   19aea:	and    DWORD PTR [ebp+0x8],0x0
   19aee:	push   edi
   19aef:	mov    edi,ebx
   19af1:	test   ebx,ebx
   19af3:	jne    0x19af9
   19af5:	xor    eax,eax
   19af7:	jmp    0x19b53
   19af9:	push   esi
   19afa:	push   0x20736649
   19aff:	push   0x80
   19b04:	push   0x0
   19b06:	call   DWORD PTR ds:0x1f430
   19b0c:	mov    esi,eax
   19b0e:	mov    DWORD PTR [ebp-0x4],esi
   19b11:	push   0x0
   19b13:	push   edi
   19b14:	push   esi
   19b15:	call   0x1a1fc
   19b1a:	mov    ecx,eax
   19b1c:	sub    ecx,edi
   19b1e:	add    DWORD PTR [ebp+0x8],ecx
   19b21:	add    esi,ecx
   19b23:	cmp    DWORD PTR [ebp+0x8],0x5
   19b27:	mov    edi,eax
   19b29:	jb     0x19b11
   19b2b:	push   DWORD PTR [ebp+0x8]
   19b2e:	push   0x90
   19b33:	push   ebx
   19b34:	call   0x1dd02
   19b39:	add    esp,0xc
   19b3c:	push   esi
   19b3d:	lea    eax,[ebx+0x5]
   19b40:	push   eax
   19b41:	call   0x19abe
   19b46:	push   ebx
   19b47:	push   DWORD PTR [ebp+0xc]
   19b4a:	call   0x19abe
   19b4f:	mov    eax,DWORD PTR [ebp-0x4]
   19b52:	pop    esi
   19b53:	pop    edi
   19b54:	pop    ebx
   19b55:	leave  
   19b56:	ret    0x8
   19b59:	int3   
   19b5a:	int3   
   19b5b:	int3   
   19b5c:	int3   
   19b5d:	int3   
   19b5e:	mov    edi,edi
   19b60:	push   ebp
   19b61:	mov    ebp,esp
   19b63:	mov    eax,DWORD PTR [ebp+0x8]
   19b66:	mov    eax,DWORD PTR [eax+0x1]
   19b69:	pop    ebp
   19b6a:	ret    0x4
   19b6d:	int3   
   19b6e:	int3   
   19b6f:	int3   
   19b70:	int3   
   19b71:	int3   
   19b72:	mov    edi,edi
   19b74:	push   ebp
   19b75:	mov    ebp,esp
   19b77:	mov    ecx,DWORD PTR [ebp+0x8]
   19b7a:	movzx  eax,WORD PTR [ecx+0x14]
   19b7e:	lea    eax,[eax+ecx*1+0x18]
   19b82:	movzx  ecx,WORD PTR [ecx+0x6]
   19b86:	push   esi
   19b87:	xor    esi,esi
   19b89:	push   edi
   19b8a:	test   ecx,ecx
   19b8c:	jbe    0x19ba8
   19b8e:	mov    edx,DWORD PTR [eax+0xc]
   19b91:	cmp    DWORD PTR [ebp+0xc],edx
   19b94:	jb     0x19ba0
   19b96:	mov    edi,DWORD PTR [eax+0x8]
   19b99:	add    edi,edx
   19b9b:	cmp    DWORD PTR [ebp+0xc],edi
   19b9e:	jb     0x19baa
   19ba0:	add    eax,0x28
   19ba3:	inc    esi
   19ba4:	cmp    esi,ecx
   19ba6:	jb     0x19b8e
   19ba8:	xor    eax,eax
   19baa:	pop    edi
   19bab:	pop    esi
   19bac:	pop    ebp
   19bad:	ret    0x8
   19bb0:	int3   
   19bb1:	int3   
   19bb2:	int3   
   19bb3:	int3   
   19bb4:	int3   
   19bb5:	int3   
   19bb6:	mov    edi,edi
   19bb8:	push   ebp
   19bb9:	mov    ebp,esp
   19bbb:	push   esi
   19bbc:	push   DWORD PTR [ebp+0xc]
   19bbf:	mov    esi,DWORD PTR [ebp+0x8]
   19bc2:	push   esi
   19bc3:	call   0x19b72
   19bc8:	mov    ecx,eax
   19bca:	test   ecx,ecx
   19bcc:	je     0x19bdf
   19bce:	mov    eax,DWORD PTR [esi+0x3c]
   19bd1:	dec    eax
   19bd2:	not    eax
   19bd4:	and    eax,DWORD PTR [ecx+0x14]
   19bd7:	sub    eax,DWORD PTR [ecx+0xc]
   19bda:	add    eax,DWORD PTR [ebp+0xc]
   19bdd:	jmp    0x19be2
   19bdf:	mov    eax,DWORD PTR [ebp+0xc]
   19be2:	pop    esi
   19be3:	pop    ebp
   19be4:	ret    0x8
   19be7:	int3   
   19be8:	int3   
   19be9:	int3   
   19bea:	int3   
   19beb:	int3   
   19bec:	mov    edi,edi
   19bee:	push   ebp
   19bef:	mov    ebp,esp
   19bf1:	cmp    DWORD PTR [ebp+0x10],0x0
   19bf5:	je     0x19bfc
   19bf7:	mov    eax,DWORD PTR [ebp+0xc]
   19bfa:	jmp    0x19c07
   19bfc:	push   DWORD PTR [ebp+0xc]
   19bff:	push   DWORD PTR [ebp+0x8]
   19c02:	call   0x19bb6
   19c07:	pop    ebp
   19c08:	ret    0xc
   19c0b:	int3   
   19c0c:	int3   
   19c0d:	int3   
   19c0e:	int3   
   19c0f:	int3   
   19c10:	mov    edi,edi
   19c12:	push   ebp
   19c13:	mov    ebp,esp
   19c15:	sub    esp,0x1c
   19c18:	push   ebx
   19c19:	push   esi
   19c1a:	mov    esi,DWORD PTR [ebp+0x8]
   19c1d:	push   edi
   19c1e:	push   esi
   19c1f:	call   0x11480
   19c24:	call   eax
   19c26:	mov    ebx,eax
   19c28:	lea    eax,[ebp-0x14]
   19c2b:	push   eax
   19c2c:	push   0x0
   19c2e:	push   0x0
   19c30:	push   esi
   19c31:	mov    DWORD PTR [ebp-0x4],ebx
   19c34:	call   0x114aa
   19c39:	call   eax
   19c3b:	mov    edi,eax
   19c3d:	mov    eax,DWORD PTR [ebx+0x50]
   19c40:	mov    ecx,edi
   19c42:	sub    ecx,esi
   19c44:	cmp    eax,ecx
   19c46:	jb     0x19c97
   19c48:	mov    ecx,DWORD PTR [ebp-0x14]
   19c4b:	sub    ecx,esi
   19c4d:	add    ecx,edi
   19c4f:	cmp    eax,ecx
   19c51:	jb     0x19c97
   19c53:	push   DWORD PTR [ebp+0x10]
   19c56:	push   DWORD PTR [edi+0x20]
   19c59:	push   ebx
   19c5a:	call   0x19bec
   19c5f:	push   DWORD PTR [ebp+0x10]
   19c62:	mov    ebx,eax
   19c64:	push   DWORD PTR [edi+0x1c]
   19c67:	add    ebx,esi
   19c69:	push   DWORD PTR [ebp-0x4]
   19c6c:	call   0x19bec
   19c71:	push   DWORD PTR [ebp+0x10]
   19c74:	add    eax,esi
   19c76:	push   DWORD PTR [edi+0x24]
   19c79:	mov    DWORD PTR [ebp-0x1c],eax
   19c7c:	push   DWORD PTR [ebp-0x4]
   19c7f:	call   0x19bec
   19c84:	and    DWORD PTR [ebp-0xc],0x0
   19c88:	add    eax,esi
   19c8a:	mov    esi,DWORD PTR [edi+0x18]
   19c8d:	mov    DWORD PTR [ebp-0x18],eax
   19c90:	mov    DWORD PTR [ebp-0x8],esi
   19c93:	test   esi,esi
   19c95:	jg     0x19ca3
   19c97:	xor    eax,eax
   19c99:	pop    edi
   19c9a:	pop    esi
   19c9b:	pop    ebx
   19c9c:	leave  
   19c9d:	ret    0xc
   19ca0:	mov    esi,DWORD PTR [ebp-0x8]
   19ca3:	mov    eax,DWORD PTR [ebp-0xc]
   19ca6:	push   DWORD PTR [ebp+0x10]
   19ca9:	add    esi,eax
   19cab:	mov    eax,DWORD PTR [ebp+0xc]
   19cae:	sar    esi,1
   19cb0:	push   DWORD PTR [ebx+esi*4]
   19cb3:	mov    DWORD PTR [ebp-0x10],eax
   19cb6:	push   DWORD PTR [ebp-0x4]
   19cb9:	call   0x19bec
   19cbe:	add    eax,DWORD PTR [ebp+0x8]
   19cc1:	mov    cl,BYTE PTR [eax]
   19cc3:	mov    edx,DWORD PTR [ebp-0x10]
   19cc6:	cmp    cl,BYTE PTR [edx]
   19cc8:	jne    0x19ce5
   19cca:	test   cl,cl
   19ccc:	je     0x19ce1
   19cce:	mov    cl,BYTE PTR [eax+0x1]
   19cd1:	cmp    cl,BYTE PTR [edx+0x1]
   19cd4:	jne    0x19ce5
   19cd6:	inc    eax
   19cd7:	inc    eax
   19cd8:	inc    edx
   19cd9:	inc    edx
   19cda:	mov    DWORD PTR [ebp-0x10],edx
   19cdd:	test   cl,cl
   19cdf:	jne    0x19cc1
   19ce1:	xor    eax,eax
   19ce3:	jmp    0x19cea
   19ce5:	sbb    eax,eax
   19ce7:	sbb    eax,0xffffffff
   19cea:	test   eax,eax
   19cec:	je     0x19d03
   19cee:	jge    0x19cf6
   19cf0:	inc    esi
   19cf1:	mov    DWORD PTR [ebp-0xc],esi
   19cf4:	jmp    0x19cf9
   19cf6:	mov    DWORD PTR [ebp-0x8],esi
   19cf9:	mov    eax,DWORD PTR [ebp-0x8]
   19cfc:	cmp    DWORD PTR [ebp-0xc],eax
   19cff:	jl     0x19ca0
   19d01:	jmp    0x19c97
   19d03:	mov    eax,DWORD PTR [ebp-0x18]
   19d06:	movzx  eax,WORD PTR [eax+esi*2]
   19d0a:	mov    ecx,DWORD PTR [ebp-0x1c]
   19d0d:	mov    ecx,DWORD PTR [ecx+eax*4]
   19d10:	mov    eax,ecx
   19d12:	sub    eax,edi
   19d14:	add    eax,DWORD PTR [ebp+0x8]
   19d17:	cmp    eax,DWORD PTR [ebp-0x14]
   19d1a:	sbb    eax,eax
   19d1c:	not    eax
   19d1e:	and    eax,ecx
   19d20:	jmp    0x19c99
   19d25:	int3   
   19d26:	int3   
   19d27:	int3   
   19d28:	int3   
   19d29:	int3   
   19d2a:	mov    edi,edi
   19d2c:	push   ebp
   19d2d:	mov    ebp,esp
   19d2f:	sub    esp,0x814
   19d35:	mov    eax,ds:0x77b1c
   19d3a:	xor    eax,ebp
   19d3c:	mov    DWORD PTR [ebp-0x4],eax
   19d3f:	mov    ecx,DWORD PTR [ebp+0xc]
   19d42:	push   ebx
   19d43:	mov    ebx,DWORD PTR [ebp+0x8]
   19d46:	push   esi
   19d47:	push   edi
   19d48:	xor    esi,esi
   19d4a:	xor    eax,eax
   19d4c:	push   ecx
   19d4d:	mov    DWORD PTR [ebp-0x7ec],esi
   19d53:	lea    edi,[ebp-0x7e8]
   19d59:	stos   DWORD PTR es:[edi],eax
   19d5a:	lea    eax,[ebp-0x7d4]
   19d60:	push   0x1f0c2
   19d65:	push   eax
   19d66:	mov    DWORD PTR [ebp-0x7d8],esi
   19d6c:	mov    DWORD PTR [ebp-0x7e4],esi
   19d72:	call   DWORD PTR ds:0x1f428
   19d78:	add    esp,0xc
   19d7b:	lea    eax,[ebp-0x7d4]
   19d81:	push   eax
   19d82:	lea    eax,[ebp-0x80c]
   19d88:	push   eax
   19d89:	call   0x1157c
   19d8e:	call   eax
   19d90:	push   0x10
   19d92:	lea    eax,[ebp-0x80c]
   19d98:	mov    DWORD PTR [ebp-0x7fc],eax
   19d9e:	push   0x1
   19da0:	lea    eax,[ebp-0x814]
   19da6:	push   eax
   19da7:	lea    eax,[ebp-0x804]
   19dad:	push   eax
   19dae:	push   0x80100000
   19db3:	lea    eax,[ebp-0x7dc]
   19db9:	push   eax
   19dba:	mov    DWORD PTR [ebp-0x804],0x18
   19dc4:	mov    DWORD PTR [ebp-0x800],esi
   19dca:	mov    DWORD PTR [ebp-0x7f8],esi
   19dd0:	mov    DWORD PTR [ebp-0x7f4],esi
   19dd6:	mov    DWORD PTR [ebp-0x7f0],esi
   19ddc:	call   0x11330
   19de1:	call   eax
   19de3:	cmp    eax,esi
   19de5:	jl     0x19e63
   19de7:	push   DWORD PTR [ebp-0x7dc]
   19ded:	lea    eax,[ebp-0x7ec]
   19df3:	push   DWORD PTR [ebp+0x10]
   19df6:	push   0x2
   19df8:	push   eax
   19df9:	push   esi
   19dfa:	push   0x4
   19dfc:	lea    eax,[ebp-0x7e0]
   19e02:	push   eax
   19e03:	call   0x1196c
   19e08:	call   eax
   19e0a:	push   DWORD PTR [ebp-0x7dc]
   19e10:	mov    edi,eax
   19e12:	call   0x11552
   19e17:	call   eax
   19e19:	cmp    edi,esi
   19e1b:	jge    0x19e21
   19e1d:	mov    eax,edi
   19e1f:	jmp    0x19e63
   19e21:	push   0x2
   19e23:	push   esi
   19e24:	push   0x2
   19e26:	lea    eax,[ebp-0x7e4]
   19e2c:	push   eax
   19e2d:	push   esi
   19e2e:	push   esi
   19e2f:	push   esi
   19e30:	lea    eax,[ebp-0x7d8]
   19e36:	push   eax
   19e37:	push   0xffffffff
   19e39:	push   DWORD PTR [ebp-0x7e0]
   19e3f:	call   0x11942
   19e44:	call   eax
   19e46:	push   DWORD PTR [ebp-0x7e0]
   19e4c:	mov    edi,eax
   19e4e:	call   0x11552
   19e53:	call   eax
   19e55:	cmp    edi,esi
   19e57:	jl     0x19e1d
   19e59:	mov    eax,DWORD PTR [ebp-0x7d8]
   19e5f:	mov    DWORD PTR [ebx],eax
   19e61:	xor    eax,eax
   19e63:	mov    ecx,DWORD PTR [ebp-0x4]
   19e66:	pop    edi
   19e67:	pop    esi
   19e68:	xor    ecx,ebp
   19e6a:	pop    ebx
   19e6b:	call   0x1dca9
   19e70:	leave  
   19e71:	ret    0xc
   19e74:	int3   
   19e75:	int3   
   19e76:	int3   
   19e77:	int3   
   19e78:	int3   
   19e79:	int3   
   19e7a:	mov    edi,edi
   19e7c:	push   ebp
   19e7d:	mov    ebp,esp
   19e7f:	push   DWORD PTR [ebp+0x8]
   19e82:	push   0xffffffff
   19e84:	call   0x11996
   19e89:	call   eax
   19e8b:	pop    ebp
   19e8c:	ret    0x4
   19e8f:	int3   
   19e90:	int3   
   19e91:	int3   
   19e92:	int3   
   19e93:	int3   
   19e94:	mov    edi,edi
   19e96:	push   ebp
   19e97:	mov    ebp,esp
   19e99:	push   esi
   19e9a:	mov    esi,DWORD PTR [ebp+0x8]
   19e9d:	test   esi,esi
   19e9f:	jne    0x19ea4
   19ea1:	lea    esi,[ecx+0x18]
   19ea4:	mov    edx,DWORD PTR [ebp+0xc]
   19ea7:	test   edx,edx
   19ea9:	jne    0x19eaf
   19eab:	xor    eax,eax
   19ead:	jmp    0x19ebf
   19eaf:	movzx  eax,BYTE PTR [edx]
   19eb2:	push   edx
   19eb3:	lea    eax,[eax*8+0x73b30]
   19eba:	push   esi
   19ebb:	push   eax
   19ebc:	call   DWORD PTR [eax+0x4]
   19ebf:	pop    esi
   19ec0:	pop    ebp
   19ec1:	ret    0x8
   19ec4:	int3   
   19ec5:	int3   
   19ec6:	int3   
   19ec7:	int3   
   19ec8:	int3   
   19ec9:	int3   
   19eca:	mov    edi,edi
   19ecc:	push   ebp
   19ecd:	mov    ebp,esp
   19ecf:	mov    eax,DWORD PTR [ebp+0x14]
   19ed2:	push   ebx
   19ed3:	mov    ebx,DWORD PTR [ebp+0x8]
   19ed6:	push   esi
   19ed7:	mov    esi,DWORD PTR [ebp+0x10]
   19eda:	sub    esi,eax
   19edc:	push   edi
   19edd:	lea    edi,[ebx+eax*1]
   19ee0:	mov    eax,esi
   19ee2:	xor    edx,edx
   19ee4:	dec    eax
   19ee5:	je     0x19f06
   19ee7:	dec    eax
   19ee8:	je     0x19ef8
   19eea:	dec    eax
   19eeb:	dec    eax
   19eec:	jne    0x19f12
   19eee:	mov    eax,DWORD PTR [ecx+0xc]
   19ef1:	mov    edx,DWORD PTR [edi]
   19ef3:	and    DWORD PTR [eax],0x0
   19ef6:	jmp    0x19f12
   19ef8:	mov    eax,DWORD PTR [ecx+0xc]
   19efb:	movsx  edx,WORD PTR [edi]
   19efe:	mov    DWORD PTR [eax],0x2
   19f04:	jmp    0x19f12
   19f06:	mov    eax,DWORD PTR [ecx+0xc]
   19f09:	movsx  edx,BYTE PTR [edi]
   19f0c:	mov    DWORD PTR [eax],0x3
   19f12:	mov    ecx,DWORD PTR [ebp+0xc]
   19f15:	lea    eax,[edx+ecx*1]
   19f18:	add    eax,DWORD PTR [ebp+0x10]
   19f1b:	sub    edx,ebx
   19f1d:	add    edx,ecx
   19f1f:	dec    esi
   19f20:	je     0x19f32
   19f22:	dec    esi
   19f23:	je     0x19f2d
   19f25:	dec    esi
   19f26:	dec    esi
   19f27:	jne    0x19f34
   19f29:	mov    DWORD PTR [edi],edx
   19f2b:	jmp    0x19f34
   19f2d:	mov    WORD PTR [edi],dx
   19f30:	jmp    0x19f34
   19f32:	mov    BYTE PTR [edi],dl
   19f34:	pop    edi
   19f35:	pop    esi
   19f36:	pop    ebx
   19f37:	pop    ebp
   19f38:	ret    0x10
   19f3b:	int3   
   19f3c:	int3   
   19f3d:	int3   
   19f3e:	int3   
   19f3f:	int3   
   19f40:	mov    edi,edi
   19f42:	push   ebp
   19f43:	mov    ebp,esp
   19f45:	mov    eax,DWORD PTR [ebp+0x10]
   19f48:	inc    eax
   19f49:	pop    ebp
   19f4a:	ret    0xc
   19f4d:	int3   
   19f4e:	int3   
   19f4f:	int3   
   19f50:	int3   
   19f51:	int3   
   19f52:	mov    edi,edi
   19f54:	push   ebp
   19f55:	mov    ebp,esp
   19f57:	mov    eax,ecx
   19f59:	mov    ecx,DWORD PTR [ebp+0x8]
   19f5c:	and    DWORD PTR [eax],0x0
   19f5f:	and    DWORD PTR [eax+0x4],0x0
   19f63:	test   ecx,ecx
   19f65:	jne    0x19f6a
   19f67:	lea    ecx,[eax+0x14]
   19f6a:	mov    edx,DWORD PTR [ebp+0xc]
   19f6d:	mov    DWORD PTR [eax+0x8],ecx
   19f70:	test   edx,edx
   19f72:	jne    0x19f77
   19f74:	lea    edx,[eax+0x10]
   19f77:	mov    DWORD PTR [eax+0xc],edx
   19f7a:	and    DWORD PTR [ecx],0x0
   19f7d:	mov    ecx,DWORD PTR [eax+0xc]
   19f80:	and    DWORD PTR [ecx],0x0
   19f83:	pop    ebp
   19f84:	ret    0x8
   19f87:	int3   
   19f88:	int3   
   19f89:	int3   
   19f8a:	int3   
   19f8b:	int3   
   19f8c:	mov    edi,edi
   19f8e:	push   ebp
   19f8f:	mov    ebp,esp
   19f91:	push   ecx
   19f92:	mov    eax,DWORD PTR [ebp+0x8]
   19f95:	mov    eax,DWORD PTR [eax]
   19f97:	push   ebx
   19f98:	push   esi
   19f99:	push   edi
   19f9a:	mov    DWORD PTR [ebp-0x4],ecx
   19f9d:	mov    esi,eax
   19f9f:	test   eax,0x200000
   19fa4:	je     0x19fb1
   19fa6:	cmp    DWORD PTR [ecx+0x4],0x0
   19faa:	je     0x19fb6
   19fac:	shr    esi,0xb
   19faf:	jmp    0x19fb9
   19fb1:	cmp    DWORD PTR [ecx],0x0
   19fb4:	jmp    0x19faa
   19fb6:	shr    esi,0x8
   19fb9:	mov    ebx,DWORD PTR [ebp+0x10]
   19fbc:	and    esi,0x7
   19fbf:	shr    eax,0xe
   19fc2:	and    eax,0x7
   19fc5:	mov    edi,esi
   19fc7:	jbe    0x1a003
   19fc9:	add    eax,ebx
   19fcb:	mov    cl,BYTE PTR [eax]
   19fcd:	movzx  edx,cl
   19fd0:	mov    dl,BYTE PTR [edx+0x73a30]
   19fd6:	test   dl,0x10
   19fd9:	je     0x19ffb
   19fdb:	mov    al,BYTE PTR [eax+0x1]
   19fde:	and    al,0x7
   19fe0:	cmp    al,0x5
   19fe2:	jne    0x19ffb
   19fe4:	and    cl,0xc0
   19fe7:	je     0x19ff8
   19fe9:	cmp    cl,0x40
   19fec:	jne    0x19ff3
   19fee:	lea    edi,[esi+0x1]
   19ff1:	jmp    0x19ffb
   19ff3:	cmp    cl,0x80
   19ff6:	jne    0x19ffb
   19ff8:	lea    edi,[esi+0x4]
   19ffb:	movzx  eax,dl
   19ffe:	and    eax,0xf
   1a001:	add    edi,eax
   1a003:	push   edi
   1a004:	push   ebx
   1a005:	push   DWORD PTR [ebp+0xc]
   1a008:	call   0x1dd1a
   1a00d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a010:	mov    eax,DWORD PTR [ecx]
   1a012:	shl    eax,0xc
   1a015:	sar    eax,0x1d
   1a018:	add    esp,0xc
   1a01b:	test   eax,eax
   1a01d:	je     0x1a039
   1a01f:	push   eax
   1a020:	push   esi
   1a021:	mov    esi,DWORD PTR [ebp-0x4]
   1a024:	push   ebx
   1a025:	push   DWORD PTR [ebp+0xc]
   1a028:	mov    ecx,esi
   1a02a:	call   0x19eca
   1a02f:	mov    ecx,DWORD PTR [esi+0x8]
   1a032:	mov    DWORD PTR [ecx],eax
   1a034:	mov    ecx,DWORD PTR [ebp+0x8]
   1a037:	jmp    0x1a03c
   1a039:	mov    esi,DWORD PTR [ebp-0x4]
   1a03c:	test   DWORD PTR [ecx],0x400000
   1a042:	je     0x1a049
   1a044:	mov    eax,DWORD PTR [esi+0xc]
   1a047:	neg    DWORD PTR [eax]
   1a049:	test   DWORD PTR [ecx],0x100000
   1a04f:	je     0x1a057
   1a051:	mov    eax,DWORD PTR [esi+0x8]
   1a054:	or     DWORD PTR [eax],0xffffffff
   1a057:	lea    eax,[edi+ebx*1]
   1a05a:	pop    edi
   1a05b:	pop    esi
   1a05c:	pop    ebx
   1a05d:	leave  
   1a05e:	ret    0xc
   1a061:	int3   
   1a062:	int3   
   1a063:	int3   
   1a064:	int3   
   1a065:	int3   
   1a066:	mov    edi,edi
   1a068:	push   ebp
   1a069:	mov    ebp,esp
   1a06b:	push   ebx
   1a06c:	push   esi
   1a06d:	mov    esi,DWORD PTR [ebp+0x10]
   1a070:	push   edi
   1a071:	mov    edi,DWORD PTR [ebp+0xc]
   1a074:	push   esi
   1a075:	push   edi
   1a076:	push   DWORD PTR [ebp+0x8]
   1a079:	mov    ebx,ecx
   1a07b:	call   0x19f8c
   1a080:	lea    eax,[esi+0x1]
   1a083:	movzx  edx,BYTE PTR [eax]
   1a086:	push   eax
   1a087:	inc    edi
   1a088:	lea    edx,[edx*8+0x73b30]
   1a08f:	push   edi
   1a090:	push   edx
   1a091:	mov    ecx,ebx
   1a093:	call   DWORD PTR [edx+0x4]
   1a096:	pop    edi
   1a097:	pop    esi
   1a098:	pop    ebx
   1a099:	pop    ebp
   1a09a:	ret    0xc
   1a09d:	int3   
   1a09e:	int3   
   1a09f:	int3   
   1a0a0:	int3   
   1a0a1:	int3   
   1a0a2:	mov    edi,edi
   1a0a4:	push   ebp
   1a0a5:	mov    ebp,esp
   1a0a7:	push   ebx
   1a0a8:	push   esi
   1a0a9:	mov    esi,DWORD PTR [ebp+0x10]
   1a0ac:	push   edi
   1a0ad:	mov    edi,DWORD PTR [ebp+0xc]
   1a0b0:	push   esi
   1a0b1:	push   edi
   1a0b2:	push   DWORD PTR [ebp+0x8]
   1a0b5:	mov    ebx,ecx
   1a0b7:	call   0x19f8c
   1a0bc:	lea    eax,[esi+0x1]
   1a0bf:	movzx  edx,BYTE PTR [eax]
   1a0c2:	push   eax
   1a0c3:	inc    edi
   1a0c4:	lea    edx,[edx*8+0x74338]
   1a0cb:	push   edi
   1a0cc:	push   edx
   1a0cd:	mov    ecx,ebx
   1a0cf:	call   DWORD PTR [edx+0x4]
   1a0d2:	pop    edi
   1a0d3:	pop    esi
   1a0d4:	pop    ebx
   1a0d5:	pop    ebp
   1a0d6:	ret    0xc
   1a0d9:	int3   
   1a0da:	int3   
   1a0db:	int3   
   1a0dc:	int3   
   1a0dd:	int3   
   1a0de:	mov    edi,edi
   1a0e0:	push   ebp
   1a0e1:	mov    ebp,esp
   1a0e3:	mov    DWORD PTR [ecx],0x1
   1a0e9:	pop    ebp
   1a0ea:	jmp    0x1a066
   1a0ef:	int3   
   1a0f0:	int3   
   1a0f1:	int3   
   1a0f2:	int3   
   1a0f3:	int3   
   1a0f4:	mov    edi,edi
   1a0f6:	push   ebp
   1a0f7:	mov    ebp,esp
   1a0f9:	mov    DWORD PTR [ecx+0x4],0x1
   1a100:	pop    ebp
   1a101:	jmp    0x1a066
   1a106:	int3   
   1a107:	int3   
   1a108:	int3   
   1a109:	int3   
   1a10a:	int3   
   1a10b:	int3   
   1a10c:	mov    edi,edi
   1a10e:	push   ebp
   1a10f:	mov    ebp,esp
   1a111:	mov    eax,DWORD PTR [ebp+0x10]
   1a114:	sub    esp,0x10
   1a117:	test   BYTE PTR [eax+0x1],0x38
   1a11b:	push   eax
   1a11c:	push   DWORD PTR [ebp+0xc]
   1a11f:	jne    0x1a134
   1a121:	mov    DWORD PTR [ebp-0x8],0x5bf6
   1a128:	mov    DWORD PTR [ebp-0x4],0x19f8c
   1a12f:	lea    eax,[ebp-0x8]
   1a132:	jmp    0x1a145
   1a134:	mov    DWORD PTR [ebp-0x10],0x52f6
   1a13b:	mov    DWORD PTR [ebp-0xc],0x19f8c
   1a142:	lea    eax,[ebp-0x10]
   1a145:	push   eax
   1a146:	call   0x19f8c
   1a14b:	leave  
   1a14c:	ret    0xc
   1a14f:	int3   
   1a150:	int3   
   1a151:	int3   
   1a152:	int3   
   1a153:	int3   
   1a154:	mov    edi,edi
   1a156:	push   ebp
   1a157:	mov    ebp,esp
   1a159:	mov    eax,DWORD PTR [ebp+0x10]
   1a15c:	sub    esp,0x10
   1a15f:	test   BYTE PTR [eax+0x1],0x38
   1a163:	push   eax
   1a164:	push   DWORD PTR [ebp+0xc]
   1a167:	jne    0x1a17c
   1a169:	mov    DWORD PTR [ebp-0x8],0x66f7
   1a170:	mov    DWORD PTR [ebp-0x4],0x19f8c
   1a177:	lea    eax,[ebp-0x8]
   1a17a:	jmp    0x1a18d
   1a17c:	mov    DWORD PTR [ebp-0x10],0x52f7
   1a183:	mov    DWORD PTR [ebp-0xc],0x19f8c
   1a18a:	lea    eax,[ebp-0x10]
   1a18d:	push   eax
   1a18e:	call   0x19f8c
   1a193:	leave  
   1a194:	ret    0xc
   1a197:	int3   
   1a198:	int3   
   1a199:	int3   
   1a19a:	int3   
   1a19b:	int3   
   1a19c:	mov    edi,edi
   1a19e:	push   ebp
   1a19f:	mov    ebp,esp
   1a1a1:	push   ecx
   1a1a2:	push   ecx
   1a1a3:	mov    edx,DWORD PTR [ebp+0x10]
   1a1a6:	mov    al,BYTE PTR [edx+0x1]
   1a1a9:	cmp    al,0x15
   1a1ab:	je     0x1a1cb
   1a1ad:	cmp    al,0x25
   1a1af:	je     0x1a1cb
   1a1b1:	and    al,0x38
   1a1b3:	cmp    al,0x10
   1a1b5:	je     0x1a1c3
   1a1b7:	cmp    al,0x18
   1a1b9:	je     0x1a1c3
   1a1bb:	cmp    al,0x20
   1a1bd:	je     0x1a1c3
   1a1bf:	cmp    al,0x28
   1a1c1:	jne    0x1a1d7
   1a1c3:	mov    eax,DWORD PTR [ecx+0x8]
   1a1c6:	or     DWORD PTR [eax],0xffffffff
   1a1c9:	jmp    0x1a1d7
   1a1cb:	mov    eax,DWORD PTR [edx+0x2]
   1a1ce:	mov    eax,DWORD PTR [eax]
   1a1d0:	push   esi
   1a1d1:	mov    esi,DWORD PTR [ecx+0x8]
   1a1d4:	mov    DWORD PTR [esi],eax
   1a1d6:	pop    esi
   1a1d7:	push   edx
   1a1d8:	push   DWORD PTR [ebp+0xc]
   1a1db:	lea    eax,[ebp-0x8]
   1a1de:	push   eax
   1a1df:	mov    DWORD PTR [ebp-0x8],0x52ff
   1a1e6:	mov    DWORD PTR [ebp-0x4],0x19f8c
   1a1ed:	call   0x19f8c
   1a1f2:	leave  
   1a1f3:	ret    0xc
   1a1f6:	int3   
   1a1f7:	int3   
   1a1f8:	int3   
   1a1f9:	int3   
   1a1fa:	int3   
   1a1fb:	int3   
   1a1fc:	mov    edi,edi
   1a1fe:	push   ebp
   1a1ff:	mov    ebp,esp
   1a201:	sub    esp,0x5c
   1a204:	mov    eax,ds:0x77b1c
   1a209:	xor    eax,ebp
   1a20b:	mov    DWORD PTR [ebp-0x4],eax
   1a20e:	mov    eax,DWORD PTR [ebp+0x10]
   1a211:	push   esi
   1a212:	mov    esi,DWORD PTR [ebp+0x8]
   1a215:	push   edi
   1a216:	mov    edi,DWORD PTR [ebp+0xc]
   1a219:	push   0x0
   1a21b:	push   eax
   1a21c:	lea    ecx,[ebp-0x5c]
   1a21f:	call   0x19f52
   1a224:	push   edi
   1a225:	push   esi
   1a226:	lea    ecx,[ebp-0x5c]
   1a229:	call   0x19e94
   1a22e:	mov    ecx,DWORD PTR [ebp-0x4]
   1a231:	pop    edi
   1a232:	xor    ecx,ebp
   1a234:	pop    esi
   1a235:	call   0x1dca9
   1a23a:	leave  
   1a23b:	ret    0xc
   1a23e:	int3   
   1a23f:	int3   
   1a240:	int3   
   1a241:	int3   
   1a242:	int3   
   1a243:	int3   
   1a244:	mov    edi,edi
   1a246:	push   ebp
   1a247:	mov    ebp,esp
   1a249:	push   esi
   1a24a:	mov    esi,DWORD PTR [ebp+0x8]
   1a24d:	push   edi
   1a24e:	mov    edi,ecx
   1a250:	cmp    edi,esi
   1a252:	je     0x1a27f
   1a254:	mov    eax,DWORD PTR [edi+0x4]
   1a257:	cmp    eax,DWORD PTR [esi+0x4]
   1a25a:	je     0x1a26e
   1a25c:	cmp    BYTE PTR [edi],0x0
   1a25f:	je     0x1a268
   1a261:	push   eax
   1a262:	call   0x11d22
   1a267:	pop    ecx
   1a268:	mov    al,BYTE PTR [esi]
   1a26a:	mov    BYTE PTR [edi],al
   1a26c:	jmp    0x1a276
   1a26e:	cmp    BYTE PTR [esi],0x0
   1a271:	je     0x1a276
   1a273:	mov    BYTE PTR [edi],0x1
   1a276:	mov    eax,DWORD PTR [esi+0x4]
   1a279:	mov    BYTE PTR [esi],0x0
   1a27c:	mov    DWORD PTR [edi+0x4],eax
   1a27f:	mov    eax,edi
   1a281:	pop    edi
   1a282:	pop    esi
   1a283:	pop    ebp
   1a284:	ret    0x4
   1a287:	int3   
   1a288:	int3   
   1a289:	int3   
   1a28a:	int3   
   1a28b:	int3   
   1a28c:	mov    edi,edi
   1a28e:	push   ebp
   1a28f:	mov    ebp,esp
   1a291:	sub    esp,0x50
   1a294:	push   ebx
   1a295:	push   esi
   1a296:	push   edi
   1a297:	mov    edi,0x4000
   1a29c:	push   edi
   1a29d:	call   0x11cec
   1a2a2:	pop    ecx
   1a2a3:	xor    ebx,ebx
   1a2a5:	push   0x38
   1a2a7:	push   0x1f0f2
   1a2ac:	cmp    eax,ebx
   1a2ae:	mov    DWORD PTR [ebp-0x4],eax
   1a2b1:	mov    DWORD PTR [ebp-0xc],eax
   1a2b4:	push   0x2f
   1a2b6:	lea    eax,[ebp-0x50]
   1a2b9:	setne  BYTE PTR [ebp-0x10]
   1a2bd:	push   eax
   1a2be:	xor    esi,esi
   1a2c0:	mov    DWORD PTR [ebp-0x30],ebx
   1a2c3:	mov    DWORD PTR [ebp-0x2c],ebx
   1a2c6:	mov    DWORD PTR [ebp-0x28],ebx
   1a2c9:	mov    DWORD PTR [ebp-0x4c],ebx
   1a2cc:	mov    DWORD PTR [ebp-0x50],ebx
   1a2cf:	call   0x1bb80
   1a2d4:	test   eax,eax
   1a2d6:	je     0x1a2f5
   1a2d8:	mov    esi,DWORD PTR [ebp+0x8]
   1a2db:	mov    BYTE PTR [esi],bl
   1a2dd:	mov    DWORD PTR [esi+0x4],ebx
   1a2e0:	cmp    BYTE PTR [ebp-0x10],bl
   1a2e3:	je     0x1a2ee
   1a2e5:	push   DWORD PTR [ebp-0x4]
   1a2e8:	call   0x11d22
   1a2ed:	pop    ecx
   1a2ee:	mov    eax,esi
   1a2f0:	jmp    0x1a40a
   1a2f5:	mov    eax,DWORD PTR [ebp+0x10]
   1a2f8:	mov    DWORD PTR [ebp-0x4c],eax
   1a2fb:	mov    eax,DWORD PTR [ebp+0xc]
   1a2fe:	mov    DWORD PTR [ebp-0x50],eax
   1a301:	mov    eax,DWORD PTR [ebp-0xc]
   1a304:	add    eax,esi
   1a306:	mov    DWORD PTR [ebp-0x44],eax
   1a309:	push   0x4
   1a30b:	lea    eax,[ebp-0x50]
   1a30e:	push   eax
   1a30f:	mov    DWORD PTR [ebp-0x40],edi
   1a312:	call   0x1bd14
   1a317:	cmp    eax,0xfffffffc
   1a31a:	mov    DWORD PTR [ebp+0x10],eax
   1a31d:	jl     0x1a331
   1a31f:	cmp    eax,0xfffffffd
   1a322:	jle    0x1a3ba
   1a328:	cmp    eax,0x2
   1a32b:	je     0x1a3ba
   1a331:	mov    eax,edi
   1a333:	sub    eax,DWORD PTR [ebp-0x40]
   1a336:	add    esi,eax
   1a338:	cmp    DWORD PTR [ebp-0x40],ebx
   1a33b:	jne    0x1a3a4
   1a33d:	mov    al,BYTE PTR [ebp-0x10]
   1a340:	mov    BYTE PTR [ebp-0x18],al
   1a343:	mov    eax,DWORD PTR [ebp-0xc]
   1a346:	mov    DWORD PTR [ebp-0x14],eax
   1a349:	lea    eax,[esi+0x4000]
   1a34f:	push   eax
   1a350:	mov    BYTE PTR [ebp-0x10],bl
   1a353:	call   0x11cec
   1a358:	pop    ecx
   1a359:	cmp    eax,ebx
   1a35b:	setne  cl
   1a35e:	mov    DWORD PTR [ebp-0x4],eax
   1a361:	lea    eax,[ebp-0x8]
   1a364:	mov    BYTE PTR [ebp-0x8],cl
   1a367:	push   eax
   1a368:	lea    ecx,[ebp-0x10]
   1a36b:	call   0x1a244
   1a370:	cmp    BYTE PTR [ebp-0x8],bl
   1a373:	je     0x1a37e
   1a375:	push   DWORD PTR [ebp-0x4]
   1a378:	call   0x11d22
   1a37d:	pop    ecx
   1a37e:	push   esi
   1a37f:	push   DWORD PTR [ebp-0x14]
   1a382:	push   DWORD PTR [ebp-0xc]
   1a385:	call   0x1dd1a
   1a38a:	add    esp,0xc
   1a38d:	cmp    BYTE PTR [ebp-0x18],bl
   1a390:	je     0x1a39b
   1a392:	push   DWORD PTR [ebp-0x14]
   1a395:	call   0x11d22
   1a39a:	pop    ecx
   1a39b:	cmp    DWORD PTR [ebp-0x40],ebx
   1a39e:	je     0x1a301
   1a3a4:	lea    eax,[ebp-0x50]
   1a3a7:	push   eax
   1a3a8:	call   0x1cf32
   1a3ad:	cmp    DWORD PTR [ebp+0x10],0x1
   1a3b1:	jne    0x1a3dc
   1a3b3:	mov    eax,DWORD PTR [ebp+0x14]
   1a3b6:	mov    DWORD PTR [eax],esi
   1a3b8:	jmp    0x1a3fc
   1a3ba:	lea    eax,[ebp-0x50]
   1a3bd:	push   eax
   1a3be:	call   0x1cf32
   1a3c3:	mov    esi,DWORD PTR [ebp+0x8]
   1a3c6:	mov    BYTE PTR [esi],bl
   1a3c8:	mov    DWORD PTR [esi+0x4],ebx
   1a3cb:	cmp    BYTE PTR [ebp-0x10],bl
   1a3ce:	je     0x1a2ee
   1a3d4:	push   DWORD PTR [ebp-0xc]
   1a3d7:	jmp    0x1a2e8
   1a3dc:	lea    eax,[ebp-0x18]
   1a3df:	push   eax
   1a3e0:	lea    ecx,[ebp-0x10]
   1a3e3:	mov    BYTE PTR [ebp-0x18],bl
   1a3e6:	mov    DWORD PTR [ebp-0x14],ebx
   1a3e9:	call   0x1a244
   1a3ee:	cmp    BYTE PTR [ebp-0x18],bl
   1a3f1:	je     0x1a3fc
   1a3f3:	push   DWORD PTR [ebp-0x14]
   1a3f6:	call   0x11d22
   1a3fb:	pop    ecx
   1a3fc:	mov    eax,DWORD PTR [ebp+0x8]
   1a3ff:	mov    cl,BYTE PTR [ebp-0x10]
   1a402:	mov    BYTE PTR [eax],cl
   1a404:	mov    ecx,DWORD PTR [ebp-0xc]
   1a407:	mov    DWORD PTR [eax+0x4],ecx
   1a40a:	pop    edi
   1a40b:	pop    esi
   1a40c:	pop    ebx
   1a40d:	leave  
   1a40e:	ret    0x10
   1a411:	int3   
   1a412:	int3   
   1a413:	int3   
   1a414:	int3   
   1a415:	int3   
   1a416:	xor    eax,eax
   1a418:	push   eax
   1a419:	push   eax
   1a41a:	push   eax
   1a41b:	push   eax
   1a41c:	push   0x78880
   1a421:	call   DWORD PTR ds:0x1f434
   1a427:	test   eax,eax
   1a429:	setge  al
   1a42c:	ret    
   1a42d:	int3   
   1a42e:	int3   
   1a42f:	int3   
   1a430:	int3   
   1a431:	int3   
   1a432:	push   0x0
   1a434:	push   0x78880
   1a439:	call   DWORD PTR ds:0x1f438
   1a43f:	ret    
   1a440:	int3   
   1a441:	int3   
   1a442:	int3   
   1a443:	int3   
   1a444:	int3   
   1a445:	int3   
   1a446:	mov    edi,edi
   1a448:	push   esi
   1a449:	push   edi
   1a44a:	push   0x1
   1a44c:	xor    edi,edi
   1a44e:	push   edi
   1a44f:	mov    esi,ecx
   1a451:	call   0x14370
   1a456:	cmp    DWORD PTR ds:0x786cc,edi
   1a45c:	jne    0x1a473
   1a45e:	mov    ecx,eax
   1a460:	mov    DWORD PTR ds:0x786cc,ecx
   1a466:	mov    DWORD PTR [ecx],edi
   1a468:	mov    ecx,DWORD PTR ds:0x786cc
   1a46e:	xor    eax,eax
   1a470:	mov    DWORD PTR [ecx+0x8],edi
   1a473:	inc    DWORD PTR ds:0x788a8
   1a479:	cmp    eax,edi
   1a47b:	je     0x1a484
   1a47d:	push   eax
   1a47e:	call   0x11d22
   1a483:	pop    ecx
   1a484:	push   edi
   1a485:	push   DWORD PTR ds:0x786cc
   1a48b:	mov    ecx,esi
   1a48d:	call   0x14370
   1a492:	mov    DWORD PTR [esi+0xc],edi
   1a495:	mov    DWORD PTR [esi+0x4],eax
   1a498:	mov    DWORD PTR [eax],eax
   1a49a:	mov    esi,DWORD PTR [esi+0x4]
   1a49d:	pop    edi
   1a49e:	mov    DWORD PTR [esi+0x8],esi
   1a4a1:	pop    esi
   1a4a2:	ret    
   1a4a3:	int3   
   1a4a4:	int3   
   1a4a5:	int3   
   1a4a6:	int3   
   1a4a7:	int3   
   1a4a8:	mov    edi,edi
   1a4aa:	push   ebx
   1a4ab:	push   esi
   1a4ac:	xor    ebx,ebx
   1a4ae:	push   ebx
   1a4af:	push   0x78880
   1a4b4:	call   DWORD PTR ds:0x1f43c
   1a4ba:	push   0x10
   1a4bc:	call   0x11cec
   1a4c1:	mov    esi,eax
   1a4c3:	pop    ecx
   1a4c4:	cmp    esi,ebx
   1a4c6:	je     0x1a4da
   1a4c8:	mov    ecx,esi
   1a4ca:	mov    BYTE PTR [esi+0x8],bl
   1a4cd:	call   0x1a446
   1a4d2:	mov    DWORD PTR ds:0x788a0,esi
   1a4d8:	jmp    0x1a4e0
   1a4da:	mov    DWORD PTR ds:0x788a0,ebx
   1a4e0:	push   0x10
   1a4e2:	call   0x11cec
   1a4e7:	mov    esi,eax
   1a4e9:	pop    ecx
   1a4ea:	cmp    esi,ebx
   1a4ec:	je     0x1a500
   1a4ee:	mov    ecx,esi
   1a4f0:	mov    BYTE PTR [esi+0x8],bl
   1a4f3:	call   0x147d8
   1a4f8:	mov    DWORD PTR ds:0x788a4,esi
   1a4fe:	jmp    0x1a506
   1a500:	mov    DWORD PTR ds:0x788a4,ebx
   1a506:	pop    esi
   1a507:	pop    ebx
   1a508:	ret    
   1a509:	int3   
   1a50a:	int3   
   1a50b:	int3   
   1a50c:	int3   
   1a50d:	int3   
   1a50e:	mov    edi,edi
   1a510:	push   ebp
   1a511:	mov    ebp,esp
   1a513:	mov    eax,ecx
   1a515:	mov    ecx,DWORD PTR [ebp+0xc]
   1a518:	mov    edx,DWORD PTR [ecx]
   1a51a:	mov    DWORD PTR [eax],edx
   1a51c:	mov    edx,DWORD PTR [ecx]
   1a51e:	add    edx,0x1000
   1a524:	mov    DWORD PTR [eax+0x4],edx
   1a527:	mov    edx,DWORD PTR [ebp+0x8]
   1a52a:	mov    DWORD PTR [eax+0x8],edx
   1a52d:	mov    DWORD PTR [eax+0xc],ecx
   1a530:	pop    ebp
   1a531:	ret    0x8
   1a534:	int3   
   1a535:	int3   
   1a536:	int3   
   1a537:	int3   
   1a538:	int3   
   1a539:	int3   
   1a53a:	mov    edi,edi
   1a53c:	push   ebp
   1a53d:	mov    ebp,esp
   1a53f:	mov    eax,DWORD PTR [ebp+0x8]
   1a542:	mov    edx,DWORD PTR ds:0x788dc
   1a548:	jmp    0x1a54c
   1a54a:	mov    eax,ecx
   1a54c:	mov    ecx,DWORD PTR [eax+0x8]
   1a54f:	cmp    ecx,edx
   1a551:	jne    0x1a54a
   1a553:	pop    ebp
   1a554:	ret    0x4
   1a557:	int3   
   1a558:	int3   
   1a559:	int3   
   1a55a:	int3   
   1a55b:	int3   
   1a55c:	mov    edi,edi
   1a55e:	push   ebp
   1a55f:	mov    ebp,esp
   1a561:	mov    eax,DWORD PTR [ebp+0x8]
   1a564:	mov    edx,DWORD PTR ds:0x788dc
   1a56a:	jmp    0x1a56e
   1a56c:	mov    eax,ecx
   1a56e:	mov    ecx,DWORD PTR [eax]
   1a570:	cmp    ecx,edx
   1a572:	jne    0x1a56c
   1a574:	pop    ebp
   1a575:	ret    0x4
   1a578:	int3   
   1a579:	int3   
   1a57a:	int3   
   1a57b:	int3   
   1a57c:	int3   
   1a57d:	int3   
   1a57e:	mov    edi,edi
   1a580:	push   esi
   1a581:	mov    esi,ecx
   1a583:	mov    ecx,DWORD PTR [esi]
   1a585:	mov    eax,DWORD PTR [ecx+0x8]
   1a588:	cmp    eax,DWORD PTR ds:0x788dc
   1a58e:	je     0x1a59c
   1a590:	push   eax
   1a591:	call   0x1a55c
   1a596:	jmp    0x1a5ab
   1a598:	mov    DWORD PTR [esi],eax
   1a59a:	mov    ecx,eax
   1a59c:	mov    eax,DWORD PTR [ecx+0x4]
   1a59f:	cmp    ecx,DWORD PTR [eax+0x8]
   1a5a2:	je     0x1a598
   1a5a4:	mov    ecx,DWORD PTR [esi]
   1a5a6:	cmp    DWORD PTR [ecx+0x8],eax
   1a5a9:	je     0x1a5ad
   1a5ab:	mov    DWORD PTR [esi],eax
   1a5ad:	pop    esi
   1a5ae:	ret    
   1a5af:	int3   
   1a5b0:	int3   
   1a5b1:	int3   
   1a5b2:	int3   
   1a5b3:	int3   
   1a5b4:	mov    edi,edi
   1a5b6:	push   ebp
   1a5b7:	mov    ebp,esp
   1a5b9:	mov    eax,DWORD PTR [ebp+0x8]
   1a5bc:	test   eax,eax
   1a5be:	je     0x1a5c7
   1a5c0:	mov    ecx,DWORD PTR [ebp+0xc]
   1a5c3:	mov    ecx,DWORD PTR [ecx]
   1a5c5:	mov    DWORD PTR [eax],ecx
   1a5c7:	pop    ebp
   1a5c8:	ret    0x8
   1a5cb:	int3   
   1a5cc:	int3   
   1a5cd:	int3   
   1a5ce:	int3   
   1a5cf:	int3   
   1a5d0:	mov    edi,edi
   1a5d2:	push   ebp
   1a5d3:	mov    ebp,esp
   1a5d5:	mov    eax,DWORD PTR [ebp+0x8]
   1a5d8:	jmp    0x1a5e8
   1a5da:	mov    ecx,DWORD PTR [eax]
   1a5dc:	mov    edx,DWORD PTR [ebp+0x10]
   1a5df:	add    DWORD PTR [ebp+0x10],0x4
   1a5e3:	mov    DWORD PTR [edx],ecx
   1a5e5:	add    eax,0x4
   1a5e8:	cmp    eax,DWORD PTR [ebp+0xc]
   1a5eb:	jne    0x1a5da
   1a5ed:	mov    eax,DWORD PTR [ebp+0x10]
   1a5f0:	pop    ebp
   1a5f1:	ret    0xc
   1a5f4:	int3   
   1a5f5:	int3   
   1a5f6:	int3   
   1a5f7:	int3   
   1a5f8:	int3   
   1a5f9:	int3   
   1a5fa:	mov    edi,edi
   1a5fc:	push   ebp
   1a5fd:	mov    ebp,esp
   1a5ff:	mov    eax,DWORD PTR [ebp+0x8]
   1a602:	test   eax,eax
   1a604:	jge    0x1a608
   1a606:	xor    eax,eax
   1a608:	shl    eax,0x2
   1a60b:	push   eax
   1a60c:	call   0x11cec
   1a611:	pop    ecx
   1a612:	pop    ebp
   1a613:	ret    0x8
   1a616:	int3   
   1a617:	int3   
   1a618:	int3   
   1a619:	int3   
   1a61a:	int3   
   1a61b:	int3   
   1a61c:	mov    edi,edi
   1a61e:	push   ebp
   1a61f:	mov    ebp,esp
   1a621:	push   esi
   1a622:	mov    esi,ecx
   1a624:	push   DWORD PTR [esi]
   1a626:	call   0x11d22
   1a62b:	test   BYTE PTR [ebp+0x8],0x1
   1a62f:	pop    ecx
   1a630:	je     0x1a639
   1a632:	push   esi
   1a633:	call   0x11d22
   1a638:	pop    ecx
   1a639:	mov    eax,esi
   1a63b:	pop    esi
   1a63c:	pop    ebp
   1a63d:	ret    0x4
   1a640:	int3   
   1a641:	int3   
   1a642:	int3   
   1a643:	int3   
   1a644:	int3   
   1a645:	int3   
   1a646:	mov    eax,ecx
   1a648:	add    DWORD PTR [eax+0x8],0x4
   1a64c:	mov    ecx,DWORD PTR [eax+0x8]
   1a64f:	cmp    ecx,DWORD PTR [eax+0x4]
   1a652:	jne    0x1a66d
   1a654:	add    DWORD PTR [eax+0xc],0x4
   1a658:	mov    ecx,DWORD PTR [eax+0xc]
   1a65b:	mov    ecx,DWORD PTR [ecx]
   1a65d:	mov    DWORD PTR [eax],ecx
   1a65f:	add    ecx,0x1000
   1a665:	mov    DWORD PTR [eax+0x4],ecx
   1a668:	mov    ecx,DWORD PTR [eax]
   1a66a:	mov    DWORD PTR [eax+0x8],ecx
   1a66d:	ret    
   1a66e:	int3   
   1a66f:	int3   
   1a670:	int3   
   1a671:	int3   
   1a672:	int3   
   1a673:	int3   
   1a674:	mov    edi,edi
   1a676:	push   ebp
   1a677:	mov    ebp,esp
   1a679:	mov    eax,ds:0x788d4
   1a67e:	sub    esp,0x20
   1a681:	push   ebx
   1a682:	push   esi
   1a683:	push   edi
   1a684:	lea    esi,[eax+0x4]
   1a687:	lea    edi,[ebp-0x10]
   1a68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a68b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a68c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a68d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a68e:	lea    ebx,[eax+0x14]
   1a691:	jmp    0x1a6af
   1a693:	mov    eax,DWORD PTR [eax]
   1a695:	mov    ecx,DWORD PTR [eax+0x8]
   1a698:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a69b:	jne    0x1a6a7
   1a69d:	cmp    BYTE PTR [eax+0x24],0x0
   1a6a1:	jne    0x1a6c0
   1a6a3:	mov    BYTE PTR [eax+0x24],0x1
   1a6a7:	lea    ecx,[ebp-0x10]
   1a6aa:	call   0x1a646
   1a6af:	mov    eax,DWORD PTR [ebp-0x8]
   1a6b2:	lea    edi,[ebp-0x20]
   1a6b5:	mov    esi,ebx
   1a6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6bb:	cmp    eax,DWORD PTR [ebp-0x18]
   1a6be:	jne    0x1a693
   1a6c0:	pop    edi
   1a6c1:	pop    esi
   1a6c2:	pop    ebx
   1a6c3:	leave  
   1a6c4:	ret    0x4
   1a6c7:	int3   
   1a6c8:	int3   
   1a6c9:	int3   
   1a6ca:	int3   
   1a6cb:	int3   
   1a6cc:	mov    eax,ecx
   1a6ce:	xor    ecx,ecx
   1a6d0:	mov    DWORD PTR [eax+0x4],ecx
   1a6d3:	mov    DWORD PTR [eax+0x8],ecx
   1a6d6:	mov    DWORD PTR [eax+0xc],ecx
   1a6d9:	mov    DWORD PTR [eax+0x10],ecx
   1a6dc:	mov    DWORD PTR [eax+0x14],ecx
   1a6df:	mov    DWORD PTR [eax+0x18],ecx
   1a6e2:	mov    DWORD PTR [eax+0x1c],ecx
   1a6e5:	mov    DWORD PTR [eax+0x20],ecx
   1a6e8:	mov    DWORD PTR [eax+0x24],ecx
   1a6eb:	mov    DWORD PTR [eax+0x28],ecx
   1a6ee:	mov    DWORD PTR [eax+0x2c],ecx
   1a6f1:	ret    0x4
   1a6f4:	int3   
   1a6f5:	int3   
   1a6f6:	int3   
   1a6f7:	int3   
   1a6f8:	int3   
   1a6f9:	int3   
   1a6fa:	mov    edi,edi
   1a6fc:	push   ebp
   1a6fd:	mov    ebp,esp
   1a6ff:	sub    esp,0x10
   1a702:	push   esi
   1a703:	push   edi
   1a704:	lea    esi,[ecx+0x4]
   1a707:	lea    edi,[ebp-0x10]
   1a70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a70e:	mov    eax,DWORD PTR [ebp-0x8]
   1a711:	pop    edi
   1a712:	pop    esi
   1a713:	leave  
   1a714:	ret    
   1a715:	int3   
   1a716:	int3   
   1a717:	int3   
   1a718:	int3   
   1a719:	int3   
   1a71a:	mov    edi,edi
   1a71c:	push   ebp
   1a71d:	mov    ebp,esp
   1a71f:	mov    edx,DWORD PTR [ebp+0x8]
   1a722:	mov    eax,DWORD PTR [edx+0x8]
   1a725:	push   esi
   1a726:	mov    esi,DWORD PTR [eax]
   1a728:	mov    DWORD PTR [edx+0x8],esi
   1a72b:	mov    esi,DWORD PTR [eax]
   1a72d:	cmp    esi,DWORD PTR ds:0x788dc
   1a733:	je     0x1a738
   1a735:	mov    DWORD PTR [esi+0x4],edx
   1a738:	mov    esi,DWORD PTR [edx+0x4]
   1a73b:	mov    DWORD PTR [eax+0x4],esi
   1a73e:	mov    ecx,DWORD PTR [ecx+0x4]
   1a741:	pop    esi
   1a742:	cmp    edx,DWORD PTR [ecx+0x4]
   1a745:	jne    0x1a74c
   1a747:	mov    DWORD PTR [ecx+0x4],eax
   1a74a:	jmp    0x1a75a
   1a74c:	mov    ecx,DWORD PTR [edx+0x4]
   1a74f:	cmp    edx,DWORD PTR [ecx]
   1a751:	jne    0x1a757
   1a753:	mov    DWORD PTR [ecx],eax
   1a755:	jmp    0x1a75a
   1a757:	mov    DWORD PTR [ecx+0x8],eax
   1a75a:	mov    DWORD PTR [eax],edx
   1a75c:	mov    DWORD PTR [edx+0x4],eax
   1a75f:	pop    ebp
   1a760:	ret    0x4
   1a763:	int3   
   1a764:	int3   
   1a765:	int3   
   1a766:	int3   
   1a767:	int3   
   1a768:	mov    edi,edi
   1a76a:	push   ebp
   1a76b:	mov    ebp,esp
   1a76d:	mov    edx,DWORD PTR [ebp+0x8]
   1a770:	mov    eax,DWORD PTR [edx]
   1a772:	push   esi
   1a773:	mov    esi,DWORD PTR [eax+0x8]
   1a776:	mov    DWORD PTR [edx],esi
   1a778:	mov    esi,DWORD PTR [eax+0x8]
   1a77b:	cmp    esi,DWORD PTR ds:0x788dc
   1a781:	je     0x1a786
   1a783:	mov    DWORD PTR [esi+0x4],edx
   1a786:	mov    esi,DWORD PTR [edx+0x4]
   1a789:	mov    DWORD PTR [eax+0x4],esi
   1a78c:	mov    ecx,DWORD PTR [ecx+0x4]
   1a78f:	pop    esi
   1a790:	cmp    edx,DWORD PTR [ecx+0x4]
   1a793:	jne    0x1a79a
   1a795:	mov    DWORD PTR [ecx+0x4],eax
   1a798:	jmp    0x1a7a9
   1a79a:	mov    ecx,DWORD PTR [edx+0x4]
   1a79d:	cmp    edx,DWORD PTR [ecx+0x8]
   1a7a0:	jne    0x1a7a7
   1a7a2:	mov    DWORD PTR [ecx+0x8],eax
   1a7a5:	jmp    0x1a7a9
   1a7a7:	mov    DWORD PTR [ecx],eax
   1a7a9:	mov    DWORD PTR [eax+0x8],edx
   1a7ac:	mov    DWORD PTR [edx+0x4],eax
   1a7af:	pop    ebp
   1a7b0:	ret    0x4
   1a7b3:	int3   
   1a7b4:	int3   
   1a7b5:	int3   
   1a7b6:	int3   
   1a7b7:	int3   
   1a7b8:	mov    edi,edi
   1a7ba:	push   esi
   1a7bb:	mov    esi,ecx
   1a7bd:	mov    ecx,DWORD PTR [esi]
   1a7bf:	cmp    DWORD PTR [ecx+0x14],0x0
   1a7c3:	jne    0x1a7d2
   1a7c5:	mov    eax,DWORD PTR [ecx+0x4]
   1a7c8:	cmp    DWORD PTR [eax+0x4],ecx
   1a7cb:	jne    0x1a7d2
   1a7cd:	mov    eax,DWORD PTR [ecx+0x8]
   1a7d0:	jmp    0x1a7ef
   1a7d2:	mov    eax,DWORD PTR [ecx]
   1a7d4:	cmp    eax,DWORD PTR ds:0x788dc
   1a7da:	je     0x1a7e8
   1a7dc:	push   eax
   1a7dd:	call   0x1a53a
   1a7e2:	jmp    0x1a7ef
   1a7e4:	mov    DWORD PTR [esi],eax
   1a7e6:	mov    ecx,eax
   1a7e8:	mov    eax,DWORD PTR [ecx+0x4]
   1a7eb:	cmp    ecx,DWORD PTR [eax]
   1a7ed:	je     0x1a7e4
   1a7ef:	mov    DWORD PTR [esi],eax
   1a7f1:	pop    esi
   1a7f2:	ret    
   1a7f3:	int3   
   1a7f4:	int3   
   1a7f5:	int3   
   1a7f6:	int3   
   1a7f7:	int3   
   1a7f8:	mov    edi,edi
   1a7fa:	push   ebp
   1a7fb:	mov    ebp,esp
   1a7fd:	mov    eax,DWORD PTR [ecx+0x4]
   1a800:	push   esi
   1a801:	mov    esi,DWORD PTR [eax+0x4]
   1a804:	push   edi
   1a805:	mov    edi,eax
   1a807:	jmp    0x1a822
   1a809:	push   DWORD PTR [ebp+0x8]
   1a80c:	lea    eax,[esi+0xc]
   1a80f:	push   eax
   1a810:	call   0x19a08
   1a815:	test   al,al
   1a817:	je     0x1a81e
   1a819:	mov    esi,DWORD PTR [esi+0x8]
   1a81c:	jmp    0x1a822
   1a81e:	mov    edi,esi
   1a820:	mov    esi,DWORD PTR [esi]
   1a822:	cmp    esi,DWORD PTR ds:0x788dc
   1a828:	jne    0x1a809
   1a82a:	mov    eax,edi
   1a82c:	pop    edi
   1a82d:	pop    esi
   1a82e:	pop    ebp
   1a82f:	ret    0x4
   1a832:	int3   
   1a833:	int3   
   1a834:	int3   
   1a835:	int3   
   1a836:	int3   
   1a837:	int3   
   1a838:	mov    edi,edi
   1a83a:	push   ebp
   1a83b:	mov    ebp,esp
   1a83d:	mov    eax,DWORD PTR [ecx+0x4]
   1a840:	push   esi
   1a841:	mov    esi,DWORD PTR [eax+0x4]
   1a844:	push   edi
   1a845:	mov    edi,eax
   1a847:	jmp    0x1a862
   1a849:	lea    eax,[esi+0xc]
   1a84c:	push   eax
   1a84d:	push   DWORD PTR [ebp+0x8]
   1a850:	call   0x19a08
   1a855:	test   al,al
   1a857:	je     0x1a85f
   1a859:	mov    edi,esi
   1a85b:	mov    esi,DWORD PTR [esi]
   1a85d:	jmp    0x1a862
   1a85f:	mov    esi,DWORD PTR [esi+0x8]
   1a862:	cmp    esi,DWORD PTR ds:0x788dc
   1a868:	jne    0x1a849
   1a86a:	mov    eax,edi
   1a86c:	pop    edi
   1a86d:	pop    esi
   1a86e:	pop    ebp
   1a86f:	ret    0x4
   1a872:	int3   
   1a873:	int3   
   1a874:	int3   
   1a875:	int3   
   1a876:	int3   
   1a877:	int3   
   1a878:	mov    edi,edi
   1a87a:	push   ebp
   1a87b:	mov    ebp,esp
   1a87d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a880:	test   ecx,ecx
   1a882:	je     0x1a88c
   1a884:	push   DWORD PTR [ebp+0xc]
   1a887:	call   0x1361c
   1a88c:	pop    ebp
   1a88d:	ret    0x8
   1a890:	int3   
   1a891:	int3   
   1a892:	int3   
   1a893:	int3   
   1a894:	int3   
   1a895:	int3   
   1a896:	mov    edi,edi
   1a898:	push   ebp
   1a899:	mov    ebp,esp
   1a89b:	mov    ecx,DWORD PTR [ebp+0x8]
   1a89e:	push   0x0
   1a8a0:	call   0x1a61c
   1a8a5:	pop    ebp
   1a8a6:	ret    0x4
   1a8a9:	int3   
   1a8aa:	int3   
   1a8ab:	int3   
   1a8ac:	int3   
   1a8ad:	int3   
   1a8ae:	mov    edi,edi
   1a8b0:	push   ebp
   1a8b1:	mov    ebp,esp
   1a8b3:	mov    eax,DWORD PTR [ebp+0xc]
   1a8b6:	mov    ecx,DWORD PTR [eax+0x34]
   1a8b9:	lea    eax,[ecx+eax*1+0x40]
   1a8bd:	mov    ecx,DWORD PTR [ebp+0x8]
   1a8c0:	push   0xffffffff
   1a8c2:	push   eax
   1a8c3:	call   0x135fc
   1a8c8:	mov    eax,DWORD PTR [ebp+0x8]
   1a8cb:	pop    ebp
   1a8cc:	ret    0x8
   1a8cf:	int3   
   1a8d0:	int3   
   1a8d1:	int3   
   1a8d2:	int3   
   1a8d3:	int3   
   1a8d4:	mov    edi,edi
   1a8d6:	push   ebp
   1a8d7:	mov    ebp,esp
   1a8d9:	mov    eax,DWORD PTR [ebp+0xc]
   1a8dc:	mov    ecx,DWORD PTR [eax+0x38]
   1a8df:	lea    eax,[ecx+eax*1+0x40]
   1a8e3:	mov    ecx,DWORD PTR [ebp+0x8]
   1a8e6:	push   0xffffffff
   1a8e8:	push   eax
   1a8e9:	call   0x135fc
   1a8ee:	mov    eax,DWORD PTR [ebp+0x8]
   1a8f1:	pop    ebp
   1a8f2:	ret    0x8
   1a8f5:	int3   
   1a8f6:	int3   
   1a8f7:	int3   
   1a8f8:	int3   
   1a8f9:	int3   
   1a8fa:	mov    edi,edi
   1a8fc:	push   ebp
   1a8fd:	mov    ebp,esp
   1a8ff:	mov    eax,DWORD PTR [ebp+0xc]
   1a902:	mov    ecx,DWORD PTR [eax+0x3c]
   1a905:	lea    eax,[ecx+eax*1+0x40]
   1a909:	mov    ecx,DWORD PTR [ebp+0x8]
   1a90c:	push   0xffffffff
   1a90e:	push   eax
   1a90f:	call   0x135fc
   1a914:	mov    eax,DWORD PTR [ebp+0x8]
   1a917:	pop    ebp
   1a918:	ret    0x8
   1a91b:	int3   
   1a91c:	int3   
   1a91d:	int3   
   1a91e:	int3   
   1a91f:	int3   
   1a920:	mov    edi,edi
   1a922:	push   ebp
   1a923:	mov    ebp,esp
   1a925:	sub    esp,0x1c
   1a928:	mov    eax,ds:0x788d4
   1a92d:	and    DWORD PTR [ebp-0x4],0x0
   1a931:	push   ebx
   1a932:	mov    ebx,DWORD PTR [ebp+0x8]
   1a935:	push   esi
   1a936:	push   edi
   1a937:	lea    esi,[eax+0x4]
   1a93a:	mov    edi,ebx
   1a93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a940:	lea    esi,[eax+0x14]
   1a943:	jmp    0x1a9a0
   1a945:	push   DWORD PTR [ebp+0xc]
   1a948:	mov    eax,DWORD PTR [ebx+0x8]
   1a94b:	push   DWORD PTR [eax]
   1a94d:	or     DWORD PTR [ebp-0x4],0x1
   1a951:	lea    eax,[ebp-0xc]
   1a954:	push   eax
   1a955:	call   0x1a8fa
   1a95a:	push   eax
   1a95b:	call   0x19a18
   1a960:	test   al,al
   1a962:	je     0x1a973
   1a964:	mov    eax,DWORD PTR [ebx+0x8]
   1a967:	mov    eax,DWORD PTR [eax]
   1a969:	cmp    BYTE PTR [eax+0x1c],0x0
   1a96d:	mov    BYTE PTR [ebp+0xb],0x1
   1a971:	jne    0x1a977
   1a973:	mov    BYTE PTR [ebp+0xb],0x0
   1a977:	test   BYTE PTR [ebp-0x4],0x1
   1a97b:	je     0x1a98a
   1a97d:	push   DWORD PTR [ebp-0xc]
   1a980:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a984:	call   0x11d22
   1a989:	pop    ecx
   1a98a:	cmp    BYTE PTR [ebp+0xb],0x0
   1a98e:	jne    0x1a9af
   1a990:	mov    ecx,ebx
   1a992:	call   0x1a646
   1a997:	mov    esi,DWORD PTR ds:0x788d4
   1a99d:	add    esi,0x14
   1a9a0:	mov    eax,DWORD PTR [ebx+0x8]
   1a9a3:	lea    edi,[ebp-0x1c]
   1a9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9aa:	cmp    eax,DWORD PTR [ebp-0x14]
   1a9ad:	jne    0x1a945
   1a9af:	pop    edi
   1a9b0:	pop    esi
   1a9b1:	mov    eax,ebx
   1a9b3:	pop    ebx
   1a9b4:	leave  
   1a9b5:	ret    0x8
   1a9b8:	int3   
   1a9b9:	int3   
   1a9ba:	int3   
   1a9bb:	int3   
   1a9bc:	int3   
   1a9bd:	int3   
   1a9be:	mov    edi,edi
   1a9c0:	push   ebp
   1a9c1:	mov    ebp,esp
   1a9c3:	sub    esp,0x28
   1a9c6:	mov    eax,DWORD PTR [ebp+0x8]
   1a9c9:	push   ebx
   1a9ca:	push   esi
   1a9cb:	push   edi
   1a9cc:	lea    esi,[eax+0x4]
   1a9cf:	mov    DWORD PTR [ebp-0x8],esi
   1a9d2:	lea    edi,[ebp-0x18]
   1a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9d7:	and    DWORD PTR [ebp-0x4],0x0
   1a9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9dd:	lea    ecx,[eax+0x14]
   1a9e0:	mov    eax,DWORD PTR [ebp-0x10]
   1a9e3:	mov    esi,ecx
   1a9e5:	lea    edi,[ebp-0x28]
   1a9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9eb:	push   0x4
   1a9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ee:	pop    ebx
   1a9ef:	mov    DWORD PTR [ebp+0x8],ecx
   1a9f2:	cmp    eax,DWORD PTR [ebp-0x20]
   1a9f5:	je     0x1aa17
   1a9f7:	mov    esi,ecx
   1a9f9:	lea    edi,[ebp-0x28]
   1a9fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa00:	mov    eax,DWORD PTR [eax]
   1aa02:	add    ebx,DWORD PTR [eax]
   1aa04:	inc    DWORD PTR [ebp-0x4]
   1aa07:	lea    ecx,[ebp-0x18]
   1aa0a:	call   0x1a646
   1aa0f:	mov    eax,DWORD PTR [ebp-0x10]
   1aa12:	cmp    eax,DWORD PTR [ebp-0x20]
   1aa15:	jne    0x1aa00
   1aa17:	mov    eax,DWORD PTR [ebp+0xc]
   1aa1a:	cmp    ebx,DWORD PTR [eax+0x4]
   1aa1d:	mov    DWORD PTR [eax+0x4],ebx
   1aa20:	jbe    0x1aa2a
   1aa22:	mov    DWORD PTR [eax],0x1
   1aa28:	jmp    0x1aa70
   1aa2a:	and    DWORD PTR [eax],0x0
   1aa2d:	mov    esi,DWORD PTR [ebp-0x8]
   1aa30:	lea    ebx,[eax+0x8]
   1aa33:	mov    eax,DWORD PTR [ebp-0x4]
   1aa36:	mov    DWORD PTR [ebx],eax
   1aa38:	lea    edi,[ebp-0x28]
   1aa3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa3e:	add    ebx,0x4
   1aa41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa42:	jmp    0x1aa5e
   1aa44:	mov    eax,DWORD PTR [esi]
   1aa46:	push   DWORD PTR [eax]
   1aa48:	push   eax
   1aa49:	push   ebx
   1aa4a:	call   0x1dd1a
   1aa4f:	mov    eax,DWORD PTR [esi]
   1aa51:	add    ebx,DWORD PTR [eax]
   1aa53:	add    esp,0xc
   1aa56:	lea    ecx,[ebp-0x28]
   1aa59:	call   0x1a646
   1aa5e:	mov    esi,DWORD PTR [ebp+0x8]
   1aa61:	lea    edi,[ebp-0x18]
   1aa64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa68:	mov    esi,DWORD PTR [ebp-0x20]
   1aa6b:	cmp    esi,DWORD PTR [ebp-0x10]
   1aa6e:	jne    0x1aa44
   1aa70:	pop    edi
   1aa71:	pop    esi
   1aa72:	pop    ebx
   1aa73:	leave  
   1aa74:	ret    0x8
   1aa77:	int3   
   1aa78:	int3   
   1aa79:	int3   
   1aa7a:	int3   
   1aa7b:	int3   
   1aa7c:	push   0x8
   1aa7e:	push   0x777e0
   1aa83:	call   0x1dd40
   1aa88:	xor    esi,esi
   1aa8a:	push   esi
   1aa8b:	push   esi
   1aa8c:	push   esi
   1aa8d:	push   esi
   1aa8e:	push   0x788ac
   1aa93:	call   DWORD PTR ds:0x1f434
   1aa99:	cmp    eax,esi
   1aa9b:	jl     0x1aadc
   1aa9d:	mov    DWORD PTR [ebp-0x4],esi
   1aaa0:	push   DWORD PTR [ebp+0x8]
   1aaa3:	push   DWORD PTR ds:0x788d4
   1aaa9:	call   0x1a9be
   1aaae:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1aab5:	jmp    0x1aad0
   1aab7:	xor    eax,eax
   1aab9:	inc    eax
   1aaba:	ret    
   1aabb:	mov    esp,DWORD PTR [ebp-0x18]
   1aabe:	mov    eax,DWORD PTR [ebp+0x8]
   1aac1:	mov    DWORD PTR [eax],0x2
   1aac7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1aace:	xor    esi,esi
   1aad0:	push   esi
   1aad1:	push   0x788ac
   1aad6:	call   DWORD PTR ds:0x1f438
   1aadc:	call   0x1dd85
   1aae1:	ret    0x4
   1aae4:	int3   
   1aae5:	int3   
   1aae6:	int3   
   1aae7:	int3   
   1aae8:	int3   
   1aae9:	int3   
   1aaea:	mov    edi,edi
   1aaec:	push   ebp
   1aaed:	mov    ebp,esp
   1aaef:	sub    esp,0x10
   1aaf2:	push   ebx
   1aaf3:	mov    ebx,ecx
   1aaf5:	mov    eax,DWORD PTR [ebx+0x10]
   1aaf8:	push   esi
   1aaf9:	lea    ecx,[eax+0x4]
   1aafc:	push   edi
   1aafd:	mov    DWORD PTR [ebx+0x10],ecx
   1ab00:	push   DWORD PTR [eax]
   1ab02:	call   0x11d22
   1ab07:	xor    eax,eax
   1ab09:	pop    ecx
   1ab0a:	cmp    DWORD PTR [ebx+0x2c],eax
   1ab0d:	jne    0x1ab3a
   1ab0f:	mov    DWORD PTR [ebp-0x10],eax
   1ab12:	mov    DWORD PTR [ebp-0xc],eax
   1ab15:	mov    DWORD PTR [ebp-0x8],eax
   1ab18:	mov    DWORD PTR [ebp-0x4],eax
   1ab1b:	lea    edi,[ebx+0x4]
   1ab1e:	lea    esi,[ebp-0x10]
   1ab21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab23:	push   DWORD PTR [ebx+0x24]
   1ab26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab28:	lea    edi,[ebx+0x14]
   1ab2b:	lea    esi,[ebp-0x10]
   1ab2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab32:	call   0x11d22
   1ab37:	pop    ecx
   1ab38:	jmp    0x1ab51
   1ab3a:	mov    eax,DWORD PTR [ebx+0x10]
   1ab3d:	push   eax
   1ab3e:	push   DWORD PTR [eax]
   1ab40:	lea    ecx,[ebp-0x10]
   1ab43:	call   0x1a50e
   1ab48:	lea    edi,[ebx+0x4]
   1ab4b:	mov    esi,eax
   1ab4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab51:	pop    edi
   1ab52:	pop    esi
   1ab53:	pop    ebx
   1ab54:	leave  
   1ab55:	ret    
   1ab56:	int3   
   1ab57:	int3   
   1ab58:	int3   
   1ab59:	int3   
   1ab5a:	int3   
   1ab5b:	int3   
   1ab5c:	mov    edi,edi
   1ab5e:	push   ebp
   1ab5f:	mov    ebp,esp
   1ab61:	mov    eax,DWORD PTR [ebp+0xc]
   1ab64:	push   esi
   1ab65:	mov    esi,ecx
   1ab67:	mov    ecx,DWORD PTR [eax]
   1ab69:	mov    DWORD PTR [ebp+0xc],ecx
   1ab6c:	mov    ecx,DWORD PTR [eax+0x4]
   1ab6f:	mov    edx,DWORD PTR [eax]
   1ab71:	mov    DWORD PTR [ecx],edx
   1ab73:	mov    ecx,DWORD PTR [eax]
   1ab75:	mov    edx,DWORD PTR [eax+0x4]
   1ab78:	push   eax
   1ab79:	mov    DWORD PTR [ecx+0x4],edx
   1ab7c:	call   0x11d22
   1ab81:	mov    eax,DWORD PTR [ebp+0x8]
   1ab84:	dec    DWORD PTR [esi+0x8]
   1ab87:	pop    ecx
   1ab88:	mov    ecx,DWORD PTR [ebp+0xc]
   1ab8b:	mov    DWORD PTR [eax],ecx
   1ab8d:	pop    esi
   1ab8e:	pop    ebp
   1ab8f:	ret    0x8
   1ab92:	int3   
   1ab93:	int3   
   1ab94:	int3   
   1ab95:	int3   
   1ab96:	int3   
   1ab97:	int3   
   1ab98:	mov    edi,edi
   1ab9a:	push   ebp
   1ab9b:	mov    ebp,esp
   1ab9d:	push   ecx
   1ab9e:	push   esi
   1ab9f:	mov    esi,ecx
   1aba1:	jmp    0x1abb6
   1aba3:	mov    eax,ecx
   1aba5:	mov    ecx,DWORD PTR [ecx]
   1aba7:	push   eax
   1aba8:	lea    eax,[ebp-0x4]
   1abab:	mov    DWORD PTR [ebp+0xc],ecx
   1abae:	push   eax
   1abaf:	mov    ecx,esi
   1abb1:	call   0x1ab5c
   1abb6:	mov    ecx,DWORD PTR [ebp+0xc]
   1abb9:	cmp    ecx,DWORD PTR [ebp+0x10]
   1abbc:	jne    0x1aba3
   1abbe:	mov    eax,DWORD PTR [ebp+0x8]
   1abc1:	mov    DWORD PTR [eax],ecx
   1abc3:	pop    esi
   1abc4:	leave  
   1abc5:	ret    0xc
   1abc8:	int3   
   1abc9:	int3   
   1abca:	int3   
   1abcb:	int3   
   1abcc:	int3   
   1abcd:	int3   
   1abce:	mov    edi,edi
   1abd0:	push   ebp
   1abd1:	mov    ebp,esp
   1abd3:	push   0x0
   1abd5:	push   0xc
   1abd7:	call   0x133de
   1abdc:	mov    ecx,DWORD PTR [ebp+0x8]
   1abdf:	test   ecx,ecx
   1abe1:	jne    0x1abe5
   1abe3:	mov    ecx,eax
   1abe5:	mov    DWORD PTR [eax],ecx
   1abe7:	mov    ecx,DWORD PTR [ebp+0xc]
   1abea:	test   ecx,ecx
   1abec:	jne    0x1abf0
   1abee:	mov    ecx,eax
   1abf0:	mov    DWORD PTR [eax+0x4],ecx
   1abf3:	pop    ebp
   1abf4:	ret    0x8
   1abf7:	int3   
   1abf8:	int3   
   1abf9:	int3   
   1abfa:	int3   
   1abfb:	int3   
   1abfc:	mov    edi,edi
   1abfe:	push   esi
   1abff:	mov    esi,ecx
   1ac01:	mov    eax,DWORD PTR [esi+0x28]
   1ac04:	shl    eax,0x2
   1ac07:	push   0x0
   1ac09:	push   eax
   1ac0a:	call   0x133de
   1ac0f:	mov    DWORD PTR [esi+0x24],eax
   1ac12:	pop    esi
   1ac13:	ret    
   1ac14:	int3   
   1ac15:	int3   
   1ac16:	int3   
   1ac17:	int3   
   1ac18:	int3   
   1ac19:	int3   
   1ac1a:	mov    edi,edi
   1ac1c:	push   ebp
   1ac1d:	mov    ebp,esp
   1ac1f:	push   ebx
   1ac20:	push   esi
   1ac21:	push   edi
   1ac22:	mov    edi,DWORD PTR [ebp+0x8]
   1ac25:	mov    eax,0xfffffff
   1ac2a:	mov    esi,ecx
   1ac2c:	cmp    edi,eax
   1ac2e:	jbe    0x1ac32
   1ac30:	mov    edi,eax
   1ac32:	mov    eax,edi
   1ac34:	push   0x0
   1ac36:	shl    eax,0x2
   1ac39:	push   eax
   1ac3a:	call   0x133de
   1ac3f:	mov    ebx,eax
   1ac41:	mov    eax,edi
   1ac43:	shr    eax,0x2
   1ac46:	lea    eax,[ebx+eax*4]
   1ac49:	push   eax
   1ac4a:	mov    DWORD PTR [ebp+0x8],eax
   1ac4d:	mov    eax,DWORD PTR [esi+0x20]
   1ac50:	add    eax,0x4
   1ac53:	push   eax
   1ac54:	push   DWORD PTR [esi+0x10]
   1ac57:	call   0x1a5d0
   1ac5c:	push   DWORD PTR [esi+0x24]
   1ac5f:	call   0x11d22
   1ac64:	mov    eax,DWORD PTR [ebp+0x8]
   1ac67:	pop    ecx
   1ac68:	mov    DWORD PTR [esi+0x28],edi
   1ac6b:	pop    edi
   1ac6c:	mov    DWORD PTR [esi+0x24],ebx
   1ac6f:	pop    esi
   1ac70:	pop    ebx
   1ac71:	pop    ebp
   1ac72:	ret    0x4
   1ac75:	int3   
   1ac76:	int3   
   1ac77:	int3   
   1ac78:	int3   
   1ac79:	int3   
   1ac7a:	mov    edi,edi
   1ac7c:	push   ebp
   1ac7d:	mov    ebp,esp
   1ac7f:	push   0x0
   1ac81:	push   0x18
   1ac83:	call   0x133de
   1ac88:	mov    ecx,DWORD PTR [ebp+0x8]
   1ac8b:	mov    DWORD PTR [eax+0x4],ecx
   1ac8e:	mov    ecx,DWORD PTR [ebp+0xc]
   1ac91:	mov    DWORD PTR [eax+0x14],ecx
   1ac94:	pop    ebp
   1ac95:	ret    0x8
   1ac98:	int3   
   1ac99:	int3   
   1ac9a:	int3   
   1ac9b:	int3   
   1ac9c:	int3   
   1ac9d:	int3   
   1ac9e:	mov    edi,edi
   1aca0:	push   ebp
   1aca1:	mov    ebp,esp
   1aca3:	push   edi
   1aca4:	mov    edi,DWORD PTR [ebp+0xc]
   1aca7:	cmp    DWORD PTR [ebp+0x8],edi
   1acaa:	je     0x1acc0
   1acac:	push   esi
   1acad:	mov    esi,DWORD PTR [ebp+0x10]
   1acb0:	inc    DWORD PTR [esi]
   1acb2:	lea    ecx,[ebp+0x8]
   1acb5:	call   0x1a57e
   1acba:	cmp    DWORD PTR [ebp+0x8],edi
   1acbd:	jne    0x1acb0
   1acbf:	pop    esi
   1acc0:	pop    edi
   1acc1:	pop    ebp
   1acc2:	ret    
   1acc3:	int3   
   1acc4:	int3   
   1acc5:	int3   
   1acc6:	int3   
   1acc7:	int3   
   1acc8:	mov    edi,edi
   1acca:	push   ebp
   1accb:	mov    ebp,esp
   1accd:	sub    esp,0x28
   1acd0:	push   ebx
   1acd1:	mov    ebx,DWORD PTR [ebp+0x8]
   1acd4:	push   esi
   1acd5:	push   edi
   1acd6:	push   0xffffffff
   1acd8:	push   ebx
   1acd9:	lea    ecx,[ebp-0x8]
   1acdc:	call   0x12b26
   1ace1:	and    DWORD PTR [ebx],0x0
   1ace4:	lea    eax,[ebp-0x8]
   1ace7:	push   eax
   1ace8:	lea    eax,[ebp-0x18]
   1aceb:	push   eax
   1acec:	call   0x1a920
   1acf1:	mov    esi,DWORD PTR ds:0x788d4
   1acf7:	mov    eax,DWORD PTR [ebp-0x10]
   1acfa:	push   DWORD PTR [ebp-0x8]
   1acfd:	add    esi,0x14
   1ad00:	lea    edi,[ebp-0x28]
   1ad03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ad04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ad05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ad06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ad07:	cmp    eax,DWORD PTR [ebp-0x20]
   1ad0a:	je     0x1ad14
   1ad0c:	mov    eax,DWORD PTR [eax]
   1ad0e:	mov    eax,DWORD PTR [eax+0x20]
   1ad11:	inc    eax
   1ad12:	mov    DWORD PTR [ebx],eax
   1ad14:	call   0x11d22
   1ad19:	pop    ecx
   1ad1a:	pop    edi
   1ad1b:	pop    esi
   1ad1c:	pop    ebx
   1ad1d:	leave  
   1ad1e:	ret    0x4
   1ad21:	int3   
   1ad22:	int3   
   1ad23:	int3   
   1ad24:	int3   
   1ad25:	int3   
   1ad26:	add    DWORD PTR [ecx+0xc],0x4
   1ad2a:	dec    DWORD PTR [ecx+0x2c]
   1ad2d:	mov    eax,DWORD PTR [ecx+0xc]
   1ad30:	je     0x1ad37
   1ad32:	cmp    eax,DWORD PTR [ecx+0x8]
   1ad35:	jne    0x1ad3c
   1ad37:	jmp    0x1aaea
   1ad3c:	ret    
   1ad3d:	int3   
   1ad3e:	int3   
   1ad3f:	int3   
   1ad40:	int3   
   1ad41:	int3   
   1ad42:	mov    edi,edi
   1ad44:	push   esi
   1ad45:	push   0x0
   1ad47:	push   0xc
   1ad49:	mov    esi,ecx
   1ad4b:	call   0x133de
   1ad50:	mov    DWORD PTR [eax],eax
   1ad52:	mov    DWORD PTR [eax+0x4],eax
   1ad55:	and    DWORD PTR [esi+0x8],0x0
   1ad59:	mov    DWORD PTR [esi+0x4],eax
   1ad5c:	mov    eax,esi
   1ad5e:	pop    esi
   1ad5f:	ret    0x4
   1ad62:	int3   
   1ad63:	int3   
   1ad64:	int3   
   1ad65:	int3   
   1ad66:	int3   
   1ad67:	int3   
   1ad68:	mov    edi,edi
   1ad6a:	push   ebp
   1ad6b:	mov    ebp,esp
   1ad6d:	push   ecx
   1ad6e:	push   esi
   1ad6f:	mov    esi,ecx
   1ad71:	mov    eax,DWORD PTR [esi+0x4]
   1ad74:	mov    ecx,DWORD PTR [eax]
   1ad76:	push   eax
   1ad77:	push   ecx
   1ad78:	lea    eax,[ebp-0x4]
   1ad7b:	push   eax
   1ad7c:	mov    ecx,esi
   1ad7e:	call   0x1ab98
   1ad83:	push   DWORD PTR [esi+0x4]
   1ad86:	call   0x11d22
   1ad8b:	and    DWORD PTR [esi+0x4],0x0
   1ad8f:	and    DWORD PTR [esi+0x8],0x0
   1ad93:	pop    ecx
   1ad94:	pop    esi
   1ad95:	leave  
   1ad96:	ret    
   1ad97:	int3   
   1ad98:	int3   
   1ad99:	int3   
   1ad9a:	int3   
   1ad9b:	int3   
   1ad9c:	mov    edi,edi
   1ad9e:	push   ebp
   1ad9f:	mov    ebp,esp
   1ada1:	push   ecx
   1ada2:	mov    eax,DWORD PTR [ecx+0x4]
   1ada5:	push   DWORD PTR [eax]
   1ada7:	lea    eax,[ebp-0x4]
   1adaa:	push   eax
   1adab:	call   0x1ab5c
   1adb0:	leave  
   1adb1:	ret    
   1adb2:	int3   
   1adb3:	int3   
   1adb4:	int3   
   1adb5:	int3   
   1adb6:	int3   
   1adb7:	int3   
   1adb8:	mov    edi,edi
   1adba:	push   ebp
   1adbb:	mov    ebp,esp
   1adbd:	sub    esp,0x18
   1adc0:	push   ebx
   1adc1:	push   esi
   1adc2:	push   edi
   1adc3:	push   0x0
   1adc5:	push   0x400
   1adca:	mov    ebx,ecx
   1adcc:	call   0x1a5fa
   1add1:	cmp    DWORD PTR [ebx+0x2c],0x0
   1add5:	mov    esi,eax
   1add7:	mov    DWORD PTR [ebp-0x8],esi
   1adda:	jne    0x1ae11
   1addc:	mov    ecx,ebx
   1adde:	mov    DWORD PTR [ebx+0x28],0x2
   1ade5:	call   0x1abfc
   1adea:	mov    eax,DWORD PTR [ebx+0x24]
   1aded:	mov    DWORD PTR [eax+0x4],esi
   1adf0:	mov    eax,DWORD PTR [ebx+0x24]
   1adf3:	add    eax,0x4
   1adf6:	push   eax
   1adf7:	add    esi,0x800
   1adfd:	push   esi
   1adfe:	lea    ecx,[ebp-0x18]
   1ae01:	call   0x1a50e
   1ae06:	lea    edi,[ebx+0x4]
   1ae09:	mov    esi,eax
   1ae0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae0f:	jmp    0x1ae6f
   1ae11:	mov    ecx,DWORD PTR [ebx+0x28]
   1ae14:	mov    edx,DWORD PTR [ebx+0x24]
   1ae17:	mov    eax,DWORD PTR [ebx+0x20]
   1ae1a:	lea    ecx,[edx+ecx*4-0x4]
   1ae1e:	cmp    eax,ecx
   1ae20:	jae    0x1ae30
   1ae22:	add    eax,0x4
   1ae25:	mov    DWORD PTR [ebx+0x20],eax
   1ae28:	mov    DWORD PTR [eax],esi
   1ae2a:	push   DWORD PTR [ebx+0x20]
   1ae2d:	push   esi
   1ae2e:	jmp    0x1ae67
   1ae30:	sub    eax,DWORD PTR [ebx+0x10]
   1ae33:	mov    ecx,ebx
   1ae35:	sar    eax,0x2
   1ae38:	inc    eax
   1ae39:	mov    edi,eax
   1ae3b:	lea    eax,[edi+edi*1]
   1ae3e:	push   eax
   1ae3f:	call   0x1ac1a
   1ae44:	lea    ecx,[eax+edi*4]
   1ae47:	mov    DWORD PTR [ecx],esi
   1ae49:	push   eax
   1ae4a:	push   DWORD PTR [ebx+0xc]
   1ae4d:	mov    DWORD PTR [ebp-0x4],ecx
   1ae50:	lea    ecx,[ebp-0x18]
   1ae53:	call   0x1a50e
   1ae58:	push   DWORD PTR [ebp-0x4]
   1ae5b:	lea    edi,[ebx+0x4]
   1ae5e:	push   DWORD PTR [ebp-0x8]
   1ae61:	mov    esi,eax
   1ae63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae67:	lea    ecx,[ebp-0x18]
   1ae6a:	call   0x1a50e
   1ae6f:	lea    edi,[ebx+0x14]
   1ae72:	mov    esi,eax
   1ae74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ae78:	pop    edi
   1ae79:	pop    esi
   1ae7a:	pop    ebx
   1ae7b:	leave  
   1ae7c:	ret    
   1ae7d:	int3   
   1ae7e:	int3   
   1ae7f:	int3   
   1ae80:	int3   
   1ae81:	int3   
   1ae82:	mov    edi,edi
   1ae84:	push   ebp
   1ae85:	mov    ebp,esp
   1ae87:	mov    eax,DWORD PTR [ebp+0xc]
   1ae8a:	push   ebx
   1ae8b:	push   esi
   1ae8c:	push   edi
   1ae8d:	lea    edi,[eax+0x4]
   1ae90:	push   DWORD PTR [edi]
   1ae92:	mov    ebx,ecx
   1ae94:	push   eax
   1ae95:	call   0x1abce
   1ae9a:	push   DWORD PTR [ebp+0x10]
   1ae9d:	mov    esi,eax
   1ae9f:	mov    DWORD PTR [edi],esi
   1aea1:	mov    eax,DWORD PTR [esi+0x4]
   1aea4:	mov    DWORD PTR [eax],esi
   1aea6:	lea    eax,[esi+0x8]
   1aea9:	push   eax
   1aeaa:	call   0x1a5b4
   1aeaf:	mov    eax,DWORD PTR [ebp+0x8]
   1aeb2:	inc    DWORD PTR [ebx+0x8]
   1aeb5:	pop    edi
   1aeb6:	mov    DWORD PTR [eax],esi
   1aeb8:	pop    esi
   1aeb9:	pop    ebx
   1aeba:	pop    ebp
   1aebb:	ret    0xc
   1aebe:	int3   
   1aebf:	int3   
   1aec0:	int3   
   1aec1:	int3   
   1aec2:	int3   
   1aec3:	int3   
   1aec4:	mov    edi,edi
   1aec6:	push   ebp
   1aec7:	mov    ebp,esp
   1aec9:	push   ecx
   1aeca:	mov    eax,DWORD PTR [ebp+0xc]
   1aecd:	push   esi
   1aece:	mov    esi,ecx
   1aed0:	jmp    0x1aeec
   1aed2:	add    eax,0x8
   1aed5:	push   eax
   1aed6:	push   DWORD PTR [ebp+0x8]
   1aed9:	lea    eax,[ebp-0x4]
   1aedc:	push   eax
   1aedd:	mov    ecx,esi
   1aedf:	call   0x1ae82
   1aee4:	mov    eax,DWORD PTR [ebp+0xc]
   1aee7:	mov    eax,DWORD PTR [eax]
   1aee9:	mov    DWORD PTR [ebp+0xc],eax
   1aeec:	cmp    eax,DWORD PTR [ebp+0x10]
   1aeef:	jne    0x1aed2
   1aef1:	pop    esi
   1aef2:	leave  
   1aef3:	ret    0xc
   1aef6:	int3   
   1aef7:	int3   
   1aef8:	int3   
   1aef9:	int3   
   1aefa:	int3   
   1aefb:	int3   
   1aefc:	mov    edi,edi
   1aefe:	push   ebp
   1aeff:	mov    ebp,esp
   1af01:	push   esi
   1af02:	push   edi
   1af03:	push   DWORD PTR [ebp+0xc]
   1af06:	mov    edi,ecx
   1af08:	call   0x1a838
   1af0d:	push   DWORD PTR [ebp+0xc]
   1af10:	mov    ecx,edi
   1af12:	mov    esi,eax
   1af14:	call   0x1a7f8
   1af19:	mov    ecx,DWORD PTR [ebp+0x8]
   1af1c:	pop    edi
   1af1d:	mov    DWORD PTR [ecx],eax
   1af1f:	mov    DWORD PTR [ecx+0x4],esi
   1af22:	mov    eax,ecx
   1af24:	pop    esi
   1af25:	pop    ebp
   1af26:	ret    0x8
   1af29:	int3   
   1af2a:	int3   
   1af2b:	int3   
   1af2c:	int3   
   1af2d:	int3   
   1af2e:	mov    edi,edi
   1af30:	push   ebp
   1af31:	mov    ebp,esp
   1af33:	push   ecx
   1af34:	push   ebx
   1af35:	push   esi
   1af36:	push   edi
   1af37:	push   0x1
   1af39:	xor    edi,edi
   1af3b:	push   edi
   1af3c:	mov    esi,ecx
   1af3e:	call   0x1ac7a
   1af43:	lea    ecx,[ebp-0x1]
   1af46:	mov    ebx,eax
   1af48:	call   DWORD PTR ds:0x7760c
   1af4e:	cmp    DWORD PTR ds:0x788dc,edi
   1af54:	jne    0x1af69
   1af56:	mov    eax,ebx
   1af58:	mov    ds:0x788dc,eax
   1af5d:	mov    DWORD PTR [eax],edi
   1af5f:	mov    eax,ds:0x788dc
   1af64:	xor    ebx,ebx
   1af66:	mov    DWORD PTR [eax+0x8],edi
   1af69:	inc    DWORD PTR ds:0x788e0
   1af6f:	lea    ecx,[ebp-0x1]
   1af72:	call   DWORD PTR ds:0x77608
   1af78:	cmp    ebx,edi
   1af7a:	je     0x1af83
   1af7c:	push   ebx
   1af7d:	call   0x11d22
   1af82:	pop    ecx
   1af83:	push   edi
   1af84:	push   DWORD PTR ds:0x788dc
   1af8a:	mov    ecx,esi
   1af8c:	call   0x1ac7a
   1af91:	mov    DWORD PTR [esi+0xc],edi
   1af94:	mov    DWORD PTR [esi+0x4],eax
   1af97:	mov    DWORD PTR [eax],eax
   1af99:	mov    esi,DWORD PTR [esi+0x4]
   1af9c:	pop    edi
   1af9d:	mov    DWORD PTR [esi+0x8],esi
   1afa0:	pop    esi
   1afa1:	pop    ebx
   1afa2:	leave  
   1afa3:	ret    
   1afa4:	int3   
   1afa5:	int3   
   1afa6:	int3   
   1afa7:	int3   
   1afa8:	int3   
   1afa9:	int3   
   1afaa:	mov    edi,edi
   1afac:	push   ebp
   1afad:	mov    ebp,esp
   1afaf:	push   ebx
   1afb0:	push   esi
   1afb1:	mov    esi,DWORD PTR [ebp+0x10]
   1afb4:	push   edi
   1afb5:	push   0x0
   1afb7:	push   esi
   1afb8:	mov    edi,ecx
   1afba:	call   0x1ac7a
   1afbf:	push   DWORD PTR [ebp+0x14]
   1afc2:	mov    ebx,eax
   1afc4:	mov    eax,ds:0x788dc
   1afc9:	mov    DWORD PTR [ebx],eax
   1afcb:	mov    eax,ds:0x788dc
   1afd0:	mov    DWORD PTR [ebx+0x8],eax
   1afd3:	lea    eax,[ebx+0xc]
   1afd6:	push   eax
   1afd7:	call   0x1a878
   1afdc:	inc    DWORD PTR [edi+0xc]
   1afdf:	cmp    esi,DWORD PTR [edi+0x4]
   1afe2:	je     0x1b00c
   1afe4:	mov    eax,DWORD PTR [ebp+0xc]
   1afe7:	cmp    eax,DWORD PTR ds:0x788dc
   1afed:	jne    0x1b00c
   1afef:	lea    eax,[esi+0xc]
   1aff2:	push   eax
   1aff3:	push   DWORD PTR [ebp+0x14]
   1aff6:	call   0x19a08
   1affb:	test   al,al
   1affd:	jne    0x1b00c
   1afff:	mov    DWORD PTR [esi+0x8],ebx
   1b002:	mov    eax,DWORD PTR [edi+0x4]
   1b005:	cmp    esi,DWORD PTR [eax+0x8]
   1b008:	jne    0x1b026
   1b00a:	jmp    0x1b01b
   1b00c:	mov    DWORD PTR [esi],ebx
   1b00e:	mov    eax,DWORD PTR [edi+0x4]
   1b011:	cmp    esi,eax
   1b013:	jne    0x1b020
   1b015:	mov    DWORD PTR [eax+0x4],ebx
   1b018:	mov    eax,DWORD PTR [edi+0x4]
   1b01b:	mov    DWORD PTR [eax+0x8],ebx
   1b01e:	jmp    0x1b026
   1b020:	cmp    esi,DWORD PTR [eax]
   1b022:	jne    0x1b026
   1b024:	mov    DWORD PTR [eax],ebx
   1b026:	mov    eax,DWORD PTR [edi+0x4]
   1b029:	mov    esi,ebx
   1b02b:	cmp    ebx,DWORD PTR [eax+0x4]
   1b02e:	je     0x1b0e2
   1b034:	mov    eax,DWORD PTR [esi+0x4]
   1b037:	xor    edx,edx
   1b039:	cmp    DWORD PTR [eax+0x14],edx
   1b03c:	jne    0x1b0e2
   1b042:	mov    ecx,DWORD PTR [eax+0x4]
   1b045:	cmp    eax,DWORD PTR [ecx]
   1b047:	jne    0x1b083
   1b049:	mov    ecx,DWORD PTR [ecx+0x8]
   1b04c:	cmp    DWORD PTR [ecx+0x14],edx
   1b04f:	je     0x1b08a
   1b051:	cmp    esi,DWORD PTR [eax+0x8]
   1b054:	jne    0x1b060
   1b056:	mov    esi,eax
   1b058:	push   esi
   1b059:	mov    ecx,edi
   1b05b:	call   0x1a71a
   1b060:	mov    eax,DWORD PTR [esi+0x4]
   1b063:	mov    DWORD PTR [eax+0x14],0x1
   1b06a:	mov    eax,DWORD PTR [esi+0x4]
   1b06d:	mov    eax,DWORD PTR [eax+0x4]
   1b070:	and    DWORD PTR [eax+0x14],0x0
   1b074:	mov    eax,DWORD PTR [esi+0x4]
   1b077:	push   DWORD PTR [eax+0x4]
   1b07a:	mov    ecx,edi
   1b07c:	call   0x1a768
   1b081:	jmp    0x1b0d6
   1b083:	mov    ecx,DWORD PTR [ecx]
   1b085:	cmp    DWORD PTR [ecx+0x14],edx
   1b088:	jne    0x1b0a7
   1b08a:	mov    edx,eax
   1b08c:	xor    eax,eax
   1b08e:	inc    eax
   1b08f:	mov    DWORD PTR [edx+0x14],eax
   1b092:	mov    DWORD PTR [ecx+0x14],eax
   1b095:	mov    eax,DWORD PTR [esi+0x4]
   1b098:	mov    eax,DWORD PTR [eax+0x4]
   1b09b:	and    DWORD PTR [eax+0x14],0x0
   1b09f:	mov    eax,DWORD PTR [esi+0x4]
   1b0a2:	mov    esi,DWORD PTR [eax+0x4]
   1b0a5:	jmp    0x1b0d6
   1b0a7:	cmp    esi,DWORD PTR [eax]
   1b0a9:	jne    0x1b0b5
   1b0ab:	mov    esi,eax
   1b0ad:	push   esi
   1b0ae:	mov    ecx,edi
   1b0b0:	call   0x1a768
   1b0b5:	mov    eax,DWORD PTR [esi+0x4]
   1b0b8:	mov    DWORD PTR [eax+0x14],0x1
   1b0bf:	mov    eax,DWORD PTR [esi+0x4]
   1b0c2:	mov    eax,DWORD PTR [eax+0x4]
   1b0c5:	and    DWORD PTR [eax+0x14],0x0
   1b0c9:	mov    eax,DWORD PTR [esi+0x4]
   1b0cc:	push   DWORD PTR [eax+0x4]
   1b0cf:	mov    ecx,edi
   1b0d1:	call   0x1a71a
   1b0d6:	mov    eax,DWORD PTR [edi+0x4]
   1b0d9:	cmp    esi,DWORD PTR [eax+0x4]
   1b0dc:	jne    0x1b034
   1b0e2:	mov    eax,DWORD PTR [edi+0x4]
   1b0e5:	mov    eax,DWORD PTR [eax+0x4]
   1b0e8:	pop    edi
   1b0e9:	mov    DWORD PTR [eax+0x14],0x1
   1b0f0:	mov    eax,DWORD PTR [ebp+0x8]
   1b0f3:	pop    esi
   1b0f4:	mov    DWORD PTR [eax],ebx
   1b0f6:	pop    ebx
   1b0f7:	pop    ebp
   1b0f8:	ret    0x10
   1b0fb:	int3   
   1b0fc:	int3   
   1b0fd:	int3   
   1b0fe:	int3   
   1b0ff:	int3   
   1b100:	mov    edi,edi
   1b102:	push   ebp
   1b103:	mov    ebp,esp
   1b105:	sub    esp,0x10
   1b108:	push   ebx
   1b109:	push   esi
   1b10a:	mov    DWORD PTR [ebp-0xc],ecx
   1b10d:	push   edi
   1b10e:	mov    edi,DWORD PTR [ebp+0xc]
   1b111:	lea    ecx,[ebp+0xc]
   1b114:	call   0x1a57e
   1b119:	mov    esi,DWORD PTR [edi]
   1b11b:	mov    eax,ds:0x788dc
   1b120:	lea    ebx,[edi+0x8]
   1b123:	mov    DWORD PTR [ebp-0x8],edi
   1b126:	mov    DWORD PTR [ebp-0x10],ebx
   1b129:	cmp    esi,eax
   1b12b:	jne    0x1b131
   1b12d:	mov    esi,DWORD PTR [ebx]
   1b12f:	jmp    0x1b148
   1b131:	mov    ecx,DWORD PTR [ebx]
   1b133:	cmp    ecx,eax
   1b135:	je     0x1b148
   1b137:	push   ecx
   1b138:	call   0x1a55c
   1b13d:	mov    DWORD PTR [ebp-0x8],eax
   1b140:	add    eax,0x8
   1b143:	mov    esi,DWORD PTR [eax]
   1b145:	mov    DWORD PTR [ebp-0x10],eax
   1b148:	lea    ecx,[ebp-0x1]
   1b14b:	call   DWORD PTR ds:0x7760c
   1b151:	mov    eax,DWORD PTR [ebp-0x8]
   1b154:	cmp    eax,edi
   1b156:	je     0x1b1b8
   1b158:	mov    ecx,DWORD PTR [edi]
   1b15a:	mov    DWORD PTR [ecx+0x4],eax
   1b15d:	mov    ecx,DWORD PTR [edi]
   1b15f:	mov    DWORD PTR [eax],ecx
   1b161:	cmp    eax,DWORD PTR [ebx]
   1b163:	jne    0x1b16a
   1b165:	mov    DWORD PTR [esi+0x4],eax
   1b168:	jmp    0x1b181
   1b16a:	mov    ecx,DWORD PTR [eax+0x4]
   1b16d:	mov    edx,DWORD PTR [ebp-0x10]
   1b170:	mov    DWORD PTR [esi+0x4],ecx
   1b173:	mov    ecx,DWORD PTR [eax+0x4]
   1b176:	mov    DWORD PTR [ecx],esi
   1b178:	mov    ecx,DWORD PTR [ebx]
   1b17a:	mov    DWORD PTR [edx],ecx
   1b17c:	mov    ecx,DWORD PTR [ebx]
   1b17e:	mov    DWORD PTR [ecx+0x4],eax
   1b181:	mov    ebx,DWORD PTR [ebp-0xc]
   1b184:	mov    ecx,DWORD PTR [ebx+0x4]
   1b187:	cmp    DWORD PTR [ecx+0x4],edi
   1b18a:	jne    0x1b191
   1b18c:	mov    DWORD PTR [ecx+0x4],eax
   1b18f:	jmp    0x1b19f
   1b191:	mov    ecx,DWORD PTR [edi+0x4]
   1b194:	cmp    DWORD PTR [ecx],edi
   1b196:	jne    0x1b19c
   1b198:	mov    DWORD PTR [ecx],eax
   1b19a:	jmp    0x1b19f
   1b19c:	mov    DWORD PTR [ecx+0x8],eax
   1b19f:	mov    ecx,DWORD PTR [edi+0x4]
   1b1a2:	mov    DWORD PTR [eax+0x4],ecx
   1b1a5:	mov    ecx,DWORD PTR [eax+0x14]
   1b1a8:	mov    edx,DWORD PTR [edi+0x14]
   1b1ab:	mov    DWORD PTR [eax+0x14],edx
   1b1ae:	mov    DWORD PTR [edi+0x14],ecx
   1b1b1:	mov    DWORD PTR [ebp-0x8],edi
   1b1b4:	mov    eax,edi
   1b1b6:	jmp    0x1b231
   1b1b8:	mov    ecx,DWORD PTR [eax+0x4]
   1b1bb:	mov    edx,DWORD PTR [ebp-0xc]
   1b1be:	mov    DWORD PTR [esi+0x4],ecx
   1b1c1:	mov    ecx,DWORD PTR [edx+0x4]
   1b1c4:	cmp    DWORD PTR [ecx+0x4],edi
   1b1c7:	jne    0x1b1ce
   1b1c9:	mov    DWORD PTR [ecx+0x4],esi
   1b1cc:	jmp    0x1b1dc
   1b1ce:	mov    ecx,DWORD PTR [edi+0x4]
   1b1d1:	cmp    DWORD PTR [ecx],edi
   1b1d3:	jne    0x1b1d9
   1b1d5:	mov    DWORD PTR [ecx],esi
   1b1d7:	jmp    0x1b1dc
   1b1d9:	mov    DWORD PTR [ecx+0x8],esi
   1b1dc:	mov    ecx,DWORD PTR [edx+0x4]
   1b1df:	mov    DWORD PTR [ebp-0x10],ecx
   1b1e2:	cmp    DWORD PTR [ecx],edi
   1b1e4:	jne    0x1b208
   1b1e6:	mov    ebx,DWORD PTR [ebx]
   1b1e8:	cmp    ebx,DWORD PTR ds:0x788dc
   1b1ee:	jne    0x1b1f7
   1b1f0:	mov    ebx,DWORD PTR [edi+0x4]
   1b1f3:	mov    DWORD PTR [ecx],ebx
   1b1f5:	jmp    0x1b208
   1b1f7:	push   esi
   1b1f8:	call   0x1a55c
   1b1fd:	mov    ecx,DWORD PTR [ebp-0x10]
   1b200:	mov    edx,DWORD PTR [ebp-0xc]
   1b203:	mov    DWORD PTR [ecx],eax
   1b205:	mov    eax,DWORD PTR [ebp-0x8]
   1b208:	mov    ebx,DWORD PTR [edx+0x4]
   1b20b:	cmp    DWORD PTR [ebx+0x8],edi
   1b20e:	jne    0x1b22e
   1b210:	mov    ecx,DWORD PTR [edi]
   1b212:	cmp    ecx,DWORD PTR ds:0x788dc
   1b218:	jne    0x1b222
   1b21a:	mov    ecx,DWORD PTR [edi+0x4]
   1b21d:	mov    DWORD PTR [ebx+0x8],ecx
   1b220:	jmp    0x1b22e
   1b222:	push   esi
   1b223:	call   0x1a53a
   1b228:	mov    DWORD PTR [ebx+0x8],eax
   1b22b:	mov    eax,DWORD PTR [ebp-0x8]
   1b22e:	mov    ebx,DWORD PTR [ebp-0xc]
   1b231:	xor    edi,edi
   1b233:	inc    edi
   1b234:	cmp    DWORD PTR [eax+0x14],edi
   1b237:	jne    0x1b34b
   1b23d:	jmp    0x1b2fe
   1b242:	cmp    DWORD PTR [esi+0x14],edi
   1b245:	jne    0x1b348
   1b24b:	mov    eax,DWORD PTR [esi+0x4]
   1b24e:	cmp    esi,DWORD PTR [eax]
   1b250:	jne    0x1b2c7
   1b252:	mov    eax,DWORD PTR [eax+0x8]
   1b255:	cmp    DWORD PTR [eax+0x14],0x0
   1b259:	jne    0x1b275
   1b25b:	mov    DWORD PTR [eax+0x14],edi
   1b25e:	mov    eax,DWORD PTR [esi+0x4]
   1b261:	and    DWORD PTR [eax+0x14],0x0
   1b265:	push   DWORD PTR [esi+0x4]
   1b268:	mov    ecx,ebx
   1b26a:	call   0x1a71a
   1b26f:	mov    eax,DWORD PTR [esi+0x4]
   1b272:	mov    eax,DWORD PTR [eax+0x8]
   1b275:	mov    ecx,DWORD PTR [eax]
   1b277:	cmp    DWORD PTR [ecx+0x14],edi
   1b27a:	jne    0x1b284
   1b27c:	mov    ecx,DWORD PTR [eax+0x8]
   1b27f:	cmp    DWORD PTR [ecx+0x14],edi
   1b282:	je     0x1b2f7
   1b284:	mov    ecx,DWORD PTR [eax+0x8]
   1b287:	cmp    DWORD PTR [ecx+0x14],edi
   1b28a:	jne    0x1b2a3
   1b28c:	mov    ecx,DWORD PTR [eax]
   1b28e:	mov    DWORD PTR [ecx+0x14],edi
   1b291:	and    DWORD PTR [eax+0x14],0x0
   1b295:	push   eax
   1b296:	mov    ecx,ebx
   1b298:	call   0x1a768
   1b29d:	mov    eax,DWORD PTR [esi+0x4]
   1b2a0:	mov    eax,DWORD PTR [eax+0x8]
   1b2a3:	mov    ecx,DWORD PTR [esi+0x4]
   1b2a6:	mov    ecx,DWORD PTR [ecx+0x14]
   1b2a9:	mov    DWORD PTR [eax+0x14],ecx
   1b2ac:	mov    ecx,DWORD PTR [esi+0x4]
   1b2af:	mov    DWORD PTR [ecx+0x14],edi
   1b2b2:	mov    eax,DWORD PTR [eax+0x8]
   1b2b5:	mov    DWORD PTR [eax+0x14],edi
   1b2b8:	push   DWORD PTR [esi+0x4]
   1b2bb:	mov    ecx,ebx
   1b2bd:	call   0x1a71a
   1b2c2:	jmp    0x1b348
   1b2c7:	mov    eax,DWORD PTR [eax]
   1b2c9:	cmp    DWORD PTR [eax+0x14],0x0
   1b2cd:	jne    0x1b2e8
   1b2cf:	mov    DWORD PTR [eax+0x14],edi
   1b2d2:	mov    eax,DWORD PTR [esi+0x4]
   1b2d5:	and    DWORD PTR [eax+0x14],0x0
   1b2d9:	push   DWORD PTR [esi+0x4]
   1b2dc:	mov    ecx,ebx
   1b2de:	call   0x1a768
   1b2e3:	mov    eax,DWORD PTR [esi+0x4]
   1b2e6:	mov    eax,DWORD PTR [eax]
   1b2e8:	mov    ecx,DWORD PTR [eax+0x8]
   1b2eb:	cmp    DWORD PTR [ecx+0x14],edi
   1b2ee:	jne    0x1b30c
   1b2f0:	mov    ecx,DWORD PTR [eax]
   1b2f2:	cmp    DWORD PTR [ecx+0x14],edi
   1b2f5:	jne    0x1b30c
   1b2f7:	and    DWORD PTR [eax+0x14],0x0
   1b2fb:	mov    esi,DWORD PTR [esi+0x4]
   1b2fe:	mov    eax,DWORD PTR [ebx+0x4]
   1b301:	cmp    esi,DWORD PTR [eax+0x4]
   1b304:	jne    0x1b242
   1b30a:	jmp    0x1b348
   1b30c:	mov    ecx,DWORD PTR [eax]
   1b30e:	cmp    DWORD PTR [ecx+0x14],edi
   1b311:	jne    0x1b32a
   1b313:	mov    ecx,DWORD PTR [eax+0x8]
   1b316:	mov    DWORD PTR [ecx+0x14],edi
   1b319:	and    DWORD PTR [eax+0x14],0x0
   1b31d:	push   eax
   1b31e:	mov    ecx,ebx
   1b320:	call   0x1a71a
   1b325:	mov    eax,DWORD PTR [esi+0x4]
   1b328:	mov    eax,DWORD PTR [eax]
   1b32a:	mov    ecx,DWORD PTR [esi+0x4]
   1b32d:	mov    ecx,DWORD PTR [ecx+0x14]
   1b330:	mov    DWORD PTR [eax+0x14],ecx
   1b333:	mov    ecx,DWORD PTR [esi+0x4]
   1b336:	mov    DWORD PTR [ecx+0x14],edi
   1b339:	mov    eax,DWORD PTR [eax]
   1b33b:	mov    DWORD PTR [eax+0x14],edi
   1b33e:	push   DWORD PTR [esi+0x4]
   1b341:	mov    ecx,ebx
   1b343:	call   0x1a768
   1b348:	mov    DWORD PTR [esi+0x14],edi
   1b34b:	lea    ecx,[ebp-0x1]
   1b34e:	call   DWORD PTR ds:0x77608
   1b354:	mov    esi,DWORD PTR [ebp-0x8]
   1b357:	lea    eax,[esi+0xc]
   1b35a:	push   eax
   1b35b:	call   0x1a896
   1b360:	push   esi
   1b361:	call   0x11d22
   1b366:	mov    eax,DWORD PTR [ebp+0x8]
   1b369:	dec    DWORD PTR [ebx+0xc]
   1b36c:	pop    ecx
   1b36d:	mov    ecx,DWORD PTR [ebp+0xc]
   1b370:	pop    edi
   1b371:	pop    esi
   1b372:	mov    DWORD PTR [eax],ecx
   1b374:	pop    ebx
   1b375:	leave  
   1b376:	ret    0x8
   1b379:	int3   
   1b37a:	int3   
   1b37b:	int3   
   1b37c:	int3   
   1b37d:	int3   
   1b37e:	mov    edi,edi
   1b380:	push   ebp
   1b381:	mov    ebp,esp
   1b383:	push   ebx
   1b384:	push   esi
   1b385:	push   edi
   1b386:	mov    edi,DWORD PTR [ebp+0x8]
   1b389:	mov    ebx,ecx
   1b38b:	mov    esi,edi
   1b38d:	cmp    edi,DWORD PTR ds:0x788dc
   1b393:	je     0x1b3bb
   1b395:	push   DWORD PTR [esi+0x8]
   1b398:	mov    ecx,ebx
   1b39a:	call   0x1b37e
   1b39f:	mov    esi,DWORD PTR [esi]
   1b3a1:	lea    eax,[edi+0xc]
   1b3a4:	push   eax
   1b3a5:	call   0x1a896
   1b3aa:	push   edi
   1b3ab:	call   0x11d22
   1b3b0:	pop    ecx
   1b3b1:	mov    edi,esi
   1b3b3:	cmp    esi,DWORD PTR ds:0x788dc
   1b3b9:	jne    0x1b395
   1b3bb:	pop    edi
   1b3bc:	pop    esi
   1b3bd:	pop    ebx
   1b3be:	pop    ebp
   1b3bf:	ret    0x4
   1b3c2:	int3   
   1b3c3:	int3   
   1b3c4:	int3   
   1b3c5:	int3   
   1b3c6:	int3   
   1b3c7:	int3   
   1b3c8:	mov    edi,edi
   1b3ca:	push   ebp
   1b3cb:	mov    ebp,esp
   1b3cd:	push   ecx
   1b3ce:	push   DWORD PTR [ebp-0x4]
   1b3d1:	push   DWORD PTR [ebp+0x10]
   1b3d4:	push   DWORD PTR [ebp+0xc]
   1b3d7:	push   DWORD PTR [ebp+0x8]
   1b3da:	call   0x1ac9e
   1b3df:	add    esp,0x10
   1b3e2:	leave  
   1b3e3:	ret    
   1b3e4:	int3   
   1b3e5:	int3   
   1b3e6:	int3   
   1b3e7:	int3   
   1b3e8:	int3   
   1b3e9:	int3   
   1b3ea:	mov    edi,edi
   1b3ec:	push   esi
   1b3ed:	mov    esi,ecx
   1b3ef:	jmp    0x1b3f8
   1b3f1:	mov    ecx,esi
   1b3f3:	call   0x1ad26
   1b3f8:	cmp    DWORD PTR [esi+0x2c],0x0
   1b3fc:	jne    0x1b3f1
   1b3fe:	pop    esi
   1b3ff:	ret    
   1b400:	int3   
   1b401:	int3   
   1b402:	int3   
   1b403:	int3   
   1b404:	int3   
   1b405:	int3   
   1b406:	mov    edi,edi
   1b408:	push   ebp
   1b409:	mov    ebp,esp
   1b40b:	push   esi
   1b40c:	mov    esi,ecx
   1b40e:	cmp    DWORD PTR [esi+0x2c],0x0
   1b412:	je     0x1b43a
   1b414:	mov    ecx,DWORD PTR [esi+0x1c]
   1b417:	mov    edx,DWORD PTR [esi+0x18]
   1b41a:	cmp    ecx,edx
   1b41c:	je     0x1b43a
   1b41e:	push   DWORD PTR [ebp+0x8]
   1b421:	lea    eax,[ecx+0x4]
   1b424:	mov    DWORD PTR [esi+0x1c],eax
   1b427:	push   ecx
   1b428:	cmp    eax,edx
   1b42a:	jne    0x1b44e
   1b42c:	call   0x1a5b4
   1b431:	mov    ecx,esi
   1b433:	call   0x1adb8
   1b438:	jmp    0x1b453
   1b43a:	mov    ecx,esi
   1b43c:	call   0x1adb8
   1b441:	mov    eax,DWORD PTR [esi+0x1c]
   1b444:	push   DWORD PTR [ebp+0x8]
   1b447:	lea    ecx,[eax+0x4]
   1b44a:	mov    DWORD PTR [esi+0x1c],ecx
   1b44d:	push   eax
   1b44e:	call   0x1a5b4
   1b453:	inc    DWORD PTR [esi+0x2c]
   1b456:	pop    esi
   1b457:	pop    ebp
   1b458:	ret    0x4
   1b45b:	int3   
   1b45c:	int3   
   1b45d:	int3   
   1b45e:	int3   
   1b45f:	int3   
   1b460:	mov    edi,edi
   1b462:	push   ebp
   1b463:	mov    ebp,esp
   1b465:	push   esi
   1b466:	push   0x0
   1b468:	push   0xc
   1b46a:	mov    esi,ecx
   1b46c:	call   0x133de
   1b471:	mov    ecx,DWORD PTR [ebp+0x8]
   1b474:	mov    DWORD PTR [eax],eax
   1b476:	mov    DWORD PTR [eax+0x4],eax
   1b479:	and    DWORD PTR [esi+0x8],0x0
   1b47d:	mov    DWORD PTR [esi+0x4],eax
   1b480:	mov    ecx,DWORD PTR [ecx+0x4]
   1b483:	mov    edx,DWORD PTR [ecx]
   1b485:	mov    eax,DWORD PTR [eax]
   1b487:	push   ecx
   1b488:	push   edx
   1b489:	push   eax
   1b48a:	mov    ecx,esi
   1b48c:	call   0x1aec4
   1b491:	mov    eax,esi
   1b493:	pop    esi
   1b494:	pop    ebp
   1b495:	ret    0x4
   1b498:	int3   
   1b499:	int3   
   1b49a:	int3   
   1b49b:	int3   
   1b49c:	int3   
   1b49d:	int3   
   1b49e:	mov    edi,edi
   1b4a0:	push   ebp
   1b4a1:	mov    ebp,esp
   1b4a3:	push   ecx
   1b4a4:	mov    edx,DWORD PTR [ebp+0x8]
   1b4a7:	mov    DWORD PTR [ebp-0x4],ecx
   1b4aa:	cmp    ecx,edx
   1b4ac:	je     0x1b4eb
   1b4ae:	push   ebx
   1b4af:	mov    ebx,DWORD PTR [edx+0x4]
   1b4b2:	push   esi
   1b4b3:	mov    esi,DWORD PTR [ecx+0x4]
   1b4b6:	mov    eax,DWORD PTR [esi]
   1b4b8:	push   edi
   1b4b9:	mov    edi,DWORD PTR [ebx]
   1b4bb:	jmp    0x1b4cb
   1b4bd:	cmp    edi,ebx
   1b4bf:	je     0x1b4cf
   1b4c1:	mov    edx,DWORD PTR [edi+0x8]
   1b4c4:	mov    DWORD PTR [eax+0x8],edx
   1b4c7:	mov    eax,DWORD PTR [eax]
   1b4c9:	mov    edi,DWORD PTR [edi]
   1b4cb:	cmp    eax,esi
   1b4cd:	jne    0x1b4bd
   1b4cf:	push   esi
   1b4d0:	push   eax
   1b4d1:	lea    eax,[ebp+0x8]
   1b4d4:	push   eax
   1b4d5:	call   0x1ab98
   1b4da:	mov    ecx,DWORD PTR [ebp-0x4]
   1b4dd:	push   ebx
   1b4de:	push   edi
   1b4df:	push   esi
   1b4e0:	call   0x1aec4
   1b4e5:	mov    ecx,DWORD PTR [ebp-0x4]
   1b4e8:	pop    edi
   1b4e9:	pop    esi
   1b4ea:	pop    ebx
   1b4eb:	mov    eax,ecx
   1b4ed:	leave  
   1b4ee:	ret    0x4
   1b4f1:	int3   
   1b4f2:	int3   
   1b4f3:	int3   
   1b4f4:	int3   
   1b4f5:	int3   
   1b4f6:	mov    edi,edi
   1b4f8:	push   ebp
   1b4f9:	mov    ebp,esp
   1b4fb:	push   DWORD PTR [ebp+0x8]
   1b4fe:	mov    eax,DWORD PTR [ecx+0x4]
   1b501:	push   eax
   1b502:	lea    eax,[ebp+0x8]
   1b505:	push   eax
   1b506:	call   0x1ae82
   1b50b:	pop    ebp
   1b50c:	ret    0x4
   1b50f:	int3   
   1b510:	int3   
   1b511:	int3   
   1b512:	int3   
   1b513:	int3   
   1b514:	mov    edi,edi
   1b516:	push   ebp
   1b517:	mov    ebp,esp
   1b519:	push   ecx
   1b51a:	push   ebx
   1b51b:	push   esi
   1b51c:	push   edi
   1b51d:	mov    edi,ecx
   1b51f:	mov    eax,DWORD PTR [edi+0x4]
   1b522:	mov    esi,DWORD PTR [eax+0x4]
   1b525:	mov    ebx,eax
   1b527:	mov    al,0x1
   1b529:	jmp    0x1b544
   1b52b:	lea    eax,[esi+0xc]
   1b52e:	push   eax
   1b52f:	push   DWORD PTR [ebp+0xc]
   1b532:	mov    ebx,esi
   1b534:	call   0x19a08
   1b539:	test   al,al
   1b53b:	je     0x1b541
   1b53d:	mov    esi,DWORD PTR [esi]
   1b53f:	jmp    0x1b544
   1b541:	mov    esi,DWORD PTR [esi+0x8]
   1b544:	cmp    esi,DWORD PTR ds:0x788dc
   1b54a:	jne    0x1b52b
   1b54c:	cmp    BYTE PTR [edi+0x8],0x0
   1b550:	je     0x1b56d
   1b552:	push   DWORD PTR [ebp+0xc]
   1b555:	lea    eax,[ebp+0xc]
   1b558:	push   ebx
   1b559:	push   esi
   1b55a:	push   eax
   1b55b:	mov    ecx,edi
   1b55d:	call   0x1afaa
   1b562:	mov    ecx,DWORD PTR [eax]
   1b564:	mov    eax,DWORD PTR [ebp+0x8]
   1b567:	mov    BYTE PTR [eax+0x4],0x1
   1b56b:	jmp    0x1b5a0
   1b56d:	mov    DWORD PTR [ebp-0x4],ebx
   1b570:	test   al,al
   1b572:	je     0x1b583
   1b574:	mov    eax,DWORD PTR [edi+0x4]
   1b577:	cmp    ebx,DWORD PTR [eax]
   1b579:	je     0x1b552
   1b57b:	lea    ecx,[ebp-0x4]
   1b57e:	call   0x1a7b8
   1b583:	push   DWORD PTR [ebp+0xc]
   1b586:	mov    eax,DWORD PTR [ebp-0x4]
   1b589:	add    eax,0xc
   1b58c:	push   eax
   1b58d:	call   0x19a08
   1b592:	test   al,al
   1b594:	jne    0x1b552
   1b596:	mov    eax,DWORD PTR [ebp+0x8]
   1b599:	mov    ecx,DWORD PTR [ebp-0x4]
   1b59c:	mov    BYTE PTR [eax+0x4],0x0
   1b5a0:	pop    edi
   1b5a1:	pop    esi
   1b5a2:	mov    DWORD PTR [eax],ecx
   1b5a4:	pop    ebx
   1b5a5:	leave  
   1b5a6:	ret    0x8
   1b5a9:	int3   
   1b5aa:	int3   
   1b5ab:	int3   
   1b5ac:	int3   
   1b5ad:	int3   
   1b5ae:	mov    edi,edi
   1b5b0:	push   ebp
   1b5b1:	mov    ebp,esp
   1b5b3:	push   ecx
   1b5b4:	push   ecx
   1b5b5:	push   DWORD PTR [ebp+0x8]
   1b5b8:	lea    eax,[ebp-0x8]
   1b5bb:	push   eax
   1b5bc:	call   0x1aefc
   1b5c1:	and    DWORD PTR [ebp+0x8],0x0
   1b5c5:	lea    eax,[ebp+0x8]
   1b5c8:	push   eax
   1b5c9:	push   DWORD PTR [ebp-0x4]
   1b5cc:	push   DWORD PTR [ebp-0x8]
   1b5cf:	call   0x1b3c8
   1b5d4:	mov    eax,DWORD PTR [ebp+0x8]
   1b5d7:	add    esp,0xc
   1b5da:	leave  
   1b5db:	ret    0x4
   1b5de:	int3   
   1b5df:	int3   
   1b5e0:	int3   
   1b5e1:	int3   
   1b5e2:	int3   
   1b5e3:	int3   
   1b5e4:	mov    edi,edi
   1b5e6:	push   ebp
   1b5e7:	mov    ebp,esp
   1b5e9:	push   ecx
   1b5ea:	push   esi
   1b5eb:	mov    esi,ecx
   1b5ed:	cmp    DWORD PTR [esi+0xc],0x0
   1b5f1:	mov    ecx,DWORD PTR [ebp+0xc]
   1b5f4:	je     0x1b62e
   1b5f6:	mov    eax,DWORD PTR [esi+0x4]
   1b5f9:	cmp    ecx,DWORD PTR [eax]
   1b5fb:	jne    0x1b62e
   1b5fd:	cmp    DWORD PTR [ebp+0x10],eax
   1b600:	jne    0x1b62e
   1b602:	push   DWORD PTR [eax+0x4]
   1b605:	mov    ecx,esi
   1b607:	call   0x1b37e
   1b60c:	mov    ecx,DWORD PTR ds:0x788dc
   1b612:	mov    eax,DWORD PTR [esi+0x4]
   1b615:	mov    DWORD PTR [eax+0x4],ecx
   1b618:	mov    eax,DWORD PTR [esi+0x4]
   1b61b:	and    DWORD PTR [esi+0xc],0x0
   1b61f:	mov    DWORD PTR [eax],eax
   1b621:	mov    eax,DWORD PTR [esi+0x4]
   1b624:	mov    DWORD PTR [eax+0x8],eax
   1b627:	mov    eax,DWORD PTR [esi+0x4]
   1b62a:	mov    ecx,DWORD PTR [eax]
   1b62c:	jmp    0x1b653
   1b62e:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b631:	je     0x1b653
   1b633:	push   edi
   1b634:	mov    edi,ecx
   1b636:	lea    ecx,[ebp+0xc]
   1b639:	call   0x1a57e
   1b63e:	push   edi
   1b63f:	lea    eax,[ebp-0x4]
   1b642:	push   eax
   1b643:	mov    ecx,esi
   1b645:	call   0x1b100
   1b64a:	mov    ecx,DWORD PTR [ebp+0xc]
   1b64d:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b650:	jne    0x1b634
   1b652:	pop    edi
   1b653:	mov    eax,DWORD PTR [ebp+0x8]
   1b656:	mov    DWORD PTR [eax],ecx
   1b658:	pop    esi
   1b659:	leave  
   1b65a:	ret    0xc
   1b65d:	int3   
   1b65e:	int3   
   1b65f:	int3   
   1b660:	int3   
   1b661:	int3   
   1b662:	mov    edi,edi
   1b664:	push   ebp
   1b665:	mov    ebp,esp
   1b667:	push   esi
   1b668:	push   DWORD PTR [ebp+0x8]
   1b66b:	mov    esi,ecx
   1b66d:	mov    ecx,DWORD PTR [esi]
   1b66f:	call   0x1b406
   1b674:	mov    eax,esi
   1b676:	pop    esi
   1b677:	pop    ebp
   1b678:	ret    0x4
   1b67b:	int3   
   1b67c:	int3   
   1b67d:	int3   
   1b67e:	int3   
   1b67f:	int3   
   1b680:	mov    edi,edi
   1b682:	push   ebp
   1b683:	mov    ebp,esp
   1b685:	push   ecx
   1b686:	push   esi
   1b687:	push   edi
   1b688:	xor    edi,edi
   1b68a:	push   edi
   1b68b:	push   edi
   1b68c:	push   edi
   1b68d:	push   edi
   1b68e:	mov    esi,0x788ac
   1b693:	push   esi
   1b694:	call   DWORD PTR ds:0x1f434
   1b69a:	test   eax,eax
   1b69c:	jl     0x1b6c0
   1b69e:	mov    eax,ds:0x788d8
   1b6a3:	mov    ecx,DWORD PTR ds:0x788d0
   1b6a9:	add    eax,0x9
   1b6ac:	mov    DWORD PTR [ebp-0x4],eax
   1b6af:	lea    eax,[ebp-0x4]
   1b6b2:	push   eax
   1b6b3:	call   0x1b4f6
   1b6b8:	push   edi
   1b6b9:	push   esi
   1b6ba:	call   DWORD PTR ds:0x1f438
   1b6c0:	pop    edi
   1b6c1:	pop    esi
   1b6c2:	leave  
   1b6c3:	ret    
   1b6c4:	int3   
   1b6c5:	int3   
   1b6c6:	int3   
   1b6c7:	int3   
   1b6c8:	int3   
   1b6c9:	int3   
   1b6ca:	mov    edi,edi
   1b6cc:	push   ebp
   1b6cd:	mov    ebp,esp
   1b6cf:	push   ecx
   1b6d0:	push   ecx
   1b6d1:	push   DWORD PTR [ebp+0xc]
   1b6d4:	lea    eax,[ebp-0x8]
   1b6d7:	push   eax
   1b6d8:	call   0x1b514
   1b6dd:	mov    eax,DWORD PTR [ebp+0x8]
   1b6e0:	mov    ecx,DWORD PTR [ebp-0x8]
   1b6e3:	mov    DWORD PTR [eax],ecx
   1b6e5:	mov    cl,BYTE PTR [ebp-0x4]
   1b6e8:	mov    BYTE PTR [eax+0x4],cl
   1b6eb:	leave  
   1b6ec:	ret    0x8
   1b6ef:	int3   
   1b6f0:	int3   
   1b6f1:	int3   
   1b6f2:	int3   
   1b6f3:	int3   
   1b6f4:	mov    edi,edi
   1b6f6:	push   ebp
   1b6f7:	mov    ebp,esp
   1b6f9:	push   ecx
   1b6fa:	push   ecx
   1b6fb:	push   esi
   1b6fc:	push   DWORD PTR [ebp+0x8]
   1b6ff:	lea    eax,[ebp-0x8]
   1b702:	push   eax
   1b703:	mov    esi,ecx
   1b705:	call   0x1aefc
   1b70a:	and    DWORD PTR [ebp+0x8],0x0
   1b70e:	lea    eax,[ebp+0x8]
   1b711:	push   eax
   1b712:	push   DWORD PTR [ebp-0x4]
   1b715:	push   DWORD PTR [ebp-0x8]
   1b718:	call   0x1b3c8
   1b71d:	add    esp,0xc
   1b720:	push   DWORD PTR [ebp-0x4]
   1b723:	lea    eax,[ebp-0x4]
   1b726:	push   DWORD PTR [ebp-0x8]
   1b729:	mov    ecx,esi
   1b72b:	push   eax
   1b72c:	call   0x1b5e4
   1b731:	mov    eax,DWORD PTR [ebp+0x8]
   1b734:	pop    esi
   1b735:	leave  
   1b736:	ret    0x4
   1b739:	int3   
   1b73a:	int3   
   1b73b:	int3   
   1b73c:	int3   
   1b73d:	int3   
   1b73e:	mov    edi,edi
   1b740:	push   ebp
   1b741:	mov    ebp,esp
   1b743:	jmp    0x1b756
   1b745:	push   eax
   1b746:	lea    ecx,[ebp+0x2c]
   1b749:	call   0x1b662
   1b74e:	lea    ecx,[ebp+0xc]
   1b751:	call   0x1a646
   1b756:	mov    eax,DWORD PTR [ebp+0x14]
   1b759:	cmp    eax,DWORD PTR [ebp+0x24]
   1b75c:	jne    0x1b745
   1b75e:	mov    eax,DWORD PTR [ebp+0x8]
   1b761:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b764:	mov    DWORD PTR [eax],ecx
   1b766:	pop    ebp
   1b767:	ret    0x28
   1b76a:	int3   
   1b76b:	int3   
   1b76c:	int3   
   1b76d:	int3   
   1b76e:	int3   
   1b76f:	int3   
   1b770:	mov    edi,edi
   1b772:	push   ebp
   1b773:	mov    ebp,esp
   1b775:	sub    esp,0x10
   1b778:	push   0xffffffff
   1b77a:	push   DWORD PTR [ebp+0x8]
   1b77d:	lea    ecx,[ebp-0x8]
   1b780:	call   0x12b26
   1b785:	mov    ecx,DWORD PTR ds:0x788cc
   1b78b:	lea    eax,[ebp-0x8]
   1b78e:	push   eax
   1b78f:	lea    eax,[ebp-0x10]
   1b792:	push   eax
   1b793:	call   0x1b6ca
   1b798:	push   DWORD PTR [ebp-0x8]
   1b79b:	call   0x11d22
   1b7a0:	pop    ecx
   1b7a1:	leave  
   1b7a2:	ret    0x4
   1b7a5:	int3   
   1b7a6:	int3   
   1b7a7:	int3   
   1b7a8:	int3   
   1b7a9:	int3   
   1b7aa:	mov    edi,edi
   1b7ac:	push   ebp
   1b7ad:	mov    ebp,esp
   1b7af:	xor    eax,eax
   1b7b1:	push   ebx
   1b7b2:	push   esi
   1b7b3:	push   edi
   1b7b4:	mov    ebx,ecx
   1b7b6:	mov    DWORD PTR [ebx+0x4],eax
   1b7b9:	mov    DWORD PTR [ebx+0x8],eax
   1b7bc:	mov    DWORD PTR [ebx+0xc],eax
   1b7bf:	mov    DWORD PTR [ebx+0x10],eax
   1b7c2:	mov    DWORD PTR [ebx+0x14],eax
   1b7c5:	mov    DWORD PTR [ebx+0x18],eax
   1b7c8:	mov    DWORD PTR [ebx+0x1c],eax
   1b7cb:	mov    DWORD PTR [ebx+0x20],eax
   1b7ce:	mov    DWORD PTR [ebx+0x24],eax
   1b7d1:	mov    DWORD PTR [ebx+0x28],eax
   1b7d4:	mov    DWORD PTR [ebx+0x2c],eax
   1b7d7:	mov    eax,DWORD PTR [ebp+0x8]
   1b7da:	push   ebx
   1b7db:	sub    esp,0x10
   1b7de:	mov    edi,esp
   1b7e0:	lea    esi,[eax+0x14]
   1b7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7e7:	sub    esp,0x10
   1b7ea:	lea    esi,[eax+0x4]
   1b7ed:	mov    edi,esp
   1b7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7f2:	lea    eax,[ebp+0x8]
   1b7f5:	push   eax
   1b7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b7f7:	call   0x1b73e
   1b7fc:	pop    edi
   1b7fd:	pop    esi
   1b7fe:	mov    eax,ebx
   1b800:	pop    ebx
   1b801:	pop    ebp
   1b802:	ret    0x4
   1b805:	int3   
   1b806:	int3   
   1b807:	int3   
   1b808:	int3   
   1b809:	int3   
   1b80a:	mov    edi,edi
   1b80c:	push   ebp
   1b80d:	mov    ebp,esp
   1b80f:	push   ecx
   1b810:	push   ebx
   1b811:	push   0x30
   1b813:	call   0x11cec
   1b818:	xor    ebx,ebx
   1b81a:	pop    ecx
   1b81b:	cmp    eax,ebx
   1b81d:	je     0x1b831
   1b81f:	lea    ecx,[ebp-0x1]
   1b822:	push   ecx
   1b823:	mov    ecx,eax
   1b825:	call   0x1a6cc
   1b82a:	mov    ds:0x788d4,eax
   1b82f:	jmp    0x1b837
   1b831:	mov    DWORD PTR ds:0x788d4,ebx
   1b837:	push   esi
   1b838:	push   0x10
   1b83a:	call   0x11cec
   1b83f:	mov    esi,eax
   1b841:	pop    ecx
   1b842:	cmp    esi,ebx
   1b844:	je     0x1b858
   1b846:	mov    ecx,esi
   1b848:	mov    BYTE PTR [esi+0x8],bl
   1b84b:	call   0x1af2e
   1b850:	mov    DWORD PTR ds:0x788cc,esi
   1b856:	jmp    0x1b85e
   1b858:	mov    DWORD PTR ds:0x788cc,ebx
   1b85e:	push   0xc
   1b860:	call   0x11cec
   1b865:	pop    ecx
   1b866:	pop    esi
   1b867:	cmp    eax,ebx
   1b869:	je     0x1b87d
   1b86b:	lea    ecx,[ebp-0x1]
   1b86e:	push   ecx
   1b86f:	mov    ecx,eax
   1b871:	call   0x1ad42
   1b876:	mov    ds:0x788d0,eax
   1b87b:	jmp    0x1b883
   1b87d:	mov    DWORD PTR ds:0x788d0,ebx
   1b883:	push   ebx
   1b884:	push   0x788ac
   1b889:	call   DWORD PTR ds:0x1f43c
   1b88f:	mov    DWORD PTR ds:0x788d8,0x1
   1b899:	pop    ebx
   1b89a:	leave  
   1b89b:	ret    
   1b89c:	int3   
   1b89d:	int3   
   1b89e:	int3   
   1b89f:	int3   
   1b8a0:	int3   
   1b8a1:	int3   
   1b8a2:	push   0x3c
   1b8a4:	push   0x77800
   1b8a9:	call   0x1dd40
   1b8ae:	xor    esi,esi
   1b8b0:	push   esi
   1b8b1:	push   esi
   1b8b2:	push   esi
   1b8b3:	push   esi
   1b8b4:	push   0x788ac
   1b8b9:	call   DWORD PTR ds:0x1f434
   1b8bf:	cmp    eax,esi
   1b8c1:	jl     0x1ba31
   1b8c7:	mov    DWORD PTR [ebp-0x4],esi
   1b8ca:	mov    edi,DWORD PTR [ebp+0x8]
   1b8cd:	push   edi
   1b8ce:	lea    eax,[ebp-0x24]
   1b8d1:	push   eax
   1b8d2:	call   0x1a8ae
   1b8d7:	cmp    DWORD PTR [eax+0x4],esi
   1b8da:	setne  BYTE PTR [ebp-0x19]
   1b8de:	push   DWORD PTR [ebp-0x24]
   1b8e1:	call   0x11d22
   1b8e6:	pop    ecx
   1b8e7:	push   edi
   1b8e8:	lea    eax,[ebp-0x2c]
   1b8eb:	push   eax
   1b8ec:	call   0x1a8d4
   1b8f1:	xor    al,al
   1b8f3:	cmp    DWORD PTR [edi+0x14],esi
   1b8f6:	jne    0x1b90c
   1b8f8:	lea    eax,[ebp-0x2c]
   1b8fb:	push   eax
   1b8fc:	mov    ecx,DWORD PTR ds:0x788cc
   1b902:	call   0x1b5ae
   1b907:	test   eax,eax
   1b909:	setne  al
   1b90c:	test   al,al
   1b90e:	je     0x1b91f
   1b910:	lea    eax,[ebp-0x2c]
   1b913:	push   eax
   1b914:	mov    ecx,DWORD PTR ds:0x788cc
   1b91a:	call   0x1b6f4
   1b91f:	mov    ebx,DWORD PTR ds:0x788d4
   1b925:	cmp    DWORD PTR [ebx+0x2c],esi
   1b928:	jbe    0x1b988
   1b92a:	mov    eax,ds:0x7851c
   1b92f:	mov    DWORD PTR [ebp-0x20],eax
   1b932:	cmp    eax,esi
   1b934:	ja     0x1b93d
   1b936:	mov    DWORD PTR [ebp-0x20],0x1
   1b93d:	mov    eax,DWORD PTR [ebp-0x20]
   1b940:	cmp    DWORD PTR [ebx+0x2c],eax
   1b943:	jb     0x1b988
   1b945:	lea    esi,[ebx+0x4]
   1b948:	lea    edi,[ebp-0x3c]
   1b94b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b94e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b94f:	mov    eax,DWORD PTR [ebp-0x34]
   1b952:	mov    eax,DWORD PTR [eax]
   1b954:	mov    eax,DWORD PTR [eax+0xc]
   1b957:	xor    ecx,ecx
   1b959:	add    eax,0x9c40
   1b95e:	push   ecx
   1b95f:	pop    esi
   1b960:	adc    ecx,esi
   1b962:	mov    edx,DWORD PTR [ebp+0x8]
   1b965:	mov    edx,DWORD PTR [edx+0xc]
   1b968:	cmp    ecx,esi
   1b96a:	ja     0x1b988
   1b96c:	jb     0x1b972
   1b96e:	cmp    eax,edx
   1b970:	jae    0x1b988
   1b972:	mov    ecx,ebx
   1b974:	call   0x1a6fa
   1b979:	mov    ecx,ebx
   1b97b:	call   0x1ad26
   1b980:	mov    ebx,DWORD PTR ds:0x788d4
   1b986:	jmp    0x1b93d
   1b988:	push   DWORD PTR [ebp+0x8]
   1b98b:	lea    eax,[ebp-0x24]
   1b98e:	push   eax
   1b98f:	call   0x1a8d4
   1b994:	push   eax
   1b995:	lea    eax,[ebp-0x3c]
   1b998:	push   eax
   1b999:	call   0x1a920
   1b99e:	push   DWORD PTR [ebp-0x24]
   1b9a1:	call   0x11d22
   1b9a6:	pop    ecx
   1b9a7:	mov    ebx,DWORD PTR ds:0x788d4
   1b9ad:	lea    esi,[ebx+0x14]
   1b9b0:	lea    edi,[ebp-0x4c]
   1b9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b9b7:	mov    esi,DWORD PTR [ebp-0x34]
   1b9ba:	cmp    esi,DWORD PTR [ebp-0x44]
   1b9bd:	je     0x1b9f1
   1b9bf:	mov    eax,DWORD PTR [esi]
   1b9c1:	mov    BYTE PTR [eax+0x1c],0x0
   1b9c5:	mov    eax,DWORD PTR [esi]
   1b9c7:	cmp    BYTE PTR [eax+0x24],0x0
   1b9cb:	jne    0x1b9db
   1b9cd:	mov    BYTE PTR [eax+0x24],0x1
   1b9d1:	mov    eax,DWORD PTR [esi]
   1b9d3:	push   DWORD PTR [eax+0x8]
   1b9d6:	call   0x1a674
   1b9db:	mov    eax,DWORD PTR [esi]
   1b9dd:	mov    ecx,DWORD PTR [eax+0x8]
   1b9e0:	mov    eax,DWORD PTR [ebp+0x8]
   1b9e3:	mov    DWORD PTR [eax+0x8],ecx
   1b9e6:	mov    ecx,DWORD PTR [esi]
   1b9e8:	mov    ecx,DWORD PTR [ecx+0x20]
   1b9eb:	inc    ecx
   1b9ec:	mov    DWORD PTR [eax+0x20],ecx
   1b9ef:	jmp    0x1b9f4
   1b9f1:	mov    eax,DWORD PTR [ebp+0x8]
   1b9f4:	mov    cl,BYTE PTR [ebp-0x19]
   1b9f7:	mov    BYTE PTR [eax+0x1c],cl
   1b9fa:	lea    eax,[ebp+0x8]
   1b9fd:	push   eax
   1b9fe:	mov    ecx,ebx
   1ba00:	call   0x1b406
   1ba05:	inc    DWORD PTR ds:0x788d8
   1ba0b:	push   DWORD PTR [ebp-0x2c]
   1ba0e:	call   0x11d22
   1ba13:	pop    ecx
   1ba14:	jmp    0x1ba1d
   1ba16:	xor    eax,eax
   1ba18:	inc    eax
   1ba19:	ret    
   1ba1a:	mov    esp,DWORD PTR [ebp-0x18]
   1ba1d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1ba24:	push   0x0
   1ba26:	push   0x788ac
   1ba2b:	call   DWORD PTR ds:0x1f438
   1ba31:	call   0x1dd85
   1ba36:	ret    0x4
   1ba39:	int3   
   1ba3a:	int3   
   1ba3b:	int3   
   1ba3c:	int3   
   1ba3d:	int3   
   1ba3e:	push   0x48
   1ba40:	push   0x77820
   1ba45:	call   0x1dd40
   1ba4a:	xor    ebx,ebx
   1ba4c:	push   ebx
   1ba4d:	push   ebx
   1ba4e:	push   ebx
   1ba4f:	push   ebx
   1ba50:	push   0x788ac
   1ba55:	call   DWORD PTR ds:0x1f434
   1ba5b:	cmp    eax,ebx
   1ba5d:	jl     0x1bb0b
   1ba63:	mov    DWORD PTR [ebp-0x4],ebx
   1ba66:	push   DWORD PTR ds:0x788d0
   1ba6c:	lea    ecx,[ebp-0x28]
   1ba6f:	call   0x1b460
   1ba74:	mov    BYTE PTR [ebp-0x19],bl
   1ba77:	cmp    DWORD PTR [ebp-0x20],ebx
   1ba7a:	je     0x1ba9a
   1ba7c:	mov    eax,DWORD PTR [ebp-0x24]
   1ba7f:	mov    eax,DWORD PTR [eax]
   1ba81:	mov    eax,DWORD PTR [eax+0x8]
   1ba84:	cmp    eax,DWORD PTR ds:0x788d8
   1ba8a:	ja     0x1ba9a
   1ba8c:	mov    BYTE PTR [ebp-0x19],0x1
   1ba90:	lea    ecx,[ebp-0x28]
   1ba93:	call   0x1ad9c
   1ba98:	jmp    0x1ba77
   1ba9a:	cmp    BYTE PTR [ebp-0x19],bl
   1ba9d:	je     0x1bad5
   1ba9f:	push   DWORD PTR ds:0x788d4
   1baa5:	lea    ecx,[ebp-0x58]
   1baa8:	call   0x1b7aa
   1baad:	mov    esi,DWORD PTR [ebp+0x8]
   1bab0:	push   esi
   1bab1:	lea    eax,[ebp-0x58]
   1bab4:	push   eax
   1bab5:	call   0x1a9be
   1baba:	cmp    DWORD PTR [esi],ebx
   1babc:	jne    0x1bacd
   1babe:	lea    eax,[ebp-0x28]
   1bac1:	push   eax
   1bac2:	mov    ecx,DWORD PTR ds:0x788d0
   1bac8:	call   0x1b49e
   1bacd:	lea    ecx,[ebp-0x58]
   1bad0:	call   0x1b3ea
   1bad5:	lea    ecx,[ebp-0x28]
   1bad8:	call   0x1ad68
   1badd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bae4:	jmp    0x1baff
   1bae6:	xor    eax,eax
   1bae8:	inc    eax
   1bae9:	ret    
   1baea:	mov    esp,DWORD PTR [ebp-0x18]
   1baed:	mov    eax,DWORD PTR [ebp+0x8]
   1baf0:	mov    DWORD PTR [eax],0x2
   1baf6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1bafd:	xor    ebx,ebx
   1baff:	push   ebx
   1bb00:	push   0x788ac
   1bb05:	call   DWORD PTR ds:0x1f438
   1bb0b:	call   0x1dd85
   1bb10:	ret    0x4
   1bb13:	int3   
   1bb14:	int3   
   1bb15:	int3   
   1bb16:	int3   
   1bb17:	int3   
   1bb18:	mov    edi,edi
   1bb1a:	push   ebp
   1bb1b:	mov    ebp,esp
   1bb1d:	mov    ecx,DWORD PTR [ebp+0x8]
   1bb20:	xor    edx,edx
   1bb22:	cmp    ecx,edx
   1bb24:	je     0x1bb74
   1bb26:	mov    eax,DWORD PTR [ecx+0x1c]
   1bb29:	cmp    eax,edx
   1bb2b:	je     0x1bb74
   1bb2d:	mov    DWORD PTR [eax+0x1c],edx
   1bb30:	mov    DWORD PTR [ecx+0x14],edx
   1bb33:	mov    DWORD PTR [ecx+0x8],edx
   1bb36:	mov    DWORD PTR [ecx+0x18],edx
   1bb39:	mov    DWORD PTR [ecx+0x30],0x1
   1bb40:	lea    ecx,[eax+0x530]
   1bb46:	mov    DWORD PTR [eax],edx
   1bb48:	mov    DWORD PTR [eax+0x4],edx
   1bb4b:	mov    DWORD PTR [eax+0xc],edx
   1bb4e:	mov    DWORD PTR [eax+0x14],0x8000
   1bb55:	mov    DWORD PTR [eax+0x20],edx
   1bb58:	mov    DWORD PTR [eax+0x28],edx
   1bb5b:	mov    DWORD PTR [eax+0x2c],edx
   1bb5e:	mov    DWORD PTR [eax+0x30],edx
   1bb61:	mov    DWORD PTR [eax+0x38],edx
   1bb64:	mov    DWORD PTR [eax+0x3c],edx
   1bb67:	mov    DWORD PTR [eax+0x6c],ecx
   1bb6a:	mov    DWORD PTR [eax+0x50],ecx
   1bb6d:	mov    DWORD PTR [eax+0x4c],ecx
   1bb70:	xor    eax,eax
   1bb72:	jmp    0x1bb77
   1bb74:	push   0xfffffffe
   1bb76:	pop    eax
   1bb77:	pop    ebp
   1bb78:	ret    0x4
   1bb7b:	int3   
   1bb7c:	int3   
   1bb7d:	int3   
   1bb7e:	int3   
   1bb7f:	int3   
   1bb80:	mov    edi,edi
   1bb82:	push   ebp
   1bb83:	mov    ebp,esp
   1bb85:	mov    eax,DWORD PTR [ebp+0x10]
   1bb88:	push   esi
   1bb89:	push   edi
   1bb8a:	xor    edi,edi
   1bb8c:	cmp    eax,edi
   1bb8e:	je     0x1bc29
   1bb94:	cmp    BYTE PTR [eax],0x31
   1bb97:	jne    0x1bc29
   1bb9d:	cmp    DWORD PTR [ebp+0x14],0x38
   1bba1:	jne    0x1bc29
   1bba7:	mov    esi,DWORD PTR [ebp+0x8]
   1bbaa:	cmp    esi,edi
   1bbac:	jne    0x1bbb2
   1bbae:	push   0xfffffffe
   1bbb0:	jmp    0x1bc2b
   1bbb2:	mov    DWORD PTR [esi+0x18],edi
   1bbb5:	cmp    DWORD PTR [esi+0x20],edi
   1bbb8:	jne    0x1bbc4
   1bbba:	mov    DWORD PTR [esi+0x20],0x1cf78
   1bbc1:	mov    DWORD PTR [esi+0x28],edi
   1bbc4:	cmp    DWORD PTR [esi+0x24],edi
   1bbc7:	jne    0x1bbd0
   1bbc9:	mov    DWORD PTR [esi+0x24],0x1cf94
   1bbd0:	push   0x2530
   1bbd5:	push   0x1
   1bbd7:	push   DWORD PTR [esi+0x28]
   1bbda:	call   DWORD PTR [esi+0x20]
   1bbdd:	cmp    eax,edi
   1bbdf:	jne    0x1bbe5
   1bbe1:	push   0xfffffffc
   1bbe3:	jmp    0x1bc2b
   1bbe5:	mov    ecx,DWORD PTR [ebp+0xc]
   1bbe8:	cmp    ecx,edi
   1bbea:	mov    DWORD PTR [esi+0x1c],eax
   1bbed:	jge    0x1bbf6
   1bbef:	mov    DWORD PTR [eax+0x8],edi
   1bbf2:	neg    ecx
   1bbf4:	jmp    0x1bc07
   1bbf6:	mov    edx,ecx
   1bbf8:	sar    edx,0x4
   1bbfb:	inc    edx
   1bbfc:	cmp    ecx,0x30
   1bbff:	mov    DWORD PTR [eax+0x8],edx
   1bc02:	jge    0x1bc07
   1bc04:	and    ecx,0xf
   1bc07:	lea    edx,[ecx-0x8]
   1bc0a:	cmp    edx,0x7
   1bc0d:	ja     0x1bc1d
   1bc0f:	push   esi
   1bc10:	mov    DWORD PTR [eax+0x24],ecx
   1bc13:	mov    DWORD PTR [eax+0x34],edi
   1bc16:	call   0x1bb18
   1bc1b:	jmp    0x1bc2c
   1bc1d:	push   eax
   1bc1e:	push   DWORD PTR [esi+0x28]
   1bc21:	call   DWORD PTR [esi+0x24]
   1bc24:	mov    DWORD PTR [esi+0x1c],edi
   1bc27:	jmp    0x1bbae
   1bc29:	push   0xfffffffa
   1bc2b:	pop    eax
   1bc2c:	pop    edi
   1bc2d:	pop    esi
   1bc2e:	pop    ebp
   1bc2f:	ret    0x10
   1bc32:	int3   
   1bc33:	int3   
   1bc34:	int3   
   1bc35:	int3   
   1bc36:	int3   
   1bc37:	int3   
   1bc38:	mov    edi,edi
   1bc3a:	push   ebp
   1bc3b:	mov    ebp,esp
   1bc3d:	push   ecx
   1bc3e:	push   ebx
   1bc3f:	push   esi
   1bc40:	mov    esi,DWORD PTR [edi+0x1c]
   1bc43:	cmp    DWORD PTR [esi+0x34],0x0
   1bc47:	mov    ebx,eax
   1bc49:	jne    0x1bc69
   1bc4b:	mov    ecx,DWORD PTR [esi+0x24]
   1bc4e:	xor    eax,eax
   1bc50:	inc    eax
   1bc51:	shl    eax,cl
   1bc53:	push   0x1
   1bc55:	push   eax
   1bc56:	push   DWORD PTR [edi+0x28]
   1bc59:	call   DWORD PTR [edi+0x20]
   1bc5c:	mov    DWORD PTR [esi+0x34],eax
   1bc5f:	test   eax,eax
   1bc61:	jne    0x1bc69
   1bc63:	inc    eax
   1bc64:	jmp    0x1bd0b
   1bc69:	xor    eax,eax
   1bc6b:	cmp    DWORD PTR [esi+0x28],eax
   1bc6e:	jne    0x1bc81
   1bc70:	mov    ecx,DWORD PTR [esi+0x24]
   1bc73:	xor    edx,edx
   1bc75:	inc    edx
   1bc76:	shl    edx,cl
   1bc78:	mov    DWORD PTR [esi+0x30],eax
   1bc7b:	mov    DWORD PTR [esi+0x2c],eax
   1bc7e:	mov    DWORD PTR [esi+0x28],edx
   1bc81:	sub    ebx,DWORD PTR [edi+0x10]
   1bc84:	mov    eax,DWORD PTR [esi+0x28]
   1bc87:	cmp    ebx,eax
   1bc89:	jb     0x1bca3
   1bc8b:	mov    ecx,DWORD PTR [edi+0xc]
   1bc8e:	push   eax
   1bc8f:	sub    ecx,eax
   1bc91:	push   ecx
   1bc92:	push   DWORD PTR [esi+0x34]
   1bc95:	call   0x1dd1a
   1bc9a:	add    esp,0xc
   1bc9d:	and    DWORD PTR [esi+0x30],0x0
   1bca1:	jmp    0x1bce4
   1bca3:	sub    eax,DWORD PTR [esi+0x30]
   1bca6:	mov    DWORD PTR [ebp-0x4],eax
   1bca9:	cmp    eax,ebx
   1bcab:	jbe    0x1bcb0
   1bcad:	mov    DWORD PTR [ebp-0x4],ebx
   1bcb0:	mov    eax,DWORD PTR [edi+0xc]
   1bcb3:	push   DWORD PTR [ebp-0x4]
   1bcb6:	sub    eax,ebx
   1bcb8:	push   eax
   1bcb9:	mov    eax,DWORD PTR [esi+0x34]
   1bcbc:	add    eax,DWORD PTR [esi+0x30]
   1bcbf:	push   eax
   1bcc0:	call   0x1dd1a
   1bcc5:	mov    eax,DWORD PTR [ebp-0x4]
   1bcc8:	add    esp,0xc
   1bccb:	sub    ebx,eax
   1bccd:	je     0x1bcec
   1bccf:	mov    eax,DWORD PTR [edi+0xc]
   1bcd2:	push   ebx
   1bcd3:	sub    eax,ebx
   1bcd5:	push   eax
   1bcd6:	push   DWORD PTR [esi+0x34]
   1bcd9:	call   0x1dd1a
   1bcde:	add    esp,0xc
   1bce1:	mov    DWORD PTR [esi+0x30],ebx
   1bce4:	mov    eax,DWORD PTR [esi+0x28]
   1bce7:	mov    DWORD PTR [esi+0x2c],eax
   1bcea:	jmp    0x1bd09
   1bcec:	add    DWORD PTR [esi+0x30],eax
   1bcef:	mov    ecx,DWORD PTR [esi+0x30]
   1bcf2:	mov    edx,DWORD PTR [esi+0x28]
   1bcf5:	cmp    ecx,edx
   1bcf7:	jne    0x1bcfd
   1bcf9:	and    DWORD PTR [esi+0x30],0x0
   1bcfd:	mov    ecx,DWORD PTR [esi+0x2c]
   1bd00:	cmp    ecx,edx
   1bd02:	jae    0x1bd09
   1bd04:	add    ecx,eax
   1bd06:	mov    DWORD PTR [esi+0x2c],ecx
   1bd09:	xor    eax,eax
   1bd0b:	pop    esi
   1bd0c:	pop    ebx
   1bd0d:	leave  
   1bd0e:	ret    
   1bd0f:	int3   
   1bd10:	int3   
   1bd11:	int3   
   1bd12:	int3   
   1bd13:	int3   
   1bd14:	mov    edi,edi
   1bd16:	push   ebp
   1bd17:	mov    ebp,esp
   1bd19:	mov    edx,DWORD PTR [ebp+0x8]
   1bd1c:	sub    esp,0x2c
   1bd1f:	push   ebx
   1bd20:	xor    eax,eax
   1bd22:	push   esi
   1bd23:	push   edi
   1bd24:	cmp    edx,eax
   1bd26:	je     0x1bd76
   1bd28:	mov    esi,DWORD PTR [edx+0x1c]
   1bd2b:	cmp    esi,eax
   1bd2d:	je     0x1bd76
   1bd2f:	cmp    DWORD PTR [edx+0xc],eax
   1bd32:	je     0x1bd76
   1bd34:	cmp    DWORD PTR [edx],eax
   1bd36:	jne    0x1bd3d
   1bd38:	cmp    DWORD PTR [edx+0x4],eax
   1bd3b:	jne    0x1bd76
   1bd3d:	cmp    DWORD PTR [esi],0xb
   1bd40:	jne    0x1bd48
   1bd42:	mov    DWORD PTR [esi],0xc
   1bd48:	mov    eax,DWORD PTR [edx+0xc]
   1bd4b:	mov    ecx,DWORD PTR [edx+0x10]
   1bd4e:	and    DWORD PTR [ebp-0x24],0x0
   1bd52:	mov    ebx,DWORD PTR [esi+0x38]
   1bd55:	mov    edi,DWORD PTR [esi+0x3c]
   1bd58:	mov    DWORD PTR [ebp-0x18],eax
   1bd5b:	mov    eax,DWORD PTR [edx]
   1bd5d:	mov    DWORD PTR [ebp-0x4],eax
   1bd60:	mov    eax,DWORD PTR [edx+0x4]
   1bd63:	mov    DWORD PTR [ebp-0x8],eax
   1bd66:	mov    DWORD PTR [ebp-0x2c],eax
   1bd69:	mov    eax,DWORD PTR [esi]
   1bd6b:	mov    DWORD PTR [ebp-0x10],ecx
   1bd6e:	mov    DWORD PTR [ebp-0x1c],ecx
   1bd71:	cmp    eax,0x1c
   1bd74:	jbe    0x1bd83
   1bd76:	push   0xfffffffe
   1bd78:	pop    eax
   1bd79:	pop    edi
   1bd7a:	pop    esi
   1bd7b:	pop    ebx
   1bd7c:	leave  
   1bd7d:	ret    0x8
   1bd80:	mov    edx,DWORD PTR [ebp+0x8]
   1bd83:	jmp    DWORD PTR [eax*4+0x1ceb8]
   1bd8a:	mov    eax,DWORD PTR [esi+0x8]
   1bd8d:	test   eax,eax
   1bd8f:	jne    0x1bdbb
   1bd91:	mov    DWORD PTR [esi],0xc
   1bd97:	jmp    0x1cd89
   1bd9c:	cmp    DWORD PTR [ebp-0x8],0x0
   1bda0:	je     0x1cdd7
   1bda6:	mov    ecx,DWORD PTR [ebp-0x4]
   1bda9:	movzx  edx,BYTE PTR [ecx]
   1bdac:	dec    DWORD PTR [ebp-0x8]
   1bdaf:	mov    ecx,edi
   1bdb1:	shl    edx,cl
   1bdb3:	add    ebx,edx
   1bdb5:	inc    DWORD PTR [ebp-0x4]
   1bdb8:	add    edi,0x8
   1bdbb:	cmp    edi,0x10
   1bdbe:	jb     0x1bd9c
   1bdc0:	test   al,0x2
   1bdc2:	je     0x1bdff
   1bdc4:	cmp    ebx,0x8b1f
   1bdca:	jne    0x1bdff
   1bdcc:	xor    edi,edi
   1bdce:	push   edi
   1bdcf:	push   edi
   1bdd0:	push   edi
   1bdd1:	call   0x1dc3a
   1bdd6:	mov    DWORD PTR [esi+0x18],eax
   1bdd9:	push   0x2
   1bddb:	lea    eax,[ebp-0x14]
   1bdde:	push   eax
   1bddf:	mov    BYTE PTR [ebp-0x14],0x1f
   1bde3:	mov    BYTE PTR [ebp-0x13],0x8b
   1bde7:	push   DWORD PTR [esi+0x18]
   1bdea:	call   0x1dc3a
   1bdef:	mov    DWORD PTR [esi+0x18],eax
   1bdf2:	xor    ebx,ebx
   1bdf4:	mov    DWORD PTR [esi],0x1
   1bdfa:	jmp    0x1cd89
   1bdff:	mov    eax,DWORD PTR [esi+0x20]
   1be02:	and    DWORD PTR [esi+0x10],0x0
   1be06:	test   eax,eax
   1be08:	je     0x1be0e
   1be0a:	or     DWORD PTR [eax+0x30],0xffffffff
   1be0e:	test   BYTE PTR [esi+0x8],0x1
   1be12:	je     0x1be98
   1be18:	movzx  eax,bl
   1be1b:	shl    eax,0x8
   1be1e:	mov    ecx,ebx
   1be20:	shr    ecx,0x8
   1be23:	add    eax,ecx
   1be25:	push   0x1f
   1be27:	xor    edx,edx
   1be29:	pop    ecx
   1be2a:	div    ecx
   1be2c:	test   edx,edx
   1be2e:	jne    0x1be98
   1be30:	mov    eax,ebx
   1be32:	and    al,0xf
   1be34:	cmp    al,0x8
   1be36:	je     0x1be47
   1be38:	mov    eax,DWORD PTR [ebp+0x8]
   1be3b:	mov    DWORD PTR [eax+0x18],0x1f28c
   1be42:	jmp    0x1cd83
   1be47:	shr    ebx,0x4
   1be4a:	mov    ecx,ebx
   1be4c:	and    ecx,0xf
   1be4f:	add    ecx,0x8
   1be52:	sub    edi,0x4
   1be55:	cmp    ecx,DWORD PTR [esi+0x24]
   1be58:	jbe    0x1be69
   1be5a:	mov    eax,DWORD PTR [ebp+0x8]
   1be5d:	mov    DWORD PTR [eax+0x18],0x1f278
   1be64:	jmp    0x1cd83
   1be69:	xor    eax,eax
   1be6b:	xor    edi,edi
   1be6d:	inc    eax
   1be6e:	push   edi
   1be6f:	shl    eax,cl
   1be71:	push   edi
   1be72:	push   edi
   1be73:	mov    DWORD PTR [esi+0x14],eax
   1be76:	call   0x1d798
   1be7b:	mov    ecx,DWORD PTR [ebp+0x8]
   1be7e:	shr    ebx,0x8
   1be81:	not    ebx
   1be83:	and    ebx,0x2
   1be86:	or     ebx,0x9
   1be89:	mov    DWORD PTR [esi+0x18],eax
   1be8c:	mov    DWORD PTR [ecx+0x30],eax
   1be8f:	mov    DWORD PTR [esi],ebx
   1be91:	xor    ebx,ebx
   1be93:	jmp    0x1cd89
   1be98:	mov    eax,DWORD PTR [ebp+0x8]
   1be9b:	mov    DWORD PTR [eax+0x18],0x1f260
   1bea2:	jmp    0x1cd83
   1bea7:	cmp    edi,0x10
   1beaa:	jae    0x1bed3
   1beac:	cmp    DWORD PTR [ebp-0x8],0x0
   1beb0:	je     0x1cdd7
   1beb6:	mov    eax,DWORD PTR [ebp-0x4]
   1beb9:	movzx  eax,BYTE PTR [eax]
   1bebc:	dec    DWORD PTR [ebp-0x8]
   1bebf:	mov    ecx,edi
   1bec1:	shl    eax,cl
   1bec3:	add    edi,0x8
   1bec6:	add    ebx,eax
   1bec8:	inc    DWORD PTR [ebp-0x4]
   1becb:	cmp    edi,0x10
   1bece:	jb     0x1beac
   1bed0:	mov    edx,DWORD PTR [ebp+0x8]
   1bed3:	mov    DWORD PTR [esi+0x10],ebx
   1bed6:	cmp    bl,0x8
   1bed9:	je     0x1bee7
   1bedb:	mov    DWORD PTR [edx+0x18],0x1f28c
   1bee2:	jmp    0x1cd83
   1bee7:	test   ebx,0xe000
   1beed:	je     0x1befb
   1beef:	mov    DWORD PTR [edx+0x18],0x1f246
   1bef6:	jmp    0x1cd83
   1befb:	mov    eax,DWORD PTR [esi+0x20]
   1befe:	test   eax,eax
   1bf00:	je     0x1bf0c
   1bf02:	mov    ecx,ebx
   1bf04:	shr    ecx,0x8
   1bf07:	and    ecx,0x1
   1bf0a:	mov    DWORD PTR [eax],ecx
   1bf0c:	test   DWORD PTR [esi+0x10],0x200
   1bf13:	je     0x1bf32
   1bf15:	mov    BYTE PTR [ebp-0x14],bl
   1bf18:	push   0x2
   1bf1a:	lea    eax,[ebp-0x14]
   1bf1d:	shr    ebx,0x8
   1bf20:	push   eax
   1bf21:	mov    BYTE PTR [ebp-0x13],bl
   1bf24:	push   DWORD PTR [esi+0x18]
   1bf27:	call   0x1dc3a
   1bf2c:	mov    edx,DWORD PTR [ebp+0x8]
   1bf2f:	mov    DWORD PTR [esi+0x18],eax
   1bf32:	xor    ebx,ebx
   1bf34:	xor    edi,edi
   1bf36:	mov    DWORD PTR [esi],0x2
   1bf3c:	cmp    edi,0x20
   1bf3f:	jae    0x1bf68
   1bf41:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf45:	je     0x1cdd7
   1bf4b:	mov    eax,DWORD PTR [ebp-0x4]
   1bf4e:	movzx  eax,BYTE PTR [eax]
   1bf51:	dec    DWORD PTR [ebp-0x8]
   1bf54:	mov    ecx,edi
   1bf56:	shl    eax,cl
   1bf58:	add    edi,0x8
   1bf5b:	add    ebx,eax
   1bf5d:	inc    DWORD PTR [ebp-0x4]
   1bf60:	cmp    edi,0x20
   1bf63:	jb     0x1bf41
   1bf65:	mov    edx,DWORD PTR [ebp+0x8]
   1bf68:	mov    eax,DWORD PTR [esi+0x20]
   1bf6b:	test   eax,eax
   1bf6d:	je     0x1bf72
   1bf6f:	mov    DWORD PTR [eax+0x4],ebx
   1bf72:	test   DWORD PTR [esi+0x10],0x200
   1bf79:	je     0x1bfa8
   1bf7b:	mov    eax,ebx
   1bf7d:	shr    eax,0x8
   1bf80:	mov    BYTE PTR [ebp-0x13],al
   1bf83:	mov    eax,ebx
   1bf85:	shr    eax,0x10
   1bf88:	mov    BYTE PTR [ebp-0x12],al
   1bf8b:	mov    BYTE PTR [ebp-0x14],bl
   1bf8e:	push   0x4
   1bf90:	lea    eax,[ebp-0x14]
   1bf93:	shr    ebx,0x18
   1bf96:	push   eax
   1bf97:	mov    BYTE PTR [ebp-0x11],bl
   1bf9a:	push   DWORD PTR [esi+0x18]
   1bf9d:	call   0x1dc3a
   1bfa2:	mov    edx,DWORD PTR [ebp+0x8]
   1bfa5:	mov    DWORD PTR [esi+0x18],eax
   1bfa8:	xor    ebx,ebx
   1bfaa:	xor    edi,edi
   1bfac:	mov    DWORD PTR [esi],0x3
   1bfb2:	cmp    edi,0x10
   1bfb5:	jae    0x1bfde
   1bfb7:	cmp    DWORD PTR [ebp-0x8],0x0
   1bfbb:	je     0x1cdd7
   1bfc1:	mov    eax,DWORD PTR [ebp-0x4]
   1bfc4:	movzx  eax,BYTE PTR [eax]
   1bfc7:	dec    DWORD PTR [ebp-0x8]
   1bfca:	mov    ecx,edi
   1bfcc:	shl    eax,cl
   1bfce:	add    edi,0x8
   1bfd1:	add    ebx,eax
   1bfd3:	inc    DWORD PTR [ebp-0x4]
   1bfd6:	cmp    edi,0x10
   1bfd9:	jb     0x1bfb7
   1bfdb:	mov    edx,DWORD PTR [ebp+0x8]
   1bfde:	mov    eax,DWORD PTR [esi+0x20]
   1bfe1:	test   eax,eax
   1bfe3:	je     0x1bffb
   1bfe5:	mov    ecx,ebx
   1bfe7:	and    ecx,0xff
   1bfed:	mov    DWORD PTR [eax+0x8],ecx
   1bff0:	mov    ecx,DWORD PTR [esi+0x20]
   1bff3:	mov    eax,ebx
   1bff5:	shr    eax,0x8
   1bff8:	mov    DWORD PTR [ecx+0xc],eax
   1bffb:	test   DWORD PTR [esi+0x10],0x200
   1c002:	je     0x1c021
   1c004:	mov    BYTE PTR [ebp-0x14],bl
   1c007:	push   0x2
   1c009:	lea    eax,[ebp-0x14]
   1c00c:	shr    ebx,0x8
   1c00f:	push   eax
   1c010:	mov    BYTE PTR [ebp-0x13],bl
   1c013:	push   DWORD PTR [esi+0x18]
   1c016:	call   0x1dc3a
   1c01b:	mov    edx,DWORD PTR [ebp+0x8]
   1c01e:	mov    DWORD PTR [esi+0x18],eax
   1c021:	xor    ebx,ebx
   1c023:	xor    edi,edi
   1c025:	mov    DWORD PTR [esi],0x4
   1c02b:	test   DWORD PTR [esi+0x10],0x400
   1c032:	je     0x1c099
   1c034:	cmp    edi,0x10
   1c037:	jae    0x1c060
   1c039:	cmp    DWORD PTR [ebp-0x8],0x0
   1c03d:	je     0x1cdd7
   1c043:	mov    eax,DWORD PTR [ebp-0x4]
   1c046:	movzx  eax,BYTE PTR [eax]
   1c049:	dec    DWORD PTR [ebp-0x8]
   1c04c:	mov    ecx,edi
   1c04e:	shl    eax,cl
   1c050:	add    edi,0x8
   1c053:	add    ebx,eax
   1c055:	inc    DWORD PTR [ebp-0x4]
   1c058:	cmp    edi,0x10
   1c05b:	jb     0x1c039
   1c05d:	mov    edx,DWORD PTR [ebp+0x8]
   1c060:	mov    eax,DWORD PTR [esi+0x20]
   1c063:	mov    DWORD PTR [esi+0x40],ebx
   1c066:	test   eax,eax
   1c068:	je     0x1c06d
   1c06a:	mov    DWORD PTR [eax+0x14],ebx
   1c06d:	test   DWORD PTR [esi+0x10],0x200
   1c074:	je     0x1c093
   1c076:	mov    BYTE PTR [ebp-0x14],bl
   1c079:	push   0x2
   1c07b:	lea    eax,[ebp-0x14]
   1c07e:	shr    ebx,0x8
   1c081:	push   eax
   1c082:	mov    BYTE PTR [ebp-0x13],bl
   1c085:	push   DWORD PTR [esi+0x18]
   1c088:	call   0x1dc3a
   1c08d:	mov    edx,DWORD PTR [ebp+0x8]
   1c090:	mov    DWORD PTR [esi+0x18],eax
   1c093:	xor    ebx,ebx
   1c095:	xor    edi,edi
   1c097:	jmp    0x1c0a4
   1c099:	mov    eax,DWORD PTR [esi+0x20]
   1c09c:	test   eax,eax
   1c09e:	je     0x1c0a4
   1c0a0:	and    DWORD PTR [eax+0x10],0x0
   1c0a4:	mov    DWORD PTR [esi],0x5
   1c0aa:	test   DWORD PTR [esi+0x10],0x400
   1c0b1:	je     0x1c13b
   1c0b7:	mov    edx,DWORD PTR [esi+0x40]
   1c0ba:	mov    eax,DWORD PTR [ebp-0x8]
   1c0bd:	mov    DWORD PTR [ebp-0xc],edx
   1c0c0:	cmp    edx,eax
   1c0c2:	jbe    0x1c0c7
   1c0c4:	mov    DWORD PTR [ebp-0xc],eax
   1c0c7:	cmp    DWORD PTR [ebp-0xc],0x0
   1c0cb:	je     0x1c12e
   1c0cd:	mov    ecx,DWORD PTR [esi+0x20]
   1c0d0:	test   ecx,ecx
   1c0d2:	je     0x1c108
   1c0d4:	mov    eax,DWORD PTR [ecx+0x10]
   1c0d7:	mov    DWORD PTR [ebp-0x28],eax
   1c0da:	test   eax,eax
   1c0dc:	je     0x1c108
   1c0de:	mov    eax,DWORD PTR [ecx+0x14]
   1c0e1:	mov    ecx,DWORD PTR [ecx+0x18]
   1c0e4:	sub    eax,edx
   1c0e6:	mov    edx,DWORD PTR [ebp-0xc]
   1c0e9:	add    edx,eax
   1c0eb:	cmp    edx,ecx
   1c0ed:	jbe    0x1c0f3
   1c0ef:	sub    ecx,eax
   1c0f1:	jmp    0x1c0f6
   1c0f3:	mov    ecx,DWORD PTR [ebp-0xc]
   1c0f6:	push   ecx
   1c0f7:	mov    ecx,DWORD PTR [ebp-0x28]
   1c0fa:	push   DWORD PTR [ebp-0x4]
   1c0fd:	add    ecx,eax
   1c0ff:	push   ecx
   1c100:	call   0x1dd1a
   1c105:	add    esp,0xc
   1c108:	test   DWORD PTR [esi+0x10],0x200
   1c10f:	je     0x1c122
   1c111:	push   DWORD PTR [ebp-0xc]
   1c114:	push   DWORD PTR [ebp-0x4]
   1c117:	push   DWORD PTR [esi+0x18]
   1c11a:	call   0x1dc3a
   1c11f:	mov    DWORD PTR [esi+0x18],eax
   1c122:	mov    eax,DWORD PTR [ebp-0xc]
   1c125:	sub    DWORD PTR [ebp-0x8],eax
   1c128:	add    DWORD PTR [ebp-0x4],eax
   1c12b:	sub    DWORD PTR [esi+0x40],eax
   1c12e:	cmp    DWORD PTR [esi+0x40],0x0
   1c132:	jne    0x1cdd7
   1c138:	mov    edx,DWORD PTR [ebp+0x8]
   1c13b:	and    DWORD PTR [esi+0x40],0x0
   1c13f:	mov    DWORD PTR [esi],0x6
   1c145:	test   DWORD PTR [esi+0x10],0x800
   1c14c:	je     0x1c1c9
   1c14e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c152:	je     0x1cdd7
   1c158:	xor    ecx,ecx
   1c15a:	mov    eax,DWORD PTR [ebp-0x4]
   1c15d:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c161:	inc    ecx
   1c162:	mov    DWORD PTR [ebp-0xc],ecx
   1c165:	mov    ecx,DWORD PTR [esi+0x20]
   1c168:	mov    DWORD PTR [ebp-0x20],eax
   1c16b:	test   ecx,ecx
   1c16d:	je     0x1c18a
   1c16f:	mov    edx,DWORD PTR [ecx+0x1c]
   1c172:	mov    DWORD PTR [ebp-0x28],edx
   1c175:	test   edx,edx
   1c177:	je     0x1c18a
   1c179:	mov    edx,DWORD PTR [esi+0x40]
   1c17c:	cmp    edx,DWORD PTR [ecx+0x20]
   1c17f:	jae    0x1c18a
   1c181:	mov    ecx,DWORD PTR [ebp-0x28]
   1c184:	mov    BYTE PTR [ecx+edx*1],al
   1c187:	inc    DWORD PTR [esi+0x40]
   1c18a:	test   eax,eax
   1c18c:	je     0x1c196
   1c18e:	mov    ecx,DWORD PTR [ebp-0xc]
   1c191:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c194:	jb     0x1c15a
   1c196:	test   DWORD PTR [esi+0x10],0x200
   1c19d:	je     0x1c1b3
   1c19f:	push   DWORD PTR [ebp-0xc]
   1c1a2:	push   DWORD PTR [ebp-0x4]
   1c1a5:	push   DWORD PTR [esi+0x18]
   1c1a8:	call   0x1dc3a
   1c1ad:	mov    DWORD PTR [esi+0x18],eax
   1c1b0:	mov    eax,DWORD PTR [ebp-0x20]
   1c1b3:	mov    ecx,DWORD PTR [ebp-0xc]
   1c1b6:	sub    DWORD PTR [ebp-0x8],ecx
   1c1b9:	add    DWORD PTR [ebp-0x4],ecx
   1c1bc:	test   eax,eax
   1c1be:	jne    0x1cdd7
   1c1c4:	mov    edx,DWORD PTR [ebp+0x8]
   1c1c7:	jmp    0x1c1d4
   1c1c9:	mov    eax,DWORD PTR [esi+0x20]
   1c1cc:	test   eax,eax
   1c1ce:	je     0x1c1d4
   1c1d0:	and    DWORD PTR [eax+0x1c],0x0
   1c1d4:	and    DWORD PTR [esi+0x40],0x0
   1c1d8:	mov    DWORD PTR [esi],0x7
   1c1de:	test   DWORD PTR [esi+0x10],0x1000
   1c1e5:	je     0x1c262
   1c1e7:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1eb:	je     0x1cdd7
   1c1f1:	xor    ecx,ecx
   1c1f3:	mov    eax,DWORD PTR [ebp-0x4]
   1c1f6:	movzx  eax,BYTE PTR [ecx+eax*1]
   1c1fa:	inc    ecx
   1c1fb:	mov    DWORD PTR [ebp-0xc],ecx
   1c1fe:	mov    ecx,DWORD PTR [esi+0x20]
   1c201:	mov    DWORD PTR [ebp-0x20],eax
   1c204:	test   ecx,ecx
   1c206:	je     0x1c223
   1c208:	mov    edx,DWORD PTR [ecx+0x24]
   1c20b:	mov    DWORD PTR [ebp-0x28],edx
   1c20e:	test   edx,edx
   1c210:	je     0x1c223
   1c212:	mov    edx,DWORD PTR [esi+0x40]
   1c215:	cmp    edx,DWORD PTR [ecx+0x28]
   1c218:	jae    0x1c223
   1c21a:	mov    ecx,DWORD PTR [ebp-0x28]
   1c21d:	mov    BYTE PTR [ecx+edx*1],al
   1c220:	inc    DWORD PTR [esi+0x40]
   1c223:	test   eax,eax
   1c225:	je     0x1c22f
   1c227:	mov    ecx,DWORD PTR [ebp-0xc]
   1c22a:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c22d:	jb     0x1c1f3
   1c22f:	test   DWORD PTR [esi+0x10],0x200
   1c236:	je     0x1c24c
   1c238:	push   DWORD PTR [ebp-0xc]
   1c23b:	push   DWORD PTR [ebp-0x4]
   1c23e:	push   DWORD PTR [esi+0x18]
   1c241:	call   0x1dc3a
   1c246:	mov    DWORD PTR [esi+0x18],eax
   1c249:	mov    eax,DWORD PTR [ebp-0x20]
   1c24c:	mov    ecx,DWORD PTR [ebp-0xc]
   1c24f:	sub    DWORD PTR [ebp-0x8],ecx
   1c252:	add    DWORD PTR [ebp-0x4],ecx
   1c255:	test   eax,eax
   1c257:	jne    0x1cdd7
   1c25d:	mov    edx,DWORD PTR [ebp+0x8]
   1c260:	jmp    0x1c26d
   1c262:	mov    eax,DWORD PTR [esi+0x20]
   1c265:	test   eax,eax
   1c267:	je     0x1c26d
   1c269:	and    DWORD PTR [eax+0x24],0x0
   1c26d:	mov    DWORD PTR [esi],0x8
   1c273:	test   DWORD PTR [esi+0x10],0x200
   1c27a:	je     0x1c2c0
   1c27c:	cmp    edi,0x10
   1c27f:	jae    0x1c2a8
   1c281:	cmp    DWORD PTR [ebp-0x8],0x0
   1c285:	je     0x1cdd7
   1c28b:	mov    eax,DWORD PTR [ebp-0x4]
   1c28e:	movzx  eax,BYTE PTR [eax]
   1c291:	dec    DWORD PTR [ebp-0x8]
   1c294:	mov    ecx,edi
   1c296:	shl    eax,cl
   1c298:	add    edi,0x8
   1c29b:	add    ebx,eax
   1c29d:	inc    DWORD PTR [ebp-0x4]
   1c2a0:	cmp    edi,0x10
   1c2a3:	jb     0x1c281
   1c2a5:	mov    edx,DWORD PTR [ebp+0x8]
   1c2a8:	movzx  eax,WORD PTR [esi+0x18]
   1c2ac:	cmp    ebx,eax
   1c2ae:	je     0x1c2bc
   1c2b0:	mov    DWORD PTR [edx+0x18],0x1f232
   1c2b7:	jmp    0x1cd83
   1c2bc:	xor    ebx,ebx
   1c2be:	xor    edi,edi
   1c2c0:	mov    eax,DWORD PTR [esi+0x20]
   1c2c3:	test   eax,eax
   1c2c5:	je     0x1c2db
   1c2c7:	mov    edx,DWORD PTR [esi+0x10]
   1c2ca:	xor    ecx,ecx
   1c2cc:	inc    ecx
   1c2cd:	sar    edx,0x9
   1c2d0:	and    edx,ecx
   1c2d2:	mov    DWORD PTR [eax+0x2c],edx
   1c2d5:	mov    eax,DWORD PTR [esi+0x20]
   1c2d8:	mov    DWORD PTR [eax+0x30],ecx
   1c2db:	xor    eax,eax
   1c2dd:	push   eax
   1c2de:	push   eax
   1c2df:	push   eax
   1c2e0:	call   0x1dc3a
   1c2e5:	mov    ecx,DWORD PTR [ebp+0x8]
   1c2e8:	mov    DWORD PTR [esi+0x18],eax
   1c2eb:	mov    DWORD PTR [ecx+0x30],eax
   1c2ee:	jmp    0x1c9ec
   1c2f3:	cmp    edi,0x20
   1c2f6:	jae    0x1c31f
   1c2f8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2fc:	je     0x1cdd7
   1c302:	mov    eax,DWORD PTR [ebp-0x4]
   1c305:	movzx  eax,BYTE PTR [eax]
   1c308:	dec    DWORD PTR [ebp-0x8]
   1c30b:	mov    ecx,edi
   1c30d:	shl    eax,cl
   1c30f:	add    edi,0x8
   1c312:	add    ebx,eax
   1c314:	inc    DWORD PTR [ebp-0x4]
   1c317:	cmp    edi,0x20
   1c31a:	jb     0x1c2f8
   1c31c:	mov    edx,DWORD PTR [ebp+0x8]
   1c31f:	mov    ecx,ebx
   1c321:	mov    eax,0xff00
   1c326:	and    ecx,eax
   1c328:	mov    edi,ebx
   1c32a:	shl    edi,0x10
   1c32d:	add    ecx,edi
   1c32f:	mov    edi,ebx
   1c331:	shr    edi,0x8
   1c334:	and    edi,eax
   1c336:	shl    ecx,0x8
   1c339:	shr    ebx,0x18
   1c33c:	add    ecx,edi
   1c33e:	lea    eax,[ecx+ebx*1]
   1c341:	mov    DWORD PTR [esi+0x18],eax
   1c344:	mov    DWORD PTR [edx+0x30],eax
   1c347:	xor    ebx,ebx
   1c349:	xor    edi,edi
   1c34b:	mov    DWORD PTR [esi],0xa
   1c351:	cmp    DWORD PTR [esi+0xc],0x0
   1c355:	je     0x1cd99
   1c35b:	xor    eax,eax
   1c35d:	push   eax
   1c35e:	push   eax
   1c35f:	push   eax
   1c360:	call   0x1d798
   1c365:	mov    ecx,DWORD PTR [ebp+0x8]
   1c368:	mov    DWORD PTR [esi+0x18],eax
   1c36b:	mov    DWORD PTR [ecx+0x30],eax
   1c36e:	mov    DWORD PTR [esi],0xb
   1c374:	cmp    DWORD PTR [ebp+0xc],0x5
   1c378:	je     0x1cdd7
   1c37e:	mov    edx,DWORD PTR [ebp+0x8]
   1c381:	cmp    DWORD PTR [esi+0x4],0x0
   1c385:	je     0x1c39b
   1c387:	mov    ecx,edi
   1c389:	and    ecx,0x7
   1c38c:	shr    ebx,cl
   1c38e:	sub    edi,ecx
   1c390:	mov    DWORD PTR [esi],0x18
   1c396:	jmp    0x1cd89
   1c39b:	cmp    edi,0x3
   1c39e:	jae    0x1c3c7
   1c3a0:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3a4:	je     0x1cdd7
   1c3aa:	mov    eax,DWORD PTR [ebp-0x4]
   1c3ad:	movzx  eax,BYTE PTR [eax]
   1c3b0:	dec    DWORD PTR [ebp-0x8]
   1c3b3:	mov    ecx,edi
   1c3b5:	shl    eax,cl
   1c3b7:	add    edi,0x8
   1c3ba:	add    ebx,eax
   1c3bc:	inc    DWORD PTR [ebp-0x4]
   1c3bf:	cmp    edi,0x3
   1c3c2:	jb     0x1c3a0
   1c3c4:	mov    edx,DWORD PTR [ebp+0x8]
   1c3c7:	mov    eax,ebx
   1c3c9:	and    eax,0x1
   1c3cc:	shr    ebx,1
   1c3ce:	mov    DWORD PTR [esi+0x4],eax
   1c3d1:	mov    eax,ebx
   1c3d3:	and    eax,0x3
   1c3d6:	dec    edi
   1c3d7:	sub    eax,0x0
   1c3da:	je     0x1c420
   1c3dc:	dec    eax
   1c3dd:	je     0x1c3fc
   1c3df:	dec    eax
   1c3e0:	je     0x1c3f4
   1c3e2:	dec    eax
   1c3e3:	jne    0x1c426
   1c3e5:	mov    DWORD PTR [edx+0x18],0x1f21e
   1c3ec:	mov    DWORD PTR [esi],0x1b
   1c3f2:	jmp    0x1c426
   1c3f4:	mov    DWORD PTR [esi],0xf
   1c3fa:	jmp    0x1c426
   1c3fc:	mov    DWORD PTR [esi+0x4c],0x74b40
   1c403:	mov    DWORD PTR [esi+0x54],0x9
   1c40a:	mov    DWORD PTR [esi+0x50],0x75340
   1c411:	mov    DWORD PTR [esi+0x58],0x5
   1c418:	mov    DWORD PTR [esi],0x12
   1c41e:	jmp    0x1c426
   1c420:	mov    DWORD PTR [esi],0xd
   1c426:	shr    ebx,0x2
   1c429:	dec    edi
   1c42a:	dec    edi
   1c42b:	jmp    0x1cd89
   1c430:	mov    ecx,edi
   1c432:	and    ecx,0x7
   1c435:	sub    edi,ecx
   1c437:	shr    ebx,cl
   1c439:	cmp    edi,0x20
   1c43c:	jae    0x1c465
   1c43e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c442:	je     0x1cdd7
   1c448:	mov    eax,DWORD PTR [ebp-0x4]
   1c44b:	movzx  eax,BYTE PTR [eax]
   1c44e:	dec    DWORD PTR [ebp-0x8]
   1c451:	mov    ecx,edi
   1c453:	shl    eax,cl
   1c455:	add    edi,0x8
   1c458:	add    ebx,eax
   1c45a:	inc    DWORD PTR [ebp-0x4]
   1c45d:	cmp    edi,0x20
   1c460:	jb     0x1c43e
   1c462:	mov    edx,DWORD PTR [ebp+0x8]
   1c465:	mov    ecx,ebx
   1c467:	mov    eax,ebx
   1c469:	not    ecx
   1c46b:	and    eax,0xffff
   1c470:	shr    ecx,0x10
   1c473:	cmp    eax,ecx
   1c475:	je     0x1c483
   1c477:	mov    DWORD PTR [edx+0x18],0x1f200
   1c47e:	jmp    0x1cd83
   1c483:	xor    ebx,ebx
   1c485:	mov    DWORD PTR [esi+0x40],eax
   1c488:	xor    edi,edi
   1c48a:	mov    DWORD PTR [esi],0xe
   1c490:	mov    eax,DWORD PTR [esi+0x40]
   1c493:	mov    DWORD PTR [ebp-0xc],eax
   1c496:	test   eax,eax
   1c498:	je     0x1c9ec
   1c49e:	mov    eax,DWORD PTR [ebp-0x8]
   1c4a1:	cmp    DWORD PTR [ebp-0xc],eax
   1c4a4:	jbe    0x1c4a9
   1c4a6:	mov    DWORD PTR [ebp-0xc],eax
   1c4a9:	mov    eax,DWORD PTR [ebp-0x10]
   1c4ac:	cmp    DWORD PTR [ebp-0xc],eax
   1c4af:	jbe    0x1c4b4
   1c4b1:	mov    DWORD PTR [ebp-0xc],eax
   1c4b4:	cmp    DWORD PTR [ebp-0xc],0x0
   1c4b8:	je     0x1cdd7
   1c4be:	push   DWORD PTR [ebp-0xc]
   1c4c1:	push   DWORD PTR [ebp-0x4]
   1c4c4:	push   DWORD PTR [ebp-0x18]
   1c4c7:	call   0x1dd1a
   1c4cc:	mov    eax,DWORD PTR [ebp-0xc]
   1c4cf:	sub    DWORD PTR [ebp-0x8],eax
   1c4d2:	add    DWORD PTR [ebp-0x4],eax
   1c4d5:	sub    DWORD PTR [ebp-0x10],eax
   1c4d8:	add    DWORD PTR [ebp-0x18],eax
   1c4db:	add    esp,0xc
   1c4de:	sub    DWORD PTR [esi+0x40],eax
   1c4e1:	jmp    0x1cd89
   1c4e6:	cmp    edi,0xe
   1c4e9:	jae    0x1c512
   1c4eb:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4ef:	je     0x1cdd7
   1c4f5:	mov    eax,DWORD PTR [ebp-0x4]
   1c4f8:	movzx  eax,BYTE PTR [eax]
   1c4fb:	dec    DWORD PTR [ebp-0x8]
   1c4fe:	mov    ecx,edi
   1c500:	shl    eax,cl
   1c502:	add    edi,0x8
   1c505:	add    ebx,eax
   1c507:	inc    DWORD PTR [ebp-0x4]
   1c50a:	cmp    edi,0xe
   1c50d:	jb     0x1c4eb
   1c50f:	mov    edx,DWORD PTR [ebp+0x8]
   1c512:	mov    eax,ebx
   1c514:	and    eax,0x1f
   1c517:	add    eax,0x101
   1c51c:	mov    DWORD PTR [esi+0x60],eax
   1c51f:	shr    ebx,0x5
   1c522:	mov    eax,ebx
   1c524:	and    eax,0x1f
   1c527:	inc    eax
   1c528:	shr    ebx,0x5
   1c52b:	mov    DWORD PTR [esi+0x64],eax
   1c52e:	mov    eax,ebx
   1c530:	and    eax,0xf
   1c533:	add    eax,0x4
   1c536:	shr    ebx,0x4
   1c539:	sub    edi,0xe
   1c53c:	cmp    DWORD PTR [esi+0x60],0x11e
   1c543:	mov    DWORD PTR [esi+0x5c],eax
   1c546:	ja     0x1c55a
   1c548:	cmp    DWORD PTR [esi+0x64],0x1e
   1c54c:	ja     0x1c55a
   1c54e:	and    DWORD PTR [esi+0x68],0x0
   1c552:	mov    DWORD PTR [esi],0x10
   1c558:	jmp    0x1c5a8
   1c55a:	mov    DWORD PTR [edx+0x18],0x1f1dc
   1c561:	jmp    0x1cd83
   1c566:	cmp    DWORD PTR [ebp-0x8],0x0
   1c56a:	je     0x1cdd7
   1c570:	mov    eax,DWORD PTR [ebp-0x4]
   1c573:	movzx  eax,BYTE PTR [eax]
   1c576:	dec    DWORD PTR [ebp-0x8]
   1c579:	mov    ecx,edi
   1c57b:	shl    eax,cl
   1c57d:	add    ebx,eax
   1c57f:	inc    DWORD PTR [ebp-0x4]
   1c582:	add    edi,0x8
   1c585:	cmp    edi,0x3
   1c588:	jb     0x1c566
   1c58a:	mov    ecx,DWORD PTR [esi+0x68]
   1c58d:	movzx  ecx,WORD PTR [ecx*2+0x753c0]
   1c595:	mov    eax,ebx
   1c597:	and    eax,0x7
   1c59a:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c59f:	inc    DWORD PTR [esi+0x68]
   1c5a2:	shr    ebx,0x3
   1c5a5:	sub    edi,0x3
   1c5a8:	mov    eax,DWORD PTR [esi+0x68]
   1c5ab:	cmp    eax,DWORD PTR [esi+0x5c]
   1c5ae:	jb     0x1c585
   1c5b0:	jmp    0x1c5c7
   1c5b2:	mov    eax,DWORD PTR [esi+0x68]
   1c5b5:	movzx  eax,WORD PTR [eax*2+0x753c0]
   1c5bd:	xor    ecx,ecx
   1c5bf:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c5c4:	inc    DWORD PTR [esi+0x68]
   1c5c7:	cmp    DWORD PTR [esi+0x68],0x13
   1c5cb:	jb     0x1c5b2
   1c5cd:	lea    eax,[esi+0x530]
   1c5d3:	lea    ecx,[esi+0x6c]
   1c5d6:	mov    DWORD PTR [ecx],eax
   1c5d8:	mov    DWORD PTR [esi+0x4c],eax
   1c5db:	lea    edx,[esi+0x2f0]
   1c5e1:	push   edx
   1c5e2:	lea    eax,[esi+0x54]
   1c5e5:	push   eax
   1c5e6:	push   ecx
   1c5e7:	mov    DWORD PTR [eax],0x7
   1c5ed:	push   0x13
   1c5ef:	lea    eax,[esi+0x70]
   1c5f2:	push   eax
   1c5f3:	push   0x0
   1c5f5:	call   0x1d392
   1c5fa:	mov    DWORD PTR [ebp-0x24],eax
   1c5fd:	test   eax,eax
   1c5ff:	je     0x1c610
   1c601:	mov    eax,DWORD PTR [ebp+0x8]
   1c604:	mov    DWORD PTR [eax+0x18],0x1f1c2
   1c60b:	jmp    0x1cd83
   1c610:	and    DWORD PTR [esi+0x68],0x0
   1c614:	mov    DWORD PTR [esi],0x11
   1c61a:	jmp    0x1c816
   1c61f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c623:	je     0x1cdd7
   1c629:	mov    eax,DWORD PTR [ebp-0x4]
   1c62c:	movzx  eax,BYTE PTR [eax]
   1c62f:	dec    DWORD PTR [ebp-0x8]
   1c632:	mov    ecx,edi
   1c634:	shl    eax,cl
   1c636:	add    ebx,eax
   1c638:	inc    DWORD PTR [ebp-0x4]
   1c63b:	add    edi,0x8
   1c63e:	mov    ecx,DWORD PTR [esi+0x54]
   1c641:	xor    eax,eax
   1c643:	inc    eax
   1c644:	shl    eax,cl
   1c646:	mov    ecx,DWORD PTR [esi+0x4c]
   1c649:	dec    eax
   1c64a:	and    eax,ebx
   1c64c:	mov    eax,DWORD PTR [ecx+eax*4]
   1c64f:	mov    ecx,eax
   1c651:	shr    ecx,0x8
   1c654:	movzx  ecx,cl
   1c657:	mov    DWORD PTR [ebp-0x20],eax
   1c65a:	cmp    ecx,edi
   1c65c:	ja     0x1c61f
   1c65e:	mov    ecx,eax
   1c660:	shr    ecx,0x10
   1c663:	cmp    cx,0x10
   1c667:	jae    0x1c6b4
   1c669:	mov    ecx,eax
   1c66b:	shr    ecx,0x8
   1c66e:	movzx  ecx,cl
   1c671:	jmp    0x1c695
   1c673:	cmp    DWORD PTR [ebp-0x8],0x0
   1c677:	je     0x1cdd7
   1c67d:	mov    ecx,DWORD PTR [ebp-0x4]
   1c680:	movzx  edx,BYTE PTR [ecx]
   1c683:	dec    DWORD PTR [ebp-0x8]
   1c686:	mov    ecx,edi
   1c688:	shl    edx,cl
   1c68a:	movzx  ecx,ah
   1c68d:	add    ebx,edx
   1c68f:	inc    DWORD PTR [ebp-0x4]
   1c692:	add    edi,0x8
   1c695:	cmp    edi,ecx
   1c697:	jb     0x1c673
   1c699:	movzx  ecx,ah
   1c69c:	mov    eax,DWORD PTR [esi+0x68]
   1c69f:	shr    ebx,cl
   1c6a1:	sub    edi,ecx
   1c6a3:	mov    cx,WORD PTR [ebp-0x1e]
   1c6a7:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c6ac:	inc    DWORD PTR [esi+0x68]
   1c6af:	jmp    0x1c816
   1c6b4:	cmp    WORD PTR [ebp-0x1e],0x10
   1c6b9:	jne    0x1c711
   1c6bb:	movzx  eax,ah
   1c6be:	jmp    0x1c6df
   1c6c0:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6c4:	je     0x1cdd7
   1c6ca:	mov    ecx,DWORD PTR [ebp-0x4]
   1c6cd:	movzx  edx,BYTE PTR [ecx]
   1c6d0:	dec    DWORD PTR [ebp-0x8]
   1c6d3:	mov    ecx,edi
   1c6d5:	shl    edx,cl
   1c6d7:	add    ebx,edx
   1c6d9:	inc    DWORD PTR [ebp-0x4]
   1c6dc:	add    edi,0x8
   1c6df:	lea    ecx,[eax+0x2]
   1c6e2:	cmp    edi,ecx
   1c6e4:	jb     0x1c6c0
   1c6e6:	mov    ecx,eax
   1c6e8:	sub    edi,eax
   1c6ea:	mov    eax,DWORD PTR [esi+0x68]
   1c6ed:	shr    ebx,cl
   1c6ef:	test   eax,eax
   1c6f1:	je     0x1c827
   1c6f7:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c6fc:	mov    DWORD PTR [ebp-0x20],eax
   1c6ff:	mov    eax,ebx
   1c701:	and    eax,0x3
   1c704:	add    eax,0x3
   1c707:	shr    ebx,0x2
   1c70a:	dec    edi
   1c70b:	dec    edi
   1c70c:	jmp    0x1c796
   1c711:	cmp    WORD PTR [ebp-0x1e],0x11
   1c716:	movzx  edx,ah
   1c719:	jne    0x1c775
   1c71b:	jmp    0x1c73c
   1c71d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c721:	je     0x1cdd7
   1c727:	mov    eax,DWORD PTR [ebp-0x4]
   1c72a:	movzx  eax,BYTE PTR [eax]
   1c72d:	dec    DWORD PTR [ebp-0x8]
   1c730:	mov    ecx,edi
   1c732:	shl    eax,cl
   1c734:	add    ebx,eax
   1c736:	inc    DWORD PTR [ebp-0x4]
   1c739:	add    edi,0x8
   1c73c:	lea    eax,[edx+0x3]
   1c73f:	cmp    edi,eax
   1c741:	jb     0x1c71d
   1c743:	mov    ecx,edx
   1c745:	shr    ebx,cl
   1c747:	push   0xfffffffd
   1c749:	mov    eax,ebx
   1c74b:	and    eax,0x7
   1c74e:	add    eax,0x3
   1c751:	shr    ebx,0x3
   1c754:	jmp    0x1c78d
   1c756:	cmp    DWORD PTR [ebp-0x8],0x0
   1c75a:	je     0x1cdd7
   1c760:	mov    eax,DWORD PTR [ebp-0x4]
   1c763:	movzx  eax,BYTE PTR [eax]
   1c766:	dec    DWORD PTR [ebp-0x8]
   1c769:	mov    ecx,edi
   1c76b:	shl    eax,cl
   1c76d:	add    ebx,eax
   1c76f:	inc    DWORD PTR [ebp-0x4]
   1c772:	add    edi,0x8
   1c775:	lea    eax,[edx+0x7]
   1c778:	cmp    edi,eax
   1c77a:	jb     0x1c756
   1c77c:	mov    ecx,edx
   1c77e:	shr    ebx,cl
   1c780:	push   0xfffffff9
   1c782:	mov    eax,ebx
   1c784:	and    eax,0x7f
   1c787:	add    eax,0xb
   1c78a:	shr    ebx,0x7
   1c78d:	and    DWORD PTR [ebp-0x20],0x0
   1c791:	pop    ecx
   1c792:	sub    ecx,edx
   1c794:	add    edi,ecx
   1c796:	mov    ecx,DWORD PTR [esi+0x64]
   1c799:	mov    edx,DWORD PTR [esi+0x68]
   1c79c:	add    ecx,DWORD PTR [esi+0x60]
   1c79f:	add    edx,eax
   1c7a1:	cmp    edx,ecx
   1c7a3:	jbe    0x1c812
   1c7a5:	mov    eax,DWORD PTR [ebp+0x8]
   1c7a8:	mov    DWORD PTR [eax+0x18],0x1f1a8
   1c7af:	mov    DWORD PTR [esi],0x1b
   1c7b5:	cmp    DWORD PTR [esi],0x1b
   1c7b8:	je     0x1cd89
   1c7be:	lea    eax,[esi+0x530]
   1c7c4:	lea    ecx,[esi+0x6c]
   1c7c7:	mov    DWORD PTR [ecx],eax
   1c7c9:	mov    DWORD PTR [esi+0x4c],eax
   1c7cc:	lea    edx,[esi+0x2f0]
   1c7d2:	push   edx
   1c7d3:	lea    eax,[esi+0x54]
   1c7d6:	push   eax
   1c7d7:	push   ecx
   1c7d8:	push   DWORD PTR [esi+0x60]
   1c7db:	mov    DWORD PTR [eax],0x9
   1c7e1:	lea    eax,[esi+0x70]
   1c7e4:	push   eax
   1c7e5:	push   0x1
   1c7e7:	call   0x1d392
   1c7ec:	mov    DWORD PTR [ebp-0x24],eax
   1c7ef:	test   eax,eax
   1c7f1:	je     0x1c836
   1c7f3:	mov    eax,DWORD PTR [ebp+0x8]
   1c7f6:	mov    DWORD PTR [eax+0x18],0x1f18c
   1c7fd:	jmp    0x1cd83
   1c802:	mov    ecx,DWORD PTR [esi+0x68]
   1c805:	mov    dx,WORD PTR [ebp-0x20]
   1c809:	dec    eax
   1c80a:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c80f:	inc    DWORD PTR [esi+0x68]
   1c812:	test   eax,eax
   1c814:	jne    0x1c802
   1c816:	mov    eax,DWORD PTR [esi+0x64]
   1c819:	add    eax,DWORD PTR [esi+0x60]
   1c81c:	cmp    DWORD PTR [esi+0x68],eax
   1c81f:	jb     0x1c63e
   1c825:	jmp    0x1c7b5
   1c827:	mov    eax,DWORD PTR [ebp+0x8]
   1c82a:	mov    DWORD PTR [eax+0x18],0x1f1a8
   1c831:	jmp    0x1cd83
   1c836:	lea    ecx,[esi+0x6c]
   1c839:	mov    eax,DWORD PTR [ecx]
   1c83b:	mov    DWORD PTR [esi+0x50],eax
   1c83e:	lea    edx,[esi+0x2f0]
   1c844:	push   edx
   1c845:	lea    eax,[esi+0x58]
   1c848:	push   eax
   1c849:	push   ecx
   1c84a:	push   DWORD PTR [esi+0x64]
   1c84d:	mov    DWORD PTR [eax],0x6
   1c853:	mov    eax,DWORD PTR [esi+0x60]
   1c856:	lea    eax,[esi+eax*2+0x70]
   1c85a:	push   eax
   1c85b:	push   0x2
   1c85d:	call   0x1d392
   1c862:	mov    DWORD PTR [ebp-0x24],eax
   1c865:	test   eax,eax
   1c867:	je     0x1c878
   1c869:	mov    eax,DWORD PTR [ebp+0x8]
   1c86c:	mov    DWORD PTR [eax+0x18],0x1f176
   1c873:	jmp    0x1cd83
   1c878:	mov    DWORD PTR [esi],0x12
   1c87e:	cmp    DWORD PTR [ebp-0x8],0x6
   1c882:	jb     0x1c8db
   1c884:	cmp    DWORD PTR [ebp-0x10],0x102
   1c88b:	jb     0x1c8db
   1c88d:	mov    eax,DWORD PTR [ebp+0x8]
   1c890:	mov    ecx,DWORD PTR [ebp-0x18]
   1c893:	push   DWORD PTR [ebp-0x1c]
   1c896:	mov    DWORD PTR [eax+0xc],ecx
   1c899:	mov    ecx,DWORD PTR [ebp-0x10]
   1c89c:	mov    DWORD PTR [eax+0x10],ecx
   1c89f:	mov    ecx,DWORD PTR [ebp-0x4]
   1c8a2:	mov    DWORD PTR [eax],ecx
   1c8a4:	mov    ecx,DWORD PTR [ebp-0x8]
   1c8a7:	mov    DWORD PTR [eax+0x4],ecx
   1c8aa:	push   eax
   1c8ab:	mov    DWORD PTR [esi+0x38],ebx
   1c8ae:	mov    DWORD PTR [esi+0x3c],edi
   1c8b1:	call   0x1cfac
   1c8b6:	mov    eax,DWORD PTR [ebp+0x8]
   1c8b9:	mov    ecx,DWORD PTR [eax+0xc]
   1c8bc:	mov    ebx,DWORD PTR [esi+0x38]
   1c8bf:	mov    edi,DWORD PTR [esi+0x3c]
   1c8c2:	mov    DWORD PTR [ebp-0x18],ecx
   1c8c5:	mov    ecx,DWORD PTR [eax+0x10]
   1c8c8:	mov    DWORD PTR [ebp-0x10],ecx
   1c8cb:	mov    ecx,DWORD PTR [eax]
   1c8cd:	mov    eax,DWORD PTR [eax+0x4]
   1c8d0:	mov    DWORD PTR [ebp-0x4],ecx
   1c8d3:	mov    DWORD PTR [ebp-0x8],eax
   1c8d6:	jmp    0x1cd89
   1c8db:	mov    ecx,DWORD PTR [esi+0x54]
   1c8de:	mov    eax,DWORD PTR [esi+0x4c]
   1c8e1:	xor    edx,edx
   1c8e3:	inc    edx
   1c8e4:	shl    edx,cl
   1c8e6:	dec    edx
   1c8e7:	and    edx,ebx
   1c8e9:	mov    eax,DWORD PTR [eax+edx*4]
   1c8ec:	jmp    0x1c91e
   1c8ee:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8f2:	je     0x1cdd7
   1c8f8:	mov    eax,DWORD PTR [ebp-0x4]
   1c8fb:	movzx  eax,BYTE PTR [eax]
   1c8fe:	dec    DWORD PTR [ebp-0x8]
   1c901:	mov    ecx,edi
   1c903:	shl    eax,cl
   1c905:	mov    ecx,DWORD PTR [esi+0x54]
   1c908:	add    edi,0x8
   1c90b:	add    ebx,eax
   1c90d:	inc    DWORD PTR [ebp-0x4]
   1c910:	xor    eax,eax
   1c912:	inc    eax
   1c913:	shl    eax,cl
   1c915:	mov    ecx,DWORD PTR [esi+0x4c]
   1c918:	dec    eax
   1c919:	and    eax,ebx
   1c91b:	mov    eax,DWORD PTR [ecx+eax*4]
   1c91e:	mov    ecx,eax
   1c920:	shr    ecx,0x8
   1c923:	movzx  ecx,cl
   1c926:	cmp    ecx,edi
   1c928:	ja     0x1c8ee
   1c92a:	test   al,al
   1c92c:	je     0x1c9c5
   1c932:	test   al,0xf0
   1c934:	jne    0x1c9c5
   1c93a:	mov    DWORD PTR [ebp-0xc],eax
   1c93d:	shr    DWORD PTR [ebp-0xc],0x8
   1c941:	movzx  edx,BYTE PTR [ebp-0xc]
   1c945:	mov    DWORD PTR [ebp-0x28],edx
   1c948:	movzx  ecx,al
   1c94b:	add    ecx,edx
   1c94d:	xor    edx,edx
   1c94f:	inc    edx
   1c950:	shl    edx,cl
   1c952:	mov    ecx,DWORD PTR [ebp-0x28]
   1c955:	mov    DWORD PTR [ebp-0x20],eax
   1c958:	shr    eax,0x10
   1c95b:	dec    edx
   1c95c:	and    edx,ebx
   1c95e:	shr    edx,cl
   1c960:	add    edx,eax
   1c962:	mov    eax,DWORD PTR [esi+0x4c]
   1c965:	mov    eax,DWORD PTR [eax+edx*4]
   1c968:	movzx  edx,BYTE PTR [ebp-0xc]
   1c96c:	jmp    0x1c9af
   1c96e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c972:	je     0x1cdd7
   1c978:	mov    eax,DWORD PTR [ebp-0x4]
   1c97b:	movzx  eax,BYTE PTR [eax]
   1c97e:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c982:	dec    DWORD PTR [ebp-0x8]
   1c985:	mov    ecx,edi
   1c987:	shl    eax,cl
   1c989:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c98d:	add    ebx,eax
   1c98f:	inc    DWORD PTR [ebp-0x4]
   1c992:	xor    eax,eax
   1c994:	add    ecx,edx
   1c996:	inc    eax
   1c997:	shl    eax,cl
   1c999:	add    edi,0x8
   1c99c:	mov    ecx,edx
   1c99e:	dec    eax
   1c99f:	and    eax,ebx
   1c9a1:	shr    eax,cl
   1c9a3:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c9a7:	add    eax,ecx
   1c9a9:	mov    ecx,DWORD PTR [esi+0x4c]
   1c9ac:	mov    eax,DWORD PTR [ecx+eax*4]
   1c9af:	mov    ecx,eax
   1c9b1:	shr    ecx,0x8
   1c9b4:	movzx  ecx,cl
   1c9b7:	add    ecx,edx
   1c9b9:	cmp    ecx,edi
   1c9bb:	ja     0x1c96e
   1c9bd:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c9c1:	shr    ebx,cl
   1c9c3:	sub    edi,ecx
   1c9c5:	mov    ecx,eax
   1c9c7:	shr    ecx,0x8
   1c9ca:	movzx  ecx,cl
   1c9cd:	shr    ebx,cl
   1c9cf:	sub    edi,ecx
   1c9d1:	mov    ecx,eax
   1c9d3:	shr    ecx,0x10
   1c9d6:	mov    DWORD PTR [esi+0x40],ecx
   1c9d9:	test   al,al
   1c9db:	jne    0x1c9e8
   1c9dd:	mov    DWORD PTR [esi],0x17
   1c9e3:	jmp    0x1cd89
   1c9e8:	test   al,0x20
   1c9ea:	je     0x1c9f7
   1c9ec:	mov    DWORD PTR [esi],0xb
   1c9f2:	jmp    0x1cd89
   1c9f7:	test   al,0x40
   1c9f9:	je     0x1ca0a
   1c9fb:	mov    eax,DWORD PTR [ebp+0x8]
   1c9fe:	mov    DWORD PTR [eax+0x18],0x1f15a
   1ca05:	jmp    0x1cd83
   1ca0a:	movzx  eax,al
   1ca0d:	and    eax,0xf
   1ca10:	mov    DWORD PTR [esi+0x48],eax
   1ca13:	mov    DWORD PTR [esi],0x13
   1ca19:	mov    eax,DWORD PTR [esi+0x48]
   1ca1c:	test   eax,eax
   1ca1e:	je     0x1ca59
   1ca20:	cmp    edi,eax
   1ca22:	jae    0x1ca48
   1ca24:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca28:	je     0x1cdd7
   1ca2e:	mov    ecx,DWORD PTR [ebp-0x4]
   1ca31:	movzx  edx,BYTE PTR [ecx]
   1ca34:	dec    DWORD PTR [ebp-0x8]
   1ca37:	mov    ecx,edi
   1ca39:	shl    edx,cl
   1ca3b:	add    edi,0x8
   1ca3e:	add    ebx,edx
   1ca40:	inc    DWORD PTR [ebp-0x4]
   1ca43:	cmp    edi,DWORD PTR [esi+0x48]
   1ca46:	jb     0x1ca24
   1ca48:	xor    edx,edx
   1ca4a:	inc    edx
   1ca4b:	mov    ecx,eax
   1ca4d:	shl    edx,cl
   1ca4f:	dec    edx
   1ca50:	and    edx,ebx
   1ca52:	add    DWORD PTR [esi+0x40],edx
   1ca55:	shr    ebx,cl
   1ca57:	sub    edi,eax
   1ca59:	mov    DWORD PTR [esi],0x14
   1ca5f:	mov    ecx,DWORD PTR [esi+0x58]
   1ca62:	mov    eax,DWORD PTR [esi+0x50]
   1ca65:	xor    edx,edx
   1ca67:	inc    edx
   1ca68:	shl    edx,cl
   1ca6a:	dec    edx
   1ca6b:	and    edx,ebx
   1ca6d:	mov    eax,DWORD PTR [eax+edx*4]
   1ca70:	jmp    0x1caa2
   1ca72:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca76:	je     0x1cdd7
   1ca7c:	mov    eax,DWORD PTR [ebp-0x4]
   1ca7f:	movzx  eax,BYTE PTR [eax]
   1ca82:	dec    DWORD PTR [ebp-0x8]
   1ca85:	mov    ecx,edi
   1ca87:	shl    eax,cl
   1ca89:	mov    ecx,DWORD PTR [esi+0x58]
   1ca8c:	add    edi,0x8
   1ca8f:	add    ebx,eax
   1ca91:	inc    DWORD PTR [ebp-0x4]
   1ca94:	xor    eax,eax
   1ca96:	inc    eax
   1ca97:	shl    eax,cl
   1ca99:	mov    ecx,DWORD PTR [esi+0x50]
   1ca9c:	dec    eax
   1ca9d:	and    eax,ebx
   1ca9f:	mov    eax,DWORD PTR [ecx+eax*4]
   1caa2:	mov    ecx,eax
   1caa4:	shr    ecx,0x8
   1caa7:	movzx  ecx,cl
   1caaa:	cmp    ecx,edi
   1caac:	ja     0x1ca72
   1caae:	test   al,0xf0
   1cab0:	jne    0x1cb41
   1cab6:	mov    DWORD PTR [ebp-0xc],eax
   1cab9:	shr    DWORD PTR [ebp-0xc],0x8
   1cabd:	movzx  edx,BYTE PTR [ebp-0xc]
   1cac1:	mov    DWORD PTR [ebp-0x28],edx
   1cac4:	movzx  ecx,al
   1cac7:	add    ecx,edx
   1cac9:	xor    edx,edx
   1cacb:	inc    edx
   1cacc:	shl    edx,cl
   1cace:	mov    ecx,DWORD PTR [ebp-0x28]
   1cad1:	mov    DWORD PTR [ebp-0x20],eax
   1cad4:	shr    eax,0x10
   1cad7:	dec    edx
   1cad8:	and    edx,ebx
   1cada:	shr    edx,cl
   1cadc:	add    edx,eax
   1cade:	mov    eax,DWORD PTR [esi+0x50]
   1cae1:	mov    eax,DWORD PTR [eax+edx*4]
   1cae4:	movzx  edx,BYTE PTR [ebp-0xc]
   1cae8:	jmp    0x1cb2b
   1caea:	cmp    DWORD PTR [ebp-0x8],0x0
   1caee:	je     0x1cdd7
   1caf4:	mov    eax,DWORD PTR [ebp-0x4]
   1caf7:	movzx  eax,BYTE PTR [eax]
   1cafa:	movzx  edx,BYTE PTR [ebp-0x1f]
   1cafe:	dec    DWORD PTR [ebp-0x8]
   1cb01:	mov    ecx,edi
   1cb03:	shl    eax,cl
   1cb05:	movzx  ecx,BYTE PTR [ebp-0x20]
   1cb09:	add    ebx,eax
   1cb0b:	inc    DWORD PTR [ebp-0x4]
   1cb0e:	xor    eax,eax
   1cb10:	add    ecx,edx
   1cb12:	inc    eax
   1cb13:	shl    eax,cl
   1cb15:	add    edi,0x8
   1cb18:	mov    ecx,edx
   1cb1a:	dec    eax
   1cb1b:	and    eax,ebx
   1cb1d:	shr    eax,cl
   1cb1f:	movzx  ecx,WORD PTR [ebp-0x1e]
   1cb23:	add    eax,ecx
   1cb25:	mov    ecx,DWORD PTR [esi+0x50]
   1cb28:	mov    eax,DWORD PTR [ecx+eax*4]
   1cb2b:	mov    ecx,eax
   1cb2d:	shr    ecx,0x8
   1cb30:	movzx  ecx,cl
   1cb33:	add    ecx,edx
   1cb35:	cmp    ecx,edi
   1cb37:	ja     0x1caea
   1cb39:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1cb3d:	shr    ebx,cl
   1cb3f:	sub    edi,ecx
   1cb41:	mov    ecx,eax
   1cb43:	shr    ecx,0x8
   1cb46:	movzx  ecx,cl
   1cb49:	shr    ebx,cl
   1cb4b:	sub    edi,ecx
   1cb4d:	test   al,0x40
   1cb4f:	je     0x1cb60
   1cb51:	mov    eax,DWORD PTR [ebp+0x8]
   1cb54:	mov    DWORD PTR [eax+0x18],0x1f144
   1cb5b:	jmp    0x1cd83
   1cb60:	mov    edx,DWORD PTR [ebp+0x8]
   1cb63:	mov    ecx,eax
   1cb65:	movzx  eax,al
   1cb68:	shr    ecx,0x10
   1cb6b:	and    eax,0xf
   1cb6e:	mov    DWORD PTR [esi+0x44],ecx
   1cb71:	mov    DWORD PTR [esi+0x48],eax
   1cb74:	mov    DWORD PTR [esi],0x15
   1cb7a:	mov    eax,DWORD PTR [esi+0x48]
   1cb7d:	test   eax,eax
   1cb7f:	je     0x1cbbe
   1cb81:	cmp    edi,eax
   1cb83:	jae    0x1cbac
   1cb85:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb89:	je     0x1cdd7
   1cb8f:	mov    eax,DWORD PTR [ebp-0x4]
   1cb92:	movzx  eax,BYTE PTR [eax]
   1cb95:	dec    DWORD PTR [ebp-0x8]
   1cb98:	mov    ecx,edi
   1cb9a:	shl    eax,cl
   1cb9c:	add    edi,0x8
   1cb9f:	add    ebx,eax
   1cba1:	inc    DWORD PTR [ebp-0x4]
   1cba4:	cmp    edi,DWORD PTR [esi+0x48]
   1cba7:	jb     0x1cb85
   1cba9:	mov    edx,DWORD PTR [ebp+0x8]
   1cbac:	mov    ecx,DWORD PTR [esi+0x48]
   1cbaf:	xor    eax,eax
   1cbb1:	inc    eax
   1cbb2:	shl    eax,cl
   1cbb4:	dec    eax
   1cbb5:	and    eax,ebx
   1cbb7:	add    DWORD PTR [esi+0x44],eax
   1cbba:	shr    ebx,cl
   1cbbc:	sub    edi,ecx
   1cbbe:	mov    eax,DWORD PTR [esi+0x2c]
   1cbc1:	sub    eax,DWORD PTR [ebp-0x10]
   1cbc4:	add    eax,DWORD PTR [ebp-0x1c]
   1cbc7:	cmp    DWORD PTR [esi+0x44],eax
   1cbca:	jbe    0x1cbd8
   1cbcc:	mov    DWORD PTR [edx+0x18],0x1f126
   1cbd3:	jmp    0x1cd83
   1cbd8:	mov    DWORD PTR [esi],0x16
   1cbde:	cmp    DWORD PTR [ebp-0x10],0x0
   1cbe2:	je     0x1cdd7
   1cbe8:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbeb:	sub    eax,DWORD PTR [ebp-0x10]
   1cbee:	mov    ecx,DWORD PTR [esi+0x44]
   1cbf1:	cmp    ecx,eax
   1cbf3:	jbe    0x1cc22
   1cbf5:	sub    ecx,eax
   1cbf7:	mov    eax,DWORD PTR [esi+0x34]
   1cbfa:	mov    DWORD PTR [ebp-0xc],ecx
   1cbfd:	mov    ecx,DWORD PTR [esi+0x30]
   1cc00:	cmp    DWORD PTR [ebp-0xc],ecx
   1cc03:	jbe    0x1cc10
   1cc05:	add    eax,DWORD PTR [esi+0x28]
   1cc08:	sub    DWORD PTR [ebp-0xc],ecx
   1cc0b:	sub    eax,DWORD PTR [ebp-0xc]
   1cc0e:	jmp    0x1cc15
   1cc10:	sub    eax,DWORD PTR [ebp-0xc]
   1cc13:	add    eax,ecx
   1cc15:	mov    ecx,DWORD PTR [esi+0x40]
   1cc18:	mov    DWORD PTR [ebp-0x28],ecx
   1cc1b:	cmp    DWORD PTR [ebp-0xc],ecx
   1cc1e:	jbe    0x1cc30
   1cc20:	jmp    0x1cc2d
   1cc22:	mov    eax,DWORD PTR [ebp-0x18]
   1cc25:	sub    eax,ecx
   1cc27:	mov    ecx,DWORD PTR [esi+0x40]
   1cc2a:	mov    DWORD PTR [ebp-0x28],ecx
   1cc2d:	mov    DWORD PTR [ebp-0xc],ecx
   1cc30:	mov    ecx,DWORD PTR [ebp-0x10]
   1cc33:	cmp    DWORD PTR [ebp-0xc],ecx
   1cc36:	jbe    0x1cc3b
   1cc38:	mov    DWORD PTR [ebp-0xc],ecx
   1cc3b:	sub    ecx,DWORD PTR [ebp-0xc]
   1cc3e:	mov    DWORD PTR [ebp-0x10],ecx
   1cc41:	mov    ecx,DWORD PTR [ebp-0x28]
   1cc44:	sub    ecx,DWORD PTR [ebp-0xc]
   1cc47:	mov    DWORD PTR [esi+0x40],ecx
   1cc4a:	mov    edx,DWORD PTR [ebp-0x18]
   1cc4d:	mov    cl,BYTE PTR [eax]
   1cc4f:	inc    DWORD PTR [ebp-0x18]
   1cc52:	inc    eax
   1cc53:	dec    DWORD PTR [ebp-0xc]
   1cc56:	mov    BYTE PTR [edx],cl
   1cc58:	jne    0x1cc4a
   1cc5a:	cmp    DWORD PTR [esi+0x40],0x0
   1cc5e:	jne    0x1cd89
   1cc64:	jmp    0x1cc7e
   1cc66:	cmp    DWORD PTR [ebp-0x10],0x0
   1cc6a:	je     0x1cdd7
   1cc70:	mov    ecx,DWORD PTR [ebp-0x18]
   1cc73:	mov    al,BYTE PTR [esi+0x40]
   1cc76:	inc    DWORD PTR [ebp-0x18]
   1cc79:	dec    DWORD PTR [ebp-0x10]
   1cc7c:	mov    BYTE PTR [ecx],al
   1cc7e:	mov    DWORD PTR [esi],0x12
   1cc84:	jmp    0x1cd89
   1cc89:	cmp    DWORD PTR [esi+0x8],0x0
   1cc8d:	je     0x1cd3d
   1cc93:	cmp    edi,0x20
   1cc96:	jae    0x1ccbf
   1cc98:	cmp    DWORD PTR [ebp-0x8],0x0
   1cc9c:	je     0x1cdd7
   1cca2:	mov    eax,DWORD PTR [ebp-0x4]
   1cca5:	movzx  eax,BYTE PTR [eax]
   1cca8:	dec    DWORD PTR [ebp-0x8]
   1ccab:	mov    ecx,edi
   1ccad:	shl    eax,cl
   1ccaf:	add    edi,0x8
   1ccb2:	add    ebx,eax
   1ccb4:	inc    DWORD PTR [ebp-0x4]
   1ccb7:	cmp    edi,0x20
   1ccba:	jb     0x1cc98
   1ccbc:	mov    edx,DWORD PTR [ebp+0x8]
   1ccbf:	mov    eax,DWORD PTR [ebp-0x1c]
   1ccc2:	sub    eax,DWORD PTR [ebp-0x10]
   1ccc5:	add    DWORD PTR [edx+0x14],eax
   1ccc8:	add    DWORD PTR [esi+0x1c],eax
   1cccb:	mov    DWORD PTR [ebp-0x1c],eax
   1ccce:	test   eax,eax
   1ccd0:	je     0x1ccfa
   1ccd2:	push   eax
   1ccd3:	mov    eax,DWORD PTR [ebp-0x18]
   1ccd6:	sub    eax,DWORD PTR [ebp-0x1c]
   1ccd9:	cmp    DWORD PTR [esi+0x10],0x0
   1ccdd:	push   eax
   1ccde:	push   DWORD PTR [esi+0x18]
   1cce1:	je     0x1ccea
   1cce3:	call   0x1dc3a
   1cce8:	jmp    0x1ccef
   1ccea:	call   0x1d798
   1ccef:	mov    ecx,DWORD PTR [ebp+0x8]
   1ccf2:	mov    DWORD PTR [esi+0x18],eax
   1ccf5:	mov    DWORD PTR [ecx+0x30],eax
   1ccf8:	mov    edx,ecx
   1ccfa:	cmp    DWORD PTR [esi+0x10],0x0
   1ccfe:	mov    eax,DWORD PTR [ebp-0x10]
   1cd01:	mov    DWORD PTR [ebp-0x1c],eax
   1cd04:	mov    eax,ebx
   1cd06:	jne    0x1cd2b
   1cd08:	and    eax,0xff00
   1cd0d:	mov    ecx,ebx
   1cd0f:	shl    ecx,0x10
   1cd12:	add    eax,ecx
   1cd14:	mov    ecx,ebx
   1cd16:	shr    ecx,0x8
   1cd19:	and    ecx,0xff00
   1cd1f:	shl    eax,0x8
   1cd22:	add    eax,ecx
   1cd24:	mov    ecx,ebx
   1cd26:	shr    ecx,0x18
   1cd29:	add    eax,ecx
   1cd2b:	cmp    eax,DWORD PTR [esi+0x18]
   1cd2e:	je     0x1cd39
   1cd30:	mov    DWORD PTR [edx+0x18],0x1f110
   1cd37:	jmp    0x1cd83
   1cd39:	xor    ebx,ebx
   1cd3b:	xor    edi,edi
   1cd3d:	mov    DWORD PTR [esi],0x19
   1cd43:	cmp    DWORD PTR [esi+0x8],0x0
   1cd47:	je     0x1cdc1
   1cd49:	cmp    DWORD PTR [esi+0x10],0x0
   1cd4d:	je     0x1cdc1
   1cd4f:	cmp    edi,0x20
   1cd52:	jae    0x1cd77
   1cd54:	cmp    DWORD PTR [ebp-0x8],0x0
   1cd58:	je     0x1cdd7
   1cd5a:	mov    eax,DWORD PTR [ebp-0x4]
   1cd5d:	movzx  eax,BYTE PTR [eax]
   1cd60:	dec    DWORD PTR [ebp-0x8]
   1cd63:	mov    ecx,edi
   1cd65:	shl    eax,cl
   1cd67:	add    edi,0x8
   1cd6a:	add    ebx,eax
   1cd6c:	inc    DWORD PTR [ebp-0x4]
   1cd6f:	cmp    edi,0x20
   1cd72:	jb     0x1cd54
   1cd74:	mov    edx,DWORD PTR [ebp+0x8]
   1cd77:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cd7a:	je     0x1cdbd
   1cd7c:	mov    DWORD PTR [edx+0x18],0x1f0f8
   1cd83:	mov    DWORD PTR [esi],0x1b
   1cd89:	mov    eax,DWORD PTR [esi]
   1cd8b:	cmp    eax,0x1c
   1cd8e:	jbe    0x1bd80
   1cd94:	jmp    0x1bd76
   1cd99:	mov    eax,DWORD PTR [ebp-0x18]
   1cd9c:	mov    DWORD PTR [edx+0xc],eax
   1cd9f:	mov    eax,DWORD PTR [ebp-0x10]
   1cda2:	mov    DWORD PTR [edx+0x10],eax
   1cda5:	mov    eax,DWORD PTR [ebp-0x4]
   1cda8:	mov    DWORD PTR [edx],eax
   1cdaa:	mov    eax,DWORD PTR [ebp-0x8]
   1cdad:	mov    DWORD PTR [edx+0x4],eax
   1cdb0:	mov    DWORD PTR [esi+0x38],ebx
   1cdb3:	mov    DWORD PTR [esi+0x3c],edi
   1cdb6:	push   0x2
   1cdb8:	jmp    0x1bd78
   1cdbd:	xor    ebx,ebx
   1cdbf:	xor    edi,edi
   1cdc1:	mov    DWORD PTR [esi],0x1a
   1cdc7:	mov    DWORD PTR [ebp-0x24],0x1
   1cdce:	jmp    0x1cdd7
   1cdd0:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cdd7:	mov    eax,DWORD PTR [ebp+0x8]
   1cdda:	mov    ecx,DWORD PTR [ebp-0x18]
   1cddd:	mov    DWORD PTR [eax+0xc],ecx
   1cde0:	mov    ecx,DWORD PTR [ebp-0x10]
   1cde3:	mov    DWORD PTR [eax+0x10],ecx
   1cde6:	mov    ecx,DWORD PTR [ebp-0x4]
   1cde9:	mov    DWORD PTR [eax],ecx
   1cdeb:	mov    ecx,DWORD PTR [ebp-0x8]
   1cdee:	mov    DWORD PTR [eax+0x4],ecx
   1cdf1:	cmp    DWORD PTR [esi+0x28],0x0
   1cdf5:	mov    DWORD PTR [esi+0x38],ebx
   1cdf8:	mov    DWORD PTR [esi+0x3c],edi
   1cdfb:	jne    0x1ce0d
   1cdfd:	cmp    DWORD PTR [esi],0x18
   1ce00:	jge    0x1ce29
   1ce02:	mov    eax,DWORD PTR [ebp-0x1c]
   1ce05:	mov    ecx,DWORD PTR [ebp+0x8]
   1ce08:	cmp    eax,DWORD PTR [ecx+0x10]
   1ce0b:	je     0x1ce29
   1ce0d:	mov    eax,DWORD PTR [ebp-0x1c]
   1ce10:	mov    edi,DWORD PTR [ebp+0x8]
   1ce13:	call   0x1bc38
   1ce18:	test   eax,eax
   1ce1a:	je     0x1ce29
   1ce1c:	mov    DWORD PTR [esi],0x1c
   1ce22:	push   0xfffffffc
   1ce24:	jmp    0x1bd78
   1ce29:	mov    edi,DWORD PTR [ebp+0x8]
   1ce2c:	mov    eax,DWORD PTR [ebp-0x2c]
   1ce2f:	sub    eax,DWORD PTR [edi+0x4]
   1ce32:	mov    ebx,DWORD PTR [ebp-0x1c]
   1ce35:	sub    ebx,DWORD PTR [edi+0x10]
   1ce38:	add    DWORD PTR [edi+0x8],eax
   1ce3b:	add    DWORD PTR [edi+0x14],ebx
   1ce3e:	add    DWORD PTR [esi+0x1c],ebx
   1ce41:	cmp    DWORD PTR [esi+0x8],0x0
   1ce45:	mov    DWORD PTR [ebp-0x2c],eax
   1ce48:	je     0x1ce73
   1ce4a:	test   ebx,ebx
   1ce4c:	je     0x1ce73
   1ce4e:	mov    eax,DWORD PTR [edi+0xc]
   1ce51:	push   ebx
   1ce52:	sub    eax,ebx
   1ce54:	cmp    DWORD PTR [esi+0x10],0x0
   1ce58:	push   eax
   1ce59:	push   DWORD PTR [esi+0x18]
   1ce5c:	je     0x1ce65
   1ce5e:	call   0x1dc3a
   1ce63:	jmp    0x1ce6a
   1ce65:	call   0x1d798
   1ce6a:	mov    DWORD PTR [esi+0x18],eax
   1ce6d:	mov    DWORD PTR [edi+0x30],eax
   1ce70:	mov    eax,DWORD PTR [ebp-0x2c]
   1ce73:	cmp    DWORD PTR [esi],0xb
   1ce76:	jne    0x1ce7f
   1ce78:	mov    ecx,0x80
   1ce7d:	jmp    0x1ce81
   1ce7f:	xor    ecx,ecx
   1ce81:	mov    edx,DWORD PTR [esi+0x4]
   1ce84:	neg    edx
   1ce86:	sbb    edx,edx
   1ce88:	and    edx,0x40
   1ce8b:	add    edx,ecx
   1ce8d:	add    edx,DWORD PTR [esi+0x3c]
   1ce90:	mov    DWORD PTR [edi+0x2c],edx
   1ce93:	test   eax,eax
   1ce95:	jne    0x1ce9b
   1ce97:	test   ebx,ebx
   1ce99:	je     0x1cea1
   1ce9b:	cmp    DWORD PTR [ebp+0xc],0x4
   1ce9f:	jne    0x1ceae
   1cea1:	cmp    DWORD PTR [ebp-0x24],0x0
   1cea5:	jne    0x1ceae
   1cea7:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1ceae:	mov    eax,DWORD PTR [ebp-0x24]
   1ceb1:	jmp    0x1bd79
   1ceb6:	mov    edi,edi
   1ceb8:	mov    bh,BYTE PTR [ebp-0x4158ffff]
   1cebe:	add    DWORD PTR [eax],eax
   1cec0:	cmp    al,0xbf
   1cec2:	add    DWORD PTR [eax],eax
   1cec4:	mov    dl,0xbf
   1cec6:	add    DWORD PTR [eax],eax
   1cec8:	sub    eax,eax
   1ceca:	add    DWORD PTR [eax],eax
   1cecc:	stos   BYTE PTR es:[edi],al
   1cecd:	rol    BYTE PTR [ecx],0x0
   1ced0:	inc    ebp
   1ced1:	rol    DWORD PTR [ecx],0x0
   1ced4:	faddp  st(1),st
   1ced6:	add    DWORD PTR [eax],eax
   1ced8:	jae    0x1ce9c
   1ceda:	add    DWORD PTR [eax],eax
   1cedc:	repz ret 0x1
   1cee0:	push   ecx
   1cee1:	ret    
   1cee2:	add    DWORD PTR [eax],eax
   1cee4:	je     0x1cea9
   1cee6:	add    DWORD PTR [eax],eax
   1cee8:	add    ebx,0xc4300001
   1ceee:	add    DWORD PTR [eax],eax
   1cef0:	nop
   1cef1:	les    eax,FWORD PTR [ecx]
   1cef3:	add    dh,ah
   1cef5:	les    eax,FWORD PTR [ecx]
   1cef7:	add    BYTE PTR [eax+0x160001c5],ch
   1cefd:	enter  0x1,0x7e
   1cf01:	enter  0x1,0x19
   1cf05:	retf   0x1
   1cf08:	pop    edi
   1cf09:	retf   0x1
   1cf0c:	jp     0x1ced9
   1cf0e:	add    DWORD PTR [eax],eax
   1cf10:	fmulp  st(3),st
   1cf12:	add    DWORD PTR [eax],eax
   1cf14:	data16 int3 
   1cf16:	add    DWORD PTR [eax],eax
   1cf18:	mov    esp,ecx
   1cf1a:	add    DWORD PTR [eax],eax
   1cf1c:	inc    ebx
   1cf1d:	int    0x1
   1cf1f:	add    bh,al
   1cf21:	int    0x1
   1cf23:	add    al,dl
   1cf25:	int    0x1
   1cf27:	add    BYTE PTR [edx],ah
   1cf29:	into   
   1cf2a:	add    DWORD PTR [eax],eax
   1cf2c:	int3   
   1cf2d:	int3   
   1cf2e:	int3   
   1cf2f:	int3   
   1cf30:	int3   
   1cf31:	int3   
   1cf32:	mov    edi,edi
   1cf34:	push   ebp
   1cf35:	mov    ebp,esp
   1cf37:	push   esi
   1cf38:	mov    esi,DWORD PTR [ebp+0x8]
   1cf3b:	test   esi,esi
   1cf3d:	je     0x1cf6b
   1cf3f:	mov    eax,DWORD PTR [esi+0x1c]
   1cf42:	test   eax,eax
   1cf44:	je     0x1cf6b
   1cf46:	mov    ecx,DWORD PTR [esi+0x24]
   1cf49:	test   ecx,ecx
   1cf4b:	je     0x1cf6b
   1cf4d:	mov    eax,DWORD PTR [eax+0x34]
   1cf50:	test   eax,eax
   1cf52:	je     0x1cf5a
   1cf54:	push   eax
   1cf55:	push   DWORD PTR [esi+0x28]
   1cf58:	call   ecx
   1cf5a:	push   DWORD PTR [esi+0x1c]
   1cf5d:	push   DWORD PTR [esi+0x28]
   1cf60:	call   DWORD PTR [esi+0x24]
   1cf63:	and    DWORD PTR [esi+0x1c],0x0
   1cf67:	xor    eax,eax
   1cf69:	jmp    0x1cf6e
   1cf6b:	push   0xfffffffe
   1cf6d:	pop    eax
   1cf6e:	pop    esi
   1cf6f:	pop    ebp
   1cf70:	ret    0x4
   1cf73:	int3   
   1cf74:	int3   
   1cf75:	int3   
   1cf76:	int3   
   1cf77:	int3   
   1cf78:	mov    edi,edi
   1cf7a:	push   ebp
   1cf7b:	mov    ebp,esp
   1cf7d:	mov    eax,DWORD PTR [ebp+0xc]
   1cf80:	imul   eax,DWORD PTR [ebp+0x10]
   1cf84:	push   eax
   1cf85:	call   0x1dc5e
   1cf8a:	pop    ecx
   1cf8b:	pop    ebp
   1cf8c:	ret    0xc
   1cf8f:	int3   
   1cf90:	int3   
   1cf91:	int3   
   1cf92:	int3   
   1cf93:	int3   
   1cf94:	mov    edi,edi
   1cf96:	push   ebp
   1cf97:	mov    ebp,esp
   1cf99:	push   DWORD PTR [ebp+0xc]
   1cf9c:	call   0x1dc8c
   1cfa1:	pop    ecx
   1cfa2:	pop    ebp
   1cfa3:	ret    0x8
   1cfa6:	int3   
   1cfa7:	int3   
   1cfa8:	int3   
   1cfa9:	int3   
   1cfaa:	int3   
   1cfab:	int3   
   1cfac:	mov    edi,edi
   1cfae:	push   ebp
   1cfaf:	mov    ebp,esp
   1cfb1:	sub    esp,0x40
   1cfb4:	mov    eax,DWORD PTR [ebp+0x8]
   1cfb7:	mov    ecx,DWORD PTR [eax+0x4]
   1cfba:	mov    edx,DWORD PTR [eax+0x10]
   1cfbd:	push   ebx
   1cfbe:	mov    ebx,DWORD PTR [eax]
   1cfc0:	dec    ebx
   1cfc1:	lea    ecx,[ecx+ebx*1-0x5]
   1cfc5:	mov    DWORD PTR [ebp-0x2c],ecx
   1cfc8:	mov    ecx,edx
   1cfca:	sub    ecx,DWORD PTR [ebp+0xc]
   1cfcd:	push   esi
   1cfce:	mov    esi,DWORD PTR [eax+0x1c]
   1cfd1:	push   edi
   1cfd2:	mov    edi,DWORD PTR [eax+0xc]
   1cfd5:	dec    edi
   1cfd6:	add    ecx,edi
   1cfd8:	mov    DWORD PTR [ebp-0x3c],ecx
   1cfdb:	lea    ecx,[edx+edi*1-0x101]
   1cfe2:	mov    DWORD PTR [ebp-0x30],ecx
   1cfe5:	mov    ecx,DWORD PTR [esi+0x28]
   1cfe8:	mov    DWORD PTR [ebp-0x24],ecx
   1cfeb:	mov    ecx,DWORD PTR [esi+0x2c]
   1cfee:	mov    DWORD PTR [ebp-0x40],ecx
   1cff1:	mov    ecx,DWORD PTR [esi+0x30]
   1cff4:	mov    DWORD PTR [ebp-0x18],ecx
   1cff7:	mov    ecx,DWORD PTR [esi+0x34]
   1cffa:	mov    DWORD PTR [ebp-0x28],ecx
   1cffd:	mov    ecx,DWORD PTR [esi+0x38]
   1d000:	mov    DWORD PTR [ebp-0x4],ecx
   1d003:	mov    ecx,DWORD PTR [esi+0x3c]
   1d006:	mov    DWORD PTR [ebp+0xc],ecx
   1d009:	mov    ecx,DWORD PTR [esi+0x4c]
   1d00c:	xor    edx,edx
   1d00e:	mov    DWORD PTR [ebp-0x1c],ecx
   1d011:	mov    ecx,DWORD PTR [esi+0x50]
   1d014:	inc    edx
   1d015:	mov    DWORD PTR [ebp-0x20],ecx
   1d018:	mov    ecx,DWORD PTR [esi+0x54]
   1d01b:	shl    edx,cl
   1d01d:	mov    ecx,DWORD PTR [esi+0x58]
   1d020:	dec    edx
   1d021:	mov    DWORD PTR [ebp-0x34],edx
   1d024:	xor    edx,edx
   1d026:	inc    edx
   1d027:	shl    edx,cl
   1d029:	dec    edx
   1d02a:	mov    DWORD PTR [ebp-0x38],edx
   1d02d:	mov    ecx,DWORD PTR [ebp+0xc]
   1d030:	cmp    ecx,0xf
   1d033:	jae    0x1d052
   1d035:	add    DWORD PTR [ebp+0xc],0x8
   1d039:	inc    ebx
   1d03a:	movzx  edx,BYTE PTR [ebx]
   1d03d:	shl    edx,cl
   1d03f:	mov    ecx,DWORD PTR [ebp+0xc]
   1d042:	add    DWORD PTR [ebp-0x4],edx
   1d045:	inc    ebx
   1d046:	movzx  edx,BYTE PTR [ebx]
   1d049:	shl    edx,cl
   1d04b:	add    DWORD PTR [ebp-0x4],edx
   1d04e:	add    DWORD PTR [ebp+0xc],0x8
   1d052:	mov    ecx,DWORD PTR [ebp-0x34]
   1d055:	and    ecx,DWORD PTR [ebp-0x4]
   1d058:	mov    edx,DWORD PTR [ebp-0x1c]
   1d05b:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d05e:	mov    DWORD PTR [ebp-0x10],ecx
   1d061:	mov    edx,DWORD PTR [ebp-0x10]
   1d064:	shr    ecx,0x8
   1d067:	movzx  ecx,cl
   1d06a:	shr    DWORD PTR [ebp-0x4],cl
   1d06d:	sub    DWORD PTR [ebp+0xc],ecx
   1d070:	mov    DWORD PTR [ebp-0x8],ecx
   1d073:	movzx  ecx,dl
   1d076:	mov    DWORD PTR [ebp-0x8],ecx
   1d079:	test   ecx,ecx
   1d07b:	je     0x1d0c4
   1d07d:	mov    ecx,DWORD PTR [ebp-0x8]
   1d080:	test   cl,0x10
   1d083:	jne    0x1d0cf
   1d085:	test   cl,0x40
   1d088:	jne    0x1d31e
   1d08e:	xor    edx,edx
   1d090:	inc    edx
   1d091:	shl    edx,cl
   1d093:	mov    ecx,DWORD PTR [ebp-0x10]
   1d096:	shr    ecx,0x10
   1d099:	dec    edx
   1d09a:	and    edx,DWORD PTR [ebp-0x4]
   1d09d:	add    edx,ecx
   1d09f:	mov    ecx,DWORD PTR [ebp-0x1c]
   1d0a2:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d0a5:	mov    DWORD PTR [ebp-0x10],ecx
   1d0a8:	mov    edx,DWORD PTR [ebp-0x10]
   1d0ab:	shr    ecx,0x8
   1d0ae:	movzx  ecx,cl
   1d0b1:	shr    DWORD PTR [ebp-0x4],cl
   1d0b4:	sub    DWORD PTR [ebp+0xc],ecx
   1d0b7:	mov    DWORD PTR [ebp-0x8],ecx
   1d0ba:	movzx  ecx,dl
   1d0bd:	mov    DWORD PTR [ebp-0x8],ecx
   1d0c0:	test   ecx,ecx
   1d0c2:	jne    0x1d07d
   1d0c4:	inc    edi
   1d0c5:	shr    edx,0x10
   1d0c8:	mov    BYTE PTR [edi],dl
   1d0ca:	jmp    0x1d2fc
   1d0cf:	shr    edx,0x10
   1d0d2:	and    ecx,0xf
   1d0d5:	mov    DWORD PTR [ebp-0xc],edx
   1d0d8:	mov    DWORD PTR [ebp-0x8],ecx
   1d0db:	je     0x1d107
   1d0dd:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0e0:	cmp    ecx,DWORD PTR [ebp-0x8]
   1d0e3:	jae    0x1d0f2
   1d0e5:	inc    ebx
   1d0e6:	movzx  edx,BYTE PTR [ebx]
   1d0e9:	shl    edx,cl
   1d0eb:	add    DWORD PTR [ebp-0x4],edx
   1d0ee:	add    DWORD PTR [ebp+0xc],0x8
   1d0f2:	mov    ecx,DWORD PTR [ebp-0x8]
   1d0f5:	xor    edx,edx
   1d0f7:	inc    edx
   1d0f8:	shl    edx,cl
   1d0fa:	dec    edx
   1d0fb:	and    edx,DWORD PTR [ebp-0x4]
   1d0fe:	shr    DWORD PTR [ebp-0x4],cl
   1d101:	add    DWORD PTR [ebp-0xc],edx
   1d104:	sub    DWORD PTR [ebp+0xc],ecx
   1d107:	mov    ecx,DWORD PTR [ebp+0xc]
   1d10a:	cmp    ecx,0xf
   1d10d:	jae    0x1d12c
   1d10f:	add    DWORD PTR [ebp+0xc],0x8
   1d113:	inc    ebx
   1d114:	movzx  edx,BYTE PTR [ebx]
   1d117:	shl    edx,cl
   1d119:	mov    ecx,DWORD PTR [ebp+0xc]
   1d11c:	add    DWORD PTR [ebp-0x4],edx
   1d11f:	inc    ebx
   1d120:	movzx  edx,BYTE PTR [ebx]
   1d123:	shl    edx,cl
   1d125:	add    DWORD PTR [ebp-0x4],edx
   1d128:	add    DWORD PTR [ebp+0xc],0x8
   1d12c:	mov    ecx,DWORD PTR [ebp-0x38]
   1d12f:	and    ecx,DWORD PTR [ebp-0x4]
   1d132:	mov    edx,DWORD PTR [ebp-0x20]
   1d135:	mov    ecx,DWORD PTR [edx+ecx*4]
   1d138:	jmp    0x1d158
   1d13a:	test   cl,0x40
   1d13d:	jne    0x1d315
   1d143:	xor    edx,edx
   1d145:	inc    edx
   1d146:	shl    edx,cl
   1d148:	movzx  ecx,WORD PTR [ebp-0xe]
   1d14c:	dec    edx
   1d14d:	and    edx,DWORD PTR [ebp-0x4]
   1d150:	add    edx,ecx
   1d152:	mov    ecx,DWORD PTR [ebp-0x20]
   1d155:	mov    ecx,DWORD PTR [ecx+edx*4]
   1d158:	mov    DWORD PTR [ebp-0x10],ecx
   1d15b:	mov    edx,DWORD PTR [ebp-0x10]
   1d15e:	shr    ecx,0x8
   1d161:	movzx  ecx,cl
   1d164:	shr    DWORD PTR [ebp-0x4],cl
   1d167:	sub    DWORD PTR [ebp+0xc],ecx
   1d16a:	mov    DWORD PTR [ebp-0x8],ecx
   1d16d:	movzx  ecx,dl
   1d170:	test   cl,0x10
   1d173:	je     0x1d13a
   1d175:	and    ecx,0xf
   1d178:	shr    edx,0x10
   1d17b:	mov    DWORD PTR [ebp-0x14],edx
   1d17e:	mov    DWORD PTR [ebp-0x8],ecx
   1d181:	cmp    DWORD PTR [ebp+0xc],ecx
   1d184:	jae    0x1d1b1
   1d186:	mov    ecx,DWORD PTR [ebp+0xc]
   1d189:	add    DWORD PTR [ebp+0xc],0x8
   1d18d:	inc    ebx
   1d18e:	movzx  edx,BYTE PTR [ebx]
   1d191:	shl    edx,cl
   1d193:	mov    ecx,DWORD PTR [ebp-0x8]
   1d196:	add    DWORD PTR [ebp-0x4],edx
   1d199:	cmp    DWORD PTR [ebp+0xc],ecx
   1d19c:	jae    0x1d1b1
   1d19e:	mov    ecx,DWORD PTR [ebp+0xc]
   1d1a1:	inc    ebx
   1d1a2:	movzx  edx,BYTE PTR [ebx]
   1d1a5:	shl    edx,cl
   1d1a7:	mov    ecx,DWORD PTR [ebp-0x8]
   1d1aa:	add    DWORD PTR [ebp-0x4],edx
   1d1ad:	add    DWORD PTR [ebp+0xc],0x8
   1d1b1:	xor    edx,edx
   1d1b3:	inc    edx
   1d1b4:	shl    edx,cl
   1d1b6:	mov    ecx,DWORD PTR [ebp-0x8]
   1d1b9:	sub    DWORD PTR [ebp+0xc],ecx
   1d1bc:	dec    edx
   1d1bd:	and    edx,DWORD PTR [ebp-0x4]
   1d1c0:	shr    DWORD PTR [ebp-0x4],cl
   1d1c3:	add    DWORD PTR [ebp-0x14],edx
   1d1c6:	mov    edx,DWORD PTR [ebp-0x14]
   1d1c9:	mov    ecx,edi
   1d1cb:	sub    ecx,DWORD PTR [ebp-0x3c]
   1d1ce:	cmp    edx,ecx
   1d1d0:	jbe    0x1d2c4
   1d1d6:	sub    edx,ecx
   1d1d8:	mov    DWORD PTR [ebp-0x8],edx
   1d1db:	cmp    edx,DWORD PTR [ebp-0x40]
   1d1de:	ja     0x1d30c
   1d1e4:	mov    ecx,DWORD PTR [ebp-0x28]
   1d1e7:	dec    ecx
   1d1e8:	mov    DWORD PTR [ebp-0x10],ecx
   1d1eb:	mov    ecx,DWORD PTR [ebp-0x18]
   1d1ee:	test   ecx,ecx
   1d1f0:	jne    0x1d218
   1d1f2:	mov    ecx,DWORD PTR [ebp-0x24]
   1d1f5:	sub    ecx,edx
   1d1f7:	add    DWORD PTR [ebp-0x10],ecx
   1d1fa:	mov    ecx,edx
   1d1fc:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d1ff:	jae    0x1d28d
   1d205:	sub    DWORD PTR [ebp-0xc],ecx
   1d208:	mov    ecx,DWORD PTR [ebp-0x10]
   1d20b:	inc    ecx
   1d20c:	mov    dl,BYTE PTR [ecx]
   1d20e:	inc    edi
   1d20f:	dec    DWORD PTR [ebp-0x8]
   1d212:	mov    BYTE PTR [edi],dl
   1d214:	jne    0x1d20b
   1d216:	jmp    0x1d263
   1d218:	cmp    ecx,edx
   1d21a:	jae    0x1d26d
   1d21c:	sub    ecx,edx
   1d21e:	add    ecx,DWORD PTR [ebp-0x24]
   1d221:	add    DWORD PTR [ebp-0x10],ecx
   1d224:	mov    ecx,DWORD PTR [ebp-0x8]
   1d227:	sub    ecx,DWORD PTR [ebp-0x18]
   1d22a:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d22d:	jae    0x1d28d
   1d22f:	sub    DWORD PTR [ebp-0xc],ecx
   1d232:	inc    DWORD PTR [ebp-0x10]
   1d235:	mov    edx,DWORD PTR [ebp-0x10]
   1d238:	mov    dl,BYTE PTR [edx]
   1d23a:	inc    edi
   1d23b:	dec    ecx
   1d23c:	mov    BYTE PTR [edi],dl
   1d23e:	jne    0x1d232
   1d240:	mov    ecx,DWORD PTR [ebp-0x28]
   1d243:	dec    ecx
   1d244:	mov    DWORD PTR [ebp-0x10],ecx
   1d247:	mov    ecx,DWORD PTR [ebp-0x18]
   1d24a:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d24d:	jae    0x1d28d
   1d24f:	sub    DWORD PTR [ebp-0xc],ecx
   1d252:	mov    DWORD PTR [ebp-0x8],ecx
   1d255:	mov    ecx,DWORD PTR [ebp-0x10]
   1d258:	inc    ecx
   1d259:	mov    dl,BYTE PTR [ecx]
   1d25b:	inc    edi
   1d25c:	dec    DWORD PTR [ebp-0x8]
   1d25f:	mov    BYTE PTR [edi],dl
   1d261:	jne    0x1d258
   1d263:	mov    ecx,edi
   1d265:	sub    ecx,DWORD PTR [ebp-0x14]
   1d268:	mov    DWORD PTR [ebp-0x10],ecx
   1d26b:	jmp    0x1d290
   1d26d:	sub    ecx,edx
   1d26f:	add    DWORD PTR [ebp-0x10],ecx
   1d272:	mov    ecx,DWORD PTR [ebp-0x8]
   1d275:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d278:	jae    0x1d28d
   1d27a:	sub    DWORD PTR [ebp-0xc],ecx
   1d27d:	mov    ecx,DWORD PTR [ebp-0x10]
   1d280:	inc    ecx
   1d281:	mov    dl,BYTE PTR [ecx]
   1d283:	inc    edi
   1d284:	dec    DWORD PTR [ebp-0x8]
   1d287:	mov    BYTE PTR [edi],dl
   1d289:	jne    0x1d280
   1d28b:	jmp    0x1d263
   1d28d:	mov    ecx,DWORD PTR [ebp-0x10]
   1d290:	mov    edx,DWORD PTR [ebp-0xc]
   1d293:	cmp    edx,0x2
   1d296:	jbe    0x1d2e4
   1d298:	lea    eax,[edx-0x3]
   1d29b:	push   0x3
   1d29d:	xor    edx,edx
   1d29f:	pop    ecx
   1d2a0:	div    ecx
   1d2a2:	mov    ecx,DWORD PTR [ebp-0x10]
   1d2a5:	inc    eax
   1d2a6:	sub    DWORD PTR [ebp-0xc],0x3
   1d2aa:	inc    ecx
   1d2ab:	mov    dl,BYTE PTR [ecx]
   1d2ad:	inc    edi
   1d2ae:	mov    BYTE PTR [edi],dl
   1d2b0:	inc    ecx
   1d2b1:	mov    dl,BYTE PTR [ecx]
   1d2b3:	inc    edi
   1d2b4:	inc    ecx
   1d2b5:	mov    BYTE PTR [edi],dl
   1d2b7:	mov    dl,BYTE PTR [ecx]
   1d2b9:	inc    edi
   1d2ba:	dec    eax
   1d2bb:	mov    BYTE PTR [edi],dl
   1d2bd:	jne    0x1d2a6
   1d2bf:	mov    eax,DWORD PTR [ebp+0x8]
   1d2c2:	jmp    0x1d2e4
   1d2c4:	mov    ecx,edi
   1d2c6:	sub    ecx,edx
   1d2c8:	sub    DWORD PTR [ebp-0xc],0x3
   1d2cc:	inc    ecx
   1d2cd:	mov    dl,BYTE PTR [ecx]
   1d2cf:	inc    edi
   1d2d0:	mov    BYTE PTR [edi],dl
   1d2d2:	inc    ecx
   1d2d3:	mov    dl,BYTE PTR [ecx]
   1d2d5:	inc    edi
   1d2d6:	inc    ecx
   1d2d7:	mov    BYTE PTR [edi],dl
   1d2d9:	mov    dl,BYTE PTR [ecx]
   1d2db:	inc    edi
   1d2dc:	cmp    DWORD PTR [ebp-0xc],0x2
   1d2e0:	mov    BYTE PTR [edi],dl
   1d2e2:	ja     0x1d2c8
   1d2e4:	cmp    DWORD PTR [ebp-0xc],0x0
   1d2e8:	je     0x1d2fc
   1d2ea:	inc    ecx
   1d2eb:	mov    dl,BYTE PTR [ecx]
   1d2ed:	inc    edi
   1d2ee:	cmp    DWORD PTR [ebp-0xc],0x1
   1d2f2:	mov    BYTE PTR [edi],dl
   1d2f4:	jbe    0x1d2fc
   1d2f6:	mov    cl,BYTE PTR [ecx+0x1]
   1d2f9:	inc    edi
   1d2fa:	mov    BYTE PTR [edi],cl
   1d2fc:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d2ff:	jae    0x1d338
   1d301:	cmp    edi,DWORD PTR [ebp-0x30]
   1d304:	jb     0x1d02d
   1d30a:	jmp    0x1d338
   1d30c:	mov    DWORD PTR [eax+0x18],0x1f126
   1d313:	jmp    0x1d332
   1d315:	mov    DWORD PTR [eax+0x18],0x1f144
   1d31c:	jmp    0x1d332
   1d31e:	test   cl,0x20
   1d321:	je     0x1d32b
   1d323:	mov    DWORD PTR [esi],0xb
   1d329:	jmp    0x1d338
   1d32b:	mov    DWORD PTR [eax+0x18],0x1f15a
   1d332:	mov    DWORD PTR [esi],0x1b
   1d338:	mov    ecx,DWORD PTR [ebp+0xc]
   1d33b:	shr    ecx,0x3
   1d33e:	sub    ebx,ecx
   1d340:	shl    ecx,0x3
   1d343:	sub    DWORD PTR [ebp+0xc],ecx
   1d346:	xor    ecx,ecx
   1d348:	inc    ecx
   1d349:	mov    edx,ecx
   1d34b:	mov    ecx,DWORD PTR [ebp+0xc]
   1d34e:	shl    edx,cl
   1d350:	dec    edx
   1d351:	mov    ecx,edx
   1d353:	mov    edx,DWORD PTR [ebp-0x4]
   1d356:	and    edx,ecx
   1d358:	lea    ecx,[ebx+0x1]
   1d35b:	mov    DWORD PTR [eax],ecx
   1d35d:	lea    ecx,[edi+0x1]
   1d360:	mov    DWORD PTR [eax+0xc],ecx
   1d363:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d366:	sub    ecx,ebx
   1d368:	add    ecx,0x5
   1d36b:	mov    DWORD PTR [eax+0x4],ecx
   1d36e:	mov    ecx,DWORD PTR [ebp-0x30]
   1d371:	sub    ecx,edi
   1d373:	add    ecx,0x101
   1d379:	mov    DWORD PTR [eax+0x10],ecx
   1d37c:	mov    eax,DWORD PTR [ebp+0xc]
   1d37f:	pop    edi
   1d380:	mov    DWORD PTR [esi+0x38],edx
   1d383:	mov    DWORD PTR [esi+0x3c],eax
   1d386:	pop    esi
   1d387:	pop    ebx
   1d388:	leave  
   1d389:	ret    0x8
   1d38c:	int3   
   1d38d:	int3   
   1d38e:	int3   
   1d38f:	int3   
   1d390:	int3   
   1d391:	int3   
   1d392:	mov    edi,edi
   1d394:	push   ebp
   1d395:	mov    ebp,esp
   1d397:	sub    esp,0x90
   1d39d:	mov    eax,ds:0x77b1c
   1d3a2:	xor    eax,ebp
   1d3a4:	mov    DWORD PTR [ebp-0x4],eax
   1d3a7:	mov    eax,DWORD PTR [ebp+0xc]
   1d3aa:	mov    edx,DWORD PTR [ebp+0x18]
   1d3ad:	mov    DWORD PTR [ebp-0x7c],eax
   1d3b0:	mov    eax,DWORD PTR [ebp+0x1c]
   1d3b3:	push   ebx
   1d3b4:	mov    DWORD PTR [ebp-0x4c],eax
   1d3b7:	xor    eax,eax
   1d3b9:	push   esi
   1d3ba:	mov    esi,DWORD PTR [ebp+0x14]
   1d3bd:	movzx  ebx,ax
   1d3c0:	push   edi
   1d3c1:	mov    eax,ebx
   1d3c3:	shl    ebx,0x10
   1d3c6:	push   0x8
   1d3c8:	or     eax,ebx
   1d3ca:	pop    ecx
   1d3cb:	lea    edi,[ebp-0x24]
   1d3ce:	rep stos DWORD PTR es:[edi],eax
   1d3d0:	xor    edi,edi
   1d3d2:	xor    ecx,ecx
   1d3d4:	mov    DWORD PTR [ebp-0x90],edx
   1d3da:	cmp    DWORD PTR [ebp+0x10],edi
   1d3dd:	jbe    0x1d3f3
   1d3df:	mov    eax,DWORD PTR [ebp-0x7c]
   1d3e2:	movzx  eax,WORD PTR [eax+ecx*2]
   1d3e6:	lea    eax,[ebp+eax*2-0x24]
   1d3ea:	inc    WORD PTR [eax]
   1d3ed:	inc    ecx
   1d3ee:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d3f1:	jb     0x1d3df
   1d3f3:	mov    ecx,DWORD PTR [edx]
   1d3f5:	push   0xf
   1d3f7:	pop    eax
   1d3f8:	mov    DWORD PTR [ebp-0x54],ecx
   1d3fb:	mov    DWORD PTR [ebp-0x60],eax
   1d3fe:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d403:	jne    0x1d40e
   1d405:	dec    eax
   1d406:	mov    DWORD PTR [ebp-0x60],eax
   1d409:	cmp    eax,0x1
   1d40c:	jae    0x1d3fe
   1d40e:	cmp    ecx,eax
   1d410:	jbe    0x1d415
   1d412:	mov    DWORD PTR [ebp-0x54],eax
   1d415:	cmp    eax,edi
   1d417:	jne    0x1d443
   1d419:	mov    ecx,DWORD PTR [esi]
   1d41b:	xor    eax,eax
   1d41d:	mov    BYTE PTR [ebp-0x48],0x40
   1d421:	mov    BYTE PTR [ebp-0x47],0x1
   1d425:	mov    WORD PTR [ebp-0x46],ax
   1d429:	mov    eax,DWORD PTR [ebp-0x48]
   1d42c:	mov    DWORD PTR [ecx],eax
   1d42e:	add    DWORD PTR [esi],0x4
   1d431:	mov    ecx,DWORD PTR [esi]
   1d433:	mov    DWORD PTR [ecx],eax
   1d435:	add    DWORD PTR [esi],0x4
   1d438:	mov    DWORD PTR [edx],0x1
   1d43e:	jmp    0x1d77f
   1d443:	xor    ecx,ecx
   1d445:	inc    ecx
   1d446:	mov    edx,ecx
   1d448:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d44d:	jne    0x1d455
   1d44f:	inc    edx
   1d450:	cmp    edx,0xf
   1d453:	jbe    0x1d448
   1d455:	cmp    DWORD PTR [ebp-0x54],edx
   1d458:	jae    0x1d45d
   1d45a:	mov    DWORD PTR [ebp-0x54],edx
   1d45d:	mov    edi,ecx
   1d45f:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d464:	add    edi,edi
   1d466:	sub    edi,ebx
   1d468:	js     0x1d4f4
   1d46e:	inc    ecx
   1d46f:	cmp    ecx,0xf
   1d472:	jbe    0x1d45f
   1d474:	xor    ebx,ebx
   1d476:	cmp    edi,ebx
   1d478:	jle    0x1d484
   1d47a:	cmp    DWORD PTR [ebp+0x8],ebx
   1d47d:	je     0x1d4f4
   1d47f:	cmp    eax,0x1
   1d482:	jne    0x1d4f4
   1d484:	xor    eax,eax
   1d486:	push   0x2
   1d488:	mov    WORD PTR [ebp-0x42],ax
   1d48c:	pop    ecx
   1d48d:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d492:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d497:	inc    ecx
   1d498:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d49d:	inc    ecx
   1d49e:	cmp    ecx,0x1e
   1d4a1:	jb     0x1d48d
   1d4a3:	mov    eax,DWORD PTR [ebp-0x4c]
   1d4a6:	xor    edi,edi
   1d4a8:	cmp    DWORD PTR [ebp+0x10],ebx
   1d4ab:	jbe    0x1d4d6
   1d4ad:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d4b0:	lea    ecx,[ecx+edi*2]
   1d4b3:	cmp    WORD PTR [ecx],bx
   1d4b6:	je     0x1d4d0
   1d4b8:	movzx  ebx,WORD PTR [ecx]
   1d4bb:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d4c0:	mov    WORD PTR [eax+ebx*2],di
   1d4c4:	movzx  ecx,WORD PTR [ecx]
   1d4c7:	lea    ecx,[ebp+ecx*2-0x44]
   1d4cb:	inc    WORD PTR [ecx]
   1d4ce:	xor    ebx,ebx
   1d4d0:	inc    edi
   1d4d1:	cmp    edi,DWORD PTR [ebp+0x10]
   1d4d4:	jb     0x1d4ad
   1d4d6:	mov    ecx,DWORD PTR [ebp+0x8]
   1d4d9:	sub    ecx,ebx
   1d4db:	je     0x1d51e
   1d4dd:	dec    ecx
   1d4de:	je     0x1d4fc
   1d4e0:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d4e4:	mov    DWORD PTR [ebp-0x6c],0x75540
   1d4eb:	mov    DWORD PTR [ebp-0x78],0x75580
   1d4f2:	jmp    0x1d52b
   1d4f4:	or     eax,0xffffffff
   1d4f7:	jmp    0x1d781
   1d4fc:	mov    ecx,0x202
   1d501:	mov    edi,0x754c0
   1d506:	sub    edi,ecx
   1d508:	mov    DWORD PTR [ebp-0x6c],edi
   1d50b:	mov    edi,0x75500
   1d510:	sub    edi,ecx
   1d512:	mov    DWORD PTR [ebp-0x78],edi
   1d515:	mov    DWORD PTR [ebp-0x68],0x100
   1d51c:	jmp    0x1d52b
   1d51e:	mov    DWORD PTR [ebp-0x78],eax
   1d521:	mov    DWORD PTR [ebp-0x6c],eax
   1d524:	mov    DWORD PTR [ebp-0x68],0x13
   1d52b:	mov    ecx,DWORD PTR [ebp-0x54]
   1d52e:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d532:	mov    edi,DWORD PTR [esi]
   1d534:	mov    eax,edx
   1d536:	xor    edx,edx
   1d538:	inc    edx
   1d539:	shl    edx,cl
   1d53b:	cmp    DWORD PTR [ebp+0x8],0x1
   1d53f:	mov    DWORD PTR [ebp-0x5c],ebx
   1d542:	mov    DWORD PTR [ebp-0x84],eax
   1d548:	lea    ecx,[edx-0x1]
   1d54b:	mov    DWORD PTR [ebp-0x50],ebx
   1d54e:	mov    DWORD PTR [ebp-0x80],edx
   1d551:	mov    DWORD PTR [ebp-0x64],edx
   1d554:	mov    DWORD PTR [ebp-0x88],ecx
   1d55a:	jne    0x1d56c
   1d55c:	cmp    edx,0x5b0
   1d562:	jb     0x1d56c
   1d564:	xor    eax,eax
   1d566:	inc    eax
   1d567:	jmp    0x1d781
   1d56c:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d56f:	mov    DWORD PTR [ebp-0x58],ecx
   1d572:	mov    cl,al
   1d574:	sub    cl,BYTE PTR [ebp-0x50]
   1d577:	mov    BYTE PTR [ebp-0x47],cl
   1d57a:	mov    ecx,DWORD PTR [ebp-0x58]
   1d57d:	movzx  edx,WORD PTR [ecx]
   1d580:	movzx  ecx,dx
   1d583:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d586:	jge    0x1d592
   1d588:	mov    BYTE PTR [ebp-0x48],0x0
   1d58c:	mov    WORD PTR [ebp-0x46],dx
   1d590:	jmp    0x1d5b8
   1d592:	jle    0x1d5ae
   1d594:	mov    ecx,DWORD PTR [ebp-0x58]
   1d597:	movzx  ecx,WORD PTR [ecx]
   1d59a:	mov    edx,DWORD PTR [ebp-0x78]
   1d59d:	add    ecx,ecx
   1d59f:	mov    dl,BYTE PTR [ecx+edx*1]
   1d5a2:	mov    BYTE PTR [ebp-0x48],dl
   1d5a5:	mov    edx,DWORD PTR [ebp-0x6c]
   1d5a8:	mov    cx,WORD PTR [ecx+edx*1]
   1d5ac:	jmp    0x1d5b4
   1d5ae:	mov    BYTE PTR [ebp-0x48],0x60
   1d5b2:	xor    ecx,ecx
   1d5b4:	mov    WORD PTR [ebp-0x46],cx
   1d5b8:	xor    edx,edx
   1d5ba:	mov    ecx,eax
   1d5bc:	sub    ecx,DWORD PTR [ebp-0x50]
   1d5bf:	inc    edx
   1d5c0:	shl    edx,cl
   1d5c2:	mov    ecx,DWORD PTR [ebp-0x80]
   1d5c5:	mov    DWORD PTR [ebp-0x4c],ecx
   1d5c8:	mov    DWORD PTR [ebp-0x70],ecx
   1d5cb:	mov    ecx,DWORD PTR [ebp-0x50]
   1d5ce:	shr    ebx,cl
   1d5d0:	add    ebx,DWORD PTR [ebp-0x4c]
   1d5d3:	lea    ecx,[edi+ebx*4]
   1d5d6:	sub    DWORD PTR [ebp-0x4c],edx
   1d5d9:	mov    ebx,edx
   1d5db:	shl    ebx,0x2
   1d5de:	sub    ecx,ebx
   1d5e0:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d5e4:	mov    ebx,DWORD PTR [ebp-0x48]
   1d5e7:	mov    DWORD PTR [ecx],ebx
   1d5e9:	jne    0x1d5d6
   1d5eb:	xor    edx,edx
   1d5ed:	lea    ecx,[eax-0x1]
   1d5f0:	inc    edx
   1d5f1:	shl    edx,cl
   1d5f3:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d5f6:	jmp    0x1d5fa
   1d5f8:	shr    edx,1
   1d5fa:	test   ecx,edx
   1d5fc:	jne    0x1d5f8
   1d5fe:	test   edx,edx
   1d600:	je     0x1d60b
   1d602:	lea    ebx,[edx-0x1]
   1d605:	and    ebx,ecx
   1d607:	add    ebx,edx
   1d609:	jmp    0x1d60d
   1d60b:	xor    ebx,ebx
   1d60d:	add    DWORD PTR [ebp-0x58],0x2
   1d611:	lea    ecx,[ebp+eax*2-0x24]
   1d615:	mov    edx,0xffff
   1d61a:	add    WORD PTR [ecx],dx
   1d61d:	movzx  ecx,WORD PTR [ecx]
   1d620:	mov    DWORD PTR [ebp-0x5c],ebx
   1d623:	test   cx,cx
   1d626:	jne    0x1d644
   1d628:	cmp    eax,DWORD PTR [ebp-0x60]
   1d62b:	je     0x1d707
   1d631:	mov    eax,DWORD PTR [ebp-0x58]
   1d634:	movzx  eax,WORD PTR [eax]
   1d637:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d63a:	movzx  eax,WORD PTR [ecx+eax*2]
   1d63e:	mov    DWORD PTR [ebp-0x84],eax
   1d644:	mov    edx,DWORD PTR [ebp-0x54]
   1d647:	cmp    eax,edx
   1d649:	jbe    0x1d572
   1d64f:	mov    ecx,DWORD PTR [ebp-0x88]
   1d655:	and    ecx,ebx
   1d657:	mov    DWORD PTR [ebp-0x8c],ecx
   1d65d:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d660:	je     0x1d572
   1d666:	cmp    DWORD PTR [ebp-0x50],0x0
   1d66a:	jne    0x1d66f
   1d66c:	mov    DWORD PTR [ebp-0x50],edx
   1d66f:	mov    ecx,DWORD PTR [ebp-0x70]
   1d672:	lea    edi,[edi+ecx*4]
   1d675:	mov    ecx,eax
   1d677:	mov    eax,DWORD PTR [ebp-0x50]
   1d67a:	xor    edx,edx
   1d67c:	sub    ecx,eax
   1d67e:	inc    edx
   1d67f:	add    eax,ecx
   1d681:	shl    edx,cl
   1d683:	cmp    eax,DWORD PTR [ebp-0x60]
   1d686:	jae    0x1d6b0
   1d688:	mov    DWORD PTR [ebp-0x4c],eax
   1d68b:	lea    eax,[ebp+eax*2-0x24]
   1d68f:	jmp    0x1d694
   1d691:	mov    eax,DWORD PTR [ebp-0x70]
   1d694:	movzx  ebx,WORD PTR [eax]
   1d697:	sub    edx,ebx
   1d699:	test   edx,edx
   1d69b:	jle    0x1d6b0
   1d69d:	inc    ecx
   1d69e:	inc    DWORD PTR [ebp-0x4c]
   1d6a1:	inc    eax
   1d6a2:	inc    eax
   1d6a3:	mov    DWORD PTR [ebp-0x70],eax
   1d6a6:	mov    eax,DWORD PTR [ebp-0x4c]
   1d6a9:	add    edx,edx
   1d6ab:	cmp    eax,DWORD PTR [ebp-0x60]
   1d6ae:	jb     0x1d691
   1d6b0:	xor    eax,eax
   1d6b2:	inc    eax
   1d6b3:	mov    edx,eax
   1d6b5:	shl    edx,cl
   1d6b7:	add    DWORD PTR [ebp-0x64],edx
   1d6ba:	mov    DWORD PTR [ebp-0x80],edx
   1d6bd:	cmp    DWORD PTR [ebp+0x8],eax
   1d6c0:	jne    0x1d6cf
   1d6c2:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d6c9:	jae    0x1d781
   1d6cf:	mov    eax,DWORD PTR [ebp-0x8c]
   1d6d5:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d6d8:	mov    edx,eax
   1d6da:	mov    DWORD PTR [ebp-0x74],eax
   1d6dd:	mov    eax,DWORD PTR [esi]
   1d6df:	shl    edx,0x2
   1d6e2:	mov    BYTE PTR [edx+eax*1],cl
   1d6e5:	mov    eax,DWORD PTR [esi]
   1d6e7:	mov    cl,BYTE PTR [ebp-0x54]
   1d6ea:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d6ee:	mov    eax,DWORD PTR [esi]
   1d6f0:	mov    ecx,edi
   1d6f2:	sub    ecx,eax
   1d6f4:	sar    ecx,0x2
   1d6f7:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d6fc:	mov    eax,DWORD PTR [ebp-0x84]
   1d702:	jmp    0x1d572
   1d707:	mov    cl,al
   1d709:	sub    cl,BYTE PTR [ebp-0x50]
   1d70c:	mov    BYTE PTR [ebp-0x48],0x40
   1d710:	mov    BYTE PTR [ebp-0x47],cl
   1d713:	xor    ecx,ecx
   1d715:	mov    WORD PTR [ebp-0x46],cx
   1d719:	jmp    0x1d768
   1d71b:	cmp    DWORD PTR [ebp-0x50],0x0
   1d71f:	je     0x1d73a
   1d721:	mov    ecx,DWORD PTR [ebp-0x88]
   1d727:	and    ecx,ebx
   1d729:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d72c:	je     0x1d73a
   1d72e:	mov    eax,DWORD PTR [ebp-0x54]
   1d731:	and    DWORD PTR [ebp-0x50],0x0
   1d735:	mov    edi,DWORD PTR [esi]
   1d737:	mov    BYTE PTR [ebp-0x47],al
   1d73a:	mov    ecx,DWORD PTR [ebp-0x50]
   1d73d:	mov    edx,ebx
   1d73f:	shr    edx,cl
   1d741:	mov    ecx,DWORD PTR [ebp-0x48]
   1d744:	mov    DWORD PTR [edi+edx*4],ecx
   1d747:	xor    edx,edx
   1d749:	lea    ecx,[eax-0x1]
   1d74c:	inc    edx
   1d74d:	shl    edx,cl
   1d74f:	jmp    0x1d753
   1d751:	shr    edx,1
   1d753:	test   ebx,edx
   1d755:	jne    0x1d751
   1d757:	test   edx,edx
   1d759:	je     0x1d766
   1d75b:	lea    ecx,[edx-0x1]
   1d75e:	and    ecx,ebx
   1d760:	add    ecx,edx
   1d762:	mov    ebx,ecx
   1d764:	jmp    0x1d768
   1d766:	xor    ebx,ebx
   1d768:	test   ebx,ebx
   1d76a:	jne    0x1d71b
   1d76c:	mov    eax,DWORD PTR [ebp-0x64]
   1d76f:	mov    ecx,DWORD PTR [ebp-0x54]
   1d772:	shl    eax,0x2
   1d775:	add    DWORD PTR [esi],eax
   1d777:	mov    eax,DWORD PTR [ebp-0x90]
   1d77d:	mov    DWORD PTR [eax],ecx
   1d77f:	xor    eax,eax
   1d781:	mov    ecx,DWORD PTR [ebp-0x4]
   1d784:	pop    edi
   1d785:	pop    esi
   1d786:	xor    ecx,ebp
   1d788:	pop    ebx
   1d789:	call   0x1dca9
   1d78e:	leave  
   1d78f:	ret    0x18
   1d792:	int3   
   1d793:	int3   
   1d794:	int3   
   1d795:	int3   
   1d796:	int3   
   1d797:	int3   
   1d798:	mov    edi,edi
   1d79a:	push   ebp
   1d79b:	mov    ebp,esp
   1d79d:	push   ebx
   1d79e:	mov    ebx,DWORD PTR [ebp+0x10]
   1d7a1:	push   esi
   1d7a2:	mov    esi,DWORD PTR [ebp+0x8]
   1d7a5:	push   edi
   1d7a6:	xor    eax,eax
   1d7a8:	mov    edi,esi
   1d7aa:	inc    eax
   1d7ab:	shr    edi,0x10
   1d7ae:	and    esi,0xffff
   1d7b4:	cmp    ebx,eax
   1d7b6:	jne    0x1d7dc
   1d7b8:	mov    eax,DWORD PTR [ebp+0xc]
   1d7bb:	movzx  eax,BYTE PTR [eax]
   1d7be:	add    esi,eax
   1d7c0:	mov    eax,0xfff1
   1d7c5:	cmp    esi,eax
   1d7c7:	jb     0x1d7cb
   1d7c9:	sub    esi,eax
   1d7cb:	add    edi,esi
   1d7cd:	cmp    edi,eax
   1d7cf:	jb     0x1d9ae
   1d7d5:	sub    edi,eax
   1d7d7:	jmp    0x1d9ae
   1d7dc:	mov    ecx,DWORD PTR [ebp+0xc]
   1d7df:	test   ecx,ecx
   1d7e1:	je     0x1d9b5
   1d7e7:	cmp    ebx,0x10
   1d7ea:	jb     0x1d971
   1d7f0:	cmp    ebx,0x15b0
   1d7f6:	jb     0x1d8c4
   1d7fc:	mov    eax,ebx
   1d7fe:	mov    ebx,0x15b0
   1d803:	xor    edx,edx
   1d805:	div    ebx
   1d807:	mov    ebx,DWORD PTR [ebp+0x10]
   1d80a:	mov    DWORD PTR [ebp+0xc],eax
   1d80d:	sub    ebx,0x15b0
   1d813:	mov    eax,0x15b
   1d818:	movzx  edx,BYTE PTR [ecx]
   1d81b:	add    esi,edx
   1d81d:	movzx  edx,BYTE PTR [ecx+0x1]
   1d821:	add    edi,esi
   1d823:	add    esi,edx
   1d825:	movzx  edx,BYTE PTR [ecx+0x2]
   1d829:	add    edi,esi
   1d82b:	add    esi,edx
   1d82d:	movzx  edx,BYTE PTR [ecx+0x3]
   1d831:	add    edi,esi
   1d833:	add    esi,edx
   1d835:	movzx  edx,BYTE PTR [ecx+0x4]
   1d839:	add    edi,esi
   1d83b:	add    esi,edx
   1d83d:	movzx  edx,BYTE PTR [ecx+0x5]
   1d841:	add    edi,esi
   1d843:	add    esi,edx
   1d845:	movzx  edx,BYTE PTR [ecx+0x6]
   1d849:	add    edi,esi
   1d84b:	add    esi,edx
   1d84d:	movzx  edx,BYTE PTR [ecx+0x7]
   1d851:	add    edi,esi
   1d853:	add    esi,edx
   1d855:	movzx  edx,BYTE PTR [ecx+0x8]
   1d859:	add    edi,esi
   1d85b:	add    esi,edx
   1d85d:	movzx  edx,BYTE PTR [ecx+0x9]
   1d861:	add    edi,esi
   1d863:	add    esi,edx
   1d865:	movzx  edx,BYTE PTR [ecx+0xa]
   1d869:	add    edi,esi
   1d86b:	add    esi,edx
   1d86d:	movzx  edx,BYTE PTR [ecx+0xb]
   1d871:	add    edi,esi
   1d873:	add    esi,edx
   1d875:	movzx  edx,BYTE PTR [ecx+0xc]
   1d879:	add    edi,esi
   1d87b:	add    esi,edx
   1d87d:	movzx  edx,BYTE PTR [ecx+0xd]
   1d881:	add    edi,esi
   1d883:	add    esi,edx
   1d885:	movzx  edx,BYTE PTR [ecx+0xe]
   1d889:	add    edi,esi
   1d88b:	add    esi,edx
   1d88d:	movzx  edx,BYTE PTR [ecx+0xf]
   1d891:	add    edi,esi
   1d893:	add    esi,edx
   1d895:	add    edi,esi
   1d897:	add    ecx,0x10
   1d89a:	dec    eax
   1d89b:	jne    0x1d818
   1d8a1:	mov    eax,esi
   1d8a3:	xor    edx,edx
   1d8a5:	mov    esi,0xfff1
   1d8aa:	div    esi
   1d8ac:	mov    eax,edi
   1d8ae:	mov    edi,0xfff1
   1d8b3:	mov    esi,edx
   1d8b5:	xor    edx,edx
   1d8b7:	div    edi
   1d8b9:	dec    DWORD PTR [ebp+0xc]
   1d8bc:	mov    edi,edx
   1d8be:	jne    0x1d80d
   1d8c4:	test   ebx,ebx
   1d8c6:	je     0x1d9ae
   1d8cc:	cmp    ebx,0x10
   1d8cf:	jb     0x1d993
   1d8d5:	mov    eax,ebx
   1d8d7:	shr    eax,0x4
   1d8da:	movzx  edx,BYTE PTR [ecx]
   1d8dd:	add    esi,edx
   1d8df:	movzx  edx,BYTE PTR [ecx+0x1]
   1d8e3:	add    edi,esi
   1d8e5:	add    esi,edx
   1d8e7:	movzx  edx,BYTE PTR [ecx+0x2]
   1d8eb:	add    edi,esi
   1d8ed:	add    esi,edx
   1d8ef:	movzx  edx,BYTE PTR [ecx+0x3]
   1d8f3:	add    edi,esi
   1d8f5:	add    esi,edx
   1d8f7:	movzx  edx,BYTE PTR [ecx+0x4]
   1d8fb:	add    edi,esi
   1d8fd:	add    esi,edx
   1d8ff:	movzx  edx,BYTE PTR [ecx+0x5]
   1d903:	add    edi,esi
   1d905:	add    esi,edx
   1d907:	movzx  edx,BYTE PTR [ecx+0x6]
   1d90b:	add    edi,esi
   1d90d:	add    esi,edx
   1d90f:	movzx  edx,BYTE PTR [ecx+0x7]
   1d913:	add    edi,esi
   1d915:	add    esi,edx
   1d917:	movzx  edx,BYTE PTR [ecx+0x8]
   1d91b:	add    edi,esi
   1d91d:	add    esi,edx
   1d91f:	movzx  edx,BYTE PTR [ecx+0x9]
   1d923:	add    edi,esi
   1d925:	add    esi,edx
   1d927:	movzx  edx,BYTE PTR [ecx+0xa]
   1d92b:	add    edi,esi
   1d92d:	add    esi,edx
   1d92f:	movzx  edx,BYTE PTR [ecx+0xb]
   1d933:	add    edi,esi
   1d935:	add    esi,edx
   1d937:	movzx  edx,BYTE PTR [ecx+0xc]
   1d93b:	add    edi,esi
   1d93d:	add    esi,edx
   1d93f:	movzx  edx,BYTE PTR [ecx+0xd]
   1d943:	add    edi,esi
   1d945:	add    esi,edx
   1d947:	movzx  edx,BYTE PTR [ecx+0xe]
   1d94b:	add    edi,esi
   1d94d:	add    esi,edx
   1d94f:	movzx  edx,BYTE PTR [ecx+0xf]
   1d953:	add    edi,esi
   1d955:	add    esi,edx
   1d957:	sub    ebx,0x10
   1d95a:	add    edi,esi
   1d95c:	add    ecx,0x10
   1d95f:	dec    eax
   1d960:	jne    0x1d8da
   1d966:	jmp    0x1d993
   1d968:	movzx  eax,BYTE PTR [ecx]
   1d96b:	dec    ebx
   1d96c:	add    esi,eax
   1d96e:	inc    ecx
   1d96f:	add    edi,esi
   1d971:	test   ebx,ebx
   1d973:	jne    0x1d968
   1d975:	mov    ecx,0xfff1
   1d97a:	cmp    esi,ecx
   1d97c:	jb     0x1d980
   1d97e:	sub    esi,ecx
   1d980:	mov    eax,edi
   1d982:	xor    edx,edx
   1d984:	div    ecx
   1d986:	mov    eax,edx
   1d988:	jmp    0x1d9b0
   1d98a:	movzx  eax,BYTE PTR [ecx]
   1d98d:	dec    ebx
   1d98e:	add    esi,eax
   1d990:	inc    ecx
   1d991:	add    edi,esi
   1d993:	test   ebx,ebx
   1d995:	jne    0x1d98a
   1d997:	mov    eax,esi
   1d999:	mov    ecx,0xfff1
   1d99e:	xor    edx,edx
   1d9a0:	mov    esi,ecx
   1d9a2:	div    esi
   1d9a4:	mov    eax,edi
   1d9a6:	mov    esi,edx
   1d9a8:	xor    edx,edx
   1d9aa:	div    ecx
   1d9ac:	mov    edi,edx
   1d9ae:	mov    eax,edi
   1d9b0:	shl    eax,0x10
   1d9b3:	or     eax,esi
   1d9b5:	pop    edi
   1d9b6:	pop    esi
   1d9b7:	pop    ebx
   1d9b8:	pop    ebp
   1d9b9:	ret    0xc
   1d9bc:	int3   
   1d9bd:	int3   
   1d9be:	int3   
   1d9bf:	int3   
   1d9c0:	int3   
   1d9c1:	int3   
   1d9c2:	mov    edi,edi
   1d9c4:	push   ebp
   1d9c5:	mov    ebp,esp
   1d9c7:	push   ecx
   1d9c8:	cmp    DWORD PTR [ebp+0x8],0x0
   1d9cc:	push   esi
   1d9cd:	not    eax
   1d9cf:	mov    ecx,0xff
   1d9d4:	je     0x1d9f2
   1d9d6:	test   dl,0x3
   1d9d9:	je     0x1d9f2
   1d9db:	movzx  esi,BYTE PTR [edx]
   1d9de:	xor    esi,eax
   1d9e0:	and    esi,ecx
   1d9e2:	shr    eax,0x8
   1d9e5:	xor    eax,DWORD PTR [esi*4+0x755c0]
   1d9ec:	inc    edx
   1d9ed:	dec    DWORD PTR [ebp+0x8]
   1d9f0:	jne    0x1d9d6
   1d9f2:	cmp    DWORD PTR [ebp+0x8],0x20
   1d9f6:	push   ebx
   1d9f7:	push   edi
   1d9f8:	push   0x4
   1d9fa:	mov    esi,edx
   1d9fc:	pop    edi
   1d9fd:	jb     0x1dbc1
   1da03:	mov    edx,DWORD PTR [ebp+0x8]
   1da06:	shr    edx,0x5
   1da09:	mov    DWORD PTR [ebp-0x4],edx
   1da0c:	xor    eax,DWORD PTR [esi]
   1da0e:	add    esi,edi
   1da10:	mov    edx,eax
   1da12:	shr    edx,0x10
   1da15:	mov    ebx,eax
   1da17:	shr    ebx,0x8
   1da1a:	and    edx,ecx
   1da1c:	mov    edx,DWORD PTR [edx*4+0x759c0]
   1da23:	and    ebx,ecx
   1da25:	xor    edx,DWORD PTR [ebx*4+0x75dc0]
   1da2c:	mov    ebx,eax
   1da2e:	shr    ebx,0x18
   1da31:	xor    edx,DWORD PTR [ebx*4+0x755c0]
   1da38:	and    eax,ecx
   1da3a:	xor    edx,DWORD PTR [eax*4+0x761c0]
   1da41:	xor    edx,DWORD PTR [esi]
   1da43:	add    esi,edi
   1da45:	mov    eax,edx
   1da47:	shr    eax,0x10
   1da4a:	mov    ebx,edx
   1da4c:	shr    ebx,0x8
   1da4f:	and    eax,ecx
   1da51:	mov    eax,DWORD PTR [eax*4+0x759c0]
   1da58:	and    ebx,ecx
   1da5a:	xor    eax,DWORD PTR [ebx*4+0x75dc0]
   1da61:	mov    ebx,edx
   1da63:	shr    ebx,0x18
   1da66:	xor    eax,DWORD PTR [ebx*4+0x755c0]
   1da6d:	and    edx,ecx
   1da6f:	xor    eax,DWORD PTR [edx*4+0x761c0]
   1da76:	xor    eax,DWORD PTR [esi]
   1da78:	add    esi,edi
   1da7a:	mov    edx,eax
   1da7c:	shr    edx,0x10
   1da7f:	mov    ebx,eax
   1da81:	and    edx,ecx
   1da83:	mov    edx,DWORD PTR [edx*4+0x759c0]
   1da8a:	shr    ebx,0x8
   1da8d:	and    ebx,ecx
   1da8f:	xor    edx,DWORD PTR [ebx*4+0x75dc0]
   1da96:	mov    ebx,eax
   1da98:	shr    ebx,0x18
   1da9b:	xor    edx,DWORD PTR [ebx*4+0x755c0]
   1daa2:	and    eax,ecx
   1daa4:	xor    edx,DWORD PTR [eax*4+0x761c0]
   1daab:	xor    edx,DWORD PTR [esi]
   1daad:	add    esi,edi
   1daaf:	mov    eax,edx
   1dab1:	shr    eax,0x10
   1dab4:	mov    ebx,edx
   1dab6:	shr    ebx,0x8
   1dab9:	and    eax,ecx
   1dabb:	mov    eax,DWORD PTR [eax*4+0x759c0]
   1dac2:	and    ebx,ecx
   1dac4:	xor    eax,DWORD PTR [ebx*4+0x75dc0]
   1dacb:	mov    ebx,edx
   1dacd:	shr    ebx,0x18
   1dad0:	xor    eax,DWORD PTR [ebx*4+0x755c0]
   1dad7:	and    edx,ecx
   1dad9:	xor    eax,DWORD PTR [edx*4+0x761c0]
   1dae0:	xor    eax,DWORD PTR [esi]
   1dae2:	add    esi,edi
   1dae4:	mov    edx,eax
   1dae6:	shr    edx,0x10
   1dae9:	mov    ebx,eax
   1daeb:	and    edx,ecx
   1daed:	mov    edx,DWORD PTR [edx*4+0x759c0]
   1daf4:	shr    ebx,0x8
   1daf7:	and    ebx,ecx
   1daf9:	xor    edx,DWORD PTR [ebx*4+0x75dc0]
   1db00:	mov    ebx,eax
   1db02:	shr    ebx,0x18
   1db05:	xor    edx,DWORD PTR [ebx*4+0x755c0]
   1db0c:	and    eax,ecx
   1db0e:	xor    edx,DWORD PTR [eax*4+0x761c0]
   1db15:	xor    edx,DWORD PTR [esi]
   1db17:	add    esi,edi
   1db19:	mov    eax,edx
   1db1b:	shr    eax,0x10
   1db1e:	and    eax,ecx
   1db20:	mov    ebx,edx
   1db22:	mov    eax,DWORD PTR [eax*4+0x759c0]
   1db29:	shr    ebx,0x8
   1db2c:	and    ebx,ecx
   1db2e:	xor    eax,DWORD PTR [ebx*4+0x75dc0]
   1db35:	mov    ebx,edx
   1db37:	shr    ebx,0x18
   1db3a:	xor    eax,DWORD PTR [ebx*4+0x755c0]
   1db41:	and    edx,ecx
   1db43:	xor    eax,DWORD PTR [edx*4+0x761c0]
   1db4a:	sub    DWORD PTR [ebp+0x8],0x20
   1db4e:	xor    eax,DWORD PTR [esi]
   1db50:	add    esi,edi
   1db52:	mov    edx,eax
   1db54:	mov    ebx,eax
   1db56:	shr    edx,0x10
   1db59:	shr    ebx,0x8
   1db5c:	and    edx,ecx
   1db5e:	mov    edx,DWORD PTR [edx*4+0x759c0]
   1db65:	and    ebx,ecx
   1db67:	xor    edx,DWORD PTR [ebx*4+0x75dc0]
   1db6e:	mov    ebx,eax
   1db70:	shr    ebx,0x18
   1db73:	xor    edx,DWORD PTR [ebx*4+0x755c0]
   1db7a:	and    eax,ecx
   1db7c:	xor    edx,DWORD PTR [eax*4+0x761c0]
   1db83:	xor    edx,DWORD PTR [esi]
   1db85:	add    esi,edi
   1db87:	mov    eax,edx
   1db89:	shr    eax,0x10
   1db8c:	and    eax,ecx
   1db8e:	mov    eax,DWORD PTR [eax*4+0x759c0]
   1db95:	mov    ebx,edx
   1db97:	shr    ebx,0x8
   1db9a:	and    ebx,ecx
   1db9c:	xor    eax,DWORD PTR [ebx*4+0x75dc0]
   1dba3:	mov    ebx,edx
   1dba5:	shr    ebx,0x18
   1dba8:	xor    eax,DWORD PTR [ebx*4+0x755c0]
   1dbaf:	and    edx,ecx
   1dbb1:	xor    eax,DWORD PTR [edx*4+0x761c0]
   1dbb8:	dec    DWORD PTR [ebp-0x4]
   1dbbb:	jne    0x1da0c
   1dbc1:	cmp    DWORD PTR [ebp+0x8],edi
   1dbc4:	jb     0x1dc0e
   1dbc6:	mov    edx,DWORD PTR [ebp+0x8]
   1dbc9:	shr    edx,0x2
   1dbcc:	mov    DWORD PTR [ebp-0x4],edx
   1dbcf:	xor    eax,DWORD PTR [esi]
   1dbd1:	sub    DWORD PTR [ebp+0x8],edi
   1dbd4:	mov    edx,eax
   1dbd6:	shr    edx,0x10
   1dbd9:	and    edx,ecx
   1dbdb:	mov    edx,DWORD PTR [edx*4+0x759c0]
   1dbe2:	mov    ebx,eax
   1dbe4:	shr    ebx,0x8
   1dbe7:	and    ebx,ecx
   1dbe9:	xor    edx,DWORD PTR [ebx*4+0x75dc0]
   1dbf0:	mov    ebx,eax
   1dbf2:	shr    ebx,0x18
   1dbf5:	xor    edx,DWORD PTR [ebx*4+0x755c0]
   1dbfc:	and    eax,ecx
   1dbfe:	xor    edx,DWORD PTR [eax*4+0x761c0]
   1dc05:	add    esi,edi
   1dc07:	dec    DWORD PTR [ebp-0x4]
   1dc0a:	mov    eax,edx
   1dc0c:	jne    0x1dbcf
   1dc0e:	cmp    DWORD PTR [ebp+0x8],0x0
   1dc12:	pop    edi
   1dc13:	pop    ebx
   1dc14:	je     0x1dc2d
   1dc16:	movzx  edx,BYTE PTR [esi]
   1dc19:	xor    edx,eax
   1dc1b:	and    edx,ecx
   1dc1d:	shr    eax,0x8
   1dc20:	xor    eax,DWORD PTR [edx*4+0x755c0]
   1dc27:	inc    esi
   1dc28:	dec    DWORD PTR [ebp+0x8]
   1dc2b:	jne    0x1dc16
   1dc2d:	not    eax
   1dc2f:	pop    esi
   1dc30:	leave  
   1dc31:	ret    0x4
   1dc34:	int3   
   1dc35:	int3   
   1dc36:	int3   
   1dc37:	int3   
   1dc38:	int3   
   1dc39:	int3   
   1dc3a:	mov    edi,edi
   1dc3c:	push   ebp
   1dc3d:	mov    ebp,esp
   1dc3f:	mov    edx,DWORD PTR [ebp+0xc]
   1dc42:	test   edx,edx
   1dc44:	jne    0x1dc4a
   1dc46:	xor    eax,eax
   1dc48:	jmp    0x1dc55
   1dc4a:	push   DWORD PTR [ebp+0x10]
   1dc4d:	mov    eax,DWORD PTR [ebp+0x8]
   1dc50:	call   0x1d9c2
   1dc55:	pop    ebp
   1dc56:	ret    0xc
   1dc59:	int3   
   1dc5a:	int3   
   1dc5b:	int3   
   1dc5c:	int3   
   1dc5d:	int3   
   1dc5e:	mov    edi,edi
   1dc60:	push   ebp
   1dc61:	mov    ebp,esp
   1dc63:	push   0x20
   1dc65:	push   0x61737973
   1dc6a:	push   DWORD PTR [ebp+0x8]
   1dc6d:	push   0x1
   1dc6f:	call   DWORD PTR ds:0x1f440
   1dc75:	test   eax,eax
   1dc77:	jne    0x1dc84
   1dc79:	push   0xc000009a
   1dc7e:	call   DWORD PTR ds:0x1f420
   1dc84:	pop    ebp
   1dc85:	ret    
   1dc86:	int3   
   1dc87:	int3   
   1dc88:	int3   
   1dc89:	int3   
   1dc8a:	int3   
   1dc8b:	int3   
   1dc8c:	mov    edi,edi
   1dc8e:	push   ebp
   1dc8f:	mov    ebp,esp
   1dc91:	cmp    DWORD PTR [ebp+0x8],0x0
   1dc95:	je     0x1dca2
   1dc97:	push   0x0
   1dc99:	push   DWORD PTR [ebp+0x8]
   1dc9c:	call   DWORD PTR ds:0x1f444
   1dca2:	pop    ebp
   1dca3:	ret    
   1dca4:	int3   
   1dca5:	int3   
   1dca6:	int3   
   1dca7:	int3   
   1dca8:	int3   
   1dca9:	cmp    ecx,DWORD PTR ds:0x77b1c
   1dcaf:	jne    0x1dcb4
   1dcb1:	ret    0x0
   1dcb4:	jmp    0x1dcbe
   1dcb9:	int3   
   1dcba:	int3   
   1dcbb:	int3   
   1dcbc:	int3   
   1dcbd:	int3   
   1dcbe:	mov    edi,edi
   1dcc0:	push   ebp
   1dcc1:	mov    ebp,esp
   1dcc3:	push   ecx
   1dcc4:	mov    DWORD PTR [ebp-0x4],ecx
   1dcc7:	push   0x0
   1dcc9:	push   DWORD PTR ds:0x77b20
   1dccf:	push   DWORD PTR ds:0x77b1c
   1dcd5:	push   DWORD PTR [ebp-0x4]
   1dcd8:	push   0xf7
   1dcdd:	call   DWORD PTR ds:0x1f44c
   1dce3:	int3   
   1dce4:	int3   
   1dce5:	int3   
   1dce6:	int3   
   1dce7:	int3   
   1dce8:	int3   
   1dce9:	int3   
   1dcea:	jmp    DWORD PTR ds:0x1f408
   1dcf0:	int3   
   1dcf1:	int3   
   1dcf2:	int3   
   1dcf3:	int3   
   1dcf4:	int3   
   1dcf5:	int3   
   1dcf6:	jmp    DWORD PTR ds:0x1f40c
   1dcfc:	int3   
   1dcfd:	int3   
   1dcfe:	int3   
   1dcff:	int3   
   1dd00:	int3   
   1dd01:	int3   
   1dd02:	jmp    DWORD PTR ds:0x1f410
   1dd08:	int3   
   1dd09:	int3   
   1dd0a:	int3   
   1dd0b:	int3   
   1dd0c:	int3   
   1dd0d:	int3   
   1dd0e:	jmp    DWORD PTR ds:0x1f418
   1dd14:	int3   
   1dd15:	int3   
   1dd16:	int3   
   1dd17:	int3   
   1dd18:	int3   
   1dd19:	int3   
   1dd1a:	jmp    DWORD PTR ds:0x1f41c
   1dd20:	int3   
   1dd21:	int3   
   1dd22:	int3   
   1dd23:	int3   
   1dd24:	int3   
   1dd25:	int3   
   1dd26:	jmp    DWORD PTR ds:0x1f428
   1dd2c:	int3   
   1dd2d:	int3   
   1dd2e:	int3   
   1dd2f:	int3   
   1dd30:	int3   
   1dd31:	int3   
   1dd32:	jmp    DWORD PTR ds:0x1f42c
   1dd38:	int3   
   1dd39:	int3   
   1dd3a:	int3   
   1dd3b:	int3   
   1dd3c:	int3   
   1dd3d:	int3   
   1dd3e:	int3   
   1dd3f:	int3   
   1dd40:	push   0x1dda0
   1dd45:	push   DWORD PTR fs:0x0
   1dd4c:	mov    eax,DWORD PTR [esp+0x10]
   1dd50:	mov    DWORD PTR [esp+0x10],ebp
   1dd54:	lea    ebp,[esp+0x10]
   1dd58:	sub    esp,eax
   1dd5a:	push   ebx
   1dd5b:	push   esi
   1dd5c:	push   edi
   1dd5d:	mov    eax,ds:0x77b1c
   1dd62:	xor    DWORD PTR [ebp-0x4],eax
   1dd65:	xor    eax,ebp
   1dd67:	push   eax
   1dd68:	mov    DWORD PTR [ebp-0x18],esp
   1dd6b:	push   DWORD PTR [ebp-0x8]
   1dd6e:	mov    eax,DWORD PTR [ebp-0x4]
   1dd71:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1dd78:	mov    DWORD PTR [ebp-0x8],eax
   1dd7b:	lea    eax,[ebp-0x10]
   1dd7e:	mov    fs:0x0,eax
   1dd84:	ret    
   1dd85:	mov    ecx,DWORD PTR [ebp-0x10]
   1dd88:	mov    DWORD PTR fs:0x0,ecx
   1dd8f:	pop    ecx
   1dd90:	pop    edi
   1dd91:	pop    edi
   1dd92:	pop    esi
   1dd93:	pop    ebx
   1dd94:	mov    esp,ebp
   1dd96:	pop    ebp
   1dd97:	push   ecx
   1dd98:	ret    
   1dd99:	int3   
   1dd9a:	int3   
   1dd9b:	int3   
   1dd9c:	int3   
   1dd9d:	int3   
   1dd9e:	int3   
   1dd9f:	int3   
   1dda0:	mov    edi,edi
   1dda2:	push   ebp
   1dda3:	mov    ebp,esp
   1dda5:	sub    esp,0x14
   1dda8:	push   ebx
   1dda9:	mov    ebx,DWORD PTR [ebp+0xc]
   1ddac:	push   esi
   1ddad:	mov    esi,DWORD PTR [ebx+0x8]
   1ddb0:	xor    esi,DWORD PTR ds:0x77b1c
   1ddb6:	push   edi
   1ddb7:	mov    eax,DWORD PTR [esi]
   1ddb9:	mov    BYTE PTR [ebp-0x1],0x0
   1ddbd:	mov    DWORD PTR [ebp-0x8],0x1
   1ddc4:	lea    edi,[ebx+0x10]
   1ddc7:	cmp    eax,0xfffffffe
   1ddca:	je     0x1ddd9
   1ddcc:	mov    ecx,DWORD PTR [esi+0x4]
   1ddcf:	add    ecx,edi
   1ddd1:	xor    ecx,DWORD PTR [eax+edi*1]
   1ddd4:	call   0x1dca9
   1ddd9:	mov    ecx,DWORD PTR [esi+0xc]
   1dddc:	mov    eax,DWORD PTR [esi+0x8]
   1dddf:	add    ecx,edi
   1dde1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dde4:	call   0x1dca9
   1dde9:	mov    eax,DWORD PTR [ebp+0x8]
   1ddec:	test   BYTE PTR [eax+0x4],0x66
   1ddf0:	jne    0x1ded8
   1ddf6:	mov    ecx,DWORD PTR [ebp+0x10]
   1ddf9:	lea    edx,[ebp-0x14]
   1ddfc:	mov    DWORD PTR [ebx-0x4],edx
   1ddff:	mov    ebx,DWORD PTR [ebx+0xc]
   1de02:	mov    DWORD PTR [ebp-0x14],eax
   1de05:	mov    DWORD PTR [ebp-0x10],ecx
   1de08:	cmp    ebx,0xfffffffe
   1de0b:	je     0x1de6c
   1de0d:	lea    ecx,[ecx+0x0]
   1de10:	lea    eax,[ebx+ebx*2]
   1de13:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1de17:	lea    eax,[esi+eax*4+0x10]
   1de1b:	mov    DWORD PTR [ebp-0xc],eax
   1de1e:	mov    eax,DWORD PTR [eax]
   1de20:	mov    DWORD PTR [ebp+0x8],eax
   1de23:	test   ecx,ecx
   1de25:	je     0x1de3b
   1de27:	mov    edx,edi
   1de29:	call   0x1dfe1
   1de2e:	mov    BYTE PTR [ebp-0x1],0x1
   1de32:	test   eax,eax
   1de34:	jl     0x1de76
   1de36:	jg     0x1de7f
   1de38:	mov    eax,DWORD PTR [ebp+0x8]
   1de3b:	mov    ebx,eax
   1de3d:	cmp    eax,0xfffffffe
   1de40:	jne    0x1de10
   1de42:	cmp    BYTE PTR [ebp-0x1],0x0
   1de46:	je     0x1de6c
   1de48:	mov    eax,DWORD PTR [esi]
   1de4a:	cmp    eax,0xfffffffe
   1de4d:	je     0x1de5c
   1de4f:	mov    ecx,DWORD PTR [esi+0x4]
   1de52:	add    ecx,edi
   1de54:	xor    ecx,DWORD PTR [eax+edi*1]
   1de57:	call   0x1dca9
   1de5c:	mov    ecx,DWORD PTR [esi+0xc]
   1de5f:	mov    edx,DWORD PTR [esi+0x8]
   1de62:	add    ecx,edi
   1de64:	xor    ecx,DWORD PTR [edx+edi*1]
   1de67:	call   0x1dca9
   1de6c:	mov    eax,DWORD PTR [ebp-0x8]
   1de6f:	pop    edi
   1de70:	pop    esi
   1de71:	pop    ebx
   1de72:	mov    esp,ebp
   1de74:	pop    ebp
   1de75:	ret    
   1de76:	mov    DWORD PTR [ebp-0x8],0x0
   1de7d:	jmp    0x1de48
   1de7f:	mov    ecx,DWORD PTR [ebp+0xc]
   1de82:	call   0x1e00a
   1de87:	mov    eax,DWORD PTR [ebp+0xc]
   1de8a:	cmp    DWORD PTR [eax+0xc],ebx
   1de8d:	je     0x1dea1
   1de8f:	push   0x77b1c
   1de94:	push   edi
   1de95:	mov    edx,ebx
   1de97:	mov    ecx,eax
   1de99:	call   0x1e024
   1de9e:	mov    eax,DWORD PTR [ebp+0xc]
   1dea1:	mov    ecx,DWORD PTR [ebp+0x8]
   1dea4:	mov    DWORD PTR [eax+0xc],ecx
   1dea7:	mov    eax,DWORD PTR [esi]
   1dea9:	cmp    eax,0xfffffffe
   1deac:	je     0x1debb
   1deae:	mov    ecx,DWORD PTR [esi+0x4]
   1deb1:	add    ecx,edi
   1deb3:	xor    ecx,DWORD PTR [eax+edi*1]
   1deb6:	call   0x1dca9
   1debb:	mov    ecx,DWORD PTR [esi+0xc]
   1debe:	mov    edx,DWORD PTR [esi+0x8]
   1dec1:	add    ecx,edi
   1dec3:	xor    ecx,DWORD PTR [edx+edi*1]
   1dec6:	call   0x1dca9
   1decb:	mov    eax,DWORD PTR [ebp-0xc]
   1dece:	mov    ecx,DWORD PTR [eax+0x8]
   1ded1:	mov    edx,edi
   1ded3:	call   0x1dff8
   1ded8:	mov    edx,0xfffffffe
   1dedd:	cmp    DWORD PTR [ebx+0xc],edx
   1dee0:	je     0x1de6c
   1dee2:	push   0x77b1c
   1dee7:	push   edi
   1dee8:	mov    ecx,ebx
   1deea:	call   0x1e024
   1deef:	jmp    0x1de48
   1def4:	int3   
   1def5:	int3   
   1def6:	int3   
   1def7:	int3   
   1def8:	int3   
   1def9:	int3   
   1defa:	int3   
   1defb:	int3   
   1defc:	push   ebx
   1defd:	push   esi
   1defe:	push   edi
   1deff:	mov    edx,DWORD PTR [esp+0x10]
   1df03:	mov    eax,DWORD PTR [esp+0x14]
   1df07:	mov    ecx,DWORD PTR [esp+0x18]
   1df0b:	push   ebp
   1df0c:	push   edx
   1df0d:	push   eax
   1df0e:	push   ecx
   1df0f:	push   ecx
   1df10:	push   0x1df7f
   1df15:	push   DWORD PTR fs:0x0
   1df1c:	mov    eax,ds:0x77b1c
   1df21:	xor    eax,esp
   1df23:	mov    DWORD PTR [esp+0x8],eax
   1df27:	mov    DWORD PTR fs:0x0,esp
   1df2e:	mov    eax,DWORD PTR [esp+0x30]
   1df32:	mov    ebx,DWORD PTR [eax+0x8]
   1df35:	mov    ecx,DWORD PTR [esp+0x2c]
   1df39:	xor    ebx,DWORD PTR [ecx]
   1df3b:	mov    esi,DWORD PTR [eax+0xc]
   1df3e:	cmp    esi,0xfffffffe
   1df41:	je     0x1df71
   1df43:	mov    edx,DWORD PTR [esp+0x34]
   1df47:	cmp    edx,0xfffffffe
   1df4a:	je     0x1df50
   1df4c:	cmp    esi,edx
   1df4e:	jbe    0x1df71
   1df50:	lea    esi,[esi+esi*2]
   1df53:	lea    ebx,[ebx+esi*4+0x10]
   1df57:	mov    ecx,DWORD PTR [ebx]
   1df59:	mov    DWORD PTR [eax+0xc],ecx
   1df5c:	cmp    DWORD PTR [ebx+0x4],0x0
   1df60:	jne    0x1df2e
   1df62:	mov    ecx,0x1
   1df67:	mov    eax,DWORD PTR [ebx+0x8]
   1df6a:	call   0x1e09c
   1df6f:	jmp    0x1df2e
   1df71:	pop    DWORD PTR fs:0x0
   1df78:	add    esp,0x18
   1df7b:	pop    edi
   1df7c:	pop    esi
   1df7d:	pop    ebx
   1df7e:	ret    
   1df7f:	mov    ecx,DWORD PTR [esp+0x4]
   1df83:	test   DWORD PTR [ecx+0x4],0x6
   1df8a:	mov    eax,0x1
   1df8f:	je     0x1dfc4
   1df91:	mov    eax,DWORD PTR [esp+0x8]
   1df95:	mov    ecx,DWORD PTR [eax+0x8]
   1df98:	xor    ecx,eax
   1df9a:	call   0x1dca9
   1df9f:	push   ebp
   1dfa0:	mov    ebp,DWORD PTR [eax+0x18]
   1dfa3:	push   DWORD PTR [eax+0xc]
   1dfa6:	push   DWORD PTR [eax+0x10]
   1dfa9:	push   DWORD PTR [eax+0x14]
   1dfac:	call   0x1defc
   1dfb1:	add    esp,0xc
   1dfb4:	pop    ebp
   1dfb5:	mov    eax,DWORD PTR [esp+0x8]
   1dfb9:	mov    edx,DWORD PTR [esp+0x10]
   1dfbd:	mov    DWORD PTR [edx],eax
   1dfbf:	mov    eax,0x3
   1dfc4:	ret    
   1dfc5:	push   ebp
   1dfc6:	mov    ecx,DWORD PTR [esp+0x8]
   1dfca:	mov    ebp,DWORD PTR [ecx]
   1dfcc:	push   DWORD PTR [ecx+0x1c]
   1dfcf:	push   DWORD PTR [ecx+0x18]
   1dfd2:	push   DWORD PTR [ecx+0x28]
   1dfd5:	call   0x1defc
   1dfda:	add    esp,0xc
   1dfdd:	pop    ebp
   1dfde:	ret    0x4
   1dfe1:	push   ebp
   1dfe2:	push   esi
   1dfe3:	push   edi
   1dfe4:	push   ebx
   1dfe5:	mov    ebp,edx
   1dfe7:	xor    eax,eax
   1dfe9:	xor    ebx,ebx
   1dfeb:	xor    edx,edx
   1dfed:	xor    esi,esi
   1dfef:	xor    edi,edi
   1dff1:	call   ecx
   1dff3:	pop    ebx
   1dff4:	pop    edi
   1dff5:	pop    esi
   1dff6:	pop    ebp
   1dff7:	ret    
   1dff8:	mov    ebp,edx
   1dffa:	mov    esi,ecx
   1dffc:	mov    eax,ecx
   1dffe:	xor    eax,eax
   1e000:	xor    ebx,ebx
   1e002:	xor    ecx,ecx
   1e004:	xor    edx,edx
   1e006:	xor    edi,edi
   1e008:	jmp    esi
   1e00a:	push   ebp
   1e00b:	mov    ebp,esp
   1e00d:	push   ebx
   1e00e:	push   esi
   1e00f:	push   edi
   1e010:	push   0x0
   1e012:	push   0x0
   1e014:	push   0x1e01f
   1e019:	push   ecx
   1e01a:	call   0x1e0a4
   1e01f:	pop    edi
   1e020:	pop    esi
   1e021:	pop    ebx
   1e022:	pop    ebp
   1e023:	ret    
   1e024:	push   ebp
   1e025:	mov    ebp,DWORD PTR [esp+0x8]
   1e029:	push   edx
   1e02a:	push   ecx
   1e02b:	push   DWORD PTR [esp+0x14]
   1e02f:	call   0x1defc
   1e034:	add    esp,0xc
   1e037:	pop    ebp
   1e038:	ret    0x8
   1e03b:	int3   
   1e03c:	int3   
   1e03d:	int3   
   1e03e:	int3   
   1e03f:	int3   
   1e040:	push   0x1dda0
   1e045:	push   DWORD PTR fs:0x0
   1e04c:	mov    eax,DWORD PTR [esp+0x10]
   1e050:	mov    DWORD PTR [esp+0x10],ebp
   1e054:	lea    ebp,[esp+0x10]
   1e058:	sub    esp,eax
   1e05a:	push   ebx
   1e05b:	push   esi
   1e05c:	push   edi
   1e05d:	mov    eax,ds:0x77b1c
   1e062:	xor    DWORD PTR [ebp-0x4],eax
   1e065:	xor    eax,ebp
   1e067:	mov    DWORD PTR [ebp-0x1c],eax
   1e06a:	push   eax
   1e06b:	mov    DWORD PTR [ebp-0x18],esp
   1e06e:	push   DWORD PTR [ebp-0x8]
   1e071:	mov    eax,DWORD PTR [ebp-0x4]
   1e074:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1e07b:	mov    DWORD PTR [ebp-0x8],eax
   1e07e:	lea    eax,[ebp-0x10]
   1e081:	mov    fs:0x0,eax
   1e087:	ret    
   1e088:	mov    ecx,DWORD PTR [ebp-0x1c]
   1e08b:	xor    ecx,ebp
   1e08d:	call   0x1dca9
   1e092:	jmp    0x1dd85
   1e097:	int3   
   1e098:	int3   
   1e099:	int3   
   1e09a:	int3   
   1e09b:	int3   
   1e09c:	call   eax
   1e09e:	ret    
   1e09f:	int3   
   1e0a0:	int3   
   1e0a1:	int3   
   1e0a2:	int3   
   1e0a3:	int3   
   1e0a4:	jmp    DWORD PTR ds:0x1f454
   1e0aa:	pop    esp
   1e0ab:	add    BYTE PTR [eax],al
   1e0ad:	add    BYTE PTR [eax],al
   1e0af:	add    BYTE PTR [ebx+0x0],ch
   1e0b2:	bound  eax,QWORD PTR [eax]
   1e0b4:	add    BYTE PTR fs:[ecx+0x0],dh
   1e0b8:	add    BYTE PTR [eax],al
   1e0ba:	add    BYTE PTR fs:[ebx],dh
   1e0bd:	add    BYTE PTR [eax+eax*1+0x73],ah
   1e0c1:	add    BYTE PTR [eax],al
   1e0c3:	add    BYTE PTR [esi+0x0],ch
   1e0c6:	je     0x1e0c8
   1e0c8:	outs   dx,BYTE PTR ds:[esi]
   1e0c9:	add    BYTE PTR [eax],al
   1e0cb:	add    BYTE PTR [ebx+0x0],dh
   1e0ce:	jns    0x1e0d0
   1e0d0:	jae    0x1e0d2
   1e0d2:	popa   
   1e0d3:	add    BYTE PTR [eax],al
   1e0d5:	add    BYTE PTR [edi+0x0],dh
   1e0d8:	imul   eax,DWORD PTR [eax],0x65006e
   1e0de:	add    BYTE PTR [eax],al
   1e0e0:	jo     0x1e0e2
   1e0e2:	arpl   WORD PTR [eax],ax
   1e0e4:	imul   eax,DWORD PTR [eax],0x6d0000
   1e0ea:	jae    0x1e0ec
   1e0ec:	jb     0x1e0ee
   1e0ee:	add    BYTE PTR [eax],al
   1e0f0:	je     0x1e0f2
   1e0f2:	ins    DWORD PTR es:[edi],dx
   1e0f3:	add    BYTE PTR [eax+0x0],dh
   1e0f6:	add    BYTE PTR [eax],al
   1e0f8:	jne    0x1e0fa
   1e0fa:	jae    0x1e0fc
   1e0fc:	bound  eax,QWORD PTR [eax]
   1e0fe:	add    BYTE PTR [eax],al
   1e100:	outs   dx,DWORD PTR ds:[esi]
   1e101:	add    BYTE PTR [eax+eax*1+0x65],ch
   1e105:	add    BYTE PTR [eax],al
   1e107:	add    BYTE PTR [ecx+0x0],ah
   1e10a:	imul   eax,DWORD PTR [eax],0x70
   1e110:	push   0x0
   1e112:	popa   
   1e113:	add    BYTE PTR [ecx+0x0],bh
   1e116:	add    BYTE PTR [eax],al
   1e118:	jbe    0x1e11a
   1e11a:	add    BYTE PTR gs:[edx+0x0],dh
   1e11e:	add    BYTE PTR [eax],al
   1e120:	jae    0x1e122
   1e122:	popa   
   1e123:	add    BYTE PTR [ecx+0x0],ch
   1e126:	add    BYTE PTR [eax],al
   1e128:	ins    BYTE PTR es:[edi],dx
   1e129:	add    BYTE PTR [ecx+0x0],ah
   1e12c:	arpl   WORD PTR [eax],ax
   1e12e:	add    BYTE PTR [eax],al
   1e130:	push   0x0
   1e132:	jo     0x1e134
   1e134:	add    BYTE PTR [bx+si],al
   1e137:	add    BYTE PTR [eax+0x0],ch
   1e13a:	imul   eax,DWORD PTR [eax],0x64
   1e140:	jo     0x1e142
   1e142:	outs   dx,BYTE PTR ds:[esi]
   1e143:	add    BYTE PTR [edi+0x0],ah
   1e146:	add    BYTE PTR [eax],al
   1e148:	add    ah,cl
   1e14a:	dec    ebx
   1e14b:	add    BYTE PTR [ebp+0x0],ah
   1e14e:	push   ebx
   1e14f:	add    BYTE PTR [ebp+0x0],ah
   1e152:	jb     0x1e154
   1e154:	jbe    0x1e156
   1e156:	imul   eax,DWORD PTR [eax],0x650063
   1e15c:	inc    esp
   1e15d:	add    BYTE PTR [ebp+0x0],ah
   1e160:	jae    0x1e162
   1e162:	arpl   WORD PTR [eax],ax
   1e164:	jb     0x1e166
   1e166:	imul   eax,DWORD PTR [eax],0x740070
   1e16c:	outs   dx,DWORD PTR ds:[esi]
   1e16d:	add    BYTE PTR [edx+0x0],dh
   1e170:	push   esp
   1e171:	add    BYTE PTR [ecx+0x0],ah
   1e174:	bound  eax,QWORD PTR [eax]
   1e176:	ins    BYTE PTR es:[edi],dx
   1e177:	add    BYTE PTR [ebp+0x0],ah
   1e17a:	add    BYTE PTR [eax],al
   1e17c:	pop    edx
   1e17d:	add    BYTE PTR [edi+0x0],dh
   1e180:	dec    edi
   1e181:	add    BYTE PTR [eax+0x0],dh
   1e184:	add    BYTE PTR gs:[esi+0x0],ch
   1e188:	push   eax
   1e189:	add    BYTE PTR [edx+0x0],dh
   1e18c:	outs   dx,DWORD PTR ds:[esi]
   1e18d:	add    BYTE PTR [ebx+0x0],ah
   1e190:	add    BYTE PTR gs:[ebx+0x0],dh
   1e194:	jae    0x1e196
   1e196:	add    BYTE PTR [eax],al
   1e198:	pop    edx
   1e199:	add    BYTE PTR [edi+0x0],dh
   1e19c:	inc    ecx
   1e19d:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e1a1:	add    BYTE PTR [edi+0x0],ch
   1e1a4:	arpl   WORD PTR [eax],ax
   1e1a6:	popa   
   1e1a7:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1ab:	add    BYTE PTR [esi+0x0],dl
   1e1ae:	imul   eax,DWORD PTR [eax],0x740072
   1e1b4:	jne    0x1e1b6
   1e1b6:	popa   
   1e1b7:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1e1bb:	add    BYTE PTR [ebp+0x0],ah
   1e1be:	ins    DWORD PTR es:[edi],dx
   1e1bf:	add    BYTE PTR [edi+0x0],ch
   1e1c2:	jb     0x1e1c4
   1e1c4:	jns    0x1e1c6
   1e1c6:	add    BYTE PTR [eax],al
   1e1c8:	push   eax
   1e1c9:	add    BYTE PTR [ebx+0x0],dh
   1e1cc:	push   ebx
   1e1cd:	add    BYTE PTR [ebp+0x0],ah
   1e1d0:	je     0x1e1d2
   1e1d2:	dec    esp
   1e1d3:	add    BYTE PTR [edi+0x0],ch
   1e1d6:	popa   
   1e1d7:	add    BYTE PTR [eax+eax*1+0x49],ah
   1e1db:	add    BYTE PTR [ebp+0x0],ch
   1e1de:	popa   
   1e1df:	add    BYTE PTR [edi+0x0],ah
   1e1e2:	add    BYTE PTR gs:[esi+0x0],cl
   1e1e6:	outs   dx,DWORD PTR ds:[esi]
   1e1e7:	add    BYTE PTR [eax+eax*1+0x69],dh
   1e1eb:	add    BYTE PTR [esi+0x0],ah
   1e1ee:	jns    0x1e1f0
   1e1f0:	push   edx
   1e1f1:	add    BYTE PTR [edi+0x0],ch
   1e1f4:	jne    0x1e1f6
   1e1f6:	je     0x1e1f8
   1e1f8:	imul   eax,DWORD PTR [eax],0x65006e
   1e1fe:	add    BYTE PTR [eax],al
   1e200:	pop    edx
   1e201:	add    BYTE PTR [edi+0x0],dh
   1e204:	inc    esp
   1e205:	add    BYTE PTR [ebp+0x0],dh
   1e208:	jo     0x1e20a
   1e20a:	ins    BYTE PTR es:[edi],dx
   1e20b:	add    BYTE PTR [ecx+0x0],ch
   1e20e:	arpl   WORD PTR [eax],ax
   1e210:	popa   
   1e211:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e215:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1e219:	add    BYTE PTR [ebx+0x0],ch
   1e21c:	add    BYTE PTR gs:[esi+0x0],ch
   1e220:	add    BYTE PTR [eax],al
   1e222:	push   eax
   1e223:	add    BYTE PTR [ebx+0x0],dh
   1e226:	push   ebx
   1e227:	add    BYTE PTR [ebp+0x0],ah
   1e22a:	je     0x1e22c
   1e22c:	inc    ebx
   1e22d:	add    BYTE PTR [edx+0x0],dh
   1e230:	add    BYTE PTR gs:[ecx+0x0],ah
   1e234:	je     0x1e236
   1e236:	add    BYTE PTR gs:[eax+0x0],dl
   1e23a:	jb     0x1e23c
   1e23c:	outs   dx,DWORD PTR ds:[esi]
   1e23d:	add    BYTE PTR [ebx+0x0],ah
   1e240:	add    BYTE PTR gs:[ebx+0x0],dh
   1e244:	jae    0x1e246
   1e246:	dec    esi
   1e247:	add    BYTE PTR [edi+0x0],ch
   1e24a:	je     0x1e24c
   1e24c:	imul   eax,DWORD PTR [eax],0x790066
   1e252:	push   edx
   1e253:	add    BYTE PTR [edi+0x0],ch
   1e256:	jne    0x1e258
   1e258:	je     0x1e25a
   1e25a:	imul   eax,DWORD PTR [eax],0x65006e
   1e260:	add    BYTE PTR [eax],al
   1e262:	pop    edx
   1e263:	add    BYTE PTR [edi+0x0],dh
   1e266:	dec    edi
   1e267:	add    BYTE PTR [eax+0x0],dh
   1e26a:	add    BYTE PTR gs:[esi+0x0],ch
   1e26e:	inc    esi
   1e26f:	add    BYTE PTR [ecx+0x0],ch
   1e272:	ins    BYTE PTR es:[edi],dx
   1e273:	add    BYTE PTR [ebp+0x0],ah
   1e276:	add    BYTE PTR [eax],al
   1e278:	pop    edx
   1e279:	add    BYTE PTR [edi+0x0],dh
   1e27c:	push   ecx
   1e27d:	add    BYTE PTR [ebp+0x0],dh
   1e280:	add    BYTE PTR gs:[edx+0x0],dh
   1e284:	jns    0x1e286
   1e286:	dec    ecx
   1e287:	add    BYTE PTR [esi+0x0],ch
   1e28a:	data16 add BYTE PTR [edi+0x0],ch
   1e28e:	jb     0x1e290
   1e290:	ins    DWORD PTR es:[edi],dx
   1e291:	add    BYTE PTR [ecx+0x0],ah
   1e294:	je     0x1e296
   1e296:	imul   eax,DWORD PTR [eax],0x6e006f
   1e29c:	push   eax
   1e29d:	add    BYTE PTR [edx+0x0],dh
   1e2a0:	outs   dx,DWORD PTR ds:[esi]
   1e2a1:	add    BYTE PTR [ebx+0x0],ah
   1e2a4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2a8:	jae    0x1e2aa
   1e2aa:	add    BYTE PTR [eax],al
   1e2ac:	pop    edx
   1e2ad:	add    BYTE PTR [edi+0x0],dh
   1e2b0:	push   ecx
   1e2b1:	add    BYTE PTR [ebp+0x0],dh
   1e2b4:	add    BYTE PTR gs:[edx+0x0],dh
   1e2b8:	jns    0x1e2ba
   1e2ba:	push   ebx
   1e2bb:	add    BYTE PTR [ecx+0x0],bh
   1e2be:	jae    0x1e2c0
   1e2c0:	je     0x1e2c2
   1e2c2:	add    BYTE PTR gs:[ebp+0x0],ch
   1e2c6:	dec    ecx
   1e2c7:	add    BYTE PTR [esi+0x0],ch
   1e2ca:	data16 add BYTE PTR [edi+0x0],ch
   1e2ce:	jb     0x1e2d0
   1e2d0:	ins    DWORD PTR es:[edi],dx
   1e2d1:	add    BYTE PTR [ecx+0x0],ah
   1e2d4:	je     0x1e2d6
   1e2d6:	imul   eax,DWORD PTR [eax],0x6e006f
   1e2dc:	add    BYTE PTR [eax],al
   1e2de:	pop    edx
   1e2df:	add    BYTE PTR [edi+0x0],dh
   1e2e2:	dec    edi
   1e2e3:	add    BYTE PTR [eax+0x0],dh
   1e2e6:	add    BYTE PTR gs:[esi+0x0],ch
   1e2ea:	dec    ebx
   1e2eb:	add    BYTE PTR [ebp+0x0],ah
   1e2ee:	jns    0x1e2f0
   1e2f0:	add    BYTE PTR [eax],al
   1e2f2:	pop    edx
   1e2f3:	add    BYTE PTR [edi+0x0],dh
   1e2f6:	inc    esp
   1e2f7:	add    BYTE PTR [ebp+0x0],ah
   1e2fa:	ins    BYTE PTR es:[edi],dx
   1e2fb:	add    BYTE PTR [ebp+0x0],ah
   1e2fe:	je     0x1e300
   1e300:	add    BYTE PTR gs:[ebx+0x0],cl
   1e304:	add    BYTE PTR gs:[ecx+0x0],bh
   1e308:	add    BYTE PTR [eax],al
   1e30a:	pop    edx
   1e30b:	add    BYTE PTR [edi+0x0],dh
   1e30e:	push   ebx
   1e30f:	add    BYTE PTR [ebp+0x0],ah
   1e312:	je     0x1e314
   1e314:	push   esi
   1e315:	add    BYTE PTR [ecx+0x0],ah
   1e318:	ins    BYTE PTR es:[edi],dx
   1e319:	add    BYTE PTR [ebp+0x0],dh
   1e31c:	add    BYTE PTR gs:[ebx+0x0],cl
   1e320:	add    BYTE PTR gs:[ecx+0x0],bh
   1e324:	add    BYTE PTR [eax],al
   1e326:	pop    edx
   1e327:	add    BYTE PTR [edi+0x0],dh
   1e32a:	push   ecx
   1e32b:	add    BYTE PTR [ebp+0x0],dh
   1e32e:	add    BYTE PTR gs:[edx+0x0],dh
   1e332:	jns    0x1e334
   1e334:	push   esi
   1e335:	add    BYTE PTR [edi+0x0],ch
   1e338:	ins    BYTE PTR es:[edi],dx
   1e339:	add    BYTE PTR [ebp+0x0],dh
   1e33c:	ins    DWORD PTR es:[edi],dx
   1e33d:	add    BYTE PTR [ebp+0x0],ah
   1e340:	dec    ecx
   1e341:	add    BYTE PTR [esi+0x0],ch
   1e344:	data16 add BYTE PTR [edi+0x0],ch
   1e348:	jb     0x1e34a
   1e34a:	ins    DWORD PTR es:[edi],dx
   1e34b:	add    BYTE PTR [ecx+0x0],ah
   1e34e:	je     0x1e350
   1e350:	imul   eax,DWORD PTR [eax],0x6e006f
   1e356:	inc    esi
   1e357:	add    BYTE PTR [ecx+0x0],ch
   1e35a:	ins    BYTE PTR es:[edi],dx
   1e35b:	add    BYTE PTR [ebp+0x0],ah
   1e35e:	add    BYTE PTR [eax],al
   1e360:	pop    edx
   1e361:	add    BYTE PTR [edi+0x0],dh
   1e364:	inc    ebx
   1e365:	add    BYTE PTR [edx+0x0],dh
   1e368:	add    BYTE PTR gs:[ecx+0x0],ah
   1e36c:	je     0x1e36e
   1e36e:	add    BYTE PTR gs:[esi+0x0],al
   1e372:	imul   eax,DWORD PTR [eax],0x65006c
   1e378:	add    BYTE PTR [eax],al
   1e37a:	push   edx
   1e37b:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e37f:	add    BYTE PTR [ecx+0x0],cl
   1e382:	ins    DWORD PTR es:[edi],dx
   1e383:	add    BYTE PTR [ecx+0x0],ah
   1e386:	add    BYTE PTR [di+0x0],ah
   1e38a:	dec    esi
   1e38b:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e38f:	add    BYTE PTR [ebp+0x0],ah
   1e392:	popa   
   1e393:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e397:	add    BYTE PTR [edx+0x0],dh
   1e39a:	add    BYTE PTR [eax],al
   1e39c:	push   edx
   1e39d:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e3a1:	add    BYTE PTR [ecx+0x0],cl
   1e3a4:	ins    DWORD PTR es:[edi],dx
   1e3a5:	add    BYTE PTR [ecx+0x0],ah
   1e3a8:	add    BYTE PTR [di+0x0],ah
   1e3ac:	inc    esp
   1e3ad:	add    BYTE PTR [ecx+0x0],ch
   1e3b0:	jb     0x1e3b2
   1e3b2:	add    BYTE PTR gs:[ebx+0x0],ah
   1e3b6:	je     0x1e3b8
   1e3b8:	outs   dx,DWORD PTR ds:[esi]
   1e3b9:	add    BYTE PTR [edx+0x0],dh
   1e3bc:	jns    0x1e3be
   1e3be:	inc    ebp
   1e3bf:	add    BYTE PTR [esi+0x0],ch
   1e3c2:	je     0x1e3c4
   1e3c4:	jb     0x1e3c6
   1e3c6:	jns    0x1e3c8
   1e3c8:	push   esp
   1e3c9:	add    BYTE PTR [edi+0x0],ch
   1e3cc:	inc    esp
   1e3cd:	add    BYTE PTR [ecx+0x0],ah
   1e3d0:	je     0x1e3d2
   1e3d2:	popa   
   1e3d3:	add    BYTE PTR [eax],al
   1e3d5:	add    BYTE PTR [edx+0x0],bl
   1e3d8:	ja     0x1e3da
   1e3da:	dec    edi
   1e3db:	add    BYTE PTR [eax+0x0],dh
   1e3de:	add    BYTE PTR gs:[esi+0x0],ch
   1e3e2:	push   eax
   1e3e3:	add    BYTE PTR [edx+0x0],dh
   1e3e6:	outs   dx,DWORD PTR ds:[esi]
   1e3e7:	add    BYTE PTR [ebx+0x0],ah
   1e3ea:	add    BYTE PTR gs:[ebx+0x0],dh
   1e3ee:	jae    0x1e3f0
   1e3f0:	push   esp
   1e3f1:	add    BYTE PTR [edi+0x0],ch
   1e3f4:	imul   eax,DWORD PTR [eax],0x65
   1e3f7:	add    BYTE PTR [esi+0x0],ch
   1e3fa:	add    BYTE PTR [eax],al
   1e3fc:	pop    edx
   1e3fd:	add    BYTE PTR [edi+0x0],dh
   1e400:	push   ebx
   1e401:	add    BYTE PTR [ebp+0x0],ah
   1e404:	je     0x1e406
   1e406:	dec    ecx
   1e407:	add    BYTE PTR [esi+0x0],ch
   1e40a:	data16 add BYTE PTR [edi+0x0],ch
   1e40e:	jb     0x1e410
   1e410:	ins    DWORD PTR es:[edi],dx
   1e411:	add    BYTE PTR [ecx+0x0],ah
   1e414:	je     0x1e416
   1e416:	imul   eax,DWORD PTR [eax],0x6e006f
   1e41c:	push   eax
   1e41d:	add    BYTE PTR [edx+0x0],dh
   1e420:	outs   dx,DWORD PTR ds:[esi]
   1e421:	add    BYTE PTR [ebx+0x0],ah
   1e424:	add    BYTE PTR gs:[ebx+0x0],dh
   1e428:	jae    0x1e42a
   1e42a:	add    BYTE PTR [eax],al
   1e42c:	pop    edx
   1e42d:	add    BYTE PTR [edi+0x0],dh
   1e430:	push   ecx
   1e431:	add    BYTE PTR [ebp+0x0],dh
   1e434:	add    BYTE PTR gs:[edx+0x0],dh
   1e438:	jns    0x1e43a
   1e43a:	dec    ecx
   1e43b:	add    BYTE PTR [esi+0x0],ch
   1e43e:	data16 add BYTE PTR [edi+0x0],ch
   1e442:	jb     0x1e444
   1e444:	ins    DWORD PTR es:[edi],dx
   1e445:	add    BYTE PTR [ecx+0x0],ah
   1e448:	je     0x1e44a
   1e44a:	imul   eax,DWORD PTR [eax],0x6e006f
   1e450:	push   esp
   1e451:	add    BYTE PTR [eax+0x0],ch
   1e454:	jb     0x1e456
   1e456:	add    BYTE PTR gs:[ecx+0x0],ah
   1e45a:	add    BYTE PTR fs:[eax],al
   1e45d:	add    BYTE PTR [edx+0x0],bl
   1e460:	ja     0x1e462
   1e462:	inc    ebx
   1e463:	add    BYTE PTR [eax+eax*1+0x6f],ch
   1e467:	add    BYTE PTR [ebx+0x0],dh
   1e46a:	add    BYTE PTR gs:[eax],al
   1e46d:	add    BYTE PTR [edx+0x0],dl
   1e470:	je     0x1e472
   1e472:	ins    BYTE PTR es:[edi],dx
   1e473:	add    BYTE PTR [ecx+0x0],cl
   1e476:	outs   dx,BYTE PTR ds:[esi]
   1e477:	add    BYTE PTR [ecx+0x0],ch
   1e47a:	je     0x1e47c
   1e47c:	push   ebp
   1e47d:	add    BYTE PTR [esi+0x0],ch
   1e480:	imul   eax,DWORD PTR [eax],0x6f0063
   1e486:	add    BYTE PTR fs:[ebp+0x0],ah
   1e48a:	push   ebx
   1e48b:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e48f:	add    BYTE PTR [ecx+0x0],ch
   1e492:	outs   dx,BYTE PTR ds:[esi]
   1e493:	add    BYTE PTR [edi+0x0],ah
   1e496:	add    BYTE PTR [eax],al
   1e498:	inc    ebp
   1e499:	add    BYTE PTR [eax+0x0],bh
   1e49c:	push   edx
   1e49d:	add    BYTE PTR [ecx+0x0],ah
   1e4a0:	imul   eax,DWORD PTR [eax],0x650073
   1e4a6:	push   ebx
   1e4a7:	add    BYTE PTR [eax+eax*1+0x61],dh
   1e4ab:	add    BYTE PTR [eax+eax*1+0x75],dh
   1e4af:	add    BYTE PTR [ebx+0x0],dh
   1e4b2:	add    BYTE PTR [eax],al
   1e4b4:	inc    ebp
   1e4b5:	add    BYTE PTR [eax+0x0],bh
   1e4b8:	inc    ecx
   1e4b9:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e4bd:	add    BYTE PTR [edi+0x0],ch
   1e4c0:	arpl   WORD PTR [eax],ax
   1e4c2:	popa   
   1e4c3:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e4c7:	add    BYTE PTR [eax+0x0],dl
   1e4ca:	outs   dx,DWORD PTR ds:[esi]
   1e4cb:	add    BYTE PTR [edi+0x0],ch
   1e4ce:	ins    BYTE PTR es:[edi],dx
   1e4cf:	add    BYTE PTR [edi+0x0],dl
   1e4d2:	imul   eax,DWORD PTR [eax],0x680074
   1e4d8:	push   esp
   1e4d9:	add    BYTE PTR [ecx+0x0],ah
   1e4dc:	add    BYTE PTR [bx+si+0x0],dl
   1e4e0:	jb     0x1e4e2
   1e4e2:	imul   eax,DWORD PTR [eax],0x72006f
   1e4e8:	imul   eax,DWORD PTR [eax],0x790074
   1e4ee:	add    BYTE PTR [eax],al
   1e4f0:	inc    ebp
   1e4f1:	add    BYTE PTR [eax+0x0],bh
   1e4f4:	inc    esi
   1e4f5:	add    BYTE PTR [edx+0x0],dh
   1e4f8:	add    BYTE PTR gs:[ebp+0x0],ah
   1e4fc:	push   eax
   1e4fd:	add    BYTE PTR [edi+0x0],ch
   1e500:	outs   dx,DWORD PTR ds:[esi]
   1e501:	add    BYTE PTR [eax+eax*1+0x57],ch
   1e505:	add    BYTE PTR [ecx+0x0],ch
   1e508:	je     0x1e50a
   1e50a:	push   0x61005400
   1e50f:	add    BYTE PTR [edi+0x0],ah
   1e512:	add    BYTE PTR [eax],al
   1e514:	push   edx
   1e515:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e519:	add    BYTE PTR [ebx+0x0],al
   1e51c:	outs   dx,DWORD PTR ds:[esi]
   1e51d:	add    BYTE PTR [eax+0x0],dh
   1e520:	jns    0x1e522
   1e522:	push   ebp
   1e523:	add    BYTE PTR [esi+0x0],ch
   1e526:	imul   eax,DWORD PTR [eax],0x6f0063
   1e52c:	add    BYTE PTR fs:[ebp+0x0],ah
   1e530:	push   ebx
   1e531:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e535:	add    BYTE PTR [ecx+0x0],ch
   1e538:	outs   dx,BYTE PTR ds:[esi]
   1e539:	add    BYTE PTR [edi+0x0],ah
   1e53c:	add    BYTE PTR [eax],al
   1e53e:	inc    ebp
   1e53f:	add    BYTE PTR [eax+0x0],bh
   1e542:	inc    ecx
   1e543:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1e547:	add    BYTE PTR [edi+0x0],ch
   1e54a:	arpl   WORD PTR [eax],ax
   1e54c:	popa   
   1e54d:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e551:	add    BYTE PTR [eax+0x0],dl
   1e554:	outs   dx,DWORD PTR ds:[esi]
   1e555:	add    BYTE PTR [edi+0x0],ch
   1e558:	ins    BYTE PTR es:[edi],dx
   1e559:	add    BYTE PTR [edi+0x0],dl
   1e55c:	imul   eax,DWORD PTR [eax],0x680074
   1e562:	push   esp
   1e563:	add    BYTE PTR [ecx+0x0],ah
   1e566:	add    BYTE PTR [bx+si],al
   1e569:	add    BYTE PTR [edx+0x0],dl
   1e56c:	je     0x1e56e
   1e56e:	ins    BYTE PTR es:[edi],dx
   1e56f:	add    BYTE PTR [ecx+0x0],al
   1e572:	jae    0x1e574
   1e574:	jae    0x1e576
   1e576:	add    BYTE PTR gs:[edx+0x0],dh
   1e57a:	je     0x1e57c
   1e57c:	add    BYTE PTR [eax],al
   1e57e:	push   edx
   1e57f:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e583:	add    BYTE PTR [ebx+0x0],al
   1e586:	outs   dx,DWORD PTR ds:[esi]
   1e587:	add    BYTE PTR [ebp+0x0],ch
   1e58a:	jo     0x1e58c
   1e58c:	popa   
   1e58d:	add    BYTE PTR [edx+0x0],dh
   1e590:	add    BYTE PTR gs:[ebp+0x0],dl
   1e594:	outs   dx,BYTE PTR ds:[esi]
   1e595:	add    BYTE PTR [ecx+0x0],ch
   1e598:	arpl   WORD PTR [eax],ax
   1e59a:	outs   dx,DWORD PTR ds:[esi]
   1e59b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e59f:	add    BYTE PTR [ebx+0x0],dl
   1e5a2:	je     0x1e5a4
   1e5a4:	jb     0x1e5a6
   1e5a6:	imul   eax,DWORD PTR [eax],0x67006e
   1e5ac:	add    BYTE PTR [eax],al
   1e5ae:	pop    edx
   1e5af:	add    BYTE PTR [edi+0x0],dh
   1e5b2:	inc    ebp
   1e5b3:	add    BYTE PTR [esi+0x0],ch
   1e5b6:	jne    0x1e5b8
   1e5b8:	ins    DWORD PTR es:[edi],dx
   1e5b9:	add    BYTE PTR [ebp+0x0],ah
   1e5bc:	jb     0x1e5be
   1e5be:	popa   
   1e5bf:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e5c3:	add    BYTE PTR [ebx+0x0],cl
   1e5c6:	add    BYTE PTR gs:[ecx+0x0],bh
   1e5ca:	add    BYTE PTR [eax],al
   1e5cc:	pop    edx
   1e5cd:	add    BYTE PTR [edi+0x0],dh
   1e5d0:	dec    esp
   1e5d1:	add    BYTE PTR [edi+0x0],ch
   1e5d4:	popa   
   1e5d5:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e5d9:	add    BYTE PTR [edx+0x0],dh
   1e5dc:	imul   eax,DWORD PTR [eax],0x650076
   1e5e2:	jb     0x1e5e4
   1e5e4:	add    BYTE PTR [eax],al
   1e5e6:	pop    edx
   1e5e7:	add    BYTE PTR [edi+0x0],dh
   1e5ea:	inc    ebx
   1e5eb:	add    BYTE PTR [edx+0x0],dh
   1e5ee:	add    BYTE PTR gs:[ecx+0x0],ah
   1e5f2:	je     0x1e5f4
   1e5f4:	add    BYTE PTR gs:[ebx+0x0],cl
   1e5f8:	add    BYTE PTR gs:[ecx+0x0],bh
   1e5fc:	add    BYTE PTR [eax],al
   1e5fe:	dec    ecx
   1e5ff:	add    BYTE PTR [edi+0x0],ch
   1e602:	inc    esp
   1e603:	add    BYTE PTR [ebp+0x0],ah
   1e606:	ins    BYTE PTR es:[edi],dx
   1e607:	add    BYTE PTR [ebp+0x0],ah
   1e60a:	je     0x1e60c
   1e60c:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e611:	add    BYTE PTR [esi+0x0],dh
   1e614:	imul   eax,DWORD PTR [eax],0x650063
   1e61a:	add    BYTE PTR [eax],al
   1e61c:	dec    ebx
   1e61d:	add    BYTE PTR [ebp+0x0],ah
   1e620:	inc    esp
   1e621:	add    BYTE PTR [ebp+0x0],ah
   1e624:	je     0x1e626
   1e626:	popa   
   1e627:	add    BYTE PTR [ebx+0x0],ah
   1e62a:	push   0x72005000
   1e62f:	add    BYTE PTR [edi+0x0],ch
   1e632:	arpl   WORD PTR [eax],ax
   1e634:	add    BYTE PTR gs:[ebx+0x0],dh
   1e638:	jae    0x1e63a
   1e63a:	add    BYTE PTR [eax],al
   1e63c:	dec    ebx
   1e63d:	add    BYTE PTR [ebp+0x0],ah
   1e640:	inc    ecx
   1e641:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e645:	add    BYTE PTR [ecx+0x0],ah
   1e648:	arpl   WORD PTR [eax],ax
   1e64a:	push   0x72005000
   1e64f:	add    BYTE PTR [edi+0x0],ch
   1e652:	arpl   WORD PTR [eax],ax
   1e654:	add    BYTE PTR gs:[ebx+0x0],dh
   1e658:	jae    0x1e65a
   1e65a:	add    BYTE PTR [eax],al
   1e65c:	pop    edx
   1e65d:	add    BYTE PTR [edi+0x0],dh
   1e660:	push   ecx
   1e661:	add    BYTE PTR [ebp+0x0],dh
   1e664:	add    BYTE PTR gs:[edx+0x0],dh
   1e668:	jns    0x1e66a
   1e66a:	push   esi
   1e66b:	add    BYTE PTR [ecx+0x0],ah
   1e66e:	ins    BYTE PTR es:[edi],dx
   1e66f:	add    BYTE PTR [ebp+0x0],dh
   1e672:	add    BYTE PTR gs:[ebx+0x0],cl
   1e676:	add    BYTE PTR gs:[ecx+0x0],bh
   1e67a:	add    BYTE PTR [eax],al
   1e67c:	pop    edx
   1e67d:	add    BYTE PTR [edi+0x0],dh
   1e680:	push   edx
   1e681:	add    BYTE PTR [ebp+0x0],ah
   1e684:	popa   
   1e685:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e689:	add    BYTE PTR [ecx+0x0],ch
   1e68c:	ins    BYTE PTR es:[edi],dx
   1e68d:	add    BYTE PTR [ebp+0x0],ah
   1e690:	add    BYTE PTR [eax],al
   1e692:	pop    edx
   1e693:	add    BYTE PTR [edi+0x0],dh
   1e696:	push   ebx
   1e697:	add    BYTE PTR [ebp+0x0],ah
   1e69a:	je     0x1e69c
   1e69c:	dec    ecx
   1e69d:	add    BYTE PTR [esi+0x0],ch
   1e6a0:	data16 add BYTE PTR [edi+0x0],ch
   1e6a4:	jb     0x1e6a6
   1e6a6:	ins    DWORD PTR es:[edi],dx
   1e6a7:	add    BYTE PTR [ecx+0x0],ah
   1e6aa:	je     0x1e6ac
   1e6ac:	imul   eax,DWORD PTR [eax],0x6e006f
   1e6b2:	inc    esi
   1e6b3:	add    BYTE PTR [ecx+0x0],ch
   1e6b6:	ins    BYTE PTR es:[edi],dx
   1e6b7:	add    BYTE PTR [ebp+0x0],ah
   1e6ba:	add    BYTE PTR [eax],al
   1e6bc:	pop    edx
   1e6bd:	add    BYTE PTR [edi+0x0],dh
   1e6c0:	push   edi
   1e6c1:	add    BYTE PTR [edx+0x0],dh
   1e6c4:	imul   eax,DWORD PTR [eax],0x650074
   1e6ca:	inc    esi
   1e6cb:	add    BYTE PTR [ecx+0x0],ch
   1e6ce:	ins    BYTE PTR es:[edi],dx
   1e6cf:	add    BYTE PTR [ebp+0x0],ah
   1e6d2:	add    BYTE PTR [eax],al
   1e6d4:	pop    edx
   1e6d5:	add    BYTE PTR [edi+0x0],dh
   1e6d8:	push   ecx
   1e6d9:	add    BYTE PTR [ebp+0x0],dh
   1e6dc:	add    BYTE PTR gs:[edx+0x0],dh
   1e6e0:	jns    0x1e6e2
   1e6e2:	dec    ecx
   1e6e3:	add    BYTE PTR [esi+0x0],ch
   1e6e6:	data16 add BYTE PTR [edi+0x0],ch
   1e6ea:	jb     0x1e6ec
   1e6ec:	ins    DWORD PTR es:[edi],dx
   1e6ed:	add    BYTE PTR [ecx+0x0],ah
   1e6f0:	je     0x1e6f2
   1e6f2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e6f8:	inc    esi
   1e6f9:	add    BYTE PTR [ecx+0x0],ch
   1e6fc:	ins    BYTE PTR es:[edi],dx
   1e6fd:	add    BYTE PTR [ebp+0x0],ah
   1e700:	add    BYTE PTR [eax],al
   1e702:	dec    ecx
   1e703:	add    BYTE PTR [edi+0x0],ch
   1e706:	inc    ebx
   1e707:	add    BYTE PTR [edx+0x0],dh
   1e70a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e70e:	je     0x1e710
   1e710:	add    BYTE PTR gs:[ebx+0x0],dl
   1e714:	jns    0x1e716
   1e716:	ins    DWORD PTR es:[edi],dx
   1e717:	add    BYTE PTR [edx+0x0],ah
   1e71a:	outs   dx,DWORD PTR ds:[esi]
   1e71b:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e71f:	add    BYTE PTR [ebx+0x0],ah
   1e722:	dec    esp
   1e723:	add    BYTE PTR [ecx+0x0],ch
   1e726:	outs   dx,BYTE PTR ds:[esi]
   1e727:	add    BYTE PTR [ebx+0x0],ch
   1e72a:	add    BYTE PTR [eax],al
   1e72c:	dec    ecx
   1e72d:	add    BYTE PTR [edi+0x0],ch
   1e730:	inc    ebx
   1e731:	add    BYTE PTR [edx+0x0],dh
   1e734:	add    BYTE PTR gs:[ecx+0x0],ah
   1e738:	je     0x1e73a
   1e73a:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e73f:	add    BYTE PTR [esi+0x0],dh
   1e742:	imul   eax,DWORD PTR [eax],0x650063
   1e748:	add    BYTE PTR [eax],al
   1e74a:	push   ebx
   1e74b:	add    BYTE PTR [ebp+0x0],ah
   1e74e:	inc    ebx
   1e74f:	add    BYTE PTR [edx+0x0],dh
   1e752:	add    BYTE PTR gs:[ecx+0x0],ah
   1e756:	je     0x1e758
   1e758:	add    BYTE PTR gs:[ebx+0x0],al
   1e75c:	ins    BYTE PTR es:[edi],dx
   1e75d:	add    BYTE PTR [ecx+0x0],ch
   1e760:	add    BYTE PTR gs:[esi+0x0],ch
   1e764:	je     0x1e766
   1e766:	push   ebx
   1e767:	add    BYTE PTR [ebp+0x0],ah
   1e76a:	arpl   WORD PTR [eax],ax
   1e76c:	jne    0x1e76e
   1e76e:	jb     0x1e770
   1e770:	imul   eax,DWORD PTR [eax],0x790074
   1e776:	add    BYTE PTR [eax],al
   1e778:	dec    ebx
   1e779:	add    BYTE PTR [ebp+0x0],ah
   1e77c:	push   ecx
   1e77d:	add    BYTE PTR [ebp+0x0],dh
   1e780:	add    BYTE PTR gs:[edx+0x0],dh
   1e784:	jns    0x1e786
   1e786:	push   ebx
   1e787:	add    BYTE PTR [ecx+0x0],bh
   1e78a:	jae    0x1e78c
   1e78c:	je     0x1e78e
   1e78e:	add    BYTE PTR gs:[ebp+0x0],ch
   1e792:	push   esp
   1e793:	add    BYTE PTR [ecx+0x0],ch
   1e796:	ins    DWORD PTR es:[edi],dx
   1e797:	add    BYTE PTR [ebp+0x0],ah
   1e79a:	add    BYTE PTR [eax],al
   1e79c:	pop    edx
   1e79d:	add    BYTE PTR [edi+0x0],dh
   1e7a0:	dec    ebp
   1e7a1:	add    BYTE PTR [ecx+0x0],ah
   1e7a4:	jo     0x1e7a6
   1e7a6:	push   esi
   1e7a7:	add    BYTE PTR [ecx+0x0],ch
   1e7aa:	add    BYTE PTR gs:[edi+0x0],dh
   1e7ae:	dec    edi
   1e7af:	add    BYTE PTR [esi+0x0],ah
   1e7b2:	push   ebx
   1e7b3:	add    BYTE PTR [ebp+0x0],ah
   1e7b6:	arpl   WORD PTR [eax],ax
   1e7b8:	je     0x1e7ba
   1e7ba:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7c0:	add    BYTE PTR [eax],al
   1e7c2:	pop    edx
   1e7c3:	add    BYTE PTR [edi+0x0],dh
   1e7c6:	inc    ebx
   1e7c7:	add    BYTE PTR [edx+0x0],dh
   1e7ca:	add    BYTE PTR gs:[ecx+0x0],ah
   1e7ce:	je     0x1e7d0
   1e7d0:	add    BYTE PTR gs:[ebx+0x0],dl
   1e7d4:	add    BYTE PTR gs:[ebx+0x0],ah
   1e7d8:	je     0x1e7da
   1e7da:	imul   eax,DWORD PTR [eax],0x6e006f
   1e7e0:	add    BYTE PTR [eax],al
   1e7e2:	pop    edx
   1e7e3:	add    BYTE PTR [edi+0x0],dh
   1e7e6:	push   ebp
   1e7e7:	add    BYTE PTR [esi+0x0],ch
   1e7ea:	ins    DWORD PTR es:[edi],dx
   1e7eb:	add    BYTE PTR [ecx+0x0],ah
   1e7ee:	jo     0x1e7f0
   1e7f0:	push   esi
   1e7f1:	add    BYTE PTR [ecx+0x0],ch
   1e7f4:	add    BYTE PTR gs:[edi+0x0],dh
   1e7f8:	dec    edi
   1e7f9:	add    BYTE PTR [esi+0x0],ah
   1e7fc:	push   ebx
   1e7fd:	add    BYTE PTR [ebp+0x0],ah
   1e800:	arpl   WORD PTR [eax],ax
   1e802:	je     0x1e804
   1e804:	imul   eax,DWORD PTR [eax],0x6e006f
   1e80a:	add    BYTE PTR [eax],al
   1e80c:	dec    ebx
   1e80d:	add    BYTE PTR [ebp+0x0],ah
   1e810:	dec    ecx
   1e811:	add    BYTE PTR [esi+0x0],ch
   1e814:	imul   eax,DWORD PTR [eax],0x690074
   1e81a:	popa   
   1e81b:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e81f:	add    BYTE PTR [edx+0x0],bh
   1e822:	add    BYTE PTR gs:[ebp+0x0],cl
   1e826:	jne    0x1e828
   1e828:	je     0x1e82a
   1e82a:	add    BYTE PTR gs:[eax+0x0],bh
   1e82e:	add    BYTE PTR [eax],al
   1e830:	dec    ebx
   1e831:	add    BYTE PTR [ebp+0x0],ah
   1e834:	push   edi
   1e835:	add    BYTE PTR [ecx+0x0],ah
   1e838:	imul   eax,DWORD PTR [eax],0x460074
   1e83e:	outs   dx,DWORD PTR ds:[esi]
   1e83f:	add    BYTE PTR [edx+0x0],dh
   1e842:	push   ebx
   1e843:	add    BYTE PTR [ecx+0x0],ch
   1e846:	outs   dx,BYTE PTR ds:[esi]
   1e847:	add    BYTE PTR [edi+0x0],ah
   1e84a:	ins    BYTE PTR es:[edi],dx
   1e84b:	add    BYTE PTR [ebp+0x0],ah
   1e84e:	dec    edi
   1e84f:	add    BYTE PTR [edx+0x0],ah
   1e852:	push   0x0
   1e854:	add    BYTE PTR gs:[ebx+0x0],ah
   1e858:	je     0x1e85a
   1e85a:	add    BYTE PTR [eax],al
   1e85c:	dec    ebx
   1e85d:	add    BYTE PTR [ebp+0x0],ah
   1e860:	push   edx
   1e861:	add    BYTE PTR [ebp+0x0],ah
   1e864:	ins    BYTE PTR es:[edi],dx
   1e865:	add    BYTE PTR [ebp+0x0],ah
   1e868:	popa   
   1e869:	add    BYTE PTR [ebx+0x0],dh
   1e86c:	add    BYTE PTR gs:[ebp+0x0],cl
   1e870:	jne    0x1e872
   1e872:	je     0x1e874
   1e874:	add    BYTE PTR gs:[eax+0x0],bh
   1e878:	add    BYTE PTR [eax],al
   1e87a:	push   eax
   1e87b:	add    BYTE PTR [ebx+0x0],dh
   1e87e:	dec    esp
   1e87f:	add    BYTE PTR [edi+0x0],ch
   1e882:	outs   dx,DWORD PTR ds:[esi]
   1e883:	add    BYTE PTR [ebx+0x0],ch
   1e886:	jne    0x1e888
   1e888:	jo     0x1e88a
   1e88a:	push   eax
   1e88b:	add    BYTE PTR [edx+0x0],dh
   1e88e:	outs   dx,DWORD PTR ds:[esi]
   1e88f:	add    BYTE PTR [ebx+0x0],ah
   1e892:	add    BYTE PTR gs:[ebx+0x0],dh
   1e896:	jae    0x1e898
   1e898:	inc    edx
   1e899:	add    BYTE PTR [ecx+0x0],bh
   1e89c:	push   eax
   1e89d:	add    BYTE PTR [edx+0x0],dh
   1e8a0:	outs   dx,DWORD PTR ds:[esi]
   1e8a1:	add    BYTE PTR [ebx+0x0],ah
   1e8a4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e8a8:	jae    0x1e8aa
   1e8aa:	dec    ecx
   1e8ab:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e8af:	add    BYTE PTR [ebx+0x0],cl
   1e8b2:	add    BYTE PTR gs:[edi+0x0],al
   1e8b6:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e8bb:	add    BYTE PTR [ebp+0x0],dh
   1e8be:	jb     0x1e8c0
   1e8c0:	jb     0x1e8c2
   1e8c2:	add    BYTE PTR gs:[esi+0x0],ch
   1e8c6:	je     0x1e8c8
   1e8c8:	push   esp
   1e8c9:	add    BYTE PTR [eax+0x0],ch
   1e8cc:	jb     0x1e8ce
   1e8ce:	add    BYTE PTR gs:[ecx+0x0],ah
   1e8d2:	add    BYTE PTR fs:[eax],al
   1e8d5:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e8d9:	add    BYTE PTR [ecx],cl
   1e8db:	add    BYTE PTR ds:0x66000000,dl
   1e8e1:	xchg   ebx,eax
   1e8e2:	inc    ebx
   1e8e3:	repz and bh,BYTE PTR [esi-0x67008e5b]
   1e8ea:	dec    ebp
   1e8eb:	nop
   1e8ec:	add    eax,0xc75862a1
   1e8f1:	jnp    0x1e93e
   1e8f3:	enter  0x5d57,0x48
   1e8f7:	jae    0x1e929
   1e8f9:	adc    eax,ebp
   1e8fb:	jo     0x1e901
   1e8fd:	retf   0x24ee
   1e900:	push   ds
   1e901:	cmp    dl,bl
   1e903:	das    
   1e904:	add    ah,cl
   1e906:	push   ebx
   1e907:	add    BYTE PTR [edi],ah
   1e909:	add    BYTE PTR ds:0x6001300,dl
   1e90f:	add    BYTE PTR [eax],al
   1e911:	add    BYTE PTR [esi+ebx*1+0x1c],bh
   1e915:	inc    ebp
   1e916:	dec    esi
   1e917:	into   
   1e918:	pop    esi
   1e919:	test   eax,0x3030d337
   1e91e:	in     eax,0x11
   1e920:	xchg   edx,eax
   1e921:	in     eax,0x42
   1e923:	xchg   ebx,eax
   1e924:	mov    ch,bl
   1e926:	mov    cl,0xe2
   1e928:	(bad)
   1e92b:	inc    ebp
   1e92c:	xor    edx,DWORD PTR [eax]
   1e92e:	mov    ecx,0x555b7aba
   1e933:	arpl   WORD PTR [esi+0x1759b963],sp
   1e939:	add    BYTE PTR [ecx+0x0],cl
   1e93c:	and    al,0x0
   1e93e:	or     al,0x0
   1e940:	push   es
   1e941:	add    BYTE PTR [edx],al
   1e943:	add    BYTE PTR ds:0x15003100,dh
   1e949:	add    BYTE PTR [eax+eax*1],bl
   1e94c:	add    BYTE PTR [eax],al
   1e94e:	das    
   1e94f:	cmp    eax,0x627115e3
   1e954:	pushf  
   1e955:	popf   
   1e956:	jge    0x1e97c
   1e958:	jns    0x1e98f
   1e95a:	mov    ah,dl
   1e95c:	ja     0x1e9b2
   1e95e:	fsubr  QWORD PTR ds:0xa3f01619
   1e964:	xchg   esp,eax
   1e965:	mov    ebp,0x14e99331
   1e96a:	dec    esp
   1e96b:	in     al,0x45
   1e96d:	mov    ds:0x2ecc00,al
   1e972:	dec    edx
   1e973:	add    BYTE PTR [eax],cl
   1e975:	add    BYTE PTR [eax],al
   1e977:	add    BYTE PTR [eax],al
   1e979:	add    BYTE PTR [edi+0x1d99f462],al
   1e97f:	mov    edx,0x3b5d22b1
   1e984:	sbb    al,0x1e
   1e986:	gs add al,0xdf
   1e989:	pushf  
   1e98a:	adc    al,0x96
   1e98c:	dec    edi
   1e98d:	pop    ebx
   1e98e:	lahf   
   1e98f:	mov    bl,0x53
   1e991:	ja     0x1ea10
   1e993:	test   ebp,ecx
   1e995:	cmp    DWORD PTR [edi+0x6e80b9b8],esi
   1e99b:	sbb    BYTE PTR [ebx],0xe3
   1e99e:	sub    bl,ah
   1e9a0:	jo     0x1e967
   1e9a2:	push   ds
   1e9a3:	add    ebx,ebx
   1e9a5:	inc    eax
   1e9a6:	scas   eax,DWORD PTR es:[edi]
   1e9a7:	loop   0x1e9a9
   1e9a9:	int3   
   1e9aa:	outs   dx,BYTE PTR ds:[esi]
   1e9ab:	add    BYTE PTR [edx],bl
   1e9ad:	add    BYTE PTR [eax],dl
   1e9af:	add    BYTE PTR [eax],cl
   1e9b1:	add    BYTE PTR [eax],al
   1e9b3:	add    BYTE PTR [edx+0x0],al
   1e9b6:	dec    edx
   1e9b7:	add    BYTE PTR [eax],cl
   1e9b9:	add    BYTE PTR [eax],al
   1e9bb:	add    BYTE PTR [eax],al
   1e9bd:	add    BYTE PTR [edx],ah
   1e9bf:	mov    eax,ds:0xabca75c1
   1e9c4:	inc    edx
   1e9c5:	sar    esi,0x8e
   1e9c8:	sbb    BYTE PTR [edi+eiz*2-0xf79265e],0xef
   1e9d0:	frstor [eax+eax*4-0x4a4e0865]
   1e9d7:	leave  
   1e9d8:	(bad)  
   1e9da:	clc    
   1e9db:	ret    
   1e9dc:	popa   
   1e9dd:	outs   dx,BYTE PTR ds:[esi]
   1e9de:	add    ah,cl
   1e9e0:	inc    edx
   1e9e1:	daa    
   1e9e2:	add    BYTE PTR ds:0xcbcdcc00,dl
   1e9e8:	shl    DWORD PTR [eax-0x35201661],cl
   1e9ee:	or     DWORD PTR [edi],esi
   1e9f0:	mov    eax,0x358e8719
   1e9f5:	call   0x6ceb:0xf643f23f
   1e9fc:	div    BYTE PTR [edx-0x13]
   1e9ff:	lods   al,BYTE PTR ds:[esi]
   1ea00:	jb     0x1e9ea
   1ea02:	jnp    0x1ea16
   1ea04:	sahf   
   1ea05:	call   0x241b:0xdd12becb
   1ea0c:	add    ah,cl
   1ea0e:	push   ebx
   1ea0f:	aas    
   1ea10:	or     DWORD PTR [eax],eax
   1ea12:	adc    eax,0x40929100
   1ea17:	jmp    eax
   1ea19:	sbb    BYTE PTR [edx+ebx*8],dl
   1ea1c:	pop    ebx
   1ea1d:	mov    ebx,0x39f230ac
   1ea22:	leave  
   1ea23:	sti    
   1ea24:	pop    ss
   1ea25:	out    0x7,eax
   1ea27:	add    eax,0xc2d53aec
   1ea2c:	sub    ebx,DWORD PTR [ecx-0x5a699903]
   1ea32:	jb     0x1ea25
   1ea34:	and    ecx,ebx
   1ea36:	test   eax,0xcee9f6
   1ea3b:	int3   
   1ea3c:	inc    ebx
   1ea3d:	xor    DWORD PTR [edi],edx
   1ea3f:	add    al,0x15
   1ea41:	adc    DWORD PTR [ecx],esi
   1ea43:	cmp    al,0x1a
   1ea45:	pop    ss
   1ea46:	add    al,0x5
   1ea48:	add    ah,cl
   1ea4a:	xchg   BYTE PTR [esp],dl
   1ea4d:	cli    
   1ea4e:	in     al,dx
   1ea4f:	mov    al,0x3
   1ea51:	jmp    0x1ea9d
   1ea53:	add    ch,ah
   1ea55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ea56:	imul   edi,DWORD PTR [edx+ecx*2+0x6637c3dd],0x521224ed
   1ea61:	sub    DWORD PTR [esi+0x7e],edi
   1ea64:	ja     0x1eac2
   1ea66:	mov    dl,BYTE PTR [ebp+0xf]
   1ea69:	dec    ecx
   1ea6a:	pusha  
   1ea6b:	ror    BYTE PTR [ebx+0x23],0x52
   1ea6f:	xor    esi,DWORD PTR [esi-0x1fc53e5b]
   1ea75:	scas   al,BYTE PTR es:[edi]
   1ea76:	lods   eax,DWORD PTR ds:[esi]
   1ea77:	ret    0x5da9
   1ea7a:	sub    ebp,ebp
   1ea7c:	aas    
   1ea7d:	ss add eax,0x2a0cc63f
   1ea83:	mov    ds:0xcc00d314,eax
   1ea88:	dec    esp
   1ea89:	and    ecx,DWORD PTR [esi]
   1ea8b:	add    eax,0x100b2528
   1ea90:	adc    edx,DWORD PTR [ebx]
   1ea92:	or     edi,DWORD PTR [eax]
   1ea94:	add    ah,cl
   1ea96:	repnz mov ah,0x39
   1ea99:	adc    DWORD PTR [edi],eax
   1ea9b:	arpl   WORD PTR [esi+0x4c9644d4],ax
   1eaa1:	ins    DWORD PTR es:[edi],dx
   1eaa2:	repnz aas 
   1eaa4:	jge    0x1eadc
   1eaa6:	and    eax,0xd2f5b479
   1eaab:	mov    edi,0x894490af
   1eab0:	push   ecx
   1eab1:	(bad)  
   1eab2:	dec    edi
   1eab3:	call   0xf288:0xc5071b94
   1eaba:	jmp    0x1ea46
   1eabc:	rcl    bh,cl
   1eabe:	mov    al,ds:0x96682f02
   1eac3:	mov    bh,0x20
   1eac5:	pop    ebp
   1eac6:	and    DWORD PTR [eax],edx
   1eac8:	inc    esp
   1eac9:	aam    0xec
   1eacb:	out    0xca,al
   1eacd:	mov    gs:0x4ccc009c,al
   1ead3:	and    ecx,DWORD PTR [esi]
   1ead5:	add    eax,0x100b2528
   1eada:	adc    edx,DWORD PTR [ebx]
   1eadc:	or     ebp,DWORD PTR [esi]
   1eade:	add    ah,cl
   1eae0:	ss addr16 (bad) 
   1eae3:	aad    0xd3
   1eae5:	lahf   
   1eae6:	pop    es
   1eae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1eae8:	sbb    DWORD PTR [eax-0x13],esp
   1eaeb:	shl    DWORD PTR [eax+0x4],1
   1eaee:	scas   eax,DWORD PTR es:[edi]
   1eaef:	popa   
   1eaf0:	pop    ss
   1eaf1:	dec    ebx
   1eaf2:	ja     0x1ea96
   1eaf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1eaf5:	frstor [edx+0x5]
   1eaf8:	pop    esi
   1eaf9:	and    dl,bl
   1eafb:	out    dx,eax
   1eafc:	in     eax,dx
   1eafd:	xor    al,BYTE PTR [eax]
   1eaff:	sbb    BYTE PTR [edi],0x25
   1eb02:	fcom   DWORD PTR [ecx]
   1eb04:	sub    al,0x62
   1eb06:	js     0x1eb4b
   1eb08:	add    ah,cl
   1eb0a:	imul   eax,DWORD PTR [eax],0xe
   1eb0d:	add    BYTE PTR [edi],dl
   1eb0f:	add    BYTE PTR [eax+eax*1],bl
   1eb12:	or     eax,DWORD PTR [eax]
   1eb14:	or     DWORD PTR [eax],eax
   1eb16:	pop    edi
   1eb17:	add    BYTE PTR [ecx],al
   1eb19:	add    BYTE PTR [eax+eax*1],bl
   1eb1c:	dec    edx
   1eb1d:	add    BYTE PTR [eax],cl
   1eb1f:	add    BYTE PTR [eax],al
   1eb21:	add    BYTE PTR [eax],al
   1eb23:	add    ch,ah
   1eb25:	mov    ecx,0x507319e9
   1eb2a:	cli    
   1eb2b:	sahf   
   1eb2c:	cmp    eax,DWORD PTR [edi-0x7f]
   1eb2f:	pop    esi
   1eb30:	icebp  
   1eb31:	jb     0x1eafa
   1eb33:	sbb    cl,BYTE PTR [edi+0x6c]
   1eb36:	(bad)  
   1eb37:	mov    ah,0x88
   1eb39:	sahf   
   1eb3a:	loope  0x1eb35
   1eb3c:	(bad)  [ecx+eiz*4-0x57cf77a]
   1eb43:	jae    0x1eb10
   1eb45:	push   0x1cb13b53
   1eb4a:	arpl   dx,di
   1eb4c:	sbb    eax,0xba2fca2f
   1eb51:	xchg   ecx,eax
   1eb52:	push   0xf70d37ec
   1eb57:	dec    edi
   1eb58:	or     dh,ah
   1eb5a:	add    ah,cl
   1eb5c:	outs   dx,BYTE PTR ds:[esi]
   1eb5d:	sbb    dl,BYTE PTR [eax]
   1eb5f:	or     BYTE PTR [eax],al
   1eb61:	inc    edx
   1eb62:	dec    edx
   1eb63:	or     BYTE PTR [eax],al
   1eb65:	add    BYTE PTR [ecx],dh
   1eb67:	int    0x55
   1eb69:	dec    esp
   1eb6a:	inc    eax
   1eb6b:	sub    BYTE PTR [ebx-0x286767a1],dl
   1eb71:	mov    edx,0xec5ce1a8
   1eb76:	out    dx,eax
   1eb77:	(bad)  
   1eb78:	mov    edx,DWORD PTR [eax+0x61e46ef2]
   1eb7e:	push   ebx
   1eb7f:	push   0x1abadec6
   1eb84:	dec    ebx
   1eb85:	aaa    
   1eb86:	push   esp
   1eb87:	shl    ah,0xad
   1eb8a:	push   ecx
   1eb8b:	pop    eax
   1eb8c:	jbe    0x1ebd7
   1eb8e:	add    ah,cl
   1eb90:	pop    esp
   1eb91:	add    BYTE PTR [edi],cl
   1eb93:	add    BYTE PTR [edx],ch
   1eb95:	add    BYTE PTR [edx],cl
   1eb97:	add    BYTE PTR [edi],al
   1eb99:	add    BYTE PTR [ecx],dl
   1eb9b:	add    BYTE PTR [eax],cl
   1eb9d:	add    BYTE PTR [edi],bh
   1eb9f:	add    BYTE PTR ds:0x1b000000,bh
   1eba5:	add    BYTE PTR [eax],ch
   1eba7:	add    BYTE PTR [edi],ch
   1eba9:	add    BYTE PTR [edx],cl
   1ebab:	add    BYTE PTR [edx],cl
   1ebad:	add    BYTE PTR [edi],al
   1ebaf:	add    BYTE PTR [ecx],dl
   1ebb1:	add    BYTE PTR [eax],cl
   1ebb3:	add    BYTE PTR [esi+0x0],bl
   1ebb6:	add    DWORD PTR [eax],eax
   1ebb8:	outs   dx,BYTE PTR ds:[esi]
   1ebb9:	add    BYTE PTR [eax],al
   1ebbb:	add    al,ch
   1ebbd:	lock push esp
   1ebbf:	or     al,0xe9
   1ebc1:	jle    0x1eb77
   1ebc3:	xchg   ebx,eax
   1ebc4:	and    DWORD PTR ds:0x99bda944,esi
   1ebca:	jbe    0x1ec12
   1ebcc:	jg     0x1ebdb
   1ebce:	mov    ah,0x7a
   1ebd0:	jecxz  0x1ec2e
   1ebd2:	fnsave [edx-0x7b7a9011]
   1ebd8:	lds    ecx,FWORD PTR [esp+ecx*1+0x3f956625]
   1ebdf:	mov    al,0xe0
   1ebe1:	push   ss
   1ebe2:	xchg   BYTE PTR [esi-0x4],ch
   1ebe5:	cwde   
   1ebe6:	das    
   1ebe7:	out    dx,eax
   1ebe8:	pop    es
   1ebe9:	add    al,0x71
   1ebeb:	dec    ebp
   1ebec:	fisub  WORD PTR [edi]
   1ebee:	push   cs
   1ebef:	popf   
   1ebf0:	repz clc 
   1ebf2:	fisub  DWORD PTR [ebx-0x1a7d4188]
   1ebf8:	add    ah,cl
   1ebfa:	loopne 0x1ebc2
   1ebfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ebfd:	jnp    0x1eb9a
   1ebff:	bound  esi,QWORD PTR [bp-0xaab]
   1ec04:	iret   
   1ec05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1ec06:	(bad)  
   1ec07:	mov    dl,0x41
   1ec09:	jg     0x1eb9d
   1ec0b:	cli    
   1ec0c:	(bad)  
   1ec0d:	adc    edi,DWORD PTR [ebx-0x2e]
   1ec10:	int3   
   1ec11:	ins    BYTE PTR es:[edi],dx
   1ec12:	test   al,0x3c
   1ec14:	scas   eax,DWORD PTR es:[edi]
   1ec15:	(bad)  
   1ec17:	call   0x35419993
   1ec1c:	clc    
   1ec1d:	pop    esp
   1ec1e:	xor    al,0xc1
   1ec20:	int    0xf2
   1ec22:	jno    0x1ebc9
   1ec24:	clc    
   1ec25:	mov    al,ds:0xa8c34e1f
   1ec2a:	inc    ebp
   1ec2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ec2c:	in     al,0x34
   1ec2e:	push   ebx
   1ec2f:	loopne 0x1ebbe
   1ec31:	js     0x1ec5d
   1ec33:	dec    edx
   1ec34:	mov    al,BYTE PTR [ecx+0x7fb000df]
   1ec3a:	(bad)  
   1ec3b:	or     BYTE PTR [eax],cl
   1ec3d:	jb     0x1ec75
   1ec3f:	aam    0x2c
   1ec41:	jp     0x1ec5a
   1ec43:	ret    
   1ec44:	fistp  QWORD PTR [ebp+0x2a]
   1ec47:	int    0x8e
   1ec49:	lahf   
   1ec4a:	rol    ch,0xc2
   1ec4d:	xchg   esp,eax
   1ec4e:	shl    DWORD PTR [ebp+0x631fc26e],cl
   1ec54:	mov    ds:0xadf13432,al
   1ec59:	add    DWORD PTR [eax],0x5d002ecc
   1ec5f:	add    BYTE PTR [edx],cl
   1ec61:	add    BYTE PTR [edx],cl
   1ec63:	add    BYTE PTR [eax],al
   1ec65:	add    dl,ch
   1ec67:	jg     0x1eca2
   1ec69:	sbb    ecx,DWORD PTR [ecx+0x12442af6]
   1ec6f:	mov    bl,0x3f
   1ec71:	std    
   1ec72:	sahf   
   1ec73:	mov    dh,BYTE PTR [esi-0x3e1870ea]
   1ec79:	cwde   
   1ec7a:	out    dx,al
   1ec7b:	mov    ecx,0x9eaefde5
   1ec80:	add    dl,BYTE PTR ds:0xfc708326
   1ec86:	shr    DWORD PTR [ecx+0x24],1
   1ec89:	js     0x1ec11
   1ec8b:	add    BYTE PTR [eax+eax*1+0xf],bl
   1ec8f:	add    BYTE PTR [edx],ch
   1ec91:	add    BYTE PTR [edx],cl
   1ec93:	add    BYTE PTR [edi],al
   1ec95:	add    BYTE PTR [ecx],dl
   1ec97:	add    BYTE PTR [eax],cl
   1ec99:	add    BYTE PTR [edi],bh
   1ec9b:	add    BYTE PTR ds:0x1b000000,bh
   1eca1:	add    BYTE PTR [eax],ch
   1eca3:	add    BYTE PTR [edi],ch
   1eca5:	add    BYTE PTR [edx],cl
   1eca7:	add    BYTE PTR [edx],cl
   1eca9:	add    BYTE PTR [edi],al
   1ecab:	add    BYTE PTR [ecx],dl
   1ecad:	add    BYTE PTR [eax],cl
   1ecaf:	add    BYTE PTR [esi+0x0],bl
   1ecb2:	add    DWORD PTR [eax],eax
   1ecb4:	outs   dx,BYTE PTR ds:[esi]
   1ecb5:	add    BYTE PTR [eax],bh
   1ecb7:	add    BYTE PTR [esi],dl
   1ecb9:	add    BYTE PTR [ebx],bl
   1ecbb:	add    BYTE PTR [edi],bl
   1ecbd:	add    BYTE PTR [ebx],dl
   1ecbf:	add    BYTE PTR [edi],dl
   1ecc1:	add    BYTE PTR [ecx],al
   1ecc3:	add    BYTE PTR [edi],ch
   1ecc5:	add    BYTE PTR [eax],al
   1ecc7:	add    BYTE PTR [edx+0x4a8b289f],bh
   1eccd:	std    
   1ecce:	scas   al,BYTE PTR es:[edi]
   1eccf:	jnp    0x1ed12
   1ecd1:	mov    WORD PTR [ebp-0x65dafa93],fs
   1ecd7:	jmp    0x2542:0xb2374888
   1ecde:	out    0x94,al
   1ece0:	inc    edx
   1ece1:	push   ecx
   1ece2:	cli    
   1ece3:	icebp  
   1ece4:	mov    ?,WORD PTR [esi-0x5c59d968]
   1ecea:	xlat   BYTE PTR ss:[ebx]
   1ecec:	(bad)  
   1ecee:	mov    cl,0x7d
   1ecf0:	ret    0x3758
   1ecf3:	inc    esi
   1ecf4:	mov    edx,0xf480e10d
   1ecf9:	xchg   BYTE PTR [eax],al
   1ecfb:	int3   
   1ecfc:	pop    esp
   1ecfd:	add    BYTE PTR [edi],cl
   1ecff:	add    BYTE PTR [edx],ch
   1ed01:	add    BYTE PTR [edx],cl
   1ed03:	add    BYTE PTR [edi],al
   1ed05:	add    BYTE PTR [ecx],dl
   1ed07:	add    BYTE PTR [eax],cl
   1ed09:	add    BYTE PTR [edi],bh
   1ed0b:	add    BYTE PTR ds:0x1b000000,bh
   1ed11:	add    BYTE PTR [eax],al
   1ed13:	add    BYTE PTR [ecx-0x26],bh
   1ed16:	mov    WORD PTR [ecx],ss
   1ed18:	out    dx,eax
   1ed19:	fs stos BYTE PTR es:[edi],al
   1ed1b:	js     0x1ecde
   1ed1d:	cmp    ebp,edi
   1ed1f:	and    eax,DWORD PTR [ebp-0x739055f1]
   1ed25:	jmp    DWORD PTR [esi+edx*8]
   1ed28:	mov    ecx,0x9893616c
   1ed2d:	sub    DWORD PTR [eax+0x51],edx
   1ed30:	cmovle eax,DWORD PTR [ebx]
   1ed33:	in     al,0xad
   1ed35:	adc    edx,DWORD PTR [edx-0x1]
   1ed38:	jo     0x1ed63
   1ed3a:	jp     0x1ed48
   1ed3c:	mov    al,ds:0xc8f796e
   1ed41:	mov    al,BYTE PTR [eax]
   1ed43:	int3   
   1ed44:	pop    esp
   1ed45:	add    BYTE PTR [esi],cl
   1ed47:	add    BYTE PTR [edi],dh
   1ed49:	add    BYTE PTR [edx],al
   1ed4b:	add    BYTE PTR [esi],cl
   1ed4d:	add    BYTE PTR [edx],bl
   1ed4f:	add    BYTE PTR [edi],al
   1ed51:	add    BYTE PTR [esi],al
   1ed53:	add    BYTE PTR [ebx],cl
   1ed55:	add    BYTE PTR ds:0x2c001100,ah
   1ed5b:	add    BYTE PTR [edx],al
   1ed5d:	add    BYTE PTR [ebx],cl
   1ed5f:	add    BYTE PTR [ecx],al
   1ed61:	add    BYTE PTR [edi],al
   1ed63:	add    BYTE PTR [ebx],cl
   1ed65:	add    BYTE PTR [ecx],bh
   1ed67:	add    BYTE PTR [edi],cl
   1ed69:	add    BYTE PTR [edx],cl
   1ed6b:	add    BYTE PTR [edx],cl
   1ed6d:	add    BYTE PTR [edi],al
   1ed6f:	add    BYTE PTR [ecx],dl
   1ed71:	add    BYTE PTR [eax],cl
   1ed73:	add    BYTE PTR [ecx],dl
   1ed75:	add    BYTE PTR [edi],bl
   1ed77:	add    BYTE PTR [esi],dh
   1ed79:	add    BYTE PTR [edi],al
   1ed7b:	add    BYTE PTR [eax],al
   1ed7d:	add    BYTE PTR [edi],dl
   1ed7f:	add    BYTE PTR [ebx],cl
   1ed81:	add    BYTE PTR [edx],bl
   1ed83:	add    BYTE PTR [edi],dh
   1ed85:	add    BYTE PTR [eax+eax*1],ch
   1ed88:	add    DWORD PTR [eax],eax
   1ed8a:	sbb    al,BYTE PTR [eax]
   1ed8c:	push   es
   1ed8d:	add    BYTE PTR ds:0x3f000300,bl
   1ed93:	add    BYTE PTR [esi],dh
   1ed95:	add    BYTE PTR [ecx],dl
   1ed97:	add    BYTE PTR [eax],ch
   1ed99:	add    BYTE PTR [edi],cl
   1ed9b:	add    BYTE PTR [esi],dh
   1ed9d:	add    BYTE PTR [edi],dl
   1ed9f:	add    BYTE PTR [eax+eax*1],al
   1eda2:	pop    ds
   1eda3:	add    BYTE PTR [edx],cl
   1eda5:	add    BYTE PTR [esi],al
   1eda7:	add    BYTE PTR [esi],dl
   1eda9:	add    BYTE PTR [edi],ch
   1edab:	add    BYTE PTR [eax],al
   1edad:	add    BYTE PTR [edx-0x7d],ah
   1edb0:	inc    eax
   1edb1:	retf   0x9eb6
   1edb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1edb5:	jb     0x1edfb
   1edb7:	lahf   
   1edb8:	into   
   1edb9:	fwait
   1edba:	sbb    al,0xe0
   1edbc:	adc    ch,BYTE PTR [esi+0xa7ada0a]
   1edc2:	dec    esp
   1edc3:	adc    DWORD PTR cs:[esi-0x75],edi
   1edc7:	jo     0x1ed64
   1edc9:	xor    BYTE PTR [ebx+0x4f],bl
   1edcc:	inc    ecx
   1edcd:	arpl   bp,bx
   1edcf:	xor    bl,ch
   1edd1:	adc    ebp,edi
   1edd3:	inc    esi
   1edd4:	pop    ebx
   1edd5:	and    bl,BYTE PTR [ebp+0x1feafe]
   1eddb:	int3   
   1eddc:	ins    BYTE PTR es:[edi],dx
   1eddd:	add    BYTE PTR [edi],bl
   1eddf:	add    BYTE PTR [edx],dl
   1ede1:	add    BYTE PTR [edx],dl
   1ede3:	add    BYTE PTR [eax],al
   1ede5:	add    BYTE PTR [ebp+0x0],bl
   1ede8:	dec    ebx
   1ede9:	add    BYTE PTR ds:0x1d00,bl
   1edef:	add    BYTE PTR [eax+0x69],bl
   1edf2:	cmp    edi,DWORD PTR [esi-0x4a7d199d]
   1edf8:	lods   eax,DWORD PTR ds:[esi]
   1edf9:	mov    esp,0x8ce0de1
   1edfe:	pop    ebx
   1edff:	jns    0x1ee05
   1ee01:	inc    ecx
   1ee02:	dec    esp
   1ee03:	stc    
   1ee04:	outs   dx,DWORD PTR ds:[esi]
   1ee05:	mov    ebp,0x90aba31
   1ee0a:	retf   
   1ee0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ee0c:	fbstp  TBYTE PTR [eax-0x4e392712]
   1ee12:	fistp  QWORD PTR [eax]
   1ee14:	pop    es
   1ee15:	or     al,al
   1ee17:	shl    DWORD PTR [eax-0x55f3378],cl
   1ee1d:	loopne 0x1ee1c
   1ee1f:	mov    ds:0xdcc7be73,al
   1ee24:	mov    ebx,DWORD PTR [esi]
   1ee26:	arpl   sp,di
   1ee28:	sti    
   1ee29:	xor    BYTE PTR [edi+0x35cf28],ah
   1ee2f:	int3   
   1ee30:	pop    edx
   1ee31:	sub    eax,0x6163725
   1ee36:	sbb    BYTE PTR [eax],cl
   1ee38:	xor    DWORD PTR [edx+ebx*1],edi
   1ee3b:	pop    ss
   1ee3c:	add    al,0x5
   1ee3e:	add    ah,cl
   1ee40:	and    cl,bh
   1ee42:	mov    ch,0x90
   1ee44:	xor    bh,bh
   1ee46:	ins    DWORD PTR es:[edi],dx
   1ee47:	sub    edi,0x9d7408f9
   1ee4d:	pop    esp
   1ee4e:	mov    ds,WORD PTR [edx+0x1b63d893]
   1ee54:	lods   eax,DWORD PTR ds:[esi]
   1ee55:	mov    DWORD PTR [ecx-0x5d],edi
   1ee58:	cwde   
   1ee59:	sbb    edi,eax
   1ee5b:	inc    edi
   1ee5c:	into   
   1ee5d:	scas   eax,DWORD PTR es:[edi]
   1ee5e:	xor    BYTE PTR [edi],ah
   1ee60:	jge    0x1ee9b
   1ee62:	(bad)  
   1ee63:	jb     0x1ee4a
   1ee65:	or     dl,ah
   1ee67:	jg     0x1eed9
   1ee69:	aas    
   1ee6a:	mov    edx,0x713f46bb
   1ee6f:	mov    ebp,0x37371aad
   1ee74:	mov    esp,cs
   1ee76:	sub    eax,DWORD PTR [ecx]
   1ee78:	fld    DWORD PTR [edi]
   1ee7a:	add    eax,ecx
   1ee7c:	(bad)  
   1ee7d:	out    0x0,al
   1ee7f:	int3   
   1ee80:	dec    esi
   1ee81:	cmp    ah,BYTE PTR [ebx]
   1ee83:	and    eax,0x33111d1b
   1ee88:	aas    
   1ee89:	sbb    eax,DWORD PTR [esi]
   1ee8b:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ee92:	sbb    eax,0x68cc000b
   1ee97:	into   
   1ee98:	bound  ebp,QWORD PTR [esp+ebx*1+0xd]
   1ee9c:	mov    al,ds:0xf924bb57
   1eea1:	clc    
   1eea2:	add    ebp,DWORD PTR [edx]
   1eea4:	push   ebp
   1eea5:	lahf   
   1eea6:	and    bh,BYTE PTR [edx-0x7a693c37]
   1eeac:	dec    esp
   1eead:	jl     0x1ee95
   1eeaf:	repz fucomp st(0)
   1eeb2:	arpl   WORD PTR [esi],di
   1eeb4:	rol    BYTE PTR [ebx-0x314723c3],0x9f
   1eebb:	or     ah,ch
   1eebd:	cmp    ebx,DWORD PTR [edx+0x3b]
   1eec0:	add    ah,cl
   1eec2:	pop    edx
   1eec3:	sub    eax,0x1b1d2227
   1eec8:	adc    DWORD PTR [esi],eax
   1eeca:	pop    ss
   1eecb:	and    bh,BYTE PTR [edi]
   1eecd:	sbb    eax,DWORD PTR [esi]
   1eecf:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eed6:	sbb    eax,0x67cc000b
   1eedb:	shr    bl,1
   1eedd:	in     al,dx
   1eede:	and    DWORD PTR [ebx],eax
   1eee0:	enter  0xf8f,0x86
   1eee4:	test   eax,0x241e7de5
   1eee9:	cld    
   1eeea:	fmul   st,st(4)
   1eeec:	xchg   edi,eax
   1eeed:	(bad)  
   1eeee:	cmp    al,0xc5
   1eef0:	mov    dl,0x82
   1eef2:	cmp    ah,BYTE PTR [eax-0x68]
   1eef5:	jne    0x1ef45
   1eef7:	push   0x79
   1eef9:	pop    ecx
   1eefa:	mov    cl,0x8d
   1eefc:	mov    eax,ds:0xf4e128dc
   1ef01:	arpl   WORD PTR [eax],ax
   1ef03:	int3   
   1ef04:	push   ds
   1ef05:	adc    ebp,DWORD PTR [eax+ecx*1-0x4c]
   1ef09:	jne    0x1ef46
   1ef0b:	mov    ah,0xa9
   1ef0d:	retf   0xec1d
   1ef10:	fstp   TBYTE PTR [edi-0x6d]
   1ef13:	jmp    0xbf84:0x8ff8515d
   1ef1a:	(bad)  
   1ef1b:	xchg   ebx,eax
   1ef1c:	cmp    edi,DWORD PTR [ecx]
   1ef1e:	(bad)  
   1ef20:	stos   DWORD PTR es:[edi],eax
   1ef21:	call   0x325b:0x6baecda7
   1ef28:	in     eax,dx
   1ef29:	jg     0x1eece
   1ef2b:	ins    DWORD PTR es:[edi],dx
   1ef2c:	cmp    edx,edi
   1ef2e:	out    dx,al
   1ef2f:	popf   
   1ef30:	jae    0x1ef5d
   1ef32:	jnp    0x1eece
   1ef34:	cmp    dh,BYTE PTR [edx+0x75]
   1ef37:	pop    ss
   1ef38:	pop    ds
   1ef39:	sub    DWORD PTR [ecx-0x3f],esp
   1ef3c:	cli    
   1ef3d:	fwait
   1ef3e:	add    ah,cl
   1ef40:	pop    esp
   1ef41:	add    BYTE PTR [eax],bl
   1ef43:	add    BYTE PTR [ebx],ch
   1ef45:	add    BYTE PTR [eax+eax*1],bl
   1ef48:	aaa    
   1ef49:	add    BYTE PTR [ecx],ah
   1ef4b:	add    BYTE PTR [ebx],dl
   1ef4d:	add    BYTE PTR [edi],bl
   1ef4f:	add    BYTE PTR [edx],cl
   1ef51:	add    BYTE PTR [esi],al
   1ef53:	add    BYTE PTR [esi],dl
   1ef55:	add    BYTE PTR [edi],ch
   1ef57:	add    BYTE PTR [ecx+0x0],bh
   1ef5a:	push   esi
   1ef5b:	add    BYTE PTR [eax],al
   1ef5d:	add    al,dh
   1ef5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1ef60:	adc    eax,0x31e96bd8
   1ef65:	sbb    al,0xd
   1ef67:	inc    esi
   1ef68:	jno    0x1ef90
   1ef6a:	cmp    eax,0x622ce51e
   1ef6f:	(bad)  
   1ef70:	xchg   edx,eax
   1ef71:	data16 xor cl,dh
   1ef74:	in     al,dx
   1ef75:	jae    0x1efda
   1ef77:	retf   
   1ef78:	or     dh,BYTE PTR [esi+0x4743cf57]
   1ef7e:	inc    ebp
   1ef7f:	xchg   edx,eax
   1ef80:	inc    edi
   1ef81:	cmp    DWORD PTR [esi+0x2cfe0769],ebp
   1ef87:	ds inc esp
   1ef89:	mov    edx,0x4720da53
   1ef8e:	jle    0x1ef41
   1ef90:	fst    st(5)
   1ef92:	jg     0x1ef6d
   1ef94:	pop    ebx
   1ef95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ef96:	xchg   BYTE PTR ds:0x5ccc00,bl
   1ef9c:	sbb    BYTE PTR [eax],al
   1ef9e:	and    DWORD PTR [eax],eax
   1efa0:	adc    eax,DWORD PTR [eax]
   1efa2:	pop    ds
   1efa3:	add    BYTE PTR [edx],cl
   1efa5:	add    BYTE PTR [esi],al
   1efa7:	add    BYTE PTR [ecx],bh
   1efa9:	add    BYTE PTR [ecx+0x0],bh
   1efac:	push   esi
   1efad:	add    BYTE PTR [eax],al
   1efaf:	add    BYTE PTR [ecx],cl
   1efb1:	addr16 in eax,dx
   1efb3:	cli    
   1efb4:	mov    esp,0x61febc72
   1efb9:	jle    0x1efa2
   1efbb:	mov    cs,WORD PTR [ecx+0x35e6b556]
   1efc1:	mov    bl,0x38
   1efc3:	mov    ds:0xe4c0f308,eax
   1efc8:	add    DWORD PTR [eax+0x64],0x7d17411c
   1efcf:	sbb    ah,BYTE PTR [ecx]
   1efd1:	hlt    
   1efd2:	and    eax,DWORD PTR [eax-0x11]
   1efd5:	cmp    edi,ebp
   1efd7:	lds    edx,FWORD PTR [eax+esi*1-0xd02b48a]
   1efde:	aaa    
   1efdf:	imul   BYTE PTR fs:[ecx+0x49]
   1efe3:	pop    eax
   1efe4:	loope  0x1f02c
   1efe6:	sbb    eax,0x4d57bc2b
   1efeb:	or     DWORD PTR [eax+0x0],0x790053
   1eff2:	jae    0x1eff4
   1eff4:	inc    ebp
   1eff5:	add    BYTE PTR [esi+0x0],dh
   1eff8:	je     0x1effa
   1effa:	inc    ebx
   1effb:	add    BYTE PTR [eax],al
   1effd:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1f001:	adc    ebx,DWORD PTR [edi]
   1f003:	or     al,BYTE PTR [esi]
   1f005:	cmp    DWORD PTR [eax],eax
   1f007:	int3   
   1f008:	sub    al,0x89
   1f00a:	cmp    eax,eax
   1f00c:	outs   dx,BYTE PTR ds:[esi]
   1f00d:	lods   eax,DWORD PTR ds:[esi]
   1f00e:	hlt    
   1f00f:	les    esp,FWORD PTR [eax-0x41d4617f]
   1f015:	shl    cl,cl
   1f017:	ss inc esp
   1f019:	add    BYTE PTR [ebp+0x28d3d4a1],al
   1f01f:	mov    dl,0x47
   1f021:	sar    BYTE PTR [esi-0x20],1
   1f024:	jae    0x1efa9
   1f026:	daa    
   1f027:	push   eax
   1f028:	jecxz  0x1efd2
   1f02a:	push   ss
   1f02b:	add    cl,BYTE PTR [edi]
   1f02d:	pop    esp
   1f02e:	mov    esp,0x5ccc0097
   1f033:	add    BYTE PTR [eax],al
   1f035:	add    BYTE PTR [edx+0x0],dh
   1f038:	jb     0x1f03a
   1f03a:	add    BYTE PTR [eax],al
   1f03c:	dec    esp
   1f03d:	mov    ebx,0x16fe126d
   1f042:	mov    ebx,0xbff86a84
   1f047:	sub    ah,BYTE PTR [edx]
   1f049:	xchg   ecx,eax
   1f04a:	adc    al,0x38
   1f04c:	mov    dh,0xdb
   1f04e:	out    0xd1,al
   1f050:	daa    
   1f051:	push   ss
   1f052:	xchg   ebx,eax
   1f053:	shl    BYTE PTR [esi],cl
   1f055:	stos   BYTE PTR es:[edi],al
   1f056:	xor    DWORD PTR [ecx+0x6fa76edf],eax
   1f05c:	mov    ?,WORD PTR [eax+0x5]
   1f05f:	in     eax,0x83
   1f061:	add    edx,edi
   1f063:	stos   DWORD PTR es:[edi],eax
   1f064:	pushf  
   1f065:	mov    ecx,0x539cb2b7
   1f06a:	xchg   ebx,eax
   1f06b:	xor    edx,edx
   1f06d:	jae    0x1eff9
   1f06f:	addr16 dec ecx
   1f071:	ss xor al,0x8e
   1f074:	dec    ebx
   1f075:	mov    BYTE PTR [ebx-0x68],bh
   1f078:	mov    esi,0x5ccc0085
   1f07d:	add    BYTE PTR [ebx+0x63],ah
   1f080:	add    ah,cl
   1f082:	call   0x2372:0x6e41232
   1f089:	js     0x1f0c3
   1f08b:	fisttp WORD PTR [edi]
   1f08d:	sub    eax,0xfdd64bba
   1f092:	mov    bl,0xd3
   1f094:	in     al,dx
   1f095:	arpl   WORD PTR [ebp+0xc],bp
   1f098:	sbb    eax,0xcd2668aa
   1f09d:	and    cl,BYTE PTR [edx]
   1f09f:	ja     0x1f07f
   1f0a1:	test   al,0x2e
   1f0a3:	repnz fadd QWORD PTR [eax-0x7c]
   1f0a7:	inc    esi
   1f0a8:	mov    esp,0x29da5307
   1f0ad:	stos   BYTE PTR es:[edi],al
   1f0ae:	test   DWORD PTR [ecx+ebp*8-0x21],edx
   1f0b2:	adc    BYTE PTR [ebp+0x5d],ch
   1f0b5:	push   ebx
   1f0b6:	psubq  mm1,QWORD PTR ds:0x3e1a94e
   1f0bd:	add    BYTE PTR ds:0x5ccc0053,ah
   1f0c3:	add    BYTE PTR [ebx+0x0],dh
   1f0c6:	jns    0x1f0c8
   1f0c8:	jae    0x1f0ca
   1f0ca:	je     0x1f0cc
   1f0cc:	add    BYTE PTR gs:[ebp+0x0],ch
   1f0d0:	jb     0x1f0d2
   1f0d2:	outs   dx,DWORD PTR ds:[esi]
   1f0d3:	add    BYTE PTR [edi+0x0],ch
   1f0d6:	je     0x1f0d8
   1f0d8:	pop    esp
   1f0d9:	add    BYTE PTR [ebx+0x0],dh
   1f0dc:	jns    0x1f0de
   1f0de:	jae    0x1f0e0
   1f0e0:	je     0x1f0e2
   1f0e2:	add    BYTE PTR gs:[ebp+0x0],ch
   1f0e6:	xor    eax,DWORD PTR [eax]
   1f0e8:	xor    al,BYTE PTR [eax]
   1f0ea:	pop    esp
   1f0eb:	add    BYTE PTR ds:0x5300,ah
   1f0f1:	add    BYTE PTR [ecx],dh
   1f0f3:	xor    ch,BYTE PTR cs:[esi]
   1f0f6:	xor    eax,DWORD PTR [eax]
   1f0f8:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f0ff:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1f103:	outs   dx,BYTE PTR gs:[esi]
   1f105:	addr16 je 0x1f170
   1f108:	and    BYTE PTR [ebx+0x68],ah
   1f10b:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f10f:	int3   
   1f110:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f117:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1f11b:	popa   
   1f11c:	je     0x1f17f
   1f11e:	and    BYTE PTR [ebx+0x68],ah
   1f121:	arpl   WORD PTR gs:[ebx+0x0],bp
   1f125:	int3   
   1f126:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f12d:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f131:	je     0x1f194
   1f133:	outs   dx,BYTE PTR ds:[esi]
   1f134:	arpl   WORD PTR [ebp+0x20],sp
   1f137:	je     0x1f1a8
   1f139:	outs   dx,DWORD PTR ds:[esi]
   1f13a:	and    BYTE PTR [esi+0x61],ah
   1f13d:	jb     0x1f15f
   1f13f:	bound  esp,QWORD PTR [ecx+0x63]
   1f142:	imul   eax,DWORD PTR [eax],0x69
   1f145:	outs   dx,BYTE PTR ds:[esi]
   1f146:	jbe    0x1f1a9
   1f148:	ins    BYTE PTR es:[edi],dx
   1f149:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f151:	outs   dx,BYTE PTR ds:[esi]
   1f152:	arpl   WORD PTR [ebp+0x20],sp
   1f155:	arpl   WORD PTR [edi+0x64],bp
   1f158:	add    BYTE PTR gs:[ecx+0x6e],ch
   1f15c:	jbe    0x1f1bf
   1f15e:	ins    BYTE PTR es:[edi],dx
   1f15f:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1f167:	popa   
   1f168:	ins    BYTE PTR es:[edi],dx
   1f169:	das    
   1f16a:	ins    BYTE PTR es:[edi],dx
   1f16b:	outs   dx,BYTE PTR gs:[esi]
   1f16d:	addr16 je 0x1f1d8
   1f170:	and    BYTE PTR [ebx+0x6f],ah
   1f173:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1f178:	jbe    0x1f1db
   1f17a:	ins    BYTE PTR es:[edi],dx
   1f17b:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1f183:	outs   dx,BYTE PTR ds:[esi]
   1f184:	arpl   WORD PTR [ebp+0x73],sp
   1f187:	and    BYTE PTR [ebx+0x65],dh
   1f18a:	je     0x1f18c
   1f18c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f193:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1f197:	gs jb  0x1f1fb
   1f19a:	ins    BYTE PTR es:[edi],dx
   1f19b:	das    
   1f19c:	ins    BYTE PTR es:[edi],dx
   1f19d:	outs   dx,BYTE PTR gs:[esi]
   1f19f:	addr16 je 0x1f20a
   1f1a2:	jae    0x1f1c4
   1f1a4:	jae    0x1f20b
   1f1a6:	je     0x1f1a8
   1f1a8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f1af:	and    BYTE PTR [edx+0x69],ah
   1f1b2:	je     0x1f1d4
   1f1b4:	ins    BYTE PTR es:[edi],dx
   1f1b5:	outs   dx,BYTE PTR gs:[esi]
   1f1b7:	addr16 je 0x1f222
   1f1ba:	and    BYTE PTR [edx+0x65],dh
   1f1bd:	jo     0x1f224
   1f1bf:	popa   
   1f1c0:	je     0x1f1c2
   1f1c2:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f1c9:	and    BYTE PTR [ebx+0x6f],ah
   1f1cc:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1f1d2:	addr16 je 0x1f23d
   1f1d5:	jae    0x1f1f7
   1f1d7:	jae    0x1f23e
   1f1d9:	je     0x1f1db
   1f1db:	int3   
   1f1dc:	je     0x1f24d
   1f1de:	outs   dx,DWORD PTR ds:[esi]
   1f1df:	and    BYTE PTR [ebp+0x61],ch
   1f1e2:	outs   dx,BYTE PTR ds:[esi]
   1f1e3:	jns    0x1f205
   1f1e5:	ins    BYTE PTR es:[edi],dx
   1f1e6:	outs   dx,BYTE PTR gs:[esi]
   1f1e8:	addr16 je 0x1f253
   1f1eb:	and    BYTE PTR [edi+0x72],ch
   1f1ee:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1f1f2:	je     0x1f255
   1f1f4:	outs   dx,BYTE PTR ds:[esi]
   1f1f5:	arpl   WORD PTR [ebp+0x20],sp
   1f1f8:	jae    0x1f273
   1f1fa:	ins    DWORD PTR es:[edi],dx
   1f1fb:	bound  ebp,QWORD PTR [edi+0x6c]
   1f1fe:	jae    0x1f200
   1f200:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f207:	and    BYTE PTR [ebx+0x74],dh
   1f20a:	outs   dx,DWORD PTR ds:[esi]
   1f20b:	jb     0x1f272
   1f20d:	and    BYTE PTR fs:[edx+0x6c],ah
   1f211:	outs   dx,DWORD PTR ds:[esi]
   1f212:	arpl   WORD PTR [ebx+0x20],bp
   1f215:	ins    BYTE PTR es:[edi],dx
   1f216:	outs   dx,BYTE PTR gs:[esi]
   1f218:	addr16 je 0x1f283
   1f21b:	jae    0x1f21d
   1f21d:	int3   
   1f21e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f225:	and    BYTE PTR [edx+0x6c],ah
   1f228:	outs   dx,DWORD PTR ds:[esi]
   1f229:	arpl   WORD PTR [ebx+0x20],bp
   1f22c:	je     0x1f2a7
   1f22e:	jo     0x1f295
   1f230:	add    ah,cl
   1f232:	push   0x65646165
   1f237:	jb     0x1f259
   1f239:	arpl   WORD PTR [edx+0x63],si
   1f23c:	and    BYTE PTR [ebp+0x69],ch
   1f23f:	jae    0x1f2ae
   1f241:	popa   
   1f242:	je     0x1f2a7
   1f244:	push   0x6b6e7500
   1f249:	outs   dx,BYTE PTR ds:[esi]
   1f24a:	outs   dx,DWORD PTR ds:[esi]
   1f24b:	ja     0x1f2bb
   1f24d:	and    BYTE PTR [eax+0x65],ch
   1f250:	popa   
   1f251:	fs gs jb 0x1f275
   1f255:	data16 ins BYTE PTR es:[edi],dx
   1f257:	popa   
   1f258:	addr16 jae 0x1f27b
   1f25b:	jae    0x1f2c2
   1f25d:	je     0x1f25f
   1f25f:	int3   
   1f260:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1f267:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1f26b:	gs popa 
   1f26d:	fs gs jb 0x1f291
   1f271:	arpl   WORD PTR [eax+0x65],bp
   1f274:	arpl   WORD PTR [ebx+0x0],bp
   1f277:	int3   
   1f278:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1f27f:	and    BYTE PTR [edi+0x69],dh
   1f282:	outs   dx,BYTE PTR ds:[esi]
   1f283:	outs   dx,DWORD PTR fs:[esi]
   1f285:	ja     0x1f2a7
   1f287:	jae    0x1f2f2
   1f289:	jp     0x1f2f0
   1f28b:	add    BYTE PTR [ebp+0x6e],dh
   1f28e:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1f292:	outs   dx,BYTE PTR ds:[esi]
   1f293:	and    BYTE PTR [ebx+0x6f],ah
   1f296:	ins    DWORD PTR es:[edi],dx
   1f297:	jo     0x1f30b
   1f299:	gs jae 0x1f30f
   1f29c:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1f2a3:	.byte 0x68
   1f2a4:	outs   dx,DWORD PTR ds:[esi]
   1f2a5:	fs
	...

Disassembly of section INIT:

00078a00 <INIT>:
   78a00:	add    BYTE PTR [eax],al
   78a02:	add    BYTE PTR [eax],al
   78a04:	add    BYTE PTR [ecx+0x77b1c],ah
   78a0a:	mov    ecx,0xbb40e64e
   78a0f:	test   eax,eax
   78a11:	je     0x78a17
   78a13:	cmp    eax,ecx
   78a15:	jne    0x78a31
   78a17:	mov    eax,ds:0x1f448
   78a1c:	mov    eax,DWORD PTR [eax]
   78a1e:	xor    eax,0x77b1c
   78a23:	mov    ds:0x77b1c,eax
   78a28:	jne    0x78a31
   78a2a:	mov    eax,ecx
   78a2c:	mov    ds:0x77b1c,eax
   78a31:	not    eax
   78a33:	mov    ds:0x77b20,eax
   78a38:	ret    
   78a39:	fwait
   78a3a:	aas    
   78a3b:	jne    0x78a82
   78a3d:	fisttp DWORD PTR [ebx-0x1374aa01]
   78a43:	call   0x78a05
   78a48:	pop    ebp
   78a49:	jmp    0x192c4
   78a4e:	int3   
   78a4f:	int3   
   78a50:	xchg   esp,eax
   78a51:	mov    al,BYTE PTR [esi]
	...
   78a5b:	add    BYTE PTR [edx],dh
   78a5d:	mov    WORD PTR [esi],es
   78a5f:	add    BYTE PTR [eax],cl
   78a61:	hlt    
   78a62:	add    BYTE PTR [eax],al
   78a64:	mov    WORD PTR [edx+0x6],cs
   78a6a:	add    BYTE PTR [eax],al
   78a6c:	add    BYTE PTR [eax],al
   78a6e:	add    BYTE PTR [eax],al
   78a70:	push   esp
   78a71:	mov    WORD PTR [esi],es
   78a73:	add    BYTE PTR [eax],al
   78a75:	hlt    
	...
   78a8a:	add    BYTE PTR [eax],al
   78a8c:	inc    eax
   78a8d:	mov    WORD PTR [esi],es
   78a8f:	add    BYTE PTR [eax],al
   78a91:	add    BYTE PTR [eax],al
   78a93:	add    BYTE PTR [eax],al
   78a95:	mov    eax,DWORD PTR [esi]
   78a97:	add    BYTE PTR [edx],cl
   78a99:	mov    eax,DWORD PTR [esi]
   78a9b:	add    BYTE PTR [ebx+ecx*4],dl
   78a9e:	push   es
   78a9f:	add    BYTE PTR [esi],bl
   78aa1:	mov    eax,DWORD PTR [esi]
   78aa3:	add    BYTE PTR [edx],bh
   78aa5:	mov    eax,DWORD PTR [esi]
   78aa7:	add    BYTE PTR [ebx+ecx*4+0x6],al
   78aab:	add    BYTE PTR [esi-0x75],cl
   78aae:	push   es
   78aaf:	add    BYTE PTR [esi-0x75],bl
   78ab2:	push   es
   78ab3:	add    BYTE PTR [ebx+ecx*4+0x6],dh
   78ab7:	add    BYTE PTR [eax-0x75fff975],al
   78abd:	mov    eax,DWORD PTR [esi]
   78abf:	add    BYTE PTR [edx-0x45fff975],ah
   78ac5:	mov    eax,DWORD PTR [esi]
   78ac7:	add    ah,cl
   78ac9:	mov    eax,DWORD PTR [esi]
   78acb:	add    al,ah
   78acd:	mov    eax,DWORD PTR [esi]
   78acf:	add    BYTE PTR [eax],al
   78ad1:	mov    WORD PTR [esi],es
   78ad3:	add    BYTE PTR [esp+ecx*4],dl
   78ad6:	push   es
   78ad7:	add    BYTE PTR [edx],ah
   78ad9:	mov    WORD PTR [esi],es
   78adb:	add    al,ch
   78add:	mov    al,BYTE PTR [esi]
   78adf:	add    BYTE PTR [esp+ecx*4+0x6],bl
   78ae3:	add    BYTE PTR [eax],al
   78ae5:	add    BYTE PTR [eax],al
   78ae7:	add    BYTE PTR [eax],dh
   78ae9:	add    ecx,DWORD PTR [edi+0x62]
   78aec:	inc    sp
   78aee:	gs jb  0x78b56
   78af1:	data16 gs jb 0x78b5a
   78af5:	outs   dx,BYTE PTR ds:[esi]
   78af6:	arpl   WORD PTR [ebp+0x4f],sp
   78af9:	bound  ebp,QWORD PTR [edx+0x65]
   78afc:	arpl   WORD PTR [eax+eax*1+0x0],si
   78b00:	jnp    0x78b07
   78b02:	pop    edi
   78b03:	popa   
   78b04:	ins    BYTE PTR es:[edi],dx
   78b05:	ins    BYTE PTR es:[edi],dx
   78b06:	ins    DWORD PTR es:[edi],dx
   78b07:	jne    0x78b75
   78b09:	add    BYTE PTR [ecx+0x5],bh
   78b0c:	pop    edi
   78b0d:	popa   
   78b0e:	ins    BYTE PTR es:[edi],dx
   78b0f:	ins    BYTE PTR es:[edi],dx
   78b10:	imul   esi,DWORD PTR fs:[esi+0x0],0x656d05a9
   78b18:	ins    DWORD PTR es:[edi],dx
   78b19:	jae    0x78b80
   78b1b:	je     0x78b1d
   78b1d:	add    BYTE PTR [ecx+0x476d4d02],ah
   78b23:	gs je  0x78b79
   78b26:	jns    0x78b9b
   78b28:	je     0x78b8f
   78b2a:	ins    DWORD PTR es:[edi],dx
   78b2b:	push   edx
   78b2c:	outs   dx,DWORD PTR ds:[esi]
   78b2d:	jne    0x78ba3
   78b2f:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   78b36:	gs jae 0x78bac
   78b39:	add    bh,al
   78b3b:	add    eax,0x6e736377
   78b40:	arpl   WORD PTR [ecx+0x74],sp
   78b43:	add    BYTE PTR [edi+0x6d656d05],ah
   78b49:	arpl   WORD PTR [eax+0x79],si
   78b4c:	add    BYTE PTR [eax],al
   78b4e:	jne    0x78b50
   78b50:	inc    ebp
   78b51:	js     0x78ba5
   78b53:	popa   
   78b54:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   78b5b:	jne    0x78bd0
   78b5d:	add    bl,ah
   78b5f:	add    DWORD PTR [ecx+0x6f],ecx
   78b62:	inc    bx
   78b64:	outs   dx,DWORD PTR ds:[esi]
   78b65:	ins    DWORD PTR es:[edi],dx
   78b66:	jo     0x78bd4
   78b68:	gs je  0x78bd0
   78b6b:	push   edx
   78b6c:	gs jno 0x78be4
   78b6f:	gs jae 0x78be6
   78b72:	add    BYTE PTR [eax],al
   78b74:	mov    ecx,0x70777305
   78b79:	jb     0x78be4
   78b7b:	outs   dx,BYTE PTR ds:[esi]
   78b7c:	je     0x78be4
   78b7e:	add    BYTE PTR [eax],al
   78b80:	lods   al,BYTE PTR ds:[esi]
   78b81:	add    eax,0x69727073
   78b86:	outs   dx,BYTE PTR ds:[esi]
   78b87:	je     0x78bef
   78b89:	add    BYTE PTR [ecx+0x0],al
   78b8c:	inc    ebp
   78b8d:	js     0x78bd0
   78b8f:	ins    BYTE PTR es:[edi],dx
   78b90:	ins    BYTE PTR es:[edi],dx
   78b91:	outs   dx,DWORD PTR ds:[esi]
   78b92:	arpl   WORD PTR [ecx+0x74],sp
   78b95:	gs push eax
   78b97:	outs   dx,DWORD PTR ds:[esi]
   78b98:	outs   dx,DWORD PTR ds:[esi]
   78b99:	ins    BYTE PTR es:[edi],dx
   78b9a:	push   edi
   78b9b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x6d006761
   78ba3:	add    cl,BYTE PTR [ebx+0x65]
   78ba6:	push   edi
   78ba7:	popa   
   78ba8:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   78bb0:	ins    BYTE PTR es:[di],dx
   78bb2:	gs dec edi
   78bb4:	bound  ebp,QWORD PTR [edx+0x65]
   78bb7:	arpl   WORD PTR [eax+eax*1+0x42],si
   78bbb:	add    cl,BYTE PTR [ebx+0x65]
   78bbe:	push   edx
   78bbf:	gs ins BYTE PTR es:[edi],dx
   78bc1:	gs popa 
   78bc3:	jae    0x78c2a
   78bc5:	dec    ebp
   78bc6:	jne    0x78c3c
   78bc8:	gs js  0x78bcb
   78bcb:	add    BYTE PTR [ebx],bl
   78bcd:	add    cl,BYTE PTR [ebx+0x65]
   78bd0:	dec    ecx
   78bd1:	outs   dx,BYTE PTR ds:[esi]
   78bd2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   78bda:	dec    ebp
   78bdb:	jne    0x78c51
   78bdd:	gs js  0x78be0
   78be0:	inc    edx
   78be1:	add    BYTE PTR [ebp+0x78],al
   78be4:	inc    ecx
   78be5:	ins    BYTE PTR es:[edi],dx
   78be6:	ins    BYTE PTR es:[edi],dx
   78be7:	outs   dx,DWORD PTR ds:[esi]
   78be8:	arpl   WORD PTR [ecx+0x74],sp
   78beb:	gs push eax
   78bed:	outs   dx,DWORD PTR ds:[esi]
   78bee:	outs   dx,DWORD PTR ds:[esi]
   78bef:	ins    BYTE PTR es:[edi],dx
   78bf0:	push   edi
   78bf1:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   78bf9:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   78c00:	dec    esi
   78c01:	add    BYTE PTR [ebp+0x78],al
   78c04:	inc    esi
   78c05:	jb     0x78c6c
   78c07:	gs push eax
   78c09:	outs   dx,DWORD PTR ds:[esi]
   78c0a:	outs   dx,DWORD PTR ds:[esi]
   78c0b:	ins    BYTE PTR es:[edi],dx
   78c0c:	push   edi
   78c0d:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x66006761
   78c15:	add    cl,BYTE PTR [ebx+0x65]
   78c18:	push   esp
   78c19:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   78c20:	je     0x78c22
   78c22:	test   BYTE PTR [ecx],0x4b
   78c25:	gs inc edx
   78c27:	jne    0x78c90
   78c29:	inc    ebx
   78c2a:	push   0x456b6365
   78c2f:	js     0x78c31
   78c31:	add    BYTE PTR [esi+0x74],ch
   78c34:	outs   dx,DWORD PTR ds:[esi]
   78c35:	jae    0x78ca2
   78c37:	jb     0x78ca7
   78c39:	ins    BYTE PTR es:[edi],dx
   78c3a:	cs gs js 0x78ca3
   78c3e:	add    BYTE PTR [eax],al
   78c40:	inc    eax
   78c41:	add    BYTE PTR [ebx+0x65],cl
   78c44:	inc    edi
   78c45:	gs je  0x78c8b
   78c48:	jne    0x78cbc
   78c4a:	jb     0x78cb1
   78c4c:	outs   dx,BYTE PTR ds:[esi]
   78c4d:	je     0x78c98
   78c4f:	jb     0x78cc2
   78c51:	ins    BYTE PTR es:[edi],dx
   78c52:	add    BYTE PTR [eax],al
   78c54:	dec    eax
   78c55:	inc    ecx
   78c56:	dec    esp
   78c57:	cs fs ins BYTE PTR es:[edi],dx
   78c5a:	ins    BYTE PTR es:[edi],dx
   78c5b:	add    BYTE PTR [eax+0x6c745204],ah
   78c61:	push   ebp
   78c62:	outs   dx,BYTE PTR ds:[esi]
   78c63:	ja     0x78cce
   78c65:	outs   dx,BYTE PTR ds:[esi]
   78c66:	fs
	...
