
aad9d81cab64a4272e6230e0aeb1cf8646d3e9e62e47b6d5271df09cfd9243e9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a795
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x26820cf7
  40101f:	(bad)  
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(0)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR [esi]
  401036:	or     cl,BYTE PTR gs:[eax]
  401039:	cmp    ecx,DWORD PTR [edi]
  40103b:	retf   0xc722
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	sub    DWORD PTR [esi-0x2a],esp
  4010d4:	push   ds
  4010d5:	arpl   WORD PTR [ebp+0x8],ax
  4010d8:	daa    
  4010d9:	jb     0x40110e
  4010db:	rol    ch,0x17
  4010de:	mov    edi,0x4916e8ad
  4010e3:	dec    ebx
  4010e4:	cmp    BYTE PTR ds:[edx+0x43032772],ah
  4010eb:	dec    BYTE PTR [ecx]
  4010ed:	jecxz  0x401078
  4010ef:	sub    DWORD PTR [edi+0x3027c981],ebx
  4010f5:	shl    DWORD PTR [ebp+0x24a8d9d3],cl
  4010fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010fc:	add    DWORD PTR [ebx-0x16],ecx
  4010ff:	mov    eax,ds:0x50e4acfe
  401104:	jo     0x4010a6
  401106:	dec    ebx
  401107:	pop    eax
  401108:	or     BYTE PTR [esi+0x7cb1eac1],ch
  40110e:	scas   al,BYTE PTR es:[edi]
  40110f:	mov    bl,BYTE PTR [ebx-0x12]
  401112:	lock cmc 
  401114:	ins    DWORD PTR es:[edi],dx
  401115:	call   0x77bc1341
  40111a:	push   ebx
  40111b:	dec    edx
  40111c:	repnz add al,0x1f
  40111f:	mov    esi,0x4a84e34c
  401124:	lods   al,BYTE PTR ds:[esi]
  401125:	leave  
  401126:	cmp    esi,ebp
  401128:	jns    0x401188
  40112a:	fidivr WORD PTR [edx+0x473919a3]
  401130:	jns    0x4010f9
  401132:	cs clc 
  401134:	sbb    esi,DWORD PTR [esi-0x19]
  401137:	fcomp  DWORD PTR [eax+0x29bad119]
  40113d:	jle    0x40118b
  40113f:	jge    0x40114b
  401141:	lods   eax,DWORD PTR ds:[esi]
  401142:	dec    eax
  401143:	push   edx
  401144:	addr16 fwait
  401146:	inc    eax
  401147:	jmp    0x32ca:0x6133d7e1
  40114e:	jle    0x401161
  401150:	xlat   BYTE PTR ds:[ebx]
  401151:	add    ah,BYTE PTR [ebx]
  401153:	retf   
  401154:	and    bh,BYTE PTR [eax]
  401156:	iret   
  401157:	pop    esi
  401158:	shl    BYTE PTR [ecx],0xdd
  40115b:	sbb    al,BYTE PTR [edx+0x33]
  40115e:	(bad)  
  40115f:	(bad)  
  401160:	aaa    
  401161:	je     0x401109
  401163:	test   eax,0x3fe9dce9
  401168:	cmc    
  401169:	xchg   bh,ch
  40116b:	xchg   DWORD PTR [eax+0x70],edi
  40116e:	xor    ah,ah
  401170:	(bad)  
  401171:	fbstp  TBYTE PTR [ecx-0x80]
  401174:	inc    edx
  401175:	mov    ds:0x13005a5b,al
  40117a:	inc    esi
  40117b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40117c:	jge    0x40111b
  40117e:	sub    ebx,esi
  401180:	rcr    ebp,0xe1
  401183:	inc    ecx
  401184:	sub    al,0xf7
  401186:	in     eax,0xc8
  401188:	mul    BYTE PTR [esi+0x3b]
  40118b:	fs inc ecx
  40118d:	pop    esp
  40118e:	stc    
  40118f:	jmp    0x40116b
  401191:	adc    edi,DWORD PTR [ecx+0xfae7663]
  401197:	xchg   ebp,eax
  401198:	fnstcw WORD PTR [eax]
  40119a:	pop    esi
  40119b:	xlat   BYTE PTR ds:[ebx]
  40119c:	dec    esi
  40119d:	out    0xeb,al
  40119f:	jne    0x40115b
  4011a1:	or     BYTE PTR [edx+0x1],bh
  4011a4:	rcr    BYTE PTR ss:[esp+eax*2],cl
  4011a8:	inc    ecx
  4011a9:	fdiv   QWORD PTR [edi-0x3f]
  4011ac:	inc    ebp
  4011ad:	stc    
  4011ae:	cdq    
  4011af:	lds    ebx,FWORD PTR [eax+0x5d249e58]
  4011b5:	push   ecx
  4011b6:	(bad)  
  4011b7:	(bad)  
  4011b8:	std    
  4011b9:	outs   dx,BYTE PTR ds:[esi]
  4011ba:	sub    al,0xec
  4011bc:	pop    ss
  4011bd:	xchg   DWORD PTR [eax],esp
  4011bf:	das    
  4011c0:	(bad)  
  4011c1:	push   ds
  4011c2:	pushf  
  4011c3:	pop    ss
  4011c4:	push   0xb2710585
  4011c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ca:	outs   dx,DWORD PTR ds:[esi]
  4011cb:	int    0xfa
  4011cd:	pusha  
  4011ce:	outs   dx,BYTE PTR ds:[esi]
  4011cf:	stos   BYTE PTR es:[edi],al
  4011d0:	mov    ah,BYTE PTR [ebp+0x6d9b33b3]
  4011d6:	sbb    ah,bl
  4011d8:	(bad)  
  4011d9:	into   
  4011da:	dec    ebx
  4011db:	bndldx (bad),[esi]
  4011de:	(bad)  
  4011e0:	or     al,0x2d
  4011e2:	ficom  WORD PTR [ebp+edi*2+0x23]
  4011e6:	inc    BYTE PTR [edi]
  4011e8:	out    0x1c,eax
  4011ea:	maskmovq mm1,(bad)
  4011eb:	test   DWORD PTR [edx+ecx*1-0x49],0xbf8ebdb6
  4011f3:	shr    DWORD PTR [edi+0x4d],cl
  4011f6:	fs mov ah,0x6a
  4011f9:	dec    ecx
  4011fa:	nop
  4011fb:	sub    esi,DWORD PTR [esi]
  4011fd:	push   ecx
  4011fe:	inc    edi
  4011ff:	repnz mov DWORD PTR [edi+0x840fb03],ebx
  401206:	fcomp  DWORD PTR [edi+ebx*8-0x4478ab16]
  40120d:	scas   al,BYTE PTR es:[edi]
  40120e:	setle  BYTE PTR [ecx-0x51]
  401212:	adc    BYTE PTR [ecx+0x7d],0x4e
  401216:	icebp  
  401217:	adc    eax,0x8d3767de
  40121c:	dec    edx
  40121d:	push   es
  40121e:	in     eax,dx
  40121f:	test   DWORD PTR gs:[eax-0xc],ecx
  401223:	or     cl,BYTE PTR [eax+0x53a85a5]
  401229:	fisttp WORD PTR [eax+0x6ead508d]
  40122f:	(bad)  
  401230:	fdivr  st(6),st
  401232:	xchg   esp,eax
  401233:	out    0x22,al
  401235:	or     BYTE PTR [edi-0x14d38a6f],0xf5
  40123c:	iret   
  40123d:	jne    0x401214
  40123f:	cld    
  401240:	loopne 0x4011e2
  401242:	mov    ebp,0x98906ae6
  401247:	push   cs
  401248:	and    al,0x9a
  40124a:	daa    
  40124b:	add    eax,0x8bd2b446
  401251:	cmp    al,0x2e
  401253:	lock add BYTE PTR [ebp-0x35e66787],cl
  40125a:	jbe    0x40123d
  40125c:	mov    al,ds:0x9f88055f
  401261:	pushf  
  401262:	repz inc edx
  401264:	aaa    
  401265:	ins    BYTE PTR es:[edi],dx
  401266:	es out 0x78,eax
  401269:	shl    BYTE PTR [edx+0x68d8bc2f],cl
  40126f:	jmp    0x9bf4:0x62b18fd
  401276:	sti    
  401277:	(bad)  
  401278:	pop    ss
  401279:	and    eax,0x15ac0b70
  40127e:	pop    ds
  40127f:	jmp    0xd570:0x4a3d9df5
  401286:	cmc    
  401287:	cwde   
  401288:	in     al,dx
  401289:	call   0xeb6a:0xde2116f
  401290:	aad    0x5f
  401292:	push   edi
  401293:	and    dh,BYTE PTR [ebx+eax*4+0x62f9f44d]
  40129a:	jnp    0x401269
  40129c:	dec    esp
  40129d:	pop    ecx
  40129e:	dec    ecx
  40129f:	aaa    
  4012a0:	pop    esi
  4012a1:	xlat   BYTE PTR ds:[ebx]
  4012a2:	xchg   esp,eax
  4012a3:	fwait
  4012a4:	(bad)  
  4012a5:	pop    edi
  4012a6:	mov    edx,0xf7cec87
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a82d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7e1
  4012c2:	or     DWORD PTR ds:0x42a78d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a77d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7e1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7d5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a859,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a859
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a859,ebx
  401312:	cmp    DWORD PTR ds:0x42a859,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a859,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a7a1,0x42a825
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a829,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a829
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a829,edi
  401361:	cmp    DWORD PTR ds:0x42a829,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a829,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a829,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a829
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a829,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7d5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a78d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a78d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a78d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7d5
  4013d7:	push   0x0
  4013d9:	push   0x42a9ed
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a78d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a78d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a78d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a78d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a78d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x4e],1
  401422:	inc    edi
  401423:	pop    ds
  401424:	dec    esi
  401425:	(bad)  
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x40148b
  40142e:	fsubr  DWORD PTR cs:[edi+0x373e6656]
  401435:	sub    esi,ecx
  401437:	repnz in eax,dx
  401439:	daa    
  40143a:	push   ebx
  40143b:	ins    BYTE PTR es:[edi],dx
  40143c:	or     eax,0xc4df1dc8
  401441:	push   ss
  401442:	dec    ecx
  401443:	ret    0xb16f
  401446:	clc    
  401447:	cdq    
  401448:	pusha  
  401449:	adc    al,0x3b
  40144b:	std    
  40144c:	es adc eax,0x4dae94c5
  401452:	jne    0x40149c
  401454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401455:	in     eax,dx
  401456:	(bad)  
  401458:	enter  0x67ab,0xae
  40145c:	push   ss
  40145d:	retf   0xa954
  401460:	repnz mov WORD PTR [edi],ds
  401463:	ins    DWORD PTR es:[edi],dx
  401464:	retf   
  401465:	call   0xa4f6:0x9a00a03a
  40146c:	stos   BYTE PTR es:[edi],al
  40146d:	sar    edx,0xa3
  401470:	pop    esi
  401471:	sbb    DWORD PTR [ebp+0x5df95886],ebx
  401477:	ror    DWORD PTR [ebx-0x72],cl
  40147a:	xor    esp,DWORD PTR ds:0xe524199c
  401480:	inc    esp
  401481:	sub    eax,0x55988616
  401486:	test   eax,0x25b6c865
  40148b:	jecxz  0x4014e7
  40148d:	jp     0x4014f7
  40148f:	pusha  
  401490:	add    eax,0xde2aa923
  401495:	mov    bh,0xc1
  401497:	add    esi,DWORD PTR [edi+0x28d44fdf]
  40149d:	mov    esp,0x350a435b
  4014a2:	mov    ah,0xb4
  4014a4:	push   esp
  4014a5:	or     bh,bh
  4014a7:	lock dec ecx
  4014a9:	push   cs
  4014aa:	mov    bl,0xa1
  4014ac:	inc    esp
  4014ad:	jno    0x401454
  4014af:	sub    al,0x2f
  4014b1:	in     eax,dx
  4014b2:	pop    edi
  4014b3:	outs   dx,DWORD PTR ds:[esi]
  4014b4:	jnp    0x401469
  4014b6:	mov    edi,0xb9ad68cb
  4014bb:	fwait
  4014bc:	mov    ch,BYTE PTR [ebx-0x21]
  4014bf:	sbb    eax,edi
  4014c1:	mov    al,0x3b
  4014c3:	push   ebx
  4014c4:	ror    DWORD PTR [edi+ebx*1+0x5f20dc1],cl
  4014cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014cc:	and    eax,0xd48c0a0f
  4014d1:	and    al,BYTE PTR [esi]
  4014d3:	pusha  
  4014d4:	loope  0x4014b0
  4014d6:	cs push ds
  4014d8:	mov    ebx,0xabc2515a
  4014dd:	fadd   DWORD PTR [esi]
  4014df:	push   eax
  4014e0:	iret   
  4014e1:	mov    esp,0x30d61cb4
  4014e6:	imul   dl
  4014e8:	pop    ebp
  4014e9:	pop    ebx
  4014ea:	adc    al,0xd0
  4014ec:	sub    cl,cl
  4014ee:	retf   
  4014ef:	(bad)  
  4014f0:	rcl    ecx,cl
  4014f2:	and    edi,0xffffff8d
  4014f5:	push   ebx
  4014f6:	xchg   ecx,eax
  4014f7:	pop    ss
  4014f8:	stos   DWORD PTR es:[edi],eax
  4014f9:	stos   DWORD PTR es:[edi],eax
  4014fa:	xchg   esp,eax
  4014fb:	push   esi
  4014fc:	add    bh,BYTE PTR [eax-0xb]
  4014ff:	or     dl,cl
  401501:	sbb    BYTE PTR [edx+0x3a],dh
  401504:	xor    eax,0xe0a4e58
  401509:	inc    ecx
  40150a:	iret   
  40150b:	fistp  QWORD PTR [edi+0x17]
  40150e:	je     0x40150a
  401510:	int    0x54
  401512:	rcl    edx,cl
  401514:	fcmovne st,st(0)
  401516:	ja     0x40151a
  401518:	cdq    
  401519:	add    DWORD PTR [edi],0x704e86a0
  40151f:	or     ah,BYTE PTR [ecx]
  401521:	and    eax,0xddeae6ab
  401526:	fisub  DWORD PTR [edx]
  401528:	pushf  
  401529:	cld    
  40152a:	call   0x810c5836
  40152f:	call   0xf0f5bfdd
  401534:	mov    ah,0x8
  401536:	push   ds
  401537:	mov    BYTE PTR [ecx+0x5865603f],dh
  40153d:	js     0x401575
  40153f:	sar    DWORD PTR [esi-0xa127466],0x1f
  401546:	clc    
  401547:	jle    0x4015be
  401549:	inc    ebp
  40154a:	add    bh,BYTE PTR [edx+0x7]
  40154d:	or     BYTE PTR [edx+0x1e546187],cl
  401553:	lds    ebp,FWORD PTR [ebx]
  401555:	or     eax,0x62c60f4a
  40155a:	sub    BYTE PTR [edx-0x18],dh
  40155d:	xor    DWORD PTR [ebp-0x65],eax
  401560:	fsub   DWORD PTR [ebx+0x46d5ad61]
  401566:	(bad)  
  401567:	xchg   edi,eax
  401568:	mov    dl,0x1f
  40156a:	and    BYTE PTR [ebx+ebp*4+0x48fc242f],bl
  401571:	fs dec edx
  401573:	fsub   QWORD PTR [ebx+0x734c95c5]
  401579:	xlat   BYTE PTR ds:[ebx]
  40157a:	pop    edx
  40157b:	call   0xf84529bd
  401580:	nop
  401581:	repz dec edx
  401583:	out    0x7c,al
  401585:	pop    ebx
  401586:	xchg   dh,dh
  401588:	pop    ebx
  401589:	pusha  
  40158a:	addr16 ds int 0x5b
  40158e:	mov    bh,0xaf
  401590:	jmp    0x40159c
  401592:	pop    ebx
  401593:	mov    edx,0x615a6dc2
  401598:	push   ebp
  401599:	les    ebx,FWORD PTR [ebp+0x4ac3cf3e]
  40159f:	push   ds
  4015a0:	das    
  4015a1:	lahf   
  4015a2:	or     DWORD PTR [ecx-0x5a9ecd09],edx
  4015a8:	mov    esp,ebp
  4015aa:	mov    edi,0xca30bd26
  4015af:	nop
  4015b0:	sub    ecx,esi
  4015b2:	das    
  4015b3:	data16 lods al,BYTE PTR ds:[esi]
  4015b5:	jno    0x401555
  4015b7:	lods   eax,DWORD PTR ds:[esi]
  4015b8:	pop    ds
  4015b9:	ins    DWORD PTR es:[edi],dx
  4015ba:	pop    edi
  4015bb:	xchg   BYTE PTR [edx+0x1],bh
  4015be:	cmp    dh,ah
  4015c0:	scas   eax,DWORD PTR es:[edi]
  4015c1:	jg     0x401579
  4015c3:	int    0x9d
  4015c5:	(bad)  
  4015c7:	(bad)  
  4015c8:	repz stc 
  4015ca:	mov    al,0xbf
  4015cc:	loope  0x40164a
  4015ce:	scas   al,BYTE PTR es:[edi]
  4015cf:	retf   0x12f3
  4015d2:	cli    
  4015d3:	jno    0x40163a
  4015d5:	xor    DWORD PTR [esi+0x1ac4822f],0xc
  4015dc:	push   esp
  4015dd:	pop    edx
  4015de:	add    DWORD PTR [ecx+0x50],ebx
  4015e1:	cdq    
  4015e2:	sub    al,dh
  4015e4:	lahf   
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	(bad)  
  4015e7:	cmp    bh,bl
  4015e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ea:	(bad)  
  4015eb:	out    dx,eax
  4015ec:	aam    0xb
  4015ee:	and    ch,dh
  4015f0:	sbb    DWORD PTR [edx+esi*2+0x45],0xffffffae
  4015f5:	xor    DWORD PTR [ecx-0x3f],eax
  4015f8:	(bad)  
  4015f9:	mov    ecx,0x910fb273
  4015fe:	fs mov cl,0xac
  401601:	mov    edi,0x9231a05c
  401606:	sub    eax,0x5d8e1aa9
  40160b:	aaa    
  40160c:	test   al,0x25
  40160e:	sub    BYTE PTR [eax],bl
  401610:	test   al,0xc2
  401612:	jecxz  0x4015d5
  401614:	pop    ebx
  401615:	mov    ecx,0x4f1a4a7c
  40161a:	aam    0x83
  40161c:	aaa    
  40161d:	cmp    DWORD PTR [ecx],esp
  40161f:	cmp    eax,0x5091f971
  401624:	retf   0x7e54
  401627:	int3   
  401628:	push   ss
  401629:	push   edi
  40162a:	call   0x12d:0xf35c8b3
  401631:	ins    BYTE PTR es:[edi],dx
  401632:	adc    esp,DWORD PTR [edi+0x0]
  401635:	xchg   ebx,eax
  401636:	stos   BYTE PTR es:[edi],al
  401637:	out    dx,al
  401638:	xchg   ecx,eax
  401639:	sbb    cl,BYTE PTR [ecx-0x7d]
  40163c:	ins    DWORD PTR es:[edi],dx
  40163d:	mov    bl,0x15
  40163f:	push   esp
  401640:	xchg   esi,eax
  401641:	jl     0x40165d
  401643:	outs   dx,BYTE PTR ds:[esi]
  401644:	fs nop
  401646:	push   ecx
  401647:	jb     0x4015ef
  401649:	adc    bl,bh
  40164b:	data16 into 
  40164d:	fxch   st(7)
  40164f:	inc    edx
  401650:	push   es
  401651:	daa    
  401652:	jg     0x4016af
  401654:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401656:	test   DWORD PTR [esi],edx
  401658:	out    dx,eax
  401659:	(bad)  
  40165b:	push   0x3d
  40165d:	call   0x60a37ab1
  401662:	aaa    
  401663:	adc    eax,0x93a7696b
  401668:	cmp    DWORD PTR [eax+0x672f7c93],0x51
  40166f:	jb     0x4016d4
  401671:	shr    DWORD PTR [ebx+ecx*8+0x20],0x59
  401676:	test   BYTE PTR gs:[esi-0x19],dl
  40167a:	push   esp
  40167b:	jns    0x4016b8
  40167d:	jno    0x401637
  40167f:	xchg   DWORD PTR [ebx-0x6086ae3f],edx
  401685:	aaa    
  401686:	sbb    edx,DWORD PTR [eax-0x229471e2]
  40168c:	sbb    DWORD PTR [ecx-0x1c],0xd8c04c47
  401693:	int3   
  401694:	dec    ebx
  401695:	das    
  401696:	xchg   edx,eax
  401697:	mov    bh,0x3a
  401699:	jns    0x401688
  40169b:	jbe    0x4016a7
  40169d:	pusha  
  40169e:	jne    0x40170c
  4016a0:	sbb    ch,BYTE PTR [ecx]
  4016a2:	sbb    eax,0x74a91dc
  4016a7:	loope  0x401672
  4016a9:	xchg   edx,eax
  4016aa:	pop    ebx
  4016ab:	clc    
  4016ac:	mov    cl,BYTE PTR [ecx]
  4016ae:	dec    edx
  4016af:	add    eax,edi
  4016b1:	xor    DWORD PTR ds:0x42a86d,0x53dc
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7d9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a789,0x42a77d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a78d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz mov ebx,0x7c7d6943
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x401706
  401701:	in     al,dx
  401702:	popa   
  401703:	push   ss
  401704:	test   DWORD PTR [esi-0x62],esi
  401707:	adc    ah,BYTE PTR [eax-0x71dc8d6b]
  40170d:	out    dx,al
  40170e:	and    edx,DWORD PTR [edx+eax*2+0x570e51f3]
  401715:	sar    ebx,cl
  401717:	cld    
  401718:	sti    
  401719:	js     0x4016be
  40171b:	leave  
  40171c:	mov    edi,0x7717852c
  401721:	jecxz  0x401772
  401723:	and    al,0xde
  401725:	jmp    0x401792
  401727:	mov    ebp,0x98ff179c
  40172c:	push   ss
  40172d:	mov    al,ds:0xa39dfe6f
  401732:	dec    esi
  401733:	scas   eax,DWORD PTR es:[edi]
  401734:	bound  ebp,QWORD PTR [edi]
  401736:	test   eax,0x56f7d447
  40173b:	int    0x83
  40173d:	sbb    esp,eax
  40173f:	inc    eax
  401740:	lahf   
  401741:	cs leave 
  401743:	retf   0x7135
  401746:	sbb    ecx,ebp
  401748:	push   eax
  401749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40174a:	stos   BYTE PTR es:[edi],al
  40174b:	aaa    
  40174c:	push   edi
  40174d:	add    ch,al
  40174f:	mov    eax,0xaf41c444
  401754:	aad    0x95
  401756:	add    DWORD PTR [edi-0x7b],0xffffff85
  40175a:	inc    esp
  40175b:	mov    dh,0x4b
  40175d:	cmp    esi,ecx
  40175f:	iret   
  401760:	out    dx,eax
  401761:	fst    DWORD PTR [eax+0x42f825f7]
  401767:	mov    bl,0x76
  401769:	add    eax,edi
  40176b:	add    ebp,DWORD PTR [ebx+eiz*4-0x584342cf]
  401772:	xchg   BYTE PTR [ebx-0x27db8971],ch
  401778:	fistp  WORD PTR [edx]
  40177a:	mov    ds:0xf6d393b0,al
  40177f:	ja     0x401728
  401781:	pop    ds
  401782:	inc    eax
  401783:	mov    dh,0x1b
  401785:	inc    edx
  401786:	sub    cl,cl
  401788:	fadd   QWORD PTR [edi+0x60595381]
  40178e:	outs   dx,BYTE PTR ds:[esi]
  40178f:	fadd   st(2),st
  401791:	mov    al,ds:0x4abd877
  401796:	ds cs xor eax,0x32cff6dd
  40179d:	nop
  40179e:	fsubr  DWORD PTR ds:0x80d4f40e
  4017a4:	dec    esp
  4017a5:	pop    es
  4017a6:	in     al,0x19
  4017a8:	or     al,0x81
  4017aa:	int3   
  4017ab:	in     al,dx
  4017ac:	or     dh,BYTE PTR [edx-0x39859ee]
  4017b2:	mov    ecx,0x531bf1d4
  4017b7:	and    eax,0x711d68e6
  4017bc:	jne    0x401802
  4017be:	pop    eax
  4017bf:	pop    ecx
  4017c0:	cmp    eax,0xf010aacf
  4017c5:	ss aas 
  4017c7:	clc    
  4017c8:	dec    edx
  4017c9:	fidivr WORD PTR [edi]
  4017cb:	jns    0x401848
  4017cd:	inc    ebp
  4017ce:	inc    si
  4017d0:	(bad)
  4017d4:	das    
  4017d5:	add    eax,ebp
  4017d7:	xchg   edi,eax
  4017d8:	or     dh,dl
  4017da:	or     al,0xd1
  4017dc:	xchg   ebp,eax
  4017dd:	and    esp,DWORD PTR [edx]
  4017df:	pop    ebx
  4017e0:	push   ds
  4017e1:	ficomp DWORD PTR [ecx+0xf]
  4017e4:	sbb    DWORD PTR [edx+0x2c],esi
  4017e7:	lods   eax,DWORD PTR ds:[esi]
  4017e8:	inc    edx
  4017e9:	dec    edi
  4017ea:	out    0xd3,al
  4017ec:	or     al,dl
  4017ee:	aas    
  4017ef:	std    
  4017f0:	bound  ecx,QWORD PTR [eax]
  4017f2:	mov    cs,esp
  4017f4:	outs   dx,BYTE PTR ds:[esi]
  4017f5:	jecxz  0x40177b
  4017f7:	std    
  4017f8:	cmp    eax,DWORD PTR [esi+0x4d]
  4017fb:	sub    BYTE PTR [edi],al
  4017fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017fe:	inc    edi
  4017ff:	cmp    ecx,DWORD PTR [ebp-0x6f]
  401802:	jbe    0x401873
  401804:	out    0x60,eax
  401806:	dec    edi
  401807:	lds    ecx,FWORD PTR [esi+0x541149f1]
  40180d:	sar    DWORD PTR ds:0xc06dbba,1
  401813:	mov    dl,0x95
  401815:	sbb    eax,0xb467690b
  40181a:	jle    0x401848
  40181c:	pushf  
  40181d:	xor    edx,eax
  40181f:	popf   
  401820:	push   0x24
  401822:	jecxz  0x4017f2
  401824:	mov    ebp,0x6a53bd3a
  401829:	add    esi,ebp
  40182b:	inc    esp
  40182c:	scas   eax,DWORD PTR es:[edi]
  40182d:	mov    ds:0x6839608d,eax
  401832:	jmp    0x40188b
  401834:	out    0x59,eax
  401836:	jb     0x401868
  401838:	loope  0x4017d8
  40183a:	xchg   BYTE PTR [esi],ah
  40183c:	mov    ebx,0x82e98eb6
  401841:	aam    0xc5
  401843:	in     al,dx
  401844:	xor    BYTE PTR [ecx-0x4f],cl
  401847:	and    eax,0xd0f27ef1
  40184c:	sbb    DWORD PTR [esi-0x61],esi
  40184f:	inc    ebp
  401850:	imul   edx,edi,0xffffffc3
  401853:	sbb    edx,ebx
  401855:	pop    edx
  401856:	or     ecx,DWORD PTR [eax+0x7f]
  401859:	add    eax,0xb3d1f069
  40185e:	lods   eax,DWORD PTR ds:[esi]
  40185f:	fsub   QWORD PTR [eax]
  401861:	jo     0x401890
  401863:	push   DWORD PTR [edx+0x56313eac]
  401869:	in     eax,dx
  40186a:	sti    
  40186b:	pop    ss
  40186c:	(bad)  
  40186d:	rol    BYTE PTR [edi-0x7679a845],0xd8
  401874:	dec    ecx
  401875:	out    dx,al
  401876:	loopne 0x4018af
  401878:	fs stos DWORD PTR es:[edi],eax
  40187a:	pusha  
  40187b:	xchg   esp,eax
  40187c:	sbb    eax,0x42f5545
  401881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401882:	jb     0x401846
  401884:	aad    0xce
  401886:	sahf   
  401887:	mov    ebp,0x20a75e87
  40188c:	cmp    al,0x8c
  40188e:	int3   
  40188f:	xchg   edx,eax
  401890:	sti    
  401891:	xchg   ebx,eax
  401892:	mov    eax,ds:0xaec1f6d0
  401897:	xor    eax,0xc793627a
  40189c:	cmp    BYTE PTR [ebx-0x1b4f0322],bh
  4018a2:	(bad)  
  4018a3:	adc    dl,BYTE PTR [edx+0xc]
  4018a6:	(bad)  [bx-0x53]
  4018aa:	add    DWORD PTR [eax+ebp*1],eax
  4018ad:	pop    ecx
  4018ae:	mov    ebx,eax
  4018b0:	retf   0xc1ac
  4018b3:	jno    0x4018ef
  4018b5:	sbb    BYTE PTR [ecx+0x4237d06e],ah
  4018bb:	loop   0x40191b
  4018bd:	xor    esp,edi
  4018bf:	pop    ebx
  4018c0:	or     BYTE PTR [eax-0x65197740],ah
  4018c6:	push   ds
  4018c7:	icebp  
  4018c8:	jns    0x4018e7
  4018ca:	cs pop ds
  4018cc:	int    0x9f
  4018ce:	(bad)  
  4018cf:	out    dx,eax
  4018d0:	pushf  
  4018d1:	xchg   ecx,eax
  4018d2:	lods   eax,DWORD PTR ds:[esi]
  4018d3:	xchg   esi,eax
  4018d4:	pop    ds
  4018d5:	lock jae 0x40188a
  4018d8:	test   al,0x68
  4018da:	push   ebp
  4018db:	inc    esi
  4018dc:	push   eax
  4018dd:	sub    ah,bh
  4018df:	inc    ebx
  4018e0:	lea    ebx,[edx-0x4d]
  4018e3:	ins    DWORD PTR es:[edi],dx
  4018e4:	xchg   bp,ax
  4018e6:	sbb    eax,0x994df605
  4018eb:	xchg   edi,eax
  4018ec:	push   cs
  4018ed:	push   ss
  4018ee:	imul   edi,DWORD PTR [edi-0x336bb714],0x4a
  4018f5:	gs aad 0xec
  4018f8:	sbb    BYTE PTR [edx+0x4c],bh
  4018fb:	rcl    BYTE PTR [edi+0x17212d78],0x9
  401902:	out    dx,al
  401903:	lahf   
  401904:	inc    edx
  401905:	pop    ss
  401906:	mov    edx,0x6e354cf1
  40190b:	pop    ebx
  40190c:	iret   
  40190d:	inc    edx
  40190e:	xchg   esi,eax
  40190f:	aas    
  401910:	repz add BYTE PTR [edx+eiz*4+0x1d],ah
  401915:	fcom   QWORD PTR [edi+0x76]
  401918:	cwde   
  401919:	cmc    
  40191a:	not    BYTE PTR [eax+eax*2+0x76]
  40191e:	add    BYTE PTR [ecx-0x51],dl
  401921:	dec    esi
  401922:	stos   BYTE PTR es:[edi],al
  401923:	sbb    DWORD PTR [eax+0x78a5b304],0x1c474115
  40192d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40192e:	loopne 0x4018c3
  401930:	mov    ah,0x77
  401932:	jg     0x401987
  401934:	mov    eax,0x3bf7e13d
  401939:	or     DWORD PTR [ecx+0xa],eax
  40193c:	sti    
  40193d:	and    eax,0xe0342dbe
  401942:	mov    edi,0xcbf67205
  401947:	pusha  
  401948:	inc    esp
  401949:	and    dh,BYTE PTR [ebp-0x7e300828]
  40194f:	rcr    DWORD PTR [esp+eiz*4],0x85
  401953:	add    bl,BYTE PTR [ecx-0x4ca39931]
  401959:	dec    eax
  40195a:	out    dx,eax
  40195b:	jbe    0x4019b9
  40195d:	loopne 0x401924
  40195f:	add    ch,dh
  401961:	xor    DWORD PTR ds:0xf4c756dd,ebp
  401967:	or     DWORD PTR [ecx],ebp
  401969:	aad    0xf3
  40196b:	hlt    
  40196c:	sub    esp,DWORD PTR [ebp+0x694d6252]
  401972:	xchg   esi,eax
  401973:	and    DWORD PTR [edi],ebp
  401975:	rcr    dh,1
  401977:	retf   0x79b0
  40197a:	push   edi
  40197b:	or     al,0x4a
  40197d:	adc    BYTE PTR [ecx+0x1c],bl
  401980:	xchg   DWORD PTR [ebx+eax*1],ebx
  401983:	(bad)  
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	push   ebx
  4019a4:	aaa    
  4019a5:	test   al,0x13
  4019a7:	add    BYTE PTR [ecx],0x78
  4019aa:	js     0x4019aa
  4019ac:	jle    0x401a26
  4019ae:	js     0x40195b
  4019b0:	push   0xf32e0d8a
  4019b5:	mov    ecx,0x4525ab15
  4019ba:	xchg   edi,eax
  4019bb:	leave  
  4019bc:	aad    0xa9
  4019be:	ss mov al,0xf5
  4019c1:	fnstenv [ecx]
  4019c3:	add    edx,DWORD PTR [ecx-0x44c2ac48]
  4019c9:	mov    edx,DWORD PTR [edx-0x1d4825cf]
  4019cf:	dec    DWORD PTR es:[eax]
  4019d2:	xor    eax,0xcc8e22cf
  4019d7:	lods   eax,DWORD PTR ds:[esi]
  4019d8:	inc    esi
  4019d9:	jnp    0x4019d0
  4019db:	and    DWORD PTR [edi+0x6e],eax
  4019de:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4019e0:	cmp    al,0xda
  4019e2:	mov    edi,0x601b33bd
  4019e7:	add    eax,0xd738078b
  4019ec:	js     0x4019ed
  4019ee:	iret   
  4019ef:	fist   DWORD PTR [edi]
  4019f1:	xor    dl,dh
  4019f3:	pop    ebx
  4019f4:	add    al,0x24
  4019f6:	mov    esp,0xbece901a
  4019fb:	sub    DWORD PTR [edi+0x2daee3ac],esp
  401a01:	or     al,0x6c
  401a03:	mov    ecx,0xb75d1dfa
  401a08:	js     0x4019f1
  401a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a0b:	dec    ecx
  401a0c:	pop    es
  401a0d:	ds push ds
  401a0f:	sub    eax,esp
  401a11:	ds test al,0xd9
  401a14:	push   ecx
  401a15:	(bad)  
  401a16:	push   cs
  401a17:	jle    0x4019b5
  401a19:	push   0xa8dcf7df
  401a1e:	pop    esi
  401a1f:	test   DWORD PTR [eax],edx
  401a21:	mov    eax,0x669f494e
  401a26:	dec    eax
  401a27:	pop    ebp
  401a28:	retf   0x650a
  401a2b:	jp     0x401a53
  401a2d:	and    eax,0xc9012070
  401a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a33:	mov    WORD PTR [esi],ss
  401a35:	mov    eax,DWORD PTR ds:0xa78694a0
  401a3b:	push   0x19
  401a3d:	add    eax,0xf94732f
  401a42:	clc    
  401a43:	inc    esi
  401a44:	or     DWORD PTR [edi-0x381bc02f],ebp
  401a4a:	daa    
  401a4b:	mov    cl,0x1a
  401a4d:	jo     0x401a6c
  401a4f:	jl     0x401a57
  401a51:	push   ebp
  401a52:	xchg   DWORD PTR [edx-0x40005309],esi
  401a58:	fistp  QWORD PTR [ecx]
  401a5a:	out    dx,al
  401a5b:	xchg   esi,eax
  401a5c:	pop    eax
  401a5d:	and    al,BYTE PTR [ecx-0x1d739fc7]
  401a63:	mov    bl,0xb0
  401a65:	out    dx,eax
  401a66:	cmc    
  401a67:	pop    ecx
  401a68:	shr    DWORD PTR [esi-0x28],1
  401a6b:	jbe    0x401aa8
  401a6d:	push   0xffffffc1
  401a6f:	rep lods eax,DWORD PTR ds:[esi]
  401a71:	test   BYTE PTR [edi+0x7341517f],dh
  401a77:	daa    
  401a78:	dec    eax
  401a79:	push   ds
  401a7a:	cmp    dl,BYTE PTR [eax-0x4d408d9b]
  401a80:	jbe    0x401a80
  401a82:	sahf   
  401a83:	pop    es
  401a84:	cmp    al,0x3
  401a86:	push   ebp
  401a87:	push   esi
  401a88:	jecxz  0x401a2b
  401a8a:	fwait
  401a8b:	std    
  401a8c:	push   ebx
  401a8d:	sbb    ebx,DWORD PTR [edi+edi*8+0x7]
  401a91:	and    bh,dl
  401a93:	cmp    eax,0xea3a6af6
  401a98:	xchg   ebp,eax
  401a99:	not    BYTE PTR [ecx+edi*8]
  401a9c:	dec    ebp
  401a9d:	add    ecx,DWORD PTR [eax]
  401a9f:	cli    
  401aa0:	in     eax,0x18
  401aa2:	jns    0x401b06
  401aa4:	dec    ebx
  401aa5:	(bad)  [ebp+ebp*8+0x37]
  401aa9:	es mov eax,0xe818f952
  401aaf:	and    BYTE PTR [ebp-0x50],ah
  401ab2:	ins    DWORD PTR es:[edi],dx
  401ab3:	stos   DWORD PTR es:[edi],eax
  401ab4:	xchg   edi,eax
  401ab5:	pop    edx
  401ab6:	or     esi,DWORD PTR [edx+0x62]
  401ab9:	retf   0xa36
  401abc:	(bad)  
  401abd:	fcomp  DWORD PTR [ecx-0x54c4ba0]
  401ac3:	fucomi st,st(0)
  401ac5:	pop    edx
  401ac6:	cmp    esi,DWORD PTR [ecx-0x1b]
  401ac9:	aam    0x6b
  401acb:	rcr    ebx,0xa9
  401ace:	sbb    esp,eax
  401ad0:	int3   
  401ad1:	add    eax,0x4b09e460
  401ad6:	(bad)  
  401ad7:	popa   
  401ad8:	mov    edi,0xd8815047
  401add:	int    0xb6
  401adf:	mov    eax,0x33f71813
  401ae4:	and    ecx,DWORD PTR [ebp+0x7122f335]
  401aea:	fcomp  DWORD PTR [ebx]
  401aec:	scas   al,BYTE PTR es:[edi]
  401aed:	and    dl,BYTE PTR [edx]
  401aef:	pop    ebp
  401af0:	dec    eax
  401af1:	aas    
  401af2:	out    dx,al
  401af3:	jg     0x401a93
  401af5:	jae    0x401adf
  401af7:	hlt    
  401af8:	lods   al,BYTE PTR ds:[esi]
  401af9:	sbb    bh,BYTE PTR [ebp+0x2f]
  401afc:	mov    ds:0x7354a56f,al
  401b01:	pop    ds
  401b02:	into   
  401b03:	in     al,dx
  401b04:	jge    0x401b7c
  401b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b07:	aam    0x47
  401b09:	xor    eax,0xed29b055
  401b0e:	pop    esp
  401b0f:	inc    ebp
  401b10:	hlt    
  401b11:	xor    DWORD PTR [edx+ebp*1-0x3e11e750],edx
  401b18:	std    
  401b19:	test   BYTE PTR [esi+0x32],0x41
  401b1d:	or     DWORD PTR [ecx-0x5b197198],edi
  401b23:	add    DWORD PTR [ebp-0x33],0x28
  401b27:	sub    eax,0x72981c24
  401b2c:	imul   edi,ebp,0x3a
  401b2f:	sub    cl,BYTE PTR [ebx]
  401b31:	pusha  
  401b32:	shl    BYTE PTR [ecx+0x2fe98386],cl
  401b38:	imul   edi,DWORD PTR [edi],0xdc919284
  401b3e:	jbe    0x401aca
  401b40:	mov    ds:0x422597d8,al
  401b45:	lds    ebp,FWORD PTR [ebp-0x3a]
  401b48:	cmp    DWORD PTR [ecx-0x75],ebx
  401b4b:	mov    ds:0x43beeb8f,al
  401b50:	jo     0x401b04
  401b52:	push   eax
  401b53:	mov    dl,0xb0
  401b55:	mov    eax,ds:0xad596cdd
  401b5a:	out    dx,eax
  401b5b:	jne    0x401bb8
  401b5d:	gs push eax
  401b5f:	cli    
  401b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b61:	int3   
  401b62:	xlat   BYTE PTR ds:[ebx]
  401b63:	dec    ecx
  401b64:	aad    0xa9
  401b66:	ds cmc 
  401b68:	inc    ebx
  401b69:	ins    BYTE PTR es:[edi],dx
  401b6a:	push   ds
  401b6b:	ds xchg ebx,eax
  401b6d:	push   ds
  401b6e:	sbb    dl,cl
  401b70:	mov    dh,0xcb
  401b72:	or     al,0xb6
  401b74:	bound  ebx,QWORD PTR [esi+0x3bb3b1a0]
  401b7a:	jecxz  0x401b8f
  401b7c:	pop    ds
  401b7d:	outs   dx,BYTE PTR ds:[esi]
  401b7e:	and    eax,0x64a8885b
  401b83:	arpl   bp,dx
  401b85:	xor    ebp,DWORD PTR ds:0x63065fdc
  401b8b:	test   DWORD PTR [ebp-0x31],eax
  401b8e:	push   ds
  401b8f:	hlt    
  401b90:	int3   
  401b91:	cs and eax,edi
  401b94:	and    BYTE PTR [ebx],al
  401b96:	in     al,dx
  401b97:	dec    eax
  401b98:	xchg   BYTE PTR ds:[ebx],dh
  401b9b:	jmp    0xd71e:0x35b469bf
  401ba2:	adc    BYTE PTR [edi-0x39],ch
  401ba5:	mov    eax,0x1cf139a
  401baa:	mov    BYTE PTR [edx],ch
  401bac:	mov    ebp,0xef437024
  401bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb2:	jnp    0x1fd85f0f
  401bb8:	dec    ebx
  401bb9:	and    eax,DWORD PTR [esi]
  401bbb:	test   al,0x42
  401bbd:	push   ebx
  401bbe:	and    ch,al
  401bc0:	stc    
  401bc1:	retf   
  401bc2:	mov    ebp,0x6786cd8f
  401bc7:	les    ecx,FWORD PTR [ebp+0x2b]
  401bca:	(bad)  
  401bcb:	dec    ebp
  401bcc:	add    ebp,ecx
  401bce:	mov    al,al
  401bd0:	(bad)  
  401bd1:	mov    esi,0x7de6cc5
  401bd6:	jae    0x401c51
  401bd8:	pop    ebp
  401bd9:	xchg   ebx,eax
  401bda:	out    0xf2,eax
  401bdc:	and    ebp,DWORD PTR [ebp+ebp*1+0x53]
  401be0:	cmp    ebp,ebp
  401be2:	loopne 0x401c48
  401be4:	call   0x26d9:0x469f675c
  401beb:	push   0xa
  401bed:	xchg   edx,eax
  401bee:	aaa    
  401bef:	jns    0x401bf2
  401bf1:	inc    ebx
  401bf2:	xor    eax,0xf4bd685b
  401bf7:	adc    DWORD PTR [ecx-0x2f],eax
  401bfa:	int3   
  401bfb:	pop    ebx
  401bfc:	popf   
  401bfd:	mov    eax,ds:0xdead09bf
  401c02:	sbb    al,bh
  401c04:	fstp   st(7)
  401c06:	and    eax,0x8b89ed18
  401c0b:	mov    ds:0xa848498b,al
  401c10:	in     eax,0xda
  401c12:	xchg   WORD PTR ss:[eax],bp
  401c16:	int    0x99
  401c18:	cmp    bl,dl
  401c1a:	rol    DWORD PTR [ebp+0x6872a034],cl
  401c20:	cwde   
  401c21:	(bad)  
  401c22:	fdiv   DWORD PTR [eax+eax*8+0x62]
  401c26:	in     eax,dx
  401c27:	xor    al,0xea
  401c29:	clc    
  401c2a:	jl     0x401c48
  401c2c:	mov    dl,0xf5
  401c2e:	and    al,0x7e
  401c30:	push   edi
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a85d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a85d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a85d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a85d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a85d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa4e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a85d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a85d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a85d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a781,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a795
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a789
  401cbe:	and    eax,DWORD PTR ds:0x42a7d9
  401cc4:	mov    ds:0x42a789,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a819,0x42a821
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a79d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x45ba
  401d05:	pop    esp
  401d06:	mov    al,ds:0x780600af
  401d0b:	js     0x401d0b
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cea
  401d11:	aam    0x4d
  401d13:	int3   
  401d14:	push   DWORD PTR [ebx+0x3a40d468]
  401d1a:	or     eax,0x99a57169
  401d1f:	ret    
  401d20:	mov    ch,BYTE PTR [ebx]
  401d22:	(bad)  
  401d23:	jae    0x401ccb
  401d25:	test   eax,0x6a1d3d9e
  401d2a:	cmp    al,0xab
  401d2c:	js     0x401cd2
  401d2e:	jp     0x401cbf
  401d30:	xchg   esp,eax
  401d31:	and    eax,0x945b7400
  401d36:	xor    ebx,DWORD PTR [edi-0x4]
  401d39:	pop    esi
  401d3a:	aaa    
  401d3b:	ins    DWORD PTR es:[edi],dx
  401d3c:	pop    ecx
  401d3d:	add    ebx,ebp
  401d3f:	aaa    
  401d40:	and    ebp,edx
  401d42:	dec    ecx
  401d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d44:	popf   
  401d45:	sbb    DWORD PTR [esi+0x7fd1eaf0],0xffffff85
  401d4c:	sbb    DWORD PTR [edi],esi
  401d4e:	es pop ebp
  401d50:	xor    eax,0xcb4c395b
  401d55:	lds    ebp,FWORD PTR [ebp-0x442c9e1c]
  401d5b:	or     ecx,DWORD PTR ds:0xca9bed88
  401d61:	mov    DWORD PTR [ecx],edi
  401d63:	jnp    0x401d78
  401d65:	call   0x4212:0x141d3149
  401d6c:	das    
  401d6d:	dec    eax
  401d6e:	inc    eax
  401d6f:	inc    esp
  401d70:	inc    esi
  401d71:	fcmovne st,st(0)
  401d73:	mov    ch,0x99
  401d75:	repnz aad 0x3d
  401d78:	sbb    BYTE PTR [esi+0x2690d9ab],al
  401d7e:	sub    BYTE PTR [ebx],0xa2
  401d81:	adc    edi,ebx
  401d83:	mov    ecx,0x65ae10e0
  401d88:	rcr    DWORD PTR [ebx+0x16],cl
  401d8b:	and    DWORD PTR ds:0x7b589a09,ebx
  401d91:	lods   al,BYTE PTR ds:[esi]
  401d92:	test   BYTE PTR [edi+0x76],bh
  401d95:	mov    ebx,0x2e575fa9
  401d9a:	cld    
  401d9b:	mov    ebp,0x4d59ed70
  401da0:	mov    ecx,0x744539a2
  401da5:	test   al,0xba
  401da7:	arpl   WORD PTR [esi-0xcebc02b],si
  401dad:	call   0xbb8ee6d0
  401db2:	inc    esi
  401db3:	call   0x6c4a:0xfed16c8e
  401dba:	push   cs
  401dbb:	xchg   ebx,eax
  401dbc:	(bad)  [ecx+edx*4+0x27]
  401dc0:	in     eax,0x91
  401dc2:	push   esi
  401dc3:	jmp    0x3990:0x9d9eb9d6
  401dca:	push   edx
  401dcb:	inc    edi
  401dcc:	xor    ecx,DWORD PTR [eax+0x7a39fb12]
  401dd2:	sub    dh,BYTE PTR [edx+ebx*1]
  401dd5:	test   eax,0x360d3877
  401dda:	push   es
  401ddb:	cmc    
  401ddc:	mov    eax,DWORD PTR [edx-0x79]
  401ddf:	hlt    
  401de0:	sub    DWORD PTR [edi-0x4af159ca],ebx
  401de6:	pop    ebx
  401de7:	fwait
  401de8:	loopne 0x401dab
  401dea:	fdiv   QWORD PTR [ebp+0x498f7ad3]
  401df0:	lock xor BYTE PTR [esi+0x2e3d562c],ah
  401df7:	mov    al,0x18
  401df9:	fwait
  401dfa:	xor    DWORD PTR [ebx+0x39f56c43],0xffffffb3
  401e01:	pop    ss
  401e02:	scas   al,BYTE PTR es:[edi]
  401e03:	push   0xe72f9300
  401e08:	push   ecx
  401e09:	out    0x5b,al
  401e0b:	mov    esi,0x401ec54b
  401e10:	sahf   
  401e11:	loope  0x401da0
  401e13:	xor    eax,0xfe07a141
  401e18:	call   0x957400b0
  401e1d:	sub    eax,0x115f5a02
  401e22:	in     eax,0x30
  401e24:	pusha  
  401e25:	cwde   
  401e26:	inc    eax
  401e27:	mov    eax,ds:0xcde629c7
  401e2c:	add    eax,0x51ded94b
  401e31:	stos   BYTE PTR es:[edi],al
  401e32:	fdivr  QWORD PTR [esi]
  401e34:	popf   
  401e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e36:	mov    eax,ds:0x5c28a04c
  401e3b:	xchg   ecx,eax
  401e3c:	push   cs
  401e3d:	arpl   sp,ax
  401e3f:	or     bl,BYTE PTR [eax-0x2f]
  401e42:	sbb    DWORD PTR [esi+0x26],edi
  401e45:	stos   BYTE PTR es:[edi],al
  401e46:	loopne 0x401e98
  401e48:	jmp    0x9da9b537
  401e4d:	cmc    
  401e4e:	dec    esp
  401e4f:	outs   dx,BYTE PTR ds:[esi]
  401e50:	mov    ds:0xa8823f72,al
  401e55:	enter  0xf221,0x3f
  401e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e5a:	out    0x3d,eax
  401e5c:	test   eax,0xa8f2bcf8
  401e61:	cmp    DWORD PTR [ebx+0x60d6fa3b],edi
  401e67:	xor    eax,0xa4276f0e
  401e6c:	out    dx,eax
  401e6d:	(bad)  
  401e6e:	ss cwde 
  401e70:	xchg   ebp,eax
  401e71:	imul   ebp,edx,0x6516e356
  401e77:	push   0x6e
  401e79:	xor    eax,ebx
  401e7b:	mov    dl,0xbb
  401e7d:	mov    ebx,0x6c5d6f5f
  401e82:	test   eax,0x565195d0
  401e87:	push   ss
  401e88:	cmp    al,0x66
  401e8a:	cmp    DWORD PTR [edi+0x25ae4dfd],ecx
  401e90:	mov    ebp,0xbd7e1866
  401e95:	psubsw mm4,QWORD PTR [ebx+0x26fdde05]
  401e9c:	mov    esp,0x34580451
  401ea1:	push   esi
  401ea2:	sbb    BYTE PTR ds:0x9cafd7ad,cl
  401ea8:	jae    0x401f06
  401eaa:	adc    DWORD PTR [ecx],ecx
  401eac:	sbb    bl,al
  401eae:	mov    gs,WORD PTR [eax-0x32d4120f]
  401eb4:	enter  0x6e51,0xfc
  401eb8:	fimul  DWORD PTR [edx]
  401eba:	dec    eax
  401ebb:	cs xchg edx,eax
  401ebd:	outs   dx,DWORD PTR ds:[esi]
  401ebe:	xor    eax,DWORD PTR [ebx+0x7ac82f03]
  401ec4:	pop    ecx
  401ec5:	sbb    al,0xdf
  401ec7:	sbb    BYTE PTR [edi],ah
  401ec9:	pop    ds
  401eca:	push   ebx
  401ecb:	gs cdq 
  401ecd:	mov    BYTE PTR [ebx+0x5c],dh
  401ed0:	js     0x401e69
  401ed2:	jns    0x401eff
  401ed4:	rcr    BYTE PTR [eax+0x9df2753],cl
  401eda:	cmc    
  401edb:	test   al,0xa8
  401edd:	adc    BYTE PTR [eax-0x18353fcd],al
  401ee3:	push   esp
  401ee4:	dec    edx
  401ee5:	in     eax,dx
  401ee6:	inc    eax
  401ee7:	pop    eax
  401ee8:	cmp    al,0xf6
  401eea:	xor    eax,esi
  401eec:	sub    DWORD PTR [ebx],ebx
  401eee:	outs   dx,BYTE PTR ds:[esi]
  401eef:	sub    al,0xe0
  401ef1:	mov    ebx,0x979a9f71
  401ef6:	cs mov bl,0x6
  401ef9:	mov    bl,0x81
  401efb:	jmp    0x401ee9
  401efd:	aad    0x6e
  401eff:	mov    dh,0xc0
  401f01:	mov    esi,DWORD PTR [ebx+0x2b3b08a7]
  401f07:	xchg   ebp,eax
  401f08:	into   
  401f09:	pop    ebx
  401f0a:	add    ch,BYTE PTR [ebp-0x5ba1af7e]
  401f10:	pop    ebp
  401f11:	in     eax,dx
  401f12:	add    dl,0xea
  401f15:	or     BYTE PTR [edx+edx*8+0x3f4fd432],ah
  401f1c:	shl    dl,1
  401f1e:	(bad)  
  401f1f:	fwait
  401f20:	lahf   
  401f21:	fidiv  WORD PTR [ebp+0x4c]
  401f24:	outs   dx,BYTE PTR ds:[esi]
  401f25:	add    dl,ah
  401f27:	cmp    al,0x6b
  401f29:	pop    ecx
  401f2a:	ror    edi,0x78
  401f2d:	fst    QWORD PTR [eax]
  401f2f:	stc    
  401f30:	dec    esp
  401f31:	xchg   DWORD PTR [eax],ebx
  401f33:	or     al,0x51
  401f35:	out    dx,al
  401f36:	sbb    DWORD PTR [eax],ebp
  401f38:	pop    ebx
  401f39:	fsub   st,st(2)
  401f3b:	imul   esi,DWORD PTR [eax+ebx*8],0xe8f9f11c
  401f42:	test   DWORD PTR [edx+ebx*4],edi
  401f45:	dec    ecx
  401f46:	xor    ah,BYTE PTR ds:0x7abc0d7e
  401f4c:	dec    ecx
  401f4d:	mov    al,0xda
  401f4f:	pop    esp
  401f50:	xchg   edi,eax
  401f51:	jne    0x401eeb
  401f53:	mov    edx,0x82900e56
  401f58:	mov    ds:0x5d2b07cd,al
  401f5d:	sbb    eax,0xcd648c79
  401f62:	outs   dx,DWORD PTR ds:[esi]
  401f63:	add    DWORD PTR [edx+0x57],ebx
  401f66:	in     eax,0x65
  401f68:	pop    eax
  401f69:	sub    BYTE PTR [esi-0x7e54ce23],ch
  401f6f:	in     al,0x59
  401f71:	sbb    dl,BYTE PTR [edi]
  401f73:	xchg   esi,eax
  401f74:	xor    ch,BYTE PTR [eax-0x523890b4]
  401f7a:	adc    al,0x73
  401f7c:	std    
  401f7d:	lock add BYTE PTR [eax-0x37],al
  401f81:	retf   
  401f82:	fsubrp st(2),st
  401f84:	(bad)  
  401f85:	fldcw  WORD PTR [esi+0x3d]
  401f88:	jo     0x401f48
  401f8a:	cs jnp 0x401f17
  401f8d:	push   es
  401f8e:	sbb    DWORD PTR [ecx],ecx
  401f90:	addr16 mov ebx,0xc0330803
  401f96:	add    eax,DWORD PTR ds:0x42a859
  401f9c:	and    eax,DWORD PTR ds:0x42a8a9
  401fa2:	mov    ds:0x42a859,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a811,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a779,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a779
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a779,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a779,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a779,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edx+eiz*8-0x4d],ebp
  40201a:	jo     0x401fa2
  40201c:	add    al,0x78
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x401fdb
  402024:	and    eax,0x92b150e1
  402029:	mov    dh,0x1d
  40202b:	add    dh,dh
  40202d:	mov    ah,BYTE PTR [eax-0x1f]
  402030:	add    al,0xdf
  402032:	fnstenv [eax]
  402034:	hlt    
  402035:	cli    
  402036:	outs   dx,BYTE PTR ds:[esi]
  402037:	cmp    edx,edi
  402039:	aas    
  40203a:	les    esi,FWORD PTR [esp+ebx*1+0x7e]
  40203e:	enter  0xfd14,0x16
  402042:	test   BYTE PTR [esi-0x62],ch
  402045:	adc    eax,0x6a114a38
  40204a:	sbb    eax,0x2a4a4ab6
  40204f:	xlat   BYTE PTR ds:[ebx]
  402050:	cmp    DWORD PTR [esi+0x22],ecx
  402053:	mov    ds:0xfa55dc8,al
  402058:	xor    eax,0x34651a16
  40205d:	cmp    al,0x67
  40205f:	lods   ax,WORD PTR ds:[esi]
  402061:	xchg   ebp,eax
  402062:	or     eax,0xcd6f835c
  402067:	sub    eax,0x662aea52
  40206c:	jbe    0x402058
  40206e:	(bad)
  402071:	js     0x4020c0
  402073:	push   ebp
  402074:	mov    edi,0xf77bf455
  402079:	scas   al,BYTE PTR es:[edi]
  40207a:	ja     0x4020de
  40207c:	push   edx
  40207d:	retf   
  40207e:	jbe    0x40203b
  402080:	hlt    
  402081:	xchg   ebp,eax
  402082:	scas   al,BYTE PTR es:[edi]
  402083:	add    edi,ebp
  402085:	push   ss
  402086:	push   es
  402087:	add    al,0x68
  402089:	nop
  40208a:	mov    ch,cl
  40208c:	add    al,0x9d
  40208e:	xlat   BYTE PTR ds:[ebx]
  40208f:	ss dec ebx
  402091:	fld    TBYTE PTR [esi+0x751e0d25]
  402097:	mov    edi,?
  402099:	fisub  WORD PTR [ebp-0x5d649f47]
  40209f:	ror    BYTE PTR [edx-0x5068b5c6],cl
  4020a5:	icebp  
  4020a6:	shr    BYTE PTR [ecx+0x118b40d7],1
  4020ac:	cli    
  4020ad:	add    ecx,DWORD PTR [edx+ebx*8+0x54e825dd]
  4020b4:	in     al,dx
  4020b5:	mul    DWORD PTR [eax+eiz*1-0x4f6d9bb1]
  4020bc:	xor    al,0xb5
  4020be:	sub    al,BYTE PTR [esi-0x5c]
  4020c1:	bound  edi,QWORD PTR [esi-0x5]
  4020c4:	adc    DWORD PTR [ebp+0x3c],0x8b0181bf
  4020cb:	pop    esp
  4020cc:	or     dl,ah
  4020ce:	xor    DWORD PTR ds:0xe82ed67f,ebx
  4020d4:	and    eax,0xb72f61c5
  4020d9:	rcl    DWORD PTR [esi],0x53
  4020dc:	bound  eax,QWORD PTR [ebx]
  4020de:	icebp  
  4020df:	inc    edx
  4020e0:	xchg   ecx,eax
  4020e1:	adc    BYTE PTR [edx+0x17],dl
  4020e4:	out    0x4,eax
  4020e6:	fsubr  st(2),st
  4020e8:	dec    ecx
  4020e9:	mov    eax,ds:0x73ee9d8
  4020ee:	mov    eax,0xb7de4cf6
  4020f3:	xchg   edx,eax
  4020f4:	sti    
  4020f5:	dec    edi
  4020f6:	adc    edx,DWORD PTR [edi+0x7c]
  4020f9:	nop
  4020fa:	mov    BYTE PTR [ebx+0x7011ae7e],al
  402100:	jmp    0xf489:0xdf793010
  402107:	xchg   esi,eax
  402108:	pop    edx
  402109:	fst    DWORD PTR [ebx+ecx*8]
  40210c:	pop    ds
  40210d:	sub    esp,edi
  40210f:	push   ebp
  402110:	pop    esp
  402111:	adc    DWORD PTR [edx-0x4c2ea7f0],ebx
  402117:	lods   al,BYTE PTR ds:[esi]
  402118:	cli    
  402119:	outs   dx,BYTE PTR ds:[esi]
  40211a:	shl    BYTE PTR [ebp+0xdffd11],1
  402120:	hlt    
  402121:	inc    edi
  402122:	ret    
  402123:	pop    esi
  402124:	or     ch,ah
  402126:	mov    eax,ds:0x79362deb
  40212b:	or     eax,0xba459829
  402130:	pop    edx
  402131:	lods   eax,DWORD PTR ds:[esi]
  402132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402133:	sbb    bh,BYTE PTR [ecx+0x31]
  402136:	out    0x2b,eax
  402138:	dec    esp
  402139:	enter  0x6963,0x2f
  40213d:	or     edx,DWORD PTR [edx+0x7d]
  402140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402141:	cmp    eax,0xdd5ec527
  402146:	inc    edi
  402147:	mov    edi,0x484d4e07
  40214c:	nop
  40214d:	mov    esp,esp
  40214f:	jecxz  0x402155
  402151:	or     al,BYTE PTR ds:0xb94cf456
  402157:	xchg   BYTE PTR [edi-0x54],cl
  40215a:	sahf   
  40215b:	adc    DWORD PTR [ebp+0x48526321],0x316a1f
  402165:	test   dl,dh
  402167:	cmp    BYTE PTR [ecx+esi*1],cl
  40216a:	mov    ebp,0x8c5777d4
  40216f:	sti    
  402170:	pop    edi
  402171:	add    dh,dh
  402173:	repz pushf 
  402175:	sub    eax,0x55bbfa94
  40217a:	and    al,0x70
  40217c:	mov    ecx,0xfba8b001
  402181:	lods   al,BYTE PTR ds:[esi]
  402182:	sub    DWORD PTR ds:0xda488dd7,ebp
  402188:	mov    dl,0x3
  40218a:	outs   dx,DWORD PTR ds:[esi]
  40218b:	popa   
  40218c:	ret    
  40218d:	sub    eax,esi
  40218f:	fucom  st(3)
  402191:	imul   ebp
  402193:	lahf   
  402194:	add    eax,0x7be081d8
  402199:	pop    esi
  40219a:	popf   
  40219b:	push   ax
  40219d:	gs enter 0xeea0,0x97
  4021a2:	and    bl,BYTE PTR [ecx+0x4b766a2c]
  4021a8:	rcl    BYTE PTR [ebx-0x2a],1
  4021ab:	push   es
  4021ac:	in     al,dx
  4021ad:	dec    esi
  4021ae:	xor    cl,cl
  4021b0:	xlat   BYTE PTR ds:[ebx]
  4021b1:	xchg   bl,al
  4021b3:	out    0x46,eax
  4021b5:	xchg   edx,eax
  4021b6:	jp     0x402170
  4021b8:	xchg   esi,eax
  4021b9:	(bad)  
  4021ba:	out    0x84,eax
  4021bc:	push   esp
  4021bd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021bf:	out    dx,al
  4021c0:	mov    dh,0xfb
  4021c2:	stos   DWORD PTR es:[edi],eax
  4021c3:	xchg   edx,eax
  4021c4:	mov    ch,0x1d
  4021c6:	sti    
  4021c7:	call   0xecb52729
  4021cc:	int    0xb9
  4021ce:	xchg   BYTE PTR [esi],dh
  4021d0:	inc    ebp
  4021d1:	push   edi
  4021d2:	push   ss
  4021d3:	dec    ebx
  4021d4:	mov    WORD PTR [ebx-0x51],ss
  4021d7:	shl    bh,0x4d
  4021da:	mov    dh,0xe6
  4021dc:	lds    eax,FWORD PTR [edx]
  4021de:	or     BYTE PTR [ebp-0x1967d40e],bh
  4021e4:	lds    edi,FWORD PTR [eax+0x5a]
  4021e7:	ss sub esp,ebx
  4021ea:	xor    eax,0x61f27f50
  4021ef:	push   ss
  4021f0:	push   ecx
  4021f1:	inc    edx
  4021f2:	jnp    0x4021c7
  4021f4:	mov    al,ds:0x998fd7b1
  4021f9:	daa    
  4021fa:	push   0x7a
  4021fc:	and    BYTE PTR [esi-0x48],dh
  4021ff:	jne    0x4021fa
  402201:	dec    esp
  402202:	dec    edi
  402203:	fidiv  DWORD PTR [edi-0x5f73aa44]
  402209:	sbb    al,0x48
  40220b:	push   0xffffffd4
  40220d:	loop   0x40223e
  40220f:	in     eax,0x7a
  402211:	push   eax
  402212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402213:	test   al,0x2f
  402215:	ret    0x4a7c
  402218:	inc    esi
  402219:	jl     0x40224f
  40221b:	icebp  
  40221c:	xor    al,0xc4
  40221e:	jno    0x4021b9
  402220:	push   ebp
  402221:	mov    edi,0xc92f465f
  402226:	pop    esi
  402227:	aaa    
  402228:	mov    ds:0x77bc9173,al
  40222d:	dec    esp
  40222e:	jmp    0xf0b4:0xe9c63454
  402235:	and    eax,0x7c73ce44
  40223a:	push   ds
  40223b:	sbb    al,0xdc
  40223d:	loopne 0x402229
  40223f:	push   es
  402240:	mov    esi,0xc722daa0
  402245:	mov    dl,0x47
  402247:	mov    esp,0x2581f17e
  40224c:	sbb    al,0x40
  40224e:	xor    dh,BYTE PTR ds:0x5fbf1b99
  402254:	dec    esp
  402255:	and    edi,DWORD PTR gs:[eax-0x48]
  402259:	fild   DWORD PTR [esi-0x67e07222]
  40225f:	mov    al,ds:0xc8367c5d
  402264:	dec    esp
  402265:	popf   
  402266:	ror    edi,0x6e
  402269:	mov    dh,dh
  40226b:	shr    DWORD PTR ds:0xeddc27b7,1
  402271:	stos   DWORD PTR es:[edi],eax
  402272:	inc    ebp
  402273:	es into 
  402275:	dec    cx
  402277:	ds icebp 
  402279:	sub    BYTE PTR ds:0xf4566277,cl
  40227f:	imul   ecx,DWORD PTR [esi-0x235c6909],0xb3bfbfb5
  402289:	clc    
  40228a:	ins    DWORD PTR es:[edi],dx
  40228b:	mov    edx,0x5c6945cf
  402290:	sbb    ah,ah
  402292:	and    eax,0xd57e4b0a
  402297:	and    eax,0xcd8af891
  40229c:	cmc    
  40229d:	les    ebx,FWORD PTR [ecx+0x649bd14d]
  4022a3:	mov    esp,cs
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a791,0x42a7d5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a855,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xea682c5b
  4022e1:	inc    ebp
  4022e2:	mov    gs,WORD PTR [ecx+0x78780904]
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402310
  4022ed:	xchg   esi,eax
  4022ee:	rcr    BYTE PTR [edi-0xb84ebbe],cl
  4022f4:	dec    ecx
  4022f5:	ret    0xbd19
  4022f8:	ret    0xaa0b
  4022fb:	jbe    0x4022a8
  4022fd:	sti    
  4022fe:	pop    eax
  4022ff:	test   BYTE PTR [edi-0x3d],cl
  402302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402303:	dec    ebx
  402304:	scas   al,BYTE PTR es:[edi]
  402305:	sub    BYTE PTR [edx-0x46],bh
  402308:	mov    al,ds:0x702a740e
  40230d:	jns    0x4022ee
  40230f:	add    BYTE PTR [eax+edx*8+0x5b],al
  402313:	mov    esp,0x86d13787
  402318:	fisub  DWORD PTR ds:0xaa6379f0
  40231e:	mov    al,bl
  402320:	ret    0xb149
  402323:	xchg   BYTE PTR [ebp-0x6e],bh
  402326:	dec    esp
  402327:	ss std 
  402329:	push   esp
  40232a:	jo     0x40231e
  40232c:	mov    ds,WORD PTR [eax+eiz*2]
  40232f:	sbb    al,0xdc
  402331:	sbb    cl,BYTE PTR [eax]
  402333:	adc    DWORD PTR ds:0xe2329f9a,ecx
  402339:	mov    ecx,0xd748c4ac
  40233e:	xor    esp,DWORD PTR ds:0x1e8d0331
  402344:	adc    DWORD PTR [eax+0x3a],ecx
  402347:	sub    eax,0xfcf91b92
  40234c:	sti    
  40234d:	fnstcw WORD PTR [eax-0x5e]
  402350:	mov    gs,WORD PTR cs:[ebx+ecx*4+0x54]
  402355:	pop    edi
  402356:	mov    cl,0x8b
  402358:	mov    bl,0x6c
  40235a:	push   esi
  40235b:	xchg   edi,ebx
  40235d:	push   es
  40235e:	fs aas 
  402360:	call   0x20e7:0xc8587b72
  402367:	bound  ecx,QWORD PTR [ebx+eax*1+0x5af183d1]
  40236e:	aam    0x3d
  402370:	(bad)  
  402371:	popa   
  402372:	in     eax,0xb9
  402374:	mov    bl,BYTE PTR [ebx-0x1992908d]
  40237a:	sbb    DWORD PTR [edi],eax
  40237c:	pop    eax
  40237d:	test   DWORD PTR [edi+edi*8],ecx
  402380:	iret   
  402381:	fsubrp st(3),st
  402383:	sub    eax,0x98e097ec
  402388:	(bad)  
  402389:	mov    esp,0x4ffd3a9e
  40238e:	push   es
  40238f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402390:	and    al,0xbf
  402392:	daa    
  402393:	cs push es
  402395:	fcomp  QWORD PTR [edx+0x22]
  402398:	inc    eax
  402399:	sbb    al,0x22
  40239b:	sub    eax,0x5ad04801
  4023a0:	push   edx
  4023a1:	imul   ebp,DWORD PTR [edx+0x78d1f502],0x6
  4023a8:	je     0x402342
  4023aa:	std    
  4023ab:	dec    edi
  4023ac:	mov    edx,0x6e70bb52
  4023b1:	test   BYTE PTR [ecx],0x32
  4023b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b5:	xchg   ebx,eax
  4023b6:	add    eax,0xcb93a623
  4023bb:	stos   DWORD PTR es:[edi],eax
  4023bc:	sub    eax,0x8f1db02d
  4023c1:	popa   
  4023c2:	mov    cl,0xd9
  4023c4:	rol    BYTE PTR [ecx-0x3c74156b],cl
  4023ca:	mov    ah,BYTE PTR [eax]
  4023cc:	push   es
  4023cd:	and    DWORD PTR [ebp-0x5e],esi
  4023d0:	ss daa 
  4023d2:	ins    DWORD PTR es:[edi],dx
  4023d3:	inc    ebp
  4023d4:	rcl    BYTE PTR gs:[esi-0x1fa0cbc3],0x57
  4023dc:	xor    al,0x2c
  4023de:	aaa    
  4023df:	cmp    ah,BYTE PTR [ebx-0x23f4d3de]
  4023e5:	inc    edi
  4023e6:	jp     0x40242e
  4023e8:	sar    BYTE PTR [esi-0x48],1
  4023eb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4023ed:	push   ebx
  4023ee:	adc    edx,DWORD PTR [eax]
  4023f0:	pop    ebp
  4023f1:	retf   
  4023f2:	jne    0x4023ad
  4023f4:	xchg   edx,eax
  4023f5:	mov    edx,DWORD PTR [eax]
  4023f7:	addr16 hlt 
  4023f9:	mov    WORD PTR [ecx+edi*4],gs
  4023fc:	repnz xchg edx,eax
  4023fe:	imul   DWORD PTR [ebp-0x28]
  402401:	les    edx,FWORD PTR [edx+0x4b]
  402404:	dec    ebx
  402405:	xchg   DWORD PTR [ebx+esi*8],ebp
  402408:	sbb    eax,0x993fa716
  40240d:	retf   0x84ab
  402410:	inc    edi
  402411:	fst    st(3)
  402413:	mov    ecx,0x5067d5e9
  402418:	sub    ah,dh
  40241a:	xchg   bl,bl
  40241c:	retf   
  40241d:	cmp    ecx,esp
  40241f:	xor    esp,DWORD PTR [esi-0x41]
  402422:	pop    esp
  402423:	stos   BYTE PTR es:[edi],al
  402424:	xor    BYTE PTR [ecx+0x2dd39fb8],bh
  40242a:	inc    eax
  40242b:	gs cmc 
  40242d:	cwde   
  40242e:	cs jmp 0x402413
  402431:	adc    eax,0x5f73807b
  402436:	adc    eax,esi
  402438:	bndldx bnd1,[esi]
  40243b:	gs cmp al,0xcb
  40243e:	mov    eax,0x3936696e
  402443:	adc    ah,0x8
  402446:	popf   
  402447:	lock mov dh,BYTE PTR [ecx+0x49]
  40244b:	push   esi
  40244c:	loop   0x402447
  40244e:	cli    
  40244f:	jo     0x402453
  402451:	test   BYTE PTR [ebp+0x60fce859],al
  402457:	mov    esp,0xc45c4934
  40245c:	into   
  40245d:	loop   0x40244c
  40245f:	add    DWORD PTR [edx+esi*1+0x30],esi
  402463:	jecxz  0x4024bd
  402465:	cmp    DWORD PTR ds:0xf894120a,edx
  40246b:	(bad)  
  40246d:	or     ch,0xc3
  402470:	cmp    dl,BYTE PTR ds:0xf0b119f7
  402476:	sub    dh,bh
  402478:	jg     0x4023fb
  40247a:	and    al,0x10
  40247c:	repz xor eax,DWORD PTR [ebx+ebx*2+0x2b]
  402481:	inc    ecx
  402482:	mov    al,ds:0x42c44aea
  402487:	mov    ch,0x4e
  402489:	push   esp
  40248a:	outs   dx,BYTE PTR ds:[esi]
  40248b:	dec    esp
  40248c:	cli    
  40248d:	xchg   edi,eax
  40248e:	adc    DWORD PTR [esi+ecx*2],eax
  402491:	sahf   
  402492:	pop    ds
  402493:	cmp    eax,0x916eea6
  402498:	(bad)  
  402499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40249a:	lahf   
  40249b:	cmp    al,0xdb
  40249d:	adc    eax,0xbf5b0f11
  4024a2:	loopne 0x402523
  4024a4:	adc    eax,0xe524f938
  4024a9:	aas    
  4024aa:	sbb    ebp,DWORD PTR [ebx+0x78]
  4024ad:	ds mov esi,0x5c0aea12
  4024b3:	fist   WORD PTR [esi+0x58fe0260]
  4024b9:	xchg   esp,eax
  4024ba:	lods   al,BYTE PTR ds:[esi]
  4024bb:	scas   eax,DWORD PTR es:[edi]
  4024bc:	icebp  
  4024bd:	mov    eax,ds:0xb3af6220
  4024c2:	retf   0xfa9b
  4024c5:	dec    ecx
  4024c6:	dec    edi
  4024c7:	daa    
  4024c8:	(bad)  
  4024c9:	loopne 0x4024fc
  4024cb:	nop
  4024cc:	add    DWORD PTR [edi],ebx
  4024ce:	cld    
  4024cf:	icebp  
  4024d0:	(bad)  
  4024d1:	loopne 0x402543
  4024d3:	push   esp
  4024d4:	pop    ecx
  4024d5:	(bad)  
  4024d6:	mov    eax,0x732d18a0
  4024db:	xor    eax,DWORD PTR [ebx-0x53b22126]
  4024e1:	inc    ebp
  4024e2:	test   DWORD PTR ds:0x32075d1b,ebp
  4024e8:	mov    al,ds:0x8972c801
  4024ed:	push   esp
  4024ee:	and    DWORD PTR [ebp-0x1a24e9ac],eax
  4024f4:	pcmpgtb mm3,mm4
  4024f7:	loopne 0x4024a2
  4024f9:	sbb    eax,0x3cec6997
  4024fe:	pop    ss
  4024ff:	mov    edx,0x73560fe6
  402504:	stos   BYTE PTR es:[edi],al
  402505:	daa    
  402506:	xor    ecx,DWORD PTR [esi]
  402508:	push   es
  402509:	jnp    0x40257c
  40250b:	out    dx,eax
  40250c:	shl    DWORD PTR ds:0xdee01b40,1
  402512:	cmp    eax,0xfd0bb084
  402517:	sbb    eax,0x1c3c441a
  40251c:	call   0xd1d:0x322b8c9f
  402523:	retf   
  402524:	dec    eax
  402525:	leave  
  402526:	out    dx,al
  402527:	arpl   WORD PTR [esi-0x28],cx
  40252a:	pop    edx
  40252b:	adc    BYTE PTR [esi],0xba
  40252e:	xchg   DWORD PTR [edx-0x5f],ebx
  402531:	jns    0x402569
  402533:	das    
  402534:	jl     0x40255a
  402536:	fcmove st,st(2)
  402538:	scas   eax,DWORD PTR es:[edi]
  402539:	jnp    0x4025ad
  40253b:	jmp    0x402551
  40253d:	loopne 0x402529
  40253f:	pushf  
  402540:	(bad)  
  402541:	pop    ecx
  402542:	mov    ebp,0xf3d77c69
  402547:	xchg   DWORD PTR [eax+0x71],edi
  40254a:	sub    DWORD PTR [edx],edx
  40254c:	ja     0x4024fd
  40254e:	ja     0x40258a
  402550:	in     eax,dx
  402551:	and    ecx,edx
  402553:	sbb    edi,ebx
  402555:	jmp    0x408b:0x41239482
  40255c:	jmp    0xab9b:0x9ed5c1a1
  402563:	xor    BYTE PTR [edx],bl
  402565:	add    ch,BYTE PTR [edx]
  402567:	dec    edi
  402568:	pop    eax
  402569:	xor    eax,0x5ce56ad
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	data16 aaa 
  402595:	icebp  
  402596:	sbb    eax,0x78780f8a
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x402598
  4025a0:	adc    eax,0x25220a81
  4025a5:	push   eax
  4025a6:	dec    eax
  4025a7:	mov    ds:0xa724020,eax
  4025ac:	mov    DWORD PTR [ebx],ecx
  4025ae:	pop    ecx
  4025af:	imul   esi,DWORD PTR [edi-0x1d92b33a],0xfffffff2
  4025b6:	hlt    
  4025b7:	out    0xa5,eax
  4025b9:	mov    WORD PTR [ebx-0x50],cs
  4025bc:	pushf  
  4025bd:	dec    eax
  4025be:	pop    edx
  4025bf:	jge    0x402599
  4025c1:	(bad)  
  4025c2:	jmp    0x402587
  4025c4:	pop    esp
  4025c5:	mov    eax,ds:0xb6584461
  4025ca:	icebp  
  4025cb:	dec    eax
  4025cc:	imul   BYTE PTR ds:0xa023986
  4025d2:	iret   
  4025d3:	scas   al,BYTE PTR es:[edi]
  4025d4:	add    eax,0xa98cbebb
  4025d9:	jg     0x40261f
  4025db:	outs   dx,DWORD PTR ds:[esi]
  4025dc:	stc    
  4025dd:	retf   
  4025de:	call   0xf85351a5
  4025e3:	mov    esi,DWORD PTR [ebp-0x797c8532]
  4025e9:	cli    
  4025ea:	mov    dh,0x4e
  4025ec:	sub    ebp,DWORD PTR [esp+esi*1]
  4025ef:	jmp    0x402598
  4025f1:	or     ebx,edx
  4025f3:	or     BYTE PTR [esi+0x77],ah
  4025f6:	inc    eax
  4025f7:	pop    ds
  4025f8:	cld    
  4025f9:	and    bh,dh
  4025fb:	repz pop ebp
  4025fd:	pusha  
  4025fe:	push   edi
  4025ff:	loope  0x4025a5
  402601:	ret    
  402602:	out    0x6a,al
  402604:	mov    edx,0x6f7750cc
  402609:	shr    BYTE PTR [eax+0x3f],1
  40260c:	outs   dx,BYTE PTR ds:[esi]
  40260d:	popa   
  40260e:	xor    DWORD PTR [ebx+edx*2],ecx
  402611:	daa    
  402612:	adc    DWORD PTR [edx+0x6b],esp
  402615:	std    
  402616:	loopne 0x402658
  402618:	mov    ebx,0xc92b66aa
  40261d:	outs   dx,BYTE PTR ds:[esi]
  40261f:	jb     0x4025ed
  402621:	adc    al,0xe6
  402623:	and    eax,0xe87bd7bf
  402628:	retf   0xe532
  40262b:	and    al,cl
  40262d:	adc    ebp,0x272818ab
  402633:	iret   
  402634:	dec    edx
  402635:	(bad)
  402638:	test   BYTE PTR [esp+eiz*4],ch
  40263b:	jns    0x40261c
  40263d:	cmp    eax,0x364a1828
  402642:	stc    
  402643:	dec    esp
  402644:	in     al,dx
  402645:	push   ecx
  402646:	dec    edx
  402647:	sub    bl,BYTE PTR es:[eax+0x15d2c1]
  40264e:	jb     0x402623
  402650:	push   edi
  402651:	add    al,0xc4
  402653:	inc    eax
  402654:	aas    
  402655:	ret    
  402656:	rcl    BYTE PTR [edx+0xa770e0c],0x64
  40265d:	int    0x7e
  40265f:	fdivr  QWORD PTR [edi]
  402661:	xor    BYTE PTR [ebx-0x15612622],bh
  402667:	add    bl,BYTE PTR [esi]
  402669:	scas   al,BYTE PTR es:[edi]
  40266a:	mov    cl,0x0
  40266c:	sub    ecx,ebp
  40266e:	and    DWORD PTR [esi],edi
  402670:	test   BYTE PTR [eax+0xb433e8a],0xf1
  402677:	dec    eax
  402678:	dec    edx
  402679:	je     0x40269d
  40267b:	test   eax,0x7567b1e9
  402680:	mov    bl,0xb7
  402682:	fild   WORD PTR [edx-0x220e3e79]
  402688:	fs push ss
  40268a:	popf   
  40268b:	pop    ds
  40268c:	mov    edx,0x1e400a91
  402691:	popf   
  402692:	sahf   
  402693:	fdiv   DWORD PTR [edi+0x20]
  402696:	scas   al,BYTE PTR es:[edi]
  402697:	jle    0x4026ec
  402699:	inc    esi
  40269a:	cmp    dh,bh
  40269c:	dec    ebp
  40269d:	lods   eax,DWORD PTR ds:[esi]
  40269e:	or     al,0x1
  4026a0:	inc    edi
  4026a1:	add    eax,0xa2b777db
  4026a6:	in     eax,dx
  4026a7:	jnp    0x402687
  4026a9:	rcl    DWORD PTR [esi+0x6b894259],1
  4026af:	data16 sub bh,BYTE PTR [eax]
  4026b2:	sub    ch,BYTE PTR [eax]
  4026b4:	cmp    BYTE PTR [eax-0x53850568],ch
  4026ba:	cdq    
  4026bb:	or     eax,0x3a6c3214
  4026c0:	mov    esp,0x4b8a043
  4026c5:	hlt    
  4026c6:	stos   DWORD PTR es:[edi],eax
  4026c7:	sbb    DWORD PTR [edx],edi
  4026c9:	mov    ecx,ebx
  4026cb:	ficomp WORD PTR [esi]
  4026cd:	mov    BYTE PTR [ebx+0x67],ah
  4026d0:	jle    0x4026ad
  4026d2:	push   edx
  4026d3:	icebp  
  4026d4:	pusha  
  4026d5:	jl     0x40269c
  4026d7:	jmp    0x9673:0x1b07c912
  4026de:	cwde   
  4026df:	fs hlt 
  4026e1:	mov    esi,DWORD PTR [ecx-0xb0aabab]
  4026e7:	test   DWORD PTR [ecx+0x3bf56149],esp
  4026ed:	adc    DWORD PTR [ebx+edi*2-0x773c5b88],esp
  4026f4:	les    ebp,FWORD PTR [esi+0x7f]
  4026f7:	stc    
  4026f8:	es dec eax
  4026fa:	inc    BYTE PTR [edx]
  4026fc:	gs lahf 
  4026fe:	iret   
  4026ff:	sub    al,0x5e
  402701:	std    
  402702:	(bad)  [esi]
  402704:	(bad)  
  402705:	push   ds
  402706:	adc    eax,0x58e9e190
  40270b:	mov    edi,0xaa94c556
  402710:	push   ss
  402711:	int3   
  402712:	nop
  402713:	mov    esp,0x5064abf3
  402718:	sbb    DWORD PTR [esi],eax
  40271a:	and    BYTE PTR [ecx],0x2a
  40271d:	das    
  40271e:	gs popa 
  402720:	push   ebp
  402721:	mov    cl,0xaf
  402723:	adc    al,0x5f
  402725:	mov    WORD PTR [esi-0x7239cc37],gs
  40272b:	jae    0x402708
  40272d:	add    ebp,DWORD PTR [esi+0x2c3e7151]
  402733:	fwait
  402734:	mov    bh,0x1b
  402736:	shl    DWORD PTR [edx-0x64],0x44
  40273a:	repz inc esp
  40273c:	jmp    0xbdc4:0xa8698e86
  402743:	dec    edx
  402744:	test   dh,ah
  402746:	pop    esp
  402747:	xchg   esp,eax
  402748:	das    
  402749:	int    0xa5
  40274b:	sbb    DWORD PTR [ebp-0x7f57f778],esi
  402751:	inc    ebp
  402752:	sbb    eax,0x86167e7c
  402757:	rol    DWORD PTR [edx+0x61],1
  40275a:	pusha  
  40275b:	xchg   ebp,eax
  40275c:	jne    0x402758
  40275e:	sub    dl,BYTE PTR [esi]
  402760:	lods   al,BYTE PTR ds:[esi]
  402761:	ret    
  402762:	mov    ah,0x4d
  402764:	int    0xcb
  402766:	xor    DWORD PTR [edi+0x663570cc],ebp
  40276c:	in     al,0x54
  40276e:	pop    edi
  40276f:	xchg   ebx,eax
  402770:	push   eax
  402771:	(bad)
  402774:	imul   edi,DWORD PTR [esp+eiz*2+0x741065f7],0x5efa18a3
  40277f:	inc    edi
  402780:	inc    esi
  402781:	xchg   esp,eax
  402782:	push   edx
  402783:	(bad)
  402786:	in     eax,0x8e
  402788:	enter  0xd715,0xc5
  40278c:	jns    0x40277d
  40278e:	push   edx
  40278f:	sbb    DWORD PTR ds:0xe996b610,0x4fdbe604
  402799:	dec    esi
  40279a:	xchg   BYTE PTR [ebp+0x0],al
  40279d:	xor    al,0x2e
  40279f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a0:	xchg   esi,eax
  4027a1:	jae    0x4027d9
  4027a3:	xchg   ebx,eax
  4027a4:	sbb    edx,0xfffffff9
  4027a7:	sub    BYTE PTR [ebx-0x38],dl
  4027aa:	hlt    
  4027ab:	out    0xc3,eax
  4027ad:	dec    ebx
  4027ae:	out    0xe3,eax
  4027b0:	shr    BYTE PTR ds:0xdf7f1b40,cl
  4027b6:	loope  0x4027b3
  4027b8:	mov    ch,0x4
  4027ba:	cmc    
  4027bb:	pop    esi
  4027bc:	and    dl,BYTE PTR es:[ecx]
  4027bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c0:	cmp    eax,0x8931a230
  4027c5:	fidiv  WORD PTR [eax-0x58]
  4027c8:	dec    esi
  4027c9:	pusha  
  4027ca:	mov    ebp,0x2b9b1f00
  4027cf:	int3   
  4027d0:	gs cld 
  4027d2:	aas    
  4027d3:	push   ds
  4027d4:	inc    eax
  4027d5:	mov    ah,BYTE PTR [esi]
  4027d7:	mov    ecx,0x7238d306
  4027dc:	xor    esi,esi
  4027de:	mov    esi,0x14afb887
  4027e3:	(bad)  
  4027e4:	xchg   edi,eax
  4027e5:	lds    esp,FWORD PTR [eax+0x4fbfefe8]
  4027eb:	aad    0xf3
  4027ed:	repnz fisub WORD PTR [ebp+0x4907f8c2]
  4027f4:	push   esi
  4027f5:	imul   edi,DWORD PTR [eax+0x64f6a18f],0xffffffdf
  4027fc:	imul   ebp
  4027fe:	cmp    ah,BYTE PTR [esi]
  402800:	pop    edx
  402801:	into   
  402802:	hlt    
  402803:	xchg   ecx,eax
  402804:	outs   dx,BYTE PTR ds:[esi]
  402805:	(bad)  
  402806:	push   es
  402807:	pop    edx
  402808:	fucomip st,st(4)
  40280a:	push   esp
  40280b:	ja     0x40287b
  40280d:	xchg   edx,eax
  40280e:	aas    
  40280f:	out    0x88,al
  402811:	iret   
  402812:	test   BYTE PTR [ecx+0x6ee4973],0x32
  402819:	jmp    0x926520f7
  40281e:	and    BYTE PTR [edi+edi*1-0x75],ah
  402822:	inc    ebp
  402823:	lock mov ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	popf   
  402882:	jbe    0x40287b
  402884:	ins    BYTE PTR es:[edi],dx
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x402813
  40288e:	inc    edx
  40288f:	dec    ecx
  402890:	fisub  DWORD PTR [ebp+0x41]
  402893:	mov    dh,0x94
  402895:	rcl    DWORD PTR [edx],1
  402897:	int    0xeb
  402899:	mov    bl,0x1e
  40289b:	jp     0x4028db
  40289d:	sahf   
  40289e:	xchg   ebp,eax
  40289f:	inc    ecx
  4028a0:	xchg   edx,eax
  4028a1:	push   ebx
  4028a2:	retf   
  4028a3:	lods   eax,DWORD PTR ds:[esi]
  4028a4:	push   ebp
  4028a5:	dec    eax
  4028a6:	shr    ebx,1
  4028a8:	add    DWORD PTR [ebp-0x22c881c9],esp
  4028ae:	icebp  
  4028af:	xor    BYTE PTR [edi+0x7d7ab528],0x1c
  4028b6:	cmp    BYTE PTR [eax],al
  4028b8:	ins    DWORD PTR es:[edi],dx
  4028b9:	inc    esi
  4028ba:	sti    
  4028bb:	sti    
  4028bc:	xchg   esi,eax
  4028bd:	adc    bh,bl
  4028bf:	inc    ebx
  4028c0:	xchg   esi,eax
  4028c1:	outs   dx,BYTE PTR ds:[esi]
  4028c2:	add    eax,0x1163c1c8
  4028c7:	mov    edx,DWORD PTR [edi+0x4]
  4028ca:	stos   BYTE PTR es:[edi],al
  4028cb:	into   
  4028cc:	ret    0x3a31
  4028cf:	adc    eax,0x9462e339
  4028d4:	(bad)  
  4028d5:	popf   
  4028d6:	and    edx,esp
  4028d8:	lea    ebp,[eax+0x56]
  4028db:	sub    edx,ecx
  4028dd:	cmc    
  4028de:	add    eax,0xf04bc786
  4028e3:	popf   
  4028e4:	inc    eax
  4028e5:	mov    ecx,0xed2d7cf7
  4028ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028eb:	scas   al,BYTE PTR es:[edi]
  4028ec:	lahf   
  4028ed:	mov    dh,0x1
  4028ef:	sbb    al,0x2d
  4028f1:	add    al,0x87
  4028f3:	stos   BYTE PTR es:[edi],al
  4028f4:	dec    esi
  4028f5:	psrlw  mm6,mm0
  4028f8:	push   esp
  4028f9:	(bad)  
  4028fa:	pop    esi
  4028fb:	fidiv  WORD PTR [edx+ebx*2+0x8a872d3]
  402902:	xchg   BYTE PTR [esi-0x546cf3ef],cl
  402908:	ret    
  402909:	mov    eax,ds:0x93a09156
  40290e:	push   ebp
  40290f:	aaa    
  402910:	add    eax,0x9dde20c1
  402915:	(bad)
  402918:	popa   
  402919:	add    eax,esp
  40291b:	sub    dl,ah
  40291d:	sub    bl,BYTE PTR [ecx]
  40291f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402920:	fistp  DWORD PTR [ecx*8-0x7c7941a3]
  402927:	jno    0x402922
  402929:	push   cs
  40292a:	lods   al,BYTE PTR ds:[esi]
  40292b:	lock (bad) 
  40292d:	repz ja 0x40296e
  402930:	jae    0x4028b3
  402932:	sub    BYTE PTR [ebx],ch
  402934:	dec    esp
  402935:	cs ja  0x40298d
  402938:	mov    esi,DWORD PTR [edi-0x1c]
  40293b:	div    BYTE PTR [ebp+0x15]
  40293e:	push   esi
  40293f:	xchg   BYTE PTR [eax+ebx*4+0x2f],bl
  402943:	invd   
  402945:	cmp    DWORD PTR [ecx],eax
  402947:	dec    ecx
  402948:	push   esi
  402949:	jmp    0xa878:0xbd4b4284
  402950:	push   ebp
  402951:	xchg   ecx,eax
  402952:	jp     0x4028f5
  402954:	into   
  402955:	cmp    edx,DWORD PTR [esi+0x5a]
  402958:	mov    bh,0x2b
  40295a:	xor    cl,BYTE PTR [edi+0x62]
  40295d:	and    ecx,DWORD PTR [esi+0x38b9fbae]
  402963:	clc    
  402964:	and    DWORD PTR [esp+esi*8-0x6a],ebx
  402968:	cmp    cl,cl
  40296a:	mov    dl,0x68
  40296c:	popf   
  40296d:	gs push es
  40296f:	mov    cl,0x70
  402971:	clc    
  402972:	test   BYTE PTR [ecx],ah
  402974:	test   DWORD PTR [esi-0x7d0b5d98],edx
  40297a:	push   esi
  40297b:	mov    eax,0xc7a4682b
  402980:	adc    esi,DWORD PTR [esi]
  402982:	nop
  402983:	push   ebp
  402984:	in     eax,dx
  402985:	jg     0x4029f5
  402987:	push   ebx
  402988:	sbb    BYTE PTR [eax+ebp*8],ah
  40298b:	inc    eax
  40298c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298d:	out    dx,al
  40298e:	lds    edx,FWORD PTR [ecx]
  402990:	push   ebp
  402991:	push   edi
  402992:	xlat   BYTE PTR ds:[ebx]
  402993:	scas   eax,DWORD PTR es:[edi]
  402994:	or     BYTE PTR [ecx+0x409e0b4],dl
  40299a:	jge    0x4029e0
  40299c:	dec    esi
  40299d:	pop    ebp
  40299e:	cmp    dh,BYTE PTR [edx+0xe]
  4029a1:	inc    ecx
  4029a2:	mov    edx,0x570cade
  4029a7:	shr    edi,0x5
  4029aa:	cmp    eax,0x562e1ae5
  4029af:	xchg   edx,eax
  4029b0:	stos   DWORD PTR es:[edi],eax
  4029b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029b2:	push   esi
  4029b3:	pop    es
  4029b4:	add    al,0x12
  4029b6:	minps  xmm6,xmm6
  4029b9:	mov    bl,0x33
  4029bb:	pop    es
  4029bc:	test   al,0xc3
  4029be:	fwait
  4029bf:	fwait
  4029c0:	pop    eax
  4029c1:	mov    bl,0x44
  4029c3:	dec    edx
  4029c4:	jb     0x40297b
  4029c6:	aad    0x5a
  4029c8:	push   ds
  4029c9:	arpl   WORD PTR ds:0x74ed,bp
  4029ce:	jmp    0x402a41
  4029d0:	ja     0x40297c
  4029d2:	fcmovu st,st(5)
  4029d4:	cmc    
  4029d5:	in     eax,dx
  4029d6:	scas   eax,DWORD PTR es:[edi]
  4029d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029d8:	pop    edx
  4029d9:	mov    BYTE PTR [esi],dl
  4029db:	rcr    bh,0xb0
  4029de:	and    ch,BYTE PTR [edi+0x3b]
  4029e1:	dec    edi
  4029e2:	adc    eax,0x38607983
  4029e7:	neg    DWORD PTR [eax]
  4029e9:	in     eax,dx
  4029ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029eb:	dec    esp
  4029ec:	gs out 0xd0,eax
  4029ef:	lods   al,BYTE PTR ds:[esi]
  4029f0:	test   eax,0xd5489ec0
  4029f5:	push   0xd83f026d
  4029fa:	adc    BYTE PTR ds:0xed61f8a7,dh
  402a00:	pushf  
  402a01:	jge    0x4029a8
  402a03:	xchg   ebx,eax
  402a04:	stos   BYTE PTR es:[edi],al
  402a05:	lahf   
  402a06:	mov    dh,BYTE PTR es:[eax+eax*2+0x4af5fada]
  402a0e:	out    dx,al
  402a0f:	xchg   BYTE PTR [eax+edi*2],ch
  402a12:	call   0x66a3b46e
  402a17:	inc    ecx
  402a18:	loop   0x402a0a
  402a1a:	shl    DWORD PTR [ecx-0x35],cl
  402a1d:	dec    ebp
  402a1e:	lea    ebp,[edx*2+0x30b2fad8]
  402a25:	out    dx,al
  402a26:	daa    
  402a27:	jo     0x4029cf
  402a29:	cmp    DWORD PTR [ebx+0x246ec33b],0xc7667377
  402a33:	push   eax
  402a34:	or     eax,0x8d6c0735
  402a39:	xor    al,0x12
  402a3b:	or     esp,DWORD PTR [ebp-0x33]
  402a3e:	aad    0x9c
  402a40:	or     eax,0xf83fc712
  402a45:	fisttp QWORD PTR [ebp-0x487bf2ff]
  402a4b:	push   0xffffffc6
  402a4d:	cli    
  402a4e:	mov    BYTE PTR [ebx-0x4af40b7a],dl
  402a54:	stc    
  402a55:	int3   
  402a56:	mov    dl,0xc8
  402a58:	and    edi,DWORD PTR [ebx]
  402a5a:	jl     0x402a07
  402a5c:	jmp    FWORD PTR [eax-0x57]
  402a5f:	mul    BYTE PTR [ecx]
  402a61:	mov    esp,0xee28be5e
  402a66:	in     eax,dx
  402a67:	add    DWORD PTR [edx+edi*2-0x4e792086],ecx
  402a6e:	ret    
  402a6f:	(bad)  
  402a70:	mov    ah,0xff
  402a72:	add    bh,BYTE PTR [esi+ebx*2]
  402a75:	xor    ah,BYTE PTR [edx-0x54]
  402a78:	jo     0x402a88
  402a7a:	(bad)  
  402a7b:	aas    
  402a7c:	push   esi
  402a7d:	nop
  402a7e:	ret    0xa2dc
  402a81:	jb     0x402ad3
  402a83:	xchg   ebx,eax
  402a84:	push   es
  402a85:	mov    es,eax
  402a87:	or     bh,BYTE PTR es:[edi-0x7ddb5c1c]
  402a8e:	sbb    al,0x69
  402a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a91:	(bad)  
  402a92:	outs   dx,DWORD PTR ds:[esi]
  402a93:	(bad)  
  402a94:	mov    ebx,0xf28d4615
  402a99:	ins    DWORD PTR es:[edi],dx
  402a9a:	sub    ah,BYTE PTR [edx+0x26]
  402a9d:	xchg   ebx,ebp
  402a9f:	mov    esp,0xe398af88
  402aa4:	cmp    al,0x34
  402aa6:	jle    0x402a61
  402aa8:	mov    bl,0xc
  402aaa:	add    al,0x6
  402aac:	sbb    ebp,ebp
  402aae:	out    dx,eax
  402aaf:	js     0x402a44
  402ab1:	out    dx,al
  402ab2:	popf   
  402ab3:	cwde   
  402ab4:	adc    al,0x21
  402ab6:	cs or  bl,dh
  402ab9:	sub    al,0x16
  402abb:	call   0x68412d00
  402ac0:	mov    bl,0xd1
  402ac2:	jle    0x402abd
  402ac4:	push   0x73
  402ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac7:	and    BYTE PTR [esi+eax*2],bl
  402aca:	jnp    0x402a60
  402acc:	sub    DWORD PTR [edi],0x58
  402acf:	add    edi,esi
  402ad1:	and    DWORD PTR [ecx-0x55438628],esp
  402ad7:	iret   
  402ad8:	pop    ebx
  402ad9:	clc    
  402ada:	fadd   QWORD PTR [ecx]
  402adc:	dec    ecx
  402add:	mov    ebp,edx
  402adf:	les    ecx,FWORD PTR ds:0x900642d7
  402ae5:	rol    eax,0xe
  402ae8:	sbb    edx,DWORD PTR [ebp+0x67e77065]
  402aee:	xchg   ebx,eax
  402aef:	retf   0x5df7
  402af2:	xchg   edi,eax
  402af3:	push   ds
  402af4:	imul   BYTE PTR [esi-0x37f66187]
  402afa:	cli    
  402afb:	xor    bh,BYTE PTR [ebp-0x3b]
  402afe:	mov    ebp,0x30ba228d
  402b03:	(bad)  
  402b05:	xchg   ecx,eax
  402b06:	sub    ebx,DWORD PTR [esi+0x55df0052]
  402b0c:	fmul   QWORD PTR [edx-0x2c]
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	mov    ah,0x80
  402b24:	(bad)  
  402b25:	cmc    
  402b26:	mov    ss,WORD PTR [edx]
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402abb
  402b2f:	popa   
  402b30:	mov    bl,BYTE PTR [eax+0x5660cd21]
  402b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b37:	iret   
  402b38:	mov    eax,ds:0xe0a939ea
  402b3e:	(bad)  
  402b3f:	cmp    eax,0xf3550761
  402b44:	mov    dl,0xfc
  402b46:	test   eax,0x44b017dc
  402b4b:	sub    dl,bh
  402b4d:	mov    esp,0x86ce23ac
  402b52:	jg     0x402b0b
  402b54:	cmp    eax,esp
  402b56:	adc    eax,0xcbf39e95
  402b5b:	mov    bh,0xf5
  402b5d:	in     al,0xad
  402b5f:	pop    esp
  402b60:	cwde   
  402b61:	dec    edx
  402b62:	push   esp
  402b63:	rol    ch,cl
  402b65:	mov    esi,0xcaa8d8aa
  402b6a:	push   cs
  402b6b:	repnz push edi
  402b6d:	loop   0x402b7b
  402b6f:	in     al,dx
  402b70:	push   ecx
  402b71:	retf   
  402b72:	and    edx,ecx
  402b74:	xor    edi,eax
  402b76:	jl     0x402baf
  402b78:	loopne 0x402bcc
  402b7a:	clc    
  402b7b:	sbb    DWORD PTR [edx-0x2d],ebx
  402b7e:	adc    al,0xc6
  402b80:	and    ebx,DWORD PTR [ecx-0x310955c5]
  402b86:	mov    cl,0x14
  402b88:	inc    esi
  402b89:	dec    ebp
  402b8a:	cmp    ch,BYTE PTR [esi+0x3598ee44]
  402b90:	pop    edx
  402b91:	dec    esi
  402b92:	pushf  
  402b93:	(bad)  
  402b94:	xlat   BYTE PTR ds:[ebx]
  402b95:	mov    dh,0xb1
  402b97:	jle    0x402b58
  402b99:	xchg   BYTE PTR [ebp-0x46d676a7],dh
  402b9f:	xchg   ebx,eax
  402ba0:	push   ds
  402ba1:	adc    BYTE PTR [edi],al
  402ba3:	les    edx,FWORD PTR ds:0x6f3cf5b6
  402ba9:	neg    BYTE PTR [ecx+eax*4]
  402bac:	repz fisub DWORD PTR [eax+eax*1]
  402bb0:	sub    al,0xcb
  402bb2:	adc    BYTE PTR [ecx+eiz*2-0x3b6296a4],ch
  402bb9:	xlat   BYTE PTR ds:[ebx]
  402bba:	out    0x25,al
  402bbc:	pop    esp
  402bbd:	pop    esp
  402bbe:	(bad)  
  402bbf:	fsub   QWORD PTR [eax+0x1a]
  402bc2:	cmp    BYTE PTR [esi],dl
  402bc4:	pop    ebx
  402bc5:	push   edi
  402bc6:	jae    0x402b9d
  402bc8:	lahf   
  402bc9:	jl     0x402ba3
  402bcb:	push   edi
  402bcc:	(bad)  
  402bcd:	jbe    0x402bce
  402bcf:	adc    eax,0x6fd9e4e
  402bd4:	dec    ecx
  402bd5:	aaa    
  402bd6:	test   edx,ebp
  402bd8:	repnz lds ebx,FWORD PTR [ecx-0x785c30b]
  402bdf:	xchg   edx,eax
  402be0:	mov    bl,0x58
  402be2:	ficomp DWORD PTR [edi-0x127e4ad6]
  402be8:	sub    eax,0xd3372bd5
  402bed:	push   ds
  402bee:	mov    ch,0xdf
  402bf0:	nop
  402bf1:	ja     0x402ba8
  402bf3:	pushf  
  402bf4:	inc    eax
  402bf5:	stos   DWORD PTR es:[edi],eax
  402bf6:	not    DWORD PTR [ecx-0x2a107a4]
  402bfc:	cmp    DWORD PTR [eax],edx
  402bfe:	fcmovnu st,st(3)
  402c00:	dec    ecx
  402c01:	xchg   edx,eax
  402c02:	mov    esp,0x8d9e754b
  402c07:	or     DWORD PTR [edx-0xa],0xb7d9074a
  402c0e:	ins    BYTE PTR es:[edi],dx
  402c0f:	push   esp
  402c10:	cmp    BYTE PTR ds:0xccfdc826,bl
  402c16:	cmp    al,0x8c
  402c18:	daa    
  402c19:	push   0x597d681b
  402c1e:	push   0xffffffbe
  402c20:	outs   dx,DWORD PTR ds:[esi]
  402c21:	push   cs
  402c22:	jmp    0x402c35
  402c24:	es dec eax
  402c26:	sub    eax,DWORD PTR [ebx-0x64]
  402c29:	in     al,dx
  402c2a:	lds    ebp,FWORD PTR [ebx+0x24]
  402c2d:	std    
  402c2e:	call   0x99a2:0xe65eea5d
  402c35:	or     bl,al
  402c37:	outs   dx,DWORD PTR ds:[esi]
  402c38:	or     al,0xec
  402c3a:	in     eax,0xac
  402c3c:	sbb    dh,BYTE PTR [ecx]
  402c3e:	mov    al,0x2
  402c40:	sbb    al,0xd3
  402c42:	(bad)  
  402c43:	mov    ch,0xc5
  402c45:	jns    0x402cad
  402c47:	pop    edi
  402c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c49:	dec    edi
  402c4a:	mov    ah,0x9c
  402c4c:	xor    BYTE PTR [ecx-0x2],bl
  402c4f:	xchg   BYTE PTR [ebp-0x2ea30c55],al
  402c55:	adc    BYTE PTR [ecx],ch
  402c57:	jb     0x402c0d
  402c59:	mov    ds:0x7a9ae06a,eax
  402c5e:	sbb    BYTE PTR [ebx+0x68],ah
  402c61:	dec    esp
  402c62:	cmp    esp,ebp
  402c64:	or     BYTE PTR [esi],cl
  402c66:	or     bl,bl
  402c68:	xor    BYTE PTR [ebx-0x3c81f9ab],al
  402c6e:	call   0x51b4:0xc3b2e711
  402c75:	in     eax,dx
  402c76:	xchg   esi,eax
  402c77:	push   0xe8c3b06a
  402c7c:	out    0xa5,al
  402c7e:	das    
  402c7f:	mov    DWORD PTR [esi],esi
  402c81:	push   0x8c6b3f19
  402c86:	sahf   
  402c87:	in     al,0x8d
  402c89:	cld    
  402c8a:	push   ds
  402c8b:	clc    
  402c8c:	fwait
  402c8d:	lahf   
  402c8e:	jge    0x402cb0
  402c90:	dec    edx
  402c91:	sub    al,0xd3
  402c93:	sbb    al,0xbe
  402c95:	dec    ecx
  402c96:	mov    eax,DWORD PTR [ebp+0x1f]
  402c99:	mov    edx,DWORD PTR [ebx+0x7e]
  402c9c:	pop    es
  402c9d:	fs push ebx
  402c9f:	and    esp,DWORD PTR [edi]
  402ca1:	mov    cl,0x91
  402ca3:	pusha  
  402ca4:	push   ebx
  402ca5:	mov    edx,0x14c85f55
  402caa:	push   ds
  402cab:	lahf   
  402cac:	rcl    ecx,cl
  402cae:	xor    BYTE PTR [esi+0x697fe7d5],ch
  402cb4:	jl     0x402ca4
  402cb6:	dec    edi
  402cb7:	mov    ebx,0xd3b2fc3b
  402cbc:	mov    BYTE PTR [esi],0xe2
  402cbf:	and    al,0xda
  402cc1:	retf   
  402cc2:	mov    al,0xf2
  402cc4:	imul   cl
  402cc6:	out    0x95,al
  402cc8:	ja     0x402cc5
  402cca:	pop    esp
  402ccb:	or     dh,BYTE PTR [eax+0x630b874f]
  402cd1:	pop    esp
  402cd2:	cmp    ecx,edx
  402cd4:	xor    al,0x26
  402cd6:	shr    ecx,cl
  402cd8:	adc    BYTE PTR [eax+0xf3c8b1b],0xc8
  402cdf:	imul   edx,DWORD PTR [eax-0xf],0xffffffdb
  402ce3:	adc    DWORD PTR [edx],0x49
  402ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce7:	(bad)  
  402ce8:	popa   
  402ce9:	clc    
  402cea:	shl    cl,cl
  402cec:	mov    cl,0xf6
  402cee:	cmp    eax,0x599b122f
  402cf3:	fs sub bh,bl
  402cf6:	dec    esi
  402cf7:	in     eax,dx
  402cf8:	jo     0x402cf3
  402cfa:	mov    ebp,0x69da5ade
  402cff:	es pop ebx
  402d01:	(bad)  
  402d03:	retf   0x528f
  402d06:	das    
  402d07:	in     eax,0x25
  402d09:	pop    esi
  402d0a:	mov    edi,0x8e91b3a5
  402d0f:	sub    al,0x6a
  402d11:	dec    ebp
  402d12:	mov    gs,WORD PTR [edi-0x301e045b]
  402d18:	fisttp QWORD PTR [eax*2-0x7030e69d]
  402d1f:	push   0x28
  402d21:	jl     0x402d8e
  402d23:	mov    ecx,0xf96a396c
  402d28:	fnstenv [esi+0x60]
  402d2b:	xchg   edx,eax
  402d2c:	mov    ch,0x8e
  402d2e:	pop    esi
  402d2f:	pusha  
  402d30:	(bad)  
  402d31:	imul   BYTE PTR [ebp+0x5c785a20]
  402d37:	add    ecx,DWORD PTR [edi]
  402d39:	cmc    
  402d3a:	retf   
  402d3b:	(bad)  
  402d3c:	ins    DWORD PTR es:[edi],dx
  402d3d:	dec    ebp
  402d3e:	add    bh,BYTE PTR [edx+0x2c]
  402d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d42:	xor    BYTE PTR [eax+eax*2+0xd8b8dc6],0xea
  402d4a:	and    DWORD PTR [esi],0xffffffad
  402d4d:	arpl   WORD PTR [ecx+0x42b93086],si
  402d53:	cmp    bh,BYTE PTR [ebx+0x34]
  402d56:	jnp    0x402d1f
  402d58:	std    
  402d59:	mul    DWORD PTR [ebx+0x29]
  402d5c:	pop    ecx
  402d5d:	ins    BYTE PTR es:[edi],dx
  402d5e:	ret    
  402d5f:	cs aad 0xa0
  402d62:	ds xchg ebp,eax
  402d64:	mov    ds:0xee029979,al
  402d69:	aam    0x90
  402d6b:	frstor [esi+0x249654e7]
  402d71:	dec    esp
  402d72:	dec    ebx
  402d73:	mov    eax,ds:0x5ca45f88
  402d78:	(bad)  
  402d79:	rol    BYTE PTR [ecx-0x56],1
  402d7c:	inc    esi
  402d7d:	bound  esp,QWORD PTR [ebx+0x50c1db94]
  402d83:	hlt    
  402d84:	and    dh,BYTE PTR ds:0xa843b934
  402d8a:	jecxz  0x402d33
  402d8c:	dec    esp
  402d8d:	into   
  402d8e:	and    BYTE PTR [ecx+0x5e],bl
  402d91:	push   esp
  402d92:	lea    edi,[ecx-0x24]
  402d95:	add    dl,BYTE PTR [ecx-0x553634a4]
  402d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d9c:	outs   dx,DWORD PTR ds:[esi]
  402d9d:	sbb    esi,ebp
  402d9f:	dec    edx
  402da0:	sub    ecx,ebp
  402da2:	xor    al,BYTE PTR [bx+si]
  402da5:	fwait
  402da6:	div    ebx
  402da8:	das    
  402da9:	dec    ebp
  402daa:	or     dl,ch
  402dac:	out    0xa9,al
  402dae:	out    0x50,eax
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	jmp    0xc542101
  402df7:	pop    ss
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402d88
  402dff:	add    al,0xe5
  402e01:	push   ebx
  402e02:	outs   dx,BYTE PTR ds:[esi]
  402e03:	(bad)  
  402e04:	out    0x47,eax
  402e06:	and    al,0x45
  402e08:	mov    cl,0xdd
  402e0a:	sub    BYTE PTR [eax],dh
  402e0c:	jnp    0x402e78
  402e0e:	das    
  402e0f:	pop    ss
  402e10:	aas    
  402e11:	mov    al,ds:0x4e7a9e7e
  402e16:	push   es
  402e17:	dec    edi
  402e18:	sub    edi,DWORD PTR [esi-0x59]
  402e1b:	mov    ah,0xd5
  402e1d:	sbb    esp,ecx
  402e1f:	(bad)  
  402e20:	pop    esp
  402e21:	xor    BYTE PTR [edx+edi*2-0x3ae1fbb7],dl
  402e28:	out    dx,al
  402e29:	xchg   ebx,eax
  402e2a:	ror    DWORD PTR [edx+0x4e5c853e],cl
  402e30:	out    0x74,eax
  402e32:	retf   
  402e33:	mov    BYTE PTR [ebx+0x74c1f316],0x48
  402e3a:	icebp  
  402e3b:	mov    ecx,DWORD PTR [eax+0x4cbca8b4]
  402e41:	out    dx,al
  402e42:	mov    bl,0xf6
  402e44:	cmp    BYTE PTR [ecx-0x24],al
  402e47:	push   es
  402e48:	xchg   edi,eax
  402e49:	sbb    esp,DWORD PTR [esp+edx*8+0x6bae17ac]
  402e50:	adc    al,0x9d
  402e52:	inc    ecx
  402e53:	es in  eax,dx
  402e55:	in     al,0xc2
  402e57:	mov    ecx,0xfbdd49a9
  402e5c:	dec    edi
  402e5d:	cmp    eax,0x839747cc
  402e62:	add    dh,BYTE PTR [ecx]
  402e64:	xchg   edx,eax
  402e65:	sub    eax,0xc4f30cb
  402e6a:	jecxz  0x402e19
  402e6c:	push   es
  402e6d:	lock rcl DWORD PTR ds:0x7ce236fc,cl
  402e74:	pop    esi
  402e75:	sbb    edi,DWORD PTR [edi-0x6b37fa]
  402e7b:	mov    bh,0x85
  402e7d:	xchg   BYTE PTR [ecx+eiz*2-0xc3aa94d],bh
  402e84:	push   ebp
  402e85:	sub    BYTE PTR [ebp+eax*8-0x74],ah
  402e89:	jbe    0x402e97
  402e8b:	fst    st(7)
  402e8d:	fild   QWORD PTR [edx+ebp*1-0x11]
  402e91:	pop    ds
  402e92:	std    
  402e93:	adc    bh,BYTE PTR [eax]
  402e95:	add    bh,bh
  402e97:	pop    ebx
  402e98:	lock or esp,ebp
  402e9b:	and    ah,BYTE PTR ds:0xc6df6625
  402ea1:	mov    edx,0x5a93058a
  402ea6:	jp     0x402e4f
  402ea8:	out    0x94,al
  402eaa:	push   esp
  402eab:	jns    0x402e7e
  402ead:	push   esi
  402eae:	sub    eax,0x853cbd32
  402eb3:	xchg   ebx,eax
  402eb4:	pop    ecx
  402eb5:	xchg   ebp,eax
  402eb6:	inc    eax
  402eb7:	popf   
  402eb8:	ret    
  402eb9:	dec    ecx
  402eba:	test   DWORD PTR [edi-0x46759e0b],ebp
  402ec0:	xor    eax,0x5f65564d
  402ec5:	shr    DWORD PTR [edi-0x3b492990],cl
  402ecb:	std    
  402ecc:	mov    ebp,0xbce56384
  402ed1:	push   ecx
  402ed2:	icebp  
  402ed3:	lds    ecx,FWORD PTR [edx]
  402ed5:	loop   0x402eec
  402ed7:	dec    edx
  402ed8:	add    DWORD PTR [edx-0x7],esi
  402edb:	(bad)  
  402edc:	or     edx,DWORD PTR [esi-0xa]
  402edf:	aas    
  402ee0:	imul   ebx,DWORD PTR [ecx],0x1c7108ff
  402ee6:	scas   eax,DWORD PTR es:[edi]
  402ee7:	pop    ebp
  402ee8:	mov    bl,0xf4
  402eea:	imul   ebx,DWORD PTR [edi+edx*8-0x5e5d7684],0x91fe1e79
  402ef5:	(bad)  
  402ef6:	aam    0x74
  402ef8:	jmp    0x4d40:0x4dacfa52
  402eff:	pop    ecx
  402f00:	or     eax,0xa73895a1
  402f05:	xor    al,0x7d
  402f07:	mov    eax,0x3f83cace
  402f0c:	jmp    edx
  402f0e:	pop    esp
  402f0f:	mov    DWORD PTR [ebp-0x64],esi
  402f12:	and    eax,0x6b6c2c05
  402f17:	nop
  402f18:	cdq    
  402f19:	das    
  402f1a:	push   ecx
  402f1b:	or     ah,BYTE PTR ds:0x6dffce08
  402f21:	adc    esp,DWORD PTR [eax+0x2d04d17b]
  402f27:	xchg   BYTE PTR [esi-0x5a311ccb],dl
  402f2d:	(bad)  
  402f2e:	(bad)  
  402f2f:	repnz not BYTE PTR [edx]
  402f32:	(bad)  
  402f34:	add    al,0x77
  402f36:	bound  eax,QWORD PTR [edx]
  402f38:	pop    esp
  402f39:	xor    DWORD PTR [esi],0x58b8623d
  402f3f:	mov    ch,0x96
  402f41:	pop    eax
  402f42:	cmp    bl,dl
  402f44:	mov    ah,0x90
  402f46:	inc    eax
  402f47:	mov    al,BYTE PTR [esi-0x4d]
  402f4a:	(bad)  
  402f4b:	sbb    ecx,edi
  402f4d:	jmp    0x402f92
  402f4f:	jecxz  0x402fc8
  402f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f52:	jo     0x402f4f
  402f54:	xchg   ebp,eax
  402f55:	(bad)  
  402f56:	int3   
  402f57:	test   eax,0xe1281f6f
  402f5c:	es rcr ebp,cl
  402f5f:	les    eax,FWORD PTR [ebx+0x76d173a0]
  402f65:	or     al,0xca
  402f68:	add    DWORD PTR [esi],ebp
  402f6a:	ins    BYTE PTR es:[edi],dx
  402f6b:	xor    ecx,DWORD PTR [edi]
  402f6d:	xor    ch,BYTE PTR [esp+edi*4-0x70]
  402f71:	xchg   ebx,eax
  402f72:	fwait
  402f73:	mov    al,ds:0xf6a0a3ae
  402f78:	cli    
  402f79:	jo     0x402fc2
  402f7b:	pop    ebx
  402f7c:	push   edi
  402f7d:	push   cs
  402f7e:	js     0x402fbc
  402f80:	sub    al,bl
  402f82:	mov    BYTE PTR [ecx],0x4a
  402f85:	add    eax,0x6c56d881
  402f8a:	mov    al,ds:0x79f7e2d
  402f8f:	cld    
  402f90:	dec    ah
  402f92:	int    0x2
  402f94:	(bad)  
  402f95:	(bad)  
  402f96:	jo     0x402fb5
  402f98:	and    al,0xd
  402f9a:	inc    edx
  402f9b:	xor    BYTE PTR [esi+0x6a],cl
  402f9e:	int    0xcf
  402fa0:	daa    
  402fa1:	in     eax,0x0
  402fa3:	(bad)  
  402fa5:	inc    ecx
  402fa6:	icebp  
  402fa7:	jmp    0x54f9fe7b
  402fac:	movd   DWORD PTR [edx],mm7
  402faf:	loope  0x402f76
  402fb1:	mov    bh,0xc2
  402fb3:	(bad)  
  402fb4:	cmp    al,0xf4
  402fb6:	mov    eax,ds:0xabfb2e41
  402fbb:	add    eax,0x2598b6b3
  402fc0:	adc    DWORD PTR [edi+0x40],eax
  402fc3:	stos   DWORD PTR es:[edi],eax
  402fc4:	shl    DWORD PTR [esi-0x9],cl
  402fc7:	and    al,0xad
  402fc9:	mov    bh,0xe5
  402fcb:	sbb    al,0xe6
  402fcd:	xor    edi,ebx
  402fcf:	out    0x3f,al
  402fd1:	ss clc 
  402fd3:	push   ecx
  402fd4:	xor    al,0x4e
  402fd6:	xchg   ebp,eax
  402fd7:	arpl   cx,sp
  402fd9:	or     edx,DWORD PTR [ebp+0x10]
  402fdc:	stc    
  402fdd:	jbe    0x403024
  402fdf:	cdq    
  402fe0:	mov    ebx,0xfb513d57
  402fe5:	lods   eax,DWORD PTR ds:[esi]
  402fe6:	das    
  402fe7:	daa    
  402fe8:	pop    es
  402fe9:	lods   al,BYTE PTR ds:[esi]
  402fea:	mov    edx,ebp
  402fec:	mov    edx,0xe9f256dc
  402ff1:	xor    ebx,DWORD PTR [edx-0x1f751bf8]
  402ff7:	add    ebx,DWORD PTR ds:0xdbf6161a
  402ffd:	xor    al,0x55
  402fff:	cs mov esi,0xe3f01587
  403005:	fst    st(5)
  403007:	int    0xde
  403009:	sbb    BYTE PTR [esi+0x74],0x71
  40300d:	gs in  eax,dx
  40300f:	mov    ebx,0x26247f6f
  403014:	fnstsw WORD PTR [eax-0x3256d6f]
  40301a:	mov    eax,ds:0xffba4b96
  40301f:	lds    ecx,FWORD PTR [edx+0x4fa3c736]
  403025:	jp     0x403038
  403027:	data16 or dl,BYTE PTR cs:[ebx+esi*8]
  40302c:	js     0x403097
  40302e:	dec    edi
  40302f:	stos   BYTE PTR es:[edi],al
  403030:	stos   DWORD PTR es:[edi],eax
  403031:	push   ecx
  403032:	out    dx,eax
  403033:	retf   
  403034:	sbb    ah,al
  403036:	add    ebx,DWORD PTR [esi-0xdf0f828]
  40303c:	sbb    eax,0x5445cadc
  403041:	data16 jb 0x4030af
  403044:	js     0x402ffa
  403046:	imul   esp,esi,0xffffffbe
  403049:	rol    BYTE PTR [edi-0x10],cl
  40304c:	mov    edx,0x7bcb95fa
  403051:	pop    ds
  403052:	inc    ebx
  403053:	jmp    0x2bda705e
  403058:	push   ecx
  403059:	mov    dh,0x6b
  40305b:	push   ds
  40305c:	cs jmp 0x326b:0x58865f73
  403064:	dec    edx
  403065:	bound  esi,QWORD PTR [eax-0xa943d74]
  40306b:	sbb    al,0x9b
  40306d:	xchg   esi,eax
  40306e:	cmp    eax,0xfa9346af
  403073:	rol    BYTE PTR [edx-0x1d2c31f4],0x7b
  40307a:	scas   al,BYTE PTR es:[edi]
  40307b:	repnz daa 
  40307d:	jbe    0x4030a8
  40307f:	push   ecx
  403080:	mov    eax,DWORD PTR [ebp+0x8]
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	in     eax,0xa8
  403099:	in     al,0x6c
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	jns    0x4030e8
  4030a5:	xchg   esi,eax
  4030a6:	test   al,0xb1
  4030a8:	jp     0x4030d4
  4030aa:	push   eax
  4030ab:	fisttp DWORD PTR [ebp+0x24e5b65]
  4030b1:	test   al,0x37
  4030b3:	adc    ch,cl
  4030b5:	aam    0x61
  4030b7:	scas   al,BYTE PTR es:[edi]
  4030b8:	int    0x74
  4030ba:	mov    ebx,0xbe8dd30e
  4030bf:	push   0xffffff9f
  4030c1:	sbb    eax,0xa9d8859d
  4030c6:	push   ss
  4030c7:	aad    0x76
  4030c9:	sbb    eax,0xe988da55
  4030ce:	inc    eax
  4030cf:	sbb    BYTE PTR [eax+0x11c2016],al
  4030d5:	ins    BYTE PTR es:[edi],dx
  4030d6:	inc    ebp
  4030d7:	das    
  4030d8:	mov    gs:0xcd83c554,eax
  4030de:	out    0xf5,al
  4030e0:	sub    eax,0x5500ce72
  4030e5:	daa    
  4030e6:	enter  0x2c42,0x74
  4030ea:	mov    eax,ds:0xe61b5cc7
  4030ef:	and    BYTE PTR [esi-0x2848bd10],al
  4030f5:	dec    ebx
  4030f6:	push   0x15
  4030f8:	icebp  
  4030f9:	xchg   esi,eax
  4030fa:	repz dec ebx
  4030fc:	int    0x15
  4030fe:	std    
  4030ff:	ret    
  403100:	sub    BYTE PTR [ebx-0x268869c8],bl
  403106:	jmp    0x403142
  403108:	jl     0x4030f2
  40310a:	xlat   BYTE PTR ds:[ebx]
  40310b:	popf   
  40310c:	cmp    al,0x87
  40310e:	int    0x60
  403110:	fist   WORD PTR [edx]
  403112:	xchg   DWORD PTR [ebp+0x24],ebp
  403115:	ror    BYTE PTR [ebx+eiz*2+0x7d],0xf
  40311a:	stc    
  40311b:	iret   
  40311c:	jle    0x4030f6
  40311e:	rcr    dl,cl
  403120:	fwait
  403121:	or     DWORD PTR [ecx-0x4a34885c],esi
  403127:	jno    0x4030df
  403129:	fisttp WORD PTR [edi-0x5f7cf1a7]
  40312f:	fisttp WORD PTR fs:[esi+0x1c673093]
  403136:	call   0xf7fff638
  40313b:	mov    ah,0x32
  40313d:	jb     0x4030c8
  40313f:	out    0x3d,al
  403141:	enter  0x823f,0x52
  403145:	lds    eax,FWORD PTR [esi-0x12]
  403148:	add    al,0x35
  40314a:	cmp    dh,al
  40314c:	xor    al,0xad
  40314e:	retf   0x50d8
  403151:	jno    0x40316b
  403153:	fimul  DWORD PTR [eax]
  403155:	pop    ebp
  403156:	xchg   esp,eax
  403157:	fmul   DWORD PTR [edi-0x7ee29433]
  40315d:	and    edi,eax
  40315f:	inc    ebp
  403160:	retf   
  403161:	js     0x4030f3
  403163:	pop    es
  403164:	inc    eax
  403165:	clc    
  403166:	jp     0x4031a8
  403168:	xchg   DWORD PTR [eax],ebx
  40316a:	push   esp
  40316b:	out    0x6f,al
  40316d:	xchg   BYTE PTR [edx+0x1f],ch
  403170:	jnp    0x40314e
  403172:	cmc    
  403173:	test   DWORD PTR [eax],eax
  403175:	ret    0xbb0b
  403178:	repz out dx,eax
  40317a:	mov    BYTE PTR [esp+esi*2-0x43],ch
  40317e:	sti    
  40317f:	retf   
  403180:	dec    ebx
  403181:	push   esp
  403182:	inc    ecx
  403183:	and    ebx,DWORD PTR [edi+0x407f42f8]
  403189:	(bad)  
  40318a:	les    eax,FWORD PTR [edi]
  40318c:	pop    ebx
  40318d:	adc    cl,al
  40318f:	into   
  403190:	div    BYTE PTR [ebx]
  403192:	arpl   WORD PTR [eax-0x57fce482],ax
  403198:	rol    dl,1
  40319a:	lahf   
  40319b:	fdiv   st,st(0)
  40319d:	bound  ebx,QWORD PTR [esp+edx*2-0x4c91658a]
  4031a4:	mov    al,ds:0x37e67fd4
  4031a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031aa:	leave  
  4031ab:	daa    
  4031ac:	xchg   ebp,eax
  4031ad:	leave  
  4031ae:	imul   ebp,DWORD PTR [ebx],0xcc05471
  4031b4:	cmp    eax,0xb0778239
  4031b9:	and    al,al
  4031bb:	push   ecx
  4031bc:	or     esp,DWORD PTR [ecx]
  4031be:	jp     0x40314a
  4031c0:	add    eax,0x2b022238
  4031c5:	pop    esp
  4031c6:	(bad)  
  4031c7:	pushf  
  4031c8:	xor    cl,BYTE PTR [edx+0x68]
  4031cb:	ds sbb eax,0x3e790692
  4031d1:	pop    edi
  4031d2:	clc    
  4031d3:	dec    edi
  4031d4:	push   es
  4031d5:	(bad)  
  4031d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d7:	cmp    al,0x94
  4031d9:	jae    0x403167
  4031db:	xchg   ecx,eax
  4031dc:	cmp    dh,ch
  4031de:	push   esp
  4031df:	sub    ebx,edi
  4031e1:	and    DWORD PTR [edx+edi*2],edx
  4031e4:	and    BYTE PTR [ebp+0x77],cl
  4031e7:	out    dx,al
  4031e8:	repz pusha 
  4031ea:	xor    cl,BYTE PTR [esi-0xd7e8f51]
  4031f0:	lods   al,BYTE PTR ds:[esi]
  4031f1:	jl     0x4031df
  4031f3:	bound  eax,QWORD PTR [esi-0x3f0d0a84]
  4031f9:	test   eax,0xa098648f
  4031fe:	add    eax,0xe30d4af6
  403203:	push   ebx
  403204:	xor    ah,ch
  403206:	es mov al,0x5e
  403209:	imul   eax,DWORD PTR [edx],0xffffffc1
  40320c:	mov    ch,BYTE PTR [ebp+0x12]
  40320f:	xchg   ebx,eax
  403210:	push   es
  403211:	dec    ecx
  403212:	sbb    bl,bh
  403214:	jb     0x403279
  403216:	adc    DWORD PTR [eax+0x34],edx
  403219:	jmp    0x4031ab
  40321b:	lahf   
  40321c:	stos   DWORD PTR es:[edi],eax
  40321d:	retf   0xc4c8
  403220:	mov    WORD PTR [edx],cs
  403222:	or     ecx,ebx
  403224:	popf   
  403225:	(bad)  
  403227:	and    al,0x12
  403229:	sbb    eax,DWORD PTR [edx]
  40322b:	pop    ecx
  40322c:	sbb    bl,BYTE PTR [edi-0x982b24c]
  403232:	mov    esi,DWORD PTR [eax]
  403234:	in     eax,dx
  403235:	lds    ecx,FWORD PTR [edi-0x62]
  403238:	out    0x8f,eax
  40323a:	mov    ds:0x4edb53c1,al
  40323f:	xchg   BYTE PTR [ebx+0x1b],cl
  403242:	daa    
  403243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403244:	cs pop ss
  403246:	in     al,0x23
  403248:	sti    
  403249:	jnp    0x4031f3
  40324b:	(bad)  
  40324c:	arpl   WORD PTR [ebx+0xb5d9f45],di
  403252:	add    dh,BYTE PTR es:[edi-0x794db6e4]
  403259:	adc    al,BYTE PTR ds:0xa6c48fbe
  40325f:	lods   eax,DWORD PTR ds:[esi]
  403260:	gs inc esi
  403262:	gs stos DWORD PTR es:[edi],eax
  403264:	repnz frstor [eax]
  403267:	mov    eax,ds:0xb1ef3c43
  40326c:	push   cs
  40326d:	popa   
  40326e:	data16 sub BYTE PTR [edx-0x46],bl
  403272:	mov    ecx,0xab356055
  403277:	enter  0x67db,0x6f
  40327b:	or     bl,BYTE PTR [esi+ecx*2-0x74690e34]
  403282:	cmc    
  403283:	lds    esp,FWORD PTR [eax-0x6bd5e15f]
  403289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328a:	sbb    edi,ebp
  40328c:	jo     0x4032fd
  40328e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328f:	repz retf 0xd56f
  403293:	dec    esi
  403294:	dec    esp
  403295:	jmp    0x403218
  403297:	(bad)  
  403298:	jle    0x4032d7
  40329a:	push   cs
  40329b:	xchg   ecx,eax
  40329c:	arpl   cx,ax
  40329e:	outs   dx,BYTE PTR ds:[esi]
  4032a0:	add    eax,0x34692cba
  4032a6:	inc    edi
  4032a7:	(bad)  
  4032a8:	and    BYTE PTR [esp+edi*1+0x6b],bl
  4032ac:	popf   
  4032ad:	ret    0x41cb
  4032b0:	dec    sp
  4032b2:	cmc    
  4032b3:	mov    edi,0x900be524
  4032b8:	not    BYTE PTR [edx]
  4032ba:	xchg   al,ch
  4032bc:	(bad)  
  4032bd:	pop    DWORD PTR ds:0xd0315983
  4032c3:	mov    bh,0xf1
  4032c5:	fcomp  QWORD PTR [ebp+0x51]
  4032c8:	lahf   
  4032c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ca:	hlt    
  4032cb:	xchg   ebp,eax
  4032cc:	pop    edi
  4032cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ce:	(bad)  
  4032cf:	stc    
  4032d0:	jne    0x40333e
  4032d2:	(bad)  
  4032d4:	xchg   ebp,eax
  4032d6:	mov    esp,0x9c26e0c
  4032db:	ss inc esp
  4032dd:	imul   ebx,DWORD PTR [edx],0xbfc3cb42
  4032e3:	push   ebx
  4032e4:	push   ss
  4032e5:	fmulp  st(6),st
  4032e7:	add    esp,DWORD PTR [ecx+esi*4+0x34c7dcfc]
  4032ee:	push   ebp
  4032ef:	clc    
  4032f0:	or     eax,0x84a30155
  4032f5:	or     DWORD PTR [edi+0x37],edi
  4032f8:	retf   0x974b
  4032fb:	jo     0x403357
  4032fd:	push   DWORD PTR [edi]
  4032ff:	ret    
  403300:	mov    esp,0xdbd437a1
  403305:	sub    esp,esp
  403307:	lahf   
  403308:	daa    
  403309:	mov    ecx,0xb18e7ba8
  40330e:	xor    BYTE PTR [ebx],bl
  403310:	xor    DWORD PTR [edx-0x6fe151ca],esp
  403316:	fs dec esi
  403318:	(bad)  
  403319:	cli    
  40331a:	cdq    
  40331b:	sub    al,0xa9
  40331d:	mov    ebx,0x5423d4e1
  403322:	pop    ds
  403323:	sbb    DWORD PTR [esi-0x38fc39cd],esp
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0xe3dc34a]
  403372:	pusha  
  403373:	fst    DWORD PTR [eax+edx*1]
  403376:	sbb    bh,BYTE PTR [eax+0x78]
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x403373
  40337e:	add    eax,0x1e
  403381:	or     al,0x2b
  403383:	add    ebx,esp
  403385:	std    
  403386:	aaa    
  403387:	fcom   st(4)
  403389:	dec    edx
  40338a:	fldcw  WORD PTR [ebx-0x302dcf6e]
  403390:	shl    BYTE PTR [ebp+0xb4355d4],cl
  403396:	inc    esp
  403397:	xchg   ecx,eax
  403398:	sbb    bl,cl
  40339a:	sbb    DWORD PTR [eax],0xcf879d77
  4033a0:	hlt    
  4033a1:	push   cs
  4033a2:	int    0xb3
  4033a4:	sub    eax,0x119b7546
  4033a9:	or     BYTE PTR [edi+ebx*8+0x4a51ede5],al
  4033b0:	sahf   
  4033b1:	mov    DWORD PTR [ebx+edi*1-0x35b4b399],ecx
  4033b8:	lds    esi,FWORD PTR [ebx+edx*1+0x63]
  4033bc:	mov    eax,ds:0xf833ea8c
  4033c1:	in     eax,dx
  4033c2:	rol    DWORD PTR [ebx+0xe779396],cl
  4033c8:	adc    DWORD PTR [ecx+ebp*2-0x52],ebx
  4033cc:	cmc    
  4033cd:	ret    0x4a0a
  4033d0:	push   es
  4033d1:	frstor [eax+0x779dcff]
  4033d7:	mov    ds:0x88bcb5a7,al
  4033dc:	aad    0x21
  4033de:	add    BYTE PTR [esi],cl
  4033e0:	dec    ax
  4033e2:	xor    al,0xfe
  4033e4:	xor    esi,DWORD PTR [ebx-0x1c]
  4033e7:	jae    0x40343c
  4033e9:	ins    DWORD PTR es:[edi],dx
  4033ea:	test   dl,ch
  4033ec:	mov    WORD PTR [eax+0x56],ss
  4033ef:	test   al,0x97
  4033f1:	push   es
  4033f2:	enter  0xb4ad,0xdf
  4033f6:	mov    ch,0x7b
  4033f8:	push   cs
  4033f9:	loop   0x403393
  4033fb:	test   BYTE PTR [eax+0xd],0x58
  4033ff:	lods   al,BYTE PTR ds:[esi]
  403400:	push   DWORD PTR ds:0x5b1cdaa5
  403406:	mov    WORD PTR [ebp-0x32f401ed],?
  40340c:	sub    eax,0x5e9721f4
  403411:	loop   0x403460
  403413:	test   DWORD PTR [eax-0x77],ebx
  403416:	pop    ebx
  403417:	push   esp
  403418:	xor    dh,al
  40341a:	div    DWORD PTR ds:0x8263a5bb
  403420:	out    dx,al
  403421:	mov    ah,0xaf
  403423:	scas   eax,DWORD PTR es:[edi]
  403424:	mov    bl,0x74
  403426:	pop    ss
  403427:	(bad)  [eax]
  403429:	dec    esp
  40342a:	pop    eax
  40342b:	jb     0x4033fd
  40342d:	cmp    al,0xd2
  40342f:	das    
  403430:	enter  0x7c7,0xbf
  403434:	jbe    0x40347e
  403436:	push   cs
  403437:	mov    ecx,edi
  403439:	loope  0x40344f
  40343b:	hlt    
  40343c:	ins    BYTE PTR es:[edi],dx
  40343d:	aad    0x43
  40343f:	ret    
  403440:	cmp    DWORD PTR ss:[ebp+0x4bef79cf],ecx
  403447:	mov    ?,WORD PTR [ecx+eiz*1]
  40344a:	je     0x4033d6
  40344c:	dec    esi
  40344d:	dec    esi
  40344e:	(bad)  
  40344f:	out    0xf3,eax
  403451:	fs inc edi
  403453:	mov    ecx,0xaa25be95
  403458:	inc    ebp
  403459:	mov    edi,esp
  40345b:	push   ds
  40345c:	bsf    esp,DWORD PTR [edi-0x29]
  403460:	jnp    0x4034dd
  403462:	jo     0x403459
  403464:	test   al,0xe5
  403466:	and    al,0x7a
  403468:	and    al,0xb8
  40346a:	xor    esi,DWORD PTR [edi-0x2e]
  40346d:	fidiv  DWORD PTR [edi-0x7e7edf56]
  403473:	jo     0x40341f
  403475:	popa   
  403476:	ss pop es
  403478:	out    dx,eax
  403479:	fmul   DWORD PTR [eax-0x1f9a1c30]
  40347f:	xor    eax,0x51949161
  403484:	not    BYTE PTR [edx+0x70e10f26]
  40348a:	pop    esi
  40348b:	out    0xfe,eax
  40348d:	popa   
  40348e:	cmp    al,0x7b
  403490:	xchg   edi,eax
  403491:	add    esp,esp
  403493:	call   0xb54d:0x7eccacda
  40349a:	jle    0x403433
  40349c:	pop    es
  40349d:	adc    BYTE PTR [ecx+ebp*4],cl
  4034a0:	sysret 
  4034a2:	ss or  al,0xf3
  4034a5:	mov    bh,0x75
  4034a7:	pop    esi
  4034a8:	cli    
  4034a9:	int3   
  4034aa:	sub    eax,0xde54dafb
  4034af:	xchg   esi,eax
  4034b0:	push   edx
  4034b1:	lds    ebx,FWORD PTR [esi-0x2d]
  4034b4:	inc    ebx
  4034b5:	repz enter 0x3791,0xb0
  4034ba:	pop    es
  4034bb:	imul   ecx,DWORD PTR [ebx-0x520549ae],0xcbdb3d47
  4034c5:	jo     0x40348b
  4034c7:	xor    eax,0x9a4e0f36
  4034cc:	bound  ebx,QWORD PTR [eax]
  4034ce:	mov    eax,0xf2a1edc2
  4034d3:	(bad)  
  4034d4:	arpl   WORD PTR [esi+0x41],cx
  4034d7:	xor    al,0x7b
  4034d9:	cli    
  4034da:	and    ecx,DWORD PTR [ebx]
  4034dc:	repnz pop ds
  4034de:	push   cs
  4034df:	pop    esp
  4034e0:	imul   esp,DWORD PTR [ecx+0xf774d6c],0xffffff81
  4034e7:	or     BYTE PTR [ecx+eax*2-0x6a4a97de],0x1d
  4034ef:	add    dh,BYTE PTR [esi-0x4c45b5f1]
  4034f5:	and    al,0xba
  4034f7:	pop    ebp
  4034f8:	mov    esi,ds
  4034fa:	inc    edx
  4034fb:	in     eax,0x6e
  4034fd:	and    eax,0xddda9c21
  403502:	clc    
  403503:	jp     0x40350a
  403505:	inc    eax
  403506:	adc    eax,0xa466054d
  40350b:	popa   
  40350c:	out    dx,al
  40350d:	aad    0x33
  40350f:	xchg   DWORD PTR [esi+0x4772ddfc],esi
  403515:	lds    esp,FWORD PTR [ebx]
  403517:	or     eax,esp
  403519:	mov    eax,DWORD PTR [ebx+eiz*2-0x6d07920d]
  403520:	sahf   
  403521:	shr    ah,0xcd
  403524:	push   es
  403525:	mov    cl,0xab
  403527:	mov    esi,0xda0bab21
  40352c:	cmp    al,0x4d
  40352e:	push   0x3bdb1bd4
  403533:	xor    esi,DWORD PTR [edx]
  403535:	aas    
  403536:	and    al,0xd1
  403538:	std    
  403539:	pop    ebp
  40353a:	or     eax,0x29d5ade7
  40353f:	hlt    
  403540:	imul   edx,DWORD PTR [edx],0xe4051d39
  403546:	jnp    0x403535
  403548:	jge    0x4035a5
  40354a:	ins    BYTE PTR es:[edi],dx
  40354b:	fld    DWORD PTR [edx+0x3d]
  40354e:	icebp  
  40354f:	mov    edi,0x680d5c4b
  403554:	arpl   WORD PTR [eax],bx
  403556:	sub    eax,0x4b935d78
  40355b:	(bad)  
  40355d:	push   ebp
  40355e:	jp     0x40354a
  403560:	jp     0x403509
  403562:	mov    bh,0x44
  403564:	mov    esi,0xaefe38b5
  403569:	dec    eax
  40356a:	outs   dx,BYTE PTR ds:[esi]
  40356b:	pop    ds
  40356c:	or     edi,ebp
  40356e:	out    0x9c,ax
  403571:	lahf   
  403572:	cdq    
  403573:	fiadd  WORD PTR [eax+esi*4]
  403576:	(bad)  
  403577:	push   ss
  403578:	mov    cs,WORD PTR [edi-0x24fca467]
  40357e:	arpl   WORD PTR [esi],si
  403580:	jg     0x40356a
  403582:	lock inc ebp
  403584:	adc    al,BYTE PTR [ebp-0x24]
  403587:	es mov ebx,0xbc7a4a23
  40358d:	ficomp WORD PTR [ebp+0x50]
  403590:	add    al,0x45
  403592:	mov    ds:0x989e1d94,eax
  403597:	push   ebp
  403598:	sbb    BYTE PTR ds:0x7b9edb8f,ch
  40359e:	sbb    edi,DWORD PTR [eax+0x1e]
  4035a1:	mov    al,ds:0x7cd324a0
  4035a6:	test   esi,ecx
  4035a8:	test   al,0xe1
  4035aa:	push   es
  4035ab:	mov    al,0xd3
  4035ad:	aaa    
  4035ae:	mov    ch,0xaf
  4035b0:	jp     0x4035f9
  4035b2:	daa    
  4035b3:	cmp    ah,dl
  4035b5:	mov    ebp,0x3766f7b9
  4035ba:	into   
  4035bb:	adc    eax,0x127b5dd1
  4035c0:	pop    ecx
  4035c1:	aam    0x41
  4035c3:	jmp    0x67e3:0xe820f51b
  4035ca:	dec    ecx
  4035cb:	adc    ah,BYTE PTR [ebx]
  4035cd:	mov    eax,ds:0x2d635a08
  4035d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d4:	push   0x5d
  4035d6:	rol    ebp,cl
  4035d8:	les    edi,FWORD PTR [eax]
  4035da:	mov    al,0xbd
  4035dc:	add    DWORD PTR [ebx-0x6b],edi
  4035df:	hlt    
  4035e0:	dec    esp
  4035e1:	(bad)  
  4035e2:	inc    ebp
  4035e3:	bound  edx,QWORD PTR [edi]
  4035e5:	pop    ebx
  4035e6:	push   edi
  4035e7:	mov    dl,0xdb
  4035e9:	and    DWORD PTR [ecx+0x6a37dfc4],0x7f
  4035f0:	xchg   ecx,eax
  4035f1:	or     DWORD PTR [esp+edi*4],0x28
  4035f5:	xchg   esi,eax
  4035f6:	mov    dh,0xe8
  4035f8:	jmp    0x1d16:0x9654c270
  4035ff:	xor    eax,esi
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x3e914359,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x4035d8
  40363f:	loop   0x403617
  403641:	xchg   edi,eax
  403642:	pop    esi
  403643:	pop    eax
  403644:	sbb    DWORD PTR [ebx],ebx
  403646:	shl    DWORD PTR [ecx],1
  403648:	fnsave [edi-0x30]
  40364b:	sbb    eax,0x3c81737f
  403650:	jle    0x4035d7
  403652:	ins    DWORD PTR es:[edi],dx
  403653:	add    eax,0x85bb62fc
  403658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403659:	jo     0x403640
  40365b:	inc    edx
  40365c:	or     eax,ebx
  40365e:	xlat   BYTE PTR ds:[ebx]
  40365f:	call   0x8e290127
  403664:	je     0x4036b1
  403666:	mov    ecx,0x72066610
  40366b:	test   edi,ecx
  40366d:	sub    DWORD PTR [ebx+0x4e04921f],0x70
  403674:	push   esp
  403675:	retf   0x87a3
  403678:	pusha  
  403679:	and    eax,0x13d80fbd
  40367e:	push   edx
  40367f:	into   
  403680:	mov    dl,0x32
  403682:	mov    ah,BYTE PTR [ecx]
  403684:	or     al,0xf2
  403686:	xor    eax,0xc1cac4ad
  40368b:	fcom   QWORD PTR [edi+0x3e77eac2]
  403691:	add    BYTE PTR ds:0x862b42ad,bl
  403697:	test   DWORD PTR [ecx],ebp
  403699:	inc    edx
  40369a:	and    eax,0x70644f35
  40369f:	sub    al,0x4e
  4036a1:	xchg   esi,eax
  4036a2:	push   ss
  4036a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a4:	repnz or BYTE PTR [eax+0xf1f437b],ah
  4036ab:	out    dx,eax
  4036ac:	hlt    
  4036ad:	cwde   
  4036ae:	ds test ebx,eax
  4036b1:	push   edx
  4036b2:	mov    cl,0xec
  4036b4:	mov    cl,0x9b
  4036b6:	(bad)  
  4036b7:	xchg   esp,eax
  4036b8:	jbe    0x403716
  4036ba:	add    dl,BYTE PTR [bp+si+0x3177]
  4036bf:	pusha  
  4036c0:	sub    BYTE PTR [ebx-0x67521db2],dl
  4036c6:	sub    BYTE PTR [ebx+0x67ce2766],bh
  4036cc:	imul   esi,DWORD PTR [edx+0x329afd4b],0xa1235346
  4036d6:	js     0x4036c3
  4036d8:	cwde   
  4036d9:	push   esp
  4036da:	sahf   
  4036db:	jae    0x4036fb
  4036dd:	retf   
  4036de:	jecxz  0x403756
  4036e0:	xor    eax,0x5581dc69
  4036e5:	push   edi
  4036e6:	pop    es
  4036e7:	xor    al,0xff
  4036e9:	dec    ecx
  4036ea:	ret    0xeaf5
  4036ed:	mov    WORD PTR [ebx],es
  4036ef:	ret    0xe884
  4036f2:	pop    ebp
  4036f3:	cmp    BYTE PTR [eax-0x2c5bca91],ch
  4036f9:	and    BYTE PTR [ecx+0x42],al
  4036fc:	xchg   esp,eax
  4036fd:	(bad)  
  4036fe:	cmc    
  4036ff:	inc    esi
  403700:	pop    ss
  403701:	pop    es
  403702:	sbb    ch,BYTE PTR [edi+0x7c]
  403705:	sbb    eax,0xea9c062
  40370a:	pusha  
  40370b:	add    BYTE PTR [edi],0x7c
  40370e:	ins    BYTE PTR es:[edi],dx
  40370f:	sbb    esp,DWORD PTR [eax+0x14e2c5b3]
  403715:	mov    dl,0xcd
  403717:	cmp    eax,0xdcb0603d
  40371c:	xchg   edi,eax
  40371d:	test   eax,0xe3dc5232
  403722:	mov    edi,0x4745a3ab
  403727:	in     eax,dx
  403728:	jmp    0x4e5b:0x7d9a230e
  40372f:	not    DWORD PTR [ecx]
  403731:	icebp  
  403732:	lock pop edi
  403734:	ins    BYTE PTR es:[edi],dx
  403735:	xchg   esp,eax
  403736:	enter  0x9dd8,0x29
  40373a:	xor    al,0x54
  40373c:	jmp    0x35b:0x4dc8d6f2
  403743:	or     BYTE PTR [ebp-0x495e4fb6],al
  403749:	sbb    al,0x15
  40374b:	rol    BYTE PTR [eax-0x31],1
  40374e:	into   
  40374f:	pop    eax
  403750:	lds    ecx,FWORD PTR [esi+0x52]
  403753:	ret    
  403754:	lahf   
  403755:	jmp    0xd15d:0x1d5ec6d3
  40375c:	mov    dl,0x80
  40375e:	popf   
  40375f:	cmp    ecx,DWORD PTR [edi]
  403761:	fadd   DWORD PTR [edx]
  403763:	push   esp
  403764:	pop    ebp
  403765:	jb     0x403722
  403767:	mov    ebx,0xc35bd9b9
  40376c:	aam    0x95
  40376e:	cmc    
  40376f:	retf   
  403770:	mov    ecx,eax
  403772:	mov    dl,0xd
  403774:	jb     0x4037aa
  403776:	or     al,BYTE PTR [ebp-0x9]
  403779:	or     ebx,esi
  40377b:	inc    ecx
  40377c:	in     al,dx
  40377d:	xor    eax,0xbb83e930
  403782:	fs mov cl,0xf4
  403785:	ret    0xcd6e
  403788:	mov    esi,0xc17e0f8c
  40378d:	lock and esp,DWORD PTR [eax+ecx*1]
  403791:	das    
  403792:	or     al,0xb
  403794:	dec    ebp
  403795:	les    edx,FWORD PTR [ebp+0x2f6dfcc5]
  40379b:	dec    ecx
  40379c:	add    eax,0x21a79bd7
  4037a1:	sbb    eax,0x9e2a689c
  4037a6:	rol    BYTE PTR [edx-0x35],cl
  4037a9:	ret    
  4037aa:	retf   0xce3
  4037ad:	mov    ds:0xd5111cca,al
  4037b2:	mov    bh,0xce
  4037b4:	je     0x4037a5
  4037b6:	sub    al,BYTE PTR [ecx-0x57]
  4037b9:	loop   0x403834
  4037bb:	mov    esp,0x6be0dfbb
  4037c0:	sub    DWORD PTR [ebx-0x7851a481],edi
  4037c6:	sub    eax,ebx
  4037c8:	or     ecx,DWORD PTR [esp+edx*1+0x45c420a9]
  4037cf:	iret   
  4037d0:	ds stos BYTE PTR es:[edi],al
  4037d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037d3:	sahf   
  4037d4:	pop    esp
  4037d5:	inc    ecx
  4037d7:	jg     0x403809
  4037d9:	push   es
  4037da:	add    DWORD PTR [esi+0x29],ebp
  4037dd:	xor    ecx,DWORD PTR [ebx+esi*1-0x33]
  4037e1:	mov    edi,DWORD PTR [ebp-0x71]
  4037e4:	push   esp
  4037e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e6:	jecxz  0x4037b6
  4037e8:	jp     0x403780
  4037ea:	adc    esi,eax
  4037ec:	push   ss
  4037ed:	test   DWORD PTR [ebx-0x78014547],eax
  4037f3:	xchg   ebp,eax
  4037f4:	pop    edx
  4037f5:	repnz arpl WORD PTR [eax-0x76706235],di
  4037fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037fd:	mov    ebp,DWORD PTR es:[ebp-0x66832607]
  403804:	lds    ebp,FWORD PTR [esi+0x5a8bf74]
  40380a:	adc    DWORD PTR [ebp-0x31],ebp
  40380d:	push   esi
  40380e:	inc    edi
  40380f:	pop    es
  403810:	and    ah,BYTE PTR [ebx+edx*8+0x1932226b]
  403817:	jbe    0x4037a8
  403819:	dec    edx
  40381a:	push   cs
  40381b:	adc    DWORD PTR [bp+0x2b6d],edi
  403820:	cwde   
  403821:	jb     0x4037b4
  403823:	dec    dh
  403825:	adc    al,0x3b
  403827:	and    eax,0x2fc0862d
  40382c:	jbe    0x40386d
  40382e:	xlat   BYTE PTR ds:[ebx]
  40382f:	jo     0x40383d
  403831:	dec    edi
  403832:	mov    edx,DWORD PTR [eax+ecx*4-0x6a]
  403836:	test   eax,0x8f1d4176
  40383b:	push   ds
  40383c:	out    dx,eax
  40383d:	cmp    al,0x24
  40383f:	ret    
  403840:	sub    eax,0xde3030b
  403845:	repnz lods al,BYTE PTR ds:[esi]
  403847:	pop    ebp
  403848:	rcl    bl,cl
  40384a:	add    eax,0xc514393e
  40384f:	test   BYTE PTR [edx],0xc9
  403852:	xchg   ecx,eax
  403854:	and    eax,0xf44ffe00
  403859:	(bad)  
  40385a:	pop    ss
  40385b:	lea    ecx,ds:0xd7f9a0ab
  403861:	push   edi
  403862:	jo     0x40382a
  403864:	mov    ds:0xa80e4840,eax
  403869:	mov    edi,0xfdb6c2a1
  40386e:	hlt    
  40386f:	mov    ds:0xacb176ae,al
  403874:	cld    
  403875:	gs popf 
  403877:	mov    al,ds:0x56d9f839
  40387c:	jmp    0x45641486
  403881:	jae    0x403859
  403883:	jg     0x4038bf
  403885:	out    dx,eax
  403886:	loope  0x403842
  403888:	loopne 0x4038dc
  40388a:	add    al,0xb3
  40388c:	push   0x98d0049
  403891:	mov    cl,BYTE PTR [edx-0x4a5fbefa]
  403897:	(bad)
  40389a:	loop   0x40391a
  40389c:	call   0x801f:0x837e3c76
  4038a3:	mov    bh,0x6b
  4038a5:	aaa    
  4038a6:	sbb    bh,cl
  4038a8:	xchg   edi,eax
  4038a9:	or     BYTE PTR [edx+0x38],0x29
  4038ad:	push   edi
  4038ae:	jle    0x403874
  4038b0:	test   cl,0x81
  4038b3:	retf   0xc903
  4038b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b7:	cs jmp 0xc6a6ef98
  4038bd:	sub    DWORD PTR [edx],0xffffffbf
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x62d405f3
  4038d5:	stos   BYTE PTR es:[edi],al
  4038d6:	jnp    0x4038f9
  4038d8:	adc    al,0x1d
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x403909
  4038e1:	pop    edx
  4038e2:	arpl   WORD PTR [ecx],di
  4038e4:	fwait
  4038e5:	pop    ecx
  4038e6:	jle    0x403874
  4038e8:	pop    es
  4038e9:	mov    al,0xd4
  4038eb:	add    BYTE PTR [edi],dh
  4038ed:	fcom   QWORD PTR [esi+edx*1]
  4038f0:	outs   dx,DWORD PTR ds:[esi]
  4038f1:	stos   BYTE PTR es:[edi],al
  4038f2:	ds push esp
  4038f4:	cmovne ebx,DWORD PTR [edx+0x18]
  4038f8:	sbb    al,0xaf
  4038fa:	sahf   
  4038fb:	push   esi
  4038fc:	lock push cs
  4038fe:	test   BYTE PTR ds:0x4d6315f2,bl
  403904:	in     eax,0x8
  403906:	push   0xc901620f
  40390b:	add    DWORD PTR [ecx-0xa],eax
  40390e:	cmp    esi,DWORD PTR [ebx+edx*4-0x32]
  403912:	(bad)  
  403913:	fwait
  403914:	cmc    
  403915:	icebp  
  403916:	leave  
  403917:	in     al,0x77
  403919:	mov    ch,0xa1
  40391b:	xchg   edi,eax
  40391c:	lods   al,BYTE PTR ds:[esi]
  40391d:	clc    
  40391e:	xor    eax,0x87f3e007
  403923:	popa   
  403924:	in     eax,dx
  403925:	loope  0x403976
  403927:	xor    BYTE PTR [edx+0x2853ecd6],dh
  40392d:	in     al,dx
  40392e:	jns    0x403902
  403930:	push   es
  403931:	or     ah,ch
  403933:	pop    ebp
  403934:	xchg   ebx,eax
  403935:	mov    ebp,0x9482f54
  40393a:	mov    ss,WORD PTR [ecx]
  40393c:	fldcw  WORD PTR [ebp-0x3a33701a]
  403942:	sub    al,0x2b
  403944:	add    eax,0x3063e6ca
  403949:	add    ah,BYTE PTR [eax+ecx*1+0x72d41ac2]
  403950:	gs inc ecx
  403952:	inc    esi
  403953:	mov    ch,BYTE PTR [ebx]
  403955:	lock inc edi
  403957:	pop    ecx
  403958:	jecxz  0x40399c
  40395a:	mov    edi,0xd06b98c3
  40395f:	pop    ss
  403960:	jg     0x403993
  403962:	dec    esp
  403963:	not    al
  403965:	xor    BYTE PTR [edi-0x44],ah
  403968:	push   es
  403969:	mov    ebx,DWORD PTR [edi]
  40396b:	repz push ecx
  40396d:	jns    0x40396f
  40396f:	dec    ecx
  403970:	nop
  403971:	sub    esp,DWORD PTR [ebx+0xf]
  403974:	mov    dl,0x1f
  403976:	jmp    0x403921
  403978:	dec    esp
  403979:	stos   DWORD PTR es:[edi],eax
  40397a:	sub    BYTE PTR [edx+0x44eac96a],dh
  403980:	xor    al,0xa6
  403982:	pop    ebp
  403983:	loop   0x40392a
  403985:	add    cl,BYTE PTR [esi+ecx*4]
  403988:	fcomp  DWORD PTR [ecx+0x3e2dd195]
  40398e:	scas   al,BYTE PTR es:[edi]
  40398f:	inc    ebx
  403990:	cmps   DWORD PTR cs:[si],DWORD PTR es:[di]
  403993:	push   0xffffffd2
  403995:	xor    bl,0x4
  403998:	outs   dx,DWORD PTR ds:[esi]
  403999:	adc    ebx,ecx
  40399b:	jb     0x403976
  40399d:	ret    
  40399e:	push   ss
  40399f:	pop    esi
  4039a0:	pop    edx
  4039a1:	mov    esi,DWORD PTR [esi-0x4a]
  4039a4:	sub    DWORD PTR [edx+0x1f1848c],ebp
  4039aa:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039ac:	ja     0x403a23
  4039ae:	xchg   esp,eax
  4039af:	outs   dx,BYTE PTR ds:[esi]
  4039b0:	add    DWORD PTR [ebx-0x15d1fb8b],0x18
  4039b7:	mov    WORD PTR [eiz*8+0x7accbf56],fs
  4039be:	mov    edx,0x664671de
  4039c3:	or     al,0x23
  4039c5:	fdivr  st,st(2)
  4039c7:	fs inc eax
  4039c9:	jmp    0x4039ab
  4039cb:	pop    ds
  4039cc:	sub    BYTE PTR [edx],ch
  4039ce:	lods   eax,DWORD PTR ds:[esi]
  4039cf:	push   ds
  4039d0:	rol    esp,1
  4039d2:	idiv   BYTE PTR [esi-0x67]
  4039d5:	cwde   
  4039d6:	xchg   ebp,eax
  4039d7:	cwde   
  4039d8:	ror    BYTE PTR [edx-0x6d0417f0],1
  4039de:	mov    gs,WORD PTR [edx+0x50773549]
  4039e4:	inc    edx
  4039e5:	mov    cs,WORD PTR [esp+edx*1-0x7d999a97]
  4039ec:	xchg   DWORD PTR [esi+0x7a],edx
  4039ef:	stc    
  4039f0:	xor    DWORD PTR [ebp+0x9],0x43
  4039f4:	(bad)  
  4039f6:	push   edi
  4039f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f8:	pop    ebx
  4039f9:	mov    ds:0x747a5099,al
  4039fe:	push   es
  4039ff:	sbb    edx,0x11
  403a02:	and    al,0x6e
  403a04:	sti    
  403a05:	inc    esi
  403a06:	mov    dl,0xe5
  403a08:	nop
  403a09:	push   es
  403a0a:	or     BYTE PTR [ecx+0x60],cl
  403a0d:	call   0x41cfe470
  403a12:	(bad)  
  403a13:	stc    
  403a14:	push   esi
  403a15:	out    dx,eax
  403a16:	push   edi
  403a17:	mov    ah,0x61
  403a19:	fcomip st,st(3)
  403a1b:	or     al,0x62
  403a1d:	mov    ch,BYTE PTR [ebx+edx*8-0x1760ea66]
  403a24:	cdq    
  403a25:	ins    BYTE PTR es:[edi],dx
  403a26:	mov    ds:0x1573de22,al
  403a2b:	pop    edx
  403a2c:	sub    DWORD PTR ds:0x2fd255b6,ecx
  403a32:	aam    0x67
  403a34:	dec    ebx
  403a35:	int3   
  403a36:	je     0x403a53
  403a38:	pop    es
  403a39:	pushf  
  403a3a:	popf   
  403a3b:	push   ebp
  403a3c:	sar    ecx,0x80
  403a3f:	xor    al,0x45
  403a41:	fwait
  403a42:	inc    edi
  403a43:	xor    al,0xf0
  403a45:	test   al,0xc4
  403a47:	icebp  
  403a48:	int3   
  403a49:	mov    bh,0x20
  403a4b:	shr    esi,1
  403a4d:	push   esi
  403a4e:	jl     0x403a65
  403a50:	mov    al,ds:0x9845d349
  403a55:	jmp    0xfc5f:0x97b3ee85
  403a5c:	dec    esp
  403a5d:	into   
  403a5e:	sahf   
  403a5f:	mov    ah,0x6e
  403a61:	push   edi
  403a62:	push   esi
  403a63:	cmp    DWORD PTR [edx],edx
  403a65:	fistp  QWORD PTR [eax]
  403a67:	dec    ebp
  403a68:	xor    al,0x5f
  403a6a:	sub    al,0x85
  403a6c:	retf   
  403a6d:	test   al,0x24
  403a6f:	cwde   
  403a70:	fst    DWORD PTR ds:0x3acfc2f1
  403a76:	jg     0x403a24
  403a78:	inc    ebx
  403a79:	inc    ebp
  403a7a:	inc    esi
  403a7b:	ror    BYTE PTR [ebx-0x373996e5],0xa0
  403a82:	sub    al,0xd9
  403a84:	imul   esp,DWORD PTR [esi+0x54],0x30546559
  403a8b:	out    0x80,al
  403a8d:	adc    al,BYTE PTR [ecx]
  403a8f:	scas   eax,DWORD PTR es:[edi]
  403a90:	add    ebx,DWORD PTR [ebx-0x62]
  403a93:	(bad)  
  403a94:	fistp  WORD PTR [edi+0x6e]
  403a97:	cmp    eax,0x67262ab8
  403a9c:	cmp    bh,BYTE PTR [esi-0x7b2d0330]
  403aa2:	push   edi
  403aa3:	int    0xc7
  403aa5:	jmp    0x403a9d
  403aa7:	mov    edx,0x316e6724
  403aac:	xor    ebp,DWORD PTR [edx]
  403aae:	adc    DWORD PTR [ecx+eiz*8-0x73],edi
  403ab2:	in     eax,dx
  403ab3:	outs   dx,BYTE PTR ds:[esi]
  403ab4:	scas   al,BYTE PTR es:[edi]
  403ab5:	cdq    
  403ab6:	pop    ds
  403ab7:	adc    DWORD PTR [edx],ebp
  403ab9:	push   edi
  403aba:	rcl    DWORD PTR [edx],1
  403abc:	mov    ch,0xae
  403abe:	shl    edi,cl
  403ac0:	aas    
  403ac1:	xchg   edx,eax
  403ac2:	arpl   WORD PTR ds:[esi+0x6c],bp
  403ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ac7:	dec    eax
  403ac8:	ja     0x403a8b
  403aca:	pushf  
  403acb:	pusha  
  403acc:	push   es
  403acd:	jle    0x403ad0
  403acf:	mov    cl,0x22
  403ad1:	enter  0xcee6,0xe0
  403ad5:	push   ebx
  403ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ad7:	sub    eax,DWORD PTR [ebx+edx*8+0x0]
  403adb:	fcmovnb st,st(4)
  403add:	mov    edx,DWORD PTR [ebx-0x52442503]
  403ae3:	repz sub ebx,DWORD PTR [ebx-0x22]
  403ae7:	cld    
  403ae8:	(bad)  
  403ae9:	cmp    al,0xd0
  403aeb:	scas   al,BYTE PTR es:[edi]
  403aec:	and    BYTE PTR [eax+0x41f00302],al
  403af2:	loop   0x403b2c
  403af4:	jnp    0x403ab2
  403af6:	rol    ebp,1
  403af8:	or     bh,dh
  403afa:	pop    ecx
  403afb:	stos   DWORD PTR es:[edi],eax
  403afc:	ja     0x403aad
  403afe:	test   DWORD PTR [eax-0x61],0xddee2dc4
  403b05:	call   0x81d777db
  403b0a:	cmc    
  403b0b:	cmp    DWORD PTR [ebp-0x76],esp
  403b0e:	mov    esp,0xf2679f54
  403b13:	out    dx,al
  403b14:	(bad)  
  403b15:	or     DWORD PTR [esi+0x5d],esp
  403b18:	pop    eax
  403b19:	nop
  403b1a:	daa    
  403b1b:	or     bl,BYTE PTR [edx]
  403b1d:	xchg   edx,ebx
  403b1f:	(bad)  
  403b20:	fldz   
  403b22:	mov    gs,ebp
  403b24:	mov    esp,0x406af92b
  403b29:	call   0xb9b2:0x32aaef13
  403b30:	out    0x7a,al
  403b32:	imul   esp,DWORD PTR [edi+0x5],0xffffffcb
  403b36:	inc    esp
  403b37:	mov    cl,0xf
  403b39:	fcomp  QWORD PTR es:[eax-0x34545a7f]
  403b40:	popa   
  403b41:	mov    ch,BYTE PTR [eax]
  403b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b44:	mov    cl,0x46
  403b46:	test   cl,0x16
  403b49:	cld    
  403b4a:	push   cs
  403b4b:	loope  0x403b9f
  403b4d:	(bad)  
  403b4e:	jmp    0x403b01
  403b50:	es pop edx
  403b52:	jne    0x403b87
  403b54:	mov    eax,0x6dc1882b
  403b59:	or     eax,0xa3e5cdd6
  403b5e:	(bad)  
  403b5f:	push   edx
  403b60:	xchg   DWORD PTR ds:0x43343b04,esp
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	jne    0x403b29
  403b81:	imul   esi,DWORD PTR [edi],0xffffff9a
  403b84:	and    edi,DWORD PTR [eax+0x78]
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b2c
  403b8c:	clc    
  403b8d:	fdivr  DWORD PTR [ebp+0x73]
  403b90:	jmp    0x707d2519
  403b95:	pop    ds
  403b96:	je     0x403b9b
  403b98:	dec    ebp
  403b99:	dec    ebp
  403b9a:	ret    0x3228
  403b9d:	ds push eax
  403b9f:	push   ecx
  403ba0:	jb     0x403ba2
  403ba2:	in     al,0x91
  403ba4:	(bad)  
  403ba5:	inc    ecx
  403ba6:	popf   
  403ba7:	cdq    
  403ba8:	add    edi,DWORD PTR [ecx]
  403baa:	repz cmp DWORD PTR [edx+0x4da128d9],edx
  403bb1:	push   ebx
  403bb2:	sbb    esi,esi
  403bb4:	(bad)  [eax]
  403bb6:	lods   eax,DWORD PTR ds:[esi]
  403bb7:	dec    eax
  403bb8:	push   edi
  403bb9:	leave  
  403bba:	jae    0x403b6b
  403bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bbd:	lea    ebx,[ebx+0x51]
  403bc0:	fdivr  st,st(0)
  403bc2:	xchg   edi,eax
  403bc3:	sub    DWORD PTR [esi-0x45],ebp
  403bc6:	ds lock (bad) 
  403bc9:	(bad)  
  403bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bcb:	sub    DWORD PTR [edx],eax
  403bcd:	xchg   esp,eax
  403bce:	push   0x8
  403bd0:	cmp    esp,DWORD PTR [eax-0x8a39da6]
  403bd6:	test   eax,0x81300ebf
  403bdb:	cmp    al,0xd
  403bdd:	and    edi,DWORD PTR [edi+ebx*1]
  403be0:	xchg   edi,eax
  403be1:	shr    BYTE PTR [edi-0x2ce70ba9],0xd1
  403be8:	sbb    eax,0x4b3f0ed
  403bed:	ret    0x60a3
  403bf0:	je     0x403c16
  403bf2:	add    ch,BYTE PTR [esi+eax*2-0x3d7270dd]
  403bf9:	(bad)  
  403bfb:	sbb    al,0xb6
  403bfd:	sti    
  403bfe:	aas    
  403bff:	dec    edx
  403c00:	cli    
  403c01:	xchg   ebp,eax
  403c02:	mov    eax,ds:0x14bba437
  403c07:	and    ebp,eax
  403c09:	arpl   di,di
  403c0b:	xlat   BYTE PTR ds:[ebx]
  403c0c:	retf   
  403c0d:	ror    BYTE PTR [ebx-0x3a3deb29],1
  403c13:	dec    ebx
  403c14:	aaa    
  403c15:	push   ebx
  403c16:	mov    ch,0x2f
  403c18:	cli    
  403c19:	imul   ecx,ecx,0xef679d6d
  403c1f:	in     eax,0xf8
  403c21:	xchg   ebx,eax
  403c22:	ins    BYTE PTR es:[edi],dx
  403c23:	(bad)  
  403c24:	in     al,0x7d
  403c26:	inc    esi
  403c27:	push   es
  403c28:	out    0x11,eax
  403c2a:	sub    edi,DWORD PTR [esi]
  403c2c:	mov    al,0xb2
  403c2e:	mov    edx,0xa88a220e
  403c33:	(bad)  
  403c34:	mov    edi,0xb96f8c3b
  403c39:	adc    al,0x6c
  403c3b:	retf   0xe281
  403c3e:	jns    0x403bc0
  403c40:	out    0x1c,eax
  403c42:	test   dl,dl
  403c44:	add    DWORD PTR [ecx+0x572cef5c],edx
  403c4a:	retf   
  403c4b:	mov    ds:0x27ce32f3,eax
  403c50:	sub    eax,0x5a361710
  403c55:	bound  edx,QWORD PTR [ebx-0x1a448746]
  403c5b:	stc    
  403c5c:	cmc    
  403c5d:	mov    ebp,0xe62fc6f9
  403c62:	aam    0x83
  403c64:	int    0xb
  403c66:	xchg   esp,eax
  403c67:	sub    al,0xd5
  403c6a:	mov    cl,0xc0
  403c6c:	mov    ?,WORD PTR [edx-0xe]
  403c6f:	sbb    DWORD PTR [ebx-0x29dc3c01],ebx
  403c75:	cdq    
  403c76:	neg    al
  403c78:	xchg   BYTE PTR [ebx],ah
  403c7a:	adc    ch,BYTE PTR [edx+0x60]
  403c7d:	adc    DWORD PTR fs:[edi+0x67],ecx
  403c81:	dec    ecx
  403c82:	gs xchg esi,eax
  403c84:	inc    ebp
  403c85:	xlat   BYTE PTR ds:[ebx]
  403c86:	pop    edi
  403c87:	fidiv  WORD PTR [ebp-0x54]
  403c8a:	jno    0x403c2f
  403c8c:	aam    0x44
  403c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8f:	sub    al,0xce
  403c91:	js     0x403c8e
  403c93:	stos   BYTE PTR es:[edi],al
  403c94:	adc    esi,0xffffffd5
  403c97:	outs   dx,BYTE PTR ds:[esi]
  403c98:	pop    ss
  403c99:	aad    0xd6
  403c9b:	loope  0x403ce2
  403c9d:	nop
  403c9e:	xlat   BYTE PTR ds:[ebx]
  403c9f:	dec    BYTE PTR [edx]
  403ca1:	ds lock mov ah,0x24
  403ca5:	add    eax,DWORD PTR fs:[ecx]
  403ca8:	xchg   ebx,eax
  403ca9:	gs fcomip st,st(5)
  403cac:	popa   
  403cad:	push   gs
  403caf:	xor    BYTE PTR [edi],bh
  403cb1:	pushf  
  403cb2:	(bad)  
  403cb3:	retf   
  403cb4:	fs sub al,0x1c
  403cb7:	or     dh,BYTE PTR [eax]
  403cb9:	aaa    
  403cba:	adc    eax,0xa303689f
  403cbf:	outs   dx,BYTE PTR ds:[esi]
  403cc0:	cdq    
  403cc1:	addr16 jno 0x403cfd
  403cc4:	or     BYTE PTR [eax+0x2],bh
  403cc7:	jle    0x403caa
  403cc9:	ret    
  403cca:	je     0x403cca
  403ccc:	pop    edx
  403ccd:	push   cs
  403cce:	(bad)  
  403ccf:	push   ecx
  403cd0:	xchg   edi,eax
  403cd2:	(bad)  
  403cd3:	jno    0x403cbd
  403cd5:	cmc    
  403cd6:	jmp    0x403c8a
  403cd8:	push   es
  403cd9:	in     al,dx
  403cda:	mov    esp,0xe68ec47b
  403cdf:	data16 jae 0x403c94
  403ce2:	jbe    0x403ce9
  403ce4:	dec    ebx
  403ce5:	pop    ds
  403ce6:	mov    BYTE PTR [eax],cl
  403ce8:	add    eax,DWORD PTR [edi]
  403cea:	aam    0x53
  403cec:	aad    0xda
  403cee:	dec    eax
  403cef:	retf   
  403cf0:	jnp    0x403cc5
  403cf2:	cmp    DWORD PTR [ecx+0x5e2e3c52],ebx
  403cf8:	out    0x58,al
  403cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cfb:	out    0xe2,al
  403cfd:	fadd   st,st(3)
  403cff:	sub    DWORD PTR fs:0x48ababe8,ecx
  403d06:	je     0x403d50
  403d08:	pop    ss
  403d09:	push   edi
  403d0a:	leave  
  403d0b:	mov    esi,0xf6b6faaf
  403d10:	xchg   ecx,eax
  403d11:	(bad)  
  403d13:	push   es
  403d14:	leave  
  403d15:	aad    0x20
  403d17:	push   esi
  403d18:	cdq    
  403d19:	mov    al,ds:0xb215337b
  403d1e:	(bad)  
  403d1f:	xlat   BYTE PTR ds:[ebx]
  403d20:	jge    0x403d11
  403d22:	into   
  403d23:	ds or  al,0x78
  403d26:	jne    0x403d43
  403d28:	adc    al,0xa5
  403d2a:	pusha  
  403d2b:	mov    ch,0x63
  403d2d:	(bad)  
  403d2f:	clc    
  403d30:	cmp    esp,DWORD PTR [edi+0x6a3a3bf5]
  403d36:	out    0xeb,eax
  403d38:	jp     0x403d8d
  403d3a:	mov    esp,ss
  403d3c:	xor    eax,0xcfac7839
  403d41:	and    BYTE PTR ds:0x8f0d7325,ah
  403d47:	or     al,0x97
  403d49:	out    0x61,al
  403d4b:	lods   al,BYTE PTR ds:[esi]
  403d4c:	inc    esp
  403d4d:	(bad)  
  403d4f:	fldcw  WORD PTR [edi+0x7e93c201]
  403d55:	jbe    0x403d6e
  403d57:	icebp  
  403d58:	pop    ecx
  403d59:	mov    al,ds:0x470b15e1
  403d5e:	fsubr  QWORD PTR [ecx+0x4f34e336]
  403d64:	mov    ah,BYTE PTR [edi]
  403d66:	xchg   ebx,eax
  403d67:	mov    esi,0x557c6a0c
  403d6c:	sbb    bh,bh
  403d6e:	lea    ebp,[ecx-0x11aac65a]
  403d74:	and    al,BYTE PTR [edx+0x9]
  403d77:	int    0x9f
  403d79:	and    dl,BYTE PTR [eax+esi*1-0xed846d6]
  403d80:	jg     0x403dff
  403d82:	and    eax,0xec4729f6
  403d87:	sub    ecx,0x30d04477
  403d8d:	push   0x2d
  403d8f:	fwait
  403d90:	sub    BYTE PTR [edi-0x2b],dh
  403d93:	adc    BYTE PTR [eax+edi*1+0x78a38313],cl
  403d9a:	loope  0x403dc6
  403d9c:	sbb    al,0x9a
  403d9e:	outs   dx,DWORD PTR ds:[esi]
  403d9f:	fcomp  QWORD PTR [eax-0x6b]
  403da2:	or     BYTE PTR [ecx-0xba5d096],0xd9
  403da9:	adc    eax,0x2c5054c5
  403dae:	push   ds
  403daf:	inc    esp
  403db0:	sbb    DWORD PTR [ebp+0xc1c88bc],edi
  403db6:	(bad)  
  403db8:	cli    
  403db9:	push   ebx
  403dba:	test   ah,dl
  403dbc:	cmp    esi,DWORD PTR [edx+0x3fe94285]
  403dc2:	mov    ds:0xe88761a9,eax
  403dc7:	inc    edx
  403dc8:	jae    0x403d54
  403dca:	out    0xf7,eax
  403dcc:	sar    BYTE PTR [ecx],cl
  403dce:	inc    ebp
  403dcf:	mov    esp,0x2fb1eb30
  403dd4:	and    bh,0x6d
  403dd7:	fistp  DWORD PTR [ebx-0x80]
  403dda:	test   eax,0x62f88e4f
  403ddf:	jne    0x403dc1
  403de1:	test   BYTE PTR [ecx-0x123a8a24],dh
  403de7:	pop    ss
  403de8:	mov    eax,0xd08154f2
  403ded:	test   eax,0x600784a4
  403df2:	ins    BYTE PTR es:[edi],dx
  403df3:	inc    esi
  403df4:	mov    esi,0xefe1649c
  403df9:	and    al,0xc0
  403dfb:	pop    es
  403dfc:	ror    DWORD PTR [edx+0x31652b96],cl
  403e02:	or     ebp,edx
  403e04:	cmp    ebx,edi
  403e06:	jp     0x403e56
  403e08:	fmul   DWORD PTR [ecx+0x1e]
  403e0b:	add    DWORD PTR [bp+di+0x845],ecx
  403e10:	mov    ecx,DWORD PTR [ebp-0x8]
  403e13:	xor    eax,esi
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x69dd8593
  403e30:	outs   dx,BYTE PTR ds:[esi]
  403e31:	sub    DWORD PTR [eax],0x18
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403df6
  403e3c:	jne    0x403e42
  403e3e:	pop    es
  403e3f:	loop   0x403e74
  403e41:	test   DWORD PTR [eax],eax
  403e43:	or     ebx,edi
  403e45:	push   edx
  403e46:	mov    BYTE PTR [esi-0x14],ch
  403e49:	mov    ebx,0x97336faa
  403e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e4f:	mov    ah,0x76
  403e51:	push   0x30
  403e53:	and    ah,BYTE PTR [eax]
  403e55:	cmp    eax,0x1a8e803d
  403e5a:	dec    esp
  403e5b:	add    eax,0xee10915
  403e60:	repnz mov cl,0xee
  403e63:	fwait
  403e64:	xor    BYTE PTR ds:0x48f783c8,ch
  403e6a:	shl    DWORD PTR [eax-0x7e5fc666],0x2b
  403e71:	push   0x64
  403e73:	cmp    DWORD PTR [edi+ecx*4-0x30db6f7d],0x6de86dab
  403e7e:	ja     0x403eb9
  403e80:	lods   eax,DWORD PTR ds:[esi]
  403e81:	jne    0x403e40
  403e83:	or     dl,BYTE PTR [edi+eax*4+0x64]
  403e87:	push   esi
  403e88:	cli    
  403e89:	inc    edi
  403e8a:	cmp    BYTE PTR [ecx],dl
  403e8c:	outs   dx,BYTE PTR ds:[esi]
  403e8d:	push   ecx
  403e8e:	sub    esi,DWORD PTR [eax+0x310fadf4]
  403e94:	outs   dx,BYTE PTR ds:[esi]
  403e95:	push   edx
  403e96:	or     ebx,DWORD PTR [edx+eax*2-0x4504ea3f]
  403e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e9e:	ss inc ebp
  403ea0:	aad    0x96
  403ea2:	stos   DWORD PTR es:[edi],eax
  403ea3:	sar    BYTE PTR [edi-0x11b578c5],cl
  403ea9:	ja     0x403ef0
  403eab:	jae    0x403ec1
  403ead:	int    0x87
  403eaf:	jp     0x403e3d
  403eb1:	pusha  
  403eb2:	mov    esi,0xb410d1ad
  403eb7:	dec    esi
  403eb8:	cld    
  403eb9:	loope  0x403e99
  403ebb:	jl     0x403ec9
  403ebd:	xor    ebp,DWORD PTR [ebx+ebp*8-0x649b5d10]
  403ec4:	mov    bh,0x6d
  403ec6:	iret   
  403ec7:	mov    dh,0x3c
  403ec9:	cwde   
  403eca:	nop
  403ecb:	jp     0x403eeb
  403ecd:	fstp   QWORD PTR [edx+0x54b63add]
  403ed3:	xchg   DWORD PTR [ebx+ecx*1+0x19],edi
  403ed7:	push   ss
  403ed8:	xor    DWORD PTR [ebp-0x46],ebx
  403edb:	pop    ds
  403edc:	sahf   
  403edd:	inc    ecx
  403ede:	fdivr  QWORD PTR [edi+0x172d15e8]
  403ee4:	mov    fs,WORD PTR [ebx+0x26]
  403ee7:	(bad)  
  403ee8:	call   0x9f2b:0xb74e3293
  403eef:	and    DWORD PTR [esi-0x4],0x2c1885a6
  403ef6:	pop    gs
  403ef8:	icebp  
  403ef9:	stos   DWORD PTR es:[edi],eax
  403efa:	and    al,0x6b
  403efc:	out    0x95,eax
  403efe:	add    edx,DWORD PTR [esp+ebx*1]
  403f01:	pop    eax
  403f02:	sub    BYTE PTR [esi+0x42],cl
  403f05:	or     cl,ah
  403f07:	mov    WORD PTR [eax],es
  403f09:	jecxz  0x403f15
  403f0b:	imul   edi,esp,0x2d
  403f0e:	jmp    0x81b5:0x80b07c8d
  403f15:	out    0x26,eax
  403f17:	inc    edi
  403f18:	or     DWORD PTR [eax+0x65],ecx
  403f1b:	xor    dl,cl
  403f1d:	add    al,0x69
  403f1f:	scas   eax,DWORD PTR es:[edi]
  403f20:	(bad)  
  403f21:	(bad)  
  403f22:	gs ja  0x403ebd
  403f25:	shr    DWORD PTR [esi+ebp*2],0xcf
  403f29:	ret    0x66c9
  403f2c:	push   esp
  403f2d:	repnz cmp esp,esi
  403f30:	cld    
  403f31:	enter  0x9cd,0x56
  403f35:	test   eax,0x7469ad7a
  403f3a:	or     al,0xee
  403f3c:	out    dx,eax
  403f3d:	lea    edi,[eax+0x28]
  403f40:	ins    BYTE PTR es:[edi],dx
  403f41:	in     al,dx
  403f42:	push   edx
  403f43:	xchg   ecx,eax
  403f44:	aaa    
  403f45:	adc    eax,0x9efd2980
  403f4a:	lahf   
  403f4b:	lahf   
  403f4c:	fimul  WORD PTR [eax+0x70fd1e72]
  403f52:	popf   
  403f53:	enter  0x3b1e,0xb9
  403f57:	add    al,0x21
  403f59:	cmp    DWORD PTR ds:[esi+0x52],esi
  403f5d:	or     eax,0x2f3bf45b
  403f62:	shr    ebp,0x95
  403f65:	jns    0x403f10
  403f67:	arpl   WORD PTR [esi-0x11aa3bb3],bp
  403f6d:	arpl   WORD PTR [ecx-0x13],bp
  403f70:	outs   dx,BYTE PTR ds:[esi]
  403f71:	jae    0x403fc0
  403f73:	xchg   ecx,eax
  403f74:	and    BYTE PTR [esi+0x3f],al
  403f77:	bnd jl 0x403ff3
  403f7a:	pushf  
  403f7b:	mov    cl,BYTE PTR [ecx-0x6e]
  403f7e:	xchg   edx,eax
  403f7f:	pop    ecx
  403f80:	fcomp  DWORD PTR ds:0x84655fd1
  403f86:	add    cl,BYTE PTR [ecx+0x66bc5089]
  403f8c:	xchg   DWORD PTR [ecx-0x6e],eax
  403f8f:	push   cs
  403f90:	(bad)  
  403f91:	js     0x403f45
  403f93:	test   al,0x49
  403f95:	lods   al,BYTE PTR ds:[esi]
  403f96:	cmc    
  403f97:	(bad)  
  403f98:	push   ecx
  403f99:	rcr    BYTE PTR [eax+0x1],cl
  403f9c:	or     BYTE PTR [eax+0x30],0xc7
  403fa0:	sub    bl,0xa1
  403fa3:	(bad)  [esi-0x615b4f0c]
  403faa:	jno    0x403f4e
  403fac:	pop    ecx
  403fad:	and    BYTE PTR [ebx+0x6f],0xae
  403fb1:	aad    0x11
  403fb3:	pusha  
  403fb4:	push   es
  403fb5:	cmc    
  403fb6:	in     eax,dx
  403fb7:	aaa    
  403fb8:	sub    edi,0xfffffff7
  403fbb:	mov    DWORD PTR [ebx-0x3c13512],0xbb2a4a10
  403fc5:	clc    
  403fc6:	sub    BYTE PTR [edi+0x3a],0x9f
  403fca:	mov    ds:0xbdf145a5,al
  403fcf:	int    0x4f
  403fd1:	popf   
  403fd2:	aad    0x49
  403fd4:	mov    ebx,0xd56ed24e
  403fd9:	push   0xcda5443a
  403fde:	mov    ebx,0xcf81b413
  403fe3:	ficomp WORD PTR [ebp+0x38]
  403fe6:	arpl   WORD PTR [edx],cx
  403fe8:	push   cs
  403fe9:	pop    ebp
  403fea:	jb     0x403fa2
  403fec:	aad    0x81
  403fee:	jne    0x403fa6
  403ff0:	out    dx,eax
  403ff1:	fwait
  403ff2:	ss gs jmp 0xc3d59af5
  403ff9:	mov    edi,0x389b19fe
  403ffe:	pop    ebx
  403fff:	mov    eax,ds:0xe5b41337
  404004:	mov    ecx,0x89f9a155
  404009:	cmp    BYTE PTR [eax+0x3],bh
  40400c:	cdq    
  40400d:	mov    DWORD PTR ds:0x13c50c0d,ebp
  404013:	sar    DWORD PTR [edi+0x36],1
  404016:	mov    gs,WORD PTR ds:0xb717112d
  40401c:	mov    BYTE PTR [ebx-0x45],al
  40401f:	fcomp  DWORD PTR ds:0xfe9bd6ca
  404025:	scas   eax,DWORD PTR es:[edi]
  404026:	add    BYTE PTR [eax-0xb3daf25],cl
  40402c:	gs jbe 0x404011
  40402f:	jp     0x40409a
  404031:	pop    ebp
  404032:	adc    al,0x51
  404034:	out    0x3f,eax
  404036:	xchg   esp,eax
  404037:	push   0x26
  404039:	data16 in al,0x96
  40403c:	mov    dl,0xf
  40403e:	nop
  40403f:	xchg   esi,eax
  404040:	inc    ecx
  404041:	in     al,dx
  404042:	aam    0xed
  404044:	out    dx,eax
  404045:	cli    
  404046:	or     dh,BYTE PTR [ecx-0x769d58c5]
  40404c:	jo     0x40409c
  40404e:	jns    0x4040a1
  404050:	jno    0x404073
  404052:	arpl   WORD PTR [ecx-0xdc531d8],cx
  404058:	pop    ds
  404059:	lds    eax,FWORD PTR [ecx-0x65bb5716]
  40405f:	jno    0x404034
  404061:	jbe    0x404075
  404063:	ss loope 0x404053
  404066:	mov    esi,DWORD PTR [edx]
  404068:	xor    BYTE PTR [esi+0x39375336],ch
  40406e:	popf   
  40406f:	fld    DWORD PTR [edi]
  404071:	ss addr16 push ebp
  404074:	js     0x4040cc
  404076:	jge    0x4040ab
  404078:	xchg   ecx,eax
  404079:	ficom  DWORD PTR [edx+0x35a643f9]
  40407f:	ins    DWORD PTR es:[edi],dx
  404080:	mul    BYTE PTR [ebp+0x328df843]
  404086:	cmp    eax,0xd0736923
  40408b:	stos   BYTE PTR es:[edi],al
  40408c:	ins    DWORD PTR es:[edi],dx
  40408d:	fdivr  QWORD PTR [ebp+0x75]
  404090:	push   ebx
  404092:	xchg   edi,esp
  404094:	push   edi
  404095:	mov    eax,0x3e44d690
  40409a:	loopne 0x40404d
  40409c:	and    al,0x3
  40409e:	stos   DWORD PTR es:[edi],eax
  40409f:	les    esi,FWORD PTR [ecx+0x5f]
  4040a2:	xchg   esp,eax
  4040a3:	xor    edi,eax
  4040a5:	cdq    
  4040a6:	xchg   esp,eax
  4040a7:	test   al,0xf3
  4040a9:	and    DWORD PTR [edx],esi
  4040ab:	ins    BYTE PTR es:[edi],dx
  4040ac:	fidiv  WORD PTR [eax+0x1d10afad]
  4040b2:	retf   0x1a74
  4040b5:	mov    bh,0xe1
  4040b7:	mov    ds:0xa22d94a8,eax
  4040bc:	xchg   edx,eax
  4040bd:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  4040c4:	jmp    0x404380
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0x97f7e6c1
  4040e3:	scas   eax,DWORD PTR es:[edi]
  4040e4:	cmp    eax,0x78269e3f
  4040e9:	js     0x4040e9
  4040eb:	jle    0x404165
  4040ed:	js     0x40408d
  4040ef:	pop    esp
  4040f0:	push   ss
  4040f1:	and    bh,bh
  4040f3:	js     0x40415e
  4040f5:	pop    ss
  4040f6:	lahf   
  4040f7:	inc    esp
  4040f8:	dec    ebx
  4040f9:	aad    0x49
  4040fb:	push   esi
  4040fc:	push   ss
  4040fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040fe:	mov    ebp,0xe3c8cde1
  404103:	or     BYTE PTR [eax+0x4a8c47f0],dl
  404109:	ins    DWORD PTR es:[edi],dx
  40410a:	test   al,0x72
  40410c:	sbb    edi,DWORD PTR [eax+0x61776197]
  404112:	inc    esi
  404113:	inc    edx
  404114:	inc    esp
  404115:	fsub   st(4),st
  404117:	leave  
  404118:	(bad)  
  404119:	fistp  QWORD PTR [edi]
  40411b:	push   ds
  40411c:	lahf   
  40411d:	sub    eax,0x33cfd0bf
  404122:	gs dec ebx
  404124:	jae    0x40413c
  404126:	hlt    
  404127:	sbb    ebp,ebx
  404129:	in     eax,0xad
  40412b:	push   edx
  40412c:	gs sahf 
  40412e:	pop    ss
  40412f:	enter  0xd996,0x8e
  404133:	add    al,0xf4
  404135:	mov    ah,0xbd
  404137:	sbb    cl,dl
  404139:	xor    BYTE PTR [ebp-0x249728fc],cl
  40413f:	or     eax,0x795f0e18
  404144:	mov    al,ds:0x4e1cb60
  404149:	pop    esi
  40414a:	imul   ebx,DWORD PTR [edx],0xffffffa2
  40414d:	mov    esp,0x833d36c0
  404152:	jge    0x40415b
  404154:	and    al,0xca
  404156:	mov    bh,0xa0
  404158:	cmc    
  404159:	sub    BYTE PTR [ebp-0x18d22a06],al
  40415f:	jo     0x40417f
  404161:	imul   ebx,edx,0x78
  404164:	aad    0x70
  404166:	test   BYTE PTR [esi+0x65567329],cl
  40416c:	repnz daa 
  40416e:	mov    cl,0x58
  404170:	lods   eax,DWORD PTR ds:[esi]
  404171:	sub    ebx,DWORD PTR [ecx+0x30]
  404174:	(bad)  
  404175:	jg     0x4041c7
  404177:	in     al,0x13
  404179:	jl     0x4041d1
  40417b:	icebp  
  40417c:	pusha  
  40417d:	into   
  40417e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40417f:	inc    ebx
  404180:	stos   BYTE PTR es:[edi],al
  404181:	jb     0x404139
  404183:	int3   
  404184:	hlt    
  404185:	dec    edx
  404186:	dec    edx
  404187:	inc    edi
  404188:	test   al,0x71
  40418a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40418b:	(bad)  
  40418c:	jno    0x40413a
  40418e:	pop    ebx
  40418f:	call   0x346:0xc6476e36
  404196:	pop    es
  404197:	stos   DWORD PTR es:[edi],eax
  404198:	loopne 0x4041f2
  40419a:	cmp    eax,0x8284a5da
  40419f:	out    dx,eax
  4041a0:	jmp    0x5f358253
  4041a5:	lock test BYTE PTR [edi],bh
  4041a8:	mov    esi,0x85260f76
  4041ad:	rol    esi,1
  4041af:	aaa    
  4041b0:	xlat   BYTE PTR ds:[ebx]
  4041b1:	adc    esi,edi
  4041b3:	shl    ah,1
  4041b5:	nop
  4041b6:	in     eax,dx
  4041b7:	adc    bh,BYTE PTR [esi+0x29]
  4041ba:	fild   WORD PTR [esi+0x67]
  4041bd:	push   esp
  4041be:	les    edi,FWORD PTR [ecx]
  4041c0:	mov    cl,0x70
  4041c2:	sbb    eax,0x68f220a4
  4041c7:	fidivr DWORD PTR [ebx-0x8]
  4041ca:	arpl   WORD PTR [ebp+0x5a],bp
  4041cd:	imul   esp,DWORD PTR [ebx-0x29cb76c8],0x75
  4041d4:	dec    esi
  4041d5:	mov    eax,0xc99ed850
  4041da:	fld    QWORD PTR [ecx+0x5674cb3f]
  4041e0:	fs (bad) 
  4041e2:	out    0xc,eax
  4041e4:	sbb    eax,DWORD PTR [esi-0x58]
  4041e7:	neg    BYTE PTR [edi-0x2d1b7280]
  4041ed:	fnsave [ecx+0x5b3208f4]
  4041f3:	gs sub al,0xc6
  4041f6:	sbb    DWORD PTR [eax+0x4e],edi
  4041f9:	int3   
  4041fa:	push   ecx
  4041fb:	lea    esi,[ebx+0x6]
  4041fe:	shr    DWORD PTR [edx-0x6c5bc49c],cl
  404204:	inc    edx
  404205:	pop    ds
  404206:	stc    
  404207:	xor    ah,ch
  404209:	adc    eax,0x9f95b4bd
  40420e:	sti    
  40420f:	cdq    
  404210:	jne    0x4041ee
  404212:	push   edi
  404213:	inc    edi
  404214:	xor    BYTE PTR [ebx-0xad2a3b3],al
  40421a:	jns    0x4041bb
  40421c:	call   0xe2e9:0x79c7535a
  404223:	daa    
  404224:	xor    ah,bh
  404226:	pop    edi
  404227:	fst    QWORD PTR ds:0x1f938c91
  40422d:	mov    ch,0x28
  40422f:	sti    
  404230:	push   0x210d9700
  404235:	out    dx,al
  404236:	loop   0x4041d5
  404238:	mov    bl,0xfa
  40423a:	fadd   DWORD PTR [edi-0x68]
  40423d:	dec    edx
  40423e:	cmp    esi,DWORD PTR [ebp+esi*4+0x4bee2614]
  404245:	cmp    DWORD PTR [ecx+0x43c93779],0x22
  40424c:	mov    eax,ds:0x90daed7c
  404251:	sub    ebx,ebx
  404253:	imul   ebp,DWORD PTR [ecx-0x64],0x27255c9
  40425a:	xchg   ebp,eax
  40425b:	into   
  40425c:	xchg   edi,eax
  40425d:	mov    edx,0xbab598ef
  404262:	in     eax,0x63
  404264:	in     al,dx
  404265:	mov    ecx,0x882f0bb2
  40426a:	xchg   esi,eax
  40426b:	jp     0x404294
  40426d:	mov    WORD PTR [eax+0xa],gs
  404270:	push   eax
  404271:	or     DWORD PTR [edi],edi
  404273:	out    0xfe,eax
  404275:	add    esp,esi
  404277:	sub    bh,ah
  404279:	js     0x404239
  40427b:	sbb    eax,0xd6581fad
  404280:	int    0x3e
  404282:	and    eax,0x197c192
  404287:	push   edx
  404288:	jge    0x4042bc
  40428a:	mov    ebx,DWORD PTR [edx+0x401b1944]
  404290:	mov    al,0x75
  404292:	push   ebp
  404293:	arpl   WORD PTR [edx],di
  404295:	mov    WORD PTR [eax+ebp*1+0x55],ss
  404299:	ja     0x404280
  40429b:	pop    es
  40429c:	xor    BYTE PTR [ebp*4-0x63a4f053],dh
  4042a3:	loope  0x40431c
  4042a5:	dec    ebx
  4042a6:	in     eax,0x63
  4042a8:	pop    edx
  4042a9:	cmp    BYTE PTR [esi-0x5b532c00],0xf7
  4042b0:	leave  
  4042b1:	cli    
  4042b2:	or     al,0x58
  4042b4:	aas    
  4042b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b6:	sti    
  4042b7:	(bad)  
  4042b8:	call   0x3b04dce5
  4042bd:	int    0xc1
  4042bf:	inc    eax
  4042c0:	xor    DWORD PTR [ebp+0x7d327707],esp
  4042c6:	jmp    0x6c034f77
  4042cb:	push   cs
  4042cc:	lods   eax,DWORD PTR ds:[esi]
  4042cd:	ins    BYTE PTR es:[edi],dx
  4042ce:	retf   
  4042cf:	sub    al,0xd
  4042d1:	mov    eax,0x4b43b060
  4042d6:	xchg   esp,eax
  4042d7:	shr    bh,0xb4
  4042da:	jecxz  0x4042a3
  4042dc:	add    eax,DWORD PTR ds:0xc7080335
  4042e2:	fisttp DWORD PTR [eax+esi*8]
  4042e5:	mov    ds:0x469dac15,eax
  4042ea:	je     0x4042c9
  4042ec:	vmwrite edx,DWORD PTR [ebp-0x4f]
  4042f0:	lahf   
  4042f1:	push   ebx
  4042f2:	jmp    0xa127:0x402bc02e
  4042f9:	imul   DWORD PTR ds:0x283141b2
  4042ff:	add    BYTE PTR [ecx+0x45cd7659],bh
  404305:	mov    dl,0xd0
  404307:	mov    ?,WORD PTR [ecx]
  404309:	inc    ebx
  40430a:	lods   eax,DWORD PTR ds:[esi]
  40430b:	jl     0x4042ba
  40430d:	add    edi,DWORD PTR [eax+0x1c9a1ef1]
  404313:	push   esp
  404314:	sbb    dh,BYTE PTR [esi]
  404316:	retf   0x2199
  404319:	sahf   
  40431a:	jge    0x40432d
  40431c:	pop    ds
  40431d:	or     BYTE PTR [ecx],0xa3
  404320:	sbb    ebx,DWORD PTR [edx]
  404322:	call   0xa2e4579d
  404327:	adc    eax,0xa1efe790
  40432c:	inc    esi
  40432d:	add    DWORD PTR [esi+edx*1+0x415530d1],0x7c4d811b
  404338:	xchg   ebp,eax
  404339:	es (bad) 
  40433b:	shl    BYTE PTR [ecx-0x56aa7bad],cl
  404341:	cmp    al,0xa7
  404343:	push   eax
  404344:	pop    eax
  404345:	aaa    
  404346:	lahf   
  404347:	sub    al,0x10
  404349:	fidivr DWORD PTR [ebp+0x48bacc96]
  40434f:	imul   esi,DWORD PTR [esi+0x6e],0x9b2aff45
  404356:	and    ch,ah
  404358:	and    cl,BYTE PTR ds:0xab0f9307
  40435e:	add    bh,ch
  404360:	pop    esi
  404361:	es imul esi,ebx,0x1
  404365:	shl    DWORD PTR [ebx-0x1f],1
  404368:	add    eax,0x207505b1
  40436d:	mov    ah,0x66
  40436f:	adc    eax,0x458b0889
  404374:	or     al,0x8b
  404376:	inc    ebp
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a79d
  4043aa:	add    DWORD PTR ds:0x42a781,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7d5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7d5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7d5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7d5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7d5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a865
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	cmp    ebp,DWORD PTR [esi]
  40441b:	arpl   WORD PTR [edx+0x1c],si
  40441e:	sub    edi,DWORD PTR [eax+0x78]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x4043dd
  404426:	xor    BYTE PTR [ebx-0x75],bh
  404429:	js     0x4043ff
  40442b:	push   eax
  40442c:	mov    al,0xb1
  40442e:	push   edx
  40442f:	mov    ds:0xe87130a2,al
  404434:	mov    esp,DWORD PTR es:[edx-0x70]
  404438:	sbb    BYTE PTR [esi],bh
  40443a:	or     esp,ebx
  40443c:	sub    al,0xa6
  40443e:	aas    
  40443f:	aas    
  404440:	sbb    edi,DWORD PTR [edi+0x67901acb]
  404446:	stc    
  404447:	ins    DWORD PTR es:[edi],dx
  404448:	add    eax,0x552fb2d7
  40444d:	leave  
  40444e:	nop
  40444f:	xor    BYTE PTR [ebp-0x37],dl
  404452:	sbb    al,0x42
  404454:	push   edx
  404455:	inc    ecx
  404456:	stos   DWORD PTR es:[edi],eax
  404457:	mov    BYTE PTR [esi],0xd0
  40445a:	cmp    al,ah
  40445c:	ror    DWORD PTR [esi],cl
  40445e:	test   al,0x7
  404460:	jle    0x404454
  404462:	into   
  404463:	dec    eax
  404464:	iret   
  404465:	mov    ds,WORD PTR [ebx+0x79edf649]
  40446b:	loope  0x4043f6
  40446d:	jmp    0x2674bbd6
  404472:	add    esp,DWORD PTR [ebp-0x45fe840]
  404478:	js     0x40443a
  40447a:	pop    ecx
  40447b:	jnp    0x404473
  40447d:	push   esi
  40447e:	jne    0x404409
  404480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404481:	add    esp,edi
  404483:	xchg   esp,eax
  404484:	push   ds
  404485:	pop    edi
  404486:	push   esi
  404487:	push   ebx
  404488:	fistp  WORD PTR [eax-0x75706cc6]
  40448e:	and    ch,bh
  404490:	addr16 or esp,esp
  404493:	test   al,0x82
  404495:	pop    ds
  404496:	or     BYTE PTR [edi-0x4aa19a07],0x4a
  40449d:	stos   BYTE PTR es:[edi],al
  40449e:	jnp    0x4044cf
  4044a0:	cs add dh,dh
  4044a3:	pop    ebx
  4044a4:	adc    ebp,DWORD PTR [ecx+0x10d968c]
  4044aa:	push   ebx
  4044ab:	xchg   ecx,eax
  4044ac:	std    
  4044ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ae:	dec    ebx
  4044af:	mov    dh,0x3
  4044b1:	xchg   ecx,eax
  4044b2:	cs inc eax
  4044b4:	xchg   esp,eax
  4044b5:	outs   dx,DWORD PTR ds:[esi]
  4044b6:	xchg   esp,eax
  4044b7:	jmp    0x1af1:0x35376944
  4044be:	cmp    BYTE PTR [esi+0x59],dh
  4044c1:	adc    DWORD PTR [ebx+edi*2+0x645c3b6c],0xfffffff6
  4044c9:	mov    WORD PTR [eax],?
  4044cb:	mov    ebp,0x1118152
  4044d0:	sbb    DWORD PTR [ebx-0x2f2fc26f],esi
  4044d6:	cmp    dh,BYTE PTR [ebx]
  4044d8:	mov    ch,0xaf
  4044da:	data16 cmp ch,BYTE PTR [ecx]
  4044dd:	es fwait
  4044df:	shl    DWORD PTR fs:[esi+0x1f1025ea],cl
  4044e6:	lea    ecx,[edx-0x49567f80]
  4044ec:	aam    0x52
  4044ee:	ss ins BYTE PTR es:[edi],dx
  4044f0:	fld    DWORD PTR [esi+0x5ab6dc5e]
  4044f6:	and    al,0x5f
  4044f8:	dec    ebx
  4044f9:	mov    esp,0x1ecee4a1
  4044fe:	mov    bl,ah
  404500:	xchg   ebp,eax
  404501:	push   ss
  404502:	mov    ch,0x38
  404504:	rcr    DWORD PTR ds:0x6f1a0e3,1
  40450a:	or     al,0xfd
  40450c:	sbb    ebp,ebx
  40450e:	sbb    al,0xe1
  404510:	lock out 0xa6,al
  404513:	adc    edi,DWORD PTR [ebp-0x55]
  404516:	out    dx,al
  404517:	fxch   st(1)
  404519:	sub    al,0xdf
  40451b:	add    edx,esp
  40451d:	inc    edi
  40451e:	xchg   ebx,eax
  40451f:	add    eax,0xf283b5bd
  404524:	pushf  
  404525:	aaa    
  404526:	in     eax,0x33
  404528:	and    esp,esi
  40452a:	xor    ah,BYTE PTR [eax]
  40452c:	loop   0x404583
  40452e:	int3   
  40452f:	mov    esi,0x543461f3
  404534:	mov    ds:0x563e57fc,al
  404539:	lea    esp,[edx+0x691a343c]
  40453f:	pop    esp
  404540:	cmp    eax,0x303a80a4
  404545:	push   ebp
  404546:	rol    BYTE PTR [edx-0x6b],1
  404549:	leave  
  40454a:	push   0x301682d6
  40454f:	es enter 0xdfca,0xd9
  404554:	fwait
  404555:	jge    0x404556
  404557:	xchg   ecx,eax
  404558:	leave  
  404559:	push   es
  40455a:	test   al,0x5
  40455c:	push   ebp
  40455d:	loopne 0x404582
  40455f:	inc    eax
  404560:	add    DWORD PTR [ebp-0x7e],edx
  404563:	or     esp,DWORD PTR [ecx+0x10]
  404566:	jp     0x40458a
  404568:	push   0x6572114d
  40456d:	jp     0x404588
  40456f:	cld    
  404570:	lds    esp,FWORD PTR [eax]
  404572:	into   
  404573:	div    DWORD PTR [ebx-0x3d13cee]
  404579:	jge    0x4045bf
  40457b:	push   0x99f8b0bf
  404580:	mov    al,0xa8
  404582:	lods   al,BYTE PTR ds:[esi]
  404583:	pop    ebx
  404584:	dec    edx
  404585:	(bad)  
  404586:	or     eax,0xb3357096
  40458b:	push   ss
  40458c:	mov    ebp,DWORD PTR [ecx]
  40458e:	int3   
  40458f:	jns    0x4045ed
  404591:	xor    esi,DWORD PTR [esi]
  404593:	(bad)  
  404594:	ins    DWORD PTR es:[edi],dx
  404595:	aas    
  404596:	pop    ds
  404597:	and    cl,cl
  404599:	loop   0x404547
  40459b:	add    BYTE PTR [ecx+0x35b17ad5],0x62
  4045a2:	test   DWORD PTR [edi+eax*4],esi
  4045a5:	jle    0x40452a
  4045a7:	xor    eax,0x4100b353
  4045ac:	aad    0x9e
  4045ae:	rol    DWORD PTR [edi+0x58984a96],1
  4045b4:	dec    ecx
  4045b5:	or     dl,0x2c
  4045b8:	push   eax
  4045b9:	jnp    0x40456a
  4045bb:	out    0x67,al
  4045bd:	push   esp
  4045be:	call   0x69f945b1
  4045c3:	lods   eax,DWORD PTR ds:[esi]
  4045c4:	fsub   DWORD PTR [eax+edx*4-0x2b]
  4045c8:	inc    esi
  4045c9:	add    edi,ebp
  4045cb:	sub    al,0x54
  4045cd:	and    ch,al
  4045cf:	xor    eax,0xbce2b9a2
  4045d4:	inc    esi
  4045d5:	js     0x404611
  4045d7:	or     DWORD PTR [edx],ecx
  4045d9:	sub    bl,dl
  4045db:	add    al,0xe6
  4045dd:	out    0x3f,al
  4045df:	cmp    dh,al
  4045e1:	dec    esp
  4045e2:	dec    edx
  4045e3:	ret    0x9088
  4045e6:	inc    ebp
  4045e7:	call   0x59a9b4d6
  4045ec:	cmp    BYTE PTR [ebp+0x46],al
  4045ef:	pop    esi
  4045f0:	push   edi
  4045f1:	jg     0x404672
  4045f3:	dec    ecx
  4045f4:	imul   ebp,DWORD PTR [edi-0x4840e7d8],0x20
  4045fb:	adc    esp,esi
  4045fd:	cmp    al,BYTE PTR [esi+0x5b8acef7]
  404603:	into   
  404604:	jae    0x4045ea
  404606:	ror    BYTE PTR gs:[edx+0x27a16b9f],cl
  40460d:	scas   al,BYTE PTR es:[edi]
  40460e:	aaa    
  40460f:	loopne 0x404597
  404611:	retf   
  404612:	push   ds
  404613:	cs push ebp
  404615:	cmp    bl,dl
  404617:	inc    esp
  404618:	scas   eax,DWORD PTR es:[edi]
  404619:	in     eax,0x2d
  40461b:	aaa    
  40461c:	cwde   
  40461d:	scas   al,BYTE PTR es:[edi]
  40461e:	call   0xc80c:0x934e9244
  404625:	lds    ebx,FWORD PTR [ebx-0x20]
  404628:	jg     0x4045e4
  40462a:	jp     0x40462a
  40462c:	xor    eax,0xffffffd1
  40462f:	mov    al,ds:0x7f846fc0
  404634:	leave  
  404635:	xor    BYTE PTR [ecx+0x27],dh
  404638:	rcl    BYTE PTR [edi-0x6],cl
  40463b:	xor    al,0x7c
  40463d:	push   ebp
  40463e:	cwde   
  40463f:	inc    edx
  404640:	in     eax,dx
  404641:	aas    
  404642:	mov    cs:0xf06f728c,eax
  404648:	test   DWORD PTR [eax+esi*1],edx
  40464b:	add    ebp,edx
  40464d:	outs   dx,BYTE PTR ds:[esi]
  40464e:	loop   0x404601
  404650:	add    al,0xff
  404652:	sbb    al,0xe
  404654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404655:	jge    0x404643
  404657:	xor    eax,0x3fadb985
  40465c:	inc    ebp
  40465d:	and    DWORD PTR [ebx],edi
  40465f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404660:	frstor fs:[esi]
  404663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404664:	mov    ds:0x5178e3f4,al
  404669:	xchg   ecx,eax
  40466a:	or     DWORD PTR [ebp-0x70],ebx
  40466d:	dec    ebp
  40466e:	inc    edi
  40466f:	xchg   DWORD PTR [edi+0x1f],edx
  404672:	dec    ebp
  404673:	mov    ebx,0xf3930e44
  404678:	pop    ds
  404679:	(bad)  
  40467a:	push   ebx
  40467b:	xor    ax,0xa633
  40467f:	cli    
  404680:	rol    DWORD PTR [ecx],0x1e
  404683:	daa    
  404684:	cwde   
  404685:	xlat   BYTE PTR ds:[ebx]
  404686:	cwde   
  404687:	pop    ds
  404688:	js     0x404650
  40468a:	arpl   WORD PTR [edi],si
  40468c:	xchg   edi,eax
  40468d:	sbb    edi,DWORD PTR [edi-0x3f75b6c]
  404693:	pop    ecx
  404694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404695:	loop   0x404699
  404697:	cwde   
  404698:	sahf   
  404699:	ja     0x4046f3
  40469b:	fist   WORD PTR [edx+0x4c]
  40469e:	(bad)  
  40469f:	cdq    
  4046a0:	xchg   ecx,eax
  4046a1:	into   
  4046a2:	movd   DWORD PTR ds:0x9bc483cc,mm6
  4046a9:	or     al,0xa8
  4046ab:	xor    cl,BYTE PTR [ebx]
  4046ad:	js     0x404676
  4046af:	and    BYTE PTR [edx],cl
  4046b1:	mov    al,0xcf
  4046b3:	fmul   DWORD PTR [esi+0x22]
  4046b6:	jo     0x404667
  4046b8:	mov    BYTE PTR [ecx],ch
  4046ba:	ins    DWORD PTR es:[edi],dx
  4046bb:	std    
  4046bc:	popf   
  4046bd:	mov    eax,0xebda6077
  4046c2:	outs   dx,DWORD PTR ds:[esi]
  4046c3:	das    
  4046c4:	or     al,0x7c
  4046c6:	jne    0x40471f
  4046c8:	retf   
  4046c9:	sbb    al,0xd5
  4046cb:	mov    ecx,DWORD PTR [edi]
  4046cd:	popf   
  4046ce:	mov    esp,fs
  4046d0:	outs   dx,DWORD PTR ds:[esi]
  4046d1:	scas   eax,DWORD PTR es:[edi]
  4046d2:	out    dx,eax
  4046d3:	in     eax,dx
  4046d4:	push   esp
  4046d5:	cmp    ebp,DWORD PTR [ecx+ebp*4]
  4046d8:	popf   
  4046d9:	xchg   edi,eax
  4046da:	adc    al,0x2c
  4046dc:	aaa    
  4046dd:	mov    eax,0x6d8f1500
  4046e2:	pop    ebp
  4046e3:	xchg   ebx,eax
  4046e4:	in     eax,dx
  4046e5:	(bad)  
  4046e6:	adc    al,0x26
  4046e8:	dec    eax
  4046e9:	outs   dx,BYTE PTR ds:[esi]
  4046ea:	fisttp WORD PTR [eax]
  4046ec:	mov    ds,ebp
  4046ee:	lods   al,BYTE PTR gs:[esi]
  4046f0:	add    BYTE PTR [eax],ah
  4046f2:	call   0xe355e326
  4046f7:	and    DWORD PTR [esi-0x7f],edx
  4046fa:	and    eax,0x42a795
  4046ff:	add    BYTE PTR [eax],al
  404701:	add    BYTE PTR [eax],al
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a795
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a795,esi
  404715:	cmp    DWORD PTR ds:0x42a795,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a795,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a85d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa68
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x1a3a83de
  404770:	bound  ebp,QWORD PTR [ecx+esi*2]
  404773:	sub    DWORD PTR [eax+0x78],edi
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404761
  40477b:	mov    ds:0xde9882ac,al
  404780:	inc    ebp
  404781:	add    eax,DWORD PTR ds:0x9e48a1e9
  404787:	pop    esp
  404788:	scas   al,BYTE PTR es:[edi]
  404789:	add    eax,ecx
  40478b:	cdq    
  40478c:	mov    ds:0xd24d6a64,al
  404791:	mov    eax,0xfd756d80
  404796:	add    BYTE PTR [eax+0x55],bh
  404799:	xchg   esi,eax
  40479a:	sub    BYTE PTR [ebx+0x18],al
  40479d:	repz clc 
  40479f:	rol    BYTE PTR [eax],1
  4047a1:	or     BYTE PTR [esi+ebx*1+0x7d],ah
  4047a5:	sti    
  4047a6:	lods   eax,DWORD PTR ds:[esi]
  4047a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a8:	jne    0x404752
  4047aa:	add    eax,0x87bf50c5
  4047af:	adc    eax,0x19adcb4
  4047b4:	cs jp  0x40476a
  4047b7:	jns    0x40473b
  4047b9:	sar    DWORD PTR [ecx],cl
  4047bb:	mov    edx,0x626abc05
  4047c0:	mov    WORD PTR [edi-0x5a],gs
  4047c3:	push   ds
  4047c4:	cs pop ds
  4047c6:	adc    BYTE PTR [edx+eiz*2+0x68],dh
  4047ca:	pop    ss
  4047cb:	or     eax,DWORD PTR [edi]
  4047cd:	jge    0x4047e9
  4047cf:	sub    edx,DWORD PTR [eax+edx*8-0x1b7235c9]
  4047d6:	jns    0x4047bd
  4047d8:	xor    DWORD PTR cs:[eax],esp
  4047db:	std    
  4047dc:	mov    eax,0xcdc68fe8
  4047e1:	shl    BYTE PTR [edx+0x7304f11c],0x53
  4047e8:	cmp    al,0xf6
  4047ea:	lods   al,BYTE PTR ds:[esi]
  4047eb:	test   BYTE PTR es:[eax],bl
  4047ee:	pop    edi
  4047ef:	mov    ecx,0x7ccc58e8
  4047f4:	rcl    BYTE PTR [ecx],0x28
  4047f7:	(bad)  
  4047f8:	sbb    DWORD PTR [edi+ecx*2-0xa44ca6e],edx
  4047ff:	push   es
  404800:	dec    ebp
  404801:	shr    BYTE PTR [edi+eiz*1-0x9],1
  404805:	jnp    0x4047b6
  404807:	and    dl,BYTE PTR [ecx+0x5b]
  40480a:	cmp    DWORD PTR [edi+ecx*1-0x30],edx
  40480e:	pushw  es
  404810:	mov    ds:0x36639699,eax
  404815:	push   esp
  404816:	loope  0x4047c8
  404818:	neg    BYTE PTR [eax-0x4c]
  40481b:	xchg   esi,eax
  40481c:	retf   0x9f1c
  40481f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404820:	sbb    ecx,DWORD PTR cs:[eax-0x6dfa2f00]
  404827:	nop
  404828:	or     esp,DWORD PTR [ebx-0x840a05b]
  40482e:	test   eax,0x184d75ec
  404833:	fiadd  DWORD PTR ds:[eax+ebp*1]
  404837:	add    edi,eax
  404839:	aas    
  40483a:	xchg   ebp,eax
  40483b:	jnp    0x4047f9
  40483d:	dec    edx
  40483e:	mov    DWORD PTR [edi+0x48056f71],esi
  404844:	into   
  404845:	mov    dl,0x80
  404847:	hlt    
  404848:	test   bl,dl
  40484a:	int3   
  40484b:	xor    al,0xf8
  40484d:	jno    0x4047d9
  40484f:	(bad)  
  404850:	into   
  404851:	iret   
  404852:	sub    eax,0xd4ea4a37
  404857:	cmovno esi,DWORD PTR [edx+0x144fe5]
  40485e:	gs das 
  404860:	jmp    0x404858
  404862:	sub    dl,BYTE PTR [edi]
  404864:	jp     0x40482f
  404866:	and    DWORD PTR [edi-0x2e],ebx
  404869:	ja     0x404842
  40486b:	and    al,0x38
  40486d:	rol    DWORD PTR [esi-0x1a],cl
  404870:	xchg   DWORD PTR [esi-0x59],edi
  404873:	add    DWORD PTR [ebx+0x39b763f6],0xd32f6636
  40487d:	sub    ebp,DWORD PTR [esi-0x3d]
  404880:	das    
  404881:	xor    DWORD PTR [edx+0x29],ecx
  404884:	rcr    BYTE PTR [edi+0x112e6b5a],1
  40488a:	lea    eax,[ebp-0x6e1ddd65]
  404890:	scas   eax,DWORD PTR es:[edi]
  404891:	sti    
  404892:	sbb    eax,0x1c019d8d
  404897:	dec    eax
  404898:	loope  0x404871
  40489a:	inc    esp
  40489b:	xchg   ebp,eax
  40489c:	push   0xdcf3fa1a
  4048a1:	mov    al,ds:0x5368b16b
  4048a6:	add    dh,BYTE PTR [ecx-0x37227cff]
  4048ac:	pop    esi
  4048ad:	mov    ds:0xd63297c7,eax
  4048b2:	push   ebp
  4048b3:	push   ecx
  4048b4:	mov    ds:0x55bcadb4,eax
  4048b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ba:	mov    bh,0x86
  4048bc:	mov    ds:0x272eb83b,al
  4048c1:	loopne 0x4048aa
  4048c3:	(bad)  
  4048c4:	(bad)  
  4048c5:	cli    
  4048c6:	and    al,0x1f
  4048c8:	lahf   
  4048c9:	(bad)  
  4048ca:	xor    ecx,DWORD PTR es:[ebp+0x457192a]
  4048d1:	popa   
  4048d2:	ret    0x1e44
  4048d5:	xchg   ebp,eax
  4048d6:	push   ebx
  4048d7:	pop    esi
  4048d8:	les    esp,FWORD PTR [esi+0x5f]
  4048db:	push   ss
  4048dc:	and    al,0x12
  4048de:	sub    DWORD PTR [esi+0x4aaeae09],ebp
  4048e4:	mov    bl,0xc2
  4048e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e7:	call   0x7785:0x3a30be87
  4048ee:	call   0x69a32910
  4048f3:	mov    DWORD PTR [edi+0x26],esi
  4048f6:	test   eax,0x3e3991de
  4048fb:	or     eax,0x25eb3116
  404900:	sar    BYTE PTR ds:0x82747b5e,0x81
  404907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404908:	dec    esi
  404909:	fist   WORD PTR [ebp-0x16892135]
  40490f:	out    0xe2,eax
  404911:	push   ss
  404912:	out    dx,al
  404913:	xor    eax,DWORD PTR ds:[eax]
  404916:	(bad)  
  404917:	inc    edx
  404918:	ins    BYTE PTR es:[edi],dx
  404919:	mov    bl,0xa1
  40491b:	retf   0xcd47
  40491e:	xchg   ebp,eax
  40491f:	push   edi
  404920:	jmp    0x6a73:0x3c04ef9d
  404927:	jb     0x4048c0
  404929:	call   0x435f:0x96891d60
  404930:	popf   
  404931:	out    dx,al
  404932:	and    dl,BYTE PTR [ebx+0x19]
  404935:	jno    0x404905
  404937:	push   esp
  404938:	pushf  
  404939:	je     0x40494b
  40493b:	xchg   esi,eax
  40493c:	test   BYTE PTR [esi],0x1
  40493f:	fadd   DWORD PTR [edx]
  404941:	lahf   
  404942:	jb     0x40495a
  404944:	leave  
  404945:	daa    
  404946:	(bad)  
  404947:	scas   al,BYTE PTR es:[edi]
  404948:	adc    DWORD PTR [esi+eiz*1],edx
  40494b:	ror    DWORD PTR [eax],1
  40494d:	jae    0x4048fa
  40494f:	adc    eax,0x8c273cf2
  404954:	sar    DWORD PTR [ebx-0x5a],1
  404957:	in     eax,0x64
  404959:	in     al,dx
  40495a:	cs pop ebp
  40495c:	ins    DWORD PTR es:[edi],dx
  40495d:	ret    0x65d6
  404960:	pop    edi
  404961:	dec    ecx
  404962:	sub    eax,0xeb555a9d
  404967:	or     DWORD PTR [eax],esp
  404969:	mov    ch,0xb2
  40496b:	aam    0x3c
  40496d:	cld    
  40496e:	adc    BYTE PTR [esi],al
  404970:	inc    edx
  404971:	push   es
  404972:	mov    bl,0x50
  404974:	lods   al,BYTE PTR ds:[esi]
  404975:	mov    eax,0x372d73e
  40497a:	and    dh,BYTE PTR ds:0xc6dc5b5e
  404980:	mov    esp,0xabd8f95c
  404985:	bound  eax,QWORD PTR [edi-0x60]
  404988:	test   al,0x57
  40498a:	lods   al,BYTE PTR ds:[esi]
  40498b:	mov    DWORD PTR [edx-0x65],edi
  40498e:	inc    ebp
  40498f:	hlt    
  404990:	imul   esi,DWORD PTR [ecx-0x38],0x5c
  404994:	imul   esi,ebx,0x4f
  404997:	in     al,0x57
  404999:	test   DWORD PTR [ecx+0x336a5287],ebp
  40499f:	xchg   ebx,eax
  4049a0:	popa   
  4049a1:	outs   dx,DWORD PTR ds:[esi]
  4049a2:	int    0xb4
  4049a4:	lea    eax,[eax-0x70c77c50]
  4049aa:	aad    0xfe
  4049ac:	or     BYTE PTR [esi-0x1bd4566c],cl
  4049b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b4:	cld    
  4049b5:	add    BYTE PTR [edi],dl
  4049b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b8:	pusha  
  4049b9:	fs pop ds
  4049bb:	popf   
  4049bc:	jno    0x404958
  4049be:	sub    BYTE PTR ds:0x67994160,dh
  4049c4:	pop    edx
  4049c5:	jne    0x40497e
  4049c7:	mov    edx,0xd6435e4c
  4049cc:	stos   DWORD PTR es:[edi],eax
  4049cd:	jl     0x404a38
  4049cf:	arpl   WORD PTR [ebx],ax
  4049d1:	adc    al,0x29
  4049d3:	aam    0x86
  4049d5:	add    BYTE PTR [esi+eiz*4-0x4d02962f],bl
  4049dc:	fiadd  DWORD PTR [ebp+0x5638b544]
  4049e2:	call   0x29c1e975
  4049e7:	aam    0xd9
  4049e9:	lods   al,BYTE PTR ds:[esi]
  4049ea:	pop    edx
  4049eb:	sbb    eax,0x61c7da51
  4049f0:	call   0x10c0741c
  4049f5:	icebp  
  4049f6:	aas    
  4049f7:	xor    al,0xb
  4049f9:	or     eax,0x74930c0d
  4049fe:	adc    eax,0x41e4545c
  404a03:	int3   
  404a04:	xchg   esp,eax
  404a05:	outs   dx,DWORD PTR ds:[esi]
  404a06:	xchg   ebp,eax
  404a07:	mov    edx,0x5c5e4f5d
  404a0c:	fistp  QWORD PTR [esi]
  404a0e:	xchg   DWORD PTR gs:[ebx+0x783e17e6],ebp
  404a15:	les    esi,FWORD PTR [edx]
  404a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a18:	arpl   WORD PTR [edi-0x76],bp
  404a1b:	mov    ah,0x53
  404a1d:	push   cs
  404a1e:	clc    
  404a1f:	sar    dh,0x3a
  404a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a23:	pop    ss
  404a24:	dec    edx
  404a25:	inc    ecx
  404a26:	jl     0x404a78
  404a28:	pop    eax
  404a29:	dec    ebp
  404a2a:	cmp    al,0xc9
  404a2c:	sahf   
  404a2d:	mov    eax,0xce61ae5b
  404a32:	arpl   WORD PTR [esi-0x27a4bc46],si
  404a38:	sbb    eax,0x437e7264
  404a3d:	push   edi
  404a3e:	xchg   ebx,eax
  404a3f:	and    DWORD PTR [eax+0x75a99d85],esp
  404a45:	loopne 0x404a4b
  404a47:	pop    es
  404a48:	sbb    ah,0x2e
  404a4b:	sbb    ebx,edi
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a859,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a859
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a859,esi
  404a69:	cmp    DWORD PTR ds:0x42a859,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a859,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a859
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a859,esi
  404ab7:	cmp    DWORD PTR ds:0x42a859,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a81d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	out    dx,eax
  404ae3:	sti    
  404ae4:	adc    BYTE PTR [esi+eax*2],bh
  404ae7:	cs js  0x404b62
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404a9c
  404aef:	mul    DWORD PTR ds:0x2cdfe838
  404af5:	cmp    esp,DWORD PTR [esi+ecx*2-0x53]
  404af9:	iret   
  404afa:	fldenv [esi+edi*2-0x6a]
  404afe:	pop    edx
  404aff:	pop    esi
  404b00:	mov    eax,DWORD PTR [esi-0x45]
  404b03:	dec    esp
  404b04:	jp     0x404b4c
  404b06:	adc    bh,BYTE PTR [ecx]
  404b08:	jno    0x404b58
  404b0a:	fbstp  TBYTE PTR [ebp+ebp*2+0x5a]
  404b0e:	xchg   BYTE PTR [ebx],ch
  404b10:	clc    
  404b11:	mov    al,0xf2
  404b13:	(bad)  
  404b14:	sar    BYTE PTR [ecx+ecx*8-0x38],1
  404b18:	mov    al,ds:0xb659abe6
  404b1d:	pop    ecx
  404b1e:	ffreep st(6)
  404b20:	push   esi
  404b21:	add    ecx,ecx
  404b23:	lahf   
  404b24:	sub    eax,0x83f1781d
  404b29:	sbb    eax,0xcc0529d8
  404b2e:	jle    0x404b5b
  404b30:	inc    eax
  404b31:	addr16 test ebp,eax
  404b34:	imul   DWORD PTR [ebx+eax*4]
  404b37:	leave  
  404b38:	fxtract 
  404b3a:	dec    esp
  404b3b:	push   bx
  404b3d:	shr    BYTE PTR [esi-0x3a19067],1
  404b43:	cmpxchg esp,esp
  404b46:	mov    al,0xdf
  404b48:	pop    edx
  404b49:	or     BYTE PTR [eax+0x655eaeae],bh
  404b4f:	rcl    esi,cl
  404b51:	mov    eax,ds:0xf5a5d29a
  404b56:	and    edx,edi
  404b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b59:	lods   al,BYTE PTR ds:[esi]
  404b5a:	dec    edi
  404b5b:	sub    eax,0x4f7be676
  404b60:	mov    ah,0xdf
  404b62:	inc    esp
  404b63:	adc    cl,BYTE PTR ds:0xe1fc04eb
  404b69:	iret   
  404b6a:	jae    0x404b48
  404b6c:	mov    eax,ds:0xa96a0864
  404b71:	xchg   edx,eax
  404b72:	mov    ds:0x78f56178,eax
  404b77:	stos   BYTE PTR es:[edi],al
  404b78:	or     cl,BYTE PTR ds:0xcacb304c
  404b7e:	out    0x93,eax
  404b80:	and    al,0xb9
  404b82:	mov    WORD PTR [edx],es
  404b84:	xchg   edx,eax
  404b85:	xchg   esi,eax
  404b86:	mov    dl,0xa8
  404b88:	lahf   
  404b89:	pop    ss
  404b8a:	inc    esp
  404b8b:	idiv   DWORD PTR [edi+0x55]
  404b8e:	and    al,0xaa
  404b90:	mov    esp,0xb280b732
  404b95:	adc    eax,0xa96b4bfe
  404b9a:	adc    al,0xc2
  404b9c:	imul   ecx,DWORD PTR [ecx],0x255211f3
  404ba2:	neg    DWORD PTR [eax+0x6f7c75b3]
  404ba8:	xor    bl,al
  404baa:	and    eax,0xa58219d8
  404baf:	imul   esi,DWORD PTR [ebp+0x8f16995],0x3f
  404bb6:	cs in  eax,0xb7
  404bb9:	mov    bl,0xa9
  404bbb:	add    BYTE PTR [eax],0x1f
  404bbe:	mov    eax,ds:0x2a1a6ecb
  404bc3:	das    
  404bc4:	rcr    ecx,1
  404bc6:	push   ds
  404bc7:	mov    edx,0xfd0ce612
  404bcc:	jns    0x404b9a
  404bce:	mov    ch,0xcf
  404bd0:	or     ah,dl
  404bd2:	adc    esi,DWORD PTR [ebp+0x311eb5f0]
  404bd8:	inc    edi
  404bd9:	ja     0x404bf9
  404bdb:	pop    ds
  404bdc:	out    dx,eax
  404bdd:	or     DWORD PTR [edx-0xb],ebp
  404be0:	fsin   
  404be2:	mov    al,0xa3
  404be4:	inc    ebp
  404be5:	xchg   ebx,eax
  404be6:	sbb    bl,BYTE PTR [ebx-0x7bf1582b]
  404bec:	jmp    0xde94:0x11fa532
  404bf3:	test   DWORD PTR [edx],ebp
  404bf5:	(bad)  
  404bf6:	mov    dh,0xe5
  404bf8:	es xchg ebp,eax
  404bfa:	pop    ecx
  404bfb:	mov    edi,0xc9d38a6b
  404c00:	dec    edi
  404c01:	fisttp QWORD PTR [eax-0x4f699939]
  404c07:	mov    al,ds:0x310af8c1
  404c0c:	add    ebp,DWORD PTR [ebx]
  404c0e:	into   
  404c0f:	dec    esi
  404c10:	dec    edi
  404c11:	sbb    ebx,DWORD PTR [edx-0x35f7a974]
  404c17:	mov    DWORD PTR [edi],0xa9465026
  404c1d:	gs push esp
  404c1f:	(bad)  
  404c20:	sub    ebx,edx
  404c22:	mov    ebx,0x71dc6636
  404c27:	inc    ebx
  404c28:	lods   eax,DWORD PTR ds:[esi]
  404c29:	or     eax,0x81de7b15
  404c2e:	mov    ecx,DWORD PTR [eax-0x55]
  404c31:	inc    edi
  404c32:	adc    eax,0x1db4c611
  404c37:	dec    ebp
  404c38:	lea    ebp,[edx+0x42]
  404c3b:	jmp    FWORD PTR [esi-0x1f]
  404c3e:	or     cl,BYTE PTR [edx+0x1f]
  404c41:	in     al,dx
  404c42:	inc    ebp
  404c43:	and    al,0xa8
  404c45:	inc    edi
  404c46:	(bad)  
  404c47:	popf   
  404c48:	mov    ah,0x58
  404c4a:	lds    ebp,FWORD PTR [esi]
  404c4c:	sbb    ecx,DWORD PTR [ebx]
  404c4e:	mov    ch,0x3a
  404c50:	dec    edi
  404c51:	(bad)  
  404c53:	mov    edi,0x2a51113d
  404c58:	xor    cl,ch
  404c5a:	pushf  
  404c5b:	add    esi,DWORD PTR [eax-0x8]
  404c5e:	jae    0x404bf2
  404c60:	push   ebp
  404c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c62:	clc    
  404c63:	shl    DWORD PTR [esp+edi*8],1
  404c66:	push   ss
  404c67:	clc    
  404c68:	pop    edi
  404c69:	popa   
  404c6a:	enter  0xfd7b,0xb2
  404c6e:	mov    al,ds:0x9b6a8f4a
  404c73:	hlt    
  404c74:	push   ebx
  404c75:	jl     0x404c65
  404c77:	push   edi
  404c78:	das    
  404c79:	jbe    0x404cf7
  404c7b:	xor    al,0xbb
  404c7d:	rol    BYTE PTR [eax+0x6e],cl
  404c80:	ins    DWORD PTR es:[edi],dx
  404c81:	add    eax,ecx
  404c83:	shl    BYTE PTR [ebp+ebp*2-0x3a885e06],1
  404c8a:	les    edx,FWORD PTR [edx-0x7736dc02]
  404c90:	test   edi,ebp
  404c92:	push   es
  404c93:	mov    eax,ds:0x372378fb
  404c98:	or     ecx,esi
  404c9a:	adc    al,0xaf
  404c9c:	in     al,0x67
  404c9e:	imul   edx,DWORD PTR [ebx+0x611e4d48],0x4a
  404ca5:	mov    dl,dh
  404ca7:	pop    ss
  404ca8:	add    eax,0xe9cc4e24
  404cad:	cdq    
  404cae:	scas   al,BYTE PTR es:[edi]
  404caf:	xchg   ebp,eax
  404cb0:	adc    ah,BYTE PTR [ecx+esi*4]
  404cb3:	dec    esp
  404cb4:	rcl    DWORD PTR [edi+0x5c82207f],0xca
  404cbb:	cdq    
  404cbc:	or     esi,DWORD PTR [edi]
  404cbe:	sub    dl,BYTE PTR [ecx+eiz*2-0x95cf3fe]
  404cc5:	ins    DWORD PTR es:[edi],dx
  404cc6:	and    BYTE PTR [si],dl
  404cc9:	sbb    BYTE PTR [ebp-0x25779630],ah
  404ccf:	outs   dx,BYTE PTR ds:[esi]
  404cd0:	jp     0x404c5b
  404cd2:	jae    0x404d0c
  404cd4:	movaps XMMWORD PTR [eax-0x5a],xmm5
  404cd8:	dec    edx
  404cd9:	les    esp,FWORD PTR [esi+0x373cf401]
  404cdf:	jno    0x404cce
  404ce1:	adc    eax,ebx
  404ce3:	mov    ecx,0xa31b4bf6
  404ce8:	jle    0x404d1c
  404cea:	or     ebp,edx
  404cec:	inc    esp
  404ced:	stos   DWORD PTR es:[edi],eax
  404cee:	or     DWORD PTR [ecx],ebp
  404cf0:	jmp    0x404cae
  404cf2:	mov    ebp,0x54dc94a3
  404cf7:	dec    edi
  404cf8:	lods   al,BYTE PTR ds:[esi]
  404cf9:	adc    BYTE PTR [eax+0xb7310ae],0x3e
  404d00:	add    al,0x23
  404d02:	cmp    ebx,ebp
  404d04:	jecxz  0x404d15
  404d06:	das    
  404d07:	call   DWORD PTR [eax-0x18be652b]
  404d0d:	inc    ebx
  404d0e:	stc    
  404d0f:	js     0x404d36
  404d11:	push   edi
  404d12:	inc    esp
  404d13:	shr    BYTE PTR [ecx],cl
  404d15:	xor    al,0xa1
  404d17:	ins    BYTE PTR es:[edi],dx
  404d18:	dec    eax
  404d19:	adc    ecx,ebp
  404d1b:	fdivr  QWORD PTR ds:0xab55f12b
  404d21:	mov    ds:0xb2ae41d6,eax
  404d26:	scas   al,BYTE PTR es:[edi]
  404d27:	dec    edi
  404d28:	iret   
  404d29:	and    esi,DWORD PTR [esp+eax*4]
  404d2c:	xor    al,0x99
  404d2e:	je     0x404cbd
  404d30:	aaa    
  404d31:	ins    DWORD PTR es:[edi],dx
  404d32:	mov    eax,0x9d59ae60
  404d37:	scas   eax,DWORD PTR es:[edi]
  404d38:	jbe    0x404d40
  404d3a:	jb     0x404da8
  404d3c:	enter  0x471d,0x9d
  404d40:	ja     0x404d3b
  404d42:	mov    ecx,0x906c74b1
  404d47:	xchg   edx,eax
  404d48:	push   0x169afaca
  404d4d:	or     al,al
  404d4f:	inc    edx
  404d50:	sub    al,0xb0
  404d52:	xchg   edi,eax
  404d53:	icebp  
  404d54:	jnp    0x404d28
  404d56:	(bad)  
  404d57:	jae    0x404db1
  404d59:	out    dx,eax
  404d5a:	mov    DWORD PTR [edx],ecx
  404d5c:	add    al,0x10
  404d5e:	add    dh,BYTE PTR ds:0x96da63ce
  404d64:	scas   al,BYTE PTR es:[edi]
  404d65:	inc    ebx
  404d66:	xor    bl,BYTE PTR [edi]
  404d68:	popf   
  404d69:	mov    esi,0x37bd6ef4
  404d6e:	push   ebp
  404d6f:	int    0xd
  404d71:	dec    ebp
  404d72:	les    edx,FWORD PTR [eax+0x72d42b6b]
  404d78:	(bad)  
  404d79:	xor    eax,0xb295aac4
  404d7e:	outs   dx,BYTE PTR ds:[esi]
  404d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d80:	inc    ebp
  404d81:	jno    0x404d7c
  404d83:	mov    dl,0xf6
  404d85:	xchg   ecx,eax
  404d86:	adc    BYTE PTR [edx+0x5dd12559],0x1d
  404d8d:	inc    ecx
  404d8e:	stos   DWORD PTR es:[edi],eax
  404d8f:	(bad)  
  404d90:	arpl   di,dx
  404d92:	ret    
  404d93:	imul   esi,DWORD PTR [ebx-0x1a88cff0],0xffffff95
  404d9a:	out    0x1a,eax
  404d9c:	mov    al,0x2d
  404d9e:	sahf   
  404d9f:	in     eax,dx
  404da0:	(bad)  
  404da1:	mov    ah,ah
  404da3:	test   al,0xd1
  404da5:	test   DWORD PTR [eax],ebp
  404da7:	test   al,0x7e
  404da9:	jbe    0x404dd4
  404dab:	adc    esp,esp
  404dad:	jp     0x404d8d
  404daf:	popf   
  404db0:	imul   ebp,DWORD PTR [ebx-0x39],0x49
  404db4:	xor    al,0x5b
  404db6:	out    dx,eax
  404db7:	and    DWORD PTR [edx],0xffffffe3
  404dba:	sub    ch,cl
  404dbc:	sbb    eax,DWORD PTR [eax+0x57a58489]
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	pop    esi
  404de9:	iret   
  404dea:	or     BYTE PTR [esi-0x65],cl
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404d76
  404df5:	(bad)  
  404df6:	leave  
  404df7:	mov    bl,0x29
  404df9:	xor    eax,0x3effe221
  404dfe:	jle    0x404e65
  404e00:	fs data16 or al,0xe0
  404e04:	inc    esi
  404e05:	inc    ecx
  404e06:	stos   DWORD PTR es:[edi],eax
  404e07:	and    esi,DWORD PTR [esi]
  404e09:	out    0xa0,eax
  404e0b:	xchg   ebx,eax
  404e0c:	inc    edx
  404e0d:	daa    
  404e0e:	jne    0x404e48
  404e10:	(bad)
  404e13:	push   eax
  404e14:	(bad)  
  404e15:	jns    0x404de9
  404e17:	or     DWORD PTR [edi],eax
  404e19:	mov    eax,DWORD PTR [ebx]
  404e1b:	dec    ecx
  404e1c:	pop    esp
  404e1d:	or     dl,BYTE PTR [eax]
  404e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e20:	iret   
  404e21:	retf   0x399b
  404e24:	sbb    al,0xf6
  404e26:	cmc    
  404e27:	push   ds
  404e28:	lods   al,BYTE PTR ds:[esi]
  404e29:	fiadd  DWORD PTR [esi-0x17]
  404e2c:	xor    eax,0xbffef40e
  404e31:	xchg   ecx,eax
  404e32:	bnd jle 0x404e27
  404e35:	sbb    eax,0xde16160d
  404e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3b:	dec    esi
  404e3c:	dec    edx
  404e3d:	mov    ds:0x36d59115,al
  404e42:	xchg   BYTE PTR [ebx-0x68dc0752],bl
  404e48:	fidiv  WORD PTR [ecx+0x40bf78be]
  404e4e:	mov    dh,0xb0
  404e50:	adc    eax,0x3324fb65
  404e55:	popf   
  404e56:	imul   esi,DWORD PTR [ebp+eiz*8+0x15],0xfe3b5f45
  404e5e:	retf   0x29c9
  404e61:	adc    al,0xb4
  404e63:	jg     0x404eda
  404e65:	cmp    eax,0x2cf84313
  404e6a:	mov    dh,0xc7
  404e6c:	call   0xbca440b
  404e71:	ret    
  404e72:	loopne 0x404ea8
  404e74:	stos   BYTE PTR es:[edi],al
  404e75:	inc    ecx
  404e76:	mov    ds:0x3a6027c4,eax
  404e7b:	(bad)  
  404e7c:	fadd   QWORD PTR [ecx-0x19]
  404e7f:	inc    ecx
  404e80:	hlt    
  404e81:	xchg   ebx,eax
  404e83:	fidivr DWORD PTR [edx-0x4e9ec99]
  404e89:	pop    DWORD PTR [esi-0x28]
  404e8c:	ja     0x404e76
  404e8e:	xchg   edx,eax
  404e8f:	rcl    dl,0x16
  404e92:	test   eax,0x566279a9
  404e97:	xlat   BYTE PTR ds:[ebx]
  404e98:	inc    eax
  404e99:	int3   
  404e9a:	add    ebp,edx
  404e9c:	lea    edx,[esi-0x2a]
  404e9f:	stos   BYTE PTR es:[edi],al
  404ea0:	jg     0x404e70
  404ea2:	xchg   ecx,eax
  404ea3:	mov    ebx,0xb898e905
  404ea8:	les    esp,FWORD PTR [esi+edi*8+0x4a]
  404eac:	loope  0x404e42
  404eae:	rcl    DWORD PTR [edi+0x7fd019fd],cl
  404eb4:	add    esp,DWORD PTR [ecx+0x3df4e4d6]
  404eba:	jbe    0x404e57
  404ebc:	add    ebp,ebp
  404ebe:	clc    
  404ebf:	pusha  
  404ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec1:	repz sub cl,dh
  404ec4:	xchg   BYTE PTR [edx-0x117bcd62],dl
  404eca:	out    0x4a,al
  404ecc:	icebp  
  404ecd:	cmp    DWORD PTR [edi],eax
  404ecf:	mov    ecx,DWORD PTR [eax]
  404ed1:	jbe    0x404ec7
  404ed3:	ja     0x404efd
  404ed5:	push   es
  404ed6:	dec    eax
  404ed7:	or     edi,DWORD PTR [eax+0x726d2603]
  404edd:	xor    cl,BYTE PTR [eax]
  404edf:	xor    esi,esp
  404ee1:	and    ebp,DWORD PTR [ebx+0x73]
  404ee4:	mov    ch,0x32
  404ee6:	mov    bl,0xc8
  404ee8:	add    eax,0x14a75348
  404eed:	hlt    
  404eee:	inc    esi
  404eef:	add    al,0xee
  404ef1:	fsubrp st(3),st
  404ef3:	pop    edi
  404ef4:	xchg   edx,eax
  404ef5:	sbb    al,0xec
  404ef7:	fnstenv [ebx-0x1ce71fe8]
  404efd:	retf   
  404efe:	ins    DWORD PTR es:[edi],dx
  404eff:	sub    ecx,DWORD PTR ds:[ebx+0x4b72040d]
  404f06:	adc    DWORD PTR [eax+0x76841ba7],esp
  404f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f0d:	mov    BYTE PTR [esi+edi*8+0x664932bd],bl
  404f14:	jmp    0x404f77
  404f16:	mov    ebp,0x35ff8cc8
  404f1b:	out    dx,al
  404f1c:	jge    0x404f39
  404f1e:	arpl   WORD PTR [ebx-0x64d15375],si
  404f24:	clc    
  404f25:	mov    eax,0x9918c971
  404f2a:	and    eax,0x5a561bae
  404f2f:	scas   eax,DWORD PTR es:[edi]
  404f30:	sar    BYTE PTR [ebp-0x38],cl
  404f33:	add    al,0xc2
  404f35:	loop   0x404f08
  404f37:	mov    ebp,0x29da7176
  404f3c:	test   BYTE PTR [ebx-0x72],bl
  404f3f:	mov    esi,0x7977ef57
  404f44:	sub    dl,BYTE PTR [edx]
  404f46:	popf   
  404f47:	and    esi,DWORD PTR [esi]
  404f49:	mov    esi,0xe7964e52
  404f4e:	mov    ds:0x305ebf6b,eax
  404f53:	mov    cl,0x1b
  404f55:	sbb    BYTE PTR [eax+0x4b],ch
  404f58:	test   eax,0x392e6b79
  404f5d:	cld    
  404f5e:	fisub  WORD PTR [ecx-0x12]
  404f61:	mov    ch,0x2d
  404f63:	das    
  404f64:	dec    esi
  404f65:	push   es
  404f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f67:	leave  
  404f68:	add    ebx,DWORD PTR [esi+0x35f47bfe]
  404f6e:	rcr    BYTE PTR [edx],1
  404f70:	je     0x404ef7
  404f72:	push   cs
  404f73:	bound  edx,QWORD PTR [ebx]
  404f75:	jne    0x404fbd
  404f77:	in     al,0x4c
  404f79:	les    ecx,FWORD PTR [eax-0x5d6aa1ed]
  404f7f:	adc    ah,bl
  404f81:	and    bl,BYTE PTR [esi+eax*4+0x28]
  404f85:	xor    al,BYTE PTR [esi]
  404f87:	add    al,0x55
  404f89:	mov    WORD PTR [ebp-0x4d],ss
  404f8c:	xchg   edx,eax
  404f8d:	ds mov bl,0xd8
  404f90:	jnp    0x404f4f
  404f92:	or     eax,0xa9ed93c8
  404f97:	dec    eax
  404f98:	inc    ebx
  404f99:	xor    edx,DWORD PTR [esi+eiz*1]
  404f9c:	pop    es
  404f9d:	iret   
  404f9e:	sub    ebx,DWORD PTR [ecx]
  404fa0:	push   es
  404fa1:	sub    esi,DWORD PTR ds:0xd985dfe6
  404fa7:	pop    ss
  404fa8:	jno    0x404fb2
  404faa:	mov    ebx,0x83abe041
  404faf:	adc    al,0xff
  404fb1:	call   0xcc71705e
  404fb6:	push   edx
  404fb7:	rol    DWORD PTR [ecx-0x4c],cl
  404fba:	ds push edi
  404fbc:	test   al,0x53
  404fbe:	outs   dx,DWORD PTR ds:[esi]
  404fbf:	mov    ah,BYTE PTR [esi]
  404fc1:	pop    es
  404fc2:	and    BYTE PTR [ebp+0x5f38ce80],dl
  404fc8:	inc    esp
  404fc9:	jnp    0x404ffc
  404fcb:	inc    edx
  404fcc:	pushf  
  404fcd:	jne    0x404fb2
  404fcf:	mov    dh,0x6f
  404fd1:	shl    BYTE PTR [ebp-0x29],0x10
  404fd5:	jmp    eax
  404fd7:	push   0x6439fad1
  404fdc:	test   ebp,0x769e5d20
  404fe2:	mov    edi,0xfdc6df5b
  404fe7:	jmp    0x404fbc
  404fe9:	out    0x2d,eax
  404feb:	ins    BYTE PTR es:[edi],dx
  404fec:	adc    al,0xb7
  404fee:	xchg   ebx,eax
  404fef:	mov    cs,WORD PTR [ebp-0x510ff4af]
  404ff5:	icebp  
  404ff6:	shr    esi,0x37
  404ff9:	mov    cl,0xb
  404ffb:	jg     0x405053
  404ffd:	dec    ebp
  404ffe:	xor    ch,BYTE PTR [ebp+0x76024106]
  405004:	pusha  
  405005:	jge    0x404fc7
  405007:	in     eax,dx
  405008:	xchg   esi,eax
  405009:	sub    BYTE PTR [edi],0x86
  40500c:	mov    eax,0xf18e1ff7
  405011:	adc    eax,0x13c423b1
  405016:	cmc    
  405017:	adc    BYTE PTR [ebx+edx*8],dh
  40501a:	push   edx
  40501b:	xor    edx,DWORD PTR [esi]
  40501d:	test   al,0x75
  40501f:	aam    0x73
  405021:	pop    ecx
  405022:	aam    0x30
  405024:	jge    0x404fef
  405026:	jmp    0x404fea
  405028:	fdiv   st,st(6)
  40502a:	adc    eax,0x8205a242
  40502f:	adc    ah,BYTE PTR [ecx+0x7a12299a]
  405035:	loop   0x405096
  405037:	dec    esp
  405038:	fdivp  st(4),st
  40503a:	sbb    DWORD PTR [edx-0x41985462],ebp
  405040:	(bad)  
  405041:	call   0x7b86:0x430819d2
  405048:	lahf   
  405049:	int    0x53
  40504b:	pop    esp
  40504c:	pop    ebx
  40504d:	adc    ebx,DWORD PTR [ecx]
  40504f:	pop    ebx
  405050:	les    ebx,FWORD PTR [edx-0x51]
  405053:	sahf   
  405054:	clc    
  405055:	lods   al,BYTE PTR ds:[esi]
  405056:	lahf   
  405057:	pop    edi
  405058:	inc    eax
  405059:	sub    eax,edi
  40505b:	in     al,dx
  40505c:	ret    0xfbc2
  40505f:	lods   eax,DWORD PTR ds:[esi]
  405060:	pop    ebx
  405061:	fdivr  QWORD PTR [ebx+0x78]
  405064:	pushf  
  405065:	es je  0x405025
  405068:	push   ebp
  405069:	or     eax,0x9910c641
  40506e:	sub    BYTE PTR [esi],0x80
  405071:	adc    ah,BYTE PTR [edx]
  405073:	sahf   
  405074:	sahf   
  405075:	sti    
  405076:	pop    ebx
  405077:	and    DWORD PTR [ecx-0x2aa747a4],eax
  40507d:	mov    edi,0x4e7c1c2a
  405082:	loopne 0x40504f
  405084:	fisubr WORD PTR [ebx-0x7a]
  405087:	ss pop esp
  405089:	push   ss
  40508a:	dec    DWORD PTR [ecx+edx*8-0x6b82bd75]
  405091:	pop    edi
  405092:	daa    
  405093:	xchg   ecx,eax
  405094:	lds    ebx,FWORD PTR [ebx+0x9]
  405097:	mov    cl,0x52
  405099:	shr    BYTE PTR [eax-0x15],0x2
  40509d:	aam    0x45
  40509f:	inc    eax
  4050a0:	out    dx,al
  4050a1:	mov    cl,0x47
  4050a3:	js     0x4050e0
  4050a5:	jmp    ebx
  4050a7:	ret    0xa924
  4050aa:	sub    al,0x96
  4050ac:	jmp    0xdbfc:0xf8bbd3b5
  4050b3:	in     eax,dx
  4050b4:	enter  0x4b5c,0x32
  4050b8:	and    ecx,DWORD PTR [edx]
  4050ba:	add    eax,0x3ebc8e95
  4050bf:	shl    DWORD PTR [ebx+0x53],0x60
  4050c3:	fucomip st,st(4)
  4050c5:	sub    BYTE PTR [edi+edi*4-0x327298],0x2b
  4050cd:	clc    
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x6f07b7fe],bh
  4050fc:	outs   dx,DWORD PTR ds:[esi]
  4050fd:	call   0x4db8c932
  405102:	jle    0x40517c
  405104:	js     0x405100
  405106:	add    eax,0x4c064d7
  40510b:	pop    eax
  40510c:	pop    esi
  40510d:	fwait
  40510e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40510f:	fisub  DWORD PTR [ecx+0xe]
  405112:	push   edx
  405113:	or     bl,cl
  405115:	jle    0x40509b
  405117:	pop    ecx
  405118:	repz inc eax
  40511a:	xchg   edx,eax
  40511b:	popf   
  40511c:	dec    edi
  40511d:	mov    dh,0x9e
  40511f:	push   es
  405120:	stos   DWORD PTR es:[edi],eax
  405121:	push   ecx
  405122:	data16 fld st(5)
  405125:	inc    eax
  405126:	ror    DWORD PTR [esi-0x7dc34b97],1
  40512c:	stos   DWORD PTR es:[edi],eax
  40512d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40512e:	fs inc ebx
  405130:	or     bh,BYTE PTR [ebp+0x11]
  405133:	and    ah,BYTE PTR [edi+0x55]
  405136:	pop    ecx
  405137:	hlt    
  405138:	jb     0x405197
  40513a:	inc    esp
  40513b:	fnstcw WORD PTR [esp+esi*1+0x5c9385ac]
  405142:	lock inc edi
  405144:	in     al,0xae
  405146:	imul   esp,DWORD PTR [edx],0xc6dbc24f
  40514c:	xor    eax,0x67c93607
  405151:	dec    ecx
  405152:	jnp    0x4050db
  405154:	gs add al,0xf5
  405157:	mov    esp,0xcadf39fe
  40515c:	out    dx,eax
  40515d:	mov    al,ds:0x9f026fd8
  405162:	std    
  405163:	sub    eax,0xbf01c3d7
  405168:	push   ss
  405169:	jmp    0x405113
  40516b:	(bad)  
  40516c:	in     al,0x33
  40516e:	or     dh,BYTE PTR [esi+0x6bc3bacd]
  405174:	adc    DWORD PTR [eax],ebp
  405176:	shr    DWORD PTR [esi+0x43138d9d],1
  40517c:	pop    edx
  40517d:	aam    0x73
  40517f:	and    al,0x6d
  405181:	in     al,0x6a
  405183:	(bad)  
  405185:	call   DWORD PTR [ebx-0x1f]
  405188:	lods   eax,DWORD PTR ds:[esi]
  405189:	mov    edx,0x9bd4b838
  40518e:	mov    eax,0xec56edcc
  405193:	addr16 sub eax,0x2318a184
  405199:	dec    ecx
  40519a:	push   ss
  40519b:	hlt    
  40519c:	adc    ecx,DWORD PTR [ebp+0x6b]
  40519f:	and    cl,BYTE PTR [esi]
  4051a1:	out    dx,al
  4051a2:	mov    BYTE PTR [ebp-0x67],dl
  4051a5:	ss xchg esp,eax
  4051a7:	lods   al,BYTE PTR ds:[esi]
  4051a8:	inc    edx
  4051a9:	aas    
  4051aa:	dec    esp
  4051ab:	sub    eax,0x87a5aa50
  4051b0:	cmc    
  4051b1:	xor    eax,0xf602dfb0
  4051b6:	es cmc 
  4051b8:	cld    
  4051b9:	push   ebp
  4051ba:	ficomp WORD PTR [eax]
  4051bc:	mov    cl,0xd8
  4051be:	jmp    0xd53e3990
  4051c3:	icebp  
  4051c4:	mov    al,ds:0x67aabbec
  4051c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ca:	out    dx,eax
  4051cb:	jae    0x4051d8
  4051cd:	mov    bl,0x6
  4051cf:	shr    DWORD PTR [ebx],cl
  4051d1:	push   esp
  4051d2:	sbb    BYTE PTR [eax-0x5781ce3e],dh
  4051d8:	imul   ebp,DWORD PTR [ebx],0xb59e0a45
  4051de:	loop   0x4051c4
  4051e0:	dec    eax
  4051e1:	push   ecx
  4051e2:	in     al,dx
  4051e3:	cmp    ebx,ecx
  4051e5:	mov    esp,0x253ccf6b
  4051ea:	jmp    DWORD PTR gs:[ecx]
  4051ed:	sahf   
  4051ee:	inc    esp
  4051ef:	adc    al,0x5d
  4051f1:	(bad)  
  4051f2:	pop    esi
  4051f3:	mov    ebp,0x6296e9b8
  4051f8:	add    al,0xf1
  4051fa:	ds mov al,ch
  4051fd:	add    DWORD PTR [esi+esi*4],edi
  405200:	inc    cl
  405202:	xor    edi,eax
  405204:	mov    ds:0xaf9823d2,al
  405209:	loopne 0x40523c
  40520b:	mov    ch,0xb1
  40520d:	pop    esi
  40520e:	mov    eax,0x425bbd9b
  405213:	lds    ecx,FWORD PTR [ecx-0x6a5bdb6]
  405219:	xchg   edi,eax
  40521a:	mov    ds:0xf2e1aea4,eax
  40521f:	xchg   ecx,eax
  405220:	xchg   esi,eax
  405221:	popa   
  405222:	adc    DWORD PTR [eax+0x575a0242],0x76
  405229:	dec    ebp
  40522a:	xor    BYTE PTR [edx+0x6eeffcc8],0x83
  405231:	call   0x7ada:0x6b9a2645
  405238:	mov    bh,0x4a
  40523a:	nop
  40523b:	push   eax
  40523c:	loopne 0x4051dc
  40523e:	retf   
  40523f:	cmp    esi,esp
  405241:	dec    ebx
  405242:	into   
  405243:	add    dh,BYTE PTR [ebp-0x6bb33b12]
  405249:	sahf   
  40524a:	inc    esp
  40524b:	xor    BYTE PTR [ecx-0x12],al
  40524e:	adc    esp,DWORD PTR [edi-0x6c]
  405251:	loopne 0x405251
  405253:	mov    ch,0x43
  405255:	inc    eax
  405256:	aad    0x6b
  405258:	sbb    al,ah
  40525a:	add    DWORD PTR [esi+edx*1-0x6713ecad],edx
  405261:	sbb    bh,0x4a
  405264:	cdq    
  405265:	aaa    
  405266:	in     al,dx
  405267:	call   0x62e6:0x75c40388
  40526e:	or     al,0x20
  405270:	sahf   
  405271:	mov    edx,0xd40eee55
  405276:	ins    BYTE PTR es:[edi],dx
  405277:	mov    bh,0x18
  405279:	xchg   ecx,eax
  40527a:	scas   al,BYTE PTR es:[edi]
  40527b:	cmp    eax,0xcb45e191
  405280:	hlt    
  405281:	inc    eax
  405282:	pop    edx
  405283:	or     BYTE PTR [esi+0x288b922],ah
  405289:	and    eax,0xaefc50e
  40528e:	fs jmp 0xba54:0x1cab76eb
  405296:	and    dl,BYTE PTR [ecx+0x43]
  405299:	(bad)
  40529c:	pop    ebp
  40529d:	bound  eax,QWORD PTR [ecx+edi*1]
  4052a0:	sbb    al,0xa3
  4052a2:	pop    DWORD PTR [esi-0x11151f2a]
  4052a8:	je     0x40527e
  4052aa:	dec    esi
  4052ab:	lea    edi,[eax+0x37]
  4052ae:	sub    al,al
  4052b0:	and    ebx,DWORD PTR [ecx-0x54]
  4052b3:	(bad)  
  4052b4:	call   0x4db9:0xe61d9bfa
  4052bb:	cmp    BYTE PTR [eax-0x9],dh
  4052be:	das    
  4052bf:	xchg   BYTE PTR [edx-0x6f],dl
  4052c2:	dec    eax
  4052c3:	add    BYTE PTR [ecx],ch
  4052c5:	push   es
  4052c6:	rol    dl,cl
  4052c8:	ins    DWORD PTR es:[edi],dx
  4052c9:	cld    
  4052ca:	ds mov edx,0xb83ece81
  4052d0:	xchg   ebx,eax
  4052d1:	cld    
  4052d2:	leave  
  4052d3:	loop   0x4052d5
  4052d5:	lock sub al,0x99
  4052d8:	mov    ds:0x90e9b5be,al
  4052dd:	mov    cl,0x3d
  4052df:	inc    edx
  4052e0:	pop    ecx
  4052e1:	add    DWORD PTR [edi],0x7d
  4052e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052e5:	push   ds
  4052e6:	je     0x4052c4
  4052e8:	les    ebx,FWORD PTR [esi+0x71fdce54]
  4052ee:	das    
  4052ef:	sub    edi,DWORD PTR [esi+eiz*4-0x59]
  4052f3:	ins    BYTE PTR es:[edi],dx
  4052f4:	mov    bl,0x51
  4052f6:	push   es
  4052f7:	ins    DWORD PTR es:[edi],dx
  4052f8:	pop    ecx
  4052f9:	push   esi
  4052fa:	rcr    dl,1
  4052fc:	add    al,0x7d
  4052fe:	mov    BYTE PTR [ebx+0x53],cl
  405301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405303:	jmp    0xe425:0x665051a6
  40530a:	shl    DWORD PTR [esi+0x70],0x83
  40530e:	bound  esi,QWORD PTR [edx]
  405310:	pop    ebp
  405311:	(bad)  
  405312:	mov    bh,0xa8
  405314:	add    al,0x1e
  405316:	aaa    
  405317:	sbb    ah,0xda
  40531a:	xor    eax,0x16663ce1
  40531f:	jge    0xe0dc30f8
  405325:	push   cs
  405326:	pop    edi
  405327:	ss pop ebp
  405329:	mov    ch,ah
  40532b:	pop    ss
  40532c:	inc    edi
  40532e:	inc    eax
  40532f:	mov    al,0xda
  405331:	cld    
  405332:	adc    al,0x8f
  405334:	inc    ebp
  405335:	mov    ds:0x8bf63e91,al
  40533a:	call   0xa29a:0xcb20f01d
  405341:	sub    al,0x6f
  405343:	idiv   bl
  405345:	rol    DWORD PTR [esi+0x25491365],cl
  40534b:	sbb    DWORD PTR [ecx+edi*2],ebx
  40534e:	jno    0x405398
  405350:	pop    ds
  405351:	mov    dl,0xc0
  405353:	clc    
  405354:	leave  
  405355:	arpl   WORD PTR [ebx+0x0],si
  405358:	imul   esi,esi,0x8bec003
  40535e:	ror    DWORD PTR [edx],0x3e
  405361:	mov    al,ds:0x7aef4acc
  405366:	call   0x3116:0x8e424506
  40536d:	xor    esp,DWORD PTR [edx]
  40536f:	jmp    0x405386
  405371:	test   BYTE PTR [edi-0x2d],bl
  405374:	and    DWORD PTR [ebx+0x47b48ad1],ebp
  40537a:	jae    0x4053a0
  40537c:	or     eax,0x61fde7ac
  405381:	jmp    0xef45:0x35dda784
  405388:	(bad)  
  405389:	cmp    BYTE PTR [edx+0x78],bh
  40538c:	scas   eax,DWORD PTR es:[edi]
  40538d:	xchg   esi,eax
  40538e:	(bad)  
  40538f:	jae    0x405350
  405391:	mov    ebp,0x303d0467
  405396:	fwait
  405397:	cs loopne 0x40534d
  40539a:	in     al,0xf8
  40539c:	sbb    esi,esp
  40539e:	push   esi
  40539f:	add    bl,BYTE PTR [esp+ecx*1-0x31cf3d8b]
  4053a6:	jne    0x40541c
  4053a8:	jp     0x405342
  4053aa:	pop    edx
  4053ab:	push   esi
  4053ac:	adc    dh,BYTE PTR [ecx-0x5b]
  4053af:	cwde   
  4053b0:	in     eax,0x61
  4053b2:	inc    esi
  4053b3:	icebp  
  4053b4:	add    eax,0x67621c54
  4053b9:	xchg   ch,dl
  4053bb:	xchg   edi,eax
  4053bc:	or     esi,DWORD PTR [edx-0x768d36a8]
  4053c2:	pop    edx
  4053c3:	xchg   esi,eax
  4053c4:	ds add al,0x4b
  4053c7:	pop    esi
  4053c8:	mov    ah,0x3b
  4053ca:	mov    WORD PTR [edi+ebx*2+0x2a],es
  4053ce:	or     DWORD PTR [ebp+0x47ecf98d],0x11d82bfe
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fmul   st(7),st
  4053ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ee:	sbb    bl,BYTE PTR [ebp+edi*1+0x4d787835]
  4053f5:	jle    0x40546f
  4053f7:	js     0x40543c
  4053f9:	lea    ecx,[eax-0x4011fb2]
  4053ff:	in     eax,0xfb
  405401:	inc    esi
  405402:	aaa    
  405403:	push   eax
  405404:	subps  xmm6,XMMWORD PTR [edx-0x3a8df8d2]
  40540b:	sbb    al,0x92
  40540d:	popa   
  40540e:	cwde   
  40540f:	dec    esp
  405410:	push   0xffffffab
  405412:	setnp  BYTE PTR [eax]
  405415:	mov    esp,0xa6e82b87
  40541a:	and    ebx,DWORD PTR [ebp+0x533506b]
  405420:	rcr    DWORD PTR [eax-0x51],0x46
  405424:	xor    DWORD PTR [esi-0x37b8a4b6],ebx
  40542a:	xor    bl,BYTE PTR [eax]
  40542c:	call   0x4c313aa7
  405431:	pop    ds
  405432:	in     eax,dx
  405433:	clc    
  405434:	add    eax,edx
  405436:	mov    eax,ds:0x2d9e7800
  40543b:	inc    esp
  40543c:	adc    al,0x36
  40543e:	stos   BYTE PTR es:[edi],al
  40543f:	jns    0x40548e
  405441:	out    0x3a,eax
  405443:	sti    
  405444:	sar    DWORD PTR [ebx],0xe3
  405447:	mov    ch,0x11
  405449:	in     al,0x5b
  40544b:	std    
  40544c:	into   
  40544d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40544e:	jns    0x405457
  405450:	xchg   ebp,eax
  405451:	jecxz  0x4054c5
  405453:	aam    0xfe
  405455:	sbb    eax,eax
  405457:	inc    edx
  405458:	sub    BYTE PTR [edi+0x769e86a4],ah
  40545e:	int3   
  40545f:	stc    
  405460:	iret   
  405461:	pop    edx
  405462:	cmp    DWORD PTR [ebx*2-0x5ca3e0b1],ebx
  405469:	out    dx,eax
  40546a:	mov    ds:0x73eb2a81,eax
  40546f:	dec    esi
  405470:	and    BYTE PTR [ebx],ch
  405472:	(bad)  
  405473:	iret   
  405474:	mov    ecx,?
  405476:	cli    
  405477:	jo     0x405422
  405479:	xchg   ebp,eax
  40547a:	test   BYTE PTR [esi],0x8e
  40547d:	sub    eax,0x1482b7da
  405482:	das    
  405483:	fbld   TBYTE PTR [edi+0x87dc173]
  405489:	adc    BYTE PTR ds:0x608a9416,0xe9
  405490:	adc    esi,0x936b35ed
  405496:	rcr    DWORD PTR [ecx*1+0x573b108f],0x50
  40549e:	lock popa 
  4054a0:	test   al,0xe0
  4054a2:	xchg   ebx,eax
  4054a3:	fwait
  4054a4:	out    0x4,eax
  4054a6:	sub    al,0x50
  4054a8:	(bad)  [ebp+0x5]
  4054ab:	cmp    DWORD PTR [ebx-0x1e],ebx
  4054ae:	dec    eax
  4054af:	adc    edx,DWORD PTR [edx]
  4054b1:	lds    edi,FWORD PTR es:[esi]
  4054b4:	loop   0x405485
  4054b6:	inc    esi
  4054b7:	sahf   
  4054b8:	and    esp,DWORD PTR [edx-0x2c3d0d0d]
  4054be:	push   esi
  4054bf:	bound  eax,QWORD PTR [esi+0x29]
  4054c2:	pop    edi
  4054c3:	in     al,dx
  4054c4:	sbb    esi,DWORD PTR [ebp-0x3d]
  4054c7:	jmp    0xd31903c9
  4054cc:	adc    BYTE PTR ss:[edi+0x42bd31a9],cl
  4054d3:	(bad)  
  4054d4:	call   0x2314:0x96922172
  4054db:	loop   0x4054b4
  4054dd:	add    dl,BYTE PTR [edi]
  4054df:	push   ecx
  4054e0:	pusha  
  4054e1:	inc    eax
  4054e2:	leave  
  4054e3:	ror    BYTE PTR [edx-0x34],cl
  4054e6:	push   esp
  4054e7:	mov    BYTE PTR [edx-0x5b],bh
  4054ea:	add    eax,0x45d50240
  4054ef:	pop    edi
  4054f0:	repz jmp 0x4054a2
  4054f3:	shl    BYTE PTR [esi+0x53745c81],cl
  4054f9:	loope  0x40553f
  4054fb:	inc    ecx
  4054fc:	and    eax,0x4c7ac86d
  405501:	stos   BYTE PTR es:[edi],al
  405502:	gs (bad) 
  405504:	adc    al,0x99
  405506:	(bad)  
  405507:	jecxz  0x405586
  405509:	out    dx,al
  40550a:	jp     0x4054bf
  40550c:	out    0x73,al
  40550e:	mov    dh,0x38
  405510:	pop    es
  405511:	popf   
  405512:	imul   ebp,DWORD PTR [ebx+0x78],0x59
  405516:	call   0x140b831
  40551b:	push   edx
  40551c:	xor    al,0xa9
  40551e:	sbb    BYTE PTR [ecx],0x62
  405521:	add    BYTE PTR [ecx+0x49881b4c],bh
  405527:	pop    DWORD PTR [ebx+eax*2]
  40552a:	jge    0x405514
  40552c:	push   ecx
  40552d:	(bad)  
  40552e:	mov    ebp,0x82fc5756
  405533:	in     eax,dx
  405534:	pushf  
  405535:	aas    
  405536:	lea    edi,[esi+0x505de9b0]
  40553c:	fucomip st,st(4)
  40553e:	ror    BYTE PTR [ebx+esi*1+0x77],1
  405542:	loope  0x405529
  405544:	mov    ds:0xe08d2b95,eax
  405549:	leave  
  40554a:	push   ds
  40554b:	sbb    al,0x29
  40554d:	leave  
  40554e:	jmp    0xe53a:0x5325ec9b
  405555:	iret   
  405556:	mov    bh,0xaa
  405558:	mov    ds:0x809a6581,al
  40555d:	iret   
  40555e:	mov    DWORD PTR [edx-0x715023a3],ebx
  405564:	dec    edx
  405565:	jnp    0x405592
  405567:	xor    BYTE PTR [ebp+0x11cd5bcf],0xa7
  40556e:	ret    0x6c14
  405571:	dec    ebx
  405572:	inc    edi
  405573:	mov    bl,0xbf
  405575:	sbb    bh,BYTE PTR [edi+0x1c]
  405578:	xor    al,0xa2
  40557a:	mov    ds:0x8981c7b0,eax
  40557f:	xchg   ebx,eax
  405580:	retf   
  405581:	jl     0x4055ee
  405583:	stc    
  405584:	sbb    BYTE PTR [edx+0x2f18369a],0x68
  40558b:	test   eax,0xdabdef89
  405590:	not    DWORD PTR [eax+edi*4+0x44264d7f]
  405597:	popw   es
  405599:	fdiv   QWORD PTR [ebp-0x24]
  40559c:	pop    edi
  40559d:	sub    al,0xae
  40559f:	cmc    
  4055a0:	pop    es
  4055a1:	div    dh
  4055a3:	rcr    DWORD PTR [ecx+0x68],1
  4055a6:	mov    cs:0x9ad5df5e,al
  4055ac:	xchg   DWORD PTR [ebx+0x4e],esi
  4055af:	mov    DWORD PTR [ebx+0x1d4a171b],esi
  4055b5:	add    DWORD PTR [esi+0x2cbad79d],esi
  4055bb:	adc    al,0xa
  4055bd:	pop    edx
  4055be:	adc    DWORD PTR [edx],ebp
  4055c0:	ss jbe 0x4055ad
  4055c3:	repz push ebp
  4055c5:	jns    0x405596
  4055c7:	push   ss
  4055c8:	push   0xda6968c1
  4055cd:	add    eax,0xb75ea77a
  4055d2:	cmp    edi,0xfffffffd
  4055d5:	jl     0x4055e4
  4055d7:	xlat   BYTE PTR ds:[ebx]
  4055d8:	bound  esi,QWORD PTR [esi+esi*8]
  4055db:	push   es
  4055dc:	pusha  
  4055dd:	cwde   
  4055de:	mov    al,0x4b
  4055e0:	pop    ebp
  4055e1:	mov    al,ds:0x21bcc4e6
  4055e6:	mov    ss,WORD PTR [edi-0x341cfd54]
  4055ec:	out    dx,al
  4055ed:	mov    al,0x9d
  4055ef:	inc    esp
  4055f0:	pusha  
  4055f1:	stos   DWORD PTR es:[edi],eax
  4055f2:	shr    DWORD PTR [eax],0xbc
  4055f5:	and    al,dh
  4055f7:	xor    eax,0xbdad617c
  4055fc:	fiadd  WORD PTR [esi]
  4055fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055ff:	dec    ebp
  405600:	(bad)  
  405601:	xchg   edi,eax
  405602:	std    
  405603:	stc    
  405604:	dec    esi
  405605:	ret    
  405606:	push   ss
  405607:	push   esp
  405608:	xchg   BYTE PTR [edx+0x6b696890],dh
  40560e:	outs   dx,BYTE PTR ds:[esi]
  40560f:	scas   eax,DWORD PTR es:[edi]
  405610:	pusha  
  405611:	test   DWORD PTR [ebx+0x2f],ecx
  405614:	jge    0x405691
  405616:	jmp    0xf9b7478a
  40561b:	sbb    al,0x4f
  40561d:	xchg   DWORD PTR [ebx-0x7c],esi
  405620:	inc    ecx
  405621:	stos   BYTE PTR es:[edi],al
  405622:	mov    edi,DWORD PTR [esi+0x1d]
  405625:	fdivrp st(0),st
  405627:	test   DWORD PTR [esi+0x2c23bde1],edi
  40562d:	repz out 0xd,eax
  405630:	add    edi,esp
  405632:	dec    ebp
  405633:	push   0xffffffe2
  405635:	in     eax,dx
  405636:	cmc    
  405637:	sub    edi,0xca7d9a7b
  40563d:	mov    edi,DWORD PTR [ebx]
  40563f:	cmp    DWORD PTR [esi+0x7b],edi
  405642:	fidivr DWORD PTR [edx+0x1072df51]
  405648:	gs xchg ecx,eax
  40564a:	inc    ebp
  40564b:	sbb    DWORD PTR [ebp+0x50],ebp
  40564e:	or     eax,0x164ac69c
  405653:	mov    eax,0xc4baef19
  405658:	retf   
  405659:	aaa    
  40565a:	add    eax,0x9dc7cd17
  40565f:	es cld 
  405661:	and    BYTE PTR [eax-0x5d],0x5c
  405665:	inc    esi
  405666:	push   ss
  405667:	xor    edx,DWORD PTR [edx]
  405669:	lahf   
  40566a:	add    DWORD PTR [edx-0x7e58ce53],0x20
  405671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405672:	add    al,dl
  405674:	mov    ah,0x21
  405676:	and    ebp,DWORD PTR ds:0x719b5b09
  40567c:	push   edx
  40567d:	inc    edx
  40567e:	popw   es
  405680:	neg    BYTE PTR [esp+ebp*1]
  405683:	sub    al,0x4
  405685:	adc    ch,BYTE PTR [ebx+0x51c00c6e]
  40568b:	aad    0x29
  40568d:	loop   0x40566e
  40568f:	add    ebp,DWORD PTR [edi+ebx*8]
  405692:	sar    al,1
  405694:	imul   edx,DWORD PTR [eax-0x701c08f3],0xffffffb1
  40569b:	push   ss
  40569c:	lods   al,BYTE PTR ds:[esi]
  40569d:	add    eax,DWORD PTR [ebp+ebx*1+0x73]
  4056a1:	outs   dx,BYTE PTR ds:[esi]
  4056a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056a3:	jmp    0x4056da
  4056a5:	push   ds
  4056a6:	add    eax,0x61088d82
  4056ab:	rcl    cl,0xa3
  4056ae:	push   0x6e
  4056b0:	adc    BYTE PTR [eax+0x76],ch
  4056b3:	cld    
  4056b4:	push   eax
  4056b5:	inc    esp
  4056b6:	pop    edi
  4056b7:	test   DWORD PTR [ebp+0x7564fe52],ebp
  4056bd:	das    
  4056be:	(bad)  
  4056bf:	call   0xb5af:0x8205b2e4
  4056c6:	ficom  WORD PTR [ecx-0x7407b7e7]
  4056cc:	jge    0x4056ca
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	rol    DWORD PTR [eax],0x68
  405715:	dec    eax
  405716:	adc    bh,BYTE PTR [edx]
  405718:	js     0x405792
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x40575e
  40571f:	jmp    0x4056c8
  405721:	pop    esp
  405722:	xor    BYTE PTR [ebx-0x4],0x6e
  405726:	stos   BYTE PTR es:[edi],al
  405727:	and    ch,al
  405729:	mov    edi,0xb37caa93
  40572e:	mov    DWORD PTR ds:0x55bb23d9,0x40704831
  405738:	pop    ecx
  405739:	sbb    eax,0xd17df698
  40573e:	shl    ebp,cl
  405740:	test   BYTE PTR [ebp-0x72],al
  405743:	mov    al,0xcb
  405745:	fmulp  st(4),st
  405747:	sar    BYTE PTR [eax-0x508c433],1
  40574d:	and    eax,0x679d2f8e
  405752:	lds    ebp,FWORD PTR [esi+0x5]
  405755:	dec    ebx
  405756:	ins    BYTE PTR es:[edi],dx
  405757:	pop    edx
  405758:	inc    eax
  405759:	sar    DWORD PTR [esi-0x12506ef4],cl
  40575f:	jns    0x405788
  405761:	(bad)  
  405762:	ficom  WORD PTR ds:0xacca2d8
  405768:	jecxz  0x4056fc
  40576a:	mov    ecx,0xbbfe5e50
  40576f:	mov    BYTE PTR es:[edx],dh
  405772:	jno    0x4056ff
  405774:	loopne 0x405798
  405776:	push   0x44
  405778:	dec    edi
  405779:	xchg   esp,eax
  40577a:	push   ebx
  40577b:	ret    
  40577c:	icebp  
  40577d:	lods   eax,DWORD PTR ds:[esi]
  40577e:	repnz pop ebx
  405780:	xchg   esi,eax
  405781:	push   edx
  405782:	addr16 loope 0x40578c
  405785:	adc    esi,DWORD PTR [eax]
  405787:	ficom  WORD PTR ds:0x5a4d0b7c
  40578d:	test   al,0xd9
  40578f:	imul   ecx,DWORD PTR [ebp+0x0],0x80b9a18c
  405796:	pushf  
  405797:	add    cl,BYTE PTR [edi]
  405799:	stc    
  40579a:	xor    dh,BYTE PTR [eax+0x5b1e03ee]
  4057a0:	dec    eax
  4057a1:	popf   
  4057a2:	inc    eax
  4057a3:	dec    ebx
  4057a4:	sub    DWORD PTR [ebp-0x806a41c],edi
  4057aa:	push   esp
  4057ab:	ja     0x4057dd
  4057ad:	mov    ebx,0xc90fd602
  4057b2:	jno    0x4057f9
  4057b4:	and    dh,ah
  4057b6:	inc    eax
  4057b7:	(bad)  
  4057b9:	pop    ebp
  4057ba:	push   cs
  4057bb:	adc    dh,BYTE PTR [esi+edx*8]
  4057be:	in     eax,0xeb
  4057c0:	lea    esi,[eax+0xc]
  4057c3:	call   0xc128:0xd55b440d
  4057ca:	inc    esp
  4057cb:	loope  0x405794
  4057cd:	push   0x2b
  4057cf:	cmp    DWORD PTR ss:[ebp-0x3b],ebx
  4057d3:	call   0xa0f1e17e
  4057d8:	ja     0x4057bf
  4057da:	push   esi
  4057db:	jnp    0x40580d
  4057dd:	mov    WORD PTR [edi],ds
  4057df:	mov    ch,0x8d
  4057e1:	mov    eax,0xfa9da06a
  4057e6:	mov    DWORD PTR [eax-0x9e59157],esp
  4057ec:	mov    ebx,0x38e46c32
  4057f1:	and    cl,BYTE PTR [ebp+0x3018c3d2]
  4057f7:	retf   
  4057f8:	and    eax,0x39ca8537
  4057fd:	mov    eax,ds:0x594405ab
  405802:	scas   al,BYTE PTR es:[edi]
  405803:	add    ecx,eax
  405805:	retf   0x467b
  405808:	ds pop esp
  40580a:	imul   ebx,DWORD PTR [esi-0x608aaf33],0xa4910166
  405814:	add    al,0x7e
  405816:	mov    cl,0xc
  405818:	inc    eax
  405819:	mov    bl,0x30
  40581b:	sbb    eax,0xf7314b96
  405820:	xchg   edi,eax
  405821:	rep ins DWORD PTR es:[edi],dx
  405823:	xor    ebp,DWORD PTR [edi-0x4]
  405826:	push   edx
  405827:	and    cl,BYTE PTR [edi-0x1af46da2]
  40582d:	repz sbb BYTE PTR [edx],dh
  405830:	mov    ch,BYTE PTR [esi+0x53]
  405833:	sbb    eax,0xff7adbea
  405838:	call   0x76ba6bee
  40583d:	cld    
  40583e:	sbb    al,0x41
  405840:	icebp  
  405841:	dec    ecx
  405842:	repnz mov esp,0xc3c6fba
  405848:	hlt    
  405849:	(bad)  
  40584a:	cmp    bh,ah
  40584c:	mov    bl,0xfc
  40584e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40584f:	imul   ebx,ecx,0x9200525
  405855:	(bad)  
  405856:	je     0x405854
  405858:	sub    esi,0x23
  40585b:	pop    esi
  40585c:	sub    ebx,DWORD PTR [esi-0x6d8ae403]
  405862:	jne    0x40582f
  405864:	adc    edx,edi
  405866:	add    DWORD PTR [edx-0xfad1781],edi
  40586c:	fidiv  WORD PTR [edi+0x57]
  40586f:	in     eax,0x47
  405871:	int    0x27
  405873:	xchg   esi,eax
  405874:	fsub   st(3),st
  405876:	not    ch
  405878:	(bad)
  40587c:	stc    
  40587d:	adc    DWORD PTR [esi+eiz*8],esp
  405880:	gs xor DWORD PTR ss:0x5f9a5b86,ebp
  405888:	fwait
  405889:	pop    eax
  40588a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40588b:	or     DWORD PTR [esi+eiz*4+0x5f278794],ebp
  405892:	adc    al,0x90
  405894:	adc    al,0x5f
  405896:	mov    ecx,0x3c17d2b
  40589b:	js     0x405883
  40589d:	and    al,BYTE PTR [edx+0x6c]
  4058a0:	or     ah,BYTE PTR [ebx]
  4058a2:	inc    esi
  4058a3:	dec    esi
  4058a4:	fiadd  WORD PTR [eax-0x23b27780]
  4058aa:	fwait
  4058ab:	dec    esi
  4058ac:	sbb    edx,ebx
  4058ae:	outs   dx,BYTE PTR ds:[esi]
  4058af:	mov    ebx,0xaa1273b6
  4058b4:	cmc    
  4058b5:	stos   BYTE PTR es:[edi],al
  4058b6:	fistp  WORD PTR [ecx-0x3c]
  4058b9:	inc    edi
  4058ba:	test   eax,0x63121f7
  4058bf:	and    DWORD PTR [eax],eax
  4058c1:	xchg   edi,eax
  4058c2:	xchg   esi,eax
  4058c3:	xor    BYTE PTR [esp+eax*8-0x2f],0x52
  4058c8:	xchg   ebx,eax
  4058c9:	test   al,0xdb
  4058cb:	imul   edx,DWORD PTR [esp+edi*8],0xffffffee
  4058cf:	ficomp WORD PTR [edi-0x25]
  4058d2:	mov    cl,0xed
  4058d4:	or     DWORD PTR [ecx-0x16],esp
  4058d7:	sub    dh,0xbc
  4058da:	ss push ecx
  4058dc:	lds    eax,FWORD PTR [esi+0x4b0232e9]
  4058e2:	jae    0x4058cb
  4058e4:	aad    0xf1
  4058e6:	(bad)  
  4058e7:	mov    ebx,0x21d72fca
  4058ec:	call   0x66637c0e
  4058f1:	adc    bl,BYTE PTR [ecx*4+0x61b93ca3]
  4058f8:	mov    ecx,DWORD PTR [ecx-0x335a0138]
  4058fe:	fild   WORD PTR [esi+0x5a220eab]
  405904:	bound  eax,QWORD PTR [esi]
  405906:	test   esp,ebp
  405908:	push   ecx
  405909:	push   eax
  40590a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40590b:	pop    esi
  40590c:	jns    0x405921
  40590e:	pop    esi
  40590f:	mov    esi,0x7fdd9ac0
  405914:	jmp    0x405903
  405916:	mov    bh,BYTE PTR [ebx-0x54]
  405919:	sbb    al,0xa8
  40591b:	loope  0x405989
  40591d:	out    dx,al
  40591e:	enter  0x60d7,0xda
  405922:	xchg   esi,eax
  405924:	rol    DWORD PTR ss:[edx+eiz*1+0x41],cl
  405929:	dec    esi
  40592a:	or     al,0x9a
  40592c:	icebp  
  40592d:	push   esi
  40592e:	into   
  40592f:	cmp    BYTE PTR fs:[eax-0x4b1e1867],al
  405936:	cmp    BYTE PTR [esp+ebx*4],ah
  405939:	push   0x2e7d8d9a
  40593e:	jo     0x405954
  405940:	dec    DWORD PTR ds:0xb2aecdc9
  405946:	or     DWORD PTR [esi-0x8],0x7963ff9f
  40594d:	mov    ecx,0xa1906502
  405952:	mov    ss,edx
  405954:	imul   ecx,DWORD PTR [esi-0x12262afd],0x84ac7e58
  40595e:	or     BYTE PTR [ebx],cl
  405960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405961:	pop    ss
  405962:	sbb    bh,bh
  405964:	jne    0x405909
  405966:	dec    esp
  405967:	push   0xa35d1dba
  40596c:	les    esi,FWORD PTR [esi-0x79]
  40596f:	aas    
  405970:	into   
  405971:	loope  0x40596c
  405973:	push   0xffffffc5
  405975:	add    DWORD PTR [ebp+0x46799078],0x82ba01c6
  40597f:	sbb    bh,al
  405981:	lds    esi,FWORD PTR [ebx+edi*8-0x59]
  405985:	lahf   
  405986:	ja     0x405940
  405988:	js     0x405912
  40598a:	shr    DWORD PTR [ebp-0xf4af6ad],1
  405990:	jno    0x405937
  405992:	and    eax,0x436354d2
  405998:	int3   
  405999:	dec    edx
  40599a:	adc    al,0xe0
  40599c:	jl     0x405945
  40599e:	stc    
  40599f:	(bad)  
  4059a0:	fild   DWORD PTR [ebx+0x3a102eb0]
  4059a6:	pop    ebp
  4059a7:	push   ebp
  4059a8:	leave  
  4059a9:	inc    edi
  4059aa:	lods   eax,DWORD PTR ds:[esi]
  4059ab:	push   cs
  4059ac:	rcr    BYTE PTR [edx-0x4599fc91],1
  4059b2:	pop    ebp
  4059b3:	adc    bl,BYTE PTR [ecx-0x5]
  4059b6:	xor    BYTE PTR [ebp+ebx*4+0x7cf875db],0x86
  4059be:	or     ebx,eax
  4059c0:	lahf   
  4059c1:	pusha  
  4059c2:	jbe    0x40595f
  4059c4:	test   eax,0x4ae8bc46
  4059c9:	xor    al,0xa4
  4059cb:	fist   DWORD PTR [edi+0x56afaaf0]
  4059d1:	mov    ch,0x99
  4059d3:	xchg   edx,eax
  4059d4:	push   esi
  4059d5:	hlt    
  4059d6:	call   0xd2c8:0xd8d931c5
  4059dd:	dec    esi
  4059de:	push   DWORD PTR [ebp+0x2c5455ad]
  4059e4:	dec    ebp
  4059e5:	jg     0x4059d6
  4059e7:	jo     0x40599f
  4059e9:	inc    ebp
  4059ea:	aad    0x8c
  4059ec:	int    0xeb
  4059ee:	jl     0x40599e
  4059f0:	stos   DWORD PTR es:[edi],eax
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059e8
  405a20:	jb     0x405a5a
  405a22:	cmp    al,0x67
  405a24:	cmp    BYTE PTR [eax+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a59
  405a2c:	aad    0xa3
  405a2e:	push   cs
  405a2f:	adc    DWORD PTR [ebx+0x57],0x78d793b9
  405a36:	add    ah,ch
  405a38:	cmp    esp,ebx
  405a3a:	call   0xe350059b
  405a3f:	fild   QWORD PTR [bp+0x61]
  405a43:	loop   0x405aa1
  405a45:	push   ebp
  405a46:	repnz xchg esp,eax
  405a48:	ins    DWORD PTR es:[edi],dx
  405a49:	mov    eax,0xfe0d3439
  405a4e:	sbb    BYTE PTR [ecx],cl
  405a50:	pop    ebx
  405a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a52:	aam    0xd4
  405a54:	sub    DWORD PTR [esi-0x53a567b7],ebp
  405a5a:	ins    DWORD PTR es:[edi],dx
  405a5b:	add    BYTE PTR [eax+0x5db83356],dl
  405a61:	sub    DWORD PTR ss:[ebx+0x14],esi
  405a65:	mov    DWORD PTR [edx+0x13],edi
  405a68:	test   al,0x3f
  405a6a:	aas    
  405a6b:	push   ecx
  405a6c:	sar    DWORD PTR [esi-0x4c],1
  405a6f:	adc    eax,0x9478430b
  405a75:	or     BYTE PTR [esi+0x35],ch
  405a78:	jp     0x405a67
  405a7a:	fdiv   QWORD PTR [ebp+0x64]
  405a7d:	inc    ebx
  405a7e:	cmp    esi,DWORD PTR [esi]
  405a80:	imul   ebx,DWORD PTR [ecx+0x2f],0xe0a910b2
  405a87:	repnz in eax,dx
  405a89:	enter  0x90a8,0x59
  405a8d:	xor    eax,0xb8244d66
  405a92:	dec    edi
  405a93:	in     eax,dx
  405a94:	gs loop 0x405a4e
  405a97:	arpl   WORD PTR [ebx+0x4b67db27],ax
  405a9d:	mov    ecx,0xa8f9fcf9
  405aa2:	js     0x405aaf
  405aa4:	ret    0xd92f
  405aa7:	call   0xf8959480
  405aac:	div    DWORD PTR [edi+0x3c2344de]
  405ab2:	add    DWORD PTR [ebp+0x3ee3f4b9],ebp
  405ab8:	jge    0x405aea
  405aba:	cmp    DWORD PTR [ebx-0x25],ebp
  405abd:	call   0x501bddd8
  405ac2:	xchg   DWORD PTR [edi+eiz*4+0x40a3c910],eax
  405ac9:	xor    eax,0x4f2f057
  405ace:	stos   DWORD PTR es:[edi],eax
  405acf:	mov    bl,0xc6
  405ad1:	ja     0x405b4f
  405ad3:	add    DWORD PTR [esp+ecx*2+0x1a],ebp
  405ad7:	loop   0x405a8f
  405ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ada:	sbb    al,0x72
  405adc:	jecxz  0x405ac2
  405ade:	mov    dl,0xeb
  405ae0:	sub    DWORD PTR [ecx+0x4bedf01f],edi
  405ae6:	xor    DWORD PTR [esi+0x45fb4dad],esi
  405aec:	imul   esi,DWORD PTR [ebx],0x6f
  405aef:	and    ch,BYTE PTR [edx]
  405af1:	jae    0x405b58
  405af3:	xchg   ebp,eax
  405af4:	cmp    esi,DWORD PTR [edx-0x40]
  405af7:	and    DWORD PTR [eax-0x1e],0xffffff8a
  405afb:	das    
  405afc:	out    0x7f,al
  405afe:	mov    ecx,0x40f10da9
  405b03:	das    
  405b04:	sbb    BYTE PTR [esp+eiz*8-0x14],al
  405b08:	outs   dx,BYTE PTR ds:[esi]
  405b09:	aam    0x0
  405b0b:	cmc    
  405b0c:	outs   dx,DWORD PTR ds:[esi]
  405b0d:	mov    al,ds:0xcb6d612
  405b12:	loope  0x405a9b
  405b14:	xchg   edx,eax
  405b15:	enter  0xc1e7,0x40
  405b19:	(bad)  
  405b1a:	cmp    eax,0x2eaafdbb
  405b1f:	bound  eax,QWORD PTR [esi+0x75862636]
  405b25:	cwde   
  405b26:	sbb    esp,DWORD PTR [edx-0x66]
  405b29:	sbb    DWORD PTR [edi+0x35b138cb],ebp
  405b2f:	jmp    0x93ee:0x7ec1030f
  405b36:	xchg   ecx,eax
  405b37:	repz jmp 0x535ee8b0
  405b3d:	mov    ebp,0x6a709a3e
  405b42:	xor    al,0x1e
  405b44:	sbb    BYTE PTR [edx+0x420dd1af],0xf8
  405b4b:	pop    esi
  405b4c:	add    al,BYTE PTR [edx-0x1d]
  405b4f:	pop    edx
  405b50:	mov    dh,0xcb
  405b52:	leave  
  405b53:	mov    bh,0x19
  405b55:	pop    edx
  405b56:	scas   eax,DWORD PTR es:[edi]
  405b57:	sar    DWORD PTR [ecx+0x116673e6],cl
  405b5d:	addr16 int3 
  405b5f:	fs test al,0x6c
  405b62:	js     0x405bb8
  405b64:	(bad)  
  405b66:	push   ds
  405b67:	inc    DWORD PTR [ebx+0x35]
  405b6a:	add    BYTE PTR [edx-0x5b],bh
  405b6d:	test   ebx,edi
  405b6f:	lock inc ecx
  405b71:	cmp    bl,ch
  405b73:	xlat   BYTE PTR ds:[ebx]
  405b74:	daa    
  405b75:	iret   
  405b76:	jmp    0x405b40
  405b78:	jle    0x405bf4
  405b7a:	adc    al,0x7e
  405b7c:	and    BYTE PTR [edi],cl
  405b7e:	inc    esp
  405b7f:	adc    DWORD PTR [ebx],edx
  405b81:	shl    DWORD PTR [ebp-0x76e607cf],1
  405b87:	hlt    
  405b88:	cld    
  405b89:	and    bh,dh
  405b8b:	add    BYTE PTR [edx-0x7de1d23],cl
  405b91:	into   
  405b92:	ret    
  405b93:	sub    ebx,DWORD PTR [ebx-0x6f]
  405b96:	leave  
  405b97:	dec    ebp
  405b98:	sbb    eax,0x29f8de8b
  405b9d:	sbb    cl,BYTE PTR [edx+0x44044367]
  405ba3:	dec    edx
  405ba4:	inc    edx
  405ba5:	out    0x35,al
  405ba7:	cwde   
  405ba8:	(bad)  
  405ba9:	out    dx,eax
  405baa:	adc    ch,cl
  405bac:	push   ss
  405bad:	cwde   
  405bae:	xchg   edx,eax
  405baf:	aaa    
  405bb0:	je     0x405c07
  405bb2:	mov    ecx,0xc0a3264d
  405bb7:	jno    0x405b3a
  405bb9:	push   cs
  405bba:	mov    ah,0xce
  405bbc:	inc    ecx
  405bbd:	iret   
  405bbe:	ffree  st(7)
  405bc0:	pop    ds
  405bc1:	jp     0x405b9a
  405bc3:	and    BYTE PTR [edi+0x18],ah
  405bc6:	adc    ah,BYTE PTR [edx-0x4e]
  405bc9:	push   ecx
  405bca:	mov    esi,DWORD PTR [ecx+0x4f6b6fe]
  405bd0:	ss loope 0x405bb6
  405bd3:	(bad)  
  405bd5:	sub    eax,0x67259072
  405bda:	push   0xffffffaa
  405bdc:	ss mov esi,0x3388ba25
  405be2:	loopne 0x405c49
  405be4:	inc    edi
  405be5:	jb     0x405c28
  405be7:	repnz nop
  405be9:	and    DWORD PTR [ebx],0x7c9226f3
  405bef:	pop    ebp
  405bf0:	cs mov eax,0xc753b043
  405bf6:	mov    esp,0x49dbbd70
  405bfb:	ret    0x9bc2
  405bfe:	sti    
  405bff:	call   0x867d:0x79d56e12
  405c06:	int    0x1a
  405c08:	jo     0x405bc8
  405c0a:	int    0x2a
  405c0c:	pop    esi
  405c0d:	mov    eax,ds:0x38c411b1
  405c12:	push   ebx
  405c13:	(bad)  
  405c14:	push   edx
  405c15:	cli    
  405c16:	push   edi
  405c17:	or     cl,BYTE PTR [edi+0x13c42fe2]
  405c1d:	jmp    0x830e:0x9d19f126
  405c24:	mov    ecx,0x4fbe898f
  405c29:	sbb    al,0x57
  405c2b:	fbstp  TBYTE PTR [eax]
  405c2d:	xor    edi,edi
  405c2f:	paddsb mm6,QWORD PTR [edx]
  405c32:	lods   eax,DWORD PTR ds:[esi]
  405c33:	sub    ebx,0x78
  405c36:	or     eax,0x53912f0c
  405c3b:	mov    eax,DWORD PTR [esi+0x49]
  405c3e:	scas   al,BYTE PTR es:[edi]
  405c3f:	cli    
  405c40:	xchg   esp,eax
  405c41:	or     bl,dl
  405c43:	loop   0x405c86
  405c45:	xchg   ebx,eax
  405c46:	lods   eax,DWORD PTR ds:[esi]
  405c47:	jmp    0x95a7f37d
  405c4c:	adc    BYTE PTR [esi-0x114d698c],ah
  405c52:	ror    BYTE PTR [eax-0xe],cl
  405c55:	add    eax,0x1647c6cb
  405c5a:	xchg   BYTE PTR [edi-0x2c],cl
  405c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5e:	sub    al,0x95
  405c60:	retf   0x516b
  405c63:	retf   0x921b
  405c66:	out    dx,eax
  405c67:	inc    eax
  405c68:	jle    0x405c06
  405c6a:	outs   dx,DWORD PTR ds:[esi]
  405c6b:	or     ebx,edi
  405c6d:	mov    ds,WORD PTR cs:[eax+0x71c086ea]
  405c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c75:	pop    ebx
  405c76:	xchg   esp,eax
  405c77:	sub    eax,0x2522717c
  405c7c:	sbb    eax,0x5decc438
  405c81:	jns    0x405c65
  405c83:	inc    DWORD PTR [ecx]
  405c85:	xor    DWORD PTR [ebx+ebp*2+0x234deb3e],ebp
  405c8c:	test   BYTE PTR [esi],ah
  405c8e:	leave  
  405c8f:	cmp    DWORD PTR [ebx],ebx
  405c91:	out    0x59,eax
  405c93:	push   ss
  405c94:	call   0x92e0:0xc0d474f6
  405c9b:	mov    al,0xc6
  405c9d:	daa    
  405c9e:	mov    ebp,0xfb5430b3
  405ca3:	xchg   BYTE PTR [ebx],bh
  405ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca6:	ror    BYTE PTR [edi+0x56de8413],1
  405cac:	jne    0x405c79
  405cae:	pop    edi
  405caf:	retf   
  405cb0:	stc    
  405cb1:	js     0x405c8f
  405cb3:	cld    
  405cb4:	aad    0x61
  405cb6:	outs   dx,DWORD PTR ds:[esi]
  405cb7:	mov    bh,0xce
  405cb9:	push   ebx
  405cba:	out    0xab,eax
  405cbc:	add    eax,0x29624032
  405cc1:	out    0xb9,eax
  405cc3:	inc    ebx
  405cc4:	mov    esi,0xc8678da7
  405cc9:	jge    0x405cac
  405ccb:	lahf   
  405ccc:	inc    eax
  405ccd:	mov    al,0xdc
  405ccf:	hlt    
  405cd0:	pusha  
  405cd1:	pshufw mm4,mm3,0x7e
  405cd5:	jle    0x405cdd
  405cd7:	lods   eax,DWORD PTR ds:[esi]
  405cd8:	add    cl,bh
  405cda:	pop    ss
  405cdb:	push   esi
  405cdc:	ins    BYTE PTR es:[edi],dx
  405cdd:	pop    ds
  405cde:	cmp    ebx,esp
  405ce0:	push   0xffffffd3
  405ce2:	lahf   
  405ce3:	push   ss
  405ce4:	je     0x405cda
  405ce6:	call   0xdfe:0x47b05a33
  405ced:	add    eax,0xc12854c4
  405cf2:	popa   
  405cf3:	inc    edx
  405cf4:	sbb    al,0x1c
  405cf6:	rcr    DWORD PTR ds:0x21e131cf,cl
  405cfc:	mov    eax,ds:0xe9d233d0
  405d01:	jmp    0x405d05
  405d03:	add    BYTE PTR [eax],al
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0x51f24c09
  405d13:	sub    al,dl
  405d15:	mov    ah,0x3d
  405d17:	js     0x405d91
  405d19:	dec    ebp
  405d1a:	jle    0x405d94
  405d1c:	js     0x405ceb
  405d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1f:	jmp    0x405cf4
  405d21:	mov    BYTE PTR [ebp-0x49],dh
  405d24:	adc    eax,ecx
  405d26:	int3   
  405d27:	mov    dl,0x5b
  405d29:	cmp    DWORD PTR [ebp+eiz*8-0x6c836c48],edx
  405d30:	push   ebx
  405d31:	(bad)  
  405d32:	cmc    
  405d33:	jno    0x405d7c
  405d35:	push   cs
  405d36:	sti    
  405d37:	adc    ecx,0xffffffc6
  405d3a:	inc    eax
  405d3b:	ds push 0xc172e910
  405d41:	jo     0x405cec
  405d43:	jmp    0x4d449267
  405d48:	(bad)  
  405d49:	mov    ah,0x1e
  405d4b:	lds    esi,FWORD PTR [eax+ebp*8]
  405d4e:	inc    esi
  405d4f:	xchg   esp,eax
  405d50:	sbb    BYTE PTR [ebp+0xc],ah
  405d53:	ror    BYTE PTR [ebx],0xf2
  405d56:	js     0x405d9d
  405d58:	das    
  405d59:	dec    esp
  405d5a:	mov    BYTE PTR [ebx+ecx*1],cl
  405d5d:	sbb    ecx,ebx
  405d5f:	mov    DWORD PTR [ecx+0x1e],esp
  405d62:	push   ss
  405d63:	sub    edi,DWORD PTR ss:[edi+0x65]
  405d67:	push   edx
  405d68:	xlat   BYTE PTR ds:[ebx]
  405d69:	xchg   edx,eax
  405d6a:	pop    edi
  405d6b:	add    BYTE PTR [esi+esi*8-0x18],dl
  405d6f:	adc    DWORD PTR ds:0x21d3afee,eax
  405d75:	fwait
  405d76:	lds    esi,FWORD PTR [ecx]
  405d78:	loop   0x405d09
  405d7a:	out    dx,al
  405d7b:	xor    esi,DWORD PTR [ecx+edx*8-0x50d81065]
  405d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d83:	adc    ecx,DWORD PTR [eax+0x6f]
  405d86:	xchg   DWORD PTR [eax-0x6d],eax
  405d89:	lods   al,BYTE PTR fs:[esi]
  405d8b:	ror    BYTE PTR [ebx],cl
  405d8d:	rcr    BYTE PTR [eax],cl
  405d8f:	arpl   WORD PTR [ebx+0xfe77531],dx
  405d95:	out    0x32,eax
  405d97:	retf   
  405d98:	or     BYTE PTR [edx-0x6c],dh
  405d9b:	gs mov eax,0xddd37727
  405da1:	and    dh,bh
  405da3:	mov    ebp,DWORD PTR [ebx]
  405da5:	stc    
  405da6:	xchg   ecx,eax
  405da7:	xor    dl,BYTE PTR [ebp+0x7f]
  405daa:	xor    al,0xb8
  405dac:	retf   0x1ca9
  405daf:	(bad)  
  405db0:	mov    ebp,0x7d64ff06
  405db5:	mov    ch,BYTE PTR [edi-0x4c504f2e]
  405dbb:	add    esi,DWORD PTR [eax+ebx*1-0x58]
  405dbf:	in     al,dx
  405dc0:	sti    
  405dc1:	ins    BYTE PTR es:[edi],dx
  405dc2:	xchg   ebp,eax
  405dc3:	inc    ebp
  405dc4:	shl    BYTE PTR [eax-0x42],cl
  405dc7:	les    ecx,FWORD PTR [edi-0x4fa76739]
  405dcd:	push   edx
  405dce:	sahf   
  405dcf:	mov    es,WORD PTR [edx]
  405dd1:	loope  0x405d67
  405dd3:	mov    DWORD PTR gs:[eax],eax
  405dd6:	fldcw  WORD PTR [ebp-0x7dc7fbbb]
  405ddc:	fadd   DWORD PTR [edx-0x16]
  405ddf:	or     ebp,edi
  405de1:	dec    esi
  405de2:	xchg   ebx,eax
  405de3:	jp     0x405dcd
  405de5:	pushf  
  405de6:	push   edi
  405de7:	xchg   BYTE PTR [eax-0x5db6098],bh
  405ded:	or     eax,0xb6931feb
  405df2:	sbb    BYTE PTR [edi+eiz*8-0x101a0441],0x44
  405dfa:	mov    ch,0x8f
  405dfc:	jno    0x405e76
  405dfe:	imul   esp,DWORD PTR [eax+0x38],0x66
  405e02:	or     DWORD PTR [edx-0x3c],0xa57b7ff3
  405e09:	mov    ecx,db2
  405e0c:	sbb    bl,ah
  405e0e:	push   cs
  405e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e10:	mov    ecx,0x118f1bcb
  405e15:	repnz pop eax
  405e17:	inc    edi
  405e18:	sbb    bh,ah
  405e1a:	push   esi
  405e1b:	mov    edx,0x70270b2b
  405e20:	or     al,0xdd
  405e22:	ja     0x405dec
  405e24:	fsub   st(2),st
  405e26:	hlt    
  405e27:	jo     0x405e5d
  405e29:	mov    esi,0x5e880625
  405e2e:	dec    ecx
  405e2f:	out    0x8b,al
  405e31:	xchg   esp,eax
  405e32:	cmp    al,0xea
  405e34:	jb     0x405e61
  405e36:	mov    ds:0x53f6bbc7,eax
  405e3b:	in     eax,0xaf
  405e3d:	or     ah,BYTE PTR [ebx+0x48a387bc]
  405e43:	test   DWORD PTR [esi-0x62],edi
  405e46:	and    DWORD PTR [ebx],ebx
  405e48:	test   eax,0xd4482304
  405e4d:	pop    esp
  405e4e:	or     BYTE PTR [eax-0x40],dh
  405e51:	xchg   ebp,eax
  405e52:	call   0xf6be:0x222adb11
  405e59:	add    ah,ah
  405e5b:	push   ss
  405e5c:	das    
  405e5d:	mov    BYTE PTR cs:[ecx-0x68],al
  405e61:	loopne 0x405e48
  405e63:	push   0xc9120ea0
  405e68:	sbb    bh,BYTE PTR [ecx+0x67]
  405e6b:	jg     0x405ee2
  405e6d:	(bad)  
  405e6e:	fcomip st,st(5)
  405e70:	push   0x60
  405e72:	in     al,0x72
  405e74:	call   0x2cb4:0x8adcbfeb
  405e7b:	stos   BYTE PTR es:[edi],al
  405e7c:	imul   esp,DWORD PTR [esi],0x15c0a280
  405e82:	sbb    ebp,DWORD PTR [eax-0x43]
  405e85:	sahf   
  405e86:	mov    dh,0x4b
  405e88:	jmp    0x941cb8c7
  405e8d:	std    
  405e8e:	mov    esi,0x869ef824
  405e93:	pop    edi
  405e94:	dec    ebx
  405e95:	xchg   ecx,eax
  405e96:	mov    dl,0x81
  405e98:	(bad)  
  405e99:	scas   eax,DWORD PTR es:[edi]
  405e9a:	fwait
  405e9b:	imul   edx,DWORD PTR [edx+eax*1+0x3b506c3f],0x20
  405ea3:	repz pop eax
  405ea5:	ret    
  405ea6:	inc    edi
  405ea7:	popa   
  405ea8:	mov    edx,0x7222f229
  405ead:	arpl   WORD PTR [ebp+eax*4+0x24a44387],dx
  405eb4:	pop    edi
  405eb5:	mov    BYTE PTR [edx+edi*8],dh
  405eb8:	out    0x62,al
  405eba:	add    bh,BYTE PTR [esi-0x4]
  405ebd:	es test al,0x34
  405ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec1:	xlat   BYTE PTR ds:[ebx]
  405ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec3:	mov    al,ds:0xbf0ebf95
  405ec8:	fcom   DWORD PTR ds:0x6a30ca3f
  405ece:	pop    ds
  405ecf:	mov    eax,ds:0x7baf6cf
  405ed4:	cmp    al,0x25
  405ed6:	cli    
  405ed7:	fcmovu st,st(4)
  405ed9:	mov    al,0x21
  405edb:	mov    WORD PTR [edi+0x6673ca2a],?
  405ee1:	shr    DWORD PTR [ecx+0x4b],1
  405ee4:	dec    esi
  405ee5:	sbb    bh,al
  405ee7:	jns    0x405eee
  405ee9:	gs pushf 
  405eeb:	lods   al,BYTE PTR ds:[esi]
  405eec:	call   0x589:0x1a5bd1d7
  405ef3:	repz xchg esp,eax
  405ef5:	push   0xffffff80
  405ef7:	cs push es
  405ef9:	arpl   bx,bx
  405efb:	mov    WORD PTR ds:[edx+ebp*4+0x6ae84844],?
  405f03:	mov    eax,0xb071859c
  405f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f09:	push   ebx
  405f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f0b:	inc    edx
  405f0c:	jnp    0x405e90
  405f0e:	cmp    DWORD PTR [edx+0x40dfb93d],esi
  405f14:	std    
  405f15:	fs pop esp
  405f17:	cwde   
  405f18:	out    0xae,eax
  405f1a:	mov    DWORD PTR [ebx-0x3339f033],edi
  405f20:	mov    eax,ds:0x619d2a04
  405f25:	mov    edx,0xe7b53fc3
  405f2a:	mov    ebx,0x5ed1949
  405f2f:	xchg   esp,eax
  405f30:	push   eax
  405f31:	xor    esp,DWORD PTR [esi+edx*8-0x61]
  405f35:	fisttp DWORD PTR [edi]
  405f37:	dec    ecx
  405f38:	pop    esp
  405f39:	mov    DWORD PTR [esp+ebx*1],eax
  405f3c:	sbb    eax,0x7d65f9c8
  405f41:	mov    edi,0x39f34ced
  405f46:	adc    BYTE PTR [esi+0x38318aba],bh
  405f4c:	sub    al,0x64
  405f4e:	or     eax,0x484dcf65
  405f53:	dec    eax
  405f54:	inc    esp
  405f55:	ret    
  405f56:	repz shl DWORD PTR ds:0x47878cd1,1
  405f5d:	(bad)  
  405f5e:	xchg   ebx,eax
  405f5f:	mov    ebp,edx
  405f61:	cmp    al,0xe0
  405f63:	sar    BYTE PTR [edi+ebx*1-0x13eab754],cl
  405f6a:	stc    
  405f6b:	inc    ecx
  405f6c:	lock bound ecx,QWORD PTR [ecx]
  405f6f:	cmc    
  405f70:	(bad)  
  405f71:	mov    al,ds:0x15ef43f6
  405f76:	lea    ecx,[ecx-0x18]
  405f79:	add    esp,edi
  405f7b:	test   eax,0x15a1e936
  405f80:	out    dx,eax
  405f81:	les    ebx,FWORD PTR [ebx+edx*8]
  405f84:	sub    eax,0x65bde8d2
  405f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f8a:	aas    
  405f8b:	out    dx,eax
  405f8c:	rol    BYTE PTR [ebx-0x35],cl
  405f8f:	inc    ecx
  405f90:	mov    ds:0x1c5615ef,al
  405f95:	add    DWORD PTR [edi+0x3c38b10e],esi
  405f9b:	pop    edx
  405f9c:	fnstenv ds:0x8c7dfd1
  405fa2:	aaa    
  405fa3:	sti    
  405fa4:	or     DWORD PTR [edi+0x5f995fd1],ebp
  405faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fab:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  405fad:	scas   al,BYTE PTR es:[edi]
  405fae:	out    dx,eax
  405faf:	ret    
  405fb0:	adc    ah,BYTE PTR [eax-0x26a8d37d]
  405fb6:	add    BYTE PTR [esi],0xcf
  405fb9:	pop    ss
  405fba:	pop    ecx
  405fbb:	xor    eax,DWORD PTR [eax]
  405fbd:	neg    BYTE PTR [edi+eiz*1]
  405fc0:	jbe    0x405fab
  405fc2:	jp     0x405fe4
  405fc4:	cmp    ebx,DWORD PTR [esi]
  405fc6:	pop    es
  405fc7:	sub    eax,0x594ef017
  405fcc:	in     al,dx
  405fcd:	or     ah,al
  405fcf:	add    al,0x81
  405fd1:	retf   
  405fd2:	into   
  405fd3:	xchg   ebp,eax
  405fd4:	pop    esi
  405fd5:	jo     0x405f8d
  405fd7:	pop    ecx
  405fd8:	nop
  405fd9:	and    edx,DWORD PTR [ebx-0x48]
  405fdc:	jae    0x406041
  405fde:	in     eax,dx
  405fdf:	dec    ebx
  405fe0:	in     eax,dx
  405fe1:	imul   edx,DWORD PTR [ebp+0x56],0x78da0646
  405fe8:	xlat   BYTE PTR ds:[ebx]
  405fe9:	or     eax,0x4456fa1f
  405fee:	arpl   WORD PTR [esi-0x47],bx
  405ff1:	push   eax
  405ff2:	std    
  405ff3:	fs jb  0x405fdf
  405ff6:	jmp    0x405ffa
  405ff8:	add    BYTE PTR [eax],al
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	repnz push 0xc2894986
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x405fe4
  406013:	inc    edi
  406014:	pop    ecx
  406015:	dec    esi
  406016:	mov    ds:0x4feff155,al
  40601b:	outs   dx,BYTE PTR ds:[esi]
  40601c:	dec    edi
  40601d:	lds    esp,FWORD PTR [eax-0x7c308b71]
  406023:	shl    DWORD PTR [edx-0x35],0x92
  406027:	dec    esp
  406028:	cdq    
  406029:	xor    BYTE PTR [ebx-0x6b71b1bb],al
  40602f:	xlat   BYTE PTR ds:[ebx]
  406030:	(bad)  
  406031:	hlt    
  406032:	mov    ebx,0x4d25f1f8
  406037:	jmp    0x40609d
  406039:	sub    al,0x19
  40603b:	mov    al,ds:0x720bac0b
  406040:	in     eax,dx
  406041:	jmp    0x34b01d91
  406046:	push   edx
  406047:	push   eax
  406048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406049:	pop    esi
  40604a:	mov    edx,0x15db4960
  40604f:	nop
  406050:	enter  0xc2a,0x90
  406054:	in     al,0xf0
  406056:	outs   dx,DWORD PTR ds:[esi]
  406057:	cmp    BYTE PTR [esi],al
  406059:	data16 into 
  40605b:	sub    BYTE PTR [eax+0x11350dea],0xae
  406062:	call   0x124b4086
  406067:	mov    al,0x8a
  406069:	xchg   esi,eax
  40606a:	jp     0x4060af
  40606c:	mov    fs,WORD PTR [esi-0x64]
  40606f:	cld    
  406070:	jge    0x406058
  406072:	push   cs
  406073:	jns    0x4060ec
  406075:	fisttp DWORD PTR [edx+0x686d7532]
  40607b:	push   eax
  40607c:	mov    DWORD PTR [edi],edi
  40607e:	push   es
  40607f:	nop
  406080:	cmp    DWORD PTR ds:0x359fc88d,esp
  406086:	jmp    0x40608d
  406088:	xchg   ebp,eax
  406089:	addr16 and eax,0xc6353c39
  40608f:	cmp    eax,0xb278bc30
  406094:	or     DWORD PTR [ebp-0x2e],ecx
  406097:	bound  ecx,QWORD PTR [eax+0x2ab529af]
  40609d:	mov    cl,0x6c
  40609f:	or     al,0x2
  4060a1:	mov    edi,0x9a1e99e9
  4060a6:	mov    WORD PTR [edi+edi*4+0x30adcf30],cs
  4060ad:	aad    0xca
  4060af:	outs   dx,DWORD PTR ds:[esi]
  4060b0:	inc    eax
  4060b1:	cmp    ebp,ecx
  4060b3:	xchg   esi,eax
  4060b4:	cdq    
  4060b5:	inc    edi
  4060b6:	add    BYTE PTR [ebx],cl
  4060b8:	gs data16 loop 0x40606a
  4060bc:	leave  
  4060bd:	popf   
  4060be:	mov    ebp,0x27e11504
  4060c3:	enter  0x98a8,0x96
  4060c7:	pop    esp
  4060c8:	(bad)  [eax]
  4060ca:	fbld   TBYTE PTR [edx+ebx*1]
  4060cd:	rol    DWORD PTR [edi-0x3df374b],0xe7
  4060d4:	pop    edi
  4060d5:	cld    
  4060d6:	jmp    0xf9ce:0xc5f86ca7
  4060dd:	xlat   BYTE PTR ds:[ebx]
  4060de:	inc    edi
  4060df:	push   ebx
  4060e0:	scas   al,BYTE PTR es:[edi]
  4060e1:	icebp  
  4060e2:	dec    esi
  4060e3:	out    dx,eax
  4060e4:	cs xor eax,0x70d0e468
  4060ea:	leave  
  4060eb:	loop   0x4060e4
  4060ed:	stos   BYTE PTR es:[edi],al
  4060ee:	cmp    BYTE PTR cs:[esi+edi*8-0x31],cl
  4060f3:	jmp    0x86bc:0x5a25196d
  4060fa:	xor    cl,BYTE PTR [eax+0x52]
  4060fd:	cld    
  4060fe:	sbb    DWORD PTR [ecx],ebx
  406100:	xchg   ecx,eax
  406101:	mov    BYTE PTR [edi+0x2b9f95b5],al
  406107:	stc    
  406108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406109:	aas    
  40610a:	sbb    al,0xbe
  40610c:	loope  0x40613f
  40610e:	fimul  WORD PTR [ebx]
  406110:	xor    eax,DWORD PTR [esi]
  406112:	call   0x4da1988c
  406117:	icebp  
  406118:	sub    al,0xdc
  40611a:	adc    eax,0xc017df1b
  40611f:	xor    cl,BYTE PTR [ebp+eiz*8-0x7b6d67ca]
  406126:	push   esi
  406127:	push   esi
  406128:	push   edx
  406129:	ficomp WORD PTR [ebx+0x27]
  40612c:	ds pop edi
  40612e:	mov    edx,0x16a838c1
  406133:	push   cs
  406134:	add    ebx,edx
  406136:	jns    0x406115
  406138:	std    
  406139:	dec    ebp
  40613a:	add    BYTE PTR [ebx],bl
  40613c:	push   ebx
  40613d:	and    eax,0x4126cb8e
  406142:	jo     0x40619e
  406144:	aad    0x7a
  406146:	stos   BYTE PTR es:[edi],al
  406147:	xor    ecx,DWORD PTR [ecx+0x21]
  40614a:	mov    WORD PTR [esi+eiz*4],?
  40614d:	mov    al,0xae
  40614f:	shl    BYTE PTR [eax],1
  406151:	popf   
  406152:	mov    ss,eax
  406154:	mov    eax,0x491a3e1a
  406159:	(bad)  
  40615a:	enter  0xb335,0x9f
  40615e:	ficom  WORD PTR [esi+0x565cb8d7]
  406164:	shl    BYTE PTR [eax],0x3d
  406167:	cs jbe 0x4061d0
  40616a:	pop    ecx
  40616b:	pop    es
  40616c:	fldl2t 
  40616e:	adc    DWORD PTR [esp+edx*4+0x6da7f358],ecx
  406175:	or     DWORD PTR [ebx-0x6b],eax
  406178:	mov    bh,0xef
  40617a:	mov    edx,0x43c327c4
  40617f:	dec    ecx
  406180:	sbb    cl,ch
  406182:	add    ebx,DWORD PTR [ebx]
  406184:	fwait
  406185:	rol    ebp,cl
  406187:	cmp    ebp,edi
  406189:	(bad)  
  40618a:	xchg   edi,eax
  40618b:	push   cs
  40618c:	out    dx,al
  40618d:	xor    al,0xf2
  40618f:	inc    ecx
  406190:	sub    eax,0x64828f11
  406195:	imul   edx,edi,0xffffffec
  406198:	or     al,0x25
  40619a:	(bad)  
  40619b:	rol    DWORD PTR [eax+0x179221ab],1
  4061a1:	mov    BYTE PTR [ebx+0x1d],bh
  4061a4:	rcl    BYTE PTR ds:0xdd4dc1f1,0x2f
  4061ab:	adc    DWORD PTR [edi+0x2d],ecx
  4061ae:	loopne 0x4061f5
  4061b0:	xchg   edi,eax
  4061b1:	test   BYTE PTR [eax+0x3b52ee1d],bl
  4061b7:	lahf   
  4061b8:	scas   eax,DWORD PTR es:[edi]
  4061b9:	ret    
  4061ba:	aaa    
  4061bb:	push   eax
  4061bc:	xlat   BYTE PTR ds:[ebx]
  4061bd:	lahf   
  4061be:	pop    ecx
  4061bf:	adc    eax,0x2d7e1419
  4061c4:	stos   DWORD PTR es:[edi],eax
  4061c5:	cmp    BYTE PTR [edi+0x69],0x88
  4061c9:	jmp    0xb08dadab
  4061ce:	out    0x81,al
  4061d0:	js     0x406202
  4061d2:	cmovb  ebp,ebx
  4061d5:	call   edx
  4061d7:	ins    BYTE PTR es:[edi],dx
  4061d8:	std    
  4061d9:	mov    dh,0x5f
  4061db:	jmp    0x406217
  4061dd:	repnz shl DWORD PTR [ebx],0x89
  4061e1:	mov    bl,0xe6
  4061e3:	mov    eax,ds:0xe82ea114
  4061e8:	test   al,0xa1
  4061ea:	mov    WORD PTR [edx+0x54ba052f],?
  4061f0:	nop
  4061f1:	mov    edi,0xe8979668
  4061f6:	mov    ecx,0xb34a592e
  4061fb:	jbe    0x4061b4
  4061fd:	lds    eax,FWORD PTR [esi+eax*8-0x74ba243c]
  406204:	cmp    al,0xc7
  406206:	sahf   
  406207:	ins    DWORD PTR es:[edi],dx
  406208:	inc    ebx
  406209:	out    0xc3,al
  40620b:	pop    edx
  40620c:	mov    esi,0xff2cca3f
  406211:	dec    esi
  406212:	xlat   BYTE PTR ds:[ebx]
  406213:	push   ss
  406214:	mov    ds:0x3e9783a3,al
  406219:	dec    ebp
  40621a:	pusha  
  40621b:	sti    
  40621c:	nop
  40621d:	jl     0x406293
  40621f:	xor    al,0x40
  406221:	cmp    edx,edx
  406223:	jae    0x40625e
  406225:	in     al,0xde
  406227:	sbb    DWORD PTR [eax],ecx
  406229:	aas    
  40622a:	mov    DWORD PTR [edx+0x48],edi
  40622d:	aad    0xbc
  40622f:	std    
  406230:	jns    0x406258
  406232:	and    BYTE PTR [edi],dh
  406234:	and    al,0x86
  406236:	test   eax,0xaf9554d8
  40623b:	ret    0xaacf
  40623e:	stos   BYTE PTR es:[edi],al
  40623f:	xchg   esi,eax
  406240:	fwait
  406241:	push   esi
  406242:	dec    ebx
  406243:	imul   edx,DWORD PTR [edi],0x58ecf98c
  406249:	xchg   BYTE PTR [ecx-0x55d20d25],cl
  40624f:	inc    ebx
  406250:	(bad)  
  406251:	cmp    eax,0xb369d1cf
  406256:	fs inc esi
  406258:	cld    
  406259:	das    
  40625a:	out    dx,al
  40625b:	cwde   
  40625c:	(bad)  
  40625d:	cmp    eax,0xa5414fe3
  406262:	mov    esp,0xfede8809
  406267:	imul   edi,DWORD PTR [ebp+0x18],0xbbb0cbef
  40626e:	mov    eax,0x38d9b81d
  406273:	pop    ecx
  406274:	imul   esp,DWORD PTR [edi-0x38],0xa4005cdd
  40627b:	cmp    BYTE PTR ds:0x83ab4765,bh
  406281:	xchg   ebx,eax
  406282:	push   ebx
  406283:	mov    ah,0xdf
  406285:	mov    bh,0xfe
  406287:	aas    
  406288:	shl    DWORD PTR [esi],1
  40628a:	pusha  
  40628b:	mov    ebx,0x3e8dfe84
  406290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406291:	loope  0x406304
  406293:	sti    
  406294:	scas   ax,WORD PTR es:[edi]
  406296:	mov    bl,0xcd
  406298:	jmp    0xbf132011
  40629d:	or     ebx,DWORD PTR [ecx-0x7e]
  4062a0:	mov    ah,0xd4
  4062a2:	add    dh,BYTE PTR [edi+0x1d]
  4062a5:	push   ebp
  4062a6:	push   DWORD PTR ds:0x2b1dc969
  4062ac:	dec    esi
  4062ad:	or     edi,DWORD PTR [eax]
  4062af:	ror    BYTE PTR [esi-0x42],1
  4062b2:	int3   
  4062b3:	adc    al,0x11
  4062b5:	aas    
  4062b6:	inc    esi
  4062b7:	pop    ds
  4062b8:	fcom   QWORD PTR [eax+0x70]
  4062bb:	repnz sbb DWORD PTR [ebp+ebx*8-0x4b],ebp
  4062c0:	push   esp
  4062c1:	xchg   ebp,eax
  4062c2:	(bad)  
  4062c3:	repnz mov ds:0xa55c9be9,eax
  4062c9:	pop    esi
  4062ca:	jns    0x406284
  4062cc:	ret    0xbb3a
  4062cf:	xlat   BYTE PTR ds:[ebx]
  4062d0:	jg     0x4062c9
  4062d2:	mov    bh,0x59
  4062d4:	ret    
  4062d5:	dec    edi
  4062d6:	inc    esi
  4062d7:	jmp    0x406346
  4062d9:	jl     0x406304
  4062db:	leave  
  4062dc:	or     al,0x53
  4062de:	pop    ebx
  4062df:	adc    edx,DWORD PTR ds:0x515f947a
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x6db2675c
  4062fe:	xchg   esp,eax
  4062ff:	faddp  st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x4062c0
  406308:	mov    ah,0x1b
  40630a:	mov    dh,BYTE PTR [ebx]
  40630c:	sbb    edi,eax
  40630e:	push   edi
  40630f:	rcl    BYTE PTR [ebx+0x9],cl
  406312:	pushf  
  406313:	rol    DWORD PTR [ebp+0x6e],0x69
  406317:	cmp    DWORD PTR [esi],0xd85e5262
  40631d:	das    
  40631e:	int    0x45
  406320:	add    eax,0x61a23960
  406325:	jae    0x4062ff
  406327:	cmp    al,0x72
  406329:	js     0x40639f
  40632b:	scas   al,BYTE PTR es:[edi]
  40632c:	cmp    eax,0xb719634f
  406331:	or     ebp,DWORD PTR [esi-0x785b39f1]
  406337:	add    ch,BYTE PTR [edx+eax*1]
  40633a:	jmp    0xc92a:0xc4fe2196
  406341:	inc    ebx
  406342:	dec    ebp
  406343:	xchg   ecx,eax
  406344:	inc    BYTE PTR [esi-0x75e79cf6]
  40634a:	xor    eax,0xe2234db3
  40634f:	lea    ebp,[esp+0x7887857d]
  406356:	addr16 pop es
  406358:	imul   eax,DWORD PTR [edx+esi*2+0x7b077e68],0xffffffc2
  406360:	cmp    eax,0xa4ab990d
  406365:	fdiv   QWORD PTR [ecx+0x33]
  406368:	add    al,0x57
  40636a:	scas   eax,DWORD PTR es:[edi]
  40636b:	sar    dh,1
  40636d:	jnp    0x406336
  40636f:	jo     0x4063ab
  406371:	sub    eax,0x7a39011d
  406376:	xchg   edx,eax
  406377:	pushf  
  406378:	sbb    DWORD PTR [ebx],edx
  40637a:	prefetchnta BYTE PTR [edx+0x24]
  40637e:	mov    al,0x70
  406380:	pop    ebx
  406381:	mov    dh,0xcb
  406383:	and    DWORD PTR [ebp-0xb],ebx
  406386:	jb     0x4063b3
  406388:	fadd   QWORD PTR [esi]
  40638a:	xor    al,0x19
  40638c:	pop    ds
  40638d:	mov    cl,0xa
  40638f:	not    esp
  406391:	mov    BYTE PTR [ecx-0xb],al
  406394:	mov    ds:0x4a4bf738,al
  406399:	into   
  40639a:	and    DWORD PTR gs:[ecx-0x7f],ebp
  40639e:	je     0x4063f4
  4063a0:	rcl    ch,cl
  4063a2:	ret    0x4515
  4063a5:	sbb    dh,BYTE PTR [ebp+0x6c]
  4063a8:	rol    BYTE PTR [edi-0x73ac2568],0x15
  4063af:	sub    cl,al
  4063b1:	int3   
  4063b2:	sub    BYTE PTR [ebx+0x40],ah
  4063b5:	cmc    
  4063b6:	pop    esp
  4063b7:	lahf   
  4063b8:	mov    ebx,0x1323c5e7
  4063bd:	xor    BYTE PTR [ebp-0x3b47f7fa],bl
  4063c3:	xor    al,0x4c
  4063c5:	int    0xba
  4063c7:	push   eax
  4063c8:	xlat   BYTE PTR ds:[ebx]
  4063c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ca:	leave  
  4063cb:	popa   
  4063cc:	xchg   ecx,eax
  4063cd:	fimul  WORD PTR [esi+0x7ce523aa]
  4063d3:	jae    0x4063f7
  4063d5:	retf   0x92a0
  4063d8:	add    al,0x5d
  4063da:	xchg   esi,eax
  4063db:	pop    esi
  4063dc:	jnp    0x406377
  4063de:	out    0x2b,al
  4063e0:	je     0x406425
  4063e2:	rcr    esi,1
  4063e4:	fdiv   QWORD PTR [edx-0x42de8bb7]
  4063ea:	xchg   ecx,eax
  4063eb:	add    esi,eax
  4063ed:	repz xchg edx,eax
  4063ef:	std    
  4063f0:	jne    0x40644c
  4063f2:	mov    eax,ds:0xf012c38f
  4063f7:	or     ch,BYTE PTR [esi+0x31]
  4063fa:	in     al,dx
  4063fb:	mov    dl,0xbf
  4063fd:	jp     0x40647a
  4063ff:	out    0xb,eax
  406401:	test   al,bl
  406403:	je     0x406468
  406405:	jb     0x40639e
  406407:	pop    ss
  406408:	dec    ecx
  406409:	ret    
  40640a:	mov    edx,cr6
  40640d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40640e:	or     BYTE PTR [ebp+0x1d],ah
  406411:	push   0xfffffff0
  406413:	push   cs
  406414:	lds    edx,FWORD PTR ds:0x8a562b54
  40641a:	mov    ecx,0xa6f22b53
  40641f:	and    ah,BYTE PTR [esi+0x51]
  406422:	rol    dh,0xce
  406425:	rol    BYTE PTR [esi],0xcf
  406428:	sub    edi,ebp
  40642a:	or     bh,ah
  40642c:	xchg   ebp,eax
  40642d:	(bad)
  406431:	mov    eax,ebp
  406433:	mov    edx,0xafea862b
  406438:	xor    ebp,DWORD PTR [ebx-0x2c2e2edb]
  40643e:	dec    ecx
  40643f:	jbe    0x4063cf
  406441:	ss dec esi
  406443:	cmc    
  406444:	(bad)
  406447:	sub    DWORD PTR [esi+0x2b],esi
  40644a:	xchg   ebp,eax
  40644b:	test   eax,0x47c4d39c
  406450:	fs retf 0xed33
  406454:	inc    edx
  406455:	inc    esp
  406456:	mov    ds:0xda98c508,al
  40645b:	int3   
  40645c:	adc    al,0xe1
  40645e:	mov    al,ds:0xd02b39d2
  406463:	ficomp WORD PTR [ecx-0x67b71e07]
  406469:	ret    
  40646a:	push   esp
  40646b:	or     al,0xc0
  40646d:	add    eax,0x54c03f03
  406472:	mov    ah,0x6d
  406474:	loopne 0x4064c7
  406476:	dec    eax
  406477:	sbb    eax,0x3b02d112
  40647c:	cmp    eax,0xd59ab288
  406481:	xchg   esp,eax
  406482:	mov    bh,0x16
  406484:	pop    eax
  406485:	mov    eax,ds:0x1927f3b5
  40648a:	jecxz  0x406484
  40648c:	pop    edi
  40648d:	dec    esi
  40648e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648f:	dec    esp
  406490:	ror    BYTE PTR ds:0x46dfaa6e,cl
  406496:	and    bh,BYTE PTR [eax+eiz*8]
  406499:	pop    eax
  40649a:	mov    DWORD PTR [ebp+0x6a],eax
  40649d:	adc    BYTE PTR [ecx-0x2f4c6d1],dl
  4064a3:	daa    
  4064a4:	mov    edi,0x4fd8e23d
  4064a9:	lds    eax,FWORD PTR [edi+0x7d770efb]
  4064af:	inc    esi
  4064b0:	xor    al,0xb1
  4064b2:	cdq    
  4064b3:	pushf  
  4064b4:	bnd ret 0xd3cf
  4064b8:	ins    BYTE PTR es:[edi],dx
  4064b9:	sub    ah,BYTE PTR [ebx-0x53]
  4064bc:	(bad)  
  4064bd:	fdivr  QWORD PTR [ebx+0x58]
  4064c0:	or     eax,0xde390cc7
  4064c5:	test   al,0xdb
  4064c7:	cs jo  0x4064ac
  4064ca:	stos   BYTE PTR es:[edi],al
  4064cb:	mov    DWORD PTR [ecx],esp
  4064cd:	sti    
  4064ce:	scas   eax,DWORD PTR es:[edi]
  4064cf:	dec    ecx
  4064d0:	pop    ds
  4064d1:	das    
  4064d2:	into   
  4064d3:	sbb    DWORD PTR [ebp+0xa],0x33
  4064d7:	and    eax,0x4be18c52
  4064dc:	cwde   
  4064dd:	or     al,0x6
  4064df:	test   ebx,0x18676b09
  4064e5:	sbb    eax,0x7bb40d7e
  4064ea:	pop    eax
  4064eb:	push   0xffffffe0
  4064ed:	add    DWORD PTR [edx],esi
  4064ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064f0:	and    al,0x57
  4064f2:	int3   
  4064f3:	inc    ebp
  4064f4:	cmp    BYTE PTR ds:[esi+0x1614600a],0xc5
  4064fc:	and    BYTE PTR [ebx+0x933d87a],ch
  406502:	xchg   esp,eax
  406503:	jle    0x4064af
  406505:	imul   ebp,DWORD PTR [edi],0xe4689e0f
  40650b:	pop    edx
  40650c:	loope  0x406582
  40650e:	sbb    eax,0x40720b1e
  406513:	sub    bh,BYTE PTR [ebp-0x4e]
  406516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406517:	xchg   esp,eax
  406518:	test   al,0x6c
  40651a:	sbb    esp,edi
  40651c:	test   DWORD PTR [eax+0x12],esp
  40651f:	adc    ebx,DWORD PTR [ebp+ebp*4+0x30c18b80]
  406526:	daa    
  406527:	icebp  
  406528:	in     eax,0x42
  40652a:	aaa    
  40652b:	add    esp,DWORD PTR [ecx]
  40652d:	xchg   esi,eax
  40652e:	sbb    al,BYTE PTR [ebp+0x5b]
  406531:	adc    eax,0x1c22d97b
  406536:	push   edx
  406537:	cmp    ah,BYTE PTR [ebp+0x294fe510]
  40653d:	push   esi
  40653e:	xor    BYTE PTR [edi-0x17],dh
  406541:	pusha  
  406542:	adc    dh,cl
  406544:	(bad)  
  406545:	jns    0x4064d9
  406547:	or     al,0xf5
  406549:	fs fs fmul st(3),st
  40654d:	mov    bh,0xe7
  40654f:	sub    bh,BYTE PTR [esp+ebx*8]
  406552:	push   0xffffffa3
  406554:	sub    al,0x22
  406556:	fdivr  QWORD PTR [ebx]
  406558:	ret    0x8ae2
  40655b:	dec    edi
  40655c:	push   cs
  40655d:	adc    eax,0x465b06e9
  406562:	lahf   
  406563:	hlt    
  406564:	iret   
  406565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406566:	daa    
  406567:	and    eax,0xeb836989
  40656c:	icebp  
  40656d:	mov    ebp,0xc3c9364a
  406572:	(bad)  
  406573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406574:	jle    0x406552
  406576:	mov    cl,0x3
  406578:	fisub  DWORD PTR [edi+ebx*1-0x3c]
  40657c:	dec    ebx
  40657d:	mov    cl,0x62
  40657f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406580:	fmul   QWORD PTR [edi]
  406582:	iret   
  406583:	out    dx,eax
  406584:	dec    edi
  406585:	pop    ebp
  406586:	shl    DWORD PTR [ebx-0x26],cl
  406589:	push   ebx
  40658a:	jg     0x4065ff
  40658c:	sbb    al,0xef
  40658e:	or     DWORD PTR [edx],edx
  406590:	and    ebx,DWORD PTR [ecx+esi*2]
  406593:	add    BYTE PTR [ecx-0x62],dl
  406596:	inc    esp
  406597:	retf   
  406598:	or     DWORD PTR [esi+0x6e],eax
  40659b:	leave  
  40659c:	and    cl,0xa2
  40659f:	daa    
  4065a0:	and    DWORD PTR [edx+0xf],eax
  4065a3:	pop    ebx
  4065a4:	jae    0x4065db
  4065a6:	xlat   BYTE PTR ds:[ebx]
  4065a7:	repz (bad) 
  4065a9:	xlat   BYTE PTR ds:[ebx]
  4065aa:	cs jns 0x4065b5
  4065ad:	mov    eax,ds:0x3665d512
  4065b2:	jb     0x4065f6
  4065b4:	add    al,0x62
  4065b6:	pop    ds
  4065b7:	pop    esi
  4065b8:	cmp    eax,0xa4370810
  4065bd:	inc    ebp
  4065be:	adc    ecx,DWORD PTR [esi+0x6041749]
  4065c4:	xchg   esi,eax
  4065c5:	pop    edi
  4065c6:	not    BYTE PTR [ebx-0x5b78fb93]
  4065cc:	xchg   esp,eax
  4065cd:	push   0xfffffff6
  4065cf:	xchg   edx,eax
  4065d0:	mov    eax,DWORD PTR [edi+0x4ec91e15]
  4065d6:	dec    ebx
  4065d7:	sub    DWORD PTR [edx],ebp
  4065d9:	xchg   ebx,eax
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	xchg   BYTE PTR [ecx+eax*2-0x39],bh
  4065f9:	xor    eax,esp
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x4065fe
  406602:	mov    ecx,0x8ea6e0a3
  406607:	mov    cl,BYTE PTR [esi]
  406609:	xchg   esi,eax
  40660a:	iret   
  40660b:	jp     0x406634
  40660d:	sub    ecx,DWORD PTR [ebx]
  40660f:	mov    eax,ds:0x4992de98
  406614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406615:	and    al,0xe0
  406617:	add    eax,0x1147273b
  40661c:	jle    0x406613
  40661e:	cs mov WORD PTR fs:[eax+0x4b],cs
  406623:	neg    BYTE PTR [esi+0x7c0e12ed]
  406629:	fwait
  40662a:	jo     0x406653
  40662c:	aas    
  40662d:	or     eax,0xa5aaaeb5
  406632:	scas   al,BYTE PTR es:[edi]
  406633:	cmp    edi,edx
  406635:	fild   DWORD PTR [ebx+eiz*2]
  406638:	xchg   esi,eax
  406639:	or     al,0x33
  40663b:	mov    eax,0x7ba7b075
  406640:	popa   
  406641:	outs   dx,DWORD PTR ds:[esi]
  406642:	jbe    0x4066b5
  406644:	mov    bh,al
  406646:	xchg   ebx,eax
  406647:	mov    ch,0xab
  406649:	xchg   ebp,eax
  40664a:	imul   ebp,DWORD PTR [eax-0x5d],0x1efe6cbf
  406651:	sub    eax,0xb9c79fa1
  406656:	jbe    0x4066b9
  406658:	mov    dh,0x93
  40665a:	fmul   st,st(6)
  40665c:	jl     0x40666d
  40665e:	mov    cl,0x5b
  406660:	pop    ecx
  406661:	push   edx
  406662:	or     al,0x53
  406664:	cs push edx
  406666:	pop    ebx
  406667:	cld    
  406668:	pop    ebp
  406669:	push   ds
  40666a:	and    al,0xa7
  40666c:	dec    esi
  40666d:	mov    bl,0x5c
  40666f:	jmp    0x4e16:0xe01e35d7
  406676:	sub    DWORD PTR [esp+ebx*1-0x4b],ecx
  40667a:	and    ebx,DWORD PTR [eax-0x246df357]
  406680:	test   al,0xee
  406682:	gs dec ebx
  406684:	mov    bh,0xdf
  406686:	sub    al,0xe6
  406688:	or     esp,DWORD PTR [ebp+0x14]
  40668b:	scas   eax,DWORD PTR es:[edi]
  40668c:	or     dl,bl
  40668e:	fild   WORD PTR [ebx+0x22]
  406691:	and    bl,dl
  406693:	fld    DWORD PTR [ecx]
  406695:	sahf   
  406696:	xchg   BYTE PTR [ebx+0x71b7e85b],al
  40669c:	shr    BYTE PTR ds:0x36d54180,cl
  4066a2:	scas   eax,DWORD PTR es:[edi]
  4066a3:	scas   al,BYTE PTR es:[edi]
  4066a4:	leave  
  4066a5:	jge    0x406661
  4066a7:	int3   
  4066a8:	xchg   ecx,eax
  4066a9:	mov    dh,0xdd
  4066ab:	sahf   
  4066ac:	stos   DWORD PTR es:[edi],eax
  4066ad:	adc    al,0x69
  4066af:	pushf  
  4066b0:	lods   eax,DWORD PTR ds:[esi]
  4066b1:	adc    BYTE PTR [ecx+0x73705bea],dh
  4066b7:	stos   DWORD PTR es:[edi],eax
  4066b8:	mov    bl,al
  4066ba:	add    eax,0x621f2b1e
  4066bf:	lods   al,BYTE PTR ds:[esi]
  4066c0:	fimul  DWORD PTR [ecx+0x26]
  4066c3:	test   eax,0x5abd3a14
  4066c8:	pusha  
  4066c9:	jg     0x4066e6
  4066cb:	mov    bh,0xa2
  4066cd:	mov    eax,0xe95f941c
  4066d2:	or     edi,ecx
  4066d4:	stc    
  4066d5:	adc    BYTE PTR [ebp+0x5095ae40],0x2e
  4066dc:	in     al,0xc4
  4066de:	dec    edx
  4066df:	xchg   ebp,eax
  4066e0:	cmp    eax,0x1fedbd1f
  4066e5:	rol    BYTE PTR [ebp+0x39248640],0x7f
  4066ec:	int    0x84
  4066ee:	call   0xb780bd62
  4066f3:	pop    ebx
  4066f4:	mov    esp,0x51d8b461
  4066f9:	out    dx,eax
  4066fa:	clc    
  4066fb:	sub    eax,0x11ca6d7f
  406700:	frstor [esi*1-0x29a51492]
  406707:	pop    ebx
  406708:	std    
  406709:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40670b:	ror    BYTE PTR [ecx+ecx*4-0xc1248de],1
  406712:	sub    edx,esp
  406714:	pop    ebx
  406715:	imul   ebx
  406717:	push   esi
  406718:	push   ss
  406719:	popa   
  40671a:	nop
  40671b:	inc    eax
  40671c:	mov    eax,0xaabad926
  406721:	and    eax,0xbc355f8d
  406726:	ret    0xe79
  406729:	and    DWORD PTR [ebx],edi
  40672b:	rol    DWORD PTR [eax+0x79],0xdb
  40672f:	(bad)
  406732:	push   ss
  406733:	dec    esp
  406734:	mov    bh,0x8f
  406736:	ss mov ecx,0x57eb06c1
  40673c:	push   ss
  40673d:	imul   edx,DWORD PTR [edx],0x352fee1e
  406743:	bound  ebp,QWORD PTR [eax+edx*8]
  406746:	lds    eax,FWORD PTR ds:0xd1545553
  40674c:	retf   0x3083
  40674f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406751:	div    BYTE PTR [eax-0x67]
  406754:	add    al,BYTE PTR [edi]
  406756:	popf   
  406757:	dec    edx
  406758:	fild   WORD PTR [edx-0x6d]
  40675b:	popa   
  40675c:	or     DWORD PTR [ebx],eax
  40675e:	(bad)  
  40675f:	aaa    
  406760:	cmp    BYTE PTR [edx-0x2b8bef76],0xe0
  406767:	sub    DWORD PTR [ecx+edi*4+0x47c81bb6],ebx
  40676e:	cs (bad) 
  406770:	dec    edi
  406771:	pop    ebx
  406772:	ret    
  406773:	fistp  DWORD PTR [esi]
  406775:	js     0x40675e
  406777:	sbb    al,0xda
  406779:	lock xchg edx,eax
  40677b:	cmp    al,0xab
  40677d:	frndint 
  40677f:	push   es
  406780:	retf   
  406781:	ss ins DWORD PTR es:[edi],dx
  406783:	mov    bl,0x79
  406785:	in     al,0x4d
  406787:	sbb    BYTE PTR [ebp-0x6eee33f1],dh
  40678d:	adc    eax,0xbba6f8ba
  406792:	lock hlt 
  406794:	lahf   
  406795:	imul   ebx,DWORD PTR [ecx-0x45d6216],0xffffff9e
  40679c:	aas    
  40679d:	xor    eax,0x9975bc65
  4067a2:	sti    
  4067a3:	lods   al,BYTE PTR ds:[esi]
  4067a4:	xor    al,0x70
  4067a6:	sbb    eax,0xc4b1b27e
  4067ab:	push   edi
  4067ac:	test   al,0xd3
  4067ae:	adc    bh,BYTE PTR [eax+ebx*4]
  4067b1:	cwde   
  4067b2:	mov    dh,ah
  4067b4:	or     ebp,edx
  4067b6:	ret    0x5a1c
  4067b9:	rol    BYTE PTR [ebp+0x5348fbfe],cl
  4067bf:	nop
  4067c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c1:	xchg   edx,eax
  4067c2:	mov    esi,0xd7872f00
  4067c7:	nop
  4067c8:	mov    esi,0x4bd1a696
  4067cd:	int    0xf2
  4067cf:	add    DWORD PTR [esi],esp
  4067d1:	cmp    ch,BYTE PTR [ecx-0x75489a32]
  4067d7:	push   ds
  4067d8:	sub    bl,BYTE PTR [esi]
  4067da:	xchg   edi,eax
  4067db:	lods   al,BYTE PTR ds:[esi]
  4067dc:	fild   WORD PTR [ecx+0x1b]
  4067df:	sar    BYTE PTR [ebx+edi*1-0x61],0x0
  4067e4:	and    eax,0xfbdebff
  4067e9:	(bad)  
  4067eb:	sub    eax,0xcbf48e50
  4067f0:	mov    ebp,0xaf4eed98
  4067f5:	or     ebp,esi
  4067f7:	bnd jno 0x406799
  4067fa:	add    al,0xfd
  4067fc:	cmp    ebx,DWORD PTR [edx]
  4067fe:	call   0x6c4e3aa6
  406803:	sti    
  406804:	fcom   QWORD PTR [edx-0x1d]
  406807:	ficomp WORD PTR [ebp+0x42ec122c]
  40680d:	mov    al,ds:0xdb0b753d
  406812:	sbb    ch,BYTE PTR [eax]
  406814:	out    dx,al
  406815:	in     eax,dx
  406816:	popf   
  406817:	sti    
  406818:	hlt    
  406819:	mov    ecx,0x927fa750
  40681e:	sar    BYTE PTR [esi],1
  406820:	sbb    eax,0xf9b3722f
  406825:	clc    
  406826:	loop   0x40687b
  406828:	jae    0x4067d1
  40682a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40682b:	jle    0x4067c3
  40682d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40682e:	jle    0x4067dc
  406830:	and    al,0x55
  406832:	mov    edx,0xef412687
  406837:	xor    DWORD PTR [edx+0x47],0xffffffee
  40683b:	mul    bh
  40683d:	ja     0x40682f
  40683f:	add    DWORD PTR ds:0xc04bdcc6,ebp
  406845:	jmp    0x9ab5:0xf6f9714e
  40684c:	pop    ebx
  40684d:	cmp    esp,DWORD PTR [ebx+0x52757c07]
  406853:	(bad)
  406857:	ds ins DWORD PTR es:[edi],dx
  406859:	dec    ebp
  40685a:	mov    ds:0xdbd45133,al
  40685f:	call   ebp
  406861:	fwait
  406862:	lods   eax,DWORD PTR ds:[esi]
  406863:	mov    al,BYTE PTR [edx]
  406865:	jne    0x40681d
  406867:	xchg   ebx,eax
  406868:	aas    
  406869:	outs   dx,BYTE PTR ds:[esi]
  40686a:	int    0x4b
  40686c:	arpl   cx,bp
  40686e:	mov    ebp,0x8a7e456c
  406873:	into   
  406874:	cmc    
  406875:	cmp    BYTE PTR [ebp+edi*1-0x4166b3],dl
  40687c:	jmp    0x4068d0
  40687e:	lods   al,BYTE PTR ds:[esi]
  40687f:	in     eax,dx
  406880:	push   ss
  406881:	shl    edi,0x26
  406884:	sub    eax,0x3b4e9a6f
  406889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40688a:	mov    ah,0x32
  40688c:	outs   dx,DWORD PTR ds:[esi]
  40688d:	or     DWORD PTR [edi],ebx
  40688f:	inc    ecx
  406890:	scas   al,BYTE PTR es:[edi]
  406891:	jg     0x406827
  406893:	push   0x49
  406895:	fs inc edi
  406897:	in     eax,0xdf
  406899:	xor    cl,ch
  40689b:	cmp    eax,0x6b8cf0f1
  4068a0:	inc    esp
  4068a1:	mov    ebp,0x1dc75f3f
  4068a6:	add    eax,0xd2cb1a3
  4068ab:	sbb    al,0xc4
  4068ad:	ds pop eax
  4068af:	(bad)  
  4068b0:	call   0xbd7e:0x10c0d840
  4068b7:	adc    DWORD PTR [ecx],esi
  4068b9:	jmp    0x7902fb6b
  4068be:	and    eax,0x9b63572c
  4068c3:	push   cs
  4068c4:	(bad)  
  4068c5:	sbb    DWORD PTR [eax],edx
  4068c7:	pop    ebp
  4068c8:	inc    edi
  4068c9:	call   0x3baa571a
  4068ce:	repnz lods al,BYTE PTR ds:[esi]
  4068d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068d1:	mov    ds:0xc25db2c2,eax
  4068d6:	sbb    BYTE PTR [eax],al
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7dd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7dd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7dd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaca
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7dd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7dd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7dd,eax
  406931:	mov    eax,ds:0x42a7dd
  406936:	dec    eax
  406937:	mov    ds:0x42a7dd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a789,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	lds    edx,FWORD PTR [edi]
  40695d:	shl    DWORD PTR [esi+0x0],1
  406960:	leave  
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x4068f6
  406968:	outs   dx,DWORD PTR ds:[esi]
  406969:	xor    edi,eax
  40696b:	pop    ebp
  40696c:	xor    al,ch
  40696e:	add    BYTE PTR [ebp-0x63e0985],cl
  406974:	in     al,dx
  406975:	imul   edi,esp,0x72a85833
  40697b:	test   BYTE PTR [ecx-0x7c],ch
  40697e:	lods   al,BYTE PTR ds:[esi]
  40697f:	xchg   ecx,eax
  406980:	mov    ds:0x8ba91e8b,al
  406985:	inc    esi
  406986:	sub    DWORD PTR cs:[ebx],esi
  406989:	cld    
  40698a:	dec    eax
  40698b:	repnz cld 
  40698d:	shl    BYTE PTR [ebx+0x6cca3a85],1
  406993:	nop
  406994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406995:	aas    
  406996:	scas   al,BYTE PTR es:[edi]
  406997:	popa   
  406998:	adc    al,0x33
  40699a:	or     ah,BYTE PTR [ecx-0x22033797]
  4069a0:	jmp    0xe78a1450
  4069a5:	int    0x2a
  4069a7:	push   esp
  4069a8:	cld    
  4069a9:	xchg   esp,eax
  4069aa:	jmp    0x4069fd
  4069ac:	push   ecx
  4069ad:	mov    al,0xcf
  4069af:	hlt    
  4069b0:	lods   al,BYTE PTR ds:[esi]
  4069b1:	mov    esi,0x1aa12316
  4069b6:	fild   DWORD PTR [eax-0x1e]
  4069b9:	fld    st(3)
  4069bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069bd:	(bad)  
  4069be:	adc    ah,BYTE PTR [ebp+0xa]
  4069c1:	pop    esi
  4069c2:	fstp   DWORD PTR [eax]
  4069c4:	call   0x3630:0x8714e736
  4069cb:	and    DWORD PTR [edx],edx
  4069cd:	in     al,0xca
  4069cf:	fist   DWORD PTR [esi]
  4069d1:	push   ebp
  4069d2:	xor    DWORD PTR [edi+0x6f],ecx
  4069d5:	or     DWORD PTR ds:0x46429cd6,ebp
  4069db:	mov    cl,0xf0
  4069dd:	xor    BYTE PTR [eax+0x15],ch
  4069e0:	push   ss
  4069e1:	pop    edi
  4069e2:	mov    ah,0xb
  4069e4:	xchg   edi,eax
  4069e5:	push   DWORD PTR [eax+0x30689c9c]
  4069eb:	sub    eax,0x3059cd97
  4069f0:	xchg   edx,eax
  4069f1:	(bad)  
  4069f3:	call   0x5a36:0x2793b2fc
  4069fa:	adc    BYTE PTR [edi+esi*2-0x56],ah
  4069fe:	leave  
  4069ff:	dec    esp
  406a00:	shl    esi,0x8c
  406a03:	inc    esp
  406a04:	mov    ds:0x93f7a024,al
  406a09:	loope  0x406a7e
  406a0b:	je     0x406a40
  406a0d:	daa    
  406a0e:	outs   dx,DWORD PTR ds:[esi]
  406a0f:	arpl   si,di
  406a11:	fisttp QWORD PTR [ecx]
  406a13:	jns    0x406a2f
  406a15:	pop    ebp
  406a16:	(bad)
  406a19:	stc    
  406a1a:	mov    esp,0xfc8c72f2
  406a1f:	dec    ebx
  406a20:	call   0x209ead97
  406a25:	cmp    bh,BYTE PTR [esi]
  406a27:	sub    BYTE PTR [ebp+eiz*4+0xd],dh
  406a2b:	fucomp st(6)
  406a2d:	mov    ds,WORD PTR [edx-0x76]
  406a30:	pushf  
  406a31:	push   eax
  406a32:	sti    
  406a33:	fiadd  DWORD PTR [edx+0x28]
  406a36:	shl    DWORD PTR [eax],0x97
  406a39:	jns    0x406ab0
  406a3b:	jbe    0x406a1f
  406a3d:	jmp    0x5e34d054
  406a42:	xchg   BYTE PTR [ebx-0x7b],al
  406a45:	or     dl,BYTE PTR [ebp+ecx*2-0x5b5721fa]
  406a4c:	std    
  406a4d:	(bad)  
  406a4e:	shr    BYTE PTR [edi],cl
  406a50:	push   ds
  406a51:	mov    ebx,0xe66fc21c
  406a56:	sub    al,BYTE PTR [ebx+0x58e4e501]
  406a5c:	add    BYTE PTR [ebx-0x55428043],ah
  406a62:	cmp    ecx,edx
  406a64:	repnz cwde 
  406a66:	fwait
  406a67:	ror    BYTE PTR [edi+0x40],cl
  406a6a:	fld    TBYTE PTR [edi-0x45]
  406a6d:	xlat   BYTE PTR ds:[ebx]
  406a6e:	adc    eax,0xe2813385
  406a73:	adc    ch,BYTE PTR [eax+0x4c4f291c]
  406a79:	lahf   
  406a7a:	inc    edx
  406a7b:	(bad)  
  406a7c:	int3   
  406a7d:	cmc    
  406a7e:	jle    0x406ace
  406a80:	sub    DWORD PTR [edx+ebp*4+0x47],esi
  406a84:	inc    esp
  406a85:	dec    esi
  406a86:	sub    al,0xf8
  406a88:	or     eax,0x1acec9c6
  406a8d:	mov    edx,0x7f9b0dd1
  406a92:	xchg   ebp,ebp
  406a94:	lahf   
  406a95:	dec    ebp
  406a96:	jmp    0xedd74977
  406a9b:	jp     0x406aa9
  406a9d:	ja     0x406ac2
  406a9f:	add    bl,BYTE PTR [ecx]
  406aa1:	es (bad) 
  406aa3:	out    dx,al
  406aa4:	jmp    0x9a10:0xbf93de59
  406aab:	or     ebx,DWORD PTR [edx]
  406aad:	(bad)  
  406aae:	hlt    
  406aaf:	jmp    0x406b0a
  406ab1:	scas   eax,DWORD PTR es:[edi]
  406ab2:	sar    DWORD PTR [ecx],1
  406ab4:	in     eax,dx
  406ab5:	pop    edx
  406ab6:	shr    BYTE PTR [edx-0x48],cl
  406ab9:	shl    BYTE PTR fs:[ecx+0x4a],cl
  406abd:	shl    DWORD PTR ds:0x8c3b0a65,cl
  406ac3:	lods   eax,DWORD PTR ds:[esi]
  406ac4:	adc    ah,BYTE PTR [eax-0x5e]
  406ac7:	fistp  QWORD PTR [ecx+edx*1]
  406aca:	push   edx
  406acb:	int    0xa3
  406acd:	aad    0xe2
  406acf:	stc    
  406ad0:	xor    ecx,DWORD PTR [edi+eiz*1]
  406ad3:	mov    dl,0xc8
  406ad5:	in     eax,0xd0
  406ad7:	cwde   
  406ad8:	ss out dx,al
  406ada:	pop    edi
  406adb:	mov    gs,eax
  406add:	or     ebp,DWORD PTR [edx+0x6a3f28bc]
  406ae3:	adc    dh,BYTE PTR [ecx+esi*4-0x2141355b]
  406aea:	sbb    DWORD PTR [eax-0x23],0x4f00f83d
  406af1:	call   0xb630:0xcad24308
  406af8:	ret    0xb13d
  406afb:	mov    DWORD PTR [ecx],edx
  406afd:	xor    esi,DWORD PTR [eax+0x58]
  406b00:	into   
  406b01:	dec    esi
  406b02:	out    dx,eax
  406b03:	imul   ecx,DWORD PTR [ecx-0x20],0x4c
  406b07:	into   
  406b08:	cdq    
  406b09:	int3   
  406b0a:	neg    DWORD PTR [ebx+0x7d]
  406b0d:	fsub   DWORD PTR [eax]
  406b0f:	and    eax,0x5fdc599e
  406b14:	inc    esi
  406b15:	stc    
  406b16:	shl    edi,cl
  406b18:	retf   0xcee6
  406b1b:	and    DWORD PTR [ebp-0x34],0xc9310bf0
  406b22:	(bad)  
  406b23:	or     edx,DWORD PTR [eax+0xd]
  406b26:	dec    ecx
  406b27:	push   ss
  406b28:	add    ah,BYTE PTR [edi+eax*2-0x65]
  406b2c:	in     eax,dx
  406b2d:	(bad)  
  406b2e:	out    dx,al
  406b2f:	or     bl,BYTE PTR [ebp+ebx*2-0x5e]
  406b33:	mov    cl,0x4b
  406b35:	and    eax,DWORD PTR [ebx-0x50]
  406b38:	cs sbb al,0x66
  406b3b:	int3   
  406b3c:	std    
  406b3d:	dec    esi
  406b3e:	push   es
  406b3f:	sti    
  406b40:	cmovp  esi,DWORD PTR [ecx+0x6382e948]
  406b47:	enter  0xccdb,0xa7
  406b4b:	inc    esi
  406b4c:	jmp    0x7c6513b5
  406b51:	mov    edi,0xab8f864d
  406b56:	imul   esi,DWORD PTR [ecx-0x6b336233],0x50
  406b5d:	push   0x7cef8e8a
  406b62:	popf   
  406b63:	aaa    
  406b64:	push   edx
  406b65:	mov    ebx,0xb9e069c5
  406b6a:	icebp  
  406b6b:	xor    DWORD PTR [ebx-0x1a],edx
  406b6e:	mov    eax,ds:0x38677222
  406b73:	adc    BYTE PTR ds:0xe493b802,0xbc
  406b7a:	div    DWORD PTR [edi-0x72]
  406b7d:	push   ebx
  406b7e:	fistp  QWORD PTR [edx+0x61]
  406b81:	pop    ecx
  406b82:	ret    
  406b83:	clc    
  406b84:	mov    ebp,DWORD PTR [edi+0x7bcbe891]
  406b8a:	inc    esp
  406b8b:	mov    BYTE PTR [ecx],bh
  406b8d:	add    dh,BYTE PTR [eax]
  406b8f:	sub    dl,cl
  406b91:	push   ebx
  406b92:	ins    DWORD PTR es:[edi],dx
  406b93:	jl     0x406bab
  406b95:	add    BYTE PTR [ecx],al
  406b97:	mov    edi,db0
  406b9a:	mov    edi,0x64031ebf
  406b9f:	jno    0x406b55
  406ba1:	into   
  406ba2:	iret   
  406ba3:	bound  edx,QWORD PTR [eax]
  406ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba6:	cmp    al,0x84
  406ba8:	sar    DWORD PTR [ecx+0x49dd3f25],0x92
  406baf:	popf   
  406bb0:	idiv   BYTE PTR [edx-0x1b]
  406bb3:	adc    DWORD PTR [edi],ebx
  406bb5:	xchg   ebp,eax
  406bb6:	ror    DWORD PTR [edi],1
  406bb8:	or     BYTE PTR [ebx-0x1c],bh
  406bbb:	in     eax,0x74
  406bbd:	adc    al,BYTE PTR [ebx-0x5a]
  406bc0:	dec    esi
  406bc1:	add    eax,ecx
  406bc3:	call   0x45ec:0x2583ece6
  406bca:	test   al,0xbd
  406bcc:	mov    ds:0xa8557fca,al
  406bd1:	not    DWORD PTR ds:0xa7825ed8
  406bd7:	jge    0x406c23
  406bd9:	mov    BYTE PTR [ebp+0x7c],ah
  406bdc:	idiv   BYTE PTR [esi]
  406bde:	xchg   ebp,eax
  406bdf:	xchg   ebp,eax
  406be0:	test   al,0x82
  406be2:	pop    eax
  406be3:	(bad)  
  406be4:	in     eax,dx
  406be5:	nop
  406be6:	adc    al,0x18
  406be8:	mov    ebp,0x6f216a7b
  406bed:	add    DWORD PTR [ecx-0x2f92eb0e],eax
  406bf3:	outs   dx,BYTE PTR ds:[esi]
  406bf4:	sub    eax,0xa6fb8d2d
  406bf9:	in     al,0x81
  406bfb:	stos   DWORD PTR es:[edi],eax
  406bfc:	nop
  406bfd:	(bad)  [edx+ebp*1]
  406c00:	inc    ecx
  406c01:	outs   dx,DWORD PTR ds:[esi]
  406c02:	dec    esi
  406c03:	pop    es
  406c04:	fist   DWORD PTR [esi]
  406c06:	clc    
  406c07:	jbe    0x406c40
  406c09:	fnsave [edi+0x245687b7]
  406c0f:	(bad)  
  406c10:	sar    DWORD PTR ss:[edi+ebp*8+0x4174dcf5],0x38
  406c19:	xchg   BYTE PTR [ebp-0x7b3bf72a],ch
  406c1f:	and    esi,esi
  406c21:	cdq    
  406c22:	adc    esp,DWORD PTR [edx]
  406c24:	and    bh,BYTE PTR [ecx]
  406c26:	add    edx,DWORD PTR [ebx+edx*8+0x72]
  406c2a:	jmp    0x67e9:0xe80aee00
  406c31:	jbe    0x406c44
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	cmc    
  406c35:	pusha  
  406c36:	inc    ecx
  406c37:	jg     0x406c9c
  406c39:	xor    ah,BYTE PTR [ecx+0x49d143ec]
  406c3f:	in     eax,0xa8
  406c41:	lock mov eax,0x1001213e
  406c47:	repnz mov al,ds:0x40e10527
  406c4d:	out    0x5f,eax
  406c4f:	int    0xb
  406c51:	idiv   DWORD PTR [eax]
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7e9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a815,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a86d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx+0x70],ebx
  406c91:	pop    ds
  406c92:	pusha  
  406c93:	lods   al,BYTE PTR ds:[esi]
  406c94:	ins    BYTE PTR es:[edi],dx
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406c72
  406c9d:	pushf  
  406c9e:	rcl    DWORD PTR [ebx],0x95
  406ca1:	sbb    ch,dl
  406ca3:	ja     0x406cff
  406ca5:	and    esi,DWORD PTR [esi-0x74777f6e]
  406cab:	es int3 
  406cad:	adc    dl,BYTE PTR [esi]
  406caf:	stc    
  406cb0:	popf   
  406cb1:	aam    0xc1
  406cb3:	jge    0x406cee
  406cb5:	ja     0x406c56
  406cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb8:	scas   al,BYTE PTR es:[edi]
  406cb9:	push   ebp
  406cba:	mov    ds:0x59384f29,al
  406cbf:	je     0x406c4b
  406cc1:	dec    eax
  406cc2:	sbb    esi,edx
  406cc4:	dec    edx
  406cc5:	scas   eax,DWORD PTR es:[edi]
  406cc6:	frstor [edx]
  406cc8:	dec    ebp
  406cc9:	and    DWORD PTR ds:0xd04cb9d7,edi
  406ccf:	pop    es
  406cd0:	push   ss
  406cd1:	inc    ebp
  406cd2:	out    0x82,eax
  406cd4:	ins    BYTE PTR es:[edi],dx
  406cd5:	je     0x406d35
  406cd7:	mov    dh,0x5d
  406cd9:	out    0x63,eax
  406cdb:	adc    al,dh
  406cdd:	in     al,dx
  406cde:	sbb    al,0x6
  406ce0:	ins    DWORD PTR es:[edi],dx
  406ce1:	aam    0x22
  406ce3:	test   BYTE PTR [eax+0x36],0x3d
  406ce7:	mov    al,ds:0x650dca4d
  406cec:	or     eax,0x9f73c329
  406cf1:	xchg   BYTE PTR [edi+0x60c2ab6c],ch
  406cf7:	mov    bh,0x34
  406cf9:	imul   eax,DWORD PTR [ebp-0x19],0xb5fd2474
  406d00:	outs   dx,BYTE PTR ds:[esi]
  406d01:	cmp    eax,0x86e57614
  406d06:	inc    edx
  406d07:	cld    
  406d08:	pusha  
  406d09:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406d0b:	push   ebx
  406d0c:	mov    ah,0xa6
  406d0e:	fnsetpm(287 only) 
  406d10:	mov    bl,0x1
  406d12:	mov    ah,0x82
  406d14:	xchg   ah,dl
  406d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d17:	adc    DWORD PTR [edi+0x5ae30271],ebx
  406d1d:	pop    ebx
  406d1e:	iret   
  406d1f:	fstp   TBYTE PTR [esi]
  406d21:	add    WORD PTR [edx-0x51],ax
  406d25:	fidivr DWORD PTR [esi+0x7b]
  406d28:	cdq    
  406d29:	jns    0x406cdf
  406d2b:	jmp    0x80f6c95
  406d30:	outs   dx,DWORD PTR ds:[esi]
  406d31:	(bad)  
  406d32:	mov    esi,0x28a2b594
  406d37:	xchg   cx,ax
  406d39:	imul   ecx,DWORD PTR [esi-0x15a9bb04],0xffffffce
  406d40:	inc    eax
  406d41:	sbb    bh,BYTE PTR [esi+ecx*8+0x5eb9bedd]
  406d48:	sub    eax,0xe8f73796
  406d4d:	scas   eax,DWORD PTR es:[edi]
  406d4e:	(bad)  
  406d50:	test   dl,al
  406d52:	mov    edx,0x6c297913
  406d57:	fdivrp st(0),st
  406d59:	stos   BYTE PTR es:[edi],al
  406d5a:	lods   eax,DWORD PTR ds:[esi]
  406d5b:	push   0x1ac1018
  406d60:	push   0x70
  406d62:	sbb    al,0x76
  406d64:	xor    eax,0x9f22a3df
  406d69:	jl     0x406d44
  406d6b:	xchg   edi,eax
  406d6c:	mov    DWORD PTR [eax+edx*8],esp
  406d6f:	dec    edi
  406d70:	scas   eax,DWORD PTR es:[edi]
  406d71:	cmp    al,0x79
  406d73:	lods   al,BYTE PTR ds:[esi]
  406d74:	aad    0x86
  406d76:	stos   DWORD PTR es:[edi],eax
  406d77:	xor    BYTE PTR [edi+0x50b42d2a],bl
  406d7d:	jmp    0x164adb3
  406d82:	adc    DWORD PTR [esi-0x77b6671f],edx
  406d88:	inc    ebp
  406d89:	cmp    eax,0xa7bce92
  406d8e:	xor    al,0xe5
  406d90:	stc    
  406d91:	xchg   ebp,eax
  406d92:	je     0x406dea
  406d94:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d96:	mov    eax,ds:0xc7d379c5
  406d9b:	inc    ebp
  406d9c:	bound  ebp,QWORD PTR [ebp+0x34]
  406d9f:	mov    ds:0x27d72758,al
  406da4:	enter  0xcb6c,0x63
  406da8:	out    dx,al
  406da9:	mov    bh,0xf7
  406dab:	daa    
  406dac:	bound  eax,QWORD PTR [ecx-0x6388ec14]
  406db2:	(bad)  
  406db3:	in     eax,0xca
  406db5:	into   
  406db6:	mov    bh,0xc4
  406db8:	pop    edi
  406db9:	lods   al,BYTE PTR ds:[esi]
  406dba:	loope  0x406df9
  406dbc:	sbb    esp,DWORD PTR [eax+ebp*1]
  406dbf:	stos   DWORD PTR es:[edi],eax
  406dc0:	add    ah,BYTE PTR [ebx+0x30]
  406dc3:	int3   
  406dc4:	call   0x636f:0xa89056e0
  406dcb:	sub    al,al
  406dcd:	push   ebx
  406dce:	xchg   BYTE PTR [esi-0x122a6f7d],dl
  406dd4:	jp     0x406dc2
  406dd6:	xor    DWORD PTR [edx],edx
  406dd8:	lahf   
  406dd9:	outs   dx,DWORD PTR ds:[esi]
  406dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ddb:	push   ds
  406ddc:	mov    edi,0x4bf9aac8
  406de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de2:	mov    cl,0xda
  406de4:	mov    edx,0xa44febc2
  406de9:	xor    eax,ebp
  406deb:	mov    ah,BYTE PTR [eax-0x5a2ac84a]
  406df1:	lea    esp,ds:0x9ca9c389
  406df7:	mov    bl,0x3d
  406df9:	push   ebx
  406dfa:	(bad)  
  406dfb:	test   al,0xf7
  406dfd:	inc    edi
  406dfe:	aaa    
  406dff:	push   edi
  406e00:	ficomp DWORD PTR [ecx-0x5d57e050]
  406e06:	mov    ah,0xd8
  406e08:	jae    0x406dd6
  406e0a:	sub    al,ch
  406e0c:	imul   edi,ebp,0x5933db5d
  406e12:	and    ebp,DWORD PTR [ecx-0x62]
  406e15:	ret    0x8cfb
  406e18:	jg     0x406e85
  406e1a:	sbb    eax,0x75a7a401
  406e1f:	aam    0xc8
  406e21:	dec    ebp
  406e22:	sbb    DWORD PTR [ebx+0x63dba823],ebp
  406e28:	pop    ecx
  406e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e2a:	mov    eax,ds:0xd64271d9
  406e2f:	gs xor al,0xc3
  406e32:	ins    DWORD PTR es:[edi],dx
  406e33:	mov    ebx,0x7c766bb8
  406e38:	pminub mm5,QWORD PTR [ebx-0x52]
  406e3c:	add    DWORD PTR [edi-0x1f],edx
  406e3f:	xor    ebp,edi
  406e41:	pop    esi
  406e42:	and    ax,0xf75
  406e46:	ret    
  406e47:	outs   dx,DWORD PTR ds:[esi]
  406e48:	jb     0x406dcd
  406e4a:	cld    
  406e4b:	sub    BYTE PTR [ecx+eax*8-0x47b66dc4],ah
  406e52:	out    dx,al
  406e53:	out    dx,al
  406e54:	xchg   ebx,eax
  406e55:	pop    dx
  406e57:	pusha  
  406e58:	shl    ch,1
  406e5a:	push   ds
  406e5b:	and    al,dl
  406e5d:	rol    bh,1
  406e5f:	mov    ebp,0xc56aac8f
  406e64:	inc    esi
  406e65:	cmp    BYTE PTR [edx],dl
  406e67:	sub    esi,edx
  406e69:	imul   esp,edx,0xdc4fbacc
  406e6f:	cmp    esp,DWORD PTR [ebx]
  406e71:	xchg   edi,eax
  406e72:	add    DWORD PTR [edi+0x4f],eax
  406e75:	jp     0x406e9d
  406e77:	pop    ss
  406e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e79:	sar    BYTE PTR [eax-0x720dc77b],1
  406e7f:	stos   DWORD PTR es:[edi],eax
  406e80:	shl    DWORD PTR [ebx-0xe],cl
  406e83:	mov    ch,0xb3
  406e85:	pop    eax
  406e86:	out    dx,al
  406e87:	or     BYTE PTR [ecx-0x2e6ae9eb],dl
  406e8d:	jmp    0x406e34
  406e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e90:	xor    dl,0x7a
  406e93:	shl    BYTE PTR [ebx],cl
  406e95:	inc    ebx
  406e96:	int3   
  406e97:	fs xchg esp,eax
  406e99:	xchg   ebp,eax
  406e9a:	mov    ds:0xff3130a3,al
  406e9f:	outs   dx,BYTE PTR ds:[esi]
  406ea0:	repnz pusha 
  406ea2:	ja     0x406ee2
  406ea4:	rcr    BYTE PTR [ebx+0x73cca0b2],cl
  406eaa:	into   
  406eab:	sub    al,0xd4
  406ead:	iret   
  406eae:	pop    ds
  406eaf:	aam    0xcc
  406eb1:	add    eax,0x59c844ea
  406eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb7:	mov    al,ds:0x3794e9b9
  406ebd:	add    cl,BYTE PTR [eax-0x377334be]
  406ec3:	mov    dh,0xbd
  406ec5:	push   ds
  406ec6:	int3   
  406ec7:	hlt    
  406ec8:	or     eax,0x340be92
  406ecd:	in     al,dx
  406ece:	sbb    DWORD PTR [eax],ebp
  406ed0:	(bad)  
  406ed1:	jge    0x406f4f
  406ed3:	idiv   bh
  406ed5:	in     eax,0xa
  406ed7:	stos   DWORD PTR es:[edi],eax
  406ed8:	fisttp DWORD PTR [edi+0x24]
  406edb:	nop
  406edc:	adc    BYTE PTR [edi-0x39],0xa1
  406ee0:	inc    esi
  406ee1:	jle    0x406e6b
  406ee3:	retf   0x2779
  406ee6:	ss push esi
  406ee8:	cmp    BYTE PTR [eax],0x2e
  406eeb:	aas    
  406eec:	push   ecx
  406eed:	pop    edx
  406eee:	cmp    eax,0x4425402
  406ef3:	lock icebp 
  406ef5:	pshufw mm1,QWORD PTR [edi+0x2e75f6a6],0xb0
  406efd:	int3   
  406efe:	or     cl,BYTE PTR [ebx+ecx*8]
  406f01:	mov    ebx,0x8658226d
  406f06:	fcom   QWORD PTR [ecx+0x8]
  406f09:	fs test eax,0x6637cbc8
  406f0f:	mov    esi,0xb75ea246
  406f14:	pop    ebx
  406f15:	jl     0x406eb7
  406f17:	inc    esp
  406f18:	ins    BYTE PTR es:[edi],dx
  406f19:	not    DWORD PTR [edi]
  406f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f1c:	inc    edi
  406f1d:	mov    dl,0xea
  406f1f:	and    eax,0x969ad3cb
  406f24:	jns    0x406f7a
  406f26:	jge    0x406efc
  406f28:	sbb    edi,edi
  406f2a:	fwait
  406f2b:	inc    edi
  406f2c:	adc    bl,0x6b
  406f2f:	sub    esi,DWORD PTR [eax-0x3e]
  406f32:	mov    edi,DWORD PTR [edi+ebp*1-0x59913e07]
  406f39:	stc    
  406f3a:	sbb    BYTE PTR [esi+0x4317ea67],cl
  406f40:	add    eax,0x2f0867ed
  406f45:	arpl   WORD PTR ds:0x38071fc,dx
  406f4b:	jmp    FWORD PTR [ecx-0xe175057]
  406f51:	inc    ebx
  406f52:	(bad)  
  406f53:	mov    cl,0x5f
  406f55:	idiv   DWORD PTR [esi-0x80]
  406f58:	sar    DWORD PTR [edx-0x5788d19c],1
  406f5e:	jp     0x406fdd
  406f60:	sub    al,0x53
  406f62:	or     bh,BYTE PTR [edx-0x49a0af8c]
  406f68:	data16 xor ch,dh
  406f6b:	dec    edx
  406f6c:	mov    edi,0x9a58d71b
  406f71:	xchg   edi,eax
  406f72:	jnp    0x406fda
  406f74:	gs test eax,0xbb35f8e0
  406f7a:	or     eax,DWORD PTR [esp+esi*4+0x6f]
  406f7e:	enter  0x2450,0xe0
  406f82:	loop   0x406f8e
  406f84:	imul   esp,esp,0x366c48d
  406f8a:	rcr    DWORD PTR [ebx],0xd
  406f8d:	mov    eax,ds:0xf0042a8
  406f92:	mov    bh,0xc0
  406f94:	and    DWORD PTR ds:0x42a8a5,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a8a5
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a8a5,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a8a5,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a8a5,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab42
  406fd4:	push   0x42ab42
  406fd9:	push   0x42ab24
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a8a5,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a8a5
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a8a5,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7e9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a78d
  407014:	sub    DWORD PTR ds:0x42a861,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x96,al
  40702c:	js     0x40709f
  40702e:	pop    ds
  40702f:	pop    eax
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x4070a0
  407038:	pop    ebp
  407039:	sbb    al,0x4c
  40703b:	add    ecx,esi
  40703d:	mov    eax,0xe6641672
  407042:	and    esp,ebp
  407044:	mov    ds:0x89f65ea4,al
  407049:	add    eax,0xbac59e9b
  40704e:	pop    ss
  40704f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407050:	test   dh,ch
  407052:	fiadd  DWORD PTR [edx]
  407054:	scas   eax,DWORD PTR es:[edi]
  407055:	sahf   
  407056:	sub    ebx,0x9b89b10b
  40705c:	sub    dl,al
  40705e:	mov    dl,0x63
  407060:	addr16 and dl,bl
  407063:	xchg   edi,eax
  407064:	adc    al,0xaa
  407066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407067:	arpl   si,dx
  407069:	jno    0x407071
  40706b:	jmp    0x40702e
  40706d:	push   ss
  40706e:	ds call 0xeafb6248
  407074:	loop   0x407076
  407076:	in     al,dx
  407077:	dec    esp
  407078:	dec    ebp
  407079:	arpl   dx,ax
  40707b:	scas   eax,DWORD PTR es:[edi]
  40707c:	inc    eax
  40707d:	pop    esp
  40707e:	arpl   WORD PTR [edx],bp
  407080:	xor    eax,0x89cd211b
  407085:	stc    
  407086:	mov    esp,0x7ee1800
  40708b:	adc    BYTE PTR [ebp-0xe],cl
  40708e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40708f:	push   es
  407090:	cmp    eax,0x2fc742f8
  407095:	aas    
  407096:	mov    eax,ds:0x344ae62f
  40709b:	cs out dx,eax
  40709d:	jl     0x40704d
  40709f:	mov    eax,0xed5c0d30
  4070a4:	jg     0x407102
  4070a6:	into   
  4070a7:	or     BYTE PTR [eax],ch
  4070a9:	out    dx,eax
  4070aa:	dec    ebx
  4070ab:	lods   al,BYTE PTR ds:[esi]
  4070ac:	sbb    ah,ch
  4070ae:	lock cmp al,0x15
  4070b1:	or     bh,dl
  4070b3:	aas    
  4070b4:	jg     0x4070f2
  4070b6:	stc    
  4070b7:	or     eax,0xd5dd05a7
  4070bc:	jl     0x407078
  4070be:	lds    edx,FWORD PTR [ebp+edi*2+0x1b]
  4070c2:	xor    DWORD PTR [edi+0x9],eax
  4070c5:	pop    ebp
  4070c6:	out    dx,al
  4070c7:	xor    al,0xd6
  4070c9:	xor    DWORD PTR [ebx+0x30],0xf11804f3
  4070d0:	inc    ebp
  4070d1:	push   edx
  4070d2:	rcr    DWORD PTR [edi-0x64],1
  4070d5:	test   DWORD PTR [edx+edi*8],edi
  4070d8:	adc    DWORD PTR [esi*2-0x3dbeba7a],ecx
  4070df:	icebp  
  4070e0:	push   ebp
  4070e1:	mov    eax,ds:0x738b5506
  4070e6:	push   0x90f25276
  4070eb:	push   0x4c
  4070ed:	or     bh,bh
  4070ef:	(bad)  
  4070f0:	or     DWORD PTR [ebp-0x5344ff0c],ebp
  4070f6:	jo     0x407174
  4070f8:	sbb    BYTE PTR [ebp-0x1014d265],bh
  4070fe:	xchg   esp,eax
  4070ff:	cmp    ecx,esp
  407101:	ins    DWORD PTR es:[edi],dx
  407102:	ja     0x407131
  407104:	iret   
  407105:	pop    ebx
  407106:	mov    dl,0xf3
  407108:	inc    edi
  407109:	call   0x121f0f2
  40710e:	mov    eax,ds:0x53979aff
  407113:	sbb    al,0x3d
  407115:	push   ecx
  407116:	push   esp
  407117:	mov    bh,0xe4
  407119:	popf   
  40711a:	mov    al,ds:0xa5fb58b3
  40711f:	std    
  407120:	xchg   esp,eax
  407121:	out    dx,eax
  407122:	cdq    
  407123:	fwait
  407124:	xchg   esi,eax
  407125:	ins    DWORD PTR es:[edi],dx
  407126:	sti    
  407127:	ins    DWORD PTR es:[edi],dx
  407128:	adc    BYTE PTR [edx+0x2cbfd140],bl
  40712e:	call   FWORD PTR [eax]
  407130:	(bad)  
  407131:	aam    0x90
  407133:	push   eax
  407134:	mov    ds:0xcf94ff5b,al
  407139:	test   DWORD PTR [ecx],0x3c7a7a50
  40713f:	pop    es
  407140:	mov    DWORD PTR [ebp-0x67],eax
  407143:	push   eax
  407144:	arpl   WORD PTR [esi-0x30],cx
  407147:	pop    ebx
  407148:	data16 out dx,al
  40714a:	dec    edx
  40714b:	add    DWORD PTR [edx+edi*2+0x1d47c380],ebp
  407152:	ja     0x40710e
  407154:	adc    DWORD PTR [eax+0x25c6b610],ebp
  40715a:	mov    ds:0xabecc07,al
  40715f:	outs   dx,BYTE PTR ds:[esi]
  407160:	aad    0x20
  407162:	sub    al,0x40
  407164:	cmp    eax,DWORD PTR [eax-0x5]
  407167:	sti    
  407168:	arpl   WORD PTR [ebp+0x72],bx
  40716b:	je     0x407172
  40716d:	outs   dx,DWORD PTR ds:[esi]
  40716e:	and    BYTE PTR [ecx+0xbf08726],0x29
  407175:	and    eax,0x524edbda
  40717a:	ins    DWORD PTR es:[edi],dx
  40717b:	std    
  40717c:	cwde   
  40717d:	sub    ebp,DWORD PTR [edx-0x5b683b4d]
  407183:	aaa    
  407184:	ds dec ebx
  407186:	pop    ecx
  407187:	sbb    eax,DWORD PTR [edi-0x7bd9df4a]
  40718d:	aaa    
  40718e:	daa    
  40718f:	mov    esp,0x38216fe0
  407194:	aad    0xd8
  407196:	sub    al,0x9e
  407198:	xchg   ebp,eax
  407199:	mov    WORD PTR [esi+0x74],fs
  40719c:	inc    edx
  40719d:	rol    DWORD PTR [bx+di+0x766f],cl
  4071a2:	out    dx,eax
  4071a3:	(bad)  
  4071a4:	in     al,dx
  4071a5:	inc    ebx
  4071a6:	mov    al,ds:0x4e6dc43b
  4071ab:	cdq    
  4071ac:	repz ds ret 0xc878
  4071b1:	loop   0x4071f1
  4071b3:	cli    
  4071b4:	dec    eax
  4071b5:	mov    edi,0x638c624e
  4071ba:	adc    al,0x40
  4071bc:	aad    0x9e
  4071be:	adc    ebp,ebp
  4071c0:	cld    
  4071c1:	cld    
  4071c2:	lahf   
  4071c3:	arpl   di,sp
  4071c5:	cmp    eax,0x46115206
  4071ca:	cmp    BYTE PTR [edx+ebx*1-0x12a27b4f],dh
  4071d1:	jp     0x40717a
  4071d3:	xchg   ebx,eax
  4071d4:	mov    ah,0x29
  4071d6:	mov    BYTE PTR [ecx],0xdb
  4071d9:	adc    dh,BYTE PTR [edi+0x0]
  4071dc:	xor    al,0xad
  4071de:	inc    eax
  4071df:	test   eax,0x8b220c4d
  4071e4:	mov    WORD PTR [ebp+0x5c],ss
  4071e7:	lea    edx,[edi]
  4071e9:	pop    ebp
  4071ea:	aam    0xd2
  4071ec:	inc    ecx
  4071ed:	sub    eax,0xf184a206
  4071f2:	(bad)  
  4071f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f4:	sbb    BYTE PTR [ebp+0x39],al
  4071f7:	pop    edx
  4071f8:	jae    0x407200
  4071fa:	dec    eax
  4071fb:	dec    esp
  4071fc:	loop   0x4071f5
  4071fe:	xchg   ebx,eax
  4071ff:	lods   al,BYTE PTR ds:[esi]
  407200:	push   eax
  407201:	dec    eax
  407202:	std    
  407203:	rcl    ebp,cl
  407205:	fiadd  WORD PTR [edi-0x1f2cee7e]
  40720b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40720c:	inc    BYTE PTR [edi-0x63b1705b]
  407212:	inc    esp
  407213:	or     al,0x89
  407215:	scas   eax,DWORD PTR es:[edi]
  407216:	test   eax,0x8ddc066a
  40721b:	mov    fs,WORD PTR [edx+0x72]
  40721e:	push   ss
  40721f:	aam    0xcc
  407221:	mov    ds:0xcf9b1ac8,al
  407226:	cmp    DWORD PTR [eax-0x2a],edx
  407229:	dec    esi
  40722a:	jge    0x40725d
  40722c:	cmp    cl,BYTE PTR [edx]
  40722e:	mov    ch,0x82
  407230:	adc    cl,BYTE PTR [ebx-0x6581ba13]
  407236:	push   edx
  407237:	mov    ds:0x7cb21cc8,eax
  40723c:	add    BYTE PTR [edx+eiz*4],al
  40723f:	jle    0x4071e1
  407241:	test   DWORD PTR [eax],edi
  407243:	inc    eax
  407244:	ss xchg ecx,eax
  407246:	ds jns 0x407242
  407249:	cmp    ebx,DWORD PTR [eax-0x14bfb963]
  40724f:	mov    ds:0x38dfc807,eax
  407254:	les    ebx,FWORD PTR [esi]
  407256:	out    dx,al
  407257:	push   DWORD PTR [edi+0x25]
  40725a:	inc    edx
  40725b:	fidiv  WORD PTR [edi]
  40725d:	pop    edx
  40725e:	push   ebp
  40725f:	nop
  407260:	fidivr WORD PTR [edi+0xbbd6ca7]
  407266:	inc    ebp
  407267:	push   edi
  407268:	rcr    BYTE PTR [eax+eax*2],1
  40726b:	cwde   
  40726c:	das    
  40726d:	dec    eax
  40726e:	xlat   BYTE PTR ds:[ebx]
  40726f:	ins    BYTE PTR es:[edi],dx
  407270:	punpckhwd mm1,QWORD PTR [ebp+0x3]
  407274:	iret   
  407275:	sar    BYTE PTR [esi],1
  407277:	push   ebp
  407278:	mov    edx,DWORD PTR [edx]
  40727a:	repz in eax,0x87
  40727d:	add    eax,0xaa0e7b52
  407282:	sub    dl,BYTE PTR [esi+eax*1+0x675bec01]
  407289:	mov    dh,0xcc
  40728b:	cwde   
  40728c:	adc    eax,0x6711d996
  407291:	add    al,0x64
  407293:	ret    
  407294:	add    DWORD PTR [ebp+0x18720d83],esp
  40729a:	fcmovnu st,st(7)
  40729c:	inc    ebp
  40729d:	dec    esi
  40729e:	mov    ecx,0x8d40cc47
  4072a3:	pop    es
  4072a4:	xchg   edi,eax
  4072a5:	xchg   edx,eax
  4072a6:	mov    ebx,0x26f53e45
  4072ab:	dec    esp
  4072ac:	jg     0x4072a6
  4072ae:	inc    esi
  4072af:	sbb    BYTE PTR [esi+0x73],cl
  4072b2:	shr    esi,0x42
  4072b5:	push   edi
  4072b6:	push   es
  4072b7:	xchg   edi,eax
  4072b8:	mov    eax,0xa434f0cd
  4072bd:	mov    al,0xfa
  4072bf:	or     BYTE PTR [edi+edx*8-0x31238b00],ch
  4072c6:	xor    BYTE PTR [esi+0x18],dh
  4072c9:	jmp    0x4072ac
  4072cb:	in     eax,dx
  4072cc:	xchg   esp,eax
  4072cd:	fidivr DWORD PTR [edi]
  4072cf:	or     eax,0xe9795226
  4072d4:	loop   0x407343
  4072d6:	sub    ah,BYTE PTR [ecx]
  4072d8:	sti    
  4072d9:	test   eax,0x1df45123
  4072de:	add    al,0x91
  4072e0:	sbb    eax,0x215c1971
  4072e5:	rep stos DWORD PTR es:[edi],eax
  4072e7:	mov    cl,0x77
  4072e9:	sub    DWORD PTR [eax+0x54],0xf6e8f5c7
  4072f0:	es pop esi
  4072f2:	mov    DWORD PTR [ecx],esp
  4072f4:	push   0x1
  4072f6:	mov    eax,0xde773837
  4072fb:	sub    al,BYTE PTR [ebx+0x7a]
  4072fe:	and    DWORD PTR [eax+0x26db0bff],ecx
  407304:	aaa    
  407305:	dec    edx
  407306:	push   ds
  407307:	inc    esi
  407308:	and    BYTE PTR [esi-0x26],0x4d
  40730c:	pop    ebp
  40730d:	aam    0xc
  40730f:	jne    0x407344
  407311:	lods   eax,DWORD PTR ds:[esi]
  407312:	(bad)  
  407313:	int    0x52
  407315:	ror    BYTE PTR [ecx-0x78c861dc],0x4c
  40731c:	sbb    al,0xe9
  40731e:	mov    dh,BYTE PTR ds:0xc69cd7bf
  407324:	inc    ebp
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a79925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a799
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a799,ecx
  407346:	cmp    DWORD PTR ds:0x42a799,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a799,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a8a9
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a799,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a799
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a799,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0xdb13e4c1,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x4073e9
  4073b7:	lds    esi,FWORD PTR [ebx]
  4073b9:	inc    ebp
  4073ba:	xchg   ebp,eax
  4073bb:	or     BYTE PTR [eax+0x6f974c6e],cl
  4073c1:	retfw  
  4073c3:	mov    bh,0xcb
  4073c5:	lahf   
  4073c6:	xchg   ecx,eax
  4073c7:	pop    ebx
  4073c8:	mov    ah,0x78
  4073ca:	outs   dx,DWORD PTR ds:[esi]
  4073cb:	xchg   ebp,eax
  4073cc:	movntps XMMWORD PTR [ebx],xmm1
  4073cf:	mov    eax,0x16c839b5
  4073d4:	and    eax,0xe37453b8
  4073d9:	int3   
  4073da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073db:	test   BYTE PTR [edi-0x541be382],cl
  4073e1:	into   
  4073e2:	in     eax,0x17
  4073e4:	imul   esp,DWORD PTR [eax-0x3923dd46],0xffffff86
  4073eb:	cmp    al,0x48
  4073ed:	test   eax,0xe215ffaf
  4073f2:	jns    0x407473
  4073f4:	faddp  st(0),st
  4073f6:	daa    
  4073f7:	pop    ss
  4073f8:	mov    eax,0x7d4c095e
  4073fd:	fcomip st,st(3)
  4073ff:	outs   dx,DWORD PTR ds:[esi]
  407400:	fdivr  QWORD PTR [ebx]
  407402:	div    al
  407404:	pusha  
  407405:	jnp    0x40746d
  407407:	jge    0x40743f
  407409:	jmp    0x407402
  40740b:	jb     0x40744f
  40740d:	xor    DWORD PTR [esi-0x3fa2d82c],eax
  407413:	xor    esi,esp
  407415:	adc    BYTE PTR [edi+0x3daefdfb],al
  40741b:	fcom   DWORD PTR ds:0x4bc8929f
  407421:	add    al,0x3b
  407423:	lds    ebp,FWORD PTR [edx-0x36]
  407426:	call   0x69a2:0x2484628d
  40742d:	ins    BYTE PTR es:[edi],dx
  40742e:	iret   
  40742f:	jo     0x407493
  407431:	adc    al,0xf
  407433:	mov    ebx,0xfe434aba
  407438:	and    esp,DWORD PTR [edx-0x44fcbc62]
  40743e:	lods   al,BYTE PTR ds:[esi]
  40743f:	ret    
  407440:	xlat   BYTE PTR ds:[ebx]
  407441:	dec    edx
  407442:	pop    DWORD PTR [esi]
  407444:	gs cmova esp,edx
  407448:	sub    DWORD PTR [esi+0x22],eax
  40744b:	cmp    BYTE PTR [ebp+0x3c8e4efe],dh
  407451:	ins    DWORD PTR es:[edi],dx
  407452:	xchg   edx,eax
  407453:	xor    eax,edx
  407455:	pusha  
  407456:	outs   dx,BYTE PTR ds:[esi]
  407457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407458:	jg     0x4074d9
  40745a:	adc    BYTE PTR [ebx+0xd11babf],ch
  407460:	rol    DWORD PTR ds:0x73bec981,1
  407466:	cs ins BYTE PTR es:[edi],dx
  407468:	int3   
  407469:	cmp    cl,BYTE PTR [ecx]
  40746b:	ins    BYTE PTR es:[edi],dx
  40746c:	shl    DWORD PTR [ebx],1
  40746e:	xor    al,0xa8
  407470:	lods   al,BYTE PTR ds:[esi]
  407471:	dec    esi
  407472:	psrlq  mm2,mm7
  407475:	sbb    al,0x5
  407477:	dec    esi
  407478:	mov    bl,0x1a
  40747a:	addr16 pop ds
  40747c:	fistp  WORD PTR [eax+0x20981859]
  407482:	clc    
  407483:	ins    DWORD PTR es:[edi],dx
  407484:	jo     0x4074f2
  407486:	and    eax,0x97174105
  40748b:	aam    0x10
  40748d:	dec    ebx
  40748e:	mov    edi,0x4ab8b501
  407493:	fmul   st,st(6)
  407495:	popa   
  407496:	xchg   ebp,eax
  407497:	cwde   
  407498:	pop    eax
  407499:	add    ch,BYTE PTR [edx-0x7394d746]
  40749f:	jb     0x407504
  4074a1:	ja     0x40742d
  4074a3:	cmp    eax,0xa4152651
  4074a8:	cmp    al,BYTE PTR [ecx]
  4074aa:	mov    ds:0x64dd3b88,eax
  4074af:	or     al,0x6c
  4074b1:	ret    
  4074b2:	cmp    dh,BYTE PTR [ebx+ebx*4+0x75e2916a]
  4074b9:	loope  0x4074a6
  4074bb:	pop    esi
  4074bc:	outs   dx,BYTE PTR ds:[esi]
  4074bd:	pop    esi
  4074be:	jns    0x407461
  4074c0:	fs ds jbe 0x4074eb
  4074c4:	pop    ds
  4074c5:	mul    BYTE PTR [edx-0x5a0d2c8e]
  4074cb:	daa    
  4074cc:	or     ch,BYTE PTR [ebx-0x6c]
  4074cf:	or     BYTE PTR [edi+eiz*2+0xd675a91],bh
  4074d6:	daa    
  4074d7:	mov    DWORD PTR [edx],edx
  4074d9:	loope  0x4074f2
  4074db:	mov    DWORD PTR [ebx],eax
  4074dd:	lds    esi,FWORD PTR [edi+0x78]
  4074e0:	sub    edx,DWORD PTR [edi+edx*2-0x13c4c28d]
  4074e7:	cli    
  4074e8:	jge    0x4074d6
  4074ea:	xor    edx,DWORD PTR [edi+0x35]
  4074ed:	adc    al,0x20
  4074ef:	sbb    al,0xc4
  4074f1:	lock shr DWORD PTR [edx],0x69
  4074f5:	mov    al,ds:0x2c19a1a4
  4074fa:	sub    al,0x6a
  4074fc:	cmp    edx,DWORD PTR [esi-0x16]
  4074ff:	or     al,BYTE PTR [ebp+0x6c]
  407502:	mov    bl,0x31
  407504:	in     al,dx
  407505:	mov    edx,0x6122cc5a
  40750a:	push   edx
  40750b:	xor    al,0xa8
  40750d:	aad    0x33
  40750f:	out    0xd9,al
  407511:	sub    eax,0xde898855
  407516:	scas   eax,DWORD PTR es:[edi]
  407517:	jecxz  0x407538
  407519:	adc    al,0x47
  40751b:	ficom  WORD PTR [ebx]
  40751d:	or     al,BYTE PTR [edx-0x113fc122]
  407523:	call   0xbda5:0x55cd0400
  40752a:	loop   0x407568
  40752c:	out    dx,al
  40752d:	data16 mov cl,0xca
  407530:	pop    esi
  407531:	sbb    ebx,DWORD PTR [edx-0x205c4c65]
  407537:	inc    ebp
  407538:	xchg   DWORD PTR [ebp-0x2e],eax
  40753b:	and    bl,BYTE PTR ds:0x43deb566
  407541:	push   0xbd84d0cb
  407546:	jmp    0x8045b0d9
  40754b:	mov    bh,BYTE PTR [edi-0x1]
  40754e:	cmp    DWORD PTR [ecx],esp
  407550:	xchg   ebp,eax
  407551:	jmp    0x69e9b889
  407556:	enter  0xaa7f,0x4c
  40755a:	sub    ah,ch
  40755c:	pop    ds
  40755d:	push   ebx
  40755e:	sbb    eax,0x2cfeef74
  407563:	jecxz  0x407527
  407565:	into   
  407566:	inc    edx
  407567:	je     0x4074ff
  407569:	fistp  WORD PTR [ebx-0x24]
  40756c:	jmp    0x204d:0x2da14821
  407573:	shl    DWORD PTR ds:0xfc749301,1
  407579:	ss enter 0xea66,0x96
  40757e:	cld    
  40757f:	retf   
  407580:	add    al,0x63
  407582:	sar    DWORD PTR [edx+0x58],0x4e
  407586:	popw   ds
  407588:	out    0x93,eax
  40758a:	inc    esi
  40758b:	push   edx
  40758c:	mov    ah,0xd9
  40758e:	retf   0xe4b9
  407591:	lods   al,BYTE PTR ds:[esi]
  407592:	pop    edx
  407593:	mov    edi,0x3f7c3937
  407598:	push   cs
  407599:	inc    esi
  40759a:	unpckhps xmm4,xmm0
  40759d:	sbb    edi,eax
  40759f:	outs   dx,BYTE PTR ds:[esi]
  4075a0:	add    bl,ch
  4075a2:	sub    ecx,0xeed5ca20
  4075a8:	outs   dx,BYTE PTR ds:[esi]
  4075a9:	pop    ebx
  4075aa:	pusha  
  4075ab:	dec    eax
  4075ac:	mov    edi,0x2773080d
  4075b1:	sub    al,0x4b
  4075b3:	pop    ebp
  4075b4:	sar    edi,1
  4075b6:	dec    edx
  4075b7:	icebp  
  4075b8:	xor    DWORD PTR [ebx-0x737684ad],esi
  4075be:	xlat   BYTE PTR ds:[ebx]
  4075bf:	dec    edi
  4075c0:	mov    ebp,0x7c0e531e
  4075c5:	push   esi
  4075c6:	fisub  DWORD PTR [edx]
  4075c8:	add    DWORD PTR [ecx-0x228754c1],ebx
  4075ce:	push   0x51
  4075d0:	ret    0x9d98
  4075d3:	in     al,0xd1
  4075d5:	or     eax,0x5cd13078
  4075da:	retf   0x27c7
  4075dd:	js     0x407643
  4075df:	loopne 0x40757f
  4075e1:	in     al,0x68
  4075e3:	lods   al,BYTE PTR ds:[esi]
  4075e4:	mov    ebx,DWORD PTR [esi-0x153b9fcd]
  4075ea:	mov    edi,0xb80ccef3
  4075ef:	test   DWORD PTR [eax+ebx*1],edx
  4075f2:	push   0xffffffcd
  4075f4:	dec    ebx
  4075f5:	out    dx,eax
  4075f6:	cmp    DWORD PTR [esi],ebx
  4075f8:	push   cs
  4075f9:	adc    esp,edi
  4075fb:	mov    ecx,0xeaaca9b6
  407600:	cmp    ecx,DWORD PTR [edx-0x50]
  407603:	out    0xd2,eax
  407605:	sbb    dh,BYTE PTR [esi-0x7b]
  407608:	push   ebx
  407609:	js     0x4075e4
  40760b:	adc    al,0x50
  40760d:	pop    esi
  40760e:	cmp    bl,BYTE PTR [ecx-0x32113430]
  407614:	and    ecx,DWORD PTR [ecx+esi*1-0x2b]
  407618:	ja     0x4075a9
  40761a:	sahf   
  40761b:	call   0x85ac:0x280f7623
  407622:	popf   
  407623:	div    DWORD PTR [edx+0x3310848b]
  407629:	int3   
  40762a:	cmp    eax,0x9e8925ce
  40762f:	sbb    ebx,DWORD PTR [ebx-0x12b17dc9]
  407635:	scas   al,BYTE PTR es:[edi]
  407636:	gs inc edx
  407638:	test   DWORD PTR [edx],eax
  40763a:	jmp    0xfe414869
  40763f:	ret    0xdffa
  407642:	(bad)  
  407643:	ja     0x407638
  407645:	in     al,dx
  407646:	xor    eax,0xe6c1b758
  40764b:	cld    
  40764c:	int3   
  40764d:	sub    BYTE PTR [eax+0x4f6c787f],bh
  407653:	xchg   ebx,eax
  407654:	push   eax
  407655:	mov    esi,0x821630e2
  40765a:	out    dx,eax
  40765b:	push   ecx
  40765c:	rcl    esi,cl
  40765e:	les    edx,FWORD PTR [eax+0x4ef6cbdf]
  407664:	scas   al,BYTE PTR es:[edi]
  407665:	in     al,dx
  407666:	jbe    0x407692
  407668:	mov    cl,0x25
  40766a:	jmp    0x407625
  40766c:	xchg   ecx,eax
  40766d:	imul   ebp,DWORD PTR [eax-0x426a103e],0x441cf067
  407677:	cmp    ebp,DWORD PTR [ecx+0x15]
  40767a:	mov    bl,0x4d
  40767c:	and    ebp,DWORD PTR [ebp+eiz*2-0x53]
  407680:	mov    bh,0x89
  407682:	lea    edi,[eax]
  407684:	sbb    ecx,DWORD PTR [esp+eax*1+0x30976f94]
  40768b:	addr16 push ebp
  40768d:	xchg   ebp,eax
  40768e:	mov    cl,0xed
  407690:	add    esp,ebx
  407692:	les    ecx,FWORD PTR [ebx+0x5e7c8460]
  407698:	adc    cl,BYTE PTR [ecx+0x4dd0d414]
  40769e:	js     0x407670
  4076a0:	push   eax
  4076a1:	in     al,dx
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a781,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a85d,0x42a79d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7d9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7d9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7d9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7d9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7d9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7d9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7d9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7d9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx-0x7a518918],1
  407796:	popa   
  407797:	fild   QWORD PTR [eax+esi*4]
  40779a:	(bad)  
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x407735
  4077a2:	mov    ebp,0xc391b2ad
  4077a7:	popf   
  4077a8:	dec    eax
  4077a9:	push   0xfffffff4
  4077ab:	test   BYTE PTR [ebx-0x35],al
  4077ae:	or     al,0x66
  4077b0:	push   ds
  4077b1:	loopne 0x407811
  4077b3:	or     cl,bh
  4077b5:	adc    al,0x4
  4077b7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4077b9:	adc    DWORD PTR [eax-0x233ddd3b],ebx
  4077bf:	mov    ebx,0xd3f1b1aa
  4077c4:	or     ecx,DWORD PTR [ebp+0x58]
  4077c7:	call   0x2f28:0xf96d8041
  4077ce:	mov    esi,0xbac0d49a
  4077d3:	addr16 push 0xa70fa0ed
  4077d9:	add    al,0x45
  4077db:	adc    DWORD PTR [edi+ecx*1],esi
  4077de:	cmp    DWORD PTR ds:0x4f3fb73d,ecx
  4077e4:	add    DWORD PTR ds:0x8bbaa888,eax
  4077ea:	cld    
  4077eb:	push   esi
  4077ec:	jmp    0x40776f
  4077ee:	js     0x40782b
  4077f0:	mov    esp,0xe9bc0267
  4077f5:	push   eax
  4077f6:	sub    DWORD PTR [edx-0x4e],eax
  4077f9:	retf   
  4077fa:	xor    bl,BYTE PTR [edx-0x52]
  4077fd:	push   0xffffff9a
  4077ff:	jbe    0x4077f8
  407801:	popf   
  407802:	mov    bl,0x9e
  407804:	cmc    
  407805:	push   eax
  407806:	push   ds
  407807:	retf   
  407808:	adc    al,0x82
  40780a:	les    esp,FWORD PTR [edi-0x7d]
  40780d:	ss loope 0x40785e
  407810:	fwait
  407811:	xlat   BYTE PTR ds:[ebx]
  407812:	fwait
  407813:	retf   
  407814:	cmc    
  407815:	mov    eax,ds:0x8f2d265b
  40781a:	adc    al,0xca
  40781c:	sub    edx,DWORD PTR [eax]
  40781e:	mov    al,0x2d
  407820:	leave  
  407821:	push   edi
  407822:	mov    ebp,0x7bd2dff9
  407827:	es shl ebp,0x29
  40782b:	or     ah,bh
  40782d:	in     eax,dx
  40782e:	push   cs
  40782f:	outs   dx,BYTE PTR ds:[esi]
  407830:	call   0xa9e2:0x43d66a6a
  407837:	jecxz  0x407843
  407839:	addr16 adc esi,esi
  40783c:	dec    ecx
  40783d:	add    eax,0xea8ddfef
  407842:	or     ebp,DWORD PTR [edx]
  407844:	imul   BYTE PTR [edi+edx*1+0x43]
  407848:	adc    bl,BYTE PTR [eax]
  40784a:	and    ebx,ebp
  40784c:	outs   dx,DWORD PTR ds:[esi]
  40784d:	mov    ds:0x2da705b0,eax
  407852:	jp     0x4077ef
  407854:	(bad)  
  407855:	mov    eax,0x38b87d52
  40785a:	cmp    dl,dl
  40785c:	cs sbb eax,0x98f3ff70
  407862:	test   al,0xaf
  407864:	xor    bl,dh
  407866:	test   BYTE PTR [eax],0xe2
  407869:	sbb    BYTE PTR [ecx+0x3599a854],dh
  40786f:	retf   
  407870:	xor    ch,bh
  407872:	(bad)  
  407873:	call   0x21b1:0x2be0e65d
  40787a:	dec    edi
  40787b:	push   ds
  40787c:	push   edx
  40787d:	arpl   WORD PTR [eax+ebp*8],dx
  407880:	mov    bh,0x8
  407882:	pop    esi
  407883:	dec    dl
  407885:	out    dx,eax
  407886:	sti    
  407887:	pop    ebx
  407888:	add    BYTE PTR [edi-0x1c67e684],dl
  40788e:	into   
  40788f:	addr16 mov ebp,ebx
  407892:	dec    eax
  407893:	push   ebp
  407894:	cmc    
  407895:	and    BYTE PTR [esi],bl
  407897:	out    dx,eax
  407898:	pop    esp
  407899:	xor    ecx,ecx
  40789b:	mov    ah,0x38
  40789d:	jnp    0x4078e3
  40789f:	xchg   edx,ebx
  4078a1:	inc    ecx
  4078a2:	cs ja  0x4078c7
  4078a5:	cmp    DWORD PTR [edx],ebp
  4078a7:	adc    ebp,DWORD PTR [eax-0x2fc05d42]
  4078ad:	pop    ebp
  4078ae:	cmc    
  4078af:	jl     0x40787c
  4078b1:	ds xor al,0x9
  4078b4:	sahf   
  4078b5:	bnd jno 0x407879
  4078b8:	pop    esp
  4078b9:	mov    ds,WORD PTR [ebx]
  4078bb:	fs push ebx
  4078bd:	dec    eax
  4078be:	mov    ebx,0xa1e3c413
  4078c3:	push   eax
  4078c4:	pop    ebp
  4078c5:	outs   dx,DWORD PTR ds:[esi]
  4078c6:	int    0xd6
  4078c8:	mov    eax,ds:0xce7834a9
  4078cd:	call   0x4bd7:0x2fe28cbb
  4078d4:	xchg   ebp,eax
  4078d5:	stc    
  4078d6:	adc    ebx,eax
  4078d8:	mov    al,0xe6
  4078da:	ret    
  4078db:	fistp  WORD PTR [edx-0x7]
  4078de:	push   ds
  4078df:	jnp    0x4078b2
  4078e1:	push   ds
  4078e2:	sti    
  4078e3:	jmp    0x4accc0d2
  4078e8:	dec    eax
  4078e9:	lods   al,BYTE PTR ds:[esi]
  4078ea:	scas   eax,DWORD PTR es:[edi]
  4078eb:	xor    bl,ch
  4078ed:	out    0xf2,al
  4078ef:	mov    ebp,0x46ce6fbd
  4078f4:	std    
  4078f5:	nop
  4078f6:	bound  esi,QWORD PTR [ebx]
  4078f8:	scas   eax,DWORD PTR es:[edi]
  4078f9:	ins    BYTE PTR es:[edi],dx
  4078fa:	jle    0x407959
  4078fc:	ins    DWORD PTR es:[edi],dx
  4078fd:	test   BYTE PTR [edx+0x771cfad1],cl
  407903:	gs repnz push 0x1f
  407907:	enter  0x39e6,0x76
  40790b:	mov    ebp,0x3ebcc00b
  407910:	jl     0x407915
  407912:	xor    al,0x6f
  407914:	mov    al,0x46
  407916:	pushf  
  407917:	scas   eax,DWORD PTR es:[edi]
  407918:	popa   
  407919:	(bad)  
  40791a:	data16 aad 0x8c
  40791d:	and    dh,BYTE PTR [ebp-0x52]
  407920:	not    DWORD PTR gs:[eax-0x1f577c77]
  407927:	fidivr WORD PTR [ebx-0x16b6ca59]
  40792d:	std    
  40792e:	mov    al,ds:0xdcd64338
  407933:	dec    ecx
  407934:	(bad)  
  407935:	outs   dx,DWORD PTR ds:[esi]
  407936:	and    edi,eax
  407938:	pop    esi
  407939:	aas    
  40793a:	jecxz  0x407970
  40793c:	mov    dl,0xf4
  40793e:	mov    edx,0x78db579e
  407943:	es cli 
  407945:	lock call 0x46bb83c8
  40794b:	aam    0x48
  40794d:	mov    ch,0x2b
  40794f:	lock out 0x7d,eax
  407952:	js     0x407905
  407954:	hlt    
  407955:	xor    al,0x2e
  407957:	div    BYTE PTR [edx]
  407959:	add    BYTE PTR [ebx+0x3391000c],ch
  40795f:	clc    
  407960:	mov    ebx,0xfa9d917
  407965:	push   ebx
  407966:	neg    DWORD PTR ds:0x1e5081e
  40796c:	inc    edx
  40796d:	inc    eax
  40796e:	adc    cl,BYTE PTR [ebx]
  407970:	mov    dl,0x42
  407972:	xchg   esi,eax
  407973:	fcomp  DWORD PTR [ebx-0x4f08005]
  407979:	push   eax
  40797a:	cmp    al,0x62
  40797c:	dec    esp
  40797d:	sbb    al,BYTE PTR [edx]
  40797f:	hlt    
  407980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407981:	mov    dh,0x68
  407983:	xor    eax,0x4b0c2a68
  407988:	out    dx,eax
  407989:	push   esp
  40798a:	shl    edi,cl
  40798c:	imul   edi,DWORD PTR [edi-0x2e],0xffffff99
  407990:	pop    esi
  407991:	adc    eax,edx
  407993:	rol    BYTE PTR [eax+ecx*1-0x2e],0x2d
  407998:	int3   
  407999:	retf   
  40799a:	inc    ecx
  40799b:	cwde   
  40799c:	gs mov ebx,0x12df810e
  4079a2:	cmp    ebx,esp
  4079a4:	add    BYTE PTR [eax+ebx*8-0x3],0xe2
  4079a9:	inc    ebp
  4079aa:	mov    dh,0xbc
  4079ac:	(bad)  
  4079ad:	jle    0x4079b2
  4079af:	jmp    0x76c3ab9e
  4079b4:	imul   ebx,DWORD PTR [eax+0x7b],0x40
  4079b8:	adc    eax,0x41fc2348
  4079bd:	inc    ebp
  4079be:	pop    ds
  4079bf:	fidiv  WORD PTR [ecx-0x54]
  4079c2:	lods   al,BYTE PTR ds:[esi]
  4079c3:	(bad)  
  4079c4:	sti    
  4079c5:	(bad)  
  4079c6:	outs   dx,DWORD PTR ds:[esi]
  4079c7:	mov    ch,0xd7
  4079c9:	dec    esp
  4079ca:	jnp    0x40798f
  4079cc:	sbb    edi,DWORD PTR [ebp+ecx*2-0x60a3fb3b]
  4079d3:	add    esp,DWORD PTR [esi+0x22ff5133]
  4079d9:	xor    al,0xb6
  4079db:	fcmovu st,st(6)
  4079dd:	push   ds
  4079de:	cmp    al,0x56
  4079e0:	cmp    DWORD PTR [edi-0x75bee335],ebp
  4079e6:	add    DWORD PTR [eax],ebx
  4079e8:	int3   
  4079e9:	pop    ds
  4079ea:	in     eax,0x73
  4079ec:	mov    ebp,0xeb0905d
  4079f1:	scas   eax,DWORD PTR es:[edi]
  4079f2:	jg     0x4079cd
  4079f4:	and    dh,BYTE PTR [edx-0x53]
  4079f7:	and    bl,BYTE PTR [esi-0x25]
  4079fa:	sub    edx,DWORD PTR ds:[ebp+0x1dc99ded]
  407a01:	add    BYTE PTR [edx+0x6a],0x4
  407a05:	mov    edx,DWORD PTR [edx+0x3ff3b5ad]
  407a0b:	sbb    esi,DWORD PTR [edi-0x3e]
  407a0e:	sbb    DWORD PTR [ebx],0xf0a64b63
  407a14:	mov    BYTE PTR [edx-0x69],ah
  407a17:	mov    ebp,0x1ebda627
  407a1c:	and    eax,0x75a1fc18
  407a21:	cmp    eax,0x5e2bcc3d
  407a26:	push   esi
  407a27:	es popf 
  407a29:	adc    eax,DWORD PTR [eax+0x30b4621e]
  407a2f:	mov    cl,0x61
  407a31:	mov    ah,0x94
  407a33:	dec    esp
  407a34:	jecxz  0x4079b9
  407a36:	(bad)  
  407a37:	push   ebp
  407a38:	adc    al,0xe0
  407a3a:	cmp    BYTE PTR [esi-0x3858b2e3],dh
  407a40:	idiv   BYTE PTR [esi+0x6c]
  407a43:	jmp    0x407a4a
  407a45:	sbb    eax,0xe9b54e8f
  407a4a:	and    bl,BYTE PTR [edi+0x49bdd0fd]
  407a50:	mov    al,ds:0x7c2a8775
  407a55:	lock adc ecx,DWORD PTR [esi-0x1]
  407a59:	cs xchg ebp,eax
  407a5b:	xor    eax,0x427d8219
  407a60:	inc    edx
  407a61:	popf   
  407a62:	icebp  
  407a63:	cld    
  407a64:	cdq    
  407a65:	lods   al,BYTE PTR ds:[esi]
  407a66:	add    edx,ebp
  407a68:	jge    0x407a83
  407a6a:	lds    edi,FWORD PTR [ebp-0x62]
  407a6d:	loopne 0x407a06
  407a6f:	xchg   ecx,eax
  407a70:	sub    al,0xa5
  407a72:	paddusb mm7,QWORD PTR [edx+0x6f]
  407a76:	sub    edx,DWORD PTR [eax]
  407a78:	mov    ecx,0xc125a280
  407a7d:	xchg   ecx,eax
  407a7e:	add    al,0xba
  407a80:	xor    al,0xd8
  407a82:	push   esp
  407a83:	pop    esi
  407a84:	nop
  407a85:	add    cl,BYTE PTR [ebx+0x481e16f9]
  407a8b:	and    eax,0xc703667f
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	stos   BYTE PTR es:[edi],al
  407ac1:	jl     0x407a7e
  407ac3:	dec    edx
  407ac4:	pushf  
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407ab7
  407acd:	pop    ds
  407ace:	xor    eax,eax
  407ad0:	aam    0xa6
  407ad2:	mov    esi,0x96c862e3
  407ad7:	mov    al,ds:0x6cf24c33
  407adc:	xchg   BYTE PTR [eax+0x23],cl
  407adf:	imul   ebx,esp,0x33
  407ae2:	push   edi
  407ae3:	sub    DWORD PTR [esi-0x53],ecx
  407ae6:	iret   
  407ae7:	push   cs
  407ae8:	inc    esp
  407ae9:	mov    ds:0xa0412d26,al
  407aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aef:	mov    ah,0x76
  407af1:	out    dx,eax
  407af2:	nop
  407af3:	lea    ebx,[esi-0x628673a1]
  407af9:	mov    esi,0xf69fdf18
  407afe:	mov    ah,0x52
  407b00:	xor    eax,0x9217fa74
  407b05:	ret    
  407b06:	test   edx,esi
  407b08:	cmp    al,0xd0
  407b0a:	lock retf 
  407b0c:	sub    ch,dl
  407b0e:	das    
  407b0f:	test   DWORD PTR [esp+edi*1+0x60],edi
  407b13:	aas    
  407b14:	fisttp QWORD PTR [ecx-0x67]
  407b17:	mov    ds,WORD PTR [ebx]
  407b19:	jo     0x407ae7
  407b1b:	jecxz  0x407acb
  407b1d:	mov    ecx,0x471c54f7
  407b22:	mov    al,ds:0x336270ae
  407b27:	xlat   BYTE PTR ds:[ebx]
  407b28:	loopne 0x407b74
  407b2a:	std    
  407b2b:	sbb    dh,dh
  407b2d:	repz leave 
  407b2f:	(bad)  
  407b30:	and    eax,0x1320089b
  407b35:	push   0xcba71623
  407b3a:	scas   eax,DWORD PTR es:[edi]
  407b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3c:	mov    dh,0x38
  407b3e:	mul    DWORD PTR [esi]
  407b40:	cmp    bh,bl
  407b42:	(bad)  
  407b43:	(bad)  
  407b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b46:	enter  0x30d6,0xfd
  407b4a:	loope  0x407ad9
  407b4c:	xchg   DWORD PTR [esi-0x2a390fd6],ebx
  407b52:	inc    eax
  407b53:	xlat   BYTE PTR ds:[ebx]
  407b54:	mov    ebx,0x97f274e5
  407b59:	xchg   esp,eax
  407b5a:	jg     0x407afd
  407b5c:	ss sbb eax,0x8339a3dd
  407b62:	leave  
  407b63:	in     eax,dx
  407b64:	arpl   WORD PTR [ebp-0x676ac7b7],bp
  407b6a:	call   0x9c7b55d5
  407b6f:	xchg   esp,eax
  407b70:	jl     0x407afb
  407b72:	adc    al,ah
  407b74:	jmp    0x9353de98
  407b79:	xchg   edx,eax
  407b7a:	pop    ebx
  407b7b:	rcl    BYTE PTR [eax-0x61],cl
  407b7e:	add    DWORD PTR [edx],esi
  407b80:	jmp    0x29b0a227
  407b85:	out    dx,eax
  407b86:	jl     0x407bf9
  407b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b89:	imul   ebp,DWORD PTR [esi],0x6c289025
  407b8f:	aas    
  407b90:	add    al,0x18
  407b92:	mov    ds:0x92552031,al
  407b97:	je     0x407b2d
  407b99:	xchg   edx,eax
  407b9a:	cmp    ah,ah
  407b9c:	pop    es
  407b9d:	or     DWORD PTR [eax+0x6c7a6143],ecx
  407ba3:	jno    0x407b4a
  407ba5:	push   0xffffff9a
  407ba7:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407ba9:	add    al,0x79
  407bab:	enter  0xdef4,0xfd
  407baf:	stc    
  407bb0:	jp     0x407b84
  407bb2:	cmp    al,ch
  407bb4:	adc    DWORD PTR [edx+0x3d5022dc],ebx
  407bba:	fcomi  st,st(4)
  407bbc:	loopne 0x407bd3
  407bbe:	or     cl,BYTE PTR [edi]
  407bc0:	inc    edi
  407bc1:	push   esi
  407bc2:	ret    0xb411
  407bc5:	mov    ds:0xe8fea690,eax
  407bca:	(bad)  
  407bcb:	jmp    0x7bd7:0x10059308
  407bd2:	pushf  
  407bd3:	rcr    BYTE PTR [esi-0x6743e320],0x3e
  407bda:	jne    0x407b8b
  407bdc:	imul   BYTE PTR [edx]
  407bde:	jns    0x407c1c
  407be0:	push   edx
  407be1:	sbb    ebx,edx
  407be3:	out    dx,eax
  407be4:	repz pop ds
  407be6:	pop    ss
  407be7:	cmp    eax,0x97cd4236
  407bec:	mov    al,0x53
  407bee:	or     edx,eax
  407bf0:	and    BYTE PTR [edi+esi*2+0x6b36896d],bh
  407bf7:	dec    edi
  407bf8:	imul   ebx,DWORD PTR ds:0xf4724cba,0x5d
  407bff:	jno    0x407c03
  407c01:	sub    dl,dh
  407c03:	ja     0x407bdd
  407c05:	cmp    eax,0xd1410e94
  407c0a:	cs push 0x68
  407c0d:	cmc    
  407c0e:	clc    
  407c0f:	in     al,dx
  407c10:	jne    0x407bf1
  407c12:	pusha  
  407c13:	shl    BYTE PTR [ebp+0x3],1
  407c16:	xchg   esi,eax
  407c17:	xor    ah,BYTE PTR [esi+ebx*2]
  407c1a:	dec    eax
  407c1b:	sub    BYTE PTR [esi-0x12],bh
  407c1e:	or     al,0x81
  407c20:	(bad)  
  407c21:	push   ecx
  407c22:	sub    DWORD PTR [eax],0xffffff9b
  407c25:	mov    bh,0xc
  407c27:	adc    BYTE PTR ds:0x50249968,bh
  407c2d:	mov    cl,BYTE PTR [edx+0x274b64ad]
  407c33:	mov    WORD PTR [esi],?
  407c35:	mov    WORD PTR [edi-0x5c],fs
  407c38:	jb     0x407c33
  407c3a:	sub    esp,DWORD PTR [eax]
  407c3c:	iret   
  407c3d:	jecxz  0x407c88
  407c3f:	push   0xd
  407c41:	mov    WORD PTR [edi+0x487afece],es
  407c47:	outs   dx,BYTE PTR ds:[esi]
  407c48:	outs   dx,BYTE PTR ds:[esi]
  407c49:	test   al,0xb2
  407c4b:	or     eax,0x1c668ee4
  407c50:	fbstp  TBYTE PTR [ebx-0x1b74efb5]
  407c56:	push   esp
  407c57:	daa    
  407c58:	inc    edx
  407c59:	lods   eax,DWORD PTR ds:[esi]
  407c5a:	repnz test BYTE PTR [eax-0x31],cl
  407c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5f:	jmp    0x407cac
  407c61:	jle    0x407c30
  407c63:	rcr    DWORD PTR [edx],1
  407c65:	fstp   TBYTE PTR [ecx+0x3c]
  407c68:	test   BYTE PTR [ecx-0x12],al
  407c6b:	jecxz  0x407bef
  407c6d:	imul   ecx,ecx,0xfdea2a8e
  407c73:	jmp    0x407c68
  407c75:	sub    eax,0x7b82aa60
  407c7a:	out    dx,eax
  407c7b:	xchg   edi,eax
  407c7c:	or     ah,BYTE PTR [edx]
  407c7e:	push   DWORD PTR [ecx]
  407c80:	repnz pop eax
  407c82:	cs push ebp
  407c84:	mov    ecx,0x5ebe002e
  407c89:	test   BYTE PTR [edi-0x68],bh
  407c8c:	lahf   
  407c8d:	cdq    
  407c8e:	jecxz  0x407d0c
  407c90:	lea    ebx,[eax+0x264c3dd9]
  407c96:	add    al,0x4
  407c98:	mov    ah,0x55
  407c9a:	test   edi,0xf67a630
  407ca0:	pusha  
  407ca1:	or     eax,0x6d64bff5
  407ca6:	gs inc esi
  407ca8:	pop    es
  407ca9:	push   0x80a49116
  407cae:	jge    0x407c98
  407cb0:	jp     0x407d26
  407cb2:	sbb    eax,0x9a445397
  407cb7:	mov    edi,0x63f9595
  407cbc:	xor    eax,0x574a1017
  407cc1:	cmp    BYTE PTR [ecx-0x70],bh
  407cc4:	retf   0x754a
  407cc7:	dec    eax
  407cc8:	cwde   
  407cc9:	add    DWORD PTR [esi],eax
  407ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ccc:	mov    dh,bl
  407cce:	jo     0x407d40
  407cd0:	sub    ebx,DWORD PTR [edi+ebp*1-0x1c]
  407cd4:	shl    DWORD PTR [ebx],1
  407cd6:	add    esi,DWORD PTR [ecx]
  407cd8:	add    al,0x1e
  407cda:	out    0x35,al
  407cdc:	js     0x407ca5
  407cde:	sbb    eax,0x20b9a970
  407ce3:	jno    0x407cfa
  407ce5:	mov    ecx,0xc51f5877
  407cea:	cs icebp 
  407cec:	push   0xf087307c
  407cf1:	adc    esp,DWORD PTR [ebx+edx*2+0x2d]
  407cf5:	inc    esi
  407cf6:	out    0xc5,eax
  407cf8:	adc    BYTE PTR [esi+eiz*2],cl
  407cfb:	cs sti 
  407cfd:	mov    al,ds:0xa20b0933
  407d02:	mov    dl,0x3e
  407d04:	jl     0x407cef
  407d06:	repnz pop ebp
  407d08:	dec    ecx
  407d09:	jecxz  0x407cfc
  407d0b:	stc    
  407d0c:	dec    edi
  407d0d:	icebp  
  407d0e:	int3   
  407d0f:	pop    eax
  407d10:	popf   
  407d11:	adc    al,0x4d
  407d13:	shl    DWORD PTR [ebx],0x96
  407d16:	gs das 
  407d18:	push   si
  407d1a:	push   0x858b5be8
  407d1f:	(bad)  
  407d20:	pop    esi
  407d21:	sub    ebx,DWORD PTR [ecx]
  407d23:	cmp    DWORD PTR [ebx+0xe803976],0xfffffffc
  407d2a:	pop    edx
  407d2b:	test   al,0x4c
  407d2d:	ja     0x407d55
  407d2f:	(bad)  
  407d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d31:	sub    BYTE PTR [ebx-0x6],dh
  407d34:	aas    
  407d35:	enter  0x3e41,0xf1
  407d39:	sub    ah,cl
  407d3b:	fsub   QWORD PTR [eax+0x36]
  407d3e:	fidivr WORD PTR [esi]
  407d40:	loopne 0x407db7
  407d42:	sub    DWORD PTR [ecx+0x1c23d9b],esi
  407d48:	cmp    eax,0xde635319
  407d4d:	shr    DWORD PTR [eax-0x3137878],1
  407d53:	xchg   edi,eax
  407d54:	sar    DWORD PTR [ebp+0x8],0x46
  407d58:	pop    ds
  407d59:	push   eax
  407d5a:	aaa    
  407d5b:	jnp    0x407d63
  407d5d:	jae    0x407d9f
  407d5f:	rcr    BYTE PTR [ecx+0xb227a47],cl
  407d65:	repnz inc eax
  407d67:	pop    edi
  407d68:	mov    cl,0xab
  407d6a:	mov    ds:0x6b338a17,eax
  407d6f:	aad    0xb8
  407d71:	sbb    ecx,esi
  407d73:	jg     0x407d01
  407d75:	ds ret 
  407d77:	add    BYTE PTR [ecx+0x69],bh
  407d7a:	out    dx,al
  407d7b:	in     eax,dx
  407d7c:	inc    ebx
  407d7d:	aad    0xd6
  407d7f:	mov    ebx,0x6a7972de
  407d84:	sbb    ecx,esi
  407d86:	pop    ds
  407d87:	ins    BYTE PTR es:[edi],dx
  407d88:	push   edi
  407d89:	scas   eax,DWORD PTR es:[edi]
  407d8a:	sahf   
  407d8b:	sub    BYTE PTR [edx+0x44e83cf0],ch
  407d91:	icebp  
  407d92:	int    0x60
  407d94:	out    dx,al
  407d95:	rol    BYTE PTR [edi],cl
  407d97:	mov    dl,al
  407d99:	and    al,0x82
  407d9b:	mov    edx,0x4af2945e
  407da0:	or     al,0xce
  407da2:	xor    DWORD PTR [eax-0x72],ebx
  407da5:	outs   dx,DWORD PTR ds:[esi]
  407da6:	lea    ebp,[edx]
  407da8:	addr16 rol ebx,cl
  407dab:	and    DWORD PTR [ebx-0x4d],eax
  407dae:	adc    al,0x5
  407db0:	dec    ebx
  407db1:	fs inc esp
  407db3:	dec    edi
  407db4:	fisttp WORD PTR [ecx-0x57]
  407db7:	mov    ds:0x850fd03b,al
  407dbc:	mov    dl,0xf9
  407dbe:	(bad)  
  407dbf:	call   FWORD PTR [edi+0x5b]
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fmul   st,st(7)
  407dda:	inc    edi
  407ddb:	pop    ecx
  407ddc:	hlt    
  407ddd:	mov    al,bl
  407ddf:	js     0x407e59
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407ddf
  407de6:	xchg   esp,eax
  407de7:	pop    eax
  407de8:	xor    ch,dl
  407dea:	(bad)  
  407deb:	das    
  407dec:	mov    ebp,0xb615d2bf
  407df1:	jle    0x407e43
  407df3:	add    al,0x6e
  407df5:	add    BYTE PTR [eax+ebp*2+0x17],al
  407df9:	inc    esi
  407dfa:	jb     0x407dbf
  407dfc:	pop    es
  407dfd:	out    dx,eax
  407dfe:	(bad)  
  407e00:	lods   eax,DWORD PTR ds:[esi]
  407e01:	inc    ebx
  407e02:	call   0x85a5:0x60e78c3b
  407e09:	test   al,0x53
  407e0b:	xchg   ebp,eax
  407e0c:	sbb    BYTE PTR [ebx+0x3c52cbf],0x97
  407e13:	fs or  al,0xac
  407e16:	jge    0x407e56
  407e18:	lahf   
  407e19:	ret    0x4edb
  407e1c:	les    eax,FWORD PTR [edx+0x2f]
  407e1f:	ror    BYTE PTR [edi+0x2f],1
  407e22:	inc    eax
  407e23:	js     0x407de8
  407e25:	adc    dl,BYTE PTR [esi+ebx*8-0x7b]
  407e29:	cmp    ecx,DWORD PTR [edx+0x65]
  407e2c:	cli    
  407e2d:	cli    
  407e2e:	rcr    ch,0xe5
  407e31:	(bad)  
  407e32:	xchg   ebx,eax
  407e33:	mov    dh,0x92
  407e35:	mov    edi,0x33ad6d7f
  407e3a:	test   BYTE PTR [edx-0x5d],cl
  407e3d:	data16 cmc 
  407e3f:	push   ebp
  407e40:	and    esi,DWORD PTR [ebx-0x20]
  407e43:	push   ecx
  407e44:	cli    
  407e45:	ret    0x786d
  407e48:	cwde   
  407e49:	popa   
  407e4a:	jecxz  0x407e84
  407e4c:	(bad)
  407e4f:	ret    0x238c
  407e52:	(bad)  
  407e53:	ror    BYTE PTR [ebp+0x1cb2d4e1],1
  407e59:	and    dl,bh
  407e5b:	cmp    ebx,edx
  407e5d:	arpl   WORD PTR [ebx],dx
  407e5f:	shl    BYTE PTR [esi+ebx*1+0x44],1
  407e63:	lock or ch,BYTE PTR [eax-0x7d]
  407e67:	or     al,bh
  407e69:	mov    bl,BYTE PTR [edi+edi*8]
  407e6c:	pop    edi
  407e6d:	jmp    0x3d7a9e50
  407e72:	jp     0x407e6d
  407e74:	fisub  WORD PTR [edi+0x575b9709]
  407e7a:	adc    BYTE PTR [eax],dh
  407e7c:	aaa    
  407e7d:	inc    ebp
  407e7e:	jo     0x407efa
  407e80:	push   ds
  407e81:	aas    
  407e82:	push   ebx
  407e83:	ins    DWORD PTR es:[edi],dx
  407e84:	pop    esp
  407e85:	mov    DWORD PTR [ecx+0x36],edx
  407e88:	xor    al,0x28
  407e8a:	int    0x30
  407e8c:	sbb    ebp,edi
  407e8e:	rcr    DWORD PTR [esi-0x36],cl
  407e91:	(bad)  
  407e92:	or     eax,0xadc3fb89
  407e97:	or     cl,BYTE PTR [ebp+0x5f]
  407e9a:	add    eax,DWORD PTR [edi+0x251bc6b1]
  407ea0:	add    BYTE PTR [esi],dh
  407ea2:	sahf   
  407ea3:	(bad)  
  407ea5:	test   al,0xc6
  407ea7:	ins    DWORD PTR es:[edi],dx
  407ea8:	neg    bh
  407eaa:	popa   
  407eab:	jnp    0x407eb8
  407ead:	pop    ds
  407eae:	push   ss
  407eaf:	pop    ds
  407eb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb1:	mov    esp,0x69b60b0
  407eb6:	adc    ebp,edi
  407eb8:	(bad)  
  407eb9:	pop    ebp
  407eba:	sbb    dl,BYTE PTR ds:0x76ae1cad
  407ec0:	adc    ebp,ebp
  407ec2:	mov    ebx,0xfe968dc8
  407ec7:	cmp    cl,ah
  407ec9:	jae    0x407f1d
  407ecb:	outs   dx,DWORD PTR ds:[esi]
  407ecc:	sbb    ah,bh
  407ece:	aas    
  407ecf:	xchg   edx,eax
  407ed0:	mov    ebp,0xa1c9e994
  407ed5:	add    BYTE PTR [eax],ch
  407ed7:	xchg   ebx,eax
  407ed8:	adc    eax,0x6b9be7cf
  407edd:	or     eax,DWORD PTR [ecx-0x34]
  407ee0:	sbb    BYTE PTR [edi+0x3f7942e],0x45
  407ee7:	cld    
  407ee8:	(bad)  
  407ee9:	xchg   esp,eax
  407eea:	fstp   TBYTE PTR [ebp-0xbc1c136]
  407ef0:	cdq    
  407ef1:	pop    esp
  407ef2:	sub    DWORD PTR [esi-0x387dfe9a],esp
  407ef8:	sub    al,0x7c
  407efa:	sahf   
  407efb:	jne    0x407eec
  407efd:	int3   
  407efe:	into   
  407eff:	and    bh,0xe7
  407f02:	sahf   
  407f03:	xchg   DWORD PTR [edi-0x38fec5a6],esp
  407f09:	mov    ebp,ebx
  407f0b:	cmc    
  407f0c:	fistp  DWORD PTR [eax+0x57]
  407f0f:	add    DWORD PTR [esi],edx
  407f11:	enter  0x7aae,0x8c
  407f15:	jne    0x407ed8
  407f17:	cdq    
  407f18:	mov    ah,0x2d
  407f1a:	call   0x241ae298
  407f1f:	xchg   edi,eax
  407f20:	dec    DWORD PTR [ebx-0x4acf0d4]
  407f26:	add    al,0x1b
  407f28:	fstp   DWORD PTR [ebp+0x17ec9317]
  407f2e:	lahf   
  407f2f:	mov    DWORD PTR [ebp-0x7bff5cff],0xa58f10ae
  407f39:	mov    edi,0x77e0c23a
  407f3e:	push   ecx
  407f3f:	push   ebp
  407f40:	in     eax,dx
  407f41:	mov    edi,0x6188b5ff
  407f46:	retf   0x73e0
  407f49:	in     eax,dx
  407f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f4b:	in     al,0x62
  407f4d:	push   ds
  407f4e:	out    dx,eax
  407f4f:	mov    ds:0xdd8574fc,al
  407f54:	xlat   BYTE PTR ds:[ebx]
  407f55:	in     al,0xab
  407f57:	lods   al,BYTE PTR ds:[esi]
  407f58:	aad    0xac
  407f5a:	call   0xda5b0b45
  407f5f:	aam    0x95
  407f61:	push   eax
  407f62:	fwait
  407f63:	mov    eax,0x20238aa5
  407f68:	push   esp
  407f69:	out    dx,eax
  407f6a:	in     al,0x0
  407f6c:	push   0x1b89ef45
  407f71:	sub    ch,dl
  407f73:	in     eax,0xef
  407f75:	aad    0xc6
  407f77:	pop    ebx
  407f78:	test   al,0xb1
  407f7a:	sub    al,BYTE PTR [ebx-0x179a6cb9]
  407f80:	leave  
  407f81:	outs   dx,BYTE PTR ds:[esi]
  407f82:	jo     0x407fe7
  407f84:	dec    ecx
  407f85:	test   esp,ebp
  407f87:	pop    ebx
  407f88:	addr16 int3 
  407f8a:	jmp    0x1294d6e6
  407f8f:	(bad)  
  407f90:	xlat   BYTE PTR ds:[ebx]
  407f91:	push   ecx
  407f92:	loop   0x407f86
  407f94:	xor    edi,DWORD PTR [edi+edx*4-0x1d]
  407f98:	push   ds
  407f99:	mov    esp,DWORD PTR [ebx-0x63110349]
  407f9f:	out    0x73,al
  407fa1:	dec    esi
  407fa2:	or     bh,BYTE PTR [ebp+0x54be7b1b]
  407fa8:	cmp    al,0x1f
  407faa:	add    ch,BYTE PTR [esi]
  407fac:	dec    ecx
  407fad:	mov    ch,0xda
  407faf:	enter  0xcf0b,0x34
  407fb3:	into   
  407fb4:	imul   eax,DWORD PTR [edx-0x66919713],0xffffffd2
  407fbb:	ss dec esi
  407fbd:	mov    dl,0x10
  407fbf:	mov    ebp,0xc703c120
  407fc4:	pop    ds
  407fc5:	std    
  407fc6:	or     BYTE PTR [ebp-0x7a],al
  407fc9:	and    eax,0x55691c75
  407fce:	pop    eax
  407fcf:	and    DWORD PTR [edi+0x13],esp
  407fd2:	inc    ebx
  407fd3:	adc    al,0x79
  407fd5:	push   edx
  407fd6:	push   esp
  407fd7:	lds    edx,FWORD PTR [ecx+0x65e2cfb]
  407fdd:	add    al,0xd2
  407fdf:	enter  0xc898,0xa6
  407fe3:	jns    0x408014
  407fe5:	lahf   
  407fe6:	push   edi
  407fe7:	dec    ebp
  407fe8:	mov    ebx,0x459a1601
  407fed:	and    al,0x42
  407fef:	pop    edi
  407ff0:	scas   eax,DWORD PTR es:[edi]
  407ff1:	cmc    
  407ff2:	test   DWORD PTR [ebx],edx
  407ff4:	out    dx,al
  407ff5:	cmp    eax,0x1a4a85c6
  407ffa:	sub    al,0xd9
  407ffc:	add    eax,0x3cd7ce7c
  408001:	mov    ah,0x7b
  408003:	sub    DWORD PTR [eax-0x5c9fd991],edx
  408009:	mov    al,ds:0xa037060d
  40800e:	mov    bh,0x9f
  408010:	mov    al,ds:0xd22a883a
  408015:	inc    esi
  408016:	fmul   DWORD PTR [esi+0x38367777]
  40801c:	neg    BYTE PTR ds:0x73768656
  408022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408023:	sahf   
  408024:	test   al,0x72
  408026:	mov    al,0x6c
  408028:	xor    al,0xfb
  40802a:	or     BYTE PTR [ebp+0x50aaaa17],ch
  408030:	mov    esp,0x7b1e0b00
  408035:	(bad)  
  408036:	mul    ecx
  408038:	push   ss
  408039:	(bad)  
  40803a:	or     BYTE PTR gs:[ebp-0x4978fba5],0xd5
  408042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408043:	mov    ch,0x10
  408045:	adc    eax,0x8c21253e
  40804a:	or     al,0xdc
  40804c:	jg     0x407fe9
  40804e:	inc    ecx
  40804f:	xchg   DWORD PTR [esi-0x2dddf12],esp
  408055:	cmp    edx,DWORD PTR [eax-0x15]
  408058:	ret    
  408059:	push   esi
  40805a:	xchg   BYTE PTR [esi],dl
  40805c:	ja     0x408007
  40805e:	xlat   BYTE PTR ds:[ebx]
  40805f:	push   eax
  408060:	(bad)  
  408061:	fistp  WORD PTR [ebx+0x42545542]
  408067:	neg    DWORD PTR [edi+0x6051c52f]
  40806d:	fs mov dl,0xec
  408070:	ds pop ss
  408072:	sbb    al,0x35
  408074:	stos   BYTE PTR es:[edi],al
  408075:	mov    eax,0x6d30858b
  40807a:	sti    
  40807b:	(bad)  
  40807c:	sub    ebx,DWORD PTR [ecx+eiz*2-0x47]
  408080:	and    eax,0xd1ad7ecf
  408085:	mov    dh,0x94
  408087:	retf   0xf395
  40808a:	imul   BYTE PTR [ebp+0x612239b5]
  408090:	xchg   edi,eax
  408091:	mov    ds:0x26907f26,al
  408096:	jmp    0x51b2:0xbb5dd1eb
  40809d:	jmp    0xf5cd:0xc0b7711f
  4080a4:	ret    
  4080a5:	fistp  QWORD PTR [edi+0x19]
  4080a8:	jo     0x408086
  4080aa:	pop    ebx
  4080ab:	push   esi
  4080ac:	addr16 je 0x4080aa
  4080af:	push   ds
  4080b0:	ja     0x40803f
  4080b2:	cdq    
  4080b3:	sbb    al,0xa2
  4080b5:	jge    0x4080af
  4080b7:	push   esi
  4080b8:	or     al,0x4e
  4080ba:	sub    DWORD PTR [ebx+0x71],ebp
  4080bd:	imul   edi,DWORD PTR [edi+0x52],0x6e
  4080c1:	sub    dl,ch
  4080c3:	mov    ecx,0xb108781b
  4080c8:	dec    esi
  4080c9:	pop    esi
  4080ca:	mov    ds:0x154e1097,al
  4080cf:	push   esp
  4080d0:	mov    ah,0x33
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x66862075],eax
  4080f8:	cmp    esi,esp
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x4080a1
  408102:	xchg   ecx,eax
  408103:	inc    esi
  408104:	fild   DWORD PTR [edx+0x7a21102a]
  40810b:	adc    DWORD PTR [edi-0x6b],0x52f93bf2
  408112:	jb     0x408180
  408114:	sbb    ah,al
  408116:	cs cdq 
  408118:	push   eax
  408119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40811a:	shl    DWORD PTR [eax-0x3acc34bc],cl
  408120:	pop    esi
  408121:	push   ebx
  408122:	adc    al,0x91
  408124:	lea    edi,[eax-0x48]
  408127:	xchg   BYTE PTR [edx-0x3846092],ah
  40812d:	xchg   ebx,eax
  40812e:	pop    ebx
  40812f:	(bad)  
  408130:	adc    BYTE PTR [edx],dl
  408132:	ja     0x408174
  408134:	jl     0x4080f6
  408136:	xchg   ebx,eax
  408137:	cmp    eax,ebp
  408139:	mov    ss,ebx
  40813b:	sub    cl,BYTE PTR ds:0x8423c03f
  408141:	popf   
  408142:	out    dx,eax
  408143:	test   BYTE PTR [esi-0x64ec1a7a],bh
  408149:	jae    0x408189
  40814b:	mov    ch,0xc5
  40814d:	mov    esi,0x444c2512
  408152:	test   DWORD PTR [eax],0xd72f3611
  408158:	cmp    BYTE PTR [ebx+0x142efc48],ah
  40815e:	jno    0x40819d
  408160:	(bad)  
  408161:	xchg   edi,eax
  408162:	jecxz  0x40813c
  408164:	xchg   ecx,eax
  408165:	mov    dl,BYTE PTR [edx]
  408167:	mov    gs,ebx
  408169:	cdq    
  40816a:	pushf  
  40816b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40816c:	out    dx,al
  40816d:	sub    al,0x58
  40816f:	call   0xcd9a06d1
  408174:	push   edx
  408175:	icebp  
  408176:	pop    esp
  408177:	clc    
  408178:	pop    ds
  408179:	push   esi
  40817a:	add    al,0xcc
  40817c:	popf   
  40817d:	sar    BYTE PTR [edx-0x54e314cc],0x85
  408184:	sbb    al,0x23
  408186:	add    eax,ebp
  408188:	mov    al,ds:0xeaef83c
  40818d:	leave  
  40818e:	daa    
  40818f:	nop
  408190:	or     ebp,DWORD PTR [ebx+edx*2+0x6a0ea3c1]
  408197:	pop    ebp
  408198:	jno    0x4081e9
  40819a:	ficomp WORD PTR ds:0xaaf3ee38
  4081a0:	xchg   edx,eax
  4081a1:	sub    al,0xdf
  4081a3:	pop    ss
  4081a4:	iret   
  4081a5:	cmp    cl,BYTE PTR [edi]
  4081a7:	lock jecxz 0x40821d
  4081aa:	adc    DWORD PTR [esi],edi
  4081ac:	sti    
  4081ad:	popa   
  4081ae:	clc    
  4081af:	jb     0x408215
  4081b1:	fld    DWORD PTR [edx-0x8]
  4081b4:	add    eax,DWORD PTR [edx-0x7e]
  4081b7:	or     eax,0xe03b7ebe
  4081bc:	rol    BYTE PTR ds:0x89edfe3f,0x65
  4081c3:	jno    0x4081e3
  4081c5:	hlt    
  4081c6:	cld    
  4081c7:	ja     0x4081b7
  4081c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ca:	fld    QWORD PTR [eax-0x465f4e39]
  4081d0:	push   ds
  4081d1:	out    dx,eax
  4081d2:	push   cs
  4081d3:	jle    0x408188
  4081d5:	cmp    BYTE PTR [eax],dl
  4081d7:	daa    
  4081d8:	test   BYTE PTR [ebx-0x7350103a],bl
  4081de:	pop    ss
  4081df:	adc    DWORD PTR [edi-0x7f],esi
  4081e2:	pop    es
  4081e3:	lea    edi,[eax+0x1f]
  4081e6:	push   ss
  4081e7:	push   edi
  4081e8:	dec    edx
  4081e9:	std    
  4081ea:	mov    ds:0xd65217d2,al
  4081ef:	ja     0x4081d0
  4081f1:	int3   
  4081f2:	nop
  4081f3:	xchg   edi,eax
  4081f4:	int3   
  4081f5:	(bad)  
  4081f7:	mov    BYTE PTR [edi-0x70170558],bl
  4081fd:	dec    esi
  4081fe:	ss enter 0xd2f7,0x39
  408203:	ja     0x4081ae
  408205:	jae    0x4081b3
  408207:	sub    eax,0x89be59a6
  40820c:	ins    DWORD PTR es:[edi],dx
  40820d:	mov    ecx,0x68b4dad3
  408212:	xchg   ecx,eax
  408213:	add    dl,0x9b
  408216:	call   0x18a7:0xa64bceb6
  40821d:	jb     0x40825d
  40821f:	in     eax,0xbf
  408221:	and    al,0xce
  408223:	les    esi,FWORD PTR [eax]
  408225:	jmp    0xf893991b
  40822a:	and    DWORD PTR ds:0x4ae1474f,edi
  408230:	sbb    al,0x85
  408232:	pusha  
  408233:	popa   
  408234:	mov    ebx,0xb7318401
  408239:	and    eax,0x9f241df4
  40823e:	pop    ds
  40823f:	stc    
  408240:	cli    
  408241:	mov    dh,0x17
  408243:	clc    
  408244:	cmp    al,0xb4
  408246:	fwait
  408247:	xchg   ebx,eax
  408248:	loop   0x408282
  40824a:	jp     0x408289
  40824c:	push   0x2c
  40824e:	inc    esp
  40824f:	icebp  
  408250:	add    eax,0x3f3cd279
  408255:	repz jg 0x408202
  408258:	jnp    0x4081ea
  40825a:	shrd   DWORD PTR [ecx],esi,cl
  40825d:	jg     0x40820b
  40825f:	xchg   BYTE PTR [edx-0x7404d867],bh
  408265:	or     ebp,eax
  408267:	lock loope 0x4082a1
  40826a:	dec    edi
  40826b:	inc    edx
  40826c:	sahf   
  40826d:	ds dec eax
  40826f:	adc    al,0x43
  408271:	fsubr  st(6),st
  408273:	subps  xmm6,xmm6
  408276:	pop    es
  408277:	ins    DWORD PTR es:[edi],dx
  408278:	or     DWORD PTR [esi-0x42],edx
  40827b:	or     edi,DWORD PTR [ecx-0x536f33e7]
  408281:	pop    esp
  408282:	ret    0xd9fb
  408285:	add    edi,DWORD PTR [ebx-0x27]
  408288:	aam    0xc2
  40828a:	aas    
  40828b:	or     eax,0x5d777766
  408290:	jge    0x4082c4
  408292:	jg     0x4082b4
  408294:	repz adc dl,al
  408297:	jle    0x40830e
  408299:	inc    ebx
  40829a:	push   ebp
  40829b:	out    dx,al
  40829c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40829d:	jecxz  0x408234
  40829f:	pop    edx
  4082a0:	ret    
  4082a1:	add    eax,0xa4f02b0c
  4082a6:	pop    ss
  4082a7:	dec    ecx
  4082a8:	push   esi
  4082a9:	lea    ecx,[ecx]
  4082ab:	or     DWORD PTR [edx+0x2d],esi
  4082ae:	lock sar BYTE PTR [edx-0x6c346a46],1
  4082b5:	mov    eax,0xad2c0d26
  4082ba:	inc    edi
  4082bb:	jmp    0x19e6fe46
  4082c0:	add    DWORD PTR [esi-0x15],edx
  4082c3:	rcl    BYTE PTR [edi+ebp*4+0x264cd0f6],0x5a
  4082cb:	adc    al,0x3f
  4082cd:	mov    ss,WORD PTR [edx+ebx*2-0x4b]
  4082d1:	xor    ch,ch
  4082d3:	in     eax,0xe2
  4082d5:	pop    ebp
  4082d6:	pop    ecx
  4082d7:	aaa    
  4082d8:	mov    WORD PTR [eax],?
  4082da:	enter  0x76d6,0x94
  4082de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082df:	aas    
  4082e0:	fimul  WORD PTR [esi+ebp*1-0x10a1f77d]
  4082e7:	lods   al,BYTE PTR ds:[esi]
  4082e8:	retf   
  4082e9:	psubusb mm3,QWORD PTR [ecx-0x4]
  4082ed:	mov    esp,0x193e24c7
  4082f2:	ins    DWORD PTR es:[edi],dx
  4082f3:	test   al,0xd5
  4082f5:	sub    edx,DWORD PTR [eax]
  4082f7:	push   0x9d42ee4c
  4082fc:	jns    0x4082a9
  4082fe:	cld    
  4082ff:	retf   0x142a
  408302:	imul   ebp,DWORD PTR [ecx*8+0x32cbf818],0xffffffb7
  40830a:	cmp    esp,DWORD PTR [ecx]
  40830c:	stos   BYTE PTR es:[edi],al
  40830d:	pop    edi
  40830e:	(bad)  
  40830f:	pop    ss
  408310:	push   ecx
  408311:	fwait
  408312:	pop    es
  408313:	sahf   
  408314:	(bad)  
  408315:	xchg   ecx,eax
  408316:	mov    edi,0xa02ab3f
  40831b:	add    ah,BYTE PTR [esi]
  40831d:	rcr    bl,0x11
  408320:	addr16 push edx
  408322:	stos   DWORD PTR es:[edi],eax
  408323:	or     al,0x25
  408325:	push   eax
  408326:	(bad)  
  408327:	out    dx,eax
  408328:	andps  xmm4,XMMWORD PTR ds:0x56831146
  40832f:	out    0x24,al
  408331:	mov    bh,0xdc
  408333:	or     eax,0xfb4b098e
  408338:	add    dh,dl
  40833a:	pop    esi
  40833b:	push   edx
  40833c:	jno    0x4082fb
  40833e:	jb     0x40832d
  408340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408341:	adc    dh,dl
  408343:	test   al,0xea
  408346:	das    
  408347:	cmp    al,al
  408349:	dec    edx
  40834a:	sub    ebp,ebx
  40834c:	mov    ds,WORD PTR [esp+eax*4]
  40834f:	out    dx,eax
  408350:	mov    eax,ds:0x84caff6a
  408355:	pusha  
  408356:	inc    ebp
  408357:	js     0x4082de
  408359:	or     ah,BYTE PTR [eax-0x39]
  40835c:	add    ah,BYTE PTR [ebx]
  40835e:	mov    cl,0xe7
  408360:	jbe    0x4083d4
  408362:	push   edi
  408363:	sub    bl,BYTE PTR [edi+ebx*8-0x72490755]
  40836a:	or     DWORD PTR [esi+eax*8],0x4a
  40836e:	jmp    0x408385
  408370:	push   ss
  408371:	mov    ebp,0x550fc7c3
  408376:	lock add DWORD PTR [ebx-0x724d5d5a],edi
  40837d:	sub    al,0xa2
  40837f:	into   
  408380:	lds    ecx,FWORD PTR [edx-0x2d7edb2f]
  408386:	into   
  408387:	addr16 in al,0x60
  40838a:	popf   
  40838b:	pop    esp
  40838c:	and    DWORD PTR [ebx],esp
  40838e:	clc    
  40838f:	xlat   BYTE PTR ds:[ebx]
  408390:	add    DWORD PTR [eax],esp
  408392:	jae    0x408326
  408394:	sbb    eax,0x8b9d5687
  408399:	dec    ecx
  40839a:	add    eax,0x21faaf9c
  40839f:	mov    edi,0x195eb008
  4083a4:	je     0x408341
  4083a6:	sahf   
  4083a7:	mov    esi,0x71ef6161
  4083ac:	hlt    
  4083ad:	adc    eax,0x7012e6a2
  4083b2:	cs dec esp
  4083b4:	test   al,0x52
  4083b6:	daa    
  4083b7:	adc    BYTE PTR [ecx],bl
  4083b9:	xchg   BYTE PTR [esi],ah
  4083bb:	ins    DWORD PTR es:[edi],dx
  4083bc:	fcom   DWORD PTR [esi+edx*2]
  4083bf:	or     al,0x11
  4083c1:	aaa    
  4083c2:	cmp    DWORD PTR [ebp+eiz*2+0x56],edi
  4083c6:	jno    0x408351
  4083c8:	int    0x6b
  4083ca:	mov    eax,0x7c8a95ee
  4083cf:	or     DWORD PTR [ecx-0x142099c4],0xffffffd3
  4083d6:	push   0x9c0b080a
  4083db:	or     BYTE PTR [ecx-0x78d51d20],0xcc
  4083e2:	sub    ch,cl
  4083e4:	cmp    al,0xc0
  4083e6:	push   ebp
  4083e7:	jo     0x408398
  4083e9:	or     BYTE PTR [edx],0x71
  4083ec:	inc    esi
  4083ed:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0xca45b6b],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x4083fb
  408448:	in     eax,0x31
  40844a:	enter  0xad22,0x22
  40844e:	sub    al,0x7a
  408450:	push   cs
  408451:	outs   dx,DWORD PTR ds:[esi]
  408452:	(bad)  [edi+0xc]
  408455:	stos   DWORD PTR es:[edi],eax
  408456:	punpckhwd mm2,QWORD PTR [edi]
  408459:	loope  0x408467
  40845b:	nop
  40845c:	xchg   edx,eax
  40845d:	scas   eax,DWORD PTR es:[edi]
  40845e:	xor    BYTE PTR [edx+ecx*4],0x52
  408462:	push   ebp
  408463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408464:	retf   
  408465:	mov    ah,0xef
  408467:	jnp    0x4084d3
  408469:	(bad)  
  40846a:	neg    DWORD PTR [esi-0x55]
  40846d:	int3   
  40846e:	pop    eax
  40846f:	jne    0x408443
  408471:	fldcw  WORD PTR [ebx]
  408473:	add    eax,0x90bf4411
  408478:	xlat   BYTE PTR ds:[ebx]
  408479:	mov    ch,BYTE PTR [edx+0x5f]
  40847c:	ja     0x4084a9
  40847e:	mov    al,ds:0x5a0cd9ec
  408483:	jmp    0x3774:0x86c5602b
  40848a:	mov    esi,0x4794263e
  40848f:	data16 and al,0x7f
  408492:	add    al,0x92
  408494:	push   cs
  408495:	jl     0x408463
  408497:	jl     0x40850a
  408499:	push   0xffffffb6
  40849b:	xor    BYTE PTR [ebp+0xbd22d5d],ah
  4084a1:	mov    eax,ds:0x212c91c6
  4084a6:	add    DWORD PTR [esi+0x38],ebx
  4084a9:	cmp    bl,BYTE PTR [esi-0x3597f7a4]
  4084af:	inc    eax
  4084b0:	xor    dl,BYTE PTR [edi-0xf386778]
  4084b6:	xchg   esp,eax
  4084b7:	push   edi
  4084b8:	and    BYTE PTR [eax-0x294c21d2],0x73
  4084bf:	lds    esi,FWORD PTR ds:0x9b4ffe88
  4084c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084c6:	inc    edx
  4084c7:	xchg   edi,eax
  4084c8:	xchg   ebp,eax
  4084c9:	inc    edi
  4084ca:	xchg   ebp,eax
  4084cb:	jmp    0x44ea:0x169521cb
  4084d2:	ficom  DWORD PTR [ecx]
  4084d4:	nop
  4084d5:	pop    ebx
  4084d6:	mov    ecx,0x3063efe1
  4084db:	(bad)  
  4084dd:	ins    DWORD PTR es:[edi],dx
  4084de:	pop    edi
  4084df:	mov    ch,0x6b
  4084e1:	push   es
  4084e2:	nop
  4084e3:	(bad)  
  4084e5:	std    
  4084e6:	(bad)  
  4084e7:	stos   BYTE PTR es:[edi],al
  4084e8:	in     eax,dx
  4084e9:	jns    0x408534
  4084eb:	test   BYTE PTR [ebx-0x1c],dh
  4084ee:	dec    esi
  4084ef:	sar    BYTE PTR [eax],0xc2
  4084f2:	aas    
  4084f3:	aad    0xbf
  4084f5:	jmp    0xdaf8:0xb43f1d81
  4084fc:	xchg   esi,eax
  4084fd:	imul   ebp,edi,0x63
  408500:	mov    ebx,eax
  408502:	and    BYTE PTR [esi+0x60],ch
  408505:	sbb    ebx,edi
  408507:	cs push ebx
  408509:	push   es
  40850a:	mov    bh,0xff
  40850c:	popf   
  40850d:	sub    BYTE PTR [ecx+0x237c72eb],0x26
  408514:	jns    0x40852f
  408516:	ret    0x6779
  408519:	(bad)  
  40851a:	lahf   
  40851b:	xchg   edx,eax
  40851c:	sbb    al,0x5b
  40851e:	shl    DWORD PTR [ecx+eiz*1+0x7bb3021a],0x2a
  408526:	push   0xb985286c
  40852b:	outs   dx,BYTE PTR ds:[esi]
  40852c:	xchg   ebp,eax
  40852d:	push   esi
  40852e:	xchg   dh,dl
  408530:	and    BYTE PTR [ebx-0x4aa1c0b7],ah
  408536:	pop    ecx
  408537:	push   eax
  408538:	sar    BYTE PTR [ecx-0x3a],0x5
  40853c:	xchg   edx,eax
  40853d:	jecxz  0x4084d5
  40853f:	push   ds
  408540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408541:	mov    DWORD PTR [esp+esi*2-0x527a0b5c],esi
  408548:	mov    al,BYTE PTR [ebp-0x5bf03f64]
  40854e:	cmp    esp,edi
  408550:	mov    esi,0x6528af9d
  408555:	add    eax,0x7d46df47
  40855a:	push   ecx
  40855b:	ror    DWORD PTR [esp+ebx*8],1
  40855e:	clc    
  40855f:	add    eax,0x3f61132d
  408564:	add    al,0x39
  408566:	sub    al,0xe6
  408568:	sub    al,0x93
  40856a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40856b:	inc    ebx
  40856c:	mov    ebx,DWORD PTR [edi+ebp*8-0x689f7c48]
  408573:	imul   esi,DWORD PTR [eax*8-0x708fd663],0xffffffd4
  40857b:	clc    
  40857c:	call   0xff71:0x69aebbf4
  408583:	cmp    ecx,DWORD PTR [eax+0x1f97fc38]
  408589:	bound  ecx,QWORD PTR [esi]
  40858b:	mov    edi,0x8aab4aa1
  408590:	dec    esp
  408591:	mov    ecx,0x511c21b4
  408596:	xchg   esp,eax
  408597:	mov    cl,0xdb
  408599:	clc    
  40859a:	(bad)  
  40859c:	xchg   ebx,eax
  40859d:	xor    al,0xd7
  40859f:	mov    al,ds:0xef10a614
  4085a4:	out    dx,al
  4085a5:	sti    
  4085a6:	(bad)  
  4085a7:	mov    eax,ds:0xbf866727
  4085ac:	ds jle 0x4085d6
  4085af:	gs pop esi
  4085b1:	repz push esi
  4085b3:	and    DWORD PTR [esi+0x6d71eb37],edx
  4085b9:	shl    BYTE PTR [eax],cl
  4085bb:	mov    ah,0x6d
  4085bd:	shr    edi,cl
  4085bf:	gs je  0x40858f
  4085c2:	lds    edi,FWORD PTR [eax+0x3aee00ba]
  4085c8:	lds    ebx,FWORD PTR [edx+0x79]
  4085cb:	and    ah,cl
  4085cd:	push   eax
  4085ce:	sub    BYTE PTR [esi+edx*1-0x74],ah
  4085d2:	icebp  
  4085d3:	js     0x40864f
  4085d5:	fidiv  DWORD PTR [ebp-0x64]
  4085d8:	mov    eax,ds:0x71949ebd
  4085dd:	out    0xbb,al
  4085df:	lods   eax,DWORD PTR ds:[esi]
  4085e0:	clc    
  4085e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085e2:	add    BYTE PTR [ecx-0x6249fa97],dh
  4085e8:	lods   al,BYTE PTR ds:[esi]
  4085e9:	shr    BYTE PTR ds:0xcef2b011,1
  4085ef:	in     eax,0xd0
  4085f1:	sbb    al,0xef
  4085f3:	test   al,0xc2
  4085f5:	jg     0x408631
  4085f7:	and    al,0xb
  4085f9:	(bad)  
  4085fa:	mov    ah,0xbd
  4085fc:	imul   ebx,DWORD PTR ss:[edi+0x4a],0x1c
  408601:	gs jg  0x408630
  408604:	pop    ds
  408605:	and    al,0xf3
  408607:	mov    eax,ds:0x234ce6d8
  40860c:	repnz sub DWORD PTR [edx],eax
  40860f:	daa    
  408610:	push   edi
  408611:	sbb    bl,0xd1
  408614:	sbb    esi,DWORD PTR [edi]
  408616:	xchg   ebx,eax
  408617:	pushf  
  408618:	ins    BYTE PTR es:[edi],dx
  408619:	test   DWORD PTR [ebx+0x4c],edi
  40861c:	jo     0x40868a
  40861e:	mov    BYTE PTR [edi],bh
  408620:	cmp    DWORD PTR [ebx],ecx
  408622:	adc    dl,al
  408624:	mov    cl,0x5f
  408626:	mov    bh,0x41
  408628:	fcom   QWORD PTR [esi-0x7d]
  40862b:	popa   
  40862c:	dec    esp
  40862d:	and    DWORD PTR [ecx-0x2a9334be],ecx
  408633:	push   ecx
  408634:	out    dx,eax
  408635:	jg     0x408642
  408637:	xor    ah,bh
  408639:	dec    edi
  40863a:	fist   DWORD PTR [ecx+0x2f]
  40863d:	mov    eax,DWORD PTR [edx+eiz*2-0x60]
  408641:	xchg   esp,eax
  408642:	fisttp WORD PTR [esi+0x106ee744]
  408648:	adc    bl,0x92
  40864b:	mov    ds,WORD PTR [edi+0x2d]
  40864e:	shl    DWORD PTR ds:0xa4cc5cf1,cl
  408654:	adc    cl,BYTE PTR [esp+edi*4]
  408657:	cmp    al,0x18
  408659:	aad    0x67
  40865b:	ja     0x4086b2
  40865d:	test   DWORD PTR [ecx+0x55],edi
  408660:	lea    esp,[esi-0x7e]
  408663:	push   ds
  408664:	or     DWORD PTR [edi+ebp*1-0x30],ecx
  408668:	jne    0x4086b4
  40866a:	push   0xfffffffc
  40866c:	in     eax,dx
  40866d:	or     eax,0x23b3de9
  408672:	aam    0xd7
  408674:	inc    ebp
  408675:	push   ebx
  408676:	das    
  408677:	scas   al,BYTE PTR es:[edi]
  408678:	lea    esp,[edx+0x45]
  40867b:	sub    DWORD PTR [ecx+esi*1],0x1b70465b
  408682:	mov    ah,0x88
  408684:	push   ebx
  408685:	pop    esi
  408686:	imul   ecx,DWORD PTR [ebp+0x69],0x46
  40868a:	dec    esi
  40868b:	pop    esp
  40868c:	or     al,BYTE PTR [edi-0x54]
  40868f:	rcr    BYTE PTR [edi-0x47],0xa0
  408693:	pop    ebx
  408694:	or     ecx,esp
  408696:	mov    edi,0x76344b21
  40869b:	dec    ebx
  40869c:	add    al,0x22
  40869e:	inc    ebp
  40869f:	push   ecx
  4086a0:	push   ecx
  4086a1:	dec    ax
  4086a3:	shl    BYTE PTR [esi-0x60],1
  4086a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a7:	cmp    DWORD PTR [eax],0xffffffd9
  4086aa:	add    BYTE PTR [eax+0x5c],0xf4
  4086ae:	les    edi,FWORD PTR [ecx-0x1d]
  4086b1:	aas    
  4086b2:	jno    0x408667
  4086b4:	mov    ecx,0x74916e11
  4086b9:	out    0x54,al
  4086bb:	push   0xffffffc6
  4086bd:	inc    ebp
  4086be:	out    dx,al
  4086bf:	int3   
  4086c0:	aad    0xc9
  4086c2:	dec    ebx
  4086c3:	lahf   
  4086c4:	mov    esi,0xee05309d
  4086c9:	lea    eax,[ebp+0x669a7375]
  4086cf:	sbb    BYTE PTR [ecx+0x4d],0xc3
  4086d3:	rcl    DWORD PTR [edi+edi*1],cl
  4086d6:	mov    eax,ds:0xecaeeb41
  4086db:	adc    esp,esi
  4086dd:	adc    al,BYTE PTR [eax-0x55d2cb38]
  4086e3:	(bad)  
  4086e4:	ins    DWORD PTR es:[edi],dx
  4086e5:	out    0xc2,al
  4086e7:	and    dh,ah
  4086e9:	sub    esi,eax
  4086eb:	jbe    0x4086d3
  4086ed:	into   
  4086ee:	and    al,0x36
  4086f0:	jmp    0x4086d0
  4086f2:	xchg   esp,eax
  4086f3:	das    
  4086f4:	inc    edi
  4086f5:	inc    ebp
  4086f6:	shr    DWORD PTR [edx-0x80],1
  4086f9:	push   eax
  4086fa:	test   ch,0x4b
  4086fd:	xor    al,BYTE PTR [ecx-0x27]
  408700:	fstp   DWORD PTR [ebx+0x72]
  408703:	cld    
  408704:	test   al,0xe2
  408706:	leave  
  408707:	jns    0xd57ec411
  40870d:	cmp    ch,BYTE PTR [edx+0x96c90d3]
  408713:	or     al,0xf9
  408715:	push   ebx
  408716:	fdiv   QWORD PTR [esi+0x4f]
  408719:	mov    al,ds:0xb94fd079
  40871e:	jae    0x40877c
  408720:	faddp  st(6),st
  408722:	hlt    
  408723:	mov    ah,0x8a
  408725:	lds    ebx,FWORD PTR [ebp+0x4e]
  408728:	sub    eax,0x602e68d1
  40872d:	mov    dh,0x3c
  40872f:	idiv   DWORD PTR [esi-0x51]
  408732:	ror    DWORD PTR [ebp+0x4589e845],cl
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	les    esp,FWORD PTR [ebp-0x1833a1de]
  40877d:	js     0x4087f7
  40877f:	fs jle 0x4087fa
  408782:	js     0x4087e7
  408784:	mov    dl,0xa3
  408786:	jmp    DWORD PTR [ecx]
  408788:	ins    DWORD PTR es:[edi],dx
  408789:	les    esp,FWORD PTR [esi-0x1ef18c55]
  40878f:	mov    ebx,0xd68a76db
  408794:	jmp    0xa84d:0x88d7842b
  40879b:	cli    
  40879c:	push   esp
  40879d:	jle    0x4087df
  40879f:	jecxz  0x4087b7
  4087a1:	xor    cl,BYTE PTR [ebx-0x691c208b]
  4087a7:	adc    esp,DWORD PTR [eax-0x7b5692bc]
  4087ad:	mov    al,ds:0xa1d42455
  4087b2:	test   BYTE PTR [ebx+eax*4-0x66cda60f],ch
  4087b9:	mov    BYTE PTR ds:0x81926a52,dh
  4087bf:	adc    BYTE PTR [edi+0x1633cff3],cl
  4087c5:	push   0x7108a87d
  4087ca:	cld    
  4087cb:	cmp    esp,ebx
  4087cd:	push   cs
  4087ce:	sbb    eax,0xe6a94b15
  4087d3:	xchg   DWORD PTR [edx-0x2d2bc809],esp
  4087d9:	or     eax,0x6e043319
  4087de:	loop   0x40876d
  4087e0:	and    al,0x4f
  4087e2:	cwde   
  4087e3:	pop    ebx
  4087e4:	xor    al,BYTE PTR ds:0x726d5ae3
  4087ea:	jns    0x4087a2
  4087ec:	ins    BYTE PTR es:[edi],dx
  4087ed:	lea    edx,[ecx+ecx*2]
  4087f0:	cmp    al,0x78
  4087f2:	inc    ebp
  4087f3:	mov    eax,0x320f31d8
  4087f8:	inc    ebx
  4087f9:	mov    eax,ds:0xbdeb681c
  4087fe:	xor    al,cl
  408800:	js     0x40883b
  408802:	inc    esi
  408803:	(bad)  
  408804:	sar    BYTE PTR [eax-0x17a365f8],1
  40880a:	mov    ecx,0x20d8cb19
  40880f:	in     eax,dx
  408810:	xlat   BYTE PTR ds:[ebx]
  408811:	cwde   
  408812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408813:	aaa    
  408814:	mov    eax,0x5b9c539f
  408819:	mov    dl,0x3d
  40881b:	sar    BYTE PTR [ecx+0x7925919],cl
  408821:	addr16 je 0x4087ab
  408824:	jge    0x408845
  408826:	sub    eax,0x46c551d3
  40882b:	xchg   bx,ax
  40882d:	outs   dx,DWORD PTR ds:[esi]
  40882e:	mov    al,0x65
  408830:	int3   
  408831:	inc    ebp
  408832:	pusha  
  408833:	inc    esi
  408834:	jg     0x408805
  408836:	leave  
  408837:	xor    al,0xa1
  408839:	in     al,0xc9
  40883b:	fwait
  40883c:	std    
  40883d:	mov    edi,0x497a1e39
  408842:	dec    eax
  408843:	call   0xd8076324
  408848:	xchg   ebp,eax
  408849:	inc    ebp
  40884a:	lock es dec ecx
  40884d:	cmc    
  40884e:	repnz inc esi
  408850:	mov    edi,0x85683b79
  408855:	mov    ebp,0x1e3b0b54
  40885a:	push   ds
  40885b:	pushw  0x32
  40885e:	push   ss
  40885f:	xor    eax,0x6f685499
  408864:	and    DWORD PTR [eax+edx*2],eax
  408867:	scas   eax,DWORD PTR es:[edi]
  408868:	adc    al,0x91
  40886a:	aam    0x98
  40886c:	out    dx,al
  40886d:	mov    cl,0x7c
  40886f:	jmp    0xfdac598f
  408874:	push   eax
  408875:	xchg   esi,eax
  408876:	ins    DWORD PTR es:[edi],dx
  408877:	(bad)  
  408878:	dec    esi
  408879:	scas   eax,DWORD PTR es:[edi]
  40887a:	sub    bl,BYTE PTR [ecx]
  40887c:	inc    edi
  40887d:	lods   al,BYTE PTR ds:[esi]
  40887e:	test   BYTE PTR [ebp-0x3f],cl
  408881:	ret    
  408882:	xor    al,dl
  408884:	lds    edi,FWORD PTR [ebp-0x611cb554]
  40888a:	call   0x40:0xc303c0de
  408891:	outs   dx,DWORD PTR ds:[si]
  408893:	xor    BYTE PTR [ebp+ecx*4-0x646b21f5],dh
  40889a:	(bad)  
  40889b:	or     al,0x78
  40889d:	mov    esi,0xf19b551
  4088a2:	add    eax,0xe078e792
  4088a7:	aaa    
  4088a8:	stos   BYTE PTR es:[edi],al
  4088a9:	inc    esi
  4088aa:	jb     0x4088ad
  4088ac:	in     al,dx
  4088ad:	mov    ds:0x5ee39dfc,al
  4088b2:	scas   eax,DWORD PTR es:[edi]
  4088b3:	(bad)
  4088b6:	addr16 xchg esi,eax
  4088b8:	std    
  4088b9:	jl     0x408906
  4088bb:	sbb    DWORD PTR [eax-0xd],ecx
  4088be:	pop    ecx
  4088bf:	int3   
  4088c0:	fmul   QWORD PTR [edx-0x85e02ad]
  4088c6:	add    bh,bh
  4088c8:	loopne 0x408941
  4088ca:	xchg   edi,eax
  4088cb:	fisubr DWORD PTR [ebx-0x47]
  4088ce:	jecxz  0x40892b
  4088d0:	dec    ecx
  4088d1:	adc    DWORD PTR [eax+0x59],ebx
  4088d4:	popa   
  4088d5:	or     BYTE PTR ds:0x5d35dfc8,bl
  4088db:	clc    
  4088dc:	loop   0x4088ef
  4088de:	and    al,0xa8
  4088e0:	push   ebp
  4088e1:	test   BYTE PTR ds:0x4a7f168e,cl
  4088e7:	idiv   DWORD PTR [eax-0x63]
  4088ea:	mov    dl,BYTE PTR [ebp+esi*8-0x71]
  4088ee:	(bad)  
  4088ef:	push   0x1f
  4088f1:	dec    esp
  4088f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f3:	out    0x10,eax
  4088f5:	pop    ebp
  4088f6:	daa    
  4088f7:	cmp    al,0x55
  4088f9:	or     al,0x11
  4088fb:	out    0x2c,eax
  4088fd:	adc    BYTE PTR [ebp+0x12e64b7e],0xa5
  408904:	mov    ch,0xa7
  408906:	not    bh
  408908:	lea    ebp,[eax+0x52]
  40890b:	add    eax,0x89c7e997
  408911:	inc    edi
  408912:	xchg   edx,eax
  408913:	inc    edi
  408914:	ret    
  408915:	mov    al,0x96
  408917:	mov    ?,eax
  408919:	leave  
  40891a:	sbb    eax,0x407ad925
  40891f:	push   es
  408920:	and    DWORD PTR [ecx-0x2e7f732a],ebp
  408926:	not    DWORD PTR [edi+0x4e]
  408929:	fs je  0x408935
  40892c:	and    ch,BYTE PTR ds:[ebx]
  40892f:	and    BYTE PTR [ebx-0x3d],bl
  408932:	mov    BYTE PTR [ebx-0x67],cl
  408935:	adc    BYTE PTR [edi+eax*8-0x54ce07fd],bh
  40893c:	dec    edi
  40893d:	mov    al,ds:0x512333c2
  408942:	(bad)  
  408943:	out    dx,eax
  408944:	(bad)  
  408945:	or     dh,BYTE PTR [ecx-0x440030b4]
  40894b:	(bad)  
  40894c:	push   edi
  40894d:	fldcw  WORD PTR [edx+0x54deb2d4]
  408953:	addr16 inc ecx
  408955:	push   ebp
  408956:	mov    ds:0x699605b0,al
  40895b:	faddp  st(5),st
  40895d:	lea    edi,[esi-0x502af9c7]
  408963:	add    eax,0x36a67aa7
  408968:	fst    DWORD PTR [ebx]
  40896a:	cmp    eax,0x38bd49c
  40896f:	adc    al,0xf8
  408971:	stos   BYTE PTR es:[edi],al
  408972:	mov    ebx,0xfb674b04
  408977:	add    BYTE PTR [edi],ch
  408979:	dec    eax
  40897a:	ja     0x4089c8
  40897c:	dec    ecx
  40897d:	pop    ecx
  40897e:	lds    esi,FWORD PTR [ecx-0x2b46d32e]
  408984:	push   ss
  408985:	ins    BYTE PTR es:[edi],dx
  408986:	mov    eax,cs:0xc8b873d5
  40898c:	jne    0x408942
  40898e:	mov    es,ebx
  408990:	shl    BYTE PTR [edx+0x29],cl
  408993:	xchg   edi,eax
  408994:	ja     0x408952
  408996:	adc    al,0x25
  408998:	sub    ecx,DWORD PTR [ebx+ebp*1-0x5188e1fa]
  40899f:	xchg   ecx,eax
  4089a0:	xor    ebp,ecx
  4089a2:	arpl   sp,cx
  4089a4:	dec    ebp
  4089a5:	pop    ecx
  4089a6:	cli    
  4089a7:	and    eax,0x74ec5fb9
  4089ac:	pop    ebx
  4089ad:	mov    ds:0x41e95adc,al
  4089b2:	(bad)  
  4089b3:	sub    al,0x66
  4089b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b6:	sub    cl,cl
  4089b8:	test   eax,0xd65e0a27
  4089bd:	std    
  4089be:	repz jge 0x408a29
  4089c1:	scas   al,BYTE PTR es:[edi]
  4089c2:	mov    al,ds:0x4d52ee22
  4089c7:	xor    al,0xa7
  4089c9:	mov    cl,0x76
  4089cb:	and    al,0xff
  4089cd:	stos   BYTE PTR es:[edi],al
  4089ce:	mov    BYTE PTR fs:[eax+0x29],bl
  4089d2:	mov    ecx,DWORD PTR [edx+0x3f9fbfa7]
  4089d8:	xchg   BYTE PTR [ebp-0x63d3297f],bl
  4089de:	repnz out 0xd2,eax
  4089e1:	stos   BYTE PTR es:[edi],al
  4089e2:	mov    esi,0xb9fa8cc1
  4089e7:	mov    al,ds:0x37f6c72a
  4089ec:	fidivr WORD PTR [ebx-0x2be6d986]
  4089f2:	dec    edi
  4089f3:	fst    DWORD PTR cs:[eax+0x62]
  4089f7:	lahf   
  4089f8:	adc    al,0xd2
  4089fa:	inc    esp
  4089fb:	daa    
  4089fc:	rcl    DWORD PTR [esi],cl
  4089fe:	daa    
  4089ff:	ficom  DWORD PTR [esi]
  408a01:	fidivr WORD PTR [edi+0x2190c691]
  408a07:	or     DWORD PTR [edx+0x7f],edx
  408a0a:	xor    BYTE PTR [edx+0x38c9424f],dh
  408a10:	push   esi
  408a11:	cmp    dl,0xd9
  408a14:	adc    al,0x29
  408a16:	dec    ecx
  408a17:	dec    bx
  408a19:	cmp    edi,DWORD PTR [eax]
  408a1b:	clc    
  408a1c:	adc    ah,BYTE PTR [esi+0x3c]
  408a1f:	ret    0x1f40
  408a22:	mov    edi,0x1a858df9
  408a27:	xor    eax,0xf06b88f4
  408a2c:	fs leave 
  408a2e:	or     al,0xbc
  408a30:	xlat   BYTE PTR ds:[ebx]
  408a31:	cli    
  408a32:	cmp    ch,cl
  408a34:	into   
  408a35:	push   eax
  408a36:	inc    esp
  408a37:	out    0xa6,al
  408a39:	mov    bl,0x79
  408a3b:	ret    
  408a3c:	dec    ecx
  408a3d:	loopne 0x4089c8
  408a3f:	aas    
  408a40:	inc    edx
  408a41:	mov    ds:0x42e0c719,eax
  408a46:	sub    DWORD PTR [esp+eax*2+0x44],ebx
  408a4a:	mov    bh,0x6f
  408a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a4d:	(bad)  
  408a4e:	xor    eax,0x5728a66b
  408a53:	les    esi,FWORD PTR [edi+esi*8]
  408a56:	lahf   
  408a57:	int3   
  408a58:	dec    ebx
  408a59:	repz inc edi
  408a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a5c:	std    
  408a5d:	pop    ds
  408a5e:	out    0xcb,al
  408a60:	mov    dl,0x97
  408a62:	jge    0x408a27
  408a64:	cdq    
  408a65:	inc    esp
  408a66:	mov    ebp,ds
  408a68:	(bad)  
  408a69:	mov    ds:0x66c738f0,al
  408a6e:	jne    0x4089f9
  408a70:	add    DWORD PTR [esi-0x37],ebx
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x51b3a4f9
  408a92:	shl    DWORD PTR [ebx+0x78e43823],cl
  408a98:	js     0x408a41
  408a9a:	jle    0x408b14
  408a9c:	js     0x408a52
  408a9e:	push   edx
  408a9f:	enter  0xba7d,0x8d
  408aa3:	retf   
  408aa4:	stc    
  408aa5:	pop    eax
  408aa6:	xor    edx,edx
  408aa8:	pusha  
  408aa9:	jp     0x408a9c
  408aab:	pop    ecx
  408aac:	add    esi,DWORD PTR [esi+0x75]
  408aaf:	ins    DWORD PTR es:[edi],dx
  408ab0:	enter  0xfbb9,0x54
  408ab4:	mov    edx,DWORD PTR [edi-0x1c]
  408ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab8:	stc    
  408ab9:	not    BYTE PTR [edi-0x9bfacc0]
  408abf:	and    DWORD PTR [ebx+0x5b9f4753],0x5ca2de4c
  408ac9:	frstor [ecx-0x5a34ccfb]
  408acf:	mov    WORD PTR [edi],?
  408ad1:	(bad)  
  408ad2:	mov    al,ds:0xd44596d2
  408ad7:	jne    0x408aca
  408ad9:	inc    ecx
  408ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408adb:	jae    0x408ace
  408add:	xor    ch,BYTE PTR [edi]
  408adf:	mov    edi,0xff4c5f3
  408ae4:	(bad)  
  408ae5:	aaa    
  408ae6:	js     0x408b32
  408ae8:	and    esi,DWORD PTR [edi-0x20]
  408aeb:	repnz xchg ecx,eax
  408aed:	ins    BYTE PTR es:[edi],dx
  408aee:	push   ebp
  408aef:	call   0x4138d801
  408af4:	int    0x7
  408af6:	push   edx
  408af7:	aaa    
  408af8:	push   edx
  408af9:	and    esp,DWORD PTR [eax+eiz*8-0x2ab9d3e6]
  408b00:	iret   
  408b01:	arpl   WORD PTR [ebx],di
  408b03:	push   esp
  408b04:	xchg   ebx,eax
  408b05:	cmp    al,0xa2
  408b07:	ja     0x408ae8
  408b09:	out    0x6f,eax
  408b0b:	aas    
  408b0c:	fstp   st(3)
  408b0e:	add    al,0xc7
  408b10:	adc    ecx,ecx
  408b12:	mov    bh,0xbd
  408b14:	dec    esp
  408b15:	sub    DWORD PTR [esi+eax*4+0x8],ecx
  408b19:	into   
  408b1a:	in     eax,0x14
  408b1c:	xchg   ebx,ebx
  408b1e:	mov    al,0x6c
  408b20:	xor    al,0x94
  408b22:	sahf   
  408b23:	mov    WORD PTR [esi-0x48],ss
  408b26:	fbstp  TBYTE PTR [eax]
  408b28:	sub    edi,DWORD PTR [ebp+0x49]
  408b2b:	sar    DWORD PTR [edi+ecx*8],cl
  408b2e:	imul   eax,DWORD PTR [esi-0x8fb7e95],0x40e29bdd
  408b38:	adc    al,dl
  408b3a:	fidivr WORD PTR [eax]
  408b3c:	or     dl,ch
  408b3e:	(bad)  
  408b3f:	jle    0x408b0e
  408b41:	jae    0x408b88
  408b43:	jnp    0x408b94
  408b45:	outs   dx,DWORD PTR ds:[esi]
  408b46:	cli    
  408b47:	jno    0x408b92
  408b49:	call   0xce816f34
  408b4e:	sar    DWORD PTR [ecx+0x26],1
  408b51:	ss add eax,0x89f9c16f
  408b57:	xchg   ebp,eax
  408b58:	sbb    BYTE PTR [ebx+0x52],dl
  408b5b:	popf   
  408b5c:	retf   0x71e2
  408b5f:	out    dx,al
  408b60:	daa    
  408b61:	xchg   edi,eax
  408b62:	outs   dx,BYTE PTR ds:[esi]
  408b63:	ficom  WORD PTR [edx+ecx*2+0x55]
  408b67:	pop    ebp
  408b68:	and    al,BYTE PTR [edi-0x69]
  408b6b:	pusha  
  408b6c:	(bad)  
  408b6d:	jb     0x408b6c
  408b6f:	daa    
  408b70:	xchg   edi,eax
  408b71:	mov    bl,0x8a
  408b73:	inc    ebp
  408b74:	ds test al,0xef
  408b77:	mov    esi,?
  408b79:	add    BYTE PTR [esi],cl
  408b7b:	into   
  408b7c:	or     ah,bh
  408b7e:	loop   0x408be4
  408b80:	adc    dh,BYTE PTR [edx]
  408b82:	nop
  408b83:	ret    
  408b84:	in     al,dx
  408b85:	sub    BYTE PTR [esi+0x13],dh
  408b88:	mov    ds:0x5fd68985,eax
  408b8d:	retf   0x3305
  408b90:	mov    BYTE PTR [edx-0x59318db1],bl
  408b96:	icebp  
  408b97:	call   0x88fd0559
  408b9c:	rcr    BYTE PTR [eax-0x7b],cl
  408b9f:	add    eax,0x8e54f0cf
  408ba4:	shl    DWORD PTR [ecx],cl
  408ba6:	add    ah,BYTE PTR [edx-0x239542b9]
  408bac:	mul    BYTE PTR ds:0x28cc3cf4
  408bb2:	in     al,0x70
  408bb4:	in     al,0xf7
  408bb6:	or     DWORD PTR [edx-0x5b2cbb81],ebx
  408bbc:	push   ebp
  408bbd:	xor    DWORD PTR [ecx+0x15646de7],edx
  408bc3:	push   eax
  408bc4:	int3   
  408bc5:	pop    ss
  408bc6:	inc    ecx
  408bc7:	sahf   
  408bc8:	cli    
  408bc9:	mov    ch,0x33
  408bcb:	inc    edi
  408bcc:	aas    
  408bcd:	add    DWORD PTR [ecx-0x7c8db56e],esi
  408bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bd4:	loope  0x408b57
  408bd6:	ret    0x2ca6
  408bd9:	jnp    0x408c1b
  408bdb:	jne    0x408bf9
  408bdd:	(bad)  [esi+0x4f]
  408be0:	push   esp
  408be1:	jmp    0x2751:0x3faa6b02
  408be8:	int    0xd3
  408bea:	stc    
  408beb:	dec    esp
  408bec:	push   DWORD PTR [ebx]
  408bee:	push   ebx
  408bef:	or     bl,dl
  408bf1:	repnz cmp eax,0x7b4ed88c
  408bf7:	jecxz  0x408b82
  408bf9:	xor    DWORD PTR [edx-0x19],eax
  408bfc:	minps  xmm1,XMMWORD PTR [esi+0x1b]
  408c00:	in     eax,dx
  408c01:	adc    eax,0xf5fb6584
  408c06:	mov    bh,0x7b
  408c08:	lods   al,BYTE PTR ds:[esi]
  408c09:	popf   
  408c0a:	xchg   esi,eax
  408c0b:	sbb    eax,0xd1aefaa3
  408c10:	lea    ebx,[esi-0x214c2b7d]
  408c16:	into   
  408c17:	adc    eax,0xaae07b8a
  408c1c:	pop    esp
  408c1d:	push   edi
  408c1e:	xchg   esp,esp
  408c20:	rcl    DWORD PTR [esi+0x2f],cl
  408c23:	xchg   esp,eax
  408c24:	xchg   ebx,eax
  408c25:	stos   BYTE PTR es:[edi],al
  408c26:	inc    edi
  408c27:	and    eax,DWORD PTR cs:[esi+0x66]
  408c2b:	outs   dx,DWORD PTR ds:[esi]
  408c2c:	push   edx
  408c2d:	in     al,dx
  408c2e:	inc    eax
  408c2f:	mov    eax,0xd7a0e8f5
  408c34:	push   0xffffff86
  408c36:	sbb    ch,BYTE PTR [ebx+edx*1]
  408c39:	fwait
  408c3a:	imul   esp,DWORD PTR [si],0x80a4b82d
  408c41:	mov    bl,0xbe
  408c43:	or     ch,BYTE PTR [ebp-0x756ae49f]
  408c49:	scas   al,BYTE PTR es:[edi]
  408c4a:	cmp    BYTE PTR [esi-0x30f76328],dl
  408c50:	push   ds
  408c51:	or     eax,0x89a1f48f
  408c56:	mov    BYTE PTR [esi+edx*8-0x3c0b2926],dh
  408c5d:	aad    0x6b
  408c5f:	adc    ebp,DWORD PTR [esi]
  408c61:	and    ebx,DWORD PTR [edx]
  408c63:	shr    BYTE PTR [edx+ebx*4+0x38],1
  408c67:	sub    al,0x75
  408c69:	add    bh,BYTE PTR [ebp-0x16]
  408c6c:	mov    cl,0xb
  408c6e:	sbb    al,0x42
  408c70:	test   BYTE PTR [esi],al
  408c72:	dec    eax
  408c73:	pop    ds
  408c74:	sub    cl,BYTE PTR [esi-0x72]
  408c77:	inc    esp
  408c78:	push   es
  408c79:	ins    DWORD PTR es:[edi],dx
  408c7a:	or     eax,0x1c51dfb5
  408c7f:	fldcw  WORD PTR [ebx+edi*1-0x34]
  408c83:	(bad)  
  408c84:	int    0x98
  408c86:	lods   eax,DWORD PTR ds:[esi]
  408c87:	addr16 jae 0x408c9f
  408c8a:	(bad)  
  408c8b:	pushf  
  408c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c8d:	push   ebp
  408c8e:	add    al,BYTE PTR [esi+0x6c7e4fdb]
  408c94:	scas   al,BYTE PTR es:[edi]
  408c95:	sar    BYTE PTR [ebx+ebx*2-0x21],1
  408c99:	mov    ah,0xb
  408c9b:	outs   dx,DWORD PTR ds:[esi]
  408c9c:	xlat   BYTE PTR ds:[ebx]
  408c9d:	adc    ecx,esi
  408c9f:	clc    
  408ca0:	sub    bh,BYTE PTR [edi-0x15dc474c]
  408ca6:	out    0xfd,al
  408ca8:	push   cs
  408ca9:	inc    edi
  408caa:	in     eax,dx
  408cab:	inc    cx
  408cad:	jge    0x408d18
  408caf:	pop    ebp
  408cb0:	sti    
  408cb1:	addr16 test al,0x44
  408cb4:	and    esi,eax
  408cb6:	jo     0x408d1d
  408cb8:	xchg   ebx,eax
  408cb9:	bnd jl 0x408d39
  408cbc:	(bad)  
  408cbd:	fnstenv [esi]
  408cbf:	gs out 0xf1,al
  408cc2:	pop    ebp
  408cc3:	or     al,ah
  408cc5:	dec    edx
  408cc6:	xchg   esp,eax
  408cc7:	aaa    
  408cc8:	sub    BYTE PTR [ebx],dl
  408cca:	rol    BYTE PTR [eax-0x241470c4],1
  408cd0:	idiv   BYTE PTR [esp+eax*4]
  408cd3:	mov    cl,0xe2
  408cd5:	mov    bl,0xfd
  408cd7:	cmp    dh,BYTE PTR [ebx+edx*2]
  408cda:	lds    edx,FWORD PTR [edx+0x63]
  408cdd:	repnz mov ecx,0x4eebb44e
  408ce3:	and    eax,0x6834bff5
  408ce8:	xlat   BYTE PTR ds:[ebx]
  408ce9:	mov    al,0x22
  408ceb:	pop    ebx
  408cec:	xchg   esp,eax
  408ced:	or     ebp,esi
  408cef:	fadd   QWORD PTR [esp+ebx*8]
  408cf2:	(bad)  
  408cf3:	lea    eax,[ebx]
  408cf5:	in     al,0x64
  408cf7:	rcl    DWORD PTR [eax+0x14],1
  408cfa:	ins    BYTE PTR es:[edi],dx
  408cfb:	aas    
  408cfc:	cmc    
  408cfd:	adc    eax,0x13f73d15
  408d02:	outs   dx,DWORD PTR ds:[esi]
  408d03:	out    0x95,eax
  408d05:	xlat   BYTE PTR ds:[ebx]
  408d06:	(bad)  
  408d07:	retf   0xa936
  408d0a:	lds    ebx,FWORD PTR [ebx*1-0x70dc14b4]
  408d11:	icebp  
  408d12:	mov    ebp,0x427a00b2
  408d17:	jne    0x408cee
  408d19:	ja     0x408d8e
  408d1b:	popf   
  408d1c:	xchg   edi,eax
  408d1d:	and    ax,cx
  408d20:	cmp    dh,BYTE PTR [ebx+0x42]
  408d23:	(bad)  
  408d25:	jbe    0x408d1c
  408d27:	dec    edx
  408d28:	xchg   ebx,eax
  408d29:	jmp    0x408d6f
  408d2b:	(bad)  
  408d2c:	cli    
  408d2d:	retf   0x7022
  408d30:	je     0x408d16
  408d32:	stos   BYTE PTR es:[edi],al
  408d33:	outs   dx,BYTE PTR ds:[esi]
  408d34:	and    eax,DWORD PTR ds:0xf7ccd84b
  408d3a:	lods   eax,DWORD PTR ds:[esi]
  408d3b:	daa    
  408d3c:	xchg   esp,eax
  408d3d:	test   al,0x24
  408d3f:	mov    bl,0xe3
  408d41:	push   eax
  408d42:	(bad)  
  408d43:	xchg   edi,eax
  408d44:	mov    ecx,0xf845c7fe
  408d49:	cmp    BYTE PTR [ebp+0x45c7f89c],al
  408d4f:	cld    
  408d50:	cmp    DWORD PTR [ebp+0x458bf89c],eax
  408d56:	cld    
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a88d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a8ad,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7e1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7e1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7e1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7e1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7e1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7e1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7e1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7e1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a815
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7dd
  408de2:	mov    DWORD PTR ds:0x42a815,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a829,0x42a785
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a79d,0x42a819
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffce
  408e1d:	mov    eax,0xea67820f
  408e22:	js     0x408e9c
  408e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e25:	jle    0x408e9f
  408e27:	js     0x408db7
  408e29:	push   edx
  408e2a:	xor    DWORD PTR [ecx-0x7b8f0369],esi
  408e30:	imul   BYTE PTR [ecx-0x42cc9674]
  408e36:	xor    ecx,esp
  408e38:	outs   dx,DWORD PTR ds:[esi]
  408e39:	mov    al,ds:0xcc58f7bd
  408e3e:	inc    esi
  408e3f:	cmp    ch,BYTE PTR [edi]
  408e41:	imul   ebx,DWORD PTR ds:0x75f74ffa,0xffffffa9
  408e48:	or     edx,DWORD PTR [edi+0x57]
  408e4b:	lods   eax,DWORD PTR es:[esi]
  408e4d:	lds    edx,FWORD PTR [edx]
  408e4f:	mov    edx,0xd220382
  408e54:	outs   dx,DWORD PTR ds:[esi]
  408e55:	sahf   
  408e56:	adc    BYTE PTR [ebp-0x54],cl
  408e59:	lods   eax,DWORD PTR ds:[esi]
  408e5a:	mov    dh,0xf4
  408e5c:	sub    BYTE PTR [ecx],ah
  408e5e:	sti    
  408e5f:	daa    
  408e60:	push   edi
  408e61:	jl     0x408e15
  408e63:	jmp    0xd5b:0x6f96a801
  408e6a:	xchg   edx,eax
  408e6b:	js     0x408edc
  408e6d:	fadd   st(0),st
  408e6f:	push   0xcb26e409
  408e74:	aad    0xa9
  408e76:	out    dx,al
  408e77:	pop    esi
  408e78:	test   eax,0x83e1128a
  408e7d:	cmp    eax,0xfcd6852f
  408e82:	test   eax,0x16d84a9e
  408e87:	inc    ebp
  408e88:	push   0x2a
  408e8a:	out    0x1e,al
  408e8c:	fs cmc 
  408e8e:	push   0xfbd662c7
  408e93:	inc    ecx
  408e94:	in     al,0x1d
  408e96:	add    al,0xb5
  408e98:	lds    esp,FWORD PTR [eax+0x3750a7e0]
  408e9e:	mov    DWORD PTR [edx-0xd],0x6133b433
  408ea5:	or     al,0x62
  408ea7:	sub    ebp,DWORD PTR [ebp+0x779343ac]
  408ead:	jno    0x408e75
  408eaf:	lods   al,BYTE PTR ds:[esi]
  408eb0:	lods   al,BYTE PTR ds:[esi]
  408eb1:	xor    eax,0xe65609af
  408eb6:	dec    eax
  408eb7:	or     ecx,esi
  408eb9:	and    al,0x39
  408ebb:	jb     0x408e5b
  408ebd:	cmp    eax,0x648bf675
  408ec2:	loopne 0x408ea8
  408ec4:	fxch   st(7)
  408ec6:	das    
  408ec7:	jae    0x408e73
  408ec9:	xchg   edi,eax
  408eca:	iret   
  408ecb:	cmp    edi,ecx
  408ecd:	mov    ebp,DWORD PTR [ebx+0x52]
  408ed0:	xlat   BYTE PTR ds:[ebx]
  408ed1:	cmp    al,0x6b
  408ed3:	sbb    edi,edx
  408ed5:	and    DWORD PTR [ebx+0x29],ebx
  408ed8:	add    BYTE PTR [edx+0x6928ec3c],ah
  408ede:	jnp    0x408e62
  408ee0:	sub    bh,al
  408ee2:	cld    
  408ee3:	dec    esp
  408ee4:	xor    al,0xcb
  408ee6:	pop    es
  408ee7:	ret    
  408ee8:	rcl    ah,0x92
  408eeb:	push   edx
  408eec:	sbb    al,0xa7
  408eee:	pop    esp
  408eef:	adc    al,0x6
  408ef1:	jbe    0x408edf
  408ef3:	push   ds
  408ef4:	sbb    edi,esi
  408ef6:	(bad)  
  408ef7:	(bad)  [edi*4+0x66259ee2]
  408efe:	xchg   ecx,eax
  408eff:	call   0x41aa8ca1
  408f04:	pop    ds
  408f05:	out    0xb3,eax
  408f07:	cmp    BYTE PTR [edx],bh
  408f09:	lods   eax,DWORD PTR cs:[esi]
  408f0b:	aaa    
  408f0c:	rcr    DWORD PTR [edi],cl
  408f0e:	out    0xd3,eax
  408f10:	inc    eax
  408f11:	(bad)  
  408f12:	(bad)  
  408f13:	mov    ch,0xd3
  408f15:	cmp    al,0x7b
  408f17:	scas   al,BYTE PTR es:[edi]
  408f18:	jae    0x408ecd
  408f1a:	test   DWORD PTR [ecx+0x5a96a433],0x21405efe
  408f24:	jo     0x408f07
  408f26:	ins    DWORD PTR es:[edi],dx
  408f27:	push   ebx
  408f28:	adc    BYTE PTR cs:[ebp+0x5d],cl
  408f2c:	jo     0x408f99
  408f2e:	ret    0xc121
  408f31:	stos   DWORD PTR es:[edi],eax
  408f32:	mov    ch,0xc
  408f34:	retf   
  408f35:	retf   
  408f36:	mov    bh,0xaf
  408f38:	push   cs
  408f39:	jmp    0x5a2cb360
  408f3e:	pop    ds
  408f3f:	sbb    esp,DWORD PTR [edx+0x1f44ce38]
  408f45:	fs jbe 0x408f9b
  408f48:	xchg   ebp,eax
  408f49:	and    al,0xa4
  408f4b:	sbb    al,0xb1
  408f4d:	mov    ch,0x48
  408f4f:	dec    DWORD PTR [eax+eiz*2]
  408f52:	(bad)  
  408f54:	ins    DWORD PTR es:[edi],dx
  408f55:	mov    esi,0x2105aebd
  408f5a:	(bad)  
  408f5c:	mov    ds:0xcb3698b6,eax
  408f61:	adc    esi,DWORD PTR [ecx]
  408f63:	call   0x3a49:0xd938a699
  408f6a:	retf   
  408f6b:	xchg   esi,eax
  408f6c:	add    bh,BYTE PTR [eax-0x2f]
  408f6f:	adc    eax,0xb9ed0acb
  408f74:	pop    edi
  408f75:	fcomp  QWORD PTR [ecx+0x18]
  408f78:	xchg   esi,eax
  408f79:	xchg   ebx,eax
  408f7a:	imul   ebp,DWORD PTR [edx-0xf],0xffffffa9
  408f7e:	cmp    ebp,DWORD PTR [ecx+0x9bed569]
  408f84:	jb     0x408f33
  408f86:	jne    0x408f64
  408f88:	xchg   esi,eax
  408f89:	dec    DWORD PTR [ebx]
  408f8b:	mov    DWORD PTR [eax],ecx
  408f8d:	add    ebp,DWORD PTR [esi]
  408f8f:	shl    DWORD PTR [ebx+0x2bf72870],0x25
  408f96:	mov    bl,ch
  408f98:	push   ebp
  408f99:	jl     0x408fda
  408f9b:	scas   al,BYTE PTR es:[edi]
  408f9c:	imul   ecx,DWORD PTR [edx+0x7f7947da],0x38
  408fa3:	jmp    0x408f76
  408fa5:	dec    esi
  408fa6:	pop    ds
  408fa7:	jle    0x40900e
  408fa9:	lds    esi,FWORD PTR [ecx+0x7a43ef13]
  408faf:	mov    bh,0x51
  408fb1:	ret    
  408fb2:	sub    edx,ebp
  408fb4:	dec    edx
  408fb5:	or     al,0x2f
  408fb7:	popf   
  408fb8:	jge    0x408f3c
  408fba:	nop
  408fbb:	not    edi
  408fbd:	test   al,ah
  408fbf:	or     ah,dh
  408fc1:	sti    
  408fc2:	xor    edx,DWORD PTR [ebp+0x1d]
  408fc5:	cmp    eax,0x37791c88
  408fca:	inc    eax
  408fcb:	icebp  
  408fcc:	cmp    bh,BYTE PTR [edx]
  408fce:	cmp    DWORD PTR [eax],esi
  408fd0:	mov    cs,WORD PTR [edi+0x5c93cbd4]
  408fd6:	arpl   WORD PTR [edx+0x50871d8e],ax
  408fdc:	mov    es,esi
  408fde:	sbb    DWORD PTR [ebx+eax*4+0x20a2e8d],esp
  408fe5:	jo     0x408f7c
  408fe7:	and    DWORD PTR [esi-0x62],ebp
  408fea:	iret   
  408feb:	jnp    0x40900f
  408fed:	add    DWORD PTR [ebx-0x67],0xffffffdb
  408ff1:	add    BYTE PTR [ecx+ebx*4-0x224bbb26],0xf
  408ff9:	jmp    0x70c9:0xbe5c3dd6
  409000:	push   0x4a
  409002:	ds push edi
  409004:	out    dx,eax
  409005:	cwde   
  409006:	xor    BYTE PTR [ebx+0x5d],al
  409009:	jmp    0x1167:0xebc09517
  409010:	mov    WORD PTR [eax-0x42],?
  409013:	mov    eax,ds:0x8ad28438
  409018:	std    
  409019:	arpl   WORD PTR [ecx],ax
  40901b:	mov    ds,edx
  40901d:	jl     0x40900f
  40901f:	mov    ds:0xcc9870e,al
  409024:	dec    edx
  409025:	std    
  409026:	sub    ah,BYTE PTR [esi+0x7424dd43]
  40902c:	jb     0x409036
  40902e:	and    edx,DWORD PTR [eax-0x45]
  409031:	xor    BYTE PTR [eax+eax*2+0x5110b2de],al
  409038:	xchg   esi,eax
  409039:	ret    0x67b5
  40903c:	movntq QWORD PTR [eax],mm3
  40903f:	lods   al,BYTE PTR ds:[esi]
  409040:	push   ebp
  409041:	push   edx
  409042:	sbb    eax,0x7934f843
  409047:	push   edi
  409048:	xchg   ebx,eax
  409049:	test   DWORD PTR [edi-0x3309e0e2],edi
  40904f:	lds    esp,FWORD PTR [edi]
  409051:	pop    ebp
  409052:	(bad)  
  409053:	aad    0x54
  409055:	xchg   BYTE PTR [edx+esi*1-0x9123199],dh
  40905c:	push   0xffffffaa
  40905e:	inc    edi
  40905f:	loope  0x4090bf
  409061:	mov    al,0x6e
  409063:	repnz stc 
  409065:	dec    ebp
  409066:	out    0xac,al
  409068:	inc    eax
  409069:	push   es
  40906a:	sub    esp,DWORD PTR [ebx+0x58]
  40906d:	and    eax,0x2bcd16c6
  409072:	pop    ds
  409073:	inc    esp
  409074:	add    al,0x6e
  409076:	dec    edi
  409077:	add    ebp,esp
  409079:	cmp    ch,BYTE PTR [edx+0x6]
  40907c:	test   al,0x48
  40907e:	inc    ebp
  40907f:	out    dx,al
  409080:	sub    dh,BYTE PTR [esi-0x3bd59756]
  409086:	les    ebx,FWORD PTR [edi+esi*8+0x39482cef]
  40908d:	mov    dh,0xb9
  40908f:	lods   eax,DWORD PTR ds:[esi]
  409090:	iret   
  409091:	jno    0x409035
  409093:	or     DWORD PTR [edx+0x30],edx
  409096:	mov    ebp,0xa3908d11
  40909b:	pop    edi
  40909c:	rol    bh,cl
  40909e:	sub    al,0xd2
  4090a0:	aaa    
  4090a1:	mov    cl,0xa5
  4090a3:	loopne 0x4090dd
  4090a5:	pop    ebp
  4090a6:	adc    ah,bh
  4090a8:	mov    al,ds:0xac02532
  4090ad:	xchg   ebp,eax
  4090ae:	popf   
  4090af:	nop
  4090b0:	xchg   ebx,eax
  4090b1:	mov    edi,0x54a5cfa1
  4090b6:	push   cs
  4090b7:	dec    ebp
  4090b8:	test   ebx,ecx
  4090ba:	xchg   ebp,eax
  4090bb:	(bad)  
  4090bd:	jns    0x409082
  4090bf:	call   0xbaa:0x8a0e7d01
  4090c6:	cli    
  4090c7:	pop    ebp
  4090c8:	jle    0x4090b2
  4090ca:	mov    ds:0x90b22f04,al
  4090cf:	mov    DWORD PTR [ebx+edi*1-0x10],ecx
  4090d3:	mov    DWORD PTR ds:0x42a821,0x7b75
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x86a4c6c4
  4090f5:	shl    DWORD PTR [ebx+0x1a],cl
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090e9
  409101:	pop    edi
  409102:	xchg   ecx,eax
  409103:	addr16 xchg esp,eax
  409105:	cmp    eax,0x813e899e
  40910a:	mul    DWORD PTR [edx]
  40910c:	test   DWORD PTR [ebp-0x3a041384],0x1d9fb6e8
  409116:	clc    
  409117:	inc    edx
  409118:	mov    ds:0x6771c2b2,eax
  40911d:	inc    esp
  40911e:	adc    bh,BYTE PTR [edi+0x2d]
  409121:	adc    BYTE PTR fs:[esi-0x78cd7bb7],dh
  409128:	fisubr WORD PTR [esp+ecx*4]
  40912b:	shl    BYTE PTR [ebp+0x1c7cc9d2],1
  409131:	cwde   
  409132:	inc    ecx
  409133:	push   ebp
  409134:	(bad)  
  409135:	(bad)  
  409137:	iret   
  409138:	xor    BYTE PTR [esi+0x200bbe77],0xad
  40913f:	rol    BYTE PTR [ebx+0x1],cl
  409142:	adc    esp,0xb2ef3e8f
  409148:	xlat   BYTE PTR ds:[ebx]
  409149:	dec    esi
  40914a:	jo     0x4091b3
  40914c:	jge    0x40912d
  40914e:	xchg   ebp,eax
  40914f:	jns    0x409165
  409151:	outs   dx,BYTE PTR ds:[esi]
  409152:	ror    ebx,cl
  409154:	push   ebx
  409155:	jbe    0x40917e
  409157:	jge    0x409197
  409159:	inc    ecx
  40915a:	pop    ecx
  40915b:	icebp  
  40915c:	(bad)
  40915f:	jo     0x409195
  409161:	lods   eax,DWORD PTR ds:[esi]
  409162:	(bad)  
  409163:	je     0x40911c
  409165:	cmc    
  409166:	lea    ebp,[ebp-0x154c97db]
  40916c:	push   edi
  40916d:	test   eax,0xaf3413f6
  409172:	xor    edx,edi
  409174:	popfw  
  409176:	mov    ah,0x29
  409178:	ja     0x4091b0
  40917a:	fisub  WORD PTR ds:0x614db212
  409180:	cmp    eax,0xf69bc69c
  409185:	hlt    
  409186:	jmp    0x1fbeba28
  40918b:	cmp    cl,0x75
  40918e:	lahf   
  40918f:	sbb    al,BYTE PTR [eax+0x7cd6282f]
  409195:	shl    bh,0x9f
  409198:	hlt    
  409199:	mov    ebp,0xb9835f35
  40919e:	mov    bl,0xf4
  4091a0:	(bad)  
  4091a1:	sbb    dl,BYTE PTR [esi+0x10]
  4091a4:	mov    ebp,0x77777f62
  4091a9:	sub    ebp,DWORD PTR [esi-0x1347f662]
  4091af:	fidivr WORD PTR [ebp-0x3fffa751]
  4091b5:	pushfw 
  4091b7:	stos   DWORD PTR es:[edi],eax
  4091b8:	imul   ecx,DWORD PTR [edi+0xf92f6f1],0x70f048c0
  4091c2:	lea    edx,[ebx]
  4091c4:	sahf   
  4091c5:	lock iret 
  4091c7:	cmp    al,0x92
  4091c9:	int3   
  4091ca:	pop    edx
  4091cb:	pop    ds
  4091cc:	adc    dl,BYTE PTR [edi-0x2b37c414]
  4091d2:	aaa    
  4091d3:	mov    ebp,0xba2fea00
  4091d8:	inc    ecx
  4091d9:	aam    0x57
  4091db:	pop    edx
  4091dc:	(bad)  
  4091dd:	push   ds
  4091de:	fstp   TBYTE PTR [ecx-0x6c251089]
  4091e4:	popf   
  4091e5:	repnz adc BYTE PTR [edx-0x2e1fa64f],ch
  4091ec:	inc    ebx
  4091ed:	fadd   st,st(7)
  4091ef:	push   ebp
  4091f0:	jae    0x409185
  4091f2:	out    0x41,eax
  4091f4:	add    eax,0x126af912
  4091f9:	mov    dl,0xb5
  4091fb:	mov    edi,0x636b8b77
  409200:	lahf   
  409201:	cmp    eax,0xb89e61d4
  409206:	push   edi
  409207:	push   esp
  409208:	xchg   ecx,eax
  409209:	les    ebx,FWORD PTR [edi+0x6]
  40920c:	push   ss
  40920d:	lock jge 0x40922c
  409210:	sub    bl,cl
  409212:	sahf   
  409213:	inc    ecx
  409214:	dec    esp
  409215:	mov    ebp,0xb1c7f739
  40921a:	test   eax,0xdfe11819
  40921f:	sub    esi,DWORD PTR [esi+edx*8+0x50]
  409223:	sbb    al,0x12
  409225:	jnp    0x4091d6
  409227:	or     BYTE PTR [edi],0xd7
  40922a:	jb     0x409273
  40922c:	scas   eax,DWORD PTR es:[edi]
  40922d:	ins    DWORD PTR es:[edi],dx
  40922e:	aam    0xa0
  409230:	push   ebx
  409231:	aad    0xb1
  409233:	shr    DWORD PTR [eax-0x25],1
  409236:	pop    ecx
  409237:	mov    fs,WORD PTR [esp+ecx*1]
  40923a:	out    dx,al
  40923b:	mov    ecx,0xf768b755
  409240:	xchg   BYTE PTR [edx-0x3b1f8102],ch
  409246:	or     eax,0xad41d2c9
  40924b:	mov    ds:0xa6cca94c,al
  409250:	sub    eax,0x52e3dc36
  409255:	add    edi,DWORD PTR [edi+0x67]
  409258:	pop    es
  409259:	dec    ecx
  40925a:	pop    esp
  40925b:	mov    eax,0x124477ce
  409260:	sti    
  409261:	in     al,dx
  409262:	test   eax,0xde3bbb68
  409267:	enter  0xdd3,0xe3
  40926b:	add    DWORD PTR [ebx-0x667651fd],ebp
  409271:	jecxz  0x409281
  409273:	dec    ebx
  409274:	sub    BYTE PTR [edi+esi*2+0x1639159f],cl
  40927b:	jno    0x40928b
  40927d:	inc    BYTE PTR [edi-0x632a42fa]
  409283:	mov    al,ds:0xe12f76bb
  409288:	mov    bh,0x1c
  40928a:	inc    ebp
  40928b:	lods   al,BYTE PTR ds:[esi]
  40928c:	adc    BYTE PTR [edx+0x3c],dl
  40928f:	or     ah,BYTE PTR [ebp+eax*1-0x6]
  409293:	test   eax,0xb8696aa7
  409298:	retf   
  409299:	push   edi
  40929a:	stc    
  40929b:	pop    esp
  40929c:	les    esi,FWORD PTR ds:0xd1deefc8
  4092a2:	iret   
  4092a3:	bound  ebp,QWORD PTR [esi+edx*8+0xbef4445]
  4092aa:	inc    ebp
  4092ab:	lock ja 0x409264
  4092ae:	sbb    ch,0x6
  4092b1:	inc    esp
  4092b2:	lods   al,BYTE PTR ds:[esi]
  4092b3:	cmp    cl,BYTE PTR [edi-0x4f0cbc50]
  4092b9:	mov    esp,0x186737a0
  4092be:	mov    dh,0xd6
  4092c0:	fild   DWORD PTR [edx]
  4092c2:	hlt    
  4092c3:	mov    bh,0x1f
  4092c5:	ins    DWORD PTR es:[edi],dx
  4092c6:	fdiv   QWORD PTR [ecx+0x27]
  4092c9:	dec    esi
  4092ca:	jle    0x40926d
  4092cc:	jmp    0x444d:0x4a291cf5
  4092d3:	mov    edi,0x9067cb3e
  4092d8:	and    BYTE PTR [ebx],al
  4092da:	mov    ebx,0xc5ffe26b
  4092df:	ret    
  4092e0:	into   
  4092e1:	shl    bh,cl
  4092e3:	cli    
  4092e4:	lahf   
  4092e5:	loope  0x409302
  4092e7:	push   ecx
  4092e8:	fs dec ecx
  4092ea:	idiv   BYTE PTR ds:0xa8969864
  4092f0:	rcl    BYTE PTR [ecx-0x2f56d534],0xcb
  4092f7:	(bad)  
  4092f8:	iret   
  4092f9:	dec    ecx
  4092fa:	mov    esp,DWORD PTR [edx+0x79]
  4092fd:	scas   al,BYTE PTR es:[edi]
  4092fe:	and    BYTE PTR [ebp-0xe],cl
  409301:	ret    0x2cbe
  409304:	pop    ebp
  409305:	sub    cl,BYTE PTR [edx+0x1451ba37]
  40930b:	dec    eax
  40930c:	and    BYTE PTR [eax+0x34878d84],al
  409312:	test   DWORD PTR [ebx-0x43],0x2ab3661a
  409319:	push   ecx
  40931a:	sbb    dh,BYTE PTR ds:0xeb3d4a55
  409320:	add    al,BYTE PTR [esi]
  409322:	push   0x1ad3dc13
  409327:	xor    DWORD PTR [ebx-0x129eaca0],0x753168e2
  409331:	mov    bl,BYTE PTR [ebp+0x3d]
  409334:	ds out dx,al
  409336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409337:	mov    cl,ch
  409339:	sbb    BYTE PTR [esi-0x26],bh
  40933c:	ror    BYTE PTR [ebx-0x11],cl
  40933f:	ret    
  409340:	xchg   ebx,eax
  409341:	test   eax,0x2e499592
  409347:	aam    0x5e
  409349:	ja     0x4092ef
  40934b:	lods   eax,DWORD PTR ds:[esi]
  40934c:	ror    BYTE PTR [eax+0x23],1
  40934f:	jmp    0x4093b4
  409351:	(bad)  
  409352:	ds jp  0x4092f1
  409355:	push   eax
  409357:	cmp    BYTE PTR [esi-0x3b],0xc2
  40935b:	push   esp
  40935c:	(bad)  
  40935d:	xchg   esp,eax
  40935e:	sbb    DWORD PTR [ebx-0x7a],0x43873e45
  409365:	cmp    eax,0x2b5cd8ba
  40936a:	xchg   ecx,eax
  40936b:	aad    0xf6
  40936d:	cmp    al,BYTE PTR [ebp-0x26]
  409370:	sbb    ch,BYTE PTR [eax+ebp*8]
  409373:	push   es
  409374:	push   0x3a60fd20
  409379:	xchg   edx,eax
  40937a:	mov    ah,0x23
  40937c:	aad    0xa3
  40937e:	jne    0x409386
  409380:	jp     0x40935b
  409382:	and    al,0xba
  409384:	stos   DWORD PTR es:[edi],eax
  409385:	shl    BYTE PTR [ecx-0x6ca2da0d],0x8a
  40938c:	pop    ss
  40938d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938e:	enter  0xf18d,0x9f
  409392:	inc    esp
  409393:	sti    
  409394:	xor    eax,0x917bcfc8
  409399:	call   0xcfb9:0x74b22bd
  4093a0:	pop    ebx
  4093a1:	(bad)  
  4093a2:	int    0xa5
  4093a4:	mov    ch,dl
  4093a6:	sahf   
  4093a7:	lea    edi,[eax-0x75]
  4093aa:	inc    ebp
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42a7d9,0x42a789
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x8daaff3d
  4093fb:	inc    edi
  4093fc:	push   ebx
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x409407
  409406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409407:	add    eax,0xad4d770a
  40940c:	sub    al,0x53
  40940e:	iret   
  40940f:	sub    bl,BYTE PTR [edi]
  409411:	(bad)  
  409412:	push   esi
  409413:	cmp    ebp,DWORD PTR [edi+ebx*1+0x6c]
  409417:	out    dx,eax
  409418:	nop
  409419:	lock or BYTE PTR ds:[esi+0x1],0x53
  40941f:	les    eax,FWORD PTR [ebx]
  409421:	bound  ecx,QWORD PTR [ebx]
  409423:	out    dx,eax
  409424:	cmp    al,0xa6
  409426:	push   ebp
  409427:	daa    
  409428:	push   esi
  409429:	and    ebx,DWORD PTR [eax+0x7a1e5bac]
  40942f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409430:	sbb    eax,0x6f645c1c
  409435:	pushf  
  409436:	sbb    BYTE PTR [edi],al
  409438:	jno    0x409478
  40943a:	arpl   WORD PTR [ebp-0x67],sp
  40943d:	xchg   ebp,eax
  40943e:	mov    ds:0x4e5eb9fc,al
  409443:	popf   
  409444:	clc    
  409445:	add    edx,DWORD PTR [ecx+0x48]
  409448:	cwde   
  409449:	jg     0x4093d2
  40944b:	std    
  40944c:	(bad)  [edx-0x4]
  40944f:	and    BYTE PTR [eax+0x10d8afec],ah
  409455:	push   ebx
  409456:	add    eax,0x7408d7a1
  40945b:	push   cs
  40945c:	out    0x3e,eax
  40945e:	xchg   edx,eax
  40945f:	ins    BYTE PTR es:[edi],dx
  409460:	stc    
  409461:	sahf   
  409462:	mov    eax,ds:0x23228ff5
  409467:	(bad)
  40946a:	pop    edx
  40946b:	xchg   esi,eax
  40946c:	dec    ecx
  40946d:	inc    ebx
  40946e:	xchg   ecx,eax
  40946f:	sbb    edi,0xae74b8c3
  409475:	mov    ebx,0xdbef2878
  40947a:	scas   eax,DWORD PTR es:[edi]
  40947b:	js     0x409470
  40947d:	shl    DWORD PTR [eax],1
  40947f:	dec    eax
  409480:	addr16 ret 0x4018
  409484:	jae    0x409487
  409486:	jno    0x409482
  409488:	mov    ebp,0xecddccb7
  40948d:	sbb    al,0xa9
  40948f:	lock frstor [edx-0x73]
  409493:	hlt    
  409494:	in     al,0xea
  409496:	adc    eax,DWORD PTR [edx+0x40]
  409499:	cmp    DWORD PTR [edx+0x49],ebp
  40949c:	add    al,al
  40949e:	aam    0xd0
  4094a0:	retf   0x877
  4094a3:	sub    DWORD PTR [ecx-0x656e8246],ebx
  4094a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094aa:	aad    0x78
  4094ac:	add    eax,0x467ad470
  4094b1:	add    al,0xe4
  4094b3:	jl     0x40950d
  4094b5:	inc    ebx
  4094b6:	pop    ds
  4094b7:	mov    ah,0xe5
  4094b9:	jno    0x409449
  4094bb:	nop
  4094bc:	bound  edi,QWORD PTR [edx+0x14]
  4094bf:	in     eax,dx
  4094c0:	in     al,0x2b
  4094c2:	mov    edx,0x1ec5d5e0
  4094c7:	loop   0x409502
  4094c9:	mov    ah,0x4d
  4094cb:	call   0xd446:0x7994daea
  4094d2:	mov    al,ds:0x383b6fd9
  4094d7:	add    esi,eax
  4094d9:	sbb    BYTE PTR [esi+edx*1-0x41],dl
  4094dd:	jp     0x409483
  4094df:	or     BYTE PTR [edx+0x5f],0x1
  4094e3:	lds    ebx,FWORD PTR [esi]
  4094e5:	add    BYTE PTR [ebx+0x29d92483],0x38
  4094ec:	sub    BYTE PTR [edx-0x4206c372],bl
  4094f2:	fucomi st,st(3)
  4094f4:	(bad)  
  4094f5:	adc    BYTE PTR [edx],ch
  4094f7:	mov    cl,0x5b
  4094f9:	pop    es
  4094fa:	mov    ebp,0x52a3b061
  4094ff:	faddp  st(2),st
  409501:	ds add al,0xf6
  409504:	mov    esp,ecx
  409506:	mov    ecx,0xa1690065
  40950b:	jae    0x40956d
  40950d:	(bad)  
  40950e:	sub    DWORD PTR [esi+0x5a],esp
  409511:	xchg   esp,eax
  409512:	mov    WORD PTR [esi],?
  409514:	jae    0x4094ad
  409516:	xor    BYTE PTR [eax-0x6f3c77d4],cl
  40951c:	repz sub al,0x27
  40951f:	push   ecx
  409520:	mov    esi,0x4600d4eb
  409525:	in     eax,0x79
  409527:	ins    BYTE PTR es:[edi],dx
  409528:	addr16 adc dl,cl
  40952b:	inc    BYTE PTR [eax-0x30]
  40952e:	outs   dx,BYTE PTR ds:[esi]
  40952f:	adc    al,0xb3
  409531:	xchg   ebx,eax
  409532:	fdivr  DWORD PTR [edi]
  409534:	jmp    0x40955d
  409536:	lock mov dh,0x73
  409539:	(bad)  [edi-0x2d]
  40953c:	gs lods eax,DWORD PTR ss:[esi]
  40953f:	fst    st(3)
  409541:	or     DWORD PTR [edi],ecx
  409543:	xor    BYTE PTR [eax-0x3b9090a7],dh
  409549:	test   BYTE PTR [ebx-0x54],dl
  40954c:	ins    BYTE PTR es:[edi],dx
  40954d:	in     eax,0x92
  40954f:	or     eax,0xfe0ddc54
  409554:	adc    DWORD PTR [ebp+0x7d461a42],ebp
  40955a:	push   ecx
  40955b:	dec    edi
  40955c:	jp     0x40958f
  40955e:	rol    al,1
  409560:	mov    ebx,0x2e7ee10f
  409565:	retf   0x8841
  409568:	cwde   
  409569:	scas   eax,DWORD PTR es:[edi]
  40956a:	sbb    edx,DWORD PTR [ecx-0x6af0eaee]
  409570:	dec    ebx
  409571:	pop    esp
  409572:	mov    bl,0x62
  409574:	xchg   edi,eax
  409575:	sahf   
  409576:	dec    esi
  409577:	jmp    FWORD PTR [ebp+0x6e698fea]
  40957d:	jo     0x409588
  40957f:	adc    eax,0xda36971f
  409584:	add    BYTE PTR [ebp+edx*1+0x376879e4],bl
  40958b:	jb     0x40957f
  40958d:	lds    esp,FWORD PTR [ecx+0x1b8bd0c8]
  409593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409594:	lock and DWORD PTR [edi+ebx*8+0x77],esp
  409599:	dec    eax
  40959a:	mov    bh,0x2a
  40959c:	cmp    BYTE PTR [ebp+0x281a30e9],ch
  4095a2:	ja     0x409549
  4095a4:	addr16 (bad) 
  4095a6:	fisubr DWORD PTR [edi+0x20a7795c]
  4095ac:	adc    BYTE PTR [edi-0x5b3bcb90],al
  4095b2:	int    0x6b
  4095b4:	jl     0x409595
  4095b6:	xor    eax,DWORD PTR [edi+0x4610e7c8]
  4095bc:	dec    esp
  4095bd:	xchg   BYTE PTR [ebx+0x158fce],ah
  4095c3:	inc    ebp
  4095c4:	mov    ebp,0x366f8174
  4095c9:	xor    BYTE PTR [ebp+0x3],cl
  4095cc:	or     bl,BYTE PTR [edx-0x24]
  4095cf:	mov    bl,0x2e
  4095d1:	mov    dl,0x63
  4095d3:	ret    
  4095d4:	es xchg esp,eax
  4095d6:	xchg   ecx,eax
  4095d7:	jge    0x4095c6
  4095d9:	mov    edi,DWORD PTR [esi+0x62]
  4095dc:	loope  0x4095a3
  4095de:	addr16 jae 0x409578
  4095e1:	out    0x59,al
  4095e3:	push   esi
  4095e4:	in     eax,dx
  4095e5:	xor    BYTE PTR [ebx+0x7c1ced12],ch
  4095eb:	inc    eax
  4095ec:	shl    DWORD PTR [edi+eax*8-0x33],1
  4095f0:	jge    0x409583
  4095f2:	cmp    bh,cl
  4095f4:	aad    0xd5
  4095f6:	dec    ecx
  4095f7:	sbb    eax,0x63c4504e
  4095fc:	push   ebp
  4095fd:	(bad)  
  4095fe:	(bad)  
  4095ff:	out    0x43,al
  409601:	inc    eax
  409602:	outs   dx,BYTE PTR ds:[esi]
  409603:	aam    0xc4
  409605:	add    ah,BYTE PTR [ecx+0x1e]
  409608:	outs   dx,BYTE PTR ds:[esi]
  409609:	add    eax,0x5b898af7
  40960e:	xor    al,0x7e
  409610:	jns    0x4095f2
  409612:	push   ecx
  409613:	mov    ah,0x62
  409615:	mov    ds:0x77df8b6c,al
  40961a:	mov    ebx,0xd1644072
  40961f:	jecxz  0x409655
  409621:	sbb    al,0x41
  409623:	leave  
  409624:	icebp  
  409625:	(bad)  
  409627:	dec    ecx
  409628:	mov    edi,ecx
  40962a:	pop    esp
  40962b:	and    al,0x6f
  40962d:	imul   esp,DWORD PTR [edx],0x38602
  409633:	xor    bl,BYTE PTR [eax+ebx*4-0x9060f21]
  40963a:	ins    DWORD PTR es:[edi],dx
  40963b:	dec    eax
  40963c:	pushf  
  40963d:	das    
  40963e:	cli    
  40963f:	daa    
  409640:	aad    0x96
  409642:	xchg   esp,eax
  409643:	pop    eax
  409644:	inc    esi
  409645:	aam    0x37
  409647:	enter  0x71f7,0x8c
  40964b:	ret    
  40964c:	push   ebp
  40964d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40964e:	lahf   
  40964f:	sub    BYTE PTR [edi+0x16],cl
  409652:	leave  
  409653:	rcl    BYTE PTR [ebx+0x5c],1
  409656:	out    0x9c,al
  409658:	xchg   ecx,eax
  409659:	pop    es
  40965a:	or     BYTE PTR [edi*2-0x79947505],ch
  409661:	scas   al,BYTE PTR es:[edi]
  409662:	mov    ?,esp
  409664:	aaa    
  409665:	dec    edi
  409666:	adc    cl,BYTE PTR [esi+0x5e89cc57]
  40966c:	dec    esi
  40966d:	add    al,0xc6
  40966f:	jb     0x4095fa
  409671:	adc    esp,DWORD PTR [esi-0x1b]
  409674:	jmp    0x8ea6:0xda1e6a04
  40967b:	jno    0x4096a7
  40967d:	in     al,0xe2
  40967f:	ss inc eax
  409681:	jmp    0x7dfd:0x46751042
  409688:	dec    eax
  409689:	xchg   edx,eax
  40968a:	or     ebx,DWORD PTR [ebx+ebp*4+0x46758d66]
  409691:	cmc    
  409692:	loop   0x409683
  409694:	lea    esp,[ebx+0x7e5f8b41]
  40969a:	adc    DWORD PTR [ebx],edx
  40969c:	mov    ch,0x5a
  40969e:	ret    0xe7c5
  4096a1:	mov    al,0x96
  4096a3:	and    BYTE PTR [edx],ch
  4096a5:	sub    eax,esp
  4096a7:	outs   dx,DWORD PTR ds:[esi]
  4096a8:	std    
  4096a9:	xchg   esp,eax
  4096aa:	sub    edx,DWORD PTR [edi-0x3b]
  4096ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ae:	mov    eax,DWORD PTR [ebp-0x4]
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0xd
  4096e4:	lds    ebx,FWORD PTR [eax+0x75]
  4096e7:	pop    esp
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409765
  4096f0:	dec    ebp
  4096f1:	pushf  
  4096f2:	popa   
  4096f3:	stos   DWORD PTR es:[edi],eax
  4096f4:	cmp    ecx,edx
  4096f6:	xor    edi,DWORD PTR [edi+0x20]
  4096f9:	into   
  4096fa:	std    
  4096fb:	in     eax,0x33
  4096fd:	mov    cs,WORD PTR [edx]
  4096ff:	xchg   ebp,edi
  409701:	popf   
  409702:	pop    edx
  409703:	lock dec eax
  409705:	aaa    
  409706:	daa    
  409707:	mov    ebp,0x6df2fcbc
  40970c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970d:	xchg   edx,eax
  40970e:	ins    BYTE PTR es:[edi],dx
  40970f:	repz iret 
  409711:	lds    edx,FWORD PTR [esi+edi*2-0x57cdd9b2]
  409718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409719:	sub    BYTE PTR [ecx-0xd299ec2],cl
  40971f:	push   cs
  409720:	retf   0x79cc
  409723:	sti    
  409724:	xor    DWORD PTR [esi-0x71],0xffffff8b
  409728:	mov    BYTE PTR [ebx],al
  40972a:	cld    
  40972b:	push   edx
  40972c:	or     BYTE PTR [esi-0x1f],ah
  40972f:	and    bl,bh
  409731:	stos   DWORD PTR es:[edi],eax
  409732:	add    dh,bl
  409734:	popa   
  409735:	into   
  409736:	and    eax,0x34569296
  40973b:	dec    esi
  40973c:	inc    edi
  40973d:	gs mov cl,0xf6
  409740:	mov    ebp,edi
  409742:	mov    dh,BYTE PTR [edi+0x5a649e6a]
  409748:	jl     0x4097ad
  40974a:	mov    bl,0x9f
  40974c:	test   al,0x22
  40974e:	mov    ah,0x6e
  409750:	sbb    ah,BYTE PTR [eax-0x75]
  409753:	sti    
  409754:	pop    ebp
  409755:	cs jno 0x4096dc
  409758:	retf   0x401c
  40975b:	cmp    bl,BYTE PTR [esp+edx*4-0x490e43c1]
  409762:	lea    edi,[si-0x3404]
  409767:	clc    
  409768:	loop   0x409773
  40976a:	(bad)  
  40976b:	push   cs
  40976c:	retf   0x1050
  40976f:	add    al,0x66
  409771:	pop    edi
  409772:	push   esp
  409773:	(bad)  
  409774:	jb     0x40978b
  409776:	add    DWORD PTR [esi-0xc],esp
  409779:	inc    ebp
  40977a:	shl    DWORD PTR [esi+0x67ff4d3b],cl
  409780:	dec    edx
  409781:	fld    TBYTE PTR [edx+0x1e]
  409784:	push   0xfffffffe
  409786:	int3   
  409787:	fld    DWORD PTR [ebx+0x3e]
  40978a:	dec    eax
  40978b:	or     eax,0x9629edfb
  409790:	(bad)  
  409791:	cmp    ebx,DWORD PTR [ecx-0x5d]
  409794:	(bad)  
  409795:	push   eax
  409796:	xchg   esp,eax
  409797:	and    dh,0x3b
  40979a:	ss das 
  40979c:	and    al,0xe5
  40979e:	mov    DWORD PTR [esi+0x38],esi
  4097a1:	out    dx,eax
  4097a2:	in     al,dx
  4097a3:	push   ds
  4097a4:	mov    bh,0xe7
  4097a6:	aas    
  4097a7:	xchg   esp,eax
  4097a8:	add    al,0xe5
  4097aa:	or     BYTE PTR [edx],dl
  4097ac:	test   BYTE PTR [esi+0x10bddaac],cl
  4097b2:	and    dl,ah
  4097b4:	mov    eax,0xfc0b44e2
  4097b9:	ins    DWORD PTR es:[edi],dx
  4097ba:	mov    ds:0xac130a4f,al
  4097bf:	add    bh,BYTE PTR [ecx-0xf]
  4097c2:	mov    dl,0x57
  4097c4:	aam    0x5a
  4097c6:	push   DWORD PTR [ebx-0x3d12b9db]
  4097cc:	lahf   
  4097cd:	call   0xa860d89
  4097d2:	push   es
  4097d3:	outs   dx,BYTE PTR ds:[esi]
  4097d4:	xor    ch,al
  4097d6:	inc    edx
  4097d7:	add    al,0x41
  4097d9:	mov    ds:0x57f46e34,al
  4097de:	dec    ebx
  4097df:	gs dec edi
  4097e1:	mov    edx,DWORD PTR [ecx]
  4097e3:	sbb    dl,BYTE PTR [ecx]
  4097e5:	mov    esp,0x211451f1
  4097ea:	push   ebx
  4097eb:	cmp    al,0x7f
  4097ed:	jp     0x4097a1
  4097ef:	and    al,0xd4
  4097f1:	mov    eax,ds:0xde497f76
  4097f6:	xor    al,0x9c
  4097f8:	dec    esi
  4097f9:	xchg   ebp,eax
  4097fb:	sbb    al,0xe1
  4097fd:	mov    bh,0x62
  4097ff:	or     DWORD PTR [edi+0x6a0504fd],ecx
  409805:	fcom   QWORD PTR [ebp+0x52997d5b]
  40980b:	(bad)  
  40980c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40980d:	pop    es
  40980e:	bound  esi,QWORD PTR [edi]
  409810:	or     ch,BYTE PTR [ebp+0x4c]
  409813:	daa    
  409814:	xchg   esi,eax
  409815:	outs   dx,BYTE PTR ds:[esi]
  409816:	pop    ds
  409817:	sahf   
  409818:	loopne 0x40981a
  40981a:	dec    ebp
  40981b:	ror    BYTE PTR [esi-0x6f],1
  40981e:	pop    es
  40981f:	cwde   
  409820:	fimul  DWORD PTR [ebx+0x4b7d5c47]
  409826:	push   esp
  409827:	cmp    bl,ch
  409829:	sbb    ch,BYTE PTR [edi+0x61]
  40982c:	cmp    BYTE PTR [edx-0x5],0x78
  409830:	cld    
  409831:	adc    ecx,DWORD PTR [ebx-0x42]
  409834:	jecxz  0x409823
  409836:	scas   eax,DWORD PTR es:[edi]
  409837:	bswap  ecx
  409839:	sbb    esp,edx
  40983b:	fst    DWORD PTR [esi+0x118a3f76]
  409841:	xchg   ebp,eax
  409842:	add    BYTE PTR [ebp-0x5e],ch
  409845:	and    ah,al
  409847:	pop    ecx
  409848:	sbb    eax,0xdb8c61d2
  40984d:	inc    eax
  40984e:	(bad)  
  40984f:	adc    dl,BYTE PTR [edx+0x5ae232f4]
  409855:	ins    BYTE PTR es:[edi],dx
  409856:	adc    al,0x9
  409858:	fisttp WORD PTR [ecx-0x40eb378d]
  40985e:	int3   
  40985f:	cmp    edx,DWORD PTR [ebx]
  409861:	or     edx,esi
  409863:	in     eax,0x2b
  409865:	pop    edi
  409866:	aad    0xd0
  409868:	push   ecx
  409869:	push   ds
  40986a:	aam    0xcc
  40986c:	cmc    
  40986d:	call   0x2ec:0xf6960cd8
  409874:	push   edi
  409875:	nop
  409876:	in     eax,dx
  409877:	(bad)  
  409878:	leave  
  409879:	int    0x82
  40987b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40987c:	out    dx,al
  40987d:	mov    esp,0xfac419cf
  409882:	retf   
  409883:	and    DWORD PTR [edi+0x7ad7369],eax
  409889:	pop    ebx
  40988a:	fistp  QWORD PTR [eax-0x7bd97dc8]
  409890:	jmp    0x60da:0xa9b75c58
  409897:	out    dx,eax
  409898:	arpl   WORD PTR [eax+0xa],bp
  40989b:	sti    
  40989c:	icebp  
  40989d:	jle    0x409833
  40989f:	mov    ch,0xf5
  4098a1:	sbb    BYTE PTR [edx+ecx*4-0x343809e6],0x5d
  4098a9:	je     0x409917
  4098ab:	les    ecx,FWORD PTR [edi]
  4098ad:	loop   0x409863
  4098af:	sub    al,0x2
  4098b1:	sub    eax,ecx
  4098b3:	xchg   DWORD PTR [edi],ebp
  4098b5:	shl    BYTE PTR [eax+0x31],cl
  4098b8:	dec    edx
  4098b9:	scas   al,BYTE PTR es:[edi]
  4098ba:	cmp    edi,DWORD PTR [esi+0x393f1716]
  4098c0:	out    0xf9,al
  4098c2:	xor    al,0xd4
  4098c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c5:	cmp    eax,0xfddda9d9
  4098ca:	push   cs
  4098cb:	and    BYTE PTR [ecx],0x46
  4098ce:	dec    ebx
  4098cf:	pop    eax
  4098d0:	test   ebp,0x22ce3fcf
  4098d6:	cmp    edi,DWORD PTR [eax+0xca82034]
  4098dc:	and    ch,BYTE PTR [eax-0x9]
  4098df:	pop    ebp
  4098e0:	outs   dx,BYTE PTR ds:[esi]
  4098e1:	mov    bl,0xaa
  4098e3:	inc    eax
  4098e4:	aam    0xd1
  4098e6:	outs   dx,DWORD PTR ds:[esi]
  4098e7:	xchg   BYTE PTR [edi],bl
  4098e9:	idiv   BYTE PTR [edi+0x61774092]
  4098ef:	jns    0x4098a0
  4098f1:	fnstcw WORD PTR [edx+eax*2+0x51]
  4098f5:	repnz hlt 
  4098f7:	sahf   
  4098f8:	dec    ebx
  4098f9:	xchg   ebx,eax
  4098fa:	les    edx,FWORD PTR [ecx+edi*4+0x39]
  4098fe:	test   al,0xad
  409900:	fldenv [edx-0x6e07c8df]
  409906:	adc    al,0xe
  409908:	aam    0xb0
  40990a:	stos   DWORD PTR es:[edi],eax
  40990b:	add    al,0xd8
  40990d:	cmc    
  40990e:	inc    ebx
  40990f:	push   ebx
  409910:	dec    esi
  409911:	cmp    eax,0x662f58cd
  409916:	mov    dl,0x9d
  409918:	sar    BYTE PTR [edx+ebp*4+0x3410b500],cl
  40991f:	mov    edi,0x20327c8a
  409924:	push   ds
  409925:	(bad)  
  409926:	xrelease xchg BYTE PTR [edi+0x1ff6f050],ch
  40992d:	jns    0x4098be
  40992f:	pusha  
  409930:	cdq    
  409931:	or     eax,0x1a93ee71
  409936:	fisub  DWORD PTR [eax-0x3de38c7c]
  40993c:	sub    eax,0x30364ff8
  409941:	call   0x567e121a
  409946:	fdiv   QWORD PTR [eax-0x1a]
  409949:	push   ds
  40994a:	mov    ebx,0xb6cf8e0
  40994f:	sbb    ebp,DWORD PTR [ecx]
  409951:	mov    ds:0x4108cb18,eax
  409956:	(bad)  
  409957:	rcl    DWORD PTR [esi-0x20],1
  40995a:	dec    esi
  40995b:	repz cmc 
  40995d:	push   cs
  40995e:	lock cmova esp,DWORD PTR [ebp+0x15]
  409963:	inc    edx
  409964:	pusha  
  409965:	xor    ecx,edx
  409967:	retf   
  409968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409969:	retf   
  40996a:	pop    ecx
  40996b:	cmp    BYTE PTR [ecx-0x4a954761],dh
  409971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409972:	add    cl,BYTE PTR [eax+0x71131e33]
  409978:	pop    ds
  409979:	jecxz  0x4099f2
  40997b:	cmc    
  40997c:	jns    0x409903
  40997e:	xchg   ecx,eax
  40997f:	daa    
  409980:	idiv   DWORD PTR [ecx-0x66]
  409983:	int    0x9e
  409985:	test   edx,eax
  409987:	fbld   TBYTE PTR [esi-0x3906d1b6]
  40998d:	xor    ebp,edx
  40998f:	mov    edi,0x791c0fe9
  409994:	(bad)  
  409995:	nop
  409996:	mov    ah,BYTE PTR [ebp-0x79382201]
  40999c:	jg     0x4099fb
  40999e:	icebp  
  40999f:	sub    al,0x12
  4099a1:	dec    esp
  4099a2:	jecxz  0x4099b2
  4099a4:	jae    0x409a1e
  4099a6:	pop    ecx
  4099a7:	call   DWORD PTR [ebp+0x1c1e833c]
  4099ad:	dec    esp
  4099ae:	push   esp
  4099af:	into   
  4099b0:	and    ecx,DWORD PTR [ebx]
  4099b2:	(bad)  
  4099b3:	stos   DWORD PTR es:[edi],eax
  4099b4:	pop    es
  4099b5:	push   esp
  4099b6:	inc    esi
  4099b7:	loop   0x409966
  4099b9:	dec    ebx
  4099ba:	js     0x409a15
  4099bc:	(bad)  [ecx+ebx*1-0x68]
  4099c0:	push   esp
  4099c1:	(bad)  [edx+edx*1+0x15895133]
  4099c8:	xchg   ebp,eax
  4099c9:	test   al,0x42
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0xa505c705,eax
  4099d5:	test   al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a895,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a819,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a799
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0x1fec14cf]
  409a19:	add    ah,BYTE PTR [edx+0x78f7b67f]
  409a1f:	js     0x409a73
  409a21:	jle    0x409a9b
  409a23:	js     0x409a78
  409a25:	jns    0x4099e9
  409a27:	jmp    FWORD PTR [esi]
  409a29:	(bad)  
  409a2a:	mov    ah,ah
  409a2c:	mov    bl,0x52
  409a2e:	or     BYTE PTR [esi+0x3e4e222b],cl
  409a34:	xor    al,BYTE PTR [eax+0x6d10110f]
  409a3a:	(bad)  
  409a3b:	clc    
  409a3c:	xor    DWORD PTR [ecx],esi
  409a3e:	bound  ecx,QWORD PTR [eax-0x28]
  409a41:	sub    al,0x99
  409a43:	adc    DWORD PTR gs:[ebp+0x314a8781],ebp
  409a4a:	xchg   ebp,eax
  409a4b:	xchg   edx,eax
  409a4c:	popf   
  409a4d:	ror    BYTE PTR [edx],1
  409a4f:	push   es
  409a50:	sbb    ah,ch
  409a52:	xchg   DWORD PTR [ebx],edx
  409a54:	ja     0x409ab3
  409a56:	xchg   BYTE PTR [eax-0x1c],cl
  409a59:	test   DWORD PTR [eax],edi
  409a5b:	stos   BYTE PTR es:[edi],al
  409a5c:	inc    ebx
  409a5d:	punpcklwd mm3,DWORD PTR [edi+esi*1+0x2e]
  409a62:	mov    BYTE PTR [esi],al
  409a64:	les    ebx,FWORD PTR [ebx-0x15]
  409a67:	test   eax,0x9aaa27e2
  409a6c:	out    0x9a,eax
  409a6e:	scas   eax,DWORD PTR es:[edi]
  409a6f:	dec    esi
  409a70:	mov    ecx,0x54092394
  409a75:	dec    ebx
  409a76:	into   
  409a77:	pop    ecx
  409a78:	das    
  409a79:	outs   dx,DWORD PTR ds:[esi]
  409a7a:	mov    esi,0x6306300a
  409a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a80:	pop    ds
  409a81:	adc    DWORD PTR [ebp-0x31f6a675],esi
  409a87:	leave  
  409a88:	scas   eax,DWORD PTR es:[edi]
  409a89:	adc    esi,DWORD PTR [esi-0x7b]
  409a8c:	adc    al,BYTE PTR [edx]
  409a8e:	inc    eax
  409a8f:	pop    ebp
  409a90:	ins    BYTE PTR es:[edi],dx
  409a91:	test   al,0x4a
  409a93:	mov    ds:0x7837efc9,eax
  409a98:	and    al,0xdf
  409a9a:	shl    BYTE PTR [ecx+0x60],cl
  409a9d:	xor    al,0xc7
  409a9f:	fld    QWORD PTR [edx+0x992626a]
  409aa5:	jnp    0x409ac7
  409aa7:	js     0x409b0f
  409aa9:	inc    esp
  409aaa:	out    dx,eax
  409aab:	push   es
  409aac:	(bad)  
  409aad:	and    ebx,eax
  409aaf:	arpl   WORD PTR [ecx+0x6ee4ba60],sp
  409ab5:	cmp    al,ah
  409ab7:	nop
  409ab8:	push   0x6e4c9b76
  409abd:	stos   DWORD PTR es:[edi],eax
  409abe:	pop    ebx
  409abf:	jmp    0x409ac4
  409ac1:	(bad)  
  409ac2:	cli    
  409ac3:	push   edi
  409ac4:	or     BYTE PTR [edi],ch
  409ac6:	xor    DWORD PTR [edi-0x6ab601b0],esp
  409acc:	jl     0x409af2
  409ace:	mov    ebp,0x69c4ef97
  409ad3:	sub    BYTE PTR [ebx+0x6f4fc2bd],bh
  409ad9:	cmp    BYTE PTR [ebx-0x87af820],0xe1
  409ae0:	cmc    
  409ae1:	adc    DWORD PTR [esi],0xffffffa4
  409ae4:	jo     0x409ac4
  409ae6:	and    esp,DWORD PTR [esi-0x4586835a]
  409aec:	xor    esi,DWORD PTR [esi-0x5b]
  409aef:	test   eax,esp
  409af1:	sub    bh,cl
  409af3:	ret    
  409af4:	dec    eax
  409af5:	imul   esi,DWORD PTR [eax],0x223d121
  409afb:	outs   dx,BYTE PTR ds:[esi]
  409afc:	jp     0x409b0d
  409afe:	push   cs
  409aff:	adc    BYTE PTR [ebx+esi*2],ah
  409b02:	imul   esi,DWORD PTR [edx+edi*8],0x97dd54dc
  409b09:	sbb    BYTE PTR [eax-0x6d],0x3a
  409b0d:	inc    ebp
  409b0e:	les    esp,FWORD PTR [ebx-0xa8fd63a]
  409b14:	and    edx,eax
  409b16:	clc    
  409b17:	hlt    
  409b18:	std    
  409b19:	imul   ecx,DWORD PTR [edi],0x2c4f83e5
  409b1f:	inc    eax
  409b20:	pop    edx
  409b21:	dec    esi
  409b22:	ja     0x409b53
  409b24:	call   0x9c11:0x9147b6e8
  409b2b:	cmp    ebx,edi
  409b2d:	inc    eax
  409b2e:	cmp    eax,0x551cb70f
  409b33:	lods   al,BYTE PTR ds:[esi]
  409b34:	xor    eax,0x5a5d5469
  409b39:	pop    eax
  409b3a:	inc    eax
  409b3b:	and    al,0x46
  409b3d:	inc    bh
  409b3f:	fs pop edi
  409b41:	or     ah,BYTE PTR [edi]
  409b43:	xor    eax,0x5fdf4776
  409b48:	jle    0x409b89
  409b4a:	std    
  409b4b:	cmp    edx,ebp
  409b4d:	imul   esp,DWORD PTR [eax],0xa5f777f8
  409b53:	or     cl,BYTE PTR [edx]
  409b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b56:	je     0x409b9c
  409b58:	test   al,0xf9
  409b5a:	jb     0x409bb2
  409b5c:	and    al,0x1a
  409b5e:	or     eax,0x39fc205e
  409b63:	not    ch
  409b65:	shl    DWORD PTR [esp+edx*8+0x1733390f],1
  409b6c:	xchg   ebp,eax
  409b6d:	stos   BYTE PTR es:[edi],al
  409b6e:	mov    bh,bl
  409b70:	ja     0x409be5
  409b72:	mov    ds,WORD PTR [ecx+esi*1-0x5d]
  409b76:	mov    eax,0x8e984387
  409b7b:	aad    0x98
  409b7d:	lock sbb ebx,ebp
  409b80:	aaa    
  409b81:	ficomp DWORD PTR [esi+0x47]
  409b84:	push   edx
  409b85:	mov    al,ah
  409b87:	mov    ebx,0x308c7af5
  409b8c:	pushw  0x5956
  409b90:	xchg   ebp,eax
  409b91:	imul   edx,esi,0x22
  409b94:	imul   ebp,esp,0x22
  409b97:	hlt    
  409b98:	add    dl,BYTE PTR [ebx]
  409b9a:	leave  
  409b9b:	fild   QWORD PTR [edx]
  409b9d:	dec    esi
  409b9e:	hlt    
  409b9f:	ret    
  409ba0:	test   bh,dh
  409ba2:	mov    ds:0x319cd438,eax
  409ba7:	test   DWORD PTR [edx+0x1b],ecx
  409baa:	mov    bl,0x96
  409bac:	sub    edx,DWORD PTR [esi]
  409bae:	and    dl,BYTE PTR [ecx]
  409bb0:	iret   
  409bb1:	push   cs
  409bb2:	lods   al,BYTE PTR ds:[esi]
  409bb3:	xor    DWORD PTR [esi-0x636de044],edx
  409bb9:	in     eax,dx
  409bba:	xchg   ebx,eax
  409bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbc:	sub    al,al
  409bbe:	ja     0x409bc0
  409bc0:	cwde   
  409bc1:	aaa    
  409bc2:	lods   eax,DWORD PTR ds:[esi]
  409bc3:	xchg   ecx,eax
  409bc4:	test   dl,al
  409bc6:	jle    0x409be1
  409bc8:	sub    DWORD PTR [eax+eax*1],ebx
  409bcb:	loop   0x409c17
  409bcd:	mov    edi,0x26c32def
  409bd2:	int    0xc
  409bd4:	rol    BYTE PTR [ebx+0x724bb1a9],cl
  409bda:	sbb    esi,eax
  409bdc:	mov    eax,ds:0xf15a7526
  409be1:	and    DWORD PTR ds:0x2b87dbe9,esi
  409be7:	aas    
  409be8:	mov    ebx,0x1c46f2f9
  409bed:	aas    
  409bee:	push   esi
  409bef:	pusha  
  409bf0:	add    al,0x43
  409bf2:	xchg   ecx,eax
  409bf3:	push   ss
  409bf4:	ins    DWORD PTR es:[edi],dx
  409bf5:	shr    dh,cl
  409bf7:	dec    ecx
  409bf8:	(bad)  
  409bf9:	retf   0xa8b0
  409bfc:	sbb    eax,0x75913c
  409c01:	mov    bh,0xe3
  409c03:	pop    edi
  409c04:	(bad)  ds:0x7d558992
  409c0a:	cdq    
  409c0b:	mov    eax,ds:0x6a8d6bf3
  409c10:	adc    BYTE PTR [edi+ebx*8],0xbf
  409c14:	xchg   ebx,eax
  409c15:	and    ecx,esp
  409c17:	sub    eax,0x399ec42
  409c1c:	cmp    eax,0x9c9494a7
  409c21:	pop    eax
  409c22:	xor    eax,0xefd7d17c
  409c27:	adc    al,BYTE PTR [ebp-0x66]
  409c2a:	fdiv   DWORD PTR [edx-0x2]
  409c2d:	and    ebx,edx
  409c2f:	jl     0x409c1e
  409c31:	dec    esi
  409c32:	addr16 out 0x3b,eax
  409c35:	mov    cl,0x96
  409c37:	hlt    
  409c38:	test   DWORD PTR [ebx-0x4ba3a141],0xc4e27a42
  409c42:	adc    DWORD PTR [ecx-0x8684561],esp
  409c48:	xor    al,0xa5
  409c4a:	sbb    ebx,DWORD PTR [edi-0x5b]
  409c4d:	fsub   DWORD PTR [esi+0x196f49b6]
  409c53:	pop    esi
  409c54:	jmp    0xbfe9f643
  409c59:	leave  
  409c5a:	xor    ebp,0xa56f527a
  409c60:	jae    0x409c2f
  409c62:	mov    eax,0xbe1ec466
  409c67:	nop
  409c68:	mov    dh,0x22
  409c6a:	jb     0x409bf2
  409c6c:	dec    ecx
  409c6d:	push   esp
  409c6e:	add    al,0x32
  409c70:	xchg   ch,al
  409c72:	sbb    dh,al
  409c74:	or     ebx,DWORD PTR [ebx]
  409c76:	inc    edi
  409c77:	sbb    eax,DWORD PTR [ecx]
  409c79:	inc    ecx
  409c7a:	scas   eax,DWORD PTR es:[edi]
  409c7b:	fsubr  DWORD PTR [edi+esi*2-0x7fd8ab7a]
  409c82:	out    0xe5,eax
  409c84:	inc    ecx
  409c85:	push   eax
  409c86:	pop    edx
  409c87:	outs   dx,DWORD PTR ds:[esi]
  409c88:	push   0x89dfef5
  409c8d:	sbb    al,0xc7
  409c8f:	pop    ebp
  409c90:	outs   dx,BYTE PTR ds:[esi]
  409c91:	push   0x36
  409c93:	mov    dh,0xad
  409c95:	les    ebp,FWORD PTR [ebp+eax*4-0x61]
  409c99:	push   esp
  409c9a:	jecxz  0x409c9d
  409c9c:	xor    BYTE PTR [ecx+0x74],ch
  409c9f:	pop    ebx
  409ca0:	(bad)  
  409ca1:	aam    0xc7
  409ca3:	and    BYTE PTR [ecx+ebp*8+0x691c64ae],al
  409caa:	mov    WORD PTR [eax-0x1c],ss
  409cad:	adc    edi,DWORD PTR [edx-0x66]
  409cb0:	imul   esi,DWORD PTR [esi],0x56
  409cb3:	imul   ecx,DWORD PTR [eax+0x26a64c69],0x6e
  409cba:	nop
  409cbb:	mov    ch,0x9e
  409cbd:	add    cl,dh
  409cbf:	mov    eax,0xe4ea9c0e
  409cc4:	loope  0x409c73
  409cc6:	xchg   esi,eax
  409cc7:	iret   
  409cc8:	and    ch,ch
  409cca:	inc    ecx
  409ccb:	jge    0x409d2b
  409ccd:	push   ecx
  409cce:	sbb    al,0x15
  409cd0:	jecxz  0x409d33
  409cd2:	fwait
  409cd3:	out    0xf3,eax
  409cd5:	xlat   BYTE PTR ds:[ebx]
  409cd6:	dec    eax
  409cd7:	inc    ecx
  409cd8:	inc    esi
  409cd9:	popa   
  409cda:	(bad)  
  409cdb:	cmp    ah,BYTE PTR es:[esi+eiz*8]
  409cdf:	pop    ebx
  409ce0:	ror    DWORD PTR [ecx],1
  409ce2:	xchg   ebx,eax
  409ce3:	test   BYTE PTR [ebx],bl
  409ce5:	sti    
  409ce6:	sti    
  409ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ce8:	pop    eax
  409ce9:	cli    
  409cea:	mov    esi,0xb474a73d
  409cef:	pop    ebp
  409cf0:	push   ebx
  409cf1:	jbe    0x409c92
  409cf3:	and    DWORD PTR [edi+0x49ae7b6d],esi
  409cf9:	pcmpgtd mm1,QWORD PTR [ebx+0x1d81f845]
  409d00:	cdq    
  409d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d02:	inc    edx
  409d03:	add    BYTE PTR ds:0xb90042a8,ah
  409d09:	mov    al,BYTE PTR ss:[eax]
  409d0c:	add    BYTE PTR [esi+0x33],ah
  409d0f:	rol    DWORD PTR [ecx+0x5dd3e1],0x0
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a79d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a861,0x42a85d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a851,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi+0x15f4ff10],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409d40
  409d66:	popf   
  409d67:	sub    ebp,DWORD PTR [ecx]
  409d69:	repnz repnz mov ebx,0xcd37b76a
  409d70:	gs cmp ch,0x6a
  409d74:	sahf   
  409d75:	sbb    al,0xd9
  409d77:	sbb    eax,DWORD PTR [eax+0x42451e99]
  409d7d:	push   0x3871d8ee
  409d82:	cld    
  409d83:	xchg   ebp,eax
  409d84:	cmp    edi,DWORD PTR [edi+ebx*8+0x62]
  409d88:	push   edx
  409d89:	mov    al,0x56
  409d8b:	push   0xdc09a68e
  409d90:	inc    edi
  409d91:	sub    DWORD PTR [ebx+ebp*1-0x59a64993],ebp
  409d98:	out    0xae,al
  409d9a:	jno    0x409d37
  409d9c:	sub    ebp,edx
  409d9e:	pop    esp
  409d9f:	jne    0x409df6
  409da1:	aaa    
  409da2:	sbb    edi,eax
  409da4:	jo     0x409d60
  409da6:	mov    ecx,0x7d3022a6
  409dab:	lods   eax,DWORD PTR ds:[esi]
  409dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dad:	ror    BYTE PTR [ebp-0x3c4cdf33],0xe7
  409db4:	popf   
  409db5:	sub    esp,DWORD PTR [ebx-0x22]
  409db8:	dec    esi
  409db9:	sbb    dh,bl
  409dbb:	mov    DWORD PTR [ecx+esi*8-0x1a9222f9],ebp
  409dc2:	xor    cl,bh
  409dc4:	xor    al,0x9
  409dc6:	inc    esi
  409dc7:	lods   eax,DWORD PTR ds:[esi]
  409dc8:	sbb    al,0x42
  409dca:	cli    
  409dcb:	out    dx,al
  409dcc:	mov    esi,0xe0e07532
  409dd1:	test   BYTE PTR [eax+0x5ccb83e0],cl
  409dd7:	fisub  DWORD PTR [ecx-0x60]
  409dda:	ss push ebx
  409ddc:	inc    edi
  409ddd:	js     0x409d75
  409ddf:	out    0x54,eax
  409de1:	mov    eax,0x883fbb1f
  409de6:	arpl   WORD PTR [edx],sp
  409de8:	cdq    
  409de9:	lods   eax,DWORD PTR ds:[esi]
  409dea:	adc    bh,BYTE PTR [ebx-0x548385c3]
  409df0:	ds mov dh,0xa7
  409df3:	sti    
  409df4:	mov    al,ds:0x670febf
  409df9:	ins    DWORD PTR es:[edi],dx
  409dfa:	retf   0xbd50
  409dfd:	fnstsw WORD PTR [edx]
  409dff:	lahf   
  409e00:	loop   0x409e46
  409e02:	fcom   DWORD PTR [edx]
  409e04:	mov    ebp,0xcbd496f
  409e09:	pop    DWORD PTR [ebx-0x57]
  409e0c:	jl     0x409dce
  409e0e:	pop    edx
  409e0f:	or     DWORD PTR [esi+edx*4],edi
  409e12:	jmp    0x8c11:0x50008cb7
  409e19:	mov    edx,0xe200041c
  409e1e:	shl    eax,0xb6
  409e21:	push   0x41
  409e23:	add    bh,BYTE PTR [ecx-0x38]
  409e26:	rcl    BYTE PTR [ebp-0xdc3e5fa],0x9e
  409e2d:	add    esi,DWORD PTR [eax-0x28552e6e]
  409e33:	mov    ah,ch
  409e35:	(bad)  
  409e36:	cli    
  409e37:	sub    ch,BYTE PTR [ebp-0x7eef7eba]
  409e3d:	xor    dl,BYTE PTR [edx-0x2]
  409e40:	int3   
  409e41:	push   ss
  409e42:	mov    ecx,0x71a22b96
  409e47:	cmp    al,0x15
  409e49:	sti    
  409e4a:	fcomp  DWORD PTR [eax]
  409e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e4d:	aad    0x2b
  409e4f:	mov    dl,0x5e
  409e51:	jae    0x409e18
  409e53:	mov    dl,bh
  409e55:	ja     0x409eaf
  409e57:	dec    ebx
  409e58:	cmp    eax,0xccbf1f61
  409e5d:	jp     0x409df2
  409e5f:	ret    
  409e60:	adc    ah,BYTE PTR [ebx+0x7c]
  409e63:	push   esp
  409e64:	stos   BYTE PTR es:[edi],al
  409e65:	sar    BYTE PTR [ebp+0x79db52eb],0xd2
  409e6c:	sub    al,0x0
  409e6e:	mov    ecx,0x86e9730e
  409e73:	popf   
  409e74:	cs push ds
  409e76:	xor    edi,eax
  409e78:	pop    ecx
  409e79:	out    0x6e,al
  409e7b:	dec    eax
  409e7c:	cli    
  409e7d:	inc    ecx
  409e7e:	jne    0x409e68
  409e80:	ret    
  409e81:	mov    ebp,0x667c8e09
  409e86:	sbb    al,0x4a
  409e88:	jns    0x409e31
  409e8a:	jle    0x409e98
  409e8c:	jns    0x409ed6
  409e8e:	sbb    BYTE PTR [esi+0x11],cl
  409e91:	dec    ecx
  409e92:	or     esi,DWORD PTR [edi+0x7f845d54]
  409e98:	jp     0x409e3e
  409e9a:	ret    
  409e9b:	push   ebx
  409e9c:	add    al,0xa0
  409e9e:	adc    eax,0xd0563c5d
  409ea3:	and    ah,BYTE PTR ss:[ebx]
  409ea6:	clc    
  409ea7:	ins    BYTE PTR es:[edi],dx
  409ea8:	in     al,0x62
  409eaa:	pop    esi
  409eab:	ret    
  409eac:	mov    eax,ds:0xcc1f7539
  409eb1:	sub    esp,DWORD PTR [ecx-0x76]
  409eb4:	(bad)  
  409eb5:	rcl    dh,cl
  409eb7:	inc    edx
  409eb8:	lea    edi,[edi-0x63964cab]
  409ebe:	hlt    
  409ebf:	cli    
  409ec0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec2:	push   eax
  409ec3:	loop   0x409ec6
  409ec5:	push   esp
  409ec6:	setb   BYTE PTR [ebx]
  409ec9:	mov    edx,0x1cf95972
  409ece:	(bad)  
  409ed0:	xchg   ebx,eax
  409ed1:	cs cli 
  409ed3:	pop    ecx
  409ed4:	pusha  
  409ed5:	ret    0xec4f
  409ed8:	xchg   edi,eax
  409ed9:	popf   
  409eda:	dec    edi
  409edb:	ins    BYTE PTR es:[edi],dx
  409edc:	mov    dh,0xc0
  409ede:	nop
  409edf:	(bad)  
  409ee0:	inc    DWORD PTR [edx]
  409ee2:	pop    edi
  409ee3:	mul    DWORD PTR cs:[edx]
  409ee6:	fcmovb st,st(1)
  409ee8:	pop    es
  409ee9:	fadd   st(4),st
  409eeb:	jo     0x409e83
  409eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eee:	test   BYTE PTR [edi],dh
  409ef0:	mov    edx,0xe431950
  409ef5:	addr16 mov edi,0x6aa2d753
  409efb:	bound  ebp,QWORD PTR [esi+0x34]
  409efe:	dec    edi
  409eff:	and    bl,BYTE PTR [edi+0x54d7397]
  409f05:	push   ebx
  409f06:	stos   BYTE PTR es:[edi],al
  409f07:	(bad)  
  409f08:	xlat   BYTE PTR ds:[ebx]
  409f09:	or     BYTE PTR [ebp+0xc],bl
  409f0c:	fnstsw WORD PTR [esi]
  409f0e:	mov    cs,WORD PTR [eax]
  409f10:	test   DWORD PTR [ebp+0xf],eax
  409f13:	mov    bh,0x5f
  409f15:	shl    esi,1
  409f17:	aaa    
  409f18:	bound  ebp,QWORD PTR [eax-0x1d]
  409f1b:	push   ds
  409f1c:	mov    ah,BYTE PTR [edx-0x61]
  409f1f:	ins    BYTE PTR es:[edi],dx
  409f20:	mov    dh,0xa2
  409f22:	out    dx,eax
  409f23:	dec    eax
  409f24:	mov    cl,0xab
  409f26:	test   al,0x1
  409f28:	(bad)  
  409f29:	sahf   
  409f2a:	push   cs
  409f2b:	lock call 0x94d2:0xfc924b2f
  409f33:	popf   
  409f34:	fstp   st(0)
  409f36:	xchg   DWORD PTR [edx+0x20],edi
  409f39:	xchg   al,bh
  409f3b:	sbb    BYTE PTR [edx-0x59e9890c],dl
  409f41:	push   ds
  409f42:	cmc    
  409f43:	je     0x409efb
  409f45:	fcom   DWORD PTR [edi+edx*2]
  409f48:	jg     0x409ed6
  409f4a:	sahf   
  409f4b:	and    dh,cl
  409f4d:	sbb    eax,0x69cd646b
  409f52:	aaa    
  409f53:	popf   
  409f54:	xlat   BYTE PTR ds:[ebx]
  409f55:	inc    ebx
  409f56:	jl     0x409f8d
  409f58:	push   DWORD PTR [edx]
  409f5a:	neg    esi
  409f5c:	cwde   
  409f5d:	mov    dl,0x4d
  409f5f:	cdq    
  409f60:	data16 mov fs,WORD PTR [ebx+0x21]
  409f64:	mov    ebp,0x3dfacd1b
  409f69:	jle    0x409f19
  409f6b:	jle    0x409f67
  409f6d:	(bad)  
  409f6e:	dec    esp
  409f6f:	into   
  409f70:	xor    esp,edx
  409f72:	dec    ecx
  409f73:	sub    al,0xa7
  409f75:	ins    BYTE PTR es:[edi],dx
  409f76:	lock adc al,0xaa
  409f79:	xchg   edi,eax
  409f7a:	fcomip st,st(4)
  409f7c:	mov    DWORD PTR [edx],esi
  409f7e:	sbb    eax,0x7e28e746
  409f83:	pusha  
  409f84:	xor    eax,ebp
  409f86:	add    eax,0x2bc5b56
  409f8b:	in     al,0x63
  409f8d:	ds push ss
  409f8f:	pushf  
  409f90:	add    eax,edx
  409f92:	mov    eax,ds:0xc270a3a3
  409f97:	rcr    DWORD PTR [edx+0x57],1
  409f9a:	pop    ss
  409f9b:	out    0x53,eax
  409f9d:	call   0xe1e3:0x50207b70
  409fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fa5:	(bad)  
  409fa6:	ds (bad) 
  409fa8:	mov    edi,0xbe3fbe47
  409fad:	mov    ebp,0x26e84d49
  409fb2:	daa    
  409fb3:	and    ebp,DWORD PTR [esi]
  409fb5:	(bad)  
  409fb6:	gs or  eax,0x63c644e3
  409fbc:	(bad)  
  409fbd:	(bad)  
  409fbe:	push   ecx
  409fbf:	jl     0x409f99
  409fc1:	push   ebp
  409fc2:	or     ebp,edx
  409fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc5:	(bad)  
  409fc6:	out    0x3f,eax
  409fc8:	push   eax
  409fc9:	inc    esi
  409fca:	loop   0x409fe7
  409fcc:	mov    ah,0xe9
  409fce:	sbb    al,0x42
  409fd0:	lock mov ds:0x9554bb8c,al
  409fd6:	jo     0x40a057
  409fd8:	(bad)  
  409fd9:	pop    eax
  409fda:	cdq    
  409fdb:	(bad)  
  409fdd:	dec    ecx
  409fde:	sbb    ecx,DWORD PTR [esi+0x28]
  409fe1:	jne    0x409fd4
  409fe3:	mov    edx,0x2bfcbd46
  409fe8:	arpl   di,sp
  409fea:	sub    eax,0x4c4de4f1
  409fef:	dec    eax
  409ff0:	cmp    eax,0x923dbc09
  409ff5:	cmc    
  409ff6:	jbe    0x40a00b
  409ff8:	mov    ebx,0xfebf2c08
  409ffd:	mov    ah,0xc7
  409fff:	adc    bh,BYTE PTR [edi-0x62]
  40a002:	int    0xe3
  40a004:	adc    DWORD PTR [ebp+0x3c],0x50443934
  40a00b:	les    ecx,FWORD PTR [esi]
  40a00d:	inc    ecx
  40a00e:	imul   edi,ebx,0xdaab0e0e
  40a014:	stos   DWORD PTR es:[edi],eax
  40a015:	mov    bl,0x9b
  40a017:	pushf  
  40a018:	and    al,BYTE PTR [esi-0x4c9bb0c7]
  40a01e:	sub    esi,eax
  40a020:	add    al,0x45
  40a022:	(bad)  [ecx+0x6b658f21]
  40a028:	xchg   esi,eax
  40a029:	and    esp,DWORD PTR [ebx+0xf]
  40a02c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a02d:	mov    eax,0xf11ac579
  40a032:	cli    
  40a033:	loope  0x40a019
  40a035:	cmp    DWORD PTR [ecx],ebx
  40a037:	and    ebx,edi
  40a039:	and    al,0x4d
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a785,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a785
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a785,eax
  40a084:	cmp    DWORD PTR ds:0x42a785,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a785,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a891,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a891
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a891,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a891,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a891,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a7ad
  40a106:	mov    eax,ds:0x42a889
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a875
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a8b1
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a781,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a781
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a781,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a781,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a781,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a781,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a781
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a781,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7dd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0xda60,0x32
  40a1b4:	loope  0x40a206
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	dec    ebp
  40a1bf:	xchg   ebp,eax
  40a1c0:	ficomp DWORD PTR [esi+0x75]
  40a1c3:	or     DWORD PTR [edx],0xb7835950
  40a1c9:	in     al,0xc0
  40a1cb:	add    BYTE PTR [ebx-0x67],dl
  40a1ce:	push   ds
  40a1cf:	jb     0x40a1e7
  40a1d1:	xor    al,0x11
  40a1d3:	xor    DWORD PTR [esi+0x79],edi
  40a1d6:	sbb    eax,DWORD PTR [ecx+ebx*1+0x30]
  40a1da:	cmp    eax,DWORD PTR [ebx]
  40a1dc:	ss addr16 aaa 
  40a1df:	add    eax,0x92015587
  40a1e4:	jmp    0x65dc:0x66c8962b
  40a1eb:	inc    ebp
  40a1ec:	shr    BYTE PTR [edx],0xaa
  40a1ef:	or     DWORD PTR [ecx],ecx
  40a1f1:	addr16 hlt 
  40a1f3:	ins    DWORD PTR es:[edi],dx
  40a1f4:	int    0xd
  40a1f6:	mov    bh,0xa1
  40a1f8:	push   0x2f7141bc
  40a1fd:	push   ebp
  40a1fe:	jmp    0x40a1a2
  40a200:	aad    0x6
  40a202:	jge    0x40a1f7
  40a204:	into   
  40a205:	add    eax,0xceb86088
  40a20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20b:	(bad)  
  40a20e:	out    0x9b,eax
  40a210:	pop    edx
  40a211:	into   
  40a212:	lods   eax,DWORD PTR ds:[esi]
  40a213:	push   es
  40a214:	hlt    
  40a215:	mov    WORD PTR [eax-0x2038a0b1],?
  40a21b:	push   ebx
  40a21c:	inc    esp
  40a21d:	mov    WORD PTR [ebx-0x69f365bc],ss
  40a223:	cmp    al,0xe5
  40a225:	cmp    dh,dl
  40a227:	cmp    DWORD PTR [edx+0x566697a1],ecx
  40a22d:	push   ds
  40a22e:	repz add ch,BYTE PTR [edx-0x11]
  40a232:	(bad)  
  40a233:	jmp    0xaed9:0xbe6ff0c2
  40a23a:	pop    eax
  40a23b:	fimul  DWORD PTR [esi+ecx*8+0x4d]
  40a23f:	pop    edi
  40a240:	popf   
  40a241:	xchg   esi,esp
  40a243:	call   0x232f:0x12f5cd06
  40a24a:	dec    ebx
  40a24b:	push   esp
  40a24c:	pop    edx
  40a24d:	inc    eax
  40a24e:	mov    al,0x14
  40a250:	sub    ecx,DWORD PTR [edx+0x1e]
  40a253:	dec    ebp
  40a254:	mov    ch,0xe
  40a256:	mov    esp,0xe3c6e6dc
  40a25b:	out    dx,al
  40a25c:	inc    ebx
  40a25d:	outs   dx,BYTE PTR ds:[esi]
  40a25e:	dec    esp
  40a25f:	(bad)  
  40a260:	shr    DWORD PTR [eax],1
  40a262:	test   DWORD PTR [ecx+0x3e],0x5cf9ad7b
  40a269:	pop    ebp
  40a26a:	sub    bh,al
  40a26c:	and    edx,DWORD PTR [ebp+0x39]
  40a26f:	xchg   edi,eax
  40a270:	(bad)  
  40a271:	retf   
  40a272:	(bad)  
  40a273:	push   ecx
  40a274:	add    eax,0x3f29b057
  40a279:	ret    0xd51c
  40a27c:	idiv   BYTE PTR [edx]
  40a27e:	sub    al,0x94
  40a280:	mov    ch,0x2
  40a282:	sub    bl,BYTE PTR [edx-0x30]
  40a285:	add    dh,bl
  40a287:	mov    eax,0xfcc074e5
  40a28c:	mov    WORD PTR [esi+0x3ad78179],sp
  40a293:	jbe    0x40a255
  40a295:	dec    esi
  40a296:	dec    esp
  40a297:	dec    ecx
  40a298:	into   
  40a299:	in     eax,0xa3
  40a29b:	jecxz  0x40a22c
  40a29d:	or     ch,BYTE PTR [esi-0x10f4d47c]
  40a2a3:	lds    edx,FWORD PTR [eax-0x18]
  40a2a6:	outs   dx,DWORD PTR ds:[esi]
  40a2a7:	daa    
  40a2a8:	mov    ch,0x24
  40a2aa:	mov    DWORD PTR [eax],eax
  40a2ac:	push   ss
  40a2ad:	cs xchg ecx,eax
  40a2af:	imul   esp,DWORD PTR [edi],0x20
  40a2b2:	aam    0x8d
  40a2b4:	(bad)  
  40a2b5:	pop    ds
  40a2b6:	nop
  40a2b7:	pop    ebp
  40a2b8:	jbe    0x40a246
  40a2ba:	push   0x6959892f
  40a2bf:	retf   0x12bc
  40a2c2:	xor    BYTE PTR [ecx+0x6b0fba27],bh
  40a2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c9:	call   0x8f9647e
  40a2ce:	mov    esi,0x69e179d3
  40a2d3:	lahf   
  40a2d4:	(bad)  
  40a2d5:	cld    
  40a2d6:	xchg   ebx,eax
  40a2d7:	xor    al,0xe0
  40a2d9:	jmp    0x40a2df
  40a2db:	cmp    DWORD PTR [ecx+esi*4-0x4a],esp
  40a2df:	sbb    eax,0x7ffe3852
  40a2e4:	daa    
  40a2e5:	dec    esp
  40a2e6:	jmp    0xda6f:0x9b7c6232
  40a2ed:	jo     0x40a28b
  40a2ef:	cwde   
  40a2f0:	mov    al,cl
  40a2f2:	mov    bl,0x72
  40a2f4:	inc    eax
  40a2f5:	inc    edx
  40a2f6:	xchg   edx,eax
  40a2f7:	push   0xffffffec
  40a2f9:	leave  
  40a2fa:	popa   
  40a2fb:	pushf  
  40a2fc:	push   ss
  40a2fd:	aaa    
  40a2fe:	int3   
  40a2ff:	jmp    0x33ec:0x326f8354
  40a306:	cmp    ebx,DWORD PTR [eax+ebx*4]
  40a309:	stc    
  40a30a:	and    eax,0x87a8a539
  40a30f:	lea    edi,[edx-0x5072b5c8]
  40a315:	xchg   ecx,eax
  40a316:	mov    dl,0xe9
  40a318:	cld    
  40a319:	cmp    al,0x96
  40a31b:	ins    BYTE PTR es:[edi],dx
  40a31c:	cmp    BYTE PTR [edi],0x2d
  40a31f:	add    eax,0x941c6bc2
  40a324:	sub    al,bl
  40a326:	mov    dl,0xda
  40a328:	(bad)  
  40a32a:	aaa    
  40a32b:	inc    ebx
  40a32d:	or     DWORD PTR [edx-0x23bc0c4c],esi
  40a333:	pop    ss
  40a334:	(bad)  
  40a335:	cmc    
  40a336:	bound  esp,QWORD PTR [ecx]
  40a338:	popf   
  40a339:	mov    ds:0xefdf8a7e,al
  40a33e:	push   0x8573190a
  40a343:	out    0xdc,al
  40a345:	daa    
  40a346:	mov    ebx,0x33ad8340
  40a34b:	push   esp
  40a34c:	and    DWORD PTR [edx+0x2675d383],ebp
  40a352:	xlat   BYTE PTR ds:[ebx]
  40a353:	jae    0x40a3c5
  40a355:	aam    0xc6
  40a357:	adc    DWORD PTR es:[edi],edx
  40a35a:	pop    ss
  40a35b:	test   eax,0xa6b8c637
  40a360:	pusha  
  40a361:	jns    0x40a341
  40a363:	sbb    al,0x64
  40a365:	push   esp
  40a366:	aaa    
  40a367:	rcr    BYTE PTR [ebp+0x7c4d6b1b],1
  40a36d:	(bad)  
  40a36e:	out    dx,al
  40a36f:	mov    ds:0xdbb31c7c,al
  40a374:	bound  eax,QWORD PTR [esi]
  40a376:	mov    ebx,DWORD PTR [edi]
  40a378:	sub    DWORD PTR [eax],0x7b
  40a37b:	lock push ebp
  40a37d:	jp     0x40a36c
  40a37f:	add    dh,dh
  40a381:	mov    dl,0x5d
  40a383:	pop    ds
  40a384:	adc    DWORD PTR [edx+0x29],0x55408824
  40a38b:	in     al,0x17
  40a38d:	push   0x56
  40a38f:	sti    
  40a390:	loop   0x40a38a
  40a392:	pop    ecx
  40a393:	pushf  
  40a394:	jbe    0x40a412
  40a396:	popf   
  40a397:	or     al,0x87
  40a399:	je     0x40a3fc
  40a39b:	mov    al,ds:0xdcd3e922
  40a3a0:	fdivr  DWORD PTR [ecx]
  40a3a2:	popf   
  40a3a3:	pop    ebp
  40a3a4:	add    eax,edi
  40a3a6:	mov    bh,0xbb
  40a3a8:	and    dl,BYTE PTR [ebx]
  40a3aa:	nop
  40a3ab:	dec    ebp
  40a3ac:	or     BYTE PTR [esi],0x2b
  40a3af:	mov    ah,0xad
  40a3b1:	(bad)  
  40a3b2:	(bad)  
  40a3b3:	pop    ss
  40a3b4:	stos   BYTE PTR es:[edi],al
  40a3b5:	ret    
  40a3b6:	ret    
  40a3b7:	sahf   
  40a3b8:	vsqrtss xmm7,xmm0,DWORD PTR [ecx+edx*1]
  40a3bd:	pop    edi
  40a3be:	and    eax,0xb75b5f76
  40a3c3:	icebp  
  40a3c4:	mov    ebp,0x26b5150d
  40a3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3ca:	push   esi
  40a3cb:	icebp  
  40a3cc:	pop    eax
  40a3cd:	inc    ebp
  40a3ce:	xor    bh,BYTE PTR [ebp+0x5a]
  40a3d1:	je     0x40a37b
  40a3d3:	dec    ebx
  40a3d4:	sbb    eax,0xbd6b91a0
  40a3d9:	test   eax,0xceeb26bc
  40a3de:	out    dx,eax
  40a3df:	in     al,0x1
  40a3e1:	inc    edi
  40a3e2:	lahf   
  40a3e3:	call   0x3624e6a2
  40a3e8:	stc    
  40a3e9:	iret   
  40a3ea:	and    al,0x1f
  40a3ec:	adc    edi,0x1b
  40a3ef:	lods   al,BYTE PTR ds:[esi]
  40a3f0:	enter  0x9550,0xd4
  40a3f4:	aam    0xd4
  40a3f6:	repz xor DWORD PTR [edi+0x6],esp
  40a3fa:	sbb    al,0xc7
  40a3fc:	inc    esi
  40a3fd:	sar    BYTE PTR [edx+0x1497af71],0x79
  40a404:	jno    0x40a415
  40a406:	xor    ecx,esp
  40a408:	dec    ecx
  40a409:	add    BYTE PTR [eax+0x49],ah
  40a40c:	jbe    0x40a471
  40a40e:	push   ss
  40a40f:	adc    cl,al
  40a411:	mov    ch,0x5b
  40a413:	or     ch,BYTE PTR [ecx-0x15]
  40a416:	cwde   
  40a417:	scas   eax,DWORD PTR es:[edi]
  40a418:	fldenv [edi+0x60]
  40a41b:	jmp    0x40a3dc
  40a41d:	inc    esp
  40a41e:	gs popa 
  40a420:	sbb    BYTE PTR [esi-0x41],ah
  40a423:	imul   edx,DWORD PTR [esi+0x7e9c8fa8],0xffffffa9
  40a42a:	push   edx
  40a42b:	retf   0xf0d3
  40a42e:	xchg   BYTE PTR [edi+0x23],al
  40a431:	out    dx,al
  40a432:	sbb    ah,dh
  40a434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a435:	shr    DWORD PTR [edx+0xf],cl
  40a438:	push   ecx
  40a439:	xchg   DWORD PTR [eax],edx
  40a43b:	addr16 adc ebx,ebp
  40a43e:	mov    cl,0xc0
  40a440:	add    ebp,ecx
  40a442:	lds    edi,FWORD PTR [eax]
  40a444:	pop    ebx
  40a445:	retf   
  40a446:	imul   eax,DWORD PTR [ebx],0xffffffa8
  40a449:	sbb    ebx,DWORD PTR [esi-0x4]
  40a44c:	jp     0x40a458
  40a44e:	fild   QWORD PTR es:[ebp+0x3c]
  40a452:	test   ebx,0x5391f01a
  40a458:	sbb    DWORD PTR [ebx-0x41],esi
  40a45b:	outs   dx,DWORD PTR ds:[esi]
  40a45c:	ffreep st(1)
  40a45e:	fmulp  st(6),st
  40a460:	pop    ss
  40a461:	pop    esi
  40a462:	push   esp
  40a463:	sahf   
  40a464:	cli    
  40a465:	rcl    dl,0x12
  40a468:	cli    
  40a469:	out    dx,al
  40a46a:	xchg   esi,eax
  40a46b:	jge    0x40a4b1
  40a46d:	call   0x5c65:0x4fd2c9a7
  40a474:	jmp    0xe95cedf2
  40a479:	out    0xd2,al
  40a47b:	pop    ds
  40a47c:	dec    eax
  40a47d:	inc    eax
  40a47e:	loopne 0x40a419
  40a480:	fldenv [ebx+0x3a]
  40a483:	inc    edi
  40a484:	push   0x6cf070a4
  40a489:	cmp    eax,0x9b2f9ced
  40a48e:	mov    bh,0xac
  40a490:	sub    bh,dh
  40a492:	pop    ss
  40a493:	mov    cl,0xe9
  40a495:	fsub   QWORD PTR [ecx+0x36ac9504]
  40a49b:	xchg   esi,eax
  40a49c:	shrd   DWORD PTR [eax],ebx,cl
  40a49f:	push   esp
  40a4a0:	or     BYTE PTR [ebp+0x18],bh
  40a4a3:	cmc    
  40a4a4:	fsub   st(6),st
  40a4a6:	sbb    ah,BYTE PTR [ebx]
  40a4a8:	arpl   WORD PTR [eax+0x57],bx
  40a4ab:	sar    DWORD PTR [eax],0xd9
  40a4ae:	mov    cl,0x60
  40a4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4b1:	mov    ds:0x7bc7313e,al
  40a4b6:	mov    ah,0xde
  40a4b8:	pop    ebx
  40a4b9:	lea    eax,[di-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7ed,0x42a815
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a8a9,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a791,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a791
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a791,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a791,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a791,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a791
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a791,ecx
  40a527:	cmp    DWORD PTR ds:0x42a791,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a7bd
  40a53e:	mov    ecx,DWORD PTR ds:0x42a871
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a8a1,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a8a1
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a8a1,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a8a1,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a8a1,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a869,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a869
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a869,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a869,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa82
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a869,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a869
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a869,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a869,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x5],dh
  40a61b:	fsubr  DWORD PTR ds:0x78fede04
  40a621:	js     0x40a697
  40a623:	jle    0x40a69d
  40a625:	js     0x40a5ff
  40a627:	push   ss
  40a628:	pop    esi
  40a629:	mov    eax,0x6aeb5836
  40a62e:	int3   
  40a62f:	dec    esp
  40a630:	int    0x79
  40a632:	nop
  40a633:	or     al,0xbc
  40a635:	dec    esi
  40a636:	scas   al,BYTE PTR es:[edi]
  40a637:	nop
  40a638:	in     al,dx
  40a639:	in     eax,dx
  40a63a:	cmc    
  40a63b:	clc    
  40a63c:	push   ss
  40a63d:	dec    ecx
  40a63e:	scas   al,BYTE PTR es:[edi]
  40a63f:	pop    ebx
  40a640:	jb     0x40a61a
  40a642:	cs scas al,BYTE PTR es:[edi]
  40a644:	in     eax,0xe7
  40a646:	out    dx,eax
  40a647:	cdq    
  40a648:	nop
  40a649:	jmp    0x51f0:0x1aaac6bf
  40a650:	inc    ebx
  40a651:	icebp  
  40a652:	dec    ebx
  40a653:	je     0x40a5fc
  40a655:	cmp    eax,0x8ddc6f77
  40a65a:	loope  0x40a69b
  40a65c:	mov    ecx,0x94388b64
  40a661:	jle    0x40a68c
  40a663:	jmp    0x40a5ee
  40a665:	mov    eax,ds
  40a667:	lock aas 
  40a669:	jae    0x40a6be
  40a66b:	xchg   edx,eax
  40a66c:	push   0x78
  40a66e:	push   eax
  40a66f:	mov    dh,0xec
  40a671:	cs ds push esp
  40a674:	xor    bl,BYTE PTR [esi+0x56]
  40a677:	lods   al,BYTE PTR ds:[esi]
  40a678:	and    ebp,DWORD PTR [ebx+0x6c]
  40a67b:	in     eax,0x93
  40a67d:	sti    
  40a67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a67f:	(bad)  
  40a680:	out    0xda,al
  40a682:	outs   dx,BYTE PTR ds:[esi]
  40a683:	adc    cl,cl
  40a685:	sbb    eax,DWORD PTR [esi+esi*2]
  40a688:	cwde   
  40a689:	loop   0x40a679
  40a68b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a68d:	std    
  40a68e:	(bad)  [edi-0x62ec7e95]
  40a694:	or     DWORD PTR [eax],esp
  40a696:	sub    ebx,DWORD PTR [edx+0x5eb92dd6]
  40a69c:	inc    edx
  40a69d:	xchg   esi,eax
  40a69e:	rcr    ch,1
  40a6a0:	xchg   esi,eax
  40a6a1:	mov    bl,0x19
  40a6a3:	cmc    
  40a6a4:	sar    BYTE PTR [ecx+0x1b4c9c8],cl
  40a6aa:	xor    DWORD PTR [ebp-0xc],ebp
  40a6ad:	out    dx,eax
  40a6ae:	inc    ebp
  40a6af:	push   0xc15f2806
  40a6b4:	or     BYTE PTR [ebp-0x693a14dc],bh
  40a6ba:	lock fnsave [esi]
  40a6bd:	mov    al,ds:0x3f4e3ec9
  40a6c2:	arpl   WORD PTR [ebx+ebx*4-0x8827935],si
  40a6c9:	ds xor eax,0x39709cf4
  40a6cf:	mov    cl,0xe2
  40a6d1:	add    DWORD PTR [esp+edx*1],ebx
  40a6d4:	test   eax,0xc17c2666
  40a6d9:	and    ch,0x30
  40a6dc:	arpl   WORD PTR [edi-0x2e],si
  40a6df:	inc    esp
  40a6e0:	jns    0x40a6b6
  40a6e2:	dec    edi
  40a6e3:	retf   
  40a6e4:	in     eax,dx
  40a6e5:	aaa    
  40a6e6:	pop    ecx
  40a6e7:	pop    ecx
  40a6e8:	jp     0x40a737
  40a6ea:	mov    eax,ds:0x33d2c545
  40a6ef:	clc    
  40a6f0:	gs mov cl,0xc6
  40a6f3:	sbb    cl,BYTE PTR ds:0xa1a4e35e
  40a6f9:	mov    dh,bl
  40a6fb:	adc    bl,BYTE PTR [ecx]
  40a6fd:	(bad)  
  40a6ff:	repnz cmc 
  40a701:	inc    edi
  40a702:	dec    eax
  40a703:	imul   edx,DWORD PTR [esi+0x1f],0xffffffd6
  40a707:	sbb    al,0xe9
  40a709:	popa   
  40a70a:	xlat   BYTE PTR ds:[ebx]
  40a70b:	ds jnp 0x40a6da
  40a70e:	in     eax,dx
  40a70f:	out    dx,eax
  40a710:	xor    ah,BYTE PTR [ebx+0x7f74de87]
  40a716:	pop    es
  40a717:	add    eax,0x37585a7f
  40a71c:	pop    edi
  40a71d:	mov    ebx,0x4071afe3
  40a722:	gs popa 
  40a724:	mov    eax,ds:0xe756029a
  40a729:	(bad)  
  40a72a:	in     al,dx
  40a72b:	(bad)  
  40a72c:	mov    ebx,0x11c95404
  40a731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a732:	xor    ebp,ecx
  40a734:	and    al,0xa7
  40a736:	sbb    DWORD PTR [ecx+eax*1-0x5a061c88],edx
  40a73d:	add    DWORD PTR [eax+0x5c8d623b],edx
  40a743:	jne    0x40a7ac
  40a745:	cwde   
  40a746:	outs   dx,BYTE PTR ds:[esi]
  40a747:	xor    BYTE PTR ds:[ecx+edi*1+0x193240cd],bl
  40a74f:	xor    dl,bl
  40a751:	shl    DWORD PTR [edx],1
  40a753:	or     ah,BYTE PTR [edx-0x5c]
  40a756:	xchg   al,dh
  40a758:	add    DWORD PTR [esi+ebp*4],ebp
  40a75b:	das    
  40a75c:	and    edx,esi
  40a75e:	jge    0x40a768
  40a760:	fild   QWORD PTR ds:0x156cb04d
  40a766:	mov    esi,0x7a124cda
  40a76b:	stos   DWORD PTR es:[edi],eax
  40a76c:	cmp    al,0x1f
  40a76e:	xor    al,0xc0
  40a770:	xor    ebp,DWORD PTR [ecx]
  40a772:	out    0xdf,eax
  40a774:	xchg   DWORD PTR [edi+eax*1-0x427acce6],esi
  40a77b:	add    DWORD PTR [ecx+0x4c],ebx
  40a77e:	jmp    0xc01c1c78
  40a783:	cmc    
  40a784:	outs   dx,BYTE PTR ds:[esi]
  40a785:	xor    eax,0xa0a60543
  40a78a:	imul   esp,DWORD PTR [edx],0x6f
  40a78d:	loopne 0x40a7fd
  40a78f:	xchg   edx,eax
  40a790:	mov    cl,0xc6
  40a792:	mov    ss,esp
  40a794:	jge    0x40a80d
  40a796:	data16 adc ah,BYTE PTR [eax]
  40a799:	push   0x339808b2
  40a79e:	push   0x3f252e91
  40a7a3:	call   0x37db:0xb3e67465
  40a7aa:	inc    ebx
  40a7ab:	mov    bl,0x8b
  40a7ad:	in     al,dx
  40a7ae:	lahf   
  40a7af:	fprem1 
  40a7b1:	shr    BYTE PTR cs:[ebp-0x512844bf],0xf5
  40a7b9:	xor    al,BYTE PTR [edi+eiz*2]
  40a7bc:	jnp    0x40a74f
  40a7be:	push   cs
  40a7bf:	retf   0xfaf3
  40a7c2:	mov    ebx,0x6357dca8
  40a7c7:	dec    edx
  40a7c8:	and    BYTE PTR [edx],al
  40a7ca:	outs   dx,BYTE PTR ds:[esi]
  40a7cb:	retf   
  40a7cc:	test   al,0x3e
  40a7ce:	out    dx,al
  40a7cf:	ficom  WORD PTR [esi]
  40a7d1:	arpl   WORD PTR [eax],si
  40a7d3:	mov    ?,WORD PTR [esp+ebx*2-0x57590d94]
  40a7da:	inc    edx
  40a7db:	lods   eax,DWORD PTR ds:[esi]
  40a7dc:	fist   WORD PTR [ebx]
  40a7de:	shr    ah,cl
  40a7e0:	clc    
  40a7e1:	mov    ebx,0xcf08ee01
  40a7e6:	cmp    al,0x35
  40a7e8:	sbb    eax,0x5b0978b0
  40a7ed:	cli    
  40a7ee:	pop    ebx
  40a7ef:	xor    al,0xb6
  40a7f1:	test   eax,0x1ca2bf89
  40a7f6:	cmp    al,0x29
  40a7f8:	dec    edi
  40a7f9:	aam    0x89
  40a7fb:	enter  0xb2f7,0x75
  40a7ff:	aam    0x57
  40a801:	and    eax,0xf9511296
  40a806:	dec    ebp
  40a807:	popa   
  40a808:	(bad)  
  40a809:	push   ecx
  40a80a:	add    al,0x76
  40a80c:	ins    DWORD PTR es:[edi],dx
  40a80d:	cmovb  esi,DWORD PTR [eax-0x32b2e3ac]
  40a814:	(bad)
  40a819:	mov    ebx,0xb51b4ec5
  40a81e:	mov    eax,ds:0xd1815aa3
  40a823:	enter  0xf9bd,0x93
  40a827:	jl     0x40a819
  40a829:	cmp    edi,DWORD PTR [esi-0x67]
  40a82c:	ret    
  40a82d:	pushf  
  40a82e:	mov    edx,0xda301f3
  40a833:	inc    ecx
  40a834:	cld    
  40a835:	cmp    ch,BYTE PTR [edi+0x19333bb5]
  40a83b:	jae    0x40a81e
  40a83d:	les    eax,FWORD PTR [edx+0x24]
  40a840:	adc    bh,ah
  40a842:	push   cs
  40a843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a844:	scas   eax,DWORD PTR es:[edi]
  40a845:	sub    BYTE PTR [ecx+0x7],dh
  40a848:	xor    eax,0x849cee3d
  40a84d:	mov    bh,0xa7
  40a84f:	and    bh,ch
  40a851:	mov    ds:0x6f91ef67,al
  40a856:	popa   
  40a857:	mov    esi,0x3d7cb396
  40a85c:	jle    0x40a808
  40a85e:	out    dx,eax
  40a85f:	dec    edx
  40a860:	fimul  WORD PTR [ebp-0x7a4de79b]
  40a866:	stc    
  40a867:	lods   eax,DWORD PTR ds:[esi]
  40a868:	jmp    0x45c2:0xc9f436d5
  40a86f:	and    BYTE PTR [esi-0x2957efe9],bl
  40a875:	xor    BYTE PTR [esi-0x126f9943],dl
  40a87b:	loopne 0x40a869
  40a87d:	mov    ebx,0x4e9e7b99
  40a882:	loopne 0x40a86b
  40a884:	dec    ebx
  40a885:	pusha  
  40a886:	push   ss
  40a887:	lods   eax,DWORD PTR ds:[esi]
  40a888:	punpckhwd mm6,QWORD PTR [eax+0x60]
  40a88c:	inc    ebp
  40a88d:	jecxz  0x40a894
  40a88f:	adc    DWORD PTR cs:[ebx-0x1],edi
  40a893:	push   edx
  40a894:	loopne 0x40a83e
  40a896:	jae    0x40a862
  40a898:	in     al,0x2c
  40a89a:	fstp   st(1)
  40a89c:	retf   
  40a89d:	sbb    al,0x28
  40a89f:	push   edx
  40a8a0:	lock cmp DWORD PTR ds:0xe7d465e1,edi
  40a8a7:	dec    ebx
  40a8a8:	push   0x7a
  40a8aa:	inc    esp
  40a8ab:	push   cs
  40a8ac:	in     al,dx
  40a8ad:	mov    esp,0x3af39f35
  40a8b2:	xor    esp,DWORD PTR es:[eax-0x36]
  40a8b6:	xchg   ch,al
  40a8b8:	aaa    
  40a8b9:	ret    
  40a8ba:	cmp    al,0x14
  40a8bc:	fidiv  DWORD PTR [esi]
  40a8be:	add    DWORD PTR [edi-0x67123001],ecx
  40a8c4:	push   edi
  40a8c5:	adc    BYTE PTR [ebx],0x7e
  40a8c8:	pop    edx
  40a8c9:	xor    cl,cl
  40a8cb:	fcomp  QWORD PTR [edx+0x15]
  40a8ce:	and    DWORD PTR [ebx-0x4b],edi
  40a8d1:	mov    cl,0xc1
  40a8d3:	outs   dx,BYTE PTR ds:[esi]
  40a8d4:	cli    
  40a8d5:	into   
  40a8d6:	in     al,dx
  40a8d7:	adc    bh,BYTE PTR [edi]
  40a8d9:	mov    ds:0x6d419f32,al
  40a8de:	or     dl,BYTE PTR [ebx+0x55]
  40a8e1:	pop    edx
  40a8e2:	cli    
  40a8e3:	xchg   edx,eax
  40a8e4:	jb     0x40a895
  40a8e6:	mov    edx,0x8405734e
  40a8eb:	imul   ebx,DWORD PTR [ebx],0xffffffdb
  40a8ee:	add    DWORD PTR [esi+0x75],ebp
  40a8f1:	xchg   WORD PTR [ebp+0x19],cx
  40a8f5:	jg     0x40a8af
  40a8f7:	inc    esi
  40a8f8:	sub    eax,0x6f3e4f7
  40a8fd:	mov    edx,0xcc47cdbd
  40a902:	push   ss
  40a903:	pop    ecx
  40a904:	push   0xbf7748b7
  40a909:	mov    fs,WORD PTR [ebx-0x54]
  40a90c:	cmc    
  40a90d:	pop    esp
  40a90e:	sub    BYTE PTR ds:0xfa5468c4,cl
  40a914:	fsubr  QWORD PTR [esi+edi*4-0x55]
  40a918:	fld    TBYTE PTR [edi+0x1d]
  40a91b:	out    0x5f,eax
  40a91d:	pushf  
  40a91e:	je     0x40a960
  40a920:	inc    edi
  40a921:	cmp    DWORD PTR [ecx-0x13ba74c8],ecx
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [ebx],esi
  40a948:	push   edx
  40a949:	pop    ebx
  40a94a:	sbb    edx,0x74787883
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a943
  40a954:	add    ah,BYTE PTR [ecx+eax*1-0x7c08ceef]
  40a95b:	mov    ecx,0xdde62097
  40a960:	adc    BYTE PTR [ecx+edx*1-0x40b2eaf8],ch
  40a967:	mov    bh,0xa6
  40a969:	inc    ebp
  40a96a:	ins    BYTE PTR es:[edi],dx
  40a96b:	mov    BYTE PTR [edx+0x5e],dh
  40a96e:	mov    ebp,0xfc0b6757
  40a973:	fldcw  WORD PTR [ebp-0x21600b3f]
  40a979:	add    dh,BYTE PTR [edx]
  40a97b:	mov    esp,0x65247fad
  40a980:	cli    
  40a981:	xor    al,0xa6
  40a983:	aad    0x88
  40a985:	add    BYTE PTR [ebx],dh
  40a987:	dec    ebx
  40a988:	dec    ecx
  40a989:	xchg   dh,bl
  40a98b:	xchg   edi,eax
  40a98c:	ror    DWORD PTR [eax],1
  40a98e:	ds call 0x20f:0xaaf37bf4
  40a996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a997:	inc    esp
  40a998:	aad    0xc0
  40a99a:	push   esi
  40a99b:	cmc    
  40a99c:	lea    edx,[edi+esi*8]
  40a99f:	mov    esi,0xf35e5f26
  40a9a4:	dec    edx
  40a9a5:	pop    esi
  40a9a6:	(bad)
  40a9a9:	fidivr DWORD PTR [eax+0x30d326f2]
  40a9af:	adc    al,0x57
  40a9b1:	icebp  
  40a9b2:	add    eax,0x82bb0303
  40a9b7:	cmp    eax,eax
  40a9b9:	and    BYTE PTR [eax+0x5c],0x4d
  40a9bd:	aad    0xcc
  40a9bf:	xchg   ecx,eax
  40a9c0:	inc    ebp
  40a9c1:	test   al,0x40
  40a9c3:	mov    bh,0xef
  40a9c5:	ret    0x893d
  40a9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c9:	push   ds
  40a9ca:	pop    es
  40a9cb:	jne    0x40aa1e
  40a9cd:	mov    cl,0x4
  40a9cf:	mov    dl,0xaf
  40a9d1:	lock add eax,0x37411267
  40a9d7:	mov    eax,0xab60ca4c
  40a9dc:	jl     0x40aa3b
  40a9de:	mov    edx,0x865e8358
  40a9e3:	mov    ch,0x29
  40a9e5:	push   ebx
  40a9e6:	data16 jns 0x40a9c8
  40a9e9:	fst    QWORD PTR [esi]
  40a9eb:	xchg   BYTE PTR [edx-0x54],dl
  40a9ee:	mov    esp,0x92cc28e2
  40a9f3:	pop    ds
  40a9f4:	scas   eax,DWORD PTR es:[edi]
  40a9f5:	dec    edx
  40a9f6:	ror    BYTE PTR [edx],1
  40a9f8:	jno    0x40a989
  40a9fa:	mov    eax,ds:0x9aec6b33
  40a9ff:	xchg   ecx,eax
  40aa00:	or     DWORD PTR [edx-0x4dcbc37a],edi
  40aa06:	call   0x529e:0x811fd878
  40aa0d:	fs scas eax,DWORD PTR es:[edi]
  40aa0f:	outs   dx,DWORD PTR ds:[esi]
  40aa10:	xchg   esp,eax
  40aa11:	adc    BYTE PTR [ecx-0x1a3cd001],bh
  40aa17:	mov    ebp,0xcd288ea1
  40aa1c:	rdmsr  
  40aa1e:	cdq    
  40aa1f:	je     0x40a9d0
  40aa21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa22:	(bad)
  40aa28:	sub    DWORD PTR [eax],0x6de3ed83
  40aa2e:	cmp    edi,DWORD PTR [ebx]
  40aa30:	or     ebx,DWORD PTR ds:0xd17e9f67
  40aa36:	jbe    0x40aaa7
  40aa38:	jae    0x40a9ee
  40aa3a:	push   cs
  40aa3b:	repz out 0x6a,al
  40aa3e:	and    eax,0xec45b76b
  40aa43:	push   ecx
  40aa44:	push   edi
  40aa45:	dec    eax
  40aa46:	or     ebp,DWORD PTR [ecx-0x39]
  40aa49:	cmp    DWORD PTR [edx+ebx*1+0x64],esp
  40aa4d:	(bad)  
  40aa4f:	jns    0x40a9df
  40aa51:	and    eax,0x3bda77bc
  40aa56:	pop    esp
  40aa57:	mov    ecx,0xeba34160
  40aa5c:	xchg   edi,eax
  40aa5d:	or     DWORD PTR [edx],edx
  40aa5f:	int    0x3e
  40aa61:	jmp    0x7ac9:0x7241a3fe
  40aa68:	or     al,0x94
  40aa6a:	cs ins DWORD PTR es:[edi],dx
  40aa6c:	cmp    ecx,DWORD PTR [eax+ecx*4-0x13288081]
  40aa73:	inc    edi
  40aa74:	loope  0x40aaa6
  40aa76:	hlt    
  40aa77:	dec    esp
  40aa78:	outs   dx,BYTE PTR ds:[esi]
  40aa79:	and    ebx,DWORD PTR [ecx+0x78]
  40aa7c:	pop    edx
  40aa7d:	add    eax,0x810d5aae
  40aa82:	push   edx
  40aa83:	(bad)  
  40aa85:	inc    BYTE PTR [ebp+0x7bc47300]
  40aa8b:	xchg   esp,eax
  40aa8c:	mov    esi,0xb3e89bf7
  40aa91:	push   eax
  40aa92:	imul   edi,DWORD PTR [edx],0xffffff85
  40aa95:	ja     0x40aa25
  40aa97:	fsubr  DWORD PTR [edx+0x54172738]
  40aa9d:	mov    ebx,0x91423e6f
  40aaa2:	sti    
  40aaa3:	jne    0x40aa97
  40aaa5:	push   ss
  40aaa6:	push   eax
  40aaa7:	out    dx,al
  40aaa8:	mov    ds:0xca5f209d,eax
  40aaad:	or     edx,ebx
  40aaaf:	ins    BYTE PTR es:[edi],dx
  40aab0:	adc    ch,dl
  40aab2:	rcl    bl,1
  40aab4:	inc    eax
  40aab5:	xchg   DWORD PTR [esi-0xa],edi
  40aab8:	inc    edx
  40aab9:	mov    DWORD PTR [esi+0x7793a706],ebx
  40aabf:	unpcklps xmm1,xmm4
  40aac2:	fcom   QWORD PTR [edi-0x32]
  40aac5:	or     DWORD PTR [esi],eax
  40aac7:	jmp    0x40aaf6
  40aac9:	aad    0x99
  40aacb:	push   ecx
  40aacc:	cmp    eax,DWORD PTR [esi]
  40aace:	aam    0xdb
  40aad0:	rcr    DWORD PTR [edi+0xd],0x47
  40aad4:	bound  eax,QWORD PTR [esi+eax*2]
  40aad7:	xchg   BYTE PTR [ebx+0x46],al
  40aada:	mov    dl,0xea
  40aadc:	(bad)
  40aadf:	push   ds
  40aae0:	imul   ebp,DWORD PTR [edi-0x376b4b15],0xc
  40aae7:	and    al,0xdc
  40aae9:	imul   edi,eax,0x62304ca
  40aaef:	leave  
  40aaf0:	mov    cl,0xa7
  40aaf2:	adc    bh,dh
  40aaf4:	fisub  DWORD PTR [edi+0x56]
  40aaf7:	add    DWORD PTR [eax+0x19ee46ee],eax
  40aafd:	imul   ebp,edi,0xffffffd4
  40ab00:	jnp    0x40aa94
  40ab02:	fisub  WORD PTR [ebp-0x5d]
  40ab05:	das    
  40ab06:	push   edi
  40ab07:	aam    0xe3
  40ab09:	dec    esi
  40ab0a:	cmc    
  40ab0b:	and    ah,BYTE PTR [edx+ecx*4]
  40ab0e:	(bad)  
  40ab0f:	mov    BYTE PTR [ebx-0xd68169f],dh
  40ab15:	jbe    0x40ab78
  40ab17:	cmp    eax,DWORD PTR [ecx+0x53529602]
  40ab1d:	(bad)  
  40ab1e:	mov    ebx,0xb52575f7
  40ab23:	mov    esi,0xa63de26f
  40ab28:	mov    fs,WORD PTR [edi-0x18f96bb8]
  40ab2e:	cli    
  40ab2f:	sub    bl,BYTE PTR [eax-0x66]
  40ab32:	test   eax,0x6175fe23
  40ab37:	pop    ecx
  40ab38:	adc    dl,ch
  40ab3a:	test   al,0x64
  40ab3c:	push   ss
  40ab3d:	out    dx,eax
  40ab3e:	nop
  40ab3f:	add    eax,DWORD PTR [esi]
  40ab41:	and    edx,edx
  40ab43:	xor    eax,0x27dcd75f
  40ab48:	adc    ecx,DWORD PTR ds:0xbca6963d
  40ab4e:	sub    bl,ah
  40ab50:	sub    esi,DWORD PTR [ebx-0x5b]
  40ab53:	mov    bh,0xee
  40ab55:	enter  0x3fa2,0xab
  40ab59:	popa   
  40ab5a:	mov    esi,0x5721f3da
  40ab5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab60:	rcr    BYTE PTR [ebp+0x2cc500ec],cl
  40ab66:	push   esp
  40ab67:	inc    eax
  40ab68:	cmp    eax,0xc5c5bb58
  40ab6d:	mov    al,0xcd
  40ab6f:	sbb    esp,edi
  40ab71:	push   ecx
  40ab72:	rcl    DWORD PTR [ecx-0x72],1
  40ab75:	js     0x40ab4f
  40ab77:	out    0x8e,al
  40ab79:	je     0x40aba3
  40ab7b:	xor    eax,0x5e6ac4f5
  40ab80:	and    esp,DWORD PTR [esi-0xc81ee45]
  40ab86:	add    dl,BYTE PTR [ebp+0x20]
  40ab89:	scas   eax,DWORD PTR es:[edi]
  40ab8a:	jb     0x2ae952cc
  40ab90:	hlt    
  40ab91:	dec    esp
  40ab92:	ins    BYTE PTR es:[edi],dx
  40ab93:	sub    eax,0xe1fee380
  40ab98:	push   ebx
  40ab99:	pop    ds
  40ab9a:	addr16 mov dl,0x5
  40ab9d:	mov    dl,0x84
  40ab9f:	in     eax,0x76
  40aba1:	xchg   esi,eax
  40aba2:	fs xor al,0x1b
  40aba5:	repz cli 
  40aba7:	mov    ?,esp
  40aba9:	out    dx,eax
  40abaa:	out    dx,eax
  40abab:	pop    ss
  40abac:	pop    es
  40abad:	rcl    DWORD PTR [edx-0x1f],0x66
  40abb1:	cli    
  40abb2:	lods   eax,DWORD PTR ds:[esi]
  40abb3:	fadd   st(4),st
  40abb5:	jmp    0x67d3ba38
  40abba:	sbb    DWORD PTR [eax],esp
  40abbc:	add    BYTE PTR [ecx],bh
  40abbe:	nop
  40abbf:	pushf  
  40abc0:	imul   edx,DWORD PTR [ecx+0x2f],0xffffffb9
  40abc4:	sahf   
  40abc5:	clc    
  40abc6:	jl     0x40abaa
  40abc8:	xchg   ah,bh
  40abca:	and    ch,BYTE PTR ds:0x28fa40c1
  40abd0:	fidivr WORD PTR ds:0x4af00b2c
  40abd6:	xchg   esi,eax
  40abd7:	int    0x89
  40abd9:	scas   eax,DWORD PTR es:[edi]
  40abda:	jbe    0x40abf8
  40abdc:	repnz xchg ebp,eax
  40abde:	popf   
  40abdf:	xor    BYTE PTR [esi-0x493d6896],al
  40abe5:	test   BYTE PTR [edx-0xd903879],ch
  40abeb:	xchg   esp,eax
  40abec:	sbb    bl,ah
  40abee:	mov    eax,0x7c01df41
  40abf3:	push   eax
  40abf4:	clc    
  40abf5:	ins    DWORD PTR es:[edi],dx
  40abf6:	arpl   si,sp
  40abf8:	mov    ds:0x60184bd8,al
  40abfd:	add    esi,DWORD PTR [edx-0x12]
  40ac00:	(bad)  
  40ac01:	cmp    esi,DWORD PTR [esi+0x5e]
  40ac04:	mov    esp,cs
  40ac06:	stos   DWORD PTR es:[edi],eax
  40ac07:	jbe    0x40ac39
  40ac09:	jmp    0xe0fe:0x61bdbd0f
  40ac10:	adc    bh,BYTE PTR [ecx]
  40ac12:	mov    DWORD PTR [ebp+0x49],edx
  40ac15:	mov    eax,ds:0x2c47419b
  40ac1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1b:	hlt    
  40ac1c:	lds    esi,FWORD PTR [edx+0x77]
  40ac1f:	xchg   esi,eax
  40ac20:	xchg   ebp,eax
  40ac21:	cld    
  40ac22:	test   ebx,ebp
  40ac24:	aam    0x68
  40ac26:	cmp    eax,0x4af5e9d1
  40ac2b:	ret    
  40ac2c:	lea    eax,[ecx]
  40ac2e:	scas   eax,DWORD PTR es:[edi]
  40ac2f:	jne    0x40abca
  40ac31:	jnp    0x40abc9
  40ac33:	mov    ds:0x408a22a2,eax
  40ac38:	mov    edi,0x3ec1cc1b
  40ac3d:	sub    ch,BYTE PTR es:[ecx+0x4ca8f69a]
  40ac44:	xchg   ecx,eax
  40ac45:	cmp    eax,0x965d3def
  40ac4a:	mov    ebp,0xa0b3ab89
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	pxor   mm5,QWORD PTR [ebx+0x43]
  40ac8f:	leave  
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40acbd
  40ac99:	in     al,0x61
  40ac9b:	(bad)  
  40ac9d:	call   0xce42:0x12b7a5c3
  40aca4:	inc    esi
  40aca5:	adc    ecx,esp
  40aca7:	rol    DWORD PTR [ebx-0x15],0x52
  40acab:	icebp  
  40acac:	add    eax,0x113714c9
  40acb1:	addr16 jmp 0xc1cec1d
  40acb7:	and    ebx,DWORD PTR [ecx+0x56]
  40acba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acbb:	sbb    edx,DWORD PTR [edx+0x72]
  40acbe:	and    BYTE PTR ds:0xb45189aa,bh
  40acc4:	xor    DWORD PTR [ecx-0x77f5b619],esi
  40acca:	retf   
  40accb:	cmp    bl,dh
  40accd:	dec    ebp
  40acce:	add    DWORD PTR [ebx-0x69],0x2c
  40acd2:	xor    eax,0x828247b7
  40acd7:	xchg   ebx,eax
  40acd8:	cld    
  40acd9:	push   ecx
  40acda:	cmp    ebp,edi
  40acdc:	fnstcw WORD PTR [eax+ebp*8-0x19cb3f84]
  40ace3:	outs   dx,BYTE PTR ds:[esi]
  40ace4:	aad    0xe9
  40ace6:	mov    dh,0x92
  40ace8:	jae    0x40ad58
  40acea:	or     dl,BYTE PTR [edi+0x76]
  40aced:	sub    ecx,DWORD PTR [edi-0xd]
  40acf0:	dec    eax
  40acf1:	mov    cs,WORD PTR [edi]
  40acf3:	cwde   
  40acf4:	push   ebp
  40acf5:	mov    bl,0x1f
  40acf7:	jecxz  0x40acf5
  40acf9:	sahf   
  40acfa:	loop   0x40acc7
  40acfc:	and    ah,BYTE PTR [ebx+0x1658e16d]
  40ad02:	add    al,0x23
  40ad04:	add    esp,0x4b
  40ad07:	dec    esp
  40ad08:	and    al,0xcc
  40ad0a:	fs (bad) 
  40ad0d:	add    BYTE PTR [ecx-0x69],0xdc
  40ad11:	mov    eax,0x86ecc8f1
  40ad16:	xor    BYTE PTR [esp+ecx*1],cl
  40ad19:	add    al,0xf8
  40ad1b:	xor    BYTE PTR [eax+0x19],0x18
  40ad1f:	mov    bh,BYTE PTR [esi-0x763bd52f]
  40ad25:	popa   
  40ad26:	sub    DWORD PTR [eax-0x63],0xffffffa4
  40ad2a:	das    
  40ad2b:	sub    bh,BYTE PTR [edx]
  40ad2d:	push   esp
  40ad2e:	lds    ebp,FWORD PTR [eax+0x6523a283]
  40ad34:	jl     0x40ad1c
  40ad36:	sub    eax,DWORD PTR [ebp+0xe]
  40ad39:	mov    eax,ds:0xa4618e3d
  40ad3f:	mov    ebx,0xa7edd4f5
  40ad44:	pop    DWORD PTR [edi]
  40ad46:	xor    al,0xe6
  40ad48:	xchg   edx,eax
  40ad49:	and    bl,bl
  40ad4b:	and    DWORD PTR fs:[ecx],eax
  40ad4e:	cmp    DWORD PTR [eax+ecx*4-0x538466a3],esi
  40ad55:	push   cs
  40ad56:	pop    es
  40ad57:	stos   DWORD PTR es:[edi],eax
  40ad58:	inc    edi
  40ad59:	push   0xffffffb0
  40ad5b:	bswap  ebx
  40ad5d:	mov    ds:0x843ed9a4,al
  40ad62:	mov    ecx,0x6c7552c0
  40ad67:	adc    al,0x4a
  40ad69:	jae    0x40acf1
  40ad6b:	sub    al,0xb
  40ad6d:	ss mov bh,0x90
  40ad70:	in     eax,0x32
  40ad72:	pusha  
  40ad73:	push   esp
  40ad74:	int    0xf
  40ad76:	sub    BYTE PTR fs:[edx-0x57251812],0x36
  40ad7e:	push   ds
  40ad7f:	pop    ss
  40ad80:	into   
  40ad81:	frstor [edi-0x17]
  40ad84:	xor    ebx,DWORD PTR [ebp+0x3127abbe]
  40ad8a:	aas    
  40ad8b:	stc    
  40ad8c:	scas   al,BYTE PTR es:[edi]
  40ad8d:	aaa    
  40ad8e:	fcomi  st,st(0)
  40ad90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad91:	inc    ebp
  40ad92:	xor    esi,ecx
  40ad94:	xchg   esi,eax
  40ad95:	in     eax,dx
  40ad96:	mov    esi,0x62c082de
  40ad9b:	sti    
  40ad9c:	push   ecx
  40ad9d:	lea    ebp,[edx-0x2b]
  40ada0:	lds    eax,FWORD PTR [esi]
  40ada2:	cmp    DWORD PTR [edx-0x1150bcfd],ebp
  40ada8:	adc    eax,0x20c411f5
  40adad:	pop    edi
  40adae:	pusha  
  40adaf:	jns    0x40ad4d
  40adb1:	xchg   ah,cl
  40adb3:	rcl    BYTE PTR [edi],0xc6
  40adb6:	cmp    esp,esi
  40adb8:	imul   eax,DWORD PTR ds:0xfa431967,0x29
  40adbf:	jge    0x40adf0
  40adc1:	dec    ebx
  40adc2:	hlt    
  40adc3:	or     eax,0xac4ddabb
  40adc8:	outs   dx,BYTE PTR ds:[esi]
  40adc9:	sub    edx,DWORD PTR [edx]
  40adcb:	push   es
  40adcc:	outs   dx,BYTE PTR ds:[esi]
  40adcd:	into   
  40adce:	ins    BYTE PTR es:[edi],dx
  40adcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add0:	fdiv   DWORD PTR [esi+esi*4+0x397fb909]
  40add7:	push   ebx
  40add8:	cmp    ecx,DWORD PTR [eax]
  40adda:	repz arpl di,si
  40addd:	jp     0x40adcf
  40addf:	aas    
  40ade0:	xchg   DWORD PTR [edi],ebx
  40ade2:	sbb    eax,0xcfe99f9
  40ade7:	(bad)  
  40ade8:	mov    ah,0x28
  40adea:	clc    
  40adeb:	fcomp  DWORD PTR [edx+0x1b]
  40adee:	or     bh,BYTE PTR [esi]
  40adf0:	or     dl,BYTE PTR [edx-0x35]
  40adf3:	jae    0x40ae6f
  40adf5:	in     eax,dx
  40adf6:	push   esi
  40adf7:	pop    edi
  40adf8:	imul   edx,ebx,0x673720a
  40adfe:	xor    ah,bh
  40ae00:	adc    BYTE PTR [ecx],ah
  40ae02:	fisttp WORD PTR [eax+0x575d12a7]
  40ae08:	jg     0x40ae40
  40ae0a:	test   BYTE PTR [esi],ch
  40ae0c:	push   ebx
  40ae0d:	mov    bl,0xee
  40ae0f:	mov    ebp,0x3fa9b1c4
  40ae14:	test   DWORD PTR [esi],ecx
  40ae16:	call   0xf2786ffb
  40ae1b:	clc    
  40ae1c:	and    al,0x3a
  40ae1e:	sti    
  40ae1f:	add    esi,edi
  40ae21:	aad    0xbc
  40ae23:	push   ss
  40ae24:	or     al,0xd
  40ae26:	dec    edx
  40ae27:	sbb    esi,esi
  40ae29:	dec    ebx
  40ae2a:	push   cs
  40ae2b:	mov    DWORD PTR [eax+0x573c97eb],edx
  40ae31:	arpl   WORD PTR [edx+ebx*4+0x27],si
  40ae35:	sahf   
  40ae36:	(bad)  
  40ae37:	loope  0x40ae6d
  40ae39:	mov    ds:0x2aa6411f,al
  40ae3e:	jbe    0x40ae8d
  40ae40:	fld    DWORD PTR [ebp-0x2a]
  40ae43:	jle    0x40ae83
  40ae45:	test   eax,0x90321cd3
  40ae4a:	xor    BYTE PTR [ecx-0x5f],bl
  40ae4d:	mov    esp,0x28e4f0da
  40ae52:	(bad)  
  40ae53:	dec    ebx
  40ae54:	pop    edx
  40ae55:	scas   al,BYTE PTR es:[edi]
  40ae56:	xlat   BYTE PTR ds:[ebx]
  40ae57:	popf   
  40ae58:	jecxz  0x40ae4f
  40ae5a:	xor    al,0x9e
  40ae5c:	inc    BYTE PTR [ebx]
  40ae5e:	arpl   di,cx
  40ae60:	jbe    0x40adef
  40ae62:	or     al,0xa7
  40ae64:	mov    dh,0x32
  40ae66:	add    al,0xdd
  40ae68:	pop    edi
  40ae69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae6a:	test   cl,ch
  40ae6c:	push   ss
  40ae6d:	call   0xfcf278be
  40ae72:	xor    ebp,edi
  40ae74:	enter  0x2109,0xca
  40ae78:	adc    DWORD PTR [edi-0x67],0xffffffc9
  40ae7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7d:	test   esp,edx
  40ae7f:	jg     0x40ae99
  40ae81:	fs add esi,0x10
  40ae85:	push   es
  40ae86:	arpl   WORD PTR [eax-0x44758111],di
  40ae8c:	adc    eax,0x12d754e7
  40ae91:	or     DWORD PTR [eax*8-0x2c320236],esp
  40ae98:	pop    ebx
  40ae99:	ss inc ecx
  40ae9b:	sub    cl,dh
  40ae9d:	cmp    edi,DWORD PTR [ebp+0x45e30921]
  40aea3:	cmp    edx,DWORD PTR [ebx+0x7b]
  40aea6:	mov    fs,WORD PTR [edx]
  40aea8:	push   es
  40aea9:	mov    ah,BYTE PTR [ebx+0x22]
  40aeac:	jp     0x40af21
  40aeae:	jo     0x40ae3e
  40aeb0:	shl    esi,0xf7
  40aeb3:	enter  0xc3d7,0xc7
  40aeb7:	ins    BYTE PTR es:[edi],dx
  40aeb8:	add    BYTE PTR [ebp+0x79],bl
  40aebb:	sbb    eax,0x14efd78c
  40aec0:	dec    ebx
  40aec1:	mov    eax,0x74b7f494
  40aec6:	dec    esi
  40aec7:	fstp   QWORD PTR [edx+0xe]
  40aeca:	int    0x95
  40aecc:	in     al,0x81
  40aece:	mov    ah,0x90
  40aed0:	enter  0xe65e,0x2a
  40aed4:	inc    esi
  40aed5:	add    esp,DWORD PTR [ecx-0x6c0a4292]
  40aedb:	dec    edi
  40aedc:	mov    esi,0x60930da8
  40aee1:	sahf   
  40aee2:	mov    al,0xb4
  40aee4:	icebp  
  40aee5:	cmp    eax,0x97306611
  40aeea:	ss (bad) 
  40aeec:	push   edx
  40aeed:	sub    BYTE PTR [ebp-0x4a],cl
  40aef0:	xor    ah,ch
  40aef2:	out    dx,al
  40aef3:	ffree  st(5)
  40aef5:	(bad)  
  40aef6:	pop    eax
  40aef7:	push   es
  40aef8:	dec    esp
  40aef9:	pop    ds
  40aefa:	mov    BYTE PTR [esi],ch
  40aefc:	aaa    
  40aefd:	iret   
  40aefe:	adc    eax,0x5f849b3a
  40af03:	std    
  40af04:	jns    0x40aeec
  40af06:	std    
  40af07:	ja     0x40af09
  40af09:	mov    eax,0xc1d7dbd7
  40af0e:	jnp    0x40aea9
  40af10:	stc    
  40af11:	or     cl,BYTE PTR [ebx]
  40af13:	stc    
  40af14:	nop
  40af15:	push   es
  40af16:	ret    
  40af17:	sti    
  40af18:	pushf  
  40af19:	into   
  40af1a:	push   edx
  40af1b:	dec    esp
  40af1c:	and    esp,DWORD PTR [edx+eax*2]
  40af1f:	mov    ss,WORD PTR [ecx]
  40af21:	xor    DWORD PTR [ebx+0x74],ebx
  40af24:	out    dx,eax
  40af25:	xchg   ebx,eax
  40af26:	push   ecx
  40af27:	pop    es
  40af28:	or     dh,BYTE PTR [esi]
  40af2a:	test   ebx,eax
  40af2c:	mov    cl,0xd3
  40af2e:	cmp    DWORD PTR [esi],esi
  40af30:	cmc    
  40af31:	jge    0x40af39
  40af33:	push   cs
  40af34:	fnstsw WORD PTR [edx]
  40af36:	inc    eax
  40af37:	or     edx,DWORD PTR [eax+0x3453a365]
  40af3d:	adc    DWORD PTR [ecx+0x8],eax
  40af40:	inc    esp
  40af41:	mov    bl,0xa
  40af43:	sbb    ah,0x7c
  40af46:	inc    esp
  40af47:	mov    dl,BYTE PTR [eax+0x3e]
  40af4a:	sbb    DWORD PTR [ebx+0x441f3d17],ecx
  40af50:	retf   0xd0fa
  40af53:	dec    esp
  40af54:	test   BYTE PTR ds:0xb1e7b799,dl
  40af5a:	ret    
  40af5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5c:	xchg   ebx,eax
  40af5d:	jb     0x40afa0
  40af5f:	es (bad) 
  40af61:	imul   esp,DWORD PTR [ecx+0xc],0xcb14f63
  40af68:	inc    ebp
  40af69:	js     0x40af23
  40af6b:	sbb    eax,0x4a8519f
  40af70:	adc    edx,DWORD PTR [eax+0x26777192]
  40af76:	pop    eax
  40af77:	icebp  
  40af78:	push   edi
  40af79:	scas   al,BYTE PTR es:[edi]
  40af7a:	inc    ebx
  40af7b:	adc    eax,0xb14d17b4
  40af80:	jp     0x40afe1
  40af82:	xchg   ebp,eax
  40af83:	imul   edx,DWORD PTR [eax+0x447ccc2],0x3fd3990f
  40af8d:	sub    esp,DWORD PTR [edx]
  40af8f:	retf   0x2476
  40af92:	inc    esp
  40af93:	ror    BYTE PTR [ebx-0x122d96f0],0xa9
  40af9a:	sahf   
  40af9b:	clc    
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	jmp    0x7885:0xd2a47219
  40afb9:	js     0x40b02f
  40afbb:	jle    0x40b035
  40afbd:	js     0x40b015
  40afbf:	inc    ebp
  40afc0:	mov    ds:0x41eea0f,eax
  40afc5:	pop    ecx
  40afc6:	ja     0x40af5f
  40afc8:	lods   eax,DWORD PTR ds:[esi]
  40afc9:	mov    al,0x8f
  40afcb:	(bad)  
  40afcc:	cli    
  40afcd:	aad    0x69
  40afcf:	dec    eax
  40afd0:	lods   eax,DWORD PTR ds:[esi]
  40afd1:	scas   al,BYTE PTR es:[edi]
  40afd2:	bound  ebp,QWORD PTR [ebx-0x2a]
  40afd5:	mov    bl,0xeb
  40afd7:	fidivr DWORD PTR [esp+ebp*4-0x157b34cf]
  40afde:	cdq    
  40afdf:	pop    ebp
  40afe0:	mov    BYTE PTR [edi+0x8],ah
  40afe3:	int3   
  40afe4:	stc    
  40afe5:	call   0x28e9:0x852d74fc
  40afec:	leave  
  40afed:	cmp    cl,ch
  40afef:	or     BYTE PTR [ecx],ch
  40aff1:	sub    ecx,edi
  40aff3:	jns    0x40af93
  40aff5:	push   esp
  40aff6:	fild   QWORD PTR [esi+0x5fa92807]
  40affc:	(bad)  
  40affd:	sti    
  40affe:	sbb    BYTE PTR [ebp-0x42],0xa
  40b002:	ret    0x9f04
  40b005:	sub    al,BYTE PTR [edi-0x4c427d6f]
  40b00b:	jl     0x40afae
  40b00d:	fcom   DWORD PTR [esi-0x35]
  40b010:	mov    ecx,0x50b524de
  40b015:	cli    
  40b016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b017:	xchg   DWORD PTR [eax+0x7adc144],esp
  40b01d:	sahf   
  40b01e:	mov    ds:0xe5caedbc,al
  40b023:	bnd jb 0x40afcd
  40b026:	ret    
  40b027:	mov    edx,0x3b7cfd64
  40b02c:	adc    DWORD PTR [edx],0xa2a3d1a9
  40b032:	adc    al,BYTE PTR [edi]
  40b034:	mov    cl,0xf3
  40b036:	jmp    0xfeca:0xd99a3d0e
  40b03d:	imul   esp,ebx,0xffffff8a
  40b040:	out    dx,eax
  40b041:	iret   
  40b042:	scas   al,BYTE PTR es:[edi]
  40b043:	(bad)  [edx+0x4dc3ff88]
  40b049:	jle    0x40b085
  40b04b:	data16 cli 
  40b04d:	xor    bh,ch
  40b04f:	out    0xa4,al
  40b051:	push   esi
  40b052:	out    0x68,al
  40b054:	(bad)  
  40b055:	test   al,0xef
  40b057:	fs pop eax
  40b059:	add    eax,0x7a02a376
  40b05e:	retf   
  40b05f:	out    0x40,eax
  40b061:	push   eax
  40b062:	mov    ds:0x73a864c3,eax
  40b067:	(bad)  
  40b068:	fidivr DWORD PTR [esi]
  40b06a:	xchg   esi,eax
  40b06b:	dec    esi
  40b06c:	jecxz  0x40b019
  40b06e:	lahf   
  40b06f:	popa   
  40b070:	dec    esi
  40b071:	dec    eax
  40b072:	adc    DWORD PTR [ecx-0x3d],eax
  40b075:	dec    ecx
  40b076:	(bad)  [ebx+0x71]
  40b079:	cmp    eax,0xe06775de
  40b07e:	and    al,BYTE PTR [edi]
  40b080:	(bad)  
  40b081:	fucomi st,st(3)
  40b083:	stos   DWORD PTR es:[edi],eax
  40b084:	xchg   esi,eax
  40b085:	add    dl,ah
  40b087:	idiv   BYTE PTR [ebx-0x4fefb09b]
  40b08d:	mov    ch,0xf
  40b08f:	hlt    
  40b090:	sbb    edx,edx
  40b092:	inc    esi
  40b093:	bound  ebp,QWORD PTR [ebx+0x67]
  40b096:	call   0xb3114459
  40b09b:	mov    esp,0x5d56827a
  40b0a0:	outs   dx,DWORD PTR ds:[esi]
  40b0a1:	nop
  40b0a2:	pop    ebp
  40b0a3:	push   DWORD PTR [edx+0x669be196]
  40b0a9:	pop    eax
  40b0aa:	jle    0x40b101
  40b0ac:	fcmovne st,st(4)
  40b0ae:	xchg   ebx,eax
  40b0af:	or     edx,DWORD PTR [esi]
  40b0b1:	xchg   edi,eax
  40b0b2:	sbb    DWORD PTR [eax+ebp*2-0xe025963],eax
  40b0b9:	sbb    eax,0xf3774d78
  40b0be:	int3   
  40b0bf:	imul   ebx,DWORD PTR [ecx+edi*4-0x40b22975],0xffffffdd
  40b0c7:	add    al,0x9d
  40b0c9:	mov    dh,0xdb
  40b0cb:	jnp    0x40b122
  40b0cd:	out    dx,al
  40b0ce:	ss pusha 
  40b0d0:	jmp    0xc13b35f2
  40b0d5:	mov    al,bl
  40b0d7:	mov    esp,0x53a23cd8
  40b0dc:	aas    
  40b0dd:	bound  ecx,QWORD PTR [esi+0x6e8ee6f9]
  40b0e3:	ror    BYTE PTR [eax],1
  40b0e5:	adc    ebp,DWORD PTR [esi+edx*2+0x74]
  40b0e9:	outs   dx,BYTE PTR ds:[esi]
  40b0ea:	xor    DWORD PTR ds:0x1056fda7,ebx
  40b0f0:	loopne 0x40b0cc
  40b0f2:	or     eax,esp
  40b0f4:	ret    
  40b0f5:	inc    ecx
  40b0f6:	xchg   DWORD PTR [ebp-0x287bf49],edx
  40b0fc:	cmp    DWORD PTR [edi],edi
  40b0fe:	mov    ds:0x8dac8469,al
  40b103:	push   es
  40b104:	sbb    ebx,edx
  40b106:	addr16 int 0x9e
  40b109:	das    
  40b10a:	adc    dh,BYTE PTR [edx-0x16]
  40b10d:	(bad)  
  40b10e:	rcl    DWORD PTR [edx+0xa6204ec],0xfc
  40b115:	out    dx,eax
  40b116:	xor    al,0x72
  40b118:	sbb    BYTE PTR ds:[ebx+0x6384c5c2],0x28
  40b120:	popf   
  40b121:	std    
  40b122:	div    edi
  40b124:	sar    DWORD PTR [edx+0x5e0d6278],cl
  40b12a:	sub    eax,0x8786069b
  40b12f:	or     BYTE PTR [ebp+0x62],0xed
  40b133:	xchg   ebx,eax
  40b134:	xor    al,0x1
  40b136:	pop    esp
  40b137:	out    0x36,al
  40b139:	push   ebx
  40b13a:	cmp    al,0xb6
  40b13c:	in     al,0x7e
  40b13e:	pop    ebp
  40b13f:	pop    ebx
  40b140:	sub    BYTE PTR [edi-0x4],0x2c
  40b144:	jae    0x40b133
  40b146:	in     eax,dx
  40b147:	xchg   edi,eax
  40b148:	pop    ebx
  40b149:	jbe    0x40b0d2
  40b14b:	xchg   esi,eax
  40b14c:	lods   eax,DWORD PTR ds:[esi]
  40b14d:	xor    DWORD PTR [ebx],esp
  40b14f:	adc    al,0x4e
  40b151:	adc    al,0x61
  40b153:	jle    0x40b1d3
  40b155:	mov    eax,ds:0x381cd9f0
  40b15a:	jmp    0xa0515f3e
  40b15f:	xlat   BYTE PTR ds:[ebx]
  40b160:	sbb    dl,BYTE PTR [eax-0x2a]
  40b163:	pop    ss
  40b164:	ds jo  0x40b11b
  40b167:	cmp    eax,0x680533c5
  40b16c:	push   ebx
  40b16d:	pop    edi
  40b16e:	cmp    dh,bh
  40b170:	call   0x215ee526
  40b175:	xchg   DWORD PTR fs:[edi-0x61],esi
  40b179:	cmp    eax,0x7589bd7b
  40b17e:	ret    
  40b17f:	getsec 
  40b181:	clc    
  40b182:	shl    DWORD PTR [eax-0x16],1
  40b185:	dec    ecx
  40b186:	pop    es
  40b187:	push   ebx
  40b188:	and    esp,0xfffffff0
  40b18b:	jmp    DWORD PTR [ebx+esi*1]
  40b18e:	sbb    BYTE PTR ds:0xbfb51903,dh
  40b194:	stc    
  40b195:	stos   BYTE PTR es:[edi],al
  40b196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b197:	push   es
  40b198:	and    ebp,DWORD PTR [edi-0x1484a980]
  40b19e:	sub    ch,BYTE PTR [ebx]
  40b1a0:	icebp  
  40b1a1:	jae    0x40b15b
  40b1a3:	fwait
  40b1a4:	inc    edi
  40b1a5:	cmp    al,0x85
  40b1a7:	push   0xd837b492
  40b1ac:	add    al,0x12
  40b1ae:	mov    edx,DWORD PTR [esi-0x44]
  40b1b1:	(bad)  
  40b1b2:	stos   DWORD PTR es:[edi],eax
  40b1b3:	mov    bh,0xf5
  40b1b5:	ins    DWORD PTR es:[edi],dx
  40b1b6:	add    BYTE PTR [ebx],0x7c
  40b1b9:	shr    DWORD PTR [ecx+eiz*8],1
  40b1bc:	dec    ebx
  40b1bd:	push   0x1f157bd9
  40b1c2:	pop    ebp
  40b1c3:	mov    ebx,0xc2532f37
  40b1c8:	arpl   WORD PTR [esp+eiz*8+0x295d1cb3],dx
  40b1cf:	test   al,0x9c
  40b1d1:	jle    0x40b16d
  40b1d3:	imul   DWORD PTR [ebp-0x51]
  40b1d6:	add    BYTE PTR ds:[eax-0x560f9b9d],ah
  40b1dd:	adc    dh,BYTE PTR [ecx+0x32]
  40b1e0:	outs   dx,DWORD PTR ds:[esi]
  40b1e1:	imul   esi,DWORD PTR [eax-0x3f6b892d],0x18fd3e42
  40b1eb:	inc    edi
  40b1ec:	fwait
  40b1ed:	push   0xfffffff8
  40b1ef:	fs push 0x51
  40b1f2:	jp     0x40b198
  40b1f4:	dec    edi
  40b1f5:	lods   eax,DWORD PTR ds:[esi]
  40b1f6:	dec    ecx
  40b1f7:	push   ds
  40b1f8:	pop    edx
  40b1f9:	test   al,0xd6
  40b1fb:	add    cl,ch
  40b1fd:	repz mov edi,0x18801168
  40b203:	shr    cl,1
  40b205:	idiv   DWORD PTR [ebp-0x4fd1936d]
  40b20b:	iret   
  40b20c:	repnz xor DWORD PTR [ecx+0x4d],0xffffff8e
  40b211:	mov    eax,ds:0xe7d55360
  40b216:	arpl   sp,sp
  40b218:	test   DWORD PTR [ecx-0x4cce7b32],0x97719f9e
  40b222:	popf   
  40b223:	sti    
  40b224:	outs   dx,DWORD PTR ds:[esi]
  40b225:	adc    eax,0x2801c726
  40b22a:	lods   eax,DWORD PTR ds:[esi]
  40b22b:	js     0x40b263
  40b22d:	or     cl,BYTE PTR [esi-0x1f]
  40b230:	push   ss
  40b231:	call   0x155eee91
  40b236:	xlat   BYTE PTR ds:[ebx]
  40b237:	or     ebp,DWORD PTR [ecx-0x74e5ece2]
  40b23d:	add    al,0xaf
  40b23f:	clc    
  40b240:	add    esp,ecx
  40b242:	retf   
  40b243:	sub    al,BYTE PTR [ebx-0x6b]
  40b246:	sbb    cl,BYTE PTR [esi-0x33]
  40b249:	add    edi,DWORD PTR [esi]
  40b24b:	popa   
  40b24c:	nop
  40b24d:	mov    esi,0x8cb6da5d
  40b252:	inc    ebx
  40b253:	call   0x90b3:0x28f41ddc
  40b25a:	mov    cs,WORD PTR [ecx+0x2a]
  40b25d:	adc    DWORD PTR [ebx-0x77e0c215],esi
  40b263:	ins    BYTE PTR es:[edi],dx
  40b264:	xor    ecx,ebp
  40b266:	rol    DWORD PTR [eax+0x38182c17],0x4d
  40b26d:	dec    ecx
  40b26e:	xchg   edi,eax
  40b26f:	xchg   ebx,eax
  40b270:	shl    DWORD PTR [edi],cl
  40b272:	sbb    BYTE PTR [edi],ch
  40b274:	test   BYTE PTR [ecx+0x56cf5ce2],cl
  40b27a:	fcomp  DWORD PTR [edx+0x4]
  40b27d:	mov    ah,0x5d
  40b27f:	sbb    eax,0x3c34200f
  40b284:	mov    ds:0x3aee0c40,eax
  40b289:	push   esi
  40b28a:	out    dx,al
  40b28b:	or     BYTE PTR [eax],ah
  40b28d:	jnp    0x40b2fd
  40b28f:	xor    al,0xcc
  40b291:	dec    ebx
  40b292:	cmp    al,0x32
  40b294:	fs in  al,0xb
  40b297:	fbld   TBYTE PTR [edi+ebx*8]
  40b29a:	fadd   QWORD PTR [ebp+ebp*2+0x8354ad6]
  40b2a1:	lea    ebp,[ebx]
  40b2a3:	sub    edx,DWORD PTR [esi+esi*8]
  40b2a6:	dec    eax
  40b2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a8:	cs inc esi
  40b2aa:	clc    
  40b2ab:	push   ds
  40b2ac:	jecxz  0x40b274
  40b2ae:	adc    edi,DWORD PTR [eax-0x6d6ac777]
  40b2b4:	mov    edx,DWORD PTR [edi+ebx*1-0x55]
  40b2b8:	lods   al,BYTE PTR ds:[esi]
  40b2b9:	idiv   DWORD PTR ds:0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x26dcb132
  40b2d2:	xor    ecx,DWORD PTR [esi-0x32]
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	sbb    BYTE PTR [eax],bh
  40b2de:	aas    
  40b2df:	jno    0x40b34d
  40b2e1:	lds    eax,FWORD PTR [ecx]
  40b2e3:	or     BYTE PTR [ecx-0x120729b2],bl
  40b2e9:	and    al,dh
  40b2eb:	push   esp
  40b2ec:	mov    ds:0xc8c032d6,al
  40b2f1:	rol    BYTE PTR [ecx],1
  40b2f3:	jbe    0x40b2f9
  40b2f5:	xchg   ebp,eax
  40b2f6:	(bad)  
  40b2f8:	xor    esi,ebp
  40b2fa:	sbb    edi,eax
  40b2fc:	adc    edi,DWORD PTR [edx-0x12994394]
  40b302:	ins    DWORD PTR es:[edi],dx
  40b303:	cmp    al,0x9e
  40b305:	idiv   edx
  40b307:	xchg   ecx,eax
  40b308:	jecxz  0x40b358
  40b30a:	or     eax,DWORD PTR [eax-0x35]
  40b30d:	or     BYTE PTR [ecx*2-0x2de9e270],dh
  40b314:	(bad)  
  40b315:	sbb    eax,0xe067287
  40b31a:	shr    DWORD PTR [esi+ebp*2+0x76],1
  40b31e:	push   ss
  40b31f:	mov    edi,0x524971ef
  40b324:	fst    DWORD PTR [esi+0x25]
  40b327:	leave  
  40b328:	mov    dl,0x40
  40b32a:	dec    ebx
  40b32b:	push   ebp
  40b32c:	pop    esi
  40b32d:	cmp    eax,0x71528a7f
  40b332:	ins    DWORD PTR es:[edi],dx
  40b333:	fisttp DWORD PTR [ebx+ebp*1+0xc]
  40b337:	ds jmp 0x2855b513
  40b33d:	popa   
  40b33e:	shr    DWORD PTR [edi+0x1fdc41f0],0xa6
  40b345:	sti    
  40b346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b347:	jb     0x40b3a2
  40b349:	mov    ds:0x2eac5bd4,al
  40b34e:	cli    
  40b34f:	sbb    ebx,DWORD PTR [ecx]
  40b351:	mov    ecx,0xa4b719c4
  40b356:	add    BYTE PTR [eax-0x2e],dl
  40b359:	fist   WORD PTR [esi]
  40b35b:	inc    eax
  40b35c:	es dec ebx
  40b35e:	rdmsr  
  40b360:	loopne 0x40b30a
  40b362:	out    0x64,al
  40b364:	sbb    eax,0xcd622f6d
  40b369:	fistp  QWORD PTR [edi+0x3f]
  40b36c:	add    al,0x40
  40b36e:	lahf   
  40b36f:	adc    DWORD PTR [ecx-0x6d],ebx
  40b372:	rol    DWORD PTR [ebp-0x30c16f48],cl
  40b378:	mov    eax,ds:0xec44ed62
  40b37d:	std    
  40b37e:	jmp    DWORD PTR [esi-0x19]
  40b381:	cmc    
  40b382:	inc    ebx
  40b383:	push   esp
  40b384:	(bad)  
  40b385:	pop    eax
  40b386:	jnp    0x40b3ad
  40b388:	jae    0x40b3bf
  40b38a:	inc    ebp
  40b38b:	in     eax,dx
  40b38c:	pushf  
  40b38d:	neg    DWORD PTR [edi]
  40b38f:	pop    esi
  40b390:	push   eax
  40b391:	std    
  40b392:	or     al,0xe1
  40b394:	and    dl,BYTE PTR [edx+0x4c]
  40b397:	xor    al,0x69
  40b399:	xchg   edx,eax
  40b39a:	dec    esi
  40b39b:	ins    DWORD PTR es:[edi],dx
  40b39c:	xchg   DWORD PTR [eax-0x2b326f23],edx
  40b3a2:	cdq    
  40b3a3:	loop   0x40b3cf
  40b3a5:	out    dx,eax
  40b3a6:	or     BYTE PTR [edi-0x756040ac],cl
  40b3ac:	shl    DWORD PTR [ecx],0x8b
  40b3af:	bound  ebx,QWORD PTR [ebp+0x70]
  40b3b2:	dec    ebp
  40b3b3:	and    ah,ah
  40b3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3b6:	jecxz  0x40b36b
  40b3b8:	xchg   ebp,eax
  40b3b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ba:	mov    al,0x3d
  40b3bc:	lock int3 
  40b3be:	mov    eax,0x483c9937
  40b3c3:	xor    bl,BYTE PTR [esi+eiz*8-0x66]
  40b3c7:	cmp    edx,ebx
  40b3c9:	and    DWORD PTR [edi-0x40],0xffffffbb
  40b3cd:	lods   al,BYTE PTR ds:[esi]
  40b3ce:	ret    0x3ee4
  40b3d1:	(bad)  
  40b3d2:	jl     0x40b3ed
  40b3d4:	jns    0x40b3da
  40b3d6:	sbb    al,0x8f
  40b3d8:	pop    ebx
  40b3d9:	mov    ds:0xc6aa1d7b,eax
  40b3de:	ins    BYTE PTR es:[edi],dx
  40b3df:	mov    ah,0x86
  40b3e1:	repz cmp dl,BYTE PTR [edx+0x67]
  40b3e5:	cmp    DWORD PTR [esi-0x32],0x2c492af1
  40b3ec:	stos   BYTE PTR es:[edi],al
  40b3ed:	outs   dx,BYTE PTR ds:[esi]
  40b3ee:	ret    
  40b3ef:	daa    
  40b3f0:	xchg   esp,eax
  40b3f1:	xor    dh,cl
  40b3f3:	and    ebp,DWORD PTR [ebx-0x55de58b2]
  40b3f9:	shr    cl,cl
  40b3fb:	stc    
  40b3fc:	(bad)  
  40b3fd:	mov    es,eax
  40b3ff:	sub    al,0xc2
  40b401:	sub    eax,0x5dd4ec63
  40b406:	inc    edx
  40b407:	mov    cs,WORD PTR [esp+edi*2]
  40b40a:	cs cwde 
  40b40c:	cmp    BYTE PTR [edi+edi*4],0x6
  40b410:	mov    ebx,0xa08dc763
  40b415:	popa   
  40b416:	popf   
  40b417:	aaa    
  40b418:	mov    dl,0xc9
  40b41a:	cmc    
  40b41b:	outs   dx,DWORD PTR ds:[esi]
  40b41c:	dec    eax
  40b41d:	cli    
  40b41e:	fbld   TBYTE PTR [ebx+ebp*8+0x43]
  40b422:	sub    eax,0xe351d24e
  40b427:	test   DWORD PTR [ecx+0x19],0xdde442da
  40b42e:	fiadd  DWORD PTR [ebx]
  40b430:	daa    
  40b431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b432:	adc    dl,cl
  40b434:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b436:	jmp    DWORD PTR [ecx+0x5778ccf9]
  40b43c:	xor    eax,0xfb89f194
  40b441:	cmp    al,0xec
  40b443:	jmp    0x6593:0x4ca7a3fc
  40b44a:	jl     0x40b41f
  40b44c:	hlt    
  40b44d:	or     edi,ebp
  40b44f:	mov    ah,0x6e
  40b451:	cmp    al,0x50
  40b453:	cmp    dl,BYTE PTR [edi]
  40b455:	mov    esi,0x5735fb60
  40b45a:	stos   DWORD PTR es:[edi],eax
  40b45b:	shl    DWORD PTR [ebp+0x4d96d1cc],cl
  40b461:	sbb    al,0x15
  40b463:	and    BYTE PTR [ebp+0x6e],ah
  40b466:	or     BYTE PTR [edi],dh
  40b468:	fdivrp st(3),st
  40b46a:	jle    0x40b411
  40b46c:	sbb    BYTE PTR [edx+ebx*2-0x615017af],cl
  40b473:	out    dx,eax
  40b474:	mov    ebp,0xe6ce58d8
  40b479:	dec    eax
  40b47a:	jno    0x40b481
  40b47c:	sub    DWORD PTR [esi-0x73],0x855ad252
  40b483:	xlat   BYTE PTR ds:[ebx]
  40b484:	into   
  40b485:	jle    0x40b49f
  40b487:	inc    edi
  40b488:	dec    edx
  40b489:	in     eax,dx
  40b48a:	pop    es
  40b48b:	dec    esi
  40b48c:	aaa    
  40b48d:	ins    DWORD PTR es:[edi],dx
  40b48e:	jle    0x40b441
  40b490:	imul   esi,DWORD PTR ds:0xe8c5feab,0xffffffe6
  40b497:	mov    ds:0x4fa84c67,eax
  40b49c:	jg     0x40b44a
  40b49e:	push   ds
  40b49f:	pop    ss
  40b4a0:	je     0x40b4f8
  40b4a2:	jne    0x40b521
  40b4a4:	clc    
  40b4a5:	cmp    eax,0x7930264c
  40b4aa:	stc    
  40b4ab:	cs jmp 0x40b4b0
  40b4ae:	mov    eax,ds:0xbffaaf43
  40b4b3:	fild   QWORD PTR [eax]
  40b4b5:	cmp    eax,0x2ef57e65
  40b4ba:	jecxz  0x40b48d
  40b4bc:	jns    0x40b477
  40b4be:	iret   
  40b4bf:	or     al,0x94
  40b4c1:	pusha  
  40b4c2:	inc    ebp
  40b4c3:	sub    BYTE PTR [esi-0x29b36b6d],0xcd
  40b4ca:	loope  0x40b49e
  40b4cc:	cmp    edi,DWORD PTR [edi+0x7]
  40b4cf:	je     0x40b460
  40b4d1:	ins    BYTE PTR es:[edi],dx
  40b4d2:	add    cl,BYTE PTR [eax-0x2b07c13a]
  40b4d8:	ja     0x40b474
  40b4da:	adc    DWORD PTR [esi],ecx
  40b4dc:	sbb    al,0xfb
  40b4de:	jg     0x40b4a2
  40b4e0:	dec    ebp
  40b4e1:	sbb    eax,0x99f27146
  40b4e6:	and    bh,cl
  40b4e8:	adc    cl,cl
  40b4ea:	es ja  0x40b563
  40b4ed:	dec    esp
  40b4ee:	push   0x4d
  40b4f0:	cwde   
  40b4f1:	and    al,0x8b
  40b4f3:	pop    edx
  40b4f4:	jg     0x40b4c1
  40b4f6:	or     al,BYTE PTR [eax+0x14da62ce]
  40b4fc:	ret    0xca5c
  40b4ff:	mov    ch,0x2b
  40b501:	dec    ebp
  40b502:	pop    edx
  40b503:	inc    ecx
  40b504:	sbb    eax,0x9530bb8a
  40b509:	mov    BYTE PTR [ecx+ebp*2],al
  40b50c:	jg     0x40b56c
  40b50e:	bound  esi,QWORD PTR [ebp+0x3d]
  40b511:	or     ebp,DWORD PTR [ebx]
  40b513:	sub    DWORD PTR [ebp+0x78],ebx
  40b516:	lods   eax,DWORD PTR ds:[esi]
  40b517:	add    ah,BYTE PTR [ecx-0x64]
  40b51a:	push   esi
  40b51b:	ds retf 
  40b51d:	fcmovbe st,st(6)
  40b51f:	pop    edi
  40b520:	mov    ds:0x322814f7,eax
  40b525:	sbb    BYTE PTR [edx+0x2401e550],bl
  40b52b:	mov    al,0x5c
  40b52d:	sub    al,0xb9
  40b52f:	inc    eax
  40b530:	xchg   ebx,eax
  40b531:	fdivr  st,st(3)
  40b533:	imul   ebp,DWORD PTR [eax-0x40009d1b],0x15
  40b53a:	ficomp DWORD PTR [edx+0x3e957e49]
  40b540:	leave  
  40b541:	retf   0xdfa8
  40b544:	data16 mov ds:0x234ebac3,al
  40b54a:	sbb    eax,0xd95e4833
  40b54f:	mov    WORD PTR [eax-0x31],fs
  40b552:	sbb    bl,ah
  40b554:	loop   0x40b555
  40b556:	dec    eax
  40b557:	jge    0x40b579
  40b559:	cmp    bl,cl
  40b55b:	dec    esp
  40b55c:	add    BYTE PTR [edx+esi*1],cl
  40b55f:	sub    edx,DWORD PTR [ebx]
  40b561:	loopne 0x40b5aa
  40b563:	cdq    
  40b564:	popf   
  40b565:	pop    bp
  40b567:	les    esp,FWORD PTR [eax-0x3f]
  40b56a:	mov    ?,WORD PTR [edi]
  40b56c:	sub    dl,BYTE PTR [esi-0x44]
  40b56f:	mov    ds:0xa2122f9a,eax
  40b574:	not    DWORD PTR [edx]
  40b576:	enter  0x5e09,0x9d
  40b57a:	sbb    ebp,ecx
  40b57c:	mov    ds:0x1ac4bb4a,eax
  40b581:	xchg   ecx,eax
  40b582:	aas    
  40b583:	push   ecx
  40b584:	into   
  40b585:	mov    al,ds:0x10ce54b8
  40b58a:	fbld   TBYTE PTR [esp+ebx*4-0x4d5559c8]
  40b591:	test   al,0xb8
  40b593:	mov    al,ds:0x43f6c48f
  40b598:	push   0xffffff81
  40b59a:	cmp    al,0x33
  40b59c:	add    ah,BYTE PTR [edx+0x19]
  40b59f:	js     0x40b5ef
  40b5a1:	sbb    BYTE PTR [ebx],dh
  40b5a3:	mov    eax,ds:0x5d4c2517
  40b5a8:	rol    DWORD PTR ds:0xa7439e1e,cl
  40b5ae:	push   0xcc3e2987
  40b5b3:	push   ds
  40b5b4:	retf   0x39d4
  40b5b7:	or     ebx,edi
  40b5b9:	or     al,0x6c
  40b5bb:	enter  0x9ac,0xd4
  40b5bf:	push   edi
  40b5c0:	add    edi,DWORD PTR [ecx-0x62201af5]
  40b5c6:	test   al,0x74
  40b5c8:	stos   BYTE PTR es:[di],al
  40b5ca:	lods   eax,DWORD PTR ds:[esi]
  40b5cb:	arpl   WORD PTR [eax],bp
  40b5cd:	lds    eax,FWORD PTR [ebp+0x46dffb3b]
  40b5d3:	and    al,BYTE PTR [ebx-0x46]
  40b5d6:	sub    DWORD PTR [eax+0xf],ebp
  40b5d9:	test   BYTE PTR [edi],dl
  40b5db:	add    BYTE PTR [eax],al
  40b5dd:	add    BYTE PTR [ebx+0x881e445],cl
  40b5e3:	popf   
  40b5e4:	sbb    al,0x75
  40b5e6:	pusha  
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi+0x56ccd584]
  40b60d:	inc    edi
  40b60e:	cmp    ah,BYTE PTR [esi+0x78788fca]
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	test   eax,0x6f3ee24b
  40b61d:	mov    ds:0xefe8dcf7,al
  40b622:	dec    esi
  40b623:	mov    dh,0x84
  40b625:	int3   
  40b626:	gs inc eax
  40b628:	mov    ebx,0xc5ec63f4
  40b62d:	cmc    
  40b62e:	inc    eax
  40b62f:	test   DWORD PTR [ebx-0x1],0xc7cd3b84
  40b636:	sbb    eax,0x45846ddc
  40b63b:	sbb    eax,0x40eee1fe
  40b640:	lds    ebp,FWORD PTR [ecx]
  40b642:	mov    WORD PTR [esi],?
  40b644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b646:	pushf  
  40b647:	push   esi
  40b648:	add    eax,DWORD PTR [ecx]
  40b64a:	cmp    ebp,ebp
  40b64c:	nop
  40b64d:	mov    esp,0xcbc42038
  40b652:	popf   
  40b653:	and    edx,DWORD PTR [ebp+0x28]
  40b656:	inc    ebx
  40b657:	sub    al,0x67
  40b659:	(bad)  
  40b65a:	loope  0x40b604
  40b65c:	mov    bh,0x7
  40b65e:	out    0x53,eax
  40b660:	aam    0xfd
  40b662:	jns    0x40b5eb
  40b664:	xor    BYTE PTR gs:[edi-0x5c],cl
  40b668:	jne    0x40b671
  40b66a:	out    dx,eax
  40b66b:	sbb    al,0x18
  40b66d:	ja     0x40b6c8
  40b66f:	(bad)  [edi+0x31]
  40b672:	pusha  
  40b673:	cmp    edx,esp
  40b675:	and    al,0x56
  40b677:	xchg   esp,eax
  40b678:	xor    ah,BYTE PTR [ebx-0x5d]
  40b67b:	mov    DWORD PTR [eax],edx
  40b67d:	push   cs
  40b67e:	test   al,0x96
  40b680:	sahf   
  40b681:	jp     0x40b655
  40b683:	or     DWORD PTR [edi-0x28d417ce],ebp
  40b689:	jg     0x40b6c3
  40b68b:	jecxz  0x40b640
  40b68d:	mov    edx,0x3aedba06
  40b692:	xchg   esp,eax
  40b693:	out    dx,eax
  40b694:	and    bl,BYTE PTR [edx+0x3cafcb6e]
  40b69a:	lahf   
  40b69b:	fild   WORD PTR [edi+ecx*2-0xd09f0e]
  40b6a2:	aaa    
  40b6a3:	lahf   
  40b6a4:	sub    eax,0xf55e24b2
  40b6a9:	int    0x46
  40b6ab:	mov    ah,BYTE PTR [eax-0x2e42074]
  40b6b1:	aam    0x8a
  40b6b3:	pop    edx
  40b6b4:	dec    ebp
  40b6b5:	inc    edx
  40b6b6:	or     DWORD PTR [edi+0x46],0x62
  40b6ba:	jmp    0xda0c4f41
  40b6bf:	mov    eax,0xf2489343
  40b6c4:	and    ebx,DWORD PTR [ecx+0x7e493fcc]
  40b6ca:	inc    ecx
  40b6cb:	ret    0x8456
  40b6ce:	push   ebp
  40b6cf:	inc    BYTE PTR [edx]
  40b6d1:	push   esi
  40b6d2:	inc    eax
  40b6d3:	(bad)  
  40b6d4:	fst    QWORD PTR [ebx]
  40b6d6:	out    dx,al
  40b6d7:	loope  0x40b74f
  40b6d9:	int    0xd4
  40b6db:	pop    esp
  40b6dc:	sub    eax,0xf9587362
  40b6e1:	add    BYTE PTR [edx+0x74],ch
  40b6e4:	or     ecx,DWORD PTR [ecx-0x53ee4cd7]
  40b6ea:	cld    
  40b6eb:	xchg   esp,eax
  40b6ec:	and    bh,BYTE PTR fs:[edi+0x55d9f948]
  40b6f3:	mov    ds:0xc8bd2e88,al
  40b6f8:	out    0x8d,eax
  40b6fa:	fild   WORD PTR [esi+0x4cc2a43]
  40b700:	and    ecx,DWORD PTR [ebx-0xa]
  40b703:	cs pop ss
  40b705:	cmp    bl,BYTE PTR [ecx]
  40b707:	aaa    
  40b708:	jbe    0x40b739
  40b70a:	jmp    edi
  40b70c:	add    al,0x88
  40b70e:	add    BYTE PTR [edx-0x4cb25bf9],ch
  40b714:	push   ds
  40b715:	out    dx,eax
  40b716:	or     al,0xef
  40b718:	sbb    eax,0x301ebee2
  40b71d:	ins    BYTE PTR es:[edi],dx
  40b71e:	aaa    
  40b71f:	fiadd  DWORD PTR [eax-0x52]
  40b722:	out    0xf4,eax
  40b724:	ret    
  40b725:	cld    
  40b726:	out    0x54,al
  40b728:	xchg   ecx,eax
  40b729:	in     al,0x41
  40b72b:	add    esp,DWORD PTR [edx-0x48]
  40b72e:	dec    eax
  40b72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b730:	jge    0x40b71f
  40b732:	adc    ebx,DWORD PTR [ebp+esi*1-0x38cb03cd]
  40b739:	pop    es
  40b73a:	mov    ecx,0x781b7f81
  40b73f:	in     al,dx
  40b740:	fdivr  QWORD PTR [ebp-0xd14dc97]
  40b746:	jne    0x40b6d3
  40b748:	xor    DWORD PTR [edx-0x57],ecx
  40b74b:	xchg   edi,eax
  40b74c:	mov    edx,DWORD PTR ds:0x2be501b4
  40b752:	dec    esp
  40b753:	mov    WORD PTR [esi+0x51d082bb],cs
  40b759:	pop    esp
  40b75a:	ss ins BYTE PTR es:[edi],dx
  40b75c:	pop    esp
  40b75d:	cld    
  40b75e:	pusha  
  40b75f:	mov    ebx,esp
  40b761:	jg     0x40b75d
  40b763:	mov    ebx,0x4b52eda7
  40b768:	nop
  40b769:	mov    al,ds:0xafb5bbf2
  40b76e:	xlat   BYTE PTR ds:[ebx]
  40b76f:	mov    ebp,0xc9ddb14c
  40b774:	cmp    eax,0x300f7468
  40b779:	call   0xbe916459
  40b77e:	pop    esi
  40b77f:	loop   0x40b76e
  40b781:	jge    0x40b79a
  40b783:	int    0x2c
  40b785:	arpl   WORD PTR [ebx],ax
  40b787:	mov    ah,ch
  40b789:	pop    eax
  40b78a:	mov    BYTE PTR [ebx-0x6eb80222],0xdc
  40b791:	test   al,0x49
  40b793:	sbb    al,0x71
  40b795:	mov    ecx,0x2be67747
  40b79a:	test   eax,0x9951d4d9
  40b79f:	jnp    0x40b769
  40b7a1:	stos   DWORD PTR es:[edi],eax
  40b7a2:	mov    al,ds:0x40042c91
  40b7a7:	fnstcw WORD PTR [edx]
  40b7a9:	sar    BYTE PTR [ecx+ebp*4+0x18],1
  40b7ad:	mov    cl,0x51
  40b7af:	mov    bh,0x4b
  40b7b1:	add    eax,0x1d9098b3
  40b7b6:	sbb    al,0x30
  40b7b8:	jno    0x40b834
  40b7ba:	dec    edi
  40b7bb:	pusha  
  40b7bc:	das    
  40b7bd:	xchg   ebp,eax
  40b7be:	test   eax,0x9edfb3b1
  40b7c3:	xchg   edx,eax
  40b7c4:	jg     0x40b801
  40b7c6:	push   edi
  40b7c7:	enter  0xab47,0x2a
  40b7cb:	pop    ss
  40b7cc:	cmp    cl,BYTE PTR [ebp-0x22d1c45d]
  40b7d2:	dec    ebx
  40b7d3:	mov    esi,DWORD PTR [ebp-0x1f3e4291]
  40b7d9:	popf   
  40b7da:	jmp    0x104273cb
  40b7df:	sbb    DWORD PTR [ebp-0x5b8a27a7],esp
  40b7e5:	clc    
  40b7e6:	fsub   DWORD PTR [ecx-0x29]
  40b7e9:	jo     0x40b855
  40b7eb:	inc    ebp
  40b7ec:	test   DWORD PTR [esi-0x10a6e7b5],0x34a19a99
  40b7f6:	hlt    
  40b7f7:	mov    ebp,DWORD PTR [ecx+eiz*4-0x1e]
  40b7fb:	push   eax
  40b7fc:	or     dl,BYTE PTR [edx]
  40b7fe:	pop    ecx
  40b7ff:	ja     0x40b80d
  40b801:	add    esp,eax
  40b803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b804:	std    
  40b805:	cwde   
  40b806:	fabs   
  40b808:	push   esp
  40b809:	or     DWORD PTR [edi-0x15065d62],ebp
  40b80f:	cs out 0x2b,eax
  40b812:	mov    ebp,edi
  40b814:	push   ecx
  40b815:	push   ecx
  40b816:	xor    BYTE PTR [esi+esi*8+0x15d89606],bh
  40b81d:	and    BYTE PTR [edi-0x7e],bh
  40b820:	cmp    al,0xa0
  40b822:	adc    al,BYTE PTR [esi-0x18]
  40b825:	repz popa 
  40b827:	jo     0x40b854
  40b829:	pop    esp
  40b82a:	inc    ecx
  40b82b:	sahf   
  40b82c:	je     0x40b7ca
  40b82e:	sub    BYTE PTR [esi-0x3e],0x86
  40b832:	or     DWORD PTR [ecx+0xe],edi
  40b835:	stos   DWORD PTR es:[edi],eax
  40b836:	adc    ch,BYTE PTR [edx+ecx*8+0x2cb246cd]
  40b83d:	xchg   ebp,eax
  40b83e:	outs   dx,DWORD PTR ds:[esi]
  40b83f:	mov    ?,ebp
  40b841:	das    
  40b842:	push   edi
  40b843:	cmp    eax,0x340ea801
  40b848:	(bad)  
  40b849:	cld    
  40b84a:	jp     0x40b872
  40b84c:	jl     0x40b845
  40b84e:	jo     0x40b7f8
  40b850:	push   ebx
  40b851:	icebp  
  40b852:	inc    ebx
  40b853:	mov    al,ds:0xedfe6ef7
  40b858:	lea    ebp,[esi]
  40b85a:	or     ch,al
  40b85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b85d:	add    al,0x13
  40b85f:	pop    edi
  40b860:	cld    
  40b861:	ret    
  40b862:	pop    edx
  40b863:	pop    ds
  40b864:	jmp    0x40b811
  40b866:	or     DWORD PTR [ecx+0x7500c68a],ebx
  40b86c:	add    al,0xb
  40b86e:	adc    BYTE PTR [esi+0x62],dh
  40b871:	outs   dx,BYTE PTR ds:[esi]
  40b872:	out    0xe3,eax
  40b874:	lods   al,BYTE PTR ds:[esi]
  40b875:	fucomp st(7)
  40b877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b878:	iret   
  40b879:	jo     0x40b83d
  40b87b:	sbb    esp,DWORD PTR [esi]
  40b87d:	ins    BYTE PTR es:[edi],dx
  40b87e:	cmp    al,0x11
  40b880:	sub    eax,0xc3469d3e
  40b885:	xchg   ebp,eax
  40b886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b887:	push   cs
  40b888:	fwait
  40b889:	or     eax,0x5489a81b
  40b88e:	int    0x85
  40b890:	sub    DWORD PTR fs:[esi],ecx
  40b893:	(bad)  
  40b894:	clc    
  40b895:	ja     0x40b849
  40b897:	fsubr  st,st(1)
  40b899:	and    ecx,DWORD PTR [ecx+0x553b03e7]
  40b89f:	inc    ebp
  40b8a0:	js     0x40b8a4
  40b8a2:	shr    esp,cl
  40b8a4:	das    
  40b8a5:	jne    0x40b856
  40b8a7:	add    BYTE PTR [esi-0x15],bl
  40b8aa:	les    ebp,FWORD PTR [edi]
  40b8ac:	jp     0x40b8ed
  40b8ae:	cs addr16 xchg edx,eax
  40b8b1:	jge    0x40b85e
  40b8b3:	sub    eax,0xb09bd3fd
  40b8b8:	add    al,0x3d
  40b8ba:	sbb    DWORD PTR [ecx-0x13],0x61fa31d4
  40b8c1:	ja     0x40b8ec
  40b8c3:	imul   esi,ecx,0xffffffe8
  40b8c6:	ja     0x40b92f
  40b8c8:	sub    BYTE PTR [ecx+ebx*4+0x2],bl
  40b8cc:	popa   
  40b8cd:	pop    ds
  40b8ce:	pop    esp
  40b8cf:	in     eax,dx
  40b8d0:	shr    BYTE PTR [edx],0x2
  40b8d3:	xor    ecx,edx
  40b8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d6:	shr    al,0x4f
  40b8d9:	mov    BYTE PTR [eax-0x2a],0x50
  40b8dd:	xchg   ebp,eax
  40b8de:	jns    0x40b89b
  40b8e0:	mov    ds:0x491883fd,eax
  40b8e5:	int3   
  40b8e6:	pop    ss
  40b8e7:	or     al,0xd3
  40b8e9:	mov    edx,0xeb63540f
  40b8ee:	mov    bl,0x8b
  40b8f0:	jno    0x40b888
  40b8f2:	pop    edx
  40b8f3:	pop    esp
  40b8f4:	pop    es
  40b8f5:	hlt    
  40b8f6:	and    al,0xb4
  40b8f8:	jae    0x40b978
  40b8fa:	int3   
  40b8fb:	inc    esp
  40b8fc:	jg     0x40b90b
  40b8fe:	sbb    BYTE PTR [eax],bl
  40b900:	mov    ebx,0x5278417d
  40b905:	pop    ebx
  40b906:	dec    ebp
  40b907:	pop    esp
  40b908:	adc    eax,0x18f6b5c9
  40b90d:	adc    al,dl
  40b90f:	xor    eax,0xf4329e01
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	rol    edx,cl
  40b93f:	iret   
  40b940:	das    
  40b941:	and    eax,0x78788cc6
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	stos   DWORD PTR es:[edi],eax
  40b94b:	adc    eax,DWORD PTR [edx]
  40b94d:	mov    ds:0xb6ffa6d1,eax
  40b952:	or     eax,0xc7b573a7
  40b957:	mov    edi,0xbbe080b4
  40b95c:	push   esp
  40b95d:	pop    ds
  40b95e:	xchg   esp,eax
  40b95f:	pop    ebx
  40b960:	cmp    al,0x9b
  40b962:	sub    BYTE PTR gs:[ecx+edx*8+0x13bdb8f0],ch
  40b96a:	scas   eax,DWORD PTR es:[edi]
  40b96b:	sub    ebx,ebx
  40b96d:	fnstenv [esi]
  40b96f:	mov    BYTE PTR [ecx+0x7],al
  40b972:	mov    eax,ds:0x35b513d0
  40b977:	out    0x32,al
  40b979:	mov    ch,0x2d
  40b97b:	ja     0x40b977
  40b97d:	mov    ebx,0xd80ad483
  40b982:	stos   BYTE PTR es:[edi],al
  40b983:	ds jo  0x40b9ae
  40b986:	fadd   QWORD PTR [ebx+ecx*4-0x17dd74a9]
  40b98d:	arpl   WORD PTR [ebx],dx
  40b98f:	gs cwde 
  40b991:	in     al,dx
  40b992:	or     eax,0xfab05ef8
  40b997:	icebp  
  40b998:	sub    al,0xe6
  40b99a:	cmp    BYTE PTR [edx-0x67456e7e],0xc2
  40b9a1:	xor    BYTE PTR [esi],dl
  40b9a3:	inc    eax
  40b9a4:	jae    0x40b96f
  40b9a6:	xchg   esp,eax
  40b9a7:	push   ecx
  40b9a8:	out    dx,eax
  40b9a9:	loope  0x40b999
  40b9ab:	jmp    eax
  40b9ad:	(bad)  
  40b9ae:	jae    0x40b95d
  40b9b0:	xchg   ebp,eax
  40b9b1:	mov    ebx,0x9ee71ece
  40b9b6:	add    DWORD PTR [ebp+0x75],edx
  40b9b9:	pop    eax
  40b9ba:	bound  esi,QWORD PTR ds:0x43df7d67
  40b9c0:	and    dh,BYTE PTR [ebx-0x19]
  40b9c3:	xchg   edi,eax
  40b9c4:	fdivr  st(0),st
  40b9c6:	jge    0x40b967
  40b9c8:	mov    ah,0xb7
  40b9ca:	mov    WORD PTR gs:[ebp-0x7257c6d4],ds
  40b9d1:	xchg   BYTE PTR [ebx],bh
  40b9d3:	imul   edx,ebx,0xffffffeb
  40b9d6:	out    0xff,al
  40b9d8:	mov    bl,0xb0
  40b9da:	imul   edi,esi,0xffffff9b
  40b9dd:	outs   dx,DWORD PTR ds:[esi]
  40b9de:	hlt    
  40b9df:	aaa    
  40b9e0:	or     DWORD PTR [ebx],esp
  40b9e2:	mov    dh,0x78
  40b9e4:	xchg   BYTE PTR [ebx+ecx*2-0x655acf30],bl
  40b9eb:	dec    ebx
  40b9ec:	jmp    0x8606:0xcd5015e7
  40b9f3:	sub    eax,0xa58f4e6d
  40b9f8:	outs   dx,DWORD PTR ds:[esi]
  40b9f9:	or     eax,0xd323b1bf
  40b9fe:	arpl   WORD PTR [ebx+0x44],si
  40ba01:	stos   BYTE PTR es:[edi],al
  40ba02:	(bad)  
  40ba03:	xor    ebp,DWORD PTR [ecx-0x7a]
  40ba06:	aaa    
  40ba07:	div    BYTE PTR [edx-0xa]
  40ba0a:	jmp    0xafd5:0xca7fad8
  40ba11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba12:	idiv   bl
  40ba14:	cmp    esp,eax
  40ba16:	in     eax,dx
  40ba17:	loopne 0x40ba73
  40ba19:	rcl    DWORD PTR [edx+0xc],0x7
  40ba1d:	and    dh,al
  40ba1f:	pushf  
  40ba20:	xor    al,cl
  40ba22:	retf   
  40ba23:	das    
  40ba24:	gs inc edi
  40ba26:	pop    eax
  40ba27:	pop    edx
  40ba28:	xchg   ebp,eax
  40ba29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba2a:	or     BYTE PTR [edx],dl
  40ba2c:	xor    BYTE PTR [ebp+0x304dbd71],bh
  40ba32:	loopne 0x40bab3
  40ba34:	jns    0x40b9be
  40ba36:	repnz aas 
  40ba38:	add    al,0x8c
  40ba3a:	aad    0x25
  40ba3c:	xchg   esi,eax
  40ba3d:	push   eax
  40ba3e:	pop    edx
  40ba3f:	mov    eax,ds:0x41c52153
  40ba44:	sub    bh,BYTE PTR [ecx+esi*1]
  40ba47:	in     eax,0xfa
  40ba49:	pop    esp
  40ba4a:	popa   
  40ba4b:	clc    
  40ba4c:	xchg   esi,eax
  40ba4d:	cwde   
  40ba4e:	push   es
  40ba4f:	test   al,0x81
  40ba51:	adc    eax,0x8fcf760f
  40ba56:	inc    edi
  40ba57:	daa    
  40ba58:	fisubr DWORD PTR [ebp-0x16f0a88f]
  40ba5e:	test   bl,bh
  40ba60:	repz es inc esi
  40ba63:	add    ebx,DWORD PTR [ecx+0x39ab01d2]
  40ba69:	dec    ebp
  40ba6a:	iret   
  40ba6b:	fnstcw WORD PTR [edx]
  40ba6d:	push   edi
  40ba6e:	icebp  
  40ba6f:	clc    
  40ba70:	emms   
  40ba72:	jl     0x40bad4
  40ba74:	test   BYTE PTR ds:0x9330a16d,ch
  40ba7a:	adc    DWORD PTR [eax],eax
  40ba7c:	adc    bh,bh
  40ba7e:	add    eax,0xc4ca0708
  40ba83:	test   al,0xef
  40ba85:	out    0x74,eax
  40ba87:	cld    
  40ba88:	mov    ch,0x90
  40ba8a:	or     eax,0xce442109
  40ba8f:	not    ebp
  40ba91:	sbb    DWORD PTR [ebp-0xc77b9e5],ecx
  40ba97:	ror    DWORD PTR [eax+0x14b2f24d],0xa6
  40ba9e:	push   esp
  40ba9f:	push   ss
  40baa0:	fs jmp 0x2f711cb5
  40baa6:	out    0xd1,eax
  40baa8:	jb     0x40bb1d
  40baaa:	jmp    0x18fd7b8b
  40baaf:	push   ebp
  40bab0:	fild   QWORD PTR [esi-0x6452904]
  40bab6:	fisubr WORD PTR [ecx+0x13]
  40bab9:	pop    edi
  40baba:	shr    DWORD PTR ds:0x1f3614bd,0xa4
  40bac1:	mov    al,ds:0xfec40683
  40bac6:	lock xlat BYTE PTR ds:[ebx]
  40bac8:	jo     0x40bb39
  40baca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bacb:	or     DWORD PTR [edi-0x7],esi
  40bace:	and    al,0x54
  40bad0:	cmp    edi,ecx
  40bad2:	cmp    dl,BYTE PTR ds:0xc5489e10
  40bad8:	ss dec eax
  40bada:	arpl   bx,sp
  40badc:	out    dx,eax
  40badd:	scas   eax,DWORD PTR es:[edi]
  40bade:	(bad)  
  40badf:	hlt    
  40bae0:	rcl    DWORD PTR [edx-0x11],cl
  40bae3:	sbb    al,0x33
  40bae5:	inc    esp
  40bae6:	pop    es
  40bae7:	ror    BYTE PTR [ebp+0xf375a77],cl
  40baed:	int3   
  40baee:	das    
  40baef:	dec    edx
  40baf0:	jecxz  0x40badb
  40baf2:	ja     0x40bb02
  40baf4:	mov    eax,ds:0x67350397
  40baf9:	mov    ah,0x41
  40bafb:	test   eax,0x77acb5
  40bb00:	rcl    DWORD PTR [ebp+0x786f0ee3],0xef
  40bb07:	fs pop ebp
  40bb09:	push   edi
  40bb0a:	dec    ebp
  40bb0b:	ret    
  40bb0c:	inc    eax
  40bb0d:	cdq    
  40bb0e:	gs std 
  40bb10:	jmp    0xe5a88b0e
  40bb15:	pop    ecx
  40bb16:	pop    ebp
  40bb17:	adc    al,0xbf
  40bb19:	popa   
  40bb1a:	pop    ebp
  40bb1b:	cmp    bh,bh
  40bb1d:	ins    BYTE PTR es:[edi],dx
  40bb1e:	xor    al,0xf0
  40bb20:	popa   
  40bb21:	xor    al,0x4f
  40bb23:	xor    bl,bh
  40bb25:	fild   WORD PTR [edi+0x19]
  40bb28:	stc    
  40bb29:	outs   dx,DWORD PTR ds:[esi]
  40bb2a:	inc    edx
  40bb2b:	adc    ecx,edx
  40bb2d:	mov    al,0x83
  40bb30:	dec    ecx
  40bb31:	addr16 xchg esp,eax
  40bb33:	add    ch,BYTE PTR [ebx-0x7b5ca2b0]
  40bb39:	add    edi,DWORD PTR [ebp-0x6b]
  40bb3c:	aam    0x3e
  40bb3e:	addr16 mov edx,0x3da05f1e
  40bb44:	jle    0x40bb4c
  40bb46:	rcr    BYTE PTR [ecx],0xf1
  40bb49:	push   es
  40bb4a:	jnp    0x40baec
  40bb4c:	out    dx,eax
  40bb4d:	mov    dh,0x91
  40bb4f:	xchg   edx,eax
  40bb50:	cmc    
  40bb51:	mov    al,0x3a
  40bb53:	adc    cl,bl
  40bb55:	ds sbb eax,0xe4a19dd1
  40bb5b:	pop    ds
  40bb5c:	adc    esi,eax
  40bb5e:	or     ah,bl
  40bb60:	cmp    eax,0x50f5dcc5
  40bb65:	je     0x40baf7
  40bb67:	shl    BYTE PTR [eax+0x62248ce6],0xf1
  40bb6e:	les    edx,FWORD PTR [eax-0x4b]
  40bb71:	dec    esp
  40bb72:	mov    ds:0x3b2000e0,al
  40bb77:	or     esi,eax
  40bb79:	adc    DWORD PTR [eax-0x5b],edx
  40bb7c:	cdq    
  40bb7d:	ds ins BYTE PTR es:[edi],dx
  40bb7f:	ja     0x40bb3d
  40bb81:	inc    ecx
  40bb82:	and    al,0x6f
  40bb84:	cmc    
  40bb85:	idiv   DWORD PTR [ebp-0x11dc4d41]
  40bb8b:	inc    edx
  40bb8c:	sbb    bh,BYTE PTR [eax+0x6f]
  40bb8f:	shr    ecx,1
  40bb91:	stos   DWORD PTR es:[edi],eax
  40bb92:	sbb    eax,0x3e73cf4f
  40bb97:	hlt    
  40bb98:	push   es
  40bb99:	jmp    0x47d1a056
  40bb9e:	jo     0x40bb52
  40bba0:	dec    ebp
  40bba1:	je     0x40bbce
  40bba3:	enter  0xbb0a,0x6f
  40bba7:	mov    edx,fs
  40bba9:	xlat   BYTE PTR ds:[ebx]
  40bbaa:	bound  ecx,QWORD PTR [eax+0x2b]
  40bbad:	jecxz  0x40bbb1
  40bbaf:	jns    0x40bb7c
  40bbb1:	fsubr  DWORD PTR [ebp+eax*4-0x3f480229]
  40bbb8:	mov    al,0x73
  40bbba:	aas    
  40bbbb:	mov    bl,0xc8
  40bbbd:	sub    al,BYTE PTR [ecx+edi*1]
  40bbc0:	jno    0x40bb59
  40bbc2:	out    dx,eax
  40bbc3:	mov    ah,0xc8
  40bbc5:	outs   dx,DWORD PTR ds:[esi]
  40bbc6:	push   0x9b32a564
  40bbcb:	push   edi
  40bbcc:	xchg   ebx,eax
  40bbcd:	jo     0x40bbf9
  40bbcf:	fld    QWORD PTR [esi+0x11]
  40bbd2:	fst    DWORD PTR [ecx]
  40bbd4:	fisubr WORD PTR [esp+ebp*8]
  40bbd7:	push   esp
  40bbd8:	leave  
  40bbd9:	inc    ecx
  40bbda:	stos   BYTE PTR es:[edi],al
  40bbdb:	(bad)  
  40bbdc:	mov    ds:0xdb7ae46,eax
  40bbe1:	push   edi
  40bbe2:	call   0x79844e49
  40bbe7:	cmp    BYTE PTR [edi+0x5475e494],ch
  40bbed:	adc    BYTE PTR [eax-0x552a433],ch
  40bbf3:	sbb    eax,0x9f3b81ad
  40bbf8:	push   ss
  40bbf9:	lds    edi,FWORD PTR [esi-0x454e9470]
  40bbff:	aam    0xf6
  40bc01:	add    al,0x7b
  40bc03:	(bad)  
  40bc04:	lods   al,BYTE PTR ds:[esi]
  40bc05:	pop    ds
  40bc06:	sub    al,0x2b
  40bc08:	or     eax,0xe2710978
  40bc0d:	loop   0x40bba0
  40bc0f:	gs das 
  40bc11:	inc    ebx
  40bc12:	out    0x18,eax
  40bc14:	jbe    0x40bc7d
  40bc16:	iret   
  40bc17:	dec    edx
  40bc18:	jae    0x40bc50
  40bc1a:	ss dec ecx
  40bc1c:	test   BYTE PTR [ebx],bh
  40bc1e:	pushf  
  40bc1f:	fld    QWORD PTR [eax-0x70]
  40bc22:	fs aam 0xa3
  40bc25:	not    BYTE PTR [eax+ebx*1]
  40bc28:	pop    esp
  40bc29:	je     0x40bbd6
  40bc2b:	outs   dx,DWORD PTR ds:[esi]
  40bc2c:	ins    BYTE PTR es:[edi],dx
  40bc2d:	pop    edx
  40bc2e:	(bad)  
  40bc2f:	fnstenv [ebx+0x7a62ba3b]
  40bc35:	sub    eax,0xa2df489f
  40bc3a:	je     0x40bc2a
  40bc3c:	aad    0xda
  40bc3e:	push   esi
  40bc3f:	loope  0x40bc0c
  40bc41:	sar    esp,cl
  40bc43:	jecxz  0x40bca9
  40bc45:	adc    cl,BYTE PTR [ebx+0x558bf445]
  40bc4b:	call   0x767e7e5b
  40bc50:	jle    0x40bbf1
  40bc52:	cli    
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc51
  40bc7d:	enter  0x196f,0xc2
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	dec    esi
  40bc89:	hlt    
  40bc8a:	push   0x4ac6b7a0
  40bc8f:	rcr    esp,cl
  40bc91:	jno    0x40bc86
  40bc93:	fs push edi
  40bc95:	imul   DWORD PTR [eax]
  40bc97:	sbb    DWORD PTR [ecx+0x12],ecx
  40bc9a:	scas   al,BYTE PTR es:[edi]
  40bc9b:	sbb    BYTE PTR [ecx+edi*2],bh
  40bc9e:	mov    bh,0xe5
  40bca0:	imul   ebp,DWORD PTR [esi+0x65],0xa8e1c1e6
  40bca7:	mov    dl,0x17
  40bca9:	daa    
  40bcaa:	inc    ebx
  40bcab:	out    dx,al
  40bcac:	lea    ebp,[edi-0x4a6c4c20]
  40bcb2:	ror    ecx,1
  40bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb5:	inc    esp
  40bcb6:	enter  0xa298,0xc3
  40bcba:	in     eax,dx
  40bcbb:	push   es
  40bcbc:	add    eax,0xbe2be20d
  40bcc1:	mov    edx,DWORD PTR [ecx+0x59]
  40bcc4:	inc    esi
  40bcc5:	out    0x8b,al
  40bcc7:	bound  ebx,QWORD PTR [eax-0x681e64a3]
  40bccd:	sbb    al,0x7f
  40bccf:	mov    ?,WORD PTR [ecx+0x12]
  40bcd2:	out    dx,eax
  40bcd3:	cld    
  40bcd4:	gs pop ds
  40bcd6:	push   ebx
  40bcd7:	and    DWORD PTR [esi-0x22],ecx
  40bcda:	adc    al,0x53
  40bcdc:	cs push ecx
  40bcde:	fwait
  40bcdf:	ins    DWORD PTR es:[edi],dx
  40bce0:	dec    edi
  40bce1:	mov    cl,0x54
  40bce3:	push   ds
  40bce4:	test   al,0x51
  40bce6:	shl    BYTE PTR [edi-0x310fd6e8],1
  40bcec:	push   cs
  40bced:	xchg   esi,eax
  40bcee:	xchg   BYTE PTR [edi],al
  40bcf0:	push   ds
  40bcf1:	or     BYTE PTR [edi-0x3e],bh
  40bcf4:	jmp    0x6b53:0x27313a6b
  40bcfb:	dec    esi
  40bcfc:	imul   esp,DWORD PTR [eax],0xffffffe2
  40bcff:	(bad)  
  40bd00:	and    eax,0xf4e090bf
  40bd05:	or     edi,DWORD PTR [esi-0x57]
  40bd08:	data16 in al,0xa2
  40bd0b:	mov    dl,0xc6
  40bd0d:	retf   
  40bd0e:	test   al,0x70
  40bd10:	ss cwde 
  40bd12:	dec    ebp
  40bd13:	mov    ebp,0x7f8c2de4
  40bd18:	push   ds
  40bd19:	cmp    BYTE PTR [ebp+ecx*8+0x4ea7e979],bh
  40bd20:	mov    eax,0x55f8e44d
  40bd25:	xor    BYTE PTR [ebp-0x20],dl
  40bd28:	cdq    
  40bd29:	dec    ebx
  40bd2a:	or     al,0xbd
  40bd2c:	sbb    eax,0x3e543ece
  40bd31:	dec    esp
  40bd32:	addr16 or al,0x3f
  40bd35:	(bad)  
  40bd36:	sub    al,0x57
  40bd38:	mov    eax,esi
  40bd3a:	leave  
  40bd3b:	jns    0x40bd56
  40bd3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd3e:	mov    bh,0x7c
  40bd40:	dec    eax
  40bd41:	dec    edi
  40bd42:	cld    
  40bd43:	jl     0x40bce3
  40bd45:	dec    DWORD PTR [edx+0x3a]
  40bd48:	mov    ecx,0x7adac9f4
  40bd4d:	dec    DWORD PTR [eax-0x77]
  40bd50:	lea    eax,[edx+0x2f]
  40bd53:	and    DWORD PTR [ebp-0x4a],eax
  40bd56:	cmp    edx,DWORD PTR [eax+0x2ed2465e]
  40bd5c:	pop    ss
  40bd5d:	ror    ecx,1
  40bd5f:	mov    dl,0xa2
  40bd61:	or     DWORD PTR [esp+edx*8-0x7be32611],esp
  40bd68:	dec    eax
  40bd69:	xor    DWORD PTR [esi-0x4a],esi
  40bd6c:	(bad)  [edi]
  40bd6e:	(bad)  
  40bd6f:	and    BYTE PTR [edi-0x2d],ah
  40bd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd73:	pop    ebp
  40bd74:	fild   DWORD PTR [esi]
  40bd76:	(bad)  
  40bd77:	cmp    DWORD PTR [ecx],edx
  40bd79:	sbb    DWORD PTR [esp+edi*8],ebx
  40bd7c:	rcr    BYTE PTR [edx-0x4f],cl
  40bd7f:	push   ebp
  40bd80:	xchg   BYTE PTR [edx+eiz*8],bh
  40bd83:	sub    al,0x45
  40bd85:	out    dx,eax
  40bd86:	test   BYTE PTR [eax+0x1b6713ac],bh
  40bd8c:	daa    
  40bd8d:	or     BYTE PTR [ecx-0x2be89660],bl
  40bd93:	cmp    dh,BYTE PTR [eax+0xdb36469]
  40bd99:	scas   eax,DWORD PTR es:[edi]
  40bd9a:	scas   al,BYTE PTR es:[edi]
  40bd9b:	and    dh,dl
  40bd9d:	ins    DWORD PTR es:[edi],dx
  40bd9e:	push   ebx
  40bd9f:	jnp    0x40bd90
  40bda1:	imul   eax,DWORD PTR [ecx-0x308afcdc],0x4be73869
  40bdab:	addr16 and dl,ah
  40bdae:	xchg   ecx,eax
  40bdb0:	push   es
  40bdb1:	ins    DWORD PTR es:[edi],dx
  40bdb2:	retf   
  40bdb3:	pop    esi
  40bdb4:	pop    esp
  40bdb5:	or     eax,0x61a15399
  40bdba:	mov    cl,0xb4
  40bdbc:	push   esp
  40bdbd:	retf   
  40bdbe:	imul   eax,DWORD PTR [edi],0xaf6d91f3
  40bdc4:	shr    eax,0x64
  40bdc7:	and    ecx,DWORD PTR [edi]
  40bdc9:	mov    esi,0x8d1cc524
  40bdce:	sub    al,0xb0
  40bdd0:	mov    edi,0x33ff8cfe
  40bdd5:	fs aaa 
  40bdd7:	fsincos 
  40bdd9:	pop    ebp
  40bdda:	jp     0x40bdf2
  40bddc:	sbb    BYTE PTR [edx-0x6c],0x35
  40bde0:	xchg   ebp,eax
  40bde1:	cli    
  40bde2:	xor    ch,BYTE PTR [ecx-0x2f]
  40bde5:	xor    esp,esi
  40bde7:	and    edx,DWORD PTR [ecx+0x54]
  40bdea:	adc    al,0x34
  40bdec:	repz (bad) 
  40bdee:	loope  0x40be6c
  40bdf0:	sbb    bh,BYTE PTR [edi]
  40bdf2:	xlat   BYTE PTR ds:[ebx]
  40bdf3:	mov    ebx,0x6364b960
  40bdf8:	and    al,0xd0
  40bdfa:	add    esp,DWORD PTR [edi+eax*8-0x5e]
  40bdfe:	pop    esp
  40bdff:	xchg   esi,eax
  40be00:	dec    esi
  40be01:	stos   DWORD PTR es:[edi],eax
  40be02:	or     ebx,ecx
  40be04:	mov    esp,0xf7812f18
  40be09:	(bad)  
  40be0a:	jmp    0x4e02:0x519a5071
  40be11:	(bad)  [ebx+esi*8-0x639de560]
  40be18:	clc    
  40be19:	pusha  
  40be1a:	cs lock test eax,0x97f5cb68
  40be21:	xchg   BYTE PTR [ebx],bh
  40be23:	repz (bad) 
  40be25:	lods   eax,DWORD PTR ds:[esi]
  40be26:	int    0x9a
  40be28:	xchg   esp,eax
  40be29:	jmp    0xea28b7cd
  40be2e:	pop    ecx
  40be2f:	cmp    al,0x31
  40be31:	mov    ah,0x30
  40be33:	dec    eax
  40be34:	jge    0x40be78
  40be36:	frstor [eax]
  40be38:	mov    ecx,0x654fa432
  40be3d:	pop    esi
  40be3e:	adc    bl,BYTE PTR [ecx-0xc658a4a]
  40be44:	or     eax,0x171e39a6
  40be49:	and    esi,DWORD PTR [ebx]
  40be4b:	sub    ebp,DWORD PTR [edx-0x73]
  40be4e:	xor    esi,esi
  40be50:	loopne 0x40becc
  40be52:	xchg   BYTE PTR [edx-0x42e52f59],bh
  40be58:	xchg   ebx,eax
  40be59:	ror    dh,0x3e
  40be5c:	push   es
  40be5d:	or     al,0xcd
  40be5f:	daa    
  40be60:	jl     0x40be41
  40be62:	cmp    DWORD PTR [esi+ecx*4],0xfffffffc
  40be66:	daa    
  40be67:	enter  0x3b32,0x10
  40be6b:	mov    esi,0x6efa4386
  40be70:	xor    DWORD PTR [ebp+0x785f4003],edx
  40be76:	fidivr WORD PTR [edx-0x6cff30b7]
  40be7c:	(bad)  
  40be7d:	jl     0x40bec3
  40be7f:	test   BYTE PTR [edi+0xd],bl
  40be82:	pushf  
  40be83:	push   0xfffffff6
  40be85:	shr    DWORD PTR [eax],0xb3
  40be88:	push   ax
  40be8a:	out    dx,eax
  40be8b:	mov    ch,0x80
  40be8d:	mov    esp,DWORD PTR [esi]
  40be8f:	xor    BYTE PTR [esi+0x4a],dh
  40be92:	cmp    cx,WORD PTR [edi-0x54]
  40be96:	ss jbe 0x40be2c
  40be99:	test   al,0x11
  40be9b:	enter  0xc7b5,0x21
  40be9f:	xchg   edi,eax
  40bea0:	adc    eax,0x91392596
  40bea5:	jl     0x40bef7
  40bea7:	pop    ss
  40bea8:	dec    esp
  40bea9:	cmp    DWORD PTR [ebp-0x222b8920],esi
  40beaf:	mov    esp,0xfdfd026e
  40beb4:	js     0x40be3d
  40beb6:	stos   DWORD PTR es:[edi],eax
  40beb7:	mov    DWORD PTR [edx-0x7a],esp
  40beba:	mov    BYTE PTR [ecx+0x10],0x96
  40bebe:	mov    DWORD PTR ds:[esi],ebp
  40bec1:	gs pop ss
  40bec3:	inc    ebp
  40bec4:	int    0x83
  40bec6:	or     BYTE PTR [esi],ah
  40bec8:	loopne 0x40bf34
  40beca:	inc    eax
  40becb:	mov    ?,WORD PTR [edx+0x604c61dc]
  40bed1:	das    
  40bed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed3:	jmp    0x40bf29
  40bed5:	lods   eax,DWORD PTR ds:[esi]
  40bed6:	cmp    ebx,ecx
  40bed8:	and    DWORD PTR [edx+0x2247c51],0x5c3ff0b4
  40bee2:	push   0x20
  40bee4:	out    dx,eax
  40bee5:	out    0xbf,al
  40bee7:	sub    eax,0x5c5ffa0
  40beec:	sub    DWORD PTR [ecx+0x44],ecx
  40beef:	mov    dl,BYTE PTR [ebp+ecx*1+0x60c4b5dd]
  40bef6:	sbb    eax,0xe66ebb5
  40befb:	dec    ebp
  40befc:	fisttp QWORD PTR ds:0x79ca9b7e
  40bf02:	sbb    al,BYTE PTR [ebx-0x50bdd102]
  40bf08:	ins    DWORD PTR es:[edi],dx
  40bf09:	loopne 0x40befa
  40bf0b:	sub    ch,al
  40bf0d:	jmp    0x645d:0x2722b4fb
  40bf14:	iret   
  40bf15:	add    BYTE PTR [eax-0x4bafeda9],al
  40bf1b:	mul    BYTE PTR [edi-0x7f]
  40bf1e:	into   
  40bf1f:	adc    eax,0xb7663e3d
  40bf24:	(bad)  
  40bf25:	pop    ss
  40bf26:	push   ds
  40bf27:	jmp    0xbfab:0x5effc32a
  40bf2e:	xchg   esp,eax
  40bf2f:	imul   ecx,esp,0xcbca88b9
  40bf35:	mov    eax,ds:0xb5bd57fa
  40bf3a:	prefetchnta BYTE PTR [edx]
  40bf3d:	mov    cl,0xf1
  40bf3f:	inc    edx
  40bf40:	dec    edx
  40bf41:	mov    BYTE PTR [edx],bh
  40bf43:	gs xchg esp,eax
  40bf45:	jb     0x40bf0f
  40bf47:	in     al,dx
  40bf48:	daa    
  40bf49:	push   0x26c05fd
  40bf4e:	sub    cl,BYTE PTR [esi]
  40bf50:	pop    edi
  40bf51:	int3   
  40bf52:	ror    BYTE PTR [di-0xf],cl
  40bf56:	push   es
  40bf57:	loopne 0x40bfc4
  40bf59:	dec    DWORD PTR ds:0xd6627e4e
  40bf5f:	(bad)  [esi+0x38]
  40bf62:	fdivr  DWORD PTR [ebx-0x46]
  40bf65:	rol    BYTE PTR [esi-0x575d5bbe],0x4d
  40bf6c:	int3   
  40bf6d:	dec    BYTE PTR [edx-0x4a]
  40bf70:	nop
  40bf71:	shl    DWORD PTR [eax+esi*2-0x40ff9b4c],0x77
  40bf79:	fwait
  40bf7a:	xlat   BYTE PTR ds:[ebx]
  40bf7b:	out    dx,eax
  40bf7c:	sar    BYTE PTR [ecx+edx*1],0x31
  40bf80:	shr    BYTE PTR [ebx],0x3b
  40bf83:	push   edx
  40bf84:	mov    edi,DWORD PTR [ebp+0x8]
  40bf87:	mov    edi,DWORD PTR [edi]
  40bf89:	mov    edx,0x8a36
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	ds inc edx
  40bfbf:	out    0xfc,eax
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	cmp    BYTE PTR [ebx+0x6],dh
  40bfcc:	mov    BYTE PTR [esi+eiz*2],ch
  40bfcf:	mov    bl,0xf2
  40bfd1:	mov    WORD PTR [edi+0x2f],?
  40bfd4:	mov    al,ds:0xdfda1330
  40bfd9:	jns    0x40c046
  40bfdb:	mov    esp,0xf4b7f507
  40bfe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe1:	fisubr DWORD PTR [esi]
  40bfe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe4:	sbb    ecx,edi
  40bfe6:	data16 in al,dx
  40bfe8:	mov    ecx,0xe6b32470
  40bfed:	cmp    eax,0x112c636
  40bff2:	pop    es
  40bff3:	adc    edi,0x27
  40bff6:	imul   esp,DWORD PTR [edi+0x10],0x49b595e0
  40bffd:	fwait
  40bffe:	pushf  
  40bfff:	shl    BYTE PTR [ecx],0x95
  40c002:	mov    edi,0xbcfcb108
  40c007:	mov    DWORD PTR [eax+ecx*2+0x419bcd5],esi
  40c00e:	xor    edi,DWORD PTR [ebx]
  40c010:	pusha  
  40c011:	scas   eax,DWORD PTR es:[edi]
  40c012:	xchg   BYTE PTR [edi+edx*8+0x66],dl
  40c016:	sub    bh,dl
  40c018:	sub    al,BYTE PTR [eax+0x43b48fbc]
  40c01e:	sbb    BYTE PTR [ebp-0x55d0e935],al
  40c024:	mov    esp,ebx
  40c026:	jle    0x40bfd6
  40c028:	in     eax,dx
  40c029:	shr    BYTE PTR [edx],0xee
  40c02c:	outs   dx,DWORD PTR ds:[esi]
  40c02d:	mov    DWORD PTR [eax+0x7d],edi
  40c030:	adc    esp,DWORD PTR [edx]
  40c032:	push   ecx
  40c033:	data16 jbe 0x40c043
  40c036:	call   0x69be:0xb1d97ff5
  40c03d:	fwait
  40c03e:	sbb    esp,DWORD PTR [edx]
  40c040:	jecxz  0x40bfe8
  40c042:	or     DWORD PTR [ecx+esi*8],0x63
  40c046:	fsubr  DWORD PTR [edi+0x14bf09f6]
  40c04c:	sbb    DWORD PTR [ecx+0x4a],eax
  40c04f:	pop    es
  40c050:	daa    
  40c051:	jne    0x40bfe5
  40c053:	inc    edi
  40c054:	ds add esp,0x9d28d793
  40c05b:	cwde   
  40c05c:	mov    dl,0x2f
  40c05e:	and    DWORD PTR [eax+0x5b0ad88d],edi
  40c064:	mov    WORD PTR [ebx],gs
  40c066:	jecxz  0x40c018
  40c068:	in     al,0xee
  40c06a:	sti    
  40c06b:	fadd   QWORD PTR [edx-0x5ae6266c]
  40c071:	mov    bl,0x9d
  40c073:	stos   DWORD PTR es:[edi],eax
  40c074:	jp     0x40c0e3
  40c076:	adc    al,0x3f
  40c078:	inc    eax
  40c079:	scas   al,BYTE PTR es:[edi]
  40c07a:	(bad)  
  40c07c:	retf   
  40c07d:	mov    ch,0xea
  40c07f:	add    edx,DWORD PTR [ebx-0xd]
  40c082:	scas   eax,DWORD PTR es:[edi]
  40c083:	push   ebx
  40c084:	cli    
  40c085:	fnstenv [ebp+0x46]
  40c088:	fldenv [eax-0x5a]
  40c08c:	and    dh,ah
  40c08e:	sbb    al,cl
  40c090:	dec    edx
  40c091:	pop    ds
  40c092:	stc    
  40c093:	cs push 0xffffffa7
  40c096:	add    BYTE PTR [esp+edx*2],dl
  40c099:	hlt    
  40c09a:	imul   bp,WORD PTR [edx+0x2f895c0d],0xffde
  40c0a2:	clc    
  40c0a3:	mov    ah,0x33
  40c0a5:	ins    DWORD PTR es:[edi],dx
  40c0a6:	js     0x40c0c2
  40c0a8:	jmp    0x40c0b4
  40c0aa:	dec    edx
  40c0ab:	aad    0x47
  40c0ad:	pop    edx
  40c0ae:	xor    al,0x30
  40c0b0:	icebp  
  40c0b1:	rcr    BYTE PTR [esi+edi*1+0x50d217e5],0x79
  40c0b9:	dec    edx
  40c0ba:	cmp    DWORD PTR [edi-0x6e],eax
  40c0bd:	cmp    al,0xcc
  40c0bf:	fld    QWORD PTR [eax-0x626a7cba]
  40c0c5:	into   
  40c0c6:	fidiv  WORD PTR [ecx-0x5b]
  40c0c9:	xor    al,0x32
  40c0cb:	pushf  
  40c0cc:	push   ecx
  40c0cd:	sbb    DWORD PTR [eax],edx
  40c0cf:	dec    esp
  40c0d0:	inc    ebp
  40c0d1:	push   ecx
  40c0d2:	(bad)  
  40c0d4:	nop
  40c0d5:	retf   0x6f9
  40c0d8:	sub    BYTE PTR [ebx+0x2f],0xe8
  40c0dc:	(bad)  
  40c0dd:	mov    dh,0x18
  40c0df:	sbb    BYTE PTR [ebx-0x699dbdad],0x2d
  40c0e6:	nop
  40c0e7:	xchg   esi,eax
  40c0e8:	inc    eax
  40c0e9:	test   eax,0x135bf556
  40c0ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ef:	mov    ds:0x3074ca3d,eax
  40c0f4:	jle    0x40c0a0
  40c0f6:	mov    al,0x10
  40c0f8:	xor    eax,0x65fbe2af
  40c0fd:	idiv   BYTE PTR [edi]
  40c0ff:	cdq    
  40c100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c101:	mov    bh,0xb5
  40c103:	jbe    0x40c145
  40c105:	sbb    ebp,DWORD PTR [edi+0x9]
  40c108:	pop    esp
  40c109:	es xchg ebx,eax
  40c10b:	cmp    esi,ecx
  40c10d:	mov    WORD PTR [esi-0x5c],ds
  40c110:	cmc    
  40c111:	daa    
  40c112:	adc    al,BYTE PTR [edx+ecx*2+0x29]
  40c116:	stos   DWORD PTR es:[edi],eax
  40c117:	pop    eax
  40c118:	mov    ah,BYTE PTR [edx+ebx*1-0x318bbada]
  40c11f:	shl    edx,cl
  40c121:	fcom   st(1)
  40c123:	pop    esp
  40c124:	repz mov al,ds:0x2afbced4
  40c12a:	in     eax,dx
  40c12b:	push   ecx
  40c12c:	scas   eax,DWORD PTR es:[edi]
  40c12d:	lds    edi,FWORD PTR [esi-0x16]
  40c130:	imul   esp,DWORD PTR ds:0xf8d6baac,0x56641602
  40c13a:	push   ecx
  40c13b:	pushf  
  40c13c:	out    dx,eax
  40c13d:	jmp    0x4c997782
  40c142:	sub    cl,dh
  40c144:	mov    dl,0x5b
  40c146:	xchg   edi,eax
  40c147:	(bad)  
  40c148:	cmp    al,0x76
  40c14a:	sub    eax,0xa7f6f1a4
  40c14f:	(bad)  
  40c150:	xor    DWORD PTR [esi*2+0x271a92d],0xc3226fa
  40c15b:	(bad)  
  40c15c:	arpl   WORD PTR [eax],si
  40c15e:	cmc    
  40c15f:	xlat   BYTE PTR ds:[ebx]
  40c160:	inc    eax
  40c161:	in     al,0xa6
  40c163:	jo     0x40c15a
  40c165:	fs stc 
  40c167:	mov    esi,DWORD PTR [ebp+0x1c980442]
  40c16d:	mov    ebp,0xabf089ff
  40c172:	mov    eax,ds:0x537bc1da
  40c177:	pop    ds
  40c178:	adc    esp,0x55
  40c17b:	sar    ebx,0xb7
  40c17e:	xor    al,0x54
  40c180:	pop    ebp
  40c181:	hlt    
  40c182:	push   edi
  40c183:	or     al,BYTE PTR [esi+ebx*4]
  40c186:	or     BYTE PTR [edi+0x44],bh
  40c189:	(bad)  [edi]
  40c18b:	mov    ecx,0x8829e7d6
  40c190:	(bad)  [esi+ebx*2-0x6e]
  40c194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c195:	cli    
  40c196:	ss test eax,0x2fd8c919
  40c19c:	lock and al,0x8f
  40c19f:	fwait
  40c1a0:	mov    esp,0x9cc57384
  40c1a5:	cmp    edi,DWORD PTR [esi+0x5953ae86]
  40c1ab:	lods   al,BYTE PTR ds:[esi]
  40c1ac:	sub    al,0x18
  40c1ae:	std    
  40c1af:	test   ah,ch
  40c1b1:	popa   
  40c1b2:	call   ebx
  40c1b4:	inc    edx
  40c1b5:	test   al,0xfc
  40c1b7:	outs   dx,DWORD PTR ds:[esi]
  40c1b8:	outs   dx,DWORD PTR ds:[esi]
  40c1b9:	cli    
  40c1ba:	inc    esp
  40c1bb:	mov    edi,0xe9dd427b
  40c1c0:	frndint 
  40c1c2:	and    eax,0xf2caf5d6
  40c1c7:	inc    BYTE PTR [edx+0x326b5728]
  40c1cd:	adc    esi,DWORD PTR [ecx]
  40c1cf:	push   ecx
  40c1d0:	cmp    DWORD PTR [ecx+edi*4],ebp
  40c1d3:	test   DWORD PTR [edx+eax*1+0x44],edx
  40c1d7:	and    bh,ah
  40c1d9:	dec    eax
  40c1da:	gs repnz mov ch,0xa9
  40c1de:	cmp    al,0x2c
  40c1e0:	fisttp DWORD PTR [edx+0x63e69ba2]
  40c1e6:	cli    
  40c1e7:	cmp    al,0x28
  40c1e9:	mov    ecx,0x4c7a5fc3
  40c1ee:	mul    BYTE PTR [edi-0x14ee50b7]
  40c1f4:	jbe    0x40c21a
  40c1f6:	jp     0x40c1d8
  40c1f8:	xor    DWORD PTR [edi+0x5e],eax
  40c1fb:	or     al,BYTE PTR [esi+ebp*1+0x4d]
  40c1ff:	test   DWORD PTR [edx],0x4d8f752e
  40c205:	adc    ecx,DWORD PTR [esi+0x6de13c08]
  40c20b:	add    BYTE PTR [esi-0x6e49f60c],bh
  40c211:	adc    edi,DWORD PTR [ecx]
  40c213:	fwait
  40c214:	sbb    ax,0x248a
  40c218:	mov    dh,0x83
  40c21a:	les    edi,FWORD PTR [ecx+ebx*1+0x426bcb50]
  40c221:	scas   eax,DWORD PTR es:[edi]
  40c222:	inc    ecx
  40c223:	adc    DWORD PTR [edi+0x38],ebp
  40c226:	addr16 pop ss
  40c228:	xchg   ebp,eax
  40c229:	data16 shl BYTE PTR [eax],0x4c
  40c22d:	or     DWORD PTR [ecx-0x351c7bb1],esi
  40c233:	in     eax,dx
  40c234:	mov    edi,0x5ee2c3a0
  40c239:	jp     0x40c28a
  40c23b:	mov    ds:0xe3450467,eax
  40c240:	enter  0x9476,0x1c
  40c244:	jge    0x40c1e9
  40c246:	aaa    
  40c247:	inc    eax
  40c248:	and    eax,0x7b6a5f84
  40c24d:	and    BYTE PTR [eax],ah
  40c24f:	mov    DWORD PTR [edi],ecx
  40c251:	cmp    eax,0xa733d63
  40c256:	dec    edi
  40c257:	mov    ds:0x347b6cf6,al
  40c25c:	add    al,0x53
  40c25e:	leave  
  40c25f:	or     ecx,0x30570a2a
  40c265:	repnz xchg ecx,eax
  40c267:	pop    es
  40c268:	lods   al,BYTE PTR ds:[esi]
  40c269:	xor    ah,dl
  40c26b:	or     eax,0xb6c94dd6
  40c270:	ret    0xb1ad
  40c273:	xchg   edx,eax
  40c274:	out    0x24,al
  40c276:	mov    ecx,ebp
  40c278:	les    edi,FWORD PTR [ebx]
  40c27a:	pop    eax
  40c27b:	jp     0x40c225
  40c27d:	mov    dl,bl
  40c27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c280:	cmp    ebp,DWORD PTR [edi+0x40]
  40c283:	stc    
  40c284:	lahf   
  40c285:	test   eax,0xc9816223
  40c28a:	scas   al,BYTE PTR es:[edi]
  40c28b:	rol    DWORD PTR [eax],cl
  40c28d:	std    
  40c28e:	inc    esp
  40c28f:	addr16 loopne 0x40c245
  40c292:	xor    bl,BYTE PTR [eax-0x2e]
  40c295:	push   ss
  40c296:	and    al,0xa
  40c298:	jae    0x40c2c5
  40c29a:	cwde   
  40c29b:	jmp    0x38841836
  40c2a0:	push   ebp
  40c2a1:	rol    BYTE PTR [ebx-0x5cbd5d5c],0x77
  40c2a8:	out    0x58,al
  40c2aa:	push   0xffffffbf
  40c2ac:	push   es
  40c2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ae:	or     ebp,DWORD PTR [edi+0x4c]
  40c2b1:	cmp    BYTE PTR [esi],ah
  40c2b3:	pop    eax
  40c2b4:	dec    edi
  40c2b5:	sahf   
  40c2b6:	inc    edi
  40c2b7:	pop    es
  40c2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b9:	inc    edx
  40c2ba:	mov    ds:0xfac50511,eax
  40c2bf:	add    eax,0x42c7f062
  40c2c4:	jmp    0x40c251
  40c2c6:	inc    ebp
  40c2c7:	fsub   DWORD PTR [esi-0x75]
  40c2ca:	jge    0x40c2a0
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x8],bh
  40c2e3:	jno    0x40c2ac
  40c2e5:	xchg   ebx,eax
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	(bad)  
  40c2ef:	mov    ebx,0x85697dac
  40c2f4:	sbb    edx,eax
  40c2f6:	fld    TBYTE PTR [esi-0x601c9ad1]
  40c2fc:	out    dx,al
  40c2fd:	mov    esp,0xfd2bb21d
  40c302:	mov    esp,0x1c03ed1f
  40c307:	shl    DWORD PTR [esi],1
  40c309:	gs jge 0x40c360
  40c30c:	sbb    al,0x96
  40c30e:	das    
  40c30f:	retf   0x4090
  40c312:	retf   0x65c
  40c315:	and    esi,DWORD PTR [ebp+0x7273ff51]
  40c31b:	bound  ebx,QWORD PTR [edx]
  40c31d:	sbb    eax,0x89598433
  40c322:	sbb    DWORD PTR [edx],0xaaf22fdd
  40c328:	pop    ebp
  40c329:	xchg   ebp,eax
  40c32a:	sbb    dh,BYTE PTR [edx+0x35]
  40c32d:	mov    edx,0xd6b97ce5
  40c332:	or     eax,0x9c68e797
  40c337:	cmp    bl,BYTE PTR [edi-0x561885a7]
  40c33d:	push   ebp
  40c33e:	push   0xedcd2f69
  40c343:	adc    bh,al
  40c345:	mov    edi,0xc74a48eb
  40c34a:	in     al,dx
  40c34b:	push   0x9
  40c34d:	jmp    0xd545a86a
  40c352:	hlt    
  40c353:	dec    esp
  40c354:	jb     0x40c338
  40c356:	push   es
  40c357:	inc    eax
  40c358:	sbb    BYTE PTR [eax],cl
  40c35a:	mov    eax,ds:0x981f7e87
  40c35f:	cli    
  40c360:	inc    edi
  40c361:	call   0x80c700ec
  40c366:	pop    ebp
  40c367:	jmp    0x279c657
  40c36c:	sub    ecx,DWORD PTR [ebx]
  40c36e:	loopne 0x40c33e
  40c370:	(bad)  
  40c372:	adc    DWORD PTR [ebp+0x21b9c2aa],esp
  40c378:	and    dl,ch
  40c37a:	jns    0x40c370
  40c37c:	jne    0x40c327
  40c37e:	mul    edx
  40c380:	cli    
  40c381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c382:	or     al,0x93
  40c384:	rol    BYTE PTR [ebp-0x4734c729],1
  40c38a:	mov    dh,0x92
  40c38c:	push   ebx
  40c38d:	pusha  
  40c38e:	pushf  
  40c38f:	mov    bl,0xed
  40c391:	popf   
  40c392:	add    eax,0x417f0dca
  40c397:	jno    0x40c3c5
  40c399:	xchg   esi,eax
  40c39a:	mov    dh,0xa5
  40c39c:	pop    ss
  40c39d:	addr16 jge 0x40c39b
  40c3a0:	inc    ecx
  40c3a1:	scas   al,BYTE PTR es:[edi]
  40c3a2:	sbb    DWORD PTR [ecx-0x9fc727a],ebx
  40c3a8:	sbb    DWORD PTR [ebx+0x2e],edi
  40c3ab:	idiv   DWORD PTR [eax+ebx*8+0x44]
  40c3af:	push   ss
  40c3b0:	push   0xb33eb79e
  40c3b5:	lods   al,BYTE PTR ds:[esi]
  40c3b6:	or     esi,DWORD PTR [edx-0x672d4085]
  40c3bc:	jecxz  0x40c34b
  40c3be:	and    dl,dl
  40c3c0:	fwait
  40c3c1:	sahf   
  40c3c2:	cmp    ebx,DWORD PTR [ebx+0x3bcaebba]
  40c3c8:	sub    al,0x3e
  40c3ca:	add    al,0xcd
  40c3cc:	js     0x40c440
  40c3ce:	add    cl,BYTE PTR [esi]
  40c3d0:	xor    bh,bl
  40c3d2:	dec    eax
  40c3d3:	mov    ecx,ecx
  40c3d5:	adc    BYTE PTR [eax],dl
  40c3d7:	adc    ebp,DWORD PTR [edi]
  40c3d9:	sbb    BYTE PTR [eax],0x14
  40c3dc:	lahf   
  40c3dd:	jae    0x40c3c5
  40c3df:	retf   0x7c34
  40c3e2:	mov    cl,0xdd
  40c3e4:	push   ebp
  40c3e5:	jmp    0x40c45f
  40c3e7:	pop    edx
  40c3e8:	pop    edi
  40c3e9:	pop    edx
  40c3ea:	sub    DWORD PTR [edx-0x35b4d99],ebp
  40c3f0:	mov    dl,0x87
  40c3f2:	ds mov cl,0xc4
  40c3f5:	push   ebp
  40c3f6:	mov    BYTE PTR [ecx+eiz*4+0x1a],dl
  40c3fa:	mov    ds:0x89fcafd2,eax
  40c3ff:	rol    BYTE PTR [edx+0x627b4b9b],0x30
  40c406:	std    
  40c407:	cmp    BYTE PTR [esp+ebx*2],ah
  40c40a:	sub    bh,al
  40c40c:	push   esi
  40c40d:	out    0x8a,al
  40c40f:	or     BYTE PTR ds:0x2e988c66,dl
  40c415:	mov    DWORD PTR [ecx+0x3d],esi
  40c418:	out    dx,al
  40c419:	add    DWORD PTR [ebx+0x1187d88c],ebp
  40c41f:	and    BYTE PTR [edx+0x428a863d],0xe8
  40c426:	ss jmp 0xbfd18092
  40c42c:	loopne 0x40c42c
  40c42e:	std    
  40c42f:	pop    esi
  40c430:	or     DWORD PTR [eax+0x7a4b7394],eax
  40c436:	xor    esp,DWORD PTR [edi+0x911b852]
  40c43c:	push   eax
  40c43d:	int3   
  40c43e:	pop    ebp
  40c43f:	pop    ss
  40c440:	cmc    
  40c441:	pop    ss
  40c442:	xchg   ebx,eax
  40c443:	cmp    esi,ecx
  40c445:	aas    
  40c446:	adc    bh,BYTE PTR [esi-0x6b]
  40c449:	mov    bl,0x24
  40c44b:	scas   al,BYTE PTR es:[edi]
  40c44c:	adc    eax,ebx
  40c44e:	mov    ah,0x5d
  40c450:	jns    0x40c477
  40c452:	out    dx,eax
  40c453:	popa   
  40c454:	dec    ecx
  40c455:	add    BYTE PTR [edx],ah
  40c457:	mov    al,0x83
  40c459:	sub    al,bh
  40c45b:	pop    ebp
  40c45c:	and    DWORD PTR [edi+0x1d41e3c3],eax
  40c462:	clc    
  40c463:	mov    cl,0xa5
  40c465:	cmovp  ecx,DWORD PTR [edi+0x4c]
  40c469:	pop    esp
  40c46a:	adc    DWORD PTR [eax+ebx*8],ebx
  40c46d:	in     eax,0x50
  40c46f:	add    BYTE PTR cs:[ecx-0x3d],dl
  40c473:	jge    0x40c469
  40c475:	idiv   ebp
  40c477:	fdiv   QWORD PTR [ebp-0x66]
  40c47a:	push   ds
  40c47b:	fnsave [ebx+edi*8-0x78]
  40c47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c480:	pop    ebx
  40c481:	push   ecx
  40c482:	mov    esi,0x88d1a109
  40c487:	cld    
  40c488:	es pop ebx
  40c48a:	xor    DWORD PTR [ebp+0x45],0xffffffe3
  40c48e:	loope  0x40c4aa
  40c490:	dec    edi
  40c491:	add    bl,ah
  40c493:	pop    ebp
  40c494:	jmp    0xbd6e:0xbcc28160
  40c49b:	cmp    ch,BYTE PTR [esi-0x1e]
  40c49e:	jbe    0x40c483
  40c4a0:	push   ebp
  40c4a1:	clc    
  40c4a2:	inc    ecx
  40c4a3:	xlat   BYTE PTR ds:[ebx]
  40c4a4:	bound  edi,QWORD PTR [ebx-0x74]
  40c4a7:	dec    eax
  40c4a8:	xor    eax,0x5c961c71
  40c4ad:	std    
  40c4ae:	retf   0x3f43
  40c4b1:	retf   0xce09
  40c4b4:	jns    0x40c4c0
  40c4b6:	adc    eax,0x1dd69e88
  40c4bb:	in     al,0xae
  40c4bd:	and    cl,ch
  40c4bf:	inc    esi
  40c4c0:	push   esi
  40c4c1:	ficomp WORD PTR [ecx-0x69]
  40c4c4:	xchg   ebx,eax
  40c4c5:	xorps  xmm5,XMMWORD PTR [ebx]
  40c4c8:	dec    ecx
  40c4c9:	push   es
  40c4ca:	mov    esi,ebx
  40c4cc:	aas    
  40c4cd:	jecxz  0x40c517
  40c4cf:	push   cs
  40c4d0:	mov    cl,bh
  40c4d2:	sahf   
  40c4d3:	xchg   ebx,eax
  40c4d4:	inc    ecx
  40c4d5:	frstor [edi]
  40c4d7:	sub    ah,BYTE PTR [esi]
  40c4d9:	test   ecx,0x138f2be8
  40c4df:	lods   al,BYTE PTR ds:[esi]
  40c4e0:	cwde   
  40c4e1:	ja     0x40c4bd
  40c4e3:	pushf  
  40c4e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e5:	adc    DWORD PTR [esi],ecx
  40c4e7:	dec    edi
  40c4e8:	popf   
  40c4e9:	push   eax
  40c4ea:	jbe    0x40c55f
  40c4ec:	aaa    
  40c4ed:	push   es
  40c4ee:	jo     0x40c4a8
  40c4f0:	stos   BYTE PTR es:[edi],al
  40c4f1:	pop    edx
  40c4f2:	retf   
  40c4f3:	out    dx,al
  40c4f4:	ins    BYTE PTR es:[edi],dx
  40c4f5:	dec    ecx
  40c4f6:	push   ss
  40c4f7:	sub    ah,BYTE PTR [ebp-0x6c9034b8]
  40c4fd:	sub    al,0x45
  40c4ff:	jle    0x40c4d0
  40c501:	jg     0x40c4aa
  40c503:	mov    esi,0xd6e9aa8f
  40c508:	int3   
  40c509:	shl    DWORD PTR [ebp-0x60a320fe],1
  40c50f:	mov    ss,WORD PTR [ecx+0x30eb12af]
  40c515:	outs   dx,BYTE PTR ds:[esi]
  40c516:	(bad)  
  40c517:	icebp  
  40c518:	loop   0x40c590
  40c51a:	sub    BYTE PTR [edx],0x11
  40c51d:	in     al,dx
  40c51e:	call   0x9949f611
  40c523:	sar    DWORD PTR [edx],1
  40c525:	mov    dh,0xf6
  40c527:	es mov dh,0xa0
  40c52a:	fisub  DWORD PTR [ebx-0x6d]
  40c52d:	xchg   esp,eax
  40c52e:	mov    dh,0x86
  40c530:	or     dl,BYTE PTR [esi+0x8]
  40c533:	int    0xef
  40c535:	push   ds
  40c536:	jecxz  0x40c579
  40c538:	nop
  40c539:	das    
  40c53a:	shl    dl,1
  40c53c:	cs in  al,0x6e
  40c53f:	iret   
  40c540:	in     eax,0xd
  40c542:	retf   
  40c543:	out    0xf3,eax
  40c545:	ds popf 
  40c547:	cli    
  40c548:	push   ds
  40c549:	inc    ebx
  40c54a:	mov    ds:0xc18ef4d7,eax
  40c54f:	aaa    
  40c550:	xor    esp,DWORD PTR [esi+ecx*4]
  40c553:	clc    
  40c554:	in     eax,dx
  40c555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c556:	xor    cl,0x3a
  40c559:	push   ebx
  40c55a:	mov    edx,0x3136caad
  40c55f:	xchg   esp,eax
  40c560:	loop   0x40c506
  40c562:	pop    esp
  40c563:	arpl   WORD PTR [edi],bx
  40c565:	cmc    
  40c566:	jb     0x40c51a
  40c568:	es add eax,edx
  40c56b:	fild   QWORD PTR [ebx+0x4aae31d4]
  40c571:	push   eax
  40c572:	xlat   BYTE PTR ds:[ebx]
  40c573:	cmp    al,BYTE PTR [esi+0x3c]
  40c576:	les    edx,FWORD PTR [edi]
  40c578:	dec    esp
  40c579:	cwde   
  40c57a:	jne    0x40c508
  40c57c:	pop    edi
  40c57d:	cdq    
  40c57e:	lds    ebp,FWORD PTR [eax-0x2f4dfe3c]
  40c584:	addr16 into 
  40c586:	and    BYTE PTR [ebp+0x5d],dl
  40c589:	shl    BYTE PTR [eax],0xc2
  40c58c:	push   edx
  40c58d:	out    dx,eax
  40c58e:	push   edx
  40c58f:	in     al,0xb3
  40c591:	pop    es
  40c592:	pop    eax
  40c593:	pop    eax
  40c594:	push   ds
  40c595:	mov    ch,0x49
  40c597:	sub    cl,ch
  40c599:	call   0x4bcb3263
  40c59e:	xor    BYTE PTR [ecx+0x5c6ea066],cl
  40c5a4:	repnz leave 
  40c5a6:	int3   
  40c5a7:	(bad)  
  40c5a8:	sub    DWORD PTR [ebp+0x7d],eax
  40c5ab:	cwde   
  40c5ac:	sbb    DWORD PTR [esi-0x76],0x7d589d2f
  40c5b3:	mov    esp,0x3d990236
  40c5b8:	xchg   ecx,eax
  40c5b9:	in     al,0x3
  40c5bb:	aaa    
  40c5bc:	xchg   ebp,eax
  40c5bd:	xchg   esi,eax
  40c5be:	jae    0x40c556
  40c5c0:	push   cs
  40c5c1:	js     0x40c5ad
  40c5c3:	cmp    eax,0xd467fed4
  40c5c8:	cmp    al,dh
  40c5ca:	pop    esp
  40c5cb:	fucom  st(7)
  40c5cd:	jbe    0x40c590
  40c5cf:	pusha  
  40c5d0:	jno    0x40c5c8
  40c5d2:	clc    
  40c5d3:	fs jno 0x40c58b
  40c5d6:	and    ah,BYTE PTR [ebx+0x480acc93]
  40c5dc:	popf   
  40c5dd:	fcmovnbe st,st(6)
  40c5df:	out    dx,eax
  40c5e0:	nop
  40c5e1:	dec    eax
  40c5e2:	jnp    0x40c59f
  40c5e4:	cld    
  40c5e5:	nop
  40c5e6:	lds    ecx,FWORD PTR [esi+0x3366a661]
  40c5ec:	sti    
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0xa6d2d2f7
  40c613:	call   0x7878:0x9836b529
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	jb     0x40c669
  40c620:	mov    eax,ds:0x2bb9e62a
  40c625:	fdivr  DWORD PTR [ebx]
  40c627:	hlt    
  40c628:	add    ebx,DWORD PTR [ebx-0x5d25dfce]
  40c62e:	or     ebx,DWORD PTR [eax-0x27]
  40c631:	lods   al,BYTE PTR ds:[esi]
  40c632:	addr16 xchg edi,eax
  40c634:	mov    ?,ebx
  40c636:	shl    edx,0x92
  40c639:	xor    eax,ebx
  40c63b:	lock int3 
  40c63d:	daa    
  40c63e:	xchg   esp,eax
  40c63f:	rol    DWORD PTR [esi+ebx*2+0xb01f14d],1
  40c646:	push   edi
  40c647:	jnp    0x40c6b2
  40c649:	js     0x40c5fc
  40c64b:	jg     0x40c68b
  40c64d:	mov    bh,0x8a
  40c64f:	int    0x99
  40c651:	arpl   WORD PTR [edx+0x65],cx
  40c654:	adc    eax,0x56b92103
  40c659:	jo     0x40c5dd
  40c65b:	ins    BYTE PTR es:[edi],dx
  40c65c:	sub    BYTE PTR [esi],ah
  40c65e:	xchg   esp,eax
  40c65f:	cmp    ch,ch
  40c661:	mov    cl,0x41
  40c663:	lock pop edx
  40c665:	out    0x75,al
  40c667:	push   esi
  40c668:	fsub   DWORD PTR [ecx+0xdbf2cf4]
  40c66e:	mov    BYTE PTR ds:0x48f0101d,al
  40c674:	out    0xc9,al
  40c676:	dec    esi
  40c677:	mov    bh,0x14
  40c679:	lock add bl,BYTE PTR [ebx+ecx*8-0x78]
  40c67e:	pop    ebx
  40c67f:	ds iret 
  40c681:	lea    edi,[ebx+ebp*4]
  40c684:	push   ebx
  40c685:	cmp    BYTE PTR ds:0xa4cbc3d,ah
  40c68b:	fstp   st(7)
  40c68d:	mov    cl,0xbd
  40c68f:	addr16 push eax
  40c691:	int    0x6e
  40c693:	push   0x63717e58
  40c698:	or     edx,DWORD PTR [ebp-0x427a03ad]
  40c69e:	mov    ebx,0x5c6d9fdb
  40c6a3:	call   0xcbefcccd
  40c6a8:	test   al,0x51
  40c6aa:	shl    al,cl
  40c6ac:	or     bl,BYTE PTR [edx+ebp*1+0x2d]
  40c6b0:	les    edx,FWORD PTR [ebx-0x7c27a36b]
  40c6b6:	fisub  WORD PTR [ecx]
  40c6b8:	dec    ebx
  40c6b9:	stc    
  40c6ba:	inc    esp
  40c6bb:	rcl    BYTE PTR [esi],1
  40c6bd:	sub    eax,0xbf709a56
  40c6c2:	cmc    
  40c6c3:	xchg   edi,eax
  40c6c4:	sbb    BYTE PTR [edx-0x1b879b5a],dl
  40c6ca:	pop    edx
  40c6cb:	fnsave [edx]
  40c6cd:	and    dl,ch
  40c6cf:	in     al,dx
  40c6d0:	test   eax,0x8c6a04c1
  40c6d5:	add    esi,0x69
  40c6d8:	lods   eax,DWORD PTR ds:[esi]
  40c6d9:	shl    DWORD PTR [eax-0x61],cl
  40c6dc:	std    
  40c6dd:	lahf   
  40c6de:	jno    0x40c69b
  40c6e0:	popa   
  40c6e1:	lahf   
  40c6e2:	xchg   BYTE PTR [ebx+0x0],cl
  40c6e5:	out    dx,al
  40c6e6:	les    esp,FWORD PTR [esp+ebx*1]
  40c6e9:	mov    ebp,0xb1d229e8
  40c6ee:	addr16 inc edx
  40c6f0:	mov    bh,0x53
  40c6f2:	test   BYTE PTR [ecx*4+0x4877018c],bh
  40c6f9:	mov    bh,0x64
  40c6fb:	mov    esp,0x6f895ad6
  40c700:	push   ss
  40c701:	arpl   WORD PTR [ebx+0x44008f6f],di
  40c707:	cmp    ch,BYTE PTR [ecx-0x43]
  40c70a:	add    bl,BYTE PTR [eax]
  40c70c:	push   eax
  40c70d:	or     eax,DWORD PTR [esi+0x28febfa0]
  40c713:	mov    ebx,0x76cf0345
  40c718:	push   es
  40c719:	inc    esi
  40c71a:	and    DWORD PTR [esi],esp
  40c71c:	(bad)  
  40c71d:	sub    al,ah
  40c71f:	jecxz  0x40c71a
  40c721:	mov    eax,ds:0x3b7f99d8
  40c726:	leave  
  40c727:	xchg   esp,eax
  40c728:	push   DWORD PTR [edx-0x7d862924]
  40c72e:	dec    eax
  40c72f:	lea    esp,[edi+0x11]
  40c732:	cwde   
  40c733:	rol    DWORD PTR [ecx+eax*4],cl
  40c736:	xchg   DWORD PTR [ebx-0x23],edi
  40c739:	push   ss
  40c73a:	rcr    DWORD PTR [ebp+0x5c16e7bf],cl
  40c740:	sbb    ah,bl
  40c742:	dec    esi
  40c743:	push   0x1d
  40c745:	aaa    
  40c746:	xor    bl,BYTE PTR [ecx+0x52]
  40c749:	or     eax,0xf9693c7d
  40c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c74f:	cwde   
  40c750:	aas    
  40c751:	mov    cs,bx
  40c754:	sub    ebx,edi
  40c756:	adc    eax,0x4ec2428c
  40c75b:	test   eax,0xe8203226
  40c760:	int    0x6e
  40c762:	test   eax,0x77bb39f
  40c767:	mov    ebx,0x1b6f7dc3
  40c76c:	loop   0x40c790
  40c76e:	outs   dx,DWORD PTR ds:[esi]
  40c76f:	call   0xb635:0x70f8419e
  40c776:	jl     0x40c7e0
  40c778:	cmp    DWORD PTR [ebx],ecx
  40c77a:	mov    ecx,0x77a677a6
  40c77f:	push   ds
  40c780:	enter  0x7a31,0xc1
  40c784:	rol    DWORD PTR [esi+ebx*1],1
  40c787:	mov    cl,0x53
  40c789:	test   BYTE PTR [eax-0x17],cl
  40c78c:	mov    ds,WORD PTR [ebx-0x6b63d712]
  40c792:	dec    ebx
  40c793:	loope  0x40c7e1
  40c795:	mov    dh,BYTE PTR [eax-0x43]
  40c798:	adc    al,0x9d
  40c79a:	mov    ch,0x0
  40c79c:	daa    
  40c79d:	xchg   ecx,eax
  40c79e:	sub    eax,0x750578ca
  40c7a3:	ja     0x40c7a7
  40c7a5:	xchg   BYTE PTR [ecx],al
  40c7a7:	lds    edx,FWORD PTR [eax]
  40c7a9:	jl     0x40c7c4
  40c7ab:	sbb    ch,BYTE PTR [ecx]
  40c7ad:	sub    al,0x17
  40c7af:	hlt    
  40c7b0:	scas   al,BYTE PTR es:[edi]
  40c7b1:	push   es
  40c7b2:	push   esi
  40c7b3:	das    
  40c7b4:	fwait
  40c7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b6:	ret    0xb80
  40c7b9:	sub    ecx,DWORD PTR [edi-0x452ca717]
  40c7bf:	dec    edi
  40c7c0:	or     BYTE PTR [eax],bl
  40c7c2:	mov    edx,0xc9ee19fe
  40c7c8:	and    BYTE PTR [edi+eax*8-0x7c],ah
  40c7cc:	push   ds
  40c7cd:	mov    edi,0xf2c100e3
  40c7d2:	cmp    BYTE PTR [eax+0x45cedcaa],bl
  40c7d8:	mov    eax,0x8958051
  40c7dd:	adc    ebx,ecx
  40c7df:	xlat   BYTE PTR ds:[ebx]
  40c7e0:	mov    edi,0x5a205444
  40c7e5:	mov    ds:0x95a79eef,eax
  40c7ea:	ret    
  40c7eb:	dec    eax
  40c7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ed:	inc    edi
  40c7ee:	call   0x1e4ad6a1
  40c7f3:	cmp    eax,0x8f8a6809
  40c7f8:	inc    esp
  40c7f9:	data16 loope 0x40c7d6
  40c7fc:	into   
  40c7fd:	dec    eax
  40c7fe:	popa   
  40c7ff:	jp     0x40c826
  40c801:	imul   BYTE PTR ds:0x670ab1e8
  40c807:	adc    esi,DWORD PTR [ecx+0x4f4fa2ae]
  40c80d:	mov    ebp,0xe56564e8
  40c812:	les    esp,FWORD PTR [ebp+ebx*4+0xc]
  40c816:	push   ebp
  40c817:	test   al,0xc0
  40c819:	mov    al,0x1c
  40c81b:	mov    al,ds:0x28026010
  40c820:	and    al,0xb4
  40c822:	(bad)  
  40c823:	fs popa 
  40c825:	daa    
  40c826:	inc    esi
  40c827:	and    eax,0x1304c310
  40c82c:	call   0xd882bd1f
  40c831:	cmp    al,0x10
  40c833:	jne    0x40c7e4
  40c835:	push   0xffffffce
  40c837:	and    bl,BYTE PTR [ecx-0x2]
  40c83a:	mov    al,0x97
  40c83c:	jno    0x40c81a
  40c83e:	mov    dh,0x31
  40c840:	xchg   DWORD PTR [ecx+0x5b],edx
  40c843:	pushf  
  40c844:	cmp    BYTE PTR [edx+0x60],dl
  40c847:	lock sub ah,ah
  40c84a:	pushf  
  40c84b:	xchg   ecx,esi
  40c84d:	lods   al,BYTE PTR ds:[esi]
  40c84e:	dec    ebp
  40c84f:	xor    eax,0x5c9d7e21
  40c854:	add    dh,BYTE PTR [eax+0x28]
  40c857:	jns    0x40c800
  40c859:	and    al,0x5
  40c85b:	ret    0xd888
  40c85e:	stos   BYTE PTR es:[edi],al
  40c85f:	xor    eax,0x82b6eea4
  40c864:	jb     0x40c8a4
  40c866:	call   FWORD PTR [ebx]
  40c868:	mov    bh,0xd2
  40c86a:	and    ebx,edi
  40c86c:	lea    ebp,[ebx-0x72]
  40c86f:	inc    ebp
  40c870:	mov    esi,0xf93865bf
  40c875:	fs pusha 
  40c877:	xchg   BYTE PTR ss:[ebx+ecx*2+0x16f2f248],dh
  40c87f:	scas   al,BYTE PTR es:[edi]
  40c880:	pop    ecx
  40c881:	daa    
  40c882:	je     0x40c84e
  40c884:	es ret 0xfefa
  40c888:	mov    dh,0x3d
  40c88a:	mov    dl,0x5
  40c88c:	not    DWORD PTR [esi]
  40c88e:	and    dh,BYTE PTR [esp+ecx*8]
  40c891:	pop    eax
  40c892:	cwde   
  40c893:	or     BYTE PTR [edi*1-0x5a635e2a],ch
  40c89a:	xor    ebp,ecx
  40c89c:	outs   dx,BYTE PTR ds:[esi]
  40c89d:	and    ebp,DWORD PTR [esi-0x641bd11d]
  40c8a3:	mov    bh,0xc1
  40c8a5:	fild   WORD PTR [edx-0x2946b555]
  40c8ab:	pop    edx
  40c8ac:	xor    al,0x90
  40c8ae:	mov    bl,0x8e
  40c8b0:	aad    0x52
  40c8b2:	dec    edi
  40c8b3:	pop    edx
  40c8b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8b5:	pop    ebx
  40c8b6:	dec    ecx
  40c8b7:	jno    0x40c8c8
  40c8b9:	sar    DWORD PTR [eax+eax*8],1
  40c8bc:	pop    esi
  40c8bd:	push   ecx
  40c8be:	add    edi,DWORD PTR [ecx+0xd]
  40c8c1:	xor    al,0xe0
  40c8c3:	out    dx,eax
  40c8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c5:	jmp    0x40c84c
  40c8c7:	jmp    0x1081:0xea066182
  40c8ce:	xor    BYTE PTR [ebx+0x21],cl
  40c8d1:	push   ebx
  40c8d2:	sub    eax,0x5114f51b
  40c8d7:	xchg   ecx,eax
  40c8d8:	adc    al,0x4e
  40c8da:	sbb    dh,BYTE PTR [esi-0x41]
  40c8dd:	mov    ds:0x9b1cd827,al
  40c8e2:	inc    esi
  40c8e3:	or     ecx,DWORD PTR [ebx-0x24]
  40c8e6:	push   ecx
  40c8e7:	mov    ecx,0xa3e1e6ab
  40c8ec:	std    
  40c8ed:	retf   
  40c8ee:	cld    
  40c8ef:	dec    ebp
  40c8f0:	jle    0x40c947
  40c8f2:	daa    
  40c8f3:	aaa    
  40c8f4:	cmc    
  40c8f5:	pop    ebp
  40c8f6:	xor    al,0x78
  40c8f8:	pop    es
  40c8f9:	xchg   edx,eax
  40c8fa:	push   ss
  40c8fb:	pop    ss
  40c8fc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fe:	add    al,0x51
  40c900:	sub    BYTE PTR [ecx],0xef
  40c903:	inc    eax
  40c904:	xor    ecx,DWORD PTR [ecx+esi*1]
  40c907:	cmp    eax,0xb3ab00e5
  40c90c:	(bad)  
  40c90d:	jbe    0x40c890
  40c90f:	push   ss
  40c910:	push   ecx
  40c911:	jb     0x40c8c5
  40c913:	aaa    
  40c914:	lar    ecx,WORD PTR [esi]
  40c917:	push   eax
  40c918:	in     al,dx
  40c919:	inc    esi
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x894c5e53
  40c96a:	inc    edx
  40c96b:	sub    BYTE PTR [esi+0x78789d32],bh
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	(bad)  
  40c979:	add    eax,0x91b8c181
  40c97e:	and    DWORD PTR [ecx-0x2c],ebp
  40c981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c982:	sub    al,0x89
  40c984:	or     eax,0x59a595e9
  40c989:	dec    eax
  40c98a:	stc    
  40c98b:	dec    ecx
  40c98c:	(bad)  
  40c98d:	stc    
  40c98e:	jp     0x40c957
  40c990:	push   edx
  40c991:	bound  ecx,QWORD PTR [esi-0x16]
  40c994:	jbe    0x40c9bf
  40c996:	cmp    ch,ch
  40c998:	icebp  
  40c999:	js     0x40c9d1
  40c99b:	stos   DWORD PTR es:[edi],eax
  40c99c:	adc    ebp,DWORD PTR [eax+0x4adba012]
  40c9a2:	mov    cl,0x6c
  40c9a4:	xchg   ebp,eax
  40c9a5:	push   cs
  40c9a6:	push   ebx
  40c9a7:	jmp    FWORD PTR [edi+eax*8-0x33]
  40c9ab:	sub    ebp,DWORD PTR [ebp+0x353e78e8]
  40c9b1:	mov    WORD PTR [ecx-0x4bd13bc6],?
  40c9b7:	and    al,0x1
  40c9b9:	(bad)  
  40c9ba:	gs pop ds
  40c9bc:	jae    0x40c97f
  40c9be:	mov    ebp,0xba23e937
  40c9c3:	out    dx,al
  40c9c4:	idiv   DWORD PTR [ebx+ecx*1-0x31]
  40c9c8:	pop    ebx
  40c9c9:	fisttp DWORD PTR [ebx+ecx*1]
  40c9cc:	lock dec esp
  40c9ce:	dec    ebp
  40c9cf:	call   0xf658:0xf20dec7d
  40c9d6:	rcr    DWORD PTR [edx+0x5b1323e9],0x3b
  40c9dd:	sub    dl,BYTE PTR [eax-0x3f9ffb5b]
  40c9e3:	jmp    0xe72b06d8
  40c9e8:	scas   eax,DWORD PTR es:[edi]
  40c9e9:	ins    BYTE PTR es:[edi],dx
  40c9ea:	outs   dx,BYTE PTR ds:[esi]
  40c9eb:	imul   ebx,DWORD PTR [ebp+0xfe1f93f],0x7a589e39
  40c9f5:	loope  0x40ca1c
  40c9f7:	(bad)  
  40c9f8:	loop   0x40ca0e
  40c9fa:	jge    0x40c9e7
  40c9fc:	and    al,0xf1
  40c9fe:	mov    bl,0x55
  40ca00:	sbb    al,0x18
  40ca02:	xchg   ebp,eax
  40ca03:	or     ah,bl
  40ca05:	pop    esp
  40ca06:	adc    al,0xe3
  40ca08:	jmp    0x40c98b
  40ca0a:	sti    
  40ca0b:	lock mov al,ds:0x5856d37f
  40ca11:	or     dh,BYTE PTR [esi+0x7b]
  40ca14:	sub    eax,0x543725f8
  40ca19:	sahf   
  40ca1a:	in     eax,dx
  40ca1b:	jnp    0x40ca16
  40ca1d:	adc    ch,cl
  40ca1f:	jl     0x40ca63
  40ca21:	jb     0x40c9b1
  40ca23:	mov    bl,0x9e
  40ca25:	cmp    edi,ebx
  40ca27:	popf   
  40ca28:	dec    edi
  40ca29:	lds    eax,FWORD PTR [ebx+0x3c81909b]
  40ca2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca30:	lods   eax,DWORD PTR ds:[esi]
  40ca31:	add    bl,BYTE PTR [ecx+0x1a]
  40ca34:	mov    edi,0xd653bbc4
  40ca39:	in     eax,dx
  40ca3a:	jle    0x40ca39
  40ca3c:	add    bh,BYTE PTR [ebp+0x2ace1dca]
  40ca42:	retf   0x16ff
  40ca45:	in     al,dx
  40ca46:	shl    BYTE PTR [edi-0x71],cl
  40ca49:	stos   BYTE PTR es:[edi],al
  40ca4a:	popa   
  40ca4b:	pushf  
  40ca4c:	jbe    0x40caa1
  40ca4e:	pop    ebx
  40ca4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca51:	push   0x21
  40ca53:	aam    0xe1
  40ca55:	fadd   DWORD PTR [edi-0x7]
  40ca58:	retf   
  40ca59:	les    ebx,FWORD PTR ds:0x5c77d0cb
  40ca5f:	cs push ss
  40ca61:	sub    eax,0x32e0c218
  40ca66:	out    0x40,al
  40ca68:	stc    
  40ca69:	xor    al,BYTE PTR [ecx-0x40]
  40ca6c:	lods   eax,DWORD PTR ds:[esi]
  40ca6d:	bound  ebp,QWORD PTR [eax-0x5fe11ffd]
  40ca73:	sbb    edi,DWORD PTR [esi]
  40ca75:	ror    DWORD PTR [edi],cl
  40ca77:	js     0x40ca64
  40ca79:	xchg   edi,ebp
  40ca7b:	dec    edx
  40ca7c:	(bad)  
  40ca7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca7e:	fwait
  40ca7f:	mov    eax,ds:0xd06113e8
  40ca84:	inc    ebp
  40ca85:	xchg   ecx,eax
  40ca86:	fsubr  DWORD PTR [eax]
  40ca88:	push   ds
  40ca89:	or     dl,BYTE PTR [edx+0x2f]
  40ca8c:	jmp    DWORD PTR [eax+0x19]
  40ca8f:	push   edx
  40ca90:	fcom   QWORD PTR [eax+0x54]
  40ca93:	in     al,0x74
  40ca95:	std    
  40ca96:	ds sub edi,0xffffffd4
  40ca9a:	sbb    eax,0xd3179742
  40ca9f:	out    0x9b,al
  40caa1:	frstor [ebp-0x24]
  40caa4:	sub    DWORD PTR [edx],esp
  40caa6:	mov    edx,0x12466772
  40caab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caac:	fmul   DWORD PTR [eax-0x56]
  40caaf:	add    DWORD PTR [edi-0x8],ecx
  40cab2:	jno    0x40ca4d
  40cab4:	data16 icebp 
  40cab6:	and    esp,DWORD PTR [ebp+ecx*1+0x70]
  40caba:	test   eax,0xa1ed0715
  40cabf:	js     0x40ca62
  40cac1:	jae    0x40cb40
  40cac3:	fimul  WORD PTR [edi-0x1334a66c]
  40cac9:	gs out dx,eax
  40cacb:	push   ecx
  40cacc:	and    dh,bl
  40cace:	scas   eax,DWORD PTR es:[edi]
  40cacf:	stc    
  40cad0:	pushf  
  40cad1:	sbb    eax,0x7b2e7f49
  40cad6:	fnstsw WORD PTR [edi+ecx*4]
  40cad9:	jle    0x40cac0
  40cadb:	scas   al,BYTE PTR es:[edi]
  40cadc:	ins    DWORD PTR es:[edi],dx
  40cadd:	add    dh,al
  40cadf:	inc    esp
  40cae0:	jne    0x40cadc
  40cae2:	out    dx,eax
  40cae3:	inc    DWORD PTR [ebp+0x9f3689b]
  40cae9:	xchg   ebx,eax
  40caea:	ss sbb al,0x3c
  40caed:	fxrstor [eax+0x1ad7710a]
  40caf4:	pop    ebp
  40caf5:	jne    0x40cafe
  40caf7:	xor    bl,BYTE PTR [esi]
  40caf9:	dec    esp
  40cafa:	leave  
  40cafb:	jns    0x40cb62
  40cafd:	hlt    
  40cafe:	lods   eax,DWORD PTR ds:[esi]
  40caff:	stos   DWORD PTR es:[edi],eax
  40cb00:	scas   eax,DWORD PTR es:[edi]
  40cb01:	and    DWORD PTR [esi+0x49005dca],ebp
  40cb07:	outs   dx,DWORD PTR ds:[esi]
  40cb08:	popf   
  40cb09:	xor    dl,BYTE PTR [ecx]
  40cb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0c:	dec    ebp
  40cb0d:	push   ds
  40cb0e:	mov    bh,0x4f
  40cb10:	mov    ?,WORD PTR [edi-0x67ecd755]
  40cb16:	div    DWORD PTR [esi-0x9138530]
  40cb1c:	mov    eax,0xac584334
  40cb21:	add    al,0xf6
  40cb23:	data16 jl 0x40caf0
  40cb26:	mov    DWORD PTR [ecx-0x266e32a8],0xd0b8059e
  40cb30:	icebp  
  40cb31:	js     0x40caf0
  40cb33:	popa   
  40cb34:	shr    BYTE PTR [edx-0x13],cl
  40cb37:	mov    esp,0x845b82a4
  40cb3c:	les    eax,FWORD PTR [ebx+0x6ef2fa72]
  40cb42:	jns    0x40cb1e
  40cb44:	out    0xf8,eax
  40cb46:	cs xchg ebp,eax
  40cb48:	jmp    0x40cb7d
  40cb4a:	aam    0x69
  40cb4c:	or     eax,esi
  40cb4e:	cmp    BYTE PTR [ebx+edx*2],0xf5
  40cb52:	xchg   ecx,eax
  40cb53:	adc    al,0x57
  40cb55:	leave  
  40cb56:	and    ch,ch
  40cb58:	(bad)  
  40cb59:	daa    
  40cb5a:	or     eax,0xdda6a54e
  40cb5f:	push   ss
  40cb60:	ins    DWORD PTR es:[edi],dx
  40cb61:	ret    
  40cb62:	out    0x70,al
  40cb64:	add    DWORD PTR [edi+0x36],edi
  40cb67:	je     0x40cb8c
  40cb69:	in     al,dx
  40cb6a:	jge    0x40cb98
  40cb6c:	jg     0x40cb85
  40cb6e:	repnz sbb al,BYTE PTR [eax]
  40cb71:	sbb    ch,bl
  40cb73:	ds popf 
  40cb75:	js     0x40cbee
  40cb77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb78:	pop    ebp
  40cb79:	loop   0x40cb36
  40cb7b:	jmp    0xddd6b15e
  40cb80:	(bad)  
  40cb81:	jno    0x40cb57
  40cb83:	push   cs
  40cb84:	ins    BYTE PTR es:[edi],dx
  40cb85:	or     BYTE PTR [esi+0x6e9039c9],bh
  40cb8b:	mov    DWORD PTR [edi],eax
  40cb8d:	outs   dx,DWORD PTR ds:[esi]
  40cb8e:	xor    esi,DWORD PTR [ebx]
  40cb90:	xchg   esi,eax
  40cb91:	call   0x73235b92
  40cb96:	into   
  40cb97:	retf   
  40cb98:	in     al,dx
  40cb99:	mov    eax,ds:0x12f52617
  40cb9e:	sub    edx,DWORD PTR [eax]
  40cba0:	or     BYTE PTR [ecx],0x58
  40cba3:	dec    esi
  40cba4:	and    ebx,edx
  40cba6:	pop    eax
  40cba7:	mov    ch,0x50
  40cba9:	loopne 0x40cb75
  40cbab:	hlt    
  40cbac:	les    esi,FWORD PTR [edx-0x414b66d0]
  40cbb2:	test   BYTE PTR [ebx+0xa7c1c42],dl
  40cbb8:	sbb    al,0x61
  40cbba:	nop
  40cbbb:	sub    DWORD PTR [ecx],ecx
  40cbbd:	mov    WORD PTR [eax+ecx*1],ss
  40cbc0:	jecxz  0x40cb56
  40cbc2:	clc    
  40cbc3:	div    BYTE PTR [ebp-0x32]
  40cbc6:	cmovb  esi,DWORD PTR [ebp+0x389d914b]
  40cbcd:	sub    DWORD PTR [edi+0x5418e2f1],ebx
  40cbd3:	pop    edi
  40cbd4:	je     0x40cbd7
  40cbd6:	push   cs
  40cbd7:	enter  0x4d28,0xfe
  40cbdb:	pushf  
  40cbdc:	and    ebx,0xfffffff3
  40cbdf:	aaa    
  40cbe0:	sahf   
  40cbe1:	or     DWORD PTR [esi],esp
  40cbe3:	sbb    esp,edi
  40cbe5:	sub    al,0x96
  40cbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbe8:	out    0xe3,al
  40cbea:	xchg   esi,eax
  40cbeb:	xor    al,0xfc
  40cbed:	mov    edx,0x1c953ea5
  40cbf2:	push   ebp
  40cbf3:	push   ecx
  40cbf4:	and    BYTE PTR [esi],0xc9
  40cbf7:	push   esp
  40cbf8:	or     dh,BYTE PTR [eax+0x5f]
  40cbfb:	mov    ebx,0xc112a903
  40cc00:	loop   0x40cba0
  40cc02:	xchg   dh,bl
  40cc04:	adc    ch,bl
  40cc06:	lahf   
  40cc07:	inc    edi
  40cc08:	xlat   BYTE PTR ds:[ebx]
  40cc09:	(bad)  
  40cc0a:	dec    edi
  40cc0b:	outs   dx,BYTE PTR ds:[esi]
  40cc0c:	xor    ah,bh
  40cc0e:	xchg   edi,eax
  40cc0f:	mov    ebx,0x26687591
  40cc14:	loope  0x40cbf3
  40cc16:	xor    bl,BYTE PTR [ecx+0x10e5773f]
  40cc1c:	xchg   esi,eax
  40cc1d:	mov    ?,WORD PTR [edx-0xa]
  40cc20:	push   edi
  40cc21:	mov    ch,0xe6
  40cc23:	adc    BYTE PTR [eax],dl
  40cc25:	mov    edi,0x6be737fb
  40cc2a:	out    dx,al
  40cc2b:	or     bh,BYTE PTR [edi-0x65bf80fb]
  40cc31:	cmp    al,BYTE PTR [esi+edx*2+0x35]
  40cc35:	inc    ecx
  40cc36:	mov    bl,0x49
  40cc38:	sub    dl,0xa6
  40cc3b:	or     al,0x29
  40cc3d:	(bad)  
  40cc3e:	int    0xb
  40cc40:	xchg   edx,eax
  40cc41:	jmp    0xd1e8:0xb9811344
  40cc48:	call   0xfe8c8e53
  40cc4d:	jg     0x40cc7c
  40cc4f:	xchg   DWORD PTR [eax+0x0],edi
  40cc52:	push   esi
  40cc53:	mov    ds:0x7aab4d7d,al
  40cc58:	jg     0x40cbde
  40cc5a:	and    eax,0xedf84aef
  40cc5f:	inc    ecx
  40cc60:	mov    ecx,0x79083f57
  40cc65:	inc    ecx
  40cc66:	sti    
  40cc67:	dec    ebp
  40cc68:	fcomp  QWORD PTR [edx]
  40cc6a:	aam    0x72
  40cc6c:	out    0xf7,eax
  40cc6e:	lock fist DWORD PTR ds:0x14e93839
  40cc75:	add    eax,DWORD PTR [eax]
  40cc77:	add    dh,al
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x7d
  40cc85:	sahf   
  40cc86:	(bad)  
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	stos   BYTE PTR es:[edi],al
  40cc91:	mov    ds:0x63cd4d19,al
  40cc96:	(bad)  
  40cc97:	popa   
  40cc98:	jne    0x40cc8b
  40cc9a:	mov    al,0x5e
  40cc9c:	dec    edx
  40cc9d:	das    
  40cc9e:	jns    0x40cc75
  40cca0:	in     al,0xd2
  40cca2:	test   BYTE PTR [ebp-0x654ab94a],cl
  40cca8:	xor    al,0x29
  40ccaa:	cmp    ch,BYTE PTR [eax+0x7afbfce4]
  40ccb0:	dec    esi
  40ccb1:	sub    edi,DWORD PTR [edx-0x31]
  40ccb4:	aam    0x89
  40ccb6:	sub    al,BYTE PTR [esi+ecx*8+0x6eccf6fb]
  40ccbd:	iret   
  40ccbe:	stc    
  40ccbf:	and    eax,0x7186990
  40ccc4:	je     0x40cc78
  40ccc6:	not    BYTE PTR [ebx-0x766779dc]
  40cccc:	fistp  DWORD PTR [edi+0x2567e826]
  40ccd2:	inc    esi
  40ccd3:	pushf  
  40ccd4:	out    0x59,al
  40ccd6:	sbb    DWORD PTR [eax+0x589d3db6],ecx
  40ccdc:	sub    esp,DWORD PTR [edx-0x639d71c3]
  40cce2:	rcr    DWORD PTR [edx],cl
  40cce4:	cmp    eax,0x72900a8b
  40cce9:	outs   dx,BYTE PTR ds:[esi]
  40ccea:	retf   
  40cceb:	fmul   DWORD PTR [esi-0x1f46bef6]
  40ccf1:	and    BYTE PTR ds:0xe3d427fa,bh
  40ccf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf8:	sbb    ch,dh
  40ccfa:	mov    ecx,es
  40ccfc:	gs jg  0x40cc80
  40ccff:	inc    eax
  40cd00:	xchg   esp,eax
  40cd01:	add    DWORD PTR [ecx+0x41e13f62],edx
  40cd07:	mov    BYTE PTR [ecx+0x0],dh
  40cd0a:	push   ds
  40cd0b:	mov    ds:0xc1053073,al
  40cd10:	sahf   
  40cd11:	jnp    0x40cd57
  40cd13:	pop    es
  40cd14:	in     eax,dx
  40cd15:	mov    ch,0x80
  40cd17:	(bad)  
  40cd18:	mov    ch,0x4d
  40cd1a:	mov    dh,0x6c
  40cd1c:	cmp    eax,0xb99691a7
  40cd21:	push   ecx
  40cd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd23:	adc    esi,esp
  40cd25:	pop    esp
  40cd26:	add    eax,0x7d79050e
  40cd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2c:	add    al,BYTE PTR [edi+0x75]
  40cd2f:	loop   0x40cd30
  40cd31:	icebp  
  40cd32:	mov    ch,0xcd
  40cd34:	fcomi  st,st(4)
  40cd36:	mov    al,ds:0x2aed0a4b
  40cd3b:	cmp    BYTE PTR es:[esi-0x4b],0x77
  40cd40:	xlat   BYTE PTR ds:[ebx]
  40cd41:	xor    esi,DWORD PTR [ecx]
  40cd43:	ffree  st(7)
  40cd45:	mov    ecx,0xff81bd74
  40cd4a:	nop
  40cd4b:	push   edi
  40cd4c:	adc    BYTE PTR [eax],bh
  40cd4e:	xchg   esp,eax
  40cd4f:	pushf  
  40cd50:	dec    ebx
  40cd51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd52:	(bad)  
  40cd53:	adc    esp,DWORD PTR [edi+0x9]
  40cd56:	xor    eax,0x545caeef
  40cd5b:	(bad)  
  40cd5c:	clc    
  40cd5d:	mov    edx,0xc9f289d1
  40cd62:	pop    ebx
  40cd63:	push   0x55834aae
  40cd68:	dec    ecx
  40cd69:	shl    BYTE PTR [eax-0x43e3744],cl
  40cd6f:	in     al,dx
  40cd70:	sbb    eax,0x90abf95
  40cd75:	add    al,0xff
  40cd77:	sub    DWORD PTR [esi-0x7c],eax
  40cd7a:	ins    BYTE PTR es:[edi],dx
  40cd7b:	sub    al,0x23
  40cd7d:	ret    
  40cd7e:	mov    edi,0x9138f6ca
  40cd83:	mov    ds:0x14554bec,eax
  40cd88:	pop    ebx
  40cd89:	jp     0x40ce02
  40cd8b:	dec    ebp
  40cd8c:	sbb    eax,0x7676a7e9
  40cd91:	loope  0x40ce0e
  40cd93:	fmul   DWORD PTR [esi+0x74fb52e2]
  40cd99:	retf   0x640e
  40cd9c:	or     al,0x1a
  40cd9e:	adc    eax,0xade918e
  40cda3:	mov    DWORD PTR [eax+0x2aa0c52c],esi
  40cda9:	lods   al,BYTE PTR ds:[esi]
  40cdaa:	call   0x5eb01b1b
  40cdaf:	fs or  eax,DWORD PTR ds:[esi+0x45532358]
  40cdb7:	jp     0x40cdb4
  40cdb9:	(bad)  
  40cdba:	std    
  40cdbb:	aas    
  40cdbc:	jmp    0x40cdf2
  40cdbe:	fld    DWORD PTR [eax+0x6c]
  40cdc1:	and    al,BYTE PTR [edx+0x65b7ecdf]
  40cdc7:	and    eax,0xbc1b3e82
  40cdcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdcd:	shl    BYTE PTR [ebp+0x43],0x98
  40cdd1:	and    edi,DWORD PTR [ecx-0x10987ccd]
  40cdd7:	mov    eax,edi
  40cdd9:	adc    esp,DWORD PTR [ebx+0x4b]
  40cddc:	clc    
  40cddd:	and    bl,al
  40cddf:	lahf   
  40cde0:	call   0x3d34ad65
  40cde5:	sub    DWORD PTR [ebp-0x69],ebx
  40cde8:	lock pop edi
  40cdea:	xchg   edi,eax
  40cdeb:	cld    
  40cdec:	mov    bh,0xa8
  40cdee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdef:	pop    ds
  40cdf0:	int3   
  40cdf1:	mov    esp,0xde1f0012
  40cdf6:	push   eax
  40cdf8:	mov    fs,WORD PTR [ecx-0x48]
  40cdfb:	mov    esi,cr12
  40cdff:	dec    esp
  40ce00:	ins    DWORD PTR es:[edi],dx
  40ce01:	stc    
  40ce02:	(bad)  
  40ce03:	dec    ebp
  40ce04:	iret   
  40ce05:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ce07:	and    edi,ebp
  40ce09:	mov    ds:0x41c6a800,al
  40ce0e:	sub    al,0x46
  40ce10:	loope  0x40cdc7
  40ce12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce13:	sbb    ah,BYTE PTR [ebp+ebx*1-0x5]
  40ce17:	aas    
  40ce18:	(bad)  
  40ce19:	cmc    
  40ce1a:	inc    eax
  40ce1b:	sbb    DWORD PTR [eax+eiz*1-0x22733f02],ebp
  40ce22:	push   ebp
  40ce23:	inc    ebp
  40ce24:	add    al,0x1
  40ce26:	jnp    0x40ce68
  40ce28:	enter  0x8dd5,0xe2
  40ce2c:	xchg   ecx,eax
  40ce2d:	test   DWORD PTR [ecx],esp
  40ce2f:	cs inc edx
  40ce31:	es aad 0xe4
  40ce34:	mul    BYTE PTR [eax-0x6f91409]
  40ce3a:	iret   
  40ce3b:	mov    eax,0x20415f88
  40ce40:	xlat   BYTE PTR ds:[ebx]
  40ce41:	mov    DWORD PTR [ebp+edx*8+0x5e519437],esi
  40ce48:	mov    edi,DWORD PTR [ebp+0xbcfa188]
  40ce4e:	sar    DWORD PTR [edi],cl
  40ce50:	inc    eax
  40ce51:	data16 sub al,0x8a
  40ce54:	adc    eax,0x978f3615
  40ce59:	out    0x7f,al
  40ce5b:	cdq    
  40ce5c:	sub    cl,al
  40ce5e:	mov    ds:0xa1fe08e8,al
  40ce63:	das    
  40ce64:	out    0xb3,al
  40ce66:	add    eax,0xd67d9832
  40ce6b:	daa    
  40ce6c:	sbb    al,0x4a
  40ce6e:	push   cs
  40ce6f:	hlt    
  40ce70:	bound  edx,QWORD PTR [ecx]
  40ce72:	in     eax,dx
  40ce73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce74:	stos   BYTE PTR es:[edi],al
  40ce75:	in     al,dx
  40ce76:	push   ds
  40ce77:	jmp    0x6c844b5
  40ce7c:	jns    0x40cef7
  40ce7e:	js     0x40ceda
  40ce80:	repnz sbb BYTE PTR [ecx-0x23],bl
  40ce84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce85:	icebp  
  40ce86:	ret    
  40ce87:	ret    0x52d1
  40ce8a:	add    esi,edx
  40ce8c:	push   0xffffff83
  40ce8e:	fwait
  40ce8f:	adc    al,0x43
  40ce91:	pop    eax
  40ce92:	pop    ss
  40ce93:	and    al,0x1e
  40ce95:	gs jmp 0x7c17a315
  40ce9b:	cmp    eax,0xd37f9647
  40cea0:	test   al,ch
  40cea2:	in     eax,0x62
  40cea4:	into   
  40cea5:	add    esi,esi
  40cea7:	adc    BYTE PTR [ebx-0x5467d3ff],dh
  40cead:	jo     0x40cf0e
  40ceaf:	fs ins DWORD PTR es:[edi],dx
  40ceb1:	in     al,dx
  40ceb2:	mov    BYTE PTR [ecx],al
  40ceb4:	mov    esp,0xef02827c
  40ceb9:	inc    esp
  40ceba:	mov    WORD PTR [edi-0x5c],ds
  40cebd:	mov    ch,0xaa
  40cebf:	mov    edx,0x753f7713
  40cec4:	pop    ds
  40cec5:	and    DWORD PTR [si+0x52bc],esp
  40ceca:	pop    esp
  40cecb:	and    eax,0x6a1282fb
  40ced0:	fs jmp 0x40ce60
  40ced3:	xchg   ebp,eax
  40ced4:	jo     0x40ceea
  40ced6:	pop    ebx
  40ced7:	hlt    
  40ced8:	dec    edx
  40ced9:	pop    eax
  40ceda:	loop   0x40ce97
  40cedc:	cmovp  esp,DWORD PTR [edi-0x32]
  40cee0:	sub    eax,0xd99ca647
  40cee5:	dec    esi
  40cee6:	outs   dx,BYTE PTR ds:[esi]
  40cee7:	jge    0x40cf35
  40cee9:	mov    bh,0x20
  40ceeb:	(bad)  
  40ceec:	mov    cl,bh
  40ceee:	or     esi,DWORD PTR [ecx-0x46ec412b]
  40cef4:	data16 int 0x58
  40cef7:	and    ebx,DWORD PTR [eax]
  40cef9:	fwait
  40cefa:	(bad)  
  40cefb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cefc:	xor    ah,BYTE PTR [edx]
  40cefe:	fwait
  40ceff:	enter  0x7f42,0xf
  40cf03:	in     al,0xfc
  40cf05:	mov    esp,0x49e588a1
  40cf0a:	mov    esi,ebx
  40cf0c:	xchg   edi,eax
  40cf0d:	xchg   edx,eax
  40cf0e:	sahf   
  40cf0f:	loope  0x40ce98
  40cf11:	in     eax,0x4c
  40cf13:	in     al,dx
  40cf14:	jne    0x40cf8d
  40cf16:	xchg   ecx,eax
  40cf17:	iret   
  40cf18:	test   edx,0x87b2a08d
  40cf1e:	mov    BYTE PTR [eax-0x63261602],0x6
  40cf25:	repnz imul BYTE PTR [esi+0x162ff2c]
  40cf2c:	fdivr  st(1),st
  40cf2e:	sub    eax,0x8d906463
  40cf33:	push   edi
  40cf34:	push   esi
  40cf35:	push   esp
  40cf36:	(bad)
  40cf39:	push   cs
  40cf3a:	or     DWORD PTR [eax],ecx
  40cf3c:	cs xchg ecx,eax
  40cf3e:	jl     0x40cf0f
  40cf40:	inc    esp
  40cf41:	cmp    ah,dh
  40cf43:	fwait
  40cf44:	mov    ds:0x91b05e6,al
  40cf49:	jbe    0x40cfaf
  40cf4b:	cmp    ebp,DWORD PTR ds:[eax-0x29620a48]
  40cf52:	dec    esi
  40cf53:	pop    esi
  40cf54:	and    esi,ecx
  40cf56:	xchg   edx,eax
  40cf57:	pop    ebx
  40cf58:	jl     0x40cfa1
  40cf5a:	aam    0x5f
  40cf5c:	cmp    BYTE PTR [edx+0x11bfb65b],bh
  40cf62:	push   cs
  40cf63:	data16 jle 0x40cf0d
  40cf66:	(bad)  
  40cf67:	mov    al,ds:0x1e87b138
  40cf6c:	dec    BYTE PTR [edi+0x321e82cb]
  40cf72:	cmp    eax,0x1068f441
  40cf77:	arpl   sp,sp
  40cf79:	data16 fcmovne st,st(7)
  40cf7c:	stos   BYTE PTR es:[edi],al
  40cf7d:	cli    
  40cf7e:	sbb    ebp,DWORD PTR [ebx+0x26]
  40cf81:	jb     0x40cf9a
  40cf83:	out    0xa,eax
  40cf85:	jne    0x40cf5f
  40cf87:	sbb    DWORD PTR [esi+edi*8],esp
  40cf8a:	shl    dh,1
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a865,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a899,0x42a77d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	xor    ebx,DWORD PTR [edx-0x58d50aab]
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0x8e78787e
  40cfd7:	(bad)  
  40cfd8:	jno    0x40d01f
  40cfda:	push   edi
  40cfdb:	nop
  40cfdc:	or     eax,0xcc9eee7
  40cfe1:	dec    eax
  40cfe2:	test   eax,0x739a5ef4
  40cfe7:	jle    0x40cfa7
  40cfe9:	xor    ch,BYTE PTR [esp+eax*1+0x13]
  40cfed:	jb     0x40cfc4
  40cfef:	sahf   
  40cff0:	iret   
  40cff1:	jge    0x40cfb8
  40cff3:	push   esp
  40cff4:	sub    DWORD PTR [ebp+0x12],0x28
  40cff8:	pop    ebp
  40cff9:	xor    edi,esi
  40cffb:	push   eax
  40cffc:	pop    eax
  40cffd:	icebp  
  40cffe:	rcr    BYTE PTR [eax-0x32],cl
  40d001:	retf   
  40d002:	scas   eax,DWORD PTR es:[edi]
  40d003:	into   
  40d004:	fbstp  TBYTE PTR [esi-0x72]
  40d007:	or     BYTE PTR [edi-0x4e797959],cl
  40d00d:	jge    0x40d035
  40d00f:	loopne 0x40d075
  40d011:	xor    ebp,edx
  40d013:	call   0x711b9b49
  40d018:	mov    eax,0x28bc27f2
  40d01d:	push   ebp
  40d01e:	jmp    0x4c25:0x6e395ea0
  40d025:	push   ds
  40d026:	push   ss
  40d027:	push   0xd2abe5ad
  40d02c:	xor    BYTE PTR [edx],ch
  40d02e:	pop    esi
  40d02f:	cmp    esi,ebx
  40d031:	jb     0x40d02a
  40d033:	lods   eax,DWORD PTR ds:[esi]
  40d034:	mov    dh,0xe5
  40d036:	ss push ss
  40d038:	add    ah,BYTE PTR [ecx-0x23fb109e]
  40d03e:	cmp    eax,DWORD PTR ds:0xf9de3735
  40d044:	xor    esp,ebx
  40d046:	xchg   edx,eax
  40d047:	daa    
  40d048:	cmc    
  40d049:	sub    edx,DWORD PTR [esi+0x70]
  40d04c:	jecxz  0x40d032
  40d04e:	scas   al,BYTE PTR es:[edi]
  40d04f:	xor    ebx,esp
  40d051:	(bad)  
  40d052:	mov    eax,0x62d29928
  40d057:	jge    0x40d09a
  40d059:	jo     0x40d0bf
  40d05b:	je     0x40d071
  40d05d:	adc    DWORD PTR [ebx-0x1aa762bd],ecx
  40d063:	cld    
  40d064:	or     esi,DWORD PTR [eax]
  40d066:	psubq  mm1,QWORD PTR [ebx]
  40d069:	das    
  40d06a:	das    
  40d06b:	popa   
  40d06c:	gs int 0xa0
  40d06f:	les    esp,FWORD PTR [edi+ebp*8+0x71]
  40d073:	push   es
  40d074:	mov    ah,0x6e
  40d076:	xchg   esp,eax
  40d077:	fdiv   DWORD PTR [eax+0x31]
  40d07a:	clc    
  40d07b:	es mov eax,0x3468c033
  40d081:	sahf   
  40d082:	ss mov bx,0xf63f
  40d087:	cmp    ecx,DWORD PTR [edx]
  40d089:	imul   esp
  40d08b:	daa    
  40d08c:	mov    ah,0x6c
  40d08e:	push   0x37873567
  40d093:	test   eax,0xdeeb2c21
  40d098:	cmp    eax,eax
  40d09a:	test   ah,bh
  40d09c:	mov    ecx,DWORD PTR [edi-0x4ca1af6f]
  40d0a2:	dec    ecx
  40d0a3:	add    eax,DWORD PTR [edi]
  40d0a5:	adc    bl,BYTE PTR [ebp+0x57bdbfed]
  40d0ab:	ins    BYTE PTR es:[edi],dx
  40d0ac:	cmp    esp,DWORD PTR [edx-0x5]
  40d0af:	sbb    al,0x33
  40d0b1:	enter  0x3156,0x34
  40d0b5:	test   al,0x5b
  40d0b7:	dec    eax
  40d0b8:	loope  0x40d09c
  40d0ba:	in     al,0xf4
  40d0bc:	xor    bh,al
  40d0be:	(bad)  [ebx]
  40d0c0:	sub    al,0x1d
  40d0c2:	xchg   esp,eax
  40d0c3:	cld    
  40d0c4:	mov    ?,WORD PTR [esi-0x2]
  40d0c7:	pop    esp
  40d0c8:	sub    ebx,esp
  40d0ca:	mov    ebx,0x4c57a6db
  40d0cf:	add    dh,BYTE PTR ds:0x4fbdcb71
  40d0d5:	int    0x47
  40d0d7:	imul   esi,DWORD PTR [ecx+0x4c],0xffffffc9
  40d0db:	shr    BYTE PTR [ebx-0x1e],0xfa
  40d0df:	and    ah,cl
  40d0e1:	cwde   
  40d0e2:	xchg   ecx,eax
  40d0e3:	and    BYTE PTR [edi-0x1ce7f35e],bl
  40d0e9:	mov    ah,0x4d
  40d0eb:	loope  0x40d0c8
  40d0ed:	sub    DWORD PTR [ebx],0x6e
  40d0f0:	or     al,0x81
  40d0f2:	xchg   DWORD PTR [edi-0x5733e3c],ebp
  40d0f8:	xor    esp,DWORD PTR [edx-0x17574242]
  40d0fe:	ror    BYTE PTR [eax+ecx*2+0x73db213],0x3b
  40d106:	ds aaa 
  40d108:	and    DWORD PTR [esi-0x10],eax
  40d10b:	leave  
  40d10c:	mov    ch,BYTE PTR [ebp-0x1134896e]
  40d112:	cmp    eax,0x227cd607
  40d117:	xor    BYTE PTR [esp+esi*2+0x4c],cl
  40d11b:	jae    0x40d0a6
  40d11d:	dec    ebx
  40d11e:	lods   al,BYTE PTR ds:[esi]
  40d11f:	nop
  40d120:	jl     0x40d0ad
  40d122:	xchg   esi,eax
  40d123:	imul   al
  40d125:	xchg   edi,eax
  40d126:	clc    
  40d127:	xchg   DWORD PTR ds:0x1508db2d,esi
  40d12d:	loop   0x40d14e
  40d12f:	push   ds
  40d130:	nop
  40d131:	sahf   
  40d132:	int3   
  40d133:	hlt    
  40d134:	push   cs
  40d135:	int    0x2f
  40d137:	push   ecx
  40d138:	pop    ss
  40d139:	ror    DWORD PTR [ebp+0x38],cl
  40d13c:	or     bh,BYTE PTR [edi]
  40d13e:	jae    0x40d19a
  40d140:	dec    ecx
  40d141:	cs fwait
  40d143:	lea    eax,[esi+0x9]
  40d146:	dec    edx
  40d147:	call   0xd4022a2a
  40d14c:	and    ebx,DWORD PTR [ecx-0x36a88c8]
  40d152:	inc    ebp
  40d153:	mov    bl,0x9b
  40d155:	bound  ebp,QWORD PTR [ebx]
  40d157:	sub    BYTE PTR ds:0x1db5152,bl
  40d15d:	test   al,0xb6
  40d15f:	mov    edi,0xc731bc03
  40d164:	ja     0x40d199
  40d166:	fadd   DWORD PTR [esi-0x3d]
  40d169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d16a:	mov    bl,0x56
  40d16c:	lahf   
  40d16d:	inc    esi
  40d16e:	pinsrw mm4,eax,0x23
  40d172:	mov    bl,0xf7
  40d174:	xor    al,0x69
  40d176:	mov    eax,ds:0xb80454b8
  40d17b:	jmp    0xc776:0x85bdd293
  40d182:	(bad)  
  40d183:	jae    0x40d151
  40d185:	cli    
  40d186:	mov    eax,ds:0x131f58af
  40d18b:	jecxz  0x40d11c
  40d18d:	adc    DWORD PTR [ecx-0x2c],eax
  40d190:	push   ss
  40d191:	aas    
  40d192:	push   ebp
  40d193:	scas   eax,DWORD PTR es:[edi]
  40d194:	mov    es,WORD PTR ds:0x62bdb5d3
  40d19a:	sbb    DWORD PTR [edx+0x37],ebp
  40d19d:	mov    bh,0x17
  40d19f:	call   0x9a7bc71e
  40d1a4:	fstp   QWORD PTR ds:0xb7561433
  40d1aa:	ror    BYTE PTR gs:[bx+di],cl
  40d1ae:	mov    ds:0x2c937429,eax
  40d1b3:	xor    eax,0x7317409c
  40d1b8:	sti    
  40d1b9:	adc    esp,DWORD PTR [ecx-0x19]
  40d1bc:	test   DWORD PTR [eax+0x57e821bc],0x863585bc
  40d1c6:	(bad)  
  40d1c8:	xchg   edx,eax
  40d1c9:	inc    edx
  40d1ca:	das    
  40d1cb:	add    BYTE PTR [edx-0x4cdcd907],ch
  40d1d1:	mov    DWORD PTR [ebp+0x5e1be14f],ebx
  40d1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d8:	push   edx
  40d1d9:	jbe    0x40d15e
  40d1db:	popa   
  40d1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1dd:	sbb    DWORD PTR [ebx+ecx*1-0x6f],eax
  40d1e1:	xchg   esi,eax
  40d1e2:	shl    BYTE PTR [ebp+0x35],0xd0
  40d1e6:	stos   DWORD PTR es:[edi],eax
  40d1e7:	das    
  40d1e8:	or     edi,DWORD PTR [ebp-0x43cfdb70]
  40d1ee:	or     bl,BYTE PTR [ebp-0x4563606b]
  40d1f4:	xchg   DWORD PTR [ebx-0x36],edx
  40d1f7:	jl     0x40d193
  40d1f9:	(bad)  
  40d1fb:	inc    esp
  40d1fc:	mov    ebp,0x6a621011
  40d201:	or     ebx,DWORD PTR ds:0xa0a1e995
  40d207:	(bad)  
  40d208:	jl     0x40d25e
  40d20a:	ins    DWORD PTR es:[edi],dx
  40d20b:	mov    ebx,0xa4e0b0e7
  40d210:	inc    ebx
  40d211:	push   ebx
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7d5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7d5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7d5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7d5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7d5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a795
  40d260:	xor    ebx,DWORD PTR ds:0x42a77d
  40d266:	mov    DWORD PTR ds:0x42a795,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7dd,0x42a899
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a8a9,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a899,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a865
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	imul   ebp,DWORD PTR [eax-0x5a18e1df],0x78
  40d2c0:	js     0x40d2f7
  40d2c2:	jle    0x40d33c
  40d2c4:	js     0x40d2c3
  40d2c6:	pushf  
  40d2c7:	and    eax,0xdac45c65
  40d2cc:	ss cli 
  40d2ce:	dec    esi
  40d2cf:	pop    esi
  40d2d0:	mov    ah,0x8c
  40d2d2:	data16 outs dx,BYTE PTR ds:[esi]
  40d2d4:	fistp  QWORD PTR [esi]
  40d2d6:	add    eax,0x1f8b0615
  40d2db:	sbb    al,0xf8
  40d2dd:	mov    dh,0xd4
  40d2df:	icebp  
  40d2e0:	lods   al,BYTE PTR ds:[esi]
  40d2e1:	add    bh,BYTE PTR [ebx-0x6a71676b]
  40d2e7:	out    0x3c,al
  40d2e9:	mov    ds:0x225ad029,eax
  40d2ee:	sub    DWORD PTR ds:0xd5272991,ebx
  40d2f4:	jmp    FWORD PTR [esi]
  40d2f6:	jmp    0xf144:0xbd3b99c3
  40d2fd:	inc    edi
  40d2fe:	adc    dl,cl
  40d300:	and    esi,DWORD PTR [eax+edi*1]
  40d303:	or     DWORD PTR [edx+0x26],ebx
  40d306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d307:	daa    
  40d308:	cdq    
  40d309:	daa    
  40d30a:	sub    DWORD PTR [edi+0x5],ebp
  40d30d:	lds    ebx,FWORD PTR [edi-0x5fc7f636]
  40d313:	cdq    
  40d314:	inc    BYTE PTR [esi-0x1881a076]
  40d31a:	out    dx,al
  40d31b:	lds    edi,FWORD PTR fs:[eax]
  40d31e:	mov    bh,0xb8
  40d320:	xchg   edx,eax
  40d321:	sub    bh,BYTE PTR [ebx+edi*2-0x4318cce8]
  40d328:	jg     0x40d351
  40d32a:	neg    DWORD PTR [edx-0x11]
  40d32d:	inc    edx
  40d32e:	push   edx
  40d32f:	fidiv  DWORD PTR [edx+0xfd16931]
  40d335:	bnd jne 0x40d39b
  40d338:	and    BYTE PTR [esi+ebx*8],ch
  40d33b:	fnstsw WORD PTR [esi-0x49]
  40d33e:	call   0xb0b6:0x6d9757d4
  40d345:	call   DWORD PTR [esi]
  40d347:	sbb    al,0xa0
  40d349:	mov    edx,0xd8010af
  40d34e:	xlat   BYTE PTR ds:[ebx]
  40d34f:	add    edi,DWORD PTR [eax]
  40d351:	test   DWORD PTR [esi-0x3],0xef48074f
  40d358:	jmp    0x40d2f6
  40d35a:	jmp    0xc154:0xb7b965eb
  40d361:	imul   ebx,ecx,0xe49cdca7
  40d367:	loop   0x40d2f2
  40d369:	inc    ecx
  40d36a:	inc    ebp
  40d36b:	mov    ebp,0x93b53fa1
  40d370:	jp     0x40d358
  40d372:	sbb    eax,0xbde4fcf3
  40d377:	xor    al,0xea
  40d379:	jo     0x40d388
  40d37b:	mov    ecx,0x78136671
  40d380:	cmp    ch,bh
  40d382:	xchg   ecx,ebx
  40d384:	in     eax,dx
  40d385:	push   esp
  40d386:	lock mov dx,0x46db
  40d38b:	add    esi,eax
  40d38d:	inc    ecx
  40d38e:	shl    DWORD PTR [esi-0xd],0x2b
  40d392:	aaa    
  40d393:	mov    ebx,0x2b03de1a
  40d398:	inc    ecx
  40d399:	xlat   BYTE PTR ds:[ebx]
  40d39a:	js     0x40d41a
  40d39c:	add    esi,DWORD PTR [ecx]
  40d39e:	iret   
  40d39f:	jb     0x40d390
  40d3a1:	mov    al,ds:0x46e8a9ac
  40d3a6:	inc    edx
  40d3a7:	cmp    cl,BYTE PTR [ebp+0x6f6beb1b]
  40d3ad:	in     eax,0xe7
  40d3af:	pop    edi
  40d3b0:	bound  esp,QWORD PTR [esi-0x49]
  40d3b3:	cmp    bh,BYTE PTR [edx-0x2]
  40d3b6:	inc    ebx
  40d3b7:	daa    
  40d3b8:	stos   DWORD PTR es:[edi],eax
  40d3b9:	(bad)  
  40d3ba:	xchg   edx,eax
  40d3bb:	mov    bl,0xff
  40d3bd:	push   esp
  40d3be:	gs push edi
  40d3c0:	pop    ds
  40d3c1:	xor    BYTE PTR [ecx-0x3],bh
  40d3c4:	lahf   
  40d3c5:	rcr    DWORD PTR [eax],cl
  40d3c7:	push   DWORD PTR [ebx+esi*4+0x5ecd3087]
  40d3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3cf:	dec    edi
  40d3d0:	cmp    DWORD PTR [ebx+0x5e],0x96d5ff4e
  40d3d7:	cwde   
  40d3d8:	scas   eax,DWORD PTR es:[edi]
  40d3d9:	mov    esi,0x51bdf263
  40d3de:	mov    DWORD PTR [esi-0x1bf6fd9f],ebp
  40d3e4:	mov    esp,0x351c8854
  40d3e9:	jg     0x40d3e2
  40d3eb:	ror    DWORD PTR [eax+0x7466956f],0xc1
  40d3f2:	mov    bl,bl
  40d3f4:	popf   
  40d3f5:	fistp  DWORD PTR [edi]
  40d3f7:	cmp    bl,BYTE PTR [ebp-0x46]
  40d3fa:	lds    esp,FWORD PTR [ecx]
  40d3fc:	pop    esp
  40d3fd:	inc    ebx
  40d3fe:	mov    esp,0x13c5cd95
  40d403:	aad    0x3d
  40d405:	mov    al,0x71
  40d407:	mov    eax,0x33f0c934
  40d40c:	fs xchg ebp,eax
  40d40e:	fnstsw WORD PTR [esi+0x5cf55e83]
  40d414:	push   es
  40d415:	mov    ch,0x4b
  40d417:	ficom  DWORD PTR [esi+0x247c496a]
  40d41d:	imul   eax,DWORD PTR [ebx],0xf276f7ce
  40d423:	xchg   esi,eax
  40d424:	int    0x4f
  40d426:	imul   edx,DWORD PTR [ebp-0x54],0x52dca4ee
  40d42d:	retf   
  40d42e:	fwait
  40d42f:	mov    esp,0xb2589bd3
  40d434:	and    DWORD PTR [edi+ebp*2+0x3f669764],0x73339dcc
  40d43f:	xor    eax,0xa5950493
  40d444:	in     eax,dx
  40d445:	pop    edi
  40d446:	fsub   DWORD PTR [edx+0x1b]
  40d449:	ret    
  40d44a:	dec    eax
  40d44b:	adc    DWORD PTR ds:0x6fa47f67,edx
  40d451:	test   eax,0x89bda405
  40d456:	call   0x142d36e1
  40d45b:	out    dx,al
  40d45c:	push   cs
  40d45d:	push   esi
  40d45e:	jo     0x40d4ac
  40d460:	inc    edx
  40d461:	cli    
  40d462:	push   ss
  40d463:	push   edx
  40d464:	cmc    
  40d465:	cld    
  40d466:	stos   BYTE PTR es:[edi],al
  40d467:	popf   
  40d468:	fnsave [edi+0x4d19c64d]
  40d46e:	jl     0x40d462
  40d470:	jp     0x40d496
  40d472:	mov    al,0x63
  40d474:	out    dx,eax
  40d475:	fistp  QWORD PTR [ecx]
  40d477:	es sti 
  40d479:	(bad)  
  40d47b:	mov    ecx,0x41ec61e3
  40d480:	jp     0x7f270cae
  40d486:	push   edx
  40d487:	sub    bh,cl
  40d489:	outs   dx,BYTE PTR ds:[esi]
  40d48a:	push   ebx
  40d48b:	xchg   esp,eax
  40d48c:	push   cs
  40d48d:	rol    DWORD PTR [ebx+0x5c],cl
  40d490:	sar    DWORD PTR [esi-0x14],cl
  40d493:	jo     0x40d50b
  40d495:	jp     0x40d4fe
  40d497:	jg     0x40d48c
  40d499:	or     ebx,DWORD PTR [edx+0x49986f66]
  40d49f:	xchg   edi,eax
  40d4a0:	aas    
  40d4a1:	xor    BYTE PTR [edi],ah
  40d4a3:	push   ds
  40d4a4:	inc    eax
  40d4a5:	pop    ss
  40d4a6:	dec    ebp
  40d4a7:	mov    bl,0x8d
  40d4a9:	mov    eax,0x2a1ce415
  40d4ae:	ins    DWORD PTR es:[edi],dx
  40d4af:	fcmovnb st,st(5)
  40d4b1:	outs   dx,DWORD PTR ds:[esi]
  40d4b2:	sub    eax,0x53a394ec
  40d4b7:	push   0xfb2aabe4
  40d4bc:	scas   eax,DWORD PTR es:[edi]
  40d4bd:	jp     0x40d4a5
  40d4bf:	arpl   WORD PTR [ecx-0x5d],ax
  40d4c2:	aad    0xd0
  40d4c4:	mov    edi,DWORD PTR [ecx+0x2a299360]
  40d4ca:	aad    0x8e
  40d4cc:	mov    ds,WORD PTR [edi]
  40d4ce:	or     bl,ah
  40d4d0:	inc    ecx
  40d4d1:	ret    
  40d4d2:	std    
  40d4d3:	cld    
  40d4d4:	adc    al,0x77
  40d4d6:	inc    ebp
  40d4d7:	xchg   esp,eax
  40d4d8:	cmp    BYTE PTR [ecx],ah
  40d4da:	rcr    ecx,0xf2
  40d4dd:	pop    edx
  40d4de:	popf   
  40d4df:	sbb    al,0xc8
  40d4e1:	iret   
  40d4e2:	int    0x5a
  40d4e4:	ds jne 0x40d4eb
  40d4e7:	out    0xd9,al
  40d4e9:	mov    BYTE PTR [edi-0x855807d],dh
  40d4ef:	fistp  WORD PTR [ecx+ebp*8-0x7a]
  40d4f3:	xchg   ecx,eax
  40d4f4:	int    0x7c
  40d4f6:	inc    DWORD PTR [esi-0xe]
  40d4f9:	mov    ah,0xea
  40d4fb:	jno    0x40d573
  40d4fd:	dec    edx
  40d4fe:	in     al,0xdc
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a815,0x42a825
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a789,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7ed,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a855,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	mov    ecx,0x9c1325b9
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x3878787e
  40d582:	pop    es
  40d583:	push   eax
  40d584:	aaa    
  40d585:	jle    0x40d550
  40d587:	adc    al,0x6f
  40d589:	adc    DWORD PTR [ebx-0x7ba92709],0x1c
  40d590:	jge    0x40d5ce
  40d592:	cmp    al,0x74
  40d594:	push   ebp
  40d595:	pop    esp
  40d596:	fcom   DWORD PTR [edi-0x2b41fb8e]
  40d59c:	mov    dh,0x7a
  40d59e:	adc    BYTE PTR [edi-0x62],cl
  40d5a1:	outs   dx,BYTE PTR ds:[esi]
  40d5a2:	out    dx,eax
  40d5a3:	jmp    0x861e:0x78105193
  40d5aa:	and    ebp,DWORD PTR [ebp+0x70fc9c9f]
  40d5b0:	leave  
  40d5b1:	sub    al,0x92
  40d5b3:	inc    esi
  40d5b4:	dec    esi
  40d5b5:	xchg   BYTE PTR [edi],al
  40d5b7:	ja     0x40d564
  40d5b9:	adc    eax,0xb7293bb5
  40d5be:	or     ch,BYTE PTR [ebp+0x74cd46e6]
  40d5c4:	jle    0x40d643
  40d5c6:	jl     0x40d591
  40d5c8:	icebp  
  40d5c9:	or     eax,0xaaf0609a
  40d5ce:	or     edx,ebp
  40d5d0:	push   edx
  40d5d2:	call   0x6212:0xd0e6796f
  40d5d9:	push   cs
  40d5da:	cmp    bh,BYTE PTR [esp+eiz*4+0x3010c50f]
  40d5e1:	and    esp,edi
  40d5e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5e4:	xor    BYTE PTR [edi],bh
  40d5e6:	or     BYTE PTR [si+0x29],bh
  40d5ea:	scas   al,BYTE PTR es:[edi]
  40d5eb:	fnsave [eax+edi*4+0x70a288dd]
  40d5f2:	into   
  40d5f3:	mov    al,0x53
  40d5f5:	sub    BYTE PTR [ebx+0x67822300],bh
  40d5fb:	add    esp,eax
  40d5fd:	xor    edi,DWORD PTR [ebx+0xf]
  40d600:	aam    0x20
  40d602:	(bad)  
  40d603:	jb     0x40d644
  40d605:	popa   
  40d606:	enter  0x29a0,0x39
  40d60a:	loopne 0x40d627
  40d60c:	in     eax,dx
  40d60d:	cmc    
  40d60e:	mov    cl,0xf7
  40d610:	or     ebp,DWORD PTR [edx+0x486c8138]
  40d616:	imul   esi,DWORD PTR [edx],0xffffffbc
  40d619:	cwde   
  40d61a:	div    BYTE PTR [eax-0x14]
  40d61d:	adc    esi,DWORD PTR [edx+0x5e]
  40d620:	cld    
  40d621:	push   edi
  40d622:	dec    edi
  40d623:	or     eax,0x7fcd338d
  40d628:	mov    ch,0xbd
  40d62a:	(bad)  
  40d62c:	add    BYTE PTR [esi],al
  40d62e:	mov    edi,0x65638b12
  40d633:	repnz int3 
  40d635:	push   edi
  40d636:	xchg   ebx,eax
  40d637:	mov    dl,0xf7
  40d639:	or     BYTE PTR [ebp-0x68],0x31
  40d63d:	test   BYTE PTR [ebp-0x3478dd35],ch
  40d643:	test   BYTE PTR [ebx-0x2747dc25],cl
  40d649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d64a:	push   0xc7c96b81
  40d64f:	or     eax,DWORD PTR [eax+0x2f]
  40d652:	or     eax,0x7d5dcea4
  40d657:	dec    esp
  40d658:	std    
  40d659:	pop    edi
  40d65a:	inc    ecx
  40d65b:	(bad)  
  40d65c:	fnsave [ecx-0x6b]
  40d65f:	int    0x6e
  40d661:	sbb    eax,0x11ea3efa
  40d666:	les    ecx,FWORD PTR [ebp-0x22]
  40d669:	mov    ebx,0xa4d43000
  40d66e:	dec    ecx
  40d66f:	nop
  40d670:	add    DWORD PTR [edi],0x17
  40d673:	cmp    eax,DWORD PTR [ecx]
  40d675:	ins    BYTE PTR es:[edi],dx
  40d676:	mov    al,ds:0xa951543d
  40d67b:	shl    BYTE PTR [edx],cl
  40d67d:	inc    eax
  40d67e:	out    dx,al
  40d67f:	sub    BYTE PTR [esi],ah
  40d681:	out    0xed,al
  40d683:	test   DWORD PTR [ebx+0x3a56e627],ecx
  40d689:	hlt    
  40d68a:	(bad)  
  40d68b:	adc    eax,esi
  40d68d:	rsm    
  40d68f:	(bad)  
  40d690:	mov    cl,0x4
  40d692:	mov    eax,ds:0x711a329c
  40d697:	outs   dx,BYTE PTR ds:[esi]
  40d698:	lods   al,BYTE PTR ds:[esi]
  40d699:	iret   
  40d69a:	pushf  
  40d69b:	test   eax,0x320b99c1
  40d6a0:	ja     0x40d6e2
  40d6a2:	mov    al,ds:0x306c41bd
  40d6a7:	retf   0x9e11
  40d6aa:	test   al,0xa7
  40d6ac:	call   0x4cbf:0x99d81cfa
  40d6b3:	cmpxchg DWORD PTR ss:[ebp+0x1],ebx
  40d6b8:	sahf   
  40d6b9:	fcom   QWORD PTR [ebp+0x51]
  40d6bc:	mov    esi,0xf338781e
  40d6c1:	and    ecx,DWORD PTR [ebx]
  40d6c3:	test   al,0xf
  40d6c5:	xchg   edx,eax
  40d6c6:	mov    ecx,0x7745e9e0
  40d6cb:	adc    ecx,DWORD PTR [edx]
  40d6cd:	test   al,0x2c
  40d6cf:	xchg   ch,dl
  40d6d1:	jle    0x40d661
  40d6d3:	aaa    
  40d6d4:	jns    0x40d6f7
  40d6d6:	adc    al,0xf
  40d6d8:	not    DWORD PTR [ebx]
  40d6da:	pop    edi
  40d6db:	jbe    0x40d69c
  40d6dd:	imul   eax,esp,0x18d0737b
  40d6e3:	jae    0x40d733
  40d6e5:	sbb    DWORD PTR [edi],eax
  40d6e7:	stos   BYTE PTR es:[edi],al
  40d6e8:	add    eax,0x67efc493
  40d6ed:	test   bh,0xd2
  40d6f0:	adc    DWORD PTR [ebp+0x326960fc],ebp
  40d6f6:	push   esp
  40d6f7:	sbb    al,0x7d
  40d6f9:	sub    dl,BYTE PTR [ebp+0x50fd422b]
  40d6ff:	pop    ebx
  40d700:	daa    
  40d701:	pop    ecx
  40d702:	mov    ecx,0x805b049f
  40d707:	sub    BYTE PTR [ecx],cl
  40d709:	fadd   DWORD PTR [ebx-0x2d]
  40d70c:	mov    ebx,eax
  40d70e:	pop    ss
  40d70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d710:	mov    ebx,0xfa4832a8
  40d715:	sub    edi,DWORD PTR [eax+ebx*1-0x5f2932e2]
  40d71c:	arpl   WORD PTR [edi+0x19e8cb64],ax
  40d722:	pcmpgtd mm2,QWORD PTR [ebx+0xd]
  40d726:	ret    0x6dfa
  40d729:	add    al,0x3
  40d72b:	push   ecx
  40d72c:	scas   eax,DWORD PTR es:[edi]
  40d72d:	push   es
  40d72e:	adc    esi,DWORD PTR [eax]
  40d730:	xchg   esi,eax
  40d731:	jp     0x40d72d
  40d733:	push   cs
  40d734:	xchg   ebx,eax
  40d735:	pop    ss
  40d736:	and    edi,DWORD PTR [ecx+0x7dc05a94]
  40d73c:	in     al,0x50
  40d73e:	test   BYTE PTR [ecx-0x45],dl
  40d741:	inc    ecx
  40d742:	lahf   
  40d743:	sub    DWORD PTR [edi-0x37],eax
  40d746:	sub    al,0x62
  40d748:	xchg   ch,bh
  40d74a:	fild   QWORD PTR [eax]
  40d74c:	imul   ebp,DWORD PTR [esp+ecx*1+0x436069ac],0x71706221
  40d757:	pop    ebp
  40d758:	mov    dl,0x5f
  40d75a:	push   0x11f7f4c9
  40d75f:	in     eax,0xef
  40d761:	cmp    eax,0xaffebeb8
  40d766:	ror    BYTE PTR [eax+0x511e82dc],0xd6
  40d76d:	pop    ecx
  40d76e:	dec    ecx
  40d76f:	push   esp
  40d770:	cmp    edx,DWORD PTR ds:0xc20e86e
  40d776:	(bad)  
  40d777:	dec    ebp
  40d778:	aad    0xd5
  40d77a:	adc    eax,0x17ef0b47
  40d77f:	test   al,0xf2
  40d781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d783:	inc    esp
  40d784:	pop    esi
  40d785:	mov    BYTE PTR ds:0x669f638b,0xd9
  40d78c:	push   ecx
  40d78d:	(bad)  
  40d78e:	sbb    eax,0x65d2e267
  40d793:	fcomip st,st(1)
  40d795:	fcom   DWORD PTR [edx-0x4d268c43]
  40d79b:	mov    DWORD PTR [esp+esi*4+0x6a],ecx
  40d79f:	out    dx,al
  40d7a0:	sbb    eax,0x2e1404d4
  40d7a5:	leave  
  40d7a6:	jb     0x40d780
  40d7a8:	adc    DWORD PTR gs:[eax+eiz*4],edx
  40d7ac:	cmp    eax,0x4c4ddb29
  40d7b1:	and    bh,dh
  40d7b3:	sbb    bl,dl
  40d7b5:	ret    
  40d7b6:	and    al,0x79
  40d7b8:	jbe    0x40d7d4
  40d7ba:	or     dh,BYTE PTR [eax]
  40d7bc:	cmp    edi,0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7dd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7e5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0x650de45d]
  40d7eb:	nop
  40d7ec:	ficomp WORD PTR [ecx-0x57]
  40d7ef:	js     0x40d869
  40d7f1:	xor    eax,0x78787e
  40d7f6:	cmp    al,0xe6
  40d7f8:	sbb    edx,edi
  40d7fa:	mov    esp,0xe306d58a
  40d7ff:	mov    ah,BYTE PTR [edi+0x48]
  40d802:	xchg   ch,bl
  40d804:	arpl   WORD PTR [esi+0x7e41ca23],sp
  40d80a:	scas   eax,DWORD PTR es:[edi]
  40d80b:	fisubr DWORD PTR [eax]
  40d80d:	stos   DWORD PTR es:[edi],eax
  40d80e:	stos   BYTE PTR es:[edi],al
  40d80f:	hlt    
  40d810:	in     eax,0x3a
  40d812:	lods   eax,DWORD PTR ds:[esi]
  40d813:	mov    esi,0xae29cc3c
  40d818:	mov    BYTE PTR [eax-0x50d62a58],dh
  40d81e:	cmc    
  40d81f:	jmp    0x7e84fa6c
  40d824:	sub    esi,ebx
  40d826:	push   ss
  40d827:	sbb    eax,0xb68402db
  40d82c:	lahf   
  40d82d:	jg     0x40d7b0
  40d82f:	push   edi
  40d830:	call   0x5b5d11f1
  40d835:	and    ebp,esi
  40d837:	js     0x40d881
  40d839:	sub    al,0x9c
  40d83b:	cwde   
  40d83c:	xor    dh,ch
  40d83e:	cs in  eax,dx
  40d840:	push   sp
  40d842:	push   esi
  40d843:	lea    ecx,[eax+ebp*2+0x3df226e2]
  40d84a:	add    ebp,ecx
  40d84c:	dec    ecx
  40d84d:	or     al,0x5c
  40d84f:	pop    ds
  40d850:	jnp    0x40d891
  40d852:	daa    
  40d853:	dec    ecx
  40d854:	pop    ss
  40d855:	retf   
  40d856:	cs jno 0x40d899
  40d859:	xchg   esp,eax
  40d85a:	sub    bl,BYTE PTR [eax+0x43]
  40d85d:	push   0x6
  40d85f:	inc    ecx
  40d860:	mov    cl,bh
  40d862:	xchg   edi,eax
  40d863:	mov    eax,ds:0x48b50773
  40d868:	and    al,0x1
  40d86a:	inc    edx
  40d86b:	push   edx
  40d86c:	sbb    eax,DWORD PTR [edi+0x71]
  40d86f:	xor    DWORD PTR [esi],edx
  40d871:	mov    dh,BYTE PTR [eax]
  40d873:	xchg   esp,eax
  40d874:	test   eax,0x73c8b227
  40d879:	xor    ebx,DWORD PTR [ecx]
  40d87b:	jle    0x40d8ac
  40d87d:	call   0xcdec:0x565d0b17
  40d884:	mov    al,ds:0x997513c7
  40d889:	inc    esi
  40d88a:	jns    0x40d8c1
  40d88c:	dec    DWORD PTR [ebx+0x408893c0]
  40d892:	add    BYTE PTR [edi+ebx*2+0x71],bh
  40d896:	ins    BYTE PTR es:[edi],dx
  40d897:	popa   
  40d898:	cmp    esi,ecx
  40d89a:	or     al,0xb
  40d89c:	int    0x3
  40d89e:	xchg   ebp,eax
  40d89f:	jnp    0x40d8da
  40d8a1:	dec    ebx
  40d8a2:	imul   ebx,DWORD PTR [esi-0x20],0x8931d32b
  40d8a9:	mov    DWORD PTR [eax+0x3],ecx
  40d8ac:	imul   edx,DWORD PTR [ecx-0x26c2bdf9],0x6405b9c0
  40d8b6:	fwait
  40d8b7:	push   ecx
  40d8b8:	mov    edx,esp
  40d8ba:	cmp    DWORD PTR [edx+edx*1],0x13839a66
  40d8c1:	cld    
  40d8c2:	push   ebp
  40d8c3:	in     al,dx
  40d8c4:	cmp    dl,bl
  40d8c6:	dec    eax
  40d8c7:	loope  0x40d855
  40d8c9:	repnz enter 0xdd59,0x2f
  40d8ce:	sar    BYTE PTR [ecx-0x66],1
  40d8d1:	dec    edi
  40d8d2:	fcmovb st,st(4)
  40d8d4:	test   BYTE PTR [ebp+0x656a49a7],bh
  40d8da:	aas    
  40d8db:	nop
  40d8dc:	ror    DWORD PTR [edi-0x13eb5ba1],1
  40d8e2:	sub    eax,0x77dc4da9
  40d8e7:	popf   
  40d8e8:	hlt    
  40d8e9:	test   eax,0x83316984
  40d8ee:	sub    eax,0x83dbb
  40d8f3:	in     al,0xa8
  40d8f5:	add    eax,edi
  40d8f7:	pop    eax
  40d8f8:	ds in  al,dx
  40d8fa:	cmp    BYTE PTR [edi+0x3a586e4e],0xe7
  40d901:	or     ah,BYTE PTR [eax+0x58]
  40d904:	add    BYTE PTR [edi+0x28e3b4d2],al
  40d90a:	xor    DWORD PTR [ecx],ecx
  40d90c:	xor    DWORD PTR [esi+0x4843dfff],ecx
  40d912:	add    edx,edx
  40d914:	dec    ecx
  40d915:	out    dx,al
  40d916:	dec    ebx
  40d917:	and    edi,DWORD PTR [eax]
  40d919:	or     eax,0x453ff421
  40d91e:	add    bh,cl
  40d920:	lds    esp,FWORD PTR [edx+ecx*8+0x14766214]
  40d927:	xchg   ebx,eax
  40d928:	ret    0x222b
  40d92b:	sub    BYTE PTR [edx-0x47],ch
  40d92e:	sub    bl,BYTE PTR [ecx+0x70]
  40d931:	inc    ebp
  40d932:	or     DWORD PTR [ebx+0x5f],0x30ab771b
  40d939:	pushf  
  40d93a:	mov    cl,0xa5
  40d93c:	xor    eax,0xdb602daa
  40d941:	outs   dx,DWORD PTR ds:[esi]
  40d942:	adc    cl,BYTE PTR [edx+0x1]
  40d945:	pop    ecx
  40d946:	aaa    
  40d947:	test   al,0xea
  40d949:	loope  0x40d9c0
  40d94b:	(bad)  
  40d94c:	shl    dl,0xc
  40d94f:	push   eax
  40d950:	in     al,0xac
  40d952:	mov    dh,0x3f
  40d954:	and    DWORD PTR es:[ebx+0x77a26ec4],esi
  40d95b:	mov    ch,0x6f
  40d95d:	in     eax,dx
  40d95e:	cmp    ebx,ebp
  40d960:	cwde   
  40d961:	jl     0x40d9d5
  40d963:	out    dx,eax
  40d964:	adc    al,0x70
  40d966:	mov    BYTE PTR [edi+0x5f6f4dd7],0x9a
  40d96d:	and    eax,0xfcde9f55
  40d972:	xchg   DWORD PTR [ebx+0x61],ecx
  40d975:	cmc    
  40d976:	aaa    
  40d977:	jb     0x40d9b2
  40d979:	lds    edx,FWORD PTR [ecx-0x17]
  40d97c:	push   eax
  40d97d:	clc    
  40d97e:	neg    DWORD PTR [edx-0x4894c457]
  40d984:	adc    DWORD PTR [eax+0x276d4779],edx
  40d98a:	addr16 cdq 
  40d98c:	jle    0x40d9c5
  40d98e:	rcr    edi,cl
  40d990:	in     eax,dx
  40d991:	inc    edx
  40d992:	mov    WORD PTR [eax],ds
  40d994:	dec    ebp
  40d995:	or     bl,dh
  40d997:	jmp    0x2a956c04
  40d99c:	call   0xaf1c:0x634c4d32
  40d9a3:	data16 outs dx,BYTE PTR ds:[esi]
  40d9a5:	mov    ch,BYTE PTR [ebx-0x16a05bb4]
  40d9ab:	pop    ds
  40d9ac:	mov    BYTE PTR [edi+esi*2],bl
  40d9af:	mov    ah,0x5a
  40d9b1:	sbb    BYTE PTR [ebx],ah
  40d9b3:	cmp    DWORD PTR [edx+ebp*1],ebx
  40d9b6:	pop    edx
  40d9b7:	in     al,0x59
  40d9b9:	call   0x4436ae5a
  40d9be:	scas   al,BYTE PTR es:[edi]
  40d9bf:	sbb    eax,0x2c3da8a5
  40d9c4:	xlat   BYTE PTR ds:[ebx]
  40d9c5:	jns    0x40d98f
  40d9c7:	in     al,0xc9
  40d9c9:	dec    eax
  40d9ca:	xchg   esp,eax
  40d9cb:	mov    al,0x3b
  40d9cd:	jl     0x40da3c
  40d9cf:	dec    ecx
  40d9d0:	pop    ds
  40d9d1:	xchg   esp,eax
  40d9d2:	add    eax,0x966eb583
  40d9d7:	rcl    DWORD PTR [eax+0xd],0xbf
  40d9db:	scas   al,BYTE PTR es:[edi]
  40d9dc:	stos   BYTE PTR es:[edi],al
  40d9dd:	in     al,dx
  40d9de:	mov    ch,0x2c
  40d9e0:	pop    ecx
  40d9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e2:	int    0x99
  40d9e4:	push   edx
  40d9e5:	mov    eax,0x143cb5fd
  40d9ea:	hlt    
  40d9eb:	adc    esi,DWORD PTR ds:0xcc0c718a
  40d9f1:	mov    WORD PTR [ecx-0x48],es
  40d9f4:	daa    
  40d9f5:	cmp    esi,DWORD PTR [eax]
  40d9f7:	hlt    
  40d9f8:	push   edi
  40d9f9:	hlt    
  40d9fa:	outs   dx,DWORD PTR ds:[esi]
  40d9fb:	pusha  
  40d9fc:	mov    edx,0xdc963ad7
  40da01:	and    cl,BYTE PTR [edx+ebx*4+0x7d6cdfac]
  40da08:	retf   0x9743
  40da0b:	lea    ebx,[edi]
  40da0d:	stc    
  40da0e:	cmc    
  40da0f:	fild   WORD PTR [edx]
  40da11:	pop    ecx
  40da12:	cli    
  40da13:	jne    0x40d9ea
  40da15:	out    dx,eax
  40da16:	popa   
  40da17:	imul   eax,ebp,0x36386982
  40da1d:	mov    ds:0x5fb8bd76,al
  40da22:	and    al,ah
  40da24:	in     al,dx
  40da25:	push   0x51d2e18f
  40da2a:	cmp    eax,0x54ad3061
  40da2f:	ja     0x40d9b4
  40da31:	or     BYTE PTR gs:[eax],al
  40da34:	mov    eax,ds:0x42a851
  40da39:	sbb    eax,DWORD PTR ds:0x42a829
  40da3f:	mov    ds:0x42a851,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a811,0x42a7dd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a821,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a791,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	or     al,0x65
  40da7f:	jo     0x40da5c
  40da81:	push   ss
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0xa878787e
  40da8a:	test   al,0xa1
  40da8c:	jmp    0x40daae
  40da8e:	call   0x495f:0x61e4494
  40da95:	sbb    DWORD PTR [eax-0x19b4a5ab],ebp
  40da9b:	cmc    
  40da9c:	aad    0xab
  40da9e:	(bad)  
  40da9f:	adc    eax,0xc8e368fc
  40daa4:	add    al,cl
  40daa6:	push   es
  40daa7:	mov    ds:0xb4565325,eax
  40daac:	loop   0x40db0a
  40daae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daaf:	push   ebp
  40dab0:	push   0x3074bd97
  40dab5:	inc    ebx
  40dab6:	xchg   ecx,eax
  40dab7:	mov    al,BYTE PTR [edi+0x48]
  40daba:	xor    al,0xbe
  40dabc:	pop    ds
  40dabd:	jecxz  0x40db08
  40dabf:	and    BYTE PTR [ecx],0xee
  40dac2:	pop    ecx
  40dac3:	cmp    ecx,esi
  40dac5:	push   ds
  40dac6:	jmp    0x40dae0
  40dac8:	jmp    0x5cbbf04a
  40dacd:	in     al,dx
  40dace:	pop    eax
  40dacf:	aad    0x5a
  40dad1:	pop    edx
  40dad2:	aad    0xd8
  40dad4:	fdiv   DWORD PTR [eax]
  40dad6:	xlat   BYTE PTR ds:[ebx]
  40dad7:	adc    edx,DWORD PTR [edx+0x70362cce]
  40dadd:	fisttp QWORD PTR [ecx-0x271e65ba]
  40dae3:	out    0x55,al
  40dae5:	cmp    eax,0x61e4983d
  40daea:	fldcw  WORD PTR [edx]
  40daec:	es retf 0x3741
  40daf0:	mov    al,0xbb
  40daf2:	cmp    ah,BYTE PTR [edx+0x1b53bdba]
  40daf8:	mov    DWORD PTR [eax-0x258db5ca],ebp
  40dafe:	jnp    0x40db6b
  40db00:	jns    0x40daa4
  40db02:	push   esp
  40db03:	popf   
  40db04:	out    dx,al
  40db05:	pop    es
  40db06:	adc    BYTE PTR [edx+0x12fbaf25],bl
  40db0c:	and    eax,0xb6912efe
  40db11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db12:	sbb    edi,DWORD PTR [eax]
  40db14:	out    dx,al
  40db15:	cli    
  40db16:	sbb    BYTE PTR [ecx+0x5fe42311],bh
  40db1c:	enter  0xac3c,0x71
  40db20:	cmp    eax,0x46282865
  40db25:	mov    ds:0xc95c1e4b,al
  40db2a:	cmp    eax,0x66290868
  40db30:	aaa    
  40db31:	push   edx
  40db32:	mov    dl,0x12
  40db34:	rcr    BYTE PTR [ebp-0x15],cl
  40db37:	pop    ecx
  40db38:	inc    ebx
  40db39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db3a:	in     eax,0x3d
  40db3c:	cmc    
  40db3d:	dec    edi
  40db3e:	(bad)  [ebp-0x66428c7e]
  40db44:	test   BYTE PTR [esi-0x62],bl
  40db47:	mov    eax,ds:0x200c4e2d
  40db4c:	xor    eax,0x3faac6e0
  40db51:	out    dx,al
  40db52:	out    0xe7,eax
  40db54:	pop    ebx
  40db55:	fldcw  WORD PTR [ecx+0x5787f68f]
  40db5b:	sbb    edi,DWORD PTR [ebx-0x7a]
  40db5e:	stos   DWORD PTR es:[edi],eax
  40db5f:	xor    DWORD PTR [eax+0x77],ebp
  40db62:	and    ebp,ebp
  40db64:	test   al,0x80
  40db66:	or     BYTE PTR [edi],ah
  40db68:	cdq    
  40db69:	sub    al,BYTE PTR [ecx+0x3d8c73db]
  40db6f:	lahf   
  40db70:	fstp   QWORD PTR [edi]
  40db72:	jl     0x40db05
  40db74:	sub    bh,dh
  40db76:	or     esi,esi
  40db78:	pop    eax
  40db79:	ins    BYTE PTR es:[edi],dx
  40db7a:	mov    WORD PTR [eax+0x14],es
  40db7d:	sahf   
  40db7e:	scas   al,BYTE PTR es:[edi]
  40db7f:	hlt    
  40db80:	add    eax,0x88757cc8
  40db85:	mov    ds:0xb204968e,eax
  40db8a:	inc    edi
  40db8b:	mov    ebp,0x1e5a9fcc
  40db90:	mov    eax,0x30a595c5
  40db95:	xor    al,0x1a
  40db97:	in     al,0x9b
  40db99:	call   DWORD PTR [esi+0x76]
  40db9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9d:	pop    ds
  40db9e:	adc    eax,0xa0070eb8
  40dba3:	adc    eax,0x8191b7be
  40dba8:	and    BYTE PTR [eax-0x55],ah
  40dbab:	fmulp  st(5),st
  40dbad:	inc    ebp
  40dbae:	scas   al,BYTE PTR es:[edi]
  40dbaf:	push   eax
  40dbb0:	fstp   TBYTE PTR [ebx+0xe6d695a]
  40dbb6:	nop
  40dbb7:	mov    ds:0x39ca20ee,eax
  40dbbc:	fs push cs
  40dbbe:	ret    0xf7df
  40dbc1:	pop    ecx
  40dbc2:	push   cs
  40dbc3:	rol    bh,0xa5
  40dbc6:	lods   al,BYTE PTR ds:[esi]
  40dbc7:	fadd   DWORD PTR [esi+0x3b]
  40dbca:	pmaxsw mm0,QWORD PTR [eax+0x30c1430a]
  40dbd1:	cmp    ebx,esp
  40dbd3:	xor    al,0xb5
  40dbd5:	mov    ds:0x81f3eba1,eax
  40dbda:	fisubr DWORD PTR [ecx+0x4d]
  40dbdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbde:	push   0x4b
  40dbe0:	mov    cs:0x1dd6ea51,al
  40dbe6:	ins    DWORD PTR es:[edi],dx
  40dbe7:	xor    cl,BYTE PTR [edi]
  40dbe9:	jge    0x40dbc1
  40dbeb:	repnz xor eax,0xc616e2a2
  40dbf1:	mov    esp,0x914161ea
  40dbf6:	push   ss
  40dbf7:	push   edx
  40dbf8:	test   DWORD PTR [edx],ebx
  40dbfa:	mov    BYTE PTR [ecx+0x42],ch
  40dbfd:	jne    0x40dbf0
  40dbff:	push   ss
  40dc00:	clc    
  40dc01:	cmp    DWORD PTR [eax],ebp
  40dc03:	sbb    eax,0x15bdf719
  40dc08:	dec    esp
  40dc09:	ds cmp eax,0x82a8ba0
  40dc0f:	(bad)  
  40dc10:	pop    eax
  40dc11:	pop    ss
  40dc12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc13:	call   0xeac2:0xcaa4d2ca
  40dc1a:	jb     0x40dbb8
  40dc1c:	cmp    al,0x47
  40dc1e:	add    ch,ah
  40dc20:	imul   DWORD PTR [ecx]
  40dc22:	dec    edx
  40dc23:	pushf  
  40dc24:	jae    0x40dc31
  40dc26:	jp     0x40dc34
  40dc28:	sbb    dl,BYTE PTR [ecx+0x49]
  40dc2b:	fiadd  WORD PTR [esi]
  40dc2d:	sahf   
  40dc2e:	ins    DWORD PTR es:[edi],dx
  40dc2f:	shr    BYTE PTR [ebx-0x4a2958ee],1
  40dc35:	pop    ds
  40dc36:	sub    bl,BYTE PTR [ebx-0x77]
  40dc39:	add    al,0xb8
  40dc3b:	sub    dl,ch
  40dc3d:	inc    esi
  40dc3e:	imul   cl
  40dc40:	rol    BYTE PTR [edi-0xa],cl
  40dc43:	pop    ds
  40dc44:	xchg   ebp,eax
  40dc46:	mov    cl,0x3b
  40dc48:	mov    ebx,?
  40dc4a:	cld    
  40dc4b:	push   es
  40dc4c:	je     0x40dca2
  40dc4e:	popa   
  40dc4f:	fnstenv [esi-0x2c]
  40dc52:	cmp    DWORD PTR [eax-0x44],0x46972467
  40dc59:	addr16 test eax,0x13fe94bd
  40dc5f:	(bad)  
  40dc60:	dec    edx
  40dc61:	mov    WORD PTR [ebx],gs
  40dc63:	inc    eax
  40dc64:	nop
  40dc65:	mov    edx,0x7de127f2
  40dc6a:	mov    dh,0x30
  40dc6c:	in     al,dx
  40dc6d:	adc    al,0xe7
  40dc6f:	and    bl,BYTE PTR [ecx]
  40dc71:	cmp    ch,ah
  40dc73:	and    eax,DWORD PTR [ebx]
  40dc75:	mov    esp,0xc63d13aa
  40dc7a:	xor    DWORD PTR [edi],ebx
  40dc7c:	fnstcw WORD PTR [ebp-0x233fe482]
  40dc82:	adc    esi,0x318479d0
  40dc88:	push   esi
  40dc89:	and    eax,esi
  40dc8b:	pusha  
  40dc8c:	and    al,0x6f
  40dc8e:	inc    ebp
  40dc8f:	scas   al,BYTE PTR es:[edi]
  40dc90:	jg     0x40dc77
  40dc92:	aas    
  40dc93:	sub    BYTE PTR [ebp+0x50e0c931],dh
  40dc99:	push   esi
  40dc9a:	inc    edi
  40dc9b:	jns    0x40dc3f
  40dc9d:	jmp    0xe8f64842
  40dca2:	pop    esi
  40dca3:	pop    esi
  40dca4:	arpl   WORD PTR [edx+0x2e],bp
  40dca7:	out    0xe5,eax
  40dca9:	scas   eax,DWORD PTR es:[edi]
  40dcaa:	bound  eax,QWORD PTR [ecx]
  40dcac:	lods   eax,DWORD PTR ds:[esi]
  40dcad:	inc    esp
  40dcae:	sbb    edx,0x75
  40dcb1:	jae    0x40dca9
  40dcb3:	or     BYTE PTR [edi-0x34144150],0xef
  40dcba:	jmp    0xdbcf:0x6ae8226
  40dcc1:	jo     0x40dc6a
  40dcc3:	pop    edi
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a8a1,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a77d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7d5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a851,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a85d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7d9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7d1
  40dd3d:	and    DWORD PTR ds:0x42a7a1,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a891,0x42a89d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	jmp    0xd4298b7f
  40dd68:	lods   al,BYTE PTR ds:[esi]
  40dd69:	js     0x40dde3
  40dd6b:	xor    eax,0x3678787e
  40dd70:	out    0x56,eax
  40dd72:	sub    eax,0x35427234
  40dd77:	aad    0xeb
  40dd79:	ds lock jge 0x40ddf3
  40dd7d:	jo     0x40dd14
  40dd7f:	int3   
  40dd80:	dec    esi
  40dd81:	and    ebp,DWORD PTR [edx+0x7186c447]
  40dd87:	(bad)  
  40dd88:	pop    edi
  40dd89:	add    al,0xcd
  40dd8b:	enter  0x65e4,0xe5
  40dd8f:	outs   dx,DWORD PTR ds:[esi]
  40dd90:	xor    ecx,DWORD PTR [edi+0x56c00e97]
  40dd96:	cmp    ah,BYTE PTR [ebp-0x53]
  40dd99:	or     ebx,DWORD PTR [edi+edx*8]
  40dd9c:	stos   DWORD PTR es:[edi],eax
  40dd9d:	shl    DWORD PTR [ebx-0x7c],cl
  40dda0:	jp     0x40ddb3
  40dda2:	scas   eax,DWORD PTR es:[edi]
  40dda3:	jnp    0x40dd9a
  40dda5:	and    eax,0xf9f1716d
  40ddaa:	cld    
  40ddab:	jmp    0x40dda0
  40ddad:	shl    DWORD PTR [edi],1
  40ddaf:	sub    dh,cl
  40ddb1:	int3   
  40ddb2:	xlat   BYTE PTR ds:[ebx]
  40ddb3:	test   ebp,esi
  40ddb5:	loop   0x40dd97
  40ddb7:	xchg   edx,eax
  40ddb8:	mov    bl,0x6d
  40ddba:	inc    eax
  40ddbb:	jp     0x40dd61
  40ddbd:	jo     0x40de24
  40ddbf:	lds    eax,FWORD PTR [ebx]
  40ddc1:	add    eax,0x486ce60a
  40ddc6:	sbb    DWORD PTR [eax-0x6dfe68c7],edi
  40ddcc:	rcr    DWORD PTR [eax-0x70c0f0b0],0x46
  40ddd3:	mov    al,0x5f
  40ddd5:	std    
  40ddd6:	or     edx,DWORD PTR [ebx+0x1c67dadd]
  40dddc:	dec    edi
  40dddd:	xor    al,0x63
  40dddf:	aas    
  40dde0:	idiv   BYTE PTR [edi-0x36f2045c]
  40dde6:	pop    eax
  40dde7:	or     BYTE PTR [edx],ah
  40dde9:	pop    edi
  40ddea:	mov    DWORD PTR [ebx-0x71533a32],ecx
  40ddf0:	enter  0x9ba0,0x11
  40ddf4:	pop    esi
  40ddf5:	mov    edi,0x457cefa7
  40ddfa:	mov    ds:0x20bcda16,al
  40ddff:	xor    bh,BYTE PTR [ebx-0x76]
  40de02:	mov    ds:0xb993a9a8,eax
  40de07:	inc    esp
  40de08:	nop
  40de09:	lock mov ch,0x53
  40de0c:	fisttp QWORD PTR [esi]
  40de0f:	out    dx,eax
  40de10:	retf   
  40de11:	test   esp,esi
  40de13:	and    al,0x67
  40de15:	mov    eax,ds:0xab28b9c4
  40de1a:	or     bl,BYTE PTR ds:0x2147a7e0
  40de20:	test   eax,0xe95e75f5
  40de25:	hlt    
  40de26:	es popa 
  40de28:	ret    
  40de29:	push   ebx
  40de2a:	ja     0x40ddb4
  40de2c:	(bad)  
  40de2d:	push   edx
  40de2e:	pop    ebx
  40de2f:	aaa    
  40de30:	add    esp,DWORD PTR [ecx*2-0x7f3fb63c]
  40de37:	adc    al,0x59
  40de39:	or     al,0xdf
  40de3b:	scas   al,BYTE PTR es:[edi]
  40de3c:	mov    eax,DWORD PTR [ecx+edi*4+0x54]
  40de40:	mov    BYTE PTR [ebx-0x44],cl
  40de43:	(bad)  
  40de44:	sub    eax,ebx
  40de46:	inc    edi
  40de47:	hlt    
  40de48:	pop    es
  40de49:	cmp    eax,0xe39072b0
  40de4e:	sub    eax,0xa665a2d8
  40de53:	xchg   ebx,eax
  40de54:	xor    BYTE PTR [esi],0x63
  40de57:	in     eax,dx
  40de58:	shl    BYTE PTR [ebx+0x1a0ba80a],1
  40de5e:	xor    DWORD PTR [ebx-0x759d3ca],0xffffff87
  40de65:	fcomp  QWORD PTR [edi-0x7d]
  40de68:	das    
  40de69:	(bad)  
  40de6a:	bound  esi,QWORD PTR gs:[ebx+0x62]
  40de6e:	iret   
  40de6f:	and    bl,BYTE PTR [ebx]
  40de71:	add    ch,al
  40de73:	mov    ?,esp
  40de75:	cmp    BYTE PTR [ebx+0x5341624e],bl
  40de7b:	jmp    0x40ddfe
  40de7d:	loopne 0x40de79
  40de7f:	stos   DWORD PTR es:[edi],eax
  40de80:	mov    al,0xac
  40de82:	ret    
  40de83:	ds das 
  40de85:	inc    edi
  40de86:	in     al,0x24
  40de88:	nop
  40de89:	adc    al,0xe0
  40de8b:	dec    eax
  40de8c:	mul    DWORD PTR [ecx-0x3c]
  40de8f:	test   BYTE PTR [eax+0x8],dh
  40de92:	scas   eax,DWORD PTR es:[edi]
  40de93:	fdivr  QWORD PTR [eax+0x42756e15]
  40de99:	(bad)  
  40de9b:	mov    ds:0x59ad2884,eax
  40dea0:	loop   0x40deaa
  40dea2:	jmp    0x93a1:0xa751722
  40dea9:	and    DWORD PTR [edx-0x41b98572],edi
  40deaf:	mov    DWORD PTR [edi+0x43],esp
  40deb2:	lock scas al,BYTE PTR es:[edi]
  40deb4:	xor    dl,ch
  40deb6:	pop    DWORD PTR [esi-0x45b9841d]
  40debc:	nop
  40debd:	inc    eax
  40debe:	xchg   esi,eax
  40debf:	inc    ebx
  40dec0:	scas   eax,DWORD PTR es:[edi]
  40dec1:	mov    edi,0xa56e3020
  40dec6:	inc    ebx
  40dec7:	into   
  40dec8:	int    0x65
  40deca:	jle    0x40deb2
  40decc:	pusha  
  40decd:	mov    eax,0xdf7c3f2f
  40ded2:	jp     0x40de7d
  40ded4:	out    dx,al
  40ded5:	push   ebx
  40ded6:	sub    al,0x31
  40ded8:	xchg   edx,eax
  40ded9:	sti    
  40deda:	dec    esi
  40dedb:	out    dx,al
  40dedc:	retf   0x233b
  40dedf:	rcr    DWORD PTR [esp+0x7c],1
  40dee3:	mov    edi,0x16c406bc
  40dee8:	jl     0x40dea0
  40deea:	in     eax,dx
  40deeb:	mov    edx,esi
  40deed:	xor    edx,DWORD PTR ds:0xa4d6426a
  40def3:	xchg   DWORD PTR [ebx-0x69ad3428],eax
  40def9:	fnstsw WORD PTR ds:0xbbf36680
  40deff:	call   0xab94dec0
  40df04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df05:	jne    0x40dea3
  40df07:	push   0xc564bc9b
  40df0c:	(bad)  
  40df0d:	out    0x6c,eax
  40df0f:	addr16 imul edx,esi,0xdb908608
  40df16:	mov    ebp,0x21531fd5
  40df1b:	mov    dl,0xa2
  40df1d:	out    dx,eax
  40df1e:	repnz pop esp
  40df20:	daa    
  40df21:	mov    ebp,0xcc30824e
  40df26:	rol    DWORD PTR [ecx+0x21],1
  40df29:	(bad)  
  40df2b:	retf   
  40df2c:	fwait
  40df2d:	(bad)  
  40df2e:	xchg   ecx,eax
  40df2f:	inc    esi
  40df30:	mov    esi,0xb2b104dc
  40df35:	cmp    dh,BYTE PTR [eax]
  40df37:	outs   dx,DWORD PTR ds:[esi]
  40df38:	js     0x40df66
  40df3a:	clc    
  40df3b:	inc    ecx
  40df3c:	popa   
  40df3d:	jecxz  0x40dfb5
  40df3f:	pop    eax
  40df40:	add    DWORD PTR [esi+0x4023e0a],ecx
  40df46:	shr    BYTE PTR [ecx+esi*1],1
  40df49:	adc    al,0x4
  40df4b:	dec    eax
  40df4c:	mov    ch,0x47
  40df4e:	int    0xcd
  40df50:	xchg   ebp,eax
  40df51:	pop    ss
  40df52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df53:	leave  
  40df54:	shr    BYTE PTR ds:0x48691de6,0xc8
  40df5b:	mov    BYTE PTR [ebx+0x34401e77],ch
  40df61:	sub    eax,0xbe9cead2
  40df66:	out    0x0,al
  40df68:	xor    dl,dh
  40df6a:	ins    DWORD PTR es:[edi],dx
  40df6b:	push   ecx
  40df6c:	push   ss
  40df6d:	add    ebp,DWORD PTR [edi+eiz*8]
  40df70:	sub    al,0xf0
  40df72:	mov    esi,DWORD PTR [ecx-0x35255fc1]
  40df78:	and    DWORD PTR [ebp+eax*1+0x35],eax
  40df7c:	ret    
  40df7d:	pop    ebx
  40df7e:	add    esp,0x4c51e3a9
  40df84:	lock xor al,0x8d
  40df87:	mov    WORD PTR [ecx+0x6848492],?
  40df8d:	inc    esi
  40df8e:	repnz les ebp,FWORD PTR ds:0xb964f087
  40df95:	fld    DWORD PTR [eax]
  40df97:	jbe    0x40df98
  40df99:	sub    al,0xee
  40df9b:	int    0xec
  40df9d:	add    BYTE PTR [eax],bh
  40df9f:	enter  0xa8cb,0x26
  40dfa3:	(bad)  
  40dfa4:	in     al,dx
  40dfa5:	in     al,dx
  40dfa6:	add    eax,0x3b0c1e3
  40dfab:	ret    
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a859
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x7240413a],1
  40dfde:	or     esp,DWORD PTR ds:0x78b288be
  40dfe4:	js     0x40e01b
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40e009
  40dfea:	push   edi
  40dfeb:	sub    ch,bl
  40dfed:	mov    ebp,0x8447bd3c
  40dff2:	(bad)  
  40dff3:	sti    
  40dff4:	inc    esp
  40dff5:	retf   
  40dff6:	jbe    0x40e045
  40dff8:	shl    DWORD PTR [eax-0x71],1
  40dffb:	inc    ecx
  40dffc:	loopne 0x40dfcc
  40dffe:	mov    esp,0xb8abadad
  40e003:	or     BYTE PTR [eax+0x18],0x2b
  40e007:	sub    al,BYTE PTR [eax]
  40e009:	xor    DWORD PTR [ebx-0x47b4e35b],0xc8736b6e
  40e013:	test   al,0x42
  40e015:	test   eax,0x72ca6f8f
  40e01a:	push   eax
  40e01b:	leave  
  40e01c:	xor    ebx,DWORD PTR [ebx-0x51f8a599]
  40e022:	rol    BYTE PTR [edx+0x6c],cl
  40e025:	scas   al,BYTE PTR es:[edi]
  40e026:	xchg   esi,ebp
  40e028:	ficomp DWORD PTR [edi-0xa6c6398]
  40e02e:	enter  0xeef2,0xd9
  40e032:	xor    al,0x66
  40e034:	jne    0x40e0b5
  40e036:	push   cs
  40e037:	cmp    BYTE PTR [ecx+0x59],bh
  40e03a:	add    eax,0x2261ba52
  40e03f:	push   0x8745486c
  40e044:	cwde   
  40e045:	clc    
  40e046:	jg     0x40e01b
  40e048:	pop    ss
  40e049:	xchg   ebx,eax
  40e04a:	clc    
  40e04b:	out    dx,al
  40e04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e04d:	dec    ebx
  40e04e:	mov    edx,0xecad7175
  40e053:	inc    ebx
  40e054:	scas   eax,DWORD PTR es:[edi]
  40e055:	mov    ah,0x8f
  40e057:	add    ebp,0xfffffff4
  40e05a:	loop   0x40e096
  40e05c:	jmp    0x40e0d8
  40e05e:	and    al,BYTE PTR [ebx+0x70dce00]
  40e064:	fsubr  DWORD PTR [ebp-0x62]
  40e067:	mov    edi,0xfefbbc19
  40e06c:	sbb    eax,0x12cce4f5
  40e071:	mov    ah,0xa4
  40e073:	adc    edi,eax
  40e075:	outs   dx,DWORD PTR ds:[esi]
  40e076:	call   0x547c:0x670d6827
  40e07d:	xor    DWORD PTR [edi],esi
  40e07f:	fs jae 0x40e03d
  40e082:	outs   dx,BYTE PTR ds:[esi]
  40e083:	jecxz  0x40e0c2
  40e085:	icebp  
  40e086:	pop    ecx
  40e087:	sub    BYTE PTR [edi-0x64dd427c],dh
  40e08d:	dec    eax
  40e08e:	sbb    edi,ebx
  40e090:	adc    ah,BYTE PTR cs:[edx+eax*8-0x6d50866e]
  40e098:	mov    ch,0x21
  40e09a:	pop    ds
  40e09b:	push   ebx
  40e09c:	sub    ebp,DWORD PTR [eax]
  40e09e:	pop    ecx
  40e09f:	call   FWORD PTR [eax+0x59]
  40e0a2:	sbb    al,0xed
  40e0a4:	loope  0x40e0c3
  40e0a6:	(bad)  
  40e0a7:	mov    esp,0xfd5331cb
  40e0ac:	lds    edx,FWORD PTR [ecx+eax*2+0x3fdf7aff]
  40e0b3:	or     eax,0x819ffce8
  40e0b8:	cmp    esi,ecx
  40e0ba:	mov    bh,0x34
  40e0bc:	mov    ecx,0x5773f8ad
  40e0c1:	pop    ebx
  40e0c2:	pop    eax
  40e0c3:	mov    cl,0x4f
  40e0c5:	dec    edi
  40e0c6:	out    dx,eax
  40e0c7:	dec    edx
  40e0c8:	push   ds
  40e0c9:	mov    esi,0xcf3fb8db
  40e0ce:	xor    edx,DWORD PTR [esi+ebx*4]
  40e0d1:	stc    
  40e0d2:	mov    esp,0x970d7926
  40e0d7:	xor    eax,0x5dafc641
  40e0dc:	cmp    al,0x17
  40e0de:	aam    0x59
  40e0e0:	sub    eax,DWORD PTR [eax]
  40e0e2:	xchg   ecx,eax
  40e0e3:	add    al,BYTE PTR [ecx+0x11ff4ff9]
  40e0e9:	std    
  40e0ea:	xchg   esp,eax
  40e0eb:	cli    
  40e0ec:	ror    ecx,1
  40e0ee:	jmp    0x40e0c9
  40e0f0:	stos   BYTE PTR es:[edi],al
  40e0f1:	out    0xf7,al
  40e0f3:	xchg   ebp,eax
  40e0f4:	hlt    
  40e0f5:	outs   dx,DWORD PTR ds:[esi]
  40e0f6:	loopne 0x40e106
  40e0f8:	enter  0x9586,0xb0
  40e0fc:	test   eax,0x6bd138a
  40e101:	lds    esi,FWORD PTR ds:0x46ab9b77
  40e107:	(bad)
  40e10a:	mov    esi,0x2b70cf2
  40e10f:	int    0x3f
  40e111:	into   
  40e112:	xor    al,0x37
  40e114:	and    ebx,DWORD PTR [eax+ebp*8]
  40e117:	dec    ecx
  40e118:	sbb    DWORD PTR [edi],esp
  40e11a:	and    al,0xa
  40e11c:	xchg   ecx,eax
  40e11d:	(bad)  
  40e11e:	dec    ebx
  40e11f:	rcr    BYTE PTR [edx],1
  40e121:	lahf   
  40e122:	xchg   edi,eax
  40e123:	call   eax
  40e125:	clc    
  40e126:	inc    edi
  40e127:	loop   0x40e186
  40e129:	add    ah,0x79
  40e12c:	mov    dl,0xde
  40e12e:	push   0x41
  40e130:	inc    ebx
  40e131:	call   0x3d13:0xd9e06209
  40e138:	imul   esi,edx,0x2b52fded
  40e13e:	mov    esp,0x8192b8ee
  40e143:	and    dh,BYTE PTR [ecx]
  40e145:	gs adc eax,0xd5a83462
  40e14b:	mov    BYTE PTR ds:0x6805f40,cl
  40e151:	aaa    
  40e152:	pusha  
  40e153:	(bad)  
  40e154:	fsub   DWORD PTR [ebp-0x6a]
  40e157:	add    esp,DWORD PTR [eax-0x5fcc42b8]
  40e15d:	pop    ebp
  40e15e:	adc    al,0x85
  40e160:	jg     0x40e124
  40e162:	ret    0x9ee7
  40e165:	xlat   BYTE PTR ds:[ebx]
  40e166:	pop    esp
  40e167:	pop    ebx
  40e168:	ror    BYTE PTR [edx],1
  40e16a:	test   DWORD PTR [esi],edx
  40e16c:	ja     0x40e1d9
  40e16e:	es pop ecx
  40e170:	pop    ebx
  40e171:	adc    bl,BYTE PTR [esi+eiz*8]
  40e174:	retf   0xbe43
  40e177:	adc    cl,BYTE PTR [ebp-0x4921d460]
  40e17d:	jnp    0x40e132
  40e17f:	mov    eax,ds:0x66f31dd4
  40e184:	adc    eax,DWORD PTR [edi-0x58]
  40e187:	lea    ebx,[ebx]
  40e189:	fld    TBYTE PTR ds:0xcc145aae
  40e18f:	add    BYTE PTR [ebx+edx*4+0x72],0x82
  40e194:	(bad)  
  40e195:	loop   0x40e1ac
  40e197:	jle    0x40e16a
  40e199:	clc    
  40e19a:	inc    ecx
  40e19b:	repz int 0xf0
  40e19e:	push   ss
  40e19f:	xchg   ebp,eax
  40e1a0:	(bad)  
  40e1a1:	(bad)  
  40e1a2:	xor    al,0x9e
  40e1a4:	inc    ebx
  40e1a5:	inc    edx
  40e1a6:	bound  edx,QWORD PTR [esi+0x40aeca53]
  40e1ac:	adc    BYTE PTR [ebx],bl
  40e1ae:	cmp    ah,BYTE PTR [ecx]
  40e1b0:	xlat   BYTE PTR ds:[ebx]
  40e1b1:	xor    al,0x91
  40e1b3:	pop    edx
  40e1b4:	fisttp QWORD PTR [ebx+0x4b8ee27d]
  40e1ba:	pop    ebx
  40e1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1bc:	jmp    0xfb154eee
  40e1c1:	xchg   ebx,eax
  40e1c2:	xchg   DWORD PTR [esi-0x3ecdcfcb],esp
  40e1c8:	add    DWORD PTR [edi-0x61f4bd73],edi
  40e1ce:	dec    esi
  40e1cf:	cwde   
  40e1d0:	dec    esp
  40e1d1:	sub    ah,BYTE PTR [edi]
  40e1d3:	add    DWORD PTR [edi+edx*1-0x56b90133],0xfffffff6
  40e1db:	sar    BYTE PTR [edi],cl
  40e1dd:	loope  0x40e1f6
  40e1df:	cdq    
  40e1e0:	out    0x25,eax
  40e1e2:	mov    bh,BYTE PTR [eax+0x56dcd8f1]
  40e1e8:	push   ebx
  40e1e9:	jo     0x40e236
  40e1eb:	xchg   esi,eax
  40e1ec:	arpl   WORD PTR [ebx-0x52fb10bd],cx
  40e1f2:	pop    es
  40e1f3:	mov    esi,0xfad1493a
  40e1f8:	sbb    eax,0x93d5a51a
  40e1fd:	and    esp,edx
  40e1ff:	inc    eax
  40e200:	sbb    al,BYTE PTR [edx-0x10]
  40e203:	jmp    0x40e1be
  40e205:	inc    eax
  40e206:	push   0x7f65a95d
  40e20b:	sub    BYTE PTR [esi],ah
  40e20d:	mov    WORD PTR [ebp+0x3b],es
  40e210:	sub    edx,ecx
  40e212:	or     al,0xec
  40e214:	sbb    eax,0x91c49278
  40e219:	icebp  
  40e21a:	mov    ebx,0x7bef0387
  40e21f:	sbb    al,0x91
  40e221:	in     al,0xb8
  40e223:	out    dx,al
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	int3   
  40e23b:	cs push es
  40e23d:	jo     0x40e284
  40e23f:	mov    al,0x78
  40e241:	js     0x40e278
  40e243:	jle    0x40e2bd
  40e245:	js     0x40e224
  40e247:	push   edi
  40e248:	sbb    eax,ecx
  40e24a:	(bad)  
  40e24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24c:	jb     0x40e271
  40e24e:	and    ah,BYTE PTR [ecx+0x68]
  40e251:	jne    0x40e1de
  40e253:	pop    ebp
  40e254:	aam    0xa6
  40e256:	mov    bl,BYTE PTR [eax]
  40e258:	hlt    
  40e259:	push   ebx
  40e25a:	pushf  
  40e25b:	stos   DWORD PTR es:[edi],eax
  40e25c:	psrad  mm6,QWORD PTR fs:[edi]
  40e260:	pusha  
  40e261:	jno    0x40e288
  40e263:	mov    edi,0x39faf992
  40e268:	mov    ebp,0xb011d5c2
  40e26d:	push   esp
  40e26e:	je     0x40e248
  40e270:	aam    0xa2
  40e272:	xor    bl,al
  40e274:	sub    BYTE PTR [esi+0x47cf8b67],0x90
  40e27b:	or     sp,WORD PTR [eax-0x596075b9]
  40e282:	push   esi
  40e283:	dec    si
  40e285:	or     al,0xef
  40e287:	pop    esi
  40e288:	jne    0x40e210
  40e28a:	dec    esp
  40e28b:	lods   al,BYTE PTR ds:[esi]
  40e28c:	icebp  
  40e28d:	retf   0xc7b1
  40e290:	sbb    eax,0xb09cddd2
  40e295:	mov    ds:0xec978154,eax
  40e29a:	retf   
  40e29b:	push   ebp
  40e29c:	or     edx,edi
  40e29e:	dec    esp
  40e29f:	jmp    0x107a:0xb4f75ed1
  40e2a6:	iret   
  40e2a7:	mov    ch,0xee
  40e2a9:	es push ds
  40e2ab:	mov    ecx,DWORD PTR [ecx]
  40e2ad:	push   cs
  40e2ae:	xor    al,BYTE PTR [ebx+0x24]
  40e2b1:	cmp    bl,ah
  40e2b3:	or     al,0x90
  40e2b5:	sub    BYTE PTR [esi],ch
  40e2b7:	les    eax,FWORD PTR [edi-0xba5779]
  40e2bd:	ins    BYTE PTR es:[edi],dx
  40e2be:	les    edx,FWORD PTR [ebx]
  40e2c0:	sbb    edi,edx
  40e2c2:	mov    bl,0x74
  40e2c4:	cmp    ah,BYTE PTR [eax+0x45]
  40e2c7:	xchg   DWORD PTR [edi],ebp
  40e2c9:	push   esi
  40e2ca:	mov    ebp,0x2a686765
  40e2cf:	mov    al,0x7e
  40e2d1:	iret   
  40e2d2:	gs inc edi
  40e2d4:	std    
  40e2d5:	jnp    0x40e336
  40e2d7:	mov    ds:0x59f17b01,eax
  40e2dc:	cmp    al,0xbd
  40e2de:	cmp    BYTE PTR [ebp+0x77],dh
  40e2e1:	adc    BYTE PTR [eax+0x2e],cl
  40e2e4:	imul   ebx,DWORD PTR [edx+ebp*8-0x67],0x22
  40e2e9:	enter  0xc7bf,0x17
  40e2ed:	repnz repz mov al,BYTE PTR [esi-0xd]
  40e2f2:	mov    dl,0x6a
  40e2f4:	div    BYTE PTR [ebx]
  40e2f6:	mov    ds:0x4b14c5ce,eax
  40e2fb:	daa    
  40e2fc:	jb     0x40e301
  40e2fe:	je     0x40e32e
  40e300:	inc    ebp
  40e301:	ja     0x40e36c
  40e303:	ret    
  40e304:	popa   
  40e305:	inc    esp
  40e306:	inc    esp
  40e307:	fadd   st(0),st
  40e309:	adc    BYTE PTR [esi-0x6],0xbc
  40e30d:	mov    eax,ds:0x9bd0b2dc
  40e312:	sbb    al,0x33
  40e314:	aam    0x20
  40e316:	xor    DWORD PTR [ecx],esi
  40e318:	add    al,0x4d
  40e31a:	pop    edi
  40e31b:	icebp  
  40e31c:	xor    al,0x97
  40e31e:	jge    0x40e2cb
  40e320:	enter  0xc1a3,0x84
  40e324:	add    ecx,DWORD PTR [eax]
  40e326:	push   ebx
  40e327:	iret   
  40e328:	mov    ds:0x97583ed1,al
  40e32d:	xor    esi,DWORD PTR ds:0x5ef30ff6
  40e333:	fmul   DWORD PTR [edx+ebp*1-0x64]
  40e337:	mov    esi,0x20639c65
  40e33c:	xchg   ebp,eax
  40e33d:	and    DWORD PTR [ecx+0x27],ebx
  40e340:	mov    ebp,0x4bf00696
  40e345:	mov    ebx,0x5d5a69b6
  40e34a:	xchg   ecx,eax
  40e34b:	rol    BYTE PTR [esi+ebx*8-0x5c],1
  40e34f:	loope  0x40e2d1
  40e351:	xchg   edx,edx
  40e353:	adc    al,0xd4
  40e355:	popf   
  40e356:	sbb    al,0x51
  40e358:	sbb    eax,0x29536332
  40e35d:	push   ecx
  40e35e:	pop    edi
  40e35f:	cmp    ebx,DWORD PTR [edi+0x1a]
  40e362:	mov    bh,0xaa
  40e364:	mov    ds:0xded3b263,al
  40e369:	dec    ecx
  40e36a:	js     0x40e3d7
  40e36c:	lahf   
  40e36d:	ret    
  40e36e:	(bad)  [ecx-0x3ddad081]
  40e374:	pusha  
  40e375:	rol    DWORD PTR [ebp+0x6200c2],1
  40e37b:	xchg   BYTE PTR [ebx-0x28],ah
  40e37e:	fbstp  TBYTE PTR [eax+0x6257240d]
  40e384:	push   eax
  40e385:	jbe    0x40e33a
  40e387:	(bad)  
  40e389:	or     BYTE PTR [edx],cl
  40e38b:	sbb    al,0x4a
  40e38d:	ret    0x50d1
  40e390:	arpl   ax,si
  40e392:	pusha  
  40e393:	mov    edi,0x8df3ff82
  40e398:	mov    ch,BYTE PTR gs:[ebp+0x55faa879]
  40e39f:	cmp    BYTE PTR [ecx],0x64
  40e3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a3:	pop    es
  40e3a4:	(bad)  
  40e3a5:	xor    ecx,DWORD PTR [eax+0xf850014]
  40e3ab:	inc    edx
  40e3ac:	popf   
  40e3ad:	or     esp,ebp
  40e3af:	pop    ebx
  40e3b0:	xor    edx,DWORD PTR [eax+0x5a]
  40e3b3:	ror    BYTE PTR ds:0xa1469704,cl
  40e3b9:	fcmovnbe st,st(3)
  40e3bb:	leave  
  40e3bc:	rcr    BYTE PTR [edi-0x6020d184],1
  40e3c2:	sbb    cl,BYTE PTR [esi-0x33853d66]
  40e3c8:	cmp    al,0x52
  40e3ca:	gs in  al,dx
  40e3cc:	mov    esp,0x780d7737
  40e3d1:	hlt    
  40e3d2:	stc    
  40e3d3:	fidiv  DWORD PTR [eax]
  40e3d5:	xchg   ch,bl
  40e3d7:	cli    
  40e3d8:	mov    esp,0x30990123
  40e3dd:	test   BYTE PTR [eax+edx*1-0x14],ch
  40e3e1:	movd   mm3,DWORD PTR [esi-0x2c2830e3]
  40e3e8:	mov    fs,edi
  40e3ea:	lds    eax,FWORD PTR [ecx]
  40e3ec:	sti    
  40e3ed:	addr16 (bad) 
  40e3ef:	(bad)  
  40e3f0:	jmp    0x995c:0x4a23988a
  40e3f7:	scas   al,BYTE PTR es:[edi]
  40e3f8:	cli    
  40e3f9:	mov    db2,edi
  40e3fc:	pop    esi
  40e3fd:	push   ebp
  40e3fe:	mov    ebp,edi
  40e400:	adc    DWORD PTR [ecx-0x7a],edx
  40e403:	pushf  
  40e404:	push   ebx
  40e405:	shl    DWORD PTR [ebx-0x2116a493],1
  40e40b:	xchg   esp,eax
  40e40c:	xchg   BYTE PTR [esi+0x26],dl
  40e40f:	pop    edi
  40e410:	cmp    al,0x90
  40e412:	lods   eax,DWORD PTR ds:[esi]
  40e413:	xor    al,0xa
  40e415:	ins    DWORD PTR es:[edi],dx
  40e416:	aaa    
  40e417:	loopne 0x40e477
  40e419:	or     BYTE PTR [eax+0x6c],0x45
  40e41d:	cwde   
  40e41e:	call   0x9ce0fdba
  40e423:	loopne 0x40e3d1
  40e425:	repz mov edx,0xc13ca17a
  40e42b:	inc    dh
  40e42d:	cmp    esi,DWORD PTR [edx]
  40e42f:	js     0x40e45f
  40e431:	cmc    
  40e432:	rol    DWORD PTR [esi-0x38dc4ca0],1
  40e438:	adc    dl,BYTE PTR [eax+0x6a]
  40e43b:	pop    ebx
  40e43c:	loop   0x40e49f
  40e43e:	lahf   
  40e43f:	or     al,0x87
  40e441:	xchg   ebp,eax
  40e442:	xlat   BYTE PTR ds:[ebx]
  40e443:	test   eax,0x9ec12f1e
  40e448:	enter  0x3c23,0x5d
  40e44c:	cmp    BYTE PTR [edi],0x77
  40e44f:	mov    esi,0x6cb2229c
  40e454:	add    eax,0x5d897fb8
  40e45a:	icebp  
  40e45b:	adc    DWORD PTR [edx+0x60],edi
  40e45e:	push   cs
  40e45f:	xchg   ebp,eax
  40e460:	lahf   
  40e461:	or     DWORD PTR [ebx],ebp
  40e463:	mov    bh,0xaf
  40e465:	sub    DWORD PTR [ecx-0x33abf3ea],edi
  40e46b:	sub    esi,DWORD PTR fs:[edx+0x5d59bc55]
  40e472:	cmp    al,0x9f
  40e474:	adc    DWORD PTR [ebx-0x57d4b2f1],eax
  40e47a:	dec    ecx
  40e47b:	pop    ecx
  40e47c:	add    ecx,edi
  40e47e:	aam    0x8c
  40e480:	shl    BYTE PTR [ecx+0x41eb06],cl
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    edi,DWORD PTR [edx]
  40e4b8:	mov    edx,0xb50298b8
  40e4bd:	js     0x40e537
  40e4bf:	xor    eax,0xa278787e
  40e4c4:	arpl   si,cx
  40e4c6:	loopne 0x40e487
  40e4c8:	imul   BYTE PTR [ebx+edx*8]
  40e4cb:	push   ss
  40e4cc:	jge    0x40e4e2
  40e4ce:	popa   
  40e4cf:	and    bl,dh
  40e4d1:	push   ds
  40e4d2:	rcr    DWORD PTR [esi+ecx*2],0xb6
  40e4d6:	inc    eax
  40e4d7:	stc    
  40e4d8:	fisub  WORD PTR [edi-0x178db206]
  40e4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4df:	stos   DWORD PTR es:[edi],eax
  40e4e0:	xor    al,0xc1
  40e4e2:	inc    edx
  40e4e3:	dec    ebp
  40e4e4:	aaa    
  40e4e5:	add    ecx,0x25
  40e4e8:	jo     0x40e51b
  40e4ea:	pop    esp
  40e4eb:	ret    
  40e4ec:	(bad)  
  40e4ed:	sub    eax,0x8e8da057
  40e4f2:	sub    ecx,DWORD PTR [edx+0x7c636fd0]
  40e4f8:	pusha  
  40e4f9:	mov    ebp,0x1bb33ba
  40e4fe:	mov    eax,ds:0x566c5a14
  40e503:	lea    esi,[ebx+ebp*2]
  40e506:	or     eax,0x70e13912
  40e50b:	lock out 0x7d,al
  40e50e:	mov    bl,0x4e
  40e510:	xor    eax,0xa03290b0
  40e515:	xchg   ebp,eax
  40e516:	(bad)  
  40e517:	(bad)
  40e51a:	jl     0x40e4ad
  40e51c:	cmp    eax,0x79a0436
  40e521:	fcmovne st,st(1)
  40e523:	and    bh,BYTE PTR [edx-0x5c74447b]
  40e529:	pop    ds
  40e52a:	pop    eax
  40e52b:	jmp    0xa4fb:0x43063b4a
  40e532:	ins    BYTE PTR es:[edi],dx
  40e533:	pop    edi
  40e534:	nop
  40e535:	xchg   edx,eax
  40e536:	add    eax,0x6c1c73c
  40e53b:	in     al,dx
  40e53c:	ins    BYTE PTR es:[edi],dx
  40e53d:	mov    al,0x8b
  40e53f:	xchg   ebp,eax
  40e540:	dec    edi
  40e541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e542:	cli    
  40e543:	jmp    0x5c6651da
  40e548:	mov    ds:0xa4d82da7,al
  40e54d:	(bad)  
  40e54e:	in     al,0xcf
  40e550:	gs push edx
  40e552:	push   ebp
  40e553:	and    ebp,esp
  40e555:	lods   eax,DWORD PTR ds:[esi]
  40e556:	xor    ebx,DWORD PTR [esi]
  40e558:	add    eax,0xf7f479b6
  40e55d:	repnz pusha 
  40e55f:	mov    cl,0xae
  40e561:	call   0x2090:0x5f172438
  40e568:	push   eax
  40e569:	mov    eax,0xdfe23ac2
  40e56e:	dec    ebx
  40e56f:	out    0x13,eax
  40e571:	loopne 0x40e56f
  40e573:	(bad)
  40e577:	xchg   ebx,eax
  40e578:	daa    
  40e579:	mov    edi,edx
  40e57b:	pop    eax
  40e57c:	rcr    BYTE PTR [edx],0x3b
  40e57f:	(bad)  
  40e580:	cmc    
  40e581:	mov    al,0x59
  40e583:	xchg   edi,eax
  40e584:	jnp    0x40e5ef
  40e586:	shl    al,1
  40e588:	mov    edi,0x43dc1563
  40e58d:	rcr    BYTE PTR [esi+esi*8],cl
  40e590:	sub    edx,DWORD PTR [eax+ebp*2-0x70]
  40e594:	mov    esi,0xf269e45e
  40e599:	sbb    DWORD PTR [ecx-0x40],esp
  40e59c:	popf   
  40e59d:	and    DWORD PTR [esi-0x78],ebp
  40e5a0:	mov    ecx,0xa8bd160
  40e5a5:	rcl    ch,cl
  40e5a7:	retf   0x859
  40e5aa:	push   ds
  40e5ab:	inc    edx
  40e5ac:	pop    eax
  40e5ad:	jl     0x40e5af
  40e5af:	mov    ds:0x4a72e015,al
  40e5b4:	xchg   esp,eax
  40e5b5:	fs (bad) 
  40e5b7:	mov    ah,ah
  40e5b9:	imul   edx,edx,0xa958884
  40e5bf:	or     dh,BYTE PTR [ecx-0x7dc2e277]
  40e5c5:	mov    ds:0xc8ba962e,al
  40e5ca:	mov    ds:0x253b47b3,eax
  40e5cf:	rol    BYTE PTR [ebx-0x3d],0xea
  40e5d3:	fcomp  st(5)
  40e5d5:	scas   al,BYTE PTR es:[edi]
  40e5d6:	and    esp,0x44
  40e5d9:	fisub  DWORD PTR [ebx]
  40e5db:	push   ds
  40e5dc:	shl    edi,cl
  40e5de:	adc    eax,0xc49b9a95
  40e5e3:	jmp    0x27d8838
  40e5e8:	ror    BYTE PTR [edx-0x3df7d1a1],cl
  40e5ee:	cdq    
  40e5ef:	mov    bh,0x40
  40e5f1:	fdiv   QWORD PTR [edi+ecx*4]
  40e5f4:	ins    BYTE PTR es:[edi],dx
  40e5f5:	dec    ebp
  40e5f6:	inc    esi
  40e5f7:	jp     0x40e64e
  40e5f9:	pop    eax
  40e5fa:	sub    eax,0x4d9f5cfa
  40e5ff:	pop    esp
  40e600:	cmp    cl,cl
  40e602:	mov    ebp,0x6666efc5
  40e607:	sub    ebp,esp
  40e609:	idiv   DWORD PTR [eax+esi*4+0x61]
  40e60d:	jecxz  0x40e5be
  40e60f:	xchg   esp,eax
  40e610:	gs push esi
  40e612:	imul   ecx,DWORD PTR [edi-0x5fb77fc9],0xcd943c65
  40e61c:	pop    ds
  40e61d:	das    
  40e61e:	inc    eax
  40e61f:	adc    dl,dh
  40e621:	fmul   QWORD PTR [eax+ecx*4-0x9587b45]
  40e628:	mov    ebp,0xfe69156e
  40e62d:	retf   
  40e62e:	inc    edx
  40e62f:	not    BYTE PTR [ecx]
  40e631:	sub    BYTE PTR es:[edx+0x730fbadb],al
  40e638:	push   0x79c550c1
  40e63d:	repz or eax,0x9eba25e4
  40e643:	sti    
  40e644:	and    bl,ch
  40e646:	in     al,dx
  40e647:	test   eax,0x570f5ffb
  40e64c:	ret    
  40e64d:	mov    dh,0x5f
  40e64f:	mov    bl,0xa6
  40e651:	ds mov esp,0xb0c8a4c6
  40e657:	clc    
  40e658:	add    BYTE PTR [edi],ch
  40e65a:	adc    BYTE PTR [esi],0x4b
  40e65d:	(bad)  
  40e65e:	sub    BYTE PTR [ebx],cl
  40e660:	adc    DWORD PTR [ecx-0x72],ebp
  40e663:	lods   al,BYTE PTR ds:[esi]
  40e664:	shl    BYTE PTR [eiz*2+0x4d6d0d37],0x39
  40e66c:	inc    esi
  40e66d:	adc    al,0xcf
  40e66f:	and    BYTE PTR [ebx-0x58],bh
  40e672:	sbb    eax,0x8e7af85c
  40e677:	leave  
  40e678:	xchg   edx,eax
  40e679:	js     0x40e67d
  40e67b:	test   eax,0x12ccdd38
  40e680:	pop    es
  40e681:	adc    BYTE PTR fs:[eax],cl
  40e684:	and    eax,0x60494152
  40e689:	stos   DWORD PTR es:[edi],eax
  40e68a:	sub    DWORD PTR [ebx-0x5d],eax
  40e68d:	mov    eax,0x19e85d5b
  40e692:	retf   
  40e693:	jge    0x40e686
  40e695:	lea    esi,[ecx]
  40e697:	adc    al,0xbc
  40e699:	mov    al,0xae
  40e69b:	ret    
  40e69c:	(bad)  
  40e69d:	lods   eax,DWORD PTR ds:[esi]
  40e69e:	iret   
  40e69f:	dec    edi
  40e6a0:	fs scas eax,DWORD PTR es:[edi]
  40e6a2:	dec    edx
  40e6a3:	sbb    edx,DWORD PTR [ecx+0x16f41cd]
  40e6a9:	push   es
  40e6aa:	or     edi,DWORD PTR ds:0xe00ebbb5
  40e6b0:	cdq    
  40e6b1:	test   eax,0x7a8b4063
  40e6b6:	shr    DWORD PTR [ebx+edx*4+0xcd07acd],0x3b
  40e6be:	xor    eax,0x9e9a950d
  40e6c3:	inc    ebx
  40e6c4:	ins    BYTE PTR es:[edi],dx
  40e6c5:	(bad)  
  40e6c6:	push   edx
  40e6c7:	aas    
  40e6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c9:	(bad)  
  40e6ca:	sahf   
  40e6cb:	jns    0x40e69f
  40e6cd:	cmp    DWORD PTR [eax+0x43fc5ff],ebx
  40e6d3:	mov    edx,0x2faff72f
  40e6d8:	xchg   esp,eax
  40e6d9:	and    DWORD PTR [eax+0x3e],esi
  40e6dc:	adc    eax,DWORD PTR [ecx-0x3d45791]
  40e6e2:	lods   eax,DWORD PTR ds:[esi]
  40e6e3:	and    eax,0x6dd2194f
  40e6e8:	dec    edx
  40e6e9:	dec    edi
  40e6ea:	cmp    BYTE PTR [eax+0x1f],cl
  40e6ed:	adc    bl,BYTE PTR [edx]
  40e6ef:	aam    0x97
  40e6f1:	xchg   ebp,eax
  40e6f2:	sbb    BYTE PTR [eax+0x43ea61de],cl
  40e6f8:	and    dh,BYTE PTR [edi+esi*2]
  40e6fb:	int    0xd9
  40e6fd:	js     0x40e732
  40e6ff:	mov    BYTE PTR [ebx],0xc3
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	jl     0x40e6d7
  40e734:	mov    al,0x83
  40e736:	aas    
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	shl    BYTE PTR [eax-0x3962a492],cl
  40e744:	dec    esp
  40e745:	shl    BYTE PTR [edx],1
  40e747:	out    0x97,al
  40e749:	nop
  40e74a:	sbb    ah,BYTE PTR [ebx-0x51cea19f]
  40e750:	(bad)  
  40e751:	mov    dh,0xcc
  40e753:	xchg   esp,eax
  40e754:	in     eax,0x87
  40e756:	add    ch,dh
  40e758:	sbb    DWORD PTR [edx],0xffffff98
  40e75b:	and    eax,0xa0767c6
  40e760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e761:	push   0x90ace23a
  40e766:	xor    BYTE PTR [ecx],0xad
  40e769:	(bad)  
  40e76a:	cmovle ebp,DWORD PTR [ebx+0x1c8f740e]
  40e771:	adc    al,0xae
  40e773:	sbb    DWORD PTR [ebx-0x6c9c016f],ebp
  40e779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77a:	js     0x40e75e
  40e77c:	pop    ecx
  40e77d:	into   
  40e77e:	outs   dx,BYTE PTR ds:[esi]
  40e77f:	mov    bl,0xdc
  40e781:	dec    esp
  40e782:	pop    ds
  40e783:	cwde   
  40e784:	push   ds
  40e785:	cmp    esp,esp
  40e787:	out    dx,al
  40e788:	mov    esi,DWORD PTR [ecx-0x15d31f6b]
  40e78e:	lods   eax,DWORD PTR ds:[esi]
  40e78f:	ja     0x40e78d
  40e791:	sbb    al,0xd3
  40e793:	popf   
  40e794:	or     al,0x8a
  40e796:	mov    edx,0x8f435882
  40e79b:	sbb    esp,DWORD PTR [edx-0x744bb442]
  40e7a1:	hlt    
  40e7a2:	cmp    DWORD PTR [eax],ebx
  40e7a4:	in     al,dx
  40e7a5:	int    0xd9
  40e7a7:	inc    ecx
  40e7a8:	mov    bh,0x5e
  40e7aa:	or     eax,0x205cb857
  40e7af:	or     ecx,esp
  40e7b1:	fisub  WORD PTR [esi+0x64]
  40e7b4:	and    BYTE PTR [ebp+0x7e],bh
  40e7b7:	mov    edx,0xa03395
  40e7bc:	push   cs
  40e7bd:	cmovp  esp,edx
  40e7c0:	leave  
  40e7c1:	xchg   esp,eax
  40e7c2:	ret    
  40e7c3:	or     BYTE PTR [esi-0x1c],al
  40e7c6:	cdq    
  40e7c7:	aad    0x9d
  40e7c9:	adc    cl,bl
  40e7cb:	cmc    
  40e7cc:	mov    cl,BYTE PTR [esi+0x1c4cb98a]
  40e7d2:	fidiv  WORD PTR [ecx]
  40e7d4:	mov    al,ds:0x3e1ceb6a
  40e7d9:	jl     0x40e782
  40e7db:	and    al,0x24
  40e7dd:	mov    ah,0x21
  40e7df:	(bad)  
  40e7e0:	aaa    
  40e7e1:	scas   eax,DWORD PTR es:[edi]
  40e7e2:	(bad)  
  40e7e3:	push   0x24403344
  40e7e8:	shr    BYTE PTR [edi],1
  40e7ea:	loop   0x40e796
  40e7ec:	or     ah,0xee
  40e7ef:	mov    al,ds:0xdc2a9056
  40e7f4:	dec    eax
  40e7f5:	mov    WORD PTR [ecx],ds
  40e7f7:	stc    
  40e7f8:	jmp    0x426c1c75
  40e7fd:	repz adc dl,BYTE PTR [esi-0x43]
  40e801:	sub    DWORD PTR [edx+0x7570bf6b],ecx
  40e807:	and    esi,DWORD PTR ds:0xc90d8023
  40e80d:	mov    ecx,ebx
  40e80f:	test   BYTE PTR [ebp+0x53],cl
  40e812:	or     edi,ebx
  40e814:	in     eax,0xf0
  40e816:	cmp    al,0x92
  40e818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e819:	and    BYTE PTR [edi],0x42
  40e81c:	aaa    
  40e81d:	std    
  40e81e:	push   esi
  40e81f:	lods   eax,DWORD PTR ds:[esi]
  40e820:	aas    
  40e821:	push   ebx
  40e822:	cmp    dl,ch
  40e824:	adc    bl,BYTE PTR [ebx+0x51047f92]
  40e82a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e82b:	das    
  40e82c:	push   0x5
  40e82e:	adc    BYTE PTR [edi],dh
  40e830:	arpl   WORD PTR [ebx-0x3e],ax
  40e833:	iret   
  40e834:	retf   0xbc2
  40e837:	mov    esi,0xab28b098
  40e83c:	enter  0xb4af,0x9a
  40e840:	mov    cl,0x93
  40e842:	dec    ebx
  40e843:	mov    eax,ds:0xab7abd79
  40e848:	or     eax,0x4c184da1
  40e84d:	push   edx
  40e84e:	leave  
  40e84f:	stos   DWORD PTR es:[edi],eax
  40e850:	xor    eax,0xa63ec537
  40e855:	jbe    0x40e848
  40e857:	test   al,0xdc
  40e859:	mov    ds:0x8e12bb70,eax
  40e85e:	and    al,0xfc
  40e860:	xchg   edi,eax
  40e861:	test   cl,dh
  40e863:	mov    ebx,gs
  40e865:	xor    cl,BYTE PTR [esi+0x7785e4a8]
  40e86b:	scas   eax,DWORD PTR es:[edi]
  40e86c:	pcmpgtb mm7,QWORD PTR [esi+0x5db13309]
  40e873:	push   esi
  40e874:	setg   BYTE PTR ds:[edi+0x5b9c1fa7]
  40e87c:	loop   0x40e831
  40e87e:	mov    al,ds:0xba68ced8
  40e883:	xchg   DWORD PTR [edi+eax*8],edi
  40e886:	loopne 0x40e8f9
  40e888:	jp     0x40e8cc
  40e88a:	jns    0x40e8e6
  40e88c:	fnstenvw [esi+edx*2+0x5a05dcab]
  40e894:	popa   
  40e895:	and    bh,BYTE PTR [eax+0xf]
  40e898:	xchg   ecx,eax
  40e899:	add    bl,ah
  40e89b:	test   eax,0x647f2523
  40e8a0:	inc    ebp
  40e8a1:	mov    BYTE PTR [edi+0x3f],ch
  40e8a4:	sub    dl,BYTE PTR [ecx-0x11db0bb0]
  40e8aa:	outs   dx,BYTE PTR ds:[esi]
  40e8ab:	mov    bl,0x36
  40e8ad:	int3   
  40e8ae:	mov    ch,0x40
  40e8b0:	outs   dx,DWORD PTR ds:[esi]
  40e8b1:	xor    ch,BYTE PTR gs:[ebp-0x39]
  40e8b5:	or     BYTE PTR [ebx],dl
  40e8b7:	daa    
  40e8b8:	fisubr WORD PTR [esi+eiz*4]
  40e8bb:	in     eax,dx
  40e8bc:	push   edx
  40e8bd:	fisubr WORD PTR [edi-0x31dff976]
  40e8c3:	mov    bl,0x8e
  40e8c5:	cwde   
  40e8c6:	jo     0x40e8ef
  40e8c8:	test   DWORD PTR [esi],esi
  40e8ca:	sbb    DWORD PTR [ebx-0x32a840e8],edx
  40e8d0:	imul   esi,DWORD PTR [esi],0x59dbacdf
  40e8d6:	dec    esi
  40e8d7:	xor    DWORD PTR [eax],ebx
  40e8d9:	cmc    
  40e8da:	sub    DWORD PTR [esi+0x71],ecx
  40e8dd:	rol    BYTE PTR [ebx-0x38ada6b3],cl
  40e8e3:	fiadd  DWORD PTR [ecx+ebp*1]
  40e8e6:	dec    ecx
  40e8e7:	jns    0x40e904
  40e8e9:	push   es
  40e8ea:	or     al,0xaf
  40e8ec:	and    dh,BYTE PTR [edx]
  40e8ee:	xchg   ecx,eax
  40e8ef:	mov    cl,0xd1
  40e8f1:	pop    esi
  40e8f2:	add    dl,bl
  40e8f4:	push   edi
  40e8f5:	mov    eax,0xdc3f0795
  40e8fa:	fs jno 0x40e965
  40e8fd:	aam    0xe9
  40e8ff:	mov    edx,0x35508307
  40e904:	sbb    cl,BYTE PTR [edi-0x3ce5710a]
  40e90a:	fldcw  WORD PTR [esi+esi*8+0x74]
  40e90e:	inc    esp
  40e90f:	jno    0x40e8bd
  40e911:	in     eax,dx
  40e912:	lock out dx,eax
  40e914:	outs   dx,BYTE PTR ds:[esi]
  40e915:	dec    ecx
  40e916:	mov    dl,0x29
  40e918:	(bad)  
  40e919:	retf   0xfca2
  40e91c:	lea    ebp,[edi-0x4d530312]
  40e922:	retf   0xde13
  40e925:	leave  
  40e926:	sbb    eax,0x2a0b379a
  40e92b:	xchg   ebp,eax
  40e92c:	push   ebx
  40e92d:	mov    WORD PTR [eax],gs
  40e92f:	dec    ecx
  40e930:	jmp    0x40e8ba
  40e932:	adc    bh,BYTE PTR [esi-0x42a80d60]
  40e938:	push   esi
  40e939:	mov    edi,0x3f486cfa
  40e93e:	outs   dx,BYTE PTR ds:[esi]
  40e93f:	ret    
  40e940:	in     al,0x54
  40e942:	push   ebp
  40e943:	xchg   ebp,eax
  40e944:	mov    bh,0xd
  40e946:	or     DWORD PTR [edi+0x1d],0xd21d4bf0
  40e94d:	bound  edx,QWORD PTR [esi+0x56]
  40e950:	jp     0x40e922
  40e952:	pop    edx
  40e953:	cld    
  40e954:	or     eax,0xfe94205c
  40e959:	test   eax,0xcd3d8301
  40e95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e95f:	int    0xa3
  40e961:	jge    0x40e9a6
  40e963:	lahf   
  40e964:	dec    esi
  40e965:	mov    dl,0xf
  40e967:	pop    ebx
  40e968:	pop    edi
  40e969:	xchg   ebp,eax
  40e96a:	xchg   edx,eax
  40e96b:	or     ch,BYTE PTR [ebx]
  40e96d:	sub    dl,ah
  40e96f:	mov    BYTE PTR [esi+0x22],0x96
  40e973:	call   0x8e024c4
  40e978:	jg     0x40e905
  40e97a:	inc    ebp
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a811,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a811
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a811,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a811,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a811,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a811
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a811,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a811,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	xor    BYTE PTR [esi],dl
  40ea24:	je     0x40ea2f
  40ea26:	hlt    
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	clc    
  40ea2f:	mov    esi,0x76308ed5
  40ea34:	in     al,0xce
  40ea36:	jb     0x40ea1d
  40ea38:	imul   ebx,DWORD PTR [edx+0x59ffc15b],0xffffffad
  40ea3f:	rol    WORD PTR [ebx-0x7e],1
  40ea43:	test   al,0xdd
  40ea45:	sbb    al,0x57
  40ea47:	outs   dx,DWORD PTR ds:[esi]
  40ea48:	xchg   DWORD PTR [ebx+0x68752806],esp
  40ea4e:	lock and ebx,DWORD PTR [ecx-0x4a]
  40ea52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea53:	xor    BYTE PTR [edx],dh
  40ea55:	pop    edi
  40ea56:	sub    al,BYTE PTR [edi-0x6e]
  40ea59:	jmp    0xab6c:0x404f21cb
  40ea60:	push   ebx
  40ea61:	pop    ebp
  40ea62:	ret    0x6d
  40ea65:	hlt    
  40ea66:	add    DWORD PTR [ecx],eax
  40ea68:	mov    WORD PTR [ebx+eiz*1+0x30a8f8f3],ss
  40ea6f:	adc    eax,0x8571d11a
  40ea74:	das    
  40ea75:	inc    edx
  40ea76:	loop   0x40ea4d
  40ea78:	and    al,0x2
  40ea7a:	pop    ecx
  40ea7b:	jbe    0x40ea23
  40ea7d:	sbb    eax,0xe0eb9a3
  40ea82:	(bad)
  40ea86:	push   edx
  40ea87:	add    eax,0xbedb7ef5
  40ea8c:	and    al,0x67
  40ea8e:	sbb    DWORD PTR [ecx-0x75],esp
  40ea91:	push   0xd4c87b6d
  40ea96:	dec    esp
  40ea97:	inc    esi
  40ea98:	mov    dh,0x24
  40ea9a:	stc    
  40ea9b:	or     eax,0xeb0c6c3b
  40eaa0:	lock leave 
  40eaa2:	cmp    ah,al
  40eaa4:	jnp    0x40ea56
  40eaa6:	jg     0x40ea8e
  40eaa8:	xlat   BYTE PTR ds:[ebx]
  40eaa9:	jg     0x40ea9d
  40eaab:	sub    edx,DWORD PTR fs:[edx+0x3a]
  40eaaf:	lds    ebx,FWORD PTR [esi]
  40eab1:	test   eax,0x71088f55
  40eab6:	repnz (bad) 
  40eab9:	cld    
  40eaba:	mov    eax,ds:0xf92240d6
  40eabf:	adc    DWORD PTR [esi-0x5],ebp
  40eac2:	lahf   
  40eac3:	rcr    DWORD PTR [esi+edx*8],0x1c
  40eac7:	imul   ebp,DWORD PTR [eax+0x3b579362],0x62
  40eace:	das    
  40eacf:	cld    
  40ead0:	pop    eax
  40ead1:	test   al,0xd6
  40ead3:	adc    eax,DWORD PTR [edx+0xac3211b]
  40ead9:	xchg   edx,eax
  40eada:	test   DWORD PTR [edi+0x23dcff98],0x9b7c49c2
  40eae4:	add    DWORD PTR [ebp+0x46],ecx
  40eae7:	sub    BYTE PTR [ebp-0x4e8a181f],0xbc
  40eaee:	bound  eax,QWORD PTR [ebp-0x5f]
  40eaf1:	sbb    al,0x8b
  40eaf3:	xor    eax,0x58e4e735
  40eaf8:	adc    al,0x6b
  40eafa:	ret    
  40eafb:	inc    ebx
  40eafc:	jmp    0xb259:0x921aadaa
  40eb03:	(bad)  
  40eb04:	mov    DWORD PTR [edx-0x41014917],esi
  40eb0a:	mov    bh,0x85
  40eb0c:	call   0x6801acd3
  40eb11:	jbe    0x40eaa2
  40eb13:	iret   
  40eb14:	adc    eax,0x8f353695
  40eb19:	iret   
  40eb1a:	faddp  st(5),st
  40eb1c:	inc    edi
  40eb1d:	jecxz  0x40eac5
  40eb1f:	push   edi
  40eb20:	sbb    BYTE PTR [ebp-0x63],bh
  40eb23:	arpl   WORD PTR [ecx-0x41572080],ax
  40eb29:	jl     0x40eb12
  40eb2b:	scas   eax,DWORD PTR es:[edi]
  40eb2c:	and    ch,BYTE PTR [edi]
  40eb2e:	jne    0x40eb46
  40eb30:	push   esi
  40eb31:	mov    al,0xd9
  40eb33:	or     al,0xf9
  40eb35:	(bad)  
  40eb37:	int    0xf9
  40eb39:	leave  
  40eb3a:	shl    BYTE PTR [esi],1
  40eb3c:	and    dl,BYTE PTR [ebx]
  40eb3e:	jo     0x40eadd
  40eb40:	add    BYTE PTR [ecx+0x15],0xc8
  40eb44:	aad    0xf1
  40eb46:	aam    0x1
  40eb48:	and    DWORD PTR [edi+eiz*2],esi
  40eb4b:	fcmovbe st,st(3)
  40eb4d:	xlat   BYTE PTR ds:[ebx]
  40eb4e:	aas    
  40eb4f:	xchg   esp,eax
  40eb50:	popa   
  40eb51:	xchg   DWORD PTR [eax+0x177eeb7a],edi
  40eb57:	xor    al,BYTE PTR [edi]
  40eb59:	and    ah,BYTE PTR [ecx+0x12c759f5]
  40eb5f:	rcr    BYTE PTR ds:0x1f37be06,1
  40eb65:	inc    edi
  40eb66:	and    al,0x43
  40eb68:	xor    ecx,esp
  40eb6a:	in     eax,0xa7
  40eb6c:	inc    ecx
  40eb6d:	add    BYTE PTR [eax],bh
  40eb6f:	pop    ebp
  40eb70:	and    BYTE PTR [esi],ch
  40eb72:	test   al,0xcf
  40eb74:	mov    ds:0x8631befe,eax
  40eb79:	daa    
  40eb7a:	dec    ecx
  40eb7b:	inc    eax
  40eb7c:	push   es
  40eb7d:	or     eax,0x5e8b2c82
  40eb82:	imul   edx,DWORD PTR [edi-0x26b97222],0x77a2f126
  40eb8c:	or     ecx,DWORD PTR [esi]
  40eb8e:	xor    bl,BYTE PTR [edi]
  40eb90:	jnp    0x40ebf9
  40eb92:	sti    
  40eb93:	or     ecx,ebx
  40eb95:	or     al,0x39
  40eb97:	adc    al,0x24
  40eb99:	jmp    0x40eb2f
  40eb9b:	mov    esi,0xfea22001
  40eba0:	sub    BYTE PTR [edx],ch
  40eba2:	mov    edi,0x8c7ea274
  40eba7:	adc    al,0x36
  40eba9:	or     DWORD PTR [edi+0xf],edx
  40ebac:	test   al,0x55
  40ebae:	pop    ebx
  40ebaf:	xor    ebx,ebp
  40ebb1:	or     al,BYTE PTR [edi+0x1]
  40ebb4:	ror    DWORD PTR [edx+eiz*2-0x54a2ce42],0xdc
  40ebbc:	or     edi,DWORD PTR [edx-0xa19c829]
  40ebc2:	or     al,0xc
  40ebc4:	xchg   ebx,eax
  40ebc5:	push   ebp
  40ebc6:	idiv   DWORD PTR [edi]
  40ebc8:	push   eax
  40ebc9:	mov    al,BYTE PTR [esi+0x4528bb79]
  40ebcf:	mov    edi,0xc840bf4
  40ebd4:	mov    edx,0x49321af7
  40ebd9:	(bad)
  40ebdc:	mov    ebp,DWORD PTR [ebx-0x28]
  40ebdf:	push   edx
  40ebe0:	inc    esi
  40ebe1:	stos   BYTE PTR es:[edi],al
  40ebe2:	adc    al,0xe4
  40ebe4:	cwde   
  40ebe5:	cmp    eax,0xf4c9f5d6
  40ebea:	mov    cl,0x88
  40ebec:	sar    BYTE PTR [esi-0xfba0c1],1
  40ebf2:	jl     0x40ec66
  40ebf4:	add    al,0x92
  40ebf6:	cmp    DWORD PTR [ecx],esi
  40ebf8:	mov    BYTE PTR [eax+0x5712e968],bl
  40ebfe:	cs sbb edx,ecx
  40ec01:	mov    ebx,0xcb1c5b8e
  40ec06:	or     al,0x8e
  40ec08:	lahf   
  40ec09:	mov    edx,0xc8c483b8
  40ec0e:	inc    ebx
  40ec0f:	pop    esi
  40ec10:	je     0x40ebca
  40ec12:	test   BYTE PTR [eax],0x1
  40ec15:	pop    ds
  40ec16:	mov    ah,0x7e
  40ec18:	inc    eax
  40ec19:	popa   
  40ec1a:	mov    DWORD PTR [edx-0xf6be0b1],esi
  40ec20:	arpl   WORD PTR cs:[ebx],bp
  40ec23:	data16 jae 0x40ebd0
  40ec26:	inc    ebp
  40ec27:	cmc    
  40ec28:	dec    eax
  40ec29:	xor    al,BYTE PTR [ebp+0x4]
  40ec2c:	adc    eax,0xf4c6cb7
  40ec31:	sub    edx,DWORD PTR [eax+edi*2-0x520b3f13]
  40ec38:	popf   
  40ec39:	nop
  40ec3a:	hlt    
  40ec3b:	mov    ch,0x92
  40ec3d:	mov    esi,0x9f3b913f
  40ec42:	fsub   st(2),st
  40ec44:	inc    esi
  40ec45:	xchg   edi,eax
  40ec46:	adc    DWORD PTR [esi+0x74cc5559],0xa4a9d1a0
  40ec50:	arpl   WORD PTR [ecx+0x4e],ax
  40ec53:	repz push ds
  40ec55:	fisttp QWORD PTR [edx-0x305c11b2]
  40ec5b:	(bad)  
  40ec5c:	call   0xc3c9:0xdccf6e23
  40ec63:	sbb    DWORD PTR [eax-0x45],ebp
  40ec66:	aaa    
  40ec67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec68:	push   edx
  40ec69:	pop    edx
  40ec6a:	inc    eax
  40ec6b:	mov    BYTE PTR [ecx-0x483027dd],bh
  40ec71:	pop    ecx
  40ec72:	in     al,dx
  40ec73:	ret    0xdd92
  40ec76:	pop    ecx
  40ec77:	(bad)  
  40ec78:	imul   esp,DWORD PTR [ebp-0x33],0xffffff95
  40ec7c:	jl     0x40ebff
  40ec7e:	test   ebx,ecx
  40ec80:	mov    WORD PTR fs:[ebp-0x12],ds
  40ec84:	imul   BYTE PTR [edi+0x6c]
  40ec87:	call   0x69324c45
  40ec8c:	and    BYTE PTR [edi+0x66efec11],bl
  40ec92:	in     eax,0xe7
  40ec94:	dec    ebx
  40ec95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec96:	dec    eax
  40ec97:	fldenv [ebx-0x75]
  40ec9a:	push   ebp
  40ec9b:	or     BYTE PTR [ebx],cl
  40ec9d:	or     eax,0x42a79d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a899,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a899,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a899,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a899,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a899
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a899,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a899
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a899,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a8a5,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed34:	cmp    DWORD PTR ds:0x42a8a5,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a8a5,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a8a5,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a81d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a811
  40ed88:	xor    DWORD PTR ds:0x42a895,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	xorps  xmm5,XMMWORD PTR [edx+0x78bf619c]
  40eda6:	js     0x40ed8d
  40eda8:	jle    0x40ee22
  40edaa:	js     0x40ed47
  40edac:	rcr    cl,0x4e
  40edaf:	out    0xd3,eax
  40edb1:	pop    es
  40edb2:	outs   dx,DWORD PTR ds:[esi]
  40edb3:	clc    
  40edb4:	icebp  
  40edb5:	test   BYTE PTR [eax+edi*8],dh
  40edb8:	cmp    al,0x3e
  40edba:	add    DWORD PTR [edx-0x71],esi
  40edbd:	lds    esp,FWORD PTR [edi-0x76]
  40edc0:	test   BYTE PTR [esi-0x7],dh
  40edc3:	(bad)  
  40edc4:	mov    edi,0x93017a0
  40edc9:	sar    BYTE PTR [ebx-0x6e],1
  40edcc:	aas    
  40edcd:	jge    0x40ede8
  40edcf:	inc    ebx
  40edd0:	leave  
  40edd1:	and    al,0x88
  40edd3:	or     al,0x5b
  40edd5:	mov    ebx,0x5c6d921a
  40edda:	int3   
  40eddb:	sub    al,0xe1
  40eddd:	sub    DWORD PTR [edx-0x5f],ecx
  40ede0:	(bad)  
  40ede1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede2:	jecxz  0x40ee63
  40ede4:	fwait
  40ede5:	and    eax,0xdf391a2d
  40edea:	inc    edx
  40edeb:	xor    edi,DWORD PTR gs:[edi]
  40edee:	cmovne edi,ecx
  40edf1:	es inc esi
  40edf3:	and    BYTE PTR [eax],0x6b
  40edf6:	(bad)  
  40edf7:	stc    
  40edf8:	int    0x7f
  40edfa:	clc    
  40edfb:	hlt    
  40edfc:	int    0x68
  40edfe:	jl     0x40edac
  40ee00:	add    edx,edx
  40ee02:	dec    esp
  40ee03:	mov    bh,0xc9
  40ee05:	das    
  40ee06:	cmp    al,0x9
  40ee08:	and    dl,dl
  40ee0a:	jl     0x40ed9c
  40ee0c:	sbb    cl,dl
  40ee0e:	popfw  
  40ee10:	(bad)  
  40ee12:	adc    al,0xd0
  40ee14:	test   eax,0x178cdffe
  40ee19:	into   
  40ee1a:	or     eax,0x547f05af
  40ee1f:	jb     0x40ee8f
  40ee21:	sbb    al,0xd6
  40ee23:	push   esi
  40ee24:	stos   BYTE PTR es:[edi],al
  40ee25:	sub    al,0x94
  40ee27:	sub    eax,0x6c305ac9
  40ee2c:	push   edx
  40ee2d:	mov    BYTE PTR [edi+edx*4-0x2672a879],al
  40ee34:	mov    bh,0xd0
  40ee36:	adc    eax,0xd52d093e
  40ee3b:	adc    al,0x7
  40ee3d:	xchg   ebp,eax
  40ee3e:	adc    BYTE PTR [edi-0x655161c9],ch
  40ee44:	jbe    0x40eeaa
  40ee46:	add    DWORD PTR [esi+0x467518e7],ecx
  40ee4c:	scas   eax,DWORD PTR es:[edi]
  40ee4d:	mov    esp,0xbc9def9e
  40ee52:	pop    es
  40ee53:	cli    
  40ee54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee56:	mov    edx,0x9c1c729e
  40ee5b:	mov    WORD PTR [edi-0x17bec7bf],?
  40ee61:	push   es
  40ee62:	xchg   DWORD PTR [edx+0x1c],ebp
  40ee65:	push   ds
  40ee66:	ret    
  40ee67:	aaa    
  40ee68:	mov    ecx,0x8c4f494d
  40ee6d:	adc    BYTE PTR es:[ebp+0x2e],0xa8
  40ee72:	scas   eax,DWORD PTR es:[edi]
  40ee73:	sub    eax,0x765815e6
  40ee78:	mov    bl,0x2b
  40ee7a:	push   edi
  40ee7b:	or     DWORD PTR [edi],edi
  40ee7d:	cmp    DWORD PTR [esi],edi
  40ee7f:	ss popa 
  40ee81:	das    
  40ee82:	jns    0x40eef1
  40ee84:	push   eax
  40ee85:	jbe    0x40ee9b
  40ee87:	xchg   ebx,eax
  40ee88:	fadd   QWORD PTR [ecx]
  40ee8a:	sub    edx,DWORD PTR [edi+0x10]
  40ee8d:	retf   0xbe0a
  40ee90:	jno    0x40ee14
  40ee92:	sub    edi,DWORD PTR [ecx]
  40ee94:	int    0xdc
  40ee96:	lods   eax,DWORD PTR ds:[esi]
  40ee97:	mov    al,ds:0xb3504c9a
  40ee9c:	sub    eax,DWORD PTR [esi+0x76fec0ca]
  40eea2:	jg     0x40eed8
  40eea4:	xchg   ecx,eax
  40eea5:	pop    edi
  40eea6:	(bad)  
  40eea7:	cmp    DWORD PTR [esi+0x34],ebp
  40eeaa:	add    DWORD PTR [eax+0x6507e268],eax
  40eeb0:	and    esi,DWORD PTR [ebx+0x45]
  40eeb3:	je     0x40ef13
  40eeb5:	pusha  
  40eeb6:	call   0x8a724509
  40eebb:	stos   DWORD PTR es:[edi],eax
  40eebc:	xchg   esi,eax
  40eebd:	jae    0x40ef25
  40eebf:	neg    ch
  40eec1:	dec    edi
  40eec2:	loopne 0x40ef1b
  40eec4:	dec    ecx
  40eec5:	jp     0x40eec7
  40eec7:	rcl    DWORD PTR ds:0x1e753c5,0xb
  40eece:	dec    ebx
  40eecf:	sti    
  40eed0:	inc    esp
  40eed1:	pop    ss
  40eed2:	test   DWORD PTR [ebp+0x1e],0xd2c8ca77
  40eed9:	dec    ebx
  40eeda:	cwde   
  40eedb:	test   DWORD PTR gs:[ecx+0x5b],edi
  40eedf:	mov    esi,0xc6835c60
  40eee4:	dec    esp
  40eee5:	cld    
  40eee6:	call   0xdfba1dd3
  40eeeb:	sbb    bl,ah
  40eeed:	loope  0x40ef2d
  40eeef:	icebp  
  40eef0:	ins    BYTE PTR es:[edi],dx
  40eef1:	or     BYTE PTR [ebx+ecx*2+0x424f3b52],bl
  40eef8:	sub    ebx,eax
  40eefa:	dec    esp
  40eefb:	lea    esp,[ebp-0x7e1e40f7]
  40ef01:	mov    DWORD PTR [ebp-0x4164aeee],ebx
  40ef07:	iret   
  40ef08:	mov    dh,0x20
  40ef0a:	push   0x4b54c03d
  40ef0f:	ss adc eax,0x50b63cb4
  40ef15:	(bad)  
  40ef16:	cli    
  40ef17:	mov    cl,0xdf
  40ef19:	inc    esi
  40ef1a:	mov    esp,0xace15f89
  40ef1f:	das    
  40ef20:	sbb    esp,0xffffffb3
  40ef23:	or     dh,BYTE PTR ds:0x13379009
  40ef29:	cmp    ebp,esi
  40ef2b:	out    dx,eax
  40ef2c:	inc    ebx
  40ef2d:	adc    ebx,ebx
  40ef2f:	xchg   ecx,eax
  40ef30:	das    
  40ef31:	push   cs
  40ef32:	cmp    al,0xc4
  40ef34:	loop   0x40ef2c
  40ef36:	repz mov ebx,0x17b93f6f
  40ef3c:	mov    ds:0xfaf89718,al
  40ef41:	lahf   
  40ef42:	sbb    eax,0xd6d69d3
  40ef47:	fmul   DWORD PTR [eax+0x74]
  40ef4a:	arpl   WORD PTR [eax+0x4a4d191],ax
  40ef50:	lods   eax,DWORD PTR ds:[esi]
  40ef51:	dec    edx
  40ef52:	add    al,0x38
  40ef54:	and    BYTE PTR [eax+0x7b],al
  40ef57:	pop    ss
  40ef58:	lods   eax,DWORD PTR ds:[esi]
  40ef59:	mov    eax,ds:0x9e2a533a
  40ef5e:	mov    eax,ds:0xcbd50b28
  40ef63:	retf   
  40ef64:	sbb    eax,0xfecde312
  40ef69:	push   esp
  40ef6a:	setnp  BYTE PTR [eax]
  40ef6d:	mov    bl,0xb6
  40ef6f:	mov    eax,DWORD PTR [eax]
  40ef71:	ja     0x40efeb
  40ef73:	imul   edi,ebp,0x7d23b8ae
  40ef79:	fsub   QWORD PTR [esi+0x1aa4d880]
  40ef7f:	loop   0x40ef9c
  40ef81:	jmp    0x40efea
  40ef83:	mov    edi,0x1abb046e
  40ef88:	addr16 xchg edi,eax
  40ef8a:	clc    
  40ef8b:	mov    edi,0x8aea82ad
  40ef90:	arpl   di,dx
  40ef92:	adc    al,0xc5
  40ef94:	mov    DWORD PTR [ecx],0xc3aefbce
  40ef9a:	in     al,dx
  40ef9b:	push   edx
  40ef9c:	sub    edi,0x47ec0461
  40efa2:	inc    ecx
  40efa3:	adc    ecx,esi
  40efa5:	add    al,0x59
  40efa7:	stos   DWORD PTR es:[edi],eax
  40efa8:	xchg   ecx,eax
  40efa9:	mov    eax,fs
  40efab:	test   al,0xc1
  40efad:	repnz fwait
  40efaf:	lock pop edx
  40efb1:	jno    0x40f027
  40efb3:	pop    ebx
  40efb4:	push   0x61
  40efb6:	and    bh,BYTE PTR [esi+0x560716ce]
  40efbc:	pop    ecx
  40efbd:	std    
  40efbe:	mul    DWORD PTR ds:0x6e0b4429
  40efc4:	pusha  
  40efc5:	cld    
  40efc6:	mov    dh,0x64
  40efc8:	loope  0x40efb0
  40efca:	mov    BYTE PTR ds:[edx],cl
  40efcd:	retf   0x68ab
  40efd0:	lea    ebx,[ecx-0x262390cb]
  40efd6:	pop    es
  40efd7:	fs cwde 
  40efd9:	jecxz  0x40f053
  40efdb:	lds    ebp,FWORD PTR [edx+0x44a65fe9]
  40efe1:	fst    DWORD PTR [edx-0x6b72cc43]
  40efe7:	cmc    
  40efe8:	lahf   
  40efe9:	cmp    ebp,DWORD PTR [ebp-0x6ad991b8]
  40efef:	mov    bh,ch
  40eff1:	sub    BYTE PTR [eax],al
  40eff3:	mov    ecx,0x39dcb212
  40eff8:	stos   DWORD PTR es:[edi],eax
  40eff9:	push   ds
  40effa:	push   esp
  40effb:	inc    ebp
  40effc:	cli    
  40effd:	fsubr  st,st(6)
  40efff:	sub    eax,0x53955fe1
  40f004:	test   al,0xdd
  40f006:	mov    al,ds:0x7be1d6f1
  40f00b:	cmp    ebp,ecx
  40f00d:	fbld   TBYTE PTR [edi]
  40f00f:	sub    eax,0x1bdee7b4
  40f014:	dec    ecx
  40f015:	imul   ecx,DWORD PTR [ecx+0x2581f855],0x21
  40f01c:	test   al,0x42
  40f01e:	add    BYTE PTR [eax],al
  40f020:	add    BYTE PTR [eax],al
  40f022:	add    BYTE PTR [ebx],dh
  40f024:	inc    DWORD PTR [ebx]
  40f026:	cmp    eax,0x42a821
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a821,edi
  40f032:	cmp    DWORD PTR ds:0x42a821,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a821,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a821
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a821,edi
  40f066:	cmp    DWORD PTR ds:0x42a821,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a8ad,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a8ad
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a8ad,edi
  40f08f:	cmp    DWORD PTR ds:0x42a8ad,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a825
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a8ad,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a779,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x77
  40f0d7:	pop    ss
  40f0d8:	arpl   cx,si
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	clc    
  40f0e3:	je     0x40f0f7
  40f0e5:	fild   DWORD PTR [esi]
  40f0e7:	jae    0x40f168
  40f0e9:	retf   
  40f0ea:	cmp    dl,dl
  40f0ec:	popf   
  40f0ed:	ffree  st(3)
  40f0ef:	outs   dx,DWORD PTR ds:[esi]
  40f0f0:	mov    al,0xb8
  40f0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f3:	into   
  40f0f4:	popf   
  40f0f5:	iret   
  40f0f6:	out    0x81,al
  40f0f8:	int3   
  40f0f9:	adc    al,0x6
  40f0fb:	sbb    al,BYTE PTR [esi]
  40f0fd:	mov    ebx,esi
  40f0ff:	int    0xd8
  40f101:	xor    edi,esp
  40f103:	sbb    al,0x3
  40f105:	inc    esp
  40f106:	shr    BYTE PTR [ebx+0x63],cl
  40f109:	or     eax,0x877318d
  40f10e:	mov    eax,0x1e055cdc
  40f113:	jne    0x40f0ac
  40f115:	inc    edx
  40f116:	out    0x8e,eax
  40f118:	jo     0x40f0a9
  40f11a:	add    al,0x90
  40f11c:	repnz inc eax
  40f11e:	jp     0x40f0b8
  40f120:	jecxz  0x40f120
  40f122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f123:	mov    bh,cl
  40f125:	aam    0xd4
  40f127:	jae    0x40f0f5
  40f129:	sub    ch,BYTE PTR [ecx+ebx*1+0x41]
  40f12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12e:	test   DWORD PTR [edi-0x376283ae],ebp
  40f134:	xor    ebp,DWORD PTR [esi+eiz*8+0x37cbcc75]
  40f13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13c:	out    0x36,al
  40f13e:	mov    ebx,0xb93f144f
  40f143:	jp     0x40f153
  40f145:	sbb    al,0x89
  40f147:	sub    DWORD PTR [edi],ebp
  40f149:	rol    BYTE PTR [esi],0x38
  40f14c:	or     al,0xc6
  40f14e:	sbb    eax,0xa8d6bf46
  40f153:	ror    BYTE PTR ds:0x92d30130,cl
  40f159:	fisttp QWORD PTR [esp+ebx*2]
  40f15c:	addr16 jns 0x40f19e
  40f15f:	mov    bl,0xc3
  40f161:	inc    edx
  40f162:	dec    ebp
  40f163:	mov    DWORD PTR [edx],ebx
  40f165:	mov    ch,0xb4
  40f167:	rcl    DWORD PTR [esi],1
  40f169:	pop    esp
  40f16a:	lock add al,0xdf
  40f16d:	(bad)  
  40f16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f16f:	sub    ebp,DWORD PTR [ebp+0x5ba37a0b]
  40f175:	sar    DWORD PTR [eax+0x1f],cl
  40f178:	inc    ebp
  40f179:	or     eax,0xd799d21d
  40f17e:	dec    esp
  40f17f:	into   
  40f180:	fcomp  DWORD PTR [edx+0x7d]
  40f183:	inc    edi
  40f184:	sub    al,0x7b
  40f186:	cmp    dh,BYTE PTR [ecx-0x34]
  40f189:	push   ebp
  40f18a:	daa    
  40f18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f18c:	and    cl,bh
  40f18e:	sub    BYTE PTR [ebp-0x19abf8c5],0x7
  40f195:	jns    0x40f1c3
  40f197:	jp     0x40f1e3
  40f199:	(bad)  
  40f19a:	shl    DWORD PTR [ecx-0x6e],0x6
  40f19e:	fdivr  QWORD PTR [edx+0x7a]
  40f1a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1a2:	dec    esi
  40f1a3:	test   ecx,ecx
  40f1a5:	and    bh,cl
  40f1a7:	jo     0x40f12d
  40f1a9:	push   0x55ddcdb
  40f1ae:	int3   
  40f1af:	xchg   ebp,eax
  40f1b0:	xchg   ebp,eax
  40f1b1:	inc    eax
  40f1b2:	pop    edx
  40f1b3:	or     bh,BYTE PTR [eax-0x6d]
  40f1b6:	fs mov ecx,0x91a8a3f5
  40f1bc:	into   
  40f1bd:	test   esi,0xcacf14cd
  40f1c3:	fcomp  DWORD PTR [ebp+0x36]
  40f1c6:	xchg   edi,eax
  40f1c7:	icebp  
  40f1c8:	ret    
  40f1c9:	pop    es
  40f1ca:	xor    ebp,DWORD PTR [ebx+0x67cc7057]
  40f1d0:	jge    0x40f20f
  40f1d2:	and    DWORD PTR [ebp+ebx*2-0x66],eax
  40f1d6:	inc    ebp
  40f1d8:	loopne 0x40f234
  40f1da:	sub    ah,BYTE PTR [esi+0x64]
  40f1dd:	mov    ah,BYTE PTR [eax+0x13]
  40f1e0:	test   ebx,esp
  40f1e2:	adc    eax,0x35afdc42
  40f1e7:	mov    cl,0x8a
  40f1e9:	lods   al,BYTE PTR ds:[esi]
  40f1ea:	add    edi,DWORD PTR [ecx]
  40f1ec:	sub    edi,0x8aee8e38
  40f1f2:	push   cs
  40f1f3:	cli    
  40f1f4:	and    ch,cl
  40f1f6:	sub    BYTE PTR [esi+0x1e303a80],al
  40f1fc:	pop    esi
  40f1fd:	int3   
  40f1fe:	or     DWORD PTR [ecx-0x3fd02b00],eax
  40f204:	inc    ebp
  40f205:	imul   DWORD PTR [edx-0x7a66bb65]
  40f20b:	mov    DWORD PTR [ebp-0x6ca82cd8],esi
  40f211:	and    DWORD PTR [edx+0x104e9964],edi
  40f217:	sbb    eax,0x1b98abf8
  40f21c:	xchg   ebp,eax
  40f21d:	addr16 popa 
  40f21f:	out    0xa7,al
  40f221:	xor    ebx,edx
  40f223:	daa    
  40f224:	jno    0x40f290
  40f226:	in     al,0x8a
  40f228:	fmul   QWORD PTR ds:0x69b2b9d9
  40f22e:	fiadd  DWORD PTR [edi+0x7e03e7a]
  40f234:	mov    cl,0xdf
  40f236:	jae    0x40f1f3
  40f238:	fs mov esi,0x4f5adbab
  40f23e:	xchg   ebx,eax
  40f23f:	out    0x41,al
  40f241:	sahf   
  40f242:	test   eax,0xed3a3ac1
  40f247:	sbb    DWORD PTR [ebx],0xffffffdb
  40f24a:	ins    BYTE PTR es:[edi],dx
  40f24b:	ret    0xe3aa
  40f24e:	popf   
  40f24f:	lods   al,BYTE PTR ds:[esi]
  40f250:	test   eax,0x2589c487
  40f255:	inc    edi
  40f256:	sub    DWORD PTR [ebx],0xc
  40f259:	xor    eax,DWORD PTR [eax-0x2b]
  40f25c:	inc    esi
  40f25d:	cmc    
  40f25e:	cmp    dl,bh
  40f260:	das    
  40f261:	and    al,0xe6
  40f263:	jp     0x40f233
  40f265:	mov    esi,0x68ec1e2
  40f26a:	xchg   esi,eax
  40f26b:	add    al,0x66
  40f26d:	popa   
  40f26e:	std    
  40f26f:	cmp    ch,BYTE PTR [ebp-0x44]
  40f272:	sbb    BYTE PTR [ecx+0x7ab88e15],bh
  40f278:	fimul  WORD PTR [edi]
  40f27a:	and    DWORD PTR [edi],0x1df66245
  40f280:	add    BYTE PTR ss:[ebp+esi*2-0x60d16640],al
  40f288:	xchg   edi,eax
  40f289:	jp     0x40f243
  40f28b:	in     eax,0x6b
  40f28d:	pushf  
  40f28e:	cmp    ecx,edx
  40f290:	push   ds
  40f291:	and    bh,BYTE PTR [ecx-0x38]
  40f294:	adc    esi,DWORD PTR [eax-0x29]
  40f297:	or     ecx,DWORD PTR [eax]
  40f299:	mov    DWORD PTR [esi+eax*1-0x6072d0bd],edi
  40f2a0:	mov    al,0x16
  40f2a2:	jp     0x40f309
  40f2a4:	pop    edi
  40f2a5:	mov    BYTE PTR [ecx-0x5071f3fb],al
  40f2ab:	(bad)  
  40f2ac:	jge    0x40f2bd
  40f2ae:	out    0xe0,al
  40f2b0:	mov    esp,edi
  40f2b2:	push   ds
  40f2b3:	push   es
  40f2b4:	adc    esp,DWORD PTR [eax]
  40f2b6:	push   0x2e
  40f2b8:	xchg   ebp,eax
  40f2b9:	cld    
  40f2ba:	sbb    BYTE PTR [ecx+0x1c8ff9b3],0x6b
  40f2c1:	call   0x6373705b
  40f2c6:	xor    al,0x54
  40f2c8:	and    eax,0x331db400
  40f2cd:	mov    bh,0xc1
  40f2cf:	outs   dx,DWORD PTR ds:[esi]
  40f2d0:	out    dx,al
  40f2d1:	push   eax
  40f2d2:	fidivr DWORD PTR [edx]
  40f2d4:	jne    0x40f297
  40f2d6:	nop
  40f2d7:	sbb    dh,ch
  40f2d9:	or     ebp,ebp
  40f2db:	mov    al,ds:0xa414d91c
  40f2e0:	ins    BYTE PTR es:[edi],dx
  40f2e1:	enter  0x68a5,0x8a
  40f2e5:	jne    0x40f359
  40f2e7:	sub    ch,dh
  40f2e9:	inc    esi
  40f2ea:	(bad)  
  40f2eb:	sub    bl,BYTE PTR [edi]
  40f2ed:	ins    DWORD PTR es:[edi],dx
  40f2ee:	adc    ebp,DWORD PTR ds:0x8c19c0b2
  40f2f4:	mov    ch,0xe2
  40f2f6:	fistp  DWORD PTR [edi-0xb676b08]
  40f2fc:	xchg   ebp,eax
  40f2fd:	and    dl,BYTE PTR [edi+eiz*1]
  40f300:	sbb    BYTE PTR es:[ecx],0x29
  40f304:	adc    eax,0xf33276a
  40f309:	pop    edi
  40f30a:	imul   eax,DWORD PTR [ecx-0x33],0xfffffff4
  40f30e:	ficomp WORD PTR es:[bp+0x293a]
  40f314:	ret    0xa51e
  40f317:	push   ds
  40f318:	clc    
  40f319:	cmp    al,0x26
  40f31b:	sbb    ebx,ecx
  40f31d:	imul   ecx,DWORD PTR [ecx-0x35f41c07],0x61b23521
  40f327:	inc    eax
  40f328:	scas   al,BYTE PTR es:[edi]
  40f329:	fst    QWORD PTR [ebp+edi*4-0x7d5285ad]
  40f330:	add    al,0x48
  40f332:	lea    edi,[eax]
  40f334:	scas   eax,DWORD PTR es:[edi]
  40f335:	not    cl
  40f337:	sub    BYTE PTR [ebp+0x5f],bh
  40f33a:	pop    esp
  40f33b:	jmp    0xab8045d9
  40f340:	add    eax,DWORD PTR [edx+0x3e]
  40f343:	lds    esi,FWORD PTR [esi-0x5d109c2a]
  40f349:	dec    DWORD PTR [ebx-0x2efc21ca]
  40f34f:	mov    DWORD PTR ds:0x42a82d,0x1d
  40f359:	cmp    DWORD PTR ds:0x42a82d,0x0
  40f360:	je     0x40f3c3
  40f366:	cmp    DWORD PTR ds:0x42a82d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a82d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a82d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a82d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a82d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a82d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a779
  40f3bd:	add    DWORD PTR ds:0x42a795,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a789
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a861,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a861
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a861,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a861,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a861,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a899
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a795,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a829,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a829
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a829,edx
  40f477:	cmp    DWORD PTR ds:0x42a829,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a829,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7e9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7e9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7e9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7e9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7e9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a861,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a861
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a861,edi
  40f528:	cmp    DWORD PTR ds:0x42a861,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a861,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7ed
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a851,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	rol    DWORD PTR [edx],0x2c
  40f573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f574:	xlat   BYTE PTR ds:[ebx]
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f5f8
  40f57e:	sbb    al,0x3b
  40f580:	adc    bl,dh
  40f582:	outs   dx,DWORD PTR ds:[esi]
  40f583:	inc    eax
  40f584:	outs   dx,BYTE PTR ds:[esi]
  40f585:	jmp    0xd0c6:0x18bd17e4
  40f58c:	mov    dh,0xf1
  40f58e:	ror    BYTE PTR [esi-0x7e3a689e],cl
  40f594:	jne    0x40f51c
  40f596:	xchg   ebx,eax
  40f597:	add    al,0x73
  40f599:	(bad)  
  40f59a:	(bad)  
  40f59b:	(bad)  
  40f59c:	lods   eax,DWORD PTR ds:[esi]
  40f59d:	mov    ah,0xd4
  40f59f:	lods   eax,DWORD PTR ds:[esi]
  40f5a0:	xor    ecx,DWORD PTR [edx-0x1760df13]
  40f5a6:	push   ebx
  40f5a7:	loopne 0x40f605
  40f5a9:	mov    bl,0x14
  40f5ab:	pop    es
  40f5ac:	lods   eax,DWORD PTR ds:[esi]
  40f5ad:	rol    BYTE PTR ds:0x61299ef6,1
  40f5b3:	and    ebx,DWORD PTR [ebx+eiz*4+0x1a]
  40f5b7:	lods   al,BYTE PTR ds:[esi]
  40f5b8:	dec    ebx
  40f5b9:	in     al,dx
  40f5ba:	pushf  
  40f5bb:	out    dx,al
  40f5bc:	popf   
  40f5bd:	loopne 0x40f631
  40f5bf:	jl     0x40f58a
  40f5c1:	cwde   
  40f5c2:	xchg   esp,eax
  40f5c3:	loop   0x40f5f5
  40f5c5:	fild   DWORD PTR [esi+0x5af5c3fa]
  40f5cb:	or     eax,DWORD PTR ds:[edx]
  40f5ce:	xor    al,0x3f
  40f5d0:	int    0x19
  40f5d2:	dec    esi
  40f5d3:	mov    DWORD PTR [ebp-0x40],ebp
  40f5d6:	pusha  
  40f5d7:	not    BYTE PTR [edi]
  40f5d9:	mov    ecx,edx
  40f5db:	dec    eax
  40f5dc:	adc    ch,cl
  40f5de:	dec    ebx
  40f5df:	jge    0x40f61a
  40f5e1:	jne    0x40f610
  40f5e3:	lea    ecx,fs:[ebx+esi*8]
  40f5e7:	or     eax,0x46618fde
  40f5ec:	outs   dx,DWORD PTR ds:[esi]
  40f5ed:	(bad)  
  40f5ef:	push   ss
  40f5f0:	or     esi,DWORD PTR [eax+edx*2-0x72]
  40f5f4:	xchg   ebx,eax
  40f5f5:	dec    edx
  40f5f6:	cmp    ebp,DWORD PTR [edi+edi*4-0x4a60664a]
  40f5fd:	pop    esp
  40f5fe:	sub    edx,DWORD PTR [esi+0x7e219c5e]
  40f604:	aas    
  40f605:	sbb    BYTE PTR [eax-0x75],al
  40f608:	or     DWORD PTR [eax],ecx
  40f60a:	je     0x40f5fd
  40f60c:	xbegin 0xdae0e80f
  40f612:	inc    esi
  40f613:	push   0xffffffab
  40f615:	imul   edx,ecx,0x34b637fd
  40f61b:	inc    ebp
  40f61c:	or     BYTE PTR [ebp+0x1a],ah
  40f61f:	daa    
  40f620:	call   0xa33f:0xc6586c0c
  40f627:	pop    edi
  40f628:	cmc    
  40f629:	inc    esi
  40f62a:	or     ah,BYTE PTR [eax-0x5c15b5f1]
  40f630:	ins    BYTE PTR es:[edi],dx
  40f631:	test   DWORD PTR [ebx+0x7],esp
  40f634:	fldcw  WORD PTR cs:[ecx]
  40f637:	loop   0x40f694
  40f639:	in     al,dx
  40f63a:	push   ss
  40f63b:	mov    ds:0xc1d889de,eax
  40f640:	xchg   ebx,eax
  40f641:	cmc    
  40f642:	popf   
  40f643:	sbb    edi,DWORD PTR [ecx]
  40f645:	xchg   esp,eax
  40f646:	fsub   st(4),st
  40f648:	js     0x40f624
  40f64a:	ins    DWORD PTR es:[edi],dx
  40f64b:	lods   al,BYTE PTR ds:[esi]
  40f64c:	popa   
  40f64d:	cmp    eax,0xf1e12394
  40f652:	fsubrp st(5),st
  40f654:	push   es
  40f655:	mov    WORD PTR ds:0xd48f4429,ss
  40f65b:	jne    0x40f6aa
  40f65d:	mov    DWORD PTR [ebx+0xa],ecx
  40f660:	mov    ds:0x3de3ead6,eax
  40f665:	popf   
  40f666:	cmp    DWORD PTR [esi+0x7d8cb67a],esi
  40f66c:	pop    esi
  40f66d:	sub    eax,0x82ea9221
  40f672:	and    bl,0x16
  40f675:	ret    0x9559
  40f678:	out    0x20,al
  40f67a:	mov    ds:0x342ee452,al
  40f67f:	mov    esi,0x51da7902
  40f684:	mov    cr7,ebx
  40f687:	xlat   BYTE PTR ds:[ebx]
  40f688:	loope  0x40f65e
  40f68a:	ins    DWORD PTR es:[edi],dx
  40f68b:	rcr    ah,0x6b
  40f68e:	xchg   ecx,eax
  40f68f:	(bad)  
  40f690:	and    BYTE PTR ds:0xf622e2ca,bl
  40f696:	sub    eax,0xc87e439b
  40f69b:	pop    ebx
  40f69c:	xchg   esi,eax
  40f69d:	cld    
  40f69e:	imul   eax,DWORD PTR [edx-0x17],0xffffffe8
  40f6a2:	mov    ah,0xaf
  40f6a4:	fisubr DWORD PTR [ebp-0x7]
  40f6a7:	fiadd  WORD PTR [esp+ebp*1]
  40f6aa:	stc    
  40f6ab:	neg    DWORD PTR [esi-0x1f]
  40f6ae:	aad    0x77
  40f6b0:	aad    0xdc
  40f6b2:	ficomp DWORD PTR [ecx+0x566619ff]
  40f6b8:	mov    eax,0x1e484ab6
  40f6bd:	pop    ebx
  40f6be:	push   edx
  40f6bf:	data16 xlat BYTE PTR ds:[ebx]
  40f6c1:	test   al,0x2b
  40f6c3:	stc    
  40f6c4:	mov    ebx,0xfaf60154
  40f6c9:	or     BYTE PTR [eax+edx*1+0x7a441bdc],bl
  40f6d0:	and    al,0xe0
  40f6d2:	ret    0x32a5
  40f6d5:	add    BYTE PTR [edx-0x344f12eb],bh
  40f6db:	mov    ds:0xc5286954,eax
  40f6e0:	mov    cl,BYTE PTR [ebx+0x1e40a617]
  40f6e6:	stos   BYTE PTR es:[edi],al
  40f6e7:	push   cs
  40f6e8:	dec    esp
  40f6e9:	inc    esi
  40f6ea:	xchg   esi,eax
  40f6eb:	icebp  
  40f6ec:	sbb    dh,BYTE PTR [ebp-0x1e]
  40f6ef:	xchg   esi,eax
  40f6f0:	hlt    
  40f6f1:	pushf  
  40f6f2:	in     al,0x75
  40f6f4:	dec    edx
  40f6f5:	or     dh,BYTE PTR [ebp+0x29fdd54e]
  40f6fb:	ficomp WORD PTR [ebp+0x48]
  40f6fe:	outs   dx,BYTE PTR ds:[esi]
  40f6ff:	icebp  
  40f700:	in     eax,dx
  40f701:	das    
  40f702:	stc    
  40f703:	sub    eax,0x7117c1fa
  40f708:	outs   dx,DWORD PTR ds:[esi]
  40f709:	jecxz  0x40f6fc
  40f70b:	jmp    0x40f69e
  40f70d:	pop    ds
  40f70e:	jbe    0x40f6e6
  40f710:	mov    dl,0x67
  40f712:	cmc    
  40f713:	lds    eax,FWORD PTR [esi-0x4d9ac7dd]
  40f719:	mov    WORD PTR [edi+0x4e22e9d8],es
  40f71f:	sahf   
  40f720:	jo     0x40f6b4
  40f722:	sar    BYTE PTR [esi],1
  40f724:	aas    
  40f725:	cdq    
  40f726:	xchg   BYTE PTR [ecx-0x70],bl
  40f729:	loope  0x40f7a9
  40f72b:	pushf  
  40f72c:	jnp    0x40f71e
  40f72e:	addr16 das 
  40f730:	cmp    BYTE PTR [ebx-0x4fffc4fb],bl
  40f736:	sub    bl,BYTE PTR [ecx]
  40f738:	inc    ebx
  40f739:	adc    BYTE PTR [edx-0x22],dh
  40f73c:	imul   ebp,DWORD PTR [ecx-0x6],0x14
  40f740:	add    eax,0x234eff61
  40f745:	(bad)  
  40f746:	repz cwde 
  40f748:	inc    eax
  40f749:	mov    esi,0x41150a12
  40f74e:	lock mov ch,0x8e
  40f751:	cld    
  40f752:	pop    es
  40f753:	scas   al,BYTE PTR es:[edi]
  40f754:	add    bh,0xb2
  40f757:	pushf  
  40f758:	push   0xffffffe6
  40f75a:	rcl    BYTE PTR [ebp+0x31],cl
  40f75d:	repz and al,0xce
  40f760:	stos   DWORD PTR es:[edi],eax
  40f761:	xchg   esi,eax
  40f762:	and    eax,0xebb82a04
  40f767:	ret    
  40f768:	pop    ebp
  40f769:	dec    eax
  40f76a:	mov    DWORD PTR [esi-0x4b8199ef],ebp
  40f770:	jns    0x40f7f1
  40f772:	sti    
  40f773:	push   ss
  40f774:	sbb    al,0xf7
  40f776:	mov    ds,WORD PTR [edx+0x35d2e970]
  40f77c:	mov    al,0xf6
  40f77e:	sti    
  40f77f:	les    ebx,FWORD PTR [esi]
  40f781:	jl     0x40f7a0
  40f783:	outs   dx,DWORD PTR ds:[esi]
  40f784:	mov    ebp,0x3cad20bc
  40f789:	xchg   DWORD PTR [esi-0x52b453fb],esp
  40f78f:	inc    ebx
  40f790:	aad    0x2f
  40f792:	mov    ebx,ds
  40f794:	loop   0x40f7f1
  40f796:	pop    ebx
  40f797:	sbb    dh,BYTE PTR [ecx+0x6e04326]
  40f79d:	add    eax,DWORD PTR [esi]
  40f79f:	xchg   esp,eax
  40f7a0:	xor    BYTE PTR [edx+0x37],ch
  40f7a3:	mov    edi,0x3ce2ce91
  40f7a8:	mov    bl,ch
  40f7aa:	cwde   
  40f7ab:	jl     0x40f740
  40f7ad:	mov    BYTE PTR [esi],dh
  40f7af:	push   edx
  40f7b0:	pop    ds
  40f7b1:	sub    edi,0x25
  40f7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b5:	add    eax,DWORD PTR [esp+ecx*8+0x1d]
  40f7b9:	imul   ebp,DWORD PTR [ebx-0x21],0xf7a7cdbd
  40f7c0:	fcom   DWORD PTR [edi]
  40f7c2:	js     0x40f76a
  40f7c4:	and    eax,0x90ad5432
  40f7c9:	or     BYTE PTR [ebp+0x1e],bl
  40f7cc:	addr16 into 
  40f7ce:	jmp    DWORD PTR [edx+0x51]
  40f7d1:	xchg   edx,eax
  40f7d2:	sbb    bh,cl
  40f7d4:	ja     0x40f7ec
  40f7d6:	add    ebx,eax
  40f7d8:	repz sub DWORD PTR [edi],ebx
  40f7db:	mov    WORD PTR [edi+0x13c9f097],fs
  40f7e1:	(bad)  
  40f7e2:	xor    eax,0xd555707f
  40f7e7:	fild   DWORD PTR [ebx]
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a799,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x9e00245f,ch
  40f80a:	jmp    0x78b93f2f
  40f80f:	in     eax,0x7e
  40f811:	js     0x40f88b
  40f813:	xor    bl,BYTE PTR [esi+eax*2+0x468b145a]
  40f81a:	mov    bl,0x7f
  40f81c:	daa    
  40f81d:	loope  0x40f88c
  40f81f:	push   cs
  40f820:	jmp    0x40f84f
  40f822:	daa    
  40f823:	popa   
  40f824:	xor    bh,BYTE PTR [esi-0x62ade94d]
  40f82a:	lds    ecx,FWORD PTR [ecx-0x4]
  40f82d:	add    BYTE PTR [ecx+0xe650ae4],al
  40f833:	call   0xc01b:0xe3bfed9
  40f83a:	cmp    al,0x78
  40f83c:	and    DWORD PTR [esi+0x1daf96b4],ebx
  40f842:	inc    ecx
  40f843:	mov    gs,eax
  40f845:	fldenv [ebx+0xb792c9f]
  40f84b:	mov    bh,0xaf
  40f84d:	fist   WORD PTR [edi+0x3d]
  40f850:	dec    eax
  40f851:	dec    eax
  40f852:	xor    al,0xdc
  40f854:	neg    BYTE PTR [edx]
  40f856:	mov    eax,0x5f4a91ac
  40f85b:	mov    WORD PTR [esi],es
  40f85d:	sub    dl,BYTE PTR [eax]
  40f85f:	lods   al,BYTE PTR ds:[esi]
  40f860:	std    
  40f861:	sbb    DWORD PTR [eax+ecx*2],ebx
  40f864:	dec    esp
  40f865:	add    eax,0xcac601e4
  40f86a:	adc    DWORD PTR [edx-0x7b],0x478487d5
  40f871:	lds    ebp,FWORD PTR [edx+0x5008f402]
  40f877:	cmp    esp,DWORD PTR [ebx-0x4f]
  40f87a:	setp   BYTE PTR [edi+ebp*4]
  40f87e:	dec    eax
  40f87f:	sub    ah,ah
  40f881:	sti    
  40f882:	or     eax,0x4f8c80af
  40f887:	xor    ah,al
  40f889:	inc    edx
  40f88a:	add    DWORD PTR [ebp+0x2f],ebx
  40f88d:	data16 test al,0xe6
  40f890:	call   0x96704535
  40f895:	inc    esi
  40f896:	(bad)  
  40f898:	lds    edx,FWORD PTR [edi]
  40f89a:	mov    BYTE PTR [edi],bl
  40f89c:	shr    DWORD PTR [edx+0x6af01767],1
  40f8a2:	pop    es
  40f8a3:	out    0x97,al
  40f8a5:	shr    BYTE PTR ds:0x502acd4b,1
  40f8ab:	inc    esp
  40f8ac:	inc    ebp
  40f8ad:	fmul   st,st(7)
  40f8af:	cmp    DWORD PTR [ebx+0x27741ad3],0xb4b6dcda
  40f8b9:	inc    ecx
  40f8ba:	and    BYTE PTR [esi+0x1089b35],cl
  40f8c0:	in     eax,0x7c
  40f8c2:	jnp    0x40f926
  40f8c4:	jle    0x40f8cb
  40f8c6:	out    dx,eax
  40f8c7:	fwait
  40f8c8:	add    DWORD PTR [ecx+0x6cc4962f],ebx
  40f8ce:	iret   
  40f8cf:	sub    dh,BYTE PTR [eax-0xadc8a2f]
  40f8d5:	jecxz  0x40f932
  40f8d7:	out    0xeb,eax
  40f8d9:	sub    eax,0xe87df24e
  40f8de:	or     al,0xd0
  40f8e0:	inc    ecx
  40f8e1:	xor    DWORD PTR [edx],0xffffffdb
  40f8e4:	(bad)  
  40f8e5:	push   0x46
  40f8e7:	shl    esi,0x1
  40f8ea:	xor    al,BYTE PTR [eax]
  40f8ec:	fwait
  40f8ed:	fwait
  40f8ee:	sbb    al,0x30
  40f8f0:	xor    esi,0xffffffde
  40f8f3:	push   esp
  40f8f4:	push   0xffffff92
  40f8f6:	sub    BYTE PTR [eax],bl
  40f8f8:	mov    WORD PTR [ecx],ds
  40f8fa:	push   ebp
  40f8fb:	mov    ah,0xdd
  40f8fd:	loopne 0x40f905
  40f8ff:	inc    ecx
  40f900:	xchg   ecx,eax
  40f901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f902:	ret    
  40f903:	stc    
  40f904:	pop    esi
  40f905:	ja     0x40f910
  40f907:	and    al,0xf3
  40f909:	out    0xd3,eax
  40f90b:	pusha  
  40f90c:	rcl    bl,cl
  40f90e:	jecxz  0x40f941
  40f910:	jmp    0x13c96466
  40f915:	cld    
  40f916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f917:	cmp    ecx,DWORD PTR [edi+0x39]
  40f91a:	ror    esi,1
  40f91c:	outs   dx,DWORD PTR ds:[esi]
  40f91d:	shl    BYTE PTR [ecx+edi*8-0x4a],cl
  40f921:	xchg   edx,eax
  40f922:	fnstcw WORD PTR ds:0x7cd9f94a
  40f928:	sub    al,0xc3
  40f92b:	mov    eax,0x3ac12fbe
  40f930:	sbb    ebx,eax
  40f932:	addr16 movs BYTE PTR es:[di],BYTE PTR ds:[si]
  40f935:	mov    bl,ah
  40f937:	xor    edi,edx
  40f939:	mov    ch,0x3c
  40f93b:	jne    0x40f99b
  40f93d:	inc    ebx
  40f93e:	ret    0x812f
  40f941:	aas    
  40f942:	pop    ds
  40f943:	fisubr WORD PTR ds:0x3a6c7c3b
  40f949:	int    0x4f
  40f94b:	shl    BYTE PTR [ebp+0x61],1
  40f94e:	int3   
  40f94f:	xlat   BYTE PTR ds:[ebx]
  40f950:	fcmovnbe st,st(0)
  40f952:	or     ebx,edx
  40f954:	outs   dx,BYTE PTR ds:[esi]
  40f955:	pop    edx
  40f956:	inc    ecx
  40f957:	sub    esi,eax
  40f959:	ret    0x2e30
  40f95c:	outs   dx,BYTE PTR ds:[esi]
  40f95d:	mov    edx,0xb19f198d
  40f962:	cmp    ebp,DWORD PTR [ecx+esi*4+0x4c]
  40f966:	pop    edi
  40f967:	out    dx,eax
  40f968:	test   al,0xaf
  40f96a:	mov    ds:0x23ee8f2e,al
  40f96f:	sub    al,bh
  40f971:	rcr    ebx,0x9d
  40f974:	in     al,dx
  40f975:	or     DWORD PTR [ebp-0x48],ebx
  40f978:	mov    eax,ds:0xf9fc3265
  40f97d:	push   cs
  40f97e:	xchg   edi,eax
  40f97f:	push   ebx
  40f980:	sar    dl,0xc8
  40f983:	push   edx
  40f984:	scas   al,BYTE PTR es:[edi]
  40f985:	cmp    DWORD PTR [ecx-0x4a],ebp
  40f988:	adc    eax,0x970d6aa8
  40f98d:	push   edx
  40f98e:	mov    cl,0xcf
  40f990:	ins    DWORD PTR es:[edi],dx
  40f991:	retf   
  40f992:	sti    
  40f993:	xchg   DWORD PTR [ebp-0x21],ebx
  40f996:	in     al,dx
  40f997:	xor    eax,0xfe70e79c
  40f99c:	popf   
  40f99d:	test   DWORD PTR [esi],esp
  40f99f:	or     dh,BYTE PTR [edi+0x36]
  40f9a2:	or     eax,0x426fa7f1
  40f9a7:	popw   es
  40f9a9:	add    eax,0x683841ba
  40f9ae:	fcmovnu st,st(1)
  40f9b0:	ins    BYTE PTR es:[edi],dx
  40f9b1:	imul   edi,DWORD PTR [eax+0x113f7b6c],0x58ff1a0f
  40f9bb:	data16 jnp 0x40f9dc
  40f9be:	and    al,0x62
  40f9c0:	ins    BYTE PTR es:[edi],dx
  40f9c1:	mov    ebp,edi
  40f9c3:	mov    al,0x87
  40f9c5:	es outs dx,DWORD PTR cs:[esi]
  40f9c8:	stos   DWORD PTR es:[edi],eax
  40f9c9:	push   ss
  40f9ca:	ror    BYTE PTR [edi-0x47],cl
  40f9cd:	das    
  40f9ce:	sahf   
  40f9cf:	cmp    eax,0x88dffb67
  40f9d4:	xor    BYTE PTR [esi+ebx*1+0x3a],ch
  40f9d8:	add    cl,ah
  40f9da:	ror    edi,0x73
  40f9dd:	lods   eax,DWORD PTR ds:[esi]
  40f9de:	jnp    0x40fa5c
  40f9e0:	dec    eax
  40f9e1:	push   cs
  40f9e2:	inc    esp
  40f9e3:	or     al,BYTE PTR [ebx-0x6b]
  40f9e6:	call   0xd2ff:0x6eb79c20
  40f9ed:	add    DWORD PTR [edi+0xabb86c9],esi
  40f9f3:	fnstsw WORD PTR [ebx+ebx*2-0x632a295d]
  40f9fa:	leave  
  40f9fb:	(bad)  
  40f9fc:	mov    ebx,0x719f2497
  40fa01:	pop    eax
  40fa02:	mov    edi,0xc9b7f170
  40fa07:	je     0x40fa72
  40fa09:	icebp  
  40fa0a:	pop    ebx
  40fa0b:	ja     0x40f9be
  40fa0d:	sub    al,0x33
  40fa0f:	push   es
  40fa10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa11:	cld    
  40fa12:	or     esi,ebx
  40fa14:	jle    0x40f9a5
  40fa16:	retf   0xca55
  40fa19:	test   al,0xb7
  40fa1b:	fsub   DWORD PTR [edx]
  40fa1d:	loop   0x40f9d1
  40fa1f:	imul   ecx,DWORD PTR [ecx],0x7e
  40fa22:	add    edi,DWORD PTR [ebp-0x65]
  40fa25:	and    eax,0x3aca5650
  40fa2a:	lahf   
  40fa2b:	mov    ecx,0xce583ea0
  40fa30:	jno    0x40fa2f
  40fa32:	in     al,0xea
  40fa34:	inc    ecx
  40fa35:	loope  0x40f9bf
  40fa37:	xchg   edx,eax
  40fa38:	mov    ?,WORD PTR [edi+0x14]
  40fa3b:	push   edi
  40fa3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3d:	mov    esp,0xbf54ff4c
  40fa42:	icebp  
  40fa43:	xlat   BYTE PTR ds:[ebx]
  40fa44:	ja     0x40fa1b
  40fa46:	iret   
  40fa47:	stc    
  40fa48:	call   0xc814:0x3a428dd6
  40fa4f:	push   edx
  40fa50:	adc    bl,bl
  40fa52:	sub    BYTE PTR [esi+0x25],bh
  40fa55:	sti    
  40fa56:	pop    ds
  40fa57:	cli    
  40fa58:	js     0x40fa34
  40fa5a:	sbb    eax,0x69c354e5
  40fa5f:	xchg   ecx,eax
  40fa60:	test   esi,0x17ad7870
  40fa66:	aaa    
  40fa67:	scas   al,BYTE PTR es:[edi]
  40fa68:	(bad)  
  40fa69:	in     al,dx
  40fa6a:	cmp    DWORD PTR [ebx-0x25],esp
  40fa6d:	lock int 0x6b
  40fa70:	(bad)  
  40fa71:	pop    ds
  40fa72:	push   esp
  40fa73:	mov    dl,0x93
  40fa75:	mov    ah,0xa0
  40fa77:	jle    0x40fac8
  40fa79:	iret   
  40fa7a:	leave  
  40fa7b:	jecxz  0x40fa40
  40fa7d:	cld    
  40fa7e:	je     0x414e2f
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a829,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7e1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7e1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7e1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7e1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7e1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7e1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7e1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7e1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40faf8
  40fb0f:	pushf  
  40fb10:	out    0x66,al
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fabc
  40fb1b:	iret   
  40fb1c:	pushf  
  40fb1d:	hlt    
  40fb1e:	jne    0x40faa7
  40fb20:	inc    esp
  40fb21:	dec    ebx
  40fb22:	push   cs
  40fb23:	int3   
  40fb24:	int3   
  40fb25:	mov    dh,0x8a
  40fb27:	push   ebx
  40fb28:	cmp    edi,esi
  40fb2a:	mov    WORD PTR ds:0x8e7a0c0b,ds
  40fb30:	mov    DWORD PTR [esi-0x359710da],esp
  40fb36:	cwde   
  40fb37:	clc    
  40fb38:	pop    ds
  40fb39:	lods   eax,DWORD PTR ds:[esi]
  40fb3a:	(bad)  
  40fb3c:	pushf  
  40fb3d:	pop    eax
  40fb3e:	(bad)  
  40fb3f:	stc    
  40fb40:	addr16 mov ecx,0xea475d24
  40fb46:	sub    esp,DWORD PTR [ebp-0x3cc46b41]
  40fb4c:	inc    edx
  40fb4d:	sar    DWORD PTR [edi+0x32],cl
  40fb50:	out    dx,al
  40fb51:	mov    ebp,0xdc379951
  40fb56:	xchg   DWORD PTR [edi],esp
  40fb58:	ficom  WORD PTR [edx-0x1afd7d9a]
  40fb5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb5f:	dec    esp
  40fb60:	push   esi
  40fb61:	retf   
  40fb62:	ror    DWORD PTR [eax],1
  40fb64:	pop    edx
  40fb65:	call   DWORD PTR [edi]
  40fb67:	add    BYTE PTR [esi-0x3780f11b],0xe5
  40fb6e:	jmp    0x7321c26a
  40fb73:	add    BYTE PTR [edi+0x2f89a75c],dh
  40fb79:	test   DWORD PTR [edi-0x3b],ecx
  40fb7c:	mov    cl,0xb7
  40fb7e:	cmc    
  40fb7f:	jo     0x40fbb4
  40fb81:	stos   DWORD PTR es:[edi],eax
  40fb82:	icebp  
  40fb83:	mov    cl,0x62
  40fb85:	je     0x40fb9d
  40fb87:	and    al,0xc9
  40fb89:	sahf   
  40fb8a:	jne    0x40fbd4
  40fb8c:	and    ecx,DWORD PTR [esi+0x191f4e0a]
  40fb92:	dec    ecx
  40fb93:	sahf   
  40fb94:	test   BYTE PTR [eax-0x6df1a98],ch
  40fb9a:	adc    eax,0xb21ed154
  40fb9f:	in     al,dx
  40fba0:	pusha  
  40fba1:	jg     0x40fbb3
  40fba3:	inc    eax
  40fba4:	bound  ebx,QWORD PTR [ecx-0x19]
  40fba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba8:	jnp    0x40fb5e
  40fbaa:	inc    DWORD PTR [edx+0x419cf95f]
  40fbb0:	sahf   
  40fbb1:	imul   edx,DWORD PTR ds:0x6d3a7973,0x3cb8149d
  40fbbb:	or     al,0x11
  40fbbd:	mov    edi,0x363a9da1
  40fbc2:	(bad)  
  40fbc3:	call   0xf29f0f22
  40fbc8:	xor    al,0xa0
  40fbca:	xor    edx,DWORD PTR [edx]
  40fbcc:	fs stos BYTE PTR es:[edi],al
  40fbce:	xor    esi,DWORD PTR es:[edi+0x71]
  40fbd2:	retf   0x3029
  40fbd5:	stos   DWORD PTR es:[edi],eax
  40fbd6:	lods   al,BYTE PTR ds:[esi]
  40fbd7:	not    BYTE PTR [esi]
  40fbd9:	add    eax,0xb6b9ceb6
  40fbde:	jmp    0x2c82:0xcf4c987e
  40fbe5:	sbb    eax,0x913fd3f0
  40fbea:	xor    bh,BYTE PTR [edx-0x7c156efc]
  40fbf0:	imul   edx,DWORD PTR [ebp-0xe02e5d2],0x5b
  40fbf7:	(bad)  [eax]
  40fbf9:	data16 arpl WORD PTR [ecx+0x280519f9],cx
  40fc00:	and    ch,dh
  40fc02:	clc    
  40fc03:	and    bh,BYTE PTR [esi-0x6fca8b4c]
  40fc09:	and    eax,DWORD PTR [ebx]
  40fc0b:	shl    DWORD PTR [edi+0x582059d5],1
  40fc11:	imul   ebp,DWORD PTR [ebx+0x20],0x766497d8
  40fc18:	pop    es
  40fc19:	or     cl,ah
  40fc1b:	out    0x3f,al
  40fc1d:	lahf   
  40fc1e:	inc    ebp
  40fc1f:	jnp    0x40fbec
  40fc21:	int    0xb9
  40fc23:	xor    BYTE PTR [edi+0x13],0x2f
  40fc27:	iret   
  40fc28:	push   ds
  40fc29:	in     eax,dx
  40fc2a:	cmp    esi,esp
  40fc2c:	sbb    BYTE PTR [ecx],dh
  40fc2e:	fbld   TBYTE PTR cs:[esi-0x4c]
  40fc32:	cmp    ebp,eax
  40fc34:	popf   
  40fc35:	xor    eax,0xab263b1
  40fc3a:	sub    al,0xf5
  40fc3c:	mul    BYTE PTR [edx+0x429f319e]
  40fc42:	fstp   DWORD PTR [ecx+0x278bcf7a]
  40fc48:	xchg   ebx,eax
  40fc49:	ror    DWORD PTR [esi+eax*1+0x2ab25ea2],0x94
  40fc51:	popf   
  40fc52:	xor    esi,DWORD PTR [esi]
  40fc54:	test   DWORD PTR [esi],eax
  40fc56:	je     0x40fcc5
  40fc58:	ret    0x44a8
  40fc5b:	or     dh,BYTE PTR [esp+esi*4+0x58]
  40fc5f:	mov    al,0xc
  40fc61:	cmc    
  40fc62:	xchg   BYTE PTR [ebx],ch
  40fc64:	shr    BYTE PTR [edx],cl
  40fc66:	fsubr  QWORD PTR [edi]
  40fc68:	loop   0x40fc16
  40fc6a:	pop    edi
  40fc6b:	xor    al,0xc7
  40fc6d:	fs push esp
  40fc6f:	jmp    0x68de:0x88bcf903
  40fc76:	mov    bh,0xe5
  40fc78:	pop    esp
  40fc7a:	fisttp DWORD PTR [edi+0x7c]
  40fc7d:	call   0x66b8ff8d
  40fc82:	xor    bh,bh
  40fc84:	mov    edi,0x12c0ea3a
  40fc89:	stos   DWORD PTR es:[edi],eax
  40fc8a:	cwde   
  40fc8b:	pop    ecx
  40fc8c:	ja     0x40fcd9
  40fc8e:	imul   DWORD PTR [eax+0x3539c332]
  40fc94:	jecxz  0x40fc4e
  40fc96:	pop    ss
  40fc97:	inc    esp
  40fc98:	fidiv  DWORD PTR [ebp+0x6a73cff8]
  40fc9e:	jb     0x40fcb9
  40fca0:	xchg   ebx,eax
  40fca1:	shl    DWORD PTR [edi+0x30bb84d5],cl
  40fca7:	in     al,0xef
  40fca9:	inc    edi
  40fcaa:	dec    esp
  40fcab:	jo     0x40fc6c
  40fcad:	or     al,0xaa
  40fcaf:	inc    eax
  40fcb0:	icebp  
  40fcb1:	inc    ebx
  40fcb2:	add    DWORD PTR [edi+0x57],ecx
  40fcb5:	aas    
  40fcb6:	daa    
  40fcb7:	or     ebp,0x49
  40fcba:	add    eax,0xf0eaffcc
  40fcbf:	and    bl,cl
  40fcc1:	xchg   edx,eax
  40fcc2:	fild   WORD PTR [bp+di-0x2c]
  40fcc6:	push   esp
  40fcc7:	leave  
  40fcc8:	pop    es
  40fcc9:	push   0xa991b4d9
  40fcce:	cmc    
  40fccf:	lock fstp st(4)
  40fcd2:	adc    eax,0x9cfaa2b7
  40fcd7:	bound  edi,QWORD PTR [eax]
  40fcd9:	sahf   
  40fcda:	mov    bl,0xfa
  40fcdc:	ror    BYTE PTR [ecx-0x433714c0],1
  40fce2:	and    DWORD PTR [edi-0x796c813],edx
  40fce8:	div    DWORD PTR [ebp+0x5abc8c39]
  40fcee:	or     al,0xe1
  40fcf0:	call   0x2c76:0xc0e33a16
  40fcf7:	ja     0x40fcc5
  40fcf9:	or     ch,BYTE PTR [ebx]
  40fcfb:	or     ah,BYTE PTR [ebx]
  40fcfd:	sbb    edi,DWORD PTR [esi]
  40fcff:	popa   
  40fd00:	(bad)  
  40fd01:	sti    
  40fd02:	ja     0x40fc89
  40fd04:	jno    0xe420ee71
  40fd0a:	xor    ch,al
  40fd0c:	shr    BYTE PTR [eax+edx*4],0x1b
  40fd10:	cdq    
  40fd11:	cmc    
  40fd12:	add    ch,BYTE PTR [ebx+ecx*4]
  40fd15:	mov    edx,0xa77e0209
  40fd1a:	or     DWORD PTR [edx],edx
  40fd1c:	hlt    
  40fd1d:	gs xor al,0xd9
  40fd20:	imul   DWORD PTR [edx+edx*8-0x4adf2718]
  40fd27:	addr16 pop ss
  40fd29:	retf   
  40fd2a:	inc    ecx
  40fd2b:	mov    esi,DWORD PTR [esi+0x33]
  40fd2e:	cmp    esi,DWORD PTR [eax+0x131f2cc1]
  40fd34:	jg     0x40fd5b
  40fd36:	xchg   DWORD PTR ds:[ecx-0x7a],ebp
  40fd3a:	and    BYTE PTR ds:0x12ef608a,bh
  40fd40:	hlt    
  40fd41:	xchg   ecx,eax
  40fd42:	or     BYTE PTR [edi-0x55],dl
  40fd45:	int    0xb4
  40fd47:	in     al,dx
  40fd48:	sub    ecx,0xffffffda
  40fd4b:	pop    esi
  40fd4c:	xor    DWORD PTR [ebx+0x2d0e456c],0x52d73b21
  40fd56:	add    DWORD PTR [esi],esp
  40fd58:	nop
  40fd59:	in     al,dx
  40fd5a:	loop   0x40fcf4
  40fd5c:	xor    BYTE PTR ds:0xc243da69,0x2a
  40fd63:	addr16 mov ebx,0x665e424b
  40fd69:	ss sub dl,dh
  40fd6c:	(bad)  
  40fd6d:	lods   eax,DWORD PTR ds:[esi]
  40fd6e:	pop    edi
  40fd6f:	mov    ds:0x4b0f93f0,eax
  40fd74:	fstp   DWORD PTR [eax]
  40fd76:	mov    esp,0xd312fab2
  40fd7b:	and    ch,bh
  40fd7d:	(bad)  
  40fd7e:	(bad)  
  40fd7f:	dec    esi
  40fd80:	out    0x3,eax
  40fd82:	push   edx
  40fd83:	xchg   edx,eax
  40fd84:	cs sub edi,edx
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	es mov bh,0xdc
  40fdbe:	and    DWORD PTR [edx+0x4b],edi
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	sahf   
  40fdc8:	and    al,0x3
  40fdca:	icebp  
  40fdcb:	mov    edx,0x993aa0e4
  40fdd0:	and    DWORD PTR [ecx-0x5],0x81a4f1a1
  40fdd7:	test   eax,0x353a4ec5
  40fddc:	xor    cl,BYTE PTR [esi]
  40fdde:	push   es
  40fddf:	pusha  
  40fde0:	sti    
  40fde1:	sbb    al,0x81
  40fde3:	cmp    eax,0xa6566281
  40fde8:	gs push esi
  40fdea:	or     ebp,DWORD PTR [edi]
  40fdec:	aas    
  40fded:	dec    edx
  40fdee:	or     eax,0x39069de1
  40fdf3:	dec    edi
  40fdf4:	sub    ebp,DWORD PTR [ecx+0x4e]
  40fdf7:	sub    BYTE PTR [edx-0x76b2b90e],0xc3
  40fdfe:	mov    ch,0x8a
  40fe00:	sbb    DWORD PTR [esi-0xf],ebx
  40fe03:	sub    DWORD PTR [ecx-0xd],ebp
  40fe06:	aas    
  40fe07:	push   esi
  40fe08:	inc    ebx
  40fe09:	das    
  40fe0a:	dec    ebx
  40fe0b:	inc    edx
  40fe0c:	ret    
  40fe0d:	sub    al,0x8b
  40fe0f:	in     eax,dx
  40fe10:	shl    BYTE PTR [ecx],0xc2
  40fe13:	add    BYTE PTR [ebp-0x75],0x71
  40fe17:	test   BYTE PTR [esi+0x3e],ch
  40fe1a:	scas   eax,DWORD PTR es:[edi]
  40fe1b:	add    DWORD PTR fs:[ecx-0x4c],ebx
  40fe1f:	push   ds
  40fe20:	and    eax,0xeecbe833
  40fe25:	data16 mul ch
  40fe28:	pop    ecx
  40fe29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2a:	mov    ds:0x52cbf534,eax
  40fe2f:	ficom  DWORD PTR [edi+0x4a04f244]
  40fe35:	adc    al,0x81
  40fe37:	jl     0x40fe7b
  40fe39:	lods   al,BYTE PTR ds:[esi]
  40fe3a:	add    al,0x63
  40fe3c:	adc    al,0xcf
  40fe3e:	xchg   ecx,eax
  40fe3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe40:	mov    WORD PTR [edi],ss
  40fe42:	stc    
  40fe43:	call   DWORD PTR ds:0x7cf0c881
  40fe49:	xchg   DWORD PTR [edi],ebp
  40fe4b:	sub    al,0x7e
  40fe4d:	(bad)  
  40fe4e:	loopne 0x40fdf6
  40fe50:	pop    edi
  40fe51:	mov    ds:0x1e49a36a,al
  40fe56:	mov    esi,0x1dc07cd6
  40fe5b:	and    BYTE PTR [edi],ah
  40fe5d:	pop    ds
  40fe5e:	mov    cl,0xbd
  40fe60:	xchg   esp,edi
  40fe62:	pushf  
  40fe63:	ds addr16 dec ebx
  40fe66:	sti    
  40fe67:	gs enter 0x5a27,0x5b
  40fe6c:	sbb    eax,0xaf69c229
  40fe71:	jns    0x40fe8e
  40fe73:	push   edi
  40fe74:	or     al,0xd8
  40fe76:	fs ret 
  40fe78:	adc    ebx,ebx
  40fe7a:	pusha  
  40fe7b:	mov    DWORD PTR [edx-0x52],edx
  40fe7e:	loopne 0x40fe7e
  40fe80:	ja     0x40febb
  40fe82:	mov    al,0x95
  40fe84:	lock shl ah,0x5c
  40fe88:	stos   DWORD PTR es:[edi],eax
  40fe89:	and    dh,al
  40fe8b:	xchg   ecx,eax
  40fe8c:	jmp    0x75db:0x67cce3fe
  40fe93:	div    DWORD PTR [edx]
  40fe95:	pop    edx
  40fe96:	popf   
  40fe97:	adc    eax,0xb18e397b
  40fe9c:	pop    esp
  40fe9d:	mov    ds:0xa0fa0e85,eax
  40fea2:	cmp    ebx,ebp
  40fea4:	dec    ebx
  40fea5:	les    esp,FWORD PTR [edi+0x1d]
  40fea8:	push   eax
  40fea9:	add    eax,0x49cc3149
  40feae:	int3   
  40feaf:	stos   BYTE PTR es:[edi],al
  40feb0:	data16 and al,0x2f
  40feb3:	or     ah,bl
  40feb5:	xlat   BYTE PTR ds:[ebx]
  40feb6:	push   ss
  40feb7:	cwde   
  40feb8:	jge    0x40ff10
  40feba:	fcomp  QWORD PTR [edx]
  40febc:	adc    ebp,DWORD PTR [eax-0x741aeb02]
  40fec2:	loopne 0x40fe77
  40fec4:	or     dl,al
  40fec6:	ja     0x40fee7
  40fec8:	mov    edx,0x241dbc80
  40fecd:	cmc    
  40fece:	sub    ah,BYTE PTR [ecx+eax*1]
  40fed1:	mov    al,ds:0x223c52aa
  40fed6:	jl     0x40ff0b
  40fed8:	adc    DWORD PTR [ebp-0x149a9ad3],edx
  40fede:	cs push edx
  40fee0:	pop    es
  40fee1:	and    esp,DWORD PTR [eax]
  40fee3:	loope  0x40feaf
  40fee5:	fadd   DWORD PTR [ebx-0x10b7fe77]
  40feeb:	mov    bh,0x99
  40feed:	jp     0x40ff2c
  40feef:	xor    ch,BYTE PTR [esi]
  40fef1:	rcr    DWORD PTR [esi+0x27332503],0xb4
  40fef8:	test   dl,dl
  40fefa:	xchg   ecx,eax
  40fefb:	fist   DWORD PTR [ebx-0xd331081]
  40ff01:	mov    dl,0xa9
  40ff03:	or     edi,DWORD PTR [eax+eiz*2+0x3a]
  40ff07:	sub    bl,ch
  40ff09:	jmp    0x2b933244
  40ff0e:	pop    ebx
  40ff0f:	aam    0xdc
  40ff11:	aaa    
  40ff12:	or     al,0x36
  40ff14:	adc    al,0x91
  40ff16:	gs in  eax,dx
  40ff18:	pushf  
  40ff19:	cmp    ebp,DWORD PTR [edi+0x10]
  40ff1c:	mov    ds:0xe819d6e3,eax
  40ff21:	mov    dh,BYTE PTR [bp+si+0xbc9]
  40ff26:	fnstcw WORD PTR [edx-0x4b1f170d]
  40ff2c:	or     ebx,DWORD PTR ds:0x2b99c5be
  40ff32:	push   edx
  40ff33:	mov    eax,ds:0x6d264cf6
  40ff38:	std    
  40ff39:	xor    al,0xc4
  40ff3b:	mov    ebx,DWORD PTR [edi]
  40ff3d:	dec    eax
  40ff3e:	ja     0x40ff7e
  40ff40:	inc    esp
  40ff41:	sub    DWORD PTR [ecx+0x17c00795],eax
  40ff47:	arpl   WORD PTR ds:0x24f7d6b1,sp
  40ff4d:	jno    0x40ffbe
  40ff4f:	(bad)  
  40ff50:	ds std 
  40ff52:	mov    esi,DWORD PTR [edi]
  40ff54:	(bad)  
  40ff55:	scas   eax,DWORD PTR es:[edi]
  40ff56:	and    eax,0xee9b55c6
  40ff5b:	jmp    0x40ff39
  40ff5d:	pop    esp
  40ff5e:	jb     0x40ff69
  40ff60:	inc    edx
  40ff61:	imul   eax,DWORD PTR [esi+0x1f],0x70002347
  40ff68:	ins    DWORD PTR es:[edi],dx
  40ff69:	push   ebx
  40ff6a:	test   BYTE PTR [edi+edi*1],ah
  40ff6d:	xor    ch,BYTE PTR [ecx]
  40ff6f:	jecxz  0x40ffac
  40ff71:	mov    dh,0x91
  40ff73:	jp     0x40ffcc
  40ff75:	jl     0x40ff33
  40ff77:	imul   edi,ebp,0x4e360c33
  40ff7d:	cmp    eax,0x44398d76
  40ff82:	retf   0x745b
  40ff85:	mov    ebx,0x49b84c3e
  40ff8a:	(bad)  
  40ff8b:	jno    0x40ff2b
  40ff8d:	jmp    0x40ffda
  40ff8f:	mov    cl,0x88
  40ff91:	jecxz  0x40ff8a
  40ff93:	cld    
  40ff94:	ror    DWORD PTR [esp+eiz*4-0x69],0x32
  40ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9a:	jns    0x40ff23
  40ff9c:	dec    esp
  40ff9d:	dec    ebp
  40ff9e:	jmp    0x3f52:0x46a470a1
  40ffa5:	into   
  40ffa6:	test   edi,esp
  40ffa8:	cmp    al,BYTE PTR [eax]
  40ffaa:	xor    BYTE PTR [edi],dl
  40ffac:	mov    ebp,0x1cbd3451
  40ffb1:	bound  edi,QWORD PTR [edx-0x68]
  40ffb4:	das    
  40ffb5:	aaa    
  40ffb6:	icebp  
  40ffb7:	out    dx,eax
  40ffb8:	xor    al,0xc3
  40ffba:	mov    cl,0x7d
  40ffbc:	lods   eax,DWORD PTR ds:[esi]
  40ffbd:	xor    DWORD PTR [edx],0xffffffc9
  40ffc0:	push   cs
  40ffc1:	add    al,0x77
  40ffc3:	cmp    edi,DWORD PTR [edx]
  40ffc5:	or     esi,esi
  40ffc7:	(bad)  
  40ffc8:	push   0x3d
  40ffca:	test   eax,0xf86efb8e
  40ffcf:	push   0x47e546f8
  40ffd4:	ret    0xe323
  40ffd7:	imul   BYTE PTR [ecx-0x35]
  40ffda:	xor    al,0xf8
  40ffdc:	clc    
  40ffdd:	and    dh,BYTE PTR [edi+0x63]
  40ffe0:	jne    0x40ff8c
  40ffe2:	jne    0x410019
  40ffe4:	popf   
  40ffe5:	lea    ebp,[edx]
  40ffe7:	or     edx,DWORD PTR [eax+0x30]
  40ffea:	inc    ebx
  40ffeb:	jo     0x40ffbf
  40ffed:	dec    ebp
  40ffee:	mov    cl,dh
  40fff0:	fdiv   DWORD PTR [ecx+edx*8-0x54]
  40fff4:	frstor es:[edi+0x2e34966b]
  40fffb:	repz cmp eax,0xab0237d0
  410001:	dec    esp
  410002:	mov    bl,cl
  410004:	push   0x7
  410006:	test   BYTE PTR [esi+ecx*4],al
  410009:	leave  
  41000a:	cwde   
  41000b:	and    BYTE PTR [edi-0x16cf1256],dh
  410011:	(bad)  
  410012:	xor    eax,0xe34888c6
  410017:	sub    al,0x74
  410019:	mov    WORD PTR [esi-0x75fb117f],ss
  41001f:	dec    esp
  410020:	jbe    0x41007a
  410022:	mov    ds:0xe1528508,eax
  410027:	int    0xe7
  410029:	sbb    cl,cl
  41002b:	mov    bl,0xb5
  41002d:	push   ebx
  41002e:	shl    bh,0x62
  410031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	lea    edi,[eax+0x72]
  41006b:	or     al,0xe7
  41006d:	dec    eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	sbb    al,dh
  410076:	retf   0x99fb
  410079:	mov    WORD PTR [ecx-0x6a],?
  41007c:	sbb    BYTE PTR [esi-0x4ec9be67],0xf5
  410083:	xor    eax,0xf55c2430
  410088:	sub    eax,0x16cbdac
  41008d:	fimul  WORD PTR [esi-0x52]
  410090:	mov    ah,BYTE PTR [edx-0x75]
  410093:	data16 jae 0x410067
  410096:	pop    es
  410097:	leave  
  410098:	mov    esp,0x9cfb51d3
  41009d:	popa   
  41009e:	test   BYTE PTR [eax-0x45],ch
  4100a1:	and    dl,bl
  4100a3:	mov    bl,0xb8
  4100a5:	lock push ss
  4100a7:	jae    0x410077
  4100a9:	pop    edi
  4100aa:	iret   
  4100ab:	pusha  
  4100ac:	mul    BYTE PTR [ebp-0x6a465dd5]
  4100b2:	add    BYTE PTR [ebp+0x50658ac4],0xe
  4100b9:	jg     0x410043
  4100bb:	sub    ebx,esp
  4100bd:	in     eax,0xe1
  4100bf:	pop    esp
  4100c0:	push   edx
  4100c1:	idiv   BYTE PTR [eax+0x32]
  4100c4:	pop    esp
  4100c5:	out    dx,al
  4100c6:	lods   al,BYTE PTR ds:[esi]
  4100c7:	cmc    
  4100c8:	sahf   
  4100c9:	ins    DWORD PTR es:[edi],dx
  4100ca:	mov    dl,0xd6
  4100cc:	or     ebp,DWORD PTR es:[edi+0x79]
  4100d0:	sti    
  4100d1:	inc    esi
  4100d2:	test   DWORD PTR [ebx-0x53],ebx
  4100d5:	push   ebp
  4100d6:	in     al,0x22
  4100d8:	ins    DWORD PTR es:[edi],dx
  4100d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100da:	out    dx,al
  4100db:	ins    DWORD PTR es:[edi],dx
  4100dc:	mov    ebx,DWORD PTR [edx+0xc]
  4100df:	push   0xffffffc8
  4100e1:	pop    eax
  4100e2:	(bad)  [ebx+ebp*4-0x2d]
  4100e6:	jo     0x410143
  4100e8:	mov    edx,0xacc2c3c6
  4100ed:	mov    cl,0xf
  4100ef:	and    BYTE PTR [ebx+0x3f585d67],bl
  4100f5:	inc    edx
  4100f6:	mov    esi,0x69017a00
  4100fb:	jg     0x4100ec
  4100fd:	push   ebp
  4100fe:	mov    al,0xc2
  410100:	add    al,0xcc
  410102:	test   cl,0x5a
  410105:	or     BYTE PTR [esi],bl
  410107:	push   es
  410108:	mov    ebx,0xbcaff91c
  41010d:	adc    eax,0x42224c9e
  410112:	retf   
  410113:	ss (bad) 
  410115:	neg    DWORD PTR [esi-0xa08a0cf]
  41011b:	add    edx,DWORD PTR [esi]
  41011d:	jb     0x41019e
  41011f:	add    cl,BYTE PTR [eax+0x19]
  410122:	jbe    0x41018c
  410124:	hlt    
  410125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410126:	lods   al,BYTE PTR ds:[esi]
  410127:	jb     0x410121
  410129:	js     0x4100b4
  41012b:	in     eax,0xb6
  41012d:	stos   BYTE PTR es:[edi],al
  41012e:	cmp    DWORD PTR [edi],ecx
  410130:	jbe    0x41011f
  410132:	jns    0x410197
  410134:	aaa    
  410135:	or     dh,BYTE PTR [eax+0x5a4463f6]
  41013b:	mov    ebx,0xf0d20010
  410140:	repz das 
  410142:	mov    bl,0x66
  410144:	or     bl,bh
  410146:	nop
  410147:	dec    edi
  410148:	fs xor eax,0x85d0011b
  41014e:	shr    BYTE PTR [eax],0x63
  410151:	or     DWORD PTR [edx-0x63a610a4],0x1
  410158:	jmp    0x5f1c:0x718f43bc
  41015f:	pop    ds
  410160:	push   ss
  410161:	cmp    bl,BYTE PTR [edx+0x207f939b]
  410167:	inc    ebx
  410168:	dec    ecx
  410169:	jmp    0x410105
  41016b:	dec    ecx
  41016c:	jp     0x4101b2
  41016e:	enter  0x646c,0x53
  410172:	inc    ecx
  410173:	jbe    0x4101bc
  410175:	ins    BYTE PTR es:[edi],dx
  410176:	test   BYTE PTR [ebx],cl
  410178:	adc    DWORD PTR [esp+edi*4],ebp
  41017b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41017c:	in     eax,dx
  41017d:	ds pop ds
  41017f:	jle    0x410152
  410181:	dec    edi
  410182:	sub    eax,0x5978f290
  410187:	int3   
  410188:	pop    edx
  410189:	sbb    BYTE PTR [edx],0x70
  41018c:	cmp    al,0x7a
  41018e:	or     al,0x50
  410190:	lods   eax,DWORD PTR ds:[esi]
  410191:	scas   eax,DWORD PTR es:[edi]
  410192:	lea    edi,[edi+0x3ea4dd76]
  410198:	test   ecx,ebx
  41019a:	xchg   ecx,eax
  41019b:	into   
  41019c:	enter  0x394d,0x83
  4101a0:	adc    eax,0xe745d2bc
  4101a5:	xchg   ch,bl
  4101a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101a8:	js     0x410209
  4101aa:	pop    eax
  4101ab:	inc    esi
  4101ac:	xlat   BYTE PTR ds:[ebx]
  4101ad:	dec    eax
  4101ae:	mov    esi,0x2280f0e8
  4101b3:	call   0xa2e7:0x7fd9593b
  4101ba:	cmp    DWORD PTR [esi-0x1f046a78],ebp
  4101c0:	hlt    
  4101c1:	dec    ebx
  4101c2:	dec    esp
  4101c3:	inc    edx
  4101c4:	jne    0x410203
  4101c6:	sahf   
  4101c7:	mov    ds:0x2c77fde2,eax
  4101cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101cd:	adc    al,0x31
  4101cf:	lods   eax,DWORD PTR ds:[esi]
  4101d0:	pop    ebx
  4101d1:	add    dl,bh
  4101d3:	mov    ecx,0x2860df66
  4101d8:	push   eax
  4101d9:	dec    edi
  4101da:	add    dh,BYTE PTR [ecx+0x327b2b82]
  4101e0:	inc    edi
  4101e1:	cs out dx,al
  4101e3:	idiv   DWORD PTR [ebp+0x7b]
  4101e6:	sti    
  4101e7:	sahf   
  4101e8:	sar    BYTE PTR [ebp-0x59531652],1
  4101ee:	test   DWORD PTR [esi],esi
  4101f0:	fstp   DWORD PTR [ecx]
  4101f2:	test   al,0x5a
  4101f4:	je     0x4101d5
  4101f6:	adc    al,0x96
  4101f8:	adc    dl,BYTE PTR [esi-0x6c5ed06a]
  4101fe:	inc    ecx
  4101ff:	jo     0x410262
  410201:	and    BYTE PTR [edx+esi*1+0x65],ah
  410205:	and    esp,ebp
  410207:	repnz add al,0x6d
  41020a:	(bad)  
  41020b:	enter  0xf4bc,0xfe
  41020f:	cmp    dh,0xcf
  410212:	adc    eax,0xdedb0b26
  410217:	add    ch,BYTE PTR [eax+0x66]
  41021a:	inc    ecx
  41021b:	call   0x3efa:0x87dae0e7
  410222:	add    ecx,DWORD PTR [esi-0xa85c41d]
  410228:	outs   dx,DWORD PTR es:[esi]
  41022a:	inc    edi
  41022b:	adc    esi,DWORD PTR [edi-0x3c378e52]
  410231:	ins    DWORD PTR es:[edi],dx
  410232:	out    dx,eax
  410233:	jmp    0x24e3:0xc9e5d470
  41023a:	pop    ecx
  41023b:	xor    al,cl
  41023d:	push   esp
  41023e:	ret    
  41023f:	imul   edi,DWORD PTR [esi+0x4f],0xf562e8a8
  410246:	push   es
  410247:	inc    edi
  410248:	and    BYTE PTR [ebp-0x3a],dh
  41024b:	mov    bl,al
  41024d:	mov    esi,0x8ac4b494
  410252:	mov    ds:0xfd9c7873,al
  410257:	shl    BYTE PTR [ebx],cl
  410259:	mov    cl,0xef
  41025b:	mov    edi,0x99d5e2ed
  410260:	inc    edi
  410261:	adc    BYTE PTR [ebx-0xf],dl
  410264:	xor    al,0xb0
  410266:	push   0x4c8732a
  41026b:	mov    al,BYTE PTR [ebp-0x4cef43ea]
  410271:	inc    eax
  410272:	mov    eax,ds:0xd2129f01
  410277:	test   eax,0x7d98fd1f
  41027c:	in     al,0xb9
  41027e:	jmp    0x2b5c:0x137ebb92
  410285:	sub    si,ax
  410288:	ret    
  410289:	mov    al,ds:0xd1f96a20
  41028e:	test   DWORD PTR [eax+0x6d15a132],ebp
  410294:	addr16 xchg edx,eax
  410296:	cmp    BYTE PTR [ebx+0x7140e454],ch
  41029c:	ret    0xcce5
  41029f:	jmp    0x88ce6066
  4102a4:	xor    DWORD PTR [ecx],ebx
  4102a6:	fs inc ebp
  4102a8:	push   es
  4102a9:	push   0x5558cac2
  4102ae:	xor    DWORD PTR [edi-0xf],edi
  4102b1:	sti    
  4102b2:	xor    DWORD PTR [edx],esp
  4102b4:	inc    eax
  4102b5:	sub    cl,ah
  4102b7:	mov    ah,0x38
  4102b9:	mov    edi,0x59c9fcfb
  4102be:	enter  0x8e0a,0xe6
  4102c2:	int    0xbe
  4102c4:	inc    edx
  4102c5:	nop
  4102c6:	ret    0xbb9
  4102c9:	icebp  
  4102ca:	sub    eax,0x709ef782
  4102cf:	inc    edi
  4102d0:	cmp    al,ah
  4102d2:	sti    
  4102d3:	adc    ebx,DWORD PTR [ebx]
  4102d5:	push   0xffffff9d
  4102d7:	push   0x72c8ff5f
  4102dc:	pop    eax
  4102dd:	ret    
  4102de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	fimul  WORD PTR [edx+esi*1+0x784e4c63]
  4102f9:	js     0x4102e0
  4102fb:	jle    0x410375
  4102fd:	js     0x4102bb
  4102ff:	jne    0x41028e
  410301:	or     eax,0x500ea4ab
  410306:	repz pop esi
  410308:	pop    ds
  410309:	or     al,0xe1
  41030b:	xchg   DWORD PTR [eax+0x8aa3f2c],ecx
  410311:	or     DWORD PTR [edx],eax
  410313:	mov    al,ds:0xff8baba5
  410318:	dec    esi
  410319:	jle    0x41035b
  41031b:	outs   dx,DWORD PTR ds:[esi]
  41031c:	and    ah,BYTE PTR [ebp-0x2e]
  41031f:	lea    esp,[ebp-0x276a7b57]
  410325:	jae    0x4102d2
  410327:	lods   eax,DWORD PTR ds:[esi]
  410328:	mov    ah,0xf1
  41032a:	sub    dl,BYTE PTR [esi-0x55]
  41032d:	inc    esp
  41032e:	call   DWORD PTR ds:0x71c2a46
  410334:	outs   dx,BYTE PTR ds:[esi]
  410335:	push   edx
  410336:	dec    edi
  410337:	call   0xf26e2057
  41033c:	shl    bl,0x59
  41033f:	adc    edi,eax
  410341:	and    al,0x87
  410343:	sbb    BYTE PTR ss:[esi-0x5b],ah
  410347:	stos   BYTE PTR es:[edi],al
  410348:	call   0x57dd:0x433dda73
  41034f:	sub    eax,0x6bd78c05
  410354:	jno    0x4103ac
  410356:	and    bh,dl
  410358:	add    cl,ch
  41035a:	mov    bl,0xd2
  41035c:	das    
  41035d:	xor    ch,BYTE PTR [ecx-0x6f4d7494]
  410363:	pop    ds
  410364:	pop    ebp
  410365:	rcr    DWORD PTR [ebx],1
  410367:	leave  
  410368:	es mov eax,0x5ef4b333
  41036e:	xchg   edx,eax
  41036f:	(bad)  
  410370:	inc    DWORD PTR [edi+0x7e]
  410373:	jmp    0x1ff:0x9428371e
  41037a:	pushf  
  41037b:	rcr    DWORD PTR [ebp+0xc9e2336],1
  410381:	and    dh,dl
  410383:	daa    
  410384:	jl     0x4103c4
  410386:	pop    ecx
  410387:	mov    bl,0x2e
  410389:	jl     0x410347
  41038b:	jmp    0x16b7:0x552d0eec
  410392:	or     edx,esi
  410394:	add    DWORD PTR [edi],edx
  410396:	in     al,dx
  410397:	jmp    0x41032f
  410399:	dec    eax
  41039a:	aad    0x26
  41039c:	xchg   eax,esi
  41039e:	(bad)  
  41039f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a0:	(bad)  [ecx+eiz*2+0x11]
  4103a4:	popa   
  4103a5:	push   ecx
  4103a6:	dec    edi
  4103a7:	sub    ebx,DWORD PTR [ebx-0x5b]
  4103aa:	adc    BYTE PTR [esi+0x4fc1a1c9],0xef
  4103b1:	fstp   QWORD PTR [edi+eax*8]
  4103b4:	jnp    0x4103aa
  4103b6:	jnp    0x410429
  4103b8:	xor    cl,BYTE PTR [ecx-0x5e915153]
  4103be:	mov    bh,BYTE PTR ds:0xd43a8601
  4103c4:	xchg   esi,eax
  4103c5:	mov    ds:0x25959f39,eax
  4103ca:	outs   dx,BYTE PTR ds:[esi]
  4103cb:	fdiv   QWORD PTR [esi-0x44]
  4103ce:	lea    ebx,[ebx]
  4103d0:	mov    dh,0x1f
  4103d2:	pop    ecx
  4103d3:	lock mov WORD PTR [ecx],gs
  4103d6:	ins    DWORD PTR es:[edi],dx
  4103d7:	popf   
  4103d8:	cmp    ebx,DWORD PTR [eiz*2-0x307ac1]
  4103df:	(bad)  
  4103e2:	xchg   BYTE PTR [ebx],dl
  4103e4:	repz iret 
  4103e6:	xor    edi,esi
  4103e8:	jmp    0x3899c1b2
  4103ed:	pop    edx
  4103ee:	scas   eax,DWORD PTR es:[edi]
  4103ef:	call   0x51c46f23
  4103f4:	sub    DWORD PTR [ebx-0x6982a192],0xffffff92
  4103fb:	dec    edi
  4103fc:	ret    0xa64e
  4103ff:	push   esp
  410400:	cmp    DWORD PTR [esi+0x7c2dd9ae],ebx
  410406:	add    edi,DWORD PTR [eax]
  410408:	js     0x410480
  41040a:	adc    al,0x73
  41040c:	test   BYTE PTR [eax],bl
  41040e:	jmp    0x4103cf
  410410:	push   ebp
  410411:	dec    eax
  410412:	xor    BYTE PTR [eax+0x81e235b],ch
  410418:	mov    dh,0x6f
  41041a:	lock ret 
  41041c:	cmp    DWORD PTR [esi+0x79],edx
  41041f:	mov    ch,0x30
  410421:	add    ecx,edi
  410423:	add    al,0xe1
  410425:	sub    BYTE PTR [edx-0x7e75de18],dh
  41042b:	inc    ebp
  41042c:	adc    ch,BYTE PTR [ecx-0x6]
  41042f:	jg     0x4104af
  410431:	lds    eax,FWORD PTR [ecx+0x2347d3f4]
  410437:	mov    ah,BYTE PTR [ebx-0x1b444730]
  41043d:	mov    edx,0x3173fafd
  410442:	push   cs
  410443:	js     0x4104c0
  410445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410446:	push   esp
  410447:	and    eax,0xb58aeeea
  41044d:	imul   edx,ecx,0x441858b7
  410453:	or     edi,ebp
  410455:	pop    eax
  410456:	fwait
  410457:	push   eax
  410458:	jmp    0x4104d7
  41045a:	xor    al,bh
  41045c:	fwait
  41045d:	mov    ebp,0xcc31d939
  410462:	aam    0xb7
  410464:	pop    ebx
  410465:	fisub  DWORD PTR [ebx+ecx*2-0x3b]
  410469:	fnstenv [edx+0x48]
  41046c:	push   esi
  41046d:	call   0xc35dac15
  410472:	daa    
  410473:	and    eax,0xdb0c4ef1
  410478:	add    al,0xae
  41047a:	rol    ecx,cl
  41047c:	das    
  41047d:	cmp    BYTE PTR [edx-0x15],al
  410480:	dec    ebp
  410481:	lahf   
  410482:	jmp    0x410418
  410484:	retf   0x26ad
  410487:	push   esp
  410488:	and    DWORD PTR [edx+0x2f],0xffffffd8
  41048c:	retf   0x5253
  41048f:	jno    0x410469
  410491:	(bad)  
  410493:	xor    dl,BYTE PTR [eax]
  410495:	push   ss
  410496:	and    al,0x76
  410498:	sbb    dl,BYTE PTR [eax]
  41049a:	add    ebp,DWORD PTR [edx+0x76]
  41049d:	cmp    BYTE PTR [eax-0xd],ch
  4104a0:	cld    
  4104a1:	mov    al,ds:0x8d400d5c
  4104a6:	fadd   DWORD PTR [edx-0xfb2e5f2]
  4104ac:	pop    es
  4104ad:	sub    al,0xb1
  4104af:	jns    0x410518
  4104b1:	(bad)  
  4104b3:	pop    edx
  4104b4:	mov    ecx,0xc3717c4f
  4104b9:	pop    ds
  4104ba:	mov    ds:0x55cc9a20,eax
  4104bf:	pop    ebx
  4104c0:	lock inc eax
  4104c2:	popa   
  4104c3:	mov    WORD PTR [ebx],ss
  4104c5:	add    DWORD PTR [eax+0x41],0x2b
  4104c9:	cwde   
  4104ca:	push   esp
  4104cb:	dec    edx
  4104cc:	and    BYTE PTR [edi+0x4076012],0x14
  4104d3:	add    al,dl
  4104d5:	pop    ds
  4104d6:	ins    BYTE PTR es:[edi],dx
  4104d7:	(bad)  
  4104d9:	inc    esi
  4104da:	adc    al,0x1e
  4104dc:	jmp    0x8798ae15
  4104e1:	xchg   dh,ah
  4104e3:	inc    eax
  4104e4:	add    eax,0x4877bb6
  4104e9:	icebp  
  4104ea:	stc    
  4104eb:	test   BYTE PTR [ecx],bl
  4104ed:	inc    ebp
  4104ee:	add    bh,BYTE PTR [ecx+0x7a]
  4104f1:	pop    ss
  4104f2:	das    
  4104f3:	icebp  
  4104f4:	aaa    
  4104f5:	shl    ch,0xd7
  4104f8:	scas   eax,DWORD PTR es:[edi]
  4104f9:	scas   al,BYTE PTR es:[edi]
  4104fa:	or     ah,ch
  4104fc:	and    BYTE PTR [edx],0xfc
  4104ff:	mov    WORD PTR [edi+0x63d670aa],ss
  410505:	xchg   ebx,eax
  410506:	gs push edi
  410508:	sub    BYTE PTR [edi-0x26],ah
  41050b:	cdq    
  41050c:	mov    ebp,0x59d1ea9e
  410511:	push   es
  410512:	aas    
  410513:	fs push es
  410515:	clc    
  410516:	data16 ficom WORD PTR [ecx+eiz*4+0x252961f6]
  41051e:	mov    ch,0x2c
  410520:	test   eax,0x2121527e
  410525:	push   edx
  410526:	arpl   WORD PTR [esi-0x294fcdf7],di
  41052c:	std    
  41052d:	clc    
  41052e:	jecxz  0x410579
  410530:	push   ss
  410531:	in     eax,0x98
  410533:	xchg   esi,eax
  410534:	shl    BYTE PTR [edi-0x2af4bb49],0x4a
  41053b:	stos   BYTE PTR es:[edi],al
  41053c:	push   ecx
  41053d:	adc    ecx,DWORD PTR [bx+si-0x61d7]
  410542:	(bad)
  410546:	loopne 0x41053a
  410548:	mov    DWORD PTR [ebx],esp
  41054a:	cld    
  41054b:	test   bl,dl
  41054d:	stc    
  41054e:	into   
  41054f:	das    
  410550:	(bad)  
  410551:	out    dx,eax
  410552:	dec    bp
  410554:	cwde   
  410555:	push   es
  410556:	shl    DWORD PTR [ecx-0x69e415ce],0x21
  41055d:	inc    ecx
  41055e:	aad    0xc5
  410560:	cdq    
  410561:	lods   eax,DWORD PTR ds:[esi]
  410562:	out    0x19,eax
  410564:	xchg   ecx,eax
  410565:	cmp    eax,0xf30f8e4
  41056a:	scas   eax,DWORD PTR es:[edi]
  41056b:	xlat   BYTE PTR ds:[ebx]
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	cmp    eax,DWORD PTR [edx-0x12]
  410586:	icebp  
  410587:	cmp    DWORD PTR [ebx+0x78],edx
  41058a:	js     0x410571
  41058c:	jle    0x410606
  41058e:	js     0x410586
  410590:	jmp    0x4997a9ab
  410595:	cmp    DWORD PTR [edx-0x6f146b83],ecx
  41059b:	jmp    0x9568f1df
  4105a0:	shl    DWORD PTR [eax+0x26],0xa9
  4105a4:	pop    edx
  4105a5:	popa   
  4105a6:	in     eax,dx
  4105a7:	and    edx,DWORD PTR [eax]
  4105a9:	pop    ds
  4105aa:	or     ch,BYTE PTR [edi]
  4105ac:	icebp  
  4105ad:	daa    
  4105ae:	or     al,0x4a
  4105b0:	push   eax
  4105b1:	push   edi
  4105b2:	je     0x410580
  4105b4:	dec    ecx
  4105b5:	dec    esp
  4105b6:	test   BYTE PTR [ebp+0x4bc7cc25],0x96
  4105bd:	int    0xdb
  4105bf:	shl    bl,1
  4105c1:	shl    bh,cl
  4105c3:	scas   eax,DWORD PTR es:[edi]
  4105c4:	mov    edx,0xc91c7303
  4105c9:	rcl    BYTE PTR [ecx+ecx*8],1
  4105cc:	mov    ah,BYTE PTR [ebp+ecx*1+0x6]
  4105d0:	test   eax,0x18655de9
  4105d5:	sub    DWORD PTR [ecx+0x5ca07401],0xa1209dc9
  4105df:	cdq    
  4105e0:	daa    
  4105e1:	pop    edx
  4105e2:	push   ebx
  4105e3:	jl     0x410629
  4105e5:	push   es
  4105e6:	test   al,0xb4
  4105e8:	jg     0x4105d2
  4105ea:	(bad)  
  4105eb:	xchg   DWORD PTR [ebp+edi*8+0x2d],esi
  4105ef:	outs   dx,DWORD PTR ds:[esi]
  4105f0:	push   eax
  4105f1:	dec    ebx
  4105f2:	sbb    bl,bh
  4105f4:	fcom   DWORD PTR [ebp+0x1b]
  4105f7:	mov    DWORD PTR [edi-0x5c99e412],esi
  4105fd:	and    ah,BYTE PTR [esi]
  4105ff:	scas   al,BYTE PTR es:[edi]
  410600:	fldenv [edx+eax*2]
  410603:	leave  
  410604:	or     eax,0x90fa100c
  410609:	fcom   DWORD PTR ss:[ecx-0x24e2cf74]
  410610:	in     eax,dx
  410611:	shl    BYTE PTR [ecx+edi*4],1
  410614:	sbb    ah,BYTE PTR [ebp+0x72]
  410617:	add    cl,al
  410619:	lea    ebp,[ecx]
  41061b:	sub    eax,0xa95e1132
  410620:	push   cs
  410621:	jmp    0xce0c:0x62ba071e
  410628:	push   ds
  410629:	cli    
  41062a:	mov    ah,0x4e
  41062c:	(bad)  
  41062d:	push   ds
  41062e:	sbb    BYTE PTR gs:[esi-0x7b],ah
  410632:	outs   dx,DWORD PTR ds:[esi]
  410633:	jp     0x4105cc
  410635:	mov    ebp,0x59e0354
  41063a:	stos   BYTE PTR es:[edi],al
  41063b:	jmp    0x410670
  41063d:	pop    es
  41063e:	mov    ss,ebx
  410640:	xor    DWORD PTR [edi-0x5ed0d8a1],ebp
  410646:	jbe    0x41065d
  410648:	ret    0xd57b
  41064b:	outs   dx,DWORD PTR ds:[esi]
  41064c:	jne    0x4105e1
  41064e:	xchg   ebx,eax
  41064f:	mov    edx,0x16eae441
  410654:	popf   
  410655:	push   esi
  410656:	add    ah,bh
  410658:	and    eax,0x21578b57
  41065d:	jg     0x4105f1
  41065f:	sbb    BYTE PTR [ebx+eax*4],bh
  410662:	mov    al,ds:0x34ee9ef1
  410667:	xchg   edi,eax
  410668:	xor    eax,DWORD PTR [ebx]
  41066a:	or     al,al
  41066c:	in     eax,0xb4
  41066e:	jle    0x4106ae
  410670:	mov    dh,0x68
  410672:	cld    
  410673:	idiv   BYTE PTR [edx-0x66]
  410676:	mov    al,0xd8
  410678:	rcl    ebx,cl
  41067a:	fdiv   QWORD PTR [edi+0x11d70684]
  410680:	jnp    0x410614
  410682:	les    ebp,FWORD PTR ds:0x3c5a6dfe
  410688:	stos   BYTE PTR es:[edi],al
  410689:	retf   0x2fb2
  41068c:	push   edx
  41068d:	sbb    edx,DWORD PTR [edx]
  41068f:	dec    ebp
  410690:	and    edi,esi
  410692:	dec    ebp
  410693:	push   esi
  410694:	(bad)  
  410695:	xlat   BYTE PTR ds:[ebx]
  410696:	mov    eax,0xc3045bab
  41069b:	pop    ebx
  41069c:	push   ecx
  41069d:	inc    ecx
  41069e:	test   al,0x1e
  4106a0:	loope  0x4106a5
  4106a2:	lock mov eax,ds:0xd9e54222
  4106a8:	mov    ebx,0xa9903d32
  4106ad:	pusha  
  4106ae:	xchg   esp,eax
  4106af:	retf   0x7732
  4106b2:	or     BYTE PTR [edi+0x57dff06a],cl
  4106b8:	icebp  
  4106b9:	add    eax,0x148599bb
  4106be:	xor    al,0xf1
  4106c0:	std    
  4106c1:	pop    es
  4106c2:	shl    esp,0x1
  4106c5:	inc    eax
  4106c6:	inc    ebx
  4106c7:	sub    al,0x95
  4106c9:	sbb    ch,al
  4106cb:	mov    esp,0xdab84e4c
  4106d0:	mov    BYTE PTR [ecx+0x5da9b87f],al
  4106d6:	push   ebp
  4106d7:	clc    
  4106d8:	loopne 0x4106fb
  4106da:	ror    esi,1
  4106dc:	sub    esi,ecx
  4106de:	xor    BYTE PTR [edi+0x66],0x5f
  4106e2:	call   0xf207:0x6da8b35b
  4106e9:	cmp    al,0xab
  4106eb:	mov    eax,ds:0xb1122831
  4106f0:	pushf  
  4106f1:	add    BYTE PTR [eax-0x6de477d4],bh
  4106f7:	add    edi,DWORD PTR [ebp+0x3c]
  4106fa:	cld    
  4106fb:	mov    ah,0xfa
  4106fd:	add    dl,BYTE PTR [edi-0x34]
  410700:	mov    bl,0xde
  410702:	pop    edi
  410703:	sbb    eax,0xb5d9abc5
  410708:	jecxz  0x410729
  41070a:	outs   dx,BYTE PTR ds:[esi]
  41070b:	mov    esp,0xd6f132b4
  410710:	lods   al,BYTE PTR ds:[esi]
  410711:	mov    edx,0x45e7c608
  410716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410717:	cwde   
  410718:	inc    esp
  410719:	and    eax,0x67496603
  41071e:	inc    edi
  41071f:	or     dl,BYTE PTR ds:0x8c0b7bc9
  410725:	cmp    ecx,esi
  410727:	dec    ebp
  410728:	jmp    0xbf95c7e9
  41072d:	lahf   
  41072e:	nop
  41072f:	mov    esp,0x4d5dd1d9
  410734:	jg     0x41072e
  410736:	mov    bl,0x5
  410738:	sub    eax,0x3b24405b
  41073d:	es sbb al,0x90
  410740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410741:	xchg   DWORD PTR [esi+0x2962a685],ecx
  410747:	aas    
  410748:	sti    
  410749:	je     0x410778
  41074b:	push   ecx
  41074c:	and    esp,DWORD PTR [edx+0x36]
  41074f:	push   eax
  410750:	fmulp  st(1),st
  410752:	clc    
  410753:	push   esi
  410754:	jle    0x410726
  410756:	and    al,0xa4
  410758:	jmp    0xefd65f02
  41075d:	xor    DWORD PTR [ebp+0x2388ac15],esi
  410763:	out    dx,al
  410764:	popa   
  410765:	mov    edx,DWORD PTR [edi+0xc]
  410768:	loopne 0x4107e4
  41076a:	int    0x92
  41076c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41076d:	pop    edx
  41076e:	add    DWORD PTR [ebp+0x1d],0x10
  410772:	shl    DWORD PTR [edi-0x3d],1
  410775:	and    bl,bh
  410777:	fldcw  WORD PTR [edx-0x6c135d4f]
  41077d:	xchg   ebx,eax
  41077e:	mov    eax,ds:0xc96d5816
  410783:	retf   
  410784:	xchg   bh,cl
  410786:	sub    eax,0x14340267
  41078b:	jae    0x41074d
  41078d:	ret    
  41078e:	in     al,dx
  41078f:	pusha  
  410790:	cmp    edx,DWORD PTR [ebp+0x47]
  410793:	cmp    BYTE PTR [eax-0x63160d3b],0x64
  41079a:	and    eax,0x32192492
  41079f:	add    BYTE PTR [ebx],0xe2
  4107a2:	aaa    
  4107a3:	jae    0x410814
  4107a5:	data16 jae 0x410748
  4107a8:	(bad)  
  4107a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107aa:	in     al,0x45
  4107ac:	add    BYTE PTR [esi],dh
  4107ae:	jl     0x41074b
  4107b0:	enter  0x14a0,0x32
  4107b4:	or     BYTE PTR [ebx+0x658e3a6b],ah
  4107ba:	das    
  4107bb:	mov    al,0xa8
  4107bd:	sar    DWORD PTR [esi+0x2c],1
  4107c0:	fwait
  4107c1:	ret    
  4107c2:	or     dh,ah
  4107c4:	comiss xmm2,DWORD PTR [edx+0x2]
  4107c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c9:	fs fmul st,st(1)
  4107cc:	in     al,0xa2
  4107ce:	in     eax,dx
  4107cf:	test   BYTE PTR [ecx+0x2ee699a7],al
  4107d5:	jnp    0x41075d
  4107d7:	or     BYTE PTR [esi+0x44632fc8],ah
  4107dd:	das    
  4107de:	pop    edx
  4107df:	jmp    DWORD PTR ds:0x2abbd194
  4107e5:	rcr    DWORD PTR [ecx+eiz*2-0x77],0xb
  4107ea:	mov    WORD PTR [edi-0x4],?
  4107ed:	leave  
  4107ee:	mov    edi,0xc0a16ffc
  4107f3:	pop    edx
  4107f4:	mov    cl,0x2e
  4107f6:	in     al,0x2d
  4107f8:	outs   dx,BYTE PTR ds:[esi]
  4107f9:	cmp    BYTE PTR [ebx],ch
  4107fb:	fistp  QWORD PTR [ebx]
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	push   edx
  410810:	aaa    
  410811:	adc    al,0x6c
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	mov    eax,ds:0x653d1799
  410820:	aas    
  410821:	mov    al,0x75
  410823:	test   BYTE PTR [ebx-0x1e],bh
  410826:	mov    cl,0xbd
  410828:	bound  edi,QWORD PTR [ebx+0x6cb5a9b0]
  41082e:	inc    edi
  41082f:	into   
  410830:	sub    dl,BYTE PTR [ebx]
  410832:	js     0x4107ef
  410834:	fdivr  st,st(5)
  410836:	inc    ecx
  410837:	xor    ah,BYTE PTR [edx]
  410839:	jae    0x41081e
  41083b:	mov    BYTE PTR [ebx+0x2c6ad81],ah
  410841:	mov    bl,0x53
  410843:	shr    BYTE PTR [edi+0x3f8c6a3e],cl
  410849:	and    ebx,DWORD PTR [ecx+0x40]
  41084c:	sub    ebp,DWORD PTR [esp+ebp*1-0x7f1fe5a5]
  410853:	aad    0xec
  410855:	jbe    0x4107f3
  410857:	(bad)  
  410858:	pop    eax
  410859:	addr16 (bad) 
  41085b:	jecxz  0x410807
  41085d:	mov    BYTE PTR [ebp+0x42],0x4b
  410861:	jg     0x4108a8
  410863:	addr16 stc 
  410865:	add    BYTE PTR [esi+ebx*4-0x76],bl
  410869:	arpl   WORD PTR [esi+0xefd30fc],ax
  41086f:	and    edx,edx
  410871:	or     BYTE PTR ds:0x38d44c7a,al
  410877:	pushf  
  410878:	inc    esi
  410879:	cmp    al,0xec
  41087b:	shl    DWORD PTR [esp+ecx*8-0x48],1
  41087f:	(bad)  
  410880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410881:	lods   eax,DWORD PTR ds:[esi]
  410882:	xchg   esp,eax
  410883:	jns    0x410850
  410885:	dec    ebp
  410886:	mov    edi,0x49f012da
  41088b:	mov    eax,DWORD PTR [edi]
  41088d:	pop    edx
  41088e:	imul   ebp,DWORD PTR [edx],0x42
  410891:	xor    BYTE PTR [eax],bh
  410893:	push   edi
  410894:	(bad)  
  410895:	push   esi
  410896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410897:	ins    BYTE PTR es:[edi],dx
  410898:	mov    ah,0x85
  41089a:	das    
  41089b:	ss dec eax
  41089d:	iret   
  41089e:	stos   BYTE PTR es:[edi],al
  41089f:	jns    0x41090f
  4108a1:	ds push ds
  4108a3:	test   al,0x6d
  4108a5:	jmp    0xfd915bab
  4108aa:	pop    edi
  4108ab:	retf   0x6701
  4108ae:	push   edx
  4108af:	dec    esp
  4108b0:	mov    ebx,0x3b33edfa
  4108b5:	jp     0x410929
  4108b7:	repz rcl BYTE PTR [edi+0x15f98bb5],0xd5
  4108bf:	into   
  4108c0:	test   DWORD PTR [esi+0x3a],ebp
  4108c3:	int    0x8c
  4108c5:	fcmovbe st,st(6)
  4108c7:	xor    al,0xea
  4108c9:	gs call 0xf4e015dd
  4108cf:	pushf  
  4108d0:	scas   eax,DWORD PTR es:[edi]
  4108d1:	retf   0x450c
  4108d4:	popf   
  4108d5:	ss (bad) 
  4108d7:	dec    ebp
  4108d8:	mov    DWORD PTR [eax-0xa483611],ecx
  4108de:	push   ss
  4108df:	int    0x2c
  4108e1:	hlt    
  4108e2:	in     eax,dx
  4108e3:	outs   dx,DWORD PTR ds:[esi]
  4108e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e5:	enter  0x5e4,0x8b
  4108e9:	cmp    eax,0xdbcbe57a
  4108ee:	(bad)
  4108f1:	js     0x410884
  4108f3:	cmp    dh,BYTE PTR [ecx+eax*1+0x16]
  4108f7:	mov    al,0x9c
  4108f9:	jmp    0xe4857efd
  4108fe:	xor    dh,bh
  410900:	fist   DWORD PTR [edx]
  410902:	add    DWORD PTR [edi],0x6c
  410905:	sbb    eax,0xb413dce4
  41090a:	mov    dh,0xac
  41090c:	(bad)  
  41090d:	out    0x32,eax
  41090f:	cld    
  410910:	retf   0xc5b1
  410913:	and    ebp,ebp
  410915:	inc    edi
  410916:	dec    esp
  410917:	rol    BYTE PTR [ebx+0x11314c46],1
  41091d:	mov    ds:0x9525a441,eax
  410922:	ins    BYTE PTR es:[edi],dx
  410923:	dec    ebp
  410924:	jle    0x4108ca
  410926:	xor    dh,BYTE PTR [edi+esi*4-0x1]
  41092a:	dec    esi
  41092b:	ins    DWORD PTR es:[edi],dx
  41092c:	icebp  
  41092d:	add    al,0xd5
  41092f:	pop    dx
  410931:	mov    al,ds:0xeea4c627
  410936:	gs dec esi
  410938:	sar    BYTE PTR [eax+esi*4-0x64],0xa6
  41093d:	cmp    ebx,esp
  41093f:	sbb    eax,0x1e73cc70
  410944:	cmp    esi,DWORD PTR [ecx+0x2c1f1525]
  41094a:	shr    DWORD PTR [eax+0x7e],0xc1
  41094e:	inc    ebx
  41094f:	data16 mov bh,0xb5
  410952:	fucom  st(0)
  410954:	dec    ebx
  410955:	jb     0x4108de
  410957:	nop
  410958:	in     al,dx
  410959:	push   esi
  41095a:	mov    eax,0x251eca7b
  41095f:	pop    esp
  410960:	test   eax,0xa048e30b
  410965:	bound  eax,QWORD PTR [edi-0x49]
  410968:	shr    DWORD PTR ds:0x20089588,cl
  41096e:	clc    
  41096f:	cmp    al,0x28
  410971:	sbb    BYTE PTR cs:[eax+0x2d],0xfb
  410976:	push   ss
  410977:	and    al,bl
  410979:	scas   eax,DWORD PTR es:[edi]
  41097a:	ins    BYTE PTR es:[edi],dx
  41097b:	pop    edx
  41097c:	ret    
  41097d:	gs stos BYTE PTR es:[edi],al
  41097f:	out    dx,eax
  410980:	push   esp
  410981:	mov    esp,0x99faa832
  410986:	or     DWORD PTR [ecx],0x1ca66f1c
  41098c:	out    0xfe,eax
  41098e:	xlat   BYTE PTR ds:[ebx]
  41098f:	cmp    eax,0x44e95c12
  410994:	mov    dh,0x1f
  410996:	mov    ebx,0x10db6afa
  41099b:	fcmovnb st,st(0)
  41099d:	add    BYTE PTR [ebp+ecx*1+0x20],ch
  4109a1:	dec    eax
  4109a2:	jb     0x41098a
  4109a4:	out    0x93,eax
  4109a6:	aas    
  4109a7:	adc    ebx,DWORD PTR [ecx+0x1]
  4109aa:	or     esi,DWORD PTR [eax]
  4109ac:	pop    ecx
  4109ad:	jnp    0x410986
  4109af:	add    edx,DWORD PTR [ebx+ebx*8+0x7a]
  4109b3:	out    0x85,al
  4109b5:	xchg   BYTE PTR [eax],bh
  4109b7:	es ins BYTE PTR es:[edi],dx
  4109b9:	and    BYTE PTR [eax+0xa],al
  4109bc:	outs   dx,BYTE PTR ds:[esi]
  4109bd:	xor    dh,BYTE PTR [eax]
  4109bf:	scas   eax,DWORD PTR es:[edi]
  4109c0:	and    dh,BYTE PTR [ebx-0x46]
  4109c3:	mov    eax,ds:0xe84d685f
  4109c8:	pop    esp
  4109c9:	mov    al,0x36
  4109cb:	and    BYTE PTR [edx+edx*2],ah
  4109ce:	mov    eax,ds:0xeae16b54
  4109d3:	push   ecx
  4109d4:	fld    DWORD PTR [eax+0x4768344f]
  4109da:	je     0x410a4f
  4109dc:	rcl    DWORD PTR [edx+ebp*8],cl
  4109df:	repnz retf 0x3cda
  4109e3:	out    0x8d,eax
  4109e5:	sahf   
  4109e6:	or     eax,edi
  4109e8:	adc    edx,DWORD PTR [ecx-0x281e3c1b]
  4109ee:	push   ebx
  4109ef:	jae    0x4109ff
  4109f1:	iret   
  4109f2:	sar    BYTE PTR [eax+0x6c],1
  4109f5:	cmp    DWORD PTR [edi-0x14e02d84],ecx
  4109fb:	aaa    
  4109fc:	jns    0x4109d5
  4109fe:	sar    BYTE PTR [ebx+0x43ad008a],1
  410a04:	xchg   BYTE PTR [edi+0x3f],dl
  410a07:	jp     0x410a82
  410a09:	pop    esp
  410a0a:	pop    esi
  410a0b:	jbe    0x4109d4
  410a0d:	adc    al,0x4f
  410a0f:	mov    ds:0x73a5a013,al
  410a14:	sar    BYTE PTR [ecx+0x5f2e4e33],cl
  410a1a:	push   ds
  410a1b:	or     DWORD PTR [edx],ebp
  410a1d:	shl    BYTE PTR [ebx+edi*1-0x5e],cl
  410a21:	jle    0x410a3a
  410a23:	es inc ebp
  410a25:	ja     0x4109d1
  410a27:	in     al,0xf8
  410a29:	cwde   
  410a2a:	call   0x212916bb
  410a2f:	sbb    edi,ebp
  410a31:	neg    BYTE PTR [edi]
  410a33:	jo     0x410a5a
  410a35:	fldenv [ebp-0x6d18f6e9]
  410a3b:	xor    al,0x38
  410a3d:	dec    edi
  410a3e:	inc    edx
  410a3f:	lods   al,BYTE PTR ds:[esi]
  410a40:	retf   
  410a41:	push   esi
  410a42:	std    
  410a43:	adc    ah,bl
  410a45:	xlat   BYTE PTR ds:[ebx]
  410a46:	add    edi,DWORD PTR [edi-0x5d41ddb1]
  410a4c:	pop    edi
  410a4d:	cmp    eax,0xdbd425a1
  410a52:	mov    eax,0x371bd7d9
  410a57:	jbe    0x410a0b
  410a59:	cld    
  410a5a:	jns    0x410ad4
  410a5c:	repnz mov BYTE PTR [edx-0x579316db],cl
  410a63:	cwde   
  410a64:	mov    ebx,0xf3b9ff25
  410a69:	stos   BYTE PTR es:[edi],al
  410a6a:	add    esp,eax
  410a6c:	jecxz  0x410a6b
  410a6e:	jge    0x410a56
  410a70:	test   DWORD PTR [ebx-0x79],edi
  410a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a74:	cmp    DWORD PTR [ecx-0x2e3473ab],ebp
  410a7a:	out    0x1,eax
  410a7c:	xchg   esp,eax
  410a7d:	inc    edx
  410a7e:	mov    dh,0x8a
  410a80:	push   cs
  410a81:	mov    al,0xe7
  410a83:	inc    esp
  410a84:	fcmovnu st,st(7)
  410a86:	ja     0x410a94
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	idiv   DWORD PTR [ebp+0x13ed348c]
  410ab4:	push   esi
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	(bad)  
  410abc:	xor    DWORD PTR [esi],edx
  410abe:	das    
  410abf:	xor    eax,0xb9407359
  410ac4:	push   eax
  410ac5:	sub    al,0x4b
  410ac7:	fild   DWORD PTR ds:0xb691cd96
  410acd:	rcpps  xmm2,xmm3
  410ad0:	xchg   esi,eax
  410ad1:	cdq    
  410ad2:	inc    esp
  410ad3:	pop    eax
  410ad4:	retf   0xccbb
  410ad7:	gs push esp
  410ad9:	xor    ebx,ebx
  410adb:	stos   DWORD PTR es:[edi],eax
  410adc:	test   bh,cl
  410ade:	adc    ebx,ecx
  410ae0:	ret    0x897
  410ae3:	mul    edx
  410ae5:	mov    ch,0x68
  410ae7:	mov    edi,0x40e7b0a6
  410aec:	dec    edi
  410aed:	ja     0x410b2f
  410aef:	rcl    ch,1
  410af1:	lods   eax,DWORD PTR ds:[esi]
  410af2:	dec    esp
  410af3:	dec    ecx
  410af4:	inc    ecx
  410af5:	inc    edx
  410af6:	push   0x4d198ee8
  410afb:	(bad)  
  410afc:	sub    eax,0x3ce09da9
  410b01:	jl     0x410b68
  410b03:	mov    esi,0x20f83600
  410b08:	loope  0x410b88
  410b0a:	fsub   QWORD PTR [esi]
  410b0c:	mov    DWORD PTR [esi+edx*4+0x6],0x9774617
  410b14:	sti    
  410b15:	retf   0x3e8b
  410b18:	push   ecx
  410b19:	dec    edi
  410b1a:	pushf  
  410b1b:	enter  0x580a,0x39
  410b1f:	sar    DWORD PTR [esp+ecx*2],cl
  410b22:	fs std 
  410b24:	and    ah,BYTE PTR [ebp+0x4b98166d]
  410b2a:	sbb    al,0x6e
  410b2c:	fistp  DWORD PTR [edi-0x19a675cb]
  410b32:	xchg   ah,ch
  410b34:	xor    BYTE PTR [esi],ch
  410b36:	aam    0xb2
  410b38:	adc    DWORD PTR [edx],esp
  410b3a:	test   al,0x53
  410b3c:	pop    es
  410b3d:	mov    ebx,0xa48ee9c8
  410b42:	cwde   
  410b43:	push   ds
  410b44:	outs   dx,BYTE PTR ds:[esi]
  410b45:	cdq    
  410b46:	repz in eax,0xc4
  410b49:	inc    ecx
  410b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4b:	int3   
  410b4c:	cld    
  410b4d:	mov    ecx,0x70feef9e
  410b52:	sahf   
  410b53:	dec    edi
  410b54:	jp     0x410b2e
  410b56:	and    edx,edi
  410b58:	xchg   DWORD PTR [edx],ecx
  410b5a:	push   esp
  410b5b:	jg     0x410b12
  410b5d:	pop    eax
  410b5e:	int3   
  410b5f:	test   BYTE PTR [esi],bl
  410b61:	push   ebx
  410b62:	jb     0x410b8a
  410b64:	mov    dh,0x6f
  410b66:	loop   0x410ae9
  410b68:	out    dx,eax
  410b69:	gs mov esi,0xd66c7638
  410b6f:	dec    edi
  410b70:	inc    eax
  410b71:	add    BYTE PTR [edi+eiz*4-0x54],0x6e
  410b76:	ss scas eax,DWORD PTR es:[edi]
  410b78:	add    ebp,ecx
  410b7a:	into   
  410b7b:	shr    BYTE PTR [eax+0x7828da29],cl
  410b81:	jl     0x410bc3
  410b83:	aad    0xf0
  410b85:	push   edi
  410b86:	sbb    al,0xb5
  410b88:	or     DWORD PTR [eax-0x36],0x83c8ccbc
  410b8f:	push   0x71
  410b91:	faddp  st(7),st
  410b93:	xor    al,0xc9
  410b95:	xchg   ecx,eax
  410b96:	fwait
  410b97:	pop    ebx
  410b98:	sahf   
  410b99:	jbe    0x410b40
  410b9b:	sbb    BYTE PTR [ecx],bh
  410b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b9e:	mov    cl,0x6c
  410ba0:	mov    bh,0xf5
  410ba2:	or     edi,DWORD PTR [eax-0x29cb913]
  410ba8:	jmp    0x410bb0
  410baa:	sub    ebp,DWORD PTR ds:[ebp-0x2e1e6029]
  410bb1:	sub    eax,0x71e32335
  410bb6:	and    eax,0x88ec47e0
  410bbb:	mov    al,0x1b
  410bbd:	outs   dx,DWORD PTR ds:[esi]
  410bbe:	nop
  410bbf:	cmc    
  410bc0:	pop    edx
  410bc1:	popa   
  410bc2:	mov    eax,0x7ab1575b
  410bc7:	jno    0x410beb
  410bc9:	retf   0xdb18
  410bcc:	fisubr DWORD PTR [edi-0x69feb490]
  410bd2:	inc    edi
  410bd3:	mov    gs,WORD PTR [edx-0x61cd5bd]
  410bd9:	jl     0x410c2d
  410bdb:	mov    edx,0x87507ab8
  410be0:	mov    ecx,0x1a49d2dd
  410be5:	sbb    eax,0xd5c48526
  410bea:	into   
  410beb:	sahf   
  410bec:	dec    ecx
  410bed:	mov    ah,BYTE PTR [edi-0x3]
  410bf0:	shr    eax,0xbf
  410bf3:	cmp    dh,BYTE PTR [edx+ebx*4]
  410bf6:	dec    esi
  410bf7:	enter  0x1932,0xea
  410bfb:	pop    ss
  410bfc:	add    al,0x6
  410bfe:	and    eax,0x13e2027d
  410c03:	cmp    DWORD PTR [edi+0x29bce104],edx
  410c09:	mov    eax,ds:0x873e9550
  410c0e:	mov    ch,0x8c
  410c10:	push   0x5ad7d6
  410c15:	push   edi
  410c16:	sbb    DWORD PTR [edi+ebx*2-0x22546dcd],eax
  410c1d:	xchg   esi,eax
  410c1e:	push   esp
  410c1f:	xchg   edi,eax
  410c20:	jmp    0x8bd1:0xcfb662e4
  410c27:	inc    esi
  410c28:	xor    al,0x15
  410c2a:	ins    BYTE PTR es:[edi],dx
  410c2b:	ret    
  410c2c:	popa   
  410c2d:	and    DWORD PTR [edi+0x30],esp
  410c30:	and    esi,DWORD PTR [edx-0x5b]
  410c33:	int3   
  410c34:	cmp    esi,eax
  410c36:	inc    edi
  410c37:	aaa    
  410c38:	xor    ebp,ebp
  410c3a:	cmp    al,ah
  410c3c:	retf   
  410c3d:	add    al,BYTE PTR [edi]
  410c3f:	adc    cl,al
  410c41:	dec    esi
  410c42:	nop
  410c43:	xchg   edx,eax
  410c44:	add    DWORD PTR ds:0x7dffa213,ecx
  410c4a:	push   ebx
  410c4b:	scas   al,BYTE PTR es:[edi]
  410c4c:	out    dx,eax
  410c4d:	scas   eax,DWORD PTR es:[edi]
  410c4e:	adc    al,BYTE PTR [ebx]
  410c50:	daa    
  410c51:	mov    ds:0xaad5f53,eax
  410c56:	sbb    edi,DWORD PTR [esi+0x7d]
  410c59:	cmp    al,0xa9
  410c5b:	jno    0x410c72
  410c5d:	in     al,dx
  410c5e:	xchg   edi,eax
  410c5f:	lahf   
  410c60:	mov    ebp,0xc0106bfa
  410c65:	(bad)  
  410c66:	shr    ch,cl
  410c68:	(bad)  
  410c6a:	push   0x2ef1ebaa
  410c6f:	(bad)  
  410c70:	xrelease mov BYTE PTR [esi-0x434da075],bl
  410c77:	test   eax,0x69b38c9
  410c7c:	test   eax,0xd0416f6
  410c82:	ret    0xbb1a
  410c85:	xchg   esi,eax
  410c86:	in     eax,0x81
  410c88:	push   cs
  410c89:	jecxz  0x410c53
  410c8b:	dec    edx
  410c8c:	jne    0x410c5f
  410c8e:	pop    esi
  410c8f:	inc    edi
  410c90:	jmp    0x6b03ab2a
  410c95:	or     esp,DWORD PTR [ebx]
  410c97:	scas   al,BYTE PTR es:[edi]
  410c98:	sahf   
  410c99:	pop    edi
  410c9a:	adc    dh,BYTE PTR [ebx]
  410c9c:	lods   eax,DWORD PTR ds:[si]
  410c9e:	shl    dh,cl
  410ca0:	mov    eax,ds:0x67da67e3
  410ca5:	icebp  
  410ca6:	xchg   BYTE PTR [ecx-0x63],dl
  410ca9:	out    dx,al
  410caa:	or     al,BYTE PTR [esi]
  410cac:	jbe    0x410d0d
  410cae:	pop    eax
  410caf:	cmp    BYTE PTR [esi],dl
  410cb1:	xor    ebx,0x7051f5bf
  410cb7:	mov    ebx,0x543b910
  410cbc:	les    esp,FWORD PTR [eax]
  410cbe:	fdiv   DWORD PTR [edi-0x67f9693]
  410cc4:	mov    ch,0x6b
  410cc6:	popa   
  410cc7:	mov    eax,ds:0xf2cca1a9
  410ccc:	nop
  410ccd:	leave  
  410cce:	xchg   ecx,eax
  410ccf:	cwde   
  410cd0:	fimul  DWORD PTR [ebx-0x4f]
  410cd3:	daa    
  410cd4:	jb     0x410d51
  410cd6:	les    esi,FWORD PTR [edi]
  410cd8:	in     al,dx
  410cd9:	test   eax,0x4f6094b8
  410cde:	add    al,0xc0
  410ce0:	sub    ch,BYTE PTR [eax-0x34]
  410ce3:	pop    ss
  410ce4:	dec    ebp
  410ce5:	xor    BYTE PTR [ecx+0x5ef4e852],dh
  410ceb:	call   0x6733e03e
  410cf0:	sbb    dh,BYTE PTR [edx]
  410cf2:	mov    ebp,0xfdd050d8
  410cf7:	int    0x4b
  410cf9:	(bad)  
  410cfa:	imul   eax,DWORD PTR [eax+0x757f62cd],0x4cc6a4a9
  410d04:	xchg   edi,eax
  410d05:	pop    ds
  410d06:	leave  
  410d07:	fcomp  QWORD PTR [ebp+esi*1-0x2f]
  410d0b:	in     al,dx
  410d0c:	or     al,0x63
  410d0e:	jmp    0x9f9733fe
  410d13:	inc    edi
  410d14:	imul   eax,DWORD PTR [ebx],0xc
  410d17:	bound  esi,QWORD PTR [ebp-0x4a]
  410d1a:	ret    0x165d
  410d1d:	sbb    eax,0xe7e5e6dd
  410d22:	lahf   
  410d23:	dec    ecx
  410d24:	out    0x22,eax
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	xor    al,0x74
  410d62:	loope  0x410da2
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	cmp    eax,0x88d25338
  410d71:	sbb    esp,edx
  410d73:	scas   al,BYTE PTR es:[edi]
  410d74:	repz sub eax,0x5053247c
  410d7b:	js     0x410d19
  410d7d:	push   ss
  410d7e:	hlt    
  410d7f:	mov    esp,0xb2cd70c7
  410d84:	xchg   cx,ax
  410d86:	add    ch,BYTE PTR [eax-0x1a0dce68]
  410d8c:	out    0x13,al
  410d8e:	test   al,0xf8
  410d90:	add    BYTE PTR [edx+0x315f7c3e],al
  410d96:	and    eax,0x9eaac4eb
  410d9b:	cmp    BYTE PTR [edx+0x23],cl
  410d9e:	fisub  WORD PTR [edi-0x17ad47a]
  410da4:	jne    0x410e08
  410da6:	jle    0x410d38
  410da8:	jo     0x410e0b
  410daa:	cmp    eax,0x2aae612e
  410daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db0:	pop    ebx
  410db1:	fistp  QWORD PTR [eax-0x7863389c]
  410db7:	cmp    DWORD PTR [edi+0x665c8a23],ebp
  410dbd:	push   ss
  410dbe:	jne    0x410d78
  410dc0:	ins    DWORD PTR es:[edi],dx
  410dc1:	call   0x88bc:0x669f0e1c
  410dc8:	xchg   edx,eax
  410dc9:	sbb    bh,ch
  410dcb:	xchg   BYTE PTR [eax-0x70cde0e1],al
  410dd1:	imul   ebp,esi,0x10
  410dd4:	add    al,0x7a
  410dd6:	dec    edx
  410dd7:	into   
  410dd8:	jl     0x410de0
  410dda:	stc    
  410ddb:	jbe    0x410e2a
  410ddd:	jg     0x410e1a
  410ddf:	cmp    bh,BYTE PTR [edi-0x1b]
  410de2:	retf   
  410de3:	cmp    bh,ah
  410de5:	mov    al,0x56
  410de7:	sti    
  410de8:	call   0xaffafe05
  410ded:	dec    edx
  410def:	pmulhuw mm1,QWORD PTR [edx+0x42a2e1d8]
  410df6:	pushf  
  410df7:	jle    0x410e02
  410df9:	or     eax,esi
  410dfb:	out    0x13,al
  410dfd:	and    al,0x7
  410dff:	jnp    0x410e1c
  410e01:	cmp    dh,BYTE PTR [ecx+0x10]
  410e04:	adc    dh,al
  410e06:	enter  0xeb6b,0x43
  410e0a:	adc    al,0xe4
  410e0c:	sbb    al,0xae
  410e0e:	(bad)  
  410e0f:	xchg   esi,eax
  410e10:	jne    0x410dd8
  410e12:	lock cld 
  410e14:	pop    ebp
  410e15:	push   esp
  410e16:	mov    dh,0x9f
  410e18:	inc    ebp
  410e19:	ret    0xd915
  410e1c:	sub    eax,0x1d761c90
  410e21:	mov    cl,0xb0
  410e23:	ins    BYTE PTR es:[edi],dx
  410e24:	adc    edi,DWORD PTR [esi]
  410e26:	jb     0x410df0
  410e28:	sub    ecx,DWORD PTR [bp+di-0x5a53]
  410e2d:	pop    es
  410e2e:	and    BYTE PTR [esi-0xe],ch
  410e31:	add    al,0x5b
  410e33:	loopne 0x410e63
  410e35:	inc    ebp
  410e36:	cmp    eax,0x2d5b1232
  410e3b:	add    ebp,DWORD PTR [eax-0x7c467529]
  410e41:	aad    0x97
  410e43:	sti    
  410e44:	shl    DWORD PTR [edx+0x6e],cl
  410e47:	jl     0x410e07
  410e49:	(bad)  
  410e4a:	icebp  
  410e4b:	add    bl,ch
  410e4d:	ja     0x410e75
  410e4f:	mov    ecx,DWORD PTR [ecx-0x3b]
  410e52:	fcmovnu st,st(3)
  410e54:	sbb    ch,ah
  410e56:	jge    0x410e85
  410e58:	lock pop eax
  410e5a:	pop    ds
  410e5b:	mov    dl,0x61
  410e5d:	leave  
  410e5e:	inc    ebp
  410e5f:	mov    WORD PTR [edx],ds
  410e61:	sbb    cl,bh
  410e63:	jo     0x410df5
  410e65:	push   esi
  410e66:	arpl   WORD PTR [edx-0x15],ax
  410e69:	addr16 (bad) 
  410e6b:	aam    0x15
  410e6d:	fldenv [ebx-0x6a9358c8]
  410e73:	cmp    eax,0x327c5a26
  410e78:	je     0x410e10
  410e7a:	fnstenv [edx-0x4675ebce]
  410e80:	mov    ecx,0x1b5ff002
  410e85:	sub    DWORD PTR [ebx+0x382fb70d],edi
  410e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8c:	xor    eax,DWORD PTR [ebx+edi*2]
  410e8f:	jmp    0x410e8e
  410e91:	sub    BYTE PTR [ebp+0xe],dh
  410e94:	test   BYTE PTR [edx],0x87
  410e97:	scas   al,BYTE PTR es:[edi]
  410e98:	mov    ecx,0xef92f7cf
  410e9d:	pop    ecx
  410e9e:	sub    al,0x3d
  410ea0:	iret   
  410ea1:	sub    DWORD PTR [eax-0x30b450e3],esp
  410ea7:	sub    edi,DWORD PTR [ebx+0x60515f97]
  410ead:	bound  ecx,QWORD PTR [edi]
  410eaf:	stos   BYTE PTR es:[edi],al
  410eb0:	or     ecx,DWORD PTR [ebx-0x5b]
  410eb3:	push   ebp
  410eb4:	cmp    BYTE PTR [eax+ebp*8],bh
  410eb7:	cli    
  410eb8:	push   ebx
  410eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eba:	inc    esi
  410ebb:	out    0xc4,al
  410ebd:	out    0xfd,al
  410ebf:	dec    ebx
  410ec0:	inc    ebp
  410ec1:	mov    edx,0x972065e8
  410ec6:	pusha  
  410ec7:	pop    ds
  410ec8:	mov    edi,0x4b146a23
  410ecd:	and    bl,bh
  410ecf:	xor    bl,bl
  410ed1:	jne    0x410efa
  410ed3:	rol    DWORD PTR [ebp+0x6b],1
  410ed6:	pop    edi
  410ed7:	push   ecx
  410ed8:	mov    ebx,0xe92ddb8b
  410edd:	sub    DWORD PTR [edx],ebp
  410edf:	retf   
  410ee0:	lea    esi,[ebp-0x4d9527a5]
  410ee6:	add    edi,ecx
  410ee8:	sub    DWORD PTR [ecx+0x20930289],edi
  410eee:	mov    eax,0xde3b9cfc
  410ef3:	pop    ebp
  410ef4:	nop
  410ef5:	std    
  410ef6:	in     al,0xb9
  410ef8:	in     al,0x88
  410efa:	pop    ebx
  410efb:	pop    ecx
  410efc:	nop
  410efd:	xor    DWORD PTR ds:0x9c9ab17b,0x3e
  410f04:	adc    edi,DWORD PTR [eax+0x48a74b65]
  410f0a:	in     eax,0x82
  410f0c:	icebp  
  410f0d:	cmp    al,0xce
  410f0f:	cmp    BYTE PTR [ebx-0x543b0c81],0xe4
  410f16:	(bad)  
  410f17:	out    0xf1,eax
  410f19:	ins    DWORD PTR es:[edi],dx
  410f1a:	push   edx
  410f1b:	cmp    DWORD PTR [eax-0x2b5b0c0b],esi
  410f21:	add    al,0xd
  410f23:	ja     0x410f6f
  410f25:	idiv   DWORD PTR [ecx-0x2c]
  410f28:	(bad)  
  410f29:	stc    
  410f2a:	stos   BYTE PTR es:[edi],al
  410f2b:	icebp  
  410f2c:	mov    esi,eax
  410f2e:	iret   
  410f2f:	rcr    BYTE PTR [eax],0x88
  410f32:	push   esi
  410f33:	in     eax,dx
  410f34:	pop    ecx
  410f35:	mov    fs,WORD PTR [ebx-0x1]
  410f38:	(bad)  
  410f39:	mov    eax,0x6d36d91d
  410f3e:	out    dx,eax
  410f3f:	cmp    al,0xe6
  410f41:	or     ecx,eax
  410f43:	pop    ecx
  410f44:	imul   esp,DWORD PTR [edi+0x34],0xb38eb9b4
  410f4b:	pop    ebx
  410f4c:	mov    bl,0xe2
  410f4f:	cmp    al,0x38
  410f51:	adc    DWORD PTR [edi],esp
  410f53:	fsubr  DWORD PTR [edi+eiz*2-0x74]
  410f57:	clc    
  410f58:	adc    ah,bl
  410f5a:	pop    edi
  410f5b:	cmp    al,0xcb
  410f5d:	fild   WORD PTR [ebx-0x5c]
  410f60:	aam    0x96
  410f62:	into   
  410f63:	jg     0x410fa4
  410f65:	cli    
  410f66:	dec    ebp
  410f67:	scas   al,BYTE PTR es:[edi]
  410f68:	mov    BYTE PTR [edi],ah
  410f6a:	adc    eax,DWORD PTR [edi-0x46dd0a71]
  410f70:	pop    ecx
  410f71:	daa    
  410f72:	pusha  
  410f73:	dec    edi
  410f74:	xchg   edx,eax
  410f75:	fld    QWORD PTR [ebp+eax*8-0x66]
  410f79:	daa    
  410f7a:	fldcw  WORD PTR es:[esi-0x59235c77]
  410f81:	or     eax,0x7852c774
  410f86:	(bad)  [eax-0x47]
  410f89:	xor    BYTE PTR [ebx],dh
  410f8b:	push   ecx
  410f8c:	imul   edi,ebx,0x6
  410f8f:	mov    ah,0xfe
  410f91:	(bad)  
  410f92:	and    esi,DWORD PTR [edi]
  410f94:	adc    BYTE PTR [ebp-0xff10e59],0xe3
  410f9b:	pop    esp
  410f9c:	pop    edx
  410f9d:	fimul  WORD PTR [esi+0x5613939a]
  410fa3:	rcl    BYTE PTR [edi+0x69],cl
  410fa6:	adc    DWORD PTR [edx-0x4268dcfa],esi
  410fac:	sub    ebx,edx
  410fae:	mov    cl,0x21
  410fb0:	retf   
  410fb1:	repz and dh,dl
  410fb4:	push   eax
  410fb5:	dec    eax
  410fb6:	das    
  410fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb8:	mov    dh,0xa3
  410fba:	add    BYTE PTR ds:0x4d14e4ba,dh
  410fc0:	cdq    
  410fc1:	sbb    al,0xe7
  410fc3:	inc    esi
  410fc4:	xchg   esp,eax
  410fc5:	cmc    
  410fc6:	jb     0x411044
  410fc8:	stos   DWORD PTR es:[edi],eax
  410fc9:	pop    ebx
  410fca:	repnz bound esi,QWORD PTR [ebx]
  410fcd:	dec    eax
  410fce:	jle    0x41101c
  410fd0:	sbb    al,0x9b
  410fd2:	mov    ah,0x94
  410fd4:	jns    0x410fb8
  410fd6:	xor    eax,DWORD PTR [ebx]
  410fd8:	stc    
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	outs   dx,WORD PTR ds:[esi]
  410feb:	mov    ds:0x785a6506,eax
  410ff1:	js     0x410fd8
  410ff3:	jle    0x41106d
  410ff5:	js     0x411020
  410ff7:	inc    esi
  410ff8:	outs   dx,BYTE PTR ds:[esi]
  410ff9:	in     al,0xf1
  410ffb:	push   ecx
  410ffc:	mov    ds:0x2bf67192,eax
  411001:	and    eax,DWORD PTR [ecx-0x3e]
  411004:	add    cl,bl
  411006:	aaa    
  411007:	pop    eax
  411008:	xchg   esi,eax
  411009:	dec    esi
  41100a:	or     al,0x15
  41100c:	mov    ds:0xcc6b479d,al
  411011:	inc    ebx
  411012:	sbb    esi,DWORD PTR [ebp+eiz*2-0xb]
  411016:	popf   
  411017:	cdq    
  411018:	mov    WORD PTR [edx-0x48298069],cs
  41101e:	xchg   BYTE PTR [ecx],dh
  411020:	fnsave [ebx-0x47]
  411023:	sahf   
  411024:	mov    bh,0xe7
  411026:	sbb    eax,0x60ad9e43
  41102b:	lds    ebp,FWORD PTR [ebx-0x14d44d2]
  411031:	jmp    0xf090eb9f
  411036:	fistp  DWORD PTR [edx]
  411038:	push   edx
  411039:	test   DWORD PTR [edx+0x2b74d329],eax
  41103f:	inc    ebx
  411040:	or     eax,0x5f205479
  411045:	xor    eax,0x27c651ec
  41104a:	xor    BYTE PTR [edx],bl
  41104c:	adc    al,0x55
  41104e:	or     eax,0xfe294d1f
  411053:	(bad)  
  411055:	in     eax,dx
  411056:	(bad)  
  411057:	stos   DWORD PTR es:[edi],eax
  411058:	mov    eax,ds:0x9911a2cc
  41105d:	scas   al,BYTE PTR es:[edi]
  41105e:	popa   
  41105f:	xor    al,0xbd
  411061:	mov    esi,0x404b042e
  411066:	xor    al,cl
  411068:	sbb    DWORD PTR [ecx+0x3ecfb605],eax
  41106e:	mov    eax,ds:0xba090f95
  411073:	cmp    al,0xdc
  411075:	pop    edx
  411076:	mov    dh,0xab
  411078:	or     BYTE PTR [eax+0x20a6884c],0xa3
  41107f:	adc    bl,cl
  411081:	iret   
  411082:	adc    al,0x39
  411085:	popf   
  411086:	out    dx,eax
  411087:	add    DWORD PTR [edx-0x12ca283d],esp
  41108d:	pop    edx
  41108e:	xchg   ebx,eax
  41108f:	xchg   ebp,eax
  411090:	ror    BYTE PTR [ebx],1
  411092:	sbb    ecx,DWORD PTR [ebx-0x4d]
  411095:	bound  esp,QWORD PTR [edi]
  411097:	popf   
  411098:	mov    bh,0xf3
  41109a:	outs   dx,BYTE PTR ds:[esi]
  41109b:	add    BYTE PTR [esi+0x76],0x40
  41109f:	jnp    0x411096
  4110a1:	add    DWORD PTR [eax-0x452c26d0],edi
  4110a7:	mov    ds:0x20db5bd,al
  4110ac:	fcom   QWORD PTR [ecx]
  4110ae:	xor    eax,DWORD PTR [esi-0x4d177ae9]
  4110b4:	cmp    eax,0x4154383b
  4110b9:	dec    edi
  4110ba:	inc    edx
  4110bb:	mov    ebx,0xd6afd3f5
  4110c0:	int3   
  4110c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110c2:	lds    ebp,FWORD PTR [ecx-0x32f22178]
  4110c8:	mov    cl,ah
  4110ca:	(bad)  
  4110cb:	mov    ebx,0xf47a7bd0
  4110d0:	or     eax,0xb158120a
  4110d5:	sub    al,0x40
  4110d7:	in     al,dx
  4110d8:	aas    
  4110d9:	xor    al,0xda
  4110db:	mov    bh,0x85
  4110dd:	sub    BYTE PTR [edi],0xc
  4110e0:	xchg   edi,eax
  4110e1:	stc    
  4110e2:	aad    0xcc
  4110e4:	test   al,dh
  4110e6:	icebp  
  4110e7:	jo     0x411159
  4110e9:	fild   QWORD PTR [edi+0x46106ed8]
  4110ef:	loope  0x411117
  4110f1:	xor    eax,0xb04280d2
  4110f6:	inc    edx
  4110f7:	cli    
  4110f8:	test   eax,0x4e07b7b4
  4110fd:	(bad)  
  4110fe:	ffree  st(4)
  411100:	inc    edx
  411101:	fstp   TBYTE PTR [ebx+ecx*1+0x14]
  411105:	dec    eax
  411106:	pop    edx
  411107:	repz xor eax,0x37c07222
  41110d:	sbb    DWORD PTR [edx],0xffffffce
  411110:	js     0x411169
  411112:	and    BYTE PTR [edx-0x1f],bl
  411115:	sub    BYTE PTR [ebp-0x3c],ah
  411118:	mov    dh,0x57
  41111a:	sbb    DWORD PTR [ebp+0x360df67e],ecx
  411120:	popf   
  411121:	popf   
  411122:	mov    WORD PTR [edx-0x3a],ds
  411125:	or     al,0x93
  411127:	xor    esp,esp
  411129:	es jle 0x4110b2
  41112c:	or     al,0x91
  41112f:	mov    WORD PTR [edx],fs
  411131:	sbb    al,dh
  411133:	push   ebx
  411134:	adc    eax,0xe12ab3dc
  411139:	repnz das 
  41113b:	pop    ds
  41113c:	inc    edi
  41113d:	jno    0x411135
  41113f:	call   0x454c0ce4
  411144:	or     DWORD PTR [edi],esp
  411146:	push   edi
  411147:	mov    dl,0xb8
  411149:	shl    DWORD PTR [ecx],cl
  41114b:	aad    0x88
  41114d:	jmp    0x9fff:0xfbd1b1a6
  411154:	mov    al,BYTE PTR [edi]
  411156:	mov    bl,0x14
  411158:	lods   eax,DWORD PTR ds:[esi]
  411159:	push   edi
  41115a:	ret    0x763c
  41115d:	out    0xdf,al
  41115f:	stc    
  411160:	pusha  
  411161:	xchg   edi,eax
  411162:	push   ds
  411163:	cs repnz iret 
  411166:	ins    BYTE PTR es:[edi],dx
  411167:	xor    eax,0x317b182c
  41116c:	out    dx,al
  41116d:	pusha  
  41116e:	call   0x1e4c1242
  411173:	fs xchg edx,eax
  411175:	imul   esi,DWORD PTR [esi-0x5f],0xa4c6f15f
  41117c:	add    ah,dl
  41117e:	les    esp,FWORD PTR [ecx+0x24fae318]
  411184:	jnp    0x411179
  411186:	fld    DWORD PTR [ecx]
  411188:	scas   eax,DWORD PTR es:[edi]
  411189:	sbb    al,0xc5
  41118b:	jmp    0x411150
  41118d:	in     al,0xd0
  41118f:	rcr    BYTE PTR [ecx-0x56],0x4c
  411193:	xor    al,0x5b
  411195:	pop    eax
  411196:	push   ebp
  411197:	retf   0xaed0
  41119a:	fild   QWORD PTR [eax+eax*8-0x77]
  41119e:	add    al,0x80
  4111a0:	arpl   WORD PTR [esp+eax*2+0x3],bp
  4111a4:	hlt    
  4111a5:	pop    ebx
  4111a6:	pop    edx
  4111a7:	xchg   ebp,eax
  4111a8:	into   
  4111a9:	add    ebp,DWORD PTR [ebp-0x78a8956]
  4111af:	pop    ss
  4111b0:	xor    DWORD PTR [ecx+esi*4+0x4e],esp
  4111b4:	mov    cl,0xbd
  4111b6:	jle    0x4111f8
  4111b8:	or     dh,BYTE PTR [ebx-0x80]
  4111bb:	data16 sti 
  4111bd:	lods   eax,DWORD PTR ds:[esi]
  4111be:	pop    esi
  4111bf:	jae    0x41123b
  4111c1:	aad    0x8
  4111c3:	sub    BYTE PTR [ebx+0x4662b174],ah
  4111c9:	pop    ebx
  4111ca:	sbb    BYTE PTR [ebx+0x3b],bl
  4111cd:	jg     0x411152
  4111cf:	xchg   ebp,eax
  4111d0:	push   cs
  4111d1:	ins    BYTE PTR es:[edi],dx
  4111d2:	out    dx,eax
  4111d3:	addr16 dec esp
  4111d5:	and    DWORD PTR ds:0xa3a08856,0x1f0cc316
  4111df:	ret    0x7382
  4111e2:	ret    0x29db
  4111e5:	xlat   BYTE PTR ds:[ebx]
  4111e6:	(bad)
  4111ea:	push   esp
  4111eb:	pusha  
  4111ec:	add    BYTE PTR [edi-0x731627fc],al
  4111f2:	xor    esi,esp
  4111f4:	mov    bl,0x65
  4111f6:	push   edx
  4111f7:	push   ecx
  4111f8:	clc    
  4111f9:	in     al,0x9b
  4111fb:	outs   dx,BYTE PTR ds:[esi]
  4111fc:	aas    
  4111fd:	pop    ds
  4111fe:	adc    DWORD PTR [ecx],edi
  411200:	xor    DWORD PTR [ebx],0x48619e93
  411206:	arpl   ax,bx
  411208:	fwait
  411209:	mov    cl,0x9f
  41120b:	sbb    DWORD PTR [edi+0x6cf81d0a],ebx
  411211:	inc    ecx
  411212:	dec    eax
  411213:	sbb    BYTE PTR [esi+0x53616afc],bh
  411219:	ins    BYTE PTR es:[edi],dx
  41121a:	lahf   
  41121b:	scas   al,BYTE PTR es:[edi]
  41121c:	idiv   ecx
  41121e:	mov    ecx,0x29f18c3c
  411223:	shr    DWORD PTR [esp+ebx*8-0x4476c70a],cl
  41122a:	(bad)  
  41122b:	push   eax
  41122c:	cmp    al,0x39
  41122f:	sbb    ebx,esp
  411231:	cdq    
  411232:	jmp    0x4111c5
  411234:	add    al,0x2a
  411236:	push   ebp
  411237:	nop
  411238:	push   eax
  411239:	scas   eax,DWORD PTR es:[edi]
  41123a:	int    0x59
  41123c:	js     0x41122f
  41123e:	add    ecx,DWORD PTR [ebp+0x65]
  411241:	sbb    bl,BYTE PTR [ebp+0x312231cf]
  411247:	adc    esi,DWORD PTR [ebx]
  411249:	arpl   WORD PTR [ebp+0x5a],cx
  41124c:	loope  0x4111e9
  41124e:	pop    esi
  41124f:	mov    esp,0xcd0493c6
  411254:	push   esp
  411255:	stos   BYTE PTR es:[edi],al
  411256:	sbb    ecx,DWORD PTR [eax-0x21]
  411259:	bound  edx,QWORD PTR [ebx]
  41125b:	push   0x25
  41125d:	pop    ebx
  41125e:	inc    eax
  41125f:	arpl   WORD PTR [ecx-0x50f02efd],cx
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x1c],al
  411278:	xor    dl,BYTE PTR [eax]
  41127a:	inc    edi
  41127b:	rcr    BYTE PTR [edi+0x78],cl
  41127e:	js     0x411265
  411280:	jle    0x4112fa
  411282:	js     0x411272
  411284:	lahf   
  411285:	push   cs
  411286:	mov    esi,0x813db109
  41128b:	mov    bh,0xec
  41128d:	and    ebp,ebx
  41128f:	mov    al,ah
  411291:	in     al,0xa2
  411293:	or     eax,0xde6258b8
  411298:	xor    DWORD PTR [edx+0x36689215],esp
  41129e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41129f:	mov    edx,0xc934e8f5
  4112a4:	dec    eax
  4112a5:	push   esi
  4112a6:	mov    ebx,0xe536b669
  4112ab:	pop    es
  4112ac:	pop    eax
  4112ad:	or     al,0xde
  4112af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112b0:	jnp    0x411272
  4112b2:	sbb    dh,bl
  4112b4:	pushf  
  4112b5:	(bad)  
  4112b6:	mov    dh,0x71
  4112b8:	add    BYTE PTR [ebx+0x41],bl
  4112bb:	sahf   
  4112bc:	jae    0x411327
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	add    edi,ebx
  4112c1:	in     al,dx
  4112c2:	or     eax,0xaf5f0f1b
  4112c7:	imul   edi,DWORD PTR [ecx+edx*4+0x3a],0x43472c9f
  4112cf:	out    0xfe,al
  4112d1:	(bad)  
  4112d3:	fnstsw WORD PTR [ebx+0x22b53ff1]
  4112d9:	cmp    DWORD PTR [esi],ecx
  4112db:	enter  0x9cf8,0xc6
  4112df:	(bad)  
  4112e0:	ins    DWORD PTR es:[edi],dx
  4112e1:	xor    eax,0x58dea217
  4112e6:	xor    al,0x80
  4112e8:	cld    
  4112e9:	fwait
  4112ea:	dec    edx
  4112eb:	pop    edi
  4112ec:	stos   BYTE PTR es:[edi],al
  4112ed:	enter  0x9c12,0x23
  4112f1:	sub    eax,0xb16489c1
  4112f6:	mov    edi,0x1998b87f
  4112fb:	sbb    eax,DWORD PTR [edx+0x7b2ee2cc]
  411301:	mov    dl,0x81
  411303:	enter  0x51f6,0xe1
  411307:	inc    esi
  411308:	loope  0x41129c
  41130a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130b:	out    0x20,al
  41130d:	daa    
  41130e:	pushf  
  41130f:	stos   DWORD PTR es:[edi],eax
  411310:	les    ecx,FWORD PTR [ebx]
  411312:	cmc    
  411313:	loope  0x41131a
  411315:	mov    ecx,0xb96aed8f
  41131a:	jbe    0x4112a5
  41131c:	popf   
  41131d:	sahf   
  41131e:	in     al,dx
  41131f:	xor    edi,DWORD PTR [edx+edx*4]
  411322:	jge    0x4112c6
  411324:	fstp   QWORD PTR [ecx]
  411326:	je     0x411353
  411328:	(bad)  
  411329:	sbb    al,0x2e
  41132b:	push   ss
  41132c:	mov    bl,0x84
  41132e:	lods   eax,DWORD PTR ds:[esi]
  41132f:	inc    esi
  411330:	mov    es,WORD PTR [ebp+0x68]
  411333:	sti    
  411334:	mov    bl,0x3
  411336:	dec    edi
  411337:	ret    
  411338:	aam    0xef
  41133a:	pop    ebp
  41133b:	mov    esi,0x3460a362
  411340:	xchg   edi,eax
  411341:	jnp    0x4112d2
  411343:	cmp    ebp,esp
  411345:	mov    esi,0xc2678099
  41134a:	or     BYTE PTR [edi+0x2668ccac],0x76
  411351:	xchg   ebp,eax
  411352:	adc    eax,0xbb41254b
  411357:	jae    0x4113b2
  411359:	fstp   QWORD PTR [eax]
  41135b:	sbb    al,0xd9
  41135d:	pusha  
  41135e:	pop    ebx
  41135f:	push   eax
  411360:	adc    eax,0x66494f6a
  411365:	cld    
  411366:	xor    DWORD PTR [ecx],0x6847a034
  41136c:	lods   eax,DWORD PTR ds:[esi]
  41136d:	jmp    0x4113ee
  41136f:	push   ebp
  411370:	push   cs
  411371:	into   
  411372:	jae    0x4113e0
  411374:	push   cs
  411375:	and    al,0xe0
  411377:	push   ds
  411378:	or     al,0x4c
  41137a:	push   ebp
  41137b:	stos   DWORD PTR es:[edi],eax
  41137c:	clc    
  41137d:	push   ebp
  41137e:	pusha  
  41137f:	jg     0x41138c
  411381:	adc    cl,BYTE PTR [eax+esi*2]
  411384:	shl    BYTE PTR [eax],0x3c
  411387:	push   eax
  411388:	gs pop ebx
  41138a:	retf   
  41138b:	aad    0x65
  41138d:	and    ah,BYTE PTR [esi+0x4a]
  411390:	inc    eax
  411391:	xlat   BYTE PTR ds:[ebx]
  411392:	movups XMMWORD PTR [ebx+0x6b],xmm5
  411396:	dec    edx
  411397:	div    BYTE PTR [edx-0x67ef7349]
  41139d:	test   DWORD PTR ds:0x4f13fff,edx
  4113a3:	or     DWORD PTR [eax-0x29],0x1971c051
  4113aa:	ss neg esp
  4113ad:	ret    0xd6a3
  4113b0:	enter  0x7d9c,0x8e
  4113b4:	xchg   edx,eax
  4113b5:	jo     0x411434
  4113b7:	scas   eax,DWORD PTR es:[edi]
  4113b8:	sub    BYTE PTR ss:[edi+0x13],bh
  4113bc:	ret    
  4113bd:	call   0xd56f9e59
  4113c2:	add    al,0xe4
  4113c4:	aas    
  4113c5:	fidivr WORD PTR [ecx-0x63ba51df]
  4113cb:	fisub  DWORD PTR [ebp+0x59]
  4113ce:	dec    ebp
  4113cf:	ret    0xceac
  4113d2:	xor    bh,dl
  4113d4:	sti    
  4113d5:	mov    ecx,0x1f9995b0
  4113da:	push   ebx
  4113db:	(bad)  
  4113dc:	jae    0x41140d
  4113de:	sub    al,dl
  4113e0:	(bad)  
  4113e1:	loope  0x41141d
  4113e3:	arpl   WORD PTR [ecx-0x2c48ecd6],sp
  4113e9:	cmp    dl,BYTE PTR [ebx]
  4113eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ec:	lahf   
  4113ed:	mov    WORD PTR [esi+0x6e],?
  4113f0:	fstp   DWORD PTR [ebx]
  4113f2:	fucomip st,st(3)
  4113f4:	jo     0x411419
  4113f6:	dec    eax
  4113f7:	mov    ecx,0xfa2ee3e2
  4113fc:	jp     0x411420
  4113fe:	push   ebx
  4113ff:	cdq    
  411400:	dec    ecx
  411401:	out    dx,eax
  411402:	inc    edx
  411403:	mov    ah,0xfa
  411405:	rcl    DWORD PTR [ebx+0x2b8aeb0b],0x52
  41140c:	dec    edx
  41140d:	jne    0x41139e
  41140f:	adc    DWORD PTR [ebp-0x44],edi
  411412:	inc    ecx
  411413:	add    ecx,DWORD PTR [eax]
  411415:	xchg   BYTE PTR [esi+0x595b3434],al
  41141b:	popa   
  41141c:	in     eax,dx
  41141d:	hlt    
  41141e:	pop    ebx
  41141f:	add    eax,0x9660a57
  411424:	cli    
  411425:	pop    esp
  411426:	iret   
  411427:	xchg   esp,eax
  411428:	cmp    bl,dh
  41142a:	(bad)  
  41142b:	inc    ecx
  41142c:	or     edi,DWORD PTR [edx+0x34fa3682]
  411432:	jl     0x41142a
  411434:	scas   eax,DWORD PTR es:[edi]
  411435:	fimul  WORD PTR [edx]
  411437:	fiadd  DWORD PTR [ebp-0x124ab0ed]
  41143d:	jmp    0xe0c54764
  411442:	ins    DWORD PTR es:[edi],dx
  411443:	xchg   ecx,eax
  411444:	pushf  
  411445:	mov    edx,0xa88318d
  41144a:	xchg   esi,eax
  41144b:	pop    ss
  41144c:	mov    cl,0xd2
  41144e:	or     BYTE PTR [edi-0x58],0xa8
  411452:	push   eax
  411453:	std    
  411454:	stc    
  411455:	jl     0x4114ad
  411457:	mov    bh,0x1d
  411459:	add    ah,BYTE PTR [edx]
  41145b:	xor    ch,BYTE PTR ds:0xb002d9d9
  411461:	addr16 out dx,eax
  411463:	xchg   esi,eax
  411464:	cwde   
  411465:	ins    DWORD PTR es:[edi],dx
  411466:	jmp    0xef3d:0xdf9edcab
  41146d:	sbb    ebp,DWORD PTR [ebp+ebx*1-0x70]
  411471:	imul   edx,ecx,0x5980a74e
  411477:	mov    al,0xbb
  411479:	sub    al,0x96
  41147b:	arpl   ax,bp
  41147d:	cmp    DWORD PTR [esi],ebx
  41147f:	(bad)  
  411480:	xor    BYTE PTR [eax-0x789fcc1f],al
  411486:	dec    esp
  411487:	test   eax,0x804291a8
  41148c:	ret    
  41148d:	adc    DWORD PTR [esi],esi
  41148f:	mov    bl,0x6d
  411491:	(bad)  
  411492:	and    al,BYTE PTR [eax-0x52]
  411495:	clc    
  411496:	sbb    ecx,DWORD PTR [ebx]
  411498:	aad    0x13
  41149a:	rcl    BYTE PTR [ecx+0x61b15a80],cl
  4114a0:	lods   eax,DWORD PTR ds:[esi]
  4114a1:	sbb    BYTE PTR [ebx-0x56ff4cf7],0x61
  4114a8:	mov    bh,0x7
  4114aa:	xchg   edx,eax
  4114ab:	push   ebx
  4114ac:	and    DWORD PTR [ebx+0x61],esp
  4114af:	mov    DWORD PTR [ebx-0x1fcb0626],esi
  4114b5:	jne    0x411445
  4114b7:	dec    esp
  4114b8:	sbb    dl,bl
  4114ba:	or     cl,dh
  4114bc:	push   edi
  4114bd:	sub    eax,DWORD PTR [edi+0x95d0ec4]
  4114c3:	enter  0x6649,0xc7
  4114c7:	mov    cl,0x5d
  4114c9:	mov    edx,0xa963e64f
  4114ce:	adc    ch,bl
  4114d0:	sbb    DWORD PTR [ebx],0xffffffeb
  4114d3:	jns    0x4114b2
  4114d5:	or     esi,DWORD PTR [edx]
  4114d7:	jmp    0x4114d7
  4114d9:	push   esi
  4114da:	ja     0x4114c9
  4114dc:	xchg   DWORD PTR [ebx-0x72],eax
  4114df:	xchg   ebx,eax
  4114e0:	push   ebp
  4114e1:	mov    edi,0xb21de242
  4114e6:	push   ebx
  4114e7:	pop    edi
  4114e8:	add    BYTE PTR [ebx-0x6d],al
  4114eb:	pop    esi
  4114ec:	cld    
  4114ed:	call   0xf05d:0x8bf87d8b
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	jns    0x411541
  411511:	xchg   esi,eax
  411512:	aaa    
  411513:	mov    edi,0xe578785d
  411518:	jle    0x411592
  41151a:	js     0x411513
  41151c:	fbstp  TBYTE PTR [esi+0x68578614]
  411522:	neg    ecx
  411524:	push   0xf9ba8490
  411529:	xchg   ecx,eax
  41152a:	cdq    
  41152b:	mov    eax,0xc977aca4
  411530:	(bad)  [eax+0x757fe8a7]
  411536:	and    BYTE PTR [edi+ebx*1],bl
  411539:	fcomip st,st(0)
  41153b:	jmp    0x59bbd716
  411540:	call   0x6362:0x50b57130
  411547:	pop    ds
  411548:	(bad)  [edx-0x2d9879b2]
  41154e:	outs   dx,DWORD PTR ds:[esi]
  41154f:	pop    es
  411550:	sbb    dh,BYTE PTR [ecx+0x744e2329]
  411556:	sub    BYTE PTR [esi],bl
  411558:	icebp  
  411559:	inc    ecx
  41155a:	shr    BYTE PTR [eax+0x22adc40c],0xac
  411561:	ja     0x411576
  411563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411564:	pushf  
  411565:	ja     0x411541
  411567:	scas   al,BYTE PTR es:[edi]
  411568:	sbb    ebp,DWORD PTR [edi]
  41156a:	mov    eax,ds:0x85f9691a
  41156f:	scas   al,BYTE PTR es:[edi]
  411570:	sbb    al,BYTE PTR [ecx]
  411572:	push   es
  411573:	test   eax,0x7fe8f0a9
  411578:	popa   
  411579:	xchg   DWORD PTR [esi-0x67181a60],ecx
  41157f:	xchg   ebp,eax
  411580:	add    DWORD PTR [eax-0x9eecbd4],edi
  411586:	nop
  411587:	div    esi
  411589:	adc    DWORD PTR [eax+0x67],eax
  41158c:	dec    ebx
  41158d:	or     ebx,DWORD PTR [ebx]
  41158f:	pop    ebx
  411590:	rcl    bl,cl
  411592:	icebp  
  411593:	mov    ch,0x8d
  411595:	shl    DWORD PTR [ebx-0xa2a9d4b],cl
  41159b:	and    esp,ebp
  41159d:	jbe    0x41159c
  41159f:	xchg   esp,eax
  4115a0:	add    al,0x1
  4115a2:	and    eax,0xd760305e
  4115a7:	add    DWORD PTR [ecx+0x69860c1f],edx
  4115ad:	loop   0x41159e
  4115af:	inc    ebx
  4115b0:	mov    al,0x43
  4115b2:	push   ds
  4115b3:	fisub  WORD PTR [ebx+0x80927d]
  4115b9:	push   0xb05654b4
  4115be:	dec    edi
  4115bf:	sub    ebp,DWORD PTR [eax-0x1716b363]
  4115c5:	ss xor al,0xea
  4115c8:	jle    0x4115fe
  4115ca:	hlt    
  4115cb:	test   BYTE PTR [edx],ah
  4115cd:	xchg   edx,eax
  4115ce:	mov    al,ds:0x4c2d985e
  4115d3:	out    dx,al
  4115d4:	add    esi,DWORD PTR [ebx]
  4115d6:	sub    cl,BYTE PTR [esp+ebx*2+0x5ce0a321]
  4115dd:	dec    DWORD PTR [edi-0x6848f454]
  4115e3:	repnz dec esp
  4115e5:	iret   
  4115e6:	cmp    al,0x6e
  4115e8:	dec    eax
  4115e9:	cmp    al,0x90
  4115eb:	inc    eax
  4115ec:	(bad)  
  4115ed:	fdivr  st,st(7)
  4115ef:	in     al,dx
  4115f0:	sub    eax,0xb6025027
  4115f5:	and    al,0xd5
  4115f7:	pushf  
  4115f8:	scas   eax,DWORD PTR es:[edi]
  4115f9:	je     0x4115b4
  4115fb:	jb     0x4115c1
  4115fd:	pop    eax
  4115fe:	ds push cs
  411600:	and    eax,esp
  411602:	in     eax,dx
  411603:	mov    ebp,0x6ded3ee5
  411608:	add    BYTE PTR [esi],dl
  41160a:	in     eax,0xd7
  41160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160d:	mov    bh,0x3c
  41160f:	push   ss
  411610:	lds    edi,FWORD PTR ds:0x57528503
  411616:	inc    edx
  411617:	shl    DWORD PTR [eax+0x64bc3360],0xc2
  41161e:	jg     0x4115fb
  411620:	xchg   ecx,eax
  411621:	xlat   BYTE PTR ds:[ebx]
  411622:	or     DWORD PTR [ebx+0x5f],0xf206eda
  411629:	jg     0x4115fc
  41162b:	fadd   QWORD PTR [eax-0x497f05d6]
  411631:	neg    BYTE PTR [ebx]
  411633:	pop    ecx
  411634:	jb     0x411600
  411636:	popf   
  411637:	cwde   
  411638:	push   cs
  411639:	dec    edi
  41163a:	mov    edi,0x5735173a
  41163f:	xchg   edx,eax
  411640:	push   edi
  411641:	jno    0x4115fb
  411643:	lods   eax,DWORD PTR ds:[esi]
  411644:	fist   WORD PTR [edi+ecx*1]
  411647:	mov    DWORD PTR [esp+ebx*8-0x3e1755fe],ebp
  41164e:	add    al,BYTE PTR [edi+0x18]
  411651:	adc    eax,DWORD PTR [esi+0x6f]
  411654:	and    eax,0xf3d5d880
  411659:	test   al,0xfb
  41165b:	jne    0x411612
  41165d:	out    dx,eax
  41165e:	jle    0x411669
  411660:	or     esi,DWORD PTR [esi]
  411662:	pop    esp
  411663:	daa    
  411664:	xor    al,0xe8
  411666:	mov    eax,0xa5bb10e
  41166b:	mov    ah,0x97
  41166d:	or     esi,DWORD PTR [eax-0x73]
  411670:	outs   dx,BYTE PTR ds:[esi]
  411671:	cvttps2pi mm6,QWORD PTR [eax+0x70ef972a]
  411678:	inc    edx
  411679:	retf   0x4e43
  41167c:	dec    ecx
  41167d:	into   
  41167e:	adc    al,0x9f
  411680:	push   esp
  411681:	adc    BYTE PTR [ecx+0x44],bl
  411684:	stos   DWORD PTR es:[edi],eax
  411685:	adc    eax,0x68a93e53
  41168a:	jmp    0x5c91:0x50b60c9b
  411691:	mov    al,0x99
  411693:	repz in eax,dx
  411695:	ret    0xfd7d
  411698:	test   BYTE PTR [ebx+0x3f9b4007],bl
  41169e:	ret    0xda21
  4116a1:	push   0xffffffe6
  4116a3:	fimul  DWORD PTR [eax]
  4116a5:	jne    0x41168e
  4116a7:	mov    edi,0x2014c5aa
  4116ac:	mov    ds:0x537c30de,eax
  4116b1:	sub    eax,0x5ca9ccbf
  4116b6:	push   edx
  4116b7:	sbb    al,0xae
  4116b9:	mov    bh,0x2c
  4116bb:	push   es
  4116bc:	mov    cl,0xb2
  4116be:	or     eax,DWORD PTR [edi]
  4116c0:	xor    BYTE PTR [ebx-0x68],dh
  4116c3:	inc    edx
  4116c4:	sbb    edi,esi
  4116c6:	(bad)  
  4116c7:	(bad)  
  4116c8:	out    0xfc,eax
  4116ca:	mov    es,WORD PTR [esi-0x59]
  4116cd:	rol    DWORD PTR [eax+0x1f57bb7e],0xf2
  4116d4:	mov    edi,0x771c4012
  4116d9:	fsub   st(3),st
  4116db:	pop    es
  4116dc:	mov    edi,0xfe08e769
  4116e1:	mul    BYTE PTR [esi+edi*8-0x15]
  4116e5:	sbb    ecx,DWORD PTR [edx-0x5b]
  4116e8:	cld    
  4116e9:	xchg   esp,eax
  4116ea:	in     eax,dx
  4116eb:	push   eax
  4116ec:	adc    al,0x52
  4116ee:	jo     0x4116fa
  4116f0:	or     BYTE PTR [edi],al
  4116f2:	and    DWORD PTR [ebx],0x41
  4116f5:	jbe    0x411766
  4116f7:	inc    ecx
  4116f8:	jmp    0x63e2:0x10275d1
  4116ff:	sbb    BYTE PTR [edi],ah
  411701:	jo     0x4116c2
  411703:	and    BYTE PTR [esi],bl
  411705:	add    al,0x4e
  411707:	adc    DWORD PTR [ecx+0x3c],0x4a87feb5
  41170e:	aas    
  41170f:	test   al,0x9
  411711:	scas   al,BYTE PTR es:[edi]
  411712:	push   ebx
  411713:	add    al,0x7d
  411715:	sbb    BYTE PTR [edi],bh
  411717:	aad    0x21
  411719:	mov    ch,0x55
  41171b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41171c:	xchg   bl,dh
  41171e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41171f:	adc    bl,bl
  411721:	aaa    
  411722:	dec    esi
  411723:	(bad)  
  411724:	jmp    0x4116e5
  411726:	bound  edx,QWORD PTR [ebx+0x5ded0184]
  41172c:	rol    BYTE PTR [edx-0x20],cl
  41172f:	out    dx,al
  411730:	mov    ebx,0xfd2577d2
  411735:	(bad)  
  411736:	in     al,dx
  411737:	rcl    DWORD PTR [edi],1
  411739:	sbb    ch,dl
  41173b:	(bad)  
  41173c:	jl     0x4116e7
  41173e:	popa   
  41173f:	int    0x33
  411741:	pop    ebp
  411742:	jecxz  0x41170a
  411744:	mov    ebx,0x9660bc9e
  411749:	ror    BYTE PTR [ebx+0x6c13c56d],1
  41174f:	pop    esi
  411750:	mov    esi,0x545e7aae
  411755:	scas   al,BYTE PTR es:[edi]
  411756:	dec    eax
  411757:	arpl   WORD PTR [esi],dx
  411759:	idiv   BYTE PTR [edx+0x19]
  41175c:	(bad)  
  41175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175e:	lea    ebx,[bp-0x70cd]
  411763:	ss aaa 
  411765:	lods   al,BYTE PTR ds:[esi]
  411766:	or     al,0xc7
  411768:	outs   dx,BYTE PTR ds:[esi]
  411769:	dec    esi
  41176a:	and    ebp,DWORD PTR [esi+0x7a347bb2]
  411770:	sub    BYTE PTR [esi+0x9cb9402],ah
  411776:	lds    ebx,FWORD PTR [edx+0x7e2ce467]
  41177c:	push   ss
  41177d:	sbb    DWORD PTR [ebx],edi
  41177f:	push   ds
  411780:	aas    
  411781:	jmp    0x4117ad
  411783:	das    
  411784:	mov    edx,DWORD PTR [ebx+ecx*4-0x17162fab]
  41178b:	pop    es
  41178c:	add    BYTE PTR [eax],al
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	xor    DWORD PTR [edi+0x62249ad2],edx
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	cmp    WORD PTR [eax],0x9997
  4117c4:	addr16 je 0x4117a7
  4117c7:	adc    DWORD PTR [edi*4-0x78edc377],ecx
  4117ce:	in     al,dx
  4117cf:	fadd   st,st(5)
  4117d1:	jmp    0x1b117515
  4117d6:	iret   
  4117d7:	sti    
  4117d8:	sbb    DWORD PTR [edi],eax
  4117da:	enter  0xa1a3,0xb7
  4117de:	les    eax,FWORD PTR [eax]
  4117e0:	cmp    BYTE PTR [edx-0x8552048],dl
  4117e6:	mov    esi,0xc8ae4eeb
  4117eb:	ds repnz push eax
  4117ee:	cmp    DWORD PTR [ebp+eiz*2+0x542a58fd],esp
  4117f5:	adc    DWORD PTR [ebx+eax*8-0x2f],0x333c1946
  4117fd:	aaa    
  4117fe:	in     al,dx
  4117ff:	pop    ebx
  411800:	addr16 stc 
  411802:	cmp    eax,0x469ae357
  411807:	mov    ecx,0xdd9a3591
  41180c:	push   ss
  41180d:	jge    0x411878
  41180f:	mov    ebp,0xac4fbb2f
  411814:	icebp  
  411815:	adc    ah,BYTE PTR [eax+0x14]
  411818:	and    DWORD PTR [edi-0x6d],edi
  41181b:	dec    ebx
  41181c:	(bad)  
  41181d:	int3   
  41181e:	shl    BYTE PTR [ecx],cl
  411820:	pop    eax
  411821:	ss dec ebx
  411823:	inc    BYTE PTR [esi+ebp*4]
  411826:	mov    ecx,0x75bf9233
  41182b:	inc    edi
  41182c:	dec    eax
  41182d:	mov    ebp,0x705456ad
  411832:	ins    BYTE PTR es:[edi],dx
  411833:	ret    0x1354
  411836:	scas   eax,DWORD PTR es:[edi]
  411837:	stos   BYTE PTR es:[edi],al
  411838:	mov    DWORD PTR [ecx+0x3f],0xeb015861
  41183f:	jns    0x4118bd
  411841:	(bad)  
  411842:	mov    ds:0x1e3dd058,eax
  411847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411848:	jp     0x411890
  41184a:	xor    ebx,DWORD PTR [eax-0x76487e30]
  411850:	dec    ecx
  411851:	repz pop edi
  411853:	jmp    0x4763:0xe17d17d8
  41185a:	gs xor al,0x6b
  41185d:	inc    ecx
  41185e:	add    eax,0x161b85ef
  411863:	mov    edi,0x4a9dd2f2
  411868:	add    BYTE PTR [eax-0x4d690625],al
  41186e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41186f:	sbb    esi,ebp
  411871:	in     al,0x34
  411873:	push   esp
  411874:	sbb    edx,DWORD PTR ds:[edx+0x4482f068]
  41187b:	add    edi,DWORD PTR [edi+0x12]
  41187e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187f:	push   0x52
  411881:	xlat   BYTE PTR ds:[ebx]
  411882:	push   cs
  411883:	(bad)  
  411884:	in     al,dx
  411885:	xor    BYTE PTR [edi-0x7a564af7],ch
  41188b:	stos   BYTE PTR es:[edi],al
  41188c:	mov    esp,0x357a4c48
  411891:	stos   BYTE PTR es:[edi],al
  411892:	clc    
  411893:	leave  
  411894:	fisttp DWORD PTR ds:0x18b08919
  41189a:	xchg   DWORD PTR [eax+0x24cc2ef9],edx
  4118a0:	pusha  
  4118a1:	and    esp,ebp
  4118a3:	fisub  DWORD PTR [edi]
  4118a5:	aam    0xaf
  4118a7:	mov    edi,DWORD PTR [eax+0x47]
  4118aa:	gs scas al,BYTE PTR es:[edi]
  4118ac:	cmovp  edi,DWORD PTR [esi+0x7972a4f0]
  4118b3:	rcl    edi,1
  4118b5:	mov    esp,0xb24ffb7e
  4118ba:	retf   
  4118bb:	xor    eax,0x5bf804e5
  4118c0:	(bad)  [esi]
  4118c2:	and    bh,ah
  4118c4:	mov    esi,0xd5407468
  4118c9:	inc    edx
  4118ca:	test   al,0x53
  4118cc:	jmp    0x12ea5ba3
  4118d1:	adc    DWORD PTR [eax],edx
  4118d3:	dec    ebp
  4118d4:	mov    ds:0x6d5956cd,eax
  4118da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118db:	jbe    0x4118d9
  4118dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118de:	(bad)  
  4118df:	in     al,0xc5
  4118e1:	or     DWORD PTR [edi-0x57],ebx
  4118e4:	aas    
  4118e5:	lods   al,BYTE PTR ds:[esi]
  4118e6:	and    esi,DWORD PTR [edi-0x26]
  4118e9:	sbb    dh,BYTE PTR [esi]
  4118eb:	add    DWORD PTR [esi+0x3e],ebp
  4118ee:	call   0xc9f4baec
  4118f3:	pop    esp
  4118f4:	cli    
  4118f5:	sub    eax,0xdcefbe5f
  4118fa:	xchg   ecx,eax
  4118fb:	add    ah,BYTE PTR [ecx]
  4118fd:	mov    eax,0x20448c5d
  411902:	xchg   ecx,eax
  411903:	pusha  
  411904:	jg     0x4118b4
  411906:	mov    eax,ds:0x2995920d
  41190b:	push   ebx
  41190c:	inc    ebx
  41190d:	lock cld 
  41190f:	fwait
  411910:	scas   eax,DWORD PTR es:[edi]
  411911:	xor    dl,BYTE PTR [eax]
  411913:	and    cl,BYTE PTR [ecx+0x3ccf3c6f]
  411919:	mov    BYTE PTR [ecx],bh
  41191b:	cmp    DWORD PTR [esi],edx
  41191d:	cmc    
  41191e:	add    BYTE PTR [ecx+0x199b23d],al
  411924:	pop    esp
  411925:	(bad)  
  411926:	std    
  411927:	jae    0x41193b
  411929:	sti    
  41192a:	mov    ds:0xe380ce7e,al
  41192f:	adc    eax,0x67768fe
  411934:	jge    0x4118cf
  411936:	fcmovnb st,st(2)
  411938:	daa    
  411939:	ja     0x411900
  41193b:	cmp    eax,0x70f1152b
  411940:	add    edi,esi
  411942:	push   es
  411943:	or     eax,0x80cf647e
  411948:	and    esp,DWORD PTR [esi+0x66fafe5d]
  41194e:	rol    bh,0x70
  411951:	sub    ch,BYTE PTR [ebx+0x51]
  411954:	push   ebp
  411955:	inc    bx
  411957:	shl    BYTE PTR [di+0x641f],1
  41195c:	and    dl,BYTE PTR [ebp+0x30]
  41195f:	and    eax,0x5a4bdb6a
  411964:	mov    dl,0xe
  411966:	fdiv   QWORD PTR [edi-0x65]
  411969:	jnp    0x411918
  41196b:	in     al,dx
  41196c:	mov    dh,0x81
  41196e:	push   eax
  41196f:	xchg   ecx,eax
  411970:	sbb    ebx,ecx
  411972:	fisub  DWORD PTR [eax+0x41]
  411975:	xor    al,0x2f
  411977:	cmp    eax,0xa11dd8ce
  41197c:	popf   
  41197d:	es inc esi
  41197f:	and    DWORD PTR [ecx-0x12],ebp
  411982:	xchg   DWORD PTR [ebp+0x2e9d017b],edx
  411988:	pop    ecx
  411989:	dec    edi
  41198a:	inc    esp
  41198b:	test   DWORD PTR [edx-0x2a],0xa232ed2f
  411992:	jns    0x4119d5
  411994:	xor    DWORD PTR [ebx],edx
  411996:	bound  eax,QWORD PTR [ebp+0x2f]
  411999:	or     al,0x92
  41199b:	test   BYTE PTR [edx+0x74],0x5f
  41199f:	jl     0x4119e3
  4119a1:	jo     0x411969
  4119a3:	stos   DWORD PTR es:[edi],eax
  4119a4:	pop    ebx
  4119a5:	dec    edi
  4119a6:	sub    al,0xe1
  4119a8:	popa   
  4119a9:	lock mov ch,0x96
  4119ac:	nop
  4119ad:	xlat   BYTE PTR ds:[ebx]
  4119ae:	mov    bl,dh
  4119b0:	lds    edx,FWORD PTR [eax-0x1d]
  4119b3:	dec    eax
  4119b4:	pop    ecx
  4119b5:	enter  0x22ea,0xb1
  4119b9:	mov    bh,0xc6
  4119bb:	test   BYTE PTR [ebx-0x1a],ch
  4119be:	sti    
  4119bf:	outs   dx,BYTE PTR ds:[esi]
  4119c0:	pop    ebx
  4119c1:	cmp    DWORD PTR [edx+0x5],esi
  4119c4:	pop    edi
  4119c5:	scas   eax,DWORD PTR es:[edi]
  4119c6:	xlat   BYTE PTR ds:[ebx]
  4119c7:	call   0x3b4e:0xef8d41de
  4119ce:	ins    BYTE PTR es:[edi],dx
  4119cf:	ror    eax,1
  4119d1:	int3   
  4119d2:	pop    ebp
  4119d3:	push   ebp
  4119d4:	and    cl,BYTE PTR fs:[ebx+0x4]
  4119d8:	loopne 0x411a47
  4119da:	pushf  
  4119db:	push   0x20
  4119dd:	inc    edi
  4119de:	imul   ecx,DWORD PTR [eax+0x16138ebe],0xcfedb483
  4119e8:	lds    ebx,FWORD PTR [esi+0x555b4737]
  4119ee:	xchg   esp,eax
  4119ef:	jo     0x4119b0
  4119f1:	(bad)  
  4119f2:	fwait
  4119f3:	fwait
  4119f4:	sti    
  4119f5:	mov    cl,bh
  4119f7:	xchg   esi,eax
  4119f8:	imul   ebp,DWORD PTR [ecx],0x6da30cdd
  4119fe:	add    eax,0x2b8028e7
  411a03:	cmp    dh,BYTE PTR [ecx]
  411a05:	push   cs
  411a06:	imul   edi,esi,0xd0428a25
  411a0c:	sbb    al,0x54
  411a0e:	into   
  411a0f:	push   ebx
  411a10:	call   FWORD PTR [edi]
  411a12:	mov    DWORD PTR [eax],ecx
  411a14:	mov    esi,DWORD PTR [edx+0x64]
  411a17:	xchg   esp,eax
  411a18:	cmc    
  411a19:	sbb    eax,0x2e9183f7
  411a1e:	stos   DWORD PTR es:[edi],eax
  411a1f:	jg     0x4119d7
  411a21:	push   ds
  411a22:	test   DWORD PTR [ecx],esp
  411a24:	mov    WORD PTR [ecx+edx*4],?
  411a27:	mov    dl,0xf4
  411a29:	das    
  411a2a:	mov    ebx,DWORD PTR [ebp-0x10]
  411a2d:	sub    ebx,edi
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x3ed7da8b
  411a62:	jns    0x411ac5
  411a64:	xchg   esi,eax
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	rcl    DWORD PTR [esi-0x50c52f35],cl
  411a73:	sub    bl,BYTE PTR [eax]
  411a75:	pop    es
  411a76:	add    dl,0x65
  411a79:	sub    ch,BYTE PTR [edx+ebp*2+0x6f3d99f7]
  411a80:	in     eax,0x8f
  411a82:	scas   al,BYTE PTR es:[edi]
  411a83:	rcr    BYTE PTR [ebp-0x23],1
  411a86:	xchg   BYTE PTR [ecx+0x7c],dl
  411a89:	xchg   BYTE PTR [ebx+eiz*4-0x7c],ch
  411a8d:	sbb    al,0x7
  411a8f:	add    al,0x4
  411a91:	inc    edi
  411a92:	and    ebp,DWORD PTR [eax]
  411a94:	ja     0x411a55
  411a96:	mov    ds:0x5623c616,al
  411a9b:	sti    
  411a9c:	call   FWORD PTR [edx]
  411a9e:	jne    0x411a85
  411aa0:	lock cmp eax,0x3bd7bcbf
  411aa6:	mul    DWORD PTR ds:0x5fa357b0
  411aac:	mov    edx,0x8d4b7ec7
  411ab1:	mov    dl,0xc0
  411ab3:	daa    
  411ab4:	pop    eax
  411ab5:	dec    eax
  411ab6:	mov    ebp,0x3362b569
  411abb:	es adc al,0xdc
  411abe:	cdq    
  411abf:	sar    BYTE PTR [esi+0x73],cl
  411ac2:	gs push 0x38
  411ac5:	gs inc ecx
  411ac7:	test   cl,dl
  411ac9:	xor    DWORD PTR [ebp+0x36ff8664],0xffffffbe
  411ad0:	and    eax,0xb116a149
  411ad5:	into   
  411ad6:	push   esi
  411ad7:	cmp    al,0x50
  411ad9:	adc    BYTE PTR [edx],al
  411adb:	jbe    0x411ac9
  411add:	mov    bh,0xe
  411adf:	or     dh,ch
  411ae1:	ins    BYTE PTR es:[edi],dx
  411ae2:	mov    ah,0xa4
  411ae4:	cmp    BYTE PTR [esi-0x5c],bh
  411ae7:	adc    ecx,eax
  411ae9:	cwde   
  411aea:	mov    ds:0xdf8715f8,eax
  411aef:	push   cs
  411af0:	mov    eax,0xe5b8b5a6
  411af5:	or     DWORD PTR [ebx+0x45ccfa15],esp
  411afb:	or     eax,0x17760530
  411b00:	sbb    ebx,ecx
  411b02:	add    al,BYTE PTR [ecx]
  411b04:	nop
  411b05:	push   0xac944ff4
  411b0a:	or     ch,dl
  411b0c:	mov    edi,0x21e0a325
  411b11:	(bad)  
  411b12:	(bad)  
  411b13:	call   0x725e5377
  411b18:	jg     0x411afb
  411b1a:	mov    ds:0xb1942d98,eax
  411b1f:	or     ah,BYTE PTR [esp+esi*4]
  411b22:	fbld   TBYTE PTR [ecx+edi*1]
  411b25:	adc    esi,DWORD PTR [edi+eax*8+0x5c]
  411b29:	xor    al,BYTE PTR [edx-0x62010b23]
  411b2f:	and    al,0x5f
  411b31:	gs (bad) 
  411b33:	jne    0x411ae2
  411b35:	aas    
  411b36:	jg     0x411ace
  411b38:	push   esp
  411b3a:	jne    0x411adc
  411b3c:	jo     0x411b15
  411b3e:	cmp    al,0xe6
  411b40:	repnz mov ds:0xfaa97d1b,al
  411b46:	jne    0x411ae7
  411b48:	adc    dh,0x50
  411b4b:	or     DWORD PTR [eax+0x7a4a4772],esi
  411b51:	cmp    BYTE PTR [ecx],ch
  411b53:	jnp    0x411b1e
  411b55:	out    0x6f,al
  411b57:	xor    eax,0x4ef96990
  411b5c:	fdivr  st(5),st
  411b5e:	lock stc 
  411b60:	mov    dl,0x40
  411b62:	cld    
  411b63:	xchg   ecx,eax
  411b64:	mov    al,0x2d
  411b66:	repnz out dx,al
  411b68:	mov    edx,0x35fc0b4f
  411b6d:	fstp   TBYTE PTR [edx]
  411b6f:	outs   dx,DWORD PTR ds:[esi]
  411b70:	mov    eax,ds:0xa052f8a0
  411b75:	xchg   ebx,eax
  411b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b77:	not    DWORD PTR [ecx-0x1302729a]
  411b7d:	push   ds
  411b7e:	adc    al,0x80
  411b80:	test   BYTE PTR [edx-0x7fd755d9],cl
  411b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b87:	and    al,0xa8
  411b89:	ins    BYTE PTR es:[edi],dx
  411b8a:	mov    bl,0x5a
  411b8c:	test   al,0x36
  411b8e:	cmp    al,0x19
  411b90:	test   BYTE PTR [ebx],ch
  411b92:	addr16 enter 0xf0fb,0x1d
  411b97:	mov    bl,0xc
  411b99:	mov    edi,0xa7c8ee2e
  411b9e:	inc    esi
  411b9f:	adc    DWORD PTR [edi+eiz*1],eax
  411ba2:	ins    DWORD PTR es:[edi],dx
  411ba3:	mov    esi,0x72ba7b7c
  411ba8:	call   0x5176ace9
  411bad:	pop    ds
  411bae:	mov    edx,0xe6b360c9
  411bb3:	addr16 and al,0xf3
  411bb6:	fs out 0x6b,al
  411bb9:	xchg   DWORD PTR [esp+ecx*4-0x560afcf8],edi
  411bc0:	shl    BYTE PTR fs:[edi+eax*4],1
  411bc4:	in     al,0x5e
  411bc6:	ins    BYTE PTR es:[edi],dx
  411bc7:	ret    
  411bc8:	mov    al,0x74
  411bca:	sbb    al,0x9f
  411bcc:	lods   al,BYTE PTR ds:[esi]
  411bcd:	stos   BYTE PTR es:[edi],al
  411bce:	pushf  
  411bcf:	and    DWORD PTR [ebp+0x24],edx
  411bd2:	inc    eax
  411bd3:	nop
  411bd4:	mov    eax,ds:0x14e6bc48
  411bd9:	retf   0xb683
  411bdc:	dec    esi
  411bdd:	inc    ebp
  411bde:	mov    edi,0xab449f3c
  411be3:	sub    DWORD PTR [edx-0x1a],ebp
  411be6:	pop    ebp
  411be7:	inc    edi
  411be8:	out    0x7f,eax
  411bea:	call   0x5d9e95cb
  411bef:	into   
  411bf0:	int    0xdd
  411bf2:	in     al,0xdf
  411bf4:	mov    edx,DWORD PTR [edi+0x29f2e3f6]
  411bfa:	xlat   BYTE PTR ds:[ebx]
  411bfb:	out    0xd,al
  411bfd:	mov    ds:0x829e58a0,eax
  411c02:	pop    ds
  411c03:	bnd je 0x411c24
  411c06:	stos   BYTE PTR es:[edi],al
  411c07:	mov    ah,BYTE PTR [ecx]
  411c09:	cmp    ebp,DWORD PTR [ebx-0x2a]
  411c0c:	jg     0x411c20
  411c0e:	inc    ecx
  411c0f:	fiadd  WORD PTR [ebx]
  411c11:	xor    ah,cl
  411c13:	ror    DWORD PTR [ecx-0x38],1
  411c16:	or     al,0xda
  411c18:	clc    
  411c19:	aas    
  411c1a:	cmp    BYTE PTR [ebx+0x7eb5252e],ah
  411c20:	sbb    DWORD PTR [ecx+ebx*8-0x227d8555],esp
  411c27:	xchg   ebx,eax
  411c28:	(bad)  
  411c29:	xchg   ecx,eax
  411c2a:	or     eax,0x31384780
  411c2f:	(bad)  
  411c30:	pop    ecx
  411c31:	icebp  
  411c32:	(bad)  
  411c33:	cdq    
  411c34:	in     al,0xa7
  411c36:	cmp    BYTE PTR [edx+eax*2],ch
  411c39:	stc    
  411c3a:	scas   eax,DWORD PTR es:[edi]
  411c3b:	push   ebx
  411c3c:	and    eax,0xea568363
  411c41:	mov    bh,0xc0
  411c43:	jo     0x411c0b
  411c45:	test   BYTE PTR [ecx-0x5f],ah
  411c48:	push   edx
  411c49:	xlat   BYTE PTR ds:[ebx]
  411c4a:	in     eax,0xb1
  411c4c:	aam    0x91
  411c4e:	daa    
  411c4f:	je     0x411c3b
  411c51:	hlt    
  411c52:	pop    ss
  411c53:	xor    eax,0x6c1bf368
  411c58:	ds stos BYTE PTR es:[edi],al
  411c5a:	ins    DWORD PTR es:[edi],dx
  411c5b:	mov    ch,0xca
  411c5d:	push   es
  411c5e:	out    0x3d,al
  411c60:	pop    edi
  411c61:	mov    esp,0x6a23df8c
  411c66:	and    DWORD PTR [ebx-0x20],0x2c
  411c6a:	jmp    0x86f2:0xf5f7e822
  411c71:	adc    edx,DWORD PTR [eax-0x68]
  411c74:	dec    edx
  411c75:	mov    ebp,0x374bfeff
  411c7a:	dec    edx
  411c7b:	add    al,0xc1
  411c7d:	mov    esp,0xa34e7f7b
  411c82:	sbb    BYTE PTR [edx+ecx*8+0x36],cl
  411c86:	stos   BYTE PTR es:[edi],al
  411c87:	pop    edi
  411c88:	aaa    
  411c89:	jp     0x411c42
  411c8b:	enter  0x8cc,0x8c
  411c8f:	ret    0x8750
  411c92:	in     al,0x8e
  411c94:	sar    BYTE PTR [esi],cl
  411c96:	stc    
  411c97:	or     eax,0x7c4fdf65
  411c9c:	ss jae 0x411d0b
  411c9f:	mov    es,WORD PTR [edx-0x35ff4c4b]
  411ca5:	aam    0xea
  411ca7:	cdq    
  411ca8:	jge    0x411c79
  411caa:	and    DWORD PTR [edi+0x71],ebp
  411cad:	mov    esi,0x19e96865
  411cb2:	adc    BYTE PTR [edi],0x8f
  411cb5:	sbb    DWORD PTR [ebp+eiz*4-0x34ef1090],esi
  411cbc:	pop    edx
  411cbd:	xor    DWORD PTR [edi-0x5c],ecx
  411cc0:	pop    ebx
  411cc1:	mov    eax,0xec01c58
  411cc6:	inc    edx
  411cc7:	mov    ah,0x5c
  411cc9:	mov    DWORD PTR [ebp+0x2e],0xc5e46846
  411cd0:	retf   0x876a
  411cd3:	cmp    eax,0xc3d85673
  411cd8:	mov    edi,DWORD PTR [ebp-0x8]
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xf166579e
  411cfd:	xchg   esi,eax
  411cfe:	shr    BYTE PTR [esi+0x7e],0x65
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	cmp    DWORD PTR [eax+edx*1+0x45],ebx
  411d0c:	sub    DWORD PTR [ecx-0x43],edx
  411d0f:	dec    esp
  411d10:	dec    edx
  411d11:	xor    eax,0xb8b65039
  411d16:	inc    ebp
  411d17:	hlt    
  411d18:	enter  0xc3da,0x10
  411d1c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1e:	pushf  
  411d1f:	xchg   ebx,eax
  411d20:	icebp  
  411d21:	sub    eax,0xcc18fb0d
  411d26:	push   ss
  411d27:	scas   al,BYTE PTR es:[edi]
  411d28:	das    
  411d29:	dec    edx
  411d2a:	int3   
  411d2b:	lahf   
  411d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2d:	adc    bh,BYTE PTR [ecx+0x20d5dc18]
  411d33:	adc    al,0x34
  411d35:	inc    ecx
  411d36:	shl    DWORD PTR [edi-0x77],0x9c
  411d3a:	push   ebx
  411d3b:	push   eax
  411d3c:	test   DWORD PTR [ebp-0x1d],0x99e80469
  411d43:	mov    edx,0x28f6e077
  411d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d49:	loopne 0x411cff
  411d4b:	outs   dx,BYTE PTR ds:[esi]
  411d4c:	and    DWORD PTR [eax],esp
  411d4e:	gs jns 0x411d46
  411d51:	adc    ecx,DWORD PTR [edi-0xb53e902]
  411d57:	in     eax,0x1
  411d59:	push   cs
  411d5a:	jne    0x411d5e
  411d5c:	stos   DWORD PTR es:[edi],eax
  411d5d:	inc    esp
  411d5e:	xchg   esi,eax
  411d5f:	cld    
  411d60:	jne    0x411d80
  411d62:	dec    eax
  411d63:	(bad)  
  411d64:	inc    ebp
  411d65:	pusha  
  411d66:	or     al,0x7e
  411d68:	js     0x411d5e
  411d6a:	push   ecx
  411d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d6c:	imul   DWORD PTR [ecx+0x20]
  411d6f:	push   esp
  411d70:	xchg   ebx,eax
  411d71:	repnz fdiv st(0),st
  411d74:	iret   
  411d75:	arpl   WORD PTR [edi+eax*2+0x78],dx
  411d79:	or     DWORD PTR [edx+edi*8+0x299deacf],esi
  411d80:	loop   0x411d9a
  411d82:	icebp  
  411d83:	int3   
  411d84:	xor    DWORD PTR [eax-0x62],ebp
  411d87:	int    0xdb
  411d89:	push   edx
  411d8a:	aaa    
  411d8b:	cmp    ebx,DWORD PTR [ebx+ebx*2]
  411d8e:	in     eax,dx
  411d8f:	hlt    
  411d90:	sbb    al,cl
  411d92:	adc    DWORD PTR ds:[esp+ecx*4+0x26d59ff8],0xffffffee
  411d9b:	cmp    BYTE PTR [ebx-0x25106dae],al
  411da1:	xchg   ebx,eax
  411da2:	or     al,0x65
  411da4:	lods   eax,DWORD PTR ds:[esi]
  411da5:	cwde   
  411da6:	mov    ecx,0x4b5e6164
  411dab:	add    bh,BYTE PTR [ecx]
  411dad:	cld    
  411dae:	xor    eax,0xcc25111f
  411db3:	xchg   ebx,eax
  411db4:	sub    al,0xa9
  411db6:	and    ebp,esi
  411db8:	mov    bh,0x81
  411dba:	sbb    eax,0x5a74a914
  411dbf:	jae    0x411d8a
  411dc1:	mov    WORD PTR [ebx*2+0x671627a7],cs
  411dc8:	inc    edx
  411dc9:	sub    eax,0x6f88761d
  411dce:	mov    ah,0xb3
  411dd0:	popa   
  411dd1:	add    DWORD PTR [edx+esi*2],esp
  411dd4:	addr16 (bad) 
  411dd6:	lods   al,BYTE PTR ds:[esi]
  411dd7:	add    eax,0xd4a7af89
  411ddc:	xchg   esi,eax
  411ddd:	lods   eax,DWORD PTR ds:[esi]
  411dde:	fsubr  QWORD PTR [edx]
  411de0:	outs   dx,BYTE PTR ds:[esi]
  411de1:	and    dh,BYTE PTR [edx-0x3c]
  411de4:	imul   ebx,DWORD PTR [edi],0xf8098a4a
  411dea:	jl     0x411dff
  411dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ded:	push   ss
  411dee:	xchg   esp,eax
  411def:	(bad)  
  411df0:	shl    ch,0x19
  411df3:	mov    bh,BYTE PTR [eax]
  411df5:	fdivr  st(6),st
  411df7:	inc    eax
  411df8:	(bad)  
  411df9:	ss sbb eax,0x18312d2c
  411dff:	jae    0x411dbf
  411e01:	jecxz  0x411d9d
  411e03:	vcvtdq2ps ymm3,YMMWORD PTR [eax+0x50ba0fbb]
  411e0b:	sbb    DWORD PTR [esi],edi
  411e0d:	cmp    BYTE PTR [edi+0x52],al
  411e10:	int3   
  411e11:	jecxz  0x411e59
  411e13:	dec    ecx
  411e14:	es enter 0x5108,0xd4
  411e19:	stos   BYTE PTR es:[edi],al
  411e1a:	mov    ah,BYTE PTR [ecx-0x33]
  411e1d:	(bad)  
  411e1e:	cmp    ah,BYTE PTR [edx+0x4fd37854]
  411e24:	jle    0x411df7
  411e26:	xchg   ebp,eax
  411e27:	retf   0x9cd1
  411e2a:	pop    edx
  411e2b:	test   BYTE PTR [eax],al
  411e2d:	repnz cmp eax,0x153d8eb7
  411e33:	adc    al,0x25
  411e35:	sbb    ebp,DWORD PTR [esi+0x34]
  411e38:	adc    BYTE PTR [ebp-0x1c2d3621],bh
  411e3e:	fiadd  DWORD PTR [edi]
  411e40:	gs icebp 
  411e42:	lea    edx,[ecx+ebx*2]
  411e45:	xor    BYTE PTR [esi],0x58
  411e48:	out    dx,eax
  411e49:	pop    edi
  411e4a:	and    ah,BYTE PTR [eax-0x30ec01cc]
  411e50:	mov    cl,0xe2
  411e52:	shr    edi,0x4
  411e55:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411e57:	inc    esi
  411e58:	aaa    
  411e59:	jne    0x411e16
  411e5b:	inc    edx
  411e5c:	push   cs
  411e5d:	loop   0x411e63
  411e5f:	mov    al,0xb9
  411e61:	xor    BYTE PTR [ebp+0x6f],bh
  411e64:	lock retf 0x859f
  411e68:	sub    al,0x15
  411e6a:	mov    ebp,0x428e50d5
  411e6f:	icebp  
  411e70:	and    esp,DWORD PTR [edx-0x2ef52881]
  411e76:	and    ch,BYTE PTR [ebx-0x3d8ef54f]
  411e7c:	test   DWORD PTR [edi-0x1a],0xbd67521f
  411e83:	jp     0x411f01
  411e85:	ret    0xc982
  411e88:	jmp    0x5d3b:0xe2e57465
  411e8f:	(bad)  
  411e90:	xor    eax,0x3cd62331
  411e95:	sub    al,0xed
  411e97:	leave  
  411e98:	and    BYTE PTR [edx+0x57],al
  411e9b:	mov    BYTE PTR [ebx],ah
  411e9d:	or     eax,0x92a39a41
  411ea2:	sub    al,0x3c
  411ea4:	pop    ds
  411ea5:	stos   BYTE PTR es:[edi],al
  411ea6:	addr16 cmc 
  411ea8:	call   0xfa8ee317
  411ead:	repnz sbb DWORD PTR [ebp+0x7c8b18a2],edx
  411eb4:	pop    ss
  411eb5:	mov    edx,0x43dcff76
  411eba:	mov    eax,ds:0x43a09bc0
  411ebf:	mov    eax,ds:0x901ff9c7
  411ec4:	dec    eax
  411ec5:	lock bnd ja 0x411f2b
  411ec9:	(bad)  
  411eca:	stos   DWORD PTR es:[edi],eax
  411ecb:	mov    al,ds:0xfb88cb9d
  411ed0:	inc    ebp
  411ed1:	xor    al,0x21
  411ed3:	call   0x9325:0x5e45fcb1
  411eda:	pop    ss
  411edb:	xchg   edi,eax
  411edc:	dec    ebp
  411edd:	inc    ebp
  411ede:	stos   BYTE PTR es:[edi],al
  411edf:	dec    edi
  411ee0:	mov    ch,0xf6
  411ee2:	call   0x3861:0x90029e7
  411ee9:	dec    esi
  411eea:	jb     0x411e91
  411eec:	mov    esi,DWORD PTR [ebx+ebx*8+0x7c]
  411ef0:	rol    BYTE PTR [eax+0x7b],0x69
  411ef4:	jmp    0x6ea5:0xab0f52b9
  411efb:	ja     0x411ec6
  411efd:	das    
  411efe:	add    edi,DWORD PTR [ebx+0x76]
  411f01:	imul   esp,esp,0xffffffcb
  411f04:	in     eax,dx
  411f05:	push   cs
  411f06:	in     al,dx
  411f07:	push   esi
  411f08:	(bad)  
  411f0a:	stos   DWORD PTR es:[edi],eax
  411f0b:	loop   0x411f1b
  411f0d:	or     DWORD PTR [eax],esp
  411f0f:	jbe    0x411f8f
  411f11:	enter  0x751d,0xff
  411f15:	mov    al,ds:0x281631fe
  411f1a:	and    dl,0x8c
  411f1d:	in     al,0x37
  411f1f:	add    cl,ch
  411f21:	test   ebx,edx
  411f23:	mov    DWORD PTR [esi],esp
  411f25:	loopne 0x411f8c
  411f27:	scas   al,BYTE PTR es:[edi]
  411f28:	jnp    0x411f1c
  411f2a:	or     ebx,DWORD PTR [edi+0x31a16210]
  411f30:	adc    bh,BYTE PTR [esi]
  411f32:	sub    ch,BYTE PTR [eax-0x102784a8]
  411f38:	pop    ds
  411f39:	test   eax,0x2d8a5111
  411f3e:	xchg   BYTE PTR [ebp-0x7efa219c],al
  411f44:	aas    
  411f45:	pusha  
  411f46:	pop    ecx
  411f47:	int3   
  411f48:	xchg   esi,eax
  411f49:	sbb    ecx,DWORD PTR [bp+si-0x2]
  411f4d:	pop    ss
  411f4e:	(bad)  
  411f50:	xor    cl,BYTE PTR [edi]
  411f52:	fcomi  st,st(6)
  411f54:	inc    esi
  411f55:	es mov ecx,0xcb9647ea
  411f5b:	xchg   DWORD PTR [ebp+0x32],esi
  411f5e:	stos   BYTE PTR es:[edi],al
  411f5f:	out    0x6f,eax
  411f61:	adc    al,0x6
  411f63:	into   
  411f64:	push   esp
  411f65:	pusha  
  411f66:	lods   al,BYTE PTR ds:[esi]
  411f67:	adc    al,BYTE PTR [ecx-0x34]
  411f6a:	mov    ebp,0x7aa3ace7
  411f6f:	xchg   ebp,eax
  411f70:	ja     0x411f22
  411f72:	mov    esp,0x8bc4558b
  411f77:	jge    0x411f75
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	cmp    bh,bh
  411f90:	in     al,0x2c
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9b:	in     al,dx
  411f9c:	sbb    BYTE PTR [edx+0xbf8a009],ah
  411fa2:	pop    ds
  411fa3:	or     DWORD PTR [ebp+0x7fc2b1b8],ecx
  411fa9:	scas   eax,DWORD PTR es:[edi]
  411faa:	cs jb  0x411f78
  411fad:	jae    0x411f46
  411faf:	xor    ch,dh
  411fb1:	pop    edx
  411fb2:	dec    esp
  411fb3:	mov    ebx,0x20dc3d97
  411fb8:	xor    eax,DWORD PTR [eax]
  411fba:	out    0xfc,eax
  411fbc:	jbe    0x411fe5
  411fbe:	enter  0x4abe,0x85
  411fc2:	enter  0xdd62,0x9e
  411fc6:	rcl    BYTE PTR [ecx+0x16],0x57
  411fca:	jns    0x411f6b
  411fcc:	add    esi,ebx
  411fce:	add    dh,BYTE PTR [esi]
  411fd0:	sbb    DWORD PTR [esi+0x7d],ecx
  411fd3:	ins    DWORD PTR es:[edi],dx
  411fd4:	call   0x8e7a:0xa23667ef
  411fdb:	push   0x9bc8e755
  411fe0:	dec    ebp
  411fe1:	out    dx,eax
  411fe2:	in     al,dx
  411fe3:	imul   eax,DWORD PTR [esi-0x70],0xffffff99
  411fe7:	jns    0x411f9e
  411fe9:	jge    0x411fe4
  411feb:	fldenv [ecx]
  411fed:	shl    DWORD PTR ds:0xc946ca7,1
  411ff3:	loopne 0x412055
  411ff5:	nop
  411ff6:	shr    DWORD PTR [ebx+0x32],1
  411ff9:	test   BYTE PTR [eax],bh
  411ffb:	pop    ebp
  411ffc:	push   esi
  411ffd:	jb     0x411fcb
  411fff:	ins    BYTE PTR es:[edi],dx
  412000:	xlat   BYTE PTR ds:[ebx]
  412001:	shl    ebp,1
  412003:	cdq    
  412004:	bound  esi,QWORD PTR [edx]
  412006:	ud2    
  412008:	call   0x6bbc:0x12aa119a
  41200f:	xchg   DWORD PTR [eax+0x7b1b6c54],esi
  412015:	(bad)  
  412016:	fild   WORD PTR [ebp+0x6b]
  412019:	es push ds
  41201b:	fs call 0x4e72716d
  412021:	xchg   edx,eax
  412022:	out    dx,eax
  412023:	pop    edx
  412024:	dec    eax
  412025:	mov    al,BYTE PTR [ebp+0x2f]
  412028:	sub    ebp,DWORD PTR [edi+0x40]
  41202b:	mov    DWORD PTR [edx],ecx
  41202d:	mov    WORD PTR [edx],fs
  41202f:	fisttp WORD PTR [edx+0x10]
  412032:	inc    edi
  412033:	sahf   
  412034:	mov    al,0xd7
  412036:	ror    BYTE PTR [ebx+0x38],cl
  412039:	lds    ebp,FWORD PTR [edx]
  41203b:	call   0x32ab:0xfeb77b78
  412042:	imul   edi,DWORD PTR [esi+eiz*2-0x529c5f6],0xf260065c
  41204d:	cmp    ch,ah
  41204f:	cmp    BYTE PTR [ebp+0x1925d338],ah
  412055:	fdiv   QWORD PTR [eax]
  412057:	stc    
  412058:	lahf   
  412059:	mov    ch,0x76
  41205b:	adc    al,0xc0
  41205d:	cmp    al,0x77
  41205f:	sbb    ebx,DWORD PTR [ebp+ebx*2-0x575095a2]
  412066:	mov    edi,0x487cbb11
  41206b:	in     eax,dx
  41206c:	stos   BYTE PTR es:[edi],al
  41206d:	cld    
  41206e:	ret    0x52e3
  412071:	fld    TBYTE PTR [ebx+0x71fd058a]
  412077:	sbb    BYTE PTR [eax-0x6c],al
  41207a:	push   cs
  41207b:	mov    ah,0xc1
  41207d:	hlt    
  41207e:	jne    0x41201c
  412080:	inc    esi
  412081:	or     edi,DWORD PTR [edx+0x5]
  412084:	push   edx
  412085:	dec    esp
  412086:	pusha  
  412087:	fistp  DWORD PTR [edx+0x78]
  41208a:	jmp    0x53ac85b4
  41208f:	(bad)  
  412090:	mov    cl,0x27
  412092:	sar    edi,1
  412094:	int    0x7a
  412096:	cmp    eax,0xe218a9f3
  41209b:	mov    esi,0x7ed7f114
  4120a0:	xor    eax,eax
  4120a2:	mov    ch,0xd3
  4120a4:	lds    esp,FWORD PTR [edx-0x6b]
  4120a7:	push   edx
  4120a8:	push   ss
  4120a9:	jae    0x412088
  4120ab:	xchg   edi,eax
  4120ac:	ss add eax,0xbad58fd8
  4120b2:	das    
  4120b3:	cld    
  4120b4:	inc    ebp
  4120b5:	push   esi
  4120b6:	fcomp  st(4)
  4120b8:	daa    
  4120b9:	sub    al,0x18
  4120bb:	sbb    BYTE PTR [esi+0x11],0xcb
  4120bf:	fs push 0x9ceb98a2
  4120c5:	or     dl,BYTE PTR [eax]
  4120c7:	add    eax,0xd59b3adc
  4120cc:	in     eax,dx
  4120cd:	ds sti 
  4120cf:	mov    ds:0xca6d3159,eax
  4120d4:	lods   al,BYTE PTR ds:[esi]
  4120d5:	push   ss
  4120d6:	xchg   ebx,eax
  4120d7:	sbb    al,0x24
  4120d9:	mov    ?,dx
  4120dc:	rcr    edi,1
  4120de:	push   0x51af1474
  4120e3:	repnz pop es
  4120e5:	add    dh,ch
  4120e7:	push   ecx
  4120e8:	mov    DWORD PTR [ebp+0x22],eax
  4120eb:	push   ecx
  4120ec:	outs   dx,DWORD PTR ds:[esi]
  4120ed:	jp     0x4120a2
  4120ef:	jecxz  0x412154
  4120f1:	out    0xe0,eax
  4120f3:	into   
  4120f4:	or     eax,0xfcedf278
  4120f9:	nop
  4120fa:	mov    ecx,0x77336bd9
  4120ff:	jne    0x41215e
  412101:	jge    0x41209f
  412103:	retf   0x4ab
  412106:	mov    al,ds:0x7a0d6f15
  41210b:	pop    ebx
  41210c:	(bad)  
  41210e:	jl     0x4120f8
  412110:	(bad)  
  412111:	out    0xb,eax
  412113:	fidiv  WORD PTR [edx]
  412115:	push   ebx
  412116:	push   edx
  412117:	mov    ds:0x7713931c,eax
  41211c:	pusha  
  41211d:	mov    ebp,0xf20f389d
  412122:	jl     0x41217a
  412124:	js     0x4120b7
  412126:	int    0xf4
  412128:	cmp    al,0x5
  41212a:	and    dh,0xe9
  41212d:	add    al,0xf0
  41212f:	loopne 0x412176
  412131:	rol    DWORD PTR [esi-0x3700747d],cl
  412137:	fcmove st,st(3)
  412139:	jnp    0x412126
  41213b:	adc    BYTE PTR [ebx],ch
  41213d:	jge    0x4120dc
  41213f:	cmp    BYTE PTR [edi+0x758f7bf8],0x3
  412146:	mov    esp,eax
  412148:	gs mov ah,0x42
  41214b:	rcl    edx,0xf6
  41214e:	test   al,0xc9
  412150:	add    cl,BYTE PTR [ecx+ebp*2-0x6d529859]
  412157:	add    ecx,DWORD PTR [esi]
  412159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215a:	push   0x5f
  41215c:	sbb    eax,0x2cc52510
  412161:	(bad)  
  412162:	or     dl,BYTE PTR [ebx]
  412164:	dec    esp
  412165:	int    0xfc
  412167:	cdq    
  412168:	fild   WORD PTR [edx]
  41216a:	mov    ds:0x417043a2,al
  41216f:	stc    
  412170:	push   0xffffffc9
  412172:	outs   dx,BYTE PTR ds:[esi]
  412173:	hlt    
  412174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412175:	repnz mov ah,0x86
  412178:	fiadd  WORD PTR [edx-0x4c6dd43c]
  41217e:	mov    esi,0x5d124287
  412183:	mov    dl,0xe9
  412185:	into   
  412186:	stos   DWORD PTR es:[edi],eax
  412187:	inc    esi
  412188:	inc    esp
  412189:	sbb    edx,eax
  41218b:	sub    DWORD PTR [edx],edx
  41218d:	mov    BYTE PTR [edi+0x16],ch
  412190:	jns    0x412133
  412192:	jmp    0xaced:0x2d500ebf
  412199:	mov    ds:0x20f8dab7,al
  41219e:	jbe    0x4121d7
  4121a0:	arpl   WORD PTR [ebx],sp
  4121a2:	test   al,0x18
  4121a4:	and    eax,0x6c5aae74
  4121a9:	add    DWORD PTR [ebp+0x6b79dd1],edi
  4121af:	pop    edx
  4121b0:	inc    esi
  4121b1:	leave  
  4121b2:	out    dx,al
  4121b3:	(bad)  
  4121b5:	scas   eax,DWORD PTR es:[edi]
  4121b6:	shr    BYTE PTR [edx-0x6d],cl
  4121b9:	(bad)  
  4121ba:	jne    0x41215a
  4121bc:	stos   BYTE PTR es:[edi],al
  4121bd:	rcr    BYTE PTR [esi],1
  4121bf:	das    
  4121c0:	repz pop ebp
  4121c2:	repz mov ebx,0xd5403341
  4121c8:	and    al,0xf0
  4121ca:	jecxz  0x412216
  4121cc:	loop   0x412177
  4121ce:	stos   BYTE PTR es:[edi],al
  4121cf:	rcl    WORD PTR [edi-0x63d0d189],0x6b
  4121d7:	int    0xbf
  4121d9:	fsubr  QWORD PTR [eax+0x5c8dfd05]
  4121df:	or     eax,0x937131eb
  4121e4:	push   ebp
  4121e5:	out    0x52,eax
  4121e7:	out    dx,al
  4121e8:	stos   BYTE PTR es:[edi],al
  4121e9:	push   0xffffffcd
  4121eb:	cdq    
  4121ec:	fisub  WORD PTR [di]
  4121ef:	pop    esp
  4121f0:	mov    edi,0xcbdb0074
  4121f5:	pop    ebp
  4121f6:	mov    ds:0xec94db6b,eax
  4121fb:	xchg   ebp,eax
  4121fc:	xor    edi,DWORD PTR [ebp+0x47ad49c0]
  412202:	push   ebx
  412203:	and    ecx,DWORD PTR [esi+0x3]
  412206:	stc    
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	inc    ebp
  412234:	gs es pop eax
  412237:	push   eax
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	aaa    
  412240:	loopne 0x41227d
  412242:	das    
  412243:	push   cs
  412244:	add    DWORD PTR ds:0xce097f35,ecx
  41224a:	lock xchg ecx,eax
  41224c:	ds scas al,BYTE PTR es:[edi]
  41224e:	shl    BYTE PTR [edi-0x11ce87b3],0x18
  412255:	and    al,ah
  412257:	push   ebp
  412258:	enter  0x44ef,0xd9
  41225c:	dec    ecx
  41225d:	adc    eax,0x60789e8c
  412262:	sbb    BYTE PTR [ebx],dl
  412264:	fwait
  412265:	cmp    eax,0x3773ac76
  41226a:	imul   eax,edi,0x57
  41226d:	ss mov edx,0xe1ba9af7
  412273:	mul    DWORD PTR [ecx+0x2]
  412276:	lahf   
  412277:	jno    0x412208
  412279:	dec    edx
  41227a:	sub    al,0x9
  41227c:	xor    DWORD PTR [esi],0x9d63229b
  412282:	nop
  412283:	cwde   
  412284:	aad    0x42
  412286:	retf   
  412287:	cmp    eax,0x349efa6f
  41228c:	cmp    al,0x17
  41228e:	add    eax,0xf535af56
  412293:	call   0xf63411ab
  412298:	mov    cs,esp
  41229a:	fiadd  DWORD PTR [edi+0x75abd24d]
  4122a0:	hlt    
  4122a1:	out    dx,al
  4122a2:	xor    eax,0x1031353
  4122a7:	cmp    eax,0xafed774f
  4122ac:	adc    edi,ecx
  4122ae:	sbb    dh,BYTE PTR [ecx+0x26f6289c]
  4122b4:	cmp    DWORD PTR [ebx+0x61],esp
  4122b7:	xor    BYTE PTR [ebx+edi*8-0x5533552],dl
  4122be:	xchg   esi,eax
  4122bf:	push   eax
  4122c0:	mov    al,ds:0x36776070
  4122c5:	dec    ebx
  4122c6:	jno    0x4122b1
  4122c8:	jg     0x4122f4
  4122ca:	sbb    ecx,DWORD PTR [edx]
  4122cc:	sub    DWORD PTR [edx-0x2e340da1],0x5293e957
  4122d6:	sbb    ah,cl
  4122d8:	pop    eax
  4122d9:	aas    
  4122da:	rcl    bl,cl
  4122dc:	fld    DWORD PTR [ebx+0x78243c11]
  4122e2:	mov    eax,0xbc753efa
  4122e7:	shr    DWORD PTR [ebx],1
  4122e9:	fmul   DWORD PTR [ebx]
  4122eb:	mov    bl,0xac
  4122ed:	mov    esp,0x8e73d438
  4122f2:	call   0x6aaf:0xc77a2870
  4122f9:	xor    al,0xb7
  4122fb:	mov    ecx,0x8ed64433
  412300:	stc    
  412301:	out    dx,eax
  412302:	scas   eax,DWORD PTR es:[edi]
  412303:	cdq    
  412304:	sahf   
  412305:	retf   0x7d54
  412308:	outs   dx,DWORD PTR ds:[esi]
  412309:	xchg   esp,eax
  41230a:	fild   QWORD PTR [edi+0x699c0722]
  412310:	arpl   WORD PTR [esi+0x26cf0895],di
  412316:	sbb    al,0x99
  412318:	mov    ah,0xde
  41231a:	ror    BYTE PTR [edi-0x7b4eeb5f],0x9b
  412321:	cli    
  412322:	and    ebp,ebx
  412324:	xor    eax,0x6c2829f3
  412329:	jmp    0x4122d8
  41232b:	jmp    0x95bf4b73
  412330:	sub    bh,BYTE PTR [ebp-0x1917eb94]
  412336:	and    al,BYTE PTR [ecx+0x4c]
  412339:	mov    esi,0x941daa47
  41233e:	(bad)  
  41233f:	(bad)  
  412340:	dec    edx
  412341:	sub    ebp,DWORD PTR [ebp+0x5c786383]
  412347:	xor    bh,dh
  412349:	jae    0x41231a
  41234b:	(bad)  
  41234c:	les    esp,FWORD PTR [esi-0x601147d2]
  412352:	jp     0x412336
  412354:	call   ebp
  412356:	push   edi
  412357:	push   esp
  412358:	sbb    BYTE PTR [edi],ch
  41235a:	leave  
  41235b:	or     DWORD PTR [ecx],ecx
  41235d:	cmp    al,0x65
  41235f:	adc    al,0x32
  412361:	pop    ebp
  412362:	push   ds
  412363:	aaa    
  412364:	gs hlt 
  412366:	mov    dh,0x98
  412368:	aam    0x93
  41236a:	out    0x2f,eax
  41236c:	cmp    ebx,DWORD PTR [eax+0x40]
  41236f:	xor    al,0xac
  412371:	xchg   BYTE PTR [ecx-0xe8c6e52],dh
  412377:	in     eax,0xf6
  412379:	push   ebx
  41237a:	push   ebx
  41237b:	fld    QWORD PTR [edx]
  41237d:	sar    BYTE PTR [ecx+0x55],1
  412380:	(bad)  
  412381:	fisubr WORD PTR [edx+ebx*4+0x78]
  412385:	xchg   DWORD PTR [edx+0x68],eax
  412388:	test   eax,0x2fd53375
  41238d:	je     0x412324
  41238f:	mov    ds,WORD PTR [edx+0x75]
  412392:	ficomp DWORD PTR ss:[ebp+0x3d]
  412396:	hlt    
  412397:	xchg   ecx,eax
  412398:	dec    ecx
  412399:	jns    0x4123ac
  41239b:	or     ah,0x5
  41239e:	or     BYTE PTR [ebp-0x4b],al
  4123a1:	(bad)  
  4123a2:	out    dx,eax
  4123a3:	xor    BYTE PTR [ebx],al
  4123a5:	mov    al,ds:0xb6af3709
  4123aa:	fmul   st,st(2)
  4123ac:	mov    al,ds:0xfea77ade
  4123b1:	mov    ch,0x14
  4123b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123b4:	sub    al,0xe
  4123b6:	push   esi
  4123b7:	icebp  
  4123b8:	or     ah,BYTE PTR [edi]
  4123ba:	push   ds
  4123bb:	mov    ecx,0x6adc2b18
  4123c0:	and    eax,0x4fc3e9e9
  4123c5:	shl    ecx,cl
  4123c7:	fadd   DWORD PTR [esi+edi*2]
  4123ca:	mov    al,ds:0x840087a8
  4123cf:	xor    edi,DWORD PTR [ecx]
  4123d1:	cmp    ch,BYTE PTR [eiz*1+0xfd916cb]
  4123d8:	push   cs
  4123d9:	push   ebp
  4123da:	je     0x4123fc
  4123dc:	and    eax,0xe8386463
  4123e1:	fwait
  4123e2:	or     esp,0x21
  4123e5:	sub    eax,0xc812dc51
  4123ea:	mov    WORD PTR ds:0xc39ff750,fs
  4123f0:	sbb    BYTE PTR [edx-0xd],bl
  4123f3:	and    DWORD PTR [ebp-0x69],ebx
  4123f6:	inc    edi
  4123f7:	xchg   edi,eax
  4123f8:	ja     0x412399
  4123fa:	xchg   ecx,eax
  4123fb:	(bad)  
  4123fc:	jo     0x412462
  4123fe:	cmc    
  4123ff:	mov    edx,0x42ddd204
  412404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412405:	push   esi
  412406:	cmp    DWORD PTR [ebx-0x9],edi
  412409:	sub    esi,ebx
  41240b:	dec    ecx
  41240c:	pop    ss
  41240d:	call   DWORD PTR [edx]
  41240f:	int    0xc8
  412411:	arpl   WORD PTR [eax+0x6107028d],di
  412417:	pop    ds
  412418:	dec    edx
  412419:	ret    
  41241a:	cwde   
  41241b:	scas   al,BYTE PTR es:[edi]
  41241c:	mov    ds:0x427b9377,eax
  412421:	scas   eax,DWORD PTR es:[edi]
  412422:	pcmpeqd mm6,QWORD PTR [esi]
  412425:	mov    dl,0x98
  412427:	retf   
  412428:	inc    esi
  412429:	jo     0x4123e3
  41242b:	mov    bh,BYTE PTR [ecx-0x52]
  41242e:	xchg   DWORD PTR ds:0x30f290e7,eax
  412434:	dec    BYTE PTR [ebx]
  412436:	jmp    0x556f:0xf80e1f21
  41243d:	cwde   
  41243e:	dec    ebp
  41243f:	pop    ebx
  412440:	add    al,0xe3
  412442:	mov    cs,WORD PTR [esi-0xa]
  412445:	cmp    cl,cl
  412447:	stos   BYTE PTR es:[edi],al
  412448:	orps   xmm5,xmm5
  41244b:	mov    al,0xc2
  41244d:	pop    es
  41244e:	(bad)  
  41244f:	rcr    bh,0x20
  412452:	or     dl,BYTE PTR [edi+0x62]
  412455:	or     DWORD PTR [ecx+0x54d4f563],esi
  41245b:	ror    esp,1
  41245d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245e:	jbe    0x412490
  412460:	fmul   DWORD PTR [eax+eax*4+0x1d]
  412464:	inc    ebp
  412465:	or     edi,eax
  412467:	dec    ecx
  412468:	test   al,0x72
  41246a:	loopne 0x4124a8
  41246c:	daa    
  41246d:	mov    esi,0x2d4920cd
  412472:	mov    gs,WORD PTR [ecx+eax*1-0x1b0852db]
  412479:	loop   0x4124b7
  41247b:	ins    BYTE PTR es:[edi],dx
  41247c:	add    eax,0xabb2e1c3
  412481:	imul   ecx,DWORD PTR [esi],0x9a1ead57
  412487:	iret   
  412488:	sbb    eax,0xd98b1459
  41248d:	xor    al,0xbf
  41248f:	xlat   BYTE PTR ds:[ebx]
  412490:	add    BYTE PTR [edx+0x49c998cd],ah
  412496:	ficom  WORD PTR [esi]
  412498:	outs   dx,BYTE PTR ds:[esi]
  412499:	popf   
  41249a:	add    cl,BYTE PTR [ebx]
  41249c:	in     al,0x3b
  41249e:	arpl   WORD PTR [ebp+ecx*2+0x57],cx
  4124a2:	mov    dh,BYTE PTR [esi]
  4124a4:	cld    
  4124a5:	add    BYTE PTR [ebx+0x74],0xe0
  4124a9:	loop   0x412434
  4124ab:	push   ebp
  4124ac:	in     al,0xe9
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x5e1ebe60
  4124bf:	arpl   WORD PTR [ebp+0x786e3db9],bx
  4124c5:	js     0x4124ac
  4124c7:	jle    0x412541
  4124c9:	js     0x4124b5
  4124cb:	push   ebp
  4124cc:	pop    ebx
  4124cd:	stos   DWORD PTR es:[edi],eax
  4124ce:	lods   al,BYTE PTR ds:[esi]
  4124cf:	or     al,0x82
  4124d1:	pop    ebp
  4124d2:	mov    ebp,0x937a8510
  4124d7:	mov    bh,0x0
  4124d9:	sahf   
  4124da:	test   al,0x67
  4124dc:	aaa    
  4124dd:	in     al,dx
  4124de:	(bad)  
  4124df:	int3   
  4124e0:	mov    ah,0xf
  4124e2:	jo     0x4124a7
  4124e4:	outs   dx,DWORD PTR ds:[esi]
  4124e5:	or     eax,0x215856d4
  4124ea:	fwait
  4124eb:	aaa    
  4124ec:	(bad)  
  4124ed:	lock in al,0xfd
  4124f0:	xchg   BYTE PTR [ecx+0x2d3746d8],ch
  4124f6:	add    DWORD PTR [esi+esi*8-0x53c9d172],edx
  4124fd:	jp     0x412555
  4124ff:	addr16 mov eax,0xb798a1bb
  412505:	mov    edx,0x898b8e13
  41250a:	push   ebx
  41250b:	sbb    BYTE PTR [esi+0x1509f654],bl
  412511:	(bad)  
  412512:	pop    edx
  412513:	int3   
  412514:	cmp    ch,ch
  412516:	jecxz  0x41255d
  412518:	jo     0x4124e4
  41251a:	(bad)  
  41251d:	or     edi,0x52f62df8
  412523:	test   eax,0xcae53560
  412528:	mov    esi,0x81887cba
  41252d:	pop    edx
  41252e:	jne    0x4124c0
  412530:	pop    es
  412531:	push   0xffffffc5
  412533:	jmp    0x4124e5
  412535:	cmp    DWORD PTR [esi],ebp
  412537:	mov    eax,0x33ba7c10
  41253c:	retf   0xb7
  41253f:	push   ebx
  412540:	ins    DWORD PTR es:[edi],dx
  412541:	jo     0x412537
  412543:	int3   
  412544:	je     0x41256e
  412546:	pop    esp
  412547:	jle    0x4124f9
  412549:	or     ch,0x4d
  41254c:	sbb    eax,DWORD PTR [ecx-0x6b00924e]
  412552:	fstp   TBYTE PTR [ecx-0x2a885f2a]
  412558:	fistp  DWORD PTR ds:0x6cf1a5e0
  41255e:	fnsave [ebp-0x5d]
  412561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412562:	jo     0x412574
  412564:	(bad)
  412568:	mov    al,ds:0xcb6fd9c9
  41256d:	dec    BYTE PTR [eax+0x77422be]
  412573:	dec    ebx
  412574:	(bad)  
  412575:	enter  0x6aca,0x4b
  412579:	mov    al,0xe0
  41257b:	xchg   ebp,eax
  41257c:	ins    BYTE PTR es:[edi],dx
  41257d:	push   eax
  41257e:	sbb    eax,0x1e7a680a
  412583:	mov    ecx,0x7b57c58d
  412588:	mov    esi,0x19c48c76
  41258d:	add    edx,edi
  41258f:	ret    0x17f1
  412592:	retf   
  412593:	stos   BYTE PTR es:[edi],al
  412594:	call   0xe2fbc0c5
  412599:	adc    ch,0x7e
  41259c:	jl     0x41253a
  41259e:	out    dx,eax
  41259f:	or     al,0xec
  4125a1:	sbb    BYTE PTR [ecx+0x552df032],dl
  4125a7:	out    dx,eax
  4125a8:	nop
  4125a9:	inc    esi
  4125aa:	add    cl,dh
  4125ac:	jp     0x41258f
  4125ae:	sub    bh,dl
  4125b0:	jb     0x412604
  4125b2:	push   0xffffffa3
  4125b4:	call   0x77fdb6d0
  4125b9:	cmp    DWORD PTR [esi+0x6],edi
  4125bc:	and    BYTE PTR [eax+0x66],al
  4125bf:	xchg   ecx,eax
  4125c0:	leave  
  4125c1:	lock and BYTE PTR [edi-0xbd5ed4b],dl
  4125c8:	(bad)  
  4125c9:	adc    eax,DWORD PTR [edx-0x181a13ab]
  4125cf:	pop    eax
  4125d0:	arpl   WORD PTR [edx+0xd],dx
  4125d3:	test   BYTE PTR [edx-0x4ac062dd],bh
  4125d9:	or     BYTE PTR [edi-0x2f],dl
  4125dc:	push   0x3
  4125de:	push   edi
  4125df:	out    0x23,eax
  4125e1:	mov    ebx,ecx
  4125e3:	xchg   esp,eax
  4125e4:	enter  0xe1cf,0xd3
  4125e8:	retf   0xc125
  4125eb:	or     BYTE PTR [ebx],dh
  4125ed:	and    al,0xbe
  4125ef:	mov    esi,0xf6d60e5a
  4125f4:	ret    
  4125f5:	idiv   BYTE PTR [ebx+0x55b487ca]
  4125fb:	and    eax,0x64c8ecb3
  412600:	mov    ebp,0xa5b830e8
  412605:	jl     0x41263a
  412607:	pusha  
  412608:	sbb    DWORD PTR [ebp+edx*1-0x4c9fa02a],ebx
  41260f:	div    DWORD PTR [ecx+ebx*2+0x24c09c04]
  412616:	aam    0xb
  412618:	not    BYTE PTR [edx+0x37d6bccd]
  41261e:	xor    eax,0x80f65230
  412623:	clc    
  412624:	push   esp
  412625:	outs   dx,DWORD PTR ds:[esi]
  412626:	cmp    eax,0x70e79011
  41262b:	jmp    0xc1aa05c5
  412630:	pop    ds
  412631:	xor    BYTE PTR [edx-0xb0b270e],ch
  412637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412638:	sbb    eax,0x7e61b1c6
  41263d:	pop    eax
  41263e:	call   0xfcd6:0xb951af78
  412645:	xchg   ebx,eax
  412646:	ja     0x412682
  412648:	jge    0x41263a
  41264a:	mov    dl,0xfa
  41264c:	mov    al,0x59
  41264e:	cld    
  41264f:	loope  0x4126a6
  412651:	mov    esi,0xed625374
  412656:	mov    dl,0x92
  412658:	push   eax
  412659:	mov    DWORD PTR [eax-0x70c5a9f8],esi
  41265f:	sbb    al,0x3b
  412661:	dec    ebx
  412662:	push   ss
  412663:	cld    
  412664:	outs   dx,BYTE PTR ds:[esi]
  412665:	or     al,0x8d
  412667:	pop    ds
  412668:	add    eax,0x6145d5de
  41266d:	sbb    BYTE PTR [ebx],ch
  41266f:	cmp    esi,DWORD PTR [ecx]
  412671:	stos   DWORD PTR es:[edi],eax
  412672:	pop    ss
  412673:	sbb    al,0x23
  412675:	jmp    0x216ba491
  41267a:	pushf  
  41267b:	ds jo  0x4126af
  41267e:	ror    ebx,1
  412680:	cmc    
  412681:	push   es
  412682:	dec    edx
  412683:	(bad)  
  412684:	cmc    
  412685:	push   edi
  412686:	(bad)  
  412687:	test   eax,0xb9527177
  41268c:	pop    esp
  41268d:	sti    
  41268e:	mov    cl,0x28
  412690:	fld    QWORD PTR [eax+ebp*4+0x1f5bf9db]
  412698:	sbb    edx,esi
  41269a:	sbb    eax,0x2ddfeb2a
  41269f:	dec    ebp
  4126a0:	call   DWORD PTR [ecx]
  4126a2:	loop   0x412682
  4126a4:	not    ah
  4126a6:	pop    ss
  4126a7:	call   0xf26e7064
  4126ac:	pop    ebx
  4126ad:	push   0xf183d12b
  4126b2:	mov    ebp,0x7798d132
  4126b7:	xor    esi,edi
  4126b9:	jmp    0x819e:0x14302e4b
  4126c0:	add    bl,bl
  4126c2:	add    esp,DWORD PTR [edx+0x14]
  4126c5:	es dec esp
  4126c7:	inc    ebx
  4126c8:	pusha  
  4126c9:	retf   
  4126ca:	mov    dl,0x49
  4126cc:	inc    esp
  4126cd:	cmp    bh,BYTE PTR [esp+eax*1]
  4126d0:	dec    ebp
  4126d1:	mov    ebx,0x29e30921
  4126d6:	sub    ebp,DWORD PTR [ebx+0x4b]
  4126d9:	push   ebp
  4126da:	nop
  4126db:	popf   
  4126dc:	imul   edi,DWORD PTR [ebx+0x7a],0x3cf1068c
  4126e3:	sub    ebp,esi
  4126e5:	lds    ebp,FWORD PTR [ecx+0x56f75ac3]
  4126eb:	xchg   ebx,eax
  4126ec:	rcr    DWORD PTR [ecx+0x3],cl
  4126ef:	mov    ecx,edx
  4126f1:	arpl   di,bx
  4126f3:	addr16 sahf 
  4126f5:	call   0xa124:0x186d4a33
  4126fc:	jp     0x412760
  4126fe:	jmp    0x412689
  412700:	push   edx
  412701:	xor    ebx,ebp
  412703:	xor    eax,0xb523bca
  412708:	mov    BYTE PTR [eax+0x7ef2ae4f],bh
  41270e:	lods   al,BYTE PTR ds:[esi]
  41270f:	in     eax,dx
  412710:	jmp    0xa5d6:0x59277eac
  412717:	jmp    0xbaaa01bb
  41271c:	push   edx
  41271d:	pop    esp
  41271e:	sub    eax,0xdc9cc636
  412723:	adc    eax,0x2a7d633a
  412728:	iret   
  412729:	mov    DWORD PTR [edx],esi
  41272b:	sbb    ah,ch
  41272d:	test   ecx,ebp
  41272f:	dec    eax
  412730:	add    ebx,DWORD PTR [esi+eax*2]
  412733:	into   
  412734:	xchg   esp,eax
  412735:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	add    esp,ebp
  412756:	mov    edi,0x786caabb
  41275b:	js     0x412742
  41275d:	jle    0x4127d7
  41275f:	js     0x412721
  412761:	daa    
  412762:	in     eax,dx
  412763:	or     cl,BYTE PTR [edi]
  412765:	lods   al,BYTE PTR ds:[esi]
  412766:	clc    
  412767:	cs in  eax,dx
  412769:	cmp    al,bl
  41276b:	outs   dx,BYTE PTR ds:[esi]
  41276c:	bound  ebx,QWORD PTR [eax+0x6246c39c]
  412772:	mov    bl,0x5b
  412774:	fmul   DWORD PTR [esi+edx*8+0x5c]
  412778:	inc    edi
  412779:	shr    DWORD PTR [edx],cl
  41277b:	les    ebx,FWORD PTR [ebp+0x5e6757e7]
  412781:	mov    ecx,0x6fabc2d6
  412786:	push   ebp
  412787:	and    al,0x67
  412789:	int    0xb2
  41278b:	loopne 0x412742
  41278d:	mov    al,0xbc
  41278f:	das    
  412790:	mov    BYTE PTR [edx-0x1f4c75f6],bh
  412796:	(bad)  
  412797:	adc    DWORD PTR [ebp+0x6ed1331e],ebp
  41279d:	push   ds
  41279e:	out    dx,eax
  41279f:	sub    al,0xb
  4127a1:	jne    0x4127d0
  4127a3:	arpl   WORD PTR [eax-0xdebfc5f],di
  4127a9:	daa    
  4127aa:	aas    
  4127ab:	mov    BYTE PTR [ebx+0x50d6f8c8],al
  4127b1:	jp     0x4127af
  4127b3:	pusha  
  4127b4:	sub    BYTE PTR [ecx],ah
  4127b6:	pop    ss
  4127b7:	bound  eax,QWORD PTR [di-0x52]
  4127bb:	call   0x619e151d
  4127c0:	fnstsw WORD PTR [eax+0x9441de6]
  4127c6:	mov    dh,bh
  4127c8:	fwait
  4127c9:	inc    eax
  4127ca:	(bad)  
  4127cb:	push   0xffffff80
  4127cd:	adc    DWORD PTR gs:[esi*1+0x1446a4d9],ecx
  4127d5:	retf   
  4127d6:	dec    ebp
  4127d7:	mov    al,0xf6
  4127d9:	push   ebx
  4127da:	aam    0xea
  4127dc:	cmc    
  4127dd:	dec    eax
  4127de:	ins    DWORD PTR es:[edi],dx
  4127df:	jns    0x41283d
  4127e1:	cld    
  4127e2:	or     eax,0x8224370b
  4127e7:	mov    ch,0x69
  4127e9:	push   edi
  4127ea:	xchg   ebp,eax
  4127eb:	add    esi,ebp
  4127ed:	int3   
  4127ee:	fst    st(2)
  4127f0:	adc    al,0xf4
  4127f2:	fldenv [edi+edx*8-0x3f1943c5]
  4127f9:	scas   al,BYTE PTR es:[edi]
  4127fa:	inc    ecx
  4127fb:	mov    ah,0x86
  4127fd:	fbstp  TBYTE PTR [edi]
  4127ff:	jmp    0x41283e
  412801:	(bad)  
  412802:	sar    DWORD PTR [ecx+0x602e0364],cl
  412808:	lods   al,BYTE PTR ds:[esi]
  412809:	mov    edi,DWORD PTR [eax+0xa]
  41280c:	push   ecx
  41280d:	inc    ebp
  41280e:	(bad)  
  41280f:	mov    edi,DWORD PTR ds:0x5a85c1df
  412815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412816:	(bad)  
  412817:	sub    al,0x92
  412819:	push   eax
  41281a:	inc    edx
  41281b:	jns    0x412858
  41281d:	jl     0x4127a5
  41281f:	adc    al,0xea
  412821:	adc    dh,BYTE PTR [ebp+0x65]
  412824:	mov    dl,0x1e
  412826:	inc    ebp
  412827:	rdpmc  
  412829:	sbb    BYTE PTR [esi],dh
  41282b:	jecxz  0x41285f
  41282d:	inc    eax
  41282e:	(bad)  
  412830:	sbb    al,0x70
  412832:	adc    ebx,DWORD PTR [edx]
  412834:	das    
  412835:	pop    ecx
  412836:	ja     0x4128b3
  412838:	sbb    BYTE PTR [ecx-0x46],bl
  41283b:	xchg   esi,eax
  41283c:	mov    ss,WORD PTR [esi+esi*4]
  41283f:	nop
  412840:	xlat   BYTE PTR ds:[ebx]
  412841:	add    ebp,edx
  412843:	jg     0x4128c1
  412845:	test   eax,0x24a1d105
  41284a:	mov    ebx,0x56262d36
  41284f:	add    DWORD PTR [esp+eiz*8-0x28],ecx
  412853:	or     dh,ah
  412855:	sbb    BYTE PTR ds:0x2f60075,cl
  41285b:	sar    DWORD PTR [ebx],1
  41285d:	adc    DWORD PTR [eax-0x7d7d8439],0xd5023cf7
  412867:	xchg   edi,eax
  412868:	xchg   esp,eax
  412869:	jl     0x4128c9
  41286b:	pusha  
  41286c:	ja     0x412812
  41286e:	imul   ebp,DWORD PTR [edx-0x29],0x72
  412872:	inc    edi
  412873:	mov    eax,ds:0xaec501fc
  412878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412879:	mov    BYTE PTR [ebp-0x472f2812],cl
  41287f:	rol    DWORD PTR [esi+ebp*8-0x2d],1
  412883:	das    
  412884:	sub    dl,al
  412886:	(bad)
  412889:	(bad)  
  41288a:	repz retf 0xd199
  41288e:	outs   dx,DWORD PTR ds:[esi]
  41288f:	popa   
  412890:	inc    edx
  412891:	inc    edi
  412892:	pushfw 
  412894:	sbb    ah,BYTE PTR [edx]
  412896:	rcl    cl,cl
  412898:	push   ecx
  412899:	sahf   
  41289a:	mov    BYTE PTR ds:0xd994328e,bl
  4128a0:	stc    
  4128a1:	lea    edx,[ebx+eiz*4-0x15]
  4128a5:	jmp    0xfd542b88
  4128aa:	cdq    
  4128ab:	jo     0x412863
  4128ad:	in     al,dx
  4128ae:	jb     0x41285c
  4128b0:	inc    esi
  4128b1:	sub    al,0x3a
  4128b3:	pushf  
  4128b4:	imul   eax,edx,0x5f
  4128b7:	mov    ecx,0xf97bc581
  4128bc:	popf   
  4128bd:	mov    esi,0xd7b790c7
  4128c2:	fs xchg ecx,eax
  4128c4:	(bad)  
  4128c5:	cmp    BYTE PTR [eax],bh
  4128c7:	out    dx,al
  4128c8:	sbb    BYTE PTR [eax+0x48],cl
  4128cb:	xor    DWORD PTR [esi+0x145b27f0],ecx
  4128d1:	pop    ebx
  4128d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d3:	jmp    0x6438bdcc
  4128d8:	mov    ah,0x2d
  4128da:	mov    dl,BYTE PTR [eax-0x3d]
  4128dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128de:	jge    0x4128bc
  4128e0:	jle    0x4128e8
  4128e2:	retf   0x4b3e
  4128e5:	inc    edx
  4128e6:	mov    esp,0xca597851
  4128eb:	mov    dh,0xd
  4128ed:	lds    esi,FWORD PTR [eax+0x1952ddc0]
  4128f3:	(bad)  
  4128f4:	push   0x6
  4128f6:	xor    BYTE PTR [edi],ch
  4128f8:	push   ecx
  4128f9:	dec    edi
  4128fa:	xchg   ebp,ecx
  4128fc:	out    0x81,eax
  4128fe:	idiv   BYTE PTR [ecx]
  412900:	and    DWORD PTR [esi],ecx
  412902:	cwde   
  412903:	(bad)  
  412904:	loopne 0x412944
  412906:	hlt    
  412907:	xchg   esp,eax
  412908:	rcr    BYTE PTR [ebp+0x78],0x86
  41290c:	fcom   QWORD PTR [eax-0x6080dd75]
  412912:	test   BYTE PTR [edi],dl
  412914:	pop    ss
  412915:	call   0x79bdce34
  41291a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41291b:	aas    
  41291c:	dec    edi
  41291d:	xor    al,BYTE PTR [ecx]
  41291f:	das    
  412920:	ds std 
  412922:	push   cs
  412923:	out    0xc4,eax
  412925:	pop    ds
  412926:	jmp    0x412978
  412928:	int3   
  412929:	push   edi
  41292a:	cmp    ebp,DWORD PTR [ecx+0x28]
  41292d:	stos   BYTE PTR es:[edi],al
  41292e:	pusha  
  41292f:	lods   al,BYTE PTR ds:[esi]
  412930:	or     DWORD PTR [edi+0x1f],edi
  412933:	and    ah,cl
  412935:	mov    esp,0x5d78b185
  41293a:	adc    DWORD PTR [ebp-0x6a9b0e0d],ebx
  412940:	mov    edx,0x9984af68
  412945:	ror    BYTE PTR [edx+0x5d],cl
  412948:	mov    edi,0x8ba433d3
  41294d:	les    ebx,FWORD PTR [ebp-0x6d]
  412950:	add    BYTE PTR [esi+0x68],ch
  412953:	arpl   WORD PTR [edi-0x4d],si
  412956:	sub    DWORD PTR [edi],ecx
  412958:	cs addr16 retf 0xcc7e
  41295d:	je     0x4129a4
  41295f:	pop    esp
  412960:	or     al,0x82
  412962:	repz out dx,al
  412964:	leave  
  412965:	fbstp  TBYTE PTR [ebx-0x502725f7]
  41296b:	pusha  
  41296c:	jmp    0x135e23db
  412971:	mov    DWORD PTR [ecx+eiz*2+0x33ccc700],eax
  412978:	dec    eax
  412979:	loope  0x412988
  41297b:	mov    bh,0x85
  41297d:	mov    ebx,0x7718ad21
  412982:	(bad)  
  412983:	(bad)
  412987:	test   eax,0x7b972286
  41298c:	in     eax,dx
  41298d:	push   edi
  41298e:	xor    eax,0x783634
  412993:	stos   BYTE PTR es:[edi],al
  412994:	add    BYTE PTR [ebx],0x53
  412997:	mov    eax,ds:0x32a126fb
  41299c:	test   BYTE PTR [esi-0x6a],al
  41299f:	cmp    DWORD PTR [ebp+0x4e],esi
  4129a2:	dec    ebx
  4129a3:	pushf  
  4129a4:	ret    0xfe83
  4129a7:	jb     0x41299d
  4129a9:	or     al,0xae
  4129ab:	sub    BYTE PTR [eax],cl
  4129ad:	and    ecx,edx
  4129af:	fdiv   DWORD PTR [edi]
  4129b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b2:	test   al,0x9f
  4129b4:	pop    edi
  4129b5:	adc    al,0xd4
  4129b7:	sahf   
  4129b8:	inc    ebp
  4129b9:	push   0x3
  4129bb:	xchg   ecx,eax
  4129bc:	cdq    
  4129bd:	mov    ds:0x5fdd6a,al
  4129c2:	retf   0xa0d0
  4129c5:	pop    ebx
  4129c6:	inc    ebx
  4129c7:	push   ds
  4129c8:	in     eax,0xc1
  4129ca:	push   ds
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a28
  4129f1:	inc    edx
  4129f2:	leave  
  4129f3:	adc    al,0x17
  4129f5:	jno    0x412a6f
  4129f7:	js     0x4129de
  4129f9:	jle    0x412a73
  4129fb:	js     0x4129e6
  4129fd:	lahf   
  4129fe:	or     DWORD PTR [ecx+0x766e1d0c],0x593019f8
  412a08:	adc    al,0x60
  412a0a:	xchg   esp,eax
  412a0b:	out    dx,al
  412a0c:	pusha  
  412a0d:	mov    esp,DWORD PTR [edi+0x52]
  412a10:	sbb    eax,0x73259d1
  412a16:	out    0xee,eax
  412a18:	mov    ebx,0x1ac62fe9
  412a1d:	mov    edx,esi
  412a1f:	mov    ebp,DWORD PTR ds:0x52d24445
  412a25:	push   esi
  412a26:	push   edx
  412a27:	mov    edi,?
  412a29:	loopne 0x4129ed
  412a2b:	lock mov dh,0x71
  412a2e:	mov    esi,0x201d8769
  412a33:	cs stc 
  412a35:	push   esi
  412a36:	bound  eax,QWORD PTR [edx]
  412a38:	fisttp WORD PTR [ebp-0x50]
  412a3b:	mov    ebp,0x61f96ca6
  412a40:	lods   al,BYTE PTR ds:[esi]
  412a41:	mov    ds:0x920428e4,al
  412a46:	jo     0x4129d6
  412a48:	cli    
  412a49:	pop    ss
  412a4a:	frstpm(287 only) 
  412a4c:	jbe    0x4129e0
  412a4e:	push   cs
  412a4f:	add    ebp,DWORD PTR [eax+ecx*2-0x58c3f044]
  412a56:	dec    edx
  412a57:	push   esp
  412a58:	add    BYTE PTR [edi-0x58],0xe8
  412a5c:	mov    eax,0xb7d70a29
  412a61:	adc    DWORD PTR [edi+ecx*2+0x58302a70],esp
  412a68:	(bad)  
  412a69:	dec    bh
  412a6b:	int    0xb1
  412a6d:	add    ch,BYTE PTR [ebx+edi*2]
  412a70:	jg     0x412a3d
  412a72:	fcmovne st,st(1)
  412a74:	ins    BYTE PTR es:[edi],dx
  412a75:	sbb    al,0x43
  412a77:	mov    ch,0x51
  412a79:	sub    eax,0x6eff0b60
  412a7e:	jno    0x412a72
  412a80:	test   al,0x7
  412a82:	or     al,BYTE PTR [esi-0x31]
  412a85:	sbb    al,0xfb
  412a87:	xchg   edi,eax
  412a88:	into   
  412a89:	push   ds
  412a8a:	std    
  412a8b:	push   es
  412a8c:	dec    edx
  412a8d:	retf   0xce67
  412a90:	iret   
  412a91:	jnp    0x412a34
  412a93:	push   ebx
  412a94:	in     al,dx
  412a95:	adc    BYTE PTR [ecx],0x88
  412a98:	test   BYTE PTR [esp+ebx*4+0x1a],al
  412a9c:	lock pop edi
  412a9e:	fadd   QWORD PTR [esi-0x41]
  412aa1:	xchg   ebx,eax
  412aa2:	pop    edx
  412aa3:	push   ebx
  412aa4:	pop    esi
  412aa5:	sub    dl,BYTE PTR [eax-0x68]
  412aa8:	jmp    0xdd1271c5
  412aad:	cmp    DWORD PTR [eax-0x33],edx
  412ab0:	pop    ecx
  412ab1:	pop    ss
  412ab2:	mov    dh,0x47
  412ab4:	(bad)  
  412ab5:	jge    0x412a78
  412ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ab8:	sbb    eax,0x75d575c1
  412abd:	hlt    
  412abe:	adc    eax,0xf637d11d
  412ac3:	jp     0x412a9a
  412ac5:	jmp    0x412a48
  412ac7:	or     DWORD PTR ds:0xabb03ca5,ecx
  412acd:	stc    
  412ace:	fisub  DWORD PTR [edx]
  412ad0:	(bad)  
  412ad1:	outs   dx,DWORD PTR ds:[esi]
  412ad2:	mov    ebx,0x9815dc79
  412ad7:	popf   
  412ad8:	fcmovbe st,st(1)
  412ada:	xor    cl,BYTE PTR [edx-0x1b237111]
  412ae0:	sub    edi,DWORD PTR [ecx]
  412ae2:	mov    esi,0x8e75e347
  412ae7:	lea    edi,[ecx]
  412ae9:	push   esi
  412aea:	mov    ds:0x4b1dcdf3,eax
  412aef:	mov    edx,0xc19b672f
  412af4:	ficom  WORD PTR [ebp-0x2a]
  412af7:	add    eax,0x693abd3e
  412afc:	add    al,0x21
  412afe:	ret    0xe320
  412b01:	mov    ecx,0xf0783929
  412b06:	sbb    al,0x41
  412b08:	cmp    al,0xe6
  412b0a:	dec    eax
  412b0b:	es leave 
  412b0d:	and    bl,BYTE PTR [edi]
  412b0f:	int3   
  412b10:	div    bh
  412b12:	mov    eax,0xca27f0a0
  412b17:	hlt    
  412b18:	sub    al,0x28
  412b1a:	mov    eax,0x106bda9d
  412b1f:	inc    ebx
  412b20:	test   al,0x6a
  412b22:	lods   al,BYTE PTR ds:[esi]
  412b23:	push   ebx
  412b24:	push   0x18
  412b26:	(bad)  
  412b27:	aam    0x25
  412b29:	xor    al,0x94
  412b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b2c:	mov    ah,0x5b
  412b2e:	into   
  412b2f:	(bad)  
  412b31:	push   ss
  412b32:	and    DWORD PTR [edi+edi*4-0x78],0x1e4e94c8
  412b3a:	nop
  412b3b:	iret   
  412b3c:	scas   al,BYTE PTR es:[edi]
  412b3d:	fcmovnb st,st(0)
  412b3f:	loope  0x412b39
  412b41:	lods   eax,DWORD PTR ds:[esi]
  412b42:	sbb    eax,DWORD PTR [edi+0x6b]
  412b45:	dec    esi
  412b46:	cmp    ch,BYTE PTR [esi+0x52]
  412b49:	fmul   QWORD PTR [esi+0x79]
  412b4c:	mov    ebp,0x445afdcb
  412b51:	xor    ecx,DWORD PTR [ecx+edi*4-0x17f6dab0]
  412b58:	add    bl,BYTE PTR [eax]
  412b5a:	hlt    
  412b5b:	cli    
  412b5c:	loopne 0x412b22
  412b5e:	pop    es
  412b5f:	mov    dh,0xd
  412b61:	imul   DWORD PTR ds:0x5a96bf40
  412b67:	jp     0x412b43
  412b69:	dec    ebx
  412b6a:	imul   eax,DWORD PTR [edx],0x44c982d6
  412b70:	sbb    DWORD PTR [ecx-0x496d5704],ecx
  412b76:	add    BYTE PTR [edi-0x23902203],dl
  412b7c:	shr    DWORD PTR [edx-0x2b84fc9a],1
  412b82:	rcl    BYTE PTR [ebx],cl
  412b84:	mov    ebp,0x737677a
  412b89:	pcmpgtw mm1,QWORD PTR [edi]
  412b8c:	sub    edx,ecx
  412b8e:	imul   esp,DWORD PTR [ebp-0x542be8d5],0xf
  412b95:	scas   eax,DWORD PTR es:[edi]
  412b96:	or     eax,0xef00ec4a
  412b9b:	sub    esp,eax
  412b9d:	stc    
  412b9e:	lds    ebx,FWORD PTR [esp+ebp*1-0x44]
  412ba2:	or     edx,DWORD PTR [eax+0x2142390c]
  412ba8:	pop    ss
  412ba9:	xchg   ecx,eax
  412baa:	sbb    al,0xfe
  412bac:	in     eax,0x93
  412bae:	jp     0x412bde
  412bb0:	xor    al,0x6f
  412bb2:	mov    ds:0x4a9b7a83,al
  412bb7:	dec    ebp
  412bb8:	jnp    0x412b62
  412bba:	mov    ecx,0xfd12e167
  412bbf:	mov    esp,0x93891e4b
  412bc4:	enter  0xf51e,0xd7
  412bc8:	in     al,dx
  412bc9:	push   bp
  412bcb:	sub    edi,edi
  412bcd:	jo     0x412ba6
  412bcf:	retf   
  412bd0:	and    DWORD PTR [ebp+edi*2+0x65],eax
  412bd4:	jo     0x412b98
  412bd6:	nop
  412bd7:	test   DWORD PTR ds:[ebp+0x3d],eax
  412bdb:	rcl    DWORD PTR [edi-0xc3a8cd9],cl
  412be1:	scas   eax,DWORD PTR es:[edi]
  412be2:	in     eax,dx
  412be3:	push   ebp
  412be4:	test   BYTE PTR [ebp-0x4d],ch
  412be7:	ror    edi,0x5a
  412bea:	jns    0x412c41
  412bec:	mov    edx,DWORD PTR [edi-0x60]
  412bef:	(bad)  
  412bf0:	(bad)  
  412bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf2:	cli    
  412bf3:	stos   BYTE PTR es:[edi],al
  412bf4:	in     al,0x88
  412bf6:	imul   ah
  412bf8:	xor    DWORD PTR [ebp-0x254480bd],ebx
  412bfe:	in     al,0x71
  412c00:	inc    esi
  412c01:	stos   BYTE PTR es:[edi],al
  412c02:	add    eax,0x526404aa
  412c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c08:	das    
  412c09:	dec    esi
  412c0a:	scas   eax,DWORD PTR es:[edi]
  412c0b:	cld    
  412c0c:	je     0x412ba5
  412c0e:	gs ins DWORD PTR es:[edi],dx
  412c10:	shl    DWORD PTR [ecx+0x6e],0x14
  412c14:	(bad)  
  412c15:	cmp    BYTE PTR [esp+ebx*8],bh
  412c18:	xlat   BYTE PTR ds:[ebx]
  412c19:	push   eax
  412c1a:	js     0x412bab
  412c1c:	cmp    ah,BYTE PTR [ebx+0x41]
  412c1f:	sub    BYTE PTR [eax-0x6fc64c32],0x30
  412c26:	sahf   
  412c27:	dec    ebp
  412c28:	add    DWORD PTR [ecx],0x2b
  412c2b:	nop
  412c2c:	sar    DWORD PTR [esi-0x55],cl
  412c2f:	mov    ebp,0xb798059
  412c34:	mov    eax,ds:0x17ebf28b
  412c39:	mov    ch,0x63
  412c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3c:	pop    edi
  412c3d:	add    DWORD PTR [edx],edx
  412c3f:	mov    DWORD PTR [ebx+0x6f],ebx
  412c42:	cmp    DWORD PTR [eax+ecx*4-0x42],0xffffffff
  412c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c48:	jmp    0xf3df:0x2dd02e70
  412c4f:	push   esi
  412c50:	push   edi
  412c51:	dec    edx
  412c52:	cwde   
  412c53:	adc    al,0xf4
  412c55:	xor    ebx,DWORD PTR [ebp-0x2bf76a0c]
  412c5b:	inc    ebp
  412c5c:	xchg   esi,eax
  412c5d:	cmp    DWORD PTR [edi+0x7b],edx
  412c60:	jp     0x412c40
  412c62:	xor    eax,0xe687af0c
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [eax-0x64],ebx
  412c84:	or     ch,0xfc
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412c67
  412c8f:	pop    ds
  412c90:	stos   BYTE PTR es:[edi],al
  412c91:	(bad)  
  412c92:	push   eax
  412c93:	gs shl dl,1
  412c96:	xor    eax,0x2260a0c7
  412c9b:	cmp    ah,BYTE PTR [eax+0x2707839a]
  412ca1:	inc    esp
  412ca2:	test   al,0xc9
  412ca4:	daa    
  412ca5:	fidivr DWORD PTR ss:0x302bc752
  412cac:	imul   ebp,DWORD PTR [ecx],0x8e344be4
  412cb2:	call   FWORD PTR [ecx+0x49]
  412cb5:	enter  0xeac8,0x57
  412cb9:	dec    edi
  412cba:	sub    cl,ch
  412cbc:	dec    eax
  412cbd:	pop    ecx
  412cbe:	loopne 0x412c5e
  412cc0:	test   BYTE PTR [ebx-0x24],ah
  412cc3:	aaa    
  412cc4:	in     al,0x3a
  412cc6:	(bad)  
  412cc7:	mov    esp,0xf00fb34a
  412ccc:	mov    eax,ds:0xb6b1b822
  412cd1:	outs   dx,DWORD PTR ds:[esi]
  412cd2:	pop    ebp
  412cd3:	cmp    DWORD PTR [esi+0x74],esp
  412cd6:	out    dx,al
  412cd7:	adc    bl,BYTE PTR [ecx+eiz*1+0x0]
  412cdb:	add    esi,DWORD PTR [edi-0x73]
  412cde:	add    al,0x71
  412ce0:	push   cs
  412ce1:	xchg   esp,eax
  412ce2:	pop    ebx
  412ce3:	and    DWORD PTR [ebp+0xe],esi
  412ce6:	cmp    bh,BYTE PTR [edi-0x47]
  412ce9:	fidiv  DWORD PTR [edi-0x643a0c4f]
  412cef:	cli    
  412cf0:	push   eax
  412cf1:	xchg   BYTE PTR [edi+eax*2],cl
  412cf4:	(bad)  
  412cf5:	xchg   esi,eax
  412cf6:	push   ecx
  412cf7:	sbb    al,0x7
  412cf9:	mov    WORD PTR [edx-0x1],ds
  412cfc:	out    0x7,al
  412cfe:	dec    edx
  412cff:	rol    BYTE PTR [eax+ebp*1-0x2e],cl
  412d03:	pop    esi
  412d04:	ins    DWORD PTR es:[edi],dx
  412d05:	mov    ch,0xc8
  412d07:	ret    
  412d08:	test   al,0xbb
  412d0a:	lods   eax,DWORD PTR ds:[esi]
  412d0b:	aas    
  412d0c:	and    eax,edi
  412d0e:	xchg   esp,eax
  412d0f:	(bad)  
  412d10:	jo     0x412cec
  412d12:	dec    edi
  412d13:	pop    es
  412d14:	(bad)  
  412d15:	out    0xa5,al
  412d17:	sbb    DWORD PTR [ebp-0x1d9a4845],esi
  412d1d:	std    
  412d1e:	test   DWORD PTR [esi+0x13],esi
  412d21:	push   esi
  412d22:	outs   dx,BYTE PTR ds:[esi]
  412d23:	pusha  
  412d24:	fsubr  QWORD PTR [esp+edx*1+0x69]
  412d28:	mov    ds:0x8972fdb5,eax
  412d2d:	ret    0x3c1e
  412d30:	icebp  
  412d31:	mov    edx,0x54e945de
  412d36:	(bad)  
  412d37:	sar    DWORD PTR [edi-0x4b202b55],0x43
  412d3e:	cmc    
  412d3f:	scas   al,BYTE PTR es:[edi]
  412d40:	inc    ebp
  412d41:	fs and al,0x90
  412d44:	frstor ds:0x7f3f7278
  412d4a:	test   DWORD PTR [edx+0x55],ecx
  412d4d:	imul   ebx,esi,0x67
  412d50:	loopne 0x412d02
  412d52:	and    ebp,DWORD PTR [ebp-0x6fa5f51b]
  412d58:	xor    eax,0xce0e2860
  412d5d:	pushf  
  412d5e:	ror    BYTE PTR [edx-0x6eb675ea],cl
  412d64:	xor    edi,ebp
  412d66:	ret    
  412d67:	inc    edx
  412d68:	sub    DWORD PTR [ebx+0x14abe45b],esi
  412d6e:	pusha  
  412d6f:	jmp    0x43d9f5b6
  412d74:	xchg   edi,eax
  412d75:	xchg   esi,eax
  412d76:	add    esp,ecx
  412d78:	xor    al,0xd8
  412d7a:	sub    BYTE PTR [esi],cl
  412d7c:	or     dh,BYTE PTR [edi+0x65]
  412d7f:	scas   eax,DWORD PTR es:[edi]
  412d80:	sbb    BYTE PTR [ebx-0x75e57963],0x87
  412d87:	jns    0x412dab
  412d89:	ins    BYTE PTR es:[edi],dx
  412d8a:	jo     0x412d77
  412d8c:	jge    0x412da7
  412d8e:	mov    bh,0x85
  412d90:	std    
  412d91:	mov    eax,DWORD PTR [edx-0x54]
  412d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d95:	inc    ecx
  412d96:	(bad)  
  412d98:	sub    eax,0xc715812e
  412d9d:	ret    
  412d9e:	mov    WORD PTR [edx],fs
  412da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da1:	das    
  412da2:	enter  0xa452,0xe4
  412da6:	scas   eax,DWORD PTR es:[edi]
  412da7:	cmp    DWORD PTR [esi+0xac1df3d],0xa29797ba
  412db1:	out    0x4f,eax
  412db3:	mov    ch,0xb2
  412db5:	test   al,0xc0
  412db7:	mov    cl,0xae
  412db9:	test   BYTE PTR [eax+0x8eac6ee],al
  412dbf:	mov    esi,0x867e82dd
  412dc4:	call   0xf101:0xbb5b2efa
  412dcb:	or     eax,0xe15e7478
  412dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dd1:	push   eax
  412dd2:	mov    al,0x3f
  412dd4:	dec    edi
  412dd5:	je     0x412da0
  412dd7:	mov    al,0x68
  412dd9:	inc    ebx
  412dda:	(bad)  
  412ddb:	in     eax,dx
  412ddc:	dec    ecx
  412ddd:	jecxz  0x412e5d
  412ddf:	jle    0x412e46
  412de1:	add    eax,0x61e0587a
  412de6:	popa   
  412de7:	fstp   st(4)
  412de9:	and    bh,BYTE PTR [edx]
  412deb:	or     eax,0x86586515
  412df0:	enter  0xe443,0xa4
  412df4:	cmp    esi,DWORD PTR [edi-0x2abb7958]
  412dfa:	fisttp DWORD PTR [eax+ecx*2+0x3c4e6b44]
  412e01:	sti    
  412e02:	js     0x412e36
  412e04:	sub    bh,bh
  412e06:	loope  0x412db9
  412e08:	xor    eax,0x4fed16f0
  412e0d:	clc    
  412e0e:	sar    edx,1
  412e10:	jnp    0x412e7e
  412e12:	mov    ds:0x32bbb16e,eax
  412e17:	xchg   esp,eax
  412e18:	std    
  412e19:	(bad)  
  412e1a:	pop    esp
  412e1b:	mov    ah,0xde
  412e1d:	loop   0x412e45
  412e1f:	loopne 0x412e42
  412e21:	fimul  DWORD PTR [esi+0x1d5dd459]
  412e27:	imul   esp,DWORD PTR [esi+0x17],0x2c
  412e2b:	je     0x412e72
  412e2d:	mov    ch,0x7
  412e2f:	in     eax,dx
  412e30:	sbb    ecx,esp
  412e32:	push   eax
  412e33:	pop    edi
  412e34:	sbb    dl,bl
  412e36:	inc    DWORD PTR [eax-0x35]
  412e39:	mov    dh,BYTE PTR ds:0x60291dc
  412e3f:	xor    dh,BYTE PTR [esi]
  412e41:	lock or bl,BYTE PTR ds:0x69a7e45f
  412e48:	push   edi
  412e49:	xchg   ecx,eax
  412e4a:	jb     0x412e63
  412e4c:	xor    eax,0x8101387e
  412e51:	mov    ebx,0x5c572553
  412e56:	xchg   ebp,eax
  412e57:	data16 xor al,0x83
  412e5a:	dec    esi
  412e5b:	lods   al,BYTE PTR ds:[esi]
  412e5c:	call   0xa86c:0x9cd1c07f
  412e63:	imul   ebp,DWORD PTR [ecx],0x34c94da2
  412e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e6a:	retf   0xf8e9
  412e6d:	mov    ebp,0x1bb461af
  412e72:	rol    BYTE PTR ds:0x41bf6994,1
  412e78:	dec    edi
  412e79:	popf   
  412e7a:	mov    DWORD PTR [eax+0x4a],edi
  412e7d:	mov    cs,WORD PTR [edi-0x30]
  412e80:	jmp    0x7e05:0x697ee98c
  412e87:	mov    gs,WORD PTR [eax]
  412e89:	xchg   ebp,eax
  412e8a:	jae    0x412e35
  412e8c:	loop   0x412e14
  412e8e:	xchg   edi,eax
  412e8f:	arpl   WORD PTR [ebx-0x1f],dx
  412e92:	popa   
  412e93:	(bad)  
  412e94:	popf   
  412e95:	dec    ebx
  412e96:	xlat   BYTE PTR ds:[ebx]
  412e97:	repz es iret 
  412e9a:	nop
  412e9b:	mov    edi,0x936a1307
  412ea0:	dec    edx
  412ea1:	sbb    al,0xa9
  412ea3:	into   
  412ea4:	jnp    0x412e35
  412ea6:	cmp    edx,esi
  412ea8:	adc    cl,BYTE PTR [edx+0x2e]
  412eab:	mov    BYTE PTR [edx+0x5f],bl
  412eae:	add    edi,DWORD PTR [ecx]
  412eb0:	adc    DWORD PTR [ecx],edx
  412eb2:	sub    al,0xff
  412eb4:	sub    eax,0xc62febb7
  412eb9:	or     BYTE PTR [ebp+0x1f],cl
  412ebc:	ins    DWORD PTR es:[edi],dx
  412ebd:	mov    ?,WORD PTR [ebx]
  412ebf:	add    eax,0xa595797d
  412ec4:	outs   dx,DWORD PTR ds:[esi]
  412ec5:	jns    0x412e49
  412ec7:	call   0xb234d3ee
  412ecc:	mov    edx,edi
  412ece:	int3   
  412ecf:	js     0x412ef6
  412ed1:	mov    BYTE PTR [ecx-0x72],0x2d
  412ed5:	push   ebx
  412ed6:	lds    ebx,FWORD PTR cs:[ecx-0x30]
  412eda:	push   0xffffff99
  412edc:	fstp   QWORD PTR [edx-0x18]
  412edf:	outs   dx,BYTE PTR ds:[esi]
  412ee0:	pop    ebx
  412ee1:	xor    ebx,ecx
  412ee3:	inc    ecx
  412ee4:	stc    
  412ee5:	test   al,0x3e
  412ee7:	mov    al,0xf
  412ee9:	mov    ebx,0x3f60832e
  412eee:	lock jmp 0x412e95
  412ef1:	mov    BYTE PTR [eax+0x50],al
  412ef4:	xor    DWORD PTR [eax-0x775852ea],eax
  412efa:	push   ebp
  412efb:	jnp    0xd0752356
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x11
  412f26:	nop
  412f27:	pop    ss
  412f28:	(bad)  
  412f29:	imul   esi,DWORD PTR [ebp+0x78],0x787ee578
  412f30:	js     0x412f80
  412f32:	mov    bl,0x68
  412f34:	or     ebx,DWORD PTR [eax]
  412f36:	bound  eax,QWORD PTR [edi-0x24]
  412f39:	and    DWORD PTR [esi],ebp
  412f3b:	xchg   DWORD PTR [edx],ebp
  412f3d:	push   ds
  412f3e:	jbe    0x412f7c
  412f40:	xchg   edi,eax
  412f41:	inc    esi
  412f42:	fnstenv [ebx-0x2a]
  412f45:	scas   eax,DWORD PTR es:[edi]
  412f46:	xor    dl,BYTE PTR [esi]
  412f48:	jmp    0x4a8e:0x1a27057d
  412f4f:	int    0xa8
  412f51:	sbb    bl,0x1e
  412f54:	leave  
  412f55:	and    esp,DWORD PTR ds:[ebx-0x67]
  412f59:	inc    edx
  412f5a:	jl     0x412fb4
  412f5c:	jnp    0x412f75
  412f5e:	(bad)  
  412f5f:	aad    0x20
  412f61:	xchg   edi,eax
  412f62:	dec    eax
  412f63:	gs push eax
  412f65:	add    BYTE PTR [edi-0x1cc4128],0x94
  412f6c:	mov    dl,0xa
  412f6e:	dec    ebx
  412f6f:	xor    al,bh
  412f71:	inc    esi
  412f72:	loope  0x412f00
  412f74:	arpl   WORD PTR [edx+0x73],ax
  412f77:	push   cs
  412f78:	pop    edi
  412f79:	(bad)  
  412f7a:	jbe    0x412fe2
  412f7c:	gs sbb al,0x5b
  412f7f:	jns    0x412f69
  412f81:	clc    
  412f82:	syscall 
  412f84:	mov    esi,0x3e4ee0df
  412f89:	inc    ebx
  412f8a:	mov    eax,0xc371c3b4
  412f8f:	inc    edi
  412f90:	xchg   edi,eax
  412f91:	xlat   BYTE PTR ds:[ebx]
  412f92:	iret   
  412f93:	cmp    ah,BYTE PTR [ebx-0x3337d9d7]
  412f99:	cwde   
  412f9a:	dec    esp
  412f9b:	pop    es
  412f9c:	bound  esi,QWORD PTR [ecx+0x5113dad1]
  412fa2:	xor    eax,0xdb8f6da0
  412fa7:	lahf   
  412fa8:	mov    dl,0xf8
  412faa:	mov    ebp,0xc558f69d
  412faf:	jns    0x412fe2
  412fb1:	(bad)  
  412fb2:	stc    
  412fb3:	daa    
  412fb4:	xchg   esp,eax
  412fb5:	popa   
  412fb6:	xchg   esi,eax
  412fb7:	or     bh,BYTE PTR [eax+eiz*1+0x4f74ef60]
  412fbe:	fwait
  412fbf:	sbb    esi,0xc9584421
  412fc5:	repz cmp eax,0xac396a4e
  412fcb:	dec    esp
  412fcc:	es inc esi
  412fce:	je     0x413024
  412fd0:	mov    ds:0x4ad9cb8a,al
  412fd5:	pop    es
  412fd6:	fidivr WORD PTR ds:0xad3a74b9
  412fdc:	xor    al,0xed
  412fde:	std    
  412fdf:	test   al,0xe9
  412fe1:	stos   BYTE PTR es:[edi],al
  412fe2:	aas    
  412fe3:	test   eax,0x566fc3cc
  412fe8:	cmc    
  412fe9:	mov    esi,0xc2ab9559
  412fee:	or     ebp,DWORD PTR [esi]
  412ff0:	in     eax,dx
  412ff1:	adc    DWORD PTR [ebx-0x6e],ecx
  412ff4:	cmp    ecx,DWORD PTR [eax-0x2]
  412ff7:	repz add esp,DWORD PTR [esi+0x74b3164d]
  412ffe:	lods   al,BYTE PTR ds:[esi]
  412fff:	sbb    edx,ecx
  413001:	jl     0x412f8c
  413003:	jo     0x412f8a
  413005:	jmp    0x265:0xd2ba9869
  41300c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300d:	(bad)  
  41300e:	mov    ds:0x1cb91fbc,eax
  413013:	add    ebx,ebp
  413015:	pop    edx
  413016:	sti    
  413017:	jo     0x412fd2
  413019:	dec    ecx
  41301a:	dec    edi
  41301b:	call   FWORD PTR [ebp-0x19fe2dd5]
  413021:	xchg   esi,eax
  413022:	outs   dx,BYTE PTR ds:[esi]
  413023:	mov    edi,0x64b0acaf
  413028:	stos   DWORD PTR es:[edi],eax
  413029:	(bad)
  41302c:	leave  
  41302d:	fsub   DWORD PTR [ecx+ecx*4-0x31]
  413031:	loopne 0x41308f
  413033:	xor    al,0xa9
  413035:	and    al,0xea
  413037:	or     eax,0xa1ff5b99
  41303c:	dec    ebx
  41303d:	pop    ds
  41303e:	pop    ebp
  41303f:	es cmp eax,0x8a06bab6
  413045:	add    eax,0xa3c4b8d6
  41304a:	shl    BYTE PTR [ebx],cl
  41304c:	pop    ebx
  41304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41304e:	and    eax,0xb00cc275
  413053:	imul   edx,DWORD PTR [ecx-0x51e98bea],0xf4720203
  41305d:	cdq    
  41305e:	xor    al,0x63
  413060:	mov    esp,cr5
  413063:	add    DWORD PTR [ebp+0x3],ebx
  413066:	jb     0x413072
  413068:	push   esi
  413069:	cmp    al,0xed
  41306b:	(bad)  [esi+0x7b]
  41306e:	xchg   dh,dl
  413070:	les    ebx,FWORD PTR [edx]
  413072:	adc    BYTE PTR [ecx-0x2],ch
  413075:	test   al,0xac
  413077:	push   ebp
  413078:	aad    0xd3
  41307a:	cs nop
  41307c:	mov    WORD PTR [ecx],?
  41307e:	or     al,0x8f
  413080:	je     0x41306b
  413082:	xchg   DWORD PTR [edi+0x5e],ebp
  413085:	and    BYTE PTR [esi],bh
  413087:	(bad)  
  413088:	mov    ebx,0xb6a46aeb
  41308d:	sar    DWORD PTR [edi+0x1f],0xf
  413091:	add    BYTE PTR [eax-0x6272cebc],cl
  413097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413098:	jb     0x4130d6
  41309a:	pusha  
  41309b:	jno    0x4130c7
  41309d:	mov    ds:0x87e4a7c1,eax
  4130a2:	lods   al,BYTE PTR ds:[esi]
  4130a3:	sub    eax,0x9c6045d9
  4130a8:	dec    eax
  4130a9:	es mov al,0xc8
  4130ac:	dec    ebp
  4130ad:	and    al,0x19
  4130af:	mov    cl,0x5f
  4130b1:	ss js  0x413043
  4130b4:	jns    0x4130b4
  4130b6:	mov    bh,0x9f
  4130b8:	outs   dx,BYTE PTR ds:[esi]
  4130b9:	mov    gs,edx
  4130bb:	cmp    BYTE PTR [ebp+0x6b7023a],dl
  4130c1:	push   ss
  4130c2:	retf   
  4130c3:	mov    esi,0x2497112a
  4130c8:	arpl   di,bp
  4130ca:	ret    
  4130cb:	cs push es
  4130cd:	inc    ebp
  4130ce:	jbe    0x4130e5
  4130d0:	mov    ds:0x45da37a6,eax
  4130d5:	aas    
  4130d6:	outs   dx,DWORD PTR ds:[esi]
  4130d7:	hlt    
  4130d8:	(bad)  
  4130d9:	cli    
  4130da:	shl    ebp,0x57
  4130dd:	into   
  4130de:	and    esp,ebp
  4130e0:	adc    DWORD PTR [ebp+0x71],esp
  4130e3:	jl     0x4130ca
  4130e5:	mov    edi,0xff804f5f
  4130ea:	hlt    
  4130eb:	inc    ebp
  4130ec:	inc    eax
  4130ed:	test   BYTE PTR [ebx-0x2bcb6491],dh
  4130f3:	sub    eax,0xf256c6f6
  4130f8:	push   ebx
  4130f9:	push   0x33
  4130fb:	mov    ds,WORD PTR ds:[eax+edx*1]
  4130ff:	lods   eax,DWORD PTR ds:[esi]
  413100:	sbb    eax,0xed5bb869
  413105:	ret    0xf708
  413108:	dec    ecx
  413109:	mov    esi,0x6a1f273b
  41310e:	mov    ch,0x9f
  413110:	repnz dec ebx
  413112:	push   0x4c64609a
  413117:	sub    eax,0x69a745fc
  41311c:	jno    0x41309e
  41311e:	imul   esi
  413120:	push   ebp
  413121:	mov    eax,ebp
  413123:	mov    ?,WORD PTR [eax+0x22]
  413126:	cmp    BYTE PTR [ebx+0x2e0c0a30],bh
  41312c:	or     al,0x4b
  41312e:	hlt    
  41312f:	loope  0x413110
  413131:	aas    
  413132:	sbb    al,0x59
  413134:	mov    esi,0x4c8463e0
  413139:	fcom   QWORD PTR [edi]
  41313b:	pop    ebp
  41313d:	and    ch,dh
  41313f:	cmp    esp,eax
  413141:	jo     0x41317b
  413143:	sbb    al,0x29
  413145:	iret   
  413146:	fisubr DWORD PTR [eiz*8-0x22c63986]
  41314d:	jno    0x4130f9
  41314f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413150:	mov    ecx,0x6a945719
  413155:	retf   0x4e66
  413158:	lods   eax,DWORD PTR ds:[esi]
  413159:	mov    eax,0xbcc202e5
  41315e:	add    ah,bl
  413160:	out    dx,eax
  413161:	push   ecx
  413162:	frstor [eax]
  413164:	inc    esi
  413165:	mov    al,ds:0x8be13d31
  41316a:	dec    esp
  41316b:	dec    esi
  41316c:	mov    bl,BYTE PTR [edi]
  41316e:	cli    
  41316f:	xchg   ecx,eax
  413170:	mov    cl,0x8a
  413172:	cmc    
  413173:	add    DWORD PTR [edx+0x32],esi
  413176:	shr    eax,0x16
  413179:	inc    ecx
  41317a:	mov    dl,ah
  41317c:	pop    eax
  41317d:	pop    es
  41317e:	and    DWORD PTR [ebx-0x67746614],ebx
  413184:	out    dx,eax
  413185:	mov    esp,0x7056b596
  41318a:	loop   0x413182
  41318c:	xor    eax,0x876f8ed4
  413191:	push   ss
  413192:	pop    es
  413193:	push   cs
  413194:	popa   
  413195:	js     0x413168
  413197:	or     eax,0xbbc14653
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	into   
  4131c8:	sahf   
  4131c9:	lahf   
  4131ca:	xchg   edx,eax
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x413192
  4131d4:	scas   al,BYTE PTR es:[edi]
  4131d5:	test   BYTE PTR [eax],0x82
  4131d8:	ficom  DWORD PTR ds:0x13449bdc
  4131de:	jno    0x41323b
  4131e0:	fdiv   DWORD PTR [ebx-0x5abaa4ce]
  4131e6:	jbe    0x413176
  4131e8:	xlat   BYTE PTR ds:[ebx]
  4131e9:	bndstx [edi+0x31],bnd2
  4131ed:	pop    ebp
  4131ee:	outs   dx,BYTE PTR ds:[esi]
  4131ef:	xchg   edx,eax
  4131f0:	adc    eax,0xffa2d3ae
  4131f5:	adc    dl,0x16
  4131f8:	imul   esp,DWORD PTR [ecx],0x54fc7caa
  4131fe:	mov    eax,ds:0x462a9e23
  413203:	cmp    al,0xa5
  413205:	sbb    BYTE PTR [ecx],al
  413207:	inc    ebp
  413208:	push   esp
  413209:	push   ss
  41320a:	add    dl,BYTE PTR [edi-0xaecdf4e]
  413210:	or     DWORD PTR [eax-0x38],eax
  413213:	out    0xa7,al
  413215:	pop    eax
  413216:	imul   edx,DWORD PTR [edx+ebp*8],0xe180f753
  41321d:	ds sub edi,esp
  413220:	xchg   ecx,eax
  413221:	inc    edx
  413222:	shr    DWORD PTR ds:0x6a19088f,1
  413228:	jle    0x413214
  41322a:	sub    ax,0x4ee5
  41322e:	mov    BYTE PTR [ecx-0x48],0xe6
  413232:	hlt    
  413233:	push   ebx
  413234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413235:	addr16 mov cl,cl
  413238:	jle    0x413252
  41323a:	sbb    esp,DWORD PTR [edx-0x2d]
  41323d:	aaa    
  41323e:	sbb    al,0xa6
  413240:	jnp    0x413234
  413242:	fisub  DWORD PTR [ecx+0x7a]
  413245:	jo     0x413279
  413247:	mov    al,BYTE PTR [di+0x8fc]
  41324c:	dec    edi
  41324d:	jns    0x413254
  41324f:	outs   dx,BYTE PTR ds:[esi]
  413250:	push   cs
  413251:	test   al,0xf6
  413253:	jmp    0xb55fe4f4
  413258:	sti    
  413259:	das    
  41325a:	mov    dh,0xc
  41325c:	adc    eax,0x6d04ef7d
  413261:	ror    BYTE PTR [ebx+0x17f5369a],1
  413267:	mov    ebp,0x401cda86
  41326c:	push   0xa41d1116
  413271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413272:	ja     0x413229
  413274:	test   al,0x5f
  413276:	pusha  
  413277:	scas   eax,DWORD PTR es:[edi]
  413278:	hlt    
  413279:	xchg   DWORD PTR [eax+edx*1+0x1790eff8],ebx
  413280:	jnp    0x413204
  413282:	fdivr  QWORD PTR [ebp-0x34]
  413285:	jnp    0x4132ab
  413287:	adc    ch,BYTE PTR ds:0x69c849c3
  41328d:	add    WORD PTR [ebx+0x1b],dx
  413291:	or     eax,0xe21e4aa1
  413296:	psubsb mm3,QWORD PTR [edx+0x48c46cc2]
  41329d:	call   0xbef5:0xb38e9f3c
  4132a4:	loope  0x41331a
  4132a6:	mov    WORD PTR [ebx],gs
  4132a8:	enter  0x962d,0xe7
  4132ac:	aaa    
  4132ad:	fs dec edx
  4132af:	jae    0x413307
  4132b1:	pop    esi
  4132b2:	jecxz  0x41327a
  4132b4:	out    0xbb,al
  4132b6:	jne    0x413319
  4132b8:	pop    eax
  4132b9:	sbb    edi,edx
  4132bb:	pop    ss
  4132bc:	push   ds
  4132bd:	mov    ebx,0xfd885524
  4132c2:	jge    0x41332c
  4132c4:	in     al,dx
  4132c5:	je     0x413344
  4132c7:	out    0xb1,eax
  4132c9:	xor    al,0x2e
  4132cb:	sub    edi,esi
  4132cd:	and    DWORD PTR [ebx-0x34],0x5c
  4132d1:	inc    ebp
  4132d2:	mov    eax,0x9632a5dc
  4132d7:	not    ah
  4132d9:	int    0xbe
  4132db:	clc    
  4132dc:	test   al,0x7d
  4132de:	xor    ebx,DWORD PTR [esi+0x6b2bc221]
  4132e4:	mov    bl,0xbb
  4132e6:	iret   
  4132e7:	repnz mov edx,0xaeb2a29f
  4132ed:	xchg   DWORD PTR [edx],edi
  4132ef:	ins    DWORD PTR es:[edi],dx
  4132f0:	pusha  
  4132f1:	retf   0x8359
  4132f4:	popa   
  4132f5:	inc    eax
  4132f6:	xchg   edx,eax
  4132f7:	gs scas eax,DWORD PTR es:[edi]
  4132f9:	jg     0x41328f
  4132fb:	jge    0x413313
  4132fd:	ins    DWORD PTR es:[edi],dx
  4132fe:	jle    0x4132fb
  413300:	pop    ds
  413301:	call   0x3cb4:0x3519f663
  413308:	das    
  413309:	jle    0x413339
  41330b:	jns    0x413330
  41330d:	push   ss
  41330e:	xchg   ecx,eax
  41330f:	pushw  es
  413311:	mov    edx,0xeb9cf039
  413316:	mov    eax,ds:0xed084d0
  41331b:	push   ds
  41331c:	jp     0x413310
  41331e:	pop    ds
  41331f:	test   BYTE PTR [ebx-0x5ce7690f],al
  413325:	add    DWORD PTR [esi],ecx
  413327:	sbb    DWORD PTR [edx+0x54b09bb1],ebp
  41332d:	push   esp
  41332e:	imul   esi,DWORD PTR [esi-0x3a],0x82e2f4a0
  413335:	or     ebx,DWORD PTR [esi+0x32]
  413338:	jno    0x41332d
  41333a:	pop    es
  41333b:	(bad)  
  41333c:	lds    esp,FWORD PTR [eax]
  41333e:	scas   al,BYTE PTR es:[edi]
  41333f:	dec    esp
  413340:	mov    al,0x34
  413342:	loopne 0x413342
  413344:	pop    ds
  413345:	push   esi
  413346:	fs pop ss
  413348:	fwait
  413349:	jo     0x4132e4
  41334b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334c:	gs xchg edi,eax
  41334e:	push   edx
  41334f:	retf   0x1d81
  413352:	mov    BYTE PTR [eax],0xe7
  413355:	repz ds and eax,0xd89b55c1
  41335c:	loope  0x4133cb
  41335e:	mov    ebp,0x22da77de
  413363:	sub    al,BYTE PTR [edi+0x52]
  413366:	add    al,0x1f
  413368:	jne    0x4132f0
  41336a:	outs   dx,DWORD PTR ds:[esi]
  41336b:	out    0x2,al
  41336d:	inc    edx
  41336e:	or     bh,BYTE PTR [esi]
  413370:	sbb    dh,ch
  413372:	pop    edx
  413373:	mov    edi,0xe85244da
  413378:	dec    ebx
  413379:	push   ebp
  41337a:	mov    dl,0xe2
  41337c:	fwait
  41337d:	push   cs
  41337e:	test   al,0x62
  413380:	clc    
  413381:	shr    DWORD PTR [esi],cl
  413383:	sbb    eax,0xdff2d287
  413388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413389:	daa    
  41338a:	imul   edi,DWORD PTR [ebx+0x39],0x5567a436
  413391:	test   al,0xe4
  413393:	mov    bh,0xcd
  413395:	pop    ecx
  413396:	or     ecx,DWORD PTR [edx]
  413398:	pop    ds
  413399:	(bad)  
  41339a:	xor    ch,BYTE PTR [ecx+0x237cf8bb]
  4133a0:	mov    bl,0xfd
  4133a2:	xchg   edx,eax
  4133a3:	call   0x958bc780
  4133a8:	inc    ebp
  4133a9:	mov    ss,edi
  4133ab:	pop    ebp
  4133ac:	pop    edi
  4133ad:	or     ch,dh
  4133af:	add    bh,BYTE PTR [ecx-0x23f5c578]
  4133b5:	sahf   
  4133b6:	xchg   ebx,eax
  4133b7:	mov    ebp,0x95613c2c
  4133bc:	out    dx,al
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	sbb    BYTE PTR [edi+0x13],cl
  4133c1:	sbb    eax,0x48338026
  4133c6:	stc    
  4133c7:	sbb    eax,0xa53b8efd
  4133cc:	add    edx,DWORD PTR [ebx]
  4133ce:	fbstp  TBYTE PTR [edx]
  4133d0:	sbb    DWORD PTR [edi+0x59],edx
  4133d3:	sbb    eax,0xe31c4b0d
  4133d8:	mov    al,BYTE PTR [edi-0x64b1c6e8]
  4133de:	fwait
  4133df:	stc    
  4133e0:	into   
  4133e1:	das    
  4133e2:	dec    esp
  4133e3:	adc    DWORD PTR ds:0xbbe37e7e,edx
  4133e9:	jnp    0x4133d7
  4133eb:	push   es
  4133ec:	mov    ebp,0x26455408
  4133f1:	mov    cl,0xf8
  4133f3:	and    BYTE PTR [ebp+0x20e50f5d],0x66
  4133fa:	cli    
  4133fb:	inc    DWORD PTR [esi+0x5210a0e9]
  413401:	(bad)  
  413402:	fwait
  413403:	sbb    DWORD PTR [ebp-0x261227],esp
  413409:	xchg   edx,eax
  41340a:	mov    ebx,0x5f3cf0d9
  41340f:	xchg   edi,eax
  413410:	mov    al,0xb6
  413412:	ror    dh,1
  413414:	hlt    
  413415:	push   ss
  413416:	dec    edx
  413417:	pop    ss
  413418:	or     al,0xee
  41341a:	mov    esp,0x6c4938c8
  41341f:	rcr    ch,1
  413421:	(bad)  
  413422:	pop    esi
  413423:	iret   
  413424:	retf   
  413425:	rcl    edi,cl
  413427:	cwde   
  413428:	(bad)  
  413429:	mov    edx,0x69f43528
  41342e:	repnz adc al,0xc2
  413431:	lods   al,BYTE PTR ds:[esi]
  413432:	fnsave [esi+0x45]
  413435:	ficom  DWORD PTR [esi+0x33423482]
  41343b:	aaa    
  41343c:	fnstcw WORD PTR [ebx+eax*1+0x7d]
  413440:	in     al,dx
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x734635e
  41345f:	cmp    DWORD PTR [ebx+0x78],eax
  413462:	jg     0x4134dc
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	(bad)  
  413469:	jmp    0x2b56a4fa
  41346e:	or     ecx,DWORD PTR [ebx+0x6e47ef4d]
  413474:	mov    dh,0xd6
  413476:	std    
  413477:	and    BYTE PTR [ebp+0x66],dl
  41347a:	push   esp
  41347b:	ins    BYTE PTR es:[edi],dx
  41347c:	test   eax,0xd3d26f0c
  413481:	pop    edx
  413482:	inc    edi
  413483:	bound  esp,QWORD PTR [eax+0x70]
  413486:	call   DWORD PTR [ecx-0x16f9e69b]
  41348c:	outs   dx,BYTE PTR ds:[esi]
  41348d:	lahf   
  41348e:	mul    BYTE PTR [esp+edi*4+0x54bad8]
  413495:	popa   
  413496:	in     eax,dx
  413497:	lahf   
  413498:	mov    eax,0xc7b75bdd
  41349d:	cmp    BYTE PTR [ebx+0x9cc6667],bl
  4134a3:	jae    0x41349d
  4134a5:	mov    edi,DWORD PTR [eax-0x648e16b3]
  4134ab:	mov    al,0xb0
  4134ad:	test   al,0xdc
  4134af:	and    si,WORD PTR [edx-0x36ec9e6]
  4134b6:	adc    ebp,ebp
  4134b8:	out    dx,al
  4134b9:	test   al,0x52
  4134bb:	icebp  
  4134bc:	sti    
  4134bd:	jns    0x41344e
  4134bf:	hlt    
  4134c0:	mov    eax,ds:0xfcad8fc0
  4134c5:	test   DWORD PTR [edx+0xb9e6906],esi
  4134cb:	scas   al,BYTE PTR es:[edi]
  4134cc:	popf   
  4134cd:	lahf   
  4134ce:	outs   dx,DWORD PTR ds:[esi]
  4134cf:	push   edi
  4134d0:	sbb    bl,BYTE PTR [edx-0x1fdf1f3d]
  4134d6:	leave  
  4134d7:	cmp    al,BYTE PTR [ebx+0x20]
  4134da:	and    al,0xc7
  4134dc:	(bad)  
  4134dd:	outs   dx,DWORD PTR ds:[esi]
  4134de:	call   0x4ac722d2
  4134e3:	mov    ebp,0x3f87ae86
  4134e8:	dec    ebp
  4134e9:	sbb    bl,bh
  4134eb:	and    eax,DWORD PTR [edx+0x24360283]
  4134f1:	popa   
  4134f2:	jns    0x4134ca
  4134f4:	ret    0xec9e
  4134f7:	(bad)  
  4134f8:	ja     0x41356e
  4134fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134fb:	in     al,0x18
  4134fd:	(bad)  
  4134ff:	sub    al,0x23
  413501:	mov    al,0xee
  413503:	pusha  
  413504:	jge    0x4134fa
  413506:	mov    ebx,0x8dbfc1c7
  41350b:	in     al,0xaf
  41350d:	aam    0x77
  41350f:	inc    edx
  413510:	dec    esi
  413511:	add    BYTE PTR [esp+esi*1],bl
  413514:	adc    eax,0x9e0b5385
  413519:	xor    al,0xdb
  41351b:	test   al,0x53
  41351d:	(bad)  
  41351e:	sub    BYTE PTR ds:0x3ee395b1,ch
  413524:	inc    edi
  413525:	jno    0x41351d
  413527:	js     0x413554
  413529:	sub    al,bh
  41352b:	psrld  mm5,mm6
  41352e:	rcr    DWORD PTR [eax],cl
  413530:	xor    al,0xf1
  413532:	das    
  413533:	popa   
  413534:	loop   0x413583
  413536:	dec    edx
  413537:	fstp   QWORD PTR [esi+0x7ed0f85]
  41353d:	scas   al,BYTE PTR es:[edi]
  41353e:	jmp    0x40ea:0xf6db365b
  413545:	movmskps ecx,xmm0
  413548:	jecxz  0x4135a5
  41354a:	mov    edi,0xe8331c43
  41354f:	add    al,0xaf
  413551:	sub    eax,0x12fc78c9
  413556:	push   ecx
  413557:	rcl    BYTE PTR [ecx+0x0],1
  41355a:	in     eax,dx
  41355b:	push   esp
  41355c:	shl    ecx,cl
  41355e:	inc    edi
  41355f:	shl    BYTE PTR [ecx+0x6de5deb1],1
  413565:	add    BYTE PTR [edx],bl
  413567:	push   0x642ba925
  41356c:	xor    eax,0x790f126c
  413571:	mov    al,dl
  413573:	mov    esi,0x2ad239ab
  413578:	xchg   edx,eax
  413579:	jle    0x413505
  41357b:	mov    ah,0xed
  41357d:	cli    
  41357e:	test   DWORD PTR [esi-0x80],edi
  413581:	test   al,0x28
  413583:	aad    0xa1
  413585:	push   ebx
  413586:	lea    esp,[edi]
  413588:	lods   al,BYTE PTR ds:[esi]
  413589:	pop    ecx
  41358a:	ficom  DWORD PTR [ecx+0x531629be]
  413590:	cli    
  413591:	out    0x8,eax
  413593:	pop    edi
  413594:	stos   DWORD PTR es:[edi],eax
  413595:	cmp    al,0xdf
  413597:	data16 adc al,0xd5
  41359a:	mov    ebx,0x433268ab
  41359f:	mov    edi,DWORD PTR [eax+0x5c]
  4135a2:	shl    BYTE PTR [ebp+edi*8+0x2effaded],cl
  4135a9:	lods   al,BYTE PTR ds:[esi]
  4135aa:	pushf  
  4135ab:	sahf   
  4135ac:	xor    al,BYTE PTR ds:0x25078118
  4135b2:	lock mov al,0xc3
  4135b5:	(bad)  
  4135b6:	fiadd  WORD PTR [esi-0x19bf2f51]
  4135bc:	dec    edi
  4135bd:	stc    
  4135be:	inc    ebp
  4135bf:	and    al,0xfa
  4135c1:	push   es
  4135c2:	push   ebx
  4135c3:	mov    es,ecx
  4135c5:	mov    ds:0x71b03420,eax
  4135ca:	push   0x3da51018
  4135cf:	cld    
  4135d0:	sbb    eax,0xcccb3654
  4135d5:	mov    cl,dh
  4135d7:	repnz xor cl,bl
  4135da:	cmp    bl,ch
  4135dc:	mov    cl,0xb2
  4135de:	pusha  
  4135df:	jno    0x4135be
  4135e1:	lods   al,BYTE PTR ds:[esi]
  4135e2:	out    dx,eax
  4135e3:	fwait
  4135e4:	jmp    0x4135aa
  4135e6:	pushf  
  4135e7:	sbb    DWORD PTR [esi+0x30],edi
  4135ea:	xchg   BYTE PTR [edx-0x18e2fa23],al
  4135f0:	iret   
  4135f1:	retf   
  4135f2:	jmp    0x1ac7:0xa00c58c2
  4135f9:	test   bl,ch
  4135fb:	inc    esp
  4135fc:	test   BYTE PTR [esi],bl
  4135fe:	in     eax,0xc6
  413600:	mov    esp,0x1c472280
  413605:	retf   
  413606:	scas   al,BYTE PTR es:[edi]
  413607:	add    ebp,DWORD PTR [edx+0x3b]
  41360a:	inc    ecx
  41360b:	faddp  st(0),st
  41360d:	sub    esp,ebp
  41360f:	and    dh,BYTE PTR [eax-0x15ea21dc]
  413615:	hlt    
  413616:	into   
  413617:	shr    BYTE PTR [edi+0x606f8dcf],0x4b
  41361e:	fdivr  QWORD PTR [edi+eax*4-0x3]
  413622:	push   esp
  413623:	cmp    DWORD PTR [edx+0x4b],esp
  413626:	mov    ah,0x4b
  413628:	loopne 0x41367b
  41362a:	jne    0x4135b1
  41362c:	pop    es
  41362d:	adc    DWORD PTR [ebx+0x2f8b2fc9],ebx
  413633:	es (bad) 
  413635:	push   ss
  413636:	enter  0xb856,0xb5
  41363a:	mov    DWORD PTR [edi],eax
  41363c:	xchg   esp,eax
  41363d:	sbb    eax,0x5a20fc2b
  413642:	cmp    DWORD PTR [esi-0x46894ca5],esi
  413648:	inc    edx
  413649:	push   eax
  41364a:	mov    edi,0x4ebff28e
  41364f:	enter  0xc67f,0xcc
  413653:	lds    edx,FWORD PTR [esi+0x53b4ef8a]
  413659:	outs   dx,BYTE PTR ds:[esi]
  41365a:	xor    eax,0xf9a06697
  41365f:	loope  0x413644
  413661:	xchg   edx,eax
  413662:	or     BYTE PTR [ecx],bl
  413664:	shr    DWORD PTR [ecx],0xe1
  413667:	retf   
  413668:	pop    ss
  413669:	fisub  DWORD PTR [eax]
  41366b:	or     ebx,esi
  41366d:	sub    DWORD PTR [edx-0x1f],esp
  413670:	(bad)  
  413671:	shl    DWORD PTR gs:[ecx+0x7220b816],1
  413678:	xchg   ebp,eax
  413679:	mov    eax,ds:0xd7a3dca1
  41367e:	(bad)  
  41367f:	push   ss
  413680:	pop    edi
  413681:	ja     0x4136c5
  413683:	sbb    eax,0xf996a5b3
  413688:	sbb    ebp,DWORD PTR [ecx+0x13]
  41368b:	xlat   BYTE PTR ds:[ebx]
  41368c:	xor    DWORD PTR [ebx-0x69],ebp
  41368f:	shl    edi,1
  413691:	call   0x2244:0xc930684b
  413698:	sbb    dl,dl
  41369a:	push   ecx
  41369b:	stos   BYTE PTR es:[edi],al
  41369c:	stos   BYTE PTR es:[edi],al
  41369d:	test   DWORD PTR [ebp+0x3c1c97e2],esi
  4136a3:	loop   0x413666
  4136a5:	push   ss
  4136a6:	inc    ebp
  4136a7:	xor    eax,0x51587dbd
  4136ac:	adc    bl,BYTE PTR [ebx]
  4136ae:	iret   
  4136af:	fild   QWORD PTR [ecx]
  4136b1:	ret    
  4136b2:	dec    eax
  4136b3:	adc    BYTE PTR [edi],dh
  4136b5:	fwait
  4136b6:	jb     0x413699
  4136b8:	sar    BYTE PTR [edx+0x26e34fba],cl
  4136be:	enter  0x57d6,0x8a
  4136c2:	rcr    DWORD PTR [eax],0x12
  4136c5:	xchg   ecx,eax
  4136c6:	test   eax,0xdd194b41
  4136cb:	test   eax,0xff72b7ee
  4136d0:	sbb    BYTE PTR [edx-0x43aa7407],bh
  4136d6:	mov    edi,DWORD PTR [ebp-0xc]
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x22488de7]
  4136f4:	es dec esp
  4136f6:	sub    BYTE PTR [ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x41369d
  4136ff:	ja     0x413714
  413701:	fcom   QWORD PTR [ecx-0x17]
  413704:	push   es
  413705:	and    eax,0xf05a32af
  41370a:	fstp   QWORD PTR [edi]
  41370c:	nop
  41370d:	push   ss
  41370e:	fucomp st(2)
  413710:	(bad)  
  413712:	repz inc ecx
  413714:	mov    eax,0x6c11c641
  413719:	stc    
  41371a:	xchg   esi,eax
  41371b:	and    BYTE PTR [esi+esi*4],ch
  41371e:	cmp    BYTE PTR [esi+0x4eaf75e3],bl
  413724:	pop    ds
  413725:	sbb    DWORD PTR [eax+0x7f],esi
  413728:	cmp    al,0x2
  41372a:	daa    
  41372b:	jo     0x4136ed
  41372d:	icebp  
  41372e:	stc    
  41372f:	popa   
  413730:	ror    DWORD PTR [esi-0x69],0xce
  413734:	add    BYTE PTR [eax+eax*8+0x76],ch
  413738:	cmp    DWORD PTR [ebx+ebx*1-0x3f801abe],edx
  41373f:	test   eax,0x3d138446
  413744:	mov    eax,0x81d0c464
  413749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41374a:	stc    
  41374b:	or     ecx,DWORD PTR [ebp+esi*4+0x49]
  41374f:	mov    ch,0xa8
  413751:	sbb    ecx,eax
  413753:	inc    edi
  413754:	adc    edi,DWORD PTR [ebx+0x61d43209]
  41375a:	xlat   BYTE PTR ds:[ebx]
  41375b:	(bad)  
  41375c:	in     al,dx
  41375d:	add    eax,0x5b3d2b45
  413762:	pop    ecx
  413763:	adc    DWORD PTR [ebx-0x54da047e],edi
  413769:	loopne 0x4137b9
  41376b:	push   edx
  41376c:	mov    ch,0x5b
  41376e:	jb     0x413726
  413770:	imul   eax,DWORD PTR [edi+0x61655555],0x1
  413777:	fbld   TBYTE PTR [edi]
  413779:	adc    DWORD PTR [eax+0x30],0x9e22889c
  413780:	mov    ah,0xdd
  413782:	popf   
  413783:	out    0xfe,al
  413785:	cmp    eax,DWORD PTR [edi]
  413787:	ins    DWORD PTR es:[edi],dx
  413788:	lds    ecx,FWORD PTR [eax]
  41378a:	lea    ebx,[edi-0x35]
  41378d:	push   esi
  41378e:	mov    bh,BYTE PTR [eax]
  413790:	inc    esi
  413791:	mov    esp,DWORD PTR [ecx+0x2c]
  413794:	cmp    al,0xcb
  413796:	mov    ds:0xd07344a9,al
  41379b:	jmp    FWORD PTR [ebx+0x42]
  41379e:	mov    ah,0x4f
  4137a0:	ja     0x4137a4
  4137a2:	stos   BYTE PTR es:[edi],al
  4137a3:	std    
  4137a4:	sub    ch,al
  4137a6:	mov    ecx,0xc8ea52be
  4137ab:	xchg   esp,eax
  4137ac:	mov    bh,0xdd
  4137ae:	stos   BYTE PTR es:[edi],al
  4137af:	stos   BYTE PTR es:[edi],al
  4137b0:	mov    ebx,0xbf70ce6b
  4137b5:	cmp    BYTE PTR [eax-0x73],cl
  4137b8:	into   
  4137b9:	icebp  
  4137ba:	(bad)  
  4137bc:	sbb    cl,BYTE PTR ds:0xd1785cfc
  4137c2:	mov    esp,esp
  4137c4:	mov    edi,0x1354cdd7
  4137c9:	outs   dx,BYTE PTR ds:[esi]
  4137ca:	add    dx,si
  4137cd:	rcl    BYTE PTR [edx+0x4a],cl
  4137d0:	in     eax,dx
  4137d1:	lds    ecx,FWORD PTR [ecx+0x2e]
  4137d4:	clc    
  4137d5:	call   0xd722:0xc3f1598c
  4137dc:	(bad)  
  4137dd:	push   edi
  4137de:	rcr    DWORD PTR [ebx],0xad
  4137e1:	push   edi
  4137e2:	jns    0x41378b
  4137e4:	lds    ecx,FWORD PTR [edx+ebp*4+0x19]
  4137e8:	leave  
  4137e9:	enterw 0x8032,0x36
  4137ee:	pop    ds
  4137ef:	pop    esp
  4137f0:	loope  0x413810
  4137f2:	shl    BYTE PTR ds:0x331d7bcc,cl
  4137f8:	call   0x147c:0x43c938e5
  4137ff:	or     ebx,esp
  413801:	fnsave gs:[eax]
  413804:	popa   
  413805:	adc    al,dl
  413807:	jle    0x4137a0
  413809:	sub    BYTE PTR [ebp+0x5f6c571d],dl
  41380f:	adc    edi,DWORD PTR [ebx]
  413811:	in     al,dx
  413812:	fistp  QWORD PTR [ecx]
  413814:	inc    esi
  413815:	jp     0x4137f5
  413817:	loopne 0x413837
  413819:	and    cl,dh
  41381b:	aam    0xd7
  41381d:	mov    dh,0x29
  41381f:	pop    ebx
  413820:	cmp    BYTE PTR [esi-0x760f6531],bl
  413826:	leave  
  413827:	lock jmp 0xfc3e8607
  41382d:	scas   eax,DWORD PTR es:[edi]
  41382e:	gs dec esp
  413830:	push   esp
  413831:	add    esi,edx
  413833:	sbb    eax,DWORD PTR [ecx-0x7f6aee03]
  413839:	repz fistp DWORD PTR [edx+0x581eb5d4]
  413840:	sub    al,0x69
  413842:	adc    eax,0x1ac1d66e
  413847:	push   ecx
  413848:	cs dec esp
  41384a:	je     0x413857
  41384c:	sbb    eax,0x452a8126
  413851:	cwde   
  413852:	sahf   
  413853:	nop
  413854:	push   eax
  413855:	sbb    bh,al
  413857:	cmp    bl,dh
  413859:	pop    es
  41385a:	dec    ebp
  41385b:	push   ecx
  41385c:	adc    DWORD PTR [ebx],0xffffff95
  41385f:	fcmovbe st,st(1)
  413861:	ins    BYTE PTR es:[edi],dx
  413862:	gs enter 0x93d8,0x7
  413867:	pop    edi
  413868:	repnz pop ecx
  41386a:	xlat   BYTE PTR ds:[ebx]
  41386c:	idiv   DWORD PTR [edi+0x69]
  41386f:	ins    BYTE PTR es:[edi],dx
  413870:	(bad)  
  413871:	loopne 0x4138da
  413873:	pop    ecx
  413874:	cmp    esi,DWORD PTR [eax+eax*1]
  413877:	xchg   esi,edi
  413879:	or     eax,0x8de02114
  41387e:	xchg   edx,eax
  41387f:	mov    eax,0x861a2737
  413884:	jno    0x4138a8
  413886:	sbb    eax,0xb76af52b
  41388b:	xchg   esi,eax
  41388c:	push   es
  41388d:	out    dx,eax
  41388e:	mov    dl,0x87
  413890:	adc    DWORD PTR ds:0x250475f5,edi
  413896:	jp     0x4138bb
  413898:	es mov bh,0x40
  41389b:	fld    DWORD PTR ds:0x2abd9344
  4138a1:	out    dx,al
  4138a2:	xchg   ecx,eax
  4138a3:	cwde   
  4138a4:	scas   eax,DWORD PTR es:[edi]
  4138a5:	ficomp WORD PTR [edi-0x80]
  4138a8:	push   eax
  4138a9:	and    eax,0x7885d4e4
  4138ae:	popf   
  4138af:	adc    DWORD PTR [ecx-0x6762baca],0x51
  4138b6:	xor    al,0x62
  4138b8:	jbe    0x413937
  4138ba:	xchg   edx,eax
  4138bb:	sub    ebx,DWORD PTR [edx+eax*8+0x1c]
  4138bf:	jne    0x413888
  4138c1:	add    esi,DWORD PTR [edx-0x6971be7f]
  4138c7:	inc    edx
  4138c8:	sahf   
  4138c9:	jne    0x4138f9
  4138cb:	stc    
  4138cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138cd:	jno    0x413882
  4138cf:	repnz out 0x2,al
  4138d2:	jecxz  0x413870
  4138d4:	mov    eax,0x72197f61
  4138d9:	cmp    ah,BYTE PTR [eax-0x15]
  4138dc:	cmp    DWORD PTR [ebp*8+0x3d98cb0c],ebx
  4138e3:	inc    esp
  4138e4:	ins    BYTE PTR es:[edi],dx
  4138e5:	mov    edx,ebx
  4138e7:	pop    esp
  4138e8:	or     cl,BYTE PTR es:[eax-0x185a5c10]
  4138ef:	add    al,0x6c
  4138f1:	or     al,0x45
  4138f3:	adc    edi,DWORD PTR [esi+edx*1-0x380dc3f2]
  4138fa:	and    al,0x69
  4138fc:	sbb    edx,0x39
  4138ff:	lahf   
  413900:	outs   dx,DWORD PTR ds:[esi]
  413901:	idiv   BYTE PTR [esi-0x2e]
  413904:	out    0xa0,al
  413906:	jg     0x4138f7
  413908:	into   
  413909:	test   al,0x5b
  41390b:	dec    edi
  41390c:	mov    DWORD PTR [edi+ebp*4+0x1215449],esp
  413913:	fwait
  413914:	inc    eax
  413915:	leave  
  413916:	in     eax,0x65
  413918:	ret    
  413919:	mov    edi,0x41beb7e2
  41391e:	out    0x66,eax
  413920:	push   esi
  413921:	(bad)  
  413922:	imul   ebp,DWORD PTR [edx],0x7c70b43e
  413928:	cmp    cl,BYTE PTR [ebp-0x76a51da2]
  41392e:	pop    ecx
  41392f:	popf   
  413930:	xor    BYTE PTR ds:0x5fa9eed0,cl
  413936:	adc    eax,0x40cfb38e
  41393b:	add    edi,0x771455f4
  413941:	mov    WORD PTR [eax-0x32],es
  413944:	inc    eax
  413945:	lahf   
  413946:	xchg   edx,eax
  413947:	add    DWORD PTR [edi-0x67d8e57f],esp
  41394d:	fstp   TBYTE PTR [ebp+0x35]
  413950:	mov    WORD PTR [esi-0x46],?
  413953:	sti    
  413954:	dec    edx
  413955:	xchg   BYTE PTR [edx],cl
  413957:	sbb    al,0xbf
  413959:	retf   
  41395a:	les    ebp,FWORD PTR [ebx]
  41395c:	jmp    0x41390e
  41395e:	mov    eax,0xd8f5d44e
  413963:	cmp    esi,DWORD PTR [esp+eiz*2+0xf4c7656]
  41396a:	scas   eax,DWORD PTR es:[edi]
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x413924
  413996:	(bad)  
  413998:	push   eax
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	leave  
  4139a2:	sar    BYTE PTR [edx+0x1],cl
  4139a5:	ret    0x97df
  4139a8:	out    0x2d,al
  4139aa:	aam    0xbf
  4139ac:	jmp    0x75d8:0xfa3126e1
  4139b3:	aaa    
  4139b4:	inc    esp
  4139b5:	push   DWORD PTR [ebp+0x1976fe20]
  4139bb:	ficomp DWORD PTR [esp+ebp*1]
  4139be:	xchg   esp,eax
  4139bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c0:	lods   al,BYTE PTR ds:[esi]
  4139c1:	mov    esi,0xf05f5cd4
  4139c6:	cld    
  4139c7:	cmc    
  4139c8:	jecxz  0x4139a1
  4139ca:	or     DWORD PTR [esi+0x33],0x26
  4139ce:	push   ds
  4139cf:	or     dh,BYTE PTR [ebx+0x746ff3e4]
  4139d5:	or     dh,dh
  4139d7:	push   0x78
  4139d9:	loopne 0x413a09
  4139db:	aas    
  4139dc:	xchg   ecx,eax
  4139dd:	aas    
  4139de:	vpperm xmm15,xmm5,XMMWORD PTR [ecx-0x75349516],xmm5
  4139e8:	or     BYTE PTR [esi+eax*8],bl
  4139eb:	jecxz  0x4139d4
  4139ed:	icebp  
  4139ee:	xchg   ecx,eax
  4139ef:	mov    bl,0xba
  4139f1:	and    eax,0x5b488903
  4139f6:	pop    es
  4139f7:	inc    ebp
  4139f8:	(bad)  
  4139f9:	enter  0x49a2,0x9b
  4139fd:	in     al,0x58
  4139ff:	xor    ah,BYTE PTR [eax]
  413a01:	ds stc 
  413a03:	cdq    
  413a04:	fnstsw WORD PTR [ebx]
  413a06:	loop   0x4139f2
  413a08:	in     al,0x3
  413a0a:	je     0x413a02
  413a0c:	and    esi,DWORD PTR [edi-0x14de47d0]
  413a12:	not    edi
  413a14:	nop
  413a15:	es retf 0xad41
  413a19:	fistp  DWORD PTR [eax+0x51e95fbd]
  413a1f:	das    
  413a20:	dec    edx
  413a21:	mov    dh,0xd6
  413a23:	inc    esi
  413a24:	inc    eax
  413a25:	xor    DWORD PTR [edi+0x5f0c3fcd],0x4c
  413a2c:	jmp    0x9300:0xc441ff7f
  413a33:	inc    edx
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	pop    es
  413a36:	mov    ebx,0x6c9e27cf
  413a3b:	push   ss
  413a3c:	lahf   
  413a3d:	pop    eax
  413a3e:	pop    ecx
  413a3f:	cmp    ch,bh
  413a41:	lods   al,BYTE PTR ds:[esi]
  413a42:	sub    esi,DWORD PTR [esi-0x62645643]
  413a48:	xor    eax,0xf4b879d7
  413a4d:	sahf   
  413a4e:	cmp    al,cl
  413a50:	es test al,0x76
  413a53:	xor    dl,BYTE PTR [esi]
  413a55:	jg     0x4139e3
  413a57:	and    ch,cl
  413a59:	(bad)  
  413a5a:	and    BYTE PTR [ecx-0x479dbe95],dl
  413a60:	cmp    BYTE PTR [edx],bh
  413a62:	jecxz  0x413a50
  413a64:	mov    ch,dh
  413a66:	fsubr  DWORD PTR [eax+0x70d2f11f]
  413a6c:	sbb    ch,ch
  413a6e:	sub    BYTE PTR [eax],al
  413a70:	xchg   edx,eax
  413a71:	mov    ds:0xcf05e320,al
  413a76:	pop    ecx
  413a77:	hlt    
  413a78:	mov    bh,0xdd
  413a7a:	into   
  413a7b:	test   al,0xe0
  413a7d:	mov    edx,0xb7cc84f2
  413a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a83:	ret    
  413a84:	(bad)  
  413a85:	scas   al,BYTE PTR es:[edi]
  413a86:	and    al,0xed
  413a88:	stos   DWORD PTR es:[edi],eax
  413a89:	ja     0x413ae0
  413a8b:	jecxz  0x413aba
  413a8d:	out    dx,al
  413a8e:	mov    esp,0xf8c4b2ea
  413a93:	mov    esp,0x2dee9202
  413a98:	adc    eax,0x6a92911c
  413a9d:	sub    al,0x95
  413a9f:	xchg   ebx,eax
  413aa0:	push   esp
  413aa1:	mov    ecx,edx
  413aa3:	push   esp
  413aa4:	rcr    DWORD PTR [ebx-0x71],1
  413aa7:	fwait
  413aa8:	push   edi
  413aa9:	fiadd  DWORD PTR [eax+ebx*8-0x55c17f6b]
  413ab0:	enter  0xf949,0x68
  413ab4:	push   edx
  413ab5:	ret    
  413ab6:	and    eax,0x9b3dd1f8
  413abb:	stos   BYTE PTR es:[edi],al
  413abc:	addr16 xchg esi,eax
  413abe:	push   edx
  413abf:	js     0x413a5a
  413ac1:	pop    esp
  413ac2:	xchg   ecx,eax
  413ac3:	loop   0x413a53
  413ac5:	(bad)  
  413ac7:	pop    ebx
  413ac8:	add    ecx,DWORD PTR [ecx-0x33a6bf56]
  413ace:	nop
  413acf:	sub    eax,0x9bed4e30
  413ad4:	push   eax
  413ad5:	jg     0x413a65
  413ad7:	shr    ebp,cl
  413ad9:	imul   esp,ebp,0xb8e49ed5
  413adf:	xchg   edx,eax
  413ae0:	loopne 0x413b54
  413ae2:	stos   BYTE PTR es:[edi],al
  413ae3:	mov    dh,0x67
  413ae5:	cld    
  413ae6:	mov    ch,BYTE PTR [edx+0x622184d3]
  413aec:	repz adc al,0x20
  413aef:	add    eax,0x892b8092
  413af4:	push   DWORD PTR [edx-0x51ef5507]
  413afa:	or     eax,0xd4c8984b
  413aff:	xor    edx,ebx
  413b01:	mov    bh,dl
  413b03:	ret    0x970d
  413b06:	push   edi
  413b07:	jecxz  0x413ae7
  413b09:	sbb    al,0xf5
  413b0b:	add    al,0xe0
  413b0d:	jecxz  0x413aa5
  413b0f:	or     al,0x15
  413b11:	pop    es
  413b12:	das    
  413b13:	cmp    al,0x9
  413b15:	pop    esp
  413b16:	loope  0x413b06
  413b18:	and    DWORD PTR [ecx+0x79],ebx
  413b1b:	int3   
  413b1c:	call   DWORD PTR [edi]
  413b1e:	mov    ebx,0x91d0689c
  413b23:	cwde   
  413b24:	call   0x814e:0x156417f
  413b2b:	scas   eax,DWORD PTR es:[edi]
  413b2c:	sahf   
  413b2d:	add    al,0x8
  413b2f:	cmp    BYTE PTR [ebp+0x5],dh
  413b32:	dec    ebx
  413b33:	xor    al,0x41
  413b35:	popa   
  413b36:	lock jb 0x413af2
  413b39:	dec    ebx
  413b3a:	call   0xa617:0xe007edd3
  413b41:	fdivr  st(4),st
  413b43:	and    ch,BYTE PTR [esi]
  413b45:	pop    ds
  413b46:	jne    0x413b5e
  413b48:	xchg   edi,eax
  413b49:	int3   
  413b4a:	add    al,BYTE PTR [ecx]
  413b4c:	pop    ebp
  413b4d:	add    eax,0x305c4d47
  413b52:	mov    esi,0xe78f2ab0
  413b57:	xchg   ebx,eax
  413b58:	dec    edx
  413b59:	push   edx
  413b5a:	sbb    ebx,DWORD PTR [eax+0x34]
  413b5d:	jge    0x413bd8
  413b5f:	sbb    al,BYTE PTR [edi+0x59e9c97c]
  413b65:	(bad)  
  413b66:	(bad)  [ebx-0x56f1b743]
  413b6c:	jnp    0x413b2f
  413b6e:	inc    edi
  413b6f:	inc    ebp
  413b70:	jmp    0x7a569fd4
  413b75:	call   0xee53ac94
  413b7a:	pop    ebx
  413b7b:	(bad)  
  413b7d:	xor    al,0xb7
  413b7f:	imul   ecx,DWORD PTR [esi+0x61],0x3e3eecce
  413b86:	mov    edx,0x8ae6ca8a
  413b8b:	lea    edi,[edx+edi*2+0xd]
  413b8f:	ins    BYTE PTR es:[edi],dx
  413b90:	xchg   edi,eax
  413b91:	dec    esp
  413b92:	jnp    0x413b57
  413b94:	scas   eax,DWORD PTR es:[edi]
  413b95:	and    eax,0xfae39a87
  413b9a:	cmp    DWORD PTR [ecx+0x7e],esi
  413b9d:	aad    0x8f
  413b9f:	jbe    0x413bfd
  413ba1:	mov    esi,DWORD PTR [ebp+0x4]
  413ba4:	mov    DWORD PTR [ecx-0x7c],ebx
  413ba7:	loopne 0x413bfc
  413ba9:	mov    eax,ds:0x4c6e6ca8
  413bae:	ins    BYTE PTR es:[edi],dx
  413baf:	dec    DWORD PTR [eax]
  413bb1:	(bad)  
  413bb2:	jmp    0x413b51
  413bb4:	mov    esp,ebp
  413bb6:	(bad)  
  413bb7:	pop    edx
  413bb8:	cmp    al,0xa
  413bba:	mov    WORD PTR [ebx],cs
  413bbc:	into   
  413bbd:	jp     0x413b67
  413bbf:	repnz cmp al,0x90
  413bc2:	sbb    eax,DWORD PTR [edx+0x364cf37f]
  413bc8:	fidivr DWORD PTR ds:0xad32c727
  413bce:	push   esp
  413bcf:	ficomp DWORD PTR [edx+esi*2]
  413bd2:	pop    eax
  413bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bd4:	mov    dh,0xd9
  413bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd7:	push   0xa72a7ff7
  413bdc:	imul   ebx,DWORD PTR [ebp+0x209c9f83],0xffffffed
  413be3:	stos   DWORD PTR es:[edi],eax
  413be4:	fidiv  WORD PTR [edi+ebp*8-0x2e8e3417]
  413beb:	ds push ecx
  413bed:	push   ds
  413bee:	cmp    eax,0x781a675b
  413bf3:	sub    al,0xf
  413bf5:	xlat   BYTE PTR ds:[ebx]
  413bf6:	fdivr  DWORD PTR [edx+0x6f]
  413bf9:	sbb    ch,0x1f
  413bfc:	adc    dh,BYTE PTR [edi-0x33]
  413bff:	mov    dh,0x59
  413c01:	repz je 0x413c32
  413c04:	or     al,BYTE PTR [eax]
  413c06:	and    bl,al
  413c08:	lahf   
  413c09:	pop    ebx
  413c0a:	pop    ss
  413c0b:	inc    ebx
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	jno    0x413bf9
  413c2b:	mov    dh,0xf3
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	out    dx,al
  413c36:	test   eax,0xb47f4d61
  413c3b:	pop    ss
  413c3c:	jmp    0x413c86
  413c3e:	push   ebx
  413c3f:	xor    eax,0xef92bb05
  413c44:	aas    
  413c45:	ss push es
  413c47:	test   al,0x3e
  413c49:	outs   dx,DWORD PTR ds:[esi]
  413c4a:	pop    ebp
  413c4b:	and    BYTE PTR [ebp+0x3cd85c56],ah
  413c51:	mov    WORD PTR [edx],es
  413c53:	scas   al,BYTE PTR es:[edi]
  413c54:	cs pop eax
  413c56:	add    al,BYTE PTR [esi+0x48c60b09]
  413c5c:	inc    esi
  413c5d:	shl    ch,cl
  413c5f:	daa    
  413c60:	cmp    BYTE PTR [edx],dl
  413c62:	mov    edx,0x4f58263e
  413c67:	mov    ecx,0xfbb1e286
  413c6c:	sahf   
  413c6d:	inc    ecx
  413c6e:	mov    bh,0x40
  413c70:	outs   dx,DWORD PTR ds:[esi]
  413c71:	out    0xf5,al
  413c73:	mov    ecx,0xc9e9b846
  413c78:	inc    ecx
  413c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c7a:	in     eax,0x71
  413c7c:	or     bh,BYTE PTR [ecx-0x22]
  413c7f:	mov    al,ds:0x8d662ebc
  413c84:	in     eax,0x3a
  413c86:	dec    esi
  413c87:	jle    0x413ce5
  413c89:	fmul   st,st(7)
  413c8b:	sbb    dl,BYTE PTR [eax]
  413c8d:	jmp    0xe09b:0x17315dcf
  413c94:	loopne 0x413c76
  413c96:	shr    DWORD PTR [esi+0x7f9c7a94],0xb6
  413c9d:	mov    ds:0x7ae1cf40,eax
  413ca2:	data16 fistp WORD PTR [ecx]
  413ca5:	rcr    DWORD PTR [ebp-0x1],0x91
  413ca9:	add    al,0xb9
  413cab:	mov    ds:0x482bf6eb,al
  413cb0:	xor    DWORD PTR [ecx],0x54232043
  413cb6:	add    edx,DWORD PTR [edi]
  413cb8:	xchg   esp,eax
  413cb9:	inc    esi
  413cba:	xchg   ecx,eax
  413cbb:	inc    edx
  413cbc:	jge    0x413d2b
  413cbe:	mov    ds:0x7f37a8bc,al
  413cc3:	es iret 
  413cc5:	shl    eax,1
  413cc7:	push   eax
  413cc8:	in     al,dx
  413cc9:	pushf  
  413cca:	xlat   BYTE PTR ds:[ebx]
  413ccb:	shr    DWORD PTR [esi+0x4a42db0f],cl
  413cd1:	inc    eax
  413cd2:	xor    esi,ebp
  413cd4:	retf   
  413cd5:	mov    edi,0xbafc2e77
  413cda:	push   ebx
  413cdb:	jns    0x413d56
  413cdd:	or     al,0xf
  413cdf:	sub    al,0x59
  413ce1:	rcr    dh,1
  413ce3:	int    0x8b
  413ce5:	mov    WORD PTR [ebx],cs
  413ce7:	shr    DWORD PTR [edi+0x65],cl
  413cea:	mov    al,ds:0xc2316a16
  413cef:	sub    DWORD PTR [edx],0x1b
  413cf2:	gs or  al,0x59
  413cf5:	cmp    cl,BYTE PTR [ebp-0x61]
  413cf8:	mov    WORD PTR [edi],ss
  413cfa:	pop    ebx
  413cfb:	xchg   edi,eax
  413cfc:	fucomip st,st(2)
  413cfe:	loope  0x413ca8
  413d00:	jle    0x413d78
  413d02:	arpl   WORD PTR [edx-0x46bfc71a],di
  413d08:	push   edx
  413d09:	mov    bl,0x65
  413d0b:	sub    DWORD PTR [ebp-0x22],0x83a756c3
  413d12:	jle    0x413ced
  413d14:	nop
  413d15:	and    esi,DWORD PTR [esi]
  413d17:	cli    
  413d18:	daa    
  413d19:	cmp    al,BYTE PTR [edi-0x75]
  413d1c:	retf   
  413d1d:	inc    esp
  413d1e:	mov    ecx,0x7601ef82
  413d23:	mov    esi,0xd7b37f72
  413d28:	(bad)  
  413d2a:	push   ecx
  413d2b:	xor    eax,0x344c2fc4
  413d30:	sti    
  413d31:	test   BYTE PTR [ecx],bl
  413d33:	(bad)  
  413d34:	scas   eax,DWORD PTR es:[edi]
  413d35:	daa    
  413d36:	call   0x9b9ddcdf
  413d3b:	fcomp  DWORD PTR [edx+0x3c629902]
  413d41:	inc    esi
  413d42:	sbb    DWORD PTR [edx+0x55ebcc4d],edx
  413d48:	in     al,0x39
  413d4a:	inc    ebx
  413d4b:	and    DWORD PTR [ebp-0x1b],ecx
  413d4e:	push   ebx
  413d4f:	lahf   
  413d50:	stc    
  413d51:	xchg   BYTE PTR [ebx+ebx*2+0x2c],ah
  413d55:	ficomp WORD PTR [ebx+ebx*4-0x73b5d0e1]
  413d5c:	(bad)  [eax-0x15a2330e]
  413d62:	sub    ebp,edi
  413d64:	in     eax,0xd
  413d66:	icebp  
  413d67:	inc    edi
  413d68:	mov    BYTE PTR [ebx],0x3
  413d6b:	push   edi
  413d6c:	jnp    0x413d96
  413d6e:	(bad)  
  413d6f:	and    eax,0x9eafa286
  413d74:	sar    BYTE PTR [eax-0x80],0xf
  413d78:	jne    0x413ded
  413d7a:	outs   dx,DWORD PTR ds:[esi]
  413d7b:	push   cs
  413d7c:	inc    esp
  413d7d:	mov    ecx,0x5a730db5
  413d82:	aas    
  413d83:	shl    BYTE PTR [esp+eiz*8-0x153b8b38],0xaa
  413d8b:	ss in  al,dx
  413d8d:	push   edi
  413d8e:	sbb    dh,BYTE PTR [ebp+0x104e250]
  413d94:	iret   
  413d95:	call   DWORD PTR [ebx+eax*1+0x2a]
  413d99:	(bad)  
  413d9a:	imul   edx,DWORD PTR [esi+edi*8-0x543f1a5f],0xc9c78c8d
  413da5:	mov    dl,0x6
  413da7:	pop    ss
  413da8:	inc    ecx
  413da9:	inc    eax
  413daa:	jge    0x413e02
  413dac:	mov    ebx,0x252074ce
  413db1:	cmc    
  413db2:	test   al,0x47
  413db4:	mov    dh,0x0
  413db6:	out    dx,al
  413db7:	adc    BYTE PTR [ecx+esi*2],0x6d
  413dbb:	xchg   edx,eax
  413dbc:	and    al,0x58
  413dbe:	and    eax,0xef3aa843
  413dc3:	in     al,dx
  413dc4:	ds stos BYTE PTR es:[edi],al
  413dc6:	sub    DWORD PTR [edi+0x4a5d3300],0x24a39f2c
  413dd0:	jne    0x413dd0
  413dd2:	out    dx,eax
  413dd3:	cdq    
  413dd4:	mov    ds:0x50166b8f,al
  413dd9:	es dec esi
  413ddb:	ss pusha 
  413ddd:	aad    0x3d
  413ddf:	rcl    DWORD PTR [esi+0x43],1
  413de2:	mov    esp,0x50d84731
  413de7:	sahf   
  413de8:	es mov ebx,0xfe9f9f08
  413dee:	out    0x1a,eax
  413df0:	mov    ecx,gs
  413df2:	ins    DWORD PTR es:[edi],dx
  413df3:	sbb    BYTE PTR ds:0xdb98aa30,bl
  413df9:	inc    edx
  413dfa:	repz (bad)
  413dfd:	int3   
  413dfe:	daa    
  413dff:	xchg   edi,eax
  413e00:	cmp    BYTE PTR [eax],al
  413e02:	sbb    cl,ch
  413e04:	rol    dl,0x84
  413e07:	inc    esi
  413e08:	adc    BYTE PTR [edi-0x7],ch
  413e0b:	loop   0x413d95
  413e0d:	sbb    eax,0x6ac40f71
  413e12:	or     al,0xc8
  413e14:	into   
  413e15:	mov    al,0x5a
  413e17:	es (bad) 
  413e19:	xchg   esi,eax
  413e1a:	mov    al,0xb
  413e1c:	mov    WORD PTR ds:0x9604a4cb,cs
  413e22:	or     DWORD PTR [ecx+0x4a74a1ea],0x85a2e007
  413e2c:	xchg   esi,eax
  413e2d:	into   
  413e2e:	call   0xd27418c1
  413e33:	in     al,0xea
  413e35:	fs inc ecx
  413e37:	dec    ebx
  413e38:	sti    
  413e39:	not    BYTE PTR [ecx]
  413e3b:	test   al,0xde
  413e3d:	jb     0x413dce
  413e3f:	fsubrp st(1),st
  413e41:	or     ch,BYTE PTR [ebp-0x5e]
  413e44:	fstp   DWORD PTR [ebx+edx*2+0x70]
  413e48:	pop    ss
  413e49:	xchg   ecx,eax
  413e4a:	retf   0x9b52
  413e4d:	or     DWORD PTR [ebp+0x38cc93cb],edx
  413e53:	mov    eax,ds:0xd01c5953
  413e58:	dec    edx
  413e59:	dec    ebp
  413e5a:	iret   
  413e5b:	push   0x7496c5ee
  413e60:	addr16 jo 0x413e7e
  413e63:	rsm    
  413e65:	mov    dh,0x74
  413e67:	daa    
  413e68:	in     eax,dx
  413e69:	imul   eax,DWORD PTR [edx],0xffffff91
  413e6c:	fwait
  413e6d:	mov    ds:0xb32433f0,eax
  413e72:	xor    ebx,esp
  413e74:	push   0xffffff87
  413e76:	inc    edi
  413e77:	pop    es
  413e78:	das    
  413e79:	shr    DWORD PTR [ecx],1
  413e7b:	or     edi,edi
  413e7d:	or     bh,BYTE PTR [esi-0x56]
  413e80:	into   
  413e81:	call   0xdfb2394c
  413e86:	inc    DWORD PTR [ebx-0x1e274d65]
  413e8c:	cld    
  413e8d:	daa    
  413e8e:	inc    edx
  413e8f:	xor    eax,ecx
  413e91:	mov    eax,0x10d5f2b8
  413e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e97:	mov    esp,0x9e20e86b
  413e9c:	int3   
  413e9d:	inc    ah
  413e9f:	out    dx,al
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	mov    BYTE PTR [ecx],bh
  413eb9:	les    ecx,FWORD PTR [ebx]
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	popa   
  413ec4:	loop   0x413ee3
  413ec6:	fbld   TBYTE PTR [edx+0x178651c5]
  413ecc:	xchg   DWORD PTR [eax+0x2b],edx
  413ecf:	retf   
  413ed0:	gs jl  0x413ecd
  413ed3:	inc    ecx
  413ed4:	mov    esi,0x5680c0f
  413ed9:	add    BYTE PTR [eax-0x53],cl
  413edc:	add    bl,bl
  413ede:	addr16 sub eax,0xc77b7efa
  413ee4:	(bad)  
  413ee5:	cs inc eax
  413ee7:	jnp    0x413ec1
  413ee9:	aad    0xe9
  413eeb:	sub    al,0x6a
  413eed:	(bad)  
  413eee:	fisubr DWORD PTR [ebx-0x33]
  413ef1:	dec    edi
  413ef2:	xchg   DWORD PTR [edx+0x2f],edx
  413ef5:	jo     0x413f09
  413ef7:	dec    esi
  413ef8:	ret    
  413ef9:	out    0xbc,al
  413efb:	mov    ds:0xa9988fe1,eax
  413f00:	inc    edx
  413f01:	mov    BYTE PTR [edi-0x29932f55],ch
  413f07:	jo     0x413ee8
  413f09:	sahf   
  413f0a:	dec    esi
  413f0b:	cmc    
  413f0c:	ins    DWORD PTR es:[edi],dx
  413f0d:	mov    eax,ds:0xdd373bf9
  413f12:	shl    DWORD PTR [edi-0x494863ed],0x88
  413f19:	(bad)  
  413f1a:	push   ebx
  413f1b:	jmp    0xa15bb9eb
  413f20:	out    0xef,eax
  413f22:	sub    edx,DWORD PTR [eax+0x1c]
  413f25:	rcr    dl,cl
  413f27:	imul   ebx,DWORD PTR [edx+0x3dc68511],0xec0b33b0
  413f31:	xchg   ecx,eax
  413f32:	in     al,dx
  413f33:	lds    ebp,FWORD PTR [edi+0x2d91586]
  413f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f3a:	and    ebp,DWORD PTR [edx+edx*1]
  413f3d:	shr    DWORD PTR [esi],1
  413f3f:	mov    eax,0x231102bb
  413f44:	loopne 0x413ed9
  413f46:	mov    ah,0xcb
  413f48:	lock inc edx
  413f4a:	test   eax,0xa8cc97bd
  413f4f:	(bad)  
  413f50:	in     al,0xbf
  413f52:	push   esp
  413f53:	aam    0xc0
  413f55:	jbe    0x413fbe
  413f57:	aam    0x85
  413f59:	pop    ebx
  413f5a:	or     BYTE PTR [eax],ch
  413f5c:	pop    esi
  413f5d:	aad    0xb2
  413f5f:	retf   0xd3f1
  413f62:	fwait
  413f63:	cs jmp 0xdb18bb93
  413f69:	sti    
  413f6a:	cdq    
  413f6b:	in     al,0xc2
  413f6d:	outs   dx,DWORD PTR ds:[esi]
  413f6e:	xchg   esp,eax
  413f6f:	push   edi
  413f70:	xchg   ebp,eax
  413f71:	push   ds
  413f72:	add    eax,0x2ecc30a4
  413f77:	clc    
  413f78:	pop    eax
  413f79:	ins    BYTE PTR es:[edi],dx
  413f7a:	imul   edx,edi,0xbe65bf9b
  413f80:	stc    
  413f81:	inc    edx
  413f82:	xor    DWORD PTR [eax+ebx*1],ebx
  413f85:	add    eax,0x72718105
  413f8a:	sbb    DWORD PTR [esi+0x6971d317],ebx
  413f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f91:	jecxz  0x413f26
  413f93:	push   0x60
  413f95:	push   ds
  413f96:	push   edx
  413f97:	mov    ds:0x4e87df08,al
  413f9c:	inc    ebp
  413f9d:	mov    edx,0xe493800
  413fa2:	les    esp,FWORD PTR [esi]
  413fa4:	dec    DWORD PTR [ebx+0x689a4ada]
  413faa:	stos   BYTE PTR es:[edi],al
  413fab:	jp     0x413fa8
  413fad:	clc    
  413fae:	mov    bl,0x96
  413fb0:	lods   al,BYTE PTR ds:[esi]
  413fb1:	lea    ebx,[ebx]
  413fb3:	dec    edi
  413fb4:	xchg   BYTE PTR [ecx+0xa],ah
  413fb7:	mov    ah,0x95
  413fb9:	pop    ecx
  413fba:	shl    bh,cl
  413fbc:	pop    ebp
  413fbd:	sub    edx,ecx
  413fbf:	fld    DWORD PTR [ecx+esi*1-0x59b6e0bc]
  413fc6:	add    esp,DWORD PTR [edx]
  413fc8:	add    bh,bh
  413fca:	rcl    BYTE PTR [edx+0x3f],cl
  413fcd:	cmp    DWORD PTR [ebp+edx*2+0x24],eax
  413fd1:	es stc 
  413fd3:	lock cld 
  413fd5:	fs cdq 
  413fd7:	xchg   edx,eax
  413fd8:	repnz lea edx,[ebp+0x68]
  413fdc:	jle    0x413fd3
  413fde:	adc    ch,BYTE PTR [edi-0x28b4ecb5]
  413fe4:	fdiv   QWORD PTR [edx]
  413fe6:	arpl   WORD PTR [ebp+0x17],ax
  413fe9:	bound  esi,QWORD PTR [ecx]
  413feb:	pop    esp
  413fec:	les    edx,FWORD PTR [eax+edx*1]
  413fef:	push   esp
  413ff0:	mov    edx,0x2306852d
  413ff5:	or     al,0x97
  413ff7:	enter  0xac89,0x6c
  413ffb:	fnstenv [esi+edi*4-0x276b4ddb]
  414002:	and    DWORD PTR [edi-0x7a34c0ae],edi
  414008:	pop    ecx
  414009:	mov    ecx,0x8d419f17
  41400e:	or     ah,bl
  414010:	call   0xd7a2:0x61ba11a0
  414017:	jns    0x41408a
  414019:	pop    es
  41401a:	iret   
  41401b:	outs   dx,BYTE PTR ds:[esi]
  41401c:	cmp    cl,BYTE PTR [edi+0x657e91f0]
  414022:	push   esp
  414023:	adc    cl,ah
  414025:	je     0x414056
  414027:	test   BYTE PTR [esp+eax*4-0x36192052],bh
  41402e:	xor    BYTE PTR ds:[eax],0x49
  414032:	repnz loope 0x414035
  414035:	ret    0x80ad
  414038:	sbb    al,0xe8
  41403a:	jl     0x413ff6
  41403c:	(bad)  
  41403d:	cmp    ah,ch
  41403f:	in     eax,0xc8
  414041:	rep movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414044:	scas   al,BYTE PTR es:[edi]
  414045:	xchg   ebx,eax
  414046:	jne    0x414088
  414048:	rcr    DWORD PTR [ecx-0x7cb5283f],cl
  41404e:	cmp    DWORD PTR [esi],ecx
  414050:	scas   eax,DWORD PTR es:[edi]
  414051:	in     al,0xb1
  414053:	cli    
  414054:	jmp    0x48947b3c
  414059:	lea    ecx,[ebp-0x4]
  41405c:	arpl   WORD PTR [ebx-0x17de9f9c],bp
  414062:	sub    BYTE PTR [esi-0x7ffce0bb],dh
  414068:	loope  0x414056
  41406a:	jmp    0xa9e847e
  41406f:	jmp    0xdc1f84b7
  414074:	pop    esp
  414075:	fdivrp st(6),st
  414077:	arpl   WORD PTR [eax-0x1eaa380c],bx
  41407d:	add    al,0xf5
  41407f:	mov    al,0x20
  414081:	popf   
  414082:	call   0x486d2558
  414087:	jbe    0x4140aa
  414089:	add    al,0x8d
  41408b:	jno    0x4140dc
  41408d:	sub    ah,BYTE PTR [eax+0x115fe416]
  414093:	inc    ecx
  414094:	adc    esp,edi
  414096:	nop
  414097:	shl    BYTE PTR [edi],0x2e
  41409a:	mov    al,ds:0x6a60b1c8
  41409f:	sub    al,0x56
  4140a1:	or     dl,bl
  4140a3:	xchg   ebx,eax
  4140a4:	mov    eax,ds:0x7a8aee23
  4140a9:	fs pop es
  4140ab:	jge    0x41408a
  4140ad:	jo     0x41411c
  4140af:	xor    bl,BYTE PTR [edi-0x13]
  4140b2:	repz dec edx
  4140b4:	sbb    al,0x78
  4140b6:	mov    ds:0xcbbacb22,eax
  4140bb:	in     eax,dx
  4140bc:	jns    0x41413a
  4140be:	dec    eax
  4140bf:	adc    esi,DWORD PTR [ebx]
  4140c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140c2:	into   
  4140c3:	dec    eax
  4140c4:	add    bh,cl
  4140c6:	push   es
  4140c7:	imul   edx,DWORD PTR [edx+eax*4-0x455c0e40],0x4eb3080e
  4140d2:	or     al,0x69
  4140d4:	dec    eax
  4140d5:	popf   
  4140d6:	sbb    dh,BYTE PTR [esi+0x73]
  4140d9:	jmp    0x4140f7
  4140db:	jnp    0x41414b
  4140dd:	test   BYTE PTR [edi],bh
  4140df:	imul   edi,DWORD PTR ds:0x9fff0f58,0x4
  4140e6:	push   edi
  4140e7:	sub    BYTE PTR [esi],dh
  4140e9:	xchg   esp,eax
  4140ea:	cmc    
  4140eb:	pop    ebx
  4140ec:	and    esp,eax
  4140ee:	fld    TBYTE PTR [esi]
  4140f0:	ja     0x4140e3
  4140f2:	xchg   DWORD PTR [edx+0x23],esp
  4140f5:	xchg   ebx,eax
  4140f6:	les    eax,FWORD PTR [eax-0x7f]
  4140f9:	lods   eax,DWORD PTR ds:[esi]
  4140fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140fb:	clc    
  4140fc:	sbb    DWORD PTR [ebp-0x54],0xc3a1dc2c
  414103:	fistp  DWORD PTR [esi]
  414105:	mov    eax,ds:0xc32aff88
  41410a:	xchg   ecx,eax
  41410b:	jmp    FWORD PTR [ecx+edi*2]
  41410e:	fld    DWORD PTR [ecx-0x1]
  414111:	and    ebx,0x4
  414114:	fisttp QWORD PTR [edx+0x3ca56335]
  41411a:	jle    0x4140dc
  41411c:	cs loope 0x4140ed
  41411f:	jge    0x4140da
  414121:	push   ss
  414122:	lock and eax,0xf334a107
  414128:	sub    BYTE PTR fs:[edx],0x2
  41412c:	jmp    0x4140b5
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0xbc145a14
  414142:	fdivr  QWORD PTR [esi+0x7f04544c]
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x4140df
  41414e:	dec    esi
  41414f:	sbb    eax,0xa6b8635c
  414154:	fist   WORD PTR [esi]
  414156:	adc    DWORD PTR [eax+0x67],ebx
  414159:	lods   al,BYTE PTR ds:[esi]
  41415a:	pop    edi
  41415b:	xchg   ecx,eax
  41415c:	dec    esi
  41415d:	(bad)  
  41415e:	and    eax,0xb916b5b4
  414163:	nop
  414164:	jl     0x414150
  414166:	fwait
  414167:	jle    0x414155
  414169:	rcr    eax,1
  41416b:	xor    dl,cl
  41416d:	sbb    eax,0xe6368c2b
  414172:	adc    BYTE PTR [ecx],al
  414174:	or     dh,ah
  414176:	stc    
  414177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414178:	xor    ah,BYTE PTR [bp+di-0x1829]
  41417d:	sub    ebp,DWORD PTR [esi]
  41417f:	and    bl,BYTE PTR [ebx+0x43f4e55c]
  414185:	loope  0x4141ab
  414187:	jl     0x4141da
  414189:	sahf   
  41418a:	lods   al,BYTE PTR ds:[si]
  41418c:	xchg   ah,bl
  41418e:	add    cl,BYTE PTR ds:0xf08d02e7
  414194:	push   ecx
  414195:	mov    eax,0x9e4a0e9d
  41419a:	push   ss
  41419b:	xchg   edx,eax
  41419c:	mul    BYTE PTR [esi+0xb]
  41419f:	repz jnp 0x414145
  4141a2:	(bad)  
  4141a3:	sbb    al,0x3a
  4141a5:	int    0x69
  4141a7:	ds sbb eax,0xd348f4a5
  4141ad:	push   0x9e1620a4
  4141b2:	sar    DWORD PTR ds:0xebb0e142,0x82
  4141b9:	mov    ah,0xb7
  4141bb:	cmp    al,0x15
  4141bd:	pushf  
  4141be:	cs mov dh,0xc3
  4141c1:	mov    bl,0xf3
  4141c3:	xor    edx,DWORD PTR [ecx]
  4141c5:	in     al,0x1b
  4141c7:	stc    
  4141c8:	and    eax,0x5bd81bb2
  4141cd:	cs das 
  4141cf:	mov    ah,0xf4
  4141d1:	dec    edx
  4141d2:	dec    edi
  4141d3:	push   eax
  4141d4:	push   ds
  4141d5:	lahf   
  4141d6:	fiadd  DWORD PTR [ebx-0x4d]
  4141d9:	adc    al,0x70
  4141db:	pop    edi
  4141dc:	lods   eax,DWORD PTR ds:[esi]
  4141dd:	stos   DWORD PTR es:[edi],eax
  4141de:	and    ecx,DWORD PTR [ebx+0xd]
  4141e1:	lock movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4141e4:	pop    edi
  4141e5:	xchg   DWORD PTR [ecx],esp
  4141e7:	(bad)  
  4141e9:	xor    BYTE PTR [ebx+0x15],bl
  4141ec:	xor    al,0x69
  4141ee:	mov    ds:0x8c8b29b7,al
  4141f3:	je     0x4141c8
  4141f5:	(bad)  
  4141f6:	jbe    0x4141b6
  4141f8:	xor    BYTE PTR [esi+0x782ae5f8],0xdb
  4141ff:	sar    DWORD PTR [edx+ebx*4+0x7b],0x80
  414204:	dec    ebp
  414205:	ins    BYTE PTR es:[edi],dx
  414206:	push   cs
  414207:	mov    ds:0x780536bf,al
  41420c:	pop    eax
  41420d:	dec    ebp
  41420e:	jmpw   0xc96c
  414212:	push   cs
  414213:	jmp    0x7170fb54
  414218:	push   ecx
  414219:	stos   BYTE PTR es:[edi],al
  41421a:	in     al,0x3e
  41421c:	pop    edx
  41421d:	daa    
  41421e:	sbb    dh,ch
  414220:	add    esp,DWORD PTR [edi]
  414222:	xlat   BYTE PTR ds:[ebx]
  414223:	jae    0x414288
  414225:	ret    
  414226:	xor    BYTE PTR [esp+ebp*8-0x47],bh
  41422a:	add    ch,cl
  41422c:	ins    DWORD PTR es:[edi],dx
  41422d:	scas   al,BYTE PTR es:[edi]
  41422e:	lahf   
  41422f:	lock sub eax,DWORD PTR [ebp-0x1fe1d96b]
  414236:	cmp    cl,BYTE PTR [ecx-0x7f2236ba]
  41423c:	pop    ss
  41423d:	xchg   ebx,eax
  41423e:	pop    es
  41423f:	inc    esi
  414240:	push   edx
  414241:	push   edi
  414242:	in     eax,0xea
  414244:	fist   DWORD PTR [ecx]
  414246:	fiadd  WORD PTR [edx-0x10]
  414249:	push   es
  41424a:	jge    0x4142a9
  41424c:	or     edx,0xffffff86
  41424f:	retf   0xe511
  414252:	pop    es
  414253:	stos   DWORD PTR es:[edi],eax
  414254:	pop    eax
  414255:	push   es
  414256:	mov    BYTE PTR [eax],al
  414258:	add    al,0x31
  41425a:	sub    eax,0x70f35539
  41425f:	mov    dh,0x40
  414261:	inc    ecx
  414262:	add    bl,BYTE PTR [ebx-0x2687b678]
  414268:	jle    0x414294
  41426a:	mov    WORD PTR [ebp+0xb],ds
  41426d:	jmp    0x41423c
  41426f:	push   edx
  414270:	hlt    
  414271:	sub    eax,DWORD PTR [edi+0x7]
  414274:	fucom  st(0)
  414276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414277:	loopne 0x414215
  414279:	js     0x41429b
  41427b:	xchg   ecx,eax
  41427c:	inc    ebx
  41427d:	cs push 0x76a2884b
  414283:	fcomp  QWORD PTR [edx-0x1e77b5ff]
  414289:	cld    
  41428a:	adc    al,0x92
  41428c:	iret   
  41428d:	fimul  WORD PTR [edx-0x258a8320]
  414293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414294:	loopne 0x41424c
  414296:	pop    esp
  414297:	test   BYTE PTR [ebx+0x1a],ah
  41429a:	mov    esp,0x5c4e0646
  41429f:	(bad)  
  4142a0:	mov    ecx,0x6a3d2708
  4142a5:	shr    DWORD PTR [esi],0x3d
  4142a8:	inc    esp
  4142a9:	mov    ecx,0x77c43867
  4142ae:	jmp    0x414279
  4142b0:	or     DWORD PTR [ebp+0x1b0431c4],esi
  4142b6:	xchg   DWORD PTR [eax],esp
  4142b8:	inc    eax
  4142b9:	cdq    
  4142ba:	dec    edx
  4142bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142bc:	mov    DWORD PTR [eax+0x7d169995],ebp
  4142c2:	mov    ah,0x79
  4142c4:	fwait
  4142c5:	mov    ebx,0xebc04f70
  4142ca:	gs dec eax
  4142cc:	jp     0x414319
  4142ce:	sahf   
  4142cf:	xchg   ebx,eax
  4142d0:	jbe    0x4142fb
  4142d2:	pusha  
  4142d3:	and    BYTE PTR [edi-0x252c5174],dl
  4142d9:	adc    eax,0xd434a66b
  4142de:	(bad)  
  4142df:	mov    es,esp
  4142e1:	push   edx
  4142e2:	jo     0x41433a
  4142e4:	sub    eax,esp
  4142e6:	scas   al,BYTE PTR es:[edi]
  4142e7:	mov    ds:0x2b294b14,eax
  4142ec:	push   ecx
  4142ed:	sbb    bh,ah
  4142ef:	stc    
  4142f0:	xor    al,0x6a
  4142f2:	fidivr WORD PTR [edx-0x7e]
  4142f5:	xchg   ebp,eax
  4142f6:	cmc    
  4142f7:	mov    ebp,ebx
  4142f9:	es inc edx
  4142fb:	xchg   esi,eax
  4142fc:	cld    
  4142fd:	and    al,0xd4
  4142ff:	scas   al,BYTE PTR es:[edi]
  414300:	xchg   edx,eax
  414301:	dec    edi
  414302:	les    eax,FWORD PTR [ecx]
  414304:	leavew 
  414306:	and    al,0xca
  414308:	xor    DWORD PTR [eax+0x204c6c4c],0x65e88761
  414312:	aas    
  414313:	add    BYTE PTR [ecx+0x63],bl
  414316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414317:	mov    ebx,gs
  414319:	push   es
  41431a:	mov    dl,0xf9
  41431c:	gs pop ds
  41431e:	(bad)  
  414320:	ror    DWORD PTR [edx],cl
  414322:	xchg   dl,dh
  414324:	dec    edi
  414325:	xlat   BYTE PTR ds:[ebx]
  414326:	mov    ebx,0x7f9a3a7
  41432b:	into   
  41432c:	call   0x3ae1ae36
  414331:	cmp    BYTE PTR [esi],0xd3
  414334:	and    DWORD PTR [edx+0x107d5361],ecx
  41433a:	shl    DWORD PTR [edx+edx*1-0x40be84f0],0x5b
  414342:	data16 cmp al,0x3e
  414345:	jg     0x41434e
  414347:	dec    esi
  414348:	mov    BYTE PTR [eax+0x5],dh
  41434b:	or     DWORD PTR [ecx],esp
  41434d:	and    DWORD PTR [ecx-0x41],ecx
  414350:	mov    edi,DWORD PTR [ebp+0x3b]
  414353:	fistp  QWORD PTR [ebp+0x2d1e31d6]
  414359:	out    dx,eax
  41435a:	mov    ebp,DWORD PTR [eax+ebp*8-0x80]
  41435e:	dec    ecx
  41435f:	jmp    0x568b:0xb75b81aa
  414366:	xchg   esp,eax
  414367:	js     0x4143a1
  414369:	sub    al,0x4c
  41436b:	inc    ebx
  41436c:	jns    0x4142f3
  41436e:	push   cs
  41436f:	xchg   ebp,eax
  414370:	push   esp
  414371:	or     al,0xaa
  414373:	push   edi
  414374:	cmp    eax,0xf3a59793
  414379:	dec    ebx
  41437a:	sti    
  41437b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437c:	sahf   
  41437d:	pushf  
  41437e:	push   edx
  41437f:	lock (bad) [ecx+0x63b1d9dd]
  414386:	add    eax,0x567a1769
  41438b:	ss stc 
  41438d:	xchg   esp,eax
  41438e:	aad    0xdc
  414390:	cmc    
  414391:	jmp    0x8070:0xe1582720
  414398:	cwde   
  414399:	std    
  41439a:	adc    al,BYTE PTR [eax+0x44]
  41439d:	jmp    0xf560:0x9fe9bfcc
  4143a4:	(bad)  
  4143a5:	xor    al,0x70
  4143a7:	leave  
  4143a8:	pop    eax
  4143a9:	arpl   WORD PTR [ebx],bp
  4143ab:	push   es
  4143ac:	mov    cl,0x12
  4143ae:	adc    BYTE PTR [esi],0x47
  4143b1:	mov    bl,0xa0
  4143b3:	jecxz  0x414364
  4143b5:	loopne 0x41441a
  4143b7:	les    ebp,FWORD PTR [ebx]
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	fld    QWORD PTR [esi]
  4143e6:	add    al,0x9e
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x414394
  4143f1:	es pop ecx
  4143f3:	add    DWORD PTR [ebp-0x80],0xce342848
  4143fa:	int3   
  4143fb:	mov    edx,DWORD PTR [eax]
  4143fd:	jae    0x41439c
  4143ff:	jge    0x414416
  414401:	ret    
  414402:	jge    0x414435
  414404:	push   edi
  414405:	dec    eax
  414406:	cmp    BYTE PTR [esi-0x49],dl
  414409:	lds    ebx,FWORD PTR [edi]
  41440b:	inc    edi
  41440c:	pop    ss
  41440d:	jle    0x414461
  41440f:	psubusw mm2,QWORD PTR cs:[ebx-0x20]
  414414:	repz in al,dx
  414416:	and    dl,BYTE PTR [ebx-0xb86a174]
  41441c:	pusha  
  41441d:	outs   dx,DWORD PTR ds:[esi]
  41441e:	push   eax
  41441f:	aam    0xb3
  414421:	dec    ebx
  414422:	arpl   ax,bx
  414424:	int3   
  414425:	repz sub eax,0x54e4042a
  41442b:	cmp    BYTE PTR [si+0x54],0x4
  414430:	add    al,0x83
  414432:	inc    edx
  414433:	lock push edi
  414435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414436:	pop    es
  414437:	stos   BYTE PTR es:[edi],al
  414438:	pop    eax
  414439:	jmp    0xe025:0x96f94078
  414440:	cs xchg ebx,eax
  414442:	fld    TBYTE PTR [ecx+0x282de0ec]
  414448:	and    eax,DWORD PTR [ebx]
  41444a:	arpl   WORD PTR [edi-0x76],bx
  41444d:	jmp    0x414482
  41444f:	and    BYTE PTR [eax+eax*4-0x53a6920],al
  414456:	rol    DWORD PTR [eax+0xc58eb19],1
  41445c:	imul   ecx,DWORD PTR [edi-0x62],0x95b39ebb
  414463:	dec    eax
  414464:	(bad)  
  414465:	loope  0x4144aa
  414467:	pop    esp
  414468:	aad    0xb2
  41446a:	ficomp DWORD PTR [ecx]
  41446c:	push   ebp
  41446d:	jmp    0xe9465d89
  414472:	and    eax,0xfc292ad2
  414477:	xor    BYTE PTR [eax],bh
  414479:	xor    ebp,DWORD PTR [ebp+0x34]
  41447c:	adc    bh,BYTE PTR [ebx-0x3d3e57e9]
  414482:	inc    ecx
  414483:	xor    BYTE PTR [ecx-0x332e2aa9],bl
  414489:	add    al,0xeb
  41448b:	pop    ebp
  41448c:	stos   DWORD PTR es:[edi],eax
  41448d:	aaa    
  41448e:	push   esi
  41448f:	leave  
  414490:	stos   BYTE PTR es:[edi],al
  414491:	leave  
  414492:	bound  esi,QWORD PTR [edi]
  414494:	adc    ebp,DWORD PTR [edi]
  414496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414497:	pop    ds
  414498:	mov    dl,0x42
  41449a:	adc    BYTE PTR [ebp-0x238e920e],dl
  4144a0:	mov    bl,0xfb
  4144a2:	pop    eax
  4144a3:	stos   BYTE PTR es:[edi],al
  4144a4:	adc    DWORD PTR [edi],eax
  4144a6:	in     eax,0x87
  4144a8:	cmp    eax,0xba968e35
  4144ad:	sub    al,BYTE PTR [ebx+ebp*8+0x0]
  4144b1:	lea    ecx,[esi-0x1d]
  4144b4:	mov    cl,0xba
  4144b6:	pop    edi
  4144b8:	jge    0x414463
  4144ba:	add    DWORD PTR [edx-0x49a39d59],esp
  4144c0:	inc    ebp
  4144c1:	fs xchg esi,eax
  4144c3:	data16 adc BYTE PTR [ebp+0x57],ah
  4144c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144c8:	mov    BYTE PTR [esi+edi*1-0x73],al
  4144cc:	(bad)  
  4144cd:	nop
  4144ce:	add    eax,0xad555fac
  4144d3:	lds    edi,FWORD PTR [eax-0x20]
  4144d6:	jmp    DWORD PTR [esi-0x49cd146b]
  4144dc:	cwde   
  4144dd:	das    
  4144de:	pop    esp
  4144df:	jge    0x4144fa
  4144e1:	add    edx,eax
  4144e3:	lea    esp,[edx+0x36]
  4144e6:	adc    DWORD PTR ds:0x9eb9b3ed,ecx
  4144ec:	or     bl,BYTE PTR [esi+0x7a09dfe6]
  4144f2:	and    eax,0x2839d639
  4144f7:	sbb    ah,dh
  4144f9:	adc    dl,BYTE PTR [edi-0x57150198]
  4144ff:	out    dx,al
  414500:	mov    ecx,0x7d9aaff8
  414505:	sub    al,0xf9
  414507:	cmp    eax,0x74304ee6
  41450c:	inc    edi
  41450d:	fsub   QWORD PTR [eax+0x71]
  414510:	les    ebx,FWORD PTR [esi+0x4f42d926]
  414516:	mov    ds:0xbd31dced,al
  41451b:	add    dl,BYTE PTR [edi+0x3b]
  41451e:	mov    ah,0x7d
  414520:	mov    al,ds:0x9cc1f093
  414525:	xchg   esp,eax
  414526:	push   edx
  414527:	xchg   edi,eax
  414528:	or     eax,0xfb7389fa
  41452d:	outs   dx,DWORD PTR ds:[esi]
  41452e:	pop    ss
  41452f:	xor    eax,0xeeb1725a
  414534:	push   cs
  414535:	pop    edx
  414536:	xlat   BYTE PTR ds:[ebx]
  414537:	push   ss
  414538:	int3   
  414539:	in     al,0xab
  41453b:	test   eax,0xef28c05b
  414540:	mov    dh,0x87
  414542:	fisttp WORD PTR [edx]
  414544:	fs loop 0x41452e
  414547:	adc    eax,0x38970ad9
  41454c:	xchg   BYTE PTR [ebx],cl
  41454e:	test   eax,0x70fb3eef
  414553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414554:	inc    esi
  414555:	rcr    DWORD PTR [ecx+0x6c],cl
  414558:	dec    ecx
  414559:	sti    
  41455a:	cmp    bh,0x6d
  41455d:	add    BYTE PTR [ebx-0x24],al
  414560:	or     ebp,DWORD PTR [eax-0x2d480ff4]
  414566:	sbb    al,0xf9
  414568:	inc    edi
  414569:	mov    ds:0xc8619ea6,al
  41456e:	lahf   
  41456f:	gs das 
  414571:	jecxz  0x4145f0
  414573:	jne    0x4145d8
  414575:	(bad)  
  414576:	hlt    
  414577:	adc    eax,0xd50c6497
  41457c:	aas    
  41457d:	and    eax,0x7f01b4ee
  414582:	in     al,0xb
  414584:	dec    ecx
  414585:	or     al,0x87
  414587:	pop    edx
  414588:	adc    BYTE PTR [ebx],al
  41458a:	pop    ebx
  41458b:	fbstp  TBYTE PTR [esi]
  41458d:	xchg   esp,eax
  41458e:	mov    dl,0xee
  414590:	and    ah,BYTE PTR [eax]
  414592:	inc    esi
  414593:	push   0x7b
  414595:	enter  0xc54e,0x35
  414599:	outs   dx,BYTE PTR ds:[esi]
  41459a:	pop    ss
  41459b:	cmp    al,0xbb
  41459d:	repz pop edx
  41459f:	jle    0x414568
  4145a1:	neg    DWORD PTR [esi+0x65]
  4145a4:	sbb    eax,0xac79719d
  4145a9:	retf   
  4145aa:	xchg   esp,eax
  4145ab:	outs   dx,BYTE PTR ds:[esi]
  4145ac:	jno    0x41462a
  4145ae:	out    dx,eax
  4145af:	ins    DWORD PTR es:[edi],dx
  4145b0:	sbb    DWORD PTR [edi+0x3f377446],0xda6d3a8a
  4145ba:	mov    DWORD PTR [esi+edi*8],ebp
  4145bd:	and    al,0xf3
  4145bf:	mov    dh,0x4d
  4145c1:	ret    0x4bc4
  4145c4:	jmp    0xd9b581e6
  4145c9:	in     eax,dx
  4145ca:	outs   dx,DWORD PTR ds:[esi]
  4145cb:	inc    ebx
  4145cc:	add    ecx,DWORD PTR [ebp+0x2d]
  4145cf:	jmp    DWORD PTR [bp+si+0x47]
  4145d3:	ror    DWORD PTR [edx],cl
  4145d5:	jmp    0x91d8:0xd52f80a6
  4145dc:	mov    al,ds:0x72cf25f2
  4145e1:	out    dx,eax
  4145e2:	std    
  4145e3:	les    ebx,FWORD PTR [edi+0x5d0f26bc]
  4145e9:	push   0xc8ebbd8a
  4145ee:	add    ah,0xcd
  4145f1:	sbb    eax,0xa0769cc0
  4145f6:	pop    edi
  4145f7:	sbb    edx,DWORD PTR [ecx+0x16895d29]
  4145fd:	jb     0x4145b0
  4145ff:	cwde   
  414600:	xor    eax,0xed4c341c
  414605:	mov    ecx,0xdb63a8bc
  41460a:	push   ebp
  41460b:	stos   BYTE PTR es:[edi],al
  41460c:	push   ds
  41460d:	jno    0x4145d9
  41460f:	fld    DWORD PTR [edx+0x6]
  414612:	test   DWORD PTR [esi-0x18],eax
  414615:	jmp    0x4145df
  414617:	adc    eax,0x4f91bdc1
  41461c:	inc    ebx
  41461d:	or     al,0xc
  41461f:	retf   
  414620:	jmp    0x1ae3:0xeb478af8
  414627:	int    0xb3
  414629:	push   0x41389312
  41462e:	arpl   WORD PTR [ebx],di
  414630:	outs   dx,BYTE PTR ds:[esi]
  414631:	mov    ah,0x3f
  414633:	ins    BYTE PTR es:[edi],dx
  414634:	inc    ebp
  414635:	xor    esi,DWORD PTR [esi+esi*1-0x73]
  414639:	das    
  41463a:	outs   dx,BYTE PTR ds:[esi]
  41463b:	or     DWORD PTR ds:0x7358ac2b,ecx
  414641:	sub    BYTE PTR [ebx+0x6602bf3d],ah
  414647:	mov    ebp,0x647b571b
  41464c:	neg    DWORD PTR [eax+0x48e85672]
  414652:	add    BYTE PTR [ebp-0x51],bl
  414655:	add    al,0xe1
  414657:	ret    0xead
  41465a:	dec    ebp
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sbb    BYTE PTR [ecx],0x1
  414674:	jmp    0x414612
  414676:	scas   al,BYTE PTR es:[edi]
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x414635
  41467f:	cmc    
  414680:	mov    ss,WORD PTR [edx]
  414682:	aas    
  414683:	int    0xad
  414685:	loopne 0x4146e5
  414687:	mov    eax,DWORD PTR [eax+0x4d]
  41468a:	or     eax,0x9d2f90c5
  41468f:	xor    cl,BYTE PTR [esi]
  414691:	inc    ecx
  414692:	or     BYTE PTR [edx+0x3ba46a24],ah
  414698:	in     al,dx
  414699:	in     al,dx
  41469a:	and    al,0x2b
  41469c:	sbb    DWORD PTR [esp+ecx*1-0xda8adf],esi
  4146a3:	or     al,0x77
  4146a5:	sub    al,0x66
  4146a7:	lods   al,BYTE PTR ds:[esi]
  4146a8:	sar    BYTE PTR [ebx-0x42],1
  4146ab:	pop    esp
  4146ac:	aam    0xde
  4146ae:	push   edx
  4146af:	out    dx,al
  4146b0:	push   0x52
  4146b2:	sbb    cl,BYTE PTR [edi-0x63a38592]
  4146b8:	jmp    0xd4c1691c
  4146bd:	inc    ecx
  4146be:	cmp    BYTE PTR [ecx+esi*1+0x45],bl
  4146c2:	xor    DWORD PTR [ebp-0x4f],eax
  4146c5:	mov    bh,0x88
  4146c7:	and    dh,BYTE PTR [edx]
  4146c9:	inc    BYTE PTR [esi-0x7f]
  4146cc:	mov    ecx,0xe3e23063
  4146d1:	stc    
  4146d2:	leave  
  4146d3:	ins    BYTE PTR es:[edi],dx
  4146d4:	stc    
  4146d5:	mov    fs,esi
  4146d7:	xchg   edx,eax
  4146d8:	xchg   edi,eax
  4146d9:	mov    BYTE PTR [edi],al
  4146db:	adc    esi,DWORD PTR ds:0x6069d890
  4146e1:	adc    DWORD PTR [ecx-0x74267bbd],edx
  4146e7:	or     al,0x67
  4146e9:	dec    eax
  4146ea:	js     0x4146b0
  4146ec:	add    al,0xb6
  4146ee:	pop    edx
  4146ef:	push   esi
  4146f0:	add    cl,BYTE PTR [ebp-0x724b0849]
  4146f6:	cdq    
  4146f7:	and    edi,0xffffff80
  4146fa:	inc    ebp
  4146fb:	(bad)  
  4146fc:	les    esp,FWORD PTR [edi-0x41707b28]
  414702:	jnp    0x414749
  414704:	in     eax,dx
  414705:	dec    esp
  414706:	fld    TBYTE PTR [eax-0x3d]
  414709:	mov    dl,0x8
  41470b:	sub    ecx,eax
  41470d:	push   eax
  41470e:	scas   al,BYTE PTR es:[edi]
  41470f:	retf   
  414710:	imul   esp,edi,0x2979d101
  414716:	xor    DWORD PTR [eax+0x7f0668c9],ebp
  41471c:	xor    bh,BYTE PTR [ecx]
  41471e:	mov    DWORD PTR [edx],ecx
  414720:	inc    edi
  414721:	xchg   BYTE PTR [edx-0x1392b82a],cl
  414727:	inc    ebp
  414728:	jbe    0x4146db
  41472a:	add    DWORD PTR [ecx-0xa],ebp
  41472d:	mov    dh,0x86
  41472f:	test   al,0xdc
  414731:	xchg   edx,eax
  414732:	retf   0x39e
  414735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414737:	mov    DWORD PTR [ebp+0x7d],ebx
  41473a:	pop    ss
  41473b:	aam    0x55
  41473d:	dec    esp
  41473e:	mov    fs,WORD PTR [ebp-0x12]
  414741:	lods   al,BYTE PTR ds:[esi]
  414742:	int    0xd0
  414744:	js     0x4146ed
  414746:	test   DWORD PTR [eax],esi
  414748:	test   BYTE PTR [eax+0x56],dh
  41474b:	inc    bh
  41474d:	imul   ebp,DWORD PTR [esp],0x2d
  414751:	les    eax,FWORD PTR [ecx-0x3d]
  414754:	add    DWORD PTR [edi+0x45469c69],0x4
  41475b:	stos   DWORD PTR es:[edi],eax
  41475c:	inc    edi
  41475d:	stos   DWORD PTR es:[edi],eax
  41475e:	push   0xffffffd6
  414760:	ins    BYTE PTR es:[edi],dx
  414761:	add    cl,ah
  414763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414764:	mov    al,ds:0xe93c82ce
  414769:	ins    DWORD PTR es:[edi],dx
  41476a:	(bad)  
  41476b:	ins    BYTE PTR es:[edi],dx
  41476c:	in     al,dx
  41476d:	xchg   BYTE PTR [esi+0x33],cl
  414770:	(bad)
  414774:	(bad)  
  414775:	push   esp
  414776:	or     esi,DWORD PTR [ecx]
  414778:	loop   0x4147c0
  41477a:	fsubr  QWORD PTR [ecx-0x63]
  41477d:	iret   
  41477e:	jae    0x41476e
  414780:	inc    edi
  414781:	rcl    DWORD PTR [ecx],0xb2
  414784:	icebp  
  414785:	int3   
  414786:	adc    eax,0xb23c5adb
  41478b:	xchg   ecx,eax
  41478c:	adc    ah,BYTE PTR [eax]
  41478e:	ins    BYTE PTR es:[edi],dx
  41478f:	mov    edi,0xd61a274b
  414794:	popf   
  414795:	xor    DWORD PTR [ebp-0x1c31bc19],ebx
  41479b:	retf   
  41479c:	xchg   ecx,eax
  41479d:	xchg   esi,eax
  41479e:	mov    DWORD PTR [esi],ebx
  4147a0:	jp     0x414790
  4147a2:	add    eax,0xd1719e66
  4147a7:	and    edx,DWORD PTR [eax+ebp*1+0x3c09b0b7]
  4147ae:	ins    BYTE PTR es:[edi],dx
  4147af:	pop    edx
  4147b0:	push   esi
  4147b1:	in     al,dx
  4147b2:	jbe    0x414825
  4147b4:	call   DWORD PTR [edi+0x36535d44]
  4147ba:	fiadd  WORD PTR [ebx]
  4147bc:	mov    ebx,0x38c9c51c
  4147c1:	and    eax,0x44871dab
  4147c6:	ficom  WORD PTR [ebx]
  4147c8:	adc    eax,0x1f2707
  4147cd:	cld    
  4147ce:	jns    0x41477b
  4147d0:	pop    ecx
  4147d1:	dec    ebp
  4147d2:	daa    
  4147d3:	xor    BYTE PTR [eax-0x16b449bc],ah
  4147d9:	retf   
  4147da:	inc    edi
  4147db:	pop    ss
  4147dc:	imul   ecx,ebx,0xecc135f1
  4147e2:	cdq    
  4147e3:	fwait
  4147e4:	jb     0x414789
  4147e6:	fiadd  DWORD PTR [edi-0x12]
  4147e9:	push   ebp
  4147ea:	adc    dh,BYTE PTR [ebp+0x7e]
  4147ed:	jns    0x414845
  4147ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f0:	pop    es
  4147f1:	sbb    eax,0xb39f0f23
  4147f6:	aam    0xe5
  4147f8:	cmp    ch,BYTE PTR [edi-0x4f]
  4147fb:	adc    eax,0xa011b13e
  414800:	dec    ebx
  414801:	sti    
  414802:	icebp  
  414803:	pop    ss
  414804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414805:	push   ss
  414806:	retf   0x86c3
  414809:	cmp    al,0x53
  41480b:	rcr    DWORD PTR [edx+0x72bd3c08],1
  414811:	enter  0x9d82,0xe4
  414815:	stc    
  414816:	pop    esi
  414817:	mov    eax,ds:0x8ecf80cf
  41481c:	fst    QWORD PTR [edi+0x34]
  41481f:	mov    ecx,esi
  414821:	fwait
  414822:	adc    esi,DWORD PTR [edx]
  414824:	push   ebp
  414825:	pushf  
  414826:	(bad)  
  414827:	jb     0x414836
  414829:	push   0xffffffdf
  41482b:	sbb    ebx,edi
  41482d:	fisttp WORD PTR [edi]
  41482f:	iret   
  414830:	loop   0x41484b
  414832:	mov    bl,0xf7
  414834:	and    ebp,esp
  414836:	ins    DWORD PTR es:[edi],dx
  414837:	inc    eax
  414838:	aas    
  414839:	bound  esp,QWORD PTR [edi]
  41483b:	sub    ebx,ebp
  41483d:	mov    ds:0x526e00f6,eax
  414842:	cmp    dl,BYTE PTR [ecx+0x3b]
  414845:	(bad)  
  414846:	sar    dh,1
  414848:	stos   DWORD PTR es:[edi],eax
  414849:	test   BYTE PTR [ebx-0xf],dh
  41484c:	(bad)  
  41484d:	sbb    eax,eax
  41484f:	inc    edi
  414850:	jnp    0x4147ed
  414852:	and    DWORD PTR [edi],esi
  414854:	jae    0x41480e
  414856:	popf   
  414857:	cmp    DWORD PTR [edx-0x153f7509],ebx
  41485d:	bound  ebp,QWORD PTR [edx+ebp*1+0x39f51b10]
  414864:	xor    ch,BYTE PTR ds:0x181262cf
  41486a:	or     edi,esp
  41486c:	fld    DWORD PTR [edi-0x622d4e01]
  414872:	and    al,0x56
  414874:	popa   
  414875:	aad    0x64
  414877:	dec    ebx
  414878:	test   eax,0x4b50f8f8
  41487d:	jmp    0xfd58:0x2371272f
  414884:	or     eax,0xd437bca
  414889:	mov    dh,0x3
  41488b:	cs xlat BYTE PTR fs:[ebx]
  41488e:	cdq    
  41488f:	adc    cl,BYTE PTR ds:0x8890a273
  414895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414896:	(bad)  
  414898:	xchg   bh,al
  41489a:	pop    ecx
  41489b:	ins    DWORD PTR es:[edi],dx
  41489c:	add    BYTE PTR [ebp+0x37a6a3fc],0xc7
  4148a3:	or     eax,0xed0e4e50
  4148a8:	aaa    
  4148a9:	in     eax,dx
  4148aa:	mov    bh,0x27
  4148ac:	add    bl,bh
  4148ae:	jg     0x414849
  4148b0:	and    al,0x80
  4148b2:	call   0x909a560b
  4148b7:	mov    ds:0x54332b79,eax
  4148bc:	fdivr  QWORD PTR [eax-0xe]
  4148bf:	xchg   ecx,eax
  4148c0:	aas    
  4148c1:	rol    edx,1
  4148c3:	xchg   ebp,eax
  4148c4:	mov    ecx,0x292da62b
  4148c9:	mov    al,ah
  4148cb:	adc    eax,0x7d0ca265
  4148d0:	fistp  WORD PTR [ebx-0x7]
  4148d3:	pop    edi
  4148d4:	int3   
  4148d5:	ror    DWORD PTR [esi+ecx*2-0x135e18c4],1
  4148dc:	ret    
  4148dd:	xor    eax,0xc9036976
  4148e2:	pcmpgtw mm4,QWORD PTR [ecx]
  4148e5:	xchg   esp,eax
  4148e6:	loop   0x4148a8
  4148e8:	jge    0x41491d
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x3b27854b]
  414921:	scas   eax,DWORD PTR es:[edi]
  414922:	popf   
  414923:	add    BYTE PTR [ebx],bl
  414925:	or     al,0x7f
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4148e3
  41492d:	pop    es
  41492e:	ds mov dh,0xc2
  414931:	adc    DWORD PTR [esi+0x514c3015],ecx
  414937:	adc    ecx,DWORD PTR [eax-0x1fae4f63]
  41493d:	push   ss
  41493e:	das    
  41493f:	or     dl,ch
  414941:	sub    eax,esp
  414943:	mov    esi,0xdbb7bece
  414948:	pop    es
  414949:	adc    bl,bl
  41494b:	xor    DWORD PTR [ecx-0x7a2fd036],edx
  414951:	push   ds
  414952:	shr    DWORD PTR [edi],1
  414954:	adc    esi,DWORD PTR [esi+0x76]
  414957:	lock loope 0x4148ea
  41495a:	inc    edi
  41495b:	lahf   
  41495c:	push   si
  41495e:	and    al,0xc9
  414960:	les    esp,FWORD PTR [ebx+0x2db1406b]
  414966:	jbe    0x4148e8
  414968:	adc    DWORD PTR [eax],edi
  41496a:	fisubr WORD PTR [esp+edx*2]
  41496d:	dec    edx
  41496e:	inc    edi
  41496f:	ja     0x4149a9
  414971:	sbb    BYTE PTR [eax-0x7e5efe3b],cl
  414977:	add    DWORD PTR [edi-0x21a9f80c],ebx
  41497d:	push   edi
  41497e:	push   ebp
  41497f:	fisub  DWORD PTR [esi]
  414981:	ret    0xab79
  414984:	sub    esi,edi
  414986:	daa    
  414987:	int    0x6f
  414989:	xchg   edx,eax
  41498a:	std    
  41498b:	mov    al,0x89
  41498d:	pop    eax
  41498e:	into   
  41498f:	pop    ds
  414990:	sbb    edx,DWORD PTR [ebp-0xd]
  414993:	in     eax,0xf3
  414995:	mov    esp,0x43c377e7
  41499a:	rcl    BYTE PTR [ebp-0x55],cl
  41499d:	dec    edi
  41499e:	mov    edx,0xa708d639
  4149a3:	jp     0x4149de
  4149a5:	inc    ecx
  4149a6:	or     ch,BYTE PTR [ecx+0x4f2c9184]
  4149ac:	iret   
  4149ad:	dec    ebp
  4149ae:	pop    ecx
  4149af:	dec    ebp
  4149b0:	inc    esp
  4149b1:	sub    DWORD PTR [ecx-0x53],edx
  4149b4:	(bad)  
  4149b5:	xlat   BYTE PTR ds:[ebx]
  4149b6:	xor    edi,edi
  4149b8:	test   al,0xe8
  4149ba:	sub    ebx,edx
  4149bc:	add    bl,BYTE PTR [ebp-0x1b99ef29]
  4149c2:	ja     0x4149c5
  4149c4:	jae    0x4149f0
  4149c6:	sahf   
  4149c7:	fdivr  QWORD PTR [ebx-0x21]
  4149ca:	mov    edx,0xb13f14e6
  4149cf:	or     esi,DWORD PTR [ebp-0x11]
  4149d2:	push   ecx
  4149d3:	neg    ecx
  4149d5:	mov    dl,0x71
  4149d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d8:	mov    esi,0x561b550a
  4149dd:	and    ah,0x8
  4149e0:	lock pop ss
  4149e2:	stos   DWORD PTR es:[edi],eax
  4149e3:	bound  ebp,QWORD PTR [eax]
  4149e5:	(bad)  
  4149e6:	jg     0x414970
  4149e8:	cli    
  4149e9:	repnz cwde 
  4149eb:	out    0x6d,eax
  4149ed:	sti    
  4149ee:	and    eax,0x25851c30
  4149f3:	mov    ebx,0x62896d8d
  4149f8:	je     0x414a72
  4149fa:	pop    esp
  4149fb:	or     ecx,DWORD PTR [ecx-0x65b52a36]
  414a01:	test   DWORD PTR [eax],esp
  414a03:	ins    BYTE PTR es:[edi],dx
  414a04:	sar    DWORD PTR [ebx-0x297745c7],cl
  414a0a:	outs   dx,DWORD PTR ds:[esi]
  414a0b:	cmp    al,0x30
  414a0d:	dec    ebp
  414a0e:	(bad)  
  414a0f:	sbb    ebx,edx
  414a11:	(bad)  
  414a12:	xchg   ecx,eax
  414a13:	mov    DWORD PTR [ebp-0x18],0xe2bde255
  414a1a:	mov    ecx,0xab0d8df9
  414a1f:	inc    esp
  414a20:	call   0x88f29916
  414a25:	or     DWORD PTR [ecx],0x18
  414a28:	lds    ecx,FWORD PTR [eax]
  414a2a:	xor    ebx,ebp
  414a2c:	ss jb  0x414a86
  414a2f:	fisttp DWORD PTR [ecx]
  414a31:	push   ebp
  414a32:	inc    ebx
  414a33:	test   eax,0x4ad8b04
  414a38:	and    BYTE PTR [edi-0xa],bl
  414a3b:	mov    ah,0x84
  414a3d:	dec    ecx
  414a3e:	mov    dh,BYTE PTR [ecx-0x240ddf93]
  414a44:	loop   0x414aa9
  414a46:	mov    ebx,0xfb8dc437
  414a4b:	mov    dh,0xd6
  414a4d:	shl    DWORD PTR [ebx],0xd9
  414a50:	push   0x8901484e
  414a55:	jge    0x414aa2
  414a57:	imul   eax,esp,0xffffffb7
  414a5a:	icebp  
  414a5b:	(bad)  
  414a5c:	fcom   QWORD PTR [ebx]
  414a5e:	aas    
  414a5f:	(bad)  
  414a60:	mov    edx,cs
  414a62:	loope  0x414ae0
  414a64:	cmp    bh,dl
  414a66:	cmp    eax,0xe8951b01
  414a6b:	dec    eax
  414a6c:	mov    ds:0x6acd26c4,al
  414a71:	pop    ds
  414a72:	bound  ebx,QWORD PTR [edx-0x51]
  414a75:	dec    eax
  414a76:	je     0x414a50
  414a78:	fld    QWORD PTR [ebx-0x5b]
  414a7b:	push   eax
  414a7c:	(bad)  
  414a7d:	pushf  
  414a7e:	rcr    ecx,0xa9
  414a81:	and    ecx,DWORD PTR [edi+ebp*2-0x55471fa1]
  414a88:	jmp    0x8016:0x1af1324d
  414a8f:	mov    esi,0x27f0d9c1
  414a94:	lahf   
  414a95:	sti    
  414a96:	xor    BYTE PTR [ebp+0x2],cl
  414a99:	and    eax,0x7deed725
  414a9e:	gs jno 0x414a68
  414aa1:	das    
  414aa2:	test   DWORD PTR [esi-0x44],edi
  414aa5:	push   ebp
  414aa6:	jae    0x414a75
  414aa8:	adc    ebp,esi
  414aaa:	sbb    ecx,DWORD PTR [ebp-0x57e3d6ad]
  414ab0:	jl     0x414a3f
  414ab2:	jae    0x414afb
  414ab4:	shr    BYTE PTR [edx+0xfe6d194],1
  414aba:	jmp    0x2caa:0xc227841b
  414ac1:	push   esp
  414ac2:	out    0x31,eax
  414ac4:	shr    DWORD PTR [ecx+0xde15603],1
  414aca:	es xor cl,bl
  414acd:	repnz (bad) 
  414acf:	cmp    ebx,DWORD PTR [ebp+0x2fe4e7f8]
  414ad5:	adc    DWORD PTR [edi],ebp
  414ad7:	pusha  
  414ad8:	loope  0x414aca
  414ada:	sbb    cl,BYTE PTR [esi]
  414adc:	int    0xd4
  414ade:	in     eax,dx
  414adf:	inc    ecx
  414ae0:	jp     0x414aab
  414ae2:	mov    bh,0x42
  414ae4:	mov    al,ds:0x9a636455
  414ae9:	jl     0x414b44
  414aeb:	xchg   ebx,eax
  414aec:	mov    bh,0x95
  414aee:	repz push ebx
  414af0:	push   0x4297d6ef
  414af5:	repnz ror DWORD PTR [edi-0x41],0xb4
  414afa:	fdivr  QWORD PTR [edi-0x1c]
  414afd:	cwde   
  414afe:	mov    ecx,0x6581003d
  414b03:	inc    edx
  414b04:	out    0x5a,eax
  414b06:	test   al,0x37
  414b08:	pop    esi
  414b09:	sahf   
  414b0a:	test   al,0xf2
  414b0c:	push   ebp
  414b0d:	fwait
  414b0e:	inc    eax
  414b0f:	jo     0x414ace
  414b11:	call   0xabe4203b
  414b16:	cwde   
  414b17:	xchg   ebp,eax
  414b18:	je     0x414b52
  414b1a:	jo     0x414b5c
  414b1c:	in     eax,0xed
  414b1e:	sub    al,0xe6
  414b20:	nop
  414b21:	dec    edi
  414b22:	push   ebp
  414b23:	lods   al,BYTE PTR ds:[esi]
  414b24:	jle    0x414b60
  414b26:	dec    edx
  414b27:	xchg   esi,eax
  414b28:	ret    
  414b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b2a:	cmp    DWORD PTR [ebp+0x3d9c2f88],esi
  414b30:	cmp    bh,BYTE PTR [ebx]
  414b32:	retf   
  414b33:	fnstsw WORD PTR [edx+ecx*2+0x34]
  414b37:	sbb    BYTE PTR [ecx-0xa],ch
  414b3a:	ins    BYTE PTR es:[edi],dx
  414b3b:	xlat   BYTE PTR ds:[ebx]
  414b3c:	ror    bh,0x48
  414b3f:	xor    DWORD PTR [ebp+0x4f053510],eax
  414b45:	les    ax,DWORD PTR [edx-0x4]
  414b49:	inc    eax
  414b4a:	push   edi
  414b4b:	loop   0x414b5d
  414b4d:	sbb    DWORD PTR [eax],ebx
  414b4f:	inc    ebx
  414b50:	loope  0x414ba9
  414b52:	loope  0x414b97
  414b54:	in     eax,0xc6
  414b56:	jge    0x414b64
  414b58:	aam    0x20
  414b5a:	ja     0x414b8a
  414b5c:	dec    ecx
  414b5d:	std    
  414b5e:	mov    cl,0x3a
  414b60:	sti    
  414b61:	mov    BYTE PTR [esp+edx*1],ch
  414b64:	push   edi
  414b65:	int    0x5c
  414b67:	and    BYTE PTR [edi],dl
  414b69:	sbb    al,0xc4
  414b6b:	push   esi
  414b6c:	bound  ecx,QWORD PTR [ebp-0x4d]
  414b6f:	mov    ecx,0x55cee7d
  414b74:	(bad)  
  414b75:	outs   dx,DWORD PTR ds:[esi]
  414b76:	pushf  
  414b77:	push   ebx
  414b78:	mov    bl,0x91
  414b7a:	jge    0x414b43
  414b7c:	xlat   BYTE PTR fs:[ebx]
  414b7e:	push   es
  414b7f:	(bad)  
  414b81:	dec    edi
  414b82:	cmc    
  414b83:	bound  eax,QWORD PTR [edi+0x34]
  414b86:	xor    bh,BYTE PTR [esi+0x918da87]
  414b8c:	xchg   BYTE PTR [eax+0x5a33375],ch
  414b92:	mov    esi,0x1a4d220f
  414b97:	xor    edx,eax
  414b99:	add    edx,ecx
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	mov    DWORD PTR [edx+0x12802ee1],eax
  414bb7:	jg     0x414c31
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	loope  0x414c01
  414bbf:	add    eax,esp
  414bc1:	out    dx,al
  414bc2:	ds call 0x58bcc65d
  414bc8:	jnp    0x414c12
  414bca:	aad    0x85
  414bcc:	fstp   QWORD PTR ds:0x98b1f22b
  414bd2:	aaa    
  414bd3:	cmp    ebx,eax
  414bd5:	jno    0x414bbe
  414bd7:	xchg   BYTE PTR [ecx+0x2f003109],al
  414bdd:	push   eax
  414bde:	imul   ebp,DWORD PTR [ebx+0x43aef9ce],0x55
  414be5:	mov    ?,eax
  414be7:	(bad)  
  414be8:	aas    
  414be9:	rol    DWORD PTR [ebp-0x498e7ac9],0x77
  414bf0:	and    dh,BYTE PTR [edx]
  414bf2:	adc    eax,ecx
  414bf4:	push   ds
  414bf5:	dec    esp
  414bf6:	adc    al,0x2f
  414bf8:	or     al,0xbb
  414bfa:	(bad)  
  414bfb:	push   eax
  414bfc:	push   0x43
  414bfe:	lods   eax,DWORD PTR ds:[esi]
  414bff:	cs pop edx
  414c01:	or     BYTE PTR [ecx],dh
  414c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c04:	out    0xb6,al
  414c06:	test   al,cl
  414c08:	jp     0x414b8d
  414c0a:	test   BYTE PTR [edx-0x42],0x5
  414c0e:	push   0x80c25b14
  414c13:	rcl    BYTE PTR [eax+0x2e58e2b5],cl
  414c19:	cmp    BYTE PTR [ebx+0xf],0x87
  414c1d:	scas   al,BYTE PTR es:[edi]
  414c1e:	xchg   edx,eax
  414c1f:	test   eax,0x75f168b8
  414c24:	stos   DWORD PTR es:[edi],eax
  414c25:	jle    0x414baa
  414c27:	jnp    0x414c07
  414c29:	mov    ds:0xf0322281,eax
  414c2e:	xor    al,0x12
  414c30:	push   ecx
  414c31:	jecxz  0x414c7e
  414c33:	hlt    
  414c34:	or     cl,al
  414c36:	fist   DWORD PTR [esi+0x4a]
  414c39:	xchg   edi,eax
  414c3a:	cdq    
  414c3b:	(bad)  
  414c3c:	sub    esi,DWORD PTR [eax]
  414c3e:	and    bl,bl
  414c40:	pop    edx
  414c41:	pop    ss
  414c42:	faddp  st(4),st
  414c44:	xchg   ecx,eax
  414c45:	jb     0x414c9b
  414c47:	mov    edi,0xae8321fa
  414c4c:	sbb    BYTE PTR [ebp-0x46bf3da9],ah
  414c52:	and    esp,DWORD PTR [ecx-0x63]
  414c55:	cmp    DWORD PTR [edx+0x55],ebx
  414c58:	(bad)  
  414c5a:	xchg   ebx,eax
  414c5b:	aam    0xd2
  414c5d:	js     0x414c83
  414c5f:	daa    
  414c60:	imul   eax,ebx,0x50
  414c63:	sbb    DWORD PTR [ecx],eax
  414c65:	push   ss
  414c66:	inc    edi
  414c67:	push   ds
  414c68:	pop    edi
  414c69:	push   edi
  414c6a:	lock cmp al,0xb2
  414c6d:	imul   edx,DWORD PTR [esi-0x6337b825],0x8f53542d
  414c77:	retf   
  414c78:	xchg   ebp,eax
  414c79:	xchg   esp,eax
  414c7a:	add    edi,DWORD PTR [edi-0x73e725c4]
  414c80:	dec    edx
  414c81:	jmp    DWORD PTR [ebx]
  414c83:	and    edi,DWORD PTR [ebx-0x1f1cb6c9]
  414c89:	mov    ebp,0xb721393f
  414c8e:	xor    DWORD PTR [edi-0x51],0x10
  414c92:	in     eax,0x83
  414c94:	inc    esi
  414c95:	mov    al,ds:0xac4fa73
  414c9a:	cmp    eax,0xdc090f3a
  414c9f:	xchg   edx,eax
  414ca0:	fsub   DWORD PTR [ecx+eiz*4-0x1]
  414ca4:	out    0x73,eax
  414ca6:	fwait
  414ca7:	dec    esi
  414ca8:	lea    esi,[eax]
  414caa:	fidiv  DWORD PTR [edx-0x264c2ce5]
  414cb0:	outs   dx,BYTE PTR ds:[esi]
  414cb1:	mov    eax,ds:0xb6848710
  414cb6:	fwait
  414cb7:	mov    ds:0x83c0d1eb,eax
  414cbc:	add    DWORD PTR [ebx+0x30],ecx
  414cbf:	fstp   QWORD PTR [ecx+0x66]
  414cc2:	mov    eax,0xf9a7297f
  414cc7:	out    dx,al
  414cc8:	push   edx
  414cc9:	and    dh,al
  414ccb:	scas   eax,DWORD PTR es:[edi]
  414ccc:	(bad)  [eax]
  414cce:	repz sbb ebx,edx
  414cd1:	pop    edi
  414cd2:	xchg   ebp,eax
  414cd3:	pop    esi
  414cd4:	mov    ecx,0x705ccb82
  414cd9:	cwde   
  414cda:	cmp    eax,0x1d
  414cdd:	pop    edx
  414cde:	dec    eax
  414cdf:	pop    esp
  414ce0:	(bad)  [ebx+0x74c315f6]
  414ce6:	jmp    0x59493031
  414ceb:	(bad)  
  414cec:	push   eax
  414ced:	xchg   esi,eax
  414cee:	add    eax,DWORD PTR [edx-0x35eb96de]
  414cf4:	ja     0x414d15
  414cf6:	lods   eax,DWORD PTR ds:[esi]
  414cf7:	sar    edi,1
  414cf9:	or     al,0xbc
  414cfb:	mov    edx,0xa851b9b
  414d00:	sti    
  414d01:	(bad)  
  414d02:	in     al,dx
  414d03:	ret    0x4293
  414d06:	push   ds
  414d07:	push   ebp
  414d08:	rcl    DWORD PTR [ebx],1
  414d0a:	mov    dl,0x7c
  414d0c:	add    al,0xdb
  414d0e:	outs   dx,DWORD PTR ds:[esi]
  414d0f:	mov    bh,0x82
  414d11:	push   0x4a
  414d13:	into   
  414d14:	jbe    0x414cdf
  414d16:	ficomp DWORD PTR [esi+0x1e6b2d16]
  414d1c:	scas   al,BYTE PTR es:[edi]
  414d1d:	mov    eax,ds:0xb8ac8a55
  414d22:	ss sbb al,0x1c
  414d25:	jns    0x414d71
  414d27:	dec    edx
  414d28:	mov    al,ds:0xdd91d602
  414d2d:	sahf   
  414d2e:	cmp    BYTE PTR [edi-0x50],0xd7
  414d32:	mov    cl,0x1e
  414d34:	es adc al,0x2d
  414d37:	mov    ds:0x9b8f7984,eax
  414d3c:	aaa    
  414d3d:	push   esi
  414d3e:	and    esp,esp
  414d40:	pop    eax
  414d41:	dec    edx
  414d42:	jbe    0x414d15
  414d44:	push   es
  414d45:	sbb    eax,ebx
  414d47:	js     0x414d0b
  414d49:	pop    ss
  414d4a:	mov    ah,BYTE PTR [eax]
  414d4c:	jp     0x414d95
  414d4e:	and    al,0xf9
  414d50:	mov    dl,0x51
  414d52:	jge    0x414cfd
  414d54:	test   eax,0x74c1337e
  414d59:	dec    ebx
  414d5a:	xchg   edx,eax
  414d5b:	shl    BYTE PTR [edx-0x4fe81e38],1
  414d61:	cmp    BYTE PTR [ebp-0x5b1bab32],ch
  414d67:	adc    al,0xe1
  414d69:	rol    ecx,1
  414d6b:	sbb    DWORD PTR [edi-0xb],edi
  414d6e:	gs scas eax,DWORD PTR es:[edi]
  414d70:	iret   
  414d71:	adc    DWORD PTR [eax],ebx
  414d73:	mov    edi,0x93b02d0b
  414d78:	xchg   ecx,eax
  414d79:	in     al,0x71
  414d7b:	int3   
  414d7c:	aaa    
  414d7d:	and    DWORD PTR [edi],esp
  414d7f:	and    BYTE PTR [ebx],dh
  414d81:	sbb    eax,ebx
  414d83:	pop    esi
  414d84:	imul   ebx,DWORD PTR [edi-0x69],0xffffffc5
  414d88:	push   cs
  414d89:	(bad)  
  414d8a:	fstp   QWORD PTR [ecx+edi*8-0x17b9e87b]
  414d91:	or     bh,cl
  414d93:	or     ch,BYTE PTR [ebp+0x5c]
  414d96:	inc    eax
  414d97:	dec    ecx
  414d98:	ja     0x414df3
  414d9a:	(bad)  
  414d9b:	adc    edx,DWORD PTR [ecx+ecx*4-0x69b199bd]
  414da2:	daa    
  414da3:	repz or bh,BYTE PTR [edx+0x62]
  414da7:	out    0xcf,eax
  414da9:	repz cli 
  414dab:	(bad)  [eax+0x50]
  414dae:	inc    esp
  414daf:	lock aaa 
  414db1:	jmp    0x2aed:0x7de9960d
  414db8:	and    bh,bh
  414dba:	jl     0x414d60
  414dbc:	sub    al,0x88
  414dbe:	addr16 dec ebp
  414dc0:	dec    esi
  414dc1:	push   ecx
  414dc2:	lock shl BYTE PTR [eax+eiz*2-0xa],1
  414dc7:	ss mov ecx,0x338c0c47
  414dcd:	mov    esi,0xce3987d4
  414dd2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414dd4:	xor    BYTE PTR [edi+0x6],0x58
  414dd8:	dec    ebp
  414dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dda:	xchg   ebx,eax
  414ddb:	mov    al,ds:0x649f69e2
  414de0:	pop    ebx
  414de1:	or     BYTE PTR [edi],0x9e
  414de4:	pop    esp
  414de5:	int3   
  414de6:	sbb    eax,0x1596c3ea
  414deb:	test   bl,0xa0
  414dee:	out    0xb8,eax
  414df0:	test   al,0x8c
  414df2:	sub    BYTE PTR [esi+0x1d889da4],cl
  414df8:	das    
  414df9:	or     al,BYTE PTR [edx+esi*4+0x25]
  414dfd:	popa   
  414dfe:	sub    edi,ebx
  414e00:	(bad)  
  414e01:	out    0xe2,al
  414e03:	inc    ebx
  414e04:	jb     0x414dd3
  414e06:	fcomp  st(0)
  414e08:	or     BYTE PTR [esi],dl
  414e0a:	(bad)  
  414e0c:	scas   al,BYTE PTR es:[edi]
  414e0d:	fnsave [edi-0x31e5754d]
  414e13:	push   edx
  414e14:	fcmovbe st,st(6)
  414e16:	fsubr  st(4),st
  414e18:	iret   
  414e19:	sbb    ch,BYTE PTR [ecx]
  414e1b:	in     eax,dx
  414e1c:	jne    0x414e16
  414e1e:	retf   0x3fc4
  414e21:	popa   
  414e22:	out    dx,al
  414e23:	pop    es
  414e24:	mov    ds:0xf5783d0,eax
  414e29:	xchg   BYTE PTR [esi-0x54],ah
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a815
  414e44:	xor    DWORD PTR ds:0x42a791,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7d9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a861,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a861
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a861,eax
  414e70:	cmp    DWORD PTR ds:0x42a861,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a861,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a86d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a821
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a819,0x42a851
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a821,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a855,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a795
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a865,0x42a785
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7d1,0x42a861
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a821,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a789,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a81d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a81d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a81d,edi
  414f60:	cmp    DWORD PTR ds:0x42a81d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a81d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a829
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a81d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a81d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a81d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7d5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7e9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a78d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a865,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a869,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7d9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a825,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a865,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a869,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a869
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a869,ecx
  415032:	cmp    DWORD PTR ds:0x42a869,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a869,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a891
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a811,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a8a5,0x42a7d5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7e1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7e5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a899,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a899
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a899,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a899,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a899,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a85d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a86d
  4150eb:	mov    DWORD PTR ds:0x42a85d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7d1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a811
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a895,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a895
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a895,ecx
  415120:	cmp    DWORD PTR ds:0x42a895,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a895,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a77d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a77d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a77d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a77d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a9bf
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a77d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a77d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a77d,ecx
  415190:	cmp    DWORD PTR ds:0x42a77d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a7a1
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7e1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7e1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7e1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7e1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7e1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7e1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7e1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7e1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7e9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7e9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7e9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7e9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7e9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a795
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7e9,0x42a8a1
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a891,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a861,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a859,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a785,0x42a89d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a85d,0x42a779
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7ed,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7ed
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7ed,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7ed,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7ed,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a869
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a7a1,0x10
  415329:	cmp    DWORD PTR ds:0x42a7a1,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a7a1,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a7a1,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a7a1
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a7a1,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a7a1
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a7a1,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a811,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a811
  415393:	inc    eax
  415394:	mov    ds:0x42a811,eax
  415399:	cmp    DWORD PTR ds:0x42a811,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a811,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a779
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7dd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a851,0x0
  4153ed:	mov    eax,ds:0x42a851
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a851,eax
  4153f8:	cmp    DWORD PTR ds:0x42a851,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a952
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a851,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a851
  41542b:	inc    eax
  41542c:	mov    ds:0x42a851,eax
  415431:	cmp    DWORD PTR ds:0x42a851,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a781,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a8ad,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a8ad,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a8ad,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a789
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a8ad,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a8ad
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a8ad,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a8ad
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a8ad,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7d9
  4154c7:	and    edx,DWORD PTR ds:0x42a86d
  4154cd:	mov    DWORD PTR ds:0x42a7d9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a7a1,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a855,0x42a811
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a855,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7e5,0x42a825
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a815,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a781,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7dd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7dd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7dd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7dd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a865
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7dd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a89d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a89d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a89d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a89d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a89d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	pop    ds
  41595f:	stos   DWORD PTR es:[edi],eax
  415960:	push   eax
  415961:	or     eax,0x787f106d
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415970
  41596b:	jb     0x415951
  41596d:	inc    esi
  41596e:	push   ecx
  41596f:	sbb    edi,DWORD PTR [esi]
  415971:	jno    0x415946
  415973:	mov    edi,0xfb838f16
  415978:	mov    esp,0xd56ac1fb
  41597d:	rol    BYTE PTR [ecx-0x7f002408],0xb1
  415984:	lea    edx,ds:0xaed89841
  41598a:	xchg   ebx,eax
  41598b:	loop   0x4159de
  41598d:	loopne 0x41593c
  41598f:	jle    0x41595a
  415991:	js     0x41594f
  415993:	or     al,0x82
  415995:	cli    
  415996:	xchg   esi,eax
  415997:	mov    ebp,0x8c7f4ed
  41599c:	adc    DWORD PTR [ecx+0x1c1d035f],esp
  4159a2:	pop    ebx
  4159a3:	jmp    0x40d12bf3
  4159a8:	mov    bl,cl
  4159aa:	into   
  4159ab:	cmp    eax,0xa4c1f7f0
  4159b0:	pop    ecx
  4159b1:	ss repz (bad) 
  4159b4:	sub    eax,0x6b7c7c43
  4159b9:	leave  
  4159ba:	adc    eax,0xc83a202
  4159bf:	inc    esi
  4159c0:	mov    dh,ch
  4159c2:	push   eax
  4159c3:	mov    dl,0x85
  4159c5:	or     esi,eax
  4159c7:	fist   WORD PTR [ebp-0xe11e3c3]
  4159cd:	mov    ebp,0x9e92952e
  4159d2:	or     eax,0x6efd9314
  4159d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d8:	jg     0x415999
  4159da:	repnz in eax,dx
  4159dc:	cmc    
  4159dd:	adc    esi,esi
  4159df:	pop    es
  4159e0:	js     0x415a0c
  4159e2:	dec    ebx
  4159e3:	pop    ebp
  4159e4:	mov    cl,ch
  4159e6:	shr    bl,0x1b
  4159e9:	gs das 
  4159eb:	xchg   ebx,eax
  4159ec:	dec    esp
  4159ed:	ret    
  4159ee:	inc    edx
  4159ef:	cs pop ds
  4159f1:	stos   BYTE PTR es:[edi],al
  4159f2:	das    
  4159f3:	push   0x73
  4159f5:	call   0x8421:0x43ac6f96
  4159fc:	mov    WORD PTR [eax-0x5501d87e],fs
  415a02:	(bad)
  415a05:	pop    ds
  415a06:	adc    DWORD PTR [ecx+0x6],0xeeb6029f
  415a0d:	mov    bl,cl
  415a0f:	pushf  
  415a10:	or     al,BYTE PTR [edx]
  415a12:	out    dx,eax
  415a13:	pop    ecx
  415a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a15:	das    
  415a16:	imul   esi,DWORD PTR [ebx+0x215eb5ff],0x7dffffca
  415a20:	xchg   esp,eax
  415a21:	ins    DWORD PTR es:[edi],dx
  415a22:	mov    esi,0x5762ef95
  415a27:	out    0x11,eax
  415a29:	ds (bad) 
  415a2c:	jbe    0x415a83
  415a2e:	pop    ecx
  415a2f:	push   eax
  415a30:	mov    eax,0x7aa3b227
  415a35:	or     BYTE PTR [ecx-0x575acc91],ah
  415a3b:	xchg   ecx,eax
  415a3c:	xchg   esi,eax
  415a3d:	mov    ch,BYTE PTR [ecx-0x1524d6a]
  415a43:	loop   0x415a5b
  415a45:	retf   0x9a61
  415a48:	inc    eax
  415a49:	fwait
  415a4a:	mov    eax,0x916bfe89
  415a4f:	xchg   esp,eax
  415a50:	jmp    0x3e39:0x6ad298b
  415a57:	adc    al,0xc5
  415a59:	enter  0xedb,0x41
  415a5d:	sbb    BYTE PTR [eax+0x5ee76f42],dl
  415a63:	fild   DWORD PTR [ebx]
  415a65:	mov    al,BYTE PTR [esi-0x23]
  415a68:	imul   ecx,edx,0x2b
  415a6b:	jns    0x415a44
  415a6d:	adc    BYTE PTR [edx-0x57],0x25
  415a71:	push   cs
  415a72:	aas    
  415a73:	add    BYTE PTR [edx+0x6d],bh
  415a76:	inc    ebp
  415a77:	mov    ebp,0x2d84edfc
  415a7c:	mov    ds:0xa1b91eda,al
  415a81:	pop    es
  415a82:	addr16 sbb ebx,esp
  415a85:	out    0x75,eax
  415a87:	hlt    
  415a88:	mov    DWORD PTR [esi],esp
  415a8a:	icebp  
  415a8b:	mov    bl,0xf
  415a8d:	add    cl,BYTE PTR [esi]
  415a8f:	inc    ebx
  415a90:	sbb    al,0x21
  415a92:	xlat   BYTE PTR ds:[ebx]
  415a93:	mov    ecx,0x84726d3c
  415a98:	and    al,0x65
  415a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a9b:	popa   
  415a9c:	fcom   QWORD PTR [ebp*2-0x3fea82cc]
  415aa3:	xchg   edx,eax
  415aa4:	hlt    
  415aa5:	pusha  
  415aa6:	mov    bh,0xa5
  415aa8:	jnp    0x415a75
  415aaa:	xchg   edx,eax
  415aab:	mov    edi,0xd54b7442
  415ab0:	out    0xd2,eax
  415ab2:	mov    DWORD PTR [esi],edi
  415ab4:	fisttp DWORD PTR [ecx-0x81c86da]
  415aba:	stc    
  415abb:	xchg   esp,eax
  415abc:	jbe    0x415a50
  415abe:	adc    DWORD PTR [edx+0x6c11ecca],esi
  415ac4:	pop    es
  415ac5:	sbb    ax,0xb714
  415ac9:	pop    es
  415aca:	pop    edi
  415acb:	aaa    
  415acc:	pop    edx
  415acd:	bound  eax,QWORD PTR ds:0xd77eb07d
  415ad3:	push   0x54
  415ad5:	xchg   ebx,eax
  415ad6:	push   DWORD PTR [ecx]
  415ad8:	in     al,0x33
  415ada:	xchg   esp,eax
  415adb:	lods   al,BYTE PTR ds:[esi]
  415adc:	mov    edi,0x4ffa379c
  415ae1:	inc    esp
  415ae2:	cmp    eax,DWORD PTR [edi+edi*8-0x13d0575d]
  415ae9:	mov    bl,0xd0
  415aeb:	add    ah,BYTE PTR [ecx-0x150218ce]
  415af1:	in     al,0xcd
  415af3:	mov    dl,0x17
  415af5:	sbb    DWORD PTR [eax+0x47],0x98160dae
  415afc:	mov    ecx,0xfa6f47b8
  415b01:	enter  0x1b7b,0x45
  415b05:	jecxz  0x415b0e
  415b07:	clc    
  415b08:	dec    edi
  415b09:	or     cl,BYTE PTR ds:[esi+0x152e6142]
  415b10:	push   ecx
  415b11:	sti    
  415b12:	mov    cl,0xac
  415b14:	in     al,0xf4
  415b16:	or     al,0x5b
  415b18:	sub    eax,esp
  415b1a:	aam    0xbb
  415b1c:	pop    ebp
  415b1d:	mov    edx,0x50930ea5
  415b22:	dec    eax
  415b23:	fs in  eax,dx
  415b25:	repnz mov ch,cl
  415b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b29:	fist   WORD PTR [ecx+0x5178766c]
  415b2f:	sbb    ecx,DWORD PTR [esp+esi*8-0x69]
  415b33:	leave  
  415b34:	inc    eax
  415b35:	mov    ah,0x1f
  415b37:	ins    BYTE PTR es:[edi],dx
  415b38:	jmp    0xc60e:0x1ac5872b
  415b3f:	cmp    al,0x7
  415b41:	xor    DWORD PTR [edx+0x23],ebx
  415b44:	or     BYTE PTR [eax+0xe28f3a9],dh
  415b4a:	and    BYTE PTR [ebp-0x51d5d09f],dh
  415b50:	div    BYTE PTR [esi-0x7]
  415b53:	xchg   edi,eax
  415b54:	ret    0x228b
  415b57:	or     DWORD PTR [ebx],esp
  415b59:	ja     0x415af9
  415b5b:	mov    BYTE PTR [esi+0x1e],bh
  415b5e:	add    al,0x25
  415b60:	pushf  
  415b61:	(bad)  [edi+ecx*2-0x15]
  415b65:	add    edi,esi
  415b67:	sub    ch,BYTE PTR [edi+0x5a]
  415b6a:	pop    edi
  415b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b6c:	fucomi st,st(0)
  415b6e:	push   esi
  415b6f:	pusha  
  415b70:	dec    esp
  415b71:	sub    DWORD PTR [ebx+esi*1-0x10],edx
  415b75:	and    DWORD PTR [ecx+0x440dcbf5],edx
  415b7b:	daa    
  415b7c:	mov    eax,ds:0x48bbe512
  415b81:	ret    0xdd2c
  415b84:	jne    0x415b57
  415b86:	inc    eax
  415b87:	fwait
  415b88:	inc    ebx
  415b89:	ret    
  415b8a:	stos   BYTE PTR es:[edi],al
  415b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8c:	sbb    al,0xbe
  415b8e:	inc    ebp
  415b8f:	(bad)  
  415b90:	jno    0x415b44
  415b92:	test   cl,dl
  415b94:	mov    bl,0x36
  415b96:	int3   
  415b97:	lods   al,BYTE PTR ds:[esi]
  415b98:	add    eax,0xe3188195
  415b9d:	fwait
  415b9e:	push   ds
  415b9f:	(bad)  
  415ba0:	jge    0x415b4a
  415ba2:	jbe    0x415b5d
  415ba4:	jecxz  0x415bd3
  415ba6:	inc    ebp
  415ba7:	add    BYTE PTR [ebx+0x20d4a7cc],bl
  415bad:	jp     0x415b3f
  415baf:	dec    esp
  415bb0:	pop    edx
  415bb1:	sar    dh,1
  415bb3:	mov    al,ds:0x21da265c
  415bb8:	(bad)  
  415bb9:	call   0xf39a4070
  415bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bbf:	iret   
  415bc0:	data16 jo 0x415c15
  415bc3:	add    DWORD PTR [esi-0x59],ecx
  415bc6:	rcl    DWORD PTR [eax+0x71],cl
  415bc9:	and    eax,0xb3e49445
  415bce:	add    DWORD PTR [eax+0x32],edi
  415bd1:	cmp    BYTE PTR [ebx],dl
  415bd3:	mov    ah,0xe9
  415bd5:	push   edi
  415bd6:	xor    DWORD PTR [esi+0x2c],0x16
  415bda:	icebp  
  415bdb:	outs   dx,BYTE PTR ds:[esi]
  415bdc:	lds    esp,FWORD PTR [edi+0xd7ae860]
  415be2:	xor    ebx,DWORD PTR [ecx-0x5c9bb15]
  415be8:	scas   al,BYTE PTR es:[edi]
  415be9:	cld    
  415bea:	mov    al,ds:0x88fa8579
  415bef:	jne    0x415bcf
  415bf1:	repnz xchg ebx,eax
  415bf3:	jno    0x415b78
  415bf5:	jp     0x415b98
  415bf7:	test   eax,0x112a9239
  415bfc:	jo     0x415b99
  415bfe:	leave  
  415bff:	loope  0x415bfc
  415c01:	jne    0x415bd1
  415c03:	rol    cl,1
  415c05:	push   ecx
  415c06:	push   ecx
  415c07:	mov    DWORD PTR ds:0x42a815,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7d9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a89d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	aam    0xf6
  415c41:	jo     0x415c8d
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	jae    0x415bdd
  415c4d:	lea    esp,[ebx]
  415c4f:	fnstenv ds:0x628d3f01
  415c55:	mov    esp,0x5c0e4a45
  415c5a:	or     ch,BYTE PTR [esi]
  415c5c:	fisttp QWORD PTR [esi]
  415c5e:	cld    
  415c5f:	dec    eax
  415c60:	sbb    DWORD PTR [ebx+0xd],ebx
  415c63:	mov    ds,WORD PTR [ecx]
  415c65:	leave  
  415c66:	cwde   
  415c67:	jecxz  0x415ca4
  415c69:	push   ss
  415c6a:	lods   al,BYTE PTR ds:[esi]
  415c6b:	repnz in eax,0xd0
  415c6e:	sbb    ebx,DWORD PTR [esi]
  415c70:	sbb    BYTE PTR [edi],ch
  415c72:	mov    al,ds:0x6dd98b95
  415c77:	mov    bh,0x3b
  415c79:	xor    cl,0x1f
  415c7c:	test   DWORD PTR [ebp-0x3395866],edx
  415c82:	shl    DWORD PTR ds:[edx-0x32],1
  415c86:	(bad)  
  415c87:	icebp  
  415c88:	pop    ebx
  415c89:	sbb    edi,ecx
  415c8b:	jb     0x415c9f
  415c8d:	(bad)  
  415c8e:	mov    ch,0xeb
  415c90:	imul   ebp,DWORD PTR [edx+0x9],0x3b
  415c94:	and    BYTE PTR [eax+eiz*1-0x45],bh
  415c98:	arpl   WORD PTR [ebx],sp
  415c9a:	ds push es
  415c9c:	pop    esp
  415c9d:	mov    al,ds:0xdbf3f2ed
  415ca2:	jne    0x415d00
  415ca4:	jle    0x415c5e
  415ca6:	sub    cl,ch
  415ca8:	or     al,0x73
  415caa:	(bad)  
  415cab:	daa    
  415cac:	and    eax,0x33dedfc9
  415cb1:	fcomp  QWORD PTR [eax-0x64]
  415cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cb5:	aam    0xda
  415cb7:	daa    
  415cb8:	pop    ebx
  415cb9:	nop
  415cba:	rol    DWORD PTR [ebx-0x56],1
  415cbd:	mov    ebp,0x1e863087
  415cc2:	mov    ah,BYTE PTR [ebp-0x3fdbf2c0]
  415cc8:	mov    bh,0xf8
  415cca:	mov    eax,ds:0x1160f23e
  415ccf:	pop    esi
  415cd0:	data16 fdivr QWORD PTR [eax-0x38765cba]
  415cd7:	mov    al,ds:0x2a3d55ae
  415cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cdd:	hlt    
  415cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cdf:	aad    0x12
  415ce1:	push   es
  415ce2:	sub    cl,bl
  415ce4:	push   0x60
  415ce6:	int    0x8d
  415ce8:	call   0xcc79:0x173b6a13
  415cef:	mov    cl,0x7b
  415cf1:	jne    0x415d2f
  415cf3:	daa    
  415cf4:	loop   0x415d1c
  415cf6:	xchg   edi,eax
  415cf7:	xchg   BYTE PTR [edi],bh
  415cf9:	test   al,0x70
  415cfb:	push   cs
  415cfc:	(bad)  
  415cfd:	xchg   ecx,eax
  415cfe:	sbb    ch,al
  415d00:	pop    edx
  415d01:	test   al,0xdb
  415d03:	(bad)  
  415d04:	fs jno 0x415cd8
  415d07:	sub    ah,BYTE PTR [edi]
  415d09:	mov    ebp,0x822ee84
  415d0e:	push   esp
  415d0f:	cmp    bl,BYTE PTR [edi]
  415d11:	mov    edx,0xc5f9e12d
  415d16:	enter  0xb7f2,0xe6
  415d1a:	add    eax,0xd880098
  415d1f:	inc    ecx
  415d20:	int3   
  415d21:	jmp    0x214a:0x5d3bff38
  415d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d29:	int3   
  415d2a:	jns    0x415d0e
  415d2c:	jnp    0x415d1f
  415d2e:	sub    al,0xfa
  415d30:	(bad)  
  415d31:	push   eax
  415d32:	daa    
  415d33:	stos   BYTE PTR es:[edi],al
  415d34:	push   cs
  415d35:	loop   0x415d2f
  415d37:	stc    
  415d38:	int    0x60
  415d3a:	sbb    dh,BYTE PTR [ebp-0x1c]
  415d3d:	jge    0x415ccd
  415d3f:	retf   0xe0ef
  415d42:	xchg   esi,eax
  415d43:	jb     0x415dae
  415d45:	jno    0x415d84
  415d47:	stos   BYTE PTR es:[edi],al
  415d48:	lock fwait
  415d4a:	in     al,0x62
  415d4c:	inc    ecx
  415d4d:	xchg   DWORD PTR [ecx],ebp
  415d4f:	or     dh,dh
  415d51:	clc    
  415d52:	sub    al,BYTE PTR [eax+0xd]
  415d55:	mov    bl,0x9a
  415d57:	pusha  
  415d58:	and    eax,esi
  415d5a:	les    ebx,FWORD PTR cs:[ecx]
  415d5d:	aaa    
  415d5e:	sbb    BYTE PTR [esi+0x396c6b9e],bh
  415d64:	out    0xa7,al
  415d66:	aad    0x79
  415d68:	stos   DWORD PTR es:[edi],eax
  415d69:	repz xchg esi,eax
  415d6b:	or     dl,al
  415d6d:	std    
  415d6e:	xchg   BYTE PTR [ebp-0x4d32ecfb],al
  415d74:	rol    DWORD PTR [eax],1
  415d76:	or     DWORD PTR [eax-0x143d8c2f],0x63
  415d7d:	std    
  415d7e:	cmp    cl,BYTE PTR [esi]
  415d80:	mov    cl,0xec
  415d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d83:	jecxz  0x415d53
  415d85:	xchg   esp,eax
  415d86:	add    DWORD PTR [edi],ecx
  415d88:	pusha  
  415d89:	xchg   esp,eax
  415d8a:	aaa    
  415d8b:	das    
  415d8c:	mov    ds:0x99036431,eax
  415d91:	sbb    DWORD PTR [edx+eiz*1+0x66],eax
  415d95:	or     dl,dl
  415d97:	lock adc DWORD PTR ds:0x46594d8c,0xfae200
  415da2:	jns    0x415e04
  415da4:	lds    ebx,FWORD PTR [ecx]
  415da6:	sbb    ebx,DWORD PTR [ebx-0x3bc163bf]
  415dac:	shr    ebx,0x8d
  415daf:	jo     0x415d64
  415db1:	or     al,0x48
  415db3:	ins    BYTE PTR es:[edi],dx
  415db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db5:	sahf   
  415db6:	sub    BYTE PTR [edx+edx*2-0x5c],bl
  415dba:	in     eax,0x3a
  415dbc:	in     eax,dx
  415dbd:	shl    BYTE PTR [ecx-0x4b],1
  415dc0:	and    DWORD PTR [eax+ebx*1+0x28],eax
  415dc4:	sbb    al,0x9f
  415dc6:	idiv   DWORD PTR [esi+0x65]
  415dc9:	int    0x50
  415dcb:	repz mov al,ds:0xe02098b2
  415dd1:	fucomp st(0)
  415dd3:	les    eax,FWORD PTR [esp+ebp*4]
  415dd6:	lds    ebx,FWORD PTR ds:[edi]
  415dd9:	push   esp
  415dda:	sub    al,0xf8
  415ddc:	adc    eax,0x37728fd0
  415de1:	in     al,dx
  415de2:	(bad)  
  415de4:	mov    BYTE PTR [ebx-0x7ba1c340],bl
  415dea:	pop    esp
  415deb:	cmp    al,0x6b
  415ded:	xor    cl,BYTE PTR [edi+0x33]
  415df0:	mov    ebx,0x1b49c4c7
  415df5:	dec    esi
  415df6:	int    0x12
  415df8:	sbb    DWORD PTR [esi-0x16ba6bc6],eax
  415dfe:	shr    DWORD PTR [edi-0x54db357d],1
  415e04:	popa   
  415e05:	xchg   ebx,eax
  415e06:	dec    eax
  415e07:	stos   BYTE PTR es:[edi],al
  415e08:	mov    eax,ds:0x8a10c71f
  415e0d:	cld    
  415e0e:	adc    eax,0xe7f123a8
  415e13:	dec    esp
  415e14:	add    edi,DWORD PTR [edi+eax*2-0x74b66d67]
  415e1b:	aaa    
  415e1c:	outs   dx,BYTE PTR ds:[esi]
  415e1d:	jmp    0x623b:0x2671b499
  415e24:	repz pop ebx
  415e26:	mov    eax,0x9653d20f
  415e2b:	test   al,0x30
  415e2d:	push   esi
  415e2e:	data16 aaa 
  415e30:	adc    DWORD PTR [edi-0x17ca408e],0xffffffc9
  415e37:	fsub   QWORD PTR [edx-0x27e8b362]
  415e3d:	rcr    BYTE PTR [eax],1
  415e3f:	scas   al,BYTE PTR es:[edi]
  415e40:	fbstp  TBYTE PTR [esi-0x51]
  415e43:	mov    bh,0x89
  415e46:	in     al,dx
  415e47:	dec    ebp
  415e48:	loope  0x415de7
  415e4a:	mov    WORD PTR [ebp+eiz*4+0x60],ds
  415e4e:	dec    eax
  415e4f:	mov    edx,0x71f20a81
  415e54:	aam    0xcf
  415e56:	fadd   DWORD PTR [ecx+0x6b]
  415e59:	ret    0x8659
  415e5c:	sbb    bl,BYTE PTR [edx+eax*8]
  415e5f:	jmp    0xdf58e9fa
  415e64:	jmp    0x415e0d
  415e66:	into   
  415e67:	or     DWORD PTR [ecx+0x45e9f162],esi
  415e6d:	jg     0x415e81
  415e6f:	in     al,0x70
  415e71:	dec    ebp
  415e72:	ins    BYTE PTR es:[edi],dx
  415e73:	bound  esp,QWORD PTR [esi+0x9]
  415e76:	cmc    
  415e77:	pop    ebx
  415e78:	pusha  
  415e79:	std    
  415e7a:	pop    ecx
  415e7b:	test   BYTE PTR [ecx-0x58],bl
  415e7e:	aam    0x27
  415e80:	in     al,0x9c
  415e82:	mov    ?,eax
  415e84:	ret    
  415e85:	into   
  415e86:	push   esp
  415e87:	xchg   bh,dl
  415e89:	scas   eax,DWORD PTR es:[edi]
  415e8a:	test   eax,0xe49e0752
  415e8f:	pop    ebx
  415e90:	cld    
  415e91:	xchg   esi,eax
  415e92:	loop   0x415e3b
  415e94:	jge    0x415ee8
  415e96:	test   BYTE PTR [ebx-0x1f],ah
  415e99:	fisub  WORD PTR [eax-0x170ce580]
  415e9f:	(bad)  
  415ea0:	pop    ds
  415ea1:	dec    ebx
  415ea2:	mov    esi,0xdd77930
  415ea7:	ins    DWORD PTR es:[edi],dx
  415ea8:	pop    ebp
  415ea9:	pop    ds
  415eaa:	pcmpgtw mm3,QWORD PTR [ecx]
  415ead:	loope  0x415e80
  415eaf:	pop    ebx
  415eb0:	mov    ah,BYTE PTR [esi+edi*4+0x1b707daa]
  415eb7:	aas    
  415eb8:	jmp    0xf5fa:0x1dd1ba0c
  415ebf:	fcomp  DWORD PTR [edi+0x2d33706e]
  415ec5:	shr    ebx,0x87
  415ec8:	xchg   DWORD PTR [edi+0x0],esp
  415ecb:	sub    DWORD PTR [ecx+0x1ca98c11],ebp
  415ed1:	outs   dx,DWORD PTR ds:[esi]
  415ed2:	aam    0x39
  415ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed5:	push   eax
  415ed6:	(bad)  
  415ed7:	mov    edi,0xd465f167
  415edc:	push   es
  415edd:	jo     0x415e8c
  415edf:	lods   al,BYTE PTR ds:[esi]
  415ee0:	cs rcl al,0x76
  415ee4:	cmp    DWORD PTR [eax-0x3807ba77],esi
  415eea:	add    eax,0x42a79d
  415eef:	xor    BYTE PTR [ebp+0x0],ch
  415ef2:	add    BYTE PTR [ebx-0x7141f7b3],cl
  415ef8:	inc    edx
  415ef9:	add    BYTE PTR [eax],al
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a821,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a825,0x42a7e1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	xchg   esi,ecx
  415f4c:	and    ebp,DWORD PTR [ebp+0x27]
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415fb1
  415f57:	rol    ch,0x3c
  415f5a:	jge    0x415f24
  415f5c:	jns    0x415f8b
  415f5e:	jno    0x415eef
  415f60:	lahf   
  415f61:	ficom  WORD PTR [esi+edx*8+0x22412fcf]
  415f68:	jecxz  0x415f26
  415f6a:	mov    ds:0x5bfbb1fd,eax
  415f6f:	cmp    al,0x2f
  415f71:	fldenv [edi-0x4f]
  415f74:	jno    0x415fb2
  415f76:	dec    edx
  415f77:	out    0x28,al
  415f79:	and    ecx,DWORD PTR [esi+0x1e]
  415f7c:	call   0xeacd:0xd19c67d4
  415f83:	scas   eax,DWORD PTR es:[edi]
  415f84:	mov    ah,0x99
  415f86:	xor    DWORD PTR [edi+0x79bf837],edi
  415f8c:	push   ecx
  415f8d:	jp     0x415f86
  415f8f:	int    0xd8
  415f91:	shl    cl,1
  415f93:	dec    eax
  415f94:	inc    DWORD PTR [edi-0x3b5222ed]
  415f9a:	jge    0x415f56
  415f9c:	imul   ebx,DWORD PTR [edx-0x6a6312e8],0xffffffc1
  415fa3:	jmp    0x1b07:0x7174f84c
  415faa:	cwde   
  415fab:	jp     0x415f2d
  415fad:	fldcw  WORD PTR [edi-0x17844f8e]
  415fb3:	adc    al,0x3c
  415fb5:	add    al,0xef
  415fb7:	xlat   BYTE PTR ds:[ebx]
  415fb8:	loopne 0x416028
  415fba:	xchg   ebx,eax
  415fbb:	push   ds
  415fbc:	(bad)  
  415fbd:	xchg   esp,eax
  415fbe:	or     BYTE PTR [esi],dl
  415fc0:	sub    al,0x15
  415fc2:	mov    ds:0xfca06dc5,al
  415fc7:	ret    
  415fc8:	aam    0x75
  415fca:	or     DWORD PTR [edi+0x5b],0x5d
  415fce:	push   cs
  415fcf:	add    dh,ah
  415fd1:	push   edx
  415fd2:	pusha  
  415fd3:	cwde   
  415fd4:	cmp    bh,BYTE PTR [esi]
  415fd6:	jno    0x416018
  415fd8:	cmc    
  415fd9:	cwde   
  415fda:	adc    DWORD PTR [eax-0x12],ebx
  415fdd:	pop    ebx
  415fde:	shr    edx,1
  415fe0:	add    esi,eax
  415fe2:	mov    dh,0xf
  415fe4:	cwde   
  415fe5:	jno    0x415fe0
  415fe7:	mov    ch,0x4a
  415fe9:	mov    DWORD PTR [ebx],ebx
  415feb:	jg     0x416011
  415fed:	mov    esi,0x9855c4fb
  415ff2:	pop    edx
  415ff3:	fwait
  415ff4:	ja     0x415fed
  415ff6:	das    
  415ff7:	push   edi
  415ff8:	rol    BYTE PTR [ebx+eiz*1-0x1e],0x69
  415ffd:	pop    edx
  415ffe:	pop    ebx
  415fff:	cli    
  416000:	mov    BYTE PTR [edi-0xebd287c],ch
  416006:	aam    0xf1
  416008:	add    bl,0x21
  41600b:	adc    esp,ebp
  41600d:	test   DWORD PTR [edi],edx
  41600f:	jne    0x416029
  416011:	ds push ebp
  416013:	ins    DWORD PTR es:[edi],dx
  416014:	bound  esi,QWORD PTR [esi-0x65d2454c]
  41601a:	jns    0x415fef
  41601c:	fbstp  TBYTE PTR [edi+edx*1-0x5d]
  416020:	or     BYTE PTR [edi+eax*2+0x50],cl
  416024:	mov    al,ds:0x6b13a61
  416029:	ins    BYTE PTR es:[edi],dx
  41602a:	(bad)  
  41602b:	(bad)  
  41602c:	(bad)  
  41602d:	mov    dl,0x4e
  41602f:	jge    0x416026
  416031:	outs   dx,BYTE PTR ds:[esi]
  416032:	cmp    esp,edi
  416034:	mov    ss,WORD PTR [ebx]
  416036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416037:	arpl   dx,cx
  416039:	cmp    edx,DWORD PTR [edi-0x2c]
  41603c:	(bad)  
  41603d:	hlt    
  41603e:	in     eax,dx
  41603f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416040:	mov    dl,0xd7
  416042:	mov    dh,BYTE PTR [edi+0x42369f09]
  416048:	gs mov ch,0xe8
  41604b:	cld    
  41604c:	aam    0x22
  41604e:	or     eax,0x48f280d
  416053:	rol    DWORD PTR [ecx-0x2ff5b37f],cl
  416059:	sbb    eax,0xd440ed9
  41605e:	enter  0xcd,0xe7
  416062:	mov    WORD PTR [ebx-0x15],gs
  416065:	dec    ecx
  416066:	arpl   dx,bx
  416068:	jle    0x4160ca
  41606a:	mov    edx,0xb8d4d1be
  41606f:	fldcw  WORD PTR [edx+0x7c]
  416072:	dec    ebp
  416073:	daa    
  416074:	pop    ecx
  416075:	inc    esi
  416076:	xchg   ch,ch
  416078:	or     al,dh
  41607a:	aaa    
  41607b:	call   0x534ecbaf
  416080:	(bad)  
  416081:	or     al,0xc6
  416083:	xchg   DWORD PTR [ebx+0xb],edi
  416086:	mov    ds:0x56fe68ae,al
  41608b:	mov    WORD PTR [ebp-0x21e8764f],gs
  416091:	cdq    
  416092:	xchg   esi,eax
  416093:	xor    ch,BYTE PTR [edi-0x1aac6fae]
  416099:	xor    eax,0xeb5bb642
  41609e:	sahf   
  41609f:	aam    0xe
  4160a1:	dec    eax
  4160a2:	fsub   QWORD PTR [ebp-0x8467226]
  4160a8:	xchg   ebp,eax
  4160a9:	cmp    DWORD PTR [eax-0x6c51826f],ebx
  4160af:	xchg   BYTE PTR [ebp+0x6051eb41],ch
  4160b5:	or     al,0xf
  4160b7:	and    al,0x9c
  4160b9:	inc    ecx
  4160ba:	mov    bh,0x34
  4160bc:	jb     0x4160ce
  4160be:	cdq    
  4160bf:	loop   0x416042
  4160c1:	aad    0xf4
  4160c3:	xchg   ebp,eax
  4160c4:	outs   dx,DWORD PTR cs:[esi]
  4160c6:	int    0xc
  4160c8:	sub    DWORD PTR [ecx],eax
  4160ca:	stc    
  4160cb:	xor    cl,BYTE PTR [esp+ecx*2-0x1ad8373a]
  4160d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d3:	jecxz  0x4160f6
  4160d5:	repnz mov dh,0x25
  4160d8:	cdq    
  4160d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160da:	jp     0x416065
  4160dc:	cmp    bh,dh
  4160de:	mov    al,ds:0xb04e4949
  4160e3:	jle    0x41607f
  4160e5:	add    BYTE PTR [edx],cl
  4160e7:	add    BYTE PTR [esi],0x49
  4160ea:	jecxz  0x4160cd
  4160ec:	sub    cl,BYTE PTR [edx+0x6d]
  4160ef:	fdiv   DWORD PTR [ebx-0x58263ebc]
  4160f5:	popa   
  4160f6:	scas   al,BYTE PTR es:[edi]
  4160f7:	imul   edx,DWORD PTR [edi],0xffffffcd
  4160fa:	popf   
  4160fb:	mov    WORD PTR [edx-0x6c20aacb],fs
  416101:	es push 0xf2a183c1
  416107:	test   eax,0xcc697e4e
  41610c:	ins    DWORD PTR es:[edi],dx
  41610d:	loope  0x416189
  41610f:	int3   
  416110:	dec    edi
  416111:	sub    BYTE PTR [esi+0x3ef2ecf4],cl
  416117:	or     cl,BYTE PTR [ecx+0x1084c957]
  41611d:	cmp    esi,ebx
  41611f:	cwde   
  416120:	lock add BYTE PTR [ebx],0x65
  416124:	pop    ds
  416125:	out    dx,al
  416126:	jge    0x4160ec
  416128:	mov    eax,ds:0x501344e5
  41612d:	xchg   DWORD PTR [ecx],edi
  41612f:	in     eax,dx
  416130:	jnp    0x4160f5
  416132:	ss ss pop esi
  416135:	sub    esi,eax
  416137:	sub    esi,DWORD PTR [eax+0x1c40a567]
  41613d:	hlt    
  41613e:	bound  ebp,QWORD PTR [eax+esi*8-0x1119f419]
  416145:	fld    st(7)
  416147:	imul   esi,esi,0x5f
  41614a:	mov    cl,0x8d
  41614c:	fs add al,0x60
  41614f:	cmp    DWORD PTR [ebx-0x2c34a217],0xbb3d56d2
  416159:	outs   dx,DWORD PTR ds:[esi]
  41615a:	mov    esi,es
  41615c:	outs   dx,BYTE PTR ds:[esi]
  41615d:	in     al,dx
  41615e:	popf   
  41615f:	std    
  416160:	mov    bh,0x8a
  416162:	nop
  416163:	std    
  416164:	push   ebp
  416166:	cli    
  416167:	sbb    DWORD PTR [edi],ebp
  416169:	lods   eax,DWORD PTR ds:[esi]
  41616a:	loopne 0x416117
  41616c:	dec    edi
  41616d:	mov    eax,ds:0x2511aadd
  416172:	pop    ebx
  416173:	out    0x1f,eax
  416175:	inc    edi
  416176:	ja     0x416181
  416178:	push   eax
  416179:	daa    
  41617a:	shl    bh,1
  41617c:	shl    DWORD PTR [eax+0x3f91e0c2],0x40
  416183:	ret    
  416184:	(bad)  
  416185:	pop    ss
  416186:	sbb    BYTE PTR [edi+0x1b],0x56
  41618a:	cmp    esi,DWORD PTR [edx+0x1f]
  41618d:	dec    esp
  41618e:	cdq    
  41618f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416190:	lds    eax,FWORD PTR ds:0x59b04a20
  416196:	test   DWORD PTR [eax+0x46],ebp
  416199:	or     esp,esi
  41619b:	addr16 retf 0x9338
  41619f:	push   esi
  4161a0:	fild   WORD PTR ds:0x4e10f1fe
  4161a6:	fisub  WORD PTR [ebp-0x58e2ca72]
  4161ac:	jle    0x41621d
  4161ae:	dec    eax
  4161af:	sub    al,0xda
  4161b1:	into   
  4161b2:	int3   
  4161b3:	rcr    DWORD PTR [eax],cl
  4161b5:	xchg   edi,eax
  4161b6:	and    bl,BYTE PTR [esi+0x648dbb9a]
  4161bc:	cmp    eax,0xd8edd569
  4161c1:	xor    DWORD PTR [esp+ebp*4],eax
  4161c4:	sub    dl,BYTE PTR [ebx+0x7255b1d3]
  4161ca:	out    dx,al
  4161cb:	loopne 0x41617c
  4161cd:	out    0x1f,al
  4161cf:	pop    ebp
  4161d0:	inc    ebx
  4161d1:	or     al,0x25
  4161d3:	mov    al,ds:0xd449644c
  4161d8:	js     0x41616c
  4161da:	adc    al,0xf
  4161dc:	mov    dh,0xd7
  4161de:	neg    BYTE PTR [esi-0x6e2cf491]
  4161e4:	push   ecx
  4161e5:	div    DWORD PTR [esi-0x33]
  4161e8:	inc    ebp
  4161e9:	jns    0x4161df
  4161eb:	dec    edi
  4161ec:	push   ds
  4161ed:	mov    BYTE PTR [ebx+0xd],bl
  4161f0:	jl     0x41617d
  4161f2:	inc    ebp
  4161f3:	cld    
  4161f4:	mov    DWORD PTR ds:0x42a8ad,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a8ad,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a8ad,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a8ad,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a8ad
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a8ad,edx
  416249:	mov    edx,DWORD PTR ds:0x42a8ad
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a8ad,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a789,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a861,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x4e0b5646]
  416290:	cmp    BYTE PTR [eax+ebx*1+0x7e95787f],0x78
  416298:	js     0x4162b8
  41629a:	push   edx
  41629b:	dec    eax
  41629c:	xchg   edi,edx
  41629e:	sbb    al,0x4f
  4162a0:	pop    ebp
  4162a1:	popa   
  4162a2:	adc    ebx,esi
  4162a4:	pop    eax
  4162a5:	adc    al,ch
  4162a7:	ss jo  0x416326
  4162aa:	and    ebx,ebp
  4162ac:	in     eax,0xf6
  4162ae:	fadd   QWORD PTR [edi+0x54]
  4162b1:	sub    DWORD PTR [edi-0x8],edi
  4162b4:	push   esi
  4162b5:	scas   al,BYTE PTR es:[edi]
  4162b6:	(bad)  
  4162b7:	cwde   
  4162b8:	enter  0xf301,0xd7
  4162bc:	int3   
  4162bd:	dec    ebp
  4162be:	repnz xchg edi,eax
  4162c0:	mov    al,ds:0x61bead6f
  4162c5:	mov    ch,0xb5
  4162c7:	xor    edx,edi
  4162c9:	mov    ds:0xa7cf4d06,ax
  4162cf:	sub    al,0x44
  4162d1:	ins    DWORD PTR es:[edi],dx
  4162d2:	sub    al,0x38
  4162d4:	sbb    eax,0xdab764c0
  4162d9:	mov    esi,0x23a53b99
  4162de:	retf   0x3aa2
  4162e1:	test   ch,cl
  4162e3:	pop    es
  4162e4:	cmp    eax,ecx
  4162e6:	mov    ecx,0xb5d4ff49
  4162eb:	and    DWORD PTR [ecx+ecx*2+0x20],ebp
  4162ef:	xlat   BYTE PTR ds:[ebx]
  4162f0:	iret   
  4162f1:	xchg   esi,eax
  4162f2:	push   ebp
  4162f3:	(bad)  
  4162f5:	mov    eax,0x87fb2bbb
  4162fa:	sbb    BYTE PTR ds:0x31c5891c,dl
  416300:	jg     0x41637d
  416302:	loop   0x416367
  416304:	inc    esi
  416305:	jnp    0xff81c022
  41630b:	fstp   TBYTE PTR [esi+0x1d2e8e5a]
  416311:	add    eax,DWORD PTR [edi+eax*4-0x5b61d6ee]
  416318:	cmp    BYTE PTR [ecx],cl
  41631a:	paddb  mm7,QWORD PTR [edx-0x6c7ce9a]
  416321:	in     eax,dx
  416322:	mov    ecx,0x70be5dba
  416327:	jno    0x416397
  416329:	xchg   ecx,eax
  41632a:	add    DWORD PTR [ecx],ebp
  41632c:	adc    esp,DWORD PTR [ebx+0x1b457f86]
  416332:	pop    ebp
  416333:	xchg   edx,eax
  416334:	add    BYTE PTR [eax-0x652a5ece],cl
  41633a:	cld    
  41633b:	jno    0x4163b7
  41633d:	dec    edx
  41633e:	rcr    DWORD PTR [esp+edx*1],0x11
  416342:	and    DWORD PTR [ecx-0x49],0xffffffc7
  416346:	outs   dx,DWORD PTR ds:[esi]
  416347:	sbb    edi,DWORD PTR [ebx-0x58]
  41634a:	pop    ecx
  41634b:	xor    edx,ebx
  41634d:	lods   al,BYTE PTR ds:[esi]
  41634e:	push   0xafa32e00
  416353:	mov    esi,0x97076ff8
  416358:	popf   
  416359:	fmul   DWORD PTR [ebp-0x39889488]
  416360:	xor    DWORD PTR [edi+eiz*1],eax
  416363:	(bad)  
  416364:	pop    ecx
  416365:	inc    DWORD PTR [edi]
  416367:	sbb    DWORD PTR [ebx],ebx
  416369:	bound  edx,QWORD PTR [edi-0x36e274dc]
  41636f:	retf   0x820d
  416372:	out    dx,eax
  416373:	dec    esi
  416374:	(bad)  
  416375:	jp     0x416396
  416377:	jmp    FWORD PTR [ecx]
  416379:	pop    esi
  41637a:	pop    esp
  41637b:	adc    dh,bh
  41637d:	sbb    al,BYTE PTR [esi]
  41637f:	fisttp DWORD PTR ss:[edi]
  416382:	add    DWORD PTR [edi-0x3f],ebx
  416385:	mov    al,BYTE PTR [ebp-0x15]
  416388:	mov    dh,0xbf
  41638a:	(bad)  
  41638b:	adc    DWORD PTR [ecx],ecx
  41638d:	aam    0x3
  41638f:	jne    0x4163cc
  416391:	mov    ss,WORD PTR [ebp+0x3f]
  416394:	xchg   edx,eax
  416395:	inc    eax
  416396:	jmp    0x41639f
  416398:	pop    es
  416399:	je     0x4163fc
  41639b:	cmp    cl,dl
  41639d:	retf   
  41639e:	cmp    bh,BYTE PTR [edi-0x8]
  4163a1:	mov    bh,0x65
  4163a3:	jmp    0x38ceaf0
  4163a8:	(bad)  
  4163a9:	mov    ecx,0xde439b1f
  4163ae:	mov    ds:0x1c23b61f,al
  4163b3:	lea    esi,[ebp+0x2d2909e7]
  4163b9:	cmp    edi,DWORD PTR [ecx-0x57]
  4163bc:	add    BYTE PTR [edx+edi*8-0xc],dh
  4163c0:	or     al,dh
  4163c2:	and    eax,esi
  4163c4:	int    0x26
  4163c6:	xchg   BYTE PTR ds:0x77821bb5,ch
  4163cc:	iret   
  4163cd:	adc    al,0x3b
  4163cf:	sub    ch,0x4b
  4163d2:	or     eax,0xaa7c2beb
  4163d7:	mov    ebx,0x6ca69d62
  4163dc:	lods   al,BYTE PTR gs:[si]
  4163df:	and    ch,al
  4163e1:	push   edi
  4163e2:	or     BYTE PTR [eax],0xda
  4163e5:	cs hlt 
  4163e7:	inc    ebx
  4163e8:	mov    ds:0x20d0559e,al
  4163ed:	cdq    
  4163ee:	and    edx,DWORD PTR [eax-0x1e6dc4da]
  4163f4:	jp     0x4163d5
  4163f6:	jecxz  0x416386
  4163f8:	retf   0x41ea
  4163fb:	jb     0x4163e4
  4163fd:	xor    bh,BYTE PTR [eax]
  4163ff:	ret    
  416400:	xchg   DWORD PTR [ebx+0x24],esp
  416403:	cmp    al,0xda
  416405:	ret    0xdbb0
  416408:	lock mov cl,0x42
  41640b:	and    al,0xf8
  41640d:	aad    0xb4
  41640f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416410:	in     eax,dx
  416411:	and    eax,0x21a1c316
  416416:	adc    DWORD PTR [edi-0x3a],ebx
  416419:	push   edi
  41641a:	mov    ecx,0xd4d5812c
  41641f:	rcr    DWORD PTR [eax],0x21
  416422:	cmp    esp,esi
  416424:	sub    edi,0x190e1d5b
  41642a:	call   0x54d45866
  41642f:	cli    
  416430:	rcr    DWORD PTR [eax],0x3a
  416433:	icebp  
  416434:	jl     0x41647d
  416436:	mov    ecx,0x3a4f7bf7
  41643b:	fist   DWORD PTR [ebp-0x23]
  41643e:	inc    ecx
  41643f:	sub    eax,0x97d9c2b2
  416444:	aam    0x85
  416446:	fidivr DWORD PTR [ebp-0x426fbc31]
  41644c:	inc    ebx
  41644d:	scas   eax,DWORD PTR es:[edi]
  41644e:	call   0x88e9:0x6ab66823
  416455:	dec    edi
  416456:	(bad)  
  416457:	call   0x3c1b:0xec5a994e
  41645e:	mov    edi,0x85ad7b40
  416463:	sbb    dl,BYTE PTR ds:[esi+0x236d8e94]
  41646a:	and    ecx,edi
  41646c:	mov    ebp,cs
  41646e:	mov    cl,BYTE PTR [ecx+0x57d099b]
  416474:	adc    esi,DWORD PTR [edi-0x10]
  416477:	mov    cs,WORD PTR [ebp+0x65]
  41647a:	jle    0x41647c
  41647c:	xchg   ebp,eax
  41647d:	inc    ecx
  41647e:	les    ebx,FWORD PTR [ebx-0x3aa0db33]
  416484:	dec    eax
  416485:	inc    eax
  416486:	cmp    al,0x5a
  416488:	xchg   ecx,eax
  416489:	bound  ebx,QWORD PTR [ebp+eiz*1-0x13c8ccfa]
  416490:	mov    al,ds:0x17d8cfc4
  416495:	inc    ecx
  416496:	(bad)  
  416497:	and    al,0x61
  416499:	pop    esp
  41649a:	jo     0x4164ce
  41649c:	jb     0x416449
  41649e:	adc    BYTE PTR [ebp+0x1b],dh
  4164a1:	sub    eax,eax
  4164a3:	rcr    BYTE PTR [ecx-0x6fa53487],1
  4164a9:	in     al,0x18
  4164ab:	js     0x41644d
  4164ad:	xlat   BYTE PTR ds:[ebx]
  4164ae:	push   esi
  4164af:	rcl    BYTE PTR [edx+0x75],0x86
  4164b3:	sbb    ecx,DWORD PTR [ebx+0x5d]
  4164b6:	mov    ecx,0x2fb1b26
  4164bb:	loopne 0x41648b
  4164bd:	sub    eax,0x1107ba6a
  4164c2:	clc    
  4164c3:	adc    eax,DWORD PTR [edx+0x1f]
  4164c6:	push   0x836ed1b5
  4164cb:	and    al,0x8c
  4164cd:	addr16 adc al,0x4c
  4164d0:	fcom   DWORD PTR [ebx]
  4164d2:	fdivr  QWORD PTR [eax+0x3]
  4164d5:	(bad)  
  4164d6:	mov    esp,0x8564cc0b
  4164db:	xlat   BYTE PTR ds:[ebx]
  4164dc:	fidiv  WORD PTR [ebx+0x76]
  4164df:	or     edi,DWORD PTR [edx+0x1d]
  4164e2:	and    DWORD PTR ds:0x25401a95,0xc5d56084
  4164ec:	push   ds
  4164ed:	popa   
  4164ee:	mov    ds:0x4c9a691f,al
  4164f3:	jle    0x4164cc
  4164f5:	dec    DWORD PTR [ecx-0x529b3f68]
  4164fb:	add    bh,BYTE PTR [edi]
  4164fd:	jne    0x416561
  4164ff:	push   ecx
  416500:	mov    esp,0xb733ba6
  416505:	aam    0xeb
  416507:	xor    eax,0xcbcd4d79
  41650c:	xor    BYTE PTR [esp+ecx*8+0x4871364c],bl
  416513:	cwde   
  416514:	xor    al,0x21
  416516:	retf   
  416517:	push   esi
  416518:	push   ebp
  416519:	sub    DWORD PTR [edx],edi
  41651b:	das    
  41651c:	fsub   DWORD PTR [ebx-0x4b460e35]
  416522:	ficomp WORD PTR [ecx+0x60]
  416525:	aaa    
  416526:	inc    edx
  416527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416528:	mov    edx,0x6b52a955
  41652d:	jge    0x41650b
  41652f:	outs   dx,DWORD PTR ds:[esi]
  416530:	sub    al,0x86
  416532:	ins    DWORD PTR es:[edi],dx
  416533:	out    0xe8,eax
  416535:	xor    bl,BYTE PTR [eax]
  416537:	add    BYTE PTR [eax],al
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x30e37c66],cl
  416557:	fucomi st,st(2)
  416559:	enter  0x1dd9,0x7f
  41655d:	js     0x4164f4
  41655f:	jle    0x4165d9
  416561:	js     0x416567
  416563:	cmp    BYTE PTR [edx+0x75],0x5b
  416567:	xor    al,0xf1
  416569:	xchg   esi,eax
  41656a:	push   edi
  41656b:	dec    esi
  41656c:	push   edi
  41656d:	call   0xc830:0x1b66ea32
  416574:	cdq    
  416575:	outs   dx,BYTE PTR ds:[esi]
  416577:	dec    edi
  416578:	fstp   TBYTE PTR [edi-0x44732ac4]
  41657e:	push   cs
  41657f:	pushw  ss
  416581:	inc    BYTE PTR [eax]
  416583:	jp     0x416597
  416585:	cmp    dl,BYTE PTR ds:0xa89a45fb
  41658b:	clc    
  41658c:	push   ecx
  41658d:	fwait
  41658e:	inc    edx
  41658f:	stos   DWORD PTR es:[edi],eax
  416590:	dec    ebp
  416591:	outs   dx,DWORD PTR ds:[esi]
  416592:	jbe    0x416580
  416594:	call   0xf9bb:0xe8ac8f71
  41659b:	mov    ah,BYTE PTR [edx+0x75d4b90a]
  4165a1:	ror    BYTE PTR [edi-0x5],cl
  4165a4:	lock jmp 0x3379:0x2fe2b5ed
  4165ac:	fmul   st(1),st
  4165ae:	es sbb al,0xdc
  4165b1:	cmp    esi,DWORD PTR [esi-0x1f]
  4165b4:	sub    DWORD PTR [esi],ebx
  4165b6:	xor    eax,0x28abe4af
  4165bb:	test   eax,0x501462d2
  4165c0:	mov    ss,WORD PTR [eax-0x12]
  4165c3:	(bad)  
  4165c4:	in     al,dx
  4165c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165c6:	push   0xffffffb9
  4165c8:	or     DWORD PTR [edx+edi*1],esi
  4165cb:	mov    eax,DWORD PTR [ebx-0xb549e75]
  4165d1:	lock inc ebp
  4165d3:	iret   
  4165d4:	pop    esp
  4165d5:	test   al,0x77
  4165d7:	gs clc 
  4165d9:	imul   esp,esi,0xcfa5b6fd
  4165df:	mov    al,0x27
  4165e1:	cmc    
  4165e2:	jnp    0x4165ff
  4165e4:	jne    0x41662a
  4165e6:	sar    bl,0xc0
  4165e9:	popa   
  4165ea:	jge    0x416652
  4165ec:	pop    ebp
  4165ed:	mov    edx,0x5e20b683
  4165f2:	jmp    0x30db:0xbb322bde
  4165f9:	retf   0x3857
  4165fc:	xchg   edx,eax
  4165fd:	jmp    0x6641:0x6a631e2
  416604:	sahf   
  416605:	imul   DWORD PTR [ebx]
  416607:	clc    
  416608:	inc    ecx
  416609:	push   cs
  41660a:	or     BYTE PTR [ebx-0x63320819],ah
  416610:	ss (bad) 
  416612:	ja     0x4165c2
  416614:	fwait
  416615:	xchg   ebx,eax
  416616:	out    0x12,eax
  416618:	cwde   
  416619:	and    al,BYTE PTR [bx+si-0x52]
  41661d:	xor    esi,esp
  41661f:	imul   eax,DWORD PTR [esi-0x62],0xfffffffe
  416623:	inc    esp
  416624:	addr16 stc 
  416626:	stc    
  416627:	xchg   DWORD PTR [eax-0x4],ebp
  41662a:	jo     0x4165f8
  41662c:	idiv   DWORD PTR ss:[esi]
  41662f:	sub    dh,BYTE PTR [ecx]
  416631:	pop    es
  416632:	push   esp
  416633:	mov    ah,BYTE PTR [edi-0x6b7aa15f]
  416639:	sub    edx,ebp
  41663b:	mov    al,0xd2
  41663d:	mov    ebx,0x8b9b9d54
  416642:	xor    eax,0x4854874
  416647:	addr16 rcl dh,cl
  41664a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41664b:	jg     0x4165e8
  41664d:	or     bh,BYTE PTR [esi]
  41664f:	lods   al,BYTE PTR ds:[esi]
  416650:	and    ecx,DWORD PTR [edx-0x34c205e8]
  416656:	xor    DWORD PTR [edi],esi
  416658:	xchg   edx,eax
  416659:	cdq    
  41665a:	pop    ecx
  41665b:	ret    0xcb03
  41665e:	int3   
  41665f:	sbb    ebx,ebp
  416661:	mov    cl,0xa4
  416663:	mov    ch,BYTE PTR [ecx]
  416665:	in     eax,dx
  416666:	repz (bad) 
  416668:	dec    ebp
  416669:	lahf   
  41666a:	stos   DWORD PTR es:[edi],eax
  41666b:	jne    0x416661
  41666d:	out    0xf8,al
  41666f:	loop   0x4166c8
  416671:	and    edi,DWORD PTR [eax]
  416673:	or     eax,DWORD PTR cs:[edx-0x6de23b5d]
  41667a:	or     dl,dh
  41667c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41667d:	rcr    DWORD PTR [edx],1
  41667f:	std    
  416680:	loopne 0x416682
  416682:	jge    0x4166e8
  416684:	or     al,0x49
  416686:	loope  0x416693
  416688:	push   ebx
  416689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41668a:	cmp    DWORD PTR [edx],esi
  41668c:	mov    esi,0x2cb7918a
  416691:	push   edi
  416692:	aam    0x66
  416694:	xchg   DWORD PTR [ebp-0x3dc3e899],eax
  41669a:	xor    edi,DWORD PTR [eax-0x50]
  41669d:	retf   0xfb02
  4166a0:	push   0x22ec5147
  4166a5:	add    al,0xec
  4166a7:	dec    ebp
  4166a8:	loop   0x4166fc
  4166aa:	test   eax,0x7d66b5f4
  4166af:	mov    esp,0xc0da7243
  4166b4:	jecxz  0x4166dc
  4166b6:	adc    DWORD PTR [eax+esi*2],eax
  4166b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ba:	sahf   
  4166bb:	ret    
  4166bc:	fucomp st(6)
  4166be:	addr16 popa 
  4166c0:	cmp    dl,bl
  4166c2:	popf   
  4166c3:	sar    DWORD PTR [eax+0x9adc9a9],0xd1
  4166ca:	xchg   edi,eax
  4166cb:	rcr    bl,0xeb
  4166ce:	sbb    cl,0x53
  4166d1:	rcl    DWORD PTR [ecx+0x33],1
  4166d4:	pop    esi
  4166d5:	(bad)  
  4166d6:	push   ebp
  4166d7:	mov    eax,0x6cc54b44
  4166dc:	pop    esp
  4166dd:	push   esp
  4166de:	stos   DWORD PTR es:[edi],eax
  4166df:	dec    ebx
  4166e0:	inc    eax
  4166e1:	add    eax,0x2bd71a00
  4166e6:	mov    ebp,0x90f9ab00
  4166eb:	inc    esi
  4166ec:	icebp  
  4166ed:	sbb    eax,0x3ba2fcad
  4166f2:	pop    edx
  4166f3:	aad    0x47
  4166f5:	cmp    ecx,esp
  4166f7:	sbb    DWORD PTR [esi],esp
  4166f9:	pop    es
  4166fa:	mov    al,ds:0x35773a20
  4166ff:	cmp    BYTE PTR [edx+0x4ca82a25],0x98
  416706:	mov    ds:0x52d43191,al
  41670b:	fld    QWORD PTR [ecx-0x5664ecb4]
  416711:	xor    BYTE PTR [ecx-0x39afd575],ah
  416717:	adc    cl,dl
  416719:	int3   
  41671a:	push   edx
  41671b:	adc    BYTE PTR [ebx-0x163770e4],0xe7
  416722:	arpl   WORD PTR [edx+0x2114b2d],ax
  416728:	loopne 0x416753
  41672a:	jle    0x41674d
  41672c:	retf   0xdf62
  41672f:	push   0xe07e3857
  416734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416735:	call   FWORD PTR [ebx+0x5f]
  416738:	dec    esi
  416739:	and    al,0x4f
  41673b:	push   0x31
  41673d:	mov    al,ds:0x147b2879
  416742:	xor    ebp,DWORD PTR [ebx-0x41b499c7]
  416748:	and    eax,0x4b5081b8
  41674d:	push   cs
  41674e:	sub    DWORD PTR ds:0xb2c9a496,0x25
  416755:	fmul   DWORD PTR [edi+esi*8-0xda0710d]
  41675c:	mov    DWORD PTR [ebx],edx
  41675e:	and    DWORD PTR [ebx+eax*1-0x56bde03e],edi
  416765:	in     eax,0x6
  416767:	ror    dh,1
  416769:	rol    DWORD PTR [eax-0x2d],0xd1
  41676d:	mov    ebx,DWORD PTR [edi+0x55]
  416770:	imul   ecx,edi,0xf11a5ae3
  416776:	dec    esp
  416777:	xchg   BYTE PTR [edx+0x77],bh
  41677a:	mov    esi,0x28653d02
  41677f:	out    dx,al
  416780:	test   eax,0xad30829d
  416785:	out    0x1f,eax
  416787:	xor    esp,DWORD PTR [edx-0x5e92f029]
  41678d:	out    dx,al
  41678e:	xchg   ebp,eax
  41678f:	sub    ebx,edi
  416791:	loop   0x416723
  416793:	jno    0x4167db
  416795:	add    al,0x2b
  416797:	mov    cl,0xe1
  416799:	les    esi,FWORD PTR [edx]
  41679b:	loopne 0x4167e8
  41679d:	jb     0x4167dd
  41679f:	fmul   DWORD PTR fs:0x62523811
  4167a6:	jmp    0x416768
  4167a8:	adc    DWORD PTR [ebx+0x5a99c511],esi
  4167ae:	sbb    eax,0xe86de3ae
  4167b3:	jecxz  0x41682d
  4167b5:	(bad)  
  4167b6:	je     0x4167d6
  4167b8:	jne    0x4167e4
  4167ba:	jne    0x416821
  4167bc:	scas   al,BYTE PTR es:[edi]
  4167bd:	mov    bh,0xb7
  4167bf:	pop    eax
  4167c0:	aas    
  4167c1:	add    BYTE PTR [edi],bl
  4167c3:	adc    DWORD PTR [ebp-0x31],edx
  4167c6:	ret    
  4167c7:	sbb    al,0x79
  4167c9:	jg     0x41679a
  4167cb:	pop    ebx
  4167cc:	push   edi
  4167cd:	xchg   ebx,eax
  4167ce:	inc    ecx
  4167cf:	mov    esp,0x7b4c6c13
  4167d4:	test   DWORD PTR [esi+0x4a],esi
  4167d7:	adc    eax,0x8fa03c24
  4167dc:	push   ebp
  4167dd:	jg     0x41679c
  4167df:	or     al,0x63
  4167e1:	shr    DWORD PTR [ebp+0xfeaadff],0x32
  4167e8:	aad    0x9e
  4167ea:	cli    
  4167eb:	rcr    BYTE PTR [eax],cl
  4167ed:	loope  0x4167fb
  4167ef:	xchg   ecx,eax
  4167f0:	or     al,0x2b
  4167f2:	push   esp
  4167f3:	jbe    0x416860
  4167f5:	(bad)  
  4167f6:	jmp    0x4167ab
  4167f8:	jb     0x416816
  4167fa:	shl    BYTE PTR [ebp+0x6e],1
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	(bad)  
  416819:	lea    ecx,[eax+0x7f237657]
  41681f:	js     0x4167b6
  416821:	jle    0x41689b
  416823:	js     0x416864
  416825:	mov    BYTE PTR [edx+0x7b],al
  416828:	imul   ebp,DWORD PTR [eax+0x5f],0x16
  41682c:	imul   esp,DWORD PTR [edx],0xeaee4028
  416832:	(bad)  
  416833:	data16 cmp dh,dl
  416836:	test   al,0x8a
  416838:	pop    ecx
  416839:	int3   
  41683a:	ins    DWORD PTR es:[edi],dx
  41683b:	fwait
  41683c:	nop
  41683d:	xor    cl,BYTE PTR ds:0x92f13772
  416843:	xor    cl,BYTE PTR [esi-0x4f]
  416846:	and    DWORD PTR [eax-0x23],esi
  416849:	(bad)  
  41684a:	rcr    DWORD PTR [ecx-0x72793f78],cl
  416850:	and    BYTE PTR [edx+0x58e85a39],dl
  416856:	adc    esp,DWORD PTR [edi+0x3090c22c]
  41685c:	cmp    esp,DWORD PTR [eax+0x12]
  41685f:	call   FWORD PTR [ebx]
  416861:	ins    BYTE PTR es:[edi],dx
  416862:	fwait
  416863:	dec    ebp
  416864:	adc    BYTE PTR [ebp+0x4a078af1],ah
  41686a:	aam    0x43
  41686c:	mov    DWORD PTR [ebp+eax*2-0x43ceb9f7],edx
  416873:	mov    ebp,0xc612730
  416878:	add    al,0xa5
  41687a:	and    cl,ch
  41687c:	push   0xf9ec16f3
  416881:	gs leave 
  416883:	push   esi
  416884:	out    0xcd,eax
  416886:	in     al,dx
  416887:	(bad)  
  416888:	in     al,dx
  416889:	adc    eax,0xc1111040
  41688e:	xchg   esi,eax
  41688f:	test   eax,0x3cf7eebb
  416894:	or     BYTE PTR [edi+edx*4+0x5],0x1d
  416899:	sbb    cl,0x85
  41689c:	inc    esi
  41689d:	lods   al,BYTE PTR ds:[esi]
  41689e:	ds ins DWORD PTR es:[edi],dx
  4168a0:	fmul   QWORD PTR [esp+edx*8]
  4168a3:	jmp    0xb74499e0
  4168a8:	aas    
  4168a9:	mov    ds:0x3602fef6,al
  4168ae:	cdq    
  4168af:	ins    DWORD PTR es:[edi],dx
  4168b0:	sub    dh,BYTE PTR [esi]
  4168b2:	in     al,dx
  4168b3:	lahf   
  4168b4:	test   al,0x2d
  4168b6:	fdivr  st,st(3)
  4168b8:	cwde   
  4168b9:	cli    
  4168ba:	jmp    0x2c2f6fc3
  4168bf:	mov    ds:0xecbc7d37,eax
  4168c4:	je     0x41688c
  4168c6:	clc    
  4168c7:	outs   dx,BYTE PTR ds:[esi]
  4168c8:	mov    ch,0xb
  4168ca:	mov    edi,0x24bb2745
  4168cf:	iret   
  4168d0:	cli    
  4168d1:	scas   eax,DWORD PTR es:[edi]
  4168d2:	test   al,0x10
  4168d4:	pop    ebx
  4168d5:	mov    ecx,0x355bcfda
  4168da:	hlt    
  4168db:	bsr    ecx,edx
  4168de:	xor    bh,cl
  4168e0:	cmp    bl,dh
  4168e2:	mov    DWORD PTR [edi+0x4a],ebp
  4168e5:	arpl   WORD PTR [ecx+ebp*4],dx
  4168e8:	mov    BYTE PTR [edx+esi*8-0x4e7aa6cb],cl
  4168ef:	push   eax
  4168f0:	and    edi,DWORD PTR [edi+ebx*2+0x1f]
  4168f4:	adc    ebx,esp
  4168f6:	push   0xcb8a369c
  4168fb:	rcr    DWORD PTR [edx+0x67],0xa6
  4168ff:	es daa 
  416901:	std    
  416902:	iret   
  416903:	mov    bl,bl
  416905:	popf   
  416906:	mul    DWORD PTR [edi-0x6a]
  416909:	sbb    al,0x6d
  41690b:	xor    cl,0x11
  41690e:	xchg   ebx,eax
  416910:	xor    al,0xd2
  416913:	sti    
  416914:	inc    esp
  416915:	outs   dx,DWORD PTR ds:[esi]
  416916:	jns    0x4168e6
  416918:	loope  0x416910
  41691a:	fwait
  41691b:	push   ss
  41691c:	push   es
  41691d:	in     eax,dx
  41691e:	and    eax,0x5b84e1d1
  416923:	scas   eax,DWORD PTR es:[edi]
  416924:	cdq    
  416925:	mov    bl,BYTE PTR [edi]
  416927:	push   0xffffffc5
  416929:	inc    ebx
  41692a:	push   ebp
  41692b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692c:	ret    0x7946
  41692f:	or     al,0xa2
  416931:	leave  
  416932:	inc    esp
  416933:	adc    edi,DWORD PTR [eax+0x5f]
  416936:	mov    ah,0xa2
  416938:	sbb    eax,0xebc6180
  41693d:	push   es
  41693e:	xchg   ecx,eax
  41693f:	pop    ss
  416940:	cs sahf 
  416942:	xor    BYTE PTR ds:0xeacc0ad6,bl
  416948:	xchg   BYTE PTR [edi],dl
  41694a:	jo     0x416973
  41694c:	jnp    0x416986
  41694e:	test   eax,0xe6f3606e
  416953:	mov    ecx,0xdf985c15
  416958:	lods   al,BYTE PTR ds:[esi]
  416959:	xor    esp,DWORD PTR [ebx]
  41695b:	(bad)
  416961:	scas   al,BYTE PTR es:[edi]
  416962:	inc    esi
  416963:	lock js 0x41698d
  416966:	mov    eax,DWORD PTR [edx]
  416968:	adc    bh,dl
  41696a:	fwait
  41696b:	xchg   edx,eax
  41696c:	iret   
  41696d:	mov    dl,0x13
  41696f:	push   eax
  416970:	push   cs
  416971:	mov    al,ds:0x49a8aa6a
  416976:	gs ret 0xa223
  41697a:	inc    edi
  41697b:	retf   
  41697c:	xchg   edi,eax
  41697d:	lods   eax,DWORD PTR ds:[esi]
  41697e:	add    eax,DWORD PTR [ecx+esi*4]
  416981:	in     al,0xba
  416983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416984:	mov    al,0x52
  416986:	mov    dh,BYTE PTR [ebp-0x55]
  416989:	mov    eax,ds:0x62a82ddb
  41698e:	sbb    al,0xf2
  416990:	rcl    bl,cl
  416992:	in     eax,dx
  416993:	jbe    0x4169a2
  416995:	cmc    
  416996:	hlt    
  416997:	push   0x1c
  416999:	lahf   
  41699a:	jae    0x416983
  41699c:	data16 and BYTE PTR [ebx+eiz*1-0x63],0xee
  4169a2:	mov    dl,BYTE PTR ds:0x443f4e0
  4169a8:	ret    
  4169a9:	xor    dh,BYTE PTR [esi]
  4169ab:	fist   WORD PTR [ebx-0x58cca375]
  4169b1:	adc    eax,DWORD PTR [eax]
  4169b3:	inc    eax
  4169b4:	adc    ah,BYTE PTR [eax+0x40a31f39]
  4169ba:	xor    bl,BYTE PTR [ecx]
  4169bc:	xchg   edi,eax
  4169bd:	pop    ebx
  4169be:	scas   al,BYTE PTR es:[edi]
  4169bf:	jg     0x41694e
  4169c1:	or     al,0x5a
  4169c3:	mov    ebp,0x77fd450e
  4169c8:	cmp    al,0x1f
  4169ca:	and    edi,DWORD PTR [eax-0x3fb877fe]
  4169d0:	adc    eax,0x1ec96764
  4169d5:	xchg   edi,eax
  4169d6:	mov    bl,0xa5
  4169d8:	mov    ch,0x6a
  4169da:	add    eax,0xb1cbc02d
  4169df:	sub    BYTE PTR [ebp+0x583a40e3],cl
  4169e5:	fdivp  st(5),st
  4169e7:	jmp    0x416a64
  4169e9:	test   al,0x38
  4169eb:	in     eax,dx
  4169ec:	cmp    ch,al
  4169ee:	adc    cl,0x66
  4169f1:	push   esi
  4169f2:	and    esp,DWORD PTR [esi+0x67]
  4169f5:	inc    ecx
  4169f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f7:	mov    DWORD PTR [edi],eax
  4169f9:	and    bh,BYTE PTR [eax+0x2ae401db]
  4169ff:	cld    
  416a00:	jp     0x416a0d
  416a02:	out    0xf8,al
  416a04:	cmp    al,0xc9
  416a06:	push   eax
  416a07:	scas   al,BYTE PTR es:[edi]
  416a08:	adc    BYTE PTR ds:0xca5a2b06,ch
  416a0e:	jmp    0x79cb:0x9628441
  416a15:	js     0x4169fd
  416a17:	push   edi
  416a18:	xlat   BYTE PTR ds:[ebx]
  416a19:	sbb    dl,BYTE PTR [ecx-0x10d5c5f5]
  416a1f:	adc    eax,0x4ad8375c
  416a24:	push   es
  416a25:	ror    BYTE PTR [ebx-0x432f6bc0],0x91
  416a2c:	xor    DWORD PTR [edi+0x7503e156],ebp
  416a32:	dec    esi
  416a33:	out    dx,al
  416a34:	out    dx,eax
  416a35:	jge    0x416a13
  416a37:	jae    0x4169e7
  416a39:	shr    dl,0x6a
  416a3c:	push   ds
  416a3d:	adc    ebp,DWORD PTR [esp+edi*2]
  416a40:	int3   
  416a41:	sub    ch,0x5f
  416a44:	push   edx
  416a45:	addr16 push ebp
  416a47:	out    0x73,al
  416a49:	es xchg edi,eax
  416a4b:	retf   0x4792
  416a4e:	fidivr WORD PTR [esi-0x23]
  416a51:	inc    edi
  416a52:	repz push ds
  416a54:	clc    
  416a55:	sub    eax,0x49ff6a5f
  416a5a:	pop    esi
  416a5b:	mov    es,WORD PTR [edi-0x50]
  416a5e:	xor    al,0x39
  416a60:	or     ebx,0x4e
  416a63:	lods   al,BYTE PTR ds:[esi]
  416a64:	or     ah,BYTE PTR [esi+0x1a]
  416a67:	retf   0xb721
  416a6a:	push   edx
  416a6b:	mov    ah,0xb6
  416a6d:	es pop ebx
  416a6f:	lahf   
  416a70:	pop    es
  416a71:	pop    edi
  416a72:	test   DWORD PTR [eax+eiz*1-0x1],edi
  416a76:	cmp    ecx,ecx
  416a78:	push   ss
  416a79:	dec    ecx
  416a7a:	xor    esi,edi
  416a7c:	es and al,0xac
  416a7f:	push   ebp
  416a80:	xchg   DWORD PTR [ebp+0xb31be55],ecx
  416a86:	int3   
  416a87:	adc    DWORD PTR [eax-0x24],eax
  416a8a:	dec    DWORD PTR [esi]
  416a8c:	inc    edx
  416a8d:	cdq    
  416a8e:	sub    ebx,DWORD PTR [ecx-0x43735491]
  416a94:	stc    
  416a95:	cmp    BYTE PTR [edi+esi*2],dl
  416a98:	cwde   
  416a99:	pop    ebp
  416a9a:	lods   al,BYTE PTR ds:[esi]
  416a9b:	adc    al,0x20
  416a9d:	xor    DWORD PTR [ecx-0x7e23351f],edi
  416aa3:	fwait
  416aa4:	pop    ds
  416aa5:	jnp    0x416abe
  416aa7:	sti    
  416aa8:	adc    DWORD PTR [ebx],ecx
  416aaa:	inc    edi
  416aab:	icebp  
  416aac:	push   cs
  416aad:	cld    
  416aae:	sub    dh,BYTE PTR [ebp-0x55]
  416ab1:	in     al,0xb3
  416ab3:	(bad)  
  416ab4:	ds and ebp,0x2d6a9cb7
  416abb:	imul   bh
  416abd:	xchg   DWORD PTR [ebx+ecx*4],edi
  416ac0:	inc    ebp
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xd464ff75
  416ad4:	sub    BYTE PTR [edx],bh
  416ad6:	mov    dh,0x93
  416ad8:	and    BYTE PTR [edi+0x78],bh
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416b33
  416ae0:	fist   WORD PTR [eax]
  416ae2:	mov    bh,0xab
  416ae4:	out    dx,al
  416ae5:	pop    ebp
  416ae6:	mov    ds:0x538117a0,al
  416aeb:	in     eax,0x50
  416aed:	and    DWORD PTR [ebp-0x1],ebx
  416af0:	mov    ch,0xa0
  416af2:	test   DWORD PTR [edx+eiz*1+0x129696f2],eax
  416af9:	fisubr WORD PTR [edi-0x31]
  416afc:	cmc    
  416afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416afe:	imul   ebx,ebp,0x9e055b90
  416b04:	fldenv [ebx]
  416b07:	mov    ch,0x42
  416b09:	push   esp
  416b0a:	pop    ebp
  416b0b:	sub    edi,ecx
  416b0d:	and    edx,ecx
  416b0f:	sti    
  416b10:	pushf  
  416b11:	fwait
  416b12:	mov    ecx,0x3ac7c92e
  416b17:	mov    ah,0x92
  416b19:	mov    DWORD PTR [ecx-0x7],edi
  416b1c:	jo     0x416b49
  416b1e:	dec    edi
  416b1f:	lock adc al,0xb9
  416b22:	mov    BYTE PTR [esi],bh
  416b24:	stos   DWORD PTR es:[edi],eax
  416b25:	or     eax,0x4ff806b3
  416b2a:	lea    ecx,[ebx]
  416b2c:	xchg   ecx,eax
  416b2d:	cmp    eax,0xc94ebdcc
  416b32:	mov    ch,0xdc
  416b34:	push   ds
  416b35:	retf   
  416b36:	repz pusha 
  416b38:	shl    eax,cl
  416b3a:	xor    al,bl
  416b3c:	je     0x416b70
  416b3e:	clc    
  416b3f:	loop   0x416b91
  416b41:	or     eax,0x12e77ead
  416b46:	fild   WORD PTR [ebx+ebx*4]
  416b49:	inc    ebx
  416b4a:	sar    BYTE PTR [ecx+edi*8+0x51d9e3ce],0x73
  416b52:	ss inc edi
  416b54:	aam    0x43
  416b56:	das    
  416b57:	jg     0x416b85
  416b59:	in     eax,dx
  416b5a:	dec    edi
  416b5b:	jmp    0x416ae0
  416b5d:	or     al,0x45
  416b5f:	mov    eax,0x53ad97c
  416b64:	dec    ebp
  416b65:	repnz shl WORD PTR [edi-0x447d76e3],cl
  416b6d:	and    DWORD PTR [ecx-0x61],edx
  416b70:	mov    eax,0x80097d7e
  416b75:	xchg   esp,eax
  416b76:	pop    ss
  416b77:	out    dx,al
  416b78:	into   
  416b79:	push   0xd82a2c23
  416b7e:	dec    edx
  416b7f:	cmp    BYTE PTR [edi],0xe5
  416b82:	and    al,BYTE PTR [esp+ebp*8+0x2ce6c142]
  416b89:	inc    edi
  416b8a:	retf   
  416b8b:	mov    ebx,0xe710ab22
  416b90:	or     dl,cl
  416b92:	jl     0x416bd2
  416b94:	mov    eax,0xb7877d00
  416b99:	imul   ecx,esi,0x4b8e45f2
  416b9f:	xchg   edi,eax
  416ba0:	mov    edi,0xb79ff8b6
  416ba5:	sub    eax,0x3cf1168d
  416baa:	sti    
  416bab:	rcr    cl,cl
  416bad:	mov    al,0x5
  416baf:	xor    DWORD PTR [ebp-0x52f0f483],0xffffffc0
  416bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bb7:	sbb    esi,DWORD PTR [edx+ebp*8]
  416bba:	inc    edx
  416bbb:	rol    DWORD PTR [ecx+0x27],1
  416bbe:	bound  edi,QWORD PTR [eax+0x42]
  416bc1:	pop    ecx
  416bc2:	mov    ds:0xefa99d27,al
  416bc7:	cli    
  416bc8:	(bad)  
  416bc9:	jns    0x416b4f
  416bcb:	add    edx,DWORD PTR [esi+0x45]
  416bce:	add    BYTE PTR [eax+0x8],ch
  416bd1:	push   ecx
  416bd2:	int3   
  416bd3:	aas    
  416bd4:	test   eax,0x79563c59
  416bd9:	sbb    al,0xf6
  416bdb:	lahf   
  416bdc:	es addr16 cmp ecx,ebp
  416be0:	shl    DWORD PTR [edi+esi*1-0x32c96e1e],1
  416be7:	cmc    
  416be8:	add    ecx,DWORD PTR [ebx]
  416bea:	or     edx,DWORD PTR [ebx-0x5238e435]
  416bf0:	push   ebx
  416bf1:	pop    ecx
  416bf2:	scas   eax,DWORD PTR es:[edi]
  416bf3:	scas   eax,DWORD PTR es:[edi]
  416bf4:	xor    edx,DWORD PTR [ecx-0x774317fe]
  416bfa:	mov    eax,0x88579563
  416bff:	push   0xde256728
  416c04:	xchg   edx,eax
  416c05:	inc    eax
  416c06:	sar    BYTE PTR [eax+0x672c58c7],cl
  416c0c:	test   eax,0xb804815d
  416c11:	jb     0x416ba7
  416c13:	pop    ebx
  416c14:	xchg   ebp,eax
  416c15:	sbb    ebp,DWORD PTR [eax-0x16]
  416c18:	and    BYTE PTR [edi-0x45],0xf9
  416c1c:	data16 sub al,0xe
  416c1f:	jmp    0xabc6:0x3b30d3b3
  416c26:	rol    DWORD PTR [ebx],cl
  416c28:	inc    eax
  416c29:	fwait
  416c2a:	imul   BYTE PTR [eax]
  416c2c:	pop    esp
  416c2d:	test   al,0x2f
  416c2f:	fsubr  DWORD PTR [edx+0x6008a441]
  416c35:	fstp   st(6)
  416c37:	add    eax,0x1473e2ea
  416c3c:	inc    ecx
  416c3d:	push   ebx
  416c3e:	or     al,BYTE PTR [esi]
  416c40:	dec    esi
  416c41:	dec    ecx
  416c42:	outs   dx,DWORD PTR ds:[esi]
  416c43:	jmp    0x416c7d
  416c45:	pop    ds
  416c46:	retf   0x9cc9
  416c49:	aam    0x69
  416c4b:	jl     0x416c30
  416c4d:	rol    DWORD PTR [esi+ecx*1+0x52fb1eec],0x65
  416c55:	fst    QWORD PTR [eax-0x70]
  416c58:	add    BYTE PTR [esp+eiz*8+0x4586fc85],0x88
  416c60:	outs   dx,BYTE PTR ds:[esi]
  416c61:	js     0x416bfb
  416c63:	jle    0x416c70
  416c65:	add    DWORD PTR [eax-0x646e4d55],ebx
  416c6b:	xchg   dl,ch
  416c6d:	jae    0x416bf5
  416c6f:	add    ebp,DWORD PTR [ecx-0x41a64690]
  416c75:	xchg   DWORD PTR [esi-0x48],esi
  416c78:	pmaxub mm4,QWORD PTR [ebx+ecx*1+0x62b5dc40]
  416c80:	push   ebp
  416c81:	out    0xe4,al
  416c83:	(bad)  
  416c84:	popa   
  416c85:	add    ch,bh
  416c87:	lods   eax,DWORD PTR ds:[esi]
  416c88:	aas    
  416c89:	fnop   
  416c8b:	bound  ebx,QWORD PTR [ebx]
  416c8d:	nop
  416c8e:	rcr    BYTE PTR [esi-0x7281baa0],cl
  416c94:	lock fist DWORD PTR [ebx-0x2b56515a]
  416c9b:	pop    eax
  416c9c:	nop
  416c9d:	sbb    eax,0xacbe0fd4
  416ca2:	mov    edx,DWORD PTR [edx+ecx*8-0x2ed824dc]
  416ca9:	push   0xffffffa6
  416cab:	ss stos BYTE PTR es:[edi],al
  416cad:	jnp    0x416d16
  416caf:	jle    0x416c4b
  416cb1:	jg     0x416cb3
  416cb3:	dec    edi
  416cb4:	jecxz  0x416ccf
  416cb6:	shl    ebx,cl
  416cb8:	jns    0x416d2b
  416cba:	ror    DWORD PTR [eax+0x79],0x71
  416cbe:	out    0x8c,eax
  416cc0:	cli    
  416cc1:	jle    0x416c94
  416cc3:	xchg   ebx,eax
  416cc4:	pushf  
  416cc5:	sbb    al,0x32
  416cc7:	in     al,0x89
  416cc9:	(bad)  
  416cca:	lock cld 
  416ccc:	jg     0x416cbb
  416cce:	or     dh,BYTE PTR [edx-0x1431113f]
  416cd4:	xchg   BYTE PTR [esi],ch
  416cd6:	loop   0x416d37
  416cd8:	sbb    DWORD PTR [ebx],ecx
  416cda:	lods   al,BYTE PTR ds:[esi]
  416cdb:	fwait
  416cdc:	inc    edi
  416cdd:	out    0x0,eax
  416cdf:	jecxz  0x416cf4
  416ce1:	pop    eax
  416ce2:	pushf  
  416ce3:	repz push ss
  416ce5:	mov    bl,0x7b
  416ce7:	sub    al,0x91
  416ce9:	and    edx,DWORD PTR [ebp+eax*8-0x51]
  416ced:	addr16 or eax,0xe3b50f4
  416cf3:	and    ebp,DWORD PTR [ebx-0x4b]
  416cf6:	inc    esp
  416cf7:	inc    esp
  416cf8:	add    ch,BYTE PTR [esi+0x2cd251a7]
  416cfe:	cmp    DWORD PTR [edx-0x43],ebx
  416d01:	inc    esi
  416d02:	addr16 cdq 
  416d04:	push   ebp
  416d05:	test   eax,0xc067a3d9
  416d0a:	pop    ss
  416d0b:	jno    0x416ca3
  416d0d:	dec    ecx
  416d0e:	ret    
  416d0f:	xchg   BYTE PTR [ecx+0x2061d5ed],ch
  416d15:	loopne 0x416cb3
  416d17:	mov    ebp,0x2d676b70
  416d1c:	lods   eax,DWORD PTR ds:[esi]
  416d1d:	mov    eax,0x1cb4b64f
  416d22:	imul   esi,DWORD PTR [esi*1-0x78a6fe79],0x52c29956
  416d2d:	xor    al,BYTE PTR [ebp+0x31a6b8c9]
  416d33:	xor    al,0xa9
  416d35:	sub    dl,ah
  416d37:	stos   BYTE PTR es:[edi],al
  416d38:	ds jnp 0x416cf8
  416d3b:	(bad)
  416d3e:	xor    BYTE PTR [esi+0x644c3895],al
  416d44:	ins    DWORD PTR es:[edi],dx
  416d45:	jmp    0x416d3c
  416d47:	mov    ah,0x5
  416d49:	inc    eax
  416d4a:	jbe    0x416d86
  416d4c:	iret   
  416d4d:	sahf   
  416d4e:	and    BYTE PTR [ebp-0x7eac88b8],ch
  416d54:	ficomp DWORD PTR [ebx-0x79dd6ff3]
  416d5a:	fstp   QWORD PTR [ecx-0x7c]
  416d5d:	pop    esi
  416d5e:	mov    bl,dh
  416d60:	and    edx,edi
  416d62:	adc    bl,bh
  416d64:	retf   
  416d65:	enter  0xed21,0xb4
  416d69:	dec    edi
  416d6a:	mov    ebx,0xb6a42211
  416d6f:	aaa    
  416d70:	fild   QWORD PTR [esi+ebx*8-0x30]
  416d74:	test   al,0x3d
  416d76:	add    eax,0x8b9be108
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x6080:0x1eb11efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416db8:	(bad)  
  416db9:	xlat   BYTE PTR ds:[ebx]
  416dba:	retf   0xbd30
  416dbd:	popa   
  416dbe:	mov    eax,0xc3e9feac
  416dc3:	test   al,0xc5
  416dc5:	into   
  416dc6:	mov    dl,0x95
  416dc8:	mov    esp,0x54f6729b
  416dcd:	push   eax
  416dce:	push   edi
  416dcf:	loopne 0x416da5
  416dd1:	daa    
  416dd2:	stos   BYTE PTR es:[edi],al
  416dd3:	popf   
  416dd4:	jmp    0x4f716cd5
  416dd9:	mov    BYTE PTR [ebp-0x7b],dl
  416ddc:	or     al,0xbc
  416dde:	(bad)  
  416de0:	lock xchg ebp,eax
  416de2:	sbb    bh,al
  416de4:	push   esp
  416de5:	xchg   esp,eax
  416de6:	push   ecx
  416de7:	ja     0x416e29
  416de9:	loope  0x416de8
  416deb:	pop    esp
  416dec:	mov    ah,0x33
  416dee:	nop
  416def:	ja     0x416dd5
  416df1:	lods   al,BYTE PTR ds:[esi]
  416df2:	cs adc eax,0xb360afb8
  416df8:	bound  ecx,QWORD PTR [ecx+0x61]
  416dfb:	cmp    BYTE PTR ds:0x429319c9,bl
  416e01:	jle    0x416e21
  416e03:	xchg   edi,eax
  416e04:	pop    edx
  416e05:	dec    esp
  416e06:	int    0x9e
  416e08:	sbb    eax,0x6d33115
  416e0d:	mov    ch,0xae
  416e0f:	jo     0x416e56
  416e11:	shr    BYTE PTR ds:0x851e9e5b,1
  416e17:	xlat   BYTE PTR ds:[ebx]
  416e18:	(bad)  [ecx+edi*4+0x18]
  416e1c:	and    al,0x96
  416e1e:	push   esp
  416e1f:	pop    esp
  416e20:	je     0x416e0f
  416e22:	sub    BYTE PTR [ebx-0x50a2d733],al
  416e28:	pop    ebp
  416e29:	xor    DWORD PTR [edx+0x61c053eb],esi
  416e2f:	test   DWORD PTR [bp+si+0x74],ebx
  416e33:	jmp    0x46fc:0xdd04824c
  416e3a:	dec    esi
  416e3b:	(bad)
  416e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e40:	lea    di,[eax-0x2ccb397f]
  416e47:	je     0x416dee
  416e49:	inc    esi
  416e4a:	test   eax,0xa632afb2
  416e4f:	jno    0x416e70
  416e51:	pop    ss
  416e52:	mov    ecx,edx
  416e54:	mov    eax,ebp
  416e56:	scas   al,BYTE PTR es:[edi]
  416e57:	or     ebp,DWORD PTR [esi+0x2f]
  416e5a:	sub    eax,0x5d5a9676
  416e5f:	sub    edx,DWORD PTR [edi-0x644ccec9]
  416e65:	mov    cl,0x67
  416e67:	rol    edx,0x8b
  416e6a:	cwde   
  416e6b:	or     eax,0x868ac4d8
  416e70:	cmp    eax,0x3a071d03
  416e75:	adc    al,0xf4
  416e77:	add    ah,ch
  416e79:	je     0x416e51
  416e7b:	xor    eax,0xbb89e6a6
  416e80:	jg     0x416ef0
  416e82:	call   0xf96ce9a6
  416e87:	bound  ebx,QWORD PTR [edi+0x6e]
  416e8a:	int    0x22
  416e8c:	jmp    0x4b8e:0x8232ab45
  416e93:	xchg   ecx,eax
  416e94:	sbb    al,0xdc
  416e96:	xchg   edx,eax
  416e97:	xchg   esp,eax
  416e98:	inc    edi
  416e99:	in     al,0xd
  416e9b:	sub    ah,BYTE PTR [esi+0x53]
  416e9e:	inc    DWORD PTR [eax-0x6eacda42]
  416ea4:	ja     0x416e53
  416ea6:	(bad)
  416ea9:	pushf  
  416eaa:	cmp    BYTE PTR [esi-0x2e],ah
  416ead:	rcl    DWORD PTR [edi+0xd],cl
  416eb0:	jg     0x416ed1
  416eb2:	or     BYTE PTR [edx-0x1a98f471],dh
  416eb8:	push   ebp
  416eb9:	aas    
  416eba:	jmp    0x1ebe:0x77e4c4bd
  416ec1:	jne    0x416f33
  416ec3:	(bad)  
  416ec4:	cdq    
  416ec5:	loopne 0x416ef9
  416ec7:	jne    0x416f3c
  416ec9:	jp     0x416f07
  416ecb:	inc    ebp
  416ecc:	cwde   
  416ecd:	shr    BYTE PTR [edx-0x2b],1
  416ed0:	es cmc 
  416ed2:	add    eax,0xadc51b28
  416ed7:	xor    eax,0x60ec9722
  416edc:	std    
  416edd:	mov    ebx,0x39d91ab6
  416ee2:	mov    eax,edx
  416ee4:	pop    ds
  416ee5:	and    DWORD PTR [esi+0x20],edx
  416ee8:	fdivrp st(2),st
  416eea:	mul    BYTE PTR [ecx-0x4151c3bb]
  416ef0:	jnp    0x416f42
  416ef2:	sub    BYTE PTR [edi],al
  416ef4:	push   eax
  416ef5:	shl    cl,cl
  416ef7:	xchg   DWORD PTR [edi+0x2450cba1],eax
  416efd:	or     eax,0x8b870aa2
  416f02:	push   ss
  416f03:	fisubr WORD PTR ds:0x98c78ef6
  416f09:	imul   edi,DWORD PTR [eax],0x43472d47
  416f0f:	lock push edx
  416f11:	pop    esi
  416f12:	xor    dh,dh
  416f14:	ds mov cl,0x66
  416f17:	mov    BYTE PTR [edi+0x67dbc374],bl
  416f1d:	jb     0x416eaa
  416f1f:	stc    
  416f20:	in     al,dx
  416f21:	cmp    eax,ebx
  416f23:	arpl   WORD PTR [edx],cx
  416f25:	dec    ebp
  416f26:	dec    ebx
  416f27:	xor    bh,ch
  416f29:	arpl   WORD PTR [ecx-0x33],sp
  416f2c:	sti    
  416f2d:	sub    cl,ah
  416f2f:	dec    ebx
  416f30:	es inc edi
  416f32:	retf   0x4c99
  416f35:	mov    edx,0xe92da537
  416f3a:	sub    DWORD PTR [ebp-0x70],ecx
  416f3d:	scas   eax,DWORD PTR es:[edi]
  416f3e:	fs cdq 
  416f40:	aaa    
  416f41:	or     DWORD PTR [esi+0x4f1a24a0],edi
  416f47:	imul   esi,DWORD PTR [edx-0x50f396c],0x44
  416f4e:	and    ch,BYTE PTR [eax]
  416f50:	mov    ch,0x1d
  416f52:	and    eax,0x701e64f6
  416f57:	aas    
  416f58:	mov    edi,DWORD PTR [ebp+0x72425f82]
  416f5e:	and    cl,dl
  416f60:	in     al,dx
  416f61:	and    ebp,DWORD PTR [esi+ebx*8]
  416f64:	jo     0x416ef7
  416f66:	pop    ds
  416f67:	fucomip st,st(6)
  416f69:	pop    edi
  416f6a:	lahf   
  416f6b:	pop    ss
  416f6c:	popf   
  416f6d:	(bad)  
  416f6e:	adc    al,0xfa
  416f70:	jmp    0x81ab5383
  416f75:	xchg   ebp,eax
  416f76:	popa   
  416f77:	add    al,BYTE PTR [ebp-0x63]
  416f7a:	adc    esp,DWORD PTR [esi]
  416f7c:	mov    dl,0x5c
  416f7e:	or     ch,bh
  416f80:	and    DWORD PTR [eax+0xe6ecf40],0x18
  416f87:	mov    edi,0x74fecdac
  416f8c:	aaa    
  416f8d:	sub    BYTE PTR [ecx+ebp*1],bl
  416f90:	fisttp QWORD PTR [ebx+0x31]
  416f93:	inc    eax
  416f94:	inc    ebx
  416f95:	mov    ds:0x6c2de975,al
  416f9a:	jecxz  0x416f5a
  416f9c:	pop    ebp
  416f9d:	test   eax,0xd39302a7
  416fa2:	mov    WORD PTR [eax+eiz*1],es
  416fa5:	aas    
  416fa6:	sub    ebp,DWORD PTR [edi]
  416fa8:	lods   eax,DWORD PTR ds:[esi]
  416fa9:	gs jecxz 0x417011
  416fac:	or     al,BYTE PTR ds:0xfbce5a3f
  416fb2:	xchg   edx,eax
  416fb3:	mov    dl,0x14
  416fb5:	jnp    0x41700d
  416fb7:	jge    0x416f69
  416fb9:	popa   
  416fba:	daa    
  416fbb:	clc    
  416fbc:	xor    BYTE PTR [edi+0x9625212],ch
  416fc2:	sti    
  416fc3:	sub    BYTE PTR [ecx],dl
  416fc5:	pushf  
  416fc6:	push   ecx
  416fc7:	and    esp,eax
  416fc9:	nop
  416fca:	mov    ebx,0x6c96c11c
  416fcf:	mov    bh,0xc6
  416fd1:	jns    0x416f5e
  416fd3:	outs   dx,BYTE PTR ds:[esi]
  416fd4:	xchg   edi,eax
  416fd5:	jmp    0x87a8ed9b
  416fda:	adc    esi,eax
  416fdc:	xchg   esi,eax
  416fdd:	xor    al,0x2d
  416fdf:	add    al,0x30
  416fe1:	push   ecx
  416fe2:	cmc    
  416fe3:	pop    ss
  416fe4:	or     eax,0x433fa38c
  416fe9:	leave  
  416fea:	sbb    edi,DWORD PTR [ebx+0x43]
  416fed:	in     eax,0x96
  416fef:	mov    bh,0x11
  416ff1:	jl     0x41705f
  416ff3:	shr    al,0x3d
  416ff6:	cld    
  416ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff8:	aad    0x30
  416ffa:	nop
  416ffb:	or     DWORD PTR [ebx-0x12b5c520],edx
  417001:	scas   eax,DWORD PTR es:[edi]
  417002:	adc    eax,0x5e68a719
  417007:	sbb    eax,0x8a1e300f
  41700c:	sub    al,0xe0
  41700e:	inc    edx
  41700f:	out    dx,al
  417010:	or     esi,ebx
  417012:	adc    BYTE PTR [esi-0x49],0x8c
  417016:	out    dx,eax
  417017:	inc    ebx
  417018:	rcl    BYTE PTR [esi],0xe8
  41701b:	repnz repnz adc DWORD PTR [ebx-0x1ecfcd0a],ebp
  417023:	push   esi
  417024:	jbe    0x41705d
  417026:	out    0xde,al
  417028:	mov    eax,0x59575007
  41702d:	std    
  41702e:	mov    bh,0x37
  417030:	fst    QWORD PTR [eax-0x7edd1da5]
  417036:	mov    WORD PTR [esi],?
  417038:	ins    DWORD PTR es:[edi],dx
  417039:	mov    cl,0x37
  41703b:	fs iret 
  41703d:	test   dl,bh
  41703f:	push   ecx
  417040:	jb     0x41704a
  417042:	sub    BYTE PTR [edx+0x2],0x32
  417046:	cld    
  417047:	add    eax,0xf4452f52
  41704c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41704d:	xchg   BYTE PTR [eax-0xb],cl
  417050:	stos   BYTE PTR es:[edi],al
  417051:	pop    edi
  417052:	add    eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0xe68dbbb],edx
  41706d:	push   ds
  41706e:	inc    ebp
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x4170bc
  417077:	mov    edx,DWORD PTR [ebx-0x52f7c434]
  41707d:	cli    
  41707e:	xchg   edx,eax
  41707f:	and    al,0x5d
  417081:	aaa    
  417082:	adc    al,0x79
  417084:	jae    0x417032
  417086:	or     ebx,ebx
  417088:	inc    eax
  417089:	mov    ah,0xb6
  41708b:	cdq    
  41708c:	(bad)  
  41708d:	pop    ss
  41708e:	js     0x417015
  417090:	push   ebx
  417091:	mov    bh,al
  417093:	jns    0x417022
  417095:	fs jmp 0x4170fd
  417098:	mov    ds:0x2cbe7910,eax
  41709d:	into   
  41709e:	bound  ebp,QWORD PTR [ebx-0x44]
  4170a1:	xor    DWORD PTR [edi],esi
  4170a3:	mov    edx,0xf6cfc69c
  4170a8:	cmp    edx,DWORD PTR [eax-0x64]
  4170ab:	dec    esi
  4170ac:	push   0x47
  4170ae:	fld    DWORD PTR [edi+0x5f]
  4170b1:	add    eax,0x675a4cf9
  4170b6:	jnp    0x41704d
  4170b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b9:	sbb    eax,0xc442d6ca
  4170be:	mov    dl,0x61
  4170c0:	mov    ds:0x864f7e61,al
  4170c5:	jmp    0xf35ab1d9
  4170ca:	data16 ficomp DWORD PTR [ebx-0xa2c2835]
  4170d1:	mov    dl,0xf8
  4170d3:	mov    dl,0xd3
  4170d5:	lods   al,BYTE PTR ss:[esi]
  4170d7:	jo     0x41705c
  4170d9:	out    0xa1,al
  4170db:	adc    ecx,ebp
  4170dd:	fcomp  DWORD PTR [edx+ecx*1-0x7b]
  4170e1:	jmp    0x2811:0xce5e570a
  4170e8:	test   BYTE PTR [ebp-0x72],dl
  4170eb:	and    bl,BYTE PTR [ecx]
  4170ed:	xor    eax,0x72c49628
  4170f2:	xchg   BYTE PTR [edx-0x25],dl
  4170f5:	push   es
  4170f6:	push   ss
  4170f7:	dec    ebx
  4170f8:	mov    ds:0xb56187a4,al
  4170fd:	ins    BYTE PTR es:[edi],dx
  4170fe:	push   ebp
  4170ff:	and    al,0x38
  417101:	mov    ch,0x45
  417103:	and    BYTE PTR [esi-0x3dbc3f0c],cl
  417109:	test   DWORD PTR [ecx],ebx
  41710b:	adc    eax,ebp
  41710d:	jmp    0x41714f
  41710f:	jns    0x417172
  417111:	mov    ebx,0x5a07e691
  417116:	lods   eax,DWORD PTR ds:[esi]
  417117:	xchg   DWORD PTR [esi],ecx
  417119:	dec    ebp
  41711a:	pop    eax
  41711b:	mov    esp,0xd64c32fd
  417120:	xchg   ebx,eax
  417121:	push   cs
  417122:	xor    eax,0x3ead03c
  417127:	cld    
  417128:	inc    ecx
  417129:	pop    esp
  41712a:	xlat   BYTE PTR ds:[ebx]
  41712b:	mov    ecx,0x957455af
  417130:	lods   eax,DWORD PTR ds:[esi]
  417131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417132:	leave  
  417133:	mov    esp,0xb08c1312
  417138:	int    0xa7
  41713a:	stc    
  41713b:	lds    edx,FWORD PTR [ebp+0x2c]
  41713e:	mov    dl,0x15
  417140:	pop    ebp
  417141:	aam    0xc2
  417143:	pushf  
  417144:	sbb    ah,BYTE PTR [edi+0x53]
  417147:	or     DWORD PTR ds:0xdb5803cb,0xffffffdc
  41714e:	xchg   ebp,eax
  41714f:	dec    edi
  417150:	and    eax,0xa03ea01f
  417155:	mov    ebx,0xdec2fd94
  41715a:	adc    BYTE PTR [esi-0x3],0x63
  41715e:	xchg   BYTE PTR ds:[eax-0x15b29d73],bl
  417165:	sub    eax,0xd33481b7
  41716a:	push   0xbc24cc36
  41716f:	pushf  
  417170:	push   esp
  417171:	dec    ebx
  417172:	pop    ebx
  417173:	adc    bh,BYTE PTR [ebp+0x1c]
  417176:	cli    
  417177:	test   bl,0x9
  41717a:	mov    ebx,0x8537a6f5
  41717f:	mov    ch,BYTE PTR [edx-0x14362f53]
  417185:	mov    ecx,0x61a8a8bc
  41718a:	ja     0x41719e
  41718c:	pop    ds
  41718d:	inc    ebp
  41718e:	cld    
  41718f:	sbb    DWORD PTR cs:[ebx],0x51
  417193:	retf   
  417194:	and    edi,DWORD PTR [edx+edi*1]
  417197:	fxch   st(7)
  417199:	lds    edi,FWORD PTR [ebx+0x1d09139d]
  41719f:	pop    ecx
  4171a0:	add    BYTE PTR [esi+0x517d8b50],bl
  4171a6:	int3   
  4171a7:	dec    ebx
  4171a8:	enter  0x234f,0x94
  4171ac:	pop    esi
  4171ad:	mov    cl,bl
  4171af:	mov    ebx,0xa892468c
  4171b4:	add    al,0x50
  4171b6:	in     eax,0x55
  4171b8:	cdq    
  4171b9:	sub    al,0xd5
  4171bb:	adc    bh,ah
  4171bd:	add    al,0x56
  4171bf:	push   ebp
  4171c0:	add    al,BYTE PTR [eax+0xa80d14f]
  4171c6:	and    BYTE PTR [edi],0x4c
  4171c9:	jno    0x417155
  4171cb:	mov    ch,0x28
  4171cd:	rcl    eax,cl
  4171cf:	sub    bl,BYTE PTR [eax-0x13cea604]
  4171d5:	popf   
  4171d6:	arpl   WORD PTR [edx],di
  4171d8:	dec    ecx
  4171d9:	fmul   DWORD PTR [edi-0x1118b292]
  4171df:	mov    ds:0x4af7f4eb,eax
  4171e4:	xor    al,dl
  4171e6:	data16 int3 
  4171e8:	or     DWORD PTR [ebp+0x6156b0db],eax
  4171ee:	shr    esi,0xdd
  4171f1:	mov    bl,0xd0
  4171f3:	sbb    eax,0x810d9951
  4171f8:	jge    0x4171a7
  4171fa:	xchg   ecx,eax
  4171fb:	cmp    eax,0xfcccf574
  417200:	lea    ebx,[eax-0x173f18e8]
  417206:	xor    ch,0x38
  417209:	or     BYTE PTR [edx-0x58],0xd3
  41720d:	fdiv   DWORD PTR [ebx]
  41720f:	repnz sahf 
  417211:	cs loop 0x4171b2
  417214:	push   es
  417215:	pop    ds
  417216:	test   ecx,ebp
  417218:	jns    0x41721f
  41721a:	nop
  41721b:	xor    BYTE PTR [esi+0x3b],0x21
  41721f:	popf   
  417220:	cmp    ecx,edx
  417222:	in     eax,0x1c
  417224:	mov    bl,cl
  417226:	and    al,BYTE PTR [edi]
  417228:	xchg   ecx,eax
  417229:	retf   
  41722a:	push   0xffffff95
  41722c:	lock xor eax,0x9df6d763
  417232:	(bad)  
  417233:	(bad)
  417238:	jb     0x4171ee
  41723a:	test   eax,0x2d34018e
  41723f:	loop   0x4172a8
  417241:	mov    eax,0x3bde65d3
  417246:	out    0xf4,eax
  417248:	out    0x38,eax
  41724a:	xor    DWORD PTR [esi-0x66],edi
  41724d:	jle    0x4171e5
  41724f:	lahf   
  417250:	sub    eax,0xddedecf5
  417255:	shl    DWORD PTR [ebp+ebp*4-0x1c723a41],1
  41725c:	sbb    eax,0xaa3e6469
  417261:	sbb    eax,0x5ff72315
  417266:	or     dh,BYTE PTR [esp+ecx*8-0x5f092ad2]
  41726d:	sub    eax,0x58ebe445
  417272:	pop    esp
  417273:	mov    esp,0x22c8d915
  417278:	or     edi,DWORD PTR [edi-0x338df31a]
  41727e:	out    dx,al
  41727f:	push   esp
  417280:	adc    eax,0xa41dda02
  417285:	pop    esp
  417286:	leave  
  417287:	addr16 hlt 
  417289:	and    bl,dh
  41728b:	mov    ebx,0x805f19b4
  417290:	(bad)
  417293:	adc    DWORD PTR [ebx-0x1aeca952],edi
  417299:	mov    edi,fs
  41729b:	es mov ecx,0xc240c20f
  4172a1:	pop    edi
  4172a2:	fsub   QWORD PTR [eax-0x58abd24d]
  4172a8:	add    ecx,edi
  4172aa:	jbe    0x417322
  4172ac:	mov    ecx,0xfb4a8e3e
  4172b1:	jns    0x417276
  4172b3:	shr    BYTE PTR [esi-0x1a],0xc0
  4172b7:	hlt    
  4172b8:	sbb    eax,0xf07cb522
  4172bd:	push   0x4f136448
  4172c2:	inc    edx
  4172c3:	jmp    0xe0e3488c
  4172c8:	fwait
  4172c9:	adc    BYTE PTR [edx+0x71],cl
  4172cc:	xchg   ebx,eax
  4172cd:	ja     0x417296
  4172cf:	push   edi
  4172d0:	pop    esp
  4172d1:	stos   DWORD PTR es:[edi],eax
  4172d2:	je     0x417255
  4172d4:	pop    edx
  4172d5:	shl    DWORD PTR [edi+ecx*4],0x23
  4172d9:	test   eax,0x2b29ad67
  4172de:	xchg   edi,eax
  4172df:	mov    al,0x44
  4172e1:	dec    ebp
  4172e2:	push   ecx
  4172e3:	jns    0x41726c
  4172e5:	pop    sp
  4172e7:	and    DWORD PTR [esi],ecx
  4172e9:	loope  0x4172d7
  4172eb:	stos   DWORD PTR es:[edi],eax
  4172ec:	push   ebp
  4172ed:	pop    ebp
  4172ee:	jp     0x417343
  4172f0:	push   ss
  4172f1:	shr    edi,0xca
  4172f4:	sbb    al,dl
  4172f6:	or     al,BYTE PTR ds:0xb368927a
  4172fc:	cs mov cl,0xe4
  4172ff:	mov    ebx,0xecd63095
  417304:	int3   
  417305:	mov    dl,0x79
  417307:	mov    bl,0x4c
  417309:	add    BYTE PTR [edi-0x72ec66b7],dh
  41730f:	fisubr WORD PTR [edi]
  417311:	push   DWORD PTR [ebp-0x8]
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	shl    ah,1
  417334:	and    BYTE PTR [ebx+0x25],cl
  417337:	loop   0x417361
  417339:	jg     0x4173b3
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x4172c4
  417340:	(bad)  
  417341:	std    
  417342:	shl    esp,1
  417344:	pop    esp
  417345:	jbe    0x41733e
  417347:	mul    BYTE PTR [ebx]
  417349:	ja     0x417369
  41734b:	fbld   TBYTE PTR [edx]
  41734d:	std    
  41734e:	mov    esi,0x89d5c7c7
  417353:	adc    BYTE PTR [edi-0x7142b68],al
  417359:	jbe    0x4173a0
  41735b:	cmp    ah,BYTE PTR fs:[ebx-0x67]
  41735f:	cmp    bh,bl
  417361:	lods   al,BYTE PTR ds:[esi]
  417362:	xchg   ecx,eax
  417363:	push   ss
  417364:	aad    0x25
  417366:	dec    esp
  417367:	jbe    0x4173a9
  417369:	cld    
  41736a:	jne    0x4173c2
  41736c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736d:	cmp    dl,BYTE PTR [ecx+0x44]
  417370:	or     edx,DWORD PTR [esi+0x7e]
  417373:	add    DWORD PTR [ecx-0x63424134],0x3bb810c9
  41737d:	out    0x6d,al
  41737f:	leave  
  417380:	in     eax,0xc3
  417382:	fs push edi
  417384:	cmp    esi,DWORD PTR [eax]
  417386:	or     BYTE PTR [eax+0x3ddfe3ee],al
  41738c:	cli    
  41738d:	enter  0x8b40,0xa1
  417391:	sbb    ah,BYTE PTR [ecx]
  417393:	stos   DWORD PTR es:[edi],eax
  417394:	fldlg2 
  417396:	jns    0x41734a
  417398:	popa   
  417399:	inc    ebx
  41739a:	outs   dx,DWORD PTR ds:[esi]
  41739b:	cmp    BYTE PTR [edi],0x33
  41739e:	mov    ds:0xab75dec,al
  4173a3:	jae    0x417412
  4173a5:	pop    esp
  4173a6:	dec    eax
  4173a7:	imul   ebp,DWORD PTR [edi+0x1035a214],0x9c97a5de
  4173b1:	xor    cl,BYTE PTR [ecx+0x51f81176]
  4173b7:	xor    cl,BYTE PTR [eax+ebp*2-0xc]
  4173bb:	out    dx,eax
  4173bc:	and    BYTE PTR [eax],ah
  4173be:	or     eax,0xd7a9fda7
  4173c3:	scas   eax,DWORD PTR es:[edi]
  4173c4:	push   esi
  4173c5:	mov    ds:0x1d2f93fa,al
  4173ca:	in     eax,dx
  4173cb:	mov    ebp,0x7844f968
  4173d0:	jg     0x417419
  4173d2:	nop
  4173d3:	lds    esp,FWORD PTR [edx+0x548383a2]
  4173d9:	outs   dx,DWORD PTR ds:[esi]
  4173da:	fld    QWORD PTR [edi+eax*8+0xe9f445e]
  4173e1:	push   esi
  4173e2:	nop
  4173e3:	cmp    DWORD PTR [ebx],eax
  4173e5:	dec    edi
  4173e6:	jo     0x4173d2
  4173e8:	adc    eax,0xab893897
  4173ed:	xchg   edx,eax
  4173ee:	repz sbb BYTE PTR [eax-0x68a204bf],bh
  4173f5:	int    0xfc
  4173f7:	dec    ecx
  4173f8:	out    dx,al
  4173f9:	rol    BYTE PTR [ebx-0x58],cl
  4173fc:	mov    ebx,0xae603253
  417401:	pop    es
  417402:	into   
  417403:	inc    ecx
  417404:	rol    DWORD PTR [edi-0xa],1
  417407:	inc    ecx
  417408:	fcomp  st(5)
  41740a:	dec    edx
  41740b:	ret    0x89f7
  41740e:	xchg   esi,eax
  41740f:	into   
  417410:	jno    0x4173a6
  417412:	fiadd  DWORD PTR [edx-0x1d9f6c11]
  417418:	retf   0x7422
  41741b:	inc    esi
  41741c:	dec    ebp
  41741d:	add    al,ah
  41741f:	in     eax,0x7e
  417421:	outs   dx,BYTE PTR ds:[esi]
  417422:	push   ds
  417423:	and    DWORD PTR [edx-0x8fd73e2],ebx
  417429:	mov    WORD PTR [edx+0x38],cs
  41742c:	dec    ecx
  41742d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41742e:	jns    0x4173c4
  417430:	add    edi,DWORD PTR [ebp+0x53f811ce]
  417436:	inc    edi
  417437:	adc    ch,BYTE PTR [edi]
  417439:	mov    al,0x4a
  41743b:	(bad)  
  41743c:	jne    0x417474
  41743e:	into   
  41743f:	dec    edx
  417440:	arpl   WORD PTR [esi+ebp*8],cx
  417443:	cmp    edx,DWORD PTR [eax]
  417445:	arpl   WORD PTR [eax],ax
  417447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417448:	jl     0x4173ef
  41744a:	addr16 dec edx
  41744c:	enter  0x86d9,0xfd
  417450:	cs adc eax,ebp
  417453:	out    dx,al
  417454:	mov    dh,0xba
  417456:	pop    ebp
  417457:	(bad)  
  417458:	fs mov ebx,0x48c5dcd1
  41745e:	sub    eax,DWORD PTR [ecx+0x35]
  417461:	bound  esi,QWORD PTR [ebp+0x2c]
  417464:	test   al,0x23
  417466:	int    0x51
  417468:	loop   0x41747e
  41746a:	lock push eax
  41746c:	or     al,0x23
  41746e:	aad    0x9
  417470:	stos   DWORD PTR es:[edi],eax
  417471:	scas   al,BYTE PTR es:[edi]
  417472:	cli    
  417473:	aam    0x2
  417475:	add    bl,BYTE PTR [eax+0x1f87d075]
  41747b:	rcr    BYTE PTR [eax-0x13],1
  41747e:	das    
  41747f:	or     al,0x77
  417481:	es ins DWORD PTR es:[edi],dx
  417483:	rol    BYTE PTR [edi+0x7969e2a],cl
  417489:	mov    esp,0x894a87bb
  41748e:	jbe    0x417420
  417490:	mul    BYTE PTR [ebp+0x1b]
  417493:	xchg   esi,eax
  417494:	call   0x17af:0xc249493
  41749b:	or     dh,cl
  41749d:	lods   eax,DWORD PTR ds:[esi]
  41749e:	adc    eax,0x9a136c2
  4174a3:	adc    cl,bh
  4174a5:	sbb    DWORD PTR [eax+0x6bab6959],0x72673d7d
  4174af:	sbb    eax,0xe8d6fa97
  4174b4:	in     al,0x26
  4174b6:	jnp    0x4174e6
  4174b8:	imul   edx,edx,0xffffff89
  4174bb:	mov    ds:0x3af5c291,eax
  4174c0:	xchg   esi,eax
  4174c1:	sbb    DWORD PTR [eax+0x20],esi
  4174c4:	pop    ebx
  4174c5:	mov    ebp,DWORD PTR [eiz*2+0x6380223b]
  4174cc:	in     eax,dx
  4174cd:	iret   
  4174ce:	push   ecx
  4174cf:	push   esi
  4174d0:	adc    BYTE PTR [edx],cl
  4174d2:	retf   
  4174d3:	mov    WORD PTR [eax+0x32195e04],gs
  4174d9:	sar    BYTE PTR [ecx+0x3ed3ee13],1
  4174df:	std    
  4174e0:	add    ebp,ecx
  4174e2:	js     0x417499
  4174e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e5:	and    al,0x3a
  4174e7:	mov    ds:0xf3cca6ad,eax
  4174ec:	pop    ss
  4174ed:	ficomp DWORD PTR [esi+ebp*1]
  4174f0:	push   0xd81d71f0
  4174f5:	(bad)  
  4174f9:	sti    
  4174fa:	shl    eax,0xdd
  4174fd:	dec    edi
  4174fe:	sub    al,0x87
  417500:	fcmovnb st,st(6)
  417502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417503:	and    dl,BYTE PTR [ecx]
  417505:	mov    edx,0x85965e77
  41750a:	neg    BYTE PTR [eax-0x15]
  41750d:	cwde   
  41750e:	push   ebx
  41750f:	mov    bh,0x6a
  417511:	scas   eax,DWORD PTR es:[edi]
  417512:	or     DWORD PTR [ecx+eax*1],ebp
  417515:	mov    edx,0x63529c0d
  41751a:	adc    BYTE PTR [edx-0x25],cl
  41751d:	lods   al,BYTE PTR ds:[esi]
  41751e:	mov    ss,WORD PTR [edi+ecx*8+0x1cab333e]
  417525:	test   eax,0xc85765e8
  41752a:	test   cl,ah
  41752c:	arpl   ax,si
  41752e:	(bad)  
  417530:	cmp    al,0x89
  417532:	xlat   BYTE PTR ds:[ebx]
  417533:	loopne 0x417507
  417535:	repz fisttp DWORD PTR [eax-0x8ec5dd1]
  41753c:	sbb    al,0x54
  41753e:	dec    eax
  41753f:	push   cs
  417540:	push   eax
  417541:	sub    DWORD PTR [esi+0x2b63233f],esp
  417547:	dec    esi
  417548:	jno    0x4174ee
  41754a:	lock dec ebx
  41754c:	xor    al,0x30
  41754e:	inc    ebp
  41754f:	and    ebp,esp
  417551:	adc    BYTE PTR [edx],0x31
  417554:	les    esp,FWORD PTR [eax]
  417556:	retf   0x9bc2
  417559:	jle    0x417516
  41755b:	ret    
  41755c:	pop    edx
  41755d:	jno    0x4175a5
  41755f:	pop    ecx
  417560:	xor    edi,DWORD PTR [edi+0xc]
  417563:	xchg   ebx,eax
  417564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417565:	jb     0x4175a7
  417567:	mov    ebp,0x4b2799a9
  41756c:	sub    al,dl
  41756e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41756f:	out    0x59,eax
  417571:	mov    al,dh
  417573:	sti    
  417574:	out    dx,eax
  417575:	es mov dh,0x7a
  417578:	inc    eax
  417579:	inc    esp
  41757a:	lods   eax,DWORD PTR ds:[esi]
  41757b:	mov    ecx,0xf7cb4cd0
  417580:	in     al,0x98
  417582:	sbb    al,0x53
  417584:	jnp    0x417565
  417586:	dec    edi
  417587:	lods   al,BYTE PTR ds:[esi]
  417588:	push   es
  417589:	loop   0x41759b
  41758b:	out    0xa6,eax
  41758d:	cmp    DWORD PTR [edx+0x22],esp
  417590:	cmp    eax,0x7632ed02
  417595:	stos   DWORD PTR es:[edi],eax
  417596:	inc    ebx
  417597:	cmp    al,0xad
  417599:	test   BYTE PTR [ebx-0xb],0xbf
  41759d:	aaa    
  41759e:	dec    esp
  41759f:	pop    esp
  4175a0:	sar    ch,1
  4175a2:	popa   
  4175a3:	adc    cl,BYTE PTR [esi]
  4175a5:	inc    edi
  4175a6:	pop    esp
  4175a7:	xchg   edx,eax
  4175a8:	mov    esp,0x33e69aad
  4175ad:	pop    edx
  4175ae:	jno    0x417599
  4175b0:	pop    esi
  4175b1:	mov    ds:0x762ea767,al
  4175b6:	adc    dh,BYTE PTR [edx-0x64ac9027]
  4175bc:	cmp    eax,0x8322645b
  4175c1:	xor    ch,BYTE PTR [ebp+0x5e]
  4175c4:	(bad)  
  4175c6:	adc    BYTE PTR [edx+0x63],0xb1
  4175ca:	stos   BYTE PTR es:[edi],al
  4175cb:	jae    0x4175d7
  4175cd:	sub    al,0x8f
  4175cf:	xchg   edx,eax
  4175d0:	imul   DWORD PTR [esi-0x56ecf3ec]
  4175d6:	mov    al,ds:0x3c6b984
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a899,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a899,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a899,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7d9
  41760e:	push   0x42a825
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a972
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a899,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a899
  417633:	dec    eax
  417634:	mov    ds:0x42a899,eax
  417639:	mov    eax,ds:0x42a899
  41763e:	dec    eax
  41763f:	mov    ds:0x42a899,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a82d,0x0
  41765b:	mov    eax,ds:0x42a82d
  417660:	inc    eax
  417661:	mov    ds:0x42a82d,eax
  417666:	cmp    DWORD PTR ds:0x42a82d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42ab12
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a82d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	ja     0x4176ad
  4176bc:	jno    0x4176e3
  4176be:	jg     0x4176ed
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x7878787e
  4176c7:	hlt    
  4176c8:	rcr    BYTE PTR [ebx-0x43],1
  4176cb:	not    BYTE PTR [eax]
  4176cd:	lock loop 0x4176ad
  4176d0:	push   eax
  4176d1:	js     0x417724
  4176d3:	mov    esi,0x8260acd3
  4176d8:	test   edx,esi
  4176da:	loope  0x417738
  4176dc:	daa    
  4176dd:	mov    ebp,0x93184516
  4176e2:	mov    WORD PTR [edi],gs
  4176e4:	les    ebx,FWORD PTR [ecx-0x718e148d]
  4176ea:	lods   al,BYTE PTR ds:[esi]
  4176eb:	jp     0x417702
  4176ed:	dec    ebx
  4176ee:	jnp    0x41776c
  4176f0:	and    esp,esi
  4176f2:	ficomp WORD PTR [ebx]
  4176f4:	rol    BYTE PTR [ebx+esi*8],1
  4176f7:	mov    bh,0x17
  4176f9:	adc    edx,edi
  4176fb:	test   eax,0x19b3d22e
  417700:	jnp    0x417712
  417702:	pop    edx
  417703:	xchg   BYTE PTR [edx+0x28a1723f],cl
  417709:	fwait
  41770a:	push   edi
  41770b:	mov    edi,0xb232e298
  417710:	mov    bl,0xb
  417712:	jae    0x4176d8
  417714:	mov    ecx,0xca9b0a4f
  417719:	(bad)  
  41771b:	mov    dx,0x8850
  41771f:	xor    al,BYTE PTR [ebp+0x5f]
  417722:	lea    ebp,[esi+0x692362fc]
  417728:	sub    ebx,DWORD PTR [esi-0x62a6029c]
  41772e:	out    dx,al
  41772f:	das    
  417730:	add    BYTE PTR [ebp+esi*1+0x739bc0c6],dl
  417737:	ret    
  417738:	test   al,0xf7
  41773a:	sbb    ebp,eax
  41773c:	xor    al,0x2f
  41773e:	jl     0x4176c4
  417740:	dec    ecx
  417741:	jnp    0x4176d2
  417743:	pop    ds
  417744:	mov    BYTE PTR [ecx],bl
  417746:	dec    eax
  417747:	aam    0x50
  417749:	ins    DWORD PTR es:[edi],dx
  41774a:	xor    ebx,ecx
  41774c:	pop    ds
  41774d:	xlat   BYTE PTR ds:[ebx]
  41774e:	js     0x417777
  417750:	cmp    bh,bh
  417752:	and    cl,BYTE PTR [ebx+0x20ebb6c3]
  417758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417759:	pushf  
  41775a:	cli    
  41775b:	or     al,0x11
  41775d:	imul   edx,DWORD PTR ds:0xe98be4d6,0x8b2402c1
  417767:	ret    0xbcca
  41776a:	mov    al,fs:0x4829e0
  417770:	jecxz  0x417715
  417772:	(bad)  
  417773:	lods   eax,DWORD PTR ds:[esi]
  417774:	sar    DWORD PTR [esi],0x62
  417777:	jo     0x41775c
  417779:	loope  0x41773c
  41777b:	out    dx,eax
  41777c:	and    eax,0xd9a4a9f6
  417781:	jge    0x41779c
  417783:	cs fwait
  417785:	addr16 push eax
  417787:	pop    ecx
  417788:	sub    eax,0x904a6cf3
  41778d:	jo     0x417764
  41778f:	pusha  
  417790:	das    
  417791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417792:	adc    bl,al
  417794:	cmp    eax,0x9a45ed7a
  417799:	std    
  41779a:	les    eax,FWORD PTR [ebp+0x74ab36cb]
  4177a0:	and    ah,dl
  4177a2:	lahf   
  4177a3:	sar    BYTE PTR ds:0xa6bdc26e,1
  4177a9:	rol    DWORD PTR [eax],1
  4177ab:	push   0xfffffffb
  4177ad:	scas   eax,DWORD PTR es:[edi]
  4177ae:	fcmovu st,st(7)
  4177b0:	lds    ebx,FWORD PTR [eax]
  4177b2:	inc    ecx
  4177b3:	fisubr DWORD PTR [ebx+eax*4]
  4177b6:	mov    dh,0x9e
  4177b8:	cmp    BYTE PTR [esi+ecx*4],0x44
  4177bc:	(bad)  
  4177bd:	mov    ecx,0x33d75055
  4177c2:	cmp    DWORD PTR [eax+0x74d527f6],ecx
  4177c8:	scas   al,BYTE PTR es:[edi]
  4177c9:	js     0x417842
  4177cb:	out    0xf8,al
  4177cd:	scas   eax,DWORD PTR es:[edi]
  4177ce:	lods   al,BYTE PTR ds:[esi]
  4177cf:	ficom  DWORD PTR [edx]
  4177d1:	jae    0x4177ea
  4177d3:	xchg   esi,eax
  4177d4:	mov    ecx,0xe401b7f5
  4177d9:	pop    ds
  4177da:	pop    ds
  4177db:	popa   
  4177dc:	les    edi,FWORD PTR ss:[edx]
  4177df:	xor    eax,0x223e938f
  4177e4:	jnp    0x417828
  4177e6:	rcr    DWORD PTR [eax+ebp*8],1
  4177e9:	or     eax,0xe27aaa2f
  4177ee:	arpl   WORD PTR [ebp-0x58],cx
  4177f1:	bound  eax,QWORD PTR [edx]
  4177f3:	push   ebx
  4177f4:	lock push cs
  4177f6:	aam    0xe1
  4177f8:	les    ecx,FWORD PTR [esp+esi*4]
  4177fb:	push   0x5d518ed
  417800:	loope  0x41784a
  417802:	pop    ds
  417803:	out    dx,eax
  417804:	(bad)  
  417805:	ds xor al,0xdf
  417808:	lea    esp,[edi]
  41780a:	mov    cl,0xee
  41780c:	retf   0xf94f
  41780f:	adc    ebx,DWORD PTR [edx]
  417811:	and    eax,0x87bdb11
  417816:	scas   eax,DWORD PTR es:[edi]
  417817:	neg    DWORD PTR [ebp-0x27c20fd3]
  41781d:	or     eax,0xc2bfcaeb
  417822:	fistp  WORD PTR [ebx-0x7e306d32]
  417828:	jg     0x417867
  41782a:	and    ebp,DWORD PTR [ebp+edi*2+0x575c762e]
  417831:	sbb    BYTE PTR [esi+0x5be83ace],0x36
  417838:	scas   eax,DWORD PTR es:[edi]
  417839:	xchg   DWORD PTR [esi+0x7a],eax
  41783c:	pop    es
  41783d:	outs   dx,BYTE PTR ds:[esi]
  41783e:	adc    DWORD PTR [ebx-0x175bdafe],0x8532fe8
  417848:	mov    cl,0x34
  41784a:	xor    BYTE PTR ds:0x5b1556d2,0xaf
  417851:	cmp    esp,ecx
  417853:	iret   
  417854:	out    0xe4,eax
  417856:	ja     0x4177e6
  417858:	iret   
  417859:	or     al,0x35
  41785b:	aaa    
  41785c:	out    dx,eax
  41785d:	jne    0x41785f
  41785f:	mov    WORD PTR [edi],?
  417861:	jne    0x417882
  417863:	stc    
  417864:	sbb    DWORD PTR [ecx+0x6],0xffffffb0
  417868:	jmp    0xfbabb266
  41786d:	mov    dh,0x9d
  41786f:	fadd   DWORD PTR [ebp+0x6a3773b]
  417875:	es (bad) 
  417877:	dec    ecx
  417878:	mov    al,ds:0x4782f0f3
  41787d:	in     eax,0xa4
  41787f:	or     DWORD PTR [ebx],ecx
  417881:	(bad)  
  417882:	shl    DWORD PTR [eax-0x2e065227],1
  417888:	or     esi,esi
  41788a:	inc    ebp
  41788b:	pop    esi
  41788c:	repz mov ds:0x7be7191c,al
  417892:	dec    edi
  417893:	add    al,0x52
  417895:	xor    ecx,edx
  417897:	pop    ebx
  417898:	and    ebp,DWORD PTR [ecx]
  41789a:	sbb    DWORD PTR [edi-0x35],ecx
  41789d:	and    eax,0x6c4c4172
  4178a2:	mov    bl,0x93
  4178a4:	lods   al,BYTE PTR ds:[esi]
  4178a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a6:	lock call 0x263610e9
  4178ac:	stc    
  4178ad:	in     al,dx
  4178ae:	adc    ecx,eax
  4178b0:	xchg   esp,eax
  4178b1:	(bad)  
  4178b2:	fstp   TBYTE PTR [edi-0x5e]
  4178b5:	inc    ebx
  4178b6:	out    0x5,al
  4178b8:	retf   0xa79
  4178bb:	js     0x417885
  4178bd:	in     eax,dx
  4178be:	sbb    BYTE PTR [ebx],dl
  4178c0:	pop    ecx
  4178c1:	mov    ds:0x1141d86e,eax
  4178c6:	mov    al,ds:0x5d298cba
  4178cb:	inc    eax
  4178cc:	icebp  
  4178cd:	or     ecx,DWORD PTR [ebp+0x4803d3ca]
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	jo     0x4178ac
  4178e7:	lea    ebx,[edx]
  4178e9:	add    al,0x33
  4178eb:	jg     0x417965
  4178ed:	add    eax,0x6378787e
  4178f2:	sbb    BYTE PTR [edx+0x1f],ah
  4178f5:	retf   0x659e
  4178f8:	xchg   edi,eax
  4178f9:	pop    ebp
  4178fa:	push   edx
  4178fb:	aaa    
  4178fc:	aaa    
  4178fd:	add    eax,0x483f85b6
  417902:	ins    BYTE PTR es:[edi],dx
  417903:	cmc    
  417904:	add    esi,DWORD PTR [edi-0x2d]
  417907:	test   BYTE PTR [ebx-0x4e],al
  41790a:	les    edx,FWORD PTR [ebx+0x17]
  41790d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41790e:	sub    DWORD PTR [esi+0x3253cb6d],0x24f5aadb
  417918:	cmp    BYTE PTR [ebx+0x11e29cb9],bh
  41791e:	sub    dl,bl
  417920:	das    
  417921:	xchg   ecx,eax
  417922:	mov    WORD PTR [esi-0x3d736bb3],fs
  417928:	pushf  
  417929:	jmp    0x41798a
  41792b:	cmp    DWORD PTR [esi+ecx*4],0xf3458412
  417932:	dec    esp
  417933:	or     al,0xfa
  417935:	pop    edi
  417936:	xchg   ebp,eax
  417937:	push   esi
  417938:	ins    DWORD PTR es:[edi],dx
  417939:	test   edi,eax
  41793b:	mov    WORD PTR [eax-0x26ae0c1f],?
  417941:	and    BYTE PTR [ebx-0x4e],ah
  417944:	push   ecx
  417945:	call   DWORD PTR [esi+edi*2-0x491ab929]
  41794c:	adc    ch,0x4e
  41794f:	jno    0x41794c
  417951:	retf   
  417952:	and    BYTE PTR ds:0x4408bac3,ah
  417958:	outs   dx,BYTE PTR ds:[esi]
  417959:	div    DWORD PTR [esi+0x2ab168c2]
  41795f:	popf   
  417960:	dec    edx
  417961:	stos   DWORD PTR es:[edi],eax
  417962:	adc    ecx,ebx
  417964:	retf   0xe10a
  417967:	pop    edx
  417968:	xchg   BYTE PTR [ecx+0x67],bh
  41796b:	(bad)  
  41796c:	int    0x3a
  41796e:	push   ebx
  41796f:	add    dh,0xa2
  417972:	in     al,dx
  417973:	mov    WORD PTR [ebp-0x55],es
  417976:	lock aas 
  417978:	add    eax,0x4c387b9b
  41797d:	test   eax,0x928fb253
  417982:	into   
  417983:	push   cs
  417984:	sahf   
  417985:	es push ss
  417987:	and    DWORD PTR [ebp+0x5e],edi
  41798a:	ins    BYTE PTR es:[edi],dx
  41798b:	adc    eax,0xa28be60f
  417990:	ss pop edi
  417992:	(bad)  
  417993:	cli    
  417994:	mov    cl,0x32
  417996:	xchg   esp,eax
  417997:	xchg   BYTE PTR [ecx+edx*4+0x1],cl
  41799b:	pop    ds
  41799c:	jmp    0x41791f
  41799e:	xchg   edi,eax
  41799f:	dec    edi
  4179a0:	in     al,0xd5
  4179a2:	mov    ecx,0x5a8b7ba0
  4179a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a8:	adc    eax,0xfa7f7aa0
  4179ad:	ja     0x4179c0
  4179af:	pop    edi
  4179b0:	push   esp
  4179b1:	cli    
  4179b2:	scas   eax,DWORD PTR es:[edi]
  4179b3:	ins    DWORD PTR es:[edi],dx
  4179b4:	dec    eax
  4179b5:	bound  esi,QWORD PTR [ebx]
  4179b7:	xchg   esp,eax
  4179b8:	xor    al,dh
  4179ba:	imul   ebx,DWORD PTR [edi-0x5347c89f],0x913fb667
  4179c4:	frstor [edx+0x52c70af8]
  4179ca:	cmp    ebp,DWORD PTR [eax]
  4179cc:	jmp    ebx
  4179ce:	push   ebp
  4179cf:	push   0x35
  4179d1:	ins    DWORD PTR es:[edi],dx
  4179d2:	adc    DWORD PTR [esi+0x3a7b72a4],ebx
  4179d8:	sub    bh,ah
  4179da:	adc    al,0x9
  4179dc:	sbb    eax,0x8eeec73d
  4179e1:	jge    0x4179d2
  4179e3:	ja     0x417a1d
  4179e5:	loop   0x41796f
  4179e7:	bound  ecx,QWORD PTR [eax+0x6b]
  4179ea:	inc    edx
  4179eb:	fwait
  4179ec:	jge    0x41798b
  4179ee:	push   esi
  4179ef:	inc    ebp
  4179f0:	mov    dh,0xa
  4179f2:	ds (bad) 
  4179f4:	rol    DWORD PTR [edi],0xb5
  4179f7:	dec    esi
  4179f8:	mov    es,WORD PTR [ebp-0x15]
  4179fb:	mov    ch,0x4b
  4179fd:	mov    eax,ds:0x4b56d9
  417a02:	sub    al,BYTE PTR [ecx+0x2457617f]
  417a08:	xor    eax,0x5429a677
  417a0d:	popa   
  417a0e:	js     0x417a29
  417a10:	sub    DWORD PTR [eax+0x4c4996fb],0xa501c358
  417a1a:	inc    eax
  417a1b:	iret   
  417a1c:	push   ebp
  417a1d:	mov    esi,0xca7bc488
  417a22:	adc    eax,0xf9405006
  417a27:	int    0x9d
  417a29:	add    al,ch
  417a2b:	jp     0x417a54
  417a2d:	and    BYTE PTR [ebp+0x267f8cfb],ch
  417a33:	(bad)  
  417a34:	bound  edi,QWORD PTR [ecx+0x61]
  417a37:	(bad)  
  417a38:	push   0x7e
  417a3a:	add    ebp,DWORD PTR [edx+0x7]
  417a3d:	(bad)  
  417a3e:	dec    BYTE PTR [edi-0x3d3b14f1]
  417a44:	inc    eax
  417a45:	in     al,dx
  417a46:	cdq    
  417a47:	jp     0x417a1b
  417a49:	jmp    0x544a:0xe4049f86
  417a50:	nop
  417a51:	ins    BYTE PTR es:[edi],dx
  417a52:	mov    BYTE PTR [edx-0x36],dh
  417a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a56:	ss mov ch,0xe6
  417a59:	clc    
  417a5a:	pop    esp
  417a5b:	xchg   ebp,eax
  417a5c:	pop    ds
  417a5d:	xchg   DWORD PTR [esi+0x3796efe5],edi
  417a63:	sub    BYTE PTR [eax+0x709b5c14],bl
  417a69:	xor    bl,BYTE PTR [eax]
  417a6b:	push   eax
  417a6c:	mov    WORD PTR [esi+0x24c67e2d],gs
  417a72:	push   ebx
  417a73:	adc    bh,BYTE PTR [edx]
  417a75:	xchg   ebx,eax
  417a76:	idiv   dh
  417a78:	lahf   
  417a79:	and    edi,DWORD PTR [edi+0x39a93311]
  417a7f:	pop    eax
  417a80:	cmc    
  417a81:	(bad)  
  417a83:	add    al,0xde
  417a85:	xchg   ch,al
  417a87:	add    DWORD PTR [esi],ebp
  417a89:	int3   
  417a8a:	out    0x98,eax
  417a8c:	int3   
  417a8d:	adc    ch,dl
  417a8f:	sub    BYTE PTR [ebx+0x442d149a],cl
  417a95:	mov    cl,0x4c
  417a97:	arpl   WORD PTR gs:[eax],ax
  417a9a:	sahf   
  417a9b:	mov    cl,0xcf
  417a9d:	mov    al,ds:0x6332229b
  417aa2:	mov    al,0xbd
  417aa4:	aad    0x15
  417aa6:	daa    
  417aa7:	sbb    al,0x7b
  417aa9:	call   0x7ff853a0
  417aae:	(bad)  
  417aaf:	or     eax,DWORD PTR [ebp-0x28]
  417ab2:	pop    eax
  417ab3:	jne    0x417ad8
  417ab5:	inc    eax
  417ab6:	shl    DWORD PTR [ecx-0x71],0xb1
  417aba:	lods   eax,DWORD PTR ds:[esi]
  417abb:	addr16 mov ecx,0x4e0313b
  417ac1:	sbb    al,0x67
  417ac3:	inc    eax
  417ac4:	jbe    0x417a4d
  417ac6:	shr    BYTE PTR [edi],0xfd
  417ac9:	jg     0x417ab5
  417acb:	push   esp
  417acc:	add    ah,BYTE PTR [edx-0x7384a0ee]
  417ad2:	cdq    
  417ad3:	je     0x417b27
  417ad5:	std    
  417ad6:	(bad)
  417ad9:	dec    ebp
  417ada:	push   0xf
  417adc:	mov    ds:0x59459368,eax
  417ae1:	pop    ds
  417ae2:	push   0xffffffff
  417ae4:	imul   DWORD PTR [ebp-0x64]
  417ae7:	dec    edi
  417ae8:	sub    al,0x6d
  417aea:	stos   BYTE PTR es:[edi],al
  417aeb:	pop    ebx
  417aec:	sbb    BYTE PTR [edi-0x3f],dl
  417aef:	mov    edi,0x959f48fa
  417af4:	inc    edi
  417af5:	sbb    al,0xbe
  417af7:	inc    edx
  417af8:	xchg   ebx,eax
  417af9:	adc    eax,0x50ba81ca
  417afe:	or     BYTE PTR [ecx+0x7],dl
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x2929a96c
  417b49:	lds    edx,FWORD PTR [ecx]
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0x8078787e
  417b53:	mov    al,ds:0x5d65c18c
  417b58:	cwde   
  417b59:	push   0x62
  417b5b:	cmc    
  417b5c:	push   edx
  417b5d:	jbe    0x417ae3
  417b5f:	dec    esi
  417b60:	pop    edx
  417b61:	pop    ebx
  417b62:	mov    ecx,0x25c5ebed
  417b67:	mov    esp,0x296350e9
  417b6c:	fidiv  WORD PTR [esi-0x414df77f]
  417b72:	jecxz  0x417b6c
  417b74:	ds loopne 0x417b5e
  417b77:	retf   0xba3b
  417b7a:	ficom  WORD PTR [eax+0x2f]
  417b7d:	(bad)  
  417b7e:	lahf   
  417b7f:	fcomp  QWORD PTR ds:0x76d11728
  417b85:	repnz (bad) 
  417b87:	pop    es
  417b88:	adc    al,0xdd
  417b8a:	sub    dl,0x32
  417b8d:	shl    ebp,cl
  417b8f:	xchg   esi,eax
  417b90:	xor    eax,0xed8af6ca
  417b95:	adc    bh,al
  417b97:	mov    ah,0xeb
  417b99:	pop    esp
  417b9a:	or     cl,BYTE PTR [edi+esi*4-0x57]
  417b9e:	inc    edx
  417b9f:	mov    BYTE PTR [ebx],dh
  417ba1:	imul   esi,DWORD PTR ds:0x5f4dae58,0xffffff93
  417ba8:	mov    dh,0x2a
  417baa:	dec    eax
  417bab:	mov    edx,0xe08ae
  417bb0:	sub    DWORD PTR [ecx+0x42f378a6],edx
  417bb6:	out    dx,al
  417bb7:	jg     0x417c15
  417bb9:	or     ah,BYTE PTR [eax+0x16]
  417bbc:	popa   
  417bbd:	mov    al,0x79
  417bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc0:	inc    eax
  417bc1:	pop    ebx
  417bc2:	pop    esp
  417bc3:	ror    BYTE PTR [ebp+edx*1-0x6a78efbd],0xc
  417bcb:	xor    al,0xaf
  417bcd:	imul   ebx,edx,0xbfdd2fb
  417bd3:	mov    BYTE PTR [eax+0x30],ch
  417bd6:	aas    
  417bd7:	xchg   ebp,eax
  417bd8:	repz mov al,ds:0x94c09597
  417bde:	cli    
  417bdf:	test   DWORD PTR [edi],esp
  417be1:	mov    dl,0xdb
  417be3:	jmp    0x417c06
  417be5:	in     al,0x73
  417be7:	pop    ds
  417be8:	sbb    bh,BYTE PTR [eax+ebp*8-0x11]
  417bec:	arpl   WORD PTR [edi-0x7692837],bp
  417bf2:	mov    edi,0x99cceffd
  417bf7:	daa    
  417bf8:	mov    ebp,0x24d1b6bf
  417bfd:	inc    esi
  417bfe:	or     eax,0x646c2465
  417c03:	cmc    
  417c04:	mov    ebp,0x9cd68fd5
  417c09:	jmp    0xf0c2:0x8665922c
  417c10:	ins    DWORD PTR es:[edi],dx
  417c11:	fmul   DWORD PTR [esp+ebp*4-0x9]
  417c15:	ins    DWORD PTR es:[edi],dx
  417c16:	jg     0x417c11
  417c18:	mov    cl,0x5a
  417c1a:	sbb    eax,DWORD PTR [ecx+0x3a7914de]
  417c20:	or     DWORD PTR [ebp+0x15],0x4c
  417c24:	push   es
  417c25:	sub    bl,BYTE PTR [eax+0xc]
  417c28:	scas   eax,DWORD PTR es:[edi]
  417c29:	test   BYTE PTR [edx],ah
  417c2b:	dec    esp
  417c2c:	xor    BYTE PTR [edi+0x4a06a4df],ch
  417c32:	leave  
  417c33:	cwde   
  417c34:	mov    al,0x3f
  417c36:	jnp    0x417bbf
  417c38:	mov    eax,0x5c40defb
  417c3d:	pop    es
  417c3e:	scas   al,BYTE PTR es:[edi]
  417c3f:	cmp    al,BYTE PTR [esi]
  417c41:	mov    ds:0x2a74ffb6,eax
  417c46:	shl    cl,cl
  417c48:	aad    0x53
  417c4a:	out    dx,al
  417c4b:	xchg   edi,eax
  417c4c:	inc    ecx
  417c4d:	pop    edx
  417c4e:	mov    esp,0x670119e5
  417c53:	(bad)  
  417c55:	aas    
  417c56:	or     al,BYTE PTR [ebp-0x5c]
  417c59:	(bad)  
  417c5a:	hlt    
  417c5b:	mov    al,0xa2
  417c5d:	sub    DWORD PTR [eax+0x50],ebp
  417c60:	sub    DWORD PTR [esi+ebp*8+0x337752c3],esp
  417c67:	add    al,0xf4
  417c69:	js     0x417ca4
  417c6b:	outs   dx,BYTE PTR ds:[esi]
  417c6c:	test   BYTE PTR [bp+0x78],ch
  417c70:	(bad)  
  417c72:	mov    cl,0xb6
  417c74:	mov    ah,ch
  417c76:	out    dx,al
  417c77:	inc    eax
  417c78:	adc    eax,0x45ab0243
  417c7d:	shl    BYTE PTR [esi],cl
  417c7f:	xchg   esi,eax
  417c80:	jg     0x417ce9
  417c82:	inc    ebx
  417c83:	mov    ebp,0x9fdf9c0a
  417c88:	pop    ds
  417c89:	adc    al,0x18
  417c8b:	mov    al,0xa9
  417c8d:	pop    es
  417c8e:	nop
  417c8f:	cmp    ah,BYTE PTR [esi-0x21e0a7a1]
  417c95:	mov    dh,0x8b
  417c97:	cwde   
  417c98:	xchg   BYTE PTR [eax+0x461481e8],al
  417c9e:	ficomp DWORD PTR [ecx+0x7c]
  417ca1:	loop   0x417cf0
  417ca3:	pop    ds
  417ca4:	or     BYTE PTR [ecx+edi*8+0x30],dl
  417ca8:	add    edi,edi
  417caa:	lea    eax,[ebp+0x70f5b095]
  417cb0:	jno    0x417c32
  417cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb3:	mov    BYTE PTR [ecx+0x7e6f4038],bh
  417cb9:	int3   
  417cba:	dec    edi
  417cbb:	jmp    0x7feb0cb3
  417cc0:	xor    eax,0x94afd414
  417cc5:	push   ecx
  417cc6:	icebp  
  417cc7:	or     eax,0xe1d157d1
  417ccc:	(bad)  
  417cce:	sub    ecx,DWORD PTR ds:0xdc0726ea
  417cd4:	jmp    0xf323:0xf0026054
  417cdb:	aam    0xe0
  417cdd:	adc    dl,BYTE PTR [ebp-0xe]
  417ce0:	pop    es
  417ce1:	jl     0x417c96
  417ce3:	jge    0x417d2c
  417ce5:	and    BYTE PTR [ebx],cl
  417ce7:	dec    ebx
  417ce8:	xchg   edx,eax
  417ce9:	ja     0x417c77
  417ceb:	aam    0xb4
  417ced:	sub    eax,0x13cdf868
  417cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf3:	pop    esi
  417cf4:	push   ebx
  417cf5:	pop    es
  417cf6:	popf   
  417cf7:	ret    0xad87
  417cfa:	ficom  WORD PTR [eax+0x4e1619d3]
  417d00:	adc    al,0xaf
  417d02:	mov    ebp,0x41a3357c
  417d07:	push   esp
  417d08:	mov    esp,0xdbc37247
  417d0d:	nop
  417d0e:	xor    BYTE PTR [edx+0xb7486ca],0x39
  417d15:	arpl   WORD PTR [ecx],ax
  417d17:	js     0x417cf7
  417d19:	inc    edi
  417d1a:	sbb    DWORD PTR [esi-0x6172583b],0x63ab388
  417d24:	or     DWORD PTR ds:0x326fd54b,ebp
  417d2a:	mov    eax,0xa9b829b8
  417d2f:	inc    esi
  417d30:	jne    0x417d54
  417d32:	mov    eax,ds:0xc73b4660
  417d37:	ins    DWORD PTR es:[edi],dx
  417d38:	in     eax,0xb9
  417d3a:	stc    
  417d3b:	cmp    DWORD PTR [edx],0x87c59a02
  417d41:	nop
  417d42:	adc    al,BYTE PTR [ecx+ebp*4+0x22f013f5]
  417d49:	pop    edx
  417d4a:	cli    
  417d4b:	fstp   TBYTE PTR [esi+0x66a65906]
  417d51:	scas   eax,DWORD PTR es:[edi]
  417d52:	fdiv   QWORD PTR [esi]
  417d54:	imul   esi,ebx,0x57
  417d57:	shl    BYTE PTR [eax+esi*2],0x2b
  417d5b:	aas    
  417d5c:	inc    ecx
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a821,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a821
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a821,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a821,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a821,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a825
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a79d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a85d,0x42a851
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a855,0x42a8a9
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a795,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a855,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a82d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a779,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a811,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a811
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a811,esi
  417e51:	cmp    DWORD PTR ds:0x42a811,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a811,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	inc    DWORD PTR [edx-0x10]
  417e8f:	es in  eax,dx
  417e91:	push   ds
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	call   0x365a:0xba4f6a20
  417ea0:	in     al,0x7a
  417ea2:	es into 
  417ea4:	mov    ds:0x331197e3,eax
  417ea9:	gs push cs
  417eab:	mov    ch,0xfd
  417ead:	mov    ds:0x65f2e87f,al
  417eb2:	loopne 0x417e9f
  417eb4:	out    0xaa,eax
  417eb6:	mov    ebp,0xe164cd99
  417ebb:	and    dl,bh
  417ebd:	xor    bh,BYTE PTR [esi+edi*4-0x38]
  417ec1:	lock push es
  417ec3:	pop    ebp
  417ec4:	cmp    DWORD PTR [esi-0x2d],esi
  417ec7:	in     al,dx
  417ec8:	pusha  
  417ec9:	sti    
  417eca:	pop    es
  417ecb:	cmp    BYTE PTR [ebp-0x50],dl
  417ece:	into   
  417ecf:	pop    ecx
  417ed0:	mov    eax,ds:0x1dfe5ff4
  417ed5:	cmp    eax,0x57376b13
  417eda:	fcomp  QWORD PTR [ecx-0x5b]
  417edd:	inc    edx
  417ede:	inc    ebx
  417edf:	adc    al,0x26
  417ee1:	aaa    
  417ee2:	test   DWORD PTR [esi+eiz*8+0xc],ebp
  417ee6:	sub    eax,0xeebcf801
  417eeb:	cwde   
  417eec:	outs   dx,BYTE PTR ds:[esi]
  417eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eee:	es mov esi,0x70384c34
  417ef4:	ror    ebp,1
  417ef6:	mov    al,ds:0x92f0ed18
  417efb:	bound  esp,QWORD PTR [ecx+esi*1+0xd6ffb29]
  417f02:	cmp    al,0xff
  417f04:	pop    ds
  417f05:	inc    ecx
  417f06:	(bad)  
  417f07:	pop    edi
  417f08:	xor    eax,0xb002d6ce
  417f0d:	ror    BYTE PTR [edx-0x4d38f0b3],0x20
  417f14:	imul   eax,DWORD PTR [edx+eax*4+0x6d2dfb9f],0xf55ccd59
  417f1f:	mov    dl,0xe5
  417f21:	aad    0x95
  417f23:	or     esp,0x6a
  417f26:	popa   
  417f27:	loop   0x417f8b
  417f29:	mov    ebx,esp
  417f2b:	mov    ch,BYTE PTR [esi]
  417f2d:	aam    0x3a
  417f2f:	or     esi,DWORD PTR [ecx-0x200b1265]
  417f35:	lods   al,BYTE PTR ds:[esi]
  417f36:	inc    edx
  417f37:	addr16 call 0x9fcc3292
  417f3d:	cdq    
  417f3e:	push   0x95116616
  417f43:	xor    DWORD PTR [edx+0x195e6d4b],eax
  417f49:	in     eax,0x88
  417f4b:	push   edx
  417f4c:	jl     0x417f59
  417f4e:	jecxz  0x417f45
  417f50:	loop   0x417f08
  417f52:	test   BYTE PTR [esi-0x3ebbfdf1],bl
  417f58:	es loope 0x417f0b
  417f5b:	gs sub eax,0x8dcdbebd
  417f61:	sub    al,BYTE PTR [edx]
  417f63:	iret   
  417f64:	pop    esp
  417f65:	sbb    ah,BYTE PTR ds:0x36025fc8
  417f6b:	inc    ebx
  417f6c:	mul    DWORD PTR [eax+0x17]
  417f6f:	dec    esi
  417f70:	xchg   BYTE PTR [edx+0x4e],bl
  417f73:	daa    
  417f74:	mov    ss,ecx
  417f76:	jmp    0x5a89:0x267b3134
  417f7d:	into   
  417f7e:	cmp    BYTE PTR ds:0xbec0516d,dl
  417f84:	cmp    DWORD PTR [edx+0x3a3b0d8d],edi
  417f8a:	push   esp
  417f8b:	inc    esi
  417f8c:	lock inc edx
  417f8e:	shl    BYTE PTR [esi],1
  417f90:	push   es
  417f91:	data16 clc 
  417f93:	and    eax,0x554fd046
  417f98:	mov    dh,0x5f
  417f9a:	jb     0x417f60
  417f9c:	(bad)  
  417f9d:	fist   DWORD PTR [edx+0x4a]
  417fa0:	sub    al,0xdb
  417fa2:	pushf  
  417fa3:	mov    ebx,0xf841c9f9
  417fa8:	call   0xa2a2:0x3e20256b
  417faf:	jne    0x418001
  417fb1:	cmp    al,0x77
  417fb3:	retf   0x39e3
  417fb6:	cli    
  417fb7:	jge    0x418024
  417fb9:	push   eax
  417fba:	mov    cl,al
  417fbc:	aas    
  417fbd:	repnz addr16 loop 0x417fee
  417fc1:	fadd   DWORD PTR [esi+0x15487342]
  417fc7:	sub    DWORD PTR [eax],ecx
  417fc9:	je     0x417fda
  417fcb:	aas    
  417fcc:	jecxz  0x418004
  417fce:	ret    
  417fcf:	xchg   edi,eax
  417fd0:	bound  ebx,QWORD PTR [ebx]
  417fd2:	mov    cs,WORD PTR [ebx-0x15c8829]
  417fd8:	shl    BYTE PTR [edi-0x54ac654b],cl
  417fde:	jno    0x417feb
  417fe0:	sbb    eax,0x9378a82
  417fe5:	xlat   BYTE PTR ds:[ebx]
  417fe6:	loope  0x418011
  417fe8:	jae    0x417ff1
  417fea:	and    BYTE PTR [eax-0x17],ah
  417fed:	aam    0xda
  417fef:	push   ax
  417ff1:	or     ah,BYTE PTR [eax]
  417ff3:	adc    dl,ch
  417ff5:	fs aas 
  417ff7:	cmp    ecx,DWORD PTR [edx-0x1bc5c214]
  417ffd:	adc    DWORD PTR [esi],edi
  417fff:	jmp    0xcd70:0xec1deed3
  418006:	in     al,0x87
  418008:	inc    ebp
  418009:	mov    ch,0x13
  41800b:	mov    bl,BYTE PTR [esi-0x3209a924]
  418011:	je     0x417fae
  418013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418014:	push   cs
  418015:	xor    edx,DWORD PTR [eax+ecx*4-0x37]
  418019:	lods   eax,DWORD PTR ds:[esi]
  41801a:	add    al,BYTE PTR [ecx]
  41801c:	outs   dx,DWORD PTR ds:[esi]
  41801d:	and    al,0x8
  41801f:	ins    BYTE PTR es:[edi],dx
  418020:	rcr    ch,0x2
  418023:	cmp    DWORD PTR [edi],edx
  418025:	dec    esi
  418026:	cld    
  418027:	ret    
  418028:	std    
  418029:	jnp    0x417fda
  41802b:	(bad)
  41802f:	test   BYTE PTR [eax+0x66dbab1f],cl
  418035:	sti    
  418036:	push   ebp
  418037:	inc    edx
  418038:	adc    DWORD PTR [ebx],0xd86a3f4f
  41803e:	iret   
  41803f:	or     al,0x97
  418041:	pop    edi
  418042:	das    
  418043:	fnstsw WORD PTR [ebp+0x30]
  418046:	pop    edx
  418047:	or     DWORD PTR [ebp-0x7c],ebp
  41804a:	sti    
  41804b:	jne    0x41807a
  41804d:	mov    ch,0xb0
  41804f:	loopne 0x418026
  418051:	(bad)  
  418052:	out    0x76,eax
  418054:	cmp    BYTE PTR [ebx+0x1a027ffe],dh
  41805a:	sub    WORD PTR [esi-0x79],0x7d60
  418060:	popf   
  418061:	adc    bl,BYTE PTR [edi]
  418063:	or     esi,edx
  418065:	out    0xa6,eax
  418067:	xor    DWORD PTR [ecx],ebx
  418069:	jns    0x418096
  41806b:	sub    al,0x25
  41806d:	dec    edx
  41806e:	sub    BYTE PTR [ecx+0x10],ch
  418071:	inc    esi
  418072:	(bad)  
  418074:	jecxz  0x4180d8
  418076:	mov    ch,0x9b
  418078:	jb     0x418004
  41807a:	pop    ss
  41807b:	int3   
  41807c:	in     al,0x81
  41807e:	pop    es
  41807f:	mov    edi,0x87de971d
  418084:	movzx  ebx,WORD PTR ds:0x4bc6725e
  41808b:	and    cl,ch
  41808d:	or     DWORD PTR [ebx-0x70],edi
  418090:	xchg   edi,eax
  418091:	enter  0x4700,0x8e
  418095:	mov    fs,WORD PTR [ebx+0x8c3b93a]
  41809b:	mov    ds:0x3cb319cc,eax
  4180a0:	pop    ecx
  4180a1:	dec    BYTE PTR [ecx+0x6d]
  4180a4:	cmp    esp,DWORD PTR [esi]
  4180a6:	bound  esi,QWORD PTR [esi+0x62cdada8]
  4180ac:	xchg   BYTE PTR [edi+esi*4-0x1e],cl
  4180b0:	sti    
  4180b1:	pop    ebp
  4180b2:	push   esi
  4180b3:	lahf   
  4180b4:	pop    edx
  4180b5:	inc    eax
  4180b6:	les    esp,FWORD PTR [ecx*1-0x3f4b518f]
  4180bd:	pop    esi
  4180be:	imul   edi,ecx,0xffffffad
  4180c1:	popw   ds
  4180c3:	mov    cs,WORD PTR [ecx+0x5a53d95f]
  4180c9:	in     al,dx
  4180ca:	cwde   
  4180cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cc:	popf   
  4180cd:	jl     0x418078
  4180cf:	test   eax,0xc17267b2
  4180d4:	inc    ebp
  4180d5:	aam    0x62
  4180d7:	int    0x60
  4180d9:	fcmove st,st(6)
  4180db:	jb     0x418121
  4180dd:	out    dx,al
  4180de:	mov    al,0xee
  4180e0:	in     eax,dx
  4180e1:	stos   DWORD PTR es:[edi],eax
  4180e2:	fld    QWORD PTR [esi-0x22a206b3]
  4180e8:	xchg   edx,eax
  4180e9:	dec    ecx
  4180ea:	daa    
  4180eb:	or     al,0xcf
  4180ed:	pop    ebp
  4180ee:	fistp  DWORD PTR [esi-0x1207dcfe]
  4180f4:	mov    BYTE PTR [edi],cl
  4180f6:	or     eax,0xd1efbf1a
  4180fb:	pop    ss
  4180fc:	lahf   
  4180fd:	xor    dh,BYTE PTR [edx]
  4180ff:	pop    esi
  418100:	outs   dx,DWORD PTR ds:[esi]
  418101:	xchg   ebx,eax
  418102:	pop    esi
  418103:	call   0x7f1aa9b1
  418108:	arpl   bp,ax
  41810a:	mov    edx,0x7f688899
  41810f:	arpl   WORD PTR ds:0xd4d8e9f8,dx
  418115:	shr    BYTE PTR [ebx+edx*8-0x5d],cl
  418119:	icebp  
  41811a:	mov    ds:0x8a14a9c8,al
  41811f:	loopne 0x4180f6
  418121:	lahf   
  418122:	scas   al,BYTE PTR es:[edi]
  418123:	mov    dh,0x94
  418125:	cmp    BYTE PTR [ebx],dl
  418127:	pop    ebp
  418128:	shl    edx,1
  41812a:	(bad)  
  41812b:	mov    esi,0x4986d7f2
  418130:	enter  0x3c77,0x8d
  418134:	rol    edx,0xed
  418137:	sub    BYTE PTR [ebp+0x73],0xa4
  41813b:	in     eax,dx
  41813c:	addr16 and ecx,DWORD PTR [si+0x5f]
  418141:	jmp    0x71191392
  418146:	xchg   esp,eax
  418147:	int3   
  418148:	test   DWORD PTR [ebp-0x6d872404],eax
  41814e:	into   
  41814f:	add    dh,bh
  418151:	fistp  WORD PTR ds:0x1613f042
  418157:	retf   0x8551
  41815a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41815b:	or     BYTE PTR [ecx],ch
  41815d:	rol    DWORD PTR [eax],0xa
  418160:	ret    
  418161:	les    ebx,FWORD PTR [edi-0x1a]
  418164:	xchg   DWORD PTR [ebx+eiz*8-0x26],ebp
  418168:	retf   
  418169:	pop    ebp
  41816a:	ds addr16 lock jo 0x41813d
  41816f:	push   esi
  418170:	ja     0x4181b8
  418172:	jo     0x4181dc
  418174:	xor    eax,0x1b944968
  418179:	sub    eax,0xec58c496
  41817e:	add    DWORD PTR [ebx-0x79738900],esi
  418184:	iret   
  418185:	jne    0x4181b0
  418187:	aam    0x5a
  418189:	lods   eax,DWORD PTR ds:[esi]
  41818a:	pop    ebx
  41818b:	inc    ecx
  41818c:	ffreep st(5)
  41818e:	mov    edx,0xb462e711
  418193:	adc    edx,DWORD PTR [ecx]
  418195:	test   eax,0x330c758b
  41819a:	enter  0xf033,0x8d
  41819e:	mov    WORD PTR [esi],cs
  4181a0:	cwde   
  4181a1:	jb     0x4181d5
  4181a3:	add    BYTE PTR [ebx],dh
  4181a5:	enter  0x15e9,0x3
  4181a9:	add    BYTE PTR [eax],al
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	jl     0x4181ce
  4181b9:	add    BYTE PTR [edi+0x19],0x34
  4181bd:	jg     0x418237
  4181bf:	jnp    0x41823f
  4181c1:	js     0x41823b
  4181c3:	fwait
  4181c4:	cmp    BYTE PTR [ecx+0xef3c5d9],0x76
  4181cb:	sbb    DWORD PTR [ebp+0x4c],esp
  4181ce:	push   ds
  4181cf:	jno    0x418210
  4181d1:	sbb    eax,0x9d7b4ec9
  4181d6:	xchg   ecx,eax
  4181d7:	jne    0x4181fb
  4181d9:	sbb    eax,0xee69a7b5
  4181de:	pop    ecx
  4181df:	sbb    BYTE PTR [eax+esi*2+0x13],dh
  4181e3:	cmp    DWORD PTR [edi+0x14],edi
  4181e6:	lea    esp,[ecx+0x7dff12b2]
  4181ec:	push   0x91176e2d
  4181f1:	xor    ebp,DWORD PTR [ebx-0x26]
  4181f4:	fisub  WORD PTR [eax+esi*1]
  4181f7:	cmp    ch,BYTE PTR [edi-0x4b]
  4181fa:	or     dh,BYTE PTR [eax]
  4181fc:	js     0x418266
  4181fe:	lods   eax,DWORD PTR ds:[esi]
  4181ff:	adc    al,0x77
  418201:	xchg   esi,eax
  418202:	rcl    ebp,0xaa
  418205:	daa    
  418206:	(bad)  
  418207:	push   cs
  418208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418209:	push   0xffffff86
  41820b:	xlat   BYTE PTR ds:[ebx]
  41820c:	sbb    cl,BYTE PTR [eax]
  41820e:	sbb    esp,0x9118b44
  418214:	mov    ah,0x2
  418216:	pop    esp
  418217:	sbb    bl,ah
  418219:	mov    ds:0xce76ae44,al
  41821e:	call   0x702:0x7a8aec32
  418225:	in     eax,dx
  418226:	loop   0x41820d
  418228:	mov    edx,0xce05d23e
  41822d:	push   0x66543afd
  418232:	clc    
  418233:	ins    BYTE PTR es:[edi],dx
  418234:	idiv   DWORD PTR ds:0xefde3710
  41823a:	dec    esi
  41823b:	adc    al,0xfa
  41823d:	inc    ebx
  41823e:	xchg   ebp,eax
  41823f:	jnp    0x418222
  418241:	mov    eax,ds:0xf161039
  418246:	ins    DWORD PTR es:[edi],dx
  418247:	push   ds
  418248:	mov    WORD PTR [ebx-0x7af69e93],?
  41824e:	push   0xffffff99
  418250:	(bad)  
  418251:	mov    bl,0xf7
  418253:	cld    
  418254:	sbb    bh,cl
  418256:	xor    eax,edx
  418258:	xchg   DWORD PTR [ebp-0x3d4627fd],ecx
  41825e:	mov    BYTE PTR [edx+0x36],ch
  418261:	push   ss
  418262:	in     al,0xef
  418264:	cmp    DWORD PTR ds:0xb7ede8f8,edx
  41826a:	dec    edx
  41826b:	push   ebp
  41826c:	stos   DWORD PTR es:[edi],eax
  41826d:	mov    al,ds:0x5940400c
  418272:	dec    edx
  418273:	ficomp DWORD PTR [ebx]
  418275:	rcr    DWORD PTR [ebx-0x38],cl
  418278:	rol    DWORD PTR [ecx-0x5a88f02f],1
  41827e:	push   0x79
  418280:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  418282:	outs   dx,BYTE PTR ds:[esi]
  418283:	pushf  
  418284:	arpl   WORD PTR [eax],ax
  418286:	xor    al,0xe0
  418288:	mov    ds:0x3902e8f9,al
  41828d:	cmp    ch,BYTE PTR [ecx+0x39]
  418290:	or     ch,BYTE PTR [ebx]
  418292:	scas   al,BYTE PTR es:[edi]
  418293:	inc    esi
  418294:	stos   DWORD PTR es:[edi],eax
  418295:	inc    edx
  418296:	xor    edx,DWORD PTR [eax+0x6b]
  418299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41829a:	xlat   BYTE PTR ds:[ebx]
  41829b:	mov    ah,0xcd
  41829d:	pop    ecx
  41829e:	fidivr WORD PTR [edx+0x76c3dc66]
  4182a4:	push   0x701f381a
  4182a9:	(bad)  
  4182aa:	mov    edi,0x7d68dd59
  4182af:	pop    esp
  4182b0:	xor    ebx,DWORD PTR [eax]
  4182b2:	cmp    ebp,DWORD PTR [eax]
  4182b4:	test   eax,0x796c043d
  4182b9:	scas   eax,DWORD PTR es:[edi]
  4182ba:	arpl   WORD PTR [edi+0x30],bx
  4182bd:	add    eax,0x7df485a
  4182c2:	inc    esi
  4182c3:	add    dl,BYTE PTR [ebx]
  4182c5:	aas    
  4182c6:	jmp    0x8532:0xc18a9841
  4182cd:	test   DWORD PTR [ecx-0x7e9fe5c1],edi
  4182d3:	in     al,dx
  4182d4:	sbb    DWORD PTR [eax-0x477bfd33],0x96c96df5
  4182de:	loopne 0x418324
  4182e0:	lods   eax,DWORD PTR ds:[esi]
  4182e1:	cmp    eax,0x8d0808db
  4182e6:	fwait
  4182e7:	ja     0x418341
  4182e9:	sar    DWORD PTR [ebp+0x73d41300],cl
  4182ef:	sub    DWORD PTR [eax-0x61],0xffffffa5
  4182f3:	cdq    
  4182f4:	aad    0x23
  4182f6:	sub    BYTE PTR [ebp-0x47],ah
  4182f9:	test   eax,0xf1100dcb
  4182fe:	ins    BYTE PTR es:[edi],dx
  4182ff:	inc    ebp
  418300:	xchg   esp,eax
  418301:	inc    eax
  418302:	mov    WORD PTR [edx-0x32],ds
  418305:	hlt    
  418306:	dec    ebp
  418307:	cli    
  418308:	inc    edx
  418309:	outs   dx,DWORD PTR ds:[esi]
  41830a:	dec    eax
  41830b:	jb     0x41831e
  41830d:	nop
  41830e:	clc    
  41830f:	push   0xff42c074
  418314:	and    dl,BYTE PTR [edi-0x53]
  418317:	pop    ss
  418318:	mov    bl,0x3d
  41831a:	jo     0x418362
  41831c:	fsub   st,st(1)
  41831e:	jmp    0x5d18:0xbb1d22f3
  418325:	stos   BYTE PTR es:[edi],al
  418326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418327:	and    ebx,DWORD PTR [eax-0x12]
  41832a:	iret   
  41832b:	and    al,BYTE PTR [edx+ecx*1-0x9]
  41832f:	inc    ebp
  418330:	std    
  418331:	call   0xf9e2:0x511a4cc7
  418338:	and    al,BYTE PTR [edi+0x210f7dba]
  41833e:	sub    BYTE PTR [edi+0x7d],0xa1
  418342:	cs push ds
  418344:	shr    eax,cl
  418346:	sub    ebx,DWORD PTR [edx-0x3ed1bbe]
  41834c:	mov    fs,WORD PTR [edi-0x38]
  41834f:	cmp    al,0xd5
  418351:	jbe    0x4182de
  418353:	jo     0x418381
  418355:	aam    0x1b
  418357:	and    al,dh
  418359:	and    DWORD PTR [ebx-0x3b],edi
  41835c:	adc    ecx,ecx
  41835e:	sbb    DWORD PTR [edi-0x68bb4327],esi
  418364:	pop    edx
  418365:	fcomip st,st(1)
  418367:	scas   al,BYTE PTR es:[edi]
  418368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418369:	mov    dl,0x62
  41836b:	(bad)  
  41836d:	dec    edi
  41836e:	int3   
  41836f:	jp     0x4182f6
  418371:	push   es
  418372:	(bad)  
  418374:	mov    dl,0xed
  418376:	or     bl,BYTE PTR [ebx+eax*1]
  418379:	inc    esi
  41837a:	xchg   edi,eax
  41837b:	and    al,0xce
  41837d:	fnstcw WORD PTR [eax+0x1b]
  418380:	dec    ecx
  418381:	test   eax,0x8492a1ce
  418386:	xor    DWORD PTR [esi-0x29],0xffffffaf
  41838a:	fs sti 
  41838c:	ret    0xcdd7
  41838f:	adc    bl,BYTE PTR [esi-0x27]
  418392:	int3   
  418393:	mov    cl,0x14
  418395:	aas    
  418396:	test   eax,0x169fbe4b
  41839b:	adc    al,0xf3
  41839d:	repz loope 0x41836e
  4183a0:	fsubr  DWORD PTR [edx]
  4183a2:	enter  0xd2ec,0x49
  4183a6:	and    BYTE PTR [edi],bh
  4183a8:	retf   
  4183a9:	std    
  4183aa:	cmp    BYTE PTR [ecx],cl
  4183ac:	dec    edi
  4183ad:	push   edx
  4183ae:	sub    BYTE PTR [ebp+0x50],ah
  4183b1:	sub    DWORD PTR [ecx-0xd4ff667],0x297af82d
  4183bb:	enter  0x24e9,0xd2
  4183bf:	or     edx,esp
  4183c1:	and    eax,ecx
  4183c3:	sub    dl,dl
  4183c5:	mov    BYTE PTR [ecx-0x49],0xcb
  4183c9:	pop    ebp
  4183ca:	jecxz  0x4183ae
  4183cc:	(bad)
  4183d0:	push   esp
  4183d1:	mov    edi,0x4ec03bbb
  4183d6:	pusha  
  4183d7:	js     0x41844c
  4183d9:	mov    ah,0xed
  4183db:	adc    edx,DWORD PTR [ebp-0x4f]
  4183de:	(bad)  
  4183df:	or     al,0xd3
  4183e1:	stc    
  4183e2:	addr16 mov ecx,edx
  4183e5:	(bad)  
  4183e6:	ins    DWORD PTR es:[edi],dx
  4183e7:	push   esi
  4183e8:	push   eax
  4183e9:	cmc    
  4183ea:	lea    edi,[edi-0x22e7b420]
  4183f0:	push   edi
  4183f1:	inc    esp
  4183f2:	loopne 0x4183f6
  4183f4:	and    eax,0x4b998a44
  4183f9:	jns    0x418454
  4183fb:	cmp    al,0x62
  4183fd:	imul   edx,DWORD PTR [eax],0x6d3cd999
  418403:	xlat   BYTE PTR ds:[ebx]
  418404:	mov    ecx,DWORD PTR [edx]
  418406:	push   DWORD PTR [ebp+0x6b]
  418409:	add    al,0x73
  41840b:	mov    ch,ch
  41840d:	push   ebx
  41840e:	outs   dx,DWORD PTR ds:[esi]
  41840f:	dec    esi
  418410:	pusha  
  418411:	ins    BYTE PTR es:[edi],dx
  418412:	test   BYTE PTR [esi+0x24],bh
  418415:	repnz add eax,0xfaa718bd
  41841b:	mov    eax,ds:0xda9beeb
  418420:	loopne 0x4183ab
  418422:	cwde   
  418423:	test   al,0x37
  418425:	(bad)  
  418426:	ins    DWORD PTR es:[edi],dx
  418427:	outs   dx,DWORD PTR ds:[esi]
  418428:	xchg   ebp,eax
  418429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842a:	jmp    0xac95:0x402e6354
  418431:	pop    esp
  418432:	xor    ebp,DWORD PTR [eax+0x430716ed]
  418438:	sbb    bh,BYTE PTR [ecx-0x1806ebba]
  41843e:	jne    0x418427
  418440:	jmp    0x8fafd0a0
  418445:	mov    cl,0x21
  418447:	outs   dx,DWORD PTR ds:[esi]
  418448:	cmp    eax,0x351176e0
  41844d:	or     bl,BYTE PTR [ecx-0x5f]
  418450:	out    dx,eax
  418451:	lahf   
  418452:	lods   al,BYTE PTR ds:[esi]
  418453:	fldcw  WORD PTR [edi]
  418455:	sti    
  418456:	icebp  
  418457:	shr    ch,cl
  418459:	inc    esi
  41845a:	xor    cl,BYTE PTR [edi+0x76]
  41845d:	(bad)  
  41845e:	fild   DWORD PTR [ecx+0x24]
  418461:	or     al,0x99
  418463:	loope  0x4184df
  418465:	pop    ebp
  418466:	mov    bh,BYTE PTR [ebx]
  418468:	adc    DWORD PTR [ebx+edx*4-0x39],edi
  41846c:	mov    al,0x16
  41846e:	sbb    al,0x3f
  418470:	cli    
  418471:	and    BYTE PTR [ebp-0x7a75822d],ch
  418477:	cmp    BYTE PTR [edx-0x5a6b9d77],cl
  41847d:	aad    0xc
  41847f:	push   es
  418480:	push   edi
  418481:	xchg   DWORD PTR [ecx+ecx*4],esi
  418484:	inc    esp
  418485:	or     BYTE PTR ss:[ebx+ebx*8-0x1],dh
  41848a:	sti    
  41848b:	sbb    al,0xd6
  41848d:	pop    edi
  41848e:	add    DWORD PTR [ecx-0x12],esp
  418491:	rol    bh,cl
  418493:	fcom   DWORD PTR [edx]
  418495:	dec    esi
  418496:	(bad)  
  418498:	in     al,dx
  418499:	out    dx,al
  41849a:	xchg   ebp,eax
  41849b:	popf   
  41849c:	or     eax,0xd7b7bd6a
  4184a1:	mov    ah,0x16
  4184a3:	mov    bl,0xcc
  4184a5:	mov    esp,0xf970067a
  4184aa:	std    
  4184ab:	in     al,dx
  4184ac:	(bad)  
  4184ad:	xchg   ebp,eax
  4184ae:	rcr    ecx,0x72
  4184b1:	sar    BYTE PTR [eax-0x73c728ff],1
  4184b7:	outs   dx,BYTE PTR ds:[esi]
  4184b8:	xor    al,bh
  4184ba:	fwait
  4184bb:	idiv   DWORD PTR [ecx+ecx*4-0x8]
  4184bf:	stos   BYTE PTR es:[edi],al
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x2aec6d48
  4184e3:	xor    eax,0x3914f302
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	(bad)  
  4184f0:	pop    edx
  4184f1:	add    eax,DWORD PTR [ecx-0x35]
  4184f4:	pop    eax
  4184f5:	add    cl,bl
  4184f7:	out    dx,eax
  4184f8:	pop    ebp
  4184f9:	dec    ecx
  4184fa:	icebp  
  4184fb:	jle    0x418572
  4184fd:	dec    ecx
  4184fe:	sahf   
  4184ff:	pop    ss
  418500:	cmp    BYTE PTR [ebx+0x5a],al
  418503:	call   0x8cfc:0x392d3f0
  41850a:	jns    0x4184bd
  41850c:	adc    al,bh
  41850e:	jecxz  0x41855c
  418510:	imul   ebp,DWORD PTR [ebx+0x4],0x6b
  418514:	cmp    edx,ebx
  418516:	pop    eax
  418517:	pop    edx
  418518:	mov    bh,0x3e
  41851a:	stos   BYTE PTR es:[edi],al
  41851b:	mov    edx,0x8e7ec35b
  418520:	(bad)  
  418521:	(bad)  
  418523:	outs   dx,DWORD PTR ds:[esi]
  418524:	mov    cl,0x36
  418526:	lods   al,BYTE PTR ds:[esi]
  418527:	mov    eax,ds:0xb3f64188
  41852c:	mov    ?,WORD PTR [esi]
  41852e:	adc    DWORD PTR [edx],edx
  418530:	pop    edi
  418531:	lods   eax,DWORD PTR ds:[esi]
  418532:	pop    ss
  418533:	pop    ebp
  418534:	lock pop es
  418536:	push   edi
  418537:	mov    al,ds:0x316c08fe
  41853c:	push   es
  41853d:	push   edx
  41853e:	push   edi
  41853f:	sub    DWORD PTR [ebp-0x2b],ebx
  418542:	nop
  418543:	fiadd  WORD PTR [edi+ebp*4+0x4]
  418547:	nop
  418548:	mov    edx,0xb7346c5f
  41854d:	cdq    
  41854e:	jle    0x4185cd
  418550:	pushf  
  418551:	fwait
  418552:	xor    eax,0xb45afd35
  418557:	mov    ds:0x34d21231,eax
  41855c:	adc    al,0x3b
  41855e:	retf   
  41855f:	inc    edi
  418560:	dec    eax
  418561:	(bad)  
  418562:	sbb    ch,BYTE PTR ds:[esi]
  418565:	sub    eax,0xf2e690f1
  41856a:	in     al,0xe
  41856c:	mov    ah,dl
  41856e:	jge    0x418572
  418570:	ret    0x7c7
  418573:	pop    esp
  418574:	imul   edx,DWORD PTR [ebp-0x76261a7d],0x58daeac2
  41857e:	lds    esp,FWORD PTR [esi+0x27074e80]
  418584:	enter  0x4982,0x5b
  418588:	in     al,dx
  418589:	lea    edx,[ebx*8+0x51a8621c]
  418590:	xchg   edx,eax
  418591:	loope  0x41853d
  418593:	ins    BYTE PTR es:[edi],dx
  418594:	cmp    al,0x82
  418596:	es cmp si,di
  41859a:	jmp    0x41854f
  41859c:	push   ebp
  41859d:	mov    dl,0xac
  41859f:	add    eax,0x218a5f04
  4185a4:	jl     0x4185b7
  4185a6:	push   ebp
  4185a7:	data16 mov al,ch
  4185aa:	out    0xee,eax
  4185ac:	(bad)  
  4185ad:	scas   al,BYTE PTR es:[edi]
  4185ae:	sub    DWORD PTR [edi+ecx*4],esi
  4185b1:	mov    ds:0xcfd39412,eax
  4185b6:	push   ds
  4185b7:	rcr    DWORD PTR [edi+ecx*8],1
  4185ba:	in     al,dx
  4185bb:	pop    ecx
  4185bc:	clc    
  4185bd:	loopne 0x418583
  4185bf:	cmp    ch,dh
  4185c1:	dec    ebp
  4185c2:	test   DWORD PTR [eax],edi
  4185c4:	xor    DWORD PTR [ebx+0x38200e0f],ecx
  4185ca:	cmp    DWORD PTR [ebp-0x51],0xc10a042
  4185d1:	repz daa 
  4185d3:	pop    esi
  4185d4:	ror    DWORD PTR [ecx+0x23eda48e],cl
  4185da:	ins    BYTE PTR es:[edi],dx
  4185db:	lahf   
  4185dc:	test   ebx,esi
  4185de:	and    ebx,DWORD PTR [ebx]
  4185e0:	retf   0x72a0
  4185e3:	ror    bh,cl
  4185e5:	mov    esp,0x116623f0
  4185ea:	into   
  4185eb:	add    edi,DWORD PTR [edi-0x333460af]
  4185f1:	cmp    ch,BYTE PTR [eax-0x7ef1f0ad]
  4185f7:	retf   0x10b2
  4185fa:	inc    ecx
  4185fb:	push   ebx
  4185fc:	pop    ebx
  4185fd:	cmc    
  4185fe:	ja     0x4185d1
  418600:	sub    eax,0x5931dd09
  418605:	lods   al,BYTE PTR ds:[esi]
  418606:	adc    DWORD PTR [eax+eiz*2-0x11],0x60
  41860b:	sub    DWORD PTR [ebx+0x3d28943d],esi
  418611:	dec    edi
  418612:	les    ecx,FWORD PTR ds:0x70cf87f2
  418618:	jnp    0x4185b9
  41861a:	jge    0x4185cd
  41861c:	mov    edi,esi
  41861e:	jne    0x41860b
  418620:	cld    
  418621:	mov    ds:0x83ea4778,al
  418626:	pop    ebx
  418627:	push   cs
  418628:	cli    
  418629:	push   ebp
  41862a:	mov    bh,0x39
  41862c:	ja     0x4186a1
  41862e:	js     0x418678
  418630:	mul    BYTE PTR [eax]
  418632:	jg     0x41863e
  418634:	ss push edi
  418636:	xchg   BYTE PTR [edx-0x18],ch
  418639:	lahf   
  41863a:	sbb    ecx,DWORD PTR [ebx+0x21]
  41863d:	nop
  41863e:	push   ds
  41863f:	fcmovb st,st(5)
  418641:	sbb    bl,BYTE PTR [esp+ecx*1-0x2b]
  418645:	pop    edx
  418646:	test   eax,0xe9393608
  41864b:	pushf  
  41864c:	xchg   esi,eax
  41864d:	add    DWORD PTR [edi+0x1eda3739],0x1ed985bf
  418657:	div    ecx
  418659:	push   0x33
  41865b:	jno    0x4185e5
  41865d:	stc    
  41865e:	xor    DWORD PTR [esi+ecx*4+0x12],esi
  418662:	xchg   ebx,eax
  418663:	push   0x7e50f89e
  418668:	pop    es
  418669:	scas   al,BYTE PTR es:[edi]
  41866a:	gs mov eax,0xd6b9a470
  418670:	(bad)  
  418671:	dec    edx
  418672:	clc    
  418673:	push   esp
  418674:	jge    0x418621
  418676:	dec    edi
  418677:	push   cs
  418678:	mov    ds:0x2b78fc71,al
  41867d:	push   edx
  41867e:	sbb    esi,DWORD PTR [esi]
  418680:	jl     0x41867a
  418682:	pop    ebp
  418683:	or     al,BYTE PTR [esi-0x17c3a41a]
  418689:	add    al,0x4e
  41868b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868c:	xor    DWORD PTR [ebx+0x75],0xc97f829d
  418693:	sub    eax,0x17eacbcf
  418698:	jnp    0x418635
  41869a:	stc    
  41869b:	loope  0x41866b
  41869d:	inc    eax
  41869e:	mov    gs,WORD PTR [eax+0x35608c2e]
  4186a4:	ret    
  4186a5:	jg     0x4186af
  4186a7:	sbb    DWORD PTR [eax-0x59],esp
  4186aa:	pop    ss
  4186ab:	inc    DWORD PTR [ecx]
  4186ad:	loope  0x4186b7
  4186af:	cli    
  4186b0:	shr    BYTE PTR [ecx+0x62],0xa6
  4186b4:	push   eax
  4186b5:	dec    esp
  4186b6:	repnz pop ecx
  4186b8:	lods   al,BYTE PTR ds:[esi]
  4186b9:	sbb    bh,BYTE PTR [ebx+eax*1]
  4186bc:	int3   
  4186bd:	xchg   esi,eax
  4186be:	out    dx,al
  4186bf:	dec    esi
  4186c0:	xor    al,0x30
  4186c2:	pop    ss
  4186c3:	sub    DWORD PTR [ebx],esp
  4186c5:	out    0xcb,al
  4186c7:	adc    ch,BYTE PTR [esp+esi*8]
  4186ca:	mov    ds:0xc69359b6,eax
  4186cf:	jno    0x418662
  4186d1:	push   esp
  4186d2:	adc    dh,BYTE PTR [esp+edx*1-0x2f]
  4186d6:	pop    eax
  4186d7:	pop    ebx
  4186d8:	jbe    0x418670
  4186da:	ss mov esp,0x9ea693b
  4186e0:	mov    al,0x38
  4186e2:	(bad)  
  4186e3:	leave  
  4186e4:	leave  
  4186e5:	adc    al,0xb8
  4186e7:	inc    edx
  4186e8:	add    DWORD PTR [ebx-0x50],ebx
  4186eb:	jnp    0x4186ed
  4186ed:	loopne 0x4186a1
  4186ef:	mov    WORD PTR [edi+0x3a42a535],gs
  4186f5:	jp     0x4186ea
  4186f7:	int    0x4b
  4186f9:	push   es
  4186fa:	xchg   ebx,eax
  4186fb:	xor    eax,0xa3613f38
  418700:	cmp    BYTE PTR [ebx],al
  418702:	jge    0x4186fd
  418704:	aam    0xee
  418706:	test   al,0xb7
  418708:	and    eax,0xeb17f365
  41870d:	mov    ebp,0xe7b26510
  418712:	stc    
  418713:	push   es
  418714:	out    dx,al
  418715:	rcr    DWORD PTR [eax+0x3a],1
  418718:	out    0x7c,eax
  41871a:	xor    esp,DWORD PTR [edx]
  41871c:	pusha  
  41871d:	leave  
  41871e:	neg    DWORD PTR [edx]
  418720:	xor    eax,0x6922dbb3
  418725:	xlat   BYTE PTR ds:[ebx]
  418726:	adc    eax,0x1c8933a0
  41872b:	out    dx,eax
  41872c:	mov    WORD PTR [esi],cs
  41872e:	sub    al,BYTE PTR [esi]
  418730:	push   ds
  418731:	psubw  mm6,mm0
  418734:	add    al,0xe5
  418736:	mov    ebx,0xeac031dd
  41873b:	pop    edi
  41873c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41873e:	int    0xbf
  418740:	sti    
  418741:	pop    ss
  418742:	jle    0x418756
  418744:	cld    
  418745:	(bad)  
  418746:	sbb    edi,DWORD PTR [ebx+0x5c]
  418749:	dec    esp
  41874a:	or     bl,ch
  41874c:	mov    ebp,0x604bbc23
  418751:	mov    esi,DWORD PTR [ebx]
  418753:	jmp    0xd363333b
  418758:	fld    DWORD PTR [ebp+0x4e03b84d]
  41875e:	scas   eax,DWORD PTR es:[edi]
  41875f:	loope  0x41871c
  418761:	retf   0x62dd
  418764:	popa   
  418765:	or     eax,0x6f679c4c
  41876a:	aad    0x37
  41876c:	xchg   ebx,eax
  41876d:	sbb    ebx,DWORD PTR [ebx]
  41876f:	lods   eax,DWORD PTR ds:[esi]
  418770:	test   al,0xf3
  418772:	mov    ecx,0xcf4ba252
  418777:	jo     0x418732
  418779:	je     0x4187ba
  41877b:	xchg   DWORD PTR ds:[bx+di-0x6628],esi
  418781:	mov    BYTE PTR [esp+edi*1],dh
  418784:	or     edx,0x5e5ff9c7
  41878a:	sub    al,BYTE PTR [ecx-0x79]
  41878d:	sub    DWORD PTR [ecx],edx
  41878f:	sbb    edi,edx
  418791:	jmp    0x71e263e8
  418796:	mov    dl,BYTE PTR [esp+eax*8+0x1b1ff715]
  41879d:	sub    BYTE PTR [ebp-0x7d26d80c],dl
  4187a3:	inc    esp
  4187a4:	push   ebx
  4187a5:	xchg   ebx,eax
  4187a6:	loope  0x4187e6
  4187a8:	sub    eax,DWORD PTR [esi+0x1cbf5a82]
  4187ae:	in     eax,0xe4
  4187b0:	sub    BYTE PTR [esi],0x3f
  4187b3:	iret   
  4187b4:	ss stc 
  4187b6:	pop    ds
  4187b7:	inc    ecx
  4187b8:	mov    cl,BYTE PTR [edi+0x480e87ca]
  4187be:	retf   0xe361
  4187c1:	cli    
  4187c2:	pop    ebp
  4187c3:	mov    ds:0xa5decddb,al
  4187c8:	rep stos DWORD PTR es:[edi],eax
  4187ca:	add    al,0x87
  4187cc:	jno    0x418778
  4187ce:	fwait
  4187cf:	push   esp
  4187d0:	out    0xcc,al
  4187d2:	je     0x418841
  4187d4:	add    edi,DWORD PTR ss:[eax+0x69]
  4187d8:	repnz dec esp
  4187da:	mov    ds:0x33fd009c,eax
  4187df:	fidiv  DWORD PTR [esi+eiz*2-0x60]
  4187e3:	and    BYTE PTR [ecx+0xd],cl
  4187e6:	in     al,0x92
  4187e8:	mov    cl,0x5d
  4187ea:	inc    BYTE PTR [ecx-0x3272973f]
  4187f0:	dec    DWORD PTR [ebx+0x3f033f1]
  4187f6:	jne    0x418800
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0x57921af2
  41883e:	(bad)  
  41883f:	pushf  
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	out    dx,al
  418849:	(bad)
  41884c:	outs   dx,BYTE PTR ds:[esi]
  41884d:	int3   
  41884e:	ret    
  41884f:	fwait
  418850:	add    eax,0x5187cfac
  418855:	add    al,0xd1
  418857:	jb     0x418881
  418859:	jns    0x418821
  41885b:	ja     0x4188bd
  41885d:	(bad)  
  41885e:	cdq    
  41885f:	fwait
  418860:	jb     0x418877
  418862:	dec    esi
  418863:	and    al,0x41
  418865:	je     0x418811
  418867:	dec    eax
  418868:	addr16 or al,0x89
  41886b:	dec    esi
  41886c:	dec    edi
  41886d:	or     al,0x76
  41886f:	addr16 pop es
  418871:	mov    edi,0x6a18ed53
  418876:	ins    DWORD PTR es:[edi],dx
  418877:	aaa    
  418878:	dec    edi
  418879:	fwait
  41887a:	ins    BYTE PTR es:[edi],dx
  41887b:	fsubr  st(2),st
  41887d:	mov    esp,DWORD PTR [edx]
  41887f:	(bad)  
  418880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418881:	or     eax,0x85a541b6
  418886:	adc    eax,0x29db4807
  41888b:	repz adc dl,BYTE PTR [ebx+esi*1]
  41888f:	nop
  418890:	inc    esi
  418891:	sbb    DWORD PTR [ecx-0x28],esi
  418894:	add    eax,0x9018c4d4
  418899:	ins    DWORD PTR es:[edi],dx
  41889a:	int    0xa7
  41889c:	jns    0x4188e5
  41889e:	iret   
  41889f:	mov    dh,0x67
  4188a1:	jne    0x418920
  4188a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a4:	imul   eax,DWORD PTR [edx+0x560c65e2],0xffffffba
  4188ab:	and    eax,0x5c365572
  4188b0:	cdq    
  4188b1:	or     al,0x90
  4188b3:	or     al,0x49
  4188b5:	stos   DWORD PTR es:[edi],eax
  4188b6:	sar    DWORD PTR [edx+0x41],cl
  4188b9:	cmp    eax,eax
  4188bb:	mov    edi,0xa9f3d132
  4188c0:	pop    ebx
  4188c1:	push   0x22
  4188c3:	pusha  
  4188c4:	popa   
  4188c5:	mov    al,ds:0xe436a843
  4188ca:	jmp    0x51485ccc
  4188cf:	xor    BYTE PTR [ebp-0x64],bh
  4188d2:	push   cs
  4188d3:	or     al,0x9b
  4188d5:	jecxz  0x418938
  4188d7:	mov    esi,0xa8d27aa1
  4188dc:	outs   dx,DWORD PTR ds:[esi]
  4188dd:	cmp    BYTE PTR [ecx+0x40],cl
  4188e0:	(bad)  
  4188e1:	shr    DWORD PTR [esi+edx*8+0x6da7408e],1
  4188e8:	fisttp WORD PTR [ecx-0x1787dd82]
  4188ee:	outs   dx,DWORD PTR ds:[esi]
  4188ef:	push   es
  4188f0:	mov    es,WORD PTR [edx]
  4188f2:	lods   eax,DWORD PTR ds:[esi]
  4188f3:	mov    esp,0x80dd27ae
  4188f8:	and    DWORD PTR [esi-0x268e3bcb],esi
  4188fe:	cmp    esp,edx
  418900:	je     0x4188ce
  418902:	sbb    DWORD PTR [ecx-0x4d],ebx
  418905:	add    al,0xd5
  418907:	sbb    ebp,DWORD PTR [ebx+0x38]
  41890a:	std    
  41890b:	or     ah,BYTE PTR [edi-0x68040df6]
  418911:	mov    ch,0xce
  418913:	pop    ds
  418914:	loope  0x418970
  418916:	inc    esi
  418917:	cs in  eax,0xa
  41891a:	leave  
  41891b:	push   esp
  41891c:	cmp    edx,DWORD PTR ds:0x796c516f
  418922:	fs sbb ebp,edx
  418925:	inc    ebp
  418926:	jl     0x41890e
  418928:	hlt    
  418929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892a:	cmp    DWORD PTR [esi],ebx
  41892c:	mov    ds:0x217ed5f3,eax
  418931:	mov    edi,0x31ad72d1
  418936:	push   esi
  418937:	pusha  
  418938:	xor    DWORD PTR [ecx-0x22],edi
  41893b:	sbb    al,0xf0
  41893d:	jmp    0x76fd:0x9641bb24
  418944:	neg    BYTE PTR [eax-0x6]
  418947:	or     eax,0xbe97bef4
  41894c:	xchg   esp,eax
  41894d:	cs xchg ecx,eax
  41894f:	cmp    eax,0xa988ffbb
  418954:	fldenv [eax]
  418956:	retf   
  418957:	les    esp,FWORD PTR [ebp-0x5019486a]
  41895d:	dec    eax
  41895e:	scas   eax,DWORD PTR es:[edi]
  41895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418960:	mov    al,0xb7
  418962:	xchg   ah,bl
  418964:	les    ecx,FWORD PTR [eax]
  418966:	fstp   QWORD PTR [edi+0x3d49df78]
  41896c:	adc    bl,BYTE PTR [edx+ecx*1]
  41896f:	rcr    BYTE PTR [edi+0x77],1
  418972:	adc    BYTE PTR [esi],dh
  418974:	sbb    BYTE PTR [ecx],0x86
  418977:	mov    dl,0xf5
  418979:	or     DWORD PTR [edi+0x5a],0xffffffc8
  41897d:	in     al,0x5b
  41897f:	pop    ebx
  418980:	sub    BYTE PTR [edi-0x9e48037],cl
  418986:	push   edx
  418987:	(bad)  
  418988:	in     eax,dx
  418989:	mov    bh,0x68
  41898b:	cmp    al,BYTE PTR [esi-0x11]
  41898e:	cmp    al,cl
  418990:	shl    bh,cl
  418992:	es dec esp
  418994:	int3   
  418995:	retf   
  418996:	pop    ss
  418997:	sar    BYTE PTR [ebx-0x3f43e969],1
  41899d:	cld    
  41899e:	cli    
  41899f:	dec    ecx
  4189a0:	mov    esi,0x5fe167a6
  4189a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189a6:	nop
  4189a7:	inc    edx
  4189a8:	mov    ds:0x68e782e9,eax
  4189ad:	xor    al,0x4a
  4189af:	ins    DWORD PTR es:[edi],dx
  4189b0:	dec    ebx
  4189b1:	out    0x99,eax
  4189b3:	enter  0xda9a,0x72
  4189b7:	fldcw  WORD PTR [ebp+0x52369f9c]
  4189bd:	outs   dx,BYTE PTR ds:[esi]
  4189be:	dec    ebp
  4189bf:	mov    bl,0xce
  4189c1:	mov    al,0xa1
  4189c3:	pop    ebp
  4189c4:	fadd   st(1),st
  4189c6:	or     esi,edi
  4189c8:	mov    eax,0x188b27b6
  4189cd:	(bad)  
  4189ce:	xlat   BYTE PTR ds:[ebx]
  4189cf:	call   0x105d:0x22fb6a02
  4189d6:	mov    BYTE PTR [ebx+ebp*8-0x36257726],dh
  4189dd:	arpl   WORD PTR [bx+si-0x3b80],cx
  4189e2:	jnp    0x418a3c
  4189e4:	addr16 xchg edx,eax
  4189e6:	jo     0x418978
  4189e8:	arpl   WORD PTR [edx+0x1b],cx
  4189eb:	xchg   edi,eax
  4189ec:	mov    esi,0xfccc4d4c
  4189f1:	outs   dx,DWORD PTR cs:[esi]
  4189f3:	js     0x4189c2
  4189f5:	sub    ah,0xce
  4189f8:	sub    cl,ch
  4189fa:	and    bh,dl
  4189fc:	fdiv   DWORD PTR [ebx+0x74179f21]
  418a02:	ret    
  418a03:	mov    eax,0xf9015bf8
  418a08:	or     ch,ah
  418a0a:	adc    bh,BYTE PTR [edx]
  418a0c:	mov    dh,0xba
  418a0e:	xor    al,0x35
  418a10:	outs   dx,BYTE PTR ds:[esi]
  418a11:	daa    
  418a12:	pop    DWORD PTR [ebx-0x59]
  418a15:	in     eax,dx
  418a16:	xchg   edx,eax
  418a17:	push   edx
  418a18:	je     0x418a96
  418a1a:	fdivr  QWORD PTR [ebp+0x47]
  418a1d:	sub    al,BYTE PTR [edx]
  418a1f:	mov    bh,0x46
  418a21:	(bad)  
  418a22:	fbstp  TBYTE PTR [esi+0x477971fb]
  418a28:	int    0xb
  418a2a:	cmp    dl,BYTE PTR [ebx+0x37]
  418a2d:	ins    DWORD PTR es:[edi],dx
  418a2e:	(bad)  
  418a2f:	repnz push ss
  418a31:	lahf   
  418a32:	and    al,0xfa
  418a34:	mov    ah,0x38
  418a37:	not    DWORD PTR [ebx]
  418a39:	test   eax,0xbe426faa
  418a3f:	(bad)  [ebx]
  418a41:	mov    al,ds:0x74f49d89
  418a46:	push   edx
  418a47:	inc    edx
  418a48:	test   al,0x87
  418a4a:	mov    esi,0x4d81d720
  418a4f:	dec    esi
  418a50:	cli    
  418a51:	or     ebx,ebp
  418a53:	imul   esi,DWORD PTR [edi],0xffffffa6
  418a56:	mov    cl,0x92
  418a58:	scas   al,BYTE PTR es:[edi]
  418a59:	dec    ecx
  418a5a:	push   eax
  418a5b:	push   0x9e3c1a49
  418a60:	pop    esi
  418a61:	loopne 0x418ad9
  418a63:	stos   BYTE PTR es:[edi],al
  418a64:	xchg   ecx,eax
  418a65:	(bad)  
  418a66:	scas   al,BYTE PTR es:[edi]
  418a67:	daa    
  418a68:	std    
  418a69:	test   BYTE PTR [ebx],ch
  418a6b:	call   0x3d5e:0xfde0b4be
  418a72:	out    0x2,al
  418a74:	in     al,dx
  418a75:	add    DWORD PTR [eax-0x1f19063f],ebp
  418a7b:	jno    0x418a7a
  418a7d:	(bad)  
  418a7e:	pop    DWORD PTR [eax+edi*1+0x25]
  418a82:	aaa    
  418a83:	ret    0x7b34
  418a86:	aam    0xaf
  418a88:	fst    DWORD PTR [edi+eax*4-0x46]
  418a8c:	cmp    al,0xb4
  418a8e:	ficom  DWORD PTR [ecx+0x63]
  418a91:	test   DWORD PTR [edi],esp
  418a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a94:	adc    al,0x47
  418a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a97:	fadd   QWORD PTR [eax]
  418a99:	and    BYTE PTR gs:[edi],0x55
  418a9d:	inc    esi
  418a9e:	xor    BYTE PTR [edx-0xc728d8c],bl
  418aa4:	and    ecx,esi
  418aa6:	shl    DWORD PTR [ecx-0x6c44d6a],cl
  418aac:	mov    ebp,0xac969a96
  418ab1:	push   edx
  418ab2:	sub    bl,ah
  418ab4:	out    dx,eax
  418ab5:	into   
  418ab6:	mov    dl,BYTE PTR [eax-0x56]
  418ab9:	add    cl,BYTE PTR [edx+ebp*1+0x21ec32a]
  418ac0:	sub    DWORD PTR [ecx],esp
  418ac2:	sbb    ah,BYTE PTR [edi+0x34]
  418ac5:	sub    eax,0x5a026dab
  418aca:	jmp    0x418aa7
  418acc:	or     al,0xa3
  418ace:	cmp    BYTE PTR [eax+0x2a],0xfd
  418ad2:	inc    esi
  418ad3:	jg     0x418acf
  418ad5:	ins    BYTE PTR es:[edi],dx
  418ad6:	(bad)  
  418ad7:	aam    0x44
  418ad9:	int3   
  418ada:	outs   dx,DWORD PTR ds:[esi]
  418adb:	pusha  
  418adc:	jg     0x418a64
  418ade:	cld    
  418adf:	add    al,0xeb
  418ae1:	xchg   esp,eax
  418ae2:	jp     0x418b3b
  418ae4:	sub    edi,esi
  418ae6:	xchg   esp,eax
  418ae7:	push   esi
  418ae8:	mov    WORD PTR [edx-0x51],fs
  418aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aec:	shl    DWORD PTR [edx-0x78b82922],0xb7
  418af3:	inc    edi
  418af4:	dec    edx
  418af5:	mov    eax,eax
  418af7:	sbb    BYTE PTR [ebx],bl
  418af9:	pop    esp
  418afa:	mov    eax,0x7f73d8d5
  418aff:	jmp    0xfe72:0xe0caa95
  418b06:	lods   eax,DWORD PTR ds:[esi]
  418b07:	and    DWORD PTR [ecx],0x4f3831d6
  418b0d:	jnp    0x418b0a
  418b0f:	dec    esp
  418b10:	out    0xa7,al
  418b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b13:	or     eax,0xa2373ee9
  418b18:	test   DWORD PTR [edx+0x6c9c95e0],eax
  418b1e:	scas   al,BYTE PTR es:[edi]
  418b1f:	mov    cl,0x41
  418b21:	out    0x76,al
  418b23:	addr16 add eax,0xd4c72cf5
  418b29:	jb     0x418b53
  418b2b:	mov    eax,esi
  418b2d:	pop    es
  418b2e:	mov    edx,0x8298740a
  418b33:	add    eax,0x26683c71
  418b38:	nop
  418b39:	dec    edi
  418b3a:	xchg   ebp,eax
  418b3b:	iret   
  418b3c:	cdq    
  418b3d:	push   ebx
  418b3e:	aad    0xe9
  418b40:	loop   0x418ad6
  418b42:	nop
  418b43:	xchg   esi,eax
  418b44:	xchg   ebx,eax
  418b45:	push   DWORD PTR ds:0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	icebp  
  418b63:	and    al,0xc5
  418b65:	jmp    0x418b79
  418b67:	ret    
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	mov    al,BYTE PTR [ebx-0x18419a06]
  418b74:	mov    ah,0x99
  418b76:	scas   al,BYTE PTR es:[edi]
  418b77:	push   0x4da76b3d
  418b7c:	ss ret 0x8357
  418b80:	or     ebp,DWORD PTR [esi-0xcf1d3d7]
  418b86:	mov    dl,0x5
  418b88:	mov    dl,0x8a
  418b8a:	pop    ds
  418b8b:	in     eax,dx
  418b8c:	(bad)  
  418b8d:	icebp  
  418b8e:	repnz rcl DWORD PTR [edx],0x92
  418b92:	stos   BYTE PTR es:[edi],al
  418b93:	jg     0x418be7
  418b95:	pop    es
  418b96:	outs   dx,DWORD PTR ds:[esi]
  418b97:	mov    eax,ds:0xe5242078
  418b9c:	push   ebx
  418b9d:	jmp    0x418ba7
  418b9f:	retf   0xd8a2
  418ba2:	xor    eax,0x92df89df
  418ba7:	mov    ecx,0xe353a44b
  418bac:	mov    al,0x86
  418bae:	mov    DWORD PTR [ebp-0x73],eax
  418bb1:	cmp    edx,eax
  418bb3:	in     eax,dx
  418bb4:	nop
  418bb5:	jb     0x418bce
  418bb7:	mov    ecx,0x3d5ba27e
  418bbc:	stos   DWORD PTR es:[edi],eax
  418bbd:	(bad)  
  418bbe:	in     al,0xaf
  418bc0:	test   BYTE PTR ds:0x2038d738,0x16
  418bc7:	and    edx,DWORD PTR [esi]
  418bc9:	dec    DWORD PTR [ecx+0x1ef1509c]
  418bcf:	fs mov ecx,0x7823c557
  418bd5:	leave  
  418bd6:	dec    DWORD PTR [eax]
  418bd8:	add    eax,0x601e9ccc
  418bde:	outs   dx,DWORD PTR ds:[esi]
  418bdf:	jnp    0x418bb1
  418be1:	inc    ebp
  418be2:	repz xor DWORD PTR [ebp+0x66],ecx
  418be6:	rcr    DWORD PTR [edi+ebp*1],0x93
  418bea:	aaa    
  418beb:	ja     0x418be5
  418bed:	sar    BYTE PTR [ebx+0x3d0eccd6],cl
  418bf3:	xchg   DWORD PTR [edx-0xdb2ccc8],esp
  418bf9:	inc    edi
  418bfa:	adc    bh,BYTE PTR [eax]
  418bfc:	test   eax,0x32a6303a
  418c01:	mov    eax,0x9df3eb98
  418c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c07:	js     0x418c0e
  418c09:	pop    esi
  418c0a:	neg    BYTE PTR [ebp+0x19]
  418c0d:	pop    ds
  418c0e:	(bad)  
  418c10:	fs adc al,0x8c
  418c13:	les    ebx,FWORD PTR [edi]
  418c15:	fstp   TBYTE PTR [ecx-0x24]
  418c18:	das    
  418c19:	lea    ecx,[edi]
  418c1b:	inc    ebx
  418c1c:	ins    BYTE PTR es:[edi],dx
  418c1d:	icebp  
  418c1e:	and    BYTE PTR [edx+0x354340a],0x1d
  418c25:	add    ah,cl
  418c27:	das    
  418c28:	adc    BYTE PTR [ebp+0x36],ch
  418c2b:	dec    ebx
  418c2c:	mov    ch,0x49
  418c2e:	mov    ebp,0xe7550b65
  418c33:	jae    0x418bd8
  418c35:	inc    ecx
  418c36:	loopne 0x418c9b
  418c38:	fisttp DWORD PTR [eax+0x65bfa1ab]
  418c3e:	push   0x41
  418c40:	and    DWORD PTR [ebx-0x7eef3570],ebx
  418c46:	pop    edi
  418c47:	sbb    al,0x8d
  418c49:	arpl   WORD PTR [edi-0x39a33cca],sp
  418c4f:	fadd   DWORD PTR fs:[edx+0x11]
  418c53:	neg    esp
  418c55:	nop
  418c56:	push   edx
  418c57:	mov    ds:0x54ad098f,eax
  418c5c:	mov    ecx,0x1e74e387
  418c61:	or     al,0xb0
  418c63:	xchg   esp,eax
  418c64:	bound  edi,QWORD PTR [ecx]
  418c66:	sub    DWORD PTR [edi+0x74d9b697],eax
  418c6c:	test   DWORD PTR [edx-0x798dfd1a],ebx
  418c72:	aam    0xf5
  418c74:	jo     0x418c8b
  418c76:	pop    es
  418c77:	in     eax,0xdb
  418c79:	in     al,dx
  418c7a:	fiadd  WORD PTR [edi-0x4fe1b3ce]
  418c80:	stc    
  418c81:	fndisi(8087 only) 
  418c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c84:	cdq    
  418c85:	pop    eax
  418c86:	cmc    
  418c87:	jmp    0x4818:0x91b007e7
  418c8e:	outs   dx,BYTE PTR ds:[esi]
  418c8f:	test   eax,0xd10b229c
  418c94:	pusha  
  418c95:	lea    ecx,[edi]
  418c97:	fdivr  DWORD PTR [edx]
  418c99:	mov    esi,0x6de53dac
  418c9e:	pop    ss
  418c9f:	inc    ebx
  418ca0:	jnp    0x418c5c
  418ca2:	or     eax,0x59201e5b
  418ca7:	jmp    0x8269863d
  418cac:	cdq    
  418cad:	imul   esi,DWORD PTR [eax-0x6f],0xffffffec
  418cb1:	and    eax,0x5e27b25b
  418cb6:	jg     0x418ceb
  418cb8:	add    eax,0xcf2aae6a
  418cbd:	sbb    al,0xa8
  418cbf:	addr16 out 0x48,al
  418cc2:	call   0x698e1cf2
  418cc7:	mov    DWORD PTR [edx+edx*2],esp
  418cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ccb:	cmp    dl,BYTE PTR [edi-0x21cb27cf]
  418cd1:	jmp    0xc8d7bfac
  418cd6:	jns    0x418d37
  418cd8:	test   edx,ebp
  418cda:	retf   0x3a7d
  418cdd:	nop
  418cde:	mov    ch,0xc3
  418ce0:	push   cs
  418ce1:	retf   
  418ce2:	or     al,0xc3
  418ce4:	xchg   ebx,eax
  418ce5:	in     al,dx
  418ce6:	iret   
  418ce7:	lock iret 
  418ce9:	push   eax
  418cea:	mov    ds:0xb48ab396,eax
  418cef:	cmp    BYTE PTR [ebx-0x37],bh
  418cf2:	in     al,dx
  418cf3:	inc    eax
  418cf4:	xchg   ebx,eax
  418cf5:	mov    ebx,0x46917ab0
  418cfa:	pop    es
  418cfb:	xchg   DWORD PTR [ebx],edx
  418cfd:	icebp  
  418cfe:	push   esi
  418cff:	xchg   esi,eax
  418d00:	or     al,0xe5
  418d02:	div    BYTE PTR [esi-0x71e599fb]
  418d08:	xor    BYTE PTR [ecx],ah
  418d0a:	rol    BYTE PTR [ecx],cl
  418d0c:	arpl   WORD PTR [esi+0x47],ax
  418d0f:	xchg   esi,eax
  418d10:	or     eax,0xb3d7651
  418d15:	xchg   edx,eax
  418d16:	retf   
  418d17:	psadbw mm6,QWORD PTR [esi]
  418d1a:	das    
  418d1b:	retf   0xb9dd
  418d1e:	call   0x644f8ce
  418d23:	outs   dx,BYTE PTR ds:[esi]
  418d24:	imul   ebx,DWORD PTR [edx],0xffffff91
  418d27:	mov    bl,0x17
  418d29:	repnz mov eax,ds:0x37edd8bd
  418d2f:	out    0x64,eax
  418d31:	cdq    
  418d32:	fisubr WORD PTR [ebx+ecx*2+0x587347f]
  418d39:	out    dx,eax
  418d3a:	adc    al,0xfd
  418d3c:	add    eax,0xfa18519a
  418d41:	inc    edi
  418d42:	mov    bl,0x14
  418d44:	pop    edx
  418d45:	pop    eax
  418d46:	call   0x59158785
  418d4b:	mov    ss,WORD PTR [edx]
  418d4d:	inc    esp
  418d4e:	lods   eax,DWORD PTR ds:[esi]
  418d4f:	popa   
  418d50:	mov    eax,0x32e1e1e2
  418d55:	jge    0x418d53
  418d57:	adc    bl,0xdd
  418d5a:	imul   bx,di,0xcd7f
  418d5f:	mov    eax,0x83c3ace4
  418d64:	sbb    al,0x16
  418d66:	push   edx
  418d67:	lock sbb ecx,DWORD PTR [ecx+0x7c]
  418d6b:	sbb    esi,edx
  418d6d:	xor    BYTE PTR [eax+0x3e],ch
  418d70:	call   0x8551:0x6f9f406b
  418d77:	dec    ebp
  418d78:	mov    eax,0xfc5d27c4
  418d7d:	xadd   DWORD PTR [eax+0x58],ebp
  418d81:	dec    ecx
  418d82:	sbb    eax,0x80939aa8
  418d87:	pushf  
  418d88:	cld    
  418d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8a:	imul   ecx,DWORD PTR [ebp+0x32],0xfc526e7d
  418d91:	cmc    
  418d92:	sbb    BYTE PTR [esi-0x6f91ab3d],ah
  418d98:	mov    eax,?
  418d9a:	enter  0x36a4,0x1a
  418d9e:	lock and edx,DWORD PTR ds:0xb2bb9421
  418da5:	and    al,0x3e
  418da7:	sub    eax,0x64a80fbd
  418dac:	mov    ds:0x2a81349f,al
  418db1:	out    dx,eax
  418db2:	pop    esi
  418db3:	mov    edi,0x8919d7d1
  418db8:	jecxz  0x418dc1
  418dba:	mov    DWORD PTR [esi+0x6874bd70],eax
  418dc0:	test   ebp,ebp
  418dc2:	adc    eax,0x2e10bf31
  418dc7:	(bad)  
  418dc8:	je     0x418dc7
  418dca:	lods   al,BYTE PTR ds:[esi]
  418dcb:	sub    bh,BYTE PTR [edx-0x4b]
  418dce:	pop    esi
  418dcf:	outs   dx,DWORD PTR ds:[esi]
  418dd0:	retf   0x1c14
  418dd3:	sahf   
  418dd4:	fild   QWORD PTR [ebx+0x25]
  418dd7:	xchg   DWORD PTR [ebp+0x208994b0],esp
  418ddd:	retf   
  418dde:	shr    BYTE PTR [ecx-0x19b2d22f],cl
  418de4:	(bad)  [edx-0x4e]
  418de7:	dec    edi
  418de8:	pop    eax
  418de9:	and    DWORD PTR [ebx],edi
  418deb:	ss inc esp
  418ded:	jle    0x418db4
  418def:	xor    al,0x34
  418df1:	and    DWORD PTR [edx+edx*1+0x59],edx
  418df5:	pop    ebp
  418df6:	mov    edx,0x5c538161
  418dfb:	repnz and esi,DWORD PTR [esi]
  418dfe:	jmp    0x418e23
  418e00:	jb     0x418e5b
  418e02:	xor    DWORD PTR [ecx-0x1ea5bc57],ecx
  418e08:	je     0x418e69
  418e0a:	mov    cl,0xe6
  418e0c:	(bad)  [edx+eax*4+0x7d3d1eef]
  418e13:	mov    bl,0x96
  418e15:	sbb    esi,ebx
  418e17:	scas   al,BYTE PTR es:[edi]
  418e18:	xor    ecx,DWORD PTR [edx]
  418e1a:	mov    edi,0x87ad89d
  418e1f:	inc    ecx
  418e20:	popf   
  418e21:	imul   ecx,DWORD PTR [edi+esi*1-0x7fde43f3],0xffffff8d
  418e29:	cmp    bl,BYTE PTR [eax-0x2a]
  418e2c:	cmp    al,0x65
  418e2e:	add    al,BYTE PTR [edx+0x62]
  418e31:	retf   0x6be7
  418e34:	imul   edx,DWORD PTR [edx-0x6dead979],0xf36d76f5
  418e3e:	(bad)  
  418e3f:	ins    DWORD PTR es:[edi],dx
  418e40:	jb     0x418def
  418e42:	lods   eax,DWORD PTR ds:[esi]
  418e43:	ins    BYTE PTR es:[edi],dx
  418e44:	sti    
  418e45:	xor    ah,0xc
  418e48:	shl    BYTE PTR [ebx+eax*2-0x107a433f],0xde
  418e50:	xor    al,0xe1
  418e52:	xor    esi,DWORD PTR [edi+0x1f]
  418e55:	xchg   ecx,eax
  418e56:	(bad)
  418e5a:	imul   edi,ecx,0xc3ef75ce
  418e60:	and    DWORD PTR [edx+0x3a],esp
  418e63:	adc    ch,BYTE PTR [edx-0x4f7e7423]
  418e69:	push   DWORD PTR [esi-0x1]
  418e6c:	xor    BYTE PTR [ebx+0x15e91045],cl
  418e72:	add    eax,DWORD PTR [eax]
  418e74:	add    bl,cl
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e82:	dec    ebx
  418e83:	xchg   ecx,eax
  418e84:	ins    DWORD PTR es:[edi],dx
  418e85:	or     eax,0x7b787fc0
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e3b
  418e8e:	dec    eax
  418e8f:	adc    eax,0xb1e46d0d
  418e94:	test   eax,0xf3e81433
  418e99:	jns    0x418ed9
  418e9b:	jae    0x418f10
  418e9d:	lods   eax,DWORD PTR ds:[esi]
  418e9e:	fcom   DWORD PTR [edi+ebp*4+0x0]
  418ea2:	lods   al,BYTE PTR ds:[esi]
  418ea3:	enter  0x86fe,0x7f
  418ea7:	xor    eax,DWORD PTR [edx+0x4b]
  418eaa:	xlat   BYTE PTR ds:[ebx]
  418eab:	retf   0xcd52
  418eae:	push   ss
  418eaf:	xchg   esi,eax
  418eb0:	mov    ebx,0xb6a39872
  418eb5:	cmp    eax,0x6c459f58
  418eba:	mov    esp,0x18ff31ad
  418ebf:	in     eax,0x41
  418ec1:	mov    ebp,0xb7a1dfbe
  418ec6:	out    dx,eax
  418ec7:	pop    esp
  418ec8:	(bad)  
  418ec9:	and    ch,BYTE PTR [esi-0x2c81d986]
  418ecf:	repz xor eax,0xe646c6b7
  418ed5:	pop    eax
  418ed6:	(bad)
  418eda:	sub    dh,BYTE PTR [edi+eax*2+0x62]
  418ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ee0:	ins    DWORD PTR es:[edi],dx
  418ee1:	outs   dx,DWORD PTR ds:[esi]
  418ee2:	jnp    0x418ecf
  418ee4:	add    dl,dl
  418ee6:	fnstsw WORD PTR [eax]
  418ee8:	shl    DWORD PTR [edx+0x58f6d79d],cl
  418eee:	add    DWORD PTR [esi-0x2ec6a9f9],edi
  418ef4:	push   esp
  418ef5:	repz out 0xf6,eax
  418ef8:	fidiv  WORD PTR [edx+0x4a]
  418efb:	push   es
  418efc:	pop    ebp
  418efd:	or     al,0x6a
  418eff:	ds jecxz 0x418f18
  418f02:	pop    es
  418f03:	pop    esp
  418f04:	pusha  
  418f05:	add    BYTE PTR [edi+ebp*8+0x1894cb1],bl
  418f0c:	out    0x9a,al
  418f0e:	xor    ebx,ebp
  418f10:	clc    
  418f11:	lds    ebp,FWORD PTR [eax+ebx*2+0x31ca5d35]
  418f18:	fmul   DWORD PTR [edx]
  418f1a:	lds    ecx,FWORD PTR [ecx-0x393b7ffb]
  418f20:	jmp    0x6b0d:0x70761dd1
  418f27:	and    esp,DWORD PTR [ecx+0x3a]
  418f2a:	and    ah,BYTE PTR [edx]
  418f2c:	aad    0x1d
  418f2e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418f30:	mov    WORD PTR [eax-0x4576c476],ds
  418f36:	in     eax,dx
  418f37:	mov    bh,0x4
  418f39:	xchg   ebx,eax
  418f3a:	sbb    BYTE PTR [ecx+0x77],ah
  418f3d:	dec    esi
  418f3e:	lock dec edx
  418f40:	and    edx,DWORD PTR [ebp-0x6bf705c0]
  418f46:	pop    esi
  418f47:	sub    eax,0xc5411d27
  418f4c:	pop    esi
  418f4d:	xor    al,0x48
  418f4f:	ins    BYTE PTR es:[edi],dx
  418f50:	retf   
  418f51:	stos   DWORD PTR es:[edi],eax
  418f52:	je     0x418f98
  418f54:	ret    
  418f55:	and    al,BYTE PTR [ecx+0x4b838fd3]
  418f5b:	xchg   ebp,eax
  418f5c:	cwde   
  418f5d:	outs   dx,BYTE PTR ds:[esi]
  418f5e:	dec    esp
  418f5f:	push   edi
  418f60:	out    dx,al
  418f61:	pop    ds
  418f62:	lods   al,BYTE PTR ds:[esi]
  418f63:	mov    ds:0xdb7975e6,eax
  418f68:	xchg   ecx,eax
  418f69:	mov    edi,es
  418f6b:	outs   dx,DWORD PTR ds:[esi]
  418f6c:	pop    ecx
  418f6d:	std    
  418f6e:	sbb    BYTE PTR [ecx+ebp*2-0x189f9c30],cl
  418f75:	inc    ebx
  418f76:	mov    bh,0x2e
  418f78:	cld    
  418f79:	push   edi
  418f7a:	mov    edi,0xe0e7b74d
  418f7f:	lods   al,BYTE PTR ds:[esi]
  418f80:	push   edi
  418f81:	pop    edx
  418f82:	cld    
  418f83:	inc    ebx
  418f84:	out    dx,eax
  418f85:	pop    edx
  418f86:	sub    ebx,esp
  418f88:	push   eax
  418f89:	popf   
  418f8a:	cmc    
  418f8b:	(bad)  
  418f8c:	test   eax,0x45650d36
  418f91:	jnp    0x418fa5
  418f93:	fst    DWORD PTR [edi-0x15b04f76]
  418f99:	mov    esp,0x270d4f90
  418f9e:	std    
  418f9f:	stc    
  418fa0:	push   ebp
  418fa1:	jae    0x418f2f
  418fa3:	jle    0x418f4f
  418fa5:	push   0x4e148dac
  418faa:	rol    DWORD PTR [ecx+0x6a],cl
  418fad:	xor    edx,ebp
  418faf:	xor    al,0xaa
  418fb1:	jbe    0x418fa3
  418fb3:	sub    eax,DWORD PTR [ecx+eiz*4]
  418fb6:	iret   
  418fb7:	jp     0x418ff9
  418fb9:	pop    eax
  418fba:	shr    DWORD PTR [edi+0x60a8394],1
  418fc0:	leave  
  418fc1:	dec    ebx
  418fc2:	push   ebp
  418fc3:	rcl    BYTE PTR [ebx-0x6d],1
  418fc6:	lea    edi,[eax*8-0x436313a4]
  418fcd:	push   edi
  418fce:	push   edx
  418fcf:	call   0x7c7bdb14
  418fd4:	mov    cl,0x35
  418fd6:	dec    ecx
  418fd7:	push   ds
  418fd8:	mov    ebp,edi
  418fda:	or     BYTE PTR [edi+0x6f9369e4],bh
  418fe0:	xor    ah,BYTE PTR [edi]
  418fe2:	sahf   
  418fe3:	ret    0xc3d8
  418fe6:	sbb    DWORD PTR [edi-0x18eb4930],ebx
  418fec:	clc    
  418fed:	jne    0x418f93
  418fef:	adc    ebx,DWORD PTR [edx+0x54b76292]
  418ff5:	outs   dx,DWORD PTR fs:[esi]
  418ff7:	call   0x33dd:0xc5cd67f4
  418ffe:	hlt    
  418fff:	mov    bl,0x13
  419001:	inc    ebx
  419002:	cmp    ebp,esi
  419004:	leave  
  419005:	cli    
  419006:	in     eax,dx
  419007:	(bad)  
  419008:	fucomi st,st(0)
  41900a:	push   eax
  41900b:	xor    BYTE PTR [ebp+0x3c],ah
  41900e:	lea    esi,[ecx-0x2179dada]
  419014:	mov    ecx,0xa9c889b5
  419019:	in     eax,0x50
  41901b:	adc    esp,ebx
  41901d:	into   
  41901e:	xchg   ecx,eax
  41901f:	aas    
  419020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419021:	pop    eax
  419022:	out    0x25,al
  419024:	push   cs
  419025:	push   es
  419026:	fnstcw WORD PTR [edi]
  419028:	ds test eax,0x7a5ece0
  41902e:	push   eax
  41902f:	push   0x7a
  419031:	ret    0x5f2e
  419034:	or     eax,0xcf9e1b54
  419039:	das    
  41903a:	mov    ebp,0xcb7713d1
  41903f:	mov    eax,DWORD PTR [ebx-0x2e02e19a]
  419045:	cmc    
  419046:	stos   DWORD PTR es:[edi],eax
  419047:	xor    esp,DWORD PTR [edx+eax*8+0x4e]
  41904b:	xor    al,0x9c
  41904d:	rcr    BYTE PTR [ebx],cl
  41904f:	mov    ebp,0xb9ef523f
  419054:	cwde   
  419055:	icebp  
  419056:	sbb    esi,DWORD PTR [ebx-0x684a1c16]
  41905c:	mov    DWORD PTR ss:[edi-0x2f583257],edx
  419063:	xor    eax,0xdffa3228
  419068:	and    eax,eax
  41906a:	fst    st(3)
  41906c:	or     eax,0x3dfabcec
  419071:	dec    esp
  419072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419073:	mov    esi,0x20f574f4
  419078:	shr    edx,1
  41907a:	scas   al,BYTE PTR es:[edi]
  41907b:	add    ecx,DWORD PTR [ebp+0x48]
  41907e:	cmovle ebx,esi
  419081:	loope  0x4190bb
  419083:	push   cs
  419084:	pop    eax
  419085:	mov    ds:0x8fe71dda,eax
  41908a:	jne    0x41904d
  41908c:	push   edx
  41908d:	adc    al,0x91
  41908f:	mov    ebx,0x6456cf46
  419094:	or     DWORD PTR [ebp-0x1f4dbbc0],ebx
  41909a:	aad    0x3b
  41909c:	push   0xffffffe8
  41909e:	inc    edi
  41909f:	sub    DWORD PTR [esi+0x3d46a550],0x4e
  4190a6:	jne    0x419114
  4190a8:	cdq    
  4190a9:	mov    ebp,0xcbcffae8
  4190ae:	dec    ecx
  4190af:	bound  esi,QWORD PTR [esi-0x1d841498]
  4190b5:	mov    cs,WORD PTR [eax+eiz*8]
  4190b8:	sub    eax,esp
  4190ba:	adc    eax,0x8e175629
  4190bf:	and    eax,0x60d82557
  4190c4:	mov    eax,ds:0xdf4bb30f
  4190c9:	cmp    al,BYTE PTR [ebp+ebx*1+0x8bd2be]
  4190d0:	lods   al,BYTE PTR ds:[esi]
  4190d1:	xor    esi,esp
  4190d3:	jne    0x4190c1
  4190d5:	in     eax,0xc7
  4190d7:	mov    ds:0x458ca699,al
  4190dc:	in     al,dx
  4190dd:	outs   dx,BYTE PTR ds:[esi]
  4190de:	mov    esi,0x25305cc5
  4190e3:	fsubr  st,st(1)
  4190e5:	mov    ?,WORD PTR [edx+0x52fc871c]
  4190eb:	push   0x4f
  4190ed:	scas   eax,DWORD PTR es:[edi]
  4190ee:	mov    ecx,DWORD PTR ds:0x75568218
  4190f4:	mov    dh,0xcb
  4190f6:	and    DWORD PTR [ebx],ebx
  4190f8:	cli    
  4190f9:	mov    esi,0xa43ef255
  4190fe:	mov    ds:0x4bddde6f,al
  419103:	mov    ebp,0x21f77870
  419108:	rcr    DWORD PTR [eax-0x6c],0x6
  41910c:	je     0x419157
  41910e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41910f:	xor    ah,BYTE PTR gs:[ebx+eiz*1+0x4131be93]
  419117:	mulps  xmm6,xmm4
  41911a:	aad    0x7a
  41911c:	loope  0x4190d5
  41911e:	dec    eax
  41911f:	adc    al,0x6e
  419121:	and    BYTE PTR [ebp-0x34],ah
  419124:	mov    esp,0x72df4e2e
  419129:	dec    esi
  41912a:	bound  ebx,QWORD PTR [ebx]
  41912c:	pop    edi
  41912d:	js     0x4191a4
  41912f:	mov    ecx,0x19701975
  419134:	addr16 jmp 0x22e2:0x591fb5bf
  41913c:	jmp    0x4190f7
  41913e:	retf   
  41913f:	cmp    eax,0x231e852
  419144:	xchg   ebx,eax
  419145:	mov    BYTE PTR [ebx],ch
  419147:	mov    DWORD PTR [edx-0x41],eax
  41914a:	cdq    
  41914b:	pushf  
  41914c:	out    dx,eax
  41914d:	leave  
  41914e:	stos   DWORD PTR es:[edi],eax
  41914f:	loopne 0x419184
  419151:	mov    ebp,0x99099dac
  419156:	mov    ds:0xbd2e75b5,eax
  41915c:	mov    edi,DWORD PTR [ebx-0x8]
  41915f:	arpl   WORD PTR [eax],si
  419161:	inc    ecx
  419162:	nop
  419163:	mov    ch,bh
  419165:	mov    eax,0xcad14ebe
  41916a:	push   es
  41916b:	adc    ecx,DWORD PTR [edx]
  41916d:	lods   eax,DWORD PTR ds:[esi]
  41916e:	push   esi
  41916f:	inc    esp
  419170:	into   
  419171:	pop    esp
  419172:	cmp    esi,esp
  419174:	mov    edi,0xb2f31520
  419179:	mov    ah,0x31
  41917b:	jge    0x4191e5
  41917d:	xchg   ecx,eax
  41917e:	dec    ebp
  41917f:	push   esi
  419180:	rcl    DWORD PTR [ecx],0x9c
  419183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419184:	pop    ecx
  419185:	lods   eax,DWORD PTR ds:[esi]
  419186:	out    0xe7,eax
  419188:	gs xor eax,0x3e9d0ff
  41918e:	add    BYTE PTR [eax],al
  419190:	add    BYTE PTR [ebx-0x3d36efbb],cl
  419196:	or     al,0x0
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    fs,WORD PTR ds:0x8db75a7
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41915b
  4191bc:	push   ds
  4191bd:	aaa    
  4191be:	adc    BYTE PTR [esi-0x34f90ae5],cl
  4191c4:	out    0x9f,eax
  4191c6:	lock xchg edx,eax
  4191c8:	pop    ss
  4191c9:	mov    ds:0x62c6a0a4,al
  4191ce:	mov    esp,edi
  4191d0:	and    DWORD PTR [eax],eax
  4191d2:	lahf   
  4191d3:	clc    
  4191d4:	jno    0x419167
  4191d6:	stos   DWORD PTR es:[edi],eax
  4191d7:	add    ah,bl
  4191d9:	and    DWORD PTR [ebx-0x41],eax
  4191dc:	jno    0x4191b6
  4191de:	pop    eax
  4191df:	cwde   
  4191e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e1:	fisubr WORD PTR [ebp+0x72e7b77b]
  4191e7:	and    al,BYTE PTR gs:[edi]
  4191ea:	sti    
  4191eb:	mov    esp,0xacfa1c29
  4191f0:	jmp    0x23f2acc8
  4191f5:	stos   DWORD PTR es:[edi],eax
  4191f6:	ins    BYTE PTR es:[edi],dx
  4191f7:	repnz add dh,0x4d
  4191fb:	scas   eax,DWORD PTR es:[edi]
  4191fc:	push   eax
  4191fd:	clc    
  4191fe:	shl    BYTE PTR [ecx],1
  419200:	push   ebp
  419201:	xchg   esp,eax
  419202:	pop    ecx
  419203:	mov    dh,0xa
  419205:	cmp    al,0x5b
  419207:	jnp    0x419268
  419209:	xchg   edx,ecx
  41920b:	je     0x4191cc
  41920d:	ret    
  41920e:	in     al,0x2b
  419210:	sbb    al,0x98
  419212:	push   edx
  419213:	cs dec esp
  419215:	sub    edx,DWORD PTR [ecx-0x25]
  419218:	rol    DWORD PTR [edi],1
  41921a:	aaa    
  41921b:	dec    esp
  41921c:	dec    ebp
  41921d:	mov    ebx,0x80de50e1
  419222:	(bad)  
  419224:	push   esp
  419225:	gs inc eax
  419227:	pushf  
  419228:	stos   DWORD PTR es:[edi],eax
  419229:	test   al,0x23
  41922b:	mov    esp,0x618495f7
  419230:	hlt    
  419231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419232:	adc    BYTE PTR [esi+eax*4-0x55],0xe1
  419237:	je     0x41925a
  419239:	inc    DWORD PTR [esi-0x380852]
  41923f:	pusha  
  419240:	lods   eax,DWORD PTR ds:[esi]
  419241:	mov    ebp,0x8a96e5d9
  419246:	es ds das 
  419249:	psllw  mm0,QWORD PTR [edi-0x297f741a]
  419250:	jne    0x419265
  419252:	mov    esp,0xce8ebf9
  419257:	and    eax,0x43d54f82
  41925c:	push   0x9191b598
  419261:	pop    esi
  419262:	cli    
  419263:	retf   0x24d5
  419266:	dec    esp
  419267:	pop    edx
  419268:	sub    eax,0xd982aee7
  41926d:	inc    ebx
  41926e:	stc    
  41926f:	mov    ah,0x26
  419271:	nop
  419272:	sbb    esi,DWORD PTR [edx+0x768d8f03]
  419278:	adc    BYTE PTR [edx+0x5e07ab1c],cl
  41927e:	cmp    DWORD PTR [esp+ebp*4-0x21f51270],ebp
  419285:	ss sub ch,bl
  419288:	add    DWORD PTR fs:[esi-0x68],0x4724059b
  419290:	lea    ebp,[edi+0x1a]
  419293:	add    eax,0xb9876aed
  419298:	xchg   ebp,eax
  419299:	out    0xac,al
  41929b:	adc    eax,0x1785bb13
  4192a0:	outs   dx,BYTE PTR ds:[esi]
  4192a1:	dec    ebp
  4192a2:	xor    eax,0x4b857e7b
  4192a7:	xor    cl,bh
  4192a9:	sub    BYTE PTR fs:[eax-0x66],al
  4192ad:	xchg   ecx,ecx
  4192af:	or     ah,bh
  4192b1:	ret    0x1169
  4192b4:	(bad)  
  4192b5:	retf   
  4192b6:	cmp    BYTE PTR [esi+0x3cbf1961],0xb5
  4192bd:	pusha  
  4192be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192bf:	idiv   BYTE PTR [esi+0x3b]
  4192c2:	push   0x68
  4192c4:	xor    eax,0xdb746511
  4192c9:	hlt    
  4192ca:	pop    es
  4192cb:	imul   DWORD PTR [edx]
  4192cd:	out    0x8a,eax
  4192cf:	in     eax,0xd
  4192d1:	sub    ecx,ebp
  4192d3:	in     al,dx
  4192d4:	fimul  DWORD PTR [ebp-0x5e]
  4192d7:	jns    0xc67a430f
  4192dd:	xor    al,0x3e
  4192df:	data16 jo 0x419267
  4192e2:	cli    
  4192e3:	out    dx,eax
  4192e4:	fisttp DWORD PTR [ecx+0x62]
  4192e7:	or     BYTE PTR [edx-0x17792ed8],al
  4192ed:	stc    
  4192ee:	js     0x4192ba
  4192f0:	aaa    
  4192f1:	or     DWORD PTR [ebp+0x32b1d8a3],0xffffffac
  4192f8:	cs pop edx
  4192fa:	aam    0xb7
  4192fc:	scas   al,BYTE PTR es:[edi]
  4192fd:	mov    ch,0xeb
  4192ff:	xor    ebp,DWORD PTR [eax+0x71]
  419302:	push   0x26d5f5fd
  419307:	pop    ss
  419308:	cmp    cl,bh
  41930a:	jecxz  0x419291
  41930c:	jnp    0x4192fd
  41930e:	ins    DWORD PTR es:[edi],dx
  41930f:	cmp    BYTE PTR [esi+0x41],bl
  419312:	cmp    BYTE PTR [ebp-0x366fe87e],bh
  419318:	outs   dx,BYTE PTR ds:[esi]
  419319:	stc    
  41931a:	inc    edx
  41931b:	repz test BYTE PTR [eax-0x20],ch
  41931f:	in     eax,dx
  419320:	dec    eax
  419321:	imul   esi,DWORD PTR [ecx-0x57ae04a0],0xffffffc8
  419328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419329:	out    0xac,al
  41932b:	shl    edi,cl
  41932d:	jnp    0x419374
  41932f:	pop    eax
  419330:	lea    edx,[eax]
  419332:	jbe    0x4192c5
  419334:	push   esi
  419335:	mov    al,0xe9
  419337:	in     al,dx
  419338:	inc    ebp
  419339:	enter  0x5e13,0xd5
  41933d:	sahf   
  41933e:	test   DWORD PTR [edi+0x7ddbcae3],edx
  419344:	lods   eax,DWORD PTR ds:[esi]
  419345:	xchg   BYTE PTR [esi-0x3536ae46],ch
  41934b:	clc    
  41934c:	aaa    
  41934d:	out    dx,eax
  41934e:	add    esi,0x7d
  419351:	je     0x4192d6
  419353:	pop    ss
  419354:	adc    al,0xc2
  419356:	sub    DWORD PTR [eiz*4+0x6bb20d19],ecx
  41935d:	sbb    DWORD PTR [esi+0x58de014c],esi
  419363:	sbb    al,0x1d
  419365:	out    0x41,al
  419367:	sub    BYTE PTR [ecx],ch
  419369:	or     ebp,DWORD PTR [edx]
  41936b:	stc    
  41936c:	push   ebx
  41936d:	jmp    0xcff14b10
  419372:	inc    esi
  419374:	mov    edx,0xdc595ab
  419379:	std    
  41937a:	xchg   esi,eax
  41937b:	push   0x3e47eca8
  419380:	xchg   esi,eax
  419381:	pop    ebp
  419382:	jle    0x419349
  419384:	add    eax,0x789de701
  419389:	jns    0x4193e4
  41938b:	mov    ds:0xb4fe85bf,eax
  419390:	test   ch,ch
  419392:	mov    edx,edi
  419394:	pop    edx
  419395:	push   eax
  419396:	add    edx,DWORD PTR [eax-0x49424207]
  41939c:	lods   eax,DWORD PTR ds:[esi]
  41939d:	and    al,0x5b
  41939f:	xor    al,0xcf
  4193a1:	mov    dh,0x2f
  4193a3:	call   0xdd5d:0x5338d808
  4193aa:	ins    DWORD PTR es:[edi],dx
  4193ab:	adc    BYTE PTR [eax*4+0x2dee54e0],bl
  4193b2:	fadd   QWORD PTR ds:0x571ba9a1
  4193b8:	jno    0x419434
  4193ba:	adc    DWORD PTR [edi],0xffffff88
  4193bd:	outs   dx,DWORD PTR ds:[esi]
  4193be:	ds fs mov ecx,0x9cee689
  4193c5:	in     al,dx
  4193c6:	sub    ecx,DWORD PTR [edi]
  4193c8:	and    BYTE PTR [eax],bl
  4193ca:	sti    
  4193cb:	dec    ecx
  4193cc:	aam    0x67
  4193ce:	cs dec esi
  4193d0:	test   eax,0x45c7c8a0
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	popf   
  4193dd:	test   al,0x42
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a89d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a89d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a89d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a89d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a821,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a821
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a821,ecx
  419434:	cmp    DWORD PTR ds:0x42a821,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a821,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a9af
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7d1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a82d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a82d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a82d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a82d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa68
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a82d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a825
  4194bb:	and    DWORD PTR ds:0x42a795,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a78d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a799
  4194d8:	adc    DWORD PTR ds:0x42a891,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a781,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a89d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a815,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a859,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x50],eax
  41952b:	fcmovb st,st(5)
  41952d:	xchg   esp,eax
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x4194f7
  419537:	inc    ebp
  419538:	out    0xcd,eax
  41953a:	pop    ebx
  41953b:	cmp    edi,ebp
  41953d:	or     edi,ecx
  41953f:	xchg   esp,eax
  419540:	into   
  419541:	cdq    
  419542:	add    eax,0xf3b8c1f1
  419547:	je     0x4194fc
  419549:	dec    ebx
  41954a:	loop   0x4195b6
  41954c:	sub    BYTE PTR [edx+ecx*2],0x1
  419550:	and    al,0x8e
  419552:	ss fwait
  419554:	lods   al,BYTE PTR ds:[esi]
  419555:	out    0x9a,eax
  419557:	in     eax,dx
  419558:	in     eax,0x31
  41955a:	fisttp WORD PTR [eax]
  41955c:	pop    ecx
  41955d:	std    
  41955e:	dec    esi
  41955f:	xchg   edx,eax
  419560:	cmp    BYTE PTR [eax-0x39],cl
  419563:	xor    eax,0xce6d8364
  419568:	push   esp
  419569:	(bad)  
  41956a:	stos   DWORD PTR es:[edi],eax
  41956b:	cdq    
  41956c:	sahf   
  41956d:	(bad)  
  41956e:	inc    BYTE PTR [esp+ebp*2-0x41]
  419572:	in     eax,0xc2
  419574:	xor    eax,0xd344f293
  419579:	mov    cl,0x71
  41957b:	or     bl,BYTE PTR [ebx+0x5cf501d2]
  419581:	xor    ecx,DWORD PTR [ebp-0x59]
  419584:	mov    ebx,0xe64c4b86
  419589:	pop    esp
  41958a:	mov    ecx,0x442cd1b2
  41958f:	mov    ah,0xd5
  419591:	gs imul dl
  419594:	popf   
  419595:	jne    0x4195fa
  419597:	xor    ebx,ecx
  419599:	sbb    DWORD PTR ds:0x7c38a927,ebp
  41959f:	fs ret 
  4195a1:	or     al,0x35
  4195a3:	jo     0x41953e
  4195a5:	cmc    
  4195a6:	int3   
  4195a7:	mov    al,ds:0x13691344
  4195ac:	je     0x41953a
  4195ae:	jbe    0x4195a7
  4195b0:	inc    edx
  4195b1:	(bad)  
  4195b3:	fstp   st(2)
  4195b5:	sbb    ah,BYTE PTR [esi+esi*8]
  4195b8:	jl     0x4195ec
  4195ba:	imul   BYTE PTR [eax-0xe]
  4195bd:	(bad)  
  4195be:	(bad)  
  4195bf:	ret    
  4195c0:	cmp    al,0xce
  4195c2:	mov    ch,0x7b
  4195c4:	and    dl,BYTE PTR [ebx]
  4195c6:	and    eax,0x4ff79a42
  4195cb:	mov    bh,al
  4195cd:	cmp    dh,BYTE PTR [ebp+0x48]
  4195d0:	loop   0x419640
  4195d2:	ror    BYTE PTR ds:0x67590913,0x73
  4195d9:	aas    
  4195da:	xor    eax,0x7160535d
  4195df:	fstp   DWORD PTR [ecx+0x1c]
  4195e2:	sbb    BYTE PTR [edi+ecx*2+0x18],dh
  4195e6:	jl     0x4195a5
  4195e8:	pminsw mm3,QWORD PTR [edi+0x3b]
  4195ec:	dec    esi
  4195ed:	sbb    cl,BYTE PTR [ebp+0x1f]
  4195f0:	in     al,dx
  4195f1:	pop    edi
  4195f2:	inc    ebx
  4195f3:	mov    esi,DWORD PTR [edx-0x28]
  4195f6:	lds    eax,FWORD PTR [ecx]
  4195f8:	jmp    0x41957a
  4195fa:	lods   al,BYTE PTR ds:[esi]
  4195fb:	xor    DWORD PTR [ebx],esp
  4195fd:	mov    ebx,0x70942494
  419602:	int3   
  419603:	lea    edx,[ecx]
  419605:	nop
  419606:	sub    esp,DWORD PTR [eax-0x5d]
  419609:	clc    
  41960a:	iret   
  41960b:	mov    ecx,0x9a9bc4a4
  419610:	mov    bl,BYTE PTR [edx-0x2e]
  419613:	inc    ebx
  419614:	int    0x75
  419616:	xor    DWORD PTR [esi+ebp*8],ebx
  419619:	adc    dl,BYTE PTR [edx-0xb362059]
  41961f:	enter  0x71bc,0xda
  419623:	fadd   DWORD PTR [ebx+0x39]
  419626:	xchg   edx,eax
  419627:	pop    eax
  419628:	into   
  419629:	mov    bh,0x82
  41962b:	ins    BYTE PTR es:[edi],dx
  41962c:	push   cs
  41962d:	mov    ebx,0xe5e42491
  419632:	test   DWORD PTR [ebx],ecx
  419634:	and    BYTE PTR [ebp+0x14],ah
  419637:	inc    esi
  419638:	les    edx,FWORD PTR [edi-0x31c64952]
  41963e:	leave  
  41963f:	nop
  419640:	sahf   
  419641:	lahf   
  419642:	jmp    0x43f9a3b3
  419647:	inc    ecx
  419648:	sbb    ah,BYTE PTR [edi+0x226397d5]
  41964e:	dec    edx
  41964f:	loop   0x4196aa
  419651:	add    al,0xc9
  419653:	jne    0x419602
  419655:	or     BYTE PTR [eax-0x5b247241],cl
  41965b:	mov    eax,0xeac383eb
  419660:	out    0xa9,eax
  419662:	lock adc ecx,edi
  419665:	aam    0x27
  419667:	outs   dx,BYTE PTR ds:[esi]
  419668:	adc    ch,0x72
  41966b:	sti    
  41966c:	loop   0x41964e
  41966e:	stc    
  41966f:	iret   
  419670:	fild   QWORD PTR [edi]
  419672:	xor    BYTE PTR [eax+0x17390ca9],al
  419678:	xchg   edx,eax
  419679:	loop   0x4196e4
  41967b:	cmp    DWORD PTR [edx-0x61],ebx
  41967e:	xor    ebp,DWORD PTR [ebx-0x4c]
  419681:	in     eax,0x67
  419683:	out    0xdb,eax
  419685:	leave  
  419686:	pop    ebp
  419687:	sbb    al,0x19
  419689:	in     al,dx
  41968a:	dec    ecx
  41968b:	xchg   edi,eax
  41968c:	xor    bh,BYTE PTR [ebx+0x30]
  41968f:	mov    bh,0xa4
  419691:	jge    0x4196fb
  419693:	dec    esp
  419694:	js     0x419703
  419696:	jmp    0x82d04a40
  41969b:	mov    esi,ebx
  41969d:	jne    0x4196ce
  41969f:	fwait
  4196a0:	add    BYTE PTR [ebx+0x31],bh
  4196a3:	push   esp
  4196a4:	sub    ecx,DWORD PTR [eax]
  4196a6:	repnz mov al,0x4d
  4196a9:	jb     0x419667
  4196ab:	jnp    0x419646
  4196ad:	loop   0x419661
  4196af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196b0:	out    0x2d,al
  4196b2:	adc    edi,DWORD PTR [esi+0x48]
  4196b5:	enter  0xe7c8,0x88
  4196b9:	fs push ebx
  4196bb:	dec    esi
  4196bc:	call   0x5ea8:0x23d3d8a5
  4196c3:	mov    esi,fs
  4196c5:	push   edi
  4196c6:	and    eax,0x9caa978e
  4196cb:	sbb    edi,DWORD PTR [eax-0x1a]
  4196ce:	lds    ebx,FWORD PTR [ebp+0x5a]
  4196d1:	stc    
  4196d2:	je     0x419666
  4196d4:	mov    ds:0x10b12ce6,eax
  4196d9:	mov    dh,0x40
  4196db:	popa   
  4196dc:	pop    esp
  4196dd:	dec    ebp
  4196de:	lahf   
  4196df:	mov    esi,0x89a1ea73
  4196e4:	push   esi
  4196e5:	hlt    
  4196e6:	out    dx,eax
  4196e7:	fldln2 
  4196e9:	cdq    
  4196ea:	repz pop eax
  4196ec:	jmp    0xc849:0xae30bb50
  4196f3:	jl     0x419768
  4196f5:	pop    esi
  4196f6:	clc    
  4196f7:	pop    ebx
  4196f8:	dec    DWORD PTR [esi+0x24930f1]
  4196fe:	dec    esp
  4196ff:	bound  ebx,QWORD PTR [esi]
  419701:	daa    
  419702:	imul   ecx,esi,0x2c
  419705:	int    0xaf
  419707:	popf   
  419708:	shl    BYTE PTR [esi+0x1c],cl
  41970b:	fsubr  DWORD PTR [edi]
  41970d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970e:	lods   eax,DWORD PTR ds:[esi]
  41970f:	sti    
  419710:	cmp    al,0x89
  419712:	mov    al,ds:0xd79e176f
  419717:	mov    al,bl
  419719:	repnz sbb BYTE PTR [ebx],0x7a
  41971d:	mul    BYTE PTR [edx-0x7de84bac]
  419723:	pusha  
  419724:	das    
  419725:	sahf   
  419726:	out    0x5d,al
  419728:	push   es
  419729:	mov    dl,0x91
  41972b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41972c:	rcl    DWORD PTR cs:[eax+0x19617dd1],1
  419733:	adc    eax,0x6284bc2c
  419738:	in     al,0x88
  41973a:	(bad)  
  41973b:	jmp    0xb41a:0x96febd2c
  419742:	mov    ecx,0x5c7379b3
  419747:	jmp    0xbcef:0xfb695810
  41974e:	mov    ecx,DWORD PTR [ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a821
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a89d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a865
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7d5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xe025ddeb
  41979d:	push   ebp
  41979e:	and    DWORD PTR [eax],edi
  4197a0:	leave  
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x419785
  4197a8:	inc    esi
  4197a9:	sahf   
  4197aa:	adc    al,0xbc
  4197ac:	stc    
  4197ad:	in     eax,dx
  4197ae:	xchg   esp,eax
  4197af:	aas    
  4197b0:	ret    
  4197b1:	adc    ecx,ecx
  4197b3:	push   ebx
  4197b4:	ror    DWORD PTR [edi+0x603dfb8d],cl
  4197ba:	lods   eax,DWORD PTR ds:[esi]
  4197bb:	icebp  
  4197bc:	sbb    dl,BYTE PTR [ebx+0x482a155c]
  4197c2:	leave  
  4197c3:	mov    bh,0x10
  4197c5:	out    0x54,eax
  4197c7:	xor    eax,0x3f130af8
  4197cc:	jbe    0x419817
  4197ce:	out    dx,al
  4197cf:	inc    edi
  4197d0:	pusha  
  4197d1:	add    BYTE PTR [esi],0xbf
  4197d4:	aaa    
  4197d5:	dec    esp
  4197d6:	hlt    
  4197d7:	dec    edx
  4197d8:	cmp    BYTE PTR [esp+ecx*4-0x28b7c8ad],ah
  4197df:	fnstenv [edx+edx*1-0x38ca8bbf]
  4197e6:	leave  
  4197e7:	fild   QWORD PTR [ebp+0x1782e368]
  4197ed:	pop    ebp
  4197ee:	ds pop ebx
  4197f0:	inc    esi
  4197f1:	shr    al,cl
  4197f3:	mov    ah,0x23
  4197f5:	cwde   
  4197f6:	call   DWORD PTR [ecx-0x7f9840f3]
  4197fc:	adc    eax,DWORD PTR [esi+edi*8]
  4197ff:	xchg   ebx,eax
  419800:	out    0xa7,eax
  419802:	mov    eax,ds:0x4e368919
  419807:	(bad)  
  419808:	loop   0x419830
  41980a:	dec    eax
  41980b:	imul   ecx,DWORD PTR [edi],0x6f
  41980e:	nop
  41980f:	call   0xe9041c50
  419814:	call   0x63f8275e
  419819:	jno    0x41982a
  41981b:	add    eax,0xe09917af
  419820:	adc    DWORD PTR [ebx-0x1e0144fb],ecx
  419826:	xchg   ebx,eax
  419827:	xor    al,0xa1
  419829:	push   ds
  41982a:	mov    dh,0xb0
  41982c:	mov    eax,ds:0x9fd3a1bc
  419831:	pop    esp
  419832:	dec    eax
  419833:	xchg   ebp,eax
  419834:	hlt    
  419835:	in     al,dx
  419836:	lahf   
  419837:	push   esi
  419838:	lahf   
  419839:	ins    BYTE PTR es:[edi],dx
  41983a:	or     DWORD PTR [esi+0x7f],0x1c
  41983e:	xchg   edx,eax
  41983f:	dec    esp
  419840:	xchg   edi,eax
  419841:	jo     0x41980f
  419843:	imul   eax,DWORD PTR [edx+ebp*1-0x66],0x62
  419848:	gs gs cmp eax,0x1e722e4c
  41984f:	or     eax,0xd91a41bd
  419854:	je     0x419811
  419856:	sar    DWORD PTR [edi+0x3b5769ea],1
  41985c:	adc    DWORD PTR [ecx+0x3fcbe8e0],0xffffff9e
  419863:	fdiv   QWORD PTR [eax+0x627f55e9]
  419869:	aas    
  41986a:	ins    DWORD PTR es:[edi],dx
  41986b:	aad    0x28
  41986d:	xor    BYTE PTR [esi-0x6a],dh
  419870:	in     al,dx
  419871:	xchg   ecx,eax
  419872:	fwait
  419873:	dec    ecx
  419874:	xor    BYTE PTR [edx-0x63],bl
  419877:	out    dx,al
  419878:	adc    al,bl
  41987a:	es es in eax,0x15
  41987e:	test   al,0x5e
  419880:	lock inc edi
  419882:	call   0xf24f:0x9ab4ee6
  419889:	cmp    DWORD PTR [edx+eax*2-0x41],eax
  41988d:	sar    BYTE PTR [edx*4+0x3c7a1f97],1
  419894:	jns    0x419847
  419896:	xor    al,0xd9
  419898:	adc    al,0xa5
  41989a:	pop    eax
  41989b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41989c:	pop    ss
  41989d:	inc    edi
  41989e:	cs push es
  4198a0:	xchg   esp,eax
  4198a1:	pop    ebp
  4198a2:	mov    ch,0xca
  4198a4:	retf   0x963e
  4198a7:	enter  0x9ddf,0x91
  4198ab:	mov    ds:0x7ca060e8,eax
  4198b0:	shr    DWORD PTR [ebp+ebx*4-0x59],1
  4198b4:	xchg   ebp,eax
  4198b5:	sub    ecx,DWORD PTR [eax-0x57f3f6f5]
  4198bb:	test   eax,0xbebbb4a7
  4198c0:	(bad)  
  4198c1:	popa   
  4198c2:	test   al,0xfd
  4198c4:	jo     0x419927
  4198c6:	mov    WORD PTR [eax+0x1b],fs
  4198c9:	test   al,0x95
  4198cb:	jmp    0x75c5:0x1a8571ff
  4198d2:	push   0xffffff85
  4198d4:	scas   al,BYTE PTR es:[edi]
  4198d5:	xchg   ebx,esp
  4198d7:	jno    0x4198cb
  4198d9:	mov    ds:0x579f38f4,eax
  4198de:	or     DWORD PTR [edi+ebx*4-0x3],0xffffff88
  4198e3:	adc    BYTE PTR [eax+edi*1-0x46093d54],al
  4198ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198eb:	shl    BYTE PTR [ebp+0x4f],0x58
  4198ef:	loop   0x419881
  4198f1:	repz bound ebp,QWORD PTR [edi]
  4198f4:	pop    edx
  4198f5:	fs (bad) 
  4198f7:	jge    0x419956
  4198f9:	mov    al,ds:0xe762fe3a
  4198fe:	lahf   
  4198ff:	sbb    eax,0x74111332
  419904:	pop    esi
  419905:	stos   BYTE PTR es:[edi],al
  419906:	das    
  419907:	jl     0x419987
  419909:	or     ebp,DWORD PTR [esp]
  41990c:	cmc    
  41990d:	and    DWORD PTR [esi-0x35c5480],edx
  419913:	jmp    0x441a50d3
  419918:	arpl   WORD PTR [esi+eax*2-0x68],cx
  41991c:	cmp    DWORD PTR [eax+0xf5e77d8],edi
  419922:	xchg   DWORD PTR [edi+0x6b],ebx
  419925:	mov    edx,0x4a1ce5ee
  41992a:	int3   
  41992b:	sahf   
  41992c:	ret    
  41992d:	add    DWORD PTR [ebp-0x43ff0a40],eax
  419933:	inc    esp
  419934:	fldenv [eax]
  419936:	(bad)  
  419937:	xlat   BYTE PTR ds:[ebx]
  419938:	cwde   
  419939:	sbb    ch,BYTE PTR [ecx-0x62]
  41993c:	push   ds
  41993d:	pop    esi
  41993e:	out    dx,eax
  41993f:	pop    edx
  419940:	not    esi
  419942:	aam    0x4e
  419944:	jns    0x41992f
  419946:	dec    eax
  419947:	dec    esp
  419948:	call   0xd23c3d3c
  41994d:	and    edx,edi
  41994f:	jnp    0x41992b
  419951:	push   ecx
  419952:	ret    0x3b93
  419955:	and    BYTE PTR [ebp-0x6fb722d6],bh
  41995b:	pop    es
  41995c:	stos   BYTE PTR es:[edi],al
  41995d:	sub    al,0xb1
  41995f:	mov    ch,0x2f
  419961:	pop    esp
  419962:	pop    esp
  419963:	(bad)  
  419964:	jne    0x419946
  419966:	or     ebp,DWORD PTR [ecx+0x591ee22b]
  41996c:	js     0x4199e6
  41996e:	test   al,0xa1
  419970:	dec    ebx
  419971:	ficomp WORD PTR [ecx-0x32]
  419974:	sub    esi,DWORD PTR ds:0x4e605a2f
  41997a:	dec    ebp
  41997b:	sbb    ebx,DWORD PTR [eax-0x5b]
  41997e:	cmc    
  41997f:	push   es
  419980:	ret    
  419981:	dec    ecx
  419982:	sar    BYTE PTR [edx-0x9],0xea
  419986:	test   eax,0x308d68db
  41998b:	mov    bl,0xd6
  41998d:	cmp    bh,BYTE PTR [edi-0x30c99fe]
  419993:	mov    esp,0x13a118e4
  419998:	jne    0x4199fe
  41999a:	inc    ebx
  41999b:	push   ss
  41999c:	mov    ecx,0x427a04de
  4199a1:	in     al,dx
  4199a2:	loopne 0x419954
  4199a4:	lea    edx,[ebp+0x4dc92fc8]
  4199aa:	push   edi
  4199ab:	(bad)  
  4199ad:	sti    
  4199ae:	hlt    
  4199af:	out    0x28,eax
  4199b1:	sub    al,0x26
  4199b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199b4:	fldcw  WORD PTR [edi]
  4199b6:	js     0x4199ff
  4199b8:	pushf  
  4199b9:	(bad)  
  4199ba:	jmp    DWORD PTR [esi-0x74]
  4199bd:	popf   
  4199be:	pop    esi
  4199bf:	sub    edx,edi
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a82d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a8a1,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a8a1,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a8a1,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a8a1
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a8a1,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a785,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a785,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a785,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a785,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a785
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a785,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a785
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a785,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a825,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a869,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7d5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a85d,0x42a7d1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a8a1,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a8a1
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a8a1,eax
  419ac8:	cmp    DWORD PTR ds:0x42a8a1,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a8a1,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a825
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7ed
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a865
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x26
  419b14:	pop    eax
  419b15:	xor    al,0xd1
  419b17:	ror    bh,1
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b30
  419b20:	fistp  DWORD PTR [eax-0x55140ff3]
  419b26:	pusha  
  419b27:	push   edi
  419b28:	sar    BYTE PTR [edx-0x6a],0x56
  419b2c:	iret   
  419b2d:	fucomp st(5)
  419b2f:	(bad)  
  419b30:	pusha  
  419b31:	ss xchg edi,eax
  419b33:	or     eax,0x86ef7d10
  419b38:	push   ss
  419b39:	out    0xf8,eax
  419b3b:	or     ebx,DWORD PTR [eax-0x30ab2a38]
  419b41:	add    ebp,DWORD PTR [edi-0x2a]
  419b44:	adc    edx,ebx
  419b46:	push   edx
  419b47:	and    al,0x83
  419b49:	mov    edx,0xd360bac6
  419b4e:	iret   
  419b4f:	sub    DWORD PTR [edx],ecx
  419b51:	rsm    
  419b53:	sub    ecx,ebp
  419b55:	cmc    
  419b56:	jnp    0x419b94
  419b58:	ss mov ebx,0x5b8b8f53
  419b5e:	xlat   BYTE PTR ds:[ebx]
  419b5f:	fwait
  419b60:	xor    eax,0x8729ee8c
  419b65:	xor    al,0xe
  419b67:	sar    ch,0x4b
  419b6a:	lea    ebx,[esp+ebx*1-0x40b43a73]
  419b71:	xor    BYTE PTR [ebp+0x7958f90a],0x2b
  419b78:	jo     0x419b6f
  419b7a:	sub    dh,BYTE PTR [esi-0x23d727c9]
  419b80:	pop    ebp
  419b81:	pop    esi
  419b82:	fdivp  st(5),st
  419b84:	or     BYTE PTR [ebx+0x65],bh
  419b87:	sub    eax,0x6b851607
  419b8c:	call   0xcfc1:0x196edb2a
  419b93:	pop    ebx
  419b94:	popa   
  419b95:	add    BYTE PTR [ebp-0x1d9f18e6],cl
  419b9b:	loopne 0x419bc3
  419b9d:	xchg   eax,eax
  419b9f:	into   
  419ba0:	adc    eax,0xfd7f56e7
  419ba5:	(bad)  
  419ba6:	retf   
  419ba7:	or     al,0x97
  419ba9:	mov    edi,0x3fb8a816
  419bae:	cmp    BYTE PTR [ebx],bl
  419bb0:	mov    cl,0x93
  419bb2:	and    al,0xf1
  419bb4:	dec    edx
  419bb5:	pop    ss
  419bb6:	xchg   esi,eax
  419bb7:	adc    BYTE PTR [esi-0x56],bl
  419bba:	jne    0x419c18
  419bbc:	inc    edx
  419bbd:	in     eax,dx
  419bbe:	xor    DWORD PTR [edi+0x72],edx
  419bc1:	cmp    DWORD PTR [eax-0x559be1c8],0x317a4658
  419bcb:	arpl   WORD PTR [esi+0x267a50fb],cx
  419bd1:	xchg   edi,eax
  419bd2:	in     al,0x6b
  419bd4:	fimul  DWORD PTR [esi]
  419bd6:	lds    ebp,FWORD PTR [edx]
  419bd8:	xchg   ebx,eax
  419bd9:	jmp    0x419bdc
  419bdb:	aad    0x8d
  419bdd:	pusha  
  419bde:	lds    esp,FWORD PTR [edx-0x10]
  419be1:	pop    ebx
  419be2:	jmp    0x71c22b36
  419be7:	inc    esi
  419be8:	cmp    edi,ebp
  419bea:	push   ss
  419beb:	fstp   QWORD PTR [edi-0x6143655]
  419bf1:	xchg   BYTE PTR [esi+edi*4],ch
  419bf4:	bound  edi,QWORD PTR [ecx]
  419bf6:	sti    
  419bf7:	aad    0x3b
  419bf9:	pop    edi
  419bfa:	fist   WORD PTR [edx+0x5ff71996]
  419c00:	(bad)  
  419c01:	jno    0x419c40
  419c03:	and    BYTE PTR [edi-0x2c],ch
  419c06:	sub    bl,BYTE PTR [esi+0x6716ac78]
  419c0c:	sub    dh,dh
  419c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c0f:	retf   
  419c10:	mov    DWORD PTR [ebx-0x2],esi
  419c13:	mov    bh,ah
  419c15:	shl    bh,cl
  419c17:	sbb    bl,BYTE PTR [eax-0x34]
  419c1a:	push   ebx
  419c1b:	mov    ebp,eax
  419c1d:	mov    bh,0xd9
  419c1f:	jg     0x419bb5
  419c21:	retf   0xb8f2
  419c24:	jb     0x419c2d
  419c26:	mov    ecx,ss
  419c28:	inc    eax
  419c29:	mov    ds:0xab8ba456,eax
  419c2e:	loop   0x419c53
  419c30:	dec    eax
  419c31:	pusha  
  419c32:	and    ch,BYTE PTR [edx+0x49b6ba0a]
  419c38:	retf   0x1bf8
  419c3b:	adc    al,0x75
  419c3d:	mov    ds:0x53328595,al
  419c42:	lods   eax,DWORD PTR ds:[esi]
  419c43:	mov    esp,0xbda903ea
  419c48:	push   edi
  419c49:	xchg   ebp,eax
  419c4a:	or     BYTE PTR [ecx-0x28f9f2de],0x13
  419c51:	je     0x419c1b
  419c53:	fild   QWORD PTR [edi]
  419c55:	mov    edx,0xcc73b45
  419c5a:	xor    cl,BYTE PTR [ebx+0x3c]
  419c5d:	leave  
  419c5e:	sub    ah,BYTE PTR [edi-0x41558f81]
  419c64:	out    dx,al
  419c65:	dec    edi
  419c66:	scas   al,BYTE PTR es:[edi]
  419c67:	xchg   esi,eax
  419c68:	imul   esi,DWORD PTR [edi-0x18],0xffffff93
  419c6c:	add    eax,0x7352da0
  419c71:	push   0xfffffff6
  419c73:	adc    BYTE PTR [ebp+esi*2-0x1e],ch
  419c77:	xor    al,0xbe
  419c79:	loope  0x419cdc
  419c7b:	cwde   
  419c7c:	das    
  419c7d:	lods   eax,DWORD PTR ds:[esi]
  419c7e:	leave  
  419c7f:	push   eax
  419c80:	fwait
  419c81:	sbb    ch,bl
  419c83:	push   ss
  419c84:	xor    bh,BYTE PTR [edi-0x53a9bcfa]
  419c8a:	gs sub eax,0xe3b011d1
  419c90:	(bad)  [edx]
  419c92:	std    
  419c93:	mov    gs,edx
  419c95:	aas    
  419c96:	cmc    
  419c97:	add    DWORD PTR [edx],ecx
  419c99:	push   eax
  419c9a:	pop    ebx
  419c9b:	in     eax,dx
  419c9c:	dec    ebx
  419c9d:	dec    ecx
  419c9e:	dec    DWORD PTR ds:0xc5b2cdab
  419ca4:	icebp  
  419ca5:	imul   ebp,DWORD PTR [edi],0xe60d88f2
  419cab:	sub    al,0x8a
  419cad:	xor    edx,ebx
  419caf:	out    dx,eax
  419cb0:	push   ebp
  419cb1:	mov    al,ds:0x59032302
  419cb6:	dec    ecx
  419cb7:	mov    cl,0xbb
  419cb9:	jne    0x419c8b
  419cbb:	(bad)  
  419cbc:	pop    ss
  419cbd:	cld    
  419cbe:	sar    BYTE PTR [ebp-0x36],1
  419cc1:	or     al,0xbc
  419cc3:	lods   al,BYTE PTR ds:[esi]
  419cc4:	and    al,0x55
  419cc6:	std    
  419cc7:	push   ecx
  419cc8:	adc    eax,0x6c8e0b97
  419ccd:	in     al,0xb0
  419ccf:	retf   0x3d81
  419cd2:	dec    edx
  419cd3:	dec    edx
  419cd4:	rcl    BYTE PTR [ebp+0x4d],1
  419cd7:	cmc    
  419cd8:	bound  esi,QWORD PTR [ecx+eiz*4-0x30]
  419cdc:	leave  
  419cdd:	jmp    DWORD PTR ss:[ecx+0x6a]
  419ce1:	or     DWORD PTR [ebp-0x277a925d],eax
  419ce7:	std    
  419ce8:	test   al,0x3c
  419cea:	push   ecx
  419ceb:	sti    
  419cec:	xchg   ebx,eax
  419ced:	addr16 inc ebp
  419cef:	cmp    ch,BYTE PTR [esi*4+0x4a6c9f4f]
  419cf6:	add    al,0x14
  419cf8:	and    eax,0x78ce690c
  419cfd:	in     eax,dx
  419cfe:	(bad)  
  419cff:	addr16 cld 
  419d01:	fbld   TBYTE PTR [edx+ebx*1]
  419d04:	and    eax,0xc31d072
  419d09:	repz or ebx,ebx
  419d0c:	jmp    0x4663:0x51ac94c7
  419d13:	movsx  ebp,WORD PTR [ebx-0x61]
  419d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d18:	mov    ebx,0xa7565828
  419d1d:	stc    
  419d1e:	js     0x419d32
  419d20:	mov    ah,0xfa
  419d22:	rol    DWORD PTR [edi-0x5b654989],1
  419d28:	adc    al,BYTE PTR [esi-0x43]
  419d2b:	sub    bl,BYTE PTR [ecx+0x7a3b1f4b]
  419d31:	ins    DWORD PTR es:[edi],dx
  419d32:	mov    ds:0xdf40a7a1,eax
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a859,0x42a78d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a8a9,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a85d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	dec    edi
  419d7d:	shr    DWORD PTR [edx+0x7fcde8cd],0x78
  419d84:	adc    BYTE PTR [esi+0x78],bh
  419d87:	js     0x419d0e
  419d89:	jbe    0x419dba
  419d8b:	out    0x51,eax
  419d8d:	mov    ebp,0x95b81e83
  419d92:	test   edx,ecx
  419d94:	xchg   edx,eax
  419d95:	pop    esi
  419d96:	push   ds
  419d97:	loopne 0x419d52
  419d99:	sub    DWORD PTR ds:0x27b84aff,edx
  419d9f:	and    al,0x23
  419da1:	and    al,0x60
  419da3:	jae    0x419d41
  419da5:	push   edi
  419da6:	sbb    esi,eax
  419da8:	xchg   ebx,eax
  419da9:	call   DWORD PTR [edi-0x6334ec93]
  419daf:	in     al,dx
  419db0:	out    dx,eax
  419db1:	repz (bad) 
  419db3:	xchg   edi,eax
  419db4:	and    al,0x5d
  419db6:	inc    ebp
  419db7:	icebp  
  419db8:	mov    dh,0xd4
  419dba:	fwait
  419dbb:	(bad)  
  419dbc:	aad    0x70
  419dbe:	mov    ds:0x810b11ec,eax
  419dc3:	pop    esp
  419dc4:	dec    esi
  419dc5:	pusha  
  419dc6:	sub    BYTE PTR [ecx+0x21],ah
  419dc9:	cs pop eax
  419dcb:	out    dx,eax
  419dcc:	mov    bh,BYTE PTR [edx]
  419dce:	cmp    eax,0xa72f35c7
  419dd3:	xchg   DWORD PTR [ecx],esp
  419dd5:	out    0x7b,eax
  419dd7:	mov    al,ds:0x91e2e330
  419ddc:	sbb    DWORD PTR [ebx],esp
  419dde:	(bad)  
  419ddf:	call   0x6bf4df82
  419de4:	xchg   edi,eax
  419de5:	sar    DWORD PTR [edi-0x4f],0x7
  419de9:	dec    edx
  419dea:	xchg   esp,eax
  419deb:	mov    ecx,0xdbc66b12
  419df0:	dec    eax
  419df1:	rcr    DWORD PTR [edi+edi*8],cl
  419df4:	jne    0x419e74
  419df6:	inc    ebp
  419df7:	shl    BYTE PTR [esi],1
  419df9:	imul   eax,DWORD PTR [ebp+0x5c1b749b],0xffffffa2
  419e00:	cdq    
  419e01:	mov    BYTE PTR [edx-0x1c],0x3a
  419e05:	jae    0x419dab
  419e07:	adc    BYTE PTR [edx+0x1bd487cb],bh
  419e0d:	aam    0x3b
  419e0f:	mov    bl,0x1d
  419e11:	jne    0x419e79
  419e13:	(bad)  
  419e14:	dec    ebx
  419e15:	fldenv [ecx]
  419e17:	ror    BYTE PTR [ebx-0x84b450e],1
  419e1d:	pop    eax
  419e1e:	repz xlat BYTE PTR ds:[ebx]
  419e20:	inc    ebx
  419e21:	scas   al,BYTE PTR es:[edi]
  419e22:	je     0x419da4
  419e24:	out    dx,al
  419e25:	imul   edi,DWORD PTR [edx+0xd],0xe66bae50
  419e2c:	sub    DWORD PTR [ebx],esi
  419e2e:	(bad)  
  419e2f:	mov    eax,0xe52d83b9
  419e34:	dec    ecx
  419e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e36:	jne    0x419e08
  419e38:	mov    ch,0x33
  419e3a:	cwde   
  419e3b:	sar    DWORD PTR [ebx+eiz*8+0x5e76b1b9],cl
  419e42:	push   esi
  419e43:	sbb    al,0x62
  419e45:	push   ds
  419e46:	cmp    edx,esp
  419e48:	add    al,0x72
  419e4a:	rcl    al,1
  419e4c:	pop    esi
  419e4d:	rcl    cl,cl
  419e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e50:	push   bx
  419e52:	and    al,0x30
  419e54:	ins    BYTE PTR es:[edi],dx
  419e55:	push   cs
  419e56:	pushw  0x2684
  419e5a:	add    eax,0x78
  419e5d:	inc    ebx
  419e5e:	mov    ebp,0x50f61775
  419e63:	mov    WORD PTR [edx],ss
  419e65:	fisubr WORD PTR [esi]
  419e67:	shr    BYTE PTR [ebx+0x5c],0x18
  419e6b:	cdq    
  419e6c:	sub    al,0xee
  419e6e:	push   ebp
  419e6f:	dec    eax
  419e70:	pop    ds
  419e71:	sub    DWORD PTR [edx+0x5d],ebp
  419e74:	popf   
  419e75:	xchg   DWORD PTR [esi-0x44],edi
  419e78:	jmp    0x419e74
  419e7a:	retf   0x9416
  419e7d:	add    ecx,DWORD PTR [ebx+0x4fde74a7]
  419e83:	mov    eax,ds:0xbc3d34a5
  419e88:	test   BYTE PTR [ecx+0x10],cl
  419e8b:	pop    ds
  419e8c:	sbb    al,0x25
  419e8e:	sub    bl,ch
  419e90:	leave  
  419e91:	sti    
  419e92:	arpl   WORD PTR [eax],si
  419e94:	mov    ebx,0x946535e5
  419e99:	dec    ebx
  419e9a:	push   ds
  419e9b:	cld    
  419e9c:	out    0xba,al
  419e9e:	mov    bl,0xa7
  419ea0:	call   0x3e3a:0x63ec513f
  419ea7:	aam    0x9
  419ea9:	push   esp
  419eaa:	popf   
  419eab:	outs   dx,BYTE PTR ds:[esi]
  419eac:	pop    ds
  419ead:	outs   dx,DWORD PTR ds:[esi]
  419eae:	pop    es
  419eaf:	sti    
  419eb0:	clc    
  419eb1:	dec    ebp
  419eb2:	js     0x419f21
  419eb4:	out    0x2f,eax
  419eb6:	cs sub esp,edx
  419eb9:	fdiv   QWORD PTR [edi]
  419ebb:	and    eax,0x7a61b0a3
  419ec0:	test   al,0xd9
  419ec2:	int3   
  419ec3:	pop    ecx
  419ec4:	xchg   ebp,eax
  419ec5:	cdq    
  419ec6:	dec    esi
  419ec7:	mov    ch,0x3c
  419ec9:	lock mov ecx,0xce5953ba
  419ecf:	popa   
  419ed0:	loope  0x419f40
  419ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed3:	xor    DWORD PTR [edx],eax
  419ed5:	inc    ebp
  419ed6:	not    DWORD PTR [edx]
  419ed8:	sti    
  419ed9:	sub    bh,ch
  419edb:	jl     0x419eab
  419edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ede:	jp     0x419eb5
  419ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee1:	or     eax,0x1ed44298
  419ee6:	xchg   esi,eax
  419ee7:	adc    DWORD PTR [eax],edi
  419ee9:	jno    0x419ed2
  419eeb:	inc    edi
  419eec:	pop    es
  419eed:	mov    fs,WORD PTR [eax+edx*8-0x18]
  419ef1:	xchg   BYTE PTR [ebp+0x11],dl
  419ef4:	in     al,dx
  419ef5:	pop    esi
  419ef6:	pop    edi
  419ef7:	or     BYTE PTR [edi+0x57f74683],al
  419efd:	ret    0x422d
  419f00:	mov    ebx,0x81f64867
  419f05:	ror    BYTE PTR [edx],cl
  419f07:	icebp  
  419f08:	and    BYTE PTR [ecx+0x2e],bl
  419f0b:	push   0x26d2c690
  419f10:	or     DWORD PTR [eax+ecx*1+0x61dd5cec],0xffffffb7
  419f18:	inc    esp
  419f19:	sbb    DWORD PTR [edi+0x51c8b305],ecx
  419f1f:	cmp    BYTE PTR [edi-0xf],cl
  419f22:	ret    0x3a
  419f25:	inc    edx
  419f26:	stc    
  419f27:	mov    WORD PTR [ebp-0x71ba3a22],ss
  419f2d:	add    edx,0xffffff8b
  419f30:	xchg   edi,eax
  419f31:	push   ebp
  419f32:	jb     0x419ec6
  419f34:	adc    al,dl
  419f36:	inc    esi
  419f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f38:	stos   DWORD PTR es:[edi],eax
  419f39:	out    dx,al
  419f3a:	add    eax,eax
  419f3c:	aad    0xe6
  419f3e:	icebp  
  419f3f:	mov    ah,0x1a
  419f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f42:	adc    ah,al
  419f44:	and    ebx,DWORD PTR [eax-0x9]
  419f47:	cli    
  419f48:	adc    ebx,DWORD PTR [edx+0x44b19eb3]
  419f4e:	cmp    BYTE PTR [edi+0x0],ch
  419f51:	inc    esp
  419f52:	iret   
  419f53:	or     BYTE PTR [esi],cl
  419f55:	mov    bl,0x54
  419f57:	stos   DWORD PTR es:[edi],eax
  419f58:	daa    
  419f59:	mov    ds:0x51b09705,al
  419f5e:	push   ds
  419f5f:	pop    ebp
  419f60:	cli    
  419f61:	jle    0x419fd3
  419f63:	push   edi
  419f64:	test   eax,0xf44a9876
  419f69:	iret   
  419f6a:	fwait
  419f6b:	dec    ecx
  419f6c:	add    DWORD PTR [eax],0x49
  419f6f:	out    dx,al
  419f70:	mov    esp,0xbe13033c
  419f75:	pusha  
  419f76:	int    0x7
  419f78:	aam    0xc4
  419f7a:	sar    dl,0xa4
  419f7d:	sub    edi,ebx
  419f7f:	cmp    ebp,ebx
  419f81:	xchg   ebx,eax
  419f82:	retf   0xb5a9
  419f85:	xor    ebp,DWORD PTR [edi-0x38a8cbff]
  419f8b:	icebp  
  419f8c:	xor    ebx,0x15
  419f8f:	iret   
  419f90:	and    ah,BYTE PTR [eax-0x3b]
  419f93:	test   eax,0x4ca70c10
  419f98:	inc    ecx
  419f99:	data16 stc 
  419f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9c:	jg     0x419fb6
  419f9e:	stos   DWORD PTR es:[edi],eax
  419f9f:	ss jne 0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7e5,0x42a781
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a891,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a855,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x6c
  419fdd:	mov    cl,0x35
  419fdf:	test   DWORD PTR [eax+0x10787fd3],eax
  419fe5:	jle    0x41a05f
  419fe7:	js     0x41a01e
  419fe9:	retf   0xe24d
  419fec:	stos   DWORD PTR es:[edi],eax
  419fed:	xor    DWORD PTR [ebp+0x25f21fe9],ebx
  419ff3:	mov    ds:0xf595f90b,al
  419ff8:	repnz fsub QWORD PTR [esi]
  419ffb:	pop    ecx
  419ffc:	adc    cl,BYTE PTR [esi+0x3b]
  419fff:	repnz gs adc al,0xad
  41a003:	sub    al,0xb3
  41a005:	out    dx,eax
  41a006:	mov    ch,0xc0
  41a008:	lods   eax,DWORD PTR ds:[esi]
  41a009:	sub    al,0x14
  41a00b:	xor    ah,BYTE PTR [eax+eax*8]
  41a00e:	jmp    0x4d77:0x350e3093
  41a015:	xor    ecx,DWORD PTR [edx]
  41a017:	xor    eax,0xa68f0700
  41a01c:	sbb    edi,eax
  41a01e:	cmp    DWORD PTR [edi],esp
  41a020:	ins    BYTE PTR es:[edi],dx
  41a021:	sbb    edx,ecx
  41a023:	mov    bh,0x57
  41a025:	add    DWORD PTR [ebx],esi
  41a027:	retf   
  41a028:	push   ebx
  41a029:	idiv   BYTE PTR [edx]
  41a02b:	pop    ss
  41a02c:	ja     0x419fe6
  41a02e:	stc    
  41a02f:	(bad)  
  41a030:	cld    
  41a031:	cdq    
  41a032:	cmp    al,0x6b
  41a034:	ds shl eax,cl
  41a037:	dec    ebp
  41a038:	push   ss
  41a039:	rcl    BYTE PTR [eax+0x49289404],0x33
  41a040:	xchg   ebp,eax
  41a041:	inc    ebp
  41a042:	xchg   edx,eax
  41a043:	push   eax
  41a044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a045:	cmp    al,0xd0
  41a047:	pop    edi
  41a048:	mwaitx 
  41a04b:	pusha  
  41a04c:	into   
  41a04d:	or     ah,BYTE PTR [edi-0x1ffe7814]
  41a053:	or     dh,BYTE PTR [ebp+0x3c]
  41a056:	jge    0x41a060
  41a058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a059:	test   BYTE PTR [ebx-0x1d14cd92],0x50
  41a060:	sahf   
  41a061:	aam    0x10
  41a063:	jge    0x41a09e
  41a065:	jl     0x41a085
  41a067:	mov    eax,ds:0x57d24c1
  41a06c:	add    al,0x6
  41a06e:	cmp    bh,BYTE PTR [eax]
  41a070:	clc    
  41a071:	sbb    BYTE PTR [eax+0x13eb4c7e],dl
  41a077:	(bad)  
  41a078:	mov    ecx,0x7550c053
  41a07d:	fwait
  41a07e:	mov    ebp,0x3116bf90
  41a083:	adc    ebx,DWORD PTR [eax+eiz*8+0x6c429693]
  41a08a:	cs pop edi
  41a08c:	adc    ah,BYTE PTR fs:[ecx]
  41a08f:	cmc    
  41a090:	inc    edx
  41a091:	shl    BYTE PTR [eax],0x31
  41a094:	jecxz  0x41a0e4
  41a096:	pop    edi
  41a097:	add    DWORD PTR [ecx],ebx
  41a099:	xchg   edi,eax
  41a09a:	cmp    BYTE PTR [ebx+0x24],bl
  41a09d:	sub    al,0xc8
  41a09f:	rcr    BYTE PTR [eax+0x6ebba69b],cl
  41a0a5:	mov    edi,ecx
  41a0a7:	int3   
  41a0a8:	(bad)
  41a0ab:	(bad)  
  41a0ac:	ins    DWORD PTR es:[edi],dx
  41a0ad:	and    ch,BYTE PTR [edx-0x7fff118c]
  41a0b3:	xchg   esi,eax
  41a0b4:	xchg   edi,eax
  41a0b5:	push   edi
  41a0b6:	cld    
  41a0b7:	dec    edi
  41a0b8:	add    al,0x1a
  41a0ba:	jmp    0xb445:0x19ac3899
  41a0c1:	sub    eax,eax
  41a0c3:	fwait
  41a0c4:	clc    
  41a0c5:	into   
  41a0c6:	jle    0x41a135
  41a0c8:	leave  
  41a0c9:	ror    bh,1
  41a0cb:	xchg   edi,eax
  41a0cc:	loop   0x41a09c
  41a0ce:	mov    bh,0xc
  41a0d0:	pop    edi
  41a0d1:	sar    BYTE PTR [ecx+0x69a0e3ae],1
  41a0d7:	push   cs
  41a0d8:	out    0x71,al
  41a0da:	in     eax,dx
  41a0db:	loop   0x41a0bd
  41a0dd:	jne    0x41a10c
  41a0df:	in     al,dx
  41a0e0:	and    edx,DWORD PTR [eax]
  41a0e2:	mov    eax,ds:0x89882a7a
  41a0e7:	mov    al,ds:0x3d5bb6ae
  41a0ec:	(bad)  
  41a0ee:	push   cs
  41a0ef:	out    0x3,eax
  41a0f1:	xchg   ecx,eax
  41a0f2:	test   eax,0xe40823c5
  41a0f7:	dec    esi
  41a0f8:	mov    DWORD PTR [eax+esi*4+0x23],ecx
  41a0fc:	icebp  
  41a0fd:	int    0x5a
  41a0ff:	loopne 0x41a163
  41a101:	adc    ch,BYTE PTR [eax]
  41a103:	xchg   edx,eax
  41a104:	mov    al,ds:0xb14cbd9d
  41a109:	lods   al,BYTE PTR ds:[esi]
  41a10a:	int    0x86
  41a10c:	pop    ss
  41a10d:	mov    WORD PTR [ecx+0x4177d222],es
  41a113:	or     DWORD PTR [ecx+0x63],ebp
  41a116:	push   esi
  41a117:	jae    0x41a0de
  41a119:	jno    0x41a150
  41a11b:	push   esp
  41a11c:	les    edi,FWORD PTR [eax+0x6c]
  41a11f:	jl     0x41a0bb
  41a121:	mov    ds:0x8f2dfbaa,al
  41a126:	mul    BYTE PTR [ecx+0x38dde88f]
  41a12c:	jp     0x41a143
  41a12e:	cmp    ecx,DWORD PTR cs:[eax+eax*2+0x57]
  41a133:	xor    eax,0xe1c17352
  41a138:	cmp    al,0x3e
  41a13a:	push   edx
  41a13b:	xor    bh,BYTE PTR [edi+0x1605a84d]
  41a141:	ins    DWORD PTR es:[edi],dx
  41a142:	scas   al,BYTE PTR es:[edi]
  41a143:	jae    0x41a1ad
  41a145:	xor    al,0x2a
  41a147:	and    DWORD PTR [edx+0x239c831a],ebx
  41a14d:	call   0x8c43:0x79181447
  41a154:	jae    0x41a138
  41a156:	gs dec edx
  41a158:	addr16 hlt 
  41a15a:	xchg   edi,eax
  41a15b:	data16 (bad) 
  41a15d:	ret    
  41a15e:	mul    BYTE PTR [edx-0x37]
  41a161:	sahf   
  41a162:	inc    ecx
  41a163:	pop    eax
  41a164:	sar    BYTE PTR [eax-0x598d80ff],cl
  41a16a:	jl     0x41a165
  41a16c:	scas   eax,DWORD PTR es:[edi]
  41a16d:	cdq    
  41a16e:	and    eax,0x3a4fbd17
  41a173:	jnp    0x41a10e
  41a175:	inc    eax
  41a176:	and    DWORD PTR [eax+0x21942788],eax
  41a17c:	ret    
  41a17d:	xchg   BYTE PTR [eax+ebx*8-0x42019701],ch
  41a184:	scas   al,BYTE PTR es:[edi]
  41a185:	and    BYTE PTR [eax+0x712e698d],ah
  41a18b:	cmp    DWORD PTR [ebp+0x14],eax
  41a18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a18f:	sub    eax,0xe2c2096e
  41a194:	mov    DWORD PTR [edx-0x7c],edi
  41a197:	cmp    al,BYTE PTR [ecx]
  41a199:	jnp    0x41a14e
  41a19b:	and    dh,dh
  41a19d:	(bad)  [eax-0xa72049b]
  41a1a3:	inc    edx
  41a1a4:	pop    ebp
  41a1a5:	and    edx,DWORD PTR [ebx+edi*1]
  41a1a8:	std    
  41a1a9:	sbb    eax,DWORD PTR [edx]
  41a1ab:	dec    esi
  41a1ac:	jl     0x41a145
  41a1ae:	and    DWORD PTR [edi+ecx*2-0x43aed97b],0xffffffac
  41a1b6:	int    0x88
  41a1b8:	in     al,0x7a
  41a1ba:	jns    0x41a222
  41a1bc:	imul   ebx,DWORD PTR [esp+ebp*2+0x48],0x243393c7
  41a1c4:	lds    eax,FWORD PTR [eax]
  41a1c6:	cli    
  41a1c7:	push   0x803eb537
  41a1cc:	mov    eax,ds:0x462fafe2
  41a1d1:	pop    eax
  41a1d2:	cmp    eax,0x97f0369d
  41a1d7:	shl    DWORD PTR [ecx],1
  41a1d9:	adc    al,0x94
  41a1db:	(bad)  
  41a1dc:	mov    bl,BYTE PTR [edx-0x7cc801b1]
  41a1e2:	test   ebp,ebx
  41a1e4:	cmp    eax,DWORD PTR [bp-0x281b]
  41a1e9:	call   0x2341:0x227beaec
  41a1f0:	mov    esp,0x8e0daa2
  41a1f5:	stc    
  41a1f6:	mov    ch,0xc4
  41a1f8:	xchg   esp,eax
  41a1f9:	adc    ebp,DWORD PTR [edx-0x474fc4d5]
  41a1ff:	repz mov eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7d1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7d1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7d1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7d1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7d1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a86d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a78d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a779,0x42a86d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a284
  41a293:	stos   BYTE PTR es:[edi],al
  41a294:	ret    
  41a295:	mov    ds:0x787fd198,al
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a306
  41a29f:	inc    ecx
  41a2a0:	jmp    0x93c5:0xc6db8e03
  41a2a7:	fistp  DWORD PTR [edx]
  41a2a9:	adc    bl,cl
  41a2ab:	cdq    
  41a2ac:	inc    edx
  41a2ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ae:	in     eax,dx
  41a2af:	(bad)  
  41a2b0:	cmp    eax,0x715bc6ba
  41a2b5:	inc    ebp
  41a2b6:	sar    BYTE PTR [ebp+ebp*8-0x62edcbf7],1
  41a2bd:	mov    dh,0xa3
  41a2bf:	or     edx,DWORD PTR [ebx-0x3dc74fab]
  41a2c5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2c7:	out    dx,eax
  41a2c8:	pusha  
  41a2c9:	jmp    0xbf1f61e5
  41a2ce:	jp     0x41a28f
  41a2d0:	mov    ecx,0x506face7
  41a2d5:	push   cs
  41a2d6:	arpl   WORD PTR [ebx+eiz*4],ax
  41a2d9:	out    dx,eax
  41a2da:	sub    BYTE PTR ds:0xcc51894a,ah
  41a2e0:	inc    esp
  41a2e1:	push   eax
  41a2e2:	xchg   esi,eax
  41a2e3:	dec    eax
  41a2e4:	xchg   edi,eax
  41a2e5:	(bad)  
  41a2e6:	scas   eax,DWORD PTR es:[edi]
  41a2e7:	mov    ds:0xdb92af56,al
  41a2ec:	inc    BYTE PTR [edi-0xe]
  41a2ef:	dec    eax
  41a2f0:	dec    ecx
  41a2f1:	outs   dx,DWORD PTR ds:[esi]
  41a2f2:	cs pop ds
  41a2f4:	dec    esp
  41a2f5:	(bad)  
  41a2f6:	xor    edi,DWORD PTR [eax]
  41a2f8:	arpl   WORD PTR [ebx+edi*8+0x4ea0f348],bp
  41a2ff:	rol    BYTE PTR [ecx],1
  41a301:	test   DWORD PTR [ebp+0x147ecd28],eax
  41a307:	inc    eax
  41a308:	inc    ebx
  41a309:	outs   dx,DWORD PTR ds:[esi]
  41a30a:	push   edi
  41a30b:	add    DWORD PTR [esi+ebp*2-0x41c27a73],edi
  41a312:	nop
  41a313:	push   ebp
  41a314:	lods   al,BYTE PTR ds:[esi]
  41a315:	sbb    eax,0x6f247386
  41a31a:	push   0x3414a0d3
  41a31f:	add    dl,al
  41a321:	mov    al,BYTE PTR ds:0xe9f2f8e9
  41a327:	jp     0x41a3a0
  41a329:	ret    
  41a32a:	icebp  
  41a32b:	push   ecx
  41a32c:	pusha  
  41a32d:	sub    BYTE PTR [edx+0x22],cl
  41a330:	xor    ecx,ecx
  41a332:	dec    eax
  41a333:	jl     0x41a2ff
  41a335:	repnz out dx,al
  41a337:	mov    ebp,0x5f73c039
  41a33c:	xor    bh,BYTE PTR [ebx-0x6680ddb0]
  41a342:	cmp    DWORD PTR [eax],esi
  41a344:	push   ecx
  41a345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a346:	pop    DWORD PTR [ecx]
  41a348:	xchg   DWORD PTR [edi+0x45],edi
  41a34b:	(bad)  
  41a34c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a34e:	(bad)  
  41a34f:	xor    al,0x22
  41a351:	adc    al,0xb6
  41a353:	in     al,0xfe
  41a355:	mov    edi,0xa8873e0
  41a35a:	adc    esi,DWORD PTR [eax-0x5af78fba]
  41a360:	sbb    ah,BYTE PTR [esi+0x3a]
  41a363:	mov    ebx,DWORD PTR [eax+0x64194009]
  41a369:	cli    
  41a36a:	cmp    BYTE PTR [ecx-0x3e03713f],0x6a
  41a371:	jmp    0xbc9e9f89
  41a376:	add    edx,DWORD PTR [esi+0x5c]
  41a379:	gs or  bh,dl
  41a37c:	jle    0x41a350
  41a37e:	sbb    al,0x8d
  41a380:	repnz test al,0x8d
  41a384:	xor    esp,DWORD PTR [esi-0x1db377dc]
  41a38a:	or     al,0x31
  41a38c:	and    ah,BYTE PTR [edi-0x5ae98902]
  41a392:	inc    esi
  41a393:	mov    al,0x7f
  41a395:	mov    edi,0x45546533
  41a39a:	das    
  41a39b:	icebp  
  41a39c:	fild   DWORD PTR [edx]
  41a39e:	rcr    DWORD PTR [esi+esi*1+0x2c],0x92
  41a3a3:	xchg   esi,eax
  41a3a4:	xor    edx,esi
  41a3a6:	pushf  
  41a3a7:	ds push ebp
  41a3a9:	jl     0x41a3a8
  41a3ab:	hlt    
  41a3ac:	shl    ebx,0xb6
  41a3af:	cwde   
  41a3b0:	mov    ebx,0xe4b2d095
  41a3b5:	out    dx,al
  41a3b6:	int3   
  41a3b7:	pop    esi
  41a3b8:	pop    ss
  41a3b9:	add    ecx,ecx
  41a3bb:	in     eax,0x2f
  41a3bd:	leave  
  41a3be:	loop   0x41a3e3
  41a3c0:	std    
  41a3c1:	jmp    0xe78e:0x186d7cc7
  41a3c8:	imul   ebp,DWORD PTR [ebx+0x62640d78],0xa838bd95
  41a3d2:	popf   
  41a3d3:	cmp    eax,0x10c1c47d
  41a3d8:	loopne 0x41a446
  41a3da:	shr    DWORD PTR es:[ebx+eiz*1],0xa1
  41a3df:	add    edx,DWORD PTR [esi+0x442bda46]
  41a3e5:	int3   
  41a3e6:	mov    DWORD PTR [ecx],esp
  41a3e8:	rcr    BYTE PTR [esi+ecx*2],cl
  41a3eb:	or     BYTE PTR [ecx],ch
  41a3ed:	pushf  
  41a3ee:	cmp    BYTE PTR [esi+0x4721c04],bl
  41a3f4:	xchg   ebx,eax
  41a3f5:	add    DWORD PTR [ebx],ebp
  41a3f7:	and    BYTE PTR [eax],cl
  41a3f9:	jl     0x41a3e7
  41a3fb:	loope  0x41a3da
  41a3fd:	mov    ch,0xad
  41a3ff:	push   ebp
  41a400:	mov    WORD PTR [edi+edi*2],?
  41a403:	int    0xc
  41a405:	in     al,0x65
  41a407:	jl     0x41a39b
  41a409:	ds dec ebp
  41a40b:	inc    esp
  41a40c:	push   eax
  41a40d:	mov    ebx,0x151fd682
  41a412:	sub    DWORD PTR [ebx+0x6663a051],esi
  41a418:	mov    bh,0x5d
  41a41a:	leave  
  41a41b:	xor    edx,esi
  41a41d:	inc    edi
  41a41e:	sub    DWORD PTR [edx-0x723305bb],ebx
  41a424:	in     al,0xcd
  41a426:	push   eax
  41a427:	mov    cl,0x1e
  41a429:	enter  0x5f91,0x10
  41a42d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a42e:	lods   eax,DWORD PTR ds:[esi]
  41a42f:	sahf   
  41a430:	xor    bh,bh
  41a432:	or     esi,esi
  41a434:	mov    bl,0x72
  41a436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a437:	ret    0xab76
  41a43a:	addr16 fcmovbe st,st(2)
  41a43d:	aaa    
  41a43e:	iret   
  41a43f:	or     al,0x4c
  41a441:	js     0x41a3f2
  41a443:	and    BYTE PTR [ebp-0x1ce35b9b],ah
  41a449:	and    DWORD PTR [edi-0x5],0x64
  41a44d:	or     dh,BYTE PTR [eax+0x37f36c8f]
  41a453:	int3   
  41a454:	mov    eax,ecx
  41a456:	iret   
  41a457:	lds    esp,FWORD PTR [edx-0x75ee4d7c]
  41a45d:	in     al,0xa5
  41a45f:	repz or DWORD PTR [edi],esi
  41a462:	in     eax,0xa3
  41a464:	mov    dh,0xd3
  41a466:	jmp    0x41a43a
  41a468:	cmp    eax,0x583f08ff
  41a46d:	nop
  41a46e:	cwde   
  41a46f:	xchg   edx,eax
  41a470:	inc    esi
  41a471:	das    
  41a472:	not    edx
  41a474:	inc    ecx
  41a475:	pop    es
  41a476:	mov    eax,0x2fd46ed5
  41a47b:	outs   dx,BYTE PTR es:[esi]
  41a47d:	ds (bad) 
  41a480:	push   edx
  41a481:	dec    esp
  41a482:	sub    al,0x12
  41a484:	mov    ds:0xac19fb65,eax
  41a489:	(bad)  
  41a48a:	out    dx,al
  41a48b:	push   ds
  41a48c:	mov    ah,0x45
  41a48e:	push   ss
  41a48f:	dec    edx
  41a490:	mov    al,ds:0xadc29406
  41a495:	jecxz  0x41a45b
  41a497:	outs   dx,DWORD PTR ds:[esi]
  41a498:	xchg   ebx,eax
  41a499:	and    edx,DWORD PTR [esi]
  41a49b:	pusha  
  41a49c:	jl     0x41a4b7
  41a49e:	shl    DWORD PTR [esi-0x15db01c0],cl
  41a4a4:	jg     0x41a4b6
  41a4a6:	or     edi,DWORD PTR [ebx]
  41a4a8:	dec    eax
  41a4a9:	jle    0x41a50f
  41a4ab:	add    al,0x6c
  41a4ad:	sbb    eax,0xff3008a6
  41a4b2:	xlat   BYTE PTR ds:[ebx]
  41a4b3:	push   edi
  41a4b4:	push   eax
  41a4b5:	cmp    eax,0xc7ec4589
  41a4ba:	add    eax,0x42a77d
  41a4bf:	sbb    BYTE PTR [eax],al
  41a4c1:	add    BYTE PTR [eax],al
  41a4c3:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a77d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a77d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a77d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a811,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a811
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a811,eax
  41a512:	cmp    DWORD PTR ds:0x42a811,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a811,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a811,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a811
  41a551:	inc    eax
  41a552:	mov    ds:0x42a811,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a79d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a79d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a79d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a79d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a79d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a779,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a779
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a779,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a779,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a779,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a779
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a779,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a779,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	ret    
  41a68f:	aad    0xa9
  41a691:	cmp    esi,DWORD PTR [eax+0x10787fd7]
  41a697:	jle    0x41a711
  41a699:	js     0x41a703
  41a69b:	leave  
  41a69c:	loop   0x41a696
  41a69e:	stos   BYTE PTR es:[edi],al
  41a69f:	shl    BYTE PTR [ebx-0x7d],cl
  41a6a2:	xchg   ebx,eax
  41a6a3:	(bad)  
  41a6a5:	xor    bh,BYTE PTR [eax+0x1967df3d]
  41a6ab:	fcmovu st,st(6)
  41a6ad:	shl    BYTE PTR [ebx+eax*8],1
  41a6b0:	in     eax,0xab
  41a6b2:	or     ah,dh
  41a6b4:	retf   0xcdfd
  41a6b7:	aaa    
  41a6b8:	pop    ds
  41a6b9:	mov    edi,0x4be6c985
  41a6be:	std    
  41a6bf:	xchg   ebp,eax
  41a6c0:	sub    DWORD PTR [edi+ecx*4],esp
  41a6c3:	mov    ecx,0x6b040141
  41a6c8:	cmp    eax,0x93221ce4
  41a6cd:	inc    ebx
  41a6ce:	xchg   edi,eax
  41a6cf:	js     0x41a6e7
  41a6d1:	dec    eax
  41a6d2:	inc    ecx
  41a6d3:	pop    edi
  41a6d4:	scas   al,BYTE PTR es:[edi]
  41a6d5:	xchg   DWORD PTR [edx+0x29],ebx
  41a6d8:	mov    eax,0xa2bc2f41
  41a6dd:	add    cl,BYTE PTR [ecx+0x4ca70418]
  41a6e3:	fmul   st(0),st
  41a6e5:	xchg   esi,eax
  41a6e6:	mov    ds,ebp
  41a6e8:	imul   edi,DWORD PTR [esi-0xc],0xf7e99f67
  41a6ef:	xlat   BYTE PTR ds:[ebx]
  41a6f0:	push   ebx
  41a6f1:	and    al,BYTE PTR [ecx+0x7c]
  41a6f4:	popf   
  41a6f5:	sub    eax,0x175b363e
  41a6fa:	push   ebp
  41a6fb:	jne    0x41a730
  41a6fd:	dec    ebx
  41a6fe:	or     BYTE PTR [edx-0x3d],ch
  41a701:	pop    ds
  41a702:	adc    eax,0x7bb50a1c
  41a707:	lock cmp BYTE PTR [ebx-0x445f209f],al
  41a70e:	addr16 cmp eax,0x968dc644
  41a714:	push   edi
  41a715:	(bad)  
  41a716:	or     eax,0xbb9d1a3
  41a71b:	jmp    0x90fe:0xb1587892
  41a722:	adc    al,0xfa
  41a724:	xchg   esp,eax
  41a725:	aad    0x12
  41a727:	xchg   edx,eax
  41a728:	icebp  
  41a729:	scas   eax,DWORD PTR es:[edi]
  41a72a:	aam    0xf2
  41a72c:	mov    ecx,0xd0a68562
  41a731:	cwde   
  41a732:	shl    BYTE PTR [edx+eax*1-0x766827ce],0xfa
  41a73a:	mov    dh,0xe7
  41a73c:	ss sub DWORD PTR ss:[ecx],esi
  41a740:	add    dl,dl
  41a742:	or     eax,0x93deea4d
  41a747:	leave  
  41a748:	adc    DWORD PTR [edx+0x53],0x11
  41a74c:	sti    
  41a74d:	or     edi,ebp
  41a74f:	dec    edx
  41a750:	enter  0x59ad,0x9f
  41a754:	cmp    DWORD PTR [esi+0x5c],ebx
  41a757:	or     DWORD PTR [edi+0x29],esp
  41a75a:	mov    fs,WORD PTR [esi]
  41a75c:	stos   DWORD PTR es:[edi],eax
  41a75d:	(bad)  
  41a75f:	or     ah,BYTE PTR [ebp-0x5c]
  41a762:	sbb    BYTE PTR [ecx+0x16],0x2c
  41a766:	inc    ebx
  41a767:	loopne 0x41a6ee
  41a769:	call   0xb4a9:0x81e26a49
  41a770:	jl     0x41a7b0
  41a772:	loope  0x41a75c
  41a774:	xchg   DWORD PTR [ebx],ebx
  41a776:	mov    dh,0x20
  41a778:	xchg   edx,eax
  41a779:	enter  0xb801,0x59
  41a77d:	sub    DWORD PTR [edx*4+0x42c60e28],ecx
  41a784:	shr    DWORD PTR [esp+eax*1+0x1a0dc08e],1
  41a78b:	lock add esi,DWORD PTR [edi]
  41a78e:	in     al,0x66
  41a790:	mov    al,0x73
  41a792:	lods   eax,DWORD PTR ds:[esi]
  41a793:	stc    
  41a794:	cmp    BYTE PTR [edx+eax*1],dh
  41a797:	dec    edi
  41a798:	fucomp st(2)
  41a79a:	ds dec edi
  41a79c:	dec    esp
  41a79d:	icebp  
  41a79e:	cmp    edx,ebx
  41a7a0:	dec    eax
  41a7a1:	in     al,0x41
  41a7a3:	dec    ecx
  41a7a4:	xchg   ebp,eax
  41a7a5:	xchg   edi,eax
  41a7a6:	retf   0x4159
  41a7a9:	popf   
  41a7aa:	test   al,cl
  41a7ac:	cmc    
  41a7ad:	hlt    
  41a7ae:	push   edi
  41a7af:	adc    cl,ah
  41a7b1:	dec    ecx
  41a7b2:	sbb    ecx,DWORD PTR ds:0x11ab8f78
  41a7b8:	xor    bl,dh
  41a7ba:	push   0xffffffbe
  41a7bc:	imul   eax,DWORD PTR [ebp-0x24],0x710aed9c
  41a7c3:	imul   edi,edx,0xffffffad
  41a7c6:	xchg   esi,eax
  41a7c7:	inc    ebp
  41a7c8:	popa   
  41a7c9:	lods   eax,DWORD PTR ds:[esi]
  41a7ca:	pop    edx
  41a7cb:	in     al,dx
  41a7cc:	xchg   DWORD PTR [edi-0x65348c32],eax
  41a7d2:	sub    al,0x30
  41a7d4:	pop    ebp
  41a7d5:	ret    
  41a7d6:	cdq    
  41a7d7:	ja     0x41a838
  41a7d9:	sub    dl,BYTE PTR [ecx+esi*1+0x5f7b8c33]
  41a7e0:	pop    edx
  41a7e1:	sub    BYTE PTR [ecx-0x3366734c],bl
  41a7e7:	sti    
  41a7e8:	mov    al,ds:0x3a4111f6
  41a7ed:	add    al,0xee
  41a7ef:	jo     0x41a7bc
  41a7f1:	push   0x53
  41a7f3:	aad    0xb5
  41a7f5:	(bad)
  41a7f9:	mov    DWORD PTR [ecx+0x5c411269],esi
  41a7ff:	je     0x41a816
  41a801:	xor    al,0xc8
  41a803:	push   es
  41a804:	repnz add BYTE PTR [ecx+0x6f],cl
  41a808:	jnp    0x41a803
  41a80a:	push   esi
  41a80b:	pop    ds
  41a80c:	mov    dl,0xb1
  41a80e:	add    eax,0xa2e74ea9
  41a813:	mov    eax,ds:0xe24e4ee5
  41a818:	xor    eax,0x2bef4df9
  41a81d:	dec    eax
  41a81e:	mov    eax,0x8feae278
  41a823:	idiv   BYTE PTR [ebx-0x66]
  41a826:	aas    
  41a827:	fwait
  41a828:	je     0x41a7ca
  41a82a:	or     BYTE PTR [ecx+edx*4+0x25],ch
  41a82e:	xor    esi,ebp
  41a830:	ffreep st(1)
  41a832:	lods   al,BYTE PTR ds:[esi]
  41a833:	push   eax
  41a834:	(bad)  [ecx-0x1b478d94]
  41a83a:	aas    
  41a83b:	adc    DWORD PTR [esi+edi*2-0x6025eb3b],ebp
  41a842:	retf   
  41a843:	adc    al,0x0
  41a845:	std    
  41a846:	jge    0x41a859
  41a848:	data16 adc al,0xbf
  41a84b:	out    dx,eax
  41a84c:	jmp    0xb256:0x132eac80
  41a853:	fs into 
  41a855:	pop    ebx
  41a856:	(bad)  
  41a857:	std    
  41a858:	xchg   edx,eax
  41a859:	pop    ebp
  41a85a:	push   0xffffffe0
  41a85c:	and    DWORD PTR [esi-0x56],esi
  41a85f:	pop    edx
  41a860:	addr16 test cl,dl
  41a863:	sbb    DWORD PTR ds:0x9729071d,esi
  41a869:	and    DWORD PTR [esi+0xe3c1c41],0x7d
  41a870:	mov    dh,0xa5
  41a872:	jo     0x41a801
  41a874:	xor    al,0x38
  41a876:	adc    edx,DWORD PTR [eax]
  41a878:	adc    al,0x5e
  41a87a:	out    0x80,eax
  41a87c:	iret   
  41a87d:	sub    al,0xa5
  41a87f:	adc    esi,DWORD PTR [edi-0xf04deea]
  41a885:	push   ds
  41a886:	daa    
  41a887:	sahf   
  41a888:	push   ss
  41a889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a88a:	inc    ecx
  41a88b:	je     0x41a8f1
  41a88d:	fisttp QWORD PTR [ebx]
  41a88f:	sar    BYTE PTR [ebx-0x2044ca0d],1
  41a895:	xor    eax,ebx
  41a897:	jge    0x41a8f0
  41a899:	jne    0x41a8f9
  41a89b:	ins    BYTE PTR es:[edi],dx
  41a89c:	push   0xffffffbf
  41a89e:	mov    dh,BYTE PTR [ebp-0x22]
  41a8a1:	jo     0x41a87e
  41a8a3:	lods   eax,DWORD PTR ds:[esi]
  41a8a4:	push   ebp
  41a8a5:	sub    DWORD PTR [edi-0x1d],0x228e6b7
  41a8ac:	das    
  41a8ad:	pop    eax
  41a8ae:	ja     0x41a896
  41a8b0:	lods   al,BYTE PTR ds:[esi]
  41a8b1:	cwde   
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	and    DWORD PTR [ecx+0x4847db1f],0xffffffd5
  41a91b:	jg     0x41a995
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a8ba
  41a922:	push   eax
  41a923:	xor    al,cl
  41a925:	push   esi
  41a926:	stos   DWORD PTR es:[edi],eax
  41a927:	inc    edx
  41a928:	mov    dl,0x2d
  41a92a:	fild   WORD PTR [edx+0xb888658]
  41a930:	fnstenv [esp+ebp*4]
  41a933:	adc    eax,0xf41d9640
  41a938:	loop   0x41a8f9
  41a93a:	pop    eax
  41a93b:	adc    eax,0x5e51e60f
  41a940:	cli    
  41a941:	(bad)  
  41a943:	and    ebp,DWORD PTR [eax]
  41a945:	mov    al,0x7b
  41a947:	test   eax,0x1611327e
  41a94c:	pop    ss
  41a94d:	sbb    al,BYTE PTR [esi+0x68]
  41a950:	xchg   ebx,eax
  41a951:	sub    BYTE PTR [edx],ch
  41a953:	les    ecx,FWORD PTR ds:0xdde207b1
  41a959:	sub    cl,dh
  41a95b:	add    eax,0xb3c4fe02
  41a960:	jl     0x41a98f
  41a962:	test   al,0xd0
  41a964:	adc    BYTE PTR [esi+0x1e],0xc3
  41a968:	pop    esi
  41a969:	sbb    DWORD PTR [edi-0x711ba95d],eax
  41a96f:	out    0xe,eax
  41a971:	out    0xb9,eax
  41a973:	popa   
  41a974:	xchg   esp,eax
  41a975:	push   edi
  41a976:	out    dx,eax
  41a977:	pop    esi
  41a978:	jns    0x41a956
  41a97a:	or     cl,BYTE PTR [edi-0x15db35b0]
  41a980:	or     ebp,ebp
  41a982:	ss and al,0x8d
  41a985:	je     0x41a90a
  41a987:	cdq    
  41a988:	mov    fs,WORD PTR [edx+0x1f]
  41a98b:	shl    DWORD PTR [ebp+eiz*1-0x80],1
  41a98f:	sub    dl,0xd6
  41a992:	stc    
  41a993:	das    
  41a994:	and    al,0x89
  41a996:	push   edx
  41a997:	je     0x41a9ee
  41a999:	dec    ecx
  41a99a:	sbb    dl,BYTE PTR [ecx+esi*8]
  41a99d:	aas    
  41a99e:	jl     0x41a9fb
  41a9a0:	lods   eax,DWORD PTR ds:[esi]
  41a9a1:	pop    esp
  41a9a2:	and    esp,DWORD PTR [eax-0x356e0178]
  41a9a8:	std    
  41a9a9:	pusha  
  41a9aa:	retf   
  41a9ab:	sbb    bh,BYTE PTR [ecx]
  41a9ad:	ja     0x41a938
  41a9af:	adc    al,cl
  41a9b1:	and    ebp,DWORD PTR [esi]
  41a9b3:	push   0xffffffe0
  41a9b5:	test   DWORD PTR [ebx+0x66c33ead],edi
  41a9bb:	shr    DWORD PTR [edi-0x4c],cl
  41a9be:	int3   
  41a9bf:	arpl   WORD PTR [bp+si+0x5094],ax
  41a9c4:	and    al,0x5c
  41a9c6:	adc    eax,0xa2b3211e
  41a9cb:	mov    al,ds:0xfa77c78b
  41a9d0:	dec    esp
  41a9d1:	sbb    BYTE PTR [esi-0x5e],0x7d
  41a9d5:	mov    bh,0xc4
  41a9d7:	stc    
  41a9d8:	test   eax,0x4ee45dc0
  41a9dd:	push   ebx
  41a9de:	pushf  
  41a9df:	xor    al,0x14
  41a9e1:	out    0x4b,eax
  41a9e3:	mov    ah,0x4d
  41a9e5:	ds or  edx,edi
  41a9e8:	out    dx,al
  41a9e9:	ret    0xb56b
  41a9ec:	jno    0x41a99e
  41a9ee:	fild   DWORD PTR [ebx-0x4c111655]
  41a9f4:	retf   
  41a9f5:	bound  edi,QWORD PTR [ebx+0x27]
  41a9f8:	cmp    edx,DWORD PTR [ecx+0x503a9d5]
  41a9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ff:	or     al,0x4
  41aa01:	cwde   
  41aa02:	in     eax,0xfd
  41aa04:	dec    DWORD PTR [esi]
  41aa06:	inc    edx
  41aa07:	idiv   BYTE PTR [esi-0x1f]
  41aa0a:	xchg   ecx,eax
  41aa0b:	add    al,0xb0
  41aa0d:	lock pop ecx
  41aa0f:	jne    0x41a999
  41aa11:	mov    ebx,0x1c004c1
  41aa16:	push   ds
  41aa17:	loope  0x41aa38
  41aa19:	adc    eax,0x4bbb0f48
  41aa1e:	mov    ch,0x53
  41aa20:	lock fsubr QWORD PTR [ebx]
  41aa23:	test   eax,0xd7c4bb3a
  41aa28:	sub    eax,0xcb988cf
  41aa2d:	dec    esp
  41aa2e:	xchg   BYTE PTR [esi-0x32],dl
  41aa31:	jp     0x41a9f6
  41aa33:	push   esp
  41aa34:	popa   
  41aa35:	mov    ah,0x83
  41aa37:	into   
  41aa38:	call   0x8b2aaac
  41aa3d:	adc    ebp,DWORD PTR [edi+0x3d32742d]
  41aa43:	push   esp
  41aa44:	fs xor eax,0xb37adf4a
  41aa4a:	jmp    0x4ff84c13
  41aa4f:	outs   dx,DWORD PTR ds:[esi]
  41aa50:	and    ch,BYTE PTR [edx-0x51b58c68]
  41aa56:	ret    
  41aa57:	adc    eax,0xc0668941
  41aa5c:	dec    ebx
  41aa5d:	cmp    eax,0xadb2e4f4
  41aa62:	sbb    ah,al
  41aa64:	(bad)  
  41aa65:	aad    0x57
  41aa67:	inc    esi
  41aa68:	xor    DWORD PTR [edi],ecx
  41aa6a:	mov    ebp,0xaa6ba182
  41aa6f:	sbb    BYTE PTR [esi],dh
  41aa71:	scas   al,BYTE PTR es:[edi]
  41aa72:	popa   
  41aa73:	xchg   DWORD PTR [ebp-0xef9c12],eax
  41aa79:	push   edx
  41aa7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa7b:	inc    edi
  41aa7c:	sub    edx,edi
  41aa7e:	adc    ebp,DWORD PTR [ebx]
  41aa80:	mov    ss,WORD PTR [ebx-0x29d66a9a]
  41aa86:	jae    0x41aa37
  41aa88:	pop    esp
  41aa89:	clc    
  41aa8a:	mov    ebx,0xc978ff00
  41aa8f:	add    eax,0xbef8f3ad
  41aa94:	sub    al,0xd6
  41aa96:	sti    
  41aa97:	ja     0x41aa55
  41aa99:	xchg   edx,eax
  41aa9a:	sti    
  41aa9b:	sbb    eax,0xda8a794f
  41aaa0:	imul   eax,DWORD PTR [ebp-0x2f],0x34f2ae71
  41aaa7:	inc    edi
  41aaa8:	cmp    DWORD PTR [ebx-0x3ada258a],ebp
  41aaae:	sahf   
  41aaaf:	retf   0xfe7f
  41aab2:	jmp    0x41cb:0x63901193
  41aab9:	ror    DWORD PTR [esi],0xb3
  41aabc:	lea    esi,[eax+0x57]
  41aabf:	mov    esp,DWORD PTR [edi+0x7c]
  41aac2:	daa    
  41aac3:	hlt    
  41aac4:	lahf   
  41aac5:	inc    esi
  41aac6:	inc    esp
  41aac7:	shl    BYTE PTR [ebx+0x43acd560],cl
  41aacd:	push   es
  41aace:	and    sp,di
  41aad1:	loop   0x41ab23
  41aad3:	mov    dl,0xf2
  41aad5:	push   ds
  41aad6:	push   eax
  41aad7:	mov    ebx,0xcfffd90
  41aadc:	add    esp,DWORD PTR [esi+0x46ff1dde]
  41aae2:	not    BYTE PTR [ebp+0x9]
  41aae5:	lds    eax,FWORD PTR [esi]
  41aae7:	xlat   BYTE PTR ds:[bx]
  41aae9:	mov    ?,edi
  41aaeb:	push   ss
  41aaec:	xchg   ebp,eax
  41aaed:	rdtsc  
  41aaef:	xchg   edx,eax
  41aaf0:	xchg   esi,eax
  41aaf1:	jb     0x41aa85
  41aaf3:	jge    0x41ab2c
  41aaf5:	push   0xffffffe7
  41aaf7:	mov    dh,0xaa
  41aaf9:	mov    edx,0x4eda61a6
  41aafe:	push   edx
  41aaff:	lea    esp,[ecx+0x54]
  41ab02:	loopne 0x41aa88
  41ab04:	stc    
  41ab05:	xchg   ebp,eax
  41ab06:	push   ebp
  41ab07:	aad    0x1e
  41ab09:	inc    edi
  41ab0a:	test   eax,0xf756dde0
  41ab0f:	sbb    al,BYTE PTR [ebx+0x643949c0]
  41ab15:	add    eax,0x231ed9df
  41ab1a:	pop    eax
  41ab1b:	jl     0x41ab8b
  41ab1d:	popf   
  41ab1e:	imul   edx,DWORD PTR [esi+eiz*4-0x65],0x418dbd0c
  41ab26:	icebp  
  41ab27:	fcom   QWORD PTR ds:[edi+0x9642e1c]
  41ab2e:	sub    al,0x40
  41ab30:	es in  al,0x36
  41ab33:	xchg   esi,eax
  41ab34:	popf   
  41ab35:	xor    DWORD PTR [edx+0x6a5930b7],ecx
  41ab3b:	add    eax,0x30e95b49
  41ab40:	add    al,BYTE PTR [eax]
  41ab42:	add    dl,dl
  41ab44:	sar    DWORD PTR [edi],cl
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x753e08be
  41ab52:	cmc    
  41ab53:	pusha  
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41abaa
  41ab5c:	and    eax,0x9b39874e
  41ab61:	add    al,0x1b
  41ab63:	out    dx,eax
  41ab64:	pop    edi
  41ab65:	cmp    dl,BYTE PTR [ebp+0x36911007]
  41ab6b:	int3   
  41ab6c:	(bad)
  41ab70:	pop    ecx
  41ab71:	xchg   edi,eax
  41ab72:	je     0x41abb2
  41ab74:	fwait
  41ab75:	not    DWORD PTR ds:0xcf2cb6ec
  41ab7b:	sub    eax,DWORD PTR [eax+0x5bda6743]
  41ab81:	fisub  DWORD PTR [ebx-0x13]
  41ab84:	bound  edx,QWORD PTR [esi]
  41ab86:	add    DWORD PTR [ebp+0x62],eax
  41ab89:	fsubrp st(1),st
  41ab8b:	xchg   edx,eax
  41ab8c:	push   ebx
  41ab8d:	ins    DWORD PTR es:[edi],dx
  41ab8e:	nop
  41ab8f:	ror    DWORD PTR [ebx],1
  41ab91:	sahf   
  41ab92:	xlat   BYTE PTR ds:[ebx]
  41ab93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab94:	pop    esp
  41ab95:	sti    
  41ab96:	push   ebx
  41ab97:	aam    0x85
  41ab99:	cmp    al,0x34
  41ab9b:	(bad)  
  41ab9c:	shl    BYTE PTR [edx-0x15f60af4],cl
  41aba2:	data16 out dx,al
  41aba4:	aas    
  41aba5:	bound  edx,QWORD PTR [edi]
  41aba7:	in     eax,dx
  41aba8:	push   es
  41aba9:	cmp    al,0x8
  41abab:	sub    edx,eax
  41abad:	adc    ah,BYTE PTR [si+0x56]
  41abb1:	add    eax,0xfadbb6f1
  41abb6:	sub    bl,BYTE PTR [ebp+0x6e]
  41abb9:	frstor [esi]
  41abbb:	pop    esp
  41abbc:	out    0xe6,al
  41abbe:	xor    eax,0xd5222d70
  41abc3:	adc    eax,0xfa8178ed
  41abc8:	jmp    0x8050f609
  41abcd:	jbe    0x41ab57
  41abcf:	(bad)  
  41abd0:	mov    dh,0xfc
  41abd2:	shl    BYTE PTR [eax+eiz*1+0x73],cl
  41abd6:	hlt    
  41abd7:	sbb    ch,bl
  41abd9:	mov    edi,0x8e7f4ec1
  41abde:	push   esp
  41abdf:	pop    ecx
  41abe0:	mov    ebx,gs
  41abe2:	mov    dl,0x5c
  41abe4:	data16 xlat BYTE PTR ds:[ebx]
  41abe6:	mov    DWORD PTR [ebx+0x1996c1cf],0xd6c5be45
  41abf0:	sahf   
  41abf1:	mov    ebp,0xab60c6eb
  41abf6:	repnz imul DWORD PTR ds:0x42ee5330
  41abfd:	test   BYTE PTR [edx],bl
  41abff:	pop    ecx
  41ac00:	in     al,dx
  41ac01:	xchg   edx,eax
  41ac02:	adc    BYTE PTR [ebx],dl
  41ac04:	xor    ch,BYTE PTR [esi+eax*2+0x1ed90910]
  41ac0b:	push   eax
  41ac0c:	mov    al,ds:0xbe3844ec
  41ac11:	cld    
  41ac12:	cmp    eax,0x148b093a
  41ac17:	xor    bh,BYTE PTR [ecx]
  41ac19:	scas   eax,DWORD PTR es:[edi]
  41ac1a:	cmp    edi,DWORD PTR [eax+0x6365a54d]
  41ac20:	mov    BYTE PTR fs:[edi+0x5466679f],dl
  41ac27:	(bad)  
  41ac28:	out    dx,al
  41ac29:	loopne 0x41abab
  41ac2b:	sub    DWORD PTR [eax-0x12],ebp
  41ac2e:	adc    edi,DWORD PTR [edi+eax*2]
  41ac31:	dec    esp
  41ac32:	enter  0x83bb,0x63
  41ac36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac37:	loop   0x41acb1
  41ac39:	aas    
  41ac3a:	adc    BYTE PTR [eax],cl
  41ac3c:	adc    DWORD PTR [ecx+0x7],ecx
  41ac3f:	dec    ebp
  41ac40:	xchg   esp,eax
  41ac41:	or     DWORD PTR [edx],ecx
  41ac43:	mov    ch,0xb5
  41ac45:	mov    ds:0xbab4f918,eax
  41ac4a:	adc    eax,0xa373c320
  41ac4f:	jbe    0x41abda
  41ac51:	jne    0x41ac81
  41ac53:	ror    DWORD PTR [edx+0x20],0x34
  41ac57:	fs mov bh,0xba
  41ac5a:	xchg   BYTE PTR [edx+0x36],bl
  41ac5d:	or     DWORD PTR [ecx-0x14],esi
  41ac60:	pop    ecx
  41ac61:	mov    ah,0x64
  41ac63:	leave  
  41ac64:	jnp    0x41acb4
  41ac66:	mov    dh,0x6b
  41ac68:	push   es
  41ac69:	xchg   BYTE PTR [eax-0x125d4742],al
  41ac6f:	or     DWORD PTR [ecx-0xd],eax
  41ac72:	rcr    DWORD PTR [edx-0x1cbd9778],0x7b
  41ac79:	shr    DWORD PTR [ebx+esi*8+0x1e295e8c],cl
  41ac80:	add    BYTE PTR [ebp+esi*4+0x45],dh
  41ac84:	xor    DWORD PTR [eax],eax
  41ac86:	int    0x42
  41ac88:	jmp    0xb928:0x7c9ce662
  41ac8f:	cs jl  0x41acd8
  41ac92:	pop    ebp
  41ac93:	je     0x41ac8c
  41ac95:	mov    dl,0x16
  41ac97:	cmp    al,0x56
  41ac99:	inc    ecx
  41ac9a:	psrld  mm2,QWORD PTR [edx]
  41ac9d:	jg     0x41ad14
  41ac9f:	aas    
  41aca0:	pushf  
  41aca1:	call   0x92aac27a
  41aca6:	xchg   DWORD PTR [esi],ebx
  41aca8:	jne    0x41ac6c
  41acaa:	mov    esp,0x81c3b106
  41acaf:	xlat   BYTE PTR ds:[ebx]
  41acb0:	sti    
  41acb1:	mov    DWORD PTR [edx+ebp*8+0x13],ebx
  41acb5:	push   ebp
  41acb6:	not    BYTE PTR [esi+ebx*4-0x392733e2]
  41acbd:	mov    ecx,0x61dc4eae
  41acc2:	add    eax,0xc2a34ea4
  41acc7:	loop   0x41ac66
  41acc9:	shl    eax,cl
  41accb:	mov    ebx,0x50b2935e
  41acd0:	mov    WORD PTR [eax+0x1038add4],gs
  41acd6:	push   cs
  41acd7:	aaa    
  41acd8:	mov    al,0x87
  41acda:	or     al,dl
  41acdc:	and    al,0xd
  41acde:	adc    BYTE PTR [eax],bl
  41ace0:	(bad)  
  41ace1:	xchg   esp,eax
  41ace2:	in     eax,dx
  41ace3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace4:	test   al,0x72
  41ace6:	ror    BYTE PTR [edi],cl
  41ace8:	into   
  41ace9:	call   0x2b03:0x9c077bd1
  41acf0:	xor    edx,edx
  41acf2:	es jne 0x41ad34
  41acf5:	inc    esp
  41acf6:	sbb    DWORD PTR [edi+0x52],edx
  41acf9:	shl    eax,cl
  41acfb:	or     eax,0xbdaa0b04
  41ad00:	sub    al,0x1a
  41ad02:	fdivr  DWORD PTR [ebx+0x5dcf8c1d]
  41ad08:	jle    0x41ad49
  41ad0a:	pushf  
  41ad0b:	fldenv [ebx+edx*1-0x2b]
  41ad0f:	test   al,0x5b
  41ad11:	push   0x7a
  41ad13:	out    dx,eax
  41ad14:	fdiv   st(5),st
  41ad16:	fist   WORD PTR [edi+0x12441491]
  41ad1c:	sub    bh,dl
  41ad1e:	ret    
  41ad1f:	ins    DWORD PTR es:[edi],dx
  41ad20:	jl     0x41ad7a
  41ad22:	ins    BYTE PTR es:[edi],dx
  41ad23:	fisttp WORD PTR [ebx+0x64]
  41ad26:	mov    ?,WORD PTR [edi]
  41ad28:	push   edi
  41ad29:	ins    BYTE PTR es:[edi],dx
  41ad2a:	fdiv   st,st(4)
  41ad2c:	inc    ch
  41ad2e:	push   ebp
  41ad2f:	xor    DWORD PTR [ebp+0x552143dc],0xe84d34d8
  41ad39:	xchg   edi,eax
  41ad3a:	pop    edi
  41ad3b:	jle    0x41ad2b
  41ad3d:	or     DWORD PTR [ebx-0x59],eax
  41ad40:	out    0x96,eax
  41ad42:	mov    cl,0xeb
  41ad44:	cmp    dh,BYTE PTR [ecx+0x34]
  41ad47:	and    ecx,eax
  41ad49:	int    0x51
  41ad4b:	pop    es
  41ad4c:	(bad)  
  41ad4d:	push   edx
  41ad4e:	or     eax,0xcf119cc4
  41ad53:	sbb    ecx,DWORD PTR [ecx+0xf38a722]
  41ad59:	(bad)  
  41ad5a:	jns    0x41ad9f
  41ad5c:	nop
  41ad5d:	imul   ebx,DWORD PTR [edi],0x15782921
  41ad63:	shr    DWORD PTR [ebp-0x4a],0x94
  41ad67:	xchg   ecx,eax
  41ad68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad69:	pop    edx
  41ad6a:	ss pop eax
  41ad6c:	(bad)
  41ad71:	stos   DWORD PTR es:[edi],eax
  41ad72:	sub    DWORD PTR [edi-0x1626d435],eax
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x28d25295,eax
  41ad89:	jbe    0x41ad3b
  41ad8b:	out    0x78,al
  41ad8d:	fdivr  DWORD PTR [edi+0x78]
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41adac
  41ad95:	or     eax,0x21db6fc5
  41ad9a:	xor    BYTE PTR [ecx+ebx*4+0x4de2435f],ch
  41ada1:	data16 sbb ch,ah
  41ada4:	xchg   esp,eax
  41ada5:	cmp    bh,cl
  41ada7:	loopne 0x41ad6a
  41ada9:	aas    
  41adaa:	mov    al,ds:0x17ad8d00
  41adaf:	xchg   ebx,eax
  41adb0:	xchg   BYTE PTR [edx-0x606e573d],al
  41adb6:	dec    ebp
  41adb7:	fdivr  QWORD PTR [ecx+0x36ea7356]
  41adbd:	pusha  
  41adbe:	push   cs
  41adbf:	xor    eax,esi
  41adc1:	mov    ds:0x6e8a4045,eax
  41adc6:	adc    eax,0x54c03444
  41adcb:	les    ecx,FWORD PTR [ecx+0x5e1f523e]
  41add1:	arpl   sp,ax
  41add3:	retf   
  41add4:	out    0xb3,eax
  41add6:	add    eax,0xd9eeab81
  41addb:	popf   
  41addc:	jo     0x41adf7
  41adde:	ret    
  41addf:	(bad)  
  41ade1:	inc    ecx
  41ade2:	rcr    edi,1
  41ade4:	ror    ah,cl
  41ade6:	(bad)  
  41ade7:	cwde   
  41ade8:	push   ds
  41ade9:	test   BYTE PTR [eax],bl
  41adeb:	scas   al,BYTE PTR es:[edi]
  41adec:	cs and eax,0x4ca2c0d7
  41adf2:	icebp  
  41adf3:	pushf  
  41adf4:	arpl   si,dx
  41adf6:	or     bl,BYTE PTR [ebx]
  41adf8:	stos   DWORD PTR es:[edi],eax
  41adf9:	lods   al,BYTE PTR ds:[esi]
  41adfa:	frstor [esi+0x39]
  41adfd:	push   eax
  41adfe:	push   eax
  41adff:	cld    
  41ae00:	jmp    0x7017:0x17f5dce6
  41ae07:	mov    esi,0xc468af0c
  41ae0c:	int3   
  41ae0d:	jae    0x41ade9
  41ae0f:	(bad)  
  41ae10:	cmp    eax,0x6c7e69e3
  41ae15:	xor    eax,edx
  41ae17:	jnp    0x41ada7
  41ae19:	ret    0x2f69
  41ae1c:	lds    ecx,FWORD PTR [edx+0x2c]
  41ae1f:	mov    cl,ah
  41ae21:	mov    al,0xa9
  41ae23:	jge    0x41add6
  41ae25:	sbb    ebx,DWORD PTR [eax+0x46]
  41ae28:	sub    cl,dh
  41ae2a:	push   ds
  41ae2b:	add    bh,dl
  41ae2d:	and    cl,BYTE PTR [eax-0x1e]
  41ae30:	in     al,0x9f
  41ae32:	retf   0x4e27
  41ae35:	jns    0x41ade1
  41ae37:	mov    ah,0x32
  41ae39:	rol    BYTE PTR [esi],0x85
  41ae3c:	xchg   ebp,eax
  41ae3d:	inc    ecx
  41ae3e:	sbb    al,0xc7
  41ae40:	out    0x4d,al
  41ae42:	bnd jl 0x41aebd
  41ae45:	and    BYTE PTR [eax],cl
  41ae47:	pushf  
  41ae48:	adc    eax,0x64aeeab5
  41ae4d:	je     0x41ade3
  41ae4f:	out    0x4e,al
  41ae51:	pop    ebp
  41ae52:	(bad)  
  41ae53:	jge    0x41ae98
  41ae55:	test   DWORD PTR [esi+0x5d],ecx
  41ae58:	jbe    0x41ae93
  41ae5a:	sbb    BYTE PTR ds:0xb7236fa1,al
  41ae60:	and    al,ch
  41ae62:	pop    edi
  41ae63:	mov    al,bh
  41ae65:	aaa    
  41ae66:	js     0x41aea1
  41ae68:	jmp    0x41ae18
  41ae6a:	out    0xed,eax
  41ae6c:	aad    0x8
  41ae6e:	mov    eax,0x4b439e5e
  41ae73:	lds    ebx,FWORD PTR [edx+0x6e6c56e5]
  41ae79:	mov    edi,0xed8c8a32
  41ae7e:	xchg   DWORD PTR [esi+0xa037fd5],edx
  41ae84:	ret    
  41ae85:	nop
  41ae86:	add    edi,edx
  41ae88:	rcl    DWORD PTR [ebx+edi*4+0xdfa63a1],cl
  41ae8f:	sbb    al,0x6d
  41ae91:	aaa    
  41ae92:	(bad)  
  41ae93:	fild   QWORD PTR [ebp+0x62]
  41ae96:	lahf   
  41ae97:	mov    DWORD PTR [edi],ebx
  41ae99:	add    esi,esi
  41ae9b:	aas    
  41ae9c:	iret   
  41ae9d:	gs popf 
  41ae9f:	daa    
  41aea0:	aaa    
  41aea1:	cmp    ebp,DWORD PTR [ecx+0x582d7aa3]
  41aea7:	loope  0x41ae70
  41aea9:	sub    cl,BYTE PTR [ecx]
  41aeab:	pushf  
  41aeac:	jmp    0x9ff05cb7
  41aeb1:	xlat   BYTE PTR ds:[ebx]
  41aeb2:	(bad)  
  41aeb3:	mov    dl,0x6d
  41aeb5:	nop
  41aeb6:	out    dx,al
  41aeb7:	jno    0x41aebd
  41aeb9:	add    DWORD PTR ds:0x924dc483,eax
  41aebf:	push   esi
  41aec0:	cmp    esi,DWORD PTR [ebx]
  41aec2:	pop    edx
  41aec3:	push   ebp
  41aec4:	dec    edi
  41aec5:	pop    edi
  41aec6:	fs sbb eax,0xac364785
  41aecc:	mov    ecx,0x35fb576d
  41aed1:	pop    eax
  41aed2:	push   edi
  41aed3:	imul   ebp,DWORD PTR [ebp+eiz*8-0x6477460d],0xffffffd6
  41aedb:	mov    al,0x37
  41aedd:	sar    DWORD PTR ds:0xc15adc1a,0x75
  41aee4:	and    eax,0xf5828436
  41aee9:	mov    ah,0x5d
  41aeeb:	dec    eax
  41aeec:	arpl   WORD PTR [edx],ax
  41aeee:	retf   
  41aeef:	fadd   st,st(4)
  41aef1:	or     ebp,DWORD PTR [eax]
  41aef3:	adc    al,0x9c
  41aef5:	pop    ebp
  41aef6:	icebp  
  41aef7:	push   ebx
  41aef8:	mov    esp,0x9e5d3a45
  41aefd:	aaa    
  41aefe:	xor    BYTE PTR [ecx+0xb049c2c],cl
  41af04:	(bad)  
  41af05:	daa    
  41af06:	jnp    0x41aea4
  41af08:	pushf  
  41af09:	xor    DWORD PTR [esi],ecx
  41af0b:	sti    
  41af0c:	cmp    BYTE PTR [ecx+0x180713e5],al
  41af12:	popa   
  41af13:	idiv   ch
  41af15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af16:	push   esp
  41af17:	mov    BYTE PTR [ecx+eax*2],dh
  41af1a:	push   ecx
  41af1b:	inc    ebx
  41af1c:	dec    ebx
  41af1d:	mov    edx,0x493e13c9
  41af22:	push   ebx
  41af23:	in     al,dx
  41af24:	mov    ebx,0xc00f830f
  41af29:	aaa    
  41af2a:	add    al,0x1d
  41af2c:	cwde   
  41af2d:	loopne 0x41af85
  41af2f:	pop    esp
  41af30:	mov    ds:0x6d660db3,eax
  41af35:	dec    ebx
  41af36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af37:	cmp    dl,BYTE PTR [ebp+edx*4-0xc0bded1]
  41af3e:	mov    bl,0xc6
  41af40:	sub    bh,BYTE PTR [eax+eiz*2+0x48]
  41af44:	push   cs
  41af45:	jecxz  0x41af2a
  41af47:	sub    cl,BYTE PTR [eax-0x49]
  41af4a:	xor    DWORD PTR [ebp+0x1026d5f0],0xffffffce
  41af51:	fisttp QWORD PTR [esp+edi*8-0x621a28de]
  41af58:	push   ecx
  41af59:	(bad)  [edi+0x7681868e]
  41af5f:	imul   dh
  41af61:	sbb    DWORD PTR [edx-0x2],ebx
  41af64:	dec    eax
  41af65:	pusha  
  41af66:	add    BYTE PTR [ecx],0xb7
  41af69:	loopne 0x41af4e
  41af6b:	mov    ds:0xb75a013a,al
  41af70:	cmp    cl,BYTE PTR [eax-0x34]
  41af73:	sbb    BYTE PTR [edi+0x722085e],0x90
  41af7a:	shl    DWORD PTR [edx+0x33],cl
  41af7d:	in     eax,dx
  41af7e:	ror    BYTE PTR [esi+0x7405cdb6],1
  41af84:	ret    
  41af85:	mov    ch,0x37
  41af87:	xor    eax,0xef155817
  41af8c:	call   0x96127fde
  41af91:	mov    cs,WORD PTR [ebx]
  41af93:	mov    al,ds:0x1a6cfd43
  41af98:	retf   
  41af99:	mov    edi,0x69b2fb76
  41af9e:	mov    esi,0x48f492cf
  41afa3:	mov    edi,0x4758bc8a
  41afa8:	push   edx
  41afa9:	cmp    eax,0xcb87af8b
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x60181003]
  41afc0:	in     al,0xb6
  41afc2:	fist   WORD PTR [eax]
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41afbb
  41afcc:	call   0x3a6c:0xda82033e
  41afd3:	test   DWORD PTR ds:0x8cea1703,esi
  41afd9:	cmc    
  41afda:	push   ss
  41afdb:	inc    eax
  41afdc:	sti    
  41afdd:	pop    esi
  41afde:	xor    DWORD PTR [esi+0x3e37d47c],eax
  41afe4:	not    ecx
  41afe6:	cmc    
  41afe7:	aaa    
  41afe8:	mov    dh,dl
  41afea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afeb:	jmp    0xaf37:0xe256233f
  41aff2:	jmp    0xe3129f48
  41aff7:	loop   0x41afec
  41aff9:	mov    WORD PTR [edx],es
  41affb:	in     eax,dx
  41affc:	push   edi
  41affd:	sub    edx,DWORD PTR [esi+ecx*4+0x4b]
  41b001:	repnz rcr BYTE PTR [ebx+eax*2+0x2dc12909],1
  41b009:	mov    edx,0x784f3695
  41b00e:	stos   BYTE PTR es:[edi],al
  41b00f:	add    DWORD PTR [ebp-0x4e],esp
  41b012:	jle    0x41afd9
  41b014:	inc    edi
  41b015:	ins    DWORD PTR es:[edi],dx
  41b016:	pusha  
  41b017:	sar    esi,0xe5
  41b01a:	cld    
  41b01b:	aaa    
  41b01c:	or     DWORD PTR [esi-0x4a],0xf8e5b6b2
  41b023:	jo     0x41afe3
  41b025:	add    al,0x4b
  41b027:	js     0x41b047
  41b029:	pushf  
  41b02a:	xor    DWORD PTR [edx+eiz*1-0x1b],0x1adad018
  41b032:	mov    esp,0x73b56f01
  41b037:	cmp    al,0x2c
  41b039:	in     al,0xff
  41b03b:	jecxz  0x41afde
  41b03d:	(bad)  
  41b03f:	cs popf 
  41b041:	leave  
  41b042:	jns    0x41b00f
  41b044:	in     al,0x42
  41b046:	pop    esp
  41b047:	repnz addr16 mov bh,0x76
  41b04b:	push   esp
  41b04c:	mov    DWORD PTR [ebp+0x15b45659],ebx
  41b052:	mov    al,BYTE PTR ds:0xec49bcc2
  41b058:	jns    0x41b011
  41b05a:	dec    edx
  41b05b:	lar    edx,WORD PTR [eax]
  41b05e:	and    al,0xfd
  41b060:	lea    edi,[eax]
  41b062:	dec    ecx
  41b063:	sub    BYTE PTR ds:0x88a5229b,0xb9
  41b06a:	lods   eax,DWORD PTR ds:[esi]
  41b06b:	scas   al,BYTE PTR es:[edi]
  41b06c:	and    BYTE PTR [esi-0x41],dl
  41b06f:	mov    edx,ss
  41b071:	jae    0x41b013
  41b073:	test   eax,0xdea83b3d
  41b079:	stos   DWORD PTR es:[edi],eax
  41b07a:	call   0xc6f56c9e
  41b07f:	jo     0x41b04c
  41b081:	test   DWORD PTR [ebp+esi*8-0x2b6717cf],edi
  41b088:	ror    DWORD PTR [eax+esi*2-0x13f36e8a],0x16
  41b090:	pop    eax
  41b091:	call   0x4dc4:0x40535318
  41b098:	les    ebx,FWORD PTR [esp+eiz*2-0x7d]
  41b09c:	or     BYTE PTR [esi-0x6e93bbe5],al
  41b0a2:	scas   al,BYTE PTR es:[edi]
  41b0a3:	stos   BYTE PTR es:[edi],al
  41b0a4:	inc    edi
  41b0a5:	int    0x7d
  41b0a7:	fst    QWORD PTR [esi+0x588c227f]
  41b0ad:	jl     0x41b0ce
  41b0af:	and    al,0x5d
  41b0b1:	and    esp,ebp
  41b0b3:	xor    DWORD PTR [eax+0x390934ff],esp
  41b0b9:	popa   
  41b0ba:	adc    bl,BYTE PTR [ebp-0x5]
  41b0bd:	xor    WORD PTR [eax-0x39],bp
  41b0c1:	pop    edi
  41b0c2:	or     al,0xd2
  41b0c4:	xlat   BYTE PTR ds:[ebx]
  41b0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c6:	popa   
  41b0c7:	sub    ebx,DWORD PTR [ebx+0x27f70061]
  41b0cd:	(bad)
  41b0d0:	sbb    DWORD PTR [edx-0x35],esi
  41b0d3:	ja     0x41b078
  41b0d5:	out    0xe4,al
  41b0d7:	jge    0x41b065
  41b0d9:	push   eax
  41b0da:	idiv   BYTE PTR [edx-0x1fe6802c]
  41b0e0:	ds push esp
  41b0e2:	mov    al,ds:0x8896f0e1
  41b0e7:	imul   edi,DWORD PTR [ebx-0x19],0x70
  41b0eb:	ds iret 
  41b0ed:	addr16 push ecx
  41b0ef:	cmp    BYTE PTR [edi],al
  41b0f1:	xchg   ecx,eax
  41b0f2:	rol    edi,0x9c
  41b0f5:	hlt    
  41b0f6:	inc    ecx
  41b0f7:	aam    0xb2
  41b0f9:	mov    eax,ds:0x3af61fbb
  41b0fe:	sub    ah,BYTE PTR [edx]
  41b100:	jecxz  0x41b16d
  41b102:	test   DWORD PTR [ebp-0x66],ebp
  41b105:	das    
  41b106:	and    esp,DWORD PTR [edi-0x1a]
  41b109:	pusha  
  41b10a:	cli    
  41b10b:	push   edx
  41b10c:	popa   
  41b10d:	adc    edi,ebp
  41b10f:	sbb    al,0xfb
  41b111:	cmp    DWORD PTR [eax-0x2e],esi
  41b114:	xchg   esp,eax
  41b115:	jg     0x41b131
  41b117:	repnz fwait
  41b119:	daa    
  41b11a:	(bad)
  41b11d:	loope  0x41b18d
  41b11f:	fbld   TBYTE PTR [ecx+0x16]
  41b122:	in     al,dx
  41b123:	cld    
  41b124:	xchg   edi,eax
  41b125:	pop    ebp
  41b126:	popa   
  41b127:	or     al,0xfb
  41b129:	imul   ecx,DWORD PTR [eax-0x4069b685],0x9f81c226
  41b133:	jb     0x41b0e9
  41b135:	mov    eax,ds:0xa7a2a947
  41b13a:	lds    ebp,FWORD PTR [edx+0x22]
  41b13d:	ror    DWORD PTR gs:[eax+0x13bbeac8],0x94
  41b145:	fbld   TBYTE PTR [edx-0x39]
  41b148:	cmp    BYTE PTR [ebx+0x27d907cb],dl
  41b14e:	js     0x41b198
  41b150:	cli    
  41b151:	ret    0x1226
  41b154:	adc    eax,DWORD PTR [edx-0x2c]
  41b157:	mov    eax,ds:0xe3463966
  41b15c:	xchg   DWORD PTR [ecx],esp
  41b15e:	mov    al,ds:0xad9245f3
  41b163:	pop    ss
  41b164:	pop    ds
  41b165:	rcr    DWORD PTR [esi],1
  41b167:	jmp    0x82d0a187
  41b16c:	int3   
  41b16d:	mov    DWORD PTR [edi-0x12a78f57],esi
  41b173:	jno    0x41b192
  41b175:	jae    0x41b103
  41b177:	jae    0x41b16d
  41b179:	add    bh,BYTE PTR [edi]
  41b17b:	retf   0xe5
  41b17e:	mov    eax,DWORD PTR [esi]
  41b180:	pushf  
  41b181:	popa   
  41b182:	ret    0xaf87
  41b185:	iret   
  41b186:	fistp  QWORD PTR [ecx+ecx*2-0x5b097a5b]
  41b18d:	clc    
  41b18e:	lahf   
  41b18f:	leave  
  41b190:	imul   edi,esp,0x5c
  41b193:	outs   dx,DWORD PTR ds:[esi]
  41b194:	loope  0x41b116
  41b196:	mov    ch,dl
  41b198:	and    BYTE PTR [ebx+0x49],ah
  41b19b:	imul   ebp,DWORD PTR [esi+0x7e4b5e8d],0xa
  41b1a2:	dec    ebx
  41b1a3:	dec    edi
  41b1a4:	jl     0x41b14d
  41b1a6:	ins    BYTE PTR es:[edi],dx
  41b1a7:	sub    bh,BYTE PTR [eax+0x78136dfb]
  41b1ad:	mov    esi,0x5da81ca8
  41b1b2:	jmp    0xc48337b
  41b1b7:	leave  
  41b1b8:	(bad)  
  41b1b9:	xor    al,0xca
  41b1bb:	aam    0x1a
  41b1bd:	add    eax,0xc7072d3f
  41b1c2:	(bad)  
  41b1c3:	mov    DWORD PTR [ebx+esi*8-0xc05de44],esp
  41b1ca:	dec    ebx
  41b1cb:	xor    eax,0x44885574
  41b1d0:	push   ebx
  41b1d1:	aam    0x39
  41b1d3:	loop   0x41b174
  41b1d5:	push   ds
  41b1d6:	xor    al,0x72
  41b1d8:	imul   esi,DWORD PTR gs:[ebx-0x1f068fb3],0x4d
  41b1e0:	out    dx,eax
  41b1e1:	dec    eax
  41b1e2:	cmp    al,0x49
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shl    BYTE PTR ss:[bp-0x1f0f],0x62
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b238
  41b205:	xor    BYTE PTR [eax+0x27],0xf7
  41b209:	jns    0x41b266
  41b20b:	push   ds
  41b20c:	std    
  41b20d:	rcl    BYTE PTR [eax-0x25c7330c],cl
  41b213:	pushf  
  41b214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b215:	jl     0x41b295
  41b217:	jbe    0x41b1f8
  41b219:	daa    
  41b21a:	les    edx,FWORD PTR [edx-0x9]
  41b21d:	mov    ss,WORD PTR [edx-0x66f4479d]
  41b223:	lahf   
  41b224:	ret    
  41b225:	xor    cl,dl
  41b227:	or     dh,BYTE PTR [esi]
  41b229:	add    BYTE PTR [esi-0x2ee284a8],al
  41b22f:	dec    edx
  41b230:	xchg   ebp,eax
  41b231:	jp     0x41b245
  41b233:	scas   al,BYTE PTR es:[edi]
  41b234:	add    DWORD PTR [esi-0x6e],0xffffffc5
  41b238:	ficom  DWORD PTR [edx]
  41b23a:	sbb    ch,BYTE PTR [eax+0x2a]
  41b23d:	nop
  41b23e:	jle    0x41b210
  41b240:	xchg   edi,eax
  41b241:	mov    WORD PTR [edx+edi*1+0x30],ds
  41b245:	mov    WORD PTR [ebp+eiz*1-0x9],fs
  41b249:	pop    ss
  41b24a:	lods   al,BYTE PTR ds:[esi]
  41b24b:	stos   BYTE PTR es:[edi],al
  41b24c:	aam    0xeb
  41b24e:	fisubr WORD PTR [esi+0x640455c1]
  41b254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b255:	mov    edi,0xc68f67ab
  41b25a:	jbe    0x41b1f4
  41b25c:	mov    ah,0xeb
  41b25e:	mov    edx,0x7e3b51e9
  41b263:	jge    0x41b252
  41b265:	into   
  41b266:	mov    ebp,0xd06fab76
  41b26b:	mov    esi,DWORD PTR [edx-0x52]
  41b26e:	pop    ss
  41b26f:	xchg   DWORD PTR [ebp+eiz*1+0x1c],ebx
  41b273:	jmp    0xece8:0xcaaf8d62
  41b27a:	pop    eax
  41b27b:	sbb    dh,BYTE PTR [edx]
  41b27d:	add    DWORD PTR [ebx-0x315db8a8],ecx
  41b283:	mov    dl,0xf8
  41b285:	mov    ebx,0x200b0ca0
  41b28a:	jb     0x41b21b
  41b28c:	xor    BYTE PTR [ecx+ebx*8-0x6a],bl
  41b290:	test   eax,0xf39b1b5e
  41b295:	bswap  edx
  41b297:	call   0x6a7c:0xed8f9d35
  41b29e:	adc    BYTE PTR [eax],al
  41b2a0:	adc    eax,0x95d149b7
  41b2a5:	xchg   ecx,eax
  41b2a6:	sub    BYTE PTR [ebp+0x5a],cl
  41b2a9:	inc    edi
  41b2aa:	mov    dl,0x5c
  41b2ac:	inc    esi
  41b2ad:	xchg   ebx,eax
  41b2ae:	add    DWORD PTR [esi+0x53],ebp
  41b2b1:	and    bh,0x4
  41b2b4:	push   es
  41b2b5:	inc    esi
  41b2b6:	clc    
  41b2b7:	shl    BYTE PTR [edx],0xc2
  41b2ba:	mov    al,ds:0x6d815d86
  41b2bf:	call   0xa20f0dbf
  41b2c4:	(bad)  
  41b2c5:	push   ecx
  41b2c6:	jno    0x41b2c9
  41b2c8:	xor    ebp,DWORD PTR [ebx-0x1babc988]
  41b2ce:	cmp    ah,BYTE PTR [ebp-0x39f23a3f]
  41b2d4:	or     BYTE PTR [esi-0x1f6b1ef],ch
  41b2da:	or     bh,BYTE PTR [ebx+0x2b306502]
  41b2e0:	xor    ebx,DWORD PTR [ecx-0x2bd5eb98]
  41b2e6:	mov    bh,0xf4
  41b2e8:	dec    ecx
  41b2e9:	mov    es,WORD PTR [edi]
  41b2eb:	icebp  
  41b2ec:	fs out dx,eax
  41b2ee:	xor    eax,0xc3868e9f
  41b2f3:	paddq  mm3,QWORD PTR [esp+ecx*4]
  41b2f7:	sahf   
  41b2f8:	idiv   DWORD PTR [ebx-0x6b]
  41b2fb:	cli    
  41b2fc:	jno    0x41b303
  41b2fe:	inc    BYTE PTR [ecx-0x6b965ca]
  41b304:	shr    DWORD PTR [esp+ecx*1-0x2d0531d0],0xe3
  41b30c:	out    dx,eax
  41b30d:	in     eax,0x23
  41b30f:	push   0xc0e7f50c
  41b314:	push   ebp
  41b315:	imul   ecx,DWORD PTR [ebp+0xd811ce3],0xfffffff1
  41b31c:	and    BYTE PTR [edx+0x48],cl
  41b31f:	inc    esi
  41b320:	les    ebp,FWORD PTR [esi]
  41b322:	inc    edx
  41b323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b324:	mov    al,ds:0x3db535ea
  41b329:	jmp    0x53353c1c
  41b32e:	jge    0x41b320
  41b330:	inc    ecx
  41b331:	nop
  41b332:	add    eax,0xe0a40e73
  41b337:	popf   
  41b338:	int3   
  41b339:	test   BYTE PTR [ecx-0x3e],dh
  41b33c:	scas   al,BYTE PTR es:[edi]
  41b33d:	dec    esp
  41b33e:	sub    ah,BYTE PTR [edx+eiz*2]
  41b341:	loop   0x41b30c
  41b343:	jno    0x41b2dd
  41b345:	cmp    BYTE PTR [ecx+0x32],0xd8
  41b349:	stos   BYTE PTR es:[edi],al
  41b34a:	or     al,0x22
  41b34c:	adc    DWORD PTR [ebx+0x5bfdae5e],0x8
  41b353:	push   esi
  41b354:	std    
  41b355:	dec    eax
  41b356:	fs jmp 0x742c132
  41b35c:	lock mov dl,0xdb
  41b35f:	aad    0x9c
  41b361:	and    BYTE PTR [eax-0x72],ch
  41b364:	mov    ebp,ds
  41b366:	test   al,0xa4
  41b368:	mov    esp,0xe0b35e5a
  41b36d:	mov    edx,DWORD PTR [eax]
  41b36f:	test   al,0xbc
  41b371:	cmp    BYTE PTR [ebx],bh
  41b373:	cmp    BYTE PTR [eax-0x69f298be],ch
  41b379:	int    0x76
  41b37b:	lahf   
  41b37c:	or     ecx,0x3d7a239b
  41b382:	ds clc 
  41b384:	mov    eax,0xab761e64
  41b389:	ds dec ecx
  41b38b:	mov    eax,ds:0xf888c087
  41b390:	icebp  
  41b391:	adc    DWORD PTR [edi+0x5622a2cd],esp
  41b397:	or     al,0xed
  41b399:	xor    dh,cl
  41b39b:	pop    es
  41b39c:	sbb    BYTE PTR [eax+edx*4],dl
  41b39f:	fcmovnbe st,st(3)
  41b3a1:	sub    eax,0xb8af1f9c
  41b3a6:	aaa    
  41b3a7:	sti    
  41b3a8:	loope  0x41b3a2
  41b3aa:	shl    ah,cl
  41b3ac:	sbb    eax,0xe28432b9
  41b3b1:	rcr    BYTE PTR [esi-0x66c8aaf3],1
  41b3b7:	test   eax,0x839f6f72
  41b3bc:	mov    dl,0x23
  41b3be:	lods   eax,DWORD PTR ds:[esi]
  41b3bf:	das    
  41b3c0:	out    0xae,eax
  41b3c2:	jnp    0x41b38c
  41b3c4:	push   esi
  41b3c5:	call   0x5185:0xaad87798
  41b3cc:	lock ffree st(6)
  41b3cf:	jnp    0x41b378
  41b3d1:	fiadd  WORD PTR [eax]
  41b3d3:	fidivr WORD PTR ds:0xc48261f2
  41b3d9:	(bad)  
  41b3db:	out    0x75,eax
  41b3dd:	mov    dl,0xeb
  41b3df:	imul   esp,DWORD PTR [ebp-0x30f698f1],0xdec36dc1
  41b3e9:	jmp    FWORD PTR ds:0x353f5b9e
  41b3ef:	in     al,dx
  41b3f0:	pusha  
  41b3f1:	and    bl,bh
  41b3f3:	(bad)  
  41b3f4:	push   esi
  41b3f5:	and    al,0x63
  41b3f7:	and    ebp,0xffffff83
  41b3fa:	adc    al,BYTE PTR [eax]
  41b3fc:	mov    ch,0x7c
  41b3fe:	sub    bh,BYTE PTR [edi+0x74]
  41b401:	adc    al,0x90
  41b403:	stos   BYTE PTR es:[edi],al
  41b404:	sbb    eax,DWORD PTR [esi]
  41b406:	mov    dl,0x36
  41b408:	pop    ebp
  41b409:	iret   
  41b40a:	bound  esp,QWORD PTR [edx+0x2b6e7cb8]
  41b410:	lods   al,BYTE PTR ds:[esi]
  41b411:	outs   dx,DWORD PTR ds:[esi]
  41b412:	sub    BYTE PTR [eax],dh
  41b414:	dec    esi
  41b415:	cwde   
  41b416:	popa   
  41b417:	rcl    esp,1
  41b419:	push   0x4b
  41b41b:	iret   
  41b41c:	imul   eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	int    0xed
  41b4bb:	pop    ebx
  41b4bc:	retf   
  41b4bd:	shl    dl,0x7f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b455
  41b4c6:	xchg   DWORD PTR [edx-0x12],ebx
  41b4c9:	call   0x96c94396
  41b4ce:	push   0x58
  41b4d0:	(bad)  ds:0x4d4cdc53
  41b4d6:	(bad)  
  41b4d7:	mov    eax,ds:0xf23078ee
  41b4dc:	imul   ebp,DWORD PTR [ebx+0x566103c7],0xab33143d
  41b4e6:	pop    DWORD PTR [eax-0x66]
  41b4e9:	sti    
  41b4ea:	fist   DWORD PTR [eax+0x72]
  41b4ed:	pop    edx
  41b4ee:	cs mov edi,0x6a046afc
  41b4f4:	jae    0x41b56f
  41b4f6:	fld    QWORD PTR [edx-0x7889494d]
  41b4fc:	dec    esp
  41b4fd:	imul   ebp,esi,0x74
  41b500:	jb     0x41b4ec
  41b502:	jo     0x41b547
  41b504:	in     al,dx
  41b505:	(bad)  
  41b506:	adc    eax,0xf600488b
  41b50b:	add    BYTE PTR [eax+0xab10a5f],al
  41b511:	cmp    edx,eax
  41b513:	stos   BYTE PTR es:[edi],al
  41b514:	aad    0x9e
  41b516:	mov    al,ds:0x44248984
  41b51b:	xlat   BYTE PTR ds:[ebx]
  41b51c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b51d:	pop    ebx
  41b51e:	stc    
  41b51f:	xchg   esi,eax
  41b520:	popa   
  41b521:	cmp    bl,BYTE PTR [eax+0x5b68647f]
  41b527:	sbb    al,0xe5
  41b529:	xor    al,0x9c
  41b52b:	cmp    al,0x2a
  41b52d:	sahf   
  41b52e:	inc    esi
  41b52f:	pop    eax
  41b530:	retf   
  41b531:	push   edi
  41b532:	mov    bh,0x3f
  41b534:	bound  esi,QWORD PTR ds:0xaaf0c8f
  41b53a:	cli    
  41b53b:	sbb    eax,0x86ec92c1
  41b540:	ds stc 
  41b542:	sbb    dl,BYTE PTR [ebx-0x51999da4]
  41b548:	xchg   BYTE PTR [ecx+ebx*1+0x1e334b9e],ah
  41b54f:	imul   eax,DWORD PTR [edi+edi*2],0x967c61b7
  41b556:	fcmovb st,st(3)
  41b558:	int3   
  41b559:	jmp    0x18081b21
  41b55e:	pop    edx
  41b55f:	pop    esi
  41b560:	pusha  
  41b561:	xchg   esi,eax
  41b562:	fyl2xp1 
  41b564:	mov    ebx,0xad1c5001
  41b569:	shl    DWORD PTR [ebp-0xde94cfa],0x6f
  41b570:	dec    eax
  41b571:	xchg   esp,eax
  41b572:	or     al,0x33
  41b574:	cmc    
  41b575:	loop   0x41b5ba
  41b577:	dec    esi
  41b578:	jecxz  0x41b55b
  41b57a:	or     BYTE PTR [edi-0x58],cl
  41b57d:	je     0x41b5fc
  41b57f:	mov    al,ds:0xfba50d76
  41b584:	sbb    eax,0x5e40e5b2
  41b589:	stos   DWORD PTR es:[edi],eax
  41b58a:	pop    eax
  41b58b:	not    edx
  41b58d:	jnp    0x41b56d
  41b58f:	fisttp WORD PTR [ebx-0x40]
  41b592:	popf   
  41b593:	inc    edi
  41b594:	fnstenv [ecx]
  41b596:	das    
  41b597:	call   FWORD PTR [esi-0x28]
  41b59a:	fwait
  41b59b:	(bad)  
  41b59c:	ret    0xfda6
  41b59f:	lods   al,BYTE PTR ds:[esi]
  41b5a0:	(bad)  [esi]
  41b5a2:	or     eax,0xbdf4b81e
  41b5a7:	test   DWORD PTR [esi],0x9efcc238
  41b5ad:	sbb    BYTE PTR [eax+0x27a3bb95],al
  41b5b3:	inc    edx
  41b5b4:	outs   dx,DWORD PTR ds:[esi]
  41b5b5:	das    
  41b5b6:	repz mov ss,WORD PTR [ecx+0x6f]
  41b5ba:	mov    eax,ds:0xf9585941
  41b5bf:	aaa    
  41b5c0:	adc    eax,0xe5f8e4f9
  41b5c5:	cdq    
  41b5c6:	or     ch,BYTE PTR [esi+ebx*2-0x350099e3]
  41b5cd:	adc    ecx,DWORD PTR [edx]
  41b5cf:	fistp  WORD PTR [ebp+0x2dd9e6af]
  41b5d5:	repz xchg ecx,eax
  41b5d7:	mov    esp,0x13317664
  41b5dc:	in     al,0xb2
  41b5de:	int    0x9
  41b5e0:	mov    edx,0x548fe1a0
  41b5e5:	push   eax
  41b5e6:	xchg   ebp,eax
  41b5e7:	push   ss
  41b5e8:	enter  0x17b7,0x9d
  41b5ec:	mov    eax,0xb82a59db
  41b5f1:	sub    ebx,ebx
  41b5f3:	ss pop es
  41b5f5:	ja     0x41b5e5
  41b5f7:	sbb    dl,bl
  41b5f9:	leave  
  41b5fa:	outs   dx,BYTE PTR ds:[esi]
  41b5fb:	push   cs
  41b5fc:	das    
  41b5fd:	mov    ecx,0x59a3d4e4
  41b602:	loopne 0x41b633
  41b604:	inc    eax
  41b605:	test   DWORD PTR [eax-0x6a8472b2],ecx
  41b60b:	or     ebp,DWORD PTR [edx+0x48]
  41b60e:	pusha  
  41b60f:	push   eax
  41b610:	xchg   edx,eax
  41b611:	aad    0xfd
  41b613:	mov    al,0x76
  41b615:	pop    es
  41b616:	test   al,0x5c
  41b618:	adc    DWORD PTR [edx+0xd],0x0
  41b61c:	xchg   DWORD PTR [edx],esi
  41b61e:	adc    eax,DWORD PTR [eax-0x2add22b5]
  41b624:	cmp    ch,dl
  41b626:	xchg   ebx,eax
  41b627:	xor    ch,BYTE PTR [esp+edi*1]
  41b62a:	jg     0x41b5fd
  41b62c:	fisttp WORD PTR [edx+0x179b0fdd]
  41b632:	jb     0x41b6b3
  41b634:	jmp    0xb1b5:0x8c53722c
  41b63b:	cmp    BYTE PTR [eax+ebx*8-0x5d127d7b],ah
  41b642:	int    0xb6
  41b644:	sub    esi,edx
  41b646:	pop    eax
  41b647:	outs   dx,DWORD PTR ds:[esi]
  41b648:	or     BYTE PTR [esi+0xf],ah
  41b64b:	mov    ds:0x95d2f67f,al
  41b650:	mul    ah
  41b652:	icebp  
  41b653:	sar    DWORD PTR [esi],cl
  41b655:	retf   0x703e
  41b658:	fstp   QWORD PTR [eax-0x1192b0b9]
  41b65e:	lods   al,BYTE PTR ds:[esi]
  41b65f:	xor    edi,edi
  41b661:	xchg   esp,eax
  41b662:	push   es
  41b663:	add    BYTE PTR [esi],dl
  41b665:	mov    al,ds:0xbd851eb6
  41b66a:	sbb    ah,bh
  41b66c:	mov    bl,0x1a
  41b66e:	sub    ebp,DWORD PTR [ebp+0xc081f08]
  41b674:	cmc    
  41b675:	into   
  41b676:	pushf  
  41b677:	sub    al,0x18
  41b679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67a:	aam    0x25
  41b67c:	out    dx,al
  41b67d:	jl     0x41b67b
  41b67f:	pushf  
  41b680:	loop   0x41b654
  41b682:	jmp    0x41b6c6
  41b684:	clc    
  41b685:	push   0x8d999b6c
  41b68a:	xor    eax,0xd9c1cefe
  41b68f:	jg     0x41b67f
  41b691:	push   esp
  41b692:	lods   eax,DWORD PTR ds:[esi]
  41b693:	ror    DWORD PTR [edx+0x43],0xb0
  41b697:	jno    0x41b62e
  41b699:	cmp    DWORD PTR [eax+0x3d],edx
  41b69c:	push   esp
  41b69d:	idiv   BYTE PTR [edi]
  41b69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a0:	inc    ecx
  41b6a1:	es ds push esi
  41b6a4:	lods   eax,DWORD PTR ds:[esi]
  41b6a5:	in     eax,dx
  41b6a6:	repnz push ds
  41b6a8:	ffreep st(4)
  41b6aa:	cmp    BYTE PTR [edi+0x32dfc3c0],bl
  41b6b0:	div    BYTE PTR [eax-0x3e]
  41b6b3:	pop    esi
  41b6b4:	in     al,0x6c
  41b6b6:	push   0xffffff9d
  41b6b8:	jno    0x41b649
  41b6ba:	jae    0x41b679
  41b6bc:	stos   DWORD PTR es:[edi],eax
  41b6bd:	cmp    BYTE PTR [ebx],ah
  41b6bf:	inc    ebp
  41b6c0:	pusha  
  41b6c1:	add    BYTE PTR [esi],cl
  41b6c3:	mov    WORD PTR [eax+eax*4-0x7f],es
  41b6c7:	dec    eax
  41b6c8:	jnp    0x41b713
  41b6ca:	shr    ch,0x9f
  41b6cd:	test   DWORD PTR [esi+0x67],edx
  41b6d0:	pop    edi
  41b6d1:	push   esi
  41b6d2:	mov    esp,0x86641df2
  41b6d7:	mov    eax,ds:0xee3b985d
  41b6dc:	pop    edx
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x5d5c68f6]
  41b6f4:	loop   0x41b6d7
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b717
  41b6ff:	addr16 pop ss
  41b701:	aas    
  41b702:	mov    edi,0xef2e16ad
  41b707:	cdq    
  41b708:	cli    
  41b709:	in     al,dx
  41b70a:	adc    BYTE PTR [esi],ch
  41b70c:	cwde   
  41b70d:	push   ebp
  41b70e:	stos   DWORD PTR es:[edi],eax
  41b70f:	dec    ecx
  41b710:	stos   BYTE PTR es:[edi],al
  41b711:	lock pop ebx
  41b713:	ss inc ecx
  41b715:	inc    ebx
  41b716:	fcmovnu st,st(6)
  41b718:	repz (bad) 
  41b71a:	sub    eax,DWORD PTR [edx+0x6a]
  41b71d:	mov    al,ds:0x596acf37
  41b722:	xchg   edx,eax
  41b723:	mul    DWORD PTR [ecx+0x49]
  41b726:	or     BYTE PTR [esi+0x7c],dh
  41b729:	xchg   ah,ah
  41b72b:	mov    BYTE PTR [ebx],bl
  41b72d:	std    
  41b72e:	clc    
  41b72f:	sti    
  41b730:	bound  ebx,QWORD PTR [ebp-0x1260457c]
  41b736:	mov    BYTE PTR [ecx-0x7c],ch
  41b739:	xchg   ebp,eax
  41b73a:	dec    ebx
  41b73b:	pop    edx
  41b73c:	cmc    
  41b73d:	cld    
  41b73e:	mov    cl,BYTE PTR [esi+0x7b2e7208]
  41b744:	call   0x354cd4e8
  41b749:	xchg   edi,eax
  41b74a:	clc    
  41b74b:	inc    edx
  41b74c:	inc    esp
  41b74d:	adc    ebx,ebp
  41b74f:	pop    ecx
  41b750:	(bad)  
  41b752:	mov    bh,0xe2
  41b754:	adc    al,0x8c
  41b756:	inc    ebp
  41b757:	mov    dh,0x10
  41b759:	xor    DWORD PTR [edi],0xd7c2257b
  41b75f:	lds    ax,DWORD PTR [edi+0x451b0569]
  41b766:	pop    eax
  41b767:	cmp    DWORD PTR [edi+eiz*1-0xa],ebx
  41b76b:	ret    0xd5d8
  41b76e:	mov    bh,0x48
  41b770:	jmp    0x4811:0x2f840693
  41b777:	cld    
  41b778:	cwde   
  41b779:	or     eax,0xb4294d39
  41b77e:	sbb    BYTE PTR [esi+0x73f0b63d],dl
  41b784:	mov    DWORD PTR [ebx],edx
  41b786:	cmp    eax,0x47c288c6
  41b78b:	clc    
  41b78c:	adc    cl,bl
  41b78e:	stc    
  41b78f:	out    dx,eax
  41b790:	(bad)  
  41b791:	cmp    BYTE PTR [ebx],ah
  41b793:	sahf   
  41b794:	dec    esi
  41b795:	test   al,0x9e
  41b797:	adc    bl,al
  41b799:	sahf   
  41b79a:	xchg   esp,eax
  41b79b:	xlat   BYTE PTR ds:[ebx]
  41b79c:	inc    ebp
  41b79d:	xchg   DWORD PTR [edi+0xa],ebx
  41b7a0:	sbb    BYTE PTR [ebx],dh
  41b7a2:	xor    eax,DWORD PTR [ebp-0x1ac4ae1c]
  41b7a8:	pop    es
  41b7a9:	sti    
  41b7aa:	mov    al,0xd
  41b7ac:	(bad)  
  41b7ad:	jp     0x41b7f1
  41b7af:	xchg   edx,eax
  41b7b0:	xor    eax,0x50750ad0
  41b7b5:	scas   eax,DWORD PTR es:[edi]
  41b7b6:	or     al,0xa8
  41b7b8:	and    DWORD PTR [ebp+0x1ee4c9fe],ebp
  41b7be:	outs   dx,DWORD PTR ds:[esi]
  41b7bf:	fld    TBYTE PTR ds:0x9138284f
  41b7c5:	pop    eax
  41b7c6:	stos   DWORD PTR es:[edi],eax
  41b7c7:	dec    ch
  41b7c9:	jg     0x41b78d
  41b7cb:	push   ebx
  41b7cc:	dec    ebp
  41b7cd:	mov    ds:0x46b88d91,al
  41b7d2:	or     esi,edx
  41b7d4:	stos   DWORD PTR es:[edi],eax
  41b7d5:	inc    edx
  41b7d6:	jl     0x41b809
  41b7d8:	and    edx,DWORD PTR ds:0xf14a3ddb
  41b7de:	or     BYTE PTR [ebp-0x3caa902d],ah
  41b7e4:	in     al,0xe8
  41b7e6:	in     al,dx
  41b7e7:	daa    
  41b7e8:	add    DWORD PTR [edx-0x35341b9f],ecx
  41b7ee:	xchg   esi,eax
  41b7ef:	jp     0x41b7dd
  41b7f1:	add    al,BYTE PTR [edx-0x6d]
  41b7f4:	fbstp  TBYTE PTR [esi-0x2d]
  41b7f7:	inc    ecx
  41b7f8:	ins    DWORD PTR es:[edi],dx
  41b7f9:	bound  edi,QWORD PTR [eax-0x770b39e2]
  41b7ff:	loop   0x41b817
  41b801:	aad    0xea
  41b803:	test   eax,0xadb3aed1
  41b808:	mov    ?,WORD PTR [eax-0x6a]
  41b80b:	mov    ebx,0xe8466b5
  41b810:	in     al,dx
  41b811:	(bad)  
  41b812:	lods   al,BYTE PTR ds:[esi]
  41b813:	icebp  
  41b814:	jbe    0x41b831
  41b816:	imul   ebx,esi,0xffffffa6
  41b819:	push   eax
  41b81a:	js     0x41b7ff
  41b81c:	jb     0x41b7c2
  41b81e:	rcl    BYTE PTR [eax],0xbf
  41b821:	xor    edi,DWORD PTR [edi]
  41b823:	xchg   edi,eax
  41b824:	stc    
  41b825:	jecxz  0x41b857
  41b827:	mov    cl,0xc4
  41b829:	in     eax,dx
  41b82a:	lea    ecx,[ebp+0x59]
  41b82d:	nop
  41b82e:	test   al,0x34
  41b830:	mov    edx,ebx
  41b832:	ret    0xfe9d
  41b835:	fwait
  41b836:	xchg   esi,eax
  41b837:	outs   dx,DWORD PTR ds:[esi]
  41b838:	retf   0x104b
  41b83b:	out    dx,al
  41b83c:	inc    edx
  41b83d:	inc    ebx
  41b83e:	dec    esi
  41b83f:	pop    eax
  41b840:	fcomp  QWORD PTR [ebx]
  41b842:	bound  esp,QWORD PTR [ecx-0x4817b3fd]
  41b848:	stc    
  41b849:	shr    DWORD PTR [esi+ebp*8-0x22],1
  41b84d:	pusha  
  41b84e:	inc    esi
  41b84f:	add    al,0xbc
  41b851:	addr16 loop 0x41b819
  41b854:	iret   
  41b855:	retf   
  41b856:	test   DWORD PTR [esp+ebp*8+0x77],0xe9006c03
  41b85e:	stos   BYTE PTR es:[edi],al
  41b85f:	push   0xffffffd2
  41b861:	sti    
  41b862:	sbb    BYTE PTR [edx+0x67],al
  41b865:	daa    
  41b866:	mov    edi,0x6671da81
  41b86b:	push   ecx
  41b86c:	cwde   
  41b86d:	popa   
  41b86e:	jo     0x41b8c2
  41b870:	pop    ebp
  41b871:	push   edx
  41b872:	dec    ecx
  41b873:	fs stc 
  41b875:	fmul   DWORD PTR [ebx]
  41b877:	je     0x41b871
  41b879:	cmp    dl,cl
  41b87b:	pop    ds
  41b87c:	cwde   
  41b87d:	cs or  al,0x2e
  41b880:	in     al,0xc8
  41b882:	not    BYTE PTR [ebp+0x1e3d29f1]
  41b888:	in     al,dx
  41b889:	or     bl,BYTE PTR [eax+0x73]
  41b88c:	aam    0x9b
  41b88e:	xor    eax,0x397230f9
  41b893:	loop   0x41b8b2
  41b895:	push   ds
  41b896:	inc    edx
  41b897:	loope  0x41b917
  41b899:	sub    BYTE PTR [edx+eax*1+0x3e],dh
  41b89d:	jne    0x41b8a4
  41b89f:	xlat   BYTE PTR ds:[ebx]
  41b8a0:	push   cs
  41b8a1:	jmp    0x3bc4:0xcb27f9fd
  41b8a8:	pop    edi
  41b8a9:	test   al,0x68
  41b8ab:	es (bad) 
  41b8ad:	or     bl,bl
  41b8af:	outs   dx,DWORD PTR ds:[esi]
  41b8b0:	into   
  41b8b1:	(bad)  
  41b8b2:	lods   al,BYTE PTR ds:[esi]
  41b8b3:	imul   ebx,edi,0xecec8d8a
  41b8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ba:	aas    
  41b8bb:	sbb    al,0x4f
  41b8bd:	push   0xfba7fa1f
  41b8c2:	mov    bl,0xab
  41b8c4:	pop    esi
  41b8c5:	inc    ebp
  41b8c6:	cmp    BYTE PTR [ecx],ah
  41b8c8:	xor    BYTE PTR [ecx-0x73],al
  41b8cb:	mov    cl,0xe6
  41b8cd:	cmp    ebp,edi
  41b8cf:	inc    cx
  41b8d1:	add    edi,DWORD PTR [edx+0x27]
  41b8d4:	mov    BYTE PTR [ebx-0xc],dl
  41b8d7:	add    BYTE PTR [ecx+0x13],bh
  41b8da:	pop    esi
  41b8db:	repz scas eax,DWORD PTR es:[edi]
  41b8dd:	ins    BYTE PTR es:[edi],dx
  41b8de:	and    al,0x72
  41b8e0:	cmc    
  41b8e1:	jae    0x41b922
  41b8e3:	fisttp DWORD PTR [eax-0x4d]
  41b8e6:	cs ror edi,1
  41b8e9:	dec    edi
  41b8ea:	add    cl,ah
  41b8ec:	cmp    ch,BYTE PTR [esi]
  41b8ee:	rcl    DWORD PTR [edx+eax*2+0x7b],0xa8
  41b8f3:	das    
  41b8f4:	pop    es
  41b8f5:	sbb    eax,0x37944483
  41b8fa:	pop    ds
  41b8fb:	push   ss
  41b8fc:	sbb    DWORD PTR [edi+0x5b],esp
  41b8ff:	fwait
  41b900:	dec    ebx
  41b901:	pop    ebx
  41b902:	fcom   DWORD PTR [esi+eiz*1+0x4a]
  41b906:	add    eax,0xb17153
  41b90b:	cli    
  41b90c:	nop
  41b90d:	gs inc esi
  41b90f:	and    al,0x53
  41b911:	fbstp  TBYTE PTR [esi]
  41b913:	adc    DWORD PTR [esi],ecx
  41b915:	sub    ecx,DWORD PTR [edi]
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx-0x2c13deca]
  41b92f:	sub    eax,0x7fe6f0a3
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b9b3
  41b93a:	jbe    0x41b91a
  41b93c:	cmp    DWORD PTR [ecx],ebp
  41b93e:	cld    
  41b93f:	mov    dl,0xf8
  41b941:	push   ss
  41b942:	out    0xe9,eax
  41b944:	inc    eax
  41b945:	inc    esp
  41b946:	mov    al,0x96
  41b948:	mov    BYTE PTR [ebx-0x2b],cl
  41b94b:	fwait
  41b94c:	inc    ebx
  41b94d:	inc    edi
  41b94e:	xchg   esi,eax
  41b94f:	mov    eax,DWORD PTR [esi+0x77c9bac4]
  41b955:	xchg   esi,eax
  41b956:	(bad)  
  41b957:	or     eax,edx
  41b959:	xchg   ebx,eax
  41b95a:	(bad)  
  41b95b:	xor    bh,BYTE PTR [ebp-0x25da346e]
  41b961:	call   0x7f66b29b
  41b966:	xchg   BYTE PTR [ebp+esi*2+0x6c],ch
  41b96a:	cmc    
  41b96b:	lods   eax,DWORD PTR ds:[esi]
  41b96c:	inc    edx
  41b96d:	jecxz  0x41b8f9
  41b96f:	test   al,0xfe
  41b971:	and    eax,0xf993a281
  41b976:	dec    eax
  41b977:	icebp  
  41b978:	mov    cs,WORD PTR [edi-0x13227270]
  41b97e:	push   ecx
  41b97f:	jmp    0x41b93e
  41b981:	adc    DWORD PTR [ebp-0x10],edx
  41b984:	push   ss
  41b985:	(bad)  
  41b986:	push   ebp
  41b987:	inc    esp
  41b988:	pop    ds
  41b989:	and    eax,0xfa11e64e
  41b98e:	int    0x7d
  41b990:	lock mov esp,0x66d7aa6b
  41b996:	or     DWORD PTR [esi],eax
  41b998:	fwait
  41b999:	rcl    dh,1
  41b99b:	sub    eax,0x6582a6d9
  41b9a0:	sub    DWORD PTR [edx-0xe],0xb4414fa0
  41b9a7:	inc    edi
  41b9a8:	ret    0xbe7c
  41b9ab:	stos   DWORD PTR es:[edi],eax
  41b9ac:	rol    DWORD PTR [esp+ebp*8],0xc1
  41b9b0:	test   ebx,0xe346e919
  41b9b6:	mov    fs,WORD PTR [ebx+0x7a2887b3]
  41b9bc:	test   eax,0xda499e71
  41b9c1:	repnz and ch,BYTE PTR [edi-0x76]
  41b9c5:	mov    eax,0xa00e255c
  41b9ca:	in     al,dx
  41b9cb:	jbe    0x41ba23
  41b9cd:	cmp    ch,BYTE PTR [ecx-0x7b]
  41b9d0:	in     eax,dx
  41b9d1:	and    DWORD PTR [esi+0xe],edx
  41b9d4:	sbb    al,0x15
  41b9d6:	es loope 0x41b9af
  41b9d9:	and    dh,cl
  41b9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9dc:	(bad)  
  41b9dd:	jmp    0x89024323
  41b9e2:	dec    ebx
  41b9e3:	or     BYTE PTR fs:[edi-0x689c549e],bh
  41b9ea:	aam    0x14
  41b9ec:	in     al,0xab
  41b9ee:	imul   edx,eax,0xffffffff
  41b9f1:	out    0xb2,eax
  41b9f3:	inc    edi
  41b9f4:	adc    al,0xeb
  41b9f6:	sub    ebp,DWORD PTR [ebx-0x40bdfcf5]
  41b9fc:	rcr    DWORD PTR [edx+edi*4+0x5],cl
  41ba00:	add    cl,ch
  41ba02:	loope  0x41b9c1
  41ba04:	sub    BYTE PTR [eax+0x34714b4f],bl
  41ba0a:	icebp  
  41ba0b:	ret    
  41ba0c:	push   esi
  41ba0d:	retf   
  41ba0e:	mov    cl,0x94
  41ba10:	push   edi
  41ba11:	mov    bl,0x78
  41ba13:	enter  0x631e,0x76
  41ba17:	fwait
  41ba18:	mov    ds:0xb447aad6,eax
  41ba1d:	imul   ecx,DWORD PTR [esi-0x22],0x5caead13
  41ba24:	add    edi,esp
  41ba26:	out    dx,al
  41ba27:	cmp    dh,BYTE PTR [ebx-0x36c36efa]
  41ba2d:	adc    ch,BYTE PTR ds:0xb59e4de3
  41ba33:	out    dx,al
  41ba34:	or     al,0x90
  41ba36:	mov    WORD PTR [edi],cs
  41ba38:	jbe    0x41ba7b
  41ba3a:	lock lods eax,DWORD PTR ds:[esi]
  41ba3c:	cmp    BYTE PTR [edi+ecx*2],bl
  41ba3f:	dec    esi
  41ba40:	cmp    eax,0xb1eb60ae
  41ba45:	scas   al,BYTE PTR es:[edi]
  41ba46:	cmp    eax,0xabc83977
  41ba4b:	mov    al,0x17
  41ba4d:	push   cs
  41ba4e:	jnp    0x41ba55
  41ba50:	jmp    0xfe4ae82a
  41ba55:	imul   esp,edi,0xba421fb
  41ba5b:	push   0x3e
  41ba5d:	adc    DWORD PTR [esi-0x451e8f3a],esp
  41ba63:	fld    TBYTE PTR [ecx+eax*1-0x2440c1c8]
  41ba6a:	add    ebp,DWORD PTR [ebp-0x40c8cf24]
  41ba70:	fisttp QWORD PTR [edx]
  41ba72:	xchg   DWORD PTR [edi+eax*4],ebp
  41ba75:	mov    esi,ds
  41ba77:	in     al,dx
  41ba78:	xor    al,0x38
  41ba7a:	int3   
  41ba7b:	jno    0x41ba99
  41ba7d:	cmp    eax,0x4447e9d4
  41ba82:	loope  0x41bad9
  41ba84:	lods   eax,DWORD PTR ds:[esi]
  41ba85:	loopne 0x41ba73
  41ba87:	enter  0xeb04,0xa2
  41ba8b:	sti    
  41ba8c:	adc    eax,0xc78f7cf8
  41ba91:	xchg   edx,eax
  41ba92:	xor    eax,0xff9dac2
  41ba97:	jle    0x41bae3
  41ba99:	cdq    
  41ba9a:	sbb    eax,0x3fa4a3e6
  41ba9f:	add    eax,0x8c8d9601
  41baa4:	and    DWORD PTR [ebx+ecx*8],ebp
  41baa7:	aad    0xcb
  41baa9:	or     dh,BYTE PTR [edi+0x24933a01]
  41baaf:	cmp    al,0x55
  41bab1:	in     al,dx
  41bab2:	loop   0x41bb02
  41bab4:	dec    edi
  41bab5:	lahf   
  41bab6:	push   ds
  41bab7:	enter  0x4cdd,0x39
  41babb:	inc    esi
  41babc:	in     eax,dx
  41babd:	icebp  
  41babe:	retf   0x1714
  41bac1:	out    0x30,al
  41bac3:	rcr    BYTE PTR [edi+0x3b],0x92
  41bac7:	ins    DWORD PTR es:[edi],dx
  41bac8:	cmp    al,0xe1
  41baca:	ret    
  41bacb:	mov    dl,0x89
  41bacd:	repz (bad) 
  41bacf:	retf   0x905c
  41bad2:	(bad)  
  41bad3:	fst    QWORD PTR [ebp+0x537280c]
  41bad9:	mov    ecx,eax
  41badb:	dec    ebx
  41badc:	mov    eax,ds:0x262b993
  41bae1:	mov    bl,0xb0
  41bae3:	jne    0x41bae4
  41bae5:	push   ds
  41bae6:	and    edi,DWORD PTR [edx+0x15]
  41bae9:	fsubr  QWORD PTR [eax+0x1]
  41baec:	push   esp
  41baed:	mov    cl,0x3f
  41baef:	(bad)  
  41baf0:	mul    DWORD PTR [ebx]
  41baf2:	in     al,0x25
  41baf4:	and    ecx,ebx
  41baf6:	mov    ah,0x6
  41baf8:	jne    0x41ba92
  41bafa:	mov    ds:0x7a564779,al
  41baff:	mov    al,0xaa
  41bb01:	xchg   ebp,eax
  41bb02:	pop    edx
  41bb03:	pop    edi
  41bb04:	xor    al,0xe9
  41bb06:	jmp    0x41bb12
  41bb08:	inc    edi
  41bb09:	cmp    bl,BYTE PTR [ecx]
  41bb0b:	xor    al,0xc4
  41bb0d:	js     0x41bb67
  41bb0f:	mov    ebp,0x460733d2
  41bb14:	or     al,BYTE PTR [ebp-0x12]
  41bb17:	add    al,BYTE PTR [edx]
  41bb19:	cmp    BYTE PTR [ebp+0x5c43bda8],dh
  41bb1f:	mov    dl,al
  41bb21:	jmp    0x41baba
  41bb23:	mov    al,ds:0x946eec69
  41bb28:	sub    BYTE PTR [ebx],al
  41bb2a:	add    DWORD PTR es:[ebx+0x5],eax
  41bb2e:	pop    ecx
  41bb2f:	dec    esi
  41bb30:	ret    0xb255
  41bb33:	inc    ebp
  41bb34:	fs ret 
  41bb36:	cld    
  41bb37:	xchg   DWORD PTR [ecx-0x44],edi
  41bb3a:	(bad)  
  41bb3c:	push   0x1c
  41bb3e:	and    esi,DWORD PTR [edi-0x3cdc01d7]
  41bb44:	out    0xd0,eax
  41bb46:	xlat   BYTE PTR ds:[ebx]
  41bb47:	add    eax,0xeac1d57a
  41bb4c:	clc    
  41bb4d:	xor    BYTE PTR [eax],0xec
  41bb50:	adc    BYTE PTR [ebx],dh
  41bb52:	shr    ecx,1
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xce17bf12
  41bb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb66:	mov    cl,0xe0
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb61
  41bb71:	fisubr WORD PTR [edi+eiz*4+0x91cc8dc]
  41bb78:	out    dx,eax
  41bb79:	xor    al,0xc3
  41bb7c:	push   ss
  41bb7d:	inc    edx
  41bb7e:	mov    bh,0x64
  41bb80:	outs   dx,DWORD PTR ds:[esi]
  41bb81:	pop    edx
  41bb82:	in     al,0x55
  41bb84:	jg     0x41bb9c
  41bb86:	mov    ebx,0x48f68100
  41bb8b:	xor    ah,bh
  41bb8d:	retf   0x797d
  41bb90:	xlat   BYTE PTR ds:[ebx]
  41bb91:	mov    ah,BYTE PTR [edi+0x54af9c5d]
  41bb97:	(bad)  
  41bb98:	sti    
  41bb99:	in     al,0xa
  41bb9b:	sbb    DWORD PTR [ebx+0x11],ecx
  41bb9e:	sbb    DWORD PTR [edi],eax
  41bba0:	jmp    0x41bb9f
  41bba2:	sub    ah,BYTE PTR [edi+0x70]
  41bba5:	fmul   QWORD PTR [esi-0x50]
  41bba8:	shl    DWORD PTR [esi+0x26],cl
  41bbab:	push   eax
  41bbac:	rol    BYTE PTR [edi+0x31178d77],1
  41bbb2:	jg     0x41bc06
  41bbb4:	adc    eax,edi
  41bbb6:	dec    edi
  41bbb7:	or     al,0x4b
  41bbb9:	and    esi,esp
  41bbbb:	inc    edx
  41bbbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbbd:	push   ebp
  41bbbe:	pop    esp
  41bbbf:	(bad)  
  41bbc0:	xchg   ecx,eax
  41bbc1:	sti    
  41bbc2:	call   0x76ac:0x4bb80c16
  41bbc9:	sbb    al,0x59
  41bbcb:	fs cld 
  41bbcd:	ins    DWORD PTR es:[edi],dx
  41bbce:	jp     0x41bb5a
  41bbd0:	daa    
  41bbd1:	icebp  
  41bbd2:	adc    dh,BYTE PTR [edx-0x34057dcf]
  41bbd8:	fdivr  QWORD PTR [ebx+0x36cbe163]
  41bbde:	or     eax,0x9eb73311
  41bbe3:	mov    ds:0x2a59ed03,al
  41bbe8:	jmp    0x31bf:0x43e0aa27
  41bbef:	jmp    0xee08:0x71f1eec7
  41bbf6:	into   
  41bbf7:	xor    BYTE PTR [edx+0x64162852],al
  41bbfd:	ficom  WORD PTR [edx-0x7629fbef]
  41bc03:	shr    BYTE PTR [esi],1
  41bc05:	inc    esp
  41bc06:	mov    dh,0xf8
  41bc08:	mul    DWORD PTR [ebx]
  41bc0a:	xlat   BYTE PTR ds:[ebx]
  41bc0b:	popf   
  41bc0c:	bound  edx,QWORD PTR [eax+ecx*2-0x34ea3822]
  41bc13:	stc    
  41bc14:	test   eax,0x80ffbc1d
  41bc19:	(bad)  
  41bc1a:	push   ss
  41bc1b:	outs   dx,DWORD PTR ds:[esi]
  41bc1c:	enter  0xaa35,0x30
  41bc20:	adc    DWORD PTR [ebp+0x44dea472],ecx
  41bc26:	sub    edx,0x99284ddc
  41bc2c:	rcl    ah,1
  41bc2e:	or     DWORD PTR [ecx+0x18],ecx
  41bc31:	sbb    esp,DWORD PTR [ebx]
  41bc33:	cmp    BYTE PTR [ecx-0x3760eb16],ah
  41bc39:	inc    edi
  41bc3a:	and    ebx,esi
  41bc3c:	jne    0x41bc94
  41bc3e:	ins    DWORD PTR es:[edi],dx
  41bc3f:	cmp    DWORD PTR [eiz*4+0x3a5d062c],0xdc20bb5e
  41bc4a:	call   0x651366f9
  41bc4f:	pop    edi
  41bc50:	arpl   WORD PTR [ebx-0x22],bp
  41bc53:	test   DWORD PTR [ebp-0x362151a8],edx
  41bc59:	add    al,0x94
  41bc5b:	(bad)  
  41bc5c:	cmc    
  41bc5d:	pop    ebp
  41bc5e:	adc    DWORD PTR ds:0x4b9b0556,edx
  41bc64:	fbstp  TBYTE PTR [ebp+0x795975cc]
  41bc6a:	push   0x40fb8551
  41bc6f:	test   eax,0x92933aa3
  41bc74:	cmp    esp,ebx
  41bc76:	mov    WORD PTR [edx+0x71],fs
  41bc79:	jecxz  0x41bc79
  41bc7b:	sub    DWORD PTR [esi-0x56bec803],eax
  41bc81:	adc    ecx,ebp
  41bc83:	ret    
  41bc84:	sbb    ah,BYTE PTR [eax+0x45]
  41bc87:	xor    DWORD PTR [eax],esp
  41bc89:	je     0x41bcb1
  41bc8b:	les    ecx,FWORD PTR [eax+eiz*1-0x10509172]
  41bc92:	jne    0x41bc6a
  41bc94:	inc    DWORD PTR [ebx+0x62a85669]
  41bc9a:	ins    BYTE PTR es:[edi],dx
  41bc9b:	mov    ds:0xf0f5279a,al
  41bca0:	push   ds
  41bca1:	adc    DWORD PTR [edi],esi
  41bca3:	add    edi,DWORD PTR [ecx+0x48]
  41bca6:	enter  0x7492,0x2c
  41bcaa:	(bad)  
  41bcab:	jno    0x41bc91
  41bcad:	int3   
  41bcae:	fs jg  0x41bd0c
  41bcb1:	jmp    0x4ce4ae21
  41bcb6:	jge    0x41bc4e
  41bcb8:	push   0xb9e7cc0c
  41bcbd:	in     al,dx
  41bcbe:	call   0xc831:0x4624a47a
  41bcc5:	add    DWORD PTR [ebx+0x35fceb16],0x4f
  41bccc:	xor    al,0xdc
  41bcce:	setns  BYTE PTR [eax+esi*1+0x3d]
  41bcd3:	push   ebp
  41bcd4:	cmp    BYTE PTR [ecx+0x2f3eb79f],ch
  41bcda:	or     al,0x3b
  41bcdc:	(bad)
  41bce1:	int    0x3
  41bce3:	and    BYTE PTR [esi+ecx*4+0x661a42aa],bh
  41bcea:	push   es
  41bceb:	cwde   
  41bcec:	data16 xchg BYTE PTR ds:0xd94ab01c,ah
  41bcf3:	mov    ebx,0x455fca0b
  41bcf8:	retf   0xe1ab
  41bcfb:	add    BYTE PTR [edx+0x89aabfb],cl
  41bd01:	sub    al,BYTE PTR [esi+0x56bde6a6]
  41bd07:	cmc    
  41bd08:	pop    ebx
  41bd09:	shr    bl,1
  41bd0b:	ds call 0x50a3b790
  41bd11:	jbe    0x41bd58
  41bd13:	sbb    bl,cl
  41bd15:	fnsave [edi-0x1b593fca]
  41bd1b:	mov    cl,0x81
  41bd1d:	outs   dx,BYTE PTR ds:[esi]
  41bd1e:	jge    0x41bd4d
  41bd20:	mov    esi,edx
  41bd22:	pop    edi
  41bd23:	not    DWORD PTR [esi+ecx*8-0x4d]
  41bd27:	aaa    
  41bd28:	mov    ecx,0x2e8cecae
  41bd2d:	inc    ecx
  41bd2e:	sbb    eax,0x740f7308
  41bd33:	pop    es
  41bd34:	jb     0x41bd4c
  41bd36:	jo     0x41bd52
  41bd38:	in     eax,dx
  41bd39:	mov    eax,ds:0xcc1cb864
  41bd3e:	sub    esp,DWORD PTR [edx+eax*4-0x7b8019c3]
  41bd45:	xchg   ebp,eax
  41bd46:	mov    esi,ecx
  41bd48:	mov    ah,0xbe
  41bd4a:	jl     0x41bda2
  41bd4c:	mov    ch,0xff
  41bd4e:	xor    bh,cl
  41bd50:	dec    ebx
  41bd51:	aam    0x7f
  41bd53:	inc    esp
  41bd54:	sar    DWORD PTR [edi+0x26],1
  41bd57:	lods   al,BYTE PTR ds:[esi]
  41bd58:	aas    
  41bd59:	mov    ah,0x30
  41bd5b:	pop    esi
  41bd5c:	test   BYTE PTR [ebx-0x6a],0x6
  41bd60:	btc    DWORD PTR [edx-0x2],edx
  41bd64:	or     al,0x60
  41bd66:	(bad)  
  41bd67:	push   ecx
  41bd68:	pop    ss
  41bd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd6a:	stos   BYTE PTR es:[edi],al
  41bd6b:	cmp    ebp,eax
  41bd6d:	imul   esi,DWORD PTR [ebp+esi*1-0x28e59e50],0x290d6f5a
  41bd78:	or     BYTE PTR [edx+0x6f],dh
  41bd7b:	adc    DWORD PTR [ebx],esp
  41bd7d:	(bad)  
  41bd7e:	fmul   st,st(6)
  41bd80:	fdiv   st(7),st
  41bd82:	add    edi,DWORD PTR [ebx]
  41bd84:	mov    al,ds:0x8b575a9b
  41bd89:	dec    ebp
  41bd8a:	or     cl,ch
  41bd8c:	xor    BYTE PTR [edx],al
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffff97
  41bd9d:	lock imul DWORD PTR [ebx]
  41bda0:	mov    al,ds:0x10787fea
  41bda5:	jle    0x41be1f
  41bda7:	js     0x41bdbc
  41bda9:	mov    ds:0x2236d62e,eax
  41bdae:	mov    cl,0xd8
  41bdb0:	pop    edi
  41bdb1:	pop    ebp
  41bdb2:	xchg   ebp,eax
  41bdb3:	clc    
  41bdb4:	jmp    0xfc1c3fa3
  41bdb9:	xor    esp,DWORD PTR [ecx-0x49]
  41bdbc:	cmp    bh,BYTE PTR [ebx-0x4d]
  41bdbf:	xor    BYTE PTR [esi+0x34],ch
  41bdc2:	cmp    dl,BYTE PTR [ebx+esi*8+0x64]
  41bdc6:	jmp    0xf75dc0e3
  41bdcb:	xor    DWORD PTR [edx],ebp
  41bdcd:	sbb    al,0xdb
  41bdcf:	(bad)  
  41bdd0:	sub    BYTE PTR [ebp+edx*4-0x6a7ccb2f],al
  41bdd7:	adc    BYTE PTR [esi-0x26],bl
  41bdda:	pop    esi
  41bddb:	pop    ecx
  41bddc:	pusha  
  41bddd:	mov    ?,WORD PTR ds:0xa0523c96
  41bde3:	(bad)  
  41bde4:	jle    0x41be40
  41bde6:	mov    edx,0x2918a33b
  41bdeb:	cmp    BYTE PTR [eax-0x3],al
  41bdee:	xchg   BYTE PTR [ebx],ah
  41bdf0:	jmp    0x41be4f
  41bdf2:	inc    BYTE PTR [edx]
  41bdf4:	loope  0x41bd90
  41bdf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdf7:	mov    BYTE PTR [esi+0x538d1bb5],ah
  41bdfd:	nop
  41bdfe:	dec    esi
  41bdff:	jbe    0x41be1e
  41be01:	pop    ebp
  41be02:	inc    BYTE PTR ds:0x569c6bde
  41be08:	in     al,0x2e
  41be0a:	xchg   ebp,eax
  41be0b:	shl    BYTE PTR [eax+0xd],1
  41be0e:	outs   dx,DWORD PTR ds:[esi]
  41be0f:	mov    ecx,0xdfc45f32
  41be14:	cli    
  41be15:	jno    0x41be24
  41be17:	sbb    edx,edi
  41be19:	jb     0x41bda0
  41be1b:	popa   
  41be1c:	sub    edx,DWORD PTR [esi+0x51]
  41be1f:	push   0x18
  41be21:	push   ss
  41be22:	rcr    BYTE PTR [esi+eiz*8+0x2a],0x0
  41be27:	repz cmp al,0x1d
  41be2a:	xor    dh,BYTE PTR [edi+0x4b]
  41be2d:	lea    ebp,cs:[esi+0x4f]
  41be31:	stos   BYTE PTR es:[edi],al
  41be32:	mov    WORD PTR [ebx+0x383b7314],fs
  41be38:	gs es push es
  41be3b:	nop
  41be3c:	lock pop ds
  41be3e:	mov    eax,0x62f0e151
  41be43:	cmp    BYTE PTR [eax+0x2],cl
  41be46:	data16 sti 
  41be48:	nop
  41be49:	lods   eax,DWORD PTR ds:[esi]
  41be4a:	ret    
  41be4b:	mov    ah,0xa
  41be4d:	mov    al,ds:0x35f2af1d
  41be52:	cmp    bl,BYTE PTR [edi+edi*2-0x26]
  41be56:	scas   al,BYTE PTR es:[edi]
  41be57:	fisub  WORD PTR [ebx+0x7c]
  41be5a:	mov    ds:0xd1482ede,al
  41be5f:	pusha  
  41be60:	sub    eax,0x706a5efc
  41be65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be66:	mov    ebp,0x8b9eeaa0
  41be6b:	les    esi,FWORD PTR [ebx+0xb325f93]
  41be71:	inc    esp
  41be72:	mov    cl,0xe
  41be74:	push   ebp
  41be75:	ins    BYTE PTR es:[edi],dx
  41be76:	outs   dx,DWORD PTR ds:[esi]
  41be77:	imul   edi,DWORD PTR [esi-0x22],0x11df217f
  41be7e:	push   es
  41be7f:	test   al,0x4d
  41be81:	gs push 0xffffffed
  41be84:	push   ecx
  41be85:	and    al,0xba
  41be87:	pop    esp
  41be88:	dec    edx
  41be89:	pop    edx
  41be8a:	cmp    ebx,ebx
  41be8c:	and    DWORD PTR [ebx-0x3f5b3ef0],edi
  41be92:	mov    ?,WORD PTR [ebx]
  41be94:	cmp    ebp,DWORD PTR [edi-0xb]
  41be97:	stos   BYTE PTR es:[edi],al
  41be98:	aam    0x9b
  41be9a:	lock xor bh,BYTE PTR [edi]
  41be9d:	outs   dx,DWORD PTR ds:[esi]
  41be9e:	cld    
  41be9f:	sbb    eax,eax
  41bea1:	sbb    DWORD PTR [eax-0x4f0ec4ad],esi
  41bea7:	push   esp
  41bea8:	pop    esp
  41bea9:	pop    ebx
  41beaa:	test   al,0x9b
  41beac:	add    al,0xfe
  41beae:	mov    bl,0xf1
  41beb0:	or     ecx,DWORD PTR [edx+0x6cb30cc4]
  41beb6:	push   0xffffff90
  41beb8:	enter  0x29de,0x80
  41bebc:	push   esp
  41bebd:	inc    esp
  41bebe:	sti    
  41bebf:	add    BYTE PTR [eax],dl
  41bec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bec2:	jg     0x41bef2
  41bec4:	adc    ebx,eax
  41bec6:	lods   eax,DWORD PTR ds:[esi]
  41bec7:	add    al,0x17
  41bec9:	jle    0x41be5c
  41becb:	fistp  WORD PTR ds:0x7c0c6b01
  41bed1:	jo     0x41bebf
  41bed3:	mov    cl,0x50
  41bed5:	data16 mov fs,WORD PTR [esi+0x59f35d6]
  41bedc:	adc    al,0xbd
  41bede:	inc    edi
  41bedf:	out    0xbc,al
  41bee1:	cdq    
  41bee2:	jns    0x41bf2b
  41bee4:	cmp    edx,DWORD PTR [ebx-0x53]
  41bee7:	pop    ss
  41bee8:	xchg   esp,eax
  41bee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beea:	mov    WORD PTR [edi],es
  41beec:	in     al,0x84
  41beee:	mov    esp,0xe491eb43
  41bef3:	sub    bl,BYTE PTR [eax]
  41bef5:	sbb    eax,0xb479d95f
  41befa:	loope  0x41bee9
  41befc:	rol    BYTE PTR [ebx+0x6c],cl
  41beff:	xlat   BYTE PTR ds:[ebx]
  41bf00:	iret   
  41bf01:	jmp    0xc56f:0x6fe3f6c4
  41bf08:	div    BYTE PTR [ebx-0xe9c8482]
  41bf0e:	(bad)
  41bf11:	or     al,0x74
  41bf13:	inc    ebx
  41bf14:	mov    al,0xb7
  41bf16:	imul   edx,ecx,0x25
  41bf19:	retf   
  41bf1a:	lods   eax,DWORD PTR ds:[esi]
  41bf1b:	cdq    
  41bf1c:	sub    dh,ah
  41bf1e:	cmc    
  41bf1f:	test   BYTE PTR [ebp+edx*1-0xe76be67],cl
  41bf26:	std    
  41bf27:	push   eax
  41bf28:	ss int 0x50
  41bf2b:	pusha  
  41bf2c:	cmc    
  41bf2d:	jo     0x41bebf
  41bf2f:	inc    ecx
  41bf30:	add    DWORD PTR [edx-0x29d47e96],esp
  41bf36:	js     0x41bec7
  41bf38:	lds    eax,FWORD PTR [eax]
  41bf3a:	pop    ecx
  41bf3b:	enter  0xb824,0x90
  41bf3f:	out    dx,eax
  41bf40:	cmp    al,0xb5
  41bf42:	mov    ah,0xa4
  41bf44:	xor    ch,BYTE PTR [edx-0x4f]
  41bf47:	ret    
  41bf48:	or     ebp,DWORD PTR [esi]
  41bf4a:	test   DWORD PTR [edx+0x20581e67],edi
  41bf50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf51:	frstor [esi+0x4c3ec748]
  41bf57:	pop    edx
  41bf58:	mov    al,0x6e
  41bf5a:	sub    al,0xc5
  41bf5c:	scas   eax,DWORD PTR es:[edi]
  41bf5d:	ret    0xb48b
  41bf60:	shl    BYTE PTR [ebp+0x67],0xeb
  41bf64:	out    0xf4,al
  41bf66:	inc    esp
  41bf67:	js     0x41bf50
  41bf69:	lock push es
  41bf6b:	out    0x5a,eax
  41bf6d:	and    eax,0xe7bf813c
  41bf72:	das    
  41bf73:	cli    
  41bf74:	das    
  41bf75:	sbb    edi,eax
  41bf77:	dec    esi
  41bf78:	sbb    BYTE PTR [eax+0x6a],ch
  41bf7b:	inc    eax
  41bf7c:	xchg   ebx,eax
  41bf7d:	pop    ecx
  41bf7e:	jmp    0x3d832ffb
  41bf83:	bound  edi,QWORD PTR [esi+eiz*4+0x7f]
  41bf87:	icebp  
  41bf88:	(bad)  
  41bf8b:	vmwrite esi,ecx
  41bf8e:	repnz adc DWORD PTR ds:0x25fe34f5,esi
  41bf95:	test   DWORD PTR [edx+esi*1+0x3c],edx
  41bf99:	mov    ds:0x7f784ab3,eax
  41bf9e:	(bad)  [eax+0x618bb4dc]
  41bfa4:	aas    
  41bfa5:	bound  edx,QWORD PTR [ebx-0x744d6948]
  41bfab:	cmc    
  41bfac:	push   edx
  41bfad:	push   eax
  41bfae:	out    0x4d,eax
  41bfb0:	das    
  41bfb1:	inc    dl
  41bfb3:	retf   
  41bfb4:	test   DWORD PTR [edx],esi
  41bfb6:	and    al,0x91
  41bfb8:	jge    0x41bf71
  41bfba:	pop    ebp
  41bfbb:	in     eax,0x4e
  41bfbd:	in     al,0x6d
  41bfbf:	ins    DWORD PTR es:[edi],dx
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	inc    edi
  41bff0:	jo     0x41c016
  41bff2:	xchg   DWORD PTR [eax+0x10787fe8],edi
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c003
  41bffc:	push   cs
  41bffd:	mov    edx,0x1f5f4a85
  41c002:	and    eax,0xeac96546
  41c007:	sub    ebp,DWORD PTR [edi]
  41c009:	and    dl,BYTE PTR [esi]
  41c00b:	(bad)  
  41c00c:	lock fdiv DWORD PTR [ebp-0x3d39bfb1]
  41c013:	call   0xe123:0x487bba5b
  41c01a:	dec    esi
  41c01b:	mov    bh,0x7a
  41c01d:	add    cl,BYTE PTR [edi-0x6e50c7e]
  41c023:	mov    dh,BYTE PTR [edx]
  41c025:	xor    ecx,0xc5334303
  41c02b:	xor    DWORD PTR [edx+0x4e],eax
  41c02e:	pushf  
  41c02f:	sub    esi,DWORD PTR [ecx+0x3b]
  41c032:	call   0x55b8:0xf2b85c6f
  41c039:	fs out dx,al
  41c03b:	sbb    DWORD PTR [ebp+0x4b58aa0a],eax
  41c041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c043:	test   DWORD PTR [edi-0xd0d65bf],esp
  41c049:	and    eax,edi
  41c04b:	pop    ecx
  41c04c:	or     al,BYTE PTR [edx+eiz*8+0x4c]
  41c050:	push   edi
  41c051:	in     eax,dx
  41c052:	popa   
  41c053:	add    eax,0xe1017116
  41c058:	pop    esi
  41c059:	pusha  
  41c05a:	add    ecx,DWORD PTR [edx+0x7d28d06f]
  41c060:	inc    edi
  41c061:	jne    0x41c075
  41c063:	inc    esp
  41c064:	sbb    DWORD PTR [eax-0x5103da06],eax
  41c06a:	or     eax,0x82c373f8
  41c06f:	add    ebp,0x2159d212
  41c075:	cmp    dl,BYTE PTR [edx-0x7a]
  41c078:	inc    esi
  41c079:	popf   
  41c07a:	xchg   esi,eax
  41c07b:	ds cmp bl,0x1
  41c07f:	ror    dh,cl
  41c081:	mov    bl,0x5a
  41c083:	mov    eax,0x2fd0458b
  41c088:	jb     0x41c072
  41c08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08b:	sbb    eax,0x63c58210
  41c090:	sar    BYTE PTR [ecx],0x96
  41c093:	aam    0xf7
  41c095:	ins    BYTE PTR es:[edi],dx
  41c096:	push   0x7340ad7a
  41c09b:	mov    ebx,DWORD PTR [edi+0x18]
  41c09e:	mov    dh,0xed
  41c0a0:	int    0xbd
  41c0a2:	aaa    
  41c0a3:	fild   QWORD PTR [edx+0x77cf113c]
  41c0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0aa:	scas   eax,DWORD PTR es:[edi]
  41c0ab:	and    edx,DWORD PTR [eax]
  41c0ad:	mov    ds:0x691f26ef,al
  41c0b2:	(bad)  
  41c0b3:	xchg   ecx,eax
  41c0b4:	jl     0x41c103
  41c0b6:	jnp    0x41c05e
  41c0b8:	test   BYTE PTR [ebx+0x2a],ch
  41c0bb:	ins    DWORD PTR es:[di],dx
  41c0bd:	jnp    0x41c061
  41c0bf:	lahf   
  41c0c0:	pop    edx
  41c0c1:	js     0x41c07a
  41c0c3:	std    
  41c0c4:	neg    BYTE PTR [ecx+edi*2]
  41c0c7:	xchg   ebx,eax
  41c0c8:	sub    al,0x1
  41c0ca:	call   0x5f56ff3d
  41c0cf:	xchg   edi,eax
  41c0d0:	sahf   
  41c0d1:	jns    0x41c087
  41c0d3:	sbb    bl,BYTE PTR [ecx+0x6b]
  41c0d6:	add    DWORD PTR [edi-0x4660c586],edi
  41c0dc:	and    BYTE PTR [edx],al
  41c0de:	push   edi
  41c0df:	and    ah,BYTE PTR [edi-0x5a50d1c1]
  41c0e5:	jg     0x41c0a0
  41c0e7:	rcr    DWORD PTR [esi+0x2],0xd
  41c0eb:	dec    ebx
  41c0ec:	add    BYTE PTR [ebx],ch
  41c0ee:	shl    bh,1
  41c0f0:	test   BYTE PTR [eax+0x78],dh
  41c0f3:	pop    eax
  41c0f4:	int3   
  41c0f5:	fisubr WORD PTR [ebx-0x4599986b]
  41c0fb:	scas   al,BYTE PTR es:[edi]
  41c0fc:	out    0xea,al
  41c0fe:	jbe    0x41c10a
  41c100:	scas   al,BYTE PTR es:[edi]
  41c101:	int3   
  41c102:	jnp    0x41c12e
  41c104:	popa   
  41c105:	adc    eax,0xbab2b6bf
  41c10a:	mov    ah,0x6e
  41c10c:	daa    
  41c10d:	push   ds
  41c10e:	les    esp,FWORD PTR [ecx+0x45]
  41c111:	lock sqrtps xmm7,XMMWORD PTR [ebx+0x56]
  41c116:	xor    DWORD PTR [ecx],esp
  41c118:	loop   0x41c167
  41c11a:	test   DWORD PTR [eax-0x3503f260],ebp
  41c120:	xchg   esp,edx
  41c122:	jne    0x41c0e1
  41c124:	jp     0x41c153
  41c126:	int    0x78
  41c128:	fimul  DWORD PTR [ebx+eiz*1]
  41c12b:	fwait
  41c12c:	mov    gs,WORD PTR [ebx+edx*1-0x2e99a62a]
  41c133:	loop   0x41c12d
  41c135:	push   edi
  41c136:	xor    eax,0x98479e9d
  41c13b:	mov    esi,0x754c8308
  41c140:	shl    DWORD PTR [esi+0x533056aa],1
  41c146:	cli    
  41c147:	shr    bl,cl
  41c149:	pusha  
  41c14a:	inc    ecx
  41c14b:	dec    edx
  41c14c:	(bad)  
  41c14d:	es jle 0x41c17e
  41c150:	mov    ah,0xd1
  41c152:	out    0x24,al
  41c154:	jp     0x41c18e
  41c156:	retf   
  41c157:	add    ebx,DWORD PTR [edx]
  41c159:	scas   al,BYTE PTR es:[edi]
  41c15a:	stos   BYTE PTR es:[edi],al
  41c15b:	ss repz je 0x41c111
  41c15f:	fst    st(5)
  41c161:	xchg   ebx,eax
  41c162:	add    eax,0xcfbf1084
  41c167:	jae    0x41c1d1
  41c169:	mov    esp,0x63fe7075
  41c16e:	pop    edi
  41c16f:	sub    DWORD PTR [edx-0x4b],ebx
  41c172:	mov    al,ds:0x60e93111
  41c177:	aas    
  41c178:	add    ah,BYTE PTR [ecx+0x22efac69]
  41c17e:	out    dx,al
  41c17f:	xor    BYTE PTR [edi+0x74],cl
  41c182:	hlt    
  41c183:	adc    eax,0xdf42b714
  41c188:	(bad)  
  41c189:	mov    ecx,0x491aa876
  41c18e:	out    0x7a,eax
  41c190:	sti    
  41c191:	out    0x8f,al
  41c193:	push   ebx
  41c194:	mov    ebx,0xdbb73edf
  41c199:	arpl   WORD PTR [esi-0x603f67fd],cx
  41c19f:	jo     0x41c1a0
  41c1a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a3:	je     0x41c13b
  41c1a5:	mov    cl,0x25
  41c1a7:	jg     0x41c13c
  41c1a9:	hlt    
  41c1aa:	leave  
  41c1ab:	clc    
  41c1ac:	sub    eax,0xa4081f83
  41c1b1:	xchg   edi,eax
  41c1b2:	arpl   WORD PTR [ebx+0x9],di
  41c1b5:	xor    al,0x4c
  41c1b7:	mov    bh,0xd4
  41c1b9:	(bad)  
  41c1ba:	aam    0x4d
  41c1bc:	push   ss
  41c1bd:	xchg   BYTE PTR [esi+0x3c3c42cf],al
  41c1c3:	(bad)  
  41c1c4:	cmp    eax,0x15f6a4ee
  41c1c9:	stos   DWORD PTR es:[edi],eax
  41c1ca:	daa    
  41c1cb:	jo     0x41c15b
  41c1cd:	push   ss
  41c1ce:	sbb    dl,ah
  41c1d0:	add    DWORD PTR [eax+0x5a],ebp
  41c1d3:	in     eax,0x38
  41c1d5:	or     al,0x74
  41c1d7:	loop   0x41c229
  41c1d9:	dec    esp
  41c1da:	(bad)  
  41c1db:	ficomp WORD PTR [ecx]
  41c1dd:	push   ebp
  41c1de:	dec    ecx
  41c1df:	cdq    
  41c1e0:	rcl    DWORD PTR [ebx],cl
  41c1e2:	sub    ch,BYTE PTR [ebx+ebp*1+0x5ec52279]
  41c1e9:	sti    
  41c1ea:	adc    DWORD PTR [edi],ecx
  41c1ec:	dec    ebx
  41c1ed:	and    al,0x25
  41c1ef:	stos   DWORD PTR es:[edi],eax
  41c1f0:	or     esp,ecx
  41c1f2:	inc    ecx
  41c1f3:	in     eax,0x91
  41c1f5:	ds cmp dl,dl
  41c1f8:	es sbb al,0x9e
  41c1fb:	jnp    0x41c253
  41c1fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1fe:	loopne 0x41c277
  41c200:	lea    edx,[edi-0x36779067]
  41c206:	jns    0x41c20c
  41c208:	repnz pop eax
  41c20a:	sbb    DWORD PTR [edx+0x55dcb0ca],esp
  41c210:	dec    esi
  41c211:	and    bh,cl
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	mov    dl,0x1b
  41c22d:	jge    0x41c1db
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c294
  41c238:	add    esp,DWORD PTR [edi+0x7d]
  41c23b:	ret    
  41c23c:	pop    edx
  41c23d:	mul    BYTE PTR ds:0xbf82130a
  41c243:	mov    ds:0x3201b84,al
  41c248:	mov    dh,0x44
  41c24a:	leave  
  41c24b:	jge    0x41c29c
  41c24d:	push   ecx
  41c24e:	fnstcw WORD PTR [esi]
  41c250:	dec    ecx
  41c251:	bts    DWORD PTR [ebx+ebx*8+0x46e5ff27],edx
  41c259:	loop   0x41c1fd
  41c25b:	ja     0x41c206
  41c25d:	adc    eax,0xee956002
  41c262:	xor    DWORD PTR [ebx],esi
  41c264:	outs   dx,BYTE PTR ds:[esi]
  41c265:	in     eax,0x7
  41c267:	adc    eax,DWORD PTR [edx+ebp*1-0x64eaaa99]
  41c26e:	sub    BYTE PTR [ebp+0x6df6868d],0xaf
  41c275:	mul    BYTE PTR [ebx+0x4e6b3732]
  41c27b:	ins    BYTE PTR es:[edi],dx
  41c27c:	(bad)  
  41c27d:	jl     0x41c2f7
  41c27f:	ds icebp 
  41c281:	jmp    0xebc9:0x8069436a
  41c288:	addr16 dec edx
  41c28a:	mov    ch,0xb0
  41c28c:	pop    esi
  41c28d:	retf   0xbf15
  41c290:	add    al,0x5
  41c292:	ins    DWORD PTR es:[edi],dx
  41c293:	mov    cl,0xd2
  41c295:	cmp    bh,al
  41c297:	cld    
  41c298:	adc    al,0x3b
  41c29a:	mov    ebx,0x3c335677
  41c29f:	jl     0x41c240
  41c2a1:	or     bl,bh
  41c2a3:	(bad)
  41c2a6:	pop    esp
  41c2a7:	leave  
  41c2a8:	xchg   DWORD PTR [edx-0x733280e9],edx
  41c2ae:	(bad)  
  41c2af:	rol    DWORD PTR [eax+esi*8+0x5107bda4],cl
  41c2b6:	jns    0x41c2e1
  41c2b8:	mov    ds:0xfd9f320d,eax
  41c2bd:	dec    edi
  41c2be:	sti    
  41c2bf:	pop    eax
  41c2c0:	(bad)  [ebx+0x2c]
  41c2c3:	arpl   si,bp
  41c2c5:	jl     0x41c285
  41c2c7:	push   edi
  41c2c8:	lock loop 0x41c311
  41c2cb:	inc    eax
  41c2cc:	and    DWORD PTR [ecx+0x3fa5a214],0x6b
  41c2d3:	ds arpl bx,si
  41c2d6:	mov    bh,ch
  41c2d8:	lods   eax,DWORD PTR ds:[esi]
  41c2d9:	xor    eax,0x573130c9
  41c2de:	xchg   ebp,eax
  41c2df:	jns    0x41c32b
  41c2e1:	call   0x38b3:0x961e9ff4
  41c2e8:	addr16 jbe 0x41c2f5
  41c2eb:	call   DWORD PTR [ebp+0x359b679b]
  41c2f1:	or     BYTE PTR [edx],ah
  41c2f3:	jl     0x41c2d9
  41c2f5:	adc    edi,DWORD PTR [edx+ecx*1]
  41c2f8:	and    al,0x23
  41c2fa:	loope  0x41c27e
  41c2fc:	or     al,0xd0
  41c2fe:	and    eax,edi
  41c300:	test   BYTE PTR [ebx-0x33],dh
  41c303:	das    
  41c304:	inc    ebx
  41c305:	mov    ah,0xe7
  41c307:	in     eax,0x20
  41c309:	mov    ecx,0x582b5bd3
  41c30e:	jb     0x41c375
  41c310:	call   0xf058d9ec
  41c315:	push   0xffffffe1
  41c317:	xor    al,0xd3
  41c319:	sub    al,0xae
  41c31b:	adc    eax,0x19387b57
  41c320:	jb     0x41c2a5
  41c322:	in     eax,0x4b
  41c324:	xchg   esi,eax
  41c325:	push   esi
  41c326:	imul   ebx,DWORD PTR [eax+0x48111024],0x1eec6777
  41c330:	mov    edi,0x9ce491f8
  41c335:	mov    ds:0x5fd9d712,eax
  41c33a:	push   esp
  41c33b:	inc    esi
  41c33c:	std    
  41c33d:	inc    ecx
  41c33e:	sahf   
  41c33f:	icebp  
  41c340:	xchg   ecx,eax
  41c341:	mov    esi,0xab686e3c
  41c346:	adc    cl,BYTE PTR [ecx]
  41c348:	stos   DWORD PTR es:[edi],eax
  41c349:	shl    DWORD PTR [eax+0x3a],0xcd
  41c34d:	cmp    ch,BYTE PTR [ebp+0x6]
  41c350:	cdq    
  41c351:	inc    esp
  41c352:	xchg   edi,eax
  41c353:	sbb    ebx,eax
  41c355:	pop    ss
  41c356:	bound  esi,QWORD PTR [edi+0x79]
  41c359:	je     0x41c334
  41c35b:	rcl    dh,0x46
  41c35e:	mov    cl,0x3f
  41c360:	shr    DWORD PTR [edi],cl
  41c362:	repz and ecx,ebp
  41c365:	and    bh,BYTE PTR [ebx+ebp*8+0x36be1b62]
  41c36c:	cmp    BYTE PTR [ecx-0x3d],dl
  41c36f:	mov    ecx,ebp
  41c371:	mov    ch,BYTE PTR [eax]
  41c373:	retf   0xc715
  41c376:	pusha  
  41c377:	test   al,0x16
  41c379:	or     ah,BYTE PTR [edi-0x32eb4820]
  41c37f:	xchg   edi,eax
  41c380:	cmova  eax,DWORD PTR [ecx]
  41c383:	cs (bad) 
  41c385:	mov    WORD PTR [ecx+0x2d],ss
  41c388:	cld    
  41c389:	sar    BYTE PTR [edx+0x4d481e2c],0x2d
  41c390:	(bad)  
  41c391:	inc    BYTE PTR fs:[esi]
  41c394:	mov    edi,edi
  41c396:	cpuid  
  41c398:	into   
  41c399:	das    
  41c39a:	jecxz  0x41c3ec
  41c39c:	repnz aam 0xb9
  41c39f:	aaa    
  41c3a0:	(bad)  
  41c3a1:	adc    eax,0x7ba8af7
  41c3a6:	rcr    DWORD PTR [edx+0x6dabfd8f],cl
  41c3ac:	cmp    eax,DWORD PTR [ebp-0x8ac263]
  41c3b2:	or     eax,0xe518099c
  41c3b7:	out    dx,al
  41c3b8:	and    al,BYTE PTR [eax]
  41c3ba:	cmp    BYTE PTR [ebp-0xc],cl
  41c3bd:	cwde   
  41c3be:	aas    
  41c3bf:	mov    ebp,0x1d1a7be2
  41c3c4:	in     eax,0x26
  41c3c6:	jmp    0x41c43b
  41c3c8:	inc    ebp
  41c3c9:	lods   al,BYTE PTR ds:[esi]
  41c3ca:	mov    eax,0xf577c51c
  41c3cf:	(bad)  
  41c3d0:	fstp   DWORD PTR [ebx-0x41]
  41c3d3:	inc    edx
  41c3d4:	jmp    0x41c43b
  41c3d6:	sub    al,0x9a
  41c3d8:	ds into 
  41c3da:	xchg   ecx,eax
  41c3db:	xchg   ebp,eax
  41c3dc:	cmp    DWORD PTR [ecx-0x76],ebx
  41c3df:	mov    ds:0x6b97f046,al
  41c3e4:	fsubp  st(3),st
  41c3e6:	out    0xd0,al
  41c3e8:	mov    dl,0x35
  41c3ea:	and    ecx,0x83bb9a26
  41c3f0:	fcmovnbe st,st(0)
  41c3f2:	arpl   WORD PTR ds:0xe29a0fb3,sp
  41c3f8:	aad    0x9d
  41c3fa:	jg     0x41c44b
  41c3fc:	sbb    eax,0x7ae5aa14
  41c401:	iret   
  41c402:	sbb    eax,0xbfe47156
  41c407:	call   DWORD PTR [ecx-0x63ea474f]
  41c40d:	xchg   esi,eax
  41c40e:	mov    ecx,DWORD PTR [ecx]
  41c410:	call   0xf53e79c5
  41c415:	and    cl,dh
  41c417:	in     al,0x66
  41c419:	mov    es,esp
  41c41b:	into   
  41c41c:	test   BYTE PTR [edx-0x1f5c52a9],0x89
  41c423:	jbe    0x41c463
  41c425:	arpl   di,ax
  41c427:	jb     0x41c4a1
  41c429:	loop   0x41c3ff
  41c42b:	mov    ds:0x6f21b16e,eax
  41c430:	lods   eax,DWORD PTR ds:[esi]
  41c431:	repz or ebx,edi
  41c434:	push   es
  41c435:	stos   BYTE PTR es:[edi],al
  41c436:	mov    eax,0xfc0e51aa
  41c43b:	in     al,0xe1
  41c43d:	jg     0x41c418
  41c43f:	inc    edx
  41c440:	test   BYTE PTR [edx-0x49],bh
  41c443:	dec    ecx
  41c444:	sbb    ch,dl
  41c446:	jb     0x41c3e7
  41c448:	shr    BYTE PTR [edi],0xce
  41c44b:	ss test ch,0x83
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c426
  41c464:	call   0x787f:0xec6844fc
  41c46b:	adc    BYTE PTR [esi+0x78],bh
  41c46e:	js     0x41c4bc
  41c470:	js     0x41c429
  41c472:	stos   BYTE PTR es:[edi],al
  41c473:	dec    edx
  41c474:	inc    esp
  41c475:	or     DWORD PTR [eax+0x6f],edi
  41c478:	mov    ds:0x8bf72d16,al
  41c47d:	retf   0x88f0
  41c480:	repnz enter 0x9c6d,0x96
  41c485:	mov    al,0xfe
  41c487:	jno    0x41c4b7
  41c489:	loop   0x41c43c
  41c48b:	and    DWORD PTR [ebx+0x70],eax
  41c48e:	popf   
  41c48f:	arpl   WORD PTR [ebp+edi*2+0x75c06acc],si
  41c496:	loopne 0x41c4a4
  41c498:	pop    esi
  41c499:	enter  0x9371,0x82
  41c49d:	add    al,0xcb
  41c49f:	push   ecx
  41c4a0:	sbb    dh,ah
  41c4a2:	add    eax,0xb3234a19
  41c4a7:	push   es
  41c4a8:	sbb    eax,0x5b344321
  41c4ad:	stos   DWORD PTR es:[edi],eax
  41c4ae:	stos   DWORD PTR es:[edi],eax
  41c4af:	inc    esp
  41c4b0:	shl    DWORD PTR ds:0xd5ba881c,1
  41c4b6:	ds add eax,0xdab95da1
  41c4bc:	test   al,0x12
  41c4be:	cmp    ebx,DWORD PTR [eax]
  41c4c0:	add    cl,BYTE PTR [ebp+0x4c]
  41c4c3:	or     al,0xd4
  41c4c5:	pusha  
  41c4c6:	and    DWORD PTR ds:0xa430afcc,esp
  41c4cc:	gs mov al,0x4e
  41c4cf:	dec    esp
  41c4d0:	cli    
  41c4d1:	stos   DWORD PTR es:[edi],eax
  41c4d2:	xor    al,0x9f
  41c4d4:	jg     0x41c46b
  41c4d6:	and    eax,0xf3d5c41b
  41c4db:	mov    fs,WORD PTR [edx+0x40a291cb]
  41c4e1:	or     dl,bl
  41c4e3:	arpl   cx,cx
  41c4e5:	add    ebx,DWORD PTR [eax]
  41c4e7:	xchg   ebx,eax
  41c4e8:	jecxz  0x41c470
  41c4ea:	pop    ebx
  41c4eb:	sbb    al,0x3c
  41c4ed:	push   ebx
  41c4ee:	inc    edi
  41c4ef:	test   DWORD PTR [ecx-0x9],esp
  41c4f2:	test   eax,0xd36a6f12
  41c4f7:	cwde   
  41c4f8:	jmp    0x41c573
  41c4fa:	loope  0x41c480
  41c4fc:	fld    st(4)
  41c4fe:	mov    BYTE PTR [ecx-0x6f0e1e0b],0x43
  41c505:	push   eax
  41c506:	daa    
  41c507:	cmp    ebx,DWORD PTR [ecx]
  41c509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c50a:	inc    esi
  41c50b:	out    dx,eax
  41c50c:	lahf   
  41c50d:	ins    BYTE PTR es:[edi],dx
  41c50e:	or     al,0xc5
  41c510:	jbe    0x41c500
  41c512:	fdivr  DWORD PTR [esi]
  41c514:	push   cs
  41c515:	sbb    eax,0xfcc73b45
  41c51a:	loope  0x41c4be
  41c51c:	dec    ecx
  41c51d:	retf   0xe8c0
  41c520:	stos   DWORD PTR es:[edi],eax
  41c521:	push   edx
  41c522:	jp     0x41ec177e
  41c528:	addr16 inc eax
  41c52a:	adc    al,0xcb
  41c52c:	in     eax,dx
  41c52d:	test   BYTE PTR [ebp+esi*2-0x3c],0x50
  41c532:	jbe    0x41c523
  41c534:	aad    0x39
  41c536:	push   ebp
  41c537:	cli    
  41c538:	xchg   edi,eax
  41c539:	call   0x660e1a12
  41c53e:	daa    
  41c53f:	js     0x41c519
  41c541:	repz test eax,0xa608e588
  41c547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c548:	inc    ebx
  41c549:	mov    edi,DWORD PTR [ecx+0x61]
  41c54c:	rcr    BYTE PTR [edi],cl
  41c54e:	test   al,0x38
  41c550:	mov    bh,0xd7
  41c552:	and    bh,BYTE PTR [eax+0x63406fe9]
  41c558:	xchg   ecx,eax
  41c559:	mov    edx,0x8099a26a
  41c55e:	sbb    bh,dh
  41c560:	arpl   WORD PTR [edx-0x4e],dx
  41c563:	aaa    
  41c564:	push   ebx
  41c565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c566:	cmp    edx,DWORD PTR [esi-0x76]
  41c569:	pop    ebx
  41c56a:	(bad)  
  41c56b:	push   eax
  41c56c:	enter  0x8639,0xdf
  41c570:	(bad)  
  41c571:	(bad)  
  41c573:	xchg   BYTE PTR [ecx+0x68],bh
  41c576:	hlt    
  41c577:	fidivr WORD PTR [edi-0x1f]
  41c57a:	pop    edx
  41c57b:	out    dx,al
  41c57c:	lahf   
  41c57d:	and    BYTE PTR [edx],bh
  41c57f:	mov    ecx,0xed3b4e0a
  41c584:	push   esp
  41c585:	jmp    0xc832:0xd9118779
  41c58c:	icebp  
  41c58d:	call   0xb0e7b060
  41c592:	fxtract 
  41c594:	mov    DWORD PTR [edx],esi
  41c596:	data16 sub ch,BYTE PTR [esi-0x2a]
  41c59a:	mov    ?,ebp
  41c59c:	jb     0x41c53d
  41c59e:	add    esi,DWORD PTR [ebx]
  41c5a0:	xor    bh,0x4c
  41c5a3:	fist   DWORD PTR [eax-0x53]
  41c5a6:	jbe    0x41c611
  41c5a8:	outs   dx,DWORD PTR ds:[esi]
  41c5a9:	es push ds
  41c5ab:	mov    esi,DWORD PTR [eax]
  41c5ad:	add    al,0xdd
  41c5af:	clc    
  41c5b0:	inc    edx
  41c5b1:	fs cs dec edi
  41c5b4:	adc    DWORD PTR [eax],ecx
  41c5b6:	aam    0x87
  41c5b8:	mov    ds,WORD PTR [ecx]
  41c5ba:	stc    
  41c5bb:	xor    BYTE PTR [edx],dl
  41c5bd:	xchg   ecx,eax
  41c5be:	je     0x41c5a7
  41c5c0:	pop    eax
  41c5c1:	or     DWORD PTR [edx+0x3],esp
  41c5c4:	or     ecx,edi
  41c5c6:	retf   
  41c5c7:	rcr    DWORD PTR [ecx],cl
  41c5c9:	fwait
  41c5ca:	cmp    BYTE PTR [edi],0xde
  41c5cd:	(bad)  
  41c5ce:	push   edi
  41c5cf:	mov    bl,0x70
  41c5d1:	ret    0xd5ce
  41c5d4:	and    edx,DWORD PTR [eax]
  41c5d6:	aad    0x29
  41c5d8:	(bad)  
  41c5d9:	jae    0x41c592
  41c5db:	and    BYTE PTR [ebx],bl
  41c5dd:	cs mov edi,0x8fd24119
  41c5e3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e5:	rcr    esi,cl
  41c5e7:	or     ebp,DWORD PTR ds:0xa0037949
  41c5ed:	jge    0x41c5fc
  41c5ef:	scas   eax,DWORD PTR es:[edi]
  41c5f0:	inc    ebp
  41c5f1:	mov    esp,0x83848f85
  41c5f6:	dec    eax
  41c5f7:	jne    0x41c672
  41c5f9:	sub    DWORD PTR [edx-0xff0949f],esp
  41c5ff:	cmp    al,0x15
  41c601:	es fwait
  41c603:	nop
  41c604:	shl    DWORD PTR ds:0x1368d745,0xa6
  41c60b:	stc    
  41c60c:	out    0x55,al
  41c60e:	dec    eax
  41c60f:	iret   
  41c610:	lods   eax,DWORD PTR ds:[esi]
  41c611:	xchg   eax,ebx
  41c613:	xor    ebp,DWORD PTR [ecx-0x2e]
  41c616:	sbb    bl,0x12
  41c619:	ss mov esp,0x2e605d3d
  41c61f:	mov    esp,0x4bae75c0
  41c624:	cmp    ecx,eax
  41c626:	sbb    eax,0xcab7029
  41c62b:	ret    0x33df
  41c62e:	lea    esp,[ebp+0xcbede3b]
  41c634:	and    eax,0xf3bdea9e
  41c639:	scas   al,BYTE PTR es:[edi]
  41c63a:	jae    0x41c654
  41c63c:	adc    BYTE PTR [edx+0x5a9c91d2],al
  41c642:	fld    st(1)
  41c644:	sub    eax,0x2a1397d8
  41c649:	nop
  41c64a:	cs int3 
  41c64c:	out    0xc,al
  41c64e:	neg    DWORD PTR [eax+0x1f]
  41c651:	cmp    al,0x84
  41c653:	clc    
  41c654:	mov    eax,0xcd891966
  41c659:	cmp    al,0xb0
  41c65b:	xor    cl,ch
  41c65d:	mov    bl,0x5f
  41c65f:	test   DWORD PTR fs:[edi+0x1b],esi
  41c663:	push   ebp
  41c664:	lods   al,BYTE PTR ds:[esi]
  41c665:	inc    edx
  41c666:	in     al,0xf9
  41c668:	outs   dx,BYTE PTR ds:[esi]
  41c669:	sub    eax,0x41413ddd
  41c66e:	aas    
  41c66f:	enter  0x9f6f,0x14
  41c673:	loopne 0x41c601
  41c675:	in     eax,dx
  41c676:	popf   
  41c677:	mov    ch,BYTE PTR [ecx-0x15f1e50]
  41c67d:	test   DWORD PTR [edi+0x79],ebx
  41c680:	sbb    al,0xa1
  41c682:	jl     0x41c6af
  41c684:	pop    ecx
  41c685:	inc    ebp
  41c686:	adc    al,0x33
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0xd0d4773e,eax
  41c6cc:	adc    dh,BYTE PTR [ecx]
  41c6ce:	add    cl,dh
  41c6d0:	jg     0x41c74a
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c673
  41c6d7:	es in  al,dx
  41c6d9:	pop    esp
  41c6da:	adc    BYTE PTR [edx+ecx*1],bh
  41c6dd:	or     DWORD PTR [esp+edx*4],edi
  41c6e0:	push   ecx
  41c6e1:	daa    
  41c6e2:	clc    
  41c6e3:	jg     0x41c6c9
  41c6e5:	test   DWORD PTR [ebp-0x14],esi
  41c6e8:	int    0x7f
  41c6ea:	retf   
  41c6eb:	int3   
  41c6ec:	std    
  41c6ed:	jmp    0x1ca3b930
  41c6f2:	test   DWORD PTR [edi],ebp
  41c6f4:	cwde   
  41c6f5:	xchg   esi,eax
  41c6f6:	inc    ebp
  41c6f7:	retf   0xd52f
  41c6fa:	mov    bh,BYTE PTR [edx]
  41c6fc:	mov    bh,0x17
  41c6fe:	sbb    al,ah
  41c700:	sbb    al,0x5
  41c702:	iret   
  41c703:	sbb    eax,DWORD PTR [edi]
  41c705:	mov    BYTE PTR [ebx],ch
  41c707:	fisttp DWORD PTR [ebx]
  41c709:	out    0xa1,eax
  41c70b:	out    dx,al
  41c70c:	bswap  esi
  41c70e:	push   edi
  41c70f:	pop    esp
  41c710:	mov    ebx,0xce72cf45
  41c715:	and    DWORD PTR [ecx+0x5dad2ef7],0x4c
  41c71c:	push   ebx
  41c71d:	dec    edx
  41c71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71f:	jo     0x41c71c
  41c721:	lods   al,BYTE PTR ds:[esi]
  41c722:	and    BYTE PTR [ecx+0x5c],0xc9
  41c726:	push   0x5f298557
  41c72b:	mov    esi,0xd8759e3
  41c730:	add    BYTE PTR [ecx+0x2c1e7834],ah
  41c736:	sbb    BYTE PTR [edx],ch
  41c738:	cmp    al,0x30
  41c73a:	lock iret 
  41c73c:	dec    esi
  41c73d:	rcr    BYTE PTR [edi+eax*4],1
  41c740:	call   0xb3f77a8f
  41c745:	aad    0x95
  41c747:	push   0x34831325
  41c74c:	sbb    ebx,ecx
  41c74e:	push   ecx
  41c74f:	sub    BYTE PTR [esi],bl
  41c751:	pop    esi
  41c752:	jnp    0x41c7c3
  41c754:	pop    ebp
  41c755:	push   0xffffffe8
  41c757:	sub    DWORD PTR [esi-0x67],ebx
  41c75a:	imul   esp,DWORD PTR [eax],0x25
  41c75d:	mov    esp,ebp
  41c75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c760:	pop    ss
  41c761:	mov    WORD PTR [eax+eiz*1+0x3bd9fe],?
  41c768:	pushf  
  41c769:	pop    eax
  41c76a:	xor    BYTE PTR [edi],0xa1
  41c76d:	pop    es
  41c76e:	add    eax,0x7ee5cdbb
  41c773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c774:	cdq    
  41c775:	xor    DWORD PTR [esi],ebp
  41c777:	mov    edi,0xb239b9b7
  41c77c:	and    al,0x13
  41c77e:	dec    ebp
  41c77f:	xchg   edi,eax
  41c780:	jecxz  0x41c74e
  41c782:	(bad)  
  41c784:	call   0x6317c0b
  41c789:	retf   
  41c78a:	icebp  
  41c78b:	mov    ebp,0x138da964
  41c790:	repz pop esi
  41c792:	pop    ds
  41c793:	in     eax,dx
  41c794:	push   cs
  41c795:	or     al,BYTE PTR [esp+ecx*2+0x6abe780e]
  41c79c:	out    dx,al
  41c79d:	dec    ecx
  41c79e:	xchg   edx,eax
  41c79f:	jecxz  0x41c7ea
  41c7a1:	mov    esp,0x97911b24
  41c7a6:	xor    DWORD PTR [esi],0xffffffb2
  41c7a9:	xchg   esp,eax
  41c7aa:	cwde   
  41c7ab:	aas    
  41c7ac:	fdiv   DWORD PTR [eax-0x64]
  41c7af:	fidiv  DWORD PTR [ebx+0x4b07356a]
  41c7b5:	adc    ebx,eax
  41c7b7:	pop    es
  41c7b8:	fdiv   DWORD PTR [edi+0x1b]
  41c7bb:	fadd   st(6),st
  41c7bd:	rcl    DWORD PTR [edi-0x3d],1
  41c7c0:	push   ebp
  41c7c1:	mov    ebx,0x2da647cd
  41c7c6:	xchg   esp,eax
  41c7c7:	xchg   BYTE PTR [eax+0x57],bl
  41c7ca:	add    DWORD PTR [esi+0x7e],edi
  41c7cd:	xlat   BYTE PTR ds:[ebx]
  41c7ce:	daa    
  41c7cf:	repz aaa 
  41c7d1:	xlat   BYTE PTR ds:[ebx]
  41c7d2:	fs mov ch,0x4a
  41c7d5:	ins    BYTE PTR es:[edi],dx
  41c7d6:	je     0x41c849
  41c7d8:	(bad)  
  41c7d9:	cmc    
  41c7da:	in     al,0xff
  41c7dc:	mov    ds:0xb40390be,eax
  41c7e1:	jmp    0xc4fe:0xa11fe941
  41c7e8:	jae    0x41c774
  41c7ea:	hlt    
  41c7eb:	test   al,0x9d
  41c7ed:	shl    BYTE PTR [ebp-0x4eb90868],1
  41c7f3:	cmp    eax,0xf1845aaa
  41c7f8:	(bad)
  41c7fc:	ins    DWORD PTR es:[edi],dx
  41c7fd:	repz sbb eax,0xe67fc8a3
  41c803:	mov    ch,0x5a
  41c805:	loopne 0x41c7aa
  41c807:	xchg   ecx,eax
  41c808:	or     DWORD PTR ds:0xc1c09ae1,edx
  41c80e:	(bad)
  41c811:	out    dx,eax
  41c812:	test   al,0xa9
  41c814:	cmp    dl,BYTE PTR [eax+eiz*2+0x64386966]
  41c81b:	mov    ?,esi
  41c81d:	(bad)
  41c821:	pop    es
  41c822:	push   edi
  41c823:	fmul   st,st(1)
  41c825:	dec    ebx
  41c826:	push   edi
  41c827:	adc    eax,0x3ba46895
  41c82c:	and    al,0x14
  41c82e:	das    
  41c82f:	icebp  
  41c830:	hlt    
  41c831:	(bad)  
  41c832:	mov    eax,0x5fbbff05
  41c837:	lock inc edx
  41c839:	cdq    
  41c83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83b:	test   ah,0xba
  41c83e:	sub    cl,BYTE PTR [eax-0x309dc42f]
  41c844:	inc    esi
  41c845:	push   esp
  41c846:	(bad)  
  41c847:	outs   dx,BYTE PTR ds:[esi]
  41c848:	jg     0x41c833
  41c84a:	aam    0xe2
  41c84c:	enter  0xaf1a,0x43
  41c850:	shl    bh,cl
  41c852:	in     al,0xb3
  41c854:	xor    dl,BYTE PTR [ecx-0x40]
  41c857:	repz cmp bh,BYTE PTR [ecx-0x68dba44f]
  41c85e:	mov    DWORD PTR [eax],0xd114844c
  41c864:	cld    
  41c865:	xchg   ebx,eax
  41c866:	jecxz  0x41c8e7
  41c868:	in     al,0x1c
  41c86a:	popf   
  41c86b:	gs mov eax,0xd9dbfbc7
  41c871:	or     ch,BYTE PTR [ebp-0xc105957]
  41c877:	push   0x1f
  41c879:	outs   dx,DWORD PTR ds:[esi]
  41c87a:	sub    al,0xac
  41c87c:	out    0xc0,eax
  41c87e:	inc    esi
  41c87f:	jmp    0xa55033bc
  41c884:	inc    edi
  41c885:	repnz push edx
  41c887:	(bad)  
  41c888:	pop    ebp
  41c889:	test   al,0x26
  41c88b:	xchg   edi,eax
  41c88c:	aam    0x4
  41c88e:	and    al,0xe4
  41c890:	out    dx,al
  41c891:	dec    ecx
  41c892:	imul   edx,DWORD PTR [edx+edi*4+0x2d0151a6],0x70
  41c89a:	repz and BYTE PTR [ecx+0x6e9f8dc3],dh
  41c8a1:	call   FWORD PTR [ebp-0xe8979e8]
  41c8a7:	sahf   
  41c8a8:	cmc    
  41c8a9:	or     al,0x48
  41c8ab:	xchg   dh,bl
  41c8ad:	xor    bh,BYTE PTR [ebx-0x63db6042]
  41c8b3:	div    BYTE PTR [esi+0x4d]
  41c8b6:	std    
  41c8b7:	push   ds
  41c8b8:	out    dx,eax
  41c8b9:	jle    0x41c8cb
  41c8bb:	adc    eax,0xdfb68a48
  41c8c0:	outs   dx,DWORD PTR ds:[esi]
  41c8c1:	mov    eax,0x85225ccd
  41c8c6:	in     eax,dx
  41c8c7:	outs   dx,BYTE PTR ds:[esi]
  41c8c8:	imul   eax,ecx,0xd2cd032b
  41c8ce:	fisubr DWORD PTR [ebx+0x3e]
  41c8d1:	es jl  0x41c94a
  41c8d4:	add    DWORD PTR [ebp-0x61114aa8],eax
  41c8da:	mov    cl,0xb6
  41c8dc:	lods   eax,DWORD PTR ds:[esi]
  41c8dd:	mov    DWORD PTR [eax],edi
  41c8df:	inc    eax
  41c8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e1:	jl     0x41c8c5
  41c8e3:	arpl   WORD PTR [ecx],dx
  41c8e5:	inc    edi
  41c8e6:	dec    edx
  41c8e7:	pop    ebp
  41c8e8:	jmp    0x6a6438ab
  41c8ed:	gs dec edx
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	pop    ss
  41c910:	aas    
  41c911:	mov    BYTE PTR cs:[eax],bl
  41c914:	idiv   DWORD PTR [edi+0x78]
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c955
  41c91c:	add    ecx,DWORD PTR [esi-0x48]
  41c91f:	mov    ch,0x2a
  41c921:	jp     0x41c90b
  41c923:	jo     0x41c949
  41c925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c926:	jo     0x41c8d1
  41c928:	test   BYTE PTR [ebp+0x77],al
  41c92b:	and    ebp,ebx
  41c92d:	xchg   edi,eax
  41c92e:	ffree  st(0)
  41c930:	mov    ds,WORD PTR [ecx+0x35aa4481]
  41c936:	test   eax,0x1249ca21
  41c93b:	in     al,dx
  41c93c:	ja     0x41c8d5
  41c93e:	hlt    
  41c93f:	add    ebp,ebp
  41c941:	pop    ss
  41c942:	cwde   
  41c943:	lods   al,BYTE PTR ds:[esi]
  41c944:	out    dx,al
  41c945:	xor    BYTE PTR [esi-0x68],al
  41c948:	cwde   
  41c949:	pop    esp
  41c94a:	fst    QWORD PTR [edx-0x6a73eee2]
  41c950:	sub    ch,BYTE PTR [ebx+0xc]
  41c953:	stc    
  41c954:	mov    ebp,DWORD PTR [edi-0x27827e4d]
  41c95a:	sbb    al,0x7c
  41c95c:	xor    DWORD PTR [eax+ecx*2],esp
  41c95f:	and    ecx,DWORD PTR [ecx+0x4c]
  41c962:	and    ecx,DWORD PTR [esi-0x45]
  41c965:	mov    ecx,0xab46d226
  41c96a:	(bad)  
  41c96b:	xor    BYTE PTR [eax-0x7364ee04],ah
  41c971:	imul   edx
  41c973:	push   esp
  41c974:	mov    ecx,0x2659dc7d
  41c979:	int    0x84
  41c97b:	in     al,0x7a
  41c97d:	clc    
  41c97e:	push   edi
  41c97f:	jl     0x41c957
  41c981:	jb     0x41c9be
  41c983:	or     al,0x1d
  41c985:	repnz sbb eax,0x48b20719
  41c98b:	lock stos BYTE PTR es:[edi],al
  41c98d:	loope  0x41c9bf
  41c98f:	fimul  DWORD PTR [eax]
  41c991:	and    al,0x35
  41c993:	bound  esi,QWORD PTR [edx+0x7a]
  41c996:	imul   ebx,DWORD PTR [ebx+0x5a8869d7],0x414f760d
  41c9a0:	jmp    0x41c922
  41c9a2:	outs   dx,DWORD PTR ds:[esi]
  41c9a3:	mov    edx,0x7bce42a6
  41c9a8:	ins    BYTE PTR es:[edi],dx
  41c9a9:	rcl    DWORD PTR [edi-0x1be3a46a],1
  41c9af:	mov    ecx,0x798889ee
  41c9b4:	repz mov WORD PTR [ebx+0x183f9231],es
  41c9bb:	cld    
  41c9bc:	out    dx,eax
  41c9bd:	or     ch,bh
  41c9bf:	dec    ebp
  41c9c0:	mov    ch,0x3c
  41c9c2:	mov    ebp,0xde1cdc2
  41c9c7:	cmp    eax,0x76ee1012
  41c9cc:	adc    al,0x8c
  41c9ce:	retf   0x16fe
  41c9d1:	jge    0x41c97f
  41c9d3:	lahf   
  41c9d4:	mov    edi,ss
  41c9d6:	cmp    eax,0x4e1d8e80
  41c9db:	jg     0x41c9f8
  41c9dd:	xor    BYTE PTR [esi],0x61
  41c9e0:	mov    DWORD PTR [ecx],ecx
  41c9e2:	iret   
  41c9e3:	inc    esp
  41c9e4:	jp     0x41c968
  41c9e6:	(bad)  
  41c9e7:	rcl    DWORD PTR [edi-0x27],1
  41c9ea:	pop    esp
  41c9eb:	pop    ecx
  41c9ec:	mov    ds:0x7bbeb2c,eax
  41c9f1:	xchg   edi,eax
  41c9f2:	xor    esi,0x71
  41c9f5:	fcomip st,st(3)
  41c9f7:	ror    DWORD PTR [eax-0x3edeb344],cl
  41c9fd:	inc    ecx
  41c9fe:	cwde   
  41c9ff:	ror    DWORD PTR [ebx+0x66],cl
  41ca02:	sub    BYTE PTR [ebp-0x3a],dl
  41ca05:	daa    
  41ca06:	sahf   
  41ca07:	jbe    0x41c9d8
  41ca09:	in     eax,0x35
  41ca0b:	mov    es,WORD PTR ds:0x57be0d96
  41ca11:	adc    DWORD PTR [ebx],edi
  41ca13:	loop   0x41ca69
  41ca15:	xor    cl,BYTE PTR [ecx]
  41ca17:	not    BYTE PTR [ebp-0x366fb527]
  41ca1d:	out    dx,eax
  41ca1e:	sub    BYTE PTR [edi],0x4e
  41ca21:	imul   edi,esi,0x27cf45c6
  41ca27:	xchg   DWORD PTR [edx],esp
  41ca29:	retf   0x912d
  41ca2c:	iret   
  41ca2d:	aam    0x6e
  41ca2f:	or     dh,BYTE PTR [ebp-0x4a]
  41ca32:	inc    edi
  41ca33:	jmp    0xa182:0x9afa78ee
  41ca3a:	push   eax
  41ca3b:	xlat   BYTE PTR ds:[ebx]
  41ca3c:	sqrtps xmm4,XMMWORD PTR [edx]
  41ca3f:	sub    DWORD PTR [ecx-0x48421623],edi
  41ca45:	jbe    0x41ca94
  41ca47:	mov    ah,0x21
  41ca49:	ss clc 
  41ca4b:	scas   eax,DWORD PTR es:[edi]
  41ca4c:	or     bh,BYTE PTR [esi]
  41ca4e:	sbb    BYTE PTR [edi],dh
  41ca50:	inc    esp
  41ca51:	inc    esp
  41ca52:	or     BYTE PTR ds:0xebbec49a,bh
  41ca58:	out    dx,al
  41ca59:	stos   BYTE PTR es:[edi],al
  41ca5a:	xchg   edi,eax
  41ca5b:	out    0x28,al
  41ca5d:	pop    ebx
  41ca5e:	lahf   
  41ca5f:	repz jb 0x41cad0
  41ca62:	xor    eax,0xa9849b94
  41ca67:	xor    dl,BYTE PTR [ebp-0x5a]
  41ca6a:	cmp    al,0xc
  41ca6c:	xor    edx,DWORD PTR [ebp+0x2d]
  41ca6f:	pop    ebx
  41ca70:	xchg   BYTE PTR [esi],bh
  41ca72:	ss mov ecx,0xa587fe6c
  41ca78:	in     eax,dx
  41ca79:	popf   
  41ca7a:	stos   DWORD PTR es:[edi],eax
  41ca7b:	add    DWORD PTR [eax+0x7b],0xffffffd9
  41ca7f:	repz add eax,esi
  41ca82:	test   BYTE PTR [ebp+0x56],bh
  41ca85:	pushf  
  41ca86:	xor    eax,0xf78d9989
  41ca8b:	ins    BYTE PTR es:[edi],dx
  41ca8c:	hlt    
  41ca8d:	(bad)  
  41ca8f:	out    dx,eax
  41ca90:	jl     0x41ca21
  41ca92:	stos   BYTE PTR es:[edi],al
  41ca93:	add    al,0x6
  41ca95:	and    BYTE PTR [ebx+0x7],0xc2
  41ca99:	cmp    eax,0x116eccbe
  41ca9e:	dec    eax
  41ca9f:	pushf  
  41caa0:	push   cs
  41caa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caa2:	mov    DWORD PTR [ecx-0x667a290d],eax
  41caa8:	int    0x36
  41caaa:	mov    ah,0x10
  41caac:	cmp    bh,BYTE PTR [eax]
  41caae:	(bad)  
  41caaf:	sbb    BYTE PTR [eax],ah
  41cab1:	adc    al,0x17
  41cab3:	mov    al,BYTE PTR [edx+0xe58983a]
  41cab9:	ret    
  41caba:	lods   al,BYTE PTR ss:[esi]
  41cabc:	cmp    DWORD PTR [ebp+0x404dcb34],esp
  41cac2:	mov    edx,0x325b2440
  41cac7:	stos   DWORD PTR es:[edi],eax
  41cac8:	add    al,0x5d
  41caca:	das    
  41cacb:	cmp    al,BYTE PTR [esi+0x5e]
  41cace:	repz sbb BYTE PTR [ebp+0x6b],ch
  41cad2:	ror    DWORD PTR [esi-0x14f1f220],cl
  41cad8:	scas   eax,DWORD PTR es:[edi]
  41cad9:	bound  esp,QWORD PTR [eax+0x4d59c892]
  41cadf:	sub    ah,BYTE PTR [esi]
  41cae1:	mov    ch,0x7f
  41cae3:	rcr    DWORD PTR [eax+ebx*1-0x4e],1
  41cae7:	fild   QWORD PTR [ecx+0x36]
  41caea:	(bad)  
  41caec:	cmc    
  41caed:	repnz out 0xb2,eax
  41caf0:	repnz (bad)
  41caf3:	xlat   BYTE PTR ds:[ebx]
  41caf4:	add    BYTE PTR [esi+0x3af0eaf7],al
  41cafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cafb:	jae    0x41cb1f
  41cafd:	adc    esi,esp
  41caff:	push   esp
  41cb00:	fist   DWORD PTR [edi+0x28973e79]
  41cb06:	icebp  
  41cb07:	push   ebx
  41cb08:	jnp    0x41caac
  41cb0a:	dec    esi
  41cb0b:	ds mov ecx,0x94a09716
  41cb11:	sub    eax,0x34f09ab5
  41cb16:	imul   esi,DWORD PTR [ecx-0x70ba6399],0x9764e30b
  41cb20:	cmp    DWORD PTR [ebp+0x6fa59540],0x5b
  41cb27:	clc    
  41cb28:	in     eax,0xb9
  41cb2a:	sub    esi,esp
  41cb2c:	pop    es
  41cb2d:	into   
  41cb2e:	out    0xdf,eax
  41cb30:	add    al,0xcf
  41cb32:	and    ebx,DWORD PTR [esi-0x17]
  41cb35:	xor    BYTE PTR [edx],al
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x9c026037
  41cb47:	repz into 
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cbba
  41cb52:	jg     0x41cba7
  41cb54:	(bad)  
  41cb55:	ja     0x41cb4d
  41cb57:	stos   BYTE PTR es:[edi],al
  41cb58:	push   cs
  41cb59:	sahf   
  41cb5a:	retf   0x1c2d
  41cb5d:	(bad)  [ecx+0x68]
  41cb60:	push   eax
  41cb61:	out    0x59,eax
  41cb63:	stos   BYTE PTR es:[edi],al
  41cb64:	push   esi
  41cb65:	fidiv  WORD PTR [eax+0x2c6de4d2]
  41cb6b:	sbb    eax,0x6ba5d907
  41cb70:	mov    dl,0x40
  41cb72:	shl    BYTE PTR [esp+esi*2-0x37aad54d],0xf1
  41cb7a:	xlat   BYTE PTR cs:[ebx]
  41cb7c:	fcomp  DWORD PTR [edi]
  41cb7e:	or     ah,BYTE PTR [edi+0x13aefd18]
  41cb84:	jne    0x41cbbe
  41cb86:	ss enter 0x5d7e,0x35
  41cb8b:	sub    eax,0xec25df2d
  41cb90:	(bad)  
  41cb91:	mov    ah,0xae
  41cb93:	lods   eax,DWORD PTR ds:[esi]
  41cb94:	lock test al,0xe
  41cb97:	xchg   ebx,eax
  41cb98:	mov    edi,DWORD PTR [eax+ebx*8+0x42]
  41cb9c:	ss pop ebx
  41cb9e:	rol    DWORD PTR ds:0x2568db29,1
  41cba4:	mov    al,ds:0x70aa298f
  41cba9:	(bad)  
  41cbaa:	sub    BYTE PTR [edi-0x5842ce5c],ch
  41cbb0:	js     0x41cc1f
  41cbb2:	jo     0x41cb37
  41cbb4:	outs   dx,BYTE PTR ds:[esi]
  41cbb5:	arpl   WORD PTR [ecx],dx
  41cbb7:	retf   0x873c
  41cbba:	mov    ch,0x87
  41cbbc:	lahf   
  41cbbd:	call   0x9048:0x7c18d337
  41cbc4:	mov    dh,0xfb
  41cbc6:	jge    0x41cb4e
  41cbc8:	adc    al,0x50
  41cbca:	or     BYTE PTR [ebx+0x16],ch
  41cbcd:	pop    ebx
  41cbce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbcf:	push   ebx
  41cbd0:	push   edx
  41cbd1:	xchg   DWORD PTR [ebp+0x374d4b99],esp
  41cbd7:	jg     0x41cb75
  41cbd9:	mov    BYTE PTR ds:0xc52ae2f,bh
  41cbdf:	stos   BYTE PTR es:[edi],al
  41cbe0:	xchg   ebx,eax
  41cbe1:	int    0x95
  41cbe3:	xchg   DWORD PTR [eax+ecx*8],ebx
  41cbe6:	mov    ecx,0x5bba0f06
  41cbeb:	dec    ebx
  41cbec:	icebp  
  41cbed:	jae    0x41cb8d
  41cbef:	or     DWORD PTR [ebx-0x56],ebp
  41cbf2:	iret   
  41cbf3:	push   ebp
  41cbf4:	dec    edx
  41cbf5:	push   edx
  41cbf6:	test   DWORD PTR [esp+edi*8],0xda63e750
  41cbfd:	daa    
  41cbfe:	push   cs
  41cbff:	jecxz  0x41cc36
  41cc01:	loop   0x41cc38
  41cc03:	dec    eax
  41cc04:	aas    
  41cc05:	jmp    0x2782:0x6a35c34
  41cc0c:	jmp    0x99f0:0x79359d0c
  41cc13:	jge    0x41cc8c
  41cc15:	jnp    0x41cc31
  41cc17:	and    BYTE PTR ds:0xf663704f,0x7d
  41cc1e:	mov    ebx,0x95263517
  41cc23:	add    eax,0xb2515c1e
  41cc28:	(bad)  
  41cc29:	out    dx,eax
  41cc2a:	in     eax,0xf7
  41cc2c:	mov    edx,0xe0bcf5fe
  41cc31:	fcom   QWORD PTR [ecx-0x76]
  41cc34:	ror    DWORD PTR [edi+edi*4+0xc],1
  41cc38:	mov    ebx,0x4db02941
  41cc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc3e:	sub    esi,DWORD PTR [edx-0x14ed8f5b]
  41cc44:	jno    0x41ccb9
  41cc46:	test   eax,esi
  41cc48:	(bad)  
  41cc49:	or     al,0x4c
  41cc4b:	fisub  DWORD PTR [ecx+ebx*4-0x7e97751b]
  41cc52:	inc    ebp
  41cc53:	or     al,0xfb
  41cc55:	scas   eax,DWORD PTR es:[edi]
  41cc56:	mov    edi,DWORD PTR [ecx+0x76]
  41cc59:	js     0x41ccc4
  41cc5b:	stc    
  41cc5c:	or     BYTE PTR ds:0x49154ad5,bh
  41cc62:	push   cs
  41cc63:	and    bl,BYTE PTR ds:0x74ee660b
  41cc69:	aam    0xa6
  41cc6b:	je     0x41cc56
  41cc6d:	stos   BYTE PTR es:[edi],al
  41cc6e:	out    0x8c,al
  41cc70:	loopne 0x41cc9b
  41cc72:	or     edi,ebx
  41cc74:	adc    BYTE PTR [eax],dh
  41cc76:	popf   
  41cc77:	enter  0x4f06,0xe3
  41cc7b:	in     eax,0x1d
  41cc7d:	push   edx
  41cc7e:	mov    ds:0x288d0601,eax
  41cc83:	inc    eax
  41cc84:	adc    BYTE PTR [ebp-0x49a62b00],bl
  41cc8a:	dec    eax
  41cc8b:	dec    ebx
  41cc8c:	stos   BYTE PTR es:[edi],al
  41cc8d:	scas   eax,DWORD PTR es:[edi]
  41cc8e:	repz scas eax,DWORD PTR es:[edi]
  41cc90:	add    DWORD PTR [ecx+0x43],0x99752e55
  41cc97:	xor    eax,0x7aa8dd7f
  41cc9c:	outs   dx,BYTE PTR ds:[esi]
  41cc9d:	xchg   ecx,eax
  41cc9e:	or     edi,DWORD PTR [esi-0x2f]
  41cca1:	push   edx
  41cca2:	in     eax,0x4
  41cca4:	lock rcl DWORD PTR [ebp+ecx*4-0x3d],0xe3
  41ccaa:	inc    ecx
  41ccab:	mov    edx,edi
  41ccad:	cdq    
  41ccae:	repz ss xchg esi,eax
  41ccb1:	add    edi,0x268b5025
  41ccb7:	inc    edi
  41ccb8:	pop    edx
  41ccb9:	pop    edx
  41ccba:	add    al,0x7d
  41ccbc:	jg     0x41cc77
  41ccbe:	mov    eax,ds:0x3002ed19
  41ccc3:	xor    al,0xb6
  41ccc5:	fisttp DWORD PTR [ecx-0x56b03fff]
  41cccb:	inc    edi
  41cccc:	mov    ah,0x7c
  41ccce:	leave  
  41cccf:	jb     0x41ccdb
  41ccd1:	mov    al,0x5f
  41ccd3:	stos   DWORD PTR es:[edi],eax
  41ccd4:	sub    dh,bh
  41ccd6:	adc    al,0xcd
  41ccd8:	and    DWORD PTR [ecx+0x67d5a3ad],ebp
  41ccde:	push   esp
  41ccdf:	bound  esp,QWORD PTR [eax+0x25]
  41cce2:	outs   dx,DWORD PTR ds:[esi]
  41cce3:	mov    cl,0x40
  41cce5:	cmp    cl,cl
  41cce7:	aam    0xf5
  41cce9:	retf   
  41ccea:	xchg   ebx,eax
  41cceb:	fidiv  DWORD PTR [eax-0x36777e82]
  41ccf1:	mov    bl,0x1b
  41ccf3:	gs push cs
  41ccf5:	inc    edi
  41ccf6:	es jecxz 0x41cd4c
  41ccf9:	pop    ecx
  41ccfa:	and    al,0x7f
  41ccfc:	push   eax
  41ccfd:	les    ebx,FWORD PTR [esi-0x7b]
  41cd00:	push   0xfffffff6
  41cd02:	ds call 0x5892b25d
  41cd08:	in     eax,0x46
  41cd0a:	and    al,0x7b
  41cd0c:	ss test eax,0x464ac0a6
  41cd12:	lahf   
  41cd13:	ror    BYTE PTR [edx],0x8c
  41cd16:	sbb    DWORD PTR ds:0xf537ed5c,ebx
  41cd1c:	out    dx,al
  41cd1d:	pop    edi
  41cd1e:	cmp    eax,0x10c8f921
  41cd23:	xor    cl,BYTE PTR [esi+ebx*2]
  41cd26:	pusha  
  41cd27:	or     DWORD PTR [ebx],edi
  41cd29:	or     esp,DWORD PTR [esi-0x75]
  41cd2c:	js     0x41ccf3
  41cd2e:	loopne 0x41ccd2
  41cd30:	scas   eax,DWORD PTR es:[edi]
  41cd31:	cmp    eax,0xd3e7ab30
  41cd36:	add    BYTE PTR [ebx],0xd5
  41cd39:	cmp    bl,al
  41cd3b:	inc    esi
  41cd3c:	out    0x1f,al
  41cd3e:	mov    al,0x1b
  41cd40:	cdq    
  41cd41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd42:	push   esp
  41cd43:	cwde   
  41cd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd45:	stos   DWORD PTR es:[edi],eax
  41cd46:	wrmsr  
  41cd48:	push   0xffffff83
  41cd4a:	mov    al,ds:0xc374d31c
  41cd4f:	sbb    al,0x3e
  41cd51:	test   BYTE PTR [ebx-0x5fa48667],al
  41cd57:	dec    ecx
  41cd58:	cmp    eax,0xd73802ef
  41cd5d:	rcr    BYTE PTR [eax+0x4d],cl
  41cd60:	sbb    edx,ebx
  41cd62:	add    al,0x7b
  41cd64:	and    DWORD PTR ds:0x5b8b5ba5,ebp
  41cd6a:	leave  
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dh
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dh
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fnsave [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x728bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],ch
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x66b49082
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [ebx+0x6],bh
  41edc0:	add    BYTE PTR [eax],al
  41edc2:	cwde   
  41edc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edc4:	out    dx,eax
  41edc5:	xchg   DWORD PTR [edx],ebx
  41edc7:	out    dx,al
  41edc8:	and    BYTE PTR [ecx],ah
  41edca:	rcr    DWORD PTR [edi],cl
  41edcc:	ds adc dh,al
  41edcf:	stos   DWORD PTR es:[edi],eax
  41edd0:	rep lods al,BYTE PTR ds:[esi]
  41edd2:	inc    edi
  41edd3:	into   
  41edd4:	xchg   edi,eax
  41edd5:	xchg   edx,eax
  41edd6:	inc    ebx
  41edd7:	rol    BYTE PTR [ecx-0xad07da],0xe3
  41edde:	mov    edx,0x8ca05cb3
  41ede3:	mov    al,0x76
  41ede5:	pop    esi
  41ede6:	or     esp,ebx
  41ede8:	std    
  41ede9:	(bad)  
  41edea:	or     eax,0x140970fc
  41edef:	ins    BYTE PTR es:[edi],dx
  41edf0:	sub    bh,bh
  41edf2:	sub    bh,dl
  41edf4:	stos   BYTE PTR es:[edi],al
  41edf5:	or     DWORD PTR [esi],edx
  41edf7:	neg    BYTE PTR ds:0x30facb1a
  41edfd:	jns    0x41ee65
  41edff:	aaa    
  41ee00:	mov    eax,0x9baa02db
  41ee05:	add    bl,bl
  41ee07:	inc    edx
  41ee08:	fisttp WORD PTR [eax]
  41ee0a:	dec    edx
  41ee0b:	mov    eax,0x86b61208
  41ee10:	push   eax
  41ee11:	push   0x48388ba3
  41ee16:	xlat   BYTE PTR ds:[ebx]
  41ee17:	push   0xffffffe7
  41ee19:	cli    
  41ee1a:	cmc    
  41ee1b:	push   ebx
  41ee1c:	inc    edx
  41ee1d:	rep outs dx,DWORD PTR ds:[esi]
  41ee1f:	adc    dh,dh
  41ee21:	test   al,0xd2
  41ee23:	add    ch,dl
  41ee25:	ret    
  41ee26:	int    0x68
  41ee28:	sub    ecx,edx
  41ee2a:	into   
  41ee2b:	mov    bl,0xa8
  41ee2d:	std    
  41ee2e:	into   
  41ee2f:	jecxz  0x41eddc
  41ee31:	out    0x75,eax
  41ee33:	jo     0x41ee5b
  41ee35:	or     al,0xdc
  41ee37:	mov    WORD PTR ds:0x1c98e15a,ds
  41ee3d:	and    al,0xeb
  41ee3f:	das    
  41ee40:	retf   0x2f9f
  41ee43:	jne    0x41ee27
  41ee45:	mov    bl,BYTE PTR [esp+eax*8+0xd]
  41ee49:	(bad)  
  41ee4a:	aam    0x36
  41ee4c:	les    ebx,FWORD PTR [ebp+esi*4+0x5f]
  41ee50:	adc    DWORD PTR [edx],eax
  41ee52:	out    0x1a,eax
  41ee54:	scas   al,BYTE PTR es:[edi]
  41ee55:	sbb    esi,DWORD PTR [ecx-0x5d]
  41ee58:	leave  
  41ee59:	data16 arpl ax,sp
  41ee5c:	xchg   edx,eax
  41ee5d:	loope  0x41ee17
  41ee5f:	jl     0x41ede4
  41ee61:	pop    edi
  41ee62:	push   cs
  41ee63:	add    dl,ah
  41ee65:	in     eax,dx
  41ee66:	pop    ebx
  41ee67:	aas    
  41ee68:	popf   
  41ee69:	push   ss
  41ee6a:	sbb    DWORD PTR [eax+0x24],0x56f288f5
  41ee71:	mov    dh,ah
  41ee73:	test   BYTE PTR [ecx],bh
  41ee75:	cmp    BYTE PTR [eax+0x2f],dh
  41ee78:	adc    ebx,DWORD PTR [eax-0x218d94a6]
  41ee7e:	push   edi
  41ee7f:	mov    DWORD PTR [ebx+0x1c5f9eb2],eax
  41ee85:	test   al,0x21
  41ee87:	int3   
  41ee88:	repnz or BYTE PTR [eax-0x21],al
  41ee8c:	xor    DWORD PTR [bp+0x5644],eax
  41ee91:	inc    esi
  41ee92:	sti    
  41ee93:	inc    ebx
  41ee94:	aaa    
  41ee95:	adc    cl,BYTE PTR [edx]
  41ee97:	fs leave 
  41ee99:	mov    esi,ebp
  41ee9b:	sub    edi,DWORD PTR [eax]
  41ee9d:	jae    0x41eea2
  41ee9f:	leave  
  41eea0:	in     eax,0xa0
  41eea2:	popa   
  41eea3:	or     esi,DWORD PTR [eax]
  41eea5:	xor    eax,0x2e2546
  41eeaa:	xchg   DWORD PTR [ebx+0x6c83e53f],eax
  41eeb0:	mov    eax,0xed4705f1
  41eeb5:	std    
  41eeb6:	loopne 0x41ee46
  41eeb8:	pop    es
  41eeb9:	cmp    eax,0xb9083c5
  41eebe:	push   ds
  41eebf:	xor    dh,BYTE PTR [edi*4-0x5bc3b5a]
  41eec6:	or     esi,eax
  41eec8:	inc    edx
  41eec9:	inc    ecx
  41eeca:	and    eax,0xf0f9f0eb
  41eecf:	into   
  41eed0:	(bad)  
  41eed1:	jge    0x41ee63
  41eed3:	jge    0x41eec7
  41eed5:	mov    al,0x6c
  41eed7:	in     eax,dx
  41eed8:	std    
  41eed9:	xlat   BYTE PTR ds:[ebx]
  41eeda:	ret    
  41eedb:	ret    
  41eedc:	ficomp DWORD PTR [edi+0x20444df]
  41eee2:	push   ebx
  41eee3:	sub    BYTE PTR [edx],bl
  41eee5:	(bad)  
  41eee6:	out    0x57,eax
  41eee8:	xor    DWORD PTR [edi-0x1e],edx
  41eeeb:	(bad)  
  41eeec:	gs cld 
  41eeee:	stos   BYTE PTR es:[edi],al
  41eeef:	imul   esp,DWORD PTR [edi+esi*2-0x419489de],0xffffffba
  41eef7:	push   edx
  41eef8:	in     eax,0x57
  41eefa:	js     0x41ee92
  41eefc:	adc    eax,0xfd336545
  41ef01:	add    DWORD PTR [ecx],esi
  41ef03:	(bad)  
  41ef04:	into   
  41ef05:	ins    BYTE PTR es:[edi],dx
  41ef06:	cwde   
  41ef07:	jnp    0x41ef30
  41ef09:	and    DWORD PTR [edx-0x34],ebp
  41ef0c:	(bad)  [ebx+0x4d5ebfd4]
  41ef12:	mov    gs,WORD PTR [ebx]
  41ef14:	cwde   
  41ef15:	sbb    ebp,ebx
  41ef17:	push   esi
  41ef18:	sub    cl,0xae
  41ef1b:	jo     0x41ef9a
  41ef1d:	call   0x32cd:0x2426084d
  41ef24:	iret   
  41ef25:	jns    0x41ef03
  41ef27:	adc    al,0xf2
  41ef29:	stos   DWORD PTR es:[edi],eax
  41ef2a:	and    esi,edx
  41ef2c:	xor    ebp,DWORD PTR [eax+0x29efd529]
  41ef32:	out    dx,eax
  41ef33:	push   esp
  41ef34:	test   BYTE PTR [esi],0x23
  41ef37:	mov    ds:0x8d8aee7f,eax
  41ef3c:	retf   0x7e73
  41ef3f:	popa   
  41ef40:	popa   
  41ef41:	mov    BYTE PTR [edi+eax*2+0x72],bl
  41ef45:	jmp    0x41efc0
  41ef47:	test   BYTE PTR [ebx-0x7146f546],ch
  41ef4d:	retf   0x5b64
  41ef50:	jns    0x41eed9
  41ef52:	xor    DWORD PTR [edi],ecx
  41ef54:	rcr    DWORD PTR [esi+0x2b387fb0],0xa6
  41ef5b:	pop    edi
  41ef5c:	push   ebx
  41ef5d:	sub    eax,0xa3dc23aa
  41ef62:	adc    BYTE PTR [esi-0x2f],0xc7
  41ef66:	stos   DWORD PTR es:[edi],eax
  41ef67:	push   es
  41ef68:	adc    ch,BYTE PTR [edx-0x53]
  41ef6b:	jp     0x41ef53
  41ef6d:	ss mov esp,0x1542742d
  41ef73:	add    eax,0xe8ba9d7e
  41ef78:	cmp    esi,DWORD PTR [esi]
  41ef7a:	(bad)  
  41ef7b:	push   cs
  41ef7c:	mov    ebp,0x81fc9385
  41ef81:	sub    dh,bh
  41ef83:	jno    0x41eff4
  41ef85:	push   ebp
  41ef86:	fist   DWORD PTR [esi-0x50]
  41ef89:	push   ss
  41ef8a:	ficom  WORD PTR [edi]
  41ef8c:	sbb    eax,0x30403c53
  41ef91:	in     eax,dx
  41ef92:	fnstenv [ebp-0x5ab6e1ec]
  41ef98:	jmp    0x1763:0xed919ab3
  41ef9f:	push   edx
  41efa0:	(bad)  
  41efa1:	(bad)  
  41efa3:	lea    ebx,[edx]
  41efa5:	mov    dl,0x3f
  41efa7:	ret    
  41efa8:	or     al,0x42
  41efaa:	repz and ebp,esp
  41efad:	cmp    eax,0x10bc34f9
  41efb2:	das    
  41efb3:	push   ebx
  41efb4:	ret    
  41efb5:	dec    edi
  41efb6:	fs dec esi
  41efb8:	dec    esp
  41efb9:	mov    ebx,0x72b06936
  41efbe:	lods   al,BYTE PTR ds:[esi]
  41efbf:	retf   
  41efc0:	in     al,0x4f
  41efc2:	add    eax,0x3e1be64b
  41efc7:	push   eax
  41efc8:	sbb    al,0x6f
  41efca:	inc    esp
  41efcb:	pop    eax
  41efcc:	lock adc DWORD PTR [ebx-0x78b38151],edx
  41efd3:	mov    ebx,ebx
  41efd5:	stos   DWORD PTR es:[edi],eax
  41efd6:	js     0x41efe5
  41efd8:	mov    esi,0x634430c
  41efdd:	cmovo  ecx,DWORD PTR [edi]
  41efe0:	es jae 0x41f01d
  41efe3:	push   ss
  41efe4:	mov    ds:0xc4b20916,al
  41efe9:	data16 fwait
  41efeb:	mov    ch,0x85
  41efed:	jnp    0x41f005
  41efef:	nop
  41eff0:	mov    ss,WORD PTR [edx+0x42b38dab]
  41eff6:	mov    edx,0xccf8bbc3
  41effb:	int3   
  41effc:	clc    
  41effd:	inc    eax
  41effe:	sbb    DWORD PTR [ebx-0x58f81590],eax
  41f004:	xor    eax,0xe9c7e4c2
  41f009:	ror    DWORD PTR [ecx+0x660ebe5b],1
  41f00f:	pop    ecx
  41f010:	jbe    0x41f075
  41f012:	ins    DWORD PTR es:[edi],dx
  41f013:	push   0xffffffee
  41f015:	dec    edi
  41f016:	pusha  
  41f017:	jbe    0x41f067
  41f019:	sar    edx,1
  41f01b:	jmp    0x41efd3
  41f01d:	les    eax,FWORD PTR [ecx+0x1318f7f9]
  41f023:	hlt    
  41f024:	or     eax,0xd407b0af
  41f029:	out    0x3c,eax
  41f02b:	mov    dh,0xad
  41f02d:	repz gs icebp 
  41f030:	mov    ecx,ecx
  41f032:	je     0x41f070
  41f034:	ja     0x41f04d
  41f036:	jb     0x41f059
  41f038:	jle    0x41f0b4
  41f03a:	mov    al,ds:0x35039f0
  41f03f:	stos   BYTE PTR es:[edi],al
  41f040:	xchg   DWORD PTR [edi+edi*1-0x5d50c24d],ecx
  41f047:	xor    al,0xcb
  41f049:	ins    DWORD PTR es:[edi],dx
  41f04a:	sub    eax,0x3f5bd659
  41f04f:	hlt    
  41f050:	jae    0x41f01d
  41f052:	dec    eax
  41f053:	ja     0x41f06f
  41f055:	add    eax,0x9fb25920
  41f05a:	outs   dx,DWORD PTR ds:[esi]
  41f05b:	lds    esi,FWORD PTR [ebp-0x1dea0fd1]
  41f061:	mov    bl,0x45
  41f063:	test   al,0xaa
  41f065:	inc    esp
  41f066:	cmp    edx,DWORD PTR [ebp+esi*1+0x61]
  41f06a:	loop   0x41f04e
  41f06c:	xchg   BYTE PTR [esi+0x30c121b7],bl
  41f072:	nop
  41f073:	arpl   di,sp
  41f075:	leave  
  41f076:	mov    eax,0xda11b377
  41f07b:	daa    
  41f07c:	inc    ecx
  41f07d:	imul   eax,esi,0x76
  41f080:	mov    bh,0xa9
  41f082:	cmp    ah,BYTE PTR [ebp+0x436e5f18]
  41f088:	aam    0x53
  41f08a:	in     al,0xba
  41f08c:	test   DWORD PTR [edx],eax
  41f08e:	jmp    0x9284530a
  41f093:	cmc    
  41f094:	cmp    ecx,eax
  41f096:	and    eax,0xd3f534cc
  41f09b:	inc    ecx
  41f09c:	icebp  
  41f09d:	jle    0x41f0c3
  41f09f:	inc    esi
  41f0a0:	mov    eax,ds:0xf964d6a1
  41f0a5:	xlat   BYTE PTR ds:[ebx]
  41f0a6:	adc    eax,0xdbdb8ef6
  41f0ab:	stos   DWORD PTR es:[edi],eax
  41f0ac:	or     edx,DWORD PTR [edx]
  41f0ae:	pop    eax
  41f0af:	jno    0x41f0e1
  41f0b1:	inc    esp
  41f0b2:	(bad)  
  41f0b4:	mov    DWORD PTR [ebx],ebp
  41f0b6:	jg     0x41f129
  41f0b8:	fcomp  st(6)
  41f0ba:	pusha  
  41f0bb:	sbb    cl,0xfa
  41f0be:	and    eax,0x58381120
  41f0c3:	jo     0x41f0b8
  41f0c5:	adc    dl,BYTE PTR [esi-0x7a82e0]
  41f0cb:	stc    
  41f0cc:	xchg   ebp,eax
  41f0cd:	ss and al,0x7c
  41f0d0:	outs   dx,BYTE PTR ds:[esi]
  41f0d1:	sbb    esp,DWORD PTR [esi]
  41f0d3:	sub    edx,DWORD PTR [ebp+0xc]
  41f0d6:	xchg   edx,eax
  41f0d7:	ins    DWORD PTR es:[edi],dx
  41f0d8:	sub    esi,edi
  41f0da:	loope  0x41f0ae
  41f0dc:	xlat   BYTE PTR ds:[ebx]
  41f0dd:	push   0xfffffff3
  41f0df:	pop    edx
  41f0e0:	jle    0x41f0ab
  41f0e2:	sbb    DWORD PTR [ecx+ebx*1+0x1f],eax
  41f0e6:	fidiv  WORD PTR [edx+0x14227a68]
  41f0ec:	pop    ecx
  41f0ed:	fcom   DWORD PTR [ecx+esi*8-0x43]
  41f0f1:	ret    
  41f0f2:	pushf  
  41f0f3:	or     DWORD PTR [esi+0x30],0xffffff9f
  41f0f7:	loopne 0x41f103
  41f0f9:	xor    eax,0x242dfb90
  41f0fe:	aas    
  41f0ff:	adc    BYTE PTR [edx-0x1],ch
  41f102:	rol    DWORD PTR [edi+0x4a],cl
  41f105:	std    
  41f106:	sub    DWORD PTR [edi],esi
  41f108:	push   ds
  41f109:	push   eax
  41f10a:	pushf  
  41f10b:	sti    
  41f10c:	mov    DWORD PTR [ebx],0x337c2ebd
  41f112:	(bad)  
  41f113:	xor    al,0x41
  41f115:	(bad)  
  41f116:	adc    al,BYTE PTR [eax]
  41f118:	out    dx,eax
  41f119:	fwait
  41f11a:	mov    DWORD PTR [eax+0x32],0x761da35a
  41f121:	inc    esi
  41f122:	jle    0x41f0fa
  41f124:	shr    DWORD PTR ds:0x7592fb0a,0xc9
  41f12b:	(bad)  
  41f12c:	push   esp
  41f12d:	shl    BYTE PTR ss:[ebp+0x7aef5903],cl
  41f134:	xor    DWORD PTR [esi+0x2d],eax
  41f137:	push   ss
  41f138:	sbb    cl,BYTE PTR [edi-0x5d]
  41f13b:	cs out dx,eax
  41f13d:	mov    esi,0xc100acf0
  41f142:	push   ecx
  41f143:	(bad)  
  41f144:	(bad)  
  41f145:	enter  0x4881,0xf0
  41f149:	or     ax,0x5eef
  41f14d:	pop    ds
  41f14e:	inc    ecx
  41f14f:	fldenv [esi+0x65]
  41f152:	push   edx
  41f153:	mov    ch,0xb3
  41f155:	cdq    
  41f156:	pop    edx
  41f157:	ja     0x41f1b7
  41f159:	cmp    eax,0x560c41b7
  41f15e:	adc    DWORD PTR [ebp+0x782d0258],0x6d
  41f165:	push   esi
  41f166:	mov    al,ds:0x194009ab
  41f16b:	in     eax,dx
  41f16c:	fs dec ecx
  41f16e:	jp     0x41f12f
  41f170:	sub    esi,DWORD PTR [ebp+edx*4+0x4b6aa2f6]
  41f177:	stc    
  41f178:	outs   dx,DWORD PTR ds:[esi]
  41f179:	mov    gs,ecx
  41f17b:	neg    BYTE PTR [edx]
  41f17d:	cmp    edx,DWORD PTR [eax-0x1f]
  41f180:	icebp  
  41f181:	and    eax,0xd2342fff
  41f186:	and    ebp,0x8360114d
  41f18c:	xchg   edx,eax
  41f18d:	adc    cl,BYTE PTR [esi+0x1]
  41f190:	pop    esp
  41f191:	sub    DWORD PTR [ebp-0x6be81086],edi
  41f197:	or     ah,BYTE PTR [ecx+0x58e51f93]
  41f19d:	add    DWORD PTR [eax-0x5b0565d5],eax
  41f1a3:	(bad)  [eax-0x3a]
  41f1a6:	push   0x7a
  41f1a8:	xchg   ebx,eax
  41f1a9:	div    DWORD PTR [ecx*1+0x77fa752e]
  41f1b0:	cmp    DWORD PTR [edx+0x64],eax
  41f1b3:	pop    ebp
  41f1b4:	pop    esi
  41f1b5:	and    DWORD PTR [esi-0x79],ecx
  41f1b8:	or     dl,cl
  41f1ba:	mov    ds:0xec36065b,eax
  41f1bf:	fild   QWORD PTR [esi-0x44160d34]
  41f1c5:	xor    al,0x1e
  41f1c7:	jmp    0xdb54d23c
  41f1cc:	ror    BYTE PTR [edx-0x4608345a],cl
  41f1d2:	or     ecx,DWORD PTR [ecx]
  41f1d4:	cmp    BYTE PTR [eax-0x11],0xf9
  41f1d8:	xchg   ebx,eax
  41f1d9:	rcr    BYTE PTR [edi+0x6d115a9b],cl
  41f1df:	pop    edx
  41f1e0:	outs   dx,BYTE PTR ds:[esi]
  41f1e1:	jmp    0x41f1ee
  41f1e3:	and    al,dh
  41f1e5:	les    esi,FWORD PTR [edi]
  41f1e7:	xor    esi,DWORD PTR ds:[ecx+0x6e92cfc4]
  41f1ee:	cmp    BYTE PTR [ebp+0x51],dl
  41f1f1:	pusha  
  41f1f2:	aam    0xd6
  41f1f4:	out    0xe8,eax
  41f1f6:	rcr    edi,0xed
  41f1f9:	ret    
  41f1fa:	repnz adc eax,0x84083e31
  41f200:	dec    eax
  41f201:	push   edx
  41f202:	and    bl,BYTE PTR [edi]
  41f204:	fs mov dl,0x67
  41f207:	outs   dx,BYTE PTR ds:[esi]
  41f208:	(bad)  
  41f209:	jmp    0x1c77:0xf3a186dc
  41f210:	lahf   
  41f211:	test   BYTE PTR [eax],bh
  41f213:	leave  
  41f214:	(bad)  
  41f215:	sti    
  41f216:	dec    eax
  41f217:	ins    BYTE PTR es:[edi],dx
  41f218:	addr16 xor al,0x46
  41f21b:	(bad)  
  41f21c:	ds mov esp,0x4b87e85d
  41f222:	test   ah,bh
  41f224:	xchg   esp,ecx
  41f226:	ret    
  41f227:	sub    al,0xd
  41f229:	in     eax,dx
  41f22a:	or     eax,0xb8c04ea3
  41f22f:	ss pop ss
  41f231:	pop    edi
  41f232:	cmp    eax,0x7e69f3e9
  41f237:	fst    DWORD PTR [esi+0x7]
  41f23a:	mov    BYTE PTR [edi-0x36b961bc],cl
  41f240:	jbe    0x41f2a9
  41f242:	loopne 0x41f1c6
  41f244:	inc    esp
  41f245:	daa    
  41f246:	scas   eax,DWORD PTR es:[edi]
  41f247:	dec    esi
  41f248:	out    dx,eax
  41f249:	sar    DWORD PTR [edx+0x289b08a7],0x70
  41f250:	jmp    0x7679fe23
  41f255:	sbb    DWORD PTR [ebp-0x5a3ebb29],0x620ae5d1
  41f25f:	cmp    dh,BYTE PTR [ebp-0x26c7d230]
  41f265:	mov    ds:0xe86e5a6f,eax
  41f26a:	cmc    
  41f26b:	call   0x8700cef9
  41f270:	add    esi,DWORD PTR [ecx+0x14]
  41f273:	jae    0x41f2cf
  41f275:	cmp    ah,BYTE PTR [ebx-0x2e9ed42]
  41f27b:	or     DWORD PTR [ebx+0x1c0419b0],ecx
  41f281:	in     al,dx
  41f282:	dec    ebp
  41f283:	mov    ecx,0x75362ada
  41f288:	lods   eax,DWORD PTR ds:[esi]
  41f289:	xor    ecx,esi
  41f28b:	dec    ebx
  41f28c:	jno    0x41f21c
  41f28e:	dec    ebp
  41f28f:	inc    edx
  41f290:	xchg   ebx,ebx
  41f292:	sbb    ecx,DWORD PTR [esi+0x6a99f437]
  41f298:	cwde   
  41f299:	(bad)  
  41f29a:	jb     0x41f2fe
  41f29c:	xchg   ecx,eax
  41f29d:	xor    BYTE PTR [eax+0x5d970f17],ah
  41f2a3:	adc    eax,0xa0d59c48
  41f2a8:	out    0x83,eax
  41f2aa:	js     0x41f317
  41f2ac:	(bad)  
  41f2ad:	inc    ebx
  41f2ae:	pop    es
  41f2af:	push   es
  41f2b0:	and    al,0x11
  41f2b2:	fs push edi
  41f2b4:	stos   BYTE PTR es:[edi],al
  41f2b5:	xor    edi,ecx
  41f2b7:	fucom  st(6)
  41f2b9:	stos   DWORD PTR es:[edi],eax
  41f2ba:	mov    es,WORD PTR [esi]
  41f2bc:	add    BYTE PTR [ebx+0x68],bh
  41f2bf:	cld    
  41f2c0:	pop    ebp
  41f2c1:	data16 mov ah,0xae
  41f2c4:	out    0xcf,al
  41f2c6:	cdq    
  41f2c7:	inc    DWORD PTR [ecx+0x50]
  41f2ca:	ror    ecx,1
  41f2cc:	pop    ds
  41f2cd:	int    0x30
  41f2cf:	aad    0x9a
  41f2d1:	fcomp  st(3)
  41f2d3:	sub    DWORD PTR [edx-0x175858dc],ecx
  41f2d9:	pop    eax
  41f2da:	popf   
  41f2db:	fld    TBYTE PTR [ebx]
  41f2dd:	mov    al,ds:0x2a0ffc04
  41f2e2:	repz cmp eax,0x4a2d630a
  41f2e8:	pop    ecx
  41f2e9:	mov    ds:0x4c235a0a,al
  41f2ee:	enter  0xf64,0x36
  41f2f2:	adc    ecx,ebx
  41f2f4:	dec    edi
  41f2f5:	es add eax,0xf35567ac
  41f2fb:	out    dx,al
  41f2fc:	cdq    
  41f2fd:	test   DWORD PTR [ecx],0xa7ad2663
  41f303:	in     al,0x87
  41f305:	sbb    DWORD PTR [eax-0x2],0x5226dde
  41f30c:	jbe    0x41f2b6
  41f30e:	lods   al,BYTE PTR ds:[esi]
  41f30f:	push   ecx
  41f310:	pop    esp
  41f311:	jne    0x41f385
  41f313:	mov    eax,gs
  41f315:	or     eax,0xd0952aac
  41f31a:	ins    BYTE PTR es:[edi],dx
  41f31b:	stos   BYTE PTR es:[edi],al
  41f31c:	std    
  41f31d:	inc    ecx
  41f31e:	sbb    eax,0xe81e94a1
  41f323:	jbe    0x41f2aa
  41f325:	add    ah,BYTE PTR [esi+esi*4-0x20997ea4]
  41f32c:	xor    ecx,0xcf9f3c68
  41f332:	xchg   edi,eax
  41f333:	ins    DWORD PTR es:[edi],dx
  41f334:	aad    0xb6
  41f336:	push   ss
  41f337:	stc    
  41f338:	lds    esp,FWORD PTR [eax-0x2d]
  41f33b:	mov    ds:0xeb152d34,al
  41f340:	ins    BYTE PTR es:[edi],dx
  41f341:	pop    esi
  41f342:	out    0xf1,al
  41f344:	loope  0x41f3c3
  41f346:	add    BYTE PTR [ebx-0x2b2c7d72],dl
  41f34c:	jne    0x41f33d
  41f34e:	add    DWORD PTR [esi+eax*8+0x75],ecx
  41f352:	or     cl,BYTE PTR [eax+0x2f5871f9]
  41f358:	sbb    ecx,DWORD PTR [edx+0x121c9c39]
  41f35e:	lods   eax,DWORD PTR ds:[esi]
  41f35f:	add    ah,BYTE PTR [edi+0x3d7bfdf1]
  41f365:	das    
  41f366:	call   0xf9d3:0x88cfe194
  41f36d:	mov    WORD PTR ds:0x7df96467,ss
  41f373:	daa    
  41f374:	cmp    eax,0x5a44fd05
  41f379:	add    al,0x26
  41f37b:	fmul   DWORD PTR [esi-0x43]
  41f37e:	std    
  41f37f:	arpl   WORD PTR [edi],di
  41f381:	and    eax,0x8acfbc0f
  41f386:	push   ecx
  41f387:	in     eax,0x9d
  41f389:	add    edx,edx
  41f38b:	jno    0x41f3c2
  41f38d:	(bad)  
  41f38f:	push   edx
  41f390:	(bad)  
  41f391:	sbb    cl,al
  41f393:	enter  0x4d6e,0x2a
  41f397:	test   DWORD PTR [eax-0x7dcfd005],ebx
  41f39d:	pop    ebx
  41f39e:	gs in  al,0x17
  41f3a1:	sbb    DWORD PTR [ecx-0x32db6661],eax
  41f3a7:	pop    ss
  41f3a8:	enter  0xeecd,0x32
  41f3ac:	dec    ecx
  41f3ad:	aad    0xa9
  41f3af:	jg     0x41f3d7
  41f3b1:	xor    al,0xc5
  41f3b3:	fs and eax,0x13b1d8a7
  41f3b9:	lock clc 
  41f3bb:	jmp    0xa6d6fddd
  41f3c0:	jg     0x41f3e6
  41f3c2:	js     0x41f3be
  41f3c4:	lods   eax,DWORD PTR ds:[esi]
  41f3c5:	jl     0x41f37e
  41f3c7:	mov    edi,0x16d525b6
  41f3cc:	pop    ss
  41f3cd:	dec    eax
  41f3ce:	mov    eax,ds:0xa97801d8
  41f3d3:	into   
  41f3d4:	imul   edx,esi,0x9f58cf1c
  41f3da:	ss sub eax,0x72df356
  41f3e0:	jne    0x41f3ad
  41f3e2:	inc    edi
  41f3e3:	(bad)
  41f3e6:	ss jno 0x41f423
  41f3e9:	jne    0x41f3b3
  41f3eb:	ficom  WORD PTR [ecx+eax*1+0x2e3e0537]
  41f3f2:	aas    
  41f3f3:	mov    esi,0xd7542cab
  41f3f8:	dec    esp
  41f3f9:	jle    0x41f3a1
  41f3fb:	popa   
  41f3fc:	je     0x41f3c3
  41f3fe:	clc    
  41f3ff:	xchg   DWORD PTR [ecx],ebx
  41f401:	test   al,0x6c
  41f403:	in     al,0x2d
  41f405:	out    dx,eax
  41f406:	jae    0x41f3c5
  41f408:	std    
  41f409:	add    cl,al
  41f40b:	lahf   
  41f40c:	das    
  41f40d:	sub    eax,0x42416e2d
  41f412:	ds and eax,0x19315477
  41f418:	icebp  
  41f419:	mov    ebp,0x3c1ea6bf
  41f41e:	adc    al,0x59
  41f420:	lds    ebp,FWORD PTR [ecx+edi*1+0x50d42686]
  41f427:	test   al,0x85
  41f429:	test   eax,0x9e630af7
  41f42e:	std    
  41f42f:	cmp    DWORD PTR [eax],ebx
  41f431:	jno    0x41f47b
  41f433:	push   0xffffffdb
  41f435:	lods   al,BYTE PTR ds:[esi]
  41f436:	aam    0x8c
  41f438:	or     ch,BYTE PTR [ebx+0x42800]
	...
  41f44a:	push   edx
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f457:	into   
  41f458:	in     al,0x22
  41f45a:	retf   
  41f45b:	add    DWORD PTR [ecx],0x0
  41f45e:	jnp    0x41f466
  41f460:	add    BYTE PTR [eax],al
  41f462:	mov    eax,ds:0x73452ff9
  41f467:	dec    esi
  41f468:	pop    es
  41f469:	xlat   BYTE PTR ds:[ebx]
  41f46a:	and    al,0x38
  41f46c:	mov    esi,0xf30e36db
  41f471:	xchg   ebx,eax
  41f472:	xlat   BYTE PTR ds:[ebx]
  41f473:	and    eax,0xdfe24419
  41f478:	loope  0x41f4c3
  41f47a:	mov    ds:0x1dce7994,al
  41f47f:	sti    
  41f480:	sub    bl,BYTE PTR [edx+0x37]
  41f483:	pushf  
  41f484:	fiadd  DWORD PTR ds:0xbcf9387a
  41f48a:	rol    DWORD PTR [ecx],cl
  41f48c:	scas   al,BYTE PTR es:[edi]
  41f48d:	mov    bl,0xb1
  41f48f:	sbb    DWORD PTR [ecx+0x14],edx
  41f492:	and    BYTE PTR [ebx+edi*2-0x75682748],bl
  41f499:	cwde   
  41f49a:	mov    ch,0xd5
  41f49c:	adc    eax,0x48236851
  41f4a1:	mov    bl,0x1
  41f4a3:	or     ah,BYTE PTR [eax]
  41f4a5:	out    0xaf,eax
  41f4a7:	sbb    al,0x7
  41f4a9:	stos   BYTE PTR es:[edi],al
  41f4aa:	jge    0x41f47a
  41f4ac:	neg    DWORD PTR [eax+0x76]
  41f4af:	dec    esi
  41f4b0:	stos   BYTE PTR es:[edi],al
  41f4b1:	push   ds
  41f4b2:	ret    
  41f4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4b4:	cdq    
  41f4b5:	jns    0x41f464
  41f4b7:	dec    ecx
  41f4b8:	test   cl,dl
  41f4ba:	pop    eax
  41f4bb:	sub    esp,DWORD PTR [edi]
  41f4bd:	pop    eax
  41f4be:	inc    edi
  41f4bf:	adc    eax,0xbe423c58
  41f4c4:	fwait
  41f4c5:	hlt    
  41f4c6:	or     ebp,DWORD PTR [edx+0x3f]
  41f4c9:	ret    0x5ecb
  41f4cc:	cwde   
  41f4cd:	je     0x41f4b5
  41f4cf:	bound  edx,QWORD PTR [ebx]
  41f4d1:	jae    0x41f502
  41f4d3:	mov    esi,0x8b04cd9e
  41f4d8:	pop    esi
  41f4d9:	aam    0x81
  41f4db:	mov    DWORD PTR [edi-0x5d59b0f2],edx
  41f4e1:	(bad)  
  41f4e2:	or     al,0xb4
  41f4e4:	mov    ds:0xec244518,al
  41f4e9:	dec    BYTE PTR [ecx]
  41f4eb:	adc    ecx,esi
  41f4ed:	pop    edx
  41f4ee:	repz inc esi
  41f4f0:	shl    cl,0xd8
  41f4f3:	and    eax,0x9cf186b3
  41f4f8:	inc    edx
  41f4f9:	mov    ds:0x74d1b837,eax
  41f4fe:	icebp  
  41f4ff:	imul   ebp,ecx,0xffffffe9
  41f502:	push   0x330654ee
  41f507:	mov    al,0xe6
  41f509:	xor    BYTE PTR [eax+0x6d],al
  41f50c:	or     bl,BYTE PTR [esi-0x5e614df]
  41f512:	cmp    ah,ah
  41f514:	xor    al,0xaf
  41f516:	sub    eax,0x54aae382
  41f51b:	stos   DWORD PTR es:[edi],eax
  41f51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f51d:	add    al,0xa0
  41f51f:	mov    bl,0x5b
  41f521:	sahf   
  41f522:	pop    esi
  41f523:	mov    al,ds:0xcafdf5f0
  41f528:	sub    BYTE PTR ds:0x73c9b154,0x2a
  41f530:	scas   al,BYTE PTR es:[edi]
  41f531:	inc    edi
  41f532:	inc    ebp
  41f533:	xchg   edi,eax
  41f534:	in     eax,dx
  41f535:	mov    al,0x74
  41f537:	inc    esp
  41f538:	add    al,0xce
  41f53a:	out    dx,eax
  41f53b:	mov    ecx,0x6f23f061
  41f540:	sub    BYTE PTR [edi],0x61
  41f543:	leave  
  41f544:	adc    dl,BYTE PTR [eax]
  41f546:	mov    ebp,gs
  41f548:	mov    ecx,0x2407a45e
  41f54d:	inc    edx
  41f54e:	iret   
  41f54f:	mov    esp,0x9b7ea8d1
  41f554:	(bad)  
  41f555:	lea    ebp,[esi+0x26]
  41f558:	outs   dx,DWORD PTR ds:[esi]
  41f559:	nop
  41f55a:	cmp    eax,0x2820b4e3
  41f55f:	mov    cl,0xfb
  41f561:	jp     0x41f4e6
  41f563:	ror    DWORD PTR [edx],0xee
  41f566:	pusha  
  41f567:	fsubp  st(6),st
  41f569:	sar    BYTE PTR [eax+0x51],0xd4
  41f56d:	jmp    0x3e8b935e
  41f572:	(bad)
  41f575:	pop    edx
  41f576:	outs   dx,DWORD PTR ds:[esi]
  41f577:	jmp    0x7677:0x4ee30cd7
  41f57e:	mov    ds:0x70770358,eax
  41f583:	in     eax,dx
  41f584:	sbb    BYTE PTR [ecx],0xf9
  41f587:	mov    dl,BYTE PTR cs:[eax+ebx*4]
  41f58b:	cmp    bl,dl
  41f58d:	pop    eax
  41f58e:	scas   eax,DWORD PTR es:[edi]
  41f58f:	mov    bl,0xda
  41f591:	leave  
  41f592:	dec    ebx
  41f593:	sbb    ch,al
  41f595:	pusha  
  41f596:	mov    ch,0x8
  41f598:	ja     0x41f614
  41f59a:	jbe    0x41f5a4
  41f59c:	mov    bl,BYTE PTR [edx]
  41f59e:	or     eax,0x819c663b
  41f5a3:	es mov dh,0x1c
  41f5a6:	sub    BYTE PTR [edi-0x15],dh
  41f5a9:	pop    edi
  41f5aa:	cmp    ecx,DWORD PTR [edx]
  41f5ac:	les    edi,FWORD PTR [ebp+0x63]
  41f5af:	xor    eax,0xa39131e6
  41f5b4:	fisttp WORD PTR [edx-0x77]
  41f5b7:	inc    ebx
  41f5b8:	add    esp,DWORD PTR [edx+0x1e01be8]
  41f5be:	test   al,0x85
  41f5c0:	jp     0x41f621
  41f5c2:	stos   DWORD PTR es:[edi],eax
  41f5c3:	rcl    BYTE PTR [ebp+0x6c],0xd6
  41f5c7:	(bad)  
  41f5c8:	mov    esp,0x41d791f2
  41f5cd:	adc    al,0x97
  41f5cf:	pop    es
  41f5d0:	ret    0x799a
  41f5d3:	loop   0x41f61f
  41f5d5:	out    0x11,eax
  41f5d7:	xor    ebp,ebp
  41f5d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5da:	(bad)  
  41f5db:	inc    edx
  41f5dc:	hlt    
  41f5dd:	sti    
  41f5de:	cmp    esi,DWORD PTR [ecx-0xe]
  41f5e1:	add    cl,bh
  41f5e3:	fisub  DWORD PTR [ecx+ebx*8+0x47]
  41f5e7:	fmul   DWORD PTR [ebp-0x5487f37e]
  41f5ed:	(bad)  
  41f5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ef:	sub    dl,BYTE PTR [esi+0x58]
  41f5f2:	or     bh,BYTE PTR [esi-0x23]
  41f5f5:	arpl   WORD PTR [esp+edx*1+0xa],di
  41f5f9:	cwde   
  41f5fa:	and    BYTE PTR [eax-0x8],dl
  41f5fd:	outs   dx,BYTE PTR ds:[esi]
  41f5fe:	mov    ch,0xff
  41f600:	ret    0xd5ea
  41f603:	in     eax,dx
  41f604:	arpl   WORD PTR es:[esi],si
  41f607:	jge    0x41f62b
  41f609:	fnstsw WORD PTR [ebx-0x1a]
  41f60c:	mov    ch,BYTE PTR ds:0x5745f185
  41f612:	dec    ebp
  41f613:	mov    ?,edi
  41f615:	dec    esp
  41f616:	adc    al,0x88
  41f618:	mov    dh,0xfd
  41f61a:	push   ss
  41f61b:	outs   dx,BYTE PTR ds:[esi]
  41f61c:	sbb    DWORD PTR ds:0x59525389,ebp
  41f622:	int    0xe2
  41f624:	outs   dx,BYTE PTR ds:[esi]
  41f625:	and    ebp,ecx
  41f627:	sahf   
  41f628:	shl    ebp,1
  41f62a:	cli    
  41f62b:	aas    
  41f62c:	repnz rol esi,cl
  41f62f:	mov    gs,WORD PTR ds:0x70a9a2cc
  41f635:	(bad)  
  41f636:	jne    0x41f61d
  41f638:	ins    DWORD PTR es:[edi],dx
  41f639:	adc    DWORD PTR [ecx],eax
  41f63b:	ficomp DWORD PTR [ecx]
  41f63d:	and    DWORD PTR [ecx],0xffffffa9
  41f640:	xchg   esi,eax
  41f641:	cmp    al,0x2a
  41f643:	dec    esi
  41f644:	ficomp WORD PTR [edx-0x70]
  41f647:	aaa    
  41f648:	iret   
  41f649:	ins    BYTE PTR es:[edi],dx
  41f64a:	sbb    eax,0x6d0a7741
  41f64f:	jg     0x41f64f
  41f651:	pop    ebx
  41f652:	ds cld 
  41f654:	jo     0x41f6a0
  41f656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f657:	cs xor edx,eax
  41f65a:	jmp    0xd090403c
  41f65f:	out    dx,al
  41f660:	sub    BYTE PTR [edi],0x9c
  41f663:	icebp  
  41f664:	and    eax,0xf69d91aa
  41f669:	lock or DWORD PTR [eax-0x13],edi
  41f66d:	gs adc al,0xc2
  41f670:	stos   BYTE PTR es:[edi],al
  41f671:	mov    esi,0x4799943b
  41f676:	scas   al,BYTE PTR es:[edi]
  41f677:	mov    dh,0xa9
  41f679:	pop    esp
  41f67a:	dec    edx
  41f67b:	dec    ecx
  41f67c:	cdq    
  41f67d:	test   dx,bp
  41f680:	cs pop ss
  41f682:	dec    ebp
  41f683:	addr16 jmp 0xad74:0xabc2a49b
  41f68b:	cmp    eax,0xfe1d0814
  41f690:	(bad)  
  41f691:	in     eax,dx
  41f692:	scas   eax,DWORD PTR es:[edi]
  41f693:	push   es
  41f694:	mov    eax,0x35ee5296
  41f699:	je     0x41f636
  41f69b:	pop    ecx
  41f69c:	xor    DWORD PTR [bp-0x63],ecx
  41f6a0:	shl    BYTE PTR gs:[esi-0x1b],0x80
  41f6a5:	retf   0xaa8d
  41f6a8:	retf   0x9b28
  41f6ab:	(bad)  
  41f6ac:	push   ds
  41f6ad:	cmc    
  41f6ae:	push   ds
  41f6af:	out    dx,eax
  41f6b0:	mov    ds:0xd4892fb1,al
  41f6b5:	dec    esp
  41f6b6:	inc    edx
  41f6b7:	pop    edi
  41f6b8:	cmp    al,0xe2
  41f6ba:	and    al,0xe3
  41f6bc:	dec    edi
  41f6bd:	(bad)  
  41f6be:	cmc    
  41f6bf:	and    dh,bh
  41f6c1:	test   eax,0x95d7b50f
  41f6c6:	mov    fs,WORD PTR [ecx]
  41f6c8:	mov    edi,0xba0c35df
  41f6cd:	or     dl,ah
  41f6cf:	xchg   edx,eax
  41f6d0:	jno    0x41f6f4
  41f6d2:	mov    cl,BYTE PTR [eax+ebp*8]
  41f6d5:	sti    
  41f6d6:	cdq    
  41f6d7:	nop
  41f6d8:	dec    ebp
  41f6d9:	stc    
  41f6da:	xor    edx,ecx
  41f6dc:	je     0x41f75b
  41f6de:	(bad)  
  41f6e0:	pop    ss
  41f6e1:	dec    edi
  41f6e2:	mov    ah,0x76
  41f6e4:	mov    ebp,ecx
  41f6e6:	sti    
  41f6e7:	inc    edx
  41f6e8:	in     eax,dx
  41f6e9:	push   ss
  41f6ea:	push   esi
  41f6eb:	mov    cl,0xd1
  41f6ed:	jp     0x41f70f
  41f6ef:	push   esi
  41f6f0:	loop   0x41f677
  41f6f2:	jno    0x41f762
  41f6f4:	cmp    al,0x6
  41f6f6:	xchg   DWORD PTR [eax-0x80],edi
  41f6f9:	mov    ebp,0xc22e2b32
  41f6fe:	cwde   
  41f6ff:	hlt    
  41f700:	dec    ecx
  41f701:	mov    dl,BYTE PTR [ecx+0x6a]
  41f704:	fcomp  QWORD PTR [ebx-0x3f21d7fd]
  41f70a:	mov    ds:0xa4963353,eax
  41f70f:	loop   0x41f747
  41f711:	add    BYTE PTR [edi-0x41372817],ch
  41f717:	std    
  41f718:	sub    eax,0x5e0d536e
  41f71d:	sub    esi,DWORD PTR [eax]
  41f71f:	inc    edx
  41f720:	mov    WORD PTR [ebp+ebp*8+0x5a],?
  41f724:	jno    0x41f776
  41f726:	in     al,dx
  41f727:	idiv   ecx
  41f729:	leave  
  41f72a:	pop    edx
  41f72b:	mov    eax,0x581be956
  41f730:	or     BYTE PTR [ecx+0x17f51913],cl
  41f736:	in     al,dx
  41f737:	mov    esp,0x73dbaac7
  41f73c:	push   esi
  41f73d:	mov    esi,0x479cbda0
  41f742:	adc    BYTE PTR [eax],dh
  41f744:	jbe    0x41f6e5
  41f746:	cmp    ch,ch
  41f748:	push   ebp
  41f749:	mov    esp,0x21136e0b
  41f74e:	hlt    
  41f74f:	sbb    BYTE PTR [ebx],al
  41f751:	(bad)  
  41f753:	pop    ebx
  41f754:	jbe    0x41f732
  41f756:	lds    bp,DWORD PTR [ecx+0x1e]
  41f75a:	jg     0x41f7a6
  41f75c:	inc    esp
  41f75d:	mov    cl,0xf0
  41f75f:	jmp    0xf3bf718c
  41f764:	(bad)  
  41f766:	sbb    ebp,eax
  41f768:	dec    esp
  41f769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f76a:	mov    BYTE PTR [edx+0x61],ch
  41f76d:	jne    0x41f7ab
  41f76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f770:	int3   
  41f771:	pushf  
  41f772:	stos   DWORD PTR es:[edi],eax
  41f773:	nop
  41f774:	push   cs
  41f775:	lods   eax,DWORD PTR ds:[esi]
  41f776:	arpl   WORD PTR [eax+0x5a],dx
  41f779:	in     eax,dx
  41f77a:	fs fs push edx
  41f77d:	mov    cl,0x63
  41f77f:	xchg   ebx,eax
  41f780:	lds    ebx,FWORD PTR [ebx+ecx*8-0x64]
  41f784:	and    edi,DWORD PTR [ecx+0x52]
  41f787:	inc    ebx
  41f788:	jbe    0x41f7f4
  41f78a:	pusha  
  41f78b:	stos   DWORD PTR es:[edi],eax
  41f78c:	and    eax,0xe2d09c79
  41f791:	mov    ah,0xd0
  41f793:	cmp    al,0x8e
  41f795:	out    dx,al
  41f796:	test   edx,esp
  41f798:	pushf  
  41f799:	addr16 ret 0xb6a3
  41f79d:	push   edi
  41f79e:	data16 lahf 
  41f7a0:	inc    edx
  41f7a1:	lock fsub st,st(3)
  41f7a4:	sti    
  41f7a5:	push   cs
  41f7a6:	repz mov ecx,0x211547b
  41f7ac:	sbb    DWORD PTR [edx+0x674a258d],ebx
  41f7b2:	jmp    0x8d67:0x377b00a4
  41f7b9:	mov    eax,ds:0x80a60ac3
  41f7be:	cmp    esi,DWORD PTR [ecx+0x31]
  41f7c1:	in     eax,0x55
  41f7c3:	test   esp,ebp
  41f7c5:	imul   edi,DWORD PTR [edi],0x21584bb
  41f7cb:	(bad)  
  41f7cc:	imul   esi,DWORD PTR [edx+0x356b8252],0x2aba855f
  41f7d6:	inc    ecx
  41f7d7:	mov    bl,0xf3
  41f7d9:	jle    0x41f7ec
  41f7db:	aad    0x24
  41f7dd:	stc    
  41f7de:	sub    al,0x62
  41f7e0:	in     eax,dx
  41f7e1:	pop    ds
  41f7e2:	mov    bl,0xe3
  41f7e4:	pushf  
  41f7e5:	out    0x89,eax
  41f7e7:	and    BYTE PTR [ebx+0x28],dh
  41f7ea:	ret    0xb4e8
  41f7ed:	xchg   edx,eax
  41f7ee:	sbb    ch,BYTE PTR [eax]
  41f7f0:	push   ds
  41f7f1:	shl    DWORD PTR [eax+0x7d],1
  41f7f4:	aam    0x8
  41f7f6:	mov    al,BYTE PTR [eax+0x50]
  41f7f9:	nop
  41f7fa:	inc    eax
  41f7fb:	push   ecx
  41f7fc:	(bad)  
  41f7fd:	mov    esp,0xe5ef0af7
  41f802:	inc    ebx
  41f803:	jmp    0x41f7e3
  41f805:	sbb    al,0x66
  41f807:	cmp    eax,0xc8fb6dc5
  41f80c:	out    0x3f,al
  41f80e:	fcomi  st,st(5)
  41f810:	cdq    
  41f811:	push   ebp
  41f812:	scas   al,BYTE PTR es:[edi]
  41f813:	mov    ecx,0x1d2bedac
  41f818:	(bad)  
  41f819:	cmp    al,0x34
  41f81b:	xchg   ebx,eax
  41f81c:	je     0x41f841
  41f81e:	rcr    edi,cl
  41f820:	enter  0x7654,0x5c
  41f824:	sub    BYTE PTR ds:0xe702aff2,dh
  41f82a:	fiadd  WORD PTR [ebx+ecx*8-0x47]
  41f82e:	inc    ebx
  41f82f:	repz inc ecx
  41f831:	sahf   
  41f832:	mov    fs,WORD PTR [ebp-0x2c]
  41f835:	push   ds
  41f836:	pop    ecx
  41f837:	pop    es
  41f838:	inc    esi
  41f839:	(bad)  
  41f83b:	fcom   DWORD PTR [ebx+ebp*8-0x4aab146]
  41f842:	int    0xb0
  41f844:	mov    edx,0x12127bd6
  41f849:	sub    al,0x85
  41f84b:	iret   
  41f84c:	mov    ebp,DWORD PTR [edx+0xb]
  41f84f:	xchg   edx,eax
  41f850:	rol    DWORD PTR [ecx],1
  41f852:	cdq    
  41f853:	ja     0x41f7e8
  41f855:	std    
  41f856:	xchg   DWORD PTR [edi-0x42],eax
  41f859:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85b:	les    ebp,FWORD PTR [edx-0x33b613e1]
  41f861:	retf   0xac72
  41f864:	faddp  st(4),st
  41f866:	pop    ds
  41f867:	push   cs
  41f868:	xor    esi,DWORD PTR [edx+0x62]
  41f86b:	std    
  41f86c:	or     al,0x3f
  41f86e:	and    eax,0xcac12acb
  41f873:	pop    esi
  41f874:	ins    BYTE PTR es:[edi],dx
  41f875:	push   ss
  41f876:	ins    DWORD PTR es:[edi],dx
  41f877:	out    0x23,eax
  41f879:	xor    dh,cl
  41f87b:	cmp    DWORD PTR ds:0x28e8b91e,0x81a22e9f
  41f885:	ja     0x41f863
  41f887:	sar    BYTE PTR [edi+0x12],1
  41f88a:	cdq    
  41f88b:	jge    0x41f86c
  41f88d:	ja     0x41f81c
  41f88f:	or     al,cl
  41f891:	loope  0x41f850
  41f893:	xlat   BYTE PTR ds:[ebx]
  41f894:	pop    edi
  41f895:	inc    edx
  41f896:	sti    
  41f897:	retf   
  41f898:	leave  
  41f899:	cs ret 0xa38e
  41f89d:	dec    eax
  41f89e:	into   
  41f89f:	in     al,0x7e
  41f8a1:	(bad)  
  41f8a2:	pop    eax
  41f8a3:	mov    al,ds:0x1038f64
  41f8a8:	push   ecx
  41f8a9:	(bad)  
  41f8aa:	xor    eax,ecx
  41f8ac:	out    dx,eax
  41f8ad:	aad    0xd7
  41f8af:	inc    ebp
  41f8b0:	xchg   esi,eax
  41f8b1:	jle    0x41f8e9
  41f8b3:	dec    esp
  41f8b4:	ret    
  41f8b5:	test   eax,0xf7acd5f7
  41f8ba:	mov    ds:0xd5667c09,al
  41f8bf:	out    dx,al
  41f8c0:	jb     0x41f91a
  41f8c2:	psadbw mm2,QWORD PTR [ecx+esi*1-0x29]
  41f8c7:	enter  0xd10,0x6b
  41f8cb:	inc    esi
  41f8cc:	enter  0x25e4,0xe2
  41f8d0:	scas   eax,DWORD PTR es:[edi]
  41f8d1:	and    al,0x56
  41f8d3:	mov    BYTE PTR [ebx-0xda197f6],ch
  41f8d9:	add    eax,DWORD PTR [ecx-0x5eae44ed]
  41f8df:	out    dx,al
  41f8e0:	rcr    edi,1
  41f8e2:	call   0xaa9e:0x28dab53d
  41f8e9:	jge    0x41f8ca
  41f8eb:	int3   
  41f8ec:	sub    bh,BYTE PTR [edx-0x519d73c6]
  41f8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f3:	rcr    esp,1
  41f8f5:	mov    bl,0xb5
  41f8f7:	call   0x1c52b9aa
  41f8fc:	mov    ebx,esp
  41f8fe:	call   0x43ecfe6d
  41f903:	jno    0x41f89d
  41f905:	jmp    0x41f943
  41f907:	adc    BYTE PTR [edx-0x359e30d7],bl
  41f90d:	sbb    ebx,esi
  41f90f:	mov    edx,0x48a1182c
  41f914:	fsubr  DWORD PTR [ecx-0x17]
  41f917:	push   ss
  41f918:	jp     0x41f8e4
  41f91a:	cmp    al,0x1
  41f91c:	ja     0x41f8d1
  41f91e:	shl    DWORD PTR [ecx+0x4555da4],1
  41f924:	fstp   DWORD PTR [edi+0x7b]
  41f927:	pushf  
  41f928:	popf   
  41f929:	dec    ebp
  41f92a:	repz cmp eax,0x2c1a9af9
  41f930:	xor    eax,0xffe9dfce
  41f935:	inc    esi
  41f936:	jge    0x41f971
  41f938:	add    BYTE PTR [edi-0x74],0x57
  41f93c:	cs cmc 
  41f93e:	(bad)  
  41f93f:	and    DWORD PTR [edi-0x6af9c9cc],ebx
  41f945:	sbb    cl,BYTE PTR [ebx]
  41f947:	lock push eax
  41f949:	or     dh,BYTE PTR [eax]
  41f94b:	sbb    edx,edx
  41f94d:	js     0x41f92f
  41f94f:	pusha  
  41f950:	mov    al,0xa8
  41f952:	cmovg  esi,DWORD PTR [edi+ebp*8+0x12]
  41f957:	js     0x41f947
  41f959:	xor    eax,0x5dc08182
  41f95e:	ret    0x94fc
  41f961:	cmp    cl,0xfa
  41f964:	arpl   WORD PTR [ebp-0x1a],sp
  41f967:	je     0x41f914
  41f969:	jge    0x41f9c2
  41f96b:	xor    bh,dl
  41f96d:	or     edx,DWORD PTR ds:0x1a6cbca4
  41f973:	dec    ebp
  41f974:	pop    eax
  41f975:	enter  0x47cf,0x9d
  41f979:	dec    ecx
  41f97a:	fs dec edx
  41f97c:	lods   eax,DWORD PTR ds:[esi]
  41f97d:	add    BYTE PTR [edi+0x6a7fb2cc],0x33
  41f984:	adc    dh,BYTE PTR [ebp-0xa87120b]
  41f98a:	xchg   BYTE PTR [edx+0x2a],bh
  41f98d:	shr    BYTE PTR [esi],1
  41f98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f990:	xchg   ebp,eax
  41f991:	mov    ss,WORD PTR [ebp+0x7c29738e]
  41f997:	push   cs
  41f998:	mov    ds:0x4b6bf1ee,al
  41f99d:	mov    ebx,0x6abd2945
  41f9a2:	jns    0x41f9ed
  41f9a4:	jbe    0x41f963
  41f9a6:	sub    al,BYTE PTR [esi-0x58]
  41f9a9:	pop    ds
  41f9aa:	sar    BYTE PTR [eax+0x77],cl
  41f9ad:	es jle 0x41fa17
  41f9b0:	rcl    DWORD PTR [eax],1
  41f9b2:	or     al,0xbd
  41f9b4:	and    BYTE PTR [edi*4-0x72bd54b8],dl
  41f9bb:	(bad)  
  41f9bc:	in     al,dx
  41f9bd:	retf   0x3c69
  41f9c0:	loopne 0x41f94b
  41f9c2:	mov    ah,0x3f
  41f9c4:	dec    edx
  41f9c5:	pop    esi
  41f9c6:	xor    BYTE PTR ds:0x8889f668,cl
  41f9cc:	imul   ecx,DWORD PTR [ebp-0x448ac548],0x64
  41f9d3:	lahf   
  41f9d4:	add    DWORD PTR ds:0x6a999348,0xffffffaa
  41f9db:	xchg   ecx,eax
  41f9dc:	mov    eax,DWORD PTR [edx+edi*2]
  41f9df:	pop    esi
  41f9e0:	mov    eax,ebp
  41f9e2:	push   esi
  41f9e3:	xchg   esp,eax
  41f9e4:	cmp    ch,bl
  41f9e6:	jp     0x41fa0f
  41f9e8:	mov    esi,0xa0ecd531
  41f9ed:	push   es
  41f9ee:	lods   al,BYTE PTR ds:[esi]
  41f9ef:	jbe    0x41fa12
  41f9f1:	scas   ax,WORD PTR es:[edi]
  41f9f3:	shl    BYTE PTR [eax-0x19],cl
  41f9f6:	rol    DWORD PTR [ebx],0x30
  41f9f9:	enter  0x7eb9,0x17
  41f9fd:	mov    edi,0xbcfcf491
  41fa02:	(bad)  
  41fa03:	xor    eax,0x9c73a6fd
  41fa08:	iret   
  41fa09:	cdq    
  41fa0a:	mov    ds:0xd958c6ec,eax
  41fa0f:	out    dx,eax
  41fa10:	loop   0x41fa30
  41fa12:	into   
  41fa13:	or     esi,DWORD PTR [edi-0x44]
  41fa16:	or     eax,0xa03d90ad
  41fa1b:	pushf  
  41fa1c:	(bad)  
  41fa1d:	out    0x5d,eax
  41fa1f:	xchg   ebp,eax
  41fa20:	and    esp,DWORD PTR [esi+0x12]
  41fa23:	iret   
  41fa24:	jne    0x41fa52
  41fa26:	aaa    
  41fa27:	in     eax,0xc7
  41fa29:	mov    DWORD PTR [edx],ebp
  41fa2b:	push   0xffffff81
  41fa2d:	add    BYTE PTR [eax+0x4fc1668d],ah
  41fa33:	or     DWORD PTR [esp+edx*8],ebp
  41fa36:	sbb    eax,0x64de6289
  41fa3b:	sub    ecx,DWORD PTR [eax]
  41fa3d:	mov    esi,0x26cdcb3e
  41fa42:	cmc    
  41fa43:	ins    DWORD PTR es:[edi],dx
  41fa44:	sti    
  41fa45:	mov    ecx,DWORD PTR [edi]
  41fa47:	nop
  41fa48:	retf   
  41fa49:	in     eax,0xdf
  41fa4b:	jb     0x41fa05
  41fa4d:	mov    edx,0x1d807e7b
  41fa52:	shr    BYTE PTR [ebx],1
  41fa54:	loop   0x41fa2a
  41fa56:	jg     0x41fa23
  41fa58:	mov    ebp,0x7cb7a59b
  41fa5d:	inc    edi
  41fa5e:	and    ah,BYTE PTR [esi]
  41fa60:	cmp    edi,0xff672509
  41fa66:	aas    
  41fa67:	dec    edx
  41fa68:	xor    eax,0xf0196d79
  41fa6d:	sti    
  41fa6e:	xor    ebp,DWORD PTR [eax]
  41fa70:	sbb    edi,edx
  41fa72:	add    eax,0xfb65dbad
  41fa77:	or     al,0x68
  41fa79:	ret    
  41fa7a:	mov    WORD PTR [ebp+0x506db410],cs
  41fa80:	xor    ebp,DWORD PTR ds:0x1d8a
  41fa85:	mov    eax,ds:0x637150fc
  41fa8a:	jb     0x41faca
  41fa8c:	push   ss
  41fa8d:	bound  ebp,QWORD PTR ds:0x80760570
  41fa93:	imul   ecx,DWORD PTR [edx],0x6
  41fa96:	push   esi
  41fa97:	aaa    
  41fa98:	or     al,0x1
  41fa9a:	je     0x41fb0e
  41fa9c:	pop    es
  41fa9d:	pop    ss
  41fa9e:	repnz and DWORD PTR [ecx],ecx
  41faa1:	push   ebp
  41faa2:	cmp    BYTE PTR [edi+eax*8],dh
  41faa5:	loopne 0x41fad6
  41faa7:	retf   
  41faa8:	fisttp QWORD PTR ds:0x5fce8ab1
  41faae:	push   edx
  41faaf:	or     esi,DWORD PTR [eax]
  41fab1:	mul    DWORD PTR [ecx+ecx*2+0x3d]
  41fab5:	add    eax,0x6bd114df
  41faba:	mov    edx,0x4d1765e1
  41fabf:	hlt    
  41fac0:	ret    
  41fac1:	jl     0x41fab9
  41fac3:	inc    ebx
  41fac4:	stos   DWORD PTR es:[edi],eax
  41fac5:	push   ebp
  41fac6:	jno    0x41fafe
  41fac8:	(bad)  
  41fac9:	pop    edx
  41faca:	adc    ah,BYTE PTR [eax+0x3f]
  41facd:	enter  0x943a,0x37
  41fad1:	and    eax,0x2482c408
  41fad6:	aaa    
  41fad7:	fwait
  41fad8:	mov    eax,0x5ad5936
	...
  41fae9:	add    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	mul    BYTE PTR ds:0x8a46d49d
  41fafc:	add    DWORD PTR [eax],eax
  41fafe:	jnp    0x41fb06
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	sub    ebx,edx
  41fb04:	dec    ebx
  41fb05:	or     BYTE PTR [edx+0x73],0xde
  41fb09:	fistp  DWORD PTR [ecx]
  41fb0b:	or     BYTE PTR [ebp+0x68e02572],ch
  41fb11:	repz adc DWORD PTR [esi],ecx
  41fb14:	or     al,0x63
  41fb16:	outs   dx,DWORD PTR ds:[esi]
  41fb17:	push   0x37bcd5a5
  41fb1c:	add    BYTE PTR [esi+0x1d],dl
  41fb1f:	cli    
  41fb20:	in     al,0x69
  41fb22:	out    0xc8,eax
  41fb24:	sub    DWORD PTR [esi+0x3e],0x637884bb
  41fb2b:	mov    bl,0xe5
  41fb2d:	pop    edx
  41fb2e:	out    0xf6,eax
  41fb30:	mov    dh,0xbc
  41fb32:	mov    WORD PTR [ebx],ss
  41fb34:	imul   ebx,ebx,0xffffffd1
  41fb37:	ret    
  41fb38:	rol    BYTE PTR [edx],cl
  41fb3a:	push   ds
  41fb3b:	push   es
  41fb3c:	fs inc ebx
  41fb3e:	outs   dx,DWORD PTR ds:[esi]
  41fb3f:	sub    al,0xd3
  41fb41:	fsubr  DWORD PTR [ecx]
  41fb43:	jp     0x41fb1f
  41fb45:	ins    DWORD PTR es:[edi],dx
  41fb46:	inc    eax
  41fb47:	dec    ebx
  41fb48:	fucomp st(2)
  41fb4a:	cmp    eax,0xe7a5ea26
  41fb4f:	dec    ecx
  41fb50:	fld    DWORD PTR [edi+0x7e]
  41fb53:	mov    ds:0x668c1c3b,eax
  41fb58:	mov    bh,0x5a
  41fb5a:	adc    DWORD PTR [edx],0x5f
  41fb5d:	inc    esi
  41fb5e:	add    ebx,edx
  41fb60:	in     al,dx
  41fb61:	fld    QWORD PTR [edx-0x44]
  41fb64:	mov    ch,0x3f
  41fb66:	shr    BYTE PTR [esi-0x7b],0xa2
  41fb6a:	imul   esp,DWORD PTR [ebx+0x3e86a27e],0xf2b48af7
  41fb74:	in     al,dx
  41fb75:	mov    ebx,0x46200d0e
  41fb7a:	sbb    eax,0x5bf3e6cf
  41fb7f:	xor    eax,0x21dd760e
  41fb84:	sti    
  41fb85:	xchg   ebx,eax
  41fb86:	ss (bad) 
  41fb88:	retf   
  41fb89:	rol    DWORD PTR [edx],1
  41fb8b:	test   al,0xc9
  41fb8d:	xchg   esi,eax
  41fb8e:	mov    edx,0x3a830224
  41fb93:	inc    edx
  41fb94:	repnz test al,0x46
  41fb97:	pop    ebx
  41fb98:	and    bh,BYTE PTR [edi+0x2f]
  41fb9b:	pop    DWORD PTR [edi+0x65d15087]
  41fba1:	mov    esi,0xef040fab
  41fba6:	out    dx,eax
  41fba7:	daa    
  41fba8:	add    ch,BYTE PTR [ebp-0x233bb189]
  41fbae:	mov    ebx,0x962e9cc4
  41fbb3:	mov    edi,0x3d89dad1
  41fbb8:	add    esi,DWORD PTR [eax-0x60]
  41fbbb:	mov    eax,0x5f1613ae
  41fbc0:	fadd   QWORD PTR [ebp-0x16]
  41fbc3:	cld    
  41fbc4:	dec    edi
  41fbc5:	daa    
  41fbc6:	adc    bh,bl
  41fbc8:	es jmp 0x5fb5:0x2ffdbb79
  41fbd0:	mov    ds:0x27536747,al
  41fbd5:	fcomp  DWORD PTR [edi+0x715ee7d3]
  41fbdb:	pushf  
  41fbdc:	xor    edx,ebx
  41fbde:	or     eax,0x713b7284
  41fbe3:	fwait
  41fbe4:	mov    BYTE PTR [esi],bh
  41fbe6:	rcl    BYTE PTR [ebx+0x65],1
  41fbe9:	xchg   esi,eax
  41fbea:	pop    ds
  41fbeb:	mov    eax,ds:0xab31dd66
  41fbf0:	fwait
  41fbf1:	lea    ebp,[esp+edx*2+0xd5b006a]
  41fbf8:	mov    DWORD PTR [esi+0x16],edx
  41fbfb:	or     cl,BYTE PTR [esp+ebx*2-0x3112129e]
  41fc02:	or     al,0xd6
  41fc04:	inc    edi
  41fc05:	repz rcr BYTE PTR [edx+eax*4-0x73],1
  41fc0a:	out    dx,al
  41fc0b:	xlat   BYTE PTR ds:[ebx]
  41fc0c:	ins    DWORD PTR es:[edi],dx
  41fc0d:	xor    DWORD PTR [ebx-0x49],ebp
  41fc10:	inc    eax
  41fc11:	jmp    0x6eb4:0x6d567eb8
  41fc18:	inc    ebx
  41fc19:	cli    
  41fc1a:	dec    ebx
  41fc1b:	pop    edx
  41fc1c:	mov    ebx,0xd4227d5e
  41fc21:	dec    esp
  41fc22:	or     al,0xa7
  41fc24:	fld    DWORD PTR [esi+0x51]
  41fc27:	dec    edx
  41fc28:	imul   esp,DWORD PTR ds:0x2d9f5852,0xaabf5210
  41fc32:	mov    ch,0x5e
  41fc34:	adc    al,0xe8
  41fc36:	mov    esp,0xdcd3d2f2
  41fc3b:	cmc    
  41fc3c:	pop    edi
  41fc3d:	adc    al,bl
  41fc3f:	sub    eax,0xfd71188d
  41fc44:	aas    
  41fc45:	pop    esi
  41fc46:	lock add cl,BYTE PTR [ecx-0xc]
  41fc4a:	stos   DWORD PTR es:[edi],eax
  41fc4b:	out    dx,al
  41fc4c:	or     al,0x5
  41fc4e:	arpl   sp,ax
  41fc50:	cmp    cl,BYTE PTR [ebp+0x20]
  41fc53:	and    eax,0x2f8f72f4
  41fc58:	mov    edi,0x1b881592
  41fc5d:	dec    ebp
  41fc5e:	test   DWORD PTR [eax-0x1cbf5e4d],edi
  41fc64:	inc    esi
  41fc65:	mov    bh,0xd5
  41fc67:	xchg   edi,eax
  41fc68:	in     al,dx
  41fc69:	or     BYTE PTR [ecx+0x19],bl
  41fc6c:	xor    DWORD PTR [esi+0x1c61b9cf],esp
  41fc72:	mov    ebx,0x3430b613
  41fc77:	das    
  41fc78:	mov    ch,BYTE PTR [eax+0x78dc2199]
  41fc7e:	mov    esp,0x90052200
  41fc83:	and    al,0x11
  41fc85:	rol    DWORD PTR [ecx+0x30],1
  41fc88:	imul   DWORD PTR [edi]
  41fc8a:	pop    edi
  41fc8b:	(bad)  
  41fc8c:	jle    0x41fc7c
  41fc8e:	lods   eax,DWORD PTR ds:[esi]
  41fc8f:	daa    
  41fc90:	(bad)  
  41fc91:	mov    esp,0x22b65669
  41fc96:	push   ebp
  41fc97:	cmp    esi,edi
  41fc99:	repz dec ebp
  41fc9b:	mov    ds:0x890cd219,al
  41fca0:	and    esp,eax
  41fca2:	pop    eax
  41fca3:	inc    eax
  41fca4:	inc    ebp
  41fca5:	xor    al,0x43
  41fca7:	in     eax,dx
  41fca8:	test   DWORD PTR [ebx+0x42ff511c],ebp
  41fcae:	xor    esi,DWORD PTR [edx*2-0x701335a7]
  41fcb5:	cmp    esp,DWORD PTR [ebp+0x5d]
  41fcb8:	dec    eax
  41fcb9:	lods   al,BYTE PTR ds:[esi]
  41fcba:	(bad)  
  41fcbc:	ror    edi,cl
  41fcbe:	pop    ss
  41fcbf:	shl    DWORD PTR [esi-0x56],1
  41fcc2:	scas   eax,DWORD PTR es:[edi]
  41fcc3:	js     0x41fc68
  41fcc5:	or     al,0xb9
  41fcc7:	and    al,0xe1
  41fcc9:	push   0x4206dfbc
  41fcce:	xor    DWORD PTR [edx],edi
  41fcd0:	cmp    eax,0x6ec653b0
  41fcd5:	fxch   st(7)
  41fcd7:	push   esi
  41fcd8:	jbe    0x41fcdd
  41fcda:	cmp    cl,BYTE PTR [edx]
  41fcdc:	test   al,0xda
  41fcde:	fwait
  41fcdf:	xor    DWORD PTR [eax-0x4c],ecx
  41fce2:	(bad)  [edx+0x61ad7421]
  41fce8:	sbb    eax,0x1202b13f
  41fced:	ror    DWORD PTR [ebx-0x182a377],1
  41fcf3:	cwde   
  41fcf4:	dec    esi
  41fcf5:	add    BYTE PTR [edx-0xdd4ffb1],bh
  41fcfb:	fmul   QWORD PTR [ecx]
  41fcfd:	sub    ecx,ecx
  41fcff:	mov    eax,ds:0xa838074
  41fd04:	iret   
  41fd05:	and    BYTE PTR [esi+0x5e],bh
  41fd08:	iret   
  41fd09:	pop    esi
  41fd0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0b:	add    BYTE PTR [edi+0x41],bl
  41fd0e:	scas   eax,DWORD PTR es:[edi]
  41fd0f:	iret   
  41fd10:	mov    edx,?
  41fd12:	mov    ch,0x80
  41fd14:	cmp    BYTE PTR [esi],cl
  41fd16:	add    al,0x70
  41fd18:	or     esi,DWORD PTR [edi+0x4]
  41fd1b:	add    ch,cl
  41fd1d:	nop
  41fd1e:	hlt    
  41fd1f:	or     eax,0x3d9abd88
  41fd24:	pop    ds
  41fd25:	scas   al,BYTE PTR es:[edi]
  41fd26:	cdq    
  41fd27:	(bad)  
  41fd28:	push   eax
  41fd29:	xor    BYTE PTR [edx+0x2a],0x60
  41fd2d:	dec    ebp
  41fd2e:	mov    eax,DWORD PTR [ebp-0x7]
  41fd31:	or     al,0xad
  41fd33:	adc    eax,0x36182665
  41fd38:	adc    BYTE PTR [esi+0x2c01338],dl
  41fd3e:	out    0x9f,al
  41fd40:	outs   dx,BYTE PTR ds:[esi]
  41fd41:	cmp    BYTE PTR [eiz*4+0x5415f7fb],bh
  41fd48:	test   DWORD PTR [edx],eax
  41fd4a:	cmp    DWORD PTR [edx],ecx
  41fd4c:	iret   
  41fd4d:	sar    dh,cl
  41fd4f:	rcr    BYTE PTR [eax+0x1c1c873c],cl
  41fd55:	test   edi,ecx
  41fd57:	shl    dh,cl
  41fd59:	nop
  41fd5a:	pop    ecx
  41fd5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd5c:	arpl   WORD PTR [edx-0x2c],bx
  41fd5f:	sbb    ecx,DWORD PTR [esi]
  41fd61:	xchg   DWORD PTR [edx+0x31],edi
  41fd64:	lea    edi,[ebx]
  41fd66:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd68:	xchg   esi,eax
  41fd69:	mov    bh,0x66
  41fd6b:	in     eax,0x7d
  41fd6d:	repnz in al,dx
  41fd6f:	or     al,0x6
  41fd71:	inc    eax
  41fd72:	jns    0x41fd61
  41fd74:	call   0xe47df16f
  41fd79:	(bad)  
  41fd7a:	mov    edx,0x187472f
  41fd7f:	jnp    0x41fdbb
  41fd81:	dec    ebp
  41fd82:	cld    
  41fd83:	das    
  41fd84:	icebp  
  41fd85:	jl     0x41fde5
  41fd87:	jmp    0x41fdf9
  41fd89:	xor    eax,0x3239abd3
  41fd8e:	inc    ebp
  41fd8f:	and    ch,BYTE PTR [edi-0x30]
  41fd92:	mov    dh,0x6
  41fd94:	jge    0x41fdc0
  41fd96:	daa    
  41fd97:	mov    eax,ds:0x43297d6d
  41fd9d:	dec    edx
  41fd9e:	dec    edi
  41fd9f:	mov    cl,0x69
  41fda1:	push   edx
  41fda2:	shl    DWORD PTR [edi],0x58
  41fda5:	xor    BYTE PTR [ecx],0x29
  41fda8:	(bad)  
  41fda9:	pop    ss
  41fdaa:	les    edi,FWORD PTR [ecx+0x1fb65b5e]
  41fdb0:	xchg   esp,eax
  41fdb1:	ror    BYTE PTR [edx+0x4130515f],1
  41fdb7:	sub    edx,esp
  41fdb9:	sahf   
  41fdba:	push   esi
  41fdbb:	xor    eax,0x77fdabc3
  41fdc0:	push   ebp
  41fdc1:	push   ecx
  41fdc2:	repz mov edi,0x7120a8e1
  41fdc8:	sbb    edi,edi
  41fdca:	jmp    0x41fe1a
  41fdcc:	rcl    eax,cl
  41fdce:	cmp    eax,edi
  41fdd0:	and    DWORD PTR [ecx],edx
  41fdd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd3:	xor    ebp,DWORD PTR [ebp+0x21]
  41fdd6:	add    BYTE PTR [ecx],dh
  41fdd8:	ficomp WORD PTR [edi-0x1d]
  41fddb:	lods   al,BYTE PTR ds:[esi]
  41fddc:	dec    esp
  41fddd:	rol    BYTE PTR [ebx],1
  41fddf:	cmp    esi,DWORD PTR ds:0xf3f11189
  41fde5:	fstp   TBYTE PTR [ebp+ecx*8-0x1765f733]
  41fdec:	jge    0x41fe6c
  41fdee:	jl     0x41fe1c
  41fdf0:	inc    eax
  41fdf1:	push   esp
  41fdf2:	inc    edx
  41fdf3:	xchg   esi,eax
  41fdf4:	and    ebp,DWORD PTR [edx-0x54437ac8]
  41fdfa:	pushf  
  41fdfb:	push   ebp
  41fdfc:	and    ebx,esp
  41fdfe:	push   es
  41fdff:	jne    0x41fd95
  41fe01:	fld    DWORD PTR [edi-0x9133ae5]
  41fe07:	test   esi,edi
  41fe09:	add    eax,0xc770e1db
  41fe0e:	dec    ebp
  41fe0f:	cwde   
  41fe10:	push   cs
  41fe11:	jno    0x41fe47
  41fe13:	add    BYTE PTR [edx],bl
  41fe15:	push   ebx
  41fe16:	cmp    esp,DWORD PTR [esp+ebp*2+0x7a]
  41fe1a:	jbe    0x41fde8
  41fe1c:	std    
  41fe1d:	scas   eax,DWORD PTR es:[edi]
  41fe1e:	dec    esi
  41fe1f:	cdq    
  41fe20:	sar    ch,0xe8
  41fe23:	(bad)  
  41fe24:	lods   al,BYTE PTR ds:[esi]
  41fe25:	pop    edi
  41fe26:	ror    ebx,1
  41fe28:	jo     0x41fe8b
  41fe2a:	sbb    al,0x0
  41fe2c:	mov    al,ds:0x8f5a20f0
  41fe31:	push   edx
  41fe32:	int3   
  41fe33:	loop   0x41fe85
  41fe35:	xor    ch,0xc9
  41fe38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe39:	add    ecx,DWORD PTR [ebp+ecx*4-0x4e556503]
  41fe40:	sub    ecx,DWORD PTR [edx]
  41fe42:	fldenv [eax]
  41fe44:	(bad)  
  41fe45:	imul   ecx,DWORD PTR [esi-0x4c],0xffffffd0
  41fe49:	or     al,0x25
  41fe4b:	aad    0xf2
  41fe4d:	cs pop esp
  41fe4f:	sub    edi,DWORD PTR [eax-0x438d10e]
  41fe55:	sbb    DWORD PTR [ebp-0x56],ebp
  41fe58:	out    dx,al
  41fe59:	popf   
  41fe5a:	seta   BYTE PTR [esi+0x5f28b8d]
  41fe61:	sbb    BYTE PTR [ebx-0x79],0xee
  41fe65:	adc    al,0x47
  41fe67:	into   
  41fe68:	ins    DWORD PTR es:[edi],dx
  41fe69:	outs   dx,BYTE PTR ds:[esi]
  41fe6a:	xor    DWORD PTR [ebx+0x65],ecx
  41fe6d:	xchg   esi,eax
  41fe6e:	mov    bl,0x9e
  41fe70:	nop
  41fe71:	hlt    
  41fe72:	imul   ebx,DWORD PTR [ebx],0x75
  41fe75:	imul   esi,DWORD PTR [ecx],0xffffff8d
  41fe78:	jnp    0x41fe2d
  41fe7a:	push   ecx
  41fe7b:	and    DWORD PTR [edi],eax
  41fe7d:	xchg   BYTE PTR [eax+ebx*8+0x34],bl
  41fe81:	or     eax,esi
  41fe83:	bound  esp,QWORD PTR [edi]
  41fe85:	hlt    
  41fe86:	into   
  41fe87:	push   ebp
  41fe88:	jnp    0x41fe85
  41fe8a:	in     al,dx
  41fe8b:	aad    0x99
  41fe8d:	xor    edi,edx
  41fe8f:	lods   al,BYTE PTR ds:[esi]
  41fe90:	out    dx,al
  41fe91:	fld    st(3)
  41fe93:	call   0xe2202975
  41fe98:	lods   al,BYTE PTR ds:[esi]
  41fe99:	sbb    esi,DWORD PTR [ebx+0x2f]
  41fe9c:	ret    
  41fe9d:	je     0x41fead
  41fe9f:	mov    ebx,0xb963639a
  41fea4:	(bad)  
  41fea5:	fld    QWORD PTR ds:0x62be3a91
  41feac:	xchg   ebp,eax
  41fead:	or     edx,DWORD PTR [ebp-0x12fe17f5]
  41feb3:	cmp    eax,0xb7a33e23
  41feb8:	xchg   esi,eax
  41feb9:	shl    DWORD PTR [eax+0x5e],cl
  41febc:	lods   al,BYTE PTR ds:[esi]
  41febd:	(bad)  
  41febe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41febf:	adc    BYTE PTR [edi+0xd],al
  41fec2:	clc    
  41fec3:	push   esi
  41fec4:	ins    DWORD PTR es:[edi],dx
  41fec5:	xchg   DWORD PTR [esi],esi
  41fec7:	mov    esi,DWORD PTR [eax]
  41fec9:	stc    
  41feca:	adc    eax,0x10eee9f8
  41fecf:	retf   0xd67c
  41fed2:	(bad)  
  41fed3:	int3   
  41fed4:	or     bl,cl
  41fed6:	inc    edx
  41fed7:	gs repnz sbb al,0x22
  41fedb:	and    ecx,edi
  41fedd:	pop    edx
  41fede:	xor    eax,0xb49ef166
  41fee3:	add    cl,bh
  41fee5:	outs   dx,BYTE PTR ds:[esi]
  41fee6:	pop    ebx
  41fee7:	and    eax,0xafae3e6
  41feec:	clc    
  41feed:	imul   ebp,eax,0xffffffe8
  41fef0:	fld    QWORD PTR [edi+0x4bcc7d87]
  41fef6:	add    al,BYTE PTR [ebx-0x1fe31988]
  41fefc:	and    ch,BYTE PTR [edx]
  41fefe:	mov    ah,0xb3
  41ff00:	in     eax,0xa7
  41ff02:	idiv   DWORD PTR [esi+0x48a3282a]
  41ff08:	cs cs cmp ebp,esi
  41ff0c:	ds xor eax,0xef265d5a
  41ff12:	rol    DWORD PTR [esp+eiz*2+0x76],cl
  41ff16:	jae    0x41fead
  41ff18:	leave  
  41ff19:	mov    ds,WORD PTR [edi]
  41ff1b:	repnz imul ebx,DWORD PTR [ebx-0x22efcc37],0x190e2c80
  41ff26:	adc    esi,edx
  41ff28:	pop    esp
  41ff29:	cmp    DWORD PTR [edx],edx
  41ff2b:	and    DWORD PTR [ebx+0x2211734f],ebp
  41ff31:	mov    edi,DWORD PTR ds:0x54a6b596
  41ff37:	sbb    al,0xb
  41ff39:	test   DWORD PTR [edx+eiz*8-0x35],0x17e6af2c
  41ff41:	or     al,0xed
  41ff43:	pop    edi
  41ff44:	jmp    0x41ff94
  41ff46:	and    eax,0x7aa1b755
  41ff4b:	mov    ch,0x39
  41ff4d:	lds    edi,FWORD PTR [edi+0x38]
  41ff50:	sub    eax,0x674f970
  41ff55:	jecxz  0x41ffad
  41ff57:	adc    eax,0xdfe37c23
  41ff5c:	imul   DWORD PTR [eax+0x7d]
  41ff5f:	pop    ds
  41ff60:	sahf   
  41ff61:	mov    edi,0x1b5e7c02
  41ff66:	imul   edi,DWORD PTR [edi+0x7dc2d0fc],0xffffffaf
  41ff6d:	mov    ebp,0xbab2e449
  41ff72:	xchg   ecx,eax
  41ff73:	aam    0x79
  41ff75:	push   esp
  41ff76:	in     al,0x23
  41ff78:	jmp    0xdbbe:0xa975d6b9
  41ff7f:	adc    cl,bl
  41ff81:	iret   
  41ff82:	call   0xc66f:0x2f02b28a
  41ff89:	shl    ebp,cl
  41ff8b:	or     eax,0x6bc2582
  41ff90:	mov    al,ds:0x63400df5
  41ff95:	mov    DWORD PTR ds:0x214a9d89,ebx
  41ff9b:	mov    cl,0x85
  41ff9d:	pop    esi
  41ff9e:	adc    dl,BYTE PTR [ebp-0x20d3181c]
  41ffa4:	addr16 inc edi
  41ffa6:	ss dec edi
  41ffa8:	pop    ebx
  41ffa9:	mov    esp,0x39e2e9bd
  41ffae:	lock je 0x41ffd1
  41ffb1:	(bad)  
  41ffb2:	pop    edi
  41ffb3:	ss jle 0x41fff0
  41ffb6:	inc    ebx
  41ffb7:	in     al,dx
  41ffb8:	lds    esp,FWORD PTR [edi-0x56]
  41ffbb:	pop    ebp
  41ffbc:	and    ch,BYTE PTR [eax]
  41ffbe:	mov    edi,0xd3d3dbd1
  41ffc3:	ins    DWORD PTR es:[edi],dx
  41ffc4:	or     BYTE PTR [eax-0x2f],ch
  41ffc7:	outs   dx,BYTE PTR ds:[esi]
  41ffc8:	stc    
  41ffc9:	mov    al,0xcf
  41ffcb:	or     BYTE PTR [ecx],dl
  41ffcd:	add    cl,BYTE PTR [edx]
  41ffcf:	lods   eax,DWORD PTR ds:[esi]
  41ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffd1:	push   0xffffffaa
  41ffd3:	add    DWORD PTR [edi-0x6b],esi
  41ffd6:	jnp    0x42004e
  41ffd8:	push   eax
  41ffd9:	or     bh,BYTE PTR [edi+ebp*1]
  41ffdc:	in     eax,0xa
  41ffde:	inc    eax
  41ffdf:	retf   0xb8f3
  41ffe2:	mov    eax,0xd350c773
  41ffe7:	pushf  
  41ffe8:	dec    edx
  41ffe9:	iret   
  41ffea:	mov    al,ds:0x77cf5524
  41ffef:	mov    WORD PTR [edi-0x44],gs
  41fff2:	les    ecx,FWORD PTR [ecx-0x35]
  41fff5:	add    BYTE PTR [ebp*2+0x474e2fe6],bh
  41fffc:	inc    ebx
  41fffd:	mov    WORD PTR [esi+0x45],ds
  420000:	push   es
  420001:	or     al,0x45
  420003:	jg     0x420021
  420005:	cwde   
  420006:	shl    BYTE PTR [ebp-0xa],0xd1
  42000a:	cli    
  42000b:	add    DWORD PTR [edx],esp
  42000d:	je     0x42005a
  42000f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420010:	cld    
  420011:	call   0x32cbcf73
  420016:	pop    ebp
  420017:	or     eax,0xe8f94f40
  42001c:	pop    ss
  42001d:	stos   BYTE PTR es:[edi],al
  42001e:	mov    BYTE PTR [eax+0x7155b7b7],al
  420024:	fild   QWORD PTR [edx]
  420026:	int    0xc3
  420028:	imul   ebx,DWORD PTR [edi+0x46183bd7],0x3
  42002f:	cdq    
  420030:	ret    
  420031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420032:	adc    DWORD PTR [edi-0x1093d0ca],esi
  420038:	mov    dh,0x2d
  42003a:	repz test al,0xf0
  42003d:	pop    ecx
  42003e:	imul   bh
  420040:	jno    0x420011
  420042:	mov    ds:0x5eec903d,eax
  420047:	add    eax,0x58ecc0e0
  42004c:	mov    bl,0x30
  42004e:	ins    DWORD PTR es:[edi],dx
  42004f:	cwde   
  420050:	mov    al,0xdf
  420052:	mov    BYTE PTR [ebp+0x36],ch
  420055:	inc    eax
  420056:	les    edi,FWORD PTR [ebp-0x29]
  420059:	pusha  
  42005a:	mov    ch,0x75
  42005c:	outs   dx,DWORD PTR ds:[esi]
  42005d:	shl    BYTE PTR [edi-0x2c022d67],1
  420063:	pop    esi
  420064:	push   esi
  420065:	std    
  420066:	or     DWORD PTR [ecx],edi
  420068:	ret    
  420069:	popa   
  42006a:	sbb    esi,DWORD PTR [esi-0x7d349f5c]
  420070:	(bad)  
  420071:	jge    0x4200a3
  420073:	xchg   esi,eax
  420074:	cwde   
  420075:	or     ah,bh
  420077:	mov    DWORD PTR [ecx],esp
  420079:	(bad)  [ebx+ecx*1+0x6fbf2336]
  420080:	loopne 0x4200bb
  420082:	inc    edi
  420083:	das    
  420084:	lahf   
  420085:	xor    eax,0xe168a036
  42008a:	pop    ss
  42008b:	mov    eax,0x5328e705
  420090:	mov    ?,WORD PTR [edi+edx*2+0x76]
  420094:	dec    esp
  420095:	or     eax,0xc0ace7f6
  42009a:	jle    0x420068
  42009c:	mov    bl,0xc2
  42009e:	push   0xffffffc6
  4200a0:	(bad)  
  4200a2:	sahf   
  4200a3:	lock ins DWORD PTR es:[edi],dx
  4200a5:	scas   eax,DWORD PTR es:[edi]
  4200a6:	in     al,0x69
  4200a8:	xlat   BYTE PTR ds:[ebx]
  4200a9:	push   0x67
  4200ab:	push   ds
  4200ac:	pop    ebx
  4200ad:	inc    esp
  4200ae:	into   
  4200af:	pop    esi
  4200b0:	mov    esp,0x6bdd42ef
  4200b5:	xchg   edx,eax
  4200b6:	mov    ecx,0x2ef62922
  4200bb:	stos   DWORD PTR es:[edi],eax
  4200bc:	ror    ah,1
  4200be:	cmp    ebx,ebp
  4200c0:	lods   al,BYTE PTR ds:[esi]
  4200c1:	jl     0x4200cc
  4200c3:	jno    0x420074
  4200c5:	pop    ebp
  4200c6:	rcr    DWORD PTR [ecx+0x3],cl
  4200c9:	vaesdec zmm0{k7},zmm7,ZMMWORD PTR [ecx+ecx*8+0xc40]
  4200d1:	int3   
  4200d2:	mov    ecx,0x178a4d1c
  4200d7:	adc    al,0xe7
  4200d9:	inc    ebp
  4200da:	sahf   
  4200db:	jae    0x4200ad
  4200dd:	cmc    
  4200de:	out    0xb4,eax
  4200e0:	dec    ebp
  4200e1:	fidivr WORD PTR [ecx+0x78]
  4200e4:	fiadd  DWORD PTR [ebp+0x77ffbc5a]
  4200ea:	cmp    eax,0xe1a8136e
  4200ef:	lds    edi,FWORD PTR [esi]
  4200f1:	push   ds
  4200f2:	inc    eax
  4200f3:	loopne 0x4200b9
  4200f5:	lds    eax,FWORD PTR [ecx-0x508809b6]
  4200fb:	rol    DWORD PTR [ebx+0x13],cl
  4200fe:	shr    BYTE PTR [edx],cl
  420100:	fidivr DWORD PTR [eax]
  420102:	push   eax
  420103:	jb     0x42010b
  420105:	push   ebx
  420106:	and    esp,DWORD PTR [edx]
  420108:	xor    eax,0x856a3fb8
  42010d:	mov    al,0x23
  42010f:	xor    ecx,DWORD PTR [ebx+0x6446ec6f]
  420115:	mov    ecx,fs
  420117:	ja     0x4200a2
  420119:	mov    cl,0xe2
  42011b:	or     DWORD PTR [esi-0x2d],eax
  42011e:	mov    edx,0x62244af4
  420123:	pop    ss
  420124:	dec    ebx
  420125:	add    edx,DWORD PTR [edi-0x34aa6b53]
  42012b:	sub    BYTE PTR [bp+si],cl
  42012e:	mov    esp,0x556e6737
  420133:	aaa    
  420134:	sub    al,0xa7
  420136:	(bad)  
  420138:	in     eax,0x9d
  42013a:	aam    0x29
  42013c:	int3   
  42013d:	jno    0x4201a6
  42013f:	dec    ecx
  420140:	adc    ch,BYTE PTR [edi+ebp*2]
  420143:	xchg   ebp,eax
  420144:	fld    st(3)
  420146:	std    
  420147:	jae    0x4200db
  420149:	cmc    
  42014a:	hlt    
  42014b:	lea    eax,[eax-0x55fbe171]
  420151:	and    BYTE PTR [esi-0x37af9bd0],cl
  420157:	dec    ecx
  420158:	pusha  
  420159:	xor    DWORD PTR [ecx],esp
  42015b:	xor    DWORD PTR [edx-0x60771bbc],edi
  420161:	sub    al,0x85
  420163:	ins    BYTE PTR es:[edi],dx
  420164:	push   0x68
  420166:	adc    esp,eax
  420168:	xchg   ebx,eax
  420169:	push   ds
  42016a:	cmp    esi,edi
  42016c:	sbb    al,0x8a
  42016e:	out    0xfb,al
  420170:	pop    edx
  420171:	and    dl,BYTE PTR [ecx+0x6b]
  420174:	xchg   esp,eax
  420175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420176:	cmp    eax,0xf7fbc233
  42017b:	lods   eax,DWORD PTR ds:[esi]
  42017c:	adc    DWORD PTR [eax],eax
	...
  42018a:	pop    ecx
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx-0x48],esi
  420197:	pop    edi
  420198:	fisttp DWORD PTR [ebx+0x190c1]
  42019e:	jnp    0x4201a6
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	jns    0x42021d
  4201a4:	popa   
  4201a5:	pop    esi
  4201a6:	pop    esi
  4201a7:	or     BYTE PTR [ebx-0x19],bh
  4201aa:	xchg   BYTE PTR ds:0x4f052810,dl
  4201b0:	push   cs
  4201b1:	or     bh,ch
  4201b3:	xor    eax,0xaf42b5cd
  4201b8:	mov    edi,fs
  4201ba:	cmp    eax,0x7954c1f7
  4201bf:	es inc eax
  4201c2:	daa    
  4201c3:	jmp    0x1c4e:0x29bf3bb5
  4201ca:	or     BYTE PTR [ebp-0x7a],0xec
  4201ce:	xchg   esp,eax
  4201cf:	push   cs
  4201d0:	(bad)  
  4201d1:	mov    dl,0x4f
  4201d3:	ins    DWORD PTR es:[edi],dx
  4201d4:	sbb    eax,DWORD PTR [ebx]
  4201d6:	fsubr  QWORD PTR ds:0x23d04ac2
  4201dc:	imul   ebp,DWORD PTR ds:0x3c78c43d,0xffffffd4
  4201e3:	mov    dh,0xec
  4201e5:	push   ebx
  4201e6:	inc    esp
  4201e7:	pop    es
  4201e8:	inc    esi
  4201e9:	fs dec esi
  4201eb:	cmp    ah,dh
  4201ed:	shl    BYTE PTR [bp+di+0x71],cl
  4201f1:	and    al,0x6e
  4201f3:	push   ebp
  4201f4:	sub    BYTE PTR [ecx],ah
  4201f6:	retf   0x39bf
  4201f9:	push   ecx
  4201fa:	sbb    eax,0x6709b875
  4201ff:	scas   eax,DWORD PTR es:[edi]
  420200:	sbb    BYTE PTR [eax-0x1c],bh
  420203:	bndldx (bad),[eax]
  420206:	fcom   QWORD PTR [ebx+esi*2+0x68e80be8]
  42020d:	mov    ebp,DWORD PTR [ebp+0x61]
  420210:	xor    ebp,0x5d6053d0
  420216:	mov    bh,0xf6
  420218:	aam    0xd4
  42021a:	push   edi
  42021b:	sti    
  42021c:	add    edx,ebx
  42021e:	jge    0x420297
  420220:	jb     0x4201c8
  420222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420223:	scas   eax,DWORD PTR es:[edi]
  420224:	pusha  
  420225:	mov    bh,dh
  420227:	ins    BYTE PTR es:[edi],dx
  420228:	pop    esp
  420229:	dec    ebx
  42022a:	outs   dx,BYTE PTR ds:[esi]
  42022b:	and    dl,bh
  42022d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42022e:	scas   eax,DWORD PTR es:[edi]
  42022f:	mov    ds:0x4ba058ad,eax
  420234:	cdq    
  420235:	or     edx,DWORD PTR [ecx-0x27619ed4]
  42023b:	xor    DWORD PTR [edx-0x51258f04],edx
  420241:	inc    ebx
  420242:	shr    DWORD PTR [ebp+eiz*2-0x2ac45a4a],0xd6
  42024a:	or     DWORD PTR [eax-0x56],esi
  42024d:	mov    ebp,0x942108ab
  420252:	cmp    BYTE PTR [edi],bh
  420254:	dec    esi
  420255:	jae    0x420203
  420257:	sub    DWORD PTR [esi-0xb],0xffffffe2
  42025b:	xor    ah,al
  42025d:	stc    
  42025e:	pop    ebx
  42025f:	lea    eax,ds:0x5e1e2df9
  420265:	lods   al,BYTE PTR ds:[esi]
  420266:	idiv   DWORD PTR [ebp-0x25]
  420269:	(bad)  
  42026a:	cmp    ebx,eax
  42026c:	add    al,0x16
  42026e:	push   esp
  42026f:	stc    
  420270:	and    al,0xd4
  420272:	lods   eax,DWORD PTR ds:[esi]
  420273:	cli    
  420274:	cmc    
  420275:	loope  0x420236
  420277:	in     al,dx
  420278:	in     al,dx
  420279:	mov    al,ds:0x666b4707
  42027e:	popf   
  42027f:	mov    al,ds:0xa1bf219f
  420284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420285:	(bad)  
  420286:	sahf   
  420287:	xor    bl,BYTE PTR [ebp-0x5c]
  42028a:	enter  0x96a8,0xbe
  42028e:	stos   BYTE PTR es:[edi],al
  42028f:	loopne 0x4202e6
  420291:	fsub   DWORD PTR [ebx-0x888223c]
  420297:	jmp    0xe753:0x1c36202b
  42029e:	xchg   ebp,eax
  42029f:	popf   
  4202a0:	icebp  
  4202a1:	jmp    0xac48e328
  4202a6:	out    0x6b,eax
  4202a8:	div    bh
  4202aa:	or     al,0x6d
  4202ac:	push   ss
  4202ad:	jb     0x4202e4
  4202af:	mov    edi,0x2eade269
  4202b4:	mov    eax,ds:0x9de3b6b1
  4202b9:	xchg   ebx,eax
  4202ba:	xchg   ebx,eax
  4202bb:	sub    BYTE PTR [esi+0x2bf8a8ea],cl
  4202c1:	mov    dh,0xfc
  4202c3:	rcl    BYTE PTR [eax+0x31],cl
  4202c6:	shl    DWORD PTR [esi+0x7b],cl
  4202c9:	dec    DWORD PTR [ecx+ecx*2+0x25]
  4202cd:	pusha  
  4202ce:	(bad)
  4202d1:	or     ch,BYTE PTR [esi+0x130a4ff8]
  4202d7:	dec    DWORD PTR [esi+ecx*2]
  4202da:	pop    ecx
  4202db:	push   0x61076b8f
  4202e0:	ror    dl,cl
  4202e2:	test   BYTE PTR [ecx],cl
  4202e4:	or     DWORD PTR [ebp+0x24],ebp
  4202e7:	lods   al,BYTE PTR ds:[esi]
  4202e8:	xor    edi,DWORD PTR [ebx-0x2b]
  4202eb:	loop   0x420296
  4202ed:	not    BYTE PTR [ebx]
  4202ef:	cmp    dl,BYTE PTR ds:0x93f6a9b
  4202f5:	xor    eax,0x5f006619
  4202fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fb:	rol    edx,1
  4202fd:	imul   eax,DWORD PTR [ecx-0x72e9ea0d],0xffffff9a
  420304:	dec    esp
  420305:	mov    edi,0xb13a455
  42030a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42030b:	fwait
  42030c:	sar    ecx,cl
  42030e:	cdq    
  42030f:	cmc    
  420310:	mov    dh,0x1f
  420312:	xchg   edx,eax
  420313:	or     ebx,ebp
  420315:	mov    ecx,0xe6c8de29
  42031a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42031b:	ret    
  42031c:	pop    ebp
  42031d:	jns    0x420374
  42031f:	data16 add BYTE PTR [eax-0x55],al
  420323:	add    eax,0x295e924b
  420328:	and    DWORD PTR [ebx-0x64],0x10d39208
  42032f:	ins    DWORD PTR es:[edi],dx
  420330:	fdiv   DWORD PTR [eax+ebx*8+0x34]
  420334:	outs   dx,DWORD PTR ds:[esi]
  420335:	jg     0x4203a4
  420337:	dec    esi
  420338:	bound  edx,QWORD PTR [ebx+0x4a]
  42033b:	adc    BYTE PTR [edi+0x3393e691],ch
  420341:	inc    ebp
  420342:	jecxz  0x420368
  420344:	mov    ds:0x10f8ce1b,eax
  420349:	sbb    al,0x42
  42034b:	jnp    0x420397
  42034d:	imul   esi,DWORD PTR [ecx+ebx*4-0x80],0x8969e10a
  420355:	and    al,BYTE PTR [ebp-0x2]
  420358:	xchg   ebx,eax
  420359:	out    0x5c,al
  42035b:	add    al,0xc9
  42035d:	push   esp
  42035e:	addr16 popa 
  420360:	cmp    eax,0xa060a703
  420365:	push   cs
  420366:	pop    ebp
  420367:	push   ecx
  420368:	mov    edx,0xd937e236
  42036d:	mov    WORD PTR [edx+0x22],?
  420370:	or     al,0xc9
  420372:	test   al,0xf
  420374:	or     al,dh
  420376:	lea    edi,[ebp+0x4cfacf4b]
  42037c:	add    esi,ebp
  42037e:	out    dx,al
  42037f:	and    bh,BYTE PTR [ecx]
  420381:	push   0xdff4a431
  420386:	addr16 cdq 
  420388:	mov    bh,0xb9
  42038a:	sbb    eax,0x55fee8b6
  42038f:	dec    esi
  420390:	call   0x75d8227f
  420395:	mov    eax,ds:0xef9dcf31
  42039a:	push   0xf0462271
  42039f:	cmp    al,0x45
  4203a1:	xor    bh,BYTE PTR [eax]
  4203a3:	adc    edi,ebp
  4203a5:	aas    
  4203a6:	call   0x2c685ff0
  4203ab:	popf   
  4203ac:	fstp   QWORD PTR [ebp+0x4]
  4203af:	cmc    
  4203b0:	inc    eax
  4203b1:	cmp    DWORD PTR [ecx+eiz*1],0xe9e63738
  4203b8:	and    eax,0x6d722970
  4203bd:	pusha  
  4203be:	and    al,0x75
  4203c0:	pop    DWORD PTR [esi+0x7091e3c1]
  4203c6:	add    BYTE PTR ds:0xcf83e5c6,bl
  4203cc:	mov    ah,0xa9
  4203ce:	push   0x66af4ca2
  4203d3:	adc    DWORD PTR [ebp-0x215b6c3c],ecx
  4203d9:	xchg   edi,eax
  4203da:	prefetch BYTE PTR [eax-0xee1056b]
  4203e1:	pop    esp
  4203e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e3:	int3   
  4203e4:	sar    DWORD PTR [ebx+edx*2],cl
  4203e7:	lods   eax,DWORD PTR ds:[esi]
  4203e8:	fwait
  4203e9:	loopne 0x420450
  4203eb:	(bad)  
  4203ec:	out    dx,eax
  4203ed:	mov    ah,0x6b
  4203ef:	pop    eax
  4203f0:	pop    esp
  4203f1:	adc    al,0x83
  4203f3:	lods   al,BYTE PTR ds:[esi]
  4203f4:	xchg   esi,eax
  4203f5:	pop    DWORD PTR [ebx-0x78]
  4203f8:	xchg   ebx,eax
  4203f9:	dec    esi
  4203fa:	push   esi
  4203fb:	js     0x420451
  4203fd:	ret    0xbc09
  420400:	imul   ebp,DWORD PTR [ecx-0x26],0x82254e8b
  420407:	mov    dl,0x14
  420409:	push   ds
  42040a:	jnp    0x420405
  42040c:	or     ecx,DWORD PTR [edi]
  42040e:	adc    edx,esi
  420410:	jne    0x420394
  420412:	sbb    al,dl
  420414:	push   0xfffffffe
  420416:	mov    ch,0x48
  420418:	and    BYTE PTR [edx+ebx*8+0x7553ec05],dh
  42041f:	push   esi
  420420:	push   esp
  420422:	repz pop ss
  420424:	sti    
  420425:	jbe    0x420480
  420427:	and    al,0x89
  420429:	adc    cl,0xf3
  42042c:	bound  esi,QWORD PTR [ebp+edx*8-0x18b7f1]
  420433:	fbstp  TBYTE PTR [edi+0x19]
  420436:	cmp    esi,ebp
  420438:	push   ecx
  420439:	mov    bh,0x88
  42043b:	and    ebx,DWORD PTR [edi-0x1bbd1d1e]
  420441:	xchg   edi,eax
  420442:	arpl   si,si
  420444:	xchg   ebp,ecx
  420446:	xchg   esp,eax
  420447:	iret   
  420448:	push   cs
  420449:	dec    esp
  42044a:	push   es
  42044b:	ja     0x4204a6
  42044d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42044e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044f:	sub    ebx,esi
  420451:	fidivr DWORD PTR [ebx+0x43a2d283]
  420457:	in     eax,dx
  420458:	cs (bad) 
  42045a:	iret   
  42045b:	adc    al,0x17
  42045d:	dec    eax
  42045e:	ret    0x868e
  420461:	mov    ds:0x600c8ab2,al
  420466:	gs sub ch,ch
  420469:	shl    dh,cl
  42046b:	adc    DWORD PTR [ecx],edx
  42046d:	call   0xed8592db
  420472:	cs jmp 0x99bf:0x420b6a36
  42047a:	xchg   ebp,eax
  42047b:	mov    cs,WORD PTR [edx]
  42047d:	xchg   dl,bl
  42047f:	(bad)
  420483:	push   0x60240175
  420488:	cmp    DWORD PTR [ebx],ebp
  42048a:	xchg   edx,eax
  42048b:	ret    0xd394
  42048e:	sbb    al,0x5e
  420490:	out    0x88,eax
  420492:	pop    esi
  420493:	je     0x420486
  420495:	dec    eax
  420496:	add    dh,dl
  420498:	mov    ch,0x58
  42049a:	and    bl,BYTE PTR [edi+0x9]
  42049d:	push   esp
  42049e:	repnz add al,0xc9
  4204a1:	scas   eax,DWORD PTR es:[edi]
  4204a2:	xchg   esi,eax
  4204a3:	jl     0x420432
  4204a5:	mov    esi,0xaf1d366c
  4204aa:	imul   BYTE PTR [edx+eiz*2+0x3330867d]
  4204b1:	ja     0x42049f
  4204b3:	sqrtps xmm2,XMMWORD PTR [esi+0x5a]
  4204b7:	jmp    0x42051d
  4204b9:	gs imul eax,edi,0x6f
  4204bd:	sub    BYTE PTR [esi+eax*8],0xa7
  4204c1:	loopne 0x4204cb
  4204c3:	test   al,0xe6
  4204c5:	xchg   edi,eax
  4204c6:	ins    DWORD PTR es:[edi],dx
  4204c7:	mov    ebx,DWORD PTR [ebx+0xd6c3f7e]
  4204cd:	ss std 
  4204cf:	jnp    0x4204cf
  4204d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204d2:	scas   al,BYTE PTR es:[edi]
  4204d3:	das    
  4204d4:	jmp    0x7afff9c
  4204d9:	push   esi
  4204da:	jnp    0x4204a2
  4204dc:	imul   esp,edx,0x6e
  4204df:	fwait
  4204e0:	mov    bh,0xc5
  4204e2:	add    BYTE PTR [edx+0x4208dbfc],ah
  4204e8:	call   0xcd80:0x3bdf0b82
  4204ef:	mov    ah,0x74
  4204f1:	sar    BYTE PTR [eax],1
  4204f3:	out    dx,al
  4204f4:	fild   WORD PTR [ecx]
  4204f6:	mov    al,0x47
  4204f8:	mov    WORD PTR [eax],ss
  4204fa:	retf   
  4204fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204fc:	push   0x41c60605
  420501:	out    0x52,al
  420503:	daa    
  420504:	scas   eax,DWORD PTR es:[edi]
  420505:	rcl    DWORD PTR [ecx],cl
  420507:	adc    DWORD PTR [ebx+edx*4+0x47603262],edi
  42050e:	inc    esp
  42050f:	fnstenv es:[esi-0x332dc3e5]
  420516:	popa   
  420517:	pop    es
  420518:	test   DWORD PTR [ebp+ebx*8+0x48ecd7fc],ebx
  42051f:	lock aam 0x2c
  420522:	dec    edx
  420523:	mov    ebp,0xab08635b
  420528:	pop    edi
  420529:	dec    edi
  42052a:	adc    edi,DWORD PTR [ebx]
  42052c:	lahf   
  42052d:	and    bh,0x4e
  420530:	fistp  QWORD PTR [eax+0x38a58851]
  420536:	inc    ebx
  420537:	add    DWORD PTR [esi-0x3],esi
  42053a:	(bad)  
  42053b:	xchg   ecx,eax
  42053c:	call   0x5316:0xdbb530d9
  420543:	jb     0x420573
  420545:	nop
  420546:	sbb    DWORD PTR [ecx+0x54],edx
  420549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42054a:	pop    ds
  42054b:	jno    0x42054a
  42054d:	arpl   WORD PTR [ecx-0x1401ef71],di
  420553:	imul   ebx,DWORD PTR [ebp-0x320c35fe],0x1d
  42055a:	aas    
  42055b:	enter  0x7941,0x2b
  42055f:	xchg   edx,eax
  420560:	leave  
  420561:	cmp    BYTE PTR [esi-0x6cd4de18],0x1e
  420568:	outs   dx,DWORD PTR ds:[esi]
  420569:	ins    BYTE PTR es:[edi],dx
  42056a:	sub    DWORD PTR [ecx+0x28],0x2a728b42
  420571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420572:	dec    edi
  420573:	add    DWORD PTR [ecx-0x56b173b4],0xa7fafefa
  42057d:	sbb    DWORD PTR [ecx-0x16af9957],esi
  420583:	ror    edi,1
  420585:	mov    eax,0x4f7632cc
  42058a:	pop    edi
  42058b:	add    eax,0xe28e1198
  420590:	add    eax,0x8f053c53
  420595:	jle    0x4205da
  420597:	jbe    0x420618
  420599:	mov    esi,0xad74dccf
  42059e:	mov    esp,0x5e35f236
  4205a3:	jb     0x4205e0
  4205a5:	shl    DWORD PTR [ebp-0x31],1
  4205a8:	dec    esp
  4205a9:	mov    ch,0x8c
  4205ab:	xchg   esp,eax
  4205ac:	inc    edx
  4205ad:	outs   dx,DWORD PTR ds:[esi]
  4205ae:	repz pop edx
  4205b0:	push   cs
  4205b1:	dec    ebp
  4205b2:	add    eax,0xe2e1989a
  4205b7:	jge    0x4205f7
  4205b9:	ss pop edi
  4205bb:	jmp    0x6824:0x9556b592
  4205c2:	ins    DWORD PTR es:[edi],dx
  4205c3:	dec    eax
  4205c4:	lock outs dx,BYTE PTR ds:[esi]
  4205c6:	pop    edx
  4205c7:	sbb    edx,esp
  4205c9:	pop    ebx
  4205ca:	fdivr  DWORD PTR [ebp-0xcf0214c]
  4205d0:	sub    DWORD PTR [edx+0x1fada676],ecx
  4205d6:	push   ss
  4205d7:	stos   DWORD PTR es:[edi],eax
  4205d8:	cli    
  4205d9:	sub    DWORD PTR [edi+0x6979d025],esi
  4205df:	icebp  
  4205e0:	jo     0x420661
  4205e2:	pop    ebx
  4205e3:	xchg   BYTE PTR [ebp+0x63cf7dc3],dl
  4205e9:	add    esp,DWORD PTR [eax+ecx*4+0x7b6823ba]
  4205f0:	imul   edx,DWORD PTR [ebp*1+0xa276d64],0x34b1ec4e
  4205fb:	mov    esp,0x1a851905
  420600:	sub    edi,eax
  420602:	push   0x98859d98
  420607:	pop    ss
  420608:	ret    0x93f3
  42060b:	sahf   
  42060c:	sbb    edi,eax
  42060e:	(bad)  
  42060f:	aam    0xbc
  420611:	pop    ebp
  420612:	es jmp 0x68730c30
  420618:	and    DWORD PTR [edx],0x13
  42061b:	ja     0x4205ed
  42061d:	inc    edi
  42061e:	mov    ?,WORD PTR [eax-0x1e]
  420621:	fsub   QWORD PTR [ebp+0x5e961d0e]
  420627:	xchg   ecx,eax
  420628:	push   esp
  420629:	in     al,0x59
  42062b:	retf   
  42062c:	rcl    BYTE PTR [ebx],cl
  42062e:	jae    0x420615
  420630:	call   0xa46c65a3
  420635:	and    eax,esi
  420637:	xchg   ebx,eax
  420638:	loop   0x420610
  42063a:	mov    esp,esi
  42063c:	dec    edi
  42063d:	mov    bh,0xfd
  420640:	mul    DWORD PTR [ecx+0x2baa5ac6]
  420646:	nop
  420647:	into   
  420648:	pop    edx
  420649:	xor    BYTE PTR [esi+0x36],dh
  42064c:	cli    
  42064d:	pop    esp
  42064e:	lds    edi,FWORD PTR [eax-0x2d]
  420651:	ds ins DWORD PTR es:[edi],dx
  420653:	or     DWORD PTR [edi+0x12],edi
  420656:	xor    ebx,esi
  420658:	add    al,0x14
  42065a:	aad    0x64
  42065c:	leave  
  42065d:	in     eax,dx
  42065e:	mov    esp,0xdda7609d
  420663:	push   ebx
  420664:	dec    eax
  420665:	dec    ebx
  420666:	fadd   QWORD PTR [ebx]
  420668:	sar    BYTE PTR [ecx],1
  42066a:	jle    0x420685
  42066c:	mov    DWORD PTR [edi+ebp*4+0x69],edx
  420670:	loopne 0x420630
  420672:	stc    
  420673:	pusha  
  420674:	xor    cl,BYTE PTR [ebp+0x67]
  420677:	sbb    al,0x6
  420679:	pop    ss
  42067a:	sti    
  42067b:	test   DWORD PTR [esp+edi*1+0x23],ecx
  42067f:	mov    dl,0x50
  420681:	xchg   esp,eax
  420682:	ret    0x4d07
  420685:	mov    ds:0xb1611dae,al
  42068a:	int    0x92
  42068c:	push   esi
  42068d:	push   es
  42068e:	jns    0x420621
  420690:	push   eax
  420691:	stos   BYTE PTR es:[edi],al
  420692:	ds out 0x20,eax
  420695:	pop    ecx
  420696:	shl    BYTE PTR [ebp-0x4d],cl
  420699:	ja     0x4206fd
  42069b:	mov    esi,0xaf28ab4b
  4206a0:	stos   BYTE PTR es:[edi],al
  4206a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a2:	cld    
  4206a3:	mov    ecx,0x49eb78c6
  4206a8:	cmp    eax,0xba681403
  4206ad:	pop    eax
  4206ae:	pop    edi
  4206af:	in     eax,dx
  4206b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206b1:	pop    es
  4206b2:	fbld   TBYTE PTR [edx-0x79]
  4206b5:	out    0x1b,al
  4206b7:	or     al,bl
  4206b9:	gs daa 
  4206bb:	loopne 0x4206d4
  4206bd:	cmc    
  4206be:	mov    ax,ds:0x5a7b1682
  4206c4:	ds cmp eax,edx
  4206c7:	scas   eax,DWORD PTR es:[edi]
  4206c8:	sbb    eax,0x6c1bc957
  4206cd:	mov    dh,0x94
  4206cf:	push   edi
  4206d0:	dec    esp
  4206d1:	nop
  4206d2:	mov    ebx,0xfaee04f
  4206d7:	cmc    
  4206d8:	sar    DWORD PTR [ebx-0x1cb354d9],0x88
  4206df:	lahf   
  4206e0:	adc    ah,BYTE PTR [ecx]
  4206e2:	jmp    0x820b26d1
  4206e7:	cmp    BYTE PTR ds:[edx-0x7b],bh
  4206eb:	pop    edi
  4206ec:	int3   
  4206ed:	mov    al,0x4c
  4206ef:	mov    esi,DWORD PTR [esp+edx*4]
  4206f2:	lock sahf 
  4206f4:	push   0x2
  4206f6:	mov    al,0x6a
  4206f8:	jg     0x42069a
  4206fa:	sbb    esp,ecx
  4206fc:	push   esi
  4206fd:	mov    bl,0xac
  4206ff:	dec    ebx
  420700:	sub    al,0xbe
  420702:	pop    esp
  420703:	push   edi
  420704:	in     eax,dx
  420705:	cld    
  420706:	gs dec ebx
  420708:	loopne 0x420711
  42070a:	retf   0x3fe6
  42070d:	ret    
  42070e:	jp     0x420695
  420710:	and    eax,0xfb633132
  420715:	or     eax,DWORD PTR [ebx-0x8]
  420718:	cmp    BYTE PTR [edx+0x4a],dl
  42071b:	popa   
  42071c:	(bad)  
  42071d:	jmp    0x420735
  42071f:	imul   edi,DWORD PTR [eax+0x3e],0xd712ee06
  420726:	inc    edx
  420727:	sti    
  420728:	jo     0x420710
  42072a:	mov    al,cl
  42072c:	inc    esi
  42072d:	pop    ebx
  42072e:	in     eax,dx
  42072f:	push   0x14
  420731:	push   esp
  420732:	add    al,0x10
  420734:	xchg   ecx,eax
  420735:	loop   0x42075b
  420737:	xor    DWORD PTR ds:0x58b1ca03,ecx
  42073d:	jp     0x42073b
  42073f:	cmp    cl,BYTE PTR [ecx-0x59]
  420742:	jle    0x42070b
  420744:	pushf  
  420745:	xor    al,0xfc
  420747:	aam    0x36
  420749:	mov    BYTE PTR [ebx+edx*2-0x6fd3eeed],dh
  420750:	cli    
  420751:	and    al,BYTE PTR [ecx-0x211b6e57]
  420757:	mov    edx,0x26fdcfb1
  42075c:	in     eax,dx
  42075d:	xchg   ebp,eax
  42075e:	shr    ebp,0x90
  420761:	mov    DWORD PTR [ecx-0x67],0x39dbed93
  420768:	iret   
  420769:	fs jb  0x42078f
  42076c:	push   ebx
  42076d:	retf   0x6cf5
  420770:	dec    esp
  420771:	cmc    
  420772:	mov    ah,0x4b
  420774:	push   ebp
  420775:	std    
  420776:	or     dh,dh
  420778:	lea    ebp,[ecx+0x1f]
  42077b:	and    al,0xf8
  42077d:	sbb    dl,BYTE PTR [ebx+0x2]
  420780:	jecxz  0x4207a7
  420782:	stos   DWORD PTR es:[edi],eax
  420783:	inc    esi
  420784:	or     eax,0xee432bfb
  420789:	pop    ss
  42078a:	in     eax,dx
  42078b:	jmp    0x42080c
  42078d:	aad    0xff
  42078f:	jge    0x4207bb
  420791:	popf   
  420792:	ret    
  420793:	test   DWORD PTR [ebp+0xf44b07d],ebx
  420799:	push   edx
  42079a:	pushf  
  42079b:	jl     0x4207f7
  42079d:	inc    ebp
  42079e:	mov    eax,ds:0x7e898941
  4207a3:	outs   dx,DWORD PTR ds:[esi]
  4207a4:	fnsave [ebx-0x49]
  4207a7:	ret    
  4207a8:	and    ebp,DWORD PTR [edx]
  4207aa:	mov    bl,0x74
  4207ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ad:	mov    ecx,0x43843efb
  4207b2:	iret   
  4207b3:	call   0x50e:0x225176da
  4207ba:	scas   eax,DWORD PTR es:[edi]
  4207bb:	mov    cl,0xff
  4207bd:	pop    ds
  4207be:	(bad)  
  4207bf:	test   al,0xb3
  4207c1:	hlt    
  4207c2:	inc    esp
  4207c3:	sub    ah,dl
  4207c5:	ins    DWORD PTR es:[edi],dx
  4207c6:	mov    edx,0x8dd9ea1d
  4207cb:	jmp    0x663:0xbf58f4e1
  4207d2:	pop    ebx
  4207d3:	retf   
  4207d4:	into   
  4207d5:	imul   edi,DWORD PTR [esi+0x40009a99],0x16724593
  4207df:	dec    esp
  4207e0:	pop    ebp
  4207e1:	js     0x42080c
  4207e3:	dec    edx
  4207e4:	enter  0x7df2,0xc5
  4207e8:	cld    
  4207e9:	mov    ebp,0x365f86d3
  4207ee:	jp     0x420808
  4207f0:	pop    eax
  4207f1:	gs mov bl,0x55
  4207f4:	push   ebp
  4207f5:	(bad)  
  4207f6:	push   eax
  4207f7:	cs mov bl,ch
  4207fa:	add    ch,BYTE PTR [ebp+0x3f]
  4207fd:	jmp    0xb5dcdb86
  420802:	adc    edi,0xa4adeaba
  420808:	stos   DWORD PTR es:[edi],eax
  420809:	add    ah,al
  42080b:	out    dx,al
  42080c:	cs ds inc ebx
  42080f:	adc    DWORD PTR [edi+eiz*4],eax
  420812:	add    al,0x91
  420814:	mov    bh,0xad
  420816:	jo     0x420814
  420818:	fiadd  DWORD PTR [edi-0x5]
  42081b:	xor    edi,edx
	...
  420829:	add    BYTE PTR [ebp+ecx*2+0x4a],al
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0x4921e
  420837:	ret    
  420838:	xor    DWORD PTR [esp+edi*1-0x69],esp
  42083c:	add    DWORD PTR [eax],eax
  42083e:	jnp    0x420846
  420840:	add    BYTE PTR [eax],al
  420842:	dec    ebp
  420843:	imul   eax,DWORD PTR [edi-0x4291c1d5],0xed5d40a8
  42084d:	fwait
  42084e:	or     al,0xc
  420850:	out    dx,eax
  420851:	fild   QWORD PTR [edi]
  420853:	mov    bh,BYTE PTR [edi+0x3cc48db7]
  420859:	out    dx,al
  42085a:	imul   eax,DWORD PTR [ebp+0x37e7e452],0x71756236
  420864:	ror    BYTE PTR [edi+0x1],0xd3
  420868:	lds    eax,FWORD PTR [esi+ecx*8+0x5091ab85]
  42086f:	sti    
  420870:	mov    ebx,0x316c6bbf
  420875:	mov    edi,0x8f63d49b
  42087a:	jmp    0xf16f9474
  42087f:	xchg   ebp,eax
  420880:	leave  
  420881:	pop    esi
  420882:	(bad)
  420885:	sub    esi,esi
  420887:	fwait
  420888:	xchg   esi,eax
  420889:	mov    ah,0x5f
  42088b:	mov    al,0x88
  42088d:	adc    eax,0x9ee483c
  420892:	das    
  420893:	add    al,0x3c
  420895:	shl    eax,1
  420897:	cmc    
  420898:	pusha  
  420899:	inc    edx
  42089a:	sahf   
  42089b:	mov    BYTE PTR [edx+0xc],0xb9
  42089f:	mov    ebx,0x664d3dd0
  4208a4:	(bad)  
  4208a5:	pop    esp
  4208a6:	dec    edi
  4208a7:	out    0x85,eax
  4208a9:	jmp    0x8e530eb1
  4208ae:	ret    
  4208af:	push   ecx
  4208b0:	add    ch,cl
  4208b2:	xor    eax,0x7a9d6ad5
  4208b7:	gs inc eax
  4208b9:	(bad)  
  4208ba:	mov    DWORD PTR [ecx+edi*1+0xd],esi
  4208be:	ins    BYTE PTR es:[edi],dx
  4208bf:	dec    esp
  4208c0:	or     DWORD PTR [ebx],esi
  4208c2:	loopne 0x4208e3
  4208c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208c5:	iret   
  4208c6:	aas    
  4208c7:	mov    ecx,0x33e2527
  4208cc:	test   esi,edi
  4208ce:	push   eax
  4208cf:	jno    0x4208ba
  4208d1:	ja     0x42085d
  4208d3:	jb     0x4208a6
  4208d5:	jno    0x4208d1
  4208d7:	in     eax,0xb3
  4208d9:	jns    0x4208e2
  4208db:	cli    
  4208dc:	gs popf 
  4208de:	mov    ebx,esi
  4208e0:	push   ds
  4208e1:	nop
  4208e2:	xchg   ebx,eax
  4208e3:	mov    dl,0x5e
  4208e5:	mov    edx,0x5a0d3a53
  4208ea:	enter  0xcce9,0x23
  4208ee:	dec    esp
  4208ef:	lahf   
  4208f0:	xor    al,0x22
  4208f2:	fdiv   QWORD PTR [ebx]
  4208f4:	pushf  
  4208f5:	dec    edi
  4208f6:	push   ss
  4208f7:	fstp   QWORD PTR [eax]
  4208f9:	push   ds
  4208fa:	jb     0x420891
  4208fc:	loope  0x420940
  4208fe:	or     eax,0xccc6ce07
  420903:	div    ebx
  420905:	jg     0x420948
  420907:	pop    eax
  420908:	setno  ah
  42090b:	repnz pusha 
  42090d:	mov    cl,0x25
  42090f:	addr16 js 0x420906
  420912:	enter  0xe027,0xe1
  420916:	pop    esi
  420917:	jo     0x420906
  420919:	jo     0x42091a
  42091b:	adc    BYTE PTR [ebx+0x79dcde6c],ch
  420921:	lock idiv DWORD PTR [edi-0x44]
  420925:	sub    BYTE PTR [edi],bl
  420927:	mov    cl,0x25
  420929:	enter  0x85d6,0x5f
  42092d:	dec    edx
  42092e:	sub    DWORD PTR [ebp+0x20f301eb],0xcc1b7398
  420938:	add    esi,DWORD PTR [ebp-0x57add7ea]
  42093e:	int3   
  42093f:	dec    ebx
  420940:	fs stc 
  420942:	or     al,0x57
  420944:	outs   dx,DWORD PTR ds:[esi]
  420945:	int    0xb9
  420947:	push   ss
  420948:	xchg   esi,eax
  420949:	enter  0x7450,0x4e
  42094d:	and    DWORD PTR [edx+0x19],0xc48a6897
  420954:	add    ch,cl
  420956:	scas   eax,DWORD PTR es:[edi]
  420957:	cmp    DWORD PTR [edi],0x3d655c8a
  42095d:	in     eax,dx
  42095e:	xor    edx,esp
  420960:	xchg   DWORD PTR [ecx-0x2c922b90],ebx
  420966:	retf   
  420967:	stc    
  420968:	xor    eax,ebp
  42096a:	adc    esp,eax
  42096c:	mov    cl,0x6f
  42096e:	sbb    al,0xd9
  420970:	adc    ebx,ebp
  420972:	jae    0x420964
  420974:	jmp    0x420912
  420976:	clc    
  420977:	cmc    
  420978:	jnp    0x4209ab
  42097a:	enter  0xd4,0xa4
  42097e:	call   0xca00:0xab6aecb9
  420985:	int    0x9a
  420987:	bound  edx,QWORD PTR [ebx-0x5]
  42098a:	sbb    DWORD PTR [esi],eax
  42098c:	jl     0x4209d8
  42098e:	popf   
  42098f:	cmp    al,0x99
  420991:	imul   esp,ecx,0x45fece9a
  420997:	pop    edx
  420998:	gs xor al,0xbd
  42099b:	repz fstp TBYTE PTR es:[ecx]
  4209a0:	nop
  4209a1:	mov    al,ds:0x2ff44a52
  4209a6:	pop    ds
  4209a7:	clc    
  4209a8:	int    0x3f
  4209aa:	test   edi,ecx
  4209ac:	and    DWORD PTR [ecx+0x4b],esp
  4209af:	adc    DWORD PTR [ebp+0x37a9221c],eax
  4209b5:	jmp    0x420962
  4209b7:	out    dx,al
  4209b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209b9:	sbb    BYTE PTR ds:0x33d4f914,0xeb
  4209c0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4209c2:	ins    DWORD PTR es:[edi],dx
  4209c3:	retf   
  4209c4:	inc    ecx
  4209c5:	or     dh,BYTE PTR [ebp+0x649c19c4]
  4209cb:	xchg   esi,eax
  4209cc:	cmp    ch,BYTE PTR ds:0x723a05da
  4209d2:	out    0xb0,al
  4209d4:	dec    esp
  4209d5:	cwde   
  4209d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d7:	(bad)  
  4209d8:	outs   dx,BYTE PTR ds:[esi]
  4209d9:	pop    ss
  4209da:	pop    edi
  4209db:	sub    dl,BYTE PTR ss:[esi-0x7b]
  4209df:	jge    0x4209a0
  4209e1:	or     al,0xea
  4209e3:	sti    
  4209e4:	mov    ah,0xeb
  4209e6:	cld    
  4209e7:	aam    0xf1
  4209e9:	mov    al,0x87
  4209eb:	repz ret 
  4209ed:	and    al,0x8f
  4209ef:	mov    esi,0xe4a06ae2
  4209f4:	imul   ecx,ecx,0xe1b74328
  4209fa:	jge    0x4209b2
  4209fc:	inc    ebx
  4209fd:	add    eax,0x7bd66a93
  420a02:	add    BYTE PTR [edi+0x12],0x29
  420a06:	hlt    
  420a07:	push   es
  420a08:	jns    0x4209fe
  420a0a:	(bad)  
  420a0b:	xchg   esi,eax
  420a0c:	cld    
  420a0d:	scas   eax,DWORD PTR es:[edi]
  420a0e:	es inc esp
  420a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a11:	pop    esp
  420a12:	icebp  
  420a13:	loope  0x420a74
  420a15:	test   DWORD PTR [edx+0x72cefa10],edx
  420a1b:	push   0xdc7336c5
  420a20:	out    dx,al
  420a21:	pop    ss
  420a22:	arpl   bp,bp
  420a24:	inc    esp
  420a25:	and    eax,DWORD PTR [edi+edx*8-0x6c]
  420a29:	pop    esp
  420a2a:	inc    ecx
  420a2b:	ins    DWORD PTR es:[edi],dx
  420a2c:	jg     0x420a2e
  420a2e:	adc    BYTE PTR cs:[ebp-0x35946cfe],ah
  420a35:	retf   
  420a36:	and    cl,cl
  420a38:	push   ebx
  420a39:	cmc    
  420a3a:	les    esp,FWORD PTR [ecx]
  420a3c:	sar    edi,cl
  420a3e:	in     al,dx
  420a3f:	fimul  DWORD PTR [eax+0x3b]
  420a42:	mov    dh,0xb7
  420a44:	push   ecx
  420a45:	cmp    DWORD PTR [ecx],ecx
  420a47:	and    esi,0x40
  420a4a:	outs   dx,DWORD PTR ds:[esi]
  420a4b:	retf   
  420a4c:	sbb    al,0x8f
  420a4e:	rol    ecx,0x2
  420a51:	or     BYTE PTR [edi+0x29],0xba
  420a55:	in     eax,0x36
  420a57:	mov    cl,BYTE PTR [ecx]
  420a59:	push   esp
  420a5a:	stos   BYTE PTR es:[edi],al
  420a5b:	sub    al,0x23
  420a5d:	jo     0x420ad3
  420a5f:	jne    0x420aaf
  420a61:	pop    esp
  420a62:	or     eax,0x78be675
  420a67:	adc    eax,0xc2bb1a24
  420a6c:	xchg   DWORD PTR [edi],esi
  420a6e:	test   al,0x69
  420a70:	pop    edi
  420a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a72:	sbb    al,0x1a
  420a74:	push   cs
  420a75:	aaa    
  420a76:	test   DWORD PTR [esi],esp
  420a78:	push   esp
  420a79:	push   ebx
  420a7a:	pusha  
  420a7b:	push   cs
  420a7c:	mov    dh,0x63
  420a7e:	dec    edx
  420a7f:	sub    al,0x1d
  420a81:	mov    ds:0x4cb280e6,eax
  420a86:	cmp    al,0xa3
  420a88:	mov    ds:0x21029ef3,al
  420a8d:	sar    BYTE PTR [ebx+0x7a],1
  420a90:	xchg   edi,eax
  420a91:	jmp    0xfbc7:0xddc76146
  420a98:	push   ecx
  420a99:	sbb    al,BYTE PTR [edx+edi*1]
  420a9c:	push   eax
  420a9d:	inc    ecx
  420a9e:	xchg   ebp,eax
  420a9f:	jbe    0x420ae4
  420aa1:	jno    0x420aa1
  420aa3:	outs   dx,BYTE PTR ds:[esi]
  420aa4:	xchg   BYTE PTR [edi+0xbca1c7e],dl
  420aaa:	fadd   st,st(3)
  420aac:	in     al,dx
  420aad:	xor    DWORD PTR [ecx+ecx*1-0x31f296a7],edi
  420ab4:	fsub   DWORD PTR [edi+0x3768af12]
  420aba:	ds xchg ebp,eax
  420abc:	aam    0x6a
  420abe:	cmp    DWORD PTR [ecx+eax*8-0x41],edx
  420ac2:	jne    0x420ace
  420ac4:	sti    
  420ac5:	(bad)  
  420ac6:	(bad)  
  420ac7:	cmc    
  420ac8:	lods   eax,DWORD PTR ds:[esi]
  420ac9:	and    dh,bl
  420acb:	test   eax,0x71693972
  420ad0:	repnz daa 
  420ad2:	pop    ebx
  420ad3:	jecxz  0x420ac7
  420ad5:	lea    ebx,[edx+0x60]
  420ad8:	adc    al,0x5b
  420ada:	inc    ebx
  420adb:	xor    eax,0xdbb88b1d
  420ae0:	or     al,0x3e
  420ae2:	mov    bl,0x9a
  420ae4:	ret    0xbc27
  420ae7:	jmp    0xbd84:0x8b29981e
  420aee:	xchg   esi,edi
  420af0:	add    dh,bh
  420af2:	rol    dh,0x5f
  420af5:	xchg   ecx,eax
  420af6:	stc    
  420af7:	mov    WORD PTR [edx-0x6d],ds
  420afa:	out    dx,al
  420afb:	hlt    
  420afc:	inc    edx
  420afd:	mov    ebp,0x6867acfb
  420b02:	cmp    ah,ch
  420b04:	adc    ebp,ecx
  420b06:	(bad)  
  420b07:	pop    ds
  420b08:	and    edi,ecx
  420b0a:	mov    WORD PTR [edi],gs
  420b0c:	js     0x420b59
  420b0e:	sub    al,0x7c
  420b10:	sub    eax,0x5adbceaa
  420b15:	pushf  
  420b16:	jle    0x420a9e
  420b18:	inc    ebp
  420b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1a:	cwde   
  420b1b:	lea    ebx,ds:0x1b24c7ac
  420b21:	xchg   eax,edi
  420b23:	(bad)  
  420b24:	or     ah,BYTE PTR [ecx+edi*8-0x78c6af83]
  420b2b:	xor    esi,DWORD PTR [edx+0x7a80ed81]
  420b31:	sbb    ebx,ebp
  420b33:	xor    bl,BYTE PTR [ecx]
  420b35:	aam    0xe3
  420b37:	cs xor eax,0x56aea95
  420b3d:	xchg   ebx,eax
  420b3e:	push   ecx
  420b3f:	aad    0x9f
  420b41:	adc    BYTE PTR [edx-0x6f917afc],0x22
  420b48:	mov    ds:0xf5698574,eax
  420b4d:	retf   0xeb3b
  420b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b51:	xchg   esi,eax
  420b52:	mov    ebp,0x22526cbb
  420b57:	lahf   
  420b58:	or     eax,0x3694440
  420b5d:	mov    ah,0x5b
  420b5f:	sub    esp,0xd3917e73
  420b65:	imul   esp,edx,0xffffff95
  420b68:	jle    0x420b63
  420b6a:	fdivp  st(0),st
  420b6c:	adc    eax,DWORD PTR [edx+0x5f297397]
  420b72:	mov    bh,0x42
  420b74:	and    eax,0x38488af0
  420b79:	icebp  
  420b7a:	jmp    0x9180:0x99a85ec7
  420b81:	or     esi,DWORD PTR [ecx+0x8]
  420b84:	cmp    al,0xce
  420b86:	mov    eax,0x95832b55
  420b8b:	in     al,dx
  420b8c:	(bad)  
  420b8d:	adc    edi,edx
  420b8f:	pop    ecx
  420b90:	pusha  
  420b91:	arpl   WORD PTR [esi+ecx*8+0x5f],di
  420b95:	pop    ecx
  420b96:	jo     0x420b96
  420b98:	addr16 dec ebp
  420b9a:	push   ebp
  420b9b:	bound  eax,QWORD PTR [esi]
  420b9d:	and    DWORD PTR [ecx-0x7e3bea16],ecx
  420ba3:	call   0x4e70ffb1
  420ba8:	mov    esi,0x2b55fc34
  420bad:	mov    edx,0x89afc4da
  420bb2:	add    al,0xc3
  420bb4:	jl     0x420b73
  420bb6:	in     al,0x7b
  420bb8:	cmp    al,BYTE PTR [edi+0x710182c6]
  420bbe:	mov    dl,BYTE PTR [ebp+0x4664d784]
  420bc4:	dec    esi
  420bc5:	xor    al,0x4e
  420bc7:	pop    es
  420bc8:	adc    dl,cl
  420bca:	and    eax,0x71c59e3e
  420bcf:	pushf  
  420bd0:	xor    eax,ebp
  420bd2:	push   edx
  420bd3:	and    DWORD PTR [ebx-0x3d186114],eax
  420bd9:	add    ch,BYTE PTR [edi+0x5c86eb7c]
  420bdf:	arpl   WORD PTR ss:[edx+0x11],bp
  420be3:	jae    0x420b86
  420be5:	ja     0x420b6e
  420be7:	test   BYTE PTR [ebx+0x25d8ef34],ch
  420bed:	call   0x9a7c:0x8129964e
  420bf4:	test   BYTE PTR [ebp+0x1cb94d6a],bl
  420bfa:	imul   ebx,DWORD PTR [ecx+0x337481ef],0xffffffdf
  420c01:	ins    DWORD PTR es:[edi],dx
  420c02:	(bad)  
  420c03:	retf   
  420c04:	pop    ebx
  420c05:	fstp   st(7)
  420c07:	lods   eax,DWORD PTR ds:[esi]
  420c08:	xor    esi,DWORD PTR ds:0x87e4dd7c
  420c0e:	retf   0x55f7
  420c11:	sub    dh,BYTE PTR [edi+0x3a]
  420c14:	or     bl,al
  420c16:	push   edi
  420c17:	(bad)  
  420c19:	sahf   
  420c1a:	int    0x77
  420c1c:	imul   ebp,DWORD PTR [edx-0x75],0x20
  420c20:	je     0x420bd3
  420c22:	shl    BYTE PTR ds:0x54bc6be6,0xab
  420c29:	mov    dl,0x78
  420c2b:	aaa    
  420c2c:	dec    ebp
  420c2d:	mov    ch,0x9b
  420c2f:	ds mov esi,0xcf02572a
  420c35:	sub    ebx,DWORD PTR [edi]
  420c37:	in     eax,0x71
  420c39:	pop    eax
  420c3a:	pop    eax
  420c3b:	jmp    0x3c4e:0x8c10114
  420c42:	add    bl,0x7a
  420c45:	pushf  
  420c46:	bound  esp,QWORD PTR [edx-0x72be4050]
  420c4c:	scas   al,BYTE PTR es:[edi]
  420c4d:	pusha  
  420c4e:	loop   0x420c8c
  420c50:	dec    edx
  420c51:	data16 fwait
  420c53:	adc    DWORD PTR [edx+0xa852b03],ebx
  420c59:	js     0x420ccf
  420c5b:	dec    eax
  420c5c:	xchg   BYTE PTR [edx+edi*4-0x2d],bl
  420c60:	fistp  QWORD PTR [eax-0x30]
  420c63:	jae    0x420cbe
  420c65:	mov    eax,0x738201f9
  420c6a:	inc    ebp
  420c6b:	dec    ebp
  420c6c:	xor    al,0xbc
  420c6e:	gs mov al,0x4
  420c71:	int3   
  420c72:	cmp    BYTE PTR [ecx-0x5e],0x56
  420c76:	fwait
  420c77:	cmp    edx,edx
  420c79:	cmp    ebp,DWORD PTR [eax+0x5d]
  420c7c:	loope  0x420cc7
  420c7e:	call   0x30c1300e
  420c83:	dec    esi
  420c84:	add    BYTE PTR [esi],al
  420c86:	mov    gs,WORD PTR [eax-0x29]
  420c89:	dec    esp
  420c8a:	shl    BYTE PTR [ebp-0x3c],1
  420c8d:	pop    ebp
  420c8e:	loopne 0x420c1d
  420c90:	test   eax,0xe1b549b1
  420c95:	xchg   ebx,eax
  420c96:	and    esp,0xf2f9cbfd
  420c9c:	xchg   esp,eax
  420c9d:	sub    bh,bh
  420c9f:	and    DWORD PTR [ebx+0x55e7ca80],0x7296ef8e
  420ca9:	xchg   ecx,eax
  420caa:	nop
  420cab:	ret    0x2f87
  420cae:	dec    edi
  420caf:	mov    cl,0x13
  420cb1:	cmp    bh,BYTE PTR [esi-0x37e602f]
  420cb7:	cmp    ebp,DWORD PTR [ebx-0x79f95049]
  420cbd:	push   edx
  420cbe:	sbb    al,ch
  420cc0:	add    ch,BYTE PTR [eax]
  420cc2:	add    eax,0x1bcedfd2
  420cc7:	mov    ds:0x589e62d9,al
  420ccc:	inc    ebp
  420ccd:	sbb    eax,0x923789a
  420cd2:	hlt    
  420cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cd4:	jno    0x420cf9
  420cd6:	mov    ebp,0x6a1abb25
  420cdb:	in     al,0x4a
  420cdd:	int3   
  420cde:	adc    eax,0x3499b4fd
  420ce3:	cdq    
  420ce4:	in     al,dx
  420ce5:	xor    ah,0x27
  420ce8:	push   ss
  420ce9:	sub    BYTE PTR [ecx+0x3e],dh
  420cec:	inc    ebp
  420ced:	push   esp
  420cee:	inc    edi
  420cef:	push   edx
  420cf0:	mov    ds:0xa5cf7f25,al
  420cf5:	dec    edi
  420cf6:	jge    0x420cab
  420cf8:	mov    ah,0xcd
  420cfa:	mov    ch,0x3c
  420cfc:	inc    esi
  420cfd:	xchg   esi,eax
  420cfe:	aaa    
  420cff:	jge    0x420cf5
  420d01:	sbb    eax,0x78c3b37a
  420d06:	mov    ds:0x92b9751,eax
  420d0b:	mov    ?,WORD PTR [ebp+0x3d]
  420d0e:	repz sbb ebx,DWORD PTR [ecx+0x51]
  420d12:	das    
  420d13:	pop    esp
  420d14:	add    al,0x44
  420d16:	ror    BYTE PTR [ebx],1
  420d18:	ss clc 
  420d1a:	xor    al,0x43
  420d1c:	or     esi,edx
  420d1e:	jns    0x420ca2
  420d20:	out    0xbe,al
  420d22:	and    al,0x65
  420d24:	sbb    eax,0x1c68015c
  420d29:	fucomp st(0)
  420d2b:	mov    eax,0xf50e20d6
  420d30:	xchg   esi,eax
  420d31:	clc    
  420d32:	dec    esi
  420d33:	div    BYTE PTR [edx-0x3f]
  420d36:	mov    esp,0xe0892c53
  420d3b:	fsubp  st(2),st
  420d3d:	ja     0x420d66
  420d3f:	inc    ebp
  420d40:	xor    BYTE PTR [ecx+0x37bb6bcc],dh
  420d46:	add    ah,BYTE PTR [esi-0x6c]
  420d49:	fist   DWORD PTR [ecx-0x16]
  420d4c:	sub    esi,esi
  420d4e:	int3   
  420d4f:	jmp    0x8137f8f8
  420d54:	rol    BYTE PTR [ecx],0x5a
  420d57:	xchg   edi,eax
  420d58:	xchg   ebx,eax
  420d59:	test   BYTE PTR [eax],0x7f
  420d5c:	add    eax,0x1b8fa6e1
  420d61:	cmp    dh,BYTE PTR [eax+0x14889deb]
  420d67:	lods   eax,DWORD PTR ds:[esi]
  420d68:	and    ch,BYTE PTR [esi+0x48b6d839]
  420d6e:	mov    ebp,0x20ce0e9e
  420d73:	fsubr  DWORD PTR [ebp+0xb]
  420d76:	cmp    ah,BYTE PTR [esi]
  420d78:	jge    0x420de2
  420d7a:	adc    BYTE PTR [eax-0x52cc3828],bl
  420d80:	pop    ecx
  420d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d82:	or     esi,ebp
  420d84:	imul   edi,DWORD PTR [ebx+eiz*8],0x72
  420d88:	ror    BYTE PTR [edx],cl
  420d8a:	(bad)  
  420d8b:	call   0x1f0b1c6e
  420d90:	(bad)  
  420d91:	out    0x33,al
  420d93:	sti    
  420d94:	xchg   DWORD PTR [esi-0x1d],ebx
  420d97:	sbb    bh,bh
  420d99:	jmp    0x472e:0xd670a5b
  420da0:	arpl   WORD PTR [ecx+ecx*8],bx
  420da3:	fisubr DWORD PTR [eax-0x30563899]
  420da9:	int    0xfa
  420dab:	fs hlt 
  420dad:	adc    al,BYTE PTR [edi+0x5]
  420db0:	pop    edi
  420db1:	outs   dx,BYTE PTR ds:[esi]
  420db2:	sub    bl,BYTE PTR [ebx]
  420db4:	(bad)  
  420db5:	push   0x8129ef0
  420dba:	dec    ebp
  420dbb:	push   edi
  420dbc:	add    al,0x57
  420dbe:	daa    
  420dbf:	popa   
  420dc0:	xor    bh,bl
  420dc2:	push   ebx
  420dc3:	je     0x420df8
  420dc5:	inc    ebp
  420dc6:	jne    0x420da5
  420dc8:	ss mov ecx,0xc27bed0
  420dce:	cwde   
  420dcf:	xchg   ecx,eax
  420dd0:	pop    ecx
  420dd1:	jg     0x420d63
  420dd3:	shl    BYTE PTR [edi+0x128dbc1],cl
  420dd9:	mov    ch,0xe4
  420ddb:	adc    DWORD PTR [eax+0x3f2245ce],esi
  420de1:	sub    ch,al
  420de3:	and    ebx,ecx
  420de5:	lahf   
  420de6:	imul   eax,DWORD PTR [ecx+0x30],0xa6f545c9
  420ded:	dec    ebx
  420dee:	and    esp,DWORD PTR [edi]
  420df0:	dec    esi
  420df1:	pop    edx
  420df2:	adc    BYTE PTR [edx+0x3a],bl
  420df5:	icebp  
  420df6:	jg     0x420dcb
  420df8:	add    DWORD PTR [ecx+0x69916477],ebp
  420dfe:	fnsave [ebx]
  420e00:	mov    eax,esi
  420e02:	mul    ebx
  420e04:	pop    ds
  420e05:	lahf   
  420e06:	scas   al,BYTE PTR es:[edi]
  420e07:	fstp   DWORD PTR [ecx-0x23f6d0f8]
  420e0d:	pop    esi
  420e0e:	scas   eax,DWORD PTR es:[edi]
  420e0f:	push   ss
  420e10:	loop   0x420d9b
  420e12:	inc    ebx
  420e13:	sub    al,0xbe
  420e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e16:	inc    edx
  420e17:	(bad)  
  420e18:	pop    edx
  420e19:	vunpcklps xmm0,xmm0,xmm2
  420e1d:	lods   al,BYTE PTR ds:[esi]
  420e1e:	call   0xde1bbbc6
  420e23:	jmp    0xc7203252
  420e28:	xchg   ecx,eax
  420e29:	das    
  420e2a:	movaps xmm1,XMMWORD PTR [esi+0x69c751b5]
  420e31:	sub    ah,al
  420e33:	xchg   DWORD PTR [edx+0x2b],esi
  420e36:	xchg   edx,eax
  420e37:	sub    bl,BYTE PTR [edx+0xd95d16b]
  420e3d:	neg    BYTE PTR [edx]
  420e3f:	xchg   ecx,eax
  420e40:	mov    ebx,0x78a8e5fa
  420e45:	stos   DWORD PTR es:[edi],eax
  420e46:	pop    esp
  420e47:	jnp    0x420dfb
  420e49:	je     0x420e35
  420e4b:	aaa    
  420e4c:	fsub   DWORD PTR [ebp+0x57]
  420e4f:	jmp    0x8cc852b0
  420e54:	leave  
  420e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e56:	loop   0x420e94
  420e58:	pop    ss
  420e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5a:	push   es
  420e5b:	ss push ebx
  420e5d:	xchg   si,ax
  420e5f:	pop    esp
  420e60:	sbb    BYTE PTR [eax+ebx*2],ah
  420e63:	or     DWORD PTR [ecx],esp
  420e65:	fcmove st,st(5)
  420e67:	inc    edi
  420e68:	jno    0x420def
  420e6a:	(bad)  
  420e6b:	fldcw  WORD PTR [edi+0x62608fd9]
  420e71:	jnp    0x420edf
  420e73:	loop   0x420ec7
  420e75:	ror    edi,cl
  420e77:	adc    eax,0x17c726c0
  420e7c:	test   bl,0xc2
  420e7f:	mov    dl,0x4f
  420e81:	mov    cl,0xbb
  420e83:	shl    DWORD PTR [ebp-0x8],cl
  420e86:	mov    eax,ds:0x329c6eaa
  420e8b:	das    
  420e8c:	cli    
  420e8d:	imul   edi,esi,0x62910b55
  420e93:	xchg   esp,eax
  420e94:	and    al,0xad
  420e96:	fsub   QWORD PTR [eax+0x36]
  420e99:	mov    WORD PTR [edx],ds
  420e9b:	xchg   ebp,eax
  420e9c:	mov    esi,0xd3355e13
  420ea1:	aas    
  420ea2:	xchg   esi,eax
  420ea3:	aad    0x1b
  420ea5:	mov    cl,0xd9
  420ea7:	push   eax
  420ea8:	jns    0x420e8a
  420eaa:	ficom  DWORD PTR [ebp+eiz*8-0x1cd598fb]
  420eb1:	es (bad) 
  420eb3:	call   0xaaa14c52
  420eb8:	lds    ebx,FWORD PTR [eax]
  420eba:	fxch   st(6)
  420ebc:	inc    edi
	...
  420ec9:	add    BYTE PTR [ebp+0x48],dl
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     dh,dl
  420ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed8:	pop    ecx
  420ed9:	enter  0x9db7,0x1
  420edd:	add    BYTE PTR [ebx+0x6],bh
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	add    BYTE PTR [eax],cl
  420ee4:	dec    ebp
  420ee5:	inc    ebx
  420ee6:	ins    BYTE PTR es:[edi],dx
  420ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee8:	outs   dx,DWORD PTR ds:[esi]
  420ee9:	retf   
  420eea:	cmp    edi,0xffffffa0
  420eed:	(bad)
  420ef0:	pop    ecx
  420ef1:	mov    edi,0x5a5a374c
  420ef6:	adc    eax,0x57dcc9b2
  420efb:	xchg   esi,eax
  420efc:	in     al,dx
  420efd:	xchg   BYTE PTR [esi-0x6a],bh
  420f00:	inc    esi
  420f01:	dec    esi
  420f02:	popa   
  420f03:	push   0xffffffae
  420f05:	(bad)  
  420f06:	pop    esp
  420f07:	scas   eax,DWORD PTR es:[edi]
  420f08:	fld    QWORD PTR [ebx+0x23]
  420f0b:	loopne 0x420edf
  420f0d:	dec    edx
  420f0e:	sub    BYTE PTR [edx+0x3f65d9f7],0xc3
  420f15:	sbb    al,0x21
  420f17:	mov    eax,0xfcd886ae
  420f1c:	les    eax,FWORD PTR [edx+0x5815be99]
  420f22:	xor    al,0x5b
  420f24:	or     edi,DWORD PTR [edx+0x78]
  420f27:	fidiv  DWORD PTR [edx]
  420f29:	leave  
  420f2a:	dec    esi
  420f2b:	lods   al,BYTE PTR ds:[esi]
  420f2c:	add    al,0xa5
  420f2e:	adc    dl,BYTE PTR [ebp-0x658eed51]
  420f34:	mov    dl,0x76
  420f36:	and    al,0xbb
  420f38:	inc    edi
  420f39:	popa   
  420f3a:	and    DWORD PTR [esi+0x68],edi
  420f3d:	jb     0x420f15
  420f3f:	and    eax,DWORD PTR [ebx]
  420f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f42:	pop    ecx
  420f43:	mov    ebp,0xecb35297
  420f48:	jmp    FWORD PTR [ebx-0x121a68b5]
  420f4e:	and    BYTE PTR ds:0x1e6ced87,0x92
  420f55:	aaa    
  420f56:	loope  0x420fd2
  420f58:	scas   al,BYTE PTR es:[edi]
  420f59:	jno    0x420ee9
  420f5b:	jmp    0x420f1d
  420f5d:	inc    eax
  420f5e:	in     al,dx
  420f5f:	cmp    bl,BYTE PTR [esp+edx*4+0x1d86857c]
  420f66:	test   eax,0x35f1e479
  420f6b:	dec    esi
  420f6c:	adc    DWORD PTR [esi-0x738db103],edx
  420f72:	fldenv [ebx]
  420f74:	mov    dh,0x49
  420f76:	cwde   
  420f77:	test   cl,bl
  420f79:	push   eax
  420f7a:	inc    esi
  420f7b:	jg     0x420fb4
  420f7d:	mov    DWORD PTR [ecx+0x7376c276],eax
  420f83:	(bad)  
  420f84:	shl    DWORD PTR [edi+ecx*1-0x6c1031b5],cl
  420f8b:	xor    al,0x4c
  420f8d:	cdq    
  420f8e:	pop    esi
  420f8f:	cli    
  420f90:	adc    bl,al
  420f92:	sub    eax,0xa80a8bc7
  420f97:	adc    eax,0x273d51a0
  420f9c:	ins    DWORD PTR es:[edi],dx
  420f9d:	cmp    DWORD PTR [esi+0x43dd565e],edi
  420fa3:	fadd   st,st(6)
  420fa5:	xchg   ebp,eax
  420fa6:	imul   ebx,DWORD PTR [edx],0xffffffd4
  420fa9:	(bad)  
  420faa:	(bad)  
  420fab:	nop
  420fac:	imul   ebx,edi,0xffffffcd
  420faf:	pop    ds
  420fb0:	adc    DWORD PTR [ecx+0x68],edi
  420fb3:	fwait
  420fb4:	push   ss
  420fb5:	xchg   edx,eax
  420fb6:	test   DWORD PTR [eax],edx
  420fb8:	fisttp QWORD PTR [esi-0x33]
  420fbb:	cmc    
  420fbc:	out    dx,eax
  420fbd:	ror    ch,1
  420fbf:	or     edi,esi
  420fc1:	jmp    0x2bf5:0x79396873
  420fc8:	jo     0x420f91
  420fca:	addr16 dec edi
  420fcc:	jmp    0xa151b123
  420fd1:	outs   dx,DWORD PTR ds:[esi]
  420fd2:	sub    al,0x1b
  420fd4:	cmp    bl,BYTE PTR [edx]
  420fd6:	mov    ch,0x6d
  420fd8:	dec    edx
  420fd9:	ja     0x421020
  420fdb:	jmp    0x421033
  420fdd:	push   ecx
  420fde:	xlat   BYTE PTR ds:[ebx]
  420fdf:	hlt    
  420fe0:	lods   al,BYTE PTR ds:[esi]
  420fe1:	fs (bad) 
  420fe3:	repnz aas 
  420fe5:	adc    al,0x52
  420fe7:	aas    
  420fe8:	mov    ebp,0x9e483231
  420fed:	cmp    ah,cl
  420fef:	adc    BYTE PTR [ebp+0x1f301c0c],bh
  420ff5:	imul   DWORD PTR [ecx]
  420ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ff8:	xchg   esp,eax
  420ff9:	adc    al,0x6a
  420ffb:	push   cs
  420ffc:	loop   0x420ff2
  420ffe:	and    DWORD PTR [eax],edi
  421000:	push   edx
  421001:	out    dx,al
  421002:	sbb    BYTE PTR [ecx+0x13bd1048],0x67
  421009:	xchg   ebx,eax
  42100a:	popa   
  42100b:	mov    DWORD PTR [ecx+0x2e],edi
  42100e:	lea    ebx,[eax]
  421010:	scas   al,BYTE PTR es:[edi]
  421011:	stos   DWORD PTR es:[edi],eax
  421012:	fucomi st,st(7)
  421014:	fadd   DWORD PTR [eax+ebp*1-0x5abd7018]
  42101b:	sbb    al,0xd6
  42101d:	add    al,0xfb
  42101f:	fsubr  st,st(7)
  421021:	pop    ebp
  421022:	sub    al,0x77
  421024:	push   esi
  421025:	jns    0x42104f
  421027:	cwde   
  421028:	mov    ?,WORD PTR [edx+eiz*2-0x5ff97e62]
  42102f:	ret    0x2a9e
  421032:	jmp    0x421057
  421034:	xchg   BYTE PTR [ebp+0x51],dl
  421037:	enter  0x30d1,0xa0
  42103b:	or     edx,DWORD PTR [ebx]
  42103d:	pop    edi
  42103e:	or     al,BYTE PTR [ebx+edi*2-0x3b]
  421042:	loop   0x42104f
  421044:	lahf   
  421045:	jne    0x420fed
  421047:	inc    edi
  421048:	(bad)  
  42104a:	ds and eax,0x4c4fb4e5
  421050:	push   esp
  421051:	jb     0x4210a6
  421053:	arpl   WORD PTR [esp+ecx*8+0x30f3ef2],dx
  42105a:	mov    dl,BYTE PTR [edi-0x22ae04c7]
  421060:	jmp    0x4210c9
  421062:	push   0x45b8e56e
  421067:	push   ds
  421068:	test   DWORD PTR [edx+0xd],ebx
  42106b:	mov    ds:0xad40724f,al
  421070:	(bad)  
  421071:	and    bl,BYTE PTR [ebp+esi*2-0x2ae2a0e3]
  421078:	dec    esp
  421079:	jl     0x421095
  42107b:	jno    0x421039
  42107d:	inc    BYTE PTR [esi]
  42107f:	popa   
  421080:	shr    BYTE PTR [edx+0x18d804f3],1
  421086:	retf   
  421087:	stos   DWORD PTR es:[edi],eax
  421088:	(bad)  [edi-0x53]
  42108b:	push   ebp
  42108c:	adc    BYTE PTR [edi],cl
  42108e:	jmp    0x421061
  421090:	pop    ebp
  421092:	mov    esi,0x2e5d6e3a
  421097:	mov    ch,0xa9
  421099:	out    0xec,eax
  42109b:	mov    edi,0xeeae7c56
  4210a0:	mov    esi,0x1a84359e
  4210a5:	div    DWORD PTR [ecx-0x41]
  4210a8:	out    0x2a,eax
  4210aa:	int3   
  4210ab:	fldenv [edx+0x20de5394]
  4210b1:	rcl    BYTE PTR [edx+0x1c],0x44
  4210b5:	dec    edx
  4210b6:	and    al,0xee
  4210b8:	mov    ebx,0x3ef845e8
  4210bd:	fstp   DWORD PTR ds:0xfc74b34f
  4210c3:	inc    ecx
  4210c4:	xchg   edi,eax
  4210c5:	aas    
  4210c6:	call   0x327ee071
  4210cb:	push   ebx
  4210cc:	cs mov ebx,0xe986b7b
  4210d2:	and    eax,0x1c9a838
  4210d7:	outs   dx,BYTE PTR ds:[esi]
  4210d8:	lea    esp,[ebp+0x3548aeb6]
  4210de:	outs   dx,DWORD PTR ds:[esi]
  4210df:	jo     0x421062
  4210e1:	push   edx
  4210e2:	addr16 mov esp,0xffb8fb67
  4210e8:	or     al,0x21
  4210ea:	mov    cl,0xa3
  4210ec:	stc    
  4210ed:	bound  edx,QWORD PTR [edi-0x69]
  4210f0:	mov    cl,0x3d
  4210f2:	and    DWORD PTR [edi+0x661378e6],edx
  4210f8:	inc    edx
  4210f9:	xor    BYTE PTR [eax-0x471a34b4],dl
  4210ff:	lods   al,BYTE PTR ds:[esi]
  421100:	(bad)  
  421102:	inc    esi
  421103:	fdivr  QWORD PTR [ebx]
  421105:	sbb    cl,dh
  421107:	imul   esi,DWORD PTR [edi],0x770d6c05
  42110d:	retf   0xa55f
  421110:	and    bh,BYTE PTR [edi*8-0x92e282b]
  421117:	in     al,dx
  421118:	stos   BYTE PTR es:[edi],al
  421119:	xor    al,0x8e
  42111b:	dec    ebp
  42111c:	sbb    ebx,edx
  42111e:	sbb    esi,DWORD PTR [ebp+0x7a27a772]
  421124:	xlat   BYTE PTR ds:[ebx]
  421125:	sbb    al,0x91
  421127:	and    al,0x73
  421129:	lahf   
  42112a:	jg     0x4210e8
  42112c:	push   cs
  42112d:	mov    ecx,0xe873c7fe
  421132:	pop    edi
  421133:	mov    ch,0xce
  421135:	mov    ebp,0x6a4a0a23
  42113a:	sub    esi,DWORD PTR ds:0xb73c104c
  421140:	adc    DWORD PTR [eax+0x2579c83e],esp
  421146:	test   BYTE PTR [ecx-0x5967bac],bl
  42114c:	cmc    
  42114d:	js     0x4210e2
  42114f:	cdq    
  421150:	mov    eax,ds:0x326fd958
  421155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421156:	mov    eax,0xf710fc69
  42115b:	jg     0x4211b2
  42115d:	fidivr WORD PTR [edx+0x14]
  421160:	lea    edx,[ebp-0x7d2bf16a]
  421166:	sub    al,0xc8
  421168:	dec    ebp
  421169:	sub    al,0xea
  42116b:	pop    ecx
  42116c:	adc    DWORD PTR [ebx],ecx
  42116e:	dec    ecx
  42116f:	mov    esp,0xa7fa5902
  421174:	fsub   QWORD PTR [esi+ebx*1]
  421177:	adc    DWORD PTR [ebp+eax*2+0x4a],esi
  42117b:	lods   eax,DWORD PTR ds:[esi]
  42117c:	push   0x20087833
  421181:	dec    ebp
  421182:	(bad)  
  421183:	idiv   DWORD PTR [edx-0x25]
  421186:	pop    ss
  421187:	pop    edx
  421188:	mov    esp,0xf707cf7c
  42118d:	aas    
  42118e:	data16 sub BYTE PTR [ebx],ah
  421191:	xchg   esp,eax
  421192:	or     eax,0xae0ae0df
  421197:	pushf  
  421198:	int3   
  421199:	adc    BYTE PTR [edi],ah
  42119b:	sbb    al,0xf
  42119d:	cld    
  42119e:	sub    ebx,DWORD PTR [edi-0x80]
  4211a1:	in     eax,dx
  4211a2:	pop    es
  4211a3:	lea    ecx,[esi]
  4211a5:	jmp    0x1ba678e9
  4211aa:	jns    0x421194
  4211ac:	or     BYTE PTR [ecx],cl
  4211ae:	cmc    
  4211af:	outs   dx,BYTE PTR ds:[esi]
  4211b0:	sti    
  4211b1:	dec    ecx
  4211b2:	xchg   edx,eax
  4211b3:	cmp    esp,DWORD PTR [ecx]
  4211b5:	jns    0x421184
  4211b7:	dec    eax
  4211b8:	mov    al,ds:0x30797a38
  4211bd:	dec    edi
  4211be:	sub    cl,dl
  4211c0:	sub    eax,0x47f40d2c
  4211c5:	shl    DWORD PTR [eax-0x68e97fd9],cl
  4211cb:	sar    DWORD PTR [ebx+0xe3f6075],1
  4211d1:	cmp    eax,0x691e60e8
  4211d6:	bound  esi,QWORD PTR [esi+0x1aede753]
  4211dc:	loopne 0x4211ab
  4211de:	inc    ecx
  4211df:	push   cs
  4211e0:	gs mov eax,0x29b7d61d
  4211e6:	sbb    BYTE PTR [ebp+0x3d1fb2bc],bl
  4211ec:	pop    edx
  4211ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ee:	push   edx
  4211ef:	in     al,0x14
  4211f1:	and    DWORD PTR [ecx],ebx
  4211f3:	(bad)  
  4211f4:	jl     0x4211d3
  4211f6:	jmp    0x26ca:0xdfb282e1
  4211fd:	iret   
  4211fe:	std    
  4211ff:	inc    esp
  421200:	cmp    edx,DWORD PTR [esi]
  421202:	rcr    BYTE PTR [esi],0xbe
  421205:	pop    ss
  421206:	sbb    BYTE PTR ds:0xb55ac83a,cl
  42120c:	sub    DWORD PTR [edx],ecx
  42120e:	dec    edx
  42120f:	(bad)  
  421210:	and    DWORD PTR [esi+0x66],ebp
  421213:	mov    eax,0x25427e88
  421218:	test   BYTE PTR [ecx],cl
  42121a:	(bad)  
  42121b:	jne    0x421265
  42121d:	sahf   
  42121e:	fmul   DWORD PTR [esi-0x1d7c87b6]
  421224:	ret    0x7e2e
  421227:	repz add ecx,DWORD PTR [ebp+0x24c384ed]
  42122e:	inc    ecx
  42122f:	xor    bh,BYTE PTR [edi]
  421231:	ss dec ecx
  421233:	mov    bh,0x9c
  421235:	jns    0x4212b4
  421237:	(bad)  
  421238:	xor    BYTE PTR [esi+0x7b],ah
  42123b:	imul   ebp,DWORD PTR [ecx-0x4f59083],0x27a070a
  421245:	js     0x4211d9
  421247:	in     eax,0xbf
  421249:	or     BYTE PTR [ebp+0x52],al
  42124c:	out    dx,al
  42124d:	adc    ebp,DWORD PTR [edx]
  42124f:	(bad)  
  421250:	dec    edi
  421251:	xchg   ebp,eax
  421252:	sub    bl,ch
  421254:	imul   eax,DWORD PTR [ebx+0x28],0x3c
  421258:	push   0x4b
  42125a:	dec    edi
  42125b:	int3   
  42125c:	dec    ecx
  42125d:	or     DWORD PTR [edi-0xa],esi
  421260:	loope  0x42122d
  421262:	fdiv   st,st(4)
  421264:	test   al,0x1
  421266:	fsubr  QWORD PTR [edi+0x3ebd1fb5]
  42126c:	add    BYTE PTR [edx-0x69],bh
  42126f:	dec    edi
  421270:	in     al,0xb0
  421272:	pop    edx
  421273:	or     BYTE PTR [edx+ebp*2],cl
  421276:	stc    
  421277:	fs retf 0x8292
  42127b:	jp     0x421215
  42127d:	sub    al,0xdd
  42127f:	mov    BYTE PTR [ebp+edx*1+0xe],ah
  421283:	std    
  421284:	or     ebx,edi
  421286:	adc    BYTE PTR [ebx-0x7b7fa545],0x2
  42128d:	inc    esi
  42128e:	or     al,0xf9
  421290:	mov    ds:0x8cab5525,eax
  421295:	imul   eax,ebp,0x55
  421298:	clc    
  421299:	mov    ch,0xab
  42129b:	push   eax
  42129c:	mov    ecx,0x6efc633f
  4212a1:	popa   
  4212a2:	mov    edi,DWORD PTR [edx]
  4212a4:	inc    esi
  4212a5:	mov    edi,0x2d37fdc2
  4212aa:	das    
  4212ab:	mov    al,0x94
  4212ad:	or     edi,ebp
  4212af:	mov    eax,ds:0xa5c41b85
  4212b4:	xchg   edx,eax
  4212b5:	push   cs
  4212b6:	push   es
  4212b7:	inc    eax
  4212b8:	stos   BYTE PTR es:[edi],al
  4212b9:	gs pushw es
  4212bc:	cmp    DWORD PTR [ebx],eax
  4212be:	out    0x21,eax
  4212c0:	sti    
  4212c1:	mov    ah,0xb1
  4212c3:	add    ch,BYTE PTR [edi+0x37]
  4212c6:	sub    al,BYTE PTR [edi+0x71b899d]
  4212cc:	es imul ecx,edx,0xffffff88
  4212d0:	jl     0x4212a4
  4212d2:	mov    ah,0x31
  4212d4:	test   eax,0x9e44423e
  4212d9:	xor    ecx,DWORD PTR [eax]
  4212db:	sbb    al,0x73
  4212dd:	test   al,bh
  4212df:	sub    BYTE PTR [edx],al
  4212e1:	add    DWORD PTR [esi+eiz*2-0x7a],esi
  4212e5:	ss push ebp
  4212e7:	adc    DWORD PTR [ebp+0x28],ebp
  4212ea:	sahf   
  4212eb:	(bad)
  4212f0:	stc    
  4212f1:	in     eax,0xa1
  4212f3:	lods   eax,DWORD PTR ds:[esi]
  4212f4:	add    dl,bl
  4212f6:	xchg   ebx,eax
  4212f7:	loop   0x421320
  4212f9:	mov    dh,0x37
  4212fb:	mov    DWORD PTR [edi-0x436feabd],ebx
  421301:	push   edi
  421302:	inc    ebx
  421303:	jnp    0x421329
  421305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421306:	cmp    DWORD PTR [edx-0x9ac0d37],eax
  42130c:	xor    al,0x7b
  42130e:	icebp  
  42130f:	sub    eax,0x34ada921
  421314:	jecxz  0x421353
  421316:	and    eax,0xd8cddf55
  42131b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42131c:	outs   dx,BYTE PTR ds:[esi]
  42131d:	mov    ?,WORD PTR [ebp+0x54d0d1db]
  421323:	int3   
  421324:	mov    dl,0x75
  421326:	jmp    0x4212bb
  421328:	fstp   TBYTE PTR [eax+ebx*8]
  42132b:	or     eax,DWORD PTR [ecx]
  42132d:	and    eax,0x24f1ce23
  421332:	jae    0x421388
  421334:	fdiv   DWORD PTR [ecx+0x7e85cd9e]
  42133a:	add    ch,BYTE PTR [edi-0x1f]
  42133d:	add    DWORD PTR [ebx+eiz*2],esi
  421340:	push   ebx
  421341:	and    eax,0x940279a3
  421346:	(bad)  
  421347:	cmc    
  421348:	jnp    0x4212d2
  42134a:	or     DWORD PTR [ebp-0x69f3fa65],edx
  421350:	gs jg  0x4213ca
  421353:	sti    
  421354:	dec    esp
  421355:	aas    
  421356:	and    DWORD PTR [edi-0x4d],esp
  421359:	sub    al,0x76
  42135b:	lahf   
  42135c:	xor    ch,ah
  42135e:	bound  ebx,QWORD PTR [esi+0x59]
  421361:	jmp    ecx
  421363:	cwde   
  421364:	cmp    al,bl
  421366:	int3   
  421367:	jo     0x4213e0
  421369:	imul   esi,eax,0x55964ffe
  42136f:	(bad)  
  421371:	or     esp,DWORD PTR [ebx]
  421373:	jb     0x421313
  421375:	shl    al,0xc8
  421378:	mov    bh,BYTE PTR ds:0x284267f9
  42137e:	in     al,dx
  42137f:	js     0x421343
  421381:	iret   
  421382:	call   0x703b8adf
  421387:	sub    al,0xb1
  421389:	ja     0x421319
  42138b:	inc    eax
  42138c:	imul   ebx,eax,0xe23f50a5
  421392:	lods   al,BYTE PTR ds:[esi]
  421393:	push   cs
  421394:	ret    0x860c
  421397:	push   esi
  421398:	xor    BYTE PTR [edi+0x56],bh
  42139b:	fadd   DWORD PTR [ebx-0x64]
  42139e:	or     eax,0xadec8953
  4213a3:	sbb    eax,0x30ac481d
  4213a8:	std    
  4213a9:	dec    eax
  4213aa:	test   BYTE PTR [edx],0xa2
  4213ad:	sahf   
  4213ae:	inc    ebp
  4213af:	ret    
  4213b0:	nop
  4213b1:	adc    DWORD PTR [esp+ebx*2-0x79],esp
  4213b5:	adc    ch,BYTE PTR [ebx+ecx*8]
  4213b8:	call   0xfe964a7a
  4213bd:	shl    DWORD PTR [ebp+0x19f25f59],0x7b
  4213c4:	jmp    0x8bfe82dd
  4213c9:	inc    edi
  4213ca:	data16 vmovaps ymm3,ymm6
  4213cf:	or     BYTE PTR [ebp-0x6240067f],bl
  4213d5:	xor    bh,bh
  4213d7:	loope  0x4213d9
  4213d9:	leave  
  4213da:	ret    
  4213db:	es push esp
  4213dd:	inc    ecx
  4213de:	mov    eax,0x6f592a2e
  4213e3:	ja     0x421369
  4213e5:	cmovle ebp,DWORD PTR [edi+0x1cbeef6f]
  4213ec:	aam    0x3c
  4213ee:	pop    esi
  4213ef:	dec    esi
  4213f0:	shl    BYTE PTR [edx+ebx*1],0xdb
  4213f4:	xor    eax,0x9df68323
  4213f9:	scas   eax,DWORD PTR es:[edi]
  4213fa:	xor    ebp,esi
  4213fc:	adc    al,0xfa
  4213fe:	push   cs
  4213ff:	mov    ds:0xb2d8ce92,al
  421404:	pop    ds
  421405:	ins    BYTE PTR es:[edi],dx
  421406:	icebp  
  421407:	push   esp
  421408:	je     0x4213fb
  42140a:	cs ja  0x4213bb
  42140d:	add    BYTE PTR [ecx+eiz*4],cl
  421410:	arpl   dx,cx
  421412:	pop    ds
  421413:	pop    ebx
  421414:	push   0x139f2173
  421419:	add    eax,0xe4bcd748
  42141e:	(bad)  
  42141f:	adc    BYTE PTR [eax+ecx*1],bh
  421422:	in     eax,0xe
  421424:	sbb    eax,0x9b3a9a87
  421429:	outs   dx,DWORD PTR ds:[esi]
  42142a:	xor    eax,0x737dcbf0
  42142f:	lahf   
  421430:	or     BYTE PTR [esi],bl
  421432:	fst    QWORD PTR [eax]
  421434:	mov    al,0x96
  421436:	ret    
  421437:	sub    DWORD PTR [esi],ecx
  421439:	int    0x6d
  42143b:	loop   0x421439
  42143d:	into   
  42143e:	addr16 add al,0xac
  421441:	mov    ebx,0x30aa0999
  421446:	mov    esi,0x53fd44b8
  42144b:	dec    edx
  42144c:	cld    
  42144d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42144e:	jle    0x42144f
  421450:	pop    ecx
  421451:	xchg   ebx,eax
  421452:	out    0x23,al
  421454:	shr    DWORD PTR [edi+0x42f12e47],0xa8
  42145b:	(bad)  [edi]
  42145d:	sbb    bl,BYTE PTR [ebp+0x4fd1173f]
  421463:	jns    0x421497
  421465:	cmp    DWORD PTR [ecx+0x72459983],ebp
  42146b:	fisubr WORD PTR [edi]
  42146d:	les    edx,FWORD PTR [esi]
  42146f:	inc    edi
  421470:	mov    ds,WORD PTR [ebx-0x14]
  421473:	retf   0xa912
  421476:	dec    edx
  421477:	and    edx,DWORD PTR [ebx+0x72]
  42147a:	jne    0x42144e
  42147c:	(bad)  
  42147d:	xor    BYTE PTR [edx+eax*2-0x11],ch
  421481:	iret   
  421482:	mov    esi,0x821c09e1
  421487:	or     ch,BYTE PTR [edx+0x27]
  42148a:	adc    BYTE PTR [edi+0x6099539f],0xa3
  421491:	test   dh,bh
  421493:	inc    ecx
  421494:	dec    esi
  421495:	jp     0x421465
  421497:	xor    al,0x9c
  421499:	loopne 0x4214c3
  42149b:	test   DWORD PTR [edi+0x6c],ebx
  42149e:	mov    BYTE PTR [edx-0x16f72396],ch
  4214a4:	sar    ebx,cl
  4214a6:	lock sub edx,ecx
  4214a9:	sub    BYTE PTR [eax],0x44
  4214ac:	test   BYTE PTR [edi],cl
  4214ae:	nop
  4214af:	push   esp
  4214b0:	(bad)  
  4214b1:	das    
  4214b2:	fwait
  4214b3:	xor    dh,0xbe
  4214b6:	push   0x61
  4214b8:	xor    al,0xb7
  4214ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214bb:	mov    eax,0xa628bda7
  4214c0:	dec    esp
  4214c1:	jle    0x421491
  4214c3:	or     al,0xff
  4214c5:	jae    0x4214d0
  4214c7:	inc    dx
  4214c9:	cdq    
  4214ca:	daa    
  4214cb:	push   0xdcf4a678
  4214d0:	mov    ds:0x90901e37,eax
  4214d5:	or     esi,DWORD PTR fs:[esi-0x78]
  4214d9:	bound  ebp,QWORD PTR [edi+ebp*8-0x30]
  4214dd:	and    BYTE PTR [ebp+0x33],cl
  4214e0:	xchg   edi,eax
  4214e1:	sti    
  4214e2:	leave  
  4214e3:	xchg   ebp,eax
  4214e4:	lods   eax,DWORD PTR ds:[esi]
  4214e5:	mov    gs,ecx
  4214e7:	jbe    0x421475
  4214e9:	push   0x38
  4214eb:	xchg   esi,eax
  4214ec:	xor    DWORD PTR [edx-0x4e0132ba],esp
  4214f2:	retf   
  4214f3:	popf   
  4214f4:	into   
  4214f5:	adc    eax,0xd0e24c77
  4214fa:	mov    eax,ds:0x301a0d7
  4214ff:	in     eax,dx
  421500:	lods   eax,DWORD PTR ds:[esi]
  421501:	pop    edx
  421502:	inc    esi
  421503:	fsub   DWORD PTR [esi-0xb1335ed]
  421509:	xor    DWORD PTR [esi+0x75],edi
  42150c:	sbb    eax,0xea4c5de
  421511:	loop   0x42149c
  421513:	loop   0x4214a7
  421515:	push   0x2f409ad
  42151a:	dec    eax
  42151b:	in     al,0x10
  42151d:	cmc    
  42151e:	cld    
  42151f:	cmp    al,0x5f
  421521:	test   al,0x32
  421523:	fsubr  DWORD PTR [eax-0x795d2a6c]
  421529:	clc    
  42152a:	and    eax,0x42325732
  42152f:	(bad)  
  421531:	mov    edi,0x471678d7
  421536:	xchg   esp,eax
  421537:	jb     0x421550
  421539:	in     eax,0x9d
  42153b:	jg     0x42157f
  42153d:	add    eax,edi
  42153f:	or     BYTE PTR [esi-0xc],bh
  421542:	or     al,0xaf
  421544:	xlat   BYTE PTR ds:[ebx]
  421545:	mov    ebp,0x242f046a
  42154a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42154b:	cmp    DWORD PTR [edi-0xc],ebp
  42154e:	jge    0x4214fc
  421550:	push   esp
  421551:	shr    DWORD PTR [esi],1
  421553:	dec    eax
  421554:	lahf   
  421555:	pop    edx
  421556:	adc    BYTE PTR [ebx-0x3b54c825],cl
  42155c:	out    dx,al
	...
  421569:	add    BYTE PTR [edi+0x5a],dl
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0xf0b087b5
  421579:	xor    ah,BYTE PTR [si+0x1]
  42157e:	jnp    0x421586
  421580:	add    BYTE PTR [eax],al
  421582:	bound  edi,QWORD PTR [edi+0x3c9dda7e]
  421588:	les    ebp,FWORD PTR [ebx+0x2d]
  42158b:	cmp    al,dh
  42158d:	and    BYTE PTR [edi+0x76fd0dfa],ch
  421593:	adc    eax,0x8f337713
  421598:	jno    0x421579
  42159a:	mov    dh,0xcc
  42159c:	mov    eax,0xbb14cc57
  4215a1:	push   edi
  4215a2:	sub    eax,0xd81f8912
  4215a7:	cwde   
  4215a8:	jle    0x42152b
  4215aa:	pop    esi
  4215ab:	repz mov bh,0x21
  4215ae:	push   eax
  4215af:	je     0x4215f2
  4215b1:	xor    ecx,DWORD PTR [ebp+0x40eb043f]
  4215b7:	or     eax,0x8a18806d
  4215bc:	push   edi
  4215bd:	ror    BYTE PTR [edx-0xbba8809],0xc1
  4215c4:	rcr    BYTE PTR [eax+0x22],1
  4215c7:	adc    eax,0xafd3e041
  4215cc:	xor    esp,DWORD PTR [eax+eiz*2-0x547baf22]
  4215d3:	cmp    eax,0x11733f8d
  4215d8:	adc    al,0x6
  4215da:	bound  ebp,QWORD PTR [ebx-0x34]
  4215dd:	fistp  WORD PTR [ecx]
  4215df:	mov    ebp,0xeb9616c4
  4215e4:	jl     0x4215af
  4215e6:	xor    edx,DWORD PTR [ebx-0x4b]
  4215e9:	test   ch,dh
  4215eb:	das    
  4215ec:	jl     0x421582
  4215ee:	cmp    al,0x22
  4215f0:	push   esi
  4215f1:	pop    ebx
  4215f2:	fnsave [ebp-0x36a06b3e]
  4215f8:	cdq    
  4215f9:	fs mov ebx,0x621eaa10
  4215ff:	push   ebp
  421600:	xor    ah,dl
  421602:	ja     0x421643
  421604:	icebp  
  421605:	add    al,0x53
  421607:	add    DWORD PTR [ebx-0x58d528e3],esi
  42160d:	push   es
  42160e:	fidivr DWORD PTR [ebp-0x6a09e0bd]
  421614:	xchg   esi,eax
  421615:	or     BYTE PTR [ebx+0x26],0xcb
  421619:	pop    esp
  42161a:	inc    BYTE PTR [esi*8+0x457d0be4]
  421621:	idiv   DWORD PTR [esi-0x6488f1ee]
  421627:	pop    ebx
  421628:	fst    DWORD PTR [eax-0x5376e755]
  42162e:	je     0x42160b
  421630:	push   ecx
  421631:	sbb    ebp,eax
  421633:	lds    eax,FWORD PTR [edi+0x469c445]
  421639:	jl     0x4216a3
  42163b:	daa    
  42163c:	(bad)  [esi]
  42163e:	cwde   
  42163f:	neg    dl
  421641:	mov    cl,0x78
  421643:	(bad)  
  421644:	fisubr WORD PTR [ecx]
  421646:	lahf   
  421647:	aad    0x28
  421649:	arpl   WORD PTR [edx-0x54],di
  42164c:	into   
  42164d:	adc    al,0x59
  42164f:	mov    al,ds:0x7b52f616
  421654:	dec    esi
  421655:	out    0xf6,eax
  421657:	(bad)  
  421658:	fnstcw WORD PTR [ecx-0x60cc3fde]
  42165e:	push   0xd0375291
  421663:	inc    eax
  421664:	cdq    
  421665:	rcl    BYTE PTR ds:0xa7a39c34,cl
  42166b:	jmp    0x4216d5
  42166d:	push   ebp
  42166e:	add    DWORD PTR [ecx+0x262c1ebd],esp
  421674:	jecxz  0x421654
  421676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421677:	cmc    
  421678:	jmp    0x421637
  42167a:	xlat   BYTE PTR ds:[ebx]
  42167b:	dec    edx
  42167c:	dec    esp
  42167d:	push   edx
  42167e:	cmp    ah,ch
  421680:	pop    ebx
  421682:	clc    
  421683:	ins    BYTE PTR es:[edi],dx
  421684:	jmp    0xeca3abd5
  421689:	inc    edi
  42168a:	mov    dh,cl
  42168c:	pop    edi
  42168d:	dec    edx
  42168e:	lock push edi
  421690:	cmp    al,0x9f
  421692:	fisub  WORD PTR [ebx]
  421694:	and    al,BYTE PTR [eax-0x18]
  421697:	jo     0x4216ca
  421699:	cmp    eax,0x39baa1f7
  42169e:	ja     0x42171c
  4216a0:	nop
  4216a1:	icebp  
  4216a2:	out    0xf3,al
  4216a4:	pop    esp
  4216a5:	sti    
  4216a6:	ror    BYTE PTR [ecx],0xdf
  4216a9:	mov    ch,0x8e
  4216ab:	push   es
  4216ac:	xchg   ecx,eax
  4216ad:	in     eax,0x2d
  4216af:	jae    0x4216ba
  4216b1:	adc    al,dl
  4216b3:	or     BYTE PTR fs:[ebx+0x18551c4f],ah
  4216ba:	xor    DWORD PTR [edi+edi*8-0x5f9f471e],ebx
  4216c1:	jns    0x421721
  4216c3:	cmc    
  4216c4:	dec    esi
  4216c5:	sub    al,0x74
  4216c7:	and    eax,0xd8d634ca
  4216cc:	jno    0x4216f6
  4216ce:	loope  0x421722
  4216d0:	fs out dx,al
  4216d2:	mov    edx,0x28ecca75
  4216d7:	imul   edx,eax,0x804704dd
  4216dd:	jp     0x4216f4
  4216df:	sbb    edx,DWORD PTR [ecx-0x7f16ee20]
  4216e5:	cmp    ebx,DWORD PTR [edi-0x79]
  4216e8:	rcr    BYTE PTR [eax],0xcd
  4216eb:	jge    0x421708
  4216ed:	mov    ah,0x6e
  4216ef:	loope  0x42170d
  4216f1:	(bad)  
  4216f2:	fidiv  DWORD PTR [esi]
  4216f4:	lea    ecx,[eax]
  4216f6:	push   cs
  4216f7:	add    dl,BYTE PTR [ecx]
  4216f9:	mov    esp,0xe68f99d
  4216fe:	jmp    0xb1ee:0x77f816f7
  421705:	std    
  421706:	mov    bh,0x7
  421708:	daa    
  421709:	pop    esp
  42170a:	push   edi
  42170b:	jb     0x421779
  42170d:	cmp    BYTE PTR [ecx],dl
  42170f:	loop   0x4216a2
  421711:	enter  0x84a7,0x2f
  421715:	sbb    al,0xa9
  421717:	cmc    
  421718:	in     eax,0xd
  42171a:	nop
  42171b:	rol    BYTE PTR [edx+0x3c],0x4f
  42171f:	sub    ebx,0x12
  421722:	in     al,dx
  421723:	push   ebx
  421724:	or     eax,0x3e59dfb9
  421729:	scas   eax,DWORD PTR es:[edi]
  42172a:	sub    al,0xd8
  42172c:	aad    0x3
  42172e:	out    dx,eax
  42172f:	(bad)  
  421730:	mov    eax,0x4bd8b80e
  421735:	xor    edx,esp
  421737:	test   al,0x83
  421739:	inc    ebp
  42173a:	aad    0x58
  42173c:	pop    DWORD PTR [esp+ebx*1]
  42173f:	mov    cs,WORD PTR [eax+0x27]
  421742:	ja     0x42176a
  421744:	(bad)
  42174a:	int3   
  42174b:	adc    DWORD PTR [ecx+0x9],esp
  42174e:	std    
  42174f:	push   eax
  421750:	inc    ebx
  421751:	imul   esp,DWORD PTR [edi+ebx*4+0x1a4789c7],0xffffffa8
  421759:	xor    bl,BYTE PTR [eax-0x45]
  42175c:	push   0x0
  42175e:	ds sub dh,ch
  421761:	mov    esi,DWORD PTR [ebx+0x1e]
  421764:	out    dx,eax
  421765:	mov    ds:0x22389466,eax
  42176a:	mov    ah,0xd5
  42176c:	xchg   BYTE PTR [edx],bl
  42176e:	cmp    dh,BYTE PTR [ecx+0x1099f509]
  421774:	mov    eax,0x3b53b0e3
  421779:	call   0x691d:0x495b6942
  421780:	dec    eax
  421781:	fisubr WORD PTR [ebx]
  421783:	clc    
  421784:	call   0x4194:0x105f6461
  42178b:	ins    DWORD PTR es:[edi],dx
  42178c:	cmp    DWORD PTR [edx+0x77],esp
  42178f:	xchg   ebx,eax
  421790:	outs   dx,DWORD PTR ds:[esi]
  421791:	xor    eax,0xbdefcca0
  421796:	les    esi,FWORD PTR [esi-0x116d9872]
  42179c:	xor    al,0x23
  42179e:	rol    DWORD PTR [esi-0x49],cl
  4217a1:	shl    BYTE PTR [ecx-0x6f7c304],0xaa
  4217a8:	xcrypt-ecb (bad)
  4217a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217aa:	push   cs
  4217ab:	ja     0x421820
  4217ad:	xor    DWORD PTR [edi],edi
  4217af:	inc    ebx
  4217b0:	sub    al,0x66
  4217b2:	aaa    
  4217b3:	fsubr  st,st(2)
  4217b5:	add    DWORD PTR [eax-0x3a],0x98471ee2
  4217bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217bd:	stos   BYTE PTR es:[edi],al
  4217be:	ins    DWORD PTR es:[edi],dx
  4217bf:	inc    esp
  4217c0:	inc    edi
  4217c1:	and    al,0xa1
  4217c3:	in     al,0xeb
  4217c5:	repz push edx
  4217c7:	jns    0x42182c
  4217c9:	cmp    eax,0x6347a36a
  4217ce:	mov    al,0xaf
  4217d0:	fidiv  WORD PTR [edi-0x78a45a4e]
  4217d6:	xchg   DWORD PTR [edi+esi*2+0x5dd53fcf],ecx
  4217dd:	or     eax,0xc90f662e
  4217e2:	cwde   
  4217e3:	(bad)  [ebx]
  4217e5:	mov    ds:0x9e0aafe7,al
  4217ea:	push   ss
  4217eb:	mov    edi,0xc6bf35f5
  4217f0:	ins    BYTE PTR es:[edi],dx
  4217f1:	mov    dl,0xba
  4217f3:	or     ebp,0x63
  4217f6:	xor    al,0x8e
  4217f8:	mov    al,ds:0x1792274d
  4217fd:	xchg   ebp,eax
  4217fe:	cmc    
  4217ff:	test   esi,0x9cf1b67a
  421805:	push   esp
  421806:	enter  0x665f,0x31
  42180a:	sub    DWORD PTR ss:[edx],ecx
  42180d:	sbb    bl,BYTE PTR [edx-0x51]
  421810:	(bad)  
  421811:	mov    ebx,0xd57b6d2f
  421816:	shl    BYTE PTR [esi-0x52],0xab
  42181a:	idiv   BYTE PTR [ebp+0x79aea985]
  421820:	inc    edx
  421821:	sub    ebx,DWORD PTR [edi-0x3b]
  421824:	loopne 0x421822
  421826:	or     cl,0xb9
  421829:	mov    cl,0x6d
  42182b:	(bad)  
  42182c:	in     eax,dx
  42182d:	les    esp,FWORD PTR [ebx-0x3b5a73ab]
  421833:	aad    0x51
  421835:	fwait
  421836:	and    al,0x35
  421838:	add    BYTE PTR ds:0x8636b65,cl
  42183e:	xchg   ebx,eax
  42183f:	pusha  
  421840:	ins    BYTE PTR es:[edi],dx
  421841:	jae    0x421805
  421843:	pop    eax
  421844:	sbb    eax,0x871b30fe
  421849:	aad    0xd6
  42184b:	sbb    BYTE PTR [esp+edx*4],bl
  42184e:	(bad)  
  421850:	imul   ebx,ecx,0x173271bc
  421856:	xchg   DWORD PTR [edi+ebp*2],edi
  421859:	mov    bh,0xbd
  42185b:	or     eax,0xefaf3f41
  421860:	test   eax,0x421f8a88
  421865:	stc    
  421866:	pushw  es
  421868:	lock inc ebx
  42186a:	loopne 0x421871
  42186c:	jl     0x4218cb
  42186e:	(bad)  
  42186f:	icebp  
  421870:	dec    ebx
  421871:	fimul  WORD PTR [esi+eiz*2-0x18d6fa9d]
  421878:	shl    BYTE PTR [ecx-0x7],0x65
  42187c:	jg     0x421848
  42187e:	arpl   bp,bp
  421880:	mov    ebp,0x518a123d
  421885:	mov    eax,0xea8bd8b6
  42188a:	iret   
  42188b:	sar    DWORD PTR [esi+edx*4-0x524bb7c6],cl
  421892:	sbb    BYTE PTR [eax-0x79],bh
  421895:	pop    ecx
  421896:	out    0x86,al
  421898:	lods   eax,DWORD PTR ds:[esi]
  421899:	into   
  42189a:	mov    edx,DWORD PTR [ebx]
  42189c:	rcl    DWORD PTR [eax+0x3f7de94a],0x52
  4218a3:	adc    al,0x66
  4218a5:	lods   al,BYTE PTR ds:[esi]
  4218a6:	dec    eax
  4218a7:	mov    ah,0xa9
  4218a9:	cmp    al,0x84
  4218ab:	cld    
  4218ac:	sti    
  4218ad:	inc    ebp
  4218ae:	aam    0x87
  4218b0:	xchg   edi,eax
  4218b1:	sub    ah,0x73
  4218b4:	cmp    cl,BYTE PTR [ebp+0x71]
  4218b7:	push   esp
  4218b8:	idiv   DWORD PTR [edi]
  4218ba:	mov    eax,0x8fa94d25
  4218bf:	sar    BYTE PTR [esi+0x3d44d939],1
  4218c5:	push   cs
  4218c6:	jae    0x421858
  4218c8:	imul   eax,ecx,0xffffffb1
  4218cb:	sbb    dl,bh
  4218cd:	mov    dh,0xfc
  4218cf:	push   esp
  4218d0:	cli    
  4218d1:	jle    0x42189a
  4218d3:	pop    edi
  4218d4:	push   0x78355250
  4218d9:	xchg   cl,dl
  4218db:	scas   eax,DWORD PTR es:[edi]
  4218dc:	ficomp DWORD PTR [ecx+0x479645d5]
  4218e2:	fist   WORD PTR [edx+0x56]
  4218e5:	mov    ebp,0xc7be68ff
  4218ea:	les    ebp,FWORD PTR [ecx-0xe837c2e]
  4218f0:	or     al,0x7
  4218f2:	ret    
  4218f3:	mov    dh,0xb7
  4218f5:	xor    esp,DWORD PTR [eax+0x6c]
  4218f8:	or     ecx,esi
  4218fa:	rol    BYTE PTR [ecx+0x12],0x33
  4218fe:	ret    
  4218ff:	xchg   esp,eax
  421900:	(bad)  
  421901:	dec    esi
  421902:	jmp    0x421928
  421904:	inc    edx
  421905:	sahf   
  421906:	imul   esi,DWORD PTR [esi+0x4d],0x781d53eb
  42190d:	enter  0x2861,0x1f
  421911:	sub    eax,0x330b8672
  421916:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421918:	xlat   BYTE PTR ds:[ebx]
  421919:	das    
  42191a:	aaa    
  42191b:	jo     0x42193d
  42191d:	jno    0x421971
  42191f:	lds    ebx,FWORD PTR [eax+ebx*2+0x6]
  421923:	mov    ds:0x39ff4b08,eax
  421928:	mov    ecx,0x821301e1
  42192d:	dec    ebx
  42192e:	aam    0x80
  421930:	add    DWORD PTR [ecx-0x797269ca],ebx
  421936:	outs   dx,DWORD PTR ds:[esi]
  421937:	xchg   edx,eax
  421938:	xchg   ecx,eax
  421939:	inc    eax
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	xor    edx,DWORD PTR [esi]
  42193d:	fwait
  42193e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421940:	cmp    bh,dh
  421942:	xor    edi,ebp
  421944:	arpl   WORD PTR [ecx+0x5e],di
  421947:	in     eax,0x91
  421949:	add    DWORD PTR [edx+0x5d],ecx
  42194c:	cs test eax,0xf13c1bc3
  421952:	mov    ds:0x85d274bd,eax
  421957:	pop    ds
  421958:	nop
  421959:	mov    dh,0x52
  42195b:	dec    ebp
  42195c:	in     al,0x5
  42195e:	add    BYTE PTR [ecx-0x4f5d319e],0x8f
  421965:	sbb    al,0x4d
  421967:	(bad)  
  421968:	or     bh,dh
  42196a:	push   ecx
  42196b:	and    cl,bh
  42196d:	xchg   BYTE PTR [edi+0x444a3946],bh
  421973:	loop   0x42193f
  421975:	push   esi
  421976:	arpl   cx,ax
  421978:	pop    edi
  421979:	pusha  
  42197a:	jb     0x42190f
  42197c:	sbb    edx,DWORD PTR [esi+0x1b]
  42197f:	retf   0x5fb2
  421982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421983:	dec    ebp
  421984:	aad    0xab
  421986:	mov    dl,0x12
  421988:	push   edi
  421989:	mov    bh,0x89
  42198b:	cmp    ecx,DWORD PTR [edi-0x7508a33e]
  421991:	int    0xb4
  421993:	aad    0xae
  421995:	dec    eax
  421996:	mov    BYTE PTR [esp+ebx*1-0xe],cl
  42199a:	out    0x19,al
  42199c:	add    DWORD PTR [ebp-0x53],ebp
  42199f:	clc    
  4219a0:	cmp    al,0xed
  4219a2:	mov    ch,0xe5
  4219a4:	dec    esi
  4219a5:	pop    ss
  4219a6:	ret    
  4219a7:	jp     0x4219c5
  4219a9:	les    edx,FWORD PTR [ebx+0x24]
  4219ac:	ins    DWORD PTR es:[edi],dx
  4219ad:	fimul  DWORD PTR [esi]
  4219af:	jbe    0x421935
  4219b1:	fild   DWORD PTR cs:[ecx]
  4219b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219b5:	(bad)  
  4219b6:	mov    dh,0xec
  4219b8:	enter  0x1136,0xe6
  4219bc:	cwde   
  4219bd:	aad    0x1b
  4219bf:	ins    BYTE PTR es:[edi],dx
  4219c0:	mov    BYTE PTR [ebx+eax*1+0x12],0xcf
  4219c5:	je     0x4219da
  4219c7:	mov    ebx,DWORD PTR [ecx+0x68b669e5]
  4219cd:	pop    ebp
  4219ce:	pop    edx
  4219cf:	xchg   esi,eax
  4219d0:	fidiv  DWORD PTR [ebx+0x41437bc8]
  4219d7:	push   ss
  4219d8:	fstp   TBYTE PTR [esi-0x12]
  4219db:	cwde   
  4219dc:	push   ecx
  4219dd:	arpl   WORD PTR ds:0xccec8ebf,sp
  4219e3:	loope  0x421a60
  4219e5:	xor    ecx,DWORD PTR [eax]
  4219e7:	and    ch,BYTE PTR [edi+0x40]
  4219ea:	pop    ebx
  4219eb:	test   BYTE PTR es:[ecx-0x522f6d86],dl
  4219f2:	call   0xeaf9:0x2a52901c
  4219f9:	or     edi,eax
  4219fb:	(bad)  
  4219fc:	mov    eax,0x518cbfde
  421a01:	push   esi
  421a02:	sti    
  421a03:	rcr    bl,0x91
  421a06:	jge    0x421a7f
  421a08:	sbb    al,0x16
  421a0a:	leave  
  421a0b:	dec    eax
  421a0c:	and    ch,al
  421a0e:	cmp    esp,0xf2b10fd3
  421a14:	add    edi,esi
  421a16:	sub    al,0xd4
  421a18:	dec    ebp
  421a19:	aas    
  421a1a:	imul   ebp,DWORD PTR ds:0x20ce7ed3,0x9b7d59
  421a24:	lds    esi,FWORD PTR [ebp+esi*2+0x68]
  421a28:	pop    ecx
  421a29:	mov    al,ds:0xd55192cc
  421a2e:	inc    esp
  421a2f:	cwde   
  421a30:	test   al,0xfb
  421a32:	(bad)  
  421a33:	cmp    DWORD PTR [ebp+0x49],ebx
  421a36:	push   ebx
  421a37:	push   ss
  421a38:	push   es
  421a39:	icebp  
  421a3a:	pop    ds
  421a3b:	mov    es,WORD PTR [esi]
  421a3d:	push   ebp
  421a3e:	(bad)  
  421a3f:	hlt    
  421a40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a41:	mov    eax,0x79c1d7b3
  421a46:	(bad)  
  421a47:	and    al,0x95
  421a49:	stc    
  421a4a:	shl    bh,1
  421a4c:	(bad)  
  421a4d:	mov    esi,0xb7bce58d
  421a52:	and    al,0x5a
  421a54:	mov    ds:0xc12975af,eax
  421a59:	arpl   WORD PTR [esi],sp
  421a5b:	int3   
  421a5c:	sbb    eax,0x4ca88ebb
  421a61:	cmp    al,0xf6
  421a63:	ins    BYTE PTR es:[edi],dx
  421a64:	pop    esp
  421a65:	retf   0x8809
  421a68:	jo     0x421a08
  421a6a:	add    esi,esp
  421a6c:	push   ecx
  421a6d:	leave  
  421a6e:	xchg   edx,eax
  421a6f:	mov    BYTE PTR [edx],al
  421a71:	inc    ebx
  421a72:	jb     0x421a19
  421a74:	add    BYTE PTR [edx-0x4d4245c2],0x1c
  421a7b:	call   0x242278a0
  421a80:	out    dx,al
  421a81:	fsubr  DWORD PTR [eax+edi*8+0x33a5dbae]
  421a88:	lods   al,BYTE PTR ds:[esi]
  421a89:	outs   dx,BYTE PTR ds:[esi]
  421a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a8b:	out    0xcb,eax
  421a8d:	in     eax,0xed
  421a8f:	xchg   BYTE PTR [edx],ch
  421a91:	(bad)  
  421a92:	and    edi,DWORD PTR ds:0xb152029d
  421a98:	adc    BYTE PTR [edi-0x5d00fe66],0x69
  421a9f:	push   eax
  421aa0:	ror    BYTE PTR [esi+0x75],0xc1
  421aa4:	inc    ecx
  421aa5:	mov    al,0x9b
  421aa7:	push   esi
  421aa8:	sub    cl,BYTE PTR [esi]
  421aaa:	scas   al,BYTE PTR es:[edi]
  421aab:	push   eax
  421aac:	test   edx,0xd2c8b02d
  421ab2:	sbb    eax,0x5aa2e922
  421ab7:	sbb    al,0x69
  421ab9:	mov    ch,0xcd
  421abb:	out    0xa9,eax
  421abd:	and    BYTE PTR [edx],al
  421abf:	sbb    eax,DWORD PTR [ebp+0x68e90511]
  421ac5:	mov    ds:0x9405e27b,eax
  421aca:	pushf  
  421acb:	sbb    al,0x8d
  421acd:	pop    ss
  421ace:	out    dx,eax
  421acf:	and    eax,0x1a1a47eb
  421ad4:	adc    edi,ebp
  421ad6:	add    ch,ah
  421ad8:	xchg   esi,eax
  421ad9:	jp     0x421b10
  421adb:	jmp    0xf26d:0x9af06a7b
  421ae2:	aaa    
  421ae3:	sub    eax,0x5d4291af
  421ae8:	idiv   edx
  421aea:	js     0x421b55
  421aec:	mov    ebx,0xb02cfd70
  421af1:	adc    al,0x88
  421af3:	dec    ecx
  421af4:	fucom  st(0)
  421af6:	ficom  WORD PTR [edx+0x376a3165]
  421afc:	pop    bx
  421afe:	adc    cl,BYTE PTR [edi-0x4b]
  421b01:	adc    edi,DWORD PTR [edi+0x6c]
  421b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b05:	jae    0x421b16
  421b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b08:	inc    ecx
  421b09:	mov    ds:0x89dbb1d3,eax
  421b0e:	pop    ss
  421b0f:	push   cs
  421b10:	inc    edi
  421b11:	cwde   
  421b12:	cld    
  421b13:	loope  0x421aaa
  421b15:	mov    al,0x2a
  421b17:	pop    esp
  421b18:	retf   
  421b19:	inc    esp
  421b1a:	idiv   BYTE PTR [edi-0x4f]
  421b1d:	pop    ecx
  421b1e:	mov    ds:0x72dd7dd8,eax
  421b23:	or     DWORD PTR [ebp+0x113922e8],eax
  421b29:	jbe    0x421ac2
  421b2b:	(bad)  
  421b2e:	pusha  
  421b2f:	jmp    0x421b93
  421b31:	pop    ebp
  421b32:	jmp    0x5811:0xba635cf8
  421b39:	mov    WORD PTR [ebx],?
  421b3b:	inc    DWORD PTR [ebp-0x21]
  421b3e:	jcxz   0x421b60
  421b41:	das    
  421b42:	dec    ebp
  421b43:	jmp    0x421b8f
  421b45:	repnz cmp al,0x66
  421b48:	and    bh,bh
  421b4a:	iret   
  421b4b:	inc    edi
  421b4c:	call   0x7dfa:0x83b95a87
  421b53:	push   ecx
  421b54:	cmp    ah,BYTE PTR ds:0x5be960c6
  421b5a:	mov    ds:0xf3b4a355,al
  421b5f:	inc    edi
  421b60:	xchg   BYTE PTR [esi],ah
  421b62:	jp     0x421b53
  421b64:	mov    al,ds:0xd6d803e1
  421b69:	and    edi,0x64
  421b6c:	ds xchg esp,eax
  421b6e:	mov    edi,0xb7754b95
  421b73:	test   BYTE PTR [esi-0x1d],bl
  421b76:	aaa    
  421b77:	(bad)
  421b7b:	add    DWORD PTR [eax-0x61],ebx
  421b7e:	cld    
  421b7f:	mov    eax,0x8741c430
  421b84:	mov    edx,0xac8e1180
  421b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b8a:	jmp    0x6a0f62af
  421b8f:	ja     0x421ba9
  421b91:	xchg   ebx,eax
  421b92:	push   cs
  421b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b94:	ror    BYTE PTR [eax],1
  421b96:	jbe    0x421b52
  421b98:	ucomiss xmm5,DWORD PTR [ebx+0x5a]
  421b9c:	inc    ebp
  421b9d:	aam    0xa7
  421b9f:	dec    esp
  421ba0:	adc    BYTE PTR [ecx+0x7f6f0902],cl
  421ba6:	push   ebx
  421ba7:	pop    ss
  421ba8:	inc    edx
  421ba9:	jo     0x421c05
  421bab:	xor    eax,0x5eba27fb
  421bb0:	dec    ebx
  421bb1:	dec    edi
  421bb2:	sub    bl,BYTE PTR [edx+esi*4-0x74]
  421bb6:	mov    edx,0x937dc7fa
  421bbb:	mov    ebx,0x19c6c65b
  421bc0:	je     0x421bc8
  421bc2:	int    0x44
  421bc4:	lock sub dl,BYTE PTR [eax+0x2a45cfca]
  421bcb:	jp     0x421b54
  421bcd:	pop    edi
  421bce:	into   
  421bcf:	xor    esp,esi
  421bd1:	(bad)  
  421bd3:	in     al,0xd3
  421bd5:	cmp    cl,BYTE PTR [ecx+0x45]
  421bd8:	fdivr  QWORD PTR [edx-0x15]
  421bdb:	xchg   esi,eax
  421bdc:	mov    ch,0x2e
  421bde:	jns    0x421ba5
  421be0:	mov    ah,0xf9
  421be2:	xor    DWORD PTR [eax-0x32],0xcff8e6ae
  421be9:	ja     0x421c26
  421beb:	cmc    
  421bec:	mov    ebp,DWORD PTR [ebp-0x1a335d52]
  421bf2:	stc    
  421bf3:	imul   ebp,ecx,0x3d
  421bf6:	pop    esi
  421bf8:	idiv   BYTE PTR [eax+0xae27f0]
	...
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx-0x643e168e]
  421c18:	stc    
  421c19:	scas   eax,DWORD PTR es:[edi]
  421c1a:	lods   eax,DWORD PTR ds:[esi]
  421c1b:	stos   BYTE PTR es:[edi],al
  421c1c:	add    DWORD PTR [eax],eax
  421c1e:	jnp    0x421c26
  421c20:	add    BYTE PTR [eax],al
  421c22:	pop    esp
  421c23:	cs inc esp
  421c25:	cmp    DWORD PTR [ebx],ebp
  421c27:	lods   eax,DWORD PTR fs:[esi]
  421c29:	jmp    0x849c9a16
  421c2e:	push   es
  421c2f:	adc    BYTE PTR [ebp+0x3358d9f2],0x4b
  421c36:	inc    edx
  421c37:	or     DWORD PTR [ecx-0x3c],edi
  421c3a:	ret    0x11f5
  421c3d:	pop    ebx
  421c3e:	leave  
  421c3f:	das    
  421c40:	inc    ecx
  421c41:	inc    eax
  421c42:	aam    0x11
  421c44:	jmp    0x36772905
  421c49:	fnstenv [eax+0x70]
  421c4c:	fst    DWORD PTR [edi-0x22]
  421c4f:	push   ecx
  421c50:	sbb    eax,0xc4f3444a
  421c55:	dec    esi
  421c56:	pusha  
  421c57:	out    dx,al
  421c58:	and    eax,0x717b031
  421c5d:	adc    ebx,DWORD PTR [edx]
  421c5f:	ficomp DWORD PTR [eax+0x16]
  421c62:	sbb    eax,0x457b1ef3
  421c67:	shl    DWORD PTR [edx+edx*2-0x3c],0x13
  421c6c:	jmp    0x7321b368
  421c71:	loop   0x421c62
  421c73:	jno    0x421c1e
  421c75:	inc    esp
  421c76:	lea    edx,[edi]
  421c78:	retf   0x9f09
  421c7b:	out    0xef,al
  421c7d:	push   0xffffffad
  421c7f:	and    cl,BYTE PTR [eax+0x6e7dc7f2]
  421c85:	fs (bad) 
  421c87:	lods   al,BYTE PTR ds:[esi]
  421c88:	retf   
  421c89:	dec    esi
  421c8a:	adc    ebp,ebx
  421c8c:	xor    ebp,DWORD PTR [esi-0x58]
  421c8f:	pop    esi
  421c90:	sub    dl,BYTE PTR [ecx+esi*4+0x4b]
  421c94:	push   ebx
  421c95:	mov    ebx,0xdf4b84d4
  421c9a:	lods   al,BYTE PTR ds:[esi]
  421c9b:	mov    ah,0xc0
  421c9d:	popf   
  421c9e:	xchg   esi,eax
  421c9f:	out    dx,al
  421ca0:	jmp    FWORD PTR [ecx-0x1d]
  421ca3:	(bad)  
  421ca4:	mov    cl,0x8a
  421ca6:	scas   eax,DWORD PTR es:[edi]
  421ca7:	fimul  DWORD PTR [ebx]
  421ca9:	ficomp DWORD PTR [esi+eax*2-0x1e75fbd7]
  421cb0:	imul   eax,ebx,0x6535f51b
  421cb6:	dec    DWORD PTR [eax+0x7f018d6d]
  421cbc:	adc    BYTE PTR [ebp+0x24],bh
  421cbf:	xor    al,0x58
  421cc1:	fcom   DWORD PTR [ebp-0x2bd4a9e4]
  421cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cc8:	xchg   esp,eax
  421cc9:	push   ds
  421cca:	pop    ss
  421ccb:	pop    es
  421ccc:	int    0xee
  421cce:	push   ecx
  421ccf:	pop    ds
  421cd0:	mov    al,0xe1
  421cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd3:	dec    esp
  421cd4:	outs   dx,BYTE PTR ds:[esi]
  421cd5:	sbb    DWORD PTR ds:0xe6473c68,0xfffffffd
  421cdc:	fld    TBYTE PTR [edi+0x6a]
  421cdf:	shl    DWORD PTR [eax-0x41],1
  421ce2:	inc    edi
  421ce3:	les    edx,FWORD PTR [edx-0x2f04ff83]
  421ce9:	mov    eax,ds:0x765f2935
  421cee:	cmp    ebp,ebp
  421cf0:	(bad)  
  421cf1:	clc    
  421cf2:	sbb    al,dl
  421cf4:	jecxz  0x421d10
  421cf6:	xor    esp,DWORD PTR ds:[ebx]
  421cf9:	push   edx
  421cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cfb:	dec    ecx
  421cfc:	dec    ebx
  421cfd:	jbe    0x421caa
  421cff:	clc    
  421d00:	mov    al,ds:0x7680eae1
  421d05:	jg     0x421d0d
  421d07:	(bad)  
  421d08:	scas   eax,DWORD PTR es:[edi]
  421d09:	cmc    
  421d0a:	jg     0x421cfd
  421d0c:	push   ss
  421d0d:	mov    bp,0xcfaa
  421d11:	mov    al,0x76
  421d13:	jnp    0x421cd7
  421d15:	ds sbb al,0x1e
  421d18:	sbb    al,0x4f
  421d1a:	add    edx,esp
  421d1c:	jg     0x421d69
  421d1e:	mov    ds:0x99202ab4,eax
  421d23:	nop
  421d24:	pop    edi
  421d25:	out    0x86,eax
  421d27:	or     al,0x80
  421d29:	faddp  st(0),st
  421d2b:	rcl    ah,0x9b
  421d2e:	inc    edx
  421d2f:	xchg   edi,eax
  421d30:	rcl    DWORD PTR [esi-0x546bc7ef],0x1c
  421d37:	jp     0x421d70
  421d39:	adc    al,0xcf
  421d3b:	add    BYTE PTR [esp+esi*4+0x4e18e87e],bl
  421d42:	add    cl,BYTE PTR [edi+eax*1+0x18]
  421d46:	dec    ecx
  421d47:	out    dx,al
  421d48:	cmp    DWORD PTR [esi],edx
  421d4a:	fwait
  421d4b:	mov    ?,WORD PTR [esi-0xe]
  421d4e:	xor    al,0x4f
  421d50:	arpl   WORD PTR [ebp-0x44],cx
  421d53:	pop    ecx
  421d54:	rol    bh,0x3a
  421d57:	es xor eax,0xcba660ce
  421d5d:	jno    0x421dcc
  421d5f:	cdq    
  421d60:	push   DWORD PTR [ecx+0x3bbd9d47]
  421d66:	adc    eax,0x53f96529
  421d6b:	adc    edi,DWORD PTR [eax]
  421d6d:	xchg   edi,eax
  421d6e:	outs   dx,DWORD PTR ds:[esi]
  421d6f:	sub    bh,ch
  421d71:	fidiv  DWORD PTR [ebp+0x19fe62fa]
  421d77:	and    al,BYTE PTR [edi-0x7]
  421d7a:	iret   
  421d7b:	(bad)  
  421d7c:	stos   DWORD PTR es:[edi],eax
  421d7d:	sub    DWORD PTR [edi+0x29],eax
  421d80:	(bad)  
  421d81:	mov    esp,0x37287596
  421d86:	lds    ecx,FWORD PTR [edx+ecx*2+0x50]
  421d8a:	pop    edi
  421d8b:	popf   
  421d8c:	pop    ecx
  421d8d:	pop    ss
  421d8e:	mov    dl,0x23
  421d90:	call   0xf2a5:0x7eccbeed
  421d97:	jg     0x421d67
  421d99:	out    dx,al
  421d9a:	loope  0x421ddf
  421d9c:	repz ret 0x7994
  421da0:	leave  
  421da1:	jo     0x421dc6
  421da3:	mov    edx,0x9042adb1
  421da8:	mov    DWORD PTR [eiz*1-0xe4a5b84],edi
  421daf:	dec    esp
  421db0:	xor    bh,BYTE PTR [edx]
  421db2:	in     eax,dx
  421db3:	xchg   ebx,eax
  421db4:	sbb    BYTE PTR [esi-0x6e1056a4],cl
  421dba:	and    edx,eax
  421dbc:	mov    ah,0xb2
  421dbe:	dec    ebp
  421dbf:	ret    0xfd3e
  421dc2:	inc    esp
  421dc3:	lahf   
  421dc4:	popa   
  421dc5:	adc    ch,cl
  421dc7:	out    dx,eax
  421dc8:	push   0x51
  421dca:	mov    ebp,DWORD PTR [ebp-0x624bad6a]
  421dd0:	sbb    BYTE PTR [ebp+0x30],al
  421dd3:	xor    edx,edx
  421dd5:	arpl   WORD PTR [ebp+0x55aaaf5a],cx
  421ddb:	adc    eax,0xc696322f
  421de1:	imul   esi,DWORD PTR [esi-0x7d7e2bee],0xc63742fb
  421deb:	outs   dx,DWORD PTR ds:[esi]
  421dec:	ins    DWORD PTR es:[edi],dx
  421ded:	stc    
  421dee:	icebp  
  421def:	mov    al,0x28
  421df1:	outs   dx,DWORD PTR ds:[esi]
  421df2:	not    DWORD PTR [edx+esi*1+0x76d687a9]
  421df9:	dec    ecx
  421dfa:	jp     0x421e4f
  421dfc:	pop    ss
  421dfd:	cmp    eax,0x1111f77c
  421e02:	pop    ebx
  421e03:	sahf   
  421e04:	addr16 mov tr0,ecx
  421e08:	js     0x421e19
  421e0a:	loopne 0x421de8
  421e0c:	js     0x421d94
  421e0e:	bnd ja 0x421dbb
  421e11:	jge    0x421e92
  421e13:	es push ebp
  421e15:	mov    ebx,0xb8faa18c
  421e1a:	mov    esp,DWORD PTR [ecx-0x57]
  421e1d:	int    0x25
  421e1f:	xchg   ebx,eax
  421e20:	es dec ebp
  421e22:	int    0x4f
  421e24:	or     eax,0x84ac0b67
  421e29:	stos   BYTE PTR es:[edi],al
  421e2a:	pop    esi
  421e2b:	icebp  
  421e2c:	mov    eax,0x5d4463f
  421e31:	and    esi,DWORD PTR [ebx+0x26]
  421e34:	leave  
  421e35:	call   0x7434e913
  421e3a:	sub    eax,0x5e0095b1
  421e3f:	fisubr WORD PTR [ebx+ebx*2-0x39f93881]
  421e46:	push   ebx
  421e47:	ss jge 0x421e4e
  421e4a:	repnz cdq 
  421e4c:	cdq    
  421e4d:	out    0x77,al
  421e4f:	mov    eax,ds:0x5b358bac
  421e54:	sbb    ch,BYTE PTR [edx+0x2b991116]
  421e5a:	mov    al,ds:0x27b71aaf
  421e5f:	mov    bl,0xde
  421e61:	jl     0x421e68
  421e63:	jmp    0x7181:0xdf020d5e
  421e6a:	ss loope 0x421ecd
  421e6d:	les    eax,FWORD PTR [ebp+0x7f9ed651]
  421e73:	inc    esp
  421e74:	sti    
  421e75:	fdiv   DWORD PTR [ebp-0x7]
  421e78:	cld    
  421e79:	sub    BYTE PTR [ecx+0x656df7a4],ah
  421e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e80:	and    al,0x7c
  421e82:	pop    ss
  421e83:	mov    edx,0x8bf4eb28
  421e88:	mov    al,0xdb
  421e8a:	xchg   ebp,eax
  421e8b:	and    dl,BYTE PTR [esi+eax*4-0x2e6b9ba]
  421e92:	ja     0x421e24
  421e94:	mov    ecx,0x11c3028d
  421e99:	lds    eax,FWORD PTR [eax-0x16]
  421e9c:	jge    0x421eb2
  421e9e:	rol    DWORD PTR [edi],cl
  421ea0:	sahf   
  421ea1:	inc    edi
  421ea2:	push   edi
  421ea3:	inc    eax
  421ea4:	mov    eax,ds:0x226d432e
  421ea9:	cmp    ecx,DWORD PTR [ecx]
  421eab:	(bad)  
  421eac:	and    edi,DWORD PTR [edi+eax*1-0x75]
  421eb0:	outs   dx,DWORD PTR ds:[esi]
  421eb1:	into   
  421eb2:	inc    ebp
  421eb3:	aad    0x87
  421eb5:	and    al,0x12
  421eb7:	out    0xc9,eax
  421eb9:	and    ebx,DWORD PTR [ecx+0x72]
  421ebc:	test   eax,0xc5dc92e2
  421ec1:	sub    ch,BYTE PTR [eax+0xd073a67]
  421ec7:	mov    ch,0xdb
  421ec9:	mov    DWORD PTR [edi],ebx
  421ecb:	js     0x421edf
  421ecd:	shl    DWORD PTR [ebx-0x227e5592],1
  421ed3:	mov    WORD PTR [edx+0x2b608eba],cs
  421ed9:	iret   
  421eda:	enter  0x123e,0x31
  421ede:	int3   
  421edf:	scas   eax,DWORD PTR es:[edi]
  421ee0:	mov    esi,0xb35ae0b8
  421ee5:	add    eax,0x5526a21
  421eea:	adc    BYTE PTR [edx],ch
  421eec:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421eee:	push   esi
  421eef:	stos   BYTE PTR es:[edi],al
  421ef0:	cmp    DWORD PTR [esi+0x32f7486b],ebp
  421ef6:	push   es
  421ef7:	loop   0x421ee3
  421ef9:	inc    edx
  421efa:	(bad)  
  421efb:	fsub   DWORD PTR [ecx-0x1b]
  421efe:	jmp    0x421f3e
  421f00:	xor    ecx,DWORD PTR [edi+0x3901372a]
  421f06:	ins    BYTE PTR es:[edi],dx
  421f07:	(bad)  
  421f08:	xchg   edi,eax
  421f09:	fld    TBYTE PTR gs:[ebx-0x4c]
  421f0d:	aam    0xdd
  421f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f10:	and    DWORD PTR [eax-0x72],edx
  421f13:	pop    eax
  421f14:	mov    WORD PTR [esp+ebp*1+0x16895e9],?
  421f1b:	cdq    
  421f1c:	xor    dl,BYTE PTR [esi+0x4f]
  421f1f:	fs or  edi,0x62
  421f23:	jno    0x421ee0
  421f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f26:	mov    ds:0xf0275bf1,eax
  421f2b:	into   
  421f2c:	adc    al,0x1a
  421f2e:	xor    edx,DWORD PTR [esi-0x721abf82]
  421f34:	mov    dh,0xdb
  421f36:	jmp    0x421f3d
  421f38:	addr16 cmp al,0x5d
  421f3b:	push   eax
  421f3c:	push   ebp
  421f3d:	sbb    BYTE PTR [edx+0xe],0xb3
  421f41:	jno    0x421f4e
  421f43:	int3   
  421f44:	test   BYTE PTR [edx],dh
  421f46:	sbb    ecx,DWORD PTR [eax+0x14]
  421f49:	jp     0x421f90
  421f4b:	sbb    dl,BYTE PTR [esi-0x32bf1852]
  421f51:	add    ah,ah
  421f53:	mov    edi,ecx
  421f55:	lods   eax,DWORD PTR ds:[esi]
  421f56:	les    ebx,FWORD PTR [ecx+esi*2-0x35]
  421f5a:	inc    ebp
  421f5b:	ffree  st(1)
  421f5d:	or     dh,BYTE PTR [ebx-0x36]
  421f60:	mov    esp,0xe32d85dc
  421f65:	or     eax,0xce394799
  421f6a:	in     al,0x30
  421f6c:	dec    esi
  421f6d:	adc    edx,DWORD PTR [edi-0x129e7227]
  421f73:	push   esp
  421f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f75:	fidiv  DWORD PTR [ebp-0x575de2a5]
  421f7b:	dec    esp
  421f7c:	inc    edx
  421f7d:	mov    DWORD PTR [ebx-0xd],ecx
  421f80:	int    0x26
  421f82:	ror    bh,1
  421f84:	jecxz  0x421f37
  421f86:	inc    esp
  421f87:	pop    ecx
  421f88:	sahf   
  421f89:	loopne 0x421fee
  421f8b:	sub    dl,BYTE PTR [ebx+0x682994cc]
  421f91:	imul   esp,eax,0x2626bcf2
  421f97:	xchg   DWORD PTR [ebx+0x78],edx
  421f9a:	sub    esp,DWORD PTR [edx+0x5]
  421f9d:	jnp    0x421fb9
  421f9f:	jae    0x421f81
  421fa1:	aad    0x91
  421fa3:	dec    ebx
  421fa4:	push   0xffffffe2
  421fa6:	call   0x3be67b30
  421fab:	cmp    DWORD PTR [edi],0xffffff91
  421fae:	cdq    
  421faf:	jno    0x421f74
  421fb1:	jne    0x421f40
  421fb3:	push   eax
  421fb4:	adc    BYTE PTR [ebx-0x10ccbd81],dl
  421fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fbb:	jns    0x421f92
  421fbd:	xchg   edx,eax
  421fbe:	pushf  
  421fbf:	and    BYTE PTR [edx],0xba
  421fc2:	jae    0x421f67
  421fc4:	outs   dx,BYTE PTR ds:[esi]
  421fc5:	ja     0x421fd9
  421fc7:	sub    eax,0x47142cc2
  421fcc:	cwde   
  421fcd:	inc    ecx
  421fce:	adc    bh,dh
  421fd0:	call   0x9c5b:0xb94f0642
  421fd7:	xchg   ebx,eax
  421fd8:	and    DWORD PTR [ebx],ecx
  421fda:	adc    DWORD PTR [ebx+esi*4-0x65ae2050],esp
  421fe1:	pop    ebp
  421fe2:	xchg   ebx,eax
  421fe3:	fadd   QWORD PTR [esi+0x148fbfdb]
  421fe9:	mov    bl,0xf8
  421feb:	and    eax,0xa242d397
  421ff0:	adc    al,0x4f
  421ff2:	cmp    eax,0xb76f3582
  421ff7:	pop    edi
  421ff8:	push   ecx
  421ff9:	dec    ecx
  421ffa:	inc    ebx
  421ffb:	ret    0x46c
  421ffe:	fild   DWORD PTR ds:0xd1ba8657
  422004:	adc    eax,0x39b91f25
  422009:	es repz pusha 
  42200c:	pop    esi
  42200d:	(bad)  
  42200e:	cmp    eax,0xcd18dd2f
  422013:	and    DWORD PTR [ebp-0x36],0x61047588
  42201a:	aad    0xd6
  42201c:	fldcw  WORD PTR [eax+0x4d]
  42201f:	mov    ebx,0x9b511e97
  422024:	fs std 
  422026:	xor    ah,BYTE PTR [edi+ecx*8]
  422029:	or     esi,DWORD PTR [eax+ebp*8-0x66]
  42202d:	mov    ecx,0x5b47b35f
  422032:	and    DWORD PTR [edi+0x51ec56f8],edx
  422038:	xor    DWORD PTR [eax+eiz*2+0x20710516],esp
  42203f:	fstp   st(3)
  422041:	lea    ecx,ds:0xd6e678d7
  422047:	xchg   DWORD PTR [eax],eax
  422049:	push   edi
  42204a:	sar    esi,1
  42204c:	aam    0x5c
  42204e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42204f:	repz and esi,edi
  422052:	mov    esp,0xfc160dca
  422057:	dec    edi
  422058:	pop    ebx
  422059:	cmp    esi,DWORD PTR es:[edx]
  42205c:	jmp    0xf51f2b31
  422061:	stos   BYTE PTR es:[edi],al
  422062:	jne    0x422094
  422064:	pop    esp
  422065:	lea    edi,ds:0x566aa60
  42206b:	inc    ecx
  42206c:	outs   dx,DWORD PTR ds:[esi]
  42206d:	lods   al,BYTE PTR ds:[esi]
  42206e:	push   cs
  42206f:	pop    ds
  422070:	loop   0x421fff
  422072:	or     DWORD PTR gs:[ebx+0x46e437eb],0xb8745820
  42207d:	xchg   ebp,eax
  42207e:	mov    edi,0xaf40d03f
  422083:	mov    ds:0x7428cdd7,eax
  422088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422089:	fsub   DWORD PTR [edx-0x3a]
  42208c:	fnsave [edi+0x16]
  42208f:	bound  ebx,QWORD PTR [esi+0x2e]
  422092:	or     esp,ecx
  422094:	dec    esp
  422095:	pop    ds
  422096:	sub    al,0x65
  422098:	jecxz  0x422076
  42209a:	inc    edi
  42209b:	(bad)  
  42209c:	xor    DWORD PTR [edi+0x3b8df9d0],esi
  4220a2:	inc    esi
  4220a3:	add    BYTE PTR [edi-0x48346643],cl
  4220a9:	add    BYTE PTR [ebx+0x17],ah
  4220ac:	ret    
  4220ad:	add    DWORD PTR [edx+eiz*8+0x5c125a5d],ebx
  4220b4:	jb     0x4220f0
  4220b6:	gs gs jg 0x4220c7
  4220ba:	dec    ebx
  4220bb:	pop    ebp
  4220bc:	add    al,0x1f
  4220be:	xchg   edi,eax
  4220bf:	cmp    DWORD PTR [edx],ebp
  4220c1:	add    eax,ebx
  4220c3:	fisub  DWORD PTR [edi-0x7d]
  4220c6:	jg     0x422100
  4220c8:	sub    BYTE PTR [edx+0x40],al
  4220cb:	push   esp
  4220cc:	loopne 0x42208a
  4220ce:	dec    ebp
  4220cf:	sub    eax,0x7df2e9d3
  4220d4:	push   ebp
  4220d5:	loope  0x4220f4
  4220d7:	arpl   WORD PTR [esi+0x5c],dx
  4220da:	xchg   esp,eax
  4220db:	inc    ebp
  4220dc:	xchg   esp,eax
  4220dd:	sub    al,0xf8
  4220df:	in     al,0x3d
  4220e1:	dec    eax
  4220e2:	mov    ds:0xaba94fdf,eax
  4220e7:	or     al,0x8b
  4220e9:	jg     0x4220d6
  4220eb:	cmp    DWORD PTR ds:[ecx],edi
  4220ee:	in     eax,dx
  4220ef:	in     al,dx
  4220f0:	jne    0x42215d
  4220f2:	add    eax,0x975a9dbb
  4220f7:	inc    esp
  4220f8:	or     DWORD PTR [edx-0x69],0xffffff88
  4220fc:	jno    0x422087
  4220fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ff:	sub    ecx,DWORD PTR [edi]
  422101:	nop
  422102:	ss mov esp,0x378c7217
  422108:	lahf   
  422109:	sub    DWORD PTR [ecx+0x5e],0x72
  42210d:	inc    esi
  42210e:	test   DWORD PTR [esi-0x5d33e41f],edx
  422114:	adc    dl,ch
  422116:	or     edi,0x29cf0246
  42211c:	jge    0x42213b
  42211e:	aad    0x53
  422120:	std    
  422121:	push   ss
  422122:	jmp    0x42213a
  422124:	retf   
  422125:	cmp    edi,ecx
  422127:	jno    0x422123
  422129:	jecxz  0x4220b4
  42212b:	jmp    0x42219d
  42212d:	test   al,0x76
  42212f:	lods   eax,DWORD PTR ds:[esi]
  422130:	inc    ax
  422132:	mov    ch,0x84
  422134:	les    esp,FWORD PTR [edi+0x3d]
  422137:	xor    eax,0x6eed4dbf
  42213c:	(bad)  
  42213d:	ins    BYTE PTR es:[edi],dx
  42213e:	stos   BYTE PTR es:[edi],al
  42213f:	inc    eax
  422140:	inc    eax
  422141:	mov    ds:0xb419d8ef,eax
  422146:	cmc    
  422147:	lds    ebp,FWORD PTR [esp+edi*8]
  42214a:	ret    0x3bfe
  42214d:	shr    BYTE PTR [ebx+0x15a2d2e4],1
  422153:	dec    ecx
  422154:	rol    DWORD PTR [ebp-0x7f017e00],0x9e
  42215b:	xor    esi,DWORD PTR [ecx]
  42215d:	fdiv   DWORD PTR [edx-0x4b]
  422160:	mov    ecx,0xfa3bf833
  422165:	xchg   esp,eax
  422166:	(bad)  
  422168:	hlt    
  422169:	mov    cs,ebp
  42216b:	stos   BYTE PTR es:[edi],al
  42216c:	sar    BYTE PTR [eax],cl
  42216e:	and    eax,0x18fc9b01
  422173:	or     ecx,edi
  422175:	mov    eax,ds:0x7662e4c1
  42217a:	jbe    0x42218b
  42217c:	push   ebx
  42217d:	das    
  42217e:	lods   eax,DWORD PTR ds:[esi]
  42217f:	fwait
  422180:	dec    eax
  422181:	mov    ebp,0xa61e19e7
  422186:	dec    ecx
  422187:	clc    
  422188:	pop    esi
  422189:	dec    ecx
  42218a:	inc    edx
  42218b:	pop    ss
  42218c:	(bad)  
  42218d:	test   al,0x0
  422190:	inc    edi
  422191:	mov    bl,0x31
  422193:	push   ebp
  422194:	outs   dx,DWORD PTR ds:[esi]
  422195:	jmp    0x1085971d
  42219a:	jg     0x422185
  42219c:	(bad)  
  42219d:	jbe    0x42213b
  42219f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221a0:	add    eax,ecx
  4221a2:	and    BYTE PTR [edx-0x17],bh
  4221a5:	test   al,0x19
  4221a7:	sbb    dh,BYTE PTR [ebp+ebx*8+0x62]
  4221ab:	adc    ecx,DWORD PTR [edi+ebx*1]
  4221ae:	or     dh,dh
  4221b0:	ffreep st(1)
  4221b2:	sub    eax,0xa849a6e0
  4221b7:	inc    ebx
  4221b8:	jge    0x4221a2
  4221ba:	inc    edx
  4221bb:	jns    0x4221aa
  4221bd:	sbb    al,0xef
  4221bf:	arpl   WORD PTR [ecx],sp
  4221c1:	xchg   esp,eax
  4221c2:	popa   
  4221c3:	jl     0x42222d
  4221c5:	in     al,dx
  4221c6:	jnp    0x42217d
  4221c8:	or     ah,BYTE PTR [eax]
  4221ca:	addr16 clc 
  4221cc:	push   esp
  4221cd:	(bad)
  4221d1:	pop    edx
  4221d2:	sub    eax,0xce7732b3
  4221d7:	cmp    al,0x2b
  4221d9:	data16 repz fdivr QWORD PTR cs:0x13062b99
  4221e2:	add    eax,0x96622c07
  4221e7:	stos   DWORD PTR es:[edi],eax
  4221e8:	loope  0x42224d
  4221ea:	and    dh,cl
  4221ec:	push   esp
  4221ed:	jo     0x422255
  4221ef:	or     esi,esi
  4221f1:	sub    BYTE PTR [edx],dl
  4221f3:	(bad)  
  4221f4:	push   ebx
  4221f5:	mov    esi,edi
  4221f7:	add    al,0x40
  4221f9:	push   ecx
  4221fa:	xchg   cl,ah
  4221fc:	sbb    BYTE PTR [edi-0x55ba6451],0xfe
  422203:	call   0x5c3e91ec
  422208:	lods   al,BYTE PTR ds:[esi]
  422209:	mov    ah,0xca
  42220b:	aas    
  42220c:	popa   
  42220d:	adc    edx,DWORD PTR [edx+0x27]
  422210:	or     DWORD PTR [ebx-0x16],ebp
  422213:	cmc    
  422214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422215:	test   DWORD PTR [edx-0x3ca7b46e],eax
  42221b:	aaa    
  42221c:	daa    
  42221d:	rcl    ah,0xa4
  422220:	adc    DWORD PTR [ebx-0x225c47cb],ecx
  422226:	or     eax,0x35795fa8
  42222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42222c:	fcmovnu st,st(5)
  42222e:	bnd jmp 0x4221d9
  422231:	leave  
  422232:	and    bh,BYTE PTR [edi+0x3]
  422235:	(bad)  
  422236:	mov    eax,ds:0x4e7da4b
  42223b:	cdq    
  42223c:	push   ebp
  42223d:	xor    BYTE PTR [eax-0x4c],dh
  422240:	xor    DWORD PTR [esi-0x528791f2],ebp
  422246:	cmp    BYTE PTR [eax],bl
  422248:	stos   BYTE PTR es:[edi],al
  422249:	jb     0x422254
  42224b:	jbe    0x42221b
  42224d:	pop    ebp
  42224e:	xchg   ebx,eax
  42224f:	mov    al,0x69
  422251:	stos   BYTE PTR es:[edi],al
  422252:	aad    0xb
  422254:	sub    al,0xa7
  422256:	out    dx,al
  422257:	fild   DWORD PTR [esp+edx*8+0x4a]
  42225b:	mov    ds:0xd19510f7,eax
  422260:	fld    QWORD PTR [edi-0x12e4f171]
  422266:	out    dx,al
  422267:	(bad)  
  422268:	iret   
  422269:	aas    
  42226a:	lea    ecx,[ecx+edx*4]
  42226d:	pop    ebx
  42226e:	mov    cl,0x96
  422270:	jae    0x4222ed
  422272:	adc    BYTE PTR [esp+eax*1],0x45
  422276:	or     al,0x95
  422278:	int    0x10
  42227a:	xchg   ecx,eax
  42227b:	lds    esp,FWORD PTR ds:0xb1733f8c
  422281:	retf   0xbfaa
  422284:	sub    eax,0xfc70d979
  422289:	iret   
  42228a:	dec    edi
  42228b:	and    al,0x9b
  42228d:	data16 mov ds:0xa1a8abe7,al
  422293:	ja     0x422288
  422295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422296:	cmp    eax,0x8ff49efd
  42229b:	jb     0x422280
	...
  4222a9:	add    BYTE PTR [edx+0x44],al
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xf15c0dc,eax
  4222b9:	pop    edx
  4222ba:	sub    BYTE PTR [ecx+0x67b0001],dh
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	pushf  
  4222c3:	sahf   
  4222c4:	inc    edi
  4222c5:	or     BYTE PTR [ecx+eax*1],cl
  4222c8:	or     al,0x6c
  4222ca:	push   0x6da0eeca
  4222cf:	pop    edx
  4222d0:	lea    esi,[edi+0x16]
  4222d3:	push   ebx
  4222d4:	xor    ah,dl
  4222d6:	dec    esi
  4222d7:	sahf   
  4222d8:	retf   0x54f
  4222db:	adc    al,0xa7
  4222dd:	push   esp
  4222de:	inc    ecx
  4222df:	call   0x64c2:0x80f6daf3
  4222e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222e7:	in     al,0x5a
  4222e9:	jg     0x4222e5
  4222eb:	shr    BYTE PTR [ebp-0x60],1
  4222ee:	push   ecx
  4222ef:	les    edx,FWORD PTR fs:0xb1739503
  4222f6:	sbb    ebp,DWORD PTR [esi+edx*1-0x8491570]
  4222fd:	call   0x41c928dd
  422302:	dec    ebx
  422303:	out    dx,al
  422304:	scas   eax,DWORD PTR es:[edi]
  422305:	sbb    BYTE PTR [esi+edx*4],ch
  422308:	and    BYTE PTR [ecx],ch
  42230a:	xchg   esp,eax
  42230b:	sbb    DWORD PTR [ebp+0x7d956ea2],ebp
  422311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422312:	sbb    eax,0xa6c184a0
  422317:	mov    bh,0xfe
  422319:	sbb    DWORD PTR [edx],ecx
  42231b:	mov    eax,ds:0xbc539418
  422320:	mov    DWORD PTR [edi+0x3b],ecx
  422323:	cmp    DWORD PTR [esi],esp
  422325:	sbb    eax,0xcc38521b
  42232a:	jo     0x4222e1
  42232c:	or     esi,DWORD PTR ds:0xea4a1415
  422332:	mov    bl,0x6
  422334:	(bad)  
  422335:	jnp    0x4222d9
  422337:	aaa    
  422338:	dec    esi
  422339:	add    DWORD PTR [edi-0x13],esi
  42233c:	pusha  
  42233d:	std    
  42233e:	and    edx,DWORD PTR [edx-0x2a]
  422341:	(bad)  
  422342:	xchg   edi,eax
  422343:	imul   eax,DWORD PTR [ebp-0x3],0xfffffff7
  422347:	stos   DWORD PTR es:[edi],eax
  422348:	test   DWORD PTR fs:[eax+0x3b],ecx
  42234c:	rcr    DWORD PTR [edi+esi*4-0xa],cl
  422350:	into   
  422351:	pusha  
  422352:	xor    eax,0x28de5eee
  422357:	sbb    DWORD PTR [eax+eax*8+0x6d],ecx
  42235b:	add    al,0x20
  42235d:	lahf   
  42235e:	jg     0x422346
  422360:	lahf   
  422361:	xchg   esi,eax
  422362:	pop    dx
  422364:	fcom   QWORD PTR [ebx-0x5721a0e]
  42236a:	(bad)  
  42236b:	mov    cl,0x87
  42236d:	dec    ecx
  42236e:	cli    
  42236f:	sahf   
  422370:	jne    0x42234a
  422372:	xor    BYTE PTR [ecx],al
  422374:	jle    0x422316
  422376:	push   ss
  422377:	(bad)  
  422378:	fldenv [eax-0x16]
  42237b:	push   0x475e7c66
  422380:	in     al,0xbe
  422382:	stos   BYTE PTR es:[edi],al
  422383:	imul   edx,DWORD PTR [edx-0x754b9d1c],0xffffffd3
  42238a:	aam    0x32
  42238c:	arpl   WORD PTR [ebx+0x3ac2d227],bx
  422392:	ja     0x4223db
  422394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422396:	pop    ss
  422397:	pushf  
  422398:	sub    al,0x4f
  42239a:	scas   al,BYTE PTR es:[edi]
  42239b:	sub    DWORD PTR [esi+0x37ecb186],0xb1f5b5c
  4223a5:	repnz not ch
  4223a8:	adc    bl,BYTE PTR [esi+0x16]
  4223ab:	dec    ebx
  4223ac:	test   BYTE PTR ss:[ebx],bh
  4223af:	imul   esi,DWORD PTR es:[eax+esi*2],0xfffffff4
  4223b4:	dec    ecx
  4223b5:	mov    ecx,esp
  4223b7:	xor    esi,edx
  4223b9:	jb     0x422423
  4223bb:	xor    DWORD PTR [esi+0x5d],esp
  4223be:	lds    edi,FWORD PTR [ebx]
  4223c0:	pop    ebx
  4223c1:	cmp    DWORD PTR [esi-0x2832eb65],ebp
  4223c7:	lods   al,BYTE PTR ds:[esi]
  4223c8:	mov    ecx,0xcf425026
  4223cd:	aad    0x44
  4223cf:	loopne 0x4223ca
  4223d1:	popa   
  4223d2:	jnp    0x4223ec
  4223d4:	int3   
  4223d5:	(bad)  
  4223d6:	jge    0x4223fb
  4223d8:	ins    DWORD PTR es:[edi],dx
  4223d9:	xlat   BYTE PTR ds:[ebx]
  4223da:	call   0x4b0d:0x6643383a
  4223e1:	mov    dl,0x26
  4223e3:	(bad)  
  4223e4:	and    al,0x61
  4223e6:	(bad)  
  4223e7:	(bad)  
  4223e8:	cmp    eax,0x642fabaa
  4223ed:	xor    BYTE PTR [ebx+ecx*2-0x8ac3a72],dl
  4223f4:	xchg   ebp,eax
  4223f5:	or     esi,DWORD PTR [edi+0x48]
  4223f8:	sbb    eax,0xc9a5dbd8
  4223fd:	pop    ss
  4223fe:	(bad)  
  4223ff:	inc    edx
  422400:	push   0xffffff92
  422402:	add    eax,0x41
  422405:	inc    edi
  422406:	out    0x16,eax
  422408:	outs   dx,DWORD PTR ds:[esi]
  422409:	mov    DWORD PTR [edx+0x704e004c],esp
  42240f:	loop   0x4223d3
  422411:	out    dx,al
  422412:	xor    al,0xef
  422414:	mov    edi,0x751152fa
  422419:	xchg   edi,eax
  42241a:	xchg   ebx,eax
  42241b:	fdivr  DWORD PTR [eax]
  42241d:	ficom  WORD PTR [ebx+0x4c1b2eed]
  422423:	pop    edx
  422424:	adc    DWORD PTR [edx-0x3a82cf07],esp
  42242a:	xchg   ebp,eax
  42242b:	bound  ecx,QWORD PTR [esi]
  42242d:	es test al,0x36
  422430:	dec    ebx
  422431:	in     al,dx
  422432:	xchg   esp,eax
  422433:	out    0xa2,eax
  422435:	ret    0x2fc6
  422438:	push   edx
  422439:	ins    BYTE PTR es:[edi],dx
  42243a:	push   ebp
  42243b:	xchg   ebp,eax
  42243c:	sti    
  42243d:	sbb    al,0xb9
  42243f:	push   ebp
  422440:	fldcw  WORD PTR [ecx-0x66a1573e]
  422446:	fnstcw WORD PTR [eax+0x48a9489e]
  42244c:	out    0x65,eax
  42244e:	ja     0x42240e
  422450:	cli    
  422451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422452:	inc    edi
  422453:	mov    dh,0x69
  422455:	and    DWORD PTR [edx-0x33f7a970],eax
  42245b:	push   0xe446218d
  422460:	dec    ecx
  422461:	and    esi,DWORD PTR [ebp+0x56cc4666]
  422467:	test   eax,0x6822e985
  42246c:	fsub   QWORD PTR ds:0xefd41506
  422472:	shr    ecx,1
  422474:	mov    eax,0x270a6706
  422479:	es pop edi
  42247b:	push   ebp
  42247c:	aaa    
  42247d:	mov    cl,0xb1
  42247f:	cmp    ebp,DWORD PTR [edx-0x2e]
  422482:	jnp    0x422444
  422484:	fdivr  QWORD PTR [ebx-0x7323fcf9]
  42248a:	cwde   
  42248b:	add    eax,ebp
  42248d:	iret   
  42248e:	xchg   ebx,eax
  42248f:	into   
  422490:	add    DWORD PTR [esi],esp
  422492:	or     eax,0xb66de2ee
  422497:	les    edi,FWORD PTR [ebp-0x5e]
  42249a:	in     al,dx
  42249b:	shl    DWORD PTR [edi+0x3b97625d],0x5b
  4224a2:	ins    BYTE PTR es:[edi],dx
  4224a3:	sti    
  4224a4:	sbb    eax,0xca4ef7b1
  4224a9:	cdq    
  4224aa:	sbb    al,0x8
  4224ac:	aam    0x9c
  4224ae:	es pusha 
  4224b0:	imul   esi,DWORD PTR [ebp+0x1e],0x31e3c6a9
  4224b7:	or     eax,0x72e0b52d
  4224bc:	mov    cl,BYTE PTR [eax]
  4224be:	dec    esi
  4224bf:	mov    al,ds:0x28a6e07b
  4224c4:	lea    ebx,[eax-0x2bf19b5f]
  4224ca:	push   esi
  4224cb:	pop    ds
  4224cc:	push   ds
  4224cd:	xchg   BYTE PTR [eax-0x75e7175e],dl
  4224d3:	inc    ecx
  4224d4:	sti    
  4224d5:	lock sub DWORD PTR cs:[ebp-0x38],ecx
  4224da:	fild   WORD PTR gs:[ecx-0x17]
  4224df:	jp     0x422487
  4224e1:	fdiv   QWORD PTR [ecx-0x40903e61]
  4224e7:	mov    eax,DWORD PTR [edx+eiz*4+0x524d38db]
  4224ee:	sahf   
  4224ef:	clc    
  4224f0:	inc    ecx
  4224f1:	push   esp
  4224f2:	stos   DWORD PTR es:[edi],eax
  4224f3:	mov    dh,0xcd
  4224f5:	push   eax
  4224f6:	stc    
  4224f7:	cmp    al,0xa6
  4224f9:	push   eax
  4224fa:	push   esi
  4224fb:	gs mov ebx,0xc43ad30a
  422501:	xor    al,0x17
  422503:	mov    ds:0x6eab347c,al
  422508:	sub    dh,BYTE PTR [edx]
  42250a:	cmp    eax,DWORD PTR [esi-0x487d9c96]
  422510:	pop    ds
  422511:	call   0xa2e2:0xcc4b9207
  422518:	cld    
  422519:	inc    ecx
  42251a:	stos   BYTE PTR es:[edi],al
  42251b:	pop    edi
  42251c:	in     al,0x2b
  42251e:	lock xchg esi,eax
  422520:	test   DWORD PTR [ecx+esi*2-0x75],ecx
  422524:	addr16 je 0x42258e
  422527:	retf   
  422528:	into   
  422529:	jae    0x4224c8
  42252b:	or     al,0x1e
  42252d:	sub    ecx,DWORD PTR [edi]
  42252f:	out    dx,eax
  422530:	pop    edx
  422531:	pop    esp
  422532:	inc    ebx
  422533:	mov    esp,0x35dcc06d
  422538:	into   
  422539:	rcl    BYTE PTR [bp+si-0x68ca],1
  42253e:	xor    ebp,DWORD PTR [edi+0x7e]
  422541:	fcom   QWORD PTR [edx-0x6da13ea1]
  422547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422548:	pop    esp
  422549:	add    edi,DWORD PTR [esi]
  42254b:	in     eax,dx
  42254c:	xchg   esp,eax
  42254d:	in     al,dx
  42254e:	shl    BYTE PTR [esi-0x3d1930c6],1
  422554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422555:	repz cmp DWORD PTR [ebx-0x24],edx
  422559:	xor    ch,bl
  42255b:	dec    esp
  42255c:	xchg   ebp,eax
  42255d:	push   esi
  42255e:	mov    WORD PTR [ebx-0x50],?
  422561:	mov    cl,0x33
  422563:	into   
  422564:	cmp    al,0x9
  422566:	add    al,0xe9
  422568:	pop    ss
  422569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42256a:	(bad)  
  42256c:	xchg   esi,eax
  42256d:	and    dh,ah
  42256f:	or     esi,esp
  422571:	push   0xffffffdc
  422573:	(bad)  [edx+0xbe307f2]
  422579:	pop    edx
  42257a:	jne    0x422538
  42257c:	mov    dl,0xd0
  42257e:	xchg   esi,eax
  42257f:	mov    esp,0x7d929690
  422584:	das    
  422585:	sbb    al,0x61
  422587:	mov    eax,ds:0x91b97d34
  42258c:	xchg   DWORD PTR [edi+0x749059b8],ecx
  422592:	add    ah,BYTE PTR ds:0x6c1fb8
  422598:	sub    ecx,edi
  42259a:	in     al,dx
  42259b:	xor    eax,0xb469cfc5
  4225a0:	repnz test eax,0x20c2763
  4225a6:	inc    DWORD PTR [esi+eiz*4+0x75d086d9]
  4225ad:	inc    edi
  4225ae:	shr    BYTE PTR ds:0xa5c3f87e,cl
  4225b4:	sub    dh,BYTE PTR [edi-0x4e449c4]
  4225ba:	pop    esi
  4225bb:	sub    al,0x63
  4225bd:	mov    edx,0x6365b151
  4225c2:	jo     0x4225a6
  4225c4:	arpl   WORD PTR [eax],bp
  4225c6:	dec    esi
  4225c7:	xchg   edi,eax
  4225c8:	rcl    al,1
  4225ca:	or     ebx,DWORD PTR [eax-0x53]
  4225cd:	jb     0x42259d
  4225cf:	ret    0xf426
  4225d2:	jecxz  0x42264d
  4225d4:	cmp    al,0x3d
  4225d6:	push   eax
  4225d7:	or     edi,DWORD PTR [edi+0x71e85ada]
  4225dd:	jae    0x4225d8
  4225df:	in     al,0xf2
  4225e1:	arpl   WORD PTR es:[edx-0x8cdd453],dx
  4225e8:	cs scas eax,DWORD PTR es:[edi]
  4225ea:	mov    ebx,0xab1c0f9f
  4225ef:	cmp    DWORD PTR [eax],ebx
  4225f1:	push   ebp
  4225f2:	and    DWORD PTR [edx+0x666f1826],eax
  4225f8:	enter  0x4ab0,0xf
  4225fc:	mov    ds:0x5685ae19,al
  422601:	sub    ebp,edx
  422603:	pop    esp
  422604:	inc    esi
  422605:	dec    ebp
  422606:	ins    BYTE PTR es:[edi],dx
  422607:	aad    0xdb
  422609:	rcl    BYTE PTR [esi+edi*8],cl
  42260c:	jb     0x42262c
  42260e:	dec    eax
  42260f:	xor    bh,bl
  422611:	jp     0x4225ed
  422613:	clc    
  422614:	cmp    dl,BYTE PTR [eax]
  422616:	push   esi
  422617:	push   ebp
  422618:	fst    QWORD PTR [esp+esi*2-0x71]
  42261c:	sbb    BYTE PTR [edi],0x9c
  42261f:	mov    al,BYTE PTR [edi-0x31]
  422622:	hlt    
  422623:	push   es
  422624:	verw   WORD PTR [esi+0x47]
  422628:	stos   DWORD PTR es:[edi],eax
  422629:	mov    al,0xa3
  42262b:	inc    edx
  42262c:	fld    DWORD PTR [edi+0x16]
  42262f:	out    0xf1,al
  422631:	jl     0x4225c2
  422633:	daa    
  422634:	adc    DWORD PTR [esi+0x738c485a],0xfffffff6
  42263b:	push   edi
  42263c:	ss sahf 
  42263e:	add    DWORD PTR [eax],esp
  422640:	xor    esp,DWORD PTR [edi+ecx*2]
  422643:	addr16 mov ds:0xb4b6,al
  422647:	pop    ecx
  422648:	in     eax,0xf6
  42264a:	dec    esp
  42264b:	sub    esi,ebx
  42264d:	js     0x4226b3
  42264f:	cwde   
  422650:	cmp    DWORD PTR [edi],0xffffffde
  422653:	pop    ds
  422654:	fst    DWORD PTR [ebx-0x817b25e]
  42265a:	mov    edi,0x44df2af7
  42265f:	pop    ds
  422660:	pop    ds
  422661:	scas   al,BYTE PTR es:[edi]
  422662:	mov    ds:0x676c2ea8,al
  422667:	cli    
  422668:	repnz mov esi,0xb48df535
  42266e:	cdq    
  42266f:	and    DWORD PTR [ecx-0x6f6df3d2],0x7
  422676:	(bad)  
  422677:	sub    al,0xbf
  422679:	jmp    0x8d1584fb
  42267e:	sar    DWORD PTR [eax-0x37],0xd7
  422682:	pop    ebx
  422683:	stos   BYTE PTR es:[edi],al
  422684:	sbb    bh,BYTE PTR [ecx-0x13e7fd6b]
  42268a:	jne    0x422636
  42268c:	popw   es
  42268e:	sbb    BYTE PTR [edx+ebp*2+0x2b7f4a3b],bh
  422695:	dec    ecx
  422696:	mov    bl,BYTE PTR [esi]
  422698:	mov    al,ds:0x88d32eca
  42269d:	sbb    al,0x59
  42269f:	fisttp WORD PTR [ebp-0x1a]
  4226a2:	cmp    dl,BYTE PTR [edi-0x6b]
  4226a5:	lds    edx,FWORD PTR [ebp+0x36efd52f]
  4226ab:	inc    eax
  4226ac:	pop    edx
  4226ad:	out    dx,eax
  4226ae:	das    
  4226af:	cmp    BYTE PTR [ecx+esi*1],bl
  4226b2:	sbb    ah,bh
  4226b4:	arpl   WORD PTR [edi+0x235074b2],cx
  4226ba:	or     ch,bh
  4226bc:	mov    edx,0x94355ca1
  4226c1:	cmp    edx,DWORD PTR [edx-0x62]
  4226c4:	dec    ecx
  4226c5:	cdq    
  4226c6:	inc    esp
  4226c7:	jl     0x4226f8
  4226c9:	sub    al,0xd
  4226cb:	in     eax,dx
  4226cc:	(bad)  [eax-0x640999e4]
  4226d2:	loop   0x4226f6
  4226d4:	cmp    DWORD PTR [ebp-0x65],ebp
  4226d7:	push   0x2d14a962
  4226dc:	aad    0x99
  4226de:	jecxz  0x4226de
  4226e0:	int    0xb8
  4226e2:	aaa    
  4226e3:	jp     0x4226de
  4226e5:	arpl   WORD PTR [ebx],cx
  4226e7:	and    bh,bl
  4226e9:	jae    0x42274a
  4226eb:	mov    edi,0x514be095
  4226f0:	mov    BYTE PTR [ebx-0x4ca4e185],ah
  4226f6:	pop    esi
  4226f7:	pop    esp
  4226f8:	cmp    DWORD PTR [ebx+0x7646a505],0xffffffce
  4226ff:	or     DWORD PTR [ecx-0x70],0xffffff9a
  422703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422704:	test   eax,0x701ec6dd
  422709:	xchg   ebp,eax
  42270a:	enter  0x65d2,0xc6
  42270e:	sbb    eax,edi
  422710:	fisub  WORD PTR [edx+0x460b2a95]
  422716:	popf   
  422717:	xchg   edi,eax
  422718:	cmc    
  422719:	mov    al,al
  42271b:	mov    dh,0xe9
  42271d:	aaa    
  42271e:	rcl    DWORD PTR [ebx],1
  422720:	sub    BYTE PTR [edi],ch
  422722:	(bad)  
  422723:	fmul   DWORD PTR [ebp+0x571bddaa]
  422729:	jmp    0x87aa:0xc981d0db
  422730:	jle    0x4226d1
  422732:	scas   al,BYTE PTR es:[edi]
  422733:	js     0x42270d
  422735:	lahf   
  422736:	pushf  
  422737:	pop    ss
  422738:	or     bl,BYTE PTR [ebx+eax*1]
  42273b:	xchg   esi,eax
  42273c:	test   eax,0x2035227c
  422741:	mov    eax,0x17831e84
  422746:	das    
  422747:	adc    BYTE PTR [esi-0x29],0x2f
  42274b:	pop    esp
  42274c:	in     eax,dx
  42274d:	mov    edx,0x4e8e3a03
  422752:	ss nop
  422754:	pause  
  422756:	lods   al,BYTE PTR ds:[esi]
  422757:	cld    
  422758:	int3   
  422759:	aaa    
  42275a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42275b:	xchg   ebx,eax
  42275c:	int3   
  42275d:	cwde   
  42275e:	repnz sti 
  422760:	ds push ebp
  422762:	mov    bl,0x7c
  422764:	mov    ds:0xd70a2dd1,eax
  422769:	in     eax,0xa9
  42276b:	sub    eax,0xa35c15fb
  422770:	sub    bh,al
  422772:	inc    edi
  422773:	or     ebp,esi
  422775:	mov    ebx,ebx
  422777:	stos   BYTE PTR es:[edi],al
  422778:	and    esi,DWORD PTR [edi-0x32]
  42277b:	and    DWORD PTR [ecx],edi
  42277d:	es leave 
  42277f:	pop    eax
  422780:	jb     0x4227a7
  422782:	lods   eax,DWORD PTR ds:[esi]
  422783:	ins    DWORD PTR es:[edi],dx
  422784:	add    DWORD PTR [ebp-0x3bb8666d],esp
  42278a:	cmp    al,BYTE PTR [edx-0x3f35b223]
  422790:	data16 lahf 
  422792:	mov    dl,0xcc
  422794:	cmp    al,0xf7
  422796:	mov    dh,0x14
  422798:	adc    ebx,ecx
  42279a:	sub    eax,0x2fee41a8
  42279f:	shl    BYTE PTR [ebx],cl
  4227a1:	mov    ch,0xc7
  4227a3:	cmp    BYTE PTR [eax+0xa],ah
  4227a6:	jo     0x4227cd
  4227a8:	iret   
  4227a9:	sub    al,ah
  4227ab:	arpl   WORD PTR [ebp+0x56],sp
  4227ae:	jle    0x4227a8
  4227b0:	jae    0x422750
  4227b2:	into   
  4227b3:	inc    ebp
  4227b4:	sub    BYTE PTR [esi+0x63],al
  4227b7:	fisubr WORD PTR [edi+0x24a4482b]
  4227bd:	inc    edi
  4227be:	int3   
  4227bf:	or     dl,bl
  4227c1:	call   0x41cc:0x8afacb50
  4227c8:	lahf   
  4227c9:	aam    0x9b
  4227cb:	jne    0x4227de
  4227cd:	jne    0x4227e1
  4227cf:	jp     0x422807
  4227d1:	jns    0x4227b0
  4227d3:	jl     0x42281e
  4227d5:	jl     0x422854
  4227d7:	int3   
  4227d8:	mov    WORD PTR [ebp-0x55],ds
  4227db:	mov    ebx,0x952463c8
  4227e0:	imul   eax,DWORD PTR [eax+0x42dff597],0x1b764907
  4227ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227eb:	xor    al,0x46
  4227ed:	jecxz  0x42278e
  4227ef:	cli    
  4227f0:	dec    edi
  4227f1:	into   
  4227f2:	int    0xae
  4227f4:	mov    DWORD PTR [edi+0x28],eax
  4227f7:	or     ebp,DWORD PTR [edi]
  4227f9:	mov    edi,0x954a5c32
  4227fe:	gs ds and al,0x4d
  422802:	xor    al,0xcc
  422804:	lea    esp,[ebx+0x3818a1a1]
  42280a:	dec    esp
  42280b:	(bad)  
  42280c:	ror    al,cl
  42280e:	xchg   BYTE PTR [eax+0x7a],bh
  422811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422812:	sahf   
  422813:	mov    dl,0xd0
  422815:	or     BYTE PTR [ecx-0x40],bh
  422818:	mov    dh,0xa0
  42281a:	mov    dh,0x38
  42281c:	cmp    al,0x8c
  42281e:	push   esp
  42281f:	gs call 0x1f31:0x2b71e480
  422827:	in     al,0x53
  422829:	pop    ss
  42282a:	xchg   ecx,eax
  42282b:	in     al,dx
  42282c:	and    bh,ah
  42282e:	cmp    al,0xa5
  422830:	jo     0x422824
  422832:	sub    eax,0x43614029
  422837:	and    DWORD PTR [ebx+eax*8+0x4d],esi
  42283b:	or     eax,0x954a6810
  422840:	push   0xfeda1a7b
  422845:	and    BYTE PTR [ebx-0x3ea5b47e],cl
  42284b:	add    esp,DWORD PTR [eax-0x38]
  42284e:	sahf   
  42284f:	(bad)  
  422851:	shr    DWORD PTR [edi+0x334ef4b9],cl
  422857:	xchg   esp,eax
  422858:	push   esi
  422859:	inc    ebx
  42285a:	repnz add dh,BYTE PTR fs:[edi-0xec1001]
  422862:	add    DWORD PTR [edx-0x3c],ebx
  422865:	jl     0x422809
  422867:	pusha  
  422868:	xchg   edi,eax
  422869:	mov    BYTE PTR gs:[esi],cl
  42286c:	add    ch,BYTE PTR [edx+0x32491604]
  422872:	mov    bl,0xe6
  422874:	pop    esi
  422875:	mov    ah,0xd9
  422877:	push   ds
  422878:	ret    0xce06
  42287b:	or     al,0x1b
  42287d:	mov    esp,0xd028f60b
  422882:	xchg   esp,eax
  422883:	or     eax,0xc146fe19
  422888:	push   edx
  422889:	xor    DWORD PTR [ecx-0x25a4bd8f],esi
  42288f:	lods   al,BYTE PTR ds:[esi]
  422890:	adc    BYTE PTR [esp+ebx*2+0xac590d6],0x50
  422898:	(bad)  
  422899:	xor    ebx,DWORD PTR [eax-0x6c4a17dd]
  42289f:	mov    dl,0xf6
  4228a1:	jmp    0x42285a
  4228a3:	sbb    eax,0xfdeb888f
  4228a8:	xchg   edx,eax
  4228a9:	inc    ebx
  4228aa:	sbb    BYTE PTR [ebp-0x3a],cl
  4228ad:	rcr    ah,1
  4228af:	pop    edi
  4228b0:	add    eax,0x2032775
  4228b5:	and    eax,0x7a6b69ae
  4228ba:	daa    
  4228bb:	test   DWORD PTR [ebx+0x39993bdd],ebp
  4228c1:	fld    DWORD PTR [ebp-0x7e3c8a9c]
  4228c7:	pop    ebp
  4228c8:	or     dh,BYTE PTR [eax+0x3815ba8a]
  4228ce:	xlat   BYTE PTR ds:[ebx]
  4228cf:	and    eax,0xf03deba7
  4228d4:	mov    bl,0xd9
  4228d6:	enter  0x210d,0x1f
  4228da:	(bad)  
  4228db:	pop    edi
  4228dc:	lods   al,BYTE PTR ds:[esi]
  4228dd:	adc    DWORD PTR [ebx],eax
  4228df:	ins    DWORD PTR es:[edi],dx
  4228e0:	out    dx,al
  4228e1:	(bad)  
  4228e3:	pop    edx
  4228e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e5:	retf   0x9489
  4228e8:	imul   edx,DWORD PTR [edi],0xbc067211
  4228ee:	leave  
  4228ef:	js     0x422887
  4228f1:	daa    
  4228f2:	ds scas eax,DWORD PTR es:[edi]
  4228f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f5:	mov    eax,0x46131283
  4228fa:	jmp    0x14d9:0x2fb69a55
  422901:	mov    esp,cs
  422903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422904:	mov    bh,0x25
  422906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422907:	dec    eax
  422908:	outs   dx,BYTE PTR ds:[esi]
  422909:	adc    DWORD PTR [esi+esi*8-0x59ff4f37],0xffffff91
  422911:	in     al,dx
  422912:	cmp    DWORD PTR [edx+0x21],eax
  422915:	cld    
  422916:	jecxz  0x422901
  422918:	test   BYTE PTR [edi-0x747e5059],bh
  42291e:	cmc    
  42291f:	sti    
  422920:	add    BYTE PTR [ebx-0x3effa9cd],dh
  422926:	fmul   DWORD PTR [ebx]
  422928:	jp     0x422968
  42292a:	and    eax,0xc8b2cfec
  42292f:	jbe    0x42297e
  422931:	sbb    edi,ebx
  422933:	out    dx,eax
  422934:	ins    DWORD PTR es:[edi],dx
  422935:	call   0x79e93a15
  42293a:	pop    esi
  42293b:	jl     0x4228c3
	...
  422949:	add    BYTE PTR [eax+0x50],cl
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	xlat   BYTE PTR ds:[ebx]
  422957:	test   bh,al
  422959:	cdq    
  42295a:	mov    ds:0x7b0001b7,eax
  42295f:	push   es
  422960:	add    BYTE PTR [eax],al
  422962:	push   cs
  422963:	data16 fnstsw WORD PTR [eax]
  422966:	xor    eax,0xeae37776
  42296b:	test   BYTE PTR [eax+0x16e41309],al
  422971:	or     dl,bh
  422973:	retf   0x9c73
  422976:	sbb    ecx,DWORD PTR [ebx-0x6f]
  422979:	stos   DWORD PTR es:[edi],eax
  42297a:	inc    esi
  42297b:	in     eax,0x18
  42297d:	add    BYTE PTR [esi-0x6a],0x2b
  422981:	repnz xor al,0xb5
  422984:	mov    ecx,0xb9ae596e
  422989:	div    BYTE PTR [ebp-0x74efc855]
  42298f:	int    0xda
  422991:	jns    0x422992
  422993:	leave  
  422994:	mov    ds:0x16e8c34,eax
  422999:	jecxz  0x42297c
  42299b:	inc    eax
  42299c:	hlt    
  42299d:	mov    ah,0x69
  42299f:	jmp    0x422978
  4229a1:	test   eax,edx
  4229a3:	add    eax,DWORD PTR fs:[esi-0xb]
  4229a7:	xor    edx,DWORD PTR [ebx+0x36a3974f]
  4229ad:	aad    0x23
  4229af:	xchg   esp,eax
  4229b0:	jno    0x4229d2
  4229b2:	mov    ecx,0x38577c13
  4229b7:	in     eax,0x23
  4229b9:	mov    ecx,0x91803e1d
  4229be:	xor    eax,0x678e1e0a
  4229c3:	add    bh,BYTE PTR [edx]
  4229c5:	ins    BYTE PTR es:[edi],dx
  4229c6:	dec    ebp
  4229c7:	and    al,0xc0
  4229c9:	popa   
  4229ca:	push   eax
  4229cb:	mov    eax,0x5dcd3191
  4229d0:	adc    eax,0x145fc779
  4229d5:	ins    BYTE PTR es:[edi],dx
  4229d6:	leave  
  4229d7:	mov    ecx,DWORD PTR [eax-0x23]
  4229da:	xor    esp,edi
  4229dc:	test   al,0x5f
  4229de:	pop    ebp
  4229df:	jno    0x4229e2
  4229e1:	in     eax,dx
  4229e2:	sbb    ebp,DWORD PTR [edx-0x12]
  4229e5:	iret   
  4229e6:	sub    bh,BYTE PTR [eax]
  4229e8:	ss enter 0x23c9,0x14
  4229ed:	clc    
  4229ee:	xor    dh,BYTE PTR [ecx+0x26ad51c4]
  4229f4:	(bad)  
  4229f5:	out    0xd5,eax
  4229f7:	lock pop es
  4229f9:	out    dx,eax
  4229fa:	rcr    DWORD PTR [edi],cl
  4229fc:	xor    ch,BYTE PTR [ecx+0x4dc12d98]
  422a02:	or     ch,BYTE PTR [ebx+eax*8+0x464aa39f]
  422a09:	push   es
  422a0a:	shl    BYTE PTR [ebp+0x69354607],cl
  422a10:	sbb    DWORD PTR [ecx-0x629f0b45],esp
  422a16:	push   ds
  422a17:	mov    ebx,0x90b76d0a
  422a1c:	mov    ds:0x640c94a9,al
  422a21:	mov    ch,0xc3
  422a23:	lea    esp,[edx+0x77]
  422a26:	mov    edi,0x2463d31
  422a2b:	push   esp
  422a2c:	hlt    
  422a2d:	imul   ebp,eax,0x351b4e26
  422a33:	push   edi
  422a34:	pop    esi
  422a35:	call   0xbc3ea7fe
  422a3a:	test   DWORD PTR [esi+eax*4+0x22],eax
  422a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a3f:	dec    esi
  422a40:	das    
  422a41:	mov    al,ds:0x337c6acb
  422a46:	xor    al,BYTE PTR [ebp-0x5e72fbf1]
  422a4c:	cdq    
  422a4d:	jle    0x422a10
  422a4f:	sbb    DWORD PTR [eax],edx
  422a51:	xchg   ecx,eax
  422a52:	xor    BYTE PTR [ebp-0x592c92a7],0x96
  422a59:	je     0x422aa3
  422a5b:	repnz cld 
  422a5d:	and    eax,0xe005bd6a
  422a62:	vorpd  ymm4,ymm7,YMMWORD PTR [ebx+0x217da442]
  422a6a:	ja     0x422a27
  422a6c:	sbb    BYTE PTR [edx],bh
  422a6e:	add    DWORD PTR [esi],esp
  422a70:	cmp    DWORD PTR [edi+0x4b],esp
  422a73:	jl     0x422a67
  422a75:	daa    
  422a76:	scas   eax,DWORD PTR es:[edi]
  422a77:	xor    al,0xa6
  422a79:	cmp    ebp,DWORD PTR [ecx-0x3d]
  422a7c:	dec    eax
  422a7d:	lock or al,0x86
  422a80:	cs jmp 0x566f:0xb524c29c
  422a88:	pop    esp
  422a89:	fcomp  QWORD PTR es:[esi-0x5a]
  422a8d:	inc    esi
  422a8e:	fldcw  WORD PTR [ebx+0x7bdba981]
  422a94:	xor    DWORD PTR [ebp+0x2a],ebp
  422a97:	or     DWORD PTR [edi],esi
  422a99:	es mov dl,0x4f
  422a9c:	inc    DWORD PTR [ebx]
  422a9e:	cwde   
  422a9f:	push   ebx
  422aa0:	xor    eax,0xb942510e
  422aa5:	(bad)  
  422aa6:	and    edi,DWORD PTR [esi+0x39]
  422aa9:	jge    0x422add
  422aab:	xor    ecx,esp
  422aad:	cwde   
  422aae:	cmp    ebp,ebp
  422ab0:	jmp    0x2da63bdf
  422ab5:	push   cs
  422ab6:	ficom  WORD PTR [esi+edi*1+0x76]
  422aba:	sub    eax,0x8dba065c
  422abf:	cli    
  422ac0:	pushf  
  422ac1:	sub    bl,bh
  422ac3:	dec    edi
  422ac4:	jmp    0x422ae3
  422ac6:	sbb    BYTE PTR [ebx],al
  422ac8:	cmc    
  422ac9:	cmp    al,BYTE PTR [eax+edx*2]
  422acc:	imul   esi,DWORD PTR [eax+0x50ae992],0xd7f61fb4
  422ad6:	fld    DWORD PTR [edi+0x13b4cfea]
  422adc:	jmp    0xec23:0x5ba44b44
  422ae3:	in     al,dx
  422ae4:	mov    ch,0xa8
  422ae6:	mov    edi,0x190aa07c
  422aeb:	jno    0x422b29
  422aed:	inc    ecx
  422aee:	or     ah,al
  422af0:	aam    0x91
  422af2:	add    edi,ebp
  422af4:	jne    0x422b4c
  422af6:	xchg   edx,eax
  422af7:	push   0x48c6a4bd
  422afc:	sbb    al,BYTE PTR [eax-0x16b5bdc8]
  422b02:	ret    
  422b03:	in     eax,0x72
  422b05:	dec    esp
  422b06:	xor    cl,BYTE PTR [edx+0x3354f5f2]
  422b0c:	pop    ecx
  422b0d:	retf   0x7510
  422b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b11:	jge    0x422ac8
  422b13:	ins    DWORD PTR es:[edi],dx
  422b14:	rcr    esp,0xf
  422b17:	sub    DWORD PTR [eax+eiz*2+0x1b],esi
  422b1b:	stc    
  422b1c:	cmp    DWORD PTR [ecx-0x71],0xffffffec
  422b20:	aad    0xa
  422b22:	dec    eax
  422b23:	data16 xor al,0x3d
  422b26:	cs mov ebp,0x5904f7f1
  422b2c:	xchg   DWORD PTR [edi+0x567f6e95],ebp
  422b32:	out    dx,eax
  422b33:	sub    BYTE PTR [esi+edx*1],0x39
  422b37:	gs (bad) 
  422b3a:	jmp    FWORD PTR [esi-0x36]
  422b3d:	adc    DWORD PTR [edi],ecx
  422b3f:	(bad)  
  422b40:	scas   eax,DWORD PTR es:[edi]
  422b41:	xchg   edi,eax
  422b42:	mov    esp,0x5d837356
  422b47:	mov    bh,0xc4
  422b49:	jo     0x422b3d
  422b4b:	adc    eax,0x501cc893
  422b50:	jne    0x422ad3
  422b52:	inc    esi
  422b53:	xchg   ebp,eax
  422b54:	add    al,0x91
  422b56:	fisubr WORD PTR [ecx+eiz*1]
  422b59:	push   eax
  422b5a:	mov    al,ds:0x5f736dbf
  422b5f:	scas   eax,DWORD PTR es:[edi]
  422b60:	call   0xac7c9d27
  422b65:	push   ebx
  422b66:	fsubr  DWORD PTR ds:0x197df83b
  422b6c:	stc    
  422b6d:	push   ebx
  422b6e:	or     eax,0x811f2b6
  422b73:	mov    ah,0xf8
  422b75:	inc    ecx
  422b76:	xor    DWORD PTR [edx],edi
  422b78:	jne    0x422b8c
  422b7a:	(bad)  
  422b7b:	jmp    0x8096:0xeda5219e
  422b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b83:	sub    eax,DWORD PTR [eax]
  422b85:	xchg   ecx,eax
  422b86:	dec    al
  422b88:	cli    
  422b89:	push   ss
  422b8a:	ja     0x422bb1
  422b8c:	mov    al,0x9d
  422b8e:	das    
  422b8f:	cdq    
  422b90:	inc    edi
  422b91:	mov    esp,0xd2b37481
  422b96:	mov    edx,0x5aba35ab
  422b9b:	dec    ebp
  422b9c:	jecxz  0x422b67
  422b9e:	pop    edx
  422b9f:	lahf   
  422ba0:	inc    esp
  422ba1:	outs   dx,DWORD PTR ds:[esi]
  422ba2:	jno    0x422bbe
  422ba4:	or     ebx,DWORD PTR [ebx+0x13]
  422ba7:	lods   eax,DWORD PTR ds:[esi]
  422ba8:	xchg   ecx,eax
  422ba9:	push   ecx
  422baa:	add    al,0xe2
  422bac:	out    dx,al
  422bad:	popf   
  422bae:	add    ch,BYTE PTR [ebp+0x39]
  422bb1:	jbe    0x422b8b
  422bb3:	aas    
  422bb4:	cmp    esp,DWORD PTR [ecx-0x4a]
  422bb7:	sbb    ah,BYTE PTR [eax+0x7309fe8d]
  422bbd:	mov    ds:0xd998e4c5,al
  422bc2:	adc    eax,0x87083da2
  422bc7:	das    
  422bc8:	lea    ebx,[ebp-0x80]
  422bcb:	aas    
  422bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bcd:	dec    ecx
  422bce:	cdq    
  422bcf:	loope  0x422bf1
  422bd1:	or     ebp,edi
  422bd3:	aaa    
  422bd4:	mov    edi,0xc8c144f1
  422bd9:	int    0x49
  422bdb:	clc    
  422bdc:	cld    
  422bdd:	daa    
  422bde:	inc    edx
  422bdf:	mov    ebx,DWORD PTR [eax-0x7af28349]
  422be5:	pop    esp
  422be6:	repz or BYTE PTR [esi+0x45f8585a],0x39
  422bee:	inc    esi
  422bef:	rcl    ah,1
  422bf1:	jne    0x422b98
  422bf3:	imul   BYTE PTR [ebp-0x8]
  422bf6:	fcom   DWORD PTR [edx+esi*4+0x5f]
  422bfa:	imul   edx,esi,0xffffffc0
  422bfd:	pusha  
  422bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bff:	mov    ds:0xa8e7048,eax
  422c04:	ror    BYTE PTR [ecx-0x331131a9],1
  422c0a:	sbb    BYTE PTR [ecx+0x74],dl
  422c0d:	jecxz  0x422c62
  422c0f:	jmp    0x83af:0xb651bb60
  422c16:	push   es
  422c17:	ja     0x422bb1
  422c19:	icebp  
  422c1a:	and    DWORD PTR [ebx+ecx*4-0x42],0x10
  422c1f:	push   esi
  422c20:	mov    ebp,0x63829609
  422c25:	mov    cl,0xc8
  422c27:	int    0x1f
  422c29:	ins    DWORD PTR es:[edi],dx
  422c2a:	mov    ch,0x27
  422c2c:	adc    eax,DWORD PTR [eax+edx*4]
  422c2f:	and    al,BYTE PTR [ebx+0x53804028]
  422c35:	enter  0x1475,0x8f
  422c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c3a:	jae    0x422c63
  422c3c:	push   es
  422c3d:	mov    cl,0x81
  422c3f:	sahf   
  422c40:	aas    
  422c41:	sub    eax,0x6e4e7056
  422c46:	and    ecx,DWORD PTR [edx]
  422c48:	pop    ebx
  422c49:	sbb    eax,0x5bc9d459
  422c4e:	lods   eax,DWORD PTR ds:[esi]
  422c4f:	adc    al,0x85
  422c51:	loop   0x422c82
  422c53:	xchg   DWORD PTR [ebp+0x5706aa5d],eax
  422c59:	fsubr  QWORD PTR [eax]
  422c5b:	add    cl,al
  422c5d:	add    esi,DWORD PTR [edi+0x25a57522]
  422c63:	push   ds
  422c64:	push   0x7b6ea855
  422c69:	xchg   ecx,eax
  422c6a:	mov    DWORD PTR [eax-0x6d],esi
  422c6d:	or     DWORD PTR [ecx],ecx
  422c6f:	xchg   DWORD PTR [eax+0x30],ecx
  422c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c73:	bound  edi,QWORD PTR [esi-0x466a8121]
  422c79:	into   
  422c7a:	not    dl
  422c7c:	out    dx,eax
  422c7d:	adc    DWORD PTR [eax],0xce7470bc
  422c83:	jo     0x422c9e
  422c85:	cmp    BYTE PTR [esi-0x50],cl
  422c88:	(bad)  
  422c89:	(bad)  
  422c8a:	adc    eax,0xfcb7d996
  422c8f:	mov    BYTE PTR [edx],dl
  422c91:	dec    ebx
  422c92:	mov    ch,0xc2
  422c94:	jmp    0x422c98
  422c96:	jl     0x422cef
  422c98:	aam    0x60
  422c9a:	push   edi
  422c9b:	mov    BYTE PTR [edx-0x30],dh
  422c9e:	dec    edx
  422c9f:	inc    ecx
  422ca0:	mov    ecx,0x918073f
  422ca5:	bound  esp,QWORD PTR [edi+0x6397a6bf]
  422cab:	adc    DWORD PTR [ebp+0x6c],esi
  422cae:	push   eax
  422caf:	sbb    BYTE PTR [edx+eiz*4],ch
  422cb2:	cmp    eax,0x998b110
  422cb7:	xchg   ecx,eax
  422cb8:	ret    0x139b
  422cbb:	xchg   ecx,eax
  422cbc:	outs   dx,BYTE PTR ds:[esi]
  422cbd:	mov    BYTE PTR [edi-0x2fad83e1],bl
  422cc3:	lds    esp,FWORD PTR [edi+ecx*1-0x6e2f0c83]
  422cca:	std    
  422ccb:	ret    
  422ccc:	test   al,0xd3
  422cce:	stc    
  422ccf:	push   cs
  422cd0:	jnp    0x422caa
  422cd2:	adc    eax,0xf4a3af50
  422cd7:	add    ebx,DWORD PTR [ebx-0x55da3ab9]
  422cdd:	push   es
  422cde:	xor    dh,BYTE PTR [edx+edi*8]
  422ce1:	inc    edi
  422ce2:	pushf  
  422ce3:	test   al,0x50
  422ce5:	or     DWORD PTR [eax],ebx
  422ce7:	jmp    0x3de3:0xd507770b
  422cee:	mov    ch,0x29
  422cf0:	push   ebp
  422cf1:	mov    WORD PTR [ecx-0x100973cf],ss
  422cf7:	jmp    0xafe4:0x38ea5a8d
  422cfe:	jo     0x422cc0
  422d00:	mov    bh,0xa2
  422d02:	push   ebp
  422d03:	stc    
  422d04:	in     al,0x6f
  422d06:	shl    BYTE PTR [ecx-0x59d59a07],0xa0
  422d0d:	fcmove st,st(5)
  422d0f:	xchg   edi,eax
  422d10:	inc    edx
  422d11:	mov    BYTE PTR [esi-0x15ed60bf],bh
  422d17:	outs   dx,BYTE PTR ds:[esi]
  422d18:	repnz iret 
  422d1a:	xchg   esi,eax
  422d1b:	mov    ebx,DWORD PTR [ebx]
  422d1d:	xor    al,0xe
  422d1f:	jg     0x422d67
  422d21:	jo     0x422d71
  422d23:	mov    ebp,0x75b55fed
  422d28:	push   edi
  422d29:	and    al,0xd3
  422d2b:	mov    dh,BYTE PTR [edi+0x2c72499b]
  422d31:	pop    esi
  422d32:	cmp    cl,BYTE PTR [edi]
  422d34:	dec    ebp
  422d35:	cdq    
  422d36:	or     edx,DWORD PTR [ecx]
  422d38:	sub    esi,DWORD PTR [esi+0x5b4c435f]
  422d3e:	xor    ecx,DWORD PTR [edi+ebx*8+0x289a4357]
  422d45:	sbb    ch,BYTE PTR [edi-0x29]
  422d48:	xlat   BYTE PTR ds:[ebx]
  422d49:	out    0xb9,eax
  422d4b:	das    
  422d4c:	jae    0x422da8
  422d4e:	mov    al,0x5a
  422d50:	xor    BYTE PTR [esi],al
  422d52:	mul    al
  422d54:	ret    0xb3fb
  422d57:	out    dx,al
  422d58:	inc    edi
  422d59:	ss cmp al,0xc7
  422d5c:	ja     0x422dbd
  422d5e:	cmp    BYTE PTR [edx+0x55],cl
  422d61:	nop
  422d62:	arpl   WORD PTR [ecx+eax*4],cx
  422d65:	add    BYTE PTR ds:0xafd7ace,bh
  422d6b:	sbb    BYTE PTR [eax-0x7616e21a],0x9d
  422d72:	mov    cl,0xbe
  422d74:	or     esi,DWORD PTR [edi+0x7]
  422d77:	(bad)  [ecx+0x29]
  422d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d7b:	mov    ebx,edi
  422d7d:	test   DWORD PTR [ebp+eax*2+0x1afef5a7],esp
  422d84:	enter  0xe0a6,0x64
  422d88:	sti    
  422d89:	sub    cl,BYTE PTR [esi]
  422d8b:	cmc    
  422d8c:	inc    edi
  422d8d:	pop    edx
  422d8e:	scas   al,BYTE PTR es:[edi]
  422d8f:	adc    eax,0x91065623
  422d94:	ret    
  422d95:	adc    BYTE PTR [esi-0x51595614],dl
  422d9b:	dec    eax
  422d9c:	mov    al,0xb2
  422d9e:	mov    ebp,0x90a6ee76
  422da3:	xchg   DWORD PTR ds:0xd9054e67,ebp
  422da9:	inc    esi
  422daa:	inc    esi
  422dab:	xor    al,0xba
  422dad:	and    DWORD PTR [esi],esp
  422daf:	xchg   BYTE PTR [eax-0x4f],bh
  422db2:	dec    edx
  422db3:	dec    edx
  422db4:	in     eax,0x1a
  422db6:	jmp    0x422d75
  422db8:	pop    ss
  422db9:	out    dx,al
  422dba:	or     DWORD PTR [ebp-0x72],eax
  422dbd:	inc    eax
  422dbe:	stos   DWORD PTR es:[edi],eax
  422dbf:	in     eax,dx
  422dc0:	sbb    ecx,ebp
  422dc2:	mov    eax,ds:0x2f5dd8c
  422dc7:	ds aam 0xa3
  422dca:	jmp    0xb167:0xa44c77d5
  422dd1:	not    ah
  422dd3:	dec    ecx
  422dd4:	mov    bl,0xcd
  422dd6:	mov    al,ds:0x7a6d7ba2
  422ddb:	adc    eax,0x5a79eda0
  422de0:	inc    ebp
  422de1:	push   edx
  422de2:	dec    ebx
  422de3:	leave  
  422de4:	push   es
  422de5:	bound  esp,QWORD PTR [edx-0x14]
  422de8:	adc    eax,0xe670a96d
  422ded:	push   ds
  422dee:	mov    ebp,0x8bf59f92
  422df3:	xor    eax,DWORD PTR [esp+eax*1+0x5a]
  422df7:	pop    ebp
  422df8:	add    esp,DWORD PTR [eax]
  422dfa:	xchg   ah,al
  422dfc:	aaa    
  422dfd:	pop    eax
  422dfe:	push   esp
  422dff:	ret    
  422e00:	dec    ebx
  422e01:	pop    edi
  422e02:	sub    bl,cl
  422e04:	xchg   ebp,eax
  422e05:	into   
  422e06:	bound  ebx,QWORD PTR [di]
  422e09:	push   ds
  422e0a:	dec    edx
  422e0b:	jecxz  0x422e2b
  422e0d:	sti    
  422e0e:	or     eax,0x75eca027
  422e13:	jecxz  0x422e14
  422e15:	inc    eax
  422e16:	call   0x2a3c:0x95fce97e
  422e1d:	mov    gs,WORD PTR [ebx+0x8268861]
  422e23:	cmp    bh,BYTE PTR [ecx-0x77]
  422e26:	sub    dh,BYTE PTR [edi+0x70]
  422e29:	or     DWORD PTR [eax],0x7cbd9108
  422e2f:	sub    edi,0x1d40aff3
  422e35:	ret    
  422e36:	and    bh,BYTE PTR [ebx]
  422e38:	jecxz  0x422e72
  422e3a:	inc    edx
  422e3b:	dec    edx
  422e3c:	fisub  WORD PTR [edx-0x16]
  422e3f:	in     al,0x6f
  422e41:	xchg   edx,eax
  422e42:	push   ebp
  422e43:	add    eax,0x1c675a25
  422e48:	loope  0x422e2f
  422e4a:	(bad)  
  422e4b:	xchg   esi,eax
  422e4c:	mov    ebx,0x92640db
  422e51:	or     eax,0x317a40da
  422e56:	mov    BYTE PTR [esi-0x210b9bc6],dl
  422e5c:	xchg   esi,eax
  422e5d:	push   edi
  422e5e:	cmc    
  422e5f:	and    cl,bl
  422e61:	cwde   
  422e62:	jp     0x422e32
  422e64:	ins    BYTE PTR es:[edi],dx
  422e65:	inc    esi
  422e66:	in     al,dx
  422e67:	and    al,0xb8
  422e69:	mov    esi,0xe03e735d
  422e6e:	inc    ebp
  422e6f:	xor    BYTE PTR [edx+0x3f],dh
  422e72:	pop    eax
  422e73:	cmp    al,0x0
  422e75:	aam    0x23
  422e77:	addr16 ret 0x4f7e
  422e7b:	inc    eax
  422e7c:	pop    ebp
  422e7d:	aaa    
  422e7e:	out    dx,eax
  422e7f:	ja     0x422e98
  422e81:	sti    
  422e82:	test   DWORD PTR [edx+0x6a],edx
  422e85:	out    0xed,eax
  422e87:	adc    BYTE PTR [ebp+0x6f67b3e6],ah
  422e8d:	fsubr  QWORD PTR [edi+esi*4-0x3bdd5e9c]
  422e94:	push   ds
  422e95:	add    ah,al
  422e97:	(bad)  
  422e98:	mov    ebp,0x4b67e50f
  422e9d:	out    dx,eax
  422e9e:	add    bl,al
  422ea0:	cmp    BYTE PTR [ebp+0x39c1ef2c],dl
  422ea6:	and    eax,0xa5ebcffc
  422eab:	iret   
  422eac:	push   ebp
  422ead:	dec    edi
  422eae:	sbb    DWORD PTR [ebx+0x1f],ebx
  422eb1:	xchg   esp,eax
  422eb2:	mov    ch,0x10
  422eb4:	mov    ds:0xbf7ed40b,al
  422eb9:	xchg   esi,eax
  422eba:	outs   dx,BYTE PTR ds:[esi]
  422ebb:	and    al,0xbd
  422ebd:	clc    
  422ebe:	ret    0xe951
  422ec1:	retf   
  422ec2:	dec    ecx
  422ec3:	mov    ebx,DWORD PTR [edi-0x64]
  422ec6:	jl     0x422f17
  422ec8:	fidivr WORD PTR [ebx-0x5c5a31e5]
  422ece:	dec    ebp
  422ecf:	mov    esp,0xe674f20b
  422ed4:	xor    edi,DWORD PTR [edx-0x43a44f53]
  422eda:	cwde   
  422edb:	(bad)  
  422edc:	std    
  422edd:	or     eax,0x9115944
  422ee2:	test   BYTE PTR [edx+0x19],bh
  422ee5:	xor    bh,0x3f
  422ee8:	arpl   WORD PTR [ecx+0x53b0d3a],bp
  422eee:	pop    ecx
  422eef:	mov    esi,0x946ce50c
  422ef4:	dec    ebp
  422ef5:	dec    ebp
  422ef6:	lods   al,BYTE PTR ds:[esi]
  422ef7:	fldenv fs:[ecx+edi*1-0x7e]
  422efc:	sti    
  422efd:	jmp    0xe07821ac
  422f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f03:	mov    BYTE PTR [esi+0x25933219],bl
  422f09:	jmp    0xf87f8193
  422f0e:	inc    edx
  422f0f:	in     eax,0xc7
  422f11:	pop    ds
  422f12:	fist   WORD PTR [eax]
  422f14:	jmp    0x109a:0x57392239
  422f1b:	or     esp,DWORD PTR [ecx-0x3c]
  422f1e:	and    DWORD PTR [eax-0x66],edi
  422f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f22:	jno    0x422f9a
  422f24:	adc    BYTE PTR [eax+0x218b7d52],ch
  422f2a:	mov    ebx,0x4c29882d
  422f2f:	aam    0xb7
  422f31:	inc    eax
  422f32:	lea    esp,[edi+0x19]
  422f35:	adc    eax,0xadf7b8fe
  422f3a:	pop    ds
  422f3b:	push   esi
  422f3c:	aas    
  422f3d:	xchg   esp,eax
  422f3e:	ja     0x422fb6
  422f40:	sub    al,0x8
  422f42:	mov    ah,0x40
  422f44:	xchg   ebp,eax
  422f45:	clc    
  422f46:	mul    BYTE PTR [edx-0x2]
  422f49:	pop    ebp
  422f4a:	pop    esi
  422f4b:	clc    
  422f4c:	inc    ecx
  422f4d:	(bad)  
  422f4e:	stc    
  422f4f:	xchg   esi,eax
  422f50:	(bad)  
  422f51:	fsubr  QWORD PTR cs:[edi]
  422f54:	or     DWORD PTR [esi],edx
  422f56:	sub    edi,DWORD PTR [ebp+0x4c438d58]
  422f5c:	stc    
  422f5d:	call   DWORD PTR [edx+edx*8+0x35]
  422f61:	(bad)
  422f64:	inc    eax
  422f65:	lock dec ecx
  422f67:	jge    0x422f93
  422f69:	mov    ds:0x2b815324,eax
  422f6e:	xchg   esi,eax
  422f6f:	fdivr  DWORD PTR [edx+0x79]
  422f72:	dec    esp
  422f73:	or     esp,DWORD PTR [edi+0x6d]
  422f76:	sub    edx,DWORD PTR [edx-0x51ba0b14]
  422f7c:	lods   al,BYTE PTR ds:[esi]
  422f7d:	sbb    BYTE PTR [esi-0x35],dl
  422f80:	test   eax,0x756d8f5a
  422f85:	test   eax,0xc55c0d4b
  422f8a:	fldenv ds:0x33134311
  422f90:	push   0x70
  422f92:	addr16 pop ecx
  422f94:	xlat   BYTE PTR ds:[ebx]
  422f95:	popa   
  422f96:	mov    esp,0xa650aa0
  422f9b:	jo     0x422f53
  422f9d:	inc    ebp
  422f9e:	leave  
  422f9f:	(bad)  
  422fa0:	xchg   DWORD PTR [edx],ebx
  422fa2:	inc    ebx
  422fa3:	les    eax,FWORD PTR [esi]
  422fa5:	add    edx,DWORD PTR [ebx]
  422fa7:	adc    esi,DWORD PTR [ebx-0x56102085]
  422fad:	pop    ebx
  422fae:	mov    dl,0xb0
  422fb0:	jmp    0x422f41
  422fb2:	cdq    
  422fb3:	mov    ah,0x17
  422fb5:	jp     0x423027
  422fb7:	xor    cl,bh
  422fb9:	cdq    
  422fba:	(bad)  
  422fbb:	and    eax,0x82425dc1
  422fc0:	sub    DWORD PTR [esi+0x34],esp
  422fc3:	inc    esp
  422fc4:	mov    ebp,0x8240cdd6
  422fc9:	mov    ecx,ecx
  422fcb:	push   cs
  422fcc:	test   al,bl
  422fce:	test   al,0x8a
  422fd0:	leave  
  422fd1:	arpl   WORD PTR [eax+0x3e],di
  422fd4:	mov    al,0xdc
  422fd6:	stos   BYTE PTR es:[edi],al
  422fd7:	adc    BYTE PTR [edx+0x336bd06f],0x0
	...
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x42300b
  422ff7:	fnstenv [esi]
  422ff9:	jae    0x423019
  422ffb:	mov    esi,0x67b0001
  423000:	add    BYTE PTR [eax],al
  423002:	xor    ebp,DWORD PTR [ecx-0x49b72476]
  423008:	pop    esi
  423009:	cmp    ch,ch
  42300b:	pop    esi
  42300c:	jmp    0x422fcd
  42300e:	popa   
  42300f:	cmp    dl,BYTE PTR [edi-0x5f55d74e]
  423015:	mov    BYTE PTR [ebx-0x3aaf53f4],dl
  42301b:	mov    cl,0xfe
  42301d:	loope  0x42301d
  42301f:	mov    ecx,DWORD PTR [ebp+0x9]
  423022:	sub    BYTE PTR [ebp-0x1fdcf769],0xb2
  423029:	mov    edx,0x85da3dc6
  42302e:	loope  0x423010
  423030:	dec    edi
  423031:	retf   
  423032:	jo     0x423099
  423034:	xor    al,dl
  423036:	xor    dl,BYTE PTR ds:0x8b8f8b4a
  42303c:	adc    eax,0x31095b83
  423041:	jge    0x4230b2
  423043:	cmp    al,0x1d
  423045:	dec    ecx
  423046:	sti    
  423047:	cmp    al,0xe0
  423049:	(bad)  
  42304a:	popf   
  42304b:	mov    edi,0xcdb7e3d3
  423050:	push   0xffffffb4
  423052:	call   0x7bb:0x7ea2b02f
  423059:	scas   eax,DWORD PTR es:[edi]
  42305a:	stos   DWORD PTR es:[edi],eax
  42305b:	addr16 xchg ebx,eax
  42305d:	icebp  
  42305e:	je     0x42300e
  423060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423062:	lds    esi,FWORD PTR [esi-0x190ecaec]
  423068:	jo     0x42309a
  42306a:	push   eax
  42306b:	dec    esi
  42306c:	sbb    eax,0x78ec069c
  423071:	retf   0x5e4f
  423074:	mov    eax,ds:0xbf54858a
  423079:	cmp    esp,DWORD PTR [ebx+eiz*4-0x46]
  42307d:	arpl   WORD PTR [esi],ax
  42307f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423080:	push   es
  423081:	sbb    dh,dl
  423083:	sub    edx,ebp
  423085:	inc    ebx
  423086:	(bad)  
  423087:	scas   eax,DWORD PTR es:[edi]
  423088:	stos   BYTE PTR es:[edi],al
  423089:	mov    dl,0x11
  42308b:	(bad)  
  42308c:	pop    esi
  42308d:	xchg   DWORD PTR [bp+si-0x135b],ecx
  423092:	in     eax,dx
  423093:	jno    0x42303c
  423095:	repz test BYTE PTR ds:0x5c220a7,bl
  42309c:	ret    
  42309d:	mov    ah,0xc7
  42309f:	inc    esp
  4230a0:	dec    DWORD PTR [edi]
  4230a2:	add    eax,0x2f7d0f98
  4230a7:	pop    edi
  4230a8:	daa    
  4230a9:	xchg   esp,edx
  4230ab:	test   esi,edx
  4230ad:	lea    edx,ds:[edx]
  4230b0:	or     cl,cl
  4230b2:	arpl   WORD PTR [ebx+0x58],cx
  4230b5:	xor    bl,0xa9
  4230b8:	sahf   
  4230b9:	ins    BYTE PTR es:[edi],dx
  4230ba:	pop    edi
  4230bb:	cs mov cl,0x57
  4230be:	cs popa 
  4230c0:	mov    ch,0x39
  4230c2:	jb     0x4230df
  4230c4:	adc    ebx,DWORD PTR [eax+edx*4]
  4230c7:	lock pop esi
  4230c9:	mov    edx,0xe8cf0a7d
  4230ce:	fwait
  4230cf:	mov    ecx,0x295478ed
  4230d4:	and    al,0xf2
  4230d6:	or     DWORD PTR [edi],0x2a
  4230d9:	adc    ecx,esi
  4230db:	popf   
  4230dc:	imul   edx,DWORD PTR [edx+0x5d8872c7],0xffffffd9
  4230e3:	imul   eax,DWORD PTR [esp+eax*4+0x5143cb92],0x8ed2c2fa
  4230ee:	push   edi
  4230ef:	cmp    al,0xbb
  4230f1:	stc    
  4230f2:	outs   dx,DWORD PTR ds:[esi]
  4230f3:	mov    edx,0x820d4883
  4230f8:	ss dec ebx
  4230fa:	mov    es,WORD PTR [edx-0x643523c]
  423100:	xor    DWORD PTR ds:0x1c774220,eax
  423106:	addr16 cmc 
  423108:	shr    dh,0x9d
  42310b:	xchg   esp,eax
  42310c:	(bad)  
  42310d:	retf   
  42310e:	repnz adc edx,DWORD PTR [esp-0x5ef1202f]
  423116:	retf   
  423117:	imul   esp,eax,0x3d
  42311a:	push   esp
  42311b:	mov    bh,0x59
  42311d:	dec    ebx
  42311e:	clc    
  42311f:	dec    esi
  423120:	outs   dx,BYTE PTR ds:[esi]
  423121:	daa    
  423122:	push   esp
  423123:	jp     0x4230f6
  423125:	stos   BYTE PTR es:[edi],al
  423126:	mov    ds:0x6f5f0cd6,al
  42312b:	ror    BYTE PTR [eax+0x99ffd3b],cl
  423131:	jge    0x4230e4
  423133:	cld    
  423134:	adc    al,0x50
  423136:	jg     0x4230c4
  423138:	or     eax,0xca58c9a2
  42313d:	in     al,dx
  42313e:	daa    
  42313f:	inc    eax
  423140:	imul   ecx,DWORD PTR [edx],0x26
  423143:	dec    eax
  423144:	pop    ss
  423145:	retf   0xafe9
  423148:	pop    ebp
  423149:	jp     0x42315e
  42314b:	mov    edi,0x270d4d18
  423150:	inc    edx
  423151:	fstp   TBYTE PTR [ebp+0x62]
  423154:	shl    DWORD PTR [ebx],cl
  423156:	iret   
  423157:	loop   0x4231ba
  423159:	inc    edx
  42315a:	cmp    ch,bl
  42315c:	clc    
  42315d:	and    al,0x4b
  42315f:	outs   dx,BYTE PTR ds:[esi]
  423160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423161:	fmul   QWORD PTR [esp+eiz*8+0x39]
  423165:	fisttp WORD PTR [ebp-0x42a560f3]
  42316b:	pushf  
  42316c:	call   0x4fb900ae
  423171:	ja     0x423157
  423173:	and    DWORD PTR [ebx-0x3c],ebp
  423176:	cmp    dl,dh
  423178:	mov    ecx,0x61eb7d86
  42317d:	scas   eax,DWORD PTR es:[edi]
  42317e:	pop    ecx
  42317f:	lods   al,BYTE PTR ds:[esi]
  423180:	popa   
  423181:	push   esp
  423182:	inc    ebp
  423183:	or     al,0xd8
  423185:	jnp    0x4231ab
  423187:	hlt    
  423188:	cmp    BYTE PTR [edi-0x6e],ah
  42318b:	aam    0x94
  42318d:	adc    ch,dh
  42318f:	dec    esp
  423190:	out    0x10,al
  423192:	cld    
  423193:	push   WORD PTR gs:[esi+0x77c52796]
  42319b:	xor    al,0x61
  42319d:	mov    ds:0xe2045e5d,al
  4231a2:	jno    0x4231d2
  4231a4:	sub    eax,0xbe83bd5c
  4231a9:	adc    ebp,ebx
  4231ab:	mov    bh,0x79
  4231ad:	les    eax,FWORD PTR [edi-0x46]
  4231b0:	mov    al,0x66
  4231b2:	and    eax,DWORD PTR [edi+0x1040c02b]
  4231b8:	pop    edx
  4231b9:	dec    eax
  4231ba:	and    eax,0xf7610dd9
  4231bf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4231c1:	add    bh,BYTE PTR [ecx-0x1235c81d]
  4231c7:	push   es
  4231c8:	pcmpgtw mm4,QWORD PTR [eax+0x46ad7b0c]
  4231cf:	(bad)  
  4231d0:	and    al,0x8d
  4231d2:	adc    eax,DWORD PTR [eax+0x68]
  4231d5:	(bad)  
  4231d6:	std    
  4231d7:	xchg   BYTE PTR [ecx-0x1b7a8760],cl
  4231dd:	jnp    0x423180
  4231df:	clc    
  4231e0:	out    0xb6,al
  4231e2:	cmp    ah,ch
  4231e4:	inc    eax
  4231e5:	sti    
  4231e6:	(bad)  
  4231e8:	adc    DWORD PTR [eax-0x3],ebx
  4231eb:	jnp    0x423184
  4231ed:	xchg   edx,eax
  4231ee:	or     ecx,DWORD PTR ds:[edx-0x29]
  4231f2:	stos   BYTE PTR es:[edi],al
  4231f3:	xlat   BYTE PTR ds:[ebx]
  4231f4:	mov    al,0x58
  4231f6:	jmp    0x423262
  4231f8:	push   esp
  4231f9:	or     ebp,edx
  4231fb:	mov    ch,BYTE PTR [eax+0x1]
  4231fe:	mov    esp,0x5d0dea64
  423203:	dec    esp
  423204:	jns    0x4231e0
  423206:	jnp    0x4231db
  423208:	dec    esp
  423209:	out    dx,al
  42320a:	sti    
  42320b:	mov    es,esi
  42320d:	repz and al,0xb2
  423210:	adc    ch,BYTE PTR [esi+0x28]
  423213:	lahf   
  423214:	retf   
  423215:	or     DWORD PTR cs:[edi+0x26],edi
  423219:	jl     0x4231a6
  42321b:	inc    eax
  42321c:	pop    edi
  42321d:	clc    
  42321e:	push   ebp
  42321f:	sub    al,0x6
  423221:	ins    DWORD PTR es:[edi],dx
  423222:	and    DWORD PTR [ecx+0x22],ebx
  423225:	fcomp  DWORD PTR [ebx-0x268058dd]
  42322b:	lods   al,BYTE PTR ds:[esi]
  42322c:	mov    ebp,0xdef3a2d4
  423231:	lock jmp 0xf51f458e
  423237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423238:	adc    al,0x84
  42323a:	mov    ch,0xef
  42323c:	inc    edi
  42323d:	jecxz  0x4231e4
  42323f:	sub    eax,0x10fc3530
  423244:	out    0xb8,al
  423246:	jae    0x423290
  423248:	in     eax,0x4b
  42324a:	prefetcht2 BYTE PTR [eax-0x34612ed3]
  423251:	loope  0x4232cf
  423253:	fucomp st(1)
  423255:	or     al,0x5e
  423257:	aas    
  423258:	scas   eax,DWORD PTR es:[edi]
  423259:	ds sub al,0x72
  42325c:	xchg   esp,eax
  42325d:	cmp    esi,edx
  42325f:	stos   BYTE PTR es:[edi],al
  423260:	imul   esi,DWORD PTR [ebx+ebp*8+0x5a],0xf63c6326
  423268:	mov    DWORD PTR [esi],edx
  42326a:	fisttp DWORD PTR [eax-0x54]
  42326d:	push   ebp
  42326e:	mov    dl,0x8c
  423270:	dec    ebx
  423271:	jge    0x42323a
  423273:	sbb    al,0xb4
  423275:	dec    eax
  423276:	in     eax,dx
  423277:	test   BYTE PTR [esi+ecx*1+0x58],ch
  42327b:	adc    eax,0x1ba3775b
  423280:	pushf  
  423281:	mov    eax,ds:0xdb3f3106
  423286:	test   eax,0x840294cf
  42328b:	lds    ecx,FWORD PTR ds:0x7c5dc6e5
  423291:	sbb    BYTE PTR [edx-0x1c695515],dh
  423297:	inc    eax
  423298:	jb     0x4232e9
  42329a:	mov    eax,ds:0x2a9daf1
  42329f:	or     ebp,DWORD PTR [esi]
  4232a1:	and    DWORD PTR ds:0x63361d22,esi
  4232a7:	pop    ds
  4232a8:	in     eax,dx
  4232a9:	jae    0x423265
  4232ab:	push   ds
  4232ac:	and    al,0x1d
  4232ae:	cmp    DWORD PTR [esi-0x1e63b5e0],0x40b0b9ca
  4232b8:	scas   eax,DWORD PTR es:[edi]
  4232b9:	mov    ch,0x47
  4232bb:	cmp    ebp,edx
  4232bd:	inc    eax
  4232be:	aam    0xb0
  4232c0:	mov    dl,BYTE PTR [edx+edx*4-0x3d]
  4232c4:	scas   al,BYTE PTR es:[edi]
  4232c5:	jp     0x4232f1
  4232c7:	xor    BYTE PTR [edi+edi*8],0xc6
  4232cb:	pushf  
  4232cc:	test   BYTE PTR [eax],bh
  4232ce:	xchg   ecx,eax
  4232cf:	call   0xbcec:0xf35f53dc
  4232d6:	jecxz  0x423353
  4232d8:	call   0x9041:0x94187baf
  4232df:	pop    ecx
  4232e0:	(bad)  
  4232e1:	jno    0x423264
  4232e3:	xchg   ebp,eax
  4232e4:	sbb    eax,0x6ee1d0c
  4232e9:	sub    eax,0xb8e93f4a
  4232ee:	cli    
  4232ef:	add    DWORD PTR [ebx],0x70
  4232f2:	ds dec ecx
  4232f4:	jno    0x423302
  4232f6:	ja     0x4232b1
  4232f8:	ret    
  4232f9:	ror    BYTE PTR [ebx-0x4d],1
  4232fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232fd:	mov    ah,BYTE PTR [edi+0x40]
  423300:	in     eax,dx
  423301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423302:	idiv   BYTE PTR [edx]
  423304:	xchg   edi,eax
  423305:	dec    esp
  423306:	lods   eax,DWORD PTR ds:[esi]
  423307:	mov    edx,0x80c981f4
  42330c:	ret    
  42330d:	push   DWORD PTR [esi-0x1d]
  423310:	inc    ebp
  423311:	mov    edx,0x9d35e129
  423316:	and    bl,ch
  423318:	jle    0x4232f2
  42331a:	lods   al,BYTE PTR ds:[esi]
  42331b:	push   cs
  42331c:	jl     0x4232b5
  42331e:	hlt    
  42331f:	cmc    
  423320:	mov    gs,WORD PTR [ebp+0x3c]
  423323:	cmp    BYTE PTR [ecx+0x2d],ah
  423326:	cmp    ecx,ebp
  423328:	pop    edx
  423329:	lock jmp 0x4232cb
  42332c:	jo     0x423398
  42332e:	sbb    ch,BYTE PTR [esp+ebp*2]
  423331:	arpl   dx,cx
  423333:	js     0x42336c
  423335:	sub    cl,0x78
  423338:	data16 dec cx
  42333b:	mov    eax,0x811cf7c7
  423340:	std    
  423341:	rol    DWORD PTR [ecx-0x25],0xc
  423345:	cmc    
  423346:	sub    esi,ebp
  423348:	mov    esi,0x38b588dd
  42334d:	cmp    esi,edx
  42334f:	jl     0x4233cb
  423351:	pop    ds
  423352:	pop    eax
  423353:	leave  
  423354:	ror    BYTE PTR [eax+0x62],cl
  423357:	icebp  
  423358:	cmp    eax,0xcad42592
  42335d:	bound  esp,QWORD PTR [edx+0x1f29a620]
  423363:	and    BYTE PTR [ecx],dh
  423365:	mov    ss,WORD PTR [edi]
  423367:	lahf   
  423368:	loop   0x4233a9
  42336a:	pop    ds
  42336b:	push   0xccee94be
  423370:	mov    ch,0xdd
  423372:	push   ebx
  423373:	(bad)  
  423374:	dec    esp
  423375:	dec    eax
  423376:	rol    DWORD PTR [ebp+0x1942d21],cl
  42337c:	jno    0x423380
  42337e:	mov    eax,0xcda5798d
  423383:	pop    ecx
  423384:	add    bl,bl
  423386:	pop    ecx
  423387:	and    DWORD PTR [ebx-0x4],eax
  42338a:	and    BYTE PTR [ecx+ebp*2+0x7a],ah
  42338e:	mov    cl,0xa1
  423390:	pop    ss
  423391:	mov    esp,DWORD PTR [edx+0x53]
  423394:	addr16 mov esp,0x37f0880c
  42339a:	xor    ah,bl
  42339c:	imul   ebp,DWORD PTR [eax-0x53],0xffffff8e
  4233a0:	cmp    al,0x20
  4233a2:	dec    ebp
  4233a3:	std    
  4233a4:	push   ss
  4233a5:	lock (bad) 
  4233a7:	cli    
  4233a8:	ja     0x423391
  4233aa:	adc    BYTE PTR [edi],ah
  4233ac:	cli    
  4233ad:	pusha  
  4233ae:	pop    es
  4233af:	dec    edx
  4233b0:	cmp    al,0x14
  4233b2:	mov    DWORD PTR [ebp-0x2faeaf61],edi
  4233b8:	sub    DWORD PTR [edx-0x22],ebx
  4233bb:	call   0xd0:0xf25adff3
  4233c2:	jmp    0x42337a
  4233c4:	in     al,dx
  4233c5:	(bad)  
  4233c6:	mov    ds:0xa1151d4e,al
  4233cb:	and    al,0xf2
  4233cd:	mov    eax,0x8e4b3b1
  4233d2:	mov    dh,0xba
  4233d4:	pop    ds
  4233d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d6:	xchg   BYTE PTR [esi+0x38c51c14],dh
  4233dc:	cli    
  4233dd:	ins    DWORD PTR es:[edi],dx
  4233de:	cld    
  4233df:	inc    edx
  4233e0:	sbb    cl,BYTE PTR ds:0xad536ed6
  4233e6:	fucom  st(4)
  4233e8:	or     BYTE PTR [eax-0x72],cl
  4233eb:	fsub   QWORD PTR [eax-0x4b]
  4233ee:	adc    edx,DWORD PTR [ebp+0x7a]
  4233f1:	lods   eax,DWORD PTR ds:[esi]
  4233f2:	inc    esp
  4233f3:	inc    si
  4233f5:	out    dx,eax
  4233f6:	mov    ebx,0x4eccfe62
  4233fb:	dec    edx
  4233fc:	(bad)  
  4233fd:	dec    esi
  4233fe:	sub    DWORD PTR [ebx-0xc],ecx
  423401:	neg    BYTE PTR ds:0xa6870580
  423407:	lds    edi,FWORD PTR [edx-0x1b]
  42340a:	xor    al,0x4b
  42340c:	ror    DWORD PTR [esi-0x7d49c1ba],cl
  423412:	inc    esi
  423413:	push   ss
  423414:	dec    ebx
  423415:	ins    DWORD PTR es:[edi],dx
  423416:	push   edi
  423417:	add    eax,0xf4ad736e
  42341c:	jns    0x42340c
  42341e:	sbb    ebx,esi
  423420:	scas   eax,DWORD PTR es:[edi]
  423421:	jbe    0x4233f7
  423423:	sub    cl,0x30
  423426:	stos   DWORD PTR es:[edi],eax
  423427:	adc    DWORD PTR [edx-0x3e],esp
  42342a:	ja     0x42348c
  42342c:	pop    edi
  42342d:	into   
  42342e:	stos   BYTE PTR es:[edi],al
  42342f:	out    0xea,eax
  423431:	scas   al,BYTE PTR es:[edi]
  423432:	xchg   ebx,eax
  423433:	out    dx,al
  423434:	sbb    bl,cl
  423436:	xchg   esi,eax
  423437:	mov    ds:0xfaf44594,al
  42343c:	(bad)  
  42343e:	rcr    edi,0xa6
  423441:	jae    0x4233f5
  423443:	fistp  QWORD PTR [edx+0x60e10dd8]
  423449:	loopne 0x423496
  42344b:	push   esp
  42344c:	ss mov bh,0x6d
  42344f:	jle    0x42348a
  423451:	jle    0x4234b2
  423453:	mov    al,ds:0xd2c5225d
  423458:	jmp    0x258d423
  42345d:	out    0xbf,al
  42345f:	jmp    0xce4:0x8be1d759
  423466:	push   edx
  423467:	mul    DWORD PTR [ecx]
  423469:	dec    ebx
  42346a:	out    0xf5,al
  42346c:	fs addr16 aam 0x60
  423470:	fadd   DWORD PTR [ecx]
  423472:	nop
  423473:	scas   al,BYTE PTR es:[edi]
  423474:	cwde   
  423475:	mov    edi,?
  423477:	js     0x423472
  423479:	xchg   esi,eax
  42347a:	int3   
  42347b:	xor    al,0x86
  42347d:	jecxz  0x42349d
  42347f:	sub    ah,BYTE PTR [eax+edi*4+0x1e]
  423483:	sbb    eax,0xa7eebe1e
  423488:	and    eax,0x96720cb1
  42348d:	shr    DWORD PTR [ebx-0x1f],0x4c
  423491:	push   esp
  423492:	pop    ds
  423493:	icebp  
  423494:	jmp    0x4234a1
  423496:	inc    edi
  423497:	into   
  423498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423499:	rcr    WORD PTR fs:[ecx-0x20cc9c82],cl
  4234a1:	lock lahf 
  4234a3:	ficomp WORD PTR [ebx-0x32]
  4234a6:	(bad)  
  4234a7:	jb     0x4234a5
  4234a9:	xor    esi,0xfffffffd
  4234ac:	or     DWORD PTR [edx+esi*2],ebp
  4234af:	sbb    eax,0xe8630f5a
  4234b4:	(bad)  [ebx+edx*2-0x3e]
  4234b8:	clc    
  4234b9:	push   cs
  4234ba:	loop   0x4234d4
  4234bc:	sub    edx,DWORD PTR [ebp-0x3bf80744]
  4234c2:	pop    esi
  4234c3:	xor    DWORD PTR [esi],0xffffffc4
  4234c6:	mov    al,ds:0xad8ac04d
  4234cb:	fwait
  4234cc:	hlt    
  4234cd:	neg    DWORD PTR [ebp-0x68]
  4234d0:	es push ss
  4234d2:	and    esi,eax
  4234d4:	ficomp WORD PTR [esi-0x27]
  4234d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234d8:	xor    eax,0xf726c367
  4234dd:	setg   BYTE PTR [esi+eax*8+0x7e]
  4234e2:	pop    es
  4234e3:	or     eax,0x7e56a564
  4234e8:	rcl    DWORD PTR [eax+0x5f908925],0x4b
  4234ef:	cmp    al,0x80
  4234f1:	mov    dh,0xae
  4234f3:	adc    BYTE PTR [ebx-0x4acc8ffb],ch
  4234f9:	or     DWORD PTR [edi+0x3a93dc0f],ecx
  4234ff:	inc    esp
  423500:	sub    eax,0xf380fc36
  423505:	gs push ebx
  423507:	lea    esi,[eax+0x61bfdaca]
  42350d:	mov    ecx,0x31f9a92f
  423512:	mov    ch,0xed
  423514:	arpl   WORD PTR [edi],cx
  423516:	shr    BYTE PTR [ecx],cl
  423518:	dec    esp
  423519:	xchg   ecx,ebx
  42351b:	cld    
  42351c:	stos   DWORD PTR es:[edi],eax
  42351d:	cs repz dec edx
  423520:	jnp    0x42356d
  423522:	or     ch,BYTE PTR [ebp+ebx*4-0x70]
  423526:	dec    esi
  423527:	adc    DWORD PTR [edx],eax
  423529:	in     eax,dx
  42352a:	aaa    
  42352b:	retf   
  42352c:	xor    eax,0x837d1364
  423531:	in     al,0xda
  423533:	mov    edi,0xc716605d
  423538:	sbb    ebx,DWORD PTR [eax-0x27]
  42353b:	paddb  mm2,QWORD PTR [esi-0x467d40f0]
  423542:	dec    eax
  423543:	mov    ebx,0x6394058f
  423548:	je     0x42356f
  42354a:	mov    dl,0x78
  42354c:	stos   DWORD PTR es:[edi],eax
  42354d:	push   0xeccb1485
  423552:	mov    al,BYTE PTR ds:0xccb19a70
  423558:	fcom   QWORD PTR [edi+0x649e5406]
  42355e:	(bad)  
  42355f:	push   ebx
  423560:	mov    al,ds:0xf891c53
  423565:	cmp    cl,cl
  423567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423568:	fucomip st,st(6)
  42356a:	ins    BYTE PTR es:[edi],dx
  42356b:	dec    edi
  42356c:	out    dx,al
  42356d:	push   esp
  42356e:	(bad)  
  42356f:	mov    eax,0xc25cf76a
  423574:	aam    0xe
  423576:	cmp    al,0xf5
  423578:	add    eax,0x56902225
  42357d:	sbb    DWORD PTR [eax+0x4921b047],esi
  423583:	dec    ebx
  423584:	in     eax,dx
  423585:	pop    edi
  423586:	sbb    cl,bh
  423588:	xchg   edi,eax
  423589:	stc    
  42358a:	xchg   edx,eax
  42358b:	xlat   BYTE PTR ds:[ebx]
  42358c:	jecxz  0x423516
  42358e:	xor    eax,0x8a7d245c
  423593:	rol    edx,0x5e
  423596:	pushf  
  423597:	in     eax,dx
  423598:	(bad)  
  423599:	cmc    
  42359a:	das    
  42359b:	fmulp  st(1),st
  42359d:	(bad)  
  42359e:	jb     0x423551
  4235a0:	cmc    
  4235a1:	loop   0x42355c
  4235a3:	or     eax,0xe590ea6b
  4235a8:	cld    
  4235a9:	mov    cl,0x25
  4235ab:	lods   al,BYTE PTR ds:[esi]
  4235ac:	or     dl,BYTE PTR [ebp-0x5fe519e1]
  4235b2:	xchg   edx,eax
  4235b3:	inc    ecx
  4235b4:	inc    edx
  4235b5:	dec    ebp
  4235b6:	xchg   ecx,eax
  4235b7:	inc    ebp
  4235b8:	add    edi,ecx
  4235ba:	retf   
  4235bb:	mov    al,0xc5
  4235bd:	mov    ?,WORD PTR [edx-0x7a]
  4235c0:	ret    0xb79f
  4235c3:	scas   al,BYTE PTR es:[edi]
  4235c4:	adc    eax,0x6bc3395b
  4235c9:	(bad)  [ebx+0x41]
  4235cc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4235ce:	xchg   ebx,eax
  4235cf:	imul   eax,DWORD PTR [edx],0x53
  4235d2:	test   al,0x20
  4235d4:	push   eax
  4235d5:	cwde   
  4235d6:	scas   eax,DWORD PTR es:[edi]
  4235d7:	push   ebp
  4235d8:	jecxz  0x42358a
  4235da:	mov    esi,DWORD PTR [eax+0x182e201b]
  4235e0:	gs gs jb 0x4235ab
  4235e4:	xor    eax,0xba647b42
  4235e9:	push   ebx
  4235ea:	call   0x62bc:0xa794cda5
  4235f1:	out    0x1,al
  4235f3:	cdq    
  4235f4:	enter  0xdb92,0x1b
  4235f8:	xchg   ebx,eax
  4235f9:	jb     0x423672
  4235fb:	cmp    BYTE PTR [ecx+0x3d678aaf],dl
  423601:	push   ss
  423602:	pushf  
  423603:	ror    BYTE PTR [ebx+0x12],cl
  423606:	mov    cl,BYTE PTR [ebx+0x14]
  423609:	pusha  
  42360a:	ftst   
  42360c:	push   0x2c
  42360e:	int    0xf
  423610:	sub    BYTE PTR [edx+eiz*8+0x221b97f4],bh
  423617:	push   cs
  423618:	scas   eax,DWORD PTR es:[edi]
  423619:	cdq    
  42361a:	lods   al,BYTE PTR ds:[esi]
  42361b:	out    0xd3,al
  42361d:	push   ss
  42361e:	dec    ebp
  42361f:	(bad)  
  423621:	fadd   DWORD PTR [ecx-0x4fbcdd92]
  423627:	mov    ch,0x24
  423629:	xchg   ebp,eax
  42362a:	(bad)  
  42362b:	mov    al,0x61
  42362d:	sub    al,0xb7
  42362f:	outs   dx,BYTE PTR ds:[esi]
  423630:	gs inc edx
  423632:	mov    ?,eax
  423634:	daa    
  423635:	in     al,0x3f
  423637:	ja     0x42365f
  423639:	(bad)  [ecx]
  42363b:	adc    al,0x95
  42363d:	imul   ecx,DWORD PTR [esi-0x5e27997e],0x29ecbe4f
  423647:	inc    edi
  423648:	mov    eax,ds:0x7a9353f5
  42364d:	dec    edx
  42364e:	das    
  42364f:	adc    eax,0xe0d777db
  423654:	sbb    eax,0xb282c514
  423659:	outs   dx,BYTE PTR ds:[esi]
  42365a:	lods   al,BYTE PTR ds:[esi]
  42365b:	call   0x54e0:0x8a69ed1c
  423662:	hlt    
  423663:	shl    edx,1
  423665:	jge    0x423662
  423667:	mov    dl,0x84
  423669:	cmc    
  42366a:	cwde   
  42366b:	hlt    
  42366c:	stos   DWORD PTR es:[edi],eax
  42366d:	adc    BYTE PTR [ebp+0x20fb076c],ch
  423673:	pop    eax
  423674:	adc    ah,ah
  423676:	shr    bl,1
  423678:	and    BYTE PTR [ebx+0x73],0xc5
  42367c:	sbb    al,0x0
	...
  42368a:	pop    eax
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x6ba42923
  423697:	pop    ss
  423698:	cmp    DWORD PTR [edx+0x1c499],ebp
  42369e:	jnp    0x4236a6
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	adc    eax,0x8f438c81
  4236a7:	xchg   edx,eax
  4236a8:	ja     0x423690
  4236aa:	jl     0x42365a
  4236ac:	jmp    0xb9c5:0x4e9e
  4236b2:	add    edi,DWORD PTR [edx-0x31f395cd]
  4236b8:	repnz jecxz 0x4236c0
  4236bb:	iret   
  4236bc:	jle    0x4236f1
  4236be:	icebp  
  4236bf:	aam    0xde
  4236c1:	jb     0x423691
  4236c3:	shl    DWORD PTR [eax],1
  4236c5:	sbb    al,0xd8
  4236c7:	imul   esp,esp,0x7e
  4236ca:	push   esi
  4236cb:	and    BYTE PTR [ecx],bl
  4236cd:	dec    esi
  4236ce:	add    ah,bh
  4236d0:	fiadd  WORD PTR [esi]
  4236d2:	dec    ebx
  4236d3:	jmp    0xe5a54a9e
  4236d8:	or     edi,DWORD PTR [esi-0xfffeec5]
  4236de:	mov    ebx,0x3457a9ba
  4236e3:	adc    esp,DWORD PTR [edi]
  4236e5:	jle    0x42371b
  4236e7:	aaa    
  4236e8:	push   ecx
  4236e9:	enter  0xb698,0xe7
  4236ed:	ficom  DWORD PTR [eax]
  4236ef:	repz les esp,FWORD PTR [edx-0x7d]
  4236f3:	aaa    
  4236f4:	shl    DWORD PTR [edi],0x1c
  4236f7:	jno    0x423707
  4236f9:	loope  0x423772
  4236fb:	push   es
  4236fc:	jno    0x423689
  4236fe:	pop    ebx
  4236ff:	pop    esp
  423700:	in     eax,0x51
  423702:	std    
  423703:	mov    dl,0x3a
  423705:	(bad)  
  423706:	mov    dl,0xf0
  423708:	jmp    0x42369a
  42370a:	aas    
  42370b:	loopne 0x423764
  42370d:	retf   
  42370e:	aad    0x8b
  423710:	pop    esi
  423711:	fiadd  DWORD PTR [ebp-0x4dcccf3a]
  423717:	pop    es
  423718:	aas    
  423719:	cmp    ebx,esi
  42371b:	call   0xded1:0xca143e7f
  423722:	ret    
  423723:	iret   
  423724:	push   esp
  423725:	loope  0x423756
  423727:	add    eax,0x83d95d4b
  42372c:	stos   DWORD PTR es:[edi],eax
  42372d:	jge    0x42371c
  42372f:	(bad)  
  423730:	jg     0x4236de
  423732:	pusha  
  423733:	dec    edi
  423734:	mov    eax,ds:0xb822bc05
  423739:	push   cs
  42373a:	dec    esp
  42373b:	gs test al,0xb6
  42373e:	pop    edx
  42373f:	retf   
  423740:	lock fs out dx,eax
  423743:	xor    al,ah
  423745:	push   es
  423746:	repnz pop edx
  423748:	repnz xor eax,0x4f86d05c
  42374e:	lar    edi,WORD PTR [ebx]
  423751:	xchg   ebx,eax
  423752:	push   esi
  423753:	push   edx
  423754:	repnz lahf 
  423756:	lea    esi,[edx+0x78]
  423759:	xchg   esi,eax
  42375a:	mov    ds:0xee69c509,al
  42375f:	iret   
  423760:	loope  0x423796
  423762:	xor    eax,ebx
  423764:	(bad)  
  423765:	loope  0x423783
  423767:	out    0x69,al
  423769:	out    dx,eax
  42376a:	cdq    
  42376b:	daa    
  42376c:	out    0x8c,al
  42376e:	jg     0x423704
  423770:	shl    BYTE PTR [esi+eax*1],1
  423773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423774:	outs   dx,BYTE PTR ds:[esi]
  423775:	enter  0xa317,0x6b
  423779:	mov    dl,BYTE PTR [eax+ebx*4-0x2d39e26a]
  423780:	mov    edi,0xfba71668
  423785:	push   ss
  423786:	jb     0x4237e7
  423788:	mov    eax,ds:0x1b8837df
  42378d:	xor    cl,BYTE PTR [ebx-0x72]
  423790:	add    DWORD PTR [eax],ebp
  423792:	jmp    0xc6ef00ed
  423797:	add    al,0x95
  423799:	popf   
  42379a:	mov    dh,0x68
  42379c:	mov    dh,0x3d
  42379e:	ja     0x4237f9
  4237a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237a1:	cmp    ecx,DWORD PTR [ecx-0x2c7fb1f4]
  4237a7:	xor    cl,BYTE PTR [ecx-0x6f]
  4237aa:	and    eax,0x9ad38034
  4237af:	xchg   ebp,eax
  4237b0:	xchg   esi,eax
  4237b1:	enter  0x9215,0xac
  4237b5:	shl    esp,0x84
  4237b8:	retf   0xceb9
  4237bb:	jo     0x42373e
  4237bd:	and    eax,0xa6bdb697
  4237c2:	mov    dh,0xc7
  4237c4:	test   BYTE PTR [ebx+0x69a12798],ch
  4237ca:	loop   0x423783
  4237cc:	std    
  4237cd:	xchg   ebp,eax
  4237ce:	mov    al,0xb3
  4237d0:	jp     0x4237e3
  4237d2:	pop    ebx
  4237d3:	adc    al,0x1d
  4237d5:	push   ebx
  4237d6:	sub    ebx,edx
  4237d8:	les    edi,FWORD PTR [ecx+0x8b51456]
  4237de:	hlt    
  4237df:	test   BYTE PTR [esi],dl
  4237e1:	pop    edx
  4237e2:	btr    DWORD PTR [ecx-0x3bcaa7da],edi
  4237e9:	dec    esi
  4237ea:	sbb    BYTE PTR es:[ecx+0x73],bh
  4237ee:	inc    edx
  4237ef:	pop    ds
  4237f0:	ja     0x423834
  4237f2:	lds    esi,FWORD PTR [edi-0x64]
  4237f5:	mov    edi,0x99c85e14
  4237fa:	int3   
  4237fb:	in     eax,dx
  4237fc:	jnp    0x4237d1
  4237fe:	push   0x69
  423800:	ins    DWORD PTR es:[edi],dx
  423801:	hlt    
  423802:	pop    edx
  423803:	push   ss
  423804:	mov    al,ds:0x5dcb1b9
  423809:	cld    
  42380a:	ins    DWORD PTR es:[edi],dx
  42380b:	scas   al,BYTE PTR es:[edi]
  42380c:	sbb    ebp,DWORD PTR [ebx+edi*4]
  42380f:	cmp    ebx,ebp
  423811:	test   al,0x92
  423813:	imul   ebp,DWORD PTR [eax-0x6bdfd246],0x886ecbb5
  42381d:	das    
  42381e:	push   edx
  42381f:	mov    ah,BYTE PTR [esp+esi*1]
  423822:	push   edx
  423823:	cdq    
  423824:	or     al,0x74
  423826:	repnz mov esi,0x215fb985
  42382c:	out    dx,al
  42382d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42382e:	loop   0x423851
  423830:	stos   DWORD PTR es:[edi],eax
  423831:	daa    
  423832:	cmp    ecx,esp
  423834:	xchg   BYTE PTR [edi-0x27],dh
  423837:	adc    eax,esi
  423839:	out    dx,al
  42383a:	mov    esi,0x7b58cf5e
  42383f:	push   0x20
  423841:	inc    ebp
  423842:	in     al,0x75
  423844:	lods   eax,DWORD PTR ds:[esi]
  423845:	inc    ecx
  423846:	lods   eax,DWORD PTR ds:[esi]
  423847:	xchg   ebx,eax
  423848:	jge    0x423866
  42384a:	mov    dh,0xa5
  42384c:	shr    DWORD PTR [esi-0x70402d14],cl
  423852:	sbb    ah,BYTE PTR [edx+0x1a590b9f]
  423858:	outs   dx,BYTE PTR ds:[esi]
  423859:	retf   
  42385a:	sub    DWORD PTR [edi],0xffffffd0
  42385d:	(bad)
  423862:	bound  ecx,QWORD PTR [edi]
  423864:	dec    ecx
  423865:	lods   al,BYTE PTR ds:[esi]
  423866:	dec    DWORD PTR ds:0xb1366cf5
  42386c:	jg     0x423838
  42386e:	shr    BYTE PTR [edx],1
  423870:	add    ebx,esp
  423872:	data16 sub ch,BYTE PTR [ebp+0x5b190ade]
  423879:	mov    ebp,0xaba57d21
  42387e:	cmp    bl,bh
  423880:	push   esp
  423881:	xchg   esi,eax
  423882:	fs imul ebp,eax,0xe08e7293
  423889:	stos   DWORD PTR es:[di],eax
  42388b:	jle    0x42384e
  42388d:	cmp    esp,esp
  42388f:	adc    al,ah
  423891:	mov    dh,0x8c
  423893:	pop    esp
  423894:	push   eax
  423895:	lock adc cl,bl
  423898:	or     al,0xe4
  42389a:	dec    esp
  42389b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42389c:	test   BYTE PTR [edx],bh
  42389e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42389f:	cmc    
  4238a0:	jge    0x42385c
  4238a2:	(bad)  
  4238a3:	fsub   QWORD PTR [eax]
  4238a5:	call   0x32de:0x45521257
  4238ac:	jbe    0x423865
  4238ae:	lds    esi,FWORD PTR [ebx+0x7c]
  4238b1:	stc    
  4238b2:	sti    
  4238b3:	or     dl,0xa6
  4238b6:	pop    edi
  4238b7:	or     ebp,DWORD PTR [edi+edi*1+0x46]
  4238bb:	pusha  
  4238bc:	fsubr  DWORD PTR [edx+0x50]
  4238bf:	fisttp WORD PTR [eax]
  4238c1:	xchg   esp,eax
  4238c2:	add    edi,esi
  4238c4:	and    eax,0x7a5b6046
  4238c9:	sbb    BYTE PTR [esi+0x50e5085],0x99
  4238d0:	aad    0xea
  4238d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d3:	mov    bh,0xbb
  4238d5:	popa   
  4238d6:	lods   eax,DWORD PTR ds:[esi]
  4238d7:	(bad)  
  4238d8:	popf   
  4238d9:	mov    dl,0xd9
  4238db:	out    0xd9,al
  4238dd:	xor    dl,al
  4238df:	mov    eax,DWORD PTR [ecx]
  4238e1:	pop    esp
  4238e2:	(bad)  
  4238e3:	shl    cl,1
  4238e5:	rcl    BYTE PTR [esi+0x41],0x21
  4238e9:	and    al,0xe2
  4238eb:	xchg   ebx,eax
  4238ec:	pop    ebp
  4238ed:	jbe    0x42393e
  4238ef:	js     0x423956
  4238f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238f2:	adc    al,0xb9
  4238f4:	or     al,BYTE PTR [ebx+ecx*4+0x4299a0cb]
  4238fb:	vandnpd ymm5,ymm1,YMMWORD PTR [ebp-0x6]
  423900:	pop    ebx
  423901:	popf   
  423902:	ins    BYTE PTR es:[edi],dx
  423903:	cmp    esi,DWORD PTR [ebx-0x5e]
  423906:	pop    esi
  423907:	aam    0x46
  423909:	clc    
  42390a:	sahf   
  42390b:	and    eax,eax
  42390d:	pop    esp
  42390e:	and    al,0xde
  423910:	retf   0x3bf8
  423913:	pop    ebp
  423914:	daa    
  423915:	fwait
  423916:	adc    DWORD PTR [esi],edx
  423918:	push   edi
  423919:	enter  0x15f1,0x0
  42391d:	aam    0x67
  42391f:	aas    
  423920:	xchg   edi,eax
  423921:	pop    ds
  423922:	fst    DWORD PTR [ebp-0x12]
  423925:	cli    
  423926:	fsubr  QWORD PTR [ecx+0x36d8c013]
  42392c:	sbb    DWORD PTR [ecx],ebx
  42392e:	sub    ah,BYTE PTR [edi+0x1e]
  423931:	pop    ecx
  423932:	out    0x6d,eax
  423934:	in     al,0xc2
  423936:	leave  
  423937:	rcl    ebx,1
  423939:	dec    ecx
  42393a:	mov    esi,0xac2fada1
  42393f:	test   ax,0x9c73
  423943:	lea    esi,[eax+0x5ba7b421]
  423949:	in     al,0xdb
  42394b:	pop    ebp
  42394c:	or     eax,0x70e8c292
  423951:	in     eax,dx
  423952:	xchg   esi,eax
  423953:	shl    bh,cl
  423955:	push   ss
  423956:	shl    BYTE PTR [ecx+0x252648f7],0x3e
  42395d:	data16 in al,dx
  42395f:	int    0x8
  423961:	loop   0x423934
  423963:	call   0x54afcb97
  423968:	pusha  
  423969:	xchg   bh,cl
  42396b:	loope  0x423942
  42396d:	push   cs
  42396e:	lock pusha 
  423970:	add    ecx,DWORD PTR ds:0x3403c531
  423976:	mov    edx,0xf4c82f6b
  42397b:	daa    
  42397c:	nop
  42397d:	mov    cl,0xef
  42397f:	je     0x423969
  423981:	clc    
  423982:	scas   eax,DWORD PTR es:[edi]
  423983:	add    DWORD PTR [ecx+0x955b483],eax
  423989:	mov    al,0xe7
  42398b:	jp     0x4239cb
  42398d:	mov    ecx,0xa1c8bbde
  423992:	test   al,0x8e
  423994:	mov    ch,0x7c
  423996:	sub    dl,dl
  423998:	arpl   WORD PTR [ecx+eax*8],sp
  42399b:	retf   
  42399c:	jecxz  0x4239c6
  42399e:	shr    BYTE PTR [edi+eax*4],1
  4239a1:	retf   
  4239a2:	scas   eax,DWORD PTR es:[edi]
  4239a3:	ins    DWORD PTR es:[edi],dx
  4239a4:	cmp    eax,ebx
  4239a6:	mov    al,0x89
  4239a8:	fsub   DWORD PTR [eax+0x2f]
  4239ab:	ins    BYTE PTR es:[edi],dx
  4239ac:	push   ss
  4239ad:	rol    ebx,0x12
  4239b0:	add    DWORD PTR [eax-0x51a0e28a],esi
  4239b6:	out    0x35,al
  4239b8:	scas   al,BYTE PTR es:[edi]
  4239b9:	push   esi
  4239ba:	(bad)  
  4239bb:	mov    dh,0x32
  4239bd:	test   al,0x9
  4239bf:	int    0x67
  4239c1:	rol    BYTE PTR [ecx-0xba98d2e],cl
  4239c7:	xor    DWORD PTR [esp+ebx*1-0x39],ebp
  4239cb:	mov    al,0x98
  4239cd:	xchg   esp,eax
  4239ce:	loope  0x423a1c
  4239d0:	cmp    DWORD PTR [edi+0x10e14a63],0x35782fda
  4239da:	or     DWORD PTR [eax+0x56a1f726],ecx
  4239e0:	call   0xda2f:0x9d8dbc07
  4239e7:	ins    BYTE PTR es:[edi],dx
  4239e8:	out    dx,eax
  4239e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239ea:	test   al,0x51
  4239ec:	std    
  4239ed:	ins    DWORD PTR es:[edi],dx
  4239ee:	xor    DWORD PTR [ebx+esi*1-0x1e4129a9],ebx
  4239f5:	pop    edx
  4239f6:	ror    BYTE PTR ds:0x3570b9ee,0xdd
  4239fd:	sub    dh,0xf7
  423a00:	ss push ebx
  423a02:	cmp    BYTE PTR [ebp-0x1b],bl
  423a05:	cmp    dl,BYTE PTR [eax+0x2d6ee764]
  423a0b:	mov    ds:0x74a50344,eax
  423a10:	pop    esi
  423a11:	dec    ecx
  423a12:	mov    ds:0x9a53ad99,al
  423a17:	test   DWORD PTR ds:0x342ff0b,ebp
  423a1d:	jmp    DWORD PTR cs:[edi-0x108a9eec]
  423a24:	adc    al,0x1d
  423a26:	lea    ecx,[esi+0x2fd2819e]
  423a2c:	mov    esi,0x9f72a51c
  423a31:	unpckhps xmm7,XMMWORD PTR [esi]
  423a34:	sub    al,0x86
  423a36:	and    edi,DWORD PTR [ecx-0x216609b]
  423a3c:	gs ret 
  423a3e:	mov    cl,0x81
  423a40:	cdq    
  423a41:	shr    BYTE PTR [ebx-0x76],1
  423a44:	mov    ah,0x3
  423a46:	imul   esp,edx,0x50
  423a49:	not    ch
  423a4b:	inc    edx
  423a4c:	dec    ecx
  423a4d:	cs test eax,0xb717869
  423a53:	sti    
  423a54:	test   eax,0xb426ea4e
  423a59:	add    al,0xad
  423a5b:	test   DWORD PTR [edx+0x54],edx
  423a5e:	popf   
  423a5f:	hlt    
  423a60:	test   DWORD PTR [eax],ecx
  423a62:	pop    ss
  423a63:	pushf  
  423a64:	cld    
  423a65:	push   0x7f6a5b0b
  423a6a:	fld    st(3)
  423a6c:	mov    eax,ds:0xe577794b
  423a71:	pushf  
  423a72:	dec    eax
  423a73:	mov    al,ds:0x136ebd6
  423a78:	jo     0x423ae9
  423a7a:	hlt    
  423a7b:	mov    ss,WORD PTR ds:0xa23a92cb
  423a81:	stos   BYTE PTR es:[edi],al
  423a82:	daa    
  423a83:	(bad)  
  423a84:	adc    eax,0x82f5f8a6
  423a89:	les    esi,FWORD PTR [eax]
  423a8b:	mov    BYTE PTR [eax+0x4c],dl
  423a8e:	adc    DWORD PTR ds:0x3a951ac8,edi
  423a94:	fisub  DWORD PTR [edi+0x25a7081f]
  423a9a:	sub    ecx,ebx
  423a9c:	mov    BYTE PTR [ecx+0x41],bl
  423a9f:	es inc ebx
  423aa1:	dec    ebx
  423aa2:	neg    DWORD PTR [ecx+ecx*4-0x73]
  423aa6:	arpl   WORD PTR [ebp+0x75],cx
  423aa9:	push   ds
  423aaa:	ss inc edx
  423aac:	mov    esp,0x65b3ea33
  423ab1:	pop    esp
  423ab2:	inc    eax
  423ab3:	repnz add BYTE PTR [esi-0x136e4d3d],ah
  423aba:	inc    ebp
  423abb:	scas   eax,DWORD PTR es:[edi]
  423abc:	cmp    DWORD PTR [eax+eiz*4],ebp
  423abf:	(bad)  
  423ac0:	mov    WORD PTR [edx+0x6a],es
  423ac3:	jecxz  0x423a58
  423ac5:	(bad)  
  423ac6:	fcom   QWORD PTR [ebx+0x6c0f701]
  423acc:	dec    esp
  423acd:	xchg   ebx,eax
  423ace:	clc    
  423acf:	and    ch,BYTE PTR [esp+ebx*4+0x21]
  423ad3:	adc    al,0xeb
  423ad5:	repz (bad) 
  423ad7:	fwait
  423ad8:	and    bh,BYTE PTR [edi-0x4001b34f]
  423ade:	popf   
  423adf:	out    dx,al
  423ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae1:	xor    esp,DWORD PTR [edx]
  423ae3:	add    BYTE PTR [edx+0x5930045c],bh
  423ae9:	sub    esp,DWORD PTR [esi]
  423aeb:	adc    DWORD PTR [ebx+0x52ba921d],ebx
  423af1:	jl     0x423aec
  423af3:	add    dl,ch
  423af5:	mov    eax,ds:0x1463db8b
  423afa:	jecxz  0x423b23
  423afc:	ret    
  423afd:	repnz mov ecx,0x56cc5ab1
  423b03:	sub    al,0x3c
  423b05:	jo     0x423ac9
  423b07:	push   ss
  423b08:	cmp    eax,0xbd3b6ea
  423b0d:	mov    dh,0xeb
  423b0f:	iret   
  423b10:	cmp    eax,0xd22a4206
  423b15:	sahf   
  423b16:	sbb    al,0xb1
  423b18:	sub    esp,ebx
  423b1a:	mov    edi,0xceb3eed9
  423b1f:	jge    0x423b2e
  423b21:	pop    edi
  423b22:	imul   esp,DWORD PTR [edi+0x7b0e12aa],0x8e8bea38
  423b2c:	mov    esi,DWORD PTR [ebp-0x1d]
  423b2f:	adc    esp,ebp
  423b31:	jmp    0x8222:0x3b2f179a
  423b38:	xchg   ebx,eax
  423b39:	aaa    
  423b3a:	icebp  
  423b3b:	pop    es
  423b3c:	push   es
  423b3d:	mov    esi,0x375ca298
  423b42:	jmp    0x423b22
  423b44:	dec    ebp
  423b45:	addr16 std 
  423b47:	and    edi,DWORD PTR [esi]
  423b49:	dec    ecx
  423b4a:	inc    esi
  423b4b:	cwde   
  423b4c:	inc    ecx
  423b4d:	lods   al,BYTE PTR ds:[esi]
  423b4e:	mov    esi,0xc94956ed
  423b53:	jge    0x423ba5
  423b55:	neg    BYTE PTR [ebx]
  423b57:	inc    edi
  423b58:	add    al,bh
  423b5a:	mov    ?,WORD PTR [eax]
  423b5c:	ds iret 
  423b5e:	cmp    DWORD PTR [ebx],edx
  423b60:	xchg   ebx,eax
  423b61:	test   al,0xb4
  423b63:	ins    BYTE PTR es:[edi],dx
  423b64:	out    0x62,eax
  423b66:	sub    sp,WORD PTR [ecx+0x61]
  423b6a:	inc    ebx
  423b6b:	xchg   BYTE PTR [ebx],cl
  423b6d:	les    ebx,FWORD PTR [esi-0x65091061]
  423b73:	fwait
  423b74:	inc    ecx
  423b75:	cmc    
  423b76:	scas   al,BYTE PTR es:[edi]
  423b77:	pop    eax
  423b78:	sub    cl,ah
  423b7a:	data16 or al,0x43
  423b7d:	add    ah,BYTE PTR [esi-0x2a]
  423b80:	mov    edi,0xfa4d7dd7
  423b85:	sbb    cl,cl
  423b87:	xor    ah,0xf1
  423b8a:	bound  esp,QWORD PTR [edx+0x38]
  423b8d:	sbb    ebx,edi
  423b8f:	dec    edx
  423b90:	inc    eax
  423b91:	shl    si,0xe5
  423b95:	mov    esi,0xffcf956a
  423b9a:	sar    ch,cl
  423b9c:	mov    eax,0xaf9bed2
  423ba1:	or     BYTE PTR [edi+ebx*8],dh
  423ba4:	or     DWORD PTR [ebx],0xffffff99
  423ba7:	stos   BYTE PTR es:[edi],al
  423ba8:	ror    eax,cl
  423baa:	cld    
  423bab:	mov    DWORD PTR [eax],ebp
  423bad:	xchg   ebp,eax
  423bae:	cdq    
  423baf:	push   cs
  423bb0:	or     eax,0xd0312085
  423bb5:	popa   
  423bb6:	enter  0x62e8,0xe
  423bba:	int    0x82
  423bbc:	sbb    cl,ah
  423bbe:	mov    al,0x60
  423bc0:	mov    al,ds:0x7af6ca77
  423bc5:	mov    al,ds:0xa114c4d7
  423bca:	mov    cl,0x3e
  423bcc:	pop    esp
  423bcd:	pushf  
  423bce:	outs   dx,DWORD PTR ds:[esi]
  423bcf:	dec    esp
  423bd0:	pop    ebp
  423bd1:	mov    ah,0x11
  423bd3:	enter  0xa1a3,0xf3
  423bd7:	out    0xf2,al
  423bd9:	jle    0x423c0b
  423bdb:	push   es
  423bdc:	scas   eax,DWORD PTR es:[edi]
  423bdd:	scas   al,BYTE PTR es:[edi]
  423bde:	pop    ebx
  423bdf:	or     ecx,eax
  423be1:	mov    dh,0x73
  423be3:	dec    edx
  423be4:	daa    
  423be5:	push   ss
  423be6:	mov    esp,0xc94b1ed0
  423beb:	push   0x4500bbf8
  423bf0:	mov    cl,0xdd
  423bf2:	jge    0x423b7c
  423bf4:	aam    0x56
  423bf6:	scas   al,BYTE PTR es:[edi]
  423bf7:	pop    ss
  423bf8:	ja     0x423bde
  423bfa:	stc    
  423bfb:	sub    eax,0x8447a1e1
  423c00:	imul   esi,DWORD PTR [ebx],0x289f4ed6
  423c06:	shl    DWORD PTR [edi+ebx*8],1
  423c09:	mov    cl,BYTE PTR [ecx]
  423c0b:	scas   al,BYTE PTR es:[edi]
  423c0c:	ins    BYTE PTR es:[edi],dx
  423c0d:	inc    ebx
  423c0e:	int3   
  423c0f:	mov    ah,0x8c
  423c11:	(bad)  
  423c13:	xor    al,dl
  423c15:	cld    
  423c16:	scas   al,BYTE PTR es:[edi]
  423c17:	imul   eax,DWORD PTR [esi],0x51
  423c1a:	aam    0xcf
  423c1c:	push   edi
  423c1d:	and    BYTE PTR [edx+0x6a1dc3fa],bl
  423c23:	cmp    esp,DWORD PTR [esi+ebx*1]
  423c26:	les    esi,FWORD PTR [eax-0x5b61d8c4]
  423c2c:	out    0x9,eax
  423c2e:	xor    al,0x86
  423c30:	and    DWORD PTR [ebx-0x6626e2d0],esi
  423c36:	adc    BYTE PTR [eax+ebp*8],dl
  423c39:	xor    BYTE PTR [edi],bh
  423c3b:	test   BYTE PTR ds:0x634a755f,al
  423c41:	jne    0x423bec
  423c43:	sbb    bl,BYTE PTR [ebx+0xd13b46c]
  423c49:	daa    
  423c4a:	ds sub ecx,esi
  423c4d:	xchg   edi,eax
  423c4e:	in     al,dx
  423c4f:	xor    BYTE PTR [eax+0x62696e9d],al
  423c55:	add    eax,0x7837c29a
  423c5a:	adc    esp,DWORD PTR [ebp+ecx*2-0x2c]
  423c5e:	dec    ecx
  423c5f:	or     eax,0x9803a10c
  423c64:	sub    ebp,ecx
  423c66:	test   esi,edi
  423c68:	out    0x9b,eax
  423c6a:	pop    ebx
  423c6b:	outs   dx,DWORD PTR ds:[esi]
  423c6c:	fsubr  QWORD PTR ds:0x761f8427
  423c72:	dec    BYTE PTR [ecx+edi*1+0xa]
  423c76:	ds push edx
  423c78:	push   eax
  423c79:	sar    ebx,1
  423c7b:	sub    al,0x72
  423c7d:	clc    
  423c7e:	pushf  
  423c7f:	push   ds
  423c80:	adc    al,0xad
  423c82:	inc    ebp
  423c83:	jnp    0x423cdf
  423c85:	add    eax,0xfcba0fd3
  423c8a:	dec    ebp
  423c8b:	repz lahf 
  423c8d:	mov    esi,0xdf00d546
  423c92:	mov    cl,ch
  423c94:	test   DWORD PTR [edi+0x6f634ce4],ebx
  423c9a:	icebp  
  423c9b:	in     al,0x27
  423c9d:	xor    DWORD PTR [edi],0x1d
  423ca0:	addr16 pop ds
  423ca2:	scas   eax,DWORD PTR es:[edi]
  423ca3:	ins    BYTE PTR es:[edi],dx
  423ca4:	cmp    eax,0x7a02ba79
  423ca9:	mov    bl,dl
  423cab:	test   al,0x29
  423cad:	clc    
  423cae:	fisttp DWORD PTR [edi]
  423cb0:	loopne 0x423c7d
  423cb2:	addr16 in eax,dx
  423cb4:	xor    al,0x44
  423cb6:	push   ebx
  423cb7:	jl     0x423c77
  423cb9:	add    eax,0xddbb5612
  423cbe:	or     edx,DWORD PTR [ecx+0x235413fa]
  423cc4:	retf   
  423cc5:	rcr    BYTE PTR [esp+ebx*1],cl
  423cc8:	add    dl,dl
  423cca:	xchg   BYTE PTR [eax+0xf],bh
  423ccd:	xchg   esp,eax
  423cce:	stos   DWORD PTR es:[edi],eax
  423ccf:	inc    ebx
  423cd0:	in     eax,0xe2
  423cd2:	(bad)  
  423cd3:	pop    ebp
  423cd4:	cld    
  423cd5:	iret   
  423cd6:	call   0x5e30:0x9500f6dc
  423cdd:	mov    esp,0xbbdb0570
  423ce2:	pop    edi
  423ce3:	xlat   BYTE PTR ds:[ebx]
  423ce5:	xchg   ebx,eax
  423ce6:	aam    0x75
  423ce8:	mov    eax,0x93918a15
  423ced:	retf   
  423cee:	xlat   BYTE PTR ds:[ebx]
  423cef:	add    ebp,DWORD PTR [ebp+0x51]
  423cf2:	lea    edx,[edx+0x7c8059eb]
  423cf8:	mov    dl,0x5f
  423cfa:	ret    0x3066
  423cfd:	or     cl,BYTE PTR [ebx+0x17]
  423d00:	inc    esp
  423d01:	jns    0x423d3e
  423d03:	jo     0x423d69
  423d05:	inc    edi
  423d06:	mov    ss,WORD PTR [ebx+0x5b]
  423d09:	dec    ebp
  423d0a:	sbb    al,0x5d
  423d0c:	fisub  WORD PTR [esi+ebx*1]
  423d0f:	jbe    0x423cd1
  423d11:	call   0x547c820
  423d16:	pop    esp
  423d17:	sahf   
  423d18:	jle    0x423cec
  423d1a:	mov    edi,0x8553
	...
  423d27:	add    BYTE PTR [eax],al
  423d29:	add    BYTE PTR [edx+edx*2+0x57],al
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0xcd50192],ah
  423d38:	fst    QWORD PTR [ebp+0x14]
  423d3b:	retf   
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	jnp    0x423d46
  423d40:	add    BYTE PTR [eax],al
  423d42:	retf   0x3014
  423d45:	(bad)  
  423d46:	into   
  423d47:	cwde   
  423d48:	js     0x423d89
  423d4a:	mov    ebx,0xf6b286ec
  423d4f:	push   esi
  423d50:	xchg   edx,eax
  423d51:	mov    eax,ds:0xf6f25d37
  423d56:	jbe    0x423dc5
  423d58:	xchg   ebp,eax
  423d59:	aam    0x8b
  423d5b:	test   DWORD PTR [ebx+edx*1],ebx
  423d5e:	addr16 out 0xfa,eax
  423d61:	rcr    BYTE PTR [edx-0x9daff4c],1
  423d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d68:	mov    ds:0xb0145268,eax
  423d6d:	mov    edx,0xee616621
  423d72:	mov    ah,0xcc
  423d74:	cmp    BYTE PTR [ebp+0x39],ah
  423d77:	or     al,0xf
  423d79:	lds    eax,FWORD PTR [ecx+0x1c]
  423d7c:	adc    BYTE PTR [edx],bl
  423d7e:	stc    
  423d7f:	cmp    esi,DWORD PTR [edx+edx*8-0x24f7a659]
  423d86:	shl    cl,cl
  423d88:	nop
  423d89:	lods   eax,DWORD PTR ds:[esi]
  423d8a:	ds test eax,0xa1f857d2
  423d90:	or     DWORD PTR [ebx-0x5e],esp
  423d93:	outs   dx,BYTE PTR ds:[esi]
  423d94:	cld    
  423d95:	pop    eax
  423d96:	fist   WORD PTR [ecx]
  423d98:	cli    
  423d99:	xor    BYTE PTR [ebp-0x4c],ah
  423d9c:	outs   dx,DWORD PTR ds:[esi]
  423d9d:	xchg   esi,eax
  423d9e:	push   cs
  423d9f:	(bad)  
  423da1:	cmp    cl,al
  423da3:	xchg   ebx,eax
  423da4:	pop    eax
  423da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da6:	jns    0x423d96
  423da8:	lods   al,BYTE PTR ds:[esi]
  423da9:	stos   DWORD PTR es:[edi],eax
  423daa:	add    BYTE PTR ds:0x9acce581,ah
  423db0:	mov    WORD PTR [ebx+0x27],?
  423db3:	in     al,0x21
  423db5:	add    bl,BYTE PTR [ecx+ebx*4]
  423db8:	sub    eax,ecx
  423dba:	jbe    0x423e32
  423dbc:	sub    esi,DWORD PTR [ecx-0xe]
  423dbf:	pop    edx
  423dc0:	adc    edi,DWORD PTR [ebp-0x32fbde7c]
  423dc6:	fnstenv [eax]
  423dc8:	adc    dh,bl
  423dca:	(bad)
  423dcd:	inc    edx
  423dce:	(bad)  [eax-0x4a]
  423dd1:	clc    
  423dd2:	cmp    al,0x9a
  423dd4:	nop
  423dd5:	pop    eax
  423dd6:	enter  0xe5c7,0xc3
  423dda:	test   al,0xa9
  423ddc:	cmp    eax,DWORD PTR [edx]
  423dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ddf:	shr    BYTE PTR [edx],cl
  423de1:	push   ebp
  423de2:	adc    DWORD PTR [eax+0x20],edi
  423de5:	imul   esi,edx,0x60
  423de8:	imul   ebp,DWORD PTR [eax-0x4f],0xffffffeb
  423dec:	push   0x16
  423dee:	pop    ebp
  423def:	sbb    eax,0xf05bd9a9
  423df4:	jns    0x423d98
  423df6:	xor    DWORD PTR [ebx-0x15557ffe],0x22
  423dfd:	ins    BYTE PTR es:[edi],dx
  423dfe:	add    eax,0xab357c49
  423e03:	sub    eax,0x5599064a
  423e08:	popf   
  423e09:	mov    eax,0x4091be2d
  423e0e:	mov    WORD PTR [ebx+esi*2-0x384ac4e4],fs
  423e15:	or     DWORD PTR [ebp+0x2d0f34db],edi
  423e1b:	cmp    al,0x7
  423e1d:	mov    DWORD PTR [ecx+0x2],edx
  423e20:	cmc    
  423e21:	add    eax,0xdb35448d
  423e26:	test   DWORD PTR ss:[ebp+0x63],0xe2d2fb70
  423e2e:	push   ss
  423e2f:	sub    BYTE PTR [edx],ch
  423e31:	(bad)
  423e34:	sbb    BYTE PTR [esi],bh
  423e36:	xor    edi,DWORD PTR [ecx]
  423e38:	xchg   al,bl
  423e3a:	push   edx
  423e3b:	arpl   WORD PTR [edi+0x1c5c8e3e],dx
  423e41:	jmp    ecx
  423e43:	sub    BYTE PTR [esi-0x68b75fcc],0x3a
  423e4a:	ret    0xdae8
  423e4d:	adc    BYTE PTR [ebx],ah
  423e4f:	loopne 0x423e13
  423e51:	sbb    ch,BYTE PTR [edi-0x4e]
  423e54:	pop    edi
  423e55:	call   0xa4be79e4
  423e5a:	div    DWORD PTR [ecx+0x74]
  423e5d:	or     DWORD PTR [ebx-0x42],edx
  423e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e61:	mov    eax,ds:0xb1107399
  423e66:	push   cs
  423e67:	call   FWORD PTR [esi-0x3c21ef2c]
  423e6d:	inc    ebp
  423e6e:	xchg   ebp,eax
  423e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e70:	fmul   DWORD PTR [ebx-0x21]
  423e73:	(bad)  
  423e74:	out    dx,al
  423e75:	jae    0x423ecd
  423e77:	loopne 0x423ec2
  423e79:	and    ah,BYTE PTR [eax+0x53]
  423e7c:	fbstp  TBYTE PTR [esi+0x13]
  423e7f:	(bad)  
  423e80:	fld    TBYTE PTR [eax-0x66]
  423e83:	sub    eax,0x2a0a6f37
  423e88:	imul   esp,DWORD PTR [edi-0x49],0x509da461
  423e8f:	scas   eax,DWORD PTR es:[edi]
  423e90:	dec    edx
  423e91:	pop    edx
  423e92:	iret   
  423e93:	test   DWORD PTR [ebx-0x5f],0xfba63f14
  423e9a:	call   0x8f719d15
  423e9f:	or     BYTE PTR [edi],cl
  423ea1:	ds mov edx,fs
  423ea4:	xor    esp,DWORD PTR [edi-0x80e726d]
  423eaa:	loop   0x423e9c
  423eac:	mov    ds:0x295239c4,al
  423eb1:	adc    eax,0xf37b6bba
  423eb6:	(bad)  
  423eb7:	xchg   edi,eax
  423eb8:	add    ebx,DWORD PTR [ebp+0x39e8f204]
  423ebe:	sti    
  423ebf:	shl    BYTE PTR [ecx-0x511932ae],cl
  423ec5:	mov    ds:0xc0fe92ad,al
  423eca:	daa    
  423ecb:	les    ebx,FWORD PTR [esi-0x55]
  423ece:	cs hlt 
  423ed0:	mov    edi,0xc076b873
  423ed5:	data16 adc BYTE PTR [ebx+0xb],ah
  423ed9:	or     eax,0x4c296fe5
  423ede:	add    edi,DWORD PTR [ecx]
  423ee0:	cdq    
  423ee1:	out    dx,eax
  423ee2:	xchg   ecx,eax
  423ee3:	cmp    al,0x76
  423ee5:	cdq    
  423ee6:	mov    esi,0xf125d9fb
  423eeb:	fmul   st,st(0)
  423eed:	dec    esi
  423eee:	cmp    DWORD PTR [edi+eiz*1-0x1685150a],ebx
  423ef5:	cmp    esp,edx
  423ef7:	push   es
  423ef8:	repnz stc 
  423efa:	ins    BYTE PTR es:[edi],dx
  423efb:	imul   ebx,DWORD PTR [edx-0xf],0x1a3fbe3d
  423f02:	mov    ch,0x3f
  423f04:	jmp    0x72fd:0xad22b1e5
  423f0b:	xor    BYTE PTR [edx-0x80],cl
  423f0e:	dec    ebx
  423f0f:	bound  edx,QWORD PTR [edi+eax*4-0x68aeba32]
  423f16:	mov    eax,0x291be3fc
  423f1b:	xchg   edi,eax
  423f1c:	jle    0x423f44
  423f1e:	sbb    BYTE PTR [edx-0x1d],0x62
  423f22:	push   edx
  423f23:	mov    esi,0x405810d
  423f28:	push   es
  423f29:	pop    edx
  423f2a:	fild   QWORD PTR [esi]
  423f2c:	dec    ebp
  423f2d:	xchg   ebx,eax
  423f2e:	lods   eax,DWORD PTR ds:[esi]
  423f2f:	popa   
  423f30:	les    eax,FWORD PTR [eax-0x4e]
  423f33:	data16 jecxz 0x423f9f
  423f36:	pushf  
  423f37:	xor    eax,0xe71d6e8b
  423f3c:	stos   DWORD PTR es:[edi],eax
  423f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f3e:	xchg   ebx,eax
  423f3f:	fidiv  DWORD PTR [eax+0x55]
  423f42:	xchg   ebp,eax
  423f43:	add    edi,edi
  423f45:	imul   bp,sp,0xffa6
  423f49:	jns    0x423fb6
  423f4b:	sub    esp,DWORD PTR [edx-0x59178204]
  423f51:	adc    eax,0x2d6ae3f2
  423f56:	sub    eax,edx
  423f58:	(bad)  
  423f5a:	jmp    0x4c5ac42
  423f5f:	ss push cs
  423f61:	lods   eax,DWORD PTR ds:[esi]
  423f62:	ins    BYTE PTR es:[edi],dx
  423f63:	adc    al,0xfe
  423f65:	and    DWORD PTR [ecx],esp
  423f67:	mov    esp,fs
  423f69:	pushf  
  423f6a:	adc    ebp,DWORD PTR [ecx]
  423f6c:	popa   
  423f6d:	ins    BYTE PTR es:[edi],dx
  423f6e:	loop   0x423fe4
  423f70:	outs   dx,DWORD PTR ds:[esi]
  423f71:	xlat   BYTE PTR ds:[ebx]
  423f72:	and    al,0x90
  423f74:	inc    eax
  423f75:	xor    eax,0x92b60d1f
  423f7a:	into   
  423f7b:	jecxz  0x423fb6
  423f7d:	push   cs
  423f7e:	pop    ds
  423f7f:	xchg   ebp,ebx
  423f81:	inc    esi
  423f82:	fist   DWORD PTR [ebx]
  423f84:	push   esi
  423f85:	ret    
  423f86:	pop    ebx
  423f87:	rol    al,cl
  423f89:	pop    ecx
  423f8a:	in     eax,0x70
  423f8c:	vpsadbw ymm3,ymm0,YMMWORD PTR [esi]
  423f90:	or     al,ah
  423f92:	push   es
  423f93:	lahf   
  423f94:	imul   esp,DWORD PTR [edx+0x3410e80b],0x6f
  423f9b:	icebp  
  423f9c:	mov    ss,ebx
  423f9e:	jmp    0x30a19159
  423fa3:	mov    bl,0x8e
  423fa5:	mov    al,0xb5
  423fa7:	fadd   QWORD PTR [edi+0x1e]
  423faa:	popf   
  423fab:	add    BYTE PTR ds:0x2988d27e,ch
  423fb1:	les    eax,FWORD PTR [esi+0x38]
  423fb4:	int    0xc1
  423fb6:	jnp    0x423fd4
  423fb8:	inc    esp
  423fb9:	pop    edi
  423fba:	mov    bh,al
  423fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fbd:	ds call 0x109b:0x2b28395
  423fc5:	mov    DWORD PTR [ebx+eiz*1-0x40],esp
  423fc9:	or     ah,BYTE PTR [eax+0x3f]
  423fcc:	mov    ecx,0xe5c1cc6
  423fd1:	sbb    dl,BYTE PTR [esi+0x30]
  423fd4:	jl     0x423ffd
  423fd6:	in     al,0xe6
  423fd8:	sbb    DWORD PTR [edi],0x5400c531
  423fde:	sub    al,0x18
  423fe0:	adc    edi,DWORD PTR [edi-0xa]
  423fe3:	inc    ebp
  423fe4:	mov    ecx,DWORD PTR [edi+eax*8-0x7be4b732]
  423feb:	faddp  st(1),st
  423fed:	push   ecx
  423fee:	push   cs
  423fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ff0:	in     eax,dx
  423ff1:	dec    ebx
  423ff2:	out    dx,eax
  423ff3:	in     eax,dx
  423ff4:	mov    gs,ebp
  423ff6:	call   0x64851b5c
  423ffb:	sub    ebx,DWORD PTR [eax-0x53]
  423ffe:	push   ebp
  423fff:	and    al,0xba
  424001:	adc    DWORD PTR [edi-0x71],0xb80da01f
  424008:	mov    dh,0xd0
  42400a:	mov    esp,0x9494e03d
  42400f:	dec    edi
  424010:	ss mov ah,0x3a
  424013:	and    al,0x78
  424015:	sbb    al,0x16
  424017:	and    edi,DWORD PTR ds:0x42d90c1
  42401d:	aas    
  42401e:	jle    0x424018
  424020:	fsubr  st(5),st
  424022:	mov    al,BYTE PTR [eax-0x18]
  424025:	stos   BYTE PTR es:[edi],al
  424026:	fild   QWORD PTR [ebx]
  424028:	dec    ebx
  424029:	jnp    0x424071
  42402b:	and    DWORD PTR [ebx-0xfac6961],ecx
  424031:	jae    0x42401a
  424033:	mov    dh,dl
  424035:	fisttp QWORD PTR [ebp+0x55e3b266]
  42403b:	outs   dx,BYTE PTR ds:[esi]
  42403c:	xor    edx,esp
  42403e:	hlt    
  42403f:	retf   0x15e2
  424042:	out    0xea,al
  424044:	sbb    dl,BYTE PTR [edi]
  424046:	push   esi
  424047:	push   ds
  424048:	and    ebx,DWORD PTR [ecx+0x476e916d]
  42404e:	sahf   
  42404f:	pusha  
  424050:	in     eax,dx
  424051:	stos   DWORD PTR es:[edi],eax
  424052:	push   ds
  424053:	loopne 0x423ff8
  424055:	or     al,dl
  424057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424058:	jle    0x42400c
  42405a:	loop   0x424099
  42405c:	inc    esp
  42405d:	out    dx,al
  42405e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42405f:	stos   BYTE PTR es:[edi],al
  424060:	inc    ecx
  424061:	sub    esp,ecx
  424063:	cmp    ah,dl
  424065:	outs   dx,DWORD PTR ds:[esi]
  424066:	sbb    al,0x25
  424068:	xchg   edi,eax
  424069:	pop    edi
  42406a:	js     0x42403a
  42406c:	test   BYTE PTR [edx],al
  42406e:	sbb    al,0xfc
  424070:	push   ebx
  424071:	les    ebp,FWORD PTR [ebx]
  424073:	sub    cl,BYTE PTR [ebx-0x19]
  424076:	popa   
  424077:	jae    0x424051
  424079:	cmp    esp,DWORD PTR [edx-0x28]
  42407c:	jmp    0x13db:0x9a99144c
  424083:	loop   0x424095
  424085:	sti    
  424086:	inc    edi
  424087:	and    dh,ch
  424089:	rcl    eax,cl
  42408b:	idiv   dh
  42408d:	pusha  
  42408e:	test   eax,0x7ee21f88
  424093:	sub    dl,bl
  424095:	pop    edx
  424096:	aas    
  424097:	je     0x424051
  424099:	add    ebp,DWORD PTR [edi-0x3f62ab31]
  42409f:	(bad)  
  4240a0:	mov    ch,0xbd
  4240a2:	call   FWORD PTR [edx-0x34]
  4240a5:	jmp    0x4240ff
  4240a7:	ret    0x50d4
  4240aa:	xchg   ebx,eax
  4240ab:	xchg   edx,eax
  4240ac:	pop    esp
  4240ad:	dec    ebx
  4240ae:	dec    esp
  4240af:	ficom  WORD PTR [ecx-0x1b73617e]
  4240b5:	adc    DWORD PTR [ecx],0xffffff9b
  4240b8:	(bad)  
  4240b9:	in     eax,0xae
  4240bb:	hlt    
  4240bc:	lahf   
  4240bd:	sti    
  4240be:	xor    esp,ebp
  4240c0:	jns    0x424093
  4240c2:	adc    al,BYTE PTR [ebx+ebp*2-0x348711c8]
  4240c9:	dec    ebp
  4240ca:	jne    0x424118
  4240cc:	js     0x4240f7
  4240ce:	sti    
  4240cf:	mov    edx,edx
  4240d1:	stos   BYTE PTR es:[edi],al
  4240d2:	xchg   DWORD PTR [edx],esi
  4240d4:	pop    eax
  4240d5:	aaa    
  4240d6:	out    0x83,eax
  4240d8:	out    0xec,eax
  4240da:	add    ebx,DWORD PTR [ecx]
  4240dc:	aad    0x31
  4240de:	test   BYTE PTR [edi+0x7b2ec48e],0x39
  4240e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e6:	icebp  
  4240e7:	mov    dh,0x2c
  4240e9:	std    
  4240ea:	push   ss
  4240eb:	push   esi
  4240ec:	and    DWORD PTR [esi-0x72b6d6c8],ecx
  4240f2:	andnps xmm7,XMMWORD PTR ds:[edx+edi*8]
  4240f7:	jbe    0x4240a2
  4240f9:	sub    al,0x8a
  4240fb:	fiadd  DWORD PTR [edx+edi*4-0x18]
  4240ff:	mov    eax,0x8057483a
  424104:	adc    al,0x6
  424106:	scas   eax,DWORD PTR es:[edi]
  424107:	push   esi
  424108:	mov    BYTE PTR [esi-0x2e],cl
  42410b:	lods   al,BYTE PTR ds:[esi]
  42410c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42410d:	cmp    al,0x89
  42410f:	mov    al,ds:0x52970623
  424114:	daa    
  424115:	push   es
  424116:	aad    0xde
  424118:	daa    
  424119:	pop    ebp
  42411a:	push   ebp
  42411b:	arpl   bp,di
  42411d:	daa    
  42411e:	lahf   
  42411f:	icebp  
  424120:	dec    esi
  424121:	adc    al,0xb2
  424123:	(bad)  
  424124:	sub    BYTE PTR [eax+0x61],dh
  424127:	xor    eax,0xa7ef8ef9
  42412c:	push   ss
  42412d:	push   ebx
  42412e:	loopne 0x4240dc
  424130:	adc    edi,DWORD PTR [ebx+0x457d3806]
  424136:	push   0x2c
  424138:	xchg   ebp,eax
  424139:	test   BYTE PTR [eax+0x360e621b],bl
  42413f:	push   edi
  424140:	dec    esi
  424141:	xchg   ecx,eax
  424142:	mov    eax,0x3c134ce
  424147:	jns    0x4240f0
  424149:	pop    edi
  42414a:	pop    ebx
  42414b:	xor    DWORD PTR [eax-0x5c61c1d6],esp
  424151:	cld    
  424152:	cmp    eax,0x71ac8c79
  424157:	mov    al,0x8a
  424159:	lock cs fwait
  42415c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415d:	retf   
  42415e:	sbb    edx,DWORD PTR [esi+ecx*2-0x34]
  424162:	data16 xor al,0x7f
  424165:	xor    BYTE PTR [edi],ah
  424167:	test   al,0xfe
  424169:	dec    eax
  42416a:	dec    eax
  42416b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42416c:	mov    dl,0xf3
  42416e:	rcl    DWORD PTR [edx+0x10500225],0x96
  424175:	cmp    BYTE PTR [esi+0x7f4cbbd0],al
  42417b:	test   eax,0x1ceb9882
  424180:	mov    al,0xe2
  424182:	ds cli 
  424184:	sub    edx,DWORD PTR [edx+ebp*2+0x79]
  424188:	push   edx
  424189:	daa    
  42418a:	int3   
  42418b:	mov    dl,0x7e
  42418d:	fs pop ds
  42418f:	mov    ebx,0x3323865
  424194:	add    bh,BYTE PTR fs:[eax+0x59]
  424198:	(bad)  
  424199:	xchg   ebp,eax
  42419a:	mov    ds:0xad12a8bd,eax
  42419f:	mov    ds:0x4bbdbead,eax
  4241a4:	(bad)  
  4241a5:	out    dx,al
  4241a6:	je     0x424128
  4241a8:	scas   al,BYTE PTR es:[edi]
  4241a9:	sub    al,BYTE PTR [edi]
  4241ab:	ja     0x4241c6
  4241ad:	clc    
  4241ae:	sub    bh,BYTE PTR [esi+0x217257d5]
  4241b4:	idiv   bh
  4241b6:	inc    ebp
  4241b7:	jne    0x4241a9
  4241b9:	xchg   ecx,eax
  4241ba:	bsf    edx,DWORD PTR [ecx-0x7d]
  4241be:	sbb    ch,0x8c
  4241c1:	push   ebx
  4241c2:	jnp    0x42422a
  4241c4:	xchg   edx,eax
  4241c5:	adc    ch,bh
  4241c7:	out    dx,eax
  4241c8:	dec    ebx
  4241c9:	inc    eax
  4241ca:	add    esp,DWORD PTR [ebx-0x43]
  4241cd:	mov    esi,0x5296bd8b
  4241d2:	pop    ss
  4241d3:	shr    BYTE PTR ds:0xe460fb5d,1
  4241d9:	pop    ecx
  4241da:	xor    al,0x91
  4241dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241dd:	lea    esi,[edx]
  4241df:	mov    bh,0x5b
  4241e1:	mov    ch,0xf2
  4241e3:	jne    0x4241bd
  4241e5:	inc    esi
  4241e6:	nop
  4241e7:	jmp    0x8058:0x6761ec5c
  4241ee:	popf   
  4241ef:	shr    BYTE PTR [edi+0x2439f0eb],cl
  4241f5:	xor    BYTE PTR [edx+0x5d],al
  4241f8:	loopne 0x4241aa
  4241fa:	(bad)  
  4241fb:	or     BYTE PTR [eax-0x52],bh
  4241fe:	aad    0xbf
  424200:	xchg   BYTE PTR [ebp+0x44],dh
  424203:	sub    ah,BYTE PTR [edx]
  424205:	inc    eax
  424206:	fdiv   st,st(4)
  424208:	mov    WORD PTR [edi],cs
  42420a:	adc    al,0x4e
  42420c:	dec    ecx
  42420d:	dec    eax
  42420e:	cs dec ebx
  424210:	aas    
  424211:	out    0xb5,eax
  424213:	hlt    
  424214:	push   ds
  424215:	sti    
  424216:	dec    edi
  424217:	dec    ebx
  424218:	fmul   DWORD PTR [esi-0x16ed4de9]
  42421e:	mov    bl,0x65
  424220:	(bad)  
  424221:	push   edi
  424222:	fnstsw WORD PTR [ebp+0x5d0b312d]
  424228:	les    ecx,FWORD PTR [esp+edi*1+0x124d443a]
  42422f:	scas   al,BYTE PTR es:[edi]
  424230:	mov    ebp,0xe882069a
  424235:	test   DWORD PTR [ebx+edi*2-0x34],ebx
  424239:	pop    es
  42423a:	jg     0x424243
  42423c:	popf   
  42423d:	xchg   ebx,eax
  42423e:	mov    eax,0x59aa1579
  424243:	nop
  424244:	mov    WORD PTR [edi],ss
  424246:	add    dl,BYTE PTR [esi]
  424248:	stc    
  424249:	cmp    ch,BYTE PTR [ebx]
  42424b:	inc    esp
  42424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42424d:	or     BYTE PTR [esi],al
  42424f:	icebp  
  424250:	sub    DWORD PTR [edx],esi
  424252:	out    0x74,al
  424254:	cli    
  424255:	xchg   ebx,eax
  424256:	stos   DWORD PTR es:[edi],eax
  424257:	je     0x4242ce
  424259:	jns    0x42421c
  42425b:	es int 0x13
  42425e:	sub    bh,BYTE PTR [edi+esi*4-0x80]
  424262:	mov    ?,WORD PTR [esi]
  424264:	xor    BYTE PTR [edi+0x77],0x2a
  424268:	int    0xd2
  42426a:	pushf  
  42426b:	sar    esi,cl
  42426d:	leave  
  42426e:	icebp  
  42426f:	loope  0x424218
  424271:	das    
  424272:	stos   BYTE PTR es:[edi],al
  424273:	in     eax,0xd4
  424275:	mov    al,0xa6
  424277:	shl    DWORD PTR [ecx-0x28c647f8],cl
  42427d:	leave  
  42427e:	outs   dx,BYTE PTR ds:[esi]
  42427f:	push   ebx
  424280:	pop    edx
  424281:	mov    ecx,0xbc4bd19c
  424286:	js     0x4242e4
  424288:	mov    esp,0x5f708158
  42428d:	mov    ebp,0x8f710875
  424292:	dec    esp
  424293:	add    ch,0xbf
  424296:	adc    BYTE PTR [ecx-0x34],dh
  424299:	fbstp  TBYTE PTR [eax-0x164e5786]
  42429f:	shl    DWORD PTR [ecx+edx*1-0x39],1
  4242a3:	nop
  4242a4:	in     eax,dx
  4242a5:	(bad)  
  4242a7:	test   ah,0xdd
  4242aa:	push   ss
  4242ab:	pop    ss
  4242ac:	jmp    0x5c65d39e
  4242b1:	pop    eax
  4242b2:	mov    ebx,ecx
  4242b4:	sub    bl,dh
  4242b6:	aaa    
  4242b7:	push   ecx
  4242b8:	sub    eax,0x3b0431bb
  4242bd:	sbb    al,bl
  4242bf:	xchg   esi,eax
  4242c0:	idiv   esp
  4242c2:	fistp  QWORD PTR [edx-0x61]
  4242c5:	shr    DWORD PTR [edi],cl
  4242c7:	or     BYTE PTR [ecx+0x38ab0e4f],cl
  4242cd:	dec    edx
  4242ce:	pushf  
  4242cf:	fbld   TBYTE PTR [ebp+0x7f]
  4242d2:	cmp    al,0x85
  4242d4:	push   0x1be21d54
  4242d9:	mov    esi,DWORD PTR [ecx-0x415c008c]
  4242df:	xchg   DWORD PTR [esi+0x5cf0e6b4],eax
  4242e5:	outs   dx,BYTE PTR ds:[esi]
  4242e6:	inc    eax
  4242e7:	sbb    BYTE PTR [edx+0x488ef004],bh
  4242ed:	sub    DWORD PTR [esi+0x7055df5b],ebx
  4242f3:	popa   
  4242f4:	aad    0x54
  4242f6:	add    eax,0x755c16fc
  4242fb:	bound  ebx,QWORD PTR [edx+ebx*1-0x68035474]
  424302:	aaa    
  424303:	pop    esi
  424304:	shr    BYTE PTR [ebx-0x25],cl
  424307:	jnp    0x424323
  424309:	outs   dx,BYTE PTR ds:[esi]
  42430a:	and    esp,edx
  42430c:	or     DWORD PTR [esi],0xdb9d7e32
  424312:	(bad)  
  424313:	mov    esi,0x5d339046
  424318:	fldcw  WORD PTR [edi]
  42431a:	mov    bh,0xd6
  42431c:	pop    esp
  42431d:	mul    ecx
  42431f:	xor    BYTE PTR [ebp-0x3a52a762],al
  424325:	outs   dx,BYTE PTR ds:[esi]
  424326:	adc    DWORD PTR [esi+0x31],ebp
  424329:	nop
  42432a:	mov    ds:0xc069eb7,eax
  42432f:	(bad)  
  424330:	ror    bl,cl
  424332:	(bad)  
  424333:	mov    edx,0x18177996
  424338:	out    0x91,eax
  42433a:	rcl    DWORD PTR [eax-0x3e],1
  42433d:	loop   0x42431c
  42433f:	push   ecx
  424340:	in     eax,dx
  424341:	mov    es,esp
  424343:	jmp    0x424375
  424345:	mov    BYTE PTR ds:0xc05ff4f0,dl
  42434b:	and    edi,eax
  42434d:	add    eax,0xcba3fa48
  424352:	mov    bl,0x4b
  424354:	mov    ch,0xd9
  424356:	sbb    BYTE PTR [ebx-0x75e5de9c],al
  42435c:	jl     0x42430f
  42435e:	test   al,0xb7
  424360:	sub    al,0x6a
  424362:	fist   DWORD PTR [ecx]
  424364:	add    al,BYTE PTR [edi+0x65]
  424367:	cmp    esp,edi
  424369:	repnz (bad) 
  42436c:	outs   dx,BYTE PTR ds:[esi]
  42436d:	pop    ebp
  42436e:	push   cs
  42436f:	add    esp,DWORD PTR [edi]
  424371:	mov    edx,0x4945cd46
  424377:	push   edi
  424378:	iret   
  424379:	or     bl,BYTE PTR [ecx-0x45]
  42437c:	push   eax
  42437d:	leave  
  42437e:	loop   0x424384
  424380:	in     al,0x8e
  424382:	push   0x1b66d615
  424387:	leave  
  424388:	xor    eax,0xb49ec4f9
  42438d:	add    ah,BYTE PTR [esi-0x2]
  424390:	outs   dx,BYTE PTR ds:[esi]
  424391:	(bad)  
  424392:	mov    edi,0x62ab539a
  424397:	mov    eax,ds:0xdcb57b03
  42439c:	pop    esp
  42439d:	div    DWORD PTR [edx]
  42439f:	jmp    0xf30913f4
  4243a4:	in     eax,0x37
  4243a6:	jbe    0x4243ef
  4243a8:	outs   dx,DWORD PTR ds:[esi]
  4243a9:	(bad)  
  4243aa:	mov    esi,0x1d038d5
  4243af:	jne    0x4243ea
  4243b1:	sbb    dl,BYTE PTR [ecx+ecx*1-0x24]
  4243b5:	xor    bh,BYTE PTR [ecx-0x67]
  4243b8:	je     0x42435c
  4243ba:	sar    ebp,cl
  4243bc:	aas    
	...
  4243c9:	add    BYTE PTR [edx+0x44],bl
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x4243d3
  4243d7:	das    
  4243d8:	mov    ?,WORD PTR [eax]
  4243da:	(bad)  
  4243db:	rol    DWORD PTR [ecx],1
  4243dd:	add    BYTE PTR [ebx+0x6],bh
  4243e0:	add    BYTE PTR [eax],al
  4243e2:	jg     0x42441b
  4243e4:	xchg   BYTE PTR [eax+0x68],dh
  4243e7:	push   es
  4243e8:	mov    eax,ds:0xfbb0acc3
  4243ed:	jmp    0x7ef381af
  4243f2:	or     bl,BYTE PTR [edi]
  4243f4:	fucomi st,st(5)
  4243f6:	mov    bh,0x85
  4243f8:	and    al,0xda
  4243fa:	cmp    esp,edi
  4243fc:	stos   BYTE PTR es:[edi],al
  4243fd:	pusha  
  4243fe:	xor    al,0x87
  424400:	(bad)  
  424401:	pusha  
  424402:	pop    esp
  424403:	stc    
  424404:	dec    ebx
  424405:	cmp    BYTE PTR [eax-0x5f6ff0f7],dh
  42440b:	clc    
  42440c:	mov    dl,0xab
  42440e:	jnp    0x4243ca
  424410:	aas    
  424411:	sub    eax,0xee845195
  424416:	aas    
  424417:	outs   dx,BYTE PTR ds:[esi]
  424418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424419:	jl     0x424460
  42441b:	mov    esp,0x24438ed9
  424420:	xchg   edx,eax
  424421:	rol    BYTE PTR [edx],0xb9
  424424:	or     edi,edi
  424426:	loopne 0x4243de
  424428:	jb     0x424487
  42442a:	cmp    bl,dl
  42442c:	jae    0x4243cb
  42442e:	push   0x9a10b987
  424433:	aaa    
  424434:	xchg   BYTE PTR [edx-0x36b1174c],cl
  42443a:	mov    al,0x6a
  42443c:	loop   0x4243ca
  42443e:	mov    al,ds:0xe27c404a
  424443:	push   cs
  424444:	and    al,al
  424446:	add    eax,0xb91d4e5e
  42444b:	jbe    0x42440d
  42444d:	(bad)
  424452:	push   ecx
  424453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424454:	add    bh,BYTE PTR [esp+edi*1]
  424457:	ds jne 0x424429
  42445a:	jmp    0x424461
  42445c:	mov    ecx,0xc776f38a
  424461:	test   al,0x5f
  424463:	(bad)  
  424464:	ja     0x424406
  424466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424467:	mov    bl,0x88
  424469:	add    DWORD PTR ds:0x5e0fd721,edx
  42446f:	arpl   bp,dx
  424471:	mov    ah,0x75
  424473:	shl    BYTE PTR [ebx+0x2a083061],1
  424479:	dec    ebp
  42447a:	xor    esi,ecx
  42447c:	fdivr  st,st(2)
  42447e:	std    
  42447f:	(bad)  
  424481:	sbb    esi,DWORD PTR ds:0xa7c488e8
  424487:	push   ds
  424488:	dec    ecx
  424489:	and    eax,0xffffffb7
  42448c:	outs   dx,BYTE PTR ds:[esi]
  42448d:	mov    ah,0xfe
  42448f:	mov    ds:0xa2df3404,eax
  424494:	jne    0x42445c
  424496:	int    0xd
  424498:	lods   al,BYTE PTR gs:[esi]
  42449a:	(bad)
  42449e:	cmp    DWORD PTR [esi-0x62c78308],esp
  4244a4:	xor    al,0xb9
  4244a6:	push   edi
  4244a7:	xchg   edi,eax
  4244a8:	or     ecx,DWORD PTR [edx+0x50890efd]
  4244ae:	loopne 0x42452f
  4244b0:	xor    BYTE PTR [ebx],bh
  4244b2:	xchg   ecx,eax
  4244b3:	cmp    edi,eax
  4244b5:	jle    0x4244a0
  4244b7:	aas    
  4244b8:	sahf   
  4244b9:	push   ebx
  4244ba:	adc    BYTE PTR [ebp+0x24fd01fe],bl
  4244c0:	mov    WORD PTR [eax],?
  4244c2:	pop    eax
  4244c3:	inc    ebx
  4244c4:	push   ss
  4244c5:	imul   ecx,DWORD PTR [edx-0x14db4d5c],0x10
  4244cc:	std    
  4244cd:	jnp    0x424465
  4244cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d0:	mov    ch,0xfd
  4244d2:	dec    edi
  4244d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244d4:	(bad)  
  4244d5:	jno    0x4244c5
  4244d7:	sbb    BYTE PTR [ebp+0x6e],bl
  4244da:	sti    
  4244db:	stos   DWORD PTR es:[edi],eax
  4244dc:	int3   
  4244dd:	fdivrp st(5),st
  4244df:	ins    DWORD PTR es:[edi],dx
  4244e0:	scas   eax,DWORD PTR es:[edi]
  4244e1:	cmp    edi,0xe9056c5a
  4244e7:	call   0x1daf:0x18d8f95f
  4244ee:	pop    ds
  4244ef:	sti    
  4244f0:	ins    BYTE PTR es:[edi],dx
  4244f1:	rcr    edx,0x6a
  4244f4:	lds    ebp,FWORD PTR [edx]
  4244f6:	jnp    0x4244f2
  4244f8:	aaa    
  4244f9:	test   eax,0x1c0d9e0
  4244fe:	out    dx,eax
  4244ff:	xchg   BYTE PTR [esi+0x46393a2b],ch
  424505:	pop    ds
  424506:	or     al,0x5a
  424508:	aas    
  424509:	sbb    BYTE PTR [ebx-0x8ca22a1],cl
  42450f:	fwait
  424510:	aaa    
  424511:	ja     0x424561
  424513:	mov    ebx,0xd4d5ce06
  424518:	idiv   DWORD PTR [edi-0x4b]
  42451b:	inc    ebx
  42451c:	cld    
  42451d:	fistp  DWORD PTR [edx+edi*8]
  424520:	sub    DWORD PTR [esi-0x8c2032f],edx
  424526:	adc    esi,eax
  424528:	jmp    0x4245a0
  42452a:	jae    0x424598
  42452c:	xor    edi,DWORD PTR [edx-0x28]
  42452f:	sbb    eax,0x41a228f0
  424534:	add    al,0xbf
  424536:	sar    BYTE PTR [ebp+0x46],cl
  424539:	cmp    al,0x80
  42453b:	sar    DWORD PTR [ebx+esi*8+0x68],0x61
  424540:	in     eax,0x36
  424542:	fcomp  st(2)
  424544:	sti    
  424545:	inc    ebx
  424546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424547:	btc    DWORD PTR [esi],edi
  42454a:	lea    esp,[ecx]
  42454c:	(bad)  
  42454d:	xlat   BYTE PTR ds:[ebx]
  42454e:	sub    BYTE PTR [ecx],ah
  424550:	call   0x230:0x39fee371
  424557:	or     eax,0x5c9ca96e
  42455c:	dec    bl
  42455e:	add    dl,BYTE PTR [edx-0x3fa7f2b7]
  424564:	inc    ecx
  424565:	sub    edx,DWORD PTR [ebp+0x7d]
  424568:	sub    edx,DWORD PTR [edx]
  42456a:	jno    0x424599
  42456c:	shl    DWORD PTR [ebp-0x1b],1
  42456f:	sub    cl,BYTE PTR ds:0x47249c51
  424575:	adc    DWORD PTR [ecx-0x79],ecx
  424578:	mov    bl,0x81
  42457a:	xchg   BYTE PTR [esi],dh
  42457c:	mov    ch,0x49
  42457e:	(bad)  [eax]
  424580:	mov    ch,0xcf
  424582:	and    DWORD PTR [esi+0x5bf452d5],0x63
  424589:	(bad)  
  42458b:	outs   dx,DWORD PTR ds:[esi]
  42458c:	js     0x42451d
  42458e:	inc    edx
  42458f:	test   eax,0x119cf234
  424594:	mov    eax,0xf34df931
  424599:	outs   dx,DWORD PTR ds:[esi]
  42459a:	js     0x42452e
  42459c:	push   ebp
  42459d:	aas    
  42459e:	in     eax,0xf
  4245a0:	fcom   DWORD PTR [esi]
  4245a2:	adc    BYTE PTR [edx-0x5fae3bf0],bl
  4245a8:	mov    esi,0x192d8a12
  4245ad:	add    cl,BYTE PTR [edi+eiz*8]
  4245b0:	icebp  
  4245b1:	js     0x42453e
  4245b3:	xchg   edx,eax
  4245b4:	ins    DWORD PTR es:[edi],dx
  4245b5:	or     ah,BYTE PTR [edi]
  4245b7:	mov    esi,0x1a0641e6
  4245bc:	prefetch BYTE PTR [edx+0x25c50fba]
  4245c3:	mov    edi,0xb661e116
  4245c9:	fsub   DWORD PTR [edi]
  4245cb:	(bad)  
  4245cc:	adc    BYTE PTR [ebp-0x1bc1e5a1],bh
  4245d2:	ds push esi
  4245d4:	jle    0x4245c4
  4245d6:	xchg   ecx,eax
  4245d7:	outs   dx,DWORD PTR ds:[esi]
  4245d8:	ins    BYTE PTR es:[edi],dx
  4245d9:	pop    eax
  4245da:	mov    ebx,0x31aee063
  4245df:	jmp    0x4320c65e
  4245e4:	or     al,0xbb
  4245e6:	rcr    al,1
  4245e8:	inc    ecx
  4245e9:	nop
  4245ea:	mov    dl,0x13
  4245ec:	test   al,0x47
  4245ee:	xchg   esi,eax
  4245ef:	leave  
  4245f0:	add    al,0xbf
  4245f2:	xchg   ebp,eax
  4245f3:	mov    esi,0xc35c3b4c
  4245f8:	stos   DWORD PTR es:[edi],eax
  4245f9:	cmp    eax,0x8cc10f75
  4245fe:	pop    esp
  4245ff:	add    esi,DWORD PTR [esi]
  424601:	lods   eax,DWORD PTR ds:[esi]
  424602:	and    bl,BYTE PTR [esi-0x2b]
  424605:	daa    
  424606:	dec    edi
  424607:	jmp    0x9481d71c
  42460c:	repnz imul esi,DWORD PTR [esp+esi*4-0x5baf66f8],0xffffff8a
  424615:	mov    BYTE PTR [ebx-0x5bd26c7],bh
  42461b:	cld    
  42461c:	or     bl,BYTE PTR [edx]
  42461e:	cwde   
  42461f:	pop    eax
  424620:	sbb    al,dh
  424622:	ficom  WORD PTR [ebp+0x1a]
  424625:	adc    DWORD PTR [esi],edi
  424627:	dec    ebx
  424628:	mov    DWORD PTR [ebp-0x15],0x71cc8f9a
  42462f:	pop    ss
  424630:	adc    al,0x4c
  424632:	(bad)  
  424633:	pop    edx
  424634:	xchg   edi,eax
  424635:	aad    0x9a
  424637:	in     eax,dx
  424638:	pop    ecx
  424639:	ins    BYTE PTR es:[edi],dx
  42463a:	ss scas al,BYTE PTR es:[edi]
  42463c:	cmp    al,0x9b
  42463f:	mov    bl,0x39
  424641:	inc    edi
  424642:	adc    BYTE PTR [eax+0x9],bl
  424645:	inc    eax
  424646:	cmc    
  424647:	adc    al,0x68
  424649:	repnz loope 0x424655
  42464c:	ja     0x4246a8
  42464e:	jnp    0x424674
  424650:	das    
  424651:	out    dx,al
  424652:	mov    esi,0xcb4f17da
  424657:	pop    ecx
  424658:	out    0x67,al
  42465a:	repnz mov eax,0x193d206a
  424660:	test   ecx,ecx
  424662:	mov    esp,DWORD PTR [esp+edi*4+0xbe75262]
  424669:	xchg   ebx,eax
  42466a:	sbb    DWORD PTR [esi],0xffffffba
  42466d:	jnp    0x4246cc
  42466f:	inc    esi
  424670:	lods   al,BYTE PTR ds:[esi]
  424671:	jbe    0x424672
  424673:	sub    BYTE PTR fs:[eax],bh
  424676:	sti    
  424677:	push   edx
  424678:	xchg   DWORD PTR [ebx],edi
  42467a:	pop    ebp
  42467b:	mov    edi,0x723b5b3b
  424680:	fnsave ds:0x8b8c5859
  424686:	sub    ecx,DWORD PTR ds:0x3f19cf23
  42468c:	xor    cl,BYTE PTR [ebp+0x12]
  42468f:	hlt    
  424690:	jae    0x424664
  424692:	jmp    0x7de0:0x62b41bd2
  424699:	or     al,BYTE PTR [eax]
  42469b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42469c:	jmp    0x424678
  42469e:	mov    edx,0x21060566
  4246a3:	or     BYTE PTR [eax+0x50e146a],ch
  4246a9:	xor    eax,DWORD PTR [edi-0xe]
  4246ac:	cmp    al,0x2b
  4246ae:	or     ch,BYTE PTR [ecx+ebx*1]
  4246b1:	jg     0x424691
  4246b3:	cs pushf 
  4246b5:	jl     0x4246d7
  4246b7:	inc    esp
  4246b8:	nop
  4246b9:	je     0x4246c6
  4246bb:	aam    0x3a
  4246bd:	or     al,0xec
  4246bf:	in     eax,dx
  4246c0:	mov    ds:0xa3768c60,al
  4246c5:	cmp    BYTE PTR ds:0xec3f7ec6,cl
  4246cb:	mov    dh,0x41
  4246cd:	(bad)  
  4246ce:	in     eax,dx
  4246cf:	jae    0x424655
  4246d1:	mov    ebx,0xb4db5ef8
  4246d6:	ins    DWORD PTR es:[edi],dx
  4246d7:	aad    0xe1
  4246d9:	pop    edi
  4246da:	inc    edi
  4246db:	mov    ds:0x374d12cc,al
  4246e0:	adc    DWORD PTR [ebx-0x58],edx
  4246e3:	pop    esp
  4246e4:	push   ds
  4246e5:	push   ss
  4246e6:	jle    0x4246dc
  4246e8:	repnz loop 0x4246c0
  4246eb:	push   0x26
  4246ed:	dec    esi
  4246ee:	mov    bl,0x53
  4246f0:	xor    esi,edi
  4246f2:	aad    0xa3
  4246f4:	jg     0x4246a0
  4246f6:	or     esp,DWORD PTR [ecx]
  4246f8:	cmp    DWORD PTR [edx],0xf
  4246fb:	sub    eax,0xf67106c1
  424700:	sahf   
  424701:	add    ebx,edi
  424703:	std    
  424704:	retf   0x3dc0
  424707:	add    DWORD PTR [esi+0x40],0xc94153e5
  42470e:	xlat   BYTE PTR ds:[ebx]
  42470f:	mov    dh,0xff
  424711:	jecxz  0x42476b
  424713:	jae    0x424714
  424715:	inc    ebp
  424716:	inc    edi
  424717:	popw   ss
  424719:	in     eax,0x24
  42471b:	test   al,0x1
  42471d:	repz (bad) 
  42471f:	xor    al,0x91
  424721:	sbb    eax,0xaf3bce4e
  424726:	test   eax,0x1df712c8
  42472b:	dec    edi
  42472c:	shr    BYTE PTR [ebp-0x1a],1
  42472f:	out    0xf5,al
  424731:	mov    esi,0x14d7de75
  424736:	adc    DWORD PTR [edi+0x3f139dc7],ebp
  42473c:	xchg   edx,eax
  42473d:	sbb    eax,0xc8ac35ed
  424742:	mov    eax,ds:0xac66adb8
  424747:	loop   0x42477f
  424749:	sbb    al,0x3a
  42474b:	mov    bh,0xb1
  42474d:	ror    bl,1
  42474f:	push   ecx
  424750:	lods   al,BYTE PTR ds:[esi]
  424751:	cs jecxz 0x42472a
  424754:	daa    
  424755:	mov    al,0xfd
  424757:	pop    esi
  424758:	dec    edi
  424759:	dec    ecx
  42475a:	xchg   esi,eax
  42475b:	sub    DWORD PTR [ebp-0x64309edf],0x2819103e
  424765:	cmp    BYTE PTR [ebp+0x233564e7],dl
  42476b:	jmp    0x2f7:0x501286ba
  424772:	out    0xeb,eax
  424774:	inc    ebp
  424775:	mov    ecx,gs
  424777:	int    0x3d
  424779:	fs jmp 0x8d6a:0x1306e6d6
  424781:	(bad)  
  424782:	les    ebp,FWORD PTR ss:[ecx+0x6dae23b2]
  424789:	mov    DWORD PTR [ecx],ecx
  42478b:	pop    es
  42478c:	lds    ebp,FWORD PTR [ebx]
  42478e:	retf   0xb95e
  424791:	scas   al,BYTE PTR es:[edi]
  424792:	in     eax,0x7d
  424794:	mov    cl,0x4d
  424796:	outs   dx,BYTE PTR ds:[esi]
  424797:	sbb    ecx,esi
  424799:	lahf   
  42479a:	and    dh,ah
  42479c:	out    0x49,al
  42479e:	mov    bh,0x4d
  4247a0:	adc    esp,DWORD PTR [esi-0x1d]
  4247a3:	callw  0x2928
  4247a7:	inc    ebp
  4247a8:	int3   
  4247a9:	pop    esp
  4247aa:	push   cs
  4247ab:	cmp    al,0x45
  4247ad:	or     DWORD PTR [ebx-0x5a6a3cdc],0xe03a9024
  4247b7:	loopne 0x424768
  4247b9:	ficom  WORD PTR [ecx]
  4247bb:	mov    edi,0x574152ad
  4247c0:	and    dh,ch
  4247c2:	in     al,0x1a
  4247c4:	inc    eax
  4247c5:	xchg   esi,eax
  4247c6:	xchg   ecx,eax
  4247c7:	ficomp WORD PTR [esi+ecx*4]
  4247ca:	jne    0x42484a
  4247cc:	data16 int3 
  4247ce:	not    BYTE PTR [esi-0x3b2ed487]
  4247d4:	bound  eax,QWORD PTR [edi-0x46]
  4247d7:	mov    bh,0xad
  4247d9:	std    
  4247da:	or     ebx,DWORD PTR [esi+0x30]
  4247dd:	add    eax,0x3f7f73d3
  4247e2:	add    al,0xe1
  4247e4:	mov    dl,0x8a
  4247e6:	xchg   edi,eax
  4247e7:	(bad)  
  4247e8:	sbb    BYTE PTR [edx],bh
  4247ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247eb:	push   esp
  4247ec:	mov    cl,BYTE PTR [edx-0x60]
  4247ef:	xchg   DWORD PTR [edi+ebx*2-0x61],edx
  4247f3:	sbb    dl,BYTE PTR [ebp-0x63]
  4247f6:	in     al,dx
  4247f7:	dec    esi
  4247f8:	jg     0x424867
  4247fa:	retf   0xc237
  4247fd:	loop   0x4247a1
  4247ff:	push   edx
  424800:	push   ecx
  424801:	mov    ds:0xe2544882,eax
  424806:	jmp    0x42479e
  424808:	xor    eax,0xa0d16e60
  42480d:	xchg   esi,eax
  42480e:	mov    dl,0x8c
  424810:	dec    esp
  424811:	xor    edx,ecx
  424813:	jg     0x424884
  424815:	xchg   ecx,eax
  424816:	push   esp
  424817:	loop   0x4247e1
  424819:	loope  0x42481d
  42481b:	retf   0xe560
  42481e:	xchg   edi,eax
  42481f:	push   0xffffffbe
  424821:	fnstcw WORD PTR [ebp-0x42]
  424824:	push   cs
  424825:	fmul   DWORD PTR [edi-0x522458df]
  42482b:	das    
  42482c:	shl    BYTE PTR ds:0xd15cb9f6,1
  424832:	push   ebx
  424833:	cmp    al,0x36
  424835:	out    dx,al
  424836:	mov    DWORD PTR [edi-0x1c],eax
  424839:	dec    eax
  42483a:	(bad)  
  42483b:	mov    edi,0xf32c7f03
  424840:	adc    al,0x45
  424842:	rcl    DWORD PTR [eax-0xf5fc1ac],cl
  424848:	fmul   QWORD PTR [eax]
  42484a:	mov    dh,0xc9
  42484c:	and    al,0x7d
  42484e:	dec    esi
  42484f:	pop    eax
  424850:	dec    edx
  424851:	pop    edi
  424852:	jle    0x42484c
  424854:	mov    ds:0x331de48b,al
  424859:	ins    BYTE PTR es:[edi],dx
  42485a:	inc    ecx
  42485b:	lock lock sar DWORD PTR ss:[ecx-0x3b],0x85
  424862:	popa   
  424863:	jecxz  0x42489b
  424865:	adc    DWORD PTR [ebx+0x3e],ebx
  424868:	cmp    BYTE PTR [ebx+ebp*2+0x47],bh
  42486c:	and    esp,edx
  42486e:	mov    al,ds:0x5a59851d
  424873:	add    eax,DWORD PTR [edi]
  424875:	jnp    0x424861
  424877:	test   dl,cl
  424879:	mov    edi,?
  42487b:	cli    
  42487c:	out    dx,al
  42487d:	cmp    ebp,ecx
  42487f:	push   0x8
  424881:	or     esp,DWORD PTR [ebp+ecx*1+0x16a1894b]
  424888:	jecxz  0x424835
  42488a:	and    cl,BYTE PTR [ebp+0x62a5471]
  424890:	jg     0x424852
  424892:	in     eax,dx
  424893:	sar    edx,0xe1
  424896:	add    ch,ah
  424898:	retf   0x48b8
  42489b:	pop    edi
  42489c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42489e:	stos   BYTE PTR es:[edi],al
  42489f:	out    dx,al
  4248a0:	cdq    
  4248a1:	sar    esi,cl
  4248a3:	add    edx,ebx
  4248a5:	iret   
  4248a6:	sub    eax,DWORD PTR [ecx+0x7a]
  4248a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248aa:	fcmove st,st(5)
  4248ac:	lods   al,BYTE PTR ds:[esi]
  4248ad:	(bad)  
  4248ae:	xchg   esi,eax
  4248af:	push   edi
  4248b0:	xchg   edx,eax
  4248b1:	dec    edi
  4248b2:	add    ch,BYTE PTR [esi]
  4248b4:	xchg   bx,ax
  4248b6:	add    al,0x68
  4248b8:	inc    ecx
  4248b9:	clc    
  4248ba:	bound  ecx,QWORD PTR [esp+ecx*1]
  4248bd:	and    DWORD PTR [esi],0x5f191b06
  4248c3:	pop    ss
  4248c4:	in     eax,dx
  4248c5:	inc    edx
  4248c6:	lock fstp TBYTE PTR [ebx+ecx*2-0x5ff85761]
  4248ce:	jmp    0xf5fa7334
  4248d3:	xchg   ecx,eax
  4248d4:	je     0x4248a9
  4248d6:	outs   dx,BYTE PTR fs:[esi]
  4248d8:	pop    ebp
  4248d9:	out    0x25,al
  4248db:	mov    edi,0xfaedcb5
  4248e0:	in     al,0x7f
  4248e2:	or     BYTE PTR [edx],dh
  4248e4:	lea    esp,gs:[ecx+0x424ee3f5]
  4248eb:	sbb    al,BYTE PTR [edx-0x5]
  4248ee:	inc    esi
  4248ef:	mov    cl,0x45
  4248f1:	data16 mov al,0xf7
  4248f4:	popa   
  4248f5:	pop    ecx
  4248f6:	retf   
  4248f7:	mov    ds:0xac877ba2,al
  4248fc:	loopne 0x4248e4
  4248fe:	xor    eax,0x80cf209c
  424903:	ja     0x424972
  424905:	and    BYTE PTR [ebx-0x6dea891a],dl
  42490b:	loope  0x4248b5
  42490d:	popa   
  42490e:	aad    0xb
  424910:	pop    es
  424911:	and    edx,DWORD PTR [ebp-0x7fd11789]
  424917:	mov    ebp,0xcaf75823
  42491c:	test   BYTE PTR [ebx],ah
  42491e:	addr16 cmp ecx,eax
  424921:	push   ecx
  424922:	inc    edx
  424923:	mov    dl,0x1b
  424925:	repnz imul edi,esp,0x52382a90
  42492c:	xlat   BYTE PTR ds:[ebx]
  42492d:	xchg   ebx,eax
  42492e:	std    
  42492f:	mov    cl,0xe7
  424931:	jns    0x42497c
  424933:	xchg   ecx,eax
  424934:	pop    ebp
  424935:	inc    edx
  424936:	repnz inc esp
  424938:	addr16 int3 
  42493a:	adc    eax,ebp
  42493c:	inc    eax
  42493d:	jg     0x424929
  42493f:	push   0xffffffd9
  424941:	and    DWORD PTR [edi+edi*2-0x344bf595],esi
  424948:	shl    DWORD PTR [eax+0x77],1
  42494b:	sbb    dh,BYTE PTR [eax]
  42494d:	cwde   
  42494e:	fxch   st(7)
  424950:	adc    eax,0xe21a476e
  424955:	cmp    al,0x64
  424957:	dec    esi
  424958:	push   es
  424959:	push   ebp
  42495a:	jmp    0x4249c5
  42495c:	mov    BYTE PTR [edi-0x3],bh
  42495f:	mov    eax,0xb01770e2
  424964:	je     0x4249d3
  424966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424967:	mov    ds:0xbcfed9da,al
  42496c:	cmp    al,0x59
  42496e:	test   eax,0xcc28625
  424973:	or     al,0x3e
  424975:	outs   dx,DWORD PTR ds:[esi]
  424976:	(bad)  
  424977:	mov    ecx,0x21e62483
  42497c:	or     edx,DWORD PTR [edi-0x4]
  42497f:	or     al,0x92
  424981:	jb     0x424966
  424983:	into   
  424984:	(bad)
  424988:	sbb    al,BYTE PTR [ebp+0x47a72101]
  42498e:	jno    0x424931
  424990:	out    0x52,eax
  424992:	jo     0x42499d
  424994:	add    edx,ebx
  424996:	loope  0x4249c7
  424998:	fprem1 
  42499a:	add    DWORD PTR [esi],ecx
  42499c:	add    eax,0x6e893eb1
  4249a1:	mov    cl,0xd4
  4249a3:	mov    ds:0x5321bd73,eax
  4249a8:	ss inc ecx
  4249aa:	jnp    0x424954
  4249ac:	adc    eax,0x9b6374a1
  4249b1:	xor    DWORD PTR [ecx-0x4f1e3126],ebp
  4249b7:	mov    ecx,0xb38b12b2
  4249bc:	into   
  4249bd:	lahf   
  4249be:	push   cs
  4249bf:	add    edi,DWORD PTR [ebp+0x7aec1855]
  4249c5:	jmp    DWORD PTR [ecx+0x50354de1]
  4249cb:	adc    eax,0x33f1c52
  4249d0:	push   ebp
  4249d1:	push   esp
  4249d2:	idiv   BYTE PTR [ebx-0x3]
  4249d5:	scas   eax,DWORD PTR es:[edi]
  4249d6:	lahf   
  4249d7:	cmp    ebp,edx
  4249d9:	fwait
  4249da:	imul   ebx,ebx,0x912eb028
  4249e0:	cmp    eax,DWORD PTR [edx-0x31d32cea]
  4249e6:	dec    ebx
  4249e7:	jecxz  0x424a29
  4249e9:	sbb    cl,BYTE PTR [ebx]
  4249eb:	add    ebp,DWORD PTR [edi+0x7a4884c6]
  4249f1:	dec    eax
  4249f2:	jle    0x424a10
  4249f4:	adc    eax,0xff4e5889
  4249f9:	jmp    0xfc0fbad9
  4249fe:	pop    ss
  4249ff:	jno    0x424a72
  424a01:	call   0x9f8708ab
  424a06:	mov    bh,0x37
  424a08:	outs   dx,DWORD PTR ds:[esi]
  424a09:	cs iret 
  424a0b:	pop    edi
  424a0c:	scas   eax,DWORD PTR es:[edi]
  424a0d:	sbb    eax,0x2c03ecbe
  424a12:	out    dx,al
  424a13:	adc    DWORD PTR [eax],ebx
  424a15:	jl     0x4249ee
  424a17:	xchg   edi,eax
  424a18:	gs adc eax,0xa782edaf
  424a1e:	push   ebp
  424a1f:	xor    dl,BYTE PTR ds:0x46c5e410
  424a25:	retf   0x7297
  424a28:	mov    ch,0x29
  424a2a:	aad    0x31
  424a2c:	test   eax,0x5a669cdc
  424a31:	jae    0x4249f0
  424a33:	add    al,0x29
  424a35:	in     eax,0x28
  424a37:	inc    esp
  424a38:	stos   DWORD PTR es:[edi],eax
  424a39:	loope  0x424a85
  424a3b:	rcl    BYTE PTR [ecx+0x76],1
  424a3e:	jl     0x424aa2
  424a40:	into   
  424a41:	popa   
  424a42:	bound  edx,QWORD PTR [ecx-0x40]
  424a45:	test   BYTE PTR [ebx-0x1f925435],ah
  424a4b:	push   0xffffffef
  424a4d:	test   DWORD PTR [ebx+0x24812c83],0x49c0ed17
  424a57:	or     DWORD PTR [esi+eiz*1],esp
  424a5a:	sub    ebp,DWORD PTR [edx+0x2b]
	...
  424a68:	add    BYTE PTR [eax],al
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	push   eax
  424a77:	mov    eax,ss:0x1d80a6c
  424a7d:	add    BYTE PTR [ebx+0x6],bh
  424a80:	add    BYTE PTR [eax],al
  424a82:	pop    ds
  424a83:	sahf   
  424a84:	xlat   BYTE PTR ds:[ebx]
  424a85:	int    0x6b
  424a87:	xchg   edi,eax
  424a88:	cmp    esi,edx
  424a8a:	sar    ebp,cl
  424a8c:	jmp    0xb243:0x6a1a7c88
  424a93:	stc    
  424a94:	pop    esi
  424a95:	and    dl,BYTE PTR [edi-0x63]
  424a98:	xor    ch,BYTE PTR [ebx+0x69]
  424a9b:	push   ebp
  424a9c:	jp     0x424a2e
  424a9e:	mov    ebp,0x7166b9a3
  424aa3:	fwait
  424aa4:	push   0x4690ff35
  424aa9:	daa    
  424aaa:	std    
  424aab:	ret    0xba67
  424aae:	and    ah,BYTE PTR [ebx-0x614c1018]
  424ab4:	jecxz  0x424b1c
  424ab6:	cld    
  424ab7:	std    
  424ab8:	push   eax
  424ab9:	mov    esp,ecx
  424abb:	cs push esi
  424abd:	mov    dl,0x77
  424abf:	aad    0x89
  424ac1:	adc    al,0x6c
  424ac3:	sar    BYTE PTR [edx+0x6f],0x63
  424ac7:	jnp    0x424b3e
  424ac9:	push   edi
  424aca:	sar    DWORD PTR [ecx],cl
  424acc:	xchg   ecx,eax
  424acd:	fmul   QWORD PTR [eax-0x12]
  424ad0:	adc    eax,0x2e98dc3b
  424ad5:	sbb    ecx,ebx
  424ad7:	pushf  
  424ad8:	call   0xb9c8:0xb9b94278
  424adf:	sbb    dl,BYTE PTR [esi]
  424ae1:	clc    
  424ae2:	add    eax,0xc8610c2b
  424ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ae9:	scas   al,BYTE PTR es:[edi]
  424aea:	jmp    0x22b2:0x54e269d
  424af1:	push   0x46
  424af3:	or     DWORD PTR cs:[esi-0x3f],edi
  424af7:	inc    ebp
  424af8:	mov    dl,al
  424afa:	jg     0x424abe
  424afc:	sub    al,0x7
  424afe:	dec    ebp
  424aff:	neg    WORD PTR fs:[eax+0x6c]
  424b04:	dec    ebp
  424b05:	aad    0xeb
  424b07:	lds    ecx,FWORD PTR [ecx+0x34287e73]
  424b0d:	inc    ebp
  424b0e:	aaa    
  424b0f:	sub    BYTE PTR [ebx+0x16cb1ffa],bh
  424b15:	cdq    
  424b16:	pop    ebp
  424b17:	jne    0x424b17
  424b19:	push   es
  424b1a:	fild   QWORD PTR [edx]
  424b1c:	rcr    eax,cl
  424b1e:	fidivr DWORD PTR [ecx-0x6f]
  424b21:	add    eax,0x1db6e847
  424b26:	int    0xe3
  424b28:	jge    0x424af5
  424b2a:	je     0x424b9a
  424b2c:	inc    esp
  424b2d:	out    dx,eax
  424b2e:	xor    eax,DWORD PTR [esi]
  424b30:	pop    ss
  424b31:	jne    0x424b87
  424b33:	data16 jae 0x424b43
  424b36:	push   esp
  424b37:	scas   al,BYTE PTR es:[edi]
  424b38:	adc    dh,BYTE PTR [edi-0x70]
  424b3b:	cmc    
  424b3c:	mov    ds:0xf4af74a1,eax
  424b41:	adc    al,0x5d
  424b43:	xor    edx,DWORD PTR [eax+0x7aaa8085]
  424b49:	pop    edi
  424b4a:	or     bl,bl
  424b4c:	mov    ebx,fs
  424b4e:	mov    al,ds:0x1e4c51d8
  424b53:	jb     0x424b66
  424b55:	pop    ebp
  424b57:	sub    eax,0xf59a83f7
  424b5c:	out    dx,al
  424b5d:	pop    esp
  424b5e:	pop    ebp
  424b5f:	sub    bl,bl
  424b61:	es push eax
  424b63:	and    al,0x8f
  424b65:	call   0x719a78b3
  424b6a:	dec    ebx
  424b6b:	add    eax,0x3ec4a90c
  424b70:	mov    bl,0x65
  424b72:	xchg   ecx,eax
  424b73:	sbb    dl,ch
  424b75:	mov    edi,0xf9fff612
  424b7a:	sbb    ah,BYTE PTR [ebx]
  424b7c:	mov    BYTE PTR [edx],ch
  424b7e:	and    DWORD PTR [ecx],esp
  424b80:	scas   al,BYTE PTR es:[edi]
  424b81:	fldcw  WORD PTR [eax+0x64eb5118]
  424b87:	in     al,0xdd
  424b89:	mov    edx,0xec9d9392
  424b8e:	push   eax
  424b8f:	jnp    0x424b11
  424b91:	push   ds
  424b92:	mov    eax,0xb410d80
  424b97:	inc    esp
  424b98:	das    
  424b99:	sbb    dl,ch
  424b9b:	pop    ebx
  424b9c:	dec    ebp
  424b9d:	xchg   ebx,eax
  424b9e:	ficomp WORD PTR [ecx]
  424ba0:	in     eax,dx
  424ba1:	cmp    al,0xbe
  424ba3:	mov    BYTE PTR [edi],cl
  424ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ba6:	(bad)  
  424ba7:	neg    DWORD PTR [eax+0xb]
  424baa:	retf   
  424bab:	adc    ch,ah
  424bad:	int    0x9
  424baf:	add    bl,0xfc
  424bb2:	std    
  424bb3:	xchg   ebx,eax
  424bb4:	jp     0x424bd4
  424bb6:	cmp    ch,bh
  424bb8:	cmp    eax,0xc935a049
  424bbd:	jnp    0x424c35
  424bbf:	and    DWORD PTR [edx],edx
  424bc1:	(bad)  
  424bc2:	sbb    al,0x14
  424bc4:	idiv   DWORD PTR [eax]
  424bc6:	icebp  
  424bc7:	mov    cl,0x8c
  424bc9:	pop    ss
  424bca:	jne    0x424b9c
  424bcc:	hlt    
  424bcd:	(bad)
  424bd1:	xchg   esp,eax
  424bd2:	push   edx
  424bd3:	xor    dh,BYTE PTR [eax*8-0x1ff1930a]
  424bda:	std    
  424bdb:	jmp    0x424bc7
  424bdd:	lock xchg edx,eax
  424bdf:	add    dh,BYTE PTR [eax]
  424be1:	mov    bh,0x5
  424be3:	out    0xa6,eax
  424be5:	mov    dh,al
  424be7:	and    BYTE PTR [esi+0x49fe6002],ah
  424bed:	push   esi
  424bee:	push   ebp
  424bef:	mov    bl,0x27
  424bf1:	dec    esp
  424bf2:	inc    ecx
  424bf3:	sub    DWORD PTR [edi+0x40],esp
  424bf6:	retf   
  424bf7:	cmp    BYTE PTR [edi+0x30],dl
  424bfa:	mov    al,0x30
  424bfc:	xor    BYTE PTR [eax*8+0x11a65323],bh
  424c03:	fst    DWORD PTR [ecx+0x731e0fca]
  424c09:	push   edi
  424c0a:	daa    
  424c0b:	add    dl,bh
  424c0d:	mov    ebx,0xfc0dd82d
  424c12:	adc    edi,0x254f89bf
  424c18:	adc    al,0xab
  424c1a:	pop    ss
  424c1b:	int3   
  424c1c:	inc    eax
  424c1d:	xor    BYTE PTR [ebp+0x73],cl
  424c20:	in     eax,dx
  424c21:	(bad)  
  424c22:	jmp    FWORD PTR [ebx-0x4b7ed742]
  424c28:	sahf   
  424c29:	lahf   
  424c2a:	ins    DWORD PTR es:[edi],dx
  424c2b:	cmp    al,0x7a
  424c2d:	arpl   WORD PTR [ebp-0x1aaab57f],cx
  424c33:	adc    BYTE PTR [ebx+0x59],0x5a
  424c37:	jl     0x424c40
  424c39:	imul   ebx,edi,0xebe4a555
  424c3f:	inc    esp
  424c40:	and    eax,DWORD PTR [ebx+0x18842caf]
  424c46:	add    DWORD PTR [esi],esi
  424c48:	push   es
  424c49:	aaa    
  424c4a:	(bad)  
  424c4b:	neg    BYTE PTR [edx]
  424c4d:	fwait
  424c4e:	jb     0x424c06
  424c50:	cmp    BYTE PTR [edi+0x61e7b381],cl
  424c56:	jmp    0x64f3da83
  424c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c5c:	test   BYTE PTR [eax],bh
  424c5e:	add    dh,BYTE PTR [edx-0x579b81e3]
  424c64:	cmp    eax,0x3f825aff
  424c69:	mov    edi,0xc9546b4f
  424c6e:	mov    ecx,0x3aacc520
  424c73:	clc    
  424c74:	ds mov esp,0xfe9f304
  424c7a:	mov    ecx,0x9ab50e64
  424c7f:	les    edi,FWORD PTR [eax-0x5d]
  424c82:	imul   edi,DWORD PTR ds:0x5b10e99c,0xffffffb2
  424c89:	cmp    edx,DWORD PTR [esi]
  424c8b:	jmp    0x424c78
  424c8d:	jne    0x424d03
  424c8f:	mov    bl,0xa3
  424c91:	cmp    edx,DWORD PTR [edx-0x29]
  424c94:	add    eax,0x229085ec
  424c99:	mov    WORD PTR [eax+0x41],fs
  424c9c:	pop    ss
  424c9d:	mov    edi,DWORD PTR [ecx+0x6f]
  424ca0:	cwde   
  424ca1:	add    eax,0x1b
  424ca4:	jle    0x424cd1
  424ca6:	pop    ebx
  424ca7:	and    al,0x10
  424ca9:	adc    eax,0x8f8abf5f
  424cae:	push   esp
  424cb0:	dec    ebp
  424cb1:	adc    ah,BYTE PTR [esi+eax*8]
  424cb4:	sub    BYTE PTR [edx-0x372ae20b],bh
  424cba:	xchg   ebp,eax
  424cbb:	pop    ebx
  424cbc:	jne    0x424c53
  424cbe:	jbe    0x424cb4
  424cc0:	in     al,dx
  424cc1:	sbb    BYTE PTR [ecx+0x4d],dh
  424cc4:	jmp    FWORD PTR [edi-0x6a32af39]
  424cca:	pop    ebp
  424ccb:	fisub  WORD PTR [edx-0x20]
  424cce:	mov    bl,0x61
  424cd0:	sahf   
  424cd1:	sbb    ecx,ebx
  424cd3:	mov    al,ds:0xcd4b0531
  424cd8:	unpckhps xmm4,XMMWORD PTR [esi-0x34]
  424cdc:	pop    edx
  424cdd:	mov    edi,0xa7180971
  424ce2:	addr16 stc 
  424ce4:	inc    eax
  424ce5:	mov    ecx,?
  424ce7:	push   edi
  424ce8:	push   esp
  424ce9:	data16 add BYTE PTR [ebx+0x7c05c96b],0x1f
  424cf1:	inc    ecx
  424cf2:	xchg   edi,eax
  424cf3:	cli    
  424cf4:	sbb    eax,0xb9b6426a
  424cf9:	add    al,0xac
  424cfb:	push   ss
  424cfc:	and    esi,DWORD PTR [eax]
  424cfe:	repnz add DWORD PTR [ecx+0x77fb1b0e],0x762fb5f8
  424d09:	add    bh,BYTE PTR [eax]
  424d0b:	jle    0x424d0c
  424d0d:	les    edx,FWORD PTR [ecx+0x64]
  424d10:	cdq    
  424d11:	dec    ebx
  424d13:	mov    bh,0x37
  424d15:	bound  ebp,QWORD PTR [edi+0x64e5308f]
  424d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d1c:	and    ecx,DWORD PTR [ecx+0x46]
  424d1f:	(bad)  
  424d20:	xchg   ebx,eax
  424d21:	cdq    
  424d22:	fsubr  DWORD PTR [ebx-0x61]
  424d25:	and    eax,eax
  424d27:	jge    0x424d6e
  424d29:	inc    ebp
  424d2a:	pop    esp
  424d2b:	push   edx
  424d2c:	mov    cl,0xa9
  424d2e:	dec    edi
  424d2f:	and    edx,DWORD PTR [edx]
  424d31:	jmp    DWORD PTR [ecx+0x54]
  424d34:	ficomp DWORD PTR [edi+0x1f]
  424d37:	scas   eax,DWORD PTR es:[edi]
  424d38:	sbb    eax,0x4912bcda
  424d3d:	mov    esi,0x7ebc5f85
  424d42:	outs   dx,BYTE PTR ds:[esi]
  424d43:	fst    DWORD PTR [eax+0x35f5d13a]
  424d49:	or     dh,bh
  424d4b:	pop    eax
  424d4c:	ins    BYTE PTR es:[edi],dx
  424d4d:	ror    BYTE PTR [edi+edi*1],1
  424d50:	lea    esi,[ecx+0x62]
  424d53:	inc    edi
  424d54:	add    BYTE PTR [ecx],cl
  424d56:	push   esi
  424d57:	lock mov ah,0xb7
  424d5a:	pop    edi
  424d5b:	or     ebp,esp
  424d5d:	mov    edi,0xe1788b2c
  424d62:	push   0x96651537
  424d67:	or     ebp,esp
  424d69:	scas   eax,DWORD PTR es:[edi]
  424d6a:	lea    ecx,[ebx]
  424d6c:	pop    ebp
  424d6d:	fistp  WORD PTR [eax]
  424d6f:	scas   al,BYTE PTR es:[edi]
  424d70:	jbe    0x424db3
  424d72:	add    eax,0x571ded70
  424d77:	inc    ebp
  424d78:	cld    
  424d79:	push   ebp
  424d7a:	jle    0x424d81
  424d7c:	mov    edx,0x4fb4827
  424d81:	sahf   
  424d82:	mov    bl,0xd0
  424d84:	adc    edi,ecx
  424d86:	ret    0x3436
  424d89:	jae    0x424d6d
  424d8b:	fidivr DWORD PTR [eax+0x50]
  424d8e:	in     eax,0x3f
  424d90:	out    dx,eax
  424d91:	xchg   esp,eax
  424d92:	outs   dx,BYTE PTR ds:[esi]
  424d93:	fwait
  424d94:	jae    0x424dd5
  424d96:	mov    esi,0x54e4a5ec
  424d9b:	sar    BYTE PTR [esp+ecx*1-0x46045a99],cl
  424da2:	ja     0x424dfe
  424da4:	jnp    0x424d3a
  424da6:	ror    BYTE PTR [edi-0x54717eac],1
  424dac:	mov    edx,0x6597abf3
  424db1:	popf   
  424db2:	xchg   esi,eax
  424db3:	sbb    dl,ah
  424db5:	jo     0x424d39
  424db7:	in     al,0xa5
  424db9:	loope  0x424e15
  424dbb:	or     DWORD PTR [edi-0x5c],esi
  424dbe:	sbb    ebx,DWORD PTR [ebx+0x42cb95ba]
  424dc4:	pop    ebp
  424dc5:	stc    
  424dc6:	call   0xf3d45e90
  424dcb:	sub    DWORD PTR [edx-0x9db9d45],0x71
  424dd2:	mov    BYTE PTR [ebx],bh
  424dd4:	fld    QWORD PTR [ecx+0x46758292]
  424dda:	cmp    al,0xd4
  424ddc:	dec    ebp
  424ddd:	rcl    DWORD PTR [edi+0x67ab3146],1
  424de3:	mov    eax,0x75c73556
  424de8:	mov    edi,0x9c47c799
  424ded:	loope  0x424d82
  424def:	or     al,0x7
  424df1:	jp     0x424dc8
  424df3:	pop    esp
  424df4:	fwait
  424df5:	mov    ch,ah
  424df7:	jae    0x424df7
  424df9:	cmp    al,0x49
  424dfb:	call   0x57160c05
  424e00:	pop    ds
  424e01:	and    cl,BYTE PTR [esi]
  424e03:	sub    BYTE PTR [edx],0x43
  424e06:	jae    0x424d8b
  424e08:	mov    bh,0xb0
  424e0a:	out    dx,eax
  424e0b:	aam    0x18
  424e0d:	sbb    al,0xea
  424e0f:	in     eax,0x25
  424e11:	retf   
  424e12:	js     0x424e38
  424e14:	sub    DWORD PTR [ebx+0x7f],edx
  424e17:	jge    0x424e2f
  424e19:	scas   eax,DWORD PTR es:[edi]
  424e1a:	sub    BYTE PTR [esi+edi*4+0x2b],0xee
  424e1f:	mov    bl,0x21
  424e21:	xor    eax,0x5df6db2d
  424e26:	shr    ebp,0x51
  424e29:	push   eax
  424e2a:	mov    bl,0x25
  424e2c:	gs nop
  424e2e:	adc    al,0xd9
  424e30:	and    al,0xdf
  424e32:	sub    BYTE PTR [eax+0x26],dl
  424e35:	gs jle 0x424e7f
  424e38:	xchg   esi,eax
  424e39:	push   es
  424e3a:	jge    0x424dfa
  424e3c:	shr    BYTE PTR [ebp-0x79],1
  424e3f:	cmp    bl,BYTE PTR [esi]
  424e41:	mov    cl,0x81
  424e43:	fimul  DWORD PTR [ebp-0x4872233a]
  424e49:	xor    al,0xd2
  424e4b:	mov    al,ds:0xebe6e73f
  424e50:	scas   al,BYTE PTR es:[edi]
  424e51:	iret   
  424e52:	inc    BYTE PTR [edi-0x2]
  424e55:	clc    
  424e56:	sbb    edi,esp
  424e58:	aam    0xc3
  424e5a:	cmc    
  424e5b:	gs push eax
  424e5d:	lods   al,BYTE PTR ds:[esi]
  424e5e:	add    eax,0x481497a0
  424e63:	push   ecx
  424e64:	dec    ecx
  424e65:	add    BYTE PTR [ecx],0x24
  424e68:	adc    DWORD PTR [ebx-0x65abb7a9],esp
  424e6e:	cmp    bl,BYTE PTR [esi-0x4243448]
  424e74:	sar    DWORD PTR [ebx],0xe
  424e77:	add    edx,DWORD PTR ds:0x4b10c3b8
  424e7d:	pop    es
  424e7e:	lds    ecx,FWORD PTR [edi-0x19cc90a0]
  424e84:	mov    ebp,ds
  424e86:	jbe    0x424e45
  424e88:	lods   eax,DWORD PTR ds:[esi]
  424e89:	(bad)  
  424e8a:	sub    al,0x43
  424e8c:	mov    bl,0x95
  424e8e:	je     0x424e9a
  424e90:	dec    eax
  424e91:	mov    dl,0xb3
  424e93:	pop    esp
  424e94:	or     BYTE PTR [edx-0x6495a166],dl
  424e9a:	js     0x424e3f
  424e9c:	in     eax,dx
  424e9d:	(bad)  
  424e9f:	in     al,0x7b
  424ea1:	mov    esp,0x9dd7b92a
  424ea6:	enter  0xb4ba,0xcb
  424eaa:	jmp    0x529e:0x3e80ac0a
  424eb1:	jp     0x424e43
  424eb3:	xchg   ebx,eax
  424eb4:	cmp    BYTE PTR [ebx],bh
  424eb6:	pop    es
  424eb7:	(bad)  
  424eb8:	out    dx,eax
  424eb9:	push   ecx
  424eba:	jge    0x424f23
  424ebc:	sar    BYTE PTR [ecx-0x74986705],0x36
  424ec3:	out    dx,eax
  424ec4:	fist   DWORD PTR [ecx-0x371821bc]
  424eca:	jns    0x424f1d
  424ecc:	sub    BYTE PTR [ecx-0x34],ch
  424ecf:	mov    ax,0x812e
  424ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ed4:	push   edi
  424ed5:	or     al,0x2
  424ed7:	xor    al,0x1c
  424ed9:	dec    edx
  424eda:	js     0x424f1f
  424edc:	mov    eax,ds:0x864fa683
  424ee1:	dec    ebp
  424ee2:	std    
  424ee3:	(bad)
  424ee6:	xchg   esp,eax
  424ee7:	or     al,BYTE PTR fs:[ecx]
  424eea:	cld    
  424eeb:	xchg   edx,eax
  424eec:	mov    ecx,0xee773093
  424ef1:	(bad)  
  424ef2:	aam    0xea
  424ef4:	fwait
  424ef5:	clc    
  424ef6:	inc    esp
  424ef7:	push   ebp
  424ef8:	aaa    
  424ef9:	scas   eax,DWORD PTR es:[edi]
  424efa:	inc    eax
  424efb:	and    DWORD PTR [eax+0x5a],ecx
  424efe:	push   0x2c
  424f00:	call   0x79205bb1
  424f05:	fsub   st,st(5)
  424f07:	dec    eax
  424f08:	push   edx
  424f09:	cmc    
  424f0a:	sbb    eax,0x9d9e536e
  424f0f:	mov    dh,0x5f
  424f11:	sahf   
  424f12:	mov    cl,0x92
  424f14:	in     al,dx
  424f15:	mov    ebx,0x2250a45a
  424f1a:	xchg   ebp,eax
  424f1b:	jbe    0x424f20
  424f1d:	test   BYTE PTR [esi-0x1433f44d],ah
  424f23:	push   esi
  424f24:	cs jge 0x424f3f
  424f27:	jle    0x424ee3
  424f29:	shl    cl,0xec
  424f2c:	adc    BYTE PTR [edi-0x73f4bccf],ch
  424f32:	loop   0x424eeb
  424f34:	jle    0x424ec4
  424f36:	pop    edi
  424f37:	ret    
  424f38:	pop    edi
  424f39:	scas   al,BYTE PTR es:[edi]
  424f3a:	or     BYTE PTR [edi],0x1b
  424f3d:	jle    0x424ec0
  424f3f:	mov    al,ds:0x3976f977
  424f44:	add    esp,DWORD PTR [edx-0x1bd79f6d]
  424f4a:	pop    edx
  424f4b:	adc    eax,0xf4301617
  424f50:	lods   eax,DWORD PTR ds:[esi]
  424f51:	pop    ds
  424f52:	scas   eax,DWORD PTR es:[edi]
  424f53:	add    DWORD PTR [ecx+esi*2+0x19],edx
  424f57:	cmp    dl,ah
  424f59:	pop    eax
  424f5a:	or     esi,eax
  424f5c:	sub    esp,edi
  424f5e:	aam    0x82
  424f60:	mov    ds:0x9748b6b9,al
  424f65:	and    bl,BYTE PTR [ecx]
  424f67:	push   cs
  424f68:	fs pop esi
  424f6a:	stc    
  424f6b:	push   esi
  424f6c:	out    0x7a,eax
  424f6e:	push   ebx
  424f6f:	stos   DWORD PTR es:[edi],eax
  424f70:	or     eax,0x9a350581
  424f75:	loopne 0x424fa0
  424f77:	adc    eax,0x9d8267c0
  424f7c:	push   edx
  424f7d:	imul   edx,eax,0xdfb8df0e
  424f83:	int    0xd4
  424f85:	and    BYTE PTR [ebx-0x2a],0xc6
  424f89:	xchg   edi,eax
  424f8a:	xchg   DWORD PTR [ebx+0x3b689681],ebx
  424f90:	stc    
  424f91:	getsec 
  424f93:	inc    esp
  424f94:	mov    ebp,0xe188ea45
  424f99:	jnp    0x424f30
  424f9b:	iret   
  424f9c:	in     al,dx
  424f9d:	daa    
  424f9e:	mov    BYTE PTR [esi],cl
  424fa0:	xchg   ecx,eax
  424fa1:	fild   QWORD PTR ds:0x9d8ba523
  424fa7:	aam    0xc
  424fa9:	mov    dh,0xfb
  424fab:	addr16 retf 0x79e6
  424faf:	mov    esi,0x142ef933
  424fb4:	mov    ds:0x79f54525,al
  424fb9:	lock xlat BYTE PTR ds:[ebx]
  424fbb:	fbstp  TBYTE PTR [edx]
  424fbd:	out    dx,al
  424fbe:	xchg   esi,eax
  424fbf:	mov    ds:0x21cc2725,eax
  424fc4:	test   eax,0x6c2891cb
  424fc9:	push   edx
  424fca:	mov    ebp,0xdd65adf0
  424fcf:	lods   eax,DWORD PTR ds:[esi]
  424fd0:	ja     0x424fbf
  424fd2:	mov    DWORD PTR [eax],esi
  424fd4:	nop
  424fd5:	dec    esp
  424fd6:	mov    ebx,0xe735199c
  424fdb:	aam    0x8e
  424fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fde:	shr    ah,1
  424fe0:	enter  0x795a,0xe4
  424fe4:	repnz mov esi,0xe6a88904
  424fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424feb:	fs call 0xae9b:0x16730ef
  424ff3:	or     al,0x49
  424ff5:	jg     0x424fa9
  424ff7:	mov    ?,WORD PTR [esi-0x34087f86]
  424ffd:	push   0x1bd8df6d
  425002:	in     al,0x66
  425004:	into   
  425005:	jecxz  0x42500e
  425007:	ds push 0xf072c4a3
  42500d:	xor    dl,ch
  42500f:	gs jmp 0x74cc:0xb04caf1
  425017:	sbb    al,0x16
  425019:	jmp    0xdb21c665
  42501e:	mov    ecx,0x46a7d6d1
  425023:	in     eax,0x39
  425025:	mov    ecx,DWORD PTR [edi]
  425027:	in     eax,dx
  425028:	adc    BYTE PTR [ebx+0x15fd2d11],0x5c
  42502f:	mov    edi,DWORD PTR [eax]
  425031:	or     eax,0xcaa52671
  425036:	xchg   ebp,eax
  425037:	sahf   
  425038:	add    BYTE PTR ds:0xec096fd4,dh
  42503e:	sub    BYTE PTR [ecx-0x33],al
  425041:	pop    es
  425042:	add    BYTE PTR [eax+0x52dfc832],bl
  425048:	and    ecx,DWORD PTR [ecx]
  42504a:	sbb    DWORD PTR [edi],esi
  42504c:	mov    ?,WORD PTR [edx]
  42504e:	ret    0xc6c5
  425051:	iret   
  425052:	daa    
  425053:	inc    eax
  425054:	stos   BYTE PTR es:[edi],al
  425055:	retf   0xf4de
  425058:	int3   
  425059:	iret   
  42505a:	jmp    0x4250a3
  42505c:	mov    BYTE PTR es:[ebp+0x4896f37c],dl
  425063:	jmp    0x424fec
  425065:	or     BYTE PTR [eax],dh
  425067:	pop    es
  425068:	mov    ebx,0xe5302ada
  42506d:	or     eax,0x54f02750
  425072:	into   
  425073:	jge    0x4250d2
  425075:	(bad)  
  425076:	pop    ds
  425077:	xor    eax,0x3a36cc39
  42507c:	shl    edx,0xf7
  42507f:	lods   eax,DWORD PTR ds:[esi]
  425080:	pusha  
  425081:	ins    BYTE PTR es:[edi],dx
  425082:	fsubr  DWORD PTR [edx+esi*1-0x635897f1]
  425089:	call   0xb2608fc0
  42508e:	into   
  42508f:	iret   
  425090:	xor    al,0x26
  425092:	fs xchg ebx,eax
  425094:	cld    
  425095:	jnp    0x425065
  425097:	loop   0x42510e
  425099:	jmp    0x425074
  42509b:	les    ebx,FWORD PTR [ecx+0x12cea3fc]
  4250a1:	and    al,0xf
  4250a3:	mov    esi,0x3d1bdba2
  4250a8:	inc    ebp
  4250a9:	ss sbb ebx,edi
  4250ac:	enter  0x29ef,0xd
  4250b0:	ret    
  4250b1:	xlat   BYTE PTR ds:[ebx]
  4250b2:	ins    DWORD PTR es:[edi],dx
  4250b3:	inc    eax
  4250b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250b5:	ret    0x39bc
  4250b8:	push   ss
  4250b9:	nop
  4250ba:	or     DWORD PTR [ebp+0x304cfeac],esp
  4250c0:	pop    esi
  4250c1:	adc    al,0x68
  4250c3:	sbb    al,0x21
  4250c5:	xor    eax,0x6d27873
  4250ca:	adc    al,0xb8
  4250cc:	lock popf 
  4250ce:	shl    BYTE PTR [edx],cl
  4250d0:	inc    esi
  4250d1:	dec    ebx
  4250d2:	sbb    BYTE PTR [eax-0x7926a559],bh
  4250d8:	cli    
  4250d9:	mov    ah,0x2e
  4250db:	mov    eax,0x69e7bc94
  4250e0:	fst    QWORD PTR [ecx+eax*2-0x76]
  4250e4:	test   bh,0xfd
  4250e7:	rcl    dl,cl
  4250e9:	repz lds esp,FWORD PTR cs:[eax+0x2f]
  4250ee:	jle    0x4250b3
  4250f0:	or     eax,0x9e090c12
  4250f5:	mov    dh,0x7a
  4250f7:	inc    edi
  4250f8:	dec    esi
  4250f9:	(bad)  
  4250fa:	push   edi
  4250fb:	dec    esp
  4250fc:	or     eax,0x0
	...
  425109:	add    BYTE PTR [ecx+0x55],bl
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0xd86e0e96
  425119:	rol    DWORD PTR [ebp+0x7b0001de],cl
  42511f:	push   es
  425120:	add    BYTE PTR [eax],al
  425122:	mov    ebx,0xaa7a892c
  425127:	mov    ebp,DWORD PTR [ebx+0x2d]
  42512a:	pop    edi
  42512b:	add    al,0xf9
  42512d:	cmp    ebp,DWORD PTR [esi+edx*1-0x3c3ad27e]
  425134:	test   BYTE PTR [edi-0x1553ec59],dl
  42513a:	pop    esi
  42513b:	xchg   edi,esp
  42513d:	xor    ebp,eax
  42513f:	add    esp,DWORD PTR [ebx]
  425141:	cmp    al,0x40
  425143:	(bad)  
  425144:	cmp    al,0xa3
  425146:	es xchg ebx,eax
  425148:	xchg   esp,eax
  425149:	jmp    0x12de:0x6b2727ec
  425150:	retf   
  425151:	mov    ch,0xf3
  425153:	rcl    DWORD PTR [ebx+edi*8],cl
  425156:	xchg   ecx,eax
  425157:	adc    al,0x22
  425159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515a:	pop    esp
  42515b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42515c:	or     eax,0x844da6c7
  425161:	push   esp
  425162:	or     al,0x1d
  425164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425165:	push   eax
  425166:	jb     0x42516e
  425168:	ja     0x4251c0
  42516a:	add    ch,BYTE PTR [esi]
  42516c:	test   eax,0x82c71819
  425171:	inc    ecx
  425172:	jne    0x425136
  425174:	shl    DWORD PTR [edx+0x73],cl
  425177:	rcl    BYTE PTR [ebx-0x55],1
  42517a:	je     0x425156
  42517c:	das    
  42517d:	ja     0x425177
  42517f:	mov    BYTE PTR [edi+ecx*4+0x11],bl
  425183:	add    bh,BYTE PTR [ecx-0x221b2e79]
  425189:	mov    ch,0x4d
  42518b:	popa   
  42518c:	dec    edi
  42518d:	jo     0x425141
  42518f:	xor    BYTE PTR [esp+edi*2-0x11],cl
  425193:	cmc    
  425194:	int    0xc8
  425196:	mov    fs,WORD PTR [ecx+0x5be5f3f7]
  42519c:	and    al,0xfc
  42519e:	adc    BYTE PTR [ebx-0x32],dh
  4251a1:	sti    
  4251a2:	je     0x4251a7
  4251a4:	adc    al,0x66
  4251a6:	lahf   
  4251a7:	mov    dh,0xe4
  4251a9:	idiv   DWORD PTR [ebp-0x45f8187a]
  4251af:	jmp    0x35b0f4cb
  4251b4:	(bad)  
  4251b5:	dec    esp
  4251b6:	jmp    0x9991cf08
  4251bb:	jae    0x4251e3
  4251bd:	xor    al,0x6a
  4251bf:	add    al,0x20
  4251c1:	xchg   esp,eax
  4251c2:	lods   al,BYTE PTR ds:[esi]
  4251c3:	dec    eax
  4251c4:	pop    ss
  4251c5:	jno    0x4251d6
  4251c7:	enter  0x6e96,0x45
  4251cb:	fwait
  4251cc:	sti    
  4251cd:	retf   
  4251ce:	mov    ch,0xbf
  4251d0:	adc    al,0x61
  4251d2:	xchg   edi,eax
  4251d3:	cli    
  4251d4:	in     eax,0xc
  4251d6:	xchg   ebp,eax
  4251d7:	xchg   BYTE PTR [eax+ebx*1+0x675495c2],al
  4251de:	scas   al,BYTE PTR es:[edi]
  4251df:	xchg   esi,eax
  4251e0:	xor    BYTE PTR [ebx-0x675e53b0],bh
  4251e6:	gs mov esi,0x7de01a0f
  4251ed:	jmp    0xac3b:0xc2179da2
  4251f4:	inc    esp
  4251f5:	adc    BYTE PTR [edi-0x57bd0cb6],cl
  4251fb:	(bad)  
  4251fd:	adc    al,0x79
  4251ff:	jmp    0x4251e9
  425201:	and    bh,BYTE PTR fs:[si+0x22d3]
  425207:	std    
  425208:	mov    dl,0x5b
  42520a:	dec    eax
  42520b:	mov    BYTE PTR [eax-0x37209d5],dl
  425211:	pushf  
  425212:	sub    eax,DWORD PTR [ecx+edx*2]
  425215:	(bad)  
  425216:	mov    bh,0xc0
  425218:	stos   DWORD PTR es:[edi],eax
  425219:	adc    ebp,DWORD PTR [esi+0x15]
  42521c:	xchg   ebx,eax
  42521d:	xchg   ebp,eax
  42521e:	mov    ecx,0xca65e690
  425223:	jg     0x425215
  425225:	push   ebx
  425226:	ja     0x425285
  425228:	jecxz  0x4252a3
  42522a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42522b:	cli    
  42522c:	sti    
  42522d:	mov    ah,0xa4
  42522f:	xchg   BYTE PTR [ebx-0x50812ef5],cl
  425235:	xor    edx,DWORD PTR [eax+0x67879e53]
  42523b:	push   ebp
  42523c:	or     eax,0x4d48ad14
  425241:	and    eax,0xa5b76afe
  425246:	and    ebp,DWORD PTR [esi+0x17cc7701]
  42524c:	cmp    esi,edx
  42524e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42524f:	pop    ss
  425250:	shl    DWORD PTR [edi],0x44
  425253:	xchg   ah,bl
  425255:	sahf   
  425256:	icebp  
  425257:	add    dh,BYTE PTR [esi-0x4f]
  42525a:	cli    
  42525b:	fcomp  QWORD PTR [edi+0x4a836828]
  425261:	aad    0x87
  425263:	lods   eax,DWORD PTR ds:[esi]
  425264:	xor    ch,ah
  425266:	(bad)  
  425267:	sti    
  425268:	or     eax,DWORD PTR [ecx-0x1558c7d4]
  42526e:	push   ebp
  42526f:	popf   
  425270:	aaa    
  425271:	aaa    
  425272:	jecxz  0x425252
  425274:	pop    esp
  425275:	lods   eax,DWORD PTR ds:[esi]
  425276:	inc    esp
  425277:	inc    eax
  425278:	mov    ss,WORD PTR [ebp-0xdda9640]
  42527e:	out    0x61,eax
  425280:	ror    DWORD PTR [edi],cl
  425282:	mov    ebx,0x190f82d9
  425287:	or     eax,0x62fa2c6f
  42528c:	stos   DWORD PTR es:[edi],eax
  42528d:	jg     0x4252c9
  42528f:	nop
  425290:	sar    BYTE PTR [ecx],cl
  425292:	(bad)  
  425293:	hlt    
  425294:	pop    ds
  425295:	mov    ebp,cs
  425297:	jl     0x4252c3
  425299:	test   DWORD PTR [ecx],esi
  42529b:	out    dx,eax
  42529c:	ror    esp,cl
  42529e:	xchg   edi,eax
  42529f:	out    dx,al
  4252a0:	sar    BYTE PTR [eax],1
  4252a2:	xchg   esp,eax
  4252a3:	shl    BYTE PTR [ebx+0x585c78a],0x55
  4252aa:	push   ebp
  4252ab:	mov    ebp,0x4a53f923
  4252b0:	push   eax
  4252b1:	cli    
  4252b2:	push   cs
  4252b3:	es (bad) 
  4252b5:	jns    0x425304
  4252b7:	stc    
  4252b8:	push   eax
  4252b9:	in     al,0x4f
  4252bb:	(bad)  
  4252bc:	lock (bad) 
  4252be:	xchg   ecx,eax
  4252bf:	(bad)
  4252c3:	or     esp,ecx
  4252c5:	mov    ah,0xd0
  4252c7:	and    eax,0xbf875e67
  4252cc:	xchg   edx,eax
  4252cd:	sahf   
  4252ce:	leave  
  4252cf:	popf   
  4252d0:	test   DWORD PTR [ebx+esi*1],esp
  4252d3:	test   al,0x96
  4252d5:	shr    DWORD PTR [ebp+0x61a043a5],1
  4252db:	or     BYTE PTR [esi],0xd
  4252de:	push   edx
  4252df:	add    al,0xac
  4252e1:	aaa    
  4252e2:	int3   
  4252e3:	mov    ebp,0x56665083
  4252e8:	imul   esp,edx,0x551c37b4
  4252ee:	jle    0x425297
  4252f0:	mov    WORD PTR [ecx+0x3699fd3],ss
  4252f6:	dec    eax
  4252f7:	push   ss
  4252f8:	mov    al,0x87
  4252fa:	(bad)  
  4252fb:	jmp    0x42530e
  4252fd:	out    0x2e,eax
  4252ff:	and    al,0xc9
  425301:	pop    edx
  425302:	sti    
  425303:	stos   BYTE PTR es:[edi],al
  425304:	mov    edi,0x6f23399b
  425309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42530a:	aaa    
  42530b:	or     eax,0xb4c1462b
  425310:	sbb    edx,DWORD PTR [ebp+ebp*8+0x16]
  425314:	dec    ebx
  425315:	je     0x425387
  425317:	dec    esi
  425318:	cmp    DWORD PTR [ebp+0x20bd35ef],edi
  42531e:	push   cs
  42531f:	push   ecx
  425320:	inc    edx
  425321:	sub    al,0x21
  425323:	in     eax,0xa5
  425325:	jg     0x42534f
  425327:	jnp    0x425302
  425329:	scas   eax,DWORD PTR es:[edi]
  42532a:	and    edi,0xcf00526d
  425330:	jp     0x425316
  425332:	cmp    esi,esp
  425334:	rcl    DWORD PTR [edx+0xc],1
  425337:	stc    
  425338:	fsub   st(2),st
  42533a:	add    ch,BYTE PTR [ebp+0x469af5f3]
  425340:	dec    ebp
  425341:	fcomp  DWORD PTR [esi]
  425343:	sar    BYTE PTR [esi],1
  425345:	out    0xa7,eax
  425347:	push   cs
  425348:	cmp    bh,BYTE PTR [eax+0x23b295ad]
  42534e:	dec    ebx
  42534f:	sbb    ch,BYTE PTR [esi-0x47]
  425352:	or     al,0x35
  425354:	jb     0x42539d
  425356:	addr16 push edx
  425358:	mov    eax,0xf5eb3df6
  42535d:	popa   
  42535e:	fisttp WORD PTR [edx+0x7d7ec2a2]
  425364:	in     al,0xe1
  425366:	ret    0xbe37
  425369:	dec    esi
  42536a:	fmul   st,st(3)
  42536c:	stos   DWORD PTR es:[edi],eax
  42536d:	inc    ecx
  42536e:	(bad)  
  42536f:	dec    eax
  425370:	ds retf 
  425372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425373:	push   edi
  425374:	(bad)  
  425376:	popa   
  425377:	jp     0x425386
  425379:	aas    
  42537a:	xchg   ebx,eax
  42537b:	stc    
  42537c:	lea    ebp,[esp+ebp*2]
  42537f:	adc    esp,DWORD PTR [ebx]
  425381:	pop    edi
  425382:	(bad)  
  425383:	(bad)  
  425384:	xor    DWORD PTR ds:0xe186be79,edx
  42538a:	test   al,0x61
  42538c:	lds    edx,FWORD PTR ds:0xe41fc38e
  425392:	sub    BYTE PTR [edx-0x7b177780],bh
  425398:	and    al,BYTE PTR [esp+edi*1+0x6548202f]
  42539f:	sub    eax,0x5b89532c
  4253a4:	in     eax,0x36
  4253a6:	push   0xfb8c5d39
  4253ab:	jno    0x425336
  4253ad:	cld    
  4253ae:	iret   
  4253af:	pop    es
  4253b0:	repz dec ebp
  4253b2:	jne    0x4253f4
  4253b4:	pop    gs
  4253b6:	sub    bl,BYTE PTR [esi]
  4253b8:	and    DWORD PTR [edi],0x57a872ad
  4253be:	mov    bh,0xa6
  4253c0:	pop    esp
  4253c1:	and    BYTE PTR [eax],dl
  4253c3:	push   es
  4253c4:	push   eax
  4253c5:	push   esp
  4253c6:	je     0x4253ec
  4253c8:	mov    ds:0xbd52e873,al
  4253cd:	dec    ebx
  4253ce:	mov    ah,0x47
  4253d0:	iret   
  4253d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253d2:	add    al,0xce
  4253d4:	jle    0x425367
  4253d6:	in     eax,dx
  4253d7:	sahf   
  4253d8:	mov    al,ds:0x9239bcd5
  4253dd:	imul   esi,DWORD PTR [edi+0xe],0x1f
  4253e1:	popf   
  4253e2:	push   ecx
  4253e3:	xchg   edi,eax
  4253e4:	add    eax,DWORD PTR [edi+ebx*2]
  4253e7:	out    dx,al
  4253e8:	(bad)  
  4253e9:	int3   
  4253ea:	cld    
  4253eb:	lea    ebx,[ebx+0x0]
  4253ee:	dec    ebx
  4253ef:	sahf   
  4253f0:	(bad)  
  4253f1:	fbstp  TBYTE PTR [ebx+0x73f87068]
  4253f7:	pop    ecx
  4253f8:	daa    
  4253f9:	inc    esi
  4253fa:	(bad)  [ecx]
  4253fc:	xchg   bh,cl
  4253fe:	sub    al,0x6b
  425400:	gs mov bl,0x1
  425403:	xchg   esi,eax
  425404:	ss inc edi
  425406:	add    ch,BYTE PTR [ebx+0x21]
  425409:	jecxz  0x4253f5
  42540b:	outs   dx,BYTE PTR ds:[esi]
  42540c:	xchg   BYTE PTR [eax],dl
  42540e:	mov    bh,BYTE PTR [edx-0x1c1b7769]
  425414:	shl    bl,cl
  425416:	std    
  425417:	sahf   
  425418:	or     al,0xa9
  42541a:	sbb    al,0x53
  42541c:	dec    esp
  42541d:	jo     0x42548a
  42541f:	sub    BYTE PTR [ecx-0x7f],cl
  425422:	out    dx,eax
  425423:	test   edx,edx
  425425:	push   cs
  425426:	sbb    eax,esp
  425428:	push   esi
  425429:	arpl   sp,bx
  42542b:	sar    DWORD PTR [edi+eiz*2],0x64
  42542f:	or     BYTE PTR [eax+0x71],ch
  425432:	or     eax,0x9363012f
  425437:	dec    esi
  425438:	lds    ecx,FWORD PTR [eax+ebx*1+0x1b]
  42543c:	out    dx,al
  42543d:	es add ebp,edi
  425440:	fcomip st,st(2)
  425442:	mov    al,ds:0x717b0c2d
  425447:	jmp    0xdcc3:0xb19026fb
  42544e:	mov    edi,0xda6be4db
  425453:	aas    
  425454:	ret    
  425455:	xchg   BYTE PTR [edi+0x24],bl
  425458:	push   ds
  425459:	int    0xc8
  42545b:	pop    si
  42545d:	iret   
  42545e:	pop    ss
  42545f:	add    edx,edx
  425461:	sbb    ah,BYTE PTR [bx]
  425464:	clc    
  425465:	and    al,BYTE PTR [ebx+0x48a52c29]
  42546b:	loop   0x4254a8
  42546d:	sbb    DWORD PTR [ebp-0x72],edi
  425470:	bnd jmp 0x425430
  425473:	stc    
  425474:	dec    esi
  425475:	pop    eax
  425476:	mov    ecx,0xd846b816
  42547b:	into   
  42547c:	das    
  42547d:	fist   DWORD PTR [eax-0x19]
  425480:	xchg   ebx,eax
  425481:	cmp    eax,0xc1428957
  425486:	mov    ds:0xd7bbd5c4,al
  42548b:	push   ebx
  42548c:	inc    eax
  42548d:	cli    
  42548e:	fcmovbe st,st(5)
  425490:	sbb    al,0x39
  425492:	sbb    DWORD PTR [ecx-0x64],ebp
  425495:	cld    
  425496:	lea    esi,[edx-0xb]
  425499:	sbb    dl,dl
  42549b:	call   0x635b1fce
  4254a0:	outs   dx,DWORD PTR gs:[esi]
  4254a2:	ror    BYTE PTR [edx-0x1b4aeb9c],0xf9
  4254a9:	int3   
  4254aa:	fmul   st,st(7)
  4254ac:	add    al,0xf
  4254ae:	add    ah,BYTE PTR [esi]
  4254b0:	dec    esp
  4254b1:	cli    
  4254b2:	dec    ebx
  4254b3:	(bad)
  4254b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254b9:	mov    dl,0x50
  4254bb:	and    al,BYTE PTR [eax]
  4254bd:	sti    
  4254be:	cmp    BYTE PTR [esi-0x5fa94d90],cl
  4254c4:	scas   eax,DWORD PTR es:[edi]
  4254c5:	jnp    0x4254b6
  4254c7:	sub    eax,0x625b8ecb
  4254cc:	and    DWORD PTR [ecx-0x5a],ebx
  4254cf:	jecxz  0x425500
  4254d1:	pop    edx
  4254d2:	in     al,dx
  4254d3:	hlt    
  4254d4:	sub    edx,DWORD PTR [esi]
  4254d6:	sbb    BYTE PTR [ebx-0x1a01118d],bl
  4254dc:	sbb    eax,0x72e3f2ba
  4254e1:	popa   
  4254e2:	push   cs
  4254e3:	mov    esi,0x3ef62dbc
  4254e8:	ret    
  4254e9:	leave  
  4254ea:	retf   0xdf33
  4254ed:	cmc    
  4254ee:	cmp    ebp,DWORD PTR [eax+0x7b]
  4254f1:	mov    eax,ds:0x4b980b86
  4254f6:	test   bl,ah
  4254f8:	sahf   
  4254f9:	adc    esi,DWORD PTR ds:[ebx]
  4254fc:	repnz sbb BYTE PTR [ebx+ecx*4-0x5b],cl
  425501:	repz mov edi,0xb8b42a85
  425507:	mov    edi,0xc0c9e2ff
  42550c:	inc    edi
  42550d:	popa   
  42550e:	push   0x7bc66601
  425513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425514:	cmp    eax,0x513c60a8
  425519:	aad    0xa5
  42551b:	sbb    al,0xf9
  42551d:	retf   0x62fe
  425520:	iret   
  425521:	pop    eax
  425522:	push   ss
  425523:	xchg   ax,ax
  425525:	sub    BYTE PTR [ebx],ah
  425527:	lds    eax,FWORD PTR [edi]
  425529:	pop    ebp
  42552a:	lods   eax,DWORD PTR ds:[esi]
  42552b:	out    dx,eax
  42552c:	shl    DWORD PTR ds:0x6a7cd4ea,1
  425532:	jae    0x42556a
  425534:	call   0xdebe:0x8e0ee64c
  42553b:	sub    BYTE PTR [edi],dh
  42553d:	je     0x425576
  42553f:	mov    ebx,0x17aa37e2
  425544:	pop    ebp
  425545:	lahf   
  425546:	scas   eax,DWORD PTR es:[edi]
  425547:	es add edi,esp
  42554a:	jnp    0x42550b
  42554c:	ss xchg edx,eax
  42554e:	mov    ecx,0x39cf60c8
  425553:	adc    DWORD PTR [esi],eax
  425555:	jne    0x4254f2
  425557:	push   edx
  425558:	loop   0x42557f
  42555a:	hlt    
  42555b:	leave  
  42555c:	in     al,0x47
  42555e:	(bad)  
  42555f:	dec    edx
  425560:	inc    edi
  425561:	cmp    esp,edi
  425563:	mov    cl,0x49
  425565:	stc    
  425566:	add    BYTE PTR [ecx+0x7b9a53b8],dl
  42556c:	mov    eax,0xc74b6c39
  425571:	mov    esi,0x1da8e6d0
  425576:	mov    al,ds:0xdcaf70be
  42557b:	test   BYTE PTR [edx],al
  42557d:	(bad)  
  42557e:	leave  
  42557f:	inc    eax
  425580:	mov    bh,0x7f
  425582:	(bad)  
  425583:	jo     0x425594
  425585:	jnp    0x4255ea
  425587:	sti    
  425588:	mov    edi,0x7afbc48a
  42558d:	sbb    DWORD PTR [edx],esi
  42558f:	and    dh,cl
  425591:	mov    ebp,0x393341f5
  425596:	loope  0x4255b5
  425598:	in     al,dx
  425599:	xor    bh,BYTE PTR [ebx]
  42559b:	aas    
  42559c:	cmc    
  42559d:	sub    al,0xf3
  42559f:	sar    DWORD PTR [ebx],0x98
  4255a2:	sbb    DWORD PTR ds:0x9831deb0,ecx
  4255a8:	cld    
  4255a9:	mov    BYTE PTR [edi],dh
  4255ab:	sar    BYTE PTR [esi-0x367d2ce2],cl
  4255b1:	out    0x6d,eax
  4255b3:	mov    dh,0x50
  4255b5:	pop    ds
  4255b6:	sub    BYTE PTR ds:0x9608b972,dl
  4255bc:	daa    
  4255bd:	sbb    al,bh
  4255bf:	adc    BYTE PTR [edi],bl
  4255c1:	xchg   edx,eax
  4255c2:	push   edx
  4255c3:	imul   eax,DWORD PTR [edi],0xa6105e86
  4255c9:	pop    es
  4255ca:	pushf  
  4255cb:	lahf   
  4255cc:	loop   0x42559b
  4255ce:	xor    dl,BYTE PTR [bp-0x2707]
  4255d3:	jbe    0x4255e9
  4255d5:	fadd   QWORD PTR [esi-0x23]
  4255d8:	add    DWORD PTR [edx-0x495d6993],edi
  4255de:	push   cs
  4255df:	pop    esi
  4255e0:	pop    ds
  4255e1:	and    BYTE PTR [ebp+0x64],0xe5
  4255e5:	fild   DWORD PTR [eax-0xb6a35ee]
  4255eb:	xchg   edi,eax
  4255ec:	or     al,0x28
  4255ee:	dec    ebp
  4255ef:	mov    ds:0x435e829f,eax
  4255f4:	push   ds
  4255f5:	mov    eax,ds:0x3120eebc
  4255fa:	mov    ch,0x79
  4255fc:	or     DWORD PTR [edx+0x8],0x78
  425600:	pop    edi
  425601:	sub    DWORD PTR ds:[esi-0x50],edx
  425605:	mov    esp,0xf14115
  42560a:	mov    ebp,0xb13b9bf5
  42560f:	mov    ebx,0x75ed683
  425614:	hlt    
  425615:	scas   eax,DWORD PTR es:[edi]
  425616:	cmc    
  425617:	jb     0x425617
  425619:	mov    BYTE PTR [ebp+eax*8+0x53876cd5],al
  425620:	ja     0x425687
  425622:	or     esp,DWORD PTR [eax+0x2a]
  425625:	(bad)  
  425626:	retf   0x808e
  425629:	in     eax,dx
  42562a:	sar    DWORD PTR [ecx],0x13
  42562d:	rcr    eax,cl
  42562f:	xor    eax,0xca3514b1
  425634:	cmp    esp,eax
  425636:	daa    
  425637:	fidiv  DWORD PTR [edx-0x26]
  42563a:	push   es
  42563b:	fiadd  DWORD PTR [ebx-0x64a43acf]
  425641:	aad    0xac
  425643:	js     0x4256ac
  425645:	push   ebp
  425646:	xchg   ebx,eax
  425647:	pushf  
  425648:	(bad)  
  42564a:	push   edi
  42564b:	test   eax,0x2f0dbd55
  425650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425651:	mov    cl,0x62
  425653:	inc    edi
  425654:	or     al,0xa9
  425656:	adc    eax,0xe8834cb
  42565b:	cmp    DWORD PTR [esp+eax*2],esp
  42565e:	mov    bh,0xfd
  425660:	jmp    0x1ce3:0x78fe20f8
  425667:	push   ebx
  425668:	frstor [ebx-0x7f]
  42566b:	cmp    al,0x61
  42566d:	es and eax,0xc1f01d71
  425673:	lea    edi,[esi-0x7f]
  425676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425677:	mov    ch,0x34
  425679:	in     eax,dx
  42567a:	stos   BYTE PTR es:[edi],al
  42567b:	lea    edi,[edi-0x1]
  42567e:	sar    ecx,0xe6
  425681:	and    al,bl
  425683:	dec    ecx
  425684:	call   0x7aed:0x6041103e
  42568b:	stc    
  42568c:	fcomi  st,st(1)
  42568e:	call   0xe2b2c881
  425693:	lods   al,BYTE PTR ds:[esi]
  425694:	xor    al,0x7e
  425696:	shl    BYTE PTR [ebx],0x58
  425699:	imul   DWORD PTR [edx]
  42569b:	adc    cl,bl
  42569d:	clc    
  42569e:	xor    ecx,DWORD PTR [eax]
  4256a0:	pop    ecx
  4256a1:	pop    es
  4256a2:	dec    eax
  4256a3:	dec    ebx
  4256a4:	mov    eax,ds
  4256a6:	aad    0xb4
  4256a8:	js     0x425681
  4256aa:	push   ebx
  4256ab:	dec    eax
  4256ac:	ss mov edx,esp
  4256af:	dec    esi
  4256b0:	mov    edx,eax
  4256b2:	pop    esi
  4256b3:	mov    eax,ds:0x76290f5f
  4256b8:	fistp  QWORD PTR [edi-0x74]
  4256bb:	out    0xd4,al
  4256bd:	mov    ds:0x6dfa31ff,al
  4256c2:	pop    eax
  4256c3:	cmp    esi,ebp
  4256c5:	push   ebx
  4256c6:	xchg   edi,edi
  4256c8:	lods   eax,DWORD PTR ds:[esi]
  4256c9:	and    BYTE PTR [edx-0x422da90a],ch
  4256cf:	adc    esi,DWORD PTR ds:0x7b532f43
  4256d5:	pushf  
  4256d6:	and    BYTE PTR [edi],al
  4256d8:	cdq    
  4256d9:	dec    ebx
  4256da:	xchg   cl,bh
  4256dc:	mov    ebp,esp
  4256de:	mov    cl,BYTE PTR [eax]
  4256e0:	fwait
  4256e1:	inc    ecx
  4256e2:	sub    edi,DWORD PTR [ebx]
  4256e4:	pop    edx
  4256e5:	xor    esp,DWORD PTR [edi+0x6f7a8101]
  4256eb:	pushaw 
  4256ed:	ins    BYTE PTR es:[edi],dx
  4256ee:	push   0x75
  4256f0:	outs   dx,BYTE PTR ds:[esi]
  4256f1:	add    eax,0xd797d26c
  4256f6:	adc    eax,DWORD PTR [ebx+0x61944272]
  4256fc:	push   eax
  4256fd:	pop    ds
  4256fe:	pop    es
  4256ff:	sub    eax,0xc292d08f
  425704:	mov    ebx,0xf195accc
  425709:	sub    ch,ah
  42570b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42570c:	fidiv  DWORD PTR [ecx-0x29]
  42570f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425710:	test   BYTE PTR [ecx*2+0x4ad260c3],al
  425717:	jl     0x4256ba
  425719:	std    
  42571a:	cmp    al,0x2
  42571c:	(bad)  
  42571d:	mov    ebp,0xf8e3455e
  425722:	adc    al,0x2f
  425724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425725:	cmp    DWORD PTR [eax+0x25118918],edi
  42572b:	pusha  
  42572c:	lods   al,BYTE PTR ds:[esi]
  42572d:	mov    dl,BYTE PTR [edx-0xce5a7e1]
  425733:	jg     0x425772
  425735:	inc    ebx
  425736:	jbe    0x425792
  425738:	pop    esp
  425739:	inc    DWORD PTR [ecx+0x60dc243c]
  42573f:	pusha  
  425740:	jmp    0xc1e2:0x1dd55388
  425747:	imul   edi,DWORD PTR [edx+0x18412434],0x2e
  42574e:	cs addr16 xchg ebx,eax
  425751:	xor    eax,0x9a96f3c
  425756:	mov    ch,0x85
  425758:	(bad)  
  425759:	sbb    al,0x43
  42575b:	add    al,0x29
  42575d:	pop    esi
  42575e:	into   
  42575f:	mul    BYTE PTR [ecx]
  425761:	lds    ecx,FWORD PTR [edi+edi*4+0x7a081e9]
  425768:	mov    bl,0x3e
  42576a:	stos   BYTE PTR es:[edi],al
  42576b:	cmp    eax,edi
  42576d:	jo     0x425753
  42576f:	jb     0x425769
  425771:	das    
  425772:	ds sahf 
  425774:	cld    
  425775:	sub    ecx,esi
  425777:	add    al,BYTE PTR [edx-0x59cd56d4]
  42577d:	xchg   BYTE PTR [ecx],bh
  42577f:	cdq    
  425780:	mov    fs,WORD PTR [esi+edx*4]
  425783:	or     eax,0xfad8dff5
  425788:	mov    ecx,0x4916e96e
  42578d:	lahf   
  42578e:	aaa    
  42578f:	and    BYTE PTR [ecx+0x79583381],0x42
  425796:	cmp    BYTE PTR [ebx],bh
  425798:	xchg   dh,ah
  42579a:	and    bl,BYTE PTR [ebp-0x22]
	...
  4257a9:	add    BYTE PTR [edx+0x43],cl
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	icebp  
  4257b9:	adc    al,0x0
  4257bb:	in     eax,0x1
  4257bd:	add    BYTE PTR [ebx+0x6],bh
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	adc    al,0xa1
  4257c4:	shl    DWORD PTR [edi-0x5e],0x4c
  4257c8:	ss xor al,0x82
  4257cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257cc:	sti    
  4257cd:	adc    DWORD PTR [eax+edi*8+0x15],edx
  4257d1:	dec    esi
  4257d2:	jle    0x425797
  4257d4:	mov    eax,ds:0x54586edf
  4257d9:	cmp    cl,BYTE PTR ds:0xde461ca8
  4257df:	mov    ebp,0xb490a55d
  4257e4:	bound  ecx,QWORD PTR [edx+0x70f373e1]
  4257ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257eb:	gs fwait
  4257ed:	out    dx,al
  4257ee:	add    BYTE PTR [ecx-0x47],dh
  4257f1:	les    ecx,FWORD PTR [esi-0x19]
  4257f4:	push   0x5b
  4257f6:	sbb    DWORD PTR [eax+ecx*4+0x73],edi
  4257fa:	ja     0x4257b8
  4257fc:	aad    0x7f
  4257fe:	cmp    BYTE PTR [ebp+0x11],bh
  425801:	adc    cl,BYTE PTR [esi]
  425803:	stc    
  425804:	adc    BYTE PTR [esi+0x4],dh
  425807:	jmp    0xb6f65b23
  42580c:	xchg   edx,eax
  42580d:	lock jns 0x4257a7
  425810:	fwait
  425811:	int3   
  425812:	dec    edx
  425813:	int    0x2e
  425815:	inc    eax
  425816:	pop    esp
  425817:	stos   BYTE PTR es:[edi],al
  425818:	jge    0x425860
  42581a:	int    0x34
  42581c:	shr    DWORD PTR [ebx+0x35],1
  42581f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425820:	cli    
  425821:	pusha  
  425822:	lods   al,BYTE PTR ds:[esi]
  425823:	test   al,0x76
  425825:	lea    ebx,[edx+0x7c]
  425828:	inc    edi
  425829:	mov    ds:0xc67d65db,eax
  42582e:	push   edi
  42582f:	pop    edx
  425830:	push   edi
  425831:	xchg   edi,eax
  425832:	mov    esp,0xf1f68af3
  425837:	fwait
  425838:	leave  
  425839:	lods   eax,DWORD PTR ds:[esi]
  42583a:	out    dx,al
  42583b:	push   edi
  42583c:	fsincos 
  42583e:	pop    ecx
  42583f:	sbb    al,0x78
  425841:	pop    esi
  425842:	mov    ah,0x1f
  425844:	(bad)  [edi+0x69]
  425847:	hlt    
  425848:	jmp    0x4461261f
  42584d:	sub    esi,DWORD PTR [esi+eiz*4+0x47]
  425851:	mov    al,ds:0x48f29d1e
  425856:	cdq    
  425857:	fwait
  425858:	add    DWORD PTR [edx-0x79],edx
  42585b:	jno    0x4258c1
  42585d:	repnz push ss
  42585f:	add    esi,DWORD PTR [edi+edx*4+0x29d0f8da]
  425866:	test   eax,0xcdc99045
  42586b:	arpl   cx,cx
  42586d:	dec    edi
  42586e:	ja     0x425872
  425870:	sar    BYTE PTR [ecx],0x90
  425873:	rdtsc  
  425875:	repnz pop edx
  425877:	jns    0x4258e4
  425879:	ror    dl,0x5a
  42587c:	jecxz  0x425808
  42587e:	ror    BYTE PTR [ebp+0x74],1
  425881:	stos   DWORD PTR es:[edi],eax
  425882:	and    cl,dl
  425884:	xor    dl,cl
  425886:	mov    eax,0x85786ef7
  42588b:	mov    eax,ds:0x6cd810fe
  425890:	cmc    
  425891:	scas   al,BYTE PTR es:[edi]
  425892:	push   ss
  425893:	pop    es
  425894:	repnz xchg esi,eax
  425896:	imul   edx,DWORD PTR [eax+0x447196c9],0x2837e856
  4258a0:	fstp   TBYTE PTR [ebx]
  4258a2:	inc    edi
  4258a3:	push   ds
  4258a4:	nop
  4258a5:	dec    esi
  4258a6:	int3   
  4258a7:	fs adc al,0x11
  4258aa:	(bad)  
  4258ab:	cmp    BYTE PTR [ebp-0x581f4f8d],ah
  4258b1:	jecxz  0x425899
  4258b3:	fisubr WORD PTR [ecx]
  4258b5:	imul   eax,DWORD PTR [edi+0x1b],0xc715434a
  4258bc:	xor    DWORD PTR [edi+ecx*4-0x102366c3],0xffffffe3
  4258c4:	xor    esi,DWORD PTR [ebx+esi*8-0x2d]
  4258c8:	rcr    BYTE PTR [edx],cl
  4258ca:	enter  0x180f,0x4f
  4258ce:	into   
  4258cf:	popf   
  4258d0:	pop    edx
  4258d1:	mov    DWORD PTR [ecx+0x305ecb12],ebx
  4258d7:	xchg   ebp,eax
  4258d8:	pushf  
  4258d9:	mov    ah,0xce
  4258db:	jge    0x425869
  4258dd:	hlt    
  4258de:	mov    esp,0x7ecb7bdc
  4258e3:	mov    dh,0xb6
  4258e5:	jecxz  0x42588b
  4258e7:	xchg   bl,dh
  4258e9:	pop    ebx
  4258ea:	dec    esp
  4258eb:	mov    ah,0xae
  4258ed:	in     eax,dx
  4258ee:	ins    DWORD PTR es:[edi],dx
  4258ef:	cmp    esi,edi
  4258f1:	cmp    dh,BYTE PTR [esi+ebx*4-0x5f]
  4258f5:	jns    0x4258a7
  4258f7:	aam    0x3
  4258f9:	xor    BYTE PTR ds:0x9f8a3d50,ch
  4258ff:	jmp    0x425973
  425901:	icebp  
  425902:	enter  0x3a71,0x8f
  425906:	cmc    
  425907:	test   BYTE PTR [eax],ah
  425909:	mov    al,0xd0
  42590b:	or     BYTE PTR [edi],dl
  42590d:	rcl    BYTE PTR [ecx+0x27b9c2a4],0xe1
  425914:	add    BYTE PTR [edx+0x502e0067],0xff
  42591b:	and    BYTE PTR [edx-0x38c241c0],ah
  425921:	jmp    0x6006:0x3dff86f0
  425928:	jo     0x4258c7
  42592a:	xor    ebx,esi
  42592c:	and    bl,BYTE PTR [ebp+0xfc72c1a]
  425932:	dec    ebp
  425933:	xchg   BYTE PTR [edi+0x18c25507],bh
  425939:	cmp    DWORD PTR [ebx],esi
  42593b:	add    esp,esi
  42593d:	popf   
  42593e:	or     eax,DWORD PTR [ebx+eiz*4-0xe]
  425942:	or     eax,DWORD PTR [ebp+0x6a]
  425945:	mov    ecx,0xbeb76afa
  42594a:	lds    ebx,FWORD PTR [esi]
  42594c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42594d:	lods   al,BYTE PTR ds:[esi]
  42594e:	in     eax,dx
  42594f:	(bad)  
  425950:	ret    0x50ee
  425953:	inc    esp
  425954:	shl    DWORD PTR [eax],cl
  425956:	or     al,BYTE PTR [ebp-0x7517f15]
  42595c:	add    al,0xc5
  42595e:	loope  0x4259a2
  425960:	add    DWORD PTR [eax],eax
  425962:	xor    al,0x36
  425964:	inc    ebp
  425965:	les    edi,FWORD PTR [eax]
  425967:	je     0x425946
  425969:	not    BYTE PTR [eax+eax*8-0x3856c92e]
  425970:	lods   eax,DWORD PTR ds:[esi]
  425971:	dec    esi
  425972:	dec    ebp
  425973:	push   ds
  425974:	cdq    
  425975:	adc    edi,DWORD PTR [edi+0x33]
  425978:	xchg   BYTE PTR [ecx],ch
  42597a:	xor    BYTE PTR [eax-0x1a],dh
  42597d:	outs   dx,BYTE PTR ds:[esi]
  42597e:	cmp    al,0x17
  425980:	imul   ecx,edi,0x7e
  425983:	mov    ebx,0x32e3c0a3
  425988:	(bad)  
  425989:	push   0xc
  42598b:	inc    eax
  42598c:	jecxz  0x425923
  42598e:	popf   
  42598f:	inc    edi
  425990:	fadd   st,st(4)
  425992:	shl    BYTE PTR [eax+0x6b],cl
  425995:	xchg   edx,eax
  425996:	out    dx,eax
  425997:	inc    ecx
  425998:	xlat   BYTE PTR ds:[ebx]
  425999:	rol    DWORD PTR [edx-0x1e],cl
  42599c:	mov    esi,0x70a739e6
  4259a1:	nop
  4259a2:	fcmovnbe st,st(4)
  4259a4:	and    eax,0xe6e727e3
  4259a9:	enter  0x9720,0x7e
  4259ad:	icebp  
  4259ae:	stos   BYTE PTR es:[edi],al
  4259af:	cwd    
  4259b1:	retf   
  4259b2:	sbb    eax,0x99d4f918
  4259b7:	ret    0x8e24
  4259ba:	jecxz  0x425941
  4259bc:	sbb    al,0xe9
  4259be:	(bad)  
  4259bf:	(bad)  
  4259c0:	mov    dl,0x65
  4259c2:	emms   
  4259c4:	adc    BYTE PTR [eax],bh
  4259c6:	out    0xf9,al
  4259c8:	sbb    BYTE PTR [edi],dh
  4259ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259cb:	sbb    eax,0x2004f3b0
  4259d0:	das    
  4259d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259d2:	shr    BYTE PTR [edx-0x8b5cded],cl
  4259d8:	in     eax,dx
  4259d9:	push   0xffffffa5
  4259db:	gs call 0xc2483585
  4259e1:	icebp  
  4259e2:	clc    
  4259e3:	xchg   esp,eax
  4259e4:	sub    edx,edx
  4259e6:	xor    esp,DWORD PTR [edi]
  4259e8:	jo     0x425a52
  4259ea:	out    0xef,eax
  4259ec:	and    esi,esi
  4259ee:	dec    ecx
  4259ef:	jle    0x425a57
  4259f1:	ret    0x7571
  4259f4:	bound  ebp,QWORD PTR [edi+0x5b]
  4259f7:	push   ds
  4259f8:	push   ecx
  4259f9:	addr16 cdq 
  4259fb:	adc    esp,ebp
  4259fd:	or     DWORD PTR [edx],ecx
  4259ff:	or     esp,DWORD PTR [edi+0x37]
  425a02:	fsub   DWORD PTR [eax]
  425a04:	repnz aad 0x81
  425a07:	js     0x42599d
  425a09:	test   BYTE PTR [ebp+0x59],al
  425a0c:	dec    edi
  425a0d:	(bad)  
  425a0e:	push   0xfccf9ed9
  425a13:	jb     0x425a84
  425a15:	cs je  0x4259c2
  425a18:	xchg   BYTE PTR [ebp-0x618562cb],al
  425a1e:	push   eax
  425a1f:	inc    edi
  425a20:	dec    ebx
  425a21:	inc    ebx
  425a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a23:	fist   WORD PTR [ecx]
  425a25:	adc    ch,dl
  425a27:	icebp  
  425a28:	mov    DWORD PTR [esi-0x7a],ebp
  425a2b:	(bad)  
  425a2c:	add    BYTE PTR [ebx+0x68],al
  425a2f:	fmul   DWORD PTR [edx]
  425a31:	pusha  
  425a32:	lahf   
  425a33:	mov    al,0x8a
  425a35:	mov    BYTE PTR [eax],bl
  425a37:	popf   
  425a38:	push   0xffffffca
  425a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a3b:	mov    eax,0x481bf1a6
  425a40:	inc    ebx
  425a41:	aaa    
  425a42:	sub    ebp,DWORD PTR [esi-0x5d]
  425a45:	test   eax,0x370eb364
  425a4a:	pop    ss
  425a4b:	enter  0x28a1,0x4a
  425a4f:	inc    edx
  425a50:	push   esi
  425a51:	inc    ecx
  425a52:	sub    edx,DWORD PTR [edx+0x68fa2754]
  425a58:	lods   al,BYTE PTR ds:[esi]
  425a59:	in     eax,0x39
  425a5b:	(bad)  
  425a5c:	jmp    0xd0c4:0x674600a6
  425a63:	pop    edi
  425a64:	jmp    0xaa7a:0xe37ea27e
  425a6b:	ins    BYTE PTR es:[edi],dx
  425a6c:	add    al,0x9b
  425a6e:	dec    ebp
  425a6f:	mov    bh,0x4b
  425a71:	inc    edx
  425a72:	pop    esp
  425a73:	idiv   BYTE PTR [ebp+0x5475f220]
  425a79:	mov    ch,0x9
  425a7b:	icebp  
  425a7c:	int3   
  425a7d:	add    ch,ch
  425a7f:	mov    ch,0x9
  425a81:	arpl   WORD PTR [edx+0x72],di
  425a84:	sub    DWORD PTR [edi+0x69],edx
  425a87:	(bad)  
  425a88:	sub    edi,DWORD PTR [esi]
  425a8a:	aad    0x2f
  425a8c:	or     eax,0x929fbe37
  425a91:	pop    ds
  425a92:	test   eax,0x131fb1f6
  425a97:	mov    dh,0x96
  425a99:	mov    esi,DWORD PTR [edi]
  425a9b:	stos   BYTE PTR es:[edi],al
  425a9c:	cmp    BYTE PTR [edx+0x1a],dl
  425a9f:	mov    esp,0xe552135b
  425aa4:	pusha  
  425aa5:	aas    
  425aa6:	inc    ebx
  425aa7:	inc    edi
  425aa8:	jmp    0xfe9ef78b
  425aad:	mov    ds:0x693ea42,al
  425ab2:	or     DWORD PTR [ecx],ebp
  425ab4:	rol    al,cl
  425ab6:	aam    0x89
  425ab8:	jnp    0x425abf
  425aba:	pop    edx
  425abb:	shr    BYTE PTR [eax-0x26],0xbb
  425abf:	sbb    dl,dh
  425ac1:	push   ss
  425ac2:	arpl   dx,si
  425ac4:	rcr    ebx,1
  425ac6:	pop    edi
  425ac7:	mov    bl,0x1a
  425ac9:	jbe    0x425af4
  425acb:	cmp    ebp,esi
  425acd:	mov    edx,0xe0216651
  425ad2:	out    dx,al
  425ad3:	adc    eax,0xeff4d1a8
  425ad8:	jge    0x425b40
  425ada:	loop   0x425ac8
  425adc:	push   es
  425add:	sbb    cl,BYTE PTR [edi-0x52]
  425ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ae1:	jnp    0x425a6a
  425ae3:	sub    DWORD PTR [esi-0xa20bd2b],edi
  425ae9:	sub    BYTE PTR [ebx-0xb],al
  425aec:	es mov ch,0x64
  425aef:	je     0x425a98
  425af1:	out    0xac,eax
  425af3:	mov    ss,WORD PTR [ecx+ecx*2+0x7b]
  425af7:	mov    WORD PTR [eax+0x5c4df769],es
  425afd:	push   0x21
  425aff:	add    eax,0x3a8c3ad3
  425b04:	cmp    eax,0x7f448e51
  425b09:	mov    WORD PTR [esi-0x5f],gs
  425b0c:	js     0x425b7e
  425b0e:	jmp    0xc5f45055
  425b13:	or     eax,0x6363a5e1
  425b18:	xor    edx,ecx
  425b1a:	sbb    BYTE PTR [edi+0x2f3c5955],dl
  425b20:	pushf  
  425b21:	adc    dh,bh
  425b23:	loop   0x425b52
  425b25:	jge    0x425af9
  425b27:	lods   eax,DWORD PTR ds:[esi]
  425b28:	xor    al,0x21
  425b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b2b:	sub    DWORD PTR [eax+0x28c7eed7],esi
  425b31:	in     al,dx
  425b32:	icebp  
  425b33:	push   ebx
  425b34:	jbe    0x425ae9
  425b36:	fld    DWORD PTR [edi-0x78]
  425b39:	daa    
  425b3a:	push   ebx
  425b3b:	out    0x22,al
  425b3d:	push   ecx
  425b3e:	xchg   edx,eax
  425b3f:	sar    DWORD PTR [esi+0x74d9eeae],1
  425b45:	jl     0x425b7a
  425b47:	adc    DWORD PTR [edi],0xffffff8f
  425b4a:	jns    0x425b67
  425b4c:	mov    ebp,0xfc4c5f00
  425b51:	jns    0x425bbc
  425b53:	and    ebp,esi
  425b55:	jmp    0x425ae1
  425b57:	jb     0x425b98
  425b59:	jb     0x425b57
  425b5b:	sti    
  425b5c:	xor    dl,BYTE PTR [esp+esi*4-0x4f]
  425b60:	add    eax,0xca619248
  425b65:	arpl   WORD PTR [eax+0x45],bx
  425b68:	jge    0x425b78
  425b6a:	clc    
  425b6b:	ret    
  425b6c:	jmp    0x95b2:0x7b823f5d
  425b73:	mov    dl,0xc1
  425b75:	dec    ebp
  425b76:	dec    eax
  425b77:	push   edi
  425b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b79:	mov    ds:0x86a3b575,al
  425b7e:	in     eax,dx
  425b7f:	sub    BYTE PTR [ecx+0x1a],0x76
  425b83:	std    
  425b84:	test   eax,0xb9eb14bd
  425b89:	pop    es
  425b8a:	xchg   esp,eax
  425b8b:	xor    BYTE PTR [esi+0x3071682],0xf3
  425b92:	cmp    eax,0x4ed9ac6b
  425b97:	adc    DWORD PTR [edx+0x5d5f3c47],ebx
  425b9d:	leave  
  425b9e:	push   ecx
  425b9f:	sbb    al,0x20
  425ba1:	dec    esp
  425ba2:	test   eax,0x1cbceb1b
  425ba7:	jp     0x425b55
  425ba9:	lock ja 0x425bf2
  425bac:	cmp    bl,al
  425bae:	jnp    0x425bea
  425bb0:	icebp  
  425bb1:	call   0x129ae78d
  425bb6:	jl     0x425c0b
  425bb8:	repnz add al,0x10
  425bbb:	mov    ch,0x6
  425bbd:	mov    cl,0xce
  425bbf:	push   ds
  425bc0:	ret    
  425bc1:	jae    0x425c0d
  425bc3:	pop    edi
  425bc4:	sub    al,0xeb
  425bc6:	test   al,0x3
  425bc8:	dec    esp
  425bc9:	jge    0x425b8d
  425bcb:	je     0x425ba6
  425bcd:	loop   0x425b73
  425bcf:	mov    dh,0x12
  425bd1:	stos   BYTE PTR es:[edi],al
  425bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd3:	gs mov bl,0xfa
  425bd6:	push   eax
  425bd7:	cmp    BYTE PTR [edx-0x55],dl
  425bda:	je     0x425b72
  425bdc:	mov    ds:0x449fd5dd,eax
  425be1:	mov    eax,es
  425be3:	jl     0x425c03
  425be5:	lods   eax,DWORD PTR ds:[esi]
  425be6:	pop    ecx
  425be7:	adc    DWORD PTR [eax+ebp*8-0x65502b9],edx
  425bee:	fild   WORD PTR [ecx-0x14fc92cb]
  425bf4:	es int3 
  425bf6:	hlt    
  425bf7:	xor    esi,DWORD PTR [ebx+0x5]
  425bfa:	dec    esi
  425bfb:	pop    eax
  425bfc:	ja     0x425c5c
  425bfe:	ret    
  425bff:	jne    0x425c33
  425c01:	mov    esp,0x4feb6b3a
  425c06:	xor    esi,DWORD PTR [ecx]
  425c08:	rol    esp,1
  425c0a:	or     ebx,edx
  425c0c:	imul   edx,DWORD PTR [edi-0x3c30af2d],0x6a22d0cb
  425c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c17:	les    edx,FWORD PTR [eax]
  425c19:	popf   
  425c1a:	fs add ebp,ecx
  425c1d:	pop    ebx
  425c1e:	pop    ds
  425c1f:	cmp    al,0xdc
  425c21:	dec    eax
  425c22:	and    al,ah
  425c24:	xchg   edi,eax
  425c25:	push   es
  425c26:	push   edi
  425c27:	adc    ch,cl
  425c29:	loop   0x425c82
  425c2b:	fwait
  425c2c:	loope  0x425c9b
  425c2e:	(bad)  
  425c2f:	js     0x425c54
  425c31:	pop    edi
  425c32:	and    ch,bl
  425c34:	jns    0x425c62
  425c36:	add    eax,0x1705115b
  425c3b:	cmp    eax,DWORD PTR [eax+0x33]
  425c3e:	aas    
  425c3f:	add    BYTE PTR [ecx],cl
  425c41:	mov    ah,0xec
  425c43:	in     eax,dx
  425c44:	push   0x1e6c34b7
  425c49:	outs   dx,BYTE PTR fs:[esi]
  425c4b:	push   ds
  425c4c:	je     0x425c08
  425c4e:	jno    0x425c62
  425c50:	sub    DWORD PTR [ebp+ebp*2-0x72943bb6],ebp
  425c57:	popf   
  425c58:	fbld   TBYTE PTR [eax+0x58]
  425c5b:	push   edx
  425c5c:	shr    BYTE PTR [esi-0x24],cl
  425c5f:	inc    edi
  425c60:	add    bl,BYTE PTR [esi]
  425c62:	mov    al,0xbc
  425c64:	cwde   
  425c65:	jl     0x425cac
  425c67:	inc    esi
  425c68:	inc    esi
  425c69:	mov    eax,0xfc18bb75
  425c6e:	push   ebp
  425c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c70:	inc    esi
  425c71:	arpl   WORD PTR [edx-0x6d64233a],sp
  425c77:	xchg   esp,eax
  425c78:	dec    ebx
  425c79:	add    edx,esp
  425c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c7c:	jecxz  0x425c58
  425c7e:	cs cli 
  425c80:	into   
  425c81:	mov    bl,BYTE PTR [ebp+0x6ec6b4f5]
  425c87:	or     eax,DWORD PTR [ecx+eiz*8]
  425c8a:	adc    BYTE PTR [ebp-0x4b0b5a3f],0xad
  425c91:	pop    eax
  425c92:	call   0xe4e0:0x673f87b5
  425c99:	add    ebp,DWORD PTR [ecx+0x26]
  425c9c:	add    DWORD PTR [eax+0x5d],esi
  425c9f:	mov    eax,0x5f5ae303
  425ca4:	sbb    DWORD PTR [esi+ebx*1+0x15],edi
  425ca8:	and    BYTE PTR [ecx-0x5f1760e1],dh
  425cae:	ror    BYTE PTR [edi],1
  425cb0:	dec    eax
  425cb1:	and    al,0x32
  425cb3:	xchg   edi,eax
  425cb4:	pop    es
  425cb5:	xchg   edx,eax
  425cb6:	cmp    eax,0xfe63d9ee
  425cbb:	int    0x27
  425cbd:	xchg   esp,eax
  425cbe:	xchg   edx,eax
  425cbf:	xor    dl,BYTE PTR [esi+ebp*8]
  425cc2:	ret    
  425cc3:	pusha  
  425cc4:	sbb    al,0x4e
  425cc6:	xchg   edi,eax
  425cc7:	rol    cl,1
  425cc9:	or     al,0xc8
  425ccb:	jnp    0x425c55
  425ccd:	das    
  425cce:	jmp    0x425d1c
  425cd0:	fst    QWORD PTR [ebp+0x62d777da]
  425cd6:	int    0x70
  425cd8:	inc    ebx
  425cd9:	std    
  425cda:	mov    bh,0xc0
  425cdc:	mov    ch,0xfd
  425cde:	cli    
  425cdf:	out    dx,eax
  425ce0:	mov    DWORD PTR [ebx],esi
  425ce2:	(bad)  
  425ce3:	mov    bh,0x26
  425ce5:	hlt    
  425ce6:	out    0x25,eax
  425ce8:	xchg   BYTE PTR [esi],dl
  425cea:	mov    es,esp
  425cec:	push   esp
  425cee:	inc    ebp
  425cef:	mov    ebx,0xd381d096
  425cf4:	mov    eax,0x8f915a30
  425cf9:	sub    al,0x29
  425cfb:	lds    ebx,FWORD PTR es:[ebx]
  425cfe:	scas   eax,DWORD PTR es:[edi]
  425cff:	cmp    DWORD PTR [edi-0x51],ebp
  425d02:	mov    eax,ds:0xccbc8e6e
  425d07:	arpl   WORD PTR [edx+0x6ad09cce],bx
  425d0d:	nop
  425d0e:	aaa    
  425d0f:	jnp    0x425cf8
  425d11:	imul   eax,esi,0xffffff98
  425d14:	cs popf 
  425d16:	and    BYTE PTR [ebp-0x1bb25f72],cl
  425d1c:	dec    BYTE PTR [edx]
  425d1e:	rol    BYTE PTR [esi],1
  425d20:	ret    
  425d21:	dec    ecx
  425d22:	add    eax,0xc00c8b62
  425d27:	sbb    BYTE PTR [eax+0x61],ch
  425d2a:	(bad)  
  425d2b:	ds mov esp,0x8b718ac6
  425d31:	push   edi
  425d32:	or     BYTE PTR [eax-0x320c284c],ch
  425d38:	push   cs
  425d39:	xor    bh,al
  425d3b:	mul    edx
  425d3d:	add    al,ah
  425d3f:	lods   eax,DWORD PTR ds:[esi]
  425d40:	std    
  425d41:	add    eax,eax
  425d43:	in     eax,0xc7
  425d45:	je     0x425d8d
  425d47:	push   esi
  425d48:	dec    eax
  425d49:	je     0x425d32
  425d4b:	jae    0x425d8e
  425d4d:	jg     0x425d9b
  425d4f:	imul   esi
  425d51:	pop    ebx
  425d52:	mov    ch,0x9d
  425d54:	xor    ebp,0xb4d637b8
  425d5a:	ins    BYTE PTR es:[edi],dx
  425d5b:	(bad)  
  425d5c:	xlat   BYTE PTR ds:[ebx]
  425d5d:	mov    ss,WORD PTR [ebp+ebp*1-0x69]
  425d61:	into   
  425d62:	outs   dx,BYTE PTR ds:[esi]
  425d63:	mov    dl,0xf5
  425d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d66:	(bad)  
  425d67:	stc    
  425d68:	(bad)  
  425d69:	enter  0x52ff,0xd2
  425d6d:	add    ebx,esi
  425d6f:	xlat   BYTE PTR ds:[ebx]
  425d70:	pop    es
  425d71:	and    al,0xf9
  425d73:	jne    0x425de8
  425d75:	enter  0xa8b0,0xb9
  425d79:	scas   al,BYTE PTR es:[edi]
  425d7a:	inc    ebp
  425d7b:	fwait
  425d7c:	sbb    BYTE PTR [ebx+0x2c],0xe9
  425d80:	(bad)  
  425d81:	mov    edi,0xfefc7f35
  425d86:	xchg   ch,al
  425d88:	test   BYTE PTR [ecx+0x300b3dc9],al
  425d8e:	loopne 0x425d36
  425d90:	mov    ds:0x6d5caaf8,al
  425d95:	je     0x425d20
  425d97:	push   0xffffffd5
  425d99:	sub    bl,BYTE PTR [eax]
  425d9b:	loop   0x425dec
  425d9d:	xchg   DWORD PTR [esi-0x12],esp
  425da0:	or     ebx,DWORD PTR [ebp+0x4b]
  425da3:	mov    bl,0x55
  425da5:	mov    ebx,DWORD PTR [ebp-0x65]
  425da8:	lahf   
  425da9:	jnp    0x425ded
  425dab:	mov    bl,0x74
  425dad:	push   ss
  425dae:	in     eax,0xc3
  425db0:	jp     0x425dc4
  425db2:	repz imul esp,DWORD PTR fs:[esi-0x2f],0xffffffd1
  425db8:	cmp    DWORD PTR [ebp+ecx*2+0x47],esi
  425dbc:	in     al,0x88
  425dbe:	int    0x55
  425dc0:	scas   al,BYTE PTR es:[edi]
  425dc1:	jecxz  0x425e2c
  425dc3:	add    DWORD PTR [ebx-0x1a],ebx
  425dc6:	scas   eax,DWORD PTR es:[edi]
  425dc7:	shr    bh,1
  425dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dca:	push   ss
  425dcb:	push   esi
  425dcc:	arpl   WORD PTR [eax+0x42171e6c],bp
  425dd2:	mov    bl,0x57
  425dd4:	enter  0xae66,0x26
  425dd8:	cmp    BYTE PTR [ecx-0x44],cl
  425ddb:	pop    esp
  425ddc:	ds mov ah,0x19
  425ddf:	mov    eax,0x4825059c
  425de4:	mov    cl,BYTE PTR fs:[ecx-0x634f38c6]
  425deb:	inc    BYTE PTR [esi+0x3c]
  425dee:	xor    al,0x85
  425df0:	mov    BYTE PTR [ecx+0x31],al
  425df3:	data16 xor BYTE PTR [eax-0x47],cl
  425df7:	adc    eax,0x39598bb8
  425dfc:	in     al,0x84
  425dfe:	fadd   st,st(1)
  425e00:	test   ah,bl
  425e02:	(bad)  
  425e04:	dec    ecx
  425e05:	ret    
  425e06:	adc    bh,BYTE PTR [ebp-0x4d]
  425e09:	mov    edx,0x463b45fd
  425e0e:	dec    eax
  425e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e10:	cs leave 
  425e12:	push   edi
  425e13:	dec    esi
  425e14:	dec    esi
  425e15:	jmp    0x425e22
  425e17:	xchg   ebp,eax
  425e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e19:	outs   dx,DWORD PTR ds:[esi]
  425e1a:	push   ss
  425e1b:	sbb    BYTE PTR [ecx-0x1b],ch
  425e1e:	add    eax,0xe34e1701
  425e23:	js     0x425dd1
  425e25:	xchg   esi,eax
  425e26:	pop    edx
  425e27:	cwde   
  425e28:	jo     0x425df4
  425e2a:	sub    edx,ebx
  425e2c:	adc    DWORD PTR [ebx-0x56],esp
  425e2f:	sbb    al,0xd6
  425e31:	test   DWORD PTR [esi-0x120834b7],ebx
  425e37:	fs pop eax
  425e39:	cmp    cl,ah
  425e3b:	retf   
  425e3c:	inc    BYTE PTR [eax]
	...
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x13
  425e57:	pop    ebx
  425e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e59:	mov    DWORD PTR [ebx-0x15],edi
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	jnp    0x425e66
  425e60:	add    BYTE PTR [eax],al
  425e62:	mov    bl,0xc3
  425e64:	pop    ebx
  425e65:	imul   ecx,DWORD PTR [edx+0x4e],0xffffff88
  425e69:	pop    ebp
  425e6a:	pop    ss
  425e6b:	retf   
  425e6c:	adc    bh,ah
  425e6e:	ja     0x425eac
  425e70:	push   ds
  425e71:	add    bh,BYTE PTR [edx+0x21]
  425e74:	les    ecx,FWORD PTR [ebx+0x69]
  425e77:	jecxz  0x425eb5
  425e79:	loopne 0x425e54
  425e7b:	and    BYTE PTR [edx+0x55aca9e9],0xe2
  425e82:	aas    
  425e83:	fdecstp 
  425e85:	inc    esi
  425e86:	es adc eax,esi
  425e89:	ret    
  425e8a:	dec    ebx
  425e8b:	stc    
  425e8c:	xor    al,0xee
  425e8e:	repz cdq 
  425e90:	scas   al,BYTE PTR es:[edi]
  425e91:	and    bh,ah
  425e93:	or     eax,0x8c30ed37
  425e98:	sub    dl,dh
  425e9a:	loop   0x425ee8
  425e9c:	leave  
  425e9d:	imul   esp,ebp,0xffffffda
  425ea0:	or     DWORD PTR [ebx+0x3c],ebx
  425ea3:	not    DWORD PTR [edi+edx*4-0x4c9f84e8]
  425eaa:	repnz mov dh,0x71
  425ead:	pop    ebp
  425eae:	sar    DWORD PTR ds:0x9843f15a,0x6c
  425eb5:	scas   eax,DWORD PTR es:[edi]
  425eb6:	cmp    bh,BYTE PTR [ebp+0x310e680e]
  425ebc:	dec    ebp
  425ebd:	and    BYTE PTR [edx-0x1a],dh
  425ec0:	pusha  
  425ec1:	xchg   esp,eax
  425ec2:	(bad)  
  425ec3:	sbb    al,0xe9
  425ec5:	xlat   BYTE PTR ds:[ebx]
  425ec6:	mov    edi,0xb66c94f4
  425ecb:	leave  
  425ecc:	xchg   bh,bh
  425ece:	cmp    BYTE PTR [eax],ch
  425ed0:	repz push esp
  425ed2:	mov    eax,0x89ea047
  425ed7:	pop    ecx
  425ed8:	popf   
  425ed9:	sub    al,0x7e
  425edb:	or     eax,0x901ff18f
  425ee0:	jae    0x425f11
  425ee2:	cld    
  425ee3:	daa    
  425ee4:	call   0x2067f675
  425ee9:	jbe    0x425f29
  425eeb:	cmp    DWORD PTR [ebx-0x4734902b],esi
  425ef1:	mov    eax,ds:0x6f256f4
  425ef6:	div    DWORD PTR ds:0x54078f76
  425efc:	mov    cl,0x9f
  425efe:	aad    0x5d
  425f00:	loop   0x425f5f
  425f02:	fisttp DWORD PTR [ebx]
  425f04:	cmp    DWORD PTR [edx-0x15],0x40
  425f08:	unpckhps xmm4,XMMWORD PTR [esi-0x3bc05803]
  425f0f:	or     al,0x2a
  425f11:	pop    ds
  425f12:	cld    
  425f13:	(bad)  
  425f14:	in     eax,0xa0
  425f16:	push   ebp
  425f17:	repnz adc eax,0x33f52bbc
  425f1d:	sahf   
  425f1e:	jbe    0x425f39
  425f20:	sar    DWORD PTR [esi],cl
  425f22:	int    0xf9
  425f24:	in     eax,dx
  425f25:	test   al,0xf8
  425f27:	jnp    0x425ebe
  425f29:	aas    
  425f2a:	loopne 0x425fa7
  425f2c:	push   ecx
  425f2d:	pop    es
  425f2e:	daa    
  425f2f:	and    bh,BYTE PTR [esi+eiz*4]
  425f32:	adc    bh,BYTE PTR [ecx+0x35435dc2]
  425f38:	inc    esi
  425f39:	or     BYTE PTR [edi+0x21],0x46
  425f3d:	and    ecx,0xffffff94
  425f40:	pop    esi
  425f41:	repnz mov dl,0x11
  425f44:	int3   
  425f45:	jle    0x425f3b
  425f47:	(bad)  
  425f49:	add    edi,ebx
  425f4b:	and    dh,BYTE PTR [eax+0x4a]
  425f4e:	sbb    eax,DWORD PTR [edx-0x34]
  425f51:	inc    edi
  425f52:	nop
  425f53:	(bad)  
  425f54:	or     BYTE PTR [esi-0x47],bl
  425f57:	lds    ebx,FWORD PTR [ecx+0x2ef07ae7]
  425f5d:	xchg   esp,eax
  425f5e:	out    0x98,al
  425f60:	dec    edx
  425f61:	or     edi,esp
  425f63:	xor    al,0x2
  425f65:	imul   esi,DWORD PTR [edx+ecx*1+0x67a5b476],0x52
  425f6d:	xor    esi,DWORD PTR [ecx-0x52]
  425f70:	ror    DWORD PTR [esp+ebp*8-0x75],0xd5
  425f75:	push   es
  425f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f77:	ret    0xf0d6
  425f7a:	sub    ebp,DWORD PTR [eax]
  425f7c:	es call 0x905cd936
  425f82:	add    ch,BYTE PTR [eax+0x71]
  425f85:	aam    0x8c
  425f87:	in     eax,0xf4
  425f89:	out    dx,al
  425f8a:	dec    ebp
  425f8b:	aaa    
  425f8c:	xchg   edi,eax
  425f8d:	lds    edx,FWORD PTR [edi+0x54]
  425f90:	mov    bl,0xb4
  425f92:	into   
  425f93:	jge    0x425f83
  425f95:	mov    bl,0x13
  425f97:	std    
  425f98:	clc    
  425f99:	mov    cl,0x2a
  425f9b:	and    BYTE PTR [eax-0x302e7cfd],al
  425fa1:	test   al,0xd6
  425fa3:	or     DWORD PTR [eax+0x68],ebx
  425fa6:	add    DWORD PTR [ecx+0x73],ebp
  425fa9:	mov    ebp,0x247052bc
  425fae:	and    edx,DWORD PTR [edx+0x2f8b640]
  425fb4:	call   0xbf0f1997
  425fb9:	cmp    BYTE PTR [edi-0x16c13639],dh
  425fbf:	mov    eax,ds:0x47635787
  425fc4:	add    esp,DWORD PTR [esi-0x21]
  425fc7:	and    DWORD PTR [edi-0x72a752eb],esp
  425fcd:	pushf  
  425fce:	cmp    al,0xc0
  425fd0:	xor    BYTE PTR [ecx],bh
  425fd2:	out    0x15,eax
  425fd4:	imul   eax,DWORD PTR [esi+0x6492e0c0],0xffffffad
  425fdb:	jo     0x425f62
  425fdd:	push   0x2b95109d
  425fe2:	inc    ebx
  425fe3:	mov    bl,BYTE PTR [ebp+0x11]
  425fe6:	jg     0x425ff9
  425fe8:	mov    ebp,0xeea24b1e
  425fed:	xor    DWORD PTR [edx-0x64],eax
  425ff0:	js     0x426053
  425ff2:	dec    esp
  425ff3:	mov    ds:0x4e9c7ee3,eax
  425ff8:	lock ins BYTE PTR es:[edi],dx
  425ffa:	into   
  425ffb:	xor    al,0xce
  425ffd:	data16 or BYTE PTR [esi-0x54],bh
  426001:	xchg   cl,bl
  426003:	ret    
  426004:	pop    ebp
  426005:	sbb    dl,0xb0
  426008:	jp     0x42603f
  42600a:	inc    ebx
  42600b:	test   eax,0x97439325
  426010:	adc    DWORD PTR [ebx],eax
  426012:	stos   BYTE PTR es:[edi],al
  426013:	fdivr  DWORD PTR [ebp-0x38]
  426016:	test   al,0xe1
  426018:	mov    al,ds:0x23993e3c
  42601d:	pop    esp
  42601e:	inc    esi
  42601f:	les    esi,FWORD PTR [ebp-0x14c8060f]
  426025:	cvtps2pd xmm3,QWORD PTR [esi-0x99d27d4]
  42602c:	shl    BYTE PTR [esi],cl
  42602e:	mov    dh,0x9f
  426030:	jae    0x42601e
  426032:	test   BYTE PTR [esi-0x26b46933],cl
  426038:	enter  0x8d1d,0xc3
  42603c:	mov    ds:0x8e2641b1,al
  426041:	push   ebp
  426042:	dec    ebp
  426043:	ret    0x4eb9
  426046:	sub    al,0x5f
  426048:	sbb    DWORD PTR [ebx],ecx
  42604a:	pop    esp
  42604b:	sbb    DWORD PTR [edi],ebx
  42604d:	lock mov ah,ch
  426050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426051:	fbld   TBYTE PTR [eax]
  426053:	dec    esi
  426054:	test   al,0x64
  426056:	sbb    esi,esi
  426058:	mov    esp,0x2fb22ff2
  42605d:	into   
  42605e:	jne    0x426007
  426060:	fs mov ah,0xd0
  426063:	out    dx,eax
  426064:	shr    BYTE PTR [ebx+eiz*2-0x41],1
  426068:	mov    ds:0xc4abdb04,al
  42606d:	jge    0x426042
  42606f:	mov    eax,ds:0x51dc5b6f
  426074:	dec    esp
  426075:	mov    edx,0x33fc1096
  42607a:	adc    BYTE PTR [edx],dl
  42607c:	inc    edx
  42607d:	mov    edx,0xff34f18c
  426082:	(bad)  
  426083:	jg     0x4260bf
  426085:	lods   eax,DWORD PTR ds:[esi]
  426086:	(bad)  
  426087:	(bad)  
  426088:	inc    ebx
  426089:	and    ecx,DWORD PTR [ebp-0x68]
  42608c:	and    cl,0x43
  42608f:	mov    al,0x8
  426091:	js     0x4260d9
  426093:	shl    cl,1
  426095:	mov    eax,0x4feb9f6b
  42609a:	mov    cl,0xd4
  42609c:	in     al,0xf3
  42609e:	arpl   bp,ax
  4260a0:	int    0xd6
  4260a2:	mov    edx,0xbe07b418
  4260a7:	jecxz  0x4260d0
  4260a9:	dec    eax
  4260aa:	imul   esp,DWORD PTR [esi-0x3ced17bf],0xffffffe3
  4260b1:	enter  0xeda0,0x95
  4260b5:	retf   
  4260b6:	cmp    BYTE PTR [edx+0xa],bh
  4260b9:	shl    DWORD PTR [ecx+0x4f],0xce
  4260bd:	test   eax,0x25136cf3
  4260c2:	jns    0x426142
  4260c4:	test   eax,0xe40abc6e
  4260c9:	das    
  4260ca:	dec    eax
  4260cb:	xlat   BYTE PTR ds:[ebx]
  4260cc:	cmp    BYTE PTR [ebp+edx*1+0x68d0db9d],al
  4260d3:	inc    ebp
  4260d4:	loopne 0x426057
  4260d6:	lods   al,BYTE PTR ds:[esi]
  4260d7:	sub    al,0xb7
  4260d9:	mov    ds:0x5b30c923,eax
  4260de:	and    al,0xae
  4260e0:	(bad)  
  4260e1:	neg    DWORD PTR [eax-0x1f30ac01]
  4260e7:	add    ah,bl
  4260e9:	ret    
  4260ea:	sub    al,0x61
  4260ec:	pop    eax
  4260ed:	dec    edx
  4260ee:	xor    al,0x82
  4260f0:	sub    ebx,esp
  4260f2:	mov    edx,0x27e9abaf
  4260f7:	pop    eax
  4260f8:	add    DWORD PTR [ecx],ebp
  4260fa:	cmp    BYTE PTR [ecx+0x1a],dh
  4260fd:	or     BYTE PTR [esp+edi*2+0x10325cd4],dl
  426104:	not    BYTE PTR [ecx-0x4d]
  426107:	xor    ebx,0xffffffa2
  42610a:	in     al,0xbb
  42610c:	add    cl,BYTE PTR [edx+0x147872af]
  426112:	rcl    DWORD PTR [ecx+0x4f9084f5],0xa8
  426119:	sar    DWORD PTR [esi+0x1bf691b4],0xd8
  426120:	mov    bh,0xb2
  426122:	imul   esp,DWORD PTR [edi-0x7a8e3b4d],0xffffffc9
  426129:	inc    edi
  42612a:	pop    eax
  42612b:	sbb    eax,0xa923030d
  426130:	push   eax
  426131:	xchg   esi,eax
  426132:	mov    esp,0xf99895fd
  426137:	call   0xd6432583
  42613c:	mov    bh,0xb2
  42613e:	psllq  mm6,QWORD PTR [edi+edx*1]
  426142:	push   ebp
  426143:	mov    bl,0x25
  426145:	and    BYTE PTR [ecx+0x1],dh
  426148:	retf   
  426149:	inc    ecx
  42614a:	add    edi,DWORD PTR [eax+0x6d039ccc]
  426150:	push   ds
  426151:	out    dx,eax
  426152:	sbb    DWORD PTR [esi+0x5856cc6],edi
  426158:	push   cs
  426159:	jl     0x426188
  42615b:	fs loopne 0x426197
  42615e:	sub    eax,0x1c971423
  426163:	xor    DWORD PTR [ebx-0x6f],esi
  426166:	mov    BYTE PTR ds:0xeb597dfa,ah
  42616c:	cmp    ah,ah
  42616e:	outs   dx,BYTE PTR ds:[esi]
  42616f:	mul    DWORD PTR [eax-0x69]
  426172:	sahf   
  426173:	je     0x4261b0
  426175:	shl    BYTE PTR [ebp-0x1bddc860],cl
  42617b:	and    edi,DWORD PTR [ecx-0x20]
  42617e:	xchg   ebx,eax
  42617f:	inc    ebp
  426180:	ret    
  426181:	sbb    esp,DWORD PTR [esi-0x48]
  426184:	dec    edx
  426185:	sub    ax,0x2260
  426189:	mov    esp,ebp
  42618b:	adc    al,0xc8
  42618d:	cs add eax,0xf7367336
  426193:	mov    al,0x8d
  426195:	mul    bh
  426197:	sbb    al,0x84
  426199:	and    DWORD PTR [eax-0x6c965a79],0xfffffff1
  4261a0:	shl    edi,0x86
  4261a3:	push   ecx
  4261a4:	jp     0x426206
  4261a6:	scas   eax,DWORD PTR es:[edi]
  4261a7:	xor    al,0x95
  4261a9:	cmp    esi,DWORD PTR ds:0xd85b85a9
  4261af:	xlat   BYTE PTR ds:[ebx]
  4261b0:	xchg   edi,eax
  4261b1:	sbb    ebp,DWORD PTR [edi+0x28]
  4261b4:	and    dh,BYTE PTR [ecx+ebx*2]
  4261b7:	xchg   DWORD PTR [ecx],ebx
  4261b9:	es lock dec ebp
  4261bc:	lock cmp DWORD PTR [edi+0x498a6e18],0xffffffb0
  4261c4:	call   0x470c48bd
  4261c9:	daa    
  4261ca:	cmc    
  4261cb:	xor    ch,BYTE PTR ds:0x151ac5b9
  4261d1:	retf   
  4261d2:	test   al,0x76
  4261d4:	and    DWORD PTR [ebx-0xec19cab],ecx
  4261da:	mov    eax,0x7e0ca080
  4261df:	(bad)  
  4261e0:	cmp    bl,BYTE PTR [eax+0x7eead56a]
  4261e6:	push   ebx
  4261e7:	ror    DWORD PTR [eax+0x56],1
  4261ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261eb:	mov    esp,0xe9d593e4
  4261f0:	dec    ebp
  4261f1:	imul   ebx,DWORD PTR [ecx+0x1b],0x25
  4261f5:	pop    eax
  4261f6:	xchg   edx,eax
  4261f7:	out    0x61,al
  4261f9:	not    DWORD PTR [ebx-0x17]
  4261fc:	sub    eax,0xaf47de34
  426201:	js     0x426233
  426203:	in     eax,0xc2
  426205:	sti    
  426206:	xor    eax,0x5406b9b2
  42620b:	lods   al,BYTE PTR ds:[esi]
  42620c:	jb     0x426222
  42620e:	mov    esp,0x888d272d
  426213:	add    eax,0xe1a4dbad
  426218:	(bad)  
  426219:	push   esi
  42621a:	cmp    BYTE PTR ds:0x570a749e,dl
  426220:	mov    ah,0x42
  426222:	imul   eax,edi,0x4136d422
  426228:	ror    BYTE PTR [esp+ecx*2+0x77e0b7ee],0x1c
  426230:	adc    DWORD PTR [esi+eiz*1-0x4d],edx
  426234:	inc    eax
  426235:	fisubr DWORD PTR [ecx-0x33]
  426238:	jmp    0x426219
  42623a:	aam    0x4b
  42623c:	xor    esi,DWORD PTR [edx+0x5c]
  42623f:	ds addr16 sub al,bh
  426243:	or     ch,BYTE PTR [ecx+0xd069ffb]
  426249:	(bad)  
  42624a:	hlt    
  42624b:	dec    BYTE PTR [eax-0x35241b58]
  426251:	cdq    
  426252:	(bad)
  426255:	(bad)  
  426256:	xchg   ecx,eax
  426257:	xor    ecx,DWORD PTR [edi-0x6ccd64f6]
  42625d:	ds or  al,0x0
  426260:	std    
  426261:	add    al,0x28
  426263:	div    eax
  426265:	jmp    0x4721:0xf06f5a5
  42626c:	adc    al,0xe2
  42626e:	repz pop ds
  426270:	outs   dx,BYTE PTR ds:[esi]
  426271:	push   ss
  426272:	add    ebx,DWORD PTR [edx]
  426274:	push   ecx
  426275:	or     dh,ah
  426277:	mov    eax,0x36b27bb7
  42627c:	les    eax,FWORD PTR [edi+0x7dc438f7]
  426282:	into   
  426283:	xchg   edi,eax
  426284:	push   esp
  426285:	jbe    0x426242
  426287:	mul    cl
  426289:	loope  0x4262be
  42628b:	jle    0x426247
  42628d:	pop    ds
  42628e:	jns    0x42626b
  426290:	sbb    ebp,ebp
  426292:	in     al,0xff
  426294:	add    DWORD PTR [eax+0x6384bb87],esp
  42629a:	dec    edx
  42629b:	dec    ebp
  42629c:	sub    DWORD PTR [edx+0x8],0x7b840512
  4262a3:	sbb    esp,DWORD PTR [ebx+0x6d5b96f3]
  4262a9:	jnp    0x4262af
  4262ab:	scas   al,BYTE PTR es:[edi]
  4262ac:	mov    ch,0xf6
  4262ae:	cld    
  4262af:	push   ecx
  4262b0:	iret   
  4262b1:	enter  0x9716,0x1b
  4262b5:	add    dl,BYTE PTR [edi+0x20]
  4262b8:	and    BYTE PTR [ebx-0xf],bh
  4262bb:	mov    edi,0x3c883bd7
  4262c0:	test   al,0xa9
  4262c2:	dec    ecx
  4262c3:	push   edi
  4262c4:	dec    edx
  4262c5:	mov    cl,0x41
  4262c7:	sahf   
  4262c8:	das    
  4262c9:	or     BYTE PTR [esi+0x1f],dh
  4262cc:	xchg   ebx,eax
  4262cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262ce:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4262d0:	or     eax,0x957a1ba5
  4262d5:	mov    WORD PTR [esi],?
  4262d7:	pop    es
  4262d8:	push   edi
  4262d9:	sbb    DWORD PTR [esp+edx*1+0xd0b8d08],edx
  4262e0:	inc    eax
  4262e1:	loope  0x426328
  4262e3:	rcr    BYTE PTR [ebx+0x3f],cl
  4262e6:	push   cs
  4262e7:	or     BYTE PTR [eax+0x55],dl
  4262ea:	call   0xb4d:0x9a2859af
  4262f1:	stos   BYTE PTR es:[edi],al
  4262f2:	fdiv   QWORD PTR [eax-0x2b6ae3e]
  4262f8:	or     eax,0x470ed18c
  4262fd:	jnp    0x42628d
  4262ff:	fimul  WORD PTR es:[esi]
  426302:	cmp    DWORD PTR [eax-0x7e],ebp
  426305:	push   eax
  426306:	mov    ds:0xf08272e,eax
  42630b:	fiadd  DWORD PTR [eax-0x7c]
  42630e:	push   edx
  42630f:	out    dx,eax
  426310:	(bad)  
  426312:	mul    DWORD PTR [edx-0x193b5256]
  426318:	stos   BYTE PTR es:[edi],al
  426319:	cmp    al,0x54
  42631b:	push   ebx
  42631c:	xor    edi,DWORD PTR [ebx-0x48]
  42631f:	add    ah,BYTE PTR [edi-0x3]
  426322:	in     al,dx
  426323:	xchg   DWORD PTR [ebp+0x49e1ea6b],edx
  426329:	fidiv  WORD PTR [eax+edi*1]
  42632c:	push   ss
  42632d:	cwde   
  42632e:	push   esi
  42632f:	mov    es:0xa51920d7,eax
  426335:	shr    DWORD PTR [ebx-0x8],0x18
  426339:	mov    ecx,0xbc0cee
  42633e:	xor    dh,dh
  426340:	mul    DWORD PTR [edx+eax*8]
  426343:	shl    BYTE PTR [ebx],1
  426345:	pop    ebx
  426346:	sbb    DWORD PTR [edx-0x2f],esi
  426349:	jl     0x4262ee
  42634b:	in     eax,0xa0
  42634d:	mov    ds:0xf93d2394,al
  426352:	jp     0x4263c8
  426354:	and    al,BYTE PTR [ebx-0x555fa40e]
  42635a:	shl    dh,cl
  42635c:	nop
  42635d:	fsub   QWORD PTR [ebp-0x630c7868]
  426363:	xchg   ebx,eax
  426364:	and    al,0x70
  426366:	aad    0x63
  426368:	jecxz  0x426336
  42636a:	dec    edx
  42636b:	pop    es
  42636c:	div    edi
  42636e:	loope  0x4263a7
  426370:	pop    ecx
  426371:	rol    BYTE PTR [esi-0x1d],1
  426374:	retf   
  426375:	adc    ebx,ebp
  426377:	jl     0x426309
  426379:	fnstenv ds:0x51499420
  42637f:	fcomp  DWORD PTR [esi+0x24]
  426382:	fsub   st(7),st
  426384:	push   eax
  426385:	xchg   ecx,eax
  426386:	jle    0x426313
  426388:	(bad)
  42638b:	cmp    bh,ah
  42638d:	sbb    edx,eax
  42638f:	pop    ss
  426390:	add    BYTE PTR [edi+0x60],bh
  426393:	sbb    cl,BYTE PTR [ecx]
  426395:	sbb    DWORD PTR [ebx+0x29],0xfffffffc
  426399:	fist   DWORD PTR [edx+edx*2+0x4cce467b]
  4263a0:	cmp    DWORD PTR [ebp-0x4b4a33f],ecx
  4263a6:	test   esi,ebx
  4263a8:	mov    edi,0x3fb492f3
  4263ad:	pop    ecx
  4263ae:	test   BYTE PTR ds:0x61933c25,ah
  4263b4:	mov    dh,0x83
  4263b6:	push   edx
  4263b7:	leave  
  4263b8:	cmp    ebx,DWORD PTR [edi-0x7c527b27]
  4263be:	pop    ebx
  4263bf:	mov    cs,ecx
  4263c1:	rcl    ebx,1
  4263c3:	cdq    
  4263c4:	aad    0x9e
  4263c6:	outs   dx,BYTE PTR ds:[esi]
  4263c7:	mov    ebp,0x36df9168
  4263cc:	mov    eax,ds:0x9af1cebe
  4263d1:	out    0x48,eax
  4263d3:	aam    0x28
  4263d5:	lahf   
  4263d6:	cdq    
  4263d7:	loopne 0x426384
  4263d9:	jle    0x4263b4
  4263db:	jmp    0xe9d8:0x51889ec2
  4263e2:	(bad)
  4263e5:	push   ecx
  4263e6:	mov    WORD PTR [edi-0x28],ss
  4263e9:	gs cdq 
  4263eb:	out    dx,eax
  4263ec:	pop    ebx
  4263ed:	pop    esp
  4263ee:	faddp  st(2),st
  4263f0:	(bad)  
  4263f1:	mov    ebp,0x661fb158
  4263f6:	xchg   edx,eax
  4263f7:	es data16 (bad) 
  4263fa:	mov    ?,WORD PTR [edx]
  4263fc:	mov    cl,0x30
  4263fe:	push   es
  4263ff:	(bad)  
  426400:	clc    
  426401:	and    DWORD PTR [edx+ebp*8-0x1069420e],ebp
  426408:	std    
  426409:	test   eax,0x38aaf2ab
  42640e:	rcl    BYTE PTR [edx+0x4e097354],cl
  426414:	pop    ds
  426415:	out    0xe1,eax
  426417:	in     eax,0x86
  426419:	retf   
  42641a:	xor    ah,BYTE PTR [ebx-0x3a]
  42641d:	and    bh,BYTE PTR [esi-0x6a3717fe]
  426423:	jno    0x4263ef
  426425:	cmp    BYTE PTR [edi+0x4a],0xfd
  426429:	push   esp
  42642a:	cmc    
  42642b:	pop    esi
  42642c:	push   esi
  42642d:	arpl   dx,bp
  42642f:	retf   
  426430:	lods   al,BYTE PTR ds:[esi]
  426431:	stos   DWORD PTR es:[edi],eax
  426432:	cmp    al,0xfe
  426434:	lahf   
  426435:	and    eax,0x35e2819c
  42643a:	cmp    eax,0x703610ce
  42643f:	int    0xb7
  426441:	in     eax,dx
  426442:	jae    0x4264a9
  426444:	mov    es,WORD PTR [ecx+0x37]
  426447:	test   BYTE PTR ds:0xc39191f8,bl
  42644d:	les    edi,FWORD PTR [edi+0x14]
  426450:	test   eax,0xf6564f8
  426455:	mov    dl,0xd0
  426457:	add    al,0x40
  426459:	iret   
  42645a:	jmp    0x426411
  42645c:	push   ecx
  42645d:	add    eax,0x41f4b4f9
  426462:	xor    BYTE PTR [edi],dl
  426464:	jno    0x42646d
  426466:	push   esi
  426467:	stos   BYTE PTR es:[edi],al
  426468:	shld   DWORD PTR [eax],ebp,0x9f
  42646c:	es inc ebp
  42646e:	inc    al
  426470:	add    esp,DWORD PTR [esi]
  426472:	dec    BYTE PTR [esi-0x4c698ac9]
  426478:	fisub  DWORD PTR [esi]
  42647a:	(bad)  
  42647c:	mov    ds:0xa150e687,al
  426481:	pop    esi
  426482:	dec    esp
  426483:	jno    0x426487
  426485:	pop    esi
  426486:	xchg   al,ah
  426488:	or     al,0xa9
  42648a:	adc    BYTE PTR [edx+0x5],al
  42648d:	inc    ebp
  42648e:	data16 or BYTE PTR ds:[edx-0x1d8d7c9f],ah
  426496:	jle    0x4264be
  426498:	sbb    bh,cl
  42649a:	pop    edx
  42649b:	mov    ds:0x67b9607b,eax
  4264a0:	add    esp,DWORD PTR [ecx-0x3e40fdd0]
  4264a6:	push   esp
  4264a7:	pop    ebx
  4264a8:	stos   DWORD PTR es:[edi],eax
  4264a9:	pushf  
  4264aa:	push   esi
  4264ab:	sahf   
  4264ac:	dec    ebx
  4264ad:	push   edi
  4264ae:	aas    
  4264af:	ror    DWORD PTR [edi],0x6d
  4264b2:	fdiv   QWORD PTR [esi]
  4264b4:	sbb    BYTE PTR [edx],ch
  4264b6:	and    al,dl
  4264b8:	jnp    0x4264a0
  4264ba:	fwait
  4264bb:	stos   DWORD PTR es:[edi],eax
  4264bc:	add    DWORD PTR [ebx+0x779ad210],ebp
  4264c2:	push   ds
  4264c3:	jp     0x42648d
  4264c5:	mov    edx,0xf4da4571
  4264ca:	add    ah,BYTE PTR [ecx+0x3f]
  4264cd:	(bad)  
  4264ce:	pop    ecx
  4264cf:	call   0xa44b:0x1db90f6c
  4264d6:	jbe    0x42647f
  4264d8:	scas   al,BYTE PTR es:[edi]
  4264d9:	imul   ecx,DWORD PTR [ebp+0xbe34],0x0
	...
  4264e8:	add    BYTE PTR [eax],al
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	xor    BYTE PTR [ebp-0xe09cf36],dh
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	jnp    0x426506
  426500:	add    BYTE PTR [eax],al
  426502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426503:	sbb    al,al
  426505:	popf   
  426506:	and    ah,BYTE PTR [edx-0x6d]
  426509:	xchg   esp,eax
  42650a:	jae    0x426536
  42650c:	mov    edi,0xcd6cc33b
  426511:	in     al,dx
  426512:	pusha  
  426513:	mov    edx,0xa48af22b
  426518:	sbb    ah,BYTE PTR [ebp+0x76a24fe]
  42651e:	push   ecx
  42651f:	ja     0x4264b7
  426521:	arpl   di,cx
  426523:	mov    ch,0xdb
  426525:	sbb    cl,ah
  426527:	loopne 0x426501
  426529:	xchg   esi,eax
  42652a:	jb     0x426584
  42652c:	out    0x89,eax
  42652e:	fst    DWORD PTR [eax-0x6c]
  426531:	mov    esp,0x28fdae6
  426536:	pop    edx
  426537:	cli    
  426538:	and    BYTE PTR [edx],bl
  42653a:	mov    dl,0x95
  42653c:	and    DWORD PTR [ebx-0xc1d7b79],0xd01f7268
  426546:	jge    0x4265a7
  426548:	push   esi
  426549:	into   
  42654a:	sub    DWORD PTR [edi-0x422e1034],edi
  426550:	cmp    DWORD PTR [edx],esp
  426552:	mov    bh,0x77
  426554:	sub    dh,BYTE PTR [ecx+edi*4+0x60]
  426558:	dec    ebp
  426559:	sub    al,0x4c
  42655b:	in     eax,0xd5
  42655d:	in     al,0xe3
  42655f:	cs pop es
  426561:	fdiv   QWORD PTR [ebx+0x6813c114]
  426567:	jecxz  0x4265d6
  426569:	not    al
  42656b:	scas   eax,DWORD PTR es:[edi]
  42656c:	dec    esi
  42656d:	shl    BYTE PTR [eax+0x113a1a11],cl
  426573:	shl    DWORD PTR [edx-0x71],cl
  426576:	dec    esi
  426577:	cld    
  426578:	adc    BYTE PTR [ecx+0xc],al
  42657b:	push   esi
  42657c:	push   ebx
  42657d:	adc    al,0xfa
  42657f:	inc    edx
  426580:	add    al,0x5f
  426582:	mov    DWORD PTR [ebp+edx*4-0x51],esp
  426586:	push   edi
  426587:	das    
  426588:	iret   
  426589:	xchg   BYTE PTR [ecx+ebx*1+0x9c8ea60],bh
  426590:	jge    0x426590
  426592:	mov    al,ds:0x7643b73e
  426597:	lods   al,BYTE PTR ds:[esi]
  426598:	push   0xffffff82
  42659a:	test   eax,0xed25d0a8
  42659f:	xor    al,0x7d
  4265a1:	sbb    DWORD PTR [edi],ebx
  4265a3:	jb     0x4265ac
  4265a5:	(bad)  
  4265a6:	xchg   edi,eax
  4265a7:	adc    eax,DWORD PTR [edx-0x19]
  4265aa:	pop    edx
  4265ab:	pop    esp
  4265ac:	add    edi,ecx
  4265ae:	test   eax,0xa903aeac
  4265b3:	add    eax,0x7a90ff82
  4265b8:	xchg   esp,eax
  4265b9:	push   esi
  4265ba:	retf   
  4265bb:	fwait
  4265bc:	daa    
  4265bd:	test   DWORD PTR [esi-0x24],edi
  4265c0:	and    DWORD PTR [ebp-0x6],edx
  4265c3:	jmp    0x42660d
  4265c5:	or     DWORD PTR [ecx],0x27
  4265c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265c9:	and    ebx,edi
  4265cb:	ins    DWORD PTR es:[edi],dx
  4265cc:	jb     0x42661c
  4265ce:	mov    esi,0xe4a51de6
  4265d3:	jns    0x42663e
  4265d5:	or     dl,bl
  4265d7:	sub    al,BYTE PTR [edx]
  4265d9:	daa    
  4265da:	jecxz  0x426643
  4265dc:	dec    edi
  4265dd:	mov    dl,0x5a
  4265df:	sbb    BYTE PTR [esi+0x49],bh
  4265e2:	pop    esi
  4265e3:	inc    edi
  4265e4:	xchg   ebx,eax
  4265e5:	cdq    
  4265e6:	imul   edx,DWORD PTR [eax],0xfffffffd
  4265e9:	pop    eax
  4265ea:	adc    BYTE PTR [edi+0xa],0x6e
  4265ee:	out    0x37,eax
  4265f0:	ins    BYTE PTR es:[edi],dx
  4265f1:	out    dx,eax
  4265f2:	fsub   QWORD PTR ds:0x6675e479
  4265f8:	enter  0xe025,0x70
  4265fc:	in     eax,dx
  4265fd:	jle    0x4265ee
  4265ff:	lea    ecx,[ebx]
  426601:	cdq    
  426602:	leave  
  426603:	jmp    0x4265b7
  426605:	repnz xchg ebp,eax
  426607:	mov    ds:0x1abd4695,eax
  42660c:	pop    ebp
  42660d:	leave  
  42660e:	leave  
  42660f:	sahf   
  426610:	inc    esp
  426611:	push   es
  426612:	or     esp,DWORD PTR [ebx-0x55d49e25]
  426618:	call   0x689c3647
  42661d:	adc    al,0xe6
  42661f:	mov    eax,ds:0x8c01e846
  426624:	pop    edi
  426625:	jg     0x4265b8
  426627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426628:	push   edi
  426629:	mov    ds:0xee233ad6,al
  42662e:	jge    0x426620
  426630:	jns    0x4266ae
  426632:	mov    eax,0x16c2c1e1
  426637:	mov    eax,ds:0xd4f9b503
  42663c:	popf   
  42663d:	gs stos DWORD PTR es:[edi],eax
  42663f:	xchg   BYTE PTR [esi-0x5f870a8e],dh
  426645:	xlat   BYTE PTR ds:[ebx]
  426646:	mov    bh,0x0
  426648:	sub    eax,eax
  42664a:	and    eax,0x2f76cbfd
  42664f:	sub    eax,0xdcc52eba
  426654:	mov    DWORD PTR [ebx],esp
  426656:	ja     0x4266b7
  426658:	mov    ah,0xb6
  42665a:	xor    al,0x9a
  42665c:	inc    edi
  42665d:	ficomp WORD PTR [ebx]
  42665f:	hlt    
  426660:	sbb    ebx,DWORD PTR [edx+ecx*8]
  426663:	mov    ds:0xcfb877ae,eax
  426668:	mov    ds:0x9c695006,al
  42666d:	pop    esp
  42666e:	xchg   esi,eax
  42666f:	test   eax,0x8ac5987d
  426674:	xor    ch,al
  426676:	sub    DWORD PTR [edi],esi
  426678:	dec    esi
  426679:	cmp    DWORD PTR [ecx+edx*8+0x12],0x40b51dd6
  426681:	mov    eax,DWORD PTR [ebx-0x5b]
  426684:	or     eax,DWORD PTR [edx-0x72]
  426687:	ss cmp eax,0x2b8f1644
  42668d:	popa   
  42668e:	fstp   QWORD PTR [edx+0x5ea24c78]
  426694:	es push ebx
  426696:	inc    esp
  426697:	xor    BYTE PTR [ebp+0x286556d1],cl
  42669d:	ja     0x4266d0
  42669f:	xor    BYTE PTR [eax+0x57],dl
  4266a2:	loop   0x42662d
  4266a4:	repz jno 0x42665c
  4266a7:	mov    ah,0xfd
  4266a9:	cmp    eax,0x87adfb47
  4266ae:	loopne 0x4266e5
  4266b0:	(bad)  
  4266b1:	pop    esi
  4266b2:	dec    esp
  4266b3:	les    ecx,FWORD PTR [ebx-0x2a05a836]
  4266b9:	fld    QWORD PTR [edi-0x19]
  4266bc:	dec    edi
  4266bd:	lahf   
  4266be:	push   eax
  4266bf:	je     0x426710
  4266c1:	adc    BYTE PTR [eax],0xc8
  4266c4:	fidiv  DWORD PTR [edx+0x1e6ec780]
  4266ca:	mov    ebp,DWORD PTR [ecx-0x35c8a4f0]
  4266d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d1:	push   ebp
  4266d2:	loopne 0x4266af
  4266d4:	call   0x95d:0xcc5801dd
  4266db:	popa   
  4266dc:	push   edx
  4266dd:	ins    BYTE PTR es:[edi],dx
  4266de:	cmp    DWORD PTR [esi+0x66],edx
  4266e1:	cli    
  4266e2:	adc    al,0xb0
  4266e4:	ret    
  4266e5:	pop    esp
  4266e6:	out    dx,eax
  4266e7:	in     al,dx
  4266e8:	or     BYTE PTR [edi-0x63],bh
  4266eb:	xchg   esi,eax
  4266ec:	fwait
  4266ed:	sub    eax,0x573b96e9
  4266f2:	ror    DWORD PTR ds:0x820a0e55,1
  4266f8:	in     eax,dx
  4266f9:	or     esi,ebp
  4266fb:	mov    bh,0xf3
  4266fd:	(bad)  
  4266fe:	out    0x48,al
  426700:	rol    DWORD PTR ds:0x5f8ed023,cl
  426706:	lods   al,BYTE PTR ds:[esi]
  426707:	cmp    edx,esi
  426709:	shr    DWORD PTR [ecx+0x6b],1
  42670c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42670d:	jbe    0x4266e8
  42670f:	push   ebp
  426710:	pop    esp
  426711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426712:	mov    ebp,ecx
  426714:	pop    eax
  426715:	cmp    edi,ebx
  426717:	push   ebp
  426718:	pusha  
  426719:	jne    0x42677a
  42671b:	daa    
  42671c:	iret   
  42671d:	bnd ret 
  42671f:	mov    ecx,0x2928347b
  426724:	adc    al,BYTE PTR [esi]
  426726:	jns    0x4267a2
  426728:	xor    BYTE PTR [edi],cl
  42672a:	pop    ecx
  42672b:	cdq    
  42672c:	enter  0xc65b,0xf8
  426730:	xchg   DWORD PTR [edx-0x4f],esp
  426733:	inc    ebp
  426734:	popf   
  426735:	add    edx,eax
  426737:	es xchg bh,bh
  42673a:	mov    dh,0x60
  42673c:	(bad)  
  42673d:	out    0x99,al
  42673f:	bound  edi,QWORD PTR [edi+0x10]
  426742:	or     cl,dl
  426744:	push   esi
  426745:	pop    ebx
  426746:	jmp    0x42675f
  426748:	test   ah,al
  42674a:	sub    eax,DWORD PTR [ecx]
  42674c:	inc    edx
  42674d:	(bad)  
  42674e:	mov    esp,0x96fdc564
  426753:	dec    edi
  426754:	rcr    DWORD PTR [ebx+0x4b3ed8ff],1
  42675a:	inc    edi
  42675b:	fwait
  42675c:	sub    ecx,ebx
  42675e:	sar    esp,cl
  426760:	cmp    DWORD PTR [edx],edi
  426762:	sub    DWORD PTR [ebx-0x2b],ebx
  426765:	xchg   ebp,eax
  426766:	lods   al,BYTE PTR gs:[esi]
  426768:	mov    ah,0x27
  42676a:	repnz sub bh,BYTE PTR [ecx+0x2c613548]
  426771:	adc    eax,0x85290c7f
  426776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426777:	xchg   BYTE PTR ds:[esi],ch
  42677a:	ins    DWORD PTR es:[edi],dx
  42677b:	push   ds
  42677c:	imul   ebp,DWORD PTR [eax-0x87abb7b],0x8
  426783:	cmp    ch,dh
  426785:	adc    dl,dh
  426787:	jge    0x426769
  426789:	imul   esp,DWORD PTR [edx],0xffffffe3
  42678c:	sbb    edi,esp
  42678e:	(bad)  
  42678f:	cmp    eax,0xd96b2007
  426794:	loop   0x4267bc
  426796:	mov    dh,0xe8
  426798:	out    dx,al
  426799:	cwde   
  42679a:	xor    eax,0xe8406bfb
  42679f:	mov    cs,edi
  4267a1:	out    0x64,al
  4267a3:	cmp    ah,dh
  4267a5:	dec    ecx
  4267a6:	or     BYTE PTR [edx],ch
  4267a8:	pcmpgtw mm1,QWORD PTR [ecx-0x613e8667]
  4267af:	outs   dx,DWORD PTR ds:[esi]
  4267b0:	into   
  4267b1:	adc    dh,ch
  4267b3:	imul   eax,DWORD PTR [eax+0x2b],0x50f9eb6
  4267ba:	pop    esi
  4267bb:	xchg   esp,eax
  4267bc:	mov    ecx,0x5f7f5831
  4267c1:	or     al,0xb9
  4267c3:	push   esi
  4267c4:	jg     0x42678e
  4267c6:	adc    ebp,DWORD PTR [ebx]
  4267c8:	sbb    al,0xaa
  4267ca:	xor    DWORD PTR [ebp-0x92c34a1],ecx
  4267d0:	mov    ah,0x77
  4267d2:	fisttp QWORD PTR [edx-0x1f18daad]
  4267d8:	ror    DWORD PTR ds:0x4b311988,1
  4267de:	xchg   edi,eax
  4267df:	not    DWORD PTR [edi+edx*1+0x38]
  4267e3:	xlat   BYTE PTR ds:[ebx]
  4267e4:	retf   0xe52a
  4267e7:	inc    edx
  4267e8:	sbb    al,0xb7
  4267ea:	js     0x4267e1
  4267ec:	pop    ebp
  4267ed:	ret    
  4267ee:	(bad)  
  4267f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f1:	test   DWORD PTR [edx+0x70],eax
  4267f4:	je     0x42678d
  4267f6:	xchg   bh,al
  4267f8:	mov    ecx,0xd65b1014
  4267fd:	mov    esi,0xc55bbb24
  426802:	bound  esi,QWORD PTR [ebx-0x3bf4715]
  426808:	dec    esi
  426809:	daa    
  42680a:	xchg   edi,eax
  42680b:	mov    ebx,edx
  42680d:	dec    esp
  42680e:	or     BYTE PTR [edx+0x67658613],bh
  426814:	vmread DWORD PTR [esp+ebp*8-0x268de674],eax
  42681c:	ja     0x426857
  42681e:	xchg   ebp,eax
  42681f:	out    dx,al
  426820:	xor    eax,0xdf22ee2d
  426825:	push   ds
  426826:	xlat   BYTE PTR ds:[ebx]
  426827:	xor    DWORD PTR [edx-0x16],edi
  42682a:	mov    al,0xfe
  42682c:	sbb    ch,BYTE PTR [di-0x3069]
  426831:	enter  0xee96,0x68
  426835:	pop    ebp
  426836:	adc    BYTE PTR [edx],bh
  426838:	(bad)  
  426839:	lock sti 
  42683b:	push   ebp
  42683c:	stc    
  42683d:	fsubr  DWORD PTR [ebx+0x24]
  426840:	ret    0x2a58
  426843:	inc    ebp
  426844:	cmp    DWORD PTR [ecx+0x5904a598],edi
  42684a:	mov    ch,0xd4
  42684c:	sahf   
  42684d:	in     al,0x80
  42684f:	xchg   BYTE PTR [eax*2+0x72dcc52a],dl
  426856:	cmc    
  426857:	vpmadcsswd xmm1,xmm0,xmm0,XMMWORD PTR [ebx-0x1b]
  42685e:	out    0xe4,eax
  426860:	aaa    
  426861:	mov    bl,0x7e
  426863:	sbb    ebp,DWORD PTR [ecx]
  426865:	sub    BYTE PTR [edi+edi*1-0x46],ch
  426869:	(bad)  
  42686a:	popa   
  42686b:	sub    al,0x93
  42686d:	add    al,0x1b
  42686f:	cmp    ebp,DWORD PTR [eax]
  426871:	pushf  
  426872:	leave  
  426873:	test   al,0x85
  426875:	stos   DWORD PTR es:[edi],eax
  426876:	sub    BYTE PTR [edi+0x224d0859],bh
  42687c:	push   eax
  42687d:	in     al,0x70
  42687f:	repz jp 0x4268e1
  426882:	push   edx
  426883:	test   DWORD PTR [ecx-0x71],ebp
  426886:	mov    BYTE PTR [esi-0x33c1f2fb],0x9
  42688d:	dec    edx
  42688e:	dec    esi
  42688f:	mov    ebp,0xbd3547c3
  426894:	repz mov ecx,0x57ef3edd
  42689a:	sub    ah,BYTE PTR [edx+0x51]
  42689d:	adc    DWORD PTR [eax-0x22663078],esi
  4268a3:	outs   dx,DWORD PTR ds:[esi]
  4268a4:	stos   BYTE PTR es:[edi],al
  4268a5:	jecxz  0x4268da
  4268a7:	std    
  4268a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a9:	xor    eax,0xd12a3017
  4268ae:	sbb    ecx,DWORD PTR [edx-0x51]
  4268b1:	mov    si,sp
  4268b4:	sbb    al,0x2a
  4268b6:	push   ecx
  4268b7:	mov    esi,DWORD PTR [ebx+edi*8+0x6]
  4268bb:	lods   eax,DWORD PTR ds:[esi]
  4268bc:	sar    BYTE PTR [edi-0x6a],0xc7
  4268c0:	mov    ecx,DWORD PTR [eax-0x1b]
  4268c3:	push   ds
  4268c4:	mov    ah,0x3c
  4268c6:	xlat   BYTE PTR ds:[ebx]
  4268c7:	fwait
  4268c8:	inc    eax
  4268c9:	cld    
  4268ca:	fmul   DWORD PTR [esi-0x585f1126]
  4268d0:	mov    ds:0xe9e0c60a,al
  4268d5:	cs repnz sbb eax,0x2463cad9
  4268dc:	push   cs
  4268dd:	adc    edx,edx
  4268df:	lea    esp,[ebx+0x1ee97fe0]
  4268e5:	fcomp  QWORD PTR [ecx]
  4268e7:	mov    edi,0x3d9ec71a
  4268ec:	push   ss
  4268ed:	test   BYTE PTR [edx-0x42cb1537],ah
  4268f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268f4:	ret    0x50de
  4268f7:	mov    DWORD PTR [esi+0x1d],esi
  4268fa:	push   DWORD PTR [ebx+0x32c30713]
  426900:	mov    ebx,0x23e35c42
  426905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426906:	popf   
  426907:	call   0x506f7343
  42690c:	popa   
  42690d:	push   esp
  42690e:	jne    0x4268bb
  426910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426911:	retf   0x761a
  426914:	and    bh,BYTE PTR [esi]
  426916:	shr    ebx,0xc
  426919:	push   0xfffffff4
  42691b:	sub    ecx,DWORD PTR [edi-0x20]
  42691e:	jge    0x42690f
  426920:	nop
  426921:	fadd   DWORD PTR ds:0x26ba77d5
  426927:	lods   al,BYTE PTR ds:[esi]
  426928:	pop    eax
  426929:	push   ebp
  42692a:	(bad)  
  42692b:	shr    DWORD PTR [eax+ebp*1+0x6c7cd33c],cl
  426932:	and    al,0x80
  426934:	(bad)  
  426935:	in     eax,dx
  426936:	dec    esi
  426937:	iret   
  426938:	in     al,0x90
  42693a:	or     al,0x83
  42693c:	outs   dx,DWORD PTR ds:[esi]
  42693e:	test   BYTE PTR [eax],cl
  426940:	into   
  426941:	and    ebx,eax
  426943:	jns    0x4269bb
  426945:	or     ebx,DWORD PTR [edx+0x2cd9a4f4]
  42694b:	pusha  
  42694c:	cwde   
  42694d:	or     BYTE PTR [edx],0xf
  426950:	add    al,0x17
  426952:	adc    DWORD PTR [edi],edi
  426954:	(bad)  
  426955:	pop    esi
  426956:	addr16 aas 
  426958:	in     eax,0xa0
  42695a:	dec    eax
  42695b:	loope  0x426932
  42695d:	xlat   BYTE PTR ds:[ebx]
  42695e:	lock or al,BYTE PTR [ebx+0x5f99e2e6]
  426965:	cdq    
  426966:	imul   ebp,DWORD PTR [edx],0x7b3b9f34
  42696c:	neg    BYTE PTR [ecx]
  42696e:	out    0x7c,al
  426970:	in     al,0x2f
  426972:	sub    DWORD PTR [esi],eax
  426974:	jge    0x426947
  426976:	dec    ebx
  426977:	stc    
  426978:	xchg   edi,eax
  426979:	xchg   edi,eax
  42697a:	mov    ebp,0x28150d88
  42697f:	fld    QWORD PTR [edi+ecx*8+0x16]
  426983:	jne    0x426939
  426985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426986:	fnsave ds:0x6d50f204
  42698c:	adc    bl,BYTE PTR [ebp-0x6831549d]
  426992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426993:	jmp    0xbeec:0xd11256f8
  42699a:	jmp    0x660a:0xb4fad973
  4269a1:	es int3 
  4269a3:	mov    esi,0x808cb618
  4269a8:	push   ss
  4269a9:	fidivr DWORD PTR es:[ecx]
  4269ac:	xchg   ecx,eax
  4269ad:	cmp    ch,BYTE PTR [ebx]
  4269af:	mov    bh,0xc5
  4269b1:	mov    DWORD PTR [edx],esp
  4269b3:	cmp    bl,dh
  4269b5:	adc    eax,DWORD PTR [eax-0x41]
  4269b8:	jne    0x4269cc
  4269ba:	mov    edi,esp
  4269bc:	cs int3 
  4269be:	xchg   esi,eax
  4269bf:	pop    ebx
  4269c0:	out    dx,eax
  4269c1:	out    dx,eax
  4269c2:	adc    al,0x85
  4269c4:	fisub  DWORD PTR [ecx-0x6c4617ad]
  4269ca:	xor    ax,0x715d
  4269ce:	fnstsw WORD PTR [ecx-0x5d183d68]
  4269d4:	lods   al,BYTE PTR ds:[esi]
  4269d5:	div    DWORD PTR [ebp-0x30b55b6a]
  4269db:	add    BYTE PTR [esi],al
  4269dd:	push   ebp
  4269de:	retf   
  4269df:	jmp    0xefb0d1d2
  4269e4:	out    0x9e,eax
  4269e6:	das    
  4269e7:	mov    ch,0x32
  4269e9:	cmp    al,0x78
  4269eb:	(bad)  
  4269ec:	xor    eax,0xd9d2ee42
  4269f1:	mov    cl,0xbd
  4269f3:	arpl   WORD PTR [esi+0x40],bx
  4269f6:	mov    DWORD PTR [edi-0x5],0xb719d965
  4269fd:	cmp    dl,BYTE PTR [ebp-0x7e]
  426a00:	rcr    BYTE PTR [esi-0x1e],0x23
  426a04:	cdq    
  426a05:	js     0x7bf0b7bd
  426a0b:	mov    eax,0xce6caee
  426a10:	sbb    DWORD PTR [eax-0x7ea9f0d9],ebp
  426a16:	in     eax,dx
  426a17:	dec    ebx
  426a18:	or     edx,DWORD PTR [eax-0x52f870f2]
  426a1e:	inc    ebp
  426a1f:	je     0x4269b3
  426a21:	ret    0x3393
  426a24:	xor    DWORD PTR [ebp+0x4653b1ad],0xffffffee
  426a2b:	push   ds
  426a2c:	test   DWORD PTR [edi-0x3e83f85d],edi
  426a32:	ds and al,0xaa
  426a35:	aaa    
  426a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a37:	fdivp  st(0),st
  426a39:	not    DWORD PTR [ebp-0x452b8295]
  426a3f:	in     eax,0x93
  426a41:	pushf  
  426a42:	sar    BYTE PTR [esi+0x3eee5014],0x7c
  426a49:	cdq    
  426a4a:	js     0x426a7d
  426a4c:	ins    DWORD PTR es:[edi],dx
  426a4d:	pop    ss
  426a4e:	jbe    0x426a2c
  426a50:	pop    edx
  426a51:	repz mov al,0xaa
  426a54:	nop
  426a55:	sub    dl,BYTE PTR [eax]
  426a57:	sbb    ecx,DWORD PTR [eax-0x55340319]
  426a5d:	pop    ss
  426a5e:	mov    ecx,0x6c5ba71f
  426a63:	adc    DWORD PTR [edx-0x61d58110],0x773100c3
  426a6d:	cmp    ebx,DWORD PTR [ebx+0x5347cf75]
  426a73:	sub    eax,0xf10fde87
  426a78:	and    eax,0xbb627033
  426a7d:	jg     0x426af6
  426a7f:	xchg   ecx,eax
  426a80:	cmp    al,0x14
  426a82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a83:	jecxz  0x426a5e
  426a85:	add    ebx,DWORD PTR [ecx+0x79]
  426a88:	inc    edx
  426a89:	jmp    DWORD PTR [edx]
  426a8b:	imul   edx,DWORD PTR [edx+0x1a],0x50bd1b42
  426a92:	mul    DWORD PTR [edx]
  426a94:	mov    edx,0xda16dd3a
  426a99:	imul   edi,edi,0x63c87adc
  426a9f:	or     DWORD PTR [ebp+0x3f0f3968],0xffffffc6
  426aa6:	sub    eax,0x5b5caa29
  426aab:	push   esi
  426aac:	sahf   
  426aad:	jmp    0x426ae5
  426aaf:	lods   al,BYTE PTR ds:[esi]
  426ab0:	add    DWORD PTR [esi-0x26],edi
  426ab3:	cs pop ecx
  426ab5:	xchg   esi,eax
  426ab6:	push   cs
  426ab7:	icebp  
  426ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ab9:	outs   dx,BYTE PTR ds:[esi]
  426aba:	push   esp
  426abb:	jns    0x426a4c
  426abd:	fsubr  DWORD PTR [eax-0x217f834a]
  426ac3:	test   eax,0x8a7aa583
  426ac9:	pusha  
  426aca:	sbb    ebp,DWORD PTR [eax-0x33821d76]
  426ad0:	js     0x426b1b
  426ad2:	(bad)  
  426ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ad4:	push   0xf
  426ad6:	outs   dx,DWORD PTR ds:[esi]
  426ad7:	sbb    al,0x1e
  426ad9:	cmp    al,0x5c
  426adb:	out    dx,al
  426adc:	stos   DWORD PTR es:[edi],eax
  426add:	jmp    0x83c4:0x7f87da1d
  426ae4:	fldcw  WORD PTR [eax-0x27]
  426ae7:	ror    BYTE PTR [edi],0x29
  426aea:	jns    0x426ab4
  426aec:	loope  0x426b52
  426aee:	adc    esp,DWORD PTR [edi]
  426af0:	fcomp  st(2)
  426af2:	pop    eax
  426af3:	push   ebp
  426af4:	cwde   
  426af5:	std    
  426af6:	mov    al,0x7f
  426af8:	xor    BYTE PTR [edi],al
  426afa:	jmp    FWORD PTR [ecx+ebp*8-0x80]
  426afe:	jae    0x426a89
  426b00:	add    al,0xd2
  426b02:	repnz mov ch,0xa1
  426b05:	test   eax,0x912994d3
  426b0a:	push   cs
  426b0b:	test   dl,al
  426b0d:	jmp    0xf183c0dd
  426b12:	pop    eax
  426b13:	ret    0x44d
  426b16:	xor    al,0xfc
  426b18:	adc    edx,DWORD PTR [ebx+0x54e806d8]
  426b1e:	sub    ch,BYTE PTR [edi-0x50527d1]
  426b24:	aaa    
  426b25:	inc    esp
  426b26:	cmp    DWORD PTR [ebx],ebp
  426b28:	imul   esi,ebp,0x21
  426b2b:	data16 jno 0x426aed
  426b2e:	in     eax,dx
  426b2f:	leave  
  426b30:	xchg   ebx,eax
  426b31:	xor    DWORD PTR [eax-0x56],edi
  426b34:	dec    esp
  426b35:	mov    ds:0x9a6b95d4,eax
  426b3a:	das    
  426b3b:	std    
  426b3c:	push   edx
  426b3d:	rol    DWORD PTR [eax+ebp*2-0x7b],cl
  426b41:	or     ecx,ebp
  426b43:	mov    es,WORD PTR [edi+0x53]
  426b46:	aas    
  426b47:	sbb    BYTE PTR ds:0x953db4a2,ch
  426b4d:	sbb    al,BYTE PTR [eax+edx*2]
  426b50:	(bad)  
  426b51:	sub    eax,0xbbcaff82
  426b56:	je     0x426b63
  426b58:	nop
  426b59:	bound  ebp,QWORD PTR [ebx-0x4e]
  426b5c:	push   0xffffff97
  426b5e:	in     al,0x95
  426b60:	int3   
  426b61:	aaa    
  426b62:	mov    esp,ecx
  426b64:	ins    BYTE PTR es:[edi],dx
  426b65:	addr16 xor ah,ch
  426b68:	iret   
  426b69:	pop    ebx
  426b6a:	loope  0x426bc6
  426b6c:	mov    ch,0x54
  426b6e:	aas    
  426b6f:	dec    ebx
  426b70:	adc    eax,0x3366e18d
  426b75:	pop    ebx
  426b76:	sbb    DWORD PTR [edx+esi*8-0x4c],eax
  426b7a:	fcomp  DWORD PTR ds:0xae
	...
  426b88:	add    BYTE PTR [eax],al
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x3681,0xa7
  426b98:	mov    ebp,0x1f87172
  426b9d:	add    BYTE PTR [ebx+0x6],bh
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	leave  
  426ba3:	pop    edi
  426ba4:	or     DWORD PTR [ebp-0x6bc5bcb5],esi
  426baa:	push   esi
  426bab:	outs   dx,BYTE PTR ds:[esi]
  426bac:	dec    ebp
  426bad:	ja     0x426bdf
  426baf:	fistp  QWORD PTR [ebx]
  426bb1:	and    al,0x7c
  426bb3:	cmp    DWORD PTR [esi],ebp
  426bb5:	dec    eax
  426bb6:	hlt    
  426bb7:	out    0x6e,al
  426bb9:	add    eax,0x4bf76852
  426bbe:	lds    edx,FWORD PTR ds:0xbc12beb5
  426bc4:	mov    ebp,0xf4618166
  426bc9:	repnz mov BYTE PTR [esi+0x46205f],al
  426bd0:	psubusw mm7,QWORD PTR [ebx+0x6d]
  426bd4:	fsubr  QWORD PTR [ecx+0x56]
  426bd7:	lds    esi,FWORD PTR ds:0x5a66aeaa
  426bdd:	out    0x11,al
  426bdf:	call   0x954cab58
  426be4:	jns    0x426bb5
  426be6:	sahf   
  426be7:	in     al,dx
  426be8:	cmp    dh,BYTE PTR [eax+0x1025650f]
  426bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bef:	xlat   BYTE PTR ds:[ebx]
  426bf0:	in     al,dx
  426bf1:	jl     0x426c6f
  426bf3:	and    ebx,esp
  426bf5:	jmp    0x426c44
  426bf7:	lea    edi,[ebx+ebp*1+0x60]
  426bfb:	aad    0xfb
  426bfd:	pop    eax
  426bfe:	ss and al,0x4f
  426c01:	and    edx,eax
  426c03:	out    dx,eax
  426c04:	ss xor eax,0x1212d7df
  426c0a:	movq   mm4,mm1
  426c0d:	cmp    DWORD PTR [esi+0x50],esi
  426c10:	jns    0x426c5b
  426c12:	jg     0x426be7
  426c14:	add    ah,bl
  426c16:	jp     0x426bb0
  426c18:	dec    BYTE PTR [ebx+0x3b]
  426c1b:	xor    dl,BYTE PTR [ebx+0x313df388]
  426c21:	jp     0x426bff
  426c23:	inc    eax
  426c24:	mov    al,al
  426c26:	adc    ch,ah
  426c28:	or     al,BYTE PTR [ebp-0x6d]
  426c2b:	test   eax,0x72e79fb9
  426c30:	cwde   
  426c31:	cmp    DWORD PTR [eax],esi
  426c33:	sbb    BYTE PTR [eax],bl
  426c35:	jp     0x426c76
  426c37:	xchg   ecx,eax
  426c38:	jecxz  0x426c2d
  426c3a:	xlat   BYTE PTR ds:[ebx]
  426c3b:	push   esi
  426c3c:	push   0xc9be3294
  426c41:	fwait
  426c42:	cmp    DWORD PTR [ebx],0xffffffd5
  426c45:	push   es
  426c46:	mov    al,ds:0x3f328e78
  426c4b:	test   eax,0x8831c1c6
  426c50:	dec    esi
  426c51:	fimul  WORD PTR [edx-0x27]
  426c54:	xor    ebx,DWORD PTR [ebx+0x68b81e06]
  426c5a:	pop    es
  426c5b:	retf   0xfbd8
  426c5e:	daa    
  426c5f:	jecxz  0x426c6c
  426c61:	dec    edx
  426c62:	(bad)  
  426c63:	scas   eax,DWORD PTR es:[edi]
  426c64:	or     al,cl
  426c66:	into   
  426c67:	repz inc ebp
  426c69:	fdivr  QWORD PTR [ecx]
  426c6b:	pushf  
  426c6c:	(bad)  [eax]
  426c6e:	jb     0x426c1d
  426c70:	sbb    BYTE PTR [ebp-0x10],cl
  426c73:	lds    ebp,FWORD PTR [esi-0x6255032e]
  426c79:	or     BYTE PTR [esi],dl
  426c7b:	div    BYTE PTR [esi-0x48572c86]
  426c81:	(bad)  
  426c82:	rcr    DWORD PTR [ebx+0x5b],1
  426c85:	mov    al,0x9f
  426c87:	add    al,0x94
  426c89:	sub    al,BYTE PTR [eax+0x3a3546a5]
  426c8f:	jnp    0x426c66
  426c91:	mov    al,0x4a
  426c93:	mov    esp,0x7dc7d2b
  426c98:	ins    BYTE PTR es:[edi],dx
  426c99:	fucomi st,st(2)
  426c9b:	adc    dl,BYTE PTR [ebx+0x4d577c09]
  426ca1:	add    esi,DWORD PTR [edx-0x660c0ece]
  426ca7:	push   ebx
  426ca8:	dec    esp
  426ca9:	pop    es
  426caa:	mov    bl,0xd1
  426cac:	adc    di,WORD PTR [eax]
  426caf:	mov    dl,0xf2
  426cb1:	fnstsw WORD PTR [esi+edx*8-0x58]
  426cb5:	sbb    BYTE PTR [ebx+0x1],bl
  426cb8:	mov    ds:0x552a1972,al
  426cbd:	mov    ch,0x1d
  426cbf:	loopne 0x426ca6
  426cc1:	sub    DWORD PTR [esi+edi*1+0x3b],esp
  426cc5:	sbb    al,0x87
  426cc7:	xor    dh,BYTE PTR [ecx]
  426cc9:	cmp    DWORD PTR [ebx+edi*1+0xf],ecx
  426ccd:	sub    al,0x4f
  426ccf:	cmp    eax,0x6ec49623
  426cd4:	outs   dx,DWORD PTR ds:[esi]
  426cd5:	loop   0x426cd5
  426cd7:	bnd jbe 0x426d34
  426cda:	repnz hlt 
  426cdc:	cdq    
  426cdd:	mov    bl,0x97
  426cdf:	mov    ds:0x37796cea,al
  426ce4:	jmp    0x426d54
  426ce6:	jno    0x426d08
  426ce8:	retf   
  426ce9:	pop    ebp
  426cea:	pop    esp
  426ceb:	sub    BYTE PTR [edi-0x6f],bl
  426cee:	push   ebx
  426cef:	fidiv  DWORD PTR [ebx]
  426cf1:	add    eax,0xd1f64066
  426cf6:	mov    esp,0x7f87c35c
  426cfb:	and    DWORD PTR [edi+0x24],esi
  426cfe:	add    al,0xb7
  426d00:	xchg   BYTE PTR [esi],dh
  426d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d03:	pushf  
  426d04:	imul   eax,DWORD PTR [edx],0xfffffff9
  426d07:	xchg   ebx,eax
  426d08:	and    al,0xe8
  426d0a:	push   cs
  426d0b:	sahf   
  426d0c:	loopne 0x426c92
  426d0e:	(bad)  
  426d0f:	stos   BYTE PTR es:[edi],al
  426d10:	jae    0x426d4b
  426d12:	mov    ah,BYTE PTR [ebx+ebx*2]
  426d15:	ret    
  426d16:	sbb    eax,0x10cd750f
  426d1b:	xor    al,0xfa
  426d1d:	mov    BYTE PTR [ecx+esi*4],ah
  426d20:	sbb    eax,0xa319aba
  426d25:	and    al,0x87
  426d27:	out    dx,al
  426d28:	mov    ds:0xffc9902e,al
  426d2d:	je     0x426d95
  426d2f:	pop    ss
  426d30:	dec    ecx
  426d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d32:	outs   dx,DWORD PTR ds:[esi]
  426d33:	or     al,0xeb
  426d35:	and    eax,0x319e2b1b
  426d3a:	fadd   QWORD PTR [eax]
  426d3c:	jg     0x426d22
  426d3e:	outs   dx,DWORD PTR ds:[esi]
  426d3f:	dec    ecx
  426d40:	xchg   BYTE PTR [esi+0x45baeeca],dh
  426d46:	pop    DWORD PTR [esi-0x79b9e0de]
  426d4c:	mov    ds:0x1edc1edf,eax
  426d51:	ror    esi,cl
  426d53:	pop    esi
  426d54:	js     0x426d69
  426d56:	add    BYTE PTR [edi+0x753d38a6],ch
  426d5c:	clc    
  426d5d:	sti    
  426d5e:	mov    eax,ds:0xd774913f
  426d63:	(bad)  
  426d64:	xor    cl,BYTE PTR [eax+eiz*1]
  426d67:	pop    edi
  426d68:	sti    
  426d69:	dec    edx
  426d6a:	(bad)  
  426d6b:	xchg   ebx,eax
  426d6c:	cmp    BYTE PTR [ebp+0x73d1a485],0xb5
  426d73:	mov    ds:0xc006753e,al
  426d78:	xor    dl,al
  426d7a:	pushf  
  426d7b:	dec    edx
  426d7c:	out    dx,al
  426d7d:	or     dh,bl
  426d7f:	(bad)  
  426d80:	jecxz  0x426d5b
  426d82:	popa   
  426d83:	lods   eax,DWORD PTR ds:[esi]
  426d84:	jne    0x426d60
  426d86:	sbb    ah,0xda
  426d89:	neg    DWORD PTR [ebx-0x3ef95c1b]
  426d8f:	inc    esp
  426d90:	inc    edx
  426d91:	popf   
  426d92:	cwde   
  426d93:	ss enter 0x84af,0x46
  426d98:	cdq    
  426d99:	imul   ebx,DWORD PTR [eax-0x71],0x70
  426d9d:	ficom  DWORD PTR [eax+0x67]
  426da0:	test   al,0xb7
  426da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da3:	pop    ss
  426da4:	and    ebx,ebp
  426da6:	jbe    0x426d2b
  426da8:	jecxz  0x426e01
  426daa:	push   ebx
  426dab:	les    ebp,FWORD PTR [ecx]
  426dad:	inc    esp
  426dae:	in     al,0x94
  426db0:	cdq    
  426db1:	es adc eax,0x68086131
  426db7:	xor    esp,DWORD PTR [esi-0x44]
  426dba:	cmp    BYTE PTR [esi],bh
  426dbc:	add    bl,cl
  426dbe:	cld    
  426dbf:	mov    ds:0xd9ccbaf0,al
  426dc4:	addr16 nop
  426dc6:	mov    ch,cl
  426dc8:	or     DWORD PTR [esi-0x2f],edx
  426dcb:	jnp    0x426e4b
  426dcd:	dec    ebp
  426dce:	sbb    eax,0x72e13ff4
  426dd3:	xor    ah,BYTE PTR [esi]
  426dd5:	test   BYTE PTR [edi+0x4d],ah
  426dd8:	jno    0x426d61
  426dda:	cmp    BYTE PTR [ebx-0x380614d8],dl
  426de0:	scas   eax,DWORD PTR es:[edi]
  426de1:	repz pop ss
  426de3:	jo     0x426df5
  426de5:	fadd   st(5),st
  426de7:	push   cs
  426de8:	in     al,0x86
  426dea:	mov    edx,0xbef50529
  426def:	enter  0x76c5,0x32
  426df3:	(bad)  
  426df5:	fstp   st(2)
  426df7:	push   0x589d1ed0
  426dfc:	inc    ecx
  426dfd:	(bad)  
  426dfe:	les    edi,FWORD PTR [eax+0x24723cc5]
  426e04:	jmp    0xe99665fa
  426e09:	ins    DWORD PTR es:[edi],dx
  426e0a:	sub    BYTE PTR [esi],0xa6
  426e0d:	mov    eax,ds:0x8646291c
  426e12:	test   BYTE PTR [ebx],dh
  426e14:	and    ch,dl
  426e16:	test   al,0x71
  426e18:	stc    
  426e19:	(bad)  
  426e1a:	mov    dh,0x7f
  426e1c:	fistp  DWORD PTR [eax-0x69]
  426e1f:	xor    BYTE PTR [edx+0x7a4ffc06],0xae
  426e26:	cmp    al,0x95
  426e28:	call   0x57b4:0x3ed004f3
  426e2f:	clc    
  426e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e31:	je     0x426e3f
  426e33:	jge    0x426e6c
  426e35:	pop    eax
  426e36:	or     edi,ecx
  426e38:	imul   ebx,DWORD PTR [ebx-0x71f258a5],0x6f
  426e3f:	in     eax,0x81
  426e41:	mov    al,0x0
  426e43:	adc    eax,0x8683b217
  426e48:	mov    edx,0xe7624594
  426e4d:	fwait
  426e4e:	aad    0x92
  426e50:	pop    ecx
  426e51:	aam    0x90
  426e53:	cmp    eax,DWORD PTR [eax]
  426e55:	out    0x2f,al
  426e57:	adc    DWORD PTR [eax+ebx*1],esi
  426e5a:	sbb    DWORD PTR [ecx-0x663e8565],ebp
  426e60:	mov    esp,0x8552d8e8
  426e65:	mov    WORD PTR [ecx+ebx*4+0x39],gs
  426e69:	inc    ebp
  426e6a:	pusha  
  426e6b:	into   
  426e6c:	rcr    ah,cl
  426e6e:	(bad)  
  426e6f:	pop    ss
  426e70:	push   es
  426e71:	in     al,dx
  426e72:	(bad)  
  426e73:	xchg   esi,eax
  426e74:	add    eax,0x9242f957
  426e79:	or     al,0x8d
  426e7b:	jecxz  0x426ece
  426e7d:	retf   
  426e7e:	(bad)  
  426e7f:	int3   
  426e80:	pop    esp
  426e81:	test   eax,0xb2060cd2
  426e86:	pop    ebx
  426e87:	xor    eax,DWORD PTR [edi]
  426e89:	mov    esi,0x9e99567f
  426e8e:	sar    BYTE PTR [esi-0x31840ca3],0x30
  426e95:	(bad)  [ebx+0x75]
  426e98:	mov    ds:0x474e16b4,eax
  426e9d:	rol    edx,0x31
  426ea0:	outs   dx,BYTE PTR ds:[esi]
  426ea1:	imul   ecx,DWORD PTR [esi-0x1f],0xa5f2e2ab
  426ea8:	adc    eax,DWORD PTR [edx+0x2e4c80f3]
  426eae:	mov    esi,0x7a799188
  426eb3:	push   ebx
  426eb4:	cwde   
  426eb5:	out    dx,eax
  426eb6:	pop    ebp
  426eb7:	push   0xa7e4d080
  426ebc:	icebp  
  426ebd:	shr    BYTE PTR [eax-0x7d8c8630],0xfc
  426ec4:	cmp    eax,eax
  426ec6:	(bad)  
  426ec7:	jl     0x426e96
  426ec9:	sbb    ah,BYTE PTR [ebx]
  426ecb:	jnp    0x426e95
  426ecd:	xchg   edx,eax
  426ece:	js     0x426e98
  426ed0:	iret   
  426ed1:	adc    DWORD PTR [ebx-0x2f],esi
  426ed4:	(bad)  
  426ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ed6:	or     dh,BYTE PTR [edx+0x7e]
  426ed9:	ret    
  426eda:	leave  
  426edb:	call   0xc4af:0xd02606a5
  426ee2:	lock cmp bl,BYTE PTR [esi]
  426ee5:	fwait
  426ee6:	test   al,0xeb
  426ee8:	shr    BYTE PTR [eax],1
  426eea:	rcl    DWORD PTR [esi],0x9a
  426eed:	popa   
  426eee:	and    BYTE PTR [eax],dh
  426ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ef1:	mov    bl,BYTE PTR [ebx+ebx*2]
  426ef4:	js     0x426ef9
  426ef6:	xor    al,0x38
  426ef8:	ins    BYTE PTR es:[edi],dx
  426ef9:	pop    ecx
  426efa:	sti    
  426efb:	(bad)  
  426efc:	shl    DWORD PTR [ecx+0x573d6e6e],1
  426f02:	and    edi,DWORD PTR [eax+0x54]
  426f05:	cmp    al,0x60
  426f07:	repz test al,0xc8
  426f0a:	push   edi
  426f0b:	inc    ebx
  426f0c:	mov    edi,0x33f49569
  426f11:	sbb    DWORD PTR [edx],0xfb341c84
  426f17:	mov    fs,WORD PTR [eax-0x22]
  426f1a:	into   
  426f1b:	push   cs
  426f1c:	outs   dx,DWORD PTR ds:[esi]
  426f1d:	test   DWORD PTR [ecx-0x35],eax
  426f20:	jno    0x426eaa
  426f22:	and    DWORD PTR [ebp-0x5fdfe331],esi
  426f28:	daa    
  426f29:	add    eax,0xfa7fd948
  426f2e:	mov    dh,0x99
  426f30:	mov    ecx,0xb3e94078
  426f35:	sub    al,0xc3
  426f37:	push   ebp
  426f38:	nop
  426f39:	jge    0x426f7d
  426f3b:	clc    
  426f3c:	or     eax,DWORD PTR [edx]
  426f3e:	lds    ebx,FWORD PTR [esi]
  426f40:	jecxz  0x426f2b
  426f42:	pop    ds
  426f43:	std    
  426f44:	sub    DWORD PTR [ebx-0x1b],eax
  426f47:	clc    
  426f48:	je     0x426f19
  426f4a:	sti    
  426f4b:	popa   
  426f4c:	sbb    cl,BYTE PTR [edi-0x18]
  426f4f:	(bad)  
  426f50:	ss test al,0x2b
  426f54:	xor    eax,0x6f4a1c02
  426f59:	pop    ebp
  426f5a:	sbb    ebx,DWORD PTR ds:0x8d5253ea
  426f60:	and    BYTE PTR [eax+0x18],ah
  426f63:	fidivr WORD PTR [ebp+0x1271fc77]
  426f69:	dec    eax
  426f6a:	retf   0x92bf
  426f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f6e:	sub    eax,0x52fcad13
  426f73:	gs gs test eax,0xb2d80fd9
  426f7a:	push   ebp
  426f7b:	xchg   ebx,eax
  426f7c:	outs   dx,BYTE PTR ds:[esi]
  426f7d:	mov    bh,0x1d
  426f7f:	mov    ds:0xa002fb0e,al
  426f84:	push   ebp
  426f85:	retf   
  426f86:	sbb    DWORD PTR [eax-0x65d68fde],eax
  426f8c:	sbb    BYTE PTR [edi],al
  426f8e:	nop
  426f8f:	pop    ss
  426f90:	enter  0x5aa2,0x33
  426f94:	sub    al,0xc5
  426f96:	out    0xae,eax
  426f98:	dec    esi
  426f99:	in     al,dx
  426f9a:	leave  
  426f9b:	arpl   ax,dx
  426f9d:	sub    al,0x63
  426f9f:	imul   eax,DWORD PTR [edi],0xb4d6ef42
  426fa5:	mov    ah,0xd9
  426fa7:	in     al,0xde
  426fa9:	inc    edi
  426faa:	sub    DWORD PTR [edi-0x3d2572b7],ebp
  426fb0:	cwde   
  426fb1:	push   ecx
  426fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fb3:	outs   dx,DWORD PTR ds:[esi]
  426fb4:	retf   
  426fb5:	mov    cl,0xd1
  426fb7:	jnp    0x426f9a
  426fb9:	(bad)  
  426fba:	arpl   WORD PTR [edi+0x6],si
  426fbd:	sbb    dh,BYTE PTR [eax-0x1cabf265]
  426fc3:	mov    ch,0xce
  426fc5:	inc    esi
  426fc6:	je     0x427002
  426fc8:	add    DWORD PTR [esi-0x6d59993f],esi
  426fce:	or     esp,0x711c0a04
  426fd4:	dec    esp
  426fd5:	cli    
  426fd6:	sahf   
  426fd7:	shr    ecx,cl
  426fd9:	outs   dx,WORD PTR ds:[esi]
  426fdb:	sti    
  426fdc:	mov    ds:0xf442ac98,eax
  426fe1:	sub    esp,DWORD PTR [edx]
  426fe3:	pop    ss
  426fe4:	jns    0x426f6b
  426fe6:	mov    edi,0x2833bbcc
  426feb:	fcomip st,st(5)
  426fed:	fldcw  WORD PTR [edi+eiz*8+0x8]
  426ff1:	or     eax,0x52ba5ec2
  426ff6:	add    al,0xd0
  426ff8:	dec    edi
  426ff9:	pop    edi
  426ffa:	push   esp
  426ffb:	ret    
  426ffc:	cs or  eax,0x1018bdff
  427002:	pop    edi
  427003:	cs jne 0x426fd7
  427006:	dec    esp
  427007:	and    DWORD PTR [edi+0x1c],0xffffffe1
  42700b:	arpl   WORD PTR [edx+0x62],bx
  42700e:	loope  0x427038
  427010:	aam    0x76
  427012:	and    al,0x18
  427014:	or     dl,al
  427016:	(bad)  
  427017:	aam    0xb2
  427019:	outs   dx,BYTE PTR ds:[esi]
  42701a:	fnsave [ebx+0x2a]
  42701d:	shl    esi,1
  42701f:	ret    
  427020:	sub    BYTE PTR [esi-0x41caa38e],al
  427026:	or     eax,DWORD PTR [ebp+0x39]
  427029:	lods   eax,DWORD PTR ds:[esi]
  42702a:	test   eax,0x31517a9f
  42702f:	bound  ecx,QWORD PTR [ecx-0xd7e3950]
  427035:	push   ecx
  427036:	sub    eax,0xbd84c872
  42703b:	or     DWORD PTR ds:0x5bf12ec5,0x70
  427042:	test   BYTE PTR [esi],0xa6
  427045:	ret    0xca0d
  427048:	test   edx,ecx
  42704a:	sbb    cl,al
  42704c:	pmulhw mm2,QWORD PTR [edi]
  42704f:	call   0xe829:0x79f5ea76
  427056:	inc    edi
  427057:	sbb    edi,ebp
  427059:	pop    eax
  42705a:	clc    
  42705b:	add    al,0x28
  42705d:	cld    
  42705e:	(bad)  
  427060:	je     0x42709f
  427062:	xchg   ebp,eax
  427063:	mov    ah,0x3a
  427065:	enter  0x878c,0xa8
  427069:	mov    ecx,0x2cc4f5b3
  42706e:	int3   
  42706f:	mov    cl,0x4e
  427071:	inc    ecx
  427072:	(bad)  
  427074:	jmp    0xa8cf728e
  427079:	clc    
  42707a:	ret    
  42707b:	mov    gs,WORD PTR [ebx-0x7a6990d3]
  427081:	repnz xchg ecx,eax
  427083:	rcl    DWORD PTR [ebp-0x2db2bf7d],cl
  427089:	js     0x42702c
  42708b:	mov    esp,esi
  42708d:	imul   edi,DWORD PTR [edi+0xf],0x38ddd22
  427094:	xchg   bh,ch
  427096:	pushf  
  427097:	out    0xc9,al
  427099:	lock ret 
  42709b:	leave  
  42709c:	mov    ah,0xdc
  42709e:	and    BYTE PTR [esi-0x60],0x7b
  4270a2:	jbe    0x4270e1
  4270a4:	push   ds
  4270a5:	pop    es
  4270a6:	std    
  4270a7:	xor    ecx,edi
  4270a9:	xor    DWORD PTR [esi-0x58b430e9],esi
  4270af:	in     al,0xdd
  4270b1:	scas   eax,DWORD PTR es:[edi]
  4270b2:	(bad)  
  4270b3:	frstor [eax+0x53]
  4270b6:	cwde   
  4270b7:	add    eax,0x609e1783
  4270bc:	(bad)  
  4270bd:	mov    bh,0xfb
  4270bf:	(bad)  
  4270c0:	rcr    BYTE PTR [ebx-0x5b],cl
  4270c3:	sbb    DWORD PTR [edx-0x17],eax
  4270c6:	xor    ebp,DWORD PTR [ebp+0x61201f85]
  4270cc:	mov    ecx,0x638e83d2
  4270d1:	leave  
  4270d2:	push   ss
  4270d3:	xor    al,0x67
  4270d5:	inc    ebp
  4270d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270d7:	jno    0x4270cb
  4270d9:	ficomp DWORD PTR ds:0x26b39e79
  4270df:	mov    ebx,0x48826414
  4270e4:	(bad)  
  4270e5:	push   ebp
  4270e6:	int    0x90
  4270e8:	sbb    bh,BYTE PTR [edi-0x58]
  4270eb:	inc    esp
  4270ec:	aam    0x74
  4270ee:	sahf   
  4270ef:	xor    eax,0x39d757d3
  4270f4:	sub    DWORD PTR [edx+0x1e45bceb],esi
  4270fa:	mov    edx,0x618c86d
  4270ff:	jnp    0x427097
  427101:	mov    DWORD PTR [ebx],0xd3f6d708
  427107:	sbb    DWORD PTR [ecx-0x192dc426],edi
  42710d:	jmp    0x83cdf410
  427112:	jae    0x4270eb
  427114:	adc    edx,edx
  427116:	and    bl,BYTE PTR [ecx-0x67a2b781]
  42711c:	(bad)
  427120:	pop    edx
  427121:	aad    0xca
  427123:	xchg   edi,eax
  427124:	jmp    0x42717d
  427126:	imul   BYTE PTR [ecx-0x4d42b088]
  42712c:	xchg   ebp,eax
  42712d:	loope  0x42716e
  42712f:	test   al,0x63
  427131:	or     eax,DWORD PTR [ecx]
  427133:	mov    ch,0x17
  427135:	jns    0x42714e
  427137:	adc    BYTE PTR [eax],0x7c
  42713a:	and    ebp,DWORD PTR [ebx+esi*1]
  42713d:	popf   
  42713e:	(bad)  
  42713f:	es push ebp
  427141:	mov    ebp,0xa456be27
  427146:	and    eax,0x751ab13b
  42714b:	in     eax,dx
  42714c:	mov    ebx,0xe9bfe435
  427151:	sub    DWORD PTR [ebp+ecx*2+0x4],esi
  427155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427156:	jge    0x4271bb
  427158:	(bad)  
  427159:	mov    ds:0xd229a1c0,al
  42715e:	fstenv [ebp+0x40]
  427162:	retf   
  427163:	(bad)  
  427164:	shr    dh,cl
  427166:	sbb    dl,BYTE PTR [ecx+0x1ec02a77]
  42716c:	repnz xchg ecx,eax
  42716e:	mov    dh,0x20
  427170:	push   ebp
  427171:	leave  
  427172:	mov    eax,0x3c7bb6bf
  427177:	call   0xca4d4093
  42717c:	mov    ds:0x98435900,al
  427181:	or     al,0xe8
  427183:	fwait
  427184:	shl    BYTE PTR ds:0xdc34572,cl
  42718a:	sbb    bl,BYTE PTR [esp+ecx*1+0x34]
  42718e:	cmc    
  42718f:	(bad)  
  427191:	pusha  
  427192:	xchg   ebx,eax
  427193:	dec    edx
  427194:	cwde   
  427195:	jp     0x42719b
  427197:	mov    dl,BYTE PTR [edi-0x7e991ecb]
  42719d:	xchg   ecx,eax
  42719e:	and    al,0x18
  4271a0:	push   es
  4271a1:	mov    sp,0x327d
  4271a5:	popf   
  4271a6:	jb     0x427194
  4271a8:	jns    0x427192
  4271aa:	shl    ebp,cl
  4271ac:	mov    ds:0x6bb2c6af,al
  4271b1:	les    ecx,FWORD PTR [ecx]
  4271b3:	aaa    
  4271b4:	jmp    0xd6a3:0xf562e44f
  4271bb:	adc    ecx,DWORD PTR [eax-0x4f]
  4271be:	aas    
  4271bf:	inc    esi
  4271c0:	jge    0x42723f
  4271c2:	aad    0xc1
  4271c4:	(bad)  
  4271c5:	xchg   ecx,eax
  4271c6:	(bad)  
  4271c7:	cmp    eax,0x27eb99ce
  4271cc:	cs mov esi,0x26e0d568
  4271d2:	cdq    
  4271d3:	jle    0x4271bf
  4271d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271d6:	and    al,0x3a
  4271d8:	popf   
  4271d9:	pop    ebp
  4271da:	dec    edi
  4271db:	dec    ebx
  4271dc:	adc    eax,0x8625cc38
  4271e1:	mov    eax,ds:0x1f8a928a
  4271e6:	xchg   edx,eax
  4271e7:	and    ecx,DWORD PTR [ecx]
  4271e9:	mov    DWORD PTR [eax+0x579c9363],eax
  4271ef:	xor    eax,DWORD PTR ds:[ebx]
  4271f2:	aam    0x30
  4271f4:	add    bh,BYTE PTR [esi]
  4271f6:	js     0x4271d1
  4271f8:	das    
  4271f9:	sub    DWORD PTR [esp+esi*1+0x166dac9b],ebx
  427200:	call   0x73d7:0x2d5cf208
  427207:	add    edx,DWORD PTR [esi+0x3f0c36ec]
  42720d:	loope  0x427213
  42720f:	lock push esp
  427211:	push   ebx
  427212:	push   ds
  427213:	call   0x37a1:0x7a535530
  42721a:	inc    ecx
  42721b:	fcomp  QWORD PTR [eax+eax*1+0x0]
	...
  427227:	add    BYTE PTR [eax],al
  427229:	add    BYTE PTR [ecx+0x4f],bl
  42722c:	dec    esi
  42722d:	dec    ebp
  42722e:	pop    esi
  42722f:	dec    ebp
  427230:	pop    ebx
  427231:	pop    edi
  427232:	in     eax,dx
  427233:	fld    st(4)
  427235:	shr    BYTE PTR [ebx],0x15
  427238:	sub    eax,0x1feec8c
  42723d:	add    BYTE PTR [edx],al
  42723f:	add    BYTE PTR [eax],al
  427241:	add    BYTE PTR [edx+0xd],ch
  427247:	add    BYTE PTR [eax],al
  427249:	add    BYTE PTR [ebp+0x55],cl
  42724c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427252:	mov    esp,ebp
  427254:	or     al,ah
  427256:	dec    ebp
  427257:	add    bh,al
  427259:	add    BYTE PTR [eax],cl
  42725b:	add    BYTE PTR [eax],al
  42725d:	mov    DWORD PTR [eax],0x3ef44545
  427263:	cmp    BYTE PTR [eax],al
  427265:	test   DWORD PTR [ebx-0x34070b64],ecx
  42726b:	(bad)  
  42726c:	enter  0x4d45,0xb8
  427270:	mov    edi,DWORD PTR [ecx]
  427272:	hlt    
  427273:	test   ebx,ecx
  427275:	pushf  
  427276:	enter  0x4df8,0x8b
  42727a:	mov    DWORD PTR [ebp+0x8],0x894708
  427281:	inc    ebp
  427282:	mov    ebp,0xff8bfffc
  427287:	dec    ebp
  427288:	mov    ch,0xf4
  42728a:	call   DWORD PTR [ebx-0x1]
  42728d:	mov    ebx,0x8005022
  427292:	call   DWORD PTR [ecx+0x8]
  427295:	pop    es
  427296:	jmp    0xb8:0x9cb4533
  42729d:	cwde   
  42729e:	mov    esi,DWORD PTR [edx-0xc]
  4272a1:	xor    al,bl
  4272a3:	add    BYTE PTR [eax+0x3c83203],bl
  4272a9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4272af:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4272b5:	xor    eax,DWORD PTR [eax]
  4272b7:	retf   
  4272b8:	ret    
  4272b9:	add    eax,esi
  4272bb:	enter  0x8945,0x64
  4272bf:	dec    ebp
  4272c0:	sbb    ah,cl
  4272c2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272c8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ce:	test   DWORD PTR [ebx],esi
  4272d0:	dec    ebx
  4272d2:	inc    DWORD PTR [ebx]
  4272d4:	inc    eax
  4272d5:	enter  0x8989,0x64
  4272d9:	(bad)  
  4272da:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272de:	cld    
  4272df:	dec    DWORD PTR [ebp-0xa90001]
  4272e5:	push   edi
  4272e6:	mov    BYTE PTR [edx+0x1],ch
  4272e9:	and    BYTE PTR [eax],al
  4272eb:	pop    ecx
  4272ec:	inc    ebp
  4272ed:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272f3:	push   0xffffff89
  4272f5:	pop    ecx
  4272f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f7:	dec    ebp
  4272f8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272fe:	jne    0x427348
  427300:	lea    eax,[eax]
  427302:	fs (bad) 
  427304:	dec    DWORD PTR [eax]
  427306:	mov    DWORD PTR [eax],eax
  427308:	test   al,0x0
  42730a:	add    BYTE PTR [ebp-0x18],cl
  42730d:	xor    ebp,DWORD PTR [edx]
  42730f:	add    eax,DWORD PTR [eax]
  427311:	mov    eax,eax
  427313:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  42731a:	inc    ebp
  42731b:	mov    DWORD PTR [ebx+0x459408],ecx
  427321:	popa   
  427322:	mov    esp,DWORD PTR [ebp-0x75]
  427325:	(bad)  
  427326:	cld    
  427327:	inc    eax
  427328:	cmp    bh,0x1
  42732b:	lea    eax,[eax]
  42732d:	and    BYTE PTR [eax],al
  42732f:	inc    DWORD PTR [ecx-0x18]
  427332:	mov    ecx,DWORD PTR [ebx]
  427334:	cld    
  427335:	add    BYTE PTR [ecx+0x75014d],cl
  42733b:	(bad)  
  42733c:	xchg   ebp,eax
  42733d:	sar    bh,1
  42733f:	inc    eax
  427340:	inc    DWORD PTR [eax]
  427342:	mov    eax,DWORD PTR [ebp-0x4]
  427345:	xor    edx,DWORD PTR [edx+0x7201be]
  42734b:	add    BYTE PTR [edx],dl
  42734d:	(bad)  
  42734e:	nop
  42734f:	inc    ebp
  427350:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427356:	mov    al,0xff
  427358:	add    bh,bh
  42735a:	add    BYTE PTR [ebx],dh
  42735c:	inc    DWORD PTR [ebx]
  42735e:	sbb    al,0x89
  427360:	jne    0x42733e
  427362:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427368:	mov    eax,DWORD PTR [ebp-0xff0048]
  42736e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427375:	inc    DWORD PTR [ebp-0x75]
  427378:	fisttp QWORD PTR [eax+ebp*8]
  42737b:	test   DWORD PTR [esi-0x1],esp
  42737e:	inc    ebp
  42737f:	(bad)  
  427380:	aas    
  427381:	inc    ebp
  427382:	(bad)  
  427383:	lea    edi,[eax+edi*2-0x1]
  427387:	inc    edi
  427389:	mov    DWORD PTR ds:0x8000c7a0,edi
  42738f:	mov    ebp,esi
  427391:	cld    
  427392:	in     al,0x8d
  427394:	inc    ebp
  427395:	(bad)  
  427396:	call   0xc7cb539a
  42739b:	add    DWORD PTR [eax-0x11ba1500],ecx
  4273a1:	inc    DWORD PTR [ebp-0x4]
  4273a4:	out    0x8d,eax
  4273a6:	aas    
  4273a7:	(bad)  
  4273a8:	call   0xca9eac
  4273ad:	add    DWORD PTR [ebx-0x7f570400],ecx
  4273b3:	add    BYTE PTR [ecx],al
  4273b5:	test   DWORD PTR [eax],eax
  4273b7:	wrmsr  
  4273b9:	jae    0x4273a8
  4273bb:	add    BYTE PTR [eax],al
  4273bd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273c3:	add    esp,edi
  4273c5:	add    BYTE PTR [eax+0x450108],al
  4273cb:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ce:	add    DWORD PTR [eax],0x4
  4273d1:	mov    eax,DWORD PTR [ebp+0x3]
  4273d4:	mov    edi,DWORD PTR [esp+edi*8]
  4273d7:	dec    ebp
  4273d8:	nop
  4273d9:	mov    eax,DWORD PTR [ecx]
  4273db:	fadd   DWORD PTR [eax]
  4273dd:	add    BYTE PTR [esi],al
  4273df:	lea    eax,[eax]
  4273e1:	pusha  
  4273e2:	push   eax
  4273e3:	inc    DWORD PTR [ebp+0x52]
  4273e6:	call   DWORD PTR [ebp-0x7b]
  4273e9:	mov    esi,DWORD PTR [ebp-0x74]
  4273ec:	mov    eax,DWORD PTR [eax]
  4273ee:	cld    
  4273ef:	mov    eax,DWORD PTR [eax+0x880103]
  4273f5:	add    BYTE PTR [ebp+0x6a],bh
  4273f8:	cmp    edi,0x10
  4273fb:	mov    WORD PTR [ebp+0x0],es
  4273fe:	mov    edx,DWORD PTR [edx-0x4]
  427401:	push   ecx
  427402:	nop
  427403:	inc    DWORD PTR [ecx]
  427405:	cld    
  427406:	add    BYTE PTR [ebp-0x24],bh
  427409:	mov    eax,DWORD PTR [eax]
  42740b:	cld    
  42740c:	push   eax
  42740d:	nop
  42740e:	inc    ebp
  42740f:	add    edi,edi
  427411:	add    BYTE PTR [ebx+0x4de4f445],cl
  427417:	in     al,dx
  427418:	xor    eax,edi
  42741a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427421:	mov    DWORD PTR [eax],0xb8788b98
  427427:	test   ebx,eax
  427429:	jmp    FWORD PTR [eax-0x1]
  42742c:	int    0xed
  42742e:	sub    esp,eax
  427430:	add    eax,DWORD PTR [ebp-0x30]
  427433:	fild   WORD PTR [ebp+0x3f]
  427436:	cmp    eax,edi
  427438:	je     0xca43545a
  42743e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427445:	(bad)  
  427446:	jne    0x4273d4
  427448:	mov    ebx,ebp
  42744a:	cld    
  42744b:	js     0x427492
  42744d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427453:	inc    ebp
  427454:	call   0xea9de4
  427459:	add    BYTE PTR [ebx-0x7f170301],cl
  42745f:	add    DWORD PTR es:[eax],eax
  427462:	add    al,al
  427464:	xor    BYTE PTR [eax+0x41],dl
  427467:	inc    ebp
  427468:	add    BYTE PTR [ebx+0xfcd88b],cl
  42746e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427474:	add    DWORD PTR [ecx+0x458be845],ecx
  42747a:	fmul   DWORD PTR [ebx+0x8bb800]
  427480:	cld    
  427481:	call   0xd79f46
  427486:	dec    DWORD PTR [ebx+0x1090e8ff]
  42748c:	add    al,al
  42748e:	push   eax
  42748f:	es inc ebp
  427491:	inc    ebp
  427492:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427498:	dec    DWORD PTR [ebx-0x3ff70301]
  42749e:	mov    DWORD PTR gs:[eax],eax
  4274a1:	call   0x8b6aba66
  4274a6:	inc    ebp
  4274a7:	mov    eax,0xe8d8008b
  4274ac:	add    BYTE PTR [ecx],ch
  4274ae:	mov    eax,DWORD PTR [eax]
  4274b0:	cld    
  4274b1:	mov    eax,eax
  4274b3:	call   0x462a850d
  4274b8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4274be:	cld    
  4274bf:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274c6:	xor    BYTE PTR [eax],al
  4274c8:	push   edi
  4274c9:	inc    ebp
  4274ca:	mov    DWORD PTR [ebx],esi
  4274cc:	in     al,0xb9
  4274ce:	inc    ebp
  4274cf:	lea    ecx,[ebx-0x3c370301]
  4274d5:	dec    ebp
  4274d6:	cwde   
  4274d7:	mov    esi,DWORD PTR [edx]
  4274d9:	or     BYTE PTR [ebx],al
  4274db:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274e2:	call   0x429e2c
  4274e7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274ed:	jge    0x427522
  4274ef:	mov    eax,DWORD PTR [ebx]
  4274f1:	cld    
  4274f2:	lea    edx,[eax+0xff0120]
  4274f8:	call   0x429e8c
  4274fd:	push   eax
  4274fe:	inc    DWORD PTR [ebp-0x1c]
  427501:	mov    ecx,DWORD PTR [ebp-0x58]
  427504:	xor    eax,DWORD PTR [eax]
  427506:	add    edi,edi
  427508:	cmp    ebp,eax
  42750a:	jne    0x427532
  42750c:	mov    DWORD PTR [eax],0x8b004dd8
  427512:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427519:	mov    eax,ebx
  42751b:	cld    
  42751c:	test   BYTE PTR [eax+0x320198],bh
  427522:	mov    DWORD PTR [ebp+0x8],esi
  427525:	xor    eax,DWORD PTR [ebp-0x73]
  427528:	test   DWORD PTR [esp+esi*2-0x1],edi
  42752c:	mov    ebp,eax
  42752e:	mov    eax,0x33004d29
  427533:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427539:	add    DWORD PTR [eax],eax
  42753b:	add    BYTE PTR [ebp+0x30],al
  42753e:	mov    edx,DWORD PTR [edi-0x48]
  427541:	add    ebx,0xffffffe4
  427544:	push   0x2b74cd85
  427549:	mov    eax,DWORD PTR [ebx]
  42754b:	cld    
  42754c:	sar    BYTE PTR [eax+0x3b0145],1
  427552:	pcmpeqw mm4,mm6
  427555:	xor    edi,edi
  427557:	lea    ecx,[ebx-0x239c7470]
  42755d:	add    BYTE PTR [ebp+0x50],cl
  427560:	cmp    eax,DWORD PTR [ebp+0x75]
  427563:	mov    ebp,DWORD PTR [eax-0x68]
  427566:	test   DWORD PTR [eax],eax
  427568:	clc    
  427569:	push   DWORD PTR [ebp-0x1]
  42756c:	lea    ecx,[eax]
  42756e:	int3   
  42756f:	inc    ebp
  427570:	call   0xfaa600
  427575:	jne    0x42756f
  427577:	xor    edi,DWORD PTR [ebp-0x41]
  42757a:	jmp    0x4275ee
  42757c:	mov    eax,DWORD PTR [eax]
  42757e:	mov    eax,0x339545c7
  427583:	inc    DWORD PTR [ebx]
  427585:	push   DWORD PTR [ecx]
  427587:	aaa    
  427588:	mov    eax,DWORD PTR [eax]
  42758a:	jmp    0x4275dc
  42758c:	mov    eax,DWORD PTR [ebp-0x3c]
  42758f:	mov    eax,eax
  427591:	cld    
  427592:	clc    
  427593:	ret    
  427594:	test   bh,al
  427596:	pop    es
  427597:	xchg   ebp,eax
  427598:	add    bh,bh
  42759a:	inc    ebp
  42759b:	dec    DWORD PTR [edi]
  42759d:	and    DWORD PTR [ebx],ebp
  42759f:	add    BYTE PTR [eax],al
  4275a1:	push   eax
  4275a2:	jbe    0x4275f9
  4275a4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4275aa:	or     al,0xcf
  4275ac:	inc    eax
  4275ad:	enter  0x745,0x72
  4275b1:	inc    ebp
  4275b2:	mov    eax,DWORD PTR [ecx]
  4275b4:	int3   
  4275b5:	add    BYTE PTR [ebp-0x75],al
  4275b8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4275be:	ror    BYTE PTR [ebp+0x72f80885],1
  4275c4:	inc    ebp
  4275c5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275cb:	fadd   st,st(6)
  4275cd:	rol    BYTE PTR [ebp+0x12],0x8b
  4275d1:	inc    ebp
  4275d2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275d8:	inc    ebp
  4275d9:	test   bh,al
  4275db:	cwde   
  4275dc:	clc    
  4275dd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275e3:	inc    ebp
  4275e4:	cmp    dh,BYTE PTR [ebx]
  4275e6:	pushf  
  4275e7:	mov    ecx,0xffb48dc7
  4275ec:	test   eax,ecx
  4275ee:	clc    
  4275ef:	dec    ebp
  4275f0:	inc    ebp
  4275f1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275f4:	pushf  
  4275f5:	rol    edi,0x86
  4275f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275f9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275ff:	inc    ebp
  427600:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427608:	test   DWORD PTR [eax],edi
  42760a:	clc    
  42760b:	pushf  
  42760c:	inc    ebp
  42760d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427613:	push   eax
  427614:	(bad)  
  427615:	cld    
  427616:	jge    0x427618
  427618:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42761e:	add    BYTE PTR [ebx],dl
  427620:	jmp    0xcd7772
  427625:	les    eax,FWORD PTR [ebp-0x35]
  427628:	mov    ecx,esi
  42762a:	lock or al,cl
  42762d:	clc    
  42762e:	inc    ebp
  42762f:	add    esi,DWORD PTR [ebx]
  427631:	jge    0x427636
  427633:	xor    edi,DWORD PTR [ebx]
  427635:	cmp    ecx,DWORD PTR [edi]
  427637:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42763c:	mov    edi,DWORD PTR [ecx]
  42763e:	test   al,0xcc
  427640:	dec    ebp
  427641:	test   BYTE PTR [ebx],dh
  427643:	pop    es
  427644:	xor    eax,DWORD PTR [eax]
  427646:	add    ecx,DWORD PTR [esi]
  427648:	add    ecx,eax
  42764a:	psraw  mm0,mm1
  42764d:	sub    BYTE PTR [ebp+0x38],cl
  427650:	mov    edi,DWORD PTR [ebx]
  427652:	lock int3 
  427654:	shl    edx,1
  427656:	rol    BYTE PTR [ebp+0xc],1
  427659:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427660:	jmp    0x7b76aa
  427665:	pushf  
  427666:	inc    ebp
  427667:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42766d:	xor    ecx,ebx
  42766f:	add    ecx,esi
  427671:	mov    esi,eax
  427673:	enter  0x45af,0x8b
  427677:	xor    ecx,eax
  427679:	add    edx,DWORD PTR [ebp-0x77]
  42767c:	sub    ecx,DWORD PTR [eax]
  42767e:	cmp    eax,DWORD PTR [ebp+0x77]
  427681:	fmul   DWORD PTR [ebx-0x76385764]
  427687:	test   al,0x0
  427689:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42768f:	cmp    esi,DWORD PTR [ebx]
  427691:	pushf  
  427692:	xor    eax,edi
  427694:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42769b:	inc    ebp
  42769c:	dec    ebp
  42769d:	cmp    eax,0xc7f09c8b
  4276a2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4276a9:	inc    ebp
  4276aa:	jmp    0x4276eb
  4276ac:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4276b3:	dec    ebp
  4276b4:	xor    esi,DWORD PTR [ebx]
  4276b6:	add    eax,DWORD PTR [ebx]
  4276b8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4276be:	dec    ebp
  4276bf:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276c5:	out    dx,eax
  4276c6:	rol    BYTE PTR [eax],1
  4276c8:	add    eax,0xebc8458b
  4276cd:	dec    ebp
  4276ce:	mov    ebp,DWORD PTR [ebx]
  4276d0:	mov    esp,0x33f84d8b
  4276d5:	ret    
  4276d6:	xor    eax,esi
  4276d8:	add    ecx,eax
  4276da:	add    eax,DWORD PTR [edx+0xc1010f]
  4276e0:	dec    ebp
  4276e1:	inc    ebp
  4276e2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276e8:	ror    bl,1
  4276ea:	add    eax,0xebc645ce
  4276ef:	scas   eax,DWORD PTR es:[edi]
  4276f0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276f6:	xor    ebp,DWORD PTR [ebx]
  4276f8:	xor    edi,DWORD PTR [ebx]
  4276fa:	add    esi,DWORD PTR [edi+0x3]
  4276fd:	mov    ecx,DWORD PTR [edi]
  4276ff:	clc    
  427700:	rol    ebx,0x4d
  427703:	(bad)  
  427704:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42770b:	mov    ah,0x45
  42770d:	dec    ebp
  42770e:	jbe    0x427743
  427710:	mov    esi,DWORD PTR [ebx]
  427712:	call   0x3345c41a
  427717:	rdpmc  
  427719:	rol    DWORD PTR [ebx],0x4d
  42771c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427722:	inc    ebp
  427723:	ror    BYTE PTR [ebx+0x45450808],1
  427729:	jmp    0x10a77b9
  42772e:	inc    ebp
  42772f:	inc    ebp
  427730:	(bad)  
  427731:	mov    ebx,eax
  427733:	clc    
  427734:	test   ebx,eax
  427736:	clc    
  427737:	retf   
  427738:	inc    ebp
  427739:	into   
  42773a:	mov    esi,0x8b85afec
  427740:	clc    
  427741:	enter  0x5545,0x3a
  427745:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42774c:	ret    
  42774d:	mov    ah,0xc6
  42774f:	addr16 push 0x338b4545
  427755:	clc    
  427756:	add    eax,ebx
  427758:	loopne 0x427725
  42775a:	dec    ebp
  42775b:	into   
  42775c:	mov    al,dh
  42775e:	or     BYTE PTR [edi-0x37ff748e],ch
  427764:	inc    ebp
  427765:	push   ebp
  427766:	mov    ebp,DWORD PTR [ebx]
  427768:	in     al,dx
  427769:	cmp    eax,ebx
  42776b:	ja     0x4277b2
  42776d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427773:	inc    ebp
  427774:	cwde   
  427775:	mov    esi,DWORD PTR [edx]
  427777:	clc    
  427778:	mov    bl,al
  42777a:	xlat   BYTE PTR ds:[ebx]
  42777b:	retf   
  42777c:	inc    ebp
  42777d:	into   
  42777e:	mov    eax,esi
  427780:	in     al,dx
  427781:	scas   eax,DWORD PTR es:[edi]
  427782:	retf   
  427783:	mov    ecx,DWORD PTR [ebp-0x38]
  427786:	mov    edx,DWORD PTR [ebp-0x24]
  427789:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427790:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427797:	mov    eax,DWORD PTR [ebx]
  427799:	clc    
  42779a:	loopne 0x42775f
  42779c:	push   ebp
  42779d:	retf   
  42779e:	mov    dh,al
  4277a0:	adc    esi,ecx
  4277a2:	jb     0x427753
  4277a4:	add    BYTE PTR [ebx+0x558bc845],cl
  4277aa:	in     al,dx
  4277ab:	sub    eax,ebx
  4277ad:	cmp    ecx,ebx
  4277af:	mov    eax,esi
  4277b1:	mov    esp,0x45af03ce
  4277b6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4277bc:	mov    eax,ebx
  4277be:	in     al,dx
  4277bf:	into   
  4277c0:	dec    ebp
  4277c1:	(bad)  
  4277c2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277c8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277cc:	xor    esp,esp
  4277ce:	sub    eax,DWORD PTR [ebp-0x75]
  4277d1:	add    ebp,esp
  4277d3:	mov    al,0x55
  4277d5:	inc    ebp
  4277d6:	xor    edi,DWORD PTR [eax]
  4277d8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277df:	inc    ebp
  4277e0:	xor    edi,DWORD PTR [ecx]
  4277e2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277e9:	test   DWORD PTR [eax],eax
  4277eb:	clc    
  4277ec:	enter  0x8645,0x33
  4277f0:	inc    DWORD PTR [ebx]
  4277f2:	(bad)  
  4277f3:	jmp    0x42783a
  4277f5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277fb:	inc    ebp
  4277fc:	(bad)  
  4277fd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427803:	cwde   
  427804:	retf   
  427805:	xor    al,cl
  427807:	mov    BYTE PTR [ebp+0xb],cl
  42780a:	lea    eax,[ebp+0x8]
  42780d:	xor    esi,DWORD PTR [edx+0x3]
  427810:	add    al,ah
  427812:	inc    ebp
  427813:	dec    ebp
  427814:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42781a:	push   0x2b45cd00
  42781f:	mov    al,BYTE PTR [ebx]
  427821:	or     esi,eax
  427823:	dec    ebp
  427824:	inc    ebp
  427825:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42782b:	push   ebp
  42782c:	(bad)  
  42782d:	mov    BYTE PTR [edi+0xf723b11],ch
  427833:	add    ch,ch
  427835:	inc    ebp
  427836:	dec    DWORD PTR [ebx-0x34332775]
  42783c:	add    al,0x4d
  42783e:	inc    ebp
  42783f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427845:	cwde   
  427846:	add    DWORD PTR [edx],esi
  427848:	add    BYTE PTR [ebx+0x4d00c000],cl
  42784e:	push   DWORD PTR [ebx]
  427850:	int3   
  427851:	xor    eax,DWORD PTR [eax]
  427853:	add    edx,DWORD PTR [eax+0x3]
  427856:	mov    DWORD PTR [edi],ecx
  427858:	call   0x4288391e
  42785d:	mov    DWORD PTR [ebp-0x20],esp
  427860:	add    BYTE PTR [ebp+0x7d],al
  427863:	mov    eax,DWORD PTR [eax]
  427865:	in     al,0x15
  427867:	ret    
  427868:	iret   
  427869:	(bad)  
  42786a:	enter  0x14af,0x8b
  42786e:	(bad)  
  42786f:	in     al,dx
  427870:	or     bl,cl
  427872:	adc    cl,al
  427874:	push   ebp
  427875:	dec    ebp
  427876:	inc    eax
  427877:	mov    edx,DWORD PTR [ebp-0x20]
  42787a:	jb     0x427847
  42787c:	mov    ecx,esi
  42787e:	cld    
  42787f:	scas   eax,DWORD PTR es:[edi]
  427880:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427887:	mov    BYTE PTR [eax],0x8c
  42788a:	push   0xffffff98
  42788c:	push   edi
  42788d:	xor    dl,BYTE PTR [eax+0x3b]
  427890:	mov    ecx,DWORD PTR [edi]
  427892:	call   0x8c41bdf5
  427897:	mov    eax,eax
  427899:	in     al,dx
  42789a:	jge    0x4278e9
  42789c:	mov    DWORD PTR [ebx],esi
  42789e:	int3   
  42789f:	add    eax,DWORD PTR [ebp+0xf]
  4278a2:	xor    eax,ecx
  4278a4:	(bad)  
  4278a5:	dec    ebp
  4278a6:	pushf  
  4278a7:	xor    ecx,eax
  4278a9:	add    edi,DWORD PTR [edi]
  4278ab:	mov    eax,DWORD PTR [ebp-0x38]
  4278ae:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  4278b5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  4278bb:	xor    edx,DWORD PTR [ecx+edi*4]
  4278be:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278c5:	dec    ebp
  4278c6:	leave  
  4278c7:	mov    edx,ecx
  4278c9:	rol    BYTE PTR [ebp+0x330155],1
  4278cf:	add    ecx,DWORD PTR [ebp+0xf]
  4278d2:	xor    eax,edx
  4278d4:	(bad)  
  4278d5:	ror    DWORD PTR [eax],0x86
  4278d8:	jb     0x4278d7
  4278da:	add    bh,bh
  4278dc:	clc    
  4278dd:	inc    ebp
  4278de:	jb     0x42794a
  4278e0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278e6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278ec:	shr    BYTE PTR [eax-0x3d],0x30
  4278f0:	clc    
  4278f1:	add    BYTE PTR [ebp+0x75],al
  4278f4:	cmp    BYTE PTR [edx-0x64],ch
  4278f7:	inc    edi
  4278f9:	adc    al,0xe8
  4278fb:	inc    ebp
  4278fc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427902:	mov    ecx,DWORD PTR [eax]
  427904:	cld    
  427905:	or     DWORD PTR [ebp-0x34],0x33
  427909:	jbe    0x42790e
  42790b:	mov    edx,DWORD PTR [ecx+0x2b]
  42790e:	dec    ebp
  42790f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427915:	mov    BYTE PTR [ebx],dh
  427917:	mov    eax,DWORD PTR [ebx]
  427919:	or     BYTE PTR [ecx+0x3b],dl
  42791c:	dec    ebp
  42791d:	int3   
  42791e:	xor    ebp,edi
  427920:	add    eax,DWORD PTR [ebp+0x51]
  427923:	mov    ecx,DWORD PTR [ebp-0x28]
  427926:	xor    eax,DWORD PTR [eax]
  427928:	add    ebp,DWORD PTR [eax+0x51]
  42792b:	adc    BYTE PTR [eax+0x0],0x8b
  42792f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427935:	inc    ebp
  427936:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42793c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427942:	dec    ebp
  427943:	mov    esi,DWORD PTR [ebx]
  427945:	hlt    
  427946:	add    eax,ebx
  427948:	push   ecx
  427949:	inc    ebp
  42794a:	dec    ebp
  42794b:	sar    bh,1
  42794d:	shl    ah,1
  42794f:	(bad)  
  427950:	retf   
  427951:	mov    al,ds:0xc5ff3dce
  427956:	adc    al,0xc6
  427958:	inc    ebp
  427959:	and    eax,0x9c0f4c85
  42795e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427965:	cmp    BYTE PTR [ebx+0x3b],0x0
  427969:	mov    dh,0xc7
  42796b:	cmp    eax,eax
  42796d:	jne    0x454371b9
  427973:	mov    edi,DWORD PTR [edx]
  427975:	mov    eax,0x848bcb9c
  42797a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427981:	or     BYTE PTR [edi],cl
  427983:	(bad)  
  427984:	dec    ebp
  427985:	inc    edi
  427986:	add    bh,0x50
  427989:	or     cl,ch
  42798b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427991:	xchg   DWORD PTR [eax-0x1638af64],eax
  427997:	mov    esp,0xf802b588
  42799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42799d:	inc    ebp
  42799e:	(bad)  
  42799f:	cmp    al,0xff
  4279a1:	pushf  
  4279a2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4279a9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4279af:	into   
  4279b0:	dec    DWORD PTR [ebx-0x7f72431c]
  4279b6:	push   0x5000ff01
  4279bb:	retf   
  4279bc:	inc    ebp
  4279bd:	into   
  4279be:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279c4:	push   eax
  4279c5:	into   
  4279c6:	call   0x4a7e56
  4279cb:	retf   
  4279cc:	add    dh,cl
  4279ce:	add    bh,bh
  4279d0:	mov    DWORD PTR [eax+ecx*1],edx
  4279d3:	clc    
  4279d4:	inc    ebp
  4279d5:	inc    ebp
  4279d6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279dc:	push   0x1
  4279de:	push   edi
  4279df:	add    BYTE PTR [eax-0x35],dl
  4279e2:	mov    ecx,esi
  4279e4:	cld    
  4279e5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279eb:	into   
  4279ec:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279f3:	xor    eax,DWORD PTR [ebp+0x3]
  4279f6:	jne    0x427a49
  4279f8:	call   DWORD PTR [eax-0x3c]
  4279fb:	mov    DWORD PTR [ecx-0x18],edx
  4279fe:	mov    edi,edi
  427a00:	call   0x8b45bf89
  427a05:	add    ah,ah
  427a07:	rol    BYTE PTR [ebp-0x7c],0xeb
  427a0b:	add    edi,edi
  427a0d:	add    al,ch
  427a0f:	inc    ebp
  427a10:	push   ecx
  427a11:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427a17:	mov    al,0xc7
  427a19:	test   esp,esp
  427a1b:	clc    
  427a1c:	test   DWORD PTR [ebp-0x8],ecx
  427a1f:	add    BYTE PTR [ebp+0x50],0x39
  427a23:	jmp    0x8bcc02c4
  427a28:	in     al,dx
  427a29:	or     BYTE PTR [ebp-0xf],al
  427a2c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a32:	hlt    
  427a33:	mov    eax,DWORD PTR [ebp-0x50]
  427a36:	xor    esi,ecx
  427a38:	add    eax,DWORD PTR [eax+0x4f086889]
  427a3e:	inc    ebp
  427a3f:	sbb    eax,0x68
  427a42:	pushf  
  427a43:	inc    edi
  427a45:	add    al,ch
  427a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a48:	test   edi,edi
  427a4a:	clc    
  427a4b:	inc    DWORD PTR [ebp-0x73]
  427a4e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a52:	(bad)  
  427a53:	push   ecx
  427a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a55:	jne    0x4279dc
  427a57:	push   eax
  427a58:	clc    
  427a59:	test   DWORD PTR [ebp-0x1],eax
  427a5c:	cmp    eax,0xc78b9cff
  427a61:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a68:	inc    ebp
  427a69:	push   edi
  427a6a:	aas    
  427a6b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a72:	dec    ebp
  427a73:	add    BYTE PTR [ebx],dh
  427a75:	inc    ebp
  427a76:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a7c:	enter  0x8401,0x0
  427a80:	add    al,BYTE PTR [eax]
  427a82:	add    bh,bh
  427a84:	out    dx,eax
  427a85:	sbb    BYTE PTR [eax],al
  427a87:	dec    ebp
  427a88:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a8e:	sub    esi,DWORD PTR [ebx]
  427a90:	mov    ebp,DWORD PTR [eax-0x8]
  427a93:	add    bl,0x0
  427a96:	(bad)  
  427a97:	cmp    eax,ecx
  427a99:	or     BYTE PTR [edx+0x750114],al
  427a9f:	inc    DWORD PTR [ebp+0x18]
  427aa2:	mov    eax,DWORD PTR [ebp-0x8]
  427aa5:	mov    ebx,eax
  427aa7:	(bad)  
  427aa8:	retf   
  427aa9:	inc    ebp
  427aaa:	into   
  427aab:	mov    esi,eax
  427aad:	int3   
  427aae:	scas   eax,DWORD PTR es:[edi]
  427aaf:	push   es
  427ab0:	mov    esi,DWORD PTR [ebp-0xc]
  427ab3:	call   DWORD PTR [ebp+0x18]
  427ab6:	sub    edi,DWORD PTR [ebp+0x3b]
  427ab9:	mov    esi,DWORD PTR [edi-0x34]
  427abc:	mov    eax,DWORD PTR [ebp-0x8]
  427abf:	cmp    bl,al
  427ac1:	pushf  
  427ac2:	mov    bh,0xbc
  427ac5:	fadd   QWORD PTR [eax]
  427ac7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427acd:	mov    esi,DWORD PTR [ebx]
  427acf:	in     al,0x33
  427ad1:	ret    
  427ad2:	add    eax,esi
  427ad4:	add    eax,DWORD PTR [ebp+0xf]
  427ad7:	mov    eax,ecx
  427ad9:	in     al,0x4d
  427adb:	ret    
  427adc:	mov    eax,esi
  427ade:	in     al,dx
  427adf:	inc    ebp
  427ae0:	rol    edi,1
  427ae2:	sar    al,1
  427ae4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aea:	add    BYTE PTR [edx],bh
  427aec:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427af3:	test   ebx,eax
  427af5:	clc    
  427af6:	retf   
  427af7:	inc    ebp
  427af8:	into   
  427af9:	cmp    al,0xc6
  427afb:	pushf  
  427afc:	scas   eax,DWORD PTR es:[edi]
  427afd:	(bad)  
  427afe:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427b05:	inc    ebp
  427b06:	cmp    edi,DWORD PTR [esi]
  427b08:	ja     0x427aa6
  427b0a:	mov    eax,edi
  427b0c:	mov    esp,0x458567a8
  427b11:	clc    
  427b12:	mov    eax,DWORD PTR [ebp-0x8]
  427b15:	mov    eax,ebx
  427b17:	in     al,dx
  427b18:	retf   
  427b19:	ret    
  427b1a:	into   
  427b1b:	mov    dh,0x7d
  427b1e:	scas   eax,DWORD PTR es:[edi]
  427b1f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b25:	add    BYTE PTR [ebx],ch
  427b27:	jmp    0xb97c67
  427b2c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b2f:	mov    eax,DWORD PTR [ebp-0x14]
  427b32:	inc    ebp
  427b33:	enter  0x458b,0xf8
  427b37:	xor    eax,ebx
  427b39:	add    ecx,ebx
  427b3b:	cmp    ecx,esi
  427b3d:	shufps xmm7,xmm4,0xaf
  427b41:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b47:	dec    ebp
  427b48:	sub    esi,DWORD PTR [ebx]
  427b4a:	cmp    esi,DWORD PTR [ebx]
  427b4c:	ja     0x427b51
  427b4e:	mov    eax,DWORD PTR [ebx]
  427b50:	lods   al,BYTE PTR ds:[esi]
  427b51:	mov    db0,ecx
  427b54:	inc    ebp
  427b55:	dec    ebp
  427b56:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b5c:	retf   
  427b5d:	rol    dh,1
  427b5f:	or     al,0xce
  427b61:	inc    ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b69:	add    BYTE PTR [ebx],ch
  427b6b:	add    BYTE PTR [ebx],bh
  427b6d:	inc    ebp
  427b6e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b74:	inc    ebp
  427b75:	retf   
  427b76:	mov    ecx,esi
  427b78:	clc    
  427b79:	(bad)  
  427b7a:	retf   
  427b7b:	scas   eax,DWORD PTR es:[edi]
  427b7c:	ret    
  427b7d:	mov    ecx,esi
  427b7f:	hlt    
  427b80:	(bad)  
  427b81:	push   ebp
  427b82:	scas   eax,DWORD PTR es:[edi]
  427b83:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b89:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b8f:	add    BYTE PTR [ebx],al
  427b91:	mov    eax,eax
  427b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b94:	inc    ebp
  427b95:	dec    ebp
  427b96:	cmp    BYTE PTR [ebx],dh
  427b98:	pushf  
  427b99:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b9f:	(bad)  
  427ba1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427ba9:	sar    eax,1
  427bab:	rol    BYTE PTR [ebp+0x5],1
  427bae:	xor    eax,DWORD PTR [ebp+0x3]
  427bb1:	jmp    0x427b9e
  427bb3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427bb9:	xor    eax,DWORD PTR [ebp+0x33]
  427bbc:	mov    eax,DWORD PTR [ebx]
  427bbe:	rol    BYTE PTR [ebx],1
  427bc0:	test   BYTE PTR [edi],cl
  427bc2:	cwde   
  427bc3:	shl    DWORD PTR [edx],0x4d
  427bc6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bcc:	xor    edx,eax
  427bce:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bd4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bda:	add    BYTE PTR [ebx],dh
  427bdc:	inc    ebp
  427bdd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427be3:	rdpmc  
  427be5:	rol    DWORD PTR [ebx],0x4d
  427be8:	loopne 0x427b75
  427bea:	push   ebp
  427beb:	in     al,dx
  427bec:	mov    cl,dl
  427bee:	adc    eax,edx
  427bf0:	jb     0x427bf7
  427bf2:	add    BYTE PTR [ebp+0x45],al
  427bf5:	jmp    0x427b82
  427bf7:	mov    ebx,eax
  427bf9:	test   al,0xcb
  427bfb:	dec    ebp
  427bfc:	dec    ebp
  427bfd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427c03:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427c09:	dec    ebp
  427c0a:	mov    al,0x8b
  427c0c:	dec    ebp
  427c0d:	in     al,dx
  427c0e:	xor    edx,ecx
  427c10:	xor    edx,eax
  427c12:	add    eax,DWORD PTR [ebp+0x3]
  427c15:	jbe    0x427c26
  427c17:	mov    eax,ecx
  427c19:	test   al,0x45
  427c1b:	dec    ebp
  427c1c:	mov    DWORD PTR [ebx],esi
  427c1e:	loopne 0x427c53
  427c20:	inc    ebp
  427c21:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c27:	rol    esi,0x45
  427c2a:	scas   eax,DWORD PTR es:[edi]
  427c2b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c31:	mov    eax,ecx
  427c33:	hlt    
  427c34:	dec    ebp
  427c35:	inc    ebp
  427c36:	mov    eax,edi
  427c38:	loopne 0x427c12
  427c3a:	retf   
  427c3b:	test   esi,ecx
  427c3d:	clc    
  427c3e:	scas   eax,DWORD PTR es:[edi]
  427c3f:	inc    ebp
  427c40:	mov    eax,edi
  427c42:	fdiv   st,st(0)
  427c44:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c4a:	cwde   
  427c4b:	cmp    dh,BYTE PTR [edx]
  427c4d:	pushf  
  427c4e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c54:	inc    esi
  427c56:	mov    ebp,DWORD PTR [eax-0x10]
  427c59:	inc    ebp
  427c5a:	dec    ebp
  427c5b:	xor    esi,DWORD PTR [ebx]
  427c5d:	add    eax,DWORD PTR [ebx]
  427c5f:	loopne 0x427c70
  427c61:	dec    ebp
  427c62:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c69:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c6f:	lock cwde 
  427c71:	ret    
  427c72:	xor    al,BYTE PTR [ebp-0x77]
  427c75:	mov    esi,esp
  427c77:	rol    BYTE PTR [ebp-0x7c],1
  427c7a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c80:	call   edi
  427c82:	enter  0x4d45,0x8b
  427c86:	mov    esi,eax
  427c88:	fmul   st(3),st
  427c8a:	push   ebp
  427c8b:	dec    ebp
  427c8c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c92:	ret    0xc198
  427c95:	xor    al,BYTE PTR [esi-0x280276]
  427c9b:	dec    ebp
  427c9c:	jne    0x427cd1
  427c9e:	mov    eax,DWORD PTR [ebx]
  427ca0:	cld    
  427ca1:	loopne 0x427c53
  427ca3:	push   ebp
  427ca4:	add    DWORD PTR [eax+0x72851100],ecx
  427caa:	inc    DWORD PTR [eax]
  427cac:	inc    DWORD PTR [ebp-0x75]
  427caf:	mov    edi,esp
  427cb1:	lock add bl,0x1
  427cb5:	retf   
  427cb6:	add    dh,al
  427cb8:	xor    dh,cl
  427cba:	inc    ebp
  427cbb:	scas   eax,DWORD PTR es:[edi]
  427cbc:	mov    eax,DWORD PTR [ebx]
  427cbe:	shl    al,0x0
  427cc1:	inc    ebp
  427cc2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427cc8:	call   0x458f00
  427ccd:	ud0    eax,ecx
  427cd0:	adc    al,0x4d
  427cd2:	inc    ebp
  427cd3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cd9:	lock push 0x338055
  427cdf:	add    eax,DWORD PTR [eax]
  427ce1:	ud0    ecx,edx
  427ce4:	sbb    BYTE PTR [ebp+0x5e],dl
  427ce7:	xor    ecx,ecx
  427ce9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cf0:	push   ecx
  427cf1:	add    BYTE PTR [ebp-0x38],cl
  427cf4:	mov    DWORD PTR [esi-0x740004],eax
  427cfa:	cld    
  427cfb:	inc    ebp
  427cfc:	xchg   edx,eax
  427cfd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427d03:	xabort 0xaf
  427d06:	icebp  
  427d07:	mov    esi,DWORD PTR [ebp-0x28]
  427d0a:	(bad)  
  427d0b:	retf   
  427d0c:	or     ecx,eax
  427d0e:	(bad)  
  427d0f:	dec    ebp
  427d10:	pop    es
  427d11:	(bad)  
  427d12:	(bad)  
  427d13:	or     BYTE PTR [esi],al
  427d15:	jb     0x427cdd
  427d17:	add    BYTE PTR [ebx],al
  427d19:	inc    ebp
  427d1a:	(bad)  
  427d1b:	mov    ecx,DWORD PTR [edx]
  427d1d:	fadd   st(6),st
  427d1f:	ret    
  427d20:	add    ch,BYTE PTR [eax-0x37]
  427d23:	int    0x55
  427d25:	sub    ebp,esp
  427d27:	add    edx,DWORD PTR [ecx-0x14]
  427d2a:	inc    ebp
  427d2b:	inc    ebp
  427d2c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d32:	cld    
  427d33:	(bad)  
  427d34:	mov    gs,WORD PTR [edi+0xf893be0]
  427d3a:	mov    ebp,ebp
  427d3c:	clc    
  427d3d:	push   eax
  427d3f:	push   DWORD PTR [ebp-0x4]
  427d42:	mov    BYTE PTR [ebp+0xa],0xff
  427d46:	(bad)  
  427d47:	int3   
  427d48:	or     BYTE PTR [eax],al
  427d4a:	(bad)  
  427d4b:	lea    eax,[edi]
  427d4d:	ins    BYTE PTR es:[edi],dx
  427d4e:	(bad)  
  427d4f:	inc    DWORD PTR [ecx]
  427d51:	push   eax
  427d52:	mov    BYTE PTR [ebp+0x9],0x8b
  427d56:	leave  
  427d57:	les    edx,FWORD PTR [ebp+0x0]
  427d5a:	in     al,dx
  427d5b:	call   DWORD PTR [ecx-0x75]
  427d5e:	inc    ebp
  427d5f:	cld    
  427d60:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d66:	cld    
  427d67:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d6d:	std    
  427d6e:	mov    eax,DWORD PTR [eax]
  427d70:	clc    
  427d71:	test   eax,esi
  427d73:	je     0x427dea
  427d75:	mov    eax,esi
  427d77:	cld    
  427d78:	add    al,0x80
  427d7a:	add    WORD PTR [ecx+0x0],ax
  427d7e:	fadd   QWORD PTR [eax]
  427d80:	mov    BYTE PTR [eax],0xd0
  427d83:	push   0xffffffc3
  427d85:	push   edi
  427d86:	mov    edx,DWORD PTR [eax+0x51]
  427d89:	pop    edi
  427d8a:	lea    ebx,[ebx-0x8]
  427d8d:	ret    0x45
  427d90:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d96:	xchg   eax,edi
  427d98:	mov    DWORD PTR [ebp-0x75],ecx
  427d9b:	push   esi
  427d9c:	clc    
  427d9d:	jne    0x427d6f
  427d9f:	mov    ecx,0xf8450b0b
  427da4:	(bad)  
  427da5:	push   cs
  427da6:	or     BYTE PTR [ebp-0x3a],dh
  427da9:	cmp    eax,DWORD PTR [ecx]
  427dab:	pop    esi
  427dac:	(bad)  
  427dad:	or     al,0x5
  427daf:	inc    eax
  427db0:	leave  
  427db1:	in     al,dx
  427db2:	add    al,0x42
  427db4:	push   esi
  427db5:	and    eax,0xedc940cf
  427dba:	inc    DWORD PTR [eax-0x75]
  427dbd:	fmul   QWORD PTR [ebx-0xf8739be]
  427dc3:	inc    eax
  427dc4:	nop
  427dc5:	jmp    0x518b:0x8b8bc3ff
  427dcc:	(bad)  
  427dcd:	lea    eax,ds:0xff45e8f8
  427dd3:	push   esi
  427dd4:	push   DWORD PTR [ebp-0x39]
  427dd7:	mov    eax,0x7edda46
  427ddc:	or     al,0x6
  427dde:	push   DWORD PTR [ebp-0x3a]
  427de1:	cmp    eax,DWORD PTR [edx]
  427de3:	pop    esi
  427de4:	ret    
  427de5:	or     al,0x56
  427de7:	inc    ecx
  427de8:	push   ebp
  427de9:	js     0x427dd7
  427deb:	inc    edx
  427dec:	inc    ebp
  427ded:	int    0x1
  427def:	inc    ecx
  427df0:	sub    BYTE PTR ds:0xe77541fc,ah
  427df6:	add    DWORD PTR [edx+0x1c],eax
  427df9:	int3   
  427dfa:	mov    eax,ebx
  427dfc:	adc    al,0x8b
  427dfe:	xchg   edx,eax
  427dff:	push   ecx
  427e00:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427e06:	rcl    DWORD PTR [esi-0x9],cl
  427e09:	jne    0x427e5b
  427e0b:	mov    eax,0x7c80ece
  427e10:	rol    DWORD PTR [esi],cl
  427e12:	div    DWORD PTR [ebp+0x50]
  427e15:	cmp    ecx,edx
  427e17:	pop    esi
  427e18:	dec    BYTE PTR [edx]
  427e1a:	in     al,dx
  427e1b:	inc    edx
  427e1c:	sub    ebp,ecx
  427e1e:	inc    eax
  427e1f:	(bad)  
  427e20:	push   eax
  427e21:	add    edx,DWORD PTR [eax-0x17]
  427e24:	push   edi
  427e25:	add    dh,dh
  427e27:	leave  
  427e28:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e2c:	add    BYTE PTR [ecx+0x0],dl
  427e2f:	inc    ebp
  427e30:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e36:	add    BYTE PTR [eax-0x7fbf448],bh
  427e3c:	add    al,0x2
  427e3e:	jmp    0x57e2998
  427e43:	jne    0x427e2d
  427e45:	mov    eax,DWORD PTR [edx]
  427e47:	or     BYTE PTR [eax],al
  427e49:	inc    ecx
  427e4a:	stc    
  427e4b:	in     eax,dx
  427e4c:	ss inc eax
  427e4e:	aas    
  427e4f:	out    0x7d,eax
  427e51:	inc    ecx
  427e52:	mov    esi,ecx
  427e54:	lock ret 0x7d
  427e58:	and    ecx,DWORD PTR [ebx-0x171777]
  427e5e:	add    bh,bh
  427e60:	aad    0xd7
  427e62:	add    dh,cl
  427e64:	clts   
  427e66:	(bad)  
  427e67:	call   0xffcd7d6c
  427e6c:	hlt    
  427e6d:	iret   
  427e6e:	jge    0x427e46
  427e70:	rol    DWORD PTR [esi-0x80],cl
  427e73:	icebp  
  427e74:	or     BYTE PTR [edi-0x27],cl
  427e77:	(bad)  
  427e78:	out    dx,al
  427e79:	mov    eax,DWORD PTR [ebx]
  427e7b:	(bad)  
  427e7c:	pop    esi
  427e7d:	push   es
  427e7e:	cmp    al,0xe8
  427e80:	sar    edi,0x8
  427e83:	inc    DWORD PTR [edi]
  427e85:	inc    esi
  427e86:	(bad)  
  427e87:	jmp    0x8b00:0x530e577e
  427e8e:	push   esi
  427e8f:	mov    eax,DWORD PTR [eax]
  427e91:	and    al,0x0
  427e93:	inc    ebp
  427e94:	push   eax
  427e95:	push   eax
  427e96:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e9c:	sub    edx,DWORD PTR [esi-0x24]
  427e9f:	jne    0x427e57
  427ea1:	lods   eax,DWORD PTR ds:[esi]
  427ea2:	mov    edx,DWORD PTR [edx-0x34]
  427ea5:	dec    esi
  427ea6:	out    0x83,eax
  427ea8:	into   
  427ea9:	push   edi
  427eab:	loopne 0x427e7b
  427ead:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427eb1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427eb8:	rol    DWORD PTR [edx],0x8
  427ebb:	mov    esp,ecx
  427ebd:	cmp    DWORD PTR [ebx],0xc
  427ec0:	mov    esi,0x5001c0
  427ec5:	push   eax
  427ec6:	push   cs
  427ec7:	push   eax
  427ec8:	(bad)  
  427ec9:	sub    edx,edi
  427ecb:	push   esi
  427ecc:	adc    al,0xcb
  427ece:	ins    DWORD PTR es:[edi],dx
  427ecf:	mov    eax,0x203e8
  427ed4:	add    al,ah
  427ed6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427edd:	add    dh,al
  427edf:	add    ah,ch
  427ee1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ee7:	pop    ecx
  427ee8:	or     eax,ebx
  427eea:	cli    
  427eeb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ef1:	lea    ebp,[ebx]
  427ef3:	mov    edx,DWORD PTR [edx-0x4]
  427ef6:	dec    ecx
  427ef7:	inc    ebp
  427ef8:	shr    BYTE PTR [ebx],0x4b
  427efb:	and    al,0x0
  427efd:	(bad)  
  427efe:	jne    0x427f45
  427f00:	pop    eax
  427f01:	mov    al,0x5a
  427f03:	call   0x1418162
  427f08:	and    al,0x85
  427f0a:	push   edx
  427f0b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427f0f:	dec    ebp
  427f10:	mov    cl,0x23
  427f12:	jmp    0x427f00
  427f14:	mov    al,0xe7
  427f16:	call   0x1388204
  427f1b:	shr    DWORD PTR [eax+ebx*2],cl
  427f1e:	lock (bad) 
  427f20:	adc    eax,0x757f008d
  427f25:	out    0x58,eax
  427f27:	cmp    al,0x7
  427f29:	pop    edx
  427f2a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f31:	push   ecx
  427f32:	cld    
  427f33:	mov    esi,0x3b0175
  427f38:	and    al,0xb0
  427f3a:	xor    BYTE PTR [edx+0x1],0x8b
  427f3e:	add    ah,bh
  427f40:	mov    edi,DWORD PTR [ebp-0x4]
  427f43:	psubsw mm7,QWORD PTR [edi]
  427f46:	add    DWORD PTR [ebp+0x0],ebp
  427f49:	rcr    eax,1
  427f4b:	mov    edi,ecx
  427f4d:	and    eax,DWORD PTR [eax]
  427f4f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f55:	call   0x12f823e
  427f5a:	add    al,cl
  427f5c:	mov    ebp,esi
  427f5e:	aam    0x83
  427f60:	or     DWORD PTR [ecx],eax
  427f62:	jne    0x427f55
  427f64:	mov    eax,DWORD PTR [eax]
  427f66:	aam    0x0
  427f68:	dec    ebp
  427f69:	jne    0x427ef6
  427f6b:	cmp    ebx,eax
  427f6d:	jb     0x427fbc
  427f6f:	jmp    0x427efc
  427f71:	mov    ebx,esp
  427f73:	int3   
  427f74:	dec    ebp
  427f75:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f7c:	mov    edx,0x8b0a8b
  427f81:	cmp    ecx,DWORD PTR [eax]
  427f83:	jb     0x427f5c
  427f85:	pop    edx
  427f86:	push   edi
  427f87:	cli    
  427f88:	pop    es
  427f89:	mov    eax,ecx
  427f8b:	jb     0x427f8f
  427f8d:	add    DWORD PTR [ebx],0xa
  427f90:	mov    eax,DWORD PTR [ebx]
  427f92:	int3   
  427f93:	add    bh,BYTE PTR [esi+0x75d10006]
  427f99:	jmp    0x427f26
  427f9b:	mov    al,0xe8
  427f9d:	call   0x103821f
  427fa2:	add    edx,DWORD PTR [ecx+ecx*8]
  427fa5:	pop    edi
  427fa6:	or     BYTE PTR [ecx-0x73],bl
  427fa9:	pop    ecx
  427faa:	inc    edi
  427fab:	xor    al,0xeb
  427fad:	push   ecx
  427fae:	mov    edi,DWORD PTR [edx+0xc506cc]
  427fb4:	call   0xb180b9
  427fb9:	int3   
  427fba:	sbb    BYTE PTR [esi],ch
  427fbc:	inc    ebp
  427fbd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fc3:	call   0x9b8232
  427fc8:	or     BYTE PTR [ebx-0x73],dl
  427fcb:	cmp    al,0x47
  427fcd:	mov    al,0x1
  427fcf:	jb     0x427fd1
  427fd1:	mov    al,0x10
  427fd3:	push   eax
  427fd4:	add    al,0x75
  427fd6:	add    BYTE PTR [ebx],ch
  427fd8:	add    ebx,esp
  427fda:	int3   
  427fdb:	jne    0x427fed
  427fdd:	movsx  edx,cl
  427fe0:	add    DWORD PTR [eax],eax
  427fe2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fe9:	mov    gs,edi
  427feb:	add    BYTE PTR [eax-0x50],ch
  427fee:	add    al,ch
  427ff0:	mov    eax,DWORD PTR [ecx]
  427ff2:	sub    eax,DWORD PTR [eax]
  427ff4:	jb     0x42806b
  427ff6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427ffa:	jge    0x427fe4
  427ffc:	add    al,0x1
  427ffe:	add    DWORD PTR [eax],0x0
  428001:	jne    0x428003
  428003:	je     0x42804a
  428005:	mov    eax,DWORD PTR [edi]
  428007:	ror    BYTE PTR [ebp+0x4d],1
  42800a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428011:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428017:	mov    DWORD PTR [ebx],ebp
  428019:	fadd   DWORD PTR [eax+0x75]
  42801c:	inc    eax
  42801d:	pop    eax
  42801e:	lea    ebx,[ecx+0x4f]
  428021:	push   0xb1000003
  428026:	out    dx,eax
  428027:	add    ebp,DWORD PTR [edx+edx*2]
  42802a:	add    BYTE PTR [ebx+ecx*4],bh
  42802d:	mov    ch,BYTE PTR [ebx]
  42802f:	jb     0x4280a3
  428031:	add    al,0x89
  428033:	push   eax
  428034:	call   0x842acda6
  428039:	add    DWORD PTR [eax+eax*1],eax
  42803c:	jae    0x428052
  42803e:	icebp  
  42803f:	inc    ebp
  428040:	mov    eax,DWORD PTR gs:[ecx]
  428043:	int3   
  428044:	out    dx,al
  428045:	loopne 0x428094
  428047:	sub    eax,DWORD PTR [edx]
  428049:	push   0xffffff83
  42804b:	pop    esi
  42804c:	push   cs
  42804d:	jl     0x428068
  42804f:	add    al,0xaf
  428051:	xor    eax,0x832b6d00
  428056:	mov    eax,DWORD PTR [edx]
  428058:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42805e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428064:	inc    ebp
  428065:	shr    ebx,0x3
  428068:	or     DWORD PTR [eax],0x4
  42806b:	push   0xffffffa5
  42806d:	pop    esi
  42806e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428075:	jmp    0x4280d4
  428077:	mov    edi,0xff0272
  42807c:	fdivr  QWORD PTR [ebp+0x5d]
  42807f:	push   0x4e
  428081:	pop    ecx
  428082:	call   0x42c487
  428087:	mov    DWORD PTR [ebx],eax
  428089:	in     al,0xc8
  42808b:	rol    BYTE PTR [ebp-0x75],0xc1
  42808f:	call   0xac8270
  428094:	pop    esi
  428095:	enter  0xceff,0x8b
  428099:	repz mov ecx,DWORD PTR [ebp-0x34]
  42809d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4280a4:	je     0x4280a6
  4280a6:	or     DWORD PTR [ebx-0x74183b24],eax
  4280ac:	jne    0x428092
  4280ae:	jmp    0x4280a9
  4280b0:	push   DWORD PTR [edx-0x24]
  4280b3:	push   0x4d
  4280b5:	pop    ecx
  4280b6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4280ba:	jge    0x4280c2
  4280bc:	mov    eax,eax
  4280be:	sub    ebp,DWORD PTR [edx+0x24]
  4280c1:	pop    esi
  4280c2:	inc    ebp
  4280c3:	mov    esp,0x8b6077
  4280c8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ce:	lods   al,BYTE PTR ds:[esi]
  4280cf:	add    BYTE PTR [ebx],bh
  4280d1:	enter  0xce73,0x49
  4280d5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280dd:	stc    
  4280de:	jge    0x428152
  4280e0:	jnp    0xdd42044f
  4280e6:	call   0xc581bc
  4280eb:	fadd   st(0),st
  4280ed:	dec    esi
  4280ee:	ins    BYTE PTR es:[edi],dx
  4280ef:	stc    
  4280f0:	cmp    al,0x73
  4280f2:	push   ebp
  4280f3:	mov    eax,0xf8028b
  4280f8:	jne    0x4280bb
  4280fa:	mov    esi,ecx
  4280fc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280ff:	add    edi,DWORD PTR [ebp-0x24]
  428102:	sub    esp,eax
  428104:	and    al,0x45
  428106:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42810c:	sbb    al,0xee
  42810e:	pop    esi
  42810f:	call   0x82813f
  428114:	fsubr  st,st(3)
  428116:	sti    
  428117:	add    BYTE PTR gs:[ecx],bh
  42811a:	add    eax,esp
  42811c:	add    DWORD PTR [esi],eax
  42811e:	rol    DWORD PTR [ebp+0x8],0x29
  428122:	mov    esp,eax
  428124:	clc    
  428125:	jne    0x42819c
  428127:	mov    eax,0x8b0673
  42812c:	loopne 0x428173
  42812e:	loopne 0x4280b9
  428130:	lods   al,BYTE PTR ds:[esi]
  428131:	int3   
  428132:	inc    ebp
  428133:	mov    DWORD PTR gs:[eax+edi*8],eax
  428137:	add    al,0xc3
  428139:	sub    ecx,DWORD PTR [ebp+0x47]
  42813c:	(bad)  
  42813e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428142:	add    eax,DWORD PTR [eax]
  428144:	call   0x6444249
  428149:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42814f:	dec    esi
  428150:	ins    DWORD PTR es:[edi],dx
  428151:	in     al,dx
  428152:	lea    eax,[eax]
  428154:	inc    ebp
  428155:	inc    ebp
  428156:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42815c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428166:	and    al,0xdc
  428168:	ror    DWORD PTR [edx+0x24],0xf7
  42816c:	or     BYTE PTR [ebp+0x4c],dh
  42816f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428173:	stos   BYTE PTR es:[edi],al
  428174:	adc    edx,edi
  428176:	inc    esp
  428177:	add    edi,DWORD PTR [eax]
  428179:	jne    0x42815e
  42817b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428181:	cmp    ecx,DWORD PTR [edi]
  428183:	sub    BYTE PTR [ebp-0x7e],dl
  428186:	sar    ebp,0xb
  428189:	jmp    FWORD PTR [edi+0x2400392a]
  42818f:	sub    esi,DWORD PTR [ebx-0x73]
  428192:	mov    esp,DWORD PTR [ecx+edi*4]
  428195:	mov    ecx,DWORD PTR [eax]
  428197:	and    BYTE PTR [eax],al
  428199:	jne    0x428165
  42819b:	sub    ebp,ecx
  42819d:	sbb    BYTE PTR [esi+0x32],ah
  4281a0:	dec    ebp
  4281a1:	push   ebp
  4281a2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4281a8:	ret    
  4281a9:	mov    edx,ebp
  4281ab:	leave  
  4281ac:	sub    DWORD PTR [esi+0x24],ebx
  4281af:	ret    0x2b
  4281b2:	pop    ax
  4281b4:	push   ebp
  4281b5:	rol    BYTE PTR [ebx],0xeb
  4281b8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4281bf:	jb     0x428216
  4281c1:	ret    
  4281c2:	in     al,dx
  4281c3:	jecxz  0x428150
  4281c5:	push   esi
  4281c6:	xchg   esp,eax
  4281c7:	jne    0x4281c9
  4281c9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281cc:	jne    0x4281b2
  4281ce:	mov    eax,DWORD PTR [ebp-0x77]
  4281d1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281d8:	mov    esi,DWORD PTR [ebp-0x75]
  4281db:	pop    esi
  4281dc:	nop
  4281dd:	mov    eax,DWORD PTR [eax]
  4281df:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281e5:	add    al,0x0
  4281e7:	inc    ebp
  4281e8:	mov    eax,DWORD PTR [ebx]
  4281ea:	mov    ebp,ebx
  4281ec:	cmp    al,0xf
  4281ee:	or     al,al
  4281f0:	inc    ebp
  4281f1:	inc    ebp
  4281f2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281f8:	cld    
  4281f9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281ff:	add    BYTE PTR [ecx-0x5],dl
  428202:	add    eax,0x17200
  428207:	sbb    al,0x85
  428209:	dec    esp
  42820a:	je     0x428244
  42820c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428210:	add    BYTE PTR [ebx],bh
  428212:	(bad)  
  428213:	and    al,0x39
  428215:	jae    0x4281b3
  428217:	mov    cl,cl
  428219:	inc    DWORD PTR [esp]
  42821c:	push   ebp
  42821d:	shr    esp,0x8
  428220:	in     al,dx
  428221:	push   esp
  428222:	add    DWORD PTR [eax],esp
  428224:	add    bl,cl
  428226:	inc    ebp
  428227:	mov    bh,0x89
  428229:	add    ah,bh
  42822b:	jmp    0xca7b9175
  428230:	pushf  
  428231:	dec    esp
  428232:	mov    edx,0xf8178520
  428237:	fst    DWORD PTR [ebp+0x0]
  42823a:	mov    BYTE PTR [eax],0xc4
  42823d:	sub    edx,DWORD PTR [ebx-0x3f]
  428240:	inc    ebp
  428241:	add    eax,0xc601dc
  428246:	mov    al,0xc6
  428249:	ins    BYTE PTR es:[edi],dx
  42824a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428251:	dec    esp
  428252:	jmp    DWORD PTR [eax]
  428254:	inc    ebp
  428255:	fnstcw WORD PTR [eax+0x29]
  428258:	test   BYTE PTR [eax],0xc5
  42825b:	rol    BYTE PTR [eax],0xc0
  42825e:	lea    ecx,[ebp-0x3cf0dbcb]
  428264:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42826a:	inc    esi
  42826b:	add    DWORD PTR [eax],ebx
  42826d:	add    dh,bh
  42826f:	mov    esi,DWORD PTR [edx+0x8]
  428272:	(bad)  
  428273:	fdiv   QWORD PTR ss:[ecx]
  428276:	(bad)  
  428277:	mov    bl,ch
  428279:	add    esi,eax
  42827b:	add    dh,bl
  42827d:	or     esi,eax
  42827f:	mov    dl,0xdf
  428281:	add    esi,eax
  428283:	add    al,ah
  428285:	push   cs
  428286:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42828d:	or     BYTE PTR [ebx],dh
  42828f:	dec    ecx
  428290:	lea    eax,[ebx]
  428292:	xor    eax,0x18fc0fc7
  428297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428298:	repz clc 
  42829a:	add    eax,DWORD PTR [ebp+0x46]
  42829d:	prefetcht0 BYTE PTR [ecx-0x2]
  4282a1:	xor    eax,0x7c60872
  4282a6:	mov    esp,0xbd32c698
  4282ab:	pop    esi
  4282ac:	mov    cl,0xbe
  4282af:	or     al,0xc6
  4282b1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4282b8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4282bf:	add    dh,al
  4282c1:	mov    eax,ebx
  4282c3:	xor    DWORD PTR [ebx],0x35008dbc
  4282c9:	mov    ecx,DWORD PTR [edi]
  4282cb:	sbb    al,0x18
  4282cd:	inc    ebp
  4282ce:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282d5:	clc    
  4282d6:	(bad)  
  4282d7:	cmp    BYTE PTR [edx-0x64],dh
  4282da:	lea    ecx,[ecx+0x45ffe838]
  4282e0:	mov    ecx,esp
  4282e2:	fadd   st,st(6)
  4282e4:	dec    ebp
  4282e5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282eb:	out    0x1,eax
  4282ed:	inc    ebp
  4282ee:	lea    ebp,ds:0xc8ffc6ff
  4282f4:	enter  0xa33,0xc6
  4282f8:	push   ebp
  4282f9:	leave  
  4282fa:	(bad)  
  4282fb:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428301:	add    BYTE PTR [ebp+0x44],al
  428304:	mov    eax,esp
  428306:	mov    WORD PTR [esi+0x43398300],?
  42830c:	psubusw mm4,QWORD PTR [eax-0x78]
  428310:	add    BYTE PTR [ebx-0x1303f975],al
  428316:	add    BYTE PTR [ebp+0x1],0xf3
  42831a:	add    BYTE PTR [ebp+0x38],al
  42831d:	in     eax,dx
  42831e:	inc    ebp
  42831f:	inc    ebp
  428320:	mov    esp,ebx
  428322:	add    BYTE PTR [ebp+0x0],0xee
  428326:	mov    DWORD PTR [ebp-0x48],eax
  428329:	sub    eax,0x2e00454f
  42832e:	js     0x428375
  428330:	data16 js 0x4282b8
  428333:	idiv   bh
  428335:	inc    esp
  428336:	(bad)  
  428337:	fadd   st(7),st
  428339:	mov    dh,0x89
  42833b:	and    DWORD PTR [esi+0x43],0xffffffff
  42833f:	fld    DWORD PTR [ebx-0x767cc078]
  428345:	pop    es
  428346:	push   0x8d45ffec
  42834b:	in     eax,dx
  42834c:	inc    DWORD PTR [ebp-0x77]
  42834f:	loopne 0x4283bb
  428351:	inc    ebp
  428352:	jmp    esp
  428354:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428358:	mov    DWORD PTR [ebp+0x6c],eax
  42835b:	(bad)  
  42835d:	inc    ebp
  42835e:	(bad)  
  42835f:	call   0xe7cbc870
  428364:	outs   dx,BYTE PTR ds:[esi]
  428365:	inc    ebp
  428366:	(bad)  
  428367:	js     0x4282ec
  428369:	div    BYTE PTR ds:0x70bc8944
  42836f:	mov    dh,0xff
  428371:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428378:	jb     0x4282fd
  42837a:	dec    DWORD PTR [eax]
  42837c:	mov    ebp,esp
  42837e:	test   WORD PTR [ebp-0x1],ax
  428385:	inc    ebp
  428386:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42838d:	adc    edi,edi
  42838f:	mov    ecx,esi
  428391:	mov    eax,DWORD PTR [eax]
  428393:	cmp    BYTE PTR [esi-0x1],ah
  428396:	test   DWORD PTR [ebx],edi
  428398:	push   DWORD PTR [ebp-0x1]
  42839b:	mov    DWORD PTR [esi-0x48],ebp
  42839e:	add    BYTE PTR [ebp+0x66],al
  4283a1:	jmp    0x428328
  4283a3:	pushf  
  4283a4:	dec    DWORD PTR [ebx-0x7f9c0301]
  4283aa:	add    BYTE PTR [ecx],al
  4283ac:	data16 add BYTE PTR [ebp-0x7a00c8],al
  4283b3:	add    al,al
  4283b5:	add    BYTE PTR [esi+0x45],ah
  4283b8:	test   DWORD PTR [ebx+0xff7cff],ecx
  4283be:	dec    esp
  4283bf:	mov    DWORD PTR [eax],eax
  4283c1:	mov    esp,DWORD PTR [esi-0x4]
  4283c4:	inc    ebp
  4283c5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283cc:	mov    DWORD PTR [ecx-0x7e],esp
  4283cf:	add    BYTE PTR [edi-0x73],al
  4283d2:	push   0xffffffd1
  4283d4:	mov    WORD PTR [ebp+0x64],ax
  4283d8:	(bad)  
  4283d9:	call   eax
  4283db:	mov    esp,eax
  4283dd:	data16 icebp 
  4283df:	test   DWORD PTR [ebp-0x1],eax
  4283e2:	(bad)  
  4283e4:	out    0xc0,eax
  4283e6:	lea    esp,[esi-0x30]
  4283e9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283ef:	inc    edi
  4283f0:	jmp    0x75ff:0x40858866
  4283f7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283fd:	test   esi,edi
  4283ff:	(bad)  
  428400:	(bad)  
  428401:	inc    DWORD PTR [ebp-0x9901b9]
  428407:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  42840d:	rcl    BYTE PTR [ecx+0x66],0x33
  428411:	test   DWORD PTR [ebx+0xff72ff],edi
  428417:	inc    edi
  428418:	ret    
  428419:	mov    ax,WORD PTR [ebp-0x3f0004]
  428420:	push   eax
  428421:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428428:	add    BYTE PTR [ebx-0x764ff439],al
  42842e:	push   DWORD PTR [esi+0x1]
  428431:	inc    DWORD PTR [eax]
  428433:	mov    eax,0xff99ff
  428438:	or     BYTE PTR [ecx-0x7a87bb],cl
  42843e:	jne    0x4283f8
  428440:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42844a:	mov    ecx,0xd74fb8
  42844f:	add    cl,al
  428451:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428457:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42845e:	(bad)  
  42845f:	push   ebp
  428461:	mov    eax,0x8c2789
  428466:	ret    0x6689
  428469:	adc    BYTE PTR [ebp+0x4c],0x8d
  42846d:	add    bl,bl
  42846f:	mov    WORD PTR [ebp-0x70],ax
  428473:	(bad)  
  428474:	ret    0x660d
  428477:	or     BYTE PTR [ebp-0x77],dl
  42847a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428481:	in     al,0x89
  428483:	(bad)  
  428484:	xchg   esi,eax
  428485:	aam    0xcf
  428487:	call   0x45dafd15
  42848c:	dec    edx
  42848d:	pop    ecx
  42848e:	mov    edx,DWORD PTR [eax]
  428490:	repnz push bp
  428493:	or     BYTE PTR [ebx+0x5510663b],0x49
  42849a:	(bad)  
  42849b:	repnz xor eax,0xa0898945
  4284a1:	mov    ah,0x89
  4284a3:	jmp    DWORD PTR [edx+0x66b0418d]
  4284a9:	inc    DWORD PTR [ebp+0x50]
  4284ac:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4284b0:	mov    DWORD PTR [eax],ecx
  4284b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b3:	pop    es
  4284b4:	inc    ecx
  4284b5:	(bad)  
  4284b6:	cbw    
  4284b8:	inc    ebp
  4284b9:	xor    ah,BYTE PTR [esi+0x3]
  4284bc:	dec    ebp
  4284bd:	push   eax
  4284be:	inc    bp
  4284c0:	jge    0x428445
  4284c2:	mov    esp,DWORD PTR [esi-0x18]
  4284c5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284cb:	add    DWORD PTR [ebx],esi
  4284cd:	add    BYTE PTR [ebx],al
  4284cf:	test   DWORD PTR [ebx],esi
  4284d1:	(bad)  
  4284d2:	inc    WORD PTR [ebp+0x0]
  4284d6:	mov    eax,DWORD PTR [eax]
  4284d8:	call   0x88983c0d
  4284dd:	mov    esi,eax
  4284df:	clc    
  4284e0:	ret    
  4284e1:	rol    cl,0xa
  4284e4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ea:	mov    edx,edi
  4284ec:	pushf  
  4284ed:	pop    es
  4284ee:	jmp    FWORD PTR [edx+0x66]
  4284f1:	add    BYTE PTR [ebp-0x990175],al
  4284f7:	inc    ebp
  4284f8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284fe:	push   ebp
  4284ff:	mov    edi,eax
  428501:	mov    dh,BYTE PTR [eax+0x266ff51]
  428507:	push   ebp
  428508:	add    BYTE PTR [ebx-0x764b1777],al
  42850e:	dec    DWORD PTR [esi+0x661851e8]
  428514:	add    BYTE PTR [ebp-0x7b],dl
  428517:	cmp    esi,0xfffffffb
  42851a:	dec    DWORD PTR [ecx+0x51fe9285]
  428520:	jmp    DWORD PTR [esi-0x75]
  428523:	push   ebp
  428524:	hlt    
  428525:	data16 (bad) 
  428527:	dec    ebp
  428528:	ret    
  428529:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42852f:	lea    edx,[eax-0x1]
  428532:	jne    0x428505
  428534:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42853a:	dec    BYTE PTR [ecx+0x51559eff]
  428540:	mov    DWORD PTR [esi-0x4c],esp
  428543:	push   ebp
  428544:	jmp    DWORD PTR [esi-0x18]
  428547:	inc    ebp
  428548:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42854e:	(bad)  
  42854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428550:	inc    eax
  428552:	test   DWORD PTR [esi-0x2],esp
  428555:	inc    ebp
  428556:	dec    DWORD PTR [ebp-0x760bde75]
  42855c:	(bad)  
  42855d:	test   al,0xc3
  42855f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428565:	lods   al,BYTE PTR ds:[esi]
  428566:	push   eax
  428567:	inc    ebp
  428568:	jne    0x428579
  42856a:	dec    DWORD PTR [ebp+0x8]
  42856d:	mov    eax,DWORD PTR [edi]
  42856f:	sbb    al,0x0
  428571:	(bad)  
  428572:	mov    eax,0xc14fc3
  428577:	mov    DWORD PTR [eax-0x64],edi
  42857a:	inc    bp
  42857c:	test   DWORD PTR [edi],ecx
  42857e:	dec    DWORD PTR [ebp-0x1]
  428581:	xor    eax,edi
  428583:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428589:	inc    ebp
  42858a:	xor    DWORD PTR [ebx],0x3f
  42858d:	mov    WORD PTR [ebp-0x1bc],ax
  428594:	lea    ecx,[ecx-0x767702]
  42859a:	inc    esi
  42859b:	(bad)  
  42859c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4285a3:	pushf  
  4285a4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4285ab:	add    bh,bh
  4285ad:	add    BYTE PTR [edi],cl
  4285af:	test   DWORD PTR [eax],eax
  4285b1:	(bad)  
  4285b2:	dec    WORD PTR [ebp-0xff002d]
  4285b9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4285bd:	jmp    DWORD PTR [esi-0x73]
  4285c0:	lea    esi,[eax+0x50ffffff]
  4285c6:	fadd   QWORD PTR [ebp+0x0]
  4285c9:	xor    esp,DWORD PTR [esi+0x3]
  4285cc:	lea    edx,[eax-0x1]
  4285cf:	test   edi,edi
  4285d1:	dec    DWORD PTR [ebp-0x1]
  4285d4:	mov    edi,edi
  4285d6:	dec    eax
  4285d7:	clc    
  4285d8:	call   DWORD PTR [ebp-0x73]
  4285db:	lea    esi,[eax+0x51ffff88]
  4285e1:	lea    ecx,[ebp-0x78]
  4285e4:	test   WORD PTR [ebp-0x2],ax
  4285eb:	popf   
  4285ec:	push   eax
  4285ed:	add    BYTE PTR [ecx-0x77],dl
  4285f0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285f6:	cwde   
  4285f7:	mov    al,0x32
  4285f9:	inc    DWORD PTR [ebx]
  4285fb:	push   eax
  4285fc:	push   ecx
  4285fd:	inc    ebp
  4285fe:	shl    BYTE PTR [ebx],1
  428600:	lea    eax,[ebx]
  428602:	call   DWORD PTR [eax-0x1]
  428605:	test   DWORD PTR [ebx],esi
  428607:	inc    DWORD PTR [eax-0x1]
  42860a:	(bad)  
  42860b:	(bad)  
  42860c:	(bad)  
  42860d:	clc    
  42860e:	call   DWORD PTR [ebp+0x50]
  428611:	jmp    0xcb878b
  428616:	inc    esp
  428617:	jnp    0x428618
  428619:	add    BYTE PTR [ecx-0x484f73],cl
  42861f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428625:	mov    eax,DWORD PTR [ecx]
  428627:	data16 add BYTE PTR [ebp-0xb50077],al
  42862e:	inc    eax
  428630:	lea    esp,[esi+0x14]
  428633:	test   DWORD PTR [ecx-0xb301],ecx
  428639:	inc    edi
  42863a:	(bad)  
  42863b:	dec    si
  42863d:	test   edi,edi
  42863f:	(bad)  
  428640:	cmp    eax,0xc74f73ff
  428645:	mov    edx,DWORD PTR [edx-0x7d]
  428648:	push   DWORD PTR [ebx+0x56328939]
  42864e:	(bad)  
  42864f:	call   FWORD PTR [esi-0x47]
  428652:	inc    DWORD PTR ds:0x893c00ea
  428658:	(bad)  
  428659:	pop    eax
  42865a:	mov    ah,0xff
  42865c:	(bad)  
  42865d:	mov    ecx,0x5745
  428662:	dec    DWORD PTR [ecx-0xf7a501]
  428668:	(bad)  
  428669:	mov    ecx,0x456108
  42866e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428674:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42867a:	inc    BYTE PTR gs:[eax]
  42867d:	inc    DWORD PTR [ebp-0x73]
  428680:	cmp    dh,bh
  428682:	pushf  
  428683:	inc    edi
  428685:	mov    ebx,eax
  428687:	hlt    
  428688:	test   DWORD PTR [ecx-0xbab708],ecx
  42868e:	cmp    al,0xbe
  428690:	pushf  
  428691:	or     bh,al
  428693:	pop    es
  428694:	lock into 
  428696:	test   eax,eax
  428698:	clc    
  428699:	mov    ebx,0x387245
  42869e:	lahf   
  42869f:	retf   
  4286a0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4286a6:	add    edi,edi
  4286a8:	add    BYTE PTR [ecx+0x45],dl
  4286ab:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4286b2:	mov    edx,DWORD PTR [ecx-0x74]
  4286b5:	inc    DWORD PTR [eax]
  4286b7:	cld    
  4286b8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4286be:	add    BYTE PTR [ebp-0x1b0177],al
  4286c4:	jge    0x42870b
  4286c6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286cc:	sbb    BYTE PTR [esi+0x55],ah
  4286cf:	xchg   ebp,eax
  4286d0:	call   0x4281d4
  4286d5:	push   edi
  4286d6:	inc    ebp
  4286d7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286de:	cmp    al,0x85
  4286e0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286e4:	test   DWORD PTR [edi+0x74],ecx
  4286e7:	dec    edi
  4286e8:	inc    DWORD PTR [ebp-0xf70004]
  4286ee:	dec    DWORD PTR [edi-0x75]
  4286f1:	dec    edi
  4286f2:	cld    
  4286f3:	test   DWORD PTR [eax+0xff01ff],eax
  4286f9:	icebp  
  4286fa:	add    BYTE PTR [edi-0x3a],cl
  4286fd:	test   ebx,eax
  4286ff:	inc    BYTE PTR [ebp-0x1]
  428702:	jne    0x428704
  428704:	mov    eax,DWORD PTR [eax]
  428706:	cld    
  428707:	xor    BYTE PTR [ecx+0x500155],cl
  42870d:	push   ebp
  42870e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428714:	add    BYTE PTR [ebp+0x35e90f50],al
  42871a:	add    al,BYTE PTR [eax]
  42871c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428722:	add    ah,ch
  428724:	or     BYTE PTR [ebp+0x4501f845],dh
  42872a:	jmp    0xde8a27
  42872f:	(bad)  
  428730:	nop    ecx
  428733:	test   DWORD PTR [ebp+0x4502f8],eax
  428739:	cmp    cl,BYTE PTR [ebp-0x64]
  42873c:	mov    eax,edi
  42873e:	mov    ebx,DWORD PTR [eax+edx*2]
  428741:	add    eax,0x45fef885
  428746:	dec    DWORD PTR [ebx+0x339445]
  42874c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428752:	dec    DWORD PTR [ebx-0x460f0375]
  428758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428759:	add    esi,edi
  42875b:	add    bh,bh
  42875d:	rdpmc  
  42875f:	add    BYTE PTR [ebx],0x1
  428762:	mov    DWORD PTR [eax],eax
  428764:	add    al,0x45
  428766:	dec    DWORD PTR [ecx-0x360b3373]
  42876c:	dec    DWORD PTR [esi]
  42876e:	push   eax
  42876f:	jne    0x4287b6
  428771:	mov    esi,DWORD PTR [ebx]
  428773:	cld    
  428774:	add    ebp,ebx
  428776:	push   eax
  428777:	inc    DWORD PTR [ebp-0x75]
  42877a:	add    eax,0x800e4
  42877f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428785:	mov    DWORD PTR [ecx],eax
  428787:	sbb    al,0x0
  428789:	leave  
  42878a:	test   DWORD PTR [edi-0x2],eax
  42878d:	jne    0x42878e
  42878f:	call   0xff437294
  428794:	xor    BYTE PTR [ebp+0x4d],al
  428797:	mov    edi,edi
  428799:	enter  0x8,0x4d
  42879d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4287a3:	mov    eax,DWORD PTR [eax]
  4287a5:	cld    
  4287a6:	add    DWORD PTR [ecx],ebx
  4287a8:	inc    ebp
  4287a9:	dec    ebp
  4287aa:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4287b0:	inc    eax
  4287b1:	dec    DWORD PTR [ecx-0x270375]
  4287b7:	add    BYTE PTR [ebx-0x39d72701],cl
  4287bd:	xchg   ecx,eax
  4287be:	ret    
  4287bf:	add    BYTE PTR [ebp-0x830075],al
  4287c5:	add    BYTE PTR [ebp-0x75],al
  4287c8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ce:	lea    edi,[edi-0xc]
  4287d1:	add    bh,bh
  4287d3:	mov    edx,DWORD PTR [eax-0x7b]
  4287d6:	inc    ebp
  4287d7:	rdpmc  
  4287d9:	jne    0x4287de
  4287db:	add    BYTE PTR [eax-0x75],dl
  4287de:	inc    ebp
  4287df:	clc    
  4287e0:	add    eax,0x400009
  4287e5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287eb:	mov    eax,DWORD PTR [ecx]
  4287ed:	in     al,dx
  4287ee:	add    dh,al
  4287f0:	test   ebx,eax
  4287f2:	inc    BYTE PTR [ebp-0xff0001]
  4287f8:	add    BYTE PTR [ebp-0x43],al
  4287fb:	cmp    esi,0xfffffff8
  4287fe:	(bad)  
  4287ff:	push   DWORD PTR [eax]
  428801:	add    BYTE PTR [ebp-0x3a],dl
  428804:	test   ebx,eax
  428806:	je     0x42878d
  428808:	mov    edi,edi
  42880a:	sbb    al,0xff
  42880c:	test   DWORD PTR gs:[eax],eax
  42880f:	(bad)  
  428810:	js     0x428811
  428812:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428818:	sub    eax,ebx
  42881a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428820:	add    eax,DWORD PTR [eax]
  428822:	dec    ebp
  428823:	push   eax
  428824:	mov    al,BYTE PTR [ebp+0x1]
  428827:	mov    eax,DWORD PTR [ebp-0x68]
  42882a:	mov    eax,DWORD PTR [eax]
  42882c:	sbb    bh,al
  42882e:	or     ah,dh
  428830:	dec    ebp
  428831:	inc    DWORD PTR [eax+0x4]
  428834:	push   ecx
  428835:	add    BYTE PTR [edx-0x1],dh
  428838:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42883e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428848:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42884e:	push   ecx
  42884f:	cmp    BYTE PTR [ebx],al
  428851:	inc    ebp
  428852:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428858:	(bad)  
  428859:	(bad)  
  42885a:	in     al,0xff
  42885c:	add    BYTE PTR [ebp+0x0],al
  42885f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428865:	add    al,bh
  428867:	(bad)  
  428868:	jmp    0x8d85:0x74b0558d
  42886f:	dec    DWORD PTR [eax]
  428871:	call   DWORD PTR [ebp-0x7b]
  428874:	mov    edi,esi
  428876:	lock call DWORD PTR [ebp-0x75]
  42887a:	mov    esi,esp
  42887c:	mov    ah,0xc6
  42887e:	mov    bh,0xc3
  428880:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428886:	add    DWORD PTR [eax],0x450050ff
  42888c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428892:	inc    edi
  428894:	push   esp
  428896:	jmp    0xcd00:0x680481ff
  42889d:	mov    DWORD PTR [ebx],esi
  42889f:	clc    
  4288a0:	cmp    edi,0xff9cff3b
  4288a6:	jne    0x4288b0
  4288a8:	mov    eax,eax
  4288aa:	add    esi,DWORD PTR [eax]
  4288ac:	int3   
  4288ad:	inc    ebp
  4288ae:	cmp    al,0x83
  4288b0:	add    BYTE PTR [eax],bl
  4288b2:	adc    DWORD PTR [ebx+0x768b5055],eax
  4288b8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4288be:	mov    edi,eax
  4288c0:	cmp    BYTE PTR [ebp+0x45],cl
  4288c3:	jmp    0x428850
  4288c5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288c8:	inc    ebp
  4288c9:	or     al,0x2
  4288cb:	dec    DWORD PTR [ebp+0x18]
  4288ce:	jne    0x428925
  4288d0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288d6:	mov    edi,DWORD PTR [ebx]
  4288d8:	in     al,0x50
  4288da:	xchg   ecx,eax
  4288db:	jmp    0x342d7e0
  4288e0:	adc    al,0x8b
  4288e2:	inc    ebp
  4288e3:	mov    al,ds:0x8b04008b
  4288e8:	push   ebp
  4288e9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288ef:	push   ebp
  4288f0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288f6:	inc    ebp
  4288f7:	dec    ebp
  4288f8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288fe:	mov    DWORD PTR [eax],0xe9ff00f4
  428904:	add    al,0x0
  428906:	add    BYTE PTR [eax],al
  428908:	mov    eax,edx
  42890a:	push   eax
  42890b:	rol    DWORD PTR [ebp-0xf0177],1
  428911:	bound  eax,QWORD PTR [ebp+0x50]
  428914:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42891a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428920:	mov    al,0xf
  428922:	test   DWORD PTR [edx],edx
  428924:	call   DWORD PTR [ebp-0x7a0001]
  42892a:	(bad)  
  42892b:	loop   0x42892c
  42892d:	jnp    0xc6987d33
  428933:	mov    eax,ebx
  428935:	cmp    al,0x8b
  428937:	(bad)  
  428938:	cld    
  428939:	shr    esi,0xc
  42893c:	add    dl,al
  42893e:	push   eax
  42893f:	lea    eax,[ebp-0x1]
  428942:	mov    edx,esi
  428944:	cwde   
  428945:	cli    
  428946:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42894c:	or     BYTE PTR [eax],cl
  42894e:	inc    ebp
  42894f:	dec    ebp
  428950:	inc    DWORD PTR [ebx+0x74803914]
  428956:	add    DWORD PTR [ebx+0x451800],ecx
  42895c:	call   DWORD PTR [eax+edx*1]
  42895f:	add    ecx,DWORD PTR [ebp-0x34]
  428962:	push   edi
  428963:	adc    al,0x8
  428965:	mov    edx,DWORD PTR [ebp-0x14]
  428968:	mov    ecx,DWORD PTR [ebp+0x18]
  42896b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42896f:	inc    DWORD PTR [eax+esi*8]
  428972:	inc    ebp
  428973:	stos   BYTE PTR es:[edi],al
  428974:	mov    edx,DWORD PTR [ebp-0x4]
  428977:	add    DWORD PTR [ebp-0x1c],eax
  42897a:	mov    edx,DWORD PTR [ebp-0x70]
  42897d:	cmp    eax,DWORD PTR [eax]
  42897f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428980:	mov    eax,DWORD PTR [eax]
  428982:	cld    
  428983:	jae    0x428905
  428985:	add    eax,DWORD PTR [ecx]
  428987:	clc    
  428988:	add    BYTE PTR [eax+0x30],dl
  42898b:	mov    DWORD PTR [ecx],esi
  42898d:	clc    
  42898e:	pop    ds
  42898f:	inc    ebp
  428990:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428996:	(bad)  
  428997:	push   DWORD PTR [edi]
  428999:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42899f:	(bad)  
  4289a0:	jae    0x4289a1
  4289a2:	mov    eax,DWORD PTR [ebp-0x740175]
  4289a8:	sub    eax,DWORD PTR [eax]
  4289aa:	add    eax,DWORD PTR [eax]
  4289ac:	mov    DWORD PTR [ecx+0x5f],eax
  4289af:	mov    DWORD PTR [ebx-0x4],ebx
  4289b2:	ret    0xff
  4289b5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4289bb:	ret    
  4289bc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289c2:	add    BYTE PTR [ebp-0x7d],al
  4289c5:	mov    DWORD PTR [eax],eax
  4289c7:	add    al,0x84
  4289c9:	inc    DWORD PTR [ecx]
  4289cb:	lea    eax,[eax]
  4289cd:	hlt    
  4289ce:	sar    bh,cl
  4289d0:	test   BYTE PTR [eax+0x1],dl
  4289d3:	inc    ebp
  4289d4:	add    BYTE PTR [ebx],dh
  4289d6:	test   BYTE PTR [ebx],0x84
  4289d9:	push   eax
  4289da:	add    BYTE PTR [ebp+0x0],al
  4289dd:	add    eax,0x86
  4289e2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289e8:	add    BYTE PTR [ecx],al
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	mov    esi,0x550030
  4289f1:	mov    ecx,DWORD PTR [edi]
  4289f3:	cld    
  4289f4:	fidiv  DWORD PTR [ebp+0x0]
  4289f7:	mov    edi,DWORD PTR [ecx]
  4289f9:	xor    BYTE PTR [eax+eax*1],0x84
  4289fd:	add    eax,DWORD PTR [eax]
  4289ff:	sbb    BYTE PTR [eax],al
  428a01:	jne    0x4289b4
  428a03:	mov    eax,DWORD PTR [ecx]
  428a05:	sbb    BYTE PTR [eax],al
  428a07:	mov    DWORD PTR [ebp-0x1],esp
  428a0a:	add    BYTE PTR [eax+0x30e45ca],bh
  428a10:	ret    0xb7fc
  428a13:	dec    ebp
  428a14:	or     al,0x89
  428a16:	dec    ebp
  428a17:	cld    
  428a18:	cmovne ecx,DWORD PTR [eax-0x75]
  428a1c:	add    edi,esp
  428a1e:	seto   BYTE PTR [esi-0x72ffffff]
  428a25:	inc    ebp
  428a26:	adc    al,0x8b
  428a28:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a2f:	cmp    DWORD PTR [edi+0x72],edx
  428a32:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a38:	gs cmp al,0x0
  428a3b:	je     0x428a13
  428a3d:	push   eax
  428a3e:	sar    BYTE PTR [eax],1
  428a40:	mov    bh,0x3e
  428a42:	push   cs
  428a43:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a49:	add    DWORD PTR [ecx+0x12],ebp
  428a4c:	dec    edx
  428a4d:	(bad)  
  428a4e:	mov    eax,edx
  428a50:	in     al,dx
  428a51:	adc    DWORD PTR [ecx],esi
  428a53:	pop    esi
  428a54:	inc    ecx
  428a55:	leave  
  428a56:	or     DWORD PTR [eax],ebx
  428a58:	gs push ebp
  428a5a:	add    ah,ch
  428a5c:	into   
  428a5d:	in     al,dx
  428a5e:	enter  0xb756,0xf0
  428a62:	push   cs
  428a63:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a6d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a73:	jnp    0x74430f7b
  428a79:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a7f:	add    BYTE PTR [edi],cl
  428a81:	mov    edi,DWORD PTR [ecx-0x78]
  428a84:	ltr    WORD PTR [ecx-0x7b]
  428a88:	dec    DWORD PTR [edi]
  428a8a:	clc    
  428a8b:	out    0x45,eax
  428a8d:	add    BYTE PTR [eax],cl
  428a8f:	cmp    ebx,0xffffff8c
  428a92:	jge    0x428a94
  428a94:	jb     0x428aa6
  428a96:	je     0x518b16
  428a9c:	pop    edx
  428a9d:	push   esi
  428a9e:	mov    ecx,DWORD PTR [edi]
  428aa0:	in     al,dx
  428aa1:	rol    DWORD PTR [ebp+0x0],1
  428aa4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428aab:	cmp    DWORD PTR [ecx],0xfffffff0
  428aae:	hlt    
  428aaf:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428ab5:	(bad)  
  428ab7:	push   eax
  428ab8:	jns    0xb8426f36
  428abe:	lock push cs
  428ac0:	ror    edx,0x3
  428ac3:	test   BYTE PTR [ecx+0x5500e800],cl
  428ac9:	dec    eax
  428aca:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428ace:	(bad)  
  428acf:	mov    esi,0x7f33ff5f
  428ad4:	inc    eax
  428ad5:	test   DWORD PTR [edx],eax
  428ad7:	je     0x428a99
  428ad9:	mov    ecx,ecx
  428adb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428adf:	and    eax,DWORD PTR [eax+0xf0103]
  428ae5:	jp     0x428ad3
  428ae7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428aeb:	add    edx,DWORD PTR [edi+0x74]
  428aee:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428af4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428afa:	je     0x428a7f
  428afc:	cmp    eax,edi
  428afe:	js     0x428b23
  428b00:	add    eax,0xeb0fc003
  428b05:	jns    0x428a92
  428b07:	vmread DWORD PTR [ecx+0x45],ebx
  428b0b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428b11:	adc    al,0x8b
  428b13:	jge    0x428b29
  428b15:	mov    edi,DWORD PTR [eax-0x4]
  428b18:	add    edi,DWORD PTR [edi]
  428b1a:	or     bh,bh
  428b1c:	push   ebp
  428b1d:	push   es
  428b1e:	mov    DWORD PTR [ebp-0x4],ebx
  428b21:	add    edi,esi
  428b23:	pop    es
  428b24:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b2a:	mov    DWORD PTR [esp+esi*8],ecx
  428b2d:	inc    ebp
  428b2e:	pop    ebp
  428b2f:	xor    DWORD PTR [esi-0x4],0x3b
  428b33:	add    edx,DWORD PTR [ecx+edi*1]
  428b36:	push   es
  428b37:	clc    
  428b38:	mov    bh,0xdb
  428b3a:	jp     0x428af3
  428b3c:	add    cl,BYTE PTR [esi]
  428b3e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b44:	test   edi,edi
  428b46:	je     0x428b3c
  428b48:	mov    eax,ecx
  428b4a:	or     BYTE PTR [ebx],al
  428b4c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b52:	jbe    0x428bc6
  428b54:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b5a:	add    ecx,DWORD PTR [esi]
  428b5c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b62:	add    eax,DWORD PTR [ebx-0x287af783]
  428b68:	je     0x428bb7
  428b6a:	mov    DWORD PTR [ecx],edi
  428b6c:	mov    esi,eax
  428b6e:	hlt    
  428b6f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b76:	jb     0x428b38
  428b78:	jmp    0x428b65
  428b7a:	xor    esi,DWORD PTR [ebx]
  428b7c:	pop    edi
  428b7d:	pop    esi
  428b7e:	pop    ebx
  428b7f:	ret    
  428b80:	ret    0x8b
  428b83:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b89:	cmp    DWORD PTR [eax],0xc
  428b8c:	pushf  
  428b8d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b93:	(bad)  
  428b95:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b9c:	dec    ebp
  428b9d:	ret    
  428b9e:	mov    edi,DWORD PTR [esi-0x4]
  428ba1:	pop    eax
  428ba2:	dec    ebp
  428ba3:	jne    0x428b30
  428ba5:	xor    edi,esp
  428ba7:	inc    eax
  428ba8:	dec    ebp
  428ba9:	jbe    0x428bfe
  428bab:	inc    eax
  428bac:	pop    ebp
  428bad:	add    edx,DWORD PTR [esi+0x8]
  428bb0:	push   eax
  428bb1:	dec    eax
  428bb2:	push   ecx
  428bb3:	mov    eax,edi
  428bb5:	and    al,0xf0
  428bb7:	jo     0x428ba4
  428bb9:	mov    eax,DWORD PTR [ebx]
  428bbb:	sbb    BYTE PTR [ebp+0x4d],cl
  428bbe:	mov    eax,DWORD PTR [ebx]
  428bc0:	nop
  428bc1:	or     BYTE PTR [eax],al
  428bc3:	jne    0x428c1c
  428bc5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bcb:	cld    
  428bcc:	xor    edi,edi
  428bce:	add    edi,DWORD PTR [ebp+0x3]
  428bd1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bd7:	js     0x428b5d
  428bd9:	jae    0x428bdd
  428bdb:	(bad)  
  428bdd:	xor    al,0x5d
  428bdf:	jmp    0x428b6c
  428be1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428be8:	fdecstp 
  428bea:	test   BYTE PTR [edi],ah
  428bec:	add    bh,BYTE PTR [ebp+0x0]
  428bef:	add    ebx,DWORD PTR [ebp-0x77]
  428bf2:	mov    edi,eax
  428bf4:	cmp    al,0x0
  428bf7:	adc    dh,BYTE PTR [ebx]
  428bf9:	jge    0x428bfe
  428bfb:	mov    edi,DWORD PTR [ebx]
  428bfd:	jl     0x428c0e
  428bff:	clc    
  428c00:	dec    edi
  428c01:	jge    0x428c03
  428c03:	mov    eax,DWORD PTR [ebx]
  428c05:	jb     0x428c0f
  428c07:	mov    ecx,DWORD PTR [ebp-0x8]
  428c0a:	mov    edi,edi
  428c0c:	xor    edx,DWORD PTR [eax]
  428c0e:	add    edi,DWORD PTR [ebx]
  428c10:	mov    DWORD PTR [ebp-0x10],edi
  428c13:	inc    edi
  428c14:	pop    ebp
  428c15:	jge    0x428c52
  428c17:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428c1b:	mov    edx,0xc05d87f0
  428c20:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c24:	fimul  WORD PTR [eax]
  428c26:	fist   WORD PTR [ebp+0x1c]
  428c29:	in     al,dx
  428c2a:	jne    0x428c18
  428c2c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c32:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c36:	fdivp  st(0),st
  428c38:	fild   WORD PTR [ebp+0x4510f85c]
  428c3e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c44:	inc    ebp
  428c45:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c4b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c4e:	adc    al,0x8b
  428c50:	rcl    DWORD PTR [eax],0x48
  428c53:	mov    esi,0x7080803
  428c58:	fiadd  WORD PTR [ebp+0x4d]
  428c5b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c61:	cld    
  428c62:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c68:	mov    DWORD PTR [edi+0x872dc],edi
  428c6e:	xlat   BYTE PTR ds:[ebx]
  428c6f:	into   
  428c70:	ffreep st(6)
  428c72:	retf   0x6c7
  428c75:	iret   
  428c76:	dec    ebp
  428c77:	inc    ebp
  428c78:	mov    DWORD PTR [ebx],edi
  428c7a:	fmul   QWORD PTR [edi]
  428c7c:	dec    ebp
  428c7d:	jnp    0x428cb2
  428c7f:	add    BYTE PTR [ebx],al
  428c81:	mov    ecx,DWORD PTR [esp+edi*8]
  428c84:	inc    ebp
  428c85:	dec    ebp
  428c86:	lea    esi,[ebx]
  428c88:	add    DWORD PTR [ebx],eax
  428c8a:	jb     0x428cc7
  428c8c:	add    BYTE PTR [edi],cl
  428c8e:	inc    ebp
  428c8f:	imul   eax,edi,0x858bd800
  428c95:	cld    
  428c96:	clc    
  428c97:	mov    DWORD PTR [ebp+0x0],eax
  428c9a:	inc    DWORD PTR [eax]
  428c9c:	or     al,0xde
  428c9e:	sbb    bh,0x1
  428ca1:	retf   
  428ca2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428ca9:	dec    ebp
  428caa:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428cb0:	enter  0x12de,0xdf
  428cb4:	inc    ebp
  428cb5:	pop    ebp
  428cb6:	dec    DWORD PTR [ebx-0x257f0ff4]
  428cbc:	add    DWORD PTR [edx],edx
  428cbe:	add    BYTE PTR [ebp+0x50],dl
  428cc1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428cc7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428ccd:	or     ah,al
  428ccf:	pop    ss
  428cd0:	cdq    
  428cd1:	push   ebp
  428cd2:	clc    
  428cd3:	mov    eax,DWORD PTR [ebp-0x4]
  428cd6:	xor    edx,edx
  428cd8:	add    esi,DWORD PTR [ebx]
  428cda:	cmp    eax,DWORD PTR [ebx]
  428cdc:	hlt    
  428cdd:	cmp    DWORD PTR [ebx],esp
  428cdf:	or     al,BYTE PTR [ebp+0xf]
  428ce2:	mov    eax,DWORD PTR [edx]
  428ce4:	loopne 0x428ce6
  428ce6:	(bad)  
  428ce7:	mov    ecx,esi
  428ce9:	cld    
  428cea:	pushf  
  428ceb:	pop    ebp
  428cec:	cwde   
  428ced:	mov    esi,DWORD PTR [edx]
  428cef:	lock mov eax,eax
  428cf2:	adc    BYTE PTR [ebx],al
  428cf4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cfb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428d01:	dec    ebp
  428d02:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428d08:	(bad)  
  428d09:	iret   
  428d0a:	inc    ebp
  428d0b:	(bad)  
  428d0c:	jne    0x428d5b
  428d0e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428d14:	(bad)  
  428d15:	cmp    ebx,eax
  428d17:	je     0x428c9f
  428d19:	add    edi,edi
  428d1b:	or     bh,bh
  428d1d:	dec    ebp
  428d1e:	inc    ebp
  428d1f:	mov    esi,DWORD PTR [ebx]
  428d21:	cld    
  428d22:	add    ecx,esi
  428d24:	cmp    ecx,DWORD PTR [eax-0xc]
  428d27:	mov    edx,DWORD PTR [edi]
  428d29:	or     BYTE PTR [ebp-0x7c],al
  428d2c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d32:	test   BYTE PTR [eax+ebx*4],cl
  428d35:	inc    ebp
  428d36:	xor    bh,BYTE PTR ds:0x8be89c89
  428d3c:	out    dx,eax
  428d3d:	adc    BYTE PTR [eax],al
  428d3f:	jne    0x428d08
  428d41:	mov    ebp,esp
  428d43:	fcomp  DWORD PTR [ebx]
  428d45:	add    BYTE PTR [ecx],al
  428d47:	inc    DWORD PTR [ebp-0x75]
  428d4a:	mov    ?,esp
  428d4c:	add    al,0xce
  428d4e:	mov    ecx,edi
  428d50:	cld    
  428d51:	inc    ebp
  428d52:	fidivr WORD PTR [ebx]
  428d54:	fbstp  TBYTE PTR [ebp-0x3e]
  428d57:	mov    eax,DWORD PTR [eax]
  428d59:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d5f:	fadd   st,st(7)
  428d61:	add    BYTE PTR [ebp-0x1],al
  428d64:	mov    ecx,DWORD PTR [esp+edi*8]
  428d67:	inc    ebp
  428d68:	mov    bh,0xc7
  428d6b:	loopne 0x428db2
  428d6d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d73:	add    DWORD PTR [ebx],esi
  428d75:	pushf  
  428d76:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d7c:	mov    eax,edi
  428d7e:	cwde   
  428d7f:	inc    ebp
  428d80:	inc    ebp
  428d81:	jne    0x428d0e
  428d83:	mov    esp,esp
  428d85:	clc    
  428d86:	add    al,0x4d
  428d88:	mov    DWORD PTR [ebx],esi
  428d8a:	or     al,0x33
  428d8c:	inc    ebp
  428d8d:	lea    ecx,[ebx-0x398d13fd]
  428d93:	add    bh,al
  428d95:	inc    ebp
  428d96:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d9d:	add    ebp,esp
  428d9f:	shufps xmm1,xmm3,0xc7
  428da3:	(bad)  
  428da4:	jmp    0x7487c8cd
  428da9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428daf:	hlt    
  428db0:	mov    ecx,DWORD PTR [edi]
  428db2:	fadd   DWORD PTR [ebp+0x0]
  428db5:	xor    ecx,DWORD PTR [edi]
  428db7:	add    ecx,ecx
  428db9:	cmp    edi,edi
  428dbb:	pmuludq mm7,QWORD PTR [edx+0x50]
  428dbf:	(bad)  
  428dc0:	jmp    0x428d4d
  428dc2:	mov    edi,esp
  428dc4:	or     al,0xc6
  428dc6:	inc    ebp
  428dc7:	(bad)  
  428dc8:	mov    eax,DWORD PTR [ebp+0x10]
  428dcb:	jne    0x428d56
  428dcd:	mov    eax,DWORD PTR [ecx]
  428dcf:	clc    
  428dd0:	add    BYTE PTR [ebp-0x40],cl
  428dd3:	xor    edx,DWORD PTR [eax-0x73]
  428dd6:	jne    0x428dd9
  428dd8:	push   DWORD PTR [edx+0x8]
  428ddb:	add    BYTE PTR [ebp+0x45],al
  428dde:	mov    ebp,ecx
  428de0:	cld    
  428de1:	add    BYTE PTR [ebp+0x0],cl
  428de4:	xor    eax,DWORD PTR [ebp+0x3]
  428de7:	mov    al,0x3b
  428de9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428def:	sub    eax,0x5d330e4d
  428df4:	lea    esi,[ebx]
  428df6:	add    DWORD PTR [ebx],eax
  428df8:	jb     0x428de3
  428dfa:	add    BYTE PTR [eax],al
  428dfc:	inc    ebp
  428dfd:	add    bl,ch
  428dff:	inc    ebp
  428e00:	mov    esi,DWORD PTR [ebx]
  428e02:	or     al,0x3
  428e04:	(bad)  
  428e05:	mov    edi,eax
  428e07:	in     al,dx
  428e08:	scas   eax,DWORD PTR es:[edi]
  428e09:	inc    ebp
  428e0a:	mov    esi,DWORD PTR [ebx]
  428e0c:	in     al,0x3
  428e0e:	add    al,0x89
  428e10:	mov    ecx,DWORD PTR [eax+edi*8]
  428e13:	dec    ebp
  428e14:	(bad)  
  428e15:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428e1c:	mov    ecx,eax
  428e1e:	cld    
  428e1f:	push   es
  428e20:	dec    ebp
  428e21:	add    al,0x33
  428e23:	mov    DWORD PTR [ebx],eax
  428e25:	in     al,dx
  428e26:	cmp    DWORD PTR [ebp-0x67],eax
  428e29:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e2f:	mov    edx,DWORD PTR [ebp-0x4]
  428e32:	mov    ecx,DWORD PTR [ebp-0x18]
  428e35:	xor    ecx,DWORD PTR [ebp+0x3]
  428e38:	cmp    DWORD PTR [ebx],0x8b327497
  428e3e:	xor    edi,esp
  428e40:	jmp    0xff768b92
  428e45:	add    ecx,DWORD PTR [ebp-0x3f]
  428e48:	xor    ebx,DWORD PTR [edi]
  428e4a:	add    eax,ecx
  428e4c:	cmp    ebx,DWORD PTR [eax]
  428e4e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e51:	mov    ecx,DWORD PTR [eax]
  428e53:	adc    BYTE PTR [ebp-0x80],al
  428e56:	jmp    0x428e59
  428e58:	mov    eax,DWORD PTR [eax]
  428e5a:	cld    
  428e5b:	mov    bh,0xc6
  428e5d:	push   ecx
  428e5e:	(bad)  
  428e5f:	jne    0x428ebf
  428e61:	dec    ecx
  428e63:	or     BYTE PTR [ecx+ebx*1],cl
  428e66:	push   ebp
  428e67:	inc    ebp
  428e68:	in     al,dx
  428e69:	add    ebp,esp
  428e6b:	or     bh,al
  428e6d:	dec    ebp
  428e6e:	cld    
  428e6f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e75:	cmp    DWORD PTR [ecx],0x2
  428e78:	pushf  
  428e79:	dec    DWORD PTR [ebx+0x45510cf4]
  428e7f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e85:	mov    edx,DWORD PTR [ecx+0xc]
  428e88:	xor    eax,esi
  428e8a:	mov    edx,0xc172c7
  428e8f:	inc    ebp
  428e90:	mov    esi,DWORD PTR [ebp+0x8]
  428e93:	mov    eax,edx
  428e95:	call   0x84c7558a
  428e9a:	add    DWORD PTR [eax-0x76bace00],ebx
  428ea0:	mov    ebp,eax
  428ea2:	or     BYTE PTR [eax],dl
  428ea4:	jo     0x428ef3
  428ea6:	push   edi
  428ea7:	xor    esi,DWORD PTR [ebp+0x3]
  428eaa:	(bad)  
  428eab:	pmulhuw mm0,mm1
  428eae:	test   DWORD PTR [ebp-0x8],ecx
  428eb1:	mov    DWORD PTR [ebp-0x67],eax
  428eb4:	mov    eax,DWORD PTR [ebp-0x4]
  428eb7:	xor    edi,DWORD PTR [ebp-0x73]
  428eba:	xor    eax,DWORD PTR [ebx]
  428ebc:	xor    esi,DWORD PTR [edx+0x3]
  428ebf:	add    BYTE PTR [ecx],bh
  428ec1:	inc    ebp
  428ec2:	(bad)  
  428ec3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ec9:	mov    DWORD PTR [eax],0x750f0004
  428ecf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428ed5:	lock add BYTE PTR [ebp+0x0],al
  428ed9:	mov    esi,DWORD PTR [ebp-0x2c]
  428edc:	mov    ebp,edx
  428ede:	or     al,0x72
  428ee0:	ja     0x428ee2
  428ee2:	mov    edx,esi
  428ee4:	cld    
  428ee5:	(bad)  
  428ee8:	cli    
  428ee9:	mov    esi,DWORD PTR [ebp-0x4]
  428eec:	cmp    ecx,esi
  428eee:	bswap  edi
  428ef0:	(bad)
  428ef4:	mov    esi,DWORD PTR [ebp-0x4]
  428ef7:	mov    esi,ecx
  428ef9:	clc    
  428efa:	repnz add esi,DWORD PTR [ebp+0x45]
  428efe:	push   ebx
  428eff:	xor    eax,DWORD PTR [ebp+0x3]
  428f02:	cmp    ebx,DWORD PTR [edi-0x64]
  428f05:	pop    ebx
  428f06:	jmp    0x428fcd
  428f0b:	mov    esi,DWORD PTR [ebp-0x7d]
  428f0e:	xor    ebp,DWORD PTR [eax]
  428f10:	lea    eax,[ebp-0x8]
  428f13:	cmp    dl,dh
  428f15:	pushf  
  428f16:	out    dx,eax
  428f17:	(bad)  
  428f18:	neg    eax
  428f1a:	ins    DWORD PTR es:[edi],dx
  428f1b:	test   esi,edi
  428f1d:	clc    
  428f1e:	pop    esp
  428f1f:	inc    ebp
  428f20:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f26:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f2c:	add    cl,al
  428f2e:	jne    0x428ec8
  428f30:	mov    esi,DWORD PTR [edx]
  428f32:	in     al,dx
  428f33:	push   esi
  428f34:	xor    BYTE PTR [ebp-0xe],dh
  428f37:	add    edi,esi
  428f39:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f3f:	add    cl,bh
  428f41:	mov    edi,DWORD PTR [ebp+0x8]
  428f44:	mov    DWORD PTR [ebp-0x14],esi
  428f47:	add    esi,DWORD PTR [ebp+0x3c]
  428f4a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f50:	mov    ah,0x3d
  428f52:	cwde   
  428f53:	pushf  
  428f54:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f5a:	jne    0x428ee7
  428f5c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f5f:	icebp  
  428f60:	icebp  
  428f61:	shl    edx,0xf2
  428f64:	(bad)  
  428f65:	mov    ah,0x16
  428f67:	cmp    BYTE PTR [ebp-0x6d],dh
  428f6a:	mov    ecx,DWORD PTR [edi]
  428f6c:	in     al,dx
  428f6d:	jmp    0x428f60
  428f6f:	add    dl,dh
  428f71:	mov    edi,esi
  428f73:	or     al,0x8
  428f75:	inc    ebp
  428f76:	jne    0x428f7b
  428f78:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f7e:	ret    
  428f7f:	or     bh,bh
  428f81:	jge    0x428f6b
  428f83:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f89:	xor    edi,eax
  428f8b:	add    esi,DWORD PTR [ebp-0x77]
  428f8e:	mov    ebx,esp
  428f90:	clc    
  428f91:	neg    DWORD PTR [ebp-0x7c]
  428f94:	xor    eax,DWORD PTR [eax]
  428f96:	cmp    eax,DWORD PTR [eax]
  428f98:	repz jne 0x428f30
  428f9b:	xor    eax,DWORD PTR [ecx]
  428f9d:	add    ebx,DWORD PTR [eax]
  428f9f:	mov    DWORD PTR [ebp-0x8],eax
  428fa2:	mov    eax,edi
  428fa4:	cld    
  428fa5:	lock pop eax
  428fa7:	test   DWORD PTR [ebx],esi
  428fa9:	clc    
  428faa:	add    edx,DWORD PTR [edi-0x740bff77]
  428fb0:	fdivp  st(4),st
  428fb2:	test   ecx,esi
  428fb4:	(bad)  
  428fb5:	jnp    0x428fb6
  428fb7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428fbd:	jae    0x428f4a
  428fbf:	sub    edi,esp
  428fc1:	(bad)  
  428fc2:	shl    DWORD PTR [eax-0x3e],0x89
  428fc6:	leave  
  428fc7:	call   0x819846d4
  428fcc:	in     al,dx
  428fcd:	(bad)  
  428fce:	in     al,dx
  428fcf:	add    bh,al
  428fd1:	mov    esp,edi
  428fd3:	in     al,dx
  428fd4:	test   DWORD PTR [ebp-0x8],edi
  428fd7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fda:	cmp    DWORD PTR [ebx],eax
  428fdc:	pushf  
  428fdd:	jnp    0x57318c16
  428fe3:	xor    edx,DWORD PTR [eax-0x77]
  428fe6:	push   ecx
  428fe7:	loopne 0x42901c
  428fe9:	jne    0x428fa6
  428feb:	mov    esi,DWORD PTR [edx-0x20]
  428fee:	add    BYTE PTR [ebp-0x3d],bh
  428ff1:	xor    eax,DWORD PTR [ebp-0x73]
  428ff4:	mov    edi,DWORD PTR [esi]
  428ff6:	cld    
  428ff7:	jb     0x428fbf
  428ff9:	add    bl,al
  428ffb:	jne    0x429042
  428ffd:	mov    edx,DWORD PTR [edi-0x10]
  429000:	jge    0x42907f
  429002:	mov    esi,DWORD PTR [ebx]
  429004:	lock add ecx,DWORD PTR [ebp+0x3b]
  429008:	xor    esi,DWORD PTR [ebp-0x77]
  42900b:	mov    esi,eax
  42900d:	lock inc ebp
  42900f:	jge    0x429049
  429011:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429018:	dec    ebp
  429019:	mov    esi,DWORD PTR [ebx]
  42901b:	loopne 0x428fa6
  42901d:	jge    0x429017
  42901f:	add    DWORD PTR [ebp-0x7d],eax
  429022:	clc    
  429023:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42902a:	dec    ebp
  42902b:	hlt    
  42902c:	xor    ebx,DWORD PTR [ebp-0x77]
  42902f:	mov    esi,esp
  429031:	in     al,0x45
  429033:	jge    0x429071
  429035:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42903c:	dec    ebp
  42903d:	cmp    al,0x33
  42903f:	xchg   ebx,eax
  429040:	mov    DWORD PTR [ebx-0x14],esi
  429043:	add    eax,DWORD PTR [ebp-0xc]
  429046:	cmp    BYTE PTR [ebp-0x61],dh
  429049:	mov    edi,DWORD PTR [eax+0xf19504]
  42904f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429053:	cmp    eax,DWORD PTR [ebp+0xf]
  429056:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42905a:	fistp  WORD PTR [ebx+0x0]
  42905d:	inc    ebp
  42905e:	mov    ebx,DWORD PTR [edi+0xc]
  429061:	add    eax,eax
  429063:	inc    ebp
  429064:	test   BYTE PTR [ebx],dh
  429066:	add    eax,DWORD PTR [ebx]
  429068:	add    BYTE PTR [esi+0x45],bl
  42906b:	ret    0x85
  42906e:	jnp    0x5443143d
  429074:	inc    bp
  429076:	inc    ebp
  429077:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42907d:	fdiv   QWORD PTR [ebx]
  42907f:	test   DWORD PTR [ecx+0x453af8],edi
  429085:	push   ebx
  429086:	add    edi,DWORD PTR [esi+0x708088b]
  42908c:	cmp    esi,eax
  42908e:	sets   BYTE PTR [ecx-0x74fcffce]
  429095:	mov    esp,edi
  429097:	call   0x33cdd5e9
  42909c:	or     BYTE PTR [ebx],al
  42909e:	inc    ecx
  42909f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4290a5:	and    BYTE PTR [ebp-0x7074f0bb],al
  4290ab:	lock add cl,al
  4290ae:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4290b5:	mov    ch,0x45
  4290b7:	clc    
  4290b8:	xor    eax,DWORD PTR [ebp+0x3]
  4290bb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290c1:	inc    ebp
  4290c2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290c8:	mov    edi,eax
  4290ca:	mov    eax,DWORD PTR [ebp+0x3c]
  4290cd:	mov    ecx,DWORD PTR [eax]
  4290cf:	hlt    
  4290d0:	inc    ebp
  4290d1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290d8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290de:	push   ebp
  4290df:	mov    edi,DWORD PTR [ebx]
  4290e1:	in     al,dx
  4290e2:	jne    0x4290a5
  4290e4:	mov    eax,DWORD PTR [ebp-0x28]
  4290e7:	add    DWORD PTR [eax],0xe8058dec
  4290ed:	clc    
  4290ee:	mov    esp,DWORD PTR [edi-0x8]
  4290f1:	add    dh,dl
  4290f3:	rol    WORD PTR [ebp-0x1],cl
  4290f7:	mov    edx,DWORD PTR [eax+0x8]
  4290fa:	jne    0x4290bc
  4290fc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429103:	inc    ebp
  429104:	push   esp
  429105:	test   DWORD PTR [ecx+0xf],ecx
  429108:	sub    edx,esp
  42910a:	add    eax,DWORD PTR [eax]
  42910c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429112:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429119:	mov    eax,DWORD PTR [ecx]
  42911b:	and    BYTE PTR [eax],al
  42911d:	adc    BYTE PTR ss:[eax],al
  429120:	inc    ebp
  429121:	inc    cx
  429124:	push   esp
  429125:	cld    
  429126:	jne    0x429128
  429128:	push   edx
  429129:	enterw 0xc1,0x4d
  42912e:	mov    esp,DWORD PTR [esi+0x20]
  429131:	add    DWORD PTR [ecx-0x7b],eax
  429134:	add    eax,DWORD PTR [ebx]
  429136:	str    WORD PTR [eax+0x45]
  42913a:	lea    ecx,[ebx+0x45890801]
  429140:	sbb    BYTE PTR [ebx],al
  429142:	dec    ebp
  429143:	cmp    al,0xf
  429145:	inc    ebp
  429146:	push   eax
  429147:	mov    esi,DWORD PTR [ebx]
  429149:	push   eax
  42914a:	add    eax,eax
  42914c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429153:	inc    ebp
  429154:	add    BYTE PTR [eax],bh
  429156:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42915d:	(bad)  
  42915e:	mov    ebx,eax
  429160:	loopne 0x4291a7
  429162:	dec    ebp
  429163:	mov    ecx,DWORD PTR [edi]
  429165:	cld    
  429166:	push   eax
  429167:	xchg   DWORD PTR [ebx],esi
  429169:	add    DWORD PTR [ebx],ebp
  42916b:	add    BYTE PTR [ebx],ch
  42916d:	or     BYTE PTR [ecx],bh
  42916f:	dec    ecx
  429170:	loopne 0x429175
  429172:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429178:	push   ebp
  429179:	add    DWORD PTR [ebx+0x55100800],eax
  42917f:	dec    ebp
  429180:	jmp    0x42910b
  429182:	mov    esp,DWORD PTR [eax]
  429184:	sbb    dl,dl
  429186:	inc    eax
  429187:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42918d:	add    BYTE PTR [ebx+0x74528555],cl
  429193:	push   ebp
  429194:	div    DWORD PTR [ebx]
  429196:	and    eax,DWORD PTR [ebx]
  429198:	add    edx,DWORD PTR [edx-0x30]
  42919b:	jno    0x429128
  42919d:	inc    DWORD PTR [eax+eiz*1]
  4291a0:	inc    ebp
  4291a1:	push   eax
  4291a2:	push   eax
  4291a3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4291a9:	mov    edi,esp
  4291ab:	push   eax
  4291ac:	inc    ebp
  4291ad:	enter  0x458b,0x8
  4291b1:	push   ecx
  4291b2:	(bad)  
  4291b3:	call   0x10c9b8b
  4291b8:	pop    ss
  4291b9:	push   ebp
  4291ba:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291c0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291c6:	push   ecx
  4291c7:	jo     0x4291b1
  4291c9:	inc    DWORD PTR [edi]
  4291cb:	or     BYTE PTR [eax],al
  4291cd:	call   0xcd9917
  4291d2:	fmul   QWORD PTR [ebp+0x55]
  4291d5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291db:	mov    bh,0x8c
  4291dd:	adc    al,0x98
  4291df:	dec    esp
  4291e0:	xor    bl,BYTE PTR [eax]
  4291e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291e5:	mov    eax,DWORD PTR [ebp-0x4]
  4291e8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ee:	push   es
  4291ef:	retf   
  4291f0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291f4:	inc    ebp
  4291f5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291fc:	retf   0x83fc
  4291ff:	into   
  429200:	dec    ebp
  429201:	retf   
  429202:	mov    ecx,DWORD PTR [ebp-0x74]
  429205:	mov    eax,DWORD PTR [eax]
  429207:	fdiv   QWORD PTR [ebx]
  429209:	mov    bh,0x3
  42920b:	push   es
  42920c:	mov    esi,ecx
  42920e:	sbb    cl,dl
  429210:	dec    ebp
  429211:	sar    DWORD PTR [ebx],cl
  429213:	push   ebp
  429214:	jne    0x429225
  429216:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42921c:	lea    ebx,[eax]
  42921e:	call   0xf4cc1de5
  429223:	sbb    dh,dl
  429225:	add    edx,ebx
  429227:	push   ebp
  429228:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42922e:	push   ecx
  42922f:	mov    DWORD PTR [eax-0x30],edx
  429232:	test   DWORD PTR [edx],eax
  429234:	xadd   esp,esi
  429237:	pop    es
  429238:	add    cl,dl
  42923a:	mov    eax,ecx
  42923c:	or     al,0x45
  42923e:	(bad)  
  42923f:	push   eax
  429240:	add    DWORD PTR [edx+0x0],eax
  429243:	add    ecx,DWORD PTR [ecx]
  429245:	and    dh,cl
  429247:	call   0xc69b17
  42924c:	add    DWORD PTR [ebp+0x0],edx
  42924f:	mov    esp,DWORD PTR [ebp+0x18]
  429252:	add    BYTE PTR [eax+0x44],cl
  429255:	xor    eax,DWORD PTR [eax]
  429257:	add    esp,DWORD PTR [esi+0x3b]
  42925a:	inc    ebp
  42925b:	je     0x4291e0
  42925d:	push   ecx
  42925e:	or     cl,BYTE PTR [ebp-0x77]
  429261:	add    eax,esi
  429263:	or     al,0x5e
  429265:	inc    eax
  429266:	add    BYTE PTR [ebx],al
  429268:	data16 and BYTE PTR [ebp+0x50],al
  42926c:	sub    DWORD PTR [ecx],0xffffffe8
  42926f:	add    BYTE PTR [ebp-0x75],ah
  429272:	add    BYTE PTR [eax],bl
  429274:	enter  0x894d,0x8b
  429278:	int3   
  429279:	loopne 0x4292ad
  42927b:	rol    BYTE PTR [eax],0x33
  42927e:	lea    cx,[ebp+0xa]
  429282:	data16 jb 0x4292ca
  429285:	add    BYTE PTR [ebx+0x44890855],cl
  42928b:	sbb    ah,al
  42928d:	inc    ebp
  42928e:	lldt   WORD PTR ss:[edx+0x66]
  429293:	xor    ecx,DWORD PTR [eax]
  429295:	sub    edi,esp
  429297:	mov    eax,DWORD PTR [eax]
  429299:	or     al,0x66
  42929b:	ror    edx,cl
  42929d:	dec    ebp
  42929e:	inc    ebp
  42929f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4292a5:	cld    
  4292a6:	or     BYTE PTR [edi+0x4501dd],dl
  4292ac:	(bad)  
  4292ad:	into   
  4292ae:	out    dx,al
  4292af:	retf   
  4292b0:	(bad)  
  4292b1:	dec    ebp
  4292b2:	mov    al,0x8b
  4292b4:	jmp    0xea27:0x450ac320
  4292bb:	xchg   esi,ebp
  4292bd:	add    edi,eax
  4292bf:	add    BYTE PTR [eax+0x3f52e955],bh
  4292c5:	push   ebp
  4292c6:	inc    ebp
  4292c7:	xor    ebx,esp
  4292c9:	add    ebp,esi
  4292cb:	push   edx
  4292cc:	push   bp
  4292ce:	inc    ebp
  4292cf:	(bad)  
  4292d0:	in     eax,dx
  4292d1:	push   esp
  4292d2:	(bad)  
  4292d3:	inc    edx
  4292d5:	sbb    al,0x33
  4292d7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292de:	add    BYTE PTR [ebp+0x43],0x8b
  4292e2:	jmp    0xf98b:0x100041c8
  4292e9:	xor    esi,DWORD PTR [edx+0x3]
  4292ec:	mov    ecx,DWORD PTR [edi]
  4292ee:	fmul   DWORD PTR [edx]
  4292f0:	add    BYTE PTR [eax],al
  4292f2:	lea    eax,[ebx-0x4700273c]
  4292f8:	add    al,0x4f
  4292fa:	pop    DWORD PTR [eax]
  4292fc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429302:	push   edx
  429303:	inc    WORD PTR [ebp+0x8]
  429307:	mov    eax,0x514f4d
  42930c:	(bad)
  429310:	add    al,al
  429312:	xor    DWORD PTR [ebx-0x74baf730],eax
  429318:	test   DWORD PTR [esi+0x74],esp
  42931b:	inc    ebp
  42931c:	mov    DWORD PTR [eax+0xa4f08],edi
  429322:	add    BYTE PTR [ecx-0x76c435bb],cl
  429328:	or     dh,cl
  42932a:	or     eax,0x8b8d5045
  42932f:	inc    ebp
  429330:	mov    WORD PTR [ecx+0x3b8a00],?
  429336:	jne    0x42936b
  429338:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42933e:	add    DWORD PTR [ebx],eax
  429340:	add    bh,bh
  429342:	adc    DWORD PTR [eax],ecx
  429344:	adc    DWORD PTR [ebp+0x55],edi
  429347:	push   es
  429348:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42934e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429355:	inc    ebp
  429356:	mov    esp,edi
  429358:	or     al,0xdc
  42935a:	push   eax
  42935b:	(bad)  
  42935c:	jne    0x429312
  42935e:	call   0x3a8c4f
  429363:	inc    ebp
  429364:	rol    dl,0x84
  429367:	out    dx,al
  429368:	add    bh,al
  42936a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429371:	(bad)  
  429372:	and    al,al
  429374:	fs in  eax,dx
  429376:	inc    DWORD PTR [ebp-0x7b]
  429379:	js     0x42938a
  42937b:	leave  
  42937c:	scas   al,BYTE PTR es:[edi]
  42937d:	inc    esp
  42937e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429385:	or     BYTE PTR [ebx-0x97717c5],0x83
  42938c:	call   DWORD PTR [edi]
  42938e:	shr    ah,0x84
  429391:	xchg   DWORD PTR [eax],eax
  429393:	add    DWORD PTR [eax],eax
  429395:	add    bh,bh
  429397:	dec    ebp
  429398:	and    BYTE PTR [ecx-0x38],dl
  42939b:	push   eax
  42939c:	dec    DWORD PTR [ebx+0xfd885]
  4293a2:	mov    BYTE PTR [ebp+0x508bac00],cl
  4293a8:	mov    WORD PTR [ecx+0x0],ss
  4293ab:	lea    ecx,[ebx+0x108b20d8]
  4293b1:	mov    WORD PTR [edx],ds
  4293b3:	add    BYTE PTR [edi+0xff01ff],al
  4293b9:	mov    ecx,DWORD PTR [ebp-0x28]
  4293bc:	push   ecx
  4293bd:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293c1:	inc    ebp
  4293c2:	in     al,0xeb
  4293c4:	jno    0x429351
  4293c6:	push   edx
  4293c7:	mov    DWORD PTR [eax-0x28],edx
  4293ca:	mov    eax,DWORD PTR [ebp+0x20]
  4293cd:	je     0x429356
  4293cf:	mov    eax,DWORD PTR [ecx]
  4293d1:	sbb    BYTE PTR [eax],al
  4293d3:	pop    DWORD PTR [eax]
  4293d5:	add    esi,eax
  4293d7:	add    bl,al
  4293d9:	adc    DWORD PTR [edi],esi
  4293db:	jmp    0x8bcde42d
  4293e0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293e7:	jne    0x429374
  4293e9:	mov    ecx,DWORD PTR [eax]
  4293eb:	in     al,0x75
  4293ed:	pop    DWORD PTR [ecx+0x5001]
  4293f3:	push   edx
  4293f4:	inc    DWORD PTR [ebx]
  4293f6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293fc:	add    BYTE PTR [edi+0x9],dl
  4293ff:	call   DWORD PTR [esi]
  429401:	and    dl,al
  429403:	and    bh,bh
  429405:	inc    edi
  429407:	test   eax,edx
  429409:	sldt   ebx
  42940c:	cmp    DWORD PTR [eax],eax
  42940e:	pushf  
  42940f:	(bad)  
  429410:	jmp    0x42941e
  429412:	mov    eax,edi
  429414:	or     al,0x75
  429416:	inc    eax
  429417:	call   0x428b1f
  42941c:	mov    eax,eax
  42941e:	loopne 0x4293a4
  429420:	inc    ebp
  429421:	add    BYTE PTR [ebx+0x1451c00],cl
  429427:	mov    eax,DWORD PTR [ebp+0x20]
  42942a:	add    edi,ecx
  42942c:	add    BYTE PTR [eax],ch
  42942e:	cmp    edi,0x18
  429431:	test   DWORD PTR [ebp+0xf],esi
  429434:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42943b:	jne    0x42943f
  42943d:	call   0xffa18f02
  429442:	leave  
  429443:	rcr    BYTE PTR [esp+eax*4],0x55
  429447:	add    ah,ch
  429449:	add    BYTE PTR [edi-0x48fef979],dh
  42944f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429456:	inc    esp
  429457:	mov    ebx,DWORD PTR [eax]
  429459:	fcom   st(2)
  42945b:	add    BYTE PTR [edi],bl
  42945d:	lea    ecx,[eax-0x18]
  429460:	(bad)  
  429461:	push   DWORD PTR [ecx]
  429463:	call   0xffb4e1c5
  429468:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42946c:	fstp   DWORD PTR [esi+ebx*8]
  42946f:	push   ebp
  429470:	pop    ebp
  429471:	mov    esi,DWORD PTR [edx-0x38]
  429474:	add    DWORD PTR [eax],0x28
  429477:	mov    edi,DWORD PTR [ebx]
  429479:	xor    esi,DWORD PTR [edx+0x3]
  42947c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429480:	pop    ebp
  429481:	or     al,0x4
  429483:	inc    ecx
  429484:	push   ebp
  429485:	(bad)  
  429486:	in     al,dx
  429487:	or     ah,ch
  429489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948a:	xbegin 0xffc80a80
  429490:	clc    
  429491:	adc    al,0x45
  429493:	idiv   BYTE PTR [ecx]
  429495:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42949c:	test   DWORD PTR [eax+0x665300f8],ebx
  4294a2:	add    BYTE PTR [ecx+0x66],dh
  4294a5:	add    eax,DWORD PTR [ebp+0x52]
  4294a8:	adc    eax,0x20
  4294ab:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4294b1:	test   DWORD PTR [eax],eax
  4294b3:	clc    
  4294b4:	data16 or al,BYTE PTR [ebp+0x45]
  4294b8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4294bf:	rol    BYTE PTR [ebp+0x45],1
  4294c2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294c8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ce:	push   ebx
  4294cf:	add    BYTE PTR [eax+0x0],dl
  4294d2:	push   ecx
  4294d3:	jge    0x429508
  4294d5:	add    BYTE PTR [esi+0x4],dl
  4294d8:	jne    0x42953f
  4294da:	mov    edx,0x457200
  4294df:	jmp    0x4294a3
  4294e1:	xor    edi,DWORD PTR [ebx]
  4294e3:	pop    edi
  4294e4:	cvtdq2ps xmm7,xmm0
  4294e7:	ret    0x0
  4294ea:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294f0:	xor    ecx,DWORD PTR [edi]
  4294f2:	add    eax,DWORD PTR [ecx+0x3b]
  4294f5:	push   ebx
  4294f6:	rdpmc  
  4294f8:	out    0x8d,al
  4294fa:	add    BYTE PTR [eax],cl
  4294fc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429502:	ret    0x450c
  429505:	sbb    al,0x8b
  429507:	cmp    eax,esi
  429509:	or     cl,al
  42950b:	or     al,0xc2
  42950d:	pop    eax
  42950e:	inc    ebp
  42950f:	add    ecx,DWORD PTR [edi]
  429511:	add    esi,DWORD PTR [ebp+0x39]
  429514:	invd   
  429516:	jge    0x429522
  429518:	mov    eax,0x478ac0
  42951d:	cli    
  42951e:	xor    esp,ecx
  429520:	mov    ebx,0x5b8ac0
  429525:	ret    0x33
  429528:	mov    eax,0x833a8b
  42952d:	sub    BYTE PTR [ebx],al
  42952f:	inc    ebp
  429530:	data16 cmp al,bh
  429533:	pushf  
  429534:	inc    bh
  429536:	mov    esp,esp
  429538:	hlt    
  429539:	test   DWORD PTR [ebp-0x8],esi
  42953c:	mov    eax,DWORD PTR [ebp-0x14]
  42953f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429545:	dec    edi
  429546:	or     BYTE PTR [eax],al
  429548:	jne    0x4294d3
  42954a:	mov    esi,esp
  42954c:	call   0x77a92111
  429551:	inc    ebp
  429552:	mov    DWORD PTR [eax+0x984f0c],edi
  429558:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42955e:	add    BYTE PTR [esi+0x7d],ah
  429561:	inc    ebp
  429562:	mov    bx,WORD PTR [ebp+0x8]
  429566:	add    DWORD PTR [ebp+0x50],0x30c008b
  42956d:	inc    ebp
  42956e:	mov    bx,di
  429571:	lock test BYTE PTR [ecx+0x7000801],bh
  429578:	jge    0x42953b
  42957a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429580:	cli    
  429581:	xor    bl,bh
  429583:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429589:	test   BYTE PTR [eax],cl
  42958b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429592:	cmp    ebp,eax
  429594:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42959b:	test   BYTE PTR [ebp+0x1],bh
  42959e:	mov    ebx,0x458a00
  4295a3:	xor    esi,DWORD PTR [ebx]
  4295a5:	add    esp,DWORD PTR [esi-0x77]
  4295a8:	pop    ebp
  4295a9:	loopne 0x429611
  4295ab:	inc    ebp
  4295ac:	clc    
  4295ad:	xor    edi,DWORD PTR [ebx]
  4295af:	add    esi,DWORD PTR [edx-0x77]
  4295b2:	data16 fdivr QWORD PTR [ebp-0x49]
  4295b6:	mov    ebx,0xb78afc
  4295bb:	hlt    
  4295bc:	xor    esi,DWORD PTR [esi]
  4295be:	data16 add BYTE PTR [ebp+0x66],bl
  4295c2:	data16 lock clc 
  4295c5:	cmp    eax,DWORD PTR ss:[eax]
  4295c8:	ja     0x429630
  4295ca:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ce:	ltr    WORD PTR [ebp+0x66]
  4295d2:	add    esi,eax
  4295d4:	add    di,WORD PTR [ebp+0x2b]
  4295d8:	data16 data16 jge 0x429659
  4295dc:	mov    ebx,0xe08a8b
  4295e1:	jge    0x429616
  4295e3:	data16 data16 xor al,0x5d
  4295e7:	data16 data16 jne 0x4295e3
  4295eb:	mov    edi,DWORD PTR [ebx]
  4295ed:	fdiv   QWORD PTR [edx+0x7d]
  4295f0:	data16 data16 jge 0x429628
  4295f4:	mov    ebx,0x758a66
  4295f9:	mov    esi,0x667233
  4295fe:	pop    ebp
  4295ff:	or     BYTE PTR [esi+0x0],ah
  429602:	clc    
  429603:	mov    edi,DWORD PTR [ebx]
  429605:	lock ja 0x429593
  429608:	(bad)  
  42960a:	jge    0x429603
  42960c:	invd   
  42960e:	pop    ebp
  42960f:	add    BYTE PTR [ebx],al
  429611:	(bad)  
  429612:	cmp    di,WORD PTR [ebp+0xf]
  429616:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42961a:	mov    bx,WORD PTR [ebp-0x10]
  42961e:	pop    bp
  429620:	fbstp  TBYTE PTR [ebx]
  429622:	test   DWORD PTR [ebx],eax
  429624:	add    BYTE PTR [ebx],bh
  429626:	add    BYTE PTR [esi+0x7d],ah
  429629:	jge    0x4295b6
  42962b:	data16 in al,dx
  42962d:	pop    ebp
  42962e:	stc    
  42962f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429636:	mov    edi,ebx
  429638:	in     al,dx
  429639:	test   BYTE PTR [ebp+0x0],bh
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0xbd3f8fce
  429643:	ss cwde 
  429645:	add    BYTE PTR [edx],dh
  429647:	mov    bx,di
  42964a:	call   0x8b4b13da
  42964f:	add    ebp,esp
  429651:	mov    bx,di
  429654:	jnp    0x42967c
  429656:	mov    DWORD PTR [ebx+0x367df808],ecx
  42965c:	mov    eax,DWORD PTR [eax]
  42965e:	call   0x7c3e21c9
  429663:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429669:	data16 data16 fistp WORD PTR [ebp+0xe]
  42966e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429678:	fisttp WORD PTR [ecx-0x7401f77b]
  42967e:	(bad)  
  42967f:	cld    
  429680:	jne    0x4296b8
  429682:	xor    eax,DWORD PTR [eax]
  429684:	mov    esp,DWORD PTR [esi-0x10]
  429687:	sti    
  429688:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42968f:	data16 adc bl,bh
  429692:	push   ebp
  429693:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42969a:	mov    WORD PTR [eax],es
  42969c:	cwde   
  42969d:	data16 xor bh,bl
  4296a0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4296a6:	mov    esp,DWORD PTR [esi-0x14]
  4296a9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4296af:	or     al,0x2b
  4296b1:	mov    bh,0xba
  4296b3:	hlt    
  4296b4:	mov    bh,bl
  4296b6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4296bc:	dec    edi
  4296bd:	or     al,0x0
  4296bf:	mov    edi,DWORD PTR [ebx]
  4296c1:	or     BYTE PTR [ebp+0x3b],dh
  4296c4:	mov    ecx,DWORD PTR [edi]
  4296c6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296cc:	xor    al,0xd8
  4296ce:	pop    bp
  4296d0:	lock xor esi,DWORD PTR [ebx]
  4296d3:	lea    esp,[esi+0x1f]
  4296d6:	icebp  
  4296d7:	jb     0x4296dd
  4296d9:	add    al,al
  4296db:	jge    0x4296e9
  4296dd:	mov    eax,eax
  4296df:	fsubr  st,st(3)
  4296e1:	pop    ebp
  4296e2:	mov    esi,DWORD PTR [ebx]
  4296e4:	in     al,0x8d
  4296e6:	rcr    DWORD PTR [edi],0xc2
  4296e9:	jb     0x429749
  4296eb:	add    cl,cl
  4296ed:	jge    0x4296fb
  4296ef:	mov    edx,DWORD PTR [ebp-0x20]
  4296f2:	in     al,dx
  4296f3:	pop    ebp
  4296f4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296f9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296fd:	mov    ebp,DWORD PTR [ebx]
  4296ff:	fdivr  QWORD PTR [esi+0x668a5d]
  429705:	cmp    al,0x33
  429707:	mov    si,0x4f7d
  42970b:	mov    eax,DWORD PTR [eax]
  42970d:	lock inc ebp
  42970f:	mov    esi,DWORD PTR [edi]
  429711:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429718:	clc    
  429719:	(bad)  
  42971a:	cmp    edi,DWORD PTR [ebx]
  42971c:	je     0x42972d
  42971e:	push   ebx
  42971f:	loopne 0x429730
  429721:	dec    ecx
  429723:	mov    ebp,DWORD PTR [eax-0x1c]
  429726:	int    0xf1
  429728:	mov    esi,0x703084d
  42972d:	orps   xmm6,xmm1
  429730:	add    BYTE PTR [ebp+0x66],dh
  429733:	jmp    0x429700
  429735:	mov    eax,DWORD PTR [ebx]
  429737:	lock push ebp
  429739:	ror    DWORD PTR [ebp-0x2972feb3],1
  42973f:	or     bh,dl
  429741:	jb     0x429741
  429743:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429749:	loopne 0x42974b
  42974b:	jne    0x429749
  42974d:	data16 add BYTE PTR [esi+eiz*2],dh
  429751:	mov    ecx,ebx
  429753:	data16 ss icebp 
  429756:	add    BYTE PTR [esi],dh
  429758:	data16 add bl,cl
  42975b:	data16 xor dh,dl
  42975e:	add    BYTE PTR [edx],dh
  429760:	data16 add bl,cl
  429763:	enterw 0x4df1,0x19
  429768:	pop    edi
  429769:	jne    0x4296ec
  42976b:	mov    esi,DWORD PTR [edi]
  42976d:	call   0x77b7230e
  429772:	xor    ebp,DWORD PTR [ebx]
  429774:	lea    esp,[esi+0x48]
  429777:	repnz in eax,0x3b
  42977a:	add    BYTE PTR [ebp-0x37],dh
  42977d:	xor    edx,DWORD PTR [ebp-0x15]
  429780:	in     al,dx
  429781:	xor    edx,DWORD PTR [esi+0x40]
  429784:	mov    DWORD PTR [edi],0x338545fc
  42978a:	clc    
  42978b:	add    edi,DWORD PTR [eax]
  42978d:	pop    edi
  42978e:	pushf  
  42978f:	pop    ebx
  429790:	call   0xff439757
  429795:	mov    edi,eax
  429797:	push   ecx
  429798:	pop    es
  429799:	mov    edi,DWORD PTR [ebx]
  42979b:	push   esi
  42979c:	inc    ebx
  42979d:	cld    
  42979e:	js     0x4297a0
  4297a0:	popa   
  4297a1:	data16 (bad) 
  4297a3:	into   
  4297a4:	push   0xb900cd36
  4297a9:	data16 or dh,cl
  4297ac:	pop    es
  4297ad:	xor    ah,BYTE PTR [esi+0x0]
  4297b0:	add    bh,al
  4297b2:	cld    
  4297b3:	cld    
  4297b4:	add    BYTE PTR [ebp+0x38c3f866],al
  4297ba:	ss pushf 
  4297bc:	add    BYTE PTR [esi+0x66],ah
  4297bf:	into   
  4297c0:	ret    
  4297c1:	pop    ebp
  4297c2:	add    al,0x57
  4297c4:	add    BYTE PTR [edi-0x723c409a],dh
  4297ca:	add    edi,edi
  4297cc:	jne    0x42981e
  4297ce:	lea    edx,[ecx+0x1]
  4297d1:	mov    ebx,0xd64ff1
  4297d6:	sar    DWORD PTR [ebx],1
  4297d8:	test   BYTE PTR [ebp+0x30],dh
  4297db:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297df:	push   edi
  4297e0:	xor    BYTE PTR [ebx],0x3b
  4297e3:	mov    esi,ebx
  4297e5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297eb:	xor    BYTE PTR [ebp+0x64],al
  4297ee:	pop    ebx
  4297ef:	mov    ebx,0x9c3a37
  4297f4:	je     0x429821
  4297f6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297fc:	mov    WORD PTR [ebx],?
  4297fe:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429804:	pop    edi
  429805:	cmp    ecx,ecx
  429807:	jne    0x42985e
  429809:	mov    ebp,esp
  42980b:	cld    
  42980c:	push   esi
  42980d:	pop    ebx
  42980e:	inc    ebp
  42980f:	stc    
  429810:	aaa    
  429811:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429818:	clc    
  429819:	test   dl,dl
  42981b:	xor    bh,bh
  42981d:	fs pop si
  429820:	or     bl,al
  429822:	cld    
  429823:	mov    eax,DWORD PTR [eax]
  429825:	push   ecx
  429826:	push   di
  429828:	retf   0x3645
  42982b:	aaa    
  42982c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429833:	clc    
  429834:	add    BYTE PTR [ebx+0x66],bl
  429837:	dec    edx
  429839:	mov    edx,DWORD PTR [edi-0x76]
  42983c:	push   edi
  42983d:	add    al,0xb7
  42983f:	xor    al,0xba
  429841:	cmp    al,0x8d
  429843:	je     0x429844
  429845:	mov    edx,DWORD PTR [eax-0x46]
  429848:	push   ecx
  429849:	lea    edi,[ebx+0x504fff]
  42984f:	push   ecx
  429850:	cmp    edx,DWORD PTR [ebx+0x75]
  429853:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429859:	add    BYTE PTR [ebx],dh
  42985b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429861:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429868:	mov    ebx,0x3b3a00
  42986d:	jne    0x42989a
  42986f:	mov    DWORD PTR [ebx+0x728afc],edi
  429875:	xor    esi,DWORD PTR [ebx]
  429877:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42987d:	push   edi
  42987e:	cmp    esp,ebp
  429880:	jne    0x429882
  429882:	sbb    DWORD PTR [eax],0x8085c3fc
  429888:	clc    
  429889:	inc    ebx
  42988a:	pop    ebx
  42988b:	sti    
  42988c:	add    eax,0xeb8bc075
  429891:	cld    
  429892:	xor    edi,DWORD PTR ds:0xf8c3855e
  429898:	mov    ecx,DWORD PTR [ecx+edx*2]
  42989b:	rol    DWORD PTR [ebp-0x37],0xf
  42989f:	mov    DWORD PTR [eax],ecx
  4298a1:	inc    edi
  4298a2:	(bad)  
  4298a3:	in     eax,0x4
  4298a5:	add    bh,bh
  4298a7:	(bad)  
  4298a8:	mov    esi,0xc38a5e
  4298ad:	mov    esi,DWORD PTR [ebx]
  4298af:	push   ecx
  4298b0:	mov    edi,0xfc4fc7
  4298b5:	test   DWORD PTR [ebp-0x8],edx
  4298b8:	data16 cmp bh,al
  4298bb:	pushf  
  4298bc:	sub    ebp,eax
  4298be:	inc    ebp
  4298bf:	(bad)  
  4298c0:	sub    edi,edi
  4298c2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298c8:	inc    ebp
  4298c9:	add    BYTE PTR [esi+0x2b],ah
  4298cc:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298d2:	cmp    al,0x33
  4298d4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298da:	(bad)  
  4298db:	cmp    esi,DWORD PTR [ebx]
  4298dd:	je     0x429897
  4298df:	push   ebx
  4298e0:	dec    edi
  4298e1:	str    ecx
  4298e4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298e7:	int    0x33
  4298e9:	mov    edi,0x789085f
  4298ee:	mov    eax,DWORD PTR [esp+edi*8]
  4298f1:	add    cl,cl
  4298f3:	data16 add al,0xcb
  4298f6:	push   ebp
  4298f7:	add    ebp,esp
  4298f9:	jne    0x4298e7
  4298fb:	(bad)  
  4298fc:	mov    DWORD PTR [ecx],0xd685f7ec
  429902:	clc    
  429903:	xlat   BYTE PTR ds:[ebx]
  429904:	inc    ebp
  429905:	mov    edi,DWORD PTR [ecx]
  429907:	push   eax
  429908:	pushf  
  429909:	in     eax,0x8b
  42990b:	add    ah,ch
  42990d:	cld    
  42990e:	push   eax
  42990f:	add    BYTE PTR [ecx+0x66],dl
  429912:	add    eax,0x3672cb
  429917:	add    BYTE PTR [ebp+0x66],al
  42991a:	(bad)  
  42991b:	retf   
  42991c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429923:	retf   
  429924:	cmp    al,0xc8
  429926:	pushf  
  429927:	jge    0x4298f0
  429929:	aaa    
  42992a:	cld    
  42992b:	pushf  
  42992c:	test   DWORD PTR [edi-0x8],ebx
  42992f:	je     0x429976
  429931:	xor    esi,DWORD PTR ds:0x7020840
  429937:	ror    BYTE PTR [ebp-0x37],0x8d
  42993b:	push   ebp
  42993c:	add    esp,ebp
  42993e:	jb     0x4298cb
  429940:	add    BYTE PTR [eax],cl
  429942:	dec    ebp
  429943:	mov    bh,0x81
  429945:	push   esi
  429946:	push   eax
  429947:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42994e:	xor    al,BYTE PTR [eax]
  429950:	mov    edx,DWORD PTR [edi+0x10]
  429953:	(bad)  
  429954:	scas   eax,DWORD PTR es:[edi]
  429955:	xor    bh,BYTE PTR [ebx]
  429957:	add    BYTE PTR [edi],cl
  429959:	mov    ebp,ebp
  42995b:	cld    
  42995c:	add    BYTE PTR [ebx],bh
  42995e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429962:	dec    ebp
  429963:	or     BYTE PTR [ebx],ch
  429965:	ret    0x458b
  429968:	lock jmp 0x42995c
  42996b:	mov    ecx,DWORD PTR [eax]
  42996d:	or     BYTE PTR [edi],al
  42996f:	mov    ecx,eax
  429971:	xor    DWORD PTR [edx+0x2],0x0
  429975:	mov    bh,0xc1
  429977:	adc    BYTE PTR [eax],dh
  429979:	iret   
  42997a:	inc    ebp
  42997b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429981:	inc    BYTE PTR [ebx]
  429983:	xor    bh,al
  429985:	add    BYTE PTR [ecx],dl
  429987:	data16 adc al,bh
  42998a:	dec    ecx
  42998b:	fisttp WORD PTR [ecx+0x456604c0]
  429991:	add    dh,BYTE PTR ds:0x75e0845
  429997:	ret    0x4d
  42999a:	lea    ecx,[ebx+0x18728301]
  4299a0:	add    BYTE PTR [ebp+0x45],al
  4299a3:	cmp    cl,ch
  4299a5:	pushf  
  4299a6:	add    bh,al
  4299a8:	add    al,ch
  4299aa:	inc    ebp
  4299ab:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4299b1:	xor    eax,0x781084d
  4299b6:	push   eax
  4299b7:	cwde   
  4299b8:	push   ecx
  4299b9:	xor    al,BYTE PTR [ecx+0x32f89889]
  4299bf:	inc    ebp
  4299c0:	cmp    esp,DWORD PTR [eax]
  4299c2:	jbe    0x429960
  4299c4:	mov    eax,edi
  4299c6:	or     ah,dh
  4299c8:	inc    ebp
  4299c9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299cf:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299d5:	in     al,dx
  4299d6:	hlt    
  4299d7:	push   eax
  4299d8:	push   eax
  4299d9:	push   ecx
  4299da:	push   ecx
  4299db:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299e1:	cwde   
  4299e2:	cwde   
  4299e3:	xor    dh,BYTE PTR [edx]
  4299e5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299eb:	or     BYTE PTR [ebp+0x7],al
  4299ee:	mov    eax,ecx
  4299f0:	clc    
  4299f1:	jb     0x4299b4
  4299f3:	add    BYTE PTR [ebp+0x55],cl
  4299f6:	or     DWORD PTR [edi],0xc251d150
  4299fc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429a06:	mov    edi,eax
  429a08:	or     cl,al
  429a0a:	inc    ebp
  429a0b:	dec    ebp
  429a0c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429a12:	or     WORD PTR [ecx],0x8998
  429a17:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  429a1d:	mov    edx,DWORD PTR [ecx+0x8]
  429a20:	mov    eax,DWORD PTR [ebp-0x8]
  429a23:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a2a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a30:	inc    ebp
  429a31:	dec    eax
  429a32:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a38:	add    edx,DWORD PTR [ecx-0x8]
  429a3b:	mov    ecx,DWORD PTR [ecx]
  429a3d:	clc    
  429a3e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a45:	mov    ecx,ebp
  429a47:	clc    
  429a48:	(bad)  
  429a49:	popf   
  429a4a:	inc    DWORD PTR [eax]
  429a4c:	ret    0x8b
  429a4f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a55:	mov    edi,esp
  429a57:	hlt    
  429a58:	test   ecx,esi
  429a5a:	clc    
  429a5b:	or     BYTE PTR [ebp+0x7],al
  429a5e:	cmp    ecx,eax
  429a60:	pushf  
  429a61:	jb     0x429a96
  429a63:	add    BYTE PTR [eax-0x3f],al
  429a66:	inc    eax
  429a67:	daa    
  429a68:	inc    ebp
  429a69:	inc    ebp
  429a6a:	xor    eax,0x7f80803
  429a6f:	dec    ebp
  429a70:	cwde   
  429a71:	add    esi,DWORD PTR [edx]
  429a73:	clc    
  429a74:	cmp    DWORD PTR [ecx],ecx
  429a76:	or     al,0x8
  429a78:	add    al,BYTE PTR [ebp+0x2c]
  429a7b:	xor    eax,0x7350845
  429a80:	or     BYTE PTR [ebp+0x7],cl
  429a83:	lea    ebx,[eax-0x748dcdff]
  429a89:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a90:	mov    edx,DWORD PTR [eax]
  429a92:	cld    
  429a93:	dec    ebp
  429a94:	push   eax
  429a95:	sub    edx,DWORD PTR [ecx-0x75]
  429a98:	add    eax,0xf172fc
  429a9d:	or     BYTE PTR [ebp+0x7],cl
  429aa0:	add    eax,ecx
  429aa2:	or     al,0x72
  429aa4:	add    DWORD PTR [eax],eax
  429aa6:	mov    ebx,0x29c2c1
  429aab:	inc    ebp
  429aac:	mov    eax,DWORD PTR [ebx]
  429aae:	cmp    eax,0x3004d1c
  429ab4:	xbegin 0x66c826ae
  429aba:	clc    
  429abb:	or     BYTE PTR [ebp+0x45],al
  429abe:	cmp    DWORD PTR ds:0x78b089c,esi
  429ac4:	adc    BYTE PTR [ebp+0x45],cl
  429ac7:	lea    eax,[ebp+0x33727501]
  429acd:	add    cl,ch
  429acf:	inc    ebp
  429ad0:	add    bl,ch
  429ad2:	add    BYTE PTR [ebx+0x45850845],cl
  429ad8:	je     0x429a65
  429ada:	push   ebx
  429adb:	or     al,0x85
  429add:	dec    ebp
  429ade:	std    
  429adf:	mov    bh,bh
  429ae1:	mov    BYTE PTR [ebp-0x75],al
  429ae4:	mov    edi,eax
  429ae6:	or     al,0x89
  429ae8:	inc    ebp
  429ae9:	clc    
  429aea:	mov    esp,esp
  429aec:	hlt    
  429aed:	call   DWORD PTR [edi-0x37]
  429af0:	push   eax
  429af1:	or     al,0x51
  429af3:	push   ebp
  429af4:	xor    ebp,esp
  429af6:	mov    esi,0x457251
  429afb:	cmp    dh,al
  429afd:	pushf  
  429afe:	inc    ebp
  429aff:	(bad)  
  429b00:	mov    edi,eax
  429b02:	or     al,0x85
  429b04:	add    al,bh
  429b06:	inc    eax
  429b08:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429b0c:	or     ah,bh
  429b0e:	inc    eax
  429b0f:	push   eax
  429b10:	jmp    0x429b63
  429b12:	mov    eax,DWORD PTR ds:0xe8720c
  429b18:	mov    DWORD PTR [ebp-0x8],eax
  429b1b:	jne    0x429b62
  429b1d:	jmp    0x429aaa
  429b1f:	mov    ebp,DWORD PTR [eax]
  429b21:	clc    
  429b22:	retf   0xff50
  429b25:	push   ecx
  429b26:	mov    DWORD PTR ds:0x757210,eax
  429b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b2f:	sub    esp,DWORD PTR [ebx-0x77]
  429b32:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b39:	or     ah,bh
  429b3b:	pop    es
  429b3c:	ds cwde 
  429b3e:	push   DWORD PTR [edx]
  429b40:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b46:	(bad)  
  429b47:	mov    bh,bh
  429b49:	jmp    0x429b37
  429b4b:	leave  
  429b4c:	jne    0x429b56
  429b4e:	call   0x2f94a8
  429b53:	in     al,dx
  429b54:	dec    ebp
  429b55:	add    dh,BYTE PTR [ebx]
  429b57:	add    BYTE PTR [ebx],al
  429b59:	inc    ebp
  429b5a:	cmp    edi,DWORD PTR [eax]
  429b5c:	je     0x429afa
  429b5e:	mov    eax,edi
  429b60:	or     al,0xf0
  429b62:	add    BYTE PTR [ebp+0x458bf845],al
  429b68:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b6e:	adc    al,0x7
  429b70:	enter  0x9fc0,0xa5
  429b74:	rol    BYTE PTR [eax],0x5e
  429b77:	mov    ecx,ecx
  429b79:	or     al,0xc
  429b7b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b82:	jmp    0x429b83
  429b84:	push   ebp
  429b85:	mov    esp,ebp
  429b87:	cld    
  429b88:	inc    ebp
  429b89:	inc    ebp
  429b8a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b91:	push   esi
  429b92:	push   esi
  429b93:	mov    edi,0x7af080f
  429b98:	add    bh,al
  429b9a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429ba0:	add    BYTE PTR [ecx+0x4540100f],cl
  429ba6:	mov    ebp,eax
  429ba8:	mov    ebp,edi
  429baa:	lock call edx
  429bad:	fcom   DWORD PTR [ebp+0x45]
  429bb0:	mov    eax,0x148a8b
  429bb5:	push   ecx
  429bb6:	enter  0xc145,0x83
  429bba:	cmp    cl,BYTE PTR [eax]
  429bbc:	add    BYTE PTR [ebp+0x4d],al
  429bbf:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429bc5:	call   0xffa29734
  429bca:	cmp    eax,DWORD PTR [ebp-0xc]
  429bcd:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bd1:	push   ebp
  429bd2:	(bad)
  429bd5:	std    
  429bd6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bdd:	inc    ebp
  429bde:	(bad)  
  429bdf:	call   0xff7c986f
  429be4:	add    al,BYTE PTR [ebp+0x37]
  429be7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bed:	jne    0x429bef
  429bef:	(bad)  
  429bf0:	cmp    edi,esp
  429bf2:	jne    0x429c25
  429bf4:	mov    edi,edi
  429bf6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bfc:	pop    ds
  429bfd:	into   
  429bfe:	je     0x429bc1
  429c00:	mov    ebx,DWORD PTR [esi]
  429c02:	or     BYTE PTR [ebp-0x49],al
  429c05:	mov    esp,DWORD PTR [esi-0x77]
  429c08:	mov    esi,0xfc451f0c
  429c0d:	mov    eax,DWORD PTR [eax]
  429c0f:	or     al,0x66
  429c11:	sar    bl,0x3b
  429c14:	xor    esi,DWORD PTR [ebp+0x66]
  429c17:	xor    ecx,edi
  429c19:	pop    edi
  429c1a:	adc    bl,BYTE PTR [ebx+0x78]
  429c1d:	ret    0xff
  429c20:	cld    
  429c21:	inc    ebp
  429c22:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c28:	cld    
  429c29:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c30:	push   0xffffff83
  429c32:	pop    edi
  429c33:	or     BYTE PTR [ebp+0x53],dh
  429c36:	xorps  xmm1,xmm2
  429c39:	test   BYTE PTR [eax+eax*1],bh
  429c3c:	add    BYTE PTR [eax],al
  429c3e:	adc    eax,eax
  429c40:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c48:	jmp    DWORD PTR [eax]
  429c4a:	ror    al,0x5e
  429c4d:	inc    ebp
  429c4e:	leave  
  429c4f:	xor    ecx,DWORD PTR [eax]
  429c51:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c57:	add    ch,al
  429c59:	xor    edi,edi
  429c5b:	xor    DWORD PTR [ebx],0x660033fc
  429c61:	mov    DWORD PTR [ebp-0xc],ecx
  429c64:	pcmpgtw mm0,mm0
  429c67:	add    dl,ah
  429c69:	leave  
  429c6a:	mov    edi,DWORD PTR [esi-0x7d]
  429c6d:	push   ax
  429c6f:	dec    ebp
  429c70:	mov    esi,DWORD PTR [ebx-0x75]
  429c73:	lea    ebp,[eax-0x7c00fffc]
  429c79:	xor    eax,DWORD PTR [eax]
  429c7b:	sysret 
  429c7d:	dec    ebp
  429c7e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c85:	push   WORD PTR [ecx+0x8]
  429c89:	jne    0x429c4c
  429c8b:	ud0    ecx,DWORD PTR [ecx]
  429c8e:	mov    esi,DWORD PTR [edx]
  429c90:	lods   al,BYTE PTR ds:[esi]
  429c91:	add    BYTE PTR [eax],al
  429c93:	data16 (bad) 
  429c95:	iret   
  429c96:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c9d:	cli    
  429c9e:	inc    ebp
  429c9f:	cmp    al,0x8d
  429ca1:	add    BYTE PTR [esi+0x2d],ah
  429ca4:	inc    ebp
  429ca5:	pop    ebp
  429ca6:	lea    ecx,[edi]
  429ca8:	mov    dl,bh
  429caa:	add    BYTE PTR [edi],cl
  429cac:	mov    DWORD PTR [eax+eax*8],edi
  429caf:	mov    ebx,0x3a87
  429cb4:	add    BYTE PTR [ebx],ch
  429cb6:	inc    ebp
  429cb7:	data16 (bad) 
  429cb9:	clc    
  429cba:	int3   
  429cbb:	cmp    eax,DWORD PTR [eax]
  429cbd:	je     0x429c48
  429cbf:	push   0xffffffc8
  429cc1:	pop    edi
  429cc2:	xchg   DWORD PTR [ebp+0x0],eax
  429cc5:	data16 add BYTE PTR [ebp+0x45],cl
  429cc9:	lea    cx,[ebp+0x10]
  429ccd:	jb     0x429ccf
  429ccf:	jmp    0x429c5a
  429cd1:	call   eax
  429cd3:	clc    
  429cd4:	xchg   DWORD PTR [edi+0x1],edi
  429cd7:	mov    eax,DWORD PTR [eax]
  429cd9:	or     BYTE PTR [ebp-0x49],al
  429cdc:	lea    eax,[eax+0x74003154]
  429ce2:	push   edi
  429ce3:	inc    edx
  429ce4:	jge    0x429ce5
  429ce6:	mov    DWORD PTR [edi],ecx
  429ce8:	fdiv   DWORD PTR [edi-0x6]
  429ceb:	inc    DWORD PTR [eax]
  429ced:	xor    edx,DWORD PTR [eax+0x5f]
  429cf0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cf3:	ret    0x0
  429cf6:	xor    BYTE PTR [ebp-0x51],cl
  429cf9:	cmp    edi,0xf0ff8904
  429cff:	data16 ror al,0x84
  429d03:	rol    BYTE PTR [eax],0x3b
  429d06:	add    al,dh
  429d08:	dec    eax
  429d09:	xchg   esp,eax
  429d0a:	push   ebx
  429d0b:	jmp    0x429c98
  429d0d:	push   ebp
  429d0e:	add    esp,ebp
  429d10:	add    ebp,esp
  429d12:	mov    edx,DWORD PTR [edi+0x24]
  429d15:	clc    
  429d16:	dec    esi
  429d17:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429d1d:	cmp    BYTE PTR [ebx],al
  429d1f:	jne    0x429caa
  429d21:	xor    esp,eax
  429d23:	jmp    0x459ea6
  429d28:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d2b:	jne    0x429d21
  429d2d:	call   0xffcc9a87
  429d32:	clc    
  429d33:	xchg   edi,eax
  429d34:	sti    
  429d35:	add    DWORD PTR [ebx],eax
  429d37:	add    BYTE PTR [ebp+0x47],bl
  429d3a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d40:	pop    ebp
  429d41:	mov    DWORD PTR [esi-0x48],esi
  429d44:	jmp    0x429d8d
  429d46:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d4c:	(bad)  
  429d4e:	cmp    al,0x0
  429d50:	cmp    eax,DWORD PTR [ebp+0x18]
  429d53:	lea    ebx,[ebp-0x56]
  429d56:	jle    0x429d58
  429d58:	jae    0x429ce3
  429d5a:	mov    eax,esp
  429d5c:	call   0xb900:0x8b005587
  429d63:	inc    ebp
  429d64:	push   ebp
  429d65:	lea    ecx,[ebp-0x27ff4f12]
  429d6b:	mov    eax,edi
  429d6d:	int3   
  429d6e:	push   ebp
  429d6f:	xchg   edi,eax
  429d71:	add    esp,ebp
  429d73:	add    BYTE PTR [eax],al
  429d75:	inc    ebp
  429d76:	add    BYTE PTR [ebp+0x8b3255],cl
  429d7c:	cld    
  429d7d:	mov    DWORD PTR [edx],edi
  429d7f:	aam    0x75
  429d81:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d87:	mov    DWORD PTR [ebx-0x50],edx
  429d8a:	test   BYTE PTR [ebp-0x1],0xe8
  429d8e:	mov    eax,DWORD PTR [eax]
  429d90:	hlt    
  429d91:	add    al,al
  429d93:	mov    eax,DWORD PTR ds:0x890045a8
  429d99:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d9f:	inc    DWORD PTR [eax*2+0xf75854d]
  429da6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429dac:	call   0x7298faed
  429db1:	je     0x429e11
  429db3:	js     0x429e14
  429db5:	lock ret 0x7e
  429db9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429dbf:	mov    edi,edi
  429dc1:	sbb    al,bl
  429dc3:	clc    
  429dc4:	add    BYTE PTR [ebp-0x73],bh
  429dc7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dcd:	ror    BYTE PTR [eax],1
  429dcf:	dec    ebp
  429dd0:	xchg   ebp,eax
  429dd1:	mov    edi,edi
  429dd3:	in     al,0x8b
  429dd5:	jge    0x429d60
  429dd7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429ddd:	clc    
  429dde:	pop    esi
  429ddf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429de5:	clc    
  429de6:	add    al,0x6e
  429de8:	mov    eax,DWORD PTR [ebx]
  429dea:	mov    BYTE PTR [ebp+0x0],dl
  429ded:	mov    edx,DWORD PTR [ebx-0x20]
  429df0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429df6:	add    eax,0x3b3a73
  429dfb:	adc    al,0x89
  429dfd:	pop    eax
  429dfe:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429e02:	ret    0xf08
  429e05:	cmp    al,0x2
  429e07:	mov    DWORD PTR [edx],esi
  429e09:	cld    
  429e0a:	add    BYTE PTR [ebp+0x66],dl
  429e0d:	add    eax,ebx
  429e0f:	add    esp,eax
  429e11:	sub    eax,eax
  429e13:	or     BYTE PTR [ecx-0x77f474bb],cl
  429e19:	add    BYTE PTR [eax],al
  429e1b:	mov    DWORD PTR [ebx-0x24],ebx
  429e1e:	push   edi
  429e1f:	push   ebp
  429e20:	clc    
  429e21:	add    DWORD PTR [esi+0x1b0100],0x45
  429e28:	out    0xff,eax
  429e2a:	add    edx,DWORD PTR [eax]
  429e2c:	jmp    0x429e16
  429e2e:	cmp    ch,0x43
  429e31:	(bad)  
  429e32:	jmp    0x40c82684
  429e37:	je     0x429dc3
  429e39:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e3f:	inc    ebp
  429e40:	add    BYTE PTR [ebx-0x770375],al
  429e46:	add    ah,ch
  429e48:	add    edx,esp
  429e4a:	pop    edi
  429e4b:	pop    ebp
  429e4c:	push   ebp
  429e4d:	inc    ebx
  429e4e:	in     al,dx
  429e4f:	pop    ebp
  429e50:	in     al,dx
  429e51:	cmp    edx,DWORD PTR [edi-0x8]
  429e54:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e5b:	add    al,0x47
  429e5d:	push   ebp
  429e5e:	mov    esp,ebp
  429e60:	in     al,0x45
  429e62:	dec    ebp
  429e63:	push   esi
  429e64:	test   DWORD PTR [eax+0xff010f],esi
  429e6a:	add    BYTE PTR [eax+0xc018b],dh
  429e70:	leave  
  429e71:	inc    ebp
  429e72:	test   al,ch
  429e74:	add    dh,bh
  429e76:	add    bh,bh
  429e78:	dec    ebp
  429e79:	push   cs
  429e7a:	mov    DWORD PTR [ecx],eax
  429e7c:	hlt    
  429e7d:	push   es
  429e7e:	dec    ebp
  429e7f:	leave  
  429e80:	mov    DWORD PTR [eax],ecx
  429e82:	clc    
  429e83:	cmovge eax,ecx
  429e86:	mov    ecx,0x85c2f0
  429e8c:	clc    
  429e8d:	pop    DWORD PTR [ebp+0x1]
  429e90:	aas    
  429e91:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e98:	push   esi
  429e99:	add    BYTE PTR [ebp-0x4],al
  429e9c:	mov    DWORD PTR [eax],eax
  429e9e:	cld    
  429e9f:	inc    bp
  429ea1:	add    DWORD PTR [edx],edi
  429ea3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429eab:	mov    ebx,0xcd4f68
  429eb0:	mov    edi,DWORD PTR [ebx]
  429eb2:	or     al,0x75
  429eb4:	(bad)  
  429eb5:	xor    ecx,ebx
  429eb7:	enterw 0x4d01,0x87
  429ebc:	jmp    0x429ec2
  429ec1:	ret    
  429ec2:	inc    ebp
  429ec3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ec9:	add    dh,cl
  429ecb:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429ed3:	icebp  
  429ed4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eda:	inc    ebp
  429edb:	inc    edx
  429edc:	mov    ecx,DWORD PTR [edx]
  429ede:	or     al,0xf9
  429ee0:	(bad)  
  429ee1:	jne    0x429eb1
  429ee3:	mov    cl,0x0
  429ee6:	rol    BYTE PTR [esi+0x450134],1
  429eec:	add    eax,edi
  429eee:	cld    
  429eef:	ret    
  429ef0:	dec    ebp
  429ef1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ef7:	mov    edi,0xf82c8534
  429efc:	jmp    0x429f7b
  429efe:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429f04:	mov    dl,0x8b
  429f06:	sub    cl,BYTE PTR [eax]
  429f08:	mov    ecx,ecx
  429f0a:	in     al,dx
  429f0b:	test   cl,dh
  429f0d:	add    BYTE PTR [edx],al
  429f0f:	add    BYTE PTR [eax-0x377a97b3],al
  429f15:	cmovge esi,esp
  429f18:	add    eax,DWORD PTR [eax]
  429f1a:	cld    
  429f1b:	mov    eax,DWORD PTR [ecx]
  429f1d:	adc    BYTE PTR [ebp+0x4d],cl
  429f20:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f26:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f2c:	cmp    esp,ebx
  429f2e:	jne    0x429ecc
  429f30:	mov    eax,edi
  429f32:	adc    ah,ch
  429f34:	push   ebp
  429f35:	test   DWORD PTR [ebx],esi
  429f37:	clc    
  429f38:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f3e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f41:	dec    ebp
  429f42:	adc    bh,al
  429f44:	push   0x8b85ff10
  429f49:	clc    
  429f4a:	or     al,0x50
  429f4c:	(bad)  
  429f4d:	push   ecx
  429f4e:	retf   
  429f4f:	mov    ebx,0xff4d8dc8
  429f54:	mov    DWORD PTR [ebp+0x8],eax
  429f57:	xor    eax,DWORD PTR [ebp-0x75]
  429f5a:	cmp    ebp,DWORD PTR [ebx]
  429f5c:	lsl    ebx,WORD PTR [edi-0x8]
  429f60:	call   DWORD PTR [ebx-0x741bff75]
  429f66:	(bad)  
  429f67:	or     al,0x5b
  429f69:	dec    ebp
  429f6a:	or     BYTE PTR [ebx],dh
  429f6c:	inc    ebp
  429f6d:	xor    esi,DWORD PTR ds:0x708088d
  429f73:	in     eax,0x98
  429f75:	add    BYTE PTR [edx],dh
  429f77:	inc    ebp
  429f78:	pop    edi
  429f79:	xor    eax,edx
  429f7b:	test   DWORD PTR [eax],0x81108b8b
  429f81:	dec    ebp
  429f82:	sub    al,0x33
  429f84:	add    BYTE PTR [ebx],dh
  429f86:	push   esi
  429f87:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f8d:	mov    edi,eax
  429f8f:	or     BYTE PTR [ebp+0x45],al
  429f92:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f98:	cmp    cl,cl
  429f9a:	pushf  
  429f9b:	push   es
  429f9c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429fa3:	dec    ebp
  429fa4:	inc    ebp
  429fa5:	and    BYTE PTR [eax],0x50
  429fa8:	pushf  
  429fa9:	push   0x4de4d1c7
  429fae:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429fb4:	fsubr  st,st(1)
  429fb6:	xlat   BYTE PTR ds:[ebx]
  429fb7:	rol    bh,cl
  429fb9:	mov    edx,esp
  429fbb:	or     BYTE PTR [ebp+0x4588f84d],al
  429fc1:	mov    ecx,DWORD PTR [eax]
  429fc3:	or     BYTE PTR [eax],al
  429fc5:	push   ebp
  429fc6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fcc:	dec    ebp
  429fcd:	enter  0xceba,0x8
  429fd1:	retf   0x1807
  429fd4:	ret    0x984d
  429fd7:	mov    esi,DWORD PTR [edx]
  429fd9:	or     al,0x33
  429fdb:	into   
  429fdc:	add    edx,esi
  429fde:	add    ecx,edx
  429fe0:	bswap  eax
  429fe2:	ror    esi,0x98
  429fe5:	dec    ebp
  429fe6:	add    cl,ch
  429fe8:	mov    edi,edi
  429fea:	hlt    
  429feb:	inc    esi
  429fed:	inc    ebp
  429fee:	ret    0x4533
  429ff1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429ff7:	or     BYTE PTR [ebx],dh
  429ff9:	dec    ebp
  429ffa:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a000:	jne    0xff8c9fc7
  42a006:	inc    ebp
  42a007:	inc    ebp
  42a008:	mov    esi,DWORD PTR [ebx]
  42a00a:	clc    
  42a00b:	pop    esi
  42a00c:	ret    0xcaeb
  42a00f:	mov    eax,esi
  42a011:	call   0x5203f0e4
  42a016:	dec    ebp
  42a017:	add    eax,0xf8728b
  42a01c:	adc    eax,0xce0ccac9
  42a021:	push   ebp
  42a022:	ret    0xc6ec
  42a025:	in     al,dx
  42a026:	call   0x3342ed2f
  42a02b:	push   edi
  42a02c:	add    edi,eax
  42a02e:	xor    eax,eax
  42a030:	jmp    0x42a077
  42a032:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a038:	add    eax,edi
  42a03a:	shr    eax,cl
  42a03c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a042:	mov    edi,DWORD PTR [ecx]
  42a044:	in     al,dx
  42a045:	pushf  
  42a046:	ret    0x84c7
  42a049:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a04f:	inc    ebp
  42a050:	in     al,dx
  42a051:	cmp    BYTE PTR [ebp-0x64],al
  42a054:	mov    eax,edi
  42a056:	cld    
  42a057:	fmul   st(2),st
  42a059:	sbb    dl,al
  42a05b:	jmp    0x9c3b:0x374d45c1
  42a062:	jbe    0x42a02b
  42a064:	mov    esp,eax
  42a066:	clc    
  42a067:	add    BYTE PTR [ebp+0x0],cl
  42a06a:	mov    ecx,ecx
  42a06c:	lea    eax,[ebp-0x5]
  42a06f:	mov    edi,edi
  42a071:	call   0x51cdf0bb
  42a076:	hlt    
  42a077:	xor    eax,edx
  42a079:	mov    esi,0x987284
  42a07e:	xor    cl,dl
  42a080:	mov    esi,eax
  42a082:	hlt    
  42a083:	into   
  42a084:	inc    ebp
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	mov    ebp,ecx
  42a088:	cld    
  42a089:	add    dl,cl
  42a08b:	add    dl,al
  42a08d:	inc    ebp
  42a08e:	shr    DWORD PTR [ebx],0x4d
  42a091:	xor    edi,DWORD PTR [ebx]
  42a093:	mov    DWORD PTR [edi],ecx
  42a095:	clc    
  42a096:	dec    esi
  42a097:	inc    ebp
  42a098:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a09e:	ret    0xc6ca
  42a0a1:	mov    BYTE PTR [ebp-0x32],0x53
  42a0a5:	scas   eax,DWORD PTR es:[edi]
  42a0a6:	inc    ebp
  42a0a7:	jmp    0x42a0e0
  42a0a9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a0b0:	pop    ebx
  42a0b1:	xor    ecx,DWORD PTR [ebp+0x3]
  42a0b4:	mov    eax,DWORD PTR [ebx]
  42a0b6:	clc    
  42a0b7:	test   edx,ecx
  42a0b9:	mov    ecx,esi
  42a0bb:	cld    
  42a0bc:	call   0x8ab6e606
  42a0c1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0c7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0cd:	fdiv   QWORD PTR [ebx]
  42a0cf:	retf   0xce89
  42a0d2:	in     al,0xc1
  42a0d4:	inc    ebp
  42a0d5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0db:	into   
  42a0dc:	mov    dh,0xc1
  42a0df:	call   0x8c16e668
  42a0e4:	(bad)  
  42a0e5:	cld    
  42a0e6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0e9:	xor    eax,ecx
  42a0eb:	lea    eax,[ebp+0x8]
  42a0ee:	mov    esi,DWORD PTR [edx-0x4]
  42a0f1:	add    dl,al
  42a0f3:	inc    ebp
  42a0f4:	mov    esp,0x32d8988b
  42a0f9:	dec    ebp
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	cld    
  42a0fd:	xor    eax,edx
  42a0ff:	sub    ebp,DWORD PTR [eax-0x75]
  42a102:	int    0xec
  42a104:	sub    ecx,eax
  42a106:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a10c:	mov    esi,esp
  42a10e:	call   0x3416ee97
  42a113:	inc    DWORD PTR [ebx]
  42a115:	mov    edi,DWORD PTR [ebx]
  42a117:	cld    
  42a118:	jne    0x42a167
  42a11a:	mov    esi,DWORD PTR [ebx]
  42a11c:	aam    0x8d
  42a11e:	dec    ebp
  42a11f:	or     BYTE PTR [ebx],dh
  42a121:	jb     0x42a126
  42a123:	add    BYTE PTR [edi+0x45],bl
  42a126:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a12d:	xor    ebp,esp
  42a12f:	xor    eax,edi
  42a131:	sub    edi,esp
  42a133:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a139:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a140:	inc    ebp
  42a141:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a147:	clc    
  42a148:	mov    eax,edi
  42a14a:	nop
  42a14b:	fadd   QWORD PTR [eax]
  42a14d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a153:	jmp    0x42a0de
  42a155:	mov    eax,DWORD PTR [ecx]
  42a157:	fadd   DWORD PTR [eax]
  42a159:	inc    ebp
  42a15a:	or     DWORD PTR [ebx],esi
  42a15c:	dec    eax
  42a15d:	add    edx,DWORD PTR [ebx-0x2d]
  42a160:	dec    ebp
  42a161:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a167:	inc    ebp
  42a168:	push   eax
  42a169:	mov    dl,BYTE PTR [ecx-0xd]
  42a16c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a16f:	(bad)  
  42a171:	rol    BYTE PTR [eax],0xc1
  42a174:	ret    
  42a175:	inc    ebp
  42a176:	inc    ebp
  42a177:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a17d:	xor    eax,ebx
  42a17f:	add    eax,DWORD PTR [ebp+0x23]
  42a182:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a188:	cmp    edi,0xc
  42a18b:	dec    ebp
  42a18c:	inc    ebp
  42a18d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a193:	inc    ebp
  42a194:	mov    esi,DWORD PTR [ebx]
  42a196:	clc    
  42a197:	lea    eax,[ebp+0x45725407]
  42a19d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a1a1:	xor    edi,DWORD PTR [eax]
  42a1a3:	mov    ecx,0xff8b8d4d
  42a1a8:	push   esp
  42a1a9:	enter  0x4df7,0x23
  42a1ad:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a1b3:	mov    eax,DWORD PTR [ebx]
  42a1b5:	loopne 0x42a1a2
  42a1b7:	ret    0xc68b
  42a1ba:	push   esp
  42a1bb:	enter  0x9745,0x8b
  42a1bf:	inc    ebp
  42a1c0:	cld    
  42a1c1:	mov    eax,edi
  42a1c3:	clc    
  42a1c4:	ret    
  42a1c5:	ret    0xc645
  42a1c8:	mov    esi,DWORD PTR [ebx]
  42a1ca:	cld    
  42a1cb:	pop    esi
  42a1cc:	mov    ebx,0x83458bc3
  42a1d2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1d6:	dec    ebp
  42a1d7:	cmp    BYTE PTR [ebx],dh
  42a1d9:	pushf  
  42a1da:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1e0:	fcom   DWORD PTR [ebp+0x45]
  42a1e3:	mov    edi,DWORD PTR [edx]
  42a1e5:	adc    al,0x9c
  42a1e7:	inc    ebp
  42a1e8:	(bad)  
  42a1e9:	mov    ebx,eax
  42a1eb:	adc    al,0x85
  42a1ed:	cmp    al,0x1
  42a1f0:	inc    ebp
  42a1f1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1f8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1fe:	xor    eax,DWORD PTR [ebx]
  42a200:	add    edi,DWORD PTR [ecx+ecx*4]
  42a203:	mov    esp,esi
  42a205:	clc    
  42a206:	inc    ebp
  42a207:	inc    ebp
  42a208:	add    edx,DWORD PTR [esi+0xc]
  42a20b:	mov    edi,0x7ff0845
  42a210:	in     al,dx
  42a211:	(bad)  
  42a212:	jne    0x42a1ac
  42a214:	mov    esi,DWORD PTR [edx]
  42a216:	clc    
  42a217:	add    ebp,DWORD PTR [edx]
  42a219:	mov    edi,edi
  42a21b:	in     al,dx
  42a21c:	mov    DWORD PTR [ebp-0x10],eax
  42a21f:	xor    eax,DWORD PTR [ebp+0x3]
  42a222:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a228:	fmul   DWORD PTR [ebx-0x173caf39]
  42a22e:	lea    ecx,[ecx+0x45e8d4bc]
  42a234:	clc    
  42a235:	mov    edi,edi
  42a237:	cmp    BYTE PTR [ebp+0x4d],al
  42a23a:	test   DWORD PTR [eax+0x74],ecx
  42a23d:	inc    ecx
  42a23e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a244:	ret    
  42a245:	inc    eax
  42a246:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a24c:	push   eax
  42a24d:	dec    eax
  42a24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a24f:	sar    bh,1
  42a251:	enter  0x458b,0xec
  42a255:	mov    eax,DWORD PTR [ebp+0x38]
  42a258:	mov    eax,ecx
  42a25a:	fadd   DWORD PTR [ebx]
  42a25c:	dec    ebp
  42a25d:	inc    eax
  42a25e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a264:	inc    ebp
  42a265:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a26b:	fadd   QWORD PTR [ebx]
  42a26d:	inc    ebp
  42a26e:	or     al,0x33
  42a270:	dec    ebp
  42a271:	add    edi,DWORD PTR [ebx]
  42a273:	mov    DWORD PTR [edx-0x28],esi
  42a276:	mov    eax,DWORD PTR [ebp-0x10]
  42a279:	mov    eax,DWORD PTR [eax+0x10]
  42a27c:	mov    eax,edi
  42a27e:	lock ret 
  42a280:	inc    ecx
  42a281:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a287:	fsubr  st,st(5)
  42a289:	test   DWORD PTR [eax],eax
  42a28b:	clc    
  42a28c:	push   0x45
  42a28e:	(bad)  
  42a28f:	cmp    ebp,esp
  42a291:	pushf  
  42a292:	inc    ebp
  42a293:	(bad)  
  42a294:	push   eax
  42a295:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a299:	clc    
  42a29a:	mov    eax,0xf8008584
  42a29f:	mov    eax,DWORD PTR [ebp-0x4]
  42a2a2:	mov    edi,0x4585c3cc
  42a2a8:	clc    
  42a2a9:	mov    eax,DWORD PTR [ebp+0x14]
  42a2ac:	cmp    al,BYTE PTR [ebp-0x64]
  42a2af:	mov    edi,eax
  42a2b1:	in     al,dx
  42a2b2:	les    esi,FWORD PTR [ebp-0x7b]
  42a2b5:	mov    edi,eax
  42a2b7:	or     al,0x4d
  42a2b9:	dec    ebp
  42a2ba:	mov    eax,ebp
  42a2bc:	in     al,0xf2
  42a2be:	dec    ebp
  42a2bf:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2c5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2cb:	inc    ebp
  42a2cc:	mov    DWORD PTR [ebx],esi
  42a2ce:	fadd   QWORD PTR [ebx]
  42a2d0:	dec    ebp
  42a2d1:	push   eax
  42a2d2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2d5:	push   eax
  42a2d6:	mov    DWORD PTR [eax],ebx
  42a2d8:	fdivr  st,st(7)
  42a2da:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2e1:	dec    esi
  42a2e2:	clc    
  42a2e3:	inc    ebp
  42a2e4:	test   BYTE PTR [ebx],dh
  42a2e6:	add    DWORD PTR [ebx],eax
  42a2e8:	add    BYTE PTR [eax+0x4d],dl
  42a2eb:	jne    0x42a320
  42a2ed:	lea    ecx,[ebx-0x7617fc44]
  42a2f3:	div    ah
  42a2f5:	inc    DWORD PTR [ebp+0x45]
  42a2f8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2fe:	jb     0x42a28b
  42a300:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a307:	mov    ecx,DWORD PTR [ebp-0x10]
  42a30a:	xor    ecx,DWORD PTR [ebp+0x3]
  42a30d:	mov    edi,DWORD PTR [ebx]
  42a30f:	adc    BYTE PTR [ebp+0x41],dh
  42a312:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a318:	ret    
  42a319:	push   ss
  42a31a:	push   0x45
  42a31c:	lea    ecx,[ebx+0x4de80cb0]
  42a322:	sti    
  42a323:	add    edi,edi
  42a325:	or     BYTE PTR [ebp+0x4d],al
  42a328:	mov    ebp,DWORD PTR [ebx]
  42a32a:	xor    ebp,ecx
  42a32c:	mov    al,BYTE PTR [edx]
  42a32e:	add    eax,0xc7200
  42a333:	jne    0x42a382
  42a335:	lea    esi,[ebx]
  42a337:	mov    al,0xf
  42a339:	call   0xe99fe
  42a33e:	sar    DWORD PTR [eax],0x84
  42a341:	pushf  
  42a342:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a348:	mov    edi,DWORD PTR [ecx]
  42a34a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a351:	test   DWORD PTR [eax],eax
  42a353:	clc    
  42a354:	dec    ebp
  42a355:	inc    ebp
  42a356:	xor    edi,DWORD PTR [ebx]
  42a358:	setl   al
  42a35b:	(bad)  
  42a35c:	retf   
  42a35d:	rol    cl,1
  42a35f:	dec    ebp
  42a360:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a366:	inc    ebp
  42a367:	lea    ecx,[ebx-0x75b2cc38]
  42a36d:	lea    eax,ds:0x4d72c4
  42a373:	mov    ecx,DWORD PTR [ebp-0x4]
  42a376:	xor    ecx,edi
  42a378:	bswap  ebx
  42a37a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a37e:	rol    DWORD PTR [ecx],0x84
  42a381:	add    BYTE PTR [ecx],al
  42a383:	cmp    al,BYTE PTR [eax]
  42a385:	pushf  
  42a386:	inc    ebp
  42a387:	jnp    0x8a42d78a
  42a38d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a393:	lock dec ebp
  42a395:	retf   
  42a396:	xor    ecx,DWORD PTR [ebp+0xf]
  42a399:	mov    eax,eax
  42a39b:	fmul   st,st(3)
  42a39d:	test   ecx,0x1988484
  42a3a3:	xor    al,BYTE PTR [eax]
  42a3a5:	mov    DWORD PTR [ebp-0x28],eax
  42a3a8:	mov    eax,DWORD PTR [ebp+0x33]
  42a3ab:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a3b1:	ret    
  42a3b2:	add    al,cl
  42a3b4:	dec    ebp
  42a3b5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a3bb:	add    ecx,DWORD PTR ds:0xc7250
  42a3c1:	inc    ebp
  42a3c2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3c6:	mov    edi,edi
  42a3c8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ce:	jb     0x42a397
  42a3d0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3d7:	mov    esi,DWORD PTR [ebx]
  42a3d9:	cld    
  42a3da:	mov    cl,bh
  42a3dc:	or     eax,0x372b6
  42a3e1:	cmp    ecx,eax
  42a3e3:	jne    0x42a460
  42a3e9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3ec:	mov    eax,DWORD PTR [eax]
  42a3ee:	xor    eax,edi
  42a3f0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi-0x3f],dl
  42a407:	add    BYTE PTR [ebp-0x75],cl
  42a40a:	mov    esi,eax
  42a40c:	xor    eax,DWORD PTR [eax]
  42a40e:	mov    al,bh
  42a410:	or     eax,0x487284
  42a415:	xor    al,cl
  42a417:	mov    ecx,DWORD PTR [ebp-0x4]
  42a41a:	mov    ecx,edi
  42a41c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a422:	jb     0x42a433
  42a424:	add    BYTE PTR [edi],dh
  42a426:	enter  0x8500,0x8b
  42a42a:	add    ah,bl
  42a42c:	add    BYTE PTR [eax],al
  42a42e:	inc    ebp
  42a42f:	(bad)  
  42a430:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a437:	mov    esi,DWORD PTR [edx-0x4]
  42a43a:	add    bh,cl
  42a43c:	dec    ebp
  42a43d:	mov    dh,0x8b
  42a43f:	add    esi,DWORD PTR [ebx]
  42a441:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a447:	add    BYTE PTR [eax],al
  42a449:	mov    eax,ecx
  42a44b:	loopne 0x42a49a
  42a44d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a453:	dec    eax
  42a454:	or     eax,0x8b7232
  42a459:	in     al,0xc1
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a465:	xor    dh,BYTE PTR [edx-0x75]
  42a468:	add    al,dh
  42a46a:	enter  0x4f09,0xcf
  42a46e:	inc    ebp
  42a46f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a475:	or     al,BYTE PTR ds:0xe4728b
  42a47b:	or     DWORD PTR [ebp-0x31],ecx
  42a47e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a485:	cmp    dh,BYTE PTR [edx+0xf]
  42a488:	add    bl,dl
  42a48a:	rol    DWORD PTR [eax],0x4d
  42a48d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a493:	(bad)  
  42a494:	or     eax,0x487284
  42a499:	xor    al,cl
  42a49b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a49e:	mov    ecx,DWORD PTR [ecx]
  42a4a0:	xor    ecx,edi
  42a4a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a4a9:	xor    cl,al
  42a4ab:	mov    ecx,DWORD PTR [edi]
  42a4ad:	fadd   QWORD PTR [ebp+0x9]
  42a4b0:	call   0xffcf9f84
  42a4b5:	dec    eax
  42a4b6:	dec    ebp
  42a4b7:	xor    bh,BYTE PTR [ebx]
  42a4b9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a4bd:	loopne 0x42a4bb
  42a4bf:	or     edi,eax
  42a4c1:	iret   
  42a4c2:	ret    
  42a4c3:	mov    WORD PTR [ebp+0x4c],es
  42a4c6:	mov    esi,DWORD PTR [edx]
  42a4c8:	call   0x84526c07
  42a4cd:	(bad)  
  42a4ce:	cwde   
  42a4cf:	add    BYTE PTR [edx],dh
  42a4d1:	mov    esi,DWORD PTR [ebx]
  42a4d3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4d9:	test   BYTE PTR [ebx],dh
  42a4db:	dec    eax
  42a4dc:	add    esi,DWORD PTR [edx]
  42a4de:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4e4:	dec    edi
  42a4e6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4ed:	xor    al,BYTE PTR [ebx]
  42a4ef:	mov    edi,DWORD PTR [ebx]
  42a4f1:	in     al,0x75
  42a4f3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4f9:	dec    eax
  42a4fa:	xor    esi,DWORD PTR [edx]
  42a4fc:	lea    ecx,[edx]
  42a4fe:	or     BYTE PTR [ebx+0x900f072],cl
  42a504:	ja     0x42a4d5
  42a506:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a50d:	cmp    ch,al
  42a50f:	jne    0x42a504
  42a511:	mov    edi,edi
  42a513:	fadd   QWORD PTR [ebp+0x0]
  42a516:	mov    eax,edi
  42a518:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a51f:	mov    edx,DWORD PTR [ebx]
  42a521:	in     al,0x45
  42a523:	or     DWORD PTR [ebx],esi
  42a525:	iret   
  42a526:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a52d:	xor    dl,BYTE PTR [eax-0x75]
  42a530:	sbb    al,ah
  42a532:	dec    DWORD PTR [ecx]
  42a534:	mov    ecx,edi
  42a536:	in     al,dx
  42a537:	mov    eax,es
  42a539:	dec    eax
  42a53a:	mov    DWORD PTR [edx],esi
  42a53c:	fmul   QWORD PTR [edx]
  42a53e:	jne    0x42a4cb
  42a540:	(bad)  
  42a541:	(bad)  
  42a543:	or     DWORD PTR [ebp-0x31],eax
  42a546:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a54d:	cmp    bh,bh
  42a54f:	jne    0x42a596
  42a551:	lea    ecx,[ebx-0x38372750]
  42a557:	inc    ebx
  42a559:	mov    eax,ecx
  42a55b:	mov    eax,0xa00c111
  42a560:	jne    0x42a5a7
  42a562:	mov    esi,DWORD PTR [ebx]
  42a564:	test   al,0x3
  42a566:	inc    ebp
  42a567:	mov    DWORD PTR [eax-0xc],edx
  42a56a:	fiadd  WORD PTR [ebp-0x1]
  42a56d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a573:	jb     0x42a576
  42a575:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a57b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a581:	retf   
  42a582:	mov    edx,ecx
  42a584:	adc    al,0x84
  42a586:	(bad)  
  42a587:	std    
  42a588:	ret    
  42a589:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a58f:	hlt    
  42a590:	rol    edi,0x82
  42a593:	ret    
  42a594:	cld    
  42a595:	enter  0x11ff,0x45
  42a599:	inc    ebp
  42a59a:	pop    edi
  42a59b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a59e:	ret    0xc7
  42a5a1:	test   BYTE PTR [ebx+0x45325198],cl
  42a5a7:	jmp    0x42a534
  42a5a9:	push   0x8
  42a5ab:	call   DWORD PTR [esi]
  42a5ad:	in     al,dx
  42a5ae:	add    BYTE PTR [ebp+0x1],0x50
  42a5b2:	add    bl,ah
  42a5b4:	add    bh,bh
  42a5b6:	icebp  
  42a5b7:	mov    ecx,DWORD PTR [eax]
  42a5b9:	cld    
  42a5ba:	pop    es
  42a5bb:	dec    ebp
  42a5bc:	shl    DWORD PTR [ebx],0x72
  42a5bf:	add    eax,DWORD PTR [eax]
  42a5c1:	cmp    edx,ecx
  42a5c3:	je     0x42a5d5
  42a5c5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5c8:	inc    edi
  42a5ca:	or     al,0xc3
  42a5cc:	jmp    FWORD PTR [edx-0x18]
  42a5cf:	(bad)  
  42a5d0:	sti    
  42a5d1:	cwde   
  42a5d2:	(bad)  
  42a5d3:	call   0xffa09ede
  42a5d8:	or     al,0x45
  42a5da:	push   ebp
  42a5db:	sub    esp,0x18
  42a5de:	push   ebx
  42a5df:	inc    ebp
  42a5e0:	mov    edi,edi
  42a5e2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5e9:	test   al,0x50
  42a5eb:	inc    ebp
  42a5ec:	push   ecx
  42a5ed:	push   eax
  42a5ee:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5f4:	add    ah,bh
  42a5f6:	(bad)  
  42a5f7:	dec    ebp
  42a5f8:	add    DWORD PTR [ebx],esi
  42a5fa:	inc    ebp
  42a5fb:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a601:	push   0xffffff8b
  42a603:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a609:	add    eax,DWORD PTR [ecx]
  42a60b:	or     BYTE PTR [eax],al
  42a60d:	call   0xff849e12
  42a612:	mov    eax,DWORD PTR [ebp+0x14]
  42a615:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a61b:	inc    ebp
  42a61c:	dec    ecx
  42a61d:	add    ebp,DWORD PTR [edx+0x14]
  42a620:	push   0x8b3045
  42a625:	call   0x33acf39a
  42a62a:	inc    DWORD PTR [ebx]
  42a62c:	mov    DWORD PTR [edi],ecx
  42a62e:	mov    eax,ecx
  42a630:	or     BYTE PTR [ebp-0x3d],cl
  42a633:	cmp    eax,edi
  42a635:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a63a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a640:	adc    al,0xc9
  42a642:	inc    ebp
  42a643:	adc    BYTE PTR [eax+0x55],dl
  42a646:	jne    0x42a634
  42a648:	call   0xff53a5d8
  42a64d:	dec    ebp
  42a64e:	inc    ebp
  42a64f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a655:	add    BYTE PTR [ebx],bh
  42a657:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a65b:	push   eax
  42a65c:	or     al,0x51
  42a65e:	dec    ebp
  42a65f:	xor    DWORD PTR [ebx],0xf320398
  42a665:	cmp    eax,DWORD PTR [ebp+0x74]
  42a668:	mov    edi,edi
  42a66a:	pop    edi
  42a66b:	adc    BYTE PTR [ebx+0x75],bl
  42a66e:	ret    0x50
  42a671:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a675:	(bad)  
  42a676:	clc    
  42a677:	mov    esp,ebp
  42a679:	pop    ecx
  42a67a:	mov    ecx,0xf80085c2
  42a67f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a682:	push   esi
  42a683:	push   esi
  42a684:	(bad)  
  42a685:	lock add DWORD PTR [ebp+0x44],eax
  42a689:	mov    edx,DWORD PTR [eax]
  42a68b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a68f:	or     BYTE PTR [eax+0x7],dl
  42a692:	push   ecx
  42a693:	ret    
  42a694:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a69a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a6a0:	or     al,0x80
  42a6a2:	jge    0x42a6a5
  42a6a4:	mov    DWORD PTR [eax],eax
  42a6a6:	and    al,0x8
  42a6a8:	cmp    DWORD PTR [ebp+0x10],eax
  42a6ab:	mov    edx,DWORD PTR [esi]
  42a6ad:	xchg   esp,eax
  42a6ae:	dec    esp
  42a6af:	add    BYTE PTR [eax],dl
  42a6b1:	mov    ecx,edx
  42a6b3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a6b7:	dec    ebp
  42a6b8:	into   
  42a6b9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a6bf:	mov    edx,DWORD PTR [eax+0x14]
  42a6c2:	das    
  42a6c3:	add    al,0x45
  42a6c5:	add    BYTE PTR [ebp+0x0],dh
  42a6c8:	mov    edi,edi
  42a6ca:	and    al,0x50
  42a6cc:	mov    eax,DWORD PTR [eax]
  42a6ce:	and    al,0xd1
  42a6d0:	xor    eax,DWORD PTR [esi]
  42a6d2:	lea    eax,[ebp+0x8]
  42a6d5:	xor    esi,DWORD PTR [edx+0x3]
  42a6d8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6de:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6e4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ee:	cmp    edi,edi
  42a6f0:	pushf  
  42a6f1:	mov    edi,edi
  42a6f3:	or     BYTE PTR [esi+ecx*1],cl
  42a6f6:	jne    0x42a6bb
  42a6f8:	call   0xba6c4
  42a6fd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a701:	mov    ebx,DWORD PTR [eax]
  42a703:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a707:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a70f:	pop    esi
  42a710:	dec    ecx
  42a712:	and    al,0x10
  42a714:	call   DWORD PTR [ebp+0x24]
  42a717:	in     al,dx
  42a718:	call   0xffc6a601
  42a71d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a721:	pushf  
  42a722:	pop    esi
  42a723:	mov    ebp,esp
  42a725:	and    al,0xc2
  42a727:	push   edi
  42a728:	add    BYTE PTR [ecx+0x3a],al
  42a72b:	mov    DWORD PTR [ebp+0x24],esi
  42a72e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a734:	dec    DWORD PTR [eax]
  42a736:	and    al,0x7
  42a738:	(bad)  
  42a739:	cli    
  42a73a:	and    al,0x98
  42a73c:	or     BYTE PTR [edx],dh
  42a73e:	sbb    BYTE PTR [ebx],al
  42a740:	adc    al,0x89
  42a742:	jmp    DWORD PTR [esp]
  42a745:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a74b:	adc    al,0x8
  42a74d:	dec    ebp
  42a74e:	adc    BYTE PTR [ebp-0x7c],dh
  42a751:	mov    esi,DWORD PTR [edx]
  42a753:	and    al,0x24
  42a755:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a75b:	add    edi,eax
  42a75d:	pcmpeqb mm1,mm2
  42a760:	jmp    0x42a7ae
  42a762:	dec    DWORD PTR [eax]
  42a764:	je     0x42a751
  42a766:	mov    edi,DWORD PTR [ecx]
  42a768:	pop    ebp
  42a769:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a76d:	cwde   
  42a76e:	mov    DWORD PTR [eax-0x8],ebp
  42a771:	jge    0x42a7db
  42a773:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a779:	jl     0x42a7c5
  42a77b:	adc    BYTE PTR [eax],al
  42a77d:	pop    esp
  42a77e:	cmp    al,0x10
  42a780:	add    BYTE PTR [ecx+0x41],dl
  42a783:	adc    BYTE PTR [eax],al
  42a785:	test   al,0x21
  42a787:	adc    BYTE PTR [eax],al
  42a789:	cs jbe 0x42a79c
  42a78c:	add    BYTE PTR [edx+0xe],ch
  42a78f:	adc    BYTE PTR [eax],al
  42a791:	clc    
  42a792:	pusha  
  42a793:	adc    BYTE PTR [eax],al
  42a795:	jp     0x42a7d8
  42a797:	adc    BYTE PTR [eax],al
  42a799:	mov    ds:0x88001059,eax
  42a79e:	pop    ebp
  42a79f:	adc    BYTE PTR [eax],al
  42a7a1:	inc    ax
  42a7a3:	adc    BYTE PTR [eax],al
  42a7a5:	jns    0x42a74e
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x7affbd59],al
  42a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b3:	inc    edx
  42a7b4:	add    BYTE PTR [ecx-0x72ffbd59],cl
  42a7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7bb:	inc    edx
  42a7bc:	add    BYTE PTR [ecx-0x6affbd59],dl
  42a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c3:	inc    edx
  42a7c4:	add    BYTE PTR [ecx-0x62ffbd59],bl
  42a7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cb:	inc    edx
  42a7cc:	add    BYTE PTR [ecx-0x2effbd59],ah
  42a7d2:	cmp    BYTE PTR [eax],dl
  42a7d4:	add    BYTE PTR [edi],dl
  42a7d6:	xor    BYTE PTR [eax],dl
  42a7d8:	add    BYTE PTR [eax],al
  42a7da:	pop    ds
  42a7db:	adc    BYTE PTR [eax],al
  42a7dd:	(bad)  
  42a7de:	adc    BYTE PTR ds:[eax],al
  42a7e1:	in     eax,0x19
  42a7e3:	adc    BYTE PTR [eax],al
  42a7e5:	bound  ebx,QWORD PTR [ecx]
  42a7e7:	adc    BYTE PTR [eax],al
  42a7e9:	shl    BYTE PTR [edi+0x10],1
  42a7ec:	add    BYTE PTR [edi-0x2effefa9],al
  42a7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f3:	inc    edx
  42a7f4:	add    ch,dl
  42a7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f7:	inc    edx
  42a7f8:	add    cl,bl
  42a7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7fb:	inc    edx
  42a7fc:	add    ch,bl
  42a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ff:	inc    edx
  42a800:	add    cl,ah
  42a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a803:	inc    edx
  42a804:	add    ch,ah
  42a806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a807:	inc    edx
  42a808:	add    cl,ch
  42a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80b:	inc    edx
  42a80c:	add    ch,ch
  42a80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80f:	inc    edx
  42a810:	add    dl,ah
  42a812:	adc    BYTE PTR ds:[eax],al
  42a815:	ds pop ebp
  42a817:	adc    BYTE PTR [eax],al
  42a819:	add    BYTE PTR [esi+0x10],ah
  42a81c:	add    al,ch
  42a81e:	pop    eax
  42a81f:	adc    BYTE PTR [eax],al
  42a821:	cdq    
  42a822:	outs   dx,BYTE PTR ds:[esi]
  42a823:	adc    BYTE PTR [eax],al
  42a825:	ja     0x42a887
  42a827:	adc    BYTE PTR [eax],al
  42a829:	jne    0x42a862
  42a82b:	adc    BYTE PTR [eax],al
  42a82d:	arpl   WORD PTR [eax+edx*1],bx
  42a830:	add    BYTE PTR [ecx],dl
  42a832:	test   al,0x42
  42a834:	add    BYTE PTR ds:0x190042a8,dl
  42a83a:	test   al,0x42
  42a83c:	add    BYTE PTR ds:0x210042a8,bl
  42a842:	test   al,0x42
  42a844:	add    BYTE PTR ds:0x290042a8,ah
  42a84a:	test   al,0x42
  42a84c:	add    BYTE PTR ds:0x5c0042a8,ch
  42a852:	adc    DWORD PTR [eax],edx
  42a854:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a85b:	adc    BYTE PTR [eax],al
  42a85d:	and    al,0x30
  42a85f:	adc    BYTE PTR [eax],al
  42a861:	ret    
  42a862:	pop    edi
  42a863:	adc    BYTE PTR [eax],al
  42a865:	loopne 0x42a8cd
  42a867:	adc    BYTE PTR [eax],al
  42a869:	add    eax,0xd400105b
  42a86e:	aas    
  42a86f:	adc    BYTE PTR [eax],al
  42a871:	push   ecx
  42a872:	test   al,0x42
  42a874:	add    BYTE PTR [ebp-0x58],dl
  42a877:	inc    edx
  42a878:	add    BYTE PTR [ecx-0x58],bl
  42a87b:	inc    edx
  42a87c:	add    BYTE PTR [ebp-0x58],bl
  42a87f:	inc    edx
  42a880:	add    BYTE PTR [ecx-0x58],ah
  42a883:	inc    edx
  42a884:	add    BYTE PTR [ebp-0x58],ah
  42a887:	inc    edx
  42a888:	add    BYTE PTR [ecx-0x58],ch
  42a88b:	inc    edx
  42a88c:	add    BYTE PTR [ebp-0x58],ch
  42a88f:	inc    edx
  42a890:	add    dh,dl
  42a892:	sbb    eax,0x10f00010
  42a897:	adc    BYTE PTR [eax],al
  42a899:	inc    ecx
  42a89a:	bound  edx,QWORD PTR [eax]
  42a89c:	add    BYTE PTR [ebx+eax*1],ah
  42a89f:	adc    BYTE PTR [eax],al
  42a8a1:	jecxz  0x42a906
  42a8a3:	adc    BYTE PTR [eax],al
  42a8a5:	pushf  
  42a8a6:	xor    DWORD PTR [eax],edx
  42a8a8:	add    BYTE PTR [ecx],al
  42a8aa:	or     dl,BYTE PTR [eax]
  42a8ac:	add    dh,dl
  42a8ae:	inc    edi
  42a8af:	adc    BYTE PTR [eax],al
  42a8b1:	xchg   ecx,eax
  42a8b2:	test   al,0x42
  42a8b4:	add    BYTE PTR [ebp-0x66ffbd58],dl
  42a8ba:	test   al,0x42
  42a8bc:	add    BYTE PTR [ebp-0x5effbd58],bl
  42a8c2:	test   al,0x42
  42a8c4:	add    BYTE PTR [ebp-0x56ffbd58],ah
  42a8ca:	test   al,0x42
  42a8cc:	add    BYTE PTR [ebp+0x430042a8],ch
  42a8d2:	xor    dh,BYTE PTR [edx]
  42a8d4:	xor    eax,0x5a52345f
  42a8d9:	push   esp
  42a8da:	xor    BYTE PTR [esi],dh
  42a8dc:	add    BYTE PTR [ecx+0x36],cl
  42a8df:	push   eax
  42a8e0:	pop    edi
  42a8e1:	ss inc ebx
  42a8e3:	ss pop edx
  42a8e5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8e8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8ec:	pop    edi
  42a8ed:	dec    esi
  42a8ee:	dec    esp
  42a8ef:	dec    eax
  42a8f0:	xor    esi,DWORD PTR [edx]
  42a8f2:	pop    edi
  42a8f3:	xor    al,0x4b
  42a8f5:	add    BYTE PTR [eax+0x49],cl
  42a8f8:	push   ebp
  42a8f9:	xor    al,0x5f
  42a8fb:	dec    esp
  42a8fc:	inc    edx
  42a8fd:	dec    ecx
  42a8fe:	cmp    DWORD PTR [edi+ebx*2],esi
  42a901:	pop    ecx
  42a902:	inc    edi
  42a903:	add    BYTE PTR [eax+0x50],bl
  42a906:	dec    eax
  42a907:	pop    edi
  42a908:	push   ebp
  42a909:	push   ecx
  42a90a:	inc    edi
  42a90b:	xor    cl,BYTE PTR [edx+0x38]
  42a90e:	push   esi
  42a90f:	add    BYTE PTR [ebx+0x4a],al
  42a912:	push   edx
  42a913:	pop    edi
  42a914:	dec    edi
  42a915:	dec    eax
  42a916:	dec    edi
  42a917:	dec    edi
  42a918:	dec    edx
  42a919:	add    BYTE PTR [ecx+0x52],al
  42a91c:	cmp    DWORD PTR [edi+0x56],ebx
  42a91f:	aaa    
  42a920:	dec    esp
  42a921:	cmp    DWORD PTR [ebx+0x5f],eax
  42a924:	push   edx
  42a925:	inc    esp
  42a926:	add    BYTE PTR [ecx+0x37],bl
  42a929:	inc    esp
  42a92a:	pop    edi
  42a92b:	dec    ecx
  42a92c:	xor    esi,DWORD PTR [edi]
  42a92e:	xor    DWORD PTR [edi+0x49],ebx
  42a931:	push   esp
  42a932:	xor    eax,DWORD PTR [eax]
  42a934:	push   edx
  42a935:	xor    BYTE PTR [eax+0x5f],bl
  42a938:	dec    eax
  42a939:	push   edi
  42a93a:	inc    esi
  42a93b:	xor    DWORD PTR [edi+0x5f],edx
  42a93e:	cmp    BYTE PTR [ebx+0x37],dl
  42a941:	add    BYTE PTR [esi+0x42],dl
  42a944:	dec    ecx
  42a945:	xor    ebx,DWORD PTR [edi+0x45]
  42a948:	xor    BYTE PTR [ebp+0x5f],cl
  42a94b:	xor    al,0x34
  42a94d:	xor    BYTE PTR [edx+0x5f],cl
  42a950:	inc    edi
  42a951:	add    BYTE PTR [edx+0x57],dl
  42a954:	xor    ebx,DWORD PTR [edi+0x31]
  42a957:	dec    edx
  42a958:	push   edi
  42a959:	xor    eax,0x4d435f
  42a95e:	dec    ecx
  42a95f:	xor    eax,0x36365f39
  42a964:	dec    eax
  42a965:	xor    BYTE PTR [eax],al
  42a967:	dec    edi
  42a968:	inc    ebx
  42a969:	push   edi
  42a96a:	pop    edi
  42a96b:	inc    edi
  42a96c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a971:	add    BYTE PTR [edx+0x58],al
  42a974:	inc    edi
  42a975:	ss pop edi
  42a977:	push   esi
  42a978:	inc    ebx
  42a979:	dec    esi
  42a97a:	inc    esp
  42a97b:	add    BYTE PTR [edi+0x4d],cl
  42a97e:	inc    edi
  42a97f:	xor    ebx,DWORD PTR [edi+0x34]
  42a982:	dec    esi
  42a983:	pop    edx
  42a984:	cmp    BYTE PTR [edi+0x58],bl
  42a987:	cmp    BYTE PTR [eax],al
  42a989:	push   edx
  42a98a:	pop    eax
  42a98b:	push   ecx
  42a98c:	pop    edi
  42a98d:	dec    esp
  42a98e:	push   edx
  42a98f:	dec    ecx
  42a990:	dec    edi
  42a991:	inc    esp
  42a992:	pop    edi
  42a993:	dec    edi
  42a994:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a998:	push   eax
  42a999:	inc    ebp
  42a99a:	pop    edi
  42a99b:	xor    eax,0x565f3945
  42a9a0:	add    BYTE PTR [edi+0x4e],al
  42a9a3:	push   esi
  42a9a4:	pop    edi
  42a9a5:	inc    edi
  42a9a6:	push   esp
  42a9a7:	dec    eax
  42a9a8:	xor    dh,BYTE PTR [ecx]
  42a9aa:	pop    edi
  42a9ab:	dec    edi
  42a9ac:	xor    eax,DWORD PTR ss:[eax]
  42a9af:	inc    esp
  42a9b0:	inc    ebp
  42a9b1:	dec    ecx
  42a9b2:	pop    edi
  42a9b3:	push   edx
  42a9b4:	dec    eax
  42a9b5:	xor    al,0x48
  42a9b7:	dec    ecx
  42a9b8:	ss pop edi
  42a9ba:	aaa    
  42a9bb:	aaa    
  42a9bc:	dec    ecx
  42a9bd:	dec    ebp
  42a9be:	add    BYTE PTR [eax+0x54],cl
  42a9c1:	ss pop edi
  42a9c3:	inc    esi
  42a9c4:	inc    edx
  42a9c5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9c8:	dec    esi
  42a9c9:	ss dec edx
  42a9cb:	pop    edi
  42a9cc:	dec    ecx
  42a9cd:	dec    esp
  42a9ce:	inc    edi
  42a9cf:	inc    esp
  42a9d0:	dec    eax
  42a9d1:	xor    BYTE PTR [eax],bh
  42a9d3:	xor    eax,0x4c344f00
  42a9d8:	xor    esi,DWORD PTR [edi]
  42a9da:	xor    BYTE PTR [edi+0x44],bl
  42a9dd:	inc    edi
  42a9de:	dec    ebx
  42a9df:	xor    al,BYTE PTR [ecx+0x43]
  42a9e2:	add    BYTE PTR [edi+0x32],cl
  42a9e5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9e8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9eb:	pop    edx
  42a9ec:	add    BYTE PTR [eax+0x4c],bl
  42a9ef:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9f2:	inc    ecx
  42a9f3:	dec    edx
  42a9f4:	inc    esi
  42a9f5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9f8:	pop    eax
  42a9f9:	inc    edi
  42a9fa:	inc    edx
  42a9fb:	add    BYTE PTR [eax+0x33],dl
  42a9fe:	dec    esi
  42a9ff:	pop    edi
  42aa00:	dec    eax
  42aa01:	xor    eax,0x485f53
  42aa06:	dec    ebp
  42aa07:	xor    BYTE PTR [edx+0x5f],al
  42aa0a:	dec    edx
  42aa0b:	pop    eax
  42aa0c:	push   esp
  42aa0d:	dec    ecx
  42aa0e:	dec    esp
  42aa0f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42aa13:	xor    esi,DWORD PTR [eax]
  42aa15:	pop    edi
  42aa16:	inc    ecx
  42aa17:	pop    edx
  42aa18:	push   ecx
  42aa19:	pop    edx
  42aa1a:	cmp    DWORD PTR [esi],esi
  42aa1c:	pop    edi
  42aa1d:	dec    eax
  42aa1e:	dec    esp
  42aa1f:	pop    edx
  42aa20:	add    BYTE PTR [ecx+0x57],dl
  42aa23:	pop    ecx
  42aa24:	pop    edi
  42aa25:	push   esi
  42aa26:	xor    al,0x44
  42aa28:	xor    DWORD PTR [eax],edi
  42aa2a:	xor    bl,BYTE PTR [edi+0x39]
  42aa2d:	push   esp
  42aa2e:	push   esp
  42aa2f:	add    BYTE PTR [esi+0x0],dl
  42aa32:	dec    edi
  42aa33:	add    BYTE PTR [edi+0x0],al
  42aa36:	add    BYTE PTR ss:[edi+0x0],bl
  42aa3a:	dec    edi
  42aa3b:	add    BYTE PTR [edx+0x0],bl
  42aa3e:	inc    ebp
  42aa3f:	add    BYTE PTR [eax],dh
  42aa41:	add    BYTE PTR [ebp+0x0],al
  42aa44:	xor    BYTE PTR [eax],al
  42aa46:	pop    edi
  42aa47:	add    BYTE PTR [eax],dh
  42aa49:	add    BYTE PTR ds:0x4f000000,dh
  42aa4f:	add    BYTE PTR ds:0x5f005700,dh
  42aa55:	add    BYTE PTR [edi],dh
  42aa57:	add    BYTE PTR [ebx+0x0],dl
  42aa5a:	push   ebp
  42aa5b:	add    BYTE PTR [edi+0x0],al
  42aa5e:	xor    al,0x0
  42aa60:	pop    edi
  42aa61:	add    BYTE PTR [ecx+0x0],dl
  42aa64:	inc    esp
  42aa65:	add    BYTE PTR [eax],al
  42aa67:	add    BYTE PTR [edx+0x0],dl
  42aa6a:	push   esp
  42aa6b:	add    BYTE PTR ds:0x52005f00,dh
  42aa71:	add    BYTE PTR [edi+0x0],dl
  42aa74:	xor    al,BYTE PTR [eax]
  42aa76:	xor    al,BYTE PTR [eax]
  42aa78:	xor    BYTE PTR [eax],al
  42aa7a:	xor    BYTE PTR [eax],al
  42aa7c:	pop    edi
  42aa7d:	add    BYTE PTR [esi],dh
  42aa7f:	add    BYTE PTR [eax],al
  42aa81:	add    BYTE PTR [eax+0x0],cl
  42aa84:	inc    ebp
  42aa85:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa89:	add    BYTE PTR [edi+0x0],bl
  42aa8c:	dec    edx
  42aa8d:	add    BYTE PTR [edx],dh
  42aa8f:	add    BYTE PTR [edi],dh
  42aa91:	add    BYTE PTR [ebp+0x0],dl
  42aa94:	add    BYTE PTR ss:[eax],dh
  42aa97:	add    BYTE PTR [eax],al
  42aa99:	add    BYTE PTR [esi+0x0],dl
  42aa9c:	cmp    BYTE PTR [eax],al
  42aa9e:	dec    edi
  42aa9f:	add    BYTE PTR [ecx],bh
  42aaa1:	add    BYTE PTR [edi+0x0],bl
  42aaa4:	pop    eax
  42aaa5:	add    BYTE PTR [edx+0x0],bl
  42aaa8:	dec    esp
  42aaa9:	add    BYTE PTR [ebx+0x0],cl
  42aaac:	add    BYTE PTR [eax],al
  42aaae:	dec    ecx
  42aaaf:	add    BYTE PTR [ebp+0x0],dl
  42aab2:	dec    edi
  42aab3:	add    BYTE PTR [eax],bh
  42aab5:	add    BYTE PTR [edi+0x0],bl
  42aab8:	inc    esp
  42aab9:	add    BYTE PTR [eax],bh
  42aabb:	add    BYTE PTR [ecx+0x0],cl
  42aabe:	dec    eax
  42aabf:	add    BYTE PTR [edi+0x0],cl
  42aac2:	pop    edi
  42aac3:	add    BYTE PTR [ebp+0x0],al
  42aac6:	pop    eax
  42aac7:	add    BYTE PTR [eax],al
  42aac9:	add    BYTE PTR [edx+0x0],dl
  42aacc:	dec    esp
  42aacd:	add    BYTE PTR [esi],dh
  42aacf:	add    BYTE PTR [edi+0x0],bl
  42aad2:	aaa    
  42aad3:	add    BYTE PTR [eax+0x0],bl
  42aad6:	xor    eax,DWORD PTR [eax]
  42aad8:	inc    edi
  42aad9:	add    BYTE PTR [ecx+0x0],dl
  42aadc:	pop    edi
  42aadd:	add    BYTE PTR [edx+0x0],cl
  42aae0:	add    BYTE PTR [eax],al
  42aae2:	inc    edi
  42aae3:	add    BYTE PTR [edi+0x0],cl
  42aae6:	push   ebx
  42aae7:	add    BYTE PTR [eax+eax*1],dh
  42aaea:	pop    edi
  42aaeb:	add    BYTE PTR [ecx+0x0],cl
  42aaee:	xor    DWORD PTR [eax],eax
  42aaf0:	push   esi
  42aaf1:	add    BYTE PTR [ebx],dh
  42aaf3:	add    BYTE PTR [edi+0x0],bl
  42aaf6:	dec    ecx
  42aaf7:	add    BYTE PTR [edx+0x0],bl
  42aafa:	add    BYTE PTR [eax],al
  42aafc:	inc    ebx
  42aafd:	add    BYTE PTR [ecx+0x0],bl
  42ab00:	inc    ecx
  42ab01:	add    BYTE PTR [eax],dh
  42ab03:	add    BYTE PTR [ecx],bh
  42ab05:	add    BYTE PTR [edi+0x0],bl
  42ab08:	cmp    DWORD PTR [eax],eax
  42ab0a:	push   eax
  42ab0b:	add    BYTE PTR [eax+eax*1],dh
  42ab0e:	pop    edx
  42ab0f:	add    BYTE PTR [eax],al
  42ab11:	add    BYTE PTR [edx+0x0],al
  42ab14:	inc    esi
  42ab15:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ab19:	add    BYTE PTR [ebp+0x0],dl
  42ab1c:	push   ebp
  42ab1d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab21:	add    BYTE PTR [eax],al
  42ab23:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab27:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab2b:	add    BYTE PTR [edi+0x0],bl
  42ab2e:	xor    eax,DWORD PTR [eax]
  42ab30:	cmp    DWORD PTR [eax],eax
  42ab32:	dec    eax
  42ab33:	add    BYTE PTR [edi+0x0],bl
  42ab36:	dec    ebp
  42ab37:	add    BYTE PTR [ecx+0x0],bl
  42ab3a:	cmp    DWORD PTR [eax],eax
  42ab3c:	inc    ecx
  42ab3d:	add    BYTE PTR [esi+0x0],cl
  42ab40:	add    BYTE PTR [eax],al
  42ab42:	inc    ebx
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	dec    esi
  42ab47:	add    BYTE PTR [eax+eax*1],dh
  42ab4a:	pop    edi
  42ab4b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab4f:	add    BYTE PTR [ebx+0x0],cl
  42ab52:	xor    DWORD PTR [eax],eax
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	inc    ecx
  42ab57:	add    BYTE PTR [edi],dh
  42ab59:	add    BYTE PTR [edx+0x0],cl
  42ab5c:	pop    edi
  42ab5d:	add    BYTE PTR [ebx+0x0],al
  42ab60:	cmp    BYTE PTR [eax],al
  42ab62:	push   edi
  42ab63:	add    BYTE PTR [eax+0x0],dl
  42ab66:	pop    edi
  42ab67:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab6b:	add    BYTE PTR [edx],dh
  42ab6d:	add    BYTE PTR [eax],al
  42ab6f:	add    BYTE PTR [edx+0x0],al
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	push   edx
  42ab75:	push   ebx
  42ab76:	inc    esp
  42ab77:	push   ebx
  42ab78:	ret    
  42ab79:	fwait
  42ab7a:	xor    BYTE PTR [edx],dh
  42ab7c:	(bad)  
  42ab7d:	and    cl,BYTE PTR [ebx+0x44]
  42ab80:	stos   DWORD PTR es:[edi],eax
  42ab81:	jnp    0x42ac02
  42ab83:	add    dh,BYTE PTR [ecx+0x1c93bf3f]
  42ab89:	add    BYTE PTR [eax],al
  42ab8b:	add    BYTE PTR [ecx+0x3a],dl
  42ab8e:	pop    esp
  42ab8f:	outs   dx,DWORD PTR ds:[esi]
  42ab90:	push   ecx
  42ab91:	js     0x42abe8
  42ab93:	jbe    0x42ac07
  42ab95:	arpl   WORD PTR [esi+0x75],dx
  42ab98:	popa   
  42ab99:	push   esi
  42ab9a:	pop    esp
  42ab9b:	outs   dx,DWORD PTR ds:[esi]
  42ab9c:	ins    DWORD PTR es:[edi],dx
  42ab9d:	dec    eax
  42ab9e:	inc    edi
  42ab9f:	push   0x6c445178
  42aba4:	jbe    0x42ac17
  42aba6:	pop    esp
  42aba7:	push   0x70
  42aba9:	js     0x42ac0c
  42abab:	ins    BYTE PTR es:[edi],dx
  42abac:	ins    BYTE PTR es:[edi],dx
  42abad:	dec    eax
  42abae:	addr16 pop esp
  42abb0:	push   0x4a
  42abb2:	jb     0x42ac16
  42abb4:	push   esp
  42abb5:	ins    DWORD PTR es:[edi],dx
  42abb6:	push   edx
  42abb7:	bound  eax,QWORD PTR [edi+0x6d]
  42abba:	push   eax
  42abbb:	arpl   WORD PTR [esi+0x77],ax
  42abbe:	pop    esp
  42abbf:	jo     0x42ac2b
  42abc1:	dec    ecx
  42abc2:	inc    ebp
  42abc3:	push   bp
  42abc5:	ins    BYTE PTR es:[edi],dx
  42abc6:	inc    ebp
  42abc7:	dec    ebp
  42abc8:	jne    0x42ac41
  42abca:	jbe    0x42ac15
  42abcc:	cs jo  0x42ac33
  42abcf:	bound  eax,QWORD PTR [eax]
	...
